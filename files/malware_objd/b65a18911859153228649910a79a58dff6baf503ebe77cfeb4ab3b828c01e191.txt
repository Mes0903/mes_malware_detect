
b65a18911859153228649910a79a58dff6baf503ebe77cfeb4ab3b828c01e191.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    DWORD PTR ds:0x447958,0x401b6c
  40100d:	pop    ebp
  40100e:	ret    
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    DWORD PTR ds:0x447958,0x4400fe
  40101d:	pop    ebp
  40101e:	ret    
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x8
  401036:	mov    DWORD PTR [ebp-0x4],0x0
  40103d:	jmp    0x401048
  40103f:	mov    eax,DWORD PTR [ebp-0x4]
  401042:	add    eax,0x1
  401045:	mov    DWORD PTR [ebp-0x4],eax
  401048:	mov    ecx,DWORD PTR [ebp-0x4]
  40104b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40104e:	jae    0x40109b
  401050:	mov    edx,DWORD PTR [ebp-0x4]
  401053:	mov    eax,DWORD PTR [ebp+0xc]
  401056:	movzx  ecx,WORD PTR [eax+edx*2]
  40105a:	sar    ecx,0xc
  40105d:	cmp    ecx,0x3
  401060:	jne    0x401099
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	mov    eax,DWORD PTR [ebp+0xc]
  401068:	movzx  ecx,WORD PTR [eax+edx*2]
  40106c:	and    ecx,0xfff
  401072:	add    ecx,0x43
  401075:	mov    DWORD PTR [ebp-0x8],ecx
  401078:	mov    edx,DWORD PTR [ebp+0x18]
  40107b:	mov    eax,DWORD PTR [ebp+0x10]
  40107e:	add    eax,DWORD PTR [edx]
  401080:	mov    ecx,DWORD PTR [ebp-0x8]
  401083:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  401087:	add    edx,DWORD PTR [ebp+0x14]
  40108a:	mov    eax,DWORD PTR [ebp+0x18]
  40108d:	mov    ecx,DWORD PTR [ebp+0x10]
  401090:	add    ecx,DWORD PTR [eax]
  401092:	mov    eax,DWORD PTR [ebp-0x8]
  401095:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  401099:	jmp    0x40103f
  40109b:	mov    esp,ebp
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	sub    esp,0x14
  4010a6:	mov    eax,DWORD PTR [ebp+0x8]
  4010a9:	cmp    DWORD PTR [eax+0x4],0x0
  4010ad:	je     0x4010f7
  4010af:	mov    DWORD PTR [ebp-0x14],0x2a1
  4010b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010b9:	mov    edx,DWORD PTR [ecx+0x4]
  4010bc:	sub    edx,0x8
  4010bf:	shr    edx,1
  4010c1:	mov    DWORD PTR [ebp-0xc],edx
  4010c4:	mov    eax,DWORD PTR [ebp+0x8]
  4010c7:	add    eax,0x8
  4010ca:	mov    DWORD PTR [ebp-0x10],eax
  4010cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4010d0:	push   ecx
  4010d1:	mov    edx,DWORD PTR [ebp+0x10]
  4010d4:	push   edx
  4010d5:	mov    eax,DWORD PTR [ebp+0xc]
  4010d8:	push   eax
  4010d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4010dc:	push   ecx
  4010dd:	mov    edx,DWORD PTR [ebp-0xc]
  4010e0:	push   edx
  4010e1:	call   0x401030
  4010e6:	add    esp,0x14
  4010e9:	mov    eax,DWORD PTR [ebp+0x8]
  4010ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ef:	add    ecx,DWORD PTR [eax+0x4]
  4010f2:	mov    DWORD PTR [ebp+0x8],ecx
  4010f5:	jmp    0x4010a6
  4010f7:	mov    esp,ebp
  4010f9:	pop    ebp
  4010fa:	ret    
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	pop    ebp
  401104:	ret    
  401105:	int3   
  401106:	int3   
  401107:	int3   
  401108:	int3   
  401109:	int3   
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	push   ecx
  401114:	mov    DWORD PTR [ebp-0x4],0x4
  40111b:	push   0x40
  40111d:	push   0x3000
  401122:	mov    eax,DWORD PTR [ebp+0x8]
  401125:	push   eax
  401126:	push   0x0
  401128:	call   DWORD PTR ds:0x443df4
  40112e:	mov    esp,ebp
  401130:	pop    ebp
  401131:	ret    
  401132:	int3   
  401133:	int3   
  401134:	int3   
  401135:	int3   
  401136:	int3   
  401137:	int3   
  401138:	int3   
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	int3   
  40113d:	int3   
  40113e:	int3   
  40113f:	int3   
  401140:	push   ebp
  401141:	mov    ebp,esp
  401143:	pop    ebp
  401144:	ret    
  401145:	int3   
  401146:	int3   
  401147:	int3   
  401148:	int3   
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	sub    esp,0x8
  401156:	mov    eax,DWORD PTR [ebp+0x8]
  401159:	mov    DWORD PTR [ebp-0x4],eax
  40115c:	mov    ecx,DWORD PTR [ebp+0xc]
  40115f:	mov    DWORD PTR [ebp-0x8],ecx
  401162:	mov    edx,DWORD PTR [ebp-0x4]
  401165:	cmp    edx,DWORD PTR [ebp-0x8]
  401168:	jae    0x401171
  40116a:	mov    eax,DWORD PTR [ebp-0x4]
  40116d:	jmp    0x401174
  40116f:	jmp    0x401174
  401171:	mov    eax,DWORD PTR [ebp-0x8]
  401174:	mov    esp,ebp
  401176:	pop    ebp
  401177:	ret    
  401178:	int3   
  401179:	int3   
  40117a:	int3   
  40117b:	int3   
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebp
  401181:	mov    ebp,esp
  401183:	sub    esp,0x13c
  401189:	mov    DWORD PTR [ebp-0x11c],0x37
  401193:	mov    eax,ds:0x443df8
  401198:	mov    DWORD PTR [ebp-0x4],eax
  40119b:	push   0x44306c
  4011a0:	push   0x443078
  4011a5:	call   DWORD PTR ds:0x443dfc
  4011ab:	push   eax
  4011ac:	call   DWORD PTR ds:0x443e00
  4011b2:	mov    DWORD PTR [ebp-0x124],eax
  4011b8:	mov    ecx,DWORD PTR ds:0x443e04
  4011be:	mov    DWORD PTR [ebp-0x120],ecx
  4011c4:	mov    edx,DWORD PTR ds:0x443e08
  4011ca:	mov    DWORD PTR [ebp-0x114],edx
  4011d0:	mov    DWORD PTR [ebp-0x12c],0x0
  4011da:	jmp    0x4011eb
  4011dc:	mov    eax,DWORD PTR [ebp-0x12c]
  4011e2:	add    eax,0x4
  4011e5:	mov    DWORD PTR [ebp-0x12c],eax
  4011eb:	mov    ecx,DWORD PTR [ebp-0x12c]
  4011f1:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011f4:	jae    0x4012fc
  4011fa:	mov    DWORD PTR [ebp-0x11c],0x1425
  401204:	mov    DWORD PTR [ebp-0x11c],0x37
  40120e:	mov    edx,DWORD PTR [ebp-0x12c]
  401214:	add    edx,0x29d
  40121a:	mov    DWORD PTR ds:0x44795c,edx
  401220:	mov    eax,DWORD PTR [ebp+0x8]
  401223:	add    eax,DWORD PTR [ebp-0x12c]
  401229:	mov    ecx,DWORD PTR [eax]
  40122b:	add    ecx,DWORD PTR [ebp-0x12c]
  401231:	mov    edx,DWORD PTR [ebp+0x8]
  401234:	add    edx,DWORD PTR [ebp-0x12c]
  40123a:	mov    DWORD PTR [edx],ecx
  40123c:	mov    eax,DWORD PTR [ebp-0x128]
  401242:	mov    DWORD PTR [ebp-0x130],eax
  401248:	mov    DWORD PTR [ebp-0x11c],0x1425
  401252:	mov    ecx,DWORD PTR ds:0x44795c
  401258:	mov    DWORD PTR [ebp-0x13c],ecx
  40125e:	mov    edx,DWORD PTR [ebp-0x13c]
  401264:	mov    DWORD PTR [ebp-0x138],edx
  40126a:	mov    eax,DWORD PTR [ebp-0x138]
  401270:	mov    DWORD PTR [ebp-0x134],eax
  401276:	cmp    DWORD PTR [ebp-0x12c],0x0
  40127d:	jne    0x4012db
  40127f:	push   0x104
  401284:	lea    ecx,[ebp-0x110]
  40128a:	push   ecx
  40128b:	call   DWORD PTR [ebp-0x4]
  40128e:	push   0x443084
  401293:	lea    edx,[ebp-0x110]
  401299:	push   edx
  40129a:	call   DWORD PTR [ebp-0x120]
  4012a0:	push   0x0
  4012a2:	push   0x80
  4012a7:	push   0x3
  4012a9:	push   0x0
  4012ab:	push   0x3
  4012ad:	push   0x1
  4012af:	lea    eax,[ebp-0x110]
  4012b5:	push   eax
  4012b6:	call   DWORD PTR [ebp-0x114]
  4012bc:	mov    DWORD PTR [ebp-0x118],eax
  4012c2:	cmp    DWORD PTR [ebp-0x118],0xffffffff
  4012c9:	je     0x4012d4
  4012cb:	cmp    DWORD PTR [ebp-0x118],0x0
  4012d2:	jne    0x4012db
  4012d4:	mov    eax,0x42
  4012d9:	jmp    0x4012fc
  4012db:	mov    ecx,DWORD PTR [ebp+0x8]
  4012de:	add    ecx,DWORD PTR [ebp-0x12c]
  4012e4:	mov    edx,DWORD PTR [ecx]
  4012e6:	xor    edx,DWORD PTR [ebp-0x134]
  4012ec:	mov    eax,DWORD PTR [ebp+0x8]
  4012ef:	add    eax,DWORD PTR [ebp-0x12c]
  4012f5:	mov    DWORD PTR [eax],edx
  4012f7:	jmp    0x4011dc
  4012fc:	mov    esp,ebp
  4012fe:	pop    ebp
  4012ff:	ret    
  401300:	push   ebp
  401301:	mov    ebp,esp
  401303:	sub    esp,0x5c
  401306:	xor    eax,eax
  401308:	jmp    0x40146f
  40130d:	mov    eax,DWORD PTR [ebp+0xc]
  401310:	mov    DWORD PTR [ebp-0x5c],eax
  401313:	cmp    DWORD PTR [ebp-0x5c],0x1
  401317:	je     0x401332
  401319:	cmp    DWORD PTR [ebp-0x5c],0x2
  40131d:	je     0x401440
  401323:	cmp    DWORD PTR [ebp-0x5c],0xf
  401327:	je     0x4013b9
  40132d:	jmp    0x401459
  401332:	push   0x0
  401334:	push   0x0
  401336:	push   0x0
  401338:	push   0x0
  40133a:	call   DWORD PTR ds:0x44436c
  401340:	mov    DWORD PTR [ebp-0x54],eax
  401343:	push   0xc8
  401348:	push   0xc8
  40134d:	push   0x64
  40134f:	push   0x64
  401351:	mov    ecx,DWORD PTR [ebp-0x54]
  401354:	push   ecx
  401355:	call   DWORD PTR ds:0x444370
  40135b:	push   0x0
  40135d:	push   0x64
  40135f:	push   0x64
  401361:	mov    edx,DWORD PTR [ebp-0x54]
  401364:	push   edx
  401365:	call   DWORD PTR ds:0x444374
  40136b:	push   0xc8
  401370:	push   0xc8
  401375:	mov    eax,DWORD PTR [ebp-0x54]
  401378:	push   eax
  401379:	call   DWORD PTR ds:0x444378
  40137f:	push   0x0
  401381:	push   0x64
  401383:	push   0xc8
  401388:	mov    ecx,DWORD PTR [ebp-0x54]
  40138b:	push   ecx
  40138c:	call   DWORD PTR ds:0x444374
  401392:	push   0xc8
  401397:	push   0x64
  401399:	mov    edx,DWORD PTR [ebp-0x54]
  40139c:	push   edx
  40139d:	call   DWORD PTR ds:0x444378
  4013a3:	mov    eax,DWORD PTR [ebp-0x54]
  4013a6:	push   eax
  4013a7:	call   DWORD PTR ds:0x44437c
  4013ad:	mov    ds:0x44794c,eax
  4013b2:	xor    eax,eax
  4013b4:	jmp    0x40146f
  4013b9:	lea    ecx,[ebp-0x50]
  4013bc:	push   ecx
  4013bd:	mov    edx,DWORD PTR [ebp+0x8]
  4013c0:	push   edx
  4013c1:	call   DWORD PTR ds:0x4440c0
  4013c7:	mov    DWORD PTR [ebp-0x58],eax
  4013ca:	lea    eax,[ebp-0x10]
  4013cd:	push   eax
  4013ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d1:	push   ecx
  4013d2:	call   DWORD PTR ds:0x4440c4
  4013d8:	mov    eax,DWORD PTR [ebp-0x8]
  4013db:	cdq    
  4013dc:	and    edx,0x3
  4013df:	add    eax,edx
  4013e1:	sar    eax,0x2
  4013e4:	mov    DWORD PTR [ebp-0x10],eax
  4013e7:	mov    eax,DWORD PTR [ebp-0x8]
  4013ea:	imul   eax,eax,0x3
  4013ed:	cdq    
  4013ee:	and    edx,0x3
  4013f1:	add    eax,edx
  4013f3:	sar    eax,0x2
  4013f6:	mov    DWORD PTR [ebp-0x8],eax
  4013f9:	mov    eax,DWORD PTR [ebp-0x4]
  4013fc:	cdq    
  4013fd:	and    edx,0x3
  401400:	add    eax,edx
  401402:	sar    eax,0x2
  401405:	mov    DWORD PTR [ebp-0xc],eax
  401408:	mov    eax,DWORD PTR [ebp-0x4]
  40140b:	imul   eax,eax,0x3
  40140e:	cdq    
  40140f:	and    edx,0x3
  401412:	add    eax,edx
  401414:	sar    eax,0x2
  401417:	mov    DWORD PTR [ebp-0x4],eax
  40141a:	lea    edx,[ebp-0x10]
  40141d:	push   edx
  40141e:	mov    eax,ds:0x44794c
  401423:	push   eax
  401424:	mov    ecx,DWORD PTR [ebp-0x58]
  401427:	push   ecx
  401428:	call   DWORD PTR ds:0x444380
  40142e:	lea    edx,[ebp-0x50]
  401431:	push   edx
  401432:	mov    eax,DWORD PTR [ebp+0x8]
  401435:	push   eax
  401436:	call   DWORD PTR ds:0x4440c8
  40143c:	xor    eax,eax
  40143e:	jmp    0x40146f
  401440:	mov    ecx,DWORD PTR ds:0x44794c
  401446:	push   ecx
  401447:	call   DWORD PTR ds:0x444384
  40144d:	push   0x0
  40144f:	call   DWORD PTR ds:0x4440cc
  401455:	xor    eax,eax
  401457:	jmp    0x40146f
  401459:	mov    edx,DWORD PTR [ebp+0x14]
  40145c:	push   edx
  40145d:	mov    eax,DWORD PTR [ebp+0x10]
  401460:	push   eax
  401461:	mov    ecx,DWORD PTR [ebp+0xc]
  401464:	push   ecx
  401465:	mov    edx,DWORD PTR [ebp+0x8]
  401468:	push   edx
  401469:	call   DWORD PTR ds:0x4440d0
  40146f:	mov    esp,ebp
  401471:	pop    ebp
  401472:	ret    0x10
  401475:	int3   
  401476:	int3   
  401477:	int3   
  401478:	int3   
  401479:	int3   
  40147a:	int3   
  40147b:	int3   
  40147c:	int3   
  40147d:	int3   
  40147e:	int3   
  40147f:	int3   
  401480:	push   ebp
  401481:	mov    ebp,esp
  401483:	sub    esp,0x1bc
  401489:	pusha  
  40148a:	mov    DWORD PTR ds:0x447960,ebp
  401490:	push   0x104
  401495:	lea    eax,[ebp-0x110]
  40149b:	push   eax
  40149c:	call   DWORD PTR ds:0x443df8
  4014a2:	mov    DWORD PTR [ebp-0x14c],0x30
  4014ac:	mov    DWORD PTR [ebp-0x148],0x3
  4014b6:	mov    DWORD PTR [ebp-0x144],0x401300
  4014c0:	mov    DWORD PTR [ebp-0x140],0x0
  4014ca:	mov    DWORD PTR [ebp-0x13c],0x0
  4014d4:	mov    DWORD PTR [ebp-0x138],0x2
  4014de:	push   0x7f00
  4014e3:	push   0x0
  4014e5:	call   DWORD PTR ds:0x4440d4
  4014eb:	mov    DWORD PTR [ebp-0x134],eax
  4014f1:	push   0x7f00
  4014f6:	push   0x0
  4014f8:	call   DWORD PTR ds:0x4440d8
  4014fe:	mov    DWORD PTR [ebp-0x130],eax
  401504:	push   0x0
  401506:	call   DWORD PTR ds:0x444388
  40150c:	mov    DWORD PTR [ebp-0x12c],eax
  401512:	mov    DWORD PTR [ebp-0x128],0x0
  40151c:	mov    DWORD PTR [ebp-0x124],0x44309c
  401526:	push   0x7f00
  40152b:	push   0x0
  40152d:	call   DWORD PTR ds:0x4440d4
  401533:	mov    DWORD PTR [ebp-0x120],eax
  401539:	lea    ecx,[ebp-0x14c]
  40153f:	push   ecx
  401540:	call   DWORD PTR ds:0x4440dc
  401546:	push   0x0
  401548:	push   0x2
  40154a:	push   0x0
  40154c:	push   0x0
  40154e:	push   0x80000000
  401553:	push   0x80000000
  401558:	push   0x80000000
  40155d:	push   0x80000000
  401562:	push   0xcf0000
  401567:	push   0x4430a8
  40156c:	push   0x44309c
  401571:	push   0x0
  401573:	call   DWORD PTR ds:0x4440e0
  401579:	mov    DWORD PTR [ebp-0x18c],eax
  40157f:	mov    DWORD PTR [ebp-0x194],0x0
  401589:	mov    edx,DWORD PTR ds:0x443e08
  40158f:	mov    DWORD PTR [ebp-0x1a8],edx
  401595:	mov    DWORD PTR [ebp-0x114],0x0
  40159f:	mov    DWORD PTR [ebp-0x188],0x64
  4015a9:	mov    DWORD PTR [ebp-0x11c],0x2
  4015b3:	mov    DWORD PTR [ebp-0x194],0x0
  4015bd:	mov    DWORD PTR [ebp-0x154],0x0
  4015c7:	mov    DWORD PTR [ebp-0x184],0x1
  4015d1:	mov    DWORD PTR [ebp-0x118],0x3
  4015db:	mov    DWORD PTR [ebp-0x114],0x0
  4015e5:	mov    DWORD PTR [ebp-0x188],0x64
  4015ef:	mov    DWORD PTR [ebp-0x11c],0x2
  4015f9:	mov    DWORD PTR [ebp-0x194],0x0
  401603:	mov    DWORD PTR [ebp-0x154],0x0
  40160d:	mov    DWORD PTR [ebp-0x184],0x1
  401617:	mov    DWORD PTR [ebp-0x118],0x3
  401621:	mov    DWORD PTR [ebp-0x114],0x0
  40162b:	mov    DWORD PTR [ebp-0x188],0x64
  401635:	mov    DWORD PTR [ebp-0x11c],0x2
  40163f:	mov    DWORD PTR [ebp-0x194],0x0
  401649:	mov    DWORD PTR [ebp-0x154],0x0
  401653:	mov    DWORD PTR [ebp-0x184],0x1
  40165d:	mov    DWORD PTR [ebp-0x118],0x3
  401667:	push   0x104
  40166c:	lea    eax,[ebp-0x110]
  401672:	push   eax
  401673:	call   DWORD PTR ds:0x443df8
  401679:	call   0x401ac0
  40167e:	push   0x4430b0
  401683:	push   0x4430c0
  401688:	call   DWORD PTR ds:0x443dfc
  40168e:	push   eax
  40168f:	call   DWORD PTR ds:0x443e00
  401695:	mov    DWORD PTR [ebp-0x17c],eax
  40169b:	lea    ecx,[ebp-0x158]
  4016a1:	push   ecx
  4016a2:	push   0x20019
  4016a7:	push   0x0
  4016a9:	push   0x4430cc
  4016ae:	push   0x80000002
  4016b3:	call   DWORD PTR [ebp-0x17c]
  4016b9:	test   eax,eax
  4016bb:	je     0x4016cc
  4016bd:	push   0x4
  4016bf:	call   DWORD PTR ds:0x443e0c
  4016c5:	xor    eax,eax
  4016c7:	jmp    0x401ab6
  4016cc:	lea    edx,[ebp-0x158]
  4016d2:	push   edx
  4016d3:	push   0x20019
  4016d8:	push   0x0
  4016da:	push   0x4430e0
  4016df:	mov    eax,DWORD PTR [ebp-0x158]
  4016e5:	push   eax
  4016e6:	call   DWORD PTR [ebp-0x17c]
  4016ec:	test   eax,eax
  4016ee:	je     0x4016ff
  4016f0:	push   0x4
  4016f2:	call   DWORD PTR ds:0x443e0c
  4016f8:	xor    eax,eax
  4016fa:	jmp    0x401ab6
  4016ff:	lea    ecx,[ebp-0x158]
  401705:	push   ecx
  401706:	push   0x20019
  40170b:	push   0x0
  40170d:	push   0x4430f0
  401712:	mov    edx,DWORD PTR [ebp-0x158]
  401718:	push   edx
  401719:	call   DWORD PTR [ebp-0x17c]
  40171f:	test   eax,eax
  401721:	je     0x401732
  401723:	push   0x4
  401725:	call   DWORD PTR ds:0x443e0c
  40172b:	xor    eax,eax
  40172d:	jmp    0x401ab6
  401732:	lea    eax,[ebp-0x158]
  401738:	push   eax
  401739:	push   0x20019
  40173e:	push   0x0
  401740:	push   0x447950
  401745:	mov    ecx,DWORD PTR [ebp-0x158]
  40174b:	push   ecx
  40174c:	call   DWORD PTR [ebp-0x17c]
  401752:	test   eax,eax
  401754:	je     0x401765
  401756:	push   0x4
  401758:	call   DWORD PTR ds:0x443e0c
  40175e:	xor    eax,eax
  401760:	jmp    0x401ab6
  401765:	lea    edx,[ebp-0x158]
  40176b:	push   edx
  40176c:	push   0x20019
  401771:	push   0x0
  401773:	push   0x447954
  401778:	mov    eax,DWORD PTR [ebp-0x158]
  40177e:	push   eax
  40177f:	call   DWORD PTR [ebp-0x17c]
  401785:	test   eax,eax
  401787:	je     0x401798
  401789:	push   0x4
  40178b:	call   DWORD PTR ds:0x443e0c
  401791:	xor    eax,eax
  401793:	jmp    0x401ab6
  401798:	lea    ecx,[ebp-0x158]
  40179e:	push   ecx
  40179f:	push   0x20019
  4017a4:	push   0x0
  4017a6:	push   0x443110
  4017ab:	mov    edx,DWORD PTR [ebp-0x158]
  4017b1:	push   edx
  4017b2:	call   DWORD PTR [ebp-0x17c]
  4017b8:	test   eax,eax
  4017ba:	je     0x4017cb
  4017bc:	push   0x4
  4017be:	call   DWORD PTR ds:0x443e0c
  4017c4:	xor    eax,eax
  4017c6:	jmp    0x401ab6
  4017cb:	lea    eax,[ebp-0x158]
  4017d1:	push   eax
  4017d2:	push   0x20019
  4017d7:	push   0x0
  4017d9:	push   0x4430fc
  4017de:	mov    ecx,DWORD PTR [ebp-0x158]
  4017e4:	push   ecx
  4017e5:	call   DWORD PTR [ebp-0x17c]
  4017eb:	test   eax,eax
  4017ed:	jne    0x4017fe
  4017ef:	push   0x4
  4017f1:	call   DWORD PTR ds:0x443e0c
  4017f7:	xor    eax,eax
  4017f9:	jmp    0x401ab6
  4017fe:	call   0x401000
  401803:	mov    edx,DWORD PTR ds:0x447958
  401809:	push   edx
  40180a:	call   0x401020
  40180f:	add    esp,0x4
  401812:	mov    DWORD PTR [ebp-0x198],eax
  401818:	mov    eax,DWORD PTR [ebp-0x198]
  40181e:	push   eax
  40181f:	call   0x401110
  401824:	add    esp,0x4
  401827:	mov    DWORD PTR [ebp-0x190],eax
  40182d:	mov    ecx,DWORD PTR [ebp-0x198]
  401833:	push   ecx
  401834:	push   0x0
  401836:	mov    edx,DWORD PTR [ebp-0x190]
  40183c:	push   edx
  40183d:	call   0x401140
  401842:	add    esp,0xc
  401845:	mov    eax,DWORD PTR [ebp-0x198]
  40184b:	mov    DWORD PTR [ebp-0x1a0],eax
  401851:	mov    ecx,DWORD PTR [ebp-0x194]
  401857:	cmp    ecx,DWORD PTR [ebp-0x198]
  40185d:	jae    0x4018e9
  401863:	mov    edx,DWORD PTR [ebp-0x1a0]
  401869:	push   edx
  40186a:	mov    eax,DWORD PTR [ebp-0x188]
  401870:	push   eax
  401871:	call   0x401150
  401876:	add    esp,0x8
  401879:	mov    DWORD PTR [ebp-0x1a4],eax
  40187f:	mov    ecx,DWORD PTR [ebp-0x1a4]
  401885:	push   ecx
  401886:	mov    edx,DWORD PTR ds:0x447958
  40188c:	add    edx,DWORD PTR [ebp-0x154]
  401892:	push   edx
  401893:	mov    eax,DWORD PTR [ebp-0x190]
  401899:	add    eax,DWORD PTR [ebp-0x194]
  40189f:	push   eax
  4018a0:	call   0x44222a
  4018a5:	add    esp,0xc
  4018a8:	mov    ecx,DWORD PTR [ebp-0x11c]
  4018ae:	add    ecx,DWORD PTR [ebp-0x188]
  4018b4:	add    ecx,DWORD PTR [ebp-0x154]
  4018ba:	mov    DWORD PTR [ebp-0x154],ecx
  4018c0:	mov    edx,DWORD PTR [ebp-0x194]
  4018c6:	add    edx,DWORD PTR [ebp-0x188]
  4018cc:	mov    DWORD PTR [ebp-0x194],edx
  4018d2:	mov    eax,DWORD PTR [ebp-0x1a0]
  4018d8:	sub    eax,DWORD PTR [ebp-0x1a4]
  4018de:	mov    DWORD PTR [ebp-0x1a0],eax
  4018e4:	jmp    0x401851
  4018e9:	mov    ecx,DWORD PTR [ebp-0x198]
  4018ef:	push   ecx
  4018f0:	mov    edx,DWORD PTR [ebp-0x190]
  4018f6:	push   edx
  4018f7:	call   0x401180
  4018fc:	add    esp,0x8
  4018ff:	mov    DWORD PTR [ebp-0x154],0x0
  401909:	mov    DWORD PTR [ebp-0x1ac],0x0
  401913:	call   0x401010
  401918:	mov    eax,ds:0x447958
  40191d:	push   eax
  40191e:	call   0x401020
  401923:	add    esp,0x4
  401926:	mov    DWORD PTR [ebp-0x1b0],eax
  40192c:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401932:	push   ecx
  401933:	call   0x401110
  401938:	add    esp,0x4
  40193b:	mov    DWORD PTR [ebp-0x150],eax
  401941:	mov    edx,DWORD PTR [ebp-0x1b0]
  401947:	push   edx
  401948:	push   0x0
  40194a:	mov    eax,DWORD PTR [ebp-0x150]
  401950:	push   eax
  401951:	call   0x401140
  401956:	add    esp,0xc
  401959:	mov    ecx,DWORD PTR [ebp-0x1b0]
  40195f:	mov    DWORD PTR [ebp-0x1b8],ecx
  401965:	mov    edx,DWORD PTR [ebp-0x1ac]
  40196b:	cmp    edx,DWORD PTR [ebp-0x1b0]
  401971:	jae    0x4019fc
  401977:	mov    eax,DWORD PTR [ebp-0x1b8]
  40197d:	push   eax
  40197e:	mov    ecx,DWORD PTR [ebp-0x188]
  401984:	push   ecx
  401985:	call   0x401150
  40198a:	add    esp,0x8
  40198d:	mov    DWORD PTR [ebp-0x1bc],eax
  401993:	mov    edx,DWORD PTR [ebp-0x1bc]
  401999:	push   edx
  40199a:	mov    eax,ds:0x447958
  40199f:	add    eax,DWORD PTR [ebp-0x154]
  4019a5:	push   eax
  4019a6:	mov    ecx,DWORD PTR [ebp-0x150]
  4019ac:	add    ecx,DWORD PTR [ebp-0x1ac]
  4019b2:	push   ecx
  4019b3:	call   0x44222a
  4019b8:	add    esp,0xc
  4019bb:	mov    edx,DWORD PTR [ebp-0x11c]
  4019c1:	add    edx,DWORD PTR [ebp-0x188]
  4019c7:	add    edx,DWORD PTR [ebp-0x154]
  4019cd:	mov    DWORD PTR [ebp-0x154],edx
  4019d3:	mov    eax,DWORD PTR [ebp-0x1ac]
  4019d9:	add    eax,DWORD PTR [ebp-0x188]
  4019df:	mov    DWORD PTR [ebp-0x1ac],eax
  4019e5:	mov    ecx,DWORD PTR [ebp-0x1b8]
  4019eb:	sub    ecx,DWORD PTR [ebp-0x1bc]
  4019f1:	mov    DWORD PTR [ebp-0x1b8],ecx
  4019f7:	jmp    0x401965
  4019fc:	mov    edx,DWORD PTR [ebp-0x1b0]
  401a02:	push   edx
  401a03:	mov    eax,DWORD PTR [ebp-0x150]
  401a09:	push   eax
  401a0a:	call   0x401180
  401a0f:	add    esp,0x8
  401a12:	mov    ecx,DWORD PTR [ebp-0x190]
  401a18:	mov    edx,DWORD PTR [ebp-0x150]
  401a1e:	mov    DWORD PTR [ecx],edx
  401a20:	push   0x40000
  401a25:	call   0x401110
  401a2a:	add    esp,0x4
  401a2d:	mov    DWORD PTR [ebp-0x4],eax
  401a30:	lea    eax,[ebp-0x158]
  401a36:	push   eax
  401a37:	push   0x20019
  401a3c:	push   0x0
  401a3e:	push   0x44316c
  401a43:	push   0x80000002
  401a48:	call   DWORD PTR ds:0x4443f0
  401a4e:	test   eax,eax
  401a50:	je     0x401a56
  401a52:	xor    eax,eax
  401a54:	jmp    0x401ab6
  401a56:	push   0x3d200
  401a5b:	mov    ecx,DWORD PTR [ebp-0x190]
  401a61:	push   ecx
  401a62:	mov    edx,DWORD PTR [ebp-0x4]
  401a65:	add    edx,0x300
  401a6b:	push   edx
  401a6c:	call   0x44222a
  401a71:	add    esp,0xc
  401a74:	mov    eax,DWORD PTR [ebp-0x4]
  401a77:	sub    eax,0x400000
  401a7c:	push   eax
  401a7d:	mov    ecx,DWORD PTR [ebp-0x4]
  401a80:	push   ecx
  401a81:	mov    edx,DWORD PTR [ebp-0x150]
  401a87:	push   edx
  401a88:	call   0x4010a0
  401a8d:	add    esp,0xc
  401a90:	mov    esp,DWORD PTR ds:0x447960
  401a96:	pop    ecx
  401a97:	mov    ecx,DWORD PTR [ebp-0x4]
  401a9a:	add    ecx,0x3d190
  401aa0:	mov    edx,ecx
  401aa2:	call   0x401aa7
  401aa7:	pop    eax
  401aa8:	call   0x401aad
  401aad:	pop    eax
  401aae:	call   0x401ab3
  401ab3:	pop    eax
  401ab4:	jmp    edx
  401ab6:	mov    esp,ebp
  401ab8:	pop    ebp
  401ab9:	ret    
  401aba:	int3   
  401abb:	int3   
  401abc:	int3   
  401abd:	int3   
  401abe:	int3   
  401abf:	int3   
  401ac0:	push   ebp
  401ac1:	mov    ebp,esp
  401ac3:	mov    eax,ds:0x443014
  401ac8:	mov    BYTE PTR [eax+0x3],0x73
  401acc:	mov    ecx,DWORD PTR ds:0x443014
  401ad2:	mov    BYTE PTR [ecx+0x4],0x74
  401ad6:	mov    edx,DWORD PTR ds:0x443014
  401adc:	mov    BYTE PTR [edx+0x5],0x65
  401ae0:	mov    eax,ds:0x443014
  401ae5:	mov    BYTE PTR [eax+0x6],0x6d
  401ae9:	mov    ecx,DWORD PTR ds:0x443014
  401aef:	mov    BYTE PTR [ecx+0x7],0x33
  401af3:	mov    edx,DWORD PTR ds:0x443014
  401af9:	mov    BYTE PTR [edx+0x8],0x32
  401afd:	mov    eax,ds:0x443014
  401b02:	mov    BYTE PTR [eax+0x9],0x5c
  401b06:	mov    ecx,DWORD PTR ds:0x443014
  401b0c:	mov    BYTE PTR [ecx+0xa],0x61
  401b10:	mov    edx,DWORD PTR ds:0x443014
  401b16:	mov    BYTE PTR [edx+0xb],0x74
  401b1a:	mov    eax,ds:0x443014
  401b1f:	mov    BYTE PTR [eax+0xc],0x6c
  401b23:	mov    ecx,DWORD PTR ds:0x443014
  401b29:	mov    BYTE PTR [ecx+0xd],0x2e
  401b2d:	mov    edx,DWORD PTR ds:0x443014
  401b33:	mov    BYTE PTR [edx+0xe],0x64
  401b37:	mov    eax,ds:0x443014
  401b3c:	mov    BYTE PTR [eax+0xf],0x6c
  401b40:	mov    ecx,DWORD PTR ds:0x443014
  401b46:	mov    BYTE PTR [ecx+0x10],0x6c
  401b4a:	mov    edx,DWORD PTR ds:0x443014
  401b50:	mov    BYTE PTR [edx],0x5c
  401b53:	mov    eax,ds:0x443014
  401b58:	mov    BYTE PTR [eax+0x1],0x73
  401b5c:	mov    ecx,DWORD PTR ds:0x443014
  401b62:	mov    BYTE PTR [ecx+0x2],0x79
  401b66:	pop    ebp
  401b67:	ret    
  401b68:	add    dl,dl
  401b6a:	add    eax,DWORD PTR [eax]
  401b6c:	popf   
  401b6d:	xlat   BYTE PTR ds:[ebx]
  401b6e:	inc    ebx
  401b6f:	add    dl,ah
  401b71:	addr16 je 0x401bc4
  401b74:	iret   
  401b75:	ins    DWORD PTR es:[edi],dx
  401b76:	arpl   WORD PTR [ecx-0x3f],ax
  401b79:	data16 jb 0x401be1
  401b7c:	into   
  401b7d:	jno    0x401b7f
  401b7f:	add    cl,ch
  401b81:	ins    DWORD PTR es:[edi],dx
  401b82:	popa   
  401b83:	fs loope 0x401bf1
  401b86:	bound  esi,QWORD PTR [edx-0x44]
  401b89:	jo     0x401c04
  401b8b:	inc    ebp
  401b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8d:	inc    ebx
  401b8e:	add    BYTE PTR [eax],al
  401b90:	imul   ebp,DWORD PTR [ebp+0x61],0x626b6164
  401b97:	jb     0x401c15
  401b99:	jo     0x401c14
  401b9b:	inc    ebp
  401b9c:	test   DWORD PTR [ebp+0x0],edx
  401b9f:	add    BYTE PTR [edx+0x67],ah
  401ba2:	je     0x401bf1
  401ba4:	and    BYTE PTR [esi+0x75],0x6c
  401ba8:	or     BYTE PTR [edx+0x61],0x6e
  401bac:	jns    0x401c1c
  401bae:	gs inc ecx
  401bb0:	popf   
  401bb1:	add    al,BYTE PTR [eax]
  401bb3:	add    BYTE PTR [esi+0x70],bl
  401bb6:	gs popa 
  401bb8:	push   ecx
  401bb9:	addr16 inc esi
  401bbb:	imul   esi,DWORD PTR [ecx],0x49004167
  401bc1:	jno    0x401c37
  401bc3:	jb     0x401c03
  401bc5:	arpl   WORD PTR [ecx+eax*2-0x63],si
  401bc9:	add    al,BYTE PTR [eax]
  401bcb:	add    BYTE PTR [edx+0x67],bl
  401bce:	je     0x401c27
  401bd0:	add    BYTE PTR [eax],al
  401bd2:	add    al,0x6d
  401bd4:	outs   dx,DWORD PTR fs:[esi]
  401bd6:	or     dh,BYTE PTR [eax+0x44]
  401bd9:	imul   ecx,DWORD PTR [edi],0xf2746366
  401bdf:	jo     0x401c5a
  401be1:	inc    ecx
  401be2:	popf   
  401be3:	add    al,BYTE PTR [eax]
  401be5:	add    dl,bl
  401be7:	gs je  0x401c37
  401bea:	cli    
  401beb:	data16 jne 0x401c5a
  401bee:	clc    
  401bef:	dec    edx
  401bf0:	popa   
  401bf1:	outs   dx,BYTE PTR ds:[esi]
  401bf2:	shr    DWORD PTR [esi+0x65],0x57
  401bf6:	popf   
  401bf7:	add    al,BYTE PTR [eax]
  401bf9:	add    BYTE PTR [ecx-0x56ffc001],ah
  401bff:	(bad)  
  401c00:	aas    
  401c01:	add    BYTE PTR [ecx+0x69003fff],al
  401c07:	(bad)  
  401c08:	aas    
  401c09:	add    ch,dl
  401c0b:	(bad)  
  401c0c:	aas    
  401c0d:	add    cl,cl
  401c0f:	(bad)  
  401c10:	aas    
  401c11:	add    BYTE PTR [ebp-0x1],bh
  401c14:	aas    
  401c15:	add    BYTE PTR [ebp+0x62003fff],dl
  401c1b:	gs je  0x401c6e
  401c1e:	(bad)  
  401c1f:	imul   esp,DWORD PTR [ebx+0x41],0xffffff81
  401c23:	data16 jb 0x401c8b
  401c26:	outs   dx,BYTE PTR ds:[esi]
  401c27:	outs   dx,DWORD PTR ds:[esi]
  401c28:	add    BYTE PTR [eax],al
  401c2a:	pop    ecx
  401c2b:	imul   esp,DWORD PTR [ecx+0x64],0x51
  401c2f:	imul   esp,DWORD PTR [edx+0x72],0x4579703c
  401c36:	add    BYTE PTR [eax],al
  401c38:	push   ebp
  401c39:	inc    ecx
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	ss gs jb 0x401cae
  401c40:	cmp    BYTE PTR [esi+0x33],ch
  401c43:	xor    cl,BYTE PTR [ebx-0x6293939a]
  401c49:	add    al,BYTE PTR [eax]
  401c4b:	add    BYTE PTR [eax],bh
  401c4d:	outs   dx,DWORD PTR ds:[esi]
  401c4e:	jbe    0x401cb3
  401c50:	das    
  401c51:	jbe    0x401c81
  401c53:	or     DWORD PTR fs:[edi+0x0],ebp
  401c57:	add    BYTE PTR [eax],al
  401c59:	ins    WORD PTR es:[edi],dx
  401c5b:	jae    0x401c5d
  401c5d:	ja     0x401c5f
  401c5f:	add    al,dh
  401c61:	outs   dx,DWORD PTR ds:[esi]
  401c62:	jbe    0x401cc7
  401c64:	out    dx,eax
  401c65:	jbe    0x401c95
  401c67:	add    DWORD PTR fs:[edi+0x0],ebp
  401c6b:	add    al,bh
  401c6d:	gs ins DWORD PTR es:[edi],dx
  401c6f:	arpl   bp,bp
  401c71:	jns    0x401c73
  401c73:	add    bl,dh
  401c75:	imul   esi,DWORD PTR [edx+0x74],0x416c61c8
  401c7c:	mov    ecx,0x9d636f6e
  401c81:	add    al,BYTE PTR [eax]
  401c83:	add    bl,dl
  401c85:	imul   esi,DWORD PTR [edx+0x74],0x416c61a8
  401c8c:	mov    ecx,0x9d636f6e
  401c91:	add    al,BYTE PTR [eax]
  401c93:	add    BYTE PTR [eax+0x6c],dh
  401c96:	ins    DWORD PTR es:[edi],dx
  401c97:	popa   
  401c98:	lea    edx,[ecx+ebp*2+0x65]
  401c9c:	add    BYTE PTR [eax],al
  401c9e:	xchg   edx,eax
  401c9f:	dec    ebx
  401ca0:	inc    si
  401ca2:	je     0x401d12
  401ca4:	add    BYTE PTR gs:[ebx+0x69],dl
  401ca8:	jb     0x401d1e
  401caa:	push   0x6f506c61
  401caf:	imul   esi,DWORD PTR [ebp+eiz*2+0x7e],0x76
  401cb4:	add    BYTE PTR [eax],al
  401cb6:	gs gs popa 
  401cb9:	jo     0x401d17
  401cbb:	outs   dx,BYTE PTR ds:[esi]
  401cbc:	ins    BYTE PTR es:[edi],dx
  401cbd:	outs   dx,DWORD PTR ds:[esi]
  401cbe:	add    al,BYTE PTR ds:[eax]
  401cc1:	add    BYTE PTR [esi],dh
  401cc3:	gs jb  0x401d34
  401cc6:	inc    eax
  401cc7:	outs   dx,BYTE PTR ds:[esi]
  401cc8:	xor    esi,DWORD PTR [edx]
  401cca:	and    DWORD PTR [esi+0x6c],0x6c
  401cce:	popf   
  401ccf:	add    al,BYTE PTR [eax]
  401cd1:	add    BYTE PTR [edx+0x65],bl
  401cd4:	je     0x401d26
  401cd6:	punpckhdq mm4,QWORD PTR [ebx+0x65]
  401cda:	push   cs
  401cdb:	jbe    0x401d25
  401cdd:	gs cld 
  401cdf:	jb     0x401ce1
  401ce1:	add    BYTE PTR [ebp-0x62fc43fe],bl
  401ce7:	sahf   
  401ce8:	pop    ecx
  401ce9:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cef:	jmp    0x401cf4
  401cf1:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cf7:	jmp    0x401cfc
  401cf9:	add    BYTE PTR [ebp-0x62fffc15],bl
  401cff:	jmp    0x401d04
  401d01:	add    BYTE PTR [eax],al
  401d03:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d09:	jmp    0x401d0e
  401d0b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d11:	jmp    0x401d16
  401d13:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d19:	jmp    0x401d1e
  401d1b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d21:	jmp    0x401d26
  401d23:	add    BYTE PTR [ebp-0x62fffb5d],bl
  401d29:	jmp    0x401d2e
  401d2b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d31:	jmp    0x401d36
  401d33:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d39:	jmp    0x401d3e
  401d3b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d41:	jmp    0x401d46
  401d43:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d49:	jmp    0x401d4e
  401d4b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d51:	jmp    0x401d56
  401d53:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d59:	jmp    0x401d5e
  401d5b:	add    BYTE PTR [ebp-0x62fffc15],bl
  401d61:	add    ch,cl
  401d63:	add    ebx,DWORD PTR [ebp+0x3e902]
  401d69:	add    BYTE PTR [ebp-0x62fc16fe],bl
  401d6f:	add    ch,cl
  401d71:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d77:	add    ch,cl
  401d79:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d7f:	add    ch,cl
  401d81:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d87:	add    ch,cl
  401d89:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d8f:	add    ch,cl
  401d91:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d97:	add    ch,cl
  401d99:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401d9f:	add    ch,cl
  401da1:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401da7:	add    ch,cl
  401da9:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401daf:	add    ch,cl
  401db1:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401db7:	add    ch,cl
  401db9:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dbf:	add    ch,cl
  401dc1:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401dc7:	add    ch,cl
  401dc9:	add    ebx,DWORD PTR [ebp+0x3e902]
  401dcf:	add    BYTE PTR [ebp-0x62fc16fe],bl
  401dd5:	add    ch,cl
  401dd7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401ddd:	add    al,BYTE PTR [eax]
  401ddf:	jmp    0xe9402082
  401de4:	sahf   
  401de5:	add    al,BYTE PTR [eax]
  401de7:	mov    ecx,0xad0002dd
  401dec:	mov    eax,ds:0x9c080003
  401df1:	outs   dx,BYTE PTR ds:[esi]
  401df2:	dec    edi
  401df3:	jmp    0xe9402096
  401df8:	sahf   
  401df9:	add    al,BYTE PTR [eax]
  401dfb:	or     DWORD PTR [esi-0x661dfefc],ebx
  401e01:	or     al,0x0
  401e03:	jmp    0xe94021d2
  401e08:	out    dx,al
  401e09:	add    al,BYTE PTR [eax]
  401e0b:	jmp    0x904020ae
  401e10:	out    dx,eax
  401e11:	add    al,BYTE PTR [eax]
  401e13:	jmp    0xe94020a6
  401e18:	inc    BYTE PTR [ebx]
  401e1a:	add    cl,ch
  401e1c:	sahf   
  401e1d:	inc    edx
  401e1e:	add    cl,ch
  401e20:	scas   al,BYTE PTR es:[edi]
  401e21:	add    al,BYTE PTR [eax]
  401e23:	jmp    0xec4020c8
  401e28:	sahf   
  401e29:	add    DWORD PTR [eax],eax
  401e2b:	call   0xec4020ce
  401e30:	sahf   
  401e31:	add    DWORD PTR [eax],eax
  401e33:	jmp    0x2de1e38
  401e38:	add    cl,ch
  401e3a:	sahf   
  401e3b:	(bad)  
  401e3c:	(bad)  
  401e3d:	call   0xea40161c
  401e42:	sahf   
  401e43:	add    al,BYTE PTR [eax]
  401e45:	jmp    0x401de5
  401e47:	add    al,BYTE PTR [ecx+0x129ee9]
  401e4d:	jmp    0xe94020e0
  401e52:	sahf   
  401e53:	adc    al,BYTE PTR [eax]
  401e55:	jmp    0x4020e8
  401e5a:	mov    ah,0x3
  401e5c:	add    BYTE PTR [eax],al
  401e5e:	je     0x401e63
  401e60:	add    BYTE PTR [eax],al
  401e62:	test   BYTE PTR [ebx],al
  401e64:	add    BYTE PTR [eax],al
  401e66:	je     0x401e6b
  401e68:	add    BYTE PTR [eax],al
  401e6a:	mov    al,ds:0x4400036c
  401e6f:	add    al,0x0
  401e71:	add    BYTE PTR [ebx+eax*1+0x3740000],al
  401e78:	add    BYTE PTR [eax],al
  401e7a:	je     0x401e7f
  401e7c:	add    BYTE PTR [eax],al
  401e7e:	inc    esp
  401e7f:	add    eax,DWORD PTR [eax]
  401e81:	add    BYTE PTR [ebx+eax*1+0x0],al
  401e85:	add    BYTE PTR [ebx+eax*1],dh
  401e88:	add    BYTE PTR [eax],al
  401e8a:	xor    al,0xd3
  401e8c:	add    eax,DWORD PTR [eax]
  401e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8f:	sbb    al,0x0
  401e91:	add    BYTE PTR [ebx+eax*1+0x0],al
  401e95:	add    BYTE PTR [ebx+eax*1],dh
  401e98:	add    BYTE PTR [eax],al
  401e9a:	add    BYTE PTR [eax],al
  401e9c:	xor    al,0x3
  401e9e:	add    BYTE PTR [eax],al
  401ea0:	add    al,0x3
  401ea2:	add    BYTE PTR [eax],al
  401ea4:	add    al,0x3
  401ea6:	add    BYTE PTR [eax],al
  401ea8:	hlt    
  401ea9:	add    al,BYTE PTR [eax]
  401eab:	add    ah,dh
  401ead:	add    al,BYTE PTR [eax]
  401eaf:	add    BYTE PTR [ebx+eax*1],al
  401eb2:	add    BYTE PTR [eax],al
  401eb4:	add    al,0x3
  401eb6:	add    BYTE PTR [eax],al
  401eb8:	hlt    
  401eb9:	add    al,BYTE PTR [eax]
  401ebb:	add    ah,dh
  401ebd:	add    al,BYTE PTR [eax]
  401ebf:	add    ah,al
  401ec1:	add    al,BYTE PTR [eax]
  401ec3:	add    ah,al
  401ec5:	adc    al,BYTE PTR [eax]
  401ec7:	add    BYTE PTR [eax+0x1],bl
  401eca:	add    BYTE PTR [eax],al
  401ecc:	mov    ah,0x2
  401ece:	add    BYTE PTR [eax],al
  401ed0:	les    eax,FWORD PTR [edx]
  401ed2:	add    BYTE PTR [eax],al
  401ed4:	popf   
  401ed5:	jmp    0xe9dd1edd
  401eda:	add    eax,DWORD PTR [eax]
  401edc:	popf   
  401edd:	jmp    0xebdd1ee5
  401ee2:	add    eax,DWORD PTR [eax]
  401ee4:	popf   
  401ee5:	std    
  401ee6:	outs   dx,DWORD PTR ds:[esi]
  401ee7:	gs add eax,0x9d0003b0
  401eed:	adc    eax,DWORD PTR [ebp+0x13eb9d03]
  401ef3:	add    BYTE PTR [ebp-0x62fc8015],bl
  401ef9:	jmp    0x401efa
  401efb:	jmp    DWORD PTR [edx-0x14]
  401efe:	add    eax,DWORD PTR [eax]
  401f00:	add    BYTE PTR [eax],al
  401f02:	popf   
  401f03:	jmp    0x401f08
  401f05:	add    BYTE PTR [ebp-0x62fffc15],bl
  401f0b:	retf   
  401f0c:	add    eax,DWORD PTR [eax]
  401f0e:	mov    ebp,0xb161600d
  401f13:	dec    edx
  401f14:	add    al,0x0
  401f16:	popf   
  401f17:	and    ebx,DWORD PTR [esi]
  401f19:	add    BYTE PTR [ebp-0x62fc5c15],bl
  401f1f:	jmp    0x401f2a
  401f21:	add    BYTE PTR [ebp-0x62fc7415],bl
  401f27:	jmp    0x401f2c
  401f29:	add    BYTE PTR [ebp-0x62fffc15],bl
  401f2f:	jmp    0x401f34
  401f31:	add    BYTE PTR [ebp-0x22fffbd5],bl
  401f37:	mov    ebp,0xf4796571
  401f3c:	bound  eax,QWORD PTR [eax]
  401f3e:	popf   
  401f3f:	lods   eax,DWORD PTR ds:[esi]
  401f40:	pop    ds
  401f41:	add    BYTE PTR [ebp-0x62fc2c15],bl
  401f47:	jmp    0x401f74
  401f49:	add    BYTE PTR [ebp-0x62fc6e15],bl
  401f4f:	add    ch,cl
  401f51:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f57:	add    ch,cl
  401f59:	add    ebx,DWORD PTR [ebp-0x62fc56fe]
  401f5f:	inc    eax
  401f60:	jmp    0xe942bc68
  401f65:	add    eax,DWORD PTR [eax]
  401f67:	add    BYTE PTR [ebp-0x62fc16fe],bl
  401f6d:	add    ch,cl
  401f6f:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f75:	add    ch,cl
  401f77:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f7d:	add    ch,cl
  401f7f:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f85:	add    ch,cl
  401f87:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f8d:	add    ch,cl
  401f8f:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f95:	add    ch,cl
  401f97:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401f9d:	add    ch,cl
  401f9f:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fa5:	add    ch,cl
  401fa7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fad:	add    ch,cl
  401faf:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fb5:	add    ch,cl
  401fb7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fbd:	add    ch,cl
  401fbf:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  401fc5:	add    ch,cl
  401fc7:	add    ebx,DWORD PTR [ebp+0xe90002]
  401fcd:	add    BYTE PTR [esi-0x6116fffe],bl
  401fd3:	add    al,BYTE PTR [eax]
  401fd5:	jmp    0xe9402278
  401fda:	sahf   
  401fdb:	add    al,BYTE PTR [eax]
  401fdd:	jmp    0xe9402280
  401fe2:	sahf   
  401fe3:	add    al,BYTE PTR [eax]
  401fe5:	jmp    0xe9402288
  401fea:	sahf   
  401feb:	add    al,BYTE PTR [eax]
  401fed:	jmp    0xe9402290
  401ff2:	sahf   
  401ff3:	add    al,BYTE PTR [eax]
  401ff5:	jmp    0xe9402298
  401ffa:	sahf   
  401ffb:	add    al,BYTE PTR [eax]
  401ffd:	jmp    0xe94022a0
  402002:	sahf   
  402003:	add    al,BYTE PTR [eax]
  402005:	jmp    0xe94022a8
  40200a:	sahf   
  40200b:	add    al,BYTE PTR [eax]
  40200d:	jmp    0xe94022b0
  402012:	sahf   
  402013:	add    al,BYTE PTR [eax]
  402015:	jmp    0xe94022b8
  40201a:	sahf   
  40201b:	add    al,BYTE PTR [eax]
  40201d:	jmp    0xe94022c0
  402022:	sahf   
  402023:	add    al,BYTE PTR [eax]
  402025:	jmp    0xe94022c8
  40202a:	sahf   
  40202b:	add    al,BYTE PTR [eax]
  40202d:	jmp    0xe94022d0
  402032:	add    BYTE PTR [eax],al
  402034:	sahf   
  402035:	add    al,BYTE PTR [eax]
  402037:	jmp    0xe94022da
  40203c:	sahf   
  40203d:	add    al,BYTE PTR [eax]
  40203f:	jmp    0xe94022e2
  402044:	sahf   
  402045:	add    al,BYTE PTR [eax]
  402047:	add    ah,al
  402049:	(bad)  
  40204a:	(bad)  
  40204b:	inc    esp
  40204d:	(bad)  
  40204e:	(bad)  
  40204f:	push   DWORD PTR [edi+edi*8-0x4b0001]
  402056:	(bad)  
  402057:	inc    esp
  402059:	(bad)  
  40205a:	(bad)  
  40205b:	inc    esp
  40205d:	(bad)  
  40205e:	(bad)  
  40205f:	push   DWORD PTR [edi+edi*8-0x4b0001]
  402066:	(bad)  
  402067:	inc    DWORD PTR [edi+edi*8-0x7b0001]
  40206e:	(bad)  
  40206f:	push   DWORD PTR [edi+edi*8-0x1]
  402073:	push   DWORD PTR [edi+edi*8-0x1]
  402077:	inc    DWORD PTR [edi+edi*8-0x7b0001]
  40207e:	(bad)  
  40207f:	push   DWORD PTR [edi+edi*8-0x1]
  402083:	push   DWORD PTR [edi+edi*8-0x1]
  402087:	inc    DWORD PTR [edi+edi*8-0x1]
  40208b:	inc    DWORD PTR [edi+edi*8-0x1]
  40208f:	push   DWORD PTR [edi+edi*8]
  402092:	(bad)  
  402093:	push   DWORD PTR [edi+edi*8]
  402096:	(bad)  
  402097:	inc    DWORD PTR [eax]
  402099:	add    BYTE PTR [edi+edi*8-0x1],al
  40209d:	inc    DWORD PTR [edi+edi*8-0x1]
  4020a1:	push   DWORD PTR [edi+edi*8]
  4020a4:	(bad)  
  4020a5:	push   DWORD PTR [edi+edi*8]
  4020a8:	(bad)  
  4020a9:	inc    DWORD PTR [edi+edi*8]
  4020ac:	(bad)  
  4020ad:	inc    DWORD PTR [edi+edi*8]
  4020b0:	(bad)  
  4020b1:	push   esp
  4020b3:	(bad)  
  4020b4:	(bad)  
  4020b5:	push   esp
  4020b7:	(bad)  
  4020b8:	(bad)  
  4020b9:	inc    DWORD PTR [edi+edi*8]
  4020bc:	(bad)  
  4020bd:	inc    DWORD PTR [edi+edi*8]
  4020c0:	(bad)  
  4020c1:	call   FWORD PTR [ebp-0x62fffc17]
  4020c7:	jmp    0xe9dd20cf
  4020cc:	add    eax,DWORD PTR [eax]
  4020ce:	popf   
  4020cf:	jmp    0xe9dd20d7
  4020d4:	add    eax,DWORD PTR [eax]
  4020d6:	popf   
  4020d7:	jmp    0xe9dd20df
  4020dc:	add    eax,DWORD PTR [eax]
  4020de:	popf   
  4020df:	jmp    0xe9dd20e7
  4020e4:	add    eax,DWORD PTR [eax]
  4020e6:	popf   
  4020e7:	jmp    0xdbdd20ef
  4020ec:	add    eax,DWORD PTR [eax]
  4020ee:	popf   
  4020ef:	fild   DWORD PTR [ebx]
  4020f1:	add    BYTE PTR [ebp-0x62fffc25],bl
  4020f7:	fild   DWORD PTR [ebx]
  4020f9:	add    BYTE PTR [ebp+0x3db],bl
  4020ff:	add    BYTE PTR [ebp-0x62fffc25],bl
  402105:	popf   
  402106:	jl     0x40210b
  402108:	popf   
  402109:	xchg   DWORD PTR [ebx+eax*1-0x63],edi
  40210d:	mov    DWORD PTR [ebx+eax*1-0x63],edi
  402111:	dec    ebp
  402112:	jl     0x402117
  402114:	popf   
  402115:	inc    ebp
  402116:	jl     0x40211b
  402118:	popf   
  402119:	sbb    edi,DWORD PTR [ebx+eax*1-0x63]
  40211d:	lods   eax,DWORD PTR ds:[esi]
  40211e:	mov    eax,DWORD PTR [ebx]
  402120:	popf   
  402121:	leave  
  402122:	mov    eax,DWORD PTR [ebx]
  402124:	popf   
  402125:	ror    DWORD PTR [ebx+0x7be59d03],1
  40212b:	add    ebx,DWORD PTR [ebp-0x62fc8405]
  402131:	in     eax,dx
  402132:	jnp    0x402137
  402134:	popf   
  402135:	daa    
  402136:	jl     0x40213b
  402138:	popf   
  402139:	cmp    eax,0x29d037c
  40213e:	and    edi,DWORD PTR [esi+ebx*4+0x2]
  402142:	jnp    0x4021c0
  402144:	sahf   
  402145:	add    al,BYTE PTR [ebx+0x7c]
  402148:	sahf   
  402149:	add    ch,BYTE PTR [ebx-0x60fd6184]
  40214f:	jl     0x4020ef
  402151:	add    dl,BYTE PTR [ecx+0x73029e7c]
  402157:	jl     0x4020f7
  402159:	add    dl,bh
  40215b:	jl     0x4020fb
  40215d:	add    bl,BYTE PTR [edi]
  40215f:	jge    0x4020ff
  402161:	add    bh,BYTE PTR [ebx-0x61ffff84]
  402167:	add    ah,BYTE PTR [ebx+0x7d]
  40216a:	sahf   
  40216b:	add    al,BYTE PTR [edi+0x2b029e7d]
  402171:	jge    0x402111
  402173:	add    dl,BYTE PTR ds:0x41029e7d
  402179:	jge    0x402119
  40217b:	add    dh,BYTE PTR [ecx]
  40217d:	jge    0x40211d
  40217f:	add    ch,bh
  402181:	jge    0x402121
  402183:	add    al,BYTE PTR [ecx]
  402185:	jle    0x402125
  402187:	add    bh,BYTE PTR [ebp-0x16fd6176]
  40218d:	add    ebx,DWORD PTR [ebp-0x617dfcfe]
  402193:	add    bl,BYTE PTR ds:0x23029e82
  402199:	sbb    BYTE PTR [esi-0x617dc4fe],0x2
  4021a0:	jns    0x402123
  4021a2:	sahf   
  4021a3:	add    ah,BYTE PTR [ebx-0x7e]
  4021a6:	sahf   
  4021a7:	add    cl,BYTE PTR [ebp-0x7e]
  4021aa:	sahf   
  4021ab:	add    ch,ch
  4021ad:	sbb    BYTE PTR [esi-0x62fc16fe],0x2
  4021b4:	outs   dx,DWORD PTR ds:[esi]
  4021b5:	sbb    BYTE PTR [esi+0x1ddb0002],0x5
  4021bc:	add    BYTE PTR [ecx+0x6d00057a],dh
  4021c2:	sbb    eax,0x1c210005
  4021c7:	add    eax,0xd00
  4021cc:	sbb    al,0x5
  4021ce:	add    BYTE PTR [ecx],dh
  4021d0:	sbb    al,0x5
  4021d2:	add    BYTE PTR [ebx],dh
  4021d4:	sbb    al,0x5
  4021d6:	add    BYTE PTR [ecx],ch
  4021d8:	sbb    al,0x5
  4021da:	add    BYTE PTR [ebp-0x3efffae3],bh
  4021e0:	sbb    eax,0x32510005
  4021e5:	add    eax,0x51d8300
  4021ea:	add    BYTE PTR [ecx],ah
  4021ec:	and    al,BYTE PTR ds:0x41a3100
  4021f2:	add    cl,ch
  4021f4:	sahf   
  4021f5:	add    al,BYTE PTR [eax]
  4021f7:	pop    ecx
  4021f8:	xor    DWORD PTR [eax+eax*1],eax
  4021fb:	jmp    0xaf40249e
  402200:	or     eax,DWORD PTR [eax+eax*1]
  402203:	jns    0x402208
  402205:	add    al,0x0
  402207:	inc    edi
  402208:	sti    
  402209:	add    eax,DWORD PTR [eax]
  40220b:	push   ebx
  40220c:	repz add eax,DWORD PTR [eax]
  40220f:	pop    ds
  402210:	retf   
  402211:	add    eax,DWORD PTR [eax]
  402213:	movnti DWORD PTR [ebx],eax
  402216:	add    bl,bh
  402218:	mov    eax,0xb0f70003
  40221d:	add    eax,DWORD PTR [eax]
  40221f:	jecxz  0x4021eb
  402221:	add    eax,DWORD PTR [eax]
  402223:	inc    edx
  402225:	add    eax,DWORD PTR [eax]
  402227:	pop    es
  402228:	lods   eax,DWORD PTR ds:[esi]
  402229:	add    eax,DWORD PTR [eax]
  40222b:	pop    ds
  40222c:	lods   eax,DWORD PTR ds:[esi]
  40222d:	add    eax,DWORD PTR [eax]
  40222f:	and    eax,DWORD PTR [eax]
  402231:	add    BYTE PTR [ebp+0x60000003],cl
  402237:	jb     0x40223c
  402239:	add    dl,dl
  40223b:	jb     0x402240
  40223d:	add    BYTE PTR [eax+0x72],dh
  402240:	add    eax,DWORD PTR [eax]
  402242:	push   eax
  402243:	jb     0x402248
  402245:	add    BYTE PTR [eax+0x72],ah
  402248:	add    eax,DWORD PTR [eax]
  40224a:	xor    al,0x73
  40224c:	add    eax,DWORD PTR [eax]
  40224e:	sub    BYTE PTR [ebx+0x3],dh
  402251:	add    BYTE PTR [eax],dh
  402253:	jae    0x402258
  402255:	add    ah,dh
  402257:	pusha  
  402258:	add    eax,DWORD PTR [eax]
  40225a:	out    dx,al
  40225b:	pusha  
  40225c:	add    eax,DWORD PTR [eax]
  40225e:	or     ah,BYTE PTR [ecx+0x3]
  402261:	add    BYTE PTR [esi-0x19fffca1],dl
  402267:	pusha  
  402268:	add    eax,DWORD PTR [eax]
  40226a:	(bad)  
  40226b:	pusha  
  40226c:	add    eax,DWORD PTR [eax]
  40226e:	cmp    al,0x5f
  402270:	add    eax,DWORD PTR [eax]
  402272:	adc    BYTE PTR [eax+0x3],ah
  402275:	add    dl,bh
  402277:	pop    edi
  402278:	add    eax,DWORD PTR [eax]
  40227a:	sbb    BYTE PTR [edi+0x3],bl
  40227d:	add    BYTE PTR [esi],cl
  40227f:	pusha  
  402280:	add    eax,DWORD PTR [eax]
  402282:	call   0x35f:0xd800035f
  402289:	add    BYTE PTR [eax+0x1a00035f],dl
  40228f:	pop    esi
  402290:	add    eax,DWORD PTR [eax]
  402292:	dec    esp
  402293:	jno    0x402298
  402295:	add    BYTE PTR [eax],al
  402297:	add    BYTE PTR [esi],dl
  402299:	jno    0x40229e
  40229b:	add    BYTE PTR [eax],al
  40229d:	jno    0x4022a2
  40229f:	add    BYTE PTR [ecx+esi*2],ah
  4022a2:	add    eax,DWORD PTR [eax]
  4022a4:	and    al,0x71
  4022a6:	add    eax,DWORD PTR [eax]
  4022a8:	mov    esi,0xac000374
  4022ad:	jno    0x4022b2
  4022af:	add    BYTE PTR [ebp-0x62fc8e89],bl
  4022b5:	outs   dx,DWORD PTR ds:[esi]
  4022b6:	jno    0x4022bb
  4022b8:	popf   
  4022b9:	mov    ch,0x71
  4022bb:	add    ebx,DWORD PTR [ebp-0x62fc8e47]
  4022c1:	stos   DWORD PTR es:[edi],eax
  4022c2:	jno    0x4022c7
  4022c4:	popf   
  4022c5:	lahf   
  4022c6:	jno    0x4022cb
  4022c8:	popf   
  4022c9:	out    dx,eax
  4022ca:	jo     0x4022cf
  4022cc:	popf   
  4022cd:	retf   
  4022ce:	jo     0x4022d3
  4022d0:	popf   
  4022d1:	and    DWORD PTR [ecx+0x3],esi
  4022d4:	popf   
  4022d5:	stc    
  4022d6:	jo     0x4022db
  4022d8:	popf   
  4022d9:	out    dx,eax
  4022da:	jo     0x4022df
  4022dc:	popf   
  4022dd:	jno    0x40234f
  4022df:	add    ebx,DWORD PTR [ebp-0x62fc8fad]
  4022e5:	inc    ecx
  4022e6:	jo     0x4022eb
  4022e8:	popf   
  4022e9:	mov    eax,ds:0x319d0370
  4022ee:	jo     0x4022f3
  4022f0:	popf   
  4022f1:	xor    eax,0x419d0370
  4022f6:	jo     0x4022fb
  4022f8:	popf   
  4022f9:	inc    ecx
  4022fa:	jo     0x4022ff
  4022fc:	add    BYTE PTR [eax],al
  4022fe:	popf   
  4022ff:	fld    QWORD PTR [ebx-0x7c2862fd]
  402305:	add    ebx,DWORD PTR [ebp-0x62fc7c65]
  40230b:	stos   DWORD PTR es:[edi],eax
  40230c:	add    DWORD PTR [ebx],0xffffff9d
  40230f:	push   ebp
  402310:	xchg   ebp,eax
  402311:	add    ebx,DWORD PTR [ebp-0x62fc6a8f]
  402317:	gs xchg ebp,eax
  402319:	add    ebx,DWORD PTR [ebp-0x62fc6a7f]
  40231f:	xchg   DWORD PTR [ebp+0x6ca39d03],edx
  402325:	add    ebx,DWORD PTR [ebp-0x62fc9383]
  40232b:	add    dl,BYTE PTR [ebx]
  40232d:	imul   ebx,DWORD PTR [esi-0x619502fe],0x2
  402334:	out    0x6a,eax
  402336:	sahf   
  402337:	add    cl,bh
  402339:	push   0xffffff9e
  40233b:	add    dl,bh
  40233d:	push   0xffffff9e
  40233f:	add    ah,BYTE PTR [ebx-0x5afd6196]
  402345:	push   0xffffff9e
  402347:	add    ch,BYTE PTR [ecx+0x53029e6a]
  40234d:	push   0xffffff9e
  40234f:	add    bh,BYTE PTR [edi+0x6a]
  402352:	sahf   
  402353:	add    bh,BYTE PTR [ecx+0x6a]
  402356:	sahf   
  402357:	add    cl,BYTE PTR ds:0x15029e6a
  40235d:	push   0xffffff9e
  40235f:	add    ah,BYTE PTR [ebx]
  402361:	push   0x0
  402363:	add    BYTE PTR [esi-0x6195dcfe],bl
  402369:	add    dh,BYTE PTR [ecx+0x11029e69]
  40236f:	push   0xffffff9e
  402371:	add    al,BYTE PTR [ebx]
  402373:	push   0xffffff9e
  402375:	add    ah,cl
  402377:	imul   ebx,DWORD PTR [esi-0x6192aafe],0x9e6d4902
  402381:	add    ch,BYTE PTR [edi]
  402383:	ins    DWORD PTR es:[edi],dx
  402384:	sahf   
  402385:	add    dh,BYTE PTR [ecx+0x6d]
  402388:	sahf   
  402389:	add    cl,BYTE PTR [ebx+0x7f029e6d]
  40238f:	ins    DWORD PTR es:[edi],dx
  402390:	sahf   
  402391:	add    dh,BYTE PTR [ebx+0x6d]
  402394:	sahf   
  402395:	add    dl,BYTE PTR [edi+0x7f029e6c]
  40239b:	ins    BYTE PTR es:[edi],dx
  40239c:	sahf   
  40239d:	add    ah,BYTE PTR [edi-0x32fd6194]
  4023a3:	ins    BYTE PTR es:[edi],dx
  4023a4:	sahf   
  4023a5:	add    al,BYTE PTR [eax]
  4023a7:	lods   eax,DWORD PTR ds:[esi]
  4023a8:	leave  
  4023a9:	add    DWORD PTR [eax],eax
  4023ab:	xlat   BYTE PTR ds:[ebx]
  4023ac:	rol    DWORD PTR [ecx],0x0
  4023af:	repz mov ecx,0xb6d50001
  4023b5:	add    DWORD PTR [eax],eax
  4023b7:	iret   
  4023b8:	xchg   BYTE PTR [ecx],al
  4023ba:	add    BYTE PTR [ebp-0x50fffe7a],dh
  4023c0:	jbe    0x4023c3
  4023c2:	add    BYTE PTR [ebx-0x78fffe8a],al
  4023c8:	add    BYTE PTR [eax],al
  4023ca:	xchg   BYTE PTR [ecx],al
  4023cc:	add    BYTE PTR [ebp-0x7a],dl
  4023cf:	add    DWORD PTR [eax],eax
  4023d1:	ins    DWORD PTR es:[edi],dx
  4023d2:	jbe    0x4023d5
  4023d4:	add    BYTE PTR [ebx],bl
  4023d6:	jno    0x4023d9
  4023d8:	add    BYTE PTR ds:0x1d000149,dh
  4023de:	inc    ecx
  4023df:	add    DWORD PTR [eax],eax
  4023e1:	sub    eax,0xb5000139
  4023e6:	add    DWORD PTR ss:[eax],eax
  4023e9:	leave  
  4023ea:	inc    esi
  4023eb:	add    DWORD PTR [eax],eax
  4023ed:	aad    0x46
  4023ef:	add    DWORD PTR [eax],eax
  4023f1:	jmp    0x5940252c
  4023f6:	sub    eax,DWORD PTR [ecx]
  4023f8:	add    BYTE PTR [edi],dh
  4023fa:	adc    eax,DWORD PTR [eax]
  4023fc:	add    BYTE PTR [ecx],bh
  4023fe:	or     eax,DWORD PTR [eax]
  402400:	add    BYTE PTR [ecx-0x76ffffed],al
  402406:	or     eax,DWORD PTR [eax]
  402408:	add    BYTE PTR [ecx-0xd],ah
  40240b:	(bad)  
  40240c:	(bad)  
  40240d:	mov    esp,0xc6ffffeb
  402412:	repz (bad) 
  402414:	jmp    FWORD PTR [ebx+ebp*8-0x2c570001]
  40241b:	(bad)  
  40241c:	call   esp
  40241e:	retf   
  40241f:	(bad)  
  402420:	(bad)  
  402421:	call   FWORD PTR [edx+0x75]
  402424:	add    eax,DWORD PTR [eax]
  402426:	push   0x75
  402428:	add    eax,DWORD PTR [eax]
  40242a:	inc    esp
  40242b:	jne    0x402430
  40242d:	add    BYTE PTR [eax],al
  40242f:	add    BYTE PTR [ebp+esi*2+0x5e2c0003],bl
  402436:	add    eax,DWORD PTR [eax]
  402438:	in     al,0x74
  40243a:	add    eax,DWORD PTR [eax]
  40243c:	add    al,0x0
  40243e:	add    BYTE PTR [eax],al
  402440:	push   0x5400038f
  402445:	pop    DWORD PTR [ebx]
  402447:	add    BYTE PTR [edx+0x400038f],dh
  40244d:	add    BYTE PTR [eax],al
  40244f:	add    ah,bh
  402451:	(bad)  
  402452:	(bad)  
  402453:	jg     0x402442
  402455:	(bad)  
  402456:	(bad)  
  402457:	jg     0x40244f
  402459:	(bad)  
  40245a:	(bad)  
  40245b:	jg     0x402427
  40245d:	(bad)  
  40245e:	(bad)  
  40245f:	jg     0x402425
  402461:	(bad)  
  402462:	(bad)  
  402463:	jmp    FWORD PTR [eax]
  402465:	push   0x3
  402467:	add    BYTE PTR [edx+0x5e000369],al
  40246d:	imul   eax,DWORD PTR [ebx],0xffffc400
  402473:	jmp    DWORD PTR [esi]
  402475:	imul   eax,DWORD PTR [ebx],0x36ac200
  40247b:	add    BYTE PTR [esi+0x6a],bl
  40247e:	add    eax,DWORD PTR [eax]
  402480:	dec    eax
  402481:	push   0x3
  402483:	add    BYTE PTR [eax],bh
  402485:	push   0x3
  402487:	add    BYTE PTR [esi-0x55fffc96],al
  40248d:	imul   eax,DWORD PTR [ebx],0x36a4a00
  402493:	add    BYTE PTR [eax],al
  402495:	add    BYTE PTR [eax+0x6a],bh
  402498:	add    eax,DWORD PTR [eax]
  40249a:	nop
  40249b:	push   0x2b9d0003
  4024a0:	jp     0x4024a5
  4024a2:	popf   
  4024a3:	pop    ss
  4024a4:	jp     0x4024a9
  4024a6:	popf   
  4024a7:	push   ebx
  4024a8:	jp     0x4024ad
  4024aa:	popf   
  4024ab:	aaa    
  4024ac:	jp     0x4024b1
  4024ae:	popf   
  4024af:	gs jp  0x4024b5
  4024b2:	popf   
  4024b3:	jno    0x40252e
  4024b5:	add    ebx,DWORD PTR [ebp-0x62fc85b1]
  4024bb:	sub    edi,DWORD PTR [edx+0x3]
  4024be:	popf   
  4024bf:	and    edi,DWORD PTR [edx+0x3]
  4024c2:	popf   
  4024c3:	retf   
  4024c4:	add    eax,DWORD PTR [eax]
  4024c6:	sbb    eax,0x9d037a19
  4024cb:	out    0x79,eax
  4024cd:	add    ebx,DWORD PTR [ebp-0x62fffc27]
  4024d3:	test   eax,0xd99d0378
  4024d8:	add    eax,DWORD PTR [eax]
  4024da:	popf   
  4024db:	sub    DWORD PTR [eax-0x782e62fd],ecx
  4024e1:	add    ebx,DWORD PTR [ebp-0x62fc783f]
  4024e7:	loope  0x402470
  4024e9:	add    ebx,DWORD PTR [ebp-0x62fc781b]
  4024ef:	add    DWORD PTR [eax-0x7f8262fd],0x3
  4024f6:	popf   
  4024f7:	sbb    DWORD PTR [eax-0x62fffffd],eax
  4024fd:	mov    DWORD PTR [eax-0x7f8662fd],eax
  402503:	add    ebx,DWORD PTR [ebp-0x62fc7f9b]
  402509:	ret    
  40250a:	add    BYTE PTR [ebx],0x9d
  40250d:	aad    0x80
  40250f:	add    ebx,DWORD PTR [ebp-0x62fc7f6b]
  402515:	xchg   DWORD PTR [eax-0x1cfd62fd],eax
  40251b:	sbb    BYTE PTR [esi-0x617f2efe],0x2
  402522:	inc    DWORD PTR [eax-0x7f16fd62]
  402528:	sahf   
  402529:	add    ch,BYTE PTR [ecx-0x79]
  40252c:	sahf   
  40252d:	add    dl,BYTE PTR [ebp-0x79]
  402530:	sahf   
  402531:	add    cl,BYTE PTR [ebp-0x79]
  402534:	sahf   
  402535:	add    al,BYTE PTR [ebp-0x50fd6179]
  40253b:	sbb    BYTE PTR [esi-0x617f48fe],0x2
  402542:	ret    
  402543:	sbb    BYTE PTR [esi-0x617f1afe],0x2
  40254a:	fild   DWORD PTR [eax-0x7ef6fd62]
  402550:	sahf   
  402551:	add    al,BYTE PTR ds:0xed029e81
  402557:	sbb    BYTE PTR [esi-0x617ecefe],0x2
  40255e:	inc    ecx
  40255f:	add    DWORD PTR [eax],0x1029e00
  402565:	sbb    DWORD PTR [esi-0x617eeafe],0x9e82cd02
  40256f:	add    dh,cl
  402571:	sbb    BYTE PTR [esi-0x617d82fe],0x2
  402578:	test   DWORD PTR [edx-0x7dbefd62],eax
  40257e:	sahf   
  40257f:	add    dh,BYTE PTR [ecx]
  402581:	sbb    BYTE PTR [esi-0x617d6cfe],0x2
  402588:	add    DWORD PTR [edx-0x7d98fd62],0xffffff9e
  40258f:	add    ch,BYTE PTR [ebp-0x7e]
  402592:	sahf   
  402593:	add    al,BYTE PTR [eax]
  402595:	mov    cl,0x1c
  402597:	add    eax,0x51d7b00
  40259c:	add    BYTE PTR [edi-0x72fffa1e],bl
  4025a2:	sbb    al,0x5
  4025a4:	add    BYTE PTR [ecx-0x44fffae4],cl
  4025aa:	sbb    al,0x5
  4025ac:	add    BYTE PTR [ebp+0x7f00051c],ch
  4025b2:	push   ds
  4025b3:	add    eax,0x5196700
  4025b8:	add    BYTE PTR [ebp+0x21],cl
  4025bb:	add    eax,0x51e9900
  4025c0:	add    BYTE PTR [ebx-0x44fffae2],ch
  4025c6:	add    BYTE PTR [eax],al
  4025c8:	push   ds
  4025c9:	add    eax,0x51ecb00
  4025ce:	add    BYTE PTR [ebp-0x18fffae2],bh
  4025d4:	and    DWORD PTR ds:0x519d100,eax
  4025da:	add    BYTE PTR [ebp-0x6efffae0],dh
  4025e0:	sbb    BYTE PTR ds:0x520c300,al
  4025e6:	add    BYTE PTR [ebx+0x4d000518],ah
  4025ec:	and    BYTE PTR ds:0x5185100,al
  4025f2:	add    BYTE PTR [ebx+0x20],ah
  4025f5:	add    eax,0x5186500
  4025fa:	add    bh,ch
  4025fc:	and    BYTE PTR ds:0x518d700,al
  402602:	add    bl,al
  402604:	and    BYTE PTR [eax+eax*1],al
  402607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402608:	sbb    BYTE PTR [eax+eax*1],al
  40260b:	or     eax,0x423
  402610:	cmp    BYTE PTR [esi+0x3],0x0
  402614:	mov    ds:0x56000380,al
  402619:	jle    0x40261e
  40261b:	add    BYTE PTR [edx-0x75fffc82],bh
  402621:	jle    0x402626
  402623:	add    dh,bl
  402625:	jle    0x40262a
  402627:	add    BYTE PTR [esi+0x7e],bh
  40262a:	add    eax,DWORD PTR [eax]
  40262c:	add    BYTE PTR [eax],al
  40262e:	add    BYTE PTR fs:[ebx],0x0
  402632:	push   esi
  402633:	add    BYTE PTR [ebx],0x0
  402636:	push   esp
  402637:	add    BYTE PTR [ebx],0x0
  40263a:	xor    ch,BYTE PTR [eax+0x3]
  40263d:	add    BYTE PTR [edx+eax*4+0x67ec0003],dl
  402644:	add    eax,DWORD PTR [eax]
  402646:	sub    ch,BYTE PTR [eax+0x3]
  402649:	add    BYTE PTR [edx+0x7e000367],cl
  40264f:	add    eax,DWORD PTR [bx+si]
  402652:	cwde   
  402653:	add    DWORD PTR [ebx],0x0
  402656:	xchg   esp,eax
  402657:	add    DWORD PTR [ebx],0x0
  40265a:	mov    al,BYTE PTR [ebx-0x7c55fffd]
  402660:	add    eax,DWORD PTR [eax]
  402662:	jbe    0x4025e7
  402664:	add    eax,DWORD PTR [eax]
  402666:	push   esi
  402667:	add    DWORD PTR [ebx],0x0
  40266a:	pusha  
  40266b:	add    DWORD PTR [ebx],0x0
  40266e:	add    DWORD PTR fs:[ebx],0x0
  402672:	hlt    
  402673:	add    DWORD PTR [ebx],0x0
  402676:	into   
  402677:	test   BYTE PTR [ebx],al
  402679:	add    ah,al
  40267b:	add    eax,DWORD PTR [eax]
  40267d:	add    dh,cl
  40267f:	xchg   esp,eax
  402680:	add    eax,DWORD PTR [eax]
  402682:	mov    dh,0x94
  402684:	add    eax,DWORD PTR [eax]
  402686:	call   0x9d402a19
  40268b:	xor    DWORD PTR [ebx+eax*1+0x394199d],edx
  402692:	add    BYTE PTR [eax],al
  402694:	popf   
  402695:	imul   edx,DWORD PTR [ebx+eax*1+0x3944f9d],0x3945b9d
  4026a0:	popf   
  4026a1:	ret    
  4026a2:	xchg   ebx,eax
  4026a3:	add    ebx,DWORD PTR [ebp-0x62fc6c59]
  4026a9:	cdq    
  4026aa:	xchg   ebx,eax
  4026ab:	add    ebx,DWORD PTR [ebp-0x62fc6c43]
  4026b1:	(bad)  
  4026b2:	xchg   ebx,eax
  4026b3:	add    ebx,DWORD PTR [ebp-0x62fc86fd]
  4026b9:	std    
  4026ba:	js     0x4026bf
  4026bc:	popf   
  4026bd:	or     DWORD PTR [ecx+0x3],edi
  4026c0:	popf   
  4026c1:	xor    edi,DWORD PTR [ecx+0x3]
  4026c4:	popf   
  4026c5:	jge    0x40273f
  4026c7:	add    ebx,DWORD PTR [ebp-0x62fc86b9]
  4026cd:	inc    ecx
  4026ce:	jns    0x4026d3
  4026d0:	popf   
  4026d1:	das    
  4026d2:	jns    0x4026d7
  4026d4:	popf   
  4026d5:	sbb    DWORD PTR [ecx+0x3],edi
  4026d8:	popf   
  4026d9:	fld    DWORD PTR [ebx]
  4026db:	add    BYTE PTR [ebp+0x1d0003cb],bl
  4026e1:	jne    0x402759
  4026e3:	add    ebx,DWORD PTR [ebp+0x1d0003ea]
  4026e9:	fiadd  WORD PTR [ebx]
  4026eb:	add    BYTE PTR ds:0x1d0003da,bl
  4026f1:	xor    DWORD PTR [esi+0x3],0xffffff9d
  4026f5:	out    dx,al
  4026f6:	add    eax,DWORD PTR [eax]
  4026f8:	add    BYTE PTR [eax],al
  4026fa:	sbb    eax,0x1d0003e0
  4026ff:	and    DWORD PTR [edx+0x3],edi
  402702:	popf   
  402703:	xchg   ebp,eax
  402704:	jns    0x402709
  402706:	popf   
  402707:	add    ch,ch
  402709:	add    ebx,DWORD PTR [ebp-0x62fc257e]
  40270f:	or     BYTE PTR ds:0xfb029e7a,0x79
  402716:	sahf   
  402717:	add    bl,bh
  402719:	add    ebx,DWORD PTR [ebp-0x62fc2b7e]
  40271f:	cmp    BYTE PTR [ebp-0x147d62fd],0x3
  402726:	popf   
  402727:	cmp    dh,0x3
  40272a:	popf   
  40272b:	sub    cl,0x79
  40272e:	sahf   
  40272f:	add    ch,bh
  402731:	add    ebx,DWORD PTR [ebp-0x62fc0a7e]
  402737:	xor    BYTE PTR ds:0x2b029e76,0x76
  40273e:	sahf   
  40273f:	add    dh,BYTE PTR [ecx]
  402741:	jbe    0x4026e1
  402743:	add    bh,BYTE PTR [esi+0x3]
  402746:	popf   
  402747:	cmp    cl,0x3
  40274a:	popf   
  40274b:	sub    dl,0x3
  40274e:	popf   
  40274f:	cmp    dl,0x3
  402752:	popf   
  402753:	sbb    BYTE PTR [ecx+0x4],0x9d
  402757:	sub    cl,0x3
  40275a:	popf   
  40275b:	add    dh,BYTE PTR [edi-0x6b]
  40275e:	add    BYTE PTR [eax],al
  402760:	sahf   
  402761:	add    ch,BYTE PTR [ecx-0x5cfd616b]
  402767:	xchg   ebp,eax
  402768:	sahf   
  402769:	add    bh,BYTE PTR [ebp-0x40fd616b]
  40276f:	xchg   ebp,eax
  402770:	sahf   
  402771:	add    al,BYTE PTR [ecx-0x66fd616b]
  402777:	xchg   ebp,eax
  402778:	sahf   
  402779:	add    al,BYTE PTR [edi-0x12fd616b]
  40277f:	xchg   ecx,eax
  402780:	sahf   
  402781:	add    al,BYTE PTR [eax]
  402783:	fisttp WORD PTR [edx+eax*1]
  402786:	add    cl,cl
  402788:	or     al,0x2
  40278a:	add    BYTE PTR [ebx],dl
  40278c:	das    
  40278d:	add    DWORD PTR [eax],eax
  40278f:	adc    eax,0xa900012f
  402794:	sub    al,0x1
  402796:	add    BYTE PTR [ebx+0x1d00012c],bh
  40279c:	sgdtd  [eax]
  40279f:	mov    ds:0xe900010c,eax
  4027a4:	sahf   
  4027a5:	add    al,BYTE PTR [eax]
  4027a7:	arpl   bp,sp
  4027a9:	add    DWORD PTR [eax],eax
  4027ab:	adc    ebp,0x1
  4027ae:	add    BYTE PTR [ebp-0x2b],cl
  4027b1:	add    DWORD PTR [eax],eax
  4027b3:	fwait
  4027b4:	rol    BYTE PTR [ecx],cl
  4027b6:	add    BYTE PTR [edi-0x4afffe36],ch
  4027bc:	mov    dl,0x1
  4027be:	add    BYTE PTR [ebp-0x34fffe56],dh
  4027c4:	add    BYTE PTR [eax],al
  4027c6:	mov    dl,0x1
  4027c8:	add    bh,bl
  4027ca:	stos   BYTE PTR es:[edi],al
  4027cb:	add    DWORD PTR [eax],eax
  4027cd:	jmp    0xe9402a70
  4027d2:	sahf   
  4027d3:	add    al,BYTE PTR [eax]
  4027d5:	mov    dl,0x1d
  4027d7:	lods   al,BYTE PTR ds:[esi]
  4027d8:	sar    BYTE PTR ds:[ebp-0x14],1
  4027dc:	dec    esp
  4027dd:	mov    esp,eax
  4027df:	loope  0x4027d0
  4027e1:	inc    esp
  4027e2:	outs   dx,DWORD PTR ds:[esi]
  4027e3:	test   DWORD PTR ds:0xa522418d,edi
  4027e9:	imul   edx,DWORD PTR [ebx-0x599bb014],0xdc2a730c
  4027f3:	xchg   esp,eax
  4027f4:	push   ss
  4027f5:	push   ds
  4027f6:	xchg   ebx,eax
  4027f7:	ret    
  4027f8:	sbb    al,BYTE PTR [esi+0x4e479c]
  4027fe:	jnp    0x402825
  402800:	cs mov cl,0x62
  402803:	dec    esi
  402804:	cwde   
  402805:	mov    bh,0xb8
  402807:	aam    0x8b
  402809:	repz ja 0x402807
  40280c:	icebp  
  40280d:	inc    edx
  40280e:	pop    ss
  40280f:	add    esp,DWORD PTR [edi-0x22]
  402812:	(bad)  
  402816:	add    eax,DWORD PTR [ebx-0x1369a194]
  40281c:	pop    edi
  40281d:	inc    edi
  40281e:	(bad)  
  40281f:	fucomp st(2)
  402821:	xor    ecx,DWORD PTR [ebx-0x6a]
  402824:	jno    0x402899
  402826:	cmc    
  402827:	pushf  
  402828:	xor    ebp,DWORD PTR [ecx]
  40282a:	add    BYTE PTR [eax],al
  40282c:	push   0x59
  40282e:	rcl    BYTE PTR [ecx],cl
  402830:	imul   ch
  402832:	(bad)  
  402833:	mov    edi,0x603e7803
  402838:	leave  
  402839:	pushf  
  40283a:	xor    ebp,DWORD PTR [ecx]
  40283c:	push   0x59
  40283e:	rcl    BYTE PTR [ecx],cl
  402840:	jbe    0x40282f
  402842:	(bad)  
  402843:	mov    edi,0x603e7803
  402848:	out    0x6c,al
  40284a:	pop    es
  40284b:	cmc    
  40284c:	add    eax,0x8d11d3c3
  402851:	xchg   edi,eax
  402852:	add    BYTE PTR [eax],al
  402854:	cld    
  402855:	std    
  402856:	loope  0x402879
  402858:	mov    WORD PTR [ebx],ds
  40285a:	push   ebp
  40285b:	lods   eax,DWORD PTR ds:[esi]
  40285c:	and    eax,0x72474abd
  402861:	cmc    
  402862:	sti    
  402863:	or     al,0xa4
  402865:	push   ebx
  402866:	mov    bh,0x38
  402868:	adc    DWORD PTR [esi],eax
  40286a:	fnsave [eax+0x71]
  40286d:	cmp    ch,al
  40286f:	inc    esi
  402870:	inc    edx
  402871:	out    dx,al
  402872:	and    esi,DWORD PTR [esi-0x70d7db89]
  402878:	popf   
  402879:	inc    eax
  40287a:	mov    esp,0x95614c65
  40287f:	mov    ebp,0x53e7535f
  402884:	lea    ebp,ds:0x399f5a1c
  40288a:	sub    DWORD PTR [eax-0x43],ecx
  40288d:	push   esp
  40288e:	cmp    eax,0xe800009c
  402893:	jae    0x402863
  402895:	ja     0x402873
  402897:	sub    DWORD PTR [ebx+0x7a469295],esi
  40289d:	mov    DWORD PTR [edx-0x1ccd45e3],ecx
  4028a3:	ja     0x40287d
  4028a5:	ficomp DWORD PTR [ebx+0x6f1a133e]
  4028ab:	adc    edi,DWORD PTR [edi]
  4028ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ae:	xchg   ecx,eax
  4028af:	sub    ax,0xe76c
  4028b3:	pop    esp
  4028b4:	xchg   edx,eax
  4028b5:	lahf   
  4028b6:	retf   
  4028b7:	jmp    0x9790a6b9
  4028bc:	fimul  DWORD PTR [ebp+ecx*4-0x2e]
  4028c0:	push   ebp
  4028c1:	fcomp  st(5)
  4028c3:	inc    ebp
  4028c4:	sub    bh,BYTE PTR [ecx-0x6407e272]
  4028ca:	push   ecx
  4028cb:	jmp    0x40285a
  4028cd:	shl    DWORD PTR [ebx-0x532e8c22],0x8e
  4028d4:	xchg   ebx,eax
  4028d5:	add    ch,bl
  4028d7:	adc    ecx,esp
  4028d9:	std    
  4028da:	or     bl,BYTE PTR [edx-0x63]
  4028dd:	adc    ah,cl
  4028df:	xor    esi,DWORD PTR [ecx-0x31]
  4028e2:	mov    WORD PTR [ecx+0x36],?
  4028e5:	add    BYTE PTR [edi-0x27],al
  4028e8:	cmp    BYTE PTR [esi],ch
  4028ea:	ror    DWORD PTR [edi+0x27],0x35
  4028ee:	push   esp
  4028ef:	inc    eax
  4028f0:	push   ebx
  4028f1:	shr    DWORD PTR [edx+eax*1+0x9d57],1
  4028f8:	popf   
  4028f9:	ret    0xae2e
  4028fc:	adc    eax,0xaf9d6922
  402901:	(bad)  
  402902:	push   cs
  402903:	jno    0x4028ef
  402905:	adc    BYTE PTR [ecx+0x36],dh
  402908:	popf   
  402909:	cwde   
  40290a:	jmp    0x505ea447
  40290f:	(bad)  
  402910:	dec    ebx
  402911:	lea    ebx,[ebp-0x7f]
  402914:	push   0xfffffff4
  402916:	mov    DWORD PTR [ebp-0x63],esp
  402919:	lods   al,BYTE PTR ds:[esi]
  40291a:	jmp    0x6f0a0650
  40291f:	popf   
  402920:	scas   eax,DWORD PTR es:[edi]
  402921:	mov    esi,0xf46a70ce
  402926:	jo     0x40295e
  402928:	popf   
  402929:	lods   al,BYTE PTR ds:[esi]
  40292a:	jmp    0xe866e467
  40292f:	imul   ebx,DWORD PTR [eax],0x5f
  402932:	push   0x70f46a70
  402937:	ss popf 
  402939:	lods   al,BYTE PTR ds:[esi]
  40293a:	jmp    0x866a477
  40293f:	cmp    al,0xc4
  402941:	add    al,0xd8
  402943:	int3   
  402944:	imul   esi,esp,0x49
  402947:	dec    esp
  402948:	popf   
  402949:	add    ch,cl
  40294b:	add    ebx,DWORD PTR [ebp-0xe6283fd]
  402951:	inc    esi
  402952:	in     eax,dx
  402953:	(bad)  
  402955:	xrelease mov BYTE PTR [eax-0x63],ah
  402959:	ret    0x9a2e
  40295c:	add    BYTE PTR [eax],al
  40295e:	adc    eax,0x31aa5d23
  402963:	inc    edi
  402964:	int    0xec
  402966:	int    0xf3
  402968:	mov    BYTE PTR [eax-0x63],ah
  40296b:	ret    0x9a2e
  40296e:	adc    eax,0x3650023
  402973:	fstp   QWORD PTR [edx+ecx*1]
  402976:	aam    0xb2
  402978:	adc    DWORD PTR [eax+esi*2+0x2],edx
  40297c:	shr    BYTE PTR [esi],0x9
  40297f:	loopne 0x402980
  402981:	in     eax,dx
  402982:	sbb    eax,0x95183156
  402987:	(bad)  
  402988:	dec    esp
  402989:	arpl   WORD PTR ds:0xb633a439,di
  40298f:	sti    
  402990:	push   ebp
  402991:	xor    eax,0xbaeb89b8
  402996:	mov    al,0xb4
  402998:	adc    DWORD PTR [edi-0x513ffda0],edx
  40299e:	and    al,0x8a
  4029a0:	and    BYTE PTR [esi],ch
  4029a2:	stos   DWORD PTR es:[edi],eax
  4029a3:	add    ah,0x62
  4029a6:	cmp    eax,0x356c11b4
  4029ab:	add    dl,BYTE PTR [eax]
  4029ad:	mov    ds:0x2c04859f,eax
  4029b2:	pop    edi
  4029b3:	cmp    esp,DWORD PTR [ebx+0x481646da]
  4029b9:	jae    0x40293e
  4029bb:	pushf  
  4029bc:	jg     0x4029ba
  4029be:	out    0x5f,eax
  4029c0:	jbe    0x402a32
  4029c2:	add    BYTE PTR [eax],al
  4029c4:	jge    0x4029dd
  4029c6:	dec    ecx
  4029c7:	xor    BYTE PTR [ecx-0x4d],0x11
  4029cb:	push   edi
  4029cc:	pop    es
  4029cd:	add    al,al
  4029cf:	scas   al,BYTE PTR es:[edi]
  4029d0:	add    al,0x8a
  4029d2:	and    BYTE PTR [ecx+0x5b],ah
  4029d5:	pop    es
  4029d6:	daa    
  4029d7:	aas    
  4029d8:	js     0x40298e
  4029da:	adc    DWORD PTR [edx+0x43100266],ebx
  4029e0:	sahf   
  4029e1:	xor    DWORD PTR [edi+0x7b],0xffffffa2
  4029e5:	pop    ss
  4029e6:	dec    ecx
  4029e7:	inc    edx
  4029e8:	mov    al,0xb3
  4029ea:	adc    DWORD PTR [eax],eax
  4029ec:	or     ch,BYTE PTR [ebx+0x7cbbc000]
  4029f2:	mov    BYTE PTR [eax],ah
  4029f4:	lds    edi,FWORD PTR [eax+edx*4-0x2ffe31bb]
  4029fb:	adc    DWORD PTR [ebp+0x4],ecx
  4029fe:	add    BYTE PTR [edx+0x242e4fb4],ch
  402a04:	dec    esp
  402a05:	imul   ecx,DWORD PTR [ebx+0x67],0x36
  402a09:	rcl    eax,cl
  402a0b:	adc    DWORD PTR [ecx+0x36],ecx
  402a0e:	add    al,al
  402a10:	jnp    0x4029b0
  402a12:	std    
  402a13:	(bad)  
  402a14:	fsub   QWORD PTR [edi*4-0x2f2498b7]
  402a1b:	adc    DWORD PTR [ecx],ebp
  402a1d:	aas    
  402a1e:	add    al,al
  402a20:	cmp    ebx,DWORD PTR [ebp+edi*8+0x64f3f2ff]
  402a27:	call   0x11d1:0xdd1b0000
  402a2e:	icebp  
  402a2f:	mov    esi,0x342f1000
  402a34:	ds std 
  402a36:	add    ebx,DWORD PTR [ebp-0x51]
  402a39:	ins    DWORD PTR es:[edi],dx
  402a3a:	push   ebx
  402a3b:	adc    dl,dl
  402a3d:	adc    edx,ebp
  402a3f:	into   
  402a40:	add    al,al
  402a42:	sti    
  402a43:	jns    0x4029cd
  402a45:	and    cl,ch
  402a47:	out    0x87,al
  402a49:	jmp    0x402aa2
  402a4b:	not    cl
  402a4d:	adc    edx,ecx
  402a4f:	into   
  402a50:	add    al,al
  402a52:	sti    
  402a53:	jns    0x4029dd
  402a55:	and    BYTE PTR [edx-0xb],dh
  402a58:	popf   
  402a59:	les    edi,FWORD PTR [edi+0x7f]
  402a5c:	rcl    BYTE PTR [ecx],cl
  402a5e:	sbb    DWORD PTR [edx+0x15e1000],0xbb9d0483
  402a68:	push   0x15
  402a6a:	loop   0x402a5b
  402a6c:	cmp    ecx,edx
  402a6e:	mov    WORD PTR [esi-0x77],?
  402a71:	add    ch,bl
  402a73:	xor    BYTE PTR [ebp+edi*8+0x1c3736e2],bh
  402a7a:	sub    BYTE PTR [edx+0x5066b388],bl
  402a80:	mov    bh,0x56
  402a82:	add    ch,BYTE PTR ds:0x72fb9b3e
  402a88:	push   DWORD PTR [edx-0x2c49290e]
  402a8e:	add    BYTE PTR [eax],al
  402a90:	mov    WORD PTR [edx+0x0],cs
  402a93:	add    BYTE PTR [ebp+0x47510123],cl
  402a99:	xchg   ebx,eax
  402a9a:	mov    edi,DWORD PTR [edi-0x2c3187a6]
  402aa0:	lods   al,BYTE PTR ds:[esi]
  402aa1:	mov    bh,ch
  402aa3:	call   FWORD PTR [edx-0x18aeff3d]
  402aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aaa:	js     0x402a5b
  402aac:	or     cl,bh
  402aae:	xor    edx,edx
  402ab0:	mov    WORD PTR [edi-0x35],?
  402ab3:	add    BYTE PTR [ebp-0x50],bl
  402ab6:	cdq    
  402ab7:	mov    BYTE PTR [ebp-0x43898e5e],bh
  402abd:	popf   
  402abe:	push   0x64
  402ac0:	jge    0x402b3b
  402ac2:	bound  esi,QWORD PTR [edx-0x44]
  402ac5:	mov    fs,WORD PTR [esi+0x74]
  402ac8:	mov    eax,0xbc70237b
  402acd:	jl     0x402b23
  402acf:	gs mov ecx,0x7d6f57c9
  402ad5:	lods   al,BYTE PTR ds:[esi]
  402ad6:	and    esi,DWORD PTR [edx-0x58]
  402ad9:	xchg   DWORD PTR [edi+0x69],edx
  402adc:	mov    BYTE PTR [esi+0x2886623],al
  402ae2:	push   edi
  402ae3:	gs xchg ecx,eax
  402ae5:	imul   ecx,DWORD PTR [esi+0x72],0x3e90cb3
  402aec:	popf   
  402aed:	add    ch,BYTE PTR [ecx-0x26fda155]
  402af3:	stos   BYTE PTR es:[edi],al
  402af4:	add    BYTE PTR [eax],al
  402af6:	pop    esi
  402af7:	add    ch,cl
  402af9:	add    ebx,DWORD PTR [ebp+0x1d83ef02]
  402aff:	mov    BYTE PTR [ecx-0x7e],ch
  402b02:	sbb    eax,0x9ff3e902
  402b07:	mov    BYTE PTR [ecx-0x77],ch
  402b0a:	pop    ds
  402b0b:	cmp    ch,0x6
  402b0e:	mov    al,ds:0x18472445
  402b13:	test   DWORD PTR [esi+eax*1-0x63],ebp
  402b17:	add    bh,BYTE PTR [ecx+0x69321d13]
  402b1d:	sbb    DWORD PTR [ebp-0x45d416f6],0x1a
  402b24:	mov    ecx,0xe6031d38
  402b29:	add    ecx,edx
  402b2b:	adc    bl,BYTE PTR [ecx]
  402b2d:	xor    al,0xcd
  402b2f:	mov    ch,cl
  402b31:	add    ebx,DWORD PTR [ebp+0x15841122]
  402b37:	sub    DWORD PTR [ecx+0x3],0xffffff9d
  402b3b:	add    cl,cl
  402b3d:	arpl   WORD PTR [ebp-0x5a943e96],di
  402b43:	or     ch,dh
  402b45:	pop    ebx
  402b46:	int    0x52
  402b48:	xchg   esi,eax
  402b49:	push   ebx
  402b4a:	int    0xa
  402b4c:	loope  0x402b51
  402b4e:	popf   
  402b4f:	or     ch,cl
  402b51:	or     ebx,DWORD PTR [ebp-0x62fc0efb]
  402b57:	add    ch,cl
  402b59:	add    eax,DWORD PTR [eax]
  402b5b:	add    BYTE PTR [ebp-0x6116fffe],bl
  402b61:	add    al,BYTE PTR [eax]
  402b63:	jmp    0xd9402e06
  402b68:	xchg   ebp,eax
  402b69:	inc    ecx
  402b6a:	add    ch,ah
  402b6c:	sahf   
  402b6d:	push   es
  402b6e:	add    cl,ah
  402b70:	sahf   
  402b71:	push   es
  402b72:	add    BYTE PTR [ecx],bl
  402b74:	fwait
  402b75:	inc    ecx
  402b76:	add    ch,ch
  402b78:	sahf   
  402b79:	pop    es
  402b7a:	add    cl,bl
  402b7c:	sahf   
  402b7d:	or     al,BYTE PTR [eax]
  402b7f:	stc    
  402b80:	mov    al,ds:0x9ee50041
  402b85:	add    al,0x0
  402b87:	leave  
  402b88:	sahf   
  402b89:	and    al,BYTE PTR [eax]
  402b8b:	fstp   DWORD PTR [eax-0x6112ffbf]
  402b91:	push   es
  402b92:	add    cl,bh
  402b94:	sahf   
  402b95:	repnz (bad) 
  402b97:	fcomp  DWORD PTR [ecx-0x610effbf]
  402b9d:	repnz dec eax
  402ba0:	sahf   
  402ba1:	and    al,BYTE PTR [eax]
  402ba3:	fldenv [ecx-0x610effbf]
  402ba9:	repnz jmp FWORD PTR [eax-0x67]
  402bad:	add    BYTE PTR [eax],0xf9
  402bb0:	test   eax,0x9ee10041
  402bb5:	and    al,BYTE PTR [eax]
  402bb7:	imul   esp,DWORD PTR [ecx-0x6e26fefe],0x90041
  402bc1:	add    BYTE PTR [ecx-0x6614ff7e],ah
  402bc7:	add    al,BYTE PTR [ecx+edi*8]
  402bca:	cdq    
  402bcb:	inc    ecx
  402bcc:	add    cl,cl
  402bce:	sahf   
  402bcf:	add    BYTE PTR [ecx],al
  402bd1:	jmp    0x402b74
  402bd3:	add    dl,BYTE PTR [eax]
  402bd5:	stc    
  402bd6:	mov    eax,ds:0xe5000041
  402bdb:	xor    ch,BYTE PTR cs:[esi]
  402bde:	jmp    0x24402be3
  402be3:	add    al,0x0
  402be5:	add    BYTE PTR [ecx+ecx*1],al
  402be8:	push   eax
  402be9:	add    ah,dh
  402beb:	or     BYTE PTR [eax],dl
  402bed:	add    BYTE PTR [eax],cl
  402bef:	or     DWORD PTR [ebx+0x0],esi
  402bf2:	test   BYTE PTR [ebx],0x1f
  402bf5:	add    BYTE PTR [ecx+ecx*1],al
  402bf8:	jo     0x402bfa
  402bfa:	hlt    
  402bfb:	or     BYTE PTR [eax],dh
  402bfd:	add    ah,dh
  402bff:	or     eax,0x3f400c0
  402c04:	or     al,BYTE PTR [eax]
  402c06:	les    ecx,FWORD PTR [eax]
  402c08:	pusha  
  402c09:	add    BYTE PTR [eax+ecx*1+0xdb40020],dh
  402c10:	mov    al,ds:0x8c400
  402c15:	add    ah,al
  402c17:	or     BYTE PTR [eax+0x4008b400],al
  402c1d:	add    BYTE PTR [ebp+ecx*1+0x57400e0],dh
  402c24:	push   es
  402c25:	add    BYTE PTR [eax],al
  402c27:	add    BYTE PTR [eax+ecx*1+0x8740058],al
  402c2e:	sbb    BYTE PTR [eax],al
  402c30:	je     0x402c41
  402c32:	nop
  402c33:	add    BYTE PTR [edi+0x5],dh
  402c36:	cmp    eax,DWORD PTR [eax]
  402c38:	test   BYTE PTR [eax],cl
  402c3a:	js     0x402c3c
  402c3c:	je     0x402c46
  402c3e:	cmp    BYTE PTR [eax],al
  402c40:	je     0x402c51
  402c42:	rol    BYTE PTR [eax],1
  402c44:	jne    0x402c4b
  402c46:	adc    DWORD PTR [eax],eax
  402c48:	inc    esp
  402c49:	or     BYTE PTR [eax+0x0],ch
  402c4c:	xor    al,0x8
  402c4e:	sub    BYTE PTR [eax],al
  402c50:	xor    al,0xf
  402c52:	mov    al,0x0
  402c54:	popf   
  402c55:	jmp    0xe9dd3465
  402c5a:	or     ecx,DWORD PTR [eax+0x480be99d]
  402c60:	popf   
  402c61:	jmp    0xb9de1c72
  402c66:	push   es
  402c67:	add    al,0x9d
  402c69:	jmp    0xe9dd8079
  402c6e:	or     edx,DWORD PTR [ebx*4-0x621cf42a]
  402c75:	fadd   DWORD PTR [ebx+ebp*1]
  402c78:	popf   
  402c79:	jmp    0xe9dda089
  402c7e:	or     esi,DWORD PTR [ebx*4-0x6237f517]
  402c85:	mov    edx,0xe99d0d04
  402c8a:	or     esp,DWORD PTR [eax+eax*1+0x0]
  402c8e:	popf   
  402c8f:	jmp    0xe9dd509f
  402c94:	or     ch,BYTE PTR [eax+0x40be99d]
  402c9a:	popf   
  402c9b:	jmp    0xe9ddb0ab
  402ca0:	or     eax,DWORD PTR [ebp+ebx*4-0x17]
  402ca4:	or     ch,al
  402ca6:	popf   
  402ca7:	mov    ecx,0xe99d0804
  402cac:	or     ebx,DWORD PTR [ebp+ebx*4-0x17]
  402cb0:	or     ebx,DWORD PTR [ebx*4-0x6267f517]
  402cb7:	fld    QWORD PTR [ebx+edx*2]
  402cba:	popf   
  402cbb:	jmp    0xe9dda8cb
  402cc0:	or     edi,DWORD PTR [ebx*4-0x6227f517]
  402cc7:	mov    bh,0x4
  402cc9:	pop    ss
  402cca:	popf   
  402ccb:	jmp    0x2dd98db
  402cd0:	jmp    0xe9429de0
  402cd5:	or     dh,ch
  402cd7:	add    ecx,ebp
  402cd9:	or     esp,DWORD PTR [ecx+0x190be902]
  402cdf:	add    ch,cl
  402ce1:	or     edx,ecx
  402ce3:	add    ch,cl
  402ce5:	or     dl,BYTE PTR ds:0x9e04d902
  402ceb:	add    ch,cl
  402ced:	or     ebp,DWORD PTR [edi+0x2]
  402cf0:	jmp    0xaf402d00
  402cf5:	add    dh,ah
  402cf7:	or     edi,DWORD PTR [esi]
  402cf9:	add    bh,dl
  402cfb:	add    al,0xbe
  402cfd:	add    ch,cl
  402cff:	or     ebp,DWORD PTR [edi+0x2]
  402d02:	jmp    0xe942dc12
  402d07:	or     ah,cl
  402d09:	add    eax,ebx
  402d0b:	add    al,0xa6
  402d0d:	add    ch,cl
  402d0f:	or     edi,DWORD PTR [edi]
  402d11:	add    ch,cl
  402d13:	or     edi,DWORD PTR [edi+0x2]
  402d16:	jmp    0xe9422e25
  402d1b:	or     ebx,DWORD PTR [edi+0x1f0be902]
  402d21:	add    ch,cl
  402d23:	or     ebx,DWORD PTR [edi+0x2]
  402d26:	jmp    0xd943ae35
  402d2b:	add    al,0x9a
  402d2d:	add    ch,cl
  402d2f:	or     esp,edi
  402d31:	add    ch,cl
  402d33:	or     esp,DWORD PTR [edi+0x110ae902]
  402d39:	add    edi,ebp
  402d3b:	add    al,0xde
  402d3d:	add    ch,cl
  402d3f:	or     esp,edi
  402d41:	add    ch,cl
  402d43:	or     esp,DWORD PTR [edi+0x710ae902]
  402d49:	add    eax,DWORD PTR [eax]
  402d4b:	fistp  DWORD PTR [ecx-0x6917000b]
  402d51:	ins    BYTE PTR es:[edi],dx
  402d52:	add    cl,ch
  402d54:	xchg   esi,eax
  402d55:	sub    al,0x0
  402d57:	jmp    0x8ee72d5c
  402d5c:	add    cl,ch
  402d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d5f:	or     al,0x0
  402d61:	jmp    0xe940b9fc
  402d66:	xchg   esi,eax
  402d67:	dec    esp
  402d68:	add    cl,ch
  402d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6b:	into   
  402d6c:	add    cl,bl
  402d6e:	cdq    
  402d6f:	(bad)  
  402d70:	(bad)  
  402d71:	call   0xe9405e0c
  402d76:	xchg   esi,eax
  402d77:	lock jmp FWORD PTR [eax]
  402d7a:	test   eax,0x9ffa0002
  402d7f:	adc    eax,0x5096e900
  402d84:	add    cl,ch
  402d86:	xchg   esi,eax
  402d87:	adc    BYTE PTR [eax],al
  402d89:	jmp    0xd840f437
  402d8e:	lahf   
  402d8f:	or     DWORD PTR [eax],eax
  402d91:	jmp    0xe9408e2c
  402d96:	xchg   esi,eax
  402d97:	and    BYTE PTR [eax],al
  402d99:	jmp    0xe940d447
  402d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9f:	add    BYTE PTR [eax],al
  402da1:	jmp    0xe940ae3c
  402da6:	xchg   esi,eax
  402da7:	inc    eax
  402da8:	add    cl,ch
  402daa:	test   eax,0x9fd900e6
  402daf:	or     eax,DWORD PTR [eax]
  402db1:	jmp    0xe940664c
  402db6:	xchg   esi,eax
  402db7:	clc    
  402db8:	(bad)  
  402db9:	call   0xfd40a467
  402dbe:	add    BYTE PTR [eax],al
  402dc0:	lahf   
  402dc1:	gs add cl,ch
  402dc4:	xchg   esi,eax
  402dc5:	pop    eax
  402dc6:	add    BYTE PTR [eax],al
  402dc8:	je     0x402dd7
  402dca:	add    BYTE PTR ds:[esi+eax*1-0x24],al
  402dcf:	add    BYTE PTR [esi+0x4],dh
  402dd2:	sbb    eax,DWORD PTR [eax]
  402dd4:	xor    al,0xd
  402dd6:	outs   dx,BYTE PTR ds:[esi]
  402dd7:	add    BYTE PTR [ecx*1+0x644002e],dh
  402dde:	mov    esp,0xe0d4400
  402de3:	add    BYTE PTR [ecx*1+0xd34008e],dh
  402dea:	dec    esi
  402deb:	add    BYTE PTR [esi+eax*1],al
  402dee:	cld    
  402def:	add    BYTE PTR [esp+eax*1],ah
  402df2:	add    BYTE PTR [eax],al
  402df4:	hlt    
  402df5:	or     al,0x51
  402df7:	add    ah,dh
  402df9:	or     al,0x11
  402dfb:	add    cl,dh
  402dfd:	or     al,0x83
  402dff:	add    dh,dh
  402e01:	add    ebx,DWORD PTR [edi]
  402e03:	add    ah,dh
  402e05:	or     al,0x71
  402e07:	add    ah,dh
  402e09:	or     al,0x31
  402e0b:	add    ah,al
  402e0d:	add    eax,0x3f400c2
  402e12:	or     al,BYTE PTR [eax]
  402e14:	mov    ah,0xc
  402e16:	popa   
  402e17:	add    BYTE PTR [esp+ecx*1+0x5c40021],dh
  402e1e:	mov    ds:0x10cc400,al
  402e23:	add    BYTE PTR [eax],al
  402e25:	add    BYTE PTR [esp+ecx*1+0xcb40081],dh
  402e2c:	inc    ecx
  402e2d:	add    BYTE PTR [edi+eax*1+0x57400e2],al
  402e34:	push   es
  402e35:	add    BYTE PTR [esp+ecx*1+0x59],dh
  402e39:	add    BYTE PTR [esp+ecx*1+0x19],dh
  402e3d:	add    BYTE PTR [edi+eax*1-0x2362ff6e],al
  402e44:	add    bh,BYTE PTR [ebx]
  402e46:	popf   
  402e47:	jmp    0xe9dda757
  402e4c:	or     edi,DWORD PTR [ecx]
  402e4e:	popf   
  402e4f:	jmp    0xbade0060
  402e54:	add    dl,BYTE PTR [ecx]
  402e56:	popf   
  402e57:	jmp    0xe9dd9767
  402e5c:	or     ebp,DWORD PTR [ecx]
  402e5e:	popf   
  402e5f:	jmp    0xe9dde070
  402e64:	or     ecx,DWORD PTR [ecx]
  402e66:	popf   
  402e67:	jmp    0xe9ddb777
  402e6c:	or     ecx,DWORD PTR [ecx-0x63]
  402e6f:	jmp    0xb9de2080
  402e74:	add    al,BYTE PTR [ebx*4-0x62aaf417]
  402e7b:	jmp    0xd9dd438b
  402e80:	or     eax,DWORD PTR [edx]
  402e82:	pushf  
  402e83:	fadd   QWORD PTR [eax]
  402e85:	sub    ebx,DWORD PTR [ebp+0x750be9]
  402e8b:	add    BYTE PTR [ebp-0x62caf417],bl
  402e91:	jmp    0xbaddf8a0
  402e96:	add    BYTE PTR ds:0x650be99d,cl
  402e9c:	popf   
  402e9d:	jmp    0xe9dd53ad
  402ea2:	or     ch,BYTE PTR [edx+0x50be99d]
  402ea8:	popf   
  402ea9:	jmp    0xe9ddb3b9
  402eae:	or     eax,DWORD PTR [ebp-0x63]
  402eb1:	jmp    0xb9de18c0
  402eb6:	add    BYTE PTR [eax],cl
  402eb8:	popf   
  402eb9:	jmp    0x2dd8bc9
  402ebe:	jmp    0xe942c6ce
  402ec3:	or     dl,BYTE PTR [edi]
  402ec5:	add    bh,ch
  402ec7:	add    dh,cl
  402ec9:	add    ch,cl
  402ecb:	or     esp,eax
  402ecd:	add    ch,cl
  402ecf:	or     ebx,DWORD PTR [eax+0x770ae902]
  402ed5:	add    bl,bl
  402ed7:	add    BYTE PTR [edx-0x4ff416fe],dh
  402edd:	add    ch,cl
  402edf:	or     ecx,DWORD PTR [eax-0x8f516fe]
  402ee5:	add    ecx,ebp
  402ee7:	or     ebx,DWORD PTR [eax+0x100be902]
  402eed:	add    ch,cl
  402eef:	or     eax,DWORD PTR [eax]
  402ef1:	add    BYTE PTR [eax+0x2],ch
  402ef4:	jmp    0xd9424603
  402ef9:	add    BYTE PTR [esi+0x6e0be902],bl
  402eff:	add    ch,cl
  402f01:	or     ecx,DWORD PTR [esi-0x21f40bfe]
  402f07:	add    edx,edi
  402f09:	add    BYTE PTR [esi+0x6e0be902],bh
  402f0f:	add    ch,cl
  402f11:	or     ecx,DWORD PTR [esi-0x24f516fe]
  402f17:	add    eax,ebx
  402f19:	add    BYTE PTR [esi+0x3e0be902],dl
  402f1f:	add    ch,cl
  402f21:	or     edi,DWORD PTR [esi+0x2]
  402f24:	jmp    0xe9422a33
  402f29:	or     ebx,DWORD PTR [esi+0x1e0be902]
  402f2f:	add    ch,cl
  402f31:	or     ebx,esi
  402f33:	add    ch,cl
  402f35:	or     bh,BYTE PTR [ebx+0x3]
  402f38:	add    cl,bl
  402f3a:	popf   
  402f3b:	std    
  402f3c:	(bad)  
  402f3d:	call   0xe94068d8
  402f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f43:	stc    
  402f44:	(bad)  
  402f45:	call   0xfd409bf1
  402f4a:	popf   
  402f4b:	inc    ecx
  402f4c:	add    cl,ch
  402f4e:	xchg   esi,eax
  402f4f:	pop    ecx
  402f50:	add    cl,ch
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	sbb    DWORD PTR [eax],eax
  402f55:	jmp    0xace72f5a
  402f5a:	add    bl,bl
  402f5c:	popf   
  402f5d:	icebp  
  402f5e:	(bad)  
  402f5f:	call   0xe94098fa
  402f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f65:	sub    DWORD PTR [eax],eax
  402f67:	jmp    0xe940bc13
  402f6c:	xchg   esi,eax
  402f6d:	or     DWORD PTR [eax],eax
  402f6f:	jmp    0xe940b90a
  402f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f75:	dec    ecx
  402f76:	add    cl,ch
  402f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f79:	int3   
  402f7a:	add    cl,bl
  402f7c:	popf   
  402f7d:	(bad)  
  402f7e:	(bad)  
  402f7f:	call   0xe9405d1a
  402f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f85:	in     eax,dx
  402f86:	jmp    FWORD PTR [eax]
  402f88:	mov    eax,ds:0xebfa0002
  402f8d:	adc    BYTE PTR [eax],al
  402f8f:	jmp    0xe9407d2a
  402f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f95:	or     eax,0xc4a1e900
  402f9a:	add    al,bl
  402f9c:	retf   
  402f9d:	add    al,0x0
  402f9f:	jmp    0xe9408d3a
  402fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa5:	sbb    eax,0xa4a1e900
  402faa:	add    cl,ch
  402fac:	xchg   esi,eax
  402fad:	std    
  402fae:	(bad)  
  402faf:	call   0x40ad4a
  402fb4:	test   BYTE PTR [ecx],cl
  402fb6:	inc    edi
  402fb7:	add    BYTE PTR [esi+eax*1+0xee],al
  402fbe:	fs aam 0x8
  402fc1:	add    BYTE PTR [ecx+ecx*1+0x5f],dh
  402fc5:	add    BYTE PTR [ecx+ecx*1+0x684001f],al
  402fcc:	sahf   
  402fcd:	add    BYTE PTR [eax-0x2c],ch
  402fd0:	bound  eax,QWORD PTR [eax]
  402fd2:	je     0x402fdd
  402fd4:	jg     0x402fd6
  402fd6:	inc    esp
  402fd7:	or     DWORD PTR [edi],edi
  402fd9:	add    BYTE PTR [esi+eax*1-0x22],al
  402fdd:	add    BYTE PTR [esi-0x2c],ah
  402fe0:	sbb    al,BYTE PTR [eax]
  402fe2:	xor    al,0x9
  402fe4:	outs   dx,DWORD PTR ds:[esi]
  402fe5:	add    BYTE PTR [ecx+ecx*1+0x2f],al
  402fe9:	add    BYTE PTR [esi+eax*1-0x42],al
  402fed:	add    BYTE PTR [ecx+ecx*1],dh
  402ff0:	(bad)  
  402ff2:	xor    al,0x9
  402ff4:	pop    DWORD PTR [eax]
  402ff6:	add    al,0x9
  402ff8:	dec    edi
  402ff9:	add    BYTE PTR [esi+eax*1],al
  402ffc:	inc    BYTE PTR [eax]
  402ffe:	adc    al,0xd4
  403000:	(bad)  
  403001:	push   esp
  403003:	or     BYTE PTR [eax+0x0],dl
  403006:	add    al,0x9
  403008:	adc    BYTE PTR [eax],al
  40300a:	call   0xe640a317
  40300f:	rcr    DWORD PTR [esi],cl
  403011:	add    ah,dh
  403013:	or     BYTE PTR [eax+0x0],dh
  403016:	les    ecx,FWORD PTR [eax]
  403018:	xor    BYTE PTR [eax],al
  40301a:	les    eax,FWORD PTR ds:0xd3e400c1
  403020:	or     DWORD PTR [eax],eax
  403022:	add    BYTE PTR [eax],al
  403024:	mov    ah,0x8
  403026:	pusha  
  403027:	add    ah,al
  403029:	or     BYTE PTR [eax],ah
  40302b:	add    ah,al
  40302d:	add    eax,0xeb9d00a1
  403032:	or     eax,DWORD PTR [eax]
  403034:	popf   
  403035:	jmp    0x403042
  403037:	sbb    BYTE PTR [ebp-0x62bff417],0xe9
  40303e:	or     al,0xe1
  403040:	popf   
  403041:	mov    ecx,0xe99d05fe
  403046:	or     ebx,DWORD PTR [eax-0x63]
  403049:	jmp    0xe9dd4859
  40304e:	or     al,0x91
  403050:	popf   
  403051:	fdivr  st,st(6)
  403053:	cmp    bl,BYTE PTR [ebp-0x6287f417]
  403059:	jmp    0xe9dd6869
  40305e:	or     al,0xd1
  403060:	popf   
  403061:	mov    edx,0xe99d10fe
  403066:	or     ebp,DWORD PTR [eax-0x63]
  403069:	jmp    0xe9dd5879
  40306e:	or     al,0xb1
  403070:	popf   
  403071:	jmp    0xe9dd3881
  403076:	or     ecx,DWORD PTR [eax+0x480be99d]
  40307c:	popf   
  40307d:	jmp    0xb9de218e
  403082:	inc    BYTE PTR [ebx]
  403084:	popf   
  403085:	jmp    0x408495
  40308a:	popf   
  40308b:	jmp    0xcedd449b
  403090:	or     esp,ebx
  403092:	popf   
  403093:	fdivr  st,st(4)
  403095:	sub    bl,BYTE PTR [ebp-0x628bf417]
  40309b:	jmp    0xe9dd64ab
  4030a0:	or     cl,cl
  4030a2:	popf   
  4030a3:	mov    edx,0xe99d0cfc
  4030a8:	or     esp,DWORD PTR [ebp+ebx*4+0x2]
  4030ac:	jmp    0xe942a9bc
  4030b1:	or     dh,ah
  4030b3:	add    ch,cl
  4030b5:	or     ebx,DWORD PTR [ecx+0x210be902]
  4030bb:	add    ch,cl
  4030bd:	or     ebx,ecx
  4030bf:	add    ch,cl
  4030c1:	or     dh,BYTE PTR [edx+eax*1-0x27]
  4030c5:	cld    
  4030c6:	call   0xe902:0xd90be902
  4030cd:	or     edx,DWORD PTR [ecx+0x40ae902]
  4030d3:	add    bh,ch
  4030d5:	cld    
  4030d6:	iret   
  4030d7:	add    ch,cl
  4030d9:	or     ebx,ecx
  4030db:	add    ch,cl
  4030dd:	or     edx,DWORD PTR [ecx+0x640ae902]
  4030e3:	add    bl,bl
  4030e5:	cld    
  4030e6:	stos   DWORD PTR es:[edi],eax
  4030e7:	add    ch,cl
  4030e9:	or     ecx,ecx
  4030eb:	add    ch,cl
  4030ed:	or     eax,DWORD PTR [eax]
  4030ef:	add    BYTE PTR [ecx-0x1bf516fe],al
  4030f5:	add    ecx,ebp
  4030f7:	or     edx,DWORD PTR [ecx+0x290be902]
  4030fd:	add    ch,cl
  4030ff:	or     esp,DWORD PTR [ecx+0x2]
  403102:	jmp    0xd9423511
  403107:	cld    
  403108:	lahf   
  403109:	add    ch,cl
  40310b:	or     ecx,DWORD PTR [edi+0x2]
  40310e:	jmp    0xf442c01e
  403113:	or     edi,DWORD PTR [esi]
  403115:	add    bh,dl
  403117:	cld    
  403118:	mov    edi,0x4f0be902
  40311d:	add    ch,cl
  40311f:	or     ecx,DWORD PTR [edi-0x1ff516fe]
  403125:	add    DWORD PTR [eax],eax
  403127:	fadd   st,st(1)
  403129:	pop    es
  40312a:	add    cl,ch
  40312c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312d:	pusha  
  40312e:	add    cl,ch
  403130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403131:	and    BYTE PTR [eax],al
  403133:	jmp    0xe940cecf
  403138:	xchg   esi,eax
  403139:	add    BYTE PTR [eax],al
  40313b:	jmp    0xe940b5e6
  403140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403141:	inc    esp
  403142:	add    cl,ch
  403144:	xchg   edi,eax
  403145:	out    0x0,eax
  403147:	fld    DWORD PTR [ecx-0x5916fff7]
  40314d:	sub    al,0x0
  40314f:	jmp    0xe9401dfa
  403154:	add    BYTE PTR [eax],al
  403156:	xchg   edi,eax
  403157:	ja     0x403159
  403159:	std    
  40315a:	popa   
  40315b:	inc    ebp
  40315c:	add    cl,ch
  40315e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315f:	dec    esp
  403160:	add    cl,ch
  403162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403163:	or     al,0x0
  403165:	jmp    0xdb40e901
  40316a:	inc    ecx
  40316b:	cmc    
  40316c:	(bad)  
  40316d:	call   0xe9408e18
  403172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403173:	sbb    al,0x0
  403175:	jmp    0xe940c911
  40317a:	xchg   esi,eax
  40317b:	cld    
  40317c:	(bad)  
  40317d:	call   0xe940ae28
  403182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403183:	cmp    al,0x0
  403185:	jmp    0xd9410921
  40318a:	add    DWORD PTR [edi],eax
  40318c:	add    cl,ch
  40318e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318f:	cmp    BYTE PTR [eax],al
  403191:	jmp    0x2940298c
  403196:	jmp    0x983b316c
  40319b:	adc    eax,0x57d6e900
  4031a0:	add    BYTE PTR [eax],al
  4031a2:	(bad)  
  4031a3:	int    0x35
  4031a5:	add    BYTE PTR [esi+ecx*8-0x31aff34],dh
  4031ac:	push   cs
  4031ad:	add    ah,al
  4031af:	int    0x65
  4031b1:	add    ah,al
  4031b3:	int    0x25
  4031b5:	add    BYTE PTR [esi+ecx*8+0xac],dh
  4031bc:	mov    ah,0xcd
  4031be:	add    eax,0x85cd8400
  4031c3:	add    BYTE PTR [ebp+ecx*8-0x318bffbb],al
  4031ca:	in     al,dx
  4031cb:	add    BYTE PTR [esp+edi*8+0x8],ah
  4031cf:	add    BYTE PTR [ebp+ecx*8-0x327bffa3],al
  4031d6:	sbb    eax,0x9cce7400
  4031db:	add    BYTE PTR [eax-0x4],ah
  4031de:	bound  eax,QWORD PTR [eax]
  4031e0:	inc    esp
  4031e1:	int    0x7d
  4031e3:	add    BYTE PTR [ebp+ecx*8+0x3d],al
  4031e7:	add    BYTE PTR [esi+ecx*8],dh
  4031ea:	fadd   QWORD PTR [eax]
  4031ec:	data16 cld 
  4031ee:	sbb    al,BYTE PTR [eax]
  4031f0:	inc    esp
  4031f1:	int    0x6d
  4031f3:	add    BYTE PTR [ebp+ecx*8+0x2d],al
  4031f7:	add    BYTE PTR [esi+ecx*8],dh
  4031fa:	mov    esp,0xdcd3400
  4031ff:	add    BYTE PTR [ecx*8-0x32fbff73],al
  403206:	dec    ebp
  403207:	add    ah,dh
  403209:	int    0xfc
  40320b:	add    BYTE PTR [esp+edi*8],dl
  40320e:	(bad)  
  40320f:	inc    DWORD PTR [ecx*8-0x32fbffb0]
  403216:	adc    BYTE PTR [eax],al
  403218:	icebp  
  403219:	int3   
  40321a:	add    BYTE PTR [eax],0x9d
  40321d:	int    0xa
  40321f:	pop    ds
  403220:	add    BYTE PTR [eax],al
  403222:	popf   
  403223:	(bad)  
  403225:	jo     0x4031c4
  403227:	(bad)  
  403229:	xor    BYTE PTR [ebp-0x623d0325],bl
  40322f:	stos   DWORD PTR es:[edi],eax
  403230:	or     cl,BYTE PTR [edx]
  403232:	popf   
  403233:	(bad)  
  403235:	pusha  
  403236:	popf   
  403237:	(bad)  
  403239:	and    BYTE PTR [ebp-0x625d0325],bl
  40323f:	(bad)  
  403241:	add    BYTE PTR [ebp-0x627f0427],bl
  403247:	fsincos 
  403249:	inc    eax
  40324a:	popf   
  40324b:	frndint 
  40324d:	loop   0x4031ec
  40324f:	test   eax,0xd99d060a
  403254:	sti    
  403255:	pop    eax
  403256:	popf   
  403257:	fsincos 
  403259:	sbb    BYTE PTR [ebp-0x626d0327],bl
  40325f:	int3   
  403260:	or     bh,BYTE PTR [ebx]
  403262:	popf   
  403263:	fsincos 
  403265:	js     0x403204
  403267:	fsincos 
  403269:	cmp    BYTE PTR [ebp-0x622d0327],bl
  40326f:	stos   BYTE PTR es:[edi],al
  403270:	or     dl,BYTE PTR [ecx]
  403272:	popf   
  403273:	fsincos 
  403275:	push   0x28fbd99d
  40327a:	popf   
  40327b:	frndint 
  40327d:	mov    dl,0x9d
  40327f:	fsincos 
  403281:	or     BYTE PTR [ebp+0x88fbd9],bl
  403287:	add    BYTE PTR [ebp-0x62b70427],bl
  40328d:	frndint 
  40328f:	repnz popf 
  403291:	test   eax,0xd99d040a
  403296:	sti    
  403297:	push   esp
  403298:	popf   
  403299:	add    ch,cl
  40329b:	sti    
  40329c:	xchg   ecx,eax
  40329d:	add    bh,cl
  40329f:	sti    
  4032a0:	pushf  
  4032a1:	add    edx,edi
  4032a3:	or     BYTE PTR [esi+0x49fbe902],al
  4032a9:	add    ch,cl
  4032ab:	sti    
  4032ac:	xchg   ecx,eax
  4032ad:	add    ch,cl
  4032af:	cli    
  4032b0:	xlat   BYTE PTR ds:[ebx]
  4032b1:	add    bl,al
  4032b3:	or     BYTE PTR [eax+0x39fbe902],ch
  4032b9:	add    ch,cl
  4032bb:	sti    
  4032bc:	add    DWORD PTR [edx],0x2f7fae9
  4032c2:	jmp    0xe942d4c2
  4032c7:	sti    
  4032c8:	sbb    DWORD PTR [edx],eax
  4032ca:	jmp    0xe94314ca
  4032cf:	cli    
  4032d0:	ja     0x4032d4
  4032d2:	(bad)  [eax]
  4032d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d5:	add    ch,cl
  4032d7:	sti    
  4032d8:	rol    DWORD PTR [edx],1
  4032da:	jmp    0xe942bcda
  4032df:	cli    
  4032e0:	pop    es
  4032e1:	add    bh,ch
  4032e3:	or     dh,ch
  4032e5:	add    ch,cl
  4032e7:	sti    
  4032e8:	rol    DWORD PTR [edx],1
  4032ea:	jmp    0x894033ea
  4032ef:	add    ch,cl
  4032f1:	cli    
  4032f2:	addr16 add bl,bl
  4032f5:	or     BYTE PTR [edx-0x3e0416fe],dl
  4032fb:	add    ch,cl
  4032fd:	sti    
  4032fe:	jns    0x403302
  403300:	jmp    0xe9421aff
  403305:	sti    
  403306:	test   eax,0x21fbe902
  40330b:	add    ch,cl
  40330d:	sti    
  40330e:	pop    ecx
  40330f:	add    ch,cl
  403311:	cli    
  403312:	pop    es
  403313:	add    al,BYTE PTR [eax]
  403315:	fldenv [ebp-0x916fffd]
  40331b:	xor    eax,DWORD PTR [eax]
  40331d:	jmp    0xf4402708
  403322:	out    0xc3,al
  403324:	add    dl,bh
  403326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403327:	and    eax,DWORD PTR [eax]
  403329:	jmp    0xe9408704
  40332e:	(bad)  
  40332f:	adc    eax,DWORD PTR [eax]
  403331:	jmp    0xd840fafd
  403336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403337:	sti    
  403338:	(bad)  
  403339:	call   0xe94096f4
  40333e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40333f:	and    eax,DWORD PTR [eax]
  403341:	jmp    0xe940daed
  403346:	xchg   esi,eax
  403347:	add    DWORD PTR [eax],eax
  403349:	jmp    0xe940b4e4
  40334e:	xchg   BYTE PTR [ecx+0x0],al
  403351:	jmp    0xe5c73356
  403356:	add    cl,bl
  403358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403359:	add    eax,0x2976e900
  40335e:	add    cl,ch
  403360:	jmpw   0x1c63
  403364:	addr16 jne 0x403367
  403367:	std    
  403368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403369:	inc    ecx
  40336a:	add    cl,ch
  40336c:	push   esi
  40336d:	dec    ecx
  40336e:	add    cl,ch
  403370:	inc    esi
  403371:	or     DWORD PTR [eax],eax
  403373:	jmp    0xdb40e8bf
  403378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403379:	icebp  
  40337a:	(bad)  
  40337b:	call   0xe9408cb6
  403380:	sbb    DWORD PTR es:[eax],eax
  403383:	jmp    0xe940c8af
  403388:	push   ss
  403389:	stc    
  40338a:	(bad)  
  40338b:	call   0x40aca6
  403390:	hlt    
  403391:	leave  
  403392:	dec    edx
  403393:	add    ah,dh
  403395:	enter  0xf6,0xd4
  403399:	cli    
  40339a:	add    al,0x0
  40339c:	add    al,0xca
  40339e:	push   esi
  40339f:	add    ah,dh
  4033a1:	leave  
  4033a2:	push   ss
  4033a3:	add    BYTE PTR [esi+ecx*8+0x4d7ffff],dh
  4033aa:	xor    eax,DWORD PTR [eax]
  4033ac:	(bad)  
  4033ad:	leave  
  4033ae:	jbe    0x4033b0
  4033b0:	mov    ah,0xc9
  4033b2:	add    BYTE PTR ss:[esi+ecx*8+0xce],dh
  4033ba:	aad    0x4
  4033bc:	sldt   esp
  4033bf:	leave  
  4033c0:	data16 add BYTE PTR [ecx+ecx*8-0x314bffda],dh
  4033c8:	scas   al,BYTE PTR es:[edi]
  4033c9:	add    BYTE PTR [ecx+ecx*8-0x367bfffa],al
  4033d0:	xchg   BYTE PTR [eax],al
  4033d2:	je     0x40339d
  4033d4:	inc    esi
  4033d5:	add    BYTE PTR [esi+ecx*8-0x12],dh
  4033d9:	add    BYTE PTR [esp+eax*1+0x9],dl
  4033dd:	add    BYTE PTR [ecx+ecx*8-0x368bffa2],al
  4033e4:	push   ds
  4033e5:	add    BYTE PTR [esi+ecx*8-0x62],dh
  4033e9:	add    BYTE PTR [eax+0x4],bl
  4033ec:	arpl   WORD PTR [eax],ax
  4033ee:	inc    esp
  4033ef:	leave  
  4033f0:	jle    0x4033f2
  4033f2:	xor    al,0xc9
  4033f4:	add    BYTE PTR ds:[esi+ecx*8],dh
  4033f8:	fiadd  WORD PTR [eax]
  4033fa:	push   esi
  4033fb:	add    al,0x1b
  4033fd:	add    BYTE PTR [ecx+ecx*8+0x6e],al
  403401:	add    BYTE PTR [ecx+ecx*8],dh
  403404:	add    BYTE PTR cs:[esi+ecx*8],dh
  403408:	mov    esi,0xfbdb9d00
  40340d:	push   cs
  40340e:	popf   
  40340f:	(bad)  
  403411:	mov    ds,WORD PTR [ebp-0x62b10425]
  403417:	(bad)  
  403419:	(bad)  
  40341a:	popf   
  40341b:	stos   DWORD PTR es:[edi],eax
  40341c:	or     BYTE PTR [ecx],al
  40341e:	add    BYTE PTR [eax],al
  403420:	popf   
  403421:	mov    ah,0x8
  403423:	add    DWORD PTR [eax+ecx*8+0x9d1108],ebx
  40342a:	or     DWORD PTR [ecx],eax
  40342c:	lods   eax,DWORD PTR ds:[esi]
  40342d:	retf   0x508
  403430:	popf   
  403431:	ror    BYTE PTR [eax],cl
  403433:	add    DWORD PTR [ecx-0x62bef752],esp
  403439:	scas   al,BYTE PTR es:[edi]
  40343a:	or     BYTE PTR [ecx],al
  40343c:	pop    ebp
  40343d:	stos   DWORD PTR es:[edi],eax
  40343e:	or     BYTE PTR [ebx],al
  403440:	popf   
  403441:	mov    bl,0x8
  403443:	add    DWORD PTR [edi-0x62def731],ebx
  403449:	iret   
  40344a:	or     BYTE PTR [ecx],al
  40344c:	mov    ebp,0x9d0908c7
  403451:	iret   
  403452:	or     BYTE PTR [ecx],al
  403454:	xchg   ebp,eax
  403455:	stos   DWORD PTR es:[edi],eax
  403456:	or     BYTE PTR [ecx+0x9199d],al
  40345c:	popf   
  40345d:	test   eax,0xb49d0208
  403462:	or     BYTE PTR [ecx+0x1908c89c],al
  403468:	popf   
  403469:	add    BYTE PTR [ecx],cl
  40346b:	add    DWORD PTR [ebp-0x62f8f736],esi
  403471:	ror    BYTE PTR [eax],cl
  403473:	add    DWORD PTR [ebx-0x629ef752],esp
  403479:	scas   al,BYTE PTR es:[edi]
  40347a:	or     BYTE PTR [ecx],al
  40347c:	mov    ebp,0x9d0408a9
  403481:	mov    cl,0x8
  403483:	add    DWORD PTR [eax],eax
  403485:	add    BYTE PTR [esi+0x6c08fd02],bl
  40348b:	add    bh,ch
  40348d:	or     BYTE PTR [edx+edx*1+0x2a008fb],bl
  403494:	repz or BYTE PTR [esi+edi*8+0x2dc08de],bl
  40349c:	test   eax,0xd9029d08
  4034a1:	add    ecx,DWORD PTR [edx+eax*1+0x29d03db]
  4034a8:	icebp  
  4034a9:	add    ebx,DWORD PTR [edx-0x5cfc0ffe]
  4034af:	add    ah,bl
  4034b1:	add    ebx,DWORD PTR [eax-0x5efc1dfe]
  4034b7:	add    dh,ch
  4034b9:	add    ebx,DWORD PTR [esi-0x60fc13fe]
  4034bf:	add    ah,bh
  4034c1:	add    ebx,DWORD PTR [edx+eax*1+0x29d03de]
  4034c8:	jmp    0x7742d1d0
  4034cd:	adc    al,0xa2
  4034cf:	push   ebx
  4034d0:	lds    esp,FWORD PTR [edx-0x5d]
  4034d3:	fcom   QWORD PTR [ebx+0x33]
  4034d6:	xchg   esp,eax
  4034d7:	imul   esp,eax,0x6e03f0c7
  4034dd:	fadd   DWORD PTR [edi]
  4034df:	push   ebx
  4034e0:	mov    esp,0x4ad9fea6
  4034e5:	ja     0x4034e8
  4034e7:	ins    DWORD PTR es:[edi],dx
  4034e8:	sbb    edi,DWORD PTR [eax+eax*1+0x0]
  4034ec:	inc    esi
  4034ed:	cld    
  4034ee:	test   BYTE PTR [ecx+edi*2+0x68daf749],cl
  4034f5:	loop   0x403558
  4034f7:	stos   DWORD PTR es:[edi],eax
  4034f8:	outs   dx,DWORD PTR ds:[esi]
  4034f9:	jae    0x40350d
  4034fb:	inc    eax
  4034fc:	or     edi,ecx
  4034fe:	jnp    0x403550
  403500:	in     al,dx
  403501:	dec    ebx
  403502:	add    dh,ch
  403504:	xchg   ebx,eax
  403505:	mov    ah,bh
  403507:	pop    eax
  403508:	cmp    cl,BYTE PTR [eax+edx*4+0x1d942e8d]
  40350f:	sbb    eax,ecx
  403511:	xchg   edx,eax
  403512:	push   0xffffffa1
  403514:	outs   dx,DWORD PTR ds:[esi]
  403515:	mov    ebx,esi
  403517:	das    
  403518:	pop    esi
  403519:	mov    WORD PTR [esp+eax*4+0x121aa84a],es
  403520:	add    eax,0xb986dad
  403525:	mov    dh,0xf4
  403527:	and    ch,BYTE PTR es:[edi+0x5e713f83]
  40352e:	adc    ebp,DWORD PTR [ecx+0x53645736]
  403534:	out    0x5f,al
  403536:	std    
  403537:	mov    ebp,0x368a6507
  40353c:	lea    eax,[ecx]
  40353e:	adc    al,0xa0
  403540:	pop    edx
  403541:	add    al,0x63
  403543:	dec    edx
  403544:	mov    ds:0xabb4f9fb,al
  403549:	add    cl,BYTE PTR [ebp+0x3b5c7eb1]
  40354f:	aas    
  403550:	add    BYTE PTR [eax],al
  403552:	xchg   ecx,eax
  403553:	pop    ebx
  403554:	dec    esp
  403555:	(bad)  
  403556:	fbld   TBYTE PTR [edx-0x2b]
  403559:	sbb    ebp,esi
  40355b:	popa   
  40355c:	mov    ds:0x3c067a98,al
  403561:	es xor eax,0x1b744aff
  403567:	clc    
  403568:	rol    DWORD PTR [edx],1
  40356a:	adc    bh,ch
  40356c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356d:	arpl   WORD PTR [esi],ax
  40356f:	nop
  403570:	xor    eax,0x4294c6cd
  403575:	aas    
  403576:	pop    ss
  403577:	mov    ds,ebx
  403579:	test   eax,0xac8757
  40357e:	xlat   BYTE PTR ds:[ebx]
  40357f:	sub    eax,ebx
  403581:	xor    dh,cl
  403583:	sbb    edi,ebx
  403585:	inc    ebp
  403586:	jnp    0x403550
  403588:	aad    0xdc
  40358a:	or     eax,0xc8abd0f9
  40358f:	cmc    
  403590:	fsub   DWORD PTR [esi]
  403592:	inc    BYTE PTR ds:0x148451de
  403598:	xlat   BYTE PTR ds:[ebx]
  403599:	enter  0x6512,0xd0
  40359d:	mov    edi,0x21b4b1c1
  4035a2:	out    0xc1,eax
  4035a4:	mov    bl,0x56
  4035a6:	dec    ebp
  4035a7:	push   eax
  4035a8:	mov    edx,0xbda0cbcf
  4035ad:	mov    eax,0x2802771a
  4035b2:	int3   
  4035b3:	dec    ebp
  4035b4:	add    eax,0x3600005f
  4035b9:	cwde   
  4035ba:	or     al,0xc6
  4035bc:	mov    al,ds:0x33b10ba7
  4035c1:	cmp    ch,BYTE PTR [edi+0x2f]
  4035c4:	aad    0x11
  4035c6:	push   0x60dc1f58
  4035cb:	sar    DWORD PTR [ecx+0x24b665ea],0x3f
  4035d2:	fdiv   QWORD PTR [esi-0x7e]
  4035d5:	fild   DWORD PTR cs:[ecx]
  4035d8:	call   0x5ed907fb
  4035dd:	aad    0xd4
  4035df:	out    dx,eax
  4035e0:	or     eax,0x5b71b184
  4035e5:	jb     0x40359d
  4035e7:	push   es
  4035e8:	loope  0x4035cc
  4035ea:	mov    edi,0xb899279f
  4035ef:	call   0x7847bd0a
  4035f4:	mov    al,0xb7
  4035f6:	add    BYTE PTR [edi],cl
  4035f8:	popf   
  4035f9:	popa   
  4035fa:	pushf  
  4035fb:	or     DWORD PTR [ebx],esi
  4035fd:	shr    DWORD PTR [ebx+0xe],cl
  403600:	cmp    al,0x84
  403602:	stc    
  403603:	imul   edi,DWORD PTR [edx-0x5a92f70a],0xc645828
  40360d:	fisub  DWORD PTR [edi]
  40360f:	arpl   WORD PTR [ebx],di
  403611:	out    0x34,eax
  403613:	imul   eax,DWORD PTR [esi-0x4e939b83],0x13
  40361a:	adc    al,0x65
  40361c:	add    BYTE PTR [eax],al
  40361e:	and    BYTE PTR [ecx+0x3],ch
  403621:	bound  ecx,QWORD PTR [edi]
  403623:	out    dx,al
  403624:	jo     0x40362c
  403626:	mov    DWORD PTR [eax+eiz*4-0x2fe569ff],eax
  40362d:	or     BYTE PTR [edi],bl
  40362f:	jo     0x4035f0
  403631:	psubsb mm3,QWORD PTR [eax+0xb40b0ac]
  403638:	fnsave [edi-0x41743a51]
  40363e:	push   ss
  40363f:	aaa    
  403640:	jl     0x4035fb
  403642:	rcr    DWORD PTR [edi+0x123fdce8],0x19
  403649:	fimul  DWORD PTR [eax+0x19d3478c]
  40364f:	ds cmp ah,dl
  403652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403653:	inc    edx
  403654:	gs mov dl,0xe8
  403657:	xchg   edi,eax
  403658:	xor    al,0xb5
  40365a:	xlat   BYTE PTR ds:[ebx]
  40365b:	in     eax,0x3
  40365d:	mov    esp,0xbb137c3e
  403662:	imul   ebx,DWORD PTR [ebx],0x70e7dfa1
  403668:	jo     0x403642
  40366a:	mov    al,0xfe
  40366c:	mov    edi,0xcf5541d1
  403671:	(bad)  
  403672:	dec    esi
  403673:	add    edx,ebx
  403675:	fadd   st(4),st
  403677:	inc    ebx
  403678:	pop    ebp
  403679:	lods   al,BYTE PTR ds:[esi]
  40367a:	ret    
  40367b:	push   cs
  40367c:	scas   eax,DWORD PTR es:[edi]
  40367d:	jnp    0x403641
  40367f:	xchg   ebp,eax
  403680:	cmp    DWORD PTR [ebx-0x53430000],ecx
  403686:	mov    edx,0x443ea118
  40368b:	call   0x37d64a2f
  403690:	xchg   edi,eax
  403691:	pushf  
  403692:	and    BYTE PTR [edi-0x70],al
  403695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403696:	in     eax,0x54
  403698:	mov    al,ds:0x9f445332
  40369d:	pop    ds
  40369e:	stc    
  40369f:	repz xchg edi,eax
  4036a1:	mov    BYTE PTR [edi+0x23],ah
  4036a4:	xchg   ecx,eax
  4036a5:	mov    ecx,0x2f8590cc
  4036aa:	cmp    al,BYTE PTR [eax-0x501fdd7e]
  4036b0:	or     DWORD PTR [ecx-0x478320b2],0xfffffff7
  4036b7:	retf   0x28fb
  4036ba:	cmp    DWORD PTR [ebx+0x6c0b19f4],0x9c9592ed
  4036c4:	jmp    0x6829:0xee06debf
  4036cb:	imul   esi
  4036cd:	sbb    dl,dh
  4036cf:	daa    
  4036d0:	call   0xe798b364
  4036d5:	ret    0x84c9
  4036d8:	push   ebp
  4036d9:	aad    0x57
  4036db:	xchg   ebp,eax
  4036dc:	push   edx
  4036dd:	ins    BYTE PTR es:[edi],dx
  4036de:	in     eax,0xe5
  4036e0:	push   ebx
  4036e1:	add    esi,DWORD PTR [ebx-0x4a]
  4036e4:	dec    esp
  4036e5:	dec    esi
  4036e6:	rol    BYTE PTR [eax+0x0],0x0
  4036ea:	push   eax
  4036eb:	fmul   QWORD PTR [esi+0x51]
  4036ee:	dec    edi
  4036ef:	gs add ah,bl
  4036f2:	mov    esp,0x6f6a04ab
  4036f7:	stos   DWORD PTR es:[edi],eax
  4036f8:	jae    0x4036f5
  4036fa:	pop    ecx
  4036fb:	fs jecxz 0x403763
  4036fe:	mov    al,ds:0xeb17945e
  403703:	push   ebp
  403704:	or     eax,0x7a5c7381
  403709:	repnz cmc 
  40370b:	mul    ebx
  40370d:	pop    esp
  40370e:	fs stc 
  403710:	xchg   edx,eax
  403711:	push   cs
  403712:	pop    es
  403713:	add    cl,BYTE PTR [edx]
  403715:	js     0x4036ce
  403717:	(bad)  
  403718:	jl     0x4036c7
  40371a:	xchg   ecx,eax
  40371b:	imul   edi
  40371d:	cmp    edi,DWORD PTR [eax]
  40371f:	cli    
  403720:	xchg   BYTE PTR [ecx+0xf1e00f0],al
  403726:	(bad)  
  403728:	push   0xf764ada4
  40372d:	xor    bh,BYTE PTR [ebp+ebx*2-0x80]
  403731:	js     0x4036bf
  403733:	push   esi
  403734:	sbb    DWORD PTR [esi],eax
  403736:	lahf   
  403737:	pop    ebx
  403738:	outs   dx,BYTE PTR ds:[esi]
  403739:	pop    edi
  40373a:	enter  0xfeb2,0xc9
  40373e:	mov    cl,0xb3
  403740:	mov    DWORD PTR [ebx],esi
  403742:	pop    ebx
  403743:	lods   al,BYTE PTR ds:[esi]
  403744:	adc    BYTE PTR [ebp+0x5667a580],bl
  40374a:	add    al,0x89
  40374c:	stc    
  40374d:	rol    BYTE PTR [eax],0x0
  403750:	aad    0x87
  403752:	mov    gs,WORD PTR [edx]
  403754:	pop    ss
  403755:	(bad)  
  403756:	pop    ss
  403757:	xchg   esp,eax
  403758:	and    al,0x92
  40375a:	pusha  
  40375b:	xchg   ecx,eax
  40375c:	inc    ecx
  40375d:	lods   eax,DWORD PTR ds:[esi]
  40375e:	(bad)  
  40375f:	pop    ds
  403760:	or     BYTE PTR [ecx+eiz*4+0x38ab60ad],dh
  403767:	cmp    ebp,DWORD PTR [ebx-0x5a]
  40376a:	dec    edi
  40376b:	add    ch,dh
  40376d:	bound  edi,QWORD PTR [ebx-0x43ec642f]
  403773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403774:	adc    DWORD PTR [esi*4-0x4e0f40c1],eax
  40377b:	dec    eax
  40377c:	fsubrp st(6),st
  40377e:	or     al,0xd8
  403780:	add    bh,dl
  403782:	or     DWORD PTR [edi+0x360307ea],ebp
  403788:	push   esp
  403789:	cmp    BYTE PTR [ecx+eax*2],al
  40378c:	xchg   DWORD PTR [edx-0x64f620a0],ebp
  403792:	addr16 test al,0xe3
  403795:	dec    ebx
  403796:	outs   dx,BYTE PTR ds:[esi]
  403797:	xor    ebp,ebp
  403799:	jnp    0x403804
  40379b:	inc    esi
  40379c:	nop
  40379d:	outs   dx,BYTE PTR ds:[esi]
  40379e:	popa   
  40379f:	retf   
  4037a0:	sahf   
  4037a1:	jg     0x403809
  4037a3:	mov    esp,0x256f8f54
  4037a8:	jmp    0xc32:0x595268df
  4037af:	int3   
  4037b0:	pop    es
  4037b1:	inc    ebx
  4037b2:	or     edi,DWORD PTR [ebx-0x2c530000]
  4037b8:	add    DWORD PTR [edx],esp
  4037ba:	and    esp,DWORD PTR [eax*1-0x4605fdab]
  4037c1:	lds    ebp,FWORD PTR [ecx+ecx*8+0x1846b2bc]
  4037c8:	mov    ah,0x2b
  4037ca:	mov    eax,0x2b5cb32b
  4037cf:	mov    esi,0x8cb5c2d7
  4037d4:	shl    BYTE PTR [ebp+0x2cd95c3f],1
  4037da:	shr    DWORD PTR [edi-0x22],1
  4037dd:	pop    ebx
  4037de:	hlt    
  4037df:	shl    BYTE PTR [ebx+ebx*4+0x5a],0xb3
  4037e4:	arpl   sp,bp
  4037e6:	popf   
  4037e7:	dec    edi
  4037e8:	mov    ds:0x72e2086a,eax
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	lahf   
  4037ef:	xor    bh,dh
  4037f1:	or     BYTE PTR [ecx],dl
  4037f3:	test   BYTE PTR ds:0x5f56760e,cl
  4037f9:	pop    es
  4037fa:	out    dx,eax
  4037fb:	test   al,0x2e
  4037fd:	add    BYTE PTR [eax+0x28bf3a59],ah
  403803:	iret   
  403804:	dec    ecx
  403805:	mov    eax,0xb11b7d3f
  40380a:	(bad)  
  40380b:	repz jmp 0xfd2:0x7660a9b5
  403813:	(bad)  
  403814:	test   ebp,edx
  403816:	inc    eax
  403817:	inc    esp
  403818:	xlat   BYTE PTR ds:[ebx]
  403819:	fadd   QWORD PTR [eax]
  40381b:	add    BYTE PTR [ecx-0x59245906],ah
  403821:	pop    es
  403822:	mov    dl,0xd3
  403824:	sbb    ebx,DWORD PTR [ecx-0xcf32b1f]
  40382a:	xchg   edx,eax
  40382b:	fnsave [ebp+0x45]
  40382e:	sbb    dl,0x9a
  403831:	push   cs
  403832:	out    dx,al
  403833:	mov    ebp,0xb91da01c
  403838:	repz stc 
  40383a:	dec    esi
  40383b:	mov    al,0x72
  40383d:	dec    esp
  40383e:	ds mov bh,0xb5
  403841:	mov    ch,0x29
  403843:	or     BYTE PTR ds:0xca0f5a2b,ah
  403849:	mov    al,ds:0x173b060a
  40384e:	sti    
  40384f:	add    BYTE PTR [esp+edi*4+0x32226565],cl
  403856:	xchg   esi,eax
  403857:	bound  esp,QWORD PTR [ebp+0x3c6bc667]
  40385d:	push   ds
  40385e:	mov    bh,0x6c
  403860:	mov    bl,0x2
  403862:	and    edx,esp
  403864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403865:	mov    ds:0xab98b18f,al
  40386a:	cmp    eax,0xab349983
  40386f:	xchg   edx,eax
  403870:	sahf   
  403871:	or     DWORD PTR [eax],ecx
  403873:	push   ds
  403874:	cli    
  403875:	fwait
  403876:	jbe    0x403865
  403878:	retf   0x24b2
  40387b:	aas    
  40387c:	hlt    
  40387d:	cmp    DWORD PTR [edx-0x34ffffb2],edx
  403883:	add    al,0xb3
  403885:	pop    ecx
  403886:	ins    BYTE PTR es:[edi],dx
  403887:	xchg   ebp,eax
  403888:	cmp    eax,0xcfaa7329
  40388d:	cli    
  40388e:	arpl   WORD PTR [ebx+0x59],ax
  403891:	or     dl,BYTE PTR [ebp+0xc]
  403894:	call   0xe665:0x2499f195
  40389b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389c:	mov    dh,0xb6
  40389e:	out    dx,eax
  40389f:	cmp    eax,DWORD PTR [eax-0x3a]
  4038a2:	push   eax
  4038a3:	adc    eax,DWORD PTR ds:0x738650d2
  4038a9:	rol    DWORD PTR [edi-0x47],0xd9
  4038ad:	jb     0x4038fd
  4038af:	xor    BYTE PTR [edi-0x5e],al
  4038b2:	xor    DWORD PTR [edi],ebx
  4038b4:	in     al,dx
  4038b5:	or     eax,0xfd5a88cd
  4038ba:	shl    DWORD PTR [ebp+0x2ec32ec0],cl
  4038c0:	cs pop esi
  4038c2:	hlt    
  4038c3:	pop    ds
  4038c4:	pop    ss
  4038c5:	dec    edx
  4038c6:	cmp    ecx,DWORD PTR [edi-0x41c3c55f]
  4038cc:	jmp    0x4038b6
  4038ce:	cmp    ah,BYTE PTR ds:0x184a1975
  4038d4:	inc    BYTE PTR [ebp+0x76888ea6]
  4038da:	cdq    
  4038db:	mov    edi,0xfdf9d200
  4038e0:	pop    ecx
  4038e1:	pop    esp
  4038e2:	jo     0x4038e4
  4038e4:	sub    eax,0x9e0000e9
  4038e9:	add    al,BYTE PTR [eax]
  4038eb:	sub    BYTE PTR [esi-0x94e719],ch
  4038f1:	or     al,0x32
  4038f3:	stos   BYTE PTR es:[edi],al
  4038f4:	lods   al,BYTE PTR ds:[esi]
  4038f5:	adc    eax,0x5633ed2b
  4038fa:	fs and al,0x4d
  4038fd:	dec    ebx
  4038fe:	jge    0x40396f
  403900:	add    BYTE PTR [eax],ch
  403902:	push   esi
  403903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403904:	retf   
  403905:	inc    ecx
  403906:	dec    edi
  403907:	icebp  
  403908:	aam    0xa9
  40390a:	enter  0x15b0,0xc0
  40390e:	shl    DWORD PTR [ebx+0x61],1
  403911:	sar    edx,cl
  403913:	and    al,BYTE PTR [esi]
  403915:	into   
  403916:	jecxz  0x40390d
  403918:	imul   ecx,DWORD PTR [ebp-0x6b1f5354],0x7f8a67b5
  403922:	sahf   
  403923:	push   ds
  403924:	add    eax,0xcb8876b
  403929:	ror    DWORD PTR [edx-0x7],0xbd
  40392d:	test   eax,0xce693a53
  403932:	js     0x4039af
  403934:	pop    esi
  403935:	shl    DWORD PTR [ecx-0x64],cl
  403938:	inc    ecx
  403939:	xchg   esp,eax
  40393a:	cs aad 0xc8
  40393d:	mov    WORD PTR [edi],?
  40393f:	push   ds
  403940:	adc    ch,BYTE PTR [edx+0x1c]
  403943:	push   edi
  403944:	sbb    eax,0x4140057f
  403949:	out    0x81,eax
  40394b:	add    DWORD PTR [eax],eax
  40394d:	add    BYTE PTR [esi],ah
  40394f:	add    bl,BYTE PTR [ebx-0x4feb2b4e]
  403955:	jae    0x40394c
  403957:	or     ebp,DWORD PTR [ecx+0x771b7900]
  40395d:	out    0xc8,al
  40395f:	sub    ch,BYTE PTR [edi+edi*8+0xb]
  403963:	inc    BYTE PTR [eax-0x2c]
  403966:	jmp    0x8421:0xe6cd59b7
  40396d:	xchg   ebp,eax
  40396e:	pop    ss
  40396f:	mov    cl,0x9e
  403971:	mov    WORD PTR [eax+eax*1-0x4e],ss
  403975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403977:	dec    edi
  403978:	test   eax,0xe8a4e2be
  40397d:	icebp  
  40397e:	and    esi,DWORD PTR [esi-0xd]
  403981:	call   0xc41ebcd6
  403986:	mov    eax,ds:0x2edac594
  40398b:	cwde   
  40398c:	pop    ebp
  40398d:	pop    ebp
  40398e:	out    dx,eax
  40398f:	es inc esi
  403991:	inc    esp
  403992:	pushf  
  403993:	jp     0x403a00
  403995:	outs   dx,DWORD PTR ds:[esi]
  403996:	pop    ebp
  403997:	leave  
  403998:	jo     0x403a10
  40399a:	or     bl,BYTE PTR [ebx+0x31]
  40399d:	cmp    ebx,ebx
  40399f:	jmp    0x4039ca
  4039a1:	and    BYTE PTR [eax+0x590b06bd],bl
  4039a7:	push   cs
  4039a8:	sbb    al,0x12
  4039aa:	mov    bh,0xf
  4039ac:	inc    esi
  4039ad:	fbld   TBYTE PTR [esi-0x42]
  4039b0:	pop    esp
  4039b1:	mov    BYTE PTR [eax],0x0
  4039b4:	and    eax,0xd4ed6ff2
  4039b9:	pusha  
  4039ba:	imul   esi,esp,0xfffffff3
  4039bd:	shr    DWORD PTR [edx],1
  4039bf:	mov    ebx,0xa231c3b2
  4039c4:	popa   
  4039c5:	xor    al,0x1c
  4039c7:	mov    DWORD PTR [eax],edx
  4039c9:	popw   es
  4039cb:	nop
  4039cc:	mov    edi,0xfe179f82
  4039d1:	xchg   ebx,eax
  4039d2:	test   BYTE PTR [esi],cl
  4039d4:	popf   
  4039d5:	push   edx
  4039d6:	loop   0x403981
  4039d8:	adc    BYTE PTR [ebx],0xb3
  4039db:	mov    dl,0x71
  4039dd:	enter  0xf33d,0x2e
  4039e1:	inc    ecx
  4039e2:	dec    esp
  4039e3:	call   0xc55f301f
  4039e8:	fsubr  QWORD PTR [edi-0x510a2213]
  4039ee:	push   edx
  4039ef:	jns    0x40397e
  4039f1:	out    0x41,eax
  4039f3:	bound  esi,QWORD PTR [eax+esi*1-0xf]
  4039f7:	dec    esi
  4039f8:	pop    edi
  4039f9:	imul   esp,DWORD PTR [eax],0x8daa5654
  4039ff:	adc    eax,0xe7eeb11
  403a04:	adc    BYTE PTR [esp+ebp*4],ch
  403a07:	and    eax,DWORD PTR [ebx]
  403a09:	ins    DWORD PTR es:[edi],dx
  403a0a:	fnstsw WORD PTR [eax]
  403a0c:	adc    dh,BYTE PTR [esi+0x6f85a0c8]
  403a12:	mov    bh,0xbb
  403a14:	jl     0x403a3e
  403a16:	imul   edx,DWORD PTR [esi+0x21a70000],0xffffff9a
  403a1d:	lea    ecx,[esi-0x3633fc4e]
  403a23:	jae    0x403a19
  403a25:	(bad)  
  403a26:	fsub   DWORD PTR [esi+eiz*1]
  403a29:	cli    
  403a2a:	mov    esp,ebp
  403a2c:	push   esi
  403a2d:	loope  0x4039b9
  403a2f:	jg     0x403a91
  403a31:	mov    ebx,0xa02fb647
  403a36:	add    DWORD PTR ds:[ebx],eax
  403a39:	lea    esp,ds:0xc961238
  403a3f:	fwait
  403a40:	fwait
  403a41:	xlat   BYTE PTR ds:[ebx]
  403a42:	retf   
  403a43:	fldcw  WORD PTR [esp+ecx*8-0x26]
  403a47:	sbb    al,0xbe
  403a49:	loope  0x403a14
  403a4b:	pop    ebx
  403a4c:	iret   
  403a4d:	cli    
  403a4e:	enter  0x4501,0xdb
  403a52:	aas    
  403a53:	xor    al,0xfc
  403a55:	test   eax,0x78b72d44
  403a5a:	push   ecx
  403a5b:	inc    edx
  403a5c:	outs   dx,BYTE PTR ds:[esi]
  403a5d:	xchg   DWORD PTR [edx+0x5b],esp
  403a60:	and    DWORD PTR [esi],edx
  403a62:	fwait
  403a63:	sbb    al,ah
  403a65:	out    0x89,al
  403a67:	adc    DWORD PTR [ebx+0x51e6d533],edx
  403a6d:	inc    esp
  403a6e:	mov    esi,0x882e4dfd
  403a73:	xchg   DWORD PTR es:[ebp+0x7b],ebx
  403a77:	aas    
  403a78:	int3   
  403a79:	or     al,0x66
  403a7b:	pop    eax
  403a7c:	add    eax,0x620000fc
  403a81:	push   ecx
  403a82:	dec    edx
  403a83:	jno    0x403a91
  403a85:	add    cl,BYTE PTR [ebx-0x37e4e85e]
  403a8b:	iret   
  403a8c:	add    dh,ah
  403a8e:	or     cl,al
  403a90:	adc    ebp,ebp
  403a92:	xchg   ebp,eax
  403a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a94:	sub    DWORD PTR [ebp+0x4f],0x47682d3
  403a9b:	xchg   DWORD PTR [edi-0x5b8a4261],ecx
  403aa1:	mov    BYTE PTR [edx+0x53c9e2e7],dl
  403aa7:	sbb    dh,cl
  403aa9:	rol    BYTE PTR [eax],cl
  403aab:	dec    edx
  403aac:	fwait
  403aad:	mov    ebx,0xa4783ac1
  403ab2:	pop    ds
  403ab3:	cmp    al,0xca
  403ab5:	out    dx,eax
  403ab6:	push   ebp
  403ab7:	dec    ebx
  403ab8:	mov    ecx,0xa41e9cf8
  403abd:	sbb    eax,0x68cedd4
  403ac2:	sti    
  403ac3:	jle    0x403b13
  403ac5:	dec    ebx
  403ac6:	cmp    dl,BYTE PTR [eax+0x79005455]
  403acc:	mov    esp,0xfb87925
  403ad1:	inc    ecx
  403ad2:	pusha  
  403ad3:	out    0x10,eax
  403ad5:	test   eax,0xbddb9ee7
  403ada:	(bad)  
  403adb:	push   ebp
  403adc:	push   cs
  403add:	rcl    ebp,cl
  403adf:	or     al,0x39
  403ae1:	retf   
  403ae2:	int3   
  403ae3:	ret    
  403ae4:	add    BYTE PTR [eax],al
  403ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae7:	mov    DWORD PTR [ebx-0x656e6b7e],eax
  403aed:	xor    ebp,esi
  403aef:	jle    0x403aa2
  403af1:	lock mov ebx,0x2932a867
  403af7:	cmp    DWORD PTR [ebx],0xfffffff3
  403afa:	neg    DWORD PTR [edx+0x753ba022]
  403b00:	or     DWORD PTR [ecx+0x60],esp
  403b03:	jo     0x403b15
  403b05:	ss retf 0x5faf
  403b09:	out    dx,eax
  403b0a:	mov    dl,0xb6
  403b0c:	inc    esi
  403b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b0e:	pushf  
  403b0f:	fldcw  WORD PTR [ebp+0x5d]
  403b12:	scas   eax,DWORD PTR es:[edi]
  403b13:	les    esi,FWORD PTR [edx+ebp*4-0x50]
  403b17:	pop    esp
  403b18:	repz jmp 0x403b54
  403b1b:	inc    edx
  403b1c:	jmp    0xde69:0xc12e7128
  403b23:	aaa    
  403b24:	fsubr  DWORD PTR [esi-0x186907bb]
  403b2a:	hlt    
  403b2b:	in     al,dx
  403b2c:	lea    ebp,[edx+edx*4]
  403b2f:	add    ah,BYTE PTR [ebp-0x43e4da9b]
  403b35:	add    ebx,DWORD PTR [ebx]
  403b37:	inc    ecx
  403b38:	jno    0x403afc
  403b3a:	sbb    DWORD PTR [eax+ebp*2+0x71],0x30433749
  403b42:	(bad)  
  403b43:	sub    eax,0x5202005a
  403b48:	sub    eax,0x3000015
  403b4d:	inc    ecx
  403b4e:	ss or  al,0x70
  403b51:	scas   eax,DWORD PTR es:[edi]
  403b52:	sbb    ah,BYTE PTR [edi]
  403b54:	mov    eax,ds:0xc63dffe2
  403b59:	add    bl,BYTE PTR [eax-0x7d4c7847]
  403b5f:	mov    al,ds:0x8bade534
  403b64:	cmc    
  403b65:	push   ebp
  403b66:	mov    ch,0x92
  403b68:	retf   0xf4c7
  403b6b:	fisttp QWORD PTR [ebx-0x73b1086]
  403b71:	sub    al,dl
  403b73:	out    dx,eax
  403b74:	sub    DWORD PTR [ecx+ebx*8+0x73e2df6],ebx
  403b7b:	scas   al,BYTE PTR es:[edi]
  403b7c:	in     al,dx
  403b7d:	mov    WORD PTR [edi+esi*4],ds
  403b80:	lahf   
  403b81:	mov    al,ds:0x735e9c31
  403b86:	sub    al,BYTE PTR [ebp-0x359506ef]
  403b8c:	ror    BYTE PTR [ecx+0x70],1
  403b8f:	shl    DWORD PTR [ebx+0x12f85d1f],cl
  403b95:	mov    al,0x45
  403b97:	loope  0x403b6e
  403b99:	mov    ebx,0xb1466dd
  403b9e:	lds    edi,FWORD PTR [edi+0x67]
  403ba1:	push   esi
  403ba2:	call   0xf325e1fb
  403ba7:	dec    ebp
  403ba8:	fnstenv [esi-0x4e]
  403bab:	add    bl,BYTE PTR [eax]
  403bad:	enter  0x1ba9,0x0
  403bb1:	add    bl,ch
  403bb3:	nop
  403bb4:	test   BYTE PTR [eax],dh
  403bb6:	call   0xc533:0x7c299f26
  403bbd:	in     al,0xbd
  403bbf:	(bad)  
  403bc0:	fdivp  st(5),st
  403bc2:	popf   
  403bc3:	ror    edi,1
  403bc5:	repz retf 
  403bc7:	nop
  403bc8:	mov    esi,0x2c47dae8
  403bcd:	test   eax,0xb25cbf1d
  403bd2:	xor    al,0x76
  403bd4:	or     bl,BYTE PTR [edi-0x7c04d2f1]
  403bda:	neg    BYTE PTR [ebx-0x258ee418]
  403be0:	sbb    DWORD PTR [edi],eax
  403be2:	jo     0x403bfd
  403be4:	inc    esi
  403be5:	sub    dl,BYTE PTR [ebx-0x5dcec8a8]
  403beb:	aas    
  403bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bed:	jo     0x403c44
  403bef:	jbe    0x403bc5
  403bf1:	imul   ebp,esp,0xffffffbd
  403bf4:	add    BYTE PTR [esi+0x17],0xf5
  403bf8:	jno    0x403c57
  403bfa:	(bad)  
  403bfb:	cmc    
  403bfc:	(bad)  
  403bfd:	cli    
  403bfe:	push   esi
  403bff:	lods   al,BYTE PTR ds:[esi]
  403c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c01:	loope  0x403c52
  403c03:	addr16 jns 0x403bd2
  403c06:	je     0x403c66
  403c08:	mov    bh,dl
  403c0a:	jge    0x403bfd
  403c0c:	adc    DWORD PTR [esi-0x731d4fce],edx
  403c12:	adc    esp,DWORD PTR [ebx+0x34]
  403c15:	mov    al,ds:0x22300000
  403c1a:	inc    ebp
  403c1b:	mov    ebx,0x23606d21
  403c20:	sahf   
  403c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c22:	das    
  403c23:	cmp    BYTE PTR [edi+0x6c14feef],dl
  403c29:	es push cs
  403c2b:	push   cs
  403c2c:	jne    0x403c97
  403c2e:	fwait
  403c2f:	dec    edi
  403c30:	mov    edx,0x9b546ca8
  403c35:	jmp    0x403bf0
  403c37:	jns    0x403ca1
  403c39:	sub    cl,bl
  403c3b:	bound  ebx,QWORD PTR [ecx+0x2]
  403c3e:	push   es
  403c3f:	leave  
  403c40:	lds    eax,FWORD PTR [ebx-0x65414841]
  403c46:	je     0x403caf
  403c48:	mov    ds:0x90962d71,eax
  403c4d:	push   0xa74903e2
  403c52:	mov    ds:0x50be6bf4,eax
  403c57:	and    bh,BYTE PTR [edi]
  403c59:	aad    0x11
  403c5b:	push   ebx
  403c5c:	inc    esp
  403c5d:	int3   
  403c5e:	dec    BYTE PTR [esi-0x44]
  403c61:	dec    edx
  403c62:	aaa    
  403c63:	ds mov bh,0x51
  403c66:	jl     0x403c58
  403c68:	retf   
  403c69:	cmp    BYTE PTR [ebp-0x25e026e1],dh
  403c6f:	mov    DWORD PTR [eax],edx
  403c71:	out    dx,eax
  403c72:	sbb    bh,BYTE PTR [ebx+0x33]
  403c75:	not    DWORD PTR [edi-0x55]
  403c78:	push   esi
  403c79:	sbb    al,0x99
  403c7b:	fadd   QWORD PTR [eax]
  403c7d:	add    BYTE PTR ds:0x3b29505,bh
  403c83:	pop    ebp
  403c84:	dec    esp
  403c85:	rol    DWORD PTR [eax],0x44
  403c88:	pop    es
  403c89:	xchg   ebp,eax
  403c8a:	in     eax,0x2e
  403c8c:	mov    esi,0x9135ce63
  403c91:	cmc    
  403c92:	mov    eax,?
  403c94:	dec    edi
  403c95:	push   es
  403c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c97:	fild   WORD PTR [edx]
  403c99:	pop    eax
  403c9a:	jns    0x403ca6
  403c9c:	ret    0x8a28
  403c9f:	adc    DWORD PTR [ebp+0x3c],ecx
  403ca2:	cli    
  403ca3:	xchg   esp,eax
  403ca4:	test   BYTE PTR [ebx-0x7],cl
  403ca7:	mov    ecx,edi
  403ca9:	sbb    cl,BYTE PTR [edi+eiz*2]
  403cac:	push   es
  403cad:	jmp    0xb156:0x7f497e14
  403cb4:	mov    BYTE PTR [eax-0x34ff5813],dl
  403cba:	lock mov ebp,0xa53a0ac0
  403cc0:	fldenv [ecx+edi*1+0x7f]
  403cc4:	adc    al,0x1d
  403cc6:	into   
  403cc7:	arpl   WORD PTR ds:0x26891fd6,cx
  403ccd:	(bad)  
  403cce:	ins    BYTE PTR es:[edi],dx
  403ccf:	xchg   ecx,eax
  403cd0:	aas    
  403cd1:	inc    eax
  403cd2:	cli    
  403cd3:	retf   
  403cd4:	jo     0x403cd7
  403cd6:	mov    ch,0xc7
  403cd8:	imul   esi,DWORD PTR [edx+0x7342a458],0x9c5bbd93
  403ce2:	add    BYTE PTR [eax],al
  403ce4:	je     0x403d0b
  403ce6:	(bad)  
  403ce8:	push   edi
  403ce9:	cmp    al,0xc5
  403ceb:	push   ds
  403cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ced:	dec    edi
  403cee:	out    dx,al
  403cef:	push   edi
  403cf0:	test   eax,0x3378f743
  403cf5:	or     DWORD PTR [eax-0x5eefc747],edi
  403cfb:	cli    
  403cfc:	(bad)  
  403cfd:	sti    
  403cfe:	mov    DWORD PTR [ebx],edi
  403d00:	dec    edx
  403d01:	out    0x92,al
  403d03:	jmp    0xd6403fa6
  403d08:	(bad)  
  403d09:	rol    BYTE PTR [ecx],0x7
  403d0c:	push   ebp
  403d0d:	xchg   BYTE PTR [ebx],al
  403d0f:	xor    bl,ch
  403d11:	inc    esp
  403d12:	add    ah,BYTE PTR [ebp-0x6df8f60f]
  403d18:	pop    edi
  403d19:	mov    DWORD PTR [esi],0x48ddd3b
  403d1f:	fs mov bl,0x4b
  403d22:	add    eax,0xe0feea1
  403d27:	outs   dx,BYTE PTR ds:[esi]
  403d28:	xor    al,0xd2
  403d2a:	(bad)  
  403d2c:	sbb    dl,BYTE PTR [ebx+0x54f8480d]
  403d32:	or     al,0x0
  403d34:	push   eax
  403d35:	js     0x403d51
  403d37:	or     DWORD PTR [edi],esi
  403d39:	xchg   edx,eax
  403d3a:	fmul   DWORD PTR [eax]
  403d3c:	(bad)  
  403d3d:	stos   DWORD PTR es:[edi],eax
  403d3e:	popf   
  403d3f:	or     bh,cl
  403d41:	inc    ebp
  403d42:	pop    esp
  403d43:	or     esp,DWORD PTR [edx+eiz*1]
  403d46:	es sbb al,0x0
  403d49:	add    BYTE PTR [ebx-0x38],al
  403d4c:	in     al,0x1d
  403d4e:	jmp    0x601b:0xdd1fa1f5
  403d55:	push   ds
  403d56:	dec    eax
  403d57:	or     DWORD PTR [edi],ebp
  403d59:	sbb    edi,DWORD PTR [edi]
  403d5b:	fucomip st,st(4)
  403d5d:	sbb    al,BYTE PTR [esi-0x2ee75423]
  403d63:	xor    ebp,DWORD PTR [ecx+0x19]
  403d66:	or     al,0x71
  403d68:	xor    eax,0xf796db12
  403d6d:	adc    esp,DWORD PTR [edx]
  403d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d70:	mov    al,0x11
  403d72:	and    eax,0xc010734b
  403d77:	pop    eax
  403d78:	cmp    al,0x15
  403d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d7b:	scas   al,BYTE PTR es:[edi]
  403d7c:	std    
  403d7d:	adc    al,0xce
  403d7f:	mov    BYTE PTR [eax+0x7a6aa916],bh
  403d85:	pop    ss
  403d86:	adc    al,0x40
  403d88:	dec    ebp
  403d89:	cmp    BYTE PTR [ebx],dh
  403d8b:	stos   BYTE PTR es:[edi],al
  403d8c:	mov    ?,WORD PTR [ecx]
  403d8e:	cli    
  403d8f:	xchg   ebx,eax
  403d90:	leave  
  403d91:	cmp    ecx,ebp
  403d93:	jge    0x403da0
  403d95:	cmp    bl,BYTE PTR [eax+0x68]
  403d98:	inc    esp
  403d99:	aas    
  403d9a:	dec    edi
  403d9b:	add    BYTE PTR [esi-0x404349c2],0x3c
  403da2:	mov    eax,ds:0x5c3d024e
  403da7:	divps  xmm6,XMMWORD PTR [esi]
  403daa:	imul   edi,ecx,0xffffff9b
  403dad:	aaa    
  403dae:	add    BYTE PTR [eax],al
  403db0:	popf   
  403db1:	sbb    ecx,eax
  403db3:	fidiv  DWORD PTR [eax-0x56]
  403db6:	push   0x18
  403db8:	imul   esp,DWORD PTR [edi],0x3ccc577c
  403dbe:	(bad)  
  403dbf:	xchg   ebp,eax
  403dc0:	int    0x45
  403dc2:	sub    bl,dl
  403dc4:	iret   
  403dc5:	push   es
  403dc6:	add    dl,BYTE PTR [ecx]
  403dc8:	into   
  403dc9:	cmp    esp,DWORD PTR [esi-0x73bf3e95]
  403dcf:	test   eax,0xeef211b8
  403dd4:	ret    0x57e2
  403dd7:	sub    eax,0x624e6fbb
  403ddc:	jle    0x403d62
  403dde:	in     al,0x9f
  403de0:	jg     0x403daf
  403de2:	call   0x7c24:0xb0ce7de6
  403de9:	adc    esi,DWORD PTR [eax+0x78]
  403dec:	xchg   DWORD PTR [eax-0x16794527],edi
  403df2:	and    edi,esp
  403df4:	je     0x403e50
  403df6:	push   cs
  403df7:	ds jne 0x403e71
  403dfa:	sbb    BYTE PTR [ecx-0x38],dh
  403dfd:	ins    BYTE PTR es:[edi],dx
  403dfe:	xor    dh,BYTE PTR [ebx-0xa33aa3f]
  403e04:	mov    ebx,0xb2376636
  403e09:	imul   ecx,DWORD PTR [ecx-0x5c6f1266],0x58
  403e10:	in     al,dx
  403e11:	inc    ecx
  403e12:	pop    ebp
  403e13:	push   ds
  403e14:	add    BYTE PTR [eax],al
  403e16:	out    dx,al
  403e17:	xor    dh,bh
  403e19:	fucomi st,st(7)
  403e1b:	lahf   
  403e1c:	loopne 0x403db0
  403e1e:	rcl    ah,cl
  403e20:	dec    edx
  403e21:	push   ecx
  403e22:	retf   
  403e23:	mov    ebp,0xded117b4
  403e28:	sahf   
  403e29:	aad    0xc8
  403e2b:	add    ah,cl
  403e2d:	xlat   BYTE PTR ds:[ebx]
  403e2e:	and    al,0x38
  403e30:	scas   al,BYTE PTR es:[edi]
  403e31:	jno    0x403e19
  403e33:	cmp    edi,edi
  403e35:	or     ebx,DWORD PTR [eax+0x52260837]
  403e3b:	lea    esi,ss:[eax]
  403e3e:	sbb    eax,0x5f1a5a3b
  403e43:	cmp    ah,BYTE PTR [ebx]
  403e45:	mov    eax,fs:0xdbce2c3c
  403e4b:	cmp    al,0x59
  403e4d:	jmp    0x2773:0x40662636
  403e54:	aaa    
  403e55:	mov    esi,0x940029a5
  403e5a:	out    0x27,eax
  403e5c:	xchg   ebp,eax
  403e5d:	adc    DWORD PTR [eax],0x4aa7a22d
  403e63:	sub    al,0xeb
  403e65:	push   ebp
  403e66:	mov    WORD PTR [edx],gs
  403e68:	mov    ah,0xfb
  403e6a:	iret   
  403e6b:	sub    dh,cl
  403e6d:	cmp    cl,BYTE PTR [edx]
  403e6f:	and    al,0x1e
  403e71:	adc    DWORD PTR [eax+0x25],eax
  403e74:	dec    edi
  403e75:	outs   dx,DWORD PTR ds:[esi]
  403e76:	jbe    0x403e9b
  403e78:	cmp    ch,al
  403e7a:	add    BYTE PTR [eax],al
  403e7c:	mov    ah,0x21
  403e7e:	popf   
  403e7f:	rol    BYTE PTR [ebx+0x1e],cl
  403e82:	retf   0xf978
  403e85:	push   ds
  403e86:	jae    0x403e8e
  403e88:	mov    edi,0x7d2c5c20
  403e8d:	and    cl,cl
  403e8f:	into   
  403e90:	push   edx
  403e91:	dec    ebx
  403e92:	mul    BYTE PTR [eax+ecx*4+0x49]
  403e96:	daa    
  403e97:	sbb    ecx,esi
  403e99:	dec    ebx
  403e9a:	adc    BYTE PTR [ecx],dh
  403e9c:	or     al,0x4d
  403e9e:	test   DWORD PTR [esi],esp
  403ea0:	jnp    0x403eea
  403ea2:	mov    dl,0xc
  403ea4:	mov    cl,0x48
  403ea6:	add    BYTE PTR [ebx-0x31],bl
  403ea9:	pop    esp
  403eaa:	dec    esp
  403eab:	inc    esp
  403eac:	gs fwait
  403eae:	dec    ebp
  403eaf:	sbb    DWORD PTR [eax],0xee8e46bf
  403eb5:	add    BYTE PTR [edi+0x5f],al
  403eb8:	aam    0x42
  403eba:	inc    ebp
  403ebb:	sub    BYTE PTR [edx-0x7e],al
  403ebe:	inc    esp
  403ebf:	lods   eax,DWORD PTR ds:[esi]
  403ec0:	adc    bh,al
  403ec2:	inc    ecx
  403ec3:	mov    edx,0x3400776
  403ec8:	aas    
  403ec9:	dec    edx
  403eca:	inc    edx
  403ecb:	int3   
  403ecc:	sbb    cl,BYTE PTR [ebx+eax*2+0x54b1c6b9]
  403ed3:	xchg   BYTE PTR [eax+0x72d754f3],bl
  403ed9:	sub    eax,0x6fcce057
  403ede:	push   esi
  403edf:	jne    0x403ee1
  403ee1:	add    dh,bl
  403ee3:	mov    edx,0xfc404253
  403ee8:	push   ecx
  403ee9:	or     ebx,DWORD PTR [edx-0x7bebafca]
  403eef:	js     0x403f42
  403ef1:	shl    DWORD PTR [esi+0x48be5aa1],1
  403ef7:	loop   0x403f53
  403ef9:	outs   dx,DWORD PTR ds:[esi]
  403efa:	add    ah,BYTE PTR [ecx]
  403efc:	pop    ecx
  403efd:	cwde   
  403efe:	sbb    al,0x5f
  403f00:	pop    eax
  403f01:	std    
  403f02:	das    
  403f03:	stos   DWORD PTR es:[edi],eax
  403f04:	pop    ebp
  403f05:	jmp    0x27ca:0x135be951
  403f0c:	pop    esi
  403f0d:	cmp    al,0x74
  403f0f:	pop    di
  403f11:	imul   ebx,DWORD PTR [eax-0x51a91f13],0x5487e0af
  403f1b:	jno    0x403eff
  403f1d:	mov    al,0xc2
  403f1f:	xor    esp,ebx
  403f21:	add    BYTE PTR [eax-0x5019c3d3],al
  403f27:	(bad)  
  403f29:	out    0x6,eax
  403f2b:	loop   0x403ee4
  403f2d:	in     eax,0x39
  403f2f:	add    BYTE PTR [edx-0x1c],bh
  403f32:	jl     0x403f7c
  403f34:	es out dx,eax
  403f36:	inc    ebx
  403f37:	mov    ds:0x98eaeee3,eax
  403f3c:	mov    ds:0x606755ec,al
  403f41:	in     eax,dx
  403f42:	push   0xe82f60
  403f47:	add    BYTE PTR [edi+0x7ee9ed86],dh
  403f4d:	mov    ah,0xaa
  403f4f:	jmp    0x403fc2
  403f51:	pop    edx
  403f52:	imul   ebp,edx,0xfd133694
  403f58:	mov    ebx,0x72fcd1d0
  403f5d:	jmp    0xff55:0x45dfe96
  403f64:	lock adc bl,BYTE PTR [edx]
  403f67:	cli    
  403f68:	mov    edi,0xf6fbd7f4
  403f6d:	jbe    0x403f0d
  403f6f:	stc    
  403f70:	dec    ecx
  403f71:	sub    DWORD PTR [eax+edi*8+0x6c],ebx
  403f75:	imul   eax,DWORD PTR [eax],0xfffffff3
  403f78:	push   ebx
  403f79:	jge    0x403f3d
  403f7b:	repnz call 0x4651:0xa5f083af
  403f83:	icebp  
  403f84:	clc    
  403f85:	inc    eax
  403f86:	or     esp,esi
  403f88:	daa    
  403f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8a:	retf   0x4ef5
  403f8d:	test   DWORD PTR [ebp+0x4f7b21f7],ecx
  403f93:	mul    BYTE PTR [ebp+ecx*2-0x4c542688]
  403f9a:	mov    ecx,0x8a9d9dd8
  403f9f:	cld    
  403fa0:	inc    edi
  403fa1:	shl    DWORD PTR [esi+edi*1+0x71ae4076],cl
  403fa8:	jae    0x403fdb
  403faa:	cwde   
  403fab:	mov    bl,0x0
  403fad:	add    BYTE PTR [edx-0x66],ch
  403fb0:	loop   0x403fa6
  403fb2:	pusha  
  403fb3:	jg     0x404001
  403fb5:	aaa    
  403fb6:	pop    ecx
  403fb7:	inc    esp
  403fb8:	pop    es
  403fb9:	imul   ecx,DWORD PTR [edx+0x45],0x21
  403fbd:	test   eax,0xefdb9653
  403fc2:	dec    ecx
  403fc3:	sub    esi,DWORD PTR [ebp+0x2d]
  403fc6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc8:	pop    edi
  403fc9:	(bad)  
  403fca:	in     eax,dx
  403fcb:	mov    eax,0xc1eca0c9
  403fd0:	xor    esp,esi
  403fd2:	out    dx,al
  403fd3:	xchg   BYTE PTR ds:0xb9bbcf24,bl
  403fd9:	pop    esi
  403fda:	fdivr  DWORD PTR [edi+ecx*4-0x12721e64]
  403fe1:	(bad)  
  403fe3:	bound  eax,QWORD PTR [ebx+0x18]
  403fe6:	loop   0x403fd7
  403fe8:	push   eax
  403fe9:	push   edi
  403fea:	fild   WORD PTR [eax]
  403fec:	not    DWORD PTR [esi+ebx*8-0x232c7ab7]
  403ff3:	dec    esi
  403ff4:	stos   DWORD PTR es:[edi],eax
  403ff5:	adc    ebp,ebx
  403ff7:	xchg   ebx,eax
  403ff8:	addr16 dec ebp
  403ffa:	out    0x34,al
  403ffc:	ror    DWORD PTR [edi-0x36c49a29],0xd5
  404003:	ficom  DWORD PTR ds:0xfef7640b
  404009:	inc    ebx
  40400a:	popa   
  40400b:	call   0xd198c638
  404010:	rol    al,cl
  404012:	add    BYTE PTR [eax],al
  404014:	push   edx
  404015:	mov    dh,0x7c
  404017:	add    ch,BYTE PTR [ebx+0x2]
  40401a:	sub    DWORD PTR [esi-0x47e96cbe],ecx
  404020:	clc    
  404021:	xchg   edx,eax
  404022:	mov    DWORD PTR [ecx-0x4a],0x45ebf090
  404029:	xchg   ecx,eax
  40402a:	gs idiv al
  40402d:	mov    edx,DWORD PTR [edx+0x50]
  404030:	ror    DWORD PTR [ebp-0x70805585],0xa4
  404037:	test   BYTE PTR ds:0xf1bf618e,bh
  40403d:	xchg   esp,eax
  40403e:	imul   ebp,DWORD PTR cs:[ebx+0x65137f94],0x173d8896
  404049:	xchg   edi,eax
  40404a:	or     eax,0xda9a4827
  40404f:	add    BYTE PTR [edx-0x33855c65],dl
  404055:	cdq    
  404056:	lods   al,BYTE PTR ds:[esi]
  404057:	aam    0xee
  404059:	xchg   edi,eax
  40405a:	f2xm1  
  40405c:	and    eax,0x5656e687
  404061:	xchg   BYTE PTR [edi-0x7f7b6f5c],dh
  404067:	mov    ch,dl
  404069:	test   BYTE PTR ds:0x22881d99,dl
  40406f:	scas   eax,DWORD PTR es:[edi]
  404070:	pop    edi
  404071:	mov    DWORD PTR [ebx+0x4d],ebp
  404074:	cdq    
  404075:	mov    esi,DWORD PTR [ebx+eiz*8]
  404078:	add    BYTE PTR [eax],al
  40407a:	loopne 0x404005
  40407c:	jno    0x40409d
  40407e:	pop    ss
  40407f:	sbb    DWORD PTR [esi-0x307fbafb],0xb8828373
  404089:	fnstcw WORD PTR [ecx-0x7e]
  40408c:	sbb    eax,0x4a7f2ec8
  404091:	pop    esi
  404092:	in     al,dx
  404093:	jge    0x404095
  404095:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404097:	or     eax,DWORD PTR [edi-0x79325324]
  40409d:	dec    ecx
  40409e:	dec    esi
  40409f:	mov    eax,ds:0xe2e476a9
  4040a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a6:	bound  ebx,QWORD PTR [esi]
  4040a8:	stos   BYTE PTR es:[edi],al
  4040a9:	nop
  4040aa:	sbb    BYTE PTR [esi-0x55],0x5
  4040ae:	xchg   ecx,eax
  4040af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b0:	scas   al,BYTE PTR es:[edi]
  4040b1:	xor    ch,BYTE PTR [edi-0x45245117]
  4040b7:	and    ebp,DWORD PTR [ebp-0x539a073c]
  4040bd:	add    DWORD PTR [eax],ebx
  4040bf:	mov    dl,0xa7
  4040c1:	push   cs
  4040c2:	imul   bh
  4040c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c5:	(bad)  
  4040c7:	sub    eax,0x6d13a8a4
  4040cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040cd:	sub    eax,0x3aa0ac01
  4040d2:	pop    edi
  4040d3:	clc    
  4040d4:	mov    al,ds:0xa3374583
  4040d9:	dec    esp
  4040da:	sub    esi,DWORD PTR [ebp-0x5e]
  4040dd:	cmp    DWORD PTR [eax],eax
  4040df:	add    BYTE PTR [edi-0x76f94a42],ch
  4040e5:	cld    
  4040e6:	mov    bl,0x57
  4040e8:	inc    ebx
  4040e9:	inc    edx
  4040ea:	mov    dh,0x60
  4040ec:	in     eax,0x80
  4040ee:	mov    bh,0xf5
  4040f0:	test   ebp,0x351c2b2
  4040f6:	mov    bl,0x8b
  4040f8:	fwait
  4040f9:	dec    ecx
  4040fa:	mov    cl,0x94
  4040fc:	jge    0x404085
  4040fe:	mov    al,0x51
  404100:	mov    edi,0x593ebbcc
  404105:	or     eax,0x4ff0efba
  40410a:	mov    eax,0xb9913518
  40410f:	add    BYTE PTR [eax],dl
  404111:	mov    esi,ebx
  404113:	mov    esp,0xbd1c5ef7
  404118:	cs dec esp
  40411a:	pop    edx
  40411b:	mov    edi,0xbe97b239
  404120:	test   bh,bh
  404122:	(bad)  
  404123:	jmp    DWORD PTR [ecx-0x4743eb]
  404129:	(bad)  
  40412a:	or     DWORD PTR [edx+0x12b51dda],ebp
  404130:	mov    bl,0x85
  404132:	bound  ecx,QWORD PTR [edi+0x37de6f06]
  404138:	sub    BYTE PTR [ebp+0x6b],cl
  40413b:	and    eax,0x9dd6b66d
  404140:	retf   
  404141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404142:	mov    bl,0xc5
  404144:	add    BYTE PTR [eax],al
  404146:	scas   al,BYTE PTR es:[edi]
  404147:	cmp    eax,0x5f507d08
  40414c:	mov    ebp,0x136056f
  404151:	xlat   BYTE PTR ds:[ebx]
  404152:	sbb    al,0x2d
  404154:	(bad)  
  404155:	dec    edx
  404156:	test   eax,0x7f26ad6
  40415b:	out    0xde,al
  40415d:	loopne 0x404171
  40415f:	packsswb mm3,QWORD PTR [eax+0x1b]
  404163:	inc    ebp
  404164:	sbb    DWORD PTR [eax-0x42],edx
  404167:	scas   al,BYTE PTR es:[edi]
  404168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404169:	call   0xfa50cf4e
  40416e:	xor    eax,0x8c42ac77
  404173:	mov    esi,0x5559df7b
  404178:	(bad)  
  404179:	test   DWORD PTR ds:0x7572,0xcdcddde2
  404182:	push   esp
  404183:	in     eax,dx
  404184:	lods   al,BYTE PTR ds:[esi]
  404185:	xchg   ebp,eax
  404186:	mov    cl,0x16
  404188:	adc    DWORD PTR ds:0xa46cd09d,ebp
  40418e:	fisub  DWORD PTR [ecx]
  404190:	rcr    DWORD PTR [eax],cl
  404192:	sbb    al,BYTE PTR [ecx]
  404194:	lods   al,BYTE PTR ds:[esi]
  404195:	iret   
  404196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404197:	fld    QWORD PTR [ebx+esi*2-0x3a1c77c1]
  40419e:	sub    eax,0xa57a3c63
  4041a3:	test   eax,0x453d3264
  4041a8:	int3   
  4041a9:	mov    es,WORD PTR [eax]
  4041ab:	add    BYTE PTR [ebp-0x58c4e3b2],al
  4041b1:	imul   eax,DWORD PTR [ebx],0xffffff87
  4041b4:	(bad)  
  4041b6:	cld    
  4041b7:	dec    edi
  4041b8:	jp     0x404159
  4041ba:	push   esp
  4041bb:	in     al,dx
  4041bc:	sub    bh,BYTE PTR [esi-0x4d]
  4041bf:	pop    ecx
  4041c0:	and    BYTE PTR [ecx],ch
  4041c2:	mov    ebp,fs
  4041c4:	jo     0x4041b0
  4041c6:	jnp    0x40414e
  4041c8:	rcl    BYTE PTR [edi+0x76403aa3],0x44
  4041cf:	(bad)
  4041d3:	xor    cl,BYTE PTR [edx-0x81becdf]
  4041d9:	cmp    al,0x2c
  4041db:	pop    eax
  4041dc:	outs   dx,DWORD PTR ds:[esi]
  4041dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041de:	fucomi st,st(5)
  4041e0:	pop    ebp
  4041e1:	ret    
  4041e2:	je     0x404235
  4041e4:	cmc    
  4041e5:	cmp    bh,BYTE PTR [ebx-0x6c1812d5]
  4041eb:	xchg   edi,eax
  4041ec:	push   ebp
  4041ed:	(bad)
  4041f0:	ja     0x404182
  4041f2:	dec    esp
  4041f3:	sahf   
  4041f4:	mov    edi,0x4a4923b1
  4041f9:	dec    esp
  4041fa:	or     esi,ebp
  4041fc:	fidiv  DWORD PTR [esi]
  4041fe:	pop    esp
  4041ff:	inc    eax
  404200:	rcl    bl,1
  404202:	ret    
  404203:	cld    
  404204:	inc    eax
  404205:	add    dh,BYTE PTR [edi]
  404207:	aam    0xa
  404209:	clc    
  40420a:	adc    DWORD PTR [ebx+0x7e],edi
  40420d:	jg     0x4041bb
  40420f:	or     al,0x0
  404211:	add    BYTE PTR [ebx],dh
  404213:	xchg   ecx,eax
  404214:	mov    DWORD PTR [ebx],esi
  404216:	(bad)  
  404217:	jmp    0x6cc88cfb
  40421c:	cmp    eax,0x5b04dde4
  404221:	xor    DWORD PTR [ecx+0x12],0xffffffb6
  404225:	pushf  
  404226:	in     eax,0x5a
  404228:	in     al,0x4b
  40422a:	xchg   ecx,eax
  40422b:	lea    eax,[ecx-0xd]
  40422e:	cmp    ah,ch
  404230:	pop    esi
  404231:	xchg   esp,eax
  404232:	mov    eax,0xfcbbb9f3
  404237:	jp     0x40424c
  404239:	ret    
  40423a:	rcl    DWORD PTR [esi],cl
  40423c:	out    dx,al
  40423d:	pop    ebx
  40423e:	push   edi
  40423f:	pop    esi
  404240:	mov    BYTE PTR [ebx],cl
  404242:	mov    edx,0x5e246570
  404247:	or     BYTE PTR [ebx],bh
  404249:	xor    al,0xfd
  40424b:	dec    edi
  40424c:	xchg   esi,eax
  40424d:	sbb    eax,DWORD PTR [ecx+0x446bb0a8]
  404253:	mov    dh,0xd
  404255:	shr    DWORD PTR [eax-0x205493c2],cl
  40425b:	ror    BYTE PTR [ecx-0x7c],cl
  40425e:	sbb    DWORD PTR [ebx],0xffffffe7
  404261:	loop   0x40424a
  404263:	sub    al,0xc2
  404265:	cmp    ebp,DWORD PTR [edx-0x3b]
  404268:	dec    ebx
  404269:	add    ebx,DWORD PTR [eax+0x2c1c26bd]
  40426f:	xor    eax,0x23a1cac0
  404274:	popf   
  404275:	arpl   WORD PTR [eax],ax
  404277:	add    BYTE PTR ds:0x3a8bfccb,dl
  40427d:	inc    esi
  40427e:	pop    ecx
  40427f:	mov    bl,0xee
  404281:	lods   eax,DWORD PTR ds:[esi]
  404282:	add    BYTE PTR [edi+0x4e],dh
  404285:	sub    dh,ch
  404287:	shl    BYTE PTR [edi-0x49cba936],cl
  40428d:	imul   ecx,DWORD PTR [esi],0xb6075911
  404293:	scas   eax,DWORD PTR es:[edi]
  404294:	aas    
  404295:	jae    0x40423b
  404297:	mov    dl,BYTE PTR [esi]
  404299:	call   FWORD PTR [ebx]
  40429b:	jecxz  0x4042ab
  40429d:	int3   
  40429e:	cmp    DWORD PTR [esi],0x58392866
  4042a4:	(bad)  
  4042a5:	aam    0x2b
  4042a7:	mov    ch,0x8f
  4042a9:	and    BYTE PTR [ebx+0x3ae927ea],dl
  4042af:	pop    es
  4042b0:	or     DWORD PTR [ebp-0x1eb09e7d],ecx
  4042b6:	nop
  4042b7:	jl     0x40429f
  4042b9:	xchg   ebx,eax
  4042ba:	sub    DWORD PTR ds:0xb8b44681,ebx
  4042c0:	xchg   edi,eax
  4042c1:	stos   BYTE PTR es:[edi],al
  4042c2:	or     al,0x96
  4042c4:	(bad)  
  4042c5:	cmp    eax,0xb25f331e
  4042ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042cb:	push   ebp
  4042cc:	dec    edi
  4042cd:	xchg   ebp,eax
  4042ce:	(bad)  
  4042cf:	jo     0x404287
  4042d1:	loopne 0x404318
  4042d3:	into   
  4042d4:	mov    bh,0x8b
  4042d6:	push   esp
  4042d7:	jmp    0x4042a7
  4042d9:	out    0xeb,eax
  4042db:	add    BYTE PTR [eax],0x0
  4042de:	(bad)  
  4042df:	mov    dl,0x71
  4042e1:	pop    ds
  4042e2:	(bad)  
  4042e3:	cmp    ecx,ecx
  4042e5:	stc    
  4042e6:	push   ds
  4042e7:	stos   BYTE PTR es:[edi],al
  4042e8:	fist   DWORD PTR [edi+eax*2+0x7e856346]
  4042ef:	out    dx,eax
  4042f0:	push   0x20
  4042f2:	xlat   BYTE PTR ds:[ebx]
  4042f3:	adc    ebx,0xfffffffe
  4042f6:	mov    dh,0xf8
  4042f8:	rcr    BYTE PTR [ebx+0x797c9f],0x8f
  4042ff:	lods   al,BYTE PTR ds:[esi]
  404300:	pop    esp
  404301:	in     al,0x52
  404303:	push   ebx
  404304:	loope  0x404362
  404306:	add    al,0x75
  404308:	push   esp
  404309:	dec    esi
  40430a:	fnstcw WORD PTR [ebx-0x18]
  40430d:	test   BYTE PTR [edi+0x2e],0x8b
  404311:	scas   al,BYTE PTR es:[edi]
  404312:	stos   BYTE PTR es:[edi],al
  404313:	bound  esi,QWORD PTR [edi]
  404315:	push   ss
  404316:	ins    BYTE PTR es:[edi],dx
  404317:	inc    esi
  404318:	add    BYTE PTR [ecx+eax*1],0x9a
  40431c:	cmp    eax,0xe91198bc
  404321:	and    DWORD PTR [ebp+0x239954de],esi
  404327:	leave  
  404328:	loopne 0x4042b5
  40432a:	ds ss pop esp
  40432d:	xor    edi,DWORD PTR [edi+0x29]
  404330:	pop    ecx
  404331:	in     eax,dx
  404332:	mov    ds:0xf455e5d3,al
  404337:	hlt    
  404338:	dec    edi
  404339:	inc    edi
  40433a:	or     ebx,edi
  40433c:	jmp    0x40433d
  40433e:	mov    al,0xa3
  404340:	cmp    ah,BYTE PTR [edx+0x0]
  404343:	add    BYTE PTR [ebp+0x39],cl
  404346:	xchg   edx,ebx
  404348:	sub    ecx,DWORD PTR [ebx-0x7b3937ce]
  40434e:	mov    ?,WORD PTR [eax+0x68]
  404351:	xchg   esp,eax
  404352:	in     eax,dx
  404353:	sub    BYTE PTR ds:0x5390515b,al
  404359:	dec    ecx
  40435a:	in     al,0x82
  40435c:	scas   al,BYTE PTR es:[edi]
  40435d:	mov    bl,0x57
  40435f:	cmp    dh,BYTE PTR [edi-0x55]
  404362:	mov    fs,WORD PTR [edi+0x1f32e45a]
  404368:	cld    
  404369:	ret    
  40436a:	xchg   BYTE PTR ds:0xb53a1931,cl
  404370:	pop    eax
  404371:	arpl   WORD PTR [eax-0x43],ax
  404374:	mov    ch,0x7c
  404376:	cld    
  404377:	add    eax,0x48dac89d
  40437c:	stos   BYTE PTR es:[edi],al
  40437d:	arpl   WORD PTR [ecx-0xb],ax
  404380:	cli    
  404381:	stos   DWORD PTR es:[edi],eax
  404382:	cmp    DWORD PTR [edx],esp
  404384:	(bad)  
  404385:	push   edi
  404386:	adc    ebx,DWORD PTR [esi+0x2b713127]
  40438c:	adc    eax,0x7d97cabe
  404391:	hlt    
  404392:	mov    edx,0x61ff25f4
  404397:	dec    eax
  404398:	pop    ebp
  404399:	pop    esp
  40439a:	add    bh,ch
  40439c:	outs   dx,DWORD PTR ds:[esi]
  40439d:	xchg   DWORD PTR [ecx],ebp
  40439f:	inc    ecx
  4043a0:	mul    DWORD PTR [edi+0x438a9651]
  4043a6:	jmp    0x4043d1
  4043a8:	add    BYTE PTR [eax],al
  4043aa:	jmp    0xb269:0xd09f994c
  4043b1:	and    eax,DWORD PTR [eax-0x2f94f561]
  4043b7:	sti    
  4043b8:	xor    edi,edx
  4043ba:	push   eax
  4043bb:	shl    BYTE PTR es:[edx+0x3a],cl
  4043bf:	cmp    DWORD PTR [ecx-0x22],0x98209ea
  4043c6:	pop    edi
  4043c7:	jne    0x404363
  4043c9:	mov    ch,0xb7
  4043cb:	xchg   edx,eax
  4043cc:	dec    ecx
  4043cd:	add    ch,al
  4043cf:	(bad)  
  4043d1:	mov    ebx,0xdef2524d
  4043d6:	adc    eax,0xcd63591d
  4043db:	mov    edx,0xa7bfd6aa
  4043e0:	xchg   ecx,eax
  4043e1:	push   0x27
  4043e3:	xchg   DWORD PTR [ecx-0x43],ebp
  4043e6:	call   0x21ae:0x3a01c1e3
  4043ed:	mov    ah,0x40
  4043ef:	mov    edx,edi
  4043f1:	pop    es
  4043f2:	nop
  4043f3:	add    al,BYTE PTR [ebx+0x1e0f6f41]
  4043f9:	(bad)  
  4043fb:	addr16 clc 
  4043fd:	mov    DWORD PTR [esi+0x75],edx
  404400:	xchg   ebp,eax
  404401:	mov    ds:0xca33fde2,al
  404406:	lods   eax,DWORD PTR ds:[esi]
  404407:	nop
  404408:	push   ecx
  404409:	jno    0x404414
  40440b:	fldcw  WORD PTR [esi-0x6bffffee]
  404411:	jmp    0x265c:0x830039c9
  404418:	fcmovne st,st(2)
  40441a:	stc    
  40441b:	add    al,0x17
  40441d:	and    edx,edi
  40441f:	pop    esi
  404420:	bound  esi,QWORD PTR [eax]
  404422:	jb     0x4043e1
  404424:	push   cs
  404425:	mov    ecx,0x5539b50b
  40442a:	es xchg esi,eax
  40442c:	xchg   ebp,eax
  40442d:	popf   
  40442e:	sub    ch,0x41
  404431:	scas   eax,DWORD PTR es:[edi]
  404432:	popf   
  404433:	dec    esi
  404434:	mov    WORD PTR [edi-0x11],es
  404437:	popf   
  404438:	shl    BYTE PTR [edx+ecx*1],1
  40443b:	jge    0x404489
  40443d:	mov    esp,0xcedee664
  404442:	add    DWORD PTR [ebp+0x45],0x722d1826
  404449:	stos   DWORD PTR es:[edi],eax
  40444a:	mov    ch,0xd
  40444c:	push   cs
  40444d:	inc    ebx
  40444e:	xchg   ebx,eax
  40444f:	jne    0x4044cc
  404451:	push   ecx
  404452:	cs (bad) 
  404454:	pop    es
  404455:	cdq    
  404456:	push   eax
  404457:	(bad)  
  404458:	and    al,0x71
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	gs pusha 
  40445d:	stc    
  40445e:	retf   0x2fd
  404461:	or     esp,esi
  404463:	sbb    al,0x59
  404465:	arpl   WORD PTR [edi+0x21ee2655],ax
  40446b:	test   bl,0x86
  40446e:	add    ah,bh
  404470:	and    DWORD PTR [eax+0x9996],edx
  404476:	cmp    ah,bl
  404478:	sub    eax,0x26567080
  40447d:	sbb    eax,0xfb9e99eb
  404482:	mov    DWORD PTR [edi-0x74],ecx
  404485:	xchg   esi,eax
  404486:	mov    al,0xa3
  404488:	xor    al,0x37
  40448a:	jecxz  0x404482
  40448c:	test   al,0x52
  40448e:	js     0x404508
  404490:	adc    DWORD PTR [eax+edi*8+0x21c902ec],ebp
  404497:	cmp    DWORD PTR [ebx-0x1c5df7a1],0x5b4f50fa
  4044a1:	aam    0xe1
  4044a3:	cdq    
  4044a4:	dec    ecx
  4044a5:	jno    0x40451f
  4044a7:	push   edi
  4044a8:	icebp  
  4044a9:	or     BYTE PTR [ebx-0x3fda9380],bl
  4044af:	in     al,dx
  4044b0:	rol    DWORD PTR [ebx-0x613987d0],cl
  4044b6:	leave  
  4044b7:	repz jge 0x40449b
  4044ba:	fldcw  WORD PTR [ebx]
  4044bc:	(bad)  
  4044bd:	cmp    al,0x43
  4044bf:	shr    DWORD PTR [esi+0x5a],0xd1
  4044c3:	xor    al,0x7c
  4044c5:	mov    bh,0x28
  4044c7:	mov    ecx,0xe6b16c4
  4044cc:	pop    ecx
  4044cd:	repz mov cl,0x61
  4044d0:	loope  0x40445f
  4044d2:	mov    al,ds:0x7968f316
  4044d7:	pop    edx
  4044d8:	dec    ebx
  4044d9:	add    BYTE PTR ds:[eax],al
  4044dc:	xor    DWORD PTR [edi+0x35189b13],0xc079b5ab
  4044e6:	mov    ecx,0x12ce310
  4044eb:	add    BYTE PTR [ebp+ebx*2-0x57],dh
  4044ef:	pushf  
  4044f0:	popa   
  4044f1:	jle    0x404508
  4044f3:	and    al,0xff
  4044f5:	mov    ch,0x9f
  4044f7:	sub    dl,BYTE PTR ss:[edi+0x1c]
  4044fb:	mov    ss,WORD PTR [ebx+0x15]
  4044fe:	data16 xchg BYTE PTR [esi-0x27c1260a],al
  404505:	mov    ebp,0x1efd2c6f
  40450a:	rcl    DWORD PTR [esp+eax*8+0x5109047f],cl
  404511:	gs mov eax,0xcee2fb1
  404517:	mov    ds:0x1bb0cdda,eax
  40451c:	ins    BYTE PTR es:[edi],dx
  40451d:	pushf  
  40451e:	rol    DWORD PTR [ebx-0x57],1
  404521:	aaa    
  404522:	outs   dx,BYTE PTR ds:[esi]
  404523:	sti    
  404524:	inc    edi
  404525:	je     0x404502
  404527:	jmp    0x51a7d44e
  40452c:	jnp    0x404576
  40452e:	mov    al,0xcc
  404530:	fisubr WORD PTR [esp+ecx*1+0x74]
  404534:	rcr    bh,1
  404536:	mov    eax,0x5042566
  40453b:	fidiv  WORD PTR [edi+edi*8-0x1]
  40453f:	inc    DWORD PTR [eax]
  404541:	add    BYTE PTR [ebx+0x1a963005],dh
  404547:	lods   al,BYTE PTR ds:[esi]
  404548:	pusha  
  404549:	sub    al,0xcd
  40454b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40454c:	push   eax
  40454d:	mov    edx,0x19c40c33
  404552:	xor    al,0x9
  404554:	hlt    
  404555:	(bad)  
  404556:	sbb    eax,0xda35a4e1
  40455b:	ficom  DWORD PTR [ebx+eiz*4+0x3288ba2a]
  404562:	std    
  404563:	mov    edx,0x399da4b8
  404568:	xlat   BYTE PTR ds:[ebx]
  404569:	jmp    0xda127a19
  40456e:	adc    eax,0xc64c75b2
  404573:	imul   esi,DWORD PTR [edx+0x7c],0x30
  404577:	cmp    al,0x6c
  404579:	sub    eax,0x1d6d49a2
  40457e:	or     al,0x6
  404580:	jne    0x404592
  404582:	inc    ecx
  404583:	(bad)  
  404584:	jae    0x4045a6
  404586:	iret   
  404587:	pop    es
  404588:	imul   esi,DWORD PTR [ecx+0x55],0x25
  40458c:	outs   dx,BYTE PTR ds:[esi]
  40458d:	inc    ecx
  40458e:	jecxz  0x40452e
  404590:	leave  
  404591:	aam    0x38
  404593:	jle    0x404563
  404595:	in     al,0xc6
  404597:	lods   al,BYTE PTR ds:[esi]
  404598:	xlat   BYTE PTR ds:[ebx]
  404599:	mov    ch,0x4c
  40459b:	sbb    cl,dl
  40459d:	test   edx,ebx
  40459f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a0:	pop    ds
  4045a1:	cwde   
  4045a2:	repz aas 
  4045a4:	sbb    DWORD PTR [eax-0x30a30000],ebp
  4045aa:	and    ecx,edi
  4045ac:	pop    es
  4045ad:	es es leave 
  4045b0:	jno    0x40457a
  4045b2:	add    bl,BYTE PTR [edx+ebp*8+0x3c]
  4045b6:	push   es
  4045b7:	ins    BYTE PTR es:[edi],dx
  4045b8:	push   esp
  4045b9:	jbe    0x4045b7
  4045bb:	cmp    al,0xfe
  4045bd:	inc    esi
  4045be:	sti    
  4045bf:	or     al,0x68
  4045c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c2:	sbb    eax,0x1ad86520
  4045c7:	adc    bl,dh
  4045c9:	and    ax,WORD PTR [ecx+0x41]
  4045cd:	ds and al,0x71
  4045d0:	iret   
  4045d1:	mov    edi,0xf54ce400
  4045d6:	pop    es
  4045d7:	aam    0xda
  4045d9:	(bad)  
  4045da:	inc    BYTE PTR [eax+ebp*1-0x494b06c1]
  4045e1:	add    bl,BYTE PTR [edi+esi*2]
  4045e4:	inc    ebp
  4045e5:	lods   eax,DWORD PTR ds:[esi]
  4045e6:	stos   DWORD PTR es:[edi],eax
  4045e7:	jno    0x40461e
  4045e9:	pop    ss
  4045ea:	xor    ch,BYTE PTR [eax-0x2c]
  4045ed:	sar    BYTE PTR [ebp+0x6f],1
  4045f0:	add    al,0x43
  4045f2:	sti    
  4045f3:	retf   
  4045f4:	mov    DWORD PTR [ebp+0x2f51cca4],esp
  4045fa:	adc    eax,0x82b998d5
  4045ff:	shl    BYTE PTR [eax-0x723530b5],cl
  404605:	push   esi
  404606:	mov    eax,0x20ec9dcd
  40460b:	aam    0x0
  40460d:	add    BYTE PTR [edx+eax*4+0x4e],ch
  404611:	sar    DWORD PTR [eax+edx*1],cl
  404614:	enter  0xb177,0x6f
  404618:	xchg   edi,eax
  404619:	jo     0x4045f4
  40461b:	in     eax,0x25
  40461d:	imul   edx,DWORD PTR [eax],0xf86e318c
  404623:	stc    
  404624:	adc    BYTE PTR [esi],al
  404626:	push   ebp
  404627:	mov    BYTE PTR [esi],bh
  404629:	add    DWORD PTR ds:0x65f8aefa,esp
  40462f:	je     0x4045c9
  404631:	push   DWORD PTR [ebp-0x22]
  404634:	adc    eax,0x2181f91b
  404639:	sbb    al,0xe1
  40463b:	adc    ebp,DWORD PTR [eax+0x775d8825]
  404641:	and    dh,BYTE PTR [eax-0x2337e119]
  404647:	xchg   edx,eax
  404648:	call   0x7141131b
  40464d:	(bad)  
  40464e:	jge    0x4046b6
  404650:	jle    0x404623
  404652:	lods   eax,DWORD PTR ds:[esi]
  404653:	fdivr  st(7),st
  404655:	je     0x404677
  404657:	jnp    0x404640
  404659:	jno    0x404643
  40465b:	or     BYTE PTR [eax],al
  40465d:	push   esi
  40465e:	mov    dh,0x9e
  404660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404661:	xor    DWORD PTR [ecx-0x601ecc32],0x9eeea2bb
  40466b:	stos   DWORD PTR es:[edi],eax
  40466c:	xor    al,0x7f
  40466e:	or     BYTE PTR [ecx-0x72],ah
  404671:	dec    eax
  404672:	add    BYTE PTR [eax],al
  404674:	pop    es
  404675:	xchg   ecx,eax
  404676:	sbb    dh,al
  404678:	cwde   
  404679:	idiv   DWORD PTR [edx+0x2ce795f1]
  40467f:	pop    eax
  404680:	mov    ebp,0xba479716
  404685:	inc    esi
  404686:	add    DWORD PTR [edx-0x20bac45],edx
  40468c:	stos   BYTE PTR es:[edi],al
  40468d:	and    esp,DWORD PTR [edx+0x6c]
  404690:	jl     0x404684
  404692:	xlat   BYTE PTR ds:[ebx]
  404693:	sbb    edi,DWORD PTR [ebx+0x2]
  404696:	dec    esi
  404697:	xchg   ebp,eax
  404698:	pushf  
  404699:	(bad)  
  40469a:	in     eax,dx
  40469b:	loop   0x404636
  40469d:	pop    edi
  40469e:	jnp    0x40470b
  4046a0:	test   eax,0xa7f4c1b4
  4046a5:	les    edx,FWORD PTR [edi+0x4c]
  4046a8:	adc    edx,ecx
  4046aa:	(bad)  
  4046ab:	sti    
  4046ac:	setp   BYTE PTR [eax+0x62]
  4046b0:	hlt    
  4046b1:	push   0xffffffea
  4046b3:	int    0xf1
  4046b5:	jp     0x404733
  4046b7:	dec    ebx
  4046b8:	fs push es
  4046ba:	(bad)  
  4046bc:	pusha  
  4046bd:	(bad)  
  4046be:	dec    eax
  4046bf:	gs push ebx
  4046c1:	daa    
  4046c2:	repz mov dl,0x52
  4046c5:	aaa    
  4046c6:	gs xor al,0xd3
  4046c9:	and    DWORD PTR [eax-0x1d],ebx
  4046cc:	int    0x51
  4046ce:	into   
  4046cf:	dec    edx
  4046d0:	ret    0x7402
  4046d3:	mov    ch,0xb3
  4046d5:	repnz loope 0x4046d8
  4046d8:	add    BYTE PTR [eax],al
  4046da:	outs   dx,BYTE PTR ds:[esi]
  4046db:	mov    ebx,0xbbf141a5
  4046e0:	xchg   ebp,eax
  4046e1:	xlat   BYTE PTR ds:[ebx]
  4046e2:	fmul   st,st(6)
  4046e4:	les    ebp,FWORD PTR [ebp+0x7]
  4046e7:	shl    ah,cl
  4046e9:	sti    
  4046ea:	inc    edi
  4046eb:	pop    es
  4046ec:	jmp    0xd94cef5b
  4046f1:	cld    
  4046f2:	and    ebp,esp
  4046f4:	xchg   DWORD PTR [esi-0x32],eax
  4046f7:	jecxz  0x4046b0
  4046f9:	ror    BYTE PTR [eax-0x58],1
  4046fc:	sub    al,0x73
  4046fe:	test   DWORD PTR [eax],0xa61ee51d
  404704:	dec    ebx
  404705:	pop    edi
  404706:	xchg   ecx,eax
  404707:	stos   BYTE PTR es:[edi],al
  404708:	jnp    0x4046d3
  40470a:	adc    al,0x3
  40470c:	jno    0x40474a
  40470e:	(bad)  
  404710:	inc    eax
  404711:	stos   BYTE PTR es:[edi],al
  404712:	jb     0x4046bc
  404714:	movups xmm7,XMMWORD PTR [ebp-0x51]
  404718:	pop    ds
  404719:	xchg   BYTE PTR [ebx],bl
  40471b:	or     al,0xb5
  40471d:	and    eax,0xb3850ce4
  404722:	ins    DWORD PTR es:[edi],dx
  404723:	loope  0x4046f8
  404725:	or     DWORD PTR [edx-0x1d601c22],eax
  40472b:	mov    esp,0xbbad0ef9
  404730:	leave  
  404731:	cwde   
  404732:	and    al,0xce
  404734:	cwde   
  404735:	and    bh,BYTE PTR [ebx]
  404737:	shr    DWORD PTR [eax+0x3d2dbdb4],1
  40473d:	pop    ss
  40473e:	add    BYTE PTR [eax],al
  404740:	mov    ds:0xeb810d32,al
  404745:	pop    ds
  404746:	pop    esp
  404747:	cmp    esi,DWORD PTR [eax+ebx*1]
  40474a:	ins    BYTE PTR es:[edi],dx
  40474b:	lods   eax,DWORD PTR ds:[esi]
  40474c:	xor    DWORD PTR [esi],edx
  40474e:	and    DWORD PTR [eax],0x1e
  404751:	sbb    DWORD PTR [ebx+0x719c9db6],esi
  404757:	loop   0x4046ea
  404759:	or     eax,0x9317d273
  40475e:	iret   
  40475f:	inc    edi
  404760:	je     0x4047a8
  404762:	(bad)  
  404763:	ja     0x40475f
  404765:	xchg   esp,eax
  404766:	int3   
  404767:	mov    BYTE PTR es:[edi+eax*8+0x253c1e16],ch
  40476f:	or     ebp,DWORD PTR [edi+0x213b202d]
  404775:	sahf   
  404776:	push   ss
  404777:	push   0xffffffc3
  404779:	rcr    DWORD PTR ds:0xfa35455a,cl
  40477f:	into   
  404780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404781:	dec    esp
  404782:	sti    
  404783:	dec    BYTE PTR [eax]
  404785:	mov    ds:0x56baae03,eax
  40478a:	add    BYTE PTR [esi-0x6d06f6f4],bl
  404790:	pop    ecx
  404791:	and    ah,bh
  404793:	mov    ds:0xf202aeef,al
  404798:	xor    eax,0xbbc20182
  40479d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40479e:	and    eax,0x1f195057
  4047a3:	add    BYTE PTR [bx+si],al
  4047a6:	(bad)  
  4047a7:	rcl    DWORD PTR [edi],1
  4047a9:	ss sub al,0x27
  4047ac:	sbb    al,0x6
  4047ae:	sbb    BYTE PTR [esi+0x330b1bcf],0xd4
  4047b5:	sub    edi,DWORD PTR [ebp-0x54]
  4047b8:	int    0x7a
  4047ba:	out    0x3c,eax
  4047bc:	(bad)  
  4047bd:	dec    edx
  4047be:	imul   eax,ebx,0x1602df6a
  4047c4:	imul   ebp,edi,0xbe70c564
  4047ca:	fidivr WORD PTR [ebx]
  4047cc:	je     0x40475c
  4047ce:	jo     0x4047d3
  4047d0:	mov    edi,0x489afed1
  4047d5:	shr    BYTE PTR [esi],cl
  4047d7:	and    eax,0xbf5fcbd1
  4047dc:	push   ds
  4047dd:	leave  
  4047de:	das    
  4047df:	push   ecx
  4047e0:	cwde   
  4047e1:	ins    BYTE PTR es:[edi],dx
  4047e2:	mov    edx,0xd26747b3
  4047e7:	sbb    eax,0xc79b6eb6
  4047ec:	and    DWORD PTR [esi-0x2d],esi
  4047ef:	cmp    DWORD PTR [ecx-0xa],eax
  4047f2:	(bad)  
  4047f3:	enter  0xfd8e,0xa7
  4047f7:	ss pop ds
  4047f9:	add    eax,0xffa8ac57
  4047fe:	je     0x404822
  404800:	and    eax,DWORD PTR es:[edx]
  404803:	ret    0x2091
  404806:	retf   0xf84f
  404809:	sbb    DWORD PTR [eax],eax
  40480b:	add    BYTE PTR [ebx],dl
  40480d:	xchg   esi,eax
  40480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40480f:	sbb    bl,BYTE PTR [ebx]
  404811:	sub    al,0x32
  404813:	and    cl,BYTE PTR [esi]
  404815:	ja     0x404874
  404817:	and    DWORD PTR [esi],ebx
  404819:	or     esp,ecx
  40481b:	sbb    bh,ch
  40481d:	bound  edi,QWORD PTR [ebx+0x34ecbf1b]
  404823:	imul   DWORD PTR [ebx]
  404825:	pop    DWORD PTR [edx-0x4]
  404828:	arpl   WORD PTR [ecx],ax
  40482a:	retf   
  40482b:	add    eax,0xfe946b8b
  404830:	rcl    ch,0xab
  404833:	push   0xffffffd6
  404835:	fs fwait
  404837:	imul   edx,DWORD PTR [esi-0x188ffe26],0x7732d90
  404841:	jmp    FWORD PTR [edx+0x745d72cf]
  404847:	aam    0x5a
  404849:	repz inc DWORD PTR [eax+edx*2]
  40484d:	test   BYTE PTR [ebx+0x1d546312],cl
  404853:	cmp    BYTE PTR [ebp-0x40],0xb0
  404857:	lea    edi,[esi-0x50]
  40485a:	es sbb al,0xa7
  40485d:	popa   
  40485e:	pushf  
  40485f:	jmp    0x4047f6
  404861:	xchg   ecx,eax
  404862:	or     ah,BYTE PTR [ebp+0x30]
  404865:	jmp    FWORD PTR [eax+0x3eef3392]
  40486b:	sti    
  40486c:	and    ebx,DWORD PTR [eax*4-0x61ffff1c]
  404873:	dec    ebp
  404874:	adc    edi,DWORD PTR [edx+edi*2+0x38]
  404878:	or     BYTE PTR [ebx+0x79],0x28
  40487c:	adc    al,0xd2
  40487e:	mov    ecx,ebx
  404880:	lods   eax,DWORD PTR ds:[esi]
  404881:	fisttp QWORD PTR [eax-0x30a4c7f7]
  404887:	jae    0x404824
  404889:	inc    esp
  40488a:	int3   
  40488b:	arpl   WORD PTR ds:0xb794dab5,cx
  404891:	loop   0x40487a
  404893:	les    esp,FWORD PTR [ecx]
  404895:	outs   dx,DWORD PTR ds:[esi]
  404896:	out    dx,al
  404897:	iret   
  404898:	aam    0x18
  40489a:	in     eax,dx
  40489b:	lahf   
  40489c:	inc    edx
  40489d:	adc    ebp,0xe4eef870
  4048a3:	sub    BYTE PTR [esi+0x68],0x3b
  4048a7:	or     al,0xcd
  4048a9:	idiv   DWORD PTR [ecx]
  4048ab:	fcomp  QWORD PTR [edx-0x7a]
  4048ae:	cs sub eax,0x3c0bd1e1
  4048b4:	ja     0x404927
  4048b6:	xchg   esi,eax
  4048b7:	dec    edx
  4048b8:	out    0xde,al
  4048ba:	xchg   ebx,eax
  4048bb:	sbb    dh,BYTE PTR [eax+0x4f]
  4048be:	sub    ecx,0xffffffc9
  4048c1:	clc    
  4048c2:	mov    eax,ds:0xeb005bf7
  4048c7:	loop   0x404866
  4048c9:	call   FWORD PTR [edx+eiz*8-0x53]
  4048cd:	imul   edx,ebp,0x72d3ff07
  4048d3:	or     al,0xcf
  4048d5:	inc    ebp
  4048d6:	add    BYTE PTR [eax],al
  4048d8:	in     al,0xa9
  4048da:	loope  0x404954
  4048dc:	adc    ebp,DWORD PTR [ebx+0x27aeed1]
  4048e2:	adc    DWORD PTR [ebp+ecx*2+0x1],0xffffffb3
  4048e7:	ret    0x4e3
  4048ea:	es popa 
  4048ec:	add    al,0xe0
  4048ee:	adc    eax,0x47057df7
  4048f3:	dec    ebp
  4048f4:	dec    edx
  4048f5:	push   cs
  4048f6:	ja     0x4048d3
  4048f8:	sub    cl,bh
  4048fa:	push   0x4a
  4048fc:	pop    ebp
  4048fd:	mov    ch,0x5a
  4048ff:	fdiv   QWORD PTR [edi*4-0x496c99f5]
  404906:	cmp    esi,eax
  404908:	or     eax,0x8a53ae1c
  40490d:	sbb    BYTE PTR [esi-0x30cdcc3b],bl
  404913:	jg     0x4048e9
  404915:	xor    bh,bh
  404917:	jmp    0x1d326355
  40491c:	mov    ds,WORD PTR [ecx]
  40491e:	ret    0x78a
  404921:	xor    DWORD PTR [ebx-0x5cec1fd0],edx
  404927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404928:	pop    esi
  404929:	iret   
  40492a:	ss add eax,0x9306b479
  404930:	add    BYTE PTR [esi-0x4998d6a9],bh
  404936:	addr16 mov edi,0x2e7a0437
  40493c:	add    BYTE PTR [eax],al
  40493e:	inc    eax
  40493f:	fisttp WORD PTR [ecx-0x48]
  404942:	popf   
  404943:	out    dx,al
  404944:	sbb    ebx,DWORD PTR [ebx]
  404946:	lahf   
  404947:	call   DWORD PTR [ebx+ebp*1]
  40494a:	or     DWORD PTR ds:0x58b2bdf9,esp
  404950:	clc    
  404951:	lea    edi,[edi+ecx*1]
  404954:	(bad)  
  404955:	fidiv  WORD PTR [esi+0x20ef01a6]
  40495b:	cdq    
  40495c:	add    eax,DWORD PTR [eax]
  40495e:	popf   
  40495f:	add    cl,BYTE PTR [ecx]
  404961:	xor    esp,ebx
  404963:	(bad)  
  404964:	in     eax,dx
  404965:	popa   
  404966:	pop    ds
  404967:	rcl    dh,0x52
  40496a:	pop    esi
  40496b:	cmc    
  40496c:	pop    ss
  40496d:	lds    esp,FWORD PTR [ecx-0x270bd35a]
  404973:	add    ecx,DWORD PTR [edx-0x59]
  404976:	and    eax,DWORD PTR [ebx+eax*2]
  404979:	xchg   esi,eax
  40497a:	(bad)  
  40497c:	retf   0x958a
  40497f:	jmp    0xe895:0x4f54bbc1
  404986:	daa    
  404987:	cmp    BYTE PTR [eax+0x6f8ce6d9],dh
  40498d:	dec    edi
  40498e:	cdq    
  40498f:	cs push esi
  404991:	jle    0x4049e3
  404993:	dec    ebx
  404994:	sub    DWORD PTR ds:0x1c8c1c2b,0x12c16ee2
  40499e:	ins    BYTE PTR es:[edi],dx
  40499f:	push   0x23ca
  4049a4:	lods   eax,DWORD PTR ds:[esi]
  4049a5:	xchg   ecx,eax
  4049a6:	scas   eax,DWORD PTR es:[edi]
  4049a7:	jo     0x404977
  4049a9:	jns    0x40493f
  4049ab:	inc    ecx
  4049ac:	bswap  ebx
  4049ae:	push   ebp
  4049af:	xlat   BYTE PTR ds:[ebx]
  4049b0:	push   eax
  4049b1:	ins    BYTE PTR es:[edi],dx
  4049b2:	outs   dx,BYTE PTR ds:[esi]
  4049b3:	out    0x89,al
  4049b5:	int    0x8b
  4049b7:	mov    ch,0x72
  4049b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ba:	add    BYTE PTR [ebx+ebp*1+0x25086b03],0x3c
  4049c2:	add    BYTE PTR [ebx],0x34
  4049c5:	sti    
  4049c6:	cwde   
  4049c7:	(bad)  
  4049c8:	je     0x404988
  4049ca:	sub    ch,0x67
  4049cd:	jge    0x40499e
  4049cf:	sub    al,0xc8
  4049d1:	aas    
  4049d2:	mov    esi,0x9cfef117
  4049d7:	inc    edx
  4049d8:	call   0x7c80:0xa3499cc1
  4049df:	jg     0x404962
  4049e1:	fs ins DWORD PTR es:[edi],dx
  4049e3:	test   BYTE PTR [eax-0x1c8eb15b],ch
  4049e9:	loop   0x404a39
  4049eb:	pop    edx
  4049ec:	stos   BYTE PTR es:[edi],al
  4049ed:	and    edi,DWORD PTR [eax-0x65]
  4049f0:	cmp    al,0x69
  4049f2:	xchg   ecx,eax
  4049f3:	mov    al,0x4d
  4049f5:	stos   BYTE PTR es:[edi],al
  4049f6:	stos   BYTE PTR es:[edi],al
  4049f7:	lds    ebx,FWORD PTR [esi]
  4049f9:	out    0x92,eax
  4049fb:	mov    esi,0x46c4284f
  404a00:	cmp    ebp,DWORD PTR [ebp-0x5b]
  404a03:	cmp    eax,0x18c6ae22
  404a08:	add    BYTE PTR [eax],al
  404a0a:	jmp    0xf07420f9
  404a0f:	sub    eax,DWORD PTR [eax]
  404a11:	repz ja 0x404a84
  404a14:	or     edx,ebx
  404a16:	inc    esp
  404a17:	mov    cl,0xe2
  404a19:	cld    
  404a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1b:	out    dx,al
  404a1c:	fiadd  DWORD PTR [edi]
  404a1e:	xchg   ebp,eax
  404a1f:	das    
  404a20:	inc    esi
  404a21:	cmp    eax,0x46279593
  404a26:	call   0x1513:0x51330454
  404a2d:	sbb    BYTE PTR [eax],bh
  404a2f:	rol    BYTE PTR [ecx-0x27],cl
  404a32:	scas   eax,DWORD PTR es:[edi]
  404a33:	cdq    
  404a34:	dec    ebx
  404a35:	repnz fcomp QWORD PTR [eax+0x0]
  404a39:	pusha  
  404a3a:	mov    ds:0x91597573,al
  404a3f:	xor    DWORD PTR [esi+edi*8],0xeffb5e1f
  404a46:	sbb    cl,BYTE PTR [edi-0x3ef7f346]
  404a4c:	jns    0x404a5b
  404a4e:	retf   
  404a4f:	mov    cl,0x38
  404a51:	cmp    dl,BYTE PTR [edx]
  404a53:	sbb    edi,edi
  404a55:	push   ebx
  404a56:	xor    DWORD PTR [edx-0x42],ecx
  404a59:	sub    BYTE PTR [ebp+edi*8+0x7c],ah
  404a5d:	adc    DWORD PTR [edi-0x14],ebx
  404a60:	cmp    ebx,DWORD PTR [ecx-0x6ffaae58]
  404a66:	jnp    0x404a88
  404a68:	inc    esp
  404a69:	stos   DWORD PTR es:[edi],eax
  404a6a:	into   
  404a6b:	out    dx,eax
  404a6c:	xchg   BYTE PTR [edx-0x18b0000],dh
  404a72:	lds    ebx,FWORD PTR [ebp+0x24]
  404a75:	mov    eax,DWORD PTR [ecx]
  404a77:	ins    BYTE PTR es:[edi],dx
  404a78:	(bad)  
  404a79:	pop    ebp
  404a7a:	inc    eax
  404a7b:	dec    edi
  404a7c:	add    ch,BYTE PTR [ecx-0x460ed17d]
  404a82:	ret    0x8121
  404a85:	(bad)  
  404a86:	or     eax,0x4c966208
  404a8b:	jecxz  0x404b01
  404a8d:	imul   ecx,DWORD PTR [edi-0x3187f206],0x901daa5
  404a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a98:	daa    
  404a99:	rol    DWORD PTR [edi-0x39],cl
  404a9c:	cmp    BYTE PTR [ebx+ecx*4],ah
  404a9f:	mov    dh,0xf9
  404aa1:	xor    al,0xca
  404aa3:	arpl   WORD PTR [edx+0x3f],bp
  404aa6:	push   esp
  404aa7:	dec    edx
  404aa8:	cmp    DWORD PTR [esi],ebp
  404aaa:	adc    eax,0xd5e10c61
  404aaf:	js     0x404ae8
  404ab1:	adc    BYTE PTR [edi-0x67a27e00],dl
  404ab7:	push   eax
  404ab8:	jnp    0x404a6c
  404aba:	test   eax,0xfa65a011
  404abf:	ror    BYTE PTR [ecx-0x196c3482],cl
  404ac5:	call   0xfe2fa7a0
  404aca:	in     eax,0x1d
  404acc:	(bad)  
  404acd:	fidiv  DWORD PTR [esi+ebx*8-0x607bcc53]
  404ad4:	add    BYTE PTR [eax],al
  404ad6:	dec    edx
  404ad7:	repnz adc DWORD PTR [eax+0x73],ebx
  404adb:	fwait
  404adc:	and    bl,BYTE PTR [ecx]
  404ade:	test   al,0xbe
  404ae0:	outs   dx,DWORD PTR ds:[esi]
  404ae1:	fiadd  DWORD PTR [ecx-0x57]
  404ae4:	inc    eax
  404ae5:	fwait
  404ae6:	cdq    
  404ae7:	popa   
  404ae8:	imul   esp,DWORD PTR [edi-0x19a59360],0x7b
  404aef:	iret   
  404af0:	or     DWORD PTR ds:0x64385692,esp
  404af6:	xor    eax,0x3ca3ae17
  404afb:	mov    ds,WORD PTR [edi-0x33d2a81e]
  404b01:	and    esi,ebx
  404b03:	aas    
  404b04:	std    
  404b05:	pusha  
  404b06:	xor    DWORD PTR [eax-0x5ad75020],ebp
  404b0c:	iret   
  404b0d:	out    dx,al
  404b0e:	jae    0x404aa5
  404b10:	sub    BYTE PTR ds:0x6cb20e7a,0xad
  404b17:	dec    ebx
  404b18:	and    al,0xab
  404b1a:	test   al,bl
  404b1c:	adc    al,0xea
  404b1e:	(bad)  
  404b1f:	loope  0x404b66
  404b21:	sub    DWORD PTR [esi-0x16],esp
  404b24:	jbe    0x404b8e
  404b26:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b28:	js     0x404b20
  404b2a:	jmp    0xc96:0x9db747a7
  404b31:	sbb    ebp,DWORD PTR [ecx]
  404b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b34:	cmc    
  404b35:	sub    DWORD PTR [eax+0x54],esi
  404b38:	ss mov esp,0x7baf0000
  404b3e:	dec    ebx
  404b3f:	lea    ecx,[esi+0x12]
  404b42:	sub    dh,bl
  404b44:	or     eax,0xccef218a
  404b49:	shr    BYTE PTR [edx-0x60407c0d],1
  404b4f:	ret    0x5e3a
  404b52:	mov    ah,0x91
  404b54:	icebp  
  404b55:	jge    0x404b24
  404b57:	mov    al,ds:0x368e2ca8
  404b5c:	and    esi,DWORD PTR [bp+di+0x7]
  404b60:	push   ss
  404b61:	sbb    ah,BYTE PTR [eax+0x54]
  404b64:	aad    0x81
  404b66:	imul   esp,DWORD PTR [ebp-0x7c],0xd69884a4
  404b6d:	retf   
  404b6e:	jnp    0x404b19
  404b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b71:	mov    ds:0x9964fa56,al
  404b76:	jno    0x404b43
  404b78:	adc    eax,0xd25db0e8
  404b7d:	out    0x97,eax
  404b7f:	ins    BYTE PTR es:[edi],dx
  404b80:	stos   DWORD PTR es:[edi],eax
  404b81:	push   es
  404b82:	mov    ebx,0xc594e03f
  404b87:	push   cs
  404b88:	sbb    DWORD PTR [esi+edi*1],edi
  404b8b:	adc    bl,BYTE PTR [esi+0x33]
  404b8e:	inc    ebx
  404b8f:	and    ebx,DWORD PTR [edi-0x238fd016]
  404b95:	rcr    BYTE PTR [eax],1
  404b97:	inc    ecx
  404b98:	sbb    eax,0x5ad6da40
  404b9d:	das    
  404b9e:	out    dx,eax
  404b9f:	in     eax,0x0
  404ba1:	add    BYTE PTR [ebx-0x274afb72],ah
  404ba7:	sub    al,0xfd
  404ba9:	and    DWORD PTR [ecx],0x2
  404bac:	cwde   
  404bad:	inc    edx
  404bae:	pop    ss
  404baf:	cld    
  404bb0:	nop
  404bb1:	cmp    eax,0x18aa3af6
  404bb6:	lds    edi,FWORD PTR [ecx-0x4d]
  404bb9:	das    
  404bba:	les    edi,FWORD PTR [eax+0x53eedc]
  404bc0:	in     eax,dx
  404bc1:	fstp   DWORD PTR [eax]
  404bc3:	ds into 
  404bc5:	cld    
  404bc6:	sar    DWORD PTR [esi-0x51],0x3
  404bca:	test   eax,0x9d7ba0bf
  404bcf:	lock mov BYTE PTR [esp+ebp*4-0x8e9dcf],al
  404bd7:	jb     0x404c54
  404bd9:	push   esi
  404bda:	into   
  404bdb:	mov    bl,0xa4
  404bdd:	xchg   edi,eax
  404bde:	pop    eax
  404bdf:	cmc    
  404be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404be1:	mov    al,0x51
  404be3:	ss mov ch,0xfa
  404be7:	jbe    0x404ba0
  404be9:	mov    edx,0x857b833
  404bee:	add    DWORD PTR [esi+edx*2+0x756b29ff],ebp
  404bf5:	rcl    BYTE PTR [eax+0x2a],cl
  404bf8:	fs in  eax,dx
  404bfa:	cmp    ebp,ecx
  404bfc:	mov    dl,0x2c
  404bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bff:	scas   eax,DWORD PTR es:[edi]
  404c00:	call   0x3e:0x716e6513
  404c07:	add    BYTE PTR [esi-0x48b677d3],dh
  404c0d:	in     al,dx
  404c0e:	into   
  404c0f:	ror    ebx,0xa3
  404c12:	faddp  st(6),st
  404c14:	mov    ds:0x49abbd62,al
  404c19:	and    DWORD PTR [esp+edx*4+0x55eae080],ebx
  404c20:	out    dx,al
  404c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c22:	loop   0x404c8e
  404c24:	fbld   TBYTE PTR [esi+0x0]
  404c27:	stc    
  404c28:	sbb    dh,BYTE PTR [edi+eiz*2+0x0]
  404c2c:	sbb    al,0x63
  404c2e:	es or  eax,0x1cb86cdb
  404c34:	fdivr  QWORD PTR [ebp-0x7]
  404c37:	aas    
  404c38:	or     edi,ecx
  404c3a:	cmp    bl,BYTE PTR [esi]
  404c3c:	neg    BYTE PTR [edi+0x2937697b]
  404c42:	mov    esp,0xfd38f060
  404c47:	cmp    ebx,DWORD PTR ds:0x22423e0b
  404c4d:	fidivr DWORD PTR [esi+0x15]
  404c50:	popf   
  404c51:	out    0xaf,al
  404c53:	adc    al,0xa2
  404c55:	div    eax
  404c57:	test   DWORD PTR [edi+eax*2+0x1451e632],0xa3893173
  404c62:	mov    ah,0x18
  404c64:	xchg   BYTE PTR [edx-0x7e24cc0b],dh
  404c6a:	ss dec edx
  404c6c:	add    BYTE PTR [eax],al
  404c6e:	fcom   QWORD PTR [eax+0x77]
  404c71:	mov    dl,0x27
  404c73:	mov    ch,0x4e
  404c75:	mov    ebx,0x900fa400
  404c7a:	dec    ebp
  404c7b:	push   edi
  404c7c:	int3   
  404c7d:	mov    edx,esi
  404c7f:	test   DWORD PTR [ebp+0x49f0ab56],ecx
  404c85:	aaa    
  404c86:	sub    al,0xe1
  404c88:	or     dl,BYTE PTR [ecx+edi*2+0x12]
  404c8c:	enter  0x6665,0x43
  404c90:	mov    edx,ebp
  404c92:	(bad)  
  404c93:	cmp    eax,0x28d90346
  404c98:	pop    es
  404c99:	sbb    ah,dh
  404c9b:	fcmovnb st,st(3)
  404c9d:	add    DWORD PTR [ebx-0x2cff7af4],ebx
  404ca3:	dec    ebx
  404ca4:	cwde   
  404ca5:	inc    edx
  404ca6:	sbb    dl,ch
  404ca8:	test   al,0x3
  404caa:	xor    esi,edi
  404cac:	stc    
  404cad:	shr    BYTE PTR [eax],0xe3
  404cb0:	retf   0x3581
  404cb3:	mov    esi,0xa11c1fc4
  404cb8:	repz pop esi
  404cba:	push   edi
  404cbb:	or     al,0xa7
  404cbd:	popf   
  404cbe:	pop    esi
  404cbf:	fwait
  404cc0:	xchg   ebp,eax
  404cc1:	fcom   QWORD PTR [ecx-0x67e50026]
  404cc7:	dec    ebp
  404cc8:	xor    DWORD PTR [edx-0x4d],ebx
  404ccb:	loopne 0x404d2e
  404ccd:	cdq    
  404cce:	stos   BYTE PTR es:[edi],al
  404ccf:	std    
  404cd0:	push   edx
  404cd1:	fadd   DWORD PTR [eax]
  404cd3:	add    ch,cl
  404cd5:	gs dec edi
  404cd7:	pop    ss
  404cd8:	mov    ah,0x78
  404cda:	jle    0x404d32
  404cdc:	iret   
  404cdd:	push   ebx
  404cde:	sub    eax,0x1cb2d695
  404ce3:	aam    0x89
  404ce5:	jno    0x404c71
  404ce7:	adc    edx,DWORD PTR [eax+0x16]
  404cea:	mov    ebx,0xe8396b52
  404cef:	xchg   ecx,eax
  404cf0:	inc    edx
  404cf1:	and    cl,bl
  404cf3:	rcr    dl,1
  404cf5:	cld    
  404cf6:	repnz in al,dx
  404cf8:	sub    ecx,0xffffffc1
  404cfb:	lods   eax,DWORD PTR ds:[esi]
  404cfc:	cwde   
  404cfd:	dec    esi
  404cfe:	xchg   ecx,eax
  404cff:	outs   dx,BYTE PTR ds:[esi]
  404d00:	xchg   ecx,eax
  404d01:	iret   
  404d02:	lahf   
  404d03:	das    
  404d04:	pop    esi
  404d05:	xchg   edx,eax
  404d06:	xor    eax,0x70ee7e8
  404d0b:	test   eax,0x6a53a3fc
  404d10:	in     eax,0xbc
  404d12:	sub    eax,DWORD PTR fs:[edx-0x741b86dc]
  404d19:	cmp    ecx,DWORD PTR [eax-0x5b]
  404d1c:	popf   
  404d1d:	lea    esi,[ebx+ebx*1-0x7d]
  404d21:	mov    cs,WORD PTR [ecx-0x362845d6]
  404d27:	mov    esp,0x8db330bd
  404d2c:	cld    
  404d2d:	jmp    0xf2802bd1
  404d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d33:	out    dx,eax
  404d34:	jle    0x404cd3
  404d36:	pop    edi
  404d37:	loope  0x404d39
  404d39:	add    al,bh
  404d3b:	scas   al,BYTE PTR es:[edi]
  404d3c:	data16 shl BYTE PTR [ecx+0x6a8389cb],1
  404d43:	int3   
  404d44:	je     0x404cf8
  404d46:	and    ebx,DWORD PTR [ecx]
  404d48:	mov    bl,0x24
  404d4a:	push   esp
  404d4b:	jb     0x404d17
  404d4d:	adc    eax,0x46a56795
  404d52:	(bad)  
  404d53:	jo     0x404cf5
  404d55:	ja     0x404d5e
  404d57:	(bad)  
  404d58:	daa    
  404d59:	imul   esi,DWORD PTR [eax],0x66
  404d5c:	push   ds
  404d5d:	pop    edx
  404d5e:	imul   eax,ebx,0xb4b20931
  404d64:	dec    esp
  404d65:	cmp    bl,ch
  404d67:	or     DWORD PTR [ebx],0xf28a0cae
  404d6d:	sahf   
  404d6e:	dec    ebp
  404d6f:	pop    ds
  404d70:	(bad)  
  404d72:	mov    ?,WORD PTR [eax]
  404d74:	call   0x3ea1d75
  404d79:	add    BYTE PTR [ebp+0x6a6ac1aa],bl
  404d7f:	test   al,0x87
  404d81:	aam    0xbb
  404d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d84:	inc    ebp
  404d85:	mov    esi,0xa80aacc4
  404d8a:	stc    
  404d8b:	mov    ds:0xad06c2c8,al
  404d90:	mov    ?,WORD PTR [edi+ecx*2-0x5a]
  404d94:	dec    esp
  404d95:	push   ss
  404d96:	sbb    BYTE PTR [edx],al
  404d98:	div    eax
  404d9a:	dec    ebp
  404d9b:	pop    edx
  404d9c:	out    dx,al
  404d9d:	mov    dl,0x0
  404d9f:	add    BYTE PTR [esi+0x2074e48b],dh
  404da5:	mov    ah,0xdd
  404da7:	repnz mov al,ss:0x25d5f9f0
  404dae:	icebp  
  404daf:	mov    ebx,0x7de32f2e
  404db4:	js     0x404dbe
  404db6:	loop   0x404df7
  404db8:	pop    edx
  404db9:	fld    QWORD PTR [esi+eiz*8]
  404dbc:	call   DWORD PTR [ecx]
  404dbe:	cld    
  404dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc0:	in     al,0x42
  404dc2:	mul    BYTE PTR [ecx+0x32]
  404dc5:	cld    
  404dc6:	out    dx,al
  404dc7:	and    eax,DWORD PTR [eax-0x58131e17]
  404dcd:	data16 jecxz 0x404d7e
  404dd0:	cld    
  404dd1:	jge    0x404da4
  404dd3:	push   0x2ad0c56a
  404dd8:	dec    eax
  404dd9:	nop
  404dda:	sti    
  404ddb:	(bad)  
  404ddc:	ins    BYTE PTR es:[edi],dx
  404ddd:	retf   
  404dde:	cli    
  404ddf:	xchg   esp,eax
  404de0:	adc    eax,0xc352f89a
  404de5:	pusha  
  404de6:	stc    
  404de7:	adc    cl,dl
  404de9:	jae    0x404dc7
  404deb:	fcomip st,st(4)
  404ded:	out    dx,al
  404dee:	aam    0x9d
  404df0:	(bad)  
  404df1:	in     eax,0xde
  404df3:	pop    ebx
  404df4:	sbb    ebx,DWORD PTR ds:0x483919d6
  404dfa:	loope  0x404e4a
  404dfc:	jecxz  0x404da0
  404dfe:	loopne 0x404d8c
  404e00:	xor    DWORD PTR [ecx+0xcad2],0x8d3890f
  404e0a:	and    eax,0xb47c65c
  404e0f:	xlat   BYTE PTR ds:[ebx]
  404e10:	mov    esi,0xe1985
  404e15:	mov    ch,0xde
  404e17:	fcom   QWORD PTR [ecx-0x54]
  404e1a:	pushf  
  404e1b:	xor    ah,BYTE PTR [ebp+0x1f]
  404e1e:	mov    ebx,0x1d1657f1
  404e23:	sbb    BYTE PTR [edi+0x1c],ch
  404e26:	daa    
  404e27:	(bad)  
  404e28:	ss adc eax,0xf8016ae1
  404e2e:	xchg   ecx,eax
  404e2f:	pop    ecx
  404e30:	test   cl,bh
  404e32:	dec    ebx
  404e33:	scas   eax,DWORD PTR es:[edi]
  404e34:	mov    bl,0xfb
  404e36:	or     eax,0xcffaea2e
  404e3b:	add    bl,ch
  404e3d:	int    0x85
  404e3f:	lahf   
  404e40:	nop
  404e41:	les    eax,FWORD PTR [edi-0x77]
  404e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e45:	into   
  404e46:	stc    
  404e47:	sar    ebp,cl
  404e49:	(bad)  
  404e4a:	mov    bl,0x3c
  404e4c:	leave  
  404e4d:	retf   0x47bc
  404e50:	dec    esp
  404e51:	retf   
  404e52:	(bad)  
  404e53:	loope  0x404ecf
  404e55:	leave  
  404e56:	inc    eax
  404e57:	jnp    0x404e7b
  404e59:	enter  0x947a,0x15
  404e5d:	adc    ebx,DWORD PTR [ecx-0x2cedd7b2]
  404e63:	mov    eax,0x2205001f
  404e68:	inc    esi
  404e69:	add    DWORD PTR [eax],eax
  404e6b:	add    BYTE PTR [edi+0xb],al
  404e6e:	jno    0x404e84
  404e70:	mov    al,0xf6
  404e72:	repz or eax,0x7c310ea
  404e78:	sub    al,0xca
  404e7a:	call   0xbb19:0xad636ffe
  404e81:	xchg   eax,eax
  404e83:	sbb    BYTE PTR [ecx-0x5f],dh
  404e86:	neg    DWORD PTR [edx]
  404e88:	daa    
  404e89:	cmp    ch,BYTE PTR [esi-0x672b1ae5]
  404e8f:	add    BYTE PTR [ebx],bl
  404e91:	adc    BYTE PTR ds:0x4ece0a1c,ah
  404e97:	sub    ecx,DWORD PTR [eax]
  404e99:	xchg   esp,eax
  404e9a:	lock jb 0x404ea6
  404e9d:	push   edx
  404e9e:	fwait
  404e9f:	inc    ebp
  404ea0:	add    al,BYTE PTR [esi+0x47d378dc]
  404ea6:	mov    dh,0x4f
  404ea8:	ror    DWORD PTR [ecx],1
  404eaa:	or     BYTE PTR [esi],dl
  404eac:	ror    bl,1
  404eae:	bound  esp,QWORD PTR [ecx]
  404eb0:	fld    QWORD PTR [esp+esi*2+0x1e3edca4]
  404eb7:	xchg   ebx,eax
  404eb8:	push   cs
  404eb9:	cdq    
  404eba:	lahf   
  404ebb:	retf   0xc30f
  404ebe:	retf   0x10fd
  404ec1:	xor    DWORD PTR [esi],ebp
  404ec3:	mov    al,0x21
  404ec5:	sti    
  404ec6:	inc    ebx
  404ec7:	xchg   DWORD PTR [ebx],esp
  404ec9:	mov    ebp,0x7722def9
  404ece:	nop
  404ecf:	jmp    0x336f4ed4
  404ed4:	xchg   BYTE PTR [esi+ebp*1-0xb],ch
  404ed8:	jmp    0x404f35
  404eda:	sbb    al,0xaf
  404edc:	push   ecx
  404edd:	add    bl,BYTE PTR ds:0xe6353871
  404ee3:	sub    edi,DWORD PTR [edi+0x8]
  404ee6:	out    0xe9,eax
  404ee8:	adc    al,0x3f
  404eea:	aad    0xa7
  404eec:	stos   BYTE PTR es:[edi],al
  404eed:	data16 aam 0x65
  404ef0:	rcl    DWORD PTR [ecx-0x17],0x24
  404ef4:	xlat   BYTE PTR ds:[ebx]
  404ef5:	aam    0xd8
  404ef7:	loop   0x404eb5
  404ef9:	jecxz  0x404ed5
  404efb:	mov    al,ds:0x5edbba02
  404f00:	imul   ecx,DWORD PTR [ebp+0x20cb536c],0x17a0916d
  404f0a:	popf   
  404f0b:	in     al,0x36
  404f0d:	pop    ds
  404f0e:	shl    ebx,cl
  404f10:	je     0x404f87
  404f12:	xchg   esp,eax
  404f13:	sar    BYTE PTR [ecx-0x817ee9d],1
  404f19:	or     dh,dl
  404f1b:	fnstsw WORD PTR ds:0x7bf72fb7
  404f21:	fld    QWORD PTR [eax+0x68]
  404f24:	mov    edi,0x161159a
  404f29:	lock cmp ah,BYTE PTR [edi+0x43]
  404f2d:	dec    esi
  404f2e:	jmp    0x404f8d
  404f30:	test   DWORD PTR [esp+ebx*8],esp
  404f33:	push   0xffffffc8
  404f35:	xor    al,BYTE PTR [eax]
  404f37:	add    BYTE PTR [ecx+0x69],bl
  404f3a:	or     bl,BYTE PTR [eax+0x4e]
  404f3d:	imul   ecx,DWORD PTR [esi+eiz*8+0x77],0x6c
  404f42:	mov    cs,WORD PTR [eax+ebx*4+0x4d689455]
  404f49:	dec    esi
  404f4a:	(bad)  
  404f4b:	add    DWORD PTR [edx+0x58],eax
  404f4e:	adc    BYTE PTR [ebx+eiz*2-0x5b29adb1],bh
  404f55:	jl     0x404ef2
  404f57:	shl    BYTE PTR [ecx],0x7b
  404f5a:	(bad)  [ecx+0x14177946]
  404f60:	jg     0x404fdc
  404f62:	pop    ecx
  404f63:	jle    0x404fb5
  404f65:	inc    ebx
  404f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f67:	cmp    DWORD PTR [ebp+0x4a52e444],eax
  404f6d:	shl    BYTE PTR [ecx],cl
  404f6f:	in     eax,dx
  404f70:	sbb    edx,ecx
  404f72:	pop    edi
  404f73:	xchg   DWORD PTR [esi+ebx*8],ecx
  404f76:	lods   al,BYTE PTR ds:[esi]
  404f77:	xchg   ecx,eax
  404f78:	mov    ebp,esi
  404f7a:	jmp    0xe745:0x28ef9efa
  404f81:	or     BYTE PTR [edi+0x2f],ah
  404f84:	enter  0x8802,0xcf
  404f88:	xchg   edi,eax
  404f89:	or     BYTE PTR [ecx-0x74b0536f],0x53
  404f90:	push   edx
  404f91:	test   al,0x8a
  404f93:	adc    eax,0xd88fb940
  404f98:	dec    edi
  404f99:	xchg   BYTE PTR ss:[edx+0x2ae40000],bl
  404fa0:	mov    WORD PTR [edx+edi*2-0x2c],ds
  404fa4:	test   BYTE PTR [esi],bl
  404fa6:	test   al,0xfd
  404fa8:	push   ebp
  404fa9:	loop   0x40500f
  404fab:	fimul  DWORD PTR [esi-0x60]
  404fae:	mov    ebp,0x3664507
  404fb3:	xor    BYTE PTR [esp],bh
  404fb6:	shl    DWORD PTR [eax],1
  404fb8:	push   ecx
  404fb9:	jmp    0xa790ed7a
  404fbe:	adc    eax,0x8b6d42b3
  404fc3:	mov    WORD PTR [ebx+0x2b],es
  404fc6:	pop    ecx
  404fc7:	push   ebp
  404fc8:	and    al,0xf5
  404fca:	jmp    0x17be:0xcfb31d91
  404fd1:	jno    0x405004
  404fd3:	js     0x404fe3
  404fd5:	das    
  404fd6:	mov    ds:0xa2fe036b,eax
  404fdb:	out    0x1,al
  404fdd:	mov    esp,0x79effa07
  404fe2:	pop    ecx
  404fe3:	inc    ecx
  404fe4:	icebp  
  404fe5:	aaa    
  404fe6:	dec    ebx
  404fe7:	adc    dl,bl
  404fe9:	add    eax,DWORD PTR [ebx+ecx*2+0x161ec5db]
  404ff0:	fnstcw WORD PTR [edi-0x60]
  404ff3:	(bad)  
  404ff5:	inc    ecx
  404ff6:	repnz repz mov esp,0xb46edc0a
  404ffd:	int3   
  404ffe:	jbe    0x405061
  405000:	add    BYTE PTR [esi+0x701b0000],bh
  405006:	cli    
  405007:	mov    bh,0xe5
  405009:	xchg   ebp,eax
  40500a:	int    0xc0
  40500c:	xchg   esi,eax
  40500d:	aaa    
  40500e:	pusha  
  40500f:	ror    eax,0xcd
  405012:	push   esi
  405013:	mov    bl,0xa
  405015:	mov    WORD PTR [esi],cs
  405017:	mov    dl,0xf4
  405019:	mov    al,ds:0x8fafa739
  40501e:	mov    esp,0x8b75719e
  405023:	xchg   esp,eax
  405024:	adc    esp,esp
  405026:	ror    DWORD PTR [ebp+0x3ee548cd],1
  40502c:	rol    DWORD PTR [esi],0xd8
  40502f:	aaa    
  405030:	ja     0x40504e
  405032:	out    dx,eax
  405033:	cmp    eax,0x34b6bb35
  405038:	ret    
  405039:	push   ebx
  40503a:	sbb    DWORD PTR [ecx],0x18045e78
  405040:	les    esi,FWORD PTR ds:[ebx]
  405043:	sbb    bh,ah
  405045:	adc    ch,BYTE PTR [edx+0x1b]
  405048:	(bad)  
  40504a:	pop    esp
  40504b:	sub    al,0x74
  40504d:	xchg   esp,eax
  40504e:	adc    BYTE PTR ds:0x2f276e32,ah
  405054:	loopne 0x40503e
  405056:	jge    0x40507e
  405058:	xchg   esi,eax
  405059:	aad    0x48
  40505b:	sub    ecx,ebp
  40505d:	sub    al,0xcc
  40505f:	sub    bh,bl
  405061:	(bad)  
  405062:	cli    
  405063:	sub    BYTE PTR [ecx-0x80],cl
  405066:	mov    ds:0x6f000029,al
  40506b:	popf   
  40506c:	xchg   ebp,eax
  40506d:	mov    dl,0xe4
  40506f:	gs test al,0xb3
  405072:	and    bh,BYTE PTR [edi+0x1950a19f]
  405078:	(bad)  
  405079:	mov    al,ds:0xf0f3a6
  40507e:	or     BYTE PTR [edx+0x7],al
  405081:	je     0x40507c
  405083:	adc    ebp,DWORD PTR [ebp+0x43]
  405086:	sti    
  405087:	mov    ebp,0x1a1ad3
  40508c:	mov    ecx,0x961db52d
  405091:	inc    eax
  405092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405093:	jmp    0x405090
  405095:	ja     0x40503d
  405097:	test   eax,0x67972e41
  40509c:	sub    BYTE PTR [ecx],bl
  40509e:	jb     0x4050d4
  4050a0:	ds pushf 
  4050a2:	jae    0x405086
  4050a4:	push   ebx
  4050a5:	stos   DWORD PTR es:[edi],eax
  4050a6:	popa   
  4050a7:	mov    al,ds:0x5e50f2e9
  4050ac:	add    ch,0x1b
  4050af:	cmp    al,bh
  4050b1:	clc    
  4050b2:	push   0xffffffec
  4050b4:	lods   al,BYTE PTR ds:[esi]
  4050b5:	iret   
  4050b6:	push   0x499612b6
  4050bb:	js     0x405136
  4050bd:	mov    eax,ds:0x246f333c
  4050c2:	cmp    eax,0x6f130505
  4050c7:	scas   eax,DWORD PTR es:[edi]
  4050c8:	mov    edx,0xd1714e4a
  4050cd:	jge    0x4050cf
  4050cf:	add    BYTE PTR [ecx],ch
  4050d1:	xchg   DWORD PTR ds:0x5f493830,esi
  4050d7:	pop    es
  4050d8:	cmp    cl,BYTE PTR [ebx]
  4050da:	loope  0x40513a
  4050dc:	sti    
  4050dd:	mov    ebx,0x7f0e698b
  4050e2:	popf   
  4050e3:	in     al,dx
  4050e4:	cmovno esi,edi
  4050e7:	(bad)  
  4050e9:	add    cl,BYTE PTR [ecx-0x7e]
  4050ec:	cld    
  4050ed:	push   esp
  4050ee:	and    esi,DWORD PTR [ebp-0x779be5f9]
  4050f4:	not    bh
  4050f6:	or     eax,0xf5299dbf
  4050fb:	scas   eax,DWORD PTR es:[edi]
  4050fc:	inc    ebx
  4050fd:	sub    esi,DWORD PTR [edi+0x72266cda]
  405103:	int3   
  405104:	icebp  
  405105:	push   ds
  405106:	xor    al,0xa6
  405108:	mov    esi,0x7717ee24
  40510d:	sbb    esi,DWORD PTR [eax-0x5ecd5f8e]
  405113:	sar    ch,1
  405115:	xor    ebx,esp
  405117:	mov    ecx,0x41d400a
  40511c:	jmp    0x40515e
  40511e:	pop    edi
  40511f:	outs   dx,BYTE PTR ds:[esi]
  405120:	adc    al,0x2c
  405122:	stos   BYTE PTR es:[edi],al
  405123:	js     0x4050ae
  405125:	inc    esp
  405126:	in     al,dx
  405127:	adc    DWORD PTR [esi+0x3e],edx
  40512a:	lods   al,BYTE PTR es:[esi]
  40512c:	(bad)  
  40512d:	aad    0x67
  40512f:	(bad)  
  405130:	mov    eax,0x819484
  405135:	add    BYTE PTR [ebp-0x4d152d85],al
  40513b:	test   DWORD PTR [eax],edx
  40513d:	push   ebp
  40513e:	push   ebx
  40513f:	jle    0x40518f
  405141:	aas    
  405142:	pop    esp
  405143:	mov    DWORD PTR [ebx-0x26751ed7],ebx
  405149:	inc    edx
  40514a:	into   
  40514b:	mov    BYTE PTR [edi],dl
  40514d:	std    
  40514e:	pop    es
  40514f:	mov    BYTE PTR [ebp-0x69],dl
  405152:	adc    BYTE PTR [edi],dh
  405154:	mov    edi,0xfd2dcd73
  405159:	sbb    BYTE PTR [edx+0x5ba74333],bh
  40515f:	sub    al,0x81
  405161:	int    0x24
  405163:	xlat   BYTE PTR ds:[ebx]
  405164:	(bad)  
  405165:	fistp  DWORD PTR [ecx-0x394efa28]
  40516b:	fimul  DWORD PTR [ebx+0xf]
  40516e:	(bad)  
  40516f:	(bad)  [ecx-0x5dfd379b]
  405175:	lods   eax,DWORD PTR ds:[esi]
  405176:	mov    edi,0xdaefa32a
  40517b:	xor    edx,DWORD PTR [ecx-0x7003accf]
  405181:	jae    0x4051b4
  405183:	rol    DWORD PTR [esi+esi*4-0x783b1e9],1
  40518a:	bound  edi,QWORD PTR [edi+0x76]
  40518d:	cmp    bl,bl
  40518f:	mov    eax,0xa5697c6f
  405194:	jmp    0x6142ee9c
  405199:	pop    eax
  40519a:	add    BYTE PTR [eax],al
  40519c:	mov    edx,0xe50b431d
  4051a1:	xchg   bl,bh
  4051a3:	dec    esi
  4051a4:	inc    edx
  4051a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a6:	jbe    0x4051ca
  4051a8:	xor    ch,BYTE PTR [ebx]
  4051aa:	mov    dh,0xb5
  4051ac:	or     eax,0x5a28cbd0
  4051b1:	mov    dh,0x4c
  4051b3:	lods   eax,DWORD PTR ds:[esi]
  4051b4:	mov    ch,0x59
  4051b6:	sub    al,0x50
  4051b8:	mov    ch,0xa3
  4051ba:	fmul   QWORD PTR [ebx]
  4051bc:	push   edx
  4051bd:	mov    dh,al
  4051bf:	push   esi
  4051c0:	mov    ebp,0x1a03361d
  4051c5:	add    DWORD PTR [ebx+0x3b5a0aad],esi
  4051cb:	sub    ah,ch
  4051cd:	mov    ah,0x49
  4051cf:	mov    ch,0x32
  4051d1:	iret   
  4051d2:	nop
  4051d3:	and    BYTE PTR [ebp+0x53fab92c],cl
  4051d9:	jae    0x4051ec
  4051db:	pop    edi
  4051dc:	ins    DWORD PTR es:[edi],dx
  4051dd:	cwde   
  4051de:	adc    esi,esp
  4051e0:	cmp    esi,edi
  4051e2:	stos   BYTE PTR es:[edi],al
  4051e3:	addr16 xchg ebp,eax
  4051e5:	adc    al,0x26
  4051e7:	sbb    DWORD PTR [ebp-0x45],ebx
  4051ea:	xchg   BYTE PTR [edx+edi*1-0x7383ffa0],bh
  4051f1:	cli    
  4051f2:	inc    edx
  4051f3:	sbb    al,0x5b
  4051f5:	and    ah,BYTE PTR [esi]
  4051f7:	jl     0x4051fc
  4051f9:	adc    dh,BYTE PTR [eax+0xc]
  4051fc:	outs   dx,BYTE PTR ds:[esi]
  4051fd:	cli    
  4051fe:	adc    al,0x16
  405200:	add    BYTE PTR [eax],al
  405202:	mov    ebp,0x5666fb59
  405207:	ret    0xe39e
  40520a:	popa   
  40520b:	fwait
  40520c:	daa    
  40520d:	mov    ebp,DWORD PTR [ebp-0x786bd7f]
  405213:	loop   0x4051c0
  405215:	loope  0x4051ab
  405217:	dec    ecx
  405218:	leave  
  405219:	dec    ecx
  40521a:	dec    esp
  40521b:	popa   
  40521c:	add    DWORD PTR ds:[ebx],ebx
  40521f:	mov    ebx,0x28f5e35b
  405224:	mov    ch,0x5b
  405226:	xchg   ecx,eax
  405227:	add    dl,al
  405229:	(bad)  
  40522a:	into   
  40522b:	retf   0x5668
  40522e:	cmp    dh,BYTE PTR [edx]
  405230:	or     al,0x6c
  405232:	mov    bh,0x92
  405234:	loop   0x4051e2
  405236:	adc    edi,DWORD PTR [edx-0x79]
  405239:	int3   
  40523a:	push   0xc43cd189
  40523f:	mov    cl,0xb4
  405241:	and    DWORD PTR es:[edx+0x5a],eax
  405245:	(bad)  
  405246:	in     eax,dx
  405247:	jmp    0xf36aa58a
  40524c:	test   DWORD PTR [ebx-0x561ce67a],ebx
  405252:	add    ebp,DWORD PTR [ebx+0x516f310d]
  405258:	push   0xa199b519
  40525d:	mov    cl,0x31
  40525f:	jno    0x405225
  405261:	mov    bl,0x7c
  405263:	loope  0x40528e
  405265:	or     eax,DWORD PTR [eax]
  405267:	add    BYTE PTR [eax],cl
  405269:	cmp    cl,BYTE PTR [edi+0x0]
  40526c:	and    edi,DWORD PTR [edi+ebp*2]
  40526f:	idiv   BYTE PTR [ebx-0x666cf780]
  405275:	inc    ebp
  405276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405277:	jge    0x40526a
  405279:	jns    0x40523b
  40527b:	sbb    BYTE PTR [ecx-0xeb12feb],cl
  405281:	test   eax,0xcd32bb6
  405286:	sbb    ch,al
  405288:	fwait
  405289:	mov    al,0x7e
  40528b:	mov    al,ds:0x1947731e
  405290:	ss inc esi
  405292:	and    BYTE PTR [esp+edx*2+0x79],bh
  405296:	(bad)  
  405297:	xchg   edx,eax
  405298:	sbb    al,0xce
  40529a:	out    0xf7,eax
  40529c:	pop    ds
  40529d:	mov    dl,BYTE PTR [edi+0x3d]
  4052a0:	push   edi
  4052a1:	sub    eax,0x91f5583f
  4052a6:	(bad)  
  4052a7:	mov    dh,0x7d
  4052a9:	daa    
  4052aa:	not    ebx
  4052ac:	call   0x50ab219b
  4052b1:	push   eax
  4052b2:	test   al,0xf
  4052b4:	mov    dl,0xf5
  4052b6:	push   es
  4052b7:	loope  0x4052b3
  4052b9:	(bad)  
  4052ba:	pusha  
  4052bb:	test   dl,ah
  4052bd:	and    al,0x70
  4052bf:	rcr    BYTE PTR [edx-0x6e],cl
  4052c2:	push   ss
  4052c3:	mov    bh,0x78
  4052c5:	das    
  4052c6:	mov    eax,0xde8a3059
  4052cb:	cmp    al,0x0
  4052cd:	add    BYTE PTR [ebp-0x127a1838],ah
  4052d3:	bnd jg 0x4052b6
  4052d6:	out    dx,eax
  4052d7:	dec    edi
  4052d8:	das    
  4052d9:	push   cs
  4052da:	xchg   ebp,ebp
  4052dc:	inc    edi
  4052dd:	imul   ebp,DWORD PTR [edi+0x3],0xf
  4052e1:	mov    ds:0xc7683607,al
  4052e6:	popf   
  4052e7:	jp     0x4052f0
  4052e9:	mov    esp,0xd9a04bd2
  4052ef:	pop    ebp
  4052f0:	and    bl,BYTE PTR [eax-0x497178]
  4052f6:	or     eax,0xf3502a08
  4052fb:	ja     0x4052aa
  4052fd:	aaa    
  4052fe:	xchg   BYTE PTR [edi+0x77d0274c],dl
  405304:	or     BYTE PTR [eax-0x7b],al
  405307:	jge    0x40535c
  405309:	out    dx,eax
  40530a:	pop    ebx
  40530b:	sahf   
  40530c:	inc    DWORD PTR [edi-0x4f51e502]
  405312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405313:	add    ch,BYTE PTR [ebx]
  405315:	xlat   BYTE PTR ds:[ebx]
  405316:	mov    edx,0xc78b604
  40531b:	sub    eax,0xa5311f21
  405320:	jmp    0x6d5cf21b
  405325:	nop
  405326:	or     DWORD PTR [edx],0xffffffe2
  405329:	ds and eax,0xf85876c3
  40532f:	int    0x46
  405331:	pusha  
  405332:	add    BYTE PTR [eax],al
  405334:	imul   ebx,DWORD PTR [ebp-0x4853f875],0x47d2a840
  40533e:	xchg   esp,eax
  40533f:	iret   
  405340:	daa    
  405341:	sub    BYTE PTR [ebp-0x21],dh
  405344:	icebp  
  405345:	addr16 loope 0x4052ff
  405348:	and    al,0x4e
  40534a:	outs   dx,BYTE PTR ds:[esi]
  40534b:	pop    ss
  40534c:	cmp    cl,ch
  40534e:	jmp    0x938af2c2
  405353:	dec    eax
  405354:	push   es
  405355:	sar    DWORD PTR [esi],cl
  405357:	das    
  405358:	fcomi  st,st(4)
  40535a:	mov    eax,DWORD PTR [eax-0x18b74393]
  405360:	push   eax
  405361:	add    dl,BYTE PTR [edx+0x3a6f02d2]
  405367:	xchg   BYTE PTR [edx-0x77],ah
  40536a:	sub    cl,bl
  40536c:	cli    
  40536d:	test   DWORD PTR [edi+0xd149a7d],0x9dbbca30
  405377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405378:	int    0x60
  40537a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40537b:	aaa    
  40537c:	jb     0x4053c0
  40537e:	neg    DWORD PTR [edx+0x7d96e505]
  405384:	adc    eax,0x4bd8f713
  405389:	clc    
  40538a:	in     al,dx
  40538b:	test   ebp,ebx
  40538d:	mov    cl,BYTE PTR [ebp+0x86d83d2]
  405393:	fwait
  405394:	mov    ds:0x375fe6,al
  405399:	add    BYTE PTR [ebp+0x4aa46241],dh
  40539f:	pop    edi
  4053a0:	cli    
  4053a1:	das    
  4053a2:	in     eax,dx
  4053a3:	mov    ebx,0xcaeb2b94
  4053a8:	xor    esp,DWORD PTR [edi+0x342e2fec]
  4053ae:	xchg   ebx,eax
  4053af:	push   edx
  4053b0:	mov    fs,WORD PTR [eax-0x32f44a5c]
  4053b6:	mov    ebp,0x6389a31e
  4053bb:	stc    
  4053bc:	mov    al,ds:0xf9a705d6
  4053c1:	sbb    DWORD PTR [ebx],0x39f1184
  4053c7:	mov    dh,0x79
  4053c9:	xor    edx,esp
  4053cb:	push   eax
  4053cc:	imul   ebp,DWORD PTR [eax+0x2c132f6b],0xffffff8c
  4053d3:	int3   
  4053d4:	lea    eax,[ecx-0x2b217c6c]
  4053da:	dec    eax
  4053db:	test   al,0x0
  4053dd:	in     al,0x24
  4053df:	ror    DWORD PTR [eax],0x74
  4053e2:	(bad)  [ebp+ebp*2+0x64]
  4053e6:	pop    ecx
  4053e7:	mov    eax,ds:0x852ae4a4
  4053ec:	sar    esi,0xd7
  4053ef:	fld    TBYTE PTR [esi]
  4053f1:	xor    bh,BYTE PTR ds:0x1878bb4a
  4053f8:	repz jae 0x4053ea
  4053fb:	repz xchg ebp,eax
  4053fd:	push   ecx
  4053fe:	add    BYTE PTR [eax],al
  405400:	push   eax
  405401:	push   eax
  405402:	js     0x4053cd
  405404:	in     eax,0xab
  405406:	sbb    eax,0x4bbc0561
  40540b:	test   eax,0xbb2e5c96
  405410:	and    eax,DWORD PTR [eax+eax*8]
  405413:	inc    ebx
  405414:	fisub  WORD PTR [eiz*4+0x1c2cc4be]
  40541b:	cs pop ebx
  40541d:	retf   
  40541e:	js     0x405434
  405420:	lods   al,BYTE PTR ds:[esi]
  405421:	je     0x4053ba
  405423:	les    eax,FWORD PTR [ecx-0x6d]
  405426:	repnz xor al,0x80
  405429:	jmp    0x40542f
  40542b:	xchg   esp,eax
  40542c:	push   ebp
  40542d:	or     eax,0xb3b88e60
  405432:	mov    gs,WORD PTR [esi]
  405434:	dec    edi
  405435:	push   ebp
  405436:	jmp    0x4053e3
  405438:	pop    es
  405439:	adc    BYTE PTR [edx+0x3],0x52
  40543d:	fwait
  40543e:	aaa    
  40543f:	add    DWORD PTR [ecx+0x5a99d944],ebx
  405445:	jecxz  0x405402
  405447:	jno    0x405476
  405449:	aam    0xe9
  40544b:	sbb    DWORD PTR [eax+0x170b8f34],eax
  405451:	mov    WORD PTR [ecx+0x73],fs
  405454:	test   al,0x6c
  405456:	add    al,0x0
  405458:	mov    bl,0x3c
  40545a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545b:	mov    ebp,0xd8c1003b
  405460:	sbb    DWORD PTR [esi],esi
  405462:	outs   dx,BYTE PTR ds:[esi]
  405463:	add    BYTE PTR ss:[eax],al
  405466:	ror    DWORD PTR [ecx-0xb66acf8],1
  40546c:	dec    ebp
  40546d:	call   0xfef3:0xff29c3e1
  405474:	test   DWORD PTR [ecx],edx
  405476:	imul   edi,DWORD PTR [edx-0x6e198b1f],0xffffffd8
  40547d:	int    0x4e
  40547f:	sub    eax,0x982ca8be
  405484:	adc    BYTE PTR [esi-0xc],al
  405487:	and    al,0x76
  405489:	and    ebx,DWORD PTR [esp+eax*8+0x66]
  40548d:	jne    0x405473
  40548f:	clc    
  405490:	add    BYTE PTR [eax],dl
  405492:	test   BYTE PTR [ebp-0x52],0xfe
  405496:	(bad)  
  405497:	lock enter 0xa39b,0x1a
  40549c:	icebp  
  40549d:	and    ch,BYTE PTR [ebx-0x62]
  4054a0:	xchg   ebp,eax
  4054a1:	inc    edi
  4054a2:	jmp    0x81e98dc9
  4054a7:	xchg   edi,eax
  4054a8:	pop    ebp
  4054a9:	int3   
  4054aa:	add    BYTE PTR [ebx-0x12],0x6
  4054ae:	dec    edx
  4054af:	ja     0x40543a
  4054b1:	arpl   WORD PTR [eax+0x3a],cx
  4054b4:	lea    esp,es:[eax+0x1de8417e]
  4054bb:	lods   eax,DWORD PTR ds:[esi]
  4054bc:	js     0x40550f
  4054be:	lds    edx,FWORD PTR [ecx]
  4054c0:	push   ds
  4054c1:	xor    al,0x97
  4054c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c4:	mov    al,0xda
  4054c6:	pop    ds
  4054c7:	sbb    dh,dl
  4054c9:	mov    edi,0x7f070000
  4054ce:	(bad)  
  4054cf:	jmp    0x8ce18ea3
  4054d4:	popf   
  4054d5:	xchg   edx,eax
  4054d6:	xchg   ebx,eax
  4054d7:	push   cs
  4054d8:	aas    
  4054d9:	jp     0x40551b
  4054db:	imul   ebx,DWORD PTR [edx-0x4ae94f9],0xd635e726
  4054e5:	sub    al,0x72
  4054e7:	cdq    
  4054e8:	jo     0x405477
  4054ea:	(bad)  
  4054ec:	dec    ebp
  4054ed:	mov    ebp,0xc34b937
  4054f2:	pushf  
  4054f3:	ficom  WORD PTR [ecx-0x508eceda]
  4054f9:	mov    ch,0xa4
  4054fb:	push   ss
  4054fc:	or     dh,BYTE PTR [ebx]
  4054fe:	(bad)  
  4054ff:	sub    eax,0x4979ab6b
  405504:	inc    esi
  405505:	cdq    
  405506:	into   
  405507:	in     eax,0xe0
  405509:	rol    BYTE PTR [edx-0x5c47427f],1
  40550f:	xchg   ecx,eax
  405510:	rol    DWORD PTR [eax+0x30],cl
  405513:	imul   BYTE PTR [esi+0x48599ce2]
  405519:	stos   DWORD PTR es:[edi],eax
  40551a:	cmp    BYTE PTR [esi],bh
  40551c:	and    eax,0x7c068236
  405521:	jne    0x4054f0
  405523:	pusha  
  405524:	fstp   DWORD PTR [ebx+0x7a]
  405527:	into   
  405528:	neg    ebx
  40552a:	(bad)  
  40552b:	test   al,0x52
  40552d:	dec    esp
  40552e:	push   cs
  40552f:	inc    ecx
  405530:	add    BYTE PTR [eax],al
  405532:	aad    0xfb
  405534:	ret    0x7026
  405537:	cmc    
  405538:	adc    eax,0xb9664e89
  40553d:	out    dx,al
  40553e:	jmp    0x405522
  405540:	lock aad 0x8a
  405543:	jp     0x4055a9
  405545:	mov    cl,0xa7
  405547:	or     bh,dh
  405549:	sbb    eax,0x795be101
  40554e:	sbb    al,0x3
  405550:	cli    
  405551:	mov    edx,0x1692b344
  405556:	mov    ds:0xfcc19050,eax
  40555b:	cs call 0x650a306e
  405561:	pop    esp
  405562:	mov    ebx,0x15f90582
  405567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405568:	jmp    DWORD PTR [ebx+0x73]
  40556b:	neg    DWORD PTR [esi-0x11]
  40556e:	dec    ebp
  40556f:	sbb    al,0x6f
  405571:	and    eax,0xa9df63b3
  405576:	or     al,0xc1
  405578:	lds    ebx,FWORD PTR [esi]
  40557a:	imul   ebx,esi,0x74
  40557d:	mov    dl,0x44
  40557f:	cmp    eax,esi
  405581:	pop    es
  405582:	sbb    al,0x92
  405584:	cmp    BYTE PTR [ebx+0x7b],cl
  405587:	jne    0x4055d3
  405589:	add    ah,dl
  40558b:	pop    es
  40558c:	rcl    BYTE PTR [ebx+esi*4-0x14],cl
  405590:	sub    DWORD PTR [edx+0x1ee23a9b],esi
  405596:	add    BYTE PTR [eax],al
  405598:	hlt    
  405599:	fnstsw WORD PTR [edi+0x38bf53a9]
  40559f:	and    eax,0x54b5642c
  4055a4:	add    al,0xeb
  4055a6:	xor    al,0x0
  4055a8:	arpl   WORD PTR [eax],cx
  4055aa:	dec    edi
  4055ab:	dec    ebx
  4055ac:	mov    esp,0x9b078f76
  4055b1:	xchg   ecx,eax
  4055b2:	jmp    0xe942f2ba
  4055b7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4055bd:	add    ch,cl
  4055bf:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4055c5:	add    ch,cl
  4055c7:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  4055cd:	add    al,BYTE PTR [eax]
  4055cf:	jmp    0xe8405872
  4055d4:	sahf   
  4055d5:	add    al,BYTE PTR [eax]
  4055d7:	call   0xe840587a
  4055dc:	sahf   
  4055dd:	add    al,BYTE PTR [eax]
  4055df:	call   0xeb405882
  4055e4:	sahf   
  4055e5:	add    al,BYTE PTR [eax]
  4055e7:	jmp    0x405587
  4055e9:	add    al,BYTE PTR [eax]
  4055eb:	jmp    0x40558b
  4055ed:	add    al,BYTE PTR [eax]
  4055ef:	jmp    0x40558f
  4055f1:	add    al,BYTE PTR [eax]
  4055f3:	jmp    0x29e:0xea00029e
  4055fa:	add    dl,ch
  4055fc:	add    BYTE PTR [eax],al
  4055fe:	sahf   
  4055ff:	add    al,BYTE PTR [eax]
  405601:	jmp    0x29e:0xed00029e
  405608:	add    ch,ah
  40560a:	sahf   
  40560b:	add    al,BYTE PTR [eax]
  40560d:	in     eax,dx
  40560e:	sahf   
  40560f:	add    al,BYTE PTR [eax]
  405611:	in     eax,0x9e
  405613:	add    al,BYTE PTR [eax]
  405615:	in     al,dx
  405616:	sahf   
  405617:	add    al,BYTE PTR [eax]
  405619:	in     al,0x9e
  40561b:	add    al,BYTE PTR [eax]
  40561d:	in     al,dx
  40561e:	sahf   
  40561f:	add    al,BYTE PTR [eax]
  405621:	in     al,0x9e
  405623:	add    al,BYTE PTR [eax]
  405625:	jmp    0xd94058c8
  40562a:	das    
  40562b:	hlt    
  40562c:	jmp    eax
  40562e:	mov    eax,ds:0x9be305fb
  405633:	std    
  405634:	add    esi,ebp
  405636:	popf   
  405637:	test   DWORD PTR [ecx],0xfff99fef
  40563d:	call   0xe94058e0
  405642:	sahf   
  405643:	add    al,BYTE PTR [eax]
  405645:	add    BYTE PTR [esi+eax*1],al
  405648:	add    BYTE PTR [eax],al
  40564a:	add    al,0x6
  40564c:	add    BYTE PTR [eax],al
  40564e:	cmc    
  40564f:	add    eax,0x5f50000
  405654:	add    BYTE PTR [eax],al
  405656:	mov    BYTE PTR ds:0x5c60000,0x0
  40565d:	add    BYTE PTR [edi+0x5],dh
  405663:	add    BYTE PTR [edi-0x37fffffb],dh
  405669:	add    eax,0x5b80000
  40566e:	add    BYTE PTR [eax],al
  405670:	mov    ecx,0xb9000005
  405675:	add    eax,0x58a0000
  40567a:	add    BYTE PTR [eax],al
  40567c:	jp     0x405683
  40567e:	add    BYTE PTR [eax],al
  405680:	jnp    0x405687
  405682:	add    BYTE PTR [eax],al
  405684:	jnp    0x40568b
  405686:	add    BYTE PTR [eax],al
  405688:	ins    BYTE PTR es:[edi],dx
  405689:	add    eax,0x56c0000
  40568e:	add    BYTE PTR [eax],al
  405690:	jge    0x405697
  405692:	add    BYTE PTR [eax],al
  405694:	jge    0x40569b
  405696:	add    BYTE PTR [eax],al
  405698:	dec    esi
  405699:	add    eax,0x54e0000
  40569e:	add    BYTE PTR [eax],al
  4056a0:	aas    
  4056a1:	add    eax,0x53f0000
  4056a6:	add    BYTE PTR [eax],al
  4056a8:	xor    BYTE PTR ds:0x5400000,al
  4056ae:	add    BYTE PTR [eax],al
  4056b0:	inc    ecx
  4056b1:	add    eax,0x5410000
  4056b6:	add    BYTE PTR [eax],al
  4056b8:	add    al,0x5
  4056ba:	add    BYTE PTR [eax],al
  4056bc:	add    al,0x5
  4056be:	add    BYTE PTR [eax],al
  4056c0:	popf   
  4056c1:	fwait
  4056c2:	add    eax,DWORD PTR [eax]
  4056c4:	popf   
  4056c5:	fwait
  4056c6:	add    eax,DWORD PTR [eax]
  4056c8:	add    BYTE PTR [eax],al
  4056ca:	popf   
  4056cb:	fwait
  4056cc:	add    eax,DWORD PTR [eax]
  4056ce:	popf   
  4056cf:	fwait
  4056d0:	add    eax,DWORD PTR [eax]
  4056d2:	popf   
  4056d3:	fwait
  4056d4:	add    eax,DWORD PTR [eax]
  4056d6:	popf   
  4056d7:	fwait
  4056d8:	add    eax,DWORD PTR [eax]
  4056da:	popf   
  4056db:	fwait
  4056dc:	add    eax,DWORD PTR [eax]
  4056de:	popf   
  4056df:	fwait
  4056e0:	add    eax,DWORD PTR [eax]
  4056e2:	popf   
  4056e3:	fwait
  4056e4:	add    eax,DWORD PTR [eax]
  4056e6:	popf   
  4056e7:	fwait
  4056e8:	add    eax,DWORD PTR [eax]
  4056ea:	popf   
  4056eb:	fwait
  4056ec:	add    eax,DWORD PTR [eax]
  4056ee:	popf   
  4056ef:	fwait
  4056f0:	add    eax,DWORD PTR [eax]
  4056f2:	popf   
  4056f3:	fwait
  4056f4:	add    eax,DWORD PTR [eax]
  4056f6:	popf   
  4056f7:	fwait
  4056f8:	add    eax,DWORD PTR [eax]
  4056fa:	popf   
  4056fb:	fwait
  4056fc:	add    eax,DWORD PTR [eax]
  4056fe:	popf   
  4056ff:	pushf  
  405700:	add    eax,DWORD PTR [eax]
  405702:	popf   
  405703:	cwde   
  405704:	add    eax,DWORD PTR [eax]
  405706:	popf   
  405707:	cdq    
  405708:	add    eax,DWORD PTR [eax]
  40570a:	popf   
  40570b:	lea    eax,[ebx]
  40570d:	or     BYTE PTR [ebp-0x62f7fbeb],bl
  405713:	pop    ebp
  405714:	add    ecx,DWORD PTR [eax]
  405716:	popf   
  405717:	in     eax,0x3
  405719:	or     BYTE PTR [ebp-0x62f7fc13],bl
  40571f:	jne    0x405724
  405721:	or     BYTE PTR [ebp-0x62f7fbc3],bl
  405727:	inc    ebp
  405728:	add    ecx,DWORD PTR [eax]
  40572a:	popf   
  40572b:	popf   
  40572c:	add    ecx,DWORD PTR [eax]
  40572e:	add    BYTE PTR [eax],al
  405730:	popf   
  405731:	and    eax,0xed9d0803
  405736:	add    ecx,DWORD PTR [eax]
  405738:	popf   
  405739:	jne    0x40573e
  40573b:	or     BYTE PTR [ebp-0x5afc1afe],bl
  405741:	add    bl,BYTE PTR [ebp+0x3]
  405744:	xchg   ebp,eax
  405745:	add    dl,BYTE PTR ds:0x8d029504
  40574b:	add    esp,DWORD PTR [ebp-0x5afc14fe]
  405751:	add    ch,BYTE PTR [ebx+0x3]
  405754:	xchg   ebp,eax
  405755:	add    ch,BYTE PTR [ebx]
  405757:	add    al,0x95
  405759:	add    ch,BYTE PTR [ebx+0xb02a503]
  40575f:	add    al,0xa5
  405761:	add    cl,BYTE PTR [ebx-0x34fd6afd]
  405767:	add    edx,DWORD PTR [ebp-0x5afcb4fe]
  40576d:	add    bl,bl
  40576f:	add    esp,DWORD PTR [ebp-0x6afca4fe]
  405775:	add    bl,BYTE PTR [ebx+0x1b029503]
  40577b:	add    esp,DWORD PTR [ebp-0x5afc24fe]
  405781:	add    bl,BYTE PTR [ebx+0x3]
  405784:	xchg   ebp,eax
  405785:	add    bl,BYTE PTR [ebx+0x1b029503]
  40578b:	add    esp,DWORD PTR [ebp-0x5afc0cfe]
  405791:	add    dh,BYTE PTR [ebx+0x3]
  405794:	add    BYTE PTR [eax],al
  405796:	xchg   ebp,eax
  405797:	add    ah,BYTE PTR [ebx+0x23029503]
  40579d:	add    esp,DWORD PTR [ebp-0x5afbecfe]
  4057a3:	add    dl,BYTE PTR [ebx+0x43029504]
  4057a9:	add    al,0x95
  4057ab:	add    al,bl
  4057ad:	add    al,0xa5
  4057af:	add    ah,bl
  4057b1:	add    esp,DWORD PTR [ebp-0x6afb9cfe]
  4057b7:	add    al,BYTE PTR [eax]
  4057b9:	adc    ebx,DWORD PTR [ecx-0x5e6d0006]
  4057bf:	cli    
  4057c0:	jmp    edx
  4057c2:	sahf   
  4057c3:	cli    
  4057c4:	jmp    DWORD PTR [edx-0x5f]
  4057c7:	cli    
  4057c8:	call   DWORD PTR [edx]
  4057ca:	cdq    
  4057cb:	cli    
  4057cc:	call   DWORD PTR [edx-0x1100055f]
  4057d2:	sahf   
  4057d3:	cli    
  4057d4:	jmp    DWORD PTR [esi-0x5f]
  4057d7:	cli    
  4057d8:	jmp    FWORD PTR [esi]
  4057da:	cdq    
  4057db:	cli    
  4057dc:	jmp    DWORD PTR [esi+0xefffaa1]
  4057e2:	cdq    
  4057e3:	cli    
  4057e4:	inc    DWORD PTR [esi-0x3100055f]
  4057ea:	sahf   
  4057eb:	cli    
  4057ec:	inc    DWORD PTR [esi-0x5f]
  4057ef:	cli    
  4057f0:	(bad)  
  4057f1:	ficomp WORD PTR [esi-0x5ea90006]
  4057f7:	cli    
  4057f8:	call   FWORD PTR [esi-0x5620000]
  4057fe:	call   DWORD PTR [esi]
  405800:	mov    eax,ds:0x9edefffa
  405805:	cli    
  405806:	call   DWORD PTR [esi-0x5f]
  405809:	cli    
  40580a:	call   FWORD PTR [esi+0x16fffa9e]
  405810:	mov    eax,ds:0x9ef6fffa
  405815:	cli    
  405816:	jmp    FWORD PTR [esi-0x5f]
  405819:	cli    
  40581a:	jmp    DWORD PTR [esi+0x1efffa9e]
  405820:	mov    eax,ds:0x9916fffa
  405825:	cli    
  405826:	dec    DWORD PTR [esi+0x46fffa9e]
  40582c:	cdq    
  40582d:	cli    
  40582e:	(bad)  
  40582f:	mov    esi,0xfffffa9e
  405834:	cmp    al,BYTE PTR [edx]
  405836:	or     BYTE PTR [eax],al
  405838:	retf   0x801
  40583b:	add    BYTE PTR [edx+0x2a0007fe],cl
  405841:	add    cl,BYTE PTR [eax]
  405843:	add    dl,bh
  405845:	add    DWORD PTR [eax],ecx
  405847:	add    BYTE PTR [edx+0x1],ch
  40584a:	or     BYTE PTR [eax],al
  40584c:	stos   BYTE PTR es:[edi],al
  40584d:	inc    BYTE PTR [edi]
  40584f:	add    BYTE PTR [edx],ch
  405851:	add    cl,BYTE PTR [eax]
  405853:	add    BYTE PTR ds:0x75000802,al
  405859:	add    DWORD PTR [eax],ecx
  40585b:	add    BYTE PTR [ebp+0x7fe],dh
  405861:	add    BYTE PTR ds:0xa5000802,al
  405867:	inc    BYTE PTR [edi]
  405869:	add    BYTE PTR ds:0xd5000802,dl
  40586f:	add    DWORD PTR [eax],ecx
  405871:	add    BYTE PTR [ebp+0x1],ah
  405874:	or     BYTE PTR [eax],al
  405876:	aad    0x1
  405878:	or     BYTE PTR [eax],al
  40587a:	inc    ebp
  40587b:	add    DWORD PTR [eax],ecx
  40587d:	add    BYTE PTR ds:0xb5000802,al
  405883:	add    DWORD PTR [eax],ecx
  405885:	add    BYTE PTR [ebp+0x1],dh
  405888:	or     BYTE PTR [eax],al
  40588a:	in     eax,0x1
  40588c:	or     BYTE PTR [eax],al
  40588e:	and    eax,0x95000801
  405893:	add    DWORD PTR [eax],ecx
  405895:	add    BYTE PTR [ebp+0x1],ch
  405898:	or     BYTE PTR [eax],al
  40589a:	in     eax,dx
  40589b:	add    DWORD PTR [eax],ecx
  40589d:	add    BYTE PTR ds:0x7d000801,bh
  4058a3:	add    DWORD PTR [eax],ecx
  4058a5:	add    BYTE PTR [ebp+0x2d0007fe],ch
  4058ab:	inc    BYTE PTR [edi]
  4058ad:	add    BYTE PTR [ebp-0x62f7fbbe],bl
  4058b3:	ret    0x804
  4058b6:	popf   
  4058b7:	mov    ds:0x229d0803,al
  4058bc:	add    al,0x8
  4058be:	popf   
  4058bf:	repnz add ecx,DWORD PTR [eax]
  4058c2:	popf   
  4058c3:	jb     0x4058c9
  4058c5:	or     BYTE PTR [eax],al
  4058c7:	add    BYTE PTR [ebp-0x62f7fc5e],bl
  4058cd:	and    al,BYTE PTR [eax+ecx*1]
  4058d0:	popf   
  4058d1:	repnz add ecx,DWORD PTR [eax]
  4058d4:	popf   
  4058d5:	jb     0x4058db
  4058d7:	or     BYTE PTR [ebp-0x62f7fc6a],bl
  4058dd:	push   ds
  4058de:	add    al,0x8
  4058e0:	popf   
  4058e1:	(bad)  
  4058e2:	add    ecx,DWORD PTR [eax]
  4058e4:	popf   
  4058e5:	pop    esi
  4058e6:	add    al,0x8
  4058e8:	popf   
  4058e9:	test   BYTE PTR [ebx],0x8
  4058ec:	popf   
  4058ed:	jle    0x4058f3
  4058ef:	or     BYTE PTR [ebp-0x62f7fc4a],bl
  4058f5:	ds add al,0x8
  4058f8:	popf   
  4058f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fa:	add    ecx,DWORD PTR [eax]
  4058fc:	popf   
  4058fd:	cs add al,0x8
  405900:	popf   
  405901:	add    cx,WORD PTR [eax]
  405904:	popf   
  405905:	out    dx,al
  405906:	add    ecx,DWORD PTR [eax]
  405908:	popf   
  405909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590a:	add    ecx,DWORD PTR [eax]
  40590c:	popf   
  40590d:	cs add al,0x8
  405910:	popf   
  405911:	add    cx,WORD PTR [eax]
  405914:	popf   
  405915:	out    dx,al
  405916:	add    ecx,DWORD PTR [eax]
  405918:	popf   
  405919:	mov    es,WORD PTR [ebx]
  40591b:	or     BYTE PTR [ebp-0x62f7fbea],bl
  405921:	pop    esi
  405922:	add    ecx,DWORD PTR [eax]
  405924:	popf   
  405925:	out    0x3,al
  405927:	or     BYTE PTR [ebp+0x41402],bl
  40592d:	add    BYTE PTR [ebp-0x6afc73fe],dl
  405933:	add    al,BYTE PTR [esp+eax*1-0x5b]
  405937:	add    bh,BYTE PTR [ebx+eax*1+0x3e402a5]
  40593e:	xchg   ebp,eax
  40593f:	add    bl,BYTE PTR [ebx+eax*1-0x6b]
  405943:	add    dl,BYTE PTR [esp+eax*1]
  405946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405947:	add    cl,BYTE PTR [ebx+eax*1+0x3e402a5]
  40594e:	xchg   ebp,eax
  40594f:	add    bl,BYTE PTR [ebx+eax*1-0x6b]
  405953:	add    dl,BYTE PTR [esp+eax*1]
  405956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405957:	add    cl,BYTE PTR [ebx+eax*1+0x3da02a5]
  40595e:	xchg   esp,eax
  40595f:	add    bl,dl
  405961:	add    al,0x94
  405963:	add    bl,BYTE PTR [edx+0x3]
  405966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405967:	add    bl,BYTE PTR [edx+0x4]
  40596a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596b:	add    bh,BYTE PTR [edx-0x45fd6bfd]
  405971:	add    al,0x94
  405973:	add    bh,BYTE PTR [edx]
  405975:	add    esp,DWORD PTR [edx+eax*1+0x2a4043a]
  40597c:	cli    
  40597d:	add    edx,DWORD PTR [edx+eax*1+0x29404fa]
  405984:	jp     0x405989
  405986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405987:	add    bh,BYTE PTR [edx+0x4]
  40598a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40598b:	add    bl,BYTE PTR [edx-0x65fd6bfd]
  405991:	add    al,0x0
  405993:	add    BYTE PTR [edx+eax*1+0x2a4031a],dl
  40599a:	sbb    al,BYTE PTR [esp+eiz*4]
  40599d:	add    dh,dl
  40599f:	add    edx,DWORD PTR [edx+eax*1+0x29404f2]
  4059a6:	add    BYTE PTR [edx-0x62],ah
  4059a9:	stc    
  4059aa:	jmp    DWORD PTR [ecx-0x67]
  4059ad:	stc    
  4059ae:	push   DWORD PTR [ecx]
  4059b0:	mov    eax,ds:0x9e31fff9
  4059b5:	stc    
  4059b6:	jmp    DWORD PTR [ecx-0x5e00065f]
  4059bc:	sahf   
  4059bd:	stc    
  4059be:	call   DWORD PTR [ecx]
  4059c0:	mov    eax,ds:0x9e11fff9
  4059c5:	stc    
  4059c6:	inc    DWORD PTR [ecx-0x7e00065f]
  4059cc:	sahf   
  4059cd:	stc    
  4059ce:	call   DWORD PTR [ecx]
  4059d0:	mov    eax,ds:0x9e11fff9
  4059d5:	stc    
  4059d6:	inc    DWORD PTR [ecx-0x7e00065f]
  4059dc:	sahf   
  4059dd:	stc    
  4059de:	jmp    ecx
  4059e0:	sahf   
  4059e1:	stc    
  4059e2:	jmp    ecx
  4059e4:	lahf   
  4059e5:	stc    
  4059e6:	call   DWORD PTR [ecx-0x5f]
  4059e9:	stc    
  4059ea:	call   DWORD PTR [ecx-0x62]
  4059ed:	stc    
  4059ee:	inc    ecx
  4059f0:	sahf   
  4059f1:	stc    
  4059f2:	inc    ecx
  4059f4:	lahf   
  4059f5:	stc    
  4059f6:	push   DWORD PTR [ecx]
  4059f8:	add    BYTE PTR [eax],al
  4059fa:	mov    eax,ds:0x9e31fff9
  4059ff:	stc    
  405a00:	inc    DWORD PTR [ecx]
  405a02:	mov    eax,ds:0x9e01fff9
  405a07:	stc    
  405a08:	push   DWORD PTR [ecx-0x5f]
  405a0b:	or     eax,DWORD PTR [eax]
  405a0d:	jb     0x4059ad
  405a0f:	or     eax,DWORD PTR [eax]
  405a11:	mov    ds:0xa2000b9e,al
  405a16:	lahf   
  405a17:	or     eax,DWORD PTR [eax]
  405a19:	adc    ah,BYTE PTR [ecx-0x61edfff5]
  405a1f:	or     eax,DWORD PTR [eax]
  405a21:	add    BYTE PTR [ebx+0x6],bh
  405a24:	or     DWORD PTR [eax],eax
  405a26:	jnp    0x405a2d
  405a28:	or     DWORD PTR [eax],eax
  405a2a:	retf   
  405a2b:	push   es
  405a2c:	or     DWORD PTR [eax],eax
  405a2e:	mov    ebx,0x7b000905
  405a33:	push   es
  405a34:	or     DWORD PTR [eax],eax
  405a36:	jnp    0x405a3d
  405a38:	or     DWORD PTR [eax],eax
  405a3a:	or     eax,DWORD PTR [esi]
  405a3c:	or     DWORD PTR [eax],eax
  405a3e:	sti    
  405a3f:	add    al,0x9
  405a41:	add    BYTE PTR [ebx-0x64fff6fa],bl
  405a47:	add    eax,0x62b0009
  405a4c:	or     DWORD PTR [eax],eax
  405a4e:	sbb    eax,DWORD PTR ds:0x69b0009
  405a54:	or     DWORD PTR [eax],eax
  405a56:	fwait
  405a57:	add    eax,0x62b0009
  405a5c:	or     DWORD PTR [eax],eax
  405a5e:	add    BYTE PTR [eax],al
  405a60:	sbb    eax,DWORD PTR ds:0x5cb0009
  405a66:	or     DWORD PTR [eax],eax
  405a68:	retf   
  405a69:	add    al,0x9
  405a6b:	add    BYTE PTR [ebx+0x5],bh
  405a6e:	or     DWORD PTR [eax],eax
  405a70:	imul   eax,DWORD PTR [ecx+ecx*1],0x0
  405a74:	or     eax,DWORD PTR [esi]
  405a76:	or     DWORD PTR [eax],eax
  405a78:	or     eax,DWORD PTR ds:0x57b0009
  405a7e:	or     DWORD PTR [eax],eax
  405a80:	imul   eax,DWORD PTR [ecx+ecx*1],0x0
  405a84:	stos   DWORD PTR es:[edi],eax
  405a85:	add    eax,0x4ab0009
  405a8a:	or     DWORD PTR [eax],eax
  405a8c:	sbb    eax,DWORD PTR [esi]
  405a8e:	or     DWORD PTR [eax],eax
  405a90:	or     eax,DWORD PTR ds:0x52b0009
  405a96:	or     DWORD PTR [eax],eax
  405a98:	sub    eax,DWORD PTR [ecx+ecx*1]
  405a9b:	add    BYTE PTR [ebp-0x62f6fce0],bl
  405aa1:	sbb    BYTE PTR [edx],al
  405aa3:	or     DWORD PTR [ebp-0x62f6fc88],ebx
  405aa9:	jo     0x405aad
  405aab:	or     DWORD PTR [ebp-0x62f6fd18],ebx
  405ab1:	loopne 0x405ab4
  405ab3:	or     DWORD PTR [ebp-0x62f6fbc8],ebx
  405ab9:	xor    BYTE PTR ds:0x4a89d09,al
  405abf:	or     DWORD PTR [ebp+0x905a0],ebx
  405ac5:	add    BYTE PTR [ebp-0x62f6fbe8],bl
  405acb:	adc    BYTE PTR ds:0x4889d09,al
  405ad1:	or     DWORD PTR [ebp-0x62f6fb00],ebx
  405ad7:	sbb    BYTE PTR [ecx+ecx*1],al
  405ada:	popf   
  405adb:	adc    BYTE PTR ds:0x4889d09,al
  405ae1:	or     DWORD PTR [ebp-0x62f6fb00],ebx
  405ae7:	push   0x609d0903
  405aec:	add    al,0x9
  405aee:	popf   
  405aef:	fadd   DWORD PTR [ebx]
  405af1:	or     DWORD PTR [ebp-0x62f6fb30],ebx
  405af7:	dec    eax
  405af8:	add    ecx,DWORD PTR [ecx]
  405afa:	popf   
  405afb:	rol    BYTE PTR [ecx+ecx*1],0x9d
  405aff:	cmp    BYTE PTR [ecx+ecx*1],al
  405b02:	popf   
  405b03:	xor    BYTE PTR ds:0x4089d09,al
  405b09:	or     DWORD PTR [ebp-0x62f6fb80],ebx
  405b0f:	clc    
  405b10:	add    ecx,DWORD PTR [ecx]
  405b12:	popf   
  405b13:	lock add al,0x9
  405b16:	popf   
  405b17:	add    ah,BYTE PTR [esi-0x61fd6bfd]
  405b1d:	add    al,0xa4
  405b1f:	add    dl,BYTE PTR [esi]
  405b21:	add    al,0xa4
  405b23:	add    cl,BYTE PTR [esi]
  405b25:	add    eax,0x3e90294
  405b2a:	add    BYTE PTR [eax],al
  405b2c:	call   0xc902:0xa203a902
  405b33:	add    ebx,DWORD PTR [edx-0x5dfc76fe]
  405b39:	add    bh,cl
  405b3b:	add    ebx,DWORD PTR [edx-0x5dfbc6fe]
  405b41:	add    bl,BYTE PTR [ecx]
  405b43:	add    al,0x9a
  405b45:	add    bl,BYTE PTR [ecx+0x4]
  405b48:	mov    ds:0x9a03f102,al
  405b4d:	add    dh,BYTE PTR [ecx]
  405b4f:	add    al,0xa2
  405b51:	add    al,BYTE PTR [ecx]
  405b53:	add    al,0x9a
  405b55:	add    al,BYTE PTR [ecx+0x4]
  405b58:	mov    ds:0x9a040102,al
  405b5d:	add    al,BYTE PTR [ecx+0x4]
  405b60:	mov    ds:0x9a03d102,al
  405b65:	add    dl,BYTE PTR [ecx]
  405b67:	add    al,0xa2
  405b69:	add    ch,ch
  405b6b:	add    ebx,DWORD PTR [edx-0x5dfbdafe]
  405b71:	add    cl,ch
  405b73:	add    ebx,DWORD PTR [edx-0x5dfbfafe]
  405b79:	add    bh,ch
  405b7b:	add    ebx,DWORD PTR [edx-0x5dfc4afe]
  405b81:	add    bl,BYTE PTR ds:0xd5029a04
  405b87:	add    esp,DWORD PTR [edx-0x6afc15fe]
  405b8d:	add    ch,BYTE PTR [edx+0x3]
  405b90:	add    BYTE PTR [eax],al
  405b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b93:	add    al,BYTE PTR [eax]
  405b95:	stos   BYTE PTR es:[edi],al
  405b96:	sahf   
  405b97:	or     al,BYTE PTR [eax]
  405b99:	sub    bl,BYTE PTR [esi-0x6135fff6]
  405b9f:	or     al,BYTE PTR [eax]
  405ba1:	dec    edx
  405ba2:	sahf   
  405ba3:	or     al,BYTE PTR [eax]
  405ba5:	mov    bl,BYTE PTR [esi-0x61f5fff6]
  405bab:	or     al,BYTE PTR [eax]
  405bad:	jmp    0xd9406150
  405bb2:	sahf   
  405bb3:	add    eax,0x59ee100
  405bb8:	add    cl,dl
  405bba:	sahf   
  405bbb:	add    eax,0x59eed00
  405bc0:	add    ch,dh
  405bc2:	sahf   
  405bc3:	add    eax,0x59ee500
  405bc8:	add    ch,ch
  405bca:	sahf   
  405bcb:	add    eax,0x59eeb00
  405bd0:	add    bl,bl
  405bd2:	sahf   
  405bd3:	add    eax,0x59ee300
  405bd8:	add    bl,dl
  405bda:	sahf   
  405bdb:	add    eax,0x59eef00
  405be0:	add    bh,dh
  405be2:	sahf   
  405be3:	add    eax,0x59ee700
  405be8:	add    bh,ch
  405bea:	sahf   
  405beb:	add    eax,0x59ee800
  405bf0:	add    al,bl
  405bf2:	sahf   
  405bf3:	add    eax,0xe000
  405bf8:	sahf   
  405bf9:	add    eax,0x59ed000
  405bfe:	add    ah,ch
  405c00:	sahf   
  405c01:	add    eax,0x59ef400
  405c06:	add    ah,ah
  405c08:	sahf   
  405c09:	add    eax,0x59eec00
  405c0e:	add    BYTE PTR [eax],al
  405c10:	mov    bh,0x2
  405c12:	add    eax,0x5027700
  405c17:	add    BYTE PTR [edi+0x2],bh
  405c1a:	add    eax,0x5026f00
  405c1f:	add    BYTE PTR [ebx+0x2],dh
  405c22:	add    eax,0x5027300
  405c27:	add    BYTE PTR [ecx+eax*1+0x6800302],al
  405c2e:	add    eax,0x60c7205
  405c33:	push   es
  405c34:	inc    ebx
  405c35:	or     eax,DWORD PTR [edi]
  405c37:	pop    es
  405c38:	cmp    al,0xa
  405c3a:	or     BYTE PTR [eax],cl
  405c3c:	cmp    al,0xa
  405c3e:	or     BYTE PTR [eax],cl
  405c40:	dec    ebp
  405c41:	or     DWORD PTR [ecx],ecx
  405c43:	or     DWORD PTR ds:0x3e090909,ebp
  405c49:	adc    BYTE PTR [edx],cl
  405c4b:	or     bh,BYTE PTR [esi]
  405c4d:	adc    BYTE PTR [edx],cl
  405c4f:	or     ch,BYTE PTR [esi]
  405c51:	adc    BYTE PTR [edx],cl
  405c53:	or     cl,BYTE PTR [esi]
  405c55:	adc    BYTE PTR [edx],cl
  405c57:	or     bh,bh
  405c59:	push   cs
  405c5a:	or     ecx,DWORD PTR [ebx]
  405c5c:	add    BYTE PTR [eax],al
  405c5e:	dec    DWORD PTR [esi]
  405c60:	or     ecx,DWORD PTR [ebx]
  405c62:	(bad)  
  405c63:	ud2    
  405c65:	or     ebp,edi
  405c67:	push   cs
  405c68:	or     ecx,DWORD PTR [ebx]
  405c6a:	clc    
  405c6b:	or     eax,0xdc80c0c
  405c70:	or     al,0xc
  405c72:	call   0xc84c6884
  405c77:	or     eax,0xdb80c0c
  405c7c:	or     al,0xc
  405c7e:	call   0xc84c6890
  405c83:	or     eax,0xdc80c0c
  405c88:	or     al,0xc
  405c8a:	popf   
  405c8b:	pushw  cs
  405c8d:	or     eax,0xd0e5e98
  405c92:	nop
  405c93:	jbe    0x405ca3
  405c95:	or     eax,0xd0e6ea8
  405c9a:	mov    al,ds:0x980d0e66
  405c9f:	pop    esi
  405ca0:	push   cs
  405ca1:	or     eax,0xd0e7690
  405ca6:	test   al,0x6e
  405ca8:	push   cs
  405ca9:	or     eax,0xe1165a0
  405cae:	fwait
  405caf:	pop    ebp
  405cb0:	adc    DWORD PTR [esi],ecx
  405cb2:	xchg   ebx,eax
  405cb3:	jne    0x405cc6
  405cb5:	push   cs
  405cb6:	stos   DWORD PTR es:[edi],eax
  405cb7:	ins    DWORD PTR es:[edi],dx
  405cb8:	adc    DWORD PTR [esi],ecx
  405cba:	mov    ds:0x9b0e1165,eax
  405cbf:	pop    ebp
  405cc0:	adc    DWORD PTR [esi],ecx
  405cc2:	add    BYTE PTR [eax],al
  405cc4:	xchg   ebx,eax
  405cc5:	jne    0x405cd4
  405cc7:	push   cs
  405cc8:	stos   DWORD PTR es:[edi],eax
  405cc9:	ins    DWORD PTR es:[edi],dx
  405cca:	or     eax,0xd65a30e
  405ccf:	push   cs
  405cd0:	fwait
  405cd1:	pop    ebp
  405cd2:	or     eax,0xd75930e
  405cd7:	push   cs
  405cd8:	stos   DWORD PTR es:[edi],eax
  405cd9:	ins    DWORD PTR es:[edi],dx
  405cda:	or     eax,0xd65a30e
  405cdf:	push   cs
  405ce0:	fwait
  405ce1:	pop    ebp
  405ce2:	or     eax,0xd75930e
  405ce7:	push   cs
  405ce8:	stos   DWORD PTR es:[edi],eax
  405ce9:	ins    DWORD PTR es:[edi],dx
  405cea:	or     eax,0xe64a30e
  405cef:	setp   BYTE PTR [esi+ecx*1+0xf]
  405cf4:	xchg   edx,eax
  405cf5:	je     0x405d05
  405cf7:	rsm    
  405cf9:	ins    BYTE PTR es:[edi],dx
  405cfa:	push   cs
  405cfb:	cpuid  
  405cfd:	fs push cs
  405cff:	setp   BYTE PTR [esi+ecx*1+0xf]
  405d04:	xchg   edx,eax
  405d05:	add    dh,dh
  405d07:	push   cs
  405d08:	stos   BYTE PTR es:[edi],al
  405d09:	or     eax,0xda20eee
  405d0e:	out    0xe,al
  405d10:	call   0xf60d:0x920ede0d
  405d17:	push   cs
  405d18:	stos   BYTE PTR es:[edi],al
  405d19:	or     ebp,esi
  405d1b:	push   cs
  405d1c:	mov    ds:0x9a0ee60b,al
  405d21:	or     ebx,esi
  405d23:	push   cs
  405d24:	xchg   edx,eax
  405d25:	or     esi,esi
  405d27:	push   cs
  405d28:	add    BYTE PTR [eax],al
  405d2a:	stos   BYTE PTR es:[edi],al
  405d2b:	or     ebp,esi
  405d2d:	push   cs
  405d2e:	mov    ds:0x8d03e90b,al
  405d33:	adc    ebx,edi
  405d35:	adc    DWORD PTR [esi-0x4ee822f1],ecx
  405d3b:	push   ss
  405d3c:	aam    0x18
  405d3e:	test   al,0x15
  405d40:	fist   WORD PTR ds:0x15d714b3
  405d46:	stos   DWORD PTR es:[edi],eax
  405d47:	adc    al,0xfe
  405d49:	push   ss
  405d4a:	xchg   edx,eax
  405d4b:	adc    esi,esi
  405d4d:	push   ss
  405d4e:	mov    dl,BYTE PTR [ebx]
  405d50:	icebp  
  405d51:	sbb    eax,DWORD PTR [ebp-0x7ae40ee6]
  405d57:	sbb    ah,cl
  405d59:	sbb    esi,DWORD PTR [ebp-0x4ae41ee6]
  405d5f:	sbb    dl,al
  405d61:	sbb    al,0xa4
  405d63:	sbb    eax,edx
  405d65:	sbb    al,0xa4
  405d67:	sbb    DWORD PTR [eax],eax
  405d69:	sbb    eax,0x1d001994
  405d6e:	xchg   esp,eax
  405d6f:	sbb    ebx,esi
  405d71:	sbb    DWORD PTR [edi-0x78e60ce8],eax
  405d77:	sbb    bl,ah
  405d79:	sbb    DWORD PTR [edi-0x48e61ce8],esi
  405d7f:	sbb    BYTE PTR [eax],al
  405d81:	shl    DWORD PTR [eax+ebx*1+0x18a4d31a],cl
  405d88:	sbb    al,BYTE PTR [ebx]
  405d8a:	xchg   edi,eax
  405d8b:	sbb    BYTE PTR [edx],bl
  405d8d:	add    eax,DWORD PTR [eax]
  405d8f:	add    BYTE PTR [edi-0x780de5e8],dl
  405d95:	pop    ss
  405d96:	sbb    esi,edx
  405d98:	xchg   DWORD PTR [edi],edx
  405d9a:	sbb    esp,edx
  405d9c:	mov    bh,0x17
  405d9e:	sbb    esp,edx
  405da0:	mov    bh,0x17
  405da2:	sbb    edx,edx
  405da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da5:	pop    ss
  405da6:	sbb    edx,edx
  405da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da9:	pop    ss
  405daa:	sbb    eax,DWORD PTR [edx]
  405dac:	xchg   esi,eax
  405dad:	pop    ss
  405dae:	sbb    eax,DWORD PTR [edx]
  405db0:	xchg   esi,eax
  405db1:	pop    ss
  405db2:	sbb    esi,ebp
  405db4:	mov    bl,BYTE PTR [esi]
  405db6:	sbb    al,0xed
  405db8:	sbb    BYTE PTR [esi],0x1c
  405dbb:	in     eax,0xba
  405dbd:	push   ds
  405dbe:	sbb    al,0xdd
  405dc0:	mov    dl,0x1e
  405dc2:	sbb    al,0xd5
  405dc4:	stos   BYTE PTR es:[edi],al
  405dc5:	push   ds
  405dc6:	sbb    al,0xcd
  405dc8:	mov    ds:0x7d051c1e,al
  405dcd:	push   ds
  405dce:	sbb    al,0xfd
  405dd0:	xchg   edx,eax
  405dd1:	push   ds
  405dd2:	sbb    al,0xf5
  405dd4:	mov    bl,BYTE PTR [esi]
  405dd6:	sbb    al,0xed
  405dd8:	sbb    BYTE PTR [esi],0x1c
  405ddb:	in     eax,0xba
  405ddd:	push   ds
  405dde:	sbb    al,0xdd
  405de0:	mov    dl,0x1e
  405de2:	sbb    al,0xd5
  405de4:	stos   BYTE PTR es:[edi],al
  405de5:	push   ds
  405de6:	sbb    al,0xcd
  405de8:	mov    ds:0xbd051c1e,al
  405ded:	push   ds
  405dee:	sbb    al,0xfd
  405df0:	xchg   edx,eax
  405df1:	push   ds
  405df2:	sbb    al,0xf4
  405df4:	add    BYTE PTR [eax],al
  405df6:	mov    ebx,DWORD PTR ds:0x1d83ec1d
  405dfc:	sbb    eax,0x1d1bc100
  405e01:	sbb    eax,0x1d1d1bf1
  405e06:	icebp  
  405e07:	sbb    ebx,DWORD PTR ds:0x1d1bd11d
  405e0d:	sbb    eax,0x1d1d1ba1
  405e12:	mov    cl,0x1b
  405e14:	sbb    eax,0x1d1bb11d
  405e19:	sbb    eax,0x1d1d1bb1
  405e1e:	sbb    DWORD PTR [ecx],0x19711d1d
  405e24:	sbb    eax,0x1d19711d
  405e29:	sbb    eax,0x1d1d1951
  405e2e:	mov    eax,ds:0x711d1d19
  405e33:	sbb    DWORD PTR ds:0x205741d,ebx
  405e39:	add    edi,DWORD PTR [eax+0x1]
  405e3c:	push   es
  405e3d:	pop    es
  405e3e:	dec    esp
  405e3f:	push   cs
  405e40:	or     DWORD PTR [ecx],ecx
  405e42:	dec    esi
  405e43:	or     al,0xb
  405e45:	or     eax,DWORD PTR [eax+0xa]
  405e48:	or     al,0xc
  405e4a:	popa   
  405e4b:	or     DWORD PTR ds:0xe08320d,ecx
  405e51:	push   cs
  405e52:	inc    ebx
  405e53:	pop    es
  405e54:	(bad)  
  405e55:	(bad)  
  405e57:	push   ss
  405e58:	adc    BYTE PTR [eax],dl
  405e5a:	add    BYTE PTR [eax],al
  405e5c:	and    al,0x16
  405e5e:	adc    BYTE PTR [eax],dl
  405e60:	cmc    
  405e61:	adc    al,0x11
  405e63:	adc    ebp,esi
  405e65:	adc    al,0x11
  405e67:	adc    esi,esp
  405e69:	adc    edx,DWORD PTR [edx]
  405e6b:	adc    ah,dh
  405e6d:	adc    edx,DWORD PTR [edx]
  405e6f:	adc    dh,bh
  405e71:	adc    dl,BYTE PTR [ebx]
  405e73:	adc    esi,edi
  405e75:	adc    dl,BYTE PTR [ebx]
  405e77:	adc    ebx,DWORD PTR [ebp-0x76ebe889]
  405e7d:	outs   dx,DWORD PTR ds:[esi]
  405e7e:	pop    ss
  405e7f:	adc    al,0xb1
  405e81:	push   edi
  405e82:	pop    ss
  405e83:	adc    al,0xa9
  405e85:	dec    edi
  405e86:	pop    ss
  405e87:	adc    al,0xb1
  405e89:	push   esi
  405e8a:	push   ss
  405e8b:	adc    eax,0x15164ea8
  405e90:	nop
  405e91:	jbe    0x405ea9
  405e93:	adc    eax,0x15166e88
  405e98:	nop
  405e99:	jns    0x405eb0
  405e9b:	push   ss
  405e9c:	mov    esi,DWORD PTR [ecx+0x15]
  405e9f:	push   ss
  405ea0:	mov    bl,0x59
  405ea2:	adc    eax,0x1551ab16
  405ea7:	push   ss
  405ea8:	mov    bl,0x58
  405eaa:	adc    al,0x17
  405eac:	stos   BYTE PTR es:[edi],al
  405ead:	push   eax
  405eae:	adc    al,0x17
  405eb0:	xchg   edx,eax
  405eb1:	js     0x405ec7
  405eb3:	pop    ss
  405eb4:	mov    dh,BYTE PTR [eax+0x14]
  405eb7:	pop    ss
  405eb8:	xchg   edx,eax
  405eb9:	jae    0x405ed6
  405ebb:	sbb    BYTE PTR [ebp+0x181b73],al
  405ec1:	add    BYTE PTR [ebp-0x4ae7e49d],dh
  405ec7:	arpl   WORD PTR [ebx],bx
  405ec9:	sbb    BYTE PTR [ebp-0x5ae7e4ad],ah
  405ecf:	push   ebx
  405ed0:	sbb    ebx,DWORD PTR [eax]
  405ed2:	xchg   ebp,eax
  405ed3:	add    ebx,DWORD PTR [eax+ebx*1]
  405ed6:	xchg   ebp,eax
  405ed7:	add    ebx,DWORD PTR [eax+ebx*1]
  405eda:	test   DWORD PTR [edx+0x1c],esi
  405edd:	sbb    DWORD PTR [edx+esi*2+0x62b4191c],eax
  405ee4:	sbb    al,0x19
  405ee6:	mov    ah,0x62
  405ee8:	sbb    al,0x19
  405eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eeb:	push   edx
  405eec:	sbb    al,0x19
  405eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eef:	push   edx
  405ef0:	sbb    al,0x19
  405ef2:	xchg   esp,eax
  405ef3:	add    al,BYTE PTR [eax]
  405ef5:	sbb    eax,0x1d001b94
  405efa:	test   BYTE PTR [ebx],bl
  405efc:	repz sbb eax,0x1df31c87
  405f02:	mov    bh,0x1c
  405f04:	jecxz  0x405f23
  405f06:	mov    bh,0x1c
  405f08:	jecxz  0x405f27
  405f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f0b:	sbb    al,0xd3
  405f0d:	sbb    eax,0x1dd31ca7
  405f12:	xchg   edi,eax
  405f13:	sbb    al,0x3
  405f15:	push   ds
  405f16:	xchg   edi,eax
  405f17:	sbb    al,0x3
  405f19:	push   ds
  405f1a:	xchg   DWORD PTR [edx+esi*8],ebx
  405f1d:	push   ds
  405f1e:	xchg   BYTE PTR ds:0x1bb61ef2,bl
  405f24:	loop   0x405f44
  405f26:	add    BYTE PTR [eax],al
  405f28:	mov    dh,0x1b
  405f2a:	loop   0x405f4a
  405f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2d:	sbb    edx,edx
  405f2f:	push   ds
  405f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f31:	sbb    edx,edx
  405f33:	push   ds
  405f34:	xchg   esi,eax
  405f35:	sbb    eax,DWORD PTR [edx]
  405f37:	pop    ds
  405f38:	xchg   esi,eax
  405f39:	sbb    eax,DWORD PTR [edx]
  405f3b:	pop    ds
  405f3c:	xchg   BYTE PTR [esi],dl
  405f3e:	jmp    0xe842fc46
  405f43:	add    ebx,DWORD PTR [ebp-0x62fc14fe]
  405f49:	add    ch,dl
  405f4b:	add    ebx,DWORD PTR [ebp-0x62fc12fe]
  405f51:	add    ah,ah
  405f53:	add    ebx,DWORD PTR [ebp-0x62fc10fe]
  405f59:	add    ah,dh
  405f5b:	add    ebx,DWORD PTR [ebp-0x62fc1efe]
  405f61:	add    ah,bl
  405f63:	add    ebx,DWORD PTR [ebp-0x62fc0afe]
  405f69:	add    ch,bh
  405f6b:	add    ebx,DWORD PTR [ebp-0x6126fffe]
  405f71:	add    al,BYTE PTR [eax]
  405f73:	aad    0x9e
  405f75:	add    al,BYTE PTR [eax]
  405f77:	add    DWORD PTR [ecx-0x6102fffe],ebx
  405f7d:	add    al,BYTE PTR [eax]
  405f7f:	leave  
  405f80:	sahf   
  405f81:	add    al,BYTE PTR [eax]
  405f83:	rcr    DWORD PTR [esi-0x6146fffe],0x2
  405f8a:	add    cl,al
  405f8c:	add    BYTE PTR [eax],al
  405f8e:	sahf   
  405f8f:	add    al,BYTE PTR [eax]
  405f91:	sub    DWORD PTR [ecx-0x5ee6fffe],ebx
  405f97:	add    al,BYTE PTR [eax]
  405f99:	leave  
  405f9a:	sahf   
  405f9b:	add    al,BYTE PTR [eax]
  405f9d:	fstp   DWORD PTR [esi-0x6196fffe]
  405fa3:	add    al,BYTE PTR [eax]
  405fa5:	mov    DWORD PTR [esi-0x61d6fffe],ebx
  405fab:	add    al,BYTE PTR [eax]
  405fad:	dec    ecx
  405fae:	sahf   
  405faf:	add    al,BYTE PTR [eax]
  405fb1:	jmp    0xe9406254
  405fb6:	sahf   
  405fb7:	add    al,BYTE PTR [eax]
  405fb9:	jmp    0xe840625c
  405fbe:	sahf   
  405fbf:	add    al,BYTE PTR [eax]
  405fc1:	jmp    0x405f61
  405fc3:	add    al,BYTE PTR [eax]
  405fc5:	jmp    0x29e:0xed00029e
  405fcc:	add    bh,ah
  405fce:	sahf   
  405fcf:	add    al,BYTE PTR [eax]
  405fd1:	loope  0x405f71
  405fd3:	add    al,BYTE PTR [eax]
  405fd5:	fstp   QWORD PTR [esi-0x6106fffe]
  405fdb:	add    al,BYTE PTR [eax]
  405fdd:	add    DWORD PTR [ecx-0x66f6fffe],esp
  405fe3:	add    al,BYTE PTR [eax]
  405fe5:	sbb    DWORD PTR [ecx-0x3bfffffe],esp
  405feb:	(bad)  
  405fec:	(bad)  
  405fed:	call   DWORD PTR [esi+edi*8-0x1]
  405ff1:	inc    DWORD PTR [eax]
  405ff3:	add    BYTE PTR [esi+edi*8-0x1],dh
  405ff7:	inc    DWORD PTR [esi+edi*8-0x1]
  405ffb:	inc    DWORD PTR [esp+eax*1]
  405ffe:	add    BYTE PTR [eax],al
  406000:	je     0x406005
  406002:	add    BYTE PTR [eax],al
  406004:	hlt    
  406005:	cld    
  406006:	(bad)  
  406007:	inc    esp
  406009:	std    
  40600a:	(bad)  
  40600b:	inc    esp
  40600d:	jbe    0x40600e
  40600f:	push   DWORD PTR [eax+eax*1+0xab40000]
  406016:	add    BYTE PTR [eax],al
  406018:	(bad)  
  406019:	(bad)  
  40601a:	(bad)  
  40601b:	inc    esp
  40601d:	adc    al,BYTE PTR [eax]
  40601f:	add    BYTE PTR [edx+ebx*1+0x22b40000],dh
  406026:	add    BYTE PTR [eax],al
  406028:	test   BYTE PTR [edx],dh
  40602a:	add    BYTE PTR [eax],al
  40602c:	test   BYTE PTR [edx-0x1],al
  40602f:	push   DWORD PTR [edx+eiz*2-0x1]
  406033:	push   DWORD PTR [eax]
  406035:	gs aas 
  406037:	add    BYTE PTR [eax+0x65],al
  40603a:	aas    
  40603b:	add    BYTE PTR [eax+0x65],al
  40603e:	aas    
  40603f:	add    BYTE PTR [eax+0x65],al
  406042:	aas    
  406043:	add    BYTE PTR [eax],dh
  406045:	gs aas 
  406047:	add    BYTE PTR [eax],al
  406049:	gs aas 
  40604b:	add    BYTE PTR [eax],al
  40604d:	gs aas 
  40604f:	add    BYTE PTR [eax],al
  406051:	gs aas 
  406053:	add    al,dh
  406055:	fs aas 
  406057:	add    BYTE PTR [eax],al
  406059:	add    BYTE PTR [eax],al
  40605b:	gs aas 
  40605d:	add    BYTE PTR [edi+0x2],al
  406060:	add    al,0x0
  406062:	inc    ecx
  406063:	add    al,BYTE PTR [esi]
  406065:	add    BYTE PTR [ebp-0x62f7fc9c],bl
  40606b:	bound  eax,QWORD PTR [ebx]
  40606d:	or     bl,BYTE PTR [ebp-0x62f2fc90]
  406073:	add    edx,DWORD PTR fs:[ecx]
  406076:	popf   
  406077:	pop    eax
  406078:	add    edx,DWORD PTR [edi]
  40607a:	popf   
  40607b:	push   eax
  40607c:	add    ebx,DWORD PTR [edi]
  40607e:	popf   
  40607f:	dec    eax
  406080:	add    ebp,DWORD PTR [ebx]
  406082:	popf   
  406083:	pop    eax
  406084:	add    edi,DWORD PTR [ebx]
  406086:	popf   
  406087:	sub    BYTE PTR [ebx+edx*2],al
  40608a:	popf   
  40608b:	or     BYTE PTR [ebx+esi*2],al
  40608e:	popf   
  40608f:	call   0xa8de0396
  406094:	add    esp,ebx
  406096:	popf   
  406097:	imul   eax,DWORD PTR [edx],0x36b9d00
  40609d:	add    BYTE PTR [ebp-0x62effc85],bl
  4060a3:	jnp    0x4060a8
  4060a5:	adc    BYTE PTR [ebp-0x62effc85],bl
  4060ab:	jnp    0x4060b0
  4060ad:	adc    BYTE PTR [ebp-0x62eefca6],bl
  4060b3:	pop    edx
  4060b4:	add    edx,DWORD PTR [ecx]
  4060b6:	popf   
  4060b7:	pop    ecx
  4060b8:	add    edx,DWORD PTR [edx]
  4060ba:	popf   
  4060bb:	pop    ecx
  4060bc:	add    edx,DWORD PTR [edx]
  4060be:	add    BYTE PTR [eax],al
  4060c0:	popf   
  4060c1:	js     0x4060c6
  4060c3:	adc    ebx,DWORD PTR [ebp-0x62ecfc88]
  4060c9:	ja     0x4060ce
  4060cb:	adc    al,0x9d
  4060cd:	outs   dx,DWORD PTR ds:[esi]
  4060ce:	add    edx,DWORD PTR [ebx*4-0x62eafcaa]
  4060d5:	dec    esi
  4060d6:	add    edx,DWORD PTR ds:0x49035b9d
  4060dc:	popf   
  4060dd:	sub    BYTE PTR [ebx],al
  4060df:	add    BYTE PTR [ebp-0x60fc17fe],bl
  4060e5:	add    ch,dl
  4060e7:	add    ebx,DWORD PTR [ecx-0x5dfc13fe]
  4060ed:	add    ah,al
  4060ef:	add    esp,DWORD PTR [eax-0x5bfc27fe]
  4060f5:	add    cl,BYTE PTR [eax]
  4060f7:	add    al,0xcc
  4060f9:	add    ch,BYTE PTR [eax]
  4060fb:	add    al,0x7c
  4060fd:	add    ch,BYTE PTR [eax+0x4]
  406100:	fadd   QWORD PTR [ecx]
  406102:	call   0xe8437d0b
  406107:	add    DWORD PTR [ecx+eax*1-0x3620018],ebx
  40610e:	out    0xb,eax
  406110:	pushf  
  406111:	push   es
  406112:	call   0xe85afd2a
  406117:	and    ebx,DWORD PTR [edx+esi*1-0x1d623c18]
  40611e:	call   0xf942fe26
  406123:	add    eax,DWORD PTR [eax]
  406125:	add    BYTE PTR [ebp-0x72fc06fe],cl
  40612b:	add    bh,al
  40612d:	add    ebp,DWORD PTR [edx+eax*1+0x2af03fb]
  406134:	fiadd  DWORD PTR [ebx]
  406136:	scas   al,BYTE PTR es:[edi]
  406137:	add    dl,ch
  406139:	add    ebp,DWORD PTR [ecx-0x6ffc23fe]
  40613f:	add    dl,bh
  406141:	add    ecx,DWORD PTR [ebx-0x6dfc01fe]
  406147:	add    al,BYTE PTR [ecx]
  406149:	add    al,0x85
  40614b:	add    dh,al
  40614d:	add    esi,DWORD PTR [edx+eax*1+0x2b703f3]
  406154:	loop   0x406159
  406156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406157:	add    bl,ch
  406159:	add    esp,DWORD PTR [ecx-0x612bfffe]
  40615f:	adc    eax,0xc29ea900
  406164:	dec    DWORD PTR [eax]
  406166:	or     al,0xc3
  406168:	call   FWORD PTR [eax]
  40616a:	adc    al,bl
  40616c:	jmp    DWORD PTR [eax+esi*1-0x3d]
  406170:	(bad)  
  406171:	cmp    esp,DWORD PTR [edx]
  406173:	ret    
  406174:	call   FWORD PTR [ecx]
  406176:	and    eax,0x9ee8ffc3
  40617b:	add    al,BYTE PTR [eax]
  40617d:	mov    BYTE PTR [ecx-0x6674ff02],ah
  406183:	pop    edx
  406184:	add    cl,BYTE PTR [edx-0x5f]
  406187:	rol    DWORD PTR [eax],0x44
  40618a:	add    BYTE PTR [eax],al
  40618c:	cdq    
  40618d:	xor    eax,0xd8a14f01
  406192:	add    BYTE PTR [eax-0x67],al
  406195:	loop   0x406197
  406197:	push   ebx
  406198:	mov    eax,ds:0x995200d4
  40619d:	fiadd  WORD PTR [eax]
  40619f:	inc    ebp
  4061a0:	mov    eax,ds:0x993f00f9
  4061a5:	cmc    
  4061a6:	add    BYTE PTR [esi-0x67ff085f],dl
  4061ac:	cdq    
  4061ad:	std    
  4061ae:	add    BYTE PTR [ebx-0x65fda85f],bl
  4061b4:	cdq    
  4061b5:	rol    BYTE PTR [eax],0x7c
  4061b8:	mov    eax,ds:0x99770134
  4061bd:	xlat   BYTE PTR ds:[ebx]
  4061be:	add    BYTE PTR [esi-0x5f],bh
  4061c1:	cmp    eax,DWORD PTR [edx]
  4061c3:	jo     0x40615e
  4061c5:	loope  0x4061c7
  4061c7:	arpl   WORD PTR [ecx-0x669dff2d],sp
  4061cd:	fld    QWORD PTR [eax]
  4061cf:	push   ebp
  4061d0:	mov    eax,ds:0x994c00f8
  4061d5:	push   ebp
  4061d6:	add    al,BYTE PTR [eax]
  4061d8:	loop   0x4061d8
  4061da:	jge    0x4061dd
  4061dc:	cmp    esi,0x7b
  4061df:	add    DWORD PTR [esi+edi*8-0x178fead],eax
  4061e6:	add    DWORD PTR [ecx],eax
  4061e8:	stc    
  4061e9:	(bad)  
  4061ea:	cmp    BYTE PTR [ecx],al
  4061ec:	cli    
  4061ed:	inc    BYTE PTR ds:0x3c000001
  4061f3:	dec    DWORD PTR [ebx]
  4061f5:	add    DWORD PTR [esi],edi
  4061f7:	call   DWORD PTR [edi]
  4061f9:	add    DWORD PTR [eax-0x1],edx
  4061fc:	sbb    DWORD PTR [ecx],eax
  4061fe:	xor    edi,edi
  406200:	or     eax,0xfff1401
  406205:	add    DWORD PTR ds:0x260142ff,edx
  40620b:	inc    DWORD PTR [esi+0x1]
  40620e:	sub    edi,edi
  406210:	dec    edi
  406211:	add    DWORD PTR [edi+edi*8],ecx
  406214:	push   edi
  406215:	add    DWORD PTR ds:0xff016dff,ecx
  40621b:	(bad)  
  40621c:	outs   dx,DWORD PTR ds:[esi]
  40621d:	add    DWORD PTR [edx],esp
  40621f:	jmp    DWORD PTR [ecx+0x1]
  406222:	and    al,0xff
  406224:	push   esp
  406225:	add    DWORD PTR [edi],esp
  406227:	inc    DWORD PTR [edx]
  406229:	add    DWORD PTR [ecx-0x1],ebx
  40622c:	cmp    DWORD PTR [ecx],eax
  40622e:	pop    edx
  40622f:	inc    DWORD PTR [esi]
  406231:	add    esp,ebx
  406233:	add    eax,0x5de010d
  406238:	sbb    DWORD PTR [ecx],eax
  40623a:	lock add eax,0x5d3011b
  406240:	lmsw   WORD PTR [ebp+eax*1+0x5b50111]
  406248:	inc    esp
  406249:	add    DWORD PTR [esi-0x76feb7fb],eax
  40624f:	add    eax,0x139d0151
  406254:	add    ebx,DWORD PTR [ecx+0x0]
  406257:	add    BYTE PTR [edx+edx*1+0x49c6f03],bl
  40625e:	add    esi,DWORD PTR [ecx-0x64]
  406261:	jno    0x406265
  406263:	arpl   WORD PTR [eax+edi*2-0x456026fe],bx
  40626a:	add    DWORD PTR [esi],esp
  40626c:	pushf  
  40626d:	add    DWORD PTR [ecx],0x1929c24
  406273:	xor    BYTE PTR [esp+eax*4-0x1063e1ff],bl
  40627a:	add    BYTE PTR [esp+ebx*4],dh
  40627d:	jmp    0x2500:0xf99c2700
  406284:	pushf  
  406285:	repnz add BYTE PTR [ecx],dh
  406288:	pushf  
  406289:	hlt    
  40628a:	add    BYTE PTR [edi],bl
  40628c:	pushf  
  40628d:	out    0x0,eax
  40628f:	xor    eax,0xa01a69c
  406294:	pushf  
  406295:	mov    eax,ds:0xb69c0801
  40629a:	add    DWORD PTR [eax],esp
  40629c:	pushf  
  40629d:	mov    ds:0x8e9c1c01,eax
  4062a2:	add    DWORD PTR [esp+ebx*4-0x67],ebp
  4062a6:	add    DWORD PTR [esp+ebx*4-0x7a],ebx
  4062aa:	add    DWORD PTR [ebx],ecx
  4062ac:	pushf  
  4062ad:	rol    DWORD PTR [eax],0x9
  4062b0:	pushf  
  4062b1:	(bad)  
  4062b2:	add    BYTE PTR [ecx],ah
  4062b4:	pushf  
  4062b5:	rol    DWORD PTR [eax],cl
  4062b7:	sbb    eax,0x6d00be9c
  4062bc:	add    BYTE PTR [eax],al
  4062be:	pushf  
  4062bf:	leave  
  4062c0:	add    BYTE PTR [ebp-0x64],bl
  4062c3:	jge    0x4062c5
  4062c5:	cmp    BYTE PTR [esp+edi*2-0x7963aa00],bl
  4062cc:	add    BYTE PTR [eax],ch
  4062ce:	pushf  
  4062cf:	add    cl,BYTE PTR [edi+0x0]
  4062d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d3:	add    edx,DWORD PTR [ebx+0x0]
  4062d6:	scas   eax,DWORD PTR es:[edi]
  4062d7:	add    eax,DWORD PTR [edx+0x0]
  4062da:	jg     0x4062df
  4062dc:	cmp    eax,0x3a03c300
  4062e1:	add    dl,ch
  4062e3:	add    esi,DWORD PTR [eax+eax*1]
  4062e6:	test   BYTE PTR [ebx],al
  4062e8:	aas    
  4062e9:	add    BYTE PTR [ecx+0x3],dh
  4062ec:	xor    eax,DWORD PTR [eax]
  4062ee:	mov    es,WORD PTR [ebx]
  4062f0:	mov    ds:0x9d037e07,al
  4062f5:	pop    es
  4062f6:	add    BYTE PTR [ebx],0x94
  4062f9:	pop    es
  4062fa:	add    ecx,DWORD PTR [bp+0x5607]
  4062ff:	add    ebp,DWORD PTR [ecx-0x59fc62f9]
  406305:	pop    es
  406306:	retf   
  406307:	add    esp,DWORD PTR [ebp-0x61fc74f9]
  40630d:	pop    es
  40630e:	mov    bh,0x3
  406310:	mov    eax,0xbb035807
  406315:	pop    es
  406316:	imul   eax,DWORD PTR [ebx],0x38b07ba
  40631c:	mov    al,0x7
  40631e:	dec    edi
  40631f:	add    esp,DWORD PTR [edi+eax*1+0x3350000]
  406326:	lahf   
  406327:	pop    es
  406328:	inc    edi
  406329:	add    ecx,DWORD PTR [ecx-0x79fc63f9]
  40632f:	pop    es
  406330:	jp     0x406335
  406332:	push   ebp
  406333:	pop    es
  406334:	mov    al,BYTE PTR [ebx]
  406336:	dec    esi
  406337:	pop    es
  406338:	mov    BYTE PTR [ecx],0x58
  40633b:	pop    es
  40633c:	fild   DWORD PTR [ecx]
  40633e:	pop    ebx
  40633f:	pop    es
  406340:	fadd   DWORD PTR [ecx]
  406342:	cmp    al,BYTE PTR [edi]
  406344:	retf   0x4001
  406347:	pop    es
  406348:	out    dx,al
  406349:	add    DWORD PTR [eax],eax
  40634b:	xor    al,0x9a
  40634d:	fld    DWORD PTR [eax]
  40634f:	das    
  406350:	mov    ds:0x9aa700db,al
  406355:	xor    BYTE PTR [eax],ah
  406357:	dec    eax
  406358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406359:	add    al,0x30
  40635b:	dec    ebx
  40635c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40635d:	(bad)  
  40635e:	das    
  40635f:	dec    edx
  406360:	xchg   ebp,eax
  406361:	std    
  406362:	das    
  406363:	dec    ebp
  406364:	xchg   ebp,eax
  406365:	add    DWORD PTR [eax],esi
  406367:	inc    esp
  406368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406369:	imul   esi,DWORD PTR [eax],0x4f
  40636c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636d:	je     0x40639f
  40636f:	inc    esi
  406370:	xchg   ebp,eax
  406371:	mov    eax,ds:0xa39a9130
  406376:	xor    BYTE PTR [eax-0x7ccf5a5e],dl
  40637c:	call   0x3099:0xa28230a7
  406383:	xchg   ebp,eax
  406384:	call   0xa200:0x8c3063
  40638b:	xor    BYTE PTR gs:[edi+0x7e30679a],al
  406392:	mov    ds:0x9a593043,al
  406397:	outs   dx,BYTE PTR ds:[esi]
  406398:	xor    BYTE PTR [eax-0x5e],bl
  40639b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40639c:	xor    BYTE PTR [ebx-0x66],bl
  40639f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a0:	xor    BYTE PTR [edx-0x5e],bl
  4063a3:	test   al,0x30
  4063a5:	cmp    eax,0x34309a9a
  4063aa:	mov    ds:0x9a3f309c,al
  4063af:	fwait
  4063b0:	xor    BYTE PTR [esi],dh
  4063b2:	mov    ds:0x9aa1309d,al
  4063b7:	lahf   
  4063b8:	xor    BYTE PTR [eax-0x6ccf4e5e],ah
  4063be:	call   0x30b5:0xa29230b3
  4063c5:	add    BYTE PTR [eax],bl
  4063c7:	pop    es
  4063c8:	mov    bh,0x30
  4063ca:	stc    
  4063cb:	pop    es
  4063cc:	mov    ecx,0xbb07ea30
  4063d1:	xor    bl,bh
  4063d3:	pop    es
  4063d4:	mov    ebp,0xbf07b430
  4063d9:	xor    BYTE PTR [ebp-0x79cf3ef9],al
  4063df:	pop    es
  4063e0:	les    esi,FWORD PTR [eax]
  4063e2:	ja     0x4063eb
  4063e4:	(bad)  
  4063e5:	xor    BYTE PTR [eax+0x7],dh
  4063e8:	enter  0x8130,0x7
  4063ec:	retf   0x30
  4063ef:	add    BYTE PTR [edx-0x7ccf34f9],al
  4063f5:	pop    es
  4063f6:	int3   
  4063f7:	xor    ah,ch
  4063f9:	stc    
  4063fa:	int3   
  4063fb:	xor    BYTE PTR [ebp-0x6],cl
  4063fe:	int    0x30
  406400:	ds cli 
  406402:	into   
  406403:	xor    BYTE PTR [edi],bh
  406405:	cli    
  406406:	shl    DWORD PTR [eax],1
  406408:	dec    eax
  406409:	cli    
  40640a:	aam    0x30
  40640c:	dec    ecx
  40640d:	cli    
  40640e:	xlat   BYTE PTR ds:[ebx]
  40640f:	xor    BYTE PTR [edx],bh
  406411:	cli    
  406412:	fidiv  DWORD PTR [eax]
  406414:	or     edi,edx
  406416:	fnsave [eax]
  406418:	and    al,0xfa
  40641a:	fidiv  WORD PTR [eax]
  40641c:	adc    eax,0x1630dffa
  406421:	cli    
  406422:	loopne 0x406454
  406424:	pop    es
  406425:	cli    
  406426:	loope  0x406458
  406428:	and    dl,bh
  40642a:	jecxz  0x40645c
  40642c:	adc    edx,edi
  40642e:	in     eax,0x30
  406430:	adc    bh,dl
  406432:	out    0x30,eax
  406434:	adc    edi,edx
  406436:	call   0xea3ac06b
  40643b:	xor    ch,bl
  40643d:	cli    
  40643e:	jmp    0xcdec:0x8319d30
  406445:	xor    BYTE PTR [eax],cl
  406447:	in     eax,dx
  406448:	int    0x27
  40644a:	or     bh,ch
  40644c:	lods   eax,DWORD PTR ds:[esi]
  40644d:	push   cs
  40644e:	or     bl,dh
  406450:	lods   eax,DWORD PTR ds:[esi]
  406451:	adc    eax,0x9b08
  406456:	lods   eax,DWORD PTR ds:[esi]
  406457:	cld    
  406458:	pop    es
  406459:	pushf  
  40645a:	lods   eax,DWORD PTR ds:[esi]
  40645b:	xlat   BYTE PTR ds:[ebx]
  40645c:	push   es
  40645d:	or     al,0xa3
  40645f:	loopne 0x406467
  406461:	sbb    ebx,DWORD PTR [ebx-0x5ce0f92c]
  406467:	sbb    al,BYTE PTR [edi]
  406469:	and    DWORD PTR [ebx-0x5cddf8e7],ebx
  40646f:	sbb    BYTE PTR [edi],al
  406471:	and    ebx,DWORD PTR [ebx-0x5cdbf8e1]
  406477:	es pop es
  406479:	and    eax,0x26069d9b
  40647e:	mov    ds:0x9b2706a4,eax
  406483:	mov    ds:0xa2a32806,eax
  406488:	push   es
  406489:	sub    DWORD PTR [ebx-0x5cd5f94f],ebx
  40648f:	mov    al,0x6
  406491:	sub    ebx,DWORD PTR [ebx-0x5cd3f959]
  406497:	mov    es,WORD PTR [esi]
  406499:	sub    eax,0x2e06b59b
  40649e:	mov    ds:0x9b2f069c,eax
  4064a3:	stos   DWORD PTR es:[edi],eax
  4064a4:	push   es
  4064a5:	xor    BYTE PTR [ebx-0x64cef956],ah
  4064ab:	mov    DWORD PTR [esi],eax
  4064ad:	xor    ah,BYTE PTR [ebx-0x64ccf978]
  4064b3:	pop    DWORD PTR [esi]
  4064b5:	xor    al,0xa3
  4064b7:	xchg   esi,eax
  4064b8:	push   es
  4064b9:	xor    eax,0x29b0000
  4064be:	aas    
  4064bf:	push   es
  4064c0:	rol    DWORD PTR [esi+esi*1],cl
  4064c3:	push   es
  4064c4:	retf   0x3104
  4064c7:	push   es
  4064c8:	lds    eax,FWORD PTR [eax+esi*1]
  4064cb:	push   es
  4064cc:	les    eax,FWORD PTR [ebx+eiz*1]
  4064cf:	push   es
  4064d0:	mov    bh,0x4
  4064d2:	dec    ecx
  4064d3:	push   es
  4064d4:	fld    QWORD PTR [eax+ecx*2]
  4064d7:	push   es
  4064d8:	fadd   QWORD PTR [ebx+ecx*2]
  4064db:	push   es
  4064dc:	fild   WORD PTR [edx+ecx*1]
  4064df:	push   es
  4064e0:	fiadd  WORD PTR [eax*1+0xc04d906]
  4064e7:	push   es
  4064e8:	loopne 0x4064ee
  4064ea:	pop    es
  4064eb:	push   es
  4064ec:	fild   DWORD PTR [esi+ecx*1]
  4064ef:	push   es
  4064f0:	loop   0x4064f6
  4064f2:	adc    DWORD PTR [esi],eax
  4064f4:	in     eax,0x4
  4064f6:	add    BYTE PTR [esi],al
  4064f8:	aam    0x4
  4064fa:	add    eax,DWORD PTR [esi]
  4064fc:	xlat   BYTE PTR ds:[ebx]
  4064fd:	add    al,0xd2
  4064ff:	or     DWORD PTR [esi+0x4],esp
  406502:	int    0x9
  406504:	popa   
  406505:	add    al,0xc4
  406507:	or     DWORD PTR [eax+0x4],ebx
  40650a:	mov    edi,0xd6045309
  40650f:	or     DWORD PTR [edx+0x4],ebp
  406512:	mov    ecx,0xb8044d09
  406517:	or     DWORD PTR [esp+eax*1-0x45],ecx
  40651b:	or     DWORD PTR [edi+0x4],ecx
  40651e:	dec    eax
  40651f:	push   es
  406520:	add    BYTE PTR [eax],al
  406522:	outs   dx,DWORD PTR ds:[esi]
  406523:	push   es
  406524:	dec    ebx
  406525:	push   es
  406526:	outs   dx,BYTE PTR ds:[esi]
  406527:	push   es
  406528:	dec    edx
  406529:	push   es
  40652a:	ins    BYTE PTR es:[edi],dx
  40652b:	push   es
  40652c:	inc    ebp
  40652d:	push   es
  40652e:	imul   eax,DWORD PTR [esi],0x650064c
  406534:	inc    edi
  406535:	push   es
  406536:	dec    ebx
  406537:	push   es
  406538:	add    BYTE PTR [esi-0x5d],cl
  40653b:	aad    0x3
  40653d:	inc    ecx
  40653e:	fwait
  40653f:	retf   0x9003
  406542:	mov    ds:0x9b9303c9,eax
  406547:	enter  0x8203,0xa3
  40654b:	mov    DWORD PTR [ebx],0x3ce9b7d
  406551:	xchg   esp,eax
  406552:	mov    ds:0x9b8f0491,eax
  406557:	int3   
  406558:	add    eax,DWORD PTR [esi+0x7903cba3]
  40655e:	fwait
  40655f:	adc    al,0x21
  406561:	pop    eax
  406562:	mov    ds:0x9b5b0400,eax
  406567:	inc    DWORD PTR [ebx]
  406569:	pop    edx
  40656a:	mov    ds:0x9b550401,eax
  40656f:	push   es
  406570:	add    al,0x3c
  406572:	mov    ds:0x9b370405,eax
  406577:	add    al,0x4
  406579:	mov    ds:0x9b310403,eax
  40657f:	cli    
  406580:	add    esp,DWORD PTR [eax-0x5cfc0660]
  406586:	add    BYTE PTR [eax],al
  406588:	cwde   
  406589:	clc    
  40658a:	add    edx,DWORD PTR [edx-0x72fc0860]
  406590:	cwde   
  406591:	inc    BYTE PTR [ebx]
  406593:	test   BYTE PTR [eax-0x6780fb6e],ah
  406599:	cld    
  40659a:	add    esi,DWORD PTR [esi-0x60]
  40659d:	sti    
  40659e:	add    ebp,DWORD PTR [ecx-0x57fc4368]
  4065a4:	mov    al,ds:0x98ab0432
  4065a9:	xor    DWORD PTR [edx+ebp*4],eax
  4065ac:	mov    al,ds:0x98a503c4
  4065b1:	ss add al,0x0
  4065b4:	or     DWORD PTR [esi],eax
  4065b6:	xor    eax,0x4405fa04
  4065bb:	add    al,0xfb
  4065bd:	add    eax,0x5fc0433
  4065c2:	inc    ebp
  4065c3:	add    al,0xcd
  4065c5:	add    eax,0x5ce0438
  4065ca:	cmp    DWORD PTR [edi+edi*4],eax
  4065cd:	add    eax,0x5a0043a
  4065d2:	cmp    eax,DWORD PTR [ecx+esi*4]
  4065d5:	add    eax,0x5c2043c
  4065da:	cmp    eax,0x3e05c304
  4065df:	add    al,0x84
  4065e1:	add    eax,0x595043f
  4065e6:	dec    edi
  4065e7:	add    al,0x96
  4065e9:	add    eax,0x440
  4065ee:	xchg   DWORD PTR ds:0x5880441,eax
  4065f4:	inc    edx
  4065f5:	add    al,0x99
  4065f7:	add    eax,0x58a0443
  4065fc:	ss add al,0x8b
  4065ff:	add    eax,0x58c0432
  406604:	dec    esp
  406605:	add    al,0xdd
  406607:	add    ecx,DWORD PTR [ebx+0x4]
  40660a:	fiadd  WORD PTR [ebx]
  40660c:	aaa    
  40660d:	add    al,0x4f
  40660f:	add    al,0x48
  406611:	add    al,0x30
  406613:	add    al,0x4d
  406615:	add    al,0x41
  406617:	add    al,0x49
  406619:	add    al,0x12
  40661b:	add    al,0x47
  40661d:	add    al,0x13
  40661f:	add    al,0x4a
  406621:	add    al,0xd4
  406623:	add    ebp,DWORD PTR [esi]
  406625:	add    al,0x25
  406627:	add    al,0x10
  406629:	add    al,0x26
  40662b:	add    al,0x11
  40662d:	add    al,0x9d
  40662f:	js     0x406637
  406631:	es cdq 
  406633:	test   DWORD PTR [esi],eax
  406635:	adc    al,0xa1
  406637:	jle    0x40663f
  406639:	adc    eax,0x24068399
  40663e:	mov    eax,ds:0x9913067c
  406643:	add    DWORD PTR [esi],0x5d2a125
  406649:	sbb    BYTE PTR [ecx-0x5ee6fa2b],bl
  40664f:	les    eax,FWORD PTR ds:0x9900001a
  406655:	daa    
  406656:	push   es
  406657:	sbb    esp,DWORD PTR [ecx-0x66e3fa32]
  40665d:	mov    ecx,0xc0a11d05
  406662:	add    eax,0x62b991e
  406667:	pop    ds
  406668:	mov    eax,ds:0x992f060a
  40666d:	or     eax,0xca12006
  406672:	push   es
  406673:	and    DWORD PTR [ecx-0x5eddf9f1],ebx
  406679:	add    ax,0x9923
  40667d:	jno    0x406684
  40667f:	push   ss
  406680:	mov    eax,ds:0x99120568
  406685:	jae    0x40668c
  406687:	sub    al,0xa1
  406689:	bound  eax,QWORD PTR ds:0x565992b
  40668f:	pop    ss
  406690:	mov    eax,ds:0x99280554
  406695:	aaa    
  406696:	add    eax,0x53ea12d
  40669b:	sub    DWORD PTR [ecx-0x5ed8fa57],ebx
  4066a1:	mov    al,0x5
  4066a3:	sub    bl,BYTE PTR [ecx-0x6179fb86]
  4066a9:	add    cl,BYTE PTR [ebx+0x4]
  4066ac:	and    eax,0x14044a06
  4066b1:	push   es
  4066b2:	dec    ebp
  4066b3:	add    al,0x17
  4066b5:	push   es
  4066b6:	inc    esp
  4066b7:	add    al,0x0
  4066b9:	add    BYTE PTR [edi],al
  4066bb:	push   es
  4066bc:	dec    esi
  4066bd:	add    al,0x21
  4066bf:	push   es
  4066c0:	push   ecx
  4066c1:	add    al,0x1b
  4066c3:	push   es
  4066c4:	inc    eax
  4066c5:	add    al,0xf6
  4066c7:	add    eax,0x52a0442
  4066cc:	xchg   edi,eax
  4066cd:	add    al,0x18
  4066cf:	add    eax,0x22b0048e
  4066d4:	cwde   
  4066d5:	add    al,0x31
  4066d7:	add    eax,0x548049b
  4066dc:	jp     0x4066e2
  4066de:	inc    ebx
  4066df:	add    eax,0x53a0475
  4066e4:	jl     0x4066ea
  4066e6:	push   edi
  4066e7:	add    eax,0x52d0477
  4066ec:	pop    esi
  4066ed:	add    al,0x61
  4066ef:	add    eax,0x5580461
  4066f4:	push   eax
  4066f5:	add    al,0x56
  4066f7:	add    eax,0x4ed0453
  4066fc:	inc    edx
  4066fd:	add    al,0x63
  4066ff:	add    eax,0x50c0428
  406704:	sub    eax,DWORD PTR [edi+ecx*1]
  406707:	add    eax,0x52e042a
  40670c:	lods   eax,DWORD PTR ds:[esi]
  40670d:	add    ebp,DWORD PTR [ecx]
  40670f:	add    eax,0x53003a4
  406714:	scas   eax,DWORD PTR es:[edi]
  406715:	add    ebp,DWORD PTR [ebx]
  406717:	add    eax,0x51203a6
  40671c:	mov    cl,0x3
  40671e:	add    BYTE PTR [eax],al
  406720:	adc    eax,0x403b005
  406725:	add    eax,0x8c9ea300
  40672a:	add    esp,DWORD PTR [edx-0x4afc7262]
  406730:	sahf   
  406731:	xchg   BYTE PTR [ebx],al
  406733:	lods   al,BYTE PTR ds:[esi]
  406734:	sahf   
  406735:	xchg   DWORD PTR [ebx],eax
  406737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406738:	sahf   
  406739:	mov    BYTE PTR [ebx],al
  40673b:	sahf   
  40673c:	sahf   
  40673d:	mov    DWORD PTR [ebx],eax
  40673f:	cdq    
  406740:	sahf   
  406741:	mov    ds:0xa39e9803,al
  406746:	add    ebx,DWORD PTR [ebx-0x6afc5a62]
  40674c:	sahf   
  40674d:	sahf   
  40674e:	add    edi,DWORD PTR [esi+ebx*4]
  406751:	popf   
  406752:	add    esi,DWORD PTR [edi]
  406754:	sahf   
  406755:	mov    al,ds:0x9f9e3e03
  40675a:	add    esi,DWORD PTR [ecx]
  40675c:	sahf   
  40675d:	call   0x4803:0x999e2003
  406764:	sahf   
  406765:	mov    cl,0x3
  406767:	dec    ebx
  406768:	sahf   
  406769:	mov    ah,0x3
  40676b:	dec    edx
  40676c:	sahf   
  40676d:	mov    bl,0x3
  40676f:	or     eax,0x403ae9e
  406774:	sahf   
  406775:	lods   eax,DWORD PTR ds:[esi]
  406776:	add    ecx,DWORD PTR [edi]
  406778:	sahf   
  406779:	mov    al,0x3
  40677b:	push   es
  40677c:	sahf   
  40677d:	scas   eax,DWORD PTR es:[edi]
  40677e:	add    edx,DWORD PTR [ecx]
  406780:	sahf   
  406781:	stos   BYTE PTR es:[edi],al
  406782:	add    edx,DWORD PTR [eax]
  406784:	add    BYTE PTR [eax],al
  406786:	sahf   
  406787:	test   eax,0xac9e0303
  40678c:	add    eax,DWORD PTR [edx]
  40678e:	sahf   
  40678f:	stos   DWORD PTR es:[edi],eax
  406790:	add    edx,ebp
  406792:	lahf   
  406793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406794:	add    ecx,esp
  406796:	lahf   
  406797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406798:	add    eax,edi
  40679a:	lahf   
  40679b:	test   al,0x3
  40679d:	mov    esi,0x3a79f
  4067a2:	xor    al,0x5
  4067a4:	rol    BYTE PTR [ebx],0x25
  4067a7:	add    eax,0x52603c1
  4067ac:	ret    
  4067ad:	add    edx,DWORD PTR [edi]
  4067af:	add    eax,0x53003c2
  4067b4:	les    eax,FWORD PTR [ebx]
  4067b6:	xor    DWORD PTR ds:0x52203c5,eax
  4067bc:	mov    BYTE PTR [ebx],0x13
  4067bf:	add    eax,0x51c03c7
  4067c4:	enter  0x1d03,0x5
  4067c8:	leave  
  4067c9:	add    edx,DWORD PTR [ebp+0x6b]
  4067cc:	mov    dh,0x23
  4067ce:	out    0x6b,al
  4067d0:	or     esp,DWORD PTR ds:0x24ff6b27
  4067d6:	and    BYTE PTR [ebx+0x1f],ch
  4067d9:	and    edx,DWORD PTR [ecx]
  4067db:	imul   esp,DWORD PTR [eax],0x23
  4067de:	and    ch,BYTE PTR [ebx+0x1]
  4067e1:	and    eax,0x23a06b23
  4067e6:	or     al,0x6b
  4067e8:	mov    ds:0x1d000023,al
  4067ed:	imul   esp,DWORD PTR [ebx-0x5a94e1dd],0x23
  4067f4:	out    dx,eax
  4067f5:	imul   ebx,DWORD PTR [edx-0x639427dd],0x23
  4067fc:	fldcw  WORD PTR [ebx-0x63]
  4067ff:	and    edi,DWORD PTR [edx+0x6b]
  406802:	lahf   
  406803:	and    ecx,ebx
  406805:	imul   esp,DWORD PTR [edi-0x54949bdd],0x23
  40680c:	push   0xc922636b
  406811:	imul   ebx,DWORD PTR [edi+0x22],0x3a
  406815:	data16 and ch,BYTE PTR fs:[ebx]
  406819:	data16 sub ah,BYTE PTR [edx]
  40681c:	popf   
  40681d:	cdq    
  40681e:	cld    
  40681f:	xor    edi,DWORD PTR [edi-0x40e30366]
  406825:	fwait
  406826:	cld    
  406827:	sbb    eax,0x6fc9ebf
  40682c:	mov    edi,0x7f3bfca1
  406831:	mov    ds:0xae7f42fc,al
  406836:	cld    
  406837:	sar    DWORD PTR [edi+edx*4-0x4],cl
  40683b:	sar    DWORD PTR [eax+eiz*4-0x4],1
  40683f:	pusha  
  406840:	jg     0x4067f1
  406842:	cld    
  406843:	sbb    DWORD PTR [edi-0x5d],edi
  406846:	cld    
  406847:	cmp    DWORD PTR [edi-0x5c],0x8d7f82fc
  40684e:	cld    
  40684f:	sub    BYTE PTR [eax],al
  406851:	add    BYTE PTR [edi-0x40d6038a],bh
  406857:	mov    ebp,0x24bf26fb
  40685c:	cld    
  40685d:	daa    
  40685e:	mov    edi,0xbf01fbbc
  406863:	int    0xfb
  406865:	xchg   ecx,eax
  406866:	pushf  
  406867:	sar    bl,0x8f
  40686a:	mov    esp,0xbc90fc27
  40686f:	cs cld 
  406871:	xchg   ecx,eax
  406872:	jl     0x406889
  406874:	cld    
  406875:	xchg   edx,eax
  406876:	jl     0x406834
  406878:	cli    
  406879:	and    DWORD PTR [ecx+0x78c5fafb],eax
  40687f:	cli    
  406880:	cli    
  406881:	xchg   ecx,eax
  406882:	cmp    cl,0xfa
  406885:	or     BYTE PTR [ecx-0x8],bh
  406888:	cli    
  406889:	or     eax,DWORD PTR [ecx+0x790cfaff]
  40688f:	idiv   dl
  406891:	or     ecx,eax
  406893:	add    edi,ebx
  406895:	and    edi,DWORD PTR [ecx-0x68052ffe]
  40689b:	push   ds
  40689c:	sar    edx,cl
  40689e:	stos   BYTE PTR es:[edi],al
  40689f:	pop    ds
  4068a0:	ret    0xaafa
  4068a3:	pop    ds
  4068a4:	mov    ebp,0xd41fa6fa
  4068a9:	cli    
  4068aa:	mov    ds,WORD PTR [edi]
  4068ac:	iret   
  4068ad:	cli    
  4068ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068af:	pop    ds
  4068b0:	(bad)  
  4068b1:	cli    
  4068b2:	adc    al,0x22
  4068b4:	mov    ecx,0x170000fa
  4068b9:	and    bl,BYTE PTR [eax-0x64e13506]
  4068bf:	cli    
  4068c0:	push   es
  4068c1:	and    bl,BYTE PTR [edx-0x6ade0606]
  4068c7:	cli    
  4068c8:	xchg   esi,eax
  4068c9:	pop    ds
  4068ca:	jl     0x4068c6
  4068cc:	jle    0x4068ed
  4068ce:	ja     0x4068ca
  4068d0:	outs   dx,BYTE PTR ds:[esi]
  4068d1:	pop    ds
  4068d2:	jle    0x4068ce
  4068d4:	(bad)  
  4068d5:	pop    ds
  4068d6:	jno    0x4068d2
  4068d8:	pushf  
  4068d9:	pop    ds
  4068da:	mov    ch,bh
  4068dc:	lahf   
  4068dd:	and    cl,BYTE PTR [ebx-0x75dd6303]
  4068e3:	std    
  4068e4:	sahf   
  4068e5:	and    al,BYTE PTR [ebp-0x73dd6603]
  4068eb:	std    
  4068ec:	mov    ds:0x9afd8722,eax
  4068f1:	and    cl,BYTE PTR [esi-0x7edd5a03]
  4068f7:	std    
  4068f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068f9:	and    dl,BYTE PTR [eax-0x3]
  4068fc:	scas   al,BYTE PTR es:[edi]
  4068fd:	and    dl,BYTE PTR [ebx-0x3]
  406900:	scas   eax,DWORD PTR es:[edi]
  406901:	and    al,BYTE PTR [ebp-0x3]
  406904:	jg     0x406924
  406906:	aas    
  406907:	std    
  406908:	js     0x40692c
  40690a:	push   esi
  40690b:	std    
  40690c:	and    DWORD PTR [edx],0x23cffd39
  406912:	add    BYTE PTR [eax],bh
  406914:	sbb    cl,dl
  406916:	and    BYTE PTR [ebx],bh
  406918:	adc    dh,cl
  40691a:	and    BYTE PTR [edx-0x30f90000],bl
  406920:	and    BYTE PTR [ebp-0x63df33f9],dl
  406926:	test   esp,0xc9f79720
  40692c:	and    BYTE PTR [esi-0x19],bh
  40692f:	retf   0x8120
  406932:	out    0xfd,eax
  406934:	and    BYTE PTR [edx-0x29],dh
  406937:	adc    ah,BYTE PTR [eax]
  406939:	ins    DWORD PTR es:[edi],dx
  40693a:	xlat   BYTE PTR ds:[ebx]
  40693b:	sbb    DWORD PTR [ebx],esp
  40693d:	fs (bad) 
  40693f:	push   ss
  406940:	add    BYTE PTR [edi-0x39],bl
  406943:	sbb    ah,BYTE PTR [ebx]
  406945:	stos   BYTE PTR es:[edi],al
  406946:	mov    bh,0xc7
  406948:	and    BYTE PTR [ebp-0x53df3749],ah
  40694e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40694f:	lds    esp,FWORD PTR [eax]
  406951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406953:	(bad)  
  406954:	and    BYTE PTR [eax-0x5cdedd69],ah
  40695a:	xchg   edi,eax
  40695b:	adc    DWORD PTR [esi],esp
  40695d:	xor    eax,0x2c254387
  406962:	xchg   DWORD PTR [ebp+0x39772725],ebp
  406968:	and    eax,0x2595771e
  40696d:	sbb    DWORD PTR [edi+0xc],esp
  406970:	and    BYTE PTR [eax],bl
  406972:	or     esp,DWORD PTR [bx+si]
  406975:	sbb    edx,DWORD PTR [edi+0x8]
  406978:	and    BYTE PTR [edx],bl
  40697a:	push   edi
  40697b:	pop    es
  40697c:	and    BYTE PTR ds:0x37210647,bh
  406982:	add    BYTE PTR [eax],al
  406984:	inc    edi
  406985:	xor    ah,BYTE PTR [eax]
  406987:	ds aaa 
  406989:	xor    DWORD PTR [eax],esp
  40698b:	xor    BYTE PTR [edi],dh
  40698d:	pop    es
  40698e:	daa    
  40698f:	add    BYTE PTR [edi+0x68],bh
  406992:	stos   DWORD PTR es:[edi],eax
  406993:	and    eax,0x25bf6880
  406998:	mov    cl,0x68
  40699a:	mov    ch,0x25
  40699c:	mov    ds:0xe325ce68,al
  4069a1:	imul   ebp,DWORD PTR [ebp-0x1a962bdb],0xaa69e525
  4069ab:	and    eax,0x25ac69e6
  4069b0:	xlat   BYTE PTR ds:[ebx]
  4069b1:	imul   esi,DWORD PTR [edx-0x439627db],0x569e925
  4069bb:	fisubr DWORD PTR es:[ecx+0x21]
  4069bf:	and    BYTE PTR [ebx],bl
  4069c1:	push   0xffffffa9
  4069c3:	and    eax,0x25b16a2c
  4069c8:	sbb    eax,0x1e25bb6a
  4069cd:	push   0x1b
  4069cf:	punpckhdq mm3,QWORD PTR es:0x626a1026
  4069d7:	and    DWORD PTR es:[ecx+0x65],ebp
  4069db:	adc    ch,BYTE PTR es:[edx+0x64]
  4069df:	es in  al,0x69
  4069e2:	pop    ds
  4069e3:	daa    
  4069e4:	in     eax,0x69
  4069e6:	pop    ds
  4069e7:	and    BYTE PTR [eax],al
  4069e9:	add    dh,dl
  4069eb:	imul   esp,DWORD PTR [eax],0x1269d720
  4069f1:	daa    
  4069f2:	test   al,0x69
  4069f4:	push   ss
  4069f5:	daa    
  4069f6:	test   eax,0x9a266e69
  4069fb:	imul   ebp,DWORD PTR [esi+eiz*1-0x75],0x7c264169
  406a03:	imul   edi,DWORD PTR [edi],0xd697d26
  406a09:	es popf 
  406a0b:	psubw  mm2,QWORD PTR [esi+edi*2]
  406a0f:	adc    cl,bh
  406a11:	push   ss
  406a12:	jl     0x406a11
  406a14:	clc    
  406a15:	aaa    
  406a16:	jge    0x406a7e
  406a18:	clc    
  406a19:	sbb    DWORD PTR [ebp-0x42e20795],edi
  406a1f:	mov    eax,0x739d3bf9
  406a24:	stc    
  406a25:	cmp    eax,0x27f9919d
  406a2a:	mov    edi,0xbf26f982
  406a2f:	cdq    
  406a30:	stc    
  406a31:	scas   al,BYTE PTR es:[edi]
  406a32:	popf   
  406a33:	xchg   edi,eax
  406a34:	stc    
  406a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a36:	mov    edi,0x7f28f998
  406a3b:	xchg   ebp,eax
  406a3c:	stc    
  406a3d:	or     DWORD PTR [esi-0x65],edi
  406a40:	stc    
  406a41:	pop    esi
  406a42:	popf   
  406a43:	scas   eax,DWORD PTR es:[edi]
  406a44:	stc    
  406a45:	pop    ss
  406a46:	jg     0x4069dd
  406a48:	stc    
  406a49:	xchg   esp,eax
  406a4a:	jle    0x4069e7
  406a4c:	stc    
  406a4d:	mov    ds:0x847f0000,eax
  406a52:	stc    
  406a53:	retf   0x8880
  406a56:	stc    
  406a57:	pop    es
  406a58:	jle    0x4069e5
  406a5a:	stc    
  406a5b:	sub    DWORD PTR [edi-0x407d068d],edi
  406a61:	jne    0x406a5c
  406a63:	cmp    DWORD PTR [edi-0x405e0739],0xbfa2f8bf
  406a6d:	sbb    al,bh
  406a6f:	push   ss
  406a70:	mov    ebp,0xa0cff7cb
  406a75:	retf   0xd0f7
  406a78:	cwde   
  406a79:	int    0xf7
  406a7b:	shl    DWORD PTR [eax-0x672d0834],1
  406a81:	(bad)  
  406a82:	not    ebx
  406a84:	mov    al,ds:0x69f80c02
  406a89:	or     BYTE PTR [edi],al
  406a8b:	clc    
  406a8c:	push   eax
  406a8d:	or     BYTE PTR [esi],cl
  406a8f:	clc    
  406a90:	dec    ebx
  406a91:	or     BYTE PTR [ecx],al
  406a93:	clc    
  406a94:	push   edx
  406a95:	or     BYTE PTR [eax],dl
  406a97:	clc    
  406a98:	inc    ebp
  406a99:	or     BYTE PTR [ebx],dl
  406a9b:	clc    
  406a9c:	hlt    
  406a9d:	pop    es
  406a9e:	add    bh,al
  406aa0:	test   DWORD PTR [edi],0x7e6f7fd
  406aa6:	aam    0xf7
  406aa8:	loope  0x406ab1
  406aaa:	iret   
  406aab:	neg    eax
  406aad:	pop    es
  406aae:	(bad)  
  406aaf:	not    ebx
  406ab1:	pop    es
  406ab2:	fincstp 
  406ab4:	add    BYTE PTR [eax],al
  406ab6:	retf   0xb807
  406ab9:	idiv   ebp
  406abb:	pop    es
  406abc:	mov    ebx,0xba07bcf7
  406ac1:	idiv   DWORD PTR [edi-0x41084af9]
  406ac7:	pop    es
  406ac8:	pushf  
  406ac9:	idiv   DWORD PTR [ecx-0x3f0868f9]
  406acf:	pop    es
  406ad0:	sahf   
  406ad1:	idiv   DWORD PTR [ebx-0x3d086ef9]
  406ad7:	pop    es
  406ad8:	xor    bh,0xb5
  406adb:	pop    es
  406adc:	xor    edi,0xffffff84
  406adf:	pop    es
  406ae0:	dec    eax
  406ae1:	neg    BYTE PTR [ebp-0x6309b4f0]
  406ae7:	adc    BYTE PTR [edx-0x7aef600a],cl
  406aed:	neg    BYTE PTR [esi-0x660973f0]
  406af3:	adc    BYTE PTR [edi-0x71ef5f0a],al
  406af9:	neg    BYTE PTR [ebx-0x5d096ef0]
  406aff:	adc    BYTE PTR [eax],al
  406b01:	or     BYTE PTR [ebx+0xa],0xe
  406b05:	adc    DWORD PTR [ebx+0xb],0xe
  406b09:	push   edx
  406b0a:	dec    ebx
  406b0b:	or     al,0xe
  406b0d:	dec    ebp
  406b0e:	xor    ecx,DWORD PTR ds:0xe2b440e
  406b14:	push   cs
  406b15:	aas    
  406b16:	xor    ecx,DWORD PTR [edi]
  406b18:	push   cs
  406b19:	push   esi
  406b1a:	add    BYTE PTR [eax],al
  406b1c:	sub    edx,DWORD PTR [eax]
  406b1e:	push   cs
  406b1f:	cmp    DWORD PTR [ebx],edx
  406b21:	adc    DWORD PTR [esi],ecx
  406b23:	cmp    BYTE PTR [ebx],cl
  406b25:	repnz or eax,0xdf3133b
  406b2b:	call   0xf68c:0x950df5ac
  406b32:	or     eax,0xdf78c9c
  406b37:	xchg   edi,eax
  406b38:	mov    eax,?
  406b3a:	or     eax,0xdf98c7e
  406b3f:	sub    DWORD PTR [edx+edi*8-0x4538ff3],0xfcac730d
  406b4a:	or     eax,0xdfdac62
  406b4f:	pop    ebp
  406b50:	mov    esi,?
  406b52:	or     eax,0xdff8c54
  406b57:	dec    edi
  406b58:	mov    WORD PTR [eax],es
  406b5a:	push   cs
  406b5b:	inc    esi
  406b5c:	mov    WORD PTR [ecx],es
  406b5e:	push   cs
  406b5f:	test   eax,0xa80e22ac
  406b64:	lods   al,BYTE PTR ds:[esi]
  406b65:	and    DWORD PTR [esi],ecx
  406b67:	stos   DWORD PTR es:[edi],eax
  406b68:	lods   al,BYTE PTR ds:[esi]
  406b69:	and    al,0xe
  406b6b:	sub    ch,BYTE PTR [ebx+eiz*1+0x268c250e]
  406b72:	push   cs
  406b73:	sub    al,0x8c
  406b75:	and    eax,0x288c270e
  406b7a:	push   cs
  406b7b:	add    BYTE PTR [ebx+0xe26f1],dh
  406b81:	add    BYTE PTR [ecx+esi*8-0xe82f1d9],cl
  406b88:	sub    BYTE PTR [esi],cl
  406b8a:	jle    0x406b7d
  406b8c:	sub    DWORD PTR [esi],ecx
  406b8e:	(bad)  
  406b8f:	icebp  
  406b90:	sub    cl,BYTE PTR [esi]
  406b92:	mov    cl,dh
  406b94:	sub    ecx,DWORD PTR [esi]
  406b96:	jns    0x406b89
  406b98:	sub    al,0xe
  406b9a:	mov    dh,cl
  406b9c:	sub    eax,0x2ef16b0e
  406ba1:	push   cs
  406ba2:	mov    ah,0xf1
  406ba4:	das    
  406ba5:	push   cs
  406ba6:	mov    ch,0xf1
  406ba8:	xor    BYTE PTR [esi],cl
  406baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bab:	icebp  
  406bac:	xor    DWORD PTR [esi],ecx
  406bae:	inc    edi
  406baf:	repz xor cl,BYTE PTR [esi]
  406bb2:	xor    bl,dh
  406bb4:	xor    ecx,DWORD PTR [esi]
  406bb6:	xor    ebx,esi
  406bb8:	xor    al,0xe
  406bba:	xor    dh,bl
  406bbc:	xor    eax,0x36f3030e
  406bc1:	push   cs
  406bc2:	cld    
  406bc3:	repnz aaa 
  406bc5:	push   cs
  406bc6:	sub    eax,0x2e0e38f3
  406bcb:	repz cmp DWORD PTR [esi],ecx
  406bce:	(bad)  
  406bd0:	cmp    eax,0x3ef2fb0e
  406bd5:	push   cs
  406bd6:	and    al,0xf3
  406bd8:	aas    
  406bd9:	push   cs
  406bda:	adc    eax,0x160e40f3
  406bdf:	repz inc ecx
  406be1:	push   cs
  406be2:	daa    
  406be3:	repnz inc edx
  406be5:	push   cs
  406be6:	add    BYTE PTR [eax],al
  406be8:	and    dl,dh
  406bea:	inc    ebx
  406beb:	push   cs
  406bec:	and    edx,esi
  406bee:	inc    esp
  406bef:	push   cs
  406bf0:	shl    dl,cl
  406bf2:	inc    ebp
  406bf3:	push   cs
  406bf4:	jecxz  0x406be8
  406bf6:	inc    esi
  406bf7:	push   cs
  406bf8:	popf   
  406bf9:	ror    DWORD PTR [edi],0x48
  406bfc:	fwait
  406bfd:	ret    0x490f
  406c00:	xchg   ebx,eax
  406c01:	mov    bl,0xf
  406c03:	dec    edx
  406c04:	stos   DWORD PTR es:[edi],eax
  406c05:	mov    ah,0xf
  406c07:	dec    ebx
  406c08:	mov    ds:0x9b4c0fc5,eax
  406c0d:	push   ds
  406c0e:	adc    BYTE PTR [ebp-0x6d],cl
  406c11:	stc    
  406c12:	(bad)  
  406c14:	stos   DWORD PTR es:[edi],eax
  406c15:	cli    
  406c16:	sqrtps xmm4,XMMWORD PTR [ebx-0x64adf005]
  406c1d:	cld    
  406c1e:	rcpps  xmm2,XMMWORD PTR [ebx-0x54abf0a3]
  406c25:	push   esi
  406c26:	andnps xmm4,XMMWORD PTR [ebx-0x64a9f0a1]
  406c2d:	pop    eax
  406c2e:	xorps  xmm2,XMMWORD PTR [ebx-0x54a7f09f]
  406c35:	bound  ecx,QWORD PTR [edi]
  406c37:	pop    ecx
  406c38:	mov    ds:0xac31128a,eax
  406c3d:	mov    edx,DWORD PTR [edx]
  406c3f:	xor    ch,BYTE PTR [esp+ecx*4-0x7a73ccee]
  406c46:	adc    dh,BYTE PTR [esp+ecx*4]
  406c49:	mov    ss,WORD PTR [edx]
  406c4b:	xor    eax,0x878c0000
  406c50:	adc    dh,BYTE PTR [esi]
  406c52:	mov    eax,ss
  406c54:	adc    DWORD PTR [edi],esi
  406c56:	ins    BYTE PTR es:[edi],dx
  406c57:	mov    cl,0x11
  406c59:	cmp    BYTE PTR [edx+eax*8+0x11],ch
  406c5d:	cmp    DWORD PTR [ebx+eax*8+0x11],ebp
  406c61:	cmp    ch,BYTE PTR [esp+esi*4+0x11]
  406c65:	cmp    ecx,esp
  406c67:	iret   
  406c68:	adc    DWORD PTR [esp+ecx*8],edi
  406c6b:	(bad)  
  406c6c:	adc    DWORD PTR ds:0x3e121dcc,edi
  406c72:	int3   
  406c73:	add    dl,BYTE PTR [esi-0x66ec45ee]
  406c79:	adc    bl,ch
  406c7b:	adc    ebx,DWORD PTR [eax-0x64ec23ee]
  406c81:	adc    bl,bh
  406c83:	adc    edi,DWORD PTR [edx+0x12]
  406c86:	ficom  WORD PTR [ebx]
  406c88:	jne    0x406c9c
  406c8a:	fst    DWORD PTR [ebx]
  406c8c:	jl     0x406ca0
  406c8e:	loopne 0x406ca3
  406c90:	ja     0x406ca4
  406c92:	fist   DWORD PTR [ebx]
  406c94:	pop    esi
  406c95:	adc    ah,dl
  406c97:	adc    esp,DWORD PTR [ecx+0x12]
  406c9a:	in     eax,0x13
  406c9c:	push   eax
  406c9d:	adc    dl,ah
  406c9f:	adc    edx,DWORD PTR [ebx+0x12]
  406ca2:	xlat   BYTE PTR ds:[ebx]
  406ca3:	adc    eax,DWORD PTR [edx+0x12]
  406ca6:	adc    di,WORD PTR ds:0x34136112
  406cad:	adc    bl,BYTE PTR [eax+0x13]
  406cb0:	das    
  406cb1:	adc    al,BYTE PTR [eax]
  406cb3:	add    BYTE PTR [ebx+0x13],dl
  406cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb7:	adc    DWORD PTR [edx+0x13],ebp
  406cba:	test   eax,0xa8134d11
  406cbf:	adc    DWORD PTR [ebx+edx*1-0x55],ecx
  406cc3:	adc    DWORD PTR [edi+0x13],ecx
  406cc6:	stos   BYTE PTR es:[edi],al
  406cc7:	adc    DWORD PTR [esi+0x13],ebp
  406cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ccb:	adc    DWORD PTR [ecx+0x13],ebp
  406cce:	lods   al,BYTE PTR ds:[esi]
  406ccf:	adc    DWORD PTR [eax+0x13],esi
  406cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd3:	adc    DWORD PTR [ebx+0x13],ebp
  406cd6:	scas   al,BYTE PTR es:[edi]
  406cd7:	adc    DWORD PTR [edx+0x13],edx
  406cda:	mov    cl,0x11
  406cdc:	push   ebp
  406cdd:	adc    esp,DWORD PTR [eax-0x5cecbbef]
  406ce3:	adc    DWORD PTR [edi+0x13],eax
  406ce6:	mov    dl,0x11
  406ce8:	not    BYTE PTR [ebx]
  406cea:	lods   eax,DWORD PTR ds:[esi]
  406ceb:	adc    ecx,esi
  406ced:	adc    eax,DWORD PTR [eax]
  406cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf0:	lods   al,BYTE PTR ds:[esi]
  406cf1:	mov    edi,0xbcac9f30
  406cf6:	xor    BYTE PTR [esi],dh
  406cf8:	mov    WORD PTR [ebp-0x1d73c6d0],?
  406cfe:	xor    BYTE PTR [eax],bh
  406d00:	mov    ebx,fs
  406d02:	xor    BYTE PTR [ebx],bh
  406d04:	mov    eax,fs
  406d06:	xor    BYTE PTR [edx],bl
  406d08:	lods   al,BYTE PTR ds:[esi]
  406d09:	loope  0x406d3b
  406d0b:	adc    eax,0x1c11aaac
  406d10:	lods   al,BYTE PTR ds:[esi]
  406d11:	stos   DWORD PTR es:[edi],eax
  406d12:	adc    DWORD PTR [edi],edx
  406d14:	lods   al,BYTE PTR ds:[esi]
  406d15:	test   al,0x11
  406d17:	add    BYTE PTR ds:[eax],al
  406d1a:	mov    WORD PTR [ecx-0x5173beef],gs
  406d20:	adc    DWORD PTR [eax],esi
  406d22:	mov    WORD PTR [edi-0x5373ccef],gs
  406d28:	adc    DWORD PTR [edx],esp
  406d2a:	lods   al,BYTE PTR ds:[esi]
  406d2b:	lods   eax,DWORD PTR ds:[esi]
  406d2c:	adc    DWORD PTR ds:0x141192ac,ebx
  406d32:	lods   al,BYTE PTR ds:[esi]
  406d33:	xchg   ebx,eax
  406d34:	adc    DWORD PTR [edi],ecx
  406d36:	lods   al,BYTE PTR ds:[esi]
  406d37:	nop
  406d38:	adc    esi,eax
  406d3a:	stos   DWORD PTR es:[edi],eax
  406d3b:	xchg   ecx,eax
  406d3c:	adc    ecx,ecx
  406d3e:	mov    ds:0x9bc81196,eax
  406d43:	xchg   edi,eax
  406d44:	adc    ebx,ecx
  406d46:	xchg   ebx,eax
  406d47:	xchg   esp,eax
  406d48:	adc    edx,ecx
  406d4a:	stos   DWORD PTR es:[edi],eax
  406d4b:	xchg   ebp,eax
  406d4c:	adc    ebp,eax
  406d4e:	mov    ds:0x9bcc119a,eax
  406d53:	fwait
  406d54:	adc    edi,eax
  406d56:	xchg   ebx,eax
  406d57:	cwde   
  406d58:	adc    DWORD PTR [esi-0x6eee6655],ecx
  406d5e:	mov    ds:0x9b80119e,eax
  406d63:	lahf   
  406d64:	adc    DWORD PTR [ebx+0x119c93],eax
  406d6a:	das    
  406d6b:	or     eax,0xd2011bf
  406d70:	rcl    BYTE PTR [ecx],0x21
  406d73:	or     eax,0xd0211c1
  406d78:	ret    0xd311
  406d7b:	or     al,0x6d
  406d7d:	xor    DWORD PTR [eax],eax
  406d7f:	add    ah,dl
  406d81:	or     al,0x71
  406d83:	xor    ebp,eax
  406d85:	or     al,0x78
  406d87:	xor    esi,eax
  406d89:	or     al,0x7f
  406d8b:	xor    DWORD PTR [edi-0x77ce7ef4],edx
  406d91:	or     al,0x84
  406d93:	xor    DWORD PTR [ecx-0x75ce79f4],ecx
  406d99:	or     al,0x8d
  406d9b:	xor    DWORD PTR [ebx+0x7c318e0c],ebx
  406da1:	or     al,0xeb
  406da3:	adc    DWORD PTR [ebp-0x71ee0ff4],ecx
  406da9:	or     al,0xf9
  406dab:	adc    DWORD PTR [ebx+0x5820a90c],esp
  406db1:	dec    edi
  406db2:	stos   DWORD PTR es:[edi],eax
  406db3:	and    al,dl
  406db5:	dec    edi
  406db6:	push   ecx
  406db7:	add    DWORD PTR [ecx+0x4201524f],esi
  406dbd:	push   ecx
  406dbe:	ja     0x406dc1
  406dc0:	and    al,0x20
  406dc2:	mov    al,ds:0xa1201520
  406dc7:	and    BYTE PTR [esi],dl
  406dc9:	and    BYTE PTR [edx-0x5cdfd8e0],ah
  406dcf:	and    BYTE PTR [eax],bl
  406dd1:	and    BYTE PTR [eax+eiz*1+0x20a52019],ah
  406dd8:	sbb    ah,BYTE PTR [eax]
  406dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ddb:	and    BYTE PTR [ebx+0x1f],ch
  406dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ddf:	and    BYTE PTR [edi+ebx*1-0x58],cl
  406de3:	and    BYTE PTR [eax],al
  406de5:	add    BYTE PTR [ebp+0x7da922c2],bl
  406deb:	mov    edi,0xb0bdaa22
  406df0:	and    ch,BYTE PTR [ebx-0x53dd3243]
  406df6:	mov    ebp,0x9d005e61
  406dfb:	popa   
  406dfc:	add    eax,DWORD PTR [eax]
  406dfe:	popf   
  406dff:	push   edx
  406e00:	pop    esi
  406e01:	add    BYTE PTR [ebp-0x62fffcae],bl
  406e07:	pusha  
  406e08:	pop    esi
  406e09:	add    BYTE PTR [ebp-0x62fffcc3],bl
  406e0f:	push   esi
  406e10:	pop    esi
  406e11:	add    BYTE PTR [ebp-0x62fffc92],bl
  406e17:	cmp    BYTE PTR [esi+0x0],bl
  406e1a:	popf   
  406e1b:	cmp    BYTE PTR [ebx],al
  406e1d:	add    BYTE PTR [ebp-0x62ffa100],bl
  406e23:	add    BYTE PTR [eax+eax*1],al
  406e26:	popf   
  406e27:	hlt    
  406e28:	pop    ebp
  406e29:	add    BYTE PTR [ebp-0x62fffb65],bl
  406e2f:	jns    0x406e8f
  406e31:	add    BYTE PTR [ebp-0x62fffbbb],bl
  406e37:	jp     0x406e97
  406e39:	add    BYTE PTR [ebp-0x62fffbba],bl
  406e3f:	pop    ss
  406e40:	pop    ebp
  406e41:	add    BYTE PTR [ebp-0x62fffcfd],bl
  406e47:	sbb    BYTE PTR [ebp+0x0],bl
  406e4a:	add    BYTE PTR [eax],al
  406e4c:	popf   
  406e4d:	add    al,0x3
  406e4f:	add    BYTE PTR [ebp-0x62ffa303],bl
  406e55:	icebp  
  406e56:	add    al,BYTE PTR [eax]
  406e58:	popf   
  406e59:	(bad)  
  406e5a:	pop    esp
  406e5b:	add    BYTE PTR [ebp-0x62fffcf6],bl
  406e61:	add    bh,BYTE PTR [edi]
  406e63:	pop    ebp
  406e64:	popf   
  406e65:	add    cl,bl
  406e67:	add    bl,BYTE PTR [ebp-0x62a2c1fe]
  406e6d:	add    cl,dl
  406e6f:	add    bl,BYTE PTR [ebp-0x62a2f6fe]
  406e75:	add    dl,al
  406e77:	add    ebx,DWORD PTR [ebp-0x62a2f7fe]
  406e7d:	add    bh,BYTE PTR [ebp-0x34fd62fd]
  406e83:	pop    esp
  406e84:	popf   
  406e85:	add    dl,BYTE PTR [edx]
  406e87:	add    al,0x9d
  406e89:	add    cl,dl
  406e8b:	pop    esp
  406e8c:	popf   
  406e8d:	add    bh,ah
  406e8f:	add    bl,BYTE PTR [ebp-0x62a32cfe]
  406e95:	add    cl,BYTE PTR [esi]
  406e97:	add    al,0x9d
  406e99:	add    al,dl
  406e9b:	pop    esp
  406e9c:	popf   
  406e9d:	add    ch,dl
  406e9f:	add    bl,BYTE PTR [ebp-0x62a296fe]
  406ea5:	add    cl,cl
  406ea7:	add    ebx,DWORD PTR [ebp-0x62a29ffe]
  406ead:	add    ah,al
  406eaf:	add    eax,DWORD PTR [eax]
  406eb1:	add    BYTE PTR [ebp-0x62a28bfe],bl
  406eb7:	add    ch,ah
  406eb9:	add    bl,BYTE PTR [ebp-0x62a2a7fe]
  406ebf:	add    bh,BYTE PTR [ecx+0x3]
  406ec2:	popf   
  406ec3:	add    bh,BYTE PTR [ebx+0x5c]
  406ec6:	popf   
  406ec7:	add    bl,BYTE PTR [eax+0x4]
  406eca:	popf   
  406ecb:	add    bh,BYTE PTR [edx+0x5c]
  406ece:	popf   
  406ecf:	add    bl,BYTE PTR [ebx+0x4]
  406ed2:	popf   
  406ed3:	add    bl,BYTE PTR [ebp+0x5c]
  406ed6:	popf   
  406ed7:	add    bh,BYTE PTR [edx]
  406ed9:	add    al,0x9d
  406edb:	add    al,BYTE PTR [eax]
  406edd:	pop    esp
  406ede:	popa   
  406edf:	add    al,BYTE PTR [eax]
  406ee1:	add    eax,0x7f0002a1
  406ee6:	push   ecx
  406ee7:	add    al,BYTE PTR [eax]
  406ee9:	les    ebx,FWORD PTR [esi+0x417e0002]
  406eef:	add    al,BYTE PTR [eax]
  406ef1:	(bad)  
  406ef2:	sahf   
  406ef3:	add    al,BYTE PTR [eax]
  406ef5:	popa   
  406ef6:	icebp  
  406ef7:	add    al,BYTE PTR [eax]
  406ef9:	(bad)  
  406efa:	sahf   
  406efb:	add    al,BYTE PTR [eax]
  406efd:	push   eax
  406efe:	loope  0x406f02
  406f00:	add    cl,al
  406f02:	sahf   
  406f03:	add    al,BYTE PTR [eax]
  406f05:	test   ecx,edx
  406f07:	add    al,BYTE PTR [eax]
  406f09:	or     ah,BYTE PTR [ecx-0x3e8cfffe]
  406f0f:	add    al,BYTE PTR [eax]
  406f11:	or     BYTE PTR [ecx+0x620002],ah
  406f17:	add    cl,dh
  406f19:	add    al,BYTE PTR [eax]
  406f1b:	or     esp,DWORD PTR [ecx-0x1eabfffe]
  406f21:	add    al,BYTE PTR [eax]
  406f23:	fstp   QWORD PTR [esi-0x2e78fffe]
  406f29:	add    al,BYTE PTR [eax]
  406f2b:	int3   
  406f2c:	sahf   
  406f2d:	add    al,BYTE PTR [eax]
  406f2f:	jbe    0x406ef2
  406f31:	add    al,BYTE PTR [eax]
  406f33:	mov    edi,0x5300029e
  406f38:	jno    0x406f3c
  406f3a:	add    BYTE PTR [ebx+0x4200029e],dl
  406f40:	popa   
  406f41:	add    al,BYTE PTR [eax]
  406f43:	sbb    BYTE PTR [esi+0x56950002],0x2
  406f4a:	add    BYTE PTR [ebp-0x5f],cl
  406f4d:	add    al,BYTE PTR [eax]
  406f4f:	test   BYTE PTR [esi+0x2],al
  406f52:	add    BYTE PTR [ecx+eiz*4],bh
  406f55:	add    al,BYTE PTR [eax]
  406f57:	add    BYTE PTR [edx],ch
  406f59:	mov    ebp,0xfe5affff
  406f5e:	(bad)  
  406f5f:	call   FWORD PTR [ebx]
  406f61:	mov    ebp,0xff7bffff
  406f66:	(bad)  
  406f67:	call   DWORD PTR [ebp+edi*4-0x1]
  406f6b:	call   DWORD PTR [esi+edi*8-0x42ba0001]
  406f72:	(bad)  
  406f73:	jmp    DWORD PTR [ebp-0x29000002]
  406f79:	mov    ebx,0xffff
  406f7e:	xchg   esi,eax
  406f7f:	(bad)  
  406f80:	(bad)  
  406f81:	inc    edi
  406f83:	mov    ebx,0xfea7ffff
  406f88:	(bad)  
  406f89:	call   DWORD PTR [eax]
  406f8b:	mov    esp,0x460ffff
  406f90:	add    BYTE PTR [eax],al
  406f92:	add    DWORD PTR [edi+edi*8+0x461ff],edi
  406f99:	add    dl,dl
  406f9b:	mov    ebx,0x462ffff
  406fa0:	add    BYTE PTR [eax],al
  406fa2:	ret    
  406fa3:	mov    ebx,0x463ffff
  406fa8:	add    BYTE PTR [eax],al
  406faa:	mov    esp,0xcffffbb
  406faf:	add    al,0x0
  406fb1:	add    ch,cl
  406fb3:	mov    ebx,0x41dffff
  406fb8:	add    BYTE PTR [eax],al
  406fba:	pop    edx
  406fbb:	mov    ebx,0x384ffff
  406fc0:	add    BYTE PTR [eax],al
  406fc2:	retf   
  406fc3:	mov    ebx,0x375ffff
  406fc8:	add    BYTE PTR [eax],al
  406fca:	inc    esp
  406fcb:	mov    ebp,0xfe46ffff
  406fd0:	(bad)  
  406fd1:	call   FWORD PTR [ebp-0x62ffa556]
  406fd7:	mov    esp,0xab9d0003
  406fdc:	pop    edx
  406fdd:	add    BYTE PTR [ebp+0x40d],bl
  406fe3:	add    BYTE PTR [ebp-0x62ffa554],bl
  406fe9:	push   cs
  406fea:	add    al,0x0
  406fec:	popf   
  406fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fee:	pop    edx
  406fef:	add    BYTE PTR [ebp-0x62fffc11],bl
  406ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff6:	pop    edx
  406ff7:	add    BYTE PTR [ebp-0x62fffc10],bl
  406ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ffe:	pop    edx
  406fff:	add    BYTE PTR [ebp-0x62fffbff],bl
  407005:	test   al,0x5a
  407007:	add    BYTE PTR [ebp-0x62fffcae],bl
  40700d:	adc    DWORD PTR [edx+0x0],ebx
  407010:	popf   
  407011:	arpl   WORD PTR [ebx],ax
  407013:	add    BYTE PTR [ebp-0x62ffa5de],bl
  407019:	xor    al,0x3
  40701b:	add    BYTE PTR [ebp-0x62ffa5ed],bl
  407021:	xchg   ebp,eax
  407022:	add    eax,DWORD PTR [eax]
  407024:	popf   
  407025:	and    al,0x5a
  407027:	add    BYTE PTR [ebp-0x62fffc5a],bl
  40702d:	or     eax,0x779d005a
  407032:	add    eax,DWORD PTR [eax]
  407034:	popf   
  407035:	push   ds
  407036:	pop    edx
  407037:	add    BYTE PTR [ebp-0x62fffc78],bl
  40703d:	cvtps2pd xmm0,QWORD PTR [eax]
  407040:	popf   
  407041:	jmp    0x20dd7048
  407046:	pop    edx
  407047:	add    BYTE PTR [eax],al
  407049:	add    BYTE PTR [ebp-0x62fffd16],bl
  40704f:	add    bh,BYTE PTR [ecx+0x6b029d59]
  407055:	add    al,0x9d
  407057:	add    bh,BYTE PTR [eax+0x6a029d59]
  40705d:	add    al,0x9d
  40705f:	add    bl,BYTE PTR [ebx+0x65029d59]
  407065:	add    al,0x9d
  407067:	add    bl,BYTE PTR [edx+0x64029d59]
  40706d:	add    al,0x9d
  40706f:	add    bh,BYTE PTR [ebp+0x67029d59]
  407075:	add    al,0x9d
  407077:	add    bh,BYTE PTR [ecx+ebx*2+0x466029d]
  40707e:	popf   
  40707f:	add    cl,BYTE PTR [eax+0x49029d59]
  407085:	add    al,0x9d
  407087:	add    cl,BYTE PTR [ebx+0x48029d59]
  40708d:	add    al,0x9d
  40708f:	add    cl,BYTE PTR [edx+0x59]
  407092:	popf   
  407093:	add    cl,BYTE PTR [ebx+0x4d029d04]
  407099:	pop    ecx
  40709a:	popf   
  40709b:	add    cl,BYTE PTR [edx+0x50029d03]
  4070a1:	pop    ecx
  4070a2:	popf   
  4070a3:	add    al,BYTE PTR [ebp+0x43029d04]
  4070a9:	pop    ecx
  4070aa:	popf   
  4070ab:	add    al,BYTE PTR [ebx+eax*1+0x29d0000]
  4070b2:	adc    bl,BYTE PTR [ecx-0x63]
  4070b5:	add    al,dl
  4070b7:	add    ebx,DWORD PTR [ebp-0x62a6fafe]
  4070bd:	add    ch,BYTE PTR [ebp-0x71fd62fd]
  4070c3:	pop    eax
  4070c4:	popf   
  4070c5:	add    bl,BYTE PTR [ebx+eax*1-0x17fffd63]
  4070cc:	lahf   
  4070cd:	add    eax,DWORD PTR [ecx]
  4070cf:	call   0xe8417473
  4070d4:	lahf   
  4070d5:	add    eax,DWORD PTR [ecx]
  4070d7:	call   0xea43747b
  4070dc:	lahf   
  4070dd:	add    eax,DWORD PTR [ecx]
  4070df:	call   0xe8417483
  4070e4:	mov    al,ds:0x98eb0103
  4070e9:	add    BYTE PTR [edx],al
  4070eb:	jmp    0x40708d
  4070ed:	add    BYTE PTR [edx],al
  4070ef:	jmp    0x4070a3
  4070f1:	add    DWORD PTR [ebx+ebp*8],eax
  4070f4:	mov    al,ds:0x98eb0400
  4070f9:	add    BYTE PTR [edx],al
  4070fb:	jmp    0x40709d
  4070fd:	inc    BYTE PTR [ebx]
  4070ff:	in     eax,0x98
  407101:	add    BYTE PTR [edx],al
  407103:	in     eax,dx
  407104:	mov    al,ds:0x98eb0200
  407109:	add    BYTE PTR [ebp*8-0x14fdfc86],al
  407110:	jb     0x407114
  407112:	add    eax,ebp
  407114:	add    BYTE PTR [eax],al
  407116:	lahf   
  407117:	add    eax,DWORD PTR [ecx]
  407119:	in     al,0x63
  40711b:	and    ah,BYTE PTR [ecx]
  40711d:	jmp    0xea4672c3
  407122:	cdq    
  407123:	add    DWORD PTR [ebx],eax
  407125:	jmp    0x199:0xea0301a1
  40712c:	add    eax,0x2ffa1ea
  407131:	jmp    0x39f:0xe8030199
  407138:	add    ebp,eax
  40713a:	cdq    
  40713b:	add    eax,DWORD PTR [ebx]
  40713d:	call   0xe84174e3
  407142:	cdq    
  407143:	add    eax,DWORD PTR [eax]
  407145:	add    ah,dh
  407147:	add    BYTE PTR [eax],al
  407149:	add    ah,dh
  40714b:	add    BYTE PTR [eax],al
  40714d:	add    BYTE PTR [ecx+eax*1],al
  407150:	add    BYTE PTR [eax],al
  407152:	add    al,0x1
  407154:	add    BYTE PTR [eax],al
  407156:	hlt    
  407157:	add    BYTE PTR [eax],al
  407159:	add    ah,dh
  40715b:	add    BYTE PTR [eax],al
  40715d:	add    ah,al
  40715f:	add    BYTE PTR [eax],al
  407161:	add    ah,al
  407163:	add    BYTE PTR [eax],al
  407165:	add    BYTE PTR [ebp+ebx*1+0x23982300],dh
  40716c:	es daa 
  40716e:	les    eax,FWORD PTR [eax]
  407170:	sub    ch,BYTE PTR [ebx]
  407172:	les    ebp,FWORD PTR [ecx]
  407174:	cs add ah,al
  407177:	in     eax,dx
  407178:	xor    DWORD PTR [ebx],esi
  40717a:	add    BYTE PTR [eax],al
  40717c:	enter  0x35f1,0x37
  407180:	ins    BYTE PTR es:[edi],dx
  407181:	idiv   edi
  407183:	inc    DWORD PTR [eax+eax*1+0x5f740000]
  40718a:	popa   
  40718b:	arpl   WORD PTR [eax-0x63989a9f],bx
  407191:	imul   ebp,DWORD PTR gs:[ebx+0x70],0x446f6d6b
  407199:	das    
  40719a:	jno    0x40720f
  40719c:	dec    eax
  40719d:	xor    esi,DWORD PTR [ebp+0x77]
  4071a0:	ins    BYTE PTR es:[edi],dx
  4071a1:	aaa    
  4071a2:	jns    0x4071a4
  4071a4:	inc    esp
  4071a5:	add    BYTE PTR [esi+0x5f],bl
  4071a8:	push   esp
  4071a9:	pop    edi
  4071aa:	popa   
  4071ab:	arpl   WORD PTR [eax+0x63],bx
  4071ae:	gs addr16 pop esp
  4071b1:	imul   ebp,DWORD PTR [bp+di-0x10],0x46f6d6a
  4071b9:	das    
  4071ba:	jno    0x40722f
  4071bc:	or     BYTE PTR [ebx],dh
  4071be:	jne    0x407237
  4071c0:	popf   
  4071c1:	jno    0x40719f
  4071c3:	jns    0x407162
  4071c5:	test   DWORD PTR [ebx],eax
  4071c7:	jle    0x407166
  4071c9:	imul   eax,DWORD PTR [ebx],0x3699d00
  4071cf:	add    BYTE PTR [ebp-0x62fffc97],bl
  4071d5:	imul   eax,DWORD PTR [ebx],0x3699d00
  4071db:	add    BYTE PTR [ebp+0x369],bl
  4071e1:	add    BYTE PTR [ebp-0x62fffc97],bl
  4071e7:	imul   eax,DWORD PTR [ebx],0x3699d00
  4071ed:	add    BYTE PTR [ebp-0x62fffc97],bl
  4071f3:	imul   eax,DWORD PTR [ebx],0x3699d00
  4071f9:	add    BYTE PTR [ebp-0x62fffc97],bl
  4071ff:	imul   eax,DWORD PTR [ebx],0x3699d00
  407205:	add    BYTE PTR [ebp-0x62fffc97],bl
  40720b:	imul   eax,DWORD PTR [ebx],0x3699d00
  407211:	add    BYTE PTR [ebp-0x62fffc97],bl
  407217:	imul   eax,DWORD PTR [ebx],0x3699d00
  40721d:	add    BYTE PTR [ebp-0x62fffc97],bl
  407223:	imul   eax,DWORD PTR [ebx],0x3699d00
  407229:	add    BYTE PTR [ebp-0x62fffc97],bl
  40722f:	imul   eax,DWORD PTR [ebx],0x3699d00
  407235:	add    BYTE PTR [ebp-0x62fffc97],bl
  40723b:	add    ch,cl
  40723d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407243:	add    ch,cl
  407245:	add    eax,DWORD PTR [eax]
  407247:	add    BYTE PTR [ebp-0x62fc16fe],bl
  40724d:	add    al,BYTE PTR [esi]
  40724f:	push   esi
  407250:	add    dl,BYTE PTR [ebx-0x2]
  407253:	push   ebp
  407254:	cli    
  407255:	push   edx
  407256:	not    BYTE PTR [ebp-0xe]
  407259:	push   edx
  40725a:	out    dx,al
  40725b:	push   ebp
  40725c:	jmp    0xde52:0xe255e652
  407263:	push   ebp
  407264:	ficom  DWORD PTR [edx-0x2a]
  407267:	push   ebp
  407268:	rcl    BYTE PTR [edx-0x32],cl
  40726b:	push   ebp
  40726c:	retf   0xc652
  40726f:	push   ebp
  407270:	ret    0xbe52
  407273:	push   ebp
  407274:	mov    edx,0xb255b652
  407279:	push   edx
  40727a:	scas   al,BYTE PTR es:[edi]
  40727b:	push   ebp
  40727c:	stos   BYTE PTR es:[edi],al
  40727d:	push   edx
  40727e:	jmp    0xe5401185
  407283:	(bad)  
  407284:	mov    al,ds:0x920ae109
  407289:	push   edx
  40728a:	mov    ss,WORD PTR [ebp-0x76]
  40728d:	push   edx
  40728e:	xchg   BYTE PTR [edx],cl
  407290:	xchg   esi,eax
  407291:	(bad)  
  407292:	jmp    0x407299
  407294:	stos   BYTE PTR es:[edi],al
  407295:	push   ecx
  407296:	jbe    0x4072ed
  407298:	jb     0x4072ec
  40729a:	outs   dx,BYTE PTR ds:[esi]
  40729b:	push   ebp
  40729c:	push   0x52
  40729e:	push   bp
  4072a0:	bound  edx,QWORD PTR [edx+0x5e]
  4072a3:	push   ebp
  4072a4:	pop    edx
  4072a5:	push   edx
  4072a6:	push   esi
  4072a7:	push   ebp
  4072a8:	push   edx
  4072a9:	push   edx
  4072aa:	dec    esi
  4072ab:	push   ebp
  4072ac:	add    BYTE PTR [eax],al
  4072ae:	dec    edx
  4072af:	push   edx
  4072b0:	inc    esi
  4072b1:	or     dl,BYTE PTR [esi-0x55fa1402]
  4072b7:	push   ecx
  4072b8:	add    BYTE PTR [esi],dh
  4072ba:	enter  0xff51,0x2e
  4072be:	rcl    BYTE PTR [ecx-0x1],1
  4072c1:	es enter 0xff51,0x1e
  4072c6:	jo     0x407319
  4072c8:	call   DWORD PTR [esi]
  4072ca:	push   0x700eff51
  4072cf:	push   ecx
  4072d0:	(bad)  
  4072d1:	jmp    0xe9407574
  4072d6:	sahf   
  4072d7:	add    al,BYTE PTR [eax]
  4072d9:	jmp    0xe940757c
  4072de:	sahf   
  4072df:	add    al,BYTE PTR [eax]
  4072e1:	jmp    0xe9407584
  4072e6:	sahf   
  4072e7:	add    al,BYTE PTR [eax]
  4072e9:	jmp    0xe940758c
  4072ee:	sahf   
  4072ef:	add    al,BYTE PTR [eax]
  4072f1:	jmp    0xe9407594
  4072f6:	sahf   
  4072f7:	add    al,BYTE PTR [eax]
  4072f9:	jmp    0xe940759c
  4072fe:	sahf   
  4072ff:	add    al,BYTE PTR [eax]
  407301:	jmp    0xe94075a4
  407306:	sahf   
  407307:	add    al,BYTE PTR [eax]
  407309:	jmp    0xe94075ac
  40730e:	sahf   
  40730f:	add    al,BYTE PTR [eax]
  407311:	jmp    0x2de7316
  407316:	add    cl,ch
  407318:	sahf   
  407319:	add    al,BYTE PTR [eax]
  40731b:	jmp    0xe94075be
  407320:	sahf   
  407321:	add    al,BYTE PTR [eax]
  407323:	jmp    0xe94075c6
  407328:	sahf   
  407329:	add    al,BYTE PTR [eax]
  40732b:	jmp    0xe94075ce
  407330:	sahf   
  407331:	add    al,BYTE PTR [eax]
  407333:	add    BYTE PTR [eax*1+0x5440000],dh
  40733a:	add    BYTE PTR [eax],al
  40733c:	inc    esp
  40733d:	add    eax,0x5340000
  407342:	add    BYTE PTR [eax],al
  407344:	xor    al,0x5
  407346:	add    BYTE PTR [eax],al
  407348:	add    al,0x5
  40734a:	add    BYTE PTR [eax],al
  40734c:	add    al,0x5
  40734e:	add    BYTE PTR [eax],al
  407350:	hlt    
  407351:	add    al,0x0
  407353:	add    ah,dh
  407355:	add    al,0x0
  407357:	add    BYTE PTR [eax*1+0x5040000],al
  40735e:	add    BYTE PTR [eax],al
  407360:	hlt    
  407361:	add    al,0x0
  407363:	add    ah,dh
  407365:	add    al,0x0
  407367:	add    ah,al
  407369:	add    al,0x0
  40736b:	add    ah,al
  40736d:	add    al,0x0
  40736f:	add    BYTE PTR [esp+eax*1+0x5b40000],dh
  407376:	add    DWORD PTR [eax],eax
  407378:	add    BYTE PTR [eax],al
  40737a:	lds    eax,FWORD PTR ds:0x5c50101
  407380:	add    DWORD PTR [ecx],eax
  407382:	mov    ch,0x5
  407384:	add    DWORD PTR [ecx],eax
  407386:	mov    ch,0x5
  407388:	add    DWORD PTR [ecx],eax
  40738a:	test   DWORD PTR [edi],eax
  40738c:	add    DWORD PTR [ecx],eax
  40738e:	test   DWORD PTR [edi],eax
  407390:	add    DWORD PTR [ecx],eax
  407392:	jne    0x40739b
  407394:	add    DWORD PTR [eax],eax
  407396:	jne    0x40739f
  407398:	add    DWORD PTR [ecx],eax
  40739a:	test   DWORD PTR [edi],eax
  40739c:	add    DWORD PTR [ecx],eax
  40739e:	test   DWORD PTR [edi],eax
  4073a0:	add    DWORD PTR [ecx],eax
  4073a2:	jne    0x4073ab
  4073a4:	add    DWORD PTR [ecx],eax
  4073a6:	jne    0x4073af
  4073a8:	add    DWORD PTR [ecx],eax
  4073aa:	inc    ebp
  4073ab:	pop    es
  4073ac:	add    DWORD PTR [ecx],eax
  4073ae:	popf   
  4073af:	pop    edx
  4073b0:	add    al,0x1
  4073b2:	pushf  
  4073b3:	pop    edx
  4073b4:	add    al,0x1
  4073b6:	pushf  
  4073b7:	pop    edx
  4073b8:	add    al,0x1
  4073ba:	pushf  
  4073bb:	pop    edx
  4073bc:	add    al,0x1
  4073be:	pushf  
  4073bf:	pop    edx
  4073c0:	add    al,0x1
  4073c2:	pushf  
  4073c3:	pop    edx
  4073c4:	add    al,0x1
  4073c6:	pushf  
  4073c7:	pop    edx
  4073c8:	add    al,0x1
  4073ca:	pushf  
  4073cb:	pop    edx
  4073cc:	add    al,0x1
  4073ce:	pushf  
  4073cf:	pop    edx
  4073d0:	add    al,0x1
  4073d2:	pushf  
  4073d3:	pop    edx
  4073d4:	add    al,0x1
  4073d6:	popf   
  4073d7:	pop    ecx
  4073d8:	add    eax,DWORD PTR [eax]
  4073da:	popf   
  4073db:	pop    ecx
  4073dc:	add    eax,DWORD PTR [eax]
  4073de:	add    BYTE PTR [eax],al
  4073e0:	popf   
  4073e1:	pop    ecx
  4073e2:	add    eax,DWORD PTR [eax]
  4073e4:	popf   
  4073e5:	pop    ecx
  4073e6:	add    eax,DWORD PTR [eax]
  4073e8:	popf   
  4073e9:	pop    ecx
  4073ea:	add    eax,DWORD PTR [eax]
  4073ec:	popf   
  4073ed:	pop    ecx
  4073ee:	add    eax,DWORD PTR [eax]
  4073f0:	popf   
  4073f1:	pop    ecx
  4073f2:	add    eax,DWORD PTR [eax]
  4073f4:	popf   
  4073f5:	pop    ecx
  4073f6:	add    eax,DWORD PTR [eax]
  4073f8:	popf   
  4073f9:	pop    ecx
  4073fa:	add    eax,DWORD PTR [eax]
  4073fc:	popf   
  4073fd:	pop    ecx
  4073fe:	add    eax,DWORD PTR [eax]
  407400:	popf   
  407401:	pop    ecx
  407402:	add    eax,DWORD PTR [eax]
  407404:	popf   
  407405:	pop    ecx
  407406:	add    eax,DWORD PTR [eax]
  407408:	popf   
  407409:	pop    ecx
  40740a:	add    eax,DWORD PTR [eax]
  40740c:	popf   
  40740d:	pop    ecx
  40740e:	add    eax,DWORD PTR [eax]
  407410:	popf   
  407411:	pop    ecx
  407412:	add    eax,DWORD PTR [eax]
  407414:	popf   
  407415:	pop    ecx
  407416:	add    eax,DWORD PTR [eax]
  407418:	popf   
  407419:	pop    ecx
  40741a:	add    eax,DWORD PTR [eax]
  40741c:	popf   
  40741d:	pop    ecx
  40741e:	add    eax,DWORD PTR [eax]
  407420:	popf   
  407421:	pop    ecx
  407422:	add    eax,DWORD PTR [eax]
  407424:	popf   
  407425:	pop    ecx
  407426:	add    eax,DWORD PTR [eax]
  407428:	popf   
  407429:	add    ch,cl
  40742b:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407431:	add    ch,cl
  407433:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407439:	add    ch,cl
  40743b:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407441:	add    ch,cl
  407443:	add    eax,DWORD PTR [eax]
  407445:	add    BYTE PTR [ebp-0x62fc16fe],bl
  40744b:	add    ch,cl
  40744d:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  407453:	add    ch,cl
  407455:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  40745b:	add    bl,BYTE PTR [ecx-0x38]
  40745e:	cmp    eax,DWORD PTR [esp+eiz*2+0x6152a89f]
  407465:	sub    eax,0xf79243de
  40746a:	lods   al,BYTE PTR ds:[esi]
  40746b:	cdq    
  40746c:	test   al,0x13
  40746e:	mov    es,WORD PTR ds:0x47b9c20e
  407474:	int3   
  407475:	in     eax,0xb8
  407477:	shl    DWORD PTR [eax+0x79c22cd9],cl
  40747d:	mov    bh,0xba
  40747f:	dec    esi
  407480:	bound  ebx,QWORD PTR [edi-0x7f]
  407483:	sub    esp,DWORD PTR [ecx+0x5b]
  407486:	mov    ebx,0x4bba48aa
  40748b:	cmp    ebp,DWORD PTR [ecx+0x61]
  40748e:	pop    esi
  40748f:	stos   BYTE PTR es:[edi],al
  407490:	xchg   DWORD PTR [edi-0x39],edx
  407493:	jmp    0xc0d3:0xd8f55b6f
  40749a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749b:	pop    ecx
  40749c:	imul   BYTE PTR [ebx+0x57]
  40749f:	jns    0x407495
  4074a1:	test   BYTE PTR ds:0xcf3b005b,cl
  4074a7:	loop   0x4074a8
  4074a9:	cwde   
  4074aa:	add    BYTE PTR [eax],al
  4074ac:	sahf   
  4074ad:	add    al,BYTE PTR [eax]
  4074af:	jns    0x407468
  4074b1:	outs   dx,BYTE PTR ds:[esi]
  4074b2:	mov    DWORD PTR ss:[edi-0x587ac966],esi
  4074b9:	xchg   esi,eax
  4074ba:	lea    esp,ss:[edi+0x7d2d99fc]
  4074c1:	addr16 push esp
  4074c3:	fwait
  4074c4:	mov    ?,WORD PTR [eax+0x3d]
  4074c7:	ss jl  0x407451
  4074ca:	push   esi
  4074cb:	fild   DWORD PTR [ecx]
  4074cd:	jmp    0x407466
  4074cf:	mov    ebp,0x6b983c70
  4074d4:	mov    esp,DWORD PTR [ecx+0x76]
  4074d7:	lds    esp,FWORD PTR [ebp-0x5a32c8ea]
  4074dd:	(bad)  
  4074de:	ss mov ch,0x95
  4074e1:	mov    dh,0x36
  4074e3:	popf   
  4074e4:	xchg   ebp,eax
  4074e5:	out    0x36,al
  4074e7:	test   DWORD PTR [ebp+0x5ab871d6],eax
  4074ed:	mov    al,ds:0xd25f7d47
  4074f2:	inc    ebx
  4074f3:	std    
  4074f4:	mov    edx,0xf525cd61
  4074f9:	adc    BYTE PTR [ecx+eiz*2+0xf],al
  4074fd:	out    0x77,eax
  4074ff:	test   BYTE PTR [eax-0x6c],bl
  407502:	mov    eax,0x3766956a
  407507:	lds    eax,FWORD PTR [ebp-0x7a52c8aa]
  40750d:	push   es
  40750e:	cmp    ch,dh
  407510:	add    BYTE PTR [eax],al
  407512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407513:	div    BYTE PTR [edi]
  407515:	std    
  407516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407517:	es cmp dh,al
  40751a:	retf   0xba98
  40751d:	push   ebx
  40751e:	push   edx
  40751f:	xor    al,0x8e
  407521:	add    BYTE PTR [ebx],dh
  407523:	(bad)  
  407524:	pop    ecx
  407525:	pop    es
  407526:	retf   0x6c44
  407529:	(bad)  
  40752a:	push   ss
  40752b:	cmp    al,0xc0
  40752d:	push   ebp
  40752e:	pop    edi
  40752f:	test   DWORD PTR [eax-0x6c059493],0xa3f9d038
  407539:	cmp    BYTE PTR [eax],ah
  40753b:	stc    
  40753c:	mov    bl,0x38
  40753e:	adc    cl,bh
  407540:	ret    
  407541:	cmp    BYTE PTR [eax-0x7],dh
  407544:	sar    DWORD PTR [eax],cl
  407546:	nop
  407547:	mov    eax,0xe4945d03
  40754c:	adc    al,0x61
  40754e:	push   ss
  40754f:	je     0x40759e
  407551:	std    
  407552:	ds jbe 0x4075a6
  407555:	imul   eax,DWORD PTR [ecx],0x13d05b64
  40755b:	das    
  40755c:	out    0xb9,al
  40755e:	pop    ecx
  40755f:	in     eax,dx
  407560:	cmp    DWORD PTR es:[eax],esi
  407563:	clc    
  407564:	push   ebx
  407565:	cmp    DWORD PTR [eax],edx
  407567:	clc    
  407568:	arpl   WORD PTR [ecx],di
  40756a:	and    al,bh
  40756c:	jae    0x4075a7
  40756e:	jo     0x407568
  407570:	cmp    DWORD PTR [ecx],0x50
  407573:	call   FWORD PTR [ecx-0x26]
  407576:	add    BYTE PTR [eax],al
  407578:	loop   0x407588
  40757a:	xor    al,0x83
  40757c:	ja     0x4075e5
  40757e:	jo     0x407511
  407580:	aam    0x78
  407582:	cdq    
  407583:	(bad)  
  407584:	sub    dh,BYTE PTR [esi-0x377fd4f0]
  40758a:	sub    eax,0x5332b7e
  40758f:	dec    ebp
  407590:	lock inc BYTE PTR [ebx]
  407593:	cmp    dl,BYTE PTR [eax-0x6fc5ec06]
  407599:	cli    
  40759a:	and    edi,DWORD PTR [edx]
  40759c:	popf   
  40759d:	inc    ebp
  40759e:	or     DWORD PTR [edi+eax*8],esi
  4075a1:	cmp    eax,0x11f04409
  4075a6:	push   esp
  4075a7:	dec    ecx
  4075a8:	imul   ebx,ebx,0xffffffde
  4075ab:	in     al,dx
  4075ac:	(bad)  
  4075ad:	gs mov eax,0xa8a97f54
  4075b3:	es popa 
  4075b5:	jno    0x407569
  4075b7:	add    BYTE PTR [edx],0x5a
  4075ba:	fisub  WORD PTR [ecx-0x22]
  4075bd:	aad    0x9
  4075bf:	mov    ah,0x87
  4075c1:	jge    0x4075cd
  4075c3:	les    esi,FWORD PTR [edi+0x15]
  4075c6:	or     dl,ah
  4075c8:	ja     0x4075b7
  4075ca:	or     esp,esp
  4075cc:	lds    ecx,FWORD PTR [bx+di]
  4075cf:	hlt    
  4075d0:	addr16 pop esp
  4075d2:	jns    0x4075c7
  4075d4:	add    ecx,esp
  4075d6:	dec    esi
  4075d7:	(bad)  [ecx-0x7e]
  4075da:	cmp    al,0x7f
  4075dc:	add    BYTE PTR [eax],al
  4075de:	xchg   DWORD PTR [ebp+0x40],esp
  4075e1:	xchg   ebx,eax
  4075e2:	ss mov bl,0x51
  4075e5:	test   al,0x9a
  4075e7:	mov    edi,DWORD PTR [edx+0x35]
  4075ea:	jge    0x4075c4
  4075ec:	mul    DWORD PTR [ebx-0x5a]
  4075ef:	test   DWORD PTR [edx],ecx
  4075f1:	je     0x407599
  4075f3:	fisttp QWORD PTR [ecx]
  4075f5:	test   BYTE PTR [esi-0x696bf62b],dl
  4075fb:	int    0x9
  4075fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075fe:	xchg   BYTE PTR [ebp+0x1293ad4b],al
  407604:	xor    eax,DWORD PTR [edx+0x7c195933]
  40760a:	or     bh,ch
  40760c:	pushf  
  40760d:	sti    
  40760e:	sbb    ebx,ebp
  407610:	xchg   esi,eax
  407611:	mov    ebp,0x69c35288
  407616:	mov    dh,0x2
  407618:	pop    ds
  407619:	dec    eax
  40761a:	loopne 0x40762a
  40761c:	std    
  40761d:	xadd   DWORD PTR [esi],ecx
  407620:	lds    ecx,FWORD PTR [edi]
  407622:	leave  
  407623:	push   cs
  407624:	int    0xf
  407626:	loope  0x407636
  407628:	xor    eax,0x1d0ec910
  40762d:	adc    BYTE PTR [eax],dh
  40762f:	jbe    0x407694
  407631:	push   ecx
  407632:	sbb    eax,0x5647ab7d
  407637:	fdiv   QWORD PTR [ebx]
  407639:	loop   0x4075bf
  40763b:	cmp    dl,BYTE PTR [ecx]
  40763d:	pop    ebx
  40763e:	push   edi
  40763f:	mov    al,0x32
  407641:	and    eax,0x9e340000
  407646:	loop   0x407696
  407648:	mov    esp,esp
  40764a:	and    BYTE PTR [edi],cl
  40764c:	cmp    DWORD PTR [esi],ecx
  40764e:	cmp    DWORD PTR [edi],ecx
  407650:	sub    DWORD PTR [esi],ecx
  407652:	add    eax,0xed0d6911
  407657:	adc    BYTE PTR [ecx+0xd],ah
  40765a:	mov    ch,0x10
  40765c:	imul   ecx,DWORD PTR [esi+0x4f8eebf],0x98eb05f9
  407666:	xchg   BYTE PTR [edx-0x60],dh
  407669:	pushf  
  40766a:	js     0x4076c4
  40766c:	cmp    DWORD PTR [edx],esp
  40766e:	dec    edx
  40766f:	dec    ebp
  407670:	mov    esi,0x2caa37d0
  407675:	frstor [eax]
  407677:	adc    cl,ah
  407679:	or     al,0xb5
  40767b:	psubsw mm1,QWORD PTR [edi*4-0x16f33ef1]
  407683:	rol    edx,cl
  407685:	dec    edx
  407686:	adc    DWORD PTR [ebx*4+0x6ebe7202],eax
  40768d:	mov    edi,cs
  40768f:	out    0xf0,eax
  407691:	xor    eax,DWORD PTR [eax]
  407693:	je     0x4076c2
  407695:	sahf   
  407696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407697:	repnz test BYTE PTR [edx],bh
  40769a:	out    dx,eax
  40769b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40769c:	jecxz  0x4076f1
  40769e:	cmp    al,0xff
  4076a0:	push   ds
  4076a1:	lea    ecx,[ebx+0x1d]
  4076a4:	jp     0x4076e4
  4076a6:	xor    eax,0x93000045
  4076ab:	call   0x3536:0x928b5536
  4076b2:	xchg   ebx,eax
  4076b3:	cmp    BYTE PTR ds:[ecx+0x71384e91],ah
  4076ba:	in     al,0x27
  4076bc:	sti    
  4076bd:	push   0x4cee8ad8
  4076c2:	mov    dh,0xd2
  4076c4:	xchg   edi,eax
  4076c5:	clc    
  4076c6:	test   BYTE PTR [ebx+0x5c973793],dl
  4076cc:	rdpmc  
  4076ce:	push   esi
  4076cf:	in     eax,0xd7
  4076d1:	icebp  
  4076d2:	pmulhw mm7,QWORD PTR [ecx]
  4076d5:	in     eax,0x94
  4076d7:	cmp    dl,BYTE PTR cs:[ecx]
  4076da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076db:	cmp    cl,BYTE PTR es:[ecx]
  4076de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076df:	pop    esi
  4076e0:	cmp    bl,BYTE PTR [ecx]
  4076e2:	xchg   edi,eax
  4076e3:	dec    esi
  4076e4:	cmp    dl,BYTE PTR [ecx]
  4076e6:	xchg   edi,eax
  4076e7:	pop    esi
  4076e8:	(bad)  
  4076e9:	cmp    ch,BYTE PTR [ecx+0x16f21fb]
  4076ef:	mov    ebp,0xa73027a6
  4076f4:	dec    esp
  4076f5:	inc    ebx
  4076f6:	icebp  
  4076f7:	cmp    BYTE PTR [edi],bl
  4076f9:	push   esp
  4076fa:	mov    eax,0xe87ebe40
  4076ff:	(bad)  
  407700:	dec    edx
  407701:	jno    0x407698
  407703:	jbe    0x407740
  407705:	jns    0x40769c
  407707:	outs   dx,BYTE PTR ds:[esi]
  407708:	cmp    esi,DWORD PTR [ecx-0x5b]
  40770b:	mov    bh,BYTE PTR [ebx]
  40770d:	add    BYTE PTR [eax],al
  40770f:	add    BYTE PTR [eax],bl
  407711:	sti    
  407712:	mov    edi,0xe3fafc3b
  407717:	std    
  407718:	repz mov edx,DWORD PTR [ecx]
  40771b:	adc    edi,DWORD PTR [ecx+0x49]
  40771e:	in     al,dx
  40771f:	std    
  407720:	xor    DWORD PTR [ecx+0x3],ebp
  407723:	mov    ecx,0xf1bc026b
  407728:	into   
  407729:	add    BYTE PTR [esi],bh
  40772b:	xor    DWORD PTR [eax+eax*2],0xffffff89
  40772f:	ret    0xf9a0
  407732:	and    edi,DWORD PTR ds:0xffffd574
  407738:	cwde   
  407739:	(bad)  
  40773a:	(bad)  
  40773b:	dec    DWORD PTR [eax-0xf]
  40773e:	jg     0x407774
  407740:	shl    cl,0x87
  407743:	xor    al,0x79
  407745:	call   0x89f95810
  40774a:	les    ebp,FWORD PTR [ecx-0x29]
  40774d:	retf   0x88a0
  407750:	mov    ecx,0xa7a088ba
  407755:	and    BYTE PTR [edi+0x20],0x7f
  407759:	retf   
  40775a:	test   BYTE PTR [esi+edx*2+0x2e],al
  40775e:	push   edx
  40775f:	aaa    
  407760:	(bad)  
  407761:	sti    
  407762:	call   0xb53b73a0
  407767:	cmp    ch,BYTE PTR [edx+0xd3c63fa]
  40776d:	stc    
  40776e:	mov    ch,0x3c
  407770:	les    esp,FWORD PTR [esi+0x5e84]
  407776:	xor    ebx,ebx
  407778:	mov    esp,0x486dfa19
  40777d:	or     ah,BYTE PTR [edi]
  40777f:	dec    ebp
  407780:	bound  edx,QWORD PTR [ecx+0x1d36c97]
  407786:	inc    ebx
  407787:	(bad)  
  407788:	out    0xf3,eax
  40778a:	popf   
  40778b:	cmp    DWORD PTR [ecx+0x4f],edx
  40778e:	jp     0x4077e9
  407790:	or     ah,BYTE PTR [edx+esi*2]
  407793:	add    BYTE PTR [ebx],cl
  407795:	inc    ebp
  407796:	push   0xffffffe6
  407798:	or     ah,BYTE PTR [ebx+0x62]
  40779b:	adc    cl,BYTE PTR [ebx]
  40779d:	jg     0x407779
  40779f:	mov    WORD PTR [ebx],cs
  4077a1:	loope  0x40780c
  4077a3:	(bad)  
  4077a4:	test   eax,0x4664b564
  4077a9:	mov    ?,WORD PTR [esi-0x73e6fd67]
  4077af:	fdiv   st,st(3)
  4077b1:	add    esi,ebx
  4077b3:	pop    esp
  4077b4:	mov    dl,0x5e
  4077b6:	mov    bh,0xf3
  4077b8:	fimul  WORD PTR [ecx+0x5d151ff5]
  4077be:	mov    WORD PTR [edx],es
  4077c0:	adc    eax,0x14dc8c6f
  4077c5:	nop
  4077c6:	mov    WORD PTR [eax+0x15],gs
  4077c9:	retf   0x78c
  4077cc:	adc    eax,0xd2fd2edd
  4077d1:	(bad)  
  4077d2:	mov    edi,0x91112547
  4077d7:	jo     0x407823
  4077d9:	nop
  4077da:	add    BYTE PTR [eax],al
  4077dc:	ret    0x33f5
  4077df:	cmp    edx,DWORD PTR [ebx+0x202ec720]
  4077e5:	retf   
  4077e6:	in     al,dx
  4077e7:	add    edx,DWORD PTR [eax]
  4077e9:	popa   
  4077ea:	setnp  cl
  4077ed:	dec    BYTE PTR [edi]
  4077ef:	ins    BYTE PTR es:[edi],dx
  4077f0:	mov    al,0x6d
  4077f2:	adc    BYTE PTR [ebx+0x22114da8],ah
  4077f8:	mov    bl,0x37
  4077fa:	adc    DWORD PTR [edi],esi
  4077fc:	stos   DWORD PTR es:[edi],eax
  4077fd:	(bad)  [edi+0x13542429]
  407803:	loopne 0x40786c
  407805:	add    ah,dl
  407807:	mov    edx,0x5aef484e
  40780c:	lods   eax,DWORD PTR ds:[esi]
  40780d:	pop    eax
  40780e:	or     DWORD PTR [ebx+edx*2-0xdffacac],ecx
  407815:	cmp    al,0x5a
  407817:	add    ah,al
  407819:	adc    BYTE PTR [ebx-0x61ef33ef],dh
  40781f:	adc    DWORD PTR [ecx+0x10],edi
  407822:	retf   0x8411
  407825:	adc    BYTE PTR [edi-0x52ef6fef],dl
  40782b:	sub    ebx,DWORD PTR [edx]
  40782d:	dec    ebp
  40782e:	sbb    eax,DWORD PTR [ebx+0x692b2d71]
  407834:	leave  
  407835:	aad    0xc3
  407837:	xor    al,0xf8
  407839:	mov    ds:0xb12bd96e,al
  40783e:	inc    eax
  40783f:	fadd   QWORD PTR [eax]
  407841:	add    ch,bh
  407843:	add    al,0xa0
  407845:	scas   eax,DWORD PTR es:[edi]
  407846:	jecxz  0x4077d4
  407848:	jl     0x40787a
  40784a:	pop    es
  40784b:	fimul  WORD PTR [eax+0x3f44e1a6]
  407851:	sub    al,0xe
  407853:	into   
  407854:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407856:	ins    DWORD PTR es:[edi],dx
  407857:	push   ebx
  407858:	jmp    0x534ab968
  40785d:	or     eax,DWORD PTR [eax]
  40785f:	or     ah,BYTE PTR [edx+0xb]
  407862:	out    dx,al
  407863:	or     DWORD PTR [eax-0x66cb321],esp
  407869:	and    eax,0xb6ee6372
  40786e:	and    eax,0x98a46faa
  407873:	sub    eax,0x88ec3749
  407878:	adc    DWORD PTR [ecx-0xf],0x2f
  40787c:	dec    ebx
  40787d:	ins    BYTE PTR es:[edi],dx
  40787e:	jp     0x4078f2
  407880:	add    ah,dl
  407882:	daa    
  407883:	and    ebp,esp
  407885:	pusha  
  407886:	xchg   ecx,eax
  407887:	cli    
  407888:	cdq    
  407889:	mov    ch,0x35
  40788b:	das    
  40788c:	out    dx,eax
  40788d:	hlt    
  40788e:	xchg   BYTE PTR ds:[ebp-0x2ee9e3dc],dl
  407895:	or     eax,0x6b19a9c6
  40789a:	(bad)  
  40789c:	push   0xfc399653
  4078a1:	mov    eax,0xe1365006
  4078a6:	add    BYTE PTR [eax],al
  4078a8:	cdq    
  4078a9:	sbb    BYTE PTR [ecx+0x32],bh
  4078ac:	cmp    al,0x29
  4078ae:	add    eax,ebx
  4078b0:	jbe    0x407860
  4078b2:	jge    0x4078ce
  4078b4:	lock push 0x21
  4078b7:	ret    
  4078b8:	mov    ah,BYTE PTR ds:0x732a308c
  4078be:	loope  0x4078b7
  4078c0:	dec    esi
  4078c1:	clc    
  4078c2:	add    DWORD PTR [ebx],esi
  4078c4:	ds je  0x40792d
  4078c7:	xor    DWORD PTR [ebx-0x1c],esp
  4078ca:	dec    eax
  4078cc:	out    dx,al
  4078cd:	rcl    ch,0x31
  4078d0:	and    bl,BYTE PTR [ebx+ebp*8]
  4078d3:	mov    edi,0xe121c355
  4078d8:	es retf 0xefe4
  4078dc:	push   eax
  4078dd:	mov    eax,0x27e4ccd5
  4078e2:	sub    eax,0xd1728953
  4078e7:	pop    ebp
  4078e8:	mov    eax,edi
  4078ea:	cmp    ecx,DWORD PTR [ecx-0x2e]
  4078ed:	aad    0x23
  4078ef:	rcr    BYTE PTR [esi+0x4af05291],cl
  4078f5:	mov    DWORD PTR [ecx+esi*8+0x6b8191],ebp
  4078fc:	bound  esi,QWORD PTR [edx-0x2222a5bf]
  407902:	daa    
  407903:	xchg   ebp,eax
  407904:	or     ebp,DWORD PTR [edx+0x6f]
  407907:	xchg   esi,eax
  407908:	mov    DWORD PTR [esi+0xa836],esi
  40790e:	pop    ecx
  40790f:	inc    ebx
  407910:	rcl    BYTE PTR [edx],1
  407912:	addr16 or eax,0xa9eade5
  407918:	pop    esi
  407919:	sti    
  40791a:	adc    bh,BYTE PTR [ebx+0x2]
  40791d:	shl    al,1
  40791f:	leave  
  407920:	mov    edi,0x36710e76
  407925:	dec    ebx
  407926:	mov    ds,WORD PTR [edx+0x33]
  407929:	cmp    bl,BYTE PTR [edx-0x7c]
  40792c:	cs loopne 0x40791a
  40792f:	imul   esi,DWORD PTR [edx],0x2d
  407932:	add    al,al
  407934:	out    dx,eax
  407935:	push   ecx
  407936:	xchg   edx,eax
  407937:	xor    ecx,eax
  407939:	cwde   
  40793a:	pop    ebp
  40793b:	push   ecx
  40793c:	jmp    0xa792:0xa42281ed
  407943:	shl    DWORD PTR [ecx],cl
  407945:	mov    edx,0x57f011e8
  40794a:	and    cl,ch
  40794c:	xor    ah,dh
  40794e:	jle    0x4079cf
  407950:	inc    edi
  407951:	sbb    BYTE PTR [edx+ebp*8+0x76482996],0xbe
  407959:	pop    eax
  40795a:	jmp    0x2ab8:0xb8e2153d
  407961:	or     esi,DWORD PTR es:[ebp+0x4441b330]
  407968:	xchg   cl,ch
  40796a:	xchg   DWORD PTR [esi-0x4e572ea5],esp
  407970:	xchg   al,ah
  407972:	add    BYTE PTR [eax],al
  407974:	mov    ds:0x9d8d553e,al
  407979:	jns    0x407907
  40797b:	or     al,0xa
  40797d:	and    ah,ch
  40797f:	dec    esp
  407980:	aam    0x39
  407982:	xor    dh,dh
  407984:	and    BYTE PTR [edx-0x72],al
  407987:	retf   0xa5ff
  40798a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798b:	mov    ecx,0xcd9aa30f
  407990:	in     al,dx
  407991:	dec    eax
  407992:	fst    QWORD PTR [edx+0x51e0e0c1]
  407998:	xchg   esi,eax
  407999:	outs   dx,BYTE PTR ds:[esi]
  40799a:	jbe    0x40792d
  40799c:	xor    ebp,DWORD PTR [ebp-0xd]
  40799f:	out    0x6c,eax
  4079a1:	pop    edx
  4079a2:	jmp    0x4079cf
  4079a4:	mov    ds:0xc41336d9,al
  4079a9:	add    eax,0xd980c10a
  4079ae:	(bad)  
  4079af:	loope  0x407941
  4079b1:	daa    
  4079b2:	pop    edi
  4079b3:	pop    ss
  4079b4:	push   edi
  4079b5:	sbb    bh,BYTE PTR [ecx+0x16]
  4079b8:	call   FWORD PTR [ecx]
  4079ba:	das    
  4079bb:	adc    eax,0x882c23f6
  4079c0:	aam    0x91
  4079c2:	(bad)  
  4079c3:	pop    DWORD PTR [esi]
  4079c5:	retf   
  4079c6:	sbb    ebp,DWORD PTR [eax+0x75cde31a]
  4079cc:	xor    bl,BYTE PTR [esi+0x4e71c5b4]
  4079d2:	xchg   esp,eax
  4079d3:	pop    eax
  4079d4:	jb     0x407987
  4079d6:	mov    esi,0xed000013
  4079db:	imul   edx,DWORD PTR [ecx-0x29],0xbb9d8122
  4079e2:	mov    esp,0x54c29b45
  4079e7:	jge    0x407a4c
  4079e9:	mov    ecx,0xc6ae2fc
  4079ee:	fstp   st(1)
  4079f0:	push   0xffffffd9
  4079f2:	jle    0x4079f6
  4079f4:	retf   0x508d
  4079f7:	scas   eax,DWORD PTR es:[edi]
  4079f8:	cs (bad) 
  4079fa:	sub    al,0x5a
  4079fc:	shl    DWORD PTR [eax+ebx*2],cl
  4079ff:	daa    
  407a00:	in     al,dx
  407a01:	ja     0x40799d
  407a03:	mov    ebp,0x88416b08
  407a08:	(bad)
  407a0b:	(bad)  
  407a0c:	shl    DWORD PTR [esi+0x3e9025f],1
  407a12:	popf   
  407a13:	add    ch,cl
  407a15:	add    ebx,DWORD PTR [ebp+0x5c909602]
  407a1b:	add    dh,BYTE PTR [esi]
  407a1d:	mov    ds,WORD PTR [edx+eax*1-0x17]
  407a21:	add    ebx,DWORD PTR [ebp+0x5c8d7902]
  407a27:	add    bl,BYTE PTR [edi-0x6dfd2373]
  407a2d:	add    edx,eax
  407a2f:	add    bh,BYTE PTR [ebp+0x7c]
  407a32:	fld    QWORD PTR [edx]
  407a34:	mov    al,ds:0x45029803
  407a39:	jl     0x407a18
  407a3b:	add    ah,bl
  407a3d:	add    eax,DWORD PTR [eax]
  407a3f:	add    dl,al
  407a41:	add    dl,BYTE PTR ds:0x3102dd7d
  407a47:	add    al,0x98
  407a49:	add    cl,BYTE PTR ds:0xfa02dd7d
  407a4f:	add    ebx,DWORD PTR [eax-0x2282fafe]
  407a55:	add    ah,BYTE PTR [ebp+0x3]
  407a58:	xchg   ebx,eax
  407a59:	add    dh,BYTE PTR [ebp+0x602dd7c]
  407a5f:	add    al,0x89
  407a61:	add    cl,BYTE PTR ds:0xac02dd7d
  407a67:	add    edx,DWORD PTR [edx+eax*1+0x25d7cf9]
  407a6e:	add    BYTE PTR [eax+0xfffc9e],ch
  407a74:	mov    dl,al
  407a76:	call   FWORD PTR ds:0xc8fffd9e
  407a7c:	jns    0x407a40
  407a7e:	call   DWORD PTR [eax-0x13000062]
  407a84:	imul   eax,edx,0xef9eabff
  407a8a:	push   eax
  407a8c:	pop    ecx
  407a8d:	ret    0xdeff
  407a90:	sahf   
  407a91:	clc    
  407a92:	(bad)  
  407a93:	in     al,dx
  407a94:	inc    edi
  407a95:	ret    0x1dff
  407a98:	cdq    
  407a99:	cld    
  407a9a:	call   esp
  407a9c:	cmp    edx,eax
  407a9e:	inc    DWORD PTR [esi-0x67]
  407aa1:	cld    
  407aa2:	(bad)  
  407aa3:	mov    esp,0xc2290000
  407aa8:	(bad)  
  407aa9:	mov    eax,0xc8fff999
  407aae:	sbb    ebx,eax
  407ab0:	dec    esi
  407ab2:	cdq    
  407ab3:	push   es
  407ab4:	add    BYTE PTR [ecx-0x35003cf7],dl
  407aba:	sahf   
  407abb:	or     al,BYTE PTR [eax]
  407abd:	lods   eax,DWORD PTR ds:[esi]
  407abe:	stc    
  407abf:	ret    0x9eff
  407ac2:	cdq    
  407ac3:	adc    BYTE PTR [eax],al
  407ac5:	dec    ebp
  407ac6:	jmp    0x99757a8d
  407acb:	add    eax,0xc2d94100
  407ad0:	(bad)  
  407ad1:	ficomp DWORD PTR [esi-0x36c6fffa]
  407ad7:	ret    0xafff
  407ada:	sahf   
  407adb:	or     eax,DWORD PTR [eax]
  407add:	test   DWORD PTR [ecx-0x66c7003e],edi
  407ae3:	repnz (bad) 
  407ae5:	fsub   DWORD PTR [esi+0x27ffffc2]
  407aeb:	push   es
  407aec:	pop    es
  407aed:	add    ah,ch
  407aef:	mov    ebp,0x6a9003f
  407af4:	or     DWORD PTR [eax],eax
  407af6:	sbb    BYTE PTR [esi+0x691003f],bh
  407afc:	or     al,BYTE PTR [eax]
  407afe:	xor    al,0xbe
  407b00:	aas    
  407b01:	add    BYTE PTR [edi],ch
  407b03:	push   es
  407b04:	adc    al,BYTE PTR [eax]
  407b06:	fdivr  DWORD PTR [ebp+0x3f]
  407b0c:	pop    ecx
  407b0d:	push   es
  407b0e:	and    BYTE PTR [eax],al
  407b10:	mov    esp,0xe0003fbd
  407b15:	add    eax,0xbde40004
  407b1a:	aas    
  407b1b:	add    ch,bh
  407b1d:	add    eax,0xbee80021
  407b22:	aas    
  407b23:	add    BYTE PTR [ebx+0xc003206],ah
  407b29:	mov    edi,0x663003f
  407b2e:	and    al,BYTE PTR [eax]
  407b30:	lock mov esi,0x5f9003f
  407b36:	or     al,0x0
  407b38:	add    BYTE PTR [edi+0x560003f],bh
  407b3e:	sbb    eax,DWORD PTR [eax]
  407b40:	mov    WORD PTR [edi+0x53c003f],?
  407b46:	verw   WORD PTR [edi+edi*4+0x5a6003f]
  407b4e:	or     BYTE PTR [eax],al
  407b50:	mov    BYTE PTR [edi+0x503003f],bh
  407b56:	add    eax,0x3fbf8000
  407b5b:	add    BYTE PTR [ebp+eax*1+0x2],ch
  407b5f:	add    BYTE PTR [esi+edi*4],al
  407b62:	aas    
  407b63:	add    BYTE PTR [ebp-0x62ebfcd7],bl
  407b69:	add    edi,DWORD PTR [ebp+0x40]
  407b6c:	popf   
  407b6d:	mov    dl,0x2
  407b6f:	adc    DWORD PTR [eax],eax
  407b71:	add    BYTE PTR [ebp-0x62bf83a9],bl
  407b77:	(bad)  
  407b78:	add    dl,BYTE PTR [ecx]
  407b7a:	popf   
  407b7b:	sub    edi,DWORD PTR [eax+eax*2-0x63]
  407b7f:	int3   
  407b80:	add    al,BYTE PTR [edi]
  407b82:	popf   
  407b83:	jecxz  0x407c01
  407b85:	inc    eax
  407b86:	popf   
  407b87:	popf   
  407b88:	add    ecx,DWORD PTR [esi]
  407b8a:	popf   
  407b8b:	add    edi,DWORD PTR [ebp+0x40]
  407b8e:	popf   
  407b8f:	imul   eax,DWORD PTR [ebx],0xc
  407b92:	popf   
  407b93:	jecxz  0x407c11
  407b95:	inc    eax
  407b96:	popf   
  407b97:	lsl    eax,WORD PTR [ebx*4-0x62bf82e5]
  407b9f:	fs add al,0x7
  407ba2:	popf   
  407ba3:	jae    0x407b2f
  407ba5:	inc    eax
  407ba6:	popf   
  407ba7:	add    ecx,DWORD PTR es:0x408a939d
  407bae:	popf   
  407baf:	jae    0x407bb5
  407bb1:	or     BYTE PTR [ebp-0x62bf7573],bl
  407bb7:	jno    0x407bbd
  407bb9:	or     BYTE PTR [ebp-0x62bf7577],bl
  407bbf:	xor    eax,0x819d0703
  407bc4:	mov    al,BYTE PTR [eax-0x63]
  407bc7:	popf   
  407bc8:	add    al,0x15
  407bca:	popf   
  407bcb:	test   eax,0x9d4089
  407bd0:	add    al,0xb
  407bd2:	popf   
  407bd3:	xor    eax,0x4089
  407bd8:	popf   
  407bd9:	add    eax,0x19d0b04
  407bde:	mov    al,BYTE PTR [eax-0x63]
  407be1:	add    dl,BYTE PTR [eax+0x4]
  407be4:	pop    DWORD PTR [edx]
  407be6:	mov    ch,0x89
  407be8:	fld    QWORD PTR [edx]
  407bea:	add    BYTE PTR [esp+edx*4],al
  407bed:	add    ah,BYTE PTR [ecx+0x302dd89]
  407bf3:	add    al,0xae
  407bf5:	add    dh,ch
  407bf7:	mov    DWORD PTR [ebp+0x2],ebx
  407bfa:	sahf   
  407bfb:	add    edx,DWORD PTR [ebp+0x5d8a0102]
  407c01:	add    dh,BYTE PTR [ebx]
  407c03:	add    al,0xaa
  407c05:	add    al,BYTE PTR [ecx]
  407c07:	mov    bl,BYTE PTR [ebp+0x2]
  407c0a:	cmp    BYTE PTR [edx+eiz*4],al
  407c0d:	add    bh,cl
  407c0f:	mov    DWORD PTR [ebp+0x2],ebx
  407c12:	push   esi
  407c13:	add    al,0xa9
  407c15:	add    ch,cl
  407c17:	mov    DWORD PTR [ebp+0x2],ebx
  407c1a:	push   ecx
  407c1b:	add    al,0x94
  407c1d:	add    dh,ch
  407c1f:	mov    BYTE PTR [ebp+0x2],bl
  407c22:	fild   WORD PTR [ebx]
  407c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c25:	add    dl,cl
  407c27:	mov    BYTE PTR [ebp+0x2],bl
  407c2a:	add    al,0x4
  407c2c:	mov    eax,ds:0x5d88c902
  407c31:	add    al,BYTE PTR [ebx+eax*1-0x789efe1d]
  407c38:	fld    QWORD PTR [edx]
  407c3a:	fadd   QWORD PTR [ebx]
  407c3c:	add    BYTE PTR [eax],al
  407c3e:	lock add ch,BYTE PTR [ecx]
  407c41:	mov    ch,bl
  407c43:	add    dh,BYTE PTR [eax+0x3]
  407c46:	les    eax,FWORD PTR [edx]
  407c48:	cmc    
  407c49:	xchg   ebp,ebx
  407c4b:	add    ah,BYTE PTR [edi-0x1efd68fd]
  407c51:	xchg   ebp,ebx
  407c53:	add    ch,BYTE PTR [ecx+0x3]
  407c56:	mov    es,WORD PTR [edx]
  407c58:	xchg   ebp,eax
  407c59:	xchg   ch,bl
  407c5b:	add    al,BYTE PTR [eax]
  407c5d:	mov    ds:0x9d00079e,al
  407c62:	sbb    eax,edx
  407c64:	push   DWORD PTR [eax+0x2900099e]
  407c6a:	sbb    eax,edx
  407c6c:	jmp    DWORD PTR [ebp-0x62]
  407c6f:	out    dx,al
  407c70:	(bad)  
  407c71:	js     0x407c8e
  407c73:	ret    0xeeff
  407c76:	sahf   
  407c77:	push   cs
  407c78:	add    BYTE PTR [ecx+0x1b],ch
  407c7b:	ret    0x9aff
  407c7e:	sahf   
  407c7f:	(bad)  
  407c80:	push   eax
  407c82:	sbb    eax,edx
  407c84:	jmp    FWORD PTR [edx-0x26fff962]
  407c8a:	sbb    eax,edx
  407c8c:	call   edx
  407c8e:	sahf   
  407c8f:	push   es
  407c90:	add    cl,al
  407c92:	sbb    eax,edx
  407c94:	jmp    DWORD PTR [esi+ebx*4+0xc]
  407c98:	add    ch,bl
  407c9a:	sbb    eax,edx
  407c9c:	dec    DWORD PTR ds:0xd500089e
  407ca2:	add    BYTE PTR [eax],al
  407ca4:	sbb    eax,edx
  407ca6:	jmp    edi
  407ca8:	sahf   
  407ca9:	call   0xc25c49ad
  407cae:	(bad)  
  407caf:	jmp    0x407c4f
  407cb1:	add    eax,0xc21bc500
  407cb6:	(bad)  
  407cb7:	aas    
  407cb8:	mov    eax,ds:0x1b9d0005
  407cbd:	ret    
  407cbe:	jmp    FWORD PTR [esi]
  407cc0:	mov    eax,ds:0x1b910001
  407cc5:	ret    
  407cc6:	inc    DWORD PTR [ecx-0x56ffea5f]
  407ccc:	sbb    eax,ebx
  407cce:	dec    edi
  407cd0:	sahf   
  407cd1:	or     eax,0xc31b5900
  407cd6:	(bad)  
  407cd7:	jmp    DWORD PTR [ebp+0x2]
  407cda:	add    eax,0x4084ec00
  407cdf:	add    BYTE PTR [ebx+0x2],dh
  407ce2:	adc    al,0x0
  407ce4:	in     al,0x84
  407ce6:	inc    eax
  407ce7:	add    BYTE PTR [esi+eax*1-0x77abffe2],bl
  407cee:	inc    eax
  407cef:	add    BYTE PTR [ebx+0x6],bh
  407cf2:	pop    es
  407cf3:	add    BYTE PTR [eax+ecx*4+0x40],bl
  407cf7:	add    BYTE PTR [edi],cl
  407cf9:	add    dl,BYTE PTR [eax]
  407cfb:	add    BYTE PTR [eax],ch
  407cfd:	mov    BYTE PTR [eax+0x0],al
  407d00:	mov    ecx,0x20000606
  407d05:	mov    BYTE PTR [eax+0x0],al
  407d08:	add    BYTE PTR [eax],al
  407d0a:	add    DWORD PTR [edx],eax
  407d0c:	add    eax,DWORD PTR [eax]
  407d0e:	sub    al,0x88
  407d10:	inc    eax
  407d11:	add    BYTE PTR [eax],dh
  407d13:	add    ch,BYTE PTR [edi]
  407d15:	add    ah,ch
  407d17:	xchg   DWORD PTR [eax+0x0],eax
  407d1a:	jg     0x407d22
  407d1c:	pop    ss
  407d1d:	add    ah,al
  407d1f:	xchg   DWORD PTR [eax+0x0],eax
  407d22:	mov    DWORD PTR [esi],eax
  407d24:	sbb    al,BYTE PTR [eax]
  407d26:	cwde   
  407d27:	add    DWORD PTR [eax+0x0],0xf064f
  407d2e:	call   0xba40bdb3
  407d33:	add    DWORD PTR [eax+eax*1],edx
  407d36:	adc    BYTE PTR [ecx+0x11f0040],al
  407d3c:	pop    ds
  407d3d:	add    al,dh
  407d3f:	add    BYTE PTR [eax+0x0],0x88
  407d43:	add    DWORD PTR [eax+eax*1],esp
  407d46:	enter  0x4081,0x0
  407d4a:	pop    ss
  407d4b:	add    DWORD PTR [edx],ecx
  407d4d:	add    BYTE PTR [ecx+eax*4+0x7c9d0040],cl
  407d54:	add    eax,DWORD PTR [ebx*4-0x62bf7cf5]
  407d5b:	pop    ebp
  407d5c:	add    eax,DWORD PTR [ebx*4-0x62bf7d1d]
  407d63:	and    DWORD PTR [ebx],eax
  407d65:	or     al,0x9d
  407d67:	jecxz  0x407ceb
  407d69:	inc    eax
  407d6a:	popf   
  407d6b:	dec    esi
  407d6c:	add    edx,DWORD PTR [ecx]
  407d6e:	add    BYTE PTR [eax],al
  407d70:	popf   
  407d71:	pop    ss
  407d72:	add    DWORD PTR [eax-0x63],0xffffffd1
  407d76:	add    cl,BYTE PTR [esi]
  407d78:	popf   
  407d79:	pop    es
  407d7a:	add    DWORD PTR [eax-0x63],0x4e
  407d7e:	add    ecx,DWORD PTR [ebx*4-0x62bf7da9]
  407d85:	(bad)  
  407d87:	adc    bl,BYTE PTR [ebp-0x62bf7dd5]
  407d8d:	xchg   esp,eax
  407d8e:	add    ebx,DWORD PTR [esi]
  407d90:	popf   
  407d91:	or     eax,DWORD PTR [ebx+0x2b59d40]
  407d97:	xor    DWORD PTR [ebp-0x62bf7d01],ebx
  407d9d:	sbb    eax,DWORD PTR [ebx]
  407d9f:	or     DWORD PTR [ebp-0x62bf7d35],ebx
  407da5:	add    BYTE PTR [ebx],0xc
  407da8:	popf   
  407da9:	fild   DWORD PTR [edx+0x3b99d40]
  407daf:	or     al,0x9d
  407db1:	stos   DWORD PTR es:[edi],eax
  407db2:	add    DWORD PTR [eax-0x63],0xffffffc2
  407db6:	add    eax,DWORD PTR [edi]
  407db8:	popf   
  407db9:	rol    DWORD PTR [ebx+0x3c49d40],cl
  407dbf:	adc    al,0x9d
  407dc1:	leave  
  407dc2:	add    DWORD PTR [eax-0x63],0xffffffb1
  407dc6:	add    eax,DWORD PTR [ebx*4-0x62bf7bef]
  407dcd:	add    ch,bh
  407dcf:	add    ebx,DWORD PTR [ecx+0x843902]
  407dd5:	add    ch,bl
  407dd7:	add    ch,bh
  407dd9:	add    ebx,DWORD PTR [ecx-0x227bdefe]
  407ddf:	add    dl,bh
  407de1:	add    ebx,DWORD PTR [ebx-0x227bd6fe]
  407de7:	add    bl,BYTE PTR [ecx-0x46fd6efc]
  407ded:	sbb    ebp,0x2
  407df0:	fiadd  WORD PTR [ebx]
  407df2:	cdq    
  407df3:	add    dl,BYTE PTR [ecx]
  407df5:	test   ch,bl
  407df7:	add    bl,BYTE PTR [edx+0x4]
  407dfa:	add    DWORD PTR [edx],0xffffffe1
  407dfd:	sbb    DWORD PTR [ebp+0x2],0xffffff8a
  407e01:	add    al,0x9a
  407e03:	add    ch,cl
  407e05:	sbb    DWORD PTR [ebp+0x2],0xffffffdd
  407e09:	add    edx,DWORD PTR [edx-0x4540c6fe]
  407e0f:	add    ah,BYTE PTR [edi+0x502a603]
  407e15:	mov    edi,0x42202aa
  407e1a:	xchg   esp,eax
  407e1b:	add    dh,BYTE PTR [ecx]
  407e1d:	mov    edi,0x3aa029a
  407e22:	mov    al,ds:0x8abf3102
  407e27:	add    ch,dl
  407e29:	add    edx,DWORD PTR [edi+0x7abf2d02]
  407e2f:	add    bl,BYTE PTR [ebx+eax*1-0x4172fd60]
  407e36:	push   0x2
  407e38:	fiadd  DWORD PTR [ebx]
  407e3a:	add    BYTE PTR [eax],al
  407e3c:	mov    eax,DWORD PTR [edx]
  407e3e:	jne    0x407dfe
  407e40:	fiadd  DWORD PTR [edx]
  407e42:	mov    DWORD PTR [ebx],0xbf3d02a8
  407e48:	retf   0x2
  407e4b:	popa   
  407e4c:	sahf   
  407e4d:	adc    BYTE PTR [eax],al
  407e4f:	inc    ecx
  407e50:	cmp    bh,bl
  407e52:	jmp    FWORD PTR [esi+ebx*4+0x7]
  407e56:	add    BYTE PTR ds:0x1dfffb2a,bh
  407e5c:	cdq    
  407e5d:	or     eax,0xfb1a1d00
  407e62:	push   DWORD PTR [ebp-0x62]
  407e65:	adc    al,BYTE PTR [eax]
  407e67:	ror    DWORD PTR [ebx],0xfb
  407e6a:	call   FWORD PTR [esi]
  407e6c:	cdq    
  407e6d:	push   cs
  407e6e:	add    cl,al
  407e70:	sti    
  407e71:	cli    
  407e72:	push   ebp
  407e74:	sahf   
  407e75:	pop    es
  407e76:	add    ch,bh
  407e78:	jmp    0x407e74
  407e7a:	call   FWORD PTR [eax]
  407e7c:	cdq    
  407e7d:	push   cs
  407e7e:	add    ch,bl
  407e80:	pop    ebx
  407e81:	sti    
  407e82:	call   ecx
  407e84:	sahf   
  407e85:	adc    al,BYTE PTR [eax]
  407e87:	inc    ecx
  407e88:	dec    eax
  407e89:	sti    
  407e8a:	(bad)  
  407e8b:	in     al,dx
  407e8c:	sahf   
  407e8d:	sldt   WORD PTR [ebp+0x38]
  407e91:	sti    
  407e92:	jmp    FWORD PTR [edx+0x35000c9e]
  407e98:	sub    bl,bh
  407e9a:	dec    DWORD PTR [edi]
  407e9c:	sahf   
  407e9d:	adc    DWORD PTR [eax],eax
  407e9f:	sub    DWORD PTR [eax],eax
  407ea1:	add    BYTE PTR [eax],bl
  407ea3:	sti    
  407ea4:	dec    DWORD PTR [ebx+0x39000c9e]
  407eaa:	or     bl,bh
  407eac:	call   FWORD PTR [ecx-0x62]
  407eaf:	adc    al,BYTE PTR [eax]
  407eb1:	dec    ebp
  407eb2:	clc    
  407eb3:	cli    
  407eb4:	(bad)  
  407eb5:	std    
  407eb6:	sahf   
  407eb7:	adc    DWORD PTR [eax],eax
  407eb9:	jno    0x407ea6
  407ebb:	cli    
  407ebc:	call   esi
  407ebe:	cdq    
  407ebf:	adc    eax,0xfa5b5900
  407ec4:	(bad)  
  407ec5:	jmp    FWORD PTR [edi+edi*8+0x13]
  407ec9:	add    BYTE PTR [eax+edi*2-0x16dffc1],bh
  407ed0:	push   ss
  407ed1:	add    ah,al
  407ed3:	js     0x407f14
  407ed5:	add    BYTE PTR [ebx+0x580011fe],ah
  407edb:	js     0x407f1c
  407edd:	add    bl,ch
  407edf:	(bad)  
  407ee0:	pop    ss
  407ee1:	add    BYTE PTR [eax+edi*2+0x3f],dl
  407ee5:	add    BYTE PTR [eax],cl
  407ee7:	jmp    DWORD PTR [edx]
  407ee9:	add    BYTE PTR [eax],bl
  407eeb:	jp     0x407f2c
  407eed:	add    BYTE PTR [edx+0x6],ah
  407ef0:	and    eax,0x3f7a0000
  407ef5:	add    BYTE PTR [ecx-0x2],ch
  407ef8:	sbb    al,BYTE PTR [eax]
  407efa:	or     al,0x7a
  407efc:	aas    
  407efd:	add    BYTE PTR [edi+0x200002fe],dh
  407f03:	jp     0x407f44
  407f05:	add    BYTE PTR [eax],al
  407f07:	add    dl,bl
  407f09:	add    eax,0x79680007
  407f0e:	aas    
  407f0f:	add    dl,ch
  407f11:	add    eax,0x79500007
  407f16:	aas    
  407f17:	add    dl,ch
  407f19:	add    eax,0x7910001c
  407f1e:	aas    
  407f1f:	add    dh,dh
  407f21:	add    eax,0x78580007
  407f26:	aas    
  407f27:	add    BYTE PTR [esi],ch
  407f29:	push   es
  407f2a:	or     al,BYTE PTR [eax]
  407f2c:	adc    al,0x79
  407f2e:	aas    
  407f2f:	add    bl,bl
  407f31:	add    eax,0x78d4004c
  407f36:	aas    
  407f37:	add    BYTE PTR [ebp-0x2],ah
  407f3a:	and    DWORD PTR [eax],eax
  407f3c:	int3   
  407f3d:	jns    0x407f7e
  407f3f:	add    BYTE PTR [ebp-0x62d1fcce],bl
  407f45:	xchg   ebx,eax
  407f46:	mov    edi,0x3719d3f
  407f4b:	add    al,0x9d
  407f4d:	mov    ebx,0xb09d3fbe
  407f52:	add    dl,BYTE PTR [ebx]
  407f54:	popf   
  407f55:	(bad)  
  407f56:	mov    esi,0x3eb9d3f
  407f5b:	adc    al,0x9d
  407f5d:	lahf   
  407f5e:	mov    esi,0x3329d3f
  407f63:	push   ds
  407f64:	popf   
  407f65:	(bad)  
  407f66:	mov    edi,0x39b9d3f
  407f6b:	sbb    eax,0xdf9d0000
  407f70:	mov    edi,0x2cb9d3f
  407f75:	and    BYTE PTR [ebp-0x62c040b5],bl
  407f7b:	fadd   QWORD PTR [edx]
  407f7d:	addr16 popf 
  407f7f:	arpl   WORD PTR [eax+0x3769d3f],di
  407f85:	add    eax,0x3fb7b79d
  407f8a:	popf   
  407f8b:	adc    al,0x4
  407f8d:	or     bl,BYTE PTR [ebp-0x62c04775]
  407f93:	and    DWORD PTR [ebx],eax
  407f95:	cmp    DWORD PTR [ebp-0x62c047c1],ebx
  407f9b:	aaa    
  407f9c:	add    ebp,DWORD PTR ds:0x3fb84f9d
  407fa2:	popf   
  407fa3:	or     BYTE PTR [ebx],al
  407fa5:	pop    es
  407fa6:	popf   
  407fa7:	ja     0x407f61
  407fa9:	aas    
  407faa:	popf   
  407fab:	or     al,BYTE PTR [ebx]
  407fad:	or     al,0x9d
  407faf:	push   edi
  407fb0:	mov    eax,0x3929d3f
  407fb5:	or     ebx,DWORD PTR [ebp-0x62c047a5]
  407fbb:	add    bl,BYTE PTR [ecx+0x4]
  407fbe:	xchg   esi,eax
  407fbf:	add    ah,ch
  407fc1:	mov    esi,0x4430262
  407fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc7:	add    dl,cl
  407fc9:	mov    esi,0x4aa02d2
  407fce:	xchg   esi,eax
  407fcf:	add    cl,ch
  407fd1:	mov    esi,0x2c20000
  407fd6:	fild   WORD PTR [ebx]
  407fd8:	test   eax,0xb2be8d02
  407fdd:	add    al,dh
  407fdf:	add    al,0xb9
  407fe1:	add    cl,BYTE PTR [ebp-0x42]
  407fe4:	mov    ds:0xa603f502,al
  407fe9:	add    cl,BYTE PTR [ecx-0x42]
  407fec:	xchg   edx,eax
  407fed:	add    cl,BYTE PTR [esi+0x4]
  407ff0:	lods   eax,DWORD PTR ds:[esi]
  407ff1:	add    ch,BYTE PTR [ebp-0x42]
  407ff4:	add    BYTE PTR [edx],0xe1
  407ff7:	add    esp,DWORD PTR [esi+0x72be6902]
  407ffd:	add    bh,BYTE PTR [ecx-0x2afd69fd]
  408003:	mov    ebp,0x3ee0262
  408008:	mov    ds:0xd2bdbd02,al
  40800d:	add    ch,BYTE PTR [ecx]
  40800f:	add    al,0xaf
  408011:	add    ah,BYTE PTR [ecx+0x2f02c2bd]
  408017:	add    al,0xc3
  408019:	add    bh,cl
  40801b:	mov    ebp,0x38f02b2
  408020:	cdq    
  408021:	add    cl,cl
  408023:	mov    ebp,0x3be02a2
  408028:	mov    al,0x2
  40802a:	loope  0x407fe9
  40802c:	xchg   edx,eax
  40802d:	add    dh,dl
  40802f:	add    ebx,DWORD PTR [eax-0x7d42fefe]
  408035:	add    al,BYTE PTR [eax]
  408037:	fiadd  WORD PTR [eax]
  408039:	add    BYTE PTR [esi-0xffaffef],bl
  40803f:	idiv   edi
  408041:	push   es
  408042:	mov    eax,ds:0xe1c1000b
  408047:	idiv   edi
  408049:	mov    ebx,DWORD PTR [esi+0x51910017]
  40804f:	idiv   edi
  408051:	xchg   ebx,eax
  408052:	sahf   
  408053:	or     DWORD PTR [eax],eax
  408055:	lea    eax,[ecx-0x9]
  408058:	jmp    DWORD PTR [ebx-0x62]
  40805b:	add    eax,DWORD PTR [eax]
  40805d:	xor    DWORD PTR [ecx],0x9ee8fff7
  408063:	add    al,BYTE PTR [eax]
  408065:	jmp    0x65408308
  40806a:	sbb    edi,esi
  40806c:	(bad)  
  40806d:	fistp  WORD PTR [esi-0x6117fffe]
  408073:	add    al,BYTE PTR [eax]
  408075:	std    
  408076:	add    edi,esi
  408078:	(bad)  
  408079:	out    dx,al
  40807a:	sahf   
  40807b:	add    al,BYTE PTR [eax]
  40807d:	add    DWORD PTR [ecx-0x1642fffe],ebx
  408083:	idiv   bh
  408085:	cli    
  408086:	sahf   
  408087:	add    al,BYTE PTR [eax]
  408089:	icebp  
  40808a:	sahf   
  40808b:	add    al,BYTE PTR [eax]
  40808d:	sbb    DWORD PTR [eax-0x9],edx
  408090:	(bad)  
  408091:	fcomp  DWORD PTR [esi-0x611efffe]
  408097:	add    al,BYTE PTR [eax]
  408099:	aad    0x39
  40809b:	idiv   edi
  40809d:	fild   WORD PTR [eax]
  40809f:	add    BYTE PTR [esi-0x5efefffe],bl
  4080a5:	add    al,BYTE PTR [eax]
  4080a7:	jmp    0xe44077cd
  4080ac:	sahf   
  4080ad:	add    al,BYTE PTR [eax]
  4080af:	in     eax,0x9e
  4080b1:	add    al,BYTE PTR [eax]
  4080b3:	add    BYTE PTR [ebp-0x4b000004],dh
  4080b9:	add    al,BYTE PTR [eax]
  4080bb:	add    dh,al
  4080bd:	cld    
  4080be:	(bad)  
  4080bf:	inc    esi
  4080c1:	add    al,BYTE PTR [eax]
  4080c3:	add    BYTE PTR [ebp-0x47fffffd],dh
  4080c9:	add    al,BYTE PTR [eax]
  4080cb:	add    BYTE PTR [esi+0x7a000001],al
  4080d1:	add    al,BYTE PTR [eax]
  4080d3:	add    ch,bl
  4080d5:	(bad)  
  4080d6:	(bad)  
  4080d7:	call   FWORD PTR [eax-0x3e]
  4080da:	inc    eax
  4080db:	add    BYTE PTR [esi+0x32fffffe],ch
  4080e1:	ret    0x40
  4080e4:	mov    edi,0x3cfffffe
  4080e9:	ret    0x40
  4080ec:	mov    al,0xfe
  4080ee:	(bad)  
  4080ef:	dec    DWORD PTR [eax+eax*8]
  4080f2:	inc    eax
  4080f3:	add    BYTE PTR [ecx-0x37000002],ah
  4080f9:	mov    edi,0x2320040
  4080fe:	add    BYTE PTR [eax],al
  408100:	push   esp
  408101:	test   BYTE PTR [eax+0x0],0x0
  408105:	add    BYTE PTR [ebx+0x2],al
  408108:	add    BYTE PTR [eax],al
  40810a:	and    dh,dh
  40810c:	inc    eax
  40810d:	add    BYTE PTR [esi+edi*8-0x3d630001],al
  408114:	inc    eax
  408115:	add    BYTE PTR [ebp-0x2],dh
  408118:	(bad)  
  408119:	jmp    FWORD PTR [eax-0xb]
  40811c:	inc    eax
  40811d:	add    BYTE PTR [esi+0x48fffffe],al
  408123:	cmc    
  408124:	inc    eax
  408125:	add    BYTE PTR [edi-0x2],dh
  408128:	(bad)  
  408129:	jmp    FWORD PTR [eax-0xb]
  40812c:	inc    eax
  40812d:	add    BYTE PTR [ebp-0x62fffc59],bl
  408133:	lods   al,BYTE PTR ds:[esi]
  408134:	ds inc ecx
  408136:	popf   
  408137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408138:	add    eax,DWORD PTR [eax]
  40813a:	popf   
  40813b:	retf   0x413e
  40813e:	popf   
  40813f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408140:	add    eax,DWORD PTR [eax]
  408142:	popf   
  408143:	sar    BYTE PTR [esi],0x41
  408146:	popf   
  408147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408148:	add    al,BYTE PTR [eax]
  40814a:	popf   
  40814b:	sub    DWORD PTR [eax+0x41],eax
  40814e:	popf   
  40814f:	mov    ds:0x219d0002,eax
  408154:	inc    eax
  408155:	inc    ecx
  408156:	popf   
  408157:	mov    dl,0x2
  408159:	add    BYTE PTR [ebp-0x62bebfe0],bl
  40815f:	mov    eax,ds:0xb9d0002
  408164:	inc    ecx
  408165:	inc    ecx
  408166:	popf   
  408167:	mov    al,0x2
  408169:	add    BYTE PTR [eax],al
  40816b:	add    BYTE PTR [ebp-0x62bebee5],bl
  408171:	lahf   
  408172:	add    al,BYTE PTR [eax]
  408174:	popf   
  408175:	pop    es
  408176:	inc    ecx
  408177:	inc    ecx
  408178:	popf   
  408179:	scas   al,BYTE PTR es:[edi]
  40817a:	add    al,BYTE PTR [eax]
  40817c:	popf   
  40817d:	mov    bl,0x3f
  40817f:	inc    ecx
  408180:	popf   
  408181:	popf   
  408182:	add    al,BYTE PTR [eax]
  408184:	popf   
  408185:	jmp    0x4081d2
  408187:	inc    ecx
  408188:	popf   
  408189:	lods   al,BYTE PTR ds:[esi]
  40818a:	add    al,BYTE PTR [eax]
  40818c:	popf   
  40818d:	and    DWORD PTR [ebx+0x41],ecx
  408190:	popf   
  408191:	mov    ebx,0xa99d0002
  408196:	dec    edx
  408197:	inc    ecx
  408198:	popf   
  408199:	sub    eax,DWORD PTR [ebx]
  40819b:	add    DWORD PTR [ebx+ebp*1+0x2b9d0003],ebx
  4081a2:	add    eax,DWORD PTR [eax]
  4081a4:	popf   
  4081a5:	sub    al,BYTE PTR [edx]
  4081a7:	add    BYTE PTR [ebp-0x62fc14fe],bl
  4081ad:	add    cl,cl
  4081af:	leave  
  4081b0:	fidiv  DWORD PTR [esp+eiz*4]
  4081b3:	add    ebx,DWORD PTR [ebp-0x62fc17fe]
  4081b9:	add    ch,bh
  4081bb:	add    ebx,DWORD PTR [ebp-0x455146fe]
  4081c1:	xor    al,0xec
  4081c3:	add    ebx,DWORD PTR [ebp-0x555146fe]
  4081c9:	xor    al,0xe9
  4081cb:	add    al,0x9f
  4081cd:	add    ebp,esp
  4081cf:	add    BYTE PTR [eax],al
  4081d1:	add    BYTE PTR [ebx-0x58f31f05],ah
  4081d7:	pop    es
  4081d8:	fisttp QWORD PTR [eax]
  4081da:	fwait
  4081db:	add    ebx,ecx
  4081dd:	adc    al,0xaf
  4081df:	pmullw mm2,QWORD PTR [eax]
  4081e2:	xchg   ebx,eax
  4081e3:	or     edx,ecx
  4081e5:	sbb    al,0x97
  4081e7:	pop    ss
  4081e8:	int    0x18
  4081ea:	mov    edx,DWORD PTR [ebx]
  4081ec:	leave  
  4081ed:	in     al,0xbc
  4081ef:	ffreep st(4)
  4081f1:	loopne 0x408173
  4081f3:	fcmovnb st,st(0)
  4081f5:	in     al,dx
  4081f6:	test   bh,ah
  4081f8:	mov    esp,0xb8e378e8
  4081fd:	hlt    
  4081fe:	mov    edi,gs
  408200:	mov    ah,0xf0
  408202:	jo     0x4081ef
  408204:	mov    al,0xfc
  408206:	je     0x4081ff
  408208:	lods   al,BYTE PTR ds:[esi]
  408209:	clc    
  40820a:	push   0xbca4a8f3
  40820f:	lahf   
  408210:	les    esp,FWORD PTR [eax-0x533f6480]
  408216:	test   BYTE PTR [edi-0x5c875744],ah
  40821c:	mov    eax,0xb4af8cb4
  408221:	mov    al,0x70
  408223:	stos   DWORD PTR es:[edi],eax
  408224:	push   DWORD PTR [eax-0x72a545cf]
  40822a:	vdivpd ymm1,ymm5,YMMWORD PTR [ecx-0x7a9d5dc7]
  408232:	std    
  408233:	popf   
  408234:	add    WORD PTR [eax],0x100
  408239:	stos   BYTE PTR es:[edi],al
  40823a:	push   0x7d
  40823c:	cmc    
  40823d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823e:	outs   dx,BYTE PTR ds:[esi]
  40823f:	jns    0x40824a
  408241:	mov    dl,0x72
  408243:	jne    0x408232
  408245:	lods   eax,DWORD PTR ds:[esi]
  408246:	jbe    0x4082b9
  408248:	icebp  
  408249:	mov    ecx,0xb5e56d7a
  40824e:	jle    0x4082b9
  408250:	sbb    DWORD PTR [ecx+0x7c1d6583],eax
  408256:	xchg   DWORD PTR [ecx+0x21],esp
  408259:	mov    BYTE PTR [ebx-0x707beaa3],cl
  40825f:	pop    ecx
  408260:	sub    DWORD PTR [eax-0x73f2aa6d],edx
  408266:	xchg   edi,eax
  408267:	push   ecx
  408268:	adc    DWORD PTR [eax-0x6bfab265],ebx
  40826e:	lahf   
  40826f:	dec    ecx
  408270:	stc    
  408271:	pusha  
  408272:	mov    ds:0xa75cbd45,eax
  408277:	inc    ecx
  408278:	shr    DWORD PTR [eax-0x55],0x3d
  40827c:	mov    ch,0x64
  40827e:	scas   eax,DWORD PTR es:[edi]
  40827f:	cmp    ecx,ecx
  408281:	jo     0x408236
  408283:	xor    eax,0x31b76cad
  408288:	mov    cl,0x78
  40828a:	mov    ebx,0xbf74a52d
  40828f:	sub    ecx,ebx
  408291:	inc    eax
  408292:	ret    
  408293:	and    eax,0x21c73c5d
  408298:	popa   
  408299:	dec    eax
  40829a:	retf   
  40829b:	sbb    eax,0x44550000
  4082a0:	iret   
  4082a1:	add    BYTE PTR [esi+ecx*8-0x2d6f2c2f],ah
  4082a8:	aad    0xd7
  4082aa:	mov    esi,ss
  4082ac:	(bad)  
  4082ae:	cwde   
  4082af:	fcmovu st,st(5)
  4082b1:	fist   WORD PTR [esi+ebx*8-0x1d5f1c1f]
  4082b8:	in     eax,0xe7
  4082ba:	pushf  
  4082bb:	out    0xe9,al
  4082bd:	jmp    0x408287
  4082bf:	(bad)  
  4082c1:	out    dx,eax
  4082c2:	(bad)  
  4082c3:	out    dx,al
  4082c4:	icebp  
  4082c5:	repz mov al,0xe2
  4082c8:	cmc    
  4082c9:	imul   DWORD PTR [esi+esi*8-0x15470407]
  4082d0:	std    
  4082d1:	push   DWORD PTR [edi+edi*8+0x31800301]
  4082d8:	add    eax,0x9fd7c07
  4082dd:	or     ebp,DWORD PTR [eax+0x9]
  4082e0:	push   cs
  4082e1:	pcmpgtb mm2,QWORD PTR ds:0x1501312
  4082e8:	push   ss
  4082e9:	pop    ss
  4082ea:	dec    esp
  4082eb:	or     eax,0x19581b1a
  4082f0:	push   ds
  4082f1:	pop    ds
  4082f2:	push   esp
  4082f3:	and    eax,0x51602321
  4082f8:	and    eax,0x291d5c27
  4082fd:	sub    ecx,DWORD PTR [eax]
  4082ff:	sub    DWORD PTR ds:0x400002f,ebp
  408305:	xor    eax,0x20f03331
  40830a:	xor    eax,0x392cec37
  40830f:	cmp    edi,eax
  408311:	cmp    BYTE PTR ds:0x6164f43f,bh
  408317:	arpl   ax,sp
  408319:	nop
  40831a:	gs addr16 popf 
  40831d:	inc    ebx
  40831e:	stos   BYTE PTR es:[edi],al
  40831f:	imul   esi,DWORD PTR [esi+0x6f],0x6b726da6
  408326:	mov    dl,0x71
  408328:	outs   dx,BYTE PTR ds:[esi]
  408329:	ja     0x4082d9
  40832b:	jne    0x408397
  40832d:	jae    0x4082e9
  40832f:	jns    0x408377
  408331:	jg     0x408309
  408333:	pop    ebp
  408334:	inc    edx
  408335:	jnp    0x4082f9
  408337:	inc    ecx
  408338:	pop    esi
  408339:	addr16 mov esi,0xca635a45
  40833f:	dec    ecx
  408340:	push   esi
  408341:	pop    esi
  408343:	dec    ebp
  408344:	push   edx
  408345:	mov    edx,edx
  408347:	push   ecx
  408348:	dec    esi
  408349:	xchg   edi,eax
  40834a:	into   
  40834b:	push   ebp
  40834c:	dec    edx
  40834d:	xchg   ebx,eax
  40834e:	ficomp DWORD PTR [ecx+0x26]
  408351:	lahf   
  408352:	mov    ch,0x7d
  408354:	and    bl,BYTE PTR [ebx-0x58e17d7f]
  40835a:	jge    0x4082e2
  40835c:	sbb    ah,BYTE PTR [ebx-0x30e97577]
  408362:	test   DWORD PTR [esi-0x6d6e34ee],ecx
  408368:	add    BYTE PTR [eax],al
  40836a:	push   cs
  40836b:	xlat   BYTE PTR ds:[ebx]
  40836c:	lea    edx,[esi-0x65662cf6]
  408372:	push   es
  408373:	mov    edi,0xbb029e95
  408378:	popa   
  408379:	mov    ds:0xa65dc6fe,al
  40837e:	cli    
  40837f:	ret    0xaa69
  408382:	imul   dh
  408384:	gs scas al,BYTE PTR es:[edi]
  408386:	repnz jmp 0xb66d:0xf6eeb271
  40838e:	jmp    0x75de:0xe6ba79f2
  408395:	mov    esi,0x422901e2
  40839a:	fild   WORD PTR [ebp+eiz*1+0x3e]
  40839e:	fisttp DWORD PTR [eax+0x21]
  4083a1:	dec    edx
  4083a2:	xlat   BYTE PTR ds:[ebx]
  4083a3:	cmp    al,0x1d
  4083a5:	inc    esi
  4083a6:	rol    DWORD PTR [eax+0x19],cl
  4083a9:	push   edx
  4083aa:	iret   
  4083ab:	push   esp
  4083ac:	adc    eax,0x1158cb4e
  4083b1:	pop    edx
  4083b2:	(bad)  
  4083b3:	dec    esp
  4083b4:	or     eax,0x950c356
  4083b9:	and    bh,BYTE PTR [edi-0x44e1fadc]
  4083bf:	sub    BYTE PTR [ecx],al
  4083c1:	sub    dh,BYTE PTR [edi-0x4cda02e4]
  4083c7:	and    cl,bh
  4083c9:	xor    DWORD PTR [edi+0x2df534],ebp
  4083cf:	add    BYTE PTR [ebx-0x58c60ec8],ch
  4083d5:	sub    al,0xed
  4083d7:	xor    eax,0xf1e930a3
  4083dc:	call   0xe902:0x9d03e830
  4083e3:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4083e9:	add    ch,cl
  4083eb:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4083f1:	add    ch,cl
  4083f3:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4083f9:	add    ch,cl
  4083fb:	add    ebx,DWORD PTR [ebp+0x5203e902]
  408401:	add    al,0x17
  408403:	add    al,0x9d
  408405:	add    cl,BYTE PTR [edi]
  408407:	add    al,0x9d
  408409:	add    ch,cl
  40840b:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  408411:	add    al,BYTE PTR [eax]
  408413:	jmp    0xe94086b6
  408418:	sahf   
  408419:	add    al,BYTE PTR [eax]
  40841b:	jmp    0xe94086be
  408420:	sahf   
  408421:	das    
  408422:	add    ebp,ecx
  408424:	sahf   
  408425:	add    al,BYTE PTR [eax]
  408427:	jmp    0xe94086ca
  40842c:	sahf   
  40842d:	add    al,BYTE PTR [eax]
  40842f:	jmp    0xe94086d2
  408434:	add    BYTE PTR [eax],al
  408436:	sahf   
  408437:	add    al,BYTE PTR [eax]
  408439:	jmp    0xe94086dc
  40843e:	sahf   
  40843f:	add    al,BYTE PTR [eax]
  408441:	jmp    0x174086e4
  408446:	mov    gs,WORD PTR [edi]
  408448:	pop    es
  408449:	jmp    0xe94086ec
  40844e:	sahf   
  40844f:	add    al,BYTE PTR [eax]
  408451:	jmp    0xe94086f4
  408456:	sahf   
  408457:	add    al,BYTE PTR [eax]
  408459:	jmp    0xe94086fc
  40845e:	sahf   
  40845f:	add    al,BYTE PTR [eax]
  408461:	jmp    0xe9408704
  408466:	sahf   
  408467:	add    al,BYTE PTR [eax]
  408469:	iret   
  40846a:	iret   
  40846b:	das    
  40846c:	pop    es
  40846d:	jmp    0xe9408710
  408472:	sahf   
  408473:	add    al,BYTE PTR [eax]
  408475:	jmp    0xe9408718
  40847a:	sahf   
  40847b:	add    al,BYTE PTR [eax]
  40847d:	jmp    0xe9408720
  408482:	sahf   
  408483:	das    
  408484:	add    edx,DWORD PTR [edi-0x7078d071]
  40848a:	(bad)  
  40848b:	das    
  40848c:	pop    es
  40848d:	add    BYTE PTR [ebx+eax*1+0x0],al
  408491:	add    BYTE PTR [ebx+eax*1+0x0],al
  408495:	add    BYTE PTR [ebx+eax*1],dh
  408498:	add    BYTE PTR [eax],al
  40849a:	add    BYTE PTR [eax],al
  40849c:	xor    al,0x3
  40849e:	add    BYTE PTR [eax],al
  4084a0:	add    al,0x3
  4084a2:	add    BYTE PTR [eax],al
  4084a4:	jb     0x40849a
  4084a6:	(bad)  
  4084a7:	push   DWORD PTR [ebx-0xc]
  4084aa:	(bad)  
  4084ab:	call   DWORD PTR [ebx-0xc]
  4084ae:	(bad)  
  4084af:	jg     0x4084b5
  4084b1:	add    eax,DWORD PTR [eax]
  4084b3:	add    BYTE PTR [ebx+eax*1],al
  4084b6:	add    BYTE PTR [eax],al
  4084b8:	hlt    
  4084b9:	add    al,BYTE PTR [eax]
  4084bb:	add    ah,dh
  4084bd:	add    al,BYTE PTR [eax]
  4084bf:	add    ah,al
  4084c1:	add    al,BYTE PTR [eax]
  4084c3:	add    BYTE PTR [ebx-0x4c00010c],dh
  4084c9:	hlt    
  4084ca:	(bad)  
  4084cb:	call   DWORD PTR [ebx-0x3b80010c]
  4084d1:	add    al,BYTE PTR [eax]
  4084d3:	add    ah,al
  4084d5:	add    al,BYTE PTR [eax]
  4084d7:	add    BYTE PTR [edx+eax*1+0x2b40000],dh
  4084de:	add    BYTE PTR [eax],al
  4084e0:	test   BYTE PTR [edx],al
  4084e2:	add    BYTE PTR [eax],al
  4084e4:	jb     0x4084da
  4084e6:	(bad)  
  4084e7:	sti    
  4084e8:	jne    0x4084ec
  4084ea:	add    al,bh
  4084ec:	jne    0x4084f0
  4084ee:	add    BYTE PTR [eax-0x7c],bh
  4084f1:	add    al,BYTE PTR [eax]
  4084f3:	add    BYTE PTR [edx+eax*1+0x2740000],al
  4084fa:	add    BYTE PTR [eax],al
  4084fc:	je     0x408500
  4084fe:	add    BYTE PTR [eax],al
  408500:	add    BYTE PTR [eax],al
  408502:	add    esi,esp
  408504:	(bad)  
  408505:	inc    DWORD PTR [edx+eax*1+0x0]
  408509:	add    BYTE PTR [ebp-0x62fffce5],bl
  40850f:	sbb    eax,DWORD PTR [ebx]
  408511:	add    BYTE PTR ds:0x9d00031c,bl
  408517:	sbb    eax,DWORD PTR [ebx]
  408519:	add    BYTE PTR [ebp-0x62fffce5],bl
  40851f:	sbb    eax,DWORD PTR [ebx]
  408521:	add    BYTE PTR [ebp-0x62fffc65],bl
  408527:	sbb    eax,DWORD PTR [ebx]
  408529:	add    BYTE PTR [ebp-0x62fefde5],bl
  40852f:	sbb    al,BYTE PTR [edx]
  408531:	add    BYTE PTR [ebp-0x62fffce5],bl
  408537:	sbb    eax,DWORD PTR [ebx]
  408539:	add    BYTE PTR [ebp-0x62fffce5],bl
  40853f:	sbb    eax,DWORD PTR [ebx]
  408541:	add    BYTE PTR [ebp-0x62fffce6],bl
  408547:	fwait
  408548:	add    eax,DWORD PTR [eax]
  40854a:	popf   
  40854b:	fwait
  40854c:	add    DWORD PTR [eax-0x7ffce3e3],0xffffff9d
  408553:	daa    
  408554:	nop    DWORD PTR [ecx-0x76e3f0b1]
  40855b:	push   edi
  40855c:	ltr    WORD PTR [ebp+0x1d00031b]
  408563:	sbb    ecx,DWORD PTR ds:0xb700001a
  408569:	add    DWORD PTR [esi],ecx
  40856b:	sbb    ch,BYTE PTR [edi-0x50edead7]
  408571:	sub    DWORD PTR ds:0x15498f12,edx
  408577:	adc    cl,BYTE PTR [edi-0x70edeab7]
  40857d:	dec    ecx
  40857e:	adc    eax,0x29b1d12
  408583:	sub    BYTE PTR [ebp-0x48f216fe],0x8
  40858a:	add    ecx,DWORD PTR [esi]
  40858c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858d:	adc    bl,bh
  40858f:	adc    eax,0x15fb10af
  408594:	(bad)  
  408595:	adc    bl,bl
  408597:	adc    eax,0x15db108f
  40859c:	(bad)  
  40859d:	adc    bl,bl
  40859f:	adc    eax,0x369828f
  4085a4:	popf   
  4085a5:	add    ch,cl
  4085a7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085ad:	add    ch,cl
  4085af:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085b5:	add    ch,cl
  4085b7:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085bd:	add    ch,cl
  4085bf:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085c5:	add    ch,cl
  4085c7:	add    ebx,DWORD PTR [ebp+0x3e902]
  4085cd:	add    BYTE PTR [ebp-0x62fc16fe],bl
  4085d3:	add    ch,cl
  4085d5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085db:	add    ch,cl
  4085dd:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085e3:	add    ch,cl
  4085e5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085eb:	add    ch,cl
  4085ed:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085f3:	add    ch,cl
  4085f5:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  4085fb:	add    ch,cl
  4085fd:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  408603:	add    al,BYTE PTR [eax]
  408605:	jmp    0xe94088a8
  40860a:	sahf   
  40860b:	add    al,BYTE PTR [eax]
  40860d:	jmp    0xe94088b0
  408612:	sahf   
  408613:	add    al,BYTE PTR [eax]
  408615:	jmp    0xe94088b8
  40861a:	sahf   
  40861b:	add    al,BYTE PTR [eax]
  40861d:	jmp    0xe94088c0
  408622:	sahf   
  408623:	add    al,BYTE PTR [eax]
  408625:	jmp    0x554088c8
  40862a:	jg     0x4085be
  40862c:	jo     0x408681
  40862e:	adc    eax,0x917093
  408633:	add    dh,cl
  408635:	push   ecx
  408636:	inc    ecx
  408637:	inc    ebx
  408638:	pop    ecx
  408639:	xchg   edx,eax
  40863a:	jo     0x40868e
  40863c:	jns    0x4085cf
  40863e:	jo     0x408668
  408640:	jmp    0x19e91e7
  408645:	sub    al,0x32
  408647:	mov    eax,0x3dd929eb
  40864c:	into   
  40864d:	nop
  40864e:	jnp    0x4086c5
  408650:	inc    edx
  408651:	mov    ch,0xc2
  408653:	xor    ebx,DWORD PTR [esp+ebp*1-0xf1b3b07]
  40865a:	inc    esi
  40865b:	into   
  40865c:	inc    ecx
  40865d:	iret   
  40865e:	shr    BYTE PTR [ecx],0xd1
  408661:	inc    ebx
  408662:	mov    ebx,0x704931ed
  408667:	mov    dh,al
  408669:	push   0xca20877a
  40866e:	cdq    
  40866f:	pop    edx
  408670:	idiv   DWORD PTR [esi-0x44]
  408673:	mov    edx,0xf47ffe49
  408678:	pop    ss
  408679:	icebp  
  40867a:	ins    DWORD PTR es:[edi],dx
  40867b:	add    BYTE PTR [edx],bl
  40867d:	and    al,0x53
  40867f:	fucomip st,st(1)
  408681:	pusha  
  408682:	out    0xf0,eax
  408684:	fs ins BYTE PTR es:[edi],dx
  408686:	(bad)  
  408687:	jae    0x4086ec
  408689:	cmp    BYTE PTR [ebx-0x44c335df],0xc3
  408690:	out    dx,al
  408691:	outs   dx,DWORD PTR ds:[esi]
  408692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408693:	sub    DWORD PTR [edx-0x64],ecx
  408696:	lock mov dh,0x0
  408699:	add    BYTE PTR [edx],bl
  40869b:	fst    QWORD PTR [ecx]
  40869d:	lahf   
  40869e:	push   esi
  40869f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a1:	fs xor eax,0x6d90522e
  4086a7:	inc    edx
  4086a8:	scas   al,BYTE PTR es:[edi]
  4086a9:	add    BYTE PTR [edi+ebx*8-0x2496e6b5],0x76
  4086b1:	pop    esi
  4086b2:	pop    esp
  4086b3:	mov    bh,0x89
  4086b5:	aaa    
  4086b6:	cs push esi
  4086b8:	sbb    al,0x28
  4086ba:	dec    ecx
  4086bb:	pop    esi
  4086bc:	(bad)  
  4086bd:	fwait
  4086be:	rcl    BYTE PTR ds:0x2cb822d5,0xac
  4086c5:	popa   
  4086c6:	pop    ebp
  4086c7:	jmp    0xe42c:0x9aa2c3e2
  4086ce:	mov    WORD PTR [ebx],ss
  4086d0:	adc    dl,BYTE PTR [ecx]
  4086d2:	(bad)  
  4086d3:	adc    dh,BYTE PTR [ebx-0x418856df]
  4086d9:	in     eax,dx
  4086da:	pop    ecx
  4086db:	mov    ecx,0xa1d297b5
  4086e0:	inc    esp
  4086e1:	fwait
  4086e2:	dec    esi
  4086e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e4:	repz mov dl,0xc1
  4086e7:	mov    dh,0xcc
  4086e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ea:	xchg   ebp,eax
  4086eb:	in     eax,0x27
  4086ed:	xchg   esp,eax
  4086ee:	cmp    eax,0x2855b904
  4086f3:	pop    es
  4086f4:	clc    
  4086f5:	bound  ebx,QWORD PTR [ebp-0x42f5b0a8]
  4086fb:	pop    edi
  4086fc:	in     al,dx
  4086fd:	fiadd  WORD PTR [eax]
  4086ff:	add    al,bh
  408701:	pop    eax
  408702:	push   esp
  408703:	jns    0x408723
  408705:	push   ebx
  408706:	das    
  408707:	and    esi,DWORD PTR [ebp+0x79b9861e]
  40870d:	sub    BYTE PTR [eax],al
  40870f:	jg     0x40872f
  408711:	mov    cl,0xdf
  408713:	mov    al,ds:0x32f6b57
  408718:	xchg   esp,eax
  408719:	xchg   edx,eax
  40871a:	out    dx,al
  40871b:	push   ds
  40871c:	fwait
  40871d:	xor    al,0x2f
  40871f:	inc    ecx
  408720:	mov    ch,dl
  408722:	push   edx
  408723:	je     0x40878f
  408725:	push   ss
  408726:	shr    DWORD PTR [ebp-0x6d],1
  408729:	test   al,0x87
  40872b:	ja     0x40877e
  40872d:	add    ebp,ecx
  40872f:	fstp   st(6)
  408731:	pop    esp
  408732:	inc    edi
  408733:	push   ds
  408734:	sti    
  408735:	push   esp
  408736:	aaa    
  408737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408738:	mov    cl,0xfa
  40873a:	mov    cl,0x92
  40873c:	sbb    eax,0x1462450f
  408741:	int    0xd9
  408743:	ror    al,0x1b
  408746:	add    eax,DWORD PTR [eax]
  408748:	popf   
  408749:	test   DWORD PTR [eax+eax*1],eax
  40874c:	popf   
  40874d:	fwait
  40874e:	add    DWORD PTR [eax],eax
  408750:	popf   
  408751:	add    eax,DWORD PTR ss:[eax]
  408754:	popf   
  408755:	aam    0x3
  408757:	add    BYTE PTR [ebp-0x45000305],bl
  40875d:	add    eax,DWORD PTR ds:[eax]
  408760:	popf   
  408761:	iret   
  408762:	add    eax,DWORD PTR [eax]
  408764:	add    BYTE PTR [eax],al
  408766:	popf   
  408767:	sti    
  408768:	cld    
  408769:	jmp    DWORD PTR [edx-0x62fffcca]
  40876f:	out    0x3,al
  408771:	add    BYTE PTR [ebp-0x62fe96fe],bl
  408777:	add    al,BYTE PTR [esp+eax*1]
  40877a:	popf   
  40877b:	add    al,BYTE PTR [edi+0x69029d03]
  408781:	add    DWORD PTR [ebp-0x62fbf3fe],ebx
  408787:	add    cl,BYTE PTR [esi+0x69029d03]
  40878d:	add    DWORD PTR [ebp-0x62fbfbfe],ebx
  408793:	add    bl,BYTE PTR [ecx+0x3]
  408796:	popf   
  408797:	add    cl,BYTE PTR [ecx-0x32d6bd04]
  40879d:	add    ebx,DWORD PTR [ebp-0x5158d9fe]
  4087a3:	sar    dl,cl
  4087a5:	pushf  
  4087a6:	mov    edi,0xaca804c3
  4087ab:	lahf   
  4087ac:	stc    
  4087ad:	mov    al,0x1a
  4087af:	sub    DWORD PTR ds:0xb49e7d9d,ebx
  4087b5:	call   0xc385:0xb1c7b47c
  4087bc:	call   0x9f4324c4
  4087c1:	mov    bh,0x5f
  4087c3:	mov    ah,0xcb
  4087c5:	mov    ds:0x9b949f6e,al
  4087ca:	add    BYTE PTR [eax],al
  4087cc:	ins    BYTE PTR es:[edi],dx
  4087cd:	lahf   
  4087ce:	(bad)  
  4087cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d0:	fisubr DWORD PTR [eax]
  4087d2:	lahf   
  4087d3:	mov    bh,0x5f
  4087d5:	mov    ah,0x8b
  4087d7:	mov    ds:0xb0b39f4e,al
  4087dc:	cmp    DWORD PTR [eax+edi*4-0x7c5ab44f],esi
  4087e3:	mov    al,0x2f
  4087e5:	add    dh,BYTE PTR [edi-0x7c50b249]
  4087eb:	mov    cl,0x25
  4087ed:	mov    ebx,0x994086ff
  4087f2:	jno    0x408870
  4087f4:	aas    
  4087f5:	mov    ah,0x68
  4087f7:	push   esi
  4087f8:	daa    
  4087f9:	mov    eax,0x9f3a4e71
  4087fe:	jb     0x40885a
  408800:	mov    eax,ds:0x2d3b0002
  408805:	pushf  
  408806:	push   esp
  408807:	cmp    bh,BYTE PTR [edx+esi*4]
  40880a:	push   ebx
  40880b:	push   ecx
  40880c:	sub    ebx,DWORD PTR [edi-0x4b8db2a0]
  408812:	pusha  
  408813:	cmp    ecx,DWORD PTR ds:0xfd35ff28
  408819:	mov    cl,0x4b
  40881b:	push   cs
  40881c:	clc    
  40881d:	mov    ds:0x28150543,eax
  408822:	call   FWORD PTR ds:0xc46b1fd
  408828:	in     eax,dx
  408829:	ret    
  40882a:	imul   ecx,DWORD PTR ds:0xd6da2e1,0x0
  408831:	add    BYTE PTR ds:0x9ebeff9f,dh
  408837:	sahf   
  408838:	inc    edi
  40883a:	sahf   
  40883b:	scas   al,BYTE PTR es:[edi]
  40883c:	(bad)  
  40883d:	call   0xba408ae0
  408842:	sahf   
  408843:	mov    bh,0xff
  408845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408846:	sahf   
  408847:	into   
  408848:	call   FWORD PTR [ebp-0x65003e62]
  40884e:	sahf   
  40884f:	mov    ebp,0xb59e94ff
  408854:	(bad)  
  408855:	mov    edi,0x9affa39e
  40885a:	sahf   
  40885b:	xchg   edi,eax
  40885c:	call   FWORD PTR [ecx-0x71006862]
  408862:	sahf   
  408863:	scas   al,BYTE PTR es:[edi]
  408864:	jmp    FWORD PTR [esi+ebx*4+0xdffffcf]
  40886b:	add    al,0x6e
  40886d:	add    BYTE PTR [eax],bl
  40886f:	add    al,0x6f
  408871:	add    BYTE PTR [ebx],bl
  408873:	add    al,0x73
  408875:	add    BYTE PTR [ebx+eax*1+0x4e],ah
  408879:	add    al,cl
  40887b:	(bad)  
  40887c:	pop    ebx
  40887d:	add    BYTE PTR [edi-0x29ff8b02],dh
  408883:	(bad)  
  408884:	jno    0x408886
  408886:	fsin   
  408888:	ins    DWORD PTR es:[edi],dx
  408889:	add    BYTE PTR [eax-0x26ffaa02],ch
  40888f:	(bad)  
  408890:	jno    0x408892
  408892:	xchg   edi,eax
  408893:	(bad)  
  408894:	push   0x93000000
  408899:	(bad)  
  40889a:	ins    DWORD PTR es:[edi],dx
  40889b:	add    al,ah
  40889d:	dec    BYTE PTR [edi+0x0]
  4088a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a1:	(bad)  
  4088a2:	outs   dx,BYTE PTR ds:[esi]
  4088a3:	add    BYTE PTR [edx+0x300068fe],ch
  4088a9:	add    esp,DWORD PTR [ebp+0x0]
  4088ac:	jo     0x4088ac
  4088ae:	push   0x74032700
  4088b3:	add    BYTE PTR [eax+0x170024fe],dh
  4088b9:	add    eax,DWORD PTR [eax]
  4088bb:	add    BYTE PTR [ebx+eax*1+0x72],al
  4088bf:	add    bl,dl
  4088c1:	add    ah,BYTE PTR [esi+0x0]
  4088c4:	fld    QWORD PTR [edx]
  4088c6:	ins    BYTE PTR es:[edi],dx
  4088c7:	add    cl,bl
  4088c9:	add    cl,BYTE PTR [ecx+0x0]
  4088cc:	rol    DWORD PTR [edx],1
  4088ce:	popa   
  4088cf:	add    bl,bl
  4088d1:	add    ah,BYTE PTR [ebp+0x0]
  4088d4:	xor    al,0x3
  4088d6:	popa   
  4088d7:	add    BYTE PTR [eax],cl
  4088d9:	add    ebp,DWORD PTR [eax+0x0]
  4088dc:	mov    ah,0x2
  4088de:	add    BYTE PTR [eax],al
  4088e0:	mov    ah,0x56
  4088e2:	xor    eax,0xaf1a9d19
  4088e7:	xor    eax,0xd0452c94
  4088ec:	and    eax,0x25d04545
  4088f1:	dec    ebx
  4088f2:	out    0x39,al
  4088f4:	aas    
  4088f5:	pop    ds
  4088f6:	add    eax,DWORD PTR [eax]
  4088f8:	popf   
  4088f9:	inc    esi
  4088fa:	std    
  4088fb:	inc    DWORD PTR [eax]
  4088fd:	add    BYTE PTR [edx-0x7d001c1e],cl
  408903:	test   DWORD PTR [ecx+0x40],esi
  408906:	popf   
  408907:	pop    ds
  408908:	imul   eax,DWORD PTR [eax-0x63],0x13
  40890c:	imul   eax,DWORD PTR [eax-0x63],0xffffffbf
  408910:	rol    DWORD PTR [ecx-0x63],0xc2
  408914:	push   0x40
  408916:	popf   
  408917:	cmp    ebp,DWORD PTR [ebx+0x40]
  40891a:	popf   
  40891b:	adc    al,0x6a
  40891d:	inc    eax
  40891e:	popf   
  40891f:	ffreep st(1)
  408921:	inc    ecx
  408922:	popf   
  408923:	loop   0x4088e6
  408925:	inc    ecx
  408926:	popf   
  408927:	mov    al,ds:0x1b9d406c
  40892c:	add    eax,DWORD PTR [eax]
  40892e:	popf   
  40892f:	sbb    eax,DWORD PTR [ebx]
  408931:	add    BYTE PTR [ebp-0x62bfcc3a],bl
  408937:	jp     0x408939
  408939:	dec    ebx
  40893a:	and    BYTE PTR [ebx+0x14],ch
  40893d:	shr    BYTE PTR [edx+ebx*4+0x54dd006b],1
  408944:	dec    ebx
  408945:	pop    edx
  408946:	xor    DWORD PTR [ebx-0x600fba31],ebx
  40894c:	adc    al,0xd0
  40894e:	mov    WORD PTR [eax+0x74bd0067],ss
  408954:	dec    ecx
  408955:	shl    DWORD PTR [edi-0x2f7b17f2],1
  40895b:	popf   
  40895c:	test   al,0xcf
  40895e:	lods   al,BYTE PTR ds:[esi]
  40895f:	add    ch,BYTE PTR [ebx-0x2a]
  408962:	add    BYTE PTR [eax],al
  408964:	ret    0xae65
  408967:	dec    ebx
  408968:	push   edi
  408969:	outs   dx,BYTE PTR ds:[esi]
  40896a:	mov    eax,0x673f5584
  40896f:	test   eax,0xd66b13da
  408974:	mov    ds:0xf74bae65,al
  408979:	outs   dx,BYTE PTR ds:[esi]
  40897a:	sbb    al,0xe8
  40897c:	sbb    DWORD PTR [edi],esp
  40897e:	addr16 test eax,0xd56b135a
  408984:	and    BYTE PTR [ebp+0x2e],0x4c
  408988:	xlat   BYTE PTR ds:[ebx]
  408989:	outs   dx,BYTE PTR ds:[esi]
  40898a:	adc    BYTE PTR [ebp-0x4333e25f],0x4d
  408991:	adc    esi,DWORD PTR [ebx-0x72]
  408994:	popf   
  408995:	inc    edx
  408996:	cs imul ebp,esp,0x31
  40899a:	adc    DWORD PTR [ebp-0x4353e25f],0x6d
  4089a1:	adc    esi,DWORD PTR [ebx-0x72]
  4089a4:	popf   
  4089a5:	inc    edx
  4089a6:	cs imul ecx,esp,0x31
  4089aa:	jecxz  0x4089af
  4089ac:	popf   
  4089ad:	add    dh,BYTE PTR [ecx+0x35]
  4089b0:	fld    QWORD PTR [edx]
  4089b2:	cmp    DWORD PTR [edi],esp
  4089b4:	fld    QWORD PTR [edx]
  4089b6:	mov    dl,0x29
  4089b8:	pop    ebp
  4089b9:	add    al,BYTE PTR [edx]
  4089bb:	add    al,0x78
  4089bd:	add    bh,bl
  4089bf:	add    edi,DWORD PTR [ebx+0x2]
  4089c2:	int3   
  4089c3:	add    esi,DWORD PTR [ecx+0x2]
  4089c6:	sbb    al,BYTE PTR [eax+eax*1]
  4089c9:	add    BYTE PTR [edi+0x79040702],ch
  4089cf:	add    bh,BYTE PTR [ebp-0x16fd86fd]
  4089d5:	add    ebx,DWORD PTR [ebp+0x4e9ea602]
  4089db:	mov    esp,0x9e2abfff
  4089e0:	dec    eax
  4089e1:	mov    edi,0x947193fc
  4089e6:	push   DWORD PTR [eax-0x3ceb7198]
  4089ec:	js     0x40898f
  4089ee:	call   DWORD PTR [esi-0x41f4829d]
  4089f4:	ja     0x4089df
  4089f6:	sahf   
  4089f7:	add    al,BYTE PTR [eax]
  4089f9:	call   0x9f2a:0x8045b03b
  408a00:	dec    eax
  408a01:	jg     0x408a3f
  408a03:	xchg   ebp,eax
  408a04:	jno    0x408a5a
  408a06:	cmp    BYTE PTR [eax-0x3decb198],dh
  408a0c:	js     0x408a2f
  408a0e:	cmp    BYTE PTR [esi+0x243c3d63],dl
  408a14:	call   FWORD PTR [ebx]
  408a16:	and    eax,edx
  408a18:	pop    ds
  408a19:	stc    
  408a1a:	dec    esi
  408a1b:	icebp  
  408a1c:	sub    eax,0x9f14ef9
  408a21:	jmp    0x3b408cc4
  408a26:	add    eax,edx
  408a28:	pop    ds
  408a29:	jmp    0x7408ccc
  408a2e:	add    BYTE PTR [eax],al
  408a30:	cdq    
  408a31:	scas   eax,DWORD PTR es:[edi]
  408a32:	call   FWORD PTR [eax]
  408a34:	mov    eax,ds:0x9ebcffb0
  408a39:	aam    0xff
  408a3b:	add    al,0xa1
  408a3d:	xchg   esi,eax
  408a3e:	inc    DWORD PTR [ecx+ebx*4]
  408a41:	add    al,BYTE PTR [eax]
  408a43:	sbb    edi,ebp
  408a45:	les    ecx,FWORD PTR [esi-0x27]
  408a48:	cmp    eax,0xceaa5396
  408a4d:	shr    BYTE PTR [esi-0x36],1
  408a50:	pop    ss
  408a51:	lahf   
  408a52:	jae    0x408a3d
  408a54:	sahf   
  408a55:	add    al,BYTE PTR [eax]
  408a57:	add    BYTE PTR [edx+edx*2],al
  408a5a:	pop    esi
  408a5b:	inc    ebx
  408a5c:	call   0xc4a5fced
  408a61:	(bad)  
  408a62:	(bad)  
  408a63:	jmp    DWORD PTR [edx+edx*2]
  408a66:	pop    esi
  408a67:	push   eax
  408a68:	sub    ecx,DWORD PTR [ebx+ebp*2+0x5e51f400]
  408a6f:	push   edx
  408a70:	and    DWORD PTR [edi+0x63],ebx
  408a73:	add    ah,ah
  408a75:	push   ecx
  408a76:	pop    esi
  408a77:	push   edi
  408a78:	xchg   BYTE PTR es:[ebx+0x65],dh
  408a7c:	test   bh,bh
  408a7e:	(bad)  
  408a7f:	inc    DWORD PTR [edi+edi*8-0x8b0001]
  408a86:	(bad)  
  408a87:	push   DWORD PTR [edi+edi*8-0x1]
  408a8b:	inc    DWORD PTR [edi+edi*8+0x18940000]
  408a92:	das    
  408a93:	add    BYTE PTR [eax],al
  408a95:	add    BYTE PTR [esi+0x14],ah
  408a98:	inc    eax
  408a99:	add    BYTE PTR [ecx+0x1b],ah
  408a9c:	inc    eax
  408a9d:	add    BYTE PTR [esi],dh
  408a9f:	sbb    eax,DWORD PTR [eax+0x0]
  408aa2:	inc    ecx
  408aa3:	sbb    al,BYTE PTR [eax+0x0]
  408aa6:	lock sbb al,BYTE PTR [eax+0x0]
  408aaa:	imul   edi,edi,0x45ffff
  408ab0:	add    al,0x0
  408ab2:	pop    esi
  408ab3:	dec    esp
  408ab4:	sub    DWORD PTR [eax],eax
  408ab6:	imul   edx,DWORD PTR fs:[edx+0x54],0x34
  408abb:	(bad)  
  408abc:	(bad)  
  408abd:	inc    ebx
  408abf:	inc    ecx
  408ac0:	push   ebx
  408ac1:	add    BYTE PTR [edx+edx*2+0x2e4b5053],bh
  408ac8:	sub    eax,0xfffef431
  408acd:	inc    DWORD PTR [ebp+0x60]
  408ad0:	bound  esp,QWORD PTR [ebp-0x63]
  408ad3:	dec    ecx
  408ad4:	scas   eax,DWORD PTR es:[edi]
  408ad5:	sub    al,0x59
  408ad7:	cmp    dl,BYTE PTR [ebp-0x61c5979a]
  408add:	fs xchg edi,eax
  408adf:	stc    
  408ae0:	add    eax,DWORD PTR [eax]
  408ae2:	popf   
  408ae3:	pop    eax
  408ae4:	xchg   esi,eax
  408ae5:	ins    DWORD PTR es:[edi],dx
  408ae6:	cmp    edi,DWORD PTR [esi]
  408ae8:	mov    ds:0x958c3473,al
  408aed:	cmp    DWORD PTR [ebp+0x58],edi
  408af0:	xchg   edi,eax
  408af1:	outs   dx,BYTE PTR ds:[esi]
  408af2:	cs jbe 0x408aed
  408af5:	or     DWORD PTR [ebp+0x6bb18e],ebx
  408afb:	add    BYTE PTR [eax],dh
  408afd:	mov    WORD PTR [ebp-0x686ffed3],ss
  408b03:	call   DWORD PTR [edx-0x38c5e97]
  408b09:	adc    BYTE PTR [ebp-0x4e30f1ac],0x40
  408b10:	add    al,bh
  408b12:	xchg   ebp,eax
  408b13:	jae    0x408ae3
  408b15:	mov    edi,0xc8fb68b1
  408b1a:	add    eax,DWORD PTR [eax]
  408b1c:	popf   
  408b1d:	lock mov esi,0x32b7d53
  408b23:	add    BYTE PTR [ebp-0xead4b05],bl
  408b29:	or     eax,DWORD PTR [eax+eax*1]
  408b2c:	popf   
  408b2d:	neg    DWORD PTR [edx-0x120bc501]
  408b33:	push   DWORD PTR [edx]
  408b35:	add    al,0xef
  408b37:	jmp    FWORD PTR [edx]
  408b39:	add    al,0xf0
  408b3b:	jmp    DWORD PTR [edx]
  408b3d:	hlt    
  408b3e:	lock call FWORD PTR [edx]
  408b41:	hlt    
  408b42:	icebp  
  408b43:	call   DWORD PTR [edx]
  408b45:	add    al,0xf3
  408b47:	dec    DWORD PTR [edx]
  408b49:	or     BYTE PTR [ebx-0x22fd628b],bl
  408b4f:	lahf   
  408b50:	cli    
  408b51:	and    ebp,edx
  408b53:	mov    cl,0xf2
  408b55:	and    ecx,eax
  408b57:	mov    cl,0xea
  408b59:	and    ebx,ecx
  408b5b:	mov    cl,0xe2
  408b5d:	and    ebx,ebp
  408b5f:	add    DWORD PTR [eax],eax
  408b61:	add    BYTE PTR [edi-0x60fe15fc],bl
  408b67:	add    al,0xeb
  408b69:	add    DWORD PTR [edi-0x6b061cfc],ebx
  408b6f:	loop   0x408b63
  408b71:	stc    
  408b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b73:	or     al,0xf3
  408b75:	stc    
  408b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b77:	or     al,0x9a
  408b79:	mov    al,ds:0xaf98ab2c
  408b7e:	mov    ds:0xfa19721,al
  408b83:	xchg   ebx,eax
  408b84:	rol    DWORD PTR [ebx],0x9d
  408b87:	add    ch,BYTE PTR [ebx-0x7653f05e]
  408b8d:	jecxz  0x408b11
  408b8f:	and    DWORD PTR [eax],esi
  408b91:	mov    cl,0xd3
  408b93:	mov    cl,0x55
  408b95:	out    dx,al
  408b96:	scas   al,BYTE PTR es:[edi]
  408b97:	mov    dl,0x5a
  408b99:	xchg   ebp,eax
  408b9a:	jmp    DWORD PTR [edi+0x2162b159]
  408ba0:	or     eax,DWORD PTR [eax+eax*4]
  408ba3:	add    bh,BYTE PTR [edx]
  408ba5:	add    al,0x7f
  408ba7:	add    ch,cl
  408ba9:	add    ebx,DWORD PTR [ebp+0x78040b02]
  408baf:	add    bl,BYTE PTR [edx]
  408bb1:	add    al,0x7f
  408bb3:	add    cl,cl
  408bb5:	add    edi,DWORD PTR [eax+0x2]
  408bb8:	sbb    al,BYTE PTR [ebx*4-0x464eebfe]
  408bbf:	xchg   esp,eax
  408bc0:	or     edx,DWORD PTR [esi-0x67fb0f70]
  408bc6:	add    BYTE PTR [eax],al
  408bc8:	xchg   BYTE PTR [edx],al
  408bca:	add    BYTE PTR [edx],ch
  408bcc:	dec    edi
  408bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bce:	pusha  
  408bcf:	cmc    
  408bd0:	and    eax,esi
  408bd2:	ins    DWORD PTR es:[edi],dx
  408bd3:	fist   WORD PTR [edi]
  408bd5:	xchg   ebx,eax
  408bd6:	outs   dx,BYTE PTR ds:[esi]
  408bd7:	iret   
  408bd8:	or     esp,DWORD PTR [esi-0x53232293]
  408bde:	outs   dx,BYTE PTR ds:[esi]
  408bdf:	retf   0x2105
  408be2:	jmp    FWORD PTR [ebp-0x448c6bc5]
  408be8:	sub    DWORD PTR [edx-0x560738bc],ebx
  408bee:	jno    0x408bae
  408bf0:	sub    BYTE PTR [esi-0x3cf5689c],ch
  408bf6:	imul   ecx,DWORD PTR [esi-0x66005403],0xffffff9e
  408bfd:	stos   BYTE PTR es:[edi],al
  408bfe:	inc    DWORD PTR [ebx-0x6b005162]
  408c04:	sahf   
  408c05:	sar    edi,cl
  408c07:	mov    edx,0x8cfff09e
  408c0c:	sahf   
  408c0d:	scas   al,BYTE PTR es:[edi]
  408c0e:	(bad)  
  408c0f:	jl     0x408baf
  408c11:	add    al,BYTE PTR [eax]
  408c13:	and    eax,DWORD PTR [ebp+0xf]
  408c16:	or     al,BYTE PTR [ebp+0x44]
  408c19:	lods   al,BYTE PTR ds:[esi]
  408c1a:	pop    ds
  408c1b:	or     esi,DWORD PTR [ebp+edx*4+0x21]
  408c1f:	fcom   QWORD PTR [eax+0x40965a9]
  408c25:	cwde   
  408c26:	push   0x2200353a
  408c2b:	or     al,0x0
  408c2d:	add    BYTE PTR [edx],dh
  408c2f:	loop   0x408c50
  408c31:	inc    esi
  408c32:	push   cs
  408c33:	xchg   esp,eax
  408c34:	outs   dx,BYTE PTR ds:[esi]
  408c35:	leave  
  408c36:	add    ah,BYTE PTR [eax]
  408c38:	dec    DWORD PTR [ebx]
  408c3a:	cdq    
  408c3b:	mov    eax,ds:0x2a11cff
  408c40:	add    BYTE PTR [ecx],ch
  408c42:	hlt    
  408c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c44:	add    BYTE PTR [bp+di+0x6e26],dh
  408c49:	call   0x725:0x9f1
  408c4f:	repz or DWORD PTR [ecx+ebx*4+0x52],esp
  408c54:	pop    ds
  408c55:	das    
  408c56:	dec    edx
  408c57:	and    al,0x21
  408c59:	and    eax,0xa0c25d7
  408c5e:	hlt    
  408c5f:	add    eax,DWORD PTR [eax]
  408c61:	add    bl,ah
  408c63:	add    esp,DWORD PTR [ebx+0x0]
  408c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c67:	push   es
  408c68:	and    al,BYTE PTR [eax]
  408c6a:	cdq    
  408c6b:	push   es
  408c6c:	jae    0x408c6e
  408c6e:	xchg   esi,eax
  408c6f:	push   es
  408c70:	add    BYTE PTR [eax],al
  408c72:	test   DWORD PTR [ebx],0x411006f
  408c78:	push   ebx
  408c79:	add    BYTE PTR [esp+eax*1],dl
  408c7c:	add    BYTE PTR gs:[edi],dl
  408c7f:	add    al,0x0
  408c81:	add    cl,al
  408c83:	or     eax,0x3840a0d
  408c88:	add    BYTE PTR [eax],al
  408c8a:	push   esp
  408c8b:	repnz or DWORD PTR ds:0x37e,ecx
  408c92:	add    BYTE PTR [eax],al
  408c94:	pop    ecx
  408c95:	jnp    0x408c96
  408c97:	push   DWORD PTR [edi-0x48ff9afa]
  408c9d:	push   es
  408c9e:	push   0x7406c900
  408ca3:	add    al,bl
  408ca5:	push   es
  408ca6:	outs   dx,DWORD PTR ds:[esi]
  408ca7:	add    BYTE PTR [ebx-0x4bff91fa],bl
  408cad:	push   es
  408cae:	jb     0x408cb0
  408cb0:	fld    QWORD PTR [esi]
  408cb2:	jbe    0x408cb4
  408cb4:	fld    QWORD PTR [esi]
  408cb6:	ins    BYTE PTR es:[edi],dx
  408cb7:	add    BYTE PTR [ecx-0x66ff98fa],ch
  408cbd:	push   es
  408cbe:	add    BYTE PTR [eax],al
  408cc0:	popf   
  408cc1:	push   ss
  408cc2:	add    eax,DWORD PTR [eax]
  408cc4:	popf   
  408cc5:	mov    ds:0xb29d414a,eax
  408cca:	dec    ebx
  408ccb:	inc    ecx
  408ccc:	popf   
  408ccd:	cld    
  408cce:	add    edi,DWORD PTR [edx]
  408cd0:	popf   
  408cd1:	inc    ecx
  408cd2:	add    ecx,DWORD PTR [ebp-0x63]
  408cd5:	std    
  408cd6:	add    edi,DWORD PTR [ebx]
  408cd8:	popf   
  408cd9:	in     al,0x3
  408cdb:	dec    esi
  408cdc:	popf   
  408cdd:	pop    ebx
  408cde:	add    ecx,DWORD PTR [esi-0x63]
  408ce1:	pusha  
  408ce2:	add    ecx,DWORD PTR [esi-0x63]
  408ce5:	push   ecx
  408ce6:	add    edi,DWORD PTR [ebx]
  408ce8:	popf   
  408ce9:	add    al,0x4
  408ceb:	cmp    ebx,DWORD PTR [ebp-0x62a8fc93]
  408cf1:	add    al,BYTE PTR [eax+eax*1]
  408cf4:	popf   
  408cf5:	xchg   ecx,eax
  408cf6:	cmp    al,BYTE PTR [ecx+0x0]
  408cf9:	add    BYTE PTR [ebp-0x62bebe33],bl
  408cff:	mov    bl,0x41
  408d01:	inc    ecx
  408d02:	popf   
  408d03:	pop    esp
  408d04:	add    edi,DWORD PTR [ecx-0x63]
  408d07:	jl     0x408d0c
  408d09:	dec    esp
  408d0a:	popf   
  408d0b:	jb     0x408d10
  408d0d:	jae    0x408cac
  408d0f:	xchg   edi,eax
  408d10:	add    dl,BYTE PTR [esi-0x63]
  408d13:	add    BYTE PTR [ebx],0x65
  408d16:	popf   
  408d17:	xchg   esp,eax
  408d18:	add    dh,BYTE PTR [ebx]
  408d1a:	popf   
  408d1b:	stc    
  408d1c:	add    eax,DWORD PTR [eax]
  408d1e:	popf   
  408d1f:	out    dx,al
  408d20:	add    eax,DWORD PTR [ebp+ebx*4-0x1e]
  408d24:	add    eax,DWORD PTR [ebx-0x63]
  408d27:	fild   WORD PTR [ebx]
  408d29:	imul   ebx,DWORD PTR [ebp-0x6291fc32],0x9d0003d7
  408d33:	call   0xc8ddf63b
  408d38:	add    esp,DWORD PTR [ebp-0x63]
  408d3b:	add    bl,BYTE PTR [ebx]
  408d3d:	add    al,0xc2
  408d3f:	add    dh,BYTE PTR [esp+eax*1]
  408d42:	aam    0x2
  408d44:	ds add al,0xb3
  408d47:	add    al,BYTE PTR ds:0xfb026304
  408d4d:	add    edi,DWORD PTR [edx+eax*1+0xc]
  408d51:	add    al,0x80
  408d53:	add    ch,cl
  408d55:	add    ebx,DWORD PTR [ebp-0x75fbd5fe]
  408d5b:	add    dl,bh
  408d5d:	add    eax,DWORD PTR [eax]
  408d5f:	add    BYTE PTR [esi+0x2],ch
  408d62:	into   
  408d63:	add    edi,DWORD PTR [ecx+0x2]
  408d66:	int3   
  408d67:	add    ecx,DWORD PTR [edx+0x2]
  408d6a:	rol    BYTE PTR [ebx],0x4b
  408d6d:	add    cl,ch
  408d6f:	add    eax,DWORD PTR [edx+0x2]
  408d72:	mov    dh,0x3
  408d74:	pop    esi
  408d75:	add    al,ch
  408d77:	add    edi,DWORD PTR [edx+eax*1]
  408d7a:	mov    edx,0xe9022e03
  408d7f:	add    ebx,DWORD PTR [ebp+0x6e03ca02]
  408d85:	add    bl,bl
  408d87:	add    ebp,DWORD PTR [edx+0x2]
  408d8a:	xlat   BYTE PTR ds:[ebx]
  408d8b:	add    edx,ebp
  408d8d:	add    ch,cl
  408d8f:	add    ebx,DWORD PTR [ebp+0x4039a02]
  408d95:	add    edi,DWORD PTR [edx+0x3]
  408d98:	out    dx,al
  408d99:	add    al,BYTE PTR [ecx+0x4d02fc03]
  408d9f:	add    al,0x2
  408da1:	add    edx,DWORD PTR [esi+0x4]
  408da4:	popf   
  408da5:	add    ch,BYTE PTR [edi]
  408da7:	retf   
  408da8:	retf   0x23cf
  408dab:	add    al,0x9d
  408dad:	add    al,al
  408daf:	and    dl,BYTE PTR [edx+0x2]
  408db2:	stos   BYTE PTR es:[edi],al
  408db3:	cmp    edx,DWORD PTR [esi+0x40]
  408db6:	add    BYTE PTR [esp+edx*1-0x615f39b3],ch
  408dbd:	add    al,BYTE PTR [eax]
  408dbf:	mov    ebx,edi
  408dc1:	xor    edx,esp
  408dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc4:	add    BYTE PTR [eax],al
  408dc6:	aam    0x40
  408dc8:	xlat   BYTE PTR ds:[ebx]
  408dc9:	test   al,0x66
  408dcb:	sbb    ch,bl
  408dcd:	popf   
  408dce:	fcomp  DWORD PTR [ecx]
  408dd0:	fsub   DWORD PTR [ebx-0x6a25c338]
  408dd6:	mov    dl,0x38
  408dd8:	rcl    BYTE PTR [ecx-0x5d2eb6a3],0x5f
  408ddf:	cs add dl,dl
  408de2:	inc    edx
  408de3:	call   0xdb36:0xaf13de6e
  408dea:	add    DWORD PTR [ebp-0x391f5701],edx
  408df0:	inc    esp
  408df1:	iret   
  408df2:	xor    eax,0xfbb368a0
  408df7:	xchg   esp,eax
  408df8:	ins    DWORD PTR es:[edi],dx
  408df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dfa:	sub    edx,DWORD PTR [ebx+0x29ec07c]
  408e00:	add    ch,al
  408e02:	fdivr  QWORD PTR [edx-0x5b0663b3]
  408e08:	inc    eax
  408e09:	(bad)  
  408e0a:	in     eax,dx
  408e0b:	scas   al,BYTE PTR es:[edi]
  408e0c:	jno    0x408d9d
  408e0e:	sahf   
  408e0f:	add    al,BYTE PTR [eax]
  408e11:	jmp    0xbc5192ae
  408e16:	jne    0x408df0
  408e18:	xor    al,0xc4
  408e1a:	jge    0x408e07
  408e1c:	cmp    cl,ah
  408e1e:	jge    0x408e0a
  408e20:	sub    dl,BYTE PTR [edi]
  408e22:	sub    cl,0x36
  408e25:	cmc    
  408e26:	sahf   
  408e27:	add    al,BYTE PTR [eax]
  408e29:	clc    
  408e2a:	add    BYTE PTR [eax],al
  408e2c:	outs   dx,DWORD PTR ds:[esi]
  408e2d:	cmc    
  408e2e:	add    edi,ebx
  408e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e31:	scas   eax,DWORD PTR es:[edi]
  408e32:	push   edx
  408e33:	add    BYTE PTR [edi+eax*1+0x340100],al
  408e3a:	add    BYTE PTR [eax],al
  408e3c:	loope  0x408dec
  408e3e:	mov    eax,ds:0xb1a0b1b1
  408e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e44:	mov    dh,0x8c
  408e46:	mov    esp,0xbba8babd
  408e4b:	test   al,0xae
  408e4d:	mov    esi,0xa28589a2
  408e52:	mov    ch,0xa5
  408e54:	ins    DWORD PTR es:[edi],dx
  408e55:	mov    esp,0x9482b8ad
  408e5a:	mov    al,0xba
  408e5c:	pusha  
  408e5d:	mov    ss,WORD PTR [edi-0x6c7f76]
  408e63:	push   DWORD PTR [edi-0x54]
  408e66:	mov    ds:0xb3ab07b7,eax
  408e6b:	mov    ds:0xa8a38a60,al
  408e70:	sub    ah,BYTE PTR [ecx-0x56ad5f44]
  408e76:	(bad)  
  408e77:	inc    DWORD PTR [esi]
  408e79:	push   0x7ad86a6d
  408e7e:	outs   dx,BYTE PTR ds:[esi]
  408e7f:	add    BYTE PTR [edx-0x43cddad1],dh
  408e85:	or     DWORD PTR [ebx],esi
  408e87:	and    eax,0x2735ce
  408e8c:	fnstcw WORD PTR [ecx+0x54]
  408e8f:	add    BYTE PTR cs:[eax],al
  408e92:	push   0x542a553a
  408e97:	ds pop ecx
  408e99:	add    BYTE PTR [edi-0x5c323e35],dl
  408e9f:	mov    edi,0xc5a9f0cc
  408ea4:	enter  0x2cd9,0xdd
  408ea8:	(bad)  
  408eaa:	je     0x408eab
  408eac:	(bad)  
  408ead:	call   FWORD PTR [ebp-0x39936d22]
  408eb3:	mov    dl,0x98
  408eb5:	jne    0x408ea9
  408eb7:	fisub  WORD PTR [edx+esi*2-0x648c5263]
  408ebe:	adc    eax,0x188b79a5
  408ec3:	mov    al,ds:0xc9eabc79
  408ec8:	pop    edi
  408ec9:	mov    ds:0x9158b1ea,al
  408ece:	push   es
  408ecf:	(bad)  
  408ed0:	lods   ax,WORD PTR ds:[esi]
  408ed2:	inc    edx
  408ed3:	mov    ecx,0xbc27e557
  408ed8:	jl     0x408e5c
  408eda:	push   eax
  408edb:	scas   al,BYTE PTR es:[edi]
  408edc:	mov    ds,WORD PTR [eax-0x63915bd1]
  408ee2:	daa    
  408ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee4:	jge    0x408e80
  408ee6:	pop    ss
  408ee7:	sub    DWORD PTR [ebx],eax
  408ee9:	add    BYTE PTR [ebp+0x6463ae38],bl
  408eef:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408ef1:	je     0x408f31
  408ef3:	stc    
  408ef4:	cdq    
  408ef5:	arpl   WORD PTR [eax],ax
  408ef7:	add    BYTE PTR [ebp+0x29],dl
  408efa:	add    eax,DWORD PTR [eax]
  408efc:	popf   
  408efd:	call   0xb56e:0x7ffeb164
  408f04:	(bad)  
  408f05:	call   0xdfe:0x129dac50
  408f0c:	mov    eax,ds:0x9542042a
  408f11:	syscall 
  408f13:	add    BYTE PTR [ebp-0x4feefee0],bl
  408f19:	sub    esi,edx
  408f1b:	push   cs
  408f1c:	in     al,0x36
  408f1e:	add    al,0x1f
  408f20:	popf   
  408f21:	fsub   QWORD PTR ds:[edi]
  408f24:	lods   al,BYTE PTR ds:[esi]
  408f25:	push   ebx
  408f26:	shl    DWORD PTR [edi],1
  408f28:	in     eax,dx
  408f29:	add    bl,BYTE PTR ds:0x7402b0ec
  408f2f:	or     DWORD PTR ds:0x3189648c,0x75
  408f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f37:	(bad)  
  408f38:	cs mov ch,cl
  408f3b:	add    ebx,DWORD PTR [ebp+0x15736a02]
  408f41:	dec    ebp
  408f42:	outs   dx,DWORD PTR ds:[esi]
  408f43:	jp     0x408f66
  408f45:	add    esp,DWORD PTR [esi]
  408f47:	call   0x90ca:0x940da5c2
  408f4e:	sub    BYTE PTR [ebx+ebp*4-0x7a69fd6a],dh
  408f55:	mov    cs,WORD PTR [edx]
  408f57:	xchg   ebx,eax
  408f58:	je     0x408f0c
  408f5a:	shrd   DWORD PTR [eax],eax,cl
  408f5d:	add    BYTE PTR [eax+0x6c9e01a6],al
  408f63:	(bad)  
  408f64:	repz cwde 
  408f66:	jb     0x408f10
  408f68:	adc    al,bl
  408f6a:	mov    dl,0xb4
  408f6c:	stos   BYTE PTR es:[edi],al
  408f6d:	rol    DWORD PTR [edi-0x4a],0xba
  408f71:	mov    ds:0x3becc76,al
  408f76:	popf   
  408f77:	add    al,BYTE PTR ds:0xcfa43ae3
  408f7d:	or     BYTE PTR [edi-0x1f],bh
  408f80:	retf   0x3bab
  408f83:	xchg   edi,eax
  408f84:	jmp    0x96af:0xba9b88ea
  408f8b:	rcr    esp,1
  408f8d:	mov    al,ds:0xf48eac2e
  408f92:	pusha  
  408f93:	fisttp QWORD PTR [edx-0x1b0c0160]
  408f99:	add    dh,cl
  408f9b:	mov    bh,0xa6
  408f9d:	mov    al,0xc2
  408f9f:	add    eax,0xb3e6b0f1
  408fa4:	dec    edx
  408fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa7:	or     BYTE PTR [ecx-0x66],bl
  408faa:	sub    eax,0x55fd16dd
  408faf:	mov    ebp,0x299175e
  408fb4:	add    BYTE PTR [ecx],ch
  408fb6:	push   0x61eb57cd
  408fbb:	ret    0x1c44
  408fbe:	pusha  
  408fbf:	sbb    edi,edi
  408fc1:	test   DWORD PTR [eax],0x24d16600
  408fc7:	std    
  408fc8:	sahf   
  408fc9:	add    al,BYTE PTR [eax]
  408fcb:	jmp    0x4a40926e
  408fd0:	retf   
  408fd1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408fd3:	mov    dh,0x67
  408fd5:	test   BYTE PTR [esi-0x2789d785],al
  408fdb:	push   esi
  408fdc:	test   BYTE PTR [ebx-0x54],ch
  408fdf:	mov    ch,0xcd
  408fe1:	dec    ecx
  408fe2:	rcl    DWORD PTR [ebx+0x518b67b2],1
  408fe8:	js     0x40901f
  408fea:	enter  0x2562,0x8d
  408fee:	lea    ecx,[edi+0x3cdd5f48]
  408ff4:	imul   edx,DWORD PTR [eax-0x49],0xf5674497
  408ffb:	jae    0x40906b
  408ffd:	pop    eax
  408ffe:	mov    bl,0x8e
  409000:	xor    eax,0x553ca769
  409005:	dec    ecx
  409006:	xchg   DWORD PTR [ebp+0x7dad6142],ecx
  40900c:	push   esp
  40900d:	pop    esi
  40900e:	mov    ds:0x95731644,eax
  409013:	and    eax,0x3df75945
  409018:	rol    BYTE PTR [ebp-0x23],cl
  40901b:	cmp    ah,ah
  40901d:	jb     0x40900f
  40901f:	add    BYTE PTR [edx-0x4c2b3a39],bh
  409025:	xchg   edi,eax
  409026:	test   BYTE PTR [ecx-0x616e0000],al
  40902c:	mov    ds:0xe8df06f0,al
  409031:	xchg   esi,eax
  409032:	pop    es
  409033:	mov    ah,0xe3
  409035:	popf   
  409036:	loope  0x408fcf
  409038:	sahf   
  409039:	add    BYTE PTR [edi-0x1d],dh
  40903c:	in     eax,dx
  40903d:	out    0x5b,al
  40903f:	out    dx,al
  409040:	test   DWORD PTR [ebp-0x1b081434],ecx
  409046:	push   ebp
  409047:	mov    ch,bh
  409049:	ror    DWORD PTR [eax],0xd7
  40904c:	loopne 0x409011
  40904e:	adc    ecx,eax
  409050:	(bad)  
  409051:	lds    esp,FWORD PTR [ecx-0x1a]
  409054:	(bad)  
  409055:	aam    0x5c
  409057:	(bad)  
  409058:	fmul   st(3),st
  40905a:	add    al,0x4
  40905c:	add    BYTE PTR [eax],al
  40905e:	xchg   DWORD PTR [edx+0x7d6b969d],edx
  409064:	idiv   ch
  409066:	sbb    al,0x9c
  409068:	xchg   DWORD PTR [ebp+edx*2-0x49496807],edx
  40906f:	mov    ds:0xa60ca2b4,al
  409074:	xchg   ebp,eax
  409075:	mov    ch,0x1b
  409077:	stos   BYTE PTR es:[edi],al
  409078:	mov    esi,0xffff2ca8
  40907d:	(bad)  
  40907e:	(bad)  
  40907f:	pop    edx
  409080:	push   esi
  409081:	pop    edi
  409082:	add    cl,BYTE PTR [esi+edi*1+0x34]
  409086:	lds    edx,FWORD PTR [ecx+0x40]
  409089:	pop    ebp
  40908a:	or     al,0x48
  40908c:	push   ebp
  40908d:	js     0x40908f
  40908f:	add    BYTE PTR [ecx],al
  409091:	pop    edi
  409092:	pop    esp
  409093:	arpl   WORD PTR [ebx],ax
  409095:	ja     0x409112
  409097:	pop    esi
  409098:	pop    es
  409099:	ins    DWORD PTR es:[edi],dx
  40909a:	data16 ja 0x40903a
  40909d:	xchg   DWORD PTR [ebx-0x16c46d01],edx
  4090a3:	sub    al,0xd2
  4090a5:	and    ecx,esi
  4090a7:	and    bh,BYTE PTR [ecx-0x45dd21aa]
  4090ad:	push   esi
  4090ae:	or     DWORD PTR [ebx],ebp
  4090b0:	mov    esp,0xfc1fcf3d
  4090b5:	sub    DWORD PTR [ebx],eax
  4090b7:	add    BYTE PTR [ebp+0x65d23466],bl
  4090bd:	dec    eax
  4090be:	sub    al,0xdc
  4090c0:	jbe    0x40912d
  4090c2:	aas    
  4090c3:	fcomp  QWORD PTR [ebp+0x53]
  4090c6:	adc    al,0xd4
  4090c8:	arpl   WORD PTR [esi+ecx*2-0x21],sp
  4090cc:	popf   
  4090cd:	cdq    
  4090ce:	test   BYTE PTR [edx+ebp*8-0x62fffcd8],ah
  4090d5:	fidivr DWORD PTR [eax+ecx*2+0x4cb8d3c3]
  4090dc:	jbe    0x4090bc
  4090de:	scas   eax,DWORD PTR es:[edi]
  4090df:	push   ebp
  4090e0:	pop    esp
  4090e1:	iret   
  4090e2:	rcr    DWORD PTR [ebp+0x63],0xde
  4090e6:	les    eax,FWORD PTR [ebx+0x59]
  4090e9:	cli    
  4090ea:	mov    edx,0xa0167875
  4090ef:	ins    DWORD PTR es:[edi],dx
  4090f0:	push   ebx
  4090f1:	fbld   TBYTE PTR [eax+ebp*2+0x546f0000]
  4090f8:	mov    esp,0xb6687756
  4090fd:	pop    ebx
  4090fe:	jbe    0x40916b
  409100:	(bad)  
  409101:	pop    ebx
  409102:	pop    ebp
  409103:	inc    edx
  409104:	(bad)  
  409105:	dec    edx
  409107:	out    dx,eax
  409108:	iret   
  409109:	and    al,0x8c
  40910b:	shl    DWORD PTR ds:[ecx],1
  40910e:	jge    0x409123
  409110:	stos   DWORD PTR es:[edi],eax
  409111:	sub    al,0x86
  409113:	adc    bh,BYTE PTR [eax-0x21fdc4a4]
  409119:	aam    0x7b
  40911b:	ret    
  40911c:	test   eax,0xc3cdcd8f
  409121:	into   
  409122:	in     eax,0x98
  409124:	rcr    bh,1
  409126:	vpand  ymm0,ymm5,ymm3
  40912a:	adc    BYTE PTR [esi],0xe9
  40912d:	add    ebx,DWORD PTR [ebp-0x6d3223fe]
  409133:	fmul   QWORD PTR [edi+0x5cfd95c9]
  409139:	add    dl,BYTE PTR [edi-0x5efc1671]
  40913f:	mov    cl,0xf3
  409141:	aam    0x8b
  409143:	les    ebp,FWORD PTR ds:0xdda9b0fe
  409149:	cli    
  40914a:	mov    esi,0xdcf0d7ee
  40914f:	lock jmp 0xada9:0x1a8beff
  409157:	mov    ds:0x961c,eax
  40915c:	jns    0x40913a
  40915e:	(bad)  
  40915f:	xchg   edx,eax
  409160:	mov    edi,0x859310e2
  409165:	xchg   ecx,eax
  409166:	rcr    DWORD PTR [ecx-0x6bf90f52],1
  40916c:	leave  
  40916d:	xchg   ebx,eax
  40916e:	adc    DWORD PTR [ebp-0x37da6184],ebx
  409174:	pop    edx
  409175:	cmc    
  409176:	pop    ds
  409177:	into   
  409178:	cwde   
  409179:	std    
  40917a:	stc    
  40917b:	or     bl,BYTE PTR [eax+0x2]
  40917e:	jmp    0xea432e86
  409183:	add    DWORD PTR [esp+eax*1-0x85f3c1e],esp
  40918a:	in     eax,dx
  40918b:	inc    edx
  40918d:	adc    eax,0xa547a6b6
  409192:	(bad)  
  409193:	mov    edi,0xabffac0e
  409198:	add    bl,BYTE PTR [eax-0x66fc6999]
  40919e:	pusha  
  40919f:	nop
  4091a0:	xor    DWORD PTR [eax+ebx*2+0x23b92ece],ecx
  4091a7:	mov    edi,0xc641a179
  4091ac:	jno    0x4091a3
  4091ae:	pusha  
  4091af:	rcl    DWORD PTR [ebx],0xa1
  4091b2:	jno    0x40919d
  4091b4:	sahf   
  4091b5:	add    al,BYTE PTR [eax]
  4091b7:	jae    0x4091c1
  4091b9:	fwait
  4091ba:	jnp    0x409212
  4091bc:	or     al,0xa9
  4091be:	dec    DWORD PTR [edi]
  4091c0:	add    BYTE PTR [eax],al
  4091c2:	dec    edi
  4091c3:	repz or eax,0xffbd50e7
  4091c9:	pushf  
  4091ca:	xlat   BYTE PTR ds:[ebx]
  4091cb:	add    BYTE PTR gs:[ecx-0x48],ah
  4091cf:	pop    esi
  4091d0:	mov    al,ds:0xea5fd587
  4091d5:	pop    ecx
  4091d7:	push   0x5db489ab
  4091dc:	loop   0x409243
  4091de:	mov    dh,0x15
  4091e0:	mov    dl,0x59
  4091e2:	ins    BYTE PTR es:[edi],dx
  4091e3:	push   esp
  4091e4:	cli    
  4091e5:	cdq    
  4091e6:	jg     0x409203
  4091e8:	add    BYTE PTR [ecx],bh
  4091ea:	das    
  4091eb:	xchg   esi,eax
  4091ec:	js     0x4091ec
  4091ee:	sub    eax,0xd5f864e5
  4091f3:	cdq    
  4091f4:	not    BYTE PTR fs:[esi]
  4091f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f8:	ins    BYTE PTR es:[edi],dx
  4091f9:	or     bh,ah
  4091fb:	fwait
  4091fc:	imul   edx,esi,0xd36ea234
  409202:	lds    esp,FWORD PTR [ebp-0x5e03fc88]
  409208:	mov    dx,0xf1cd
  40920c:	aas    
  40920d:	add    BYTE PTR [eax+0x2e000000],bh
  409213:	popf   
  409214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409215:	mov    ds:0xbfe99c19,eax
  40921a:	pop    ds
  40921b:	hlt    
  40921c:	test   eax,0xe1b455a8
  409221:	scas   eax,DWORD PTR es:[edi]
  409222:	idiv   DWORD PTR [ecx+0xb3be]
  409228:	lods   al,BYTE PTR ds:[esi]
  409229:	mov    ch,0xb4
  40922b:	mov    ch,0xe6
  40922d:	stos   DWORD PTR es:[edi],eax
  40922e:	mov    al,0xa2
  409230:	(bad)  
  409231:	scas   eax,DWORD PTR es:[edi]
  409232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409233:	mov    edx,0xc07f07
  409238:	mov    eax,0x9ff5eeec
  40923d:	jmp    0xe3c08bfa
  409242:	out    dx,eax
  409243:	cmc    
  409244:	jae    0x40922e
  409246:	mov    al,0xf5
  409248:	jae    0x409232
  40924a:	in     eax,dx
  40924b:	stc    
  40924c:	pop    ebx
  40924d:	fsub   st(4),st
  40924f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409250:	xor    al,0x0
  409252:	add    BYTE PTR [eax],al
  409254:	lea    eax,ds:0xfc424411
  40925a:	or     eax,0x4c163c15
  40925f:	add    DWORD PTR [edx],ebp
  409261:	adc    eax,0x580a1a05
  409266:	(bad)  
  409267:	call   edi
  409269:	push   edx
  40926a:	inc    eax
  40926b:	push   edi
  40926c:	cdq    
  40926d:	inc    ecx
  40926e:	dec    ebx
  40926f:	inc    eax
  409270:	mov    ecx,0xaf415b53
  409275:	push   eax
  409276:	dec    esp
  409277:	pop    ebx
  409278:	popf   
  409279:	inc    ecx
  40927a:	push   eax
  40927b:	pop    eax
  40927c:	cdq    
  40927d:	inc    ecx
  40927e:	push   esp
  40927f:	add    BYTE PTR [ecx],bl
  409281:	cdq    
  409282:	mov    ds,WORD PTR [ecx-0x717d77c9]
  409288:	popf   
  409289:	cwde   
  40928a:	mov    WORD PTR [edx-0x60e60000],ss
  409290:	ja     0x409215
  409292:	sub    BYTE PTR [ebp+0x2a2a9f76],al
  409298:	add    eax,DWORD PTR [eax]
  40929a:	popf   
  40929b:	mov    al,ds:0x7f1a9987
  4092a0:	jbe    0x409237
  4092a2:	add    eax,0x34977b7d
  4092a7:	sub    BYTE PTR [esi-0x62],0x18
  4092ab:	mov    ss,WORD PTR [ebx-0x75]
  4092ae:	adc    eax,0x9d0003a3
  4092b3:	xchg   DWORD PTR [eax-0x6699fc91],esp
  4092b9:	jge    0x4092ab
  4092bb:	(bad)  
  4092bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092bd:	jnp    0x4092a5
  4092bf:	mov    ds:0xb8e069bf,eax
  4092c4:	add    eax,DWORD PTR [eax]
  4092c6:	popf   
  4092c7:	cmp    esp,DWORD PTR [esp+esi*8]
  4092ca:	aas    
  4092cb:	popa   
  4092cc:	and    ah,bh
  4092ce:	inc    ebp
  4092cf:	pop    ebp
  4092d0:	test   DWORD PTR es:[edi+0x58],0x2932fe14
  4092d8:	add    eax,DWORD PTR [eax]
  4092da:	popf   
  4092db:	cmp    esi,ebp
  4092dd:	add    DWORD PTR [ecx-0x6cef0fdd],edx
  4092e3:	aaa    
  4092e4:	add    eax,0x20f9c03
  4092e9:	add    BYTE PTR [ebp+0x159e899d],bl
  4092ef:	(bad)  
  4092f0:	jne    0x40928c
  4092f2:	add    BYTE PTR [eax],al
  4092f4:	adc    DWORD PTR [esi-0x46e2537f],esp
  4092fa:	jnp    0x409294
  4092fc:	sbb    eax,0x9d00029d
  409301:	dec    esp
  409302:	shl    DWORD PTR [esi+ebp*4],cl
  409305:	add    al,BYTE PTR [eax]
  409307:	loopne 0x409386
  409309:	retf   
  40930a:	push   ds
  40930b:	fsubr  QWORD PTR [ebx-0x3524fe1c]
  409311:	adc    bl,al
  409313:	lea    edi,[edi]
  409315:	lea    esp,[ebp-0x3a59b65f]
  40931b:	lahf   
  40931c:	inc    edi
  40931d:	xchg   esi,eax
  40931e:	popf   
  40931f:	call   0x22f:0xa2b19c3b
  409326:	pop    es
  409327:	std    
  409328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409329:	in     al,dx
  40932a:	fmul   DWORD PTR [eax]
  40932c:	lahf   
  40932d:	add    eax,0xf5a10ae1
  409332:	rol    BYTE PTR [ebx*4-0x62fc170e],1
  409339:	add    ah,BYTE PTR [ecx+eax*8-0x4c7e3c35]
  409340:	fdiv   DWORD PTR [ecx+edx*4-0x174f2f39]
  409347:	add    ebx,DWORD PTR [ebp-0x45689cfe]
  40934d:	nop
  40934e:	cmp    al,0x9e
  409350:	shl    BYTE PTR [ecx+0x2bfa440],0xa
  409357:	loopne 0x409359
  409359:	add    BYTE PTR [ebp-0x17],ch
  40935c:	jmp    0x40932a
  40935e:	imul   esp,esp,0xe66fe702
  409364:	call   0x9043306c
  409369:	pop    ss
  40936a:	out    dx,eax
  40936b:	adc    DWORD PTR [edi-0x79e1e9d7],ecx
  409371:	cmp    edx,DWORD PTR [edx]
  409373:	and    al,0x7f
  409375:	daa    
  409376:	or     ch,BYTE PTR [eax]
  409378:	jmp    0xd8433080
  40937d:	inc    ah
  40937f:	or     DWORD PTR [eax],eax
  409381:	fucomip st,st(5)
  409383:	add    al,0x13
  409385:	(bad)  
  409386:	(bad)  
  409387:	in     eax,dx
  409388:	pop    ss
  409389:	push   es
  40938a:	mov    eax,ds:0xa34b0002
  40938f:	sub    esi,edi
  409391:	dec    eax
  409392:	call   0xc:0x7142dc1c
  409399:	push   edi
  40939a:	xchg   edi,eax
  40939b:	aaa    
  40939c:	in     eax,dx
  40939d:	inc    esp
  40939e:	jl     0x4093bc
  4093a0:	ror    BYTE PTR [ebx-0x77],1
  4093a3:	das    
  4093a4:	call   0xe85418f1
  4093a9:	adc    esi,DWORD PTR [edx+0x97d0002]
  4093af:	jnp    0x409353
  4093b1:	jnp    0x4093d3
  4093b3:	jle    0x40933e
  4093b5:	outs   dx,BYTE PTR ds:[esi]
  4093b6:	push   es
  4093b7:	jno    0x409349
  4093b9:	pop    eax
  4093ba:	clc    
  4093bb:	popa   
  4093bc:	xchg   esp,eax
  4093bd:	imul   eax,DWORD PTR [eax],0x81801b00
  4093c3:	mov    ax,ds:0xea580002
  4093c9:	xchg   DWORD PTR [edi-0x7b7ce37a],ebp
  4093cf:	jnp    0x409393
  4093d1:	jne    0x409370
  4093d3:	jne    0x4093e9
  4093d5:	fs cwde 
  4093d7:	arpl   di,cx
  4093d9:	add    BYTE PTR [edx+0x21d72],0x96
  4093e0:	jne    0x409427
  4093e2:	jmp    0xc05f0181
  4093e7:	xchg   ecx,eax
  4093e8:	outs   dx,DWORD PTR ds:[esi]
  4093e9:	xor    cl,al
  4093eb:	lds    ebx,FWORD PTR [esi+0x3a080002]
  4093f1:	xchg   esi,eax
  4093f2:	pop    esi
  4093f3:	or     al,0x2a
  4093f5:	stos   DWORD PTR es:[edi],eax
  4093f6:	fs (bad) 
  4093f8:	cmp    BYTE PTR [ecx],dl
  4093fa:	inc    DWORD PTR [eax]
  4093fc:	in     eax,0x27
  4093fe:	xor    al,0x1f
  409400:	ss sbb eax,0x372c2a2b
  409406:	daa    
  409407:	and    al,0xd7
  409409:	add    al,0x0
  40940b:	add    BYTE PTR [eax],ch
  40940d:	lods   al,BYTE PTR ds:[esi]
  40940e:	xchg   ebp,eax
  40940f:	mov    edx,0xa3a1a92e
  409414:	sub    eax,DWORD PTR ds:0x8c50000
  40941a:	and    ecx,DWORD PTR [esi]
  40941c:	(bad)  
  40941d:	push   es
  40941e:	or     al,0x1d
  409420:	mov    ebp,0x1a04
  409425:	add    ch,dl
  409427:	imul   edi,DWORD PTR [ecx+edi*2-0xd],0x2d4f7b6e
  40942f:	jae    0x4094a5
  409431:	jno    0x40945e
  409433:	data16 jae 0x409436
  409436:	mov    eax,0xb9c2bfd3
  40943b:	ret    0xc0
  40943e:	aam    0x9e
  409440:	add    BYTE PTR [eax+edi*8-0x24783067],0xd6
  409448:	mov    DWORD PTR [edi-0x76313a72],esp
  40944e:	add    BYTE PTR [eax+edx*8-0x4042292e],bh
  409455:	aam    0x13
  409457:	xchg   esp,eax
  409458:	(bad)  
  409459:	cwde   
  40945a:	mov    ebp,0x4bffff8c
  40945f:	or     eax,0x4440705
  409464:	add    BYTE PTR [eax],al
  409466:	sbb    DWORD PTR [ecx-0x404e5e4a],ebp
  40946c:	mov    esi,0xa1b33aa3
  409471:	mov    esi,0x404
  409476:	popf   
  409477:	daa    
  409478:	or     bh,BYTE PTR [edi-0x7d]
  40947b:	pop    es
  40947c:	push   es
  40947d:	add    BYTE PTR [ebp+0x4844bdd8],bl
  409483:	sbb    DWORD PTR [ebx],eax
  409485:	add    BYTE PTR [ebp+0x53bbef],bl
  40948b:	add    BYTE PTR [ebx-0x62fffce7],ch
  409491:	mov    ah,0x17
  409493:	out    dx,al
  409494:	(bad)  
  409495:	sbb    DWORD PTR [ebx],eax
  409497:	add    BYTE PTR [ebp+0x72220053],bl
  40949d:	pop    ds
  40949e:	in     al,dx
  40949f:	or     esp,DWORD PTR [edi-0x69ca23d5]
  4094a5:	cs out dx,eax
  4094a7:	adc    ecx,DWORD PTR [esi-0x60fdf5cc]
  4094ad:	sbb    DWORD PTR [ebx],eax
  4094af:	add    BYTE PTR [ebp-0x28cc11ab],bl
  4094b5:	sbb    esi,ecx
  4094b7:	sbb    bl,BYTE PTR [ebp+0x5ccf23b0]
  4094bd:	clc    
  4094be:	daa    
  4094bf:	out    0x7f,eax
  4094c1:	push   cs
  4094c2:	sbb    al,0xfc
  4094c4:	inc    esi
  4094c5:	sbb    DWORD PTR [ebx],eax
  4094c7:	add    BYTE PTR [ebp-0x5fca1399],bl
  4094cd:	cmp    eax,0xf68e1efe
  4094d2:	push   es
  4094d3:	or     al,0x98
  4094d5:	sbb    DWORD PTR [ebx],eax
  4094d7:	add    BYTE PTR [ebp+0x1d8d652e],bl
  4094dd:	push   0x6a
  4094df:	mov    al,ds:0x372ef
  4094e4:	popf   
  4094e5:	test   BYTE PTR [edi],bl
  4094e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e8:	adc    ch,BYTE PTR [edx+edi*1+0x153936fd]
  4094ef:	out    0x0,al
  4094f1:	add    BYTE PTR [edx+0x2],cl
  4094f4:	pop    ebx
  4094f5:	pop    ecx
  4094f6:	(bad)  
  4094f7:	pop    edx
  4094f8:	push   edx
  4094f9:	or     eax,0x85691034
  4094fe:	loopne 0x40950b
  409500:	mov    bl,BYTE PTR [eax]
  409502:	pop    es
  409503:	es xchg esi,eax
  409505:	sub    DWORD PTR [edi],esi
  409507:	popa   
  409508:	bound  edi,QWORD PTR [edi]
  40950a:	xor    edx,DWORD PTR [esi-0x7d]
  40950d:	sub    eax,0x2ba83bd6
  409512:	jecxz  0x409544
  409514:	jno    0x40958c
  409516:	sub    BYTE PTR [ebp+eax*4+0x3],al
  40951a:	popf   
  40951b:	add    ah,BYTE PTR [ebx-0x1f008910]
  409521:	or     BYTE PTR [ecx-0x583625f8],bl
  409527:	add    eax,0xc2460aef
  40952c:	xchg   edx,eax
  40952d:	add    BYTE PTR [edx],ch
  40952f:	leave  
  409530:	xchg   esi,eax
  409531:	cli    
  409532:	mov    dl,0xf3
  409534:	add    eax,eax
  409536:	jmp    0x8acc7dee
  40953b:	push   cs
  40953c:	sahf   
  40953d:	fwait
  40953e:	or     al,0x96
  409540:	lea    esp,[edi-0x3b543f15]
  409546:	in     eax,dx
  409547:	pushf  
  409548:	lods   al,BYTE PTR ds:[esi]
  409549:	rcl    dl,0xbc
  40954c:	lods   eax,DWORD PTR ds:[esi]
  40954d:	leave  
  40954e:	bound  ecx,QWORD PTR [esi]
  409550:	lds    ecx,FWORD PTR [edx]
  409552:	mov    eax,ds:0x1fcfb
  409557:	add    BYTE PTR [edx-0x6300f631],ch
  40955d:	stc    
  40955e:	call   0x96433266
  409563:	jb     0x40958b
  409565:	jns    0x4095cd
  409567:	ins    BYTE PTR es:[edi],dx
  409568:	adc    al,0x4f
  40956a:	pop    eax
  40956b:	je     0x409577
  40956d:	xchg   DWORD PTR [eax],eax
  40956f:	push   ecx
  409570:	sbb    BYTE PTR [ebx],al
  409572:	add    bl,bh
  409574:	sbb    edi,ebx
  409576:	add    edi,esi
  409578:	adc    eax,0xa3c841fe
  40957d:	jmp    0x409589
  40957f:	and    dl,bh
  409581:	sti    
  409582:	add    dh,al
  409584:	sahf   
  409585:	add    al,BYTE PTR [eax]
  409587:	and    al,0x3b
  409589:	test   al,0x6c
  40958b:	or     BYTE PTR [ecx],bl
  40958d:	lea    ebp,[esi+eiz*1]
  409590:	cmp    ebx,DWORD PTR [ebx+0x29ee96c]
  409596:	add    BYTE PTR [edi],cl
  409598:	cld    
  409599:	shl    BYTE PTR [ebp-0x17],cl
  40959c:	sahf   
  40959d:	add    al,BYTE PTR [eax]
  40959f:	ins    DWORD PTR es:[edi],dx
  4095a0:	fs dec ebx
  4095a2:	mov    al,ds:0x29ee9
  4095a7:	mov    DWORD PTR [edi],esp
  4095a9:	ins    DWORD PTR es:[edi],dx
  4095aa:	sbb    BYTE PTR [ebx+0x67],0x65
  4095ae:	fwait
  4095af:	pop    ebp
  4095b0:	pop    ds
  4095b1:	add    eax,DWORD PTR [eax]
  4095b3:	(bad)  
  4095b4:	dec    eax
  4095b5:	mov    ebp,0xcd4eae42
  4095ba:	push   ebp
  4095bb:	mov    DWORD PTR [eax],eax
  4095bd:	add    BYTE PTR [esi],ch
  4095bf:	mov    ah,0x5b
  4095c1:	mov    ds:0xab53ba44,eax
  4095c6:	das    
  4095c7:	mov    ebp,DWORD PTR [edi-0x50]
  4095ca:	pop    ebp
  4095cb:	(bad)  
  4095cc:	dec    ebx
  4095cd:	mov    ds:0xa862ff2c,al
  4095d2:	sub    eax,0x32900abc
  4095d7:	mov    WORD PTR [edx-0x17],?
  4095da:	sahf   
  4095db:	add    al,BYTE PTR [eax]
  4095dd:	rcl    DWORD PTR [ebx-0x725e33d3],1
  4095e3:	cmp    eax,0x2a8dbed9
  4095e8:	rol    DWORD PTR [eax],cl
  4095ea:	add    eax,ebx
  4095ec:	(bad)
  4095ef:	shl    ah,cl
  4095f1:	push   edx
  4095f3:	ror    al,0xc3
  4095f6:	xor    al,dl
  4095f8:	sub    ch,0x42
  4095fb:	ret    0xc8
  4095fe:	mov    ds:0xa36a665a,eax
  409603:	ins    DWORD PTR es:[edi],dx
  409604:	jae    0x409680
  409606:	loopne 0x40967e
  409608:	and    DWORD PTR [edx-0x75],esp
  40960b:	ins    BYTE PTR es:[edi],dx
  40960c:	push   0x6a
  40960e:	popf   
  40960f:	fs jns 0x409673
  409612:	hlt    
  409613:	add    BYTE PTR [eax],al
  409615:	add    al,ah
  409617:	adc    DWORD PTR [esp+eax*1],ebx
  40961a:	(bad)  
  40961b:	inc    DWORD PTR ds:0x101ca24c
  409621:	adc    al,BYTE PTR [eax]
  409623:	add    BYTE PTR [esi+0x4e001513],dh
  409629:	rol    dl,0xda
  40962c:	jp     0x409600
  40962e:	xlat   BYTE PTR ds:[ebx]
  40962f:	xchg   edx,eax
  409630:	pop    esp
  409631:	(bad)
  409634:	mov    dh,cl
  409636:	(bad)  
  409637:	call   0xc8d5:0xcfc3c0d3
  40963e:	(bad)
  409641:	sar    bh,cl
  409643:	(bad)  
  409644:	clc    
  409645:	mov    dh,0xb6
  409647:	mov    esp,0xfcada8d4
  40964c:	cli    
  40964d:	mov    dh,0xb7
  40964f:	mov    esp,0xb7b08573
  409654:	(bad)  
  409655:	mov    ebp,0xbde5ad9f
  40965a:	mov    ebp,0x3e369d00
  40965f:	ss mov al,0x1e
  409662:	cmp    eax,0xd3fb9d3f
  409667:	and    al,0x81
  409669:	or     ch,cl
  40966b:	cmp    eax,0x39ddf272
  409670:	add    DWORD PTR [edi+eiz*8],0x64
  409674:	xchg   ebx,eax
  409675:	add    ch,al
  409677:	cs (bad) 
  409679:	sbb    ch,al
  40967b:	and    eax,0xcfe02cc
  409680:	ror    esi,0xff
  409683:	imul   ebp,DWORD PTR es:[esi],0x11f4
  40968a:	mov    al,ds:0x9d010116
  40968f:	adc    eax,0xa59d0ef1
  409694:	maskmovq mm5,mm3
  409697:	mov    al,BYTE PTR [eax+eax*1+0x66a2fd9d]
  40969e:	inc    ecx
  40969f:	cmp    DWORD PTR [ebp+edi*2+0x6ea05979],ecx
  4096a6:	dec    ecx
  4096a7:	cmp    ebp,DWORD PTR [eax+0x3193270]
  4096ad:	add    BYTE PTR [ebp+0x168786a9],bl
  4096b3:	mov    DWORD PTR [esi-0x51],esp
  4096b6:	popf   
  4096b7:	pusha  
  4096b8:	mov    ch,0x5b
  4096ba:	jmp    0xaf55:0xf74baf60
  4096c1:	jp     0x4096d0
  4096c3:	test   BYTE PTR [ecx-0x6f7bfa9c],cl
  4096c9:	push   ebp
  4096ca:	fldcw  WORD PTR [esi-0x42]
  4096cd:	push   ecx
  4096ce:	out    0x55,al
  4096d0:	rcl    BYTE PTR [ecx-0x1],0x89
  4096d4:	lahf   
  4096d5:	jmp    DWORD PTR [edx+0x61]
  4096d8:	xchg   esi,eax
  4096d9:	jb     0x4096b0
  4096db:	xchg   ebp,eax
  4096dc:	lahf   
  4096dd:	imul   edx,DWORD PTR [ebp-0x326dc0fe],0xbca556a4
  4096e7:	shl    BYTE PTR [ebx],cl
  4096e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ea:	mov    esp,0x3e8a3
  4096ef:	add    BYTE PTR [ebp-0x25020dfe],bl
  4096f5:	mov    ebp,0x29d042f
  4096fa:	push   ss
  4096fb:	mov    eax,0xc013b974
  409700:	outs   dx,DWORD PTR ds:[esi]
  409701:	stos   DWORD PTR es:[edi],eax
  409702:	xor    BYTE PTR [ecx-0x46c911a3],bh
  409708:	imul   eax,DWORD PTR [edx],0x17f70abf
  40970e:	cdq    
  40970f:	adc    dh,ch
  409711:	or     DWORD PTR [ebx-0x7dcc27ee],eax
  409717:	push   ss
  409718:	sti    
  409719:	or     eax,0x18c02942
  40971e:	ja     0x40973a
  409720:	rol    BYTE PTR [ecx],cl
  409722:	repz fisttp DWORD PTR [edi+0x6dcbba02]
  409729:	mov    dh,0xdf
  40972b:	pop    es
  40972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40972d:	add    ch,BYTE PTR [ecx-0x3f6fd464]
  409733:	add    ebx,DWORD PTR [ebp+0x319c9702]
  409739:	xchg   edi,eax
  40973a:	shl    DWORD PTR [edi+ecx*1+0x13a5a8d9],0x9a
  409742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409743:	mov    eax,ds:0xb8d78cf4
  409748:	mul    DWORD PTR [edi+ecx*4-0x7e69fe76]
  40974f:	aam    0xb7
  409751:	mov    edi,DWORD PTR [edx-0x6e]
  409754:	add    BYTE PTR [eax],al
  409756:	out    dx,al
  409757:	xchg   ecx,eax
  409758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409759:	mov    dl,0x85
  40975b:	(bad)  
  40975d:	call   0x2c3fa195
  409762:	aad    0x2a
  409764:	sar    DWORD PTR [ecx-0x57],0x2
  409768:	add    BYTE PTR [edi-0x7e],dh
  40976b:	or     ebx,ebp
  40976d:	fnstcw WORD PTR [esp+ecx*2+0x2c0c6be]
  409774:	add    dl,dh
  409776:	sub    eax,DWORD PTR [edx]
  409778:	add    cl,ch
  40977a:	sahf   
  40977b:	add    al,BYTE PTR [eax]
  40977d:	cmp    dh,BYTE PTR [eax]
  40977f:	call   0xe800:0x29ee976
  409786:	fcmove st,st(7)
  409788:	and    al,0xc8
  40978a:	call   0xf12fc76e
  40978f:	sar    BYTE PTR [ecx],cl
  409791:	mov    ebp,0xcd31d8ce
  409796:	shr    ebp,1
  409798:	adc    eax,0x29e9c7ce
  40979d:	mov    ah,0xe6
  40979f:	cmc    
  4097a0:	or     DWORD PTR [edx+0x527c7e3],esi
  4097a6:	mov    al,ds:0x9ae513e0
  4097ab:	out    0x19,eax
  4097ad:	std    
  4097ae:	rcl    edx,0x16
  4097b1:	jecxz  0x409777
  4097b3:	not    DWORD PTR [edx]
  4097b5:	out    dx,al
  4097b6:	mov    cl,0xc9
  4097b8:	xor    edx,ebp
  4097ba:	add    BYTE PTR [eax],al
  4097bc:	lods   eax,DWORD PTR ds:[esi]
  4097bd:	stc    
  4097be:	or     ebp,ebp
  4097c0:	call   0x804:0x9ef534ec
  4097c7:	mov    BYTE PTR [ecx-0x32],cl
  4097ca:	arpl   cx,bp
  4097cc:	sahf   
  4097cd:	add    al,BYTE PTR [eax]
  4097cf:	lods   al,BYTE PTR ds:[esi]
  4097d0:	adc    eax,0x5e7d63a2
  4097d5:	cwde   
  4097d6:	ins    DWORD PTR es:[edi],dx
  4097d7:	add    BYTE PTR [ecx],bl
  4097d9:	pop    edi
  4097da:	push   0x5747e
  4097df:	add    BYTE PTR [eax+0x40f8eae5],dh
  4097e5:	jmp    0xe7eb:0xca5fedfa
  4097ec:	gs call 0xeb8e87e3
  4097f2:	rcl    ch,0x49
  4097f5:	out    0xfb,eax
  4097f7:	jmp    0xeb0a:0xb4e0f25d
  4097fe:	loopne 0x4097fc
  409800:	inc    esp
  409801:	fld    st(7)
  409803:	fimul  WORD PTR [ebx-0x5]
  409806:	fcmovb st,st(1)
  409808:	inc    ebp
  409809:	mov    esi,0x4f4ddc5
  40980e:	add    BYTE PTR [eax],al
  409810:	add    DWORD PTR [esi],ebx
  409812:	sub    ch,BYTE PTR [ecx]
  409814:	in     al,0x2c
  409816:	sub    DWORD PTR [ecx],ebx
  409818:	pushf  
  409819:	(bad)  
  40981a:	(bad)  
  40981b:	push   DWORD PTR [edx-0x5f]
  40981e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981f:	stos   BYTE PTR es:[edi],al
  409820:	add    BYTE PTR [eax],al
  409822:	stos   BYTE PTR es:[di],al
  409824:	test   al,0x0
  409826:	aaa    
  409827:	out    0xe3,eax
  409829:	mul    DWORD PTR [edi-0x1f]
  40982c:	repz loop 0x4097b7
  40982f:	shl    edx,0xe8
  409832:	push   edx
  409833:	jecxz  0x409831
  409835:	loopne 0x409881
  409837:	loopne 0x409806
  409839:	ficomp DWORD PTR [esi-0x1c]
  40983c:	repnz in eax,0x6a
  40983f:	stc    
  409840:	in     eax,dx
  409841:	mov    ebx,0xf3ede0ad
  409846:	mov    bl,0xd2
  409848:	(bad)  
  409849:	sar    DWORD PTR [eax+esi*8-0x3b203133],1
  409850:	ret    0x9dc5
  409853:	in     al,0x17
  409855:	(bad)  
  409856:	pop    esi
  409857:	fidiv  WORD PTR [esi]
  409859:	rcr    BYTE PTR [ebp+0x22ad479e],0xc8
  409860:	pop    ss
  409861:	cwde   
  409862:	add    eax,0x9d0060bb
  409867:	repz and ebp,ebp
  40986a:	dec    ebx
  40986b:	and    al,0x19
  40986d:	std    
  40986e:	ss inc edi
  409870:	cmp    edx,ebp
  409872:	cmp    al,0x29
  409874:	pop    ds
  409875:	hlt    
  409876:	inc    esp
  409877:	cmp    DWORD PTR [eax],ebx
  409879:	(bad)  
  40987a:	dec    esi
  40987b:	dec    ebp
  40987c:	sbb    al,0xfa
  40987e:	xor    DWORD PTR [ecx+0x11],ecx
  409881:	out    0x4f,eax
  409883:	push   0x18
  409885:	out    0x0,eax
  409887:	add    BYTE PTR [edi],dl
  409889:	pusha  
  40988a:	cs into 
  40988c:	in     eax,0x6a
  40988e:	and    eax,0x458dace
  409893:	add    BYTE PTR [ebp+0x7971a2f9],bl
  409899:	out    0xa3,eax
  40989b:	pusha  
  40989c:	jb     0x4098a2
  40989e:	sar    BYTE PTR [ecx+eiz*2],1
  4098a1:	hlt    
  4098a2:	xchg   edx,eax
  4098a3:	imul   eax,DWORD PTR [ecx+edi*8-0x6f],0x28
  4098a8:	dec    eax
  4098a9:	push   cs
  4098aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ab:	jo     0x409900
  4098ad:	and    DWORD PTR [edi-0x5fc0c4e0],eax
  4098b3:	ins    DWORD PTR es:[edi],dx
  4098b4:	aaa    
  4098b5:	inc    ebp
  4098b6:	mov    dh,0x51
  4098b8:	mov    DWORD PTR [esi],edx
  4098ba:	repz adc BYTE PTR [edx-0x67ea16b1],dl
  4098c1:	or     eax,0x59e44dd5
  4098c6:	mov    cl,0x77
  4098c8:	jmp    0x409936
  4098ca:	rol    BYTE PTR [edi+edx*4+0x2],0xf6
  4098cf:	mov    ecx,0xaebec1e1
  4098d4:	call   0xc0232a83
  4098d9:	iret   
  4098da:	leave  
  4098db:	ffreep st(0)
  4098dd:	in     al,0x79
  4098df:	xlat   BYTE PTR ds:[ebx]
  4098e0:	mov    al,ds:0xd38dbcc9
  4098e5:	mov    WORD PTR [eax+ebx*4-0x2a],?
  4098e9:	mov    ebx,0x3a1
  4098ee:	popf   
  4098ef:	add    dh,BYTE PTR [ecx-0x38c998c6]
  4098f5:	cmp    esp,DWORD PTR [edi+eiz*1-0x46]
  4098f9:	or     BYTE PTR [bp+si],ch
  4098fc:	mov    ch,0x3f
  4098fe:	popa   
  4098ff:	and    eax,0x351c42a6
  409904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409905:	inc    edx
  409906:	fld    QWORD PTR [edx-0x57]
  409909:	jge    0x4098e4
  40990b:	cmp    BYTE PTR [edi-0x39c128c2],bl
  409911:	or     al,0xa
  409913:	pop    es
  409914:	mov    ss,WORD PTR [ecx+esi*8]
  409917:	sbb    DWORD PTR [esi+0x4b],ebx
  40991a:	sub    ah,BYTE PTR [eax+0x51]
  40991d:	pop    esi
  40991e:	or     ebp,DWORD PTR [edx-0x7f]
  409921:	or     dh,bh
  409923:	add    eax,0x16d40b97
  409928:	mov    dl,BYTE PTR [edi-0x8]
  40992b:	(bad)  
  40992d:	sbb    al,0xd0
  40992f:	and    al,BYTE PTR [edi+0x7464ec80]
  409935:	push   0x6d937a17
  40993a:	stc    
  40993b:	addr16 gs jg 0x409951
  40993f:	arpl   WORD PTR gs:[ebp-0x7d988b24],ax
  409946:	sbb    eax,0xf690082
  40994b:	inc    eax
  40994c:	retf   0x1c28
  40994f:	or     DWORD PTR [esi-0x2effffa9],0xb035e50c
  409959:	push   esp
  40995a:	test   eax,0xa67afc59
  40995f:	dec    edx
  409960:	int    0x4f
  409962:	cli    
  409963:	push   ss
  409964:	xlat   BYTE PTR ds:[ebx]
  409965:	pop    eax
  409966:	lods   eax,DWORD PTR ds:[esi]
  409967:	cmp    eax,0x35be60e8
  40996c:	mov    al,0x52
  40996e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996f:	cmp    ah,ah
  409971:	data16 mov ah,0x3d
  409974:	idiv   BYTE PTR [ebp-0x5dfbc9aa]
  40997a:	push   esi
  40997b:	xor    eax,0xfa51b3f5
  409980:	inc    edx
  409981:	icebp  
  409982:	push   ebx
  409983:	xor    eax,0xe94aaa59
  409988:	adc    eax,esp
  40998a:	pop    ds
  40998b:	sbb    DWORD PTR [esp+eax*8+0x53],ecx
  40998f:	das    
  409990:	push   ecx
  409991:	mov    bl,0x46
  409993:	and    ch,ch
  409995:	(bad)  
  409996:	ins    BYTE PTR es:[edi],dx
  409997:	sbb    eax,0x15679828
  40999c:	cmp    DWORD PTR [eax-0x5cf1f8c9],ebx
  4099a2:	jnp    0x4099bf
  4099a4:	adc    esp,DWORD PTR [eax-0x61000096]
  4099aa:	ins    BYTE PTR es:[edi],dx
  4099ab:	adc    esi,DWORD PTR [esi]
  4099ad:	cwde   
  4099ae:	jge    0x4099b5
  4099b0:	std    
  4099b1:	(bad)  
  4099b2:	jo     0x4099b0
  4099b4:	leave  
  4099b5:	std    
  4099b6:	and    bh,dh
  4099b8:	add    BYTE PTR [eax],al
  4099ba:	lods   al,BYTE PTR ds:[esi]
  4099bb:	in     eax,dx
  4099bc:	push   ds
  4099bd:	mov    esi,0xf90fad06
  4099c2:	ret    0x1605
  4099c5:	add    al,dh
  4099c7:	push   edx
  4099c8:	popa   
  4099c9:	fs js  0x4099e2
  4099cc:	or     eax,0x14158e18
  4099d1:	add    eax,DWORD PTR [ebx+0x7c114049]
  4099d7:	cmp    ch,BYTE PTR [ecx]
  4099d9:	sub    al,0x54
  4099db:	sub    eax,0x34667421
  4099e0:	and    al,0x38
  4099e2:	dec    edx
  4099e3:	push   ds
  4099e4:	and    eax,0x3a245430
  4099e9:	adc    DWORD PTR [ebx+eiz*1+0x37],esp
  4099ed:	das    
  4099ee:	bound  esi,QWORD PTR [eax]
  4099f0:	xor    al,0x23
  4099f2:	pop    ss
  4099f3:	ins    DWORD PTR es:[edi],dx
  4099f4:	bound  esp,QWORD PTR [eax+ebx*2]
  4099f7:	ror    ebx,1
  4099f9:	(bad)  [esi+edi*2-0x3dfb4f4a]
  409a00:	rol    esp,1
  409a02:	jmp    0x8c84:0xefd7c0c0
  409a09:	fisttp QWORD PTR [eax-0x3a]
  409a0c:	fstp   st(0)
  409a0e:	cmp    cl,dl
  409a10:	fisttp QWORD PTR [eax-0x332f3fce]
  409a16:	ss jmp 0xc5ee:0xf010fce9
  409a1e:	add    BYTE PTR [eax],al
  409a20:	or     bh,dh
  409a22:	jecxz  0x409a17
  409a24:	push   es
  409a25:	in     al,0xe0
  409a27:	not    DWORD PTR [edi-0x6]
  409a2a:	out    0xe1,al
  409a2c:	pop    edx
  409a2d:	shl    bl,cl
  409a2f:	in     al,0x22
  409a31:	loopne 0x4099d7
  409a33:	stos   BYTE PTR es:[edi],al
  409a34:	push   ebp
  409a35:	jecxz  0x409a18
  409a37:	out    dx,al
  409a38:	dec    edx
  409a39:	cwde   
  409a3a:	aad    0xc5
  409a3c:	push   eax
  409a3d:	out    dx,eax
  409a3e:	(bad)  
  409a3f:	call   FWORD PTR [ebp+0x635ab62e]
  409a45:	sbb    eax,DWORD PTR [ebx]
  409a47:	add    BYTE PTR [ebp+0x2da67f7c],bl
  409a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4e:	je     0x4099d4
  409a50:	xor    eax,0x9d006ca2
  409a55:	loope  0x409a72
  409a57:	cmc    
  409a58:	and    bh,0x11
  409a5b:	sti    
  409a5c:	aaa    
  409a5d:	inc    DWORD PTR [edx]
  409a5f:	add    BYTE PTR [ebp+0x57c226cc],bl
  409a65:	fadd   DWORD PTR [eax-0x34]
  409a68:	inc    esi
  409a69:	xchg   ebx,eax
  409a6a:	aaa    
  409a6b:	retf   
  409a6c:	push   0x9d00031a
  409a71:	mov    ch,0x63
  409a73:	mov    dh,0xfd
  409a75:	adc    BYTE PTR [eax-0x5c],cl
  409a78:	popf   
  409a79:	xchg   esp,eax
  409a7a:	pop    edi
  409a7b:	mov    dl,0xfd
  409a7d:	ja     0x409ae2
  409a7f:	lods   eax,DWORD PTR ds:[esi]
  409a80:	or     al,0x96
  409a82:	pop    ecx
  409a83:	mov    dl,0x0
  409a85:	add    BYTE PTR [ecx],al
  409a87:	jp     0x409ae5
  409a89:	mov    esp,0x6fa7df9d
  409a8e:	ret    0x91b2
  409a91:	jae    0x409a51
  409a93:	sbb    DWORD PTR [ebx],eax
  409a95:	add    BYTE PTR [ebp+0x746b96c7],bl
  409a9b:	or     ch,cl
  409a9d:	dec    eax
  409a9e:	mov    cs,WORD PTR [edi*4-0x1ec61f1]
  409aa5:	adc    esp,DWORD PTR [edi-0x6]
  409aa8:	frstor [ecx]
  409aaa:	popf   
  409aab:	hlt    
  409aac:	mov    dh,BYTE PTR [edi-0x59]
  409aaf:	fidivr DWORD PTR [eax+0x3e86655]
  409ab5:	add    BYTE PTR [ebp-0xf4bb62e],bl
  409abb:	add    dh,BYTE PTR [ecx+0x6c]
  409abe:	stc    
  409abf:	sub    DWORD PTR [ebx+0x7b],0x70836d1b
  409ac6:	push   cs
  409ac7:	je     0x409b40
  409ac9:	outs   dx,BYTE PTR ds:[esi]
  409aca:	popf   
  409acb:	add    al,BYTE PTR ds:0xebdacdc7
  409ad1:	call   0xfa1f8499
  409ad6:	scas   al,BYTE PTR es:[edi]
  409ad7:	add    al,BYTE PTR [esi+0x20]
  409ada:	ja     0x409af7
  409adc:	aas    
  409add:	ds jno 0x409b20
  409ae0:	sub    al,0x35
  409ae2:	bound  eax,QWORD PTR [edx]
  409ae4:	dec    ebp
  409ae5:	pop    edi
  409ae6:	xor    al,0x52
  409ae8:	je     0x409a6b
  409aea:	add    BYTE PTR [eax],al
  409aec:	and    DWORD PTR [eax+0x58],esi
  409aef:	ins    BYTE PTR es:[edi],dx
  409af0:	adc    eax,0x33547372
  409af5:	arpl   WORD PTR fs:[ebp+0x1a],si
  409af9:	outs   dx,DWORD PTR ds:[esi]
  409afa:	push   eax
  409afb:	add    al,0x9d
  409afd:	add    cl,BYTE PTR [ebp-0x73]
  409b00:	mov    ah,0x83
  409b02:	sbb    bl,dh
  409b04:	jns    0x409b08
  409b06:	jns    0x409b80
  409b08:	sbb    esi,DWORD PTR [edi+0x5e]
  409b0b:	ds dec esp
  409b0d:	xor    ch,cl
  409b0f:	add    ebx,DWORD PTR [ebp+0x33686902]
  409b15:	addr16 retf 0xfd07
  409b19:	add    ebp,ecx
  409b1b:	add    ebx,DWORD PTR [ebp+0x778d3502]
  409b21:	pushf  
  409b22:	push   es
  409b23:	mov    bh,BYTE PTR [edx+edx*4+0xc]
  409b27:	xchg   esp,eax
  409b28:	js     0x409ac3
  409b2a:	std    
  409b2b:	add    ebx,DWORD PTR [ebp-0x5d96ffe]
  409b31:	and    al,0xac
  409b33:	sub    ah,dl
  409b35:	add    DWORD PTR [eax],eax
  409b37:	inc    ebp
  409b38:	inc    esp
  409b39:	ins    DWORD PTR es:[edi],dx
  409b3a:	xchg   ebx,eax
  409b3b:	jmp    0xea409dde
  409b40:	rcl    dh,1
  409b42:	ss or  dh,dl
  409b45:	shr    BYTE PTR [ecx-0xb],1
  409b48:	into   
  409b49:	enter  0xe92d,0x9e
  409b4d:	add    al,BYTE PTR [eax]
  409b4f:	clc    
  409b50:	add    BYTE PTR [eax],al
  409b52:	and    BYTE PTR [eax],0x5
  409b55:	fiadd  DWORD PTR [ecx-0x7f00a8fe]
  409b5b:	sbb    BYTE PTR [esi],bl
  409b5d:	jecxz  0x409bd2
  409b5f:	add    bh,bh
  409b61:	sub    DWORD PTR [esi+edx*8-0x3c20d233],esi
  409b68:	call   FWORD PTR [edi]
  409b6a:	nop
  409b6b:	add    al,dh
  409b6d:	add    ebx,DWORD PTR [eax-0x6ebe1800]
  409b73:	sti    
  409b74:	hlt    
  409b75:	jmp    DWORD PTR [ebx-0x61fc0404]
  409b7b:	add    al,BYTE PTR [eax]
  409b7d:	sub    DWORD PTR [eax-0x66343958],ebp
  409b83:	call   0xe9d36d6f
  409b88:	scas   al,BYTE PTR es:[edi]
  409b89:	mov    edi,0xcde4eb92
  409b8e:	cdq    
  409b8f:	add    al,BYTE PTR [eax]
  409b91:	cs and eax,DWORD PTR ss:[eax+0x44]
  409b96:	sub    BYTE PTR [ebx+0x6f],ah
  409b99:	inc    esi
  409b9a:	aas    
  409b9b:	bound  ebp,QWORD PTR [eax]
  409b9d:	sbb    BYTE PTR [edi],ah
  409b9f:	jo     0x409c03
  409ba1:	and    bl,dl
  409ba3:	adc    dl,BYTE PTR [edi]
  409ba5:	jmp    0xd5409e48
  409baa:	rol    BYTE PTR [ecx],cl
  409bac:	(bad)  
  409bad:	jp     0x409bcb
  409baf:	add    cl,cl
  409bb1:	add    BYTE PTR ds:0x7,cl
  409bb7:	add    bh,bh
  409bb9:	das    
  409bba:	aad    0xdf
  409bbc:	imul   BYTE PTR [eax]
  409bbe:	ror    ah,0xb4
  409bc1:	add    eax,0x5c2d0000
  409bc6:	test   eax,0xe34e10ae
  409bcb:	mov    ah,BYTE PTR [edx]
  409bcd:	lods   eax,DWORD PTR gs:[esi]
  409bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd0:	and    DWORD PTR [ebx-0x5f],ebx
  409bd3:	add    BYTE PTR [ecx-0x51],bl
  409bd6:	push   ebx
  409bd7:	push   edx
  409bd8:	inc    esp
  409bd9:	rcr    BYTE PTR ds:0x4fa72676,0x5b
  409be0:	and    eax,0x88015bae
  409be5:	mov    ecx,0xb0424240
  409bea:	dec    ecx
  409beb:	push   edi
  409bec:	sub    ebp,esp
  409bee:	and    al,BYTE PTR [eax]
  409bf0:	ror    BYTE PTR [eax-0x48],1
  409bf3:	mov    al,ds:0xa4bb60dd
  409bf8:	mov    BYTE PTR [eax-0x5e],cl
  409bfb:	repz xor al,0x5
  409bfe:	add    BYTE PTR [eax],al
  409c00:	repz loop 0x409c22
  409c03:	and    al,0x77
  409c05:	repz add al,BYTE PTR [ebx+ebp*1]
  409c09:	jmp    0xc16:0xec260811
  409c10:	inc    edx
  409c11:	cld    
  409c12:	or     DWORD PTR [edi+ecx*8-0x1],eax
  409c16:	or     eax,0x6fb0403
  409c1b:	or     BYTE PTR [eax],al
  409c1d:	add    BYTE PTR [esi-0x7b2b84a],dh
  409c23:	test   al,0xfe
  409c25:	call   DWORD PTR [ebx+0x7746f94]
  409c2b:	ret    0x5452
  409c2e:	popf   
  409c2f:	xor    BYTE PTR [ecx-0x44d2babe],bh
  409c35:	inc    edi
  409c36:	jns    0x409c61
  409c38:	stos   DWORD PTR es:[edi],eax
  409c39:	pop    edx
  409c3a:	mov    ds:0x7041bbdc,eax
  409c3f:	es mov ah,0x5b
  409c42:	ins    BYTE PTR es:[edi],dx
  409c43:	adc    ebp,edi
  409c45:	sbb    bl,BYTE PTR [eax+0x7928dedf]
  409c4b:	fcomp  QWORD PTR [edi-0x5e2cd18f]
  409c51:	jle    0x409c88
  409c53:	sbb    esp,ebx
  409c55:	sub    edx,DWORD PTR [esi]
  409c57:	jmp    esi
  409c59:	call   DWORD PTR [edx+0x73cb3b22]
  409c5f:	push   ds
  409c60:	and    al,0xde
  409c62:	push   edi
  409c63:	adc    ah,BYTE PTR [ebx*8-0x3f95c8e8]
  409c6a:	pop    esp
  409c6b:	inc    eax
  409c6c:	jle    0x409c3b
  409c6e:	pusha  
  409c6f:	cmp    DWORD PTR [edx-0x7e],eax
  409c72:	inc    esi
  409c73:	cmp    eax,0x3069c637
  409c78:	cmp    bl,al
  409c7a:	pop    esi
  409c7b:	inc    DWORD PTR [ecx]
  409c7d:	add    BYTE PTR [ebp+0x63fb75],bl
  409c83:	add    BYTE PTR [ecx-0x62fffd17],bh
  409c89:	in     eax,0xe2
  409c8b:	fist   DWORD PTR [esi-0x4d]
  409c8e:	iret   
  409c8f:	xchg   ebp,eax
  409c90:	sub    dh,BYTE PTR [ebp-0x4db02826]
  409c96:	loope  0x409c6b
  409c98:	and    eax,0xdad4cf77
  409c9d:	mov    ds:0xa9db8a87,al
  409ca2:	(bad)
  409ca5:	xchg   esi,eax
  409ca6:	enter  0x45ad,0x3
  409caa:	jmp    0x14339b2
  409caf:	cmp    DWORD PTR [edx-0x4bcc2cd2],esi
  409cb5:	jno    0x409c9d
  409cb7:	cs jl  0x409cef
  409cba:	adc    al,0x7a
  409cbc:	dec    ebp
  409cbd:	daa    
  409cbe:	daa    
  409cbf:	inc    esp
  409cc0:	popf   
  409cc1:	add    ch,BYTE PTR [edx+edx*8-0x58c15307]
  409cc8:	add    ch,BYTE PTR [eax-0x4d3571]
  409cce:	push   ebp
  409ccf:	lea    ecx,ds:0x169b7d96
  409cd5:	xchg   edi,eax
  409cd6:	dec    ebp
  409cd7:	add    al,0x9d
  409cd9:	add    ah,al
  409cdb:	jp     0x409cee
  409cdd:	arpl   dx,cx
  409cdf:	jb     0x409c8b
  409ce1:	add    bh,BYTE PTR [esi+eiz*4]
  409ce4:	mov    esp,DWORD PTR [edx+0x8b0e]
  409cea:	das    
  409ceb:	mov    cl,0x63
  409ced:	scas   eax,DWORD PTR es:[edi]
  409cee:	xor    ebp,DWORD PTR [ecx-0x7199fefa]
  409cf4:	and    bl,BYTE PTR [eax-0x16a957d3]
  409cfa:	or     ebp,DWORD PTR [ecx-0xeef3fc0]
  409d00:	or     al,0xec
  409d02:	or     ebp,eax
  409d04:	sbb    eax,DWORD PTR [esi-0x5aba4204]
  409d0a:	push   eax
  409d0b:	xchg   ebx,eax
  409d0c:	jg     0x409c9e
  409d0e:	pop    ss
  409d0f:	rcl    esi,0xfa
  409d12:	inc    edi
  409d13:	scas   al,BYTE PTR es:[edi]
  409d14:	call   0x1433a1c
  409d19:	sub    al,cl
  409d1b:	es std 
  409d1d:	and    al,0xbd
  409d1f:	cmp    edi,ebx
  409d21:	add    ebx,DWORD PTR [ebp+0x1d4b0002]
  409d27:	bound  esp,QWORD PTR [edx]
  409d29:	jmp    0xd3409fcc
  409d2e:	mov    cl,0x40
  409d30:	add    BYTE PTR [edx-0x4b2632de],bh
  409d36:	les    eax,FWORD PTR [ebx-0x44d54d36]
  409d3c:	xlat   BYTE PTR ds:[ebx]
  409d3d:	jo     0x409d29
  409d3f:	(bad)  
  409d40:	(bad)  
  409d41:	out    0x64,al
  409d43:	sbb    eax,0x1a31c04
  409d48:	push   esi
  409d49:	jmp    0xa7409fec
  409d4e:	add    BYTE PTR [eax],al
  409d50:	loopne 0x409cff
  409d52:	mov    al,ds:0x29ee9
  409d57:	add    edx,0x3974959e
  409d5d:	fnstcw WORD PTR [ebp+0x29e91]
  409d63:	add    bh,BYTE PTR [edx-0x4359b2c2]
  409d69:	add    al,BYTE PTR [eax]
  409d6b:	retf   0x67f5
  409d6e:	adc    al,0xff
  409d70:	out    0x2,eax
  409d72:	add    BYTE PTR [edi-0x3e9a9cfd],bl
  409d78:	mov    ds:0x8e7c343d,al
  409d7d:	add    al,BYTE PTR [eax]
  409d7f:	jmp    0x409d07
  409d81:	sub    ah,BYTE PTR [ecx+ecx*8]
  409d84:	jp     0x409da3
  409d86:	addr16 je 0x409d53
  409d89:	adc    eax,0x11ae706b
  409d8e:	outs   dx,DWORD PTR ds:[esi]
  409d8f:	dec    esp
  409d90:	lods   eax,DWORD PTR ds:[esi]
  409d91:	or     eax,0x1b85ef00
  409d96:	add    BYTE PTR [ebp+0x6],ch
  409d99:	cwde   
  409d9a:	sahf   
  409d9b:	imul   esp,DWORD PTR [ecx+0x6f000002],0xc9726670
  409da5:	inc    edx
  409da6:	add    BYTE PTR [eax],al
  409da8:	push   esp
  409da9:	jp     0x409e2a
  409dab:	ds mov ebx,0xd17a7365
  409db1:	add    DWORD PTR [eax],eax
  409db3:	add    BYTE PTR [eax],al
  409db5:	add    BYTE PTR [eax-0x6d869693],bl
  409dbb:	jl     0x409dd0
  409dbd:	or     dh,al
  409dbf:	je     0x409df0
  409dc1:	jo     0x409d78
  409dc3:	inc    edi
  409dc4:	push   edx
  409dc5:	dec    eax
  409dc6:	shl    DWORD PTR [ebx],0x18
  409dc9:	outs   dx,DWORD PTR ds:[esi]
  409dca:	mov    ah,0x1
  409dcc:	add    BYTE PTR [eax],al
  409dce:	or     eax,0x2fdac191
  409dd3:	(bad)  
  409dd4:	fmul   DWORD PTR [ebx-0x35637ecf]
  409dda:	imul   ecx,esp,0xfffffffe
  409ddd:	dec    DWORD PTR [ecx+0x75152322]
  409de3:	add    DWORD PTR [eax],eax
  409de5:	add    BYTE PTR [edx+0x7c021f2a],ah
  409deb:	add    DWORD PTR [eax],eax
  409ded:	add    BYTE PTR [esi-0x7e],ah
  409df0:	jnp    0x409e6b
  409df2:	cmp    DWORD PTR [ebx+eiz*1],esi
  409df5:	and    cl,BYTE PTR [ebp+ebp*1+0x65]
  409df9:	arpl   WORD PTR [ecx],dx
  409dfb:	pop    ecx
  409dfc:	popa   
  409dfd:	addr16 sub eax,0x6b2f212f
  409e03:	xor    DWORD PTR [ecx+0x7f],edi
  409e06:	lds    esp,FWORD PTR [edi]
  409e08:	sub    DWORD PTR [edi],esp
  409e0a:	push   ebx
  409e0b:	cmp    BYTE PTR [ebp+0x66],dh
  409e0e:	push   cs
  409e0f:	add    BYTE PTR ds:0x43446f7b,dl
  409e15:	pop    ecx
  409e16:	xor    DWORD PTR [ebx+0x4f],0x46
  409e1a:	add    BYTE PTR [eax],al
  409e1c:	popf   
  409e1d:	and    cl,BYTE PTR [ebx+0xe]
  409e20:	popf   
  409e21:	je     0x409db9
  409e23:	test   al,0x32
  409e25:	pusha  
  409e26:	add    eax,DWORD PTR [eax]
  409e28:	popf   
  409e29:	js     0x409ddc
  409e2b:	lods   al,BYTE PTR ds:[esi]
  409e2c:	xor    eax,0xeef1e687
  409e31:	mov    dh,BYTE PTR [edi-0x4bb1c74f]
  409e37:	mov    edx,0xa9b4623d
  409e3c:	cmp    dl,BYTE PTR [esi-0x3f]
  409e3f:	loop   0x409e04
  409e41:	jle    0x409dc7
  409e43:	mov    bl,0x9
  409e45:	push   esp
  409e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e47:	stos   BYTE PTR es:[edi],al
  409e48:	or     eax,0x11979a59
  409e4d:	pop    ebp
  409e4e:	xchg   edx,eax
  409e4f:	xchg   edx,eax
  409e50:	into   
  409e51:	popa   
  409e52:	xchg   ebx,eax
  409e53:	xchg   esi,eax
  409e54:	rol    BYTE PTR [edx+ebx*4-0x2987f370],cl
  409e5b:	ret    0x6b11
  409e5e:	test   BYTE PTR [ebx-0x7b53a0e0],cl
  409e64:	jo     0x409e9d
  409e66:	add    eax,DWORD PTR [eax]
  409e68:	popf   
  409e69:	lods   al,BYTE PTR ds:[esi]
  409e6a:	test   DWORD PTR [eax-0x63],0x9d4248b2
  409e71:	lods   eax,DWORD PTR ds:[esi]
  409e72:	dec    eax
  409e73:	inc    edx
  409e74:	popf   
  409e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e76:	dec    eax
  409e77:	inc    edx
  409e78:	popf   
  409e79:	popf   
  409e7a:	dec    eax
  409e7b:	inc    edx
  409e7c:	popf   
  409e7d:	xchg   edx,eax
  409e7e:	dec    eax
  409e7f:	inc    edx
  409e80:	add    BYTE PTR [eax],al
  409e82:	popf   
  409e83:	sti    
  409e84:	test   DWORD PTR [eax-0x63],0x9d40f7e3
  409e8b:	shl    bh,1
  409e8d:	inc    eax
  409e8e:	popf   
  409e8f:	xchg   DWORD PTR [edx],eax
  409e91:	arpl   WORD PTR [ebp-0x62fffd17],bx
  409e97:	add    ch,BYTE PTR [eax]
  409e99:	inc    edx
  409e9a:	fiadd  WORD PTR [esi+0x24]
  409e9d:	inc    esi
  409e9e:	fimul  DWORD PTR [edx+0x20]
  409ea1:	dec    edx
  409ea2:	dec    si
  409ea4:	sbb    al,0x4e
  409ea6:	bound  edx,QWORD PTR [edx+0x18]
  409ea9:	push   edx
  409eaa:	outs   dx,BYTE PTR ds:[esi]
  409eab:	push   esi
  409eac:	adc    al,0x56
  409eae:	push   0x5a
  409eb0:	adc    BYTE PTR [edx+0x7c],bl
  409eb3:	pusha  
  409eb4:	dec    edx
  409eb5:	push   0x6c0e6478
  409eba:	je     0x409f24
  409ebc:	adc    dh,BYTE PTR [eax+0x70]
  409ebf:	ins    BYTE PTR es:[edi],dx
  409ec0:	push   es
  409ec1:	je     0x409f0f
  409ec3:	jo     0x409edf
  409ec5:	js     0x409f0f
  409ec7:	je     0x409ec7
  409ec9:	jnp    0x409f0f
  409ecb:	js     0x409e86
  409ecd:	xor    al,0x8f
  409ecf:	das    
  409ed0:	mov    ebp,0xb1337338
  409ed5:	cmp    al,0x86
  409ed7:	sub    ebp,ecx
  409ed9:	add    ebx,DWORD PTR [ebp-0x62fc16fe]
  409edf:	add    dl,ch
  409ee1:	daa    
  409ee2:	shl    DWORD PTR [esi],0xcc
  409ee5:	jno    0x409ee7
  409ee7:	add    BYTE PTR [esi],cl
  409ee9:	ja     0x409ea7
  409eeb:	jne    0x409eff
  409eed:	jnp    0x409eaf
  409eef:	jns    0x409ef7
  409ef1:	daa    
  409ef2:	or     eax,0x526c128
  409ef7:	sub    BYTE PTR [ebx-0x20bb56c5],dh
  409efd:	aas    
  409efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eff:	dec    eax
  409f00:	fild   DWORD PTR [ebx-0x5f]
  409f03:	dec    esp
  409f04:	out    0x47,eax
  409f06:	popf   
  409f07:	push   eax
  409f08:	jecxz  0x409f55
  409f0a:	cdq    
  409f0b:	push   esp
  409f0c:	out    dx,eax
  409f0d:	dec    edi
  409f0e:	xchg   ebp,eax
  409f0f:	pop    eax
  409f10:	jmp    0x409f65
  409f12:	add    ch,cl
  409f14:	and    BYTE PTR [esi],0x24
  409f17:	lds    edi,FWORD PTR [edx+0x5a]
  409f1a:	pop    ecx
  409f1b:	inc    ebx
  409f1c:	(bad)  
  409f1d:	pop    esi
  409f1e:	pop    ebp
  409f1f:	aas    
  409f20:	ret    0x6162
  409f23:	dec    ebx
  409f24:	jle    0x409f8c
  409f26:	gs inc edi
  409f28:	jp     0x409f94
  409f2a:	imul   edx,DWORD PTR [ebx+0x76],0x724f6d6e
  409f31:	jb     0x409fa4
  409f33:	jmp    0x540a1d6
  409f38:	push   edx
  409f39:	push   edx
  409f3a:	push   edx
  409f3b:	ss dec ecx
  409f3d:	pop    ecx
  409f3e:	pop    edi
  409f3f:	cmp    dl,BYTE PTR [eax+edx*2+0x56]
  409f43:	sub    al,0x6f
  409f45:	pop    ebx
  409f46:	dec    eax
  409f47:	push   ds
  409f48:	outs   dx,BYTE PTR ds:[esi]
  409f49:	push   esi
  409f4a:	pop    edi
  409f4b:	int    0x0
  409f4d:	add    BYTE PTR [esi+0x33100002],bl
  409f53:	push   0x2350a65
  409f58:	add    BYTE PTR [edx-0x2dffbf87],al
  409f5e:	jl     0x409fa0
  409f60:	add    BYTE PTR [ebp+0x5200407c],al
  409f66:	mov    esp,0xbf9b0044
  409f6b:	inc    esp
  409f6c:	add    BYTE PTR [ecx+eiz*4],dl
  409f6f:	jo     0x409f71
  409f71:	jmp    0x6540a214
  409f76:	sbb    BYTE PTR [edx],bh
  409f78:	add    BYTE PTR [ebx-0x52],bl
  409f7b:	inc    esp
  409f7c:	add    BYTE PTR [esi+ebp*4+0x44],dl
  409f80:	add    BYTE PTR [ebp-0x4d],al
  409f83:	inc    esp
  409f84:	add    BYTE PTR [eax],cl
  409f86:	mov    eax,DWORD PTR [eax+eax*1-0x76]
  409f8a:	mov    es,WORD PTR [eax+eax*1+0x0]
  409f8e:	mov    eax,0x3004235
  409f93:	push   edx
  409f94:	add    BYTE PTR [eax],al
  409f96:	repz pop ecx
  409f98:	inc    ebx
  409f99:	add    BYTE PTR [ebx],al
  409f9b:	inc    edi
  409f9c:	add    BYTE PTR [eax],al
  409f9e:	xlat   BYTE PTR ds:[ebx]
  409f9f:	(bad)  
  409fa0:	pusha  
  409fa1:	add    dh,dl
  409fa3:	(bad)  
  409fa4:	push   0x64fe6200
  409fa9:	add    BYTE PTR [eax-0x2],ch
  409fac:	sub    eax,0x6bfe5800
  409fb1:	add    BYTE PTR [eax],al
  409fb3:	add    BYTE PTR [eax-0x2],dl
  409fb6:	(bad)  
  409fb7:	dec    edx
  409fb9:	inc    ebx
  409fba:	dec    ecx
  409fbb:	inc    ebx
  409fbc:	mov    dh,0x61
  409fbe:	popa   
  409fbf:	je     0x409f5a
  409fc1:	(bad)  
  409fc2:	(bad)  
  409fc3:	(bad)  
  409fc4:	mov    edx,0xa8414943
  409fc9:	push   0x46
  409fcb:	imul   edx,eax,0x7a000060
  409fd1:	inc    ebx
  409fd2:	dec    ecx
  409fd3:	inc    esi
  409fd4:	nop
  409fd5:	jno    0x40a04a
  409fd7:	push   0x69626587
  409fdc:	mov    dl,0x60
  409fde:	je     0x409fe0
  409fe0:	cli    
  409fe1:	inc    edx
  409fe2:	dec    ecx
  409fe3:	inc    esp
  409fe4:	fnstenv [edx+0x74]
  409fe7:	jb     0x40a04c
  409fe9:	jl     0x409feb
  409feb:	add    BYTE PTR [esi*8+0x42e4003e],cl
  409ff2:	inc    edx
  409ff3:	add    bh,cl
  409ff5:	clc    
  409ff6:	add    BYTE PTR ds:[eax],al
  409ff9:	cdq    
  409ffa:	add    BYTE PTR ds:[edx-0x9],al
  409ffe:	inc    eax
  409fff:	add    BYTE PTR [edx-0x9],al
  40a002:	inc    eax
  40a003:	add    BYTE PTR ds:0x9d00423f,bh
  40a009:	pop    DWORD PTR [edx+eax*2-0x63]
  40a00d:	xchg   DWORD PTR [edx+eax*2-0x63],eax
  40a011:	jg     0x40a057
  40a013:	inc    edx
  40a014:	popf   
  40a015:	add    BYTE PTR [edx+eax*2+0x0],0x0
  40a01a:	popf   
  40a01b:	outs   dx,DWORD PTR ds:[esi]
  40a01c:	inc    ebp
  40a01d:	inc    edx
  40a01e:	popf   
  40a01f:	jb     0x40a066
  40a021:	inc    edx
  40a022:	popf   
  40a023:	ds inc esi
  40a025:	inc    edx
  40a026:	popf   
  40a027:	dec    ebp
  40a028:	popa   
  40a029:	or     DWORD PTR fs:[eax+0x6c],0x6a
  40a02e:	xchg   BYTE PTR [edi],dh
  40a030:	outs   dx,DWORD PTR ds:[esi]
  40a031:	outs   dx,BYTE PTR ds:[esi]
  40a032:	lea    edi,[edx]
  40a034:	jb     0x40a0a9
  40a036:	mov    DWORD PTR [ecx],esi
  40a038:	jne    0x40a0b2
  40a03a:	ja     0x40a086
  40a03c:	imul   eax,DWORD PTR [bp+si+0x7b2e],0xf0839d00
  40a045:	aas    
  40a046:	popf   
  40a047:	das    
  40a048:	push   ebx
  40a049:	inc    edx
  40a04a:	popf   
  40a04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04c:	cld    
  40a04d:	aas    
  40a04e:	popf   
  40a04f:	push   ss
  40a050:	add    al,0x59
  40a052:	popf   
  40a053:	jmp    0x40a057
  40a055:	add    BYTE PTR [ebp-0x628bfd37],bl
  40a05b:	repz add dh,BYTE PTR [ebp+ebx*4-0x15]
  40a060:	add    al,BYTE PTR [eax]
  40a062:	popf   
  40a063:	adc    BYTE PTR [ebp+0x42],ah
  40a066:	popf   
  40a067:	mov    al,0x2
  40a069:	push   ecx
  40a06a:	popf   
  40a06b:	popf   
  40a06c:	add    al,BYTE PTR [eax]
  40a06e:	popf   
  40a06f:	mov    fs,WORD PTR [ebx+0x42]
  40a072:	popf   
  40a073:	add    eax,DWORD PTR [esp+ebx*2]
  40a076:	popf   
  40a077:	jmp    0x8bdda07e
  40a07c:	add    ah,BYTE PTR [ebx+0x7d9d0000]
  40a082:	add    al,BYTE PTR [eax]
  40a084:	popf   
  40a085:	add    cl,BYTE PTR [ebp-0x65fd0bfd]
  40a08b:	add    ecx,ebp
  40a08d:	add    al,BYTE PTR [ebp-0x6ffd43fd]
  40a093:	add    ebx,ebx
  40a095:	add    cl,BYTE PTR [eax-0x7bfd4ffd]
  40a09b:	add    ebx,DWORD PTR [ebp-0x569951fe]
  40a0a1:	push   edx
  40a0a2:	jnp    0x40a110
  40a0a4:	shr    DWORD PTR [ebp+0x4a],0x70
  40a0a8:	aam    0x68
  40a0aa:	inc    edi
  40a0ab:	imul   ebx,DWORD PTR [ebp+0x5f7db902],0x2
  40a0b2:	cmp    DWORD PTR [edi+ecx*4],eax
  40a0b5:	add    dl,BYTE PTR [esi+0x4]
  40a0b8:	jne    0x40a0bc
  40a0ba:	push   eax
  40a0bb:	add    al,0x7f
  40a0bd:	add    al,BYTE PTR [eax+0x4]
  40a0c0:	imul   eax,DWORD PTR [edx],0x2510425
  40a0c6:	sub    eax,0x6029d04
  40a0cb:	pusha  
  40a0cc:	inc    esp
  40a0cd:	jb     0x40a0d4
  40a0cf:	jno    0x40a11f
  40a0d1:	sub    BYTE PTR ds:0x2e023968,al
  40a0d7:	pusha  
  40a0d8:	xor    al,0x72
  40a0da:	or     eax,0xfd532e71
  40a0df:	fs das 
  40a0e1:	outs   dx,BYTE PTR ds:[esi]
  40a0e2:	hlt    
  40a0e3:	jae    0x40a0e5
  40a0e5:	add    BYTE PTR [ebp+0x345fae02],bl
  40a0eb:	jb     0x40a0ba
  40a0ed:	jo     0x40a0fd
  40a0ef:	push   esp
  40a0f0:	shl    DWORD PTR [eax+0x9],0x5f
  40a0f4:	mov    esi,0xae02fb72
  40a0f9:	pop    edi
  40a0fa:	hlt    
  40a0fb:	jb     0x40a0a7
  40a0fd:	jne    0x40a0ff
  40a0ff:	bound  eax,QWORD PTR [eax]
  40a101:	mov    ebp,0xb56944fd
  40a106:	cmc    
  40a107:	popa   
  40a108:	jo     0x40a0b9
  40a10a:	call   0xe0f20e76
  40a10f:	dec    ecx
  40a110:	push   esp
  40a111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a112:	fst    DWORD PTR [edx+0x0]
  40a115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a116:	jmp    0x7073:0xb1ad7069
  40a11d:	mov    ?,WORD PTR [ebx-0x467bb6a3]
  40a123:	pop    edi
  40a124:	gs jmp 0x2e40a3c8
  40a12a:	mov    ebp,0x7c267069
  40a12f:	outs   dx,BYTE PTR ds:[esi]
  40a130:	dec    ecx
  40a131:	inc    esp
  40a132:	js     0x40a193
  40a134:	gs and al,0x77
  40a137:	arpl   WORD PTR [edi+0x4d],bp
  40a13a:	jl     0x40a1b0
  40a13c:	jae    0x40a158
  40a13e:	mov    BYTE PTR [ebp+eiz*2-0x17],bh
  40a142:	sahf   
  40a143:	add    al,BYTE PTR [eax]
  40a145:	es jge 0x40a1b1
  40a148:	jo     0x40a178
  40a14a:	add    BYTE PTR [eax],al
  40a14c:	jl     0x40a1bc
  40a14e:	dec    ecx
  40a14f:	or     al,0x40
  40a151:	pop    edi
  40a152:	gs sub al,0x47
  40a155:	arpl   WORD PTR [edi+0x5],bp
  40a158:	cmp    al,0x74
  40a15a:	jae    0x40a145
  40a15c:	sahf   
  40a15d:	add    al,BYTE PTR [eax]
  40a15f:	es cmp eax,0x381a7069
  40a165:	jo     0x40a1cc
  40a167:	and    BYTE PTR [ecx+eiz*2],dh
  40a16a:	addr16 int3 
  40a16c:	push   edx
  40a16d:	addr16 push ebx
  40a16f:	aad    0x10
  40a171:	pusha  
  40a172:	popa   
  40a173:	les    ebx,FWORD PTR [esi+0x6a940002]
  40a179:	pop    ecx
  40a17a:	sbb    eax,0x2bf84e00
  40a17f:	inc    ebp
  40a180:	fcomp  st(2)
  40a182:	pop    ebx
  40a183:	mov    bl,0x15
  40a185:	add    esp,edi
  40a187:	jmp    0x40a123
  40a189:	jl     0x40a1cb
  40a18b:	add    BYTE PTR [ecx],cl
  40a18d:	jbe    0x40a1d0
  40a18f:	add    BYTE PTR [edi],dh
  40a191:	jbe    0x40a1d4
  40a193:	add    BYTE PTR [ebp-0x7d],dh
  40a196:	inc    eax
  40a197:	add    dl,al
  40a199:	mov    esi,0x83120040
  40a19e:	inc    eax
  40a19f:	add    BYTE PTR [esi-0x4affbf7e],dl
  40a1a5:	mov    esi,0xbec20040
  40a1aa:	inc    eax
  40a1ab:	add    BYTE PTR [edi+0x4175],ah
  40a1b1:	add    BYTE PTR [edi+0x2a00407f],dh
  40a1b7:	add    BYTE PTR [eax+0x0],0x3f
  40a1bb:	stc    
  40a1bc:	add    BYTE PTR ds:[eax-0x68ffb702],dh
  40a1c3:	dec    BYTE PTR [edi+0x0]
  40a1c6:	mov    eax,0x8d0040fe
  40a1cb:	(bad)  
  40a1cc:	(bad)  
  40a1cd:	jmp    DWORD PTR [ecx+eiz*1+0x0]
  40a1d1:	add    ah,ah
  40a1d3:	add    DWORD PTR [eax],eax
  40a1d5:	add    cl,bl
  40a1d7:	add    DWORD PTR [ebp+0x0],ebp
  40a1da:	mov    ah,0x1
  40a1dc:	add    BYTE PTR [eax],al
  40a1de:	aam    0x1
  40a1e0:	sub    eax,0xfffea200
  40a1e5:	(bad)  
  40a1e6:	fld    DWORD PTR [ecx]
  40a1e8:	ins    DWORD PTR es:[edi],dx
  40a1e9:	add    cl,ah
  40a1eb:	add    DWORD PTR [eax+0x0],esi
  40a1ee:	xchg   ecx,eax
  40a1ef:	(bad)  
  40a1f0:	jb     0x40a1f2
  40a1f2:	test   BYTE PTR [ecx],al
  40a1f4:	add    BYTE PTR [eax],al
  40a1f6:	popf   
  40a1f7:	xlat   BYTE PTR ds:[ebx]
  40a1f8:	add    ch,BYTE PTR [ebp-0x63]
  40a1fb:	fild   DWORD PTR [edx]
  40a1fd:	add    BYTE PTR [ebp+0x474a98],bl
  40a203:	mov    al,0x4b
  40a205:	outs   dx,BYTE PTR ds:[esi]
  40a206:	add    dh,BYTE PTR [ebp-0x4805b998]
  40a20c:	pop    esi
  40a20d:	gs out dx,eax
  40a20f:	mov    ebx,0xebc57461
  40a214:	add    al,BYTE PTR [eax]
  40a216:	add    BYTE PTR [eax],al
  40a218:	popf   
  40a219:	rol    DWORD PTR [edx],0x0
  40a21c:	popf   
  40a21d:	mov    esi,0xc69d7302
  40a222:	add    dh,BYTE PTR [eax]
  40a224:	popf   
  40a225:	ret    
  40a226:	add    bh,BYTE PTR [eax-0x63]
  40a229:	mov    ebp,0x789d2502
  40a22e:	add    eax,DWORD PTR [eax]
  40a230:	popf   
  40a231:	push   es
  40a232:	add    al,0x73
  40a234:	popf   
  40a235:	inc    BYTE PTR [ebx]
  40a237:	xor    BYTE PTR [ebp-0x6287fbed],bl
  40a23d:	jmp    0x40a241
  40a23f:	add    BYTE PTR [ebp-0x34cdd706],bl
  40a245:	out    dx,al
  40a246:	add    al,BYTE PTR [eax]
  40a248:	popf   
  40a249:	dec    edx
  40a24a:	push   0x20
  40a24c:	jo     0x40a283
  40a24e:	ins    DWORD PTR es:[edi],dx
  40a24f:	outs   dx,BYTE PTR ds:[esi]
  40a250:	jb     0x40a266
  40a252:	push   0x20
  40a254:	inc    eax
  40a255:	sbb    DWORD PTR [esi+0x6f],esi
  40a258:	dec    edi
  40a259:	retf   
  40a25a:	arpl   WORD PTR ds:0x760e,di
  40a25f:	jb     0x40a299
  40a261:	pop    es
  40a262:	add    al,0x0
  40a264:	popf   
  40a265:	xor    edx,DWORD PTR [ebp+eax*2+0x52]
  40a269:	push   ss
  40a26a:	dec    edx
  40a26b:	dec    ebx
  40a26c:	pop    ebx
  40a26d:	adc    al,0x51
  40a26f:	dec    esi
  40a270:	popf   
  40a271:	add    bl,cl
  40a273:	bound  ecx,QWORD PTR [edi]
  40a275:	jo     0x40a23b
  40a277:	jne    0x40a236
  40a279:	imul   ebx,edx,0xd000023
  40a27f:	(bad)  
  40a280:	aam    0x74
  40a282:	clc    
  40a283:	pop    esi
  40a284:	jmp    0xb1433f8c
  40a289:	push   ebx
  40a28a:	fcom   DWORD PTR [ebx-0x67]
  40a28d:	inc    edx
  40a28e:	ror    BYTE PTR [edi-0x5c],1
  40a291:	aas    
  40a292:	popf   
  40a293:	add    bl,BYTE PTR [edx-0x75963091]
  40a299:	outs   dx,DWORD PTR ds:[esi]
  40a29a:	jge    0x40a301
  40a29c:	xchg   BYTE PTR [edi-0x40],bl
  40a29f:	and    cl,BYTE PTR [eax+0x7b5dce74]
  40a2a5:	outs   dx,DWORD PTR ds:[esi]
  40a2a6:	les    esp,FWORD PTR [ebx-0x71]
  40a2a9:	and    edi,DWORD PTR [ebx-0x3f987f9f]
  40a2af:	pop    esi
  40a2b0:	jmp    0x31433fb8
  40a2b5:	push   esp
  40a2b6:	pusha  
  40a2b7:	push   ebx
  40a2b8:	cmp    dl,BYTE PTR [eax+0x6f]
  40a2bb:	dec    ecx
  40a2bc:	sub    dl,BYTE PTR [eax-0x63]
  40a2bf:	add    al,BYTE PTR [esi+eiz*2+0x7e]
  40a2c3:	arpl   WORD PTR [esi+eiz*2],di
  40a2c6:	jno    0x40a325
  40a2c8:	cmp    esp,DWORD PTR [ecx+0x79]
  40a2cb:	and    bh,BYTE PTR [esi+eiz*2]
  40a2ce:	cmp    BYTE PTR [edx+0x39],0x61
  40a2d2:	jle    0x40a342
  40a2d4:	or     al,0x60
  40a2d6:	jge    0x40a341
  40a2d8:	pshufw mm7,QWORD PTR [eax],0x70
  40a2dc:	pop    es
  40a2dd:	cmp    DWORD PTR gs:[edx],esp
  40a2e0:	sbb    dh,BYTE PTR [eax+0x0]
  40a2e3:	add    BYTE PTR [esi+ebp*2],bh
  40a2e6:	or     al,0x4
  40a2e8:	popf   
  40a2e9:	add    dh,BYTE PTR [ecx]
  40a2eb:	push   esp
  40a2ec:	pop    eax
  40a2ed:	push   ebx
  40a2ee:	add    BYTE PTR [eax],ah
  40a2f0:	arpl   WORD PTR [ecx+eax*2+0x1d],cx
  40a2f4:	push   eax
  40a2f5:	ds pop edi
  40a2f7:	mov    al,0xe0
  40a2f9:	dec    esi
  40a2fa:	inc    ebp
  40a2fb:	mov    ebx,0xb64c41d8
  40a300:	out    dx,eax
  40a301:	dec    esi
  40a302:	inc    ecx
  40a303:	mov    ch,0xdd
  40a305:	add    al,BYTE PTR [eax]
  40a307:	rol    BYTE PTR [eax],1
  40a309:	ins    DWORD PTR es:[edi],dx
  40a30a:	popa   
  40a30b:	int    0x1
  40a30d:	pop    edi
  40a30e:	and    dl,cl
  40a310:	add    esp,DWORD PTR [ebp+0x73]
  40a313:	mov    ch,0xf9
  40a315:	fs je  0x40a2e1
  40a318:	iret   
  40a319:	outs   dx,BYTE PTR ds:[esi]
  40a31a:	jb     0x40a2ac
  40a31c:	mov    eax,0xeea1005b
  40a321:	cmp    eax,0x4cd8a05f
  40a326:	inc    ecx
  40a327:	mov    ch,0xe9
  40a329:	ds pop edi
  40a32b:	stos   BYTE PTR es:[edi],al
  40a32c:	fild   DWORD PTR [ebx+edx*2-0x63]
  40a330:	loope  0x40a376
  40a332:	push   esp
  40a333:	jmp    0x5040a5d6
  40a338:	sub    DWORD PTR [ecx+eiz*2+0x4d],0xffffff80
  40a33d:	pop    esi
  40a33e:	and    BYTE PTR [edx+0x79],cl
  40a341:	popa   
  40a342:	jb     0x40a38c
  40a344:	jle    0x40a3b4
  40a346:	cmp    eax,DWORD PTR gs:[eax]
  40a349:	add    cl,al
  40a34b:	imul   ebp,DWORD PTR [esi+0x9],0x47756a7e
  40a352:	jbe    0x40a376
  40a354:	jae    0x40a396
  40a356:	addr16 pop ebp
  40a358:	and    BYTE PTR [ecx],dl
  40a35a:	cmp    al,0x61
  40a35c:	fs add al,0x4f
  40a35f:	add    al,BYTE PTR [eax]
  40a361:	and    DWORD PTR [ecx+0x3d],esi
  40a364:	pop    edi
  40a365:	and    BYTE PTR [ebx+0x4c],bl
  40a368:	inc    ecx
  40a369:	add    BYTE PTR [eax+0x45],dh
  40a36c:	inc    esp
  40a36d:	pop    edi
  40a36e:	xchg   DWORD PTR [esi+0x55],eax
  40a371:	dec    esi
  40a372:	jg     0x40a3bf
  40a374:	push   ebx
  40a375:	dec    ecx
  40a376:	mov    es,WORD PTR [ecx+0x0]
  40a379:	add    BYTE PTR [ebp+0x68],ch
  40a37c:	jbe    0x40a3df
  40a37e:	pusha  
  40a37f:	pop    edi
  40a380:	and    BYTE PTR fs:[edi+0x5e],dl
  40a384:	popa   
  40a385:	jb     0x40a3dc
  40a387:	gs je  0x40a3ef
  40a38a:	ss imul ebp,DWORD PTR es:[esi-0x5c],0x286e6f65
  40a393:	arpl   WORD PTR [esi+0x74],bp
  40a396:	popa   
  40a397:	push   0x65
  40a399:	outs   dx,BYTE PTR ds:[esi]
  40a39a:	sub    esp,DWORD PTR [edx+0x68]
  40a39d:	and    BYTE PTR [ebx+eiz*2],ch
  40a3a0:	popa   
  40a3a1:	sbb    DWORD PTR fs:[eax+eax*1+0x0],esi
  40a3a6:	cld    
  40a3a7:	push   ebp
  40a3a8:	inc    ebp
  40a3a9:	pop    edi
  40a3aa:	in     eax,dx
  40a3ab:	inc    edi
  40a3ac:	push   esi
  40a3ad:	inc    ecx
  40a3ae:	add    BYTE PTR [eax],al
  40a3b0:	add    BYTE PTR [edi],bh
  40a3b2:	inc    esp
  40a3b3:	pop    edi
  40a3b4:	test   DWORD PTR [eax+0x4e],0x5447f954
  40a3bb:	pop    edi
  40a3bc:	shl    BYTE PTR [ecx],1
  40a3be:	dec    esi
  40a3bf:	inc    edi
  40a3c0:	enter  0x3e,0x0
  40a3c4:	pop    ebp
  40a3c5:	push   0x5dc06176
  40a3ca:	and    BYTE PTR fs:[edi+0x5e],ah
  40a3ce:	popa   
  40a3cf:	jb     0x40a436
  40a3d1:	arpl   WORD PTR [ebp+eiz*2-0x5a],si
  40a3d5:	imul   ebp,DWORD PTR es:[esi-0x6c],0xa861655e
  40a3dd:	push   ecx
  40a3de:	jb     0x40a3e0
  40a3e0:	mov    WORD PTR [esi+0x45],ss
  40a3e3:	pop    edi
  40a3e4:	popf   
  40a3e5:	and    al,BYTE PTR [esi+0x56]
  40a3e8:	pop    esp
  40a3e9:	cmovnp eax,DWORD PTR [edx+ebx*2+0x33]
  40a3ee:	aas    
  40a3ef:	inc    ecx
  40a3f0:	pop    ecx
  40a3f1:	es push edx
  40a3f3:	pop    edi
  40a3f4:	push   ecx
  40a3f5:	sub    BYTE PTR [ecx+0x45],cl
  40a3f8:	push   ebx
  40a3f9:	fild   DWORD PTR [edx]
  40a3fb:	add    BYTE PTR [ebp-0x1dfc349],bl
  40a401:	shl    DWORD PTR [ecx+0x72],cl
  40a404:	cld    
  40a405:	mov    esp,0xfc0f656e
  40a40a:	pop    esi
  40a40b:	js     0x40a3fa
  40a40d:	mov    esi,0xc7f8745f
  40a412:	add    al,BYTE PTR [eax]
  40a414:	add    BYTE PTR [eax],al
  40a416:	popf   
  40a417:	mov    ds:0x8fc24552,eax
  40a41c:	cmp    al,0x5f
  40a41e:	loopne 0x40a3e3
  40a420:	push   edx
  40a421:	inc    ebp
  40a422:	fidiv  WORD PTR [edi-0x7d62bbc3]
  40a428:	fs jbe 0x40a3e7
  40a42b:	outs   dx,DWORD PTR ds:[esi]
  40a42c:	push   0x64
  40a42e:	jge    0x40a3b1
  40a430:	jo     0x40a493
  40a432:	mov    edx,0xb16e5d7e
  40a437:	fild   DWORD PTR [edx]
  40a439:	add    BYTE PTR [ebp+0x7a4552a3],bl
  40a43f:	xor    al,BYTE PTR [esi+0x56]
  40a442:	pop    esp
  40a443:	pop    ds
  40a444:	dec    ebx
  40a445:	inc    esp
  40a446:	push   0x21
  40a448:	push   edx
  40a449:	inc    ecx
  40a44a:	pop    edx
  40a44b:	push   cs
  40a44c:	aas    
  40a44d:	dec    esi
  40a44e:	push   ecx
  40a44f:	fild   DWORD PTR [edx]
  40a451:	add    BYTE PTR [ebp+0x7c766652],bl
  40a457:	inc    edi
  40a458:	imul   esp,DWORD PTR [ebp+edi*4+0x2a],0x6f
  40a45d:	gs dec edi
  40a45f:	add    ah,BYTE PTR [eax]
  40a461:	and    al,0x4e
  40a463:	jbe    0x40a480
  40a465:	imul   edi,DWORD PTR [ebx],0x69
  40a468:	jmp    0x21434170
  40a46d:	push   esp
  40a46e:	pusha  
  40a46f:	push   ecx
  40a470:	xor    BYTE PTR [esi+0x4b],al
  40a473:	inc    ebx
  40a474:	sub    eax,0x1851614b
  40a479:	dec    edi
  40a47a:	add    BYTE PTR [eax],al
  40a47c:	pop    eax
  40a47d:	push   esp
  40a47e:	adc    BYTE PTR [ebp-0x12],dl
  40a481:	push   esi
  40a482:	mov    ebx,0xe947e34a
  40a487:	add    ebx,DWORD PTR [ebp+0xb65c002]
  40a48d:	bound  edi,QWORD PTR [ebp-0x46dcfe96]
  40a493:	(bad)  
  40a494:	jmp    0x9d448df3
  40a499:	add    ah,BYTE PTR [ecx-0x5fb027ad]
  40a49f:	inc    ebp
  40a4a0:	repz inc ecx
  40a4a2:	mov    ch,0x4a
  40a4a4:	(bad)  [edi-0x47]
  40a4a7:	inc    edx
  40a4a8:	icebp  
  40a4a9:	cmp    ch,cl
  40a4ab:	add    ebx,DWORD PTR [ebp-0x4c9a7ffe]
  40a4b1:	popa   
  40a4b2:	xchg   ebp,eax
  40a4b3:	push   0xffffffb9
  40a4b5:	and    bh,BYTE PTR [ecx+0x64]
  40a4b8:	scas   eax,DWORD PTR es:[edi]
  40a4b9:	jbe    0x40a4a4
  40a4bb:	add    ebx,DWORD PTR [ebp+0x6053a102]
  40a4c1:	dec    edi
  40a4c2:	xor    BYTE PTR [edx+0x6b],al
  40a4c5:	inc    ecx
  40a4c6:	sub    eax,0x394f613d
  40a4cb:	inc    ebx
  40a4cc:	outs   dx,DWORD PTR ds:[esi]
  40a4cd:	push   esi
  40a4ce:	jmp    0x504341d6
  40a4d3:	bound  ebp,QWORD PTR [ebx+0x61]
  40a4d6:	dec    ebp
  40a4d7:	pop    ebp
  40a4d8:	and    DWORD PTR [edx],0x737e4100
  40a4de:	je     0x40a4c9
  40a4e0:	add    BYTE PTR [eax],al
  40a4e2:	sahf   
  40a4e3:	add    al,BYTE PTR [eax]
  40a4e5:	xor    DWORD PTR [ecx+0x45],ebp
  40a4e8:	pop    edi
  40a4e9:	xor    BYTE PTR [edi+0x58],bl
  40a4ec:	inc    ecx
  40a4ed:	and    eax,0x215f4680
  40a4f2:	pop    esi
  40a4f3:	push   ebx
  40a4f4:	push   esp
  40a4f5:	jmp    0x1040a798
  40a4fa:	aas    
  40a4fb:	js     0x40a55e
  40a4fd:	add    eax,0x14206640
  40a502:	repz add BYTE PTR ds:[ecx-0x4fa0ba12],dh
  40a50a:	fcomp  QWORD PTR [eax+0x41]
  40a50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a50e:	rol    DWORD PTR [esi+0x5f],0xb4
  40a512:	sar    BYTE PTR [esi],1
  40a514:	add    al,dl
  40a516:	cld    
  40a517:	js     0x40a57a
  40a519:	int    0xc9
  40a51b:	data16 and BYTE PTR [ecx+0x95056ca],ah
  40a522:	mov    esp,0xbf917465
  40a527:	data16 add BYTE PTR [ecx-0x5fa0ba12],dh
  40a52e:	fcomp  QWORD PTR [eax+0x41]
  40a531:	popf   
  40a532:	jns    0x40a57a
  40a534:	pop    edi
  40a535:	mov    ah,0xe5
  40a537:	push   esi
  40a538:	dec    eax
  40a539:	scas   al,BYTE PTR es:[edi]
  40a53a:	loop   0x40a53e
  40a53c:	add    BYTE PTR [eax+0x7d6178bc],al
  40a542:	jns    0x40a5aa
  40a544:	and    BYTE PTR [ecx],dh
  40a546:	add    BYTE PTR [eax],al
  40a548:	jne    0x40a5a0
  40a54a:	push   eax
  40a54b:	or     DWORD PTR [edx-0x7ba29e8a],edx
  40a551:	jae    0x40a573
  40a553:	dec    edx
  40a554:	jle    0x40a5bc
  40a556:	add    BYTE PTR gs:[ebx+eax*1],al
  40a55a:	add    BYTE PTR [eax],al
  40a55c:	lods   al,BYTE PTR ds:[esi]
  40a55d:	push   esi
  40a55e:	inc    ebp
  40a55f:	pop    edi
  40a560:	mov    ebp,0xb8415644
  40a565:	sub    eax,0x4a975f44
  40a56a:	inc    ecx
  40a56b:	push   esp
  40a56c:	xchg   ecx,eax
  40a56d:	push   edi
  40a56e:	add    BYTE PTR [eax],al
  40a570:	popf   
  40a571:	fs jbe 0x40a5d5
  40a574:	mov    eax,0x6c20644d
  40a579:	dec    edx
  40a57a:	push   esp
  40a57b:	push   eax
  40a57c:	aam    0x68
  40a57e:	gs jb  0x40a528
  40a581:	dec    ebp
  40a582:	outs   dx,DWORD PTR ds:[esi]
  40a583:	outs   dx,BYTE PTR ds:[esi]
  40a584:	test   BYTE PTR [edx],al
  40a586:	add    BYTE PTR [eax],al
  40a588:	dec    esp
  40a589:	push   edx
  40a58a:	inc    ebp
  40a58b:	pop    edi
  40a58c:	dec    ebp
  40a58d:	inc    esp
  40a58e:	push   esi
  40a58f:	inc    ecx
  40a590:	cmp    BYTE PTR [edi],ch
  40a592:	inc    esp
  40a593:	pop    edi
  40a594:	xor    bh,BYTE PTR [ebx]
  40a596:	push   edx
  40a597:	push   ebx
  40a598:	sub    eax,0x60004e41
  40a59d:	addr16 je 0x40a601
  40a5a0:	xchg   esp,eax
  40a5a1:	je     0x40a608
  40a5a3:	arpl   WORD PTR [ecx+0x4f],sp
  40a5a6:	jbe    0x40a60d
  40a5a8:	and    BYTE PTR [edx],ah
  40a5aa:	popa   
  40a5ab:	data16 add BYTE PTR [eax],al
  40a5ae:	xor    BYTE PTR [ebx+0x72],bl
  40a5b1:	and    BYTE PTR [edi],dl
  40a5b3:	popa   
  40a5b4:	ins    DWORD PTR es:[edi],dx
  40a5b5:	jo     0x40a56f
  40a5b7:	pop    edx
  40a5b8:	je     0x40a61f
  40a5ba:	and    BYTE PTR [edx],ah
  40a5bc:	arpl   WORD PTR [edi+0x1a],bp
  40a5bf:	fs arpl WORD PTR gs:[eax+0x4e6e6f4e],sp
  40a5c7:	and    ah,BYTE PTR [ebx+0x6c]
  40a5ca:	imul   esi,DWORD PTR [edi+0x65],0x20
  40a5ce:	pop    ecx
  40a5cf:	gs jae 0x40a645
  40a5d2:	popf   
  40a5d3:	cmp    ch,BYTE PTR [ecx+0x65]
  40a5d6:	popf   
  40a5d7:	and    edx,DWORD PTR [ebp+eax*2+0x52]
  40a5db:	sbb    BYTE PTR [eax+0x4f],al
  40a5de:	dec    esi
  40a5df:	es dec eax
  40a5e1:	pop    edi
  40a5e2:	pop    esi
  40a5e3:	and    al,0x42
  40a5e5:	dec    esi
  40a5e6:	pusha  
  40a5e7:	sbb    BYTE PTR [eax+0x49],bl
  40a5ea:	bound  esi,QWORD PTR ds:0x179d0004
  40a5f0:	popa   
  40a5f1:	outs   dx,DWORD PTR ds:[esi]
  40a5f2:	jge    0x40a5fa
  40a5f4:	arpl   WORD PTR [esi+0x34],bp
  40a5f7:	mov    ebx,0xff3c655a
  40a5fc:	data16 jb 0x40a67c
  40a5ff:	stc    
  40a600:	push   0x74
  40a602:	cmp    al,ch
  40a604:	and    dh,BYTE PTR [ebx+0x0]
  40a607:	pop    es
  40a608:	bound  edi,QWORD PTR [ebx]
  40a60a:	mov    ebp,0xf6578d4
  40a60f:	(bad)  
  40a610:	pop    esi
  40a611:	outs   dx,DWORD PTR ds:[esi]
  40a612:	add    BYTE PTR [eax],al
  40a614:	or     bh,ah
  40a616:	addr16 gs icebp 
  40a619:	(bad)  
  40a61a:	arpl   WORD PTR [eax+edi*8-0x41],si
  40a61e:	add    al,BYTE PTR [eax]
  40a620:	popf   
  40a621:	mov    bl,0x52
  40a623:	inc    ebp
  40a624:	ret    0x45a3
  40a627:	inc    ecx
  40a628:	loope  0x40a5d0
  40a62a:	push   esp
  40a62b:	pop    edi
  40a62c:	loop   0x40a5db
  40a62e:	inc    ebp
  40a62f:	push   edx
  40a630:	jecxz  0x40a5d1
  40a632:	aas    
  40a633:	push   edi
  40a634:	popf   
  40a635:	mov    BYTE PTR [esi+0x72],dh
  40a638:	sar    BYTE PTR [edx+0x5d],0x20
  40a63c:	mov    eax,0xc1656695
  40a641:	mov    ebx,0x7a7d7461
  40a646:	pusha  
  40a647:	and    BYTE PTR [eax-0x72879993],dl
  40a64d:	add    cl,BYTE PTR [ebp+eiz*2-0x6f]
  40a651:	addr16 inc ebp
  40a653:	and    al,0x89
  40a655:	pop    ebx
  40a656:	inc    esp
  40a657:	addr16 popf 
  40a659:	add    ah,BYTE PTR [ecx]
  40a65b:	push   esp
  40a65c:	pop    eax
  40a65d:	dec    ebp
  40a65e:	xor    BYTE PTR [edx+0x53],al
  40a661:	inc    ebx
  40a662:	sub    eax,0x2c4d593b
  40a667:	inc    ecx
  40a668:	arpl   WORD PTR [ebp+0x1a],cx
  40a66b:	pop    eax
  40a66c:	pop    esp
  40a66d:	push   esi
  40a66e:	sub    al,0x4
  40a670:	popf   
  40a671:	add    dl,BYTE PTR ds:0x622385c
  40a677:	bound  eax,QWORD PTR [eax]
  40a679:	add    BYTE PTR [edx+0x5f],bl
  40a67c:	add    al,0x75
  40a67e:	arpl   WORD PTR cs:[esi],cx
  40a681:	addr16 dec edx
  40a683:	popa   
  40a684:	push   cs
  40a685:	pop    edi
  40a686:	sub    eax,0x780c5e
  40a68b:	and    ecx,DWORD PTR [edx]
  40a68d:	arpl   WORD PTR [ecx],ax
  40a68f:	pop    edi
  40a690:	retf   
  40a691:	(bad)  
  40a692:	(bad)  
  40a693:	push   edi
  40a694:	or     DWORD PTR [edx-0x4],ebp
  40a697:	pop    ecx
  40a698:	lds    esp,FWORD PTR [esi+0x1]
  40a69b:	add    esp,DWORD PTR [ecx-0x55b427ad]
  40a6a1:	inc    ebp
  40a6a2:	retf   0xc45d
  40a6a5:	je     0x40a695
  40a6a7:	popa   
  40a6a8:	into   
  40a6a9:	data16 cli 
  40a6ab:	pop    edi
  40a6ac:	mov    esi,0x8c5ecd5e
  40a6b1:	ja     0x40a673
  40a6b3:	add    dl,BYTE PTR [ebp-0x79dd47a5]
  40a6b9:	popa   
  40a6ba:	fisub  DWORD PTR [eax+0x7e]
  40a6bd:	addr16 mov ah,0x22
  40a6c0:	mov    ah,BYTE PTR [edx-0x47]
  40a6c3:	pop    esi
  40a6c4:	mov    esp,DWORD PTR [edx-0x42]
  40a6c7:	push   edi
  40a6c8:	add    cl,cl
  40a6ca:	test   BYTE PTR [ecx+0x69],ah
  40a6cd:	jge    0x40a74a
  40a6cf:	data16 add BYTE PTR [ecx],dh
  40a6d2:	jno    0x40a719
  40a6d4:	pop    edi
  40a6d5:	sub    bl,BYTE PTR [edi+0x4b]
  40a6d8:	bound  eax,QWORD PTR [esi-0x7b]
  40a6db:	imul   eax,DWORD PTR [eax],0x51000055
  40a6e1:	and    BYTE PTR gs:[esi+0x4b],dl
  40a6e5:	dec    ebx
  40a6e6:	push   0x65667844
  40a6eb:	cmp    ecx,DWORD PTR [esi+0x4b]
  40a6ee:	arpl   WORD PTR [esi],di
  40a6f0:	cmp    al,0x72
  40a6f2:	ins    BYTE PTR es:[edi],dx
  40a6f3:	or     al,0x45
  40a6f5:	and    BYTE PTR gs:[edx],cl
  40a6f8:	cmp    BYTE PTR [esi+0x6c],bl
  40a6fb:	or     eax,DWORD PTR [eax+0x5f]
  40a6fe:	imul   ecx,ecx,0x38
  40a701:	popa   
  40a702:	imul   edx,DWORD PTR ds:0x31006634,0x2a5f4549
  40a70c:	fisttp WORD PTR [ebx+0x68]
  40a70f:	add    al,0xf8
  40a711:	data16 fisttp DWORD PTR gs:[edi]
  40a715:	dec    esp
  40a716:	arpl   si,cx
  40a718:	std    
  40a719:	jb     0x40a787
  40a71b:	int3   
  40a71c:	repnz gs add ch,dl
  40a720:	(bad)  
  40a721:	gs and dh,dl
  40a724:	enter  0x684b,0xc4
  40a728:	stc    
  40a729:	gs mov bx,0x74eb
  40a72e:	popa   
  40a72f:	mov    ebp,0x8a2065d5
  40a734:	rcr    DWORD PTR [esi+0x6c],0x8b
  40a738:	mov    ecx,0xc0c96b5f
  40a73d:	popa   
  40a73e:	imul   edi,DWORD PTR [ebp-0x3b],0x66
  40a745:	add    ah,ch
  40a747:	dec    esi
  40a748:	inc    ebp
  40a749:	pop    edi
  40a74a:	test   DWORD PTR [eax+0x5f],0x64662968
  40a751:	gs xchg esi,eax
  40a753:	cmp    al,0x76
  40a755:	popa   
  40a756:	jo     0x40a7c1
  40a758:	add    BYTE PTR gs:[eax+0x4e],ch
  40a75c:	and    BYTE PTR gs:[ebx+0x4c],ah
  40a760:	pop    edi
  40a761:	push   0x65646559
  40a766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a767:	cmp    esp,DWORD PTR [esi+0x69]
  40a76a:	pop    ecx
  40a76b:	bound  esp,QWORD PTR [eax+eiz*1+0x67]
  40a76f:	gs ins BYTE PTR es:[edi],dx
  40a771:	ins    BYTE PTR es:[edi],dx
  40a772:	data16 arpl WORD PTR gs:[ebx-0x2c],bp
  40a777:	fs popa 
  40a779:	imul   edx,DWORD PTR [eax+0x7c006459],0x875f4556
  40a783:	inc    eax
  40a784:	pop    edi
  40a785:	push   0x65646599
  40a78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78b:	cmp    esp,DWORD PTR [esi+0x69]
  40a78e:	test   eax,0x88006462
  40a793:	dec    esi
  40a794:	and    BYTE PTR gs:[ebx+0x48],dh
  40a798:	pop    edi
  40a799:	jne    0x40a801
  40a79b:	dec    edx
  40a79c:	and    BYTE PTR [ebx+0x65],ah
  40a79f:	dec    edx
  40a7a0:	ins    BYTE PTR es:[edi],dx
  40a7a1:	bound  esp,QWORD PTR [ebp+0x65]
  40a7a4:	imul   esp,DWORD PTR [eax],0x5a
  40a7a7:	pop    edi
  40a7a8:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x6259
  40a7b0:	cld    
  40a7b1:	push   ebp
  40a7b2:	inc    ebp
  40a7b3:	pop    edi
  40a7b4:	pop    es
  40a7b5:	inc    esp
  40a7b6:	pop    edi
  40a7b7:	jne    0x40a7df
  40a7b9:	dec    edx
  40a7ba:	add    BYTE PTR [eax],al
  40a7bc:	sub    BYTE PTR [esi+0x65],cl
  40a7bf:	and    BYTE PTR [ebp-0x3fa0a380],bl
  40a7c5:	jle    0x40a838
  40a7c7:	jae    0x40a785
  40a7c9:	js     0x40a832
  40a7cb:	pop    edi
  40a7cc:	mov    edi,0x8b69657e
  40a7d1:	mov    ebx,0x67816161
  40a7d6:	popa   
  40a7d7:	popa   
  40a7d8:	jle    0x40a82e
  40a7da:	and    al,0x66
  40a7dc:	jl     0x40a830
  40a7de:	pusha  
  40a7df:	gs sbb ebx,0x239d0002
  40a7e6:	push   esp
  40a7e7:	inc    ebp
  40a7e8:	dec    edx
  40a7e9:	sbb    al,0x42
  40a7eb:	pop    edi
  40a7ec:	jo     0x40a82c
  40a7ee:	jno    0x40a863
  40a7f0:	cmp    al,0x38
  40a7f2:	addr16 pop edi
  40a7f4:	aas    
  40a7f5:	ds imul edi,DWORD PTR gs:[ebx],0x9d0002db
  40a7fd:	or     al,0x77
  40a7ff:	arpl   WORD PTR [esi],di
  40a801:	div    BYTE PTR [eax+0x73]
  40a804:	popf   
  40a805:	and    edx,DWORD PTR [ebp+eax*2+0x4a]
  40a809:	xor    BYTE PTR [ecx],bh
  40a80b:	add    BYTE PTR [ebp+0x54430b],bl
  40a811:	add    dh,bl
  40a813:	and    eax,DWORD PTR [eax+eax*1]
  40a816:	popf   
  40a817:	push   cs
  40a818:	ds push ebx
  40a81a:	lock popf 
  40a81c:	dec    edi
  40a81d:	inc    ebx
  40a81e:	out    dx,eax
  40a81f:	mov    dl,0x40
  40a821:	inc    ebp
  40a822:	popf   
  40a823:	lods   al,BYTE PTR ds:[esi]
  40a824:	push   ebp
  40a825:	inc    edx
  40a826:	into   
  40a827:	pushf  
  40a828:	push   eax
  40a829:	dec    ecx
  40a82a:	fist   WORD PTR [esi-0x6662fffe]
  40a830:	cmp    edx,DWORD PTR [esp+eiz*8-0x67]
  40a834:	dec    ecx
  40a835:	add    BYTE PTR [ebp-0x1face27a],bl
  40a83b:	add    ch,BYTE PTR [eax-0x16c521af]
  40a841:	add    ebx,DWORD PTR [ebp-0x30b95bfe]
  40a847:	inc    ecx
  40a848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a849:	add    ebx,DWORD PTR [ebp-0x27c455fe]
  40a84f:	inc    ebp
  40a850:	mov    dl,0x3c
  40a852:	jo     0x40a8a2
  40a854:	jmp    0x9c43455c
  40a859:	cmp    BYTE PTR [ebp+eax*2+0x3d],bl
  40a85d:	cmp    ebp,DWORD PTR [ebx+0x3b]
  40a860:	xor    eax,0x3b029d4b
  40a865:	inc    edi
  40a866:	dec    ebp
  40a867:	cmp    DWORD PTR [ebx],edi
  40a869:	pop    eax
  40a86a:	popf   
  40a86b:	add    bl,BYTE PTR [esi+edi*1]
  40a86e:	push   ecx
  40a86f:	cmp    DWORD PTR [edx],ebp
  40a871:	cmp    DWORD PTR [ebp+0x521902],ebx
  40a877:	add    BYTE PTR [edx+0x52],ah
  40a87a:	sbb    DWORD PTR [ebx+0x71],eax
  40a87d:	inc    ebp
  40a87e:	xor    DWORD PTR [ebx*4+0x6a523902],eax
  40a885:	push   edx
  40a886:	das    
  40a887:	cmp    esp,DWORD PTR [ebx+0x3e]
  40a88a:	jmp    0x34434592
  40a88f:	cmp    eax,0x3e93f4b
  40a894:	popf   
  40a895:	add    ah,BYTE PTR [ecx+edi*1]
  40a898:	fidiv  WORD PTR [edi]
  40a89a:	sbb    eax,0xb5029d04
  40a89f:	cmp    al,0xde
  40a8a1:	cmp    ebp,ecx
  40a8a3:	add    ebx,DWORD PTR [ebp-0x32c355fe]
  40a8a9:	dec    ecx
  40a8aa:	jmp    0x9d4345b2
  40a8af:	push   ecx
  40a8b0:	fadd   QWORD PTR [ebx-0x5c]
  40a8b3:	add    ebx,DWORD PTR [ebp-0x1159fffe]
  40a8b9:	dec    esi
  40a8ba:	dec    ecx
  40a8bb:	sahf   
  40a8bc:	mov    BYTE PTR [ebx+0x0],dl
  40a8bf:	stos   BYTE PTR es:[edi],al
  40a8c0:	cmp    DWORD PTR [eax],0x4edda44e
  40a8c6:	add    BYTE PTR [ecx-0x5effb135],bh
  40a8cc:	jecxz  0x40a90f
  40a8ce:	inc    esp
  40a8cf:	jmp    0xa540ab72
  40a8d4:	arpl   WORD PTR [esi],si
  40a8d6:	inc    ebp
  40a8d7:	popf   
  40a8d8:	pop    ebx
  40a8d9:	add    al,BYTE PTR [eax]
  40a8db:	mov    al,BYTE PTR [eax]
  40a8dd:	add    BYTE PTR [ecx+0x58],ch
  40a8e0:	outs   dx,BYTE PTR ds:[esi]
  40a8e1:	dec    esp
  40a8e2:	jp     0x40a952
  40a8e4:	imul   ecx,DWORD PTR [esi+0x57],0x6b590002
  40a8eb:	push   edi
  40a8ec:	js     0x40a93e
  40a8ee:	test   BYTE PTR [ebx+0x6f],ah
  40a8f1:	push   edi
  40a8f2:	inc    edi
  40a8f3:	pop    ebp
  40a8f4:	arpl   WORD PTR ds:0xe96e5778,si
  40a8fa:	sahf   
  40a8fb:	add    al,BYTE PTR [eax]
  40a8fd:	dec    edx
  40a8fe:	pop    ax
  40a900:	je     0x40a90e
  40a902:	outs   dx,BYTE PTR ds:[si]
  40a904:	sub    eax,0x67583c0d
  40a909:	sbb    eax,0x15000251
  40a90e:	xor    esp,DWORD PTR [ecx+0x6e]
  40a911:	cli    
  40a912:	cmp    al,0x5d
  40a914:	jb     0x40a8e2
  40a916:	std    
  40a917:	pop    eax
  40a918:	arpl   WORD PTR [esi],ax
  40a91a:	std    
  40a91b:	pop    ecx
  40a91c:	outs   dx,BYTE PTR ds:[esi]
  40a91d:	push   es
  40a91e:	mov    eax,ds:0xedc0002
  40a923:	pusha  
  40a924:	jb     0x40a8ee
  40a926:	ficomp DWORD PTR [ebp+0x0]
  40a929:	retf   0x6dd6
  40a92c:	outs   dx,BYTE PTR ds:[esi]
  40a92d:	ret    0x5efd
  40a930:	add    BYTE PTR [eax],al
  40a932:	dec    edi
  40a933:	bound  esp,QWORD PTR [ebp+0x70]
  40a936:	test   eax,0x12696c5d
  40a93b:	bound  eax,QWORD PTR [eax]
  40a93d:	add    BYTE PTR [edi+0x4f],dl
  40a940:	outs   dx,DWORD PTR ds:[esi]
  40a941:	jae    0x40a943
  40a943:	add    BYTE PTR [ecx],dl
  40a945:	add    eax,DWORD PTR [eax]
  40a947:	add    al,dh
  40a949:	xchg   edi,eax
  40a94a:	inc    eax
  40a94b:	add    BYTE PTR [edi],dl
  40a94d:	pushf  
  40a94e:	inc    eax
  40a94f:	add    BYTE PTR [ebx-0x3d],cl
  40a952:	inc    eax
  40a953:	add    BYTE PTR [ebp-0x7dffbf42],ah
  40a959:	mov    ebp,0xbd7e0040
  40a95e:	inc    eax
  40a95f:	add    BYTE PTR [ebx+0x3],al
  40a962:	ins    BYTE PTR es:[edi],dx
  40a963:	add    BYTE PTR [ebx-0x2],ch
  40a966:	popa   
  40a967:	add    BYTE PTR [ebp-0x2],ah
  40a96a:	imul   eax,DWORD PTR [eax],0xffffffa8
  40a96d:	(bad)  
  40a96e:	(bad)  
  40a96f:	dec    DWORD PTR [eax+0x57006efe]
  40a975:	(bad)  
  40a976:	pusha  
  40a977:	add    BYTE PTR [eax-0x2],ch
  40a97a:	pop    ebx
  40a97b:	add    ah,al
  40a97d:	add    al,BYTE PTR [eax]
  40a97f:	add    BYTE PTR [edx+esi*2+0x74],bl
  40a983:	jo     0x40a943
  40a985:	or     ebp,DWORD PTR [edi]
  40a987:	ja     0x40a91c
  40a989:	jae    0x40a9b9
  40a98b:	bound  ebx,QWORD PTR [ebp-0x68d198b4]
  40a991:	dec    ebx
  40a992:	ins    DWORD PTR es:[edi],dx
  40a993:	das    
  40a994:	mov    ah,0x2
  40a996:	add    BYTE PTR [eax],al
  40a998:	lods   al,BYTE PTR ds:[esi]
  40a999:	jb     0x40aa0f
  40a99b:	jo     0x40a9eb
  40a99d:	or     DWORD PTR [edi],ebp
  40a99f:	ja     0x40a934
  40a9a1:	jno    0x40a9d1
  40a9a3:	imul   ecx,DWORD PTR [bx+di+0x67],0x6c
  40a9a8:	add    BYTE PTR [eax],al
  40a9aa:	popa   
  40a9ab:	or     al,0x63
  40a9ad:	outs   dx,DWORD PTR ds:[esi]
  40a9ae:	popf   
  40a9af:	mov    esi,0x79d0019
  40a9b4:	(bad)  
  40a9b5:	aas    
  40a9b6:	popf   
  40a9b7:	addr16 (bad) 
  40a9b9:	aas    
  40a9ba:	popf   
  40a9bb:	mov    BYTE PTR [edx],al
  40a9bd:	gs popf 
  40a9bf:	xchg   DWORD PTR [edx],eax
  40a9c1:	arpl   WORD PTR [ebp-0x62affd47],bx
  40a9c7:	mov    DWORD PTR [edx],eax
  40a9c9:	imul   ebx,DWORD PTR [ebp-0x6296fd73],0x9d65027f
  40a9d3:	jl     0x40a9d7
  40a9d5:	gs popf 
  40a9d7:	fild   DWORD PTR [edx]
  40a9d9:	add    BYTE PTR [ebp-0x629afd4b],bl
  40a9df:	jae    0x40a9e4
  40a9e1:	gs popf 
  40a9e3:	fild   DWORD PTR [edx]
  40a9e5:	add    BYTE PTR [ebp-0x62be1076],bl
  40a9eb:	fild   DWORD PTR [edx]
  40a9ed:	add    BYTE PTR [ebp-0x1d0f82db],bl
  40a9f3:	fisttp QWORD PTR [edx-0x2524a2b3]
  40a9f9:	inc    eax
  40a9fa:	sbb    ecx,0x2
  40a9fd:	neg    BYTE PTR [ecx-0x9]
  40aa00:	sti    
  40aa01:	add    BYTE PTR [ecx-0x23],dl
  40aa04:	push   eax
  40aa05:	call   0x439b7c
  40aa0a:	es sahf 
  40aa0c:	dec    ecx
  40aa0d:	ret    0x0
  40aa10:	cdq    
  40aa11:	fisttp DWORD PTR [ebp-0x75]
  40aa14:	mov    ecx,0x9c0bd85a
  40aa19:	fild   DWORD PTR [edx]
  40aa1b:	push   ebx
  40aa1c:	repz or al,0x7d
  40aa1f:	neg    DWORD PTR [esi]
  40aa21:	ins    BYTE PTR es:[edi],dx
  40aa22:	sbb    BYTE PTR [edi],cl
  40aa24:	pop    ds
  40aa25:	dec    esi
  40aa26:	add    al,0x0
  40aa28:	popf   
  40aa29:	add    ch,BYTE PTR [eax-0x17]
  40aa2c:	sub    bh,bh
  40aa2e:	call   0x5fb64c36
  40aa33:	add    al,0x9d
  40aa35:	add    ah,BYTE PTR [edx+0x47]
  40aa38:	xchg   ebp,eax
  40aa39:	jg     0x40aa5c
  40aa3b:	jo     0x40a9e5
  40aa3d:	cmc    
  40aa3e:	jne    0x40aa45
  40aa40:	push   ds
  40aa41:	jmp    0x1130:0x81a06fea
  40aa48:	enter  0x726f,0x6f
  40aa4c:	test   eax,0x30ec63bd
  40aa51:	in     eax,0x15
  40aa53:	add    BYTE PTR [ebp+0x237ee902],bl
  40aa59:	outs   dx,BYTE PTR ds:[esi]
  40aa5a:	idiv   BYTE PTR [ebx+esi*8+0x78]
  40aa5e:	cs ja  0x40aa7a
  40aa61:	jmp    0x759f:0xda0be8f6
  40aa68:	pushf  
  40aa69:	add    ch,BYTE PTR [ecx+0x29]
  40aa6c:	popf   
  40aa6d:	outs   dx,BYTE PTR ds:[esi]
  40aa6e:	cmp    ecx,edi
  40aa70:	sub    BYTE PTR [ebx+ebp*8],bh
  40aa73:	jbe    0x40aa75
  40aa75:	add    BYTE PTR [ebx-0x32],bl
  40aa78:	adc    DWORD PTR [esp+ebp*2-0x2543aec1],edi
  40aa7f:	in     al,0xe8
  40aa81:	fld    TBYTE PTR [edx]
  40aa83:	sti    
  40aa84:	call   0x6432c08c
  40aa89:	icebp  
  40aa8a:	dec    esi
  40aa8b:	adc    DWORD PTR [ecx-0x16ff7f9f],edx
  40aa91:	xor    al,0xdd
  40aa93:	mov    esp,0x42588bee
  40aa98:	jmp    0x317cbefe
  40aa9d:	fstp   QWORD PTR [edi+ebp*1+0x6f887e77]
  40aaa4:	add    ch,dl
  40aaa6:	in     eax,dx
  40aaa7:	jecxz  0x40ab1d
  40aaa9:	(bad)  
  40aaab:	jns    0x40ab2a
  40aaad:	std    
  40aaae:	push   esi
  40aaaf:	jmp    0xf945:0x799ee908
  40aab6:	jmp    0x40aa5b
  40aab8:	je     0x40aab2
  40aaba:	loope  0x40aab9
  40aabc:	imul   ebp,eax,0xd9feb5d9
  40aac2:	mov    edx,eax
  40aac4:	pop    esi
  40aac5:	xchg   edi,eax
  40aac6:	fnstcw WORD PTR [ecx+0x779ee1c1]
  40aacc:	cmp    al,0xd9
  40aace:	mov    WORD PTR [edx+0x0],es
  40aad1:	fs popa 
  40aad3:	jo     0x40aafb
  40aad5:	sbb    DWORD PTR [esi],0xe9fee4
  40aadb:	add    BYTE PTR [ebx-0x616cb7bb],ch
  40aae1:	dec    edi
  40aae2:	call   esp
  40aae4:	ret    0x400c
  40aae7:	jmp    0x6a48e975
  40aaec:	inc    edx
  40aaed:	clc    
  40aaee:	out    0x5,eax
  40aaf0:	ds in  al,0xfe
  40aaf3:	cmp    edx,edi
  40aaf5:	outs   dx,BYTE PTR ds:[esi]
  40aaf6:	or     BYTE PTR [edx],bh
  40aaf8:	add    cl,ch
  40aafa:	and    BYTE PTR [ebp-0x39d3a61b],0x4c
  40ab01:	test   BYTE PTR [edi+eiz*1-0x6100ad5d],0x1e
  40ab09:	ror    BYTE PTR [ebx],0x62
  40ab0c:	add    ebx,ecx
  40ab0e:	mov    dh,0x3a
  40ab10:	dec    esp
  40ab11:	dec    esp
  40ab12:	push   edi
  40ab13:	jb     0x40aabe
  40ab15:	in     al,0x75
  40ab17:	stc    
  40ab18:	daa    
  40ab19:	jmp    0xfe:0xe3a1cbe7
  40ab20:	(bad)  
  40ab22:	adc    BYTE PTR [ebx+0x40162f61],cl
  40ab28:	je     0x40ab90
  40ab2a:	inc    ebp
  40ab2b:	adc    BYTE PTR [edx+0x6a144667],bl
  40ab31:	inc    bp
  40ab33:	adc    al,0x7
  40ab35:	inc    esp
  40ab36:	adc    BYTE PTR [eax],al
  40ab38:	xchg   DWORD PTR [esi-0x8b7f9a],edi
  40ab3e:	jmp    DWORD PTR [ebp+0x0]
  40ab41:	add    ch,cl
  40ab43:	and    edx,DWORD PTR [ecx*4+0x468d2733]
  40ab4a:	cld    
  40ab4b:	dec    edi
  40ab4c:	push   eax
  40ab4d:	jmp    FWORD PTR [ecx+0x506ac02f]
  40ab53:	inc    ebp
  40ab54:	mov    DWORD PTR [ebx],eax
  40ab56:	xchg   ebx,eax
  40ab57:	push   esp
  40ab58:	adc    BYTE PTR [ebx-0xaa0b86],al
  40ab5e:	imul   ecx,DWORD PTR [eax+0x2c],0xc580046a
  40ab65:	push   ss
  40ab66:	sub    ebx,esp
  40ab68:	adc    esi,DWORD PTR [edx+ebp*8]
  40ab6b:	add    BYTE PTR ds:[ebx+0x5e5f22b8],al
  40ab72:	popa   
  40ab73:	aaa    
  40ab74:	ret    
  40ab75:	push   ebp
  40ab76:	outs   dx,DWORD PTR ds:[esi]
  40ab77:	retf   
  40ab78:	mov    DWORD PTR [ebp-0x4],eax
  40ab7b:	jg     0x40ab67
  40ab7d:	or     al,0xa7
  40ab7f:	xor    al,0x57
  40ab81:	push   0xffffffcc
  40ab83:	imul   esi,DWORD PTR [esp+edi*8+0x7f],0xb65b80c6
  40ab8b:	(bad)  
  40ab8c:	xor    bh,bh
  40ab8e:	iret   
  40ab8f:	mov    ds:0x59bd6373,eax
  40ab94:	cld    
  40ab95:	jle    0x40abf6
  40ab97:	addr16 inc esp
  40ab99:	or     BYTE PTR [ebp+0x288cfeff],bl
  40ab9f:	xchg   ecx,eax
  40aba0:	dec    ecx
  40aba1:	call   0x42d0aa
  40aba6:	add    BYTE PTR [eax],al
  40aba8:	(bad)  
  40aba9:	test   al,0x6f
  40abab:	dec    esp
  40abac:	push   ss
  40abad:	das    
  40abae:	cld    
  40abaf:	imul   edx,DWORD PTR [esi+edi*1+0x33d60870],0xeb9f5b4e
  40abba:	sub    edi,eax
  40abbc:	lock cmc 
  40abbe:	jp     0x40ac04
  40abc0:	popa   
  40abc1:	in     eax,dx
  40abc2:	mov    ebp,0x7a2d8698
  40abc7:	xlat   BYTE PTR ds:[ebx]
  40abc8:	ins    BYTE PTR es:[edi],dx
  40abc9:	inc    ebp
  40abca:	jp     0x40abbe
  40abcc:	call   0xfa96:0x9ef86f88
  40abd3:	mov    ebx,fs
  40abd5:	in     eax,dx
  40abd6:	push   edx
  40abd7:	jmp    FWORD PTR [eax+0x6514e5ef]
  40abdd:	loope  0x40ac21
  40abdf:	add    ah,al
  40abe1:	xchg   edx,eax
  40abe2:	jg     0x40aba3
  40abe4:	xchg   ecx,eax
  40abe5:	loop   0x40ac4b
  40abe7:	add    eax,0xeb038520
  40abec:	sahf   
  40abed:	bound  ecx,QWORD PTR [eax-0x4]
  40abf0:	les    ebp,FWORD PTR [esi-0x19]
  40abf3:	jle    0x40abd9
  40abf5:	xor    eax,0x215257eb
  40abfa:	dec    ecx
  40abfb:	leave  
  40abfc:	(bad)  
  40abfe:	add    cl,BYTE PTR [edi]
  40ac00:	sub    ebp,edx
  40ac02:	repz mov ch,0x6b
  40ac05:	jmp    0xeac1:0xeca5dfc1
  40ac0c:	add    BYTE PTR [eax],al
  40ac0e:	mov    dh,0xa1
  40ac10:	aas    
  40ac11:	and    al,0x99
  40ac13:	jmp    0xfeae:0x2ac8b4c
  40ac1a:	push   ss
  40ac1b:	push   ecx
  40ac1c:	sub    DWORD PTR [ecx+esi*1],eax
  40ac1f:	or     BYTE PTR [edi],bh
  40ac21:	fdivr  QWORD PTR [esi+0xa]
  40ac24:	jmp    0x2708d22c
  40ac29:	ret    0x29e
  40ac2c:	push   ss
  40ac2d:	ja     0x40ac0f
  40ac2f:	push   es
  40ac30:	sbb    ebp,esp
  40ac32:	test   eax,0x9d43d9f6
  40ac37:	lea    esp,[eax+0x7f]
  40ac3a:	jae    0x40ac93
  40ac3c:	in     eax,dx
  40ac3d:	jle    0x40acaf
  40ac3f:	push   esi
  40ac40:	loope  0x40acba
  40ac42:	cwde   
  40ac43:	ins    BYTE PTR es:[edi],dx
  40ac44:	call   0xd92214c1
  40ac49:	js     0x40aca6
  40ac4b:	inc    ecx
  40ac4c:	sub    dh,BYTE PTR [ecx]
  40ac4e:	pop    ebp
  40ac4f:	lds    ebx,FWORD PTR [ebx+0x44853678]
  40ac55:	in     al,dx
  40ac56:	pop    ds
  40ac57:	out    dx,al
  40ac58:	mov    WORD PTR [eax+0x26],ss
  40ac5b:	mov    esp,0x8299411d
  40ac60:	xchg   ecx,eax
  40ac61:	sti    
  40ac62:	popf   
  40ac63:	lea    ebp,[ecx+0x723970f7]
  40ac69:	xrelease mov DWORD PTR [edi],ecx
  40ac6c:	push   0xffffffec
  40ac6e:	jle    0x40acc8
  40ac70:	loope  0x40accb
  40ac72:	add    BYTE PTR [eax],al
  40ac74:	lahf   
  40ac75:	cmp    al,BYTE PTR [eax]
  40ac77:	in     al,0xfa
  40ac79:	loopne 0x40ac63
  40ac7b:	pop    ecx
  40ac7c:	mov    eax,ds:0xbd205c8f
  40ac81:	cmp    al,cl
  40ac83:	mov    edx,0x4de90340
  40ac88:	es leave 
  40ac8a:	sbb    BYTE PTR [edx+0x5f],bl
  40ac8d:	inc    ecx
  40ac8e:	ins    BYTE PTR es:[edi],dx
  40ac8f:	outs   dx,DWORD PTR ds:[esi]
  40ac90:	adc    DWORD PTR [edx],0x4bdbc100
  40ac96:	add    cl,ch
  40ac98:	cmp    eax,DWORD PTR [di+0x39a9]
  40ac9d:	or     dh,BYTE PTR [ebx]
  40ac9f:	test   eax,0xe9b5eb5e
  40aca4:	sahf   
  40aca5:	add    dh,BYTE PTR [ebx]
  40aca7:	mov    ds,ecx
  40aca9:	aaa    
  40acaa:	lea    ebp,ds:0xba502ebd
  40acb0:	js     0x40ac41
  40acb2:	inc    ebx
  40acb3:	int    0xa2
  40acb5:	xor    cl,BYTE PTR [ecx-0x76d5650b]
  40acbb:	fst    QWORD PTR [edx-0x752a76d2]
  40acc1:	adc    ch,al
  40acc3:	cmc    
  40acc4:	cmp    esp,eax
  40acc6:	(bad)  
  40acc7:	gs pop esi
  40acc9:	pop    DWORD PTR [ebx+0xd]
  40accc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40accd:	je     0x434b3e
  40acd3:	lea    esi,ss:[edx]
  40acd6:	lea    esp,[ebp-0x1660000]
  40acdc:	out    0x8a,eax
  40acde:	add    eax,0x5e65fee0
  40ace3:	push   esp
  40ace4:	outs   dx,BYTE PTR ds:[esi]
  40ace5:	push   ss
  40ace6:	mov    dl,0x26
  40ace8:	adc    al,0x62
  40acea:	fisub  DWORD PTR [esi]
  40acec:	sbb    al,0x11
  40acee:	mov    ecx,0xa7e8fffa
  40acf3:	inc    esi
  40acf4:	and    al,0xd1
  40acf6:	mov    ch,0xc8
  40acf8:	jge    0x40ac93
  40acfa:	jne    0x40ad3f
  40acfc:	and    al,0x1
  40acfe:	sub    DWORD PTR ds:0xd7a8bb33,0xfffffff0
  40ad05:	adc    ah,BYTE PTR [edi]
  40ad07:	push   edi
  40ad08:	inc    ecx
  40ad09:	pusha  
  40ad0a:	jne    0x40ad32
  40ad0c:	adc    BYTE PTR [eax],al
  40ad0e:	lahf   
  40ad0f:	int3   
  40ad10:	je     0x40ad2e
  40ad12:	dec    edi
  40ad13:	bound  esp,QWORD PTR [esp+edx*1]
  40ad16:	aas    
  40ad17:	mov    dh,0xfd
  40ad19:	jae    0x40acdb
  40ad1b:	jmp    0x40ace3
  40ad1d:	les    eax,FWORD PTR ss:[ebx]
  40ad20:	test   al,al
  40ad22:	nop
  40ad23:	or     bh,bh
  40ad25:	inc    esp
  40ad26:	rcl    bl,1
  40ad28:	add    edi,0xea753159
  40ad2e:	sbb    edi,DWORD PTR [edx]
  40ad30:	and    al,0x14
  40ad32:	sub    al,0xdd
  40ad34:	add    eax,0x42727400
  40ad39:	and    al,0x68
  40ad3b:	jmp    0x40ada2
  40ad3d:	mov    ecx,0x3840000
  40ad42:	xor    eax,eax
  40ad44:	mov    ebp,0x7b10243a
  40ad49:	push   edi
  40ad4a:	mov    edi,0x72e450eb
  40ad4f:	and    al,0x70
  40ad51:	jmp    0x40ad4d
  40ad53:	push   es
  40ad54:	xor    al,0x3
  40ad56:	lea    eax,[eax+edx*4+0x2]
  40ad5a:	call   0x475aa9
  40ad5f:	mov    eax,DWORD PTR [ebx-0x50a4a1bd]
  40ad65:	jmp    0x902270c5
  40ad6a:	jmp    0x400:0x61f1881
  40ad71:	sbb    BYTE PTR [ebx],dh
  40ad73:	(bad)  [edx]
  40ad75:	sbb    al,0x89
  40ad77:	pop    ebp
  40ad78:	xchg   esp,eax
  40ad79:	lea    ebx,[ebx-0x1c]
  40ad7c:	jge    0x40adbf
  40ad7e:	lock mov DWORD PTR [ecx-0x46],ebx
  40ad82:	xchg   DWORD PTR [ebp+0x40],ebx
  40ad85:	mov    ds,WORD PTR [ebx-0x38]
  40ad88:	popf   
  40ad89:	bound  eax,QWORD PTR [eax-0x2c]
  40ad8c:	xchg   esi,eax
  40ad8d:	lods   al,BYTE PTR ds:[esi]
  40ad8e:	push   esi
  40ad8f:	dec    esi
  40ad90:	mov    ds:0xcaff7857,al
  40ad95:	call   0x17e0a51f
  40ad9a:	cli    
  40ad9b:	xor    BYTE PTR [ebp+0x1a8511eb],0xe9
  40ada2:	add    al,BYTE PTR [eax]
  40ada4:	add    BYTE PTR [eax],al
  40ada6:	stos   BYTE PTR es:[edi],al
  40ada7:	cmc    
  40ada8:	jge    0x172b2706
  40adae:	shr    bl,1
  40adb0:	add    ch,bl
  40adb2:	pop    ss
  40adb3:	push   ecx
  40adb4:	push   eax
  40adb5:	or     BYTE PTR [esi],dl
  40adb7:	adc    ecx,DWORD PTR [eax]
  40adb9:	mov    edx,DWORD PTR [eax+ebp*2]
  40adbc:	add    al,0x0
  40adbe:	popf   
  40adbf:	push   0x5fa201db
  40adc4:	ret    
  40adc5:	xchg   eax,esp
  40adc7:	ja     0x40ad58
  40adc9:	inc    esp
  40adca:	xor    DWORD PTR [edi+ecx*4-0x7464b2ac],ebx
  40add1:	dec    esp
  40add2:	add    DWORD PTR [ebx+0x38],edx
  40add5:	mov    al,0x14
  40add7:	jg     0x40ad73
  40add9:	out    0x99,eax
  40addb:	aad    0x4
  40addd:	add    BYTE PTR [esi+0x7f],al
  40ade0:	(bad)  
  40ade1:	mov    esp,0xfee22305
  40ade6:	xor    eax,0x22fff940
  40adeb:	addr16 mov al,ds:0x14d7
  40adef:	or     eax,0xf358c6e2
  40adf4:	idiv   bh
  40adf6:	or     ch,ah
  40adf8:	(bad)  
  40adf9:	mov    ah,0x71
  40adfb:	aam    0xe0
  40adfd:	inc    BYTE PTR ds:0x9d001c3b
  40ae03:	add    dl,BYTE PTR [ebx+0x3]
  40ae06:	push   ss
  40ae07:	lds    ebp,FWORD PTR [ebx+0x4f]
  40ae0a:	add    BYTE PTR [eax],al
  40ae0c:	in     eax,dx
  40ae0d:	jmp    0xc96a:0x29d1760
  40ae14:	sbb    ebp,0xe351ec33
  40ae1a:	push   eax
  40ae1b:	mov    WORD PTR [ecx+0x218ee902],ds
  40ae21:	stos   DWORD PTR es:[edi],eax
  40ae22:	scas   eax,DWORD PTR es:[edi]
  40ae23:	loope  0x40add8
  40ae25:	xor    DWORD PTR [ecx],edi
  40ae27:	loope  0x40adba
  40ae29:	push   ss
  40ae2a:	test   DWORD PTR [ebx-0x63],0x710ac81
  40ae31:	add    al,0x5c
  40ae33:	inc    edi
  40ae34:	lea    esi,[edx]
  40ae36:	jb     0x40ae7f
  40ae38:	xchg   ebp,eax
  40ae39:	mov    DWORD PTR [eax],esp
  40ae3b:	or     BYTE PTR [ebp+0x4c],dh
  40ae3e:	sub    eax,0x77119d03
  40ae43:	sbb    ebp,eax
  40ae45:	(bad)  
  40ae46:	(bad)  
  40ae48:	shr    dl,1
  40ae4a:	repnz or DWORD PTR [ebp+0x4d575602],ebx
  40ae51:	jmp    0xeb9f:0x29d09ea
  40ae58:	inc    esi
  40ae59:	pop    es
  40ae5a:	jmp    0x40033d62
  40ae5f:	mov    ecx,0x8ae9029c
  40ae64:	test   eax,0x39576fbe
  40ae69:	jmp    0x4760:0x29d1c30
  40ae70:	add    BYTE PTR [eax],al
  40ae72:	pop    ecx
  40ae73:	or     DWORD PTR [ebx-0x543b6219],0xe45e0ae0
  40ae7d:	mov    WORD PTR [ecx-0x2a],ds
  40ae80:	inc    DWORD PTR [ecx]
  40ae82:	mov    al,ds:0x27910668
  40ae87:	inc    esi
  40ae88:	shl    BYTE PTR [eax+0x53],1
  40ae8b:	jmp    0x288e:0xbc55438
  40ae92:	mov    ds:0x93620002,eax
  40ae97:	out    dx,al
  40ae98:	push   0xffffffa2
  40ae9a:	ror    BYTE PTR [ecx+0x5617a15c],cl
  40aea0:	int3   
  40aea1:	lock push ebx
  40aea3:	mov    dl,0xe
  40aea5:	pop    edi
  40aea6:	add    BYTE PTR [eax],0x0
  40aea9:	jmp    0x7248f4c7
  40aeae:	pop    esi
  40aeaf:	push   es
  40aeb0:	call   0x429277
  40aeb5:	gs pop esi
  40aeb7:	or     eax,0x2a0e084
  40aebc:	add    BYTE PTR [edx-0x1d],dh
  40aebf:	into   
  40aec0:	add    dh,ah
  40aec2:	dec    esi
  40aec3:	mov    esi,DWORD PTR [ecx+esi*2+0x27]
  40aec7:	pop    edi
  40aec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec9:	and    dl,dl
  40aecb:	out    dx,al
  40aecc:	jne    0x40aed4
  40aece:	adc    BYTE PTR [edi-0x24],dl
  40aed1:	ret    
  40aed2:	push   edx
  40aed3:	pop    DWORD PTR [esi-0x1f]
  40aed6:	add    BYTE PTR [eax],al
  40aed8:	xchg   esp,eax
  40aed9:	xor    bh,bh
  40aedb:	fsubr  QWORD PTR [edx+0x19e93ff4]
  40aee1:	ror    BYTE PTR [ebx],0x6c
  40aee4:	pop    esi
  40aee5:	push   eax
  40aee6:	push   cs
  40aee7:	cs fcmovnu st,st(2)
  40aeea:	mov    ch,BYTE PTR [esi+eax*2-0x7e0a3a7f]
  40aef1:	inc    ebp
  40aef2:	in     al,dx
  40aef3:	fcom   QWORD PTR [eax]
  40aef6:	mul    BYTE PTR [edx+0x5b]
  40aef9:	out    dx,al
  40aefa:	cmp    BYTE PTR [eax],al
  40aefc:	cmp    DWORD PTR [eax+0xb6850d],edi
  40af02:	add    BYTE PTR [eax],al
  40af04:	xor    DWORD PTR [edx-0x1],ebx
  40af07:	inc    DWORD PTR [ebx+esi*8]
  40af0a:	or     dl,0xf5
  40af0d:	(bad)  
  40af0e:	dec    DWORD PTR [edi+ebp*4+0x10758bda]
  40af15:	out    dx,eax
  40af16:	add    BYTE PTR [esp+eax*8],0xff
  40af1a:	add    eax,0xffffff88
  40af1d:	fsubr  QWORD PTR [eax+0x14]
  40af20:	xor    DWORD PTR [ebx+0x8],eax
  40af23:	push   eax
  40af24:	aas    
  40af25:	dec    ecx
  40af26:	fadd   QWORD PTR [ebx]
  40af28:	pop    es
  40af29:	pop    ss
  40af2a:	call   DWORD PTR ds:0x3ed5c4
  40af30:	aaa    
  40af31:	retf   0xff0a
  40af34:	leave  
  40af35:	rol    BYTE PTR [ecx+0x5b8e88c3],cl
  40af3b:	fadd   DWORD PTR [eax]
  40af3d:	add    BYTE PTR [ecx],dl
  40af3f:	sbb    al,0x8
  40af41:	push   ebx
  40af42:	icebp  
  40af43:	cmp    eax,esp
  40af45:	mov    DWORD PTR [ecx+0x2a74e6ae],edx
  40af4b:	(bad)  
  40af4c:	inc    DWORD PTR [esp+esi*4+0x756e890b]
  40af53:	(bad)  
  40af54:	call   DWORD PTR [edx-0x24]
  40af57:	and    edi,DWORD PTR [eax]
  40af59:	add    BYTE PTR [ebx+eax*4-0x42],al
  40af5d:	ud1    esp,DWORD PTR [esi+0x1]
  40af61:	add    BYTE PTR [eax+ecx*4],dh
  40af64:	lds    ecx,FWORD PTR [ebx+0x32e1ee82]
  40af6a:	inc    esp
  40af6b:	inc    DWORD PTR [ebx+0x4d8a33c0]
  40af71:	add    DWORD PTR [edi+edi*8],esi
  40af74:	or     BYTE PTR [ebp-0x63],0x29
  40af78:	fild   WORD PTR [edx+0x7c120590]
  40af7e:	mov    al,0x4
  40af80:	pop    ecx
  40af81:	mov    esp,0xdeec2816
  40af86:	mov    al,0xe9
  40af88:	add    cl,BYTE PTR [ecx-0x4076d6a8]
  40af8e:	call   0x89e9:0x9d011351
  40af95:	inc    esp
  40af96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af97:	pusha  
  40af98:	inc    ebx
  40af99:	add    al,0x26
  40af9b:	jns    0x40af1f
  40af9d:	add    BYTE PTR [ebp+0x4cdde9],bl
  40afa3:	add    ch,ch
  40afa5:	cs clc 
  40afa7:	mov    WORD PTR [eax+0x61],fs
  40afaa:	xor    dl,BYTE PTR [eax-0x4e]
  40afad:	mov    ch,0x12
  40afaf:	push   ss
  40afb0:	pop    ebp
  40afb1:	jmp    0xefd27337
  40afb6:	add    al,0x6a
  40afb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afb9:	pop    esi
  40afba:	dec    eax
  40afbb:	pushf  
  40afbc:	in     eax,dx
  40afbd:	and    DWORD PTR [esi+0x68eb9cac],0x1
  40afc4:	div    DWORD PTR [edi-0x3dabb71]
  40afca:	imul   eax,DWORD PTR [eax],0x268ec07
  40afd0:	push   ss
  40afd1:	sub    ebx,ebp
  40afd3:	add    eax,edi
  40afd5:	in     eax,dx
  40afd6:	add    cl,BYTE PTR [ebx+0xeba6775]
  40afdc:	sbb    DWORD PTR [edi],edi
  40afde:	add    eax,DWORD PTR [eax]
  40afe0:	popf   
  40afe1:	mov    bl,0x7a
  40afe3:	cmp    DWORD PTR [ebp+0x4535ddeb],ebx
  40afe9:	into   
  40afea:	inc    edx
  40afeb:	add    DWORD PTR [ebp+0x1ef84862],ebx
  40aff1:	add    esp,DWORD PTR [ecx]
  40aff3:	add    al,0xa0
  40aff5:	push   es
  40aff6:	jb     0x40afca
  40aff8:	add    cl,BYTE PTR [ebp+edx*1-0x22]
  40affc:	adc    ecx,DWORD PTR [esi+0x65f7dba3]
  40b002:	jb     0x40b04e
  40b004:	lea    ecx,[ebp+0xf3a7]
  40b00a:	and    ebx,eax
  40b00c:	jnp    0x40b015
  40b00e:	scas   al,BYTE PTR es:[edi]
  40b00f:	rol    BYTE PTR [ecx],1
  40b011:	add    bl,BYTE PTR [eax]
  40b013:	push   ebx
  40b014:	adc    eax,0xeb230eec
  40b019:	add    ebp,DWORD PTR [edx-0x3778576f]
  40b01f:	dec    esi
  40b020:	or     eax,0x9b15786a
  40b025:	cmp    ecx,edx
  40b027:	shl    DWORD PTR [ebx-0x4e],cl
  40b02a:	xor    DWORD PTR [ebx],edx
  40b02c:	out    0x94,al
  40b02e:	repnz adc eax,0xca6666a0
  40b034:	sbb    DWORD PTR ds:0x476fd916,esp
  40b03a:	xchg   ebp,eax
  40b03b:	xchg   DWORD PTR [ebx+0x18],ebx
  40b03e:	xchg   edx,eax
  40b03f:	(bad)  [ebp-0x16ee1414]
  40b045:	add    esi,edi
  40b047:	add    esi,DWORD PTR [edx-0x3a]
  40b04a:	sub    DWORD PTR [edi-0x53],eax
  40b04d:	in     al,dx
  40b04e:	enter  0xe915,0x3
  40b052:	push   ds
  40b053:	rcl    DWORD PTR [ebx],0xdd
  40b056:	rcr    edx,1
  40b058:	shl    edx,cl
  40b05a:	daa    
  40b05b:	push   edi
  40b05c:	lea    ecx,[ecx-0x26bb15b1]
  40b062:	dec    ebx
  40b063:	fyl2xp1 
  40b065:	ret    
  40b066:	adc    BYTE PTR ds:0xc0764637,0xff
  40b06d:	mov    ah,0x0
  40b06f:	add    BYTE PTR [ebp-0x73],dh
  40b072:	inc    esp
  40b073:	loope  0x40b08a
  40b075:	inc    ecx
  40b076:	add    al,0x72
  40b078:	push   ss
  40b079:	pop    ecx
  40b07a:	add    ecx,ebp
  40b07c:	sahf   
  40b07d:	xor    BYTE PTR [edi+0x62],dl
  40b080:	fneni(8087 only) 
  40b082:	dec    ebx
  40b083:	mov    edx,0xb48b029c
  40b088:	fimul  WORD PTR [ebx+0x59e664c6]
  40b08e:	or     ebx,DWORD PTR [edi+0x1e04623]
  40b094:	in     al,dx
  40b095:	adc    eax,DWORD PTR [eax]
  40b097:	jmp    0x3ccdb191
  40b09c:	shl    eax,0x7e
  40b09f:	sbb    bl,BYTE PTR [ecx+0x72a98402]
  40b0a5:	and    BYTE PTR [ebx+0x44c0ad3c],cl
  40b0ab:	mov    esi,0x3df57f9f
  40b0b0:	(bad)  
  40b0b1:	fnstenv [ecx+eax*4-0x4a]
  40b0b5:	icebp  
  40b0b6:	xor    al,0xe9
  40b0b8:	sahf   
  40b0b9:	jg     0x40b07a
  40b0bb:	and    BYTE PTR [eax-0x7976b37b],ch
  40b0c1:	xchg   edx,eax
  40b0c2:	das    
  40b0c3:	jmp    0xf5a53466
  40b0c8:	sahf   
  40b0c9:	xlat   BYTE PTR ds:[ebx]
  40b0ca:	inc    esp
  40b0cb:	xchg   ebp,eax
  40b0cc:	and    eax,0x48bad837
  40b0d1:	fld    DWORD PTR [ecx+eax*4+0x0]
  40b0d5:	add    BYTE PTR ds:0xdb6ae83f,dl
  40b0db:	(bad)  
  40b0dc:	aaa    
  40b0dd:	and    ah,dl
  40b0df:	into   
  40b0e0:	push   cs
  40b0e1:	gs xlat BYTE PTR gs:[ebx]
  40b0e4:	dec    BYTE PTR [esi+0x69]
  40b0e7:	dec    edi
  40b0e8:	lock add ah,ch
  40b0eb:	cmp    BYTE PTR [ebx],al
  40b0ed:	add    BYTE PTR [ebx+ecx*4+0x53],al
  40b0f1:	mov    esp,0x8bc840bf
  40b0f6:	or     eax,eax
  40b0f8:	xchg   DWORD PTR [ebp-0x40],edx
  40b0fb:	mov    BYTE PTR [ebx-0x4c],dl
  40b0fe:	push   esi
  40b0ff:	ins    BYTE PTR es:[edi],dx
  40b100:	mov    eax,0x6a0444cd
  40b105:	cmp    BYTE PTR [ebp+edx*1-0x77],al
  40b109:	dec    ebp
  40b10a:	add    al,0x8a
  40b10c:	inc    ebx
  40b10d:	hlt    
  40b10e:	ins    DWORD PTR es:[edi],dx
  40b10f:	xor    ah,al
  40b111:	mov    DWORD PTR [ecx-0x35],esi
  40b114:	les    eax,FWORD PTR [ebp-0x54]
  40b117:	add    al,0xe8
  40b119:	cmc    
  40b11a:	pop    eax
  40b11b:	add    BYTE PTR [eax],al
  40b11d:	add    DWORD PTR [eax],0xffffffd3
  40b120:	jle    0x40b19f
  40b122:	jmp    0x40b121
  40b124:	push   cs
  40b125:	test   BYTE PTR [edi-0x24000247],cl
  40b12b:	xor    esp,ebx
  40b12d:	call   0x40b0d0
  40b132:	xchg   edx,eax
  40b133:	out    0x32,al
  40b135:	add    esi,DWORD PTR [ebx+eax*1+0x75ff]
  40b13c:	add    al,0xe7
  40b13e:	sub    al,BYTE PTR [ebx]
  40b140:	test   BYTE PTR [ebx],al
  40b142:	push   DWORD PTR [ebp+0x24]
  40b145:	out    0x22,al
  40b147:	add    esi,DWORD PTR [ebx+eax*1+0x39]
  40b14b:	jne    0x40b16d
  40b14d:	or     ebx,DWORD PTR [edi+0x5b1c9bc0]
  40b153:	leave  
  40b154:	inc    esi
  40b155:	push   es
  40b156:	add    BYTE PTR [ebp-0x1],dl
  40b159:	jmp    0x18ea:0x7ffce481
  40b160:	pop    ss
  40b161:	adc    dl,BYTE PTR [esi+0x57]
  40b164:	popf   
  40b165:	fs (bad) 
  40b168:	mov    al,0xb5
  40b16a:	cmc    
  40b16b:	aas    
  40b16c:	popf   
  40b16d:	push   edx
  40b16e:	inc    eax
  40b16f:	and    al,0x99
  40b171:	push   esp
  40b172:	inc    ebx
  40b173:	add    al,0xf6
  40b175:	cmp    BYTE PTR ds:0xc5ec9d00,al
  40b17b:	dec    edi
  40b17c:	and    dl,dh
  40b17e:	out    0x11,al
  40b180:	pop    ebp
  40b181:	jmp    0xea034670
  40b186:	add    cl,BYTE PTR [ebx+0x3ae7bc0d]
  40b18c:	or     BYTE PTR [esi+0x34],dl
  40b18f:	push   ebp
  40b190:	push   edx
  40b191:	pushf  
  40b192:	ret    0xe7
  40b195:	aam    0xd9
  40b197:	(bad)  
  40b198:	and    DWORD PTR [ecx],ebp
  40b19a:	push   ecx
  40b19b:	daa    
  40b19c:	dec    eax
  40b19d:	cld    
  40b19e:	ret    
  40b19f:	push   esi
  40b1a0:	add    BYTE PTR [eax],al
  40b1a2:	pop    ebp
  40b1a3:	mov    cl,0xb9
  40b1a5:	cli    
  40b1a6:	shr    BYTE PTR [edi-0x2daf4082],cl
  40b1ac:	lea    eax,[esi-0x67]
  40b1af:	push   esp
  40b1b0:	or     DWORD PTR [ebx+0x6802e99c],0xffffffdd
  40b1b7:	pop    es
  40b1b8:	or     eax,0xefa84d00
  40b1bd:	jle    0x5dc5b5ec
  40b1c3:	lock lock (bad) 
  40b1c6:	test   al,0xdf
  40b1c8:	cmc    
  40b1c9:	aas    
  40b1ca:	popf   
  40b1cb:	bound  edi,QWORD PTR [edi]
  40b1cd:	and    al,0xa1
  40b1cf:	jae    0x40b21d
  40b1d1:	das    
  40b1d2:	popf   
  40b1d3:	jmp    0x40b162
  40b1d5:	out    dx,eax
  40b1d6:	mov    dh,0x56
  40b1d8:	dec    edi
  40b1d9:	mov    bh,0xa6
  40b1db:	dec    esi
  40b1dc:	or     al,BYTE PTR [eax+eax*1-0x62fc17fd]
  40b1e3:	mov    DWORD PTR [esi],esp
  40b1e5:	jmp    0x40b1fa
  40b1e7:	adc    ebp,ecx
  40b1e9:	add    ebx,DWORD PTR [eax]
  40b1eb:	aas    
  40b1ec:	add    eax,0xacbced20
  40b1f1:	pop    ds
  40b1f2:	xchg   esi,eax
  40b1f3:	add    dh,BYTE PTR [eax+0x67]
  40b1f6:	jns    0x40b216
  40b1f8:	inc    ecx
  40b1f9:	out    0xfa,al
  40b1fb:	add    ch,cl
  40b1fd:	push   ds
  40b1fe:	pop    eax
  40b1ff:	dec    edi
  40b200:	sti    
  40b201:	xor    eax,DWORD PTR ds:0x3eb6a
  40b207:	add    BYTE PTR [ebp-0x3ee06b7f],bl
  40b20d:	(bad)  
  40b20e:	fnsave [ebp+0x42]
  40b211:	jg     0x40b23b
  40b213:	dec    edi
  40b214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b215:	mov    ebp,0x3bd1fa4
  40b21a:	jmp    0x7f5c4f22
  40b21f:	call   DWORD PTR [ebx-0x62fb687c]
  40b225:	add    dh,BYTE PTR [eax+0x68]
  40b228:	jns    0x40b224
  40b22a:	popa   
  40b22b:	inc    ecx
  40b22c:	mov    eax,ds:0x9c43a5ea
  40b231:	add    ch,BYTE PTR [ebp-0x3c]
  40b234:	stos   DWORD PTR es:[edi],eax
  40b235:	jle    0x40b292
  40b237:	add    al,0x9d
  40b239:	add    ah,BYTE PTR [edx-0x6]
  40b23c:	lahf   
  40b23d:	ss add eax,0xf14211fc
  40b243:	xor    eax,DWORD PTR [ebp-0x62fc2bb9]
  40b249:	jle    0x40b1f3
  40b24b:	dec    edi
  40b24c:	add    cl,BYTE PTR [ebx-0x7d54dfdc]
  40b252:	add    al,0x20
  40b254:	xchg   ebx,eax
  40b255:	add    dh,bh
  40b257:	cli    
  40b258:	daa    
  40b259:	cmp    eax,0x5519ed00
  40b25e:	mov    eax,gs
  40b260:	sahf   
  40b261:	add    ch,BYTE PTR [eax+0x71]
  40b264:	push   eax
  40b265:	aad    0xfe
  40b267:	mov    ecx,0xfa0fee75
  40b26c:	add    BYTE PTR [eax],al
  40b26e:	fiadd  WORD PTR [edx]
  40b270:	test   DWORD PTR [ecx],ebp
  40b272:	in     eax,dx
  40b273:	push   ss
  40b274:	mov    ebp,DWORD PTR [esi+0x6987883a]
  40b27a:	sahf   
  40b27b:	add    al,BYTE PTR [eax]
  40b27d:	(bad)  
  40b27e:	fstp   QWORD PTR [esi]
  40b280:	and    bl,al
  40b282:	lahf   
  40b283:	xor    eax,ebp
  40b285:	mov    esi,0x640000cf
  40b28a:	fstp   DWORD PTR [ecx+0x16]
  40b28d:	add    DWORD PTR [ebx-0x7d16fdeb],edx
  40b293:	xchg   ebp,eax
  40b294:	jae    0x40b279
  40b296:	aam    0x40
  40b298:	and    al,0xd7
  40b29a:	push   ds
  40b29b:	pop    ecx
  40b29c:	and    al,0xdf
  40b29e:	jmp    0x40b2f2
  40b2a0:	mov    bl,0x2
  40b2a2:	call   0x8902:0xa104f7ea
  40b2a9:	sub    bl,BYTE PTR [ebp-0x33f2bc44]
  40b2af:	add    DWORD PTR [eax+0x4ec7d4d],eax
  40b2b5:	cmp    al,0xad
  40b2b7:	xchg   esp,eax
  40b2b9:	jb     0x40b29f
  40b2bb:	fadd   QWORD PTR [ebp+0x4d029efb]
  40b2c1:	push   0x3a
  40b2c3:	push   ds
  40b2c4:	sbb    cl,ah
  40b2c6:	pop    esp
  40b2c7:	inc    eax
  40b2c8:	and    al,0xf6
  40b2ca:	lahf   
  40b2cb:	jg     0x40b310
  40b2cd:	int    0x86
  40b2cf:	or     al,0x45
  40b2d1:	rol    BYTE PTR [eax],cl
  40b2d3:	add    ah,dh
  40b2d5:	dec    BYTE PTR [esi]
  40b2d7:	add    al,dh
  40b2d9:	push   cs
  40b2da:	(bad)  
  40b2db:	push   ebx
  40b2dd:	xchg   BYTE PTR [ebp+0x4],bl
  40b2e0:	sahf   
  40b2e1:	cld    
  40b2e2:	push   ebp
  40b2e3:	call   0x41ae25
  40b2e8:	enter  0x72bf,0x5
  40b2ec:	jp     0x40b301
  40b2ee:	and    al,0x17
  40b2f0:	xor    eax,0xf038daef
  40b2f5:	repz push ss
  40b2f7:	je     0x40b344
  40b2f9:	xchg   esp,ecx
  40b2fb:	call   0x40dcac
  40b300:	mov    edi,0x6c830441
  40b305:	in     eax,dx
  40b306:	jl     0x40b343
  40b308:	xchg   DWORD PTR [edi-0x44bb82e9],esi
  40b30e:	adc    ecx,DWORD PTR [edi+eax*1]
  40b311:	inc    eax
  40b312:	add    BYTE PTR [ebx],ch
  40b314:	cmp    ah,dh
  40b316:	sbb    edi,DWORD PTR ds:0xa2c684
  40b31c:	push   0x2a
  40b31e:	push   esi
  40b31f:	push   edi
  40b320:	push   ds
  40b321:	call   DWORD PTR [edi-0x18]
  40b324:	sbb    al,0xb6
  40b326:	std    
  40b327:	dec    DWORD PTR [eax-0x42]
  40b32a:	jae    0x40b343
  40b32c:	xchg   edi,eax
  40b32d:	and    esi,DWORD PTR [ebx]
  40b32f:	rcr    ah,0x17
  40b332:	cli    
  40b333:	call   ebx
  40b335:	cmp    BYTE PTR [esi-0x51ffff8b],0x10
  40b33c:	push   edi
  40b33d:	push   0xffffffc6
  40b33f:	pop    ss
  40b340:	call   0xfdeca192
  40b345:	dec    ecx
  40b347:	sti    
  40b348:	adc    al,BYTE PTR [eax-0x7c]
  40b34b:	xchg   BYTE PTR [edx+0x24],al
  40b34e:	nop
  40b34f:	lods   al,BYTE PTR ds:[esi]
  40b350:	xor    al,0xe8
  40b352:	popf   
  40b353:	ret    
  40b354:	add    eax,DWORD PTR [eax]
  40b356:	popf   
  40b357:	or     ebp,esp
  40b359:	pop    ds
  40b35a:	pushf  
  40b35b:	jmp    0xde1b3e62
  40b360:	dec    DWORD PTR [edi+0x5002e99c]
  40b366:	bound  ebp,QWORD PTR [esi-0x1622ee2e]
  40b36c:	mov    DWORD PTR [esi-0x67],eax
  40b36f:	push   eax
  40b370:	test   BYTE PTR [ebx+0x6802e99c],cl
  40b376:	(bad)  [ecx+edi*8-0xec31501]
  40b37d:	jle    0x5dc5b62c
  40b383:	fdivr  QWORD PTR [edi-0xb]
  40b386:	and    BYTE PTR [edi+edx*8],ah
  40b389:	jmp    0x289e:0x43f50a9
  40b390:	xor    al,0xff
  40b392:	mov    al,0xf9
  40b394:	icebp  
  40b395:	aas    
  40b396:	popf   
  40b397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b398:	xor    al,0x5d
  40b39a:	push   esi
  40b39b:	push   eax
  40b39c:	loope  0x40b3fa
  40b39e:	add    BYTE PTR [eax],al
  40b3a0:	fmulp  st(2),st
  40b3a2:	ds and al,0xa1
  40b3a5:	jmp    0x6ffe:0x1bec8b2c
  40b3ac:	sub    DWORD PTR es:[esp+esi*2],eax
  40b3b0:	fwait
  40b3b1:	or     ebp,esp
  40b3b3:	(bad)  
  40b3b4:	popf   
  40b3b5:	jmp    0x231c3ebc
  40b3ba:	ret    0x9d03
  40b3bd:	data16 int3 
  40b3bf:	je     0x40b362
  40b3c1:	xchg   esp,eax
  40b3c2:	or     al,0xe8
  40b3c4:	bnd call 0xfb5eb3cc
  40b3ca:	add    ebp,ebx
  40b3cc:	iret   
  40b3cd:	add    dh,BYTE PTR [edx-0x3]
  40b3d0:	pop    ds
  40b3d1:	(bad)  
  40b3d2:	in     al,0x34
  40b3d4:	and    bl,al
  40b3d6:	sbb    esi,esp
  40b3d8:	hlt    
  40b3d9:	cli    
  40b3da:	lea    edx,[eax]
  40b3dc:	jge    0x40b37c
  40b3de:	sub    DWORD PTR [edx+esi*2],eax
  40b3e1:	clc    
  40b3e2:	in     al,0xf2
  40b3e4:	stos   BYTE PTR es:[edi],al
  40b3e5:	add    al,BYTE PTR [edx-0x1ea332fa]
  40b3eb:	(bad)  
  40b3ec:	xchg   ecx,eax
  40b3ed:	loop   0x40b380
  40b3ef:	inc    edx
  40b3f0:	popf   
  40b3f1:	shl    ebx,1
  40b3f3:	or     ebp,DWORD PTR [esi+0x280e942]
  40b3f9:	pop    eax
  40b3fa:	jmp    0x2fd:0x6fc65d11
  40b401:	add    al,0x2a
  40b403:	add    BYTE PTR [eax],0x0
  40b406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b407:	es in  eax,dx
  40b409:	add    ebp,DWORD PTR [eax+0x50d2dfe]
  40b40f:	(bad)  
  40b410:	jmp    0xc6c65118
  40b415:	add    esi,esi
  40b417:	adc    al,0x62
  40b419:	std    
  40b41a:	add    edx,DWORD PTR [edi-0x3b]
  40b41d:	jmp    DWORD PTR [ecx]
  40b41f:	ret    
  40b420:	jnp    0x40b428
  40b422:	dec    ebp
  40b423:	shl    DWORD PTR [ebx-0x16b9c81d],1
  40b429:	(bad)  
  40b42a:	mov    DWORD PTR [esi],eax
  40b42c:	fiadd  DWORD PTR [ebx-0x63]
  40b42f:	(bad)  
  40b431:	xor    eax,DWORD PTR [edi+0x2]
  40b434:	fimul  WORD PTR [edi]
  40b436:	mov    ebp,0xc204299d
  40b43b:	mul    eax
  40b43d:	lock jp 0x40b442
  40b440:	ins    BYTE PTR es:[edi],dx
  40b441:	les    ebp,FWORD PTR [ecx]
  40b443:	push   es
  40b444:	sti    
  40b445:	ret    
  40b446:	mov    bh,0x6
  40b448:	add    BYTE PTR [eax-0x5d],ah
  40b44b:	mov    eax,ds:0x29dab00
  40b450:	sub    DWORD PTR [ecx-0xe95cd63],0x71
  40b457:	push   ss
  40b458:	loopne 0x40b49c
  40b45a:	fadd   QWORD PTR [edx]
  40b45c:	push   esp
  40b45e:	jp     0x40b454
  40b460:	aas    
  40b461:	jmp    0xc5bc38c3
  40b466:	push   0xffffffd1
  40b468:	jae    0x40b457
  40b46a:	add    BYTE PTR [eax],al
  40b46c:	(bad)  
  40b46d:	ret    0xdbea
  40b470:	jno    0x40b4c7
  40b472:	and    al,0xed
  40b474:	les    eax,FWORD PTR [edx]
  40b476:	call   DWORD PTR [ecx+eax*2]
  40b479:	pushf  
  40b47a:	inc    edx
  40b47b:	jmp    0xfa44aae9
  40b480:	fiadd  WORD PTR [edx]
  40b482:	ret    0x9eed
  40b485:	test   DWORD PTR [ebx+0x5],edi
  40b488:	popf   
  40b489:	add    dh,BYTE PTR [ebx+ebx*8+0x49]
  40b48d:	push   ebp
  40b48e:	and    al,0xe5
  40b490:	test   BYTE PTR [edx],al
  40b492:	(bad)  
  40b493:	fdiv   st(6),st
  40b495:	fwait
  40b496:	inc    edx
  40b497:	jmp    0xfa40aa8d
  40b49c:	pop    esi
  40b49d:	add    al,dl
  40b49f:	in     eax,0x9e
  40b4a1:	cmp    BYTE PTR [ebx+0x73d073f9],cl
  40b4a7:	(bad)  
  40b4a8:	imul   edx,edi,0x73
  40b4ab:	ficomp DWORD PTR [eax-0x2f]
  40b4ae:	xor    esi,DWORD PTR [esi]
  40b4b0:	leave  
  40b4b1:	sar    dh,0xe6
  40b4b4:	jmp    0xec95aa3e
  40b4b9:	aaa    
  40b4ba:	call   0xff109e6e
  40b4bf:	das    
  40b4c0:	fdiv   QWORD PTR [esi]
  40b4c2:	push   edi
  40b4c3:	add    BYTE PTR [ebp-0x2fdb8d85],dl
  40b4c9:	jns    0x40b545
  40b4cb:	and    al,0xc4
  40b4cd:	jns    0x40b519
  40b4cf:	and    al,0x0
  40b4d1:	add    BYTE PTR [ebx+esi*4-0x5e],ch
  40b4d5:	pop    ecx
  40b4d6:	fistp  DWORD PTR [eax]
  40b4d8:	ret    0x740c
  40b4db:	push   ecx
  40b4dc:	enter  0x8074,0x1e
  40b4e0:	mov    esi,DWORD PTR [eax+eiz*2-0x4]
  40b4e4:	mov    WORD PTR [esi+ebp*2],es
  40b4e7:	sbb    esi,edx
  40b4e9:	dec    eax
  40b4ea:	lods   eax,DWORD PTR ds:[esi]
  40b4eb:	jl     0x40b4ff
  40b4ed:	push   es
  40b4ee:	cld    
  40b4ef:	shl    DWORD PTR [ebx-0x9],cl
  40b4f2:	stos   BYTE PTR es:[edi],al
  40b4f3:	les    eax,FWORD PTR [edx]
  40b4f5:	add    BYTE PTR [edx],dl
  40b4f7:	mov    bh,0x72
  40b4f9:	and    al,0x38
  40b4fb:	fsub   QWORD PTR [esi-0x1]
  40b4fe:	jmp    0x40b4b6
  40b500:	mov    eax,esi
  40b502:	sar    DWORD PTR [ebp+0x3fdb1272],0x24
  40b509:	or     al,0x6b
  40b50b:	aas    
  40b50c:	and    al,0xc
  40b50e:	add    dh,BYTE PTR [edi+0x43f23013]
  40b514:	add    BYTE PTR [ebx-0x3974f840],al
  40b51a:	dec    edx
  40b51b:	ret    0x6
  40b51e:	jg     0x40b526
  40b520:	push   esi
  40b521:	mov    edx,DWORD PTR [edx+eax*1-0x4a871735]
  40b528:	std    
  40b529:	inc    DWORD PTR [eax+0x7f1972c3]
  40b52f:	std    
  40b530:	add    dh,BYTE PTR [edi]
  40b532:	aaa    
  40b533:	mov    bh,0x72
  40b535:	and    al,0x0
  40b537:	add    al,cl
  40b539:	or     edi,edi
  40b53b:	adc    eax,0x3ecca4
  40b540:	popf   
  40b541:	pop    esp
  40b542:	enter  0x9c0b,0xe0
  40b546:	jge    0x40b50d
  40b548:	(bad)  
  40b549:	fist   DWORD PTR ds:0x79b4bc0
  40b54f:	add    BYTE PTR [ebx-0x10],cl
  40b552:	push   ss
  40b553:	call   esp
  40b555:	sbb    eax,0xcf0b0c28
  40b55a:	jge    0x40b54c
  40b55c:	mov    dh,0x69
  40b55e:	jge    0x40b56b
  40b560:	fwait
  40b561:	arpl   sp,si
  40b563:	cmp    DWORD PTR [edi-0xa],esp
  40b566:	add    al,BYTE PTR [edi-0x23]
  40b569:	les    ecx,FWORD PTR [esi+0x24]
  40b56c:	cdq    
  40b56d:	retf   
  40b56e:	loope  0x40b5a2
  40b570:	pop    ebp
  40b571:	clc    
  40b572:	xor    edx,eax
  40b574:	mov    eax,ds:0x6fb601d9
  40b579:	fcomp  DWORD PTR [eax-0x20e48940]
  40b57f:	lock inc edx
  40b581:	lods   eax,DWORD PTR ds:[esi]
  40b582:	es or  bh,al
  40b585:	(bad)  
  40b587:	jae    0x40b602
  40b589:	aad    0xd1
  40b58b:	adc    al,0x71
  40b58d:	mov    bh,0x42
  40b58f:	add    BYTE PTR [esi],bl
  40b591:	sbb    eax,0xd9a5c200
  40b596:	cmp    BYTE PTR [edi-0x2c],dl
  40b599:	lds    esp,FWORD PTR [esi]
  40b59b:	or     al,0x0
  40b59d:	add    BYTE PTR [edi-0x46a3e444],cl
  40b5a3:	in     eax,0x15
  40b5a5:	jmp    DWORD PTR [esi]
  40b5a7:	jmp    0xbdaab4e2
  40b5ac:	not    BYTE PTR [ebp-0x16]
  40b5af:	mov    ch,0xe
  40b5b1:	push   ss
  40b5b2:	pop    ebp
  40b5b3:	fld    DWORD PTR [ebp-0x3b99563d]
  40b5b9:	jae    0x40b55d
  40b5bb:	add    ch,BYTE PTR [esi]
  40b5bd:	dec    edx
  40b5be:	xchg   BYTE PTR [esi+0x5],cl
  40b5c1:	add    BYTE PTR [ebx-0x1b],cl
  40b5c4:	sbb    esp,eax
  40b5c6:	pop    ebx
  40b5c7:	xor    BYTE PTR [ebx-0x51844d05],ch
  40b5cd:	fidiv  WORD PTR [ebx-0x66d7daf8]
  40b5d3:	push   ebx
  40b5d4:	ror    BYTE PTR [esi],cl
  40b5d6:	gs push esi
  40b5d8:	(bad)  
  40b5d9:	push   edi
  40b5da:	lods   al,BYTE PTR ds:[esi]
  40b5db:	sbb    DWORD PTR [eax+0x14cdec33],ebp
  40b5e1:	sub    BYTE PTR [ecx-0x6cec0433],dl
  40b5e7:	inc    edx
  40b5e8:	jmp    0x39401473
  40b5ed:	add    al,0x76
  40b5ef:	add    DWORD PTR [ebx-0x16f8a33d],edi
  40b5f5:	jle    0x40b5a0
  40b5f7:	push   es
  40b5f8:	cmp    eax,0x1a349d46
  40b5fd:	(bad)  
  40b5fe:	xrelease xchg DWORD PTR [edi],ebp
  40b601:	push   edi
  40b602:	add    BYTE PTR [eax],al
  40b604:	jge    0x40b67f
  40b606:	adc    ebx,esp
  40b608:	pop    es
  40b609:	inc    edx
  40b60a:	jmp    0xfabb018d
  40b60f:	push   cs
  40b610:	mov    cl,0x26
  40b612:	in     eax,dx
  40b613:	pop    eax
  40b614:	cwde   
  40b615:	xor    DWORD PTR [esi],0xa8f091d2
  40b61b:	test   ah,bl
  40b61d:	cli    
  40b61e:	lock add ebx,DWORD PTR [ebp-0xaaad7f7]
  40b625:	adc    DWORD PTR [ecx],ebp
  40b627:	xor    bl,BYTE PTR [ebx-0x40]
  40b62a:	in     al,0x3
  40b62c:	test   dl,al
  40b62e:	lock sti 
  40b630:	jmp    0xffd3:0xf7cae9cd
  40b637:	popa   
  40b638:	popf   
  40b639:	push   es
  40b63a:	lods   al,BYTE PTR ds:[esi]
  40b63b:	stos   BYTE PTR es:[edi],al
  40b63c:	sahf   
  40b63d:	xor    al,0x57
  40b63f:	sbb    ch,ah
  40b641:	adc    al,al
  40b643:	fs push es
  40b645:	push   edx
  40b646:	bound  esi,QWORD PTR es:[edx-0x66d5551b]
  40b64d:	jns    0x40b640
  40b64f:	push   0xffffff8f
  40b651:	int    0x73
  40b653:	in     al,dx
  40b654:	pop    esi
  40b655:	add    ebp,0xffffffe1
  40b658:	xchg   esi,eax
  40b659:	int    0xfe
  40b65b:	repnz pop edi
  40b65d:	push   ebx
  40b65e:	lock xchg edx,eax
  40b660:	popf   
  40b661:	pop    ebx
  40b662:	shl    cl,0x86
  40b665:	int    0xfe
  40b667:	jmp    0x14f7:0x78600000
  40b66e:	mov    esp,0x69b06943
  40b673:	add    eax,0xe50ce900
  40b678:	stos   BYTE PTR es:[edi],al
  40b679:	sub    ah,BYTE PTR [ecx+0x6c6c50da]
  40b67f:	int3   
  40b680:	sub    DWORD PTR [ecx],0xffffffe5
  40b683:	and    cl,BYTE PTR [ebx+0x429e951c]
  40b689:	jmp    0xe1488465
  40b68e:	sahf   
  40b68f:	add    bh,bh
  40b691:	in     al,dx
  40b692:	mov    ds:0x99e9429e,al
  40b697:	psubsb mm0,QWORD PTR [edx-0x188bfda0]
  40b69e:	xchg   ecx,eax
  40b69f:	inc    ecx
  40b6a0:	and    al,0xf5
  40b6a2:	xchg   DWORD PTR [ebx+ecx*4],eax
  40b6a5:	es int3 
  40b6a7:	sub    al,0xc2
  40b6a9:	in     eax,dx
  40b6aa:	sahf   
  40b6ab:	mov    ds:0x2583d03,eax
  40b6b0:	push   edi
  40b6b1:	add    BYTE PTR [edi-0x42],ch
  40b6b4:	add    eax,0x68
  40b6b7:	inc    eax
  40b6b8:	mov    edx,DWORD PTR ds:0x416f9c
  40b6be:	aas    
  40b6bf:	mov    fs,WORD PTR [edi-0x37]
  40b6c2:	int3   
  40b6c3:	enter  0xfffe,0x31
  40b6c7:	dec    ebp
  40b6c8:	adc    al,bh
  40b6ca:	(bad)  [ecx+0x83fd]
  40b6d0:	lea    esi,[ebx-0x57caf68d]
  40b6d6:	push   es
  40b6d7:	or     BYTE PTR [eax+eax*1-0xa98ab1],dh
  40b6de:	div    DWORD PTR [esi+ebp*2+0x4f]
  40b6e2:	into   
  40b6e3:	imul   ecx,DWORD PTR [ebp-0x38],0xa740006
  40b6ea:	mov    esi,0x46dfe8
  40b6ef:	call   0x3e7318
  40b6f4:	in     eax,dx
  40b6f5:	cld    
  40b6f6:	add    ebp,DWORD PTR [edi+esi*4+0x75f5e06]
  40b6fd:	adc    eax,0x7db7ec8b
  40b702:	jmp    0x49ff:0x52fff7ab
  40b709:	lods   al,BYTE PTR ds:[esi]
  40b70a:	adc    BYTE PTR [eax+0x44],al
  40b70d:	xchg   DWORD PTR [ebx+0x8],edi
  40b710:	jecxz  0x40b714
  40b712:	test   bh,dl
  40b714:	xor    al,0x0
  40b716:	add    BYTE PTR [ebx+0xefecbe1],al
  40b71c:	mov    BYTE PTR [esi+edi*8+0x7b8704ff],cl
  40b723:	adc    ah,dh
  40b725:	add    al,BYTE PTR [ebx+eax*8-0x100000c]
  40b72c:	popf   
  40b72d:	outs   dx,BYTE PTR ds:[esi]
  40b72e:	cli    
  40b72f:	out    0xe7,eax
  40b731:	sti    
  40b732:	iret   
  40b733:	inc    BYTE PTR [eax]
  40b735:	add    BYTE PTR [eax],ah
  40b737:	sbb    dl,BYTE PTR [esi+0x10]
  40b73a:	loop   0x40b792
  40b73c:	sti    
  40b73d:	out    0xd8,eax
  40b73f:	ror    esi,cl
  40b741:	(bad)  
  40b742:	sbb    BYTE PTR [edx],bl
  40b744:	add    BYTE PTR [edx+eax*1-0x34fffd26],al
  40b74b:	es clc 
  40b74d:	add    BYTE PTR [ebx+0xc],dl
  40b750:	pop    eax
  40b751:	push   cs
  40b752:	and    BYTE PTR [edx+0x5],dh
  40b755:	add    al,0x9d
  40b757:	fnstcw WORD PTR [edi-0x51]
  40b75a:	fwait
  40b75b:	rol    DWORD PTR [edx],1
  40b75d:	add    BYTE PTR [esi-0x6688801e],al
  40b763:	cs xchg esp,eax
  40b765:	add    esp,DWORD PTR [ecx+0x8302d9]
  40b76b:	retf   0x8b02
  40b76e:	loopne 0x40b755
  40b770:	jnp    0x40b7b6
  40b772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b773:	repz push esp
  40b775:	mov    edx,0x2d79d
  40b77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b77b:	div    bl
  40b77d:	jb     0x40b720
  40b77f:	in     al,0x95
  40b781:	push   esp
  40b782:	lods   eax,DWORD PTR ds:[esi]
  40b783:	lods   al,BYTE PTR ds:[esi]
  40b784:	xchg   ebp,eax
  40b785:	add    eax,0x2a96c9a
  40b78a:	pop    esi
  40b78b:	mov    ds:0xd99d0403,al
  40b790:	or     ecx,eax
  40b792:	stos   DWORD PTR es:[edi],eax
  40b793:	(bad)  
  40b794:	sbb    ecx,eax
  40b796:	ret    
  40b797:	repnz add eax,0xea00000f
  40b79d:	fidiv  DWORD PTR [ebx]
  40b79f:	add    esp,edx
  40b7a1:	push   0x1ec2e835
  40b7a6:	iret   
  40b7a7:	(bad)  
  40b7a8:	call   0x93cb:0x6e065e02
  40b7af:	sti    
  40b7b0:	lahf   
  40b7b1:	ret    
  40b7b2:	mov    eax,0xdcd92db
  40b7b7:	iret   
  40b7b8:	add    BYTE PTR [ecx],0xdf
  40b7bb:	ficom  DWORD PTR [edx-0x55fa2f9c]
  40b7c1:	xchg   ebx,eax
  40b7c2:	out    0x34,al
  40b7c4:	sahf   
  40b7c5:	ret    
  40b7c6:	cwde   
  40b7c7:	ss mov ch,0xf6
  40b7ca:	jecxz  0x40b79a
  40b7cc:	ret    
  40b7cd:	cli    
  40b7ce:	xchg   ebp,eax
  40b7cf:	add    eax,0xdc3e0247
  40b7d4:	and    DWORD PTR [eax-0x3ddffc18],0x2d9de53b
  40b7de:	icebp  
  40b7df:	sbb    al,0xf8
  40b7e1:	repnz cmp edi,DWORD PTR [eax+0x57]
  40b7e5:	xlat   BYTE PTR ds:[ebx]
  40b7e6:	add    DWORD PTR [edx-0x63],0x72f8a635
  40b7ed:	cmc    
  40b7ee:	sub    BYTE PTR [edx+ebx*8],al
  40b7f1:	sub    BYTE PTR [edx-0xc3631fa],al
  40b7f7:	ror    DWORD PTR [edx+eax*2-0x3b3fd517],cl
  40b7fe:	fadd   DWORD PTR [ebx]
  40b800:	add    BYTE PTR [eax],al
  40b802:	bnd ja 0x40b7fb
  40b805:	pop    es
  40b806:	inc    esi
  40b807:	jmp    0x40b80f
  40b809:	sbb    eax,0x3ecff23
  40b80e:	popf   
  40b80f:	stc    
  40b810:	xchg   ebp,eax
  40b811:	jge    0x40b7b1
  40b813:	(bad)  
  40b814:	call   0x2646841c
  40b819:	xor    edx,edx
  40b81b:	fiadd  DWORD PTR [edx-0x1235dc31]
  40b821:	xchg   esi,eax
  40b822:	and    bh,bh
  40b824:	(bad)  
  40b825:	in     al,dx
  40b826:	sahf   
  40b827:	add    ch,BYTE PTR [edx-0x18]
  40b82a:	rcr    edx,cl
  40b82c:	xlat   BYTE PTR ds:[ebx]
  40b82d:	dec    eax
  40b82e:	sahf   
  40b82f:	add    al,BYTE PTR [ebp+0x5eaf5529]
  40b835:	sub    ch,BYTE PTR [ebx+0x5f42eb89]
  40b83b:	add    dl,BYTE PTR [edi+0x6]
  40b83e:	in     eax,0xdd
  40b840:	adc    DWORD PTR [ecx-0x32847a62],ebp
  40b846:	(bad)  
  40b847:	enter  0xd773,0xdb
  40b84b:	push   ebp
  40b84c:	and    al,0xf1
  40b84e:	out    0x94,al
  40b850:	cld    
  40b851:	fsubp  st(0),st
  40b853:	jle    0x40b814
  40b855:	pop    ebp
  40b856:	mov    dh,0x2f
  40b858:	mov    ebx,ecx
  40b85a:	leave  
  40b85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b85c:	inc    dh
  40b85e:	shl    BYTE PTR [edi],1
  40b860:	push   edi
  40b861:	mov    esi,0x2911d992
  40b866:	add    BYTE PTR [eax],al
  40b868:	cdq    
  40b869:	sub    edx,eax
  40b86b:	in     eax,0x9e
  40b86d:	(bad)  
  40b86f:	repz sahf 
  40b871:	add    al,BYTE PTR [ecx+ebp*4+0x3e5645d5]
  40b878:	and    ch,bl
  40b87a:	stos   BYTE PTR es:[edi],al
  40b87b:	sub    ah,BYTE PTR [ecx+0x42dcff31]
  40b881:	repz aas 
  40b883:	jmp    0xe5650df1
  40b888:	jbe    0x40b8d6
  40b88a:	std    
  40b88b:	outs   dx,BYTE PTR ds:[esi]
  40b88c:	pop    eax
  40b88d:	jl     0x40b87e
  40b88f:	ins    BYTE PTR es:[edi],dx
  40b890:	imul   edx,DWORD PTR [ebp+0x1d],0x51
  40b894:	fcmove st,st(1)
  40b896:	(bad)  
  40b897:	push   esi
  40b898:	sbb    al,0xf7
  40b89a:	(bad)  
  40b89b:	sbb    ah,BYTE PTR [ecx+0x5f]
  40b89e:	mov    DWORD PTR [eax],eax
  40b8a0:	mov    dl,0xfa
  40b8a2:	add    eax,DWORD PTR [eax]
  40b8a4:	add    al,0x5f
  40b8a6:	mov    DWORD PTR [esi-0x132fe],eax
  40b8ac:	pop    esp
  40b8ad:	int    0xfc
  40b8af:	(bad)  
  40b8b0:	mov    ebx,0x9415ff0f
  40b8b5:	aam    0x3e
  40b8b7:	add    BYTE PTR [ebx],ch
  40b8b9:	pop    ss
  40b8ba:	jmp    DWORD PTR ds:0x3ecef8
  40b8c0:	add    DWORD PTR [edx-0x15],ecx
  40b8c3:	push   esi
  40b8c4:	fld    TBYTE PTR [edi]
  40b8c6:	adc    al,0xff
  40b8c8:	push   ecx
  40b8c9:	aad    0xfd
  40b8cb:	jne    0x40b8cd
  40b8cd:	add    al,ch
  40b8cf:	mov    ch,0x73
  40b8d1:	or     BYTE PTR [ebx-0x7be9e131],bh
  40b8d7:	dec    BYTE PTR [edx+0x7caf41f0]
  40b8dd:	pop    ss
  40b8de:	fdivr  QWORD PTR [ebx]
  40b8e0:	or     al,BYTE PTR [eax]
  40b8e2:	mov    ah,0x80
  40b8e4:	mov    esi,0x12a8a74
  40b8e9:	push   esi
  40b8ea:	dec    ebx
  40b8eb:	xor    DWORD PTR [edi+edi*8],ecx
  40b8ee:	rol    esi,1
  40b8f0:	out    0x16,al
  40b8f2:	cmp    dh,BYTE PTR [edi+0x16428bfd]
  40b8f8:	pop    ebp
  40b8f9:	ret    0x474
  40b8fc:	push   ebp
  40b8fd:	mov    ebp,eax
  40b8ff:	or     eax,0xf40758b
  40b904:	push   DWORD PTR [ebp+0x64]
  40b907:	dec    ebx
  40b908:	jl     0x40b916
  40b90a:	retf   
  40b90b:	xor    BYTE PTR [edi+edi*8],bl
  40b90e:	push   ecx
  40b90f:	fcom   QWORD PTR [edi+edi*8+0x61]
  40b913:	aam    0x55
  40b915:	call   DWORD PTR [ecx-0x34]
  40b918:	std    
  40b919:	adc    eax,0x3ff4c99d
  40b91e:	popf   
  40b91f:	bound  eax,QWORD PTR [esi+0x1c]
  40b922:	sbb    BYTE PTR [edx],bl
  40b924:	push   esi
  40b925:	inc    eax
  40b926:	and    BYTE PTR [eax],dl
  40b928:	push   edi
  40b929:	cmp    al,0x5
  40b92b:	add    dl,bh
  40b92d:	dec    DWORD PTR [edx]
  40b92f:	pop    esi
  40b930:	ret    
  40b931:	jae    0x40b933
  40b933:	add    dh,cl
  40b935:	push   esp
  40b936:	adc    eax,0x8644ae53
  40b93b:	cmc    
  40b93c:	imul   eax,edx,0x6c8d5d07
  40b942:	mov    ebx,DWORD PTR es:[ecx+0x7d447a20]
  40b949:	(bad)  
  40b94a:	les    esi,FWORD PTR [ecx-0x62]
  40b94d:	bound  edx,QWORD PTR [esi+0x20]
  40b950:	aaa    
  40b951:	fcmove st,st(3)
  40b953:	je     0x40b9d2
  40b955:	loopne 0x40b9a6
  40b957:	fbld   TBYTE PTR [ecx-0x3af7af58]
  40b95d:	jle    0x40b927
  40b95f:	(bad)  
  40b960:	stos   BYTE PTR es:[edi],al
  40b961:	sbb    al,0x1f
  40b963:	jne    0x40b9e2
  40b965:	push   es
  40b966:	mov    bl,0x5a
  40b968:	es push ds
  40b96a:	call   0xc62faccd
  40b96f:	sbb    ebx,DWORD PTR [ebp-0x14148112]
  40b975:	mov    al,ds:0xee7a1450
  40b97a:	repz (bad) 
  40b97c:	call   0x95b5835e
  40b981:	js     0x40b973
  40b983:	pop    ss
  40b984:	mov    ebx,DWORD PTR [ecx]
  40b986:	add    al,0x8b
  40b988:	dec    ebp
  40b989:	pop    esi
  40b98a:	shl    BYTE PTR [edi+0x78],cl
  40b98d:	cmp    DWORD PTR [eax+0x7ed99d08],0x502c9bf
  40b997:	add    DWORD PTR [eax],0xf34d3000
  40b99d:	retf   0xfaa9
  40b9a0:	inc    eax
  40b9a1:	push   0xdf4dc728
  40b9a6:	nop
  40b9a7:	pop    esp
  40b9a8:	jmp    0xed8dd3de
  40b9ad:	retf   0xfa89
  40b9b0:	inc    eax
  40b9b1:	sub    BYTE PTR [eax],cl
  40b9b3:	(bad)  
  40b9b4:	sub    eax,0xc427d87f
  40b9b9:	lds    ebp,FWORD PTR [edx+0x67eb402]
  40b9bf:	xor    edi,DWORD PTR [edi-0x4a118e82]
  40b9c5:	retf   0x2269
  40b9c8:	jb     0x40ba13
  40b9ca:	test   eax,0xd3e773c7
  40b9cf:	dec    esp
  40b9d0:	shl    DWORD PTR [ecx],1
  40b9d2:	retf   0xd94c
  40b9d5:	xor    al,dl
  40b9d7:	dec    esp
  40b9d8:	icebp  
  40b9d9:	retf   0xf691
  40b9dc:	test   BYTE PTR [ebx-0x63],0x79
  40b9e0:	sub    ebp,eax
  40b9e2:	and    edx,eax
  40b9e4:	push   ebx
  40b9e5:	inc    esp
  40b9e6:	sbb    al,dl
  40b9e8:	cmp    al,0x2b
  40b9ea:	test   DWORD PTR [edx-0x10],edx
  40b9ed:	add    ebx,DWORD PTR [ebp-0xcb05782]
  40b9f3:	jns    0x40b9eb
  40b9f5:	push   ss
  40b9f6:	data16 sbb BYTE PTR [esi+0x3c09eb4f],0xf4
  40b9fe:	add    BYTE PTR [eax],al
  40ba00:	out    dx,eax
  40ba01:	cmp    esp,DWORD PTR [edx-0x1]
  40ba04:	dec    ebx
  40ba05:	jl     0x40ba2a
  40ba07:	and    al,0xa6
  40ba09:	mov    esp,0x502406fa
  40ba0e:	leave  
  40ba0f:	pop    ebp
  40ba10:	popf   
  40ba11:	(bad)  
  40ba14:	jle    0x40b9db
  40ba16:	jae    0x40b9a6
  40ba18:	inc    edx
  40ba19:	lds    esi,FWORD PTR [ecx+esi*8+0x56]
  40ba1d:	sar    ebx,1
  40ba1f:	pop    esi
  40ba20:	addr16 inc ecx
  40ba22:	sub    ebx,esp
  40ba24:	jle    0x40ba75
  40ba26:	xlat   BYTE PTR ds:[ebx]
  40ba27:	inc    edx
  40ba28:	jnp    0x40b9ab
  40ba2a:	test   DWORD PTR [esi+0x6d],0x2d4fee4
  40ba31:	lock aas 
  40ba33:	jmp    0xe96809cd
  40ba38:	sahf   
  40ba39:	dec    edi
  40ba3a:	adc    DWORD PTR [ecx],edx
  40ba3c:	mov    ebp,0x72e8fffb
  40ba41:	test   DWORD PTR [ebx-0x1f],esi
  40ba44:	xlat   BYTE PTR ds:[ebx]
  40ba45:	dec    esi
  40ba46:	or     BYTE PTR [ecx],al
  40ba48:	(bad)  
  40ba49:	(bad)  
  40ba4a:	inc    BYTE PTR [esi]
  40ba4c:	pop    ebx
  40ba4d:	ds sbb al,0x9e
  40ba50:	test   BYTE PTR [ecx],ch
  40ba52:	pop    ebp
  40ba53:	sub    eax,edx
  40ba55:	lds    ecx,FWORD PTR [ecx+0x56319aa6]
  40ba5b:	jb     0x40baaa
  40ba5d:	or     bh,BYTE PTR [eax-0x16]
  40ba60:	int    0x10
  40ba62:	fist   DWORD PTR [eax]
  40ba64:	add    BYTE PTR [eax],al
  40ba66:	ja     0x40ba52
  40ba68:	jne    0x40ba6f
  40ba6a:	sub    al,BYTE PTR [ecx]
  40ba6c:	lahf   
  40ba6d:	jmp    0xfe11:0xd77422dc
  40ba74:	imul   esi,DWORD PTR [esi-0x26dbaeac],0xb182b599
  40ba7e:	fstp   QWORD PTR fs:[eax-0x23]
  40ba82:	sahf   
  40ba83:	add    al,BYTE PTR [ebp+0x42f7cda9]
  40ba89:	shl    BYTE PTR [edx+ebp*8-0x10ffff8f],cl
  40ba90:	mov    edi,0x2bc7f5e
  40ba95:	add    BYTE PTR [edi-0x5d74dbc0],bh
  40ba9b:	fimul  DWORD PTR [ebx-0x4a35a3fc]
  40baa1:	add    al,0x7c
  40baa3:	dec    ebp
  40baa4:	add    eax,DWORD PTR [ecx+0x33802bf]
  40baaa:	jnp    0x40ba53
  40baac:	loop   0x40bb03
  40baae:	(bad)
  40bab2:	or     BYTE PTR [ebp+0x41],ch
  40bab5:	add    BYTE PTR [edi],ah
  40bab7:	adc    ecx,DWORD PTR [ebx+0x3ecc1835]
  40babd:	add    BYTE PTR [ebx],bh
  40babf:	daa    
  40bac0:	add    dh,BYTE PTR [ebx]
  40bac2:	xchg   ebx,eax
  40bac3:	adc    edx,DWORD PTR [edi-0x75]
  40bac6:	lods   al,BYTE PTR ds:[esi]
  40bac7:	dec    ebp
  40bac8:	inc    esp
  40bac9:	adc    BYTE PTR [eax],al
  40bacb:	add    BYTE PTR [edx+edi*4],ah
  40bace:	jae    0x40bad8
  40bad0:	mov    ds:0xd36a1035,eax
  40bad5:	mov    ecx,0x327485d4
  40bada:	sub    al,BYTE PTR [ebx]
  40badc:	adc    ebp,ecx
  40bade:	push   ebp
  40badf:	push   0xffffffc8
  40bae1:	dec    ebx
  40bae2:	inc    esp
  40bae3:	adc    BYTE PTR [edi+ecx*1-0x1],dh
  40bae7:	jne    0x40baa5
  40bae9:	mov    ecx,0x40a69413
  40baee:	add    BYTE PTR [ebp-0x4ffbcbbc],al
  40baf4:	test   DWORD PTR [edi+0x13756a0e],esp
  40bafa:	push   edi
  40bafb:	push   edi
  40bafc:	stos   DWORD PTR es:[edi],eax
  40bafd:	mov    ecx,0x35431073
  40bb02:	or     bh,bh
  40bb04:	sub    ch,dh
  40bb06:	mov    edi,0x2d0b9d5f
  40bb0b:	pop    ebp
  40bb0c:	pop    edi
  40bb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0e:	add    dl,BYTE PTR [esi-0xe]
  40bb11:	jge    0x40bb71
  40bb13:	mov    ebp,DWORD PTR [eax-0x62fffd77]
  40bb19:	pusha  
  40bb1a:	xor    eax,0xefe8160c
  40bb1f:	mov    ch,BYTE PTR [edi-0x62e8750f]
  40bb25:	fld    DWORD PTR [edx]
  40bb27:	xor    ebp,DWORD PTR [edx]
  40bb29:	jmp    0xbaa266f1
  40bb2e:	inc    esi
  40bb2f:	add    al,BYTE PTR [eax]
  40bb31:	add    cl,cl
  40bb33:	stc    
  40bb34:	ret    0xa0ce
  40bb37:	fmul   st,st(2)
  40bb39:	loope  0x40bb48
  40bb3b:	pop    ebx
  40bb3c:	enter  0x415a,0xa0
  40bb40:	pop    esp
  40bb41:	mov    ebx,DWORD PTR [edi-0x37]
  40bb44:	jnp    0x40bb57
  40bb46:	push   0xde5e2842
  40bb4b:	xchg   BYTE PTR [ebx-0x15],bh
  40bb4e:	push   ds
  40bb4f:	(bad)  
  40bb50:	in     eax,dx
  40bb51:	out    0x16,eax
  40bb53:	std    
  40bb54:	(bad)  
  40bb55:	(bad)  
  40bb56:	inc    cl
  40bb58:	xchg   esi,eax
  40bb59:	inc    edx
  40bb5a:	popf   
  40bb5b:	push   esi
  40bb5c:	ret    
  40bb5d:	je     0x40baf9
  40bb5f:	xchg   edx,eax
  40bb61:	call   0x43960c
  40bb66:	stos   DWORD PTR es:[edi],eax
  40bb67:	push   ds
  40bb68:	cld    
  40bb69:	add    BYTE PTR [esi+0x60],cl
  40bb6c:	jmp    0x45a4b40
  40bb71:	push   edi
  40bb72:	adc    bh,cl
  40bb74:	pop    eax
  40bb75:	add    BYTE PTR [edx+0x3933a268],dl
  40bb7b:	sbb    BYTE PTR [eax*4+0x681ac05d],al
  40bb82:	popa   
  40bb83:	add    bl,BYTE PTR [edx]
  40bb85:	inc    esp
  40bb86:	popf   
  40bb87:	ja     0x40bb29
  40bb89:	fmul   QWORD PTR [ebp-0x3c]
  40bb8c:	xchg   ebp,eax
  40bb8d:	(bad)  
  40bb8e:	pop    ss
  40bb8f:	add    eax,0x2df97d1
  40bb94:	sbb    DWORD PTR [eax+eax*1+0x0],ebx
  40bb98:	imul   ecx,DWORD PTR [edi+0x29],0x76c23504
  40bb9f:	mov    DWORD PTR [ebx+0x77],0x3f090fdb
  40bba6:	jmp    0xf7a00de
  40bbab:	add    bl,BYTE PTR [ebp-0x65aed782]
  40bbb1:	adc    BYTE PTR [ecx],ch
  40bbb3:	fst    QWORD PTR [edx+eax*1-0x17]
  40bbb7:	add    ebp,DWORD PTR [ebx+0x75]
  40bbba:	mov    bl,0xd7
  40bbbc:	push   edx
  40bbbd:	sub    eax,0x3
  40bbc0:	popf   
  40bbc1:	(bad)  
  40bbc3:	xor    ebx,DWORD PTR [edx+eax*1-0x3c9d418e]
  40bbca:	cmp    DWORD PTR [ebx],edx
  40bbcc:	jmp    0xd202:0x5f97d49e
  40bbd3:	mov    esi,0x45b7eab
  40bbd8:	popf   
  40bbd9:	add    dh,BYTE PTR [edx+0x11]
  40bbdc:	or     eax,esi
  40bbde:	test   al,0x3
  40bbe0:	xor    eax,0x9d4379de
  40bbe5:	xor    ah,dh
  40bbe7:	lods   eax,DWORD PTR ds:[esi]
  40bbe8:	cmp    cl,dh
  40bbea:	pop    ecx
  40bbeb:	inc    esp
  40bbec:	popf   
  40bbed:	ret    
  40bbee:	sbb    ecx,DWORD PTR [eax]
  40bbf0:	icebp  
  40bbf1:	ds jmp 0x29af9699
  40bbf7:	add    al,0x92
  40bbf9:	fst    DWORD PTR [eax-0x4]
  40bbfc:	add    BYTE PTR [eax],al
  40bbfe:	push   cs
  40bbff:	inc    ebx
  40bc00:	add    cl,ch
  40bc02:	pop    ebx
  40bc03:	idiv   DWORD PTR [ebx]
  40bc05:	jge    0x40bbe6
  40bc07:	add    ah,BYTE PTR [ebx+0x45152d]
  40bc0d:	sahf   
  40bc0e:	cmp    BYTE PTR [edx],ch
  40bc10:	and    al,0x1d
  40bc12:	fld    DWORD PTR [edx]
  40bc14:	call   esp
  40bc16:	mov    ds:0xffe9426e,al
  40bc1b:	dec    ecx
  40bc1c:	lods   al,BYTE PTR ds:[esi]
  40bc1d:	sub    ah,BYTE PTR [ecx-0x6efe2a3f]
  40bc23:	ss inc eax
  40bc25:	jmp    0x957cb38d
  40bc2a:	fild   WORD PTR [edx]
  40bc2c:	mov    ds:0x4512ad,eax
  40bc31:	push   esi
  40bc32:	lock sub DWORD PTR [ebp+edx*8+0x5e],eax
  40bc37:	add    bh,bh
  40bc39:	cld    
  40bc3a:	call   0xac52:0x3fe9426e
  40bc41:	stos   BYTE PTR es:[edi],al
  40bc42:	sahf   
  40bc43:	rcl    ebp,0x8a
  40bc46:	retf   0x426e
  40bc49:	jmp    0x4d80bbef
  40bc4e:	pop    edi
  40bc4f:	add    dh,BYTE PTR [ebp-0x1f]
  40bc52:	xchg   ecx,eax
  40bc53:	inc    DWORD PTR [ebx+0x3d]
  40bc56:	pop    edi
  40bc57:	add    dh,BYTE PTR [ecx+eiz*8-0x5f]
  40bc5b:	inc    DWORD PTR [edi+0x4d]
  40bc5e:	pop    edi
  40bc5f:	add    dh,BYTE PTR [ecx+ebx*8+0x0]
  40bc63:	add    BYTE PTR [ecx+0x5f3d4fff],dl
  40bc69:	add    dh,BYTE PTR [ecx+esi*8-0x5b]
  40bc6d:	leave  
  40bc6e:	jae    0x40bc55
  40bc70:	push   cs
  40bc71:	add    ebp,ebx
  40bc73:	jmp    0x40bc01
  40bc75:	ret    0x2e5d
  40bc78:	(bad)  
  40bc79:	retf   
  40bc7a:	rol    DWORD PTR [eax],0x80
  40bc7d:	add    eax,0x833c8b53
  40bc82:	loope  0x40bc85
  40bc84:	shl    DWORD PTR [esi+0x62ca6e6],0x0
  40bc8b:	test   BYTE PTR [edx+edx*2+0x7],al
  40bc8f:	cmp    DWORD PTR [ecx-0x1b],0xffffffab
  40bc93:	inc    ebx
  40bc94:	je     0x40bc9a
  40bc96:	push   esi
  40bc97:	push   edi
  40bc98:	jmp    0x40bcbc
  40bc9a:	lods   al,BYTE PTR ds:[esi]
  40bc9b:	inc    ebx
  40bc9c:	inc    esp
  40bc9d:	xchg   DWORD PTR [esi-0x54],edx
  40bca0:	ja     0x40bca8
  40bca2:	call   0x45195b
  40bca7:	pop    edi
  40bca8:	out    0x4e,eax
  40bcaa:	lods   al,BYTE PTR ds:[esi]
  40bcab:	inc    ebx
  40bcac:	inc    esp
  40bcad:	out    0x84,eax
  40bcaf:	rcl    BYTE PTR [ecx-0x3f],0x30
  40bcb3:	shr    bh,0xc1
  40bcb6:	sbb    ebx,0xfffffff1
  40bcb9:	mov    edx,0x43949866
  40bcbe:	add    al,ch
  40bcc0:	pop    ebx
  40bcc1:	sbb    eax,0x465c0002
  40bcc6:	rol    DWORD PTR [ecx],1
  40bcc8:	add    BYTE PTR [eax],al
  40bcca:	add    al,0x9
  40bccc:	add    dh,BYTE PTR [edx-0x5f]
  40bccf:	fisub  WORD PTR [esi-0x5dfb0b09]
  40bcd5:	nop
  40bcd6:	inc    esp
  40bcd7:	inc    ebx
  40bcd8:	add    BYTE PTR [esp+eax*4-0x1217efaf],al
  40bcdf:	jae    0x40bce0
  40bce1:	dec    DWORD PTR [eax]
  40bce3:	shl    DWORD PTR [ecx-0x32],0x84
  40bce7:	add    al,0xa2
  40bce9:	nop
  40bcea:	je     0x40bd2f
  40bcec:	add    BYTE PTR [ebp+0x3c044fdf],al
  40bcf2:	mov    dh,0x52
  40bcf4:	mov    edi,0x27aa9db0
  40bcf9:	ret    
  40bcfa:	add    eax,0x9d42981a
  40bcff:	push   ebx
  40bd00:	(bad)
  40bd03:	ja     0x40bd07
  40bd05:	add    BYTE PTR [esi],bh
  40bd07:	push   cs
  40bd08:	cwde   
  40bd09:	inc    edx
  40bd0a:	popf   
  40bd0b:	es ret 
  40bd0d:	jae    0x40bcc9
  40bd0f:	add    ch,al
  40bd11:	das    
  40bd12:	push   0xffffffb7
  40bd14:	or     BYTE PTR [edi],0xdd
  40bd17:	test   eax,0xfd85a332
  40bd1c:	aas    
  40bd1d:	add    ah,bh
  40bd1f:	int    0x96
  40bd21:	inc    edx
  40bd22:	popf   
  40bd23:	inc    eax
  40bd24:	adc    edi,DWORD PTR [edi+0x404571]
  40bd2a:	(bad)  
  40bd2b:	stos   DWORD PTR es:[edi],eax
  40bd2c:	sub    ch,al
  40bd2e:	add    BYTE PTR [eax],al
  40bd30:	dec    esi
  40bd31:	mov    edi,0xaaed0002
  40bd36:	and    eax,ebx
  40bd38:	outs   dx,DWORD PTR ds:[esi]
  40bd39:	jmp    0xfe6711fd
  40bd3e:	sub    ebx,0x2aba5
  40bd44:	adc    esp,DWORD PTR [edi-0x6]
  40bd47:	add    BYTE PTR [eax+0x49805c0d],cl
  40bd4d:	ins    DWORD PTR es:[edi],dx
  40bd4e:	add    ch,BYTE PTR [edx-0x63]
  40bd51:	adc    DWORD PTR [eax+0x7ea99ced],ecx
  40bd57:	mov    edi,0xc010ad68
  40bd5c:	(bad)  
  40bd5d:	rcr    DWORD PTR [edx-0x78],cl
  40bd60:	add    ebp,DWORD PTR [ebp+0x2]
  40bd63:	push   0xffffff9f
  40bd65:	adc    DWORD PTR [ebp+ebp*8-0x40815664],ebx
  40bd6c:	xor    DWORD PTR [ebp+0x29c0459],edi
  40bd72:	jmp    0xe0c6d57a
  40bd77:	shl    DWORD PTR [ebx-0x62d1c741],0xbf
  40bd7e:	repz ret 
  40bd80:	lods   al,BYTE PTR ds:[esi]
  40bd81:	inc    edx
  40bd82:	jmp    0xbbfad717
  40bd87:	ret    
  40bd88:	adc    DWORD PTR [ecx-0x3f],0x24
  40bd8c:	scas   al,BYTE PTR es:[edi]
  40bd8d:	add    ch,cl
  40bd8f:	mov    BYTE PTR [edx],dh
  40bd91:	arpl   WORD PTR [eax+esi*2],sp
  40bd94:	add    BYTE PTR [eax],al
  40bd96:	fild   WORD PTR [edx]
  40bd98:	out    dx,al
  40bd99:	cwde   
  40bd9a:	and    cl,cl
  40bd9c:	stos   BYTE PTR es:[edi],al
  40bd9d:	or     BYTE PTR [ebp+0x1db06255],bl
  40bda3:	scas   al,BYTE PTR es:[edi]
  40bda4:	pusha  
  40bda5:	or     BYTE PTR [ebp-0x6ab688fe],bl
  40bdab:	add    DWORD PTR [edx],ebx
  40bdad:	pop    edx
  40bdae:	ror    BYTE PTR [edi],cl
  40bdb0:	mov    dh,BYTE PTR gs:[edx]
  40bdb3:	mov    edi,0x926983e8
  40bdb8:	cwde   
  40bdb9:	inc    edi
  40bdba:	popf   
  40bdbb:	add    esi,esp
  40bdbd:	mov    DWORD PTR [esi],esp
  40bdbf:	add    ch,cl
  40bdc1:	add    ecx,esi
  40bdc3:	(bad)  
  40bdc5:	ret    0x8b80
  40bdc8:	gs xor al,0x8e
  40bdcb:	inc    edx
  40bdcc:	jmp    0x326aef61
  40bdd1:	ret    
  40bdd2:	repz test eax,0x29c51d0
  40bdd8:	ins    BYTE PTR es:[edi],dx
  40bdd9:	mov    edx,ebp
  40bddb:	mov    esp,0xf36ac315
  40bde0:	sub    BYTE PTR [ebp+ebp*2-0x41],dl
  40bde4:	cmp    eax,0xe9424e3c
  40bde9:	push   ebx
  40bdea:	ret    0x14
  40bded:	cdq    
  40bdee:	xchg   ebx,eax
  40bdef:	inc    edx
  40bdf0:	add    BYTE PTR [ecx+ebx*8+0x35],ah
  40bdf4:	sub    esi,DWORD PTR [edx-0x2c]
  40bdf7:	dec    esi
  40bdf8:	lea    esp,[eax+eax*1+0x0]
  40bdfc:	out    0xbd,al
  40bdfe:	(bad)  
  40bdff:	(bad)  
  40be00:	out    dx,al
  40be01:	push   edx
  40be02:	call   0x440c1c
  40be07:	ins    BYTE PTR es:[edi],dx
  40be08:	pop    esi
  40be09:	xor    dl,BYTE PTR [edi]
  40be0b:	mov    esi,0x2aac3a85
  40be10:	mov    eax,ds:0x5db1848f
  40be15:	mov    ebp,0x175e39fe
  40be1a:	mov    al,0xfb
  40be1c:	fiadd  WORD PTR [edx]
  40be1e:	test   DWORD PTR [ecx-0x597cf66e],ebp
  40be24:	mov    ds:0xf2868341,al
  40be29:	xor    BYTE PTR [esi-0x24d6c56e],bl
  40be2f:	in     eax,0x2b
  40be31:	xor    DWORD PTR [ebx-0x6],0xec0902de
  40be38:	ds push 0x42
  40be3b:	jmp    0xed36cf33
  40be40:	(bad)  
  40be41:	imul   eax,DWORD PTR [edx-0x17],0x680a3699
  40be48:	lods   eax,DWORD PTR ds:[esi]
  40be49:	loop   0x40bdf6
  40be4b:	stos   BYTE PTR es:[edi],al
  40be4c:	sahf   
  40be4d:	mov    ds:0x5d9ee90e,al
  40be52:	pop    esi
  40be53:	jns    0x40bdee
  40be55:	pop    ecx
  40be56:	leave  
  40be57:	sub    esp,DWORD PTR [edx+0x32725502]
  40be5d:	sub    ebx,0xfffffffd
  40be60:	add    BYTE PTR [eax],al
  40be62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be63:	add    al,BYTE PTR [eax]
  40be65:	mov    edx,0x8b5574
  40be6a:	loope  0x40bee1
  40be6c:	adc    BYTE PTR [eax-0x4c],al
  40be6f:	jmp    0x24883d3
  40be74:	call   edi
  40be76:	neg    esp
  40be78:	push   0x51c68720
  40be7d:	mov    esi,0x4239d8
  40be82:	fimul  DWORD PTR [ecx+0x4739541b]
  40be88:	add    BYTE PTR [esi+0x17],ah
  40be8b:	and    al,ch
  40be8d:	inc    ebx
  40be8e:	je     0x40be7b
  40be90:	mov    ds:0x474958,al
  40be95:	mov    DWORD PTR [ecx-0x53],esp
  40be98:	ret    0x7443
  40be9b:	ret    0x3413
  40be9e:	push   0x41
  40bea0:	add    BYTE PTR [ebx-0xa9edf8],al
  40bea6:	or     ecx,DWORD PTR [ebp-0x3ce2134d]
  40beac:	std    
  40bead:	call   0x407dca
  40beb2:	mov    edi,0x38a37c46
  40beb7:	aas    
  40beb8:	inc    edx
  40beb9:	add    ch,bh
  40bebb:	outs   dx,DWORD PTR ds:[esi]
  40bebc:	(bad)  
  40bebd:	push   DWORD PTR [esi+ecx*4]
  40bec0:	les    ecx,FWORD PTR [eax+0x7549410c]
  40bec6:	add    BYTE PTR [eax],al
  40bec8:	outs   dx,BYTE PTR ds:[esi]
  40bec9:	lea    esi,[ebx-0x23ca026]
  40becf:	call   0x407e8c
  40bed4:	or     DWORD PTR [edi],esi
  40bed6:	add    BYTE PTR [eax],al
  40bed8:	add    al,0xef
  40beda:	adc    edx,DWORD PTR [eax+0x27]
  40bedd:	mov    WORD PTR [ebx-0x30],?
  40bee0:	ja     0x40beb0
  40bee2:	std    
  40bee3:	call   0x338585
  40bee8:	shl    BYTE PTR ds:0x30a87dc4,cl
  40beee:	retf   0x354f
  40bef1:	xor    esi,DWORD PTR [edx+0x42]
  40bef4:	popf   
  40bef5:	es xchg edi,eax
  40bef8:	mov    al,0xab
  40befa:	mov    edi,0xb1eab54f
  40beff:	add    BYTE PTR [ebp+0x300ec326],bl
  40bf05:	push   0xfffffffc
  40bf07:	ret    0xa308
  40bf0a:	repz mov edi,0xc7863303
  40bf10:	cmp    BYTE PTR [ebp-0x41],0xb8
  40bf14:	mov    ebp,DWORD PTR [ebx+0x27200002]
  40bf1a:	(bad)  
  40bf1c:	push   0x65
  40bf1e:	mov    dl,BYTE PTR [edi]
  40bf20:	(bad)  
  40bf22:	ss cli 
  40bf24:	(bad)  
  40bf27:	inc    eax
  40bf28:	popf   
  40bf29:	pop    esi
  40bf2a:	xchg   bh,al
  40bf2c:	add    BYTE PTR [eax],al
  40bf2e:	dec    eax
  40bf2f:	test   DWORD PTR [edi+0x6ed7424f],edi
  40bf35:	adc    ebp,ebx
  40bf37:	test   eax,0x2d354c83
  40bf3c:	push   esp
  40bf3d:	push   ebx
  40bf3e:	mov    bh,0xa8
  40bf40:	push   ebx
  40bf41:	push   0xffffff9c
  40bf43:	rol    DWORD PTR [edx],1
  40bf45:	add    BYTE PTR [ebp-0x1a7b71d7],bl
  40bf4b:	dec    esi
  40bf4c:	sar    dh,0x6d
  40bf4f:	in     al,dx
  40bf50:	inc    ebp
  40bf51:	cld    
  40bf52:	add    ebp,DWORD PTR [ebx-0x2105fffe]
  40bf58:	repnz adc DWORD PTR [ebp-0x57],ebx
  40bf5c:	mov    ebp,edi
  40bf5e:	push   ds
  40bf5f:	add    esp,DWORD PTR [edi]
  40bf61:	shr    BYTE PTR [esi-0x1d],0xb9
  40bf65:	mov    fs,WORD PTR [ecx-0x42]
  40bf68:	mov    eax,0x5bbe49c0
  40bf6d:	xchg   dl,ah
  40bf6f:	mov    ebp,0x5452c005
  40bf74:	(bad)  
  40bf75:	adc    eax,0x3a91071
  40bf7a:	sbb    bl,al
  40bf7c:	je     0x40bf87
  40bf7e:	push   ss
  40bf7f:	inc    esi
  40bf80:	in     eax,0x8d
  40bf82:	pop    ecx
  40bf83:	mov    edx,0x62b1bf36
  40bf88:	cli    
  40bf89:	inc    ebx
  40bf8a:	popf   
  40bf8b:	xchg   DWORD PTR [ebx],esp
  40bf8d:	mov    esp,0x38c5ba1f
  40bf92:	add    BYTE PTR [eax],al
  40bf94:	cdq    
  40bf95:	push   0xffffffe7
  40bf97:	aaa    
  40bf98:	lahf   
  40bf99:	out    dx,eax
  40bf9a:	test   al,0xd5
  40bf9c:	jp     0x40bf8d
  40bf9e:	lahf   
  40bf9f:	es adc al,0x8e
  40bfa2:	sub    ecx,esp
  40bfa4:	popa   
  40bfa5:	mov    ebx,0xca21919d
  40bfaa:	xchg   ebx,eax
  40bfab:	mov    edi,0x636daa53
  40bfb0:	popf   
  40bfb1:	add    dh,BYTE PTR [ecx+ecx*4+0x5a]
  40bfb5:	mov    ebp,0x9a42bf7d
  40bfba:	call   0x7d6b5cc3
  40bfbf:	imul   ebx,edi,0x2
  40bfc2:	jo     0x40bfe5
  40bfc4:	xor    eax,0x2403a967
  40bfc9:	sbb    eax,0x25f6fed
  40bfce:	dec    esi
  40bfcf:	xlat   BYTE PTR ds:[ebx]
  40bfd0:	add    ch,BYTE PTR [eax]
  40bfd2:	stos   BYTE PTR es:[edi],al
  40bfd3:	add    al,0x9d
  40bfd5:	sub    ch,BYTE PTR [ecx+0x25d35]
  40bfdb:	ss xchg esp,eax
  40bfdd:	rcl    BYTE PTR [ecx],cl
  40bfdf:	test   eax,0x9dc2f79e
  40bfe4:	xchg   ecx,eax
  40bfe5:	xchg   edi,esi
  40bfe7:	adc    edi,edx
  40bfe9:	cmp    edi,0x320107e8
  40bfef:	sub    edi,eax
  40bff1:	mov    edi,0xe1fee73
  40bff6:	push   esp
  40bff7:	inc    ecx
  40bff8:	add    BYTE PTR [eax],al
  40bffa:	pop    esi
  40bffb:	add    al,BYTE PTR [ecx]
  40bffd:	add    edi,esp
  40bfff:	cmp    al,0x0
  40c001:	jmp    0xe8f11c51
  40c006:	inc    edi
  40c007:	leave  
  40c008:	ret    0x2634
  40c00b:	scas   al,BYTE PTR es:[edi]
  40c00c:	or     ch,0x56
  40c00f:	sub    ebx,0xffffffed
  40c012:	mov    ds:0xeb1a0002,eax
  40c017:	push   ecx
  40c018:	mov    edi,DWORD PTR [ecx+ebp*4]
  40c01b:	cmc    
  40c01c:	fisubr DWORD PTR [edx+0x3b]
  40c01f:	add    ecx,DWORD PTR [ecx+0x4275a2cc]
  40c025:	jmp    0xfcc9c0cf
  40c02a:	outs   dx,BYTE PTR ds:[esi]
  40c02c:	inc    edx
  40c02d:	jmp    0x8148ef45
  40c032:	push   ebx
  40c033:	mov    ebp,0x7a1a86fe
  40c038:	je     0x40c020
  40c03a:	sub    al,0x7a
  40c03c:	call   0x4359f8
  40c041:	sbb    bh,BYTE PTR [ecx+0x2]
  40c044:	add    cl,dh
  40c046:	sahf   
  40c047:	push   ebp
  40c048:	push   esp
  40c04a:	push   esi
  40c04b:	adc    al,0x40
  40c04d:	jmp    0xaaeb99d1
  40c052:	sahf   
  40c053:	std    
  40c054:	ret    0x4100
  40c057:	adc    eax,0x13b815ff
  40c05c:	inc    eax
  40c05d:	add    BYTE PTR [eax],al
  40c05f:	add    BYTE PTR [edi],ah
  40c061:	test   ax,0xf443
  40c065:	lea    ebx,[ebx]
  40c067:	in     al,0x4f
  40c069:	inc    esp
  40c06a:	add    bl,ch
  40c06c:	ret    
  40c06d:	mov    edi,0x445fe403
  40c072:	add    BYTE PTR [ecx],al
  40c074:	push   ds
  40c075:	or     eax,0x447180b8
  40c07a:	add    BYTE PTR [ecx+0x2c],bl
  40c07d:	sbb    eax,0x46bcc083
  40c082:	jne    0x40c07c
  40c084:	aas    
  40c085:	mov    edx,0xfe7412f2
  40c08a:	fadd   DWORD PTR [bx+di+0x43]
  40c08e:	add    bh,bh
  40c090:	push   edx
  40c091:	out    0x3b,al
  40c093:	mov    eax,0xd6fefeb7
  40c098:	or     DWORD PTR [ebx+0x24],ecx
  40c09b:	adc    BYTE PTR [esi+eiz*8+0x5840201],dl
  40c0a2:	mov    DWORD PTR ds:0x423690,ebx
  40c0a8:	cmp    edx,DWORD PTR [ecx]
  40c0aa:	fcom   QWORD PTR ds:0x458afe84
  40c0b0:	cmp    al,0x6d
  40c0b2:	loop   0x40c0af
  40c0b4:	sbb    esi,DWORD PTR [edi-0x7e]
  40c0b7:	rol    BYTE PTR [eax-0x7e],0x39
  40c0bb:	sti    
  40c0bc:	xor    DWORD PTR [edx+0x59e5351],esp
  40c0c2:	push   0x68000058
  40c0c7:	inc    ebx
  40c0c8:	add    bh,bh
  40c0ca:	and    DWORD PTR ds:0x82044011,edi
  40c0d0:	or     eax,DWORD PTR [eax]
  40c0d2:	popf   
  40c0d3:	pushf  
  40c0d4:	inc    eax
  40c0d5:	add    BYTE PTR [edx],cl
  40c0d7:	mov    WORD PTR [edi-0x854a14f],?
  40c0dd:	ret    0x1faa
  40c0e0:	pusha  
  40c0e1:	push   edx
  40c0e3:	out    dx,eax
  40c0e4:	stos   DWORD PTR es:[edi],eax
  40c0e5:	sub    al,0xe9
  40c0e7:	out    0xbc,eax
  40c0e9:	sbb    ebp,0xffffffaf
  40c0ec:	xchg   BYTE PTR [esi-0x26],cl
  40c0ef:	pop    ss
  40c0f0:	mov    ebp,0xaaa348fe
  40c0f5:	pop    ebx
  40c0f6:	leave  
  40c0f7:	pop    es
  40c0f8:	mov    ebp,0x86afdd83
  40c0fd:	ds mov edx,0x88febbb7
  40c103:	dec    edi
  40c104:	adc    al,BYTE PTR [eax-0x63]
  40c107:	dec    esp
  40c108:	cwde   
  40c109:	scas   eax,DWORD PTR es:[edi]
  40c10a:	pop    esi
  40c10b:	stos   DWORD PTR es:[edi],eax
  40c10c:	idiv   edx
  40c10e:	adc    bl,bh
  40c110:	mov    BYTE PTR [ecx+ecx*8],dl
  40c113:	jge    0x40c154
  40c115:	add    BYTE PTR [ebp-0x4f],dh
  40c118:	jecxz  0x40c11b
  40c11a:	popf   
  40c11b:	add    al,0xc1
  40c11d:	push   cs
  40c11e:	and    edi,edx
  40c120:	mov    ebx,0x70572fe
  40c125:	xor    al,0x39
  40c127:	in     eax,dx
  40c128:	add    esp,DWORD PTR [ebx+0x5c650000]
  40c12e:	inc    eax
  40c12f:	add    BYTE PTR [esi+0x202f3564],dl
  40c135:	dec    esi
  40c136:	out    0x9f,eax
  40c138:	pushf  
  40c139:	test   eax,0xad4ce802
  40c13e:	add    al,BYTE PTR [eax]
  40c140:	into   
  40c141:	xchg   DWORD PTR es:[ebx],esp
  40c144:	pusha  
  40c145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c146:	add    al,BYTE PTR [eax]
  40c148:	int    0x28
  40c14a:	imul   BYTE PTR [ebx]
  40c14c:	icebp  
  40c14d:	add    ch,BYTE PTR [edx-0x6594abfd]
  40c153:	inc    eax
  40c154:	popf   
  40c155:	sub    dh,BYTE PTR [ecx+0x73]
  40c158:	pop    edi
  40c159:	add    dl,BYTE PTR [ecx+0x6c942e11]
  40c15f:	stos   DWORD PTR es:[edi],eax
  40c160:	mov    esp,0xf203eae0
  40c165:	sub    eax,0xb659abe1
  40c16a:	sub    eax,0xf5c31ebc
  40c16f:	xchg   ebx,ebp
  40c171:	mov    eax,0x3dc8bc1d
  40c176:	loope  0x40c179
  40c178:	push   ecx
  40c179:	inc    DWORD PTR [eax]
  40c17b:	mov    cl,0xc6
  40c17d:	mov    bh,0x5
  40c17f:	test   al,0x9c
  40c181:	jb     0x40c16a
  40c183:	stc    
  40c184:	fild   WORD PTR [edi]
  40c186:	pop    esp
  40c187:	ret    
  40c188:	dec    ebx
  40c189:	pop    eax
  40c18a:	xchg   edx,eax
  40c18b:	mov    BYTE PTR [ecx+0xab55],bh
  40c191:	add    BYTE PTR [ebp+0x1fa8724d],bl
  40c197:	sahf   
  40c198:	rol    BYTE PTR [ebp+0x3e5a276],1
  40c19e:	popf   
  40c19f:	push   eax
  40c1a0:	push   ds
  40c1a1:	mov    DWORD PTR [esi],esi
  40c1a3:	fimul  WORD PTR [eax+0x6]
  40c1a6:	popf   
  40c1a7:	add    al,cl
  40c1a9:	sbb    DWORD PTR [edi-0x117716fe],0xffffffde
  40c1b0:	sbb    ch,BYTE PTR [eax+edx*2+0x2603e7fa]
  40c1b7:	or     BYTE PTR [esi+0x3029d05],0x6
  40c1be:	adc    BYTE PTR [esi+0x2a088cc],al
  40c1c4:	jmp    0x6df41d
  40c1c9:	loope  0x40c1e0
  40c1cb:	dec    ebx
  40c1cc:	and    al,0xd5
  40c1ce:	jbe    0x40c16a
  40c1d0:	scas   eax,DWORD PTR es:[edi]
  40c1d1:	stos   BYTE PTR es:[edi],al
  40c1d2:	sahf   
  40c1d3:	stos   BYTE PTR es:[edi],al
  40c1d4:	mov    al,0x4
  40c1d6:	fwait
  40c1d7:	add    bh,BYTE PTR [ecx+0x2a047]
  40c1dd:	(bad)  
  40c1de:	fistp  QWORD PTR [edi+edi*8+0x75495ee8]
  40c1e5:	inc    eax
  40c1e6:	and    al,0x43
  40c1e8:	and    al,0xe1
  40c1ea:	dec    esi
  40c1eb:	sub    al,0x1
  40c1ed:	rol    DWORD PTR [esi+0x66],0x42
  40c1f1:	jmp    0xf898d00d
  40c1f6:	add    BYTE PTR [eax],al
  40c1f8:	pop    esi
  40c1f9:	add    cl,BYTE PTR [ebx+0x73ad1c19]
  40c1ff:	test   DWORD PTR [edi],0x5ed8180e
  40c205:	add    bh,BYTE PTR ds:0x29936
  40c20b:	jl     0x40c1a6
  40c20d:	push   eax
  40c20e:	call   esp
  40c210:	adc    DWORD PTR ds:[eax-0x17],eax
  40c214:	xchg   ebx,eax
  40c215:	mov    al,0x5e
  40c217:	jb     0x40c275
  40c219:	pop    eax
  40c21a:	mov    ecx,esp
  40c21c:	in     eax,0xc0
  40c21e:	add    ebp,ecx
  40c220:	in     eax,dx
  40c221:	mov    ebx,ebp
  40c223:	push   0x1a
  40c225:	scas   al,BYTE PTR es:[edi]
  40c226:	or     ch,0x1a
  40c229:	(bad)  
  40c22a:	(bad)  
  40c22b:	call   0x5bc49ff
  40c230:	xchg   ecx,eax
  40c231:	stos   BYTE PTR es:[edi],al
  40c232:	add    dl,ch
  40c234:	sahf   
  40c235:	add    bh,bh
  40c237:	adc    al,0xa9
  40c239:	mov    DWORD PTR [ebp+eiz*8+0x15],ecx
  40c23d:	and    BYTE PTR [ebx],0xd4
  40c240:	inc    edx
  40c241:	mov    dh,0xfe
  40c243:	add    BYTE PTR [ecx+edi*2+0x3ce02c33],dl
  40c24a:	add    BYTE PTR [ebx-0x6797f987],cl
  40c250:	fs cmp al,0x0
  40c253:	call   0x416610
  40c258:	push   ebx
  40c259:	test   ebx,esp
  40c25b:	pop    ebp
  40c25c:	add    BYTE PTR [eax],al
  40c25e:	mov    dh,0xfd
  40c260:	call   DWORD PTR [edi+edi*2+0x5d]
  40c264:	sub    esp,0x75ff53cc
  40c26a:	add    BYTE PTR [ebx+0x79049843],cl
  40c270:	jae    0x40c27a
  40c272:	pop    esp
  40c273:	sbb    eax,0x8a83fffe
  40c278:	inc    ebx
  40c279:	cwde   
  40c27a:	adc    al,0xe8
  40c27c:	jmp    DWORD PTR [edi+0xc]
  40c27f:	push   ds
  40c280:	inc    edx
  40c281:	add    BYTE PTR [ebx+0x4115812],dl
  40c287:	add    cl,BYTE PTR [ebx+0x727339f0]
  40c28d:	sbb    ebx,DWORD PTR [esi]
  40c28f:	jns    0x40c2e5
  40c291:	dec    ecx
  40c293:	adc    DWORD PTR [ebx],edx
  40c295:	inc    eax
  40c296:	test   BYTE PTR [edi+edi*4],dh
  40c299:	je     0x40c224
  40c29b:	lods   al,BYTE PTR ds:[esi]
  40c29c:	jle    0x40c29e
  40c29e:	je     0x40c2a1
  40c2a0:	je     0x40c2b0
  40c2a2:	retf   0x137b
  40c2a5:	mov    al,ds:0x33004156
  40c2aa:	inc    esp
  40c2ab:	pop    eax
  40c2ac:	leave  
  40c2ad:	ret    0x17c
  40c2b0:	mov    eax,esi
  40c2b2:	pop    edi
  40c2b3:	jae    0x40c308
  40c2b5:	mov    esi,DWORD PTR [eax]
  40c2b7:	push   ecx
  40c2b8:	push   ecx
  40c2b9:	mov    eax,DWORD PTR [ecx-0x5b]
  40c2bc:	stos   BYTE PTR es:[edi],al
  40c2bd:	inc    ebx
  40c2be:	popf   
  40c2bf:	stos   DWORD PTR es:[edi],eax
  40c2c0:	push   ebx
  40c2c1:	push   edi
  40c2c2:	add    BYTE PTR [eax],al
  40c2c4:	xor    eax,0x9d01e25a
  40c2c9:	js     0x40c2a6
  40c2cb:	mov    al,bl
  40c2cd:	cmp    esp,0xffffffc2
  40c2d0:	mov    al,0xa4
  40c2d2:	repz mov edi,0x35e34
  40c2d8:	popf   
  40c2d9:	rol    DWORD PTR [ebx+edx*2],1
  40c2dc:	outs   dx,BYTE PTR ds:[esi]
  40c2dd:	es aas 
  40c2df:	or     BYTE PTR [ebp+0x74],ch
  40c2e2:	mov    bh,0x74
  40c2e4:	xchg   ebp,eax
  40c2e5:	and    edx,DWORD PTR [edi-0x1]
  40c2e8:	xchg   DWORD PTR [ecx+edi*4],edi
  40c2eb:	adc    al,0x39
  40c2ed:	fld    DWORD PTR [edx+0x0]
  40c2f0:	and    bl,ch
  40c2f2:	cs add al,0xdb
  40c2f5:	pop    ebp
  40c2f6:	mov    bh,0x0
  40c2f8:	cld    
  40c2f9:	retf   0x4266
  40c2fc:	popf   
  40c2fd:	sub    BYTE PTR [ebx+edx*1+0x56066694],ah
  40c304:	push   ss
  40c305:	into   
  40c306:	mov    ss,WORD PTR [ecx]
  40c308:	pop    ebp
  40c309:	stos   DWORD PTR es:[edi],eax
  40c30a:	push   ebx
  40c30b:	mov    eax,0x45477d
  40c310:	jbe    0x40c2b8
  40c312:	out    dx,al
  40c313:	stos   DWORD PTR es:[edi],eax
  40c314:	pop    esi
  40c315:	stos   DWORD PTR es:[edi],eax
  40c316:	sub    al,0x4
  40c318:	sahf   
  40c319:	out    0xbb,al
  40c31b:	mov    eax,fs
  40c31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31e:	push   ecx
  40c31f:	push   eax
  40c320:	repnz int3 
  40c322:	rol    BYTE PTR [ebp+ebx*2+0xfe054f],1
  40c329:	add    al,ah
  40c32b:	mov    esp,0x85a9b853
  40c330:	inc    ebx
  40c331:	add    BYTE PTR [esi-0x2154115a],dh
  40c337:	test   eax,0x29e042c
  40c33c:	sub    al,0xbc
  40c33e:	and    DWORD PTR [esi-0x5f],eax
  40c341:	push   edx
  40c342:	in     eax,dx
  40c343:	dec    ebx
  40c344:	xchg   esi,eax
  40c345:	shl    eax,1
  40c347:	jge    0x40c2f1
  40c349:	cs sahf 
  40c34b:	mov    ah,0x2b
  40c34d:	mov    ecx,0x757cee33
  40c352:	fild   WORD PTR [edx]
  40c354:	xor    DWORD PTR [edi-0x4716c014],esi
  40c35a:	xchg   ecx,eax
  40c35b:	mov    edx,0xac25abbd
  40c360:	pop    ebp
  40c361:	mov    eax,0x4dbc31e
  40c366:	add    edi,DWORD PTR [esi]
  40c368:	dec    esi
  40c369:	mov    eax,0x447a02b1
  40c36e:	popf   
  40c36f:	jp     0x40c359
  40c371:	je     0x40c3d2
  40c373:	add    dh,BYTE PTR [esi]
  40c375:	cs in  eax,0x4b
  40c378:	inc    ecx
  40c379:	sub    edx,edx
  40c37b:	mov    bl,0x25
  40c37d:	jg     0x40c391
  40c37f:	cs jmp 0xc256:0xd0b361b9
  40c387:	cs hlt 
  40c389:	sub    ebx,DWORD PTR [ebp+0x3e882]
  40c38f:	add    BYTE PTR [esi-0x4d],cl
  40c392:	jae    0x40c34f
  40c394:	push   ebx
  40c395:	mov    bl,0xdb
  40c397:	(bad)  
  40c398:	mov    WORD PTR [edx-0x17],es
  40c39b:	stos   BYTE PTR es:[edi],al
  40c39c:	shl    DWORD PTR [ebx+0x3d27b7e5],cl
  40c3a2:	loope  0x40c3ff
  40c3a4:	push   esp
  40c3a5:	shl    al,0x3
  40c3a8:	test   DWORD PTR [edx],0x7076f1ce
  40c3ae:	sub    DWORD PTR [edx+esi*2],eax
  40c3b1:	or     eax,0x2dd12d9
  40c3b6:	add    BYTE PTR [esi-0x493fe7bf],bh
  40c3bc:	jns    0x40c37e
  40c3be:	push   esp
  40c3bf:	je     0x40c346
  40c3c1:	fimul  WORD PTR [ebx+0x1fef568]
  40c3c7:	jmp    0x24ce106a
  40c3cc:	jge    0x40c420
  40c3ce:	lea    ebp,[ecx+eax*1]
  40c3d1:	inc    ebx
  40c3d2:	(bad)  
  40c3d3:	and    al,0x7d
  40c3d5:	jmp    0x9114:0xb39ee8ff
  40c3dc:	scas   eax,DWORD PTR es:[edi]
  40c3dd:	inc    edx
  40c3de:	add    BYTE PTR [ecx+ebx*8+0x2d],ch
  40c3e2:	or     eax,0xb7aacc6c
  40c3e7:	lahf   
  40c3e8:	cdq    
  40c3e9:	add    al,BYTE PTR [eax]
  40c3eb:	inc    ecx
  40c3ec:	idiv   BYTE PTR [edx]
  40c3ee:	add    ecx,ebp
  40c3f0:	daa    
  40c3f1:	out    dx,al
  40c3f2:	xor    edx,edi
  40c3f4:	add    BYTE PTR [eax],al
  40c3f6:	pop    esi
  40c3f7:	add    dl,BYTE PTR [ebx-0x62]
  40c3fa:	addr16 pop ss
  40c3fc:	add    ecx,ebp
  40c3fe:	sahf   
  40c3ff:	dec    edi
  40c400:	xor    esp,DWORD PTR [esi]
  40c402:	and    al,0x7e
  40c404:	outs   dx,DWORD PTR ds:[esi]
  40c405:	pop    ds
  40c406:	adc    dh,BYTE PTR [esi+edx*2-0x7d32f447]
  40c40d:	and    eax,0x798485a5
  40c412:	call   0x19dac2ca
  40c417:	xchg   esi,eax
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	imul   ebx
  40c41b:	mov    bl,0xfe
  40c41d:	aam    0x5a
  40c41f:	adc    al,0x40
  40c421:	jmp    0xf0b53643
  40c426:	out    dx,eax
  40c427:	jg     0x40c3ad
  40c429:	pop    ecx
  40c42a:	dec    ebx
  40c42b:	mov    cl,0xfe
  40c42d:	ret    0x1aa7
  40c430:	add    BYTE PTR [eax],al
  40c432:	test   DWORD PTR [esi],eax
  40c434:	add    BYTE PTR [ebp-0x2cdff],cl
  40c43a:	sub    eax,DWORD PTR [ecx+0x50]
  40c43d:	push   DWORD PTR [edx]
  40c43f:	test   edx,eax
  40c441:	or     al,0xc9
  40c443:	repnz mov edi,DWORD PTR [eax+0x5e5]
  40c44a:	sbb    al,0xd9
  40c44c:	inc    ebp
  40c44d:	add    DWORD PTR [ebx+edi*2+0x73],eax
  40c451:	inc    eax
  40c452:	fdiv   QWORD PTR [ebx]
  40c454:	(bad)  
  40c455:	push   DWORD PTR [esi+ebx*2]
  40c458:	rol    BYTE PTR [edi+0x0],1
  40c45b:	add    BYTE PTR ds:0xb4c68b06,dh
  40c461:	jnp    0x40c4a6
  40c463:	mov    WORD PTR [ecx+edi*1+0x1],ss
  40c467:	add    ah,dh
  40c469:	test   DWORD PTR [ecx-0x288ea339],ecx
  40c46f:	add    DWORD PTR [edi+edi*2],eax
  40c472:	inc    ebx
  40c473:	pop    esp
  40c474:	imul   esi,edx,0x567b837
  40c47a:	add    BYTE PTR [eax],al
  40c47c:	pop    esp
  40c47d:	sub    BYTE PTR [esi+0x1],al
  40c480:	les    edi,FWORD PTR [edx+0x43]
  40c483:	jo     0x40c499
  40c485:	fadd   QWORD PTR [eax]
  40c487:	xor    esi,DWORD PTR [edx+0x38458d3f]
  40c48d:	push   ebp
  40c48e:	push   edi
  40c48f:	mov    DWORD PTR [ecx],edx
  40c491:	jmp    0x6873:0x7e347d88
  40c498:	stos   DWORD PTR es:[edi],eax
  40c499:	add    DWORD PTR [eax+0x10],esi
  40c49c:	hlt    
  40c49d:	add    eax,0x1511c085
  40c4a2:	lea    eax,[ebp-0x14]
  40c4a5:	push   esi
  40c4a6:	push   esi
  40c4a7:	(bad)  
  40c4a8:	shr    DWORD PTR [esi+0x569d8d4e],0x34
  40c4af:	call   0x433a8d
  40c4b4:	xchg   BYTE PTR [edi+edi*2-0x43e39539],bl
  40c4bb:	(bad)  
  40c4bc:	jmp    0x106bc95
  40c4c1:	add    bl,dl
  40c4c3:	fcom   DWORD PTR [edx-0x1]
  40c4c6:	enter  0x8713,0x7c
  40c4ca:	mov    ecx,0x35580215
  40c4cf:	add    eax,0x809d0006
  40c4d4:	cs push 0xfeb2a945
  40c4da:	sub    dh,BYTE PTR [edi+edi*1]
  40c4dd:	ins    BYTE PTR es:[edi],dx
  40c4de:	adc    al,0xde
  40c4e0:	and    ecx,DWORD PTR [ebp-0x4c842470]
  40c4e6:	popf   
  40c4e7:	fwait
  40c4e8:	add    ch,al
  40c4ea:	pusha  
  40c4eb:	push   0x266e0001
  40c4f0:	jg     0x40c561
  40c4f2:	sti    
  40c4f3:	aas    
  40c4f4:	mov    ch,0x4f
  40c4f6:	xchg   DWORD PTR [ebp+0x636d7c85],ebx
  40c4fc:	stos   BYTE PTR es:[edi],al
  40c4fd:	cmp    edx,DWORD PTR [ebx-0x5a95fd65]
  40c503:	dec    esi
  40c504:	aas    
  40c505:	pop    esp
  40c506:	ins    DWORD PTR es:[edi],dx
  40c507:	xchg   ebp,eax
  40c508:	add    BYTE PTR [ebp-0x17a580b8],cl
  40c50e:	jbe    0x40c4b9
  40c510:	add    al,BYTE PTR [eax]
  40c512:	mov    edx,0x588d2695
  40c517:	adc    esi,DWORD PTR [ebp-0x7874d28c]
  40c51d:	lds    edx,FWORD PTR [esi]
  40c51f:	cs aaa 
  40c521:	push   eax
  40c522:	pop    es
  40c523:	pop    esi
  40c524:	push   edi
  40c525:	mov    eax,DWORD PTR [eax]
  40c527:	add    BYTE PTR [ebx-0x30962efd],dl
  40c52d:	add    ch,cl
  40c52f:	sbb    BYTE PTR [esi+0x13],0x36
  40c533:	mov    esp,ecx
  40c535:	xor    al,BYTE PTR es:[ecx+0xa44026a]
  40c53c:	and    eax,0x9d03e876
  40c541:	call   0x810f:0x29c3db8
  40c548:	pop    ecx
  40c549:	aaa    
  40c54a:	mov    al,0xc1
  40c54c:	sahf   
  40c54d:	add    dh,BYTE PTR [edi]
  40c54f:	jbe    0x40c56b
  40c551:	push   es
  40c552:	jmp    0xe15b985a
  40c557:	and    bl,ch
  40c559:	add    bl,BYTE PTR [esi]
  40c55b:	mov    ch,0x91
  40c55d:	repnz (bad) 
  40c55f:	inc    ebx
  40c560:	popf   
  40c561:	jnp    0x40c546
  40c563:	mov    ebx,0xe9444c
  40c568:	mov    al,ds:0x9d4094f6
  40c56d:	and    DWORD PTR [edi+eax*1],0x16
  40c571:	enter  0xc501,0x24
  40c575:	pop    ss
  40c576:	call   0xb783686e
  40c57b:	cs repnz push eax
  40c57e:	sub    cl,BYTE PTR [esi+0x16]
  40c581:	lahf   
  40c582:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c584:	stos   BYTE PTR es:[edi],al
  40c585:	add    ebp,ecx
  40c587:	add    ebp,DWORD PTR [esi+0x1a]
  40c58a:	jno    0x40c58a
  40c58c:	add    BYTE PTR [eax],al
  40c58e:	retf   0x90af
  40c591:	or     edi,DWORD PTR [edx+eax*2]
  40c594:	jmp    0xef7e71f
  40c599:	mov    ah,0xb3
  40c59b:	call   0x572:0x29c4dd4
  40c5a2:	dec    ebp
  40c5a3:	jnp    0x40c5a4
  40c5a5:	stos   DWORD PTR es:[edi],eax
  40c5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a7:	call   0xefc7:0x29e9727
  40c5ae:	sahf   
  40c5af:	add    al,0x0
  40c5b1:	jmp    0xdb434cb
  40c5b6:	sbb    al,0x7e
  40c5b8:	repz iret 
  40c5ba:	cs mov al,0x50
  40c5bd:	pop    ds
  40c5be:	sar    DWORD PTR [ebp-0x64],1
  40c5c1:	mov    ch,0x2d
  40c5c3:	mov    al,0xfe
  40c5c5:	sar    DWORD PTR [ecx],0x53
  40c5c8:	add    cl,ch
  40c5ca:	sbb    ch,BYTE PTR [edi+0x73]
  40c5cd:	cmc    
  40c5ce:	pmaddwd mm1,QWORD PTR [edx-0x6b651656]
  40c5d5:	xchg   dh,ch
  40c5d7:	scas   eax,DWORD PTR es:[edi]
  40c5d8:	jmp    0x63b0:0x5a6f2beb
  40c5df:	add    eax,DWORD PTR [eax]
  40c5e1:	adc    al,0xa2
  40c5e3:	fwait
  40c5e4:	add    BYTE PTR [ebp-0x16fffdf7],0x6b
  40c5eb:	pop    eax
  40c5ec:	push   edi
  40c5ed:	mov    ds:0xe90001a5,al
  40c5f2:	add    BYTE PTR [eax],al
  40c5f4:	imul   edi,DWORD PTR [ebx-0x9],0xffffffc1
  40c5f8:	data16 xor al,0x40
  40c5fb:	jmp    0x480c4c1d
  40c600:	cs mov al,0x4f
  40c603:	es push esp
  40c605:	stos   BYTE PTR es:[edi],al
  40c606:	jmp    0xe85ff794
  40c60b:	(bad)  
  40c60c:	jmp    FWORD PTR [edi-0xbfb2502]
  40c612:	mov    edi,0xf8055d73
  40c617:	fnstcw WORD PTR [edx]
  40c619:	test   bl,0xf
  40c61c:	out    dx,al
  40c61d:	scas   eax,DWORD PTR es:[edi]
  40c61e:	aas    
  40c61f:	add    BYTE PTR [edi],dh
  40c621:	pop    esi
  40c622:	add    dh,BYTE PTR [ebp-0x4a]
  40c625:	mov    bh,0xbe
  40c627:	inc    esi
  40c628:	dec    edi
  40c629:	jne    0x40c69b
  40c62b:	call   0x8d7f8887
  40c630:	jmp    0x8fd4acc3
  40c635:	add    al,BYTE PTR [eax]
  40c637:	sub    ecx,0x6a
  40c63a:	dec    BYTE PTR [ecx+edi*8+0x63fffc6d]
  40c641:	push   edx
  40c642:	mov    eax,esi
  40c644:	dec    esp
  40c645:	std    
  40c646:	repnz add BYTE PTR [esi+eax*4-0x42],al
  40c64b:	je     0x40c6c5
  40c64d:	sub    eax,0x75dfe8c5
  40c652:	(bad)  
  40c653:	dec    edi
  40c655:	jno    0x40c5de
  40c657:	jne    0x40c659
  40c659:	add    BYTE PTR [ebx+edi*2],cl
  40c65c:	hlt    
  40c65d:	jle    0x40c6a7
  40c65f:	popf   
  40c660:	cld    
  40c661:	jbe    0x40c647
  40c663:	int3   
  40c664:	cld    
  40c665:	push   edi
  40c666:	mov    ds:0xc98d07ea,eax
  40c66b:	mov    fs,esi
  40c66d:	fdivr  st,st(7)
  40c66f:	add    DWORD PTR [eax],eax
  40c671:	test   BYTE PTR [ebp+esi*8-0x561efce3],dh
  40c678:	mov    esi,eax
  40c67a:	cmp    eax,DWORD PTR [ebx-0x8a31785]
  40c680:	repnz add ah,dh
  40c683:	test   DWORD PTR [esi-0x9d30f8c],edi
  40c689:	call   0x3f3e15
  40c68e:	aas    
  40c68f:	jmp    0xe873:0x82ceebf7
  40c696:	lods   al,BYTE PTR ds:[esi]
  40c697:	sub    esi,ecx
  40c699:	add    BYTE PTR [ebp+0x4ef5f59b],bl
  40c69f:	dec    esi
  40c6a0:	mov    bl,cl
  40c6a2:	stos   DWORD PTR es:[edi],eax
  40c6a3:	add    al,0xb2
  40c6a5:	imul   ebx,DWORD PTR [ebp-0x2eeb4e75],0x1e0042cd
  40c6af:	out    0xfe,eax
  40c6b1:	pop    esi
  40c6b2:	push   ss
  40c6b3:	pop    ebp
  40c6b4:	push   ecx
  40c6b5:	pop    ebx
  40c6b6:	push   esp
  40c6b7:	pop    ecx
  40c6b8:	pop    es
  40c6b9:	add    al,dl
  40c6bb:	and    BYTE PTR [eax-0x7effff80],ah
  40c6c1:	sub    eax,DWORD PTR [edi]
  40c6c3:	add    BYTE PTR [ebp-0x8a8a5f8],bl
  40c6c9:	pop    es
  40c6ca:	pushf  
  40c6cb:	pop    ss
  40c6cc:	dec    ebx
  40c6cd:	je     0x40c67f
  40c6cf:	xor    dh,BYTE PTR [esi-0x50]
  40c6d2:	ret    
  40c6d3:	jae    0x40c669
  40c6d5:	xor    BYTE PTR [edi+eiz*8+0x2840f],dh
  40c6dc:	inc    esi
  40c6dd:	cdq    
  40c6de:	repz mov edi,0x425ea2fe
  40c6e4:	popf   
  40c6e5:	rol    bl,0xe
  40c6e8:	sbb    DWORD PTR [edi+0x3a9d0001],esp
  40c6ee:	in     al,0xab
  40c6f0:	pop    esi
  40c6f1:	fwait
  40c6f2:	pop    ecx
  40c6f3:	fistp  WORD PTR [edx+0x190f029b]
  40c6f9:	push   edi
  40c6fa:	add    al,0x0
  40c6fc:	popf   
  40c6fd:	add    BYTE PTR [ebx],0x8
  40c700:	popf   
  40c701:	fwait
  40c702:	sub    esi,DWORD PTR ss:[ebp+0x4f]
  40c706:	pop    es
  40c707:	add    BYTE PTR [ebp-0x251334ad],bl
  40c70d:	repz in al,dx
  40c70f:	ret    0xca49
  40c712:	scas   eax,DWORD PTR es:[edi]
  40c713:	xor    al,0xc9
  40c715:	add    DWORD PTR [ebx+0x45],ebx
  40c718:	popf   
  40c719:	jns    0x40c733
  40c71b:	pushf  
  40c71c:	xor    eax,0x2603e7e4
  40c721:	mov    dl,0x1
  40c723:	push   es
  40c724:	add    BYTE PTR [eax],al
  40c726:	outs   dx,BYTE PTR ds:[esi]
  40c727:	mov    ah,0x47
  40c729:	cld    
  40c72a:	test   BYTE PTR [eax-0x17],0x9b
  40c72e:	aas    
  40c72f:	jg     0x40c718
  40c731:	add    ecx,DWORD PTR [ebx-0x20a036fa]
  40c737:	add    cl,BYTE PTR [ecx]
  40c739:	cmp    BYTE PTR [esi+0x77379b7d],dl
  40c73f:	lods   al,BYTE PTR ds:[esi]
  40c740:	aad    0x9b
  40c742:	mov    BYTE PTR [ebp+ecx*8+0x90673b0],ch
  40c749:	pusha  
  40c74a:	fild   WORD PTR [edx]
  40c74c:	jmp    0x3d436453
  40c751:	adc    eax,0x5fe0ee26
  40c756:	fild   WORD PTR [edx]
  40c758:	cmp    dl,BYTE PTR [ebp-0x4b]
  40c75b:	adc    al,0xda
  40c75d:	inc    edx
  40c75e:	popf   
  40c75f:	dec    edi
  40c760:	and    DWORD PTR [eax-0x4616fdc5],0x4454e2a1
  40c76a:	popf   
  40c76b:	inc    edx
  40c76c:	cmc    
  40c76d:	aas    
  40c76e:	xchg   esi,edi
  40c770:	xor    BYTE PTR [esi],0x0
  40c773:	lods   al,BYTE PTR ds:[esi]
  40c774:	ins    DWORD PTR es:[edi],dx
  40c775:	jo     0x40c771
  40c777:	js     0x40c721
  40c779:	add    eax,esi
  40c77b:	mov    edi,0xeb25ffd4
  40c780:	pusha  
  40c781:	dec    ebx
  40c782:	cdq    
  40c783:	jns    0x40c735
  40c785:	sti    
  40c786:	pop    ss
  40c787:	mov    bl,0x51
  40c789:	add    eax,0xb4ae0000
  40c78e:	xchg   ebx,edi
  40c790:	push   es
  40c791:	inc    eax
  40c792:	add    cl,ch
  40c794:	ss in  eax,dx
  40c796:	mov    ebp,eax
  40c798:	sahf   
  40c799:	sbb    BYTE PTR [ecx+edx*1],cl
  40c79c:	sbb    DWORD PTR [ebp-0x3f36e102],0x73
  40c7a3:	in     al,0x37
  40c7a5:	repz lds ebp,FWORD PTR [ecx-0x5e76fe5e]
  40c7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ad:	js     0x40c79e
  40c7af:	adc    ah,BYTE PTR [eax-0x69b70a11]
  40c7b5:	push   edi
  40c7b6:	inc    edx
  40c7b7:	jmp    0xe8cccfe2
  40c7bc:	sahf   
  40c7bd:	mov    ah,0x4
  40c7bf:	or     ebp,edi
  40c7c1:	inc    eax
  40c7c2:	add    BYTE PTR [ecx-0x4b],ch
  40c7c5:	test   DWORD PTR [edx+0x425766dc],0x113a06e9
  40c7cf:	jmp    0x40c76f
  40c7d1:	jmp    0xf48a:0xe18ae15c
  40c7d8:	inc    esi
  40c7d9:	push   edi
  40c7da:	inc    edx
  40c7db:	jmp    0xe928b706
  40c7e0:	sahf   
  40c7e1:	popa   
  40c7e2:	pop    es
  40c7e3:	inc    ebp
  40c7e4:	fiadd  WORD PTR [edx]
  40c7e6:	mov    ebx,DWORD PTR [ecx-0xd8c3fca]
  40c7ec:	push   es
  40c7ed:	imul   esp,ebp,0x9e0000e8
  40c7f3:	push   esp
  40c7f4:	call   0xfeed05d8
  40c7f9:	push   cs
  40c7fa:	pop    ebx
  40c7fb:	inc    edi
  40c7fc:	leave  
  40c7fd:	sub    edx,DWORD PTR [ebp+0x3d725502]
  40c803:	sub    bl,0xe5
  40c806:	pushf  
  40c807:	add    al,BYTE PTR [eax]
  40c809:	pop    esp
  40c80a:	push   esp
  40c80b:	cli    
  40c80c:	dec    edi
  40c80d:	add    BYTE PTR [ebx-0x17],bl
  40c810:	pop    es
  40c811:	mov    BYTE PTR [ecx],0x5c
  40c814:	(bad)  
  40c815:	(bad)  
  40c816:	icebp  
  40c817:	add    dl,BYTE PTR [eax]
  40c819:	inc    eax
  40c81a:	mov    ah,0x79
  40c81c:	mov    esi,0x57502d74
  40c821:	call   DWORD PTR [ecx]
  40c823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c824:	mov    ecx,0xfffec504
  40c829:	addr16 adc al,0xf3
  40c82c:	aas    
  40c82d:	add    BYTE PTR [ecx],ch
  40c82f:	xor    ebx,esi
  40c831:	std    
  40c832:	fwait
  40c833:	pop    ecx
  40c834:	out    0xb4,al
  40c836:	push   esp
  40c837:	push   es
  40c838:	add    BYTE PTR [ecx+0x2d],bl
  40c83b:	jnp    0x40c7fb
  40c83d:	jle    0x40c7f9
  40c83f:	push   es
  40c840:	fdiv   DWORD PTR [esp+eax*8-0x2]
  40c844:	mov    al,bh
  40c846:	mov    ah,0x16
  40c848:	add    DWORD PTR [eax],eax
  40c84a:	je     0x40c7d2
  40c84c:	out    0x45,al
  40c84e:	add    edi,edi
  40c850:	inc    DWORD PTR [esp+eax*1+0x8327f2]
  40c857:	add    BYTE PTR [ecx+ebx*2],cl
  40c85a:	jb     0x40c87f
  40c85c:	mov    edi,0x41ff4ec0
  40c861:	loop   0x40c875
  40c863:	inc    eax
  40c864:	inc    esp
  40c865:	push   ebp
  40c866:	push   DWORD PTR [ebp+0x38]
  40c869:	sub    eax,0xb1b50c6
  40c86e:	inc    esp
  40c86f:	adc    DWORD PTR [esi+edi*8+0x47],esi
  40c873:	(bad)  
  40c874:	iret   
  40c875:	pop    ecx
  40c876:	cmp    eax,ecx
  40c878:	out    dx,al
  40c879:	(bad)  
  40c87c:	jl     0x40c8b8
  40c87e:	(bad)  
  40c87f:	jmp    ecx
  40c881:	lods   eax,DWORD PTR ds:[esi]
  40c882:	std    
  40c883:	adc    eax,0x40141c
  40c888:	popf   
  40c889:	jo     0x40c8d4
  40c88b:	mov    ah,BYTE PTR [eax+0x38]
  40c88e:	mov    esp,0x579b95c1
  40c893:	mov    ecx,ecx
  40c895:	sbb    al,0xa7
  40c897:	test   DWORD PTR [edi-0x64],0xd8d2a59a
  40c89e:	lods   eax,DWORD PTR ds:[esi]
  40c89f:	sbb    ebp,0xffffff87
  40c8a2:	adc    ch,BYTE PTR [edx-0x63]
  40c8a5:	adc    ecx,DWORD PTR ds:0x9b10b2fe
  40c8ab:	(bad)  
  40c8ac:	pop    ebp
  40c8ad:	fwait
  40c8ae:	add    dh,BYTE PTR [eax+0x3201149c]
  40c8b4:	pop    ebp
  40c8b5:	xor    al,0xa8
  40c8b7:	pop    esp
  40c8b8:	pop    esi
  40c8b9:	add    edx,edi
  40c8bb:	inc    BYTE PTR [eax]
  40c8bd:	add    BYTE PTR [edx+0x9bf8598],cl
  40c8c3:	cli    
  40c8c4:	sbb    DWORD PTR [eax],eax
  40c8c6:	jp     0x40c876
  40c8c8:	rcl    BYTE PTR [ecx],cl
  40c8ca:	fstp   QWORD PTR [ebx-0x6438b397]
  40c8d0:	add    ah,BYTE PTR [esi-0x5c]
  40c8d3:	mov    bl,0x35
  40c8d5:	adc    al,0x26
  40c8d7:	repz out dx,eax
  40c8d9:	adc    BYTE PTR [ecx-0x62baad66],0x9b
  40c8e0:	xor    eax,0x2ef1608
  40c8e5:	sub    BYTE PTR [esi+0x6ee0ac73],bl
  40c8eb:	pop    ebx
  40c8ec:	shl    bh,0xff
  40c8ef:	ja     0x40c89d
  40c8f1:	(bad)  
  40c8f2:	outs   dx,BYTE PTR ds:[esi]
  40c8f3:	pop    ebx
  40c8f4:	rol    DWORD PTR [ebx],0x9d
  40c8f7:	push   cs
  40c8f8:	jns    0x40c8e5
  40c8fa:	push   ds
  40c8fb:	jg     0x40c918
  40c8fd:	push   ebx
  40c8fe:	jae    0x40c96d
  40c900:	(bad)  
  40c901:	push   cs
  40c902:	dec    ebx
  40c903:	add    bl,BYTE PTR [edx+0x1a]
  40c906:	lahf   
  40c907:	ja     0x40c8ac
  40c909:	mov    esp,DWORD PTR [edx+0x77]
  40c90c:	sbb    al,0x77
  40c90e:	out    0x2d,al
  40c910:	test   eax,0x50efe203
  40c915:	in     al,dx
  40c916:	aad    0xa8
  40c918:	cmp    eax,0x988a597f
  40c91d:	fwait
  40c91e:	xchg   BYTE PTR [edi],al
  40c920:	jmp    0x40c925
  40c922:	add    BYTE PTR [eax],al
  40c924:	sbb    edx,eax
  40c926:	fwait
  40c927:	out    0x44,al
  40c929:	add    ebp,DWORD PTR [edi+eax*2+0x15]
  40c92d:	push   edx
  40c92e:	push   ss
  40c92f:	test   dl,0x7
  40c932:	adc    BYTE PTR [ebp-0x7454895d],ch
  40c938:	jmp    0x6d02:0x9f0eca9a
  40c93f:	les    edx,FWORD PTR [ecx]
  40c941:	cld    
  40c942:	out    dx,al
  40c943:	rol    BYTE PTR [edx],0xac
  40c946:	jmp    0x40c979
  40c948:	ss dec ecx
  40c94a:	inc    edx
  40c94b:	mov    ebx,0x98e7735f
  40c950:	jb     0x40c9a0
  40c952:	bound  ebx,QWORD PTR [edi-0x7d3f60e1]
  40c958:	inc    esi
  40c959:	fcomip st,st(1)
  40c95b:	add    ebx,DWORD PTR [ebp+0x4a551f53]
  40c961:	out    dx,al
  40c962:	sub    al,0x60
  40c964:	fild   WORD PTR [edx]
  40c966:	je     0x40c99f
  40c968:	add    DWORD PTR [esi],0x137947a7
  40c96e:	jmp    0xe7da800e
  40c973:	add    ebx,DWORD PTR [ecx]
  40c975:	ret    
  40c976:	cld    
  40c977:	frstor [edi]
  40c979:	aas    
  40c97a:	lds    ecx,FWORD PTR [edi]
  40c97c:	adc    ch,BYTE PTR [edi]
  40c97e:	add    ch,cl
  40c980:	xchg   esi,eax
  40c981:	jne    0x40c9f6
  40c983:	lds    ebp,FWORD PTR [edx+0xd4379]
  40c989:	add    BYTE PTR [ebp+0x415d0d9a],dl
  40c98f:	test   eax,0x2b67518a
  40c994:	and    al,0xf5
  40c996:	sbb    ebp,DWORD PTR [ecx+0x43bfed74]
  40c99c:	and    al,0xd9
  40c99e:	push   ebx
  40c99f:	inc    ebx
  40c9a0:	and    al,0xd1
  40c9a2:	es shr al,1
  40c9a5:	call   0x72446548
  40c9aa:	mov    bl,dh
  40c9ac:	adc    ebp,DWORD PTR [eax-0x7e]
  40c9af:	fimul  WORD PTR [edi]
  40c9b1:	pop    es
  40c9b2:	lahf   
  40c9b3:	add    al,BYTE PTR [eax]
  40c9b5:	ficomp WORD PTR [ebx]
  40c9b7:	loope  0x40c9b9
  40c9b9:	jmp    0x9229195c
  40c9be:	jo     0x40c9c1
  40c9c0:	add    BYTE PTR [ebp+0x5e],ch
  40c9c3:	clc    
  40c9c4:	sbb    DWORD PTR [edi-0x64],0x2
  40c9c8:	add    BYTE PTR [ebx-0x60],dl
  40c9cb:	jne    0x40ca10
  40c9cd:	add    eax,0x196852bd
  40c9d2:	nop
  40c9d3:	xchg   edx,eax
  40c9d4:	aaa    
  40c9d5:	shl    DWORD PTR [ebp-0x2b390156],0x43
  40c9dc:	and    al,0x49
  40c9de:	jmp    0xd981caff
  40c9e3:	push   esi
  40c9e4:	inc    edx
  40c9e5:	jmp    0xf898d7e1
  40c9ea:	fiadd  WORD PTR [edx]
  40c9ec:	mov    ebx,DWORD PTR [ecx-0x52e40000]
  40c9f2:	push   cs
  40c9f3:	ins    DWORD PTR es:[edi],dx
  40c9f4:	add    BYTE PTR [eax+eax*1],0xe9
  40c9f8:	test   DWORD PTR ds:0x42f50018,0x22f18b00
  40ca02:	adc    DWORD PTR [eax-0xc],eax
  40ca05:	cdq    
  40ca06:	mov    ch,0x0
  40ca08:	hlt    
  40ca09:	add    dh,BYTE PTR [ebp+0x5]
  40ca0c:	cmp    bl,BYTE PTR [ecx+edx*8+0x33]
  40ca10:	dec    edx
  40ca11:	xor    esp,0x23d780f
  40ca17:	add    ah,dh
  40ca19:	mov    bh,BYTE PTR [ebp-0x6b]
  40ca1c:	les    eax,FWORD PTR [edx]
  40ca1e:	test   al,0x20
  40ca20:	or     BYTE PTR [ebx+eax*4],al
  40ca23:	or     eax,0x424a94
  40ca28:	in     al,0x29
  40ca2a:	and    DWORD PTR [eax+esi*2],0xfffffffe
  40ca2e:	(bad)  
  40ca2f:	push   esp
  40ca31:	mov    dl,BYTE PTR [esi-0x7bfd4b6b]
  40ca37:	ror    BYTE PTR [ecx],0xeb
  40ca3a:	mov    WORD PTR [eax+ebp*2-0x7bfffcfe],?
  40ca41:	mov    ch,BYTE PTR [eax]
  40ca43:	sti    
  40ca44:	xchg   ebx,eax
  40ca45:	pop    ecx
  40ca46:	xor    DWORD PTR fs:[eax-0x7bf9215e],0x2
  40ca4e:	add    BYTE PTR [edx+ebx*4+0x4],dh
  40ca52:	adc    eax,0xe800008d
  40ca57:	(bad)
  40ca5a:	je     0x40ca5e
  40ca5c:	lea    ecx,[eax+ebp*4-0x6a]
  40ca60:	out    0x4f,al
  40ca62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca63:	(bad)  
  40ca64:	dec    DWORD PTR [eax+edi*2-0xcafcd5e]
  40ca6b:	adc    al,BYTE PTR [eax-0x73017bee]
  40ca71:	dec    esp
  40ca72:	pop    eax
  40ca73:	xchg   esi,eax
  40ca74:	add    eax,eax
  40ca76:	popf   
  40ca77:	jmp    0xbff5:0x9bb7039e
  40ca7e:	xchg   DWORD PTR [ecx-0x63d04566],ebx
  40ca84:	add    ch,al
  40ca86:	mov    eax,DWORD PTR ds:[ebx]
  40ca89:	add    BYTE PTR [ebx],cl
  40ca8b:	lahf   
  40ca8c:	loop   0x40ca39
  40ca8e:	pop    esi
  40ca8f:	fwait
  40ca90:	adc    dh,BYTE PTR [eax+eiz*4-0x2d]
  40ca94:	add    al,BYTE PTR [eax]
  40ca96:	popf   
  40ca97:	sbb    ebx,DWORD PTR ds:0x76aee214
  40ca9d:	adc    ebx,DWORD PTR [ebp-0x65]
  40caa0:	sbb    al,0x1
  40caa2:	and    BYTE PTR [eax-0x22],ah
  40caa5:	arpl   WORD PTR [ebp-0x3d],bp
  40caa8:	jmp    0x9c4228ff
  40caad:	stos   BYTE PTR es:[edi],al
  40caae:	mov    dl,0xdc
  40cab0:	test   eax,0x22bf598c
  40cab5:	push   eax
  40cab6:	aaa    
  40cab7:	fwait
  40cab8:	sbb    al,0x2
  40caba:	add    BYTE PTR [eax],al
  40cabc:	mov    ds:0xdd115aae,al
  40cac1:	fwait
  40cac2:	jge    0x40cabb
  40cac4:	sbb    BYTE PTR [ebp+ebp*1+0xeacf20a],ah
  40cacb:	aam    0xaf
  40cacd:	pop    ebx
  40cace:	add    dl,BYTE PTR [edi+0x7a]
  40cad1:	push   0xc485011d
  40cad6:	lods   al,BYTE PTR ds:[esi]
  40cad7:	(bad)  
  40cad8:	push   0xffffffe5
  40cada:	rol    DWORD PTR [ebx-0x47],0xa8
  40cade:	add    edi,edi
  40cae0:	outs   dx,BYTE PTR ds:[esi]
  40cae1:	xor    BYTE PTR [eax],ch
  40cae3:	and    al,0xa9
  40cae5:	shr    BYTE PTR [esi],cl
  40cae7:	add    DWORD PTR [ebp+0x797b839b],ebx
  40caed:	retf   
  40caee:	adc    cl,BYTE PTR [edi]
  40caf0:	and    BYTE PTR [edx],al
  40caf2:	adc    eax,DWORD PTR [ebx]
  40caf4:	popf   
  40caf5:	add    dl,BYTE PTR [ebx]
  40caf7:	push   es
  40caf8:	mov    ch,0x29
  40cafa:	fnstsw WORD PTR [edx+0x1b]
  40cafd:	call   0x406f:0xa51bb171
  40cb04:	mov    ecx,0x9bc46412
  40cb09:	jle    0x40cb32
  40cb0b:	add    ebx,DWORD PTR [ebp-0x417fa3fe]
  40cb11:	add    ch,dl
  40cb13:	add    ebx,DWORD PTR [ebp+0x2cd1b52]
  40cb19:	and    DWORD PTR [edx],esi
  40cb1b:	add    ebx,DWORD PTR [ebp+0x30287e]
  40cb21:	add    BYTE PTR [edi+0x7e6329a4],bl
  40cb27:	push   esi
  40cb28:	test   eax,0x360c3703
  40cb2d:	hlt    
  40cb2e:	ret    
  40cb2f:	push   cs
  40cb30:	jmp    0x6a432848
  40cb35:	lods   al,BYTE PTR ds:[esi]
  40cb36:	popf   
  40cb37:	das    
  40cb38:	out    dx,eax
  40cb39:	fwait
  40cb3a:	out    0xd6,eax
  40cb3c:	jmp    0x85f8:0xc53e1503
  40cb43:	add    ch,al
  40cb45:	add    ebx,DWORD PTR [ebp+0x10030182]
  40cb4b:	(bad)  
  40cb4c:	cmc    
  40cb4d:	xor    BYTE PTR [ebp+0x46efcb77],dl
  40cb53:	inc    eax
  40cb54:	jmp    0xf95b7701
  40cb59:	xchg   ebp,eax
  40cb5a:	fadd   QWORD PTR [edx]
  40cb5c:	shl    eax,0xcd
  40cb5f:	add    ch,cl
  40cb61:	test   al,0xd1
  40cb63:	cli    
  40cb64:	jae    0x40caf5
  40cb66:	jle    0x40cb0e
  40cb68:	call   0xffb66870
  40cb6d:	bound  eax,QWORD PTR fs:[eax]
  40cb70:	add    ebp,ecx
  40cb72:	sahf   
  40cb73:	call   0xceeb:0x29fc554
  40cb7a:	push   es
  40cb7b:	jp     0x40cb79
  40cb7d:	xchg   esi,eax
  40cb7e:	cmc    
  40cb7f:	jg     0x40cb40
  40cb81:	ficomp WORD PTR [ebx+0xe8ffc1]
  40cb87:	add    BYTE PTR [esi-0x760e895d],bl
  40cb8d:	push   es
  40cb8e:	xor    al,0x45
  40cb90:	pop    ecx
  40cb91:	add    bh,bh
  40cb93:	idiv   dl
  40cb95:	sbb    edi,DWORD PTR [ebx]
  40cb97:	dec    eax
  40cb98:	pop    eax
  40cb99:	add    ch,al
  40cb9b:	dec    ebp
  40cb9c:	dec    esi
  40cb9d:	add    al,BYTE PTR [eax]
  40cb9f:	fs push 0xffffffdf
  40cba2:	imul   ecx
  40cba4:	sahf   
  40cba5:	add    ch,al
  40cba7:	mov    dh,0xf1
  40cba9:	add    DWORD PTR [eax],eax
  40cbab:	jno    0x40cb37
  40cbad:	fimul  WORD PTR [esi]
  40cbaf:	cmc    
  40cbb0:	lahf   
  40cbb1:	repz test BYTE PTR [ebp-0x62],dl
  40cbb5:	add    al,BYTE PTR [eax]
  40cbb7:	je     0x40cc2b
  40cbb9:	fisub  WORD PTR [ebx]
  40cbbb:	mov    ecx,0x8152c8b1
  40cbc0:	push   ds
  40cbc1:	pop    eax
  40cbc2:	inc    edx
  40cbc3:	jmp    0xcdc441b9
  40cbc8:	xchg   esi,eax
  40cbc9:	add    al,BYTE PTR [eax]
  40cbcb:	jmp    0x3d066be
  40cbd0:	sahf   
  40cbd1:	add    al,BYTE PTR [ebp+0x438e7529]
  40cbd7:	or     eax,0x55beb6a
  40cbdc:	jb     0x40cc0d
  40cbde:	ins    BYTE PTR es:[edi],dx
  40cbdf:	inc    ebx
  40cbe0:	cwde   
  40cbe1:	jne    0x40cc26
  40cbe3:	add    eax,0x68527d
  40cbe8:	fwait
  40cbe9:	dec    edi
  40cbea:	inc    ebx
  40cbeb:	sub    al,BYTE PTR [eax]
  40cbed:	add    BYTE PTR [edx+esi*8-0xb],ch
  40cbf1:	dec    DWORD PTR [ebx]
  40cbf3:	sub    DWORD PTR [ebx+0x24],eax
  40cbf6:	in     al,0x4e
  40cbf8:	push   ebx
  40cbf9:	push   0x45
  40cbfb:	pop    es
  40cbfc:	pop    eax
  40cbfd:	lods   al,BYTE PTR ds:[esi]
  40cbfe:	ja     0x40cbfe
  40cc00:	(bad)  
  40cc01:	adc    eax,0x4010cc
  40cc06:	jg     0x40cbfa
  40cc08:	and    esp,DWORD PTR [ecx*4-0x72e7dbbe]
  40cc0f:	repnz and ebx,DWORD PTR [esi+ebx*4]
  40cc13:	pop    ebx
  40cc14:	cmp    ebx,eax
  40cc16:	icebp  
  40cc17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc18:	push   esp
  40cc19:	push   ecx
  40cc1b:	push   cs
  40cc1c:	adc    eax,DWORD PTR [eax-0xc]
  40cc1f:	xchg   DWORD PTR [ebx+edx*2],ecx
  40cc22:	jns    0x40cc66
  40cc24:	and    al,0x20
  40cc26:	adc    al,0x9
  40cc28:	add    bh,bh
  40cc2a:	icebp  
  40cc2b:	adc    dl,BYTE PTR [ecx]
  40cc2d:	inc    eax
  40cc2e:	mov    ah,0x27
  40cc30:	cmp    al,0xa0
  40cc32:	out    0x3e,al
  40cc34:	add    BYTE PTR [ecx],bh
  40cc36:	sub    bl,al
  40cc38:	push   ss
  40cc39:	je     0x40cbfd
  40cc3b:	pop    ebx
  40cc3c:	jb     0x40cc62
  40cc3e:	pushf  
  40cc3f:	pop    ebx
  40cc40:	aad    0xff
  40cc42:	add    bl,al
  40cc44:	es call ebx
  40cc47:	push   eax
  40cc48:	call   edi
  40cc4a:	por    mm4,QWORD PTR [ebx]
  40cc4d:	adc    al,0x8b
  40cc4f:	repnz and edx,DWORD PTR [eax]
  40cc52:	add    BYTE PTR [eax],al
  40cc54:	pushf  
  40cc55:	fwait
  40cc56:	sbb    BYTE PTR [edx],al
  40cc58:	test   BYTE PTR [esi-0x2c7af385],al
  40cc5e:	or     bh,bh
  40cc60:	xchg   ecx,eax
  40cc61:	jmp    0x9a9a:0xab9d43ab
  40cc68:	inc    esi
  40cc69:	lods   al,BYTE PTR ds:[esi]
  40cc6a:	add    dl,BYTE PTR [edi+0x45]
  40cc6d:	mov    bl,BYTE PTR [edx+0x3f164afe]
  40cc73:	and    al,0x92
  40cc75:	clc    
  40cc76:	inc    ebp
  40cc77:	pop    ebx
  40cc78:	mov    DWORD PTR es:[edi-0x3e],0x8b4faba5
  40cc80:	cmp    ebx,ebx
  40cc82:	push   edx
  40cc83:	push   esi
  40cc84:	outs   dx,BYTE PTR ds:[esi]
  40cc85:	or     DWORD PTR [edx+esi*1-0xa],0x12f2d183
  40cc8d:	mov    DWORD PTR [esi-0x41],edi
  40cc90:	call   0x4dac:0x2ffc627
  40cc97:	push   0x32ba2
  40cc9c:	repnz sahf 
  40cc9e:	(bad)  
  40cc9f:	adc    DWORD PTR [ebp-0x55],ebx
  40cca2:	ja     0x40cce8
  40cca4:	loope  0x40cd01
  40cca6:	icebp  
  40cca7:	fcmovu st,st(2)
  40cca9:	xchg   esi,eax
  40ccaa:	mov    ds:0x52ab5d11,al
  40ccaf:	push   DWORD PTR [eax-0x62bfee91]
  40ccb5:	and    al,0xab
  40ccb7:	cmp    al,BYTE PTR [eax]
  40ccb9:	add    BYTE PTR [ebx+0x50394857],bh
  40ccbf:	out    0x24,eax
  40ccc1:	dec    esi
  40ccc2:	push   ss
  40ccc3:	test   al,0x6d
  40ccc5:	test   ch,bl
  40ccc7:	jg     0x40cd0c
  40ccc9:	pushw  ds
  40cccb:	mov    bl,0xd7
  40cccd:	je     0x40cca5
  40cccf:	cwde   
  40ccd0:	ins    DWORD PTR es:[edi],dx
  40ccd1:	inc    edi
  40ccd2:	lahf   
  40ccd3:	sub    al,0x9c
  40ccd5:	gs or  ecx,ecx
  40ccd8:	sub    eax,0x82e017a5
  40ccde:	test   BYTE PTR [edx],al
  40cce0:	out    dx,al
  40cce1:	das    
  40cce2:	xchg   ebp,eax
  40cce3:	dec    ebx
  40cce4:	push   esp
  40cce5:	fistp  WORD PTR [edi]
  40cce7:	int    0xea
  40cce9:	cwde   
  40ccea:	mov    edx,0xbb00a885
  40ccef:	test   DWORD PTR [eax],eax
  40ccf1:	add    al,0xd1
  40ccf3:	stc    
  40ccf4:	sbb    BYTE PTR [ebp+0x43df42a9],ah
  40ccfa:	popf   
  40ccfb:	cmp    ecx,DWORD PTR [edx-0x16bb1200]
  40cd01:	cwde   
  40cd02:	mov    ds:0x3614b185,al
  40cd07:	add    eax,0x48a2b96a
  40cd0c:	shr    BYTE PTR [esi],cl
  40cd0e:	adc    DWORD PTR [esi],ebx
  40cd10:	cmp    ecx,DWORD PTR [ebp+0xa]
  40cd13:	mul    DWORD PTR [eax+0x12]
  40cd16:	pop    ebp
  40cd17:	add    dl,BYTE PTR [esi]
  40cd19:	scas   al,BYTE PTR es:[edi]
  40cd1a:	fild   WORD PTR [ebx]
  40cd1c:	cmc    
  40cd1d:	loopne 0x40cd1f
  40cd1f:	add    dl,bh
  40cd21:	sbb    ebx,DWORD PTR [edi]
  40cd23:	add    ebx,DWORD PTR [ebp-0x63d12e56]
  40cd29:	add    bl,BYTE PTR [edi-0x1]
  40cd2c:	mov    edx,0x9903a96e
  40cd31:	mov    WORD PTR [eax],fs
  40cd33:	xor    BYTE PTR [ecx+0x2c],bh
  40cd36:	jmp    0xa99b37a6
  40cd3b:	add    eax,ebp
  40cd3d:	mov    eax,0xad9d02f4
  40cd42:	push   es
  40cd43:	jns    0x40cd24
  40cd45:	ret    0x10
  40cd48:	stos   DWORD PTR es:[edi],eax
  40cd49:	mov    cl,0xcc
  40cd4b:	add    ch,BYTE PTR [edx-0x783cd7a8]
  40cd51:	add    al,0x99
  40cd53:	cmp    DWORD PTR [edi+0x2],0xffffffee
  40cd57:	ins    DWORD PTR es:[edi],dx
  40cd58:	pop    edi
  40cd59:	xor    eax,DWORD PTR [eax]
  40cd5b:	add    DWORD PTR [ebx-0x64],esi
  40cd5e:	(bad)  
  40cd5f:	out    dx,al
  40cd60:	hlt    
  40cd61:	mov    bh,0x83
  40cd63:	ret    0xf5ba
  40cd66:	cmc    
  40cd67:	in     al,0x7e
  40cd69:	ins    BYTE PTR es:[edi],dx
  40cd6a:	inc    edx
  40cd6b:	jmp    0x434ce40c
  40cd70:	clc    
  40cd71:	mov    al,ds:0x42acb114
  40cd76:	add    BYTE PTR [edi],bl
  40cd78:	aam    0xc9
  40cd7a:	ret    0x5efa
  40cd7d:	test   dl,bl
  40cd7f:	fisub  WORD PTR [edx]
  40cd81:	pusha  
  40cd82:	dec    edi
  40cd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd84:	add    BYTE PTR [eax],al
  40cd86:	fwait
  40cd87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd88:	adc    DWORD PTR [ecx],ebp
  40cd8a:	cdq    
  40cd8b:	into   
  40cd8c:	scas   eax,DWORD PTR es:[edi]
  40cd8d:	call   0x6240dd6e
  40cd92:	pusha  
  40cd93:	push   ds
  40cd94:	test   DWORD PTR [ebx+0x278afaba],ebx
  40cd9a:	mov    eax,ds:0x4f0d4d8b
  40cd9f:	xor    dl,BYTE PTR [ecx-0x7f]
  40cda2:	cmp    al,0xa2
  40cda4:	(bad)  
  40cda5:	call   0xd5a9139f
  40cdaa:	jecxz  0x40cdc4
  40cdac:	sub    DWORD PTR [eax-0x68],esp
  40cdaf:	sub    cl,BYTE PTR [ebx-0x15fe199]
  40cdb5:	jmp    0xe0b42d05
  40cdba:	inc    ebp
  40cdbb:	lea    eax,[ebx+0x57029ee9]
  40cdc1:	cwde   
  40cdc2:	sub    ebx,DWORD PTR ds:0x1901b964
  40cdc8:	add    al,0x11
  40cdca:	jo     0x40cd71
  40cdcc:	(bad)  
  40cdcd:	call   0x960053b3
  40cdd2:	popf   
  40cdd3:	push   edx
  40cdd4:	add    BYTE PTR [eax],al
  40cdd6:	mov    bh,0x91
  40cdd8:	mov    esi,0xeb1a29c3
  40cddd:	mov    ecx,DWORD PTR [ecx-0x65]
  40cde0:	push   ecx
  40cde1:	push   esi
  40cde2:	call   DWORD PTR [ebp+edx*2+0x3b]
  40cde6:	mov    edx,0x850ede
  40cdeb:	add    BYTE PTR [ebx+0x6],dh
  40cdee:	add    BYTE PTR [eax],al
  40cdf0:	(bad)  
  40cdf1:	in     al,0x73
  40cdf3:	add    BYTE PTR [ebx-0x79],dh
  40cdf6:	add    eax,DWORD PTR [ecx]
  40cdf8:	xor    al,0x3
  40cdfa:	mov    edi,DWORD PTR [ebp+0x64]
  40cdfd:	nop
  40cdfe:	inc    ebx
  40cdff:	adc    al,0xbf
  40ce01:	sahf   
  40ce02:	xchg   DWORD PTR [ebp+0x3c],edi
  40ce05:	outs   dx,BYTE PTR ds:[esi]
  40ce06:	mov    DWORD PTR [eax],0xff530334
  40ce0c:	mov    DWORD PTR [esi],ecx
  40ce0e:	lea    eax,[esi-0x14]
  40ce11:	ror    BYTE PTR [esi+eax*2-0x10c694f4],cl
  40ce18:	cmc    
  40ce19:	add    al,BYTE PTR [ecx]
  40ce1b:	inc    ebp
  40ce1c:	or     al,0xb0
  40ce1e:	(bad)  
  40ce1f:	mov    cl,dl
  40ce21:	xchg   ebx,eax
  40ce22:	and    bh,BYTE PTR [edi-0x18]
  40ce25:	or     bh,BYTE PTR [ebx+ebx*1]
  40ce28:	repz mov ebx,ecx
  40ce2b:	add    ah,dh
  40ce2d:	add    al,BYTE PTR [eax+eax*8+0x9b86c3]
  40ce34:	les    eax,FWORD PTR [edx]
  40ce36:	mov    eax,DWORD PTR [esi+0x8]
  40ce39:	dec    ebx
  40ce3a:	dec    eax
  40ce3b:	je     0x40ce42
  40ce3d:	dec    ebx
  40ce3e:	dec    eax
  40ce3f:	cmovns ecx,DWORD PTR [edx-0x423b0002]
  40ce46:	inc    esp
  40ce47:	push   0xab86b3
  40ce4c:	mov    ah,0x2
  40ce4e:	push   ebx
  40ce4f:	inc    DWORD PTR [eax]
  40ce51:	add    BYTE PTR [ebp-0x6da8f582],bl
  40ce57:	xchg   edi,eax
  40ce58:	rcl    BYTE PTR ds:0x448dabdd,cl
  40ce5e:	test   eax,0x240bc828
  40ce63:	mov    ah,0x8b
  40ce65:	jl     0x40ce0c
  40ce67:	add    ebp,edi
  40ce69:	(bad)  
  40ce6a:	push   0xffffffa5
  40ce6c:	xchg   BYTE PTR [edi-0x72d86e],bh
  40ce72:	pop    edx
  40ce73:	lods   al,BYTE PTR ds:[esi]
  40ce74:	sub    al,0x1
  40ce76:	and    BYTE PTR [esi+0x28],cl
  40ce79:	push   0x43dead
  40ce7e:	inc    edx
  40ce7f:	aad    0x7
  40ce81:	call   0x439ee7
  40ce86:	sbb    BYTE PTR [esi+edx*1+0x74],ch
  40ce8a:	sub    bh,dh
  40ce8c:	and    ecx,DWORD PTR [ebx+0x75a2f3db]
  40ce92:	jns    0x40ceb4
  40ce94:	cli    
  40ce95:	mov    ah,BYTE PTR [eax-0x41]
  40ce98:	stos   BYTE PTR es:[edi],al
  40ce99:	push   eax
  40ce9a:	and    DWORD PTR [edx+eax*1+0x3f97dd84],ebp
  40cea1:	add    DWORD PTR [edx+0x708b02af],0xffffffbb
  40cea8:	leave  
  40cea9:	inc    ebp
  40ceaa:	jno    0x40ce5a
  40ceac:	add    al,BYTE PTR [eax]
  40ceae:	popf   
  40ceaf:	xor    dh,bh
  40ceb1:	mov    ah,BYTE PTR [ebx-0x4d]
  40ceb4:	in     eax,dx
  40ceb5:	mov    BYTE PTR [eax],0x0
  40ceb8:	dec    ecx
  40ceb9:	xchg   edi,eax
  40ceba:	mov    eax,ds:0x50103d75
  40cebf:	or     al,0xc2
  40cec1:	push   ebp
  40cec2:	ds mov edx,edx
  40cec5:	inc    ebx
  40cec6:	jmp    0x86ec6c4e
  40cecb:	mov    edi,0x2ddb0231
  40ced0:	popf   
  40ced1:	(bad)  
  40ced2:	scas   al,BYTE PTR es:[edi]
  40ced3:	sti    
  40ced4:	adc    BYTE PTR [ebp-0x7862fa19],0x31
  40cedb:	adc    ah,BYTE PTR [eax]
  40cedd:	in     eax,dx
  40cede:	add    eax,0xa68983a2
  40cee3:	pop    ss
  40cee4:	push   ds
  40cee5:	call   0x7f0:0x81a721e7
  40ceec:	call   0x898840f8
  40cef1:	jecxz  0x40cef3
  40cef3:	pop    esp
  40cef4:	cmp    bh,ch
  40cef6:	call   0x418564fe
  40cefb:	dec    BYTE PTR [edx]
  40cefd:	pushf  
  40cefe:	test   al,0xad
  40cf00:	cwde   
  40cf01:	shr    BYTE PTR [eax-0x18ad6353],1
  40cf07:	inc    eax
  40cf08:	sar    DWORD PTR [ecx],cl
  40cf0a:	or     al,0xc6
  40cf0c:	call   0x278b:0x62c3da02
  40cf13:	xor    dh,bl
  40cf15:	xor    esp,DWORD PTR [edx-0x6d]
  40cf18:	pop    ds
  40cf19:	sbb    al,0xfd
  40cf1b:	add    al,0x0
  40cf1d:	add    BYTE PTR [eax-0x60d1e202],dl
  40cf23:	(bad)  
  40cf24:	(bad)  
  40cf25:	aas    
  40cf26:	test   esi,esi
  40cf28:	sti    
  40cf29:	inc    ebx
  40cf2a:	popf   
  40cf2b:	popf   
  40cf2c:	cmc    
  40cf2d:	pop    es
  40cf2e:	cmc    
  40cf2f:	std    
  40cf30:	dec    esp
  40cf31:	add    al,0x9d
  40cf33:	cmp    eax,0x651c464
  40cf38:	sbb    eax,esp
  40cf3a:	jo     0x40cefd
  40cf3c:	ret    0x1802
  40cf3f:	dec    esp
  40cf40:	fxch   st(0)
  40cf42:	pop    eax
  40cf43:	cs in  eax,0x3
  40cf46:	popf   
  40cf47:	add    al,BYTE PTR [eax]
  40cf49:	inc    ecx
  40cf4a:	sbb    al,BYTE PTR [edx]
  40cf4c:	add    ch,cl
  40cf4e:	dec    esi
  40cf4f:	add    bl,BYTE PTR [esi+0x2a]
  40cf52:	addr16 mov eax,esi
  40cf55:	jb     0x40cf3e
  40cf57:	cs dec eax
  40cf59:	mov    esi,0xa147e3aa
  40cf5e:	mov    bl,0xd7
  40cf60:	imul   ebp,ebx,0x915c1e13
  40cf66:	jb     0x40cf7f
  40cf68:	inc    eax
  40cf69:	jmp    0x144e4ab
  40cf6e:	pop    edi
  40cf6f:	mov    eax,ds:0x5c1be8ff
  40cf74:	je     0x40cf5b
  40cf76:	jo     0x40cfd4
  40cf78:	jmp    0x9eeb:0x6c466413
  40cf7f:	add    al,BYTE PTR [eax]
  40cf81:	rol    BYTE PTR [eax],cl
  40cf83:	add    BYTE PTR [esi-0x77],al
  40cf86:	inc    ebx
  40cf87:	add    eax,0x6401288d
  40cf8c:	int3   
  40cf8d:	repnz mov BYTE PTR [edi],ah
  40cf90:	xchg   ecx,eax
  40cf91:	ret    
  40cf92:	inc    ebp
  40cf93:	adc    eax,0xe900029b
  40cf98:	inc    esi
  40cf99:	aam    0x0
  40cf9b:	jmp    0x40cf3b
  40cf9d:	fwait
  40cf9e:	jae    0x40cf65
  40cfa0:	push   cs
  40cfa1:	(bad)  
  40cfa2:	jge    0x40cfc9
  40cfa4:	cmp    al,0x10
  40cfa6:	and    al,0xd9
  40cfa8:	cmp    eax,0x78810415
  40cfad:	mov    al,ds:0xb405e8ff
  40cfb2:	sbb    ch,BYTE PTR [ecx]
  40cfb4:	add    eax,0xe0bf5eb4
  40cfb9:	add    eax,DWORD PTR [eax]
  40cfbb:	mov    edi,0xa78a9321
  40cfc0:	jp     0x40d00c
  40cfc2:	dec    eax
  40cfc3:	add    BYTE PTR [ebx],ah
  40cfc5:	cmc    
  40cfc6:	and    BYTE PTR [edx-0x3a],ch
  40cfc9:	mov    WORD PTR [esp+ebx*2-0x24],?
  40cfcd:	xchg   edi,eax
  40cfce:	jae    0x40d010
  40cfd0:	mov    ah,0x62
  40cfd2:	jne    0x40cfd8
  40cfd4:	mov    ebp,?
  40cfd6:	loop   0x40cfd8
  40cfd8:	test   BYTE PTR [esi+edi*4-0x414a7f8b],al
  40cfdf:	jmp    0x40d035
  40cfe1:	retf   0x6c44
  40cfe4:	ja     0x40cfe5
  40cfe6:	(bad)  
  40cfe7:	inc    DWORD PTR [eax]
  40cfe9:	add    BYTE PTR [ebx-0xc],bh
  40cfec:	and    edx,DWORD PTR [eax]
  40cfee:	stc    
  40cfef:	loope  0x40d04c
  40cff1:	push   eax
  40cff3:	mov    ds:0xac3ff0e,eax
  40cff8:	call   0x473755
  40cffd:	test   DWORD PTR [edi+edx*4],0xdb0cf7be
  40d004:	pop    ebp
  40d005:	ret    0xff4c
  40d008:	push   eax
  40d009:	push   ebx
  40d00a:	xchg   ebx,eax
  40d00b:	jno    0x40d089
  40d00d:	or     BYTE PTR [edi],dh
  40d00f:	mov    edi,0xfa5806c5
  40d014:	aas    
  40d015:	add    BYTE PTR [ecx+ebx*2],cl
  40d018:	mov    DWORD PTR [ecx],eax
  40d01a:	add    al,0x88
  40d01c:	inc    edx
  40d01d:	and    al,0x10
  40d01f:	mov    al,0xd9
  40d021:	mov    DWORD PTR [edx],0xf440739f
  40d027:	ret    
  40d028:	add    eax,0x3ef124
  40d02d:	mov    DWORD PTR [edx-0x63a17716],ecx
  40d033:	lea    ebx,[esp+ebp*2-0x4d]
  40d037:	inc    esp
  40d038:	jo     0x40d03a
  40d03a:	sar    dh,0xff
  40d03d:	imul   ebx,DWORD PTR [ebp+0x65458bae],0x49458b51
  40d047:	adc    bh,BYTE PTR [esi]
  40d049:	jl     0x40d06f
  40d04b:	cmp    eax,DWORD PTR [edi+edi*8-0x574e0000]
  40d052:	mov    ebx,DWORD PTR [ebp+0x2a921]
  40d058:	(bad)
  40d05c:	adc    DWORD PTR [ebx],eax
  40d05e:	xor    al,0xff
  40d060:	or     eax,ecx
  40d062:	test   BYTE PTR [edx+eiz*8-0x2572cd45],0xbb
  40d06a:	stos   BYTE PTR es:[edi],al
  40d06b:	test   BYTE PTR [ecx+0x758302ab],0xa7
  40d072:	push   ss
  40d073:	add    edx,DWORD PTR [edx+ecx*4]
  40d076:	push   ss
  40d077:	pop    edi
  40d078:	push   ss
  40d079:	push   0x39
  40d07b:	pop    ecx
  40d07c:	pop    edi
  40d07d:	xchg   esp,eax
  40d07e:	add    dl,BYTE PTR [esi+0x26]
  40d081:	mov    ebx,0xab9d12aa
  40d086:	add    dh,dh
  40d088:	fld    DWORD PTR [edi]
  40d08a:	or     al,0x1
  40d08c:	mov    cl,0xa1
  40d08e:	xor    al,0xe8
  40d090:	jmp    0x3c62:0x16fe9dc7
  40d097:	ret    0xab99
  40d09a:	popf   
  40d09b:	mov    ch,0x1d
  40d09d:	lods   al,BYTE PTR ds:[esi]
  40d09e:	add    al,BYTE PTR [eax]
  40d0a0:	fisubr DWORD PTR [ecx-0x54a28b1e]
  40d0a6:	lds    eax,FWORD PTR [ebp-0x6b]
  40d0a9:	(bad)  
  40d0aa:	pop    ss
  40d0ab:	inc    eax
  40d0ac:	popf   
  40d0ad:	jae    0x40d12a
  40d0af:	jecxz  0x40d0a3
  40d0b1:	adc    BYTE PTR [esi-0x7effff8b],bl
  40d0b7:	xor    DWORD PTR [ebx-0x1d],0xffffffe2
  40d0bb:	add    ah,BYTE PTR [esi-0x3a]
  40d0be:	pusha  
  40d0bf:	or     bl,ch
  40d0c1:	mov    dl,BYTE PTR [edx+0x16382a02]
  40d0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c8:	mov    bh,0x34
  40d0ca:	push   ss
  40d0cb:	dec    eax
  40d0cc:	cmc    
  40d0cd:	xor    dl,BYTE PTR [ebx+0x31]
  40d0d0:	push   ecx
  40d0d1:	lods   al,BYTE PTR ds:[esi]
  40d0d2:	xchg   edi,eax
  40d0d3:	add    ch,cl
  40d0d5:	mov    bl,BYTE PTR [ecx-0xe]
  40d0d8:	popa   
  40d0d9:	xchg   ebx,eax
  40d0da:	adc    eax,0x76ab2510
  40d0df:	std    
  40d0e0:	call   0xe157f6e8
  40d0e5:	mov    ecx,fs
  40d0e7:	call   0x4774:0x3e0e9563
  40d0ee:	lods   eax,DWORD PTR ds:[esi]
  40d0ef:	jmp    FWORD PTR [ebx+0x7e]
  40d0f2:	repnz add ch,cl
  40d0f5:	add    ecx,ebp
  40d0f7:	(bad)  
  40d0f8:	stc    
  40d0f9:	stos   BYTE PTR es:[edi],al
  40d0fa:	dec    edi
  40d0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fc:	in     eax,0x9d
  40d0fe:	push   ds
  40d0ff:	ret    0x4754
  40d102:	push   edx
  40d103:	pmullw mm1,QWORD PTR [ecx+0x10539987]
  40d10a:	push   ss
  40d10b:	iret   
  40d10c:	clc    
  40d10d:	cmc    
  40d10e:	jp     0x40d112
  40d110:	push   ss
  40d111:	popf   
  40d112:	dec    eax
  40d113:	add    eax,0xf2ba034
  40d118:	mov    cl,0x26
  40d11a:	add    BYTE PTR [eax],al
  40d11c:	pop    edx
  40d11d:	add    ebx,esp
  40d11f:	jecxz  0x40d13c
  40d121:	psubw  mm0,QWORD PTR [eax-0x62c1fc25]
  40d128:	lock add al,0xc
  40d12b:	pushf  
  40d12c:	pop    ss
  40d12d:	aas    
  40d12e:	icebp  
  40d12f:	and    eax,0x9ec00e2
  40d134:	push   ds
  40d135:	mov    esi,0xc01dd0ff
  40d13a:	add    DWORD PTR [edi+0x222b0298],esp
  40d140:	es push ecx
  40d142:	sub    ecx,0xffffff9e
  40d145:	add    dh,BYTE PTR [eax-0x11e0a18]
  40d14b:	xchg   esi,eax
  40d14c:	sbb    DWORD PTR [ecx-0x62f91602],ebx
  40d152:	loop   0x40d192
  40d154:	adc    ah,dl
  40d156:	mov    edi,0x44d9d7fa
  40d15b:	sub    eax,0xe97f8016
  40d160:	sahf   
  40d161:	add    cl,BYTE PTR [ecx-0x167da9a]
  40d167:	jmp    0xaf004005
  40d16c:	sar    BYTE PTR [ebx],0xc9
  40d16f:	sub    ecx,DWORD PTR [ebp-0x5eef7cfe]
  40d175:	test   eax,0x9909f60a
  40d17a:	push   esp
  40d17b:	bound  ebp,QWORD PTR ds:0xf9eb85
  40d181:	add    BYTE PTR [ebx],ch
  40d183:	aas    
  40d184:	lock cmp DWORD PTR [eax],esi
  40d187:	out    dx,eax
  40d188:	cmp    ebx,0xffffffde
  40d18b:	add    cl,BYTE PTR [ebp-0x17b7d6dc]
  40d191:	jmp    0x40d131
  40d193:	add    al,BYTE PTR [eax]
  40d195:	mov    al,0x5d
  40d197:	das    
  40d198:	mov    eax,ebp
  40d19a:	outs   dx,DWORD PTR ds:[esi]
  40d19b:	xor    DWORD PTR [ebp-0xb7fedc],ecx
  40d1a1:	sbb    al,0xa9
  40d1a3:	xchg   edi,eax
  40d1a4:	adc    al,0x6d
  40d1a6:	or     al,0xd8
  40d1a8:	jmp    DWORD PTR [ecx+0x63]
  40d1ab:	call   0x0:0x2a3d1c8a
  40d1b2:	or     DWORD PTR [eax+eax*4],eax
  40d1b5:	ror    esi,0xeb
  40d1b8:	jg     0x40d150
  40d1ba:	dec    esp
  40d1bb:	add    eax,DWORD PTR [ecx+0x6245d5d1]
  40d1c1:	(bad)  
  40d1c2:	adc    eax,0x5791e7d4
  40d1c7:	add    DWORD PTR [eax],eax
  40d1c9:	leave  
  40d1ca:	jbe    0x40d1cb
  40d1cc:	push   DWORD PTR [edx]
  40d1ce:	jge    0x40d1b9
  40d1d0:	pop    es
  40d1d1:	mov    eax,DWORD PTR [ebp-0x17fe5827]
  40d1d7:	or     al,0xd1
  40d1d9:	call   0xb8c27587
  40d1de:	popa   
  40d1df:	push   0x0
  40d1e1:	shr    DWORD PTR [ecx+ecx*2+0xee75],1
  40d1e8:	or     eax,0xe7088d00
  40d1ed:	inc    edx
  40d1ee:	add    BYTE PTR [ecx-0xb],al
  40d1f1:	jl     0x40d1f1
  40d1f3:	add    BYTE PTR [ebx+eax*1+0x4b4d972],al
  40d1fa:	ret    
  40d1fb:	xor    DWORD PTR [edx],0x3
  40d1fe:	jne    0x40d21b
  40d200:	sbb    al,0x43
  40d202:	add    BYTE PTR [eax],al
  40d204:	je     0x40d1ee
  40d206:	add    BYTE PTR [edx+0x44],ch
  40d209:	in     eax,0xff
  40d20b:	push   ebp
  40d20c:	jae    0x40d19f
  40d20e:	or     dl,BYTE PTR [eax]
  40d210:	je     0x40d210
  40d212:	test   al,al
  40d214:	jns    0x40d217
  40d216:	and    DWORD PTR [esi],eax
  40d218:	ss ret 
  40d21a:	shl    DWORD PTR [eax+0x4687c035],0x3c
  40d221:	dec    ebx
  40d222:	dec    eax
  40d223:	je     0x40d232
  40d225:	and    BYTE PTR [eax+eax*1],0x87
  40d229:	in     al,0x3
  40d22b:	add    BYTE PTR [ebp-0x6c7cbb7c],bl
  40d231:	mov    BYTE PTR [ebx+0x4666253c],al
  40d237:	add    BYTE PTR [ebp+0x2a56cf8e],bl
  40d23d:	jno    0x40d1ff
  40d23f:	inc    edx
  40d240:	popf   
  40d241:	lock call 0x1d00:0x429ac914
  40d249:	test   BYTE PTR [ebx+0x5e0000c4],0xa9
  40d250:	add    dh,BYTE PTR [ebp-0x56]
  40d253:	inc    ecx
  40d254:	push   ds
  40d255:	(bad)  
  40d256:	mov    edx,0x29bf803f
  40d25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25c:	test   DWORD PTR [ecx+ebx*1],esp
  40d25f:	out    0x46,al
  40d261:	add    BYTE PTR [ebp+0x608800df],bl
  40d267:	imul   eax,DWORD PTR [edx],0xf0f4ea01
  40d26d:	out    dx,eax
  40d26e:	scas   eax,DWORD PTR es:[edi]
  40d26f:	imul   eax,DWORD PTR [edx],0x5f
  40d272:	push   ss
  40d273:	faddp  st(6),st
  40d275:	push   ebp
  40d276:	es pushf 
  40d278:	lea    eax,[ebp-0x5b]
  40d27b:	push   ebx
  40d27c:	dec    edx
  40d27d:	je     0x40d207
  40d27f:	and    BYTE PTR [edx+0x4],al
  40d282:	sbb    ah,ch
  40d284:	sysret 
  40d286:	in     eax,dx
  40d287:	pushf  
  40d288:	out    dx,eax
  40d289:	pop    ss
  40d28a:	lods   eax,DWORD PTR ds:[esi]
  40d28b:	jmp    0x40d290
  40d28d:	mov    edx,DWORD PTR [ebx-0x6b8c6eda]
  40d293:	inc    ecx
  40d294:	add    al,0x56
  40d296:	cmp    dh,BYTE PTR [edi-0x5422f00e]
  40d29c:	cmp    bl,al
  40d29e:	shl    BYTE PTR [eax],1
  40d2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a1:	push   eax
  40d2a2:	into   
  40d2a3:	in     eax,dx
  40d2a4:	mov    gs,edi
  40d2a6:	add    ebp,DWORD PTR es:[edi]
  40d2a9:	or     al,0x65
  40d2ab:	dec    edx
  40d2ac:	adc    BYTE PTR ss:[eax-0x56],ch
  40d2b0:	and    DWORD PTR [ebx-0x69fd0000],ebx
  40d2b6:	fs ret 
  40d2b8:	jno    0x40d2b8
  40d2ba:	mov    edx,0x6c1507c3
  40d2bf:	sbb    DWORD PTR [ecx-0x7c236e2f],esp
  40d2c5:	ud1    ecx,DWORD PTR [esi-0x38edf5a0]
  40d2cc:	dec    esi
  40d2cd:	push   es
  40d2ce:	mov    cl,0x10
  40d2d0:	lods   eax,DWORD PTR ds:[esi]
  40d2d1:	mov    ebp,0x829e97ab
  40d2d6:	call   0x2e3e98de
  40d2db:	inc    eax
  40d2dc:	mov    cl,0x1
  40d2de:	imul   eax,DWORD PTR [ebx],0x369a2d9d
  40d2e4:	mov    ds:0xd09a2d0f,al
  40d2e9:	xchg   ebp,eax
  40d2ea:	sti    
  40d2eb:	out    dx,eax
  40d2ec:	mov    ds:0x4a80e942,al
  40d2f1:	paddsw mm1,QWORD PTR [ebx+eiz*4+0x7a3629a9]
  40d2f9:	pmaddwd mm3,QWORD PTR [edx-0x2e01f517]
  40d300:	imul   ebp,edi,0xffffffd4
  40d303:	repz mov ds:0x7292a102,al
  40d309:	stc    
  40d30a:	test   al,0x44
  40d30c:	inc    esi
  40d30d:	in     al,0x71
  40d30f:	add    cl,BYTE PTR [esi-0x7a34e647]
  40d315:	aaa    
  40d316:	fst    QWORD PTR [ecx]
  40d318:	add    BYTE PTR [eax],al
  40d31a:	call   0xd44c:0xa20c1b89
  40d321:	repnz outs dx,DWORD PTR ds:[esi]
  40d323:	mov    dl,0xff
  40d325:	addr16 sti 
  40d327:	xchg   ebx,eax
  40d328:	(bad)  
  40d329:	call   0xf22896cc
  40d32e:	jmp    0x72326833
  40d333:	inc    eax
  40d334:	add    BYTE PTR [eax],ch
  40d336:	loopne 0x40d37d
  40d338:	or     al,0x1b
  40d33a:	mov    al,BYTE PTR ds:0x5e359e39
  40d341:	and    dl,dh
  40d343:	ret    0xe907
  40d346:	mov    bl,0x89
  40d348:	jmp    0x40d362
  40d34a:	sub    BYTE PTR [ebp+0x8],al
  40d34d:	je     0x40d3b2
  40d34f:	xchg   ebp,eax
  40d350:	dec    eax
  40d351:	mov    bh,0x9a
  40d353:	add    DWORD PTR ds:[ebx-0x67],0xe
  40d358:	or     al,0xa3
  40d35a:	stos   DWORD PTR es:[edi],eax
  40d35b:	repnz (bad) 
  40d35d:	lods   al,BYTE PTR ds:[esi]
  40d35e:	or     dh,cl
  40d360:	(bad)  
  40d361:	call   0x2e477d04
  40d366:	bound  edx,QWORD PTR [esi+0x29ee90f]
  40d36c:	mov    ebp,DWORD PTR [ecx+0x1d748992]
  40d372:	or     dl,BYTE PTR [ebx+esi*2-0x9]
  40d376:	mov    al,0x2
  40d378:	lea    ebx,[edx+edx*1+0x935733]
  40d37f:	add    BYTE PTR [eax-0x692b00ce],bl
  40d385:	repnz aas 
  40d387:	jmp    0x74415fa5
  40d38c:	pop    ebx
  40d38d:	(bad)  [ebp+eiz*8-0x5e]
  40d391:	repnz xor ch,BYTE PTR [ecx-0x56cdf807]
  40d398:	icebp  
  40d399:	sti    
  40d39a:	mov    ch,cl
  40d39c:	or     eax,0x430088c4
  40d3a1:	xor    BYTE PTR [eax],al
  40d3a3:	pop    esi
  40d3a4:	in     eax,dx
  40d3a5:	mov    esi,0x7f588b53
  40d3aa:	jmp    0x3075:0x8cd0b70c
  40d3b1:	push   0x7b2bfe72
  40d3b6:	std    
  40d3b7:	jne    0x40d3b1
  40d3b9:	xchg   ah,al
  40d3bb:	call   DWORD PTR [ecx+0x1ae4e806]
  40d3c1:	jnp    0x40d3c0
  40d3c3:	test   BYTE PTR [esp+eax*1],dh
  40d3c6:	jnp    0xffba3bfe
  40d3cc:	dec    ebx
  40d3cd:	jp     0x40d351
  40d3cf:	shl    al,0x93
  40d3d2:	mov    cl,0x1
  40d3d4:	outs   dx,DWORD PTR ds:[esi]
  40d3d5:	std    
  40d3d6:	xor    ebx,ebx
  40d3d8:	cmp    esp,edx
  40d3da:	repz call 0x3e4d2a
  40d3e0:	cli    
  40d3e1:	test   ecx,eax
  40d3e3:	pop    ebx
  40d3e4:	add    BYTE PTR [eax],al
  40d3e6:	ins    DWORD PTR es:[edi],dx
  40d3e7:	mov    ebp,0x68050006
  40d3ec:	push   edx
  40d3ed:	loope  0x40d3ba
  40d3ef:	jp     0x40d3b2
  40d3f1:	push   ecx
  40d3f2:	lods   al,BYTE PTR ds:[esi]
  40d3f3:	fsubr  st(0),st
  40d3f5:	jmp    FWORD PTR [ebx-0x6774ac42]
  40d3fb:	rcl    BYTE PTR [edx+0x56],1
  40d3fe:	add    DWORD PTR [ebx+0x73],edi
  40d401:	and    dh,BYTE PTR [edi]
  40d403:	push   esi
  40d404:	xor    esi,esi
  40d406:	out    dx,eax
  40d407:	aam    0x7
  40d409:	push   esi
  40d40a:	pop    es
  40d40b:	jp     0x40d480
  40d40d:	adc    BYTE PTR [ebx+0x5],cl
  40d410:	or     al,0xe8
  40d412:	jmp    0x40d3cf
  40d414:	(bad)  
  40d415:	dec    edi
  40d417:	outs   dx,BYTE PTR ds:[esi]
  40d418:	xor    esi,0xffffff9d
  40d41b:	xor    cl,bh
  40d41d:	push   edx
  40d41e:	inc    ebp
  40d41f:	out    0xa4,eax
  40d421:	(bad)  
  40d422:	xor    dh,BYTE PTR [eax-0x6e1f7530]
  40d428:	sub    BYTE PTR [edx],al
  40d42a:	adc    dh,dl
  40d42c:	xchg   edi,eax
  40d42d:	pop    edx
  40d42e:	add    eax,0x9d01d265
  40d433:	les    esi,FWORD PTR es:[eax+eax*8+0x10]
  40d438:	adc    esp,edi
  40d43a:	pop    ebx
  40d43b:	add    BYTE PTR [esi-0x3ba4d9fe],cl
  40d441:	fistp  WORD PTR [edi-0x2045407]
  40d447:	adc    edx,DWORD PTR [edi-0x3affff76]
  40d44d:	and    eax,0xff1574bb
  40d452:	cdq    
  40d453:	push   edi
  40d454:	(bad)  
  40d455:	nop
  40d456:	jg     0x40d456
  40d458:	push   ecx
  40d459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d45a:	mov    ebx,DWORD PTR [esi]
  40d45c:	push   ss
  40d45d:	jecxz  0x40d494
  40d45f:	pop    ebx
  40d460:	in     al,0xe6
  40d462:	pop    es
  40d463:	add    BYTE PTR [eax+0x10],cl
  40d466:	test   al,0x80
  40d468:	mov    ecx,0x9d000370
  40d46d:	sub    BYTE PTR [ecx],bl
  40d46f:	or     al,0x9a
  40d471:	mov    cl,0x7e
  40d473:	pushf  
  40d474:	popf   
  40d475:	fwait
  40d476:	add    dh,dh
  40d478:	loopne 0x40d411
  40d47a:	add    BYTE PTR [ebp-0x72cc0828],cl
  40d480:	and    BYTE PTR [ebp+edx*4-0x2],dl
  40d484:	jb     0x40d4f2
  40d486:	xchg   ebp,eax
  40d487:	je     0x40d422
  40d489:	call   0x9c5ed0ce
  40d48e:	add    al,BYTE PTR [eax]
  40d490:	shr    DWORD PTR [ebp+0x3111495],1
  40d496:	cld    
  40d497:	inc    ebx
  40d498:	popf   
  40d499:	xchg   DWORD PTR [eax-0x5f7a52f1],ebp
  40d49f:	xchg   esi,eax
  40d4a0:	inc    ebp
  40d4a1:	mov    ch,0xe8
  40d4a3:	add    ebx,DWORD PTR [ebp-0x6cfc246f]
  40d4a9:	inc    edx
  40d4aa:	jmp    0x6a6a0b59
  40d4af:	pop    eax
  40d4b0:	add    BYTE PTR [eax],al
  40d4b2:	jb     0x40d445
  40d4b4:	lods   eax,DWORD PTR ds:[esi]
  40d4b5:	xchg   esi,eax
  40d4b6:	pushf  
  40d4b7:	pop    ss
  40d4b8:	shr    DWORD PTR [ecx],cl
  40d4ba:	mov    eax,ds:0x237637f
  40d4bf:	xchg   edx,eax
  40d4c0:	xchg   ebp,eax
  40d4c1:	xor    ebp,DWORD PTR [eax]
  40d4c3:	dec    eax
  40d4c4:	mov    DWORD PTR [ebx],esi
  40d4c6:	fild   DWORD PTR [edi-0xa]
  40d4c9:	add    al,0xf5
  40d4cb:	mov    ecx,0x1ce39688
  40d4d0:	jmp    0x40d45a
  40d4d2:	and    DWORD PTR ds:0x32d3966e,ebp
  40d4d8:	je     0x40d51a
  40d4da:	shl    DWORD PTR [edx],0x51
  40d4dd:	shl    dl,0x91
  40d4e0:	push   ebp
  40d4e1:	stos   BYTE PTR es:[edi],al
  40d4e2:	push   eax
  40d4e3:	sub    BYTE PTR [edx+0x58],ch
  40d4e6:	dec    edx
  40d4e7:	xchg   ecx,eax
  40d4e8:	inc    ebp
  40d4e9:	xchg   esi,eax
  40d4ea:	xchg   ebx,eax
  40d4eb:	pop    ss
  40d4ec:	jnp    0x40d517
  40d4ee:	lea    edi,[edi+0x6b]
  40d4f1:	and    ebx,DWORD PTR [edx+0x20332d91]
  40d4f7:	inc    edi
  40d4f8:	or     DWORD PTR [ebx],esi
  40d4fa:	arpl   WORD PTR [edi-0x12],ax
  40d4fd:	(bad)  
  40d4fe:	jp     0x40d565
  40d500:	or     BYTE PTR [esi-0x7714e385],dl
  40d506:	sbb    DWORD PTR [esi+eax*1],ebp
  40d509:	xchg   esi,eax
  40d50a:	imul   esi,DWORD PTR [edx],0x6c
  40d50d:	inc    eax
  40d50e:	ins    DWORD PTR es:[edi],dx
  40d50f:	xor    al,BYTE PTR [eax]
  40d511:	add    ecx,edx
  40d513:	mov    cl,0xfe
  40d515:	out    dx,al
  40d516:	add    BYTE PTR [eax],al
  40d518:	add    al,0xf6
  40d51a:	imul   eax,DWORD PTR ds:0x39e04622,0xd6e0cdf1
  40d524:	adc    BYTE PTR [edi+0x169ff544],dl
  40d52a:	or     eax,0x4016aaf
  40d52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d530:	bound  ecx,QWORD PTR [esi+0x29ee911]
  40d536:	jmp    0x40d51a
  40d538:	push   eax
  40d539:	inc    esi
  40d53a:	psubsb mm1,QWORD PTR [ecx+0x46]
  40d53e:	cld    
  40d53f:	out    0x9e,eax
  40d541:	add    al,BYTE PTR [eax]
  40d543:	arpl   WORD PTR [edx-0x65db780e],di
  40d549:	sbb    al,0x4
  40d54b:	je     0x40d4f7
  40d54d:	dec    BYTE PTR [edi+0x6c]
  40d550:	mov    ds:0x9aaf4fae,al
  40d555:	inc    BYTE PTR [edi+eiz*4]
  40d558:	xchg   edx,eax
  40d559:	add    BYTE PTR [eax],al
  40d55b:	push   ecx
  40d55c:	push   esi
  40d55d:	mov    ds:0x46145efe,al
  40d562:	cld    
  40d563:	push   0xffffffe1
  40d565:	add    al,0x50
  40d567:	pop    esp
  40d568:	jb     0x40d518
  40d56a:	dec    edi
  40d56b:	inc    esi
  40d56c:	call   0x2:0x48cee7fa
  40d573:	cli    
  40d574:	test   BYTE PTR [bx+0x3de],bh
  40d579:	ret    
  40d57a:	mov    ch,BYTE PTR [eax]
  40d57c:	add    BYTE PTR [eax],al
  40d57e:	push   esi
  40d57f:	ret    0xe90f
  40d582:	mov    bl,0x7b
  40d584:	jmp    0x40d5ee
  40d586:	inc    ebp
  40d587:	mov    al,ds:0x339ee903
  40d58c:	push   esi
  40d58d:	add    bh,ch
  40d58f:	inc    DWORD PTR [edi]
  40d591:	push   edi
  40d592:	or     bl,BYTE PTR [esp+0x79]
  40d596:	inc    esp
  40d597:	add    al,0x33
  40d599:	leave  
  40d59a:	add    BYTE PTR [edx],al
  40d59c:	sete   ch
  40d59f:	mov    dl,0xd9
  40d5a1:	push   ebx
  40d5a2:	out    dx,al
  40d5a3:	add    ecx,DWORD PTR [ebp-0x752bb0bb]
  40d5a9:	(bad)  
  40d5aa:	mov    ebp,0x69e8e048
  40d5af:	aaa    
  40d5b0:	add    BYTE PTR [eax],al
  40d5b2:	mov    eax,0xc6840dc3
  40d5b7:	add    al,0x0
  40d5b9:	add    BYTE PTR [ecx+ebx*8],cl
  40d5bc:	cli    
  40d5bd:	vmread DWORD PTR [eax+eax*1-0x49f90c00],ebp
  40d5c5:	inc    ebp
  40d5c6:	psrlq  mm1,QWORD PTR [edi-0x73]
  40d5ca:	jns    0x40d5eb
  40d5cc:	sti    
  40d5cd:	jmp    DWORD PTR [ebx]
  40d5cf:	aam    0xe7
  40d5d1:	push   edx
  40d5d2:	mov    eax,ds:0x4840004
  40d5d7:	pop    es
  40d5d8:	test   BYTE PTR [edi],bl
  40d5da:	mov    BYTE PTR [ebx],0x0
  40d5dd:	cvtpi2ps xmm2,mm1
  40d5e0:	cli    
  40d5e1:	jmp    0x40d5e3
  40d5e3:	add    dh,cl
  40d5e5:	cmp    edi,DWORD PTR [eax]
  40d5e7:	pushf  
  40d5e8:	leave  
  40d5e9:	pop    ds
  40d5ea:	sti    
  40d5eb:	jmp    DWORD PTR [ebx-0x1]
  40d5ee:	cmp    al,0x3b
  40d5f0:	ja     0x40d5f2
  40d5f2:	repnz xor esi,DWORD PTR [esi+edi*2-0x2a]
  40d5f7:	sbb    eax,esp
  40d5f9:	mov    al,0xfe
  40d5fb:	add    bl,al
  40d5fd:	jbe    0x40d5bc
  40d5ff:	add    eax,0x30003c3
  40d604:	mov    ebx,0x9dc0b706
  40d609:	and    bh,BYTE PTR [esi]
  40d60b:	in     al,0x7
  40d60d:	pushf  
  40d60e:	test   DWORD PTR [ecx+eax*4+0x69],eax
  40d612:	sub    al,0xe8
  40d614:	dec    ebp
  40d615:	into   
  40d616:	add    DWORD PTR [eax],eax
  40d618:	and    ecx,ebx
  40d61a:	add    eax,DWORD PTR [edx+esi*2-0x3cfffd66]
  40d621:	loop   0x40d633
  40d623:	in     al,0xc8
  40d625:	mov    DWORD PTR [edx+0x0],edx
  40d628:	inc    esp
  40d629:	dec    ebp
  40d62a:	add    al,0x0
  40d62c:	popf   
  40d62d:	mov    BYTE PTR cs:[ecx+edx*1],al
  40d631:	lds    edx,FWORD PTR [edx+0x365936fe]
  40d637:	push   0xffffffa1
  40d639:	es dec ecx
  40d63b:	les    ebp,FWORD PTR [ebp+0x24]
  40d63e:	xchg   edx,eax
  40d63f:	xchg   DWORD PTR [eax+0x70],ebp
  40d642:	fwait
  40d643:	loop   0x40d686
  40d645:	call   0xa7dd:0x8402
  40d64c:	xchg   BYTE PTR [edi-0x7ffd6664],ch
  40d652:	push   0x180f085d
  40d657:	inc    edi
  40d658:	add    eax,0x490f9d00
  40d65d:	loopne 0x40d5fb
  40d65f:	xchg   ebp,eax
  40d660:	repnz (bad) 
  40d662:	pusha  
  40d663:	popa   
  40d664:	cli    
  40d665:	inc    edx
  40d667:	cwde   
  40d668:	leave  
  40d669:	inc    esp
  40d66a:	stc    
  40d66b:	call   0xc702:0x449d0002
  40d672:	pusha  
  40d673:	add    DWORD PTR ds:0xc9999d00,0x2ad5944
  40d67d:	add    BYTE PTR [ebp+0x624458ac],bl
  40d683:	add    esi,DWORD PTR [ecx-0x5f93682]
  40d689:	inc    ebx
  40d68a:	popf   
  40d68b:	jnp    0x40d640
  40d68d:	stos   DWORD PTR es:[edi],eax
  40d68e:	mov    ds:0x9d04fa86,eax
  40d693:	add    dh,BYTE PTR [ecx-0x4ec316c5]
  40d699:	add    ah,BYTE PTR [eax]
  40d69b:	and    ch,al
  40d69d:	add    ebx,DWORD PTR [ebp-0x10049487]
  40d6a3:	sbb    cl,bh
  40d6a5:	sbb    BYTE PTR [ecx],0xef
  40d6a8:	fst    QWORD PTR [edx+0xfc1333b]
  40d6ae:	add    BYTE PTR [eax],al
  40d6b0:	icebp  
  40d6b1:	add    ebp,ecx
  40d6b3:	xchg   edx,ebp
  40d6b5:	std    
  40d6b6:	ins    BYTE PTR es:[edi],dx
  40d6b7:	cmp    al,0x9c
  40d6b9:	add    ch,cl
  40d6bb:	sbb    eax,0x92e118bd
  40d6c0:	leave  
  40d6c1:	mov    ds:0x8d9d4681,al
  40d6c6:	mov    esi,0xe1aa597c
  40d6cb:	(bad)  
  40d6cc:	stos   DWORD PTR es:[edi],eax
  40d6cd:	xchg   BYTE PTR [ebx+eax*1-0x4fcfd63],dl
  40d6d4:	inc    ebp
  40d6d5:	and    al,0x70
  40d6d7:	sti    
  40d6d8:	je     0x40d6cc
  40d6da:	imul   eax,DWORD PTR [eax-0x6d8a724a],0x1f
  40d6e1:	ret    
  40d6e2:	loopne 0x40d680
  40d6e4:	les    eax,FWORD PTR [edx]
  40d6e6:	jmp    0xf150ecee
  40d6eb:	ss inc edi
  40d6ed:	add    esp,DWORD PTR [eax+ecx*2-0x55]
  40d6f1:	xor    al,BYTE PTR [ecx-0x35]
  40d6f4:	out    0x3,al
  40d6f6:	jmp    0x653eb982
  40d6fb:	or     BYTE PTR [edx+eax*1+0x2e66e900],bl
  40d702:	neg    dh
  40d704:	and    cl,BYTE PTR [ecx-0x2611701]
  40d70a:	mov    ch,0xa4
  40d70c:	adc    al,0x30
  40d70e:	push   eax
  40d70f:	fs and eax,0xefaf1
  40d715:	add    BYTE PTR [edi],cl
  40d717:	cmp    eax,0x2d2dce8
  40d71c:	add    BYTE PTR [ebp+0x5e],ah
  40d71f:	cld    
  40d720:	or     DWORD PTR [ebx],0xffffff9e
  40d723:	add    al,BYTE PTR [eax]
  40d725:	fsubrp st(4),st
  40d727:	inc    esi
  40d728:	div    BYTE PTR [ecx-0x33]
  40d72b:	push   es
  40d72c:	adc    al,0xe2
  40d72e:	or     al,0x8c
  40d730:	mov    WORD PTR [ecx+esi*8],gs
  40d733:	cmp    al,0x53
  40d735:	cmp    ch,BYTE PTR [edx+0xcc21386]
  40d73b:	mov    WORD PTR [edi+0x70],cs
  40d73e:	retf   0xfeba
  40d741:	fsubr  QWORD PTR [edx-0xa]
  40d744:	aas    
  40d745:	jmp    0xf0b4246d
  40d74a:	aam    0x45
  40d74c:	mul    ebp
  40d74e:	pop    ss
  40d74f:	push   0xffffffff
  40d751:	call   0x6312a7f4
  40d756:	bound  edi,QWORD PTR [edx-0xe7a55c6]
  40d75c:	push   cs
  40d75d:	aaa    
  40d75e:	sbb    edi,DWORD PTR [eax+0x4b]
  40d761:	fs popa 
  40d763:	retf   0xe547
  40d766:	mov    dl,0xef
  40d768:	mov    ch,BYTE PTR [ecx-0x2b3d384e]
  40d76e:	adc    cl,BYTE PTR [edi+0x32369c1]
  40d774:	jb     0x40d7a4
  40d776:	xlat   BYTE PTR ds:[ebx]
  40d777:	inc    ebp
  40d778:	test   DWORD PTR [eax],0x71b00000
  40d77e:	jae    0x40d748
  40d780:	fist   DWORD PTR [ebx+0x441606]
  40d786:	jmp    0x40d7ef
  40d788:	mov    ebx,0x24ff0ff6
  40d78d:	cwde   
  40d78e:	out    0x59,al
  40d790:	mov    edx,0x4189fd71
  40d795:	pop    eax
  40d796:	cmp    ebx,eax
  40d798:	adc    edx,edi
  40d79a:	lds    eax,FWORD PTR [ebp+0x63]
  40d79d:	add    ebx,ebp
  40d79f:	frstor [edx]
  40d7a1:	xchg   DWORD PTR [esi],esi
  40d7a3:	pop    ss
  40d7a4:	ror    DWORD PTR [edx-0x79],1
  40d7a7:	pop    eax
  40d7a8:	ins    BYTE PTR es:[edi],dx
  40d7a9:	or     DWORD PTR [edi+0x4],edx
  40d7ac:	outs   dx,DWORD PTR ds:[esi]
  40d7ad:	ret    
  40d7ae:	mov    DWORD PTR [ebp+0x2c],edi
  40d7b1:	xlat   BYTE PTR ds:[ebx]
  40d7b2:	imul   eax,DWORD PTR [ecx+edi*4],0x5c50b444
  40d7b9:	clc    
  40d7ba:	mov    edx,0xbe843401
  40d7bf:	je     0x40d78e
  40d7c1:	in     al,dx
  40d7c2:	adc    ebp,DWORD PTR [edx-0x4]
  40d7c5:	jb     0x40d7fa
  40d7c7:	loopne 0x40d7e8
  40d7c9:	inc    edi
  40d7ca:	add    bh,bh
  40d7cc:	inc    edx
  40d7cd:	or     DWORD PTR [eax+ebx*8-0x1],eax
  40d7d1:	(bad)  
  40d7d2:	jae    0x40d7da
  40d7d4:	inc    edx
  40d7d5:	inc    ebp
  40d7d6:	test   DWORD PTR [ecx],0x268951f
  40d7dc:	mov    ebp,0x888d8
  40d7e1:	add    BYTE PTR [esi-0x6fb27306],ch
  40d7e7:	xchg   BYTE PTR [esi-0x18295afc],bh
  40d7ed:	retf   
  40d7ee:	pop    ecx
  40d7ef:	jb     0x40d7ee
  40d7f1:	mov    ebx,ecx
  40d7f3:	xchg   DWORD PTR [ecx+0x6a],edx
  40d7f6:	popf   
  40d7f7:	xchg   edi,eax
  40d7f8:	jge    0x40d83e
  40d7fa:	fisttp QWORD PTR [ecx-0x66]
  40d7fd:	ss out 0x9a,al
  40d800:	add    al,BYTE PTR [ebp+ebx*2+0x8fef156]
  40d807:	repnz call 0x5d31:0x8fdc6873
  40d80f:	les    esi,FWORD PTR [eax]
  40d811:	pop    ebx
  40d812:	xlat   BYTE PTR fs:[ebx]
  40d814:	push   es
  40d815:	add    BYTE PTR [ebx+0x5e],bl
  40d818:	mov    eax,DWORD PTR [eax]
  40d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81b:	pop    esi
  40d81c:	xchg   edi,eax
  40d81d:	push   cs
  40d81e:	sbb    BYTE PTR [ecx-0x7c62fff8],bh
  40d824:	jnp    0x40d86a
  40d826:	pop    ebp
  40d827:	and    BYTE PTR [esi],dl
  40d829:	fadd   st,st(3)
  40d82b:	and    cl,BYTE PTR [ecx+0x2]
  40d82e:	xchg   edx,eax
  40d82f:	imul   ecx,DWORD PTR [eax-0x3b],0xffffffe5
  40d833:	pushf  
  40d834:	xchg   BYTE PTR [edi+0x48029998],bh
  40d83a:	call   0x3a99:0x9d04f225
  40d841:	je     0x40d7e7
  40d843:	arpl   WORD PTR [eax-0x9],cx
  40d846:	add    BYTE PTR [eax],al
  40d848:	call   0x4a99:0x9d0496c2
  40d84f:	jg     0x40d7ee
  40d851:	cdq    
  40d852:	add    cl,BYTE PTR [ecx+0x447d2960]
  40d858:	inc    ecx
  40d859:	es dec ecx
  40d85b:	mov    al,0x4d
  40d85d:	mov    DWORD PTR cs:[ebx],ebp
  40d860:	loop   0x40d7e5
  40d862:	mov    cs,WORD PTR [edi+0x72]
  40d865:	or     al,0xf9
  40d867:	jmp    FWORD PTR [eax-0x227afc27]
  40d86d:	stos   DWORD PTR es:[edi],eax
  40d86e:	xchg   edi,edx
  40d870:	cdq    
  40d871:	add    ch,cl
  40d873:	add    ebp,DWORD PTR [eax]
  40d875:	inc    ebp
  40d876:	lea    esi,[eax+eiz*1]
  40d879:	test   esp,edi
  40d87b:	(bad)  
  40d87c:	stos   DWORD PTR es:[edi],eax
  40d87d:	mov    bh,BYTE PTR [eax-0x7b0b5dca]
  40d883:	stc    
  40d884:	fiadd  DWORD PTR [edx]
  40d886:	les    esp,FWORD PTR fs:[ebx-0x62f78981]
  40d88d:	add    al,bh
  40d88f:	add    BYTE PTR [ecx-0x29],0x25
  40d893:	(bad)  
  40d894:	jnp    0x40d888
  40d896:	xchg   BYTE PTR [ecx+ebx*1-0x27],bh
  40d89a:	adc    eax,0xdd106b8f
  40d89f:	jl     0x40d8a2
  40d8a1:	aas    
  40d8a2:	push   es
  40d8a3:	(bad)  
  40d8a4:	pop    ebx
  40d8a5:	jl     0x40d902
  40d8a7:	aam    0x53
  40d8a9:	mov    dh,ch
  40d8ab:	add    BYTE PTR [eax],0x0
  40d8ae:	adc    edi,edx
  40d8b0:	in     eax,dx
  40d8b1:	mov    es,WORD PTR [ebx-0x65]
  40d8b4:	pop    edi
  40d8b5:	dec    esi
  40d8b6:	popf   
  40d8b7:	add    dh,BYTE PTR [eax+0x48]
  40d8ba:	inc    ebp
  40d8bb:	xchg   al,dl
  40d8bd:	mov    ds,WORD PTR [ebx-0x62f89d82]
  40d8c3:	add    dl,BYTE PTR [ecx+0x3]
  40d8c6:	popf   
  40d8c7:	add    ebp,ecx
  40d8c9:	sbb    DWORD PTR [ebp+0x37a3fb89],esp
  40d8cf:	inc    esi
  40d8d0:	jmp    0xfa3f8263
  40d8d5:	inc    ebx
  40d8d6:	popf   
  40d8d7:	jge    0x40d879
  40d8d9:	retf   0xff7
  40d8dc:	loopne 0x40d8a3
  40d8de:	popa   
  40d8df:	xchg   ecx,eax
  40d8e0:	out    0x9c,eax
  40d8e2:	inc    edx
  40d8e3:	(bad)  
  40d8e4:	call   0x8950b2ec
  40d8e9:	jp     0x40d934
  40d8eb:	cli    
  40d8ec:	call   FWORD PTR [ecx]
  40d8ee:	sbb    cl,BYTE PTR [edi]
  40d8f0:	call   0xfab7fa0c
  40d8f5:	sub    ax,WORD PTR [ebp+0x7eb3e8f7]
  40d8fc:	xor    ch,ch
  40d8fe:	sahf   
  40d8ff:	add    cl,BYTE PTR [ebx+0x4c8506a4]
  40d905:	push   ebp
  40d906:	sub    eax,DWORD PTR [esp+ecx*4-0x177dcf7]
  40d90d:	or     DWORD PTR ss:[edi],esp
  40d910:	shl    BYTE PTR [eax+0x0],1
  40d913:	add    ch,cl
  40d915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d916:	mov    ah,al
  40d918:	inc    edx
  40d919:	rol    BYTE PTR [ebp+esi*8-0x140177e0],0x9e
  40d921:	add    al,BYTE PTR [eax]
  40d923:	pusha  
  40d924:	vpaddw xmm0,xmm1,XMMWORD PTR [esi]
  40d928:	sub    edi,DWORD PTR [edx-0x7c]
  40d92b:	frstor [eax]
  40d92d:	mov    dh,bh
  40d92f:	add    al,bh
  40d931:	add    eax,DWORD PTR [eax]
  40d933:	jmp    0x7448e74b
  40d938:	and    dh,ch
  40d93a:	std    
  40d93b:	fisub  WORD PTR [eax]
  40d93d:	mov    eax,ds:0x29e90d7
  40d942:	test   BYTE PTR [ecx+0x5152ea85],ch
  40d948:	sub    BYTE PTR [eax-0x76361701],cl
  40d94e:	je     0x40d931
  40d950:	sbb    esi,ebp
  40d952:	pop    ss
  40d953:	xlat   BYTE PTR ds:[ebx]
  40d954:	pop    esi
  40d955:	add    al,BYTE PTR [ebp-0x33890757]
  40d95b:	jmp    0x7609:0x1cff029e
  40d962:	test   ch,dh
  40d964:	adc    BYTE PTR [eax+0x410b00fe],cl
  40d96a:	lock add ah,0x4
  40d96e:	add    al,ch
  40d970:	pop    ebx
  40d971:	cmp    eax,0xbe380000
  40d976:	or     eax,0x25000084
  40d97b:	add    al,0x0
  40d97d:	add    BYTE PTR [ecx+0x41],al
  40d980:	lock push eax
  40d982:	inc    ecx
  40d983:	sub    DWORD PTR [edx],0x4e7753ff
  40d989:	push   ebx
  40d98a:	ins    BYTE PTR es:[edi],dx
  40d98b:	ja     0x40d98a
  40d98d:	add    BYTE PTR [edi+ecx*8+0x75dc75fe],al
  40d994:	adc    edi,DWORD PTR [eax-0x74ffbb97]
  40d99a:	xchg   esp,eax
  40d99b:	or     esi,DWORD PTR [esp+edx*8+0x7f]
  40d99f:	jae    0x40d9ae
  40d9a1:	mov    ?,esp
  40d9a3:	add    DWORD PTR [eax],eax
  40d9a5:	add    bh,dh
  40d9a7:	js     0x40d9ad
  40d9a9:	shufps xmm5,xmm6,0x1
  40d9ad:	add    BYTE PTR [esi+ebx*8-0x76],al
  40d9b1:	test   DWORD PTR [eax+0x77],esp
  40d9b4:	std    
  40d9b5:	call   FWORD PTR [edx]
  40d9b7:	mov    ebp,0x77401483
  40d9bc:	std    
  40d9bd:	ud1    edx,edi
  40d9c0:	add    DWORD PTR [eax],eax
  40d9c2:	xor    al,0xde
  40d9c4:	cmp    al,0x36
  40d9c7:	icebp  
  40d9c8:	or     eax,0xfa9b898b
  40d9cd:	call   DWORD PTR [ebx-0x45]
  40d9d0:	xor    DWORD PTR [eax],0x53
  40d9d3:	ja     0x40d9d2
  40d9d5:	jmp    0x40d9c6
  40d9d7:	fld    QWORD PTR [edx+0x1af0fbf8]
  40d9dd:	push   0x0
  40d9df:	add    ah,dh
  40d9e1:	or     BYTE PTR [esp+esi*1-0x1748f63],al
  40d9e8:	adc    BYTE PTR [edi],ah
  40d9ea:	out    dx,eax
  40d9eb:	sti    
  40d9ec:	fiadd  DWORD PTR [eax+0x8f1609a]
  40d9f2:	mov    WORD PTR [ebp+ebx*8-0x60d97a60],es
  40d9f9:	cdq    
  40d9fa:	add    al,BYTE PTR [eax+0xf029b3a]
  40da00:	sbb    BYTE PTR [edi-0x48630000],al
  40da06:	leave  
  40da07:	push   ds
  40da08:	xchg   edx,eax
  40da09:	push   ds
  40da0a:	test   DWORD PTR [ecx],0x5cc9999d
  40da10:	jns    0x40da60
  40da12:	sar    dh,1
  40da14:	adc    dl,cl
  40da16:	jge    0x40d99c
  40da18:	mov    cl,0xd8
  40da1a:	mov    edi,esi
  40da1c:	int    0xe
  40da1e:	xchg   BYTE PTR [ebx+0x4f8be870],dl
  40da24:	jne    0x40da61
  40da26:	test   al,0xfe
  40da28:	bound  edi,QWORD PTR [edi+0x7f]
  40da2b:	mov    esp,0xfe8bfe31
  40da30:	stos   BYTE PTR es:[edi],al
  40da31:	push   cs
  40da32:	dec    DWORD PTR [eax-0x171c2d8]
  40da38:	inc    edx
  40da39:	and    ch,BYTE PTR [esi-0x69]
  40da3c:	cmp    BYTE PTR [eax-0x56277576],ah
  40da42:	jl     0x40da88
  40da44:	add    BYTE PTR [eax],al
  40da46:	inc    ecx
  40da47:	inc    ecx
  40da48:	test   bh,bh
  40da4a:	and    bl,BYTE PTR [ecx-0x3f367b89]
  40da50:	mov    bh,dh
  40da52:	outs   dx,BYTE PTR ds:[esi]
  40da53:	jmp    0xa811eee2
  40da58:	inc    edx
  40da59:	add    BYTE PTR [edx+0x1e03430f],dl
  40da5f:	add    ch,BYTE PTR [ebp+0x64f75af8]
  40da65:	nop
  40da66:	jmp    0xd30e:0x553be886
  40da6d:	cmp    ebp,DWORD PTR [edx-0x62fac883]
  40da73:	add    ch,BYTE PTR [edx-0x76]
  40da76:	mov    al,0xf7
  40da78:	pop    sp
  40da7a:	popf   
  40da7b:	add    ch,cl
  40da7d:	sbb    eax,0x7ccf2a92
  40da82:	sbb    esi,edx
  40da84:	pop    ebp
  40da85:	mov    ebp,DWORD PTR [ebx+0x5b78f91b]
  40da8b:	(bad)  
  40da8c:	mov    eax,0x45cf2178
  40da91:	mov    edx,DWORD PTR [ebx-0x72bed9cd]
  40da97:	out    0xe8,eax
  40da99:	add    ebx,DWORD PTR [ebp+0x7baefe9a]
  40da9f:	xchg   BYTE PTR [edx-0x17607a11],dl
  40daa5:	add    ebx,DWORD PTR [ebp+0xffad78]
  40daab:	add    BYTE PTR [esi],bl
  40daad:	ret    
  40daae:	fnstsw WORD PTR [edi-0x31]
  40dab1:	add    ebp,ecx
  40dab3:	add    esp,DWORD PTR [edx-0x1d86d7b4]
  40dab9:	std    
  40daba:	mov    cl,0x94
  40dabc:	xchg   ebx,eax
  40dabd:	je     0x40da42
  40dabf:	add    al,0x9d
  40dac1:	add    bh,BYTE PTR [ecx]
  40dac3:	jns    0x40daa8
  40dac5:	push   DWORD PTR [edi]
  40dac7:	jns    0x40dae2
  40dac9:	outs   dx,DWORD PTR ds:[esi]
  40daca:	aam    0x8a
  40dacc:	and    esi,DWORD PTR [ecx+eax*8]
  40dacf:	mov    ah,dh
  40dad1:	test   ebp,eax
  40dad3:	rcr    DWORD PTR [esi],0x0
  40dad6:	push   ebp
  40dad7:	xchg   DWORD PTR [ebx],ecx
  40dad9:	xchg   bh,bh
  40dadb:	call   0xfa460865
  40dae0:	fidiv  WORD PTR [esi+0x4c]
  40dae3:	mov    ch,0xa9
  40dae5:	xor    dl,BYTE PTR [eax+0x70]
  40dae8:	pop    ebp
  40dae9:	mov    dh,0x8c
  40daeb:	ins    BYTE PTR es:[edi],dx
  40daec:	jb     0x40da77
  40daee:	dec    BYTE PTR [esi+0x3d14858e]
  40daf4:	int    0xc5
  40daf6:	jmp    DWORD PTR [ebx-0x22]
  40daf9:	hlt    
  40dafa:	test   al,al
  40dafc:	cdq    
  40dafd:	add    al,BYTE PTR [eax]
  40daff:	mov    ebx,0x72f5d0f0
  40db04:	pop    ebp
  40db05:	mov    dh,0x3a
  40db07:	daa    
  40db08:	call   0x4b78:0xe09f0ef1
  40db0f:	pop    esp
  40db10:	add    BYTE PTR [eax],al
  40db12:	out    0xca,al
  40db14:	inc    edi
  40db15:	in     eax,dx
  40db16:	mov    ds:0x82a98af1,al
  40db1b:	enter  0xbcc5,0x12
  40db1f:	xchg   ecx,eax
  40db21:	imul   ebp,DWORD PTR [eax],0x11467203
  40db27:	test   bh,bh
  40db29:	call   0xf98854cc
  40db2e:	test   eax,0x27194c7b
  40db33:	adc    eax,0xd91d7418
  40db38:	(bad)  
  40db39:	(bad)  
  40db3a:	adc    al,0x35
  40db3c:	call   0xfec4cb9c
  40db41:	xchg   DWORD PTR [ebx],esp
  40db43:	inc    esi
  40db44:	sub    esp,esi
  40db46:	and    al,0x84
  40db48:	push   ss
  40db49:	push   esp
  40db4a:	and    eax,0x142db47a
  40db4f:	test   dh,bh
  40db51:	pusha  
  40db52:	push   0xffffffd5
  40db54:	inc    BYTE PTR [eax]
  40db56:	fstp   TBYTE PTR [edx-0x3]
  40db59:	jne    0x40db93
  40db5b:	jnp    0x40db70
  40db5d:	or     dl,ah
  40db5f:	inc    eax
  40db60:	add    bl,ch
  40db62:	sti    
  40db63:	jge    0x40db61
  40db65:	or     ch,bl
  40db67:	or     bh,BYTE PTR [esi+0x6a00f400]
  40db6d:	add    ch,BYTE PTR [eax+eiz*8+0x7a188588]
  40db74:	std    
  40db75:	inc    DWORD PTR [eax]
  40db77:	add    BYTE PTR [esi-0x3fb872fe],ch
  40db7d:	ror    BYTE PTR [ebp+eax*4-0x285fc],1
  40db84:	xchg   esp,eax
  40db85:	ret    
  40db86:	inc    ebx
  40db87:	lock mov ah,0x0
  40db8a:	add    BYTE PTR [eax],al
  40db8c:	dec    esp
  40db8d:	(bad)
  40db90:	dec    ebx
  40db91:	in     al,0x7
  40db93:	pop    ebx
  40db94:	bound  eax,QWORD PTR [edi]
  40db96:	add    ebx,DWORD PTR [edi]
  40db98:	pop    es
  40db99:	mov    esi,0x6c498300
  40db9e:	std    
  40db9f:	data16 std 
  40dba1:	add    ebp,DWORD PTR ds:0x7379cbff
  40dba7:	push   ebp
  40dba8:	or     al,0x80
  40dbaa:	(bad)  
  40dbab:	push   DWORD PTR [ebp+ecx*1-0x7c]
  40dbaf:	adc    al,0x89
  40dbb1:	jns    0x40dbb0
  40dbb3:	push   0x44
  40dbb5:	sar    dh,1
  40dbb7:	adc    eax,0x3e9210
  40dbbc:	and    al,BYTE PTR [edi]
  40dbbe:	test   BYTE PTR [ebx+ecx*2],ch
  40dbc1:	jnp    0x40dbc0
  40dbc3:	mov    bp,0x1303
  40dbc7:	std    
  40dbc8:	cmp    edi,DWORD PTR [ebx+0xd]
  40dbcb:	mov    bh,0xf4
  40dbcd:	jle    0x40db91
  40dbcf:	or     al,0x9d
  40dbd1:	push   ds
  40dbd2:	dec    esi
  40dbd3:	adc    ebx,DWORD PTR [eax]
  40dbd5:	mov    ch,0x87
  40dbd7:	mov    BYTE PTR [eax+0x5d],bl
  40dbda:	call   0x29b:0x46000066
  40dbe1:	mov    DWORD PTR [eax-0x43],ebx
  40dbe4:	xor    edi,0xfffffffa
  40dbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbe8:	jle    0x40dc3b
  40dbea:	pushf  
  40dbeb:	cdq    
  40dbec:	add    dh,BYTE PTR [ebx]
  40dbee:	fstp   QWORD PTR [eax]
  40dbf0:	push   es
  40dbf1:	fmul   QWORD PTR [edx+0x65bf6d9c]
  40dbf7:	sbb    BYTE PTR [ebx-0x3a5e1f5],ah
  40dbfd:	mov    BYTE PTR [eax+0x69],ah
  40dc00:	leave  
  40dc01:	pop    esp
  40dc02:	jmp    0xf24fb792
  40dc07:	push   ds
  40dc08:	xlat   BYTE PTR ds:[ebx]
  40dc09:	(bad)  
  40dc0a:	mov    dl,0x1c
  40dc0c:	retf   0xc944
  40dc0f:	scas   al,BYTE PTR es:[edi]
  40dc10:	out    0xfe,eax
  40dc12:	sub    BYTE PTR [ecx],ch
  40dc14:	jbe    0x40db9a
  40dc16:	leave  
  40dc17:	xor    al,0x88
  40dc19:	(bad)  
  40dc1a:	in     eax,dx
  40dc1b:	adc    BYTE PTR [esi],bh
  40dc1d:	aam    0xf7
  40dc1f:	cdq    
  40dc20:	fcmovnb st,st(2)
  40dc22:	in     eax,dx
  40dc23:	push   ds
  40dc24:	call   FWORD PTR [esi]
  40dc26:	int    0xd4
  40dc28:	or     eax,0xfe8672ec
  40dc2d:	adc    eax,0x7c8399dd
  40dc32:	jno    0x40dc20
  40dc34:	test   DWORD PTR [ebx+0x2991b],0x8c970652
  40dc3e:	and    BYTE PTR [ebp+0xfe88],ch
  40dc44:	inc    edx
  40dc45:	add    DWORD PTR [ecx+0x7e999cb5],esp
  40dc4b:	mov    edi,0x5c6d02a2
  40dc50:	sub    al,BYTE PTR [ebx-0x4d568518]
  40dc56:	arpl   WORD PTR [ecx+0xd],ax
  40dc59:	xor    bl,BYTE PTR [ecx+eax*4-0x3a]
  40dc5d:	add    ebp,0xffffff87
  40dc60:	pop    edx
  40dc61:	iret   
  40dc62:	mov    eax,ds:0xb5834533
  40dc67:	add    al,0x9d
  40dc69:	xlat   BYTE PTR ds:[ebx]
  40dc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6b:	xor    al,0x20
  40dc6d:	(bad)  
  40dc6e:	fnsave [ebx]
  40dc70:	jmp    0xfb4a:0x89878d0c
  40dc77:	inc    ebx
  40dc78:	popf   
  40dc79:	(bad)  
  40dc7a:	test   eax,0x3df3a107
  40dc7f:	jns    0x40dcf7
  40dc81:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  40dc85:	xor    eax,0xcf311195
  40dc8a:	lahf   
  40dc8b:	push   ds
  40dc8c:	and    al,0xf3
  40dc8e:	jo     0x40dcc7
  40dc90:	lahf   
  40dc91:	sbb    al,0x6a
  40dc93:	dec    ecx
  40dc94:	jbe    0x40dc19
  40dc96:	push   ebp
  40dc97:	xchg   DWORD PTR [ebx-0x6f3a8bef],esi
  40dc9d:	dec    esp
  40dc9e:	push   0x27809fa5
  40dca3:	add    DWORD PTR [ecx],0x5f
  40dca6:	fnstsw WORD PTR [ebx+0x0]
  40dca9:	add    bl,ch
  40dcab:	add    eax,0x1304f9b4
  40dcb0:	je     0x40dd2b
  40dcb2:	scas   al,BYTE PTR es:[edi]
  40dcb3:	sbb    DWORD PTR ds:0x6a117787,0x94057909
  40dcbd:	inc    esp
  40dcbe:	mov    DWORD PTR [esi],0x817a7974
  40dcc4:	std    
  40dcc5:	xchg   ch,ch
  40dcc7:	(bad)  
  40dcc8:	jmp    DWORD PTR [ebp-0x20182cc6]
  40dcce:	add    DWORD PTR [ecx-0x7060ac02],eax
  40dcd4:	mov    WORD PTR [edi],cs
  40dcd6:	sbb    al,BYTE PTR [ecx-0x326bc702]
  40dcdc:	ss iret 
  40dcde:	leave  
  40dcdf:	push   0xfffffffa
  40dce1:	mov    eax,ds:0x34fe8123
  40dce6:	cmp    eax,0x255d8c8f
  40dceb:	cmp    esi,0xc605ae18
  40dcf1:	cmp    DWORD PTR [edx+0x1b917481],edi
  40dcf7:	pop    ss
  40dcf8:	add    al,0xff
  40dcfa:	pop    esi
  40dcfb:	add    ch,bl
  40dcfd:	jmp    0x40dcee
  40dcff:	pop    esp
  40dd00:	mov    ch,BYTE PTR [eiz*1+0x166ac935]
  40dd07:	or     DWORD PTR [esi],0x848ae15c
  40dd0d:	leave  
  40dd0e:	add    BYTE PTR [eax],al
  40dd10:	sbb    BYTE PTR [ecx+0x3e16afe],al
  40dd16:	mov    DWORD PTR [edx+esi*4+0x7f],ebp
  40dd1a:	(bad)  
  40dd1b:	push   esi
  40dd1c:	pop    ss
  40dd1d:	iret   
  40dd1e:	pop    es
  40dd1f:	pusha  
  40dd20:	adc    eax,0x2346fe1a
  40dd25:	mov    WORD PTR [ecx+edx*2+0x1],cs
  40dd29:	(bad)  
  40dd2a:	sbb    esi,DWORD PTR [edi]
  40dd2c:	and    eax,DWORD PTR [eax-0x705065ae]
  40dd32:	test   ch,bh
  40dd34:	and    BYTE PTR [eax-0x7e504602],al
  40dd3a:	adc    al,0x59
  40dd3c:	dec    ebp
  40dd3d:	inc    ecx
  40dd3e:	add    BYTE PTR [esi+ebx*2+0x10],ah
  40dd42:	pop    DWORD PTR [eax]
  40dd44:	dec    ebp
  40dd45:	mov    ebp,edi
  40dd47:	dec    edi
  40dd49:	adc    ch,ah
  40dd4b:	call   0x40abef
  40dd50:	lahf   
  40dd51:	ja     0x40dcd4
  40dd53:	clc    
  40dd54:	inc    ebx
  40dd55:	adc    DWORD PTR [esi],eax
  40dd57:	(bad)  
  40dd58:	jns    0x40dce9
  40dd5a:	(bad)  
  40dd5b:	jmp    0x9ecb:0xfb5bfd07
  40dd62:	ds fsub st,st(3)
  40dd65:	xchg   BYTE PTR [ecx-0xc63138b],cl
  40dd6b:	add    BYTE PTR [eax*1+0x52b45c6],al
  40dd72:	jmp    0xf440de68
  40dd77:	add    al,0x0
  40dd79:	xor    esi,DWORD PTR [eax+eiz*1]
  40dd7c:	cmp    DWORD PTR [esi],0xffffffdb
  40dd7f:	push   ds
  40dd80:	mov    DWORD PTR [esi-0x3a],eax
  40dd83:	prefetch BYTE PTR [edx-0x1c]
  40dd87:	test   DWORD PTR [eax+ecx*1-0x5c],0x33d90b9e
  40dd8f:	xchg   ecx,ebp
  40dd91:	add    edi,DWORD PTR ds:0x7a8b0428
  40dd97:	sahf   
  40dd98:	xchg   edi,eax
  40dd99:	mov    bh,0xb5
  40dd9b:	add    al,0x8b
  40dd9d:	lock std 
  40dd9f:	(bad)  
  40dda1:	and    edx,0xffffff85
  40dda4:	or     eax,0x6f884
  40dda9:	add    bl,al
  40ddab:	pavgb  mm2,QWORD PTR [ebx+0x1a]
  40ddaf:	das    
  40ddb0:	call   0xfdc688a5
  40ddb5:	mov    edi,DWORD PTR [ecx+eax*4+0x3b0901fd]
  40ddbc:	lea    eax,[ebp-0x63]
  40ddbf:	popa   
  40ddc0:	xor    cl,BYTE PTR [ebp-0x17cbc628]
  40ddc6:	loope  0x40dd8a
  40ddc8:	add    al,BYTE PTR [eax]
  40ddca:	push   ss
  40ddcb:	div    DWORD PTR [edx+0x6e3358a]
  40ddd1:	aam    0x45
  40ddd3:	mov    DWORD PTR [ecx+0x0],ecx
  40ddd6:	popf   
  40ddd7:	in     al,dx
  40ddd8:	cmp    esi,0x0
  40dddb:	add    BYTE PTR [ecx-0x4b17d40a],ch
  40dde1:	loopne 0x40dde6
  40dde3:	add    BYTE PTR [esi],ah
  40dde5:	daa    
  40dde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde7:	adc    ch,0x6b
  40ddea:	xor    dl,BYTE PTR [ebx+0x6a]
  40dded:	ror    BYTE PTR ds:0x8cfd0508,0xfe
  40ddf4:	repnz in al,0x8a
  40ddf7:	sub    dl,0x6a
  40ddfa:	or     eax,0xb016e20b
  40ddff:	mov    bh,BYTE PTR [eax+0x61]
  40de02:	call   0x508b:0x26b0a91
  40de09:	popf   
  40de0a:	call   0xba83:0x26b0430
  40de11:	clc    
  40de12:	repz adc DWORD PTR [esi-0x10],0xffffff83
  40de17:	(bad)  
  40de18:	push   ds
  40de19:	jmp    0x278e521f
  40de1e:	ds sti 
  40de20:	popf   
  40de21:	les    edi,FWORD PTR [eax]
  40de23:	mov    edx,DWORD PTR [ebx-0x634a113f]
  40de29:	imul   esi,DWORD PTR [edi-0x11],0x74843f1e
  40de30:	mov    ds:0x98f73e2f,eax
  40de35:	(bad)  
  40de36:	int3   
  40de37:	push   ebp
  40de38:	jne    0x40de3c
  40de3a:	sub    DWORD PTR ds:0xe1e029d,ecx
  40de40:	add    BYTE PTR [eax],al
  40de42:	cmp    eax,0xc984bed3
  40de47:	or     al,BYTE PTR [ecx]
  40de49:	and    eax,0x80057f53
  40de4e:	dec    edx
  40de4f:	add    DWORD PTR [eax+edi*8+0x27],esi
  40de53:	fucom  st(0)
  40de55:	sub    eax,0x235c145
  40de5a:	popf   
  40de5b:	imul   esi,esi,0xffffff86
  40de5e:	sub    bh,BYTE PTR [edi+0x53]
  40de61:	or     ah,bl
  40de63:	(bad)  
  40de64:	fld    QWORD PTR ds:0xe1610306
  40de6a:	pop    es
  40de6b:	push   0xffffff99
  40de6d:	mov    esp,0xf9be029d
  40de72:	shr    BYTE PTR [ecx-0x2],cl
  40de75:	pop    edx
  40de76:	repz jle 0x40dedb
  40de79:	leave  
  40de7a:	out    0x3d,eax
  40de7c:	call   0x9ff9f693
  40de81:	sbb    ebx,0xffffff81
  40de84:	adc    edi,DWORD PTR [ebx-0x2e]
  40de87:	pcmpgtw mm6,QWORD PTR [ebx-0x7c7a813b]
  40de8e:	dec    ecx
  40de8f:	bound  edi,QWORD PTR [ebp-0x7]
  40de92:	mov    bl,0xeb
  40de94:	jne    0x40de19
  40de96:	sub    DWORD PTR [edx],ecx
  40de98:	adc    DWORD PTR [edx],0x89657eb3
  40de9e:	loop   0x40deae
  40dea0:	je     0x40dee6
  40dea2:	test   DWORD PTR [eax+0x834f],ebx
  40dea8:	xchg   ebx,eax
  40dea9:	fsub   DWORD PTR [ecx+0x70]
  40deac:	pop    ds
  40dead:	outs   dx,DWORD PTR ds:[esi]
  40deae:	or     BYTE PTR [edi-0x7c1f0ff],al
  40deb4:	mov    bh,0x74
  40deb6:	jmp    FWORD PTR [ebx-0x5b72ff76]
  40debc:	jmp    0xfecd:0xfaac8ccd
  40dec3:	xchg   esp,eax
  40dec4:	stos   BYTE PTR es:[edi],al
  40dec5:	inc    ebp
  40dec6:	inc    esp
  40dec7:	adc    eax,0xe90002a9
  40decc:	push   edx
  40decd:	or     eax,0x1702dcff
  40ded2:	inc    eax
  40ded3:	jmp    0xe4b49cfd
  40ded8:	sbb    eax,DWORD PTR [esi-0x2]
  40dedb:	add    bl,dh
  40dedd:	jge    0x40def3
  40dedf:	jmp    0xd240a168
  40dee4:	(bad)
  40dee8:	and    edi,eax
  40deea:	test   DWORD PTR [edi+0x1a],0x94d2e5c7
  40def1:	and    DWORD PTR [ecx+eax*8-0x62],0x204fc031
  40def9:	(bad)  
  40defa:	cmc    
  40defb:	arpl   bp,dx
  40defd:	or     eax,0xeb642c88
  40df02:	pop    es
  40df03:	ins    BYTE PTR es:[edi],dx
  40df04:	in     eax,0x71
  40df06:	dec    edi
  40df07:	xchg   esi,eax
  40df08:	aad    0x5
  40df0a:	(bad)  
  40df0b:	and    al,0x0
  40df0d:	add    BYTE PTR [ebp+0x7d],al
  40df10:	out    0xda,al
  40df12:	add    eax,0x69ba0003
  40df17:	cmp    DWORD PTR [edi-0x75bcea1a],0xf4359a8
  40df21:	jmp    0x692c67eb
  40df26:	or     dh,BYTE PTR [esi]
  40df28:	add    ecx,ebp
  40df2a:	sahf   
  40df2b:	ror    DWORD PTR [edx+0x56d496ac],1
  40df31:	add    BYTE PTR [edi],ah
  40df33:	jmp    0x1c54f00
  40df38:	xor    ecx,ecx
  40df3a:	push   0xb5940f07
  40df3f:	xor    al,0xf6
  40df41:	push   esi
  40df42:	push   cs
  40df43:	or     BYTE PTR [ebp-0x76ae5fbb],cl
  40df49:	sti    
  40df4a:	mov    ebp,0x4de8ea52
  40df4f:	mov    ch,0xff
  40df51:	push   DWORD PTR [eax-0x9f08c3f]
  40df57:	shl    bh,0xa6
  40df5a:	inc    ebp
  40df5b:	add    DWORD PTR [eax],eax
  40df5d:	cmp    BYTE PTR [ecx+0x2073fefc],0x8e
  40df64:	stc    
  40df65:	push   esi
  40df66:	outs   dx,BYTE PTR ds:[esi]
  40df67:	add    DWORD PTR [ebp-0x19aa10bb],ecx
  40df6d:	cli    
  40df6e:	daa    
  40df6f:	add    DWORD PTR [eax],eax
  40df71:	test   BYTE PTR [eax],al
  40df73:	add    BYTE PTR [esi*2-0x70e4141a],dh
  40df7a:	dec    ebx
  40df7b:	out    0x7f,eax
  40df7d:	shl    DWORD PTR [ebx],0x0
  40df80:	hlt    
  40df81:	cmp    esi,0xe8c1258a
  40df87:	adc    bh,cl
  40df89:	(bad)  
  40df8a:	mov    ecx,edx
  40df8c:	inc    ebp
  40df8d:	in     al,0xfe
  40df8f:	(bad)  
  40df90:	mov    ah,0x0
  40df92:	shl    ecx,0xe4
  40df95:	or     eax,0xe0cc1d1
  40df9a:	shl    edx,0xbc
  40df9d:	or     eax,0x450248c2
  40dfa2:	cmc    
  40dfa3:	pop    edx
  40dfa4:	jns    0x40df26
  40dfa6:	(bad)  
  40dfa7:	inc    DWORD PTR [ebx+edx*1+0x699d8487]
  40dfae:	add    al,BYTE PTR [eax]
  40dfb0:	imul   DWORD PTR [ecx-0x14]
  40dfb3:	add    BYTE PTR [eax],dl
  40dfb5:	scas   eax,DWORD PTR es:[edi]
  40dfb6:	jnp    0x40e007
  40dfb8:	shr    DWORD PTR es:[ebx-0x52],0x2e
  40dfbd:	imul   eax,DWORD PTR [edx],0xffffff84
  40dfc0:	pop    ebp
  40dfc1:	mov    dh,0x98
  40dfc3:	mov    eax,ebx
  40dfc5:	and    BYTE PTR [ebx+eax*4-0x17dd270],cl
  40dfcc:	push   edx
  40dfcd:	out    dx,al
  40dfce:	inc    ebx
  40dfcf:	jae    0x40df6c
  40dfd1:	mov    ds:0x6a42fd81,eax
  40dfd6:	add    al,BYTE PTR [eax]
  40dfd8:	add    BYTE PTR [eax],al
  40dfda:	mov    ebx,0x32796b13
  40dfdf:	jne    0x40e060
  40dfe1:	mov    eax,fs
  40dfe3:	jns    0x40dfb7
  40dfe5:	xor    ah,BYTE PTR [edx]
  40dfe7:	cmp    eax,0xae208cd9
  40dfec:	cmp    dh,0x12
  40dfef:	cmp    cl,BYTE PTR [ebx+0x154d0d7c]
  40dff5:	mov    ah,0xa8
  40dff7:	sub    DWORD PTR [eax*4-0x39f5ca23],eax
  40dffe:	pop    eax
  40dfff:	mov    esp,0xe0aeeadb
  40e004:	cmc    
  40e005:	out    dx,eax
  40e006:	div    BYTE PTR [edx-0x7d]
  40e009:	jge    0x40dfac
  40e00b:	test   BYTE PTR [bx+si],0x26
  40e00f:	sbb    al,0x20
  40e011:	cmp    edx,edx
  40e013:	push   ss
  40e014:	jne    0x40e000
  40e016:	scas   eax,DWORD PTR es:[edi]
  40e017:	lock enter 0x4717,0x65
  40e01c:	cmp    DWORD PTR [edi+0x448f1999],0xffffffc2
  40e023:	sbb    DWORD PTR [ebx+ecx*8-0x38],ebp
  40e027:	add    ah,BYTE PTR [esi-0x80]
  40e02a:	fwait
  40e02b:	cmc    
  40e02c:	pop    eax
  40e02d:	sub    BYTE PTR [ecx-0x753c00f6],0x38
  40e034:	push   esi
  40e035:	neg    DWORD PTR [ebx-0x7e]
  40e038:	ret    
  40e039:	js     0x40e00f
  40e03b:	inc    esp
  40e03c:	mov    ds:0x9d00007c,eax
  40e041:	or     ebp,DWORD PTR [esp+ebp*1-0x64]
  40e045:	add    ch,cl
  40e047:	in     eax,dx
  40e048:	xchg   edx,eax
  40e049:	lea    ebp,[ebx-0x46fd3bad]
  40e04f:	sub    BYTE PTR [ecx+0x4ac3ff36],0x80
  40e056:	and    al,0xf
  40e058:	mov    bh,0x0
  40e05a:	mov    eax,ds:0x18c525e9
  40e05f:	adc    bl,ch
  40e061:	les    ecx,FWORD PTR [ebx+ecx*8]
  40e064:	fwait
  40e065:	xchg   BYTE PTR [eax+0x3],al
  40e068:	popf   
  40e069:	add    dh,BYTE PTR [ecx]
  40e06b:	clc    
  40e06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e06d:	inc    esp
  40e06e:	and    esi,DWORD PTR [edi+0x77]
  40e071:	imul   edx,esp,0x5c029d04
  40e077:	leave  
  40e078:	shr    BYTE PTR [ecx-0x4f],cl
  40e07b:	mov    eax,0x7472029d
  40e080:	and    eax,0xe883b8f5
  40e085:	jp     0x40e0bb
  40e087:	imul   esp,ebx,0x74ea94f4
  40e08d:	aam    0x39
  40e08f:	ins    BYTE PTR es:[edi],dx
  40e090:	jge    0x40e10e
  40e092:	xchg   ebp,eax
  40e093:	jg     0x40e0ac
  40e095:	jp     0x40e100
  40e097:	jg     0x40e036
  40e099:	cmc    
  40e09a:	push   ds
  40e09b:	xchg   ecx,eax
  40e09c:	popa   
  40e09d:	or     bl,BYTE PTR [ecx]
  40e09f:	xchg   ecx,eax
  40e0a0:	pop    ecx
  40e0a1:	jb     0x40e0a2
  40e0a3:	sbb    BYTE PTR [eax],al
  40e0a5:	add    BYTE PTR [ecx],bh
  40e0a7:	cli    
  40e0a8:	mov    ch,0xe8
  40e0aa:	sahf   
  40e0ab:	xchg   DWORD PTR [ecx+ebx*2+0x26],esi
  40e0af:	jb     0x40e039
  40e0b1:	fdiv   st(6),st
  40e0b3:	popa   
  40e0b4:	fwait
  40e0b5:	lahf   
  40e0b6:	mov    al,ds:0x24e8302
  40e0bb:	out    dx,eax
  40e0bc:	or     esi,DWORD PTR [edx+0x7c]
  40e0bf:	add    al,dh
  40e0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c2:	jmp    0x40e0a0
  40e0c4:	call   0x43824e
  40e0c9:	xchg   esi,eax
  40e0ca:	test   bl,0x73
  40e0cd:	jmp    0xd856e70
  40e0d2:	xlat   BYTE PTR es:[ebx]
  40e0d4:	pop    es
  40e0d5:	push   0xffffffd9
  40e0d7:	add    edx,DWORD PTR [eax-0x7d]
  40e0da:	rcl    DWORD PTR fs:[edx+0x11],1
  40e0de:	shl    DWORD PTR [esi-0x2],cl
  40e0e1:	(bad)  
  40e0e2:	daa    
  40e0e3:	jb     0x40e067
  40e0e5:	mul    BYTE PTR [ecx+0x25ee07ef]
  40e0eb:	pop    edx
  40e0ec:	out    0xa5,eax
  40e0ee:	push   edx
  40e0ef:	add    eax,DWORD PTR [eax]
  40e0f1:	jb     0x40e108
  40e0f3:	pop    edx
  40e0f4:	out    0x32,eax
  40e0f6:	push   ebx
  40e0f7:	add    eax,DWORD PTR [eax]
  40e0f9:	push   0xffffff83
  40e0fb:	js     0x40e10b
  40e0fd:	ins    DWORD PTR es:[edi],dx
  40e0fe:	or     BYTE PTR [ecx-0x2],bh
  40e101:	mov    esi,0x3d00791f
  40e106:	xchg   ebp,eax
  40e107:	inc    eax
  40e108:	inc    esp
  40e109:	mov    dl,0x0
  40e10b:	add    BYTE PTR [esi-0x45dbb74],bl
  40e111:	xlat   BYTE PTR ds:[ebx]
  40e112:	pop    edx
  40e113:	mov    al,0x5c
  40e115:	add    eax,0xbf160f00
  40e11a:	in     al,0x7
  40e11c:	adc    BYTE PTR [edi+0x4a2f00d1],bh
  40e122:	in     eax,0x8d
  40e124:	mov    cl,0xd5
  40e126:	xchg   DWORD PTR [ebp+0x8],eax
  40e129:	out    dx,al
  40e12a:	and    eax,0x8b05b5b3
  40e12f:	lock pop es
  40e131:	clc    
  40e132:	std    
  40e133:	psubb  mm7,QWORD PTR [ebx]
  40e136:	(bad)  
  40e137:	push   ebx
  40e139:	dec    edi
  40e13a:	out    0xd5,al
  40e13c:	addr16 add eax,0xe939ff00
  40e142:	push   0xe6540a5a
  40e147:	jo     0x40e0fa
  40e149:	clc    
  40e14a:	std    
  40e14b:	sub    DWORD PTR [esi+edi*8-0x12e5f78c],0x58
  40e153:	mov    ah,0x45
  40e155:	add    eax,0xfdb70feb
  40e15a:	std    
  40e15b:	jne    0x40e197
  40e15d:	mov    edi,0xebfff743
  40e162:	add    al,dh
  40e164:	stc    
  40e165:	sti    
  40e166:	(bad)  
  40e167:	out    0x9f,eax
  40e169:	mov    edx,0x2b4ffff
  40e16e:	sti    
  40e16f:	add    DWORD PTR [eax],eax
  40e171:	add    BYTE PTR [ecx-0x5e],bh
  40e174:	jle    0x40e1f3
  40e176:	jmp    0x40e1d3
  40e178:	jb     0x40e110
  40e17a:	repz jo 0x40e167
  40e17d:	jmp    FWORD PTR [ecx-0x11]
  40e180:	push   0x33e697ff
  40e185:	std    
  40e186:	xor    esi,edi
  40e188:	add    eax,0x3
  40e18b:	nop
  40e18c:	mov    esi,0x895178eb
  40e191:	in     al,dx
  40e192:	inc    edi
  40e193:	repnz adc al,BYTE PTR [ebx+0x56fefa99]
  40e19a:	popf   
  40e19b:	in     al,0xfd
  40e19d:	add    ebx,DWORD PTR [eax]
  40e19f:	mov    BYTE PTR [esi+ecx*4],cl
  40e1a2:	adc    eax,0x1e00026b
  40e1a7:	(bad)  
  40e1a8:	jnp    0x40e1a9
  40e1aa:	dec    edi
  40e1ab:	add    eax,0x1dda5b3c
  40e1b0:	je     0x40e1b2
  40e1b2:	popf   
  40e1b3:	imul   eax,DWORD PTR [edx],0x88c5f089
  40e1b9:	add    eax,0xe77aa69e
  40e1be:	and    ebx,DWORD PTR [edi+0x2]
  40e1c1:	add    BYTE PTR [ecx],ah
  40e1c3:	sub    dh,bh
  40e1c5:	pop    ss
  40e1c6:	es lahf 
  40e1c8:	jbe    0x40e154
  40e1ca:	pop    ebx
  40e1cb:	ret    0x347
  40e1ce:	popf   
  40e1cf:	imul   edi,DWORD PTR [ebx+0x4c],0xefcf2151
  40e1d6:	add    BYTE PTR [eax],al
  40e1d8:	test   BYTE PTR [esi+0x11e8286e],dh
  40e1de:	imul   eax,DWORD PTR [esi+0x16],0xe088729f
  40e1e5:	std    
  40e1e6:	cmp    bh,al
  40e1e8:	mov    al,0xb6
  40e1ea:	xchg   DWORD PTR [ecx+edi*1-0x1b],edi
  40e1ee:	add    eax,0x8d71d08b
  40e1f3:	dec    ebx
  40e1f4:	pushf  
  40e1f5:	jno    0x40e1df
  40e1f7:	adc    ebp,DWORD PTR [esi+eiz*8-0x3a]
  40e1fb:	push   es
  40e1fc:	xchg   ebp,eax
  40e1fd:	cmp    DWORD PTR [ebp+0x14],edi
  40e200:	shr    DWORD PTR [edi-0x3e],0xff
  40e204:	pop    ds
  40e205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e206:	push   cs
  40e207:	test   ebp,ebx
  40e209:	cs or  eax,0x87ad608b
  40e20f:	int    0xf5
  40e211:	jmp    0xcea6:0x29d0006
  40e218:	(bad)  
  40e219:	sub    esp,DWORD PTR [edx+0x6176617c]
  40e21f:	mov    dh,0x3
  40e222:	xchg   edx,eax
  40e223:	cmp    BYTE PTR [ebx-0x2],ah
  40e226:	add    al,0x46
  40e228:	mov    bl,0xbd
  40e22a:	je     0x40e1b4
  40e22c:	sub    dh,bh
  40e22e:	jne    0x40e1f6
  40e230:	mov    dl,0x1
  40e232:	or     al,0x70
  40e234:	popf   
  40e235:	aad    0x60
  40e237:	cmp    dl,BYTE PTR [eax]
  40e239:	outs   dx,DWORD PTR ds:[esi]
  40e23a:	in     eax,dx
  40e23b:	pop    DWORD PTR [eax]
  40e23d:	add    BYTE PTR [edi],al
  40e23f:	js     0x40e296
  40e241:	jl     0x40e22a
  40e243:	xlat   BYTE PTR ds:[ebx]
  40e244:	pop    ds
  40e245:	inc    eax
  40e246:	ror    BYTE PTR [ebx+0x6a5b8838],1
  40e24c:	rol    DWORD PTR [esi],cl
  40e24e:	popf   
  40e24f:	add    ch,BYTE PTR [ebp+0x43]
  40e252:	out    dx,al
  40e253:	pop    ss
  40e254:	pop    esp
  40e255:	les    esp,FWORD PTR [edx-0x61b2ef2e]
  40e25b:	add    ch,cl
  40e25d:	xchg   BYTE PTR [edx],cl
  40e25f:	stc    
  40e260:	cli    
  40e261:	mov    BYTE PTR [ebx-0x75],bl
  40e264:	push   ds
  40e265:	imul   ebp,ebx,0x1
  40e268:	jmp    0x7382fb70
  40e26d:	push   es
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e26f:	inc    edx
  40e270:	test   al,0xdd
  40e272:	pop    edi
  40e273:	xor    ebp,DWORD PTR [ecx]
  40e275:	fstp   st(7)
  40e277:	int3   
  40e278:	jno    0x40e2e2
  40e27a:	ins    DWORD PTR es:[edi],dx
  40e27b:	shl    DWORD PTR [esi],cl
  40e27d:	rcr    DWORD PTR [ecx],cl
  40e27f:	mov    ebp,0xd3fad4d4
  40e284:	push   0x4
  40e286:	popf   
  40e287:	mov    eax,eax
  40e289:	aaa    
  40e28a:	jmp    0x40e2c6
  40e28c:	mov    edi,0xff8ba6f0
  40e291:	adc    esp,DWORD PTR [ebp-0x7c]
  40e294:	cli    
  40e295:	call   0xf1ab156c
  40e29a:	inc    esi
  40e29b:	or     edx,ebx
  40e29d:	sahf   
  40e29e:	inc    esi
  40e29f:	cmp    al,0xc6
  40e2a1:	sbb    eax,0x899e0000
  40e2a6:	das    
  40e2a7:	pusha  
  40e2a8:	mov    cl,0x2
  40e2aa:	mov    edi,DWORD PTR [ecx+0x1c]
  40e2ad:	ins    DWORD PTR es:[edi],dx
  40e2ae:	jae    0x40e28f
  40e2b0:	sbb    DWORD PTR ds:0x6a9d1789,esi
  40e2b6:	(bad)  [edi+0x16]
  40e2b9:	jne    0x40e23d
  40e2bb:	out    0x92,eax
  40e2bd:	add    edi,DWORD PTR [ebp-0xd]
  40e2c0:	pop    es
  40e2c1:	xor    al,ch
  40e2c3:	out    dx,eax
  40e2c4:	jmp    0x40e33a
  40e2c6:	(bad)  
  40e2c7:	mov    bh,0xb
  40e2c9:	dec    DWORD PTR [edx+0x56fe022f]
  40e2cf:	push   ecx
  40e2d0:	call   0xaa77e128
  40e2d5:	inc    edx
  40e2d6:	pop    esi
  40e2d7:	(bad)  
  40e2d8:	jnp    0x40e325
  40e2da:	ret    0x5872
  40e2dd:	add    cl,BYTE PTR [ebx+0x56d073f0]
  40e2e3:	ins    BYTE PTR es:[edi],dx
  40e2e4:	shl    cl,1
  40e2e6:	xor    ah,BYTE PTR [ecx+eiz*8-0xf]
  40e2ea:	cs xchg edx,eax
  40e2ec:	fisubr WORD PTR ds:0xd34e018b
  40e2f2:	out    0xad,eax
  40e2f4:	retf   
  40e2f5:	je     0x40e2f5
  40e2f7:	bound  edx,QWORD PTR [ecx-0x62a30a82]
  40e2fd:	xor    al,al
  40e2ff:	sar    BYTE PTR [edi-0x61809834],cl
  40e305:	add    al,BYTE PTR [eax]
  40e307:	bound  eax,QWORD PTR [eax]
  40e309:	add    BYTE PTR [edi+0x5d],bl
  40e30c:	fld    QWORD PTR [eax]
  40e30e:	pop    esi
  40e30f:	(bad)  
  40e310:	call   DWORD PTR [ebp+0x6e]
  40e313:	(bad)  
  40e315:	mov    bh,0x6
  40e317:	stc    
  40e318:	std    
  40e319:	mov    al,BYTE PTR [edi]
  40e31b:	in     eax,0xc
  40e31d:	push   0xffffffc4
  40e31f:	imul   edx,DWORD PTR [eax+eax*1-0x3fccfe4c],0x79361c
  40e32a:	les    ebx,FWORD PTR [eax+0x5c]
  40e32d:	pop    ebx
  40e32e:	pop    es
  40e32f:	push   ebx
  40e330:	mov    esp,ebp
  40e332:	test   DWORD PTR [ebp+0x55],ecx
  40e335:	xor    ebp,DWORD PTR [ebx]
  40e337:	sub    al,0xdb
  40e339:	mov    DWORD PTR [ecx-0x7f81c813],ecx
  40e33f:	jnp    0x40e36c
  40e341:	mov    eax,DWORD PTR [edx-0x8993904]
  40e347:	jns    0x40e367
  40e349:	add    BYTE PTR [edx+0x16],dl
  40e34c:	push   0x4
  40e34e:	pop    es
  40e34f:	ret    0x501a
  40e352:	stos   DWORD PTR es:[edi],eax
  40e353:	jb     0x40e35b
  40e355:	inc    DWORD PTR [ecx+0x2d]
  40e358:	push   ss
  40e359:	inc    eax
  40e35a:	inc    esp
  40e35b:	jl     0x40e31f
  40e35d:	or     al,0xc1
  40e35f:	shl    DWORD PTR [ebx+0x3],0xab
  40e363:	inc    edx
  40e364:	cli    
  40e365:	inc    ebx
  40e366:	mov    bh,0xc0
  40e368:	cmp    ecx,DWORD PTR ss:[edx]
  40e36b:	jne    0x40e3e7
  40e36d:	rol    DWORD PTR [eax],cl
  40e36f:	add    BYTE PTR [edi-0xa005be],ch
  40e375:	(bad)
  40e378:	xor    al,0x52
  40e37a:	mov    esp,ebp
  40e37c:	xor    eax,0xfb33554c
  40e381:	fisttp DWORD PTR cs:[ecx+0x7e37fa69]
  40e388:	popf   
  40e389:	addr16 clc 
  40e38b:	sub    al,0x26
  40e38d:	pop    ebp
  40e38e:	add    eax,edi
  40e390:	jnp    0x40e37a
  40e392:	sti    
  40e393:	xor    ebx,DWORD PTR [ebp-0x7295e4d3]
  40e399:	call   0xa4ae06e1
  40e39e:	out    dx,al
  40e39f:	pop    es
  40e3a0:	shl    BYTE PTR [ebp+0x36],cl
  40e3a3:	push   ss
  40e3a4:	pop    ebp
  40e3a5:	imul   eax,DWORD PTR [ebx+0x43e691c3],0x74
  40e3ac:	sahf   
  40e3ad:	test   BYTE PTR [esi+0x40e85efb],bh
  40e3b3:	aaa    
  40e3b4:	adc    ax,0x7c00
  40e3b8:	into   
  40e3b9:	fistp  QWORD PTR [esi+0x4b10fafb]
  40e3bf:	rcr    DWORD PTR [ecx+0x1656d069],0xe2
  40e3c6:	xchg   BYTE PTR [esi-0x5f],al
  40e3c9:	loopne 0x40e43d
  40e3cb:	dec    edi
  40e3cc:	test   DWORD PTR [ebx+0x77],ecx
  40e3cf:	(bad)  
  40e3d0:	jb     0x40e3bb
  40e3d2:	jnp    0x40e3d5
  40e3d4:	add    BYTE PTR [eax],al
  40e3d6:	call   0xba076732
  40e3db:	xchg   esp,eax
  40e3dc:	push   0xffffff9a
  40e3de:	pop    edx
  40e3df:	and    eax,0x68558279
  40e3e4:	cmc    
  40e3e5:	add    ecx,DWORD PTR [esi-0x71fd92d7]
  40e3eb:	sub    esp,eax
  40e3ed:	pop    esi
  40e3ee:	fld    TBYTE PTR [eax]
  40e3f0:	lea    eax,[ebx+0x79]
  40e3f3:	jno    0x40e380
  40e3f5:	dec    ebx
  40e3f6:	and    DWORD PTR [ebp-0x75],0xcae0993f
  40e3fd:	add    edx,esi
  40e3ff:	sub    ch,bh
  40e401:	add    cl,dh
  40e403:	add    ch,BYTE PTR [ecx+0x6942a744]
  40e409:	arpl   WORD PTR [eax],ax
  40e40b:	ret    
  40e40c:	test   eax,0x63dbfaed
  40e411:	inc    esi
  40e412:	mov    dl,0x2
  40e414:	push   ebx
  40e415:	cmp    al,0xea
  40e417:	repnz in al,0x78
  40e41a:	mov    dl,0x6a
  40e41c:	adc    al,0x2d
  40e41e:	lahf   
  40e41f:	add    ch,BYTE PTR [edx+0x3f]
  40e422:	scas   al,BYTE PTR es:[edi]
  40e423:	aas    
  40e424:	jno    0x40e3e5
  40e426:	jle    0x40e42e
  40e428:	jb     0x40e3f1
  40e42a:	jle    0x40e436
  40e42c:	aas    
  40e42d:	lea    ebp,[esi]
  40e42f:	push   ds
  40e430:	loope  0x40e4aa
  40e432:	push   0x4d0ba87f
  40e437:	jg     0x40e3e0
  40e439:	or     eax,DWORD PTR [eax]
  40e43b:	add    BYTE PTR [ebp-0x62fc160b],dh
  40e441:	sub    dh,0xff
  40e444:	xchg   edx,eax
  40e445:	aad    0xdb
  40e447:	add    eax,0xce295a92
  40e44c:	pop    ss
  40e44d:	imul   sp,WORD PTR [edi-0x56],0x61cc
  40e453:	jae    0x40e47c
  40e455:	(bad)  
  40e456:	in     al,dx
  40e457:	rcl    BYTE PTR [edi],1
  40e459:	cmc    
  40e45a:	lock add al,0xd2
  40e45d:	inc    cl
  40e45f:	dec    edx
  40e460:	xchg   edx,eax
  40e461:	push   0x78
  40e463:	push   ebx
  40e464:	push   ebx
  40e465:	jae    0x40e4d3
  40e467:	inc    ebx
  40e468:	fwait
  40e469:	jle    0x40e4de
  40e46b:	add    ebx,DWORD PTR [ebp-0x613e9dfe]
  40e471:	iret   
  40e472:	fstp   DWORD PTR [ebp+eiz*1-0x43]
  40e476:	clc    
  40e477:	mov    ecx,ecx
  40e479:	outs   dx,BYTE PTR ds:[esi]
  40e47a:	mov    edi,0xfff49ed8
  40e47f:	jle    0x40e4a8
  40e481:	(bad)  
  40e482:	test   DWORD PTR [edx],0x72db2f98
  40e488:	sar    bh,cl
  40e48a:	jl     0x40e46d
  40e48c:	adc    dh,dl
  40e48e:	sti    
  40e48f:	adc    ah,dl
  40e491:	bound  edi,QWORD PTR [ebp+0x1]
  40e494:	es std 
  40e496:	mov    WORD PTR ds:0xd56a0a9e,gs
  40e49c:	into   
  40e49d:	test   DWORD PTR [esi-0x1f],eax
  40e4a0:	add    BYTE PTR [eax],al
  40e4a2:	out    dx,al
  40e4a3:	jae    0x40e4b9
  40e4a5:	in     eax,dx
  40e4a6:	mov    al,ds:0x5d69ffc2
  40e4ab:	pop    es
  40e4ac:	test   DWORD PTR [ecx+0x2cfed6cd],ebp
  40e4b2:	xor    eax,0x1e8d4488
  40e4b7:	inc    eax
  40e4b8:	aaa    
  40e4b9:	ret    0x62dd
  40e4bc:	jnp    0x40e45f
  40e4be:	push   ss
  40e4bf:	cmp    al,0x8a
  40e4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c2:	or     DWORD PTR ds:0x860a6eff,eax
  40e4c8:	mov    edi,0x4d7da7dc
  40e4cd:	in     eax,0x17
  40e4cf:	inc    ebx
  40e4d0:	push   0x29
  40e4d2:	mov    ecx,0xb6c30605
  40e4d7:	ret    
  40e4d8:	push   esi
  40e4d9:	cdq    
  40e4da:	sbb    eax,eax
  40e4dc:	add    edi,DWORD PTR [esi]
  40e4de:	mov    WORD PTR [edx],?
  40e4e0:	push   ss
  40e4e1:	test   eax,0xddc3859e
  40e4e6:	retf   
  40e4e7:	(bad)  
  40e4e8:	repz jb 0x40e52f
  40e4eb:	or     cl,BYTE PTR [ebx+0x4484b2a4]
  40e4f1:	adc    DWORD PTR [ecx+0x2d],edi
  40e4f4:	inc    edi
  40e4f5:	in     eax,0x2a
  40e4f7:	or     DWORD PTR [edx+0x6971f200],0x14de5cc9
  40e501:	rcl    BYTE PTR [ebx],1
  40e503:	stc    
  40e504:	scas   al,BYTE PTR es:[edi]
  40e505:	add    DWORD PTR [eax],eax
  40e507:	add    BYTE PTR [edi],ch
  40e509:	pop    ecx
  40e50a:	pop    esp
  40e50b:	leave  
  40e50c:	ss jb  0x40e50d
  40e50f:	mov    bh,BYTE PTR [ecx+0x4cc083ea]
  40e515:	popf   
  40e516:	push   0xa6deaa00
  40e51b:	add    ah,dh
  40e51d:	add    eax,0x7974c9eb
  40e522:	and    al,BYTE PTR [esp+eax*8]
  40e525:	aas    
  40e526:	push   ebp
  40e527:	mov    ecx,DWORD PTR [edi*2-0x22338b11]
  40e52e:	shr    esp,cl
  40e530:	and    edi,ecx
  40e532:	xchg   DWORD PTR [edi-0x38],eax
  40e535:	jl     0x40e4fb
  40e537:	call   0x3ecffe
  40e53c:	cmp    ch,al
  40e53e:	jae    0x40e544
  40e540:	out    0xc5,al
  40e542:	jmp    0x288e474
  40e547:	inc    ecx
  40e548:	lahf   
  40e549:	mov    edi,0xc8d0e836
  40e54e:	std    
  40e54f:	(bad)  
  40e550:	clc    
  40e551:	lds    esi,FWORD PTR [edx-0x14]
  40e554:	inc    DWORD PTR [edi+0x2]
  40e557:	mov    eax,ebp
  40e559:	pop    esp
  40e55a:	mov    esi,0x686f7738
  40e55f:	cmp    BYTE PTR ds:0x2894e40,dh
  40e565:	jno    0x40e564
  40e567:	adc    eax,0x3fff54
  40e56c:	add    BYTE PTR [eax],al
  40e56e:	mov    bh,0x31
  40e570:	or     esi,DWORD PTR [eax-0x3da3a7cb]
  40e576:	popf   
  40e577:	pop    edi
  40e578:	add    dl,BYTE PTR [ebp+0x26]
  40e57b:	outs   dx,DWORD PTR ds:[esi]
  40e57c:	sub    bl,0xdd
  40e57f:	xchg   ecx,eax
  40e580:	xchg   DWORD PTR [ecx+ebx*2+0x13],esi
  40e584:	fwait
  40e585:	add    bl,BYTE PTR [ebp-0x5ab376a5]
  40e58b:	test   DWORD PTR [ebx],eax
  40e58d:	mov    esp,ebx
  40e58f:	push   edx
  40e590:	test   dh,bh
  40e592:	add    dl,BYTE PTR [eax-0x2b]
  40e595:	enter  0x5edf,0x2
  40e599:	push   esi
  40e59a:	dec    edx
  40e59b:	in     al,0x7b
  40e59d:	mov    ch,ah
  40e59f:	push   edx
  40e5a0:	fucomp st(3)
  40e5a2:	loop   0x40e553
  40e5a4:	mov    al,BYTE PTR [esi-0x5f]
  40e5a7:	in     al,0x40
  40e5a9:	out    0x2,eax
  40e5ab:	lahf   
  40e5ac:	je     0x40e5ac
  40e5ae:	and    DWORD PTR [ebx-0x66c9ec11],ebx
  40e5b4:	cmp    eax,DWORD PTR [ebx]
  40e5b6:	outs   dx,BYTE PTR ds:[esi]
  40e5b7:	add    eax,0x804b573c
  40e5bc:	push   cs
  40e5bd:	xor    BYTE PTR [ebx-0x267cfbe5],dl
  40e5c3:	pop    esi
  40e5c4:	mov    dl,0x0
  40e5c6:	cli    
  40e5c7:	pop    ss
  40e5c8:	inc    ecx
  40e5c9:	push   esp
  40e5ca:	es out dx,al
  40e5cc:	ror    BYTE PTR [edx-0x40188e28],cl
  40e5d2:	add    BYTE PTR [eax],al
  40e5d4:	lds    ebx,FWORD PTR [ecx+eax*1+0x66]
  40e5d8:	push   ds
  40e5d9:	pop    ecx
  40e5da:	and    al,BYTE PTR [eax]
  40e5dc:	into   
  40e5dd:	mov    bh,0x87
  40e5df:	xlat   BYTE PTR ds:[ebx]
  40e5e0:	arpl   WORD PTR [edi-0x7011008d],bx
  40e5e6:	call   0x16f20dee
  40e5eb:	(bad)  
  40e5ec:	fidivr WORD PTR ds:0x34a4fcc
  40e5f2:	cld    
  40e5f3:	aaa    
  40e5f4:	stos   DWORD PTR es:[edi],eax
  40e5f5:	ret    0x80e8
  40e5f8:	pop    esi
  40e5f9:	jmp    FWORD PTR [ebx+0x44]
  40e5fc:	scas   al,BYTE PTR es:[edi]
  40e5fd:	pop    ds
  40e5fe:	mov    bh,0x88
  40e600:	mov    cl,0xfa
  40e602:	adc    BYTE PTR [eax],bh
  40e604:	and    BYTE PTR [eax-0x3],dh
  40e607:	adc    BYTE PTR [edx],0x5
  40e60a:	out    0x96,al
  40e60c:	push   edx
  40e60d:	xchg   DWORD PTR [eax],ebp
  40e60f:	out    dx,eax
  40e610:	into   
  40e611:	sub    ch,BYTE PTR [eax+ecx*1]
  40e614:	mov    BYTE PTR [ebx],dl
  40e616:	push   ebx
  40e617:	add    BYTE PTR [eax],ch
  40e619:	enter  0xd3f4,0x21
  40e61d:	(bad)  
  40e61e:	in     al,dx
  40e61f:	shr    ebx,cl
  40e621:	adc    eax,0x25d0df9
  40e626:	push   0x3f
  40e628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e629:	dec    eax
  40e62a:	sub    esi,DWORD PTR [ebp-0x63]
  40e62d:	push   DWORD PTR [ebp-0x44]
  40e630:	stos   BYTE PTR es:[edi],al
  40e631:	call   0xf6e3a715
  40e636:	out    dx,al
  40e637:	add    DWORD PTR [eax],0x0
  40e63a:	cmp    esi,edi
  40e63c:	call   0x6029852f
  40e641:	ror    BYTE PTR [edx-0x628ad4b8],0xe8
  40e648:	imul   esi,esp,0xd5fd02ce
  40e64e:	add    al,0x13
  40e650:	pop    esp
  40e651:	in     al,dx
  40e652:	mov    esi,0xeb1fa97d
  40e657:	rcr    BYTE PTR [ebp+0xe],cl
  40e65a:	mov    ecx,0x1e03a918
  40e65f:	inc    esi
  40e660:	fdivr  QWORD PTR [esi+0x2a]
  40e663:	not    BYTE PTR ds:0xf0f517ce
  40e669:	imul   edi,DWORD PTR [ebx-0x36ca0093],0xffffff84
  40e670:	imul   ebx
  40e672:	mov    eax,ds:0xde6dbf8d
  40e677:	div    BYTE PTR [ebx]
  40e679:	loope  0x40e676
  40e67b:	cli    
  40e67c:	je     0x40e678
  40e67e:	inc    esp
  40e67f:	dec    DWORD PTR [esi+eiz*4-0x55732d76]
  40e686:	adc    dl,0xfe
  40e689:	aam    0xce
  40e68b:	sbb    BYTE PTR [eax-0x17],al
  40e68e:	sbb    eax,0x4b270b43
  40e693:	jo     0x40e695
  40e695:	test   BYTE PTR [edi-0x38],0x33
  40e699:	inc    edi
  40e69a:	enter  0x33c3,0x5d
  40e69e:	add    BYTE PTR [eax],al
  40e6a0:	lahf   
  40e6a1:	cmp    BYTE PTR [ebp+ebx*8-0x62],0xf5
  40e6a6:	add    ecx,DWORD PTR [edi+0x60]
  40e6a9:	les    esi,FWORD PTR [ebx]
  40e6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ac:	in     al,0x6f
  40e6ae:	add    BYTE PTR [ebx-0x1c],ah
  40e6b1:	outs   dx,DWORD PTR ds:[esi]
  40e6b2:	pop    ebp
  40e6b3:	adc    cl,BYTE PTR [eax-0x1c16f8bf]
  40e6b9:	scas   al,BYTE PTR es:[edi]
  40e6ba:	aaa    
  40e6bb:	aaa    
  40e6bc:	cmp    dh,BYTE PTR [edx-0x76]
  40e6bf:	out    0x1d,eax
  40e6c1:	adc    eax,DWORD PTR [ecx]
  40e6c3:	(bad)  
  40e6c4:	xlat   BYTE PTR ds:[ebx]
  40e6c5:	add    ch,BYTE PTR [ebx-0x57]
  40e6c8:	jno    0x40e6cd
  40e6ca:	rol    edx,0xf1
  40e6cd:	repz or ah,BYTE PTR [ebx+edx*2+0x36]
  40e6d2:	push   edx
  40e6d3:	xor    DWORD PTR [ebx+0x3e],0x3e266fe
  40e6da:	xor    ch,BYTE PTR [ecx]
  40e6dc:	and    eax,0xefe773ae
  40e6e1:	mov    edi,0x25f6203
  40e6e6:	imul   eax,DWORD PTR [eax],0xffffffad
  40e6e9:	push   ds
  40e6ea:	call   0xfe327128
  40e6ef:	pop    esi
  40e6f0:	xchg   DWORD PTR [ebx-0x77],ecx
  40e6f3:	in     al,dx
  40e6f4:	mov    edi,0xa8830643
  40e6f9:	push   cs
  40e6fa:	push   ebx
  40e6fb:	push   edi
  40e6fc:	leave  
  40e6fd:	dec    ebx
  40e6fe:	(bad)  
  40e6ff:	call   0x40edda
  40e704:	add    BYTE PTR [eax],al
  40e706:	inc    edi
  40e707:	mov    ebp,0x74305e37
  40e70c:	xor    DWORD PTR [ebx],esi
  40e70e:	sbb    ebp,ebp
  40e710:	add    al,0x8b
  40e712:	cmp    DWORD PTR [edx-0x75],ebp
  40e715:	inc    esp
  40e716:	add    ebp,DWORD PTR [edx-0x75]
  40e719:	push   ebp
  40e71a:	call   0x4417de8
  40e71f:	add    ch,BYTE PTR [edx+0x14]
  40e722:	jns    0x40e75e
  40e724:	jmp    0xdb50:0xd63a4950
  40e72b:	or     bh,BYTE PTR [esi+edx*1]
  40e72e:	test   BYTE PTR [esi],al
  40e730:	add    esp,0xffffffb8
  40e733:	jp     0x40e6f3
  40e735:	js     0x40e71d
  40e737:	inc    esp
  40e738:	add    edi,0x45e1cbc
  40e73e:	cwde   
  40e73f:	rol    DWORD PTR [ecx+0x59510bc8],0xc9
  40e746:	test   BYTE PTR ds:0xccf78b00,0xf4
  40e74d:	push   ebx
  40e74e:	push   edi
  40e74f:	mov    esp,0xfaaa3955
  40e754:	jge    0x40e77b
  40e756:	inc    edi
  40e757:	lock mov DWORD PTR [esi],eax
  40e75a:	outs   dx,BYTE PTR ds:[esi]
  40e75b:	adc    eax,0x6983448d
  40e760:	dec    esi
  40e761:	call   FWORD PTR [ebp+0x6a14264f]
  40e767:	jbe    0x40e797
  40e769:	push   ss
  40e76a:	add    BYTE PTR [eax],al
  40e76c:	fstp   QWORD PTR [ebx-0x7b]
  40e76f:	ret    
  40e770:	test   eax,0xac7342e6
  40e775:	cwde   
  40e776:	test   esi,eax
  40e778:	test   DWORD PTR [eax-0x30],esi
  40e77b:	add    eax,ecx
  40e77d:	mov    BYTE PTR [ebp-0x3253c539],0xc1
  40e784:	cdq    
  40e785:	pop    ebx
  40e786:	jge    0x40e74a
  40e788:	ss adc al,0x36
  40e78b:	shl    BYTE PTR [ebx+ecx*4+0x6],cl
  40e78f:	je     0x40e753
  40e791:	test   DWORD PTR [ebx],ebp
  40e793:	push   eax
  40e794:	mov    ebp,0xc46608ee
  40e799:	mov    esi,DWORD PTR [esi]
  40e79b:	je     0x40e743
  40e79d:	or     DWORD PTR [ebx],edi
  40e79f:	push   ebp
  40e7a0:	sbb    eax,0xa3731762
  40e7a5:	fs mov eax,0x2b99ebf0
  40e7ab:	push   esp
  40e7ac:	fwait
  40e7ad:	jae    0x40e7a5
  40e7af:	out    dx,eax
  40e7b0:	sbb    eax,0x280f1742
  40e7b5:	fwait
  40e7b6:	rol    edx,1
  40e7b8:	(bad)  
  40e7b9:	fwait
  40e7ba:	inc    esp
  40e7bb:	push   ebp
  40e7bc:	push   0xfffffff0
  40e7be:	jne    0x40e829
  40e7c0:	xchg   ecx,eax
  40e7c1:	push   eax
  40e7c2:	cmp    ch,BYTE PTR [edx]
  40e7c4:	lods   eax,DWORD PTR ds:[esi]
  40e7c5:	xor    edi,DWORD PTR [esi+0x13]
  40e7c8:	pushf  
  40e7c9:	dec    ecx
  40e7ca:	adc    cl,BYTE PTR [eax+0x4ec25d89]
  40e7d0:	add    BYTE PTR [eax],al
  40e7d2:	adc    dh,dh
  40e7d4:	rcr    BYTE PTR [ebp+0x5e],1
  40e7d7:	(bad)  
  40e7d9:	jmp    0x40e7f1
  40e7db:	daa    
  40e7dc:	add    BYTE PTR [ebx+0x7f110371],al
  40e7e2:	ror    DWORD PTR [edx+0x50],1
  40e7e5:	push   edi
  40e7e6:	jae    0x40e854
  40e7e8:	push   ebp
  40e7e9:	jge    0x40e7cc
  40e7eb:	(bad)  
  40e7ec:	popa   
  40e7ed:	mov    edi,0x5f9b7d9a
  40e7f2:	inc    edx
  40e7f3:	inc    esp
  40e7f4:	cmp    eax,0xdcd95371
  40e7f9:	jle    0x40e7dc
  40e7fb:	pop    esi
  40e7fc:	cwde   
  40e7fd:	jle    0x40e7d8
  40e7ff:	dec    edx
  40e800:	mov    eax,0xf72e9170
  40e805:	ret    
  40e806:	xor    al,BYTE PTR [ecx+0x4154002c]
  40e80c:	loopne 0x40e811
  40e80e:	enter  0x1477,0x83
  40e812:	push   es
  40e813:	outs   dx,DWORD PTR ds:[esi]
  40e814:	out    0x3,eax
  40e816:	popf   
  40e817:	aam    0x9d
  40e819:	jle    0x40e86c
  40e81b:	pop    es
  40e81c:	out    dx,eax
  40e81d:	jo     0x40e822
  40e81f:	pop    ebx
  40e820:	adc    BYTE PTR [esp+ebx*4],0x2
  40e824:	sbb    al,BYTE PTR [edx+esi*4+0x7d]
  40e828:	pop    ebx
  40e829:	js     0x40e82d
  40e82b:	js     0x40e7ef
  40e82d:	jo     0x40e812
  40e82f:	jge    0x40e89c
  40e831:	sti    
  40e832:	fsubr  DWORD PTR [ebx-0x43]
  40e835:	rol    DWORD PTR [eax],cl
  40e837:	add    bl,dl
  40e839:	adc    eax,0x25d1569
  40e83e:	jmp    0xb8fb:0x6b7d5243
  40e845:	imul   ebx,DWORD PTR [ebp-0x7fbad82d],0x5d
  40e84c:	mov    ah,0x6b
  40e84e:	lea    esi,[eax+0x4299e96]
  40e854:	and    DWORD PTR [edx-0xc],eax
  40e857:	das    
  40e858:	pop    es
  40e859:	adc    eax,DWORD PTR [eax]
  40e85b:	and    edi,DWORD PTR fs:[edi-0x3]
  40e85f:	outs   dx,BYTE PTR ds:[esi]
  40e860:	or     eax,0xd62f8abc
  40e865:	push   edx
  40e866:	jmp    0xbfc0d5c9
  40e86b:	fld    QWORD PTR [esi+0x4641c577]
  40e871:	pop    eax
  40e872:	inc    BYTE PTR [esi+0x22]
  40e875:	stos   DWORD PTR es:[edi],eax
  40e876:	jae    0x40e854
  40e878:	rol    DWORD PTR [ebp-0x19],1
  40e87b:	pop    ebx
  40e87c:	call   0xbcb1e6ed
  40e881:	add    al,BYTE PTR [eax]
  40e883:	jmp    0x1f446f43
  40e888:	lods   eax,DWORD PTR ds:[esi]
  40e889:	ins    BYTE PTR es:[edi],dx
  40e88a:	(bad)
  40e88d:	ret    0x9448
  40e890:	mov    bh,0x9b
  40e892:	add    BYTE PTR [edx],dl
  40e894:	enter  0x13d8,0x93
  40e898:	sahf   
  40e899:	sar    esi,cl
  40e89b:	fadd   QWORD PTR [eax]
  40e89d:	add    dl,dl
  40e89f:	adc    al,0x40
  40e8a1:	jmp    0x6ccde386
  40e8a6:	and    eax,0xc9defe6d
  40e8ab:	sar    esi,cl
  40e8ad:	cld    
  40e8ae:	scas   al,BYTE PTR es:[edi]
  40e8af:	adc    al,0x40
  40e8b1:	jmp    0x745827d5
  40e8b6:	in     al,0x6e
  40e8b8:	out    0x17,eax
  40e8ba:	ja     0x40e928
  40e8bc:	(bad)  
  40e8bd:	jo     0x40e92a
  40e8bf:	add    al,BYTE PTR [eax]
  40e8c1:	jmp    0xa7446ee3
  40e8c6:	dec    edx
  40e8c7:	ins    BYTE PTR es:[edi],dx
  40e8c8:	(bad)
  40e8cb:	ret    0x1c48
  40e8ce:	cmp    BYTE PTR [ecx],dh
  40e8d0:	shr    BYTE PTR [esi],0xd3
  40e8d3:	cmp    edx,eax
  40e8d5:	add    BYTE PTR [esp+esi*1],al
  40e8d8:	rol    ch,0xc7
  40e8db:	(bad)  
  40e8dc:	push   DWORD PTR [ecx+ecx*2+0x50]
  40e8e0:	mov    esp,0xfe4639d8
  40e8e5:	push   ebp
  40e8e6:	add    ecx,DWORD PTR [esp+ebp*8]
  40e8e9:	adc    al,BYTE PTR [esi+eax*1-0x80]
  40e8ed:	cmp    eax,0x41bbb4
  40e8f2:	je     0x40e95f
  40e8f4:	adc    eax,0xfdd93ee8
  40e8f9:	(bad)  
  40e8fa:	mov    eax,0xb70e72be
  40e8ff:	sbb    eax,esp
  40e901:	lds    eax,FWORD PTR [eax]
  40e903:	add    bh,dh
  40e905:	add    eax,0xc649c600
  40e90a:	ret    
  40e90b:	inc    ebx
  40e90c:	inc    esp
  40e90d:	call   DWORD PTR [ebp-0x1]
  40e910:	sub    esi,esi
  40e912:	adc    BYTE PTR [eax+0x34],al
  40e915:	cmp    BYTE PTR [esi-0x1ba8ff4],dh
  40e91b:	ret    0x122e
  40e91e:	call   0xfe19fcd8
  40e923:	push   eax
  40e924:	repz jno 0x40e949
  40e927:	or     al,0x3
  40e929:	or     edi,DWORD PTR [esi+edx*1]
  40e92c:	(bad)  
  40e92d:	inc    BYTE PTR [edx-0x290eff3c]
  40e933:	sbb    esi,DWORD PTR [esi+eax*2]
  40e936:	rol    BYTE PTR [esp+eax*8],0x54
  40e93a:	mov    DWORD PTR ds:0x400fd4,ebx
  40e940:	mov    ebp,0x3f3d6653
  40e946:	and    BYTE PTR [esi+0x2d],ah
  40e949:	aas    
  40e94a:	xor    al,0x6a
  40e94c:	test   al,0x82
  40e94e:	inc    ebp
  40e94f:	add    DWORD PTR [ebp-0x6aba7ed5],ebx
  40e955:	dec    esp
  40e956:	pop    edi
  40e957:	dec    edi
  40e958:	and    al,0x51
  40e95a:	jnp    0x40e9c9
  40e95c:	cdq    
  40e95d:	call   0x5fa26bb3
  40e962:	fadd   DWORD PTR [ebx]
  40e964:	sti    
  40e965:	mov    dl,0xdd
  40e967:	sbb    BYTE PTR [eax],al
  40e969:	add    cl,dh
  40e96b:	outs   dx,DWORD PTR ds:[esi]
  40e96c:	jg     0x40e9b4
  40e96e:	mov    BYTE PTR [ebx-0x5476ba81],ch
  40e974:	ins    DWORD PTR es:[edi],dx
  40e975:	shl    BYTE PTR [esi+0x64],cl
  40e978:	jg     0x40e9bf
  40e97a:	mov    ecx,0xa8fed286
  40e97f:	outs   dx,DWORD PTR ds:[esi]
  40e980:	adc    al,0x40
  40e982:	popf   
  40e983:	cmp    DWORD PTR [ecx+0x46],edi
  40e986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e987:	fadd   QWORD PTR [esi+0xb]
  40e98a:	ret    
  40e98b:	repnz les ebx,FWORD PTR [edi]
  40e98e:	sub    esp,DWORD PTR [eax+0x0]
  40e991:	je     0x40e919
  40e993:	jns    0x40e9c0
  40e995:	outs   dx,DWORD PTR ds:[esi]
  40e996:	jbe    0x40e927
  40e998:	pop    ss
  40e999:	push   0xffffffad
  40e99b:	out    dx,al
  40e99c:	lds    ebx,FWORD PTR [edx]
  40e99e:	ins    DWORD PTR es:[edi],dx
  40e99f:	(bad)  
  40e9a0:	les    esp,FWORD PTR [ebx]
  40e9a2:	ins    DWORD PTR es:[edi],dx
  40e9a3:	jo     0x40e9f5
  40e9a5:	gs push ss
  40e9a7:	mov    al,ds:0x6ee18319
  40e9ac:	push   edi
  40e9ad:	adc    DWORD PTR [edi-0x3eba8295],eax
  40e9b3:	es aam 0xfe
  40e9b6:	mov    BYTE PTR [edi],cl
  40e9b8:	push   ss
  40e9b9:	inc    eax
  40e9ba:	popf   
  40e9bb:	fadd   QWORD PTR [edi+0xb]
  40e9be:	mov    ds,WORD PTR [ebx+0x191465ce]
  40e9c4:	cmp    BYTE PTR [ebx-0x22],bl
  40e9c7:	or     edx,edi
  40e9c9:	mov    cl,BYTE PTR [eax+0x15d902]
  40e9cf:	add    BYTE PTR [ebp+0x2],bl
  40e9d2:	adc    ebx,DWORD PTR [eax]
  40e9d4:	sbb    cl,al
  40e9d6:	loopne 0x40e9ab
  40e9d8:	adc    eax,eax
  40e9da:	out    0xd3,eax
  40e9dc:	pusha  
  40e9dd:	add    ecx,ebp
  40e9df:	ins    BYTE PTR es:[edi],dx
  40e9e0:	imul   edi,DWORD PTR [ebx+ebx*8+0x37],0x80e8c2b3
  40e9e8:	pop    esi
  40e9e9:	test   DWORD PTR [esi],0xe922fb81
  40e9ef:	fstp   DWORD PTR [esi-0x1c811312]
  40e9f5:	push   es
  40e9f6:	mov    ecx,0xb90dd87e
  40e9fb:	ins    BYTE PTR es:[edi],dx
  40e9fc:	jno    0x40ea5a
  40e9fe:	lock jle 0x40e9d9
  40ea01:	or     eax,0x67ed03d3
  40ea06:	sbb    esi,esp
  40ea08:	pop    ss
  40ea09:	ror    BYTE PTR [eax],0x81
  40ea0c:	pop    esi
  40ea0d:	test   DWORD PTR [esi-0x78f62786],0xe92eab80
  40ea17:	fst    DWORD PTR [edx+0x637ef6ee]
  40ea1d:	push   ds
  40ea1e:	cdq    
  40ea1f:	jle    0x40ea79
  40ea21:	or     ebx,DWORD PTR [ecx+0x61e0f16c]
  40ea27:	(bad)
  40ea2a:	and    al,0x0
  40ea2c:	sbb    eax,0xa158eaf9
  40ea31:	jne    0x40ea59
  40ea33:	or     DWORD PTR [eax],eax
  40ea35:	add    BYTE PTR [edi+0x2],dh
  40ea38:	cmp    DWORD PTR [ebp-0x31],ebp
  40ea3b:	and    DWORD PTR [edi+edi*8-0x19dcbd71],0x25
  40ea43:	rcl    DWORD PTR [ecx],0xc9
  40ea46:	(bad)  
  40ea48:	call   FWORD PTR [esi]
  40ea4a:	out    0x2f,eax
  40ea4c:	push   0xffffffe9
  40ea4e:	sar    DWORD PTR [edi+ebp*8-0x5a],1
  40ea52:	mov    ebp,DWORD PTR [esi]
  40ea54:	push   ss
  40ea55:	sub    DWORD PTR [ecx+0x25f9457b],esp
  40ea5b:	push   es
  40ea5c:	xor    bh,dh
  40ea5e:	pop    esi
  40ea5f:	addr16 cmc 
  40ea61:	mov    eax,ds:0x2f8c42a5
  40ea66:	mov    bl,0x23
  40ea68:	shr    DWORD PTR [edx-0x22],0xf
  40ea6c:	push   0xffffffd5
  40ea6e:	dec    esi
  40ea6f:	jbe    0x40eab7
  40ea71:	icebp  
  40ea72:	dec    esi
  40ea73:	push   0xbf606cd2
  40ea78:	push   cs
  40ea79:	sahf   
  40ea7a:	scas   al,BYTE PTR es:[edi]
  40ea7b:	add    ebx,0xfffffff1
  40ea7e:	rol    DWORD PTR [ebp+0x1a],1
  40ea81:	aas    
  40ea82:	jge    0x40eaf6
  40ea84:	push   cs
  40ea85:	jbe    0x40ea27
  40ea87:	mov    edx,0x83a7bd47
  40ea8c:	out    0xd4,eax
  40ea8e:	xor    edi,DWORD PTR [ebp-0x424c0697]
  40ea94:	pop    es
  40ea95:	mov    ecx,0xb923c0ab
  40ea9a:	add    BYTE PTR [eax],al
  40ea9c:	mov    cl,0x54
  40ea9e:	gs (bad) 
  40eaa0:	loopne 0x40eaa2
  40eaa2:	(bad)  
  40eaa4:	push   eax
  40eaa5:	add    al,0x66
  40eaa7:	sub    BYTE PTR [esi-0x1],bh
  40eaaa:	sub    BYTE PTR ds:0x280add02,0x0
  40eab1:	jp     0x40eaf9
  40eab3:	sbb    eax,0xe56a2152
  40eab8:	gs mov ebp,0xc0643903
  40eabe:	sbb    edi,DWORD PTR [ecx]
  40eac0:	inc    esi
  40eac1:	push   esp
  40eac2:	add    BYTE PTR gs:[edi+0x44],cl
  40eac6:	add    BYTE PTR [edi],cl
  40eac8:	push   edx
  40eac9:	lods   al,BYTE PTR ds:[esi]
  40eaca:	add    DWORD PTR [esi-0xb],esp
  40eacd:	fld    QWORD PTR [esi]
  40eacf:	add    DWORD PTR [eax],0x6a
  40ead2:	or     eax,DWORD PTR fs:0xd4478764
  40ead9:	cmp    BYTE PTR [ecx-0x3d],bl
  40eadc:	arpl   di,sp
  40eade:	not    BYTE PTR [ecx-0x2d]
  40eae1:	(bad)  
  40eae2:	scas   eax,DWORD PTR es:[edi]
  40eae3:	add    DWORD PTR [edx+eax*1+0x6f9cc085],eax
  40eaea:	adc    edx,0xffffff81
  40eaed:	add    edi,DWORD PTR [edx-0x1bd8ebc]
  40eaf3:	xor    al,ah
  40eaf5:	dec    ebp
  40eaf6:	or     ecx,0x51
  40eaf9:	adc    al,0x38
  40eafb:	add    al,BYTE PTR [eax+0x50]
  40eafe:	cmp    edi,0x0
  40eb01:	add    BYTE PTR [ecx+0x1],dh
  40eb04:	mov    eax,0x80014457
  40eb09:	jmp    0x40eb30
  40eb0b:	call   0x40e9:0x82330078
  40eb12:	adc    bl,cl
  40eb14:	jb     0x40eb3a
  40eb16:	xor    bl,ch
  40eb18:	outs   dx,DWORD PTR ds:[esi]
  40eb19:	jmp    esi
  40eb1b:	push   ebx
  40eb1c:	push   ebp
  40eb1d:	xor    ebp,DWORD PTR [edi-0x27]
  40eb20:	adc    ecx,DWORD PTR [eax+0x12]
  40eb23:	inc    edx
  40eb24:	inc    BYTE PTR [edx+0x7ab90ec0]
  40eb2a:	hlt    
  40eb2b:	add    BYTE PTR [eax+0xd56b485],al
  40eb31:	cmp    eax,edx
  40eb33:	jno    0x40eb3e
  40eb35:	jne    0x40eb38
  40eb37:	jmp    0xf089:0x66cf3e1a
  40eb3e:	popf   
  40eb3f:	inc    eax
  40eb40:	inc    DWORD PTR [edi-0x27810a47]
  40eb46:	sahf   
  40eb47:	cmp    eax,0xde6bc27d
  40eb4c:	dec    ebp
  40eb4d:	js     0x40eae8
  40eb4f:	jo     0x40eb9c
  40eb51:	je     0x40eafa
  40eb53:	loopne 0x40eb0b
  40eb55:	and    esp,DWORD PTR [ecx-0x608cc42a]
  40eb5b:	repnz sub ebx,DWORD PTR [ebx+0x42]
  40eb5f:	cdq    
  40eb60:	cli    
  40eb61:	(bad)  
  40eb62:	out    dx,eax
  40eb63:	sub    al,0x7f
  40eb65:	test   DWORD PTR [eax],0x5c04ec00
  40eb6b:	sub    al,0x9c
  40eb6d:	pop    ebx
  40eb6e:	add    dh,BYTE PTR [ebx]
  40eb70:	data16 mov al,0x45
  40eb73:	jnp    0x40eb7d
  40eb75:	mov    cl,0x55
  40eb77:	je     0x40eb11
  40eb79:	mov    eax,ds:0x5bdd74ba
  40eb7e:	xor    eax,0xf020a6c0
  40eb83:	push   ss
  40eb84:	ret    
  40eb85:	adc    cl,BYTE PTR [esi]
  40eb87:	je     0x40eb6b
  40eb89:	add    BYTE PTR [edi+0x74],ch
  40eb8c:	mov    ds:0x9bffd183,al
  40eb91:	fistp  DWORD PTR [ebp+0x4d]
  40eb94:	cmc    
  40eb95:	mov    al,0x2
  40eb97:	pop    es
  40eb98:	sbb    eax,0x2a562810
  40eb9d:	(bad)  
  40eb9e:	push   ds
  40eb9f:	adc    al,0x10
  40eba1:	mov    ch,BYTE PTR [ecx+0x51]
  40eba4:	jae    0x40eb52
  40eba6:	imul   edx,DWORD PTR [ecx+ebx*2],0x1fffc245
  40ebad:	pop    ds
  40ebae:	adc    edi,DWORD PTR [ecx-0x7ffea479]
  40ebb4:	and    BYTE PTR [ebx],bl
  40ebb6:	jmp    0x40ebc1
  40ebb8:	mov    dh,0x2
  40ebba:	scas   eax,DWORD PTR es:[edi]
  40ebbb:	icebp  
  40ebbc:	mov    al,ds:0xf27ce6ee
  40ebc1:	pop    eax
  40ebc2:	loopne 0x40ec40
  40ebc4:	cmc    
  40ebc5:	xor    BYTE PTR [ecx+0x3dfe25e2],ch
  40ebcb:	ja     0x40ebcd
  40ebcd:	add    BYTE PTR [esi+0x604571ed],al
  40ebd3:	jg     0x40eb66
  40ebd5:	jmp    0x40eb75
  40ebd7:	sub    DWORD PTR [eax+0x3479a4ef],edx
  40ebdd:	and    BYTE PTR [ecx-0x630f5081],bl
  40ebe3:	jnp    0x40ebb4
  40ebe5:	enter  0x40f7,0xe0
  40ebe9:	add    ebx,DWORD PTR [eax]
  40ebeb:	cmp    bh,ah
  40ebed:	xor    eax,0x697d6445
  40ebf2:	add    ecx,esp
  40ebf4:	popa   
  40ebf5:	push   esp
  40ebf6:	scas   eax,DWORD PTR es:[edi]
  40ebf7:	arpl   WORD PTR [eax+0x2b],bp
  40ebfa:	popf   
  40ebfb:	out    dx,al
  40ebfc:	in     al,dx
  40ebfd:	ret    0xedd4
  40ec00:	push   ebp
  40ec01:	jg     0x40ec4f
  40ec03:	out    dx,al
  40ec04:	jmp    0x40ebae
  40ec06:	repz add ah,dh
  40ec09:	sbb    DWORD PTR [ecx],0x6d
  40ec0c:	mov    esp,0xc06421f6
  40ec11:	add    DWORD PTR [esi+0x40],esi
  40ec14:	pop    edi
  40ec15:	add    al,BYTE PTR [esi+0x0]
  40ec18:	push   0x22
  40ec1a:	popf   
  40ec1b:	ja     0x40ec4a
  40ec1d:	leave  
  40ec1e:	aaa    
  40ec1f:	(bad)  
  40ec20:	pusha  
  40ec21:	shl    DWORD PTR [edx],1
  40ec23:	std    
  40ec24:	push   0xe5ea5a7f
  40ec29:	jle    0x40ec33
  40ec2b:	out    dx,eax
  40ec2c:	jmp    0x2a43acb5
  40ec31:	jg     0x40ec33
  40ec33:	add    ch,dl
  40ec35:	out    dx,al
  40ec36:	(bad)  
  40ec37:	mov    esp,0xeefe6546
  40ec3c:	add    eax,0xb1b98acd
  40ec41:	arpl   WORD PTR [ebp+0x20],sp
  40ec44:	mov    dh,0xee
  40ec46:	add    eax,0x4a015f6a
  40ec4b:	push   esp
  40ec4c:	inc    edx
  40ec4d:	jle    0x40ec20
  40ec4f:	cmp    al,0xca
  40ec51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec52:	push   esi
  40ec53:	jmp    0xbfc56ef5
  40ec58:	retf   0x84f6
  40ec5b:	scas   al,BYTE PTR es:[edi]
  40ec5c:	(bad)  
  40ec5d:	std    
  40ec5e:	sub    ch,BYTE PTR [ebx-0x151502d9]
  40ec64:	sbb    DWORD PTR [esi],ebx
  40ec66:	add    BYTE PTR [edx-0x23],ah
  40ec69:	(bad)  
  40ec6a:	jmp    0x1eed:0xffcc46e4
  40ec71:	jle    0x40ec32
  40ec73:	add    BYTE PTR [ebp+edi*2+0x7fa1fdf5],bl
  40ec7a:	and    eax,0xc030d9e9
  40ec7f:	and    ch,BYTE PTR [ecx-0x4897f211]
  40ec85:	arpl   si,di
  40ec87:	push   esi
  40ec88:	inc    ebp
  40ec89:	icebp  
  40ec8a:	add    eax,0x5636d91
  40ec8f:	imul   esp,ecx,0x4ab4022a
  40ec95:	cmp    al,0x1
  40ec97:	mov    eax,ds:0x234b0000
  40ec9c:	add    dl,dh
  40ec9e:	jbe    0x40ec8f
  40eca0:	add    DWORD PTR [eax-0x61],esi
  40eca3:	aas    
  40eca4:	xor    ch,BYTE PTR [ecx]
  40eca6:	ja     0x40ec66
  40eca8:	and    ebp,ebp
  40ecaa:	or     edi,ebp
  40ecac:	cmp    BYTE PTR [ebp+0x74fab2],ah
  40ecb2:	push   cs
  40ecb3:	cmp    BYTE PTR [edx+0x24],0xc
  40ecb7:	(bad)  
  40ecb9:	push   DWORD PTR [ebx+0x71]
  40ecbc:	add    edi,DWORD PTR [eax-0x7ff900f5]
  40ecc2:	ss data16 (bad) 
  40ecc5:	push   edx
  40ecc6:	stos   BYTE PTR es:[edi],al
  40ecc7:	xor    ebp,DWORD PTR [eax+0x32]
  40ecca:	aas    
  40eccb:	lock xor eax,eax
  40ecce:	mov    bh,0xb7
  40ecd0:	pop    ebp
  40ecd1:	sub    eax,DWORD PTR ds:0x3cc95e9
  40ecd7:	fstp   TBYTE PTR [ebp-0x7b]
  40ecda:	push   ss
  40ecdb:	jb     0x40ece9
  40ecdd:	mov    cl,al
  40ecdf:	ins    BYTE PTR es:[edi],dx
  40ece0:	adc    dl,0x88
  40ece3:	arpl   WORD PTR [esi+0x4d3f7511],ax
  40ece9:	jne    0x40ed07
  40eceb:	test   ch,bh
  40eced:	jne    0x40ed6a
  40ecef:	lahf   
  40ecf0:	dec    ecx
  40ecf1:	mov    eax,0x8007069e
  40ecf6:	cmp    cl,BYTE PTR [eax]
  40ecf8:	add    BYTE PTR [ebx-0x7aefdd40],cl
  40ecfe:	add    BYTE PTR [eax],al
  40ed00:	cmp    eax,0x9d890053
  40ed05:	dec    ecx
  40ed06:	pop    esp
  40ed07:	pop    ebx
  40ed08:	mov    dh,0x2
  40ed0a:	add    BYTE PTR [ebp-0x41],dl
  40ed0d:	mov    edx,0xea59834f
  40ed12:	(bad)  
  40ed13:	push   edx
  40ed14:	sub    bl,ch
  40ed16:	lock xor edi,DWORD PTR [edi-0x7d]
  40ed1a:	hlt    
  40ed1b:	je     0x40ecc4
  40ed1d:	push   ecx
  40ed1e:	mov    DWORD PTR [ebp+0x50],edi
  40ed21:	std    
  40ed22:	clc    
  40ed23:	test   DWORD PTR [edx+edx*2+0x12],esi
  40ed27:	bswap  ebx
  40ed29:	repnz push cs
  40ed2b:	popfw  
  40ed2d:	out    dx,al
  40ed2e:	push   ecx
  40ed2f:	jae    0x40ecd7
  40ed31:	mov    DWORD PTR [ebx+0x10],edi
  40ed34:	push   ds
  40ed35:	sub    eax,DWORD PTR [edx]
  40ed37:	dec    eax
  40ed38:	pop    esi
  40ed39:	mov    cl,0xef
  40ed3b:	out    0x5a,eax
  40ed3d:	out    dx,al
  40ed3e:	ins    DWORD PTR es:[edi],dx
  40ed3f:	je     0x40ece7
  40ed41:	in     al,dx
  40ed42:	pop    esp
  40ed43:	add    DWORD PTR [esi-0x50],edx
  40ed46:	mov    edi,0xfd6b67fb
  40ed4b:	jg     0x40ecdb
  40ed4d:	stos   DWORD PTR es:[edi],eax
  40ed4e:	fmul   QWORD PTR [eax+0x7bfe49c]
  40ed54:	and    BYTE PTR [esi+ebp*8+0x79641401],ch
  40ed5b:	inc    esp
  40ed5c:	mov    ecx,0xdfc8caf9
  40ed61:	arpl   WORD PTR [edx],ax
  40ed63:	push   ebp
  40ed64:	add    BYTE PTR [eax],al
  40ed66:	push   ss
  40ed67:	js     0x40ed3c
  40ed69:	test   ah,dl
  40ed6b:	idiv   bh
  40ed6d:	xor    bl,BYTE PTR [ebp-0x5e]
  40ed70:	inc    ecx
  40ed71:	push   ebp
  40ed72:	and    dh,dh
  40ed74:	addr16 out 0x5f,eax
  40ed77:	mov    DWORD PTR [ebp-0x2],esp
  40ed7a:	jecxz  0x40ed62
  40ed7c:	inc    edx
  40ed7d:	jae    0x40ed1f
  40ed7f:	in     al,dx
  40ed80:	cmp    bh,dh
  40ed82:	lods   al,BYTE PTR fs:[esi]
  40ed84:	jns    0x40edca
  40ed86:	imul   edx,DWORD PTR [edx],0xcf165442
  40ed8c:	rol    DWORD PTR [esp+eiz*2+0x5d32fe3e],cl
  40ed93:	and    al,BYTE PTR [edx+0x55]
  40ed96:	sbb    BYTE PTR [esi+0x21eae766],bl
  40ed9c:	data16 (bad) 
  40ed9e:	fucomi st,st(6)
  40eda0:	inc    edx
  40eda1:	jae    0x40ed3b
  40eda3:	in     al,dx
  40eda4:	cmp    bh,dh
  40eda6:	push   esp
  40eda7:	add    ch,BYTE PTR [edx]
  40eda9:	jp     0x40ed84
  40edab:	pop    esi
  40edac:	das    
  40edad:	inc    edx
  40edae:	jno    0x40ed3d
  40edb0:	add    al,0x66
  40edb2:	mov    DWORD PTR [edx],ecx
  40edb4:	mov    eax,0x5600d5b
  40edb9:	sbb    WORD PTR [edx-0x80],ax
  40edbd:	sub    eax,0x7b3420
  40edc2:	aaa    
  40edc3:	retf   0xc373
  40edc6:	jmp    0x5800:0x2ba913
  40edcd:	or     dl,BYTE PTR [eax+edx*1+0x43]
  40edd1:	sbb    ebp,ebx
  40edd3:	out    dx,eax
  40edd4:	jge    0x40ee2f
  40edd6:	scas   eax,DWORD PTR es:[edi]
  40edd7:	or     esp,edx
  40edd9:	test   bh,al
  40eddb:	and    DWORD PTR [eax],edx
  40eddd:	adc    DWORD PTR ds:0xc182a204,0x12
  40ede4:	dec    edi
  40ede5:	lea    edx,[ebx]
  40ede7:	cld    
  40ede8:	sbb    edi,eax
  40edea:	lock shr edx,cl
  40eded:	pop    edi
  40edee:	popf   
  40edef:	sbb    ebp,DWORD PTR gs:[ebx-0xf]
  40edf3:	fs xchg ebx,eax
  40edf5:	pusha  
  40edf6:	sub    eax,DWORD PTR [edx-0x62]
  40edf9:	add    bl,BYTE PTR [ecx+edi*2]
  40edfc:	jbe    0x40edb0
  40edfe:	push   ss
  40edff:	jnp    0x40ede2
  40ee01:	pop    esi
  40ee02:	popa   
  40ee03:	mov    edi,0x7361b79a
  40ee08:	ror    BYTE PTR [ecx+0x7f7afbab],1
  40ee0e:	pop    esi
  40ee0f:	gs pop ebx
  40ee11:	xchg   BYTE PTR [eax],ch
  40ee13:	in     al,dx
  40ee14:	loope  0x40eda3
  40ee16:	fwait
  40ee17:	sbb    DWORD PTR [bp+0x5bf0],esi
  40ee1c:	mov    edx,0x21653d60
  40ee21:	inc    ebx
  40ee22:	push   DWORD PTR [eax-0x4b017a7d]
  40ee28:	mov    ds:0x2d257d19,al
  40ee2d:	pop    ss
  40ee2e:	mov    ebp,DWORD PTR [eax+eax*1+0x38e61600]
  40ee35:	rol    BYTE PTR [edx],1
  40ee37:	das    
  40ee38:	imul   DWORD PTR [edi]
  40ee3a:	xchg   esp,eax
  40ee3b:	pop    eax
  40ee3c:	or     BYTE PTR [edi],0xbc
  40ee3f:	lea    eax,[ebp-0x7ff8616a]
  40ee45:	add    bl,BYTE PTR [ebx+0x73e1745f]
  40ee4b:	mov    BYTE PTR [edi],0x39
  40ee4e:	fs (bad) 
  40ee50:	sti    
  40ee51:	jb     0x40eebc
  40ee53:	mov    ebp,cs
  40ee55:	rol    DWORD PTR [esi+ebx*2],0xfe
  40ee59:	into   
  40ee5a:	or     al,BYTE PTR gs:[ebp+0x3306b2c6]
  40ee61:	mov    al,0xd8
  40ee63:	mov    cl,BYTE PTR ds:0x3417617
  40ee69:	jmp    0xf564a193
  40ee6e:	sub    eax,ebx
  40ee70:	and    edi,ecx
  40ee72:	outs   dx,BYTE PTR ds:[esi]
  40ee73:	pusha  
  40ee74:	jae    0x40ee43
  40ee76:	mov    cl,BYTE PTR [ebx+eax*2-0x8986d3b]
  40ee7d:	test   ecx,edi
  40ee7f:	pusha  
  40ee80:	ret    0x6a72
  40ee83:	and    ecx,DWORD PTR [esp+eiz*2]
  40ee86:	xor    ah,BYTE PTR [ebx]
  40ee88:	adc    BYTE PTR [ecx],bl
  40ee8a:	add    ah,dl
  40ee8c:	and    esi,ebp
  40ee8e:	in     eax,0xc3
  40ee90:	and    ebp,ebp
  40ee92:	idiv   BYTE PTR [ebp+0x56fb]
  40ee98:	mov    ecx,0xf2625444
  40ee9d:	mov    dl,0x50
  40ee9f:	add    BYTE PTR [edi-0xefff998],dh
  40eea5:	pop    ebp
  40eea6:	mov    dh,0x57
  40eea8:	inc    esp
  40eea9:	pop    esi
  40eeaa:	jle    0x40ee97
  40eeac:	lock (bad) [ebx+0x10]
  40eeb0:	out    0xba,eax
  40eeb2:	mov    dh,0xfe
  40eeb4:	mov    ebx,0x87d889e6
  40eeb9:	jmp    0x55:0xab0375fd
  40eec0:	repz sub cl,0x5c
  40eec4:	xchg   DWORD PTR [eax-0xa],eax
  40eec7:	add    dl,al
  40eec9:	mov    al,ds:0x841200fd
  40eece:	rol    DWORD PTR [eax],0xf5
  40eed1:	add    al,BYTE PTR [eax]
  40eed3:	mov    eax,0x7ffde2fb
  40eed8:	scas   eax,DWORD PTR es:[edi]
  40eed9:	push   ds
  40eeda:	jno    0x40eee2
  40eedc:	aas    
  40eedd:	push   ds
  40eede:	lds    eax,FWORD PTR [ebp-0x25]
  40eee1:	add    al,0x8d
  40eee3:	add    al,0xbf
  40eee5:	xchg   edx,eax
  40eee6:	mov    esi,DWORD PTR [ebp-0x14]
  40eee9:	in     eax,dx
  40eeea:	mov    ch,0xc6
  40eeec:	sti    
  40eeed:	loop   0x40ee71
  40eeef:	rol    BYTE PTR [eax-0x6f8a0109],0x8d
  40eef6:	push   ebx
  40eef7:	adc    BYTE PTR [ebx],ch
  40eef9:	cmp    al,0xa
  40eefb:	mov    eax,DWORD PTR [eax]
  40eefd:	add    cl,al
  40eeff:	mov    esi,0x392ccb89
  40ef04:	cli    
  40ef05:	(bad)  
  40ef06:	sti    
  40ef07:	(bad)  
  40ef08:	out    dx,al
  40ef09:	sub    edx,0xf406fe3c
  40ef0f:	cmp    ebx,DWORD PTR [ebx]
  40ef11:	cmp    BYTE PTR [ecx-0x1f],0xfe
  40ef15:	jae    0x40ef13
  40ef17:	loope  0x40ef8c
  40ef19:	clc    
  40ef1a:	popf   
  40ef1b:	ret    
  40ef1c:	or     bh,al
  40ef1e:	dec    edx
  40ef1f:	int    0x8e
  40ef21:	(bad)
  40ef24:	dec    ebx
  40ef25:	ror    DWORD PTR [ebp-0x62865f95],0x6c
  40ef2c:	sub    dl,0x34
  40ef2f:	out    0x59,eax
  40ef31:	je     0x40ef6b
  40ef33:	ror    eax,1
  40ef35:	mul    DWORD PTR [esi]
  40ef37:	scas   eax,DWORD PTR es:[edi]
  40ef38:	or     cl,BYTE PTR [ecx-0x15bdc764]
  40ef3e:	(bad)  
  40ef3f:	xchg   esi,eax
  40ef40:	(bad)  
  40ef41:	jmp    0x40efaf
  40ef43:	jp     0x40eeca
  40ef45:	jl     0x40eeec
  40ef47:	imul   edx,edi,0x6
  40ef4a:	xor    eax,0x1d07027d
  40ef4f:	add    ebp,edx
  40ef51:	mov    dl,BYTE PTR [eax+0x5b]
  40ef54:	mov    ch,0xe7
  40ef56:	xchg   esi,eax
  40ef57:	cmp    eax,0x9426fe61
  40ef5c:	test   edx,edi
  40ef5e:	retf   0xab6
  40ef61:	mov    eax,0x6b6a0000
  40ef66:	or     DWORD PTR [eax+0x648722c6],eax
  40ef6c:	mov    ch,0x6b
  40ef6e:	dec    eax
  40ef6f:	inc    esp
  40ef70:	stos   BYTE PTR es:[edi],al
  40ef71:	imul   edi,DWORD PTR [eax+0x36bde80],0x0
  40ef78:	popf   
  40ef79:	jecxz  0x40efdc
  40ef7b:	(bad)  
  40ef7c:	xchg   edx,eax
  40ef7d:	hlt    
  40ef7e:	push   ds
  40ef7f:	fmul   DWORD PTR [edi]
  40ef81:	data16 (bad) 
  40ef83:	xlat   BYTE PTR ds:[ebx]
  40ef84:	pop    ebx
  40ef85:	arpl   WORD PTR cs:[eax],ax
  40ef88:	into   
  40ef89:	out    dx,al
  40ef8a:	xlat   BYTE PTR ds:[ebx]
  40ef8b:	test   DWORD PTR [ebp+0x6afe4832],0xae7342e7
  40ef95:	add    ah,BYTE PTR [esi-0x28]
  40ef98:	scas   al,BYTE PTR es:[edi]
  40ef99:	mov    DWORD PTR [ebx-0x1b28ac0d],esi
  40ef9f:	mov    fs,ecx
  40efa1:	pop    edx
  40efa2:	popa   
  40efa3:	dec    esi
  40efa4:	cmp    dh,BYTE PTR [edi-0x76c49dbf]
  40efaa:	cmp    BYTE PTR [eax+esi*1+0x1d0ae8d8],al
  40efb1:	xlat   BYTE PTR ds:[ebx]
  40efb2:	retf   
  40efb3:	and    DWORD PTR [ecx+0x57d7e85d],0x5d
  40efba:	xchg   ebx,eax
  40efbb:	pop    ebx
  40efbc:	cli    
  40efbd:	in     al,0x2e
  40efbf:	bound  ecx,QWORD PTR [ebx]
  40efc1:	mov    DWORD PTR [esi],esp
  40efc3:	shl    DWORD PTR [edi+0x4b],0x2a
  40efc7:	repz add BYTE PTR [eax],al
  40efca:	cli    
  40efcb:	sahf   
  40efcc:	add    BYTE PTR [ebx],0x9a
  40efcf:	add    BYTE PTR [ecx],0x6c
  40efd2:	and    DWORD PTR [ebx+esi*2+0x68],edx
  40efd6:	pop    ss
  40efd7:	(bad)  
  40efd8:	loopne 0x40ef67
  40efda:	imul   ecx,DWORD PTR [edx],0x428e0370
  40efe0:	shl    DWORD PTR [ebp+0x19],0xc6
  40efe4:	add    al,0xf4
  40efe6:	push   edx
  40efe7:	pop    ebp
  40efe8:	cmp    al,0x28
  40efea:	lea    ebx,[ebp+0x34]
  40efed:	sub    BYTE PTR [ebp-0x72d7c3a3],cl
  40eff3:	push   0x1c
  40eff5:	popa   
  40eff6:	mov    ds:0xa6eea95c,eax
  40effb:	jmp    0x3981:0x2dfb440
  40f002:	adc    DWORD PTR [ecx],eax
  40f004:	jmp    0xe89fe98d
  40f009:	pusha  
  40f00a:	icebp  
  40f00b:	push   cs
  40f00c:	jle    0x40efe5
  40f00e:	call   0x3ff2:0xedbff5b
  40f015:	jmp    0x5324b731
  40f01a:	scas   eax,DWORD PTR es:[edi]
  40f01b:	xadd   BYTE PTR [ecx+0x416488d9],ch
  40f022:	aam    0xc6
  40f024:	jecxz  0x40f075
  40f026:	mov    esp,0x6a6afe5c
  40f02b:	pop    eax
  40f02c:	(bad)  
  40f02d:	jb     0x40f02f
  40f02f:	add    BYTE PTR [edx+0x60],bl
  40f032:	out    0x4a,eax
  40f034:	push   edx
  40f035:	add    al,BYTE PTR [eax]
  40f037:	sub    edx,DWORD PTR [ecx+0x6f56a02]
  40f03d:	les    ecx,FWORD PTR [edi-0x56]
  40f040:	sahf   
  40f041:	push   0xffffff98
  40f043:	pushf  
  40f044:	mov    al,ds:0x62848302
  40f049:	pop    ebx
  40f04a:	std    
  40f04b:	jl     0x40eff7
  40f04d:	pop    ebx
  40f04e:	je     0x40f041
  40f050:	jge    0x40f048
  40f052:	jnp    0x40f02f
  40f054:	ficomp WORD PTR [ebx-0x79]
  40f057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f058:	jp     0x40efda
  40f05a:	dec    esp
  40f05b:	in     eax,0x3d
  40f05d:	push   0x1b591a0c
  40f062:	ret    
  40f063:	(bad)  
  40f065:	arpl   WORD PTR [edx+0x448a3da1],ax
  40f06b:	lds    eax,FWORD PTR [esi-0x56]
  40f06e:	je     0x40f05b
  40f070:	sahf   
  40f071:	inc    eax
  40f072:	pop    es
  40f073:	jmp    0x6b2c796b
  40f078:	inc    esi
  40f079:	pop    esp
  40f07a:	je     0x40f06c
  40f07c:	std    
  40f07d:	(bad)  
  40f07e:	or     ebx,DWORD PTR [esi+0x2911d38b]
  40f084:	mov    eax,ds:0x44f9745b
  40f089:	retf   
  40f08a:	inc    BYTE PTR [eax]
  40f08c:	jns    0x40f099
  40f08e:	push   0x0
  40f090:	repz xor al,0x6
  40f093:	inc    DWORD PTR [eax]
  40f095:	add    BYTE PTR [ecx+0x33],cl
  40f098:	adc    BYTE PTR [eax+0x74],al
  40f09b:	xchg   BYTE PTR [ebx+0x10],bh
  40f09e:	inc    esp
  40f09f:	popa   
  40f0a0:	or     edi,DWORD PTR [ebx]
  40f0a2:	stc    
  40f0a3:	dec    esi
  40f0a4:	jp     0x40f0a8
  40f0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a7:	(bad)  
  40f0a8:	xor    ecx,ecx
  40f0aa:	pop    edx
  40f0ab:	mov    BYTE PTR [edx],cl
  40f0ad:	inc    esi
  40f0ae:	add    ebp,eax
  40f0b0:	or     al,BYTE PTR [eax]
  40f0b2:	or     DWORD PTR [esi+0x17bf53ea],ecx
  40f0b8:	push   ebp
  40f0b9:	push   edi
  40f0ba:	mov    bh,0xbe
  40f0bc:	std    
  40f0bd:	jne    0x40f0ce
  40f0bf:	loop   0x40f134
  40f0c1:	or     al,0xb3
  40f0c3:	push   esp
  40f0c4:	jbe    0x40f0d8
  40f0c6:	xor    al,0xff
  40f0c8:	mov    bl,al
  40f0ca:	push   ds
  40f0cb:	(bad)  
  40f0cc:	(bad)  
  40f0cd:	jne    0x40f0bf
  40f0cf:	cmc    
  40f0d0:	cmc    
  40f0d1:	jmp    FWORD PTR [ecx+0x7]
  40f0d4:	mov    eax,ebx
  40f0d6:	pushf  
  40f0d7:	(bad)  
  40f0d9:	push   ebx
  40f0db:	xchg   dh,dh
  40f0dd:	test   ebx,eax
  40f0df:	cmp    esp,DWORD PTR [ebx]
  40f0e1:	inc    edi
  40f0e2:	inc    ecx
  40f0e3:	or     bh,BYTE PTR [edi]
  40f0e5:	test   esp,esi
  40f0e7:	cmp    DWORD PTR [ebx],ebx
  40f0e9:	call   0x3ebad1
  40f0ee:	das    
  40f0ef:	mov    dh,0x83
  40f0f1:	imul   BYTE PTR [eax+0x50]
  40f0f4:	push   ebp
  40f0f5:	jmp    FWORD PTR [ecx-0xe]
  40f0f8:	mov    al,bl
  40f0fa:	add    BYTE PTR [eax],al
  40f0fc:	repz cmp BYTE PTR [esi],al
  40f0ff:	call   0x3eaabd
  40f104:	xadd   ecx,ebp
  40f107:	add    bl,BYTE PTR [ebp-0x1ca1bdc4]
  40f10d:	adc    al,0xc1
  40f10f:	shl    DWORD PTR [ebp-0x7e754895],0xfb
  40f116:	mov    dl,0x55
  40f118:	rcl    al,cl
  40f11a:	fadd   DWORD PTR [edi]
  40f11c:	push   ss
  40f11d:	aam    0x8a
  40f11f:	lock pop edx
  40f121:	push   edi
  40f122:	adc    BYTE PTR [ecx],0xdd
  40f125:	imul   ecx,DWORD PTR [ecx+0x196818d7],0xffffff8d
  40f12c:	fldcw  WORD PTR [ebx+0x0]
  40f12f:	mov    eax,esp
  40f131:	mov    edi,0x6c314484
  40f136:	push   es
  40f137:	add    BYTE PTR [ebp-0x6300bd16],bl
  40f13d:	imul   eax,DWORD PTR [edx],0xffffff81
  40f140:	push   ss
  40f141:	ins    BYTE PTR es:[edi],dx
  40f142:	add    ah,BYTE PTR [eax-0x74e58f63]
  40f148:	pop    eax
  40f149:	out    dx,eax
  40f14a:	imul   esp,DWORD PTR [ecx],0xffffffd9
  40f14d:	or     BYTE PTR [edi-0x7d],bl
  40f150:	fst    st(7)
  40f152:	jmp    FWORD PTR cs:[eax+0x67]
  40f156:	mov    DWORD PTR ds:0x8d0ad6ea,eax
  40f15c:	cdq    
  40f15d:	shl    DWORD PTR [ecx-0x25ffffb1],cl
  40f163:	push   esi
  40f164:	scas   al,BYTE PTR es:[edi]
  40f165:	adc    bl,BYTE PTR [ebp+0x6b]
  40f168:	xchg   DWORD PTR [edi+0x4a8fa345],edi
  40f16e:	ret    0x44f4
  40f171:	jl     0x40f14f
  40f173:	ins    BYTE PTR es:[edi],dx
  40f174:	pop    edx
  40f175:	mov    bl,BYTE PTR [ebx+0x14654b5c]
  40f17b:	pusha  
  40f17c:	fimul  DWORD PTR [edx-0x7cfebb26]
  40f182:	add    ah,BYTE PTR gs:[esi-0x50420f42]
  40f189:	inc    ecx
  40f18a:	mov    ds:0x83b73f02,al
  40f18f:	into   
  40f190:	les    ecx,FWORD PTR [edi]
  40f192:	es push edx
  40f194:	test   eax,edi
  40f196:	jmp    0x675a:0x160428f4
  40f19d:	inc    esi
  40f19e:	bound  eax,QWORD PTR [ebx]
  40f1a0:	jmp    0xe89a0da8
  40f1a5:	add    edi,ebp
  40f1a7:	add    esi,edx
  40f1a9:	adc    ebx,DWORD PTR [eax]
  40f1ab:	leave  
  40f1ac:	out    0x6b,eax
  40f1ae:	pop    esp
  40f1af:	inc    ebp
  40f1b0:	dec    ebp
  40f1b1:	pop    esi
  40f1b2:	push   ds
  40f1b3:	inc    edx
  40f1b4:	mov    esp,0x4ce3227
  40f1b9:	hlt    
  40f1ba:	sub    ecx,esi
  40f1bc:	or     al,0xf4
  40f1be:	retf   
  40f1bf:	pop    ecx
  40f1c0:	neg    BYTE PTR [esi-0x4f]
  40f1c3:	stos   BYTE PTR es:[edi],al
  40f1c4:	stc    
  40f1c5:	ret    
  40f1c6:	add    BYTE PTR [eax],al
  40f1c8:	adc    bh,BYTE PTR [esi+0x28]
  40f1cb:	fucomi st,st(5)
  40f1cd:	xchg   BYTE PTR [ebp-0x74bc38a2],ah
  40f1d3:	dec    ecx
  40f1d4:	daa    
  40f1d5:	or     BYTE PTR [edi],ch
  40f1d7:	pop    es
  40f1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d9:	add    dl,BYTE PTR [edx]
  40f1db:	add    bl,BYTE PTR [esi]
  40f1dd:	dec    edx
  40f1de:	cmc    
  40f1df:	mov    ebp,0x3e04440
  40f1e4:	jae    0x40f172
  40f1e6:	mov    eax,0xedfdc444
  40f1eb:	xchg   ebp,eax
  40f1ec:	in     al,dx
  40f1ed:	jmp    0x40f1ce
  40f1ef:	mov    ebp,0x1947097e
  40f1f4:	scas   eax,DWORD PTR es:[edi]
  40f1f5:	cld    
  40f1f6:	mov    esi,0x6a00b881
  40f1fb:	inc    esi
  40f1fc:	jp     0x40f1de
  40f1fe:	(bad)  
  40f1ff:	jmp    0xa9f6fa50
  40f204:	xchg   DWORD PTR [ebx],ecx
  40f206:	pop    edx
  40f207:	lfs    esi,FWORD PTR [edx]
  40f20a:	sbb    bh,BYTE PTR [ebx+0x6a06621c]
  40f210:	fbld   TBYTE PTR [edi]
  40f212:	jmp    0xb888:0xddae
  40f218:	js     0x40f1a5
  40f21a:	push   eax
  40f21b:	jmp    0x40f245
  40f21d:	inc    ebp
  40f21e:	xor    BYTE PTR [ecx-0x40],0xce
  40f222:	or     DWORD PTR [esi+0x75],ebp
  40f225:	and    al,0x4
  40f227:	dec    dx
  40f229:	fcom   DWORD PTR [ecx]
  40f22b:	test   eax,0x39e0000
  40f230:	sar    BYTE PTR [ecx-0x1edc2c1f],0xf0
  40f237:	pop    edi
  40f238:	cmp    ch,BYTE PTR ds:0x303258d0
  40f23e:	inc    ebx
  40f23f:	mov    ecx,DWORD PTR [ebx]
  40f241:	stc    
  40f242:	fadd   QWORD PTR [ebx]
  40f244:	add    BYTE PTR [edx+0x79],ch
  40f247:	pop    eax
  40f248:	je     0x40f23d
  40f24a:	jno    0x40f21f
  40f24c:	and    esp,ebp
  40f24e:	imul   ebp,esi,0x57defb77
  40f254:	dec    esi
  40f255:	push   cs
  40f256:	aad    0x23
  40f258:	or     BYTE PTR [edi-0x13c107a],bl
  40f25e:	dec    ecx
  40f25f:	cmp    eax,0x449eef03
  40f264:	add    ebp,ecx
  40f266:	sbb    eax,0x9eed23dc
  40f26b:	int    0x3
  40f26d:	sbb    ah,BYTE PTR [ecx+0x6c]
  40f270:	cs push 0x66
  40f273:	pop    eax
  40f274:	je     0x40f259
  40f276:	pop    ecx
  40f277:	shl    DWORD PTR [ebx],cl
  40f279:	add    al,al
  40f27b:	mov    dh,0x13
  40f27d:	add    dh,0x43
  40f280:	(bad)  
  40f281:	push   ebp
  40f282:	cmp    edi,ebp
  40f284:	dec    DWORD PTR [edx+eax*8-0x4f3f7afc]
  40f28b:	pop    edx
  40f28c:	out    0x78,al
  40f28e:	aaa    
  40f28f:	mov    dh,0xfd
  40f291:	test   DWORD PTR [eax],eax
  40f293:	add    BYTE PTR [edi+ebp*1],dh
  40f296:	or     DWORD PTR [esi+0x2b],edx
  40f299:	das    
  40f29a:	and    cl,BYTE PTR [esp+edx*4]
  40f29d:	out    0xd6,al
  40f29f:	ret    
  40f2a0:	jmp    0x40f258
  40f2a2:	pop    esp
  40f2a3:	ret    0x370
  40f2a6:	cmp    DWORD PTR [eax+eiz*2-0x1],0xffffffff
  40f2ab:	push   ebp
  40f2ac:	iret   
  40f2ad:	mov    bl,0x73
  40f2af:	add    al,0xa7
  40f2b1:	mov    esi,0xb5b72ce9
  40f2b6:	std    
  40f2b7:	jne    0x40f311
  40f2b9:	mov    dh,0x72
  40f2bb:	and    al,0x2c
  40f2bd:	mov    dh,0x13
  40f2bf:	js     0x40f307
  40f2c1:	inc    ebx
  40f2c2:	dec    BYTE PTR [edx+0x1448864]
  40f2c8:	add    ebx,0xf9ace472
  40f2ce:	ret    0xabff
  40f2d1:	cmp    BYTE PTR [esi-0x273008c],0x74
  40f2d8:	loopne 0x40f2e0
  40f2da:	push   eax
  40f2db:	call   0x3eb55e
  40f2e0:	or     al,cl
  40f2e2:	add    al,BYTE PTR [eax]
  40f2e4:	pop    es
  40f2e5:	lea    ecx,[ecx-0x975cc0f]
  40f2eb:	test   edx,esi
  40f2ed:	xor    DWORD PTR [esi],edi
  40f2ef:	mov    ecx,ecx
  40f2f1:	adc    BYTE PTR [eax],0x40
  40f2f4:	popf   
  40f2f5:	imul   eax,DWORD PTR [ebp-0x45ffff02],0x29ff0bad
  40f2ff:	add    eax,0xd3cefef4
  40f304:	pop    ebx
  40f305:	(bad)  
  40f306:	imul   edx,DWORD PTR [eax-0x488a75ca],0x7
  40f30d:	cmp    esp,DWORD PTR [eax]
  40f30f:	adc    BYTE PTR ds:0x45f47502,cl
  40f315:	inc    BYTE PTR [edx-0x6d8cbc18]
  40f31b:	mov    dh,0xff
  40f31d:	ds int 0xd0
  40f320:	add    edi,edi
  40f322:	icebp  
  40f323:	aas    
  40f324:	out    dx,al
  40f325:	mov    WORD PTR [ecx-0x15184c0d],ds
  40f32b:	test   al,0x5a
  40f32d:	dec    BYTE PTR ds:0x8f016d6b
  40f333:	sub    edi,DWORD PTR [ebx+0x29e65d]
  40f339:	add    BYTE PTR [esi],bl
  40f33b:	dec    eax
  40f33c:	push   ds
  40f33d:	add    al,0x9d
  40f33f:	js     0x40f2f1
  40f341:	push   esi
  40f342:	push   ss
  40f343:	and    al,0x8f
  40f345:	lock test eax,0x953c8d52
  40f34b:	cmp    edx,eax
  40f34d:	call   FWORD PTR [edi]
  40f34f:	and    DWORD PTR [ebx+0x74],ebx
  40f352:	xchg   ebp,eax
  40f353:	hlt    
  40f354:	iret   
  40f355:	and    ebp,DWORD PTR [ebp-0x2a75cd14]
  40f35b:	add    al,0x12
  40f35d:	inc    DWORD PTR [eax]
  40f35f:	add    dl,cl
  40f361:	rcr    BYTE PTR [ebx-0x74],1
  40f364:	pop    ecx
  40f365:	xor    al,0x3
  40f367:	call   0xfe9c1cf4
  40f36c:	and    DWORD PTR [eax+edx*8],ebp
  40f36f:	adc    ah,BYTE PTR [esi]
  40f371:	add    ebp,edi
  40f373:	mov    dh,0xcb
  40f375:	into   
  40f376:	add    al,0xf0
  40f378:	lahf   
  40f379:	cmp    eax,0x40ba6c38
  40f37e:	int    0x5a
  40f380:	add    al,BYTE PTR [edx+edx*8]
  40f383:	add    eax,0xba1d426f
  40f388:	inc    edi
  40f389:	inc    eax
  40f38a:	in     al,dx
  40f38b:	add    esi,ebx
  40f38d:	push   ebp
  40f38e:	rol    DWORD PTR [ebx-0x7f173d54],cl
  40f394:	dec    edx
  40f395:	aam    0x3b
  40f397:	pop    ss
  40f398:	push   esp
  40f399:	adc    DWORD PTR [ebx+0xe4221b2],edi
  40f39f:	cld    
  40f3a0:	mov    ds:0x1fb1c48d,eax
  40f3a5:	push   ebp
  40f3a6:	enter  0x95cf,0x81
  40f3aa:	lods   eax,DWORD PTR ds:[esi]
  40f3ab:	push   edx
  40f3ac:	rol    BYTE PTR [ecx-0x3340093],0xa7
  40f3b3:	lds    eax,FWORD PTR [edi+0x776bdc32]
  40f3b9:	inc    ebx
  40f3ba:	arpl   di,bp
  40f3bc:	call   0x199b9448
  40f3c1:	dec    ebx
  40f3c2:	shl    cl,0x0
  40f3c5:	add    BYTE PTR [ebx+0x1fcdfc8d],bl
  40f3cb:	push   ebp
  40f3cc:	or     al,dl
  40f3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3cf:	and    DWORD PTR ds:0x25817852,0xb0fe93ff
  40f3d9:	int3   
  40f3da:	test   DWORD PTR [eax-0x4b],ebp
  40f3dd:	push   ds
  40f3de:	ror    ebx,cl
  40f3e0:	fld    QWORD PTR [eax-0x770e2bce]
  40f3e6:	xchg   esi,eax
  40f3e7:	add    bl,BYTE PTR [eax-0x95b74b]
  40f3ed:	pop    edx
  40f3ee:	pusha  
  40f3ef:	push   esp
  40f3f0:	(bad)  
  40f3f1:	mov    edx,0xf588df61
  40f3f6:	fdivr  QWORD PTR [edi]
  40f3f8:	push   edx
  40f3f9:	aaa    
  40f3fa:	stos   DWORD PTR es:[edi],eax
  40f3fb:	cmp    DWORD PTR [edx+0x58da4d9],ecx
  40f401:	pop    esp
  40f402:	jmp    0x4bab594b
  40f407:	or     dh,BYTE PTR [edi-0x1c]
  40f40a:	xchg   ebp,eax
  40f40b:	(bad)  
  40f40c:	rol    edx,0x97
  40f40f:	xchg   DWORD PTR [edi+0x6e],ecx
  40f412:	jg     0x40f395
  40f414:	stc    
  40f415:	in     al,dx
  40f416:	ins    DWORD PTR es:[edi],dx
  40f417:	std    
  40f418:	add    al,0xb0
  40f41a:	in     al,0x53
  40f41c:	inc    BYTE PTR [edx+0x6e4f85a7]
  40f422:	jg     0x40f3a5
  40f424:	stc    
  40f425:	in     al,dx
  40f426:	dec    ebp
  40f427:	clc    
  40f428:	add    al,0x50
  40f42a:	add    BYTE PTR [eax],al
  40f42c:	les    edx,FWORD PTR [ebx-0x2]
  40f42f:	ins    DWORD PTR es:[edi],dx
  40f430:	cwde   
  40f431:	iret   
  40f432:	push   es
  40f433:	loope  0x40f3d4
  40f435:	shl    DWORD PTR [ecx],0x42
  40f438:	mov    eax,0x9d49bffc
  40f43d:	mov    al,BYTE PTR [eax]
  40f43f:	call   0x99c1:0xebc57f9e
  40f446:	gs ins BYTE PTR es:[edi],dx
  40f448:	loope  0x40f418
  40f44a:	pop    es
  40f44b:	gs pusha 
  40f44d:	into   
  40f44e:	add    edi,DWORD PTR [ecx-0x62]
  40f451:	addr16 add ebx,edi
  40f454:	pop    esi
  40f455:	mov    ch,0x5a
  40f457:	sub    bh,BYTE PTR [edx]
  40f459:	mov    ebx,ebp
  40f45b:	push   0x75
  40f45d:	pop    es
  40f45e:	or     DWORD PTR [edx+edx*2+0x21b75153],0xffffffcf
  40f466:	pop    es
  40f467:	add    BYTE PTR [ecx+0xa],dh
  40f46a:	push   es
  40f46b:	mov    edi,DWORD PTR [ecx]
  40f46d:	cld    
  40f46e:	and    BYTE PTR [eax],0xc4
  40f471:	xchg   edx,eax
  40f472:	xchg   DWORD PTR [ebp-0x34],ecx
  40f475:	div    al
  40f477:	getsec 
  40f479:	stos   DWORD PTR es:[edi],eax
  40f47a:	(bad)  
  40f47b:	push   DWORD PTR [esi+eax*4-0x20b8efbd]
  40f482:	add    BYTE PTR [ecx+0x5e9b279],cl
  40f488:	das    
  40f489:	inc    esp
  40f48a:	push   es
  40f48b:	mov    ebp,esp
  40f48d:	jle    0x40f50a
  40f48f:	hlt    
  40f490:	add    BYTE PTR [eax],al
  40f492:	test   BYTE PTR [esi-0x799f8b24],al
  40f498:	les    edi,FWORD PTR [ebx]
  40f49a:	and    eax,0x848a0a2e
  40f49f:	cmc    
  40f4a0:	push   esp
  40f4a1:	adc    al,0x98
  40f4a3:	push   ebx
  40f4a4:	cmp    eax,DWORD PTR ds:[ebp+0x2d]
  40f4a8:	repnz mov ebx,DWORD PTR [esi+eiz*1]
  40f4ac:	inc    BYTE PTR [eax-0x13]
  40f4af:	xchg   esp,eax
  40f4b0:	push   es
  40f4b1:	jmp    0x40f4f4
  40f4b3:	xchg   ecx,eax
  40f4b4:	mov    edi,DWORD PTR [ebp+0x3c]
  40f4b7:	xchg   bh,ch
  40f4b9:	call   0x40f665
  40f4be:	iret   
  40f4bf:	mov    bh,0x89
  40f4c1:	dec    ebp
  40f4c2:	rol    BYTE PTR [esi-0x42ef38d],1
  40f4c8:	mov    WORD PTR [esp+esi*1],es
  40f4cb:	(bad)  
  40f4cc:	jmp    edi
  40f4ce:	sbb    al,0xbf
  40f4d0:	std    
  40f4d1:	dec    DWORD PTR [eax+0x1f840dbf]
  40f4d7:	(bad)  
  40f4d8:	(bad)  
  40f4d9:	(bad)  
  40f4da:	jns    0x40f496
  40f4dc:	jb     0x40f4f8
  40f4de:	inc    edi
  40f4df:	xchg   ch,al
  40f4e1:	call   0xfe971083
  40f4e6:	repnz fild QWORD PTR [ebp-0x73f4e905]
  40f4ed:	or     BYTE PTR [ebx*2+0x5bdd8471],dl
  40f4f4:	jle    0x40f482
  40f4f6:	add    BYTE PTR [eax],al
  40f4f8:	popf   
  40f4f9:	imul   eax,DWORD PTR [edx],0x35960f6
  40f4ff:	je     0x40f534
  40f501:	ror    al,1
  40f503:	sti    
  40f504:	mov    es:0x5d21ff8a,eax
  40f50a:	mov    al,BYTE PTR [edx+0x5ece6965]
  40f510:	push   ss
  40f511:	pop    ecx
  40f512:	lods   al,BYTE PTR ds:[esi]
  40f513:	(bad)  
  40f514:	mov    al,0x13
  40f516:	repnz aas 
  40f518:	popf   
  40f519:	out    0x43,al
  40f51b:	jge    0x40f50c
  40f51d:	sub    al,0x30
  40f51f:	xor    al,BYTE PTR [edx-0x6c82bc19]
  40f525:	in     eax,0x7
  40f527:	aaa    
  40f528:	sbb    eax,0x95742373
  40f52d:	fld    TBYTE PTR [eax+ecx*1+0x1d]
  40f531:	cmp    edi,0x76
  40f534:	mov    ds:0x553abf1d,eax
  40f539:	pusha  
  40f53a:	push   0x17d75f2a
  40f53f:	xor    dl,BYTE PTR [eax]
  40f541:	mov    WORD PTR [ebp-0x7c],ss
  40f544:	dec    edi
  40f545:	xor    al,0xee
  40f547:	mov    DWORD PTR [ecx+0x7df883f5],esp
  40f54d:	(bad)
  40f551:	push   ebx
  40f552:	cmp    al,0xa1
  40f555:	nop
  40f556:	inc    BYTE PTR [edi+0x67]
  40f559:	xchg   edx,eax
  40f55a:	data16 cmp al,BYTE PTR [eax]
  40f55d:	add    BYTE PTR [ebx],cl
  40f55f:	add    ebx,DWORD PTR [edi-0x61bce7f9]
  40f565:	or     ecx,DWORD PTR [ebp-0x47]
  40f568:	mov    esi,0xd43926b
  40f56d:	push   edi
  40f56e:	loopne 0x40f576
  40f570:	mov    ecx,0xc81603
  40f575:	push   edi
  40f576:	popa   
  40f577:	dec    esi
  40f578:	scas   eax,DWORD PTR es:[edi]
  40f579:	rcr    BYTE PTR [edx-0x35f894ff],0x51
  40f580:	in     eax,0x8a
  40f582:	pop    ecx
  40f583:	dec    esi
  40f584:	cmp    eax,0xaa3b57b6
  40f589:	repz mov dl,0x7c
  40f58c:	and    ebx,DWORD PTR [eax+0x17]
  40f58f:	push   ecx
  40f590:	sar    BYTE PTR [edx+eiz*8],1
  40f593:	push   ecx
  40f594:	mov    ebp,0xc1516282
  40f599:	imul   ebp,ecx,0x7682bc7d
  40f59f:	(bad)  
  40f5a0:	imul   esp,eax,0xae3a028a
  40f5a6:	daa    
  40f5a7:	push   esp
  40f5a8:	imul   ebx,DWORD PTR ds:0xbf47f9d,0x582b7bd2
  40f5b2:	adc    eax,0x5f1a74b7
  40f5b7:	add    DWORD PTR [edx+0x44],ebp
  40f5ba:	push   edx
  40f5bb:	push   ecx
  40f5bc:	call   0x5fc3984a
  40f5c1:	and    eax,DWORD PTR [eax]
  40f5c3:	add    cl,cl
  40f5c5:	cld    
  40f5c6:	push   0xe3cea55c
  40f5cb:	xor    DWORD PTR ds:0xdd0bcdff,0x7b
  40f5d2:	stos   DWORD PTR es:[edi],eax
  40f5d3:	push   edi
  40f5d4:	addr16 inc esp
  40f5d6:	mov    edx,0xff44d75e
  40f5db:	in     eax,0x1f
  40f5dd:	jno    0x40f5de
  40f5df:	call   0x74587282
  40f5e4:	out    0x1,al
  40f5e6:	and    BYTE PTR [edx],0x9b
  40f5e9:	(bad)  
  40f5ea:	add    al,0x69
  40f5ec:	push   edi
  40f5ed:	and    esi,DWORD PTR [ebp-0xa]
  40f5f0:	sbb    esi,ecx
  40f5f2:	sti    
  40f5f3:	adc    dl,BYTE PTR [edx+0x79690e7c]
  40f5f9:	icebp  
  40f5fa:	jae    0x40f5e2
  40f5fc:	push   ds
  40f5fd:	dec    edx
  40f5fe:	or     BYTE PTR [ebp-0x63],ch
  40f601:	cmp    al,0xf4
  40f604:	call   0x57633d0e
  40f609:	shr    ecx,cl
  40f60b:	bound  ebp,QWORD PTR [eax+0x1c]
  40f60e:	fadd   st,st(2)
  40f610:	jns    0x40f61c
  40f612:	pop    ds
  40f613:	cmp    al,0xac
  40f615:	adc    ecx,ecx
  40f617:	ins    BYTE PTR es:[edi],dx
  40f618:	pop    eax
  40f619:	push   ecx
  40f61a:	jmp    0x52f1:0x7fc85feb
  40f621:	aam    0xf8
  40f623:	lahf   
  40f624:	fiadd  WORD PTR [edx]
  40f626:	je     0x40f60c
  40f628:	add    BYTE PTR [eax],al
  40f62a:	cmp    DWORD PTR ds:0xcfd1bfa,ecx
  40f630:	cli    
  40f631:	adc    al,0x9c
  40f633:	dec    edi
  40f634:	dec    esp
  40f635:	test   DWORD PTR [ecx+esi*1],edx
  40f638:	sub    bl,BYTE PTR [esi*8+0x1a714c7c]
  40f63f:	cld    
  40f640:	mov    ebp,fs
  40f642:	sahf   
  40f643:	add    al,BYTE PTR [eax]
  40f645:	push   ecx
  40f646:	push   esp
  40f647:	xchg   ecx,eax
  40f648:	(bad)  
  40f649:	pop    esi
  40f64a:	sbb    eax,0xb2137390
  40f64f:	sub    al,0x74
  40f651:	jecxz  0x40f5e0
  40f653:	inc    edx
  40f654:	addr16 add al,dh
  40f657:	inc    eax
  40f658:	add    BYTE PTR ds:[ebx+ebx*8+0x3],al
  40f65d:	call   DWORD PTR [ecx-0x48]
  40f660:	mov    ebx,eax
  40f662:	pop    esp
  40f663:	mov    edi,edx
  40f665:	(bad)  
  40f666:	mov    ebx,0x318b0c79
  40f66b:	lods   al,BYTE PTR ds:[esi]
  40f66c:	xchg   DWORD PTR [esi*2-0xd8b4131],eax
  40f673:	mov    dh,0x43
  40f675:	clc    
  40f676:	outs   dx,DWORD PTR ds:[esi]
  40f677:	lahf   
  40f678:	repnz inc edi
  40f67a:	dec    ebp
  40f67b:	aaa    
  40f67c:	cli    
  40f67d:	mov    eax,DWORD PTR [ebx-0x4400ca25]
  40f683:	mov    dh,0x89
  40f685:	inc    ebp
  40f686:	mov    esp,0x818b0bda
  40f68b:	scas   al,BYTE PTR es:[edi]
  40f68c:	mov    DWORD PTR [esi],edi
  40f68e:	add    BYTE PTR [eax],al
  40f690:	fsubr  st(4),st
  40f692:	mov    ebp,0xc682dbff
  40f697:	(bad)  
  40f698:	jnp    0x40f632
  40f69a:	pop    ecx
  40f69b:	leave  
  40f69c:	inc    edi
  40f69d:	mov    al,ds:0xe807ec89
  40f6a2:	or     al,BYTE PTR [ebx+0x52feaee1]
  40f6a8:	ret    0xf079
  40f6ab:	and    DWORD PTR [edx+0x3],0xffffff8d
  40f6af:	sbb    al,0xbc
  40f6b1:	popf   
  40f6b2:	xchg   DWORD PTR [ebp+0x18],eax
  40f6b5:	jl     0x40f712
  40f6b7:	hlt    
  40f6b8:	pop    edi
  40f6b9:	ret    0x830d
  40f6bc:	xor    DWORD PTR [ebx],eax
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	cmp    edi,DWORD PTR [esi+0x6]
  40f6c3:	or     ebp,0x23
  40f6c6:	je     0x40f6d2
  40f6c8:	mov    bh,0xac
  40f6ca:	pop    es
  40f6cb:	jb     0x40f718
  40f6cd:	xor    bh,0xd
  40f6d0:	popf   
  40f6d1:	xor    BYTE PTR [eax],cl
  40f6d3:	sbb    DWORD PTR [ebp+0x5b],0xffffff89
  40f6d7:	inc    esp
  40f6d8:	and    DWORD PTR [ecx+eax*2],eax
  40f6db:	jno    0x40f6de
  40f6dd:	add    al,0x41
  40f6df:	push   cs
  40f6e0:	push   ds
  40f6e1:	retf   0x2
  40f6e4:	popf   
  40f6e5:	xor    BYTE PTR [ebx+0xa11007],cl
  40f6eb:	xor    esp,0x47
  40f6ee:	into   
  40f6ef:	add    al,0x1e
  40f6f1:	repnz and BYTE PTR [ebp+0x0],dh
  40f6f5:	add    BYTE PTR [ecx+0x608831e4],cl
  40f6fb:	add    eax,0x18aa3c68
  40f700:	add    al,0x83
  40f702:	aam    0x38
  40f704:	into   
  40f705:	adc    BYTE PTR [esi],bl
  40f707:	push   edx
  40f708:	or     BYTE PTR [edx-0x68],dh
  40f70b:	fmul   QWORD PTR [esp+ecx*1+0x33]
  40f70f:	push   0xf49fc685
  40f714:	dec    esi
  40f715:	jno    0x40f6d9
  40f717:	jecxz  0x40f74b
  40f719:	sub    al,ch
  40f71b:	xor    esp,DWORD PTR [edx]
  40f71d:	data16 aam 0x34
  40f720:	xlat   BYTE PTR ds:[ebx]
  40f721:	adc    eax,0x4680a2ce
  40f726:	mov    eax,DWORD PTR [ecx+0x7]
  40f729:	inc    ecx
  40f72a:	push   ds
  40f72b:	je     0x40f732
  40f72d:	pushw  ds
  40f72f:	fs scas al,BYTE PTR es:[edi]
  40f731:	jae    0x40f79e
  40f733:	outs   dx,BYTE PTR ds:[esi]
  40f734:	inc    esp
  40f735:	add    cl,dh
  40f737:	fs test esi,eax
  40f73a:	lahf   
  40f73b:	inc    eax
  40f73c:	dec    ebp
  40f73d:	jno    0x40f7ba
  40f73f:	inc    ecx
  40f740:	dec    ebp
  40f741:	je     0x40f6dc
  40f743:	fsub   st,st(0)
  40f745:	sti    
  40f746:	lahf   
  40f747:	loopne 0x40f77b
  40f749:	sub    ah,al
  40f74b:	add    ah,BYTE PTR [ebp+0x7f]
  40f74e:	jmp    0x2041629d
  40f753:	pop    es
  40f754:	jmp    0x5174945c
  40f759:	pop    esp
  40f75a:	add    BYTE PTR [eax],al
  40f75c:	pusha  
  40f75d:	mov    WORD PTR [ebp+0x53],es
  40f760:	push   ds
  40f761:	inc    ebx
  40f762:	mov    ah,0xf
  40f764:	sbb    BYTE PTR [edx],ch
  40f766:	mov    ebx,0xc042cffd
  40f76b:	mov    ebx,0xc3e8c289
  40f770:	pop    es
  40f771:	or     BYTE PTR [esi],bl
  40f773:	fdecstp 
  40f775:	jns    0x40f7a0
  40f777:	pop    esp
  40f778:	fwait
  40f779:	dec    ecx
  40f77a:	or     eax,0x71fd1753
  40f77f:	mov    ecx,0x74e47bd2
  40f784:	sbb    DWORD PTR [ebx+0x7c],eax
  40f787:	jmp    0x40f754
  40f789:	(bad)  
  40f78a:	lock jle 0x40f7ee
  40f78d:	push   esi
  40f78e:	imul   ecx,DWORD PTR [edx-0x64],0x27505b7b
  40f795:	inc    esi
  40f796:	mov    edi,0xcd4daa26
  40f79b:	jle    0x40f7f6
  40f79d:	dec    edx
  40f79e:	rol    DWORD PTR [eax],1
  40f7a0:	es mov eax,0x9a5ad07e
  40f7a7:	xchg   ecx,eax
  40f7a8:	mov    ecx,DWORD PTR [ebp+0x69]
  40f7ab:	cmp    eax,DWORD PTR [ebx+0x65af46ad]
  40f7b1:	inc    ecx
  40f7b2:	xor    edi,DWORD PTR [edi-0x7a]
  40f7b5:	add    DWORD PTR [edi+esi*8+0x2ed9b4cf],0x7c8611cb
  40f7c0:	add    BYTE PTR [eax],al
  40f7c2:	stc    
  40f7c3:	push   esi
  40f7c4:	outs   dx,DWORD PTR ds:[esi]
  40f7c5:	mov    al,0x4a
  40f7c7:	or     eax,DWORD PTR [eax]
  40f7c9:	adc    al,0x9d
  40f7cb:	std    
  40f7cc:	test   DWORD PTR [edx-0x62],eax
  40f7cf:	add    al,BYTE PTR [eax]
  40f7d1:	jb     0x40f830
  40f7d3:	push   ebp
  40f7d4:	mov    ah,BYTE PTR [esi+esi*1-0x549efc82]
  40f7db:	std    
  40f7dc:	lds    esp,FWORD PTR [edi+ecx*8+0x7aac874d]
  40f7e3:	js     0x40f7ae
  40f7e5:	push   edx
  40f7e6:	adc    eax,0xbe3182e7
  40f7eb:	(bad)  
  40f7ec:	sbb    bh,al
  40f7ee:	sbb    edx,DWORD PTR [ebp+0x8]
  40f7f1:	fwait
  40f7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f3:	in     al,0x82
  40f7f5:	and    DWORD PTR [ebp+0x616a0cd4],ebx
  40f7fb:	add    ecx,DWORD PTR [edi]
  40f7fd:	push   esi
  40f7fe:	cdq    
  40f7ff:	in     al,0x84
  40f801:	sub    ebp,esi
  40f803:	pop    edi
  40f804:	jmp    0x10e8:0xfec664e5
  40f80b:	dec    esp
  40f80c:	adc    al,0x69
  40f80e:	enter  0xc,0x74
  40f812:	popf   
  40f813:	or     cl,BYTE PTR [ebp-0x72fb49d3]
  40f819:	pop    esp
  40f81a:	inc    ebp
  40f81b:	jp     0x40f861
  40f81d:	fld    DWORD PTR [ecx-0x31]
  40f820:	mov    esp,0xbf7fecc6
  40f825:	xor    eax,0x814f0000
  40f82a:	jl     0x40f7dd
  40f82c:	mov    eax,ds:0x67b55c77
  40f831:	add    al,0x6a
  40f833:	leave  
  40f834:	inc    esi
  40f835:	out    0x88,al
  40f837:	in     eax,0x61
  40f839:	lds    edi,FWORD PTR [edi+0x14]
  40f83c:	int3   
  40f83d:	dec    ebx
  40f83e:	jb     0x40f821
  40f840:	inc    eax
  40f841:	and    bl,BYTE PTR [eax+0x0]
  40f844:	stos   BYTE PTR es:[edi],al
  40f845:	mov    DWORD PTR [edx],0x43cd7b7b
  40f84b:	in     al,dx
  40f84c:	shl    esi,cl
  40f84e:	mov    al,BYTE PTR [ebp-0x3c]
  40f851:	retf   
  40f852:	xor    bh,BYTE PTR [ebx-0x34]
  40f855:	mov    ah,0xf7
  40f857:	call   ebx
  40f859:	add    eax,0x3bb4f07d
  40f85e:	std    
  40f85f:	add    BYTE PTR [eax+0x2],cl
  40f862:	push   0x22
  40f864:	cmp    al,0x5a
  40f866:	xchg   DWORD PTR [edi+ebx*8],eax
  40f869:	cmp    dh,BYTE PTR [ecx]
  40f86b:	rcr    dl,0xc8
  40f86e:	add    bh,BYTE PTR [ebx-0x4d]
  40f871:	inc    ebx
  40f872:	test   BYTE PTR [ebx+0x4539b849],0x0
  40f879:	add    eax,DWORD PTR [edx-0x24e6cab]
  40f87f:	mov    esi,DWORD PTR [edi-0x72a4a36f]
  40f885:	les    eax,FWORD PTR [esi]
  40f887:	add    bl,dl
  40f889:	xor    al,0xf2
  40f88b:	call   0x7beaf890
  40f890:	std    
  40f891:	inc    DWORD PTR [edi]
  40f893:	shr    cl,0xed
  40f896:	jns    0x40f865
  40f898:	jmp    0x818b:0xf7cd6b56
  40f89f:	dec    esi
  40f8a0:	mov    eax,esi
  40f8a2:	cmp    DWORD PTR [eax],ecx
  40f8a4:	je     0x40f8b2
  40f8a6:	or     DWORD PTR [ebx+0x8071472],esi
  40f8ac:	(bad)  
  40f8ad:	jmp    0x40f8a2
  40f8b2:	stc    
  40f8b3:	mov    dl,0x73
  40f8b5:	xorps  xmm7,XMMWORD PTR [edi-0xb16c2]
  40f8bc:	(bad)  
  40f8bd:	call   FWORD PTR [ebp+0x14e84228]
  40f8c3:	pop    ecx
  40f8c4:	add    al,BYTE PTR [eax]
  40f8c6:	out    dx,al
  40f8c7:	shr    ch,1
  40f8c9:	ja     0x40f87a
  40f8cb:	sbb    DWORD PTR [ebx+eax*4],eax
  40f8ce:	dec    ebx
  40f8cf:	aam    0xd5
  40f8d1:	das    
  40f8d2:	push   ds
  40f8d3:	pop    esi
  40f8d4:	(bad)  
  40f8d5:	(bad)  
  40f8d6:	mov    al,0xf7
  40f8d8:	jge    0x40f8e0
  40f8da:	mov    ds:0xeb0f116b,al
  40f8df:	or     BYTE PTR [edx+esi*8],bl
  40f8e2:	test   al,0x94
  40f8e4:	sbb    ecx,edi
  40f8e6:	and    DWORD PTR [ecx],ebx
  40f8e8:	xlat   BYTE PTR ds:[ebx]
  40f8e9:	push   eax
  40f8ea:	pop    edx
  40f8eb:	iret   
  40f8ec:	pop    es
  40f8ed:	cmovnp ecx,DWORD PTR [ebp+0x9]
  40f8f1:	sldt   WORD PTR [eax]
  40f8f4:	inc    ebx
  40f8f5:	jmp    0xf3b2eb15
  40f8fa:	pop    ebx
  40f8fb:	inc    eax
  40f8fc:	dec    esp
  40f8fd:	in     al,dx
  40f8fe:	xor    ecx,DWORD PTR [edx-0x10849ea8]
  40f904:	push   ds
  40f905:	jle    0x40f905
  40f907:	(bad)  
  40f908:	push   eax
  40f909:	push   edx
  40f90a:	mov    bh,0xfe
  40f90c:	out    dx,al
  40f90d:	iret   
  40f90e:	mov    ebp,0xfe9e1407
  40f913:	mov    ch,BYTE PTR [eax+0x2d]
  40f916:	or     esi,edx
  40f918:	xor    dl,bh
  40f91a:	mov    ch,dh
  40f91c:	sub    DWORD PTR [esi-0x79],ecx
  40f91f:	shl    DWORD PTR [ecx],1
  40f921:	push   edx
  40f922:	adc    eax,eax
  40f924:	sbb    BYTE PTR [edi-0x7e55eb33],al
  40f92a:	adc    al,0xf
  40f92c:	push   ebx
  40f92d:	sub    DWORD PTR [ecx],ebx
  40f92f:	repz adc BYTE PTR [ebp-0x3d],ah
  40f933:	inc    esi
  40f934:	fst    QWORD PTR [eax+eax*2+0x7b]
  40f938:	mov    al,BYTE PTR [ebx]
  40f93a:	xchg   edx,eax
  40f93b:	add    al,dh
  40f93d:	push   esp
  40f93e:	fnstcw WORD PTR [ecx+eiz*1]
  40f941:	push   ecx
  40f942:	in     eax,0x6e
  40f944:	pop    ebp
  40f945:	jle    0x40f8ed
  40f947:	push   edi
  40f948:	jb     0x40f938
  40f94a:	test   al,0xab
  40f94c:	and    DWORD PTR [edi+0x437f4eef],esi
  40f952:	adc    eax,0xe044e1ae
  40f957:	add    eax,DWORD PTR [eax]
  40f959:	add    al,dl
  40f95b:	jge    0x40f9b1
  40f95d:	mov    dh,0xcb
  40f95f:	jge    0x40f9c0
  40f961:	jnp    0x40f93c
  40f963:	cli    
  40f964:	popa   
  40f965:	push   esp
  40f966:	sbb    DWORD PTR [ebx+edx*8],edi
  40f969:	jmp    DWORD PTR [ecx]
  40f96b:	dec    edx
  40f96c:	mov    esp,0x3d3b1ff7
  40f971:	pop    ebp
  40f972:	sub    eax,DWORD PTR [ebx]
  40f974:	jmp    0xb38b117c
  40f979:	(bad)  
  40f97a:	scas   eax,DWORD PTR es:[edi]
  40f97b:	inc    edx
  40f97c:	test   al,0x5c
  40f97e:	lsl    ebp,cx
  40f981:	add    ebp,DWORD PTR [esi-0x1d8000be]
  40f987:	dec    ecx
  40f988:	call   0x6929213f
  40f98d:	repnz xchg edx,eax
  40f98f:	add    ch,BYTE PTR [edx+0x4e]
  40f992:	retf   
  40f993:	iret   
  40f994:	lds    eax,FWORD PTR [edx-0x271209bf]
  40f99a:	jge    0x40f995
  40f99c:	popf   
  40f99d:	push   es
  40f99e:	mov    ds:0xad1b1791,al
  40f9a3:	iret   
  40f9a4:	xor    al,0x1b
  40f9a6:	shl    al,cl
  40f9a8:	arpl   WORD PTR [ebx+0xe],ax
  40f9ab:	mov    al,0x69
  40f9ad:	inc    esi
  40f9ae:	pushf  
  40f9af:	stc    
  40f9b0:	jne    0x40f9b8
  40f9b2:	call   0xf01d:0x91fcff91
  40f9b9:	xor    eax,0x38445cfc
  40f9be:	add    BYTE PTR [eax],al
  40f9c0:	loop   0x40f9f6
  40f9c2:	mov    ch,BYTE PTR [ecx+ebp*2]
  40f9c5:	jl     0x40f9b6
  40f9c7:	push   0x4d
  40f9c9:	std    
  40f9ca:	(bad)  
  40f9cb:	adc    al,0x58
  40f9cd:	mov    al,0xfe
  40f9cf:	call   0xfd55:0x7007b6d7
  40f9d6:	mov    bl,BYTE PTR [ebx*4-0x7a0b0df3]
  40f9dd:	jg     0x40f9d4
  40f9df:	fnstsw WORD PTR [ecx+0x7f]
  40f9e2:	rcl    ebp,1
  40f9e4:	sub    eax,0x6c6cc014
  40f9e9:	(bad)  
  40f9ea:	sbb    dh,bl
  40f9ec:	xor    edx,DWORD PTR [edx]
  40f9ee:	movd   DWORD PTR [ebx],mm0
  40f9f1:	sbb    al,0xf3
  40f9f3:	mov    ah,0xb
  40f9f5:	test   al,al
  40f9f7:	jmp    0x40fa18
  40f9f9:	inc    eax
  40f9fa:	add    DWORD PTR [ecx+0x127b44a7],ebp
  40fa00:	push   edi
  40fa01:	add    ebp,DWORD PTR [ebx]
  40fa03:	sbb    ecx,DWORD PTR [edi-0x1ce07bc5]
  40fa09:	shl    BYTE PTR [bp+si+0x60],0x50
  40fa0e:	xlat   BYTE PTR ds:[ebx]
  40fa0f:	loop   0x40fa6f
  40fa11:	lods   al,BYTE PTR ds:[esi]
  40fa12:	mov    WORD PTR [ebp+0x282247c9],gs
  40fa18:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1a:	pop    esp
  40fa1b:	sub    esi,DWORD PTR [esi-0x5b1316b8]
  40fa21:	cmp    al,0x73
  40fa23:	in     al,dx
  40fa24:	add    BYTE PTR [eax],al
  40fa26:	fidivr WORD PTR [edx+0x7]
  40fa29:	ins    DWORD PTR es:[edi],dx
  40fa2a:	data16 into 
  40fa2c:	hlt    
  40fa2d:	adc    edx,edi
  40fa2f:	rol    DWORD PTR [ecx],cl
  40fa31:	add    BYTE PTR [edi-0x72143e3c],dl
  40fa37:	pop    esi
  40fa38:	cmp    ecx,0x83112ab4
  40fa3e:	inc    esp
  40fa3f:	add    eax,0x5e6cb70f
  40fa44:	or     ecx,0xffffff91
  40fa47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa48:	or     DWORD PTR fs:[esp+eax*2+0x72],0x2
  40fa4e:	ja     0x40fa14
  40fa50:	rcl    DWORD PTR [ebp-0x31],0xe2
  40fa54:	dec    edi
  40fa55:	mov    eax,DWORD PTR [ecx-0x37ba78ba]
  40fa5b:	jg     0x40fa36
  40fa5d:	jg     0x40faa0
  40fa5f:	add    esi,0xffffffff
  40fa62:	ins    DWORD PTR es:[edi],dx
  40fa63:	rcl    DWORD PTR [ebp+ecx*4-0x70],0x59
  40fa68:	push   esp
  40fa69:	push   edi
  40fa6a:	fdivr  QWORD PTR [edx+edi*4+0x43c76bff]
  40fa71:	or     al,0x34
  40fa73:	mov    bh,0x73
  40fa75:	cld    
  40fa76:	daa    
  40fa77:	(bad)  
  40fa78:	std    
  40fa79:	adc    eax,0x3e5218
  40fa7e:	test   DWORD PTR [eiz*2-0x209d777],0xfdb6775e
  40fa89:	jne    0x40fa8b
  40fa8b:	add    ch,bh
  40fa8d:	mov    ?,ebp
  40fa8f:	adc    eax,0x3e5444
  40fa94:	(bad)  
  40fa95:	shl    DWORD PTR [ecx],0xc9
  40fa98:	and    cl,ch
  40fa9a:	or     al,BYTE PTR [edi+0x7d]
  40fa9d:	rcl    DWORD PTR [ecx-0x75],0x28
  40faa1:	and    BYTE PTR [eax],cl
  40faa3:	test   DWORD PTR [ebx-0x137cfcca],edi
  40faa9:	mov    dh,0x59
  40faab:	ret    
  40faac:	popf   
  40faad:	or     BYTE PTR [esi+0x4b7555e7],dh
  40fab3:	(bad)  
  40fab4:	and    BYTE PTR ds:0xeced0c28,dl
  40faba:	mov    ah,0x55
  40fabc:	and    BYTE PTR [esi],0x9a
  40fabf:	adc    bl,ch
  40fac1:	pop    ecx
  40fac2:	inc    esp
  40fac3:	inc    ebx
  40fac4:	mov    bl,0xa0
  40fac6:	add    al,BYTE PTR [ebx+0x8d56865]
  40facc:	retf   
  40facd:	jo     0x40fac4
  40facf:	ja     0x40fa80
  40fad1:	sbb    DWORD PTR [ebx+ebx*2],eax
  40fad4:	pop    esi
  40fad5:	xchg   edi,eax
  40fad6:	push   es
  40fad7:	xor    BYTE PTR [ebp+0x16544124],bl
  40fadd:	jge    0x40fa90
  40fadf:	add    al,0xd5
  40fae2:	add    dl,BYTE PTR [esi+0x20]
  40fae5:	xchg   esi,eax
  40fae6:	repnz dec edi
  40fae8:	sub    ch,BYTE PTR [esi]
  40faea:	(bad)  
  40faeb:	xor    bl,BYTE PTR [ebp-0x22]
  40faee:	mov    ebp,0x50000fb
  40faf3:	cmp    dl,BYTE PTR [esi+edi*8+0x12]
  40faf7:	aam    0x52
  40faf9:	test   BYTE PTR [ebx],dl
  40fafb:	inc    edx
  40fafc:	clc    
  40fafd:	dec    BYTE PTR [eax+0x36735b0d]
  40fb03:	sbb    BYTE PTR [edx+ebp*8-0x5b],cl
  40fb07:	aam    0xc5
  40fb09:	sti    
  40fb0a:	push   ss
  40fb0b:	xchg   esi,eax
  40fb0c:	cli    
  40fb0d:	mov    BYTE PTR [esp+eiz*8+0x1be45d44],bl
  40fb14:	mov    dh,0x8a
  40fb16:	shr    DWORD PTR [ecx-0x4c],0x8a
  40fb1a:	int    0x6f
  40fb1c:	ja     0x40fb5b
  40fb1e:	adc    BYTE PTR [esi-0x3245b002],dl
  40fb24:	cli    
  40fb25:	mov    bl,dh
  40fb27:	add    DWORD PTR [edx+0x3a],esi
  40fb2a:	ret    0xd71b
  40fb2d:	dec    ebx
  40fb2e:	mov    ds:0x1f482b78,eax
  40fb33:	dec    ebx
  40fb34:	int    0xd1
  40fb36:	mov    ah,0x7f
  40fb38:	mov    eax,ds:0xbd7f99d1
  40fb3d:	rcl    DWORD PTR [ebp-0x51a401bb],1
  40fb43:	mov    DWORD PTR [ebp+0x7404bd4b],ebp
  40fb49:	mov    eax,0xe3910087
  40fb4e:	and    al,0x46
  40fb50:	xchg   ebp,eax
  40fb51:	jg     0x40fb34
  40fb53:	inc    esi
  40fb54:	sub    eax,0x650000aa
  40fb59:	inc    edx
  40fb5a:	sbb    edi,DWORD PTR [edi+0x36]
  40fb5d:	mov    ah,0x69
  40fb5f:	loope  0x40fba7
  40fb61:	add    ebx,DWORD PTR [edi]
  40fb63:	jns    0x40fb46
  40fb65:	repnz sbb BYTE PTR [ebx-0x57],cl
  40fb69:	div    BYTE PTR [ebx-0x3f]
  40fb6c:	es pop ebx
  40fb6e:	enter  0x2351,0x46
  40fb72:	popa   
  40fb73:	push   esp
  40fb74:	and    DWORD PTR [ebp-0x31],ecx
  40fb77:	std    
  40fb78:	adc    edx,eax
  40fb7a:	inc    esp
  40fb7b:	pop    esp
  40fb7c:	push   es
  40fb7d:	mov    DWORD PTR ds:0x61faf74b,edi
  40fb83:	shl    esi,0x79
  40fb86:	fwait
  40fb87:	sti    
  40fb88:	and    eax,0x48427204
  40fb8d:	cmp    ebp,DWORD PTR [ecx]
  40fb8f:	dec    ebx
  40fb90:	test   al,0x5a
  40fb92:	push   cs
  40fb93:	mov    ds,ebx
  40fb95:	inc    ebp
  40fb96:	xor    bh,0x68
  40fb99:	pop    edx
  40fb9a:	sbb    DWORD PTR [edi-0x4cd6ba35],ecx
  40fba0:	pop    ss
  40fba1:	dec    ebx
  40fba2:	jmp    FWORD PTR [ecx+0x66]
  40fba5:	inc    esp
  40fba6:	je     0x40fb85
  40fba8:	shl    DWORD PTR [bp+di],1
  40fbab:	icebp  
  40fbac:	push   edi
  40fbad:	out    dx,al
  40fbae:	jg     0x40fbab
  40fbb0:	fiadd  WORD PTR [ebp-0x77]
  40fbb3:	rcr    DWORD PTR ds:0x73017d44,1
  40fbb9:	inc    ebp
  40fbba:	push   ebp
  40fbbb:	mov    BYTE PTR [eax],0x0
  40fbbe:	pop    edx
  40fbbf:	and    DWORD PTR [eax],edx
  40fbc1:	push   ecx
  40fbc2:	loopne 0x40fc0a
  40fbc4:	(bad)  
  40fbc5:	call   0xe94227a0
  40fbca:	sahf   
  40fbcb:	jnp    0x40fbd2
  40fbcd:	ins    BYTE PTR es:[edi],dx
  40fbce:	(bad)  
  40fbd0:	adc    BYTE PTR [ecx],bh
  40fbd2:	loopne 0x40fb9b
  40fbd4:	add    edx,DWORD PTR [esi+0x2911cd4d]
  40fbda:	cdq    
  40fbdb:	jnp    0x40fc22
  40fbdd:	icebp  
  40fbde:	cs add ch,bl
  40fbe1:	jmp    0x40fb8b
  40fbe3:	inc    edx
  40fbe4:	pop    esi
  40fbe5:	stos   DWORD PTR es:[edi],eax
  40fbe6:	cmp    al,BYTE PTR [ebp-0x17]
  40fbe9:	mov    ebp,0xbf7803c
  40fbee:	dec    ebp
  40fbef:	repnz gs push 0xffffffd6
  40fbf3:	sbb    al,0x74
  40fbf5:	loop   0x40fbf3
  40fbf7:	jg     0x40fbf0
  40fbf9:	lods   eax,DWORD PTR ds:[esi]
  40fbfa:	loop   0x40fbf9
  40fbfc:	gs ins BYTE PTR es:[edi],dx
  40fbfe:	pop    esi
  40fbff:	into   
  40fc00:	or     bl,dl
  40fc02:	cmp    ch,BYTE PTR [ebp-0x7e5f9f9b]
  40fc08:	shr    ebx,0xfc
  40fc0b:	ja     0x40fc0d
  40fc0d:	(bad)
  40fc11:	sub    ebx,DWORD PTR [eax-0x28143f7f]
  40fc17:	mov    eax,DWORD PTR [eax]
  40fc19:	xchg   DWORD PTR ds:0x90007485,ebx
  40fc1f:	in     al,dx
  40fc20:	mov    edi,0x4d000066
  40fc25:	inc    edx
  40fc27:	mov    eax,DWORD PTR [eax]
  40fc29:	in     eax,0x3
  40fc2b:	jmp    0x40fbec
  40fc2d:	(bad)  
  40fc2e:	(bad)  
  40fc2f:	cmp    ebp,DWORD PTR [esi-0x4ec3f8cc]
  40fc35:	xor    al,0x3
  40fc37:	inc    ecx
  40fc38:	scas   eax,DWORD PTR es:[edi]
  40fc39:	or     BYTE PTR [ecx-0xf],dh
  40fc3c:	(bad)  
  40fc3d:	mov    edi,0x2984429
  40fc42:	cmp    ecx,esi
  40fc44:	enter  0x8b52,0x51
  40fc48:	test   edi,esi
  40fc4a:	aad    0x73
  40fc4c:	push   eax
  40fc4d:	xor    BYTE PTR [edi],0xd
  40fc50:	mov    DWORD PTR [ecx],eax
  40fc52:	cmp    BYTE PTR [edx],0x6e
  40fc55:	xor    eax,0x3ffe8b00
  40fc5a:	xchg   DWORD PTR [edi],ecx
  40fc5c:	push   es
  40fc5d:	add    eax,DWORD PTR [eax]
  40fc5f:	push   ebp
  40fc60:	iret   
  40fc61:	stos   BYTE PTR es:[edi],al
  40fc62:	sub    esp,0x8b548f08
  40fc68:	mov    ch,0xb0
  40fc6a:	inc    esp
  40fc6b:	sbb    al,0x54
  40fc6d:	xchg   ebx,eax
  40fc6e:	jb     0x40fcc2
  40fc70:	dec    esi
  40fc71:	and    BYTE PTR [esi-0x73],dl
  40fc74:	stc    
  40fc75:	cmovg  ebp,eax
  40fc78:	inc    esi
  40fc79:	jbe    0x40fc78
  40fc7b:	inc    DWORD PTR [edi+0x7efea23]
  40fc81:	pop    ss
  40fc82:	xor    bh,bh
  40fc84:	popf   
  40fc85:	cwde   
  40fc86:	push   cs
  40fc87:	jbe    0x40fc89
  40fc89:	add    BYTE PTR [esi+0x70c44c5],ah
  40fc8f:	ret    
  40fc90:	xchg   DWORD PTR [ebp+0x60],eax
  40fc93:	lds    eax,FWORD PTR [eax+edx*1-0x31]
  40fc97:	ret    0x4d8b
  40fc9a:	popf   
  40fc9b:	or     DWORD PTR [ebx+0x44],edi
  40fc9e:	mov    ebp,0xcafe8a01
  40fca3:	cld    
  40fca4:	jg     0x40fc65
  40fca6:	dec    eax
  40fca7:	push   ebx
  40fca8:	mov    edi,0xd4293b3a
  40fcad:	frstor [esp+esi*2]
  40fcb0:	out    dx,al
  40fcb1:	mov    BYTE PTR [ebx+0x1],cl
  40fcb4:	pop    ebp
  40fcb5:	inc    eax
  40fcb6:	push   ss
  40fcb7:	pop    ds
  40fcb8:	pop    esp
  40fcb9:	add    ah,BYTE PTR [edx-0x1e]
  40fcbc:	enter  0x2413,0x1b
  40fcc0:	in     al,dx
  40fcc1:	scas   eax,DWORD PTR es:[edi]
  40fcc2:	pushf  
  40fcc3:	xor    BYTE PTR [esi],cl
  40fcc5:	xor    ebx,DWORD PTR [ebp+0x48]
  40fcc8:	inc    edi
  40fcc9:	mov    bl,ah
  40fccb:	and    eax,0x526d4479
  40fcd0:	rol    BYTE PTR [edi],0x9a
  40fcd3:	aad    0x45
  40fcd5:	jmp    DWORD PTR [edx+0x59]
  40fcd8:	adc    ecx,ecx
  40fcda:	fsubr  st(2),st
  40fcdc:	mov    ch,0xf3
  40fcde:	and    al,0xe6
  40fce0:	dec    ebx
  40fce1:	mov    bl,bl
  40fce3:	push   ebp
  40fce4:	jl     0x40fd01
  40fce6:	xchg   ebp,eax
  40fce7:	aas    
  40fce8:	call   0xc8d18b61
  40fced:	sldt   WORD PTR [eax]
  40fcf0:	mov    ds:0x2aff35de,al
  40fcf5:	pop    ecx
  40fcf6:	jns    0x40fd75
  40fcf8:	test   edi,esp
  40fcfa:	inc    ebx
  40fcfb:	pop    esi
  40fcfc:	jnp    0x40fc8e
  40fcfe:	cmp    edx,eax
  40fd00:	xlat   BYTE PTR ds:[ebx]
  40fd01:	xchg   ebx,eax
  40fd02:	add    DWORD PTR [edi],ecx
  40fd04:	and    DWORD PTR [ebp+0x9d0002],esi
  40fd0a:	retf   0x710f
  40fd0d:	sar    DWORD PTR [ebx+0x4d],0xa1
  40fd11:	fucomip st,st(6)
  40fd13:	push   cs
  40fd14:	push   ss
  40fd15:	add    dh,BYTE PTR [edi+0x1dad1ae7]
  40fd1b:	push   ecx
  40fd1c:	(bad)  
  40fd1e:	pushf  
  40fd1f:	(bad)
  40fd22:	loopne 0x40fcf3
  40fd24:	test   eax,0x4288b175
  40fd29:	dec    ecx
  40fd2a:	(bad)  
  40fd2c:	lahf   
  40fd2d:	sub    BYTE PTR [ecx],0x23
  40fd30:	and    BYTE PTR [eax-0x175a7cd3],bh
  40fd36:	pop    ebp
  40fd37:	add    DWORD PTR ds:0xc15b0840,ebx
  40fd3d:	mov    bh,BYTE PTR [ebx]
  40fd3f:	inc    edi
  40fd40:	xchg   DWORD PTR [eax],esp
  40fd42:	fiadd  WORD PTR [ebp-0xe3a2ca1]
  40fd48:	adc    dl,BYTE PTR [edi]
  40fd4a:	sub    DWORD PTR [edi+eiz*1],eax
  40fd4d:	pop    ebx
  40fd4e:	in     eax,0x85
  40fd50:	fld    DWORD PTR [ecx+0x18]
  40fd53:	inc    edi
  40fd54:	add    BYTE PTR [eax],al
  40fd56:	xchg   ecx,eax
  40fd57:	xchg   edx,eax
  40fd58:	cld    
  40fd59:	ret    
  40fd5a:	bound  ecx,QWORD PTR [edx-0x37d8b8dd]
  40fd60:	cwde   
  40fd61:	jp     0x40fd4c
  40fd63:	inc    ecx
  40fd64:	shr    BYTE PTR [ecx],cl
  40fd66:	into   
  40fd67:	loopne 0x40fde7
  40fd69:	mov    esi,0x7af504a6
  40fd6e:	mov    edx,0x7ed0e23d
  40fd73:	xor    BYTE PTR [edx-0x7],0xb1
  40fd77:	and    DWORD PTR [edx-0x47],esi
  40fd7a:	sub    bh,dh
  40fd7c:	scas   al,BYTE PTR es:[edi]
  40fd7d:	rep stos DWORD PTR es:[edi],eax
  40fd7f:	test   ebx,ebx
  40fd81:	inc    esi
  40fd82:	adc    eax,DWORD PTR [edx+0x61]
  40fd85:	mov    dh,0x96
  40fd87:	cli    
  40fd88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd89:	or     al,0x9c
  40fd8b:	adc    DWORD PTR [esp+ebx*8-0x5],esp
  40fd8f:	inc    ecx
  40fd90:	push   DWORD PTR ds:0x31444132
  40fd96:	inc    esi
  40fd97:	lock jg 0x40fdbd
  40fd9a:	out    0x10,eax
  40fd9c:	test   eax,eax
  40fd9e:	arpl   WORD PTR [eax-0x2],ax
  40fda1:	imul   esp,DWORD PTR [esi+0xe],0x4111640f
  40fda8:	inc    BYTE PTR [esi]
  40fdaa:	inc    esi
  40fdab:	into   
  40fdac:	repz ret 0x9f0
  40fdb0:	punpckhdq mm3,mm5
  40fdb3:	inc    eax
  40fdb4:	(bad)  
  40fdb5:	out    dx,al
  40fdb6:	daa    
  40fdb7:	iret   
  40fdb8:	add    esp,DWORD PTR [ecx]
  40fdba:	add    BYTE PTR [eax],al
  40fdbc:	in     eax,dx
  40fdbd:	add    al,BYTE PTR [ecx]
  40fdbf:	out    dx,al
  40fdc0:	sbb    eax,0xdbd6fef8
  40fdc5:	add    edi,edi
  40fdc7:	and    al,0xed
  40fdc9:	enter  0x2cfe,0xd1
  40fdcd:	add    edi,edi
  40fdcf:	and    al,0xcd
  40fdd1:	mov    al,BYTE PTR [ecx+edi*4-0x59]
  40fdd5:	enter  0xde07,0x1d
  40fdd9:	or     eax,0xf4dba6ff
  40fdde:	mov    edi,0x11d1897
  40fde3:	pusha  
  40fde4:	pop    eax
  40fde5:	sbb    DWORD PTR [ebp+edx*1-0x6a],esi
  40fde9:	ror    BYTE PTR [edi],0xf6
  40fdec:	mov    dl,0x81
  40fdee:	call   0xfe81e1e2
  40fdf3:	(bad)  
  40fdf4:	clc    
  40fdf5:	or     BYTE PTR [edx+0x558da01f],cl
  40fdfb:	in     eax,dx
  40fdfc:	pop    esi
  40fdfd:	cld    
  40fdfe:	ret    0x1bda
  40fe01:	stc    
  40fe02:	or     ebp,ebx
  40fe04:	loop   0x40fe3c
  40fe06:	cmp    ch,BYTE PTR [edx]
  40fe08:	in     eax,dx
  40fe09:	or     BYTE PTR [ebx-0x18cace00],cl
  40fe0f:	mov    ah,0xba
  40fe11:	enter  0x6afd,0xa4
  40fe15:	jo     0x40fda2
  40fe17:	dec    ebp
  40fe18:	test   BYTE PTR [esi-0x1a],dh
  40fe1b:	stos   DWORD PTR es:[edi],eax
  40fe1c:	jl     0x40fde6
  40fe1e:	std    
  40fe1f:	add    DWORD PTR [eax],eax
  40fe21:	add    BYTE PTR [ecx],al
  40fe23:	icebp  
  40fe24:	daa    
  40fe25:	inc    ebp
  40fe26:	mov    WORD PTR [esi+0x1e9f187c],?
  40fe2c:	mov    eax,DWORD PTR [esi-0x38]
  40fe2f:	add    eax,edi
  40fe31:	mov    DWORD PTR [ecx],eax
  40fe33:	jmp    0x1c1544c1
  40fe38:	(bad)  
  40fe39:	lea    ecx,[ecx]
  40fe3b:	cmc    
  40fe3c:	xchg   DWORD PTR [ebp-0x2c],eax
  40fe3f:	frstor [edi]
  40fe41:	(bad)  
  40fe42:	jnp    0x40fe0a
  40fe44:	mov    DWORD PTR [ebp+0x5c],ecx
  40fe47:	add    cl,bh
  40fe49:	mov    DWORD PTR [edx-0x743f7dd2],ebp
  40fe4f:	shl    DWORD PTR [esi-0x2],0x3b
  40fe53:	mov    BYTE PTR [ebp+0x3b],0xaa
  40fe57:	ss jo  0x40fe2c
  40fe5a:	pop    ebp
  40fe5b:	(bad)  
  40fe5c:	cld    
  40fe5d:	(bad)  
  40fe5e:	cmp    eax,DWORD PTR [edi-0x19]
  40fe61:	lahf   
  40fe62:	cmp    al,dh
  40fe64:	std    
  40fe65:	push   ebp
  40fe66:	mov    edi,0x1bf881da
  40fe6b:	push   eax
  40fe6c:	jnp    0x682738fb
  40fe72:	sub    eax,esi
  40fe74:	std    
  40fe75:	sub    DWORD PTR [ebp+eax*8-0x3c18fb8d],0xffffffe9
  40fe7d:	xor    al,0xe7
  40fe7f:	adc    bl,bl
  40fe81:	push   ebx
  40fe82:	push   edi
  40fe83:	(bad)  
  40fe84:	jae    0x40fe96
  40fe86:	add    BYTE PTR [eax],al
  40fe88:	popf   
  40fe89:	jg     0x40fe3d
  40fe8b:	(bad)  
  40fe8c:	nop
  40fe8d:	pop    ebp
  40fe8e:	scas   eax,DWORD PTR es:[edi]
  40fe8f:	dec    BYTE PTR [eax+0x6d144331]
  40fe95:	pop    ebx
  40fe96:	ret    0xb7ff
  40fe99:	in     al,dx
  40fe9a:	lds    edx,FWORD PTR [ecx]
  40fe9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9d:	mov    ?,edx
  40fe9f:	jge    0x40fe2f
  40fea1:	mov    dh,0xf7
  40fea3:	das    
  40fea4:	xchg   ebp,eax
  40fea5:	inc    edx
  40fea6:	inc    ebx
  40fea7:	jae    0x40fe4f
  40fea9:	push   esp
  40feaa:	mov    ebp,0xf25490f
  40feaf:	shl    BYTE PTR [esi+0x56187a2b],0x9e
  40feb6:	inc    eax
  40feb7:	or     ebx,DWORD PTR [ebp+0x16eb779e]
  40febd:	addr16 repnz push ebp
  40fec0:	dec    edx
  40fec1:	rol    DWORD PTR [ebx],cl
  40fec3:	call   DWORD PTR [eax]
  40fec5:	psadbw mm2,QWORD PTR cs:[edx+0x25e7fbde]
  40fecd:	push   eax
  40fece:	inc    ebx
  40fecf:	(bad)  
  40fed0:	push   ss
  40fed1:	inc    ecx
  40fed2:	jge    0x40fed2
  40fed4:	cli    
  40fed5:	and    eax,0x3386c00f
  40feda:	mov    ebx,0x8bdb7556
  40fedf:	(bad)  
  40fee0:	bound  esi,QWORD PTR [edx+edx*2+0x55155384]
  40fee7:	mov    bl,al
  40fee9:	cmp    DWORD PTR [edi+0x4a000056],ebp
  40feef:	push   ss
  40fef0:	clc    
  40fef1:	mov    edx,fs
  40fef3:	mov    BYTE PTR [ebx+0x74],al
  40fef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef7:	xchg   ecx,eax
  40fef8:	aam    0xfe
  40fefa:	xor    bh,BYTE PTR [eax+0x23b1c307]
  40ff00:	lods   al,BYTE PTR ds:[esi]
  40ff01:	out    0x12,eax
  40ff03:	add    bl,BYTE PTR [esi+0x28f31b44]
  40ff09:	pop    eax
  40ff0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff0b:	mov    ebp,DWORD PTR [ebx-0x2bbdde11]
  40ff11:	add    DWORD PTR [edx+ebx*1],edx
  40ff14:	jb     0x40ff53
  40ff16:	push   edi
  40ff17:	fistp  WORD PTR [esi-0x16ee235a]
  40ff1d:	js     0x40ff7d
  40ff1f:	out    0xdc,al
  40ff21:	js     0x40ff79
  40ff23:	out    0xf0,al
  40ff25:	lods   eax,DWORD PTR ds:[esi]
  40ff26:	daa    
  40ff27:	mov    dh,0xc4
  40ff29:	sti    
  40ff2a:	shl    edi,cl
  40ff2c:	imul   eax,DWORD PTR [ebx-0x65],0x934269d2
  40ff33:	sub    ch,BYTE PTR [edx+ebx*2-0x3a97c145]
  40ff3a:	sahf   
  40ff3b:	add    dl,BYTE PTR [edi+0x10379cce]
  40ff41:	inc    eax
  40ff42:	dec    ecx
  40ff43:	mov    edx,esp
  40ff45:	aad    0xed
  40ff47:	mov    esp,DWORD PTR [ebx]
  40ff49:	cmp    al,0x21
  40ff4b:	enter  0xd4d0,0x2
  40ff4f:	xor    al,0xc5
  40ff51:	les    eax,FWORD PTR [eax]
  40ff53:	add    BYTE PTR [edx-0x62fa5e5a],al
  40ff59:	add    bh,BYTE PTR [esi+0x2b44a6b9]
  40ff5f:	inc    eax
  40ff60:	popf   
  40ff61:	cmp    eax,0x58750c33
  40ff66:	clc    
  40ff67:	add    eax,0x18a4819d
  40ff6c:	fs inc ecx
  40ff6e:	loopne 0x40ff73
  40ff70:	mov    bh,0x16
  40ff72:	pusha  
  40ff73:	or     dl,BYTE PTR [eax]
  40ff75:	(bad)
  40ff78:	cmp    cl,dh
  40ff7a:	jge    0x40ff95
  40ff7c:	imul   edx,DWORD PTR [eax+eax*1],0xc381a129
  40ff83:	fisttp QWORD PTR ds:0x5fb917c8
  40ff89:	push   ss
  40ff8a:	hlt    
  40ff8b:	sti    
  40ff8c:	fidivr WORD PTR ds:0xd6622f89
  40ff92:	mov    bh,BYTE PTR ds:0x6a0bc712
  40ff98:	lods   eax,DWORD PTR ds:[esi]
  40ff99:	adc    eax,0x4d596a53
  40ff9e:	push   ebp
  40ff9f:	sahf   
  40ffa0:	popf   
  40ffa1:	bound  eax,QWORD PTR [eax]
  40ffa3:	jmp    0xbc80d46
  40ffa8:	mov    eax,ds:0xe4720002
  40ffad:	add    eax,0xa8952983
  40ffb2:	adc    edi,DWORD PTR [ecx+0x11f3c711]
  40ffb8:	add    BYTE PTR [eax],al
  40ffba:	cmp    ch,BYTE PTR [edx]
  40ffbc:	(bad)  
  40ffbd:	dec    dh
  40ffbf:	cmp    al,0x14
  40ffc1:	mov    ch,0x84
  40ffc3:	ret    0x69ff
  40ffc6:	push   ebp
  40ffc7:	or     DWORD PTR [ebp-0x41795057],eax
  40ffcd:	jmp    0xc7290270
  40ffd2:	lock cmp al,0xfe
  40ffd5:	pusha  
  40ffd6:	push   ebp
  40ffd7:	xor    eax,0xf0ad2c8c
  40ffdc:	cmc    
  40ffdd:	sbb    DWORD PTR [eax],esp
  40ffdf:	mov    dh,0xef
  40ffe1:	rol    DWORD PTR [ebx+0x11e8ffa6],0xc6
  40ffe8:	sti    
  40ffe9:	loop   0x40ffcf
  40ffeb:	mov    dh,0x3
  40ffed:	fcmovu st,st(7)
  40ffef:	sub    BYTE PTR [ebx+0x62],dh
  40fff2:	pop    ebp
  40fff3:	sub    DWORD PTR [edx+0x2b0908e],eax
  40fff9:	add    BYTE PTR [esi-0x4dc4a0f4],cl
  40ffff:	jnp    0x41002d
  410001:	lea    ecx,[ecx+edx*1+0x7ab3146a]
  410008:	repnz push ebx
  41000a:	sbb    DWORD PTR [edx],0x3c
  41000d:	push   ss
  41000e:	inc    esp
  41000f:	add    DWORD PTR [ebx-0x4175ff3c],eax
  410015:	je     0x40fff8
  410017:	dec    edx
  410018:	jg     0x40ffdd
  41001a:	mov    edi,0x6
  41001f:	add    BYTE PTR [edi+0x5fe270f9],bl
  410025:	or     al,0x69
  410027:	test   BYTE PTR [edi-0x38fffffa],0x79
  41002e:	cli    
  41002f:	jne    0x410066
  410031:	xor    al,0xd0
  410033:	test   DWORD PTR [ebx-0x674d08b],esi
  410039:	cld    
  41003a:	add    eax,0x47680c8
  410040:	(bad)  
  410041:	xchg   ecx,eax
  410042:	outs   dx,BYTE PTR ds:[esi]
  410043:	cld    
  410044:	sub    ebx,DWORD PTR [ebp-0x77]
  410047:	or     BYTE PTR [ecx],bh
  410049:	into   
  41004a:	jb     0x41005e
  41004c:	mov    ebp,0x8176f64b
  410051:	(bad)  
  410052:	pop    ebx
  410053:	clc    
  410054:	lahf   
  410055:	xlat   BYTE PTR ds:[ebx]
  410056:	jg     0x410053
  410058:	hlt    
  410059:	mov    ebx,DWORD PTR [ecx+0x0]
  41005c:	mov    bh,0x4a
  41005e:	inc    eax
  41005f:	add    eax,0x3f
  410064:	outs   dx,DWORD PTR ds:[esi]
  410065:	(bad)  [eax-0x2b]
  410068:	jmp    DWORD PTR [ecx+0x5fdb67]
  41006e:	add    BYTE PTR [eax],al
  410070:	ror    DWORD PTR [ebp+0x299d01d9],0x2
  410077:	(bad)  
  410078:	enter  0x2b8d,0x5d
  41007c:	lock test BYTE PTR [eax-0x7d],al
  410080:	pop    ebp
  410081:	aaa    
  410082:	sbb    edi,edi
  410084:	add    BYTE PTR [eax],al
  410086:	mov    al,0xb5
  410088:	sub    edx,DWORD PTR [ebx]
  41008a:	jmp    0x410038
  41008c:	inc    eax
  41008d:	mov    WORD PTR [eax+0x71f72bd9],ss
  410093:	sub    DWORD PTR [edx],eax
  410095:	xor    bl,ch
  410097:	je     0x410079
  410099:	pop    edx
  41009a:	aam    0xe7
  41009c:	verr   WORD PTR [esi]
  41009f:	outs   dx,DWORD PTR ds:[esi]
  4100a0:	mov    WORD PTR ds:[ecx-0x399838d8],gs
  4100a7:	sub    al,BYTE PTR [edx]
  4100a9:	add    BYTE PTR [edi+0x29],dh
  4100ac:	fdivr  st,st(6)
  4100ae:	mov    al,0x5d
  4100b0:	sbb    BYTE PTR [eax-0x63],al
  4100b3:	sub    al,0x78
  4100b5:	inc    esp
  4100b6:	lods   eax,DWORD PTR ds:[esi]
  4100b7:	test   al,0x47
  4100b9:	or     ecx,edx
  4100bb:	icebp  
  4100bc:	sbb    al,0xc0
  4100be:	jle    0x41012e
  4100c0:	cmp    al,ch
  4100c2:	pop    ebx
  4100c3:	xor    DWORD PTR [edx],eax
  4100c5:	mov    DWORD PTR [ebx+0x2d],esp
  4100c8:	mov    eax,DWORD PTR [ecx+edx*4-0x67]
  4100cc:	aas    
  4100cd:	je     0x410074
  4100cf:	retf   
  4100d0:	mov    al,BYTE PTR [ebp-0x5c]
  4100d3:	test   al,0x48
  4100d5:	or     dh,bl
  4100d7:	push   esp
  4100d8:	adc    eax,0x3e9ab30
  4100dd:	and    DWORD PTR [ecx+0x35],0xffffff83
  4100e1:	(bad)  
  4100e2:	pushf  
  4100e3:	repz (bad) 
  4100e5:	out    0x10,eax
  4100e7:	inc    ecx
  4100e8:	aas    
  4100e9:	inc    BYTE PTR [eax]
  4100eb:	add    BYTE PTR [esi],dl
  4100ed:	idiv   BYTE PTR [edi]
  4100ef:	push   esi
  4100f0:	repz add dl,BYTE PTR [ecx-0x62c4af26]
  4100f7:	test   BYTE PTR [ebx+0x8],cl
  4100fa:	pop    ds
  4100fb:	jmp    0x4100b2
  4100fd:	cmp    esi,DWORD PTR [ecx+0x13029d02]
  410103:	sbb    BYTE PTR [edx],dh
  410105:	mov    ch,0x74
  410107:	mov    ds,WORD PTR [esi]
  410109:	repz mov esp,0x183b2341
  41010f:	inc    ecx
  410110:	mov    cl,0xfe
  410112:	inc    bl
  410114:	adc    al,BYTE PTR [eax+0x42200f24]
  41011a:	in     eax,0x96
  41011c:	fbld   TBYTE PTR [edi+0x377ae0e2]
  410122:	out    0xb6,eax
  410124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410125:	cmp    esi,DWORD PTR [ebx+0x4043173f]
  41012b:	in     al,dx
  41012c:	jle    0x410130
  41012e:	jmp    0x9b7bf3c0
  410133:	aas    
  410134:	mov    edx,0xcb4053a6
  410139:	mov    WORD PTR [ebx-0x533545cd],ds
  41013f:	add    ebx,DWORD PTR [ebp+0x4c2a2988]
  410145:	cmp    edi,ebp
  410147:	aas    
  410148:	push   ecx
  410149:	xchg   DWORD PTR [esp+eax*4],eax
  41014c:	mov    dh,0x11
  41014e:	call   0x2b87:0xf30000d9
  410155:	inc    eax
  410156:	loop   0x410182
  410158:	mov    al,ds:0x613a8aa3
  41015d:	cmp    al,0x15
  41015f:	mov    eax,0xb07b89d4
  410164:	in     al,dx
  410165:	icebp  
  410166:	xor    ch,BYTE PTR [esi]
  410168:	push   edx
  410169:	mov    esi,ecx
  41016b:	jmp    DWORD PTR ss:[ecx+0x54]
  41016f:	or     dl,BYTE PTR [esi+0x16]
  410172:	mov    DWORD PTR [ebp-0x4],ebx
  410175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410176:	xchg   edx,eax
  410177:	test   ch,bh
  410179:	in     eax,0xc
  41017b:	add    eax,0x4060ed6a
  410180:	inc    esp
  410181:	cli    
  410182:	sahf   
  410183:	jg     0x41017a
  410185:	std    
  410186:	pop    edx
  410187:	xchg   DWORD PTR [esi-0xe],eax
  41018a:	sbb    DWORD PTR [edi+0x3de460f7],edi
  410190:	push   cs
  410191:	ss loop 0x41019e
  410194:	mov    esi,DWORD PTR [edx+eiz*4-0x392b012e]
  41019b:	stos   DWORD PTR es:[edi],eax
  41019c:	inc    edx
  41019e:	cwde   
  41019f:	sub    ch,BYTE PTR ds:0x8b029ce2
  4101a5:	cmp    DWORD PTR [eax+esi*1],esp
  4101a8:	jae    0x410187
  4101aa:	pop    ss
  4101ab:	mov    edi,0x8ce16207
  4101b0:	fld    QWORD PTR [ecx-0x6b]
  4101b3:	daa    
  4101b4:	(bad)  
  4101b5:	call   0x7a5b01ba
  4101ba:	jae    0x4101a1
  4101bc:	pusha  
  4101bd:	mov    esi,0x3f76e812
  4101c2:	stos   DWORD PTR es:[edi],eax
  4101c3:	push   cs
  4101c4:	jp     0x410152
  4101c6:	jl     0x4101c5
  4101c8:	jae    0x410190
  4101ca:	sti    
  4101cb:	je     0x410222
  4101cd:	shl    bh,1
  4101cf:	pop    ds
  4101d0:	and    eax,0x6463fe38
  4101d5:	adc    al,0x5f
  4101d7:	inc    edi
  4101d8:	jbe    0x410224
  4101da:	shr    ebp,0x9e
  4101dd:	iret   
  4101de:	mov    al,ch
  4101e0:	imul   edx,edx,0x8c523752
  4101e6:	jns    0x4101e8
  4101e8:	push   esp
  4101e9:	mov    ebp,?
  4101eb:	test   DWORD PTR [edx],0xb68df61c
  4101f1:	adc    BYTE PTR [ebx],ah
  4101f3:	lock les esi,FWORD PTR [edi+0x1]
  4101f7:	xor    cl,bh
  4101f9:	retf   
  4101fa:	or     eax,0xe6c28194
  4101ff:	out    dx,eax
  410200:	add    al,0xfe
  410202:	jmp    DWORD PTR [ebp-0x39]
  410205:	std    
  410206:	cs jae 0x410249
  410209:	xor    edi,DWORD PTR [esi-0x2746e15]
  41020f:	jne    0x410241
  410211:	xor    al,0xd9
  410213:	jmp    0x41021c
  410215:	xchg   edx,eax
  410216:	pop    ebp
  410217:	sub    al,0x8f
  410219:	retf   
  41021a:	out    0xd3,al
  41021c:	add    BYTE PTR [eax],al
  41021e:	(bad)  
  41021f:	(bad)  
  410220:	dec    DWORD PTR [esi]
  410222:	and    edi,ebp
  410224:	push   ecx
  410225:	mov    eax,ebx
  410227:	in     eax,dx
  410228:	pusha  
  410229:	lds    ebx,FWORD PTR [ebx-0x8]
  41022c:	add    eax,0x2a
  41022f:	fdiv   st(5),st
  410231:	jne    0x4101db
  410233:	push   eax
  410234:	push   ecx
  410235:	call   0x3ec418
  41023a:	inc    esp
  41023b:	inc    edx
  41023c:	cli    
  41023d:	add    DWORD PTR [ecx],esi
  41023f:	and    ecx,DWORD PTR [eax-0x417f4aba]
  410245:	je     0x4101f6
  410247:	test   dh,0x57
  41024a:	stos   DWORD PTR es:[edi],eax
  41024b:	scas   al,BYTE PTR es:[edi]
  41024c:	mov    esi,0x44920453
  410251:	add    al,0x4
  410253:	or     BYTE PTR [esi-0x76ab78ba],dh
  410259:	inc    ebp
  41025a:	mov    edi,?
  41025c:	cs call 0x3fe85a
  410262:	popf   
  410263:	cdq    
  410264:	add    bl,BYTE PTR [edi-0x25]
  410267:	hlt    
  410268:	dec    edx
  410269:	rcr    DWORD PTR [ecx+0x798ad529],0xab
  410270:	das    
  410271:	stos   DWORD PTR es:[edi],eax
  410272:	sahf   
  410273:	sub    DWORD PTR [edx],eax
  410275:	push   ebx
  410276:	repz adc BYTE PTR [edi+0x2bfa4d44],cl
  41027d:	cdq    
  41027e:	mov    edi,0x890229
  410283:	add    al,bl
  410285:	jge    0x41020d
  410287:	mov    edi,0xbff020b0
  41028c:	inc    esp
  41028d:	inc    eax
  41028e:	push   es
  41028f:	add    BYTE PTR [ebp+0x18efb6b4],bl
  410295:	mov    eax,0x60260db7
  41029a:	sub    ebx,esp
  41029c:	dec    esi
  41029d:	mov    eax,ds:0xbd60883c
  4102a2:	xchg   BYTE PTR [edi+0x743b2388],bh
  4102a8:	or     edx,eax
  4102aa:	add    dh,BYTE PTR [edx+esi*8+0x1ed928c0]
  4102b1:	aas    
  4102b2:	pop    esi
  4102b3:	jmp    DWORD PTR [edx+0x6e]
  4102b6:	adc    al,BYTE PTR [eax]
  4102b8:	push   ecx
  4102b9:	nop
  4102ba:	jg     0x4102b9
  4102bc:	pushf  
  4102bd:	xchg   edi,eax
  4102be:	ror    BYTE PTR [edx+0x5e8d3148],1
  4102c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c5:	jl     0x410302
  4102c7:	adc    al,0xc9
  4102c9:	cmp    eax,edx
  4102cb:	call   FWORD PTR [edi]
  4102cd:	xchg   DWORD PTR [edx],edi
  4102cf:	jmp    DWORD PTR [ecx]
  4102d1:	xor    BYTE PTR [esi+0x2eb71632],dh
  4102d7:	and    BYTE PTR [edx+0x1d],0x7f
  4102db:	lds    esp,FWORD PTR [edx-0xce7acfe]
  4102e1:	iret   
  4102e2:	fst    QWORD PTR [esi]
  4102e4:	rcl    DWORD PTR [eax],0x29
  4102e7:	add    al,0x0
  4102e9:	add    BYTE PTR [esi],bl
  4102eb:	fadd   QWORD PTR ds:[esi+0x3cd9ae32]
  4102f2:	loope  0x41032e
  4102f4:	jno    0x4102bc
  4102f6:	push   0xffffff81
  4102f8:	scas   al,BYTE PTR es:[edi]
  4102f9:	pop    eax
  4102fa:	popf   
  4102fb:	add    ch,cl
  4102fd:	clc    
  4102fe:	fnstenv [edx]
  410300:	sbb    bl,BYTE PTR [esi+0x37]
  410303:	add    BYTE PTR [edx-0x3a],dh
  410306:	dec    edx
  410307:	mov    DWORD PTR [ebx],ebp
  410309:	pusha  
  41030a:	iret   
  41030b:	aaa    
  41030c:	repz xor ecx,DWORD PTR [edx+eax*8+0x32b188e8]
  410314:	mov    ecx,0xa4aacf58
  410319:	add    ebx,DWORD PTR [ebp+0x598f1a02]
  41031f:	mov    dl,BYTE PTR [eax-0x6d]
  410322:	fiadd  DWORD PTR [eax]
  410324:	jmp    0x5f444619
  410329:	sti    
  41032a:	popa   
  41032b:	adc    ah,BYTE PTR [edi]
  41032d:	(bad)  
  41032e:	and    eax,0x2a96f5fe
  410333:	mov    bl,BYTE PTR [ebx+0x18ad153c]
  410339:	mov    bh,BYTE PTR [ecx+0x22]
  41033c:	test   al,0xc
  41033e:	add    al,BYTE PTR [eax+0x6f]
  410341:	(bad)  
  410342:	repnz cli 
  410344:	sub    DWORD PTR [ebx+ebx*1],ecx
  410347:	scas   al,BYTE PTR es:[edi]
  410348:	jmp    0xa3cca050
  41034d:	pop    edi
  41034e:	add    BYTE PTR [eax],al
  410350:	lahf   
  410351:	inc    ebx
  410352:	mov    ecx,0xf8acb351
  410357:	out    dx,eax
  410358:	loop   0x410305
  41035a:	(bad)  
  41035b:	out    dx,al
  41035c:	inc    eax
  41035d:	mov    eax,DWORD PTR [ebp+esi*1+0x77]
  410361:	xchg   DWORD PTR [edi+ebx*4-0x2e],edi
  410365:	push   0x358a9265
  41036a:	mov    bl,bl
  41036c:	dec    eax
  41036d:	xor    dl,bl
  41036f:	call   0x3c440612
  410374:	mov    ch,0x8a
  410376:	push   esp
  410377:	mov    ch,0x96
  410379:	ins    DWORD PTR es:[edi],dx
  41037a:	dec    ebp
  41037b:	push   cs
  41037c:	sub    BYTE PTR [edi+0x455247d3],ch
  410382:	push   cs
  410383:	ins    BYTE PTR es:[edi],dx
  410384:	mov    edi,0xfce9fe35
  410389:	cli    
  41038a:	jge    0x41035c
  41038c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038d:	jg     0x41032a
  41038f:	jmp    0x2ccc0632
  410394:	jge    0x41034b
  410396:	cmp    ebx,ecx
  410398:	sahf   
  410399:	add    eax,0x2a30685
  41039e:	add    BYTE PTR [edi+0x7401129d],ah
  4103a4:	fadd   QWORD PTR ds:0x32447050
  4103aa:	out    0xdd,eax
  4103ac:	inc    ecx
  4103ad:	ss (bad) 
  4103af:	bound  edx,QWORD PTR [ecx+0x7e]
  4103b2:	fidivr DWORD PTR [ebp-0x4be0000]
  4103b8:	jl     0x410393
  4103ba:	sub    al,0xa3
  4103bc:	sub    BYTE PTR [edi],0xa6
  4103bf:	mov    esi,DWORD PTR [ecx+eax*2+0x24]
  4103c3:	mov    cl,0xe
  4103c5:	xchg   ebx,eax
  4103c6:	call   0x1434:0xef117435
  4103cd:	aad    0x8c
  4103cf:	ret    0x69ff
  4103d2:	pop    ebp
  4103d3:	or     DWORD PTR [ebp+0xc727400],eax
  4103d9:	inc    edi
  4103da:	xor    eax,0x8401d9c0
  4103df:	add    DWORD PTR [ebx],edi
  4103e1:	jge    0x410457
  4103e3:	outs   dx,DWORD PTR ds:[esi]
  4103e4:	fucomip st,st(3)
  4103e6:	stos   DWORD PTR es:[edi],eax
  4103e7:	addr16 std 
  4103e9:	(bad)  [ebp+0x1]
  4103ec:	add    BYTE PTR [ebx],al
  4103ee:	dec    edi
  4103ef:	xor    al,0xf9
  4103f1:	jb     0x410460
  4103f3:	test   BYTE PTR [ebx+0x10],al
  4103f6:	int    0xbe
  4103f8:	fld    DWORD PTR [ecx]
  4103fa:	je     0x4103fd
  4103fc:	add    eax,ebx
  4103fe:	ror    DWORD PTR [eax+0x14401d9],0x57
  410405:	call   0x3eb03d
  41040a:	das    
  41040b:	push   DWORD PTR [ecx]
  41040d:	ror    al,0xc1
  410410:	jb     0x41041e
  410412:	and    ecx,DWORD PTR [edx+0xe]
  410415:	mov    edi,DWORD PTR [ecx+0xe]
  410418:	push   ebx
  410419:	call   0x5fc5041e
  41041e:	(bad)  
  41041f:	push   DWORD PTR [edi-0x7c4d6d1a]
  410425:	clc    
  410426:	mov    esi,DWORD PTR [ebp+0x68]
  410429:	jmp    0x1355da4
  41042e:	jmp    0x420a13
  410433:	xor    esi,DWORD PTR [esi+0x29f7c184]
  410439:	sar    DWORD PTR [ecx],1
  41043b:	push   ebp
  41043c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41043d:	ins    BYTE PTR es:[edi],dx
  41043e:	sub    al,0x66
  410440:	iret   
  410441:	(bad)  
  410442:	or     eax,0xfffe7f84
  410447:	jmp    FWORD PTR [esi]
  410449:	call   DWORD PTR [edi+0x66]
  41044c:	dec    ebp
  41044d:	inc    edx
  41044e:	mov    dl,0xf
  410450:	popf   
  410451:	aad    0xc0
  410453:	daa    
  410454:	cmp    esp,DWORD PTR [eax-0x15bcd938]
  41045a:	and    eax,DWORD PTR [edi]
  41045c:	cmp    esi,DWORD PTR [eax]
  41045e:	inc    ebx
  41045f:	gs and al,0x67
  410462:	jo     0x4103f0
  410464:	fisttp DWORD PTR [eax-0x54]
  410467:	add    ebp,ebp
  410469:	scas   al,BYTE PTR es:[edi]
  41046a:	mov    esi,0xa20776b7
  41046f:	cmp    bl,bh
  410471:	adc    cl,BYTE PTR [ecx]
  410473:	test   BYTE PTR [ecx],dl
  410475:	sub    eax,DWORD PTR [edx]
  410477:	add    bh,dh
  410479:	push   esp
  41047a:	fisub  DWORD PTR [ebp+0x14]
  41047d:	fild   QWORD PTR [edi+0xe]
  410480:	add    BYTE PTR [eax],al
  410482:	adc    esp,esp
  410484:	std    
  410485:	gs es adc al,0xfb
  410489:	gs pop esp
  41048b:	mov    ecx,DWORD PTR [ebx]
  41048d:	xchg   si,ax
  41048f:	push   0xffffffa1
  410491:	mov    al,ah
  410493:	rol    DWORD PTR [esi+0x13ff8445],cl
  410499:	push   eax
  41049a:	sbb    bh,ah
  41049c:	ja     0x4104ed
  41049e:	and    cl,BYTE PTR [edi-0xe]
  4104a1:	adc    eax,0xb707295d
  4104a6:	pop    eax
  4104a7:	in     eax,dx
  4104a8:	test   bl,al
  4104aa:	cdq    
  4104ab:	dec    edi
  4104ac:	add    eax,ebp
  4104ae:	dec    edi
  4104af:	jno    0x4104b3
  4104b1:	add    BYTE PTR [edx+0x204f4393],ch
  4104b7:	lahf   
  4104b8:	(bad)  
  4104ba:	jmp    0x22a:0xa9492bbc
  4104c1:	mov    esp,DWORD PTR [eax+0x21]
  4104c4:	aaa    
  4104c5:	das    
  4104c6:	and    BYTE PTR [edi+eax*1-0x3dfd6196],dl
  4104cd:	xchg   BYTE PTR [ecx],al
  4104cf:	fistp  DWORD PTR [ecx+edi*1]
  4104d2:	mov    ebx,0xba2ba389
  4104d7:	mov    edx,esp
  4104d9:	add    bl,BYTE PTR [ebp+0x100f7b33]
  4104df:	mov    esi,0xf832ac34
  4104e4:	call   0x264104ec
  4104e9:	inc    ebx
  4104ea:	add    dh,bh
  4104ec:	(bad)  
  4104ed:	add    ch,cl
  4104ef:	jg     0x410533
  4104f1:	scas   al,BYTE PTR es:[edi]
  4104f2:	and    BYTE PTR [ecx],bh
  4104f4:	icebp  
  4104f5:	push   cs
  4104f6:	xchg   esi,eax
  4104f7:	repz jmp 0xf511edff
  4104fd:	out    0x20,al
  4104ff:	xchg   ecx,ecx
  410501:	mov    ch,BYTE PTR [ebx-0x7a]
  410504:	repnz ss mov ch,0x38
  410508:	cmp    bl,BYTE PTR [esi+0x7e9d041d]
  41050e:	test   al,0xaf
  410510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410511:	xor    edx,DWORD PTR [ebx]
  410513:	adc    BYTE PTR [esi],ah
  410515:	(bad)
  410518:	popf   
  410519:	retf   
  41051a:	pop    ebx
  41051b:	mov    ss,edx
  41051d:	test   DWORD PTR ss:[eax],edi
  410520:	int3   
  410521:	xor    ebx,eax
  410523:	jg     0x41057f
  410525:	add    ebp,DWORD PTR [esp+eax*1-0x64]
  410529:	add    ch,cl
  41052b:	mov    WORD PTR [ecx-0x15116d2],ss
  410531:	sbb    DWORD PTR [esi],0x3c7daa04
  410537:	add    ebx,DWORD PTR [ebp-0x516befe]
  41053d:	add    cl,ch
  41053f:	jg     0x410563
  410541:	add    esp,DWORD PTR [ebp+0x40]
  410544:	fidiv  DWORD PTR [edx]
  410546:	(bad)  
  410547:	call   0xfb38c367
  41054c:	add    BYTE PTR [eax],al
  41054e:	test   ebx,eax
  410550:	(bad)
  410553:	mov    DWORD PTR [ebp+edx*1-0x7a],edi
  410557:	dec    ebp
  410558:	pop    esi
  410559:	jmp    0xd3188cfc
  41055e:	inc    ebp
  41055f:	scas   eax,DWORD PTR es:[edi]
  410560:	jo     0x410522
  410562:	jmp    0x41058e
  410564:	jne    0x4104ed
  410566:	sub    DWORD PTR ds:0xb6d5dd69,esi
  41056c:	out    0x5c,eax
  41056e:	pop    esp
  41056f:	add    DWORD PTR [eax-0x1a],edx
  410572:	lods   al,BYTE PTR ds:[esi]
  410573:	out    dx,al
  410574:	adc    eax,0xc385a129
  410579:	in     eax,0x1d
  41057b:	jb     0x4105f0
  41057d:	fild   QWORD PTR [ebx]
  41057f:	add    ebp,0xffffffa2
  410582:	cwde   
  410583:	add    al,BYTE PTR [eax]
  410585:	add    dl,BYTE PTR [edx+edi*1]
  410588:	jno    0x410521
  41058a:	xchg   cl,dh
  41058c:	std    
  41058d:	daa    
  41058e:	cdq    
  41058f:	cmp    BYTE PTR [ebp-0xf],0x9f
  410593:	mov    eax,0x4c72102d
  410598:	add    cl,ch
  41059a:	sahf   
  41059b:	add    eax,0xb367d2fb
  4105a0:	sbb    BYTE PTR [edx+0x5c],dh
  4105a3:	cmp    ch,BYTE PTR [eax-0x57]
  4105a6:	jbe    0x4105aa
  4105a8:	add    cl,ch
  4105aa:	lahf   
  4105ab:	inc    ebp
  4105ac:	mov    WORD PTR [esi+0x66],ds
  4105af:	add    al,BYTE PTR [eax]
  4105b1:	jmp    0x2a1405b6
  4105b6:	dec    ebx
  4105b7:	fwait
  4105b8:	mov    dl,0x30
  4105ba:	jmp    0x2d29:0x8371eceb
  4105c1:	add    eax,0xee2900ff
  4105c6:	mov    DWORD PTR [ebp+0x5c],eax
  4105c9:	push   ebp
  4105ca:	out    0xad,al
  4105cc:	sub    eax,DWORD PTR [esi]
  4105ce:	add    BYTE PTR [ebx+0x5c],dl
  4105d1:	imul   DWORD PTR [esi+0x737b7bff]
  4105d7:	hlt    
  4105d8:	mov    ebx,ss
  4105da:	push   ebp
  4105db:	add    ah,al
  4105dd:	jl     0x410652
  4105df:	or     BYTE PTR [ecx+0x78],cl
  4105e2:	push   ss
  4105e3:	push   edi
  4105e4:	fwait
  4105e5:	adc    ebp,esp
  4105e7:	adc    al,BYTE PTR [ebp+eax*1+0x6a]
  4105eb:	adc    al,0x8b
  4105ed:	jb     0x4105d5
  4105ef:	add    edx,0x2
  4105f2:	push   esi
  4105f3:	inc    DWORD PTR [ecx-0x7bbfebc7]
  4105f9:	test   dl,al
  4105fb:	or     al,0x1
  4105fd:	(bad)  
  4105fe:	jae    0x41060d
  410600:	ficom  WORD PTR [edx]
  410602:	push   eax
  410603:	push   esi
  410604:	pop    ebx
  410605:	adc    dh,BYTE PTR [esi+edx*1]
  410608:	test   BYTE PTR [esi],al
  41060a:	add    esp,0x38
  41060d:	inc    eax
  41060e:	std    
  41060f:	adc    eax,0x401304
  410614:	leave  
  410615:	mov    dl,0x56
  410617:	cld    
  410618:	add    BYTE PTR [eax],al
  41061a:	sbb    edi,eax
  41061c:	out    0x43,al
  41061e:	push   edi
  41061f:	push   es
  410620:	add    BYTE PTR [ebx-0x76be1987],cl
  410626:	jns    0x41060e
  410628:	cmp    DWORD PTR [ebp+0x3c],ebx
  41062b:	or     BYTE PTR [edx-0x20776d0],al
  410631:	jmp    0x410b91
  410636:	mov    DWORD PTR [edx+0xe],eax
  410639:	xor    ebx,DWORD PTR [edi+0x55]
  41063c:	xchg   DWORD PTR [ebp-0x63],ebx
  41063f:	daa    
  410640:	sub    dh,cl
  410642:	dec    ebx
  410643:	sbb    eax,DWORD PTR [edx]
  410645:	mov    DWORD PTR [eax+0x4f],ebx
  410648:	stc    
  410649:	ret    0x7251
  41064c:	sti    
  41064d:	pop    esp
  41064e:	lods   eax,DWORD PTR ds:[esi]
  41064f:	jno    0x410647
  410651:	mov    WORD PTR [ebx+0x50],cs
  410654:	mov    edi,ebp
  410656:	aaa    
  410657:	das    
  410658:	xchg   DWORD PTR [ebp-0x56],eax
  41065b:	js     0x41062f
  41065d:	dec    BYTE PTR [eax-0x62bff3a9]
  410663:	pushf  
  410664:	or     ebx,DWORD PTR ds:[eax]
  410667:	fld    TBYTE PTR [esi+0x3c9ade0d]
  41066d:	ficomp DWORD PTR [ecx+ebx*1+0x49e83b02]
  410674:	mov    al,0xdf
  410676:	jbe    0x4106a7
  410678:	cmp    BYTE PTR [ebp-0x5b],0x19
  41067c:	scas   al,BYTE PTR es:[edi]
  41067d:	push   cs
  41067e:	add    BYTE PTR [eax],al
  410680:	jb     0x410651
  410682:	jnp    0x457d3068
  410688:	xchg   ebp,eax
  410689:	sbb    DWORD PTR [edx],ebp
  41068b:	icebp  
  41068c:	sti    
  41068d:	sbb    DWORD PTR [edx],eax
  41068f:	dec    eax
  410691:	dec    ebp
  410692:	sub    dh,BYTE PTR [ebx]
  410694:	or     eax,0xc88c3461
  410699:	xor    eax,0x19d2172a
  41069e:	add    cl,BYTE PTR [ebx+0x768521b0]
  4106a4:	test   edi,esi
  4106a6:	xor    al,0x14
  4106a8:	xor    DWORD PTR [edx+eax*8-0x1],ecx
  4106ac:	daa    
  4106ad:	out    0x4f,eax
  4106af:	imul   ebp,DWORD PTR [ecx+0x6d0e439c],0x6a033c9c
  4106b9:	add    ah,BYTE PTR [esi+0xf]
  4106bc:	lods   eax,DWORD PTR ds:[esi]
  4106bd:	sbb    BYTE PTR [ecx-0x1bb8e1fd],ch
  4106c3:	int    0xeb
  4106c5:	adc    eax,0x25d1259
  4106ca:	je     0x41073b
  4106cc:	jb     0x4106fc
  4106ce:	cmp    eax,0x35c5d835
  4106d3:	add    esi,DWORD PTR [ebp-0x62fd0581]
  4106d9:	das    
  4106da:	fwait
  4106db:	daa    
  4106dc:	ret    0x4d1b
  4106df:	xor    eax,0x1f9b2fb3
  4106e4:	add    BYTE PTR [eax],al
  4106e6:	ret    0x3d23
  4106e9:	xor    eax,0x34ab7ca3
  4106ee:	sti    
  4106ef:	shl    BYTE PTR [ecx-0x16eda3b6],1
  4106f5:	into   
  4106f6:	pop    ss
  4106f7:	push   ds
  4106f8:	addr16 sub dh,bl
  4106fb:	add    al,0xe9
  4106fd:	add    ecx,esi
  4106ff:	fdiv   DWORD PTR ds:0xd3422987
  410705:	xor    al,0x6b
  410707:	sbb    bl,BYTE PTR [esi+ebp*1+0x62]
  41070b:	das    
  41070c:	stc    
  41070d:	pop    eax
  41070e:	sub    ebp,eax
  410710:	js     0x4106e5
  410712:	and    eax,0xe98ab8cd
  410717:	push   ds
  410718:	pop    edi
  410719:	(bad)  
  41071a:	dec    esi
  41071b:	jns    0x410760
  41071d:	cmp    al,0x25
  41071f:	int    0x9c
  410721:	sub    edx,DWORD PTR [esi]
  410723:	int3   
  410724:	call   0x2c2aca2c
  410729:	je     0x4106d9
  41072b:	bnd jae 0x4106ec
  41072e:	dec    edx
  41072f:	shr    BYTE PTR [ebx-0x42],cl
  410732:	push   cs
  410733:	sar    bh,cl
  410735:	add    BYTE PTR [edx],0xfc
  410738:	add    cl,ch
  41073a:	sub    BYTE PTR [edi+0x73],0x6
  41073e:	mov    al,0xb6
  410740:	sti    
  410741:	pop    esi
  410742:	inc    ebx
  410743:	xor    esp,edi
  410745:	popa   
  410746:	ja     0x410777
  410748:	dec    BYTE PTR [esi+0x0]
  41074b:	add    BYTE PTR [ebx],dh
  41074d:	xor    ecx,DWORD PTR [eax+0x7a278eac]
  410753:	mov    cs,WORD PTR [ecx+0x7a948830]
  410759:	jp     0x4107b7
  41075b:	xor    DWORD PTR [edi],edx
  41075d:	into   
  41075e:	sti    
  41075f:	je     0x41079c
  410761:	inc    ebx
  410762:	cld    
  410763:	push   ds
  410764:	imul   edi,DWORD PTR [edi-0x40855374],0x19410e7
  41076e:	add    BYTE PTR [ebp-0x22],ch
  410771:	mov    cl,0x1e
  410773:	inc    BYTE PTR [eax+0x2a]
  410776:	(bad)  
  410777:	jl     0x410733
  410779:	and    eax,0x29e4054
  41077e:	call   FWORD PTR [ebp+esi*4+0x7a]
  410782:	inc    esp
  410783:	int    0x91
  410785:	lds    ebp,FWORD PTR [esi+0x5c7aaed6]
  41078b:	aad    0xe0
  41078d:	into   
  41078e:	div    DWORD PTR [eax+0x6c]
  410791:	sub    bh,dh
  410793:	xor    al,0x95
  410795:	and    eax,0x2c8e8636
  41079a:	imul   ebx,eax,0x41dbaf1d
  4107a0:	cdq    
  4107a1:	fld    QWORD PTR ds:0x4c799ee8
  4107a7:	test   DWORD PTR [edx],edi
  4107a9:	cmp    DWORD PTR [edi-0x121bdb],esi
  4107af:	inc    DWORD PTR [eax]
  4107b1:	add    BYTE PTR [ebx],dl
  4107b3:	inc    esi
  4107b4:	(bad)  
  4107b5:	cmp    DWORD PTR [ecx-0x46f0b00a],esi
  4107bb:	cmp    ebp,esi
  4107bd:	push   eax
  4107be:	jae    0x41076b
  4107c0:	cmp    bh,dh
  4107c2:	xor    ecx,0xffffff89
  4107c5:	(bad)  
  4107c6:	xor    al,0x83
  4107c8:	inc    ebx
  4107c9:	call   0xbc2759f5
  4107ce:	pop    esp
  4107cf:	icebp  
  4107d0:	std    
  4107d1:	or     DWORD PTR [eax-0x6b8a0102],0xffffffad
  4107d8:	out    dx,al
  4107d9:	call   0x3ea868
  4107de:	jae    0x41084b
  4107e0:	jmp    0x8bff:0xfda092e8
  4107e7:	rcr    BYTE PTR [ecx],1
  4107e9:	test   BYTE PTR [ebx-0x638ade38],0x9c
  4107f0:	in     al,dx
  4107f1:	add    DWORD PTR [ecx+eax*1-0x7bfe3975],eax
  4107f8:	mov    esi,0x86f093fd
  4107fd:	sbb    DWORD PTR ds:0xe3fa736f,esi
  410803:	push   eax
  410804:	pop    ecx
  410805:	leave  
  410806:	inc    edi
  410807:	dec    edx
  410808:	mov    esp,ebp
  41080a:	mul    ebp
  41080c:	test   BYTE PTR [ecx-0x16ae0],0x44
  410813:	push   esp
  410814:	mov    ecx,ebx
  410816:	add    BYTE PTR [eax],al
  410818:	iret   
  410819:	push   esp
  41081a:	add    dl,BYTE PTR [esi-0x55]
  41081d:	jnp    0x4107ef
  41081f:	je     0x41088a
  410821:	lock jae 0x410834
  410824:	scas   eax,DWORD PTR es:[edi]
  410825:	inc    edx
  410826:	push   es
  410827:	dec    DWORD PTR [ecx-0x62fa95fe]
  41082d:	repz sbb edx,DWORD PTR [ecx+edx*8+0x1b]
  410832:	add    al,BYTE PTR [ebp+ebx*8-0x529657d2]
  410839:	sahf   
  41083a:	scas   al,BYTE PTR es:[edi]
  41083b:	and    esi,DWORD PTR [ecx-0x6768e3ed]
  410841:	sbb    al,BYTE PTR [edx]
  410843:	jmp    FWORD PTR [esi+0x33]
  410846:	jg     0x4108bb
  410848:	mov    ecx,0xa172312f
  41084d:	ret    
  41084e:	(bad)  
  41084f:	enter  0xbbe2,0x7d
  410853:	(bad)  
  410854:	and    al,0x9f
  410856:	out    0x93,al
  410858:	popf   
  410859:	sbb    eax,DWORD PTR [edx]
  41085b:	call   0xfe72fd8b
  410860:	push   ss
  410861:	jmp    0x4107ea
  410863:	cmc    
  410864:	xor    DWORD PTR [edi],ebp
  410866:	fmul   DWORD PTR [edx+0x437f6ada]
  41086c:	cmp    DWORD PTR [ebx],0xe1c7e7d2
  410872:	xor    esi,edi
  410874:	repz adc eax,edx
  410877:	lods   eax,DWORD PTR ds:[esi]
  410878:	xchg   edx,eax
  410879:	sub    eax,0x437e
  41087e:	rcl    DWORD PTR [ecx-0x2e],0xfe
  410882:	or     BYTE PTR [edx+0x31],cl
  410885:	je     0x410830
  410887:	and    al,0xb6
  410889:	pop    es
  41088a:	jb     0x410855
  41088c:	sti    
  41088d:	out    0x8b,eax
  41088f:	jmp    0xd6510897
  410894:	out    0x17,eax
  410896:	daa    
  410897:	bound  ebx,QWORD PTR [ebx]
  410899:	mov    ah,BYTE PTR [ebp+ebp*2+0x30]
  41089d:	mov    DWORD PTR [esi+0x15],ebx
  4108a0:	rcr    BYTE PTR [edx+0x16],cl
  4108a3:	inc    edi
  4108a4:	into   
  4108a5:	shr    DWORD PTR [ecx+0x27d6e902],0x1f
  4108ac:	imul   esp,DWORD PTR [eax],0x7d3dd486
  4108b2:	xor    bl,BYTE PTR [ecx+0x26617eec]
  4108b8:	sbb    dl,bl
  4108ba:	test   BYTE PTR [ebx],ch
  4108bc:	mov    ecx,0x5160b30
  4108c1:	push   ss
  4108c2:	pop    ebp
  4108c3:	add    ah,BYTE PTR [esp+eax*2+0x6e]
  4108c7:	loop   0x410930
  4108c9:	scas   eax,DWORD PTR es:[edi]
  4108ca:	out    dx,al
  4108cb:	add    bh,cl
  4108cd:	add    ebx,DWORD PTR [ebp+0x5938fdb5]
  4108d3:	sub    ah,bh
  4108d5:	add    bl,BYTE PTR [ebp-0x79fe43fe]
  4108db:	mov    ch,0x44
  4108dd:	jge    0x410940
  4108df:	xor    dh,cl
  4108e1:	dec    ecx
  4108e2:	add    BYTE PTR [eax],al
  4108e4:	dec    eax
  4108e5:	push   es
  4108e6:	add    cl,BYTE PTR [edx+0x27]
  4108e9:	sub    esi,DWORD PTR [ecx+0x49]
  4108ec:	push   ebx
  4108ed:	int3   
  4108ee:	das    
  4108ef:	inc    ebp
  4108f0:	push   ecx
  4108f1:	ja     0x4108f7
  4108f3:	test   DWORD PTR [esi-0x6f0b4922],esi
  4108f9:	ja     0x410924
  4108fb:	jnp    0x410906
  4108fd:	sub    edx,DWORD PTR [eax]
  4108ff:	pop    esp
  410900:	mov    ebp,DWORD PTR [ebx]
  410902:	cmc    
  410903:	test   BYTE PTR [edx+0x7085de0c],cl
  410909:	add    ch,cl
  41090b:	add    esp,DWORD PTR [eax]
  41090d:	(bad)
  410910:	hlt    
  410911:	ret    0x1242
  410914:	into   
  410915:	cwde   
  410916:	int    0x30
  410918:	mov    cl,0xa6
  41091a:	fcmovb st,st(3)
  41091c:	push   edx
  41091d:	xchg   BYTE PTR [eax-0xb2df00],ch
  410923:	call   0xaab0bc6
  410928:	mov    edx,0x913d3c6
  41092d:	mov    ebx,0x1532f4fe
  410932:	inc    eax
  410933:	jmp    0x374c4851
  410938:	cmp    ecx,DWORD PTR ds:0xbb752c8d
  41093e:	push   edx
  41093f:	adc    ecx,esp
  410941:	sub    al,0x14
  410943:	add    DWORD PTR [ebx+0x63ffc2],ebp
  410949:	add    BYTE PTR [esi-0x4],bl
  41094c:	or     DWORD PTR [ebx-0x49fffd62],0x6b
  410953:	scas   al,BYTE PTR es:[edi]
  410954:	sar    DWORD PTR [edi+0x424f4461],cl
  41095a:	into   
  41095b:	(bad)  
  41095c:	out    dx,eax
  41095d:	push   0xffffff8c
  41095f:	or     eax,0x2b4a660f
  410964:	(bad)  
  410965:	jmp    0x30c105aa
  41096a:	xchg   edi,eax
  41096b:	scas   eax,DWORD PTR es:[edi]
  41096c:	add    al,0x69
  41096e:	xchg   DWORD PTR [ebx],esp
  410970:	je     0x41095e
  410972:	and    DWORD PTR [ebx],esi
  410974:	add    al,0x9c
  410976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410977:	ja     0x41093b
  410979:	ret    0xfe63
  41097c:	add    BYTE PTR [esi+0x69ff9c9f],ch
  410982:	int3   
  410983:	(bad)  
  410984:	jb     0x41095e
  410986:	add    ebp,DWORD PTR [esi+0x22551534]
  41098c:	xchg   esp,eax
  41098d:	inc    edi
  41098e:	lahf   
  41098f:	add    al,BYTE PTR [ebx-0x3a51451f]
  410995:	ret    0x7d56
  410998:	ret    0x6402
  41099b:	dec    BYTE PTR [eax+eax*1-0x177d0426]
  4109a2:	inc    ecx
  4109a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a4:	inc    edx
  4109a5:	xor    eax,0x458b5221
  4109aa:	adc    BYTE PTR [edi-0x3],cl
  4109ad:	jne    0x4109af
  4109af:	add    BYTE PTR [eax],ch
  4109b1:	rol    BYTE PTR [edx+0x35],0xf0
  4109b5:	pop    es
  4109b6:	mov    dh,BYTE PTR ds:0x4014a0
  4109bc:	sahf   
  4109bd:	fscale 
  4109bf:	(bad)  
  4109c0:	cmp    DWORD PTR [esi+0x3b8f3172],0x86372b06
  4109ca:	out    0x5,al
  4109cc:	xchg   DWORD PTR [ebx+0xe],esi
  4109cf:	add    dl,al
  4109d1:	cmp    edx,edx
  4109d3:	jmp    0x75144545
  4109d8:	cld    
  4109d9:	lods   al,BYTE PTR ds:[esi]
  4109da:	push   ebx
  4109db:	or     al,0x3f
  4109dd:	in     eax,dx
  4109de:	std    
  4109df:	push   ebp
  4109e0:	hlt    
  4109e1:	mov    edi,esi
  4109e3:	imul   eax,ecx,0x24d44382
  4109e9:	push   ebp
  4109ea:	push   0x83d08bff
  4109ef:	rcl    BYTE PTR [eax],0x5
  4109f2:	mov    DWORD PTR [ebp+0x7c],edi
  4109f5:	cmp    DWORD PTR [ebx-0x2b177bb],ecx
  4109fb:	jne    0x4109a5
  4109fd:	mov    WORD PTR [ebx+edx*2],ds
  410a00:	cs fdivr st,st(5)
  410a03:	adc    eax,0x401320
  410a08:	(bad)  
  410a09:	cmp    esi,esi
  410a0b:	pop    esi
  410a0c:	mov    ebp,0x97000ac4
  410a11:	mov    esi,0x8c0
  410a16:	je     0x410a62
  410a18:	mov    esp,ebp
  410a1a:	popf   
  410a1b:	call   0x5602:0x1b9fa31e
  410a22:	sbb    BYTE PTR [esi+esi*4+0x43],ah
  410a26:	ret    
  410a27:	pushf  
  410a28:	jmp    0x7f72d92c
  410a2d:	mov    ah,0xbd
  410a2f:	push   esi
  410a30:	sub    eax,0x19345fe
  410a35:	add    DWORD PTR [ebp-0x620c5864],ebx
  410a3b:	pushf  
  410a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a3d:	sti    
  410a3e:	popf   
  410a3f:	in     al,dx
  410a40:	add    BYTE PTR [ecx+ecx*1+0xb],0x1c
  410a45:	xor    dl,BYTE PTR [ebp-0x227bfde6]
  410a4b:	es pop ss
  410a4d:	push   DWORD PTR [eax-0x69]
  410a50:	jns    0x410a17
  410a52:	repnz inc ebp
  410a54:	imul   ebx,DWORD PTR ss:[ebp-0x62346595],0x5e8021b
  410a5f:	inc    edi
  410a60:	add    eax,DWORD PTR [eax]
  410a62:	shl    BYTE PTR [ebp+0x36],cl
  410a65:	out    0x46,eax
  410a67:	ja     0x410a96
  410a69:	(bad)  
  410a6a:	outs   dx,BYTE PTR ds:[esi]
  410a6b:	ret    
  410a6c:	mov    bh,0xab
  410a6e:	mov    edx,0xdec8ccd7
  410a73:	gs jns 0x410a61
  410a76:	push   ds
  410a77:	jmp    FWORD PTR [edx]
  410a79:	add    BYTE PTR [eax],0x0
  410a7c:	mov    cl,0xae
  410a7e:	pop    es
  410a7f:	add    BYTE PTR [ebp+0x2056d46c],bl
  410a85:	push   esi
  410a86:	out    0x13,al
  410a88:	into   
  410a89:	das    
  410a8a:	ror    DWORD PTR [eax-0x17f5c9f7],1
  410a90:	jmp    0xa903:0x1900028c
  410a97:	std    
  410a98:	push   ds
  410a99:	(bad)  
  410a9a:	call   0xab5ba7a2
  410a9f:	(bad)  
  410aa0:	pop    edx
  410aa1:	sub    BYTE PTR [ecx+0x4c],ah
  410aa4:	and    eax,0x140c0cc7
  410aa9:	mov    DWORD PTR [esp+edx*1],0xb6d8444b
  410ab0:	xchg   esp,eax
  410ab1:	sbb    ah,BYTE PTR [ebx-0x33]
  410ab4:	popf   
  410ab5:	add    bh,BYTE PTR [edi]
  410ab7:	icebp  
  410ab8:	inc    edi
  410ab9:	shr    DWORD PTR [ecx],1
  410abb:	sbb    al,0xf8
  410abd:	enter  0x3e7,0x1e
  410ac1:	mov    bh,0xc4
  410ac3:	or     ebp,DWORD PTR [ebp-0x4d17db85]
  410ac9:	sbb    ebx,DWORD PTR [ecx]
  410acb:	fild   WORD PTR ss:[ecx]
  410ace:	cld    
  410acf:	adc    BYTE PTR ds:0x9d02f829,al
  410ad5:	jne    0x410abb
  410ad7:	out    0x8a,eax
  410ad9:	sbb    bh,BYTE PTR [edi+ebp*2+0x396927e3]
  410ae0:	add    BYTE PTR [eax],al
  410ae2:	popf   
  410ae3:	sbb    edx,DWORD PTR [ecx]
  410ae5:	fild   WORD PTR ss:[edi*4-0x17db3d07]
  410aed:	add    ebx,DWORD PTR [ebp-0x38d0b67d]
  410af3:	(bad)  
  410af4:	ss inc ecx
  410af6:	sahf   
  410af7:	scas   al,BYTE PTR es:[edi]
  410af8:	repnz sbb edx,DWORD PTR [ecx+eax*1-0x17]
  410afd:	add    ebx,DWORD PTR [esi]
  410aff:	and    al,0x11
  410b01:	sbb    DWORD PTR [ecx+0x9c42930],edi
  410b07:	bnd jae 0x410ac2
  410b0a:	mov    esi,0xf7c110a
  410b0f:	add    al,BYTE PTR [eax]
  410b11:	jmp    0xe950d9ac
  410b16:	sahf   
  410b17:	jnp    0x410ae6
  410b19:	push   0xffffffa5
  410b1b:	out    0xe7,eax
  410b1d:	xchg   ebx,eax
  410b1e:	sub    eax,0x6d120002
  410b23:	jecxz  0x410b34
  410b25:	push   ebp
  410b26:	lods   al,BYTE PTR ds:[esi]
  410b27:	jne    0x410b6c
  410b29:	or     eax,0xe869d2b1
  410b2e:	and    al,0x3
  410b30:	pop    eax
  410b31:	pusha  
  410b32:	push   0xffffffe3
  410b34:	pop    ss
  410b35:	ror    esi,0xd4
  410b38:	(bad)  
  410b39:	call   0xf564bee9
  410b3e:	xchg   BYTE PTR [ebx-0x386116af],dl
  410b44:	pop    ebp
  410b45:	fiadd  DWORD PTR [eax]
  410b47:	add    BYTE PTR [esi-0x34],bl
  410b4a:	mov    cl,BYTE PTR [ebx+ebx*8+0x1ee90340]
  410b51:	out    0x8f,al
  410b53:	cmp    ebp,ebx
  410b55:	es push esi
  410b58:	add    eax,0xb81a56cd
  410b5d:	rcl    BYTE PTR [esi-0x4a],1
  410b60:	push   es
  410b61:	das    
  410b62:	icebp  
  410b63:	test   eax,0x4e56cf9e
  410b68:	stos   DWORD PTR es:[edi],eax
  410b69:	rcl    BYTE PTR [ecx],cl
  410b6b:	test   eax,0x2ef7b9e
  410b70:	mov    BYTE PTR [ebx+0x1436c11e],dh
  410b76:	add    cl,ch
  410b78:	enter  0x1427,0xf9
  410b7c:	(bad)  
  410b7d:	ret    0x63ff
  410b80:	pop    esi
  410b81:	mov    bl,0x7
  410b83:	mov    esi,0xb5142570
  410b88:	lods   al,BYTE PTR ds:[esi]
  410b89:	ret    0xffff
  410b8c:	sub    dl,bh
  410b8e:	adc    esp,DWORD PTR [eax+0x5efe4266]
  410b94:	adc    al,bl
  410b96:	push   ebx
  410b97:	mov    esi,DWORD PTR [eax-0x5a]
  410b9a:	jmp    0xc98d:0x4f84aa30
  410ba1:	into   
  410ba2:	push   esi
  410ba3:	call   0x42086c
  410ba8:	arpl   WORD PTR [esi+eax*1+0x6a],si
  410bac:	add    BYTE PTR [eax],al
  410bae:	xor    al,0xa
  410bb0:	mov    DWORD PTR [edx-0x7ba1fdcb],esp
  410bb6:	add    al,0x73
  410bb8:	push   ss
  410bb9:	lea    edi,[ecx-0x32]
  410bbc:	dec    esi
  410bbd:	dec    DWORD PTR [ecx+0x2c75fd26]
  410bc3:	or     bl,BYTE PTR [ecx-0x7afdfa5d]
  410bc9:	shr    BYTE PTR [eax-0x4b3fccfd],0x5
  410bd0:	add    DWORD PTR [ebx],esi
  410bd2:	xor    al,0xe8
  410bd4:	rol    BYTE PTR [esp+eax*1],0x53
  410bd8:	mov    esp,ebp
  410bda:	xchg   edx,esp
  410bdc:	test   BYTE PTR [ecx+0x5250],0xf4
  410be3:	push   ebx
  410be4:	push   0x22724153
  410be9:	sub    BYTE PTR [edx+ecx*1],cl
  410bec:	cmp    DWORD PTR [edx],eax
  410bee:	mov    ch,0x1
  410bf0:	mov    eax,esi
  410bf2:	out    dx,al
  410bf3:	dec    edi
  410bf4:	xchg   DWORD PTR [eax+ebp*4+0x2a],eax
  410bf8:	mov    esi,DWORD PTR [eax+ebx*4+0x32]
  410bfc:	push   esi
  410bfd:	call   0x420bce
  410c02:	xor    DWORD PTR [edx+0x22],eax
  410c05:	push   eax
  410c06:	popf   
  410c07:	imul   ebx,DWORD PTR [edx],0xffffff8b
  410c0a:	xchg   edx,eax
  410c0b:	hlt    
  410c0c:	sub    al,BYTE PTR [ebx-0x7d1458a3]
  410c12:	add    BYTE PTR [eax],al
  410c14:	stc    
  410c15:	aas    
  410c16:	idiv   bh
  410c18:	sub    DWORD PTR [edi-0x22],edx
  410c1b:	dec    edi
  410c1c:	and    al,0x5f
  410c1e:	fimul  WORD PTR [edi]
  410c20:	sbb    bh,dl
  410c22:	fild   WORD PTR [edi]
  410c24:	adc    al,0xdf
  410c26:	fist   WORD PTR [edi]
  410c28:	es push ebp
  410c2a:	ror    BYTE PTR [ecx+ebx*8-0x1e38ec01],cl
  410c31:	test   DWORD PTR [ebx],0x21b9d05
  410c37:	(bad)  
  410c38:	loope  0x410c31
  410c3a:	jecxz  0x410c3c
  410c3c:	popf   
  410c3d:	sbb    eax,DWORD PTR [edx]
  410c3f:	(bad)  
  410c40:	loope  0x410c79
  410c42:	fiadd  WORD PTR [ecx]
  410c44:	popf   
  410c45:	sbb    eax,DWORD PTR [edx]
  410c47:	call   0x442ae3
  410c4c:	jae    0x410bee
  410c4e:	pop    ds
  410c4f:	pop    esp
  410c50:	fiadd  WORD PTR ds:0x771ceb7f
  410c56:	cli    
  410c57:	add    DWORD PTR [ebp-0xa7b88e5],ebx
  410c5d:	xchg   ebp,eax
  410c5e:	sub    esi,edi
  410c60:	dec    ebp
  410c61:	shr    edi,cl
  410c63:	(bad)  
  410c64:	loop   0x410c29
  410c66:	jle    0x410c27
  410c68:	push   ecx
  410c69:	and    BYTE PTR [edi-0x74],dh
  410c6c:	aad    0xb5
  410c6e:	sub    esi,edi
  410c70:	mov    ch,0xd6
  410c72:	pop    esp
  410c73:	add    BYTE PTR [ebp+0x5445f2],bl
  410c79:	add    BYTE PTR [esi],ah
  410c7b:	mov    edi,0x8891eb85
  410c80:	ror    BYTE PTR [edx+0x7ef10230],1
  410c86:	cwde   
  410c87:	int    0x6f
  410c89:	mov    eax,0xfba3768e
  410c8e:	in     eax,dx
  410c8f:	and    edx,DWORD PTR [ebx-0x6db6e809]
  410c95:	sub    dh,ah
  410c97:	add    dl,BYTE PTR [ebx-0x6c862cfc]
  410c9d:	xor    esi,DWORD PTR [ebx-0x2d]
  410ca0:	cwde   
  410ca1:	sub    BYTE PTR [edx],0xf4
  410ca4:	imul   eax,DWORD PTR [edi+0x62],0x24
  410ca8:	call   0x23b6ad29
  410cad:	sub    al,0xed
  410caf:	ja     0x410ccc
  410cb1:	clc    
  410cb2:	ret    0x3b92
  410cb5:	les    eax,FWORD PTR [edx+0x25]
  410cb8:	aaa    
  410cb9:	cld    
  410cba:	shl    BYTE PTR [ebx],1
  410cbc:	sbb    ah,bl
  410cbe:	sbb    DWORD PTR [ebx-0x23],eax
  410cc1:	jle    0x410cd5
  410cc3:	add    ebp,ecx
  410cc5:	add    edx,DWORD PTR [esi]
  410cc7:	mov    esi,0x75a27da0
  410ccc:	cmp    ebx,DWORD PTR [esp+ebp*2]
  410ccf:	cwde   
  410cd0:	enter  0xa69d,0xd2
  410cd4:	test   DWORD PTR [ebx+0x3e902d6],edx
  410cda:	and    BYTE PTR [ebx-0x5],al
  410cdd:	mov    al,0x0
  410cdf:	add    BYTE PTR [ebp+0x61eb6cbd],bh
  410ce5:	sbb    bl,dh
  410ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce8:	scas   eax,DWORD PTR es:[edi]
  410ce9:	inc    edi
  410cea:	jno    0x410cab
  410cec:	(bad)  
  410ced:	ja     0x410cc3
  410cef:	add    al,0xb1
  410cf1:	jge    0x410d40
  410cf3:	mov    al,0x5e
  410cf5:	jo     0x410c9f
  410cf7:	jl     0x410cd4
  410cf9:	sbb    al,BYTE PTR [ebp-0xdc44e9]
  410cff:	imul   ebx,DWORD PTR [ecx-0x51],0x36
  410d03:	xchg   esi,eax
  410d04:	or     BYTE PTR [ecx+eax*4],ah
  410d07:	xor    DWORD PTR [ebx+ebx*1+0x6c],esi
  410d0b:	add    eax,0x118a24c4
  410d10:	adc    ah,BYTE PTR ds:0xb709c973
  410d16:	adc    ebx,DWORD PTR [esi+0x11fe3b19]
  410d1c:	inc    esp
  410d1d:	sbb    eax,0x63f2f6fe
  410d22:	jae    0x410cfd
  410d24:	jmp    0xd95b20df
  410d29:	fwait
  410d2a:	mov    edi,0x3e236154
  410d2f:	shl    DWORD PTR [ecx],0x1d
  410d32:	dec    dh
  410d34:	ins    DWORD PTR es:[edi],dx
  410d35:	sbb    edi,DWORD PTR [esi-0x1db8a70]
  410d3b:	and    al,0x85
  410d3d:	js     0x410d83
  410d3f:	mov    ch,0x19
  410d41:	inc    eax
  410d42:	aas    
  410d43:	repnz add BYTE PTR [eax],al
  410d46:	jmp    0x410d62
  410d48:	jno    0x410d94
  410d4a:	mov    eax,ds:0x5b72efc6
  410d4f:	das    
  410d50:	mov    ah,cl
  410d52:	mov    ecx,esi
  410d54:	out    0x3b,eax
  410d56:	icebp  
  410d57:	and    edx,DWORD PTR [eax-0x2f]
  410d5a:	cmp    DWORD PTR [esi-0x4d098d09],0x23f118fe
  410d64:	je     0x410d43
  410d66:	imul   edi,ebp,0xece6655
  410d6c:	call   esp
  410d6e:	shl    BYTE PTR [edi+0x5],cl
  410d71:	ret    
  410d72:	lahf   
  410d73:	and    esi,DWORD PTR [ecx+eiz*8-0x14]
  410d77:	and    ecx,DWORD PTR [edi+0x0]
  410d7a:	and    BYTE PTR [esi+edi*4-0x2b4bff1],ah
  410d81:	jmp    FWORD PTR [ebx-0x26]
  410d84:	jae    0x410d8e
  410d86:	aas    
  410d87:	add    DWORD PTR [esi-0x1],edx
  410d8a:	in     al,0x36
  410d8c:	mov    DWORD PTR [ebp-0x6c],edi
  410d8f:	lahf   
  410d90:	add    al,0x57
  410d92:	push   ds
  410d93:	push   es
  410d94:	push   esi
  410d95:	inc    DWORD PTR [edx+ebx*1-0x7d]
  410d99:	rol    BYTE PTR [ecx],0x4c
  410d9c:	aaa    
  410d9d:	inc    edi
  410d9e:	ins    BYTE PTR es:[edi],dx
  410d9f:	ins    BYTE PTR es:[edi],dx
  410da0:	push   edi
  410da1:	mov    eax,DWORD PTR [edi+0x5084b99]
  410da7:	xor    edi,ebp
  410da9:	ja     0x410dab
  410dab:	add    BYTE PTR [eax+0x35],dh
  410dae:	std    
  410daf:	push   eax
  410db0:	test   BYTE PTR [ebx-0x627c8a42],al
  410db6:	add    DWORD PTR [ebp+0x6a50f6a9],ecx
  410dbc:	xor    al,0xe9
  410dbe:	jne    0x410dc4
  410dc0:	xchg   edi,eax
  410dc1:	jmp    0xc7022614
  410dc6:	jae    0x410de5
  410dc8:	sti    
  410dc9:	push   ebx
  410dca:	adc    cl,BYTE PTR [ebx-0xaa2d97]
  410dd0:	mov    cl,0x1a
  410dd2:	mov    ebx,edx
  410dd4:	sub    edx,DWORD PTR [esi+ecx*1-0x18]
  410dd8:	(bad)  
  410dd9:	call   0x43d10ddb
  410dde:	push   cs
  410ddf:	mov    ebp,esp
  410de1:	xor    eax,0x9cfc51fd
  410de6:	add    DWORD PTR [edi+0x7b],edx
  410de9:	push   ebx
  410dea:	push   es
  410deb:	push   ebx
  410dec:	jnp    0x410e24
  410dee:	inc    edx
  410def:	test   DWORD PTR [edx+edx*2+0x3e9dffc0],eax
  410df6:	cli    
  410df7:	mov    bl,BYTE PTR [esi+0x554f255c]
  410dfd:	push   0xede45ac4
  410e02:	adc    eax,DWORD PTR [eax]
  410e04:	dec    eax
  410e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e06:	pop    ss
  410e07:	cmp    BYTE PTR [ecx-0x62fffca1],0x5c
  410e0e:	int3   
  410e0f:	push   esi
  410e10:	add    BYTE PTR [eax],al
  410e12:	add    eax,0x9d3fb0bc
  410e17:	and    DWORD PTR [edx+0x74],0xffffffdd
  410e1b:	sub    ebx,DWORD PTR [edx]
  410e1d:	cli    
  410e1e:	or     eax,0x6d8b022b
  410e23:	pop    esp
  410e24:	dec    ecx
  410e25:	cmp    ch,BYTE PTR [esi+0x28]
  410e28:	jle    0x410db8
  410e2a:	popf   
  410e2b:	sub    eax,DWORD PTR [edx]
  410e2d:	push   ebx
  410e2e:	into   
  410e2f:	xchg   edx,eax
  410e30:	(bad)  
  410e31:	sti    
  410e32:	es sub esp,ecx
  410e35:	(bad)  
  410e36:	in     eax,dx
  410e37:	daa    
  410e38:	jg     0x410df9
  410e3a:	ror    dl,1
  410e3c:	jp     0x410e43
  410e3e:	adc    dh,dl
  410e40:	sub    edx,DWORD PTR [eax-0x32]
  410e43:	mov    ch,0x1
  410e45:	push   esi
  410e46:	xor    bh,bl
  410e48:	jne    0x6814e4ab
  410e4e:	sbb    eax,0x82ffc3fe
  410e53:	sti    
  410e54:	mov    al,0x3f
  410e56:	popf   
  410e57:	add    DWORD PTR [edx+0x6f],0xffffff9c
  410e5b:	sub    edi,DWORD PTR [ecx-0x9]
  410e5e:	mov    BYTE PTR [esi+ebp*4+0x27e62831],0x4f
  410e66:	and    BYTE PTR [esi-0x50150276],ch
  410e6c:	ror    BYTE PTR [eax+ebx*2-0x242c66fe],cl
  410e73:	xchg   esi,eax
  410e74:	pusha  
  410e75:	jp     0x410e77
  410e77:	add    al,ch
  410e79:	mov    WORD PTR ds:0xa452613e,fs
  410e7f:	add    ebx,DWORD PTR [ebp+0x12802e02]
  410e85:	and    BYTE PTR ds:0xe9038a26,bh
  410e8b:	add    esi,DWORD PTR [ebp-0x5cd9d4e8]
  410e91:	mov    ebp,gs
  410e93:	into   
  410e94:	fwait
  410e95:	mov    bl,0xf0
  410e97:	jp     0x410e72
  410e99:	sbb    ah,BYTE PTR [ecx-0x5]
  410e9c:	ficomp DWORD PTR [edi]
  410e9e:	mov    bh,0xfb
  410ea0:	pop    ss
  410ea1:	or     DWORD PTR [edi+0x110aea26],ebx
  410ea7:	pop    edi
  410ea8:	sbb    eax,0xc97ae902
  410ead:	push   ds
  410eae:	lods   al,BYTE PTR ds:[esi]
  410eaf:	inc    DWORD PTR [edi+0x1f4cdd42]
  410eb5:	inc    ebx
  410eb6:	inc    ecx
  410eb7:	cmc    
  410eb8:	or     eax,DWORD PTR [ebx-0x40]
  410ebb:	lods   al,BYTE PTR ds:[esi]
  410ebc:	inc    edi
  410ebd:	and    ch,cl
  410ebf:	(bad)
  410ec2:	scas   eax,DWORD PTR es:[edi]
  410ec3:	inc    ecx
  410ec4:	ror    DWORD PTR [ebx-0x60b97c34],1
  410eca:	jmp    0x16f4abd2
  410ecf:	int    0xe7
  410ed1:	add    ch,al
  410ed3:	add    ebx,DWORD PTR [ebp+0x1e776bb3]
  410ed9:	push   ds
  410eda:	xchg   ebp,eax
  410edb:	and    eax,0x1f6d0000
  410ee0:	adc    edi,eax
  410ee2:	pop    ss
  410ee3:	adc    esi,DWORD PTR [ecx-0x2]
  410ee6:	push   eax
  410ee7:	pop    ds
  410ee8:	sbb    BYTE PTR [eax],dl
  410eea:	sbb    BYTE PTR [ebx-0x1],al
  410eed:	cld    
  410eee:	call   0x9f1e7377
  410ef3:	sub    edx,DWORD PTR [ebx]
  410ef5:	je     0x410f51
  410ef7:	cmp    esp,0x5e
  410efa:	js     0x410ecb
  410efc:	imul   ebp,ecx,0x41fe481d
  410f02:	sbb    al,0x22
  410f04:	inc    BYTE PTR [esi+0x36]
  410f07:	(bad)  
  410f08:	or     esi,DWORD PTR [edx-0x4d]
  410f0b:	mov    ah,0x8c
  410f0d:	fs sbb eax,0xce2efe1e
  410f13:	and    BYTE PTR [ecx+eax*1+0x6b],dh
  410f17:	and    BYTE PTR [edi-0xb],cl
  410f1a:	lea    esp,[eax]
  410f1c:	test   BYTE PTR [ecx],ch
  410f1e:	dec    ebp
  410f1f:	push   es
  410f20:	mov    DWORD PTR [esi+edx*4-0x58bedd5],ecx
  410f27:	cmp    ebp,0xfffffffe
  410f2a:	mov    ecx,0xa96a56cf
  410f2f:	and    bh,ah
  410f31:	xchg   ebp,eax
  410f32:	mov    esp,0x1b70fe20
  410f37:	test   DWORD PTR [edx-0x73719219],0xfe20826d
  410f41:	cmp    BYTE PTR [eax],al
  410f43:	add    BYTE PTR [eax-0x6a],bh
  410f46:	sbb    ebx,DWORD PTR [edi]
  410f48:	or     bh,0x13
  410f4b:	ficom  WORD PTR fs:[esi-0x7c549bef]
  410f52:	sti    
  410f53:	scas   al,BYTE PTR es:[edi]
  410f54:	jns    0x410f25
  410f56:	push   esi
  410f57:	push   0xffffffd6
  410f59:	and    bh,ah
  410f5b:	int    0xbc
  410f5d:	and    dh,bh
  410f5f:	bound  esi,QWORD PTR [esi+0x4b5c058c]
  410f65:	sbb    edx,DWORD PTR [eax+0x0]
  410f68:	and    esi,DWORD PTR [eax+0xe]
  410f6b:	push   esi
  410f6c:	jae    0x410fa1
  410f6e:	push   cs
  410f6f:	test   DWORD PTR [edi+ebp*2],esi
  410f72:	add    al,BYTE PTR [ebx-0x75011567]
  410f78:	retf   0x4b97
  410f7b:	clc    
  410f7c:	adc    eax,0xa1473e6
  410f81:	out    0x4e,al
  410f83:	adc    BYTE PTR [ecx],bh
  410f85:	ret    
  410f86:	jb     0x410f8c
  410f88:	inc    edi
  410f89:	xor    dh,0x0
  410f8c:	into   
  410f8d:	js     0x410f1a
  410f8f:	jne    0x410fc9
  410f91:	dec    ebx
  410f92:	out    0xad,al
  410f94:	jb     0x410f99
  410f96:	add    BYTE PTR [edx+0x37],ch
  410f99:	xchg   ebp,eax
  410f9a:	jae    0x410f84
  410f9c:	pop    esp
  410f9d:	cli    
  410f9e:	mov    al,ds:0x8b0274fe
  410fa3:	push   ebp
  410fa4:	mov    WORD PTR [edx+0x7546],gs
  410faa:	inc    esp
  410fab:	add    al,BYTE PTR [ebp+0xdd1efff]
  410fb1:	inc    ebp
  410fb2:	imul   esp,DWORD PTR [eax-0x4dc7f030],0xffffff81
  410fb9:	jge    0x410ff7
  410fbb:	pop    es
  410fbc:	mov    ecx,eax
  410fbe:	call   0x5c8e9cc8
  410fc3:	xchg   BYTE PTR [ebx+0xc],bh
  410fc6:	xor    al,0x5c
  410fc8:	or     eax,0x8af28945
  410fcd:	jne    0x410f73
  410fcf:	push   esp
  410fd0:	dec    edi
  410fd1:	jmp    FWORD PTR [ecx-0x1e]
  410fd4:	dec    esi
  410fd5:	jmp    FWORD PTR [ecx+0xe]
  410fd8:	lea    eax,[ebp-0x78]
  410fdb:	push   esi
  410fdc:	std    
  410fdd:	xor    ebx,DWORD PTR ss:[esi+edi*2]
  410fe1:	adc    bl,BYTE PTR [ebp-0x1a74fc15]
  410fe7:	mov    al,ds:0x7137e749
  410fec:	and    bh,dh
  410fee:	push   ds
  410fef:	push   0x2770feff
  410ff4:	sub    dl,BYTE PTR [ebx]
  410ff6:	cmp    ch,BYTE PTR [ebp+0x350fe22]
  410ffc:	sub    al,0xb
  410ffe:	cli    
  410fff:	mov    esp,0x2db55622
  411004:	imul   edi,esi,0x5ac06cc2
  41100a:	in     al,0xe9
  41100c:	(bad)  
  41100d:	inc    DWORD PTR [eax]
  41100f:	add    BYTE PTR [eax-0x70],cl
  411012:	das    
  411013:	cmp    BYTE PTR [ecx-0x62fffa51],0x78
  41101a:	mov    eax,0x978c0556
  41101f:	aas    
  411020:	popf   
  411021:	jae    0x410fd5
  411023:	je     0x411002
  411025:	sub    ebp,DWORD PTR [edx]
  411027:	(bad)  
  411028:	repz sub al,BYTE PTR [edx]
  41102b:	mov    ebp,DWORD PTR [ebp+0x58]
  41102e:	cmp    eax,0xdef3e888
  411033:	repnz call 0x8d2b:0x9d0022af
  41103b:	add    eax,0x55b52ac7
  411040:	and    al,0xde
  411042:	sbb    edi,esi
  411044:	in     eax,dx
  411045:	jmp    0x410fcf
  411047:	mov    edi,0x3ca692
  41104c:	popf   
  41104d:	sub    ecx,DWORD PTR [ebp+0x2fee2005]
  411053:	push   eax
  411054:	mov    bh,0x25
  411056:	mov    eax,0x8737cdfe
  41105b:	mov    edi,0x496c02aa
  411060:	popf   
  411061:	add    ch,cl
  411063:	sub    al,0x3f
  411065:	add    ebp,ecx
  411067:	add    edx,DWORD PTR [esi]
  411069:	(bad)  
  41106a:	mov    WORD PTR [esi+0x181b8fa2],cs
  411070:	dec    esp
  411071:	mov    dl,0x7d
  411073:	mov    ah,0x0
  411075:	add    BYTE PTR [edx+0x1812a887],dh
  41107b:	xchg   edi,esp
  41107d:	add    ebx,DWORD PTR [ebp-0x5ce83c25]
  411083:	xchg   ah,bl
  411085:	add    al,0x9d
  411087:	add    ah,BYTE PTR [edx-0x38]
  41108a:	(bad)  
  41108b:	mov    al,ah
  41108d:	popa   
  41108e:	mov    edx,0x4b03e901
  411093:	(bad)  
  411094:	push   ebx
  411095:	sub    DWORD PTR [eax+0x3ab5351c],0x12
  41109c:	jmp    0x25f3bd79
  4110a1:	mov    ah,0xae
  4110a3:	test   DWORD PTR [eax],ebp
  4110a5:	xchg   edi,eax
  4110a6:	mov    eax,ds:0x7713b389
  4110ab:	lock pop ebx
  4110ad:	mov    dl,bh
  4110af:	sbb    al,0x5
  4110b1:	and    ah,dl
  4110b3:	scas   eax,DWORD PTR es:[edi]
  4110b4:	imul   ecx,DWORD PTR [ebx+0x6b],0x6323102b
  4110bb:	sbb    al,0x5f
  4110bd:	enter  0x884a,0x2b
  4110c1:	and    BYTE PTR [edi],ah
  4110c3:	or     esi,DWORD PTR [edi]
  4110c5:	(bad)  
  4110c6:	xor    DWORD PTR [ebx-0x4ebcde2d],eax
  4110cc:	inc    eax
  4110cd:	adc    al,0x9f
  4110cf:	rcr    ah,1
  4110d1:	mov    bl,0x33
  4110d3:	mov    dl,0xd4
  4110d5:	xchg   dl,ch
  4110d7:	xchg   esi,eax
  4110d8:	(bad)  
  4110d9:	in     al,dx
  4110da:	add    BYTE PTR [eax],al
  4110dc:	dec    ecx
  4110dd:	sbb    eax,0x872bdbea
  4110e2:	jg     0x411088
  4110e4:	mov    esp,0x203a4f1c
  4110e9:	inc    esp
  4110ea:	inc    BYTE PTR [ecx-0x7101c48c]
  4110f0:	sub    BYTE PTR [ecx+ebp*2],dl
  4110f3:	adc    BYTE PTR [edx],ah
  4110f5:	xchg   edi,eax
  4110f6:	and    DWORD PTR [ecx],0xffffffb9
  4110f9:	mov    cl,0xfc
  4110fb:	jmp    0xf4886b9e
  411100:	ficomp WORD PTR [ebx]
  411102:	mov    DWORD PTR [ecx],edi
  411104:	lock sbb BYTE PTR [ebx-0x15],dh
  411108:	sbb    DWORD PTR ds:0x88aea48a,esi
  41110e:	je     0x411161
  411110:	fmul   DWORD PTR [eax+0xe]
  411113:	lods   eax,DWORD PTR ds:[esi]
  411114:	data16 fdiv st,st(2)
  411117:	mov    ch,0x98
  411119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111a:	cmp    bh,dl
  41111c:	or     al,BYTE PTR [edi]
  41111e:	mov    eax,0xffdb3229
  411123:	mov    edx,0xa48ccb4f
  411128:	and    cl,bl
  41112a:	push   ebp
  41112b:	push   ss
  41112c:	mov    bl,BYTE PTR [ebx-0x786156ef]
  411132:	xlat   BYTE PTR ds:[ebx]
  411133:	je     0x41118f
  411135:	adc    esp,edi
  411137:	je     0x4110f1
  411139:	sbb    al,0xfe
  41113b:	push   0xffffffd5
  41113d:	or     edi,edi
  41113f:	je     0x411141
  411141:	add    BYTE PTR [esi-0x1c2e1078],ch
  411147:	data16 (bad) 
  411149:	fiadd  WORD PTR ds:0x7d8cc623
  41114f:	sbb    al,0x82
  411151:	iret   
  411152:	jge    0x4110ea
  411154:	add    eax,DWORD PTR [eax]
  411156:	(bad)  
  411157:	fs repnz add dl,dh
  41115b:	inc    ebx
  41115c:	repnz add ah,BYTE PTR [eax+0x35]
  411160:	push   0xc2747972
  411165:	pop    eax
  411166:	sub    al,0xea
  411168:	cli    
  411169:	add    ah,dh
  41116b:	mov    eax,DWORD PTR [ebx-0x8]
  41116e:	les    ebp,FWORD PTR [esi-0xc]
  411171:	add    ebp,DWORD PTR [esi+0x15]
  411174:	lock popw es
  411177:	cwde   
  411178:	adc    BYTE PTR [eax+0x71],ch
  41117b:	push   es
  41117c:	sahf   
  41117d:	adc    bl,BYTE PTR [edi+eiz*8+0x66f69d01]
  411184:	out    dx,al
  411185:	add    ebx,DWORD PTR [edx*1-0x71fb3977]
  41118c:	inc    ebx
  41118d:	cld    
  41118e:	pop    esp
  41118f:	inc    esp
  411190:	sti    
  411191:	jmp    FWORD PTR [ebx-0x7]
  411194:	inc    ebx
  411195:	hlt    
  411196:	shl    BYTE PTR [edx+0x31],0x6a
  41119a:	in     eax,0x8b
  41119c:	jae    0x41116e
  41119e:	or     al,0xe7
  4111a0:	lods   al,BYTE PTR ds:[esi]
  4111a1:	cld    
  4111a2:	test   BYTE PTR [esi],al
  4111a4:	lea    eax,[ebp+0x0]
  4111a7:	add    BYTE PTR [ebp+edx*2-0x3388099a],bh
  4111ae:	adc    DWORD PTR [eax-0x5c],ebp
  4111b1:	inc    ah
  4111b3:	adc    ebx,DWORD PTR [ecx+esi*8]
  4111b6:	add    edx,ecx
  4111b8:	push   edi
  4111b9:	outs   dx,BYTE PTR ds:[esi]
  4111ba:	out    0x3,eax
  4111bc:	lods   eax,DWORD PTR ds:[esi]
  4111bd:	push   cs
  4111be:	data16 lock ja 0x411184
  4111c2:	adc    DWORD PTR [ebx+0x45895582],ecx
  4111c8:	cmp    bh,ah
  4111ca:	or     bh,ch
  4111cc:	imul   edi,edx,0xfffffff4
  4111cf:	inc    ebp
  4111d0:	popf   
  4111d1:	aaa    
  4111d2:	or     esi,DWORD PTR [esi+ebp*2-0x3b]
  4111d6:	xchg   ebx,eax
  4111d7:	mov    WORD PTR [eax-0x4f1844a1],gs
  4111dd:	push   edi
  4111de:	add    eax,DWORD PTR [eax]
  4111e0:	adc    bh,ah
  4111e2:	sbb    ecx,DWORD PTR [edi-0x7b]
  4111e5:	push   ecx
  4111e6:	add    ch,BYTE PTR [edx]
  4111e8:	test   eax,0xb40213f3
  4111ed:	rsm    
  4111ef:	hlt    
  4111f0:	sahf   
  4111f1:	inc    ecx
  4111f2:	mul    BYTE PTR [edi+0x4]
  4111f5:	sub    eax,0x9b8513ef
  4111fa:	add    ch,BYTE PTR [eax]
  4111fc:	xchg   ecx,eax
  4111fd:	xchg   esp,eax
  4111fe:	inc    ebp
  4111ff:	dec    edi
  411200:	push   ss
  411201:	out    0x1f,eax
  411203:	out    0xee,eax
  411205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411206:	push   ds
  411207:	(bad)  
  411208:	es aaa 
  41120a:	sub    dh,BYTE PTR [edx]
  41120c:	add    BYTE PTR [eax],al
  41120e:	out    0x94,al
  411210:	enter  0x16fb,0x24
  411214:	mov    dl,0xfe
  411216:	dec    esp
  411217:	and    ecx,DWORD PTR [ecx+0xb94c144]
  41121d:	lea    edx,[eax-0x29]
  411220:	mov    cl,0x4f
  411222:	mov    ds:0x5d84f67a,al
  411227:	cmp    BYTE PTR [esi+0x1ee09347],al
  41122d:	mov    ah,al
  41122f:	pop    es
  411230:	mov    eax,DWORD PTR [edi]
  411232:	in     eax,dx
  411233:	lock mov ah,0x7
  411236:	and    DWORD PTR es:[esi+edi*8+0x5c8913cd],esi
  41123e:	gs jne 0x411200
  411241:	push   edi
  411242:	jne    0x411266
  411244:	sbb    bh,dh
  411246:	pop    edx
  411247:	mov    BYTE PTR [edx+ebx*2-0x4755fd9c],bh
  41124e:	pop    ss
  41124f:	es addr16 das 
  411252:	push   ss
  411253:	add    ch,cl
  411255:	add    ecx,esi
  411257:	mov    al,0x35
  411259:	xchg   ecx,eax
  41125a:	test   eax,0x2716d03e
  41125f:	add    ch,cl
  411261:	push   ds
  411262:	test   eax,0x6a456206
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	add    BYTE PTR [ebx+0x1f1c5721],bh
  41126e:	or     ebx,DWORD PTR [ecx]
  411270:	nop
  411271:	test   DWORD PTR [eax],eax
  411273:	add    dl,bh
  411275:	sbb    BYTE PTR [ebp-0x5780aa44],dl
  41127b:	popf   
  41127c:	mov    ebp,0x160c2b8d
  411281:	or     ch,BYTE PTR [eax+edi*4-0x6a]
  411285:	mov    ah,0x61
  411287:	ss ins BYTE PTR es:[edi],dx
  411289:	mov    dl,0x6d
  41128b:	je     0x4112bb
  41128d:	add    ch,cl
  41128f:	add    esp,DWORD PTR [eax]
  411291:	inc    edx
  411292:	ror    DWORD PTR [ecx],cl
  411294:	push   ss
  411295:	(bad)  
  411296:	in     al,0x2b
  411298:	scas   al,BYTE PTR es:[edi]
  411299:	and    bh,0x3
  41129c:	mov    BYTE PTR [ebx],0xfa
  41129f:	inc    ebx
  4112a0:	dec    ebx
  4112a1:	mov    eax,0x9dc4ca1
  4112a6:	jmp    0x67683a63
  4112ab:	das    
  4112ac:	pop    esi
  4112ad:	add    ebp,ecx
  4112af:	add    ebp,esi
  4112b1:	mov    al,0xb5
  4112b3:	mov    al,BYTE PTR [ecx]
  4112b5:	or     edi,DWORD PTR [esi-0x7d4e7576]
  4112bb:	stos   BYTE PTR es:[edi],al
  4112bc:	retf   0x732a
  4112bf:	push   ds
  4112c0:	imul   ebx,DWORD PTR [eax],0xffffff95
  4112c3:	mov    ch,0xf4
  4112c5:	test   al,0xff
  4112c7:	pop    edi
  4112c8:	gs sub al,0x57
  4112cb:	add    DWORD PTR [esi],ebx
  4112cd:	sbb    esi,edi
  4112cf:	out    0x10,al
  4112d1:	scas   al,BYTE PTR es:[edi]
  4112d2:	imul   ecx,DWORD PTR [esi+0x16],0x31efbf
  4112d9:	add    BYTE PTR [ecx-0x6f31016c],cl
  4112df:	mov    al,0x55
  4112e1:	push   ebx
  4112e2:	in     eax,dx
  4112e3:	mov    al,BYTE PTR [ecx+edx*8-0x1f]
  4112e7:	pop    ds
  4112e8:	gs mov dh,0xb8
  4112eb:	sbb    BYTE PTR [esi+0x17],dl
  4112ee:	inc    edi
  4112ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f0:	mov    BYTE PTR [ebx*2-0x5fbf1851],ch
  4112f7:	sbb    dh,bh
  4112f9:	fidiv  DWORD PTR [ebp+0x267d5cda]
  4112ff:	mov    edi,0xbe73f6f7
  411304:	inc    cl
  411306:	and    ebx,DWORD PTR [ecx]
  411308:	push   cs
  411309:	ins    DWORD PTR es:[edi],dx
  41130a:	out    dx,eax
  41130b:	add    al,BYTE PTR [eax]
  41130d:	jmp    0x7120ca39
  411312:	or     ah,BYTE PTR [eax+edi*1]
  411315:	mov    esp,0x620a9376
  41131a:	repnz pop ds
  41131c:	mov    WORD PTR [edx+edi*2-0x610e50e1],fs
  411323:	add    cl,BYTE PTR [ecx+0x5cda8a9c]
  411329:	cmp    DWORD PTR ds:0x23ca69e9,esi
  41132f:	mov    cs,edi
  411331:	shl    DWORD PTR [esi-0x61160523],0x17
  411338:	je     0x411353
  41133a:	and    al,0x3d
  41133c:	dec    edi
  41133d:	add    DWORD PTR [eax],0x0
  411340:	mov    ds:0x21008cbb,al
  411345:	mov    ds:0xf59bb8e6,eax
  41134a:	std    
  41134b:	pop    ecx
  41134c:	sub    eax,0xbfe04388
  411351:	int    0xe6
  411353:	or     BYTE PTR [ebx+eax*1+0x0],0x33
  411358:	pop    edi
  411359:	div    BYTE PTR [ebx-0x8]
  41135c:	mov    edi,0x84127e38
  411361:	(bad)  
  411362:	(bad)  
  411363:	xlat   BYTE PTR ds:[ebx]
  411364:	popf   
  411365:	push   edi
  411366:	div    BYTE PTR [ebx+ebp*2-0x7f]
  41136a:	test   BYTE PTR [ecx],0xd2
  41136d:	je     0x4112f8
  41136f:	enter  0xe485,0xff
  411373:	push   esp
  411375:	xor    BYTE PTR [edi+0x5],0xcd
  411379:	add    edi,0x5f6fc5fe
  41137f:	cdq    
  411380:	ffreep st(0)
  411382:	iret   
  411383:	clc    
  411384:	ins    DWORD PTR es:[edi],dx
  411385:	inc    eax
  411386:	into   
  411387:	jne    0x411381
  411389:	xor    DWORD PTR [esi+0x5feac9eb],edi
  41138f:	mov    ds:0x4587f643,eax
  411394:	mov    BYTE PTR [edx],bh
  411396:	shl    DWORD PTR [ebx+edi*8-0x77],0xc6
  41139b:	mov    ecx,DWORD PTR [ecx]
  41139d:	sti    
  41139e:	out    0x34,al
  4113a0:	gs idiv ch
  4113a3:	test   BYTE PTR [eax],al
  4113a5:	add    BYTE PTR [edi+ebp*2+0x2f],dh
  4113a9:	(bad)  
  4113aa:	stc    
  4113ab:	retf   0x534e
  4113ae:	aaa    
  4113af:	push   ebx
  4113b0:	std    
  4113b1:	jne    0x411423
  4113b3:	test   DWORD PTR [ebx-0x30],eax
  4113b6:	inc    edi
  4113b7:	push   edx
  4113b8:	std    
  4113b9:	adc    eax,0x3e11d4
  4113be:	popf   
  4113bf:	test   al,0x1a
  4113c1:	add    al,ch
  4113c3:	or     al,0x1b
  4113c5:	je     0x411420
  4113c7:	xchg   ecx,eax
  4113c8:	(bad)
  4113cb:	lahf   
  4113cc:	cmp    edi,esi
  4113ce:	pop    edx
  4113cf:	or     eax,0x5f24cb94
  4113d4:	push   ss
  4113d5:	(bad)  
  4113d6:	mov    al,0x83
  4113d8:	cmc    
  4113d9:	aas    
  4113da:	popf   
  4113db:	xor    al,0x90
  4113dd:	rol    DWORD PTR [ebp-0x1a],cl
  4113e0:	data16 (bad) 
  4113e2:	xor    al,dl
  4113e4:	lods   eax,DWORD PTR ds:[esi]
  4113e5:	mov    eax,?
  4113e7:	call   FWORD PTR [edx]
  4113e9:	(bad)  
  4113ea:	and    ah,ah
  4113ec:	sub    esi,DWORD PTR [ecx+0x17]
  4113ef:	sub    al,0x2
  4113f1:	push   0xffffff8e
  4113f3:	mov    dh,0x90
  4113f5:	mov    bh,0x65
  4113f7:	jae    0x41139b
  4113f9:	stc    
  4113fa:	popf   
  4113fb:	sub    ecx,DWORD PTR [ebp-0x375f0eac]
  411401:	(bad)  [esi+0x70475b58]
  411407:	jmp    0x41140c
  411409:	sldt   WORD PTR [eax]
  41140c:	pop    ecx
  41140d:	jnp    0x4113ed
  41140f:	retf   0xe7aa
  411412:	dec    ebx
  411413:	cmp    BYTE PTR [eax+0x7f],dh
  411416:	pop    DWORD PTR [ecx]
  411418:	push   ss
  411419:	out    0x8e,al
  41141b:	je     0x4113ca
  41141d:	pop    ecx
  41141e:	mov    bl,0x4f
  411420:	mov    edx,0x188c2236
  411425:	or     BYTE PTR [ebx],bl
  411427:	(bad)  
  411428:	stos   BYTE PTR es:[edi],al
  411429:	mov    esp,0x4ea2eb90
  41142e:	or     dl,BYTE PTR [eax-0x66]
  411431:	adc    eax,0xf326d619
  411436:	mov    es,ebp
  411438:	jne    0x41143c
  41143a:	jo     0x41145f
  41143c:	adc    DWORD PTR ds:0x15964069,0xffffff9b
  411443:	(bad)  
  411445:	and    DWORD PTR [edx+0x1b],ecx
  411448:	imul   edx,DWORD PTR ds:0xcf17277b,0xffffffa8
  41144f:	neg    BYTE PTR [edx+0x5331f602]
  411455:	(bad)  
  411456:	clc    
  411457:	sbb    dh,BYTE PTR [eax+0x15]
  41145a:	pop    ebx
  41145b:	sub    al,0x43
  41145d:	sub    al,0xdd
  41145f:	nop
  411460:	push   esi
  411461:	adc    eax,0x1aa91abe
  411466:	int    0x31
  411468:	adc    al,0xbf
  41146a:	lds    edi,FWORD PTR [edx+0x45afb9c0]
  411470:	add    BYTE PTR [eax],al
  411472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411473:	add    bl,BYTE PTR [edi+ecx*4]
  411476:	push   es
  411477:	cmp    DWORD PTR [ebx+ebx*2-0x7116fd64],0x59
  41147f:	push   es
  411480:	aaa    
  411481:	xchg   DWORD PTR [edx],edi
  411483:	out    0x38,al
  411485:	sbb    ebp,DWORD PTR [ecx+0xa]
  411488:	pop    esp
  411489:	and    BYTE PTR [edx+0x17],0x85
  41148d:	sbb    dl,BYTE PTR [edx-0x75]
  411490:	sub    edx,DWORD PTR [eax]
  411492:	ret    0x520a
  411495:	add    al,0x9d
  411497:	jg     0x411441
  411499:	or     ah,BYTE PTR [ecx]
  41149b:	sub    esp,edi
  41149d:	add    ebx,DWORD PTR [ebp-0x46349c79]
  4114a3:	adc    al,0x55
  4114a5:	mov    bl,0xba
  4114a7:	xchg   edx,eax
  4114a8:	int    0x4
  4114aa:	popf   
  4114ab:	mov    DWORD PTR [eax],edi
  4114ad:	mov    WORD PTR [ecx],gs
  4114af:	adc    ah,BYTE PTR [ebx+0x11]
  4114b2:	stos   DWORD PTR es:[edi],eax
  4114b3:	jle    0x4114b4
  4114b5:	sbb    BYTE PTR [ecx-0x639dfffe],bl
  4114bb:	test   DWORD PTR [ebp+esi*8+0x49],ecx
  4114bf:	scas   al,BYTE PTR es:[edi]
  4114c0:	(bad)  
  4114c1:	jns    0x4114ad
  4114c3:	adc    edi,esi
  4114c5:	jmp    0x644f68e7
  4114ca:	int    0x2
  4114cc:	add    cl,ch
  4114ce:	adc    edi,DWORD PTR [edi-0x7a598df5]
  4114d4:	push   esp
  4114d5:	loope  0x4114d7
  4114d7:	add    BYTE PTR [eax],cl
  4114d9:	(bad)  
  4114da:	(bad)  
  4114db:	cwde   
  4114dc:	push   edx
  4114dd:	jg     0x41149e
  4114df:	test   bl,0x6c
  4114e2:	add    cl,ch
  4114e4:	sahf   
  4114e5:	scas   eax,DWORD PTR es:[edi]
  4114e6:	push   esi
  4114e7:	inc    ebx
  4114e8:	inc    DWORD PTR [esi+0x1be99174]
  4114ee:	js     0x4114b0
  4114f0:	cdq    
  4114f1:	add    cl,BYTE PTR [ebx-0x15756d4]
  4114f7:	bound  ebx,QWORD PTR [edi-0x3d]
  4114fa:	imul   ebx,edi,0x8c1a1c46
  411500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411501:	adc    al,0xfe
  411503:	adc    al,0xa9
  411505:	xchg   DWORD PTR [ecx+ebp*1],edi
  411508:	call   0xa9a314e0
  41150d:	or     al,0xda
  41150f:	jecxz  0x4114b2
  411511:	adc    al,0xd6
  411513:	jg     0x411575
  411515:	add    al,0x84
  411517:	adc    eax,0x6a00029e
  41151c:	sub    bh,ah
  41151e:	call   edx
  411520:	std    
  411521:	xchg   BYTE PTR [ebp+ebx*4-0x7],dh
  411525:	sbb    eax,DWORD PTR [eax+0x50]
  411528:	cdq    
  411529:	add    cl,BYTE PTR [ebx+0x787a2a4]
  41152f:	add    BYTE PTR [ecx],ch
  411531:	arpl   si,dx
  411533:	push   edx
  411534:	psrlw  mm2,QWORD PTR [eax+0x50]
  411538:	retf   
  411539:	(bad)  
  41153a:	xchg   edx,eax
  41153b:	add    BYTE PTR [eax],al
  41153d:	add    BYTE PTR [edi+edi*8-0x7c],dh
  411541:	shl    BYTE PTR [ecx],0xfc
  411544:	mov    dh,BYTE PTR [ebp-0x24]
  411547:	out    0x56,al
  411549:	jg     0x4114d0
  41154b:	dec    DWORD PTR [eax+0x2e59845]
  411551:	adc    DWORD PTR [ecx],0xffffffeb
  411554:	(bad)  
  411555:	imul   ebp,DWORD PTR [esp+edi*2],0xe72c9073
  41155c:	or     al,0xf9
  41155e:	xor    al,0xff
  411560:	mov    al,BYTE PTR [ebp+0x48]
  411563:	xchg   BYTE PTR [esi],al
  411565:	lea    esi,[ecx-0x22]
  411568:	push   eax
  411569:	mov    esi,edx
  41156b:	dec    esp
  41156c:	dec    esi
  41156d:	jmp    DWORD PTR [ebp+0x34fffea3]
  411573:	xchg   esp,eax
  411574:	mov    esi,0x73860975
  411579:	loopne 0x411557
  41157b:	xor    edi,DWORD PTR [ebp+0x1]
  41157e:	hlt    
  41157f:	xchg   DWORD PTR [ebx-0x8],eax
  411582:	das    
  411583:	adc    eax,DWORD PTR [ecx+0x69ff3c65]
  411589:	imul   edi,DWORD PTR [ecx-0x3c],0xfa1bff4e
  411590:	push   esi
  411591:	call   0x400cd2
  411596:	dec    edi
  411597:	test   dh,dh
  411599:	mov    esi,DWORD PTR [ecx+0x504589fa]
  41159f:	xchg   esp,eax
  4115a0:	hlt    
  4115a1:	mov    ecx,0x840c0000
  4115a6:	ds add bl,cl
  4115a9:	push   edx
  4115aa:	out    dx,eax
  4115ab:	test   DWORD PTR [ebp-0x33bbf829],ebx
  4115b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b2:	inc    edx
  4115b3:	add    edx,DWORD PTR [esi+eiz*2]
  4115b6:	mov    bl,BYTE PTR ss:[ebp-0x598cbd5a]
  4115bd:	inc    ecx
  4115be:	xor    DWORD PTR [edi],0xffffff9d
  4115c1:	push   edi
  4115c2:	std    
  4115c3:	mov    eax,0xffc26f5d
  4115c8:	ror    BYTE PTR [ebp-0x4f],1
  4115cb:	mov    WORD PTR [eax],ds
  4115cd:	dec    esp
  4115ce:	pop    ss
  4115cf:	(bad)  
  4115d0:	push   0x4c
  4115d2:	test   DWORD PTR [ebp+edx*4+0x6b],eax
  4115d6:	sub    bh,BYTE PTR [edi-0x7de9eec0]
  4115dc:	pop    ecx
  4115dd:	xor    BYTE PTR [edi],dl
  4115df:	je     0x41162a
  4115e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e2:	adc    bh,dh
  4115e4:	push   0x29
  4115e6:	nop
  4115e7:	idiv   DWORD PTR [edx]
  4115e9:	pop    ecx
  4115ea:	xor    ch,0xb2
  4115ed:	sbb    eax,0x5521dad0
  4115f2:	push   es
  4115f3:	test   BYTE PTR [eax],bl
  4115f5:	sbb    al,0x2
  4115f7:	add    BYTE PTR [edi-0x68b7733],al
  4115fd:	repz rcr edx,1
  411600:	cmc    
  411601:	iret   
  411602:	sbb    edi,edi
  411604:	add    dl,BYTE PTR [ebp+0xf398]
  41160a:	sub    bh,ah
  41160c:	or     edx,DWORD PTR [eax+0x1e]
  41160f:	popa   
  411610:	or     edx,DWORD PTR [edi+0x16]
  411613:	push   0xffffffb3
  411615:	mov    bl,BYTE PTR [eax+0x17]
  411618:	sub    ah,BYTE PTR [edx-0x7ce96f27]
  41161e:	fisttp QWORD PTR [edi]
  411620:	add    dh,bh
  411622:	fiadd  WORD PTR ds:0x2488c95
  411628:	dec    ebp
  411629:	mov    esp,0x460c7c2
  41162e:	popf   
  41162f:	jg     0x4115dc
  411631:	or     ecx,DWORD PTR [ebp-0x47]
  411634:	popa   
  411635:	ds push edx
  411637:	jge    0x4115e4
  411639:	pop    es
  41163a:	test   DWORD PTR [esp+edi*1+0x28869317],eax
  411641:	nop
  411642:	pushf  
  411643:	adc    BYTE PTR [ecx],ch
  411645:	stos   BYTE PTR es:[edi],al
  411646:	bnd jg 0x4115e4
  411649:	pop    ds
  41164a:	rcr    BYTE PTR [edx],cl
  41164c:	les    ebx,FWORD PTR [ebx]
  41164e:	jb     0x411661
  411650:	arpl   cx,ax
  411652:	mov    ds:0x588ab5b2,al
  411657:	mov    dl,0x71
  411659:	shl    DWORD PTR [esi+0x5317871a],0x11
  411660:	ins    BYTE PTR es:[edi],dx
  411661:	inc    esp
  411662:	into   
  411663:	add    al,0xef
  411665:	inc    edx
  411666:	push   ds
  411667:	sub    eax,0x973a065c
  41166c:	lock mov al,BYTE PTR [eax]
  41166f:	add    cl,ah
  411671:	imul   ecx,DWORD PTR cs:[ebx+0x2b],0x2339401a
  411679:	adc    ebp,eax
  41167b:	nop
  41167c:	mov    ds:0x1363821a,al
  411681:	adc    DWORD PTR [ecx-0x70],esp
  411684:	cli    
  411685:	mov    al,0x11
  411687:	mov    ebx,DWORD PTR [ecx-0x2]
  41168a:	jno    0x411697
  41168c:	dec    ebp
  41168d:	adc    DWORD PTR [edi],esi
  41168f:	or     al,0x26
  411691:	or     BYTE PTR [edi],bh
  411693:	pop    ss
  411694:	pop    edx
  411695:	cli    
  411696:	fld    DWORD PTR [ebx+0x40]
  411699:	cmp    ebp,DWORD PTR [edx-0x572a62f5]
  41169f:	ret    
  4116a0:	fdiv   st(5),st
  4116a2:	(bad)  
  4116a3:	call   0x692c92b5
  4116a8:	jp     0x411723
  4116aa:	add    ecx,ebp
  4116ac:	sahf   
  4116ad:	aad    0xbf
  4116af:	and    esp,ebx
  4116b1:	or     BYTE PTR [ebx-0x1a],dl
  4116b4:	sub    eax,0x15b65551
  4116b9:	push   esi
  4116ba:	jae    0x411702
  4116bc:	mov    bl,0x10
  4116be:	(bad)  
  4116bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c0:	mov    BYTE PTR [ebx+0x74],0xa9
  4116c4:	sahf   
  4116c5:	cmp    DWORD PTR [edi-0x9a64972],0xffffffe9
  4116cc:	sahf   
  4116cd:	pushf  
  4116ce:	pusha  
  4116cf:	ins    BYTE PTR es:[edi],dx
  4116d0:	or     eax,0x15740
  4116d5:	add    bl,dh
  4116d7:	sbb    bh,bh
  4116d9:	call   0x74905cf5
  4116de:	sbb    eax,0xa8fefe94
  4116e3:	mov    edi,0x29ee8ba
  4116e8:	sbb    BYTE PTR [ebp+eiz*8-0x65],0xfc
  4116ed:	out    0x90,al
  4116ef:	jl     0x4116b3
  4116f1:	rcr    eax,1
  4116f3:	xchg   DWORD PTR [eax],eax
  4116f5:	jmp    0xa67b2847
  4116fa:	cwde   
  4116fb:	xchg   al,al
  4116fd:	jmp    0xc1c419a0
  411702:	test   al,0x0
  411704:	test   BYTE PTR [ecx-0x5f],dh
  411707:	add    al,BYTE PTR [eax]
  411709:	inc    ebx
  41170a:	aas    
  41170b:	jg     0x411781
  41170d:	lods   eax,DWORD PTR ds:[esi]
  41170e:	cmp    DWORD PTR [ebx+0x7c],edi
  411711:	(bad)  
  411712:	shl    DWORD PTR [ecx+0x7d9ee9f6],0x44
  411719:	xchg   ecx,eax
  41171a:	sub    DWORD PTR [edx-0x78450000],ebx
  411720:	xor    DWORD PTR [ebx+edx*2-0xb],0xfffffffd
  411725:	push   eax
  411726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411727:	jnp    0x411784
  411729:	clc    
  41172a:	cmp    eax,0xb9fff277
  41172f:	jae    0x41173f
  411731:	inc    eax
  411732:	les    edx,FWORD PTR [eax-0x77578a42]
  411738:	inc    ebx
  411739:	hlt    
  41173a:	add    BYTE PTR [eax],al
  41173c:	in     al,0x5e
  41173e:	mov    esi,eax
  411740:	xor    al,0x88
  411742:	jnp    0x41173c
  411744:	in     al,dx
  411745:	adc    al,0x88
  411747:	add    DWORD PTR [edx+esi*1-0x3],esi
  41174b:	jmp    0x4117c4
  41174d:	add    dh,0xff
  411750:	in     eax,dx
  411751:	dec    edi
  411752:	out    dx,al
  411753:	cmp    DWORD PTR [ebp+esi*8-0x4e1ef8d],0xffffff8c
  41175b:	inc    ebp
  41175c:	test   BYTE PTR [ebp+0x4e],bl
  41175f:	(bad)  
  411760:	jns    0x4117a1
  411762:	adc    al,0x40
  411764:	inc    esp
  411765:	add    dl,0xc
  411768:	push   ds
  411769:	push   ebp
  41176a:	mov    esi,DWORD PTR [ebp-0x18]
  41176d:	dec    esi
  41176e:	out    0x9,al
  411770:	pop    ebx
  411771:	add    eax,DWORD PTR [eax]
  411773:	mov    edi,edx
  411775:	jnp    0x4117ba
  411777:	clc    
  411778:	rcl    DWORD PTR [eax-0x1a],0x89
  41177c:	jns    0x411754
  41177e:	mov    eax,DWORD PTR [ebp-0x20890]
  411784:	lea    edx,[eax-0x2e]
  411787:	lea    edi,[ecx+0x104587ee]
  41178d:	mov    BYTE PTR [ebx-0x209be94],al
  411793:	push   eax
  411794:	or     DWORD PTR [eax-0x32],0x3bde9dc7
  41179b:	add    al,0x9d
  41179d:	sbb    DWORD PTR [edx],eax
  41179f:	mov    DWORD PTR [eax],0x1796000
  4117a5:	add    BYTE PTR [ebp-0x3ebbc4e7],bl
  4117ab:	sbb    al,BYTE PTR [edx]
  4117ad:	add    BYTE PTR [ebp-0x6365017f],bl
  4117b3:	sbb    DWORD PTR [edi+0x43ebc15c],eax
  4117b9:	aaa    
  4117ba:	pusha  
  4117bb:	and    DWORD PTR [ebx],eax
  4117bd:	xchg   ebp,eax
  4117be:	fstp   QWORD PTR [ebx-0x747a9cbe]
  4117c4:	adc    dh,bh
  4117c6:	xchg   edx,eax
  4117c7:	ins    DWORD PTR es:[edi],dx
  4117c8:	mov    ah,0x5a
  4117ca:	push   esp
  4117cb:	(bad)  
  4117cd:	(bad)  
  4117ce:	jmp    0x89c13e73
  4117d3:	cwde   
  4117d4:	add    BYTE PTR [eax],al
  4117d6:	popf   
  4117d7:	dec    eax
  4117d8:	lods   al,BYTE PTR ds:[esi]
  4117d9:	push   esi
  4117da:	test   DWORD PTR [esi-0x7b],0x2a541d74
  4117e1:	cdq    
  4117e2:	push   ebx
  4117e3:	sbb    al,0x2
  4117e5:	xor    ecx,DWORD PTR [ebx+0x76]
  4117e8:	test   DWORD PTR [ebp+ebx*1+0x6c],eax
  4117ec:	test   DWORD PTR [ebp+eax*8-0xa01ede2],edi
  4117f3:	sbb    DWORD PTR [edx],eax
  4117f5:	add    BYTE PTR ds:0x9c864234,bl
  4117fb:	sbb    eax,DWORD PTR [ebp-0x79d2dd09]
  411801:	or     bl,BYTE PTR [edi+0x3b021b]
  411807:	add    bl,bl
  411809:	sbb    al,0x86
  41180b:	add    bl,BYTE PTR [edi-0x2574fde5]
  411811:	jmp    0x411825
  411813:	adc    al,0x55
  411815:	add    bh,bl
  411817:	ret    
  411818:	bnd jp 0x41183e
  41181b:	xor    al,0xa7
  41181d:	inc    esp
  41181e:	in     eax,0x87
  411820:	repz add ebp,ecx
  411823:	add    eax,DWORD PTR [edi-0x4c]
  411826:	jae    0x4117b9
  411828:	fisubr WORD PTR [edx+0x2d0f190]
  41182e:	jmp    0x6df3f3b1
  411833:	cdq    
  411834:	jmp    0xe8c2:0x8c4ffb0d
  41183b:	into   
  41183c:	loopne 0x41183b
  41183e:	ins    BYTE PTR es:[edi],dx
  41183f:	dec    ebx
  411840:	popf   
  411841:	add    ch,cl
  411843:	mov    ecx,0xfb37ff0
  411848:	in     eax,dx
  411849:	jg     0x4117f6
  41184b:	and    ebp,ebp
  41184d:	or     eax,0xfd428918
  411852:	arpl   WORD PTR [edi-0x63],dx
  411855:	add    ch,cl
  411857:	jle    0x411832
  411859:	and    dh,BYTE PTR [ecx-0x4]
  41185c:	sbb    DWORD PTR [edi-0x48ee49d0],esi
  411862:	sbb    al,0xb6
  411864:	jmp    0x84b3:0x530b7b7b
  41186b:	mov    BYTE PTR [eax],al
  41186d:	add    BYTE PTR [edx],cl
  41186f:	std    
  411870:	imul   ecx,DWORD PTR [esi+0x7ee9029d],0xffffffe1
  411877:	and    dh,BYTE PTR [ecx-0x5]
  41187a:	and    DWORD PTR [edi-0x48e64a4c],esi
  411880:	test   al,0xb5
  411882:	mov    ah,0xf2
  411884:	adc    edx,DWORD PTR ss:[ecx-0x19673ad6]
  41188b:	mov    cl,0xbd
  41188d:	mov    ah,0xd2
  41188f:	xchg   edi,edi
  411891:	test   al,0x9f
  411893:	xchg   DWORD PTR [ebx-0x18],ecx
  411896:	sahf   
  411897:	add    al,BYTE PTR [ebx+0xf015924]
  41189d:	fld    DWORD PTR fs:[ecx]
  4118a0:	add    cl,ch
  4118a2:	arpl   si,ax
  4118a4:	shl    DWORD PTR [edx-0x2a],cl
  4118a7:	jge    0x4118fd
  4118a9:	xchg   ecx,eax
  4118aa:	or     BYTE PTR [ebp+0xcbee8ff],ah
  4118b0:	dec    esi
  4118b1:	jbe    0x4118bc
  4118b3:	aad    0x84
  4118b5:	test   eax,0xe81e879f
  4118ba:	sahf   
  4118bb:	add    cl,BYTE PTR [ebx+0x77886a4]
  4118c1:	fs in  eax,0x44
  4118c4:	push   ecx
  4118c5:	mov    bh,0x4e
  4118c7:	or     eax,0x4c240d50
  4118cc:	push   cs
  4118cd:	fs sahf 
  4118cf:	add    DWORD PTR [eax],eax
  4118d1:	jmp    0xc74418d6
  4118d6:	out    0x62,eax
  4118d8:	jbe    0x411959
  4118da:	push   esp
  4118db:	inc    ebp
  4118dc:	sub    BYTE PTR [esi-0x44596b02],dh
  4118e2:	(bad)  
  4118e3:	mov    eax,0xdebf8722
  4118e8:	and    eax,0x9ee8ff25
  4118ed:	ja     0x411933
  4118ef:	sbb    eax,0xb0ef96c9
  4118f4:	outs   dx,BYTE PTR ds:[esi]
  4118f5:	std    
  4118f6:	test   DWORD PTR [esi],ebx
  4118f8:	sahf   
  4118f9:	add    al,BYTE PTR [eax]
  4118fb:	jo     0x411907
  4118fd:	and    BYTE PTR [edx+0x7b7e752c],cl
  411903:	call   0xd5b592a2
  411908:	out    0x94,al
  41190a:	add    eax,DWORD PTR [eax]
  41190c:	or     edi,DWORD PTR [edx-0x6a]
  41190f:	add    ah,dh
  411911:	dec    DWORD PTR [eax+0x458dd875]
  411917:	or     BYTE PTR [edi],al
  411919:	inc    ebp
  41191a:	jmp    0xd81:0x68ddf32
  411921:	adc    esi,edi
  411923:	add    al,ah
  411925:	jae    0x411946
  411927:	dec    ecx
  411928:	mov    cl,0x6b
  41192a:	mov    DWORD PTR [eax-0x34],edx
  41192d:	mov    es,eax
  41192f:	call   0x3ef933
  411934:	xor    esi,eax
  411936:	jb     0x411997
  411938:	add    BYTE PTR [eax],al
  41193a:	xchg   esi,eax
  41193b:	test   esi,eax
  41193d:	jmp    FWORD PTR [ecx]
  41193f:	dec    ebx
  411940:	imul   al
  411942:	add    al,0xdd
  411944:	std    
  411945:	(bad)  
  411946:	ds fsubp st(1),st
  411949:	aaa    
  41194a:	push   DWORD PTR [esi+0x6]
  41194d:	mov    dl,0x44
  41194f:	mov    es,esp
  411951:	call   0x3ef879
  411956:	icebp  
  411957:	(bad)  
  411958:	jb     0x411997
  41195a:	adc    ch,BYTE PTR [ebp-0x2]
  41195d:	sub    BYTE PTR [ecx+esi*8-0xe23921a],0xfd
  411965:	mov    eax,DWORD PTR [ebx+eax*4+0x497a74f4]
  41196c:	or     eax,0xf84b8b9b
  411972:	lods   al,BYTE PTR ds:[esi]
  411973:	jno    0x41194d
  411975:	dec    DWORD PTR [ebx-0x73]
  411978:	(bad)  
  411979:	push   esi
  41197a:	pushf  
  41197b:	iret   
  41197c:	fwait
  41197d:	(bad)  
  41197e:	cmp    esi,DWORD PTR [esi]
  411980:	hlt    
  411981:	test   BYTE PTR [edi+0x73],bl
  411984:	adc    dh,BYTE PTR [ebx]
  411986:	popf   
  411987:	pop    ecx
  411988:	call   0x2040:0x3d990bf
  41198f:	(bad)  
  411990:	or     esp,edi
  411992:	jl     0x4119f3
  411994:	paddd  mm6,mm6
  411997:	push   ss
  411998:	shl    ebp,cl
  41199a:	cli    
  41199b:	in     eax,0x17
  41199d:	mov    al,BYTE PTR [eax]
  41199f:	add    BYTE PTR [eax+0x6d],bl
  4119a2:	add    DWORD PTR [ecx+edi*8+0x8],0xffffffcb
  4119a7:	inc    esi
  4119a8:	cdq    
  4119a9:	and    al,0x84
  4119ab:	push   0xffffffda
  4119ad:	jnp    0x4119be
  4119af:	mov    bl,BYTE PTR [eax-0x7b]
  4119b2:	pcmpeqd mm2,QWORD PTR [ebp-0x3db00570]
  4119b9:	jmp    0x89a218a9
  4119be:	jnp    0x411a04
  4119c0:	ror    DWORD PTR [edi+0x661eefbd],1
  4119c6:	or     esp,DWORD PTR es:[esi+0x21]
  4119ca:	inc    DWORD PTR [ecx-0x1f0472f]
  4119d0:	es dec edi
  4119d2:	push   cs
  4119d3:	mov    ch,BYTE PTR [ebx+ebp*2+0x33effeb1]
  4119da:	jnp    0x411a20
  4119dc:	test   DWORD PTR [ebp+0x4b724ffa],esp
  4119e2:	cli    
  4119e3:	mov    ah,al
  4119e5:	iret   
  4119e6:	jnp    0x4119ef
  4119e8:	int    0xf0
  4119ea:	mov    cl,0x7
  4119ec:	es pop edi
  4119ee:	push   cs
  4119ef:	dec    al
  4119f1:	jecxz  0x411a6e
  4119f3:	pop    es
  4119f4:	in     eax,dx
  4119f5:	or     BYTE PTR [eax+0x22571617],dh
  4119fb:	mov    ah,BYTE PTR [ebp-0x5aaff095]
  411a01:	add    dh,BYTE PTR [edx-0x37]
  411a04:	add    BYTE PTR [eax],al
  411a06:	es jle 0x4119f9
  411a09:	mov    bl,0x23
  411a0b:	mov    ah,0xe0
  411a0d:	jp     0x411a88
  411a0f:	or     al,BYTE PTR [edx-0x48]
  411a12:	push   0x1a
  411a14:	aaa    
  411a15:	adc    al,0xb
  411a17:	or     bh,BYTE PTR [ebp-0x24f62d67]
  411a1d:	scas   eax,DWORD PTR es:[edi]
  411a1e:	mov    edx,es
  411a20:	call   0xafee6ad3
  411a25:	inc    ebx
  411a26:	push   ecx
  411a27:	jge    0x4119b5
  411a29:	test   esi,esi
  411a2b:	ds out 0x3,eax
  411a2e:	popf   
  411a2f:	mov    ch,0x36
  411a31:	mov    bh,0x3a
  411a33:	loop   0x411a12
  411a35:	ret    
  411a36:	retf   0x28a1
  411a39:	test   DWORD PTR [edx+0x41d48102],0xaa7ae903
  411a43:	jnp    0x411a28
  411a45:	and    esp,DWORD PTR [ecx]
  411a47:	or     ch,ch
  411a49:	xchg   DWORD PTR [esi],ebx
  411a4b:	add    al,0xe9
  411a4d:	add    eax,DWORD PTR [edi]
  411a4f:	stos   DWORD PTR es:[edi],eax
  411a50:	pop    ebx
  411a51:	cdq    
  411a52:	bound  ebp,QWORD PTR [edx+0x28ed750]
  411a58:	jmp    0xbbb8fff6
  411a5d:	daa    
  411a5e:	rcr    BYTE PTR [edx],cl
  411a60:	cld    
  411a61:	pop    ss
  411a62:	jb     0x411a6d
  411a64:	jno    0x411a6d
  411a66:	push   ds
  411a67:	lahf   
  411a68:	adc    al,0x4
  411a6a:	add    BYTE PTR [eax],al
  411a6c:	push   ss
  411a6d:	cmp    BYTE PTR [edi-0x48cd1680],dh
  411a73:	mov    dh,0x53
  411a75:	mov    dl,0xf4
  411a77:	mov    BYTE PTR [edx],cl
  411a79:	stc    
  411a7a:	arpl   ax,cx
  411a7c:	popf   
  411a7d:	add    al,BYTE PTR [eax]
  411a7f:	jmp    0x9cce1b3b
  411a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a85:	mov    dl,0x56
  411a87:	out    0xee,al
  411a89:	call   0x7e64c412
  411a8e:	xor    eax,ebp
  411a90:	sahf   
  411a91:	add    ch,BYTE PTR [edx+0x33]
  411a94:	sbb    al,0x4e
  411a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a97:	(bad)  
  411a98:	fwait
  411a99:	or     BYTE PTR [edi-0x2f],dl
  411a9c:	scas   eax,DWORD PTR es:[edi]
  411a9d:	adc    al,0xff
  411a9f:	call   0x6338d91b
  411aa4:	idiv   BYTE PTR [eax+0x1b9d38fe]
  411aaa:	sti    
  411aab:	jmp    0x3cce1d4e
  411ab0:	jge    0x411a65
  411ab2:	dec    edi
  411ab3:	mov    cs,WORD PTR [ecx]
  411ab5:	cmc    
  411ab6:	test   BYTE PTR [ecx-0x16148235],ch
  411abc:	sahf   
  411abd:	add    cl,BYTE PTR [ebx+0x77c7d2c]
  411ac3:	pop    esp
  411ac4:	cmc    
  411ac5:	sbb    BYTE PTR [ecx-0x2f],dl
  411ac8:	into   
  411ac9:	out    dx,eax
  411aca:	aas    
  411acb:	jmp    0x6c5122be
  411ad0:	add    BYTE PTR [eax],al
  411ad2:	fdivp  st(0),st
  411ad4:	test   BYTE PTR [ebx],ah
  411ad6:	sahf   
  411ad7:	add    al,BYTE PTR [eax]
  411ad9:	das    
  411ada:	push   ebp
  411adb:	or     DWORD PTR [eax],eax
  411add:	out    dx,al
  411ade:	call   0x1ddb19a1
  411ae3:	jg     0x411a8c
  411ae5:	das    
  411ae6:	mov    ds:0x52934f08,eax
  411aeb:	lods   eax,DWORD PTR ds:[esi]
  411aec:	mov    WORD PTR [esi+ebx*2+0x6],ds
  411af0:	(bad)  
  411af1:	push   ss
  411af2:	mov    dh,0xc2
  411af4:	fisttp WORD PTR [esi]
  411af6:	mov    ds:0xb90058aa,eax
  411afb:	ret    
  411afc:	or     eax,0x3ea8e
  411b01:	add    BYTE PTR [edi+0x186aee3a],bh
  411b07:	pop    ebp
  411b08:	mov    edx,DWORD PTR [ebp+0x4c]
  411b0b:	push   ebp
  411b0c:	push   ecx
  411b0d:	lea    ebp,[ecx-0xc0002fa]
  411b13:	push   esp
  411b14:	push   0x50cd7f00
  411b19:	mov    ecx,eax
  411b1b:	out    0x89,al
  411b1d:	or     BYTE PTR [ebp+esi*8-0x4176f3b1],ah
  411b24:	jae    0x411b82
  411b26:	pop    edx
  411b27:	cmp    DWORD PTR [ebx-0x209bcf8],0x67f7100
  411b31:	push   DWORD PTR [ebx]
  411b33:	div    BYTE PTR [edx+0x18]
  411b36:	add    BYTE PTR [eax],al
  411b38:	repz scas al,BYTE PTR es:[edi]
  411b3a:	mov    ecx,DWORD PTR [eax]
  411b3c:	and    esi,esi
  411b3e:	std    
  411b3f:	data16 aaa 
  411b41:	sti    
  411b42:	ds je  0x411b1c
  411b45:	cmp    BYTE PTR [esi+0x6aed302],0x66
  411b4c:	cmp    ebx,ecx
  411b4e:	jae    0x411b3f
  411b50:	fiadd  DWORD PTR [edx+0x1784036]
  411b56:	xor    eax,eax
  411b58:	stc    
  411b59:	mov    esi,0x80113272
  411b5e:	push   es
  411b5f:	inc    ebx
  411b61:	cmc    
  411b62:	dec    esi
  411b63:	cmp    DWORD PTR [ebp+esi*8-0x1957b275],0xffffff94
  411b6b:	fadd   st,st(3)
  411b6d:	cmc    
  411b6e:	add    al,0x8
  411b71:	pop    ss
  411b72:	xor    eax,eax
  411b74:	popf   
  411b75:	add    DWORD PTR [edx+0x74],0x8cc219dd
  411b7c:	fadd   DWORD PTR ds:0x865811a
  411b82:	or     ebp,edx
  411b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b85:	pushf  
  411b86:	or     edi,DWORD PTR [ecx-0x57]
  411b89:	push   ds
  411b8a:	jg     0x411b83
  411b8c:	pushf  
  411b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b8e:	(bad)  
  411b8f:	std    
  411b90:	fsubr  DWORD PTR [eax]
  411b92:	retf   0x1a5c
  411b95:	and    BYTE PTR [ebp+eax*2-0x75f4c7ee],al
  411b9c:	add    BYTE PTR [eax],al
  411b9e:	pusha  
  411b9f:	dec    ecx
  411ba0:	ja     0x411ba9
  411ba2:	ins    DWORD PTR es:[edi],dx
  411ba3:	dec    eax
  411ba4:	mov    cl,0x7
  411ba6:	es into 
  411ba8:	and    ecx,DWORD PTR [edx+0x7774558]
  411bae:	dec    ebp
  411baf:	pusha  
  411bb0:	mov    cl,0x7
  411bb2:	push   ss
  411bb3:	fimul  WORD PTR [ebx]
  411bb5:	mov    ah,BYTE PTR [ebp-0x52aff337]
  411bbb:	sahf   
  411bbc:	inc    edx
  411bbd:	mov    ah,BYTE PTR [eax-0x7f]
  411bc0:	ja     0x411bc9
  411bc2:	xchg   edx,eax
  411bc3:	popf   
  411bc4:	sbb    al,0xfd
  411bc6:	mov    edx,0x4cfeb28f
  411bcb:	and    DWORD PTR [edi+0x6],esi
  411bce:	push   edx
  411bcf:	mov    al,ds:0x461607b2
  411bd4:	push   ss
  411bd5:	imul   esi,edx,0x83b61a53
  411bdb:	mov    ch,0xb
  411bdd:	pop    esi
  411bde:	jmp    0x411c40
  411be0:	cmp    edx,eax
  411be2:	in     al,dx
  411be3:	mov    bl,0x46
  411be5:	jae    0x411b83
  411be7:	sbb    ecx,esi
  411be9:	add    ebp,edi
  411beb:	and    eax,0x382ff98
  411bf0:	cmp    al,0x9
  411bf2:	arpl   WORD PTR [esi],ax
  411bf4:	adc    dl,cl
  411bf6:	pop    eax
  411bf7:	push   es
  411bf8:	adc    eax,0x891aa418
  411bfd:	pop    ss
  411bfe:	dec    ebx
  411bff:	push   es
  411c00:	adc    BYTE PTR ds:0x6470000,ah
  411c06:	std    
  411c07:	sbb    bl,cl
  411c09:	adc    ch,dh
  411c0b:	or     eax,esp
  411c0d:	add    eax,DWORD PTR [ecx]
  411c0f:	dec    ebx
  411c10:	and    al,0x6
  411c12:	in     eax,0xad
  411c14:	pop    edi
  411c15:	scas   al,BYTE PTR es:[edi]
  411c16:	jno    0x411c24
  411c18:	and    DWORD PTR [ecx],esi
  411c1a:	pop    esp
  411c1b:	frstor [ebx+0x21a1ea4d]
  411c21:	inc    ebx
  411c22:	cmp    al,0xe5
  411c24:	pop    ds
  411c25:	or     edi,eax
  411c27:	nop
  411c28:	xchg   ecx,eax
  411c29:	cmc    
  411c2a:	jge    0x411bf2
  411c2c:	pushf  
  411c2d:	xor    DWORD PTR [eax+0x69ff6e8c],0xe58f4a0c
  411c37:	sbb    ebp,DWORD PTR [ebp+0x7203e902]
  411c3d:	inc    ecx
  411c3e:	add    BYTE PTR [edx+ecx*8-0x205517fb],0x81
  411c46:	lds    eax,FWORD PTR [ebx]
  411c48:	inc    edi
  411c49:	cli    
  411c4a:	adc    BYTE PTR [ebx-0x30572e21],ch
  411c50:	fimul  DWORD PTR [esi-0x714052e]
  411c56:	(bad)  
  411c57:	into   
  411c58:	bound  ecx,QWORD PTR [esi+0xccfb1ca]
  411c5e:	imul   ecx,DWORD PTR ds:0xfad98fba,0x86eab84b
  411c68:	add    BYTE PTR [eax],al
  411c6a:	jne    0x411bf6
  411c6c:	(bad)  
  411c6d:	mov    esp,0x91f8819d
  411c72:	or     eax,0x36ed69fe
  411c77:	add    al,dl
  411c79:	mov    edx,0x64094c57
  411c7e:	add    BYTE PTR ds:0xfa9a6a65,dh
  411c84:	jbe    0x411c77
  411c86:	fwait
  411c87:	or     al,0x8c
  411c89:	jne    0x411c1c
  411c8b:	xor    eax,0xaab5c9ea
  411c90:	mov    esi,0x4082387
  411c95:	pop    esi
  411c96:	and    DWORD PTR [eax],eax
  411c98:	imul   BYTE PTR [edx+ebp*1+0x12]
  411c9c:	enter  0x17c2,0x76
  411ca0:	pop    eax
  411ca1:	outs   dx,BYTE PTR ds:[esi]
  411ca2:	cmp    al,0x80
  411ca4:	cli    
  411ca5:	in     al,dx
  411ca6:	das    
  411ca7:	clc    
  411ca8:	add    dh,BYTE PTR [edi-0x7f0f6e8b]
  411cae:	sbb    eax,DWORD PTR [ebx+0x1]
  411cb1:	ret    0xa85f
  411cb4:	gs ins BYTE PTR es:[edi],dx
  411cb6:	mov    eax,ds:0x966a0291
  411cbb:	add    cl,BYTE PTR [ecx+0x694004de]
  411cc1:	loope  0x411d0c
  411cc3:	cld    
  411cc4:	push   edi
  411cc5:	stos   BYTE PTR es:[edi],al
  411cc6:	or     al,0xd0
  411cc8:	cmc    
  411cc9:	ret    0x916c
  411ccc:	inc    ebp
  411ccd:	out    0x0,al
  411ccf:	add    BYTE PTR [edi-0x5],cl
  411cd2:	gs mov dl,0x64
  411cd5:	xchg   ecx,eax
  411cd6:	cmp    eax,0xf880591a
  411cdb:	or     al,0x2c
  411cdd:	jmp    FWORD PTR [ecx-0x15]
  411ce0:	inc    esi
  411ce1:	sbb    DWORD PTR [esi],edx
  411ce3:	push   0xffffff99
  411ce5:	fdiv   DWORD PTR [eax+eax*1+0x61]
  411ce9:	in     eax,0xe
  411ceb:	popw   es
  411ced:	div    DWORD PTR [edi]
  411cef:	ja     0x411d42
  411cf1:	gs hlt 
  411cf3:	or     cl,BYTE PTR [ebx-0x4f]
  411cf6:	(bad)  
  411cf7:	lea    eax,[eax]
  411cf9:	or     cl,dh
  411cfb:	add    DWORD PTR [esi+0x3eb70efd],0x7d
  411d02:	div    DWORD PTR [eax]
  411d04:	daa    
  411d05:	jecxz  0x411d6b
  411d07:	test   DWORD PTR [ebp+0x6c830173],ecx
  411d0d:	(bad)  
  411d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d0f:	add    dh,BYTE PTR [eax-0x60210900]
  411d15:	cld    
  411d16:	imul   ecx,DWORD PTR [eax],0x5e3587dc
  411d1c:	inc    edi
  411d1d:	push   esp
  411d1e:	mov    esp,ebp
  411d20:	jg     0x411d65
  411d22:	or     al,BYTE PTR [ecx-0xf4b8]
  411d28:	hlt    
  411d29:	push   ecx
  411d2a:	mov    esp,0x600
  411d2f:	push   edi
  411d30:	in     eax,dx
  411d31:	das    
  411d32:	jo     0x411dad
  411d34:	add    BYTE PTR [eax],al
  411d36:	xchg   edx,eax
  411d37:	stc    
  411d38:	jae    0x411d42
  411d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3b:	out    0x66,al
  411d3d:	call   0xffd4:0x7d81fa3b
  411d44:	jae    0x411d6a
  411d46:	sbb    esi,DWORD PTR [esi+ecx*1-0x7d]
  411d4a:	push   ecx
  411d4b:	repnz cld 
  411d4d:	(bad)  
  411d4e:	cmp    edi,esi
  411d50:	mov    WORD PTR [ebp-0x207d0],es
  411d56:	sbb    al,0x40
  411d58:	inc    DWORD PTR [eax]
  411d5a:	mov    ah,0x86
  411d5c:	aam    0x8b
  411d5e:	iret   
  411d5f:	mov    eax,DWORD PTR [ebx+0x8ab9df4]
  411d65:	(bad)  
  411d66:	jne    0x411d9a
  411d68:	add    al,0x1
  411d6a:	popf   
  411d6b:	call   0x74bd:0x6bdc43cc
  411d72:	mov    al,0x41
  411d74:	or     al,BYTE PTR [eax]
  411d76:	popf   
  411d77:	sbb    DWORD PTR [ebp+0x72],esi
  411d7a:	xchg   ebp,eax
  411d7b:	inc    ebx
  411d7c:	pushf  
  411d7d:	add    DWORD PTR [eax],ebp
  411d7f:	data16 cli 
  411d81:	push   edi
  411d82:	inc    ebp
  411d83:	aas    
  411d84:	dec    edx
  411d85:	dec    BYTE PTR [edx-0x60]
  411d88:	mov    esi,0xfe588607
  411d8d:	je     0x411e0b
  411d8f:	rcl    DWORD PTR [ecx],0x0
  411d92:	popf   
  411d93:	sbb    DWORD PTR [eax-0x10735cc8],esp
  411d99:	push   cs
  411d9a:	add    BYTE PTR [eax],al
  411d9c:	jmp    0x7ac9:0xa94c7b12
  411da3:	add    BYTE PTR [eax],ah
  411da5:	fdivr  st,st(5)
  411da7:	dec    edi
  411da8:	outs   dx,BYTE PTR ds:[esi]
  411da9:	inc    ecx
  411daa:	add    eax,0x523c0298
  411daf:	add    BYTE PTR [esi],al
  411db1:	pop    ss
  411db2:	aam    0xbf
  411db4:	push   edx
  411db5:	jmp    0x411df1
  411db7:	rcr    DWORD PTR [ecx-0xe7552e7],0x99
  411dbe:	push   ss
  411dbf:	pop    es
  411dc0:	pushf  
  411dc1:	sbb    DWORD PTR [edx],eax
  411dc3:	push   esi
  411dc4:	push   0xffffffac
  411dc6:	adc    BYTE PTR [eax],al
  411dc8:	popf   
  411dc9:	sbb    DWORD PTR [ebx-0x11],edi
  411dcc:	push   ss
  411dcd:	push   esp
  411dce:	mov    al,ds:0xfe0ad53a
  411dd3:	xor    ebp,ebx
  411dd5:	jg     0x411d76
  411dd7:	push   cs
  411dd8:	repnz push edi
  411dda:	mov    dl,0xfe
  411ddc:	sub    BYTE PTR [edx],al
  411dde:	icebp  
  411ddf:	jbe    0x411dd1
  411de1:	or     al,0xb9
  411de3:	sbb    ebx,DWORD PTR [esi-0x64]
  411de6:	push   esi
  411de7:	or     ah,dh
  411de9:	add    al,BYTE PTR [edx]
  411deb:	or     al,0xeb
  411ded:	add    eax,0x8182b329
  411df2:	test   eax,0x2f6a9d02
  411df7:	add    bl,BYTE PTR [ebp-0x653ea3fe]
  411dfd:	push   edx
  411dfe:	xchg   ecx,eax
  411dff:	add    eax,0x8bc30000
  411e04:	push   DWORD PTR [esi-0x30]
  411e07:	push   es
  411e08:	scas   eax,DWORD PTR es:[edi]
  411e09:	inc    eax
  411e0a:	mov    al,ds:0xd9b1a846
  411e0f:	jmp    0x866b:0x23b5049
  411e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e17:	add    bh,BYTE PTR [ebx-0x22]
  411e1a:	sub    edi,DWORD PTR [eax-0x25]
  411e1d:	test   cl,bh
  411e1f:	cli    
  411e20:	in     eax,0x7
  411e22:	sbb    eax,DWORD PTR [ebx]
  411e24:	ins    BYTE PTR es:[edi],dx
  411e25:	or     DWORD PTR [edx],0x207d701
  411e2b:	jbe    0x411e14
  411e2d:	add    al,0x9d
  411e2f:	mov    esp,0x29d01e7
  411e34:	ins    BYTE PTR es:[edi],dx
  411e35:	sub    edx,0x207b700
  411e3b:	mov    ah,0xe7
  411e3d:	add    al,0x9d
  411e3f:	mov    dl,0xe8
  411e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e42:	js     0x411e0f
  411e44:	test   eax,0x6256d2fc
  411e49:	sbb    BYTE PTR ds:0x9d02ebef,bl
  411e4f:	add    bl,BYTE PTR [edx]
  411e51:	scas   al,BYTE PTR es:[edi]
  411e52:	sbb    eax,0x9d01e7fc
  411e57:	add    al,BYTE PTR [eax]
  411e59:	sti    
  411e5a:	adc    BYTE PTR [edi+0x9ee18c],cl
  411e60:	(bad)  
  411e61:	pushw  ss
  411e63:	xacquire xchg DWORD PTR [eax+eax*1-0x40c35e00],ebp
  411e6b:	fiadd  WORD PTR [eax-0x7c]
  411e6e:	jnp    0x411e51
  411e70:	sahf   
  411e71:	lea    eax,[esi]
  411e73:	jo     0x411ed1
  411e75:	stc    
  411e76:	je     0x411e7f
  411e78:	call   0xfee9:0xfc6a0876
  411e7f:	cs call 0xfdff:0xb96c8d01
  411e87:	push   ds
  411e88:	mov    cl,0x19
  411e8a:	add    al,ch
  411e8c:	sahf   
  411e8d:	ins    BYTE PTR es:[edi],dx
  411e8e:	add    al,0xb3
  411e90:	lds    ecx,FWORD PTR [esi-0x8]
  411e93:	je     0x411eb1
  411e95:	jmp    0xe9dd1d98
  411e9a:	dec    esi
  411e9b:	call   0x6cc02141
  411ea0:	xchg   esi,eax
  411ea1:	inc    ebp
  411ea2:	aas    
  411ea3:	aas    
  411ea4:	fdiv   QWORD PTR [ebp+0x1e]
  411ea7:	fisubr WORD PTR ds:0xb12c8b09
  411ead:	push   ecx
  411eae:	push   esi
  411eaf:	pop    esp
  411eb0:	jne    0x411e97
  411eb2:	cld    
  411eb3:	(bad)  
  411eb4:	mov    ds:0x9eb943c8,eax
  411eb9:	add    al,0x0
  411ebb:	jmp    0xaf3f8746
  411ec0:	fwait
  411ec1:	test   eax,eax
  411ec3:	sbb    al,0xd3
  411ec5:	inc    esi
  411ec6:	cmp    DWORD PTR [ebp*4+0xdaa277],edx
  411ecd:	add    BYTE PTR [esi+0x5f],bl
  411ed0:	pop    ecx
  411ed1:	mov    al,ds:0x55c
  411ed6:	das    
  411ed7:	aas    
  411ed8:	jmp    0x2083:0xe97d89f6
  411edf:	stc    
  411ee0:	mov    al,BYTE PTR [ebp-0x40]
  411ee3:	scas   al,BYTE PTR es:[edi]
  411ee4:	mov    dh,BYTE PTR [ebx-0x40]
  411ee7:	jnp    0x411f3a
  411ee9:	push   ds
  411eea:	test   al,0xaf
  411eec:	mov    bh,BYTE PTR [ebp+0x7c]
  411eef:	(bad)  
  411ef1:	add    edi,DWORD PTR [ebx-0x10aca94d]
  411ef7:	cmp    al,0x88
  411ef9:	inc    ebp
  411efa:	test   al,0x1b
  411efc:	das    
  411efd:	int3   
  411efe:	jne    0x411f04
  411f00:	mov    eax,DWORD PTR [ebp-0x54]
  411f03:	mov    bl,0x67
  411f05:	inc    eax
  411f06:	adc    DWORD PTR [edx-0x3d600f7],0xfffffffe
  411f0d:	adc    eax,0x3df200
  411f12:	mov    ecx,0xf73e7143
  411f17:	test   DWORD PTR ds:[ebp+0x33],ecx
  411f1b:	int3   
  411f1c:	dec    esp
  411f1d:	or     al,0xaa
  411f1f:	out    0xe,al
  411f21:	mov    dh,0x9
  411f23:	or     DWORD PTR [edx+0x517a0c45],ecx
  411f29:	adc    eax,0x811d414
  411f2e:	repnz mov edi,0x80fe
  411f34:	push   ecx
  411f35:	add    eax,0x3e087501
  411f3a:	inc    esp
  411f3b:	inc    DWORD PTR [eax*8-0x6dffb2c6]
  411f42:	fimul  WORD PTR [ebp-0xb2f147]
  411f48:	mov    ecx,0xc075fe0e
  411f4d:	push   es
  411f4e:	je     0x411f58
  411f50:	popf   
  411f51:	cwde   
  411f52:	in     eax,dx
  411f53:	dec    ebx
  411f54:	scas   eax,DWORD PTR es:[edi]
  411f55:	sub    DWORD PTR [edi+edi*8],eax
  411f58:	xor    BYTE PTR [ebp+0x77],bh
  411f5b:	ror    BYTE PTR [edx-0x80],cl
  411f5e:	nop
  411f5f:	sbb    eax,0xe7376471
  411f64:	shl    BYTE PTR [ecx+eax*1+0x3ac7fa00],1
  411f6b:	shl    DWORD PTR [ecx+0x1fff78e9],0x51
  411f72:	add    esi,DWORD PTR [ebx-0x6a]
  411f75:	inc    sp
  411f77:	jae    0x411f1b
  411f79:	cdq    
  411f7a:	add    al,0x14
  411f7c:	cmp    eax,0x5fffc1db
  411f81:	sahf   
  411f82:	js     0x411f6f
  411f84:	push   ds
  411f85:	inc    ebp
  411f86:	or     al,0x82
  411f88:	dec    ecx
  411f89:	cmc    
  411f8a:	mov    al,0x69
  411f8c:	popf   
  411f8d:	je     0x411fbb
  411f8f:	mov    ah,al
  411f91:	icebp  
  411f92:	fdivp  st(6),st
  411f94:	inc    edx
  411f95:	nop
  411f96:	add    al,0x4f
  411f98:	add    BYTE PTR [eax],al
  411f9a:	cmp    bh,BYTE PTR [esi-0x13]
  411f9d:	imul   ebx,DWORD PTR [ebp+0x2a0f8f00],0xa8fef57e
  411fa7:	loope  0x411fad
  411fa9:	adc    al,0xcd
  411fab:	sti    
  411fac:	sar    edi,0x1f
  411faf:	loope  0x411fb5
  411fb1:	je     0x411f54
  411fb3:	sbb    eax,DWORD PTR [edx+ebp*8-0x48]
  411fb7:	fdivr  DWORD PTR [esi-0x7e1662e9]
  411fbd:	jmp    DWORD PTR ds:0x1e178dec
  411fc3:	and    eax,0x6be207e0
  411fc8:	mov    ch,0x23
  411fca:	test   eax,0x5e76a602
  411fcf:	es out dx,eax
  411fd1:	mov    bl,0x5a
  411fd3:	push   edx
  411fd4:	add    DWORD PTR [esi*4-0x62fc1615],eax
  411fdb:	mov    dl,0xe8
  411fdd:	test   al,0x27
  411fdf:	in     eax,0x1c
  411fe1:	inc    edx
  411fe2:	mov    es,WORD PTR [edx]
  411fe4:	sbb    al,0x79
  411fe6:	mov    dh,0x50
  411fe8:	sbb    BYTE PTR [edi-0x1f],dh
  411feb:	cli    
  411fec:	mov    bh,0x78
  411fee:	(bad)  [edx]
  411ff0:	pop    esi
  411ff1:	ror    DWORD PTR [ebx-0x3d0e00e8],cl
  411ff7:	add    ah,BYTE PTR [ebx+eax*2-0xf]
  411ffb:	push   es
  411ffc:	stc    
  411ffd:	inc    ebx
  411ffe:	add    BYTE PTR [eax],al
  412000:	xchg   DWORD PTR [eax],edx
  412002:	jb     0x411fc2
  412004:	jb     0x411f92
  412006:	in     eax,dx
  412007:	js     0x411fe2
  412009:	(bad)  
  41200a:	pusha  
  41200b:	mov    ebp,0x3ae8b29e
  412010:	pop    esp
  412011:	pop    es
  412012:	out    0xae,eax
  412014:	pop    ss
  412015:	out    dx,eax
  412016:	push   0x17
  412018:	xchg   edx,eax
  412019:	add    DWORD PTR [edi+ecx*1+0x43ba553a],0x866c03c4
  412024:	xor    ch,BYTE PTR [edx+0x532ebe64]
  41202a:	out    dx,al
  41202b:	lea    edx,[edx]
  41202d:	mov    ch,BYTE PTR [esp+ecx*1]
  412030:	adc    BYTE PTR [eax-0x2d],bh
  412033:	add    ecx,esp
  412035:	std    
  412036:	cld    
  412037:	inc    edi
  412038:	scas   eax,DWORD PTR es:[edi]
  412039:	inc    edx
  41203a:	out    0x88,eax
  41203c:	fnsave [edi-0x15]
  41203f:	xor    eax,0x8eece9dd
  412044:	pop    esi
  412045:	test   BYTE PTR [eax],0x60
  412048:	xchg   edi,eax
  412049:	mov    eax,DWORD PTR [ebx-0x4f]
  41204c:	sub    BYTE PTR [ebp+0x4],al
  41204f:	pop    ecx
  412050:	cwde   
  412051:	pop    edi
  412052:	(bad)  
  412053:	stos   DWORD PTR es:[edi],eax
  412054:	xchg   ebp,eax
  412055:	add    bh,ch
  412057:	sbb    eax,0xe96a0e75
  41205c:	lahf   
  41205d:	ja     0x412083
  41205f:	fstp   DWORD PTR [edi+0xd92477]
  412065:	add    BYTE PTR [edi+0x5adcfd33],bl
  41206b:	adc    BYTE PTR [eax-0x17],al
  41206e:	xchg   edi,eax
  41206f:	ficomp DWORD PTR [ecx]
  412071:	sub    DWORD PTR [esi-0x61123d26],edx
  412077:	push   ecx
  412078:	mov    DWORD PTR [ebp-0xd],eax
  41207b:	add    cl,BYTE PTR [ebx-0x2ad715c]
  412081:	mov    esp,0xf1438b8e
  412086:	lahf   
  412087:	jbe    0x412095
  412089:	ss test eax,0xb0f513ff
  41208f:	inc    edx
  412090:	add    BYTE PTR [ecx+ebx*2+0x71],ch
  412094:	add    ebp,DWORD PTR [edx+0x59]
  412097:	(bad)  
  412098:	jmp    0x10823487
  41209d:	lods   al,BYTE PTR ds:[esi]
  41209e:	pusha  
  41209f:	push   cs
  4120a0:	add    BYTE PTR [edx-0x23c72495],bl
  4120a6:	push   es
  4120a7:	rol    DWORD PTR [ecx-0x17],0xa5
  4120ab:	xor    al,0x56
  4120ad:	das    
  4120ae:	stc    
  4120af:	rol    BYTE PTR [ecx-0x17],0x74
  4120b3:	call   DWORD PTR [ebx]
  4120b5:	int    0xb0
  4120b7:	inc    edx
  4120b8:	add    BYTE PTR [ecx],dl
  4120ba:	mov    esp,0xa12ac39a
  4120bf:	jno    0x4120d8
  4120c1:	add    BYTE PTR [ebp+0x22],ch
  4120c4:	or     al,0xb7
  4120c6:	mov    bh,0x6
  4120c8:	test   DWORD PTR ds:0xb7fc0000,ebx
  4120ce:	aas    
  4120cf:	add    BYTE PTR ds:0x87c59c22,bh
  4120d5:	push   es
  4120d6:	mov    BYTE PTR ds:0x3fca1c,0xb5
  4120dd:	pop    edx
  4120de:	sti    
  4120df:	adc    eax,0x401714
  4120e4:	jp     0x41208d
  4120e6:	or     BYTE PTR [edi-0x3cc8f989],dh
  4120ec:	mov    eax,ds:0x91d06828
  4120f1:	inc    eax
  4120f2:	add    bh,bh
  4120f4:	xchg   ecx,eax
  4120f5:	rcl    BYTE PTR [edx],1
  4120f7:	inc    eax
  4120f8:	je     0x412137
  4120fa:	mov    edi,0xec688174
  4120ff:	jne    0x412145
  412101:	add    BYTE PTR [eax-0x1],dl
  412104:	push   ecx
  412105:	mov    esp,0xa5744012
  41210a:	or     BYTE PTR [edi-0x3cc8ffc9],dh
  412110:	adc    DWORD PTR [edx+esi*1],eax
  412113:	shr    BYTE PTR [edi+0x604c871a],0x8
  41211a:	push   0x28
  41211c:	stos   DWORD PTR es:[edi],eax
  41211d:	jae    0x412143
  41211f:	adc    bh,dh
  412121:	add    BYTE PTR [eax],dh
  412123:	call   DWORD PTR [eax+edi*8-0x78be428]
  41212a:	fcomp  DWORD PTR [ebx+0x76]
  41212d:	pop    es
  41212e:	add    BYTE PTR [ebx+0x0],dl
  412131:	add    BYTE PTR [edi-0x23],dl
  412134:	cmp    BYTE PTR ds:0x3fc41c,bl
  41213a:	jno    0x412174
  41213c:	push   esi
  41213d:	mov    esi,0x41c5b19d
  412142:	popf   
  412143:	xor    edi,edi
  412145:	adc    eax,DWORD PTR [ecx]
  412147:	fadd   DWORD PTR [ecx+0x0]
  41214a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41214b:	ficomp WORD PTR [ecx+0x76e95ec3]
  412151:	pop    ss
  412152:	and    al,0xcf
  412154:	or     eax,0x8ae95eb5
  412159:	sbb    edx,DWORD PTR [ebp+0x14004354]
  41215f:	neg    DWORD PTR [ebp-0x3816a13d]
  412165:	add    edx,DWORD PTR ds:0x9c0043af
  41216b:	adc    edi,edi
  41216d:	adc    ebp,DWORD PTR [ebp-0x4ffbe29]
  412173:	dec    edx
  412174:	adc    BYTE PTR [ebp-0x3ec31622],dh
  41217a:	adc    BYTE PTR [edx],dl
  41217c:	ins    BYTE PTR es:[edi],dx
  41217d:	ror    BYTE PTR [eax],1
  41217f:	stos   BYTE PTR es:[edi],al
  412180:	add    ebp,edi
  412182:	nop
  412183:	cmp    DWORD PTR [esi],edx
  412185:	inc    eax
  412186:	popf   
  412187:	add    bl,al
  412189:	je     0x41211b
  41218b:	ror    DWORD PTR ds:0x51e9dd76,1
  412191:	std    
  412192:	mov    al,0x6d
  412194:	push   ss
  412195:	inc    eax
  412196:	add    BYTE PTR [eax],al
  412198:	popf   
  412199:	dec    eax
  41219a:	adc    BYTE PTR [ebp-0x3ec31622],dh
  4121a0:	enter  0x33ed,0xc0
  4121a4:	inc    esi
  4121a5:	test   BYTE PTR [esp+ecx*2+0x286bf179],0x2a
  4121ad:	jne    0x4121d4
  4121af:	adc    dh,cl
  4121b1:	hlt    
  4121b2:	xor    bh,ch
  4121b4:	in     eax,dx
  4121b5:	repz fstp DWORD PTR [ecx]
  4121b8:	fld    QWORD PTR [ecx]
  4121ba:	(bad)  
  4121bc:	fs shr bh,0x3
  4121c0:	outs   dx,BYTE PTR ds:[esi]
  4121c1:	xchg   ebx,eax
  4121c3:	test   BYTE PTR [ecx],cl
  4121c5:	cs xor eax,0xd77d2459
  4121cb:	mov    ebp,gs
  4121cd:	test   BYTE PTR [esi-0x17158189],bh
  4121d3:	jo     0x4121af
  4121d5:	cli    
  4121d6:	jmp    0x4121df
  4121d8:	dec    edi
  4121d9:	pop    esi
  4121da:	je     0x412222
  4121dc:	icebp  
  4121dd:	push   ecx
  4121de:	xor    eax,0x96fbdbec
  4121e3:	add    BYTE PTR [eax],ah
  4121e5:	ret    0x814
  4121e8:	outs   dx,DWORD PTR ds:[esi]
  4121e9:	ret    0x7c92
  4121ec:	sbb    al,0x7d
  4121ee:	out    dx,eax
  4121ef:	add    edx,DWORD PTR [esi*1+0x2dd19b7]
  4121f6:	add    DWORD PTR [eax+esi*8],ecx
  4121f9:	outs   dx,BYTE PTR ds:[esi]
  4121fa:	hlt    
  4121fb:	pop    eax
  4121fc:	add    BYTE PTR [eax],al
  4121fe:	push   ss
  4121ff:	inc    eax
  412200:	xor    edx,DWORD PTR [ebx-0x80]
  412203:	jo     0x4121e4
  412205:	add    BYTE PTR [edx-0x7a],dl
  412208:	and    ecx,DWORD PTR [edi]
  41220a:	sbb    al,0x78
  41220c:	repz add esi,ecx
  41220f:	pop    es
  412210:	xchg   esi,eax
  412211:	mov    ds,esi
  412213:	(bad)  
  412214:	xchg   edi,eax
  412215:	add    cl,dl
  412217:	push   es
  412218:	fstp   DWORD PTR cs:[edi+edi*4]
  41221c:	xrelease xchg BYTE PTR [edi+ebp*2-0xe],ah
  412221:	pop    eax
  412222:	push   ss
  412223:	inc    eax
  412224:	or     edx,DWORD PTR [ebx-0x34]
  412227:	stc    
  412228:	xor    eax,0x9e075984
  41222d:	mov    ds,esi
  41222f:	out    0x97,al
  412231:	add    BYTE PTR [ecx-0xa09ffee],ch
  412237:	jmp    0x412265
  412239:	fs icebp 
  41223b:	mov    eax,ebp
  41223d:	not    BYTE PTR [ebp-0x3d]
  412240:	push   eax
  412241:	fiadd  WORD PTR [esi+eax*1-0x856a303]
  412248:	ss into 
  41224a:	xchg   esp,eax
  41224b:	and    dl,BYTE PTR [edx]
  41224d:	sub    DWORD PTR [ecx+0x135c085],esp
  412253:	xchg   ch,bh
  412255:	cmp    eax,0x35d985b0
  41225a:	lods   al,BYTE PTR ds:[esi]
  41225b:	ins    BYTE PTR es:[edi],dx
  41225c:	or     BYTE PTR [edx],bh
  41225e:	jb     0x412257
  412260:	adc    ebx,ecx
  412262:	add    BYTE PTR [eax],al
  412264:	test   al,0x42
  412266:	add    BYTE PTR [edx-0x1b],ch
  412269:	push   es
  41226a:	mov    al,0xe8
  41226c:	push   ebx
  41226d:	pop    eax
  41226e:	(bad)  
  41226f:	stos   DWORD PTR es:[edi],eax
  412270:	lea    eax,[edx]
  412272:	push   ebx
  412273:	jb     0x412222
  412275:	dec    ecx
  412276:	push   ecx
  412277:	jbe    0x41228d
  412279:	or     edi,ebp
  41227b:	aam    0xd6
  41227d:	adc    al,0x40
  41227f:	jmp    0xd63f1ca3
  412284:	rol    BYTE PTR [ebx-0x7c85aab5],cl
  41228a:	loopne 0x412285
  41228c:	pop    ecx
  41228d:	loop   0x4122a2
  41228f:	cdq    
  412290:	hlt    
  412291:	add    ebp,DWORD PTR [edx-0x1a]
  412294:	test   BYTE PTR [edx],0x0
  412297:	jmp    0xe1b519ba
  41229c:	sub    eax,0x4e11fc45
  4122a1:	idiv   ch
  4122a3:	push   ds
  4122a4:	adc    eax,0xc4c874c2
  4122a9:	add    ch,BYTE PTR [edx-0x17]
  4122ac:	xor    esi,DWORD PTR [ebp+0xc]
  4122af:	add    bh,ah
  4122b1:	fisttp DWORD PTR [ecx+0xced2045]
  4122b7:	call   DWORD PTR [ebx]
  4122b9:	clc    
  4122ba:	test   al,al
  4122bc:	mov    BYTE PTR [ecx],cl
  4122be:	mov    DWORD PTR [ebp+0x0],eax
  4122c1:	in     eax,dx
  4122c2:	mov    ebx,0xb0f7e3fc
  4122c7:	add    DWORD PTR [eax],eax
  4122c9:	add    bh,bl
  4122cb:	or     cl,BYTE PTR [ecx-0x50131fbb]
  4122d1:	cld    
  4122d2:	jecxz  0x4122cb
  4122d4:	xor    al,al
  4122d6:	mov    edi,0xc408c2c7
  4122db:	pop    ecx
  4122dc:	xchg   esp,ebp
  4122de:	inc    edi
  4122df:	jmp    0x1ac2a610
  4122e4:	add    BYTE PTR [esi-0x58],dl
  4122e7:	jne    0x4122d1
  4122e9:	repnz mov eax,ds:0xb83bffff
  4122ef:	jb     0x41235b
  4122f1:	lea    edi,[ecx-0x2a]
  4122f4:	push   eax
  4122f5:	push   ebx
  4122f6:	or     al,0xb0
  4122f8:	stc    
  4122f9:	call   DWORD PTR [ebx]
  4122fb:	add    al,0x74
  4122fe:	xchg   edi,eax
  4122ff:	test   DWORD PTR [ecx+0x8],edi
  412302:	je     0x412291
  412304:	xor    DWORD PTR [eax],esi
  412306:	mov    al,BYTE PTR [eax+eax*1+0x74]
  41230a:	sub    BYTE PTR [edx+0x8],0xff
  41230e:	dec    ecx
  41230f:	or     al,0x89
  412311:	inc    ebp
  412312:	mov    esp,0xf7d6fb53
  412317:	mov    edi,0x811830c
  41231c:	add    BYTE PTR [edx+esi*2+0x6a],dh
  412320:	or     bh,bh
  412322:	sub    DWORD PTR [eax],ecx
  412324:	mov    DWORD PTR [ebp-0x6c],eax
  412327:	push   ebx
  412328:	sti    
  412329:	(bad)  
  41232a:	popf   
  41232b:	ins    BYTE PTR es:[edi],dx
  41232c:	lds    ecx,FWORD PTR [eax+eax*1]
  41232f:	add    BYTE PTR [esi],bl
  412331:	xchg   DWORD PTR [ecx],edx
  412333:	add    BYTE PTR [ecx+0x220867ef],dh
  412339:	outs   dx,DWORD PTR ds:[esi]
  41233a:	adc    DWORD PTR [ebx-0x2aefea0],ecx
  412340:	jmp    0x4123ae
  412342:	lds    ecx,FWORD PTR [edi+esi*2]
  412345:	icebp  
  412346:	cld    
  412347:	jae    0x4122f2
  412349:	inc    bp
  41234b:	lock dec ebp
  41234d:	rcl    dh,1
  41234f:	sbb    ecx,0xc5438ed5
  412355:	sbb    DWORD PTR [edi-0x18],ecx
  412358:	stc    
  412359:	mov    dh,0xfb
  41235b:	std    
  41235c:	(bad)  
  41235d:	fdivr  st,st(4)
  41235f:	jae    0x41230e
  412361:	test   al,0x75
  412363:	or     al,0xca
  412365:	push   ss
  412366:	or     al,0xfd
  412368:	mov    ds,WORD PTR [eax+0x298f4015]
  41236e:	add    al,0xf5
  412370:	aad    0xf4
  412372:	shl    ebp,0xc5
  412375:	pop    ds
  412376:	leave  
  412377:	ret    0xe98d
  41237a:	imul   eax,DWORD PTR [eax-0x2fe1663],0xfd09be09
  412384:	mov    al,0xf9
  412386:	cmovo  ebx,DWORD PTR [ebp-0x5edb87a8]
  41238d:	push   eax
  41238e:	adc    eax,0x1a98f1c
  412393:	cmc    
  412394:	add    BYTE PTR [eax],al
  412396:	inc    ebp
  412397:	in     al,0xc1
  412399:	cmc    
  41239a:	inc    ebp
  41239b:	sub    ecx,DWORD PTR [eax]
  41239d:	add    al,dh
  41239f:	lock add DWORD PTR fs:[ecx-0x33],0x2494b80
  4123a8:	es push ecx
  4123aa:	jmp    0x412416
  4123ac:	addr16 add al,0x9d
  4123af:	add    al,BYTE PTR [ecx+0x7f03c700]
  4123b5:	add    ebx,DWORD PTR [ebp-0x510298fe]
  4123bb:	or     ch,BYTE PTR [edi+eax*2+0x19]
  4123bf:	jmp    0xc463:0xf710f913
  4123c6:	xchg   ecx,eax
  4123c7:	bound  esi,QWORD PTR [esi+eax*2+0x1]
  4123cb:	push   edx
  4123cc:	ins    BYTE PTR es:[edi],dx
  4123cd:	jbe    0x4123bc
  4123cf:	jmp    0xf73423d7
  4123d4:	arpl   bx,ax
  4123d6:	jno    0x41242a
  4123d8:	cli    
  4123d9:	fsubr  DWORD PTR [edx+0x6274b355]
  4123df:	mov    edi,DWORD PTR [esp+esi*8]
  4123e2:	dec    edi
  4123e3:	add    eax,0x29dfd68
  4123e8:	inc    edi
  4123e9:	add    ecx,DWORD PTR [eax+0x36]
  4123ec:	loopne 0x41244c
  4123ee:	mov    cl,0x6e
  4123f0:	jmp    0x41242a
  4123f2:	lods   al,BYTE PTR ds:[esi]
  4123f3:	outs   dx,DWORD PTR ds:[esi]
  4123f4:	sub    dl,BYTE PTR [esi-0x4b]
  4123f7:	jbe    0x412453
  4123f9:	cld    
  4123fa:	add    BYTE PTR [eax],al
  4123fc:	mov    al,ds:0x5c38e688
  412401:	outs   dx,DWORD PTR ds:[esi]
  412402:	into   
  412403:	push   eax
  412404:	es dec eax
  412406:	fist   WORD PTR [edx-0xd]
  412409:	push   edx
  41240a:	data16 jbe 0x41238e
  41240d:	div    ah
  41240f:	aaa    
  412410:	pop    DWORD PTR [edx-0x19]
  412413:	xchg   BYTE PTR [ebp+0x6f],bl
  412416:	fisttp DWORD PTR [eax-0x39fdf522]
  41241c:	out    dx,al
  41241d:	jmp    FWORD PTR [edi+0x44]
  412420:	mov    eax,ds:0x51d500e9
  412425:	xor    al,ch
  412427:	mov    ebx,0x74fdf82d
  41242c:	fcomi  st,st(6)
  41242e:	call   0xfe3959ef
  412433:	fistp  DWORD PTR [esi+0x55]
  412436:	pop    ecx
  412437:	and    BYTE PTR [edi+edi*8-0x1],bl
  41243b:	outs   dx,DWORD PTR ds:[esi]
  41243c:	cmp    DWORD PTR [ebp+0x5d],0xfc422be5
  412443:	add    DWORD PTR [esi-0x5],esp
  412446:	std    
  412447:	out    dx,al
  412448:	dec    edi
  412449:	imul   dl
  41244b:	rcl    BYTE PTR [ebx],1
  41244d:	dec    ebx
  41244e:	aas    
  41244f:	imul   edi,eax,0x1efd71f5
  412455:	out    dx,al
  412456:	add    dl,BYTE PTR [esi+ebx*4+0x33]
  41245a:	(bad)  
  41245b:	dec    edi
  41245c:	adc    BYTE PTR [ecx],cl
  41245e:	jmp    0x1e412554
  412463:	out    dx,al
  412464:	add    al,0x3c
  412466:	call   0x304b:0x18e92283
  41246d:	jae    0x4124c8
  41246f:	xor    eax,0x32b13a
  412474:	mov    ch,BYTE PTR [eax+0x39c0aca6]
  41247a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41247b:	outs   dx,BYTE PTR ds:[esi]
  41247c:	and    al,0xf1
  41247e:	dec    eax
  41247f:	jmp    0xedc2:0xf7965a55
  412486:	sahf   
  412487:	push   ecx
  412488:	mov    DWORD PTR [ebp-0x10],edi
  41248b:	inc    ebp
  41248c:	or     eax,0x510ade9e
  412491:	jae    0x412469
  412493:	xor    dl,BYTE PTR [esi-0x1a]
  412496:	das    
  412497:	jno    0x4124a9
  412499:	fisubr WORD PTR [edi]
  41249b:	mov    ebp,0xb20008b
  4124a0:	sti    
  4124a1:	(bad)  
  4124a3:	(bad)  
  4124a4:	or     ebp,DWORD PTR [edi-0x2d4cf66c]
  4124aa:	mov    esp,0xe20ffb5b
  4124af:	inc    ebx
  4124b0:	sti    
  4124b1:	dec    bx
  4124b3:	test   al,0x41
  4124b5:	or     al,0x3b
  4124b7:	mov    bl,0xd7
  4124b9:	add    eax,DWORD PTR [esi-0x34f03603]
  4124bf:	in     eax,dx
  4124c0:	or     ebp,DWORD PTR [edi-0x7b67831]
  4124c6:	add    BYTE PTR [eax],al
  4124c8:	sti    
  4124c9:	scas   eax,DWORD PTR es:[edi]
  4124ca:	sar    BYTE PTR [ebx],0xaa
  4124cd:	or     DWORD PTR [ebx+0xf498],eax
  4124d3:	(bad)  
  4124d5:	rol    DWORD PTR [ebp+0x5b83f445],0x14
  4124dc:	ja     0x412540
  4124de:	or     al,0x0
  4124e0:	not    ebp
  4124e2:	jg     0x412561
  4124e4:	hlt    
  4124e5:	add    BYTE PTR [esi+0x26],dh
  4124e8:	aas    
  4124e9:	inc    edx
  4124ea:	or     al,0x8b
  4124ec:	mov    cl,0x6
  4124ee:	inc    edx
  4124f0:	test   BYTE PTR [ebp-0x6a2173d],al
  4124f6:	sti    
  4124f7:	(bad)  
  4124f8:	mov    ebx,0xb54143b2
  4124fd:	inc    ecx
  4124fe:	or     BYTE PTR [edi],cl
  412500:	bound  eax,QWORD PTR [eax+0x30]
  412503:	add    ecx,eax
  412505:	or     al,BYTE PTR [edi+0x41357845]
  41250b:	adc    BYTE PTR [esi-0x63b0782a],al
  412511:	test   BYTE PTR [ebx+0x41],al
  412514:	xchg   DWORD PTR [ebx-0x8],ecx
  412517:	cmp    al,0x9d
  412519:	jmp    0x111:0x9f161170
  412520:	pop    esi
  412521:	push   ecx
  412522:	dec    DWORD PTR [ecx+0x3f1471ae]
  412528:	fdivrp st(0),st
  41252a:	fnstenv [edx+0x0]
  41252d:	add    BYTE PTR [ebx+0x41],dl
  412530:	and    eax,0x16969f3c
  412535:	mov    eax,esp
  412537:	stc    
  412538:	push   es
  412539:	rol    DWORD PTR [esi-0x1c],0x8b
  41253d:	adc    DWORD PTR ds:0x664144fb,edx
  412543:	and    DWORD PTR [ebx-0xa],esi
  412546:	push   es
  412547:	iret   
  412548:	xor    eax,0x8eda8804
  41254d:	inc    ebx
  41254e:	lods   eax,DWORD PTR ds:[esi]
  41254f:	call   0x6fdd0f1a
  412554:	adc    ecx,DWORD PTR [eax+0x39432a8c]
  41255a:	aad    0x57
  41255c:	repnz mov DWORD PTR [eax-0x2f],ebx
  412560:	add    ecx,DWORD PTR [ebp-0x6f]
  412563:	jb     0x4125aa
  412565:	clc    
  412566:	xchg   esi,eax
  412567:	mov    ds:0xac438607,eax
  41256c:	idiv   ebp
  41256e:	imul   edx,DWORD PTR [eax],0xffffffc9
  412571:	ret    0xe991
  412574:	dec    esi
  412575:	mov    ecx,ecx
  412577:	push   0x334e30e8
  41257c:	dec    edi
  41257d:	xor    edi,ecx
  41257f:	fdivr  st,st(0)
  412581:	inc    ebp
  412582:	outs   dx,BYTE PTR ds:[esi]
  412583:	test   eax,0x72855389
  412588:	dec    ebp
  412589:	lock and al,0x16
  41258c:	fadd   QWORD PTR [edi+0x53397e08]
  412592:	add    BYTE PTR [eax],al
  412594:	test   eax,0x2489f602
  412599:	add    edi,esp
  41259b:	add    esp,DWORD PTR [eax*2-0x29317521]
  4125a2:	pusha  
  4125a3:	inc    edi
  4125a4:	jno    0x41252d
  4125a6:	mov    ah,0x13
  4125a8:	and    cl,BYTE PTR [ebp+0x3f]
  4125ab:	cmp    eax,0x60650367
  4125b0:	dec    edx
  4125b1:	repz out 0x8c,eax
  4125b4:	(bad)  
  4125b5:	out    0x72,al
  4125b7:	dec    edi
  4125b8:	xor    eax,0x2512eb88
  4125bd:	inc    ebp
  4125be:	push   ss
  4125bf:	ds (bad) 
  4125c1:	sbb    bl,dh
  4125c3:	jg     0x412628
  4125c5:	add    edi,esp
  4125c7:	add    esp,DWORD PTR [esi]
  4125c9:	push   edx
  4125ca:	inc    al
  4125cc:	pop    esi
  4125cd:	loop   0x4125b7
  4125cf:	add    ebx,DWORD PTR [ebp-0x3b0b9dfe]
  4125d5:	cmp    eax,0x875776fb
  4125da:	pop    esp
  4125db:	call   0x8d1c9afa
  4125e0:	inc    esi
  4125e1:	out    dx,al
  4125e2:	bound  esi,QWORD PTR [esi-0x1b]
  4125e5:	cmp    ebx,esi
  4125e7:	cmp    al,0x4e
  4125e9:	cmp    al,0x72
  4125eb:	fcom   DWORD PTR [ebp+edx*2-0x78648929]
  4125f2:	or     al,0xf0
  4125f4:	test   DWORD PTR [esi],eax
  4125f6:	loop   0x412666
  4125f8:	add    BYTE PTR [eax],al
  4125fa:	mov    ds:0x8d76e23b,eax
  4125ff:	jbe    0x41259a
  412601:	dec    eax
  412602:	fs repnz adc al,0x2
  412606:	sbb    dh,BYTE PTR [ebp-0x71]
  412609:	mov    dl,BYTE PTR [esi]
  41260b:	repz ret 0x8d76
  41260f:	jo     0x412611
  412611:	jmp    0xe30b:0x6af06e17
  412618:	add    bh,ah
  41261a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41261b:	sub    edi,DWORD PTR [ebx+0x51]
  41261e:	jmp    0x6383:0x6a424203
  412625:	dec    ecx
  412626:	sahf   
  412627:	jnp    0x4126a4
  412629:	fstp   DWORD PTR [edi-0x6e580b93]
  41262f:	jne    0x412645
  412631:	mov    ch,0xf5
  412633:	jnp    0x4126b0
  412635:	inc    ebp
  412636:	adc    DWORD PTR [esi],edi
  412638:	call   0x2a2c0a0f
  41263d:	cmp    edi,ebx
  41263f:	inc    esp
  412640:	xchg   DWORD PTR [edx+ecx*2+0x7119537c],edi
  412647:	push   ebp
  412648:	clc    
  412649:	jb     0x4126be
  41264b:	out    0x29,al
  41264d:	stc    
  41264e:	call   0xd476:0x17abd79f
  412655:	fidiv  WORD PTR ds:0x73c739f5
  41265b:	cli    
  41265c:	mov    BYTE PTR [eax+eax*1],bh
  41265f:	add    ch,bh
  412661:	mov    DWORD PTR [ebx-0x37],ecx
  412664:	test   BYTE PTR [eax],0x89
  412667:	sub    al,0xcd
  412669:	mov    DWORD PTR [ebx-0x37],edx
  41266c:	and    DWORD PTR [esi+0x1c],ebp
  41266f:	jmp    0x3c436699
  412674:	sahf   
  412675:	jge    0x4126c4
  412677:	jmp    0x5603:0xf6105617
  41267e:	adc    al,0xe2
  412680:	in     al,0xff
  412682:	mov    WORD PTR [edi-0x5f],ds
  412685:	add    al,BYTE PTR [eax]
  412687:	mov    ds,WORD PTR [edx+ecx*8-0x80]
  41268b:	add    BYTE PTR [ecx-0x7674fff6],ah
  412691:	or     DWORD PTR [ecx+0x7],esi
  412694:	(bad)  
  412695:	cmp    edi,ebx
  412697:	mov    BYTE PTR [eax+0x20],ah
  41269a:	inc    ebx
  41269b:	mov    dh,BYTE PTR [ecx]
  41269d:	in     eax,dx
  41269e:	shl    cl,0x78
  4126a1:	sti    
  4126a2:	(bad)  
  4126a3:	mov    BYTE PTR [eax-0x2bb275e0],al
  4126a9:	clc    
  4126aa:	(bad)
  4126ad:	add    cl,BYTE PTR [ecx-0x36036cad]
  4126b3:	add    ebp,DWORD PTR [esi+edi*2-0x7bcac8b4]
  4126ba:	ret    
  4126bb:	add    ch,BYTE PTR [ebp-0x6761b95]
  4126c1:	loopne 0x412648
  4126c3:	pop    ebp
  4126c4:	add    BYTE PTR [eax],al
  4126c6:	fs sub eax,0x7bf77dbf
  4126cc:	push   ecx
  4126cd:	loopne 0x41265e
  4126cf:	cmp    edi,eax
  4126d1:	add    esi,DWORD PTR [ebp+0x7fd4517f]
  4126d7:	push   ebx
  4126d8:	fmul   QWORD PTR [ecx+0x1ae7e529]
  4126de:	outs   dx,DWORD PTR ds:[esi]
  4126df:	cmp    bh,al
  4126e1:	jmp    0x4126cc
  4126e3:	cmp    DWORD PTR [ecx-0xc],0xffffffd3
  4126e7:	pusha  
  4126e8:	adc    al,0x8b
  4126ea:	test   eax,0xcc7587e6
  4126ef:	jp     0x41274a
  4126f1:	sbb    bh,al
  4126f3:	aad    0x88
  4126f5:	sbb    al,0xc6
  4126f7:	inc    ebp
  4126f8:	aaa    
  4126f9:	dec    ebp
  4126fa:	sub    BYTE PTR [ecx-0x1a],bh
  4126fd:	mov    esi,DWORD PTR [ecx+0x16]
  412700:	sti    
  412701:	inc    ebp
  412702:	or     BYTE PTR [esi],al
  412704:	dec    ecx
  412705:	loopne 0x4126a4
  412707:	fs dec eax
  412709:	hlt    
  41270a:	pushw  cs
  41270c:	aam    0x7c
  41270e:	ins    DWORD PTR es:[edi],dx
  41270f:	mov    DWORD PTR [eax-0x8],eax
  412712:	es pop ds
  412714:	adc    al,0x37
  412716:	fdiv   DWORD PTR [ecx+0x6]
  412719:	mov    WORD PTR [ebx],fs
  41271b:	pusha  
  41271c:	idiv   ch
  41271e:	scas   al,BYTE PTR es:[edi]
  41271f:	sub    eax,DWORD PTR [ebx+ecx*2]
  412722:	push   ecx
  412723:	fisttp DWORD PTR [eax-0x14]
  412726:	fst    QWORD PTR [edi+edi*1]
  412729:	adc    al,0x0
  41272b:	add    BYTE PTR [edx+0x5afe734d],dl
  412731:	dec    ecx
  412732:	mov    al,BYTE PTR [ebx-0x5f]
  412735:	jae    0x41277f
  412737:	fcom   DWORD PTR ds:0xe2c58ae2
  41273d:	jg     0x412799
  41273f:	(bad)  
  412740:	pop    edi
  412741:	add    al,BYTE PTR [ecx+esi*1]
  412744:	pop    ebp
  412745:	adc    eax,0x61653f0
  41274a:	sub    ah,0xd5
  41274d:	fs dec eax
  41274f:	or     BYTE PTR [esi],ah
  412751:	mov    bl,0x15
  412753:	push   esi
  412754:	push   0x72
  412756:	dec    eax
  412757:	lock push ss
  412759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41275a:	or     eax,0x50650789
  41275f:	adc    BYTE PTR [esi-0x5106004f],bl
  412765:	xlat   BYTE PTR ds:[ebx]
  412766:	mov    esi,0xbbd9e843
  41276b:	inc    ebx
  41276c:	jecxz  0x412747
  41276e:	mov    cl,BYTE PTR [ebx+0x15]
  412771:	jae    0x4127e8
  412773:	shl    BYTE PTR [edi+eiz*1],0xec
  412777:	cmp    esp,ebx
  412779:	call   0xd9dde204
  41277e:	add    DWORD PTR [ecx],ebp
  412780:	in     eax,0x2
  412782:	cmp    cl,BYTE PTR [ebx+0x192be66]
  412788:	adc    al,0x56
  41278a:	test   DWORD PTR [eax+0x4f60c25e],0x2b890000
  412794:	xchg   edi,eax
  412795:	add    eax,0x3e87e26
  41279a:	popf   
  41279b:	sbb    ebp,DWORD PTR [ecx-0x7d2d2175]
  4127a1:	add    DWORD PTR [eax*2+0x498d6a37],esp
  4127a8:	jo     0x4127f1
  4127aa:	jno    0x412825
  4127ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ad:	xlat   BYTE PTR ds:[ebx]
  4127ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127af:	ror    esp,0x0
  4127b2:	and    al,BYTE PTR [ebp+0x3b]
  4127b5:	mov    esi,ebx
  4127b7:	mov    esi,0x3c6c302
  4127bc:	pusha  
  4127bd:	aas    
  4127be:	popa   
  4127bf:	jnp    0x41274d
  4127c1:	xlat   BYTE PTR ds:[ebx]
  4127c2:	test   al,0xb7
  4127c4:	mov    ah,0xeb
  4127c6:	mov    al,ds:0x14e7b4b7
  4127cb:	ins    DWORD PTR es:[edi],dx
  4127cc:	fist   WORD PTR [eax+0x20]
  4127cf:	jne    0x4127e4
  4127d1:	cmc    
  4127d2:	mov    ?,edx
  4127d4:	movsx  edx,WORD PTR [ecx]
  4127d7:	out    dx,eax
  4127d8:	inc    BYTE PTR [eax+edi*1]
  4127db:	dec    ebp
  4127dc:	sti    
  4127dd:	mov    BYTE PTR [esi-0x2],dl
  4127e0:	popa   
  4127e1:	aas    
  4127e2:	in     eax,dx
  4127e3:	or     BYTE PTR [eax+eiz*8-0x63],0x83
  4127e8:	inc    esp
  4127e9:	in     al,0x9d
  4127eb:	jge    0x412800
  4127ed:	push   es
  4127ee:	pop    ebx
  4127ef:	enter  0x3e6,0x22
  4127f3:	jne    0x412778
  4127f5:	mov    al,BYTE PTR [eax]
  4127f7:	add    BYTE PTR [esi-0x36],dh
  4127fa:	jo     0x41283a
  4127fc:	aad    0xc7
  4127fe:	add    BYTE PTR [eax+ecx*8],ch
  412801:	add    esi,eax
  412803:	and    al,0xa8
  412805:	add    al,dh
  412807:	sub    al,0xcd
  412809:	out    dx,al
  41280a:	ret    
  41280b:	and    al,0xa5
  41280d:	out    dx,al
  41280e:	test   BYTE PTR [edx+0xc815428],dh
  412814:	jge    0x412819
  412816:	jae    0x412804
  412818:	and    al,0x13
  41281a:	mov    BYTE PTR [eax+edx*4],dl
  41281d:	jns    0x41281f
  41281f:	mov    bl,0xc3
  412821:	out    dx,eax
  412822:	jae    0x412808
  412824:	jno    0x412868
  412826:	in     al,0x52
  412828:	mov    ds:0x9e497b83,eax
  41282d:	jno    0x412834
  41282f:	das    
  412830:	mov    ds:0x9b6100ee,eax
  412835:	pop    ss
  412836:	cmp    ch,BYTE PTR [ecx+eiz*4-0x74c1ec8f]
  41283d:	loop   0x4127c8
  41283f:	lods   al,BYTE PTR ds:[esi]
  412840:	push   esi
  412841:	lock dec ebx
  412843:	adc    esi,ebx
  412845:	cmp    DWORD PTR [ebx+0x41],0xffffff9e
  412849:	test   DWORD PTR [ebx+0x31],eax
  41284c:	mov    cl,0xc6
  41284e:	jmp    0xd4830940
  412853:	jmp    0xc3256a7d
  412858:	shl    edx,cl
  41285a:	jbe    0x41284d
  41285c:	add    BYTE PTR [eax],al
  41285e:	adc    al,0x42
  412860:	std    
  412861:	arpl   WORD PTR [ebx+0x17],dx
  412864:	jmp    0x15834d50
  412869:	jae    0x4128bf
  41286b:	out    dx,eax
  41286c:	sbb    BYTE PTR [esp+ebp*8+0x2],0x88
  412871:	cmp    al,0x86
  412873:	jbe    0x412878
  412875:	adc    esp,DWORD PTR [esi+eax*8+0x74]
  412879:	add    dl,cl
  41287b:	or     DWORD PTR [ebx],0xdfa4c02
  412881:	(bad)  
  412882:	jno    0x412877
  412884:	std    
  412885:	xchg   DWORD PTR [ecx+0x798046ba],eax
  41288b:	repnz add BYTE PTR [edi],cl
  41288e:	inc    ecx
  41288f:	js     0x412891
  412891:	add    BYTE PTR [ecx+eax*4+0x7404080b],dh
  412898:	aam    0x0
  41289a:	push   cs
  41289b:	cli    
  41289c:	jae    0x4128bd
  41289e:	hlt    
  41289f:	jae    0x41289f
  4128a1:	add    dh,bh
  4128a3:	dec    ebx
  4128a4:	adc    esi,DWORD PTR [ecx+eax*4+0x1f]
  4128a8:	push   ecx
  4128a9:	sti    
  4128aa:	push   eax
  4128ab:	dec    BYTE PTR [ebx]
  4128ad:	add    al,0xec
  4128af:	stc    
  4128b0:	xchg   DWORD PTR [edx+edi*2],edx
  4128b3:	mov    ebx,0x6945fe41
  4128b8:	push   ecx
  4128b9:	sti    
  4128ba:	add    cl,ah
  4128bc:	or     BYTE PTR [esp+eiz*2],cl
  4128bf:	mov    ebx,0xfe41
  4128c4:	xor    al,0x69
  4128c6:	add    edi,edi
  4128c8:	icebp  
  4128c9:	aam    0x89
  4128cb:	add    al,0x2a
  4128cd:	lock jno 0x412894
  4128d0:	mov    ebp,DWORD PTR [ebx-0x24]
  4128d3:	inc    DWORD PTR [ecx]
  4128d5:	cmc    
  4128d6:	push   eax
  4128d7:	push   DWORD PTR [ecx]
  4128d9:	icebp  
  4128da:	call   0xfc32c18d
  4128df:	add    eax,DWORD PTR [edx+edi*2]
  4128e2:	shl    BYTE PTR [ebp+0x42],0xf0
  4128e6:	jno    0x4128c4
  4128e8:	(bad)  [edi+0x69fbe849]
  4128ee:	hlt    
  4128ef:	movlps QWORD PTR [edx-0x14],xmm1
  4128f3:	call   FWORD PTR [ebp+0x5089f44e]
  4128f9:	jg     0x4128c2
  4128fb:	add    eax,0x870709c
  412900:	adc    eax,0x5888ef26
  412905:	mov    ch,0xd9
  412907:	pushf  
  412908:	mov    dh,0x9b
  41290a:	repnz mov DWORD PTR [eax-0x9],ebx
  41290e:	push   esi
  41290f:	std    
  412910:	xor    BYTE PTR [ebx-0x7cb239fa],cl
  412916:	in     al,0x8e
  412918:	call   0xe01f:0x1ef1067d
  41291f:	adc    BYTE PTR [esi],dl
  412921:	daa    
  412922:	loopne 0x4128a5
  412924:	lock mov DWORD PTR [ecx],edx
  412927:	cmp    DWORD PTR [eax],eax
  412929:	add    al,ah
  41292b:	cdq    
  41292c:	add    cl,BYTE PTR [esi+esi*8+0x1efdf263]
  412933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412934:	fst    DWORD PTR [eax]
  412936:	push   ss
  412937:	lahf   
  412938:	fld    DWORD PTR [ecx+0x39110dc8]
  41293e:	fadd   DWORD PTR [ecx+0x2bda8c02]
  412944:	repnz std 
  412946:	out    0x94,al
  412948:	jle    0x412910
  41294a:	(bad)  [edx]
  41294c:	ret    
  41294d:	adc    BYTE PTR [ebp+0x1eec7eae],bl
  412953:	(bad)  
  412954:	sbb    al,0x51
  412956:	retf   
  412957:	lods   al,BYTE PTR ds:[esi]
  412958:	ss ror dh,cl
  41295b:	cld    
  41295c:	dec    ecx
  41295d:	xor    ebp,ebx
  41295f:	jb     0x4129b9
  412961:	in     al,dx
  412962:	adc    al,0x97
  412964:	cmc    
  412965:	xchg   DWORD PTR [eax+0x15],ebp
  412968:	jl     0x4129e5
  41296a:	add    eax,0xa21458b3
  41296f:	add    dh,BYTE PTR [ebp-0x57]
  412972:	jmp    0x5ffa:0x567ce7eb
  412979:	push   edi
  41297a:	mov    ebp,0x24f41c79
  41297f:	xlat   BYTE PTR ds:[ebx]
  412981:	jp     0x4129f1
  412983:	out    dx,al
  412984:	add    bh,BYTE PTR [esi+0x3357c90]
  41298a:	popf   
  41298b:	add    ah,BYTE PTR [edx+0x3f]
  41298e:	add    BYTE PTR [eax],al
  412990:	mov    cl,0x77
  412992:	cmp    al,0xf4
  412994:	pushf  
  412995:	mov    ecx,0xfbc53f70
  41299a:	pop    ebp
  41299b:	add    BYTE PTR [edi-0x4ac12d9c],ah
  4129a1:	sti    
  4129a2:	push   0x58
  4129a4:	mov    ch,bl
  4129a6:	out    0x7c,eax
  4129a8:	push   0x79
  4129aa:	adc    al,0xd8
  4129ac:	es push edx
  4129ae:	outs   dx,BYTE PTR ds:[esi]
  4129af:	leave  
  4129b0:	fsubrp st(6),st
  4129b2:	call   0x7243c6ba
  4129b7:	hlt    
  4129b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b9:	inc    ebp
  4129ba:	sti    
  4129bb:	outs   dx,BYTE PTR ds:[esi]
  4129bc:	cli    
  4129bd:	ja     0x41295b
  4129bf:	repz sbb bh,BYTE PTR ds:0xcad67d3f
  4129c6:	jb     0x412a37
  4129c8:	inc    ebp
  4129c9:	fs lock push gs
  4129cd:	jne    0x41296a
  4129cf:	jl     0x412987
  4129d1:	out    dx,al
  4129d2:	jb     0x412995
  4129d4:	fs cmp eax,0x77906ef7
  4129da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129db:	jmp    0x412960
  4129dd:	sub    ebx,ebp
  4129df:	push   0xffffff8e
  4129e1:	add    al,0xae
  4129e3:	sub    al,0x86
  4129e5:	adc    bh,BYTE PTR [ebx-0xe]
  4129e8:	push   eax
  4129e9:	daa    
  4129ea:	add    cl,bh
  4129ec:	jae    0x4129f2
  4129ee:	xchg   DWORD PTR [edx+edx*8-0x7e],ebp
  4129f2:	jnp    0x4129d1
  4129f4:	add    BYTE PTR [eax],al
  4129f6:	mov    ecx,0x985cf467
  4129fb:	cmp    DWORD PTR [ebx-0x23],0x21
  4129ff:	addr16 in al,0xe9
  412a02:	dec    esp
  412a03:	cli    
  412a04:	cmp    BYTE PTR [ebp+edi*4+0x6d],al
  412a08:	add    DWORD PTR [ebx],ebp
  412a0a:	loopne 0x412a11
  412a0c:	or     DWORD PTR [ebp+eax*8+0x1],0x1891c89
  412a14:	(bad)  
  412a15:	call   0xe2881485
  412a1a:	sub    edx,DWORD PTR [esi]
  412a1c:	jl     0x412a5f
  412a1e:	sbb    DWORD PTR [esi-0x18],ebp
  412a21:	(bad)
  412a26:	lea    ebx,[eax+edx*8]
  412a29:	sub    bl,bl
  412a2b:	adc    DWORD PTR [ebx-0x7f],0xc2f455f9
  412a32:	retf   
  412a33:	out    0x89,al
  412a35:	les    eax,FWORD PTR [esi+0x1c]
  412a38:	lock out dx,al
  412a3a:	cmp    eax,0xd36042d2
  412a3f:	retf   0x7e0d
  412a42:	dec    eax
  412a43:	sub    al,0xde
  412a45:	mov    DWORD PTR [esi+0x7b],0x3dc7515b
  412a4c:	in     al,0x42
  412a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4f:	jnp    0x412aac
  412a51:	adc    DWORD PTR [edi-0x44961bab],esi
  412a57:	push   es
  412a58:	add    BYTE PTR [eax+eax*1+0x0],ch
  412a5c:	fld    QWORD PTR [ebx+esi*2]
  412a5f:	jmp    0x126b:0x6204379b
  412a66:	or     eax,0x14507300
  412a6b:	add    esp,DWORD PTR [esi-0x7cf035ea]
  412a71:	lds    eax,FWORD PTR [eax]
  412a73:	add    BYTE PTR [ebx+esi*8],al
  412a76:	inc    ecx
  412a77:	fdiv   QWORD PTR [ebx+esi*2+0x1c]
  412a7b:	add    BYTE PTR [edi+0x6b],ch
  412a7e:	or     al,0x75
  412a80:	shr    DWORD PTR [ecx+ecx*2-0x2c],0x3c
  412a85:	add    dh,BYTE PTR [ebx]
  412a87:	mov    BYTE PTR [eax+0x31],dh
  412a8a:	std    
  412a8b:	cmp    bl,0x4
  412a8e:	mov    cl,BYTE PTR [ebp-0x10]
  412a91:	mov    esi,0xadbe04dd
  412a96:	mov    BYTE PTR [ebx+ecx*8],cl
  412a99:	imul   ecx,DWORD PTR [ecx-0x1c],0x2
  412a9d:	test   al,0xc0
  412a9f:	loope  0x412a29
  412aa1:	or     BYTE PTR [edi-0x1],0x7e
  412aa5:	stos   DWORD PTR es:[edi],eax
  412aa6:	call   edi
  412aa8:	or     al,0x43
  412aaa:	xor    eax,DWORD PTR [ecx]
  412aac:	test   ecx,0xcd718902
  412ab2:	test   DWORD PTR [ebp-0x14],eax
  412ab5:	addr16 pop ecx
  412ab7:	aam    0xbf
  412ab9:	lds    edi,FWORD PTR [ecx+0x45]
  412abc:	out    dx,eax
  412abd:	dec    ebx
  412abe:	in     al,0x8b
  412ac0:	add    BYTE PTR [eax],al
  412ac2:	add    ecx,ebx
  412ac4:	call   eax
  412ac6:	mov    ebp,0x298bd84b
  412acb:	in     eax,0x85
  412acd:	push   ebp
  412ace:	fmul   st,st(5)
  412ad0:	sbb    al,0x8b
  412ad2:	add    ecx,ebx
  412ad4:	out    0x17,eax
  412ad6:	(bad)  
  412ad7:	jae    0x412ad1
  412ad9:	dec    DWORD PTR [eax]
  412adb:	ja     0x87a1c336
  412ae1:	jne    0x412a80
  412ae3:	repz jp 0x412b41
  412ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ae7:	(bad)  
  412ae9:	data16 adc al,0xa7
  412aec:	push   edx
  412aed:	aas    
  412aee:	(bad)  
  412aef:	xchg   esi,eax
  412af0:	leave  
  412af1:	jl     0x412af4
  412af3:	fs aas 
  412af5:	adc    dl,dh
  412af7:	popf   
  412af8:	jmp    0x7af884fc
  412afd:	dec    ebx
  412afe:	in     eax,0x23
  412b00:	aas    
  412b01:	aam    0x59
  412b03:	mov    eax,ds:0x63d143ee
  412b08:	inc    eax
  412b09:	adc    BYTE PTR [esi+ebp*1+0x5f110df0],al
  412b10:	jmp    0x412b0f
  412b12:	mov    edx,0x61ffcfeb
  412b17:	mov    ebx,0x2e9cc702
  412b1c:	hlt    
  412b1d:	inc    eax
  412b1e:	pushw  ds
  412b20:	sbb    BYTE PTR ds:0xfdedfc29,cl
  412b26:	add    BYTE PTR [eax],al
  412b28:	xchg   edx,eax
  412b29:	gs dec eax
  412b2b:	or     al,0x17
  412b2d:	das    
  412b2e:	ror    BYTE PTR [eax+0x5dc67495],1
  412b34:	fist   DWORD PTR [ebx+edi*4]
  412b37:	ret    0xd995
  412b3a:	xor    al,al
  412b3c:	jbe    0x412b85
  412b3e:	pop    eax
  412b3f:	mov    DWORD PTR [ecx+0x5d],esi
  412b42:	fst    QWORD PTR [eax+0x26]
  412b45:	lahf   
  412b46:	stc    
  412b47:	mov    ah,ah
  412b49:	aad    0x53
  412b4b:	push   ebp
  412b4c:	adc    al,0xaf
  412b4e:	cmc    
  412b4f:	mov    eax,edx
  412b51:	int    0x7a
  412b53:	cli    
  412b54:	xchg   DWORD PTR es:[ecx],edx
  412b57:	add    DWORD PTR [ebp-0x23],esp
  412b5a:	out    0x31,eax
  412b5c:	xor    eax,DWORD PTR [ebx]
  412b5e:	sub    eax,0x25032348
  412b63:	dec    eax
  412b64:	sbb    BYTE PTR [ebx],al
  412b66:	pusha  
  412b67:	inc    eax
  412b68:	dec    ebp
  412b69:	jp     0x412af7
  412b6b:	scas   eax,DWORD PTR es:[edi]
  412b6c:	and    bh,BYTE PTR [esi]
  412b6e:	adc    ebp,DWORD PTR [edx]
  412b70:	inc    edx
  412b71:	clc    
  412b72:	imul   esp,esi,0xfffffffa
  412b75:	out    0xe7,eax
  412b77:	sbb    ah,ch
  412b79:	push   ebx
  412b7a:	pusha  
  412b7b:	inc    eax
  412b7c:	aad    0xdb
  412b7e:	jmp    0x1947:0x72124e78
  412b85:	jp     0x412bc3
  412b87:	hlt    
  412b88:	xchg   esp,eax
  412b89:	rcr    dh,cl
  412b8b:	jle    0x412b8d
  412b8d:	add    BYTE PTR [edx],dl
  412b8f:	add    ah,bh
  412b91:	add    esi,DWORD PTR [esp+eax*8+0x70]
  412b95:	inc    edi
  412b96:	jmp    0x5eba1676
  412b9b:	mov    dh,0x41
  412b9d:	adc    al,0x52
  412b9f:	jns    0x412bd5
  412ba1:	in     al,dx
  412ba2:	sbb    dh,BYTE PTR [esi]
  412ba4:	mov    edi,0xea655a29
  412ba9:	jp     0x412b89
  412bab:	jmp    0x6fa8:0x2b554762
  412bb2:	pushf  
  412bb3:	jns    0x412bd9
  412bb5:	int3   
  412bb6:	and    al,0x45
  412bb8:	(bad)  
  412bb9:	std    
  412bba:	sub    DWORD PTR ds:0x4d31fd7b,esi
  412bc0:	push   edi
  412bc1:	jns    0x412ba9
  412bc3:	cli    
  412bc4:	mov    ecx,0x56eaceec
  412bc9:	ja     0x412c14
  412bcb:	fiadd  DWORD PTR [ecx-0x14]
  412bce:	dec    eax
  412bcf:	out    0xf6,eax
  412bd1:	pushf  
  412bd2:	out    0xea,al
  412bd4:	jb     0x412c15
  412bd6:	test   eax,0x2aac007b
  412bdb:	and    DWORD PTR [ebx+0xd],0x96381a1
  412be2:	cdq    
  412be3:	and    DWORD PTR [ebx+0x11],0xd6381a1
  412bea:	cdq    
  412beb:	jnp    0x412c29
  412bed:	fbld   TBYTE PTR [eax-0x40]
  412bf0:	add    eax,0x870000e9
  412bf5:	jae    0x412bab
  412bf7:	jo     0x412c63
  412bf9:	into   
  412bfa:	xchg   DWORD PTR [edx+ebx*8-0x61e6bc41],ebp
  412c01:	rol    BYTE PTR [ebx-0x2],0x9f
  412c05:	sbb    ecx,0x5f
  412c08:	ins    DWORD PTR es:[edi],dx
  412c09:	cmp    DWORD PTR [ebx-0x3f],0xde06739e
  412c10:	adc    DWORD PTR [edx],edx
  412c12:	xchg   DWORD PTR [ebp*8+0x40e9b4f4],ebx
  412c19:	sub    DWORD PTR [ebx-0x6b],eax
  412c1c:	sub    eax,DWORD PTR [ebx]
  412c1e:	std    
  412c1f:	and    al,0xc9
  412c21:	fcomp  DWORD PTR [eax]
  412c23:	push   0x33
  412c25:	fiadd  WORD PTR [eax]
  412c27:	adc    al,0x96
  412c29:	jnp    0x412bfb
  412c2b:	scas   eax,DWORD PTR es:[edi]
  412c2c:	fisttp DWORD PTR [edi]
  412c2e:	add    BYTE PTR [eax-0xd],ah
  412c31:	loop   0x412c99
  412c33:	ret    0xe2db
  412c36:	jae    0x412c0e
  412c38:	mov    DWORD PTR [edx-0x1c],eax
  412c3b:	(bad)  
  412c3c:	fstp   TBYTE PTR [esi-0x7bbae303]
  412c42:	shr    bl,0x1d
  412c45:	push   0xffffffd4
  412c47:	jmp    0xd7056e23
  412c4c:	add    bl,ah
  412c4e:	add    al,0x27
  412c50:	jecxz  0x412c24
  412c52:	add    BYTE PTR [eax],al
  412c54:	iret   
  412c55:	cmp    al,0xe8
  412c57:	cmp    eax,DWORD PTR [eax]
  412c59:	add    BYTE PTR [ecx],al
  412c5b:	fidiv  WORD PTR [esi+0xa]
  412c5e:	cmp    ebp,DWORD PTR [edi-0x50b423bf]
  412c64:	push   ecx
  412c65:	loopne 0x412bf6
  412c67:	jmp    0xe282e378
  412c6c:	or     esi,DWORD PTR [edi+0x7d80b651]
  412c72:	call   0x66d:0xb8558501
  412c79:	data16 fistp QWORD PTR [eax+eax*8]
  412c7d:	je     0x412c4d
  412c7f:	or     DWORD PTR [ebx],0xdfd7c02
  412c85:	lsl    ecx,di
  412c88:	mov    ebp,0x4469cce8
  412c8d:	push   cs
  412c8e:	(bad)
  412c91:	(bad)  
  412c92:	mov    ch,0x66
  412c94:	push   ecx
  412c95:	shl    BYTE PTR [edi],0xc0
  412c98:	add    al,BYTE PTR [eax+0xf001179]
  412c9e:	inc    ecx
  412c9f:	je     0x412ca1
  412ca1:	add    BYTE PTR [ecx+eax*4+0x5b34080b],dh
  412ca8:	rol    BYTE PTR [eax],1
  412caa:	push   cs
  412cab:	add    dh,BYTE PTR [ecx+esi*1+0x4]
  412caf:	pop    esp
  412cb0:	sti    
  412cb1:	add    BYTE PTR [eax-0x5e749c1c],dh
  412cb7:	mov    edx,0x96913b66
  412cbc:	je     0x412ce7
  412cbe:	add    BYTE PTR [eax],al
  412cc0:	jnp    0x412c72
  412cc2:	push   ecx
  412cc3:	fmul   QWORD PTR [eax-0x1b]
  412cc6:	test   DWORD PTR [edi],eax
  412cc8:	out    dx,eax
  412cc9:	inc    ebx
  412cca:	fmul   QWORD PTR [eax-0x174114c0]
  412cd0:	popf   
  412cd1:	jecxz  0x412d4c
  412cd3:	inc    esp
  412cd4:	fidivr DWORD PTR [edi+0x7cda4243]
  412cdb:	push   ebx
  412cdc:	cmc    
  412cdd:	push   edi
  412cde:	ret    0x4602
  412ce1:	jecxz  0x412cd8
  412ce3:	packsswb mm3,QWORD PTR [esi-0x2beaff16]
  412cea:	jmp    0x120e:0x55ed73
  412cf1:	xchg   cl,al
  412cf3:	std    
  412cf4:	nop
  412cf5:	xor    ebp,ecx
  412cf7:	jae    0x412cfe
  412cf9:	mov    ebp,edx
  412cfb:	jae    0x412cee
  412cfd:	adc    ah,BYTE PTR [ecx-0x4]
  412d00:	bnd jmp 0x412d09
  412d03:	lock and BYTE PTR [ebx],bl
  412d06:	outs   dx,DWORD PTR ds:[esi]
  412d07:	cmp    dl,ah
  412d09:	inc    ebp
  412d0a:	int3   
  412d0b:	or     eax,0xfdd81612
  412d10:	dec    eax
  412d11:	sar    edx,cl
  412d13:	mov    ah,0x70
  412d15:	retf   
  412d16:	jmp    0xe3b4:0x706fc973
  412d1d:	fild   DWORD PTR [ecx+ecx*4]
  412d20:	xor    bl,ah
  412d22:	jns    0x412d67
  412d24:	add    BYTE PTR [eax],al
  412d26:	stos   DWORD PTR es:[edi],eax
  412d27:	bound  eax,QWORD PTR [eax-0x3]
  412d2a:	mov    ch,0x64
  412d2c:	repnz std 
  412d2e:	call   0x56b0:0x9e0c4071
  412d35:	std    
  412d36:	adc    BYTE PTR [esi-0x6e1239fa],cl
  412d3c:	int3   
  412d3d:	mov    bh,BYTE PTR [edx+0x65]
  412d40:	push   es
  412d41:	icebp  
  412d42:	push   ds
  412d43:	pop    ss
  412d44:	hlt    
  412d45:	adc    BYTE PTR [esi],dl
  412d47:	pop    ds
  412d48:	hlt    
  412d49:	xor    eax,0x94133302
  412d4f:	cmp    eax,0x3526fa9b
  412d54:	push   ebp
  412d55:	jmp    0x77ad:0xd7a48048
  412d5c:	lods   al,BYTE PTR ds:[esi]
  412d5d:	xlat   BYTE PTR ds:[ebx]
  412d5e:	sbb    al,0x56
  412d60:	das    
  412d61:	adc    esi,DWORD PTR [ebp+edi*1+0x77]
  412d65:	cli    
  412d66:	push   ss
  412d67:	and    DWORD PTR ds:0xc64820ea,ebp
  412d6d:	jle    0x412d52
  412d6f:	inc    esp
  412d70:	xor    ch,al
  412d72:	lods   eax,DWORD PTR ds:[esi]
  412d73:	add    bh,BYTE PTR [esi+edi*2+0x16fb7ff9]
  412d7a:	ins    BYTE PTR es:[edi],dx
  412d7b:	dec    esp
  412d7c:	sahf   
  412d7d:	ss iret 
  412d7f:	das    
  412d80:	inc    BYTE PTR [ecx-0x54]
  412d83:	ret    0x5060
  412d86:	in     eax,dx
  412d87:	jns    0x412d1d
  412d89:	out    dx,eax
  412d8a:	add    BYTE PTR [eax],al
  412d8c:	sbb    cl,BYTE PTR [esi-0x3d]
  412d8f:	jnp    0x412de7
  412d91:	(bad)  
  412d92:	and    BYTE PTR [edi-0x57],cl
  412d95:	repz fs sahf 
  412d98:	retf   0xe7e3
  412d9b:	jl     0x412df3
  412d9d:	cli    
  412d9e:	outs   dx,DWORD PTR ds:[esi]
  412d9f:	dec    edi
  412da0:	sar    DWORD PTR [ecx+0x2c],0xe4
  412da4:	and    al,0x36
  412da6:	xlat   BYTE PTR ds:[ebx]
  412da7:	jp     0x412df7
  412da9:	out    0xf2,al
  412dab:	mov    ebp,0x3677490
  412db0:	popf   
  412db1:	add    dh,BYTE PTR [edx+0x37]
  412db4:	xchg   ecx,eax
  412db5:	ja     0x412deb
  412db7:	in     al,0x4a
  412db9:	loope  0x412da4
  412dbb:	jp     0x412d93
  412dbd:	retf   0xf872
  412dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc1:	daa    
  412dc2:	sub    al,0xc
  412dc4:	mov    al,ds:0x9e1e007e
  412dc9:	add    al,BYTE PTR [eax]
  412dcb:	pusha  
  412dcc:	stos   BYTE PTR es:[edi],al
  412dcd:	jmp    0x5143:0xbd45b98b
  412dd4:	sahf   
  412dd5:	add    al,BYTE PTR [eax]
  412dd7:	jmp    0xa47b20a5
  412ddc:	xchg   edx,eax
  412ddd:	addr16 push edi
  412ddf:	jb     0x412e53
  412de1:	retf   0xbc89
  412de4:	inc    esi
  412de5:	sub    edi,DWORD PTR [edx+eiz*8]
  412de8:	mov    ebx,0x3aac8939
  412ded:	jns    0x412dbc
  412def:	loop   0x412df1
  412df1:	add    bl,dl
  412df3:	adc    bh,BYTE PTR [ebx-0x11]
  412df6:	xchg   ecx,eax
  412df7:	aaa    
  412df8:	clc    
  412df9:	rcl    BYTE PTR [edx],1
  412dfb:	stos   BYTE PTR es:[edi],al
  412dfc:	jae    0x412de5
  412dfe:	pop    ebp
  412dff:	sub    DWORD PTR [ebx-0x27],edi
  412e02:	xor    al,0x4d
  412e05:	ret    0x6eee
  412e08:	push   es
  412e09:	pusha  
  412e0a:	xor    dl,0x87
  412e0d:	ins    BYTE PTR es:[edi],dx
  412e0e:	repnz sub BYTE PTR [ebx-0x23],bh
  412e12:	inc    ebx
  412e13:	add    DWORD PTR [edi+0x7b80cd5c],eax
  412e19:	rcr    DWORD PTR [esi+0x3a120864],0xf2
  412e20:	jl     0x412e0c
  412e22:	pusha  
  412e23:	fld    DWORD PTR [edx+ebp*2]
  412e26:	push   ebx
  412e27:	fiadd  DWORD PTR [eax]
  412e29:	bound  eax,QWORD PTR [ebx+0x12]
  412e2c:	mov    edi,0x13c98c6
  412e31:	(bad)  
  412e32:	leave  
  412e33:	push   ebp
  412e34:	adc    al,0x1d
  412e36:	xor    ecx,DWORD PTR [ebx+edi*2-0xfb1f67b]
  412e3d:	ret    0xdecb
  412e40:	sub    DWORD PTR [eax],eax
  412e42:	adc    al,0x45
  412e44:	inc    edx
  412e45:	mov    DWORD PTR [ecx-0x17aa7846],ecx
  412e4b:	(bad)  
  412e4c:	push   eax
  412e4d:	cld    
  412e4e:	dec    DWORD PTR [eax-0x14]
  412e51:	sub    esi,esp
  412e53:	fisubr DWORD PTR [ecx+ebx*8+0x5d060000]
  412e5a:	jno    0x412e34
  412e5c:	inc    ebx
  412e5d:	jnp    0x412e51
  412e5f:	cmp    esi,DWORD PTR [edx+0x6b]
  412e62:	or     BYTE PTR [ebx+0x4d85ba01],cl
  412e68:	int3   
  412e69:	mov    esi,0xce118b06
  412e6e:	test   DWORD PTR [ebp-0x24],edx
  412e71:	test   DWORD PTR [ecx+0x1c],edi
  412e74:	add    al,0x59
  412e76:	dec    ebx
  412e77:	add    ch,BYTE PTR [ecx]
  412e79:	pop    es
  412e7a:	mov    DWORD PTR [edi-0x6],ecx
  412e7d:	pop    esi
  412e7e:	push   ecx
  412e7f:	adc    bl,ah
  412e81:	jp     0x412ed4
  412e83:	adc    al,0xc5
  412e85:	out    0x2,eax
  412e87:	cmp    ebp,DWORD PTR [esi-0xb327326]
  412e8d:	add    eax,0xca39ff00
  412e92:	cmp    BYTE PTR [ebp-0x60],0x6
  412e96:	xchg   DWORD PTR [ebp-0x40],esi
  412e99:	push   edx
  412e9a:	pop    ss
  412e9b:	mov    eax,DWORD PTR [ecx-0x54f37712]
  412ea1:	pop    esp
  412ea2:	dec    ecx
  412ea3:	cli    
  412ea4:	sub    al,0x3a
  412ea6:	xor    eax,DWORD PTR [ecx]
  412ea8:	sub    al,0x1a
  412eaa:	xor    eax,DWORD PTR [edx]
  412eac:	ds sbb esi,edi
  412eaf:	mov    BYTE PTR [eax+0x4b82ff31],al
  412eb5:	add    cl,BYTE PTR [edx-0x2239cfb3]
  412ebb:	add    al,0x0
  412ebd:	add    BYTE PTR [ebp-0x6e77461b],bl
  412ec3:	mov    eax,0x89854b77
  412ec8:	mov    ebx,0x78e77cc0
  412ecd:	push   ecx
  412ece:	push   0xffffffe5
  412ed0:	mov    bh,0x1
  412ed2:	inc    ebp
  412ed3:	arpl   WORD PTR [eax],di
  412ed5:	xor    eax,0x2bd6c9c
  412eda:	and    al,0xbe
  412edc:	aad    0x87
  412ede:	loopne 0x412f13
  412ee0:	jnp    0x412f3d
  412ee2:	imul   esi,esp,0x54de7bc0
  412ee8:	dec    edi
  412ee9:	call   0x226dd14
  412eee:	dec    esp
  412eef:	bound  ecx,QWORD PTR [edi-0x28]
  412ef2:	push   ss
  412ef3:	jbe    0x412ed2
  412ef5:	xchg   DWORD PTR [eax-0xd],esi
  412ef8:	fcomp  DWORD PTR [edx]
  412efa:	es scas al,BYTE PTR es:[edi]
  412efc:	in     eax,0xe9
  412efe:	mov    al,0x6c
  412f00:	addr16 clc 
  412f02:	add    dh,BYTE PTR [edi+0xd]
  412f05:	mov    DWORD PTR [eax-0xd],edx
  412f08:	js     0x412f7d
  412f0a:	xchg   ebp,eax
  412f0b:	push   esp
  412f0c:	inc    edi
  412f0d:	or     BYTE PTR [esi+0xe347afa],bl
  412f13:	stos   BYTE PTR es:[edi],al
  412f14:	sub    cl,BYTE PTR [ebx-0xb]
  412f17:	data16 fimul WORD PTR [ecx+0x43e6db60]
  412f1e:	(bad)
  412f21:	call   0xfe572f26
  412f26:	jmp    0x412f61
  412f28:	push   0xb2d0657f
  412f2d:	and    eax,0xbb5889e8
  412f32:	sub    al,0x4b
  412f34:	mov    eax,ds:0x9b8275bf
  412f39:	add    esp,DWORD PTR [esi-0x174b331a]
  412f3f:	cmp    BYTE PTR [ecx-0x7dfe773e],al
  412f45:	dec    edi
  412f46:	xchg   DWORD PTR [ebx-0x4c],eax
  412f49:	inc    ebp
  412f4a:	fcomi  st,st(6)
  412f4c:	es inc eax
  412f4e:	jge    0x412f36
  412f50:	push   0x14f82c8c
  412f55:	dec    esi
  412f56:	mov    edi,DWORD PTR [ebx-0x5b]
  412f59:	mov    ebp,DWORD PTR [esi]
  412f5b:	inc    esi
  412f5c:	repz cmp esi,DWORD PTR [eax]
  412f5f:	shl    DWORD PTR [ebp+0x34c41a02],0xd6
  412f66:	mov    ah,0x7a
  412f68:	dec    ecx
  412f69:	test   BYTE PTR [ebx+0x53],dl
  412f6c:	and    al,0x4e
  412f6e:	out    dx,eax
  412f6f:	jp     0x412f53
  412f71:	(bad)  
  412f72:	pushf  
  412f73:	dec    esi
  412f74:	sbb    cl,BYTE PTR [esi+0x37]
  412f77:	jp     0x412fdf
  412f79:	bnd jno 0x412f65
  412f7c:	and    al,0x36
  412f7e:	jmp    0x412f82
  412f80:	aad    0x3
  412f82:	adc    DWORD PTR [edx],esi
  412f84:	or     ecx,ecx
  412f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f87:	in     eax,0x0
  412f89:	add    BYTE PTR [ebp-0x62195338],bl
  412f8f:	mov    DWORD PTR [ebx+esi*4+0x7c275e22],ebp
  412f96:	pop    esi
  412f97:	jmp    0x3ce:0x8da8c4b2
  412f9e:	popf   
  412f9f:	add    dl,BYTE PTR [edx]
  412fa1:	mov    esp,0xd99f4e22
  412fa6:	pushf  
  412fa7:	mov    esi,DWORD PTR [eax+edi*8]
  412faa:	and    eax,0x4e7ba746
  412faf:	out    dx,al
  412fb0:	add    dl,ah
  412fb2:	cwde   
  412fb3:	lea    eax,[eax]
  412fb5:	jb     0x412f55
  412fb7:	add    al,BYTE PTR [eax]
  412fb9:	add    bl,BYTE PTR [edi-0x79]
  412fbc:	inc    ebx
  412fbd:	mov    ch,0x74
  412fbf:	add    DWORD PTR [ecx+0x106c4524],ecx
  412fc5:	xor    BYTE PTR [esi],al
  412fc7:	dec    esp
  412fc8:	hlt    
  412fc9:	pusha  
  412fca:	mov    dl,0xda
  412fcc:	cmp    DWORD PTR [eax+0x248701fa],ebp
  412fd2:	ins    DWORD PTR es:[edi],dx
  412fd3:	mov    DWORD PTR [ebx-0x5f],eax
  412fd6:	mov    ah,0x9f
  412fd8:	jnp    0x412fc4
  412fda:	xlat   BYTE PTR ds:[ebx]
  412fdb:	inc    ebx
  412fdc:	clc    
  412fdd:	retw   0xdda
  412fe1:	xchg   esi,eax
  412fe2:	xchg   edx,eax
  412fe3:	jmp    0xb4b5:0xd32dcfd
  412fea:	push   edx
  412feb:	fnsave [ebx+0x39]
  412fee:	add    BYTE PTR [eax],al
  412ff0:	mov    ah,0x5b
  412ff2:	or     BYTE PTR [ecx+0x3e],dl
  412ff5:	(bad)  
  412ff6:	std    
  412ff7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412ff9:	inc    ebx
  412ffa:	clc    
  412ffb:	fidiv  WORD PTR [ecx]
  412ffd:	inc    ebx
  412ffe:	hlt    
  412fff:	push   0x72
  413001:	mov    edx,0xbe6a6a00
  413006:	add    BYTE PTR [edx+0x62],ch
  413009:	loop   0x41300b
  41300b:	push   0x5a
  41300d:	out    0x0,al
  41300f:	jb     0x413073
  413011:	ror    BYTE PTR [ebx-0x39b75f43],cl
  413017:	out    dx,al
  413018:	sahf   
  413019:	xchg   DWORD PTR [ebx+0x31],esi
  41301c:	push   esi
  41301d:	inc    ebx
  41301e:	mov    ah,0x70
  413020:	xchg   ebx,eax
  413021:	mov    dh,0xc6
  413023:	and    al,0xf1
  413025:	faddp  st(3),st
  413027:	sub    al,0xac
  413029:	fild   WORD PTR [ecx+ebp*4+0x815040]
  413030:	pop    ecx
  413031:	out    0x0,al
  413033:	jne    0x412ff6
  413035:	pop    ecx
  413036:	add    cl,BYTE PTR [ecx+0x287ce71]
  41303c:	(bad)  
  41303d:	sbb    eax,0xe78175d8
  413042:	inc    ecx
  413043:	loopne 0x413074
  413045:	or     eax,0x2107d7f
  41304a:	jno    0x413053
  41304c:	inc    edx
  41304d:	sbb    eax,0x1ced000f
  413052:	fdivr  QWORD PTR [ebx]
  413054:	add    BYTE PTR [eax],al
  413056:	ror    edx,0x71
  413059:	adc    ebx,ebp
  41305b:	sbb    al,0xe4
  41305d:	(bad)  
  41305e:	mov    ecx,0x40c27fb2
  413063:	cmp    DWORD PTR [ecx-0x2c],0x34
  413067:	addr16 enter 0x30eb,0xa0
  41306c:	inc    ecx
  41306d:	rol    BYTE PTR [ebx+ebx*2+0x41],1
  413071:	in     al,0x9d
  413073:	sbb    eax,0x5b2c76e0
  413078:	inc    ecx
  413079:	fdivr  DWORD PTR [edi+0x2ebdc14]
  41307f:	pop    ebx
  413080:	inc    ecx
  413081:	fmul   QWORD PTR [edi+0x2980d814]
  413087:	call   0x2b32a48c
  41308c:	inc    ecx
  41308d:	les    edx,FWORD PTR [eax]
  41308f:	stc    
  413090:	jg     0x4130a1
  413092:	push   es
  413093:	pop    edx
  413094:	add    al,0x1e
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	mov    cl,0xbd
  413099:	jmp    0x5ac5:0x1e5459fc
  4130a0:	rol    cl,1
  4130a2:	out    dx,al
  4130a3:	(bad)  
  4130a4:	xchg   BYTE PTR [ebp+0x0],al
  4130a7:	enter  0x18e8,0x9d
  4130ab:	arpl   WORD PTR [eax],di
  4130ad:	push   ds
  4130ae:	lahf   
  4130af:	arpl   WORD PTR [eax+0x1e],cx
  4130b2:	sahf   
  4130b3:	lods   eax,DWORD PTR ds:[esi]
  4130b4:	inc    edi
  4130b5:	(bad)  
  4130b6:	pushf  
  4130b7:	push   0x4ca
  4130bc:	sbb    eax,0xabfff517
  4130c1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c3:	add    BYTE PTR [ebp-0x6af27e15],bl
  4130c9:	imul   ebx,DWORD PTR [edi-0x30],0xffffff9d
  4130cd:	popa   
  4130ce:	or     DWORD PTR [edx+esi*4+0x6b],esi
  4130d2:	pop    edi
  4130d3:	std    
  4130d4:	popf   
  4130d5:	fisttp WORD PTR [eax]
  4130d7:	cmp    eax,ebx
  4130d9:	pop    ds
  4130da:	pop    eax
  4130db:	xor    al,0x91
  4130dd:	out    dx,eax
  4130de:	mov    DWORD PTR ds:0x88ffbf25,eax
  4130e4:	pop    esp
  4130e5:	sub    ch,ah
  4130e7:	or     BYTE PTR ds:0x17feffa7,dl
  4130ed:	sub    al,bl
  4130ef:	call   0xbc909381
  4130f4:	pop    esp
  4130f5:	xor    bh,ah
  4130f7:	xchg   ecx,esp
  4130f9:	mov    ebp,0xb5d18803
  4130fe:	push   es
  4130ff:	(bad)  
  413100:	pusha  
  413101:	sub    al,0x3
  413103:	sbb    ebx,0x9908eeee
  413109:	fcmovnb st,st(7)
  41310b:	inc    ebx
  41310c:	add    ch,bl
  41310e:	mov    DWORD PTR ds:0x8bb175fa,eax
  413114:	cdq    
  413115:	in     eax,0xe2
  413117:	jae    0x4130fa
  413119:	fistp  DWORD PTR [eax-0x8]
  41311c:	loop   0x41317b
  41311e:	aad    0x50
  413120:	add    BYTE PTR [eax],al
  413122:	ficom  DWORD PTR [ebp-0x2f]
  413125:	call   0xe3243362
  41312a:	enter  0xd700,0x88
  41312e:	fst    QWORD PTR [esi+0x11]
  413131:	jecxz  0x413161
  413133:	fcmovu st,st(6)
  413135:	call   0xcb1:0x58c6ea66
  41313c:	jbe    0x413176
  41313e:	mov    cl,0xdc
  413140:	cmp    al,0xd4
  413142:	and    al,0x56
  413144:	outs   dx,DWORD PTR ds:[esi]
  413145:	leave  
  413146:	cwde   
  413147:	add    DWORD PTR [edx+0x60],esi
  41314a:	xchg   ebp,eax
  41314b:	mov    ah,BYTE PTR [edx+eiz*8]
  41314e:	adc    eax,0x29eb9646
  413153:	ror    BYTE PTR [esi+0x3b4624e2],1
  413159:	les    edi,FWORD PTR [ebp+0x1]
  41315c:	pop    ss
  41315d:	jecxz  0x41314d
  41315f:	shl    BYTE PTR [edi+ecx*1-0x45],cl
  413163:	xor    DWORD PTR [edi-0x30],edi
  413166:	sbb    ebx,esp
  413168:	pushw  es
  41316a:	dec    ebp
  41316b:	and    BYTE PTR [edi+ebp*8-0x10537853],0x1c
  413173:	outs   dx,BYTE PTR ds:[esi]
  413174:	sbb    esi,ebx
  413176:	jne    0x4131bd
  413178:	daa    
  413179:	adc    bl,BYTE PTR [ecx]
  41317b:	dec    edi
  41317c:	cmp    eax,0xac8020e2
  413181:	jmp    0x413130
  413183:	xchg   DWORD PTR [ebx+ebp*8+0x6e1c0000],esp
  41318a:	das    
  41318b:	repz lds eax,FWORD PTR [ebp+0x57]
  41318f:	adc    dl,BYTE PTR [ecx]
  413191:	and    edx,DWORD PTR ds:0x623bf8e2
  413197:	leave  
  413198:	push   ebx
  413199:	leave  
  41319a:	sub    DWORD PTR [edi],ecx
  41319c:	popf   
  41319d:	xor    eax,0x4614ef72
  4131a2:	add    ch,ah
  4131a4:	mov    ebx,0x27de103f
  4131a9:	jae    0x4131ab
  4131ab:	jmp    0x7297634e
  4131b0:	test   BYTE PTR fs:[eax],0x5c
  4131b4:	lea    edx,[ecx]
  4131b6:	fst    DWORD PTR [eax]
  4131b8:	jb     0x4131b0
  4131ba:	jne    0x4131c5
  4131bc:	sbb    BYTE PTR [eax],dh
  4131be:	or     BYTE PTR [ebp+edx*4+0x11],ch
  4131c2:	push   eax
  4131c3:	bound  esp,QWORD PTR [edx+ebp*8-0x1e]
  4131c7:	mov    ebx,0x5f0ddd7c
  4131cc:	aam    0x1b
  4131ce:	jmp    DWORD PTR [ebx]
  4131d0:	xchg   ecx,eax
  4131d1:	or     eax,0x1912eb6
  4131d6:	fcom   st(2)
  4131d8:	mov    bl,0xf6
  4131da:	jno    0x413165
  4131dc:	sbb    BYTE PTR [ebp+0x18],al
  4131df:	jb     0x41318b
  4131e1:	test   BYTE PTR [ecx+0x4301de16],0xdd
  4131e8:	cdq    
  4131e9:	mov    ah,0x89
  4131eb:	aaa    
  4131ec:	add    BYTE PTR [eax],al
  4131ee:	and    ecx,ebx
  4131f0:	call   ebx
  4131f2:	dec    esi
  4131f3:	sbb    dh,dl
  4131f5:	ficom  DWORD PTR [edx+0x31611788]
  4131fb:	sbb    edi,DWORD PTR [edi]
  4131fd:	add    bl,BYTE PTR [ebx+0x50]
  413200:	not    BYTE PTR [edx+0x71]
  413203:	cmp    cl,0xeb
  413206:	jae    0x4131fa
  413208:	cmp    BYTE PTR [ebx],bh
  41320a:	push   0x190089fd
  41320f:	cli    
  413210:	aas    
  413211:	test   al,0xa1
  413213:	enter  0x1f72,0x8
  413217:	icebp  
  413218:	jg     0x41322c
  41321a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41321b:	dec    edi
  41321c:	push   cs
  41321d:	add    bh,bl
  41321f:	mov    ah,0x6f
  413221:	or     ch,BYTE PTR [esi-0x29]
  413224:	test   DWORD PTR [eax],ebx
  413226:	add    al,0x40
  413228:	aaa    
  413229:	retf   0xb956
  41322c:	xchg   DWORD PTR [ebp-0x30],eax
  41322f:	add    eax,0x444d0c43
  413234:	or     al,0x3b
  413236:	mov    esi,edx
  413238:	or     al,0x86
  41323a:	dec    eax
  41323b:	loope  0x413238
  41323d:	inc    DWORD PTR [edx+0x2b109d1d]
  413243:	inc    esi
  413244:	add    BYTE PTR [ebp+0x46],bl
  413247:	(bad)  
  413248:	std    
  413249:	push   esp
  41324a:	(bad)  
  41324b:	jmp    0xf3d17fd7
  413250:	mov    dl,0x51
  413252:	add    BYTE PTR [eax],al
  413254:	jns    0x4132d5
  413256:	in     al,dx
  413257:	inc    esp
  413258:	mov    bh,0x1c
  41325a:	das    
  41325b:	fld    TBYTE PTR [ebx+0x5f66f887]
  413261:	(bad)  
  413262:	or     eax,DWORD PTR [edx+ebx*2+0x43ffffff]
  413269:	jnp    0x4132d8
  41326b:	pop    es
  41326c:	call   0xdc:0xb80feef7
  413273:	add    BYTE PTR [ebx+esi*8],dh
  413276:	mov    dl,0x41
  413278:	inc    ebp
  413279:	dec    edi
  41327b:	ud2    
  41327d:	nop
  41327e:	test   DWORD PTR [ebp+0x6c],edx
  413281:	imul   eax,DWORD PTR [edi-0x93c8af],0xffffffd5
  413288:	add    edi,DWORD PTR [ebx-0x2e]
  41328b:	mov    DWORD PTR [ecx],ebp
  41328d:	ret    0x5d85
  413290:	pusha  
  413291:	mov    WORD PTR [ecx-0x14],ds
  413294:	lea    ebx,[eax]
  413296:	int3   
  413297:	mov    ebx,DWORD PTR [ebp-0x1abc73e5]
  41329d:	(bad)
  4132a1:	sub    al,0x6b
  4132a3:	pusha  
  4132a4:	inc    ebx
  4132a5:	push   edx
  4132a6:	ss loopne 0x4132ec
  4132a9:	xchg   esp,eax
  4132aa:	shl    DWORD PTR [ecx-0x68],1
  4132ad:	bound  edx,QWORD PTR [esi-0x10]
  4132b0:	mov    dh,0xe9
  4132b2:	push   cs
  4132b3:	mov    ch,0xdd
  4132b5:	push   edx
  4132b6:	inc    edi
  4132b7:	lock add BYTE PTR [eax],al
  4132ba:	inc    ebx
  4132bb:	hlt    
  4132bc:	ss enter 0x6ca2,0x5d
  4132c1:	add    bl,BYTE PTR [ebp+0x208163eb]
  4132c7:	fwait
  4132c8:	add    al,0xd
  4132ca:	and    DWORD PTR [edi],edx
  4132cc:	add    al,BYTE PTR [eax]
  4132ce:	popf   
  4132cf:	mov    eax,0xd08d5396
  4132d4:	xchg   ebx,eax
  4132d5:	inc    ebp
  4132d6:	int    0xe8
  4132d8:	scas   al,BYTE PTR es:[edi]
  4132d9:	ret    0x2624
  4132dc:	in     al,dx
  4132dd:	or     eax,0x87012a2a
  4132e2:	shl    BYTE PTR [edi-0x75],1
  4132e5:	inc    ebx
  4132e6:	jns    0x41333c
  4132e8:	inc    edi
  4132e9:	les    esp,FWORD PTR [esi]
  4132eb:	(bad)  
  4132ec:	in     eax,0x29
  4132ee:	pop    ebx
  4132ef:	mov    eax,0xcbb7c096
  4132f4:	aaa    
  4132f5:	data16 xchg BYTE PTR [ebx],bl
  4132f8:	push   ecx
  4132f9:	add    esp,DWORD PTR [esi+edx*4]
  4132fc:	aad    0xe9
  4132fe:	fwait
  4132ff:	mov    eax,0xa614c096
  413304:	aad    0x66
  413306:	mov    es,bp
  413309:	or     eax,0x2021e
  41330e:	popf   
  41330f:	rol    DWORD PTR [edx-0x18fdee85],0xe
  413316:	sbb    eax,edi
  413318:	call   0x5e4ad020
  41331d:	cmp    DWORD PTR [eax],eax
  41331f:	add    cl,ch
  413321:	or     BYTE PTR [esi+0x47],dl
  413324:	xchg   ebp,eax
  413325:	or     DWORD PTR [esi],edi
  413327:	into   
  413328:	nop
  413329:	xchg   ecx,eax
  41332a:	je     0x41330f
  41332c:	es ss fcomp st(6)
  413330:	mov    al,ds:0xf80f0fa9
  413335:	ret    0x5870
  413338:	lds    ecx,FWORD PTR [eax]
  41333a:	xchg   ebp,eax
  41333b:	push   esi
  41333c:	ins    DWORD PTR es:[edi],dx
  41333d:	add    eax,0x379cdc2c
  413342:	iret   
  413343:	push   cs
  413344:	clc    
  413345:	mov    edi,0x8cd5070
  41334a:	mov    ?,WORD PTR [ebp-0x7c1cb9dc]
  413350:	retf   0x6002
  413353:	cmp    BYTE PTR [ebp-0x76],ah
  413356:	sub    al,0xa0
  413358:	nop
  413359:	jle    0x41330f
  41335b:	add    ebx,DWORD PTR [ebp-0x52b19efe]
  413361:	adc    BYTE PTR [eax+0x7217ee04],0xd3
  413368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413369:	ret    
  41336a:	out    dx,al
  41336b:	xchg   BYTE PTR [edi],dl
  41336d:	add    ah,bh
  41336f:	add    esp,DWORD PTR [eax+eax*2]
  413372:	iret   
  413373:	mov    dl,dh
  413375:	jmp    0x5070:0xca9cc5ea
  41337c:	pop    ebp
  41337d:	sbb    al,0x28
  41337f:	push   edx
  413380:	xchg   ebp,eax
  413381:	mov    ebx,DWORD PTR [esi+0x750000f7]
  413387:	retf   0xcdea
  41338a:	pop    ss
  41338b:	out    dx,eax
  41338c:	out    0x19,eax
  41338e:	lods   eax,DWORD PTR ds:[esi]
  41338f:	pop    es
  413390:	add    BYTE PTR [esi+edi*1+0x3],ch
  413394:	add    cl,ch
  413396:	pop    esi
  413397:	sbb    DWORD PTR [ebx+0x29],eax
  41339a:	ins    BYTE PTR es:[edi],dx
  41339b:	in     eax,0x1
  41339d:	xchg   esi,eax
  41339e:	stos   BYTE PTR es:[edi],al
  41339f:	sbb    ecx,esi
  4133a1:	lahf   
  4133a2:	cs loopne 0x413328
  4133a5:	call   0xc13648
  4133aa:	pushf  
  4133ab:	push   ebx
  4133ac:	aas    
  4133ad:	jb     0x413395
  4133af:	sbb    ecx,eax
  4133b1:	out    0x1b,al
  4133b3:	push   ecx
  4133b4:	(bad)  
  4133b5:	call   0x186bd58
  4133ba:	adc    al,0x34
  4133bc:	call   0xd04313ab
  4133c1:	adc    bl,bh
  4133c3:	push   ecx
  4133c4:	sbb    esp,DWORD PTR [edx+0x50]
  4133c7:	out    dx,al
  4133c8:	sub    BYTE PTR [ecx+0x3487e79c],bh
  4133ce:	popa   
  4133cf:	mov    DWORD PTR [ebx-0x57],esi
  4133d2:	sti    
  4133d3:	mov    DWORD PTR [edi+eiz*8],esi
  4133d6:	add    BYTE PTR [edx],bl
  4133d8:	xor    BYTE PTR [esp+eax*8],bl
  4133db:	add    eax,0x72c495eb
  4133e1:	test   BYTE PTR [ebp+eax*2+0x5055d20c],bl
  4133e8:	into   
  4133e9:	nop
  4133ea:	add    BYTE PTR [eax],al
  4133ec:	adc    bh,0xfd
  4133ef:	jmp    0xe6460312
  4133f4:	sbb    edx,DWORD PTR [eax]
  4133f6:	(bad)  
  4133f7:	call   0x2309bd9a
  4133fc:	pop    esp
  4133fd:	add    eax,0x29e0d85
  413402:	add    BYTE PTR [edx-0x28],ah
  413405:	cli    
  413406:	mov    BYTE PTR [esi+esi*1+0x3700bf01],dh
  41340d:	xchg   ebx,eax
  41340e:	aaa    
  41340f:	ret    0xda57
  413412:	mov    BYTE PTR [edi-0x10],dh
  413415:	sub    eax,esi
  413417:	add    eax,ebp
  413419:	mov    esi,DWORD PTR [ecx-0x40]
  41341c:	(bad)  
  41341d:	das    
  41341e:	ror    BYTE PTR [ebx+0x3036fcd0],0x11
  413425:	rol    BYTE PTR [eax-0x3e05ff40],cl
  41342b:	jb     0x4133b8
  41342d:	add    DWORD PTR [ebx+0xc],ecx
  413430:	(bad)  
  413432:	jbe    0x413404
  413434:	popf   
  413435:	lods   eax,DWORD PTR ds:[esi]
  413436:	add    BYTE PTR [eax],al
  413438:	mov    ah,0x5
  41343a:	mov    dh,0x47
  41343c:	jne    0x4134a9
  41343e:	rol    BYTE PTR [eax],0xa0
  413441:	(bad)  
  413442:	inc    DWORD PTR [edx+0x7401324b]
  413448:	mov    esi,0x17fc4103
  41344d:	shl    DWORD PTR [ebx+eax*2-0x147c0000],cl
  413454:	or     cl,BYTE PTR [ebx+0x4489e2b9]
  41345a:	jne    0x41344d
  41345c:	test   BYTE PTR [ebp+0x38],al
  41345f:	mov    eax,DWORD PTR [ecx-0x14]
  413462:	out    dx,eax
  413463:	inc    esp
  413464:	cld    
  413465:	lea    edi,[eax-0x6e72f3ff]
  41346b:	ret    0xdde8
  41346e:	div    BYTE PTR [esi+0x70484fb]
  413474:	test   BYTE PTR [ecx-0x74fffdbc],bh
  41347a:	adc    edx,0x5fd844ff
  413480:	xchg   DWORD PTR [ebp-0x1c],edx
  413483:	pop    edi
  413484:	mov    ebp,0x63e39dc2
  413489:	xchg   DWORD PTR [ebp+0x395388bd],ecx
  41348f:	mov    dl,0xc2
  413492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413493:	mov    ebp,0xc59f508a
  413498:	mov    BYTE PTR [ebx+0xd],dl
  41349b:	mov    esi,0x8595c2c2
  4134a0:	mov    dl,BYTE PTR [eax-0x5f]
  4134a3:	jge    0x41342d
  4134a5:	push   ebx
  4134a6:	jmp    0x9603f730
  4134ab:	jge    0x413437
  4134ad:	push   eax
  4134ae:	fwait
  4134af:	push   eax
  4134b0:	xor    al,0x50
  4134b2:	and    al,0x7c
  4134b4:	or     DWORD PTR [ecx-0x60ae0000],eax
  4134ba:	push   es
  4134bb:	mov    edx,DWORD PTR [ebp-0x49]
  4134be:	push   ebp
  4134bf:	or     eax,0x51ec36c2
  4134c4:	mov    edx,0xc54f982e
  4134c9:	(bad)  
  4134ca:	fdivr  st,st(5)
  4134cc:	stos   BYTE PTR es:[edi],al
  4134cd:	shl    BYTE PTR [esi],0xd
  4134d0:	jmp    0x4134f6
  4134d2:	inc    ebx
  4134d3:	dec    eax
  4134d4:	adc    DWORD PTR [esp+ecx*2],eax
  4134d7:	je     0x413496
  4134d9:	and    ecx,DWORD PTR [esp+esi*2-0x5d]
  4134dd:	push   0x709dfc5f
  4134e2:	ss std 
  4134e4:	lock ret 
  4134e6:	lea    edx,[ebx+0x49]
  4134e9:	ins    BYTE PTR es:[edi],dx
  4134ea:	dec    edi
  4134eb:	clc    
  4134ec:	push   ss
  4134ed:	push   ds
  4134ee:	mov    ah,0x55
  4134f0:	push   ss
  4134f1:	mov    ds:0x545796ec,al
  4134f6:	fldl2t 
  4134f8:	test   DWORD PTR [edi+ecx*2-0x28],ecx
  4134fc:	push   ss
  4134fd:	out    dx,al
  4134fe:	scas   eax,DWORD PTR es:[edi]
  4134ff:	std    
  413500:	enter  0x5f02,0x8f
  413504:	fidiv  WORD PTR [edx+0x4c4532b8]
  41350a:	pop    ebp
  41350b:	fld    TBYTE PTR [eax]
  41350d:	jmp    0xbaf0100c
  413512:	jb     0x413545
  413514:	icebp  
  413515:	aam    0xb4
  413517:	(bad)  [edi+edi*1]
  41351a:	pop    ss
  41351b:	xor    eax,0xea700000
  413520:	gs (bad) 
  413522:	add    ch,dl
  413524:	jo     0x413567
  413526:	stc    
  413527:	jle    0x413550
  413529:	push   eax
  41352a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41352b:	mov    DWORD PTR [edi+eiz*8-0x76e4c118],esp
  413532:	pop    ecx
  413533:	add    esi,ebx
  413535:	mov    WORD PTR [esi-0x1a],ds
  413538:	jb     0x41357b
  41353a:	leave  
  41353b:	add    ch,BYTE PTR [edi+ebx*8-0x7124b8ec]
  413542:	data16 (bad) 
  413544:	shr    BYTE PTR [edx-0x71212b4a],1
  41354a:	dec    esi
  41354b:	loop   0x413537
  41354d:	xor    BYTE PTR [ebp-0x5f26cf16],ch
  413553:	aam    0x6c
  413555:	mov    esi,0x650fe0e
  41355a:	repz out 0xf0,eax
  41355d:	push   ss
  41355e:	pop    ebp
  41355f:	pop    ebp
  413560:	pusha  
  413561:	inc    eax
  413562:	xchg   ecx,eax
  413563:	push   0x6de88eb
  413568:	aaa    
  413569:	fucomi st,st(6)
  41356b:	or     cl,BYTE PTR ds:0x50b5cc5
  413571:	(bad)  
  413572:	mov    BYTE PTR [edi+ecx*4],0xf5
  413576:	sti    
  413577:	add    edi,esp
  413579:	jg     0x4135d8
  41357b:	dec    edi
  41357c:	add    dh,bl
  41357e:	addr16 push eax
  413580:	in     al,dx
  413581:	outs   dx,BYTE PTR ds:[esi]
  413582:	add    BYTE PTR [eax],al
  413584:	in     eax,dx
  413585:	mov    dh,0xfd
  413587:	fsub   QWORD PTR [esi-0x6637ff16]
  41358d:	add    al,BYTE PTR [ecx+ebp*1+0x5730ffda]
  413594:	fsub   st(1),st
  413596:	add    bh,dl
  413598:	in     al,dx
  413599:	aad    0x73
  41359b:	sbb    eax,0x36825b06
  4135a0:	out    0x89,eax
  4135a2:	mov    BYTE PTR [edx-0x68],0x11
  4135a6:	rol    dh,0xb4
  4135a9:	cmp    edi,eax
  4135ab:	sub    esp,DWORD PTR [esi-0x4dfcdfe]
  4135b1:	dec    dh
  4135b3:	add    esp,eax
  4135b5:	xchg   ebx,eax
  4135b6:	test   al,0xe8
  4135b8:	push   0xffffffda
  4135ba:	mov    DWORD PTR [ebp+0x6065feb2],edx
  4135c0:	mov    al,ds:0x96c54489
  4135c5:	mov    cl,BYTE PTR [eax]
  4135c7:	stos   DWORD PTR es:[edi],eax
  4135c8:	test   eax,0xc5725302
  4135cd:	sub    esp,0x552c71e5
  4135d3:	inc    ebx
  4135d4:	popa   
  4135d5:	push   0xe2aac608
  4135da:	test   eax,0xf889992a
  4135df:	bound  eax,QWORD PTR [esi-0x2b]
  4135e2:	adc    esp,ebp
  4135e4:	mov    DWORD PTR [ebx],edx
  4135e6:	add    BYTE PTR [edx+0x0],dh
  4135e9:	add    BYTE PTR [ecx+0x7f],dl
  4135ec:	imul   dh
  4135ee:	repnz data16 (bad) 
  4135f1:	call   0xe1bcb794
  4135f6:	sahf   
  4135f7:	jnp    0x413617
  4135f9:	add    BYTE PTR [edx-0x3299fc7b],ch
  4135ff:	inc    eax
  413600:	or     BYTE PTR [edi],cl
  413602:	mov    eax,DWORD PTR [ecx+0x4]
  413605:	(bad)  
  413606:	jns    0x4135c1
  413608:	add    BYTE PTR [esi-0x53],ah
  41360b:	inc    eax
  41360c:	or     cl,BYTE PTR [edi]
  41360e:	mov    eax,0x34fffd3d
  413613:	or     dh,BYTE PTR [ebx+0x4d0f3c4e]
  413619:	push   ebx
  41361a:	arpl   bx,sp
  41361c:	mov    cl,0x10
  41361e:	inc    esp
  41361f:	inc    DWORD PTR [eax+0x4dd848c0]
  413625:	push   0xffffff9c
  41362a:	ret    
  41362b:	inc    ebx
  41362c:	or     BYTE PTR [ebp-0x72b21cc6],cl
  413632:	cmp    DWORD PTR [edi],eax
  413634:	push   eax
  413635:	push   ebx
  413636:	pushf  
  413637:	int3   
  413638:	mov    bh,0x1
  41363a:	(bad)  
  41363b:	in     eax,0x2
  41363d:	xor    eax,DWORD PTR [edi+eax*4-0x41c6efba]
  413644:	or     eax,DWORD PTR [eax+eiz*8+0x2fffffff]
  41364b:	sub    al,0x8
  41364d:	data16 add BYTE PTR [eax],al
  413650:	das    
  413651:	inc    edx
  413652:	push   cs
  413653:	ud2    
  413655:	dec    ecx
  413656:	or     BYTE PTR [esi-0xb],ah
  413659:	out    0xff,al
  41365b:	xchg   edx,ecx
  41365d:	test   BYTE PTR [edx],0xb6
  413660:	inc    esp
  413661:	sti    
  413662:	stos   BYTE PTR es:[edi],al
  413663:	sar    ebp,0x43
  413666:	or     al,0xa8
  413668:	ja     0x4136ac
  41366a:	push   es
  41366b:	and    DWORD PTR [edx+edi*4],0x7f
  41366f:	sar    BYTE PTR [eax+0x7d],0x46
  413673:	or     al,0x9d
  413675:	gs inc eax
  413677:	push   cs
  413678:	adc    BYTE PTR [edx],ah
  41367a:	and    al,0x88
  41367c:	sahf   
  41367d:	push   ebp
  41367e:	inc    eax
  41367f:	push   cs
  413680:	and    eax,0xe3c6212a
  413685:	mov    ebp,0xe11e6601
  41368a:	pop    es
  41368b:	or     BYTE PTR [edx-0x24773eb2],ch
  413691:	cld    
  413692:	pop    ss
  413693:	push   DWORD PTR [ecx-0x254af73b]
  413699:	mov    cl,0x84
  41369b:	clc    
  41369c:	lods   eax,DWORD PTR ds:[esi]
  41369d:	mov    ?,eax
  41369f:	les    ebx,FWORD PTR [eax-0x2d]
  4136a2:	add    DWORD PTR [ebp+ebx*4-0x25],edi
  4136a6:	rol    BYTE PTR [ebx+0x5],0x3c
  4136aa:	add    al,0x0
  4136ac:	popf   
  4136ad:	and    BYTE PTR [esi],bh
  4136af:	hlt    
  4136b0:	xchg   edx,eax
  4136b1:	fild   DWORD PTR [ecx]
  4136b3:	add    BYTE PTR [eax],al
  4136b5:	add    dh,dh
  4136b7:	aad    0x84
  4136b9:	clc    
  4136ba:	mov    ebp,0x60c4ee76
  4136bf:	rol    DWORD PTR [ecx],cl
  4136c1:	add    dl,dl
  4136c3:	fcmovnb st,st(0)
  4136c5:	inc    ebx
  4136c6:	(bad)
  4136c9:	add    BYTE PTR [ebp-0x450bc1d8],bl
  4136cf:	fild   DWORD PTR [ecx]
  4136d1:	add    BYTE PTR [eax],ah
  4136d3:	sub    ch,BYTE PTR [edx]
  4136d5:	push   eax
  4136d6:	sbb    BYTE PTR [edx],ah
  4136d8:	and    BYTE PTR [eax+0x16],dl
  4136db:	daa    
  4136dc:	or     al,0xe8
  4136de:	jno    0x4136a9
  4136e0:	aad    0xfd
  4136e2:	and    BYTE PTR [ecx],ch
  4136e4:	sub    DWORD PTR [eax+0x18],edx
  4136e7:	and    DWORD PTR [esi],ebx
  4136e9:	push   eax
  4136ea:	push   ss
  4136eb:	es fsub st(0),st
  4136ee:	popa   
  4136ef:	add    ah,BYTE PTR [ebp+0x257f70d7]
  4136f5:	sub    ch,cl
  4136f7:	jg     0x413726
  4136f9:	sub    al,0xcd
  4136fb:	jge    0x413721
  4136fd:	rol    BYTE PTR [ebp-0x6a],1
  413700:	test   edi,edx
  413702:	push   eax
  413703:	pop    esp
  413704:	xlat   BYTE PTR ds:[ebx]
  413705:	xor    dl,BYTE PTR [esi]
  413707:	dec    eax
  413708:	mov    eax,0x68413533
  41370d:	xlat   BYTE PTR ds:[ebx]
  41370e:	cmp    BYTE PTR [ebp+ebp*4+0x13],bh
  413712:	and    eax,0xf006a848
  413717:	inc    edi
  413718:	loope  0x413720
  41371a:	add    BYTE PTR [eax],al
  41371c:	lock inc edi
  41371e:	fstp   TBYTE PTR [ebp-0x7f17e99d]
  413724:	fst    QWORD PTR [ebp-0x1c]
  413727:	jmp    0x413707
  413729:	xor    DWORD PTR [esi],0xcf481ad7
  41372f:	sbb    ch,0x55
  413732:	std    
  413733:	(bad)  
  413734:	imul   esi,edx,0x1d
  413737:	push   cs
  413738:	call   0xa3353e33
  41373d:	add    ah,BYTE PTR [eax+0x3e]
  413740:	mov    eax,ds:0x99502787
  413745:	enter  0xd6a4,0xca
  413749:	aaa    
  41374a:	push   DWORD PTR [eax-0x7c112ee3]
  413750:	ss shl edi,1
  413753:	push   eax
  413754:	mov    ds:0xa9f455d1,al
  413759:	test   dl,0xf3
  41375c:	bound  eax,QWORD PTR [edx]
  41375e:	xor    eax,0xc6835dec
  413763:	(bad)  
  413764:	int3   
  413765:	fdiv   DWORD PTR [edx-0x43]
  413768:	call   0x5053379d
  41376d:	lds    eax,FWORD PTR [ecx+ebp*8]
  413770:	push   ebx
  413771:	pop    ecx
  413772:	add    al,0xa6
  413774:	mov    al,ds:0x6e8913cd
  413779:	adc    BYTE PTR [eax],al
  41377b:	xchg   esi,eax
  41377c:	shl    dl,1
  41377e:	cld    
  41377f:	hlt    
  413780:	add    BYTE PTR [eax],al
  413782:	jp     0x413777
  413784:	aas    
  413785:	jmp    0x915d90f5
  41378a:	leave  
  41378b:	cmp    ch,0x76
  41378e:	imul   ebx,DWORD PTR [ecx+0x18],0xffffff81
  413792:	mov    cl,0x82
  413794:	std    
  413795:	dec    bx
  413797:	pop    ecx
  413798:	inc    esp
  413799:	push   ecx
  41379a:	sbb    DWORD PTR [ebx-0x258fa903],eax
  4137a0:	sub    DWORD PTR [ecx-0xd],0x279cc1cd
  4137a7:	fisttp WORD PTR [edi-0x69]
  4137aa:	repz push ebx
  4137ac:	or     al,0x36
  4137ae:	or     eax,0x9ea91258
  4137b3:	jns    0x4137a5
  4137b5:	int3   
  4137b6:	sahf   
  4137b7:	add    bh,ch
  4137b9:	jmp    0x100f8d5
  4137be:	out    dx,al
  4137bf:	cli    
  4137c0:	mov    esi,0xdf4fe062
  4137c5:	jmp    0x72413ab5
  4137ca:	clc    
  4137cb:	(bad)  
  4137cc:	loop   0x4137a7
  4137ce:	xchg   edi,eax
  4137cf:	mov    esp,0x8fa601bf
  4137d4:	fcomip st,st(1)
  4137d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d7:	pop    DWORD PTR [edi+0x45cc524]
  4137dd:	fs (bad) 
  4137df:	into   
  4137e0:	push   eax
  4137e1:	into   
  4137e2:	jmp    0x1700:0xe7fa
  4137e9:	sbb    ebp,edi
  4137eb:	inc    DWORD PTR [eax]
  4137ed:	(bad)  
  4137ee:	je     0x413808
  4137f0:	icebp  
  4137f1:	shl    BYTE PTR [eax+edx*1-0x6e],0xb5
  4137f6:	jno    0x413804
  4137f8:	cmp    edi,DWORD PTR [edi]
  4137fa:	or     al,ch
  4137fc:	jmp    0x413816
  4137fe:	std    
  4137ff:	push   eax
  413801:	(bad)  
  413802:	je     0x413808
  413804:	hlt    
  413805:	add    esp,edi
  413807:	add    dl,BYTE PTR [esi]
  413809:	ret    
  41380a:	pop    esi
  41380b:	leave  
  41380c:	idiv   ch
  41380e:	call   DWORD PTR [edi+edi*4-0x26]
  413812:	jge    0x413800
  413814:	dec    eax
  413815:	add    DWORD PTR [eax],eax
  413817:	add    bh,dh
  413819:	jns    0x413874
  41381b:	or     al,0xf2
  41381d:	sbb    eax,0x593c7d87
  413822:	or     al,0x68
  413824:	pushf  
  413825:	inc    eax
  413826:	inc    eax
  413827:	add    BYTE PTR [ebx],dh
  413829:	fld    TBYTE PTR [ebp+0x5e]
  41382c:	cmc    
  41382d:	add    al,BYTE PTR [eax+eax*8+0x7fb4efb]
  413834:	add    al,0x3
  413836:	push   0xfdca1340
  41383b:	imul   edi,eax,0x24c84187
  413841:	fist   DWORD PTR [edi-0x7bfd3aa3]
  413847:	ror    bl,0x4e
  41384a:	jecxz  0x413853
  41384c:	add    BYTE PTR [eax],al
  41384e:	mov    ah,0x2
  413850:	push   0x4
  413852:	sub    al,0x13
  413854:	mov    DWORD PTR [ebp+0x7c],ecx
  413857:	adc    esi,DWORD PTR [ebp+0x465238]
  41385d:	call   0x3cfc1e
  413862:	popf   
  413863:	pop    esi
  413864:	ror    DWORD PTR ds:0xfffc6f20,0x92
  41386b:	push   esp
  41386c:	ds int 0x15
  41386f:	daa    
  413870:	scas   eax,DWORD PTR es:[edi]
  413871:	mov    eax,DWORD PTR [eax]
  413873:	xchg   ebp,eax
  413874:	xchg   BYTE PTR [ebx+0x69],al
  413877:	(bad)  
  413878:	rol    BYTE PTR ds:0x7b86db9d,0x80
  41387f:	pop    edi
  413880:	shl    BYTE PTR ds:[ebp+0x34],1
  413884:	cld    
  413885:	call   FWORD PTR [edx-0x53]
  413888:	mov    eax,DWORD PTR [ebx+0x38]
  41388b:	aad    0x8b
  41388d:	dec    ebx
  41388e:	dec    edx
  41388f:	push   es
  413890:	shl    eax,0x95
  413893:	std    
  413894:	push   es
  413895:	mov    edi,0x3c114aa
  41389a:	xor    BYTE PTR [eax-0x2c],ch
  41389d:	std    
  41389e:	in     al,0xdb
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	popf   
  4138a3:	mov    ebp,0x64aabf18
  4138a8:	test   DWORD PTR ds:0x988db9d,eax
  4138ae:	push   ds
  4138af:	(bad)  
  4138b0:	jmp    0xce4138b5
  4138b5:	adc    al,0x86
  4138b7:	inc    ebx
  4138b8:	add    eax,0x488b31a5
  4138bd:	test   DWORD PTR [ecx+0x2fecf97b],0xe59f1604
  4138c7:	mov    ebp,esp
  4138c9:	pusha  
  4138ca:	mov    cl,0xbf
  4138cc:	(bad)  
  4138cd:	stos   DWORD PTR es:[edi],eax
  4138ce:	sbb    bh,0x9d
  4138d1:	fcmovnbe st,st(4)
  4138d3:	add    BYTE PTR [esi-0x42f77df],dl
  4138d9:	fcmovnbe st,st(4)
  4138db:	add    BYTE PTR [ebp-0x1545f5fe],bl
  4138e1:	loop   0x4138da
  4138e3:	(bad)  
  4138e4:	rcr    BYTE PTR [eax-0x15],cl
  4138e7:	sbb    dh,0xe2
  4138ea:	test   al,0xdd
  4138ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ed:	ret    
  4138ee:	leave  
  4138ef:	cld    
  4138f0:	fcmove st,st(5)
  4138f2:	xor    al,0xfc
  4138f4:	xchg   ebp,eax
  4138f5:	mov    eax,0xda7d4160
  4138fa:	xchg   BYTE PTR [ecx],dh
  4138fc:	jb     0x4138cb
  4138fe:	imul   eax,esp,0xffffffee
  413901:	push   es
  413902:	push   0x41
  413904:	jno    0x4138d3
  413906:	bound  ecx,QWORD PTR [ecx+0x49]
  413909:	cmp    DWORD PTR [edi+0x4],0xae586a0
  413910:	popf   
  413911:	add    ch,BYTE PTR [edi]
  413913:	add    ebx,DWORD PTR [esi]
  413915:	and    dh,ch
  413917:	add    eax,DWORD PTR [eax]
  413919:	add    BYTE PTR [ebp-0x6ba4d8a6],bl
  41391f:	add    bh,BYTE PTR [esi+0x6bfaa67e]
  413925:	dec    ecx
  413926:	and    BYTE PTR [edx],dh
  413928:	aas    
  413929:	nop
  41392a:	jns    0x41392f
  41392c:	out    0x87,eax
  41392e:	(bad)  
  413930:	push   0xfffffffc
  413932:	mov    eax,ds:0x8683e702
  413937:	int    0xe7
  413939:	jle    0x4138df
  41393b:	std    
  41393c:	push   ebx
  41393d:	(bad)  
  41393e:	lock xor bh,ch
  413941:	xchg   ebp,ebx
  413943:	cld    
  413944:	(bad)  
  413945:	fcomp  DWORD PTR [ebx-0x5b8118fe]
  41394b:	add    DWORD PTR [ebx+eiz*8+0x7bac7f9d],0xe3947f6d
  413956:	shl    BYTE PTR [eax],0x0
  413959:	in     eax,0x3b
  41395b:	mov    edx,0x869e2083
  413960:	(bad)  
  413962:	sahf   
  413963:	add    bh,ch
  413965:	push   esp
  413966:	test   eax,0x76614377
  41396b:	push   eax
  41396c:	cld    
  41396d:	into   
  41396e:	outs   dx,DWORD PTR ds:[esi]
  41396f:	jp     0x413949
  413971:	ins    BYTE PTR es:[edi],dx
  413972:	cmp    edi,esi
  413974:	and    DWORD PTR [esp+edx*4-0x2a49fffe],0xffffffe2
  41397c:	std    
  41397d:	aam    0x0
  41397f:	add    dh,ah
  413981:	lock aas 
  413983:	jmp    0xf08ace27
  413988:	jecxz  0x413954
  41398a:	data16 (bad) 
  41398d:	cli    
  41398e:	gs test al,0x3e
  413991:	sti    
  413992:	gs repnz popa 
  413995:	xchg   DWORD PTR gs:[ecx*8+0x3b2a8964],esp
  41399d:	push   DWORD PTR [ebp-0x4099cdde]
  4139a3:	dec    ecx
  4139a4:	or     WORD PTR es:[eax],bp
  4139a8:	mov    ah,0x83
  4139aa:	inc    ebx
  4139ab:	ja     0x413948
  4139ad:	lds    esp,FWORD PTR [ebx]
  4139af:	jmp    0x72420752
  4139b4:	fisttp WORD PTR [ebx-0x72fc2619]
  4139ba:	mov    DWORD PTR [esi],esp
  4139bc:	loope  0x413969
  4139be:	adc    BYTE PTR [edx+0x37],ah
  4139c1:	and    dl,dh
  4139c3:	repnz sub BYTE PTR [eax+ebp*8+0x8abd9f1],cl
  4139cb:	loop   0x4139ae
  4139cd:	add    DWORD PTR [ebx+0x59],0x70
  4139d1:	repnz mov al,BYTE PTR [eax]
  4139d4:	neg    DWORD PTR [edi]
  4139d6:	push   eax
  4139d7:	(bad)  
  4139d8:	stc    
  4139d9:	lahf   
  4139da:	push   eax
  4139db:	call   0x3c6b36
  4139e0:	sbb    al,bh
  4139e2:	inc    ecx
  4139e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e4:	add    BYTE PTR [eax],al
  4139e6:	lods   al,BYTE PTR ds:[esi]
  4139e7:	pop    ecx
  4139e8:	mov    ebp,0x63cf1a45
  4139ed:	ror    ecx,0x6e
  4139f0:	or     BYTE PTR [edx-0x74],ch
  4139f3:	dec    esp
  4139f4:	inc    ecx
  4139f5:	pushf  
  4139f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f7:	mov    cl,0x71
  4139f9:	or     BYTE PTR [eax+eiz*4+0x5c],ch
  4139fd:	add    DWORD PTR [ebx+eax*4-0x1107f040],eax
  413a04:	add    eax,0xfb847400
  413a09:	je     0x413a73
  413a0b:	or     bh,bl
  413a0d:	jne    0x413a33
  413a0f:	mov    cl,0x71
  413a11:	or     BYTE PTR [eax+ecx*2],bl
  413a14:	pop    esp
  413a15:	add    DWORD PTR [ebx+eax*4],esi
  413a18:	ror    BYTE PTR [edi],0xb8
  413a1b:	(bad)  
  413a1c:	add    eax,DWORD PTR [eax]
  413a1e:	inc    esp
  413a1f:	dec    esi
  413a20:	cmp    DWORD PTR [edx+ecx*2],esi
  413a23:	aas    
  413a24:	add    BYTE PTR [eax+0xb1c3],bh
  413a2a:	add    dh,BYTE PTR [ecx+0x4e040000]
  413a30:	enter  0xda56,0x47
  413a34:	inc    ecx
  413a35:	fist   DWORD PTR [ecx-0x3c01777d]
  413a3b:	mov    cl,0x6a
  413a3d:	add    BYTE PTR [ecx+edi*4],dl
  413a40:	inc    ecx
  413a41:	fadd   DWORD PTR [ecx+ebx*2]
  413a44:	test   DWORD PTR [ebp+0x5d],ecx
  413a47:	mov    cl,0xd3
  413a49:	push   esi
  413a4a:	add    BYTE PTR [eax],al
  413a4c:	(bad)  
  413a4d:	test   al,0x89
  413a4f:	test   DWORD PTR [ebp-0x2d02329f],ebx
  413a55:	xchg   edx,eax
  413a56:	xor    ebp,edi
  413a58:	repnz push edi
  413a5a:	enter  0x1418,0x56
  413a5e:	leave  
  413a5f:	xchg   DWORD PTR [eax],esi
  413a61:	add    eax,0xd8b57b83
  413a66:	add    BYTE PTR [esi+0x1d8c4],al
  413a6c:	aaa    
  413a6d:	fstp   DWORD PTR [ecx+0x2c]
  413a70:	pushf  
  413a71:	fild   DWORD PTR [ecx]
  413a73:	mov    ebx,eax
  413a75:	jecxz  0x413aa8
  413a77:	xor    DWORD PTR [ebp-0x4c],ebx
  413a7a:	xor    BYTE PTR [esi-0x64],bl
  413a7d:	fild   DWORD PTR [eax+edi*8-0x41791e86]
  413a84:	popf   
  413a85:	fild   DWORD PTR [ecx]
  413a87:	std    
  413a88:	nop
  413a89:	(bad)  
  413a8a:	idiv   DWORD PTR [edi]
  413a8c:	popf   
  413a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a8e:	cmp    eax,0xdb9d25
  413a93:	and    DWORD PTR [edi+ebx*8],0x1
  413a97:	add    BYTE PTR [esi],bl
  413a99:	push   edi
  413a9b:	dec    esi
  413a9d:	aam    0x5b
  413a9f:	std    
  413aa0:	cmp    al,bh
  413aa2:	cmc    
  413aa3:	cld    
  413aa4:	mov    BYTE PTR [ebx+0x549d3ff4],ch
  413aaa:	inc    esi
  413aab:	or     al,0x16
  413aad:	aam    0xd0
  413aaf:	push   eax
  413ab0:	add    BYTE PTR [eax],al
  413ab2:	lods   eax,DWORD PTR ds:[esi]
  413ab3:	fs dec esi
  413ab5:	clc    
  413ab6:	push   ds
  413ab7:	mov    edi,0x4121fff1
  413abc:	push   ebp
  413abd:	outs   dx,DWORD PTR ds:[esi]
  413abe:	push   ds
  413abf:	mov    edi,0x108600d9
  413ac4:	cli    
  413ac5:	mov    BYTE PTR [eax+0x7],bl
  413ac8:	jl     0x413b15
  413aca:	cmc    
  413acb:	add    dh,BYTE PTR [edi+edx*1-0x1e]
  413acf:	pop    edi
  413ad0:	push   0x51
  413ad2:	sahf   
  413ad3:	add    bl,BYTE PTR [ebp-0x727ac4c4]
  413ad9:	or     BYTE PTR [ebp-0x3fc654b0],bl
  413adf:	dec    edi
  413ae0:	out    dx,eax
  413ae1:	jl     0x413abf
  413ae3:	ficom  DWORD PTR [esi-0x28]
  413ae6:	mov    al,0xc9
  413ae8:	push   0xffffffcb
  413aea:	test   al,0xf9
  413aec:	push   0xffffffeb
  413aee:	lahf   
  413aef:	add    ah,bh
  413af1:	mov    BYTE PTR [ebp-0x7],bl
  413af4:	push   0xfffffff3
  413af6:	lahf   
  413af7:	add    ah,bh
  413af9:	add    BYTE PTR [ebp+0x14233c03],0x3f
  413b00:	xlat   BYTE PTR ds:[ebx]
  413b01:	inc    ebx
  413b02:	mov    ah,0x3f
  413b04:	scas   eax,DWORD PTR es:[edi]
  413b05:	pop    ecx
  413b06:	(bad)
  413b0a:	sbb    al,0xd9
  413b0c:	lock jp 0x413b5f
  413b0f:	ja     0x413b25
  413b11:	loopne 0x413b58
  413b13:	pop    edi
  413b14:	adc    ecx,edi
  413b16:	add    BYTE PTR [eax],al
  413b18:	push   eax
  413b19:	fstp   st(7)
  413b1b:	pop    ecx
  413b1c:	mov    ds:0xc0f28f30,al
  413b21:	leave  
  413b22:	jle    0x413af3
  413b24:	fdivrp st(2),st
  413b26:	popa   
  413b27:	dec    ecx
  413b28:	lea    eax,[ebp+0xda2dc24]
  413b2e:	lods   al,BYTE PTR ds:[esi]
  413b2f:	retf   
  413b30:	scas   eax,DWORD PTR es:[edi]
  413b31:	jo     0x413b9d
  413b33:	push   ecx
  413b34:	mov    cl,0x2
  413b36:	out    0x87,al
  413b38:	(bad)  
  413b39:	leave  
  413b3a:	dec    esi
  413b3b:	iret   
  413b3c:	or     BYTE PTR [edi-0x25],cl
  413b3f:	into   
  413b40:	scas   al,BYTE PTR es:[edi]
  413b41:	out    dx,al
  413b42:	fadd   DWORD PTR [ebx-0x63]
  413b45:	fild   DWORD PTR [eax]
  413b47:	aam    0xe3
  413b49:	(bad)  
  413b4a:	std    
  413b4b:	bound  ecx,QWORD PTR [edx+edi*8+0x67]
  413b4f:	test   eax,0x92ffeb4b
  413b54:	mov    eax,ds:0x8916437d
  413b59:	ficomp DWORD PTR [edx-0x7bfd5e4d]
  413b5f:	sub    edx,eax
  413b61:	test   BYTE PTR [edi+0xd029ee5],bh
  413b67:	aas    
  413b68:	mov    DWORD PTR fs:[ecx-0x7c085eff],0x29505
  413b73:	xor    ecx,ebx
  413b75:	cmc    
  413b76:	sub    DWORD PTR [esp+ebx*4+0x210002],0x0
  413b7e:	mov    al,BYTE PTR [ebx+ebp*1+0x48029eeb]
  413b85:	out    dx,al
  413b86:	and    bh,BYTE PTR [edi+edi*8+0xd3a9ee8]
  413b8d:	gs aas 
  413b8f:	add    eax,DWORD PTR [eax]
  413b91:	jmp    0x79c4313c
  413b96:	mov    ds:0xd9010002,al
  413b9b:	dec    ebp
  413b9c:	sbb    ecx,ebp
  413b9e:	in     al,0x1
  413ba0:	mov    ebp,DWORD PTR [ecx+ecx*8]
  413ba3:	xor    ch,al
  413ba5:	sbb    BYTE PTR [edi+0x5e6dfdc7],al
  413bab:	test   BYTE PTR [ebx+0x2a2f1],0xd1
  413bb2:	fimul  WORD PTR [ebp+0x19]
  413bb5:	jmp    0xaccc3a2e
  413bba:	fidiv  DWORD PTR [edx]
  413bbc:	call   0xfe08f2d1
  413bc1:	add    BYTE PTR [eax-0x3d],dh
  413bc4:	or     eax,DWORD PTR [esp+eiz*8+0x7fffffff]
  413bcb:	inc    edx
  413bcc:	les    ecx,FWORD PTR [ebx+0x1ab5]
  413bd2:	mov    ebx,0x85d18703
  413bd7:	test   eax,0x4c860b10
  413bdc:	int    0xc1
  413bde:	xchg   esi,eax
  413bdf:	sar    DWORD PTR [esi-0x1f],cl
  413be2:	add    BYTE PTR [eax],al
  413be4:	mov    ah,0xb8
  413be6:	add    BYTE PTR [eax],al
  413be8:	scas   eax,DWORD PTR es:[edi]
  413be9:	mov    ?,WORD PTR [ebp-0x1d414318]
  413bef:	or     BYTE PTR [edi-0xfba7a3f],bh
  413bf5:	or     eax,DWORD PTR ds:[ebp+ebp*4+0x5cfffffa]
  413bfd:	aam    0x79
  413bff:	call   FWORD PTR [ebx+0x49]
  413c02:	lock test DWORD PTR [edx-0x3b],eax
  413c06:	sbb    DWORD PTR [edx],0x68000380
  413c0c:	les    ebp,FWORD PTR ds:0x2f3b0017
  413c12:	les    edx,FWORD PTR [esi+0xc]
  413c15:	ficom  DWORD PTR [ebp+0x1]
  413c18:	inc    esp
  413c19:	jg     0x413bdb
  413c1b:	xadd   cl,cl
  413c1e:	add    DWORD PTR [eax],eax
  413c20:	xor    al,0x4a
  413c22:	inc    ecx
  413c23:	or     al,0xcf
  413c25:	pinsrw mm1,WORD PTR [ebx+0x50fb0d2c],0x48
  413c2d:	or     eax,0xb63813e8
  413c32:	sti    
  413c33:	jmp    0x3cf4b9
  413c38:	(bad)  
  413c39:	aaa    
  413c3a:	or     BYTE PTR [eax-0x63],ch
  413c3d:	cdq    
  413c3e:	push   esp
  413c3f:	sbb    DWORD PTR [ebp+0x588b06c3],ebx
  413c45:	or     DWORD PTR [eax+ebp*8],esi
  413c48:	add    BYTE PTR [eax],al
  413c4a:	das    
  413c4b:	mov    ds:0x19190002,al
  413c50:	sti    
  413c51:	add    esp,0xffffffdb
  413c54:	add    DWORD PTR [eax],eax
  413c56:	jnp    0x413c72
  413c58:	inc    ebp
  413c59:	out    dx,eax
  413c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5b:	jg     0x413c1f
  413c5d:	inc    ebx
  413c5e:	into   
  413c5f:	loopne 0x413cb8
  413c61:	adc    eax,0x8df88e
  413c66:	sbb    eax,0x90fd01d9
  413c6b:	sub    eax,0x569d3ff8
  413c70:	les    esp,FWORD PTR [esi+0x16]
  413c73:	sahf   
  413c74:	stos   BYTE PTR es:[edi],al
  413c75:	or     eax,0x65ef1608
  413c7a:	aam    0x1e
  413c7c:	shl    DWORD PTR [ebx-0x59],1
  413c7f:	xor    eax,0x3e664377
  413c84:	or     DWORD PTR [ebx-0x72],eax
  413c87:	or     BYTE PTR ds:0x15b9cbe,al
  413c8d:	add    BYTE PTR [edi],ah
  413c8f:	pop    ss
  413c90:	lods   al,BYTE PTR ds:[esi]
  413c91:	mov    bl,al
  413c93:	mov    esi,DWORD PTR [edi-0x30]
  413c96:	sbb    eax,0x3f80027b
  413c9b:	fild   DWORD PTR [edi]
  413c9d:	retf   0xb5c9
  413ca0:	test   edi,eax
  413ca2:	ror    edx,1
  413ca4:	adc    bh,al
  413ca6:	test   DWORD PTR [esi],ecx
  413ca8:	out    dx,eax
  413ca9:	or     al,0x11
  413cab:	fwait
  413cac:	cmp    al,BYTE PTR [ecx-0x29c40000]
  413cb2:	cmp    BYTE PTR [edi+0x30fc809f],0x54
  413cb9:	add    ebx,DWORD PTR [edi]
  413cbb:	aas    
  413cbc:	lods   al,BYTE PTR ds:[esi]
  413cbd:	cmc    
  413cbe:	jb     0x413c82
  413cc0:	pop    edx
  413cc1:	or     DWORD PTR [eax-0x1],0xf8e3c41d
  413cc8:	repz js 0x413c7f
  413ccb:	shl    DWORD PTR [edi],cl
  413ccd:	mov    bl,0x67
  413ccf:	loop   0x413c6a
  413cd1:	or     BYTE PTR [ecx+0x7],0xa7
  413cd5:	mov    eax,0xbc1925b3
  413cda:	fwait
  413cdb:	repnz lea edi,[ebx-0xa53c121]
  413ce2:	jp     0x413ca6
  413ce4:	bound  eax,QWORD PTR [ecx-0x3be336f8]
  413cea:	out    dx,eax
  413ceb:	fsubr  DWORD PTR [eax+0x660b3011]
  413cf1:	icebp  
  413cf2:	in     eax,0x77
  413cf4:	jmp    0xa881:0xa9e26a3b
  413cfb:	hlt    
  413cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cfd:	shl    DWORD PTR [ecx+0x39],cl
  413d00:	lea    eax,[edx+0xc106c8]
  413d06:	adc    DWORD PTR [ecx+ecx*1+0x21c3f9f3],edi
  413d0d:	mov    ebx,0x3a5d6fee
  413d12:	push   0xffffffe4
  413d14:	add    BYTE PTR [eax],al
  413d16:	jge    0x413c99
  413d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d19:	inc    esp
  413d1a:	xchg   esp,eax
  413d1b:	rcr    BYTE PTR [ebp+0x12fa4d41],cl
  413d21:	std    
  413d22:	les    ecx,FWORD PTR [edx+0x68]
  413d25:	mov    edx,0x3e6fa9d
  413d2a:	loopne 0x413cf8
  413d2c:	sub    al,0xd4
  413d2e:	lea    ecx,[esi-0x10]
  413d31:	pop    ebp
  413d32:	and    eax,0xa1a70083
  413d37:	cli    
  413d38:	(bad)  
  413d39:	call   0x744495b5
  413d3e:	pop    esp
  413d3f:	rcl    BYTE PTR [eax+0x6c],cl
  413d42:	pop    esp
  413d43:	stos   BYTE PTR es:[edi],al
  413d44:	push   eax
  413d45:	inc    ecx
  413d46:	pusha  
  413d47:	dec    ebx
  413d48:	std    
  413d49:	dec    esi
  413d4a:	push   es
  413d4b:	mov    es,WORD PTR [ebx+0x3a]
  413d4e:	scas   al,BYTE PTR es:[edi]
  413d4f:	xor    cl,BYTE PTR ds:0x50d55c76
  413d55:	bound  ebx,QWORD PTR [esi+esi*8-0x78]
  413d59:	loope  0x413dbe
  413d5b:	lods   al,BYTE PTR ds:[esi]
  413d5c:	std    
  413d5d:	mov    ecx,0x1c12dbc6
  413d62:	out    0xc6,al
  413d64:	mov    DWORD PTR [esi+eax*8-0x4c69bfa4],edx
  413d6b:	les    esp,FWORD PTR [edi-0x12]
  413d6e:	xor    eax,0xd6999441
  413d73:	jbe    0x413dcd
  413d75:	call   0xdf01bc18
  413d7a:	add    BYTE PTR [eax],al
  413d7c:	and    cl,BYTE PTR [edx+eax*1+0x7b829ee9]
  413d83:	jne    0x413d23
  413d85:	cmc    
  413d86:	xchg   edx,eax
  413d87:	test   eax,0x39c08e87
  413d8c:	add    al,BYTE PTR [eax-0x6b]
  413d8f:	jb     0x413dbf
  413d91:	jp     0x413d5b
  413d93:	test   al,0x51
  413d95:	repz jle 0x413d63
  413d98:	sahf   
  413d99:	add    bh,ch
  413d9b:	jmp    0xb1caf303
  413da0:	popa   
  413da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da2:	adc    ah,al
  413da4:	sahf   
  413da5:	lds    eax,FWORD PTR [eax]
  413da7:	jmp    0x24caf9f7
  413dac:	inc    ebp
  413dad:	test   edi,ebx
  413daf:	add    BYTE PTR [edi+edi*4],ch
  413db2:	jmp    0xb308:0x878f2f08
  413db9:	unpcklps xmm5,xmm1
  413dbc:	ins    DWORD PTR es:[edi],dx
  413dbd:	mov    ebx,0x3a8ffffb
  413dc2:	or     BYTE PTR [eax+0x44],ch
  413dc5:	xor    DWORD PTR [edi],edx
  413dc7:	add    dh,bl
  413dc9:	(bad)  
  413dca:	mov    al,BYTE PTR [ebp-0x60]
  413dcd:	psubsb mm6,QWORD PTR [esi]
  413dd0:	cmp    al,0xff
  413dd2:	inc    DWORD PTR [ebx+0x5d81c8c4]
  413dd8:	idiv   bh
  413dda:	jmp    DWORD PTR [ebp-0x4b]
  413ddd:	inc    edx
  413dde:	leave  
  413ddf:	or     BYTE PTR [eax],al
  413de1:	add    BYTE PTR [edx],ch
  413de3:	mov    edi,0x61cccf41
  413de8:	mov    ebp,0x63c78545
  413ded:	sar    ecx,0x8c
  413df0:	or     BYTE PTR [eax+0xf008c21],al
  413df6:	dec    ecx
  413df7:	mov    edi,0xb8e7c92f
  413dfc:	mov    BYTE PTR [ebp-0x80],al
  413dff:	test   BYTE PTR [eax-0x8],0xfa
  413e03:	aam    0x88
  413e05:	inc    ebp
  413e06:	pusha  
  413e07:	jge    0x413dc9
  413e09:	pop    es
  413e0a:	(bad)  
  413e0c:	inc    edi
  413e0d:	(bad)  
  413e0e:	jmp    0x6c7aa1d6
  413e13:	xor    eax,DWORD PTR ds:0x5bf0747
  413e19:	cmp    esi,DWORD PTR [ecx+0x6fec72b6]
  413e1f:	cmp    al,0xf8
  413e21:	jne    0x413dc0
  413e23:	mov    ecx,0xbcff841
  413e28:	clc    
  413e29:	imul   ebx,DWORD PTR [ebp-0x3775065e],0x45
  413e30:	fcomp  QWORD PTR [esi-0x4c]
  413e33:	jl     0x413dfc
  413e35:	test   BYTE PTR [ebp-0x2c],bl
  413e38:	jge    0x413e38
  413e3a:	pushf  
  413e3b:	fld    DWORD PTR [ecx]
  413e3d:	imul   esp,DWORD PTR [edx],0x97b04e2
  413e43:	scas   eax,DWORD PTR es:[edi]
  413e44:	cli    
  413e45:	mov    al,BYTE PTR [eax]
  413e47:	add    BYTE PTR [eax+0x15],bl
  413e4a:	xor    al,0x55
  413e4c:	cmc    
  413e4d:	xchg   esi,eax
  413e4e:	dec    ebx
  413e4f:	std    
  413e50:	add    al,BYTE PTR [edx+0x1c]
  413e53:	cld    
  413e54:	cli    
  413e55:	cmp    ebx,DWORD PTR [eax+eax*2+0x6a]
  413e59:	loopne 0x413e5c
  413e5b:	push   0xffffff9c
  413e5d:	or     al,0x4d
  413e5f:	or     ch,dh
  413e61:	retf   
  413e62:	sub    edi,edi
  413e64:	ficom  DWORD PTR [esp+eax*8+0xd]
  413e68:	sbb    DWORD PTR [ecx],ecx
  413e6a:	add    DWORD PTR [eax],eax
  413e6c:	popf   
  413e6d:	pusha  
  413e6e:	inc    ebp
  413e6f:	or     BYTE PTR ds:0x9d195099,dh
  413e75:	outs   dx,DWORD PTR ds:[esi]
  413e76:	add    ecx,DWORD PTR [ebx-0x17cc02a8]
  413e7c:	sbb    esp,DWORD PTR [edx+eax*1+0x0]
  413e80:	sbb    DWORD PTR [ecx],ebx
  413e82:	test   DWORD PTR [ebx+0x1ab50],0xe43698a2
  413e8c:	push   ds
  413e8d:	dec    ebp
  413e8e:	cmp    BYTE PTR [eax],al
  413e90:	push   ss
  413e91:	imul   ebx,DWORD PTR [esi],0xfffffffd
  413e94:	popf   
  413e95:	stos   DWORD PTR es:[edi],eax
  413e96:	add    DWORD PTR [edi-0x183d4b83],edi
  413e9c:	xchg   ebp,eax
  413e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9e:	ret    0x1466
  413ea1:	in     eax,dx
  413ea2:	cmp    esp,DWORD PTR [esi+0x20]
  413ea5:	add    esp,DWORD PTR [edi-0x186ee108]
  413eab:	add    eax,DWORD PTR [eax]
  413ead:	add    BYTE PTR [ebp+0x2cb5e11],bl
  413eb3:	stos   BYTE PTR es:[edi],al
  413eb4:	jmp    0x7287eb2f
  413eb9:	mov    eax,0xc8ffdc45
  413ebe:	sub    BYTE PTR [edi+0x3c1ef8a7],al
  413ec4:	call   0xa76bdbcc
  413ec9:	push   eax
  413eca:	mov    ah,0x2
  413ecc:	mov    dh,0xc8
  413ece:	ror    DWORD PTR [ebp-0x305042c],cl
  413ed4:	mov    ch,0x2
  413ed6:	popf   
  413ed7:	xchg   BYTE PTR [edi],ah
  413ed9:	clc    
  413eda:	push   ds
  413edb:	and    al,0xe8
  413edd:	add    ebx,DWORD PTR [ebp-0x1d0c337b]
  413ee3:	hlt    
  413ee4:	lea    ebx,es:[ebp+0x3b03e7c1]
  413eeb:	std    
  413eec:	test   eax,0x62544c3b
  413ef1:	add    DWORD PTR [eax-0x40c6387],edx
  413ef7:	mov    ds:0xaa667ae9,eax
  413efc:	jmp    0xe2d3:0x620414bb
  413f03:	test   al,0xd7
  413f05:	jl     0x413e9c
  413f07:	in     eax,0xe0
  413f09:	sti    
  413f0a:	mov    DWORD PTR [ecx],edx
  413f0c:	xchg   ebp,eax
  413f0d:	dec    ebp
  413f0e:	pushf  
  413f0f:	ret    
  413f10:	int    0xfc
  413f12:	add    BYTE PTR [eax],al
  413f14:	inc    ebx
  413f15:	stos   BYTE PTR es:[edi],al
  413f16:	(bad)  
  413f18:	jno    0x413eff
  413f1a:	test   al,0xfb
  413f1c:	or     BYTE PTR [ebx+0x46dc7af8],0x0
  413f23:	(bad)  
  413f24:	int3   
  413f25:	stos   BYTE PTR es:[edi],al
  413f26:	push   0xffffffe4
  413f28:	mov    ecx,edi
  413f2a:	or     ebp,edi
  413f2c:	in     eax,dx
  413f2d:	add    eax,DWORD PTR [edi+0x43bf8532]
  413f33:	stc    
  413f34:	loopne 0x413ec1
  413f36:	dec    ebx
  413f37:	stc    
  413f38:	fdivr  st,st(3)
  413f3a:	dec    eax
  413f3b:	xor    edi,ecx
  413f3d:	ja     0x413f28
  413f3f:	in     al,0x14
  413f41:	add    bh,ch
  413f43:	jmp    0x1d82cae6
  413f48:	xchg   esi,eax
  413f49:	retf   0x48bf
  413f4c:	or     DWORD PTR [edx+0xaef0af0],ecx
  413f52:	into   
  413f53:	(bad)  
  413f54:	jmp    0xc0232dd9
  413f59:	mov    ah,0xd
  413f5b:	jg     0x413f0b
  413f5d:	dec    edi
  413f5e:	mov    edi,0xce09e948
  413f63:	loop   0x413f89
  413f65:	mov    DWORD PTR [ecx-0x67],ecx
  413f68:	pop    ds
  413f69:	mov    edx,0x83b59c03
  413f6e:	jns    0x413f6d
  413f70:	sahf   
  413f71:	jae    0xfe00175b
  413f77:	add    DWORD PTR [eax],0x4ba00
  413f7d:	jmp    0xb53e49d6
  413f82:	mov    esi,0xdbe9416a
  413f87:	adc    al,0x4
  413f89:	fcmovu st,st(6)
  413f8b:	add    al,BYTE PTR [edi-0x3f7a7ad6]
  413f91:	out    dx,al
  413f92:	sbb    eax,0x5bd6faae
  413f97:	test   al,0xa7
  413f99:	jmp    0x13e423c
  413f9e:	mov    bh,0xaa
  413fa0:	in     eax,0xbb
  413fa2:	fadd   st(7),st
  413fa4:	sti    
  413fa5:	adc    edi,0xffffffaa
  413fa8:	std    
  413fa9:	call   0x3d09db
  413fae:	lods   al,BYTE PTR ds:[esi]
  413faf:	inc    esi
  413fb0:	jae    0x413fcd
  413fb2:	xor    al,0x5a
  413fb4:	(bad)  
  413fb5:	(bad)  
  413fb6:	mov    eax,ds:0x72e8e5be
  413fbb:	add    eax,0xb9048400
  413fc0:	add    DWORD PTR [ecx-0x74fffbcc],0x4065bc29
  413fca:	adc    ebp,DWORD PTR [ebp+0x3b1469fd]
  413fd0:	inc    ecx
  413fd1:	mov    ah,0x44
  413fd3:	fdivr  QWORD PTR [ebx]
  413fd5:	push   esi
  413fd6:	cmc    
  413fd7:	add    eax,DWORD PTR [eax+eax*8+0x7d8059d0]
  413fde:	add    BYTE PTR [eax],al
  413fe0:	jo     0x413fc5
  413fe2:	jae    0x413ff0
  413fe4:	je     0x414030
  413fe6:	mov    ah,0x10
  413fe8:	and    BYTE PTR [esi-0x44af8283],bh
  413fee:	jb     0x414048
  413ff0:	inc    esp
  413ff1:	dec    edx
  413ff2:	mov    bl,0x0
  413ff4:	xor    dl,dh
  413ff6:	gs shl ecx,0x8b
  413ffa:	or     BYTE PTR [esi-0x7b],ah
  413ffd:	inc    edx
  413ffe:	mov    edx,0x41c72208
  414003:	mov    esp,0xb67983ac
  414008:	mov    ah,0x59
  41400a:	adc    BYTE PTR [edi],cl
  41400c:	icebp  
  41400d:	ret    
  41400e:	mov    BYTE PTR [ebp+0x32],al
  414011:	aaa    
  414012:	inc    ecx
  414013:	mov    ah,0xc4
  414015:	aaa    
  414016:	aas    
  414017:	xor    DWORD PTR [ebp+0x3243bdf9],ebx
  41401d:	stos   BYTE PTR es:[edi],al
  41401e:	fnstcw WORD PTR [ebp+esi*8-0x38]
  414022:	ret    
  414023:	mov    ah,al
  414025:	xor    eax,0x219ee8c4
  41402a:	aas    
  41402b:	aas    
  41402c:	inc    esp
  41402d:	adc    cl,dl
  41402f:	std    
  414030:	push   edx
  414031:	sub    al,0x45
  414033:	adc    al,0x9d
  414035:	adc    eax,0xbdc8fcf2
  41403a:	les    edx,FWORD PTR [ebx]
  41403c:	xchg   ecx,eax
  41403d:	mov    ebx,0xb0460041
  414042:	push   edi
  414043:	add    BYTE PTR [eax],al
  414045:	add    BYTE PTR ds:0x22fd49a3,dh
  41404b:	and    al,0xcf
  41404d:	call   0xfe0478cd
  414052:	adc    bl,dh
  414054:	aad    0xe8
  414056:	xchg   esi,eax
  414057:	mov    eax,ds:0xbcf6fdc4
  41405c:	js     0x41404f
  41405e:	add    eax,0xf2fdcc9e
  414063:	push   ebx
  414064:	idiv   esp
  414066:	jo     0x4140b9
  414068:	ret    
  414069:	jae    0x414000
  41406b:	inc    ecx
  41406c:	dec    edi
  41406d:	cmc    
  41406e:	(bad)  
  414070:	and    bl,BYTE PTR [esi+0x76]
  414073:	repnz rcl DWORD PTR [eax],0x9d
  414077:	ja     0x4140f1
  414079:	lock sbb BYTE PTR [edi],bl
  41407c:	push   eax
  41407d:	dec    edi
  41407e:	daa    
  41407f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414080:	jge    0x414042
  414082:	sub    DWORD PTR [eax+edx*1-0x2e],esi
  414086:	imul   ecx,esi,0xab37034e
  41408c:	daa    
  41408d:	jmp    0x7359b033
  414092:	pushf  
  414093:	add    ch,BYTE PTR ds:0xa6f09b7a
  414099:	or     DWORD PTR [edx-0x3212ad0d],0xffffff82
  4140a0:	ror    BYTE PTR [edx],1
  4140a2:	lock adc bh,BYTE PTR [edx-0x7]
  4140a6:	jo     0x414052
  4140a8:	jmp    0xb141416f
  4140ad:	repnz sub al,0x7a
  4140b0:	stos   DWORD PTR es:[edi],eax
  4140b1:	xor    BYTE PTR [eax+0x42a9d613],0x80
  4140b8:	bound  esi,QWORD PTR [edi]
  4140ba:	jmp    0x5d8d:0xe6045780
  4140c1:	mov    ch,0xa9
  4140c3:	add    DWORD PTR [ecx+0x28c41004],ebp
  4140c9:	add    esp,edi
  4140cb:	add    edx,DWORD PTR ds:0x7bc16206
  4140d1:	rol    DWORD PTR [ecx],0xfc
  4140d4:	push   0xffffffc4
  4140d6:	out    dx,al
  4140d7:	add    ebp,DWORD PTR [ebx-0x3f]
  4140da:	rol    DWORD PTR [ebx],1
  4140dc:	ja     0x4140e0
  4140de:	rol    DWORD PTR [ebx],0x87
  4140e1:	add    cl,al
  4140e3:	add    esi,eax
  4140e5:	ss or  ebp,eax
  4140e8:	jmp    0xa3348004
  4140ed:	add    ah,BYTE PTR [edx+0x37]
  4140f0:	add    DWORD PTR [esi],0xf1994260
  4140f6:	das    
  4140f7:	jle    0x4140d6
  4140f9:	or     eax,0xadfc374
  4140fe:	out    0x2e,eax
  414100:	and    al,0xaf
  414102:	push   0xffffffd7
  414104:	(bad)  
  414105:	les    ebp,FWORD PTR [ebp+eax*8+0x4f2786aa]
  41410c:	and    BYTE PTR [ecx+0x0],dl
  41410f:	lahf   
  414110:	add    BYTE PTR [eax],al
  414112:	leave  
  414113:	mov    DWORD PTR [edi-0x1f],esi
  414116:	pop    ss
  414117:	inc    edx
  414118:	hlt    
  414119:	jb     0x4140b1
  41411b:	test   DWORD PTR [ebx-0x27],eax
  41411e:	adc    al,0xc2
  414120:	je     0x41416d
  414122:	sub    dh,BYTE PTR [edi]
  414124:	clc    
  414125:	fdivrp st(4),st
  414127:	pop    edi
  414128:	add    al,0x72
  41412a:	push   edi
  41412b:	les    eax,FWORD PTR [ebx-0x42]
  41412e:	cdq    
  41412f:	stos   BYTE PTR es:[edi],al
  414130:	push   es
  414131:	mov    al,ds:0xb181bf5e
  414136:	jg     0x414168
  414138:	inc    ebp
  414139:	je     0x41410f
  41413b:	mov    edx,0x28d91350
  414140:	push   ds
  414141:	aas    
  414142:	mov    edi,DWORD PTR [edi+0x107af4fd]
  414148:	inc    eax
  414149:	jmp    0xbbb60363
  41414e:	jo     0x414152
  414150:	sub    DWORD PTR [edx-0xb02aca6],0x666a544e
  41415a:	ficom  WORD PTR [eax]
  41415c:	xchg   esp,eax
  41415d:	sti    
  41415e:	pop    esi
  41415f:	add    al,BYTE PTR [ebx-0x39f94ad7]
  414165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414166:	fistp  QWORD PTR [esp+ecx*4-0x2add954]
  41416d:	mov    ah,0x26
  41416f:	sub    BYTE PTR [esi],bl
  414171:	lahf   
  414172:	mov    BYTE PTR [edi+0xd4fd],bh
  414178:	jp     0x41418a
  41417a:	inc    eax
  41417b:	jmp    0xea3e7a9e
  414180:	test   DWORD PTR [esi],eax
  414182:	(bad)  
  414183:	lods   al,BYTE PTR ds:[esi]
  414184:	fadd   QWORD PTR [ecx]
  414186:	and    DWORD PTR [esi],0x4bbf89
  41418c:	test   al,0xf9
  41418e:	mov    BYTE PTR [edi+0x2],bl
  414191:	pop    esp
  414192:	mov    al,BYTE PTR [ebp-0x6e]
  414195:	iret   
  414196:	mov    edi,0xfa8d2b56
  41419b:	mov    esp,DWORD PTR [ebp-0x73]
  41419e:	or     DWORD PTR [eax+edx*1],esi
  4141a1:	inc    ebp
  4141a2:	add    BYTE PTR [edi-0x46],dl
  4141a5:	outs   dx,BYTE PTR ds:[esi]
  4141a6:	mov    al,ds:0x2f0085ac
  4141ab:	leave  
  4141ac:	popf   
  4141ad:	xor    eax,0x6b7ac40
  4141b2:	jno    0x4141ba
  4141b4:	mov    ebp,0x87ac403e
  4141b9:	push   es
  4141ba:	jg     0x41417d
  4141bc:	cmp    BYTE PTR [ebp+0x6ca618f5],al
  4141c2:	pop    ebx
  4141c3:	pop    esi
  4141c4:	pop    es
  4141c5:	pop    ebx
  4141c6:	xchg   esp,ebp
  4141c8:	jne    0x41421d
  4141ca:	push   esi
  4141cb:	mov    ebp,DWORD PTR [ecx]
  4141cd:	or     al,0x2f
  4141cf:	(bad)  
  4141d1:	into   
  4141d2:	aaa    
  4141d3:	repz sbb bl,BYTE PTR [eax]
  4141d6:	xchg   DWORD PTR [ebp-0x4],eax
  4141d9:	test   al,al
  4141db:	or     al,0x0
  4141dd:	add    BYTE PTR [ebp-0x2e8b0ba2],bh
  4141e3:	mov    ds,WORD PTR [eax-0x4]
  4141e6:	jl     0x4141ff
  4141e8:	cmp    eax,0x370fc483
  4141ed:	into   
  4141ee:	es jb  0x414178
  4141f1:	(bad)  
  4141f2:	iret   
  4141f3:	mov    edi,0x3fde571f
  4141f8:	push   0xffffd400
  4141fd:	dec    edi
  4141fe:	pop    es
  4141ff:	out    dx,al
  414200:	cli    
  414201:	dec    ecx
  414203:	fist   WORD PTR [ecx]
  414205:	inc    eax
  414206:	popf   
  414207:	test   eax,0x1076f88e
  41420c:	xor    eax,0xbd67144d
  414211:	cmp    DWORD PTR [esi+0x1088f133],ebp
  414217:	mov    ds:0x20a5c686,al
  41421c:	pop    edi
  41421d:	clc    
  41421e:	cmc    
  41421f:	cmp    ah,ch
  414221:	ds popf 
  414223:	hlt    
  414224:	mov    esi,0x59c17976
  414229:	enter  0xcc72,0x85
  41422d:	shl    cl,0xde
  414230:	mov    bh,BYTE PTR [esi]
  414232:	sahf   
  414233:	sar    DWORD PTR [edi+0x4a215943],0x4
  41423a:	es out 0xbf,al
  41423d:	and    DWORD PTR [ebx-0x47],0x42fc
  414244:	xchg   ecx,eax
  414245:	pop    ss
  414246:	fimul  DWORD PTR [ecx+0x42faa5e0]
  41424c:	xor    DWORD PTR [esi],edx
  41424e:	or     al,0xb0
  414250:	pushf  
  414251:	nop
  414252:	adc    dh,BYTE PTR [edx]
  414254:	pop    ebp
  414255:	nop
  414256:	or     ecx,DWORD PTR [ecx-0x56565e98]
  41425c:	adc    ebp,DWORD PTR [edi+edi*4]
  41425f:	xor    bl,ch
  414261:	ret    
  414262:	pop    edi
  414263:	pop    ecx
  414264:	aam    0xe6
  414266:	or     eax,DWORD PTR [eax]
  414268:	cmp    al,0x6d
  41426a:	ins    DWORD PTR es:[edi],dx
  41426b:	inc    ecx
  41426c:	popf   
  41426d:	les    esi,FWORD PTR es:[ecx+ebx*4-0x14]
  414272:	add    al,0xa4
  414274:	cmp    DWORD PTR [eax+0x1],ebp
  414277:	push   0xffffffbe
  414279:	imul   eax,DWORD PTR [ecx],0x448aa2e9
  41427f:	lods   al,BYTE PTR ds:[esi]
  414280:	pop    esi
  414281:	add    ah,bh
  414283:	enter  0x669e,0x43
  414287:	inc    ebp
  414288:	popf   
  414289:	outs   dx,DWORD PTR ds:[esi]
  41428a:	or     DWORD PTR [ebx-0x63],eax
  41428d:	pop    edi
  41428e:	inc    edi
  41428f:	push   0x5448025c
  414294:	icebp  
  414295:	ds out 0x64,eax
  414298:	dec    ebp
  414299:	pop    edi
  41429a:	stos   BYTE PTR es:[edi],al
  41429b:	add    esi,DWORD PTR [edx]
  41429d:	mov    edx,esp
  41429f:	inc    ebx
  4142a0:	popf   
  4142a1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4142a3:	fadd   QWORD PTR [bp+si]
  4142a6:	mov    BYTE PTR [ebx+0x428e0000],al
  4142ac:	out    0x64,eax
  4142ae:	dec    ebp
  4142af:	pop    edi
  4142b0:	sub    al,BYTE PTR [edx+ecx*1]
  4142b3:	arpl   sp,bx
  4142b5:	inc    ebx
  4142b6:	popf   
  4142b7:	gs (bad) 
  4142b9:	fadd   QWORD PTR [bp+si]
  4142bc:	mov    BYTE PTR [ebx-0x52],ch
  4142bf:	inc    edx
  4142c0:	out    0x64,eax
  4142c2:	dec    ebp
  4142c3:	pop    edi
  4142c4:	sub    al,BYTE PTR [edx+eiz*1]
  4142c7:	aaa    
  4142c8:	hlt    
  4142c9:	inc    ebx
  4142ca:	popf   
  4142cb:	gs out 0x66,eax
  4142ce:	fadd   QWORD PTR [edx]
  4142d0:	dec    eax
  4142d1:	xchg   ebx,eax
  4142d2:	mov    es,WORD PTR [edx-0x19]
  4142d5:	lea    ebx,fs:[edi+0x2a]
  4142d9:	add    al,0x3a
  4142db:	(bad)  
  4142dc:	fadd   QWORD PTR [ebx-0x63]
  4142df:	gs (bad) 
  4142e1:	pop    sp
  4142e3:	add    cl,BYTE PTR [eax-0x18bd5165]
  4142e9:	lods   eax,DWORD PTR fs:[esi]
  4142eb:	pop    edi
  4142ec:	stos   BYTE PTR es:[edi],al
  4142ed:	add    edx,DWORD PTR [edx]
  4142ef:	pop    edi
  4142f0:	hlt    
  4142f1:	inc    ebx
  4142f2:	popf   
  4142f3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4142f5:	pop    sp
  4142f7:	add    cl,BYTE PTR [eax+0x42ae87]
  4142fd:	jmp    0xaae4953b
  414302:	sahf   
  414303:	cdq    
  414304:	pushf  
  414305:	cld    
  414306:	pop    esi
  414307:	add    ah,BYTE PTR [ecx+0x434389]
  41430d:	dec    eax
  41430e:	add    BYTE PTR [eax],al
  414310:	and    dl,BYTE PTR [esi]
  414312:	inc    eax
  414313:	jmp    0xaae47559
  414318:	sahf   
  414319:	cdq    
  41431a:	sbb    al,0xd7
  41431c:	fiadd  WORD PTR [edx]
  41431e:	mov    eax,ds:0x43fb69
  414323:	dec    eax
  414324:	jle    0x414335
  414326:	inc    eax
  414327:	jmp    0x2ae4d62b
  41432c:	mov    eax,ds:0xdeff1099
  414331:	add    ah,BYTE PTR [ecx+0x43f489]
  414337:	mov    BYTE PTR [ecx-0x4016bff0],al
  41433d:	jb     0x4142e2
  41433f:	sub    bl,BYTE PTR [ecx-0x2128f367]
  414345:	add    ah,BYTE PTR [ecx+0x43b4a9]
  41434b:	dec    eax
  41434c:	cmp    eax,0xbfe9400e
  414351:	shl    BYTE PTR [ebx+0x3099a12a],cl
  414357:	(bad)  
  414359:	add    ah,BYTE PTR [ecx+0x438489]
  41435f:	dec    eax
  414360:	test   DWORD PTR [esi],ecx
  414362:	inc    eax
  414363:	jmp    0xaae4f5e7
  414368:	sahf   
  414369:	cdq    
  41436a:	cmp    al,0xf4
  41436c:	pop    esi
  41436d:	add    ah,BYTE PTR [ecx+0x4378e9]
  414373:	mov    BYTE PTR [eax],al
  414375:	add    ch,al
  414377:	or     eax,0x23f40040
  41437c:	adc    BYTE PTR [esi+0x2c9d0507],ah
  414382:	icebp  
  414383:	inc    esp
  414384:	add    BYTE PTR [ebx+0x3f2094],ah
  41438a:	push   ebp
  41438b:	bound  edx,QWORD PTR [eax+eax*2]
  41438e:	les    esp,FWORD PTR [ebx]
  414390:	xor    BYTE PTR [esi-0x2762faf9],ah
  414396:	mov    al,0x44
  414398:	add    BYTE PTR [ebx+0x3f1ef4],ah
  41439e:	in     eax,0xba
  4143a0:	adc    al,BYTE PTR [eax-0x7c]
  4143a3:	and    eax,0x437a650
  4143a8:	popf   
  4143a9:	sub    BYTE PTR [ecx-0x1b5cffbc],al
  4143af:	and    BYTE PTR [edi],bh
  4143b1:	add    BYTE PTR ds:0x7440142c,ah
  4143b7:	and    eax,0xfeb7a670
  4143bc:	pushf  
  4143bd:	lods   al,BYTE PTR ds:[esi]
  4143be:	jo     0x414404
  4143c0:	add    BYTE PTR [ebx+0x3f1dc4],ah
  4143c6:	adc    eax,0x34401434
  4143cb:	and    eax,0xfe87a690
  4143d0:	pushf  
  4143d1:	cwde   
  4143d2:	xor    BYTE PTR [eax+eax*1-0x5d],al
  4143d6:	aam    0x1d
  4143d8:	aas    
  4143d9:	add    BYTE PTR [eax],al
  4143db:	add    ch,dl
  4143dd:	outs   dx,DWORD PTR ds:[esi]
  4143de:	adc    al,0x40
  4143e0:	add    al,0x25
  4143e2:	mov    al,0xa6
  4143e4:	(bad)  
  4143e5:	(bad)  
  4143e6:	pushf  
  4143e7:	enter  0x43f0,0x0
  4143eb:	mov    ds:0x3f1db4,eax
  4143f0:	and    eax,0x9d401464
  4143f5:	test   eax,0x6d43d062
  4143fa:	add    DWORD PTR [edi+0x41d625],ebx
  414400:	dec    BYTE PTR [ecx+0x63]
  414403:	inc    ecx
  414404:	popf   
  414405:	mov    cl,BYTE PTR [ecx+0x13]
  414408:	pop    ebp
  414409:	test   eax,0x6cfbf062
  41440e:	add    DWORD PTR [edi+0x41adc5],ebx
  414414:	(bad)  
  414415:	test   eax,0x4a9d4166
  41441a:	int    0x14
  41441c:	pop    ebp
  41441d:	test   eax,0x6c421062
  414422:	add    DWORD PTR [edi+0x41d6dd],ebx
  414428:	ds leave 
  41442a:	inc    cx
  41442c:	popf   
  41442d:	mov    ch,BYTE PTR [eax+0x60a9dd14]
  414433:	xor    BYTE PTR [edx],bh
  414435:	in     al,dx
  414436:	add    ebx,DWORD PTR [edi+0x41ad5d]
  41443c:	ds jmp 0x4185a4
  414442:	popf   
  414443:	mov    ah,BYTE PTR [esp+edx*1-0x23]
  414447:	test   eax,0xec025060
  41444c:	add    ebx,DWORD PTR [edi+0x41b685]
  414452:	dec    BYTE PTR [eax]
  414454:	arpl   WORD PTR [ecx-0x63],ax
  414457:	dec    edx
  414458:	mov    esp,0x60a9dd14
  41445d:	jo     0x414459
  41445f:	jmp    0x414464
  414461:	lahf   
  414462:	in     eax,dx
  414463:	int3   
  414464:	inc    ecx
  414465:	add    BYTE PTR [esi],bh
  414467:	sub    DWORD PTR [ebx+0x41],esp
  41446a:	popf   
  41446b:	dec    edx
  41446c:	push   eax
  41446d:	adc    ebx,DWORD PTR [ebp+0x2]
  414470:	out    0x60,eax
  414472:	or     eax,0x1203aa5f
  414477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414478:	sti    
  414479:	inc    ebx
  41447a:	popf   
  41447b:	arpl   WORD PTR [edi-0x77fda39b],ax
  414481:	enter  0x42b1,0xe7
  414485:	pusha  
  414486:	or     eax,0x2a03aa5f
  41448b:	jbe    0x414460
  41448d:	inc    ebx
  41448e:	popf   
  41448f:	arpl   WORD PTR [edi],sp
  414491:	gs pop esp
  414493:	add    cl,BYTE PTR [eax+0x4]
  414496:	mov    es,WORD PTR [edx-0x19]
  414499:	pusha  
  41449a:	int    0x5e
  41449c:	stos   BYTE PTR es:[edi],al
  41449d:	add    eax,DWORD PTR [edx]
  41449f:	fadd   QWORD PTR ds:[ebx-0x63]
  4144a3:	popa   
  4144a4:	pop    es
  4144a5:	add    BYTE PTR gs:[eax],al
  4144a8:	fadd   QWORD PTR [edx]
  4144aa:	dec    eax
  4144ab:	mov    ah,0xb1
  4144ad:	inc    edx
  4144ae:	out    0x60,eax
  4144b0:	lea    ebx,[esi+0x2a]
  4144b3:	add    al,0x1a
  4144b5:	mov    bh,0xf3
  4144b7:	inc    ebx
  4144b8:	popf   
  4144b9:	popa   
  4144ba:	out    0x6b,eax
  4144bc:	fadd   QWORD PTR [edx]
  4144be:	mov    BYTE PTR [edi+0x29e7428d],bl
  4144c4:	xchg   ebp,eax
  4144c5:	sub    al,BYTE PTR [edi-0x75fd2399]
  4144cb:	adc    esi,ebp
  4144cd:	inc    ecx
  4144ce:	out    0xab,eax
  4144d0:	cwde   
  4144d1:	mov    bh,0xa6
  4144d3:	mov    esp,0x8935525c
  4144d8:	outs   dx,BYTE PTR ds:[esi]
  4144d9:	jbe    0x4144d4
  4144db:	inc    ebx
  4144dc:	popf   
  4144dd:	sub    dh,BYTE PTR [ebx]
  4144df:	fld    QWORD PTR ss:[edx]
  4144e2:	push   ds
  4144e3:	mov    ebp,0x360f2af3
  4144e8:	pop    ebp
  4144e9:	add    al,BYTE PTR [eax]
  4144eb:	push   ds
  4144ec:	jl     0x4144d0
  4144ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144ef:	sub    bl,BYTE PTR [ecx-0x4d2e2949]
  4144f5:	sub    al,0x40
  4144f7:	jmp    0x8171a845
  4144fc:	pop    ebp
  4144fd:	add    bh,ch
  4144ff:	aaa    
  414500:	mov    dh,0x36
  414502:	jbe    0x4144ad
  414504:	sahf   
  414505:	dec    edi
  414506:	mov    eax,ds:0x4346a9
  41450b:	add    BYTE PTR ss:[eax],al
  41450e:	lock sub al,BYTE PTR [edi+esi*4+0x4a55025e]
  414516:	dec    esi
  414517:	push   0x41
  414519:	jmp    0xecac120f
  41451e:	jbe    0x414502
  414520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414521:	stos   BYTE PTR es:[edi],al
  414522:	sahf   
  414523:	arpl   WORD PTR [eax+0x51],sp
  414526:	fld    QWORD PTR [edx]
  414528:	call   0xfdf89765
  41452d:	arpl   WORD PTR [esi+0x7e],sp
  414530:	fnstenv [ebp+0x7b]
  414533:	mov    dh,0x33
  414535:	push   ecx
  414536:	or     DWORD PTR [eax+eax*1+0x72],eax
  41453a:	pop    esi
  41453b:	mov    bh,0x33
  41453d:	xor    ecx,edi
  41453f:	inc    ebx
  414540:	add    dh,cl
  414542:	ins    BYTE PTR es:[edi],dx
  414543:	cmp    eax,0xb7a12aa8
  414548:	xor    eax,DWORD PTR [ecx]
  41454a:	rol    DWORD PTR [ebx+0x0],0xb6
  41454e:	dec    esp
  41454f:	frstor [edi+0x67aa992a]
  414555:	mov    eax,es:0x5a735e02
  41455b:	pop    ebx
  41455c:	sar    DWORD PTR [edx+ebx*1],0xa6
  414560:	dec    edi
  414561:	cmp    dh,cl
  414563:	sub    BYTE PTR [edi],al
  414565:	add    BYTE PTR [ecx+0x2c58f7fb],dl
  41456b:	sbb    ecx,edx
  41456d:	add    ah,dh
  41456f:	add    ebx,0x50
  414572:	add    BYTE PTR [eax],al
  414574:	jae    0x414569
  414576:	pop    es
  414577:	call   0x3c711b
  41457c:	jns    0x41453c
  41457e:	jno    0x414587
  414580:	or     al,0x79
  414582:	sti    
  414583:	add    ah,dh
  414585:	arpl   WORD PTR [edi],bx
  414587:	push   0xffffffce
  414589:	mov    DWORD PTR [ecx-0x8],edi
  41458c:	cld    
  41458d:	push   0xb4c9fc
  414592:	xchg   edi,eax
  414594:	and    al,0x78
  414596:	jno    0x4145a0
  414598:	mov    WORD PTR [esp+ebp*4-0x1],?
  41459c:	xchg   ebx,eax
  41459d:	add    eax,0x75
  4145a0:	mov    ebx,0xb4fffe38
  4145a5:	add    bh,ah
  4145a7:	add    dl,BYTE PTR [edi-0x40]
  4145aa:	pop    ebx
  4145ab:	leave  
  4145ac:	mov    BYTE PTR [edx],0x0
  4145af:	push   ebp
  4145b0:	jmp    FWORD PTR [edx+0x6a]
  4145b3:	cmp    bl,BYTE PTR [esi]
  4145b5:	add    BYTE PTR [edi-0x1],cl
  4145b8:	jns    0x41455e
  4145ba:	adc    eax,DWORD PTR [eax-0x7c]
  4145bd:	test   DWORD PTR [ecx+0xc],edx
  4145c0:	add    DWORD PTR [ebp+0x4],eax
  4145c3:	cmp    DWORD PTR [eax],0xfffffffc
  4145c6:	or     cl,0x98
  4145c9:	or     al,0x81
  4145cb:	ror    BYTE PTR [ecx-0x76bb45ff],cl
  4145d1:	add    BYTE PTR ds:[ebp-0x17aff587],cl
  4145d8:	add    BYTE PTR [eax],al
  4145da:	jecxz  0x414601
  4145dc:	sti    
  4145dd:	(bad)  
  4145de:	mov    ecx,0x9d137471
  4145e3:	sub    edi,esi
  4145e5:	sub    DWORD PTR [eax-0x63817e2d],ebp
  4145eb:	test   eax,0x69ce0830
  4145f0:	pop    ds
  4145f1:	xchg   DWORD PTR [esi+0x73],ebx
  4145f4:	scas   al,BYTE PTR es:[edi]
  4145f5:	cmp    dl,BYTE PTR [eax]
  4145f7:	jmp    0xd634c8ed
  4145fc:	out    0x89,eax
  4145fe:	mov    ds:0xb574cc1d,eax
  414603:	sub    DWORD PTR [eax+esi*1+0x4e8bab68],edi
  41460a:	pushf  
  41460b:	sub    DWORD PTR [eax+edi*2-0x87e61b7],edi
  414612:	gs jbe 0x414621
  414615:	mov    ebx,edx
  414617:	inc    ecx
  414618:	nop
  414619:	or     BYTE PTR [ebp+0x4a12aea9],bl
  41461f:	xor    BYTE PTR [ecx-0x1efe2c77],bh
  414625:	push   es
  414626:	popf   
  414627:	test   eax,0x78a0e95a
  41462c:	int3   
  41462d:	data16 and al,0xb1
  414630:	mov    es,WORD PTR [ebx-0x6b]
  414633:	shl    DWORD PTR es:[edx+edx*4+0x29],0xf9
  414639:	sub    eax,esi
  41463b:	scas   eax,DWORD PTR es:[edi]
  41463c:	cmp    DWORD PTR [eax+0x0],0x2ea99c00
  414643:	add    al,0xae
  414645:	imul   ebp,DWORD PTR [ebx+0xfc1cd06],0x22bc5afd
  41464f:	xchg   esi,ebx
  414651:	add    DWORD PTR [ebp-0x3e],edx
  414654:	xchg   ebp,eax
  414655:	test   eax,0x2831894e
  41465a:	mov    al,ds:0x93021cf8
  41465f:	sbb    BYTE PTR [ecx+0x1454e702],0x55
  414666:	fisttp WORD PTR [esp+ebx*4+0x694c5603]
  41466d:	dec    esp
  41466e:	push   0xffffffca
  414670:	adc    BYTE PTR [eax+0x7e],bh
  414673:	mov    ecx,0x8b1e029d
  414678:	mov    esi,ebx
  41467a:	ror    BYTE PTR [edx+0x21f6de71],cl
  414680:	mov    ah,0xc8
  414682:	sar    DWORD PTR [esi],cl
  414684:	push   edi
  414685:	sbb    al,0x12
  414687:	into   
  414688:	imul   esi,ebx,0x1c7205c0
  41468e:	jo     0x4146d8
  414690:	jns    0x4146ac
  414692:	out    dx,al
  414693:	jno    0x4146ea
  414695:	inc    ebp
  414696:	int    0x8c
  414698:	pop    ebp
  414699:	inc    esi
  41469a:	(bad)
  41469d:	or     DWORD PTR [ebp-0x647b1af4],ecx
  4146a3:	fild   WORD PTR [eax]
  4146a5:	add    BYTE PTR [edx+0x7948601c],dl
  4146ab:	sbb    BYTE PTR [esi],ah
  4146ad:	inc    eax
  4146ae:	ror    DWORD PTR [esi],0x86
  4146b1:	add    ebx,DWORD PTR [ebp-0x12d7f0fd]
  4146b7:	add    esp,edi
  4146b9:	mov    bl,cl
  4146bb:	out    0xd2,al
  4146bd:	cld    
  4146be:	pusha  
  4146bf:	add    ch,BYTE PTR [ebx+0x44]
  4146c2:	lahf   
  4146c3:	add    ah,bh
  4146c5:	push   ebx
  4146c6:	jne    0x4146d4
  4146c8:	clc    
  4146c9:	add    ebx,DWORD PTR [ebp-0x1a791583]
  4146cf:	or     cl,BYTE PTR [ebp-0x73]
  4146d2:	fnstsw WORD PTR [eax+ebx*1]
  4146d5:	lods   al,BYTE PTR ds:[esi]
  4146d6:	sbb    DWORD PTR [ebx+0x0],edx
  4146d9:	call   0x585d07c
  4146de:	xchg   ecx,eax
  4146df:	jmp    0x4146a6
  4146e1:	div    BYTE PTR [edx-0x6116fe1c]
  4146e7:	push   edx
  4146e8:	call   0x43d57e
  4146ed:	mov    cs,edx
  4146ef:	out    0xf,al
  4146f1:	xchg   ecx,eax
  4146f2:	jnp    0x414706
  4146f4:	add    cl,ch
  4146f6:	sbb    DWORD PTR [esi+esi*8],eax
  4146f9:	jmp    0x6a447d9d
  4146fe:	fiadd  WORD PTR [esi]
  414700:	jmp    0x8bb330f0
  414705:	mov    dl,0xea
  414707:	inc    eax
  414708:	push   eax
  414709:	push   esi
  41470a:	add    BYTE PTR [eax],al
  41470c:	mov    dl,0xe6
  41470e:	pop    ss
  41470f:	cdq    
  414710:	mov    eax,ds:0x6a7041c
  414715:	pop    edx
  414716:	(bad)  
  414717:	call   0xe701cdba
  41471c:	inc    edx
  41471d:	pushf  
  41471e:	(bad)  
  41471f:	call   0xf642c2c2
  414724:	sub    eax,0xe4cc4c42
  414729:	scas   eax,DWORD PTR es:[edi]
  41472a:	add    cl,ch
  41472c:	jb     0x414778
  41472e:	dec    eax
  41472f:	xchg   ebp,eax
  414730:	mov    al,0xaf
  414732:	je     0x414701
  414734:	mov    ds:0x9ac55c7b,al
  414739:	call   0x24e7:0x29f9843
  414740:	lahf   
  414741:	add    al,BYTE PTR [eax]
  414743:	jb     0x4146f2
  414745:	out    0xf,al
  414747:	push   ebx
  414748:	mov    eax,ds:0xdd63ff1c
  41474d:	out    0x14,al
  41474f:	cmp    DWORD PTR [esi],esp
  414751:	mov    al,0xe8
  414753:	add    BYTE PTR [ecx],dl
  414755:	dec    eax
  414756:	std    
  414757:	inc    eax
  414759:	(bad)  
  41475a:	je     0x414778
  41475c:	mov    ah,0xea
  41475e:	and    ecx,DWORD PTR [edi]
  414760:	inc    ecx
  414761:	repnz pop es
  414763:	push   esi
  414764:	or     al,0x46
  414766:	(bad)  
  414767:	dec    DWORD PTR [ebx]
  414769:	pop    ebp
  41476a:	or     DWORD PTR [eax+0x40ca288],eax
  414770:	add    BYTE PTR [eax],al
  414772:	mov    cl,0xb0
  414774:	push   ebx
  414775:	call   0x3cd403
  41477a:	sub    al,0x28
  41477c:	push   edx
  41477d:	add    esp,esi
  41477f:	or     DWORD PTR [esp-0x2c],0x77
  414784:	in     eax,0x85
  414786:	add    eax,0xf56a0005
  41478b:	ja     0x41479e
  41478d:	cld    
  41478e:	in     al,0x44
  414790:	add    BYTE PTR [eax+0x6b],dl
  414793:	adc    eax,DWORD PTR [eax]
  414795:	adc    DWORD PTR [eax*1-0x7dc6ff96],eax
  41479c:	and    al,0x94
  41479e:	mov    ah,0x4
  4147a0:	add    BYTE PTR [eax-0x24],dl
  4147a3:	jns    0x4147ea
  4147a5:	aaa    
  4147a6:	int    0x5c
  4147a8:	and    edi,DWORD PTR [esi-0x75]
  4147ab:	jns    0x414736
  4147ad:	test   al,dl
  4147af:	xchg   esp,eax
  4147b0:	add    BYTE PTR [eax],al
  4147b2:	test   BYTE PTR [eax+ebp*8-0x38],dl
  4147b6:	add    BYTE PTR [edi],0x0
  4147b9:	test   BYTE PTR [edi+eax*1+0x4754d84],dh
  4147c0:	add    BYTE PTR [edx-0x7b],ch
  4147c3:	jnp    0x414761
  4147c5:	and    al,0x78
  4147c7:	add    al,0x0
  4147c9:	add    BYTE PTR [ebx+esi*4-0x48],cl
  4147cd:	add    BYTE PTR [ebp-0x553f8267],bl
  4147d3:	and    eax,0xfedb
  4147d8:	push   edx
  4147d9:	call   0x41:0xcd3513b6
  4147e0:	sbb    BYTE PTR [edx+0x6],bl
  4147e3:	xchg   ebx,eax
  4147e4:	loope  0x4147eb
  4147e6:	add    eax,0x55a25631
  4147eb:	and    al,0x9a
  4147ed:	mov    al,ds:0x999d9780
  4147f2:	add    DWORD PTR [edx-0x6f],ebp
  4147f5:	dec    esi
  4147f6:	sub    eax,0xabe1c124
  4147fb:	(bad)  
  4147fc:	loop   0x414797
  4147fe:	add    DWORD PTR [ebx+0x289be19],ecx
  414804:	popf   
  414805:	cdq    
  414806:	push   ecx
  414807:	push   0xffffff99
  414809:	push   ecx
  41480a:	fisub  DWORD PTR [ebp-0x64]
  41480d:	cdq    
  41480e:	jge    0x4147d0
  414810:	imul   edx,ebx,0x4e6dc68a
  414816:	jge    0x41483c
  414818:	and    DWORD PTR [ecx+eax*1-0x56769300],ebx
  41481f:	jmp    0x75dd:0x83019a35
  414826:	and    BYTE PTR [edx+0x59],ch
  414829:	(bad)  
  41482a:	dec    ebx
  41482b:	mov    esp,DWORD PTR [ecx-0x3b]
  41482e:	inc    ebp
  41482f:	push   ecx
  414830:	dec    ebp
  414831:	sbb    BYTE PTR [eax],dl
  414833:	xor    al,0xb3
  414835:	pop    ecx
  414836:	add    DWORD PTR [ecx-0x7b774aa7],eax
  41483c:	add    BYTE PTR [eax],al
  41483e:	ror    DWORD PTR [ecx+0x1],0x0
  414842:	popf   
  414843:	and    bh,BYTE PTR ds:0x3d4ecd24
  414849:	and    al,0x95
  41484b:	add    dh,BYTE PTR [edi]
  41484d:	xchg   ecx,esp
  41484f:	out    0x2a,al
  414851:	push   esp
  414852:	int3   
  414853:	push   ebx
  414854:	add    BYTE PTR fs:[ecx-0x62fc1676],0x52
  41485c:	jo     0x41488e
  41485e:	or     DWORD PTR [esi-0x31],0xe702b232
  414865:	jle    0x4148c4
  414867:	ss add eax,0xe713252c
  41486d:	add    ebp,DWORD PTR [eax]
  41486f:	ss ret 
  414871:	pop    ss
  414872:	and    BYTE PTR ds:0x25d10f7,dl
  414878:	mov    ?,WORD PTR [eax]
  41487a:	mov    ecx,0x2aef720e
  41487f:	adc    al,0x27
  414881:	add    al,0x0
  414883:	fdiv   DWORD PTR [esi+0x30]
  414886:	ror    DWORD PTR [edx],0x6e
  414889:	into   
  41488a:	fild   DWORD PTR [ebp+0xb]
  41488d:	add    eax,0x50ba53ea
  414892:	jne    0x414897
  414894:	test   DWORD PTR [ebx],0xc3f4af9d
  41489a:	lods   al,BYTE PTR ds:[esi]
  41489b:	inc    edx
  41489c:	out    0x83,eax
  41489e:	dec    ecx
  41489f:	out    0xed,al
  4148a1:	add    al,BYTE PTR [eax]
  4148a3:	add    BYTE PTR [esi+0x4f],cl
  4148a6:	ss jo  0x41482a
  4148a9:	dec    edx
  4148aa:	jmp    0x6bbee5b2
  4148af:	loopne 0x414857
  4148b1:	add    edi,esp
  4148b3:	add    esp,DWORD PTR [eax-0x6248348b]
  4148b9:	add    ah,bh
  4148bb:	mov    bl,cl
  4148bd:	out    0xb6,al
  4148bf:	xchg   cl,ah
  4148c1:	out    0xb6,al
  4148c3:	push   ebx
  4148c4:	xor    BYTE PTR [edi],0x0
  4148c7:	int    0x92
  4148c9:	mov    DWORD PTR [ebp+eax*8+0x6a],0xa128ed12
  4148d1:	mov    DWORD PTR [ebp+eax*1-0x27],0xa12b4635
  4148d9:	mov    DWORD PTR [ebp+eax*1-0x23],0xa128ee49
  4148e1:	mov    DWORD PTR [ebp+eax*1-0x2f],0xa128ee2d
  4148e9:	mov    DWORD PTR [ebp+eax*1-0x1b],0xa128eeba
  4148f1:	mov    DWORD PTR [ebp+eax*8-0x32],0xa128eea9
  4148f9:	mov    DWORD PTR [ebp+eax*8+0x62],0xa128ed16
  414901:	call   0xe86a:0xb0498e80
  414908:	add    BYTE PTR [eax],al
  41490a:	and    eax,DWORD PTR [edi+0x29e6d24]
  414910:	add    BYTE PTR [ecx-0x51],dl
  414913:	outs   dx,BYTE PTR ds:[esi]
  414914:	add    cl,ch
  414916:	adc    eax,0x8a62084a
  41491b:	out    0xf,al
  41491d:	inc    ecx
  41491e:	mov    al,ds:0x15e8ff3d
  414923:	aaa    
  414924:	and    al,0xd5
  414926:	idiv   cl
  414928:	dec    esi
  414929:	call   0xbc299ccc
  41492e:	jns    0x4148df
  414930:	std    
  414931:	(bad)  
  414932:	push   eax
  414933:	repz mov edi,0x5ba215c2
  414939:	sub    ebx,DWORD PTR [edx+0x3a6254ad]
  41493f:	sub    eax,0x35c00ec
  414944:	add    BYTE PTR [eax],al
  414946:	daa    
  414947:	aas    
  414948:	mov    DWORD PTR [ebp-0x54],esi
  41494b:	pop    ecx
  41494c:	xlat   BYTE PTR ds:[ebx]
  41494d:	push   0x5d870185
  414952:	ins    BYTE PTR es:[edi],dx
  414953:	fstp   TBYTE PTR [esi+0x7b]
  414956:	mov    al,0x6
  414958:	mov    BYTE PTR [ebp+0x73],0x6
  41495c:	or     eax,DWORD PTR [edx+esi*8-0x2efffff9]
  414963:	inc    ebp
  414964:	sbb    BYTE PTR [ecx-0xac7187],cl
  41496a:	jns    0x4148fa
  41496c:	mov    ax,WORD PTR [eax]
  41496f:	add    BYTE PTR [edi+0x7203e7ec],al
  414975:	pop    es
  414976:	add    BYTE PTR [ebx-0x786d104],cl
  41497c:	xchg   DWORD PTR [ecx-0x5],esi
  41497f:	jne    0x414959
  414981:	push   0xffffffff
  414983:	add    BYTE PTR [ebx],dl
  414985:	test   DWORD PTR [ebx+0x1],esp
  414988:	hlt    
  414989:	add    BYTE PTR [eax-0x78],ch
  41498c:	xlat   BYTE PTR ds:[ebx]
  41498d:	add    BYTE PTR [eax],al
  41498f:	jmp    FWORD PTR [ecx]
  414991:	pop    ebp
  414992:	mov    dl,0x43
  414994:	hlt    
  414995:	outs   dx,DWORD PTR ds:[esi]
  414996:	adc    DWORD PTR [eax],edx
  414998:	out    0x40,eax
  41499a:	add    BYTE PTR ds:0x5c6,bh
  4149a0:	pop    ebp
  4149a1:	inc    edi
  4149a2:	std    
  4149a3:	push   DWORD PTR [edi+eax*2+0xb24de8]
  4149aa:	add    BYTE PTR [edi+0x5c],dl
  4149ad:	sti    
  4149ae:	or     eax,0xb181c400
  4149b3:	enter  0x7181,0xfb
  4149b7:	call   0x417404
  4149bc:	popf   
  4149bd:	es xchg esp,ecx
  4149c0:	nop
  4149c1:	std    
  4149c2:	mov    al,0x50
  4149c4:	sbb    BYTE PTR [edi],ch
  4149c6:	int    0x81
  4149c8:	push   ebp
  4149c9:	lods   eax,DWORD PTR ds:[esi]
  4149ca:	cdq    
  4149cb:	stc    
  4149cc:	cs mov ch,0xb2
  4149cf:	mov    al,bl
  4149d1:	fwait
  4149d2:	test   eax,eax
  4149d4:	add    BYTE PTR [eax],al
  4149d6:	icebp  
  4149d7:	(bad)  
  4149d9:	add    DWORD PTR [edx+0x57],esp
  4149dc:	ror    BYTE PTR [ecx-0x11a4230],1
  4149e2:	mov    ds:0x65f5c193,eax
  4149e7:	mov    eax,ds:0xa5d68bc1
  4149ec:	out    0xbe,al
  4149ee:	int    0xc
  4149f0:	je     0x4149f1
  4149f2:	cmp    cl,BYTE PTR [ebp+0x7d]
  4149f5:	jmp    FWORD PTR [edx]
  4149f7:	aaa    
  4149f8:	cmp    ah,bl
  4149fa:	adc    eax,0x57e8b1e7
  4149ff:	dec    ecx
  414a00:	mov    dl,0xfd
  414a02:	push   esp
  414a03:	sub    al,0x4
  414a05:	add    BYTE PTR [ebp+0xc88836],bl
  414a0b:	sub    eax,0x999dc6b2
  414a10:	inc    ecx
  414a11:	inc    edi
  414a12:	push   0xeb4ae932
  414a17:	mov    ah,0x85
  414a19:	rcr    BYTE PTR [ebp-0x6295fe67],0xbf
  414a20:	add    DWORD PTR [ebx+0x31515158],ecx
  414a26:	fst    QWORD PTR [ecx+0x12]
  414a29:	dec    ebp
  414a2a:	pushf  
  414a2b:	cdq    
  414a2c:	out    dx,al
  414a2d:	inc    edx
  414a2e:	mov    ch,0xa4
  414a30:	mov    BYTE PTR [eax-0x76fe6663],ch
  414a36:	sub    BYTE PTR [edx],al
  414a38:	pop    ds
  414a39:	sbb    eax,DWORD PTR [eax]
  414a3b:	add    BYTE PTR [ebp+0x35],ch
  414a3e:	out    0x3,eax
  414a40:	pop    es
  414a41:	push   es
  414a42:	fs dec eax
  414a44:	lea    edx,[edx-0x1]
  414a47:	or     bl,cl
  414a49:	add    edi,esp
  414a4b:	xchg   DWORD PTR [ebp+0x36],ebx
  414a4e:	loopne 0x414a79
  414a50:	sbb    al,0x2d
  414a52:	test   DWORD PTR [edi],0x7ade10ee
  414a58:	fidiv  WORD PTR [eax-0x613980c2]
  414a5e:	iret   
  414a5f:	outs   dx,DWORD PTR ds:[esi]
  414a60:	and    al,0x1
  414a62:	out    0x7c,eax
  414a64:	idiv   dl
  414a66:	rol    DWORD PTR [esi],0x8f
  414a69:	ret    0xc46b
  414a6c:	leave  
  414a6d:	xor    dh,ch
  414a6f:	jns    0x414a4f
  414a71:	mov    dh,0x1f
  414a73:	cmp    al,0xa9
  414a75:	clc    
  414a76:	push   ds
  414a77:	cmp    al,0xae
  414a79:	push   esi
  414a7a:	lods   eax,DWORD PTR ds:[esi]
  414a7b:	inc    edi
  414a7c:	and    BYTE PTR [ecx],al
  414a7e:	xchg   edx,eax
  414a7f:	inc    edx
  414a80:	cmp    DWORD PTR [edi+0x14],0xffffffb6
  414a84:	cdq    
  414a85:	xor    eax,0x6a5e7f26
  414a8a:	(bad)  
  414a8b:	popf   
  414a8c:	js     0x414a8f
  414a8e:	out    0x1d,eax
  414a90:	test   eax,0xaeb0df18
  414a95:	mov    ds:0xab9d4542,al
  414a9a:	cld    
  414a9b:	pop    es
  414a9c:	mov    WORD PTR [edx-0x19],es
  414a9f:	jl     0x414aa1
  414aa1:	add    ch,cl
  414aa3:	test   BYTE PTR [ebp+0x38],bl
  414aa6:	jp     0x414b1f
  414aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa9:	lahf   
  414aaa:	aaa    
  414aab:	add    bl,BYTE PTR [ebp-0x18885c86]
  414ab1:	sbb    ecx,DWORD PTR [edx-0x61580023]
  414ab7:	sbb    al,BYTE PTR [eax]
  414ab9:	jmp    0xa4cc4d5e
  414abe:	add    DWORD PTR ss:[esi-0x1b],0x36
  414ac3:	cmc    
  414ac4:	addr16 call 0x9501c968
  414aca:	xchg   esp,eax
  414acb:	push   eax
  414acc:	call   0xfde8ecf8
  414ad1:	(bad)  
  414ad2:	mov    bl,0x96
  414ad4:	call   0xfde8dcf8
  414ad9:	imul   edi,DWORD PTR [edx+0x1af600a7],0xddefd43
  414ae3:	jl     0x414b58
  414ae5:	shl    DWORD PTR [esi],1
  414ae7:	push   edx
  414ae8:	dec    ebp
  414ae9:	call   0xc6bccd8c
  414aee:	sahf   
  414aef:	xor    eax,0xa9a1b707
  414af4:	push   cs
  414af5:	ins    BYTE PTR es:[edi],dx
  414af6:	sub    BYTE PTR [eax+0x7dcdaefd],0x73
  414afd:	popa   
  414afe:	push   es
  414aff:	outs   dx,DWORD PTR ds:[esi]
  414b00:	push   0x71a79ee8
  414b05:	cmp    DWORD PTR [eax],eax
  414b07:	add    BYTE PTR [ecx],dh
  414b09:	(bad)  
  414b0a:	sahf   
  414b0b:	call   0x68299eae
  414b10:	mov    ds:0xe472fda7,eax
  414b15:	call   0xba5e:0x29e0e33
  414b1c:	fimul  WORD PTR [ebx-0x39]
  414b1f:	sub    ebx,DWORD PTR [edx+0x3a725302]
  414b25:	test   ah,ch
  414b27:	(bad)  [ecx+0x50]
  414b2a:	push   ebp
  414b2b:	ret    
  414b2c:	leave  
  414b2d:	jl     0x414ba2
  414b2f:	add    BYTE PTR [eax-0x7f4a17c3],cl
  414b35:	add    eax,0xadf18b00
  414b3a:	and    BYTE PTR [ebp+0x78],0x5
  414b3e:	test   BYTE PTR [esi],0xb5
  414b41:	pop    es
  414b42:	add    bl,BYTE PTR [ebx+0x30]
  414b45:	adc    eax,0x3bf9106a
  414b4a:	add    al,0x50
  414b4c:	jmp    0xb7cd4729
  414b51:	lea    esp,[eax-0x76a68475]
  414b57:	jle    0x414ba5
  414b59:	dec    edx
  414b5a:	sti    
  414b5b:	adc    eax,0x400fec
  414b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b61:	push   ecx
  414b62:	mov    DWORD PTR [ebp+0x70],edi
  414b65:	sub    eax,0x2dbee8bf
  414b6a:	sti    
  414b6b:	inc    DWORD PTR [eax]
  414b6d:	add    BYTE PTR [edi-0x5bb5b97d],al
  414b73:	cmp    DWORD PTR [ecx-0x8],0xffffffaf
  414b77:	(bad)
  414b7a:	mov    edi,0x71fffb59
  414b7f:	push   esi
  414b80:	mov    DWORD PTR [ebp-0x18],eax
  414b83:	pop    eax
  414b84:	jno    0x414b7a
  414b86:	mov    ebx,esi
  414b88:	mov    edi,edi
  414b8a:	mov    cl,0x72
  414b8c:	push   eax
  414b8d:	push   0xffffffd4
  414b8f:	cmp    ebp,eax
  414b91:	cld    
  414b92:	les    ebx,FWORD PTR [ecx-0x5]
  414b95:	add    DWORD PTR [eax+0xe],0x7f
  414b99:	clc    
  414b9a:	retf   
  414b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b9c:	xor    BYTE PTR [esi-0x74fffb0c],0xb3
  414ba3:	dec    esi
  414ba4:	push   0x1
  414ba6:	in     al,dx
  414ba7:	cmp    al,0xac
  414ba9:	inc    ebx
  414baa:	popf   
  414bab:	fwait
  414bac:	scas   al,BYTE PTR es:[edi]
  414bad:	adc    esp,DWORD PTR [ebp-0x56]
  414bb0:	inc    ecx
  414bb1:	add    BYTE PTR [esi+edx*2],dl
  414bb4:	stc    
  414bb5:	sbb    ch,0x97
  414bb8:	test   DWORD PTR [ecx-0x2fe6463],ebx
  414bbe:	nop
  414bbf:	rcl    DWORD PTR [eax+eax*2],cl
  414bc2:	popf   
  414bc3:	sahf   
  414bc4:	jbe    0x414bc6
  414bc6:	popf   
  414bc7:	cdq    
  414bc8:	cmp    BYTE PTR [ebx],cl
  414bca:	xchg   edx,eax
  414bcb:	xchg   ecx,edi
  414bcd:	cld    
  414bce:	mov    al,0x39
  414bd0:	adc    al,BYTE PTR [eax+0x0]
  414bd3:	add    BYTE PTR [ebp-0x62f7d8e4],bl
  414bd9:	sbb    al,0x2f
  414bdb:	or     BYTE PTR [ebp-0x3a95d5db],bl
  414be1:	cmp    ecx,0xfffffffc
  414be4:	test   al,0xb9
  414be6:	pop    edx
  414be7:	inc    ecx
  414be8:	popf   
  414be9:	enter  0x418,0xae
  414bed:	fld    DWORD PTR [ebx]
  414bef:	mov    DWORD PTR [ebp+0x1f],eax
  414bf2:	scas   al,BYTE PTR es:[edi]
  414bf3:	je     0x414bd5
  414bf5:	xor    al,0x10
  414bf7:	xor    BYTE PTR [ebx-0x7295fc27],dl
  414bfd:	push   ds
  414bfe:	inc    ebx
  414bff:	add    al,0xcd
  414c01:	inc    esi
  414c02:	inc    esi
  414c03:	add    al,0xcd
  414c05:	pusha  
  414c06:	ror    BYTE PTR [ecx-0x7915ec5d],cl
  414c0c:	call   0x17e1:0x1814c31c
  414c13:	push   esi
  414c14:	ins    DWORD PTR es:[edi],dx
  414c15:	adc    dl,0x89
  414c18:	pusha  
  414c19:	mov    cl,0x82
  414c1b:	les    edx,FWORD PTR [ebp+0x597d80f7]
  414c21:	cdq    
  414c22:	jl     0x414c69
  414c24:	dec    ebp
  414c25:	add    bl,bl
  414c27:	call   0x4407386
  414c2c:	dec    ecx
  414c2d:	pop    es
  414c2e:	int    0x82
  414c30:	dec    eax
  414c31:	cmp    al,0xe7
  414c33:	aaa    
  414c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c35:	dec    edi
  414c36:	iret   
  414c37:	add    al,BYTE PTR [eax]
  414c39:	add    BYTE PTR [ebp+0x41],ch
  414c3c:	out    0x1b,eax
  414c3e:	popf   
  414c3f:	add    bl,bh
  414c41:	add    esi,DWORD PTR [ebp-0x62fc41f4]
  414c47:	jge    0x414c70
  414c49:	aaa    
  414c4a:	mov    eax,ds:0xad9ae872
  414c4f:	dec    edi
  414c50:	jmp    DWORD PTR [edi]
  414c52:	stc    
  414c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c54:	push   cs
  414c55:	scas   al,BYTE PTR es:[edi]
  414c56:	push   cs
  414c57:	sti    
  414c58:	push   cs
  414c59:	cwde   
  414c5a:	push   ss
  414c5b:	add    edi,esp
  414c5d:	icebp  
  414c5e:	xor    al,BYTE PTR [edi-0x6b]
  414c61:	dec    edx
  414c62:	(bad)  
  414c63:	(bad)
  414c67:	jnp    0x414c3c
  414c69:	add    DWORD PTR [ecx-0x56],0x53c1a06a
  414c70:	cmp    eax,0x3f04b755
  414c75:	jecxz  0x414c26
  414c77:	out    0x3a,al
  414c79:	pushf  
  414c7a:	out    dx,al
  414c7b:	sub    BYTE PTR [esi+0xb3e1aad],bh
  414c81:	adc    BYTE PTR [esi],bl
  414c83:	ret    0x634
  414c86:	fstp   QWORD PTR [ecx+0x29d0316]
  414c8c:	adc    DWORD PTR [ebx+0x14930d10],esi
  414c92:	pop    ebp
  414c93:	add    dh,BYTE PTR [edi]
  414c95:	lods   eax,DWORD PTR ds:[esi]
  414c96:	scas   al,BYTE PTR es:[edi]
  414c97:	add    bl,al
  414c99:	inc    ebx
  414c9a:	popf   
  414c9b:	call   0xa6f0:0x2a99
  414ca2:	add    BYTE PTR [ebp-0x1f],ch
  414ca5:	hlt    
  414ca6:	and    DWORD PTR [ecx],0xffffff9e
  414ca9:	add    al,BYTE PTR [eax]
  414cab:	push   eax
  414cac:	shl    BYTE PTR [edi+0x3655e9fd],0x24
  414cb3:	stc    
  414cb4:	dec    ebx
  414cb5:	dec    esi
  414cb6:	and    al,0xf5
  414cb8:	cmp    ch,BYTE PTR es:[ecx+0x447f0846]
  414cbf:	add    eax,0x36f8819d
  414cc4:	test   al,0x82
  414cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc7:	jmp    0x8dc24f6a
  414ccc:	add    BYTE PTR [esi],0x0
  414ccf:	xchg   ebx,eax
  414cd0:	out    dx,al
  414cd1:	jns    0x414d17
  414cd3:	int    0x66
  414cd5:	sbb    al,0x0
  414cd7:	mov    ecx,0xe8ca9526
  414cdc:	sahf   
  414cdd:	jnp    0x414d5b
  414cdf:	lds    edi,FWORD PTR [esi-0x7d]
  414ce2:	(bad)  
  414ce3:	in     eax,0x1d
  414ce5:	daa    
  414ce6:	and    al,0xdd
  414ce8:	call   0x13a7:0x51e67a31
  414cef:	popa   
  414cf0:	scas   eax,DWORD PTR es:[edi]
  414cf1:	inc    edx
  414cf2:	add    BYTE PTR [edx-0xa],ch
  414cf5:	loop   0x414d69
  414cf7:	cmp    al,0xc4
  414cf9:	out    dx,eax
  414cfa:	mov    dh,BYTE PTR ds:0xa231e245
  414d00:	mov    ah,0xfc
  414d02:	mov    bl,BYTE PTR [ecx]
  414d04:	add    BYTE PTR [eax],al
  414d06:	push   ecx
  414d07:	cmp    edx,0xffffffe0
  414d0a:	imul   edi,esi,0xd35ab89
  414d10:	mov    edi,DWORD PTR [ecx]
  414d12:	add    BYTE PTR [edx-0x12e1306],0x3
  414d19:	mov    al,ds:0x8af925
  414d1e:	xchg   esp,eax
  414d1f:	ja     0x414ca1
  414d21:	cli    
  414d22:	stc    
  414d23:	out    dx,al
  414d24:	adc    al,BYTE PTR [ebx*2-0x48b2883]
  414d2b:	test   eax,0xbbb640fe
  414d30:	out    0x7,eax
  414d32:	test   BYTE PTR [ecx+0x4],ah
  414d35:	mov    BYTE PTR [ebp+0x5f45fd32],dh
  414d3b:	mov    esi,0xc9f9c084
  414d40:	sbb    ebx,0x44c49de9
  414d46:	cwde   
  414d47:	sahf   
  414d48:	(bad)  
  414d49:	push   DWORD PTR [ecx+eax*1+0x2a8c77fb]
  414d50:	jae    0x414d5e
  414d52:	mov    bl,0xee
  414d54:	add    ecx,DWORD PTR [ebp-0x17c662b0]
  414d5a:	sti    
  414d5b:	pop    ecx
  414d5c:	sti    
  414d5d:	push   ecx
  414d5f:	cmp    eax,0x89142024
  414d64:	(bad)  
  414d67:	pop    ecx
  414d68:	xchg   DWORD PTR [eax+eax*1+0x0],eax
  414d6c:	pop    eax
  414d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d6e:	in     eax,0x6b
  414d70:	out    dx,eax
  414d71:	pop    ecx
  414d72:	sti    
  414d73:	lea    edi,[eax-0x5e]
  414d76:	or     eax,0x7595c50
  414d7b:	add    DWORD PTR [edx+eax*4],esi
  414d7e:	ror    BYTE PTR [edi],0xc9
  414d81:	scas   al,BYTE PTR es:[edi]
  414d82:	cld    
  414d83:	push   ebx
  414d85:	sub    al,BYTE PTR [esp+0x4c]
  414d89:	push   ecx
  414d8a:	call   0x429c14
  414d8f:	mov    ebx,esp
  414d91:	adc    bh,0x74
  414d94:	mov    ebx,0x9d247c25
  414d99:	mov    bl,0x80
  414d9b:	std    
  414d9c:	mov    edx,edx
  414d9e:	jle    0x414d91
  414da0:	push   ds
  414da1:	neg    edi
  414da3:	pop    ds
  414da4:	popf   
  414da5:	adc    DWORD PTR [ebx+ecx*4+0x61],edx
  414da9:	mov    bh,0xd9
  414dab:	imul   ebx,DWORD PTR [ebp-0x18e163f5],0xd9810199
  414db5:	xchg   esi,eax
  414db6:	sbb    edi,DWORD PTR [edx]
  414db8:	sbb    BYTE PTR [edi-0x23],dl
  414dbb:	aaa    
  414dbc:	imul   ebp,DWORD PTR [ebx-0x56],0x13
  414dc0:	ins    DWORD PTR es:[edi],dx
  414dc1:	lds    eax,FWORD PTR [ecx+0x0]
  414dc4:	push   ds
  414dc5:	fcomip st,st(7)
  414dc7:	mov    ah,BYTE PTR [ecx-0x9]
  414dca:	jecxz  0x414e1b
  414dcc:	mov    ch,0xb7
  414dce:	test   al,0xfd
  414dd0:	add    BYTE PTR [eax],al
  414dd2:	call   0xbc8e:0xe23ac219
  414dd9:	push   ecx
  414dda:	jne    0x414dd0
  414ddc:	sbb    eax,0xf18282fd
  414de1:	jb     0x414d80
  414de3:	cdq    
  414de4:	stos   BYTE PTR es:[edi],al
  414de5:	xor    esi,DWORD PTR [ecx-0x18]
  414de8:	inc    esp
  414de9:	add    BYTE PTR [edx-0x39],ch
  414dec:	adc    DWORD PTR [ecx],edx
  414dee:	fstp   QWORD PTR [ecx-0x6663fe18]
  414df4:	add    DWORD PTR ds:0xfda92119,ecx
  414dfa:	dec    edx
  414dfb:	int    0x2d
  414dfd:	and    al,0xa1
  414dff:	shr    DWORD PTR [ecx+ebx*4-0x40096664],0xd2
  414e07:	add    ecx,DWORD PTR [ebp-0x77]
  414e0a:	inc    eax
  414e0b:	shufps xmm0,XMMWORD PTR [ebx*4+0x1eec7d0e],0x3
  414e14:	xchg   ebx,eax
  414e15:	aas    
  414e16:	ins    BYTE PTR es:[edi],dx
  414e17:	dec    esp
  414e18:	ss stos DWORD PTR es:[edi],eax
  414e1a:	mov    ?,esi
  414e1c:	arpl   WORD PTR [eax+0x41],cx
  414e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e20:	adc    al,0xfc
  414e22:	and    eax,0xe8c58fb3
  414e27:	mov    ds:0xaa7e867e,eax
  414e2c:	out    0x78,eax
  414e2e:	pop    esi
  414e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e30:	pop    ss
  414e31:	pushf  
  414e32:	mov    edi,0x3e709
  414e37:	add    BYTE PTR [ebx+ecx*8],ah
  414e3a:	jo     0x414e84
  414e3c:	xchg   ebp,eax
  414e3d:	jge    0x414e71
  414e3f:	xor    BYTE PTR [eax+0x4d67a475],ah
  414e45:	out    dx,eax
  414e46:	es inc ebx
  414e48:	vpavgb ymm0,ymm1,YMMWORD PTR [ebx]
  414e4c:	popf   
  414e4d:	js     0x414e5e
  414e4f:	js     0x414e7f
  414e51:	stos   BYTE PTR es:[edi],al
  414e52:	aas    
  414e53:	dec    eax
  414e54:	stos   BYTE PTR es:[edi],al
  414e55:	add    ah,bh
  414e57:	dec    edx
  414e58:	repz js 0x414e85
  414e5b:	dec    esi
  414e5c:	(bad)  
  414e5d:	rcr    bh,0x3
  414e60:	adc    al,0x2d
  414e62:	or     eax,DWORD PTR [esi-0x7f190902]
  414e68:	imul   ebp,DWORD PTR [esi],0xffffffb9
  414e6b:	js     0x414e51
  414e6d:	in     al,dx
  414e6e:	arpl   WORD PTR [eax+0x5d],ax
  414e71:	push   edx
  414e72:	pop    esp
  414e73:	inc    edx
  414e74:	imul   edx,DWORD PTR [edx-0x31],0x4e
  414e78:	stc    
  414e79:	mov    ds:0x2d5d7fde,al
  414e7e:	cli    
  414e7f:	and    DWORD PTR [ebx+edi*8],edx
  414e82:	inc    esp
  414e83:	in     eax,dx
  414e84:	fbstp  TBYTE PTR [eax+0x77b8fe3c]
  414e8a:	es push es
  414e8c:	ret    
  414e8d:	out    0xff,eax
  414e8f:	sub    ebp,ebp
  414e91:	sub    eax,0xf6daae4b
  414e96:	sub    BYTE PTR [esi-0x128d13fd],0x0
  414e9d:	add    al,dl
  414e9f:	mov    bl,0x69
  414ea1:	lahf   
  414ea2:	repz ja 0x414ee8
  414ea5:	dec    ebp
  414ea6:	push   ecx
  414ea7:	sbb    BYTE PTR [edx],bh
  414ea9:	and    ch,BYTE PTR [edx+0x27]
  414eac:	cld    
  414ead:	ins    BYTE PTR es:[edi],dx
  414eae:	stos   BYTE PTR es:[edi],al
  414eaf:	cli    
  414eb0:	lds    ebp,FWORD PTR [esp+eiz*8]
  414eb3:	mov    ds:0x9a02f488,al
  414eb8:	mov    ds:0x83a505d3,eax
  414ebd:	sub    DWORD PTR [ebp-0x55376f0],ecx
  414ec3:	lock rcl DWORD PTR [esi-0x10],1
  414ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec8:	jae    0x414ebb
  414eca:	push   ss
  414ecb:	je     0x414ee4
  414ecd:	jmp    0xe684c970
  414ed2:	cmc    
  414ed3:	or     BYTE PTR cs:[ecx+0x4e],al
  414ed7:	sub    bh,ch
  414ed9:	adc    edi,DWORD PTR es:[esi]
  414edc:	or     eax,0xfd9fd110
  414ee1:	push   ss
  414ee2:	call   0x45c23091
  414ee7:	mov    al,ds:0x24162232
  414eec:	std    
  414eed:	(bad)  
  414eee:	xor    eax,0xe3f88939
  414ef3:	cwde   
  414ef4:	or     eax,0x32365
  414ef9:	jmp    0xbbc547ce
  414efe:	jp     0x414f1e
  414f00:	push   ebp
  414f01:	sbb    al,BYTE PTR [eax]
  414f03:	add    BYTE PTR [esi],al
  414f05:	aam    0xfc
  414f07:	imul   ecx,DWORD PTR [eax],0x570072d3
  414f0d:	and    BYTE PTR [esi+0x1],dl
  414f10:	mov    ah,0x6f
  414f12:	js     0x414f88
  414f14:	xor    DWORD PTR [esi+0x4d158fa],eax
  414f1a:	push   0x4
  414f1c:	xchg   ebx,eax
  414f1e:	add    bl,BYTE PTR [edi-0x39]
  414f21:	and    BYTE PTR [esi],dl
  414f23:	(bad)  
  414f24:	into   
  414f25:	mov    dh,0x80
  414f27:	sti    
  414f28:	std    
  414f29:	ror    BYTE PTR [edi],cl
  414f2b:	data16 jmp 0x414f59
  414f2e:	rol    cl,cl
  414f30:	adc    eax,0x3e0363a2
  414f35:	in     al,0x7e
  414f37:	jmp    0x8d6fce50
  414f3c:	fisubr WORD PTR [edx]
  414f3e:	cmp    bl,0xc1
  414f41:	ror    BYTE PTR [edi],cl
  414f43:	mov    bx,0xd22b
  414f47:	shl    DWORD PTR [ebp-0x5f],0x63
  414f4b:	add    ebp,DWORD PTR [esi-0x1d]
  414f4e:	jle    0x414f39
  414f50:	mov    bl,0x7e
  414f52:	push   ss
  414f53:	lea    ecx,[esi]
  414f55:	mov    eax,DWORD PTR [eax+0x13d281fb]
  414f5b:	mov    bp,WORD PTR [ebx]
  414f5e:	rol    cl,cl
  414f60:	xchg   ebp,eax
  414f61:	mov    eax,ds:0xe3be0363
  414f66:	jle    0x414f51
  414f68:	add    BYTE PTR [eax],al
  414f6a:	xor    ebx,DWORD PTR [edx+0x7e42c9b4]
  414f70:	mov    dl,0x5b
  414f72:	add    BYTE PTR [eax+0x5af70374],bh
  414f78:	std    
  414f79:	gs mov ebp,0xdbc7889d
  414f7f:	dec    eax
  414f80:	mov    edi,0x7fc0d33
  414f85:	popfw  
  414f87:	and    bh,ah
  414f89:	push   edi
  414f8a:	fld    TBYTE PTR [edi+edi*2-0x2e]
  414f8e:	test   eax,0x210a79ff
  414f93:	push   edx
  414f94:	xor    BYTE PTR [esi+0x6e],cl
  414f97:	imul   eax,DWORD PTR [edi+esi*8+0x69fed6c8],0xffffff9f
  414f9f:	inc    ebx
  414fa0:	cdq    
  414fa1:	add    ebx,DWORD PTR ds:0x9c72d962
  414fa7:	in     eax,dx
  414fa8:	dec    ebp
  414fa9:	xor    ebx,esi
  414fab:	or     DWORD PTR ds:0x26c1f480,0x17
  414fb2:	jbe    0x414fcd
  414fb4:	cli    
  414fb5:	gs xchg edx,eax
  414fb7:	fnstcw WORD PTR [edx+0x1e1a9e66]
  414fbd:	add    ebx,0xd3b4f4fa
  414fc3:	ins    BYTE PTR es:[edi],dx
  414fc4:	ja     0x414fd0
  414fc6:	sbb    eax,0xbf7af432
  414fcb:	es mov ebx,0x9e000074
  414fd1:	sub    al,0xbc
  414fd3:	call   FWORD PTR [ebx-0x605749e8]
  414fd9:	pop    edi
  414fda:	sti    
  414fdb:	data16 fs icebp 
  414fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fdf:	add    BYTE PTR [ebp-0x14f28371],bl
  414fe5:	in     al,dx
  414fe6:	lock mov edi,0x871ba1f7
  414fec:	mov    ds:0x2653c251,al
  414ff1:	test   BYTE PTR [eax-0x67d49a1c],0x90
  414ff8:	pushf  
  414ff9:	test   eax,0xc5a18b01
  414ffe:	push   ecx
  414fff:	push   0x3e9029f
  415004:	popf   
  415005:	lahf   
  415006:	hlt    
  415007:	(bad)  
  415008:	scas   al,BYTE PTR es:[edi]
  415009:	inc    edx
  41500a:	out    0xae,eax
  41500c:	push   ebp
  41500d:	cld    
  41500e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500f:	inc    ebx
  415010:	and    al,0xa6
  415012:	and    al,0xc3
  415014:	sub    dh,ah
  415016:	mov    dh,0x10
  415018:	fld    QWORD PTR [edx]
  41501a:	scas   al,BYTE PTR es:[edi]
  41501b:	std    
  41501c:	sbb    DWORD PTR ds:[edi],esp
  41501f:	add    al,0x1d
  415021:	fimul  WORD PTR [esi-0x40]
  415024:	pop    esp
  415025:	add    ah,bh
  415027:	xor    ch,al
  415029:	aaa    
  41502a:	push   esi
  41502b:	retf   
  41502c:	fiadd  WORD PTR [ebx-0x19]
  41502f:	dec    esi
  415030:	lock cmc 
  415032:	xchg   edx,eax
  415033:	adc    DWORD PTR [eax],eax
  415035:	add    BYTE PTR [ebp+0x2],bl
  415038:	addr16 call 0x46c1678
  41503e:	popf   
  41503f:	adc    eax,0xa0019bd1
  415044:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415046:	and    ebx,eax
  415048:	rcl    DWORD PTR [eax+ebx*8],cl
  41504b:	add    eax,0x25cc083
  415050:	sub    ebp,0x2d0273
  415056:	cmc    
  415057:	lds    ebp,FWORD PTR [edx+0x3638a203]
  41505d:	adc    BYTE PTR [ebp-0xffc590c],cl
  415063:	mov    WORD PTR [ebx-0x527c6121],gs
  415069:	inc    DWORD PTR [ecx+0x7afb8d83]
  41506f:	xchg   DWORD PTR [ebp-0x34b9db09],esp
  415075:	sti    
  415076:	and    cl,BYTE PTR [eax-0x14]
  415079:	jp     0x4150d6
  41507b:	les    eax,FWORD PTR [eax]
  41507d:	loope  0x41501d
  41507f:	cmp    BYTE PTR [ecx+0xc037f8],cl
  415085:	jmp    0x585e928
  41508a:	inc    ecx
  41508b:	mov    al,ds:0xaae8ef71
  415090:	inc    ecx
  415091:	inc    ecx
  415092:	clc    
  415093:	pushf  
  415094:	mov    DWORD PTR [edi-0x16fb3b1d],ebp
  41509a:	add    BYTE PTR [eax],al
  41509c:	ror    DWORD PTR [ecx+0x1a3568ec],cl
  4150a2:	(bad)  
  4150a3:	call   0x4d481646
  4150a8:	mov    ebx,0xfa690042
  4150ad:	retw   
  4150af:	sub    ah,BYTE PTR [ecx+0x3145502]
  4150b5:	pop    esi
  4150b6:	fsubr  DWORD PTR [esp+ebx*2-0x6d81aafe]
  4150bd:	scas   al,BYTE PTR es:[edi]
  4150be:	adc    ch,BYTE PTR [ecx]
  4150c0:	mov    eax,ds:0x12413b82
  4150c5:	inc    ecx
  4150c6:	add    cl,ch
  4150c8:	jnp    0x4150c6
  4150ca:	out    0x7,eax
  4150cc:	clc    
  4150cd:	pushf  
  4150ce:	std    
  4150cf:	ins    DWORD PTR es:[edi],dx
  4150d0:	loope  0x4150e7
  4150d2:	(bad)  
  4150d4:	mov    dl,0x6a
  4150d6:	ret    
  4150d7:	stos   BYTE PTR es:[edi],al
  4150d8:	sahf   
  4150d9:	ins    BYTE PTR es:[edi],dx
  4150da:	ss test al,0x9e
  4150dd:	enter  0x8103,0x5a
  4150e1:	inc    esp
  4150e2:	add    al,ch
  4150e4:	loope  0x415085
  4150e6:	adc    ebx,DWORD PTR [ecx]
  4150e8:	scas   eax,DWORD PTR es:[edi]
  4150e9:	inc    edx
  4150ea:	add    BYTE PTR [edx+eax*8-0x62],ch
  4150ee:	push   eax
  4150ef:	fs cli 
  4150f1:	mov    bh,dh
  4150f3:	push   cs
  4150f4:	cmp    BYTE PTR [ebx],dh
  4150f6:	push   0xfda27800
  4150fb:	dec    DWORD PTR [edi+eiz*2]
  4150fe:	sti    
  4150ff:	add    BYTE PTR [eax],al
  415101:	add    BYTE PTR [edi+eiz*2+0x71],al
  415105:	or     BYTE PTR [ebx+0x34fffcd2],al
  41510b:	sbb    DWORD PTR [ecx-0x4],edi
  41510e:	arpl   WORD PTR ds:0x68415cc,cx
  415114:	add    eax,0x8d52f3c8
  41511a:	mov    ecx,0xe3fffe19
  41511f:	sti    
  415120:	dec    DWORD PTR [edi+0x53]
  415123:	or     eax,0x6c41634
  415128:	jg     0x4150ee
  41512a:	adc    BYTE PTR [ebx+0x6722e4b9],al
  415130:	sti    
  415131:	push   es
  415132:	mov    bl,0xd2
  415134:	push   cs
  415135:	and    DWORD PTR [ecx+0x7d],0xfffffffe
  415139:	jmp    DWORD PTR [ebx]
  41513b:	icebp  
  41513c:	or     dl,BYTE PTR [ebp+0x24c86834]
  415142:	(bad)  
  415143:	sbb    DWORD PTR [esi+0xd],eax
  415146:	pop    ds
  415147:	sahf   
  415148:	ret    
  415149:	inc    esi
  41514a:	rol    DWORD PTR [eax],1
  41514c:	xchg   DWORD PTR [ebp-0x49878],eax
  415152:	pop    esp
  415153:	mov    ch,0xfe
  415155:	inc    esp
  415157:	and    BYTE PTR [esi+0x8],0xb4
  41515b:	sbb    DWORD PTR [esi+0xc],eax
  41515e:	das    
  41515f:	fadd   QWORD PTR [edi]
  415161:	mov    DWORD PTR [edx-0x63],ecx
  415164:	mov    dh,al
  415166:	add    BYTE PTR [eax],al
  415168:	mov    ebp,0x4a0004c3
  41516d:	sbb    ch,ch
  41516f:	(bad)  
  415170:	jne    0x4151af
  415172:	jbe    0x4151b4
  415174:	popf   
  415175:	stos   DWORD PTR es:[edi],eax
  415176:	cdq    
  415177:	jg     0x415116
  415179:	stos   DWORD PTR es:[edi],eax
  41517a:	add    DWORD PTR [esi+0x5e],ebx
  41517d:	sub    BYTE PTR [ebx],ah
  41517f:	add    al,0x62
  415181:	pop    ss
  415182:	add    BYTE PTR [eax-0x4a0c1764],dh
  415188:	fstp   TBYTE PTR [esi-0x2c678bc7]
  41518e:	pop    ss
  41518f:	add    DWORD PTR [edi-0x60953a95],ecx
  415195:	shr    BYTE PTR ds:0xd6a6460f,cl
  41519b:	(bad)  
  41519c:	fdiv   QWORD PTR [ecx]
  41519e:	or     cl,BYTE PTR [edx-0x17c45025]
  4151a4:	out    0xaa,eax
  4151a6:	add    DWORD PTR [eax],eax
  4151a8:	outs   dx,DWORD PTR ds:[esi]
  4151a9:	cli    
  4151aa:	xor    edi,ebp
  4151ac:	mov    al,0x63
  4151ae:	idiv   DWORD PTR [edi]
  4151b0:	popf   
  4151b1:	mov    eax,0x73f581cc
  4151b6:	mov    eax,DWORD PTR [esi-0x67]
  4151b9:	mov    esp,0x27dec078
  4151be:	and    cl,BYTE PTR [eax]
  4151c0:	popf   
  4151c1:	xchg   edi,eax
  4151c2:	or     dh,BYTE PTR [edi]
  4151c4:	pop    ebx
  4151c5:	mov    ebx,0x67dd9412
  4151ca:	mov    eax,ds:0xc9000013
  4151cf:	popf   
  4151d0:	inc    ecx
  4151d1:	add    BYTE PTR [eiz*2-0x41227cf7],dl
  4151d8:	jecxz  0x41522e
  4151da:	dec    ebp
  4151db:	dec    esp
  4151dc:	sbb    al,BYTE PTR [edx+ebp*4]
  4151df:	mov    ebp,0xab5d13a5
  4151e4:	mov    al,al
  4151e6:	adc    BYTE PTR [esp+ecx*4+0x319ad7e],ch
  4151ed:	ror    DWORD PTR [edx-0x7ff462fd],0xf6
  4151f4:	ss stc 
  4151f6:	mov    edx,0xa52a6a02
  4151fb:	add    bl,cl
  4151fd:	ret    
  4151fe:	pop    esp
  4151ff:	mov    BYTE PTR [ebp-0x164e3f9],ch
  415205:	pop    ss
  415206:	mov    bl,0x28
  415208:	jmp    0xff37a240
  41520d:	clc    
  41520e:	mov    al,BYTE PTR [edx]
  415210:	out    0x19,al
  415212:	cdq    
  415213:	fwait
  415214:	hlt    
  415215:	call   DWORD PTR [eax-0x1c7918be]
  41521b:	push   es
  41521c:	into   
  41521d:	mov    fs,ebx
  41521f:	or     ch,BYTE PTR [ebx+eax*8-0x57]
  415223:	pop    es
  415224:	pop    ss
  415225:	mov    ds:0x43dcb2ae,eax
  41522a:	popf   
  41522b:	jg     0x415272
  41522d:	or     al,0x9d
  41522f:	mov    edi,0x8f3c
  415234:	icebp  
  415235:	or     DWORD PTR [ebx-0x186405e5],0x379e5e90
  41523f:	xchg   ecx,eax
  415240:	push   ds
  415241:	mov    eax,DWORD PTR [ebp+0xf32e0a2]
  415247:	or     BYTE PTR [ebp+0x2],bh
  41524a:	out    0x2b,eax
  41524c:	rcr    BYTE PTR [ebx+0x15c803e7],1
  415252:	out    dx,eax
  415253:	retf   0x9e5e
  415256:	rol    DWORD PTR [ebx*4-0x1907a9fe],cl
  41525d:	cmc    
  41525e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525f:	add    ebx,DWORD PTR [esi]
  415261:	ret    
  415262:	mov    esp,0x13861410
  415267:	mov    eax,ds:0x41009b98
  41526c:	xchg   edx,eax
  41526d:	fwait
  41526e:	std    
  41526f:	jmp    0x297352af
  415274:	push   ecx
  415275:	rol    BYTE PTR [ecx+ebp*8],0x8f
  415279:	push   esp
  41527a:	shl    BYTE PTR [ecx-0x6ab7f776],0xa3
  415281:	sar    DWORD PTR [edi+0x57f5b02a],1
  415287:	sub    cl,BYTE PTR [eax-0x19d5a800]
  41528d:	dec    edx
  41528e:	je     0x415272
  415290:	and    ebp,DWORD PTR [edx-0x2f67a2ed]
  415296:	mov    edi,0xd10000aa
  41529b:	add    cl,al
  41529d:	cdq    
  41529e:	sahf   
  41529f:	ror    DWORD PTR ds:0x480ee197,0x3d
  4152a6:	xchg   ebx,eax
  4152a7:	dec    edx
  4152a8:	je     0x415294
  4152aa:	icebp  
  4152ab:	pop    edx
  4152ac:	rol    DWORD PTR [ebx-0x63],0x3a
  4152b0:	rol    DWORD PTR [ebx+0x11],0x33
  4152b4:	shl    esi,0x65
  4152b7:	add    cl,BYTE PTR [eax+0x31]
  4152ba:	xchg   ebp,eax
  4152bb:	push   cs
  4152bc:	add    DWORD PTR [ecx-0x25fef116],0xe56ac0de
  4152c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c7:	shr    DWORD PTR [edx-0x27],0x96
  4152cb:	rcl    DWORD PTR [ebx+0x62],0xd
  4152cf:	dec    ebx
  4152d0:	mov    DWORD PTR [edi+0x66fdc2f9],esp
  4152d6:	cld    
  4152d7:	xor    DWORD PTR [edx-0x17],ebp
  4152da:	std    
  4152db:	push   cs
  4152dc:	or     BYTE PTR [eax+0x5a],ah
  4152df:	sahf   
  4152e0:	std    
  4152e1:	hlt    
  4152e2:	shl    ah,cl
  4152e4:	aas    
  4152e5:	add    BYTE PTR [ebp+eax*4+0x42090cc4],dh
  4152ec:	cld    
  4152ed:	push   eax
  4152ee:	retf   
  4152ef:	icebp  
  4152f0:	pop    es
  4152f1:	call   DWORD PTR [edx+0x2]
  4152f4:	sti    
  4152f5:	adc    eax,0x3d9c74
  4152fa:	xchg   ebx,eax
  4152fb:	push   esi
  4152fc:	pop    ss
  4152fd:	rol    BYTE PTR [eax],0x0
  415300:	inc    esp
  415301:	int    0xc2
  415303:	add    al,0x74
  415305:	rol    DWORD PTR [esi-0x3978fa14],1
  41530b:	call   0x3cb707
  415310:	xor    al,0xe8
  415312:	(bad)  
  415313:	(bad)  
  415314:	ror    DWORD PTR ds:0x63384585,1
  41531a:	adc    DWORD PTR [edx+esi*1],esi
  41531d:	inc    esi
  41531e:	add    BYTE PTR [ebx+0x45890a00],al
  415324:	pop    eax
  415325:	(bad)  
  415326:	cli    
  415327:	jne    0x415355
  415329:	arpl   WORD PTR [esi+0x4],si
  41532c:	pop    ebx
  41532d:	xchg   ecx,eax
  41532e:	mov    ecx,0xf2fec415
  415333:	fsubr  st,st(7)
  415335:	lds    eax,FWORD PTR [eax-0x37]
  415338:	add    al,BYTE PTR ss:[eax]
  41533b:	call   DWORD PTR [eax-0x6b00fe56]
  415341:	push   es
  415342:	sti    
  415343:	jo     0x415345
  415345:	arpl   WORD PTR [ecx],dx
  415347:	loopne 0x41530a
  415349:	inc    ebp
  41534a:	add    bh,dh
  41534c:	cld    
  41534d:	xchg   esi,eax
  41534e:	mov    ebp,0x20640
  415353:	push   ebp
  415354:	aas    
  415355:	imul   edi,DWORD PTR [edi-0x14],0x5755cfa4
  41535c:	das    
  41535d:	je     0x4152e6
  41535f:	fcomp  DWORD PTR [ebp+0xfde443]
  415365:	add    BYTE PTR [edx+0x29c08548],ch
  41536b:	cdq    
  41536c:	sub    esi,DWORD PTR [ecx]
  41536e:	cli    
  41536f:	xor    edi,DWORD PTR [eax]
  415371:	(bad)  
  415372:	xchg   edx,eax
  415373:	rol    BYTE PTR [eax+eax*8-0x4af0f9ef],1
  41537a:	sahf   
  41537b:	sub    al,0x99
  41537d:	add    dh,al
  41537f:	sahf   
  415380:	sub    edx,DWORD PTR [eax]
  415382:	aad    0x4
  415384:	rdtsc  
  415386:	push   esp
  415387:	sub    al,0x99
  415389:	adc    eax,0x8bc23692
  41538e:	fcomp  QWORD PTR [eax+0x7bb1e081]
  415394:	xor    al,0xfd
  415396:	rcr    DWORD PTR [edi-0x699aec60],cl
  41539c:	inc    ecx
  41539d:	add    BYTE PTR [eax],ah
  41539f:	imul   ebx,DWORD PTR [eax],0x2a
  4153a2:	es out dx,al
  4153a4:	not    DWORD PTR ds:0xd59eabdd
  4153aa:	out    0x9b,al
  4153ac:	out    0xff,al
  4153ae:	sbb    dl,BYTE PTR [edx]
  4153b0:	inc    edi
  4153b1:	cld    
  4153b2:	(bad)  
  4153b3:	ins    BYTE PTR es:[edi],dx
  4153b4:	sbb    BYTE PTR [esi],cl
  4153b6:	cmc    
  4153b7:	neg    DWORD PTR [ebp+0x176002fd]
  4153bd:	cld    
  4153be:	cli    
  4153bf:	(bad)  
  4153c0:	in     eax,0x15
  4153c2:	pop    ebp
  4153c3:	stos   DWORD PTR es:[edi],eax
  4153c4:	sahf   
  4153c5:	aad    0xa6
  4153c7:	ins    BYTE PTR es:[edi],dx
  4153c8:	pop    ss
  4153c9:	xor    al,BYTE PTR [eax]
  4153cb:	add    dh,dh
  4153cd:	xchg   esp,eax
  4153ce:	push   ecx
  4153cf:	inc    edi
  4153d1:	enter  0x4393,0xed
  4153d5:	mov    edx,0x8dca1518
  4153da:	or     DWORD PTR [ebx+0x34370258],ecx
  4153e0:	and    al,0x3f
  4153e2:	jmp    0x41540d
  4153e4:	lea    ebp,[edx+0x29d02b1]
  4153ea:	les    ebp,FWORD PTR fs:[ecx]
  4153ed:	lahf   
  4153ee:	push   edx
  4153ef:	nop    DWORD PTR [esi]
  4153f2:	inc    ebx
  4153f3:	add    al,0x9
  4153f5:	mov    edx,0x98811936
  4153fa:	aam    0xe7
  4153fc:	test   al,0x42
  4153fe:	out    0xd1,eax
  415400:	cmp    bh,BYTE PTR [eax]
  415402:	mov    ebp,0xdfc55a3a
  415407:	add    edx,ebx
  415409:	mov    edx,DWORD PTR [edi]
  41540b:	shl    DWORD PTR [edx],cl
  41540d:	add    DWORD PTR [ebp-0x11cea5f0],0x78
  415414:	pop    ebp
  415415:	xchg   BYTE PTR [edi-0x62],ch
  415418:	sbb    al,0xa0
  41541a:	in     al,0x90
  41541c:	rol    BYTE PTR [ebx],0xcf
  41541f:	sub    dh,BYTE PTR [esi]
  415421:	cwde   
  415422:	fiadd  WORD PTR [edi-0x53dcf0a3]
  415428:	call   DWORD PTR [ebp-0x3ce66132]
  41542e:	cmp    eax,DWORD PTR [ebx+0x0]
  415431:	add    BYTE PTR [eax+0x1582ea4f],ch
  415437:	add    eax,0xf277093c
  41543c:	push   cs
  41543d:	stos   DWORD PTR es:[edi],eax
  41543e:	xchg   ebx,eax
  41543f:	shr    DWORD PTR [edi-0x12100a7e],cl
  415445:	js     0x415479
  415447:	xchg   BYTE PTR [eax],ch
  415449:	lahf   
  41544a:	sbb    al,0xa3
  41544c:	jmp    0x415481
  41544e:	dec    esp
  41544f:	xchg   edi,eax
  415450:	std    
  415451:	pop    es
  415452:	fsubr  st,st(5)
  415454:	jb     0x41544e
  415456:	xchg   edx,eax
  415457:	add    al,BYTE PTR [eax]
  415459:	ins    BYTE PTR es:[edi],dx
  41545a:	ficom  WORD PTR [ebx]
  41545c:	pop    ss
  41545d:	imul   esp,DWORD PTR [eax-0x542400f5],0x885e142c
  415467:	(bad)  
  415468:	cld    
  415469:	cld    
  41546a:	(bad)  
  41546b:	repz aas 
  41546d:	jmp    0xedb51787
  415472:	out    dx,al
  415473:	xchg   edi,eax
  415474:	jmp    0xdedf:0x13f333d7
  41547b:	add    cl,BYTE PTR [ecx-0x474c9cf]
  415481:	sbb    ebp,DWORD PTR es:0xed7af4fd
  415488:	aas    
  415489:	jmp    0xaf9eabda
  41548e:	pop    edi
  41548f:	xor    ecx,DWORD PTR [ecx-0x6f59deeb]
  415495:	jmp    0x2df549a
  41549a:	push   ecx
  41549b:	sub    DWORD PTR [eax+0x2377838b],0xffffff95
  4154a2:	std    
  4154a3:	push   ebx
  4154a4:	mov    eax,ds:0x5c41e832
  4154a9:	xchg   edi,eax
  4154aa:	std    
  4154ab:	(bad)  
  4154ad:	or     cl,BYTE PTR [edx-0x3b7e72d7]
  4154b3:	cmc    
  4154b4:	inc    esi
  4154b5:	(bad)  
  4154b8:	xor    BYTE PTR [eax],ah
  4154ba:	xchg   DWORD PTR [ebp+eiz*4-0x6b],ebp
  4154be:	std    
  4154bf:	scas   al,BYTE PTR es:[edi]
  4154c0:	mov    cl,0xf2
  4154c2:	and    al,0xe9
  4154c4:	sahf   
  4154c5:	pop    edx
  4154c6:	xor    BYTE PTR [ecx+ebx*4],dl
  4154c9:	add    ch,al
  4154cb:	jmp    0x415468
  4154cd:	xchg   edi,eax
  4154ce:	std    
  4154cf:	push   0xffffffba
  4154d1:	mov    es,WORD PTR [eax]
  4154d3:	add    BYTE PTR [ebp+0x3f],cl
  4154d6:	clc    
  4154d7:	dec    di
  4154d9:	aas    
  4154da:	clc    
  4154db:	data16 cmc 
  4154dd:	mov    ebp,0x7f3d6608
  4154e2:	jbe    0x4154e3
  4154e4:	inc    ebx
  4154e5:	jne    0x41546e
  4154e7:	inc    ebp
  4154e8:	lods   al,BYTE PTR ds:[esi]
  4154e9:	xchg   DWORD PTR [ecx-0x48aac8c],ebx
  4154ef:	call   0x3ccaa2
  4154f4:	or     BYTE PTR [edi-0x722cca8f],bh
  4154fa:	adc    DWORD PTR [esi],edx
  4154fc:	add    BYTE PTR [eax],al
  4154fe:	xor    al,0x2
  415500:	cmp    DWORD PTR [eax-0x65],eax
  415503:	(bad)  
  415504:	push   DWORD PTR [ebp+eiz*2+0x77]
  415508:	inc    ecx
  415509:	clc    
  41550a:	add    eax,0x930f7f6
  41550f:	add    al,BYTE PTR [eax]
  415511:	jbe    0x41558e
  415513:	mov    edi,0x9f74f841
  415518:	std    
  415519:	call   DWORD PTR [ebx+0x3d]
  41551c:	hlt    
  41551d:	mov    eax,0x4854
  415522:	sbb    bh,BYTE PTR [ecx+0x31d6f442]
  415528:	xor    al,al
  41552a:	(bad)  
  41552c:	ret    0x3404
  41552f:	xor    bh,ch
  415531:	jmp    0xc08f:0x574ed14b
  415538:	call   0xfbb8a6b1
  41553d:	xor    ebp,DWORD PTR [edi]
  41553f:	ror    DWORD PTR [esi-0x1],cl
  415542:	lds    ecx,FWORD PTR [edx]
  415544:	test   DWORD PTR [eax+ebp*8-0x73],eax
  415548:	cld    
  415549:	adc    eax,0x3d8d44
  41554e:	popf   
  41554f:	and    BYTE PTR [ecx+0x1584e281],bl
  415555:	pop    ds
  415556:	outs   dx,BYTE PTR ds:[esi]
  415557:	clc    
  415558:	xor    bh,ch
  41555a:	test   al,0x7f
  41555c:	idiv   BYTE PTR [edi]
  41555e:	popf   
  41555f:	cmc    
  415560:	sub    DWORD PTR [eax+eax*1],edx
  415563:	add    BYTE PTR [ebp-0x4502df67],dh
  415569:	loopne 0x415529
  41556b:	je     0x4154fa
  41556d:	dec    esp
  41556e:	mov    al,dh
  415570:	mov    ch,0x62
  415572:	cwde   
  415573:	std    
  415574:	mov    ds:0xa3e99120,al
  415579:	cwde   
  41557a:	shr    ecx,0xd8
  41557d:	cwde   
  41557e:	xchg   ebx,eax
  41557f:	cmp    DWORD PTR [esi-0x41960ea9],ecx
  415585:	test   BYTE PTR [ecx-0x642386b2],ch
  41558b:	test   BYTE PTR [ebp+0x6f],bl
  41558e:	cli    
  41558f:	mov    BYTE PTR [ebx+0x0],ah
  415592:	jmp    0x4155fd
  415594:	xchg   ebp,eax
  415595:	push   eax
  415596:	daa    
  415597:	add    dh,dl
  415599:	cld    
  41559a:	cmc    
  41559b:	out    0xa8,eax
  41559d:	imul   eax,DWORD PTR [ecx],0x55
  4155a0:	dec    edx
  4155a1:	mov    dh,0xfd
  4155a3:	adc    eax,0x10a8abdd
  4155a8:	cmp    dl,BYTE PTR [esi-0x5422ea13]
  4155ae:	mov    ds,eax
  4155b0:	push   ss
  4155b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b2:	sub    edi,edi
  4155b4:	pop    ss
  4155b5:	jne    0x415550
  4155b7:	adc    BYTE PTR [esi-0x44],ch
  4155ba:	out    dx,eax
  4155bb:	and    ebp,DWORD PTR [ebx-0x22cefc15]
  4155c1:	in     al,dx
  4155c2:	cmp    BYTE PTR [ecx+0x64],bl
  4155c5:	push   0x2e
  4155ca:	cli    
  4155cb:	add    DWORD PTR [ebx],ebx
  4155cd:	loopne 0x415575
  4155cf:	xchg   ebp,eax
  4155d0:	adc    esp,eax
  4155d2:	xchg   esi,eax
  4155d3:	xchg   ebp,eax
  4155d4:	sbb    BYTE PTR [eax],al
  4155d6:	loopne 0x4155c6
  4155d8:	out    dx,al
  4155d9:	icebp  
  4155da:	call   0x722f:0x9d0ca902
  4155e1:	test   al,0x1c
  4155e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e4:	ret    
  4155e5:	imul   ebp,DWORD PTR ss:0x93249c62,0x72
  4155ed:	mov    esi,0x27231c4
  4155f2:	push   eax
  4155f3:	xor    DWORD PTR [edx-0x36],esp
  4155f6:	mov    al,ds:0x5d80e331
  4155fb:	adc    eax,0xe87506ed
  415600:	ds scas eax,DWORD PTR es:[edi]
  415602:	(bad)  
  415603:	push   cs
  415604:	lahf   
  415605:	call   0xd59d:0x43d4eeae
  41560c:	(bad)  
  41560e:	jb     0x4155a4
  415610:	xchg   esp,eax
  415611:	inc    ecx
  415612:	cmc    
  415613:	rcr    BYTE PTR [ebx-0x5b7a62fd],cl
  415619:	scas   eax,DWORD PTR es:[edi]
  41561a:	in     eax,dx
  41561b:	xchg   DWORD PTR [ebx+ecx*1-0x16f11e39],ebp
  415622:	dec    ebx
  415623:	xchg   esp,eax
  415624:	out    0x80,eax
  415626:	pop    ebp
  415627:	push   cs
  415628:	mov    esi,0x7aede91
  41562d:	adc    BYTE PTR [eax],al
  41562f:	add    BYTE PTR [esi-0x5157dc27],bl
  415635:	jmp    0x253:0x24940dc
  41563c:	sbb    al,0x16
  41563e:	lahf   
  41563f:	add    ecx,DWORD PTR [esi-0x77659c1f]
  415645:	data16 add BYTE PTR [ecx-0x67],bh
  415649:	xor    eax,0xc0e8125e
  41564e:	add    al,0xe9
  415650:	(bad)  
  415651:	(bad)  
  415653:	jmp    0xcd54ebf6
  415658:	in     al,dx
  415659:	sar    edi,cl
  41565b:	fcmovu st,st(6)
  41565d:	test   eax,0xa6ad86ea
  415662:	jmp    0xd8517ddf
  415667:	cmp    dl,0x2f
  41566a:	mov    DWORD PTR [ebp+0x71],edi
  41566d:	mov    DWORD PTR [edi-0x269a3af],edi
  415673:	pop    esi
  415674:	sbb    DWORD PTR [eax-0x4],eax
  415677:	bound  ebx,QWORD PTR [ebp+0xa]
  41567a:	cmc    
  41567b:	xor    DWORD PTR [ebx+0x2a9c8b53],ebx
  415681:	loope  0x415644
  415683:	cdq    
  415684:	daa    
  415685:	invd   
  415687:	ret    
  415688:	sahf   
  415689:	xchg   ebp,eax
  41568a:	jae    0x415665
  41568c:	pop    ss
  41568d:	(bad)  
  41568f:	es mov esi,edi
  415692:	cld    
  415693:	hlt    
  415694:	add    BYTE PTR [eax],al
  415696:	(bad)  
  415697:	out    dx,eax
  415698:	aas    
  415699:	jmp    0xe94e16ef
  41569e:	mov    BYTE PTR [edx],al
  4156a0:	std    
  4156a1:	jge    0x415715
  4156a3:	pop    es
  4156a4:	std    
  4156a5:	jne    0x415711
  4156a7:	pop    es
  4156a8:	std    
  4156a9:	js     0x4156ed
  4156ab:	xchg   esi,eax
  4156ac:	adc    ecx,ecx
  4156ae:	sub    al,0xd3
  4156b0:	jmp    FWORD PTR [edx+0x725302a1]
  4156b6:	cmc    
  4156b7:	sub    ah,0x5
  4156ba:	push   0x3962552c
  4156bf:	mov    edi,ebp
  4156c1:	add    BYTE PTR [edi-0x70b318ac],cl
  4156c7:	nop
  4156c8:	mov    ch,0x0
  4156ca:	cld    
  4156cb:	(bad)  
  4156cc:	(bad)  
  4156cd:	cmp    ch,BYTE PTR [ecx+ecx*1]
  4156d0:	dec    esi
  4156d1:	(bad)  
  4156d2:	mov    ah,0xcd
  4156d4:	xchg   dh,cl
  4156d6:	or     ecx,esp
  4156d8:	or     eax,DWORD PTR [ebp+0x305f834]
  4156de:	or     al,0xa5
  4156e0:	cmc    
  4156e1:	jmp    0x4156ce
  4156e3:	add    bh,BYTE PTR [edx]
  4156e5:	push   ecx
  4156e7:	mov    ds:0xabb44013,al
  4156ec:	xor    BYTE PTR [edi],ah
  4156ee:	(bad)  
  4156ef:	(bad)  
  4156f0:	jo     0x41571f
  4156f2:	cmp    eax,DWORD PTR [ebx]
  4156f4:	or     BYTE PTR [ebp-0x74af9cff],cl
  4156fa:	add    BYTE PTR [eax],al
  4156fc:	icebp  
  4156fd:	cli    
  4156fe:	imul   eax,DWORD PTR [edx],0xffffe1dc
  415704:	test   BYTE PTR [ecx],dl
  415706:	shl    BYTE PTR [ebp+0x7c],0x74
  41570a:	inc    ecx
  41570b:	aam    0x76
  41570d:	add    al,BYTE PTR [ecx]
  41570f:	cmp    DWORD PTR [ecx+0x5a],eax
  415712:	jno    0x415725
  415714:	add    DWORD PTR [ebx+edi*2-0x50],ebp
  415718:	les    eax,FWORD PTR ds:0xbd2f5e5b
  41571e:	ret    0x4408
  415721:	mov    eax,0x6b51ebbd
  415726:	jno    0x415704
  415728:	dec    ebx
  415729:	mov    eax,ds:0x5f41621
  41572e:	out    0xf1,eax
  415730:	mov    edi,0x3f88e8c5
  415735:	imul   edi,ebx,0x50
  415738:	dec    ebx
  415739:	add    ah,BYTE PTR [eax+ecx*1]
  41573c:	popf   
  41573d:	inc    ebp
  41573e:	add    al,0xfd
  415740:	xchg   ecx,eax
  415741:	pop    es
  415742:	cld    
  415743:	cld    
  415744:	mov    edi,edi
  415746:	sti    
  415747:	cld    
  415748:	mov    WORD PTR [edi-0x4e66ec68],fs
  41574e:	inc    ecx
  41574f:	add    BYTE PTR [esi-0xd077b9e],ch
  415755:	cwde   
  415756:	outs   dx,BYTE PTR ds:[esi]
  415757:	rcr    bh,0x9f
  41575a:	add    DWORD PTR [ebx+0x16],edx
  41575d:	mov    BYTE PTR [esp+ebp*8+0x1ca90000],al
  415764:	push   ds
  415765:	cld    
  415766:	popf   
  415767:	in     al,dx
  415768:	cs std 
  41576a:	push   eax
  41576b:	xchg   ebx,eax
  41576c:	mov    WORD PTR [ebx],?
  41576e:	mov    ecx,0xba0041ae
  415773:	cdq    
  415774:	or     DWORD PTR [ecx+0x40f28d5],ecx
  41577a:	stos   BYTE PTR es:[edi],al
  41577b:	fdivr  DWORD PTR [ebp-0x40]
  41577e:	sub    DWORD PTR [ebx+0x429ac984],esp
  415784:	mov    al,BYTE PTR [eax]
  415786:	popf   
  415787:	fwait
  415788:	mov    WORD PTR [esi-0x6b],cs
  41578b:	or     eax,DWORD PTR [edx]
  41578d:	xchg   eax,edx
  41578f:	iret   
  415790:	jge    0x41576b
  415792:	icebp  
  415793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415794:	mov    bl,BYTE PTR [ebx+0x75]
  415797:	jmp    0xdb74655c
  41579c:	mov    DWORD PTR [ebx-0x6b],eax
  41579f:	clc    
  4157a0:	or     eax,0x8d662810
  4157a5:	push   0xffffff9d
  4157a7:	imul   ebx,DWORD PTR [eax-0x146f6a8d],0xffffffb3
  4157ae:	scas   eax,DWORD PTR es:[edi]
  4157af:	pop    ebx
  4157b0:	add    DWORD PTR [ecx+0x73bc2655],ecx
  4157b6:	xchg   ecx,eax
  4157b7:	add    ah,dh
  4157b9:	adc    DWORD PTR [ecx+0xaaca57d],ebx
  4157bf:	(bad)  
  4157c0:	(bad)  
  4157c1:	xchg   edi,eax
  4157c2:	and    edx,eax
  4157c4:	push   ebx
  4157c5:	or     eax,0x47240000
  4157ca:	repz fdiv QWORD PTR [edx-0x405465ea]
  4157d1:	test   DWORD PTR [edx+0x69ef0497],esp
  4157d7:	fwait
  4157d8:	repnz adc eax,0x8e5ebef0
  4157de:	mov    al,BYTE PTR [ebx]
  4157e0:	popf   
  4157e1:	add    al,BYTE PTR [edx-0x1672a5f9]
  4157e7:	add    al,0x9d
  4157e9:	add    bh,ah
  4157eb:	(bad)  
  4157ec:	loope  0x415834
  4157ee:	jnp    0x415838
  4157f0:	js     0x4157f4
  4157f2:	out    0x96,eax
  4157f4:	xor    esi,edx
  4157f6:	ins    DWORD PTR es:[edi],dx
  4157f7:	push   cs
  4157f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f9:	xchg   ecx,eax
  4157fa:	(bad)  
  4157fc:	test   eax,0x29c464b8
  415801:	add    eax,0x8498cb6a
  415806:	int3   
  415807:	xchg   edi,eax
  415808:	popf   
  415809:	push   ss
  41580a:	lock xchg esi,eax
  41580c:	push   cs
  41580d:	(bad)  
  41580e:	ds icebp 
  415810:	mov    esi,0xd803a6f8
  415815:	jnp    0x415841
  415817:	cmp    ebx,DWORD PTR [edx-0x3b]
  41581a:	repz add ecx,esi
  41581d:	jnp    0x41582a
  41581f:	xor    DWORD PTR [ecx-0x1],0xffffffd9
  415823:	ret    
  415824:	in     eax,dx
  415825:	xor    bl,BYTE PTR [ecx+ecx*2-0x5b]
  415829:	xor    DWORD PTR [edi-0x48ffffcd],edx
  41582f:	(bad)  
  415830:	imul   eax,DWORD PTR [ecx+0x49],0x33
  415834:	add    BYTE PTR [ecx+0x51fd903a],al
  41583a:	or     dl,BYTE PTR [eax+ecx*1]
  41583d:	scas   al,BYTE PTR es:[edi]
  41583e:	fst    QWORD PTR [esi+0x29ee8ff]
  415844:	lds    ebp,FWORD PTR [ecx+edi*1]
  415847:	repz and al,0xe9
  41584a:	sahf   
  41584b:	lds    eax,FWORD PTR [ebx-0x3b]
  41584e:	push   ss
  41584f:	repnz (bad) 
  415851:	call   0xdd154c81
  415856:	pop    esi
  415857:	add    dh,ch
  415859:	xchg   ecx,eax
  41585a:	test   DWORD PTR [edi+0x40],0x6dcb0
  415861:	xor    al,0x16
  415863:	lahf   
  415864:	dec    edi
  415865:	add    ebx,DWORD PTR [ebp+0x655cbfd1]
  41586b:	mov    cs,WORD PTR [edi+0x29]
  41586e:	xchg   ecx,eax
  41586f:	sbb    al,0x6
  415871:	jle    0x415820
  415873:	cli    
  415874:	xchg   BYTE PTR [edx*1-0x5282ec72],ch
  41587b:	iret   
  41587c:	call   FWORD PTR [ebp-0x1a]
  41587f:	jmp    0xc5130243
  415884:	add    al,0xe9
  415886:	iret   
  415887:	xor    esi,DWORD PTR [ecx]
  415889:	xor    al,al
  41588b:	inc    ecx
  41588c:	add    BYTE PTR [ecx+edi*8],0xc3
  415890:	inc    ecx
  415891:	jmp    0x35df5896
  415896:	jae    0x415894
  415898:	shr    BYTE PTR [edx+0x389eaac3],1
  41589e:	std    
  41589f:	cld    
  4158a0:	inc    edx
  4158a1:	hlt    
  4158a2:	aas    
  4158a3:	jmp    0x2ce923c6
  4158a8:	fild   WORD PTR [edx]
  4158aa:	add    BYTE PTR [ecx+edx*2+0x4b0079a7],dl
  4158b1:	jne    0x4158ae
  4158b3:	test   BYTE PTR [edi+edi*8+0xf],dh
  4158b7:	(bad)  
  4158b8:	dec    ecx
  4158b9:	daa    
  4158ba:	rol    DWORD PTR [ebx+0x44],0x19
  4158be:	ss inc ecx
  4158c0:	xor    al,0x7b
  4158c2:	sbb    DWORD PTR [eax+0x560040f9],ebp
  4158c8:	repz sahf 
  4158ca:	in     eax,dx
  4158cb:	adc    al,ah
  4158cd:	push   es
  4158ce:	mov    al,BYTE PTR [eax+ebx*4-0x6e]
  4158d2:	in     eax,0xce
  4158d4:	fnsave [ebx+edi*8-0x75]
  4158d8:	stc    
  4158d9:	push   0x11
  4158db:	inc    eax
  4158dc:	add    al,0xd9
  4158de:	add    eax,0x52d13c8b
  4158e3:	jmp    FWORD PTR [edx]
  4158e5:	fmul   QWORD PTR [edx+ebp*2]
  4158e8:	(bad)  
  4158e9:	fld    QWORD PTR [esi-0x789fdc18]
  4158ef:	clc    
  4158f0:	aaa    
  4158f1:	ja     0x4158ee
  4158f3:	je     0x4158ae
  4158f5:	cmp    ebx,0xb90000ff
  4158fb:	add    BYTE PTR [edx],dh
  4158fd:	fstp   TBYTE PTR [edi]
  4158ff:	mov    edi,0x2f41619
  415904:	push   ecx
  415905:	jmp    FWORD PTR [edx-0x23]
  415908:	cli    
  415909:	(bad)  
  41590a:	push   ebx
  41590b:	fcomp  DWORD PTR [eax-0x76]
  41590e:	(bad)  
  41590f:	retf   
  415910:	rol    DWORD PTR [esp+esi*2],0xdd
  415914:	xchg   ah,ch
  415916:	neg    DWORD PTR [edx+0x14]
  415919:	push   ebx
  41591a:	ja     0x415967
  41591c:	push   esi
  41591d:	cmp    BYTE PTR [ecx+0x1a],ah
  415920:	rol    DWORD PTR [ebx+0x74],0xfd
  415924:	xor    BYTE PTR [esi+0x3f4ddc],bh
  41592a:	popf   
  41592b:	dec    ebp
  41592c:	xchg   esp,eax
  41592d:	adc    eax,DWORD PTR [ecx-0x76]
  415930:	inc    ecx
  415931:	add    BYTE PTR [ebp-0x213c965a],al
  415937:	fwait
  415938:	push   cs
  415939:	sbb    al,BYTE PTR [ebp-0x76]
  41593c:	mov    edi,ebp
  41593e:	xor    ch,BYTE PTR [eax]
  415940:	les    esi,FWORD PTR [esp+ecx*4+0x5c]
  415944:	(bad)  
  415945:	stos   DWORD PTR es:[edi],eax
  415946:	pop    eax
  415947:	fld    DWORD PTR [ebx]
  415949:	stos   BYTE PTR es:[edi],al
  41594a:	rcr    edx,cl
  41594c:	add    eax,esi
  41594e:	cwde   
  41594f:	cmp    DWORD PTR [esi+0x2b9a9d41],0xfffffffd
  415956:	test   al,0x4b
  415958:	out    dx,eax
  415959:	aas    
  41595a:	popf   
  41595b:	and    DWORD PTR [esi],edi
  41595d:	or     BYTE PTR [eax],al
  41595f:	add    BYTE PTR [esi+0x41],cl
  415962:	add    ch,al
  415964:	pop    edi
  415965:	bound  edx,QWORD PTR [ebp+edi*8-0x81193b3]
  41596c:	mov    al,0xdb
  41596e:	add    eax,DWORD PTR [edi-0x77f8ca8]
  415974:	retf   0xfd8e
  415977:	xor    ch,bl
  415979:	jo     0x415994
  41597b:	mov    DWORD PTR [eax+0x6f],esi
  41597e:	out    dx,al
  41597f:	aas    
  415980:	popf   
  415981:	hlt    
  415982:	cs push ecx
  415984:	sbb    BYTE PTR [edi-0x6b],dl
  415987:	dec    edi
  415988:	dec    esi
  415989:	push   ds
  41598a:	inc    esi
  41598b:	in     al,dx
  41598c:	in     al,dx
  41598d:	dec    eax
  41598e:	xor    BYTE PTR [ebp+0x48019bab],bh
  415994:	repnz imul ecx,DWORD PTR [edx+0x3612955b],0xfffffffc
  41599c:	jp     0x41598b
  41599e:	jg     0x415998
  4159a0:	jb     0x4159f8
  4159a2:	inc    eax
  4159a3:	std    
  4159a4:	nop
  4159a5:	add    bh,bl
  4159a7:	in     eax,dx
  4159a8:	mov    ds:0x81f5dc02,al
  4159ad:	add    ah,bh
  4159af:	push   cs
  4159b0:	mov    edi,DWORD PTR [ecx-0x5c]
  4159b3:	xchg   edi,eax
  4159b4:	test   cl,al
  4159b6:	jnp    0x41599f
  4159b8:	cmp    bl,dl
  4159ba:	popf   
  4159bb:	xchg   esp,eax
  4159bc:	cmp    BYTE PTR [ebx-0x54],bh
  4159bf:	or     esi,DWORD PTR [ecx+eax*8+0x73]
  4159c3:	loopne 0x4159c5
  4159c5:	add    ch,cl
  4159c7:	xor    DWORD PTR [ecx+ecx*2+0x21],esi
  4159cb:	xor    bl,dh
  4159cd:	sbb    DWORD PTR [ecx],ebx
  4159cf:	lea    ebx,[esp+edi*8+0x6d]
  4159d3:	xor    DWORD PTR [esi],esi
  4159d5:	xchg   ebx,eax
  4159d6:	mov    cs,WORD PTR [edx-0x3de1453a]
  4159dc:	xor    edi,edi
  4159de:	stc    
  4159df:	push   ss
  4159e0:	fistp  WORD PTR [ebx-0x6c51d257]
  4159e6:	and    ch,BYTE PTR [edi]
  4159e8:	out    dx,eax
  4159e9:	xchg   edx,eax
  4159ea:	outs   dx,BYTE PTR ds:[esi]
  4159eb:	mov    bl,BYTE PTR [esi+0x26f4b6f9]
  4159f1:	add    al,0x24
  4159f3:	inc    edi
  4159f4:	fbstp  TBYTE PTR [edx]
  4159f6:	imul   ebp,DWORD PTR [ecx],0xffffffb0
  4159f9:	(bad)  
  4159fa:	cdq    
  4159fb:	add    dl,BYTE PTR [edi+edi*2]
  4159fe:	leave  
  4159ff:	add    BYTE PTR [ebx+0x16344c00],0xd6
  415a06:	jmp    0x6a8c:0xa08c8899
  415a0d:	sub    DWORD PTR [ebp+0x58ac6203],edx
  415a13:	inc    esi
  415a14:	push   ebx
  415a15:	add    al,0x95
  415a17:	add    ah,bh
  415a19:	leave  
  415a1a:	fimul  WORD PTR [ebx-0x69116d19]
  415a20:	add    BYTE PTR [esp+edx*4-0x76],ah
  415a24:	call   0xfdcf06dd
  415a29:	jb     0x415a2b
  415a2b:	add    BYTE PTR [edx+ecx*4-0x1f4ad67c],cl
  415a32:	mov    ch,BYTE PTR [edx+ebp*1-0x617caacd]
  415a39:	sbb    BYTE PTR [esi],ch
  415a3b:	call   0x2de:0xd9ebf02f
  415a42:	mov    ecx,edi
  415a44:	sbb    ecx,DWORD PTR [ebp-0x73638b93]
  415a4a:	inc    ebx
  415a4b:	out    0x1e,al
  415a4d:	or     ch,bh
  415a4f:	jmp    0xfab0:0xeee9bcb0
  415a56:	pop    ebp
  415a57:	fs and al,0x17
  415a5a:	or     BYTE PTR [esi],bl
  415a5c:	and    DWORD PTR [edi+0x5e],ecx
  415a5f:	mov    esi,0x1ffcd20f
  415a64:	push   cs
  415a65:	lock and ebx,ebx
  415a68:	pop    esi
  415a69:	add    cl,BYTE PTR [ecx+0x592cafae]
  415a6f:	mov    al,0xe3
  415a71:	das    
  415a72:	mov    DWORD PTR [ebp+0x413b8289],eax
  415a78:	aad    0x41
  415a7a:	add    cl,ch
  415a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7d:	retf   0x3f55
  415a80:	push   es
  415a81:	rol    BYTE PTR [ecx-0x17],0x74
  415a85:	lea    edx,[ebx]
  415a87:	jge    0x415a39
  415a89:	retf   
  415a8a:	jmp    FWORD PTR [eax-0x33]
  415a8d:	arpl   bx,ax
  415a8f:	stos   BYTE PTR es:[edi],al
  415a90:	add    BYTE PTR [eax],al
  415a92:	sahf   
  415a93:	add    dh,BYTE PTR [ebx-0xd]
  415a96:	(bad)
  415a9c:	rol    BYTE PTR [eax],0x40
  415a9f:	xchg   esi,eax
  415aa0:	les    eax,FWORD PTR ds:0x3fba28
  415aa6:	push   ds
  415aa7:	test   eax,0xfac2003e
  415aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aad:	lds    esi,FWORD PTR [edi]
  415aaf:	(bad)  
  415ab0:	cld    
  415ab1:	push   ebp
  415ab2:	mov    ebx,0x412ed8a
  415ab7:	call   FWORD PTR [ebp-0x73]
  415aba:	add    DWORD PTR [ebx+0x50],edi
  415abd:	inc    ecx
  415abf:	mov    ecx,DWORD PTR [eax-0x12d3bb]
  415ac5:	mov    BYTE PTR [ecx],0x7b
  415ac8:	xor    BYTE PTR [eax],al
  415aca:	xor    al,0xff
  415acc:	out    0x1d,eax
  415ace:	cmp    al,0x71
  415ad0:	sti    
  415ad1:	push   eax
  415ad2:	sti    
  415ad3:	repnz pop es
  415ad5:	call   DWORD PTR [ecx]
  415ad7:	ret    
  415ad8:	adc    DWORD PTR [eax-0xc],eax
  415adb:	add    eax,0x74
  415ade:	out    0xe6,al
  415ae0:	lahf   
  415ae1:	jbe    0x415aa7
  415ae3:	push   es
  415ae4:	sti    
  415ae5:	jne    0x415adf
  415ae7:	jno    0x415afa
  415ae9:	or     al,0xc5
  415aeb:	add    BYTE PTR ds:[edx],dh
  415aee:	xor    al,0x6d
  415af0:	add    dh,BYTE PTR [eax+0x8c247c5]
  415af6:	add    BYTE PTR [eax],al
  415af8:	(bad)  
  415af9:	rol    DWORD PTR [esi+0x506237ec],cl
  415aff:	push   0xfffd86b4
  415b04:	or     al,0x77
  415b06:	pop    ecx
  415b07:	jmp    FWORD PTR [ebx]
  415b09:	pop    es
  415b0a:	inc    ecx
  415b0b:	lock inc ecx
  415b0d:	(bad)  
  415b0e:	jno    0x415b1f
  415b10:	into   
  415b11:	xchg   ah,bh
  415b13:	adc    eax,0x3d8ca0
  415b18:	popf   
  415b19:	in     eax,dx
  415b1a:	ret    
  415b1b:	out    0xa,eax
  415b1d:	fwait
  415b1e:	add    DWORD PTR [eax],eax
  415b20:	out    dx,al
  415b21:	mov    ecx,es
  415b23:	push   esi
  415b24:	rcl    BYTE PTR [esi],cl
  415b26:	or     eax,0x89575bf7
  415b2b:	add    BYTE PTR [edi],dh
  415b2d:	and    eax,0x5c160845
  415b32:	stc    
  415b33:	xchg   al,ah
  415b35:	(bad)  
  415b36:	jp     0x415b7b
  415b38:	mov    eax,ds:0x14084424
  415b3d:	pop    edi
  415b3e:	mov    eax,ds:0xc8a7d889
  415b43:	inc    ebx
  415b44:	inc    ebp
  415b45:	sahf   
  415b46:	add    DWORD PTR [eax],eax
  415b48:	popf   
  415b49:	push   ss
  415b4a:	les    esi,FWORD PTR [edi+edx*4+0x22]
  415b4e:	inc    ebp
  415b4f:	in     al,0x5a
  415b51:	xlat   BYTE PTR ds:[ebx]
  415b52:	fwait
  415b53:	add    DWORD PTR [ebp+0x7881019b],ebx
  415b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b5a:	add    esi,eax
  415b5c:	add    BYTE PTR [eax],al
  415b5e:	pusha  
  415b5f:	mov    eax,0x9be0e701
  415b64:	add    DWORD PTR [eax],eax
  415b66:	and    BYTE PTR [ebp+edx*1+0x14],bl
  415b6a:	push   ds
  415b6b:	push   esp
  415b6c:	add    cl,BYTE PTR ds:0x15220
  415b72:	popf   
  415b73:	adc    al,0x16
  415b75:	or     al,0x26
  415b77:	(bad)  
  415b78:	sti    
  415b79:	mov    dl,BYTE PTR [eax+0x72]
  415b7c:	pushf  
  415b7d:	pop    es
  415b7e:	push   ss
  415b7f:	out    dx,eax
  415b80:	sti    
  415b81:	mov    BYTE PTR [eax-0x71],ah
  415b84:	jle    0x415c01
  415b86:	mov    ch,0x16
  415b88:	inc    esi
  415b89:	mov    al,0x4d
  415b8b:	adc    BYTE PTR [edi],dl
  415b8d:	or     BYTE PTR [edx-0x7702fa6f],ch
  415b93:	add    al,BYTE PTR [edi-0xa]
  415b96:	fiadd  DWORD PTR [edx]
  415b98:	fs ret 
  415b9a:	mov    al,ds:0x9d034c7f
  415b9f:	add    dl,BYTE PTR [ebp+0x46]
  415ba2:	dec    ebp
  415ba3:	add    edi,DWORD PTR [ebx+0x733f2420]
  415ba9:	xchg   BYTE PTR [ebp+0xe],bl
  415bac:	stos   BYTE PTR es:[edi],al
  415bad:	jp     0x415b8d
  415baf:	mov    es,WORD PTR [eax-0x4d]
  415bb2:	popf   
  415bb3:	add    ah,bh
  415bb5:	jl     0x415b9d
  415bb7:	jmp    0x261:0xe6c9ba63
  415bbe:	push   ss
  415bbf:	das    
  415bc0:	sti    
  415bc1:	xor    al,0x0
  415bc3:	add    BYTE PTR [eax+0xf],al
  415bc6:	div    DWORD PTR [ebx]
  415bc8:	ror    DWORD PTR [ecx-0x6a27829],cl
  415bce:	push   0x57
  415bd0:	popf   
  415bd1:	add    ah,bh
  415bd3:	jl     0x415bb3
  415bd5:	xchg   esi,eax
  415bd6:	ins    BYTE PTR es:[edi],dx
  415bd7:	les    ebx,FWORD PTR [ebx-0x56e62216]
  415bdd:	jge    0x415c1b
  415bdf:	xchg   esp,eax
  415be0:	or     BYTE PTR [edi],cl
  415be2:	idiv   DWORD PTR [edx-0x2c]
  415be5:	cdq    
  415be6:	(bad)  
  415be7:	mov    bh,al
  415be9:	mov    BYTE PTR [ebx-0x3c],ah
  415bec:	mov    al,ds:0x9d045c7e
  415bf1:	add    ah,BYTE PTR [edx+0x6]
  415bf4:	jne    0x415bf8
  415bf6:	out    dx,eax
  415bf7:	add    ebx,DWORD PTR [ebp+0x24941489]
  415bfd:	mov    eax,0x7ba13496
  415c02:	and    al,0xa0
  415c04:	push   ds
  415c05:	ret    0x5f06
  415c08:	xor    dh,bh
  415c0a:	jge    0x415c05
  415c0c:	mov    ?,eax
  415c0e:	jmp    FWORD PTR [eax]
  415c10:	mov    eax,ds:0x9ec630cd
  415c15:	add    dh,BYTE PTR [ebx-0x27]
  415c18:	xor    BYTE PTR [eax+esi*4+0x9],al
  415c1c:	mov    ch,0xeb
  415c1e:	mov    BYTE PTR [esi+eax*2+0x7d4c084],ch
  415c25:	retf   
  415c26:	add    al,0xbc
  415c28:	add    BYTE PTR [eax],al
  415c2a:	jnp    0x415c46
  415c2c:	(bad)  
  415c2d:	cmp    eax,0xdcfcfe8e
  415c32:	push   es
  415c33:	hlt    
  415c34:	aas    
  415c35:	jmp    0xb9b51f4f
  415c3a:	pusha  
  415c3b:	(bad)  
  415c3c:	(bad)  
  415c3d:	push   0x9bff8aac
  415c42:	mov    al,ds:0x98107b82
  415c47:	push   cs
  415c48:	cmp    eax,DWORD PTR [esi]
  415c4a:	xchg   esp,eax
  415c4b:	repnz mov ah,BYTE PTR [edx+eax*1+0x1b99001d]
  415c53:	adc    al,0xe8
  415c55:	out    dx,al
  415c56:	and    eax,0xa1291254
  415c5b:	retf   
  415c5c:	add    eax,ebp
  415c5e:	sahf   
  415c5f:	add    cl,BYTE PTR ds:0xfd85a06c
  415c65:	into   
  415c66:	fild   DWORD PTR [ebx-0xc]
  415c69:	xor    eax,0xd2fd8802
  415c6e:	pop    es
  415c6f:	rol    esi,cl
  415c71:	push   0x16
  415c73:	add    eax,0x3fd9540d
  415c78:	jg     0x415c02
  415c7a:	or     eax,0x1fe90002
  415c7f:	dec    eax
  415c80:	push   es
  415c81:	pusha  
  415c82:	pop    ebp
  415c83:	mov    gs,ecx
  415c85:	in     eax,0xd8
  415c87:	inc    ebx
  415c88:	std    
  415c89:	add    ch,al
  415c8b:	js     0x415cfe
  415c8d:	lock add BYTE PTR [eax],al
  415c90:	or     al,0x17
  415c92:	pop    esp
  415c93:	push   DWORD PTR [ebx]
  415c95:	test   BYTE PTR [ecx-0xc],bh
  415c98:	mov    ah,0xd8
  415c9a:	pop    ebp
  415c9b:	pop    ebx
  415c9c:	js     0x415c24
  415c9e:	cld    
  415c9f:	jne    0x415c89
  415ca1:	js     0x415cb4
  415ca3:	and    al,0x8a
  415ca5:	inc    ebx
  415ca6:	add    BYTE PTR [edx-0x3d3a87c7],cl
  415cac:	pop    eax
  415cad:	add    edx,DWORD PTR [esi-0x75]
  415cb0:	imul   ebp,DWORD PTR [edi],0xd0744014
  415cb6:	imul   eax,DWORD PTR [ecx],0x1423efb3
  415cbc:	scas   eax,DWORD PTR es:[edi]
  415cbd:	xchg   ecx,eax
  415cbe:	mov    BYTE PTR [eax+ebx*2-0x79],dl
  415cc2:	mov    bh,cl
  415cc4:	pushf  
  415cc5:	dec    esp
  415cc6:	out    0x0,eax
  415cc8:	xor    al,0x7f
  415cca:	shl    BYTE PTR [edi+ebp*1-0x17],0xfe
  415ccf:	push   esi
  415cd0:	xor    ecx,DWORD PTR [esi-0x79]
  415cd3:	clc    
  415cd4:	mov    ecx,0x13e67178
  415cd9:	aad    0xc1
  415cdb:	or     BYTE PTR [eax+edx*8],al
  415cde:	xchg   ah,ch
  415ce0:	xchg   DWORD PTR [edx-0x8],ebx
  415ce3:	and    eax,0xffffff89
  415ce6:	push   eax
  415ce7:	push   esi
  415ce8:	retf   
  415ce9:	jne    0x415d5c
  415ceb:	or     al,0x6f
  415ced:	je     0x415cea
  415cef:	jne    0x415cdd
  415cf1:	or     esi,DWORD PTR [esp+0x0]
  415cf5:	add    BYTE PTR [eax-0x33dbb3f5],bl
  415cfb:	jne    0x415d0e
  415cfd:	clc    
  415cfe:	xlat   BYTE PTR ds:[ebx]
  415cff:	inc    edx
  415d00:	add    BYTE PTR [ebx+0xfd77edc],cl
  415d06:	popf   
  415d07:	adc    eax,0x999d0077
  415d0c:	cld    
  415d0d:	mov    ah,0x68
  415d0f:	xchg   ecx,eax
  415d10:	jle    0x415d56
  415d12:	jns    0x415cb5
  415d14:	xor    ebp,edi
  415d16:	xor    DWORD PTR [ebp-0x2215f30b],esi
  415d1c:	jmp    FWORD PTR [ecx-0x61]
  415d1f:	fisub  DWORD PTR [ebx+0x33daa610]
  415d25:	push   0xffffff9d
  415d27:	ret    
  415d28:	test   DWORD PTR [eax],eax
  415d2a:	popf   
  415d2b:	fwait
  415d2c:	xor    ch,bh
  415d2e:	nop
  415d2f:	xchg   edi,eax
  415d30:	cmc    
  415d31:	aas    
  415d32:	popf   
  415d33:	push   ds
  415d34:	les    esi,FWORD PTR [ebx-0x5f]
  415d37:	mov    BYTE PTR [eax+0x4820c1e9],ch
  415d3d:	and    al,0xb5
  415d3f:	sbb    BYTE PTR [ebp+edi*8+0x337856c8],cl
  415d46:	dec    ecx
  415d47:	mov    DWORD PTR [ecx+0x0],eax
  415d4a:	mov    bh,0xeb
  415d4c:	cs xchg ecx,ebx
  415d4f:	mov    bh,0xed
  415d51:	cld    
  415d52:	dec    ebx
  415d53:	adc    ebp,ecx
  415d55:	dec    DWORD PTR [esi+0xb015b]
  415d5b:	add    BYTE PTR [ebp+0x6d08019b],bl
  415d61:	xor    DWORD PTR [ecx+edx*2+0x738c4d12],edx
  415d68:	cdq    
  415d69:	and    BYTE PTR ds:0x16b4bd24,dh
  415d6f:	or     BYTE PTR [esi],ah
  415d71:	shl    bh,1
  415d73:	pop    ss
  415d74:	add    eax,0xeafd8b33
  415d79:	inc    ecx
  415d7a:	xchg   esp,eax
  415d7b:	std    
  415d7c:	imul   edi,edi,0x2f588eb
  415d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d83:	mov    ch,0x7e
  415d85:	test   DWORD PTR [esi+0x132d08c],ebx
  415d8b:	xchg   esp,eax
  415d8c:	ror    BYTE PTR [esi],0xc3
  415d8f:	out    dx,eax
  415d90:	mov    ecx,0x1e0592ad
  415d95:	(bad)  
  415d96:	repz add DWORD PTR [edx],esp
  415d99:	std    
  415d9a:	adc    eax,0x12c2142e
  415d9f:	jns    0x415e1f
  415da1:	daa    
  415da2:	sub    ebx,edi
  415da4:	xchg   edx,eax
  415da5:	xor    BYTE PTR [ebx+edi*1-0x74],ch
  415da9:	sub    al,0xbe
  415dab:	or     BYTE PTR [edx-0x53c22a04],0x8c
  415db2:	stc    
  415db3:	test   al,0x26
  415db5:	cmp    bh,BYTE PTR [esi]
  415db7:	cwde   
  415db8:	mov    ebx,0x92e7ab79
  415dbd:	js     0x415da2
  415dbf:	add    al,BYTE PTR [eax]
  415dc1:	add    BYTE PTR [ecx-0x36051d2e],cl
  415dc7:	retf   0xa862
  415dca:	shr    esi,1
  415dcc:	call   0x8d3cdf94
  415dd1:	jmp    FWORD PTR [ecx-0x3895d8bc]
  415dd7:	clc    
  415dd8:	popf   
  415dd9:	xchg   esp,eax
  415dda:	sub    BYTE PTR [edi-0x57],dh
  415ddd:	add    bl,BYTE PTR [ecx]
  415ddf:	test   eax,0xf4dd4dde
  415de4:	jp     0x415dad
  415de6:	pushf  
  415de7:	xchg   edx,eax
  415de8:	xor    BYTE PTR [edi-0x46a97aee],al
  415dee:	int3   
  415def:	mov    al,0x41
  415df1:	(bad)  
  415df2:	and    eax,0x29320bc
  415df7:	jns    0x415da2
  415df9:	xchg   ebx,eax
  415dfa:	(bad)
  415dfd:	test   al,0x59
  415dff:	fwait
  415e00:	add    bh,bl
  415e02:	fisub  WORD PTR [esi]
  415e04:	pop    esi
  415e05:	inc    edx
  415e06:	(bad)  
  415e08:	call   DWORD PTR [edx]
  415e0a:	shr    DWORD PTR [ebx],1
  415e0c:	cmp    DWORD PTR [eax-0x56cefc56],ebp
  415e12:	loop   0x415e46
  415e14:	mov    esp,ebp
  415e16:	lahf   
  415e17:	js     0x415e1e
  415e19:	mov    ebp,0xc50a10d3
  415e1e:	ror    al,cl
  415e20:	add    edi,esi
  415e22:	pushf  
  415e23:	sar    DWORD PTR [edi+0x5b0000c2],1
  415e29:	push   esp
  415e2a:	or     eax,0xff0e05b7
  415e2f:	inc    ecx
  415e30:	cmp    BYTE PTR [edx+0x6],0xd
  415e34:	push   ecx
  415e35:	adc    al,BYTE PTR [edi]
  415e37:	add    eax,0xa7030f60
  415e3c:	pop    ebx
  415e3d:	xchg   ebx,eax
  415e3e:	jb     0x415e78
  415e40:	push   edx
  415e41:	xchg   ebx,eax
  415e42:	je     0x415dd4
  415e44:	push   ds
  415e45:	lds    ebx,FWORD PTR [ebp-0x64]
  415e48:	xor    ch,0xb5
  415e4b:	sub    dl,cl
  415e4d:	mov    ah,0x29
  415e4f:	es push edx
  415e51:	mov    esp,0x9a6fa073
  415e56:	push   eax
  415e57:	push   es
  415e58:	xchg   BYTE PTR es:[ecx+ebp*1+0x6245c58d],al
  415e60:	pop    edi
  415e61:	call   0xec74:0x25e76906
  415e68:	pop    esp
  415e69:	leave  
  415e6a:	lock pop ebx
  415e6c:	das    
  415e6d:	retf   0x5df0
  415e70:	in     eax,0x7a
  415e72:	into   
  415e73:	add    bh,BYTE PTR [ecx]
  415e75:	xor    bh,0x0
  415e78:	push   es
  415e79:	out    dx,al
  415e7a:	push   ds
  415e7b:	inc    esi
  415e7c:	outs   dx,DWORD PTR ds:[esi]
  415e7d:	dec    ecx
  415e7e:	out    0xb,eax
  415e80:	jle    0x415e83
  415e82:	cmp    al,0x30
  415e84:	xchg   esi,eax
  415e85:	test   DWORD PTR [ecx],edi
  415e87:	cmp    DWORD PTR [ebx+0x3b4601],esi
  415e8d:	add    BYTE PTR [edi],ah
  415e8f:	out    dx,al
  415e90:	in     al,dx
  415e91:	mov    esi,edx
  415e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e94:	mov    esi,0x6f840c83
  415e99:	push   es
  415e9a:	das    
  415e9b:	shl    DWORD PTR [edi],0xc7
  415e9e:	paddd  mm5,QWORD PTR [esi]
  415ea1:	ror    BYTE PTR [edx-0xaa412d],0x6b
  415ea8:	jg     0x415e96
  415eaa:	mov    al,0xcb
  415eac:	push   ebp
  415ead:	mov    esp,esp
  415eaf:	add    al,0x41
  415eb1:	or     BYTE PTR [ebx+0x6],al
  415eb4:	inc    ecx
  415eb5:	clc    
  415eb6:	fist   WORD PTR [ebx+0x4dc7d88]
  415ebc:	(bad)  
  415ebd:	call   0x3cd6fa
  415ec2:	call   DWORD PTR [edi-0x7f]
  415ec5:	fist   DWORD PTR [ecx]
  415ec7:	(bad)  
  415ec8:	cld    
  415ec9:	inc    ebp
  415eca:	jl     0x415e95
  415ecc:	jle    0x415ecc
  415ece:	inc    esp
  415ecf:	lock loop 0x415f05
  415ed2:	je     0x415eac
  415ed4:	pop    ebp
  415ed5:	pop    ebx
  415ed6:	jge    0x415e95
  415ed8:	or     BYTE PTR [eax],al
  415eda:	dec    edi
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	cmp    BYTE PTR [ebp+0x38],0xff
  415ee0:	test   BYTE PTR [ebp+0x28],dh
  415ee3:	cmp    al,cl
  415ee5:	add    BYTE PTR [edi+edi*8],al
  415ee8:	jo     0x415eee
  415eea:	mov    edi,0x8fe3726e
  415eef:	retf   
  415ef0:	test   DWORD PTR [ebx+0x369d0000],0xed29fff8
  415efa:	cli    
  415efb:	ss pop eax
  415efd:	mov    ebp,0xde140116
  415f02:	xchg   DWORD PTR [ecx+0x76044d60],eax
  415f08:	mov    edx,0x260c3520
  415f0d:	(bad)  
  415f0e:	xchg   DWORD PTR [ecx],ebp
  415f10:	fcom   QWORD PTR ds:0x70b52ec8
  415f16:	mov    bh,ch
  415f18:	mov    edx,0xa673c41d
  415f1d:	jl     0x415f5c
  415f1f:	or     al,0x16
  415f21:	fdivrp st(7),st
  415f23:	cmp    BYTE PTR [eax+0xd],bl
  415f26:	push   ss
  415f27:	fistp  WORD PTR [edx-0x7aaa0a89]
  415f2d:	jl     0x415f5c
  415f2f:	add    BYTE PTR [ebp+0x16f80ce0],bl
  415f35:	aam    0x7a
  415f37:	rol    DWORD PTR [ebp+0x72fd6f46],0x56
  415f3e:	inc    DWORD PTR [esi+0x73753fe0]
  415f44:	push   ecx
  415f45:	xchg   esp,eax
  415f46:	cdq    
  415f47:	cs or  al,0x6c
  415f4a:	add    DWORD PTR [ecx],esi
  415f4c:	outs   dx,DWORD PTR ds:[esi]
  415f4d:	in     al,0x4b
  415f4f:	jbe    0x415f2e
  415f51:	imul   edi,DWORD PTR [eax+ecx*8-0x7a],0x15
  415f56:	test   DWORD PTR [edx+0x0],0x2e536a00
  415f5d:	cld    
  415f5e:	int3   
  415f5f:	js     0x415f9f
  415f61:	inc    ebx
  415f62:	sub    DWORD PTR [esp+edi*2+0x339dcdc6],ebx
  415f69:	push   0x16be7
  415f6e:	add    eax,0x9d4ccd03
  415f73:	add    ch,BYTE PTR [edx-0x41]
  415f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f77:	fnstcw WORD PTR [esi-0x317ead42]
  415f7d:	mov    BYTE PTR [esi+0x7e],ch
  415f80:	iret   
  415f81:	inc    esi
  415f82:	push   edx
  415f83:	cmp    DWORD PTR [esi+0x20e5e7c],0xaa05a53f
  415f8d:	add    al,0x5e
  415f8f:	jp     0x415f21
  415f91:	aas    
  415f92:	enter  0x9e81,0x2e
  415f96:	adc    al,0x6f
  415f98:	push   0xe7045d97
  415f9d:	add    ecx,DWORD PTR [ebx-0x27]
  415fa0:	push   cs
  415fa1:	scas   al,BYTE PTR es:[edi]
  415fa2:	popf   
  415fa3:	add    ah,bh
  415fa5:	sbb    eax,0x50cfc19d
  415faa:	fadd   QWORD PTR [edx]
  415fac:	push   ss
  415fad:	mov    DWORD PTR [esi-0x62bc02ca],ebp
  415fb3:	test   DWORD PTR [ebx],esp
  415fb5:	div    esp
  415fb7:	add    al,0xbf
  415fb9:	jns    0x415feb
  415fbb:	(bad)
  415fbe:	add    BYTE PTR [eax],al
  415fc0:	stos   BYTE PTR es:[edi],al
  415fc1:	and    ecx,DWORD PTR [edi-0xb]
  415fc4:	cmp    BYTE PTR [eax-0x709f773b],0x7c
  415fcb:	lds    edx,FWORD PTR [esi-0x7f]
  415fce:	cs fwait
  415fd0:	xchg   edi,eax
  415fd1:	mov    eax,ds:0x549e03e7
  415fd6:	call   0xfb2dfcde
  415fdb:	xor    eax,edi
  415fdd:	add    bl,BYTE PTR [esi+ecx*1-0x13]
  415fe1:	test   BYTE PTR [edi],ch
  415fe3:	mov    BYTE PTR ds:0x20885aa4,dh
  415fe9:	xchg   DWORD PTR [eax],eax
  415feb:	sub    DWORD PTR [ebx+eiz*1-0x45b98b75],esp
  415ff2:	mov    ch,0xe9
  415ff4:	sahf   
  415ff5:	add    ch,al
  415ff7:	imul   eax,DWORD PTR gs:[edx],0xb25c6400
  415ffe:	push   eax
  415fff:	bound  esi,QWORD PTR [ebx]
  416001:	rcl    BYTE PTR [ecx+edx*8+0x52],cl
  416005:	sar    esi,1
  416007:	call   0x5c4ea229
  41600c:	loope  0x415f93
  41600e:	shl    BYTE PTR [ecx+edx*8],0x31
  416012:	ror    BYTE PTR [edi],0x3e
  416015:	sbb    dh,BYTE PTR [ebp-0x492066d6]
  41601b:	xchg   DWORD PTR [eax+0x1c5c0002],esp
  416021:	inc    esp
  416022:	sti    
  416023:	xchg   BYTE PTR [eax],al
  416025:	add    BYTE PTR [edx],ah
  416027:	loopne 0x415fee
  416029:	jmp    0xfc8822cc
  41602e:	sub    DWORD PTR [ebx-0x75a16001],esi
  416034:	push   es
  416035:	ins    BYTE PTR es:[edi],dx
  416036:	popa   
  416037:	test   DWORD PTR [esi],0x89c326b9
  41603d:	call   0xe967e1e0
  416042:	pop    edi
  416043:	cmp    DWORD PTR [ebx],0xffffff81
  416046:	pop    esp
  416047:	ret    0xe8ff
  41604a:	mov    al,0xf3
  41604c:	xor    BYTE PTR [edi+0x9],dh
  41604f:	inc    esp
  416050:	inc    ecx
  416051:	jmp    0x1554ddd6
  416056:	dec    edi
  416057:	inc    eax
  416058:	add    BYTE PTR [ecx+0x54],ch
  41605b:	mov    eax,0x29eaac3
  416060:	jae    0x416058
  416062:	push   ss
  416063:	xor    bh,ch
  416065:	add    BYTE PTR [ebx-0x573f7b79],ah
  41606b:	jne    0x415fed
  41606d:	and    eax,0x3f41d0
  416072:	add    al,0xbe
  416074:	add    DWORD PTR [eax+0xffc539],edi
  41607a:	retf   0x1187
  41607d:	lock test bl,0xff
  416081:	addr16 push edx
  416083:	sar    BYTE PTR [esi],1
  416085:	add    BYTE PTR [esi+0x6],cl
  416088:	push   0x10000058
  41608d:	(bad)  
  416090:	stc    
  416091:	sub    ecx,DWORD PTR ds:0xeffcc440
  416097:	test   DWORD PTR [edx],ebp
  416099:	adc    BYTE PTR [edi],dl
  41609b:	push   0x23
  41609d:	cs sti 
  41609f:	adc    eax,0x3d74b4
  4160a4:	cmp    DWORD PTR [ebx+0x74],eax
  4160a7:	pop    ds
  4160a8:	loope  0x41602d
  4160aa:	add    BYTE PTR [eax],al
  4160ac:	mov    ah,0xf
  4160ae:	sbb    BYTE PTR [esi+0x13],dl
  4160b1:	jae    0x416050
  4160b3:	adc    al,ah
  4160b5:	push   es
  4160b6:	das    
  4160b7:	shl    BYTE PTR [edx-0x7e],0xc0
  4160bb:	je     0x41612f
  4160bd:	cld    
  4160be:	dec    ebx
  4160bf:	and    al,0x88
  4160c1:	(bad)  
  4160c2:	cld    
  4160c3:	scas   eax,DWORD PTR es:[edi]
  4160c4:	test   DWORD PTR [esi+eax*1-0x16634575],ebx
  4160cb:	xor    dh,BYTE PTR [ecx+eax*2-0x3c6fffc]
  4160d2:	jmp    0x416057
  4160d4:	nop
  4160d5:	jae    0x416154
  4160d7:	cmp    eax,0x3f42bc
  4160dc:	xor    al,0x2d
  4160de:	push   ebx
  4160df:	jne    0x41607e
  4160e1:	pop    esp
  4160e2:	inc    ebx
  4160e3:	fcomp  DWORD PTR [eax-0x54]
  4160e6:	add    DWORD PTR [esi+0x2a],edx
  4160e9:	pop    esi
  4160ea:	xchg   ebp,eax
  4160eb:	adc    bl,ch
  4160ed:	imul   eax,DWORD PTR [ecx+0x5500003b],0x9d00422e
  4160f7:	imul   ch
  4160f9:	out    0x3f,eax
  4160fb:	addr16 cmp ebp,0x19
  4160ff:	test   eax,0xe1e0e10
  416104:	dec    eax
  416105:	ret    
  416106:	pop    esi
  416107:	imul   eax,DWORD PTR [ecx],0xbd81a0c6
  41610d:	inc    ecx
  41610e:	popf   
  41610f:	push   0x2b
  416111:	std    
  416112:	mov    al,0xb9
  416114:	repnz aas 
  416116:	popf   
  416117:	ret    
  416118:	add    DWORD PTR [eax+0x18],ebx
  41611b:	push   ds
  41611c:	xchg   esp,eax
  41611d:	call   0xfdc475f0
  416122:	es cs cld 
  416125:	add    cl,BYTE PTR ds:0x35000169
  41612b:	imul   eax,DWORD PTR [edx],0x0
  41612e:	popf   
  41612f:	sbb    DWORD PTR [edi-0x3a],esi
  416132:	test   DWORD PTR [ecx],edx
  416134:	or     eax,0x292fd
  416139:	mov    esp,eax
  41613b:	ja     0x41616e
  41613d:	mov    DWORD PTR [ebx-0x2c],ebx
  416140:	xor    eax,0x74d57a73
  416145:	jnp    0x4161b8
  416147:	loope  0x416106
  416149:	call   0xfdc620d1
  41614e:	not    DWORD PTR [edi-0x7c]
  416151:	jae    0x416100
  416153:	xor    al,0xd
  416155:	cld    
  416156:	add    BYTE PTR [eax],al
  416158:	push   edx
  416159:	push   edi
  41615a:	xor    eax,0xe702dd16
  41615f:	sbb    BYTE PTR [ecx+0xf],0x72
  416163:	mov    esi,0x849c0245
  416168:	xor    dh,bl
  41616a:	lods   al,BYTE PTR ds:[esi]
  41616b:	mov    edx,0x2ee70f5f
  416170:	adc    al,0x6f
  416172:	push   0xe7066198
  416177:	add    ebx,DWORD PTR ds:0x5c545740
  41617d:	add    ch,al
  41617f:	xor    BYTE PTR [ebx-0x2b],ch
  416182:	jno    0x41612f
  416184:	jo     0x41618b
  416186:	sbb    esp,eax
  416188:	cli    
  416189:	pop    ss
  41618a:	call   0x7cd0fe92
  41618f:	mov    bl,0xe6
  416191:	jge    0x416151
  416193:	fwait
  416194:	pop    ds
  416195:	mov    al,ds:0xc82603e7
  41619a:	mov    ds:0xeef7c833,al
  41619f:	js     0x41617c
  4161a1:	ror    BYTE PTR [esi-0x6982462c],cl
  4161a7:	jle    0x41617d
  4161a9:	idiv   DWORD PTR [ebx+0x17465e76]
  4161af:	sbb    al,0x85
  4161b1:	mov    ch,0x2a
  4161b3:	add    al,0x5
  4161b5:	add    al,0xe7
  4161b7:	add    ebx,DWORD PTR ds:0xbd47d
  4161bd:	add    BYTE PTR [edx+eax*8+0x18658ce6],ch
  4161c4:	daa    
  4161c5:	test   DWORD PTR [ebp-0x48],ebx
  4161c8:	inc    ebp
  4161c9:	add    bl,BYTE PTR [ebp+0x63b56202]
  4161cf:	add    esp,edi
  4161d1:	inc    edx
  4161d2:	xlat   BYTE PTR ds:[ebx]
  4161d3:	idiv   DWORD PTR [edi]
  4161d5:	call   0x839e:0xe9000267
  4161dc:	mov    ds:0xfd7f2221,eax
  4161e1:	jmp    0x1fa1e3b1
  4161e6:	and    DWORD PTR [edi+0x50],edi
  4161e9:	fs mov bl,0x4a
  4161ec:	cld    
  4161ed:	push   cs
  4161ee:	and    DWORD PTR [edx-0x73],ebp
  4161f1:	inc    edi
  4161f2:	sahf   
  4161f3:	add    cl,BYTE PTR [ecx-0x2e75ed8c]
  4161f9:	fs xchg ebx,eax
  4161fb:	dec    edx
  4161fc:	cld    
  4161fd:	out    dx,al
  4161fe:	push   ds
  4161ff:	push   0xffffffcb
  416201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416202:	cdq    
  416203:	add    bh,BYTE PTR [edi-0x1e]
  416206:	mov    eax,ds:0xf4e9004a
  41620b:	jmp    FWORD PTR [ecx-0x16]
  41620e:	jmp    FWORD PTR [ecx+0x5b]
  416211:	cli    
  416212:	push   ecx
  416213:	cmp    ecx,0xffffffe5
  416216:	scas   eax,DWORD PTR es:[edi]
  416217:	xchg   ecx,eax
  416218:	mov    edi,0x88dc9b43
  41621d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621e:	mov    ebx,0xa82a7c
  416223:	add    BYTE PTR [ecx],dh
  416225:	or     al,BYTE PTR [eax]
  416227:	call   0x51f771ca
  41622c:	(bad)  
  41622e:	aas    
  41622f:	jmp    0xfc40e157
  416234:	mov    WORD PTR [ebx-0xf],ax
  416238:	outs   dx,BYTE PTR ds:[esi]
  416239:	mov    DWORD PTR [ebx-0x281ed57],eax
  41623f:	sbb    DWORD PTR [edx],ebx
  416241:	inc    edx
  416242:	mov    esp,eax
  416244:	xchg   edx,eax
  416245:	xor    DWORD PTR [ebx-0x28205d7],0x41
  41624c:	xchg   edx,eax
  41624d:	mov    ebp,0x731be900
  416252:	add    DWORD PTR [eax],0xffffffa2
  416255:	jns    0x416271
  416257:	mov    ecx,0x5ea
  41625c:	mov    ecx,0x7bfdd089
  416261:	jg     0x416229
  416263:	add    BYTE PTR [eax+eax*2],dh
  416266:	inc    esi
  416267:	jne    0x4162e6
  416269:	in     eax,dx
  41626a:	sbb    eax,0x877f8bff
  41626f:	jne    0x4162b9
  416271:	(bad)  
  416272:	pop    ecx
  416273:	or     BYTE PTR [ebx+0x418d0579],bl
  416279:	les    edx,FWORD PTR [ebp+0x57]
  41627c:	xor    al,0x68
  41627e:	adc    eax,0xe80037b7
  416283:	xchg   esp,eax
  416284:	mov    ah,0x5
  416286:	add    BYTE PTR [edx+0x3cdc0000],cl
  41628c:	jno    0x41629a
  41628e:	push   eax
  41628f:	or     BYTE PTR [esi-0x18],dl
  416292:	ss pop edx
  416294:	cld    
  416295:	call   FWORD PTR ds:0xc4fffcf2
  41629b:	xchg   edx,eax
  41629c:	adc    eax,0xc6fb8109
  4162a2:	mov    ah,0xff
  4162a4:	aas    
  4162a5:	dec    ecx
  4162a6:	mov    eax,ds:0x7bc389fd
  4162ab:	pusha  
  4162ac:	pop    eax
  4162ad:	leave  
  4162ae:	push   es
  4162af:	or     BYTE PTR [eax],al
  4162b1:	push   ebp
  4162b2:	aas    
  4162b3:	jmp    0x416333
  4162b5:	in     al,0x1c
  4162b7:	xchg   esp,ebp
  4162b9:	dec    esp
  4162ba:	cmp    bh,0xff
  4162bd:	push   edx
  4162be:	mov    dl,0x57
  4162c0:	mov    dh,BYTE PTR [eax+eiz*2+0x74fffe5f]
  4162c7:	out    0x55,eax
  4162c9:	pushf  
  4162ca:	test   bh,bh
  4162cc:	mov    BYTE PTR [ebp+ebx*4+0xd],al
  4162d0:	and    BYTE PTR [eax+0x6a],dl
  4162d3:	push   esi
  4162d4:	or     DWORD PTR [ecx+0x269995b],ecx
  4162da:	pop    ebx
  4162db:	cmp    al,0x82
  4162dd:	mov    esp,ecx
  4162df:	or     eax,0x6ab74f14
  4162e4:	ss fldz 
  4162e7:	loope  0x4162ec
  4162e9:	add    BYTE PTR [ebp+0x17e8e9],bl
  4162ef:	add    dl,ch
  4162f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f2:	add    DWORD PTR [eax+0x14],edx
  4162f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f6:	and    eax,0x25a51424
  4162fb:	and    BYTE PTR [edx],bl
  4162fd:	push   esi
  4162fe:	icebp  
  4162ff:	minps  xmm5,XMMWORD PTR [ecx-0x78]
  416303:	rcl    BYTE PTR [eax-0x46bb6fb1],0x75
  41630a:	ror    DWORD PTR [edx+0x50200561],1
  416310:	and    BYTE PTR ds:0xde4d2428,ch
  416316:	jmp    DWORD PTR [ebx]
  416318:	adc    DWORD PTR [ecx-0x26],0x6c699c3f
  41631f:	add    DWORD PTR [esi],ebx
  416321:	mov    eax,ds:0x561877f
  416326:	sbb    BYTE PTR [ecx-0x7bf05c3b],al
  41632c:	sub    BYTE PTR [ecx+0x1],ch
  41632f:	add    BYTE PTR [esi-0x58],dh
  416332:	je     0x42cc58
  416338:	push   ds
  416339:	add    eax,0x6e9c1828
  41633e:	xor    dl,BYTE PTR [eax-0x6e]
  416341:	js     0x416368
  416343:	adc    BYTE PTR [eax],bl
  416345:	or     BYTE PTR [eax],ch
  416347:	sbb    al,0x10
  416349:	add    ebx,DWORD PTR [ebx-0x18fa2ad8]
  41634f:	add    ebx,DWORD PTR [eax+0x7f]
  416352:	or     ebx,esp
  416354:	add    BYTE PTR [eax],al
  416356:	popf   
  416357:	add    ah,bh
  416359:	add    eax,0x6be7029d
  41635e:	mov    dl,0xb9
  416360:	out    0x3,eax
  416362:	push   eax
  416363:	out    dx,eax
  416364:	or     dl,BYTE PTR [eax]
  416366:	adc    al,0x73
  416368:	aas    
  416369:	jae    0x416359
  41636b:	jns    0x416393
  41636d:	mov    esi,DWORD PTR [ecx+0x5434eb1e]
  416373:	mov    BYTE PTR [ebx+0x28],ch
  416376:	sub    eax,0xcd03e704
  41637b:	xchg   DWORD PTR [ebx-0x647486d9],ebp
  416381:	daa    
  416382:	jno    0x4163ee
  416384:	in     eax,dx
  416385:	mov    esi,0xf862029d
  41638a:	mov    esi,0x7175220e
  41638f:	or     DWORD PTR [edx-0x31],esi
  416392:	mov    esi,0x16596206
  416397:	mov    edi,0x30fadc02
  41639c:	test   DWORD PTR [ebx],eax
  41639e:	popf   
  41639f:	lea    esp,[eax+edx*1]
  4163a2:	xchg   esp,eax
  4163a3:	inc    ebp
  4163a4:	cmp    eax,DWORD PTR [esi]
  4163a6:	and    dh,BYTE PTR [ebx]
  4163a8:	jo     0x41641b
  4163aa:	ret    0xe779
  4163ad:	mov    fs,WORD PTR [ecx]
  4163af:	pop    ds
  4163b0:	pop    es
  4163b1:	add    ebx,DWORD PTR [ebp+0x5d1b5f02]
  4163b7:	retf   
  4163b8:	adc    edi,DWORD PTR [esi+0x0]
  4163bb:	add    BYTE PTR [edi+edi*4],dl
  4163be:	retf   0x840f
  4163c1:	push   cs
  4163c2:	inc    eax
  4163c3:	jno    0x416357
  4163c5:	jns    0x4163c7
  4163c7:	jmp    0x965e1e7
  4163cc:	sahf   
  4163cd:	add    al,BYTE PTR [eax]
  4163cf:	jno    0x416367
  4163d1:	ret    0xd446
  4163d4:	lock xor eax,eax
  4163d7:	mov    dh,0x7c
  4163d9:	fimul  DWORD PTR [eax+0x8434344]
  4163df:	jmp    0x992dee57
  4163e4:	je     0x416372
  4163e6:	inc    ebx
  4163e7:	xor    eax,0x40feeb6e
  4163ec:	sar    BYTE PTR [eax-0x3],1
  4163ef:	and    eax,DWORD PTR es:[edx+0x74]
  4163f3:	sti    
  4163f4:	sbb    ebp,edi
  4163f6:	sti    
  4163f7:	in     eax,dx
  4163f8:	xor    ecx,DWORD PTR ds:0x614ed989
  4163fe:	pop    ebp
  4163ff:	pushf  
  416400:	sbb    eax,0x81278977
  416405:	or     dl,BYTE PTR [eax+0x1]
  416408:	repz sar esp,cl
  41640b:	out    dx,al
  41640c:	into   
  41640d:	inc    edx
  41640e:	pop    esi
  41640f:	mov    al,0x5e
  416411:	aad    0x88
  416413:	int    0xc8
  416415:	into   
  416416:	push   esp
  416417:	fs aam 0x7c
  41641a:	push   eax
  41641b:	inc    ebx
  41641c:	lahf   
  41641d:	push   0xffffff98
  41641f:	mov    DWORD PTR [eax],0x89775a00
  416425:	mov    ecx,0xd6747024
  41642a:	pop    ss
  41642b:	(bad)  
  41642e:	cwde   
  41642f:	cmc    
  416430:	pop    ss
  416431:	jb     0x4163ff
  416433:	add    BYTE PTR [esi+0x13],dl
  416436:	xchg   esp,eax
  416437:	dec    ecx
  416438:	call   0x8b459d73
  41643d:	mov    fs,WORD PTR [edx]
  41643f:	shl    bh,1
  416441:	add    BYTE PTR [edx-0x2b0003a5],al
  416447:	std    
  416448:	out    0x8,al
  41644a:	stos   BYTE PTR es:[edi],al
  41644b:	out    0x13,al
  41644d:	push   ebp
  41644e:	repz div DWORD PTR [ecx]
  416451:	shl    BYTE PTR [ebx+0x56],0xc6
  416455:	ret    0x478
  416458:	push   ecx
  416459:	mov    esp,eax
  41645b:	and    esp,0xfffffff8
  41645e:	cmc    
  41645f:	repnz mov eax,DWORD PTR ds:0xff530444
  416466:	or     DWORD PTR [eax+ebp*8],ecx
  416469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41646a:	xchg   ebx,eax
  41646b:	idiv   edx
  41646d:	test   BYTE PTR [ecx+edi*2+0x30],dh
  416471:	lea    eax,[eax]
  416473:	and    BYTE PTR [eax],cl
  416475:	call   0x3dcfca
  41647a:	mov    edi,0xb88d0551
  41647f:	sub    ch,al
  416481:	add    eax,DWORD PTR [esp+eax*1]
  416484:	push   eax
  416485:	push   0x0
  416487:	add    cl,ch
  416489:	pop    eax
  41648a:	mov    bh,al
  41648c:	pushf  
  41648d:	mov    bl,0x8c
  41648f:	push   ebx
  416491:	imul   eax,DWORD PTR [ebp-0x76fbfbfb],0x44
  416498:	cwde   
  416499:	adc    ch,BYTE PTR [edx+0x0]
  41649c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41649d:	not    DWORD PTR [eax]
  41649f:	xor    al,0xea
  4164a1:	inc    ebx
  4164a2:	std    
  4164a3:	or     BYTE PTR [eax],0x8
  4164a6:	pop    ebx
  4164a7:	mov    ebx,ecx
  4164a9:	bound  edi,QWORD PTR [edi-0x77a54bfc]
  4164af:	in     al,dx
  4164b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b1:	dec    ebp
  4164b2:	push   ebx
  4164b3:	push   0xffffffb0
  4164b5:	clc    
  4164b6:	jo     0x4164c0
  4164b8:	or     al,0x96
  4164ba:	push   ecx
  4164bb:	call   FWORD PTR [ebp-0x5ebc6f70]
  4164c1:	cmp    edx,ebp
  4164c3:	bound  eax,QWORD PTR [ebp-0x6d028008]
  4164c9:	hlt    
  4164ca:	jo     0x41644f
  4164cc:	xchg   ebx,eax
  4164cd:	jbe    0x4164d4
  4164cf:	xor    bl,BYTE PTR [ebp-0x7c]
  4164d2:	and    al,0x89
  4164d4:	loopne 0x4164b3
  4164d6:	cmp    eax,0x6a024fa1
  4164dc:	cdq    
  4164dd:	mov    cl,0xd1
  4164df:	push   ebp
  4164e0:	bound  ecx,QWORD PTR [esi+0x9]
  4164e3:	std    
  4164e4:	mov    al,0x79
  4164e6:	adc    eax,DWORD PTR [eax-0x63]
  4164e9:	in     al,dx
  4164ea:	inc    esp
  4164eb:	or     al,0x0
  4164ed:	add    bl,dh
  4164ef:	shl    edi,0x53
  4164f2:	inc    edx
  4164f3:	sub    BYTE PTR [ecx+0x3f32d8ff],dh
  4164f9:	add    al,0x9d
  4164fb:	scas   al,BYTE PTR es:[edi]
  4164fc:	mov    ch,ah
  4164fe:	int3   
  4164ff:	mov    edx,0x9e1054d3
  416504:	jge    0x416556
  416506:	test   DWORD PTR [ecx],esi
  416508:	add    DWORD PTR [eax],eax
  41650a:	popf   
  41650b:	adc    DWORD PTR [edi-0x788ff505],ebp
  416511:	lock sbb BYTE PTR [edi-0xa],ch
  416515:	sbb    esp,DWORD PTR [esi]
  416517:	sub    BYTE PTR es:[edx-0x64],0xd3
  41651c:	add    ecx,DWORD PTR [ecx-0x6dfabf25]
  416522:	pushf  
  416523:	imul   ecx,DWORD PTR [eax-0xabfdf08],0x39516b05
  41652d:	push   esp
  41652e:	retf   0x87af
  416531:	lds    esp,FWORD PTR [edx+0x7]
  416534:	dec    ecx
  416535:	rcl    DWORD PTR [eax+0x2],0x72
  416539:	jo     0x416557
  41653b:	cmc    
  41653c:	out    dx,al
  41653d:	add    ecx,DWORD PTR [ebp+ebp*8-0xa]
  416541:	jmp    0x4e043e8
  416546:	popf   
  416547:	add    bh,BYTE PTR [edx+0x7b398543]
  41654d:	jge    0x4164d7
  41654f:	push   0xffffffb8
  416551:	mov    es,WORD PTR [eax]
  416553:	add    dh,bl
  416555:	or     dl,BYTE PTR [edi]
  416557:	jmp    0xaee:0x7ce7ec7a
  41655e:	dec    edi
  41655f:	xchg   edx,eax
  416560:	sbb    BYTE PTR [edi+eiz*8],al
  416563:	xchg   BYTE PTR [ebp-0x10],bl
  416566:	loop   0x416599
  416568:	pop    ebp
  416569:	push   0xffffffe0
  41656b:	jl     0x41653b
  41656d:	or     cl,bh
  41656f:	dec    ebx
  416570:	popf   
  416571:	add    ah,bh
  416573:	imul   ebp,DWORD PTR [esi+esi*2-0xfc782d2],0xffffffee
  41657b:	mov    DWORD PTR [ebp+0x6b],edx
  41657e:	adc    ecx,edx
  416580:	sub    DWORD PTR [esi+0x61],esi
  416583:	inc    ecx
  416584:	(bad)  
  416585:	xlat   BYTE PTR ds:[ebx]
  416586:	sub    BYTE PTR [eax],cl
  416588:	popf   
  416589:	or     DWORD PTR [edi],0xaf088904
  41658f:	neg    DWORD PTR [ebp+0x77412731]
  416595:	xor    DWORD PTR [edi+0x3f308740],ecx
  41659b:	inc    ecx
  41659c:	dec    esi
  41659d:	mov    ebx,ecx
  41659f:	cmp    cl,0x16
  4165a2:	(bad)  
  4165a3:	(bad)  
  4165a4:	xchg   esi,eax
  4165a5:	rcr    DWORD PTR [ecx],1
  4165a7:	pop    ecx
  4165a8:	jae    0x416577
  4165aa:	outs   dx,DWORD PTR ds:[esi]
  4165ab:	(bad)  
  4165ad:	cmp    bl,bh
  4165af:	or     al,0x21
  4165b1:	mov    edx,0x29ee900
  4165b6:	mov    esp,DWORD PTR [eax+eax*1]
  4165b9:	add    BYTE PTR ds:0x3453e7d3,bl
  4165bf:	ja     0x4165be
  4165c1:	gs pop esi
  4165c3:	pop    es
  4165c4:	test   BYTE PTR [ebx-0x62],al
  4165c7:	add    al,BYTE PTR [eax]
  4165c9:	bound  esp,QWORD PTR [ebx-0x3]
  4165cc:	out    0x42,eax
  4165ce:	adc    DWORD PTR [eax-0x3],edi
  4165d1:	ins    BYTE PTR es:[edi],dx
  4165d2:	pop    ebx
  4165d3:	std    
  4165d4:	dec    esi
  4165d5:	sbb    DWORD PTR [esi],edx
  4165d7:	shl    edi,0x81
  4165da:	add    al,0x77
  4165dc:	std    
  4165dd:	and    ax,0x7f9
  4165e1:	jb     0x4165d1
  4165e3:	iret   
  4165e4:	mov    BYTE PTR [edi],ah
  4165e6:	test   BYTE PTR [edx+0x7e9ee901],0xc0
  4165ed:	mov    esp,0xc3e7cca4
  4165f2:	ins    DWORD PTR es:[edi],dx
  4165f3:	jbe    0x4165f2
  4165f5:	cli    
  4165f6:	enter  0xfd33,0xfa
  4165fa:	fimul  WORD PTR [edx-0x6d8eea5]
  416600:	jmp    0x416672
  416602:	xor    esp,DWORD PTR [ebp-0x79]
  416605:	mov    ah,0xaa
  416607:	cmp    esi,ecx
  416609:	xchg   ebp,eax
  41660a:	scas   eax,DWORD PTR es:[edi]
  41660b:	cmp    bl,BYTE PTR [esi]
  41660d:	jl     0x4165a7
  41660f:	ret    0x9f37
  416612:	lahf   
  416613:	out    dx,al
  416614:	add    BYTE PTR [edi+0x2a397375],ch
  41661a:	stc    
  41661b:	xor    edi,ebp
  41661d:	pop    esp
  41661e:	add    BYTE PTR [eax],al
  416620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416621:	mov    DWORD PTR [ebx-0x2f],edi
  416624:	jns    0x416636
  416626:	add    al,0xe9
  416628:	sahf   
  416629:	jle    0x4165eb
  41662b:	push   ebp
  41662c:	loope  0x4166a3
  41662e:	jae    0x416630
  416630:	adc    al,0x85
  416632:	inc    ecx
  416633:	in     al,dx
  416634:	or     esi,DWORD PTR [ebx-0xb]
  416637:	call   0x3c5bdd
  41663c:	ds (bad) 
  41663e:	mov    BYTE PTR [ebp+0xc],dh
  416641:	out    0x13,al
  416643:	add    esi,DWORD PTR [eax+eax*1-0x19f78a77]
  41664a:	psubd  mm5,QWORD PTR [ebx]
  41664d:	clc    
  41664e:	mov    ebx,eax
  416650:	das    
  416651:	sub    ebx,edi
  416653:	jne    0x4166cd
  416655:	push   eax
  416656:	cld    
  416657:	adc    eax,0x400f64
  41665c:	add    DWORD PTR [edi+0x41e9de73],edi
  416662:	in     eax,0xe8
  416664:	repnz sti 
  416666:	(bad)  
  416667:	dec    DWORD PTR [edi-0x20198f45]
  41666d:	lods   eax,DWORD PTR ds:[esi]
  41666e:	mov    DWORD PTR [ebp-0x14],esi
  416671:	out    0xe3,al
  416673:	add    dh,BYTE PTR [eax+eax*1]
  416676:	mov    DWORD PTR [ebp-0x78],esi
  416679:	out    0xdf,al
  41667b:	stc    
  41667c:	mov    esi,edi
  41667e:	xor    eax,eax
  416680:	pop    ebx
  416681:	pop    edx
  416682:	pop    eax
  416683:	leave  
  416684:	add    BYTE PTR [eax],al
  416686:	jbe    0x41668e
  416688:	add    BYTE PTR [ebp-0x41],dl
  41668b:	jmp    0x8d54:0x5257514c
  416692:	inc    ecx
  416693:	clc    
  416694:	dec    edi
  416695:	push   0xfffffe73
  41669a:	pushf  
  41669b:	sub    ah,bh
  41669d:	dec    DWORD PTR [ebx]
  41669f:	test   eax,esi
  4166a1:	mov    cl,0xf7
  4166a4:	inc    DWORD PTR [edx+edx*8-0x6274c69d]
  4166ab:	push   ds
  4166ac:	jl     0x416718
  4166ae:	mov    ch,0x18
  4166b0:	push   esi
  4166b1:	mov    esp,ebx
  4166b3:	sbb    al,0x71
  4166b5:	cmc    
  4166b6:	and    BYTE PTR [eax+0x4e102bf0],bl
  4166bc:	xor    al,0x89
  4166be:	mov    ebx,0x7e717670
  4166c3:	movups xmm7,xmm5
  4166c6:	xor    BYTE PTR [ecx-0x78],dh
  4166c9:	inc    ebp
  4166ca:	cdq    
  4166cb:	cmp    DWORD PTR [ecx+0x13],edi
  4166ce:	fldcw  WORD PTR [ebx-0x3f]
  4166d1:	call   FWORD PTR [edi]
  4166d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d4:	add    eax,0xc6d5d83
  4166d9:	sbb    DWORD PTR [edx+0x51],0x88eff93e
  4166e0:	outs   dx,BYTE PTR ds:[esi]
  4166e1:	add    al,0x5b
  4166e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e4:	jp     0x4166e5
  4166e6:	rcl    cl,1
  4166e8:	mov    edx,DWORD PTR [edx+0x0]
  4166eb:	add    BYTE PTR [edx-0x34],ah
  4166ee:	mov    al,BYTE PTR [ebx+0x5a]
  4166f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f2:	xlat   BYTE PTR ds:[ebx]
  4166f3:	pop    eax
  4166f4:	fs daa 
  4166f6:	std    
  4166f7:	push   ecx
  4166f9:	lock fs add eax,0xd3510161
  416701:	lods   eax,DWORD PTR ds:[esi]
  416702:	xor    BYTE PTR [ecx+0x76016db0],al
  416708:	jp     0x41671e
  41670a:	lock or esp,DWORD PTR [edx]
  41670d:	xchg   esi,eax
  41670e:	or     eax,ebp
  416710:	in     al,dx
  416711:	mov    dh,0x7a
  416713:	std    
  416714:	es jns 0x416794
  416717:	not    BYTE PTR [eax-0x93fcca3]
  41671d:	inc    eax
  41671e:	mov    es,WORD PTR [ebx-0x57]
  416721:	mov    ebp,ecx
  416723:	xchg   edi,eax
  416724:	popf   
  416725:	add    ah,bh
  416727:	add    esi,ebp
  416729:	out    0xe0,eax
  41672b:	jns    0x41670d
  41672d:	retf   
  41672e:	pusha  
  41672f:	pop    esp
  416730:	lds    edi,FWORD PTR [esi-0x782f86c8]
  416736:	stos   BYTE PTR es:[edi],al
  416737:	ins    DWORD PTR es:[edi],dx
  416738:	fwait
  416739:	call   0x26c5324
  41673e:	out    0x3,eax
  416740:	ins    BYTE PTR es:[edi],dx
  416741:	inc    edx
  416742:	mov    edi,0xa672b4d4
  416747:	fiadd  DWORD PTR [ebp-0x2b]
  41674a:	test   al,0xc
  41674c:	popf   
  41674d:	int    0x61
  41674f:	push   0xd3ea0000
  416754:	xor    al,0x87
  416756:	fisubr WORD PTR [esi+0x17]
  416759:	in     al,dx
  41675a:	xor    eax,DWORD PTR [ebx]
  41675c:	out    0x3,eax
  41675e:	jne    0x416753
  416760:	jno    0x4167db
  416762:	js     0x4167e2
  416764:	lahf   
  416765:	jg     0x4167c1
  416767:	test   DWORD PTR [edx],0xd16ede8d
  41676d:	adc    BYTE PTR [esp+edx*2-0x77ac8f4b],ch
  416774:	cmp    edi,ebp
  416776:	mov    al,ds:0xcf77bc2b
  41677b:	sti    
  41677c:	jno    0x41674d
  41677e:	call   0xdf5d:0xfa8ce97b
  416785:	sar    BYTE PTR [edx],cl
  416787:	bound  edi,QWORD PTR [eax+0x27362878]
  41678d:	ficomp DWORD PTR [ebx+0x45]
  416790:	jmp    0x416795
  416792:	push   0xffffff85
  416794:	mov    ebx,DWORD PTR [edi]
  416796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416797:	add    bl,BYTE PTR [edx-0x4b098e2f]
  41679d:	jle    0x41677c
  41679f:	idiv   bh
  4167a1:	mov    edx,0x6215b209
  4167a6:	jno    0x41677f
  4167a8:	cld    
  4167a9:	pop    ebp
  4167aa:	mov    ebp,0xcb21e80a
  4167af:	outs   dx,BYTE PTR ds:[esi]
  4167b0:	std    
  4167b1:	bound  ecx,QWORD PTR [esi-0x7b]
  4167b4:	not    BYTE PTR [eax+eax*1+0x0]
  4167b8:	popf   
  4167b9:	xor    al,0xc0
  4167bb:	sar    BYTE PTR [ebp-0x28],cl
  4167be:	addr16 pusha 
  4167c0:	sahf   
  4167c1:	add    al,BYTE PTR [eax]
  4167c3:	bound  ebx,QWORD PTR [ebp+0x5a]
  4167c6:	shl    BYTE PTR [eax+0x73566f35],cl
  4167cc:	inc    esi
  4167cd:	pop    edx
  4167ce:	test   eax,0x8a6f2438
  4167d3:	stos   BYTE PTR es:[edi],al
  4167d4:	or     DWORD PTR [ecx],eax
  4167d6:	push   0xffffffe9
  4167d8:	xchg   BYTE PTR [eax+0x339ee900],bl
  4167de:	rcl    BYTE PTR [ecx+0x76fd7946],0x55
  4167e5:	iret   
  4167e6:	pop    eax
  4167e7:	adc    bl,bl
  4167e9:	push   es
  4167ea:	add    BYTE PTR [ecx+ebx*1+0x4db74f5e],bh
  4167f1:	jl     0x416836
  4167f3:	push   ebp
  4167f4:	outs   dx,BYTE PTR ds:[esi]
  4167f5:	jmp    0x2e05193
  4167fa:	call   0xfdb1301d
  4167ff:	jb     0x4167cf
  416801:	test   esi,esi
  416803:	mov    ebp,0x2d437b7e
  416808:	test   DWORD PTR [edx-0x1],0xd2339ee8
  41680f:	jb     0x4167b8
  416811:	ja     0x416808
  416813:	ins    BYTE PTR es:[edi],dx
  416814:	jo     0x41680b
  416816:	or     eax,0x726cdbd0
  41681b:	add    BYTE PTR [eax],al
  41681d:	add    BYTE PTR ds:0x8d08497e,cl
  416823:	add    al,0x87
  416825:	(bad)  
  416826:	lahf   
  416827:	std    
  416828:	push   ebp
  416829:	call   0x3dbc44
  41682e:	xchg   esi,eax
  416830:	pop    edx
  416831:	pop    esi
  416832:	sub    eax,0x950003c4
  416837:	test   DWORD PTR [esp-0x44],edi
  41683b:	add    al,0x4f
  41683d:	push   esi
  41683e:	stos   DWORD PTR es:[edi],eax
  41683f:	jb     0x416877
  416841:	test   esp,esi
  416843:	jno    0x416877
  416845:	imul   eax,DWORD PTR [ecx*8+0x7bc4fffc],0x720357f8
  416850:	and    DWORD PTR [eax],ebx
  416852:	or     al,0x81
  416854:	dec    ebp
  416855:	push   DWORD PTR [ebx]
  416857:	jl     0x416849
  416859:	test   DWORD PTR [edx],ebp
  41685b:	jb     0x41685e
  41685d:	xor    dh,BYTE PTR [esp+ebx*8]
  416860:	and    dl,BYTE PTR [esi-0x54]
  416863:	mov    WORD PTR [eax],es
  416865:	add    BYTE PTR [ebp+edi*2-0x10ca173d],al
  41686c:	cli    
  41686d:	jmp    FWORD PTR [edx]
  41686f:	jp     0x416849
  416871:	call   0x3dbfe4
  416876:	mov    esi,0x5e0ee6c3
  41687b:	add    al,0x68
  41687d:	call   0x0:0x33000434
  416884:	je     0x416864
  416886:	adc    bh,cl
  416888:	jae    0x416881
  41688a:	pop    edx
  41688b:	pop    esi
  41688c:	cmovg  edi,DWORD PTR [edi-0x77accbfc]
  416893:	in     al,dx
  416894:	in     eax,0x56
  416896:	push   ebx
  416897:	lea    ebx,[ebp-0x7aaf8a62]
  41689d:	test   DWORD PTR [ebx],0x2e119d00
  4168a3:	cli    
  4168a4:	add    dh,BYTE PTR [ecx-0x76]
  4168a7:	enter  0x2320,0xf0
  4168ab:	sbb    esp,DWORD PTR [esi]
  4168ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ae:	jne    0x41691a
  4168b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b1:	or     al,0x52
  4168b3:	pop    esi
  4168b4:	jmp    0x3c67:0x50d28057
  4168bb:	jae    0x41688e
  4168bd:	retf   
  4168be:	or     cl,BYTE PTR [ecx+0x28c7170]
  4168c4:	push   ss
  4168c5:	fwait
  4168c6:	push   0x8
  4168c8:	dec    esp
  4168c9:	inc    ecx
  4168ca:	mov    al,0x50
  4168cc:	mov    dl,0xa0
  4168ce:	xor    al,al
  4168d0:	dec    ebx
  4168d1:	mov    dl,0x3f
  4168d3:	add    al,0x9d
  4168d5:	ss mov esp,ebp
  4168d8:	in     al,dx
  4168d9:	sub    cl,dh
  4168db:	mov    bl,al
  4168dd:	jge    0x4168b0
  4168df:	imul   eax,DWORD PTR [ecx],0x82f76b92
  4168e5:	lock mov eax,ecx
  4168e8:	add    BYTE PTR [eax],al
  4168ea:	and    BYTE PTR [edx+0x26261bed],ah
  4168f0:	js     0x41695c
  4168f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f3:	or     al,0x52
  4168f5:	pop    esi
  4168f6:	push   0xffffffd7
  4168f8:	jg     0x4168cc
  4168fa:	shl    BYTE PTR [edi+0x3c],1
  4168fd:	jae    0x416950
  4168ff:	dec    ebx
  416900:	or     al,0x89
  416902:	lock jno 0x416891
  416905:	add    dl,BYTE PTR [esi]
  416907:	sbb    ch,BYTE PTR [edx+0x8]
  41690a:	int3   
  41690b:	shr    edi,0x4f
  41690e:	xor    ah,BYTE PTR [eax]
  416910:	xor    al,al
  416912:	retf   
  416913:	add    dh,BYTE PTR [eax]
  416915:	inc    ecx
  416916:	cdq    
  416917:	add    dh,BYTE PTR [edx+ecx*4+0x7b0b8309]
  41691e:	bound  eax,QWORD PTR [ebx-0x2c62f474]
  416924:	pushf  
  416925:	into   
  416926:	mov    ?,WORD PTR [esp+eiz*2]
  416929:	inc    ebx
  41692a:	jno    0x41694c
  41692c:	add    BYTE PTR [ebx-0x49],0x7b
  416930:	out    dx,eax
  416931:	int    0xe9
  416933:	hlt    
  416934:	out    dx,al
  416935:	imul   esp,DWORD PTR [edi],0xffffffd2
  416938:	fnsave [ebp+0x24]
  41693b:	jb     0x4169a9
  41693d:	outs   dx,BYTE PTR ds:[esi]
  41693e:	dec    esi
  41693f:	push   es
  416940:	sbb    DWORD PTR [esp+esi*4+0x20],eax
  416944:	sbb    eax,0xa67b3eea
  416949:	ins    BYTE PTR es:[edi],dx
  41694a:	push   eax
  41694b:	push   0xffffffb6
  41694d:	jne    0x41694f
  41694f:	add    BYTE PTR [ebx+0x7c],cl
  416952:	(bad)  
  416953:	ins    BYTE PTR es:[edi],dx
  416954:	ins    DWORD PTR es:[edi],dx
  416955:	shl    BYTE PTR [ebp-0x6dbce88b],cl
  41695b:	or     DWORD PTR [edi],eax
  41695d:	add    eax,DWORD PTR [ecx]
  41695f:	loopne 0x41692e
  416961:	inc    edx
  416962:	jg     0x416928
  416964:	xchg   edx,eax
  416965:	outs   dx,BYTE PTR ds:[esi]
  416966:	xchg   ch,dl
  416968:	loopne 0x416933
  41696a:	jno    0x4169cb
  41696c:	(bad)  
  41696d:	inc    eax
  41696e:	jmp    0x416973
  416970:	int3   
  416971:	xor    DWORD PTR [edx-0x110874c4],edx
  416977:	je     0x416964
  416979:	cli    
  41697a:	dec    esi
  41697b:	or     ebp,ebp
  41697d:	ins    DWORD PTR es:[edi],dx
  41697e:	push   esi
  41697f:	mov    WORD PTR [ebx+0x23ffad7b],?
  416985:	int    0xee
  416987:	mov    ah,bl
  416989:	(bad)  
  41698a:	mov    eax,ds:0xfffec740
  41698f:	shl    BYTE PTR [esi-0x2e],0x40
  416993:	jmp    0xe93f0a4e
  416998:	sahf   
  416999:	xor    edx,edx
  41699b:	loop   0x416a01
  41699d:	idiv   BYTE PTR [eax]
  41699f:	push   0xa
  4169a1:	push   es
  4169a2:	add    cl,BYTE PTR [edi+0x55385bb]
  4169a8:	int3   
  4169a9:	inc    edx
  4169aa:	xchg   DWORD PTR [edx+ebx*2-0x141ebcd5],esp
  4169b1:	and    DWORD PTR [eax],edi
  4169b3:	aad    0x0
  4169b5:	add    BYTE PTR [esi-0x32deed0f],dl
  4169bb:	add    eax,0x83a053ff
  4169c0:	shr    bl,0x95
  4169c3:	rol    DWORD PTR [edi],0xde
  4169c6:	sbb    al,BYTE PTR [ebx-0x7f]
  4169c9:	xor    al,0x45
  4169cb:	outs   dx,DWORD PTR ds:[esi]
  4169cc:	jmp    0xd99c48aa
  4169d1:	cli    
  4169d2:	pop    esi
  4169d3:	ret    0x62c0
  4169d6:	retf   
  4169d7:	xor    DWORD PTR gs:[eiz*1+0x6a9326f],0x9ee8fd92
  4169e3:	inc    eax
  4169e4:	add    al,0xe9
  4169e6:	int    0x50
  4169e8:	aaa    
  4169e9:	sbb    eax,0xca7406bd
  4169ee:	and    eax,0xdcb2082d
  4169f3:	neg    BYTE PTR [ebx]
  4169f5:	mov    edx,0xdc102ad7
  4169fa:	call   0x3efb:0x4ae8502a
  416a01:	adc    ah,BYTE PTR [ebp+0x21]
  416a04:	add    al,0xd5
  416a06:	dec    ecx
  416a07:	sub    eax,0x32e900e9
  416a0c:	shr    bl,0x42
  416a0f:	inc    ecx
  416a10:	call   0x5822918
  416a15:	ret    0x140
  416a18:	xchg   DWORD PTR [eax+0x0],ecx
  416a1b:	add    BYTE PTR [eax],ch
  416a1d:	in     al,dx
  416a1e:	les    esi,FWORD PTR [ebp+0xc]
  416a21:	jp     0x416a6b
  416a23:	or     BYTE PTR [ebp+0x39],bh
  416a26:	or     ebx,ebp
  416a28:	fistp  QWORD PTR [ecx+0x50]
  416a2b:	or     bh,bl
  416a2d:	mov    edx,0x7a122071
  416a32:	jo     0x416a38
  416a34:	pop    es
  416a35:	repz ss into 
  416a38:	sbb    dh,BYTE PTR [edx+0x12]
  416a3b:	mov    ah,ch
  416a3d:	inc    ebp
  416a3e:	xchg   BYTE PTR [eax-0x38],cl
  416a41:	test   dl,dl
  416a43:	jne    0x416a37
  416a45:	sbb    eax,0x45bf750d
  416a4a:	xchg   BYTE PTR [eax-0x38],cl
  416a4d:	xor    eax,eax
  416a4f:	ret    
  416a50:	inc    edi
  416a51:	or     WORD PTR [eax],ax
  416a54:	aas    
  416a55:	inc    esi
  416a56:	or     ebx,eax
  416a58:	xor    al,0x31
  416a5a:	add    BYTE PTR [ebx+esi*4+0x36],dh
  416a5e:	shr    cl,0xf
  416a61:	pop    es
  416a62:	add    BYTE PTR [eax],al
  416a64:	xlat   BYTE PTR ds:[ebx]
  416a65:	out    dx,eax
  416a66:	jae    0x416a8c
  416a68:	jl     0x416a5b
  416a6a:	adc    BYTE PTR [eax+0x66],bh
  416a6d:	inc    eax
  416a6e:	std    
  416a6f:	mov    bh,BYTE PTR [edx+edi*2]
  416a72:	xlat   BYTE PTR ds:[ebx]
  416a73:	jg     0x4169f5
  416a75:	ss shr bl,0x71
  416a79:	dec    edx
  416a7a:	mov    dh,BYTE PTR [edi+0x6c]
  416a7d:	test   DWORD PTR [esi],edi
  416a7f:	add    BYTE PTR [eax],al
  416a81:	add    BYTE PTR [ecx+0x25],dh
  416a84:	mov    DWORD PTR [ebx-0x63],eax
  416a87:	push   edi
  416a88:	shl    edi,1
  416a8a:	mov    WORD PTR ds:[edx-0x3],?
  416a8e:	adc    al,0x5c
  416a90:	mov    al,al
  416a92:	mov    cl,0x5
  416a94:	aad    0xfc
  416a96:	test   eax,0x2a5013fd
  416a9b:	push   edi
  416a9c:	xor    DWORD PTR [esi],edx
  416a9e:	fstp   QWORD PTR [ecx-0x7a]
  416aa1:	les    ebp,FWORD PTR [ecx+0x603d0f2]
  416aa7:	inc    esp
  416aa8:	jle    0x416aef
  416aaa:	mov    eax,ds:0x9c17bfce
  416aaf:	adc    DWORD PTR ds:0x856cfa4e,ecx
  416ab5:	shr    BYTE PTR [eax+0x5d],0x33
  416ab9:	shl    dh,0xb5
  416abc:	jle    0x416acc
  416abe:	loop   0x416af4
  416ac0:	or     BYTE PTR [ecx],al
  416ac2:	push   0x65
  416ac4:	(bad)  
  416ac5:	cld    
  416ac6:	dec    ecx
  416ac7:	std    
  416ac8:	adc    ecx,DWORD PTR [edi-0x36]
  416acb:	jbe    0x416afe
  416acd:	push   ss
  416ace:	pop    ebp
  416acf:	pop    ecx
  416ad0:	xchg   ah,al
  416ad2:	test   eax,0x2603d25a
  416ad7:	sbb    eax,0xa39b8908
  416adc:	add    eax,0xcaa49d08
  416ae1:	add    esp,DWORD PTR [esi]
  416ae3:	and    al,0x8
  416ae5:	mov    DWORD PTR [eax],eax
  416ae7:	add    BYTE PTR [ebx-0x62f7fa65],ah
  416aed:	jl     0x416ab9
  416aef:	add    ecx,DWORD PTR [ebp+0x5a]
  416af2:	iret   
  416af3:	pop    eax
  416af4:	pop    edi
  416af5:	add    DWORD PTR gs:[ebx+0x26],edx
  416af9:	test   DWORD PTR [ecx+0x5759d3d],eax
  416aff:	xor    bl,BYTE PTR [ebp+0x2]
  416b02:	push   edx
  416b03:	in     al,0xf0
  416b05:	imul   edx,esp,0xfffffffb
  416b08:	and    eax,0x4b633f3b
  416b0d:	imul   ecx,DWORD PTR [esi+0x7e],0x4d
  416b11:	jns    0x416acf
  416b13:	sti    
  416b14:	pop    ds
  416b15:	je     0x416acb
  416b17:	pop    es
  416b18:	outs   dx,DWORD PTR ds:[esi]
  416b19:	inc    edx
  416b1a:	inc    edx
  416b1b:	mov    ebx,0x182dd4cd
  416b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b21:	adc    BYTE PTR [edi-0x1d44dbfd],ah
  416b27:	xor    BYTE PTR [ebp+0x1],0x64
  416b2b:	pop    es
  416b2c:	int3   
  416b2d:	pop    ss
  416b2e:	pop    ds
  416b2f:	or     BYTE PTR [eax+0x6a01e9fa],0xd2
  416b36:	std    
  416b37:	neg    DWORD PTR [edx-0x6ccc2395]
  416b3d:	ret    0x1ce6
  416b40:	inc    eax
  416b41:	push   es
  416b42:	jb     0x416b05
  416b44:	sahf   
  416b45:	jg     0x416aea
  416b47:	add    BYTE PTR [edi+edi*2-0x30],dh
  416b4b:	add    eax,DWORD PTR [eax]
  416b4d:	add    BYTE PTR [esi-0x5],cl
  416b50:	int    0x3a
  416b52:	mov    ch,0x2a
  416b54:	xor    eax,0x57eb871
  416b59:	add    al,0xb0
  416b5b:	mov    edx,0x5a9e5cea
  416b60:	aaa    
  416b61:	mov    edi,0x3576aa1
  416b66:	sti    
  416b67:	(bad)  
  416b68:	test   al,0x8
  416b6a:	popf   
  416b6b:	iret   
  416b6c:	popa   
  416b6d:	pusha  
  416b6e:	in     al,dx
  416b6f:	shl    DWORD PTR [ecx+0x4a],1
  416b72:	jne    0x416b65
  416b74:	out    0x3,al
  416b76:	popf   
  416b77:	pop    edx
  416b78:	loopne 0x416b81
  416b7a:	popf   
  416b7b:	add    al,BYTE PTR [eax]
  416b7d:	mov    edx,0x1a50d3d9
  416b82:	in     al,dx
  416b83:	cmc    
  416b84:	(bad)  
  416b86:	leave  
  416b87:	iret   
  416b88:	cld    
  416b89:	hlt    
  416b8a:	jbe    0x416ba1
  416b8c:	inc    eax
  416b8d:	jmp    0x4147ecf7
  416b92:	sahf   
  416b93:	mov    eax,0x88646fc
  416b98:	jae    0x416b7f
  416b9a:	push   0xeda3e942
  416b9f:	push   0x6b
  416ba1:	test   eax,0xf9433f9e
  416ba6:	mov    ds:0xf0e90002,al
  416bab:	add    eax,0xd2a2ae8b
  416bb0:	cld    
  416bb1:	(bad)  
  416bb2:	add    BYTE PTR [eax],al
  416bb4:	lea    esi,[eax]
  416bb6:	std    
  416bb7:	fdivr  QWORD PTR [edx+0x15]
  416bba:	inc    eax
  416bbb:	jmp    0xf649abd9
  416bc0:	sub    edi,edx
  416bc2:	jb     0x416bc5
  416bc4:	enter  0x69d2,0xea
  416bc8:	icebp  
  416bc9:	sar    ah,cl
  416bcb:	push   esp
  416bcc:	popf   
  416bcd:	addr16 jae 0x416bb1
  416bd0:	dec    ebp
  416bd1:	xor    ch,bh
  416bd3:	hlt    
  416bd4:	mov    dh,0x14
  416bd6:	inc    eax
  416bd7:	jmp    0x2452c13
  416bdc:	pop    eax
  416bdd:	cmc    
  416bde:	push   es
  416bdf:	bound  edx,QWORD PTR [edx+ebx*2+0xa]
  416be3:	jmp    0x5e2a6e86
  416be8:	dec    esi
  416be9:	imul   ebx,DWORD PTR [esi+0x42],0xe90c4362
  416bf0:	fs into 
  416bf2:	mov    BYTE PTR [ecx+0x23e6],bl
  416bf8:	test   BYTE PTR ds:0xe6784687,al
  416bfe:	cmp    BYTE PTR [ecx+ecx*2+0x45],bh
  416c02:	std    
  416c03:	test   BYTE PTR [ecx+esi*2],dh
  416c06:	add    al,0x50
  416c08:	ret    
  416c09:	retf   0x667e
  416c0c:	cmp    BYTE PTR ds:0xc5b90687,al
  416c12:	jae    0x416c1a
  416c14:	add    al,0xf2
  416c16:	rol    BYTE PTR [ebx-0x1560000],cl
  416c1c:	pop    edx
  416c1d:	pop    esi
  416c1e:	xchg   esi,esp
  416c20:	inc    ebp
  416c21:	or     BYTE PTR [ecx+0x40b73c5],bh
  416c27:	repnz adc BYTE PTR [ecx+ebx*1+0x45],bh
  416c2c:	std    
  416c2d:	sbb    BYTE PTR [edx],0x6d
  416c30:	std    
  416c31:	ret    0xe649
  416c34:	jmp    0x416bb7
  416c36:	add    ah,bh
  416c38:	cld    
  416c39:	inc    DWORD PTR [esi+ecx*2]
  416c3c:	push   ebx
  416c3d:	mov    DWORD PTR [ecx],edi
  416c3f:	fnstcw WORD PTR [esi+0x65]
  416c42:	lock std 
  416c44:	push   edx
  416c45:	mov    esp,ebp
  416c47:	pushf  
  416c48:	add    bh,bh
  416c4a:	rol    BYTE PTR [eax-0x200fa8c],1
  416c50:	cli    
  416c51:	dec    esp
  416c52:	cmp    BYTE PTR [esi+0x7dba7404],al
  416c58:	mov    DWORD PTR [eax],0xbf0084c4
  416c5e:	clc    
  416c5f:	outs   dx,DWORD PTR ds:[esi]
  416c60:	cmp    eax,0x70ff1c00
  416c65:	add    eax,0x4075c233
  416c6a:	test   ah,cl
  416c6c:	stos   BYTE PTR es:[edi],al
  416c6d:	push   DWORD PTR [ebx]
  416c6f:	fsubr  DWORD PTR [ecx+0x0]
  416c72:	popf   
  416c73:	sub    al,0xdc
  416c75:	ja     0x416cac
  416c77:	sbb    eax,0x119d6a04
  416c7c:	push   esp
  416c7d:	jbe    0x416c7f
  416c7f:	add    ch,bl
  416c81:	pop    ecx
  416c82:	outs   dx,BYTE PTR ds:[esi]
  416c83:	jae    0x416c1a
  416c85:	or     BYTE PTR [ebp+0x76],ch
  416c88:	cdq    
  416c89:	fcom   DWORD PTR [esi]
  416c8b:	jo     0x416c3d
  416c8d:	cdq    
  416c8e:	add    DWORD PTR [edi-0x3f778e25],eax
  416c94:	call   0xd759:0x9d0072d5
  416c9b:	add    ebp,DWORD PTR [eax]
  416c9d:	scas   eax,DWORD PTR es:[edi]
  416c9e:	stc    
  416c9f:	dec    esi
  416ca0:	(bad)  
  416ca1:	xchg   esi,eax
  416ca2:	rol    esp,1
  416ca4:	loopne 0x416d07
  416ca6:	add    al,0x0
  416ca8:	popf   
  416ca9:	pop    ecx
  416caa:	outs   dx,BYTE PTR ds:[esi]
  416cab:	adc    ebp,DWORD PTR [ecx]
  416cad:	addr16 sar edi,0xfa
  416cb1:	dec    esi
  416cb2:	and    edi,edi
  416cb4:	or     ah,ch
  416cb6:	cs ins BYTE PTR es:[edi],dx
  416cb8:	test   al,0x99
  416cba:	add    DWORD PTR [ecx-0x5ffea663],edi
  416cc0:	mov    cl,0x5d
  416cc2:	clc    
  416cc3:	or     dh,ch
  416cc5:	jbe    0x416cea
  416cc7:	jmp    edx
  416cc9:	fld    QWORD PTR [ebx+0xd]
  416ccc:	and    edi,edx
  416cce:	add    BYTE PTR [eax],al
  416cd0:	popf   
  416cd1:	(bad)  
  416cd2:	mov    DWORD PTR [edi],0xf787de6d
  416cd8:	ret    
  416cd9:	cmp    BYTE PTR [esi+0x50],ch
  416cdc:	loop   0x416cf4
  416cde:	cld    
  416cdf:	call   FWORD PTR [ebp+0xfd0159]
  416ce5:	add    BYTE PTR [eax-0x62bfed8b],dl
  416ceb:	fiadd  WORD PTR [eax+0x73]
  416cee:	add    al,0x3
  416cf0:	pop    edi
  416cf1:	outs   dx,BYTE PTR ds:[esi]
  416cf2:	popf   
  416cf3:	add    ah,bh
  416cf5:	sub    al,0xde
  416cf7:	cli    
  416cf8:	in     eax,0xc1
  416cfa:	(bad)  
  416cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cfd:	xchg   DWORD PTR [esi+0x706e8569],ebx
  416d03:	add    ch,BYTE PTR [eax+ecx*4+0x72]
  416d07:	push   0x67cd6e76
  416d0c:	aam    0xeb
  416d0e:	lods   al,BYTE PTR ds:[esi]
  416d0f:	ret    0x7ce6
  416d12:	fdivp  st(2),st
  416d14:	arpl   WORD PTR [ebx-0x2f],ax
  416d17:	rol    eax,0x14
  416d1a:	push   ss
  416d1b:	jge    0x416d5c
  416d1d:	ins    DWORD PTR es:[edi],dx
  416d1e:	cmp    BYTE PTR [edi-0x31],ah
  416d21:	dec    edi
  416d22:	stos   DWORD PTR es:[edi],eax
  416d23:	ret    0xd3e6
  416d26:	sub    DWORD PTR ds:0x2dd15f7,ecx
  416d2c:	(bad)  
  416d2d:	enter  0x83a2,0x2b
  416d31:	(bad)  
  416d32:	jp     0x416d42
  416d34:	xchg   esp,eax
  416d35:	ret    
  416d36:	or     dh,BYTE PTR [esi+0x6b]
  416d39:	or     BYTE PTR [edx],cl
  416d3b:	push   0x674d6e0e
  416d40:	fdiv   st(7),st
  416d42:	mov    ds:0x5e7ae6c2,eax
  416d47:	cli    
  416d48:	cdq    
  416d49:	add    BYTE PTR [eax],0x0
  416d4c:	fst    QWORD PTR [edx]
  416d4e:	xchg   edi,eax
  416d4f:	sbb    BYTE PTR [esi],0x5a
  416d52:	in     eax,0x6d
  416d54:	rcl    cl,1
  416d56:	(bad)  
  416d58:	mov    ds:0x4681be67,al
  416d5d:	out    0xf6,ax
  416d60:	mov    ebx,ss
  416d62:	push   eax
  416d63:	adc    DWORD PTR [ebp+0x72],eax
  416d66:	xor    eax,0x67aac4
  416d6b:	aas    
  416d6c:	mov    eax,ds:0x96ad565
  416d71:	data16 je 0x416d75
  416d74:	int3   
  416d75:	inc    edx
  416d76:	push   eax
  416d77:	cmp    DWORD PTR [ecx-0x4a],esi
  416d7a:	cld    
  416d7b:	pop    ds
  416d7c:	and    DWORD PTR [edi+0x13],0xffc29269
  416d83:	imul   eax,DWORD PTR [ecx],0xe4e57466
  416d89:	inc    edx
  416d8a:	jmp    0xfed1347d
  416d8f:	outs   dx,BYTE PTR ds:[esi]
  416d90:	enter  0xc030,0xc6
  416d94:	pusha  
  416d95:	retf   
  416d96:	(bad)  
  416d97:	sub    edx,DWORD PTR [ebp-0x429dacfe]
  416d9d:	mov    ch,0x4e
  416d9f:	mov    edx,0x9ef07b50
  416da4:	sbb    ebp,DWORD PTR [ebp+0x74]
  416da7:	out    dx,eax
  416da8:	inc    esp
  416da9:	(bad)  
  416daa:	imul   ebp,ecx,0xf5136748
  416db0:	add    BYTE PTR [eax],al
  416db2:	mov    al,0xc2
  416db4:	jmp    FWORD PTR [ecx+0x65]
  416db7:	test   BYTE PTR [eax-0x42fd897c],0xe9
  416dbe:	scas   al,BYTE PTR es:[edi]
  416dbf:	add    al,BYTE PTR [eax]
  416dc1:	mov    dh,0x56
  416dc3:	inc    edx
  416dc4:	dec    ecx
  416dc5:	push   es
  416dc6:	cmp    BYTE PTR [ebx-0x28],0x64
  416dca:	push   esp
  416dcb:	test   DWORD PTR [ebx+0x29965],0xfff9ca6a
  416dd5:	pop    esp
  416dd6:	scas   eax,DWORD PTR es:[edi]
  416dd7:	fdivr  st,st(7)
  416dd9:	fst    st(3)
  416ddb:	stc    
  416ddc:	cld    
  416ddd:	cld    
  416dde:	scas   al,BYTE PTR es:[edi]
  416ddf:	adc    eax,DWORD PTR [eax-0x17]
  416de2:	mov    eax,DWORD PTR [eax]
  416de4:	(bad)  
  416de5:	inc    esp
  416de7:	add    DWORD PTR [ecx+0x63],esi
  416dea:	cmp    DWORD PTR [ecx+edi*8],edi
  416ded:	push   eax
  416dee:	aas    
  416def:	cmp    al,0x5
  416df1:	push   edi
  416df2:	mov    bh,0xd7
  416df4:	outs   dx,DWORD PTR ds:[esi]
  416df5:	or     BYTE PTR ds:0x91fff955,cl
  416dfb:	xchg   ecx,eax
  416dfc:	adc    DWORD PTR [eax+0x74],eax
  416dff:	jl     0x416dc1
  416e01:	je     0x416dc1
  416e03:	jmp    0x416e45
  416e05:	cld    
  416e06:	add    edx,eax
  416e08:	jae    0x416e43
  416e0a:	jne    0x416e48
  416e0c:	cmc    
  416e0d:	sub    DWORD PTR [ecx-0x27],0x1440cc9
  416e14:	jae    0x416e4d
  416e16:	add    BYTE PTR [eax],al
  416e18:	shr    edi,0x73
  416e1b:	mov    eax,0x301a7cf
  416e20:	jl     0x416deb
  416e22:	ror    DWORD PTR [edx-0x15],0xd6
  416e26:	add    eax,0xfffffff0
  416e29:	sbb    edi,ebx
  416e2b:	jne    0x416e95
  416e2d:	jmp    0x504e:0xfcf20305
  416e34:	retf   
  416e35:	or     al,0x30
  416e37:	push   ss
  416e38:	inc    esp
  416e39:	add    DWORD PTR [edi-0x3b7d57bb],eax
  416e3f:	or     al,0xf5
  416e41:	ds add ebx,ebp
  416e44:	pop    ebx
  416e45:	push   edx
  416e46:	in     eax,0x5f
  416e48:	das    
  416e49:	(bad)  
  416e4a:	cli    
  416e4b:	mov    al,0xf5
  416e4d:	leave  
  416e4e:	push   cs
  416e4f:	push   ebx
  416e50:	pushf  
  416e51:	dec    esp
  416e52:	dec    eax
  416e53:	dec    ebx
  416e55:	jle    0x416e4d
  416e57:	je     0x416e1c
  416e59:	xlat   BYTE PTR ds:[ebx]
  416e5a:	xor    eax,0xfca58ee8
  416e5f:	call   FWORD PTR [ebp+0x5b5d4409]
  416e65:	xor    BYTE PTR [ebx],bh
  416e67:	ret    0x5ba5
  416e6a:	ror    BYTE PTR [eax+0x1457d7b9],1
  416e70:	dec    esi
  416e71:	add    al,0x35
  416e73:	fldz   
  416e75:	rol    DWORD PTR [ebx-0x24a66300],0x1
  416e7c:	add    BYTE PTR [eax],al
  416e7e:	out    dx,al
  416e7f:	lsl    ebp,WORD PTR [eax-0x63]
  416e83:	pop    ecx
  416e84:	add    DWORD PTR [eax+0x7a],eax
  416e87:	psubb  mm0,QWORD PTR [edi+0x13697cd0]
  416e8e:	lods   eax,DWORD PTR ds:[esi]
  416e8f:	inc    edi
  416e90:	sar    edi,0x17
  416e93:	repnz test ch,bh
  416e96:	pop    edx
  416e97:	inc    ebp
  416e98:	jge    0x416e35
  416e9a:	popf   
  416e9b:	pop    ecx
  416e9c:	add    DWORD PTR [esi+0xb],edx
  416e9f:	pop    edx
  416ea0:	adc    DWORD PTR [eax],eax
  416ea2:	popf   
  416ea3:	mov    ds:0xb4e7e459,eax
  416ea8:	push   0x2d25d887
  416ead:	shl    DWORD PTR [ecx+0x255b7cae],0x73
  416eb4:	enter  0x910f,0x4a
  416eb8:	(bad)  
  416eb9:	cld    
  416eba:	mov    BYTE PTR [ecx+0x6a],ch
  416ebd:	adc    ebp,DWORD PTR [ebp-0x3e003e98]
  416ec3:	push   edi
  416ec4:	add    al,0x0
  416ec6:	popf   
  416ec7:	mov    cs,ebp
  416ec9:	mov    bl,BYTE PTR [eax+0x69]
  416ecc:	ror    DWORD PTR [eax-0x3308ea0],1
  416ed2:	push   0xa5706a65
  416ed7:	push   esp
  416ed8:	adc    BYTE PTR [eax+0x42702a8],dl
  416ede:	push   ds
  416edf:	inc    ebx
  416ee0:	push   ebx
  416ee1:	sub    BYTE PTR [eax],al
  416ee3:	add    BYTE PTR [esi+edi*4],dl
  416ee6:	(bad)  
  416ee7:	cs fsub st(6),st
  416eea:	add    BYTE PTR ds:0xe8686a5e,al
  416ef0:	mov    dl,0x2
  416ef2:	out    0xa3,eax
  416ef4:	popf   
  416ef5:	jmp    0x416ef6
  416ef7:	(bad)  
  416ef8:	daa    
  416ef9:	mov    ch,0xba
  416efb:	aam    0xe2
  416efd:	arpl   WORD PTR [eax+esi*2],bx
  416f00:	lock arpl sp,si
  416f03:	daa    
  416f04:	scas   eax,DWORD PTR es:[edi]
  416f05:	ret    0x80e6
  416f08:	pop    ebp
  416f09:	out    dx,al
  416f0a:	repz jle 0x416eeb
  416f0d:	jb     0x416ed1
  416f0f:	shl    BYTE PTR [esi-0x12],0x49
  416f13:	pop    esi
  416f14:	xchg   esp,eax
  416f15:	retf   
  416f16:	jne    0x416f28
  416f18:	mov    DWORD PTR [eax],edx
  416f1a:	daa    
  416f1b:	add    al,0x5b
  416f1d:	mov    ebp,0xed480465
  416f22:	push   edx
  416f23:	pop    ebx
  416f24:	adc    eax,0xd06a55b8
  416f29:	arpl   sp,si
  416f2b:	mov    ds:0xc9e6c28f,eax
  416f30:	jb     0x416ef7
  416f32:	cmp    eax,0xbc639af0
  416f37:	test   DWORD PTR [edx],0x106a74cc
  416f3d:	js     0x416eeb
  416f3f:	push   0x68
  416f41:	(bad)  
  416f42:	das    
  416f43:	inc    ebp
  416f44:	xchg   ecx,eax
  416f45:	add    bh,BYTE PTR [esi+edi*2+0x7f090000]
  416f4c:	sti    
  416f4d:	or     cl,BYTE PTR [esp+ecx*8-0x63]
  416f51:	push   0x6e
  416f53:	imul   BYTE PTR [ebx-0x10]
  416f56:	neg    BYTE PTR [ecx+0x0]
  416f59:	jno    0x416f39
  416f5b:	(bad)  
  416f5c:	std    
  416f5d:	gs pop esi
  416f5f:	out    dx,al
  416f60:	dec    ecx
  416f61:	imul   eax,edx,0xc2540268
  416f67:	fadd   DWORD PTR [ebx]
  416f69:	ss pop eax
  416f6b:	add    BYTE PTR [ecx],dh
  416f6d:	into   
  416f6e:	inc    esp
  416f6f:	out    dx,eax
  416f70:	(bad)  
  416f72:	mov    edx,0x3134fcfa
  416f77:	gs jae 0x416f3f
  416f7a:	stc    
  416f7b:	or     esp,edi
  416f7d:	scas   al,BYTE PTR es:[edi]
  416f7e:	add    al,0x87
  416f80:	rcr    BYTE PTR ds:0x99735fad,0x0
  416f87:	dec    eax
  416f88:	mov    DWORD PTR [edi-0x71036327],esp
  416f8e:	add    al,0x87
  416f90:	sar    ch,0x6a
  416f93:	xchg   ebx,eax
  416f94:	call   DWORD PTR [ecx+0x76d9149b]
  416f9a:	dec    edx
  416f9b:	outs   dx,BYTE PTR ds:[esi]
  416f9c:	call   0xfda0807c
  416fa1:	data16 cmp dh,BYTE PTR [edx-0x18]
  416fa5:	repz add BYTE PTR [edi-0x3],bl
  416fa9:	arpl   ax,sp
  416fab:	mov    edi,0xb25d
  416fb0:	ja     0x416ff6
  416fb2:	or     al,0xe9
  416fb4:	pop    ebx
  416fb5:	mov    ebp,esp
  416fb7:	cwde   
  416fb8:	dec    edi
  416fb9:	jmp    0xd4fe:0x61debe03
  416fc0:	call   0xf7c5:0x87e94011
  416fc7:	fs pop ecx
  416fc9:	aad    0x1
  416fcb:	and    BYTE PTR [eax-0x4d],ah
  416fce:	push   esp
  416fcf:	or     DWORD PTR [esi-0xbffc029],0xe3ff3035
  416fd9:	adc    BYTE PTR [edx+edx*1-0x2778f9fc],bh
  416fe0:	cmp    edi,ecx
  416fe2:	jae    0x417028
  416fe4:	ins    BYTE PTR es:[edi],dx
  416fe5:	add    dl,BYTE PTR [eax]
  416fe7:	add    BYTE PTR [edi+edi*1-0x196600fb],dh
  416fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fef:	inc    ebx
  416ff0:	(bad)  
  416ff1:	jmp    0x8afd:0x45c70410
  416ff8:	fsubr  st(0),st
  416ffa:	cli    
  416ffb:	je     0x416f9c
  416ffd:	xor    al,0x8a
  416fff:	inc    ebp
  417000:	inc    eax
  417001:	xor    eax,0x5a43be54
  417006:	std    
  417007:	jmp    FWORD PTR [esi+0x10758506]
  41700d:	jmp    0x8b0b:0x704485ce
  417014:	add    BYTE PTR [eax],al
  417016:	mov    ecx,0x73c636ea
  41701b:	inc    esi
  41701c:	ret    
  41701d:	(bad)  
  41701e:	dec    eax
  41701f:	add    al,BYTE PTR [eax]
  417021:	jmp    0x41705d
  417023:	xor    ah,ch
  417025:	(bad)  
  417026:	or     eax,0xe35efaea
  41702b:	jo     0x417022
  41702d:	(bad)  
  41702e:	cmp    DWORD PTR [ecx+0xf],ecx
  417031:	inc    eax
  417032:	inc    esp
  417033:	faddp  st(2),st
  417035:	pop    edi
  417036:	call   FWORD PTR [ebx]
  417038:	mov    edi,0x4cb9af55
  41703d:	sub    ecx,0xffffffe8
  417040:	call   DWORD PTR [ebp+0x7f]
  417043:	xor    BYTE PTR [ebp+edx*1+0x34],ah
  417047:	add    eax,0xe9398d53
  41704c:	dec    edi
  41704d:	push   0xffffff9d
  41704f:	imul   ebx,ebx,0x21
  417052:	bnd jne 0x41704e
  417055:	cld    
  417056:	shr    ebp,cl
  417058:	inc    eax
  417059:	jae    0x4170b0
  41705b:	inc    edx
  41705c:	mov    esi,0x68ac51fb
  417061:	adc    esi,DWORD PTR [ebp+0x1fffc13a]
  417067:	arpl   dx,bp
  417069:	jb     0x416ff0
  41706b:	aam    0xbe
  41706d:	sti    
  41706e:	pop    ebp
  41706f:	mov    edi,0x228de831
  417074:	gs std 
  417076:	push   ss
  417077:	inc    ebx
  417078:	jg     0x417077
  41707a:	add    BYTE PTR [eax],al
  41707c:	sub    DWORD PTR [eax],ecx
  41707e:	ja     0x4170c3
  417080:	cdq    
  417081:	cli    
  417082:	int3   
  417083:	imul   edi,DWORD PTR [edi-0x75f81050],0x9cf881a0
  41708d:	not    BYTE PTR [ebx]
  41708f:	mov    eax,esp
  417091:	gs add al,0xe9
  417095:	data16 jp 0x4170e3
  417098:	imul   edx,ebx,0x755a88fb
  41709e:	cld    
  41709f:	push   esp
  4170a0:	inc    ebp
  4170a1:	inc    eax
  4170a2:	mov    esp,0x419d52fc
  4170a7:	pop    ebp
  4170a8:	jmp    0x4170bc
  4170aa:	inc    edx
  4170ab:	or     BYTE PTR [ebp-0x3313856a],bl
  4170b1:	in     al,dx
  4170b2:	fdivp  st(3),st
  4170b4:	popf   
  4170b5:	xchg   edi,eax
  4170b6:	jp     0x4170eb
  4170b8:	mov    cl,0x3e
  4170ba:	sar    edi,0xcb
  4170bd:	out    dx,al
  4170be:	mov    esi,0x1436dfb
  4170c3:	std    
  4170c4:	mov    BYTE PTR ds:0x2957366,bh
  4170ca:	es dec esi
  4170cc:	push   ds
  4170cd:	inc    ebx
  4170ce:	xchg   esp,eax
  4170cf:	es mov dl,0xc5
  4170d2:	adc    dh,al
  4170d4:	mov    ah,0x5f
  4170d6:	hlt    
  4170d7:	or     ebx,DWORD PTR [edx-0x1a7d193e]
  4170dd:	fdiv   QWORD PTR [ebx+0x16]
  4170e0:	add    BYTE PTR [eax],al
  4170e2:	and    al,0xc6
  4170e4:	repnz sbb ch,0x4
  4170e8:	jae    0x417108
  4170ea:	mov    ch,0x7e
  4170ec:	das    
  4170ed:	ror    BYTE PTR [bp+di-0x7f21],0xb8
  4170f3:	(bad)  
  4170f4:	bnd js 0x417155
  4170f7:	pop    esi
  4170f8:	aaa    
  4170f9:	iret   
  4170fa:	test   eax,0x2e66f2d5
  4170ff:	or     bh,BYTE PTR [esi-0x17a5e3b3]
  417105:	lock sahf 
  417107:	mov    esp,DWORD PTR [esi-0x71486aa6]
  41710d:	cwde   
  41710e:	aad    0x5f
  417110:	sahf   
  417111:	xor    bl,BYTE PTR [ebp-0x41]
  417114:	xor    al,0x3d
  417116:	pop    edi
  417117:	or     ah,bh
  417119:	rcl    BYTE PTR ds:0x1dd5186e,1
  41711f:	in     eax,0x7a
  417121:	add    ebp,esp
  417123:	mov    eax,0xece671d
  417128:	outs   dx,BYTE PTR ds:[esi]
  417129:	adc    ch,al
  41712b:	hlt    
  41712c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41712d:	add    eax,DWORD PTR [eax-0x2b]
  417130:	bnd jp 0x4171a1
  417133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417134:	cld    
  417135:	ret    
  417136:	xor    cl,BYTE PTR [edi+ebp*1-0x68a12188]
  41713d:	data16 scas al,BYTE PTR es:[edi]
  41713f:	push   cs
  417140:	jle    0x4171a8
  417142:	sbb    BYTE PTR [edx],al
  417144:	add    cl,ch
  417146:	add    BYTE PTR [eax],al
  417148:	jecxz  0x4171a7
  41714a:	jae    0x41712d
  41714c:	cmp    DWORD PTR [eax],0xffffff83
  41714f:	sub    DWORD PTR ds:0xa6f4fcbb,ecx
  417155:	cmovo  ebp,ecx
  417158:	pop    ds
  417159:	pop    edx
  41715a:	jp     0x4170f0
  41715c:	ror    DWORD PTR [ecx+0x3ab70543],1
  417162:	or     eax,0x73c25fa6
  417167:	scas   eax,DWORD PTR es:[edi]
  417168:	jbe    0x417169
  41716a:	inc    edi
  41716b:	out    dx,al
  41716c:	inc    eax
  41716d:	xchg   DWORD PTR [ebx-0x1f],eax
  417170:	inc    edx
  417171:	inc    edx
  417172:	je     0x417197
  417174:	fdiv   QWORD PTR [ecx-0x314aa304]
  41717a:	cld    
  41717b:	hlt    
  41717c:	call   0x13d3:0x39e9400f
  417183:	ins    BYTE PTR es:[edi],dx
  417184:	pop    edx
  417185:	pop    edx
  417186:	push   eax
  417187:	mov    dh,0x82
  417189:	push   esi
  41718a:	push   ebp
  41718b:	scas   al,BYTE PTR es:[edi]
  41718c:	jp     0x417194
  41718e:	std    
  41718f:	mov    edi,0x13ff5b1c
  417194:	mov    cs,WORD PTR [ebx+0x42f3f943]
  41719a:	je     0x417180
  41719c:	in     eax,0xc9
  41719e:	sti    
  41719f:	jo     0x417202
  4171a1:	mov    eax,DWORD PTR [ebx-0x7f]
  4171a4:	hlt    
  4171a5:	or     ch,bh
  4171a7:	cld    
  4171a8:	(bad)  
  4171a9:	push   0x11
  4171ab:	and    DWORD PTR [eax],eax
  4171ad:	add    al,al
  4171af:	pop    edi
  4171b0:	xor    DWORD PTR [ecx],ebp
  4171b2:	pop    eax
  4171b3:	rcr    BYTE PTR [eax+0x30],0xdf
  4171b7:	repnz (bad) 
  4171b9:	mov    ebx,0x3d816eb5
  4171be:	and    eax,0xaf0055b3
  4171c3:	sub    eax,0x2441564
  4171c8:	push   ebx
  4171c9:	push   0x0
  4171cb:	dec    ebx
  4171cc:	mov    al,BYTE PTR [ebp-0x48]
  4171cf:	mov    al,BYTE PTR ss:[ebp-0x60]
  4171d3:	ss addr16 adc eax,0x89056d9b
  4171da:	sub    esi,esp
  4171dc:	cli    
  4171dd:	(bad)  
  4171de:	jg     0x417205
  4171e0:	jl     0x4171f7
  4171e2:	xor    al,0x2
  4171e4:	out    0x1a,eax
  4171e6:	dec    edi
  4171e7:	popf   
  4171e8:	icebp  
  4171e9:	test   DWORD PTR [edx+edx*2-0x19d672e2],eax
  4171f0:	dec    esp
  4171f1:	lea    ecx,[ecx-0x4e95b32e]
  4171f7:	xor    DWORD PTR [esi+0x58d8bc45],eax
  4171fd:	cld    
  4171fe:	fcmovne st,st(7)
  417200:	cli    
  417201:	jne    0x4171af
  417203:	fadd   DWORD PTR [eax-0x8]
  417206:	pop    ebx
  417207:	into   
  417208:	jle    0x417287
  41720a:	dec    esp
  41720b:	add    DWORD PTR [ecx-0x28],esi
  41720e:	fwait
  41720f:	inc    esp
  417210:	pop    eax
  417211:	leave  
  417212:	add    BYTE PTR [eax],al
  417214:	ss pop ebp
  417216:	std    
  417217:	push   esp
  417218:	out    dx,eax
  417219:	mov    ch,0x4c
  41721b:	push   ecx
  41721c:	adc    ebx,DWORD PTR [ecx+ecx*1+0x60017400]
  417223:	je     0x417295
  417225:	adc    al,al
  417227:	jmp    0x4171d1
  417229:	and    DWORD PTR [ecx-0x8],0x44
  41722d:	xor    dl,BYTE PTR [ebx-0x75]
  417230:	adc    DWORD PTR [ebp+0x11],edi
  417233:	inc    eax
  417234:	xor    al,0x3b
  417236:	std    
  417237:	mov    WORD PTR [ecx],es
  417239:	jmp    0xaedeff8d
  41723e:	fs push eax
  417240:	sub    dh,BYTE PTR [esi]
  417242:	cmc    
  417243:	cld    
  417244:	test   al,0x53
  417246:	fs (bad) 
  417248:	and    BYTE PTR [ebx],ch
  41724a:	out    dx,al
  41724b:	inc    ebp
  41724c:	adc    bh,BYTE PTR [esi]
  41724e:	or     DWORD PTR [edi],ecx
  417250:	pop    ebp
  417251:	imul   eax,DWORD PTR [eax+0x287e87f8],0xffffff89
  417258:	pusha  
  417259:	and    eax,ecx
  41725b:	jae    0x417205
  41725d:	add    ebp,DWORD PTR [edi]
  41725f:	inc    ebp
  417260:	jmp    0xed20:0x18d8780b
  417267:	sub    DWORD PTR [edi+0x6b],eax
  41726a:	jbe    0x4172af
  41726c:	aad    0x7a
  41726e:	sar    ah,1
  417270:	push   eax
  417271:	aas    
  417272:	fs jae 0x41720a
  417275:	cmp    al,BYTE PTR fs:[ecx+0x69b50000]
  41727c:	fmul   DWORD PTR [edi]
  41727e:	es cs hlt 
  417281:	sbb    ch,0xb6
  417284:	push   es
  417285:	mov    DWORD PTR [eax+0x43],edx
  417288:	mov    ecx,DWORD PTR [eax]
  41728a:	es test eax,0x41ee086d
  417290:	pop    ss
  417291:	inc    ebp
  417292:	mov    ch,BYTE PTR [ebp-0x3f1c3feb]
  417298:	dec    edx
  417299:	ret    0x69a9
  41729c:	mov    eax,0x6fe98188
  4172a1:	adc    dh,cl
  4172a3:	adc    edi,DWORD PTR [ecx+0x53d16230]
  4172a9:	aaa    
  4172aa:	fcom   DWORD PTR [ecx-0x2b]
  4172ad:	dec    ecx
  4172ae:	jmp    0x6269:0x9d004c01
  4172b5:	jae    0x41724c
  4172b7:	add    dh,BYTE PTR [ecx+eax*8+0x36]
  4172bb:	imul   eax,eax,0xffffff85
  4172be:	xor    bl,BYTE PTR [eax+eiz*2-0x37]
  4172c2:	sbb    BYTE PTR cs:[esi],ah
  4172c5:	adc    ebx,DWORD PTR [ecx]
  4172c7:	xchg   ebx,eax
  4172c8:	call   0xa4c90fd0
  4172cd:	pop    edi
  4172ce:	sbb    al,0x5b
  4172d0:	ficom  WORD PTR [edx]
  4172d2:	pop    ds
  4172d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d4:	call   0xfe2a0fdc
  4172d9:	push   ss
  4172da:	iret   
  4172db:	mov    ecx,0x5515
  4172e0:	mov    ah,0x33
  4172e2:	out    0x88,al
  4172e4:	push   cs
  4172e5:	add    ah,bh
  4172e7:	add    ecx,DWORD PTR [eax-0x18]
  4172ea:	mov    ah,BYTE PTR [edx+0x4e]
  4172ed:	or     ch,BYTE PTR [ecx+eax*8-0x36]
  4172f1:	mov    DWORD PTR [edi+ebx*2+0x56920b5],ebp
  4172f8:	popf   
  4172f9:	or     DWORD PTR [bx+di+0x5e5e],edx
  4172fe:	aaa    
  4172ff:	ins    BYTE PTR es:[edi],dx
  417300:	push   ss
  417301:	push   edi
  417302:	(bad)  
  417303:	bound  esp,QWORD PTR [edx]
  417305:	(bad)  
  417306:	rcr    BYTE PTR [esi],cl
  417308:	fmul   DWORD PTR [ebx]
  41730a:	imul   esi,ecx,0xffffff9b
  41730d:	pop    ebx
  41730e:	out    0x90,eax
  417310:	ficomp WORD PTR [edx+0x17]
  417313:	in     al,dx
  417314:	xor    al,BYTE PTR [edx]
  417316:	out    0x3,eax
  417318:	jne    0x417324
  41731a:	xchg   edi,eax
  41731b:	bound  edi,QWORD PTR [eax-0x79]
  41731e:	lahf   
  41731f:	mov    BYTE PTR [eax+0xb],dh
  417322:	imul   ecx,ebx,0x6b
  417325:	pop    ebx
  417326:	out    0x86,eax
  417328:	out    0x5a,al
  41732a:	mov    bh,0x12
  41732c:	pop    ds
  41732d:	sbb    al,0xe8
  41732f:	add    ebx,DWORD PTR [ebp-0x16d3ff79]
  417335:	mov    ch,0xe7
  417337:	cmc    
  417338:	pop    es
  417339:	pop    esi
  41733a:	std    
  41733b:	ins    BYTE PTR es:[edi],dx
  41733c:	fimul  WORD PTR ds:0x2980c8e
  417342:	add    BYTE PTR [edx+0x0],ch
  417345:	add    BYTE PTR ds:0x85d50003,bh
  41734b:	mov    ah,0xe7
  41734d:	and    DWORD PTR [edx+eax*1-0x30a19b00],esp
  417354:	adc    al,0xfa
  417356:	fs pop ebp
  417358:	jae    0x41738f
  41735a:	jbe    0x41732e
  41735c:	inc    ebp
  41735d:	es jg  0x417315
  417360:	out    0x93,eax
  417362:	in     al,0x5d
  417364:	std    
  417365:	bound  edx,QWORD PTR [ebx+eiz*2+0x15]
  417369:	call   0x7d3e760c
  41736e:	jb     0x4172f9
  417370:	inc    ebx
  417371:	std    
  417372:	inc    edi
  417373:	shl    bl,cl
  417375:	idiv   BYTE PTR [ebx*2+0x6304f173]
  41737c:	rcr    dl,1
  41737e:	cmp    al,0x5d
  417380:	mov    DWORD PTR [edi*1+0x23e5bfe9],esp
  417387:	inc    edx
  417388:	je     0x417367
  41738a:	ss pop es
  41738c:	inc    esi
  41738d:	(bad)  
  41738e:	cld    
  41738f:	add    DWORD PTR [ebx-0xf],0xec73431b
  417396:	js     0x4173f0
  417398:	pop    esi
  417399:	ret    0x8e3d
  41739c:	pop    esi
  41739d:	icebp  
  41739e:	xor    DWORD PTR [edi+0x13],edx
  4173a1:	lea    ebp,[ebx+0x1a]
  4173a4:	add    BYTE PTR [edx-0x29],ah
  4173a7:	push   0x24
  4173a9:	jmp    0x89:0x29e0000
  4173b0:	mov    DWORD PTR [edx-0x7893b97c],edi
  4173b6:	inc    ecx
  4173b7:	cld    
  4173b8:	mov    ebp,0x798b294c
  4173bd:	push   es
  4173be:	test   DWORD PTR [esi-0x6c],eax
  4173c1:	out    0x89,al
  4173c3:	out    dx,al
  4173c4:	inc    esp
  4173c5:	push   es
  4173c6:	das    
  4173c7:	ror    bl,cl
  4173c9:	xor    ecx,edi
  4173cb:	mov    edi,ecx
  4173cd:	mov    ebp,0x25e2894e
  4173d2:	test   DWORD PTR [esi-0x68],eax
  4173d5:	lea    edx,[esi+0x34]
  4173d8:	rcl    DWORD PTR [ecx-0x13],cl
  4173db:	adc    dh,BYTE PTR [esi+eax*1]
  4173de:	das    
  4173df:	(bad)  
  4173e0:	std    
  4173e1:	arpl   WORD PTR [ecx],di
  4173e3:	jne    0x4173cb
  4173e5:	call   0xb810:0xe32b5754
  4173ec:	out    0x45,al
  4173ee:	std    
  4173ef:	mov    BYTE PTR [edx],cl
  4173f1:	cli    
  4173f2:	ss (bad) 
  4173f4:	dec    ecx
  4173f5:	push   esp
  4173f6:	push   esp
  4173f7:	call   0x3db5a6
  4173fc:	sub    ebp,esi
  4173fe:	iret   
  4173ff:	inc    ebp
  417400:	ret    
  417401:	loop   0x41746c
  417403:	(bad)  
  417404:	pop    esp
  417405:	out    0x7a,eax
  417407:	dec    DWORD PTR [edx+0x22]
  41740a:	sti    
  41740b:	adc    eax,0x3d4fe8
  417410:	add    BYTE PTR [eax],al
  417412:	adc    DWORD PTR [ebp+esi*1-0x75],eax
  417416:	xchg   esi,esi
  417418:	ret    0x9674
  41741b:	mov    DWORD PTR [ecx+0x8],ecx
  41741e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741f:	mov    ?,esp
  417421:	adc    eax,0x3d5464
  417426:	stc    
  417427:	lds    esi,FWORD PTR [ebx+0x13]
  41742a:	popf   
  41742b:	jmp    0x1:0x6a9e07dd
  417432:	rcl    DWORD PTR [ebp+0x60],1
  417435:	xor    DWORD PTR [edx+0x2e],edx
  417438:	mov    eax,ds:0x8a6bdd12
  41743d:	cmp    DWORD PTR [esp+edx*4+0x612622d6],eax
  417444:	add    eax,0xbc33cb51
  417449:	pop    ebx
  41744a:	fsubr  QWORD PTR [ebx-0x17]
  41744d:	jmp    DWORD PTR [edx]
  41744f:	arpl   WORD PTR [ecx],ax
  417451:	call   0x42743a
  417456:	sbb    DWORD PTR [ebx],ebp
  417458:	(bad)  
  417459:	or     BYTE PTR [edi+0x6b],dh
  41745c:	imul   esi,DWORD PTR [eax+ebx*2+0x28],0xf49d6a60
  417464:	jnp    0x417497
  417466:	(bad)
  41746b:	lock pop edi
  41746d:	push   ebp
  41746e:	cmc    
  41746f:	mov    esi,es
  417471:	cld    
  417472:	ficomp DWORD PTR [ebx+0x4041]
  417478:	(bad)  
  417479:	cmp    DWORD PTR [eax+0x73],esp
  41747c:	rol    DWORD PTR [edx],1
  41747e:	mov    dh,0x42
  417480:	ret    0xb567
  417483:	out    0x6a,eax
  417485:	es pop ebp
  417487:	std    
  417488:	push   ds
  417489:	xchg   ebx,eax
  41748a:	pop    ebp
  41748b:	pop    ebp
  41748c:	dec    ebx
  41748d:	adc    al,0x4b
  41748f:	ret    0x6b99
  417492:	mov    eax,0xb2fb8988
  417497:	push   eax
  417498:	jmp    0xdee2:0xf207dde6
  41749f:	test   DWORD PTR [edx-0x22ed92d1],0x5412e702
  4174a9:	sbb    bh,BYTE PTR ds:0x61cef12c
  4174af:	(bad)  
  4174b0:	mov    dh,0x1b
  4174b2:	stos   BYTE PTR es:[edi],al
  4174b3:	fadd   st,st(7)
  4174b5:	mov    DWORD PTR [eax+eiz*2],esp
  4174b8:	retf   
  4174b9:	adc    BYTE PTR [esi-0x3a],bh
  4174bc:	mov    cs,WORD PTR [ebx+0x348c182d]
  4174c2:	jbe    0x41749a
  4174c4:	xchg   BYTE PTR [ecx+0x34c417bd],cl
  4174ca:	jmp    0x4174ce
  4174cc:	rcl    DWORD PTR [edx],cl
  4174ce:	bound  ebx,QWORD PTR [edx+0x6a]
  4174d1:	mov    bh,0xde
  4174d3:	xlat   BYTE PTR ds:[ebx]
  4174d4:	ret    0xdc57
  4174d7:	shrd   edx,eax,0xe6
  4174db:	sub    al,BYTE PTR [eax]
  4174dd:	add    BYTE PTR [eax+0xa],ah
  4174e0:	hlt    
  4174e1:	arpl   WORD PTR [edi+edi*8],bp
  4174e4:	out    0xd2,al
  4174e6:	stos   BYTE PTR es:[edi],al
  4174e7:	push   edi
  4174e8:	lods   al,BYTE PTR ds:[esi]
  4174e9:	pop    edi
  4174ea:	and    al,0xbe
  4174ec:	sbb    bl,BYTE PTR [ebx]
  4174ee:	arpl   WORD PTR [esi],sp
  4174f0:	cdq    
  4174f1:	dec    ecx
  4174f2:	loopne 0x4174c1
  4174f4:	push   cs
  4174f5:	imul   ecx,DWORD PTR [ebx+0x708ce689],0xfffffffe
  4174fc:	outs   dx,DWORD PTR ds:[esi]
  4174fd:	mov    edi,0x17ad8ba2
  417502:	xor    al,0x42
  417504:	(bad)  
  417505:	add    ah,BYTE PTR [ebx+0x2a]
  417508:	push   ecx
  417509:	mul    DWORD PTR [edx+0x57]
  41750c:	push   esp
  41750d:	or     al,0xa8
  41750f:	in     eax,dx
  417510:	push   ss
  417511:	mul    BYTE PTR [edx+0x2]
  417514:	push   0x47
  417516:	test   eax,0x905c3c57
  41751b:	in     eax,dx
  41751c:	mov    dh,0xf1
  41751e:	retf   0x2
  417521:	jns    0x4174bc
  417523:	imul   eax,DWORD PTR [edi],0xeff3da16
  417529:	sti    
  41752a:	pop    esi
  41752b:	push   edi
  41752c:	das    
  41752d:	test   eax,0xabc6ba2b
  417532:	call   0xec81:0xca625302
  417539:	(bad)  [edi]
  41753b:	scas   al,BYTE PTR es:[edi]
  41753c:	lds    esp,FWORD PTR [edx+ebp*8]
  41753f:	add    bh,ch
  417541:	fadd   QWORD PTR [eax]
  417543:	add    BYTE PTR [edx+0x27e93ff1],dl
  417549:	pop    edx
  41754a:	mov    ebp,DWORD PTR [edi-0x5b794d5a]
  417550:	into   
  417551:	push   ebp
  417552:	adc    eax,DWORD PTR [ebp+0x2c]
  417555:	pop    ss
  417556:	add    BYTE PTR [edx],bl
  417558:	(bad)  
  417559:	jg     0x4175b6
  41755b:	inc    ecx
  41755c:	mov    cl,0xb8
  41755e:	sub    esi,DWORD PTR [edi-0x1ebc7615]
  417564:	pop    ds
  417565:	inc    edx
  417566:	add    al,0x60
  417568:	in     eax,0x52
  41756a:	xchg   esp,eax
  41756c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756d:	mov    DWORD PTR [esi-0x2f],eax
  417570:	hlt    
  417571:	icebp  
  417572:	mov    ch,BYTE PTR [ebp+0xe5002e6]
  417578:	cmc    
  417579:	push   edx
  41757a:	std    
  41757b:	fdiv   QWORD PTR [edx+0x1fe93ff0]
  417581:	ds or  al,0x6c
  417584:	pop    esi
  417585:	rol    DWORD PTR [edx+eiz*2-0x20],cl
  417589:	add    DWORD PTR es:[ecx+eiz*4],ebp
  41758d:	cmp    BYTE PTR [ebx-0x13],0x9e
  417591:	ror    DWORD PTR [ebx],cl
  417593:	sbb    dl,BYTE PTR [esi+0x7f]
  417596:	or     BYTE PTR [eax+0x69],ah
  417599:	add    al,BYTE PTR [edi-0x18f93400]
  41759f:	sub    ecx,DWORD PTR [edi]
  4175a1:	pop    es
  4175a2:	or     ecx,0xd786f2c0
  4175a8:	add    BYTE PTR [eax],al
  4175aa:	lahf   
  4175ab:	adc    DWORD PTR [ebp-0x6],edi
  4175ae:	in     al,dx
  4175af:	push   ebx
  4175b0:	std    
  4175b1:	inc    DWORD PTR [esi+0x7040fc55]
  4175b7:	ins    BYTE PTR es:[edi],dx
  4175b8:	add    bl,BYTE PTR [ecx-0x43]
  4175bb:	div    BYTE PTR [eax+ecx*2]
  4175be:	inc    eax
  4175bf:	xor    al,0x5
  4175c1:	mov    DWORD PTR [esi+eax*1-0x14cfb77b],ebx
  4175c8:	add    eax,DWORD PTR [ebx-0x39fff95c]
  4175ce:	add    DWORD PTR [edi-0x45fe0104],esi
  4175d4:	xchg   BYTE PTR [ebp-0x34],al
  4175d7:	add    DWORD PTR [ecx+0x8],0xfffffff8
  4175db:	cmp    BYTE PTR [edi+0x293c9f17],0x72
  4175e2:	jns    0x41759b
  4175e4:	jo     0x4175d6
  4175e6:	retf   
  4175e7:	dec    ebp
  4175e8:	in     eax,dx
  4175e9:	adc    al,BYTE PTR [edx+eax*1-0x76]
  4175ed:	inc    ebp
  4175ee:	mov    ebx,0xb6c95897
  4175f3:	push   es
  4175f4:	add    BYTE PTR [ebp+0x7f],dl
  4175f7:	sar    BYTE PTR [esi-0x1c],cl
  4175fa:	lods   al,BYTE PTR ds:[esi]
  4175fb:	sub    esp,0x10
  4175fe:	dec    edi
  4175ff:	add    eax,DWORD PTR [edi+0x13880]
  417605:	add    BYTE PTR [edx],ah
  417607:	mov    DWORD PTR [esp-0x28],eax
  41760b:	mov    bh,BYTE PTR [edi]
  41760d:	cmp    al,0x0
  41760f:	add    BYTE PTR [ebx-0x77],dh
  417612:	inc    esp
  417613:	and    al,0xb0
  417615:	or     dh,0xff
  417618:	popf   
  417619:	adc    eax,0x1f29ffea
  41761e:	sub    BYTE PTR [eax],bl
  417620:	in     eax,dx
  417621:	mov    cl,0x1
  417623:	std    
  417624:	mov    al,0xcf
  417626:	out    dx,al
  417627:	aas    
  417628:	popf   
  417629:	dec    esi
  41762a:	(bad)  
  41762b:	(bad)  
  41762c:	jp     0x417699
  41762e:	aad    0x6
  417630:	push   ds
  417631:	mov    ds:0xce200d02,eax
  417636:	add    BYTE PTR [eax],al
  417638:	popf   
  417639:	call   0x6be69a22
  41763e:	adc    al,al
  417640:	and    bh,bh
  417642:	daa    
  417643:	or     al,0xf6
  417645:	in     eax,0xbf
  417647:	pop    es
  417648:	in     eax,dx
  417649:	int3   
  41764a:	cmc    
  41764b:	jmp    0x4175dc
  41764d:	sub    eax,DWORD PTR [ecx+ecx*4]
  417650:	fimul  WORD PTR [ebx]
  417652:	test   eax,eax
  417654:	mov    cl,0x9
  417656:	xchg   DWORD PTR [ecx+0x79],ecx
  417659:	out    0x49,al
  41765b:	je     0x417613
  41765d:	call   0xfd5c:0xa800e7b1
  417664:	push   ss
  417665:	ret    
  417666:	xchg   DWORD PTR [ecx-0x47],eax
  417669:	loop   0x41762f
  41766b:	and    ebp,DWORD PTR [ecx-0x5c8ca422]
  417671:	fld    QWORD PTR [eax-0x70ffffb3]
  417677:	imul   ebp,DWORD PTR [eax+0x5],0x16
  41767b:	outs   dx,DWORD PTR ds:[esi]
  41767c:	and    eax,0x5bf51e08
  417681:	mov    ebx,DWORD PTR [esi+0x53]
  417684:	mov    cl,0xfc
  417686:	mov    al,0x5b
  417688:	lock aas 
  41768a:	popf   
  41768b:	out    0x5b,al
  41768d:	je     0x4176b8
  41768f:	js     0x4176fa
  417691:	stos   BYTE PTR es:[edi],al
  417692:	sahf   
  417693:	add    ah,bh
  417695:	add    esp,DWORD PTR [ecx]
  417697:	inc    edx
  417698:	push   esp
  417699:	add    esp,ebx
  41769b:	and    DWORD PTR [esi],0x4699af6
  4176a1:	pop    ebx
  4176a2:	or     DWORD PTR [edi],ebx
  4176a4:	repz mov dl,0xf4
  4176a7:	(bad)  
  4176a8:	push   eax
  4176a9:	add    al,0xf7
  4176ab:	adc    BYTE PTR [esi+0x2cce8517],dh
  4176b1:	add    al,0x9d
  4176b3:	add    ebx,DWORD PTR [ebp+0x54]
  4176b6:	jo     0x4176ed
  4176b8:	add    dl,BYTE PTR [edx-0x1e]
  4176bb:	pop    esp
  4176bc:	out    0x7a,eax
  4176be:	add    DWORD PTR [edx],0xc41d4268
  4176c4:	fadd   DWORD PTR [ebx]
  4176c6:	lock push 0xffffffe1
  4176c9:	mov    BYTE PTR [ecx+0x54],0x80
  4176cd:	iret   
  4176ce:	cmp    DWORD PTR [esi+ebp*2-0x45],edx
  4176d2:	rol    BYTE PTR [edi-0x4fa246b4],1
  4176d8:	jno    0x417692
  4176da:	add    BYTE PTR [eax],al
  4176dc:	jle    0x4176e8
  4176de:	aas    
  4176df:	(bad)  
  4176e0:	sbb    DWORD PTR [esi+ecx*2+0x17],edx
  4176e4:	fnsave [edi-0x5062ffd8]
  4176ea:	xchg   esp,eax
  4176eb:	mov    cs,WORD PTR ds:0xa2ba63ac
  4176f1:	scas   eax,DWORD PTR es:[edi]
  4176f2:	sub    eax,0xa6f106f1
  4176f7:	add    edx,DWORD PTR [esi]
  4176f9:	aad    0xce
  4176fb:	pop    edx
  4176fc:	test   al,0x6a
  4176fe:	or     eax,0xe53d9c6
  417703:	rol    BYTE PTR [edx-0x3639da96],cl
  417709:	push   ebx
  41770a:	xchg   ecx,eax
  41770b:	repz push 0x3c
  41770e:	add    dh,ch
  417710:	sahf   
  417711:	mov    ebp,0x81517447
  417716:	(bad)  
  417717:	or     DWORD PTR [esi+0xc],eax
  41771a:	call   0xfd984fd2
  41771f:	inc    ebx
  417720:	test   eax,0x9ee7c5ba
  417725:	mov    esp,0xb1e83c47
  41772a:	cld    
  41772b:	aam    0xee
  41772d:	lock aas 
  41772f:	jmp    0xaa9a2c6b
  417734:	sub    eax,0x268ec8a
  417739:	sbb    edi,edi
  41773b:	call   0x3e9728de
  417740:	add    BYTE PTR [eax],al
  417742:	sub    dl,bh
  417744:	pop    es
  417745:	bound  ebx,QWORD PTR [edi-0x5e8a7f77]
  41774b:	add    al,BYTE PTR [eax]
  41774d:	jo     0x4177ac
  41774f:	dec    edi
  417750:	(bad)  
  417751:	sub    al,0xda
  417753:	add    bh,BYTE PTR [ecx-0x2acb247]
  417759:	je     0x4177b8
  41775b:	aaa    
  41775c:	push   eax
  41775d:	jb     0x41772e
  41775f:	push   0x42
  417761:	push   esp
  417762:	ja     0x4177b9
  417764:	test   BYTE PTR [ecx],ch
  417766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417767:	jle    0x417737
  417769:	jmp    0xa4cb7a0c
  41776e:	jle    0x4177da
  417770:	or     dl,BYTE PTR ds:0x39895557
  417776:	sbb    edx,DWORD PTR [edx+eax*1-0x64]
  41777a:	jmp    0xfe81:0x9f120fe8
  417781:	(bad)  
  417782:	in     eax,dx
  417783:	jmp    FWORD PTR [ecx-0x13]
  417786:	push   ss
  417787:	push   0x2
  417789:	add    BYTE PTR [edi],al
  41778b:	mov    edi,0x9ef98d4f
  417790:	push   0x0
  417792:	adc    al,0xb8
  417794:	adc    BYTE PTR [edx+ecx*8],dh
  417797:	ds std 
  417799:	cmp    al,0x9
  41779c:	mov    WORD PTR [ecx-0x62],cx
  4177a0:	dec    esi
  4177a1:	dec    esi
  4177a2:	clc    
  4177a3:	dec    esp
  4177a4:	sub    dh,0x0
  4177a7:	add    BYTE PTR [ecx+0x749780fb],cl
  4177ad:	push   es
  4177ae:	add    BYTE PTR [edx+0x64],ch
  4177b1:	mov    DWORD PTR [ecx-0x1f],eax
  4177b4:	xchg   esp,eax
  4177b5:	mov    DWORD PTR [ecx-0x58],eax
  4177b8:	xchg   esp,eax
  4177b9:	stos   DWORD PTR es:[edi],eax
  4177ba:	adc    BYTE PTR [eax],dh
  4177bc:	push   0x46
  4177be:	std    
  4177bf:	cmp    BYTE PTR [eax],0xfb
  4177c2:	out    0x6,al
  4177c4:	mov    edi,0x7989de91
  4177c9:	mov    ds:0xb5798b66,al
  4177ce:	imul   eax,DWORD PTR [ecx],0x66dd41c3
  4177d4:	add    eax,0x298d07c7
  4177d9:	mov    esi,0xa7f98965
  4177de:	call   0xfaed5534
  4177e3:	(bad)  
  4177e4:	stc    
  4177e5:	ror    DWORD PTR [eax+0xd5f2445],0x27
  4177ec:	hlt    
  4177ed:	add    eax,0x686cce87
  4177f2:	fcos   
  4177f4:	mov    bl,0x82
  4177f6:	shl    BYTE PTR [edi+ecx*8-0x7a],0x79
  4177fb:	or     al,0xf4
  4177fd:	inc    ecx
  4177fe:	push   ebx
  4177ff:	dec    DWORD PTR [ecx]
  417801:	ret    0x5586
  417804:	popf   
  417805:	addr16 mov ah,0x69
  417808:	cwde   
  417809:	xchg   ebx,eax
  41780a:	mov    esi,cs
  41780c:	add    BYTE PTR [eax],al
  41780e:	mov    ch,0xd8
  417810:	ss std 
  417812:	ret    0x43e7
  417815:	jae    0x417873
  417817:	test   DWORD PTR [edx],eax
  417819:	mov    ebx,DWORD PTR [eax-0x1]
  41781c:	mov    bl,0x88
  41781e:	mov    dl,0x33
  417820:	pop    ds
  417821:	sti    
  417822:	mov    ds:0x65738630,al
  417827:	mov    al,ds:0xb939c7be
  41782c:	ret    
  41782d:	inc    DWORD PTR [edx-0x7d02c45c]
  417833:	xchg   ecx,eax
  417834:	mov    esi,0x5b161df8
  417839:	add    esp,DWORD PTR [edx+0x6afcf7dd]
  41783f:	test   al,0x13
  417841:	rol    dl,0x11
  417844:	mov    ebx,0x1675fc6
  417849:	push   0xffffff9c
  41784b:	scas   al,BYTE PTR es:[edi]
  41784c:	mov    ebp,0x4fd4eddb
  417851:	call   0xfd99479f
  417856:	inc    esi
  417857:	je     0x417844
  417859:	or     al,0x20
  41785b:	pop    esi
  41785c:	xchg   ebp,eax
  41785d:	pop    eax
  41785e:	xor    eax,0x9d0078cd
  417863:	mov    al,0xcd
  417865:	movaps xmm5,XMMWORD PTR [esi+0x45]
  417869:	(bad)  
  41786a:	adc    al,al
  41786c:	push   edi
  41786d:	jae    0x417808
  41786f:	mov    bl,0x15
  417871:	pop    esp
  417872:	add    BYTE PTR [eax],al
  417874:	add    dl,BYTE PTR [eax]
  417876:	mov    WORD PTR [ebx-0x73],?
  417879:	in     al,0x3f
  41787b:	xchg   DWORD PTR [eax],ebx
  41787d:	mov    ds:0x1eafd58,eax
  417882:	je     0x417842
  417884:	push   ds
  417885:	mov    dl,0xe
  417887:	jg     0x41787d
  417889:	push   eax
  41788a:	push   ss
  41788b:	jg     0x41786a
  41788d:	aad    0xcc
  41788f:	or     BYTE PTR [eax],dl
  417891:	(bad)  
  417892:	push   0xffffffcb
  417894:	pop    edx
  417895:	(bad)  
  417896:	jecxz  0x41781c
  417898:	(bad)
  41789b:	add    DWORD PTR [edx+eax*2-0x7b],ebp
  41789f:	mov    bl,BYTE PTR [esi-0x78]
  4178a2:	je     0x417825
  4178a4:	dec    ecx
  4178a5:	push   ecx
  4178a6:	ficom  WORD PTR [edi-0x13]
  4178a9:	jge    0x4178d7
  4178ab:	sub    ch,0x5a
  4178ae:	jne    0x417912
  4178b0:	mov    BYTE PTR [eax+0x6b],dl
  4178b3:	inc    esp
  4178b4:	or     eax,edi
  4178b6:	imul   eax,DWORD PTR [ecx+0x57b64fd1],0xffffffcd
  4178bd:	jge    0x4178e3
  4178bf:	cwde   
  4178c0:	int    0x7d
  4178c2:	ins    BYTE PTR es:[edi],dx
  4178c3:	dec    eax
  4178c4:	arpl   WORD PTR [eax-0x62],dx
  4178c7:	mov    ah,0x42
  4178c9:	jno    0x4178fe
  4178cb:	push   edi
  4178cc:	push   eax
  4178cd:	jle    0x417933
  4178cf:	dec    eax
  4178d0:	dec    ebx
  4178d1:	push   eax
  4178d2:	xchg   BYTE PTR [ecx+eax*2+0x8972d6],dh
  4178d9:	add    dh,bl
  4178db:	cmp    bl,BYTE PTR [edx]
  4178dd:	scas   al,BYTE PTR es:[edi]
  4178de:	loop   0x41793a
  4178e0:	and    BYTE PTR [edx+0x28],0x50
  4178e4:	je     0x417877
  4178e6:	push   ecx
  4178e7:	push   ecx
  4178e8:	pop    esi
  4178e9:	push   edi
  4178ea:	daa    
  4178eb:	sub    edi,DWORD PTR [edi]
  4178ed:	mov    al,0x76
  4178ef:	dec    edi
  4178f0:	dec    esi
  4178f1:	mov    ecx,DWORD PTR [esi+0x1603d0fa]
  4178f7:	(bad)  
  4178f8:	sbb    dh,BYTE PTR [edx+eax*1+0x4a34ffb3]
  4178ff:	dec    ebp
  417900:	mov    esi,DWORD PTR [esi+edx*2+0x3d314345]
  417907:	fnstcw WORD PTR [edi]
  417909:	jmp    0x171b7c54
  41790e:	push   0x7c
  417910:	rol    DWORD PTR [eax],0xaf
  417913:	dec    ebp
  417914:	std    
  417915:	push   es
  417916:	or     al,0x7b
  417918:	in     al,dx
  417919:	push   0xe903a645
  41791e:	sahf   
  41791f:	mov    cl,0x54
  417921:	out    dx,al
  417922:	lods   eax,DWORD PTR ds:[esi]
  417923:	sti    
  417924:	adc    BYTE PTR [ecx],ch
  417926:	cdq    
  417927:	jns    0x417974
  417929:	icebp  
  41792a:	sub    ebx,eax
  41792c:	jmp    0x417990
  41792e:	nop
  41792f:	dec    esi
  417930:	mov    al,0x5d
  417932:	mov    eax,ds:0x4d740002
  417937:	pop    ebx
  417938:	push   0xfd4f4df9
  41793d:	inc    ebx
  41793e:	add    BYTE PTR [eax],al
  417940:	popf   
  417941:	stos   BYTE PTR es:[edi],al
  417942:	out    0x4a,eax
  417944:	mov    bl,0x4d
  417946:	std    
  417947:	ins    DWORD PTR es:[edi],dx
  417948:	(bad)  
  41794a:	add    al,0xdb
  41794c:	fisub  WORD PTR [edi-0x7]
  41794f:	jmp    0xe7ca7bf2
  417954:	repz rol DWORD PTR [edi],cl
  417957:	jb     0x417977
  417959:	cmp    bh,0xe8
  41795c:	sahf   
  41795d:	or     DWORD PTR [ebx+0x71],0x795b7bcb
  417964:	mov    dh,0x3d
  417966:	xchg   edx,eax
  417967:	call   0xd602000a
  41796c:	ror    BYTE PTR [ebp+0x73],1
  41796f:	pop    ecx
  417970:	daa    
  417971:	ret    
  417972:	repz inc ecx
  417974:	(bad)  
  417975:	mov    edi,0xf45b00fc
  41797a:	(bad)  
  41797b:	mov    DWORD PTR [ecx-0x25],eax
  41797e:	ss ret 
  417980:	sti    
  417981:	test   BYTE PTR [eax+eax*1-0x4276fd0c],ah
  417988:	fsubr  DWORD PTR [eax+0x6cacfffa]
  41798e:	push   eax
  41798f:	jmp    FWORD PTR [ebx+0x1ef0497c]
  417995:	push   es
  417996:	mov    DWORD PTR [ebp-0x54acf],eax
  41799c:	adc    al,0x7c
  41799e:	inc    ecx
  41799f:	hlt    
  4179a0:	fild   WORD PTR [ecx-0x1b]
  4179a3:	call   0x350779a8
  4179a8:	(bad)  
  4179a9:	jmp    FWORD PTR [edi]
  4179ab:	scas   al,BYTE PTR es:[edi]
  4179ac:	ss sti 
  4179ae:	lock sub cl,BYTE PTR [eax+0x1946ff07]
  4179b5:	mov    DWORD PTR [ecx+0x684536b6],edi
  4179bb:	xor    eax,DWORD PTR [ebx]
  4179bd:	or     ecx,0xffffffae
  4179c0:	cli    
  4179c1:	jmp    0x41794b
  4179c3:	xchg   ebx,eax
  4179c4:	gs enter 0x274,0x0
  4179c9:	push   edi
  4179ca:	or     al,0x73
  4179cc:	jp     0x4179cf
  4179ce:	inc    esp
  4179cf:	jmp    0x41798f
  4179d1:	je     0x417a14
  4179d3:	jmp    0x50f2862f
  4179d8:	push   eax
  4179d9:	push   0xffffff90
  4179db:	lahf   
  4179dc:	in     eax,0xa2
  4179de:	sahf   
  4179df:	add    DWORD PTR [eax],eax
  4179e1:	cmp    eax,DWORD PTR [edi]
  4179e3:	xor    ecx,DWORD PTR [edi]
  4179e5:	cmp    DWORD PTR [edx+edi*8+0x7ae30d73],ecx
  4179ec:	(bad)  
  4179ed:	call   0x3c28cb
  4179f2:	popf   
  4179f3:	loop   0x4179b1
  4179f5:	div    esi
  4179f7:	add    eax,DWORD PTR [edi+0x57c4f5c6]
  4179fd:	std    
  4179fe:	cli    
  4179ff:	push   0x5b9d96e9
  417a04:	add    DWORD PTR [ecx],esi
  417a06:	ffree  st(3)
  417a08:	repz out 0x0,eax
  417a0b:	add    dl,ah
  417a0d:	and    al,0xaf
  417a0f:	addr16 xor eax,0x8e00015c
  417a15:	sbb    ebp,DWORD PTR [ecx+eax*1-0x4b]
  417a19:	cld    
  417a1a:	push   edx
  417a1b:	lds    ebx,FWORD PTR [eax+0x3]
  417a1e:	add    DWORD PTR [eax],eax
  417a20:	popf   
  417a21:	pop    ebx
  417a22:	push   esp
  417a23:	xor    eax,0xfd12edc5
  417a28:	stos   BYTE PTR es:[edi],al
  417a29:	je     0x417a94
  417a2b:	shl    BYTE PTR [edx+0x64],1
  417a2e:	push   esp
  417a2f:	std    
  417a30:	adc    BYTE PTR [ecx+ebp*2],ch
  417a33:	enter  0x34d2,0x54
  417a37:	mov    DWORD PTR [ebx+0x16f7ce3c],esp
  417a3d:	push   ss
  417a3e:	or     al,0x89
  417a40:	sbb    eax,0x9d0001db
  417a45:	inc    ebx
  417a46:	mov    bl,0x91
  417a48:	pushf  
  417a49:	pop    ebx
  417a4a:	adc    al,al
  417a4c:	push   ds
  417a4d:	es pop esp
  417a4f:	jmp    FWORD PTR [ebx-0x9a2bf29]
  417a55:	mov    ds:0x19d043f,al
  417a5a:	lock out 0xc0,eax
  417a5d:	dec    ecx
  417a5e:	push   esp
  417a5f:	std    
  417a60:	int    0xde
  417a62:	mov    ebx,0xedd4cd03
  417a67:	cmp    edx,DWORD PTR [ebx+0x5981041b]
  417a6d:	add    dh,bl
  417a6f:	jle    0x417a71
  417a71:	add    ch,bl
  417a73:	aad    0xe5
  417a75:	adc    ebp,ebx
  417a77:	pop    edx
  417a78:	sub    eax,0xde029d03
  417a7d:	mov    WORD PTR [eax-0x12],ds
  417a80:	cdq    
  417a81:	scas   al,BYTE PTR es:[edi]
  417a82:	lods   eax,DWORD PTR ds:[esi]
  417a83:	pop    edi
  417a84:	xchg   ebp,eax
  417a85:	fnsave [ebp+0x15afbb47]
  417a8b:	mov    esi,0xfb15f402
  417a90:	mov    WORD PTR [edx],ds
  417a92:	pop    edx
  417a93:	out    dx,al
  417a94:	out    0x3,eax
  417a96:	popf   
  417a97:	xlat   BYTE PTR ds:[ebx]
  417a98:	stos   DWORD PTR es:[edi],eax
  417a99:	jmp    0x34c9df69
  417a9e:	ror    BYTE PTR [edx+esi*2+0x53],0x74
  417aa3:	push   edi
  417aa4:	jae    0x417ac1
  417aa6:	push   0x1c
  417aa8:	jne    0x417acf
  417aaa:	push   ss
  417aab:	lods   al,BYTE PTR ds:[esi]
  417aac:	loop   0x417a2e
  417aae:	and    al,0x6
  417ab0:	neg    eax
  417ab2:	mov    bh,0x77
  417ab4:	jmp    0x5d86:0xfdd75d88
  417abb:	pop    es
  417abc:	inc    ecx
  417abd:	or     ch,ch
  417abf:	jge    0x417aef
  417ac1:	in     al,dx
  417ac2:	jmp    0xe6c2:0x8b0fd44b
  417ac9:	xchg   BYTE PTR [ecx-0x1],ah
  417acc:	arpl   WORD PTR [ecx+ebp*8-0x2b],ax
  417ad0:	sub    eax,DWORD PTR [edi+0x21e1fb5c]
  417ad6:	add    BYTE PTR [eax],al
  417ad8:	shl    DWORD PTR ds:0xb815c3d,1
  417ade:	mov    ss,WORD PTR [ebx-0x70]
  417ae1:	xchg   ebx,eax
  417ae2:	and    ch,BYTE PTR cs:[ebp+ebx*2+0x5]
  417ae7:	divps  xmm2,xmm7
  417aea:	call   FWORD PTR [edx+ebp*4]
  417aed:	mov    esi,0x3a3d923
  417af2:	data16 and BYTE PTR [eax],ah
  417af5:	in     eax,dx
  417af6:	(bad)  
  417af7:	call   0xc3844a9a
  417afc:	mov    al,ds:0x6e2e025a
  417b01:	dec    ebp
  417b02:	mov    DWORD PTR [ecx],edi
  417b04:	stos   BYTE PTR es:[edi],al
  417b05:	dec    edi
  417b06:	je     0x417b09
  417b08:	mov    al,ds:0x1c077e1c
  417b0d:	lods   eax,DWORD PTR ds:[esi]
  417b0e:	add    ebp,DWORD PTR [edx-0x2e]
  417b11:	call   FWORD PTR [ebx]
  417b13:	pushf  
  417b14:	int    0x7a
  417b16:	add    DWORD PTR [ecx+ebx*2-0x2a],esp
  417b1a:	adc    al,0x6a
  417b1c:	popa   
  417b1d:	cli    
  417b1e:	imul   edi,ecx,0xe745790e
  417b24:	out    dx,al
  417b25:	dec    esi
  417b26:	adc    edi,DWORD PTR [ebp+0x6a000bb4]
  417b2c:	push   ebp
  417b2d:	inc    BYTE PTR [edx+0x42f5c529]
  417b33:	push   0xffffffe3
  417b35:	cli    
  417b36:	cmp    BYTE PTR [edi],cl
  417b38:	ins    DWORD PTR es:[edi],dx
  417b39:	xor    BYTE PTR [esi-0x3f],dl
  417b3c:	add    BYTE PTR [eax],al
  417b3e:	aad    0xc
  417b40:	std    
  417b41:	into   
  417b42:	test   al,0x42
  417b44:	pop    esi
  417b45:	and    al,0x4a
  417b47:	inc    ecx
  417b48:	add    al,0xe9
  417b4a:	xor    al,0x63
  417b4c:	mov    ch,0xf7
  417b4e:	iret   
  417b4f:	dec    ebp
  417b50:	mov    al,0xe8
  417b52:	ret    
  417b53:	push   edx
  417b54:	push   esi
  417b55:	jb     0x417bc9
  417b57:	pop    ds
  417b58:	or     BYTE PTR [esi],dh
  417b5a:	ror    BYTE PTR [eax-0x77],cl
  417b5d:	cmp    DWORD PTR [ebp-0x3ca4eb87],ebx
  417b63:	shl    BYTE PTR [edi+0x0],cl
  417b66:	inc    edi
  417b67:	mov    ch,0x86
  417b69:	push   eax
  417b6a:	mov    al,ds:0xae3bcceb
  417b6f:	xor    DWORD PTR [ecx],eax
  417b71:	xor    esi,esp
  417b73:	stos   DWORD PTR es:[edi],eax
  417b74:	sub    esi,esi
  417b76:	dec    eax
  417b77:	and    edx,DWORD PTR [eax]
  417b79:	add    DWORD PTR [edi+0x33],edx
  417b7c:	das    
  417b7d:	test   DWORD PTR [ebx+0x31],esi
  417b80:	pop    ss
  417b81:	mov    esi,DWORD PTR [edi+ebp*8]
  417b84:	es icebp 
  417b86:	repz push 0x536a0f15
  417b8c:	or     ecx,DWORD PTR [edx+0x414b03d0]
  417b92:	in     al,dx
  417b93:	pop    edx
  417b94:	push   DWORD PTR [edx+eiz*4+0x79]
  417b98:	sti    
  417b99:	jg     0x417b4a
  417b9b:	hlt    
  417b9c:	mov    edi,0x5b900f40
  417ba1:	ret    0x0
  417ba4:	mov    esp,0x2e1189fe
  417ba9:	stc    
  417baa:	dec    edx
  417bab:	inc    ecx
  417bac:	cli    
  417bad:	cld    
  417bae:	shl    DWORD PTR [ebp-0x46],0x79
  417bb2:	sti    
  417bb3:	jg     0x417b5a
  417bb5:	lods   al,BYTE PTR ds:[esi]
  417bb6:	in     eax,0x33
  417bb8:	inc    esp
  417bb9:	test   al,0xe0
  417bbb:	push   ebp
  417bbc:	pavgw  mm7,QWORD PTR [esp+ebp*8-0x78]
  417bc1:	add    eax,0x8cc70000
  417bc6:	mov    BYTE PTR [ebp+0x58],dh
  417bc9:	mov    ecx,DWORD PTR [eax-0x1ae21006]
  417bcf:	sub    al,0x53
  417bd1:	push   es
  417bd2:	add    BYTE PTR [ebx+0x46371ab9],cl
  417bd8:	dec    esp
  417bd9:	add    edi,DWORD PTR [edi+0x34]
  417bdc:	push   ebx
  417bdd:	push   es
  417bde:	add    dh,dh
  417be0:	popf   
  417be1:	push   ss
  417be2:	and    al,0x2
  417be4:	push   ss
  417be5:	pop    ds
  417be6:	in     al,dx
  417be7:	xchg   al,ah
  417be9:	jae    0x417bc3
  417beb:	or     al,0x26
  417bed:	pop    ds
  417bee:	lock xchg al,ah
  417bf1:	mov    ds:0xe355437d,eax
  417bf6:	lods   al,BYTE PTR ds:[esi]
  417bf7:	retf   
  417bf8:	and    al,0x97
  417bfa:	in     eax,dx
  417bfb:	mov    DWORD PTR [edx-0x62101b24],esp
  417c01:	fsubr  st(4),st
  417c03:	jmp    0x417ba2
  417c05:	sub    BYTE PTR [edi+0x240000bf],dl
  417c0b:	xchg   edi,eax
  417c0c:	dec    ebp
  417c0d:	xor    ebp,0x38850091
  417c13:	add    eax,DWORD PTR [eax+eax*1]
  417c16:	xchg   edx,eax
  417c17:	shl    DWORD PTR [ebx+0x51],1
  417c1a:	sub    DWORD PTR [ebx-0x318602ff],ebx
  417c20:	sbb    cl,BYTE PTR [ecx-0x49ffa4a4]
  417c26:	pop    edx
  417c27:	pop    edx
  417c28:	add    BYTE PTR [esi-0x1fbda296],dh
  417c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c2f:	push   esp
  417c30:	inc    edx
  417c31:	sub    BYTE PTR [edx],0x5c
  417c34:	mov    ah,0x86
  417c36:	pop    eax
  417c37:	das    
  417c38:	add    BYTE PTR [ebx+0x15b30],al
  417c3e:	push   ds
  417c3f:	out    0x53,al
  417c41:	ret    
  417c42:	ficomp WORD PTR [ebx+0x1]
  417c45:	or     eax,0xde19
  417c4a:	popf   
  417c4b:	push   eax
  417c4c:	xchg   edi,eax
  417c4d:	inc    ebp
  417c4e:	cdq    
  417c4f:	aam    0xbe
  417c51:	imul   edx,DWORD PTR [esi+edx*1],0x70
  417c55:	mov    ebx,ebx
  417c57:	daa    
  417c58:	jp     0x417c9d
  417c5a:	std    
  417c5b:	add    DWORD PTR [edx-0x37],esi
  417c5e:	mov    edx,0xd67aaf1d
  417c63:	call   0x7a9f:0x1d9abe62
  417c6a:	ficomp WORD PTR [esi+0xbe70]
  417c70:	push   es
  417c71:	jge    0x417c25
  417c73:	sbb    al,0x55
  417c75:	stc    
  417c76:	cmp    al,0xc8
  417c78:	lahf   
  417c79:	inc    ebx
  417c7a:	xchg   ebx,edi
  417c7c:	and    esi,DWORD PTR [edi-0x46b4ff6a]
  417c82:	in     al,0xfc
  417c84:	dec    ebx
  417c85:	stc    
  417c86:	pushf  
  417c87:	rcr    BYTE PTR [edx-0x57bc5b85],0x90
  417c8e:	scas   al,BYTE PTR es:[edi]
  417c8f:	or     BYTE PTR [edx],dh
  417c91:	(bad)  
  417c92:	out    dx,eax
  417c93:	cld    
  417c94:	sub    edi,DWORD PTR [ebx-0x54]
  417c97:	inc    edi
  417c98:	adc    al,0xbf
  417c9a:	(bad)  
  417c9b:	push   0xffffff84
  417c9d:	inc    esp
  417c9e:	cmp    BYTE PTR [ebx+0x1a],cl
  417ca1:	mov    edi,0x7e237c52
  417ca6:	out    0x3,eax
  417ca8:	popf   
  417ca9:	jnp    0x417c4f
  417cab:	mov    esp,DWORD PTR [eax+eax*4]
  417cae:	pop    edi
  417caf:	add    ebx,DWORD PTR [ebp+0x12be6c02]
  417cb5:	inc    ecx
  417cb6:	lods   al,BYTE PTR ds:[esi]
  417cb7:	imul   esp,DWORD PTR [edx+0x2203e748],0xffffffbe
  417cbe:	mov    ds:0xa452ae4f,al
  417cc3:	ret    
  417cc4:	mov    bh,BYTE PTR [edi-0x59]
  417cc7:	call   DWORD PTR [ecx]
  417cc9:	data16 loope 0x417ccf
  417ccc:	popf   
  417ccd:	imul   DWORD PTR [esi+0x56]
  417cd0:	lds    eax,FWORD PTR [edx]
  417cd2:	out    0x82,eax
  417cd4:	add    BYTE PTR [eax],al
  417cd6:	pusha  
  417cd7:	add    DWORD PTR [eax],eax
  417cd9:	sub    al,BYTE PTR fs:[ebx]
  417cdc:	or     eax,0x4b815777
  417ce1:	cdq    
  417ce2:	push   ds
  417ce3:	push   eax
  417ce4:	data16 out dx,al
  417ce6:	and    ah,BYTE PTR [eax-0x1]
  417ce9:	call   0x738fe8c
  417cee:	cmp    al,BYTE PTR [eax+eiz*8-0x7efd6118]
  417cf5:	xor    BYTE PTR ds:0xd06a58d4,0xe3
  417cfc:	jae    0x417d15
  417cfe:	push   ds
  417cff:	push   eax
  417d00:	push   0xb5f70adc
  417d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d06:	mov    eax,ds:0x9ca6b5f5
  417d0b:	xchg   eax,esp
  417d0d:	loope  0x417d06
  417d0f:	mov    BYTE PTR [ecx],al
  417d11:	inc    ecx
  417d12:	push   eax
  417d13:	test   bh,bh
  417d15:	call   0xd84f6b8
  417d1a:	fnstenv [edi+0x47f4e869]
  417d20:	(bad)  
  417d21:	pushf  
  417d22:	(bad)  
  417d23:	jp     0x417cee
  417d25:	mov    bh,0x5b
  417d27:	ror    DWORD PTR [edi],cl
  417d29:	push   ss
  417d2a:	in     al,0xfb
  417d2c:	cld    
  417d2d:	xchg   esp,eax
  417d2e:	mov    dh,0x5f
  417d30:	nop
  417d31:	pop    es
  417d32:	bound  eax,QWORD PTR [ebp-0x7f]
  417d35:	add    DWORD PTR [eax+0x4f83f5],esp
  417d3b:	add    BYTE PTR [ebp-0x1e9b02b9],ch
  417d41:	into   
  417d42:	or     BYTE PTR [ebx+eax*4],ah
  417d45:	dec    ebx
  417d46:	std    
  417d47:	fimul  WORD PTR [ebx-0x66fe7f7c]
  417d4d:	add    al,BYTE PTR [ecx]
  417d4f:	dec    esp
  417d50:	jne    0x417db2
  417d52:	inc    ebx
  417d53:	add    BYTE PTR [ebp-0xdf0fffd],al
  417d59:	inc    eax
  417d5a:	add    DWORD PTR [edi],ecx
  417d5c:	loop   0x417cee
  417d5e:	add    al,cl
  417d60:	fs dec ebx
  417d62:	or     dl,al
  417d64:	inc    edi
  417d65:	ret    
  417d66:	ss inc ebp
  417d68:	inc    esp
  417d69:	xor    cl,BYTE PTR [edx]
  417d6b:	mov    eax,DWORD PTR [edx-0x39c380fe]
  417d71:	add    ecx,DWORD PTR [ebx]
  417d73:	lea    edi,[ebx-0x48ffffff]
  417d79:	pop    edx
  417d7a:	icebp  
  417d7b:	add    BYTE PTR [edi-0x7ef09f4a],dh
  417d81:	add    ebp,edi
  417d83:	inc    DWORD PTR [esp+ecx*8]
  417d86:	dec    ebp
  417d87:	sub    BYTE PTR [edi+0x5a],dh
  417d8a:	adc    DWORD PTR [eax],eax
  417d8c:	lds    edi,FWORD PTR [ebx-0x15b8182]
  417d92:	test   BYTE PTR [ebp-0x4c],al
  417d95:	(bad)  
  417d96:	dec    eax
  417d97:	in     al,dx
  417d98:	sub    ah,BYTE PTR [ecx]
  417d9a:	or     esi,DWORD PTR [esi+0x51b347f5]
  417da0:	add    BYTE PTR [eax],al
  417da2:	lds    edi,FWORD PTR [ebp-0x3f30f721]
  417da8:	ss inc ebp
  417daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dab:	das    
  417dac:	push   cs
  417dad:	add    edi,edx
  417daf:	push   ds
  417db0:	sti    
  417db1:	inc    ebp
  417db2:	mov    al,0xcb
  417db4:	inc    eax
  417db5:	adc    al,0x2d
  417db7:	inc    edx
  417db8:	jmp    0x7c647ff8
  417dbd:	fidivr WORD PTR [edi]
  417dbf:	cmp    dl,BYTE PTR [ecx]
  417dc1:	cmp    eax,DWORD PTR [edx+0x22]
  417dc4:	or     ecx,DWORD PTR [ebp-0xc5]
  417dca:	(bad)  
  417dcc:	jmp    0x54581b5a
  417dd1:	cmp    ebx,esp
  417dd3:	add    edx,esi
  417dd5:	dec    ebx
  417dd6:	es pop ss
  417dd8:	push   esp
  417dd9:	sub    ebx,esp
  417ddb:	(bad)  
  417ddc:	js     0x417e21
  417dde:	ins    DWORD PTR es:[edi],dx
  417ddf:	fld    DWORD PTR [ebx+0x2]
  417de2:	in     eax,dx
  417de3:	loopne 0x417da9
  417de5:	jmp    0x417e05
  417de7:	pushf  
  417de8:	add    dl,BYTE PTR [eax+0x4a]
  417deb:	dec    edi
  417dec:	or     DWORD PTR [esi],edx
  417dee:	fstp   QWORD PTR [ebx-0x56]
  417df1:	push   esi
  417df2:	and    BYTE PTR [ebp+edx*8+0x540f262b],bl
  417df9:	or     eax,0xb5fc5af3
  417dfe:	int3   
  417dff:	pop    edx
  417e00:	inc    edx
  417e01:	loopne 0x417da8
  417e03:	pusha  
  417e04:	aas    
  417e05:	add    DWORD PTR [eax],eax
  417e07:	add    ch,bl
  417e09:	and    ch,al
  417e0b:	js     0x9197f667
  417e11:	fmul   DWORD PTR [edi]
  417e13:	sbb    BYTE PTR [ebp-0x630081dc],0x5b
  417e1a:	add    DWORD PTR [ecx+0x39040f80],eax
  417e20:	push   ebx
  417e21:	add    edx,ebx
  417e23:	mov    bl,0x26
  417e25:	lahf   
  417e26:	pop    ebp
  417e27:	std    
  417e28:	pop    eax
  417e29:	inc    edi
  417e2a:	jp     0x417e6f
  417e2c:	int    0xd0
  417e2e:	les    edx,FWORD PTR [ebx]
  417e30:	xchg   BYTE PTR [ebp-0x1fad84df],dl
  417e36:	(bad)  
  417e37:	jmp    0x417e57
  417e39:	sbb    al,0x2
  417e3b:	xchg   DWORD PTR [eax-0x9],esp
  417e3e:	jbe    0x417e83
  417e40:	lods   eax,DWORD PTR ds:[esi]
  417e41:	pop    eax
  417e42:	ret    
  417e43:	and    esp,DWORD PTR [esi+ebx*4]
  417e46:	push   ecx
  417e47:	sbb    DWORD PTR [ebp+0x2],0xcf89b3e9
  417e4e:	retf   0xae4c
  417e51:	or     bh,ch
  417e53:	ret    
  417e54:	jp     0x417e00
  417e56:	das    
  417e57:	xchg   DWORD PTR [ebp-0x31],ebx
  417e5a:	clc    
  417e5b:	js     0x417e33
  417e5d:	push   edx
  417e5e:	out    dx,al
  417e5f:	xchg   ebp,eax
  417e60:	(bad)  
  417e61:	hlt    
  417e62:	jl     0x417e1e
  417e64:	pop    ebx
  417e65:	inc    edx
  417e66:	(bad)  
  417e67:	sti    
  417e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e69:	inc    ebx
  417e6a:	jmp    0xf6bf:0x84000043
  417e71:	into   
  417e72:	xchg   edi,eax
  417e73:	jns    0x417e9a
  417e75:	add    BYTE PTR [esi+eax*1],bl
  417e78:	push   0x6677a003
  417e7d:	add    bl,BYTE PTR [ebp+0x2ee66a02]
  417e83:	add    dh,BYTE PTR [esi-0x3a]
  417e86:	scas   al,BYTE PTR es:[edi]
  417e87:	jns    0x417ead
  417e89:	clc    
  417e8a:	aad    0xbc
  417e8c:	push   es
  417e8d:	ror    BYTE PTR [ebp+esi*8-0x6c],1
  417e91:	les    eax,FWORD PTR [ebx]
  417e93:	hlt    
  417e94:	pushf  
  417e95:	mov    esp,0xfb47439c
  417e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e9b:	inc    ebx
  417e9c:	jmp    0x6e03:0x32c71c4b
  417ea3:	sti    
  417ea4:	data16 or al,0x71
  417ea7:	cmc    
  417ea8:	arpl   WORD PTR [ecx-0x7f18fd63],bp
  417eae:	loopne 0x417eb0
  417eb0:	push   0xffffffce
  417eb2:	(bad)  
  417eb3:	loopne 0x417e9a
  417eb5:	xchg   BYTE PTR [esi-0x1a],cl
  417eb8:	out    0x3,al
  417eba:	and    al,0xbf
  417ebc:	retf   0x5ac3
  417ebf:	fsubr  st,st(0)
  417ec1:	dec    esp
  417ec2:	cs out 0xff,al
  417ec5:	popa   
  417ec6:	rol    DWORD PTR [ebp+0x73],1
  417ec9:	ror    DWORD PTR [eax+0x47],1
  417ecc:	jae    0x417ec7
  417ece:	or     edi,DWORD PTR [edx]
  417ed0:	std    
  417ed1:	push   esp
  417ed2:	add    BYTE PTR [eax],al
  417ed4:	test   DWORD PTR [edi+0x73],eax
  417ed7:	loope  0x417eaf
  417ed9:	dec    edi
  417eda:	cld    
  417edb:	into   
  417edc:	out    0x5b,al
  417ede:	clc    
  417edf:	pop    fs
  417ee1:	add    cl,BYTE PTR [ecx+0x2ed57]
  417ee7:	jmp    0x654eb009
  417eec:	js     0x417f32
  417eee:	std    
  417eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef0:	inc    esi
  417ef1:	mov    es,WORD PTR [ebp-0x1b]
  417ef4:	inc    edi
  417ef5:	mov    cs,WORD PTR [ebp-0x14]
  417ef8:	loope  0x417f5c
  417efa:	or     dl,ah
  417efc:	fnstcw WORD PTR [ebx+0x43]
  417eff:	adc    DWORD PTR [ebp+eax*2-0xa611603],0x2a1de83
  417f0a:	add    BYTE PTR [edx+0x6d0cffd8],dh
  417f10:	pop    es
  417f11:	inc    ebp
  417f12:	std    
  417f13:	jmp    0xea355f33
  417f18:	and    ecx,eax
  417f1a:	out    dx,eax
  417f1b:	(bad)  
  417f1c:	test   DWORD PTR [eax+0x45564670],0x8186a789
  417f26:	arpl   bp,bx
  417f28:	sahf   
  417f29:	cmp    DWORD PTR [esi+0x9],0x15437b99
  417f30:	xlat   BYTE PTR ds:[ebx]
  417f31:	and    DWORD PTR ds:0xb5f6c157,ecx
  417f37:	mov    ecx,0x83a10000
  417f3c:	(bad)  
  417f3e:	mov    bl,0x39
  417f40:	cmp    DWORD PTR [eax],eax
  417f42:	icebp  
  417f43:	mov    bh,0x73
  417f45:	adc    DWORD PTR [edi+0x49ff2141],esi
  417f4b:	push   ebx
  417f4c:	mov    BYTE PTR [ebp+0x68],cl
  417f4f:	mov    BYTE PTR [eax-0x14],0xbf
  417f53:	mov    BYTE PTR ds:0x40c4427c,bl
  417f59:	adc    al,0x8f
  417f5b:	inc    eax
  417f5c:	sbb    eax,0xfaedd10f
  417f61:	jmp    DWORD PTR [ebx-0x3c]
  417f64:	inc    eax
  417f65:	in     al,dx
  417f66:	in     eax,dx
  417f67:	inc    edx
  417f68:	in     eax,dx
  417f69:	cmp    ecx,DWORD PTR [edx-0x40b88a1a]
  417f6f:	inc    edx
  417f70:	in     eax,dx
  417f71:	sub    edi,DWORD PTR [edx+0x22]
  417f74:	test   DWORD PTR [ebp+0x24],eax
  417f77:	jl     0x417f39
  417f79:	add    dh,BYTE PTR [ebx+eax*8+0x40]
  417f7d:	in     al,dx
  417f7e:	(bad)  
  417f7f:	mov    edi,0x52235001
  417f84:	xor    eax,0x54fe7416
  417f89:	pop    ecx
  417f8a:	mov    DWORD PTR [edi-0x7580d890],edi
  417f90:	in     eax,dx
  417f91:	cvtpi2ps xmm1,QWORD PTR [esi+0xc]
  417f95:	mov    dh,0x35
  417f97:	(bad)  
  417f98:	mov    esp,0xbf43fce2
  417f9d:	mov    eax,DWORD PTR [eax]
  417f9f:	add    BYTE PTR [edx-0x2d],ch
  417fa2:	(bad)  
  417fa3:	push   esp
  417fa5:	jecxz  0x417fe8
  417fa7:	add    al,0xab
  417fa9:	pop    ss
  417faa:	pop    ss
  417fab:	rol    BYTE PTR [esi+eax*8],0x40
  417faf:	hlt    
  417fb0:	or     DWORD PTR [ebx],edi
  417fb2:	cmp    BYTE PTR [esi-0x14],cl
  417fb5:	das    
  417fb6:	mov    dh,0x8b
  417fb8:	stc    
  417fb9:	stos   BYTE PTR es:[edi],al
  417fba:	cli    
  417fbb:	inc    ebp
  417fbc:	popf   
  417fbd:	inc    ebp
  417fbe:	jl     0x418003
  417fc0:	lods   eax,DWORD PTR ds:[esi]
  417fc1:	fistp  QWORD PTR [edi+0x21936613]
  417fc7:	or     eax,0xfd471010
  417fcc:	call   0x2ec:0x1eebbfa5
  417fd3:	xchg   eax,esp
  417fd5:	push   edi
  417fd6:	jnp    0x41801b
  417fd8:	lea    ebp,ds:0xef2423bf
  417fde:	push   ebx
  417fdf:	sbb    DWORD PTR [ebp+0x2e],0x57f0fcb1
  417fe6:	inc    edi
  417fe7:	adc    esp,DWORD PTR [ebp-0xa003ea7]
  417fed:	adc    bh,BYTE PTR [ebp-0x40]
  417ff0:	mov    ds:0x4afea5a6,al
  417ff5:	imul   edi,DWORD PTR [ebx+0x4b],0x3f8f314d
  417ffc:	pushf  
  417ffd:	sub    BYTE PTR [edi-0x374a3f9],cl
  418003:	or     BYTE PTR [eax],al
  418005:	add    BYTE PTR [ebp+esi*4+0x79],bl
  418009:	xchg   esp,eax
  41800a:	popf   
  41800b:	sub    eax,DWORD PTR [ecx]
  41800d:	sub    DWORD PTR [edi+ebp*1+0x50],ebx
  418011:	fdiv   DWORD PTR [esi+0x6086c46b]
  418017:	(bad)  
  418019:	adc    al,0x2
  41801b:	addr16 in eax,dx
  41801d:	mov    BYTE PTR [eax+0x3f],ah
  418020:	or     al,0x46
  418022:	mov    ebp,0x6de7944f
  418027:	leave  
  418028:	inc    esi
  418029:	std    
  41802a:	fisub  DWORD PTR [esi+0x4d]
  41802d:	(bad)  
  41802e:	fisubr DWORD PTR [ebx]
  418030:	add    DWORD PTR [edx-0x62],ebp
  418033:	xchg   ebx,eax
  418034:	pop    edx
  418035:	outs   dx,BYTE PTR ds:[esi]
  418036:	retf   
  418037:	add    ah,BYTE PTR [esi]
  418039:	dec    ecx
  41803a:	nop
  41803b:	js     0x417fe3
  41803d:	add    ch,BYTE PTR [eax-0xdfa5988]
  418043:	and    bl,bh
  418045:	cld    
  418046:	jmp    0x417fd7
  418048:	fild   DWORD PTR [ebx]
  41804a:	sbb    bl,al
  41804c:	idiv   BYTE PTR [edx+0x23]
  41804f:	xchg   bh,ah
  418051:	add    ebx,DWORD PTR [ebp+0x6ef94fd]
  418057:	(bad)  
  418059:	ror    edx,0x3
  41805c:	out    0x3,eax
  41805e:	popf   
  41805f:	sub    eax,DWORD PTR [esi+0x62029d02]
  418065:	mov    ecx,0x5c94396
  41806a:	add    BYTE PTR [eax],al
  41806c:	sbb    dl,bh
  41806e:	sar    BYTE PTR [ebx+esi*8+0x12],cl
  418072:	add    dh,BYTE PTR [esp]
  418075:	push   ss
  418076:	pop    eax
  418077:	jl     0x418057
  418079:	push   ss
  41807a:	jo     0x41806b
  41807c:	call   0xc24d:0x25f8358d
  418083:	mov    ecx,0xf41b8bba
  418088:	sahf   
  418089:	lea    ebp,[esp+edx*2]
  41808c:	push   0xffffffc7
  41808e:	(bad)  
  41808f:	clc    
  418090:	sub    DWORD PTR [edx-0x7a62fc18],eax
  418096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418097:	add    eax,0x5af6c722
  41809c:	mov    es,WORD PTR [ebx]
  41809e:	out    0x3,eax
  4180a0:	and    al,0x80
  4180a2:	jnp    0x4180a7
  4180a4:	popf   
  4180a5:	add    bl,BYTE PTR [edx]
  4180a7:	cmp    esp,DWORD PTR [ebx+edi*1+0x1ef87ff6]
  4180ae:	out    0x3,eax
  4180b0:	xchg   edx,eax
  4180b1:	sar    edi,1
  4180b3:	in     al,dx
  4180b4:	aad    0x83
  4180b6:	fmulp  st(4),st
  4180b8:	sahf   
  4180b9:	add    cl,BYTE PTR [ecx-0x6b6fb80a]
  4180bf:	jmp    0xaeca8362
  4180c4:	scas   al,BYTE PTR es:[edi]
  4180c5:	jg     0x4180a7
  4180c7:	jmp    0x4180b7
  4180c9:	cmp    eax,0xb855f575
  4180ce:	or     edi,esi
  4180d0:	add    BYTE PTR [eax],al
  4180d2:	mov    al,dl
  4180d4:	adc    eax,0x45899ea9
  4180d9:	aad    0x9
  4180db:	mov    esi,0x105c7007
  4180e0:	mov    DWORD PTR [ecx+ebx*8],esp
  4180e3:	add    esp,0x17c3f1e5
  4180e9:	rcl    BYTE PTR [eax+0x6ac6fd39],0x76
  4180f0:	inc    ebp
  4180f1:	call   0x6a5944cf
  4180f6:	xchg   edx,eax
  4180f7:	add    al,0xe7
  4180f9:	or     edx,esi
  4180fb:	cmp    eax,0xe45c72fd
  418100:	aas    
  418101:	cmp    DWORD PTR [edi+0x40],edx
  418104:	addr16 jmp 0x5c5934e5
  41810a:	cli    
  41810b:	add    dl,BYTE PTR [esi-0x7a]
  41810e:	dec    esp
  41810f:	adc    BYTE PTR [ecx+0xbb362b2],cl
  418115:	jbe    0x418103
  418117:	pop    es
  418118:	call   0xfd7ed8c7
  41811d:	push   0x51
  41811f:	aas    
  418120:	jno    0x41812f
  418122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418123:	pop    ss
  418124:	cld    
  418125:	push   esi
  418126:	pop    edx
  418127:	mov    dh,0x22
  418129:	fs popa 
  41812b:	mov    dh,0x8
  41812d:	add    BYTE PTR [ecx-0x640006d8],bl
  418133:	aaa    
  418134:	xor    BYTE PTR [eax+0x6a00000],0x0
  41813b:	rsqrtps xmm7,XMMWORD PTR [edi-0x2]
  41813f:	push   cs
  418140:	bound  esi,QWORD PTR [edi-0x1]
  418143:	shl    BYTE PTR [esi+edi*1-0x34383ef8],0x7f
  41814b:	aas    
  41814c:	lock dec edi
  41814e:	scas   al,BYTE PTR es:[edi]
  41814f:	jmp    0x418103
  418151:	mov    esp,0x420d7045
  418156:	add    eax,0xc724b80
  41815b:	test   BYTE PTR [ecx+0x62fffd27],dl
  418161:	inc    edx
  418162:	sbb    eax,0x79828b01
  418167:	sbb    eax,0xb60b0384
  41816c:	ret    
  41816d:	add    eax,0x4abb60b
  418172:	mov    ebp,0xbe3c4ce0
  418177:	add    ecx,DWORD PTR [ebx+eax*4]
  41817a:	cmp    edx,DWORD PTR [eax+edx*4-0x26]
  41817e:	xchg   BYTE PTR [esi+0x3b4],al
  418184:	mov    DWORD PTR [eax],0x368188ff
  41818a:	out    0x93,al
  41818c:	push   cs
  41818d:	enter  0x8bfa,0x71
  418191:	loop   0x4181d2
  418193:	push   eax
  418194:	scas   al,BYTE PTR es:[edi]
  418195:	push   es
  418196:	push   0x0
  418198:	mov    edx,DWORD PTR [edx+0x15]
  41819b:	lea    eax,[eax]
  41819d:	add    BYTE PTR [ebx-0x1e00a9fd],dh
  4181a3:	xor    cl,BYTE PTR [eax+0x9525bcb]
  4181a9:	call   FWORD PTR [ebp-0x4e1806a2]
  4181af:	rol    DWORD PTR [ebp-0x3],cl
  4181b2:	push   ds
  4181b3:	rol    DWORD PTR [ebx],0xd
  4181b6:	and    esi,ebx
  4181b8:	in     al,0xff
  4181ba:	shl    BYTE PTR ds:0xefcafbec,cl
  4181c0:	cmc    
  4181c1:	sub    DWORD PTR [edi],0x5
  4181c4:	add    al,0x0
  4181c6:	js     0x418205
  4181c8:	inc    ebp
  4181c9:	std    
  4181ca:	mov    dl,0x9c
  4181cc:	adc    bh,BYTE PTR [ebx]
  4181ce:	xchg   BYTE PTR ds:0x5529fd46,cl
  4181d4:	or     BYTE PTR [edx],bl
  4181d6:	cdq    
  4181d7:	cmp    eax,0xaeb87443
  4181dc:	inc    eax
  4181dd:	je     0x418175
  4181df:	outs   dx,BYTE PTR ds:[esi]
  4181e0:	jecxz  0x4181dd
  4181e2:	and    BYTE PTR ds:0x7a182f3,0x4
  4181e9:	add    BYTE PTR [edx-0x64014463],ah
  4181ef:	xchg   ebp,eax
  4181f0:	mov    bl,0x1
  4181f2:	pop    esp
  4181f3:	dec    esp
  4181f4:	cld    
  4181f5:	or     BYTE PTR [ecx+ebp*1+0x49],bl
  4181f9:	adc    BYTE PTR [edx+0x3693d01f],0x58
  418200:	hlt    
  418201:	mov    ch,0x0
  418203:	add    dl,bl
  418205:	sub    dh,ah
  418207:	mov    ch,0xea
  418209:	sub    DWORD PTR [edx-0x20],eax
  41820c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820d:	and    BYTE PTR [edx+0x1],al
  418210:	and    eax,0xa95402ac
  418215:	xchg   edi,eax
  418216:	dec    esi
  418217:	inc    ebx
  418218:	mov    ebp,0xe182f42a
  41821d:	push   edi
  41821e:	add    DWORD PTR [eax],eax
  418220:	push   ds
  418221:	gs jmp esi
  418224:	add    al,BYTE PTR [ebx]
  418226:	pusha  
  418227:	inc    ebp
  418228:	clc    
  418229:	or     eax,0xcf3bd95
  41822e:	popf   
  41822f:	mov    ch,0x9c
  418231:	inc    ebx
  418232:	inc    edi
  418233:	cld    
  418234:	xchg   ebp,eax
  418235:	inc    ebx
  418236:	adc    ch,BYTE PTR [esp+edx*4]
  418239:	fmul   st(6),st
  41823b:	hlt    
  41823c:	sbb    al,0x19
  41823e:	rol    DWORD PTR [ebx],cl
  418240:	popf   
  418241:	stc    
  418242:	mov    ebx,cs
  418244:	dec    ebp
  418245:	pop    ecx
  418246:	jo     0x4181ee
  418248:	xor    ch,BYTE PTR [ecx]
  41824a:	xor    eax,0x2c327681
  41824f:	shr    DWORD PTR [edx+0x77fde3d],0x3
  418256:	out    0x3,eax
  418258:	test   al,0x74
  41825a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825b:	add    ah,BYTE PTR [esp+ecx*8]
  41825e:	cmp    BYTE PTR [edx+0x1e],0xae
  418262:	in     eax,dx
  418263:	inc    esp
  418264:	or     BYTE PTR [ecx+0xf82d],0x23
  41826b:	xchg   DWORD PTR [edi+0x45],edx
  41826e:	jo     0x4182ad
  418270:	bound  edi,QWORD PTR [ebp+0x7a9eea02]
  418276:	push   ss
  418277:	mov    edx,0x895844c5
  41827c:	sub    al,0xfc
  41827e:	test   DWORD PTR [edx+0x60],ecx
  418281:	jle    0x418254
  418283:	cmp    eax,0x8f1a44ae
  418288:	and    eax,DWORD PTR [ebp+0x38]
  41828b:	cmp    eax,0x4a843872
  418290:	out    0x8d,al
  418292:	loopne 0x418294
  418294:	test   al,0x63
  418296:	xchg   ebp,eax
  418297:	mov    esi,DWORD PTR [esp+eax*4]
  41829a:	test   al,0x74
  41829c:	add    DWORD PTR cs:[ebx+eax*2-0x30e71a00],esp
  4182a4:	add    ah,BYTE PTR [eax+0x43]
  4182a7:	lea    ecx,ds:0xbf01399f
  4182ad:	dec    ecx
  4182ae:	test   BYTE PTR [ecx],0xbf
  4182b1:	pusha  
  4182b2:	sub    edx,DWORD PTR [ecx-0x6c115b77]
  4182b8:	sub    DWORD PTR [ebx],ebp
  4182ba:	(bad)  
  4182bb:	cmp    al,BYTE PTR [edi-0x7974ad5c]
  4182c1:	ins    DWORD PTR es:[edi],dx
  4182c2:	sahf   
  4182c3:	add    al,BYTE PTR [eax]
  4182c5:	pusha  
  4182c6:	add    eax,DWORD PTR [ebp+0x2466f89]
  4182cc:	add    cl,ch
  4182ce:	add    BYTE PTR [eax],al
  4182d0:	sub    ecx,DWORD PTR [ecx+0x3f611668]
  4182d6:	lds    esp,FWORD PTR [esi+eax*8+0x3d]
  4182da:	std    
  4182db:	push   es
  4182dc:	lahf   
  4182dd:	add    al,BYTE PTR [eax]
  4182df:	jmp    0xf6cd42fb
  4182e4:	js     0x418312
  4182e6:	ret    
  4182e7:	stos   BYTE PTR es:[edi],al
  4182e8:	sahf   
  4182e9:	jg     0x4182ab
  4182eb:	test   BYTE PTR [edi],0x65
  4182ee:	add    al,0xe9
  4182f0:	sahf   
  4182f1:	or     eax,0x3c83d688
  4182f6:	std    
  4182f7:	push   0xffffffd6
  4182f9:	add    al,0xe7
  4182fb:	pop    ss
  4182fc:	cwde   
  4182fd:	cmp    eax,0x105c70fd
  418302:	xchg   DWORD PTR [ecx+edx*4],edx
  418305:	mov    DWORD PTR [ebx+0x5],eax
  418308:	pop    ecx
  418309:	int3   
  41830a:	imul   ebp,ecx,0x6c1bafdf
  418310:	push   esi
  418311:	add    edi,ebp
  418313:	sbb    al,0x89
  418315:	mov    ecx,ecx
  418317:	aaa    
  418318:	fisubr WORD PTR [edi+0x7a23000f]
  41831e:	or     edi,edi
  418320:	or     DWORD PTR [eax],ecx
  418322:	call   0xfb010fef
  418327:	or     DWORD PTR [ebp+eax*1-0x3976da8c],0x73
  41832f:	or     edx,DWORD PTR [ecx+0xfffbe0]
  418335:	add    BYTE PTR [ebx+0xf],dl
  418338:	cmp    DWORD PTR [esi+edx*4+0x5a0f0006],0x4a0efe47
  418343:	dec    edi
  418344:	inc    eax
  418346:	push   esp
  418347:	push   cs
  418348:	pop    es
  418349:	shl    DWORD PTR [edi-0x7c08009],0x73
  418350:	mov    ah,0xeb
  418352:	mov    edx,0x3d70468c
  418357:	dec    ecx
  418358:	add    eax,0x5a3bbb8a
  41835d:	je     0x4182eb
  41835f:	cmp    edx,DWORD PTR [ecx+0xf]
  418362:	stc    
  418363:	or     DWORD PTR [edi],edx
  418365:	add    BYTE PTR [eax+edx*1-0x4a],dh
  418369:	inc    edi
  41836a:	jne    0x41837c
  41836c:	mov    dh,0x4f
  41836e:	xchg   dh,al
  418370:	fisttp WORD PTR [eax]
  418372:	outs   dx,DWORD PTR ds:[esi]
  418373:	(bad)  
  418374:	(bad)  
  418375:	div    esp
  418377:	add    BYTE PTR [esp+esi*2+0x20],dl
  41837b:	jg     0x4183b8
  41837d:	push   ebp
  41837e:	iret   
  41837f:	mov    DWORD PTR [eax-0x7900bc00],eax
  418385:	pop    esi
  418386:	mov    BYTE PTR [ebp-0x7c9cefbf],cl
  41838c:	xchg   ebp,eax
  41838d:	inc    BYTE PTR [ebx]
  41838f:	shl    BYTE PTR [esi],0x5d
  418392:	adc    al,0x10
  418394:	test   BYTE PTR [eax-0x2bd6c63],dl
  41839a:	add    BYTE PTR [eax],al
  41839c:	adc    ah,ah
  41839e:	add    al,0x80
  4183a0:	aad    0x22
  4183a2:	mov    WORD PTR [ebx-0x43],es
  4183a5:	adc    cl,BYTE PTR ss:[ecx-0x49edaea8]
  4183ac:	pop    edx
  4183ad:	and    eax,0x2ff5df86
  4183b2:	inc    esp
  4183b3:	xchg   DWORD PTR [eax+0x1],ebx
  4183b6:	lea    eax,[ebx-0x3f]
  4183b9:	imul   eax,DWORD PTR [ecx+0x4da04a3d],0x1caeaa50
  4183c3:	adc    eax,0x538e299d
  4183c8:	jge    0x418409
  4183ca:	add    ebp,edi
  4183cc:	dec    eax
  4183cd:	dec    ebp
  4183ce:	inc    edx
  4183cf:	jae    0x418366
  4183d1:	jnp    0x418415
  4183d3:	jae    0x418362
  4183d5:	sbb    al,0xb8
  4183d7:	or     ebp,DWORD PTR [edx-0x7617f663]
  4183dd:	adc    DWORD PTR [edx-0x3],eax
  4183e0:	and    ah,ch
  4183e2:	adc    DWORD PTR [ebx+0x14da9],eax
  4183e8:	push   ss
  4183e9:	scas   eax,DWORD PTR es:[edi]
  4183ea:	adc    al,0xe7
  4183ec:	fst    DWORD PTR [eax+0x1]
  4183ef:	add    BYTE PTR [edx-0x5c013867],ch
  4183f5:	xchg   ecx,eax
  4183f6:	iret   
  4183f7:	add    DWORD PTR [esp+ecx*2+0xc],ebx
  4183fb:	or     DWORD PTR [ebp+ebp*1+0x39],ebx
  4183ff:	add    BYTE PTR [eax],0x0
  418402:	call   0x3c16:0x44ebb817
  418409:	std    
  41840a:	dec    edx
  41840b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41840c:	les    esp,FWORD PTR [ebx]
  41840e:	(bad)  
  418410:	shr    DWORD PTR [ecx-0x63],cl
  418413:	add    ah,BYTE PTR [esi-0x49726949]
  418419:	inc    ecx
  41841a:	scas   al,BYTE PTR es:[edi]
  41841b:	sbb    ah,BYTE PTR [edx+0x4d]
  41841e:	retf   
  41841f:	cmp    DWORD PTR [esp+edx*1],edx
  418422:	sbb    BYTE PTR [eax+0xa8e40f2],dh
  418428:	(bad)  
  418429:	dec    esi
  41842a:	adc    BYTE PTR [edx],bh
  41842c:	jbe    0x4183b5
  41842e:	fisttp QWORD PTR [ecx]
  418430:	fs dec esi
  418432:	call   0xe7c2:0x2b10e702
  418439:	adc    BYTE PTR [ebx],dh
  41843b:	retf   0x42e8
  41843e:	std    
  41843f:	or     ah,dl
  418441:	inc    edx
  418442:	pushf  
  418443:	cmp    ah,BYTE PTR [edi+0x1]
  418446:	imul   ebp,DWORD PTR [esi+0x37ea2b4a],0x8d584136
  418450:	es adc ebx,esi
  418453:	retf   0x10e7
  418456:	jmp    0x41842a
  418458:	call   0xe24c4e9f
  41845d:	dec    ebp
  41845e:	pushf  
  41845f:	inc    ebx
  418460:	addr16 cld 
  418462:	out    dx,al
  418463:	scas   al,BYTE PTR es:[edi]
  418464:	adc    cl,BYTE PTR [ebp-0x211a0000]
  41846a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846b:	shl    ah,cl
  41846d:	add    dh,dh
  41846f:	mov    dh,0xa6
  418471:	xchg   DWORD PTR [edi-0x15087fc],edx
  418477:	mov    WORD PTR [eax+edx*8-0x23],fs
  41847b:	mov    dh,0x9a
  41847d:	cmp    DWORD PTR [eax+edx*1+0x60],ebx
  418481:	scas   eax,DWORD PTR es:[edi]
  418482:	fisubr WORD PTR [ebx]
  418484:	retf   0xc631
  418487:	inc    eax
  418488:	push   ds
  418489:	inc    edx
  41848a:	out    dx,al
  41848b:	xchg   BYTE PTR [edx-0x6117001d],bh
  418491:	and    DWORD PTR [ecx+0x4537ddb6],esp
  418497:	div    BYTE PTR [edi+edi*4-0x385b1202]
  41849e:	add    DWORD PTR [eax-0x57f6f582],ebp
  4184a4:	mov    eax,ds:0xeac6803a
  4184a9:	mov    ah,0xeb
  4184ab:	nop
  4184ac:	and    BYTE PTR ds:0x70ad76fd,bh
  4184b2:	dec    ebp
  4184b3:	call   0xeb86f545
  4184b8:	pop    edi
  4184b9:	pop    ecx
  4184ba:	or     dl,dh
  4184bc:	push   esi
  4184bd:	mov    eax,ebp
  4184bf:	add    bl,BYTE PTR [esi-0x7e]
  4184c2:	cmp    al,cl
  4184c4:	daa    
  4184c5:	lds    edx,FWORD PTR [ebx]
  4184c7:	mov    ebx,0xdd4b8bae
  4184cc:	add    BYTE PTR [eax],al
  4184ce:	sbb    ecx,ecx
  4184d0:	add    esp,DWORD PTR [edx-0x69]
  4184d3:	adc    DWORD PTR [ebx+0x39],0x121bcd27
  4184da:	call   0x88c:0x9e196383
  4184e1:	imul   esp,DWORD PTR [edi-0x26],0x19e6650c
  4184e8:	add    cl,ch
  4184ea:	push   ds
  4184eb:	xor    BYTE PTR [edi-0x12],dl
  4184ee:	and    dh,BYTE PTR [esi+0x19]
  4184f1:	jmp    0x94390794
  4184f6:	lea    edi,[esi-0x4a]
  4184f9:	add    bl,BYTE PTR [ecx+0x46e08002]
  4184ff:	pop    es
  418500:	test   BYTE PTR [esi+eax*4-0x6796fffe],al
  418507:	fisttp DWORD PTR [eax+eax*1]
  41850a:	shr    BYTE PTR [edx-0x7bcbffea],0xf5
  418511:	pop    edi
  418512:	add    BYTE PTR ds:0x7e6f980,0x81
  418519:	fwait
  41851a:	inc    esp
  41851b:	add    al,0x0
  41851d:	psrld  mm0,QWORD PTR [esi+0x0]
  418521:	cmpltps xmm7,XMMWORD PTR [esi]
  418525:	shl    DWORD PTR ds:0x89c80707,0x1a
  41852c:	add    eax,0x84fab989
  418531:	mov    es,WORD PTR [eax]
  418533:	add    BYTE PTR [eax-0x2],dh
  418536:	(bad)  
  418537:	jmp    FWORD PTR [edi]
  418539:	dec    esi
  41853a:	adc    DWORD PTR [ebp+ebp*8-0x40],edi
  41853e:	inc    ebp
  41853f:	cmp    ch,dh
  418541:	add    eax,DWORD PTR [eax]
  418543:	add    BYTE PTR [edi+0x28],bl
  418546:	mov    BYTE PTR [esi-0x8],al
  418549:	mov    edx,cs
  41854b:	mov    esi,DWORD PTR [edx]
  41854d:	adc    al,0x27
  41854f:	push   ebp
  418550:	nop
  418551:	mov    edx,DWORD PTR [eax+edx*4]
  418554:	cmp    eax,0x128b881a
  418559:	or     BYTE PTR [edi+0x653dcfc3],al
  41855f:	mov    DWORD PTR [eax],eax
  418561:	mov    al,BYTE PTR [ebx+ecx*4]
  418564:	stc    
  418565:	out    dx,eax
  418566:	mov    BYTE PTR [edi*2+0x1b104236],al
  41856d:	std    
  41856e:	jle    0x418530
  418570:	jbe    0x4184f8
  418572:	inc    ecx
  418573:	adc    bh,bh
  418575:	nop
  418576:	xchg   esp,eax
  418577:	add    BYTE PTR [ebx+eax*1+0x35d0d281],al
  41857e:	ss dec edx
  418580:	cmp    BYTE PTR [edx+0x31],0x8b
  418584:	popf   
  418585:	push   ebx
  418586:	mov    cl,BYTE PTR ds:0x94d724
  41858c:	popf   
  41858d:	sub    DWORD PTR [edx+0x216aad45],ecx
  418593:	add    ch,ch
  418595:	jo     0x41854d
  418597:	or     eax,DWORD PTR [eax]
  418599:	add    BYTE PTR [edx],bh
  41859b:	out    dx,eax
  41859c:	paddw  mm1,QWORD PTR [eax-0x62bfeca7]
  4185a3:	mov    ah,0xc5
  4185a5:	adc    edx,DWORD PTR [esi]
  4185a7:	adc    BYTE PTR [edi+eax*4],cl
  4185aa:	pusha  
  4185ab:	cmp    DWORD PTR [edx+0x44ac0543],ecx
  4185b1:	or     al,0x14
  4185b3:	ficomp WORD PTR [ebx]
  4185b5:	out    0x1a,eax
  4185b7:	mov    bh,0x3d
  4185b9:	std    
  4185ba:	ficom  WORD PTR es:[edi]
  4185bd:	xor    BYTE PTR [edx-0xab4758a],0xb1
  4185c4:	iret   
  4185c5:	pop    ss
  4185c6:	xchg   edx,eax
  4185c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c8:	stos   BYTE PTR es:[edi],al
  4185c9:	sti    
  4185ca:	fcmovb st,st(7)
  4185cc:	stc    
  4185cd:	pop    edx
  4185ce:	int    0x2f
  4185d0:	test   DWORD PTR [ebx-0x37],esp
  4185d3:	idiv   DWORD PTR ds:0x1a4a8580
  4185d9:	rcr    BYTE PTR [esi],0xc9
  4185dc:	cmp    al,BYTE PTR [ecx+0x3d812add]
  4185e2:	push   edx
  4185e3:	mov    dl,0xc7
  4185e5:	pop    ds
  4185e6:	xchg   edx,eax
  4185e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e8:	jmp    0x8a6d22ff
  4185ed:	inc    ebx
  4185ee:	mov    ecx,0x9d69d16b
  4185f3:	xor    al,0xb5
  4185f5:	sbb    edx,DWORD PTR [eax]
  4185f7:	xchg   ebp,eax
  4185f8:	add    cl,BYTE PTR [edi-0x2d]
  4185fb:	and    al,0xb5
  4185fd:	sldt   WORD PTR [eax]
  418600:	add    esi,DWORD PTR es:[edx-0x21f911c3]
  418607:	mov    bh,0x9a
  418609:	sub    bl,dh
  41860b:	aaa    
  41860c:	pop    eax
  41860d:	ss fs inc esp
  418610:	mov    al,ds:0x9d1dbe7f
  418615:	add    al,BYTE PTR [eax]
  418617:	(bad)  
  418618:	mov    ds:0x97866c05,al
  41861d:	add    ah,bh
  41861f:	mov    BYTE PTR [esi-0x701d6ff2],dh
  418625:	add    ah,bh
  418627:	and    BYTE PTR [ebx-0x5c48190a],0xf9
  41862e:	sub    al,0xac
  418630:	mov    eax,ds:0x9d1c287e
  418635:	add    dh,BYTE PTR [ebp-0x39]
  418638:	stos   BYTE PTR es:[edi],al
  418639:	add    bl,bh
  41863b:	test   eax,0xf8fec525
  418640:	retf   
  418641:	scas   al,BYTE PTR es:[edi]
  418642:	ret    
  418643:	clc    
  418644:	dec    eax
  418645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418646:	in     eax,dx
  418647:	xchg   DWORD PTR [edx+ebx*1-0x42dbfc19],esi
  41864e:	out    dx,al
  41864f:	xchg   ch,bl
  418651:	scas   al,BYTE PTR es:[edi]
  418652:	push   es
  418653:	stc    
  418654:	repz add eax,0x2a52065
  41865a:	out    0xa9,eax
  41865c:	mov    edx,0x4b8e96d2
  418661:	push   ss
  418662:	jb     0x4186a5
  418664:	add    BYTE PTR [eax],al
  418666:	mov    ch,0xb2
  418668:	jo     0x41866e
  41866a:	popf   
  41866b:	jg     0x418694
  41866d:	or     eax,0x3eefc21
  418672:	popf   
  418673:	sub    esp,edx
  418675:	mov    bl,ah
  418677:	push   ss
  418678:	jmp    0x1ce6:0x5bc44b
  41867f:	das    
  418680:	adc    eax,0xc98b9ee9
  418685:	adc    bl,cl
  418687:	mov    BYTE PTR [edi],cl
  418689:	and    ecx,DWORD PTR [ebx-0x17]
  41868c:	or     al,0x6c
  41868e:	xchg   BYTE PTR [edi],cl
  418690:	add    cl,ch
  418692:	sbb    eax,0xad3cff3a
  418697:	mov    BYTE PTR [edi],bh
  418699:	call   0xe66c45e2
  41869e:	and    ecx,DWORD PTR [edi+0x15]
  4186a1:	jmp    0x88284644
  4186a6:	jae    0x4186df
  4186a8:	std    
  4186a9:	loop   0x4186eb
  4186ab:	popf   
  4186ac:	call   0x88bdac37
  4186b1:	jmp    0x2f428954
  4186b6:	cmp    edx,edi
  4186b8:	xlat   BYTE PTR ds:[ebx]
  4186b9:	xchg   edx,eax
  4186ba:	mov    esp,0xc5e15b7d
  4186bf:	and    esi,esi
  4186c1:	and    al,0x91
  4186c3:	add    BYTE PTR [esp+ebp*4+0x15],dh
  4186c7:	les    ebp,FWORD PTR [ebx+0x22]
  4186ca:	add    BYTE PTR [eax],al
  4186cc:	inc    esi
  4186cd:	mov    bl,0x37
  4186cf:	(bad)  
  4186d0:	loopne 0x4186de
  4186d2:	sub    DWORD PTR [ecx],0xa
  4186d5:	push   es
  4186d6:	push   0xffffffe9
  4186d8:	out    dx,al
  4186d9:	xchg   DWORD PTR [esi-0x23],edx
  4186dc:	adc    eax,0x2768e843
  4186e1:	add    al,BYTE PTR [eax]
  4186e3:	inc    edx
  4186e4:	daa    
  4186e5:	mov    eax,DWORD PTR [esi+0x5]
  4186e8:	mov    ah,0x3c
  4186ea:	cmp    DWORD PTR [eax-0x6f],eax
  4186ed:	jg     0x418679
  4186ef:	(bad)  
  4186f0:	sahf   
  4186f1:	add    cl,BYTE PTR [edx+0x2bc694e2]
  4186f7:	add    BYTE PTR [ebx+0x74177b7d],dl
  4186fd:	add    BYTE PTR [edi-0x8],bh
  418700:	test   DWORD PTR [eax+eiz*4-0x76],ebp
  418704:	inc    edi
  418705:	add    edi,esp
  418707:	xchg   ebp,eax
  418708:	idiv   DWORD PTR [eax+0x3d]
  41870b:	add    BYTE PTR [edi-0x73],cl
  41870e:	jg     0x41878e
  418710:	test   dh,bh
  418712:	or     al,BYTE PTR [ebp+0xfd9]
  418718:	mov    bh,0x78
  41871a:	dec    ebp
  41871b:	add    BYTE PTR [ecx-0x1fb177a3],cl
  418721:	xor    edx,esi
  418723:	je     0x4186ea
  418725:	add    DWORD PTR [esi+0x18],0xffffffb9
  418729:	mov    esi,0xd73f1f73
  41872e:	or     al,BYTE PTR [ebx+0xfbd0000]
  418734:	add    BYTE PTR [eax],al
  418736:	sahf   
  418737:	dec    BYTE PTR [edi-0x73]
  41873a:	stos   BYTE PTR es:[edi],al
  41873b:	sbb    al,BYTE PTR [edi-0x79dcd33d]
  418741:	add    BYTE PTR [ebx+eax*4],al
  418744:	ror    BYTE PTR [edi],0x78
  418747:	xor    dl,BYTE PTR [eax+eax*1]
  41874a:	hlt    
  41874b:	in     al,0x24
  41874d:	mov    edi,DWORD PTR [edx]
  41874f:	or     al,0x27
  418751:	enter  0xd5af,0xa
  418755:	xchg   DWORD PTR [ecx+0x4e00000f],ebx
  41875b:	add    edi,DWORD PTR [edx]
  41875d:	dec    esi
  41875e:	nop
  41875f:	pop    es
  418760:	sbb    DWORD PTR [edx],0x82ffffdb
  418766:	ins    BYTE PTR es:[edi],dx
  418767:	std    
  418768:	jae    0x418776
  41876a:	cs cmp edi,esi
  41876d:	cmp    edx,edi
  41876f:	sub    cl,BYTE PTR [eax*4+0x12229d]
  418776:	popf   
  418777:	mov    al,ds:0x63b66bc1
  41877c:	adc    eax,0x3a34c6e7
  418781:	std    
  418782:	mov    dh,0x8b
  418784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418785:	or     al,0x1f
  418787:	ltr    WORD PTR cs:[ebp+0x62fd1c52]
  41878f:	push   esp
  418790:	mov    cs,WORD PTR [esi-0x37]
  418793:	adc    BYTE PTR [ebx+0xd],bl
  418796:	add    BYTE PTR [eax],al
  418798:	sbb    DWORD PTR [ebx+0x3a],edx
  41879b:	std    
  41879c:	dec    edx
  41879d:	mov    al,0xbe
  41879f:	pop    ss
  4187a0:	sbb    BYTE PTR [ecx-0x53],ch
  4187a3:	and    dh,BYTE PTR [esi-0x6e]
  4187a6:	mov    dh,0xe
  4187a8:	(bad)  
  4187a9:	sub    ecx,edx
  4187ab:	mov    dl,bl
  4187ad:	std    
  4187ae:	mov    ecx,es
  4187b0:	xor    eax,0x9d0088ce
  4187b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b6:	inc    eax
  4187b7:	jae    0x418779
  4187b9:	pop    eax
  4187ba:	inc    ecx
  4187bb:	mov    DWORD PTR [eax+0x2d],ebx
  4187be:	mov    WORD PTR [esi+0x12921],cs
  4187c4:	add    al,0xdc
  4187c6:	sbb    DWORD PTR [eax],eax
  4187c8:	popf   
  4187c9:	mov    al,ds:0xf1b61bbe
  4187ce:	std    
  4187cf:	(bad)  
  4187d0:	push   0xffffffbc
  4187d2:	mov    cl,BYTE PTR [ecx]
  4187d4:	xchg   edi,eax
  4187d5:	pop    ebx
  4187d6:	in     eax,0x72
  4187d8:	mov    ebp,0x4eff38a7
  4187dd:	xor    DWORD PTR [ebx-0x3e0063bf],ecx
  4187e3:	sub    dh,BYTE PTR [eax]
  4187e5:	sbb    BYTE PTR [esi-0x3dffbeba],cl
  4187eb:	sbb    esp,DWORD PTR [esi+0x2]
  4187ee:	aas    
  4187ef:	mov    al,0xdb
  4187f1:	sub    BYTE PTR [ebp+0x39],dl
  4187f4:	cwde   
  4187f5:	xor    dl,dl
  4187f7:	fsqrt  
  4187f9:	mov    bh,0xe2
  4187fb:	test   BYTE PTR [eax],0x0
  4187fe:	arpl   WORD PTR [esi],bx
  418800:	jecxz  0x418800
  418802:	loopne 0x4187ae
  418804:	jne    0x418807
  418806:	es (bad) 
  418808:	cmc    
  418809:	mov    ebx,ebx
  41880b:	stos   BYTE PTR es:[edi],al
  41880c:	fnsave [ecx-0x24]
  41880f:	xor    DWORD PTR [edx-0x36],esi
  418812:	scas   al,BYTE PTR es:[edi]
  418813:	add    DWORD PTR [ebp-0x3fbc5af8],edx
  418819:	add    BYTE PTR [esp],bl
  41881c:	call   0x38e0711d
  418821:	sbb    dl,BYTE PTR [ecx+ecx*8]
  418824:	cmp    bh,BYTE PTR [edi+0x5d]
  418827:	mov    bh,0xd9
  418829:	cld    
  41882a:	xlat   BYTE PTR ds:[ebx]
  41882b:	cli    
  41882c:	xor    al,0xa
  41882e:	ins    BYTE PTR es:[edi],dx
  41882f:	push   esp
  418830:	sub    DWORD PTR [ebx+0x45e1cecb],ecx
  418836:	test   al,0x81
  418838:	pop    edx
  418839:	add    al,0x9d
  41883b:	add    bl,dl
  41883d:	inc    ebx
  41883e:	hlt    
  41883f:	adc    dh,dh
  418841:	jno    0x4187df
  418843:	jge    0x41885a
  418845:	lock test eax,0x3205eb78
  41884b:	sbb    esp,ebx
  41884d:	test   ch,bh
  41884f:	add    esi,DWORD PTR [ecx+0x11]
  418852:	pop    eax
  418853:	and    BYTE PTR [ecx-0x1],0x4f
  418857:	sti    
  418858:	sbb    DWORD PTR [esi-0x6c],edx
  41885b:	inc    ebx
  41885c:	fimul  WORD PTR [edi-0xb11e221]
  418862:	add    BYTE PTR [eax],al
  418864:	in     al,dx
  418865:	in     eax,dx
  418866:	daa    
  418867:	or     DWORD PTR [esi],ecx
  418869:	inc    ebp
  41886a:	add    BYTE PTR [edx+0x5b],ah
  41886d:	test   eax,eax
  41886f:	fisubr WORD PTR [edx]
  418871:	and    dh,cl
  418873:	es sub DWORD PTR fs:[ebx+0x1e],eax
  418878:	aam    0x2f
  41887a:	mov    DWORD PTR [edi+0x7d4e7bb6],ebp
  418880:	or     eax,DWORD PTR [ebx+0x74]
  418883:	loop   0x418806
  418885:	pop    eax
  418886:	jno    0x418845
  418888:	dec    eax
  418889:	xor    DWORD PTR [ebp+0x64],ecx
  41888c:	dec    edi
  41888d:	or     eax,0x4bb92a89
  418892:	test   ecx,ebp
  418894:	sahf   
  418895:	test   eax,eax
  418897:	out    dx,al
  418898:	fnsetpm(287 only) 
  41889a:	cld    
  41889b:	(bad)  
  41889c:	xchg   ebp,eax
  41889d:	sbb    esp,DWORD PTR [ebx]
  41889f:	bound  ebx,QWORD PTR [ebp+ecx*1+0x29]
  4188a3:	mov    cl,0x41
  4188a5:	pop    eax
  4188a6:	jne    0x418885
  4188a8:	sub    bl,bh
  4188aa:	cmp    DWORD PTR [edi],esp
  4188ac:	inc    ebp
  4188ad:	mov    ah,0x12
  4188af:	push   0x66
  4188b1:	xor    DWORD PTR [esi],ecx
  4188b3:	ins    DWORD PTR es:[edi],dx
  4188b4:	popf   
  4188b5:	das    
  4188b6:	std    
  4188b7:	sahf   
  4188b8:	sub    bl,al
  4188ba:	(bad)  
  4188bb:	rcr    ah,cl
  4188bd:	fisttp DWORD PTR [eiz*2-0x7902cf37]
  4188c4:	adc    DWORD PTR [ebx+0x41],eax
  4188c7:	ret    0x0
  4188ca:	fcomp  QWORD PTR [esp+ecx*1-0x2d24095]
  4188d1:	outs   dx,BYTE PTR ds:[esi]
  4188d2:	sbb    eax,ecx
  4188d4:	jnp    0x418942
  4188d6:	pop    esi
  4188d7:	inc    DWORD PTR [ebx-0x2d06bbb]
  4188dd:	adc    ch,dl
  4188df:	or     BYTE PTR ds:0xfd306967,cl
  4188e5:	add    BYTE PTR [ebx+0x36],bl
  4188e8:	mov    BYTE PTR [ecx+0x2d],0x3b
  4188ec:	pop    ecx
  4188ed:	cmp    eax,DWORD PTR [ebp+0x7acd8dfa]
  4188f3:	jmp    0xc7e6:0x4d806afa
  4188fa:	mov    edx,0x4a3bfaea
  4188ff:	push   0xb26bd170
  418904:	dec    BYTE PTR [edx-0x9bfdfb6]
  41890a:	cmp    ah,0x3
  41890d:	jmp    0x3c72b3
  418912:	das    
  418913:	dec    edx
  418914:	imul   esi,DWORD PTR [ebx+0x38],0xcf03b608
  41891b:	dec    eax
  41891c:	xor    DWORD PTR [ebx+0x72],eax
  41891f:	add    ecx,DWORD PTR [eax]
  418921:	add    al,0x6b
  418923:	mov    al,0x99
  418925:	(bad)  
  418926:	pop    ebx
  418927:	clc    
  418928:	in     al,0x87
  41892a:	stc    
  41892b:	idiv   edx
  41892d:	cmp    eax,DWORD PTR [eax]
  41892f:	add    BYTE PTR [edx+0x4ba1705a],cl
  418935:	sahf   
  418936:	dec    BYTE PTR [edx-0x9bfcd96]
  41893c:	add    ah,bh
  41893e:	cld    
  41893f:	call   0x3c81b5
  418944:	out    dx,eax
  418945:	push   ebp
  418946:	imul   esi,DWORD PTR [ebx-0x78],0x6f03b607
  41894d:	dec    eax
  41894e:	xor    DWORD PTR [ebx+0x72],eax
  418951:	add    cl,BYTE PTR [eax]
  418953:	add    DWORD PTR [edi],ebx
  418955:	leave  
  418956:	ss pop esi
  418958:	enter  0x7f08,0x76
  41895c:	jnp    0x418955
  41895e:	cli    
  41895f:	setge  BYTE PTR [edi+0x155b8901]
  418966:	shl    ebp,0x99
  418969:	xor    DWORD PTR [ecx],edx
  41896b:	out    0x27,eax
  41896d:	lock xor al,0xfd
  418970:	jbe    0x418909
  418972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418973:	or     al,0x1e
  418975:	jg     0x4189ad
  418977:	std    
  418978:	mov    ds:0x26016b38,al
  41897d:	pop    edi
  41897e:	in     eax,dx
  41897f:	inc    eax
  418980:	mov    ebx,DWORD PTR ds:0xa0761009
  418986:	mov    BYTE PTR [esi-0xf],cl
  418989:	inc    esp
  41898a:	pop    esp
  41898b:	or     eax,0xfd36661e
  418990:	jb     0x4189ba
  418992:	imul   eax,DWORD PTR [ecx],0x0
  418995:	add    dh,bl
  418997:	pushf  
  418998:	cmp    ecx,DWORD PTR [edx]
  41899a:	xchg   edx,eax
  41899b:	popf   
  41899c:	sbb    edi,ebx
  41899e:	pop    edx
  41899f:	push   eax
  4189a0:	push   es
  4189a1:	xchg   BYTE PTR [edi+edx*2+0x36],bh
  4189a5:	std    
  4189a6:	push   ds
  4189a7:	push   ecx
  4189a8:	add    eax,0x389c7f76
  4189ad:	or     esi,DWORD PTR [ecx-0x627d0902]
  4189b3:	sbb    DWORD PTR [ecx],eax
  4189b5:	je     0x41894a
  4189b7:	push   ds
  4189b8:	ficomp WORD PTR [edi]
  4189ba:	popf   
  4189bb:	sbb    DWORD PTR [esi],eax
  4189bd:	xchg   BYTE PTR [eax-0x2f02c971],ah
  4189c3:	inc    edx
  4189c4:	loope  0x4189c5
  4189c6:	or     dl,BYTE PTR [eax+0x7e]
  4189c9:	cli    
  4189ca:	add    BYTE PTR [eax+0x41dd3136],cl
  4189d0:	mov    ebx,0x339ea25f
  4189d5:	sti    
  4189d6:	jmp    0x6601:0xe1dc2b9f
  4189dd:	ss xchg esp,eax
  4189df:	dec    ecx
  4189e0:	out    dx,al
  4189e1:	sub    cl,0x2d
  4189e4:	push   esi
  4189e5:	ss sbb eax,0x1e06e0eb
  4189eb:	cmp    eax,DWORD PTR [ebx+0x36]
  4189ee:	mov    eax,0xb1404fc2
  4189f3:	cs ss cli 
  4189f6:	dec    eax
  4189f7:	sahf   
  4189f8:	fld    QWORD PTR [edx+0x2fc40000]
  4189fe:	es ss test al,0x74
  418a02:	jmp    0xdc03:0xe70aa37c
  418a09:	jmp    0xfdf93835
  418a0e:	push   0x6e
  418a10:	jbe    0x418a40
  418a12:	inc    BYTE PTR [ecx+0x7fe5fc75]
  418a18:	cmp    esi,DWORD PTR [eax]
  418a1a:	out    dx,al
  418a1b:	xor    eax,0x5072b1c
  418a20:	and    DWORD PTR [eax-0x24],ebp
  418a23:	xor    eax,0x486f050
  418a28:	popf   
  418a29:	add    bl,dh
  418a2b:	jg     0x418a54
  418a2d:	xor    dh,al
  418a2f:	xor    eax,0x3d58276
  418a34:	popf   
  418a35:	sbb    esi,DWORD PTR [edi-0x13d1d7ca]
  418a3b:	add    edi,DWORD PTR [ebp+0x2]
  418a3e:	out    0x4,eax
  418a40:	pop    ds
  418a41:	mov    dh,0x9a
  418a43:	xor    eax,0xe3e0f010
  418a48:	or     ch,BYTE PTR [esi]
  418a4a:	fidivr WORD PTR [ebp-0x79]
  418a4d:	das    
  418a4e:	xchg   BYTE PTR ds:0x3c6ddb6,dh
  418a54:	popf   
  418a55:	std    
  418a56:	jmp    FWORD PTR [eax+eax*2+0x29]
  418a5a:	std    
  418a5b:	outs   dx,BYTE PTR ds:[esi]
  418a5c:	jmp    0x9e00:0xe91fce
  418a63:	inc    DWORD PTR [ebx-0x2d0743b]
  418a69:	adc    al,0xa1
  418a6b:	repnz (bad) 
  418a6d:	call   0x473ff2e9
  418a72:	jo     0x418a5f
  418a74:	pop    ebp
  418a75:	int    0x99
  418a77:	and    DWORD PTR [edx+0x37],0x70
  418a7b:	das    
  418a7c:	or     eax,0xe759c77
  418a81:	add    DWORD PTR [ecx-0x201dbefe],esp
  418a87:	mov    bh,0x2a
  418a89:	out    0xa,al
  418a8b:	repz sti 
  418a8d:	push   cs
  418a8e:	enter  0xf883,0xf0
  418a92:	mov    eax,ds:0xa9fd2586
  418a97:	das    
  418a98:	xor    ecx,0xcf83fe7e
  418a9e:	stos   BYTE PTR es:[edi],al
  418a9f:	das    
  418aa0:	std    
  418aa1:	and    al,0xc1
  418aa3:	add    al,BYTE PTR [eax]
  418aa5:	jmp    0xd5531143
  418aaa:	xchg   ecx,eax
  418aab:	das    
  418aac:	cmp    ebp,DWORD PTR [ecx-0x70]
  418aaf:	add    al,BYTE PTR [eax]
  418ab1:	shl    BYTE PTR [edx+0x28],1
  418ab4:	std    
  418ab5:	mov    esi,0xe91d2d2b
  418aba:	sahf   
  418abb:	inc    DWORD PTR [ecx-0x2d09423]
  418ac1:	in     al,0xa4
  418ac3:	loop   0x418ac4
  418ac5:	call   0x84da8aca
  418aca:	icebp  
  418acb:	xchg   edx,eax
  418acc:	shr    DWORD PTR [edi],1
  418ace:	cmp    edi,DWORD PTR [esi+0xfd2cfe]
  418ad4:	rep lods al,BYTE PTR ds:[esi]
  418ad6:	out    0xfb,eax
  418ad8:	jae    0x418ad0
  418ada:	cmp    BYTE PTR [edi-0x2c],bl
  418add:	add    BYTE PTR [eax],al
  418adf:	vmread esp,edx
  418ae2:	idiv   bh
  418ae4:	inc    ebx
  418ae5:	xor    al,0xfd
  418ae7:	das    
  418ae8:	les    eax,FWORD PTR [eax]
  418aea:	in     eax,0x16
  418aec:	jno    0x418ae4
  418aee:	cli    
  418aef:	cmp    esi,edx
  418af1:	fs or  al,0x83
  418af4:	dec    ebp
  418af5:	hlt    
  418af6:	cli    
  418af7:	inc    ebx
  418af9:	sahf   
  418afa:	inc    BYTE PTR [edx+0x37]
  418afd:	jmp    0xb4779a0b
  418b02:	idiv   bh
  418b04:	ret    
  418b05:	cmp    al,0xd
  418b08:	sub    DWORD PTR [esi-0x94c033f],0x38
  418b0f:	test   DWORD PTR [eax+eax*1+0x0],esi
  418b13:	invd   
  418b15:	lahf   
  418b16:	sti    
  418b17:	push   DWORD PTR [ebx+0x36]
  418b1a:	and    al,0x20
  418b1c:	je     0x418b1e
  418b1e:	or     eax,DWORD PTR [esi-0x5152e]
  418b24:	or     DWORD PTR [ebp+0x1d],0x86014400
  418b2b:	mov    eax,ds:0xf0700000
  418b30:	cli    
  418b31:	jmp    0x3c6718
  418b36:	lahf   
  418b37:	push   eax
  418b38:	imul   ecx,DWORD PTR [edi],0xfff89ac7
  418b3e:	repz push DWORD PTR [ebp-0x77c88fd]
  418b45:	or     dl,BYTE PTR [ebx]
  418b47:	xchg   BYTE PTR [esi+0x7ef033fc],al
  418b4d:	clc    
  418b4e:	popf   
  418b4f:	add    al,BYTE PTR es:[esi-0x2ce6f8e]
  418b56:	mov    eax,0x9d00039e
  418b5b:	sbb    al,0x85
  418b5d:	fs out 0xb4,al
  418b60:	xor    BYTE PTR [ebx],bh
  418b62:	mov    edx,0xaa000139
  418b67:	fwait
  418b68:	test   al,0xfb
  418b6a:	ror    ah,cl
  418b6c:	out    dx,al
  418b6d:	es jge 0x418b89
  418b70:	add    DWORD PTR ds:0xfd2d5e1a,ecx
  418b76:	mov    edx,0xb2f8bad2
  418b7b:	in     al,dx
  418b7c:	add    BYTE PTR [esi-0x49fde59e],dh
  418b82:	push   edx
  418b83:	pop    ss
  418b84:	inc    esp
  418b85:	loopne 0x418b2c
  418b87:	xor    BYTE PTR [ecx+eax*1+0x5d],al
  418b8b:	cwde   
  418b8c:	dec    eax
  418b8d:	add    DWORD PTR [esi+ebx*2],edx
  418b90:	xor    DWORD PTR [ecx],edi
  418b92:	add    BYTE PTR [eax],al
  418b94:	fsubr  DWORD PTR [ecx]
  418b96:	mov    al,0x10
  418b98:	es jae 0x418b98
  418b9b:	mov    bl,BYTE PTR [ecx+0x20087c9a]
  418ba1:	loop   0x418b4e
  418ba3:	add    al,0x16
  418ba5:	mov    DWORD PTR ds:0x506c29,eax
  418bab:	xor    DWORD PTR [edi-0x1e],ebp
  418bae:	fld    DWORD PTR [edi-0x30]
  418bb1:	sbb    edi,DWORD PTR [esi+0x56]
  418bb4:	mov    cl,0x0
  418bb6:	push   ebp
  418bb7:	inc    edx
  418bb8:	daa    
  418bb9:	sbb    al,0x7c
  418bbb:	push   ebx
  418bbc:	sub    DWORD PTR ds:0x8f1f0cc7,ebp
  418bc2:	add    DWORD PTR [eax],eax
  418bc4:	popf   
  418bc5:	sbb    eax,0x26175be
  418bca:	jecxz  0x418b8c
  418bcc:	mov    eax,ds:0x9d03ad83
  418bd1:	add    ah,dh
  418bd3:	jns    0x418c3d
  418bd5:	push   es
  418bd6:	fidivr DWORD PTR [ecx+edi*4]
  418bd9:	mov    ebp,0x5879f5
  418bde:	out    dx,al
  418bdf:	xchg   edi,eax
  418be0:	sub    bh,BYTE PTR [ecx+0x24]
  418be3:	and    BYTE PTR [eax+0x1a051e74],dl
  418be9:	and    edi,ebp
  418beb:	(bad)  
  418bec:	(bad)  
  418bee:	xchg   esp,eax
  418bef:	retf   0x419d
  418bf2:	inc    edi
  418bf3:	sti    
  418bf4:	xchg   ebp,eax
  418bf5:	inc    eax
  418bf6:	pusha  
  418bf7:	rol    BYTE PTR [eax],0x0
  418bfa:	mov    dh,0x78
  418bfc:	lods   al,BYTE PTR ds:[esi]
  418bfd:	sub    ebp,DWORD PTR [esi]
  418bff:	cli    
  418c00:	jle    0x418c34
  418c02:	test   al,0x2a
  418c04:	mov    dh,0x7c
  418c06:	pop    esi
  418c07:	sub    ah,BYTE PTR [edx-0x28]
  418c0a:	mov    es,WORD PTR [esi-0x277bf7d2]
  418c10:	in     eax,dx
  418c11:	jns    0x418c70
  418c13:	js     0x418bb4
  418c15:	ins    DWORD PTR es:[edi],dx
  418c16:	sbb    al,0x24
  418c18:	call   0xf6587299
  418c1d:	jno    0x418c44
  418c1f:	gs mov ebx,es
  418c22:	push   0xfffffff9
  418c24:	xor    al,0x83
  418c26:	aaa    
  418c27:	cwde   
  418c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c29:	add    esp,eax
  418c2b:	jnp    0x418c61
  418c2d:	xor    BYTE PTR [edx],bl
  418c2f:	rcr    dh,0x87
  418c32:	pop    ebp
  418c33:	mov    al,0xde
  418c35:	imul   eax,DWORD PTR [eax+0x2a],0xffffffce
  418c39:	mov    cl,0x23
  418c3b:	sar    BYTE PTR [esi+0x62fa4f87],0xdb
  418c42:	cmp    ch,BYTE PTR [edx]
  418c44:	add    BYTE PTR [esi+0x60425428],dh
  418c4a:	repnz adc eax,0xd84db339
  418c50:	cld    
  418c51:	adc    al,0x99
  418c53:	jnp    0x418ca8
  418c55:	popf   
  418c56:	int3   
  418c57:	mov    ch,0xef
  418c59:	bound  esp,QWORD PTR [edi+0x7b]
  418c5c:	leave  
  418c5d:	xchg   ecx,eax
  418c5e:	add    BYTE PTR [eax],al
  418c60:	adc    edx,DWORD PTR [edi]
  418c62:	std    
  418c63:	jle    0x418c87
  418c65:	inc    ebx
  418c66:	or     eax,0x152a6d
  418c6b:	jmp    0x67355a11
  418c70:	ficom  DWORD PTR ds:0xebb2a489
  418c76:	inc    edx
  418c77:	push   ebp
  418c78:	rsqrtps xmm1,XMMWORD PTR [ecx+0x437b8a9c]
  418c7f:	inc    ecx
  418c80:	rol    BYTE PTR [ecx+0xd],0x65
  418c84:	xchg   BYTE PTR [edi],dl
  418c86:	std    
  418c87:	sbb    BYTE PTR ss:[esi+0x7e9de9eb],ch
  418c8e:	mov    ebx,0x89029efd
  418c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c94:	mov    edx,0x1fd4381
  418c99:	(bad)  
  418c9a:	and    ebp,DWORD PTR [ecx-0x66dc3a09]
  418ca0:	xchg   edi,eax
  418ca1:	adc    BYTE PTR [ecx+ebp*8],0x9e
  418ca5:	daa    
  418ca6:	jae    0x418c79
  418ca8:	loope  0x418c7f
  418caa:	repz out dx,al
  418cac:	adc    ebx,DWORD PTR [ecx]
  418cae:	mov    DWORD PTR [edi-0x917c42f],ebp
  418cb4:	jge    0x418cdd
  418cb6:	std    
  418cb7:	ins    BYTE PTR es:[edi],dx
  418cb8:	fdivrp st(7),st
  418cba:	or     DWORD PTR [ebx],0xffffff92
  418cbd:	add    al,BYTE PTR [eax]
  418cbf:	add    BYTE PTR [edi+0x38],al
  418cc2:	icebp  
  418cc3:	jmp    0xe24f8cc8
  418cc8:	cli    
  418cc9:	(bad)  
  418cca:	mov    ecx,0x4382fe3a
  418ccf:	and    al,0x86
  418cd1:	inc    ebp
  418cd2:	xor    BYTE PTR [edi+0x70c23c02],ah
  418cd8:	push   0x3c
  418cda:	mov    edi,0x993c3a6c
  418cdf:	imul   esp,DWORD PTR [edx+0xf],0xffffffb2
  418ce3:	dec    edx
  418ce4:	add    DWORD PTR [ebx],esi
  418ce6:	sub    eax,0xa20f4a19
  418ceb:	cmp    bh,bh
  418ced:	push   cs
  418cee:	jo     0x418cb4
  418cf0:	test   BYTE PTR [ebp+0x68],cl
  418cf3:	add    dh,BYTE PTR [esi-0x233c4ab1]
  418cf9:	or     BYTE PTR [edi+0x3b60aec],bh
  418cff:	(bad)  
  418d00:	mov    esp,0xbf25ace0
  418d05:	mov    ecx,edi
  418d07:	fadd   DWORD PTR [ebp+eax*2-0x47fa8f94]
  418d0e:	retf   
  418d0f:	repnz cli 
  418d11:	jg     0x418d20
  418d13:	inc    ecx
  418d14:	cmc    
  418d15:	add    ebx,0x0
  418d18:	out    0x37,eax
  418d1a:	jnp    0x418cc6
  418d1c:	mov    edi,0x7e963c8d
  418d21:	loope  0x418ca8
  418d23:	lods   eax,DWORD PTR ds:[esi]
  418d24:	dec    eax
  418d25:	in     al,dx
  418d26:	jnp    0x418cda
  418d28:	xchg   DWORD PTR [edx+0x44190000],esp
  418d2e:	std    
  418d2f:	push   cs
  418d30:	mov    al,BYTE PTR [ebx-0x17b9256]
  418d36:	inc    edx
  418d37:	mov    DWORD PTR [ecx-0xe],edi
  418d3a:	test   BYTE PTR [ebp-0x63],al
  418d3d:	push   ecx
  418d3e:	xchg   eax,eax
  418d40:	mov    al,0x2b
  418d42:	imul   edi,ebp,0xe8ad4132
  418d48:	xchg   ebp,eax
  418d49:	sub    al,0x3c
  418d4b:	aas    
  418d4c:	push   ss
  418d4d:	pop    ebx
  418d4e:	jnp    0x418d9b
  418d50:	sbb    DWORD PTR [ebx+0x6bcef7c6],esp
  418d56:	ret    0x7086
  418d59:	sub    eax,0x4781c9ea
  418d5e:	jmp    0xf689:0x8248895d
  418d65:	sub    BYTE PTR ds:0x7a1d330d,0xc8
  418d6c:	scas   al,BYTE PTR es:[edi]
  418d6d:	mov    eax,DWORD PTR [ecx+0x50dba2df]
  418d73:	loop   0x418d9b
  418d75:	outs   dx,DWORD PTR ds:[esi]
  418d76:	xor    eax,0x771cb5bf
  418d7b:	add    al,0x95
  418d7d:	pop    esp
  418d7e:	test   eax,edx
  418d80:	stos   BYTE PTR es:[edi],al
  418d81:	popf   
  418d82:	enter  0xb2f9,0xc0
  418d86:	sub    al,0x43
  418d88:	xchg   ecx,eax
  418d89:	mov    ah,0xbe
  418d8b:	sti    
  418d8c:	fs pop esi
  418d8e:	adc    eax,0x6800007e
  418d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d94:	(bad)  
  418d95:	not    esi
  418d97:	icebp  
  418d98:	cld    
  418d99:	and    DWORD PTR [esi-0x9],0x2c
  418d9d:	std    
  418d9e:	push   ds
  418d9f:	mov    ds,WORD PTR ds:0x15862400
  418da5:	or     eax,0x17d719
  418daa:	popf   
  418dab:	mov    ah,0xc6
  418dad:	and    ebx,ebp
  418daf:	mov    ds:0x2ed23c6,al
  418db4:	xchg   edi,eax
  418db5:	adc    al,0x9d
  418db7:	add    ah,bh
  418db9:	jp     0x418d9e
  418dbb:	xchg   esi,eax
  418dbc:	sbb    DWORD PTR ds:0xeb284374,edi
  418dc2:	sti    
  418dc3:	neg    BYTE PTR [edx-0x15]
  418dc6:	pop    DWORD PTR [edx]
  418dc8:	out    0x79,eax
  418dca:	pushf  
  418dcb:	ret    
  418dcc:	inc    dh
  418dce:	and    edi,eax
  418dd0:	imul   edi,esi,0x14
  418dd3:	daa    
  418dd4:	scas   al,BYTE PTR es:[edi]
  418dd5:	sbb    al,0x8b
  418dd7:	xor    esp,DWORD PTR [esi+0xac0142e]
  418ddd:	repz fcmovnu st,st(2)
  418de0:	test   eax,0xde41b5c4
  418de5:	jg     0x418d6f
  418de7:	or     eax,0x709803e7
  418dec:	fidivr DWORD PTR [edx+0x5b]
  418def:	repnz in eax,0x75
  418df2:	push   0x176101
  418df7:	add    BYTE PTR [edi-0x35e7e13d],bl
  418dfd:	sbb    edi,DWORD PTR [ecx]
  418dff:	dec    BYTE PTR [eax]
  418e01:	mov    edi,0xb6f0fee7
  418e06:	call   0xf23b4b4f
  418e0b:	inc    esp
  418e0c:	and    bh,BYTE PTR [ebp+0x2d8823a]
  418e12:	inc    edx
  418e13:	mov    cl,0x61
  418e15:	shl    BYTE PTR [esi],0x4
  418e18:	popf   
  418e19:	add    ah,bh
  418e1b:	(bad)  
  418e1c:	push   eax
  418e1d:	mov    esi,0xce48fee7
  418e22:	call   0xe7688ca9
  418e27:	inc    esp
  418e28:	jge    0x418e25
  418e2a:	icebp  
  418e2b:	inc    ecx
  418e2c:	lods   al,BYTE PTR ds:[esi]
  418e2d:	push   eax
  418e2e:	addr16 sub al,0xbb
  418e31:	cmc    
  418e32:	call   FWORD PTR [esp+ebx*8+0x7d]
  418e36:	push   ebx
  418e37:	std    
  418e38:	mov    ah,0x4c
  418e3a:	or     DWORD PTR [ebp+ecx*4+0x2],0x258924c5
  418e42:	std    
  418e43:	jmp    0x142a4de6
  418e48:	sub    al,0x66
  418e4a:	inc    eax
  418e4b:	jo     0x418eaf
  418e4d:	push   ss
  418e4e:	xchg   DWORD PTR [ebp*2+0x426af21b],esp
  418e55:	sub    al,BYTE PTR [eax]
  418e57:	cli    
  418e58:	pop    esi
  418e59:	ret    0x2c86
  418e5c:	add    BYTE PTR [eax],al
  418e5e:	sar    DWORD PTR [edi-0x457c3918],1
  418e64:	fisubr WORD PTR [edx-0x42]
  418e67:	and    eax,0xf7bd1c88
  418e6c:	mov    ebp,0x3f99a671
  418e71:	jmp    0x98c1f657
  418e76:	cmp    ah,dh
  418e78:	jmp    DWORD PTR ds:0x70fbb956
  418e7e:	loop   0x418ead
  418e80:	sub    DWORD PTR [ecx],0xa
  418e83:	(bad)  
  418e84:	mov    bh,0x56
  418e86:	mov    BYTE PTR [edi],ah
  418e88:	jge    0x418eea
  418e8a:	fisubr DWORD PTR ds:0xbf907f0d
  418e90:	cmc    
  418e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e92:	xchg   esi,eax
  418e93:	and    eax,0xf7d29c88
  418e98:	add    DWORD PTR [ebp-0x67],0x2
  418e9c:	add    BYTE PTR [edx+0x4b],dh
  418e9f:	aad    0xc
  418ea1:	push   edi
  418ea2:	popf   
  418ea3:	cmc    
  418ea4:	xor    BYTE PTR [ebx],bh
  418ea6:	idiv   BYTE PTR [ecx+0x293262f3]
  418eac:	inc    edx
  418ead:	add    ch,ch
  418eaf:	dec    ebp
  418eb0:	adc    DWORD PTR [ebx],edi
  418eb2:	scas   al,BYTE PTR es:[edi]
  418eb3:	jb     0x418edf
  418eb5:	jmp    0x418efe
  418eb7:	xor    cl,bh
  418eb9:	inc    edx
  418eba:	getsec 
  418ebc:	imul   ecx,DWORD PTR [edi],0x1134b7
  418ec2:	add    BYTE PTR [eax],al
  418ec4:	xor    al,0x26
  418ec6:	mov    bl,0x13
  418ec8:	mov    edi,0xa0f2d67
  418ecd:	and    eax,0x659d4307
  418ed2:	icebp  
  418ed3:	ud1    edx,DWORD PTR [edx]
  418ed6:	cmc    
  418ed7:	call   DWORD PTR [ebx-0x2a]
  418eda:	inc    eax
  418edb:	adc    al,0x7f
  418edd:	fs stc 
  418edf:	cmp    ecx,edx
  418ee1:	or     bh,BYTE PTR [esi-0x2b]
  418ee4:	(bad)  
  418ee5:	call   0x4bc12f4
  418eea:	sti    
  418eeb:	inc    DWORD PTR [edi-0xcff16ac]
  418ef1:	jnp    0x418f3d
  418ef3:	adc    al,0xf4
  418ef5:	add    BYTE PTR [ebp-0x3ae5afa3],al
  418efb:	jge    0x418efd
  418efd:	test   al,0x48
  418eff:	adc    al,0x7f
  418f01:	xor    al,0x69
  418f03:	jae    0x418ea3
  418f05:	daa    
  418f06:	mov    bl,0x13
  418f08:	aas    
  418f09:	addr16 sub eax,0x7250a0f
  418f0f:	cmp    ecx,esi
  418f11:	in     al,dx
  418f12:	jo     0x418f39
  418f14:	not    ebp
  418f16:	inc    eax
  418f17:	adc    al,0x8d
  418f19:	cmp    eax,0xae77c11
  418f1e:	sbb    cl,BYTE PTR [ebx-0x3f7dabc6]
  418f24:	sub    BYTE PTR [ebx],dl
  418f26:	aaa    
  418f27:	pop    ebp
  418f28:	add    BYTE PTR [eax],al
  418f2a:	popf   
  418f2b:	and    DWORD PTR [ebx-0x3e1d51f3],esi
  418f31:	xchg   bl,bl
  418f33:	pop    ebp
  418f34:	call   0x22d621f7
  418f39:	neg    DWORD PTR [edx+0x2d]
  418f3c:	jge    0x418fb9
  418f3e:	dec    ebp
  418f3f:	sbb    bh,ah
  418f41:	or     BYTE PTR [edx-0x7902d6b2],0xe6
  418f48:	daa    
  418f49:	or     eax,0xfd2c7a1f
  418f4e:	xor    ah,BYTE PTR [ecx-0x4d22dc42]
  418f54:	mov    esi,0xdfef2223
  418f59:	mov    dl,dh
  418f5b:	mov    edi,0x3588fd03
  418f60:	jle    0x418f2b
  418f62:	or     al,BYTE PTR [edi]
  418f64:	or     al,0x56
  418f66:	add    cl,BYTE PTR [edi]
  418f68:	adc    al,0xfd
  418f6a:	jo     0x418f89
  418f6c:	sub    dh,BYTE PTR [ebx-0x5b]
  418f6f:	adc    DWORD PTR [esi-0x14],0x82bd7cea
  418f76:	fst    QWORD PTR [eax+eax*4]
  418f79:	iret   
  418f7a:	mov    bl,0x19
  418f7c:	add    DWORD PTR [ecx],edi
  418f7e:	jo     0x418f15
  418f80:	mov    ah,0xd3
  418f82:	mov    ah,0x51
  418f84:	sub    ebp,edi
  418f86:	ret    0xb6b0
  418f89:	sti    
  418f8a:	loop   0x418fe2
  418f8c:	or     eax,0xb20000ff
  418f91:	sbb    DWORD PTR [ecx],eax
  418f93:	and    DWORD PTR [edx+ebx*1-0x7c99e15b],0x3a1e0c95
  418f9e:	sub    al,0xfd
  418fa0:	xchg   edx,eax
  418fa1:	inc    esp
  418fa2:	outs   dx,DWORD PTR ds:[esi]
  418fa3:	or     esi,ebx
  418fa5:	add    ah,al
  418fa7:	mov    eax,0xc763f38e
  418fac:	jb     0x418fd1
  418fae:	push   ss
  418faf:	sub    ebx,esi
  418fb1:	push   cs
  418fb2:	bound  edi,QWORD PTR [ecx+0xfb3e966]
  418fb8:	jecxz  0x418ffd
  418fba:	ret    0xa83b
  418fbd:	jle    0x418fec
  418fbf:	sbb    BYTE PTR [eax+0x23],dl
  418fc2:	push   0xffffffa9
  418fc4:	add    dh,BYTE PTR ss:[eax-0x48]
  418fc8:	scas   al,BYTE PTR es:[edi]
  418fc9:	repz arpl WORD PTR [edx-0x74],dx
  418fcd:	add    ah,bh
  418fcf:	jl     0x418fa7
  418fd1:	adc    bh,BYTE PTR es:[esi+eiz*4]
  418fd5:	lock add edx,ecx
  418fd8:	mov    dh,0xaf
  418fda:	fsqrt  
  418fdc:	push   eax
  418fdd:	imul   edi
  418fdf:	mov    eax,0xc703ad0e
  418fe4:	or     DWORD PTR [ebp+0xe5fecfa],edi
  418fea:	sbb    ebx,DWORD PTR [esi]
  418fec:	add    al,0x8
  418fee:	(bad)
  418ff3:	scas   eax,DWORD PTR es:[edi]
  418ff4:	add    BYTE PTR [eax],al
  418ff6:	(bad)  
  418ff7:	out    0x23,eax
  418ff9:	cld    
  418ffa:	push   0x9a3cb9f4
  418fff:	jns    0x419026
  419001:	enter  0x4195,0xde
  419005:	jp     0x418fad
  419007:	sub    DWORD PTR [esi+0x2a],esp
  41900a:	sbb    al,0xa5
  41900c:	push   esi
  41900d:	add    ebp,DWORD PTR [eax-0x4fe82283]
  419013:	and    dl,BYTE PTR [edx]
  419015:	leave  
  419016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419017:	repnz push 0x3e22a852
  41901d:	jle    0x418ffd
  41901f:	out    0xff,al
  419021:	test   al,0x11
  419023:	(bad)  
  419024:	and    ebp,DWORD PTR [esi]
  419026:	dec    ebp
  419027:	out    0x88,al
  419029:	and    BYTE PTR ds:[edx],ah
  41902c:	(bad)  
  41902d:	xchg   esp,eax
  41902e:	mov    ds:0x2d16c98b,al
  419033:	cli    
  419034:	push   ebp
  419035:	push   cs
  419036:	sub    eax,0x6a7cfd12
  41903b:	pop    ds
  41903c:	jae    0x41902f
  41903e:	mov    dh,0x9
  419040:	in     al,dx
  419041:	test   BYTE PTR [ebx+ecx*8-0x7ab8d67e],0x8
  419049:	call   FWORD PTR [esi-0x7ac3c6fe]
  41904f:	xchg   ebx,eax
  419050:	rol    eax,cl
  419052:	and    al,0x18
  419054:	std    
  419055:	into   
  419056:	cmp    al,al
  419058:	imul   esi,esi,0x0
  41905b:	add    BYTE PTR [ecx],bl
  41905d:	push   0xfc4bef8
  419062:	mov    dh,0xe2
  419064:	fst    DWORD PTR [edi]
  419066:	inc    ebx
  419067:	rcr    DWORD PTR [edi-0x208de76a],1
  41906d:	icebp  
  41906e:	or     al,0x57
  419070:	int3   
  419071:	and    BYTE PTR [edi-0x3a7d091b],al
  419077:	jmp    0x41906f
  419079:	or     eax,0xe63f602
  41907e:	in     al,dx
  41907f:	jle    0x419005
  419081:	sub    DWORD PTR [edi+0x7e],ebp
  419084:	test   BYTE PTR [edi],bl
  419086:	or     eax,0x8220dc37
  41908b:	fstp   TBYTE PTR cs:[esi-0x49f064ae]
  419093:	scas   al,BYTE PTR es:[edi]
  419094:	lahf   
  419095:	movzx  ebx,BYTE PTR [esi+0xe061a0]
  41909c:	lods   al,BYTE PTR ds:[esi]
  41909d:	push   ds
  41909e:	mov    esi,0x7ee94189
  4190a3:	mov    DWORD PTR [edi+0x740080fc],0x33b60b05
  4190ad:	add    al,0xb
  4190af:	mov    dh,0x33
  4190b1:	pop    es
  4190b2:	jg     0x419119
  4190b4:	mov    BYTE PTR [esi],al
  4190b6:	mov    ebp,0xbf1e7ce0
  4190bb:	xor    eax,DWORD PTR [esi+0x33f586]
  4190c1:	add    BYTE PTR [ebx-0x6f],cl
  4190c4:	ret    0x3189
  4190c7:	stc    
  4190c8:	out    0xda,al
  4190ca:	mov    bh,0x81
  4190cc:	stc    
  4190cd:	add    bl,dh
  4190cf:	pop    edi
  4190d0:	in     eax,dx
  4190d1:	add    DWORD PTR [ebp+eax*1+0x0],eax
  4190d5:	inc    edi
  4190d6:	pop    edi
  4190d7:	push   ecx
  4190d8:	xor    al,al
  4190da:	je     0x419079
  4190dc:	inc    eax
  4190dd:	lock lods eax,DWORD PTR ds:[esi]
  4190df:	pusha  
  4190e0:	stc    
  4190e1:	jmp    0x419139
  4190e3:	xchg   BYTE PTR [ecx-0x4],ah
  4190e6:	add    al,0x16
  4190e8:	mov    ebp,0xed607d40
  4190ed:	inc    edi
  4190ee:	das    
  4190ef:	inc    esp
  4190f0:	or     al,0xb6
  4190f2:	ret    
  4190f3:	add    eax,0x8bbb60b
  4190f8:	jg     0x41915f
  4190fa:	sbb    BYTE PTR ds:0xc1ece0bd,al
  419100:	inc    eax
  419101:	lock lds eax,FWORD PTR [eax+eax*1]
  419105:	add    BYTE PTR [edi+0x699ae6c3],bh
  41910b:	pop    ebp
  41910c:	rol    DWORD PTR [ebx+0x4d850455],1
  419112:	push   0x9d88bb1a
  419117:	ja     0x4190af
  419119:	aas    
  41911a:	popf   
  41911b:	inc    eax
  41911c:	addr16 sbb cl,0x35
  419120:	sar    edi,0xe3
  419123:	xchg   edx,eax
  419124:	mov    ch,0xfb
  419126:	add    BYTE PTR [eax],al
  419128:	and    al,0x6f
  41912a:	sub    DWORD PTR [ebx-0x4806a8a3],eax
  419130:	sub    cl,0x27
  419133:	jge    0x419159
  419135:	sub    DWORD PTR [di],ecx
  419138:	sub    esp,DWORD PTR [ecx]
  41913a:	shl    ch,0xe0
  41913d:	adc    DWORD PTR [edx],eax
  41913f:	xchg   eax,ecx
  419141:	sbb    eax,0x2a4183f5
  419146:	add    DWORD PTR [eax],eax
  419148:	es push 0x3e130cf1
  41914e:	adc    dh,BYTE PTR [ecx]
  419150:	outs   dx,DWORD PTR ds:[esi]
  419151:	xchg   ebx,eax
  419152:	mov    dh,0xf3
  419154:	es out dx,eax
  419156:	daa    
  419157:	inc    edx
  419158:	and    al,0xdf
  41915a:	(bad)  
  41915c:	push   edi
  41915d:	into   
  41915e:	(bad)  
  41915f:	call   0x4290ae02
  419164:	(bad)  
  419165:	call   DWORD PTR [edi+0x13701e0c]
  41916b:	add    BYTE PTR [ebp+0x16116b40],bl
  419171:	fdiv   st,st(3)
  419173:	or     al,0x33
  419175:	test   DWORD PTR cs:[eax-0x4c],0x210d2fe6
  41917d:	push   cs
  41917e:	cs std 
  419180:	loop   0x41910a
  419182:	mov    edi,0x27ef2613
  419187:	aaa    
  419188:	pusha  
  419189:	cmp    eax,0xd2a3
  41918e:	xchg   BYTE PTR [ecx-0xb],ah
  419191:	add    edx,0x2
  419194:	push   ecx
  419195:	daa    
  419196:	mov    eax,0x9d17dc83
  41919b:	mov    DWORD PTR [edi+ecx*1+0x11c58598],esp
  4191a2:	popf   
  4191a3:	add    dh,BYTE PTR [eax-0x37]
  4191a6:	xchg   esi,eax
  4191a7:	fld    TBYTE PTR [esi]
  4191a9:	test   eax,0x9794dbcb
  4191ae:	or     eax,0xac6dddfd
  4191b3:	mov    esi,DWORD PTR [ebp-0x14a7560d]
  4191b9:	stc    
  4191ba:	stos   DWORD PTR es:[edi],eax
  4191bb:	int    0x1a
  4191bd:	mov    al,0xbf
  4191bf:	ret    
  4191c0:	or     eax,0xabd98ec1
  4191c5:	psubusw mm4,QWORD PTR [ebx]
  4191c8:	adc    cl,BYTE PTR [edx]
  4191ca:	and    al,0xc8
  4191cc:	jb     0x41914e
  4191ce:	pop    ebp
  4191cf:	xchg   esi,eax
  4191d0:	fldl2e 
  4191d2:	out    0xa,eax
  4191d4:	pop    ebp
  4191d5:	imul   BYTE PTR [ebp+0x49]
  4191d8:	sub    BYTE PTR [ebp-0x1d],bh
  4191db:	mov    esi,0x8f984511
  4191e0:	push   ds
  4191e1:	das    
  4191e2:	and    BYTE PTR [edi],bl
  4191e4:	push   0xffffffa8
  4191e6:	or     al,BYTE PTR [edx]
  4191e8:	out    dx,al
  4191e9:	add    BYTE PTR [ebp+0x2c],0xb6
  4191ed:	les    edi,FWORD PTR es:[ebp+0xf6aa]
  4191f4:	sbb    al,0x9
  4191f6:	popf   
  4191f7:	es clc 
  4191f9:	mov    ah,BYTE PTR [eax+eiz*8]
  4191fc:	mov    dl,0x89
  4191fe:	sub    al,0xe0
  419200:	jmp    0xc8bc5499
  419205:	stos   DWORD PTR es:[edi],eax
  419206:	out    0x26,al
  419208:	dec    esi
  419209:	(bad)  
  41920a:	jno    0x419246
  41920c:	rcl    BYTE PTR [edi+edi*8+0x731dd8d0],1
  419213:	fnstcw WORD PTR [ebx-0x6d]
  419216:	or     esp,DWORD PTR [esi-0x13]
  419219:	push   es
  41921a:	call   0xfd5f2941
  41921f:	ins    BYTE PTR es:[edi],dx
  419220:	pop    esi
  419221:	or     eax,0x28d1283
  419226:	add    BYTE PTR [edx-0x45044679],dh
  41922c:	loop   0x419253
  41922e:	iret   
  41922f:	cmp    al,0xc3
  419231:	pop    ds
  419232:	mov    DWORD PTR [edx+edi*4-0x5e02bcb9],ebx
  419239:	add    al,BYTE PTR [eax]
  41923b:	jmp    0x9540a85f
  419240:	sbb    ebx,0x836b7d5d
  419246:	retf   0x80ff
  419249:	pop    ds
  41924a:	or     eax,0x36c35737
  41924f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419250:	jp     0x419261
  419252:	test   BYTE PTR ds:0xe6fd1f8d,bh
  419258:	add    BYTE PTR [eax],al
  41925a:	cli    
  41925b:	icebp  
  41925c:	mov    BYTE PTR [eax*4+0xfd4ad5],ch
  419263:	aas    
  419264:	cmp    DWORD PTR [ecx-0x2cd27dd8],esp
  41926a:	rcr    BYTE PTR [edi],0x81
  41926d:	cmp    al,0xb5
  41926f:	add    al,BYTE PTR [edi-0x7cf052dc]
  419275:	mov    edx,0x700002ae
  41927a:	loop   0x419295
  41927c:	cmp    DWORD PTR [ecx+0x3738d43a],esi
  419282:	add    eax,0x70de1093
  419287:	or     esi,DWORD PTR [edi]
  419289:	add    BYTE PTR [ecx-0x78da8c2e],dl
  41928f:	out    0x40,eax
  419291:	adc    al,0xd
  419293:	pop    ebp
  419294:	adc    DWORD PTR [esi+ebx*1-0x4],edi
  419298:	sbb    DWORD PTR [ebx-0x3f7d99f6],ecx
  41929e:	enter  0x36f2,0x5d
  4192a2:	mov    esp,0x7d330b6f
  4192a7:	inc    ecx
  4192a8:	xchg   BYTE PTR [esi+0x40],cl
  4192ab:	sub    bh,BYTE PTR [esi-0xa62fcf1]
  4192b1:	call   ebx
  4192b3:	cmp    DWORD PTR [ecx-0x10],0x74
  4192b7:	push   ss
  4192b8:	sbb    bh,0x8d
  4192bb:	out    0xfa,eax
  4192bd:	cmp    eax,DWORD PTR [eax]
  4192bf:	add    BYTE PTR [ecx],dh
  4192c1:	in     eax,0xa
  4192c3:	xor    BYTE PTR [esp+ebp*8],0xfa
  4192c7:	(bad)  
  4192c8:	call   FWORD PTR [ebp+0x21]
  4192cb:	inc    eax
  4192cc:	int    0x5d
  4192ce:	and    edi,edi
  4192d0:	leave  
  4192d1:	cmp    eax,0x11ed788
  4192d6:	sti    
  4192d7:	jne    0x419329
  4192d9:	call   0xff56:0xed9ffc6
  4192e0:	leave  
  4192e1:	idiv   dl
  4192e3:	jne    0x419325
  4192e5:	out    0x70,al
  4192e7:	or     BYTE PTR [ebx+edx*2-0x1a],bl
  4192eb:	jmp    ebx
  4192ed:	fwait
  4192ee:	mov    edi,0x1053790f
  4192f3:	add    ah,dh
  4192f5:	pop    ecx
  4192f6:	cmp    BYTE PTR [ebp+0x30],bl
  4192f9:	push   edx
  4192fa:	shr    ecx,1
  4192fc:	in     al,dx
  4192fd:	jmp    0x4192f9
  4192ff:	inc    DWORD PTR [ebx]
  419301:	scas   eax,DWORD PTR es:[edi]
  419302:	dec    edx
  419303:	add    DWORD PTR [ebp-0x60ba94dc],ebx
  419309:	push   0x22
  41930b:	or     BYTE PTR [esi-0x254087ad],ah
  419311:	in     eax,0x17
  419313:	dec    edx
  419315:	sub    al,BYTE PTR [ecx]
  419317:	xchg   DWORD PTR [eax-0x51],ebx
  41931a:	jg     0x4192e1
  41931c:	sahf   
  41931d:	mov    dl,0x72
  41931f:	add    BYTE PTR [ebp+0xb5f42b],bl
  419325:	add    BYTE PTR [edx+0x2a],bl
  419328:	hlt    
  419329:	mov    ch,0x4a
  41932b:	sub    DWORD PTR [edx-0x21],eax
  41932e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41932f:	adc    BYTE PTR [edi],dh
  419331:	xchg   eax,esp
  419333:	shr    edi,0xc6
  419336:	into   
  419337:	jmp    0xa31ed0bc
  41933c:	mov    ebp,0x419daafb
  419341:	sbb    DWORD PTR [edx+0x29],0xa1794b7a
  419348:	mov    ch,0xf7
  41934a:	jbe    0x4192cf
  41934c:	cmp    al,0x43
  41934e:	dec    ebp
  41934f:	sub    eax,DWORD PTR [ecx]
  419351:	add    BYTE PTR [ebp-0x1f78bea8],bl
  419357:	adc    eax,0x58efe8b9
  41935c:	inc    ecx
  41935d:	inc    eax
  41935e:	and    al,0xef
  419360:	adc    ebp,ecx
  419362:	das    
  419363:	stc    
  419364:	dec    edx
  419365:	aas    
  419366:	outs   dx,BYTE PTR ds:[esi]
  419367:	imul   ecx,DWORD PTR [ebx-0x395cd2b5],0xc33062fb
  419371:	or     al,0x4b
  419373:	in     eax,dx
  419374:	add    cl,BYTE PTR ds:0xbf05fd53
  41937a:	cld    
  41937b:	and    esi,edx
  41937d:	mov    edi,0x142c02e2
  419382:	repnz sbb esp,edi
  419385:	add    edx,DWORD PTR [eax+ecx*2+0x7482]
  41938c:	push   ss
  41938d:	retf   
  41938e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938f:	(bad)  
  419390:	sbb    al,BYTE PTR [eax-0x39e5fa79]
  419396:	mov    dl,BYTE PTR [ebx]
  419398:	or     eax,DWORD PTR [edx+0x282b17f]
  41939e:	fisub  WORD PTR [ecx+0x22]
  4193a1:	adc    edx,esp
  4193a3:	ret    
  4193a4:	mov    dl,0xc4
  4193a6:	outs   dx,DWORD PTR ds:[esi]
  4193a7:	leave  
  4193a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a9:	mov    DWORD PTR [ebx+ebx*1+0xbd44a1e],esp
  4193b0:	push   edx
  4193b1:	sbb    eax,DWORD PTR [esi+0x23]
  4193b4:	adc    BYTE PTR [edx+0x54981bac],cl
  4193ba:	fmulp  st(2),st
  4193bc:	sbb    esi,DWORD PTR [ebp+0xb5d8932]
  4193c2:	jne    0x41936f
  4193c4:	popf   
  4193c5:	add    ah,bh
  4193c7:	xchg   BYTE PTR [edi+0x18],bl
  4193ca:	push   0x1e
  4193cc:	nop
  4193cd:	or     esp,DWORD PTR [esi+0x1c]
  4193d0:	lods   eax,DWORD PTR ds:[esi]
  4193d1:	add    ah,bh
  4193d3:	and    bh,BYTE PTR [ecx+0x75]
  4193d6:	xor    dl,BYTE PTR [eax+0x35ba028a]
  4193dc:	(bad)  
  4193de:	sub    BYTE PTR [ebx],dl
  4193e0:	sub    ecx,ecx
  4193e2:	jmp    0x34cb30ea
  4193e7:	clc    
  4193e8:	xor    eax,0xdf3619ff
  4193ed:	xchg   DWORD PTR ds:0xd50000b0,ebx
  4193f3:	cmp    esi,esi
  4193f5:	xchg   BYTE PTR [ecx+0xb],ah
  4193f8:	out    0x3,eax
  4193fa:	sbb    al,0x9c
  4193fc:	call   eax
  4193fe:	sahf   
  4193ff:	xchg   esi,eax
  419400:	sbb    eax,DWORD PTR [ebx-0x5f]
  419403:	sbb    eax,0xb40c0176
  419408:	sbb    esi,DWORD PTR [edx+0x63]
  41940b:	sub    dh,BYTE PTR [edx-0x7cfd66eb]
  419411:	test   eax,0x7af77faf
  419416:	jg     0x419435
  419418:	mov    DWORD PTR [edi*2+0x4622329],esp
  41941f:	imul   DWORD PTR [eax]
  419421:	mov    ds:0x57533db,eax
  419426:	and    ecx,DWORD PTR [ecx]
  419428:	cmp    ch,BYTE PTR [edi+0x6a128fba]
  41942e:	sbb    BYTE PTR [ebx],0xe
  419431:	fist   DWORD PTR gs:[ebx]
  419434:	std    
  419435:	inc    esi
  419436:	and    ah,cl
  419438:	inc    BYTE PTR [edx]
  41943a:	outs   dx,DWORD PTR ds:[esi]
  41943b:	in     eax,dx
  41943c:	or     al,0x6d
  41943e:	out    dx,eax
  41943f:	adc    edi,ebp
  419441:	cs sub ecx,esi
  419444:	imul   DWORD PTR [edx-0x1fec3a41]
  41944a:	push   ebp
  41944b:	idiv   BYTE PTR [ebp+0x76]
  41944e:	mov    cl,0x38
  419450:	add    ch,cl
  419452:	sahf   
  419453:	mov    edx,DWORD PTR [esi-0x6b]
  419456:	add    BYTE PTR [eax],al
  419458:	inc    ebx
  419459:	dec    edx
  41945a:	cmp    DWORD PTR [ebx],esp
  41945c:	scas   eax,DWORD PTR es:[edi]
  41945d:	jg     0x419421
  41945f:	std    
  419460:	jl     0x419479
  419462:	add    DWORD PTR [ecx],edx
  419464:	mov    DWORD PTR [edx+eax*1-0x17],ecx
  419468:	sahf   
  419469:	aas    
  41946a:	inc    ebx
  41946b:	cmc    
  41946c:	lahf   
  41946d:	add    al,BYTE PTR [eax]
  41946f:	jmp    0xde40af8d
  419474:	sub    bl,BYTE PTR [ebp+0x2]
  419477:	add    BYTE PTR [esi+eax*1],al
  41947a:	aaa    
  41947b:	pop    esi
  41947c:	pop    eax
  41947d:	repz jle 0x419422
  419480:	inc    eax
  419481:	in     al,0xfa
  419483:	(bad)  
  419485:	cmovo  eax,DWORD PTR [ebx+0x2674093e]
  41948c:	sti    
  41948d:	jae    0x419411
  41948f:	repz or esp,esp
  419492:	jle    0x41948e
  419494:	clc    
  419495:	arpl   WORD PTR [esi],cx
  419497:	sbb    DWORD PTR [esi],0xa
  41949a:	je     0x4194bf
  41949c:	xor    eax,0xb40080f8
  4194a1:	add    eax,0xeeb8850b
  4194a6:	cli    
  4194a7:	inc    DWORD PTR [edi+0x64]
  4194aa:	pop    ebp
  4194ab:	add    BYTE PTR [ebx+0x4bf36280],bh
  4194b1:	jecxz  0x4194ad
  4194b3:	inc    ebp
  4194b4:	nop
  4194b5:	cmp    al,0x42
  4194b7:	adc    al,0x5a
  4194b9:	(bad)
  4194bc:	add    BYTE PTR [eax],al
  4194be:	jbe    0x4194c5
  4194c0:	add    BYTE PTR [ebx],bh
  4194c2:	sub    ch,BYTE PTR [ecx+0x70]
  4194c5:	out    dx,al
  4194c6:	add    al,0x38
  4194c8:	pop    es
  4194c9:	jne    0x419458
  4194cb:	aas    
  4194cc:	call   0x118358b7
  4194d1:	add    DWORD PTR [ebp+eax*1+0x0],esi
  4194d5:	sub    DWORD PTR [ebp+eax*1-0x10373f5],0xffffffff
  4194dd:	call   FWORD PTR [edi+0x43]
  4194e0:	imul   ecx,DWORD PTR [edi],0xfff13eb7
  4194e6:	dec    ebx
  4194e7:	repnz mov ch,0x13
  4194ea:	xchg   DWORD PTR [edi-0x6],edi
  4194ed:	or     DWORD PTR [ebx],edi
  4194ef:	and    DWORD PTR [edx],0x20309df3
  4194f5:	adc    DWORD PTR [edi],0xb4840f0b
  4194fb:	pop    esp
  4194fc:	and    ch,bh
  4194fe:	sbb    al,0x45
  419500:	popa   
  419501:	add    BYTE PTR [ebp-0x577befd5],bl
  419507:	pop    esp
  419508:	and    ch,bh
  41950a:	repnz in eax,0xf7
  41950d:	ss pusha 
  41950f:	setg   dl
  419512:	hlt    
  419513:	dec    edx
  419514:	add    eax,DWORD PTR [eax]
  419516:	popf   
  419517:	pusha  
  419518:	(bad)  
  419519:	adc    ebx,DWORD PTR [ebx+ebp*1-0x7ce1ffff]
  419520:	add    cl,BYTE PTR ds:0x3b110000
  419526:	add    eax,DWORD PTR [eax]
  419528:	popf   
  419529:	push   esp
  41952a:	mov    edi,0x18aca26b
  41952f:	icebp  
  419530:	stos   BYTE PTR es:[edi],al
  419531:	mov    bh,0xf
  419533:	mov    dh,0x8e
  419535:	ins    BYTE PTR es:[edi],dx
  419536:	test   dl,bh
  419538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419539:	sub    eax,0xa9780f2
  41953e:	cwde   
  41953f:	or     ebx,DWORD PTR [esp+eax*8]
  419542:	pusha  
  419543:	add    BYTE PTR [ebp+0x68831029],bl
  419549:	fcomp  QWORD PTR [edi]
  41954b:	std    
  41954c:	jb     0x4195b5
  41954e:	cmc    
  41954f:	ss loopne 0x41955f
  419552:	lahf   
  419553:	shl    BYTE PTR [edx+ecx*1+0x2],cl
  419557:	add    BYTE PTR [ebp-0x63ec3a20],bl
  41955d:	sub    DWORD PTR [ecx],eax
  41955f:	add    BYTE PTR [esi],bl
  419561:	add    al,BYTE PTR [edx]
  419563:	or     eax,0x1fa11
  419568:	popf   
  419569:	push   esp
  41956a:	mov    edi,0x6a02a26b
  41956f:	pop    esp
  419570:	sub    al,0x18
  419572:	fimul  WORD PTR [edi]
  419574:	jmp    0x419569
  419576:	sub    DWORD PTR [ebx-0x6b4f2e9],eax
  41957c:	sbb    eax,0x1b0ef41d
  419581:	outs   dx,BYTE PTR ds:[esi]
  419582:	mov    ecx,0xb182001f
  419587:	mov    DWORD PTR [eax],eax
  419589:	add    BYTE PTR [ebp+0x190ee702],bl
  41958f:	mov    bl,BYTE PTR [ecx+0x2417e81f]
  419595:	clc    
  419596:	stos   DWORD PTR es:[edi],eax
  419597:	mov    ebp,0x29eb9dfa
  41959c:	imul   eax,DWORD PTR ds:0xc9ae029d,0xffffffae
  4195a3:	add    edi,esp
  4195a5:	add    ebx,DWORD PTR [ebp-0x57fa907d]
  4195ab:	xchg   BYTE PTR [ebx+0x5],bl
  4195ae:	popf   
  4195af:	add    ah,BYTE PTR [edx]
  4195b1:	mov    esi,0x986a0736
  4195b6:	lods   eax,DWORD PTR ds:[esi]
  4195b7:	pop    ss
  4195b8:	push   esi
  4195b9:	rcpps  xmm6,xmm3
  4195bc:	test   eax,0xf60c9782
  4195c1:	(bad)  
  4195c2:	repz adc al,0x3e
  4195c5:	pop    ds
  4195c6:	sbb    al,0x1c
  4195c8:	in     al,0x9d
  4195ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195cb:	xor    DWORD PTR [ecx],0xe7029d89
  4195d1:	push   cs
  4195d2:	push   ds
  4195d3:	mov    ebp,0x17601f18
  4195d8:	lods   al,BYTE PTR ds:[esi]
  4195d9:	not    DWORD PTR [ebx+0x639df2bd]
  4195df:	sub    DWORD PTR [edi-0x45fd62fc],ebx
  4195e5:	xor    edi,ebx
  4195e7:	mov    DWORD PTR [eax],eax
  4195e9:	pushf  
  4195ea:	xor    bl,dl
  4195ec:	rcr    esi,0x0
  4195ef:	add    BYTE PTR [edx],ah
  4195f1:	int3   
  4195f2:	(bad)  
  4195f3:	call   0x1a42bf96
  4195f8:	outs   dx,DWORD PTR ds:[esi]
  4195f9:	les    edi,FWORD PTR [eax]
  4195fb:	aaa    
  4195fc:	dec    ebp
  4195fd:	push   es
  4195fe:	cmp    DWORD PTR [ebx],0xf60002ac
  419604:	jo     0x41960f
  419606:	mov    DWORD PTR [edi],edx
  419608:	in     eax,0x88
  41960a:	or     al,0xd8
  41960c:	fist   WORD PTR [esi-0x7c5c1a22]
  419612:	pop    es
  419613:	fwait
  419614:	mov    edx,DWORD PTR ds:0xcfe524fd
  41961a:	inc    edx
  41961b:	std    
  41961c:	cmp    BYTE PTR [eax],dh
  41961e:	out    0xf0,eax
  419620:	cdq    
  419621:	add    al,BYTE PTR [eax]
  419623:	mov    edx,0x1486c48c
  419628:	(bad)
  41962b:	out    0x2a,al
  41962d:	or     bh,bh
  41962f:	call   0x1a42bfd2
  419634:	outs   dx,DWORD PTR ds:[esi]
  419635:	les    edi,FWORD PTR [eax]
  419637:	mov    edi,0xff8105f2
  41963c:	lods   eax,DWORD PTR ds:[esi]
  41963d:	add    al,BYTE PTR [eax]
  41963f:	fsubp  st(0),st
  419641:	or     ecx,DWORD PTR [ecx+0xc8c729f]
  419647:	fcomp  DWORD PTR [edi-0x6a]
  41964a:	fsubp  st(5),st
  41964c:	stos   DWORD PTR es:[edi],eax
  41964d:	jle    0x41961a
  41964f:	cmp    BYTE PTR [ebx+0xacfd17],dl
  419655:	add    BYTE PTR [edx-0x33],dh
  419658:	inc    edx
  419659:	cmc    
  41965a:	add    BYTE PTR ds:0x29e34e7,ch
  419660:	add    dl,bl
  419662:	mov    eax,es
  419664:	xchg   BYTE PTR [eax],al
  419666:	sub    DWORD PTR [esi],ecx
  419668:	cmp    dl,al
  41966a:	xor    eax,DWORD PTR [esi+0x24400d2]
  419670:	out    0x3,eax
  419672:	not    ebx
  419674:	inc    ecx
  419675:	cmp    esp,edx
  419677:	push   edx
  419678:	or     al,0x83
  41967a:	pop    esi
  41967b:	repz (bad) 
  41967d:	inc    DWORD PTR [ebx]
  41967f:	mov    al,0x6
  419681:	mov    ecx,edx
  419683:	cmp    al,BYTE PTR [edi+0x7d42e50c]
  419689:	loope  0x419680
  41968b:	push   es
  41968c:	adc    DWORD PTR [ecx-0x507cb],0x45361ab9
  419696:	call   0x562b6d12
  41969b:	(bad)  
  41969c:	(bad)  
  41969d:	push   edi
  41969f:	rol    DWORD PTR [ecx-0x77],cl
  4196a2:	mov    DWORD PTR [edx],ebx
  4196a4:	cmp    dl,al
  4196a6:	rol    DWORD PTR [ebp+0x1b40096],cl
  4196ac:	out    0x3,eax
  4196ae:	not    ebx
  4196b0:	inc    ecx
  4196b1:	cmp    esp,DWORD PTR [edx+0x22830c52]
  4196b7:	repz (bad) 
  4196b9:	inc    DWORD PTR [eax]
  4196bb:	add    BYTE PTR [ebx+0x5a8b06af],dh
  4196c1:	sub    eax,0x42950c87
  4196c6:	jge    0x4196a9
  4196c8:	jne    0x4196d0
  4196ca:	test   BYTE PTR [ebp-0x3b],dl
  4196cd:	idiv   edx
  4196cf:	dec    DWORD PTR [ecx+0xd]
  4196d2:	ss inc ebp
  4196d4:	dec    eax
  4196d5:	ja     0x4196ad
  4196d7:	jmp    0x4196e5
  4196d9:	xor    cl,bh
  4196db:	inc    edx
  4196dc:	in     eax,dx
  4196dd:	dec    ebp
  4196de:	adc    DWORD PTR [ebx],edi
  4196e0:	popf   
  4196e1:	jmp    0x2887f585
  4196e6:	rcl    cl,1
  4196e8:	fild   WORD PTR [eax-0x45]
  4196eb:	imul   edx,DWORD PTR [edx-0x62f45758],0x2b
  4196f2:	or     al,0xb6
  4196f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f5:	mov    al,ds:0xf1733b5
  4196fa:	repnz inc eax
  4196fc:	sbb    eax,0x200cf14a
  419701:	or     edx,DWORD PTR [ecx]
  419703:	std    
  419704:	adc    al,BYTE PTR [esi+eax*8+0x13]
  419708:	(bad)  
  419709:	out    0xf7,al
  41970b:	jge    0x4196f1
  41970d:	das    
  41970e:	shl    BYTE PTR [eax],1
  419710:	iret   
  419711:	call   0x10caea9e
  419716:	aas    
  419717:	jl     0x4196d2
  419719:	jo     0x41971b
  41971b:	xor    edi,ecx
  41971d:	call   0x41f4f8
  419722:	dec    ecx
  419723:	sbb    al,0x80
  419725:	xor    al,0xa1
  419727:	sub    eax,DWORD PTR [ecx]
  419729:	or     eax,0x56881013
  41972e:	mov    DWORD PTR [ecx-0x54a1f0f4],edx
  419734:	and    DWORD PTR [eax],edx
  419736:	mov    ds:0xaaf0279f,al
  41973b:	fwait
  41973c:	sbb    eax,DWORD PTR [ebx-0x77]
  41973f:	loop   0x419705
  419741:	adc    ebx,DWORD PTR [ebx]
  419743:	rol    DWORD PTR [edi+0x40f1954b],cl
  419749:	or     eax,0xfd262c21
  41974e:	sub    BYTE PTR [ecx+0x1c9deb9d],0x86
  419755:	xchg   edx,eax
  419756:	mov    al,ds:0xd0890129
  41975b:	add    bl,BYTE PTR [ebx]
  41975d:	sbb    BYTE PTR [edi+0x19],0x70
  419761:	mov    esi,0xc118056
  419766:	mov    al,ds:0x9d0e907b
  41976b:	add    al,BYTE PTR [esi]
  41976d:	out    0x2f,eax
  41976f:	or     BYTE PTR [edx+eax*8+0x3a],ch
  419773:	mov    ebp,DWORD PTR [edi+esi*8-0x6493be8b]
  41977a:	adc    eax,0x4adf52bd
  41977f:	nop
  419780:	xor    eax,0xe6fa9b87
  419785:	pop    DWORD PTR [eax]
  419787:	add    BYTE PTR [eax+ebp*4-0x56ce51a],dh
  41978e:	jno    0x4197dc
  419790:	push   ss
  419791:	lods   eax,DWORD PTR ds:[esi]
  419792:	fimul  DWORD PTR [esi-0x62d7d524]
  419798:	repnz adc esp,DWORD PTR [esp+eax*2+0x6e]
  41979d:	lods   al,BYTE PTR ds:[esi]
  41979e:	jno    0x419769
  4197a0:	jmp    0xc1f6:0x738efc27
  4197a7:	inc    ebp
  4197a8:	xchg   esp,eax
  4197a9:	cmp    dl,BYTE PTR [esi]
  4197ab:	lock adc al,0x0
  4197ae:	rol    ecx,0x76
  4197b1:	(bad)  
  4197b2:	jmp    0x41973a
  4197b4:	mov    bh,0x1
  4197b6:	sti    
  4197b7:	xlat   BYTE PTR ds:[ebx]
  4197b8:	and    al,0xc0
  4197ba:	out    0xdd,eax
  4197bc:	pusha  
  4197bd:	in     eax,0xda
  4197bf:	iret   
  4197c0:	pop    ebp
  4197c1:	adc    esp,DWORD PTR [edi+ebp*8-0x68053a2d]
  4197c8:	dec    ebp
  4197c9:	daa    
  4197ca:	add    bh,ch
  4197cc:	bound  eax,QWORD PTR [edi+0x3215a7ad]
  4197d2:	adc    dh,BYTE PTR [edi]
  4197d4:	mov    ah,0x48
  4197d6:	add    BYTE PTR [edi+0x62d88a3f],bh
  4197dc:	pop    edi
  4197dd:	xchg   edi,eax
  4197de:	sub    BYTE PTR [ecx],0xd
  4197e1:	repnz cmp BYTE PTR [esi+eiz*4-0x1e25f274],bh
  4197e9:	rol    DWORD PTR [esi+0x1200009f],cl
  4197ef:	fidivr DWORD PTR [esi-0x1164e80a]
  4197f5:	(bad)  
  4197f6:	xchg   edi,eax
  4197f7:	cmp    DWORD PTR [ebx-0x7],0x2b83059e
  4197fe:	jge    0x419815
  419800:	std    
  419801:	and    ah,ah
  419803:	push   ss
  419804:	or     eax,0xfd23036b
  419809:	(bad)  
  41980a:	and    edi,DWORD PTR [edi-0x40e7d6dd]
  419810:	and    eax,esi
  419812:	sub    eax,0x489688df
  419817:	adc    edi,esi
  419819:	cmp    al,0xf5
  41981b:	mov    ecx,ecx
  41981d:	scas   al,BYTE PTR es:[edi]
  41981e:	or     eax,0xda655eb
  419823:	add    edi,ebp
  419825:	adc    al,0xa5
  419827:	adc    eax,0xaf86e173
  41982c:	jecxz  0x4197bc
  41982e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982f:	leave  
  419830:	sub    BYTE PTR [ecx-0x10ab8069],0x9e
  419837:	add    bh,BYTE PTR [ecx]
  419839:	adc    al,0x95
  41983b:	xchg   ecx,eax
  41983c:	rol    DWORD PTR [eax+0x66fd257b],cl
  419842:	fwait
  419843:	sub    ebp,ecx
  419845:	cwde   
  419846:	sub    esi,eax
  419848:	adc    edx,DWORD PTR [edx]
  41984a:	fmul   DWORD PTR [ebp-0x61a39d57]
  419850:	cmp    BYTE PTR [eax],al
  419852:	add    BYTE PTR [eax],al
  419854:	mov    esp,0xf20f8678
  419859:	sbb    BYTE PTR [eax+0x97379fa],al
  41985f:	inc    ebx
  419860:	outs   dx,DWORD PTR ds:[esi]
  419861:	into   
  419862:	outs   dx,BYTE PTR ds:[esi]
  419863:	xchg   esi,eax
  419864:	hlt    
  419865:	xor    BYTE PTR [edi],al
  419867:	jne    0x4198c9
  419869:	loope  0x419887
  41986b:	sub    DWORD PTR [esi-0x48e38c01],0x6b
  419872:	pop    ebp
  419873:	add    cl,al
  419875:	xchg   ecx,eax
  419876:	jle    0x419872
  419878:	das    
  419879:	or     BYTE PTR [esi],0x83
  41987c:	or     DWORD PTR cs:[esp+ecx*1-0x4b],esi
  419881:	out    dx,eax
  419882:	add    BYTE PTR [eax],0x34
  419885:	push   es
  419886:	or     eax,DWORD PTR [ebp-0x51496]
  41988c:	(bad)  
  41988d:	jmp    0x4198cf
  41988f:	adc    al,0xad
  419891:	dec    ecx
  419892:	adc    DWORD PTR [edx+ebx*1-0x22],edi
  419896:	pop    edi
  419897:	(bad)  
  419898:	cmp    ebp,esp
  41989a:	ss pop esi
  41989c:	pop    eax
  41989d:	sti    
  41989e:	jle    0x4198dd
  4198a0:	cmp    ebp,esp
  4198a2:	cli    
  4198a3:	cmovb  edx,DWORD PTR [edi]
  4198a6:	cmp    dl,0xcd
  4198a9:	cli    
  4198aa:	or     DWORD PTR [ebx+0x2b],0xffffffec
  4198ae:	cli    
  4198af:	sub    DWORD PTR [esi],0x27
  4198b2:	or     al,0x84
  4198b4:	jbe    0x4198a1
  4198b6:	cli    
  4198b7:	inc    DWORD PTR [eax]
  4198b9:	add    BYTE PTR [ebp-0x10],al
  4198bc:	lahf   
  4198bd:	add    ah,al
  4198bf:	add    eax,0xeaf2840b
  4198c4:	cli    
  4198c5:	push   edi
  4198c7:	inc    ebp
  4198c8:	cmp    cl,al
  4198ca:	js     0x4198a1
  4198cc:	in     al,0x2b
  4198ce:	popf   
  4198cf:	mov    eax,0x61c6fd16
  4198d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d5:	or     al,0x1e
  4198d7:	adc    ebx,DWORD PTR [eax]
  4198d9:	std    
  4198da:	jp     0x4198fc
  4198dc:	dec    edi
  4198dd:	adc    DWORD PTR [esi],ebx
  4198df:	aad    0x8
  4198e1:	je     0x41986f
  4198e3:	pushf  
  4198e4:	sbb    eax,0x8217e920
  4198e9:	cli    
  4198ea:	std    
  4198eb:	sbb    al,BYTE PTR [ecx]
  4198ed:	add    BYTE PTR [edx+0x4afd089e],ah
  4198f3:	add    bl,al
  4198f5:	aas    
  4198f6:	xchg   dl,bl
  4198f8:	xchg   edi,eax
  4198f9:	xlat   BYTE PTR ds:[ebx]
  4198fa:	inc    esp
  4198fb:	adc    DWORD PTR [edi],edx
  4198fd:	std    
  4198fe:	xor    dl,BYTE PTR [edi+esi*4+0x6b]
  419902:	call   0x828:0x22fe3a9c
  419909:	mov    dh,0xae
  41990b:	pushf  
  41990c:	sbb    cl,BYTE PTR [edx]
  41990e:	mov    ds:0xafe299f,al
  419913:	inc    eax
  419914:	test   dl,bh
  419916:	xchg   esi,eax
  419917:	sbb    BYTE PTR [ebp-0x20],bh
  41991a:	sti    
  41991b:	dec    edi
  41991c:	sbb    BYTE PTR [ecx+0x26f70000],al
  419922:	or     BYTE PTR [edx+edx*8+0x1efd1860],al
  419929:	gs push es
  41992b:	or     eax,0xfd176121
  419930:	rcr    BYTE PTR [ecx+0x1b9d831a],cl
  419936:	add    DWORD PTR ds:0xfd175d19,ecx
  41993c:	mov    edx,0xdc38c3db
  419941:	push   ss
  419942:	push   edi
  419943:	out    0xf2,eax
  419945:	mov    al,ds:0x266fd17
  41994a:	lds    esp,FWORD PTR [edi+0x197383a9]
  419950:	nop
  419951:	adc    dh,ah
  419953:	push   ecx
  419954:	lods   al,BYTE PTR ds:[esi]
  419955:	adc    DWORD PTR [ecx+0xd],0x9
  419959:	in     al,dx
  41995a:	imul   ebx,DWORD PTR ds:0x84d496a4,0xf2baff77
  419964:	sbb    eax,0x968fdc0d
  419969:	and    DWORD PTR [ecx],0xe7029d7e
  41996f:	or     BYTE PTR [esi],bl
  419971:	jl     0x419988
  419973:	sbb    BYTE PTR [eax-0x3c],cl
  419976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419977:	fadd   QWORD PTR [ebx]
  419979:	(bad)  
  41997a:	xor    al,0x2a
  41997c:	sbb    eax,0x1a17fe11
  419981:	(bad)  
  419982:	fcmovu st,st(4)
  419984:	add    BYTE PTR [eax],al
  419986:	jmp    0x419987
  419988:	pop    ebx
  419989:	mov    fs,WORD PTR [eax]
  41998b:	adc    dh,ah
  41998d:	fstp   TBYTE PTR [eax-0x62]
  419990:	in     eax,dx
  419991:	sub    BYTE PTR [edi+0x10],0xd6
  419995:	pop    ss
  419996:	cwde   
  419997:	pop    eax
  419998:	jmp    0x8d00:0xbcd66b8a
  41999f:	push   es
  4199a0:	out    dx,al
  4199a1:	adc    BYTE PTR [ecx+0x10],0xb6
  4199a5:	pop    ss
  4199a6:	pop    esp
  4199a7:	mov    eax,tr6
  4199aa:	stos   DWORD PTR es:[edi],eax
  4199ab:	mov    ebp,0x19f897fa
  4199b0:	sub    eax,0x600fd016
  4199b5:	shr    DWORD PTR [esi+0x1607a7cb],0xc4
  4199bc:	test   BYTE PTR [edi],dl
  4199be:	mov    eax,0xa1a81ccb
  4199c3:	add    DWORD PTR [eax],0xffffffc9
  4199c6:	nop
  4199c7:	or     eax,0x150defd
  4199cc:	mov    DWORD PTR [edi-0x6fbea96],edi
  4199d2:	xchg   edx,eax
  4199d3:	inc    BYTE PTR [ebx-0x2f24cfd]
  4199d9:	stos   BYTE PTR es:[edi],al
  4199da:	stos   DWORD PTR es:[edi],eax
  4199db:	ret    
  4199dc:	adc    eax,DWORD PTR [eax]
  4199de:	fs repz jnp 0x419a01
  4199e2:	shr    dh,0xfd
  4199e5:	ss xchg edx,eax
  4199e7:	xchg   DWORD PTR [ebx-0x2b],eax
  4199ea:	add    BYTE PTR [eax],al
  4199ec:	inc    edi
  4199ed:	push   eax
  4199ee:	or     eax,0xfd0d5074
  4199f3:	push   ds
  4199f4:	jbe    0x4199a3
  4199f6:	imul   esp,esi,0x1f
  4199f9:	and    bl,bh
  4199fb:	push   cs
  4199fc:	stos   BYTE PTR es:[edi],al
  4199fd:	std    
  4199fe:	mov    ch,0xea
  419a00:	daa    
  419a01:	mov    eax,0xff32f733
  419a06:	(bad)  
  419a07:	in     eax,0x1d
  419a09:	or     bh,bl
  419a0b:	out    dx,al
  419a0c:	mov    eax,ecx
  419a0e:	cld    
  419a0f:	sub    al,0xd
  419a11:	fmul   DWORD PTR [edx-0xb]
  419a14:	sub    ch,BYTE PTR ds:0xda5c3e7
  419a1a:	std    
  419a1b:	pusha  
  419a1c:	(bad)  
  419a1e:	cmp    BYTE PTR [eax-0x4322845d],ch
  419a24:	mov    ecx,DWORD PTR ds:0xfe351739
  419a2a:	sub    BYTE PTR [ebp-0x7b],0xd
  419a2e:	std    
  419a2f:	imul   BYTE PTR [eax+0x1]
  419a32:	mov    DWORD PTR [edi],esi
  419a34:	in     eax,dx
  419a35:	adc    al,0x4
  419a37:	stc    
  419a38:	mov    eax,ds:0xa5a783fd
  419a3d:	or     eax,0xf78700fd
  419a42:	inc    eax
  419a43:	adc    al,0xdd
  419a45:	cmp    DWORD PTR [ecx],edx
  419a47:	jl     0x419a5b
  419a49:	fidiv  WORD PTR [edi-0x7b07cc03]
  419a4f:	inc    ebp
  419a50:	add    BYTE PTR [eax],al
  419a52:	cwde   
  419a53:	sub    DWORD PTR [esi-0x764fef1],edi
  419a59:	push   ebx
  419a5b:	sub    BYTE PTR [ebx+0x6c],bl
  419a5e:	arpl   WORD PTR [ecx-0xb1c0276],ax
  419a64:	or     dh,BYTE PTR [esi+0x34567987]
  419a6a:	stos   BYTE PTR es:[edi],al
  419a6b:	or     eax,0x8343100d
  419a70:	xchg   esp,eax
  419a71:	std    
  419a72:	xor    esp,0x3e
  419a75:	(bad)  
  419a76:	stc    
  419a77:	sbb    eax,0x76484d36
  419a7c:	fucomi st,st(1)
  419a7e:	mov    edx,0xadfffaea
  419a83:	inc    edx
  419a84:	adc    DWORD PTR [ebx],edi
  419a86:	test   DWORD PTR [ecx+ecx*4],eax
  419a89:	jnp    0x419abc
  419a8b:	clc    
  419a8c:	cli    
  419a8d:	cmp    edx,DWORD PTR [edx]
  419a8f:	data16 or al,0x83
  419a92:	pop    esp
  419a93:	cmc    
  419a94:	cli    
  419a95:	inc    DWORD PTR [ebx]
  419a97:	sar    dh,0x8a
  419a9a:	retf   0xf332
  419a9d:	add    al,0x4
  419a9f:	adc    cl,BYTE PTR [esp+eax*4]
  419aa2:	data16 cmc 
  419aa4:	cli    
  419aa5:	inc    edi
  419aa7:	test   DWORD PTR [eax+0x14],0x7c1144ed
  419aae:	adc    bl,dl
  419ab0:	push   ebx
  419ab1:	std    
  419ab2:	add    edi,eax
  419ab4:	or     dh,BYTE PTR [esi+0x27b0000]
  419aba:	or     esi,DWORD PTR [esi-0x41031b63]
  419ac0:	mov    ebp,0x28bf0823
  419ac5:	or     bl,bh
  419ac7:	add    dh,al
  419ac9:	sbb    al,0x4
  419acb:	mov    dh,0x62
  419acd:	sbb    al,BYTE PTR [esi+esi*4]
  419ad0:	push   edx
  419ad1:	sbb    DWORD PTR [edx-0x20],eax
  419ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad5:	adc    BYTE PTR [edx+0x1],al
  419ad8:	xchg   ebp,eax
  419ad9:	fwait
  419ada:	rcl    BYTE PTR [ebx+0x11],cl
  419add:	enter  0x9128,0x79
  419ae1:	mov    esp,0x54330d12
  419ae6:	add    BYTE PTR ds:0xbefd742b,cl
  419aec:	jl     0x419b11
  419aee:	or     dl,cl
  419af0:	adc    al,0x6e
  419af2:	or     eax,0xc3206401
  419af7:	adc    esp,DWORD PTR [edx-0x62ff2b61]
  419afd:	sbb    eax,DWORD PTR [eax+0xa7fbcf8]
  419b03:	(bad)
  419b06:	(bad)  
  419b07:	call   FWORD PTR [ebp+0x1e4d281b]
  419b0d:	jle    0x419af0
  419b0f:	push   DWORD PTR [edi]
  419b11:	bound  ecx,QWORD PTR [eax-0x4c243ebd]
  419b17:	cld    
  419b18:	mov    bl,bh
  419b1a:	add    dh,BYTE PTR [esi+0x34a20000]
  419b20:	mov    ds,WORD PTR [ebx]
  419b22:	xchg   edx,eax
  419b23:	jne    0x419b96
  419b25:	nop
  419b26:	pop    eax
  419b27:	fild   DWORD PTR [ebx]
  419b29:	std    
  419b2a:	push   0x53d50023
  419b2f:	push   esp
  419b30:	mov    cs,WORD PTR [edi]
  419b32:	push   ss
  419b33:	pusha  
  419b34:	adc    al,0x73
  419b36:	test   eax,0x9a8ea602
  419b3b:	sbb    al,BYTE PTR [edx+0x23]
  419b3e:	enter  0x6c0c,0x43
  419b42:	dec    ecx
  419b43:	stc    
  419b44:	retf   
  419b45:	cmc    
  419b46:	mov    dh,0xc
  419b48:	xchg   BYTE PTR [esi+ebx*1],al
  419b4b:	mov    dh,0xf1
  419b4d:	add    ebx,DWORD PTR [ebp-0x5c43c303]
  419b53:	sti    
  419b54:	xor    al,0xc4
  419b56:	pushf  
  419b57:	inc    ecx
  419b58:	inc    edi
  419b59:	or     esp,DWORD PTR [ecx+eax*2+0x54981bea]
  419b60:	scas   al,BYTE PTR es:[edi]
  419b61:	add    dl,BYTE PTR [eax+0x3a019e54]
  419b67:	and    ebp,edi
  419b69:	or     BYTE PTR [edx],dh
  419b6b:	cmp    ebx,0xffffffdb
  419b6e:	into   
  419b6f:	xchg   esi,eax
  419b70:	mov    al,BYTE PTR [eax+0x4e6e2e6]
  419b76:	push   ds
  419b77:	popa   
  419b78:	jmp    0x99fc:0x54fb9d03
  419b7f:	push   esp
  419b80:	addr16 jae 0x419b83
  419b83:	add    dh,ah
  419b85:	ret    0xe6
  419b88:	xor    eax,0xce889d18
  419b8d:	not    BYTE PTR [eax-0x2d69d7ff]
  419b93:	adc    al,0xae
  419b95:	jmp    0x99e5:0xf28e1494
  419b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b9d:	or     edx,DWORD PTR [esp+edi*8+0x2]
  419ba1:	or     eax,edi
  419ba3:	adc    eax,DWORD PTR [eax]
  419ba5:	xchg   BYTE PTR [edi-0xef4e1fd],ah
  419bab:	add    ebx,DWORD PTR [ebp-0xa1bc389]
  419bb1:	xlat   BYTE PTR ds:[ebx]
  419bb2:	jmp    DWORD PTR [ecx-0x24]
  419bb5:	fisttp WORD PTR [eax+0x4eccd514]
  419bbb:	cmp    DWORD PTR [esi-0x758de471],ebp
  419bc1:	or     eax,0xf078173
  419bc6:	jae    0x419bc1
  419bc8:	(bad)  
  419bc9:	(bad)  
  419bca:	or     eax,DWORD PTR [esi-0x4d17fbec]
  419bd0:	or     DWORD PTR ds:0xfd596cfd,0xb9ba282
  419bda:	std    
  419bdb:	push   0xffffffe6
  419bdd:	add    DWORD PTR [ecx-0x75f4813c],eax
  419be3:	out    dx,eax
  419be4:	push   ebx
  419be5:	lds    eax,FWORD PTR [ebx]
  419be7:	dec    esi
  419be8:	add    BYTE PTR [eax],al
  419bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419beb:	std    
  419bec:	sub    DWORD PTR [esi],0xd3fd0db9
  419bf2:	xchg   esi,eax
  419bf3:	and    ebp,DWORD PTR [ebp+0x6a029ee3]
  419bf9:	inc    edx
  419bfa:	mov    eax,0x9ee90a5a
  419bff:	jns    0x419c4c
  419c01:	lds    ebx,FWORD PTR [edi+0x59e85554]
  419c07:	mov    esp,0x783e94fc
  419c0c:	inc    ebp
  419c0d:	jmp    0x419b9e
  419c0f:	(bad)  
  419c10:	sbb    esi,DWORD PTR [eax+0x54]
  419c13:	idiv   esp
  419c15:	jl     0x419c4d
  419c17:	jp     0x419be2
  419c19:	xchg   edi,eax
  419c1a:	scas   eax,DWORD PTR es:[edi]
  419c1b:	(bad)  
  419c1c:	(bad)  
  419c1e:	sahf   
  419c1f:	push   esp
  419c20:	add    eax,0x908264ee
  419c25:	xor    al,0xd9
  419c27:	or     bh,dh
  419c29:	push   esp
  419c2a:	stc    
  419c2b:	add    ebp,eax
  419c2d:	add    BYTE PTR [edi],al
  419c2f:	iret   
  419c30:	out    0x6c,eax
  419c32:	aam    0xef
  419c34:	cli    
  419c35:	mov    ebp,DWORD PTR [esi+eax*4]
  419c38:	sti    
  419c39:	sbb    eax,0x75faf008
  419c3e:	cdq    
  419c3f:	out    dx,eax
  419c40:	jne    0x419cb2
  419c42:	sub    ebp,DWORD PTR [edx+0x9]
  419c45:	inc    ecx
  419c47:	adc    eax,DWORD PTR ss:[eax-0x3c]
  419c4b:	pop    ebp
  419c4c:	push   esi
  419c4d:	test   DWORD PTR [eax],eax
  419c4f:	add    BYTE PTR [edx+ebp*2],al
  419c52:	or     BYTE PTR [ecx+0x478a768a],cl
  419c58:	sub    ebp,esi
  419c5a:	dec    eax
  419c5b:	or     al,BYTE PTR [esi+eax*1+0x618be7f]
  419c62:	add    BYTE PTR [eax],al
  419c64:	je     0x419cd1
  419c66:	push   es
  419c67:	mov    esi,DWORD PTR [ecx]
  419c69:	or     al,BYTE PTR [esi+0x60886]
  419c6f:	add    bh,ch
  419c71:	mov    esp,0x66e34e4
  419c76:	add    BYTE PTR [ebx+0x503d2231],cl
  419c7c:	mov    ebp,DWORD PTR [edx+0x1d]
  419c7f:	pslld  mm7,mm4
  419c82:	cli    
  419c83:	jne    0x419ccd
  419c85:	add    eax,0x52c490b6
  419c8a:	cmp    eax,0x156aab00
  419c8f:	add    edx,DWORD PTR [ebx+0x4475fc4b]
  419c95:	mov    esi,eax
  419c97:	jmp    DWORD PTR [ecx-0x38a03f7]
  419c9d:	in     eax,dx
  419c9e:	cld    
  419c9f:	(bad)  
  419ca1:	repz add al,0xfb
  419ca5:	cmp    ch,0x9
  419ca8:	popf   
  419ca9:	sbb    eax,DWORD PTR [ecx]
  419cab:	mov    eax,0xfd0f3797
  419cb0:	add    al,0xa6
  419cb2:	sbb    bh,ch
  419cb4:	add    BYTE PTR [eax],al
  419cb6:	jmp    0xeeb:0x5d23c494
  419cbd:	jae    0x419d3c
  419cbf:	sub    BYTE PTR [edi+0x5],dl
  419cc2:	shl    dh,cl
  419cc4:	out    dx,eax
  419cc5:	or     al,0x13
  419cc7:	mov    WORD PTR [ebx+0x5b],?
  419cca:	pop    ebp
  419ccb:	sbb    edx,DWORD PTR [eax]
  419ccd:	jae    0x419c64
  419ccf:	sbb    al,0x38
  419cd1:	push   esi
  419cd2:	mov    dl,0x6
  419cd4:	icebp  
  419cd5:	mov    dh,dl
  419cd7:	mov    BYTE PTR [ebx+ecx*1-0x1806f95e],dl
  419cde:	popa   
  419cdf:	js     0x419cf0
  419ce1:	std    
  419ce2:	sbb    bl,bl
  419ce4:	inc    BYTE PTR [edx+0x11261]
  419cea:	inc    ebp
  419ceb:	adc    al,0xd
  419ced:	std    
  419cee:	jp     0x419cb2
  419cf0:	lods   al,BYTE PTR ds:[esi]
  419cf1:	call   0x43bc5d68
  419cf6:	rcr    DWORD PTR [eax],0x57
  419cf9:	push   ebp
  419cfa:	pushf  
  419cfb:	pop    ebx
  419cfc:	mov    cl,0xfc
  419cfe:	sar    bl,1
  419d00:	(bad)  
  419d01:	mov    ch,0x9a
  419d03:	loopne 0x419c99
  419d05:	sbb    ebx,DWORD PTR [edx-0x1f6f7c4f]
  419d0b:	pop    ebx
  419d0c:	add    ebp,edi
  419d0e:	mov    al,0x13
  419d10:	add    al,0xc5
  419d12:	retf   
  419d13:	add    BYTE PTR [ebp+0xeeb9e0f],dl
  419d19:	jae    0x419d1b
  419d1b:	add    BYTE PTR [ecx-0x6f02c55c],dl
  419d21:	and    ebx,DWORD PTR [ecx]
  419d23:	jg     0x419d17
  419d25:	add    esi,esp
  419d27:	adc    BYTE PTR [esi],bl
  419d29:	inc    edx
  419d2a:	out    dx,al
  419d2b:	xchg   BYTE PTR [edx+0x3503e6fb],al
  419d31:	in     eax,dx
  419d32:	retf   0xf010
  419d35:	test   BYTE PTR [esi+0x5b482205],ch
  419d3b:	add    ebx,DWORD PTR [ebp-0x5c5e3ffe]
  419d41:	add    ah,bh
  419d43:	jl     0x419da3
  419d45:	fisub  WORD PTR [esi]
  419d47:	mov    ah,0xc9
  419d49:	mov    es,esi
  419d4b:	add    BYTE PTR [ebx],cl
  419d4d:	add    DWORD PTR [esi+0x54f99696],edx
  419d53:	jae    0x419d62
  419d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d56:	es add al,0xa8
  419d59:	mov    ds,esi
  419d5b:	add    al,0xc8
  419d5d:	scas   eax,DWORD PTR es:[edi]
  419d5e:	jne    0x419cf6
  419d60:	stos   BYTE PTR es:[edi],al
  419d61:	jnp    0x419d05
  419d63:	adc    BYTE PTR [esi],cl
  419d65:	mul    DWORD PTR [ebp-0x6a]
  419d68:	mov    ds:0x8031221a,al
  419d6d:	or     BYTE PTR [ebx+eax*2-0x58],ch
  419d71:	jge    0x419d85
  419d73:	sti    
  419d74:	jb     0x419d7e
  419d76:	jo     0x419d29
  419d78:	cli    
  419d79:	dec    edx
  419d7a:	fisttp DWORD PTR [edi]
  419d7c:	pusha  
  419d7d:	or     BYTE PTR [eax+0x32],al
  419d80:	add    BYTE PTR [eax],al
  419d82:	inc    edi
  419d83:	or     BYTE PTR [esi],ch
  419d85:	jl     0x419d65
  419d87:	fdivrp st(5),st
  419d89:	pop    ecx
  419d8a:	lock add DWORD PTR [edi-0x3971be4d],esp
  419d91:	add    bl,dh
  419d93:	dec    DWORD PTR ds:0x3cf79696
  419d99:	or     DWORD PTR ds:0x2003a6a6,0xffffff8e
  419da0:	call   eax
  419da2:	mov    eax,ds:0x28ee563d
  419da7:	clc    
  419da8:	add    BYTE PTR [ecx+0x720b939a],bh
  419dae:	mov    BYTE PTR ds:0x1396e173,0xde
  419db5:	into   
  419db6:	mov    ds:0x15f6c083,al
  419dbb:	adc    al,0x8
  419dbd:	jmp    0xec071f60
  419dc2:	pop    ecx
  419dc3:	mov    BYTE PTR [edi+0x71],ch
  419dc6:	int3   
  419dc7:	or     edi,ebp
  419dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dca:	test   al,0x23
  419dcc:	or     cl,ch
  419dce:	sahf   
  419dcf:	jns    0x419e14
  419dd1:	int    0xde
  419dd3:	mov    bh,0xfc
  419dd5:	adc    al,0xb9
  419dd7:	div    BYTE PTR [ebp+0x1b939bee]
  419ddd:	out    dx,al
  419dde:	dec    eax
  419ddf:	jb     0x419d71
  419de1:	adc    al,0x61
  419de3:	pop    es
  419de4:	(bad)  
  419de5:	hlt    
  419de6:	add    BYTE PTR [eax],al
  419de8:	xchg   BYTE PTR [edx],al
  419dea:	aad    0xbf
  419dec:	fwait
  419ded:	xchg   ebx,eax
  419dee:	(bad)  
  419df0:	mov    BYTE PTR ds:0x93abe573,0x7
  419df7:	inc    ecx
  419df8:	iret   
  419df9:	sub    ch,bh
  419dfb:	inc    esi
  419dfc:	adc    al,0x42
  419dfe:	or     eax,0xfffacf64
  419e03:	call   0x2f3d86ee
  419e08:	mov    ds:0x9a13491f,al
  419e0d:	add    eax,0xf63aa489
  419e12:	mov    ch,0xbe
  419e14:	mov    eax,ds:0x140e4fc2
  419e19:	out    0xc,eax
  419e1b:	add    BYTE PTR [edx-0x1],ch
  419e1e:	cli    
  419e1f:	jne    0x419e61
  419e21:	or     BYTE PTR [ebx+0x3d517480],dh
  419e27:	add    BYTE PTR [ebx],al
  419e29:	push   0x15
  419e2b:	add    edi,DWORD PTR [ebx]
  419e2d:	dec    ebp
  419e2e:	cld    
  419e2f:	jne    0x419e35
  419e31:	add    al,0xd0
  419e33:	call   FWORD PTR [ecx+0x2]
  419e36:	xchg   ebx,ecx
  419e38:	jecxz  0x419ea3
  419e3a:	add    eax,0xfad853e8
  419e3f:	(bad)  
  419e40:	jns    0x419e05
  419e42:	or     al,BYTE PTR [ebp-0x2f99d]
  419e48:	dec    esp
  419e49:	adc    eax,0xfff9
  419e4e:	add    esp,esi
  419e50:	in     al,0xfe
  419e52:	and    edi,eax
  419e54:	xchg   BYTE PTR [esi-0x40],al
  419e57:	mov    ebp,0xf3f02dc
  419e5c:	dec    BYTE PTR [eax+0x4c880a71]
  419e62:	mov    ch,0xfe
  419e64:	test   BYTE PTR [ebp+0x20],cl
  419e67:	mov    DWORD PTR [ebp+0x10],ecx
  419e6a:	pop    edi
  419e6b:	inc    ebx
  419e6c:	icebp  
  419e6d:	mov    DWORD PTR [ecx-0xe],ecx
  419e70:	mov    BYTE PTR [esp+ecx*1],al
  419e73:	mov    DWORD PTR [edi],eax
  419e75:	mov    DWORD PTR [ecx-0x6],eax
  419e78:	xchg   BYTE PTR [esi+0x1f8],cl
  419e7e:	in     eax,dx
  419e7f:	inc    edx
  419e80:	in     eax,0x8b
  419e82:	scas   eax,DWORD PTR es:[edi]
  419e83:	sub    BYTE PTR [ebx+0x68],cl
  419e86:	(bad)  
  419e87:	jb     0x419e82
  419e89:	bound  edi,QWORD PTR [ebp+0x7b097209]
  419e8f:	cmp    bl,BYTE PTR ds:0x23402
  419e95:	jmp    0x419e34
  419e97:	pop    ss
  419e98:	and    BYTE PTR [ebx+0x7d],0x1b
  419e9c:	jp     0x419ee1
  419e9e:	sbb    DWORD PTR [ebx+0x7c],0x95047943
  419ea5:	and    ebp,DWORD PTR [edx-0x7702fa3b]
  419eab:	cmp    edi,esi
  419ead:	mov    ch,0x2d
  419eaf:	mov    WORD PTR [edi+edi*1+0x249d0000],gs
  419eb6:	xchg   ebp,eax
  419eb7:	sbb    ebx,DWORD PTR [esi-0x6a8cf4bc]
  419ebd:	mov    al,ds:0xc6ea5636
  419ec2:	repz cld 
  419ec4:	push   0xa5730c17
  419ec9:	inc    ebx
  419eca:	es fcmovnbe st,st(2)
  419ecd:	push   esp
  419ece:	test   eax,eax
  419ed0:	push   ecx
  419ed1:	adc    dh,cl
  419ed3:	sbb    eax,0xd0b64c1
  419ed8:	and    BYTE PTR [ebp+0x3],cl
  419edb:	add    BYTE PTR [ebp+0x14e7bca0],bl
  419ee1:	mov    es,WORD PTR [edi-0x3e46300]
  419ee7:	mov    ch,0xea
  419ee9:	sbb    bh,ah
  419eeb:	mov    ch,0xea
  419eed:	sbb    DWORD PTR [edx-0x21],eax
  419ef0:	xchg   ebp,eax
  419ef1:	adc    BYTE PTR [edi],dh
  419ef3:	add    DWORD PTR [ebx+ebx*4-0x7f0eac36],eax
  419efa:	ja     0x419f52
  419efc:	mov    eax,ds:0x1613bca0
  419f01:	adc    DWORD PTR ds:[edi+0x56782aa1],eax
  419f08:	test   eax,0x24eb8ca0
  419f0d:	push   edi
  419f0e:	repnz add edx,DWORD PTR [esi]
  419f11:	add    dh,BYTE PTR [ebp+0x12b775f3]
  419f17:	jns    0x419f19
  419f19:	add    bl,dl
  419f1b:	mul    BYTE PTR [ecx-0x71]
  419f1e:	sub    bh,BYTE PTR [ebx-0x35]
  419f21:	jns    0x419f89
  419f23:	in     al,0x2
  419f25:	or     eax,0x78ef8e20
  419f2a:	pop    esi
  419f2b:	neg    BYTE PTR [edi-0x7a]
  419f2e:	xor    DWORD PTR [edx],eax
  419f30:	out    0x3,eax
  419f32:	int3   
  419f33:	inc    edx
  419f34:	rol    BYTE PTR [ebp+0x78e70298],1
  419f3a:	pop    esi
  419f3b:	fisub  WORD PTR [esi]
  419f3d:	mov    ah,0xf1
  419f3f:	mov    es,WORD PTR [esi]
  419f41:	std    
  419f42:	xor    ch,bh
  419f44:	lds    edx,FWORD PTR [esi+0x7374f586]
  419f4a:	sub    eax,0xd00426a7
  419f4f:	mov    cs,esi
  419f51:	add    al,dh
  419f53:	stos   DWORD PTR es:[edi],eax
  419f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f55:	xchg   esi,eax
  419f56:	xchg   edx,eax
  419f57:	jns    0x419f0b
  419f59:	or     al,0x2e
  419f5b:	not    BYTE PTR [ebp+0x3a1a9a96]
  419f61:	das    
  419f62:	test   al,0x4
  419f64:	ins    BYTE PTR es:[edi],dx
  419f65:	inc    ebx
  419f66:	nop
  419f67:	jg     0x419f83
  419f69:	add    eax,0x1280029d
  419f6e:	test   DWORD PTR [esi+ebp*2],eax
  419f71:	enter  0xfae7,0xdb
  419f75:	jmp    0x419f42
  419f77:	mov    ah,0xb2
  419f79:	xchg   esi,eax
  419f7a:	dec    eax
  419f7b:	retf   0xaba4
  419f7e:	add    BYTE PTR [eax],al
  419f80:	out    dx,al
  419f81:	hlt    
  419f82:	popa   
  419f83:	test   DWORD PTR ds:0x9c03e703,edx
  419f89:	mov    esp,0xfadfcace
  419f8e:	(bad)  
  419f8f:	mov    esp,0xd94379c5
  419f94:	(bad)  
  419f95:	jl     0x419f17
  419f97:	jmp    0xa4caa23a
  419f9c:	ss jge 0x419fe5
  419f9f:	cdq    
  419fa0:	mov    ch,0xbf
  419fa2:	or     esp,DWORD PTR [eax+0x20]
  419fa5:	addr16 add cl,ch
  419fa8:	sahf   
  419fa9:	jns    0x419fee
  419fab:	std    
  419fac:	scas   al,BYTE PTR es:[edi]
  419fad:	sub    bl,BYTE PTR [ecx]
  419faf:	sub    ebx,edi
  419fb1:	jmp    0x419fae
  419fb3:	out    dx,al
  419fb4:	xchg   esi,eax
  419fb5:	jnp    0x41a015
  419fb7:	pop    ebp
  419fb8:	fstp   DWORD PTR [esp+eax*1]
  419fbb:	out    0x9e,al
  419fbd:	add    dh,BYTE PTR [ecx]
  419fbf:	test   eax,0xe7fc1cd9
  419fc4:	sahf   
  419fc5:	add    cl,BYTE PTR ds:0xe04de7f
  419fcb:	ja     0x419fdb
  419fcd:	add    cl,BYTE PTR [ecx-0x1fbb02d9]
  419fd3:	loope  0x419fa0
  419fd5:	inc    ecx
  419fd6:	add    DWORD PTR [eax-0x1de040c0],ebp
  419fdc:	popa   
  419fdd:	pop    DWORD PTR ds:0x2ffc6a
  419fe3:	add    BYTE PTR [eax],0x0
  419fe6:	mov    cl,0xf6
  419fe8:	mov    ch,0x31
  419fea:	call   0xdf43:0x9d29b5f5
  419ff1:	loope  0x419f86
  419ff3:	cmp    eax,DWORD PTR [edi-0x798632e4]
  419ff9:	jge    0x419f94
  419ffb:	add    al,BYTE PTR [eax]
  419ffd:	jo     0x41a05b
  419fff:	xor    ecx,DWORD PTR [ebx-0x79845154]
  41a005:	jne    0x419fa8
  41a007:	add    al,BYTE PTR [eax]
  41a009:	add    bh,ch
  41a00b:	inc    eax
  41a00c:	or     eax,0x84fb8383
  41a011:	jge    0x419fbf
  41a013:	test   DWORD PTR [eax-0x20],eax
  41a016:	mov    bh,0xf6
  41a018:	sbb    eax,0x888a4f7f
  41a01d:	lock call 0xe6da:0xf989faf7
  41a025:	sbb    al,0xbf
  41a027:	(bad)  
  41a028:	mov    esp,0x10f836e1
  41a02d:	jo     0x41a09b
  41a02f:	cmp    edi,ebp
  41a031:	mov    BYTE PTR [ecx-0x25],al
  41a034:	add    al,0x91
  41a037:	add    BYTE PTR [edx-0x6],ch
  41a03a:	in     eax,dx
  41a03b:	add    DWORD PTR [esi],0x40840400
  41a041:	loopne 0x41a088
  41a043:	fild   WORD PTR [ecx]
  41a045:	push   eax
  41a046:	(bad)  [eax+0x9]
  41a049:	inc    DWORD PTR [eax]
  41a04b:	add    BYTE PTR [ecx-0x2bea0526],ah
  41a051:	adc    BYTE PTR ds:0xd423f00,bh
  41a057:	mov    ebp,DWORD PTR [ecx+0x10458622]
  41a05d:	test   BYTE PTR [eax+0x20],al
  41a060:	cs (bad) 
  41a062:	jle    0x41a028
  41a064:	mov    eax,0x1b1b5e3a
  41a069:	jl     0x41a04e
  41a06b:	(bad)  
  41a06c:	aaa    
  41a06d:	rol    BYTE PTR [ecx],0x41
  41a070:	or     eax,0x91ff20bb
  41a075:	loop   0x41a082
  41a077:	mov    dh,0x34
  41a079:	std    
  41a07a:	mov    dl,0x90
  41a07c:	add    al,0xab
  41a07e:	cmp    al,0x0
  41a080:	xchg   DWORD PTR [ebx+0x589d571c],esi
  41a086:	nop
  41a087:	sbb    edx,DWORD PTR [esi]
  41a089:	and    eax,0xa185730a
  41a08e:	or     DWORD PTR [ebx-0x53],esi
  41a091:	inc    eax
  41a092:	nop
  41a093:	or     edx,DWORD PTR [edx-0x41]
  41a096:	clc    
  41a097:	out    0x81,eax
  41a099:	(bad)  
  41a09b:	std    
  41a09c:	adc    al,0xaf
  41a09e:	in     al,dx
  41a09f:	xor    BYTE PTR ds:0x983f9eb,0xec
  41a0a6:	add    BYTE PTR [eax],al
  41a0a8:	push   0x22fd04f2
  41a0ad:	stc    
  41a0ae:	jl     0x41a037
  41a0b0:	add    BYTE PTR [eax],al
  41a0b2:	popf   
  41a0b3:	jmp    0x41a0b5
  41a0b5:	sbb    ebp,0x7f
  41a0b8:	add    bh,BYTE PTR [ebx]
  41a0ba:	stos   DWORD PTR es:[edi],eax
  41a0bb:	out    dx,eax
  41a0bc:	push   es
  41a0bd:	std    
  41a0be:	mov    BYTE PTR [ebp+esi*2+0x43],cl
  41a0c2:	int    0x72
  41a0c4:	adc    BYTE PTR [ebp+ebx*4+0x608900eb],0xcb
  41a0cc:	inc    eax
  41a0cd:	loopne 0x41a06e
  41a0cf:	sbb    eax,DWORD PTR [edi]
  41a0d1:	jae    0x41a0cc
  41a0d3:	rcl    BYTE PTR [ecx-0x2f212df5],0x15
  41a0da:	pop    ebp
  41a0db:	jmp    0x41a158
  41a0dd:	inc    ebx
  41a0de:	jge    0x41a0d8
  41a0e0:	dec    esi
  41a0e1:	dec    eax
  41a0e2:	pushf  
  41a0e3:	lock dec esi
  41a0e5:	push   eax
  41a0e6:	lahf   
  41a0e7:	stos   BYTE PTR es:[edi],al
  41a0e8:	and    BYTE PTR [eax],cl
  41a0ea:	xchg   esi,eax
  41a0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ec:	add    bh,BYTE PTR [edi-0x761bd0ec]
  41a0f2:	popf   
  41a0f3:	ins    BYTE PTR es:[edi],dx
  41a0f4:	inc    eax
  41a0f5:	or     al,0xd1
  41a0f7:	pop    ds
  41a0f8:	test   DWORD PTR [ebx-0x2f88efb],0x33ac0216
  41a102:	and    al,0x4f
  41a104:	cmp    edi,DWORD PTR [ebx+0x1b]
  41a107:	xchg   esi,eax
  41a108:	out    0x3,al
  41a10a:	popf   
  41a10b:	(bad)  
  41a10c:	arpl   WORD PTR [ebx+eiz*2],dx
  41a10f:	add    DWORD PTR [esi-0x33],eax
  41a112:	bound  edx,QWORD PTR [ecx]
  41a114:	arpl   WORD PTR [ebp+0x1390000],si
  41a11a:	or     DWORD PTR ss:[esi+0x42c57f76],ebp
  41a121:	jmp    0xb772:0x13820ae
  41a128:	push   esi
  41a129:	(bad)  
  41a12a:	imul   edx,DWORD PTR [ebx+ebp*1],0x1
  41a12e:	push   cs
  41a12f:	int    0x5a
  41a131:	jbe    0x41a120
  41a133:	or     BYTE PTR [esi+0x12c54f76],ch
  41a139:	mov    WORD PTR [ebx-0x1c71fc11],gs
  41a13f:	add    ebx,DWORD PTR [ebp+0x24342b8d]
  41a145:	dec    edi
  41a146:	mov    ebx,0xe6961b7a
  41a14b:	add    ebx,DWORD PTR [ebp-0x1cec9c71]
  41a151:	add    dh,al
  41a153:	int3   
  41a154:	loop   0x41a1cb
  41a156:	in     eax,0x8
  41a158:	scas   al,BYTE PTR es:[edi]
  41a159:	jbe    0x41a1da
  41a15b:	(bad)  
  41a15c:	retf   0xa733
  41a15f:	ret    
  41a160:	mov    ebx,0xb8088e0c
  41a165:	mov    WORD PTR [ebx],fs
  41a167:	loopne 0x41a18e
  41a169:	push   edi
  41a16a:	sti    
  41a16b:	ret    
  41a16c:	pop    edx
  41a16d:	add    DWORD PTR [esp+eiz*8],edx
  41a170:	mov    eax,ds:0xe08e376
  41a175:	jmp    0x41a106
  41a177:	mov    edi,0x76000070
  41a17c:	add    BYTE PTR [eax],al
  41a17e:	or     DWORD PTR [eax+edx*1+0x60],eax
  41a182:	sbb    al,0x83
  41a184:	(bad)  
  41a185:	call   0xf1842b28
  41a18a:	mul    DWORD PTR [eax+0x74]
  41a18d:	pusha  
  41a18e:	pop    esp
  41a18f:	jo     0x41a17a
  41a191:	pop    ds
  41a192:	loope  0x41a1d7
  41a194:	clc    
  41a195:	add    BYTE PTR [edx],bl
  41a197:	adc    al,0xd
  41a199:	ins    BYTE PTR es:[edi],dx
  41a19a:	mov    eax,ebp
  41a19c:	cld    
  41a19d:	ss xchg ebp,eax
  41a19f:	jae    0x41a1b9
  41a1a1:	(bad)  
  41a1a3:	repz cld 
  41a1a5:	pushf  
  41a1a6:	mov    cs,WORD PTR [ecx-0x158e8d3b]
  41a1ac:	mov    bl,0x33
  41a1ae:	xchg   ebp,eax
  41a1af:	std    
  41a1b0:	sub    BYTE PTR [ecx],0x25
  41a1b3:	test   BYTE PTR [ecx+ebp*8-0x63fefd62],bh
  41a1ba:	mov    ds:0x95dd42fd,al
  41a1bf:	jae    0x41a1e5
  41a1c1:	sbb    DWORD PTR [esi+0x760572fd],0xffffffd5
  41a1c8:	cld    
  41a1c9:	push   esp
  41a1ca:	add    DWORD PTR [ebx+0x73a23fc8],ecx
  41a1d0:	adc    dh,cl
  41a1d2:	or     al,0xc
  41a1d4:	std    
  41a1d5:	cmp    al,0xd9
  41a1d7:	out    0xeb,eax
  41a1d9:	mov    ds:0xa982fd9a,eax
  41a1de:	sub    eax,0xc2e6b2
  41a1e3:	add    BYTE PTR [ebp+0x4700002],bl
  41a1e9:	cld    
  41a1ea:	xchg   BYTE PTR [ebp*4-0xceb37c6],ch
  41a1f1:	(bad)  
  41a1f2:	jb     0x41a1e5
  41a1f4:	daa    
  41a1f5:	push   ebx
  41a1f6:	hlt    
  41a1f7:	add    BYTE PTR [ebx],ah
  41a1f9:	xchg   ecx,eax
  41a1fa:	in     al,dx
  41a1fb:	mov    edi,DWORD PTR [edx]
  41a1fd:	jnp    0x41a1c6
  41a1ff:	call   0x3cce9b
  41a204:	stc    
  41a205:	inc    esi
  41a206:	je     0x41a218
  41a208:	xchg   DWORD PTR [edx-0x10c60010],ebp
  41a20e:	xchg   DWORD PTR [ebp+0x68],eax
  41a211:	int3   
  41a212:	inc    ecx
  41a213:	clc    
  41a214:	push   eax
  41a215:	daa    
  41a216:	out    0x1f,eax
  41a218:	iret   
  41a219:	mov    eax,0x928d8578
  41a21e:	adc    al,0x3b
  41a220:	xor    dl,BYTE PTR [edi-0x55b0ec92]
  41a226:	add    al,0x76
  41a228:	xor    dl,ah
  41a22a:	mov    esp,0x58c0ad40
  41a22f:	cmp    edi,DWORD PTR [edi+esi*8-0x75]
  41a233:	jo     0x41a1d0
  41a235:	pop    es
  41a236:	sti    
  41a237:	cmp    eax,DWORD PTR [ecx+0x7]
  41a23a:	or     eax,DWORD PTR [edx-0x4e2b8]
  41a240:	jg     0x41a203
  41a242:	and    BYTE PTR [eax+0x7d],al
  41a245:	shl    DWORD PTR [eax],0xff
  41a248:	add    BYTE PTR [eax],al
  41a24a:	pop    ecx
  41a24b:	loop   0x41a1d4
  41a24d:	xlat   BYTE PTR ds:[ebx]
  41a24e:	dec    esi
  41a24f:	push   es
  41a250:	sti    
  41a251:	jne    0x41a243
  41a253:	jnp    0x41a21c
  41a255:	dec    DWORD PTR [ecx-0x12]
  41a258:	push   edx
  41a259:	call   FWORD PTR [ecx-0x3f8a040a]
  41a25f:	pop    es
  41a260:	jno    0x41a26a
  41a262:	fcomp  QWORD PTR [esi+edx*8-0x407e0c01]
  41a269:	cmovns ebx,DWORD PTR [ebp-0x243c0000]
  41a270:	pop    ecx
  41a271:	hlt    
  41a272:	popf   
  41a273:	aam    0xa7
  41a275:	sti    
  41a276:	cs mov ebx,0x8580fa1b
  41a27c:	add    eax,0x7fffe389
  41a281:	(bad)  
  41a282:	call   0xca6d:0x82e3166f
  41a289:	pop    ebp
  41a28a:	or     ebp,esi
  41a28c:	jle    0x41a274
  41a28e:	js     0x41a2ed
  41a290:	push   es
  41a291:	cmp    eax,ecx
  41a293:	jecxz  0x41a28a
  41a295:	test   DWORD PTR [eax+0x47],eax
  41a298:	push   es
  41a299:	std    
  41a29a:	mov    gs,WORD PTR [ebx]
  41a29c:	rol    DWORD PTR [esi-0x38366025],0x34
  41a2a3:	aaa    
  41a2a4:	sbb    edi,ebp
  41a2a6:	inc    edx
  41a2a7:	popa   
  41a2a8:	shl    bh,0x74
  41a2ab:	scas   al,BYTE PTR es:[edi]
  41a2ac:	in     al,dx
  41a2ad:	or     al,0x0
  41a2af:	add    BYTE PTR [eax],ah
  41a2b1:	sub    BYTE PTR [eax],ah
  41a2b3:	std    
  41a2b4:	sub    dl,cl
  41a2b6:	mov    ds:0x3568926b,al
  41a2bb:	out    0x1a,al
  41a2bd:	add    eax,0x709eb5f6
  41a2c2:	cmp    DWORD PTR [ecx],esi
  41a2c4:	out    dx,eax
  41a2c5:	push   0x185f0524
  41a2ca:	pop    ds
  41a2cb:	mov    DWORD PTR [eax-0x21],ebp
  41a2ce:	inc    eax
  41a2cf:	call   0x8421472
  41a2d4:	pop    esi
  41a2d5:	outs   dx,DWORD PTR ds:[esi]
  41a2d6:	xor    al,0xd
  41a2d8:	sbb    DWORD PTR [eax+0x1d],esi
  41a2db:	std    
  41a2dc:	fcmovb st,st(4)
  41a2de:	mov    esp,0xe036d213
  41a2e3:	imul   ebx,DWORD PTR [ebp+0x161b8cb4],0x95730295
  41a2ed:	add    dh,BYTE PTR [edx+0x39]
  41a2f0:	dec    ebx
  41a2f1:	std    
  41a2f2:	adc    esi,esp
  41a2f4:	test   eax,0x2e04e377
  41a2f9:	or     bh,BYTE PTR [edi+0x32]
  41a2fc:	jb     0x41a2fb
  41a2fe:	test   DWORD PTR [edi+0x5d],edi
  41a301:	jbe    0x41a349
  41a303:	sbb    ebx,DWORD PTR [edx+0x1]
  41a306:	out    0x3,eax
  41a308:	sbb    bl,BYTE PTR [edi+0x6b]
  41a30b:	leave  
  41a30c:	bound  edi,QWORD PTR [edi-0x49]
  41a30f:	enter  0x6ed0,0xda
  41a313:	fild   DWORD PTR [eax]
  41a315:	add    BYTE PTR [ecx+0x5578e9b4],bl
  41a31b:	xor    DWORD PTR [ecx],edi
  41a31d:	cmp    DWORD PTR [edx+0x5],0x893f30a9
  41a324:	stos   DWORD PTR es:[edi],eax
  41a325:	(bad)  
  41a327:	jmp    0x3463:0xa9979e9
  41a32e:	mov    cl,0x2a
  41a330:	stos   BYTE PTR es:[edi],al
  41a331:	add    al,0xde
  41a333:	push   ss
  41a334:	jb     0x41a2f5
  41a336:	mov    ?,WORD PTR [ecx]
  41a338:	lods   al,BYTE PTR ds:[esi]
  41a339:	or     esp,DWORD PTR [ecx+0x25ea01d7]
  41a33f:	inc    esp
  41a340:	cmp    DWORD PTR [esi-0x23],0x75
  41a344:	fcmove st,st(0)
  41a346:	or     bh,BYTE PTR [di-0xb]
  41a34a:	int    0xcb
  41a34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34d:	jp     0x41a3ba
  41a34f:	pop    esi
  41a350:	and    al,BYTE PTR [ebx-0x60]
  41a353:	lea    esi,ds:0x11fce81e
  41a359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35a:	out    0xc,al
  41a35c:	imul   ebp,eax,0x78c5fcbf
  41a362:	pop    esi
  41a363:	es daa 
  41a365:	jnp    0x41a3c5
  41a367:	add    BYTE PTR es:[esi-0x6976deed],dh
  41a36e:	adc    al,0xfd
  41a370:	std    
  41a371:	sbb    al,0xc5
  41a373:	mov    eax,ecx
  41a375:	sahf   
  41a376:	sbb    edx,DWORD PTR ds:0x9656
  41a37c:	adc    ecx,DWORD PTR ds:0xff9514fd
  41a382:	jb     0x41a375
  41a384:	mov    dh,0x47
  41a386:	xlat   BYTE PTR ds:[ebx]
  41a387:	jle    0x41a32a
  41a389:	jg     0x41a34a
  41a38b:	out    0x3,al
  41a38d:	dec    eax
  41a38e:	add    ecx,ebp
  41a390:	sahf   
  41a391:	dec    ecx
  41a392:	cmp    esp,eax
  41a394:	call   0xfce6:0xbd50d471
  41a39b:	push   esi
  41a39c:	in     eax,0x44
  41a39e:	jl     0x41a404
  41a3a0:	fimul  WORD PTR ds:0xfdb22184
  41a3a6:	cld    
  41a3a7:	add    al,BYTE PTR [edx]
  41a3a9:	add    al,0xd
  41a3ab:	outs   dx,DWORD PTR ds:[esi]
  41a3ac:	mov    esi,esp
  41a3ae:	cld    
  41a3af:	cs xchg edi,eax
  41a3b1:	lock loop 0x41a3da
  41a3b4:	cdq    
  41a3b5:	mov    DWORD PTR [ebp-0x63],eax
  41a3b8:	stos   DWORD PTR es:[edi],eax
  41a3b9:	ret    0x6d0c
  41a3bc:	(bad)  
  41a3be:	cld    
  41a3bf:	push   cs
  41a3c0:	in     eax,0x58
  41a3c2:	or     dh,dh
  41a3c4:	nop
  41a3c5:	mov    ah,0xe3
  41a3c7:	(bad)  
  41a3c8:	sahf   
  41a3c9:	adc    DWORD PTR [ebp-0x6b],0xffffffd5
  41a3cd:	shl    esi,0x10
  41a3d0:	fwait
  41a3d1:	std    
  41a3d2:	cld    
  41a3d3:	jb     0x41a439
  41a3d5:	es inc eax
  41a3d7:	jo     0x41a425
  41a3d9:	push   ss
  41a3da:	xchg   DWORD PTR [esi*4+0xfee952],ebp
  41a3e1:	add    BYTE PTR [ebx],ch
  41a3e3:	inc    ecx
  41a3e4:	clc    
  41a3e5:	add    BYTE PTR [ebp+0x390f1449],bl
  41a3eb:	xchg   ebx,eax
  41a3ec:	loopne 0x41a3ed
  41a3ee:	or     edi,DWORD PTR [esi+ebx*2]
  41a3f1:	ins    BYTE PTR es:[edi],dx
  41a3f2:	fild   DWORD PTR [edi+edx*4+0xafffbe5]
  41a3f9:	mov    dh,0xb7
  41a3fb:	mov    WORD PTR [edx+0x30],cs
  41a3fe:	mov    ebx,0xc70800b9
  41a403:	cmp    eax,0x8a8bf441
  41a408:	jb     0x41a3ee
  41a40a:	or     eax,DWORD PTR [eax]
  41a40c:	sti    
  41a40d:	inc    ebp
  41a40e:	pusha  
  41a40f:	add    BYTE PTR [ecx+0x24],dh
  41a412:	sahf   
  41a413:	push   es
  41a414:	sti    
  41a415:	jne    0x41a3af
  41a417:	mov    edx,ebx
  41a419:	call   DWORD PTR [ecx+0x17]
  41a41c:	xchg   ebx,ecx
  41a41e:	and    al,BYTE PTR [eax]
  41a420:	jno    0x41a432
  41a422:	jmp    0x41a49d
  41a424:	or     al,0xff
  41a426:	adc    DWORD PTR [edi],eax
  41a428:	call   0xfb4120d9
  41a42d:	test   DWORD PTR [edx+edi*2-0x4e],esi
  41a431:	jmp    0x41a855
  41a436:	scas   eax,DWORD PTR es:[edi]
  41a437:	dec    ecx
  41a438:	and    al,0x40
  41a43a:	lods   eax,DWORD PTR ds:[esi]
  41a43b:	dec    ecx
  41a43c:	and    al,0x50
  41a43e:	lahf   
  41a43f:	xchg   DWORD PTR cs:[ebp-0x54],eax
  41a443:	cmp    eax,0x1441
  41a448:	or     edx,DWORD PTR [edx+0xbe432]
  41a44e:	aaa    
  41a44f:	pop    esi
  41a450:	sbb    BYTE PTR [eax],dl
  41a452:	jg     0x41a492
  41a454:	mov    eax,ds:0x120ffaff
  41a459:	add    al,0x3f
  41a45b:	cmp    ecx,eax
  41a45d:	cli    
  41a45e:	or     eax,DWORD PTR [ebp-0x317f663]
  41a464:	fcmove st,st(3)
  41a466:	inc    edi
  41a467:	adc    al,0xd2
  41a469:	cmp    eax,0xbc9d6a28
  41a46e:	ja     0x41a48c
  41a470:	push   ss
  41a471:	pushf  
  41a472:	add    DWORD PTR [ebx-0x6b],esi
  41a475:	pusha  
  41a476:	into   
  41a477:	push   ebp
  41a478:	mov    dl,0x1d
  41a47a:	adc    al,0xfd
  41a47c:	xor    ch,ch
  41a47e:	add    DWORD PTR [ebx-0x6b],esi
  41a481:	adc    DWORD PTR [esi-0x28],0xbf87899a
  41a488:	or     DWORD PTR [ebx-0x14],eax
  41a48b:	push   edx
  41a48c:	lahf   
  41a48d:	jmp    0x41a48f
  41a48f:	mov    eax,ebx
  41a491:	mov    DWORD PTR [eax-0x79],0xe950bfe0
  41a498:	ret    0x4874
  41a49b:	clc    
  41a49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49d:	sahf   
  41a49e:	adc    al,0xd
  41a4a0:	adc    BYTE PTR [esi+eiz*8-0x4],cl
  41a4a4:	pop    edx
  41a4a5:	adc    eax,0x6ca26c62
  41a4aa:	jmp    0x4a41a592
  41a4af:	cmp    DWORD PTR [edx],edx
  41a4b1:	mov    dh,0x9e
  41a4b3:	fs dec edi
  41a4b5:	xor    BYTE PTR [edx-0x21f7fa8f],ch
  41a4bb:	loop   0x41a504
  41a4bd:	hlt    
  41a4be:	call   0x211:0x22e0c65f
  41a4c5:	inc    ebx
  41a4c6:	mov    cl,0x8
  41a4c8:	js     0x41a4ee
  41a4ca:	xchg   ebx,ebp
  41a4cc:	add    DWORD PTR [ebx-0x57],esi
  41a4cf:	je     0x41a4ab
  41a4d1:	cld    
  41a4d2:	mov    bl,dl
  41a4d4:	(bad)  
  41a4d5:	enter  0xe853,0x74
  41a4d9:	adc    dl,dh
  41a4db:	add    bl,BYTE PTR [eax+edx*1-0x18]
  41a4df:	outs   dx,DWORD PTR ds:[esi]
  41a4e0:	out    dx,eax
  41a4e1:	jmp    0x41a4ce
  41a4e3:	rcl    ebp,1
  41a4e5:	add    DWORD PTR [esi],ebx
  41a4e7:	ret    
  41a4e8:	push   edx
  41a4e9:	mov    dh,0xbb
  41a4eb:	cli    
  41a4ec:	out    0x3,eax
  41a4ee:	popf   
  41a4ef:	lea    esp,[ebx]
  41a4f1:	sub    BYTE PTR [ebp-0x75],bl
  41a4f4:	sub    ebp,DWORD PTR [eax]
  41a4f6:	dec    ebp
  41a4f7:	in     eax,dx
  41a4f8:	dec    BYTE PTR [edi+ebx*2-0x6eb92006]
  41a4ff:	or     DWORD PTR [ebp+eax*4-0x43],ebp
  41a503:	stc    
  41a504:	xchg   ebp,eax
  41a505:	cmp    eax,0x84de66fb
  41a50a:	and    eax,0x980185de
  41a50f:	mov    al,0xe9
  41a511:	inc    esp
  41a512:	add    BYTE PTR [eax],al
  41a514:	retf   0x7b3f
  41a517:	adc    DWORD PTR [ecx],esp
  41a519:	mov    al,BYTE PTR [bx+di]
  41a51c:	jo     0x41a517
  41a51e:	stos   DWORD PTR es:[edi],eax
  41a51f:	pop    ss
  41a520:	push   0x9d6e036f
  41a525:	stc    
  41a526:	fistp  DWORD PTR [edi]
  41a528:	and    al,0xd1
  41a52a:	dec    ebp
  41a52b:	ja     0x41a4e2
  41a52d:	lea    esi,[ecx]
  41a52f:	pop    edx
  41a530:	dec    eax
  41a531:	outs   dx,DWORD PTR ds:[esi]
  41a532:	xlat   BYTE PTR ds:[ebx]
  41a533:	add    dh,cl
  41a535:	push   es
  41a536:	ss ja  0x41a4de
  41a539:	jmp    0xc46b:0xf931d989
  41a540:	scas   al,BYTE PTR es:[edi]
  41a541:	mov    ebx,0xf923a60f
  41a546:	out    0x6d,al
  41a548:	por    mm6,QWORD PTR [eax+0x3]
  41a54c:	popf   
  41a54d:	add    dh,BYTE PTR [edx+0x47]
  41a550:	or     DWORD PTR [ebx+0x3f1417a3],ecx
  41a556:	add    ch,cl
  41a558:	pop    esi
  41a559:	add    DWORD PTR [edx-0x3b],0xe85fe14e
  41a560:	sahf   
  41a561:	add    cl,BYTE PTR [ecx+0x432fe124]
  41a567:	std    
  41a568:	lods   eax,DWORD PTR ds:[esi]
  41a569:	lea    ebx,[edx]
  41a56b:	retf   0xf79d
  41a56e:	mov    BYTE PTR [edi],dh
  41a570:	dec    ebp
  41a571:	cmp    edx,edi
  41a573:	out    dx,al
  41a574:	sbb    DWORD PTR [edx],esp
  41a576:	in     al,0xb6
  41a578:	add    BYTE PTR [eax],al
  41a57a:	popf   
  41a57b:	cmp    DWORD PTR [edx-0x4b],0xffffffa2
  41a57f:	jne    0x41a5c2
  41a581:	jb     0x41a5d7
  41a583:	sbb    al,BYTE PTR [ebx+0x6a0f2aa9]
  41a589:	jmp    0xed97317c
  41a58e:	and    ebx,eax
  41a590:	out    0x50,eax
  41a592:	stc    
  41a593:	add    al,BYTE PTR [eax]
  41a595:	fs pop esi
  41a597:	pop    es
  41a598:	cmp    DWORD PTR [ecx-0x80],0xfffffff7
  41a59c:	cld    
  41a59d:	cmp    BYTE PTR [ebx-0x47faba77],0xca
  41a5a4:	cmp    BYTE PTR [eax-0x1b],al
  41a5a7:	push   ss
  41a5a8:	mov    ah,dl
  41a5aa:	cwde   
  41a5ab:	dec    eax
  41a5ac:	sub    al,0xd4
  41a5ae:	stos   DWORD PTR es:[edi],eax
  41a5af:	xor    edi,0xd27eade8
  41a5b5:	dec    ebx
  41a5b6:	popf   
  41a5b7:	cmc    
  41a5b8:	mov    DWORD PTR [edx-0x3b9c361],ebp
  41a5be:	lea    edi,[esi-0x3a]
  41a5c1:	or     ebx,DWORD PTR [ebp+0x2aac88f5]
  41a5c7:	pop    es
  41a5c8:	mov    dh,0xea
  41a5ca:	and    DWORD PTR [ecx-0xee65507],edi
  41a5d0:	or     al,0x0
  41a5d2:	adc    ecx,DWORD PTR [ebx-0x7fc0091]
  41a5d8:	sti    
  41a5d9:	and    al,0x81
  41a5db:	inc    esi
  41a5dc:	mov    DWORD PTR [ecx+0x0],eax
  41a5df:	add    BYTE PTR [edi+edi*2],al
  41a5e2:	hlt    
  41a5e3:	or     dh,bl
  41a5e5:	jg     0x41a5ba
  41a5e7:	add    ah,dh
  41a5e9:	add    ecx,DWORD PTR [ebx]
  41a5eb:	xchg   BYTE PTR [eiz*8-0x9b80005],ah
  41a5f2:	or     BYTE PTR [esi-0x1c],dh
  41a5f5:	test   ah,dh
  41a5f7:	or     eax,0x85391b88
  41a5fc:	les    eax,FWORD PTR [ebx]
  41a5fe:	add    BYTE PTR [edi],cl
  41a600:	cmp    DWORD PTR [ebx+0x3403ffde],ecx
  41a606:	sar    BYTE PTR [ecx],0x7a
  41a609:	pop    esi
  41a60a:	or     eax,DWORD PTR [ebp-0x41afa]
  41a610:	sbb    eax,0x74fffcb2
  41a615:	cmp    al,0x5e
  41a617:	ins    BYTE PTR es:[edi],dx
  41a618:	jae    0x41a59e
  41a61a:	lahf   
  41a61b:	add    BYTE PTR [ebx+eax*1+0x87e3b80],al
  41a622:	sbb    DWORD PTR [edx+0x43000374],0xfffc9acd
  41a62c:	inc    esp
  41a62d:	test   ah,dh
  41a62f:	or     DWORD PTR [ebx+0x7f],esi
  41a632:	push   esi
  41a633:	loop   0x41a618
  41a635:	idiv   DWORD PTR [edi-0x8]
  41a638:	xchg   esp,eax
  41a639:	pop    es
  41a63a:	test   BYTE PTR [ecx-0x1a],dl
  41a63d:	idiv   ebx
  41a63f:	cmp    eax,0xfffffe24
  41a644:	add    BYTE PTR [eax],al
  41a646:	(bad)  
  41a647:	jns    0x41a6c8
  41a649:	clc    
  41a64a:	sub    eax,0x9d83766f
  41a64f:	adc    DWORD PTR [esp+esi*2],esp
  41a652:	mov    esi,es
  41a654:	mov    al,ds:0xde90aff
  41a659:	or     eax,0xb
  41a65c:	std    
  41a65d:	cld    
  41a65e:	push   es
  41a65f:	test   DWORD PTR [ecx+0x5e7ba7f7],eax
  41a665:	and    ebp,0xb8860ded
  41a66b:	retf   
  41a66c:	std    
  41a66d:	cld    
  41a66e:	cwde   
  41a66f:	add    WORD PTR [eax],ax
  41a672:	popf   
  41a673:	les    ecx,FWORD PTR [ebx-0x7f]
  41a676:	(bad)
  41a679:	sub    BYTE PTR [eax+0x1efcfdcb],0xb1
  41a680:	pcmpeqd mm3,QWORD PTR [esi+eiz*8-0x79]
  41a685:	jmp    FWORD PTR [edx+0x16cde9e8]
  41a68b:	daa    
  41a68c:	cmp    dh,dh
  41a68e:	mov    eax,ds:0x58e904e3
  41a693:	popa   
  41a694:	dec    ebx
  41a695:	xor    al,0x93
  41a697:	call   0xcab7aaa4
  41a69c:	mov    DWORD PTR [ebp-0x4f],ecx
  41a69f:	jne    0x41a6a6
  41a6a1:	or     BYTE PTR [eax+eax*4+0x17db88b1],bl
  41a6a8:	test   BYTE PTR [ebx],0x0
  41a6ab:	add    BYTE PTR [ebp+0x260fe9ea],dl
  41a6b1:	sahf   
  41a6b2:	xor    al,0xf6
  41a6b4:	cdq    
  41a6b5:	jecxz  0x41a6c7
  41a6b7:	jmp    0x348d17b8
  41a6bc:	dec    ebx
  41a6bd:	loopne 0x41a6c7
  41a6bf:	adc    BYTE PTR [edx+0x32dece67],ch
  41a6c5:	and    eax,0x29142fe
  41a6ca:	es js  0x41a746
  41a6cd:	push   0x168ffee7
  41a6d2:	(bad)  
  41a6d3:	(bad)  
  41a6d4:	adc    DWORD PTR [eax-0x11],esi
  41a6d7:	mov    dl,ch
  41a6d9:	dec    esp
  41a6da:	push   es
  41a6db:	js     0x41a68a
  41a6dd:	cmc    
  41a6de:	jae    0x41a6ef
  41a6e0:	clc    
  41a6e1:	outs   dx,DWORD PTR ds:[esi]
  41a6e2:	fucomip st,st(3)
  41a6e4:	lahf   
  41a6e5:	int3   
  41a6e6:	in     eax,dx
  41a6e7:	std    
  41a6e8:	pop    ds
  41a6e9:	ret    
  41a6ea:	cmc    
  41a6eb:	xchg   DWORD PTR [edi-0xc],esp
  41a6ee:	(bad)  
  41a6f0:	lds    eax,FWORD PTR [ecx]
  41a6f2:	inc    ecx
  41a6f3:	stc    
  41a6f4:	push   0x55
  41a6f6:	sub    eax,0x6c0e259
  41a6fb:	add    al,0x2d
  41a6fd:	aad    0x43
  41a6ff:	inc    ebx
  41a700:	popf   
  41a701:	mov    dh,0x41
  41a703:	inc    ebx
  41a704:	popf   
  41a705:	ret    
  41a706:	inc    ecx
  41a707:	inc    ebx
  41a708:	popf   
  41a709:	les    edx,FWORD PTR [ecx]
  41a70b:	inc    ebx
  41a70c:	popf   
  41a70d:	add    cl,BYTE PTR [ebx+eax*2]
  41a710:	add    BYTE PTR [eax],al
  41a712:	popf   
  41a713:	cmc    
  41a714:	add    eax,DWORD PTR [ebx-0x63]
  41a717:	push   cs
  41a718:	std    
  41a719:	inc    edx
  41a71a:	popf   
  41a71b:	and    eax,0x3e9d4315
  41a720:	or     eax,0x54c9d43
  41a725:	inc    ebx
  41a726:	popf   
  41a727:	gs std 
  41a729:	inc    edx
  41a72a:	popf   
  41a72b:	jne    0x41a701
  41a72d:	inc    edx
  41a72e:	popf   
  41a72f:	retf   
  41a730:	retf   
  41a731:	inc    edx
  41a732:	popf   
  41a733:	jg     0x41a6f9
  41a735:	inc    edx
  41a736:	popf   
  41a737:	repz mov esp,0xd6689d42
  41a73d:	inc    edx
  41a73e:	popf   
  41a73f:	loope  0x41a70e
  41a741:	inc    edx
  41a742:	popf   
  41a743:	sub    al,BYTE PTR [eax]
  41a745:	mov    ecx,0xbd9b02df
  41a74a:	fild   WORD PTR [edx]
  41a74c:	lea    edx,[ebp-0x78d8fd21]
  41a752:	pop    edi
  41a753:	add    bh,BYTE PTR [ebx]
  41a755:	sbb    BYTE PTR [edi+0x2],0xd1
  41a759:	sbb    BYTE PTR [edi+0x2],0x97
  41a75d:	jnp    0x41a7be
  41a75f:	add    bh,BYTE PTR [edx+0x23025f7b]
  41a765:	jl     0x41a7c6
  41a767:	add    bh,BYTE PTR [ebx]
  41a769:	jp     0x41a7ca
  41a76b:	add    dh,bh
  41a76d:	pop    ebx
  41a76e:	pop    esi
  41a76f:	add    bl,bl
  41a771:	pop    ebx
  41a772:	pop    esi
  41a773:	add    dl,BYTE PTR ds:0x5e00005a
  41a779:	add    ah,BYTE PTR [ebx]
  41a77b:	pop    edx
  41a77c:	pop    esi
  41a77d:	add    dh,BYTE PTR [eax]
  41a77f:	cmp    bl,BYTE PTR [esi+0x2]
  41a782:	repnz cmp ebx,DWORD PTR [esi+0x2]
  41a786:	aam    0x3c
  41a788:	pop    esi
  41a789:	add    dh,BYTE PTR [esi+0x34]
  41a78c:	pop    esi
  41a78d:	add    bl,BYTE PTR [esi+0x1c]
  41a790:	pop    esi
  41a791:	add    dl,BYTE PTR [esp+edx*1+0x1ca202de]
  41a798:	fiadd  WORD PTR [edx]
  41a79a:	stos   DWORD PTR es:[edi],eax
  41a79b:	adc    al,0xde
  41a79d:	add    bh,BYTE PTR [edx+0x4202dffc]
  41a7a3:	add    esi,ebx
  41a7a5:	add    bl,bl
  41a7a7:	(bad)  
  41a7a8:	fild   WORD PTR [edx]
  41a7aa:	mov    esp,0x302dff6
  41a7af:	loope  0x41a790
  41a7b1:	add    dl,BYTE PTR [ecx+eiz*8]
  41a7b4:	fild   WORD PTR [edx]
  41a7b6:	sbb    al,0xd1
  41a7b8:	fild   WORD PTR [edx]
  41a7ba:	sub    dl,cl
  41a7bc:	fild   WORD PTR [edx]
  41a7be:	mov    al,0x0
  41a7c0:	add    eax,0xf46d0041
  41a7c5:	inc    eax
  41a7c6:	add    BYTE PTR [edi],ah
  41a7c8:	rol    BYTE PTR [eax+0x0],0x7d
  41a7cc:	arpl   WORD PTR [ecx+0x0],ax
  41a7cf:	pop    ss
  41a7d0:	or     eax,0x2dd10041
  41a7d5:	inc    ecx
  41a7d6:	add    BYTE PTR [eax],bh
  41a7d8:	and    al,BYTE PTR [ecx+0x0]
  41a7db:	mov    DWORD PTR [eax],0x412200
  41a7e1:	pop    ebx
  41a7e2:	adc    eax,DWORD PTR [ecx+0x0]
  41a7e5:	sub    al,0xc
  41a7e7:	inc    ecx
  41a7e8:	add    BYTE PTR [ecx+0x6600406b],al
  41a7ee:	jnp    0x41a830
  41a7f0:	add    BYTE PTR [ecx+0x30003d55],al
  41a7f6:	ins    DWORD PTR es:[edi],dx
  41a7f7:	cmp    eax,0x3d5d7200
  41a7fc:	add    BYTE PTR [edx+0x34],bh
  41a7ff:	cmp    eax,0x3d352c00
  41a804:	add    BYTE PTR [ecx+0x45],ch
  41a807:	cmp    eax,0x3d45b500
  41a80c:	add    ch,dh
  41a80e:	xor    eax,0x363e003d
  41a813:	cmp    eax,0x3e067b00
  41a818:	add    bh,ch
  41a81a:	add    al,0x3e
  41a81c:	add    ah,al
  41a81e:	mov    BYTE PTR [esi],bh
  41a820:	add    BYTE PTR [edx-0x6f],bh
  41a823:	cmp    eax,0x3d8db700
  41a828:	add    BYTE PTR [eax],ah
  41a82a:	(bad)  
  41a82b:	cmp    eax,0xfd750000
  41a830:	inc    BYTE PTR [ebx]
  41a832:	jo     0x41a836
  41a834:	push   es
  41a835:	pop    es
  41a836:	dec    esp
  41a837:	push   es
  41a838:	or     cl,BYTE PTR [ebx]
  41a83a:	popf   
  41a83b:	fld    QWORD PTR [edi+eax*2]
  41a83e:	aam    0xd6
  41a840:	push   es
  41a841:	or     eax,0xdaad0000
  41a846:	dec    ebx
  41a847:	adc    cl,BYTE PTR [esi-0x75e9f033]
  41a84d:	rcr    DWORD PTR [ebx],1
  41a84f:	sbb    al,BYTE PTR [edi-0x78e5e531]
  41a855:	add    BYTE PTR ds:0x19f3b81c,bl
  41a85b:	and    BYTE PTR [edx+ecx*8-0x3543e0dd],bh
  41a862:	and    ah,BYTE PTR [edx]
  41a864:	mov    esi,0xc2261fc5
  41a869:	shr    DWORD PTR [eax],1
  41a86b:	sub    ch,al
  41a86d:	shr    DWORD PTR [eax],0x27
  41a870:	mov    ah,0xbf
  41a872:	sub    eax,0x4b0bb02c
  41a877:	inc    edi
  41a878:	xor    cl,BYTE PTR fs:[ebx+0x47]
  41a87c:	and    ch,BYTE PTR fs:[ecx]
  41a87f:	sub    eax,0x32331954
  41a884:	mov    ?,ebp
  41a886:	sub    al,0x34
  41a888:	jo     0x41a875
  41a88a:	das    
  41a88b:	ss push 0xfffffff1
  41a88e:	cmp    edi,DWORD PTR [edx]
  41a890:	data16 repnz cmp bh,BYTE PTR [ecx]
  41a894:	push   esp
  41a895:	xor    cl,BYTE PTR [ebx+0x47]
  41a898:	in     al,0xcf
  41a89a:	aaa    
  41a89b:	rcr    BYTE PTR ds:[ebx],cl
  41a89e:	inc    ebx
  41a89f:	inc    edx
  41a8a0:	fisub  WORD PTR [edi]
  41a8a2:	aas    
  41a8a3:	inc    esi
  41a8a4:	popf   
  41a8a5:	and    BYTE PTR [eax+edx*4+0x0],cl
  41a8a9:	add    BYTE PTR [ecx],ch
  41a8ab:	push   es
  41a8ac:	inc    ebx
  41a8ad:	add    BYTE PTR [ebp-0xa],ah
  41a8b0:	inc    ebx
  41a8b1:	add    BYTE PTR [ecx-0x22ffbc0c],ah
  41a8b7:	add    ah,dl
  41a8b9:	inc    esp
  41a8ba:	popf   
  41a8bb:	imul   esp,edx,0x44
  41a8be:	popf   
  41a8bf:	mov    al,ds:0x929d44d1
  41a8c4:	into   
  41a8c5:	inc    esp
  41a8c6:	popf   
  41a8c7:	or     al,al
  41a8c9:	inc    esp
  41a8ca:	popf   
  41a8cb:	or     al,al
  41a8cd:	inc    esp
  41a8ce:	popf   
  41a8cf:	sbb    DWORD PTR [edi+0x44],0xffffff9d
  41a8d3:	sbb    DWORD PTR [edi+0x44],0xffffff9d
  41a8d7:	or     al,0xa0
  41a8d9:	inc    esp
  41a8da:	popf   
  41a8db:	outs   dx,BYTE PTR ds:[esi]
  41a8dc:	mov    al,ds:0x8fc69d44
  41a8e1:	inc    esp
  41a8e2:	popf   
  41a8e3:	push   es
  41a8e4:	xchg   ecx,eax
  41a8e5:	inc    esp
  41a8e6:	popf   
  41a8e7:	cmp    al,BYTE PTR [ecx+0x7d009d44]
  41a8ed:	inc    esp
  41a8ee:	popf   
  41a8ef:	inc    edx
  41a8f0:	jne    0x41a936
  41a8f2:	popf   
  41a8f3:	je     0x41a962
  41a8f5:	inc    esp
  41a8f6:	popf   
  41a8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f8:	fs inc ebx
  41a8fa:	popf   
  41a8fb:	fcomp  DWORD PTR [ebx+eax*2-0x63]
  41a8ff:	cli    
  41a900:	push   ebp
  41a901:	inc    ebx
  41a902:	popf   
  41a903:	add    DWORD PTR [ebx+0x43],ecx
  41a906:	popf   
  41a907:	addr16 inc ebx
  41a909:	inc    ebx
  41a90a:	popf   
  41a90b:	cmp    eax,DWORD PTR [bp+di+0x0]
  41a90f:	add    BYTE PTR [ebp-0x62bca07d],bl
  41a915:	sbb    DWORD PTR [edi+0x43],0xffffff9d
  41a919:	iret   
  41a91a:	and    al,BYTE PTR [ebx-0x63]
  41a91d:	dec    esp
  41a91e:	sbb    al,0x43
  41a920:	popf   
  41a921:	mov    DWORD PTR [ebx],edx
  41a923:	inc    ebx
  41a924:	popf   
  41a925:	ror    BYTE PTR [ebx],0x43
  41a928:	popf   
  41a929:	pop    es
  41a92a:	add    eax,0x70ad9d43
  41a92f:	inc    ebx
  41a930:	popf   
  41a931:	(bad)  
  41a932:	jmp    DWORD PTR [edx-0x22]
  41a935:	add    cl,bl
  41a937:	arpl   si,bx
  41a939:	add    dl,dh
  41a93b:	jae    0x41a91b
  41a93d:	add    bl,ch
  41a93f:	jae    0x41a91f
  41a941:	add    ch,al
  41a943:	arpl   si,bx
  41a945:	add    dh,bl
  41a947:	arpl   si,bx
  41a949:	add    dh,bl
  41a94b:	jae    0x41a92b
  41a94d:	add    dh,bl
  41a94f:	jae    0x41a92f
  41a951:	add    bh,BYTE PTR [edi+0x60]
  41a954:	fiadd  WORD PTR [edx]
  41a956:	jg     0x41a9b8
  41a958:	fiadd  WORD PTR [edx]
  41a95a:	adc    esi,DWORD PTR [ebx+0x5e]
  41a95d:	add    bl,BYTE PTR [edi+0x73]
  41a960:	pop    esi
  41a961:	add    bh,BYTE PTR [edx+0x63]
  41a964:	pop    esi
  41a965:	add    cl,BYTE PTR [edi-0x59fda19d]
  41a96b:	jae    0x41a9cb
  41a96d:	add    dl,BYTE PTR [ebx+0x72]
  41a970:	add    eax,0xbdec70
  41a975:	add    BYTE PTR [edi+0x5a6a0002],bl
  41a97b:	idiv   ah
  41a97d:	push   0x63
  41a97f:	repnz cld 
  41a981:	push   0x5b
  41a983:	mov    esi,0x4c183afc
  41a988:	or     BYTE PTR [edi],dh
  41a98a:	mov    ah,dl
  41a98c:	push   esp
  41a98d:	jb     0x41a945
  41a98f:	jnp    0x41a9d1
  41a991:	mov    esi,0x60e05427
  41a996:	pop    ebx
  41a997:	mov    edx,0x87c51486
  41a99c:	pop    edx
  41a99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a99e:	daa    
  41a99f:	push   ebp
  41a9a0:	call   0x89147d15
  41a9a5:	sahf   
  41a9a6:	leave  
  41a9a7:	in     al,dx
  41a9a8:	or     al,0x65
  41a9aa:	mov    ds:0x84000005,al
  41a9af:	das    
  41a9b0:	fimul  DWORD PTR [edi]
  41a9b2:	clc    
  41a9b3:	pop    ss
  41a9b4:	add    eax,DWORD PTR [eax]
  41a9b6:	je     0x41a9e5
  41a9b8:	push   ecx
  41a9b9:	adc    BYTE PTR [ecx-0x3],ch
  41a9bc:	xor    al,0x55
  41a9be:	pop    eax
  41a9bf:	sti    
  41a9c0:	mov    cl,BYTE PTR [esi]
  41a9c2:	cmp    eax,DWORD PTR [eax+eax*1]
  41a9c5:	cmp    DWORD PTR [ecx],ecx
  41a9c7:	add    BYTE PTR [ecx+0x7],bh
  41a9ca:	pop    esi
  41a9cb:	cmc    
  41a9cc:	in     eax,0x4
  41a9ce:	dec    ebx
  41a9cf:	add    al,0x0
  41a9d1:	bts    DWORD PTR [edx+0x18],eax
  41a9d5:	add    edi,DWORD PTR [ebx+0x7c]
  41a9d8:	adc    DWORD PTR [eax+0x0],0xfbea7300
  41a9df:	(bad)  
  41a9e1:	inc    edx
  41a9e2:	sbb    al,0x89
  41a9e4:	jns    0x41aa21
  41a9e6:	sti    
  41a9e7:	push   DWORD PTR [ebx+0xe47b2fa]
  41a9ed:	jge    0x41a970
  41a9ef:	dec    esp
  41a9f0:	mov    ds:0x44b8fbea,eax
  41a9f5:	inc    esi
  41a9f6:	or     eax,DWORD PTR [eax]
  41a9f8:	jge    0x41aa6a
  41a9fa:	sub    edi,edi
  41a9fc:	repz test DWORD PTR [ebp-0x4084b7b],0x202f4fff
  41aa07:	mov    DWORD PTR [ecx-0x13ba7a3a],ecx
  41aa0d:	sub    eax,edx
  41aa0f:	jne    0x41a9dc
  41aa11:	mov    al,0x41
  41aa13:	clc    
  41aa14:	mov    esp,0x35004065
  41aa19:	aaa    
  41aa1a:	inc    ecx
  41aa1b:	push   edx
  41aa1c:	ja     0x41aa74
  41aa1e:	je     0x41aa46
  41aa20:	adc    DWORD PTR [edx-0x8cc0138],eax
  41aa26:	dec    esp
  41aa27:	push   0xffffff9d
  41aa29:	fld    DWORD PTR [edi-0xb807a7e]
  41aa2f:	cld    
  41aa30:	int    0x74
  41aa32:	mov    ebp,0x3b793e7
  41aa37:	add    BYTE PTR [esi],dl
  41aa39:	imul   edi,DWORD PTR [edi-0xb],0xfc66e8e8
  41aa40:	add    BYTE PTR [eax],al
  41aa42:	inc    esp
  41aa43:	ins    BYTE PTR es:[edi],dx
  41aa44:	(bad)  
  41aa45:	call   DWORD PTR [edx+0xc]
  41aa48:	ror    BYTE PTR [eax-0x38761e1d],cl
  41aa4e:	pop    esp
  41aa4f:	inc    ecx
  41aa50:	adc    bh,BYTE PTR [edi-0x207e22bc]
  41aa56:	pushf  
  41aa57:	pop    esp
  41aa58:	jecxz  0x41aa58
  41aa5a:	adc    eax,0xea0ccc9e
  41aa5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa60:	push   ss
  41aa61:	xchg   DWORD PTR [eax+0x41],ebp
  41aa64:	add    eax,0xc3dd63b5
  41aa69:	out    0x9e,al
  41aa6b:	pop    esp
  41aa6c:	jecxz  0x41aa6c
  41aa6e:	adc    eax,0xfafd204e
  41aa73:	pop    es
  41aa74:	add    eax,0x5cd63b5
  41aa79:	lods   eax,DWORD PTR ds:[esi]
  41aa7a:	aad    0xe7
  41aa7c:	lods   eax,DWORD PTR ds:[esi]
  41aa7d:	inc    ebp
  41aa7e:	test   DWORD PTR [edx+0x57],esp
  41aa81:	nop
  41aa82:	sahf   
  41aa83:	inc    esi
  41aa84:	or     BYTE PTR [ecx],al
  41aa86:	loop   0x41aa63
  41aa88:	ret    
  41aa89:	xchg   BYTE PTR [eax+0x65],ah
  41aa8c:	mov    WORD PTR [edx+0xd],ss
  41aa8f:	bound  ebx,QWORD PTR [eax-0x6c]
  41aa92:	es pop ds
  41aa94:	or     al,0xbf
  41aa96:	(bad)
  41aa99:	(bad)  
  41aa9a:	pop    esp
  41aa9b:	cld    
  41aa9c:	ret    0x1886
  41aa9f:	xor    ebp,esi
  41aaa1:	cld    
  41aaa2:	call   0xa500:0x3d7203
  41aaa9:	ret    
  41aaaa:	mov    cs,WORD PTR [edx]
  41aaac:	mov    esp,0x79405fc3
  41aab1:	jl     0x41ab16
  41aab3:	addr16 js 0x41aaa4
  41aab6:	test   DWORD PTR [edx-0x14580528],ecx
  41aabc:	xchg   DWORD PTR [ecx],esp
  41aabe:	test   al,0x8c
  41aac0:	pop    ds
  41aac1:	ja     0x41ab31
  41aac3:	neg    BYTE PTR [ecx+0x7a]
  41aac6:	lods   al,BYTE PTR ds:[esi]
  41aac7:	or     edx,DWORD PTR [edx]
  41aac9:	(bad)  
  41aacb:	and    cl,BYTE PTR [edx]
  41aacd:	jl     0x41ab3a
  41aacf:	jae    0x41ab11
  41aad1:	out    dx,al
  41aad2:	dec    ebp
  41aad3:	mov    bl,bh
  41aad5:	jmp    0xf63d:0xedca806f
  41aadc:	lahf   
  41aadd:	inc    edx
  41aade:	jmp    0x185f:0x537b9d03
  41aae5:	out    dx,al
  41aae6:	and    eax,0x1e5b2f8c
  41aaeb:	test   BYTE PTR [ecx],0x7c
  41aaee:	jnp    0x41ab67
  41aaf0:	add    dh,ch
  41aaf2:	or     eax,0x6f824f8c
  41aaf7:	push   eax
  41aaf8:	cmp    DWORD PTR [ebx+edx*4+0x7f],edi
  41aafc:	and    ebx,DWORD PTR [eax+0x2b]
  41aaff:	mov    WORD PTR [edi-0x52],cs
  41ab02:	pop    edi
  41ab03:	xor    BYTE PTR [esi-0x13],0xe5
  41ab07:	cmc    
  41ab08:	and    eax,0x8aef45
  41ab0d:	add    BYTE PTR [edi-0x2],ah
  41ab10:	jg     0x41ab16
  41ab12:	popf   
  41ab13:	and    bh,0x6f
  41ab16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab17:	ret    
  41ab18:	into   
  41ab19:	or     eax,0x3f6fc37c
  41ab1e:	adc    eax,0x17e9ffda
  41ab23:	push   ecx
  41ab24:	mov    BYTE PTR [edx-0x25],ah
  41ab27:	cli    
  41ab28:	and    ch,cl
  41ab2a:	sahf   
  41ab2b:	jb     0x41ab2d
  41ab2d:	adc    ebx,DWORD PTR [edi-0x35f08bb1]
  41ab33:	add    al,BYTE PTR [eax]
  41ab35:	stc    
  41ab36:	sahf   
  41ab37:	jbe    0x41ab8a
  41ab39:	les    ebx,FWORD PTR [esi-0x516dffe]
  41ab3f:	inc    edi
  41ab40:	cmp    ebp,ecx
  41ab42:	sahf   
  41ab43:	xor    al,BYTE PTR [eax]
  41ab45:	cmc    
  41ab46:	stos   DWORD PTR es:[edi],eax
  41ab47:	sub    DWORD PTR [eax],eax
  41ab49:	jmp    0xb3b5ae2c
  41ab4e:	xchg   ebx,eax
  41ab4f:	add    al,BYTE PTR [eax]
  41ab51:	mov    ecx,0xc339769e
  41ab56:	inc    edi
  41ab57:	in     al,0x83
  41ab59:	in     al,dx
  41ab5a:	sahf   
  41ab5b:	add    bh,BYTE PTR [eax+0x2a3f3]
  41ab61:	pusha  
  41ab62:	adc    ch,BYTE PTR ds:0x28102efd
  41ab68:	std    
  41ab69:	jmp    0xdbbfae0c
  41ab6e:	adc    eax,0x10bec5
  41ab73:	add    BYTE PTR [ecx-0xe5a457b],dl
  41ab79:	in     eax,dx
  41ab7a:	cld    
  41ab7b:	jno    0x41ab97
  41ab7d:	push   ecx
  41ab7e:	std    
  41ab7f:	(bad)  
  41ab80:	icebp  
  41ab81:	test   BYTE PTR [edx-0x3121664],al
  41ab87:	add    bh,BYTE PTR [edx-0x3bbef5a8]
  41ab8d:	iret   
  41ab8e:	imul   ebp,esp,0x9486f3b5
  41ab94:	pop    esi
  41ab95:	out    dx,eax
  41ab96:	cld    
  41ab97:	into   
  41ab98:	lds    edx,FWORD PTR [eax]
  41ab9a:	xchg   DWORD PTR [eax],eax
  41ab9c:	sub    DWORD PTR [ecx-0x5],eax
  41ab9f:	(bad)  
  41aba0:	jmp    0x41ab7b
  41aba2:	or     BYTE PTR [ecx-0x4d2c7],cl
  41aba8:	dec    ebx
  41aba9:	js     0x41ab2c
  41abab:	push   esp
  41abac:	cmp    esi,edi
  41abae:	sti    
  41abaf:	mov    eax,edx
  41abb1:	inc    BYTE PTR [esi-0x237c7f83]
  41abb7:	pop    es
  41abb8:	std    
  41abb9:	ins    BYTE PTR es:[edi],dx
  41abba:	sbb    eax,0x87f71bff
  41abbf:	(bad)  
  41abc0:	std    
  41abc1:	pop    ecx
  41abc2:	call   FWORD PTR [eax-0x1d]
  41abc5:	call   0x10c462d5
  41abca:	daa    
  41abcb:	cli    
  41abcc:	bound  ebp,QWORD PTR [ebp-0x43]
  41abcf:	je     0x41ac50
  41abd1:	jns    0x41ab97
  41abd3:	mov    esi,DWORD PTR [ebx+0x59]
  41abd6:	call   FWORD PTR [eax-0x21110000]
  41abdc:	idiv   DWORD PTR [ebx]
  41abde:	ins    BYTE PTR es:[edi],dx
  41abdf:	jae    0x41ac0a
  41abe1:	lea    ebx,[ebp+0x1]
  41abe4:	push   DWORD PTR [bx]
  41abe7:	jnp    0x41abb4
  41abe9:	shl    DWORD PTR [ebp+0x1],0xfb
  41abed:	adc    eax,0x3f9834
  41abf2:	pop    edi
  41abf4:	test   DWORD PTR [ebp-0x40920],ebx
  41abfa:	or     edx,0xea0e0771
  41ac00:	in     eax,0xe0
  41ac02:	add    BYTE PTR [eax],al
  41ac04:	add    bh,al
  41ac06:	xor    eax,esp
  41ac08:	std    
  41ac09:	inc    esp
  41ac0b:	jmp    esi
  41ac0d:	or     ecx,DWORD PTR [edi+0x39]
  41ac10:	adc    BYTE PTR [ecx-0x4d5bf],cl
  41ac16:	popf   
  41ac17:	aam    0x7c
  41ac19:	xlat   BYTE PTR ds:[ebx]
  41ac1a:	sub    dh,ah
  41ac1c:	xor    DWORD PTR [edi-0xab427b9],edx
  41ac22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac23:	pop    eax
  41ac24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac25:	pop    edi
  41ac26:	mov    ds:0x1ffff0b4,al
  41ac2b:	push   cs
  41ac2c:	mov    al,ds:0x2c6624fc
  41ac31:	std    
  41ac32:	mov    cl,BYTE PTR [edx+edi*2-0xf6b3e7e]
  41ac39:	cld    
  41ac3a:	stos   BYTE PTR es:[edi],al
  41ac3b:	push   esp
  41ac3c:	dec    edx
  41ac3d:	adc    BYTE PTR [eax],al
  41ac3f:	add    BYTE PTR [eax],ah
  41ac41:	sbb    eax,0x26140204
  41ac46:	loopne 0x41ac80
  41ac48:	fmul   st,st(5)
  41ac4a:	outs   dx,BYTE PTR ds:[esi]
  41ac4b:	add    DWORD PTR [esi+ebx*8],esp
  41ac4e:	fadd   QWORD PTR [edx-0x76e5328a]
  41ac54:	loopne 0x41ac93
  41ac56:	mov    ebp,DWORD PTR [eax]
  41ac58:	pop    edi
  41ac59:	or     dh,dl
  41ac5b:	into   
  41ac5c:	xor    eax,0xf60b7f97
  41ac61:	paddq  mm1,QWORD PTR [edx-0x197ab55f]
  41ac68:	cdq    
  41ac69:	lock mov eax,0xfb58ad71
  41ac6f:	cld    
  41ac70:	push   ds
  41ac71:	adc    cl,BYTE PTR [eax]
  41ac73:	cmp    ebp,edx
  41ac75:	xchg   esi,esi
  41ac77:	mov    BYTE PTR [eax],ah
  41ac79:	int    0xf1
  41ac7b:	cld    
  41ac7c:	cli    
  41ac7d:	push   edi
  41ac7e:	outs   dx,DWORD PTR ds:[esi]
  41ac7f:	fcomp  DWORD PTR [ebp+0x63f6206e]
  41ac85:	fld    QWORD PTR [edx]
  41ac87:	je     0x41ac43
  41ac89:	in     al,0xb9
  41ac8b:	inc    ebp
  41ac8c:	mov    cl,0x60
  41ac8e:	mov    esp,0xe601bc7e
  41ac93:	add    ebx,DWORD PTR [ebp-0x652457fe]
  41ac99:	jg     0x41ac61
  41ac9b:	add    al,0x22
  41ac9d:	cmp    eax,0xba5f7cd3
  41aca2:	cmp    al,BYTE PTR [ecx]
  41aca4:	add    BYTE PTR [eax],al
  41aca6:	adc    al,0x85
  41aca8:	push   ds
  41aca9:	repz mov eax,ds:0x9eb9e5ea
  41acaf:	cli    
  41acb0:	pop    edi
  41acb1:	dec    eax
  41acb2:	mov    ecx,esi
  41acb4:	sub    al,0x0
  41acb6:	mov    eax,ds:0x4802c56e
  41acbb:	inc    ecx
  41acbc:	std    
  41acbd:	jle    0x41ad21
  41acbf:	les    edi,FWORD PTR [esi-0x5]
  41acc2:	repz jecxz 0x41ac4a
  41acc5:	add    ebx,DWORD PTR [ebp+0x63e36a02]
  41accb:	jnp    0x41acf8
  41accd:	shl    BYTE PTR ds:0xb026f40,1
  41acd3:	jg     0x41acc3
  41acd5:	add    ecx,DWORD PTR [edx-0x16]
  41acd8:	out    0x7c,al
  41acda:	xlat   BYTE PTR ds:[ebx]
  41acdb:	repnz pop edi
  41acdd:	dec    eax
  41acde:	imul   edi,DWORD PTR [esi-0x5d],0x435025ff
  41ace5:	jl     0x41acc6
  41ace7:	jmp    0x4862:0xaaece63
  41acee:	or     DWORD PTR [eax-0x26],edi
  41acf1:	xchg   ch,dl
  41acf3:	retf   
  41acf4:	cdq    
  41acf5:	add    DWORD PTR [ebp+edi*4+0x4fbc4af],esi
  41acfc:	test   al,0x86
  41acfe:	loop   0x41ace9
  41ad00:	popa   
  41ad01:	out    dx,al
  41ad02:	in     eax,dx
  41ad03:	popf   
  41ad04:	imul   esi,DWORD PTR [eax-0x2f],0x697302
  41ad0b:	add    BYTE PTR [ebp*8-0x718a4e01],dl
  41ad12:	jo     0x41aca1
  41ad14:	sbb    ebp,DWORD PTR [ebp-0x193319c1]
  41ad1a:	call   DWORD PTR [ebx+edi*2-0x19]
  41ad1e:	jb     0x41aced
  41ad20:	cmp    BYTE PTR [esp+edx*4],bh
  41ad23:	into   
  41ad24:	jmp    0x927c:0xacc6fd29
  41ad2b:	and    eax,0x62fce6ac
  41ad30:	fs loope 0x41ad70
  41ad33:	inc    ebp
  41ad34:	cdq    
  41ad35:	add    cl,BYTE PTR [ecx-0x407b72c4]
  41ad3b:	adc    al,0xc8
  41ad3d:	fld    TBYTE PTR [eax]
  41ad3f:	(bad)
  41ad44:	in     eax,0xe7
  41ad46:	cld    
  41ad47:	xchg   BYTE PTR [eax-0x1f208b16],bh
  41ad4d:	(bad)  
  41ad4e:	cmp    DWORD PTR [ebp+esi*8-0x19],ebp
  41ad52:	cld    
  41ad53:	outs   dx,BYTE PTR ds:[esi]
  41ad54:	retf   0x810e
  41ad57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad58:	aad    0xe7
  41ad5a:	cld    
  41ad5b:	pop    esi
  41ad5c:	sahf   
  41ad5d:	outs   dx,BYTE PTR ds:[esi]
  41ad5e:	packsswb mm4,mm4
  41ad61:	jmp    0xe80c119c
  41ad66:	cld    
  41ad67:	inc    esi
  41ad68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad69:	add    BYTE PTR [ebp+0x2],al
  41ad6c:	mov    dl,0x8e
  41ad6e:	jno    0x41acfd
  41ad70:	add    BYTE PTR [eax],al
  41ad72:	xchg   esi,eax
  41ad73:	ins    BYTE PTR es:[edi],dx
  41ad74:	or     al,0xfa
  41ad76:	fisubr WORD PTR [edi]
  41ad78:	inc    ebx
  41ad79:	sbb    eax,0xa437458d
  41ad7e:	inc    esi
  41ad7f:	jne    0x41adb7
  41ad81:	add    ch,BYTE PTR [ebx+0x71ebb5f7]
  41ad87:	jl     0x41ade0
  41ad89:	add    BYTE PTR [ebx-0x55f0040d],ah
  41ad8f:	cli    
  41ad90:	pop    es
  41ad91:	cmp    ecx,DWORD PTR [ecx]
  41ad93:	icebp  
  41ad94:	or     eax,DWORD PTR [eax+esi*4+0x76fffffe]
  41ad9b:	ins    DWORD PTR es:[edi],dx
  41ad9c:	push   edx
  41ad9d:	cld    
  41ad9e:	jg     0x41adf1
  41ada0:	or     al,0x72
  41ada2:	in     eax,0xcb
  41ada4:	mov    edx,0xb04c400
  41ada9:	mov    dh,0xb6
  41adab:	adc    eax,0x80b3f441
  41adb0:	scas   al,BYTE PTR es:[edi]
  41adb1:	add    BYTE PTR [esp+eax*1-0xd5676be],al
  41adb8:	aaa    
  41adb9:	push   ebp
  41adba:	nop
  41adbb:	outs   dx,BYTE PTR ds:[esi]
  41adbc:	out    0xe9,eax
  41adbe:	fadd   DWORD PTR [ebx]
  41adc0:	add    BYTE PTR [eax],al
  41adc2:	dec    ebp
  41adc3:	and    DWORD PTR [eax],0xbf323ff
  41adc9:	test   ah,bh
  41adcb:	add    eax,DWORD PTR [eax]
  41adcd:	add    BYTE PTR [edi+0x51],bl
  41add0:	nop
  41add1:	bswap  edx
  41add3:	cmp    ah,0xff
  41add6:	add    BYTE PTR [eax],al
  41add8:	inc    esp
  41add9:	(bad)  
  41adda:	pop    esi
  41addb:	add    DWORD PTR [ecx],0x44
  41adde:	sti    
  41addf:	jmp    ebx
  41ade1:	add    esi,DWORD PTR [eax+ebp*1-0x71]
  41ade5:	dec    edi
  41ade6:	nop
  41ade7:	jbe    0x41addd
  41ade9:	bnd jno 0x41add0
  41adec:	scas   eax,DWORD PTR es:[edi]
  41aded:	inc    eax
  41adee:	cld    
  41adef:	(bad)  
  41adf0:	jmp    0x48d73788
  41adf5:	repz sti 
  41adf7:	inc    ebx
  41adf9:	mov    al,0x3c
  41adfb:	inc    ebx
  41adfd:	repnz in al,0xf0
  41ae00:	pop    ss
  41ae01:	add    al,0x0
  41ae03:	mov    ebx,DWORD PTR [ebp-0x227d135a]
  41ae09:	mov    gs,WORD PTR [eax]
  41ae0b:	jmp    0x43f022c8
  41ae10:	loop   0x41adfa
  41ae12:	in     al,dx
  41ae13:	mov    BYTE PTR [eax+0x49],ah
  41ae16:	add    al,0xc5
  41ae18:	xchg   esi,eax
  41ae19:	or     DWORD PTR [ebx+0x1e],esi
  41ae1c:	pop    ss
  41ae1d:	outs   dx,DWORD PTR ds:[esi]
  41ae1e:	pop    eax
  41ae1f:	std    
  41ae20:	ret    0x78c8
  41ae23:	rol    DWORD PTR [esi+0x28082b98],0xe9
  41ae2a:	cmp    esp,0x8a18259c
  41ae30:	adc    BYTE PTR [edi],cl
  41ae32:	in     eax,dx
  41ae33:	cld    
  41ae34:	call   0x3ee3:0xeff38f1
  41ae3b:	xchg   DWORD PTR [eax],eax
  41ae3d:	add    al,dh
  41ae3f:	popf   
  41ae40:	sub    BYTE PTR [ebx-0x6f],dl
  41ae43:	or     ecx,DWORD PTR [ebx-0x16f0881]
  41ae49:	jb     0x41ae08
  41ae4b:	pop    esp
  41ae4c:	scas   eax,DWORD PTR es:[edi]
  41ae4d:	aas    
  41ae4e:	push   0xffffff80
  41ae50:	in     al,dx
  41ae51:	(bad)  
  41ae52:	out    dx,al
  41ae53:	repnz cmp DWORD PTR [edx-0x3128f23],0x38faee9f
  41ae5e:	lock in eax,dx
  41ae60:	jno    0x41ae69
  41ae62:	sbb    eax,0xa172fa23
  41ae67:	fwait
  41ae68:	jnp    0x41aebc
  41ae6a:	xor    DWORD PTR [edi+ebp*2-0x8],esp
  41ae6e:	outs   dx,BYTE PTR ds:[esi]
  41ae6f:	xor    bh,BYTE PTR [ebx+0x7a]
  41ae72:	xchg   ecx,eax
  41ae73:	add    bh,BYTE PTR [edi]
  41ae75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae76:	nop
  41ae77:	mov    esp,0x950d4b2b
  41ae7c:	dec    edx
  41ae7d:	mov    edx,esp
  41ae7f:	add    edx,edx
  41ae81:	rol    edi,0xda
  41ae84:	jmp    0xbaa74b8c
  41ae89:	xor    bl,ch
  41ae8b:	sub    BYTE PTR [edi+esi*8+0x3268599],bl
  41ae92:	fild   QWORD PTR [edx]
  41ae94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae95:	rcl    DWORD PTR [eax+0x3e],cl
  41ae98:	mov    al,0x40
  41ae9a:	icebp  
  41ae9b:	ins    DWORD PTR es:[edi],dx
  41ae9c:	retf   
  41ae9d:	sub    ah,al
  41ae9f:	imul   BYTE PTR [ecx+0x74]
  41aea2:	add    BYTE PTR [eax],al
  41aea4:	ret    0xe6e6
  41aea7:	(bad)  
  41aea8:	lock stc 
  41aeaa:	sub    esp,DWORD PTR es:[esi-0xe]
  41aeae:	push   edx
  41aeaf:	and    ah,BYTE PTR [ebp+esi*1-0x4d]
  41aeb3:	ja     0x41ae3b
  41aeb5:	sub    esp,DWORD PTR [esi-0x3125748f]
  41aebb:	sub    bl,BYTE PTR [eax-0xa]
  41aebe:	imul   ebx,DWORD PTR [eax-0x76],0x48fee6e6
  41aec5:	sti    
  41aec6:	es sub esp,esi
  41aec9:	repnz sbb al,BYTE PTR [esi]
  41aecc:	mov    ah,0xbd
  41aece:	sbb    bl,dh
  41aed0:	jne    0x41aed6
  41aed2:	das    
  41aed3:	sub    ebx,DWORD PTR [eax-0xa]
  41aed6:	imul   esi,DWORD PTR [eax],0x7ce6e65a
  41aedc:	(bad)  
  41aede:	popa   
  41aedf:	jo     0x41af2a
  41aee1:	jp     0x41ae9e
  41aee3:	jg     0x41ae72
  41aee5:	ret    0x53b6
  41aee8:	int    0xe5
  41aeea:	fwait
  41aeeb:	and    esi,DWORD PTR [eax]
  41aeed:	out    0x4d,al
  41aeef:	adc    BYTE PTR [edi],0x1b
  41aef2:	inc    esi
  41aef3:	out    dx,al
  41aef4:	and    DWORD PTR [ecx+edx*8+0x1],edx
  41aef8:	ins    DWORD PTR es:[edi],dx
  41aef9:	dec    ebp
  41aefa:	add    BYTE PTR [edx+0x53],ah
  41aefd:	jge    0x41af79
  41aeff:	push   ecx
  41af00:	mov    DWORD PTR [eax-0x60],ebp
  41af03:	jo     0x41af1a
  41af05:	push   ds
  41af06:	std    
  41af07:	push   ds
  41af08:	add    BYTE PTR [eax],al
  41af0a:	or     ebx,esi
  41af0c:	pop    ss
  41af0d:	daa    
  41af0e:	add    esp,edi
  41af10:	xor    BYTE PTR [eax],ah
  41af12:	addr16 int 0x36
  41af15:	mov    ah,0x1a
  41af17:	jb     0x41af22
  41af19:	rcr    BYTE PTR [ebp-0x26],0x72
  41af1d:	out    dx,eax
  41af1e:	push   edi
  41af1f:	inc    eax
  41af20:	mov    al,ds:0x7eda5560
  41af25:	loop   0x41aebe
  41af27:	out    0xfc,al
  41af29:	fidivr WORD PTR [eax-0x6116137f]
  41af2f:	add    bh,BYTE PTR [edi-0x2e]
  41af32:	xchg   esp,eax
  41af33:	out    0xfc,al
  41af35:	(bad)  
  41af36:	and    eax,0x8addb807
  41af3b:	out    0xfc,al
  41af3d:	bnd data16 jno 0x41af93
  41af41:	fimul  WORD PTR [eax]
  41af43:	int3   
  41af44:	(bad)  
  41af45:	call   0x3b14e8
  41af4a:	mov    ah,dh
  41af4c:	cld    
  41af4d:	pop    ss
  41af4e:	jno    0x41af7a
  41af50:	xlat   BYTE PTR ds:[ebx]
  41af51:	fisub  WORD PTR [ebx]
  41af53:	mov    ebx,0x7b9ee8ff
  41af58:	jp     0x41afd7
  41af5a:	loopne 0x41af8f
  41af5c:	fnstenv [eax+0x73cee3]
  41af62:	les    eax,FWORD PTR [eax-0x4]
  41af65:	and    BYTE PTR [edx],dl
  41af67:	and    eax,0x71485efd
  41af6c:	xor    BYTE PTR [edx],dl
  41af6e:	add    BYTE PTR [eax],al
  41af70:	fimul  DWORD PTR [esi+0x7039b070]
  41af76:	in     al,0x0
  41af78:	scas   eax,DWORD PTR es:[edi]
  41af79:	and    eax,0x3e91ff94
  41af7e:	sti    
  41af7f:	dec    ebx
  41af81:	gs xchg edx,eax
  41af83:	inc    esp
  41af84:	mov    ebx,0xbde8fbd7
  41af89:	popa   
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	cmp    DWORD PTR [esi-0x1947af5],0x169fffff
  41af96:	xor    eax,0xbb6a7c7d
  41af9b:	mov    ebx,DWORD PTR [ecx+0x79]
  41af9e:	out    0xbe,eax
  41afa0:	aas    
  41afa1:	and    eax,0x3a692b94
  41afa6:	sti    
  41afa7:	(bad)  
  41afa8:	mov    ebx,0xa577bd19
  41afad:	push   0xd5cb548a
  41afb2:	sti    
  41afb3:	cmp    BYTE PTR [ebx+ebp*2+0x3d198313],bh
  41afba:	sti    
  41afbb:	call   FWORD PTR [ebx+0x1]
  41afbe:	je     0x41b033
  41afc0:	(bad)  
  41afc1:	jl     0x41b014
  41afc3:	(bad)  
  41afc4:	cmp    edx,edi
  41afc6:	xchg   DWORD PTR [ebp+0x38],ecx
  41afc9:	sbb    BYTE PTR ds:0x855b9001,bh
  41afcf:	jge    0x41afd9
  41afd1:	sbb    DWORD PTR [ecx-0x28],ebx
  41afd4:	add    BYTE PTR [eax],al
  41afd6:	xchg   ecx,eax
  41afd7:	xor    esi,DWORD PTR [edi]
  41afd9:	jge    0x41aff7
  41afdb:	outs   dx,DWORD PTR ds:[esi]
  41afdc:	pop    eax
  41afdd:	sbb    BYTE PTR [ebx-0x29],0x9
  41afe1:	jne    0x41b03e
  41afe3:	sbb    edi,DWORD PTR [ecx-0x8]
  41afe6:	inc    edi
  41afe7:	or     al,BYTE PTR [eax+0x216d4e3f]
  41afed:	test   BYTE PTR [edx],0xe4
  41aff0:	sbb    al,0x75
  41aff2:	popf   
  41aff3:	in     al,dx
  41aff4:	jg     0x41afb0
  41aff6:	fnsave [esp+ebp*8]
  41aff9:	cld    
  41affa:	pushf  
  41affb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41affc:	push   cs
  41affd:	sbb    DWORD PTR [eax-0x66],0xd812fceb
  41b004:	je     0x41b00d
  41b006:	push   ds
  41b007:	push   edi
  41b008:	inc    ebp
  41b009:	std    
  41b00a:	add    bl,BYTE PTR ds:0x9ca172ff
  41b010:	jns    0x41b08c
  41b012:	icebp  
  41b013:	mov    edx,0x5716c44d
  41b018:	xor    eax,0xd9fce2fd
  41b01d:	rcr    cl,cl
  41b01f:	in     al,0xe8
  41b021:	xor    dh,dh
  41b023:	add    BYTE PTR [edx],dl
  41b025:	xor    esi,esp
  41b027:	test   al,0xeb
  41b029:	inc    esp
  41b02a:	xchg   BYTE PTR [edi+ebp*2+0xae11c58],bh
  41b031:	cld    
  41b032:	mov    dl,0xcc
  41b034:	outs   dx,DWORD PTR ds:[esi]
  41b035:	push   eax
  41b036:	push   ds
  41b037:	aaa    
  41b038:	in     al,0xff
  41b03a:	add    BYTE PTR [eax],al
  41b03c:	cs in  eax,dx
  41b03e:	jge    0x41afca
  41b040:	shl    DWORD PTR [eax+ebp*8+0x6cc692fc],1
  41b047:	test   al,0xde
  41b049:	fstp   DWORD PTR [edx-0xc]
  41b04c:	in     eax,0x56
  41b04e:	int    0x73
  41b050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b051:	loopne 0x41b01b
  41b053:	jae    0x41afef
  41b055:	pusha  
  41b056:	(bad)
  41b059:	fld    DWORD PTR [eax]
  41b05b:	add    BYTE PTR [esi],dl
  41b05d:	fadd   QWORD PTR cs:[edx-0x7edf129c]
  41b064:	rol    ch,1
  41b066:	add    ecx,DWORD PTR ds:0x4511b
  41b06c:	popf   
  41b06d:	add    dl,BYTE PTR [edx]
  41b06f:	cmp    DWORD PTR [ebp+0x1a13b377],esp
  41b075:	clc    
  41b076:	popa   
  41b077:	cmp    DWORD PTR ds:0x1bfb9c17,esp
  41b07d:	cmp    bl,ch
  41b07f:	fcomp  QWORD PTR [edx+eax*1]
  41b082:	out    0x3,eax
  41b084:	sbb    al,0xba
  41b086:	xor    eax,0xb37787df
  41b08b:	bswap  edx
  41b08d:	xor    eax,0x7fbb7007
  41b092:	sbb    al,0x0
  41b094:	jno    0x41b0b6
  41b096:	add    BYTE PTR fs:[esi],ch
  41b099:	jmp    0x8172:0x51e1eb0d
  41b0a0:	add    BYTE PTR [eax],al
  41b0a2:	mov    fs,ebx
  41b0a4:	std    
  41b0a5:	jmp    0x3d14:0x53dec21d
  41b0ac:	xlat   BYTE PTR ds:[ebx]
  41b0ad:	xchg   BYTE PTR [edx],al
  41b0af:	cli    
  41b0b0:	ss jmp 0x41b042
  41b0b3:	xor    dh,ch
  41b0b5:	inc    ebx
  41b0b6:	popf   
  41b0b7:	jg     0x41b063
  41b0b9:	div    DWORD PTR [ebx+0x6d]
  41b0bc:	jg     0x41b127
  41b0be:	fwait
  41b0bf:	jns    0x41b044
  41b0c1:	arpl   WORD PTR [eax+0x277ebde2],bx
  41b0c7:	pop    ss
  41b0c8:	mov    dh,0xea
  41b0ca:	mov    edx,esp
  41b0cc:	shr    DWORD PTR [edi+0x35],cl
  41b0cf:	inc    esi
  41b0d0:	out    0x86,eax
  41b0d2:	aaa    
  41b0d3:	arpl   WORD PTR [esi+0x1b0371ea],bx
  41b0d9:	add    BYTE PTR [edx+eax*8+0x4815fb81],ch
  41b0e0:	dec    edi
  41b0e1:	mov    WORD PTR [ebp+0x1deb97c4],es
  41b0e7:	loope  0x41b0e8
  41b0e9:	jmp    0xf963:0xa93106b5
  41b0f0:	mov    BYTE PTR [esi+eiz*1-0x4c86acd5],bh
  41b0f7:	dec    esp
  41b0f8:	adc    BYTE PTR [eax-0x6f],ah
  41b0fb:	mov    edx,DWORD PTR [edx+0x6d]
  41b0fe:	xor    DWORD PTR ds:0x6717090,0xffffffe9
  41b105:	jmp    0x9657:0xe0700000
  41b10c:	push   esp
  41b10d:	cmp    eax,edi
  41b10f:	sub    ebp,DWORD PTR [esi-0x2d8dacfe]
  41b115:	push   eax
  41b116:	push   ecx
  41b117:	mov    bh,0x73
  41b119:	push   esp
  41b11a:	or     BYTE PTR [esi-0x4880b09],bh
  41b120:	pop    esi
  41b121:	add    al,BYTE PTR [edi+0x3d61c2ac]
  41b127:	jmp    0xbdb5807f
  41b12c:	dec    eax
  41b12d:	inc    DWORD PTR [ebx+0x292e3212]
  41b133:	fidivr WORD PTR [eax]
  41b135:	mov    dh,0x83
  41b137:	ret    0xf72d
  41b13a:	mov    ebx,esi
  41b13c:	sub    bh,BYTE PTR [edx-0x605bf68d]
  41b142:	add    ebx,edi
  41b144:	xchg   ebp,eax
  41b145:	lahf   
  41b146:	fcom   DWORD PTR [edx]
  41b148:	pop    eax
  41b149:	push   esp
  41b14a:	push   es
  41b14b:	sub    edi,DWORD PTR [ecx+0x66341606]
  41b151:	popa   
  41b152:	cmp    ch,cl
  41b154:	or     cl,BYTE PTR ds:0x48a6733f
  41b15a:	test   BYTE PTR [edx-0x5fcf4706],dh
  41b160:	loop   0x41b12a
  41b162:	jae    0x41b164
  41b164:	pop    edi
  41b165:	pop    esi
  41b166:	inc    edx
  41b167:	cld    
  41b168:	rcl    DWORD PTR [edx],0xfd
  41b16b:	jg     0x41b16d
  41b16d:	add    BYTE PTR [edx],dl
  41b16f:	sub    BYTE PTR [ecx-0x4a],dh
  41b172:	prefetcht0 BYTE PTR [eax]
  41b175:	je     0x41b1c1
  41b177:	test   DWORD PTR [ebp-0x1],esi
  41b17a:	call   0xfd04:0x488da771
  41b181:	mov    cl,0x9a
  41b183:	pop    edi
  41b184:	ret    
  41b185:	call   0x3ccab9
  41b18a:	jns    0x41b152
  41b18c:	jno    0x41b197
  41b18e:	sub    ch,dl
  41b190:	adc    DWORD PTR [eax-0x1a],edi
  41b193:	inc    esp
  41b194:	add    bl,ch
  41b196:	push   es
  41b197:	inc    ch
  41b199:	mov    eax,DWORD PTR [ecx-0x27]
  41b19c:	test   DWORD PTR [ecx],eax
  41b19e:	jg     0x41b164
  41b1a0:	out    0x2,eax
  41b1a2:	mov    esp,0xc88d5b5a
  41b1a8:	add    al,0x0
  41b1aa:	sub    DWORD PTR [esi-0x17],ebx
  41b1ad:	and    DWORD PTR [eax+0x1e574f2a],0x29
  41b1b4:	pop    ebx
  41b1b5:	push   edi
  41b1b6:	xchg   edi,eax
  41b1b7:	iret   
  41b1b8:	mov    DWORD PTR [ebp-0x8],eax
  41b1bb:	xor    eax,0x30a9ff50
  41b1c0:	push   ss
  41b1c1:	inc    eax
  41b1c2:	mov    ah,0x15
  41b1c4:	rol    BYTE PTR [eax+0x7],0xa0
  41b1c8:	or     BYTE PTR [ecx+0x4585ceb9],cl
  41b1ce:	dec    eax
  41b1cf:	pop    ebp
  41b1d0:	inc    edx
  41b1d1:	cld    
  41b1d2:	add    BYTE PTR [eax],al
  41b1d4:	loope  0x41b1f6
  41b1d6:	les    edx,FWORD PTR [eax-0x49]
  41b1d9:	xor    eax,0x5d6c75fb
  41b1de:	jp     0x41b1a4
  41b1e0:	popf   
  41b1e1:	js     0x41b1f0
  41b1e3:	pusha  
  41b1e4:	mov    BYTE PTR [ecx],ch
  41b1e6:	add    al,0x83
  41b1e8:	pop    ebp
  41b1e9:	(bad)  
  41b1eb:	xor    DWORD PTR [ebp+0x73],ebx
  41b1ee:	mov    dl,0xff
  41b1f0:	dec    edx
  41b1f1:	jmp    0x97e:0x81eb105a
  41b1f8:	cmp    ch,BYTE PTR [ecx-0x18]
  41b1fb:	jb     0x41b246
  41b1fd:	push   ebp
  41b1fe:	fdiv   DWORD PTR ds:0x22fd3e48
  41b205:	arpl   di,di
  41b207:	cmp    dh,bl
  41b209:	popf   
  41b20a:	loopne 0x41b1f4
  41b20c:	mov    ds:0x1df03e54,eax
  41b211:	rcl    BYTE PTR [edi],cl
  41b213:	jae    0x41b1ab
  41b215:	xor    BYTE PTR [esi],dh
  41b217:	hlt    
  41b218:	cli    
  41b219:	scas   al,BYTE PTR es:[edi]
  41b21a:	lock ss push eax
  41b21d:	cmc    
  41b21e:	outs   dx,DWORD PTR ds:[esi]
  41b21f:	jmp    0x41b237
  41b221:	scas   eax,DWORD PTR es:[edi]
  41b222:	in     al,0x88
  41b224:	push   eax
  41b225:	cmc    
  41b226:	jne    0x41b2a3
  41b228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b229:	jmp    0x72c3:0xc49c4475
  41b230:	mov    eax,ds:0x98e8c09c
  41b235:	add    DWORD PTR [edi],eax
  41b237:	pop    es
  41b238:	add    BYTE PTR [eax],al
  41b23a:	mov    edx,0x99457ae8
  41b23f:	and    al,0xc1
  41b241:	jb     0x41b1d7
  41b243:	mov    eax,0xe25ee82d
  41b248:	in     eax,0xfc
  41b24a:	xchg   BYTE PTR [edx+0x298972e4],cl
  41b250:	in     eax,0x72
  41b252:	(bad)  
  41b253:	stc    
  41b254:	fld    TBYTE PTR [edi-0x6c]
  41b257:	mov    al,0xe4
  41b259:	cld    
  41b25a:	lock add ah,BYTE PTR [ebx+0x7206d87b]
  41b261:	cmp    DWORD PTR [ecx-0x21],esi
  41b264:	sbb    ebp,esp
  41b266:	pop    ss
  41b267:	inc    esi
  41b268:	fild   WORD PTR [ebp*8+0x51fd20ea]
  41b26f:	fbstp  TBYTE PTR [ecx+0x3e]
  41b272:	mov    eax,ds:0x1416e6c8
  41b277:	dec    eax
  41b278:	jecxz  0x41b2f5
  41b27a:	xchg   esi,eax
  41b27b:	pop    es
  41b27c:	jb     0x41b2bf
  41b27e:	sub    DWORD PTR [edx+0x70],eax
  41b281:	ds xchg ebp,eax
  41b283:	push   0x68414162
  41b288:	pusha  
  41b289:	ds test eax,0x1dd3ab8b
  41b28f:	jmp    0xbb:0x4a9b6fe9
  41b296:	adc    eax,0xa4dadd40
  41b29b:	enter  0xf5ac,0x0
  41b29f:	add    BYTE PTR [ebx+ebp*8+0x1060bde2],bl
  41b2a6:	call   0xb281965e
  41b2ab:	mov    esp,0x50e705dc
  41b2b0:	and    al,0xee
  41b2b2:	imul   ebx,eax,0xe69e389a
  41b2b8:	dec    edi
  41b2b9:	or     bl,BYTE PTR [ecx+esi*2-0x53]
  41b2bd:	adc    ah,dh
  41b2bf:	fcmovnb st,st(0)
  41b2c1:	(bad)  
  41b2c3:	out    0x1e,al
  41b2c5:	ret    0x6d5a
  41b2c8:	adc    al,0x45
  41b2ca:	sar    DWORD PTR [edx-0x19],cl
  41b2cd:	fisubr DWORD PTR [edi+edi*8+0x4071de93]
  41b2d4:	xchg   ecx,eax
  41b2d5:	mov    edi,edi
  41b2d7:	loopne 0x41b2b7
  41b2d9:	xchg   dh,al
  41b2db:	xor    al,0x88
  41b2dd:	inc    esi
  41b2de:	cmp    DWORD PTR [ebp*2-0x4996fcae],ebp
  41b2e5:	das    
  41b2e6:	jae    0x41b284
  41b2e8:	push   ds
  41b2e9:	push   ss
  41b2ea:	sub    eax,0xc0139f15
  41b2ef:	ins    BYTE PTR es:[edi],dx
  41b2f0:	pop    esi
  41b2f1:	push   edx
  41b2f2:	cmp    eax,0xfcddb669
  41b2f7:	std    
  41b2f8:	jno    0x41b32c
  41b2fa:	and    DWORD PTR [ecx-0x520b19bd],0x5988df3b
  41b304:	add    BYTE PTR [eax],al
  41b306:	sbb    eax,0xc10373d8
  41b30b:	add    al,BYTE PTR [eax]
  41b30d:	stc    
  41b30e:	sahf   
  41b30f:	push   0x349ed300
  41b314:	std    
  41b315:	aam    0x3e
  41b317:	repz aas 
  41b319:	jmp    0xd9b4513b
  41b31e:	push   0x9e24e76a
  41b323:	add    al,BYTE PTR [ecx-0x1919fccf]
  41b329:	stos   DWORD PTR es:[edi],eax
  41b32a:	sti    
  41b32b:	fimul  WORD PTR [eax+0x5cea6811]
  41b331:	icebp  
  41b332:	mov    ebx,0xce74fcde
  41b337:	in     eax,0x54
  41b339:	loope  0x41b2f6
  41b33b:	fdivp  st(4),st
  41b33d:	je     0x41b309
  41b33f:	in     eax,0x4c
  41b341:	icebp  
  41b342:	mov    ecx,0x60a688de
  41b347:	cmp    al,0xc7
  41b349:	stos   DWORD PTR es:[edi],eax
  41b34a:	popf   
  41b34b:	add    dl,BYTE PTR [esi+0x62]
  41b34e:	xchg   ecx,eax
  41b34f:	pop    ebp
  41b350:	add    BYTE PTR ds:[eax-0xbba0293],bl
  41b357:	and    al,0x2b
  41b359:	jne    0x41b3d0
  41b35b:	pop    ds
  41b35c:	push   ebx
  41b35d:	push   DWORD PTR [eax+0x3b560c22]
  41b363:	or     eax,0x6b4139c
  41b368:	add    eax,0x7810000
  41b36e:	mov    al,BYTE PTR [edx+ebp*2]
  41b371:	pop    ebp
  41b372:	mov    ebp,0x20257074
  41b377:	je     0x41b3dd
  41b379:	and    eax,0x25307205
  41b37e:	or     DWORD PTR [esi+0x3c],esi
  41b381:	and    eax,0x2540743e
  41b386:	sub    esi,DWORD PTR [ebp+0x40]
  41b389:	xchg   ecx,eax
  41b38a:	std    
  41b38b:	jmp    0x2c6:0x5ec01336
  41b392:	add    BYTE PTR [ebp-0x71],dl
  41b395:	mov    edx,0x11e4ec7f
  41b39a:	lds    edx,FWORD PTR [edi+0x7]
  41b39d:	out    0x85,al
  41b39f:	dec    ebp
  41b3a0:	mov    al,0x5e
  41b3a2:	dec    edx
  41b3a3:	(bad)  
  41b3a4:	ins    DWORD PTR es:[edi],dx
  41b3a5:	lock mov DWORD PTR gs:[ecx],edi
  41b3a9:	jmp    0xd63e00e3
  41b3ae:	xor    BYTE PTR [esi],0xc5
  41b3b1:	add    BYTE PTR [eax],al
  41b3b3:	push   esi
  41b3b4:	scas   eax,DWORD PTR es:[edi]
  41b3b5:	add    BYTE PTR [edi],ch
  41b3b7:	leave  
  41b3b8:	fst    QWORD PTR [ebx]
  41b3ba:	hlt    
  41b3bb:	je     0x41b377
  41b3bd:	cmp    BYTE PTR [eax],0x1f
  41b3c0:	or     ch,BYTE PTR [eax+ecx*1-0x1]
  41b3c4:	imul   edx,edx,0xb50de5
  41b3ca:	add    BYTE PTR [ebp-0x75fd0063],cl
  41b3d0:	add    BYTE PTR [eax],al
  41b3d2:	mov    ds:0x180d280d,eax
  41b3d7:	ja     0x41b3d9
  41b3d9:	add    BYTE PTR [ebp-0x7d0bc1b0],bl
  41b3df:	das    
  41b3e0:	lock sbb BYTE PTR [ebp-0x43],0x7d
  41b3e5:	icebp  
  41b3e6:	popf   
  41b3e7:	jmp    0xd2323cec
  41b3ec:	pop    ss
  41b3ed:	cmc    
  41b3ee:	sbb    eax,0x29ffe5f7
  41b3f3:	es add edi,edi
  41b3f6:	into   
  41b3f7:	call   0xd97a:0xeca2fd7f
  41b3fe:	popf   
  41b3ff:	jmp    0x9cb73404
  41b404:	repz or BYTE PTR [edx+ebp*8+0x0],0x0
  41b40a:	mov    ch,0x69
  41b40c:	ins    BYTE PTR es:[edi],dx
  41b40d:	inc    eax
  41b40e:	popf   
  41b40f:	mov    edi,0x417a3ffa
  41b414:	daa    
  41b415:	std    
  41b416:	adc    al,BYTE PTR [ebp+0x7d]
  41b419:	mov    edi,0xffa8659a
  41b41e:	add    ch,dl
  41b420:	mov    edx,0xd9e9fb42
  41b425:	mov    cl,0x9d
  41b427:	jmp    0x9ce51e2c
  41b42c:	daa    
  41b42d:	cmc    
  41b42e:	imul   ebx,esp,0x58
  41b431:	adc    BYTE PTR [edx-0x57],0x0
  41b435:	call   0x4f6b43a
  41b43a:	in     al,0xfc
  41b43c:	and    DWORD PTR [edx],ebp
  41b43e:	ins    DWORD PTR es:[edi],dx
  41b43f:	pop    es
  41b440:	fld    TBYTE PTR [esi+0x35c5fee2]
  41b446:	add    DWORD PTR [eax],eax
  41b448:	popf   
  41b449:	add    ch,BYTE PTR [ebp-0x11fd57b7]
  41b44f:	cdq    
  41b450:	pop    edi
  41b451:	frstpm(287 only) 
  41b453:	cdq    
  41b454:	push   edx
  41b455:	push   0x56
  41b457:	inc    esp
  41b458:	popf   
  41b459:	pop    ss
  41b45a:	mov    esi,0xf2dbb05a
  41b45f:	mov    BYTE PTR [edx],al
  41b461:	stos   DWORD PTR es:[edi],eax
  41b462:	sub    DWORD PTR [esp],eax
  41b465:	inc    ebp
  41b466:	mov    bh,0x91
  41b468:	fdivp  st(2),st
  41b46a:	out    0xeb,eax
  41b46c:	jg     0x41b44a
  41b46e:	popf   
  41b46f:	jecxz  0x41b48f
  41b471:	ret    0xf1b
  41b474:	pop    ebx
  41b475:	inc    ebp
  41b476:	mov    es,WORD PTR [edi+edx*8+0x5a55f2db]
  41b47d:	out    0x1d,eax
  41b47f:	adc    ecx,DWORD PTR [ebx]
  41b481:	inc    ebp
  41b482:	jbe    0x41b412
  41b484:	mov    edx,0x9d43f656
  41b489:	out    0xb0,eax
  41b48b:	sbb    al,0xd6
  41b48d:	(bad)  
  41b48e:	rcl    DWORD PTR [ecx+0x1d],cl
  41b491:	pop    ebp
  41b492:	push   ebp
  41b493:	add    al,0x8e
  41b495:	dec    edx
  41b496:	or     edx,DWORD PTR [ecx]
  41b498:	mov    DWORD PTR [esi+0x3],eax
  41b49b:	push   cs
  41b49c:	add    BYTE PTR [eax],al
  41b49e:	xchg   ecx,eax
  41b49f:	inc    edx
  41b4a0:	sti    
  41b4a1:	or     al,0x89
  41b4a3:	push   ds
  41b4a4:	repz sub DWORD PTR [esi+0x2d],ebp
  41b4a8:	bound  ecx,QWORD PTR [ecx-0x5b]
  41b4ab:	daa    
  41b4ac:	cs xchg edx,esi
  41b4af:	add    al,0x95
  41b4b1:	es ja  0x41b4b9
  41b4b4:	jg     0x41b441
  41b4b6:	push   ecx
  41b4b7:	inc    edx
  41b4b8:	out    0x90,eax
  41b4ba:	pop    esi
  41b4bb:	sti    
  41b4bc:	out    0x33,eax
  41b4be:	enter  0x5af4,0xf7
  41b4c2:	add    BYTE PTR [edx],0x0
  41b4c5:	ins    BYTE PTR es:[edi],dx
  41b4c6:	loope  0x41b517
  41b4c8:	or     esp,DWORD PTR [edx+0x64]
  41b4cb:	fiadd  DWORD PTR [eax-0x3a002ed4]
  41b4d1:	in     eax,0xa6
  41b4d3:	cli    
  41b4d4:	call   0x8941ddba
  41b4d9:	sbb    al,0x71
  41b4db:	add    BYTE PTR [ebx],0xe0
  41b4de:	jg     0x41b525
  41b4e0:	clc    
  41b4e1:	jb     0x41b4e0
  41b4e3:	rol    BYTE PTR [eax+eiz*2-0x3],cl
  41b4e7:	sar    BYTE PTR [eax],cl
  41b4e9:	sub    al,0xa1
  41b4eb:	pop    es
  41b4ec:	xor    BYTE PTR [edi+0x3ffcd77c],0x12
  41b4f3:	inc    ebp
  41b4f4:	clc    
  41b4f5:	ret    0x367
  41b4f8:	inc    ebx
  41b4f9:	loope  0x41b4da
  41b4fb:	rol    ecx,0xed
  41b4fe:	sahf   
  41b4ff:	xor    BYTE PTR [ecx-0x78ffff87],cl
  41b505:	adc    eax,eax
  41b507:	mov    edx,0xc544113f
  41b50c:	cs pop es
  41b50e:	xchg   BYTE PTR [esi-0x62],ch
  41b511:	add    al,BYTE PTR [eax]
  41b513:	mov    edx,0xf9244e13
  41b518:	sub    BYTE PTR [esi],cl
  41b51a:	or     eax,0x72f9f169
  41b51f:	out    dx,eax
  41b520:	aam    0x5
  41b522:	xor    BYTE PTR [edx],dl
  41b524:	repnz pop esi
  41b526:	xor    BYTE PTR [eax],0x8e
  41b529:	push   ebx
  41b52a:	or     ch,BYTE PTR [ecx-0x2f]
  41b52d:	sub    al,0x74
  41b52f:	in     al,dx
  41b530:	push   ds
  41b531:	shr    DWORD PTR ds:0xf759e294,1
  41b537:	test   al,0x73
  41b539:	add    eax,0x4fb11080
  41b53e:	adc    al,BYTE PTR [eax]
  41b540:	push   ecx
  41b541:	push   cs
  41b542:	mov    eax,ds:0x730a9e80
  41b547:	add    eax,0x755bb644
  41b54c:	mov    ecx,0x4a7af585
  41b551:	std    
  41b552:	mov    ecx,edx
  41b554:	hlt    
  41b555:	call   0xf3a7355a
  41b55a:	jg     0x41b556
  41b55c:	jge    0x41b550
  41b55e:	popf   
  41b55f:	ret    
  41b560:	(bad)  
  41b561:	(bad)  
  41b562:	jl     0x41b547
  41b564:	jnp    0x41b4eb
  41b566:	mov    edi,0x86000030
  41b56b:	xchg   edi,eax
  41b56c:	jl     0x41b567
  41b56e:	jge    0x41b562
  41b570:	popf   
  41b571:	ret    0xc842
  41b574:	jl     0x41b558
  41b576:	jnp    0x41b4fd
  41b578:	mov    esi,0x300a0a30
  41b57d:	and    eax,0x5c849446
  41b582:	add    al,0x4
  41b584:	mov    BYTE PTR [esp+eax*1-0x1],dl
  41b588:	jle    0x41b54a
  41b58a:	inc    esi
  41b58b:	out    0xff,al
  41b58d:	xchg   DWORD PTR [eax-0xb],edx
  41b590:	inc    edx
  41b591:	inc    eax
  41b592:	jg     0x41b5f6
  41b594:	and    al,0x14
  41b596:	xor    edi,DWORD PTR [edi+0x77]
  41b599:	push   DWORD PTR [ebx-0x1d]
  41b59c:	push   edi
  41b59d:	pop    edi
  41b59e:	mov    edx,0x4200060a
  41b5a3:	mov    edi,0x4a8f0004
  41b5a8:	and    al,0x8
  41b5aa:	ffreep st(4)
  41b5ac:	(bad)  
  41b5ad:	aas    
  41b5ae:	or     dh,BYTE PTR [ecx]
  41b5b0:	sbb    al,0xe8
  41b5b2:	jg     0x41b5b5
  41b5b4:	sti    
  41b5b5:	jmp    FWORD PTR [edi-0x52]
  41b5b8:	xor    esi,0xfcf1779d
  41b5be:	dec    ecx
  41b5bf:	mov    edi,0xc751fd0c
  41b5c4:	or     al,0xe8
  41b5c6:	xchg   al,bl
  41b5c8:	(bad)  
  41b5ca:	es sub ebx,ebp
  41b5cd:	add    DWORD PTR [eax],eax
  41b5cf:	add    BYTE PTR [esi+0x2b],ch
  41b5d2:	inc    edx
  41b5d3:	ret    0xeb95
  41b5d6:	xor    eax,0xed6bb189
  41b5db:	or     ebx,DWORD PTR [esi]
  41b5dd:	das    
  41b5de:	hlt    
  41b5df:	add    ecx,DWORD PTR [ebx]
  41b5e1:	mov    eax,0xc0ad72df
  41b5e6:	cmc    
  41b5e7:	ja     0x41b598
  41b5e9:	sub    DWORD PTR [edi+eax*4],eax
  41b5ec:	loopne 0x41b57b
  41b5ee:	jmp    0x41b5f3
  41b5f0:	push   ds
  41b5f1:	aas    
  41b5f2:	loopne 0x41b5f3
  41b5f4:	pop    ss
  41b5f5:	daa    
  41b5f6:	or     al,0x89
  41b5f8:	shl    ch,1
  41b5fa:	xor    edx,DWORD PTR [esi+0x28]
  41b5fd:	mov    dh,0x8
  41b5ff:	mov    eax,esp
  41b601:	int    0x83
  41b603:	push   ds
  41b604:	popf   
  41b605:	push   esp
  41b606:	mov    ecx,0xdbf71454
  41b60b:	cmp    BYTE PTR [ebx-0x23],ah
  41b60e:	dec    ebp
  41b60f:	push   ecx
  41b610:	and    bh,ah
  41b612:	fsub   st,st(7)
  41b614:	jno    0x41b5aa
  41b616:	(bad)  
  41b618:	push   ss
  41b619:	bound  edx,QWORD PTR [edx+edx*8]
  41b61c:	(bad)  
  41b61d:	xor    edx,DWORD PTR [ebp+0x43]
  41b620:	(bad)  
  41b621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b622:	or     BYTE PTR [ebx-0x54],dh
  41b625:	add    dh,BYTE PTR ds:0x83a68910
  41b62b:	jp     0x41b5ba
  41b62d:	jmp    0x1f0:0xa71e4554
  41b634:	add    BYTE PTR [eax],al
  41b636:	jno    0x41b63a
  41b638:	test   al,0x1c
  41b63a:	data16 (bad) 
  41b63c:	xchg   esp,eax
  41b63d:	std    
  41b63e:	(bad)  [ebp+0x13]
  41b641:	xor    al,0xd0
  41b643:	dec    ebp
  41b644:	mul    eax
  41b646:	scas   eax,DWORD PTR es:[edi]
  41b647:	jbe    0x41b622
  41b649:	inc    ebx
  41b64a:	popf   
  41b64b:	jge    0x41b673
  41b64d:	push   esi
  41b64e:	mov    ds:0x32dfab8b,al
  41b653:	push   ss
  41b654:	jmp    0xa541:0x7255311d
  41b65b:	sbb    edi,DWORD PTR [ebp-0x58ecb3ae]
  41b661:	aas    
  41b662:	repz cmp esp,DWORD PTR [eax+0x6a029ac2]
  41b669:	popa   
  41b66a:	lods   eax,DWORD PTR ds:[esi]
  41b66b:	add    esi,DWORD PTR [edx*8-0x7450c2db]
  41b672:	out    0xee,eax
  41b674:	add    esp,edx
  41b676:	and    edx,DWORD PTR [ecx]
  41b678:	xchg   edx,eax
  41b679:	out    0x17,eax
  41b67b:	(bad)  
  41b67c:	std    
  41b67d:	mov    cl,BYTE PTR [ebp+0x1b]
  41b680:	scas   eax,DWORD PTR es:[edi]
  41b681:	push   ebx
  41b682:	jno    0x41b610
  41b684:	fadd   QWORD PTR [ebx+0x9fb2253]
  41b68a:	sbb    eax,0xa85fefd9
  41b68f:	sub    BYTE PTR [edi+0x11],0xb0
  41b693:	or     al,0x6a
  41b695:	ficomp DWORD PTR [ebx+edx*2+0x8ceb]
  41b69c:	scas   al,BYTE PTR es:[edi]
  41b69d:	ins    DWORD PTR es:[edi],dx
  41b69e:	push   edx
  41b69f:	inc    edx
  41b6a0:	arpl   WORD PTR [ebx],bx
  41b6a2:	push   edi
  41b6a3:	push   edx
  41b6a4:	std    
  41b6a5:	adc    BYTE PTR [eax+0x2],0x8f
  41b6a9:	(bad)
  41b6ad:	add    dh,BYTE PTR [ebx+0x551dfa]
  41b6b3:	fstp   DWORD PTR [ecx+0x7c6a0c4e]
  41b6b9:	repnz add DWORD PTR [esp+ebp*8+0x5e215a89],ebx
  41b6c1:	jmp    0xce9e18d1
  41b6c6:	mov    BYTE PTR [esi+eiz*8+0x17eae941],ah
  41b6cd:	inc    esp
  41b6ce:	hlt    
  41b6cf:	jb     0x41b71d
  41b6d1:	out    dx,al
  41b6d2:	sub    BYTE PTR [edx],ch
  41b6d4:	and    al,bl
  41b6d6:	jmp    0x1d4cc4a9
  41b6db:	je     0x41b73f
  41b6dd:	add    edi,edi
  41b6df:	jb     0x41b680
  41b6e1:	push   ss
  41b6e2:	and    BYTE PTR [ebp-0x5f],bl
  41b6e5:	push   ss
  41b6e6:	pop    es
  41b6e7:	dec    ebp
  41b6e8:	mov    ds:0x9e460b16,al
  41b6ed:	inc    ebx
  41b6ee:	jmp    0x1482dec1
  41b6f3:	add    ah,BYTE PTR [esi+0x7d]
  41b6f6:	pop    es
  41b6f7:	bound  ebx,QWORD PTR [edi-0x23]
  41b6fa:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b6fc:	inc    ebx
  41b6fd:	xlat   BYTE PTR ds:[ebx]
  41b6fe:	push   edx
  41b6ff:	jb     0x41b701
  41b701:	add    BYTE PTR [edx+0x45],cl
  41b704:	dec    edi
  41b705:	aas    
  41b706:	mov    dl,bh
  41b708:	jb     0x41b703
  41b70a:	imul   esi,ecx,0x77
  41b70d:	fcmovnu st,st(6)
  41b70f:	add    cl,BYTE PTR [ecx+0x427da6f4]
  41b715:	jno    0x41b73e
  41b717:	inc    ecx
  41b718:	or     al,0x5c
  41b71a:	mov    bh,ah
  41b71c:	cmp    BYTE PTR [esi-0x31],bl
  41b71f:	pop    edx
  41b720:	push   ecx
  41b721:	jb     0x41b706
  41b723:	sub    al,dh
  41b725:	mov    ecx,0x4e560884
  41b72a:	add    eax,0x34001632
  41b72f:	add    bh,BYTE PTR [edi-0x3c]
  41b732:	or     BYTE PTR [edi-0x3e7e03bf],al
  41b738:	jno    0x41b73f
  41b73a:	jge    0x41b79e
  41b73c:	cld    
  41b73d:	jmp    0x41b736
  41b73f:	mov    ah,0x41
  41b741:	cld    
  41b742:	dec    edi
  41b743:	inc    edx
  41b744:	cld    
  41b745:	sub    ecx,DWORD PTR [edx+0x3001f780]
  41b74b:	inc    esi
  41b74c:	jg     0x41b749
  41b74e:	mov    dh,0x3a
  41b750:	add    DWORD PTR [eax+0x4273f2fa],eax
  41b756:	aas    
  41b757:	dec    edx
  41b758:	clc    
  41b759:	(bad)  
  41b75a:	cld    
  41b75b:	(bad)  
  41b75c:	fld    DWORD PTR ss:[edx-0xf]
  41b760:	jg     0x41b79e
  41b762:	cmp    bl,0x70
  41b765:	sub    eax,DWORD PTR [eax]
  41b767:	add    ah,dl
  41b769:	or     al,0xfb
  41b76b:	jne    0x41b6f1
  41b76d:	mov    dh,0x11
  41b76f:	pushf  
  41b770:	addr16 inc ecx
  41b772:	add    BYTE PTR [ebp+0x2b1c2d44],al
  41b778:	test   eax,0xb1ff53e2
  41b77d:	loop   0x41b7d1
  41b77f:	jmp    DWORD PTR [ecx-0xf]
  41b782:	adc    eax,0x59284440
  41b787:	or     al,0xbf
  41b789:	xor    eax,0xf2008308
  41b78e:	(bad)  
  41b78f:	jl     0x41b7d9
  41b791:	jmp    0xf737:0xb5318aff
  41b798:	mov    edx,DWORD PTR ss:[edi-0x75]
  41b79c:	xor    edx,0xc06d5e5a
  41b7a2:	or     BYTE PTR [eax],al
  41b7a4:	push   ecx
  41b7a5:	mov    ch,al
  41b7a7:	sbb    DWORD PTR [ebp+0x7350f43f],0x44
  41b7ae:	push   ebp
  41b7af:	adc    al,0x16
  41b7b1:	(bad)  
  41b7b2:	pop    eax
  41b7b3:	adc    bl,BYTE PTR [ebp-0x15]
  41b7b6:	fcmovnbe st,st(5)
  41b7b8:	repnz xchg ebp,eax
  41b7ba:	lock xchg BYTE PTR [eax+0x27],ah
  41b7be:	fcmovnbe st,st(5)
  41b7c0:	push   ss
  41b7c1:	mov    cs,WORD PTR [edi+eax*4]
  41b7c4:	pusha  
  41b7c5:	sti    
  41b7c6:	xchg   BYTE PTR [edx-0x5b],al
  41b7c9:	pop    esi
  41b7ca:	sbb    BYTE PTR [eax],cl
  41b7cc:	add    BYTE PTR [eax],al
  41b7ce:	push   ss
  41b7cf:	adc    ecx,DWORD PTR [ecx-0x3d4036a6]
  41b7d5:	or     al,0x1e
  41b7d7:	dec    eax
  41b7d8:	add    al,0x0
  41b7da:	popf   
  41b7db:	je     0x41b80c
  41b7dd:	mov    ebp,DWORD PTR [eax]
  41b7df:	iret   
  41b7e0:	call   0xdc1e0c57
  41b7e5:	xchg   al,ah
  41b7e7:	loope  0x41b76e
  41b7e9:	mov    edi,0xff8e65a2
  41b7ee:	mov    ch,dl
  41b7f0:	xchg   DWORD PTR [edx-0x73],edi
  41b7f3:	add    ebx,eax
  41b7f5:	jne    0x41b7ed
  41b7f7:	in     al,dx
  41b7f8:	cs std 
  41b7fa:	call   0x95493b8
  41b7ff:	mov    ecx,0xaa180040
  41b804:	push   ebp
  41b805:	ins    BYTE PTR es:[edi],dx
  41b806:	sbb    eax,0xc83a17b6
  41b80b:	add    eax,DWORD PTR [edi-0x3816bab6]
  41b811:	inc    esp
  41b812:	jbe    0x41b86e
  41b814:	push   ebp
  41b815:	sub    DWORD PTR [esi],esp
  41b817:	out    dx,eax
  41b818:	fisttp WORD PTR [eax+0x73af675a]
  41b81e:	mov    eax,ds:0x9c154536
  41b823:	add    ah,BYTE PTR [edx]
  41b825:	inc    edi
  41b826:	adc    eax,0x2632ec4d
  41b82b:	out    dx,eax
  41b82c:	out    dx,al
  41b82d:	mov    al,bl
  41b82f:	jmp    0xd400:0x33
  41b836:	push   ecx
  41b837:	(bad)  
  41b839:	or     BYTE PTR [ebp-0x694063ce],dl
  41b83f:	jmp    0x41b87b
  41b841:	add    BYTE PTR [esi],ch
  41b843:	fcomp  QWORD PTR ds:0x53032356
  41b849:	jmp    0x41b868
  41b84b:	push   esi
  41b84c:	sar    DWORD PTR [edx+ebp*8-0x6c2c5504],1
  41b853:	neg    DWORD PTR [ecx-0x7b]
  41b856:	jmp    0xb000:0x54ea6afc
  41b85d:	shr    ecx,cl
  41b85f:	pop    esi
  41b860:	test   eax,0x740ba387
  41b865:	shr    cl,cl
  41b867:	rol    ch,cl
  41b869:	push   ebp
  41b86a:	fild   WORD PTR [edi]
  41b86c:	mov    WORD PTR [ecx-0x2d63f7a5],cs
  41b872:	out    0x58,eax
  41b874:	mov    DWORD PTR [edi-0x4b4a2fdd],eax
  41b87a:	in     eax,dx
  41b87b:	test   ecx,edx
  41b87d:	shl    DWORD PTR [ebp+0x2387c9db],cl
  41b883:	or     bl,al
  41b885:	aaa    
  41b886:	mov    al,0xc6
  41b888:	stos   BYTE PTR es:[edi],al
  41b889:	add    dh,BYTE PTR [edi+ecx*4]
  41b88c:	inc    esi
  41b88d:	xor    DWORD PTR [edx],edi
  41b88f:	xor    dl,BYTE PTR [ecx*1+0x282f60f]
  41b896:	push   ds
  41b897:	fild   DWORD PTR [eax]
  41b899:	add    BYTE PTR [edi+0x31b27e06],ch
  41b89f:	dec    ebp
  41b8a0:	add    cl,ah
  41b8a2:	sbb    ecx,ebx
  41b8a4:	cld    
  41b8a5:	xchg   edi,eax
  41b8a6:	sbb    al,0xd6
  41b8a8:	jge    0x41b871
  41b8aa:	sbb    eax,0x23c37d93
  41b8af:	inc    eax
  41b8b0:	or     BYTE PTR [ebx-0x5850155a],bl
  41b8b6:	out    0xd5,eax
  41b8b8:	sub    BYTE PTR [ecx],0x4d
  41b8bb:	inc    esi
  41b8bc:	inc    eax
  41b8bd:	cdq    
  41b8be:	and    DWORD PTR [eax+0x8],eax
  41b8c1:	ss das 
  41b8c3:	jl     0x41b907
  41b8c5:	sub    eax,0xeb383f14
  41b8ca:	sbb    eax,0xc6e37393
  41b8cf:	pop    DWORD PTR [ecx]
  41b8d1:	push   ss
  41b8d2:	out    0x89,al
  41b8d4:	xlat   BYTE PTR ds:[ebx]
  41b8d5:	add    cl,BYTE PTR fs:[edi+0x2d]
  41b8d9:	jb     0x41b937
  41b8db:	push   es
  41b8dc:	push   ebp
  41b8dd:	cdq    
  41b8de:	imul   ebp,edx,0x10
  41b8e1:	jmp    0xf15:0xaeb1d5c7
  41b8e8:	cmp    ecx,edx
  41b8ea:	clc    
  41b8eb:	dec    eax
  41b8ec:	std    
  41b8ed:	fidiv  WORD PTR [edi+0x55]
  41b8f0:	or     dh,bl
  41b8f2:	inc    esi
  41b8f3:	in     al,dx
  41b8f4:	mov    edi,0xc2047e05
  41b8f9:	jno    0x41b897
  41b8fb:	jnp    0x41b93f
  41b8fd:	mov    ebp,0xdadc0000
  41b902:	mov    esi,0x88cf47f7
  41b907:	stos   BYTE PTR es:[edi],al
  41b908:	jae    0x41b906
  41b90a:	cld    
  41b90b:	sbb    al,0xa5
  41b90d:	jnp    0x41b8d3
  41b90f:	xchg   ecx,eax
  41b910:	dec    ecx
  41b911:	paddw  mm2,QWORD PTR [esi-0x5fa6cf79]
  41b918:	pop    eax
  41b919:	or     al,BYTE PTR [eax]
  41b91b:	add    BYTE PTR [ecx+0x2081e881],bl
  41b921:	(bad)  
  41b922:	std    
  41b923:	push   DWORD PTR [ecx+ebx*1]
  41b926:	push   esi
  41b927:	push   edi
  41b928:	sahf   
  41b929:	add    al,0x87
  41b92b:	lock fadd st(3),st
  41b92e:	inc    ecx
  41b92f:	sti    
  41b930:	add    al,0xef
  41b932:	inc    eax
  41b933:	or     BYTE PTR [ebx],al
  41b935:	test   BYTE PTR [ebx+0x5005f400],al
  41b93b:	push   0x403454
  41b940:	outs   dx,DWORD PTR ds:[esi]
  41b941:	mov    ebx,0xad38a5e4
  41b946:	sti    
  41b947:	test   DWORD PTR [edx+esi*1+0x40a8d76],esi
  41b94e:	mov    cl,BYTE PTR [eax]
  41b950:	inc    esp
  41b951:	scas   al,BYTE PTR es:[edi]
  41b952:	sbb    al,0x74
  41b954:	mov    esi,0x1009f585
  41b959:	(bad)  
  41b95a:	jg     0x41b955
  41b95c:	mov    cl,0x2c
  41b95e:	(bad)  
  41b95f:	aas    
  41b960:	(bad)
  41b964:	add    BYTE PTR [eax],al
  41b966:	mov    bh,0x32
  41b968:	or     BYTE PTR [ebp+0x5055fe11],cl
  41b96e:	adc    DWORD PTR [edx-0x548c0114],eax
  41b974:	ret    
  41b975:	test   DWORD PTR [esp+ebp*4-0x5],esp
  41b979:	push   DWORD PTR [edi+0x5]
  41b97c:	add    BYTE PTR [eax],al
  41b97e:	dec    esp
  41b97f:	adc    BYTE PTR [edi+0x0],ah
  41b982:	test   BYTE PTR [esi-0x2c],bh
  41b985:	test   DWORD PTR [edi],ecx
  41b987:	xor    bh,BYTE PTR [edx]
  41b989:	mov    dl,0x6e
  41b98b:	fstp   st(1)
  41b98d:	inc    ebp
  41b98e:	add    ebp,DWORD PTR [ebx-0x54460779]
  41b994:	jo     0x41b9bd
  41b996:	popf   
  41b997:	or     al,0x9a
  41b999:	out    0x40,al
  41b99b:	fild   DWORD PTR [eax]
  41b99d:	sub    DWORD PTR [esi-0xf],ebx
  41b9a0:	jmp    0x41b93f
  41b9a2:	jno    0x41b9f4
  41b9a4:	xlat   BYTE PTR ds:[ebx]
  41b9a5:	mov    al,bl
  41b9a7:	out    0x3f,eax
  41b9a9:	push   ebp
  41b9aa:	adc    al,0xda
  41b9ac:	cs and ebp,0xd18dec67
  41b9b3:	xor    bh,dl
  41b9b5:	mov    BYTE PTR [eax-0x35],bl
  41b9b8:	mov    esi,edi
  41b9ba:	fsub   DWORD PTR [ebp+0x334ffedb]
  41b9c0:	aad    0xfe
  41b9c2:	repz jle 0x36b9a00b
  41b9c9:	pop    ecx
  41b9ca:	add    BYTE PTR [eax],al
  41b9cc:	aam    0x1c
  41b9ce:	or     BYTE PTR [eax],al
  41b9d0:	jo     0x41ba26
  41b9d2:	call   0x8cfe027
  41b9d7:	add    DWORD PTR [eax-0x35],ebp
  41b9da:	mov    eax,esp
  41b9dc:	push   ss
  41b9dd:	or     al,0xec
  41b9df:	sub    eax,0x8400db9d
  41b9e4:	fst    QWORD PTR [ebp-0x3]
  41b9e7:	xor    ch,bl
  41b9e9:	add    esp,DWORD PTR [ecx]
  41b9eb:	push   esi
  41b9ec:	mov    ds:0xd288f155,al
  41b9f1:	fmul   QWORD PTR [ebp+0x8]
  41b9f4:	xchg   edx,eax
  41b9f5:	aaa    
  41b9f6:	or     BYTE PTR [esi-0x76],dl
  41b9f9:	iret   
  41b9fa:	adc    BYTE PTR [esi],dl
  41b9fc:	fstp   st(1)
  41b9fe:	add    ebx,0xffffffa9
  41ba01:	add    al,0x37
  41ba03:	add    al,0xeb
  41ba05:	fmul   QWORD PTR [ecx-0x409b5ea4]
  41ba0b:	pop    ebp
  41ba0c:	(bad)  
  41ba0d:	inc    ch
  41ba0f:	or     ebx,DWORD PTR [ebp+0x428d3d02]
  41ba15:	cmp    dl,ah
  41ba17:	xor    DWORD PTR [ebp-0x2f7335a8],edx
  41ba1d:	(bad)  
  41ba1e:	pop    ebx
  41ba1f:	inc    edx
  41ba20:	cmp    BYTE PTR [esi-0x2858b058],al
  41ba26:	xchg   esi,eax
  41ba27:	and    al,0x5f
  41ba29:	add    al,0xa8
  41ba2b:	mov    WORD PTR [edx],gs
  41ba2d:	fsub   st(0),st
  41ba2f:	mov    WORD PTR [eax],es
  41ba31:	add    BYTE PTR [eax+edi*1],dl
  41ba34:	dec    edi
  41ba35:	repz adc edx,ecx
  41ba38:	pop    ebp
  41ba39:	jg     0x41ba85
  41ba3b:	push   edi
  41ba3c:	in     al,dx
  41ba3d:	mov    al,BYTE PTR [eax+0x580296fa]
  41ba43:	xor    BYTE PTR [edx],ch
  41ba45:	cs and al,0xdf
  41ba48:	xchg   edi,eax
  41ba49:	xor    DWORD PTR [esi],edx
  41ba4b:	inc    esi
  41ba4c:	fbstp  TBYTE PTR [ebx]
  41ba4e:	ja     0x41ba4a
  41ba50:	sub    eax,0x1d13a54e
  41ba55:	fsubr  DWORD PTR [edi-0x62bc08de]
  41ba5b:	test   DWORD PTR [esi],esp
  41ba5d:	dec    edi
  41ba5e:	xchg   bh,cl
  41ba60:	xchg   ebx,eax
  41ba61:	or     eax,ebp
  41ba63:	cmp    BYTE PTR [eax-0x98462fd],0x7d
  41ba6a:	mov    al,0x56
  41ba6c:	int    0x84
  41ba6e:	daa    
  41ba6f:	(bad)  
  41ba70:	out    0x4f,al
  41ba72:	mov    ebp,0xe2d82b7d
  41ba77:	pop    esp
  41ba78:	jecxz  0x41ba50
  41ba7a:	ud0    eax,DWORD PTR [eax+0x8]
  41ba7e:	adc    BYTE PTR [ebp-0x21],0xd6
  41ba82:	(bad)  
  41ba83:	adc    dl,bh
  41ba85:	inc    ebx
  41ba86:	popf   
  41ba87:	test   DWORD PTR [esi+0x389551],esp
  41ba8d:	ror    DWORD PTR [edi+ecx*8-0x27515103],0xfc
  41ba95:	sbb    al,0x0
  41ba97:	add    BYTE PTR [ecx+0x4f4912cd],ah
  41ba9d:	verr   WORD PTR [edx+0x3]
  41baa1:	sub    eax,0x2a9abc7
  41baa6:	push   ebx
  41baa7:	jb     0x41baee
  41baa9:	sub    bl,0xdd
  41baac:	js     0x41bae3
  41baae:	xor    DWORD PTR [esi+0x72],esi
  41bab1:	pop    esp
  41bab2:	add    al,0x6e
  41bab4:	or     al,0x17
  41bab6:	pop    gs
  41bab8:	sahf   
  41bab9:	jns    0x41baaa
  41babb:	push   0xffffffd9
  41babd:	int    0x38
  41babf:	pop    ecx
  41bac0:	ins    DWORD PTR es:[edi],dx
  41bac1:	adc    ecx,DWORD PTR [ebx+0x563edaa4]
  41bac7:	cs pop esp
  41bac9:	out    0x1b,al
  41bacb:	jmp    0xdd3ebd6e
  41bad0:	mov    ?,edi
  41bad2:	aas    
  41bad3:	jmp    0xaccaad9f
  41bad8:	out    dx,al
  41bad9:	or     DWORD PTR [ebx-0xf],eax
  41badc:	ins    DWORD PTR es:[edi],dx
  41badd:	iret   
  41bade:	inc    ebp
  41badf:	fs pop esp
  41bae1:	out    0x4f,al
  41bae3:	mov    bh,0xd3
  41bae5:	repz xor ebx,eax
  41bae8:	pop    esi
  41bae9:	add    al,BYTE PTR [ebx+0x55da4c29]
  41baef:	imul   BYTE PTR [ebp-0x6156ee92]
  41baf5:	jnp    0x41babb
  41baf7:	inc    esi
  41baf8:	retf   
  41baf9:	vpmulhw xmm0,xmm7,XMMWORD PTR [eax]
  41bafd:	add    BYTE PTR [esi+0x1fc58931],bl
  41bb03:	ficom  DWORD PTR [edi]
  41bb05:	cmp    ah,BYTE PTR [ecx+eax*2]
  41bb08:	clc    
  41bb09:	add    BYTE PTR [ecx+esi*8+0x26ce53d6],dl
  41bb10:	sti    
  41bb11:	adc    eax,0x3cd228
  41bb16:	mov    ah,0xb5
  41bb18:	adc    DWORD PTR [eax],ebp
  41bb1a:	push   esp
  41bb1b:	inc    edx
  41bb1c:	add    BYTE PTR [ebp-0x72e9cd0c],al
  41bb22:	jno    0x41bad2
  41bb24:	dec    esp
  41bb25:	push   0x64
  41bb27:	pop    esp
  41bb28:	sti    
  41bb29:	call   DWORD PTR [ecx+0x22]
  41bb2c:	adc    BYTE PTR [eax+0x34],al
  41bb2f:	cmp    DWORD PTR [ebp+esi*2-0x14400bd0],0xffffffb8
  41bb37:	jnp    0x41bb7a
  41bb39:	in     al,dx
  41bb3a:	push   esp
  41bb3b:	mov    ch,0x71
  41bb3d:	or     bl,al
  41bb3f:	inc    edx
  41bb40:	call   0x43af46
  41bb45:	push   ebx
  41bb46:	ret    
  41bb47:	inc    edx
  41bb48:	hlt    
  41bb49:	add    al,BYTE PTR [edx+eax*1]
  41bb4c:	add    bh,bh
  41bb4e:	shr    ecx,1
  41bb50:	cmovo  esi,esp
  41bb53:	cmp    BYTE PTR [esp+esi*2+0x534f11a5],0x49
  41bb5b:	inc    edx
  41bb5c:	call   0x71f6c2b1
  41bb61:	clc    
  41bb62:	add    BYTE PTR [eax],al
  41bb64:	stos   DWORD PTR es:[edi],eax
  41bb65:	sar    BYTE PTR [eax],cl
  41bb67:	adc    BYTE PTR [edx+eax*1],al
  41bb6a:	add    eax,0x15fb0530
  41bb70:	mov    esp,0x31003cd6
  41bb75:	shl    DWORD PTR [ecx+0x2],0xd7
  41bb79:	push   es
  41bb7a:	sti    
  41bb7b:	jne    0x41bbf9
  41bb7d:	mov    bh,0x11
  41bb7f:	mov    al,ds:0x8a004186
  41bb84:	popf   
  41bb85:	cwde   
  41bb86:	ss (bad) 
  41bb88:	pop    edi
  41bb89:	out    0x0,eax
  41bb8b:	push   ebx
  41bb8c:	es mov bh,0x30
  41bb8f:	dec    edi
  41bb90:	into   
  41bb91:	pop    esi
  41bb92:	cmp    eax,0xc41cdf8
  41bb97:	push   0x5a
  41bb99:	enter  0xfcb7,0xa8
  41bb9d:	mov    ebx,0x669d3ff0
  41bba2:	les    ecx,FWORD PTR [ecx+ebx*1]
  41bba5:	dec    edi
  41bba6:	add    al,0x0
  41bba8:	popf   
  41bba9:	adc    al,0x87
  41bbab:	cmp    ch,BYTE PTR [ebp-0x55]
  41bbae:	inc    eax
  41bbaf:	add    BYTE PTR [eax],bl
  41bbb1:	fmul   DWORD PTR es:[edi-0x32]
  41bbb5:	call   0xd65bd323
  41bbba:	fdivr  st,st(4)
  41bbbc:	jmp    0xed2c:0x8f72c45d
  41bbc3:	pop    ss
  41bbc4:	lods   al,BYTE PTR ds:[esi]
  41bbc5:	fwait
  41bbc6:	add    BYTE PTR [ecx-0x4f0b0000],al
  41bbcc:	dec    ebp
  41bbcd:	gs es sahf 
  41bbd0:	aam    0x38
  41bbd2:	ficom  WORD PTR [esi+0x17f55660]
  41bbd8:	sar    ebp,cl
  41bbda:	ficomp DWORD PTR [edi-0x2c]
  41bbdd:	cmp    dh,cl
  41bbdf:	outs   dx,BYTE PTR ds:[esi]
  41bbe0:	das    
  41bbe1:	mov    esp,DWORD PTR [eax-0x11]
  41bbe4:	xor    edi,ebp
  41bbe6:	dec    eax
  41bbe7:	imul   DWORD PTR ds:0x4cfc946a
  41bbed:	clc    
  41bbee:	mov    dl,0xeb
  41bbf0:	jl     0x41bbb1
  41bbf2:	xor    ecx,eax
  41bbf4:	shl    DWORD PTR ds:0x1024ada2,cl
  41bbfa:	fstp   st(1)
  41bbfc:	pop    ss
  41bbfd:	ror    DWORD PTR [ecx],0x3
  41bc00:	adc    eax,0xaa0a8a8a
  41bc05:	dec    ebp
  41bc06:	mov    ch,0xfb
  41bc08:	pushf  
  41bc09:	ret    
  41bc0a:	loop   0x41bc3e
  41bc0c:	into   
  41bc0d:	or     eax,0xf40af670
  41bc12:	stos   BYTE PTR es:[edi],al
  41bc13:	add    al,BYTE PTR [edx]
  41bc15:	shr    esi,0xf3
  41bc18:	popa   
  41bc19:	add    edx,DWORD PTR [esi-0x62fbf8fe]
  41bc1f:	dec    edi
  41bc20:	jmp    0x41bbb2
  41bc22:	dec    ebx
  41bc23:	f2xm1  
  41bc25:	push   ss
  41bc26:	popf   
  41bc27:	adc    ah,bh
  41bc29:	add    edx,DWORD PTR [edi+0xc066a7]
  41bc2f:	add    BYTE PTR [ebp+0x29768f34],bl
  41bc35:	int    0x7d
  41bc37:	xor    eax,0xd46f5620
  41bc3c:	scas   eax,DWORD PTR es:[edi]
  41bc3d:	mov    ds:0x2b9d43d8,al
  41bc42:	jno    0x41bc04
  41bc44:	gs mov ecx,0xdf142e29
  41bc4a:	mov    bh,0x80
  41bc4c:	jg     0x41bc1c
  41bc4e:	out    0x6b,al
  41bc50:	int    0x55
  41bc52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc53:	add    ebp,eax
  41bc55:	cmc    
  41bc56:	push   ss
  41bc57:	icebp  
  41bc58:	mov    ds:0x4ec36c02,al
  41bc5d:	and    bh,BYTE PTR [edi-0x18bdb685]
  41bc63:	xor    ecx,eax
  41bc65:	cmc    
  41bc66:	pop    edx
  41bc67:	icebp  
  41bc68:	add    BYTE PTR [edx],0x6c
  41bc6b:	ret    
  41bc6c:	cs repnz pop ebx
  41bc6f:	inc    esi
  41bc70:	mov    cl,0x31
  41bc72:	xchg   ecx,eax
  41bc73:	aam    0xa9
  41bc75:	mov    dl,0x63
  41bc77:	ret    
  41bc78:	das    
  41bc79:	push   es
  41bc7a:	add    BYTE PTR [ebx+0x6ac0c45e],bh
  41bc80:	jmp    0x41bc50
  41bc82:	push   ebp
  41bc84:	add    eax,0xc4aac68c
  41bc89:	jns    0x41bc76
  41bc8b:	push   0x7d
  41bc8d:	xor    edx,DWORD PTR [esi+0x1a]
  41bc90:	xor    BYTE PTR [edx],dl
  41bc92:	test   BYTE PTR [edi+0x0],0x0
  41bc96:	call   0x5744b8d3
  41bc9b:	push   eax
  41bc9c:	sbb    al,BYTE PTR [ebx-0x1b]
  41bc9f:	ja     0x41bce3
  41bca1:	adc    DWORD PTR [edi-0x4d0302ce],0x1be93ff4
  41bcab:	mov    edi,0x9ae4ae0b
  41bcb0:	inc    ebx
  41bcb1:	jmp    0x2cccbf54
  41bcb6:	or     DWORD PTR [eax+0x4a],edi
  41bcb9:	jge    0x41bc4b
  41bcbb:	dec    edi
  41bcbc:	or     ch,bh
  41bcbe:	mov    ds:0x1de14a79,eax
  41bcc3:	xor    ah,ch
  41bcc5:	mov    ebx,0xed72cdce
  41bcca:	les    ebx,FWORD PTR [edx+0x0]
  41bccd:	jmp    0xb797c370
  41bcd2:	mov    ah,0x3b
  41bcd4:	push   esi
  41bcd5:	inc    esi
  41bcd6:	in     al,0x22
  41bcd8:	pop    gs
  41bcda:	sahf   
  41bcdb:	jg     0x41bc9c
  41bcdd:	mov    ebp,0xd97313b8
  41bce2:	push   0xfffffff2
  41bce4:	imul   edi,ecx,0xb9ec401d
  41bcea:	out    dx,eax
  41bceb:	dec    edi
  41bcec:	adc    BYTE PTR [ecx],al
  41bcee:	or     ch,0xfd
  41bcf1:	push   cs
  41bcf2:	sar    dl,cl
  41bcf4:	cld    
  41bcf5:	add    BYTE PTR [ecx],ch
  41bcf7:	scas   eax,DWORD PTR es:[edi]
  41bcf8:	xchg   DWORD PTR ds:0xd4540000,esi
  41bcfe:	cmp    al,0x0
  41bd00:	xchg   ebx,eax
  41bd01:	mov    ebx,?
  41bd03:	jne    0x41bc95
  41bd05:	mov    ch,0xd2
  41bd07:	mov    edi,DWORD PTR [ecx-0x58fd1856]
  41bd0d:	mov    esi,0xca46c95a
  41bd12:	cld    
  41bd13:	push   esp
  41bd14:	jmp    FWORD PTR [ecx-0x7cd5ccae]
  41bd1a:	inc    ecx
  41bd1b:	or     al,0x9d
  41bd1d:	sub    ecx,DWORD PTR [esi*2+0x871b577]
  41bd24:	fsub   QWORD PTR [esi+0x73]
  41bd27:	inc    eax
  41bd28:	xor    al,0x16
  41bd2a:	call   0xfbf7343e
  41bd2f:	or     DWORD PTR [eax],0xffffffca
  41bd32:	out    0x14,eax
  41bd34:	and    ebp,DWORD PTR [ebx]
  41bd36:	or     al,0xff
  41bd38:	sub    esi,ecx
  41bd3a:	fs mov ah,0x2b
  41bd3d:	inc    esi
  41bd3e:	add    BYTE PTR [eax+0x1c],dl
  41bd41:	mov    bh,0x3e
  41bd43:	inc    DWORD PTR [ebx-0x40ef3f80]
  41bd49:	mov    esp,0x2a631b7a
  41bd4e:	sbb    BYTE PTR [ebx+0x75fbd249],cl
  41bd54:	hlt    
  41bd55:	mov    ah,0x71
  41bd57:	or     al,0x4c
  41bd59:	cmc    
  41bd5a:	cli    
  41bd5b:	jmp    DWORD PTR [ebx+0xc71b4]
  41bd61:	add    BYTE PTR [edi],bh
  41bd63:	mov    ch,0xe4
  41bd65:	jae    0x41bce9
  41bd67:	mov    bl,0xfb
  41bd69:	mov    edi,DWORD PTR [edx+0x13]
  41bd6c:	pop    ecx
  41bd6d:	ret    0x5c8
  41bd70:	push   ecx
  41bd71:	mov    ebx,DWORD PTR [ebp+0x45eb85ff]
  41bd77:	nop
  41bd78:	adc    eax,0x5a1735fd
  41bd7d:	inc    eax
  41bd7e:	popf   
  41bd7f:	push   edx
  41bd80:	push   eax
  41bd81:	lock call 0x7bdb:0xdd0eeca6
  41bd89:	inc    edx
  41bd8a:	xchg   ecx,eax
  41bd8b:	and    al,0xc7
  41bd8d:	or     al,0x19
  41bd8f:	sahf   
  41bd90:	add    eax,DWORD PTR [eax]
  41bd92:	popf   
  41bd93:	or     al,0x3a
  41bd95:	mov    DWORD PTR [eax-0x62c00a89],ebp
  41bd9b:	xor    esi,DWORD PTR [esp+esi*2-0x2cf2423]
  41bda2:	jae    0x41bde7
  41bda4:	fdiv   QWORD PTR [ebp+ebx*8-0x25]
  41bda8:	iret   
  41bda9:	jb     0x41bdfc
  41bdab:	push   esp
  41bdac:	lods   al,BYTE PTR ds:[esi]
  41bdad:	cld    
  41bdae:	imul   edx,DWORD PTR [edx+0x45],0xffffffec
  41bdb2:	jbe    0x41bd44
  41bdb4:	inc    BYTE PTR [ebx+0xdb0e]
  41bdba:	cbw    
  41bdbc:	inc    BYTE PTR [ebx+0xdb16]
  41bdc2:	jb     0x41be14
  41bdc4:	push   ebp
  41bdc5:	or     BYTE PTR [eax],al
  41bdc7:	add    BYTE PTR [eax],ah
  41bdc9:	push   ds
  41bdca:	int3   
  41bdcb:	dec    edi
  41bdcc:	adc    al,0xde
  41bdce:	enter  0xeefc,0x5d
  41bdd2:	les    esi,FWORD PTR [edx-0x62]
  41bdd5:	bound  ecx,QWORD PTR [ebp-0x8]
  41bdd8:	xchg   DWORD PTR [edi+0x68dd312e],ebx
  41bdde:	xchg   WORD PTR [eax+0x7],bx
  41bde2:	jge    0x41be26
  41bde4:	xor    eax,0xa8fd3068
  41bde9:	iret   
  41bdea:	idiv   BYTE PTR [edi]
  41bdec:	popf   
  41bded:	add    dh,BYTE PTR [edx+0x3f]
  41bdf0:	xchg   ecx,eax
  41bdf1:	test   DWORD PTR [edx],esp
  41bdf3:	add    BYTE PTR [edx],ah
  41bdf5:	dec    edi
  41bdf6:	outs   dx,DWORD PTR ds:[esi]
  41bdf7:	jnp    0x41be30
  41bdf9:	mov    ds:0x52fc0d1,al
  41bdfe:	je     0x41be3f
  41be00:	mov    eax,ds:0xeaafa376
  41be05:	jne    0x41bdb2
  41be07:	imul   esp,edx,0x7b
  41be0a:	mov    ds:0xde32f1cb,eax
  41be0f:	stos   DWORD PTR es:[edi],eax
  41be10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be11:	ret    0x403
  41be14:	mov    eax,ds:0x72fee702
  41be19:	enter  0x7e6,0xcd
  41be1d:	das    
  41be1e:	push   ds
  41be1f:	cmp    edx,edx
  41be21:	das    
  41be22:	mov    esi,0xdbc7a556
  41be27:	pop    ss
  41be28:	lods   eax,DWORD PTR ds:[esi]
  41be29:	inc    edx
  41be2a:	out    0x86,eax
  41be2c:	add    BYTE PTR [eax],al
  41be2e:	or     cl,BYTE PTR [edi-0x3]
  41be31:	ror    bh,1
  41be33:	loop   0x41bea6
  41be35:	push   ss
  41be36:	std    
  41be37:	hlt    
  41be38:	es add al,0x30
  41be3b:	mov    cl,0x8d
  41be3d:	push   esi
  41be3e:	dec    ecx
  41be3f:	enter  0x7c9c,0xdf
  41be43:	fisubr WORD PTR [edi+0x46]
  41be46:	or     eax,0x8ecbf40a
  41be4b:	add    BYTE PTR [esi+0x56],ch
  41be4e:	add    eax,0x1dfbbc8
  41be53:	dec    esi
  41be54:	push   ebx
  41be55:	ror    BYTE PTR [edi-0x62bc06da],1
  41be5b:	sub    BYTE PTR [edx-0x5a2da084],dh
  41be61:	mov    edx,0x7ce6fadc
  41be66:	pusha  
  41be67:	(bad)  
  41be68:	call   FWORD PTR [ebp-0x245ff3af]
  41be6e:	pop    esi
  41be6f:	add    al,BYTE PTR [ebx+0x50016a29]
  41be75:	push   ds
  41be76:	cmc    
  41be77:	jp     0x41be7e
  41be79:	ins    BYTE PTR es:[edi],dx
  41be7a:	ficom  WORD PTR [ebx+0x1]
  41be7d:	mov    ecx,0xd969aecd
  41be82:	fimul  DWORD PTR fs:[edi-0x1]
  41be86:	ins    DWORD PTR es:[edi],dx
  41be87:	(bad)  
  41be88:	pop    esp
  41be89:	sub    cl,bl
  41be8b:	jns    0x41be78
  41be8d:	pop    esp
  41be8e:	jecxz  0x41be82
  41be90:	dec    edi
  41be91:	push   ebx
  41be92:	add    BYTE PTR [eax],al
  41be94:	cdq    
  41be95:	lds    esi,FWORD PTR [edx-0x7]
  41be98:	imul   edx,DWORD PTR [esp+ecx*1-0x2a],0xffffffd4
  41be9d:	cli    
  41be9e:	imul   ebp,ecx,0xdb4ff45b
  41bea4:	fiadd  WORD PTR [edx]
  41bea6:	sub    DWORD PTR [ecx-0x49b0090b],0x54
  41bead:	adc    DWORD PTR [bx+di],ebp
  41beb0:	mov    eax,ds:0x67f94279
  41beb5:	add    DWORD PTR [ecx],esi
  41beb7:	test   eax,0xe90bc46c
  41bebc:	jne    0x41bf37
  41bebe:	jmp    0x41bf28
  41bec0:	cmp    eax,0x9ee90157
  41bec5:	xor    BYTE PTR [ebp+0x6c],dl
  41bec8:	and    al,0xcb
  41beca:	std    
  41becb:	jbe    0x41beaf
  41becd:	ss std 
  41becf:	hlt    
  41bed0:	push   es
  41bed1:	(bad)  
  41bed2:	adc    dl,BYTE PTR [ebp+0xe]
  41bed5:	pop    es
  41bed6:	add    BYTE PTR [esp-0x35],ch
  41beda:	std    
  41bedb:	push   esi
  41bedc:	loop   0x41bf14
  41bede:	push   eax
  41bedf:	shl    esi,0x4e
  41bee2:	inc    eax
  41bee3:	add    ah,dh
  41bee5:	ja     0x41bf4f
  41bee7:	add    al,ah
  41bee9:	add    cl,BYTE PTR [ecx-0x44d8b4b]
  41beef:	call   FWORD PTR [ebp+edx*8+0x3d]
  41bef3:	(bad)  
  41bef4:	jnp    0x41be79
  41bef6:	ror    BYTE PTR [eax+eax*1],0x0
  41befa:	sti    
  41befb:	adc    al,0x81
  41befd:	ror    BYTE PTR [edx],0xcf
  41bf00:	mov    DWORD PTR [ebp-0x44ddc],eax
  41bf06:	add    al,0xab
  41bf08:	or     al,BYTE PTR [eax]
  41bf0a:	test   BYTE PTR [edx],al
  41bf0c:	test   al,al
  41bf0e:	adc    dh,bh
  41bf10:	scas   eax,DWORD PTR es:[edi]
  41bf11:	add    DWORD PTR [edi+0x4dc03200],ebx
  41bf17:	les    eax,FWORD PTR [eax]
  41bf19:	add    BYTE PTR [ecx+0x5881e949],dh
  41bf1f:	add    DWORD PTR es:[eax],eax
  41bf22:	je     0x41bf35
  41bf24:	push   ebx
  41bf25:	(bad)  
  41bf26:	icebp  
  41bf27:	ins    DWORD PTR es:[edi],dx
  41bf28:	stc    
  41bf29:	call   FWORD PTR [ebx]
  41bf2b:	adc    ch,BYTE PTR [eax+0x3c]
  41bf2e:	mov    WORD PTR [esi],?
  41bf30:	add    al,ch
  41bf32:	cmp    DWORD PTR [ecx-0x3e4f0004],edi
  41bf38:	or     eax,DWORD PTR [ebx+ebp*1-0x46fffffe]
  41bf3f:	jp     0x41beed
  41bf41:	cld    
  41bf42:	sbb    esi,DWORD PTR [ebp+0x6db18d4c]
  41bf48:	stc    
  41bf49:	call   FWORD PTR [ebx+0x1815fb11]
  41bf4f:	sar    DWORD PTR [eax+eax*1],1
  41bf52:	imul   edi,DWORD PTR [edx-0x54],0x4cb47bfc
  41bf59:	call   ecx
  41bf5b:	leave  
  41bf5c:	mov    DWORD PTR [ebp+0x0],eax
  41bf5f:	add    BYTE PTR [ebp+0x654458e3],bl
  41bf65:	fwait
  41bf66:	add    BYTE PTR [eax-0xb],dl
  41bf69:	lahf   
  41bf6a:	inc    ebx
  41bf6b:	std    
  41bf6c:	ficomp DWORD PTR [eax-0x3b]
  41bf6f:	nop    DWORD PTR [esi+ecx*8]
  41bf73:	or     al,0x21
  41bf75:	add    DWORD PTR [eax],0xcd8b9d00
  41bf7b:	jb     0x41bf22
  41bf7d:	push   esi
  41bf7e:	mov    BYTE PTR [ebx+0x4fcdecb0],dh
  41bf84:	mov    ch,0x1e
  41bf86:	int3   
  41bf87:	jmp    DWORD PTR [edx+0x270857fc]
  41bf8d:	and    ebx,ecx
  41bf8f:	push   edi
  41bf90:	xchg   ecx,eax
  41bf91:	int    0xca
  41bf93:	and    DWORD PTR [esi-0x5c],0xffffff84
  41bf97:	xchg   BYTE PTR [ebp+0x208b00db],bl
  41bf9d:	outs   dx,DWORD PTR ds:[esi]
  41bf9e:	int3   
  41bf9f:	cld    
  41bfa0:	jb     0x41bfad
  41bfa2:	pop    esp
  41bfa3:	fs in  eax,0x1b
  41bfa6:	add    al,0xb9
  41bfa8:	xchg   ebx,eax
  41bfa9:	fiadd  DWORD PTR [eax]
  41bfab:	add    BYTE PTR [eax],ch
  41bfad:	inc    esi
  41bfae:	js     0x41bfa9
  41bfb0:	push   edx
  41bfb1:	mov    ebx,ds
  41bfb3:	push   cs
  41bfb4:	fst    QWORD PTR [edx+ecx*8-0x33a71baa]
  41bfbb:	cld    
  41bfbc:	mov    ebx,0x9c045bfd
  41bfc1:	fild   DWORD PTR [eax]
  41bfc3:	mov    eax,DWORD PTR [eax]
  41bfc5:	add    BYTE PTR [eax],ah
  41bfc7:	das    
  41bfc8:	int    0xfc
  41bfca:	and    ch,bl
  41bfcc:	pop    ebx
  41bfcd:	je     0x41bf64
  41bfcf:	sbb    eax,DWORD PTR [edi*8+0x3ff1b7a8]
  41bfd6:	popf   
  41bfd7:	and    ecx,DWORD PTR ds:0xe7029c02
  41bfdd:	add    esi,DWORD PTR [eax+0x3d]
  41bfe0:	rol    DWORD PTR [edi-0x54],1
  41bfe3:	lds    esp,FWORD PTR [ebx+0x47]
  41bfe6:	sub    DWORD PTR ds:0xe8fccb7,ebp
  41bfec:	fld    QWORD PTR [ebx-0x63]
  41bfef:	and    DWORD PTR [edx],0xccc28c00
  41bff5:	jp     0x41c056
  41bff7:	(bad)  
  41bff8:	xchg   ebp,eax
  41bff9:	jle    0x41c05a
  41bffb:	xchg   BYTE PTR [esi+0x727f2634],dh
  41c001:	retf   0xc4b1
  41c004:	mov    dh,0x7e
  41c006:	pop    ds
  41c007:	mov    cs,WORD PTR [ebx]
  41c009:	int    0xa1
  41c00b:	xor    DWORD PTR [esi],ebp
  41c00d:	inc    edi
  41c00e:	pop    ecx
  41c00f:	aas    
  41c010:	out    0x3,eax
  41c012:	popf   
  41c013:	mov    ebx,0xc48bdbab
  41c018:	out    0x3,al
  41c01a:	jne    0x41c017
  41c01c:	jecxz  0x41bfea
  41c01e:	jns    0x41bfec
  41c020:	mov    esi,0xaecc32e8
  41c025:	fcomp  DWORD PTR [eax+0x976375]
  41c02b:	add    BYTE PTR [edi-0x3c],ah
  41c02e:	lds    esi,FWORD PTR [ebx]
  41c030:	inc    ebp
  41c031:	gs inc ebp
  41c033:	int    0x51
  41c035:	adc    DWORD PTR [edi-0x57461bd4],esp
  41c03b:	pop    es
  41c03c:	popf   
  41c03d:	ja     0x41c06b
  41c03f:	add    BYTE PTR [esi],bl
  41c041:	ret    
  41c042:	adc    al,BYTE PTR ds:0x3ffbc3cd
  41c048:	lea    eax,[edx-0x19]
  41c04b:	js     0x41c0a5
  41c04d:	fiadd  DWORD PTR [eax-0x15]
  41c050:	sbb    esp,eax
  41c052:	adc    al,0x79
  41c054:	add    bl,bl
  41c056:	push   DWORD PTR [ecx+0x65fcc6f6]
  41c05c:	fimul  WORD PTR [edi+0x39]
  41c05f:	mov    esi,0x720c457b
  41c064:	cdq    
  41c065:	jg     0x41c026
  41c067:	frstor [ecx-0x5d0b02ce]
  41c06d:	repnz aas 
  41c06f:	jmp    0xed660891
  41c074:	sahf   
  41c075:	dec    esi
  41c076:	and    BYTE PTR [esi-0x1695fd9c],bl
  41c07c:	data16 out dx,al
  41c07e:	(bad)  
  41c07f:	call   0xc5b58622
  41c084:	ret    0x35c6
  41c087:	push   ss
  41c088:	mov    bl,0x3b
  41c08a:	adc    BYTE PTR [ecx+0x7cbf7f9e],ch
  41c090:	add    BYTE PTR [eax],al
  41c092:	mov    al,ds:0x5ebb04e3
  41c097:	fiadd  DWORD PTR [ecx]
  41c099:	cmp    DWORD PTR [edi-0x65d4a1db],ebx
  41c09f:	add    dl,BYTE PTR [ebx+0x72]
  41c0a2:	push   ebp
  41c0a3:	xor    al,0x4f
  41c0a5:	jb     0x41c080
  41c0a7:	test   ah,0x2c
  41c0aa:	push   ebp
  41c0ab:	(bad)  
  41c0ac:	(bad)  
  41c0ad:	call   0x3e014050
  41c0b2:	jge    0x41c10c
  41c0b4:	add    BYTE PTR [esp+edx*4-0x3a],ch
  41c0b8:	dec    esi
  41c0b9:	fs test dl,cl
  41c0bc:	dec    esi
  41c0bd:	inc    ebx
  41c0be:	inc    eax
  41c0bf:	xor    edi,ebp
  41c0c1:	cld    
  41c0c2:	jp     0x41c0b6
  41c0c4:	aas    
  41c0c5:	jmp    0xe4b543e7
  41c0ca:	and    ecx,DWORD PTR [eax-0x4]
  41c0cd:	in     eax,0xcd
  41c0cf:	std    
  41c0d0:	mov    BYTE PTR [eax],al
  41c0d2:	leave  
  41c0d3:	mov    dh,0xa4
  41c0d5:	pop    es
  41c0d6:	or     ch,bh
  41c0d8:	shr    BYTE PTR cs:[ebp+0x7b],0xde
  41c0dd:	pop    es
  41c0de:	idiv   DWORD PTR [ebp+edi*4-0x4079f808]
  41c0e5:	push   ebp
  41c0e6:	outs   dx,DWORD PTR ds:[esi]
  41c0e7:	stos   BYTE PTR es:[edi],al
  41c0e8:	dec    edi
  41c0e9:	mov    ebp,DWORD PTR [ebx+eax*2-0x489c173c]
  41c0f0:	sti    
  41c0f1:	call   FWORD PTR [edi+0x47096]
  41c0f7:	add    dh,dl
  41c0f9:	mov    esi,0xc2a56e7
  41c0fe:	sti    
  41c0ff:	jne    0x41c0bd
  41c101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c102:	pop    edx
  41c103:	sti    
  41c104:	xor    BYTE PTR [edi-0x4fc60f79],0x71
  41c10b:	add    al,0xc6
  41c10d:	mov    esi,0x424141e7
  41c112:	push   ds
  41c113:	dec    DWORD PTR [edi]
  41c115:	jge    0x41c14e
  41c117:	lock pop ss
  41c119:	mov    dl,0x86
  41c11b:	adc    esp,edi
  41c11d:	repz push es
  41c11f:	mov    ah,BYTE PTR [esi+edi*1+0xe]
  41c123:	mov    bh,BYTE PTR [ecx+0x74883dc1]
  41c129:	(bad)  
  41c12a:	ss enter 0xdac6,0x66
  41c12f:	add    dh,bl
  41c131:	push   es
  41c132:	sti    
  41c133:	ja     0x41c185
  41c135:	stc    
  41c136:	push   ebp
  41c137:	dec    DWORD PTR [ebx+0x7415fb02]
  41c13d:	mov    dh,0x3c
  41c13f:	add    cl,ah
  41c141:	in     eax,dx
  41c142:	cli    
  41c143:	neg    DWORD PTR [edi-0x50]
  41c146:	xlat   BYTE PTR ds:[ebx]
  41c147:	push   esi
  41c148:	adc    cl,cl
  41c14a:	in     al,0xa7
  41c14c:	popf   
  41c14d:	xchg   ebp,eax
  41c14e:	(bad)  
  41c14f:	cld    
  41c150:	pop    ss
  41c151:	ins    DWORD PTR es:[edi],dx
  41c152:	es pop ecx
  41c154:	js     0x41c1c3
  41c156:	cld    
  41c157:	jmp    FWORD PTR [ecx+0x34]
  41c15a:	aad    0x7e
  41c15c:	add    BYTE PTR [eax],al
  41c15e:	stc    
  41c15f:	adc    eax,DWORD PTR [ebx]
  41c161:	add    BYTE PTR [ebp+0x53d9151c],bl
  41c167:	jecxz  0x41c18f
  41c169:	adc    al,0x69
  41c16b:	mov    ch,0xc9
  41c16d:	jb     0x41c0fc
  41c16f:	inc    ebx
  41c170:	fdiv   DWORD PTR ds:0x6de50e2
  41c176:	ins    DWORD PTR es:[edi],dx
  41c177:	dec    eax
  41c178:	push   eax
  41c179:	adc    ch,al
  41c17b:	jg     0x41c149
  41c17d:	cld    
  41c17e:	retf   0xd124
  41c181:	cmp    dh,cl
  41c183:	ja     0x41c1a9
  41c185:	mov    DWORD PTR [eax-0x49],esp
  41c188:	xor    DWORD PTR [ebx-0x338ac10],ecx
  41c18e:	stos   BYTE PTR es:[edi],al
  41c18f:	add    ebx,DWORD PTR [edi+ecx*2-0x63]
  41c193:	stos   DWORD PTR es:[edi],eax
  41c194:	pop    edx
  41c195:	add    ebp,DWORD PTR [eax]
  41c197:	xchg   al,dl
  41c199:	push   edi
  41c19a:	test   DWORD PTR [ecx-0x5e62ffcd],esp
  41c1a0:	ja     0x41c124
  41c1a2:	xor    eax,0xcdfcc6b1
  41c1a7:	xor    al,0xbf
  41c1a9:	dec    edi
  41c1aa:	and    dh,ah
  41c1ac:	out    dx,eax
  41c1ad:	dec    edi
  41c1ae:	jne    0x41c1bf
  41c1b0:	pop    es
  41c1b1:	std    
  41c1b2:	bound  ebp,QWORD PTR [eax+eax*8]
  41c1b5:	psubd  mm5,QWORD PTR [esp+ecx*8]
  41c1b9:	cld    
  41c1ba:	leave  
  41c1bb:	loopne 0x41c184
  41c1bd:	jb     0x41c170
  41c1bf:	and    al,0x3d
  41c1c1:	or     BYTE PTR [eax],al
  41c1c3:	add    dh,ch
  41c1c5:	jo     0x41c21a
  41c1c7:	or     BYTE PTR [edx],bh
  41c1c9:	add    bh,ah
  41c1cb:	daa    
  41c1cc:	mov    es,WORD PTR [edx-0x19]
  41c1cf:	test   BYTE PTR [edx],dh
  41c1d1:	add    ebx,DWORD PTR [esi+eax*1]
  41c1d4:	pop    ss
  41c1d5:	fimul  DWORD PTR [ebp-0x1b554eb1]
  41c1db:	int    0x10
  41c1dd:	rcl    DWORD PTR [esp+ebx*8],0xb2
  41c1e1:	mov    esp,0x8c60c974
  41c1e6:	test   eax,0xf6c3e22d
  41c1eb:	add    ecx,DWORD PTR [esi-0x73]
  41c1ee:	dec    edx
  41c1ef:	test   esi,esi
  41c1f1:	dec    ebp
  41c1f2:	pop    ebp
  41c1f3:	aas    
  41c1f4:	xchg   ebp,eax
  41c1f5:	adc    bh,BYTE PTR [edx-0x26c54884]
  41c1fb:	inc    ebx
  41c1fc:	popf   
  41c1fd:	pop    ecx
  41c1fe:	mov    bl,0x58
  41c200:	sbb    al,0x40
  41c202:	jecxz  0x41c219
  41c204:	dec    ebx
  41c205:	sub    esi,DWORD PTR ds:0x8b34ba02
  41c20b:	pop    ebp
  41c20c:	lahf   
  41c20d:	(bad)  
  41c20e:	fwait
  41c20f:	ret    
  41c210:	push   edx
  41c211:	stos   BYTE PTR es:[edi],al
  41c212:	add    BYTE PTR [ebx*4-0x56adf1fe],dh
  41c219:	mov    ebp,DWORD PTR ds:0x970b08c9
  41c21f:	enter  0x536d,0x81
  41c223:	sti    
  41c224:	jmp    0xe800:0xdc1d8b
  41c22b:	and    esp,edi
  41c22d:	add    ebx,DWORD PTR [ecx]
  41c22f:	ret    
  41c230:	push   edx
  41c231:	or     edi,esi
  41c233:	add    esp,DWORD PTR [esi+eax*2+0x69]
  41c237:	pop    ebx
  41c238:	mov    edi,0xe702eabe
  41c23d:	jbe    0x41c21e
  41c23f:	or     dl,BYTE PTR [edi]
  41c241:	leave  
  41c242:	shl    dh,1
  41c244:	inc    eax
  41c246:	fsubr  DWORD PTR [ebp+0x7fbbaefc]
  41c24c:	jae    0x41c258
  41c24e:	sbb    BYTE PTR ds:0x5bcce908,bh
  41c254:	push   0xffffffe8
  41c256:	outs   dx,BYTE PTR ds:[esi]
  41c257:	mov    DWORD PTR [edx-0x1f],eax
  41c25a:	js     0x41c25d
  41c25c:	push   esi
  41c25d:	xchg   ecx,eax
  41c25e:	in     al,0xbd
  41c260:	cld    
  41c261:	jle    0x41c1ec
  41c263:	inc    ebp
  41c264:	adc    al,0x6c
  41c266:	fidiv  WORD PTR [ebx]
  41c268:	dec    eax
  41c269:	add    esp,DWORD PTR [ecx+0x50f975bd]
  41c26f:	push   es
  41c270:	jmp    0x187fe395
  41c275:	jmp    0xe837b9cd
  41c27a:	lahf   
  41c27b:	ss xor al,0x74
  41c27e:	pop    ebx
  41c27f:	jbe    0x41c2b1
  41c281:	sub    esi,esp
  41c283:	cmp    edx,DWORD PTR [eax-0x17]
  41c286:	sahf   
  41c287:	mov    ebp,0xc639dd75
  41c28c:	cld    
  41c28d:	lahf   
  41c28e:	add    BYTE PTR [eax],al
  41c290:	mov    dh,0x4f
  41c292:	std    
  41c293:	cmp    ch,BYTE PTR [esi+0x2c]
  41c296:	or     BYTE PTR [ecx+0x9e7ce21],dh
  41c29c:	add    BYTE PTR [ebx],al
  41c29e:	add    BYTE PTR [ebp+0x5e],ch
  41c2a1:	xor    edx,DWORD PTR [eax]
  41c2a3:	jb     0x41c281
  41c2a5:	push   cs
  41c2a6:	push   0xffffffe9
  41c2a8:	push   ebp
  41c2a9:	xor    eax,0x589f8308
  41c2ae:	call   0xfd001e49
  41c2b3:	ds mov dh,0xc7
  41c2b6:	shr    ebp,0x9e
  41c2b9:	xor    ebp,0x55
  41c2bc:	or     BYTE PTR [ecx-0x7157fff6],0x3f
  41c2c3:	add    BYTE PTR [edi-0x3d],al
  41c2c6:	or     ecx,0x1587b180
  41c2cc:	pushf  
  41c2cd:	mov    ?,WORD PTR [edi]
  41c2cf:	add    BYTE PTR ds:0x740e7411,bh
  41c2d5:	test   DWORD PTR [esi+0x33488],edi
  41c2db:	cmp    eax,DWORD PTR [ebp+0x54]
  41c2de:	in     eax,dx
  41c2df:	or     DWORD PTR [edi+eax*8-0x41],0xffffff8b
  41c2e4:	stc    
  41c2e5:	push   ss
  41c2e6:	mov    eax,0x50f3f443
  41c2eb:	push   esi
  41c2ec:	xchg   DWORD PTR [ecx-0x5],edi
  41c2ef:	xor    eax,esp
  41c2f1:	out    dx,eax
  41c2f2:	mov    dh,0x88
  41c2f4:	add    BYTE PTR [eax],al
  41c2f6:	hlt    
  41c2f7:	add    al,BYTE PTR [eax]
  41c2f9:	test   DWORD PTR [ebp-0x4e74dbae],edi
  41c2ff:	push   ds
  41c300:	mov    eax,0xd33bc443
  41c305:	sbb    DWORD PTR [esi-0xbf68bfa],0x3
  41c30c:	iret   
  41c30d:	cmp    eax,DWORD PTR [ebp-0x55140bac]
  41c313:	cmp    esi,ebp
  41c315:	imul   ecx,DWORD PTR [ebx-0x4b0002c2],0x9c8bfe03
  41c31f:	push   ebx
  41c320:	sub    eax,0x847f2d41
  41c325:	add    BYTE PTR [edx+eax*1-0x42],dh
  41c329:	sub    ah,cl
  41c32b:	inc    ecx
  41c32c:	add    al,ch
  41c32e:	push   esp
  41c32f:	retf   0xfffa
  41c332:	add    dl,al
  41c334:	jo     0x41c378
  41c336:	out    dx,eax
  41c337:	sbb    ch,BYTE PTR [eax+edi*4]
  41c33a:	popf   
  41c33b:	call   0xbfe2c043
  41c340:	mov    BYTE PTR [eax-0x63],al
  41c343:	xor    al,cl
  41c345:	dec    dx
  41c347:	xor    al,0x1
  41c349:	add    BYTE PTR [ebp-0xad7f858],bl
  41c34f:	call   0xf8bd3757
  41c354:	sub    al,0xe8
  41c356:	std    
  41c357:	(bad)  
  41c35c:	push   ss
  41c35d:	lock pop ds
  41c35f:	adc    al,0xce
  41c361:	jo     0x41c3a4
  41c363:	push   0xffffff9d
  41c365:	ss dec esi
  41c367:	sbb    BYTE PTR [eiz*4-0x7c66a385],dl
  41c36e:	jecxz  0x41c380
  41c370:	pushf  
  41c371:	stos   DWORD PTR es:[edi],eax
  41c372:	xor    DWORD PTR [ebx-0x28241c96],ecx
  41c378:	mov    gs,WORD PTR [edx+0x20435d00]
  41c37e:	rcr    BYTE PTR [edx+0x76],0xe9
  41c382:	cld    
  41c383:	jmp    DWORD PTR [edi]
  41c385:	jno    0x41c377
  41c387:	push   ebp
  41c388:	jb     0x41c342
  41c38a:	lds    esi,FWORD PTR [eax]
  41c38c:	(bad)  [esi]
  41c38e:	mov    esp,0x52209873
  41c393:	or     al,0x26
  41c395:	dec    dl
  41c397:	add    DWORD PTR [edi+0x1e3ff696],ebx
  41c39d:	jmp    0xe8d1:0x995c3910
  41c3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3a5:	nop
  41c3a6:	shr    BYTE PTR [edi],0x9e
  41c3a9:	in     eax,0x79
  41c3ab:	test   DWORD PTR [eax],0x646943ca
  41c3b1:	jnp    0x41c42a
  41c3b3:	jo     0x41c356
  41c3b5:	add    cl,bh
  41c3b7:	jns    0x41c42a
  41c3b9:	mov    esp,0x362280dd
  41c3be:	bnd js 0x41c3c1
  41c3c1:	add    ch,bl
  41c3c3:	adc    ah,BYTE PTR [edx-0x34]
  41c3c6:	lds    edi,FWORD PTR [ebp-0x7074ff0a]
  41c3cc:	add    ebx,DWORD PTR es:[edx]
  41c3cf:	inc    ecx
  41c3d0:	xlat   BYTE PTR ds:[ebx]
  41c3d1:	dec    edi
  41c3d2:	mov    ds:0x1bfc2989,al
  41c3d7:	inc    ebp
  41c3d8:	jmp    0x41c397
  41c3da:	mov    eax,ds:0xc1bd7200
  41c3df:	pop    esp
  41c3e0:	stos   BYTE PTR es:[edi],al
  41c3e1:	cs and al,0x33
  41c3e4:	not    DWORD PTR [eax]
  41c3e6:	fst    QWORD PTR [esp+ebp*2-0x32]
  41c3ea:	mov    ds,WORD PTR [eax]
  41c3ec:	jb     0x41c439
  41c3ee:	cdq    
  41c3ef:	mov    DWORD PTR [edi],ebx
  41c3f1:	clc    
  41c3f2:	and    eax,0x9949afd3
  41c3f7:	aaa    
  41c3f8:	in     al,dx
  41c3f9:	int    0x9c
  41c3fb:	add    bl,dl
  41c3fd:	mul    BYTE PTR [edx-0x6bebd77f]
  41c403:	(bad)  
  41c404:	fcom   st(5)
  41c406:	(bad)  
  41c407:	ret    0x25a5
  41c40a:	fsubr  QWORD PTR [eax]
  41c40c:	daa    
  41c40d:	adc    al,0x9c
  41c40f:	ret    
  41c410:	inc    ecx
  41c411:	into   
  41c412:	and    al,0x4
  41c414:	jg     0x41c418
  41c416:	cs dec ebx
  41c418:	dec    edi
  41c419:	add    esi,DWORD PTR [ecx]
  41c41b:	or     eax,0x87953e72
  41c420:	es push eax
  41c422:	int3   
  41c423:	push   edx
  41c424:	jmp    FWORD PTR [eax+eax*1+0x5bc4100]
  41c42b:	fnstenv [ebp+0x15f774bb]
  41c431:	inc    ebp
  41c432:	add    cl,bl
  41c434:	push   esi
  41c435:	mov    edx,0xbd9ee975
  41c43a:	jne    0x41c42d
  41c43c:	inc    esi
  41c43d:	enter  0xdff4,0x59
  41c441:	mov    edi,0xc076fd75
  41c446:	hlt    
  41c447:	iret   
  41c448:	pop    ecx
  41c449:	mov    edi,0x78690975
  41c44e:	hlt    
  41c44f:	mov    edi,0x175bf59
  41c454:	pop    ecx
  41c455:	jo     0x41c44b
  41c457:	scas   eax,DWORD PTR es:[edi]
  41c458:	pop    ecx
  41c459:	sub    dh,BYTE PTR [eax]
  41c45b:	aas    
  41c45c:	dec    ecx
  41c45d:	popf   
  41c45e:	neg    DWORD PTR [edi-0x14fa39a7]
  41c464:	fst    QWORD PTR [edx+0x53]
  41c467:	aaa    
  41c468:	ror    BYTE PTR [ecx-0x7c1fef09],0xff
  41c46f:	call   0xc17cc612
  41c474:	es inc ebx
  41c476:	add    BYTE PTR [edx-0x3e8b4135],bh
  41c47c:	addr16 out dx,al
  41c47e:	out    0x73,eax
  41c480:	sar    DWORD PTR [ebp+0x326956fc],1
  41c486:	call   0xfcffa5f6
  41c48b:	inc    esi
  41c48c:	add    BYTE PTR [eax],al
  41c48e:	sbb    DWORD PTR [eax+eax*1],edi
  41c491:	jmp    0x3eb66f34
  41c496:	loopne 0x41c456
  41c498:	xor    BYTE PTR [edx],dl
  41c49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c49b:	sub    eax,0x8aad9f10
  41c4a0:	je     0x41c48f
  41c4a2:	popf   
  41c4a3:	scas   eax,DWORD PTR es:[edi]
  41c4a4:	out    0x87,eax
  41c4a6:	popa   
  41c4a7:	mov    esi,0xc01daafc
  41c4ac:	das    
  41c4ad:	add    BYTE PTR [edi-0x1a],bl
  41c4b0:	(bad)  
  41c4b2:	xchg   ecx,eax
  41c4b3:	(bad)  
  41c4b4:	jae    0x41c4c2
  41c4b6:	pushf  
  41c4b7:	in     al,dx
  41c4b8:	repnz inc BYTE PTR [ebx-0x4847d79f]
  41c4bf:	push   es
  41c4c0:	xchg   eax,edi
  41c4c2:	stc    
  41c4c3:	(bad)  
  41c4c4:	jo     0x41c517
  41c4c6:	mov    edi,0x87b82819
  41c4cb:	push   es
  41c4cc:	xchg   eax,ecx
  41c4ce:	in     eax,dx
  41c4cf:	int    0x84
  41c4d1:	add    BYTE PTR [edi+edi*8],dh
  41c4d4:	mov    BYTE PTR [ebp+edx*2+0x3fffaf7],cl
  41c4db:	xor    DWORD PTR ds:0x7d0d8900,0xffffffe9
  41c4e2:	lods   al,BYTE PTR ds:[esi]
  41c4e3:	push   es
  41c4e4:	add    BYTE PTR [eax],al
  41c4e6:	ret    
  41c4e7:	stc    
  41c4e8:	icebp  
  41c4e9:	cmp    ebp,DWORD PTR [edx+edi*8]
  41c4ec:	sub    DWORD PTR [ebp+0x520df923],eax
  41c4f2:	add    BYTE PTR [eax],al
  41c4f4:	sub    al,0x1d
  41c4f6:	repz (bad) 
  41c4f8:	jae    0x41c49f
  41c4fa:	cmp    DWORD PTR [eax],ebp
  41c4fc:	lods   al,BYTE PTR ds:[esi]
  41c4fd:	inc    ebx
  41c4fe:	add    bl,ch
  41c500:	out    0x8b,al
  41c502:	retf   
  41c503:	imul   ebp,DWORD PTR [ebp-0x3b000372],0x7b82480
  41c50d:	jmp    edi
  41c50f:	cmp    eax,0x89fbc08a
  41c514:	shr    DWORD PTR [edx+0x1fc443b4],0x5e
  41c51b:	pop    ebp
  41c51c:	pinsrw mm2,WORD PTR [ecx-0x75],0x90
  41c521:	test   eax,ebp
  41c523:	lods   al,BYTE PTR ds:[esi]
  41c524:	lods   al,BYTE PTR ds:[esi]
  41c525:	(bad)  
  41c526:	call   DWORD PTR [ebp-0x63]
  41c529:	test   ebx,edi
  41c52b:	mov    cl,BYTE PTR [eax-0x70]
  41c52e:	sar    esp,0x8a
  41c531:	fs test al,0x15
  41c534:	shr    DWORD PTR [ebx-0x77df7500],cl
  41c53a:	mov    ebp,0x2a9c72fc
  41c53f:	add    BYTE PTR [ebp+0x0],dh
  41c542:	mov    dl,0xff
  41c544:	bound  esp,QWORD PTR [eax]
  41c546:	ror    DWORD PTR [ecx+eiz*1],0xf7
  41c54a:	add    al,BYTE PTR [eax]
  41c54c:	popf   
  41c54d:	and    al,0xc7
  41c54f:	dec    edi
  41c550:	sbb    BYTE PTR [edi],ah
  41c552:	and    eax,0x507942f9
  41c557:	push   eax
  41c558:	add    BYTE PTR [eax],al
  41c55a:	inc    ebp
  41c55b:	add    al,0xb1
  41c55d:	push   DWORD PTR [edx]
  41c55f:	pop    ds
  41c560:	ror    DWORD PTR [ecx+eiz*1],0x9f
  41c564:	add    eax,DWORD PTR [eax]
  41c566:	popf   
  41c567:	adc    eax,0x37908afd
  41c56c:	pop    ecx
  41c56d:	call   0x45dc62
  41c572:	push   ss
  41c573:	push   0x50
  41c575:	mov    ebx,DWORD PTR [eax]
  41c577:	add    BYTE PTR [ebp-0x70e40504],bh
  41c57d:	adc    BYTE PTR [ecx+0x32],0xc2
  41c581:	cld    
  41c582:	dec    ebp
  41c583:	push   ebx
  41c584:	ret    0x9ded
  41c587:	stos   DWORD PTR es:[edi],eax
  41c588:	xchg   DWORD PTR [edi-0xead856],edi
  41c58e:	shr    BYTE PTR [ebx+0x4269828f],cl
  41c594:	ret    0x6dfc
  41c597:	clc    
  41c598:	pop    ss
  41c599:	cmp    BYTE PTR [edi-0x4a7eff95],cl
  41c59f:	call   0x2ed49b5
  41c5a4:	out    0x3,eax
  41c5a6:	popf   
  41c5a7:	sub    al,0xdb
  41c5a9:	nop
  41c5aa:	bswap  ebx
  41c5ac:	scas   al,BYTE PTR es:[edi]
  41c5ad:	stos   DWORD PTR es:[edi],eax
  41c5ae:	xor    BYTE PTR [edi-0x19],al
  41c5b1:	add    esi,edi
  41c5b3:	div    DWORD PTR [ebx+0x38]
  41c5b6:	dec    ebp
  41c5b7:	pop    edx
  41c5b8:	setbe  bh
  41c5bb:	add    ah,bh
  41c5bd:	sub    eax,0x87b30000
  41c5c2:	jae    0x41c577
  41c5c4:	shr    BYTE PTR [edx+0x29d4f6e],cl
  41c5ca:	cmp    cl,dl
  41c5cc:	fistp  QWORD PTR [ecx+0x70a058e6]
  41c5d2:	and    eax,ecx
  41c5d4:	fiadd  DWORD PTR [edi+0x2cd2cc2b]
  41c5da:	icebp  
  41c5db:	pop    esp
  41c5dc:	es aaa 
  41c5de:	xchg   ebx,eax
  41c5df:	lods   al,BYTE PTR ds:[esi]
  41c5e0:	mov    ds:0xd3c1adfc,eax
  41c5e5:	pop    ebx
  41c5e6:	push   0xffffffbc
  41c5e8:	and    ecx,DWORD PTR [eax]
  41c5ea:	imul   edi,DWORD PTR [edx+0x1a],0xffffffb9
  41c5ee:	out    0x8e,al
  41c5f0:	pop    ds
  41c5f1:	push   esi
  41c5f2:	nop
  41c5f3:	ror    DWORD PTR [ecx],0x52
  41c5f6:	adc    ecx,eax
  41c5f8:	pop    ss
  41c5f9:	aas    
  41c5fa:	aaa    
  41c5fb:	push   esp
  41c5fc:	and    al,0xc1
  41c5fe:	push   ss
  41c5ff:	ror    DWORD PTR [edi-0x62bc27be],0x8d
  41c606:	pop    esi
  41c607:	test   ecx,esp
  41c609:	mov    eax,0x22f87ed
  41c60e:	out    0x3,eax
  41c610:	es jg  0x41c5bd
  41c613:	mov    edx,0x2b96b8c9
  41c618:	cdq    
  41c619:	add    esp,edi
  41c61b:	add    esp,DWORD PTR [esi]
  41c61d:	jg     0x41c61e
  41c61f:	(bad)  
  41c620:	repz mov ch,0xfc
  41c623:	cdq    
  41c624:	add    BYTE PTR [eax],al
  41c626:	mov    cl,0xae
  41c628:	push   ebp
  41c629:	je     0x41c685
  41c62b:	mov    dl,0x4f
  41c62d:	ins    BYTE PTR es:[edi],dx
  41c62e:	loop   0x41c606
  41c630:	dec    edi
  41c631:	push   ss
  41c632:	stos   BYTE PTR es:[edi],al
  41c633:	test   BYTE PTR [esi],0xa9
  41c636:	sahf   
  41c637:	cmp    DWORD PTR [edi-0x7d744183],0xffffff8d
  41c63e:	cmp    esi,DWORD PTR [edi+0x75778ffc]
  41c644:	imul   ebp,esp,0x5d
  41c647:	mov    bh,0x73
  41c649:	std    
  41c64a:	mov    ah,0x81
  41c64c:	aaa    
  41c64d:	push   cs
  41c64e:	xchg   edx,eax
  41c64f:	add    BYTE PTR [edx+0x35],ch
  41c652:	mul    BYTE PTR [eax]
  41c654:	xchg   ecx,esp
  41c656:	and    DWORD PTR [eax+0x1],edi
  41c659:	dec    edi
  41c65a:	inc    esi
  41c65b:	call   0xb76393d2
  41c660:	(bad)  
  41c661:	cmp    eax,DWORD PTR [edi-0x73]
  41c664:	cmp    BYTE PTR ds:0x39fcb6ea,0x12
  41c66b:	test   DWORD PTR [ebx-0x5e],esp
  41c66e:	fnsave [esi+0x541b644f]
  41c674:	cmc    
  41c675:	mov    ds,ebp
  41c677:	inc    edi
  41c678:	call   0xfcfa1356
  41c67d:	fidiv  WORD PTR fs:[ebx]
  41c680:	sbb    ah,BYTE PTR [ebx+eiz*1+0x54]
  41c684:	cmc    
  41c685:	outs   dx,BYTE PTR ds:[esi]
  41c686:	(bad)  [edx+0x7405]
  41c68c:	adc    ebp,DWORD PTR [ebx+edi*8]
  41c68f:	pop    esi
  41c690:	fisttp QWORD PTR [edx+0x1006e152]
  41c696:	add    cl,ch
  41c698:	sahf   
  41c699:	jle    0x41c65a
  41c69b:	add    BYTE PTR [eax],al
  41c69d:	or     esi,edi
  41c69f:	inc    ebp
  41c6a0:	jnp    0x41c625
  41c6a2:	jns    0x41c6a3
  41c6a4:	outs   dx,BYTE PTR ds:[esi]
  41c6a5:	adc    al,BYTE PTR [edx-0x43d84d5]
  41c6ab:	pop    edi
  41c6ac:	fbld   TBYTE PTR [ecx]
  41c6ae:	(bad)
  41c6b1:	add    edx,DWORD PTR [ecx-0x75]
  41c6b4:	cwde   
  41c6b5:	test   al,ch
  41c6b7:	ins    BYTE PTR es:[edi],dx
  41c6b8:	ja     0x41c6bd
  41c6ba:	add    BYTE PTR [esi+0x23],dl
  41c6bd:	in     eax,0x39
  41c6bf:	(bad)  
  41c6c0:	icebp  
  41c6c1:	pop    edi
  41c6c2:	push   esp
  41c6c3:	mov    DWORD PTR [ecx],edx
  41c6c5:	outs   dx,DWORD PTR ds:[esi]
  41c6c6:	xchg   ecx,edi
  41c6c8:	pushf  
  41c6c9:	xchg   BYTE PTR [eax+0x0],cl
  41c6cc:	je     0x41c65a
  41c6ce:	ret    0x9350
  41c6d1:	xchg   ecx,eax
  41c6d2:	adc    DWORD PTR [eax+ebp*2+0x5c50fb77],0x3400ea33
  41c6dd:	mov    bh,BYTE PTR [edi+ecx*1-0x2c540]
  41c6e4:	inc    esp
  41c6e5:	mov    ah,0xf2
  41c6e7:	push   esi
  41c6e8:	fdivr  QWORD PTR [esi-0x4]
  41c6eb:	push   DWORD PTR [ecx+ebp*8]
  41c6ee:	add    DWORD PTR [esi+0x0],edx
  41c6f1:	add    BYTE PTR [esi+0x40067fd],ch
  41c6f7:	add    eax,DWORD PTR [eax-0x73]
  41c6fa:	sbb    DWORD PTR [edx+0x4e1bfff8],0x113415fb
  41c704:	inc    eax
  41c705:	add    BYTE PTR [ebp+0x49],bh
  41c708:	cld    
  41c709:	sub    DWORD PTR [edi+esi*2+0xb],0xffffff84
  41c70e:	ins    DWORD PTR es:[edi],dx
  41c70f:	(bad)  
  41c710:	(bad)  
  41c711:	call   DWORD PTR [edi]
  41c713:	jmp    0x8edf5452
  41c718:	lahf   
  41c719:	std    
  41c71a:	retf   0x5c47
  41c71d:	xor    ah,dh
  41c71f:	push   eax
  41c720:	add    ecx,DWORD PTR [ebp+ebx*4-0x57]
  41c724:	push   edx
  41c725:	mov    DWORD PTR [eax-0x53],ebp
  41c728:	push   cs
  41c729:	inc    eax
  41c72a:	popf   
  41c72b:	push   esi
  41c72c:	inc    edi
  41c72d:	clc    
  41c72e:	dec    ebp
  41c72f:	and    BYTE PTR [esi-0x1],al
  41c732:	call   0xbe30:0x188b55ac
  41c739:	cld    
  41c73a:	mov    bh,BYTE PTR [ebp+edi*4+0x72]
  41c73e:	cmp    ebp,0x305d82d5
  41c744:	cmc    
  41c745:	ss lock mov bl,0x37
  41c749:	sub    eax,0xffb5271e
  41c74e:	out    dx,al
  41c74f:	or     BYTE PTR [ebp+0x17d55172],bh
  41c755:	js     0x41c757
  41c757:	add    BYTE PTR [edi-0x6295fc15],ch
  41c75d:	and    BYTE PTR [ecx+0x50c3d88a],bh
  41c763:	push   ebp
  41c764:	cmp    ch,bh
  41c766:	mov    bh,0xfc
  41c768:	test   al,0x6f
  41c76a:	mov    ebp,0x346c20d5
  41c76f:	pop    es
  41c770:	fidivr WORD PTR fs:[ebx+0x458a172]
  41c777:	jmp    0xfd1ba11b
  41c77c:	nop
  41c77d:	xchg   DWORD PTR [ebp+0x40d9b112],edi
  41c783:	add    dl,bh
  41c785:	scas   al,BYTE PTR es:[edi]
  41c786:	mov    esp,0xf4b88fc
  41c78b:	inc    eax
  41c78c:	popf   
  41c78d:	pop    ds
  41c78e:	ficomp DWORD PTR [eax+0x68]
  41c791:	add    dh,bl
  41c793:	nop
  41c794:	pop    ds
  41c795:	(bad)  
  41c796:	pop    edx
  41c797:	mov    esi,0x2b3f52d1
  41c79c:	cmp    eax,0xd5e4db5
  41c7a1:	add    al,0xa5
  41c7a3:	int3   
  41c7a4:	fisttp QWORD PTR [edi+0x72]
  41c7a7:	scas   eax,DWORD PTR es:[edi]
  41c7a8:	sbb    eax,0x6783bea7
  41c7ad:	xchg   edx,eax
  41c7ae:	jbe    0x41c7f2
  41c7b0:	popf   
  41c7b1:	add    edi,DWORD PTR [edx+0x1689f055]
  41c7b7:	push   cs
  41c7b8:	sbb    edx,DWORD PTR [esi+0x3e6]
  41c7be:	popf   
  41c7bf:	sub    ah,BYTE PTR [edi+0x602dd35]
  41c7c5:	sbb    BYTE PTR [ebp+0x10],cl
  41c7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c9:	add    ebx,DWORD PTR [esi]
  41c7cb:	ret    0x87e5
  41c7ce:	and    eax,DWORD PTR [edx]
  41c7d0:	out    0x3,eax
  41c7d2:	push   ds
  41c7d3:	lods   al,BYTE PTR ds:[esi]
  41c7d4:	pop    edx
  41c7d5:	ds ret 
  41c7d7:	sbb    DWORD PTR [esp+eax*1],0xbd3d3ac9
  41c7de:	scas   eax,DWORD PTR es:[edi]
  41c7df:	cmp    al,0x43
  41c7e2:	popf   
  41c7e3:	xchg   edx,ebp
  41c7e5:	xchg   BYTE PTR [edx+eax*1-0x5532fc19],bl
  41c7ec:	fdiv   QWORD PTR [edi-0x439e4ad8]
  41c7f2:	pop    ds
  41c7f3:	mov    ch,0x1a
  41c7f5:	daa    
  41c7f6:	and    al,0xcd
  41c7f8:	jno    0x41c7c8
  41c7fa:	cli    
  41c7fb:	xchg   ecx,eax
  41c7fc:	iret   
  41c7fd:	mov    esp,0x375c4d09
  41c802:	or     eax,0x2bdae81
  41c807:	hlt    
  41c808:	mov    edi,0x4cf1bc
  41c80d:	arpl   cx,cx
  41c80f:	pushf  
  41c810:	adc    BYTE PTR [ebp+0x23],dh
  41c813:	mov    dh,0x83
  41c815:	inc    edx
  41c816:	xchg   ebp,eax
  41c817:	ds push 0xffffffa9
  41c81a:	and    edi,DWORD PTR [eax]
  41c81c:	cwde   
  41c81d:	mov    cl,0xf6
  41c81f:	cld    
  41c820:	dec    eax
  41c821:	jmp    0xb7dfc826
  41c826:	jb     0x41c861
  41c828:	and    al,0xbe
  41c82a:	dec    edi
  41c82b:	ins    BYTE PTR es:[edi],dx
  41c82c:	pop    edx
  41c82d:	mov    dh,0x4f
  41c82f:	inc    ecx
  41c830:	int3   
  41c831:	in     al,dx
  41c832:	cld    
  41c833:	cs sbb al,0xc1
  41c836:	or     ebp,DWORD PTR [ecx+eiz*2+0x7]
  41c83a:	popf   
  41c83b:	sub    al,BYTE PTR [ecx-0x45]
  41c83e:	aaa    
  41c83f:	push   ss
  41c840:	dec    eax
  41c841:	sbb    al,0x95
  41c844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c845:	mov    ch,0x72
  41c847:	add    eax,0xfefb9c49
  41c84c:	xor    DWORD PTR [edi-0x2fc90a8e],esi
  41c852:	lock out dx,eax
  41c854:	and    DWORD PTR [ebx-0x555eacfc],ebp
  41c85a:	aam    0xdd
  41c85c:	adc    DWORD PTR [edi-0x441bc8a4],esi
  41c862:	shl    BYTE PTR [esp+edx*1],0xa8
  41c866:	adc    ch,0x96
  41c869:	push   ecx
  41c86a:	push   esi
  41c86b:	push   ss
  41c86c:	sub    al,0xdb
  41c86e:	addr16 in eax,0xa6
  41c871:	inc    edx
  41c872:	add    BYTE PTR [edx-0x12],ah
  41c875:	jl     0x41c891
  41c877:	rcl    DWORD PTR [esi-0x4c8fffbe],1
  41c87d:	out    0xb7,al
  41c87f:	sub    ah,BYTE PTR [ecx-0x536aed4b]
  41c885:	inc    edx
  41c886:	add    BYTE PTR [eax],al
  41c888:	add    BYTE PTR [eax],al
  41c88a:	outs   dx,DWORD PTR ds:[esi]
  41c88b:	cmp    al,0x8
  41c88d:	mov    ds:0x4037d8,eax
  41c892:	jg     0x41c8d0
  41c894:	or     al,0xa3
  41c896:	jo     0x41c8c6
  41c898:	inc    eax
  41c899:	add    BYTE PTR [edi+0x3c],cl
  41c89c:	adc    BYTE PTR [ebx+0x4037c4],ah
  41c8a2:	aas    
  41c8a3:	cmp    al,0x14
  41c8a5:	mov    ds:0x4036a8,eax
  41c8aa:	das    
  41c8ab:	cmp    al,0x18
  41c8ad:	push   0xffffffb6
  41c8af:	and    dh,ch
  41c8b1:	mov    bh,0xf7
  41c8b3:	dec    DWORD PTR [eax-0x7aa8a383]
  41c8b9:	xor    eax,0x403788
  41c8be:	lods   al,BYTE PTR ds:[esi]
  41c8bf:	in     al,0x49
  41c8c1:	add    BYTE PTR [edx+ecx*4-0x3d],dh
  41c8c5:	push   eax
  41c8c6:	dec    edx
  41c8c7:	mov    dh,BYTE PTR [ecx]
  41c8c9:	mov    esp,0xff003f56
  41c8ce:	mov    ch,cl
  41c8d0:	mov    cs:0x402f68,eax
  41c8d6:	shl    esp,0xef
  41c8d9:	pop    eax
  41c8da:	ins    BYTE PTR es:[edi],dx
  41c8db:	dec    ebp
  41c8dc:	dec    edx
  41c8dd:	add    BYTE PTR [esp+eax*4-0x3d],al
  41c8e1:	push   eax
  41c8e2:	jae    0x41c895
  41c8e4:	add    BYTE PTR [eax-0x29050189],bh
  41c8ea:	into   
  41c8eb:	mov    dl,0x9f
  41c8ed:	or     BYTE PTR [eax],al
  41c8ef:	add    BYTE PTR [ebx+edi*1],bl
  41c8f2:	add    BYTE PTR [ebp-0x17ab918f],cl
  41c8f8:	sub    al,BYTE PTR [ebp+0x0]
  41c8fb:	add    BYTE PTR [edi-0x1600b341],cl
  41c901:	mov    dl,0xb4
  41c903:	inc    ebx
  41c904:	popf   
  41c905:	test   eax,0xce77d5b9
  41c90a:	adc    esi,DWORD PTR gs:[edx]
  41c90d:	call   0x91b25415
  41c912:	pop    ebx
  41c913:	call   0x45a89e
  41c918:	push   ss
  41c919:	pop    esp
  41c91a:	push   ebx
  41c91b:	std    
  41c91c:	nop
  41c91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91e:	js     0x41c960
  41c920:	popf   
  41c921:	push   esp
  41c922:	shl    BYTE PTR [eax+0x44918d],cl
  41c928:	test   BYTE PTR [esi-0x56a14b54],ah
  41c92e:	sub    al,0x19
  41c930:	je     0x41c908
  41c932:	or     BYTE PTR [eax+0x112ca95e],bh
  41c938:	fs (bad) 
  41c93a:	or     al,0xb5
  41c93c:	ficomp WORD PTR [ebx-0x58a4f6d4]
  41c942:	lahf   
  41c943:	test   al,0xde
  41c945:	fwait
  41c946:	add    edi,DWORD PTR [ecx]
  41c948:	pop    esi
  41c949:	xchg   edi,eax
  41c94a:	inc    BYTE PTR [edi+0x406cfe98]
  41c950:	popf   
  41c951:	nop
  41c952:	push   esi
  41c953:	pop    ecx
  41c954:	add    BYTE PTR [eax],al
  41c956:	push   esp
  41c957:	fimul  WORD PTR [edi]
  41c959:	add    al,cl
  41c95b:	and    al,0xa8
  41c95d:	or     BYTE PTR [ecx+0x58],0x52
  41c961:	push   ebp
  41c962:	(bad)  
  41c963:	out    0x54,eax
  41c965:	call   0xfcf89673
  41c96a:	mov    bh,0xb0
  41c96c:	xchg   DWORD PTR [edx-0xf],edi
  41c96f:	jecxz  0x41c91c
  41c971:	mov    edi,0x6a009be4
  41c976:	jns    0x41c99e
  41c978:	cmp    al,al
  41c97a:	(bad)
  41c97d:	inc    esi
  41c97e:	popf   
  41c97f:	add    ah,bh
  41c981:	mov    cs,WORD PTR [edi-0x66c78dee]
  41c987:	jg     0x41c9b4
  41c989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c98a:	push   edx
  41c98b:	sbb    al,0xe9
  41c98d:	push   ecx
  41c98e:	push   eax
  41c98f:	call   0xc363:0xb1f1a7b3
  41c996:	cdq    
  41c997:	xchg   BYTE PTR [edx+0x1029d05],dl
  41c99d:	or     al,0x6d
  41c99f:	jge    0x41c94c
  41c9a1:	mov    ds:0xab934027,eax
  41c9a6:	adc    bh,dh
  41c9a8:	push   ebp
  41c9a9:	mov    edx,0x80ddc31f
  41c9ae:	loopne 0x41c9b4
  41c9b0:	out    0x3,eax
  41c9b2:	es dec eax
  41c9b4:	dec    ebx
  41c9b5:	push   ebx
  41c9b6:	aaa    
  41c9b7:	add    ebx,DWORD PTR [ebp-0x4affffae]
  41c9bd:	cmp    bh,BYTE PTR fs:[edx-0x30548467]
  41c9c4:	pop    ds
  41c9c5:	ret    0x7fed
  41c9c8:	cmp    BYTE PTR [edi+eiz*8],al
  41c9cb:	add    ebx,DWORD PTR [edi+ebp*1]
  41c9ce:	sti    
  41c9cf:	add    ch,BYTE PTR [eax-0x62fab57a]
  41c9d5:	add    ch,BYTE PTR [eax+eax*2+0x75]
  41c9d9:	push   edx
  41c9da:	add    DWORD PTR [ebx],0x82ff59cb
  41c9e0:	inc    esi
  41c9e1:	mov    cl,0xe5
  41c9e3:	mov    ebx,edi
  41c9e5:	mov    esi,0x8699c463
  41c9ea:	bound  eax,QWORD PTR [esi]
  41c9ec:	popf   
  41c9ed:	add    ch,BYTE PTR [edx+0x37]
  41c9f0:	inc    ebp
  41c9f1:	add    dh,dh
  41c9f3:	jg     0x41ca11
  41c9f5:	add    al,0xe7
  41c9f7:	add    edx,DWORD PTR [esi]
  41c9f9:	inc    edi
  41c9fa:	add    BYTE PTR [ecx-0x56bd8237],bh
  41ca00:	jno    0x41ca5a
  41ca02:	push   ebp
  41ca03:	xchg   ecx,eax
  41ca04:	jne    0x41c9a4
  41ca06:	cld    
  41ca07:	sahf   
  41ca08:	push   ss
  41ca09:	inc    esp
  41ca0a:	fsubr  DWORD PTR [ecx+ebx*8-0x3]
  41ca0e:	add    DWORD PTR [ecx],0xffffffa3
  41ca11:	add    al,BYTE PTR [eax]
  41ca13:	push   0xffffffaa
  41ca15:	mov    dl,0xff
  41ca17:	in     eax,dx
  41ca18:	push   0x4f
  41ca1a:	add    ch,cl
  41ca1c:	sahf   
  41ca1d:	jge    0x41ca61
  41ca1f:	test   DWORD PTR [eax],eax
  41ca21:	add    BYTE PTR [ecx+0x1c],dh
  41ca24:	add    DWORD PTR [edi+0x4d399a6d],edi
  41ca2a:	add    al,0xae
  41ca2c:	xchg   BYTE PTR [esi+edx*8+0x3adebf83],ch
  41ca33:	inc    edi
  41ca34:	add    ch,cl
  41ca36:	sahf   
  41ca37:	and    DWORD PTR [edx+0x35],0xffffffa1
  41ca3b:	sbb    al,0x2a
  41ca3d:	fs push 0xffffff96
  41ca40:	push   edi
  41ca41:	inc    ecx
  41ca42:	dec    edx
  41ca43:	dec    eax
  41ca44:	add    cl,ch
  41ca46:	sbb    eax,DWORD PTR [ebp-0x8]
  41ca49:	mov    ecx,0xbf4fc719
  41ca4e:	inc    ebp
  41ca4f:	xor    eax,0x9e91010c
  41ca54:	cld    
  41ca55:	push   es
  41ca56:	repnz outs dx,DWORD PTR ds:[esi]
  41ca58:	jae    0x41ca04
  41ca5a:	and    DWORD PTR ds:0x8695e9f8,ebp
  41ca60:	push   ss
  41ca61:	jmp    0x41ca01
  41ca63:	add    al,BYTE PTR [ecx+0xcfa1164]
  41ca69:	xchg   bp,ax
  41ca6b:	add    al,0x0
  41ca6d:	jmp    0xd1844460
  41ca72:	and    esi,DWORD PTR ds:0xc34c00a4
  41ca78:	sub    edi,edi
  41ca7a:	jmp    0x41ca04
  41ca7c:	jns    0x41ca72
  41ca7e:	mov    edi,0xf642e4d1
  41ca83:	add    eax,DWORD PTR [eax]
  41ca85:	test   al,0x0
  41ca87:	add    BYTE PTR [esi],al
  41ca89:	sti    
  41ca8a:	xor    cl,0xf5
  41ca8d:	add    eax,DWORD PTR [eax]
  41ca8f:	mov    esi,DWORD PTR [ecx+0x10453562]
  41ca95:	sti    
  41ca96:	and    ebp,0x29000405
  41ca9c:	shl    DWORD PTR [edx-0x19],0xa
  41caa0:	ja     0x41ca9a
  41caa2:	jecxz  0x41caa4
  41caa4:	sti    
  41caa5:	xor    bl,dl
  41caa7:	add    esp,eax
  41caa9:	add    eax,DWORD PTR [edi-0x3d33bb]
  41caaf:	add    DWORD PTR [ebx+eax*1+0x48b00],esi
  41cab6:	push   0x7
  41cab8:	xor    eax,0xffffffdf
  41cabb:	xor    DWORD PTR [ebx+eax*1-0x3ccea200],esi
  41cac2:	jp     0x41caf8
  41cac4:	xor    al,0x6a
  41cac6:	adc    esp,esi
  41cac8:	repz inc esi
  41caca:	add    BYTE PTR [ecx+0xd],bl
  41cacd:	icebp  
  41cace:	fild   DWORD PTR [ebp+0x6a20dfb4]
  41cad4:	push   edx
  41cad5:	mov    BYTE PTR [ecx-0x58],bh
  41cad8:	cmp    al,0x5b
  41cada:	pop    esp
  41cadb:	dec    eax
  41cadc:	je     0x41cae1
  41cade:	xchg   DWORD PTR [ebp-0x78],ecx
  41cae1:	fld    QWORD PTR [ebx+ecx*4]
  41cae4:	sbb    DWORD PTR [ebx+0x11],0xfffffff2
  41cae8:	cmp    dh,BYTE PTR [edi-0x7f]
  41caeb:	rol    BYTE PTR [eax],0x0
  41caee:	icebp  
  41caef:	cld    
  41caf0:	imul   ecx,DWORD PTR [eax],0xe03e609d
  41caf6:	ins    DWORD PTR es:[edi],dx
  41caf7:	cdq    
  41caf8:	add    BYTE PTR [eax],al
  41cafa:	shl    DWORD PTR [edi+edi*1],cl
  41cafd:	lock push ss
  41caff:	fisub  WORD PTR [edi+0x6eea0c]
  41cb05:	(bad)  
  41cb06:	sub    ch,ah
  41cb08:	or     edi,edi
  41cb0a:	sbb    DWORD PTR [ecx+0x2f],ebx
  41cb0d:	add    esi,ebp
  41cb0f:	xchg   edi,eax
  41cb10:	mov    bl,0xfd
  41cb12:	add    ah,BYTE PTR [edx]
  41cb14:	inc    ecx
  41cb15:	or     BYTE PTR [eax],ah
  41cb17:	pop    ecx
  41cb18:	or     BYTE PTR cs:[esi],ah
  41cb1b:	fisubr WORD PTR [edi+0x9a81e6]
  41cb21:	add    BYTE PTR [esi],dl
  41cb23:	xor    DWORD PTR [ecx+0xe80bd42],ecx
  41cb29:	dec    eax
  41cb2a:	popf   
  41cb2b:	cdq    
  41cb2c:	mov    DWORD PTR [edx-0x33],eax
  41cb2f:	xor    ecx,DWORD PTR [ecx+0x8]
  41cb32:	ins    DWORD PTR es:[edi],dx
  41cb33:	pop    eax
  41cb34:	das    
  41cb35:	fcomp  DWORD PTR [esi+0x2e87530f]
  41cb3b:	mov    ch,0xa8
  41cb3d:	aaa    
  41cb3e:	lods   al,BYTE PTR ds:[esi]
  41cb3f:	out    dx,al
  41cb40:	mov    ah,0xfe
  41cb42:	pop    edi
  41cb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb44:	mov    DWORD PTR [edx+0x71],ecx
  41cb47:	sbb    al,0xfb
  41cb49:	sub    al,0x26
  41cb4b:	pop    ecx
  41cb4c:	add    al,0x74
  41cb4e:	xchg   edi,eax
  41cb4f:	xor    BYTE PTR [ecx+0x8],dl
  41cb52:	add    BYTE PTR [eax],al
  41cb54:	pop    ebx
  41cb55:	mov    al,ds:0x597a2d10
  41cb5a:	add    al,0x89
  41cb5c:	fcom   DWORD PTR [edi]
  41cb5e:	push   esp
  41cb5f:	dec    edi
  41cb60:	push   ss
  41cb61:	jno    0x41cb67
  41cb63:	add    esi,edx
  41cb65:	mov    ds:0xaaaae853,eax
  41cb6a:	mov    dl,0xfc
  41cb6c:	pushf  
  41cb6d:	add    ch,BYTE PTR [edx]
  41cb6f:	or     BYTE PTR [edx+eax*2],dl
  41cb72:	jmp    0x41cafe
  41cb74:	aad    0xfa
  41cb76:	inc    eax
  41cb77:	jmp    0x420d2dc
  41cb7c:	xor    BYTE PTR es:[edi+0x256e355b],dl
  41cb83:	add    al,0x9d
  41cb85:	jg     0x41cbb2
  41cb87:	mov    esp,0x53a5796a
  41cb8c:	adc    BYTE PTR [eax],bh
  41cb8e:	div    DWORD PTR [esi-0x24710171]
  41cb94:	hlt    
  41cb95:	lods   eax,DWORD PTR ds:[esi]
  41cb96:	xchg   ebp,eax
  41cb97:	cmp    BYTE PTR [edx],0x37
  41cb9a:	hlt    
  41cb9b:	mov    ch,BYTE PTR [edi-0x56]
  41cb9e:	imul   ebp,DWORD PTR [ebp-0x74e90392],0xffffffd8
  41cba5:	call   0x425f:0xadd9e774
  41cbac:	lods   eax,DWORD PTR ds:[esi]
  41cbad:	jnp    0x41cb88
  41cbaf:	unpcklps xmm1,XMMWORD PTR [eax+0x2b]
  41cbb3:	mov    edx,eax
  41cbb5:	jmp    0x41fc70
  41cbba:	test   eax,0x9eabcb81
  41cbbf:	aaa    
  41cbc0:	in     eax,dx
  41cbc1:	mov    ebp,0xaae80a5d
  41cbc6:	mov    dh,ch
  41cbc8:	lods   eax,DWORD PTR ds:[esi]
  41cbc9:	push   es
  41cbca:	push   ds
  41cbcb:	push   edx
  41cbcc:	cs mov dh,0x91
  41cbcf:	and    DWORD PTR [ebx+0x63fd9dab],0x15ad803d
  41cbd9:	mov    ebp,0x29e70add
  41cbde:	les    edi,FWORD PTR [edi-0x7d]
  41cbe1:	pop    edi
  41cbe2:	rcr    BYTE PTR [edx+0x29d3e9c],cl
  41cbe8:	add    BYTE PTR [ebp+ebx*8-0x56],ah
  41cbec:	dec    edi
  41cbed:	bound  edx,QWORD PTR [ebx]
  41cbef:	cmp    eax,0xafb15cfd
  41cbf4:	jb     0x41cbe3
  41cbf6:	div    BYTE PTR ds:0x7ff0d6ea
  41cbfc:	mov    edi,0x727ba255
  41cc01:	shr    DWORD PTR [edx-0x31108c49],0x7b
  41cc08:	(bad)
  41cc0b:	frndint 
  41cc0d:	scas   al,BYTE PTR es:[edi]
  41cc0e:	es inc edx
  41cc10:	sbb    al,0x70
  41cc12:	int3   
  41cc13:	loop   0x41cb9d
  41cc15:	and    al,0x3d
  41cc17:	js     0x41cc60
  41cc19:	xchg   esi,eax
  41cc1a:	push   ds
  41cc1b:	mov    ah,0xfc
  41cc1d:	mov    es,WORD PTR [eax]
  41cc1f:	add    BYTE PTR [eax+0x15f07502],bl
  41cc25:	cmp    al,cl
  41cc27:	jo     0x41cc7d
  41cc29:	out    0x86,al
  41cc2b:	sub    cl,cl
  41cc2d:	sbb    ch,BYTE PTR [esi]
  41cc2f:	pop    esp
  41cc30:	mov    ah,BYTE PTR [esi+0x57]
  41cc33:	push   ecx
  41cc34:	scas   al,BYTE PTR es:[edi]
  41cc35:	inc    edi
  41cc36:	add    cl,ch
  41cc38:	sbb    eax,DWORD PTR [eax-0x8]
  41cc3b:	mov    ecx,0x4e4fc625
  41cc40:	adc    BYTE PTR [edx],0xfd
  41cc43:	mov    esp,0x53299aa2
  41cc48:	call   0x1a7b54fa
  41cc4d:	mov    dh,0x73
  41cc4f:	add    DWORD PTR [ecx+ebp*1],ebx
  41cc52:	clc    
  41cc53:	jmp    0xaaccad10
  41cc58:	mov    ?,WORD PTR [ebx+ecx*4]
  41cc5b:	stos   BYTE PTR es:[edi],al
  41cc5c:	cmp    BYTE PTR [edi*8-0x3a84c96c],0x0
  41cc64:	mov    WORD PTR [ecx+0x2c63ffe9],gs
  41cc6a:	mov    ebp,0x417b4075
  41cc6f:	clc    
  41cc70:	sub    bl,BYTE PTR [eax+0x34]
  41cc73:	sub    al,0x43
  41cc75:	ja     0x41cbfc
  41cc77:	inc    ebx
  41cc78:	test   al,0x5e
  41cc7a:	push   esi
  41cc7b:	fwait
  41cc7c:	push   ebx
  41cc7d:	ja     0x41cc04
  41cc7f:	inc    ebx
  41cc80:	test   BYTE PTR [ecx+0x41],bh
  41cc83:	or     BYTE PTR [eax],al
  41cc85:	add    BYTE PTR [ebp-0x3416fbbe],ch
  41cc8b:	jne    0x41cc88
  41cc8d:	inc    DWORD PTR [edi-0x5da00449]
  41cc93:	mov    bh,0xbe
  41cc95:	or     al,0xf4
  41cc97:	cmp    al,0x87
  41cc99:	in     al,dx
  41cc9a:	ja     0x41ccff
  41cc9c:	and    BYTE PTR [ebx+0x7f],dl
  41cc9f:	mov    DWORD PTR [edi-0x40fd0bbb],0xe7fae856
  41cca9:	push   0x8bfb7613
  41ccae:	push   esp
  41ccaf:	sub    al,0xf3
  41ccb1:	jne    0x41cc6e
  41ccb3:	mov    dl,0xbc
  41ccb5:	jmp    0x41ccea
  41ccba:	or     ebx,edx
  41ccbc:	sub    DWORD PTR [ebp-0x17ab2c2f],ecx
  41ccc2:	cmp    ch,ch
  41ccc4:	(bad)  
  41ccc5:	push   DWORD PTR [ecx]
  41ccc7:	in     al,dx
  41ccc8:	sti    
  41ccc9:	push   eax
  41ccca:	das    
  41cccb:	outs   dx,BYTE PTR ds:[esi]
  41cccc:	dec    esp
  41cccd:	push   ebx
  41ccce:	rcr    esp,cl
  41ccd0:	pop    es
  41ccd1:	call   0x3d24fb
  41ccd6:	or     eax,0xb485f7ed
  41ccdb:	(bad)  [eax+0x6a]
  41ccde:	popf   
  41ccdf:	lahf   
  41cce0:	test   DWORD PTR [edx-0x7f],eax
  41cce3:	imul   esi,DWORD PTR [ebx+0xe048d72],0x8b000058
  41cced:	pop    ecx
  41ccee:	add    BYTE PTR [ecx+0x4285a561],al
  41ccf4:	inc    ecx
  41ccf5:	mov    DWORD PTR [ebx+0x40a7c512],esi
  41ccfb:	add    BYTE PTR [esi],dl
  41ccfd:	imul   BYTE PTR [ebx+0x52a1d028]
  41cd03:	std    
  41cd04:	test   al,0xa1
  41cd06:	push   esi
  41cd07:	call   0xfcf3a1b2
  41cd0c:	int    0x1e
  41cd0e:	aas    
  41cd0f:	in     al,dx
  41cd10:	ins    BYTE PTR es:[edi],dx
  41cd11:	add    BYTE PTR es:[edx],dh
  41cd14:	ins    BYTE PTR es:[edi],dx
  41cd15:	rcr    DWORD PTR [esi],0xed
  41cd18:	or     esp,DWORD PTR [esi+edi*2+0x3b]
  41cd1c:	lahf   
  41cd1d:	xor    BYTE PTR [edi-0x4],al
  41cd20:	(bad)  
  41cd21:	outs   dx,DWORD PTR ds:[esi]
  41cd22:	(bad)  
  41cd24:	sahf   
  41cd25:	out    0xab,al
  41cd27:	push   eax
  41cd28:	dec    ebp
  41cd29:	or     BYTE PTR ss:[esi],bh
  41cd2c:	dec    ebp
  41cd2d:	xchg   ecx,eax
  41cd2e:	push   esi
  41cd2f:	in     eax,dx
  41cd30:	(bad)  [ebx]
  41cd32:	jg     0x41cd76
  41cd34:	ror    DWORD PTR [eax],1
  41cd36:	push   ds
  41cd37:	add    DWORD PTR [esi-0x4aa9a6e0],ebx
  41cd3d:	loope  0x41ccd9
  41cd3f:	cld    
  41cd40:	mov    edx,0xa772c41d
  41cd45:	jae    0x41ccdf
  41cd47:	(bad)  
  41cd48:	mov    ebx,0xdd30b142
  41cd4d:	dec    edi
  41cd4e:	or     edi,ebp
  41cd50:	add    BYTE PTR [eax],al
  41cd52:	adc    ah,cl
  41cd54:	mov    cl,0x72
  41cd56:	mov    eax,ds:0x7a2b988b
  41cd5b:	add    esp,DWORD PTR ds:0xf34015b3
  41cd61:	jl     0x41cd2d
  41cd63:	jge    0x41cd92
  41cd65:	(bad)  
  41cd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd68:	jmp    0xa58b5ab5
  41cd6d:	dec    esi
  41cd6e:	pop    edx
  41cd6f:	(bad)
  41cd72:	out    dx,al
  41cd73:	jge    0x41cd77
  41cd75:	xchg   DWORD PTR [esi+0x27],eax
  41cd78:	push   0x29
  41cd7a:	and    DWORD PTR [ebx],eax
  41cd7c:	je     0x41cdc6
  41cd7e:	sbb    DWORD PTR [ebx-0x22],edx
  41cd81:	cmp    BYTE PTR [ebp-0x150c0457],ah
  41cd87:	inc    ebp
  41cd88:	out    0x4c,eax
  41cd8a:	sar    BYTE PTR [edi-0x5a],cl
  41cd8d:	cmp    BYTE PTR [ebx+0x29490042],bl
  41cd93:	das    
  41cd94:	jmp    0xa8fe208f
  41cd99:	pop    es
  41cd9a:	popf   
  41cd9b:	push   ecx
  41cd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd9d:	aaa    
  41cd9e:	mov    ecx,0xc1189dfa
  41cda3:	push   0x29
  41cda5:	add    al,0x24
  41cda7:	stos   DWORD PTR es:[edi],eax
  41cda8:	das    
  41cda9:	mov    ecx,ebp
  41cdab:	cs aam 0x83
  41cdae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdaf:	lahf   
  41cdb0:	push   ecx
  41cdb1:	inc    esi
  41cdb2:	popf   
  41cdb3:	add    bh,bl
  41cdb5:	out    0x0,eax
  41cdb7:	add    BYTE PTR [edx-0x364e93c3],bh
  41cdbd:	jle    0x41cde5
  41cdbf:	aaa    
  41cdc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc1:	push   eax
  41cdc2:	popf   
  41cdc3:	push   edx
  41cdc5:	inc    ebp
  41cdc6:	out    0x59,eax
  41cdc8:	mov    al,0xf
  41cdca:	cmp    edx,DWORD PTR ds:0x9b9e025d
  41cdd0:	inc    edi
  41cdd1:	scas   eax,DWORD PTR es:[edi]
  41cdd2:	cmp    eax,0xffa9f0b2
  41cdd7:	fisttp DWORD PTR [esi+0x13]
  41cdda:	inc    eax
  41cddb:	jmp    0xc70649cc
  41cde0:	pop    ebx
  41cde1:	push   edx
  41cde2:	push   esi
  41cde3:	jb     0x41cd97
  41cde5:	fimul  WORD PTR [ebx]
  41cde7:	mov    edi,0x56fc142f
  41cdec:	jecxz  0x41cdf0
  41cdee:	mov    DWORD PTR [ecx],esp
  41cdf0:	rol    DWORD PTR [ebp-0x7bb68b28],1
  41cdf6:	cmc    
  41cdf7:	jge    0x41ce4e
  41cdf9:	icebp  
  41cdfa:	add    al,BYTE PTR [ebx+ebp*8]
  41cdfd:	inc    edx
  41cdfe:	add    BYTE PTR [ebp+0x62],bl
  41ce01:	mov    eax,ds:0xa5efdc00
  41ce06:	sub    DWORD PTR [ecx-0x71ab218b],0xffffff9d
  41ce0d:	push   0x40
  41ce0f:	jmp    0xcd5475d9
  41ce14:	mov    bl,0x42
  41ce16:	add    cl,al
  41ce18:	xor    dh,BYTE PTR [ebp+0xaefc]
  41ce1e:	and    BYTE PTR [ecx-0x6565e204],dh
  41ce24:	adc    BYTE PTR [edi-0x69ab59d4],0x8a
  41ce2b:	mov    dl,0x11
  41ce2d:	sub    DWORD PTR [ecx-0x278da1b9],esp
  41ce33:	dec    ecx
  41ce34:	rcl    DWORD PTR [esi],0x58
  41ce37:	xor    DWORD PTR [edx+eax*8-0x7a],esi
  41ce3b:	sub    dh,BYTE PTR [ecx+esi*4-0x47]
  41ce3f:	sub    al,0x24
  41ce41:	cmc    
  41ce42:	inc    ecx
  41ce43:	inc    ecx
  41ce44:	jo     0x41ce34
  41ce46:	jnp    0x41ce6e
  41ce48:	and    al,0xe5
  41ce4a:	cdq    
  41ce4b:	cmp    bh,BYTE PTR [eax-0x4a]
  41ce4e:	dec    edi
  41ce4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce50:	jae    0x41ce52
  41ce52:	nop
  41ce53:	push   cs
  41ce54:	call   0xfbb6b890
  41ce59:	add    DWORD PTR [esp+ebx*8-0x7a],ecx
  41ce5d:	dec    eax
  41ce5e:	dec    esp
  41ce5f:	xchg   edi,eax
  41ce60:	inc    esp
  41ce61:	je     0x41ce84
  41ce63:	cli    
  41ce64:	jg     0x41cede
  41ce66:	sbb    DWORD PTR [esp+esi*2],eax
  41ce69:	or     eax,0x43b4a81c
  41ce6e:	je     0x41cee3
  41ce70:	adc    eax,esi
  41ce72:	inc    esi
  41ce73:	inc    esp
  41ce74:	add    bl,ch
  41ce76:	pop    esp
  41ce77:	test   BYTE PTR [esp+edi*2+0x44],dh
  41ce7b:	dec    edx
  41ce7c:	je     0x41ce91
  41ce7e:	mov    edi,0x87e4ae
  41ce83:	add    BYTE PTR [eax+0x73],ah
  41ce86:	sti    
  41ce87:	cmp    DWORD PTR [ebx+esi*2],0x70
  41ce8b:	sbb    DWORD PTR [ecx+edi*8-0xb],ebx
  41ce8f:	call   FWORD PTR [ebx-0x79]
  41ce92:	push   cs
  41ce93:	lea    esp,[esi+ebp*8-0x6]
  41ce97:	ss in  al,dx
  41ce99:	sbb    al,0xea
  41ce9b:	dec    BYTE PTR [ebx+0x6]
  41ce9e:	adc    BYTE PTR [esi-0x24],dl
  41cea1:	sbb    ebx,ebp
  41cea3:	(bad)  
  41cea4:	cmp    ecx,DWORD PTR [esp+ecx*1]
  41cea7:	mov    eax,0x15fafec7
  41ceac:	adc    al,0xe
  41ceae:	inc    eax
  41ceaf:	add    BYTE PTR [edx+0x365fc425],bh
  41ceb5:	lods   al,BYTE PTR ds:[esi]
  41ceb6:	cld    
  41ceb7:	mov    al,ch
  41ceb9:	cmp    BYTE PTR [esp+esi*2+0x5486ebef],0xe0
  41cec1:	dec    DWORD PTR [ecx-0x97c3bec]
  41cec7:	or     eax,0xfa8000d0
  41cecc:	popf   
  41cecd:	mov    ds:0xa2aa0735,eax
  41ced2:	jnp    0x41cea3
  41ced4:	push   ebp
  41ced5:	push   ss
  41ced6:	shl    DWORD PTR [edx-0x7d],cl
  41ced9:	fild   DWORD PTR [eax+eax*1]
  41cedc:	call   0x81c26c05
  41cee1:	icebp  
  41cee2:	sub    ebx,0x9929
  41cee8:	add    BYTE PTR [eax],al
  41ceea:	into   
  41ceeb:	outs   dx,DWORD PTR ds:[esi]
  41ceec:	jnp    0x41cf60
  41ceee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceef:	and    al,0x47
  41cef1:	or     dl,dl
  41cef3:	imul   edi,DWORD PTR [ecx+0x43],0x12af9db9
  41cefa:	aad    0xcb
  41cefc:	inc    eax
  41cefd:	add    BYTE PTR [edx*2+0x5f161be4],ah
  41cf04:	loopne 0x41ce8c
  41cf06:	fprem1 
  41cf08:	fisttp DWORD PTR [eax+0x2919fde3]
  41cf0e:	and    al,0xd5
  41cf10:	out    0x2f,eax
  41cf12:	sbb    BYTE PTR ds:0xd1c54fe8,dh
  41cf18:	inc    edx
  41cf19:	inc    esp
  41cf1a:	popf   
  41cf1b:	cdq    
  41cf1c:	jg     0x41cf61
  41cf1e:	mov    ecx,0xe28953f5
  41cf23:	inc    ebp
  41cf24:	dec    esi
  41cf25:	sbb    BYTE PTR [ebp+0x60],ch
  41cf28:	lock and bl,0xac
  41cf2c:	lods   eax,DWORD PTR ds:[esi]
  41cf2d:	xor    eax,0x1fe7ed24
  41cf32:	adc    al,0xd
  41cf34:	call   0xa52fc45c
  41cf39:	cld    
  41cf3a:	ficomp DWORD PTR [ebx]
  41cf3c:	xor    BYTE PTR [eax*4-0x7ebc8467],ah
  41cf43:	mov    ecx,0x2954279
  41cf48:	jb     0x41cf86
  41cf4a:	test   eax,0x13a67b
  41cf4f:	add    BYTE PTR [edx],bl
  41cf51:	ss or  esi,esp
  41cf54:	and    edi,DWORD PTR [esi]
  41cf56:	add    edi,eax
  41cf58:	xchg   ecx,eax
  41cf59:	jle    0x41cef2
  41cf5b:	add    al,0x9d
  41cf5d:	add    ch,BYTE PTR [eax+ecx*2-0x47]
  41cf61:	or     dl,BYTE PTR [edi-0x18e3ad65]
  41cf67:	add    ebx,DWORD PTR [ecx]
  41cf69:	ret    
  41cf6a:	cmc    
  41cf6b:	xchg   DWORD PTR [ecx+0x703e703],edi
  41cf71:	(bad)  [ebx+0x30]
  41cf74:	shl    esi,0xae
  41cf77:	fwait
  41cf78:	jle    0x41cfbc
  41cf7a:	out    0x3,eax
  41cf7c:	and    al,0xbe
  41cf7e:	xchg   esi,eax
  41cf7f:	scas   al,BYTE PTR es:[edi]
  41cf80:	lea    esp,[ebp-0x65806444]
  41cf86:	in     eax,dx
  41cf87:	scas   al,BYTE PTR es:[edi]
  41cf88:	inc    ecx
  41cf89:	in     eax,dx
  41cf8a:	jno    0x41cf46
  41cf8c:	and    eax,DWORD PTR [edx]
  41cf8e:	iret   
  41cf8f:	fnstenv [ecx]
  41cf91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf92:	aad    0x19
  41cf94:	xchg   edi,eax
  41cf95:	ja     0x41cfb9
  41cf97:	call   0x3808225a
  41cf9c:	shr    esi,0xbd
  41cf9f:	sbb    BYTE PTR [ebp+0xc],dh
  41cfa2:	daa    
  41cfa3:	add    al,0x1c
  41cfa5:	mov    edi,0x77b719da
  41cfaa:	and    ch,al
  41cfac:	mov    dh,0x4a
  41cfae:	(bad)  
  41cfaf:	pusha  
  41cfb0:	pop    ebp
  41cfb1:	add    ah,bh
  41cfb3:	add    BYTE PTR [eax],0x0
  41cfb6:	pop    esi
  41cfb7:	fisubr WORD PTR [edx]
  41cfb9:	push   esp
  41cfba:	adc    al,0xbe
  41cfbc:	push   ss
  41cfbd:	scas   eax,DWORD PTR es:[edi]
  41cfbe:	lea    esp,[ebp-0x6326644c]
  41cfc4:	push   DWORD PTR [ebp-0x5]
  41cfc7:	cmp    BYTE PTR [edi+0x4378b4f5],0xd
  41cfce:	adc    DWORD PTR [edx-0x3],0x401086f4
  41cfd5:	jmp    0xe2428d01
  41cfda:	push   es
  41cfdb:	push   0x814b47e8
  41cfe0:	mov    edi,0xffba1aee
  41cfe5:	call   0x5854988
  41cfea:	mov    ecx,0xce2e8952
  41cfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff0:	xor    BYTE PTR [esi],bl
  41cff2:	push   0x3b01569d
  41cff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff8:	cld    
  41cff9:	xlat   BYTE PTR ds:[ebx]
  41cffa:	out    0xba,eax
  41cffc:	xchg   dl,ch
  41cffe:	ss push 0x9a00fefd
  41d004:	dec    eax
  41d005:	xor    DWORD PTR [esi],0x78
  41d008:	jnp    0x41cfcf
  41d00a:	out    dx,al
  41d00b:	dec    edx
  41d00c:	call   0x44ac4c
  41d011:	ins    BYTE PTR es:[edi],dx
  41d012:	in     eax,0xde
  41d014:	pop    edi
  41d015:	cmp    DWORD PTR [edx+0xd2441],ebp
  41d01b:	add    cl,cl
  41d01d:	jnp    0x41cfe3
  41d01f:	sbb    DWORD PTR [edi-0x6a93a32a],esi
  41d025:	loope  0x41d0a6
  41d027:	jmp    0x1429d2ca
  41d02c:	or     DWORD PTR [esi-0x71a9504],esp
  41d032:	sub    BYTE PTR [ecx+0x158924b5],0xf5
  41d039:	hlt    
  41d03a:	mov    BYTE PTR [edi+0x88cd64],bl
  41d040:	mov    BYTE PTR [edx+0x472c5110],bl
  41d046:	jmp    0xbcbf2449
  41d04b:	je     0x41cfe9
  41d04d:	sub    esi,DWORD PTR [ecx+0x24]
  41d050:	mov    eax,0xc78bdc29
  41d055:	sub    DWORD PTR [ecx+0x24],edi
  41d058:	mov    al,ds:0xb8384925
  41d05d:	mov    BYTE PTR [edx],bh
  41d05f:	jmp    0x41d043
  41d061:	push   ebp
  41d062:	add    al,0x48
  41d065:	out    0x86,eax
  41d067:	add    esi,DWORD PTR [edi-0x2]
  41d06a:	imul   eax,DWORD PTR [esp+ebx*2],0x8440747c
  41d071:	push   eax
  41d072:	call   0xfb96709e
  41d077:	mov    eax,DWORD PTR [edx+0x7703ff83]
  41d07d:	stos   DWORD PTR es:[edi],eax
  41d07e:	push   ebx
  41d07f:	inc    DWORD PTR [eax]
  41d081:	add    al,bl
  41d083:	fwait
  41d084:	sub    BYTE PTR [ecx-0x54],dl
  41d087:	or     ebp,esp
  41d089:	(bad)  
  41d08a:	push   ebx
  41d08b:	add    DWORD PTR [edi],esi
  41d08d:	mov    esi,DWORD PTR [ecx-0x73880459]
  41d093:	xchg   al,cl
  41d095:	jmp    0x41d0e9
  41d097:	push   edi
  41d098:	xchg   DWORD PTR [esi],eax
  41d09a:	push   ebx
  41d09b:	in     al,dx
  41d09c:	and    ebp,DWORD PTR [eax]
  41d09e:	mov    ebp,0x78b283e
  41d0a3:	sub    DWORD PTR [esp+ebp*1-0x14],eax
  41d0a7:	sbb    al,ch
  41d0a9:	(bad)  
  41d0aa:	push   ebx
  41d0ab:	or     dl,BYTE PTR [esi+edx*2]
  41d0ae:	fcomp  QWORD PTR ds:0x3043fee9
  41d0b4:	(bad)  
  41d0b5:	jmp    0xeb9d:0x5fbcb206
  41d0bc:	inc    esi
  41d0bd:	mov    eax,edi
  41d0bf:	(bad)  
  41d0c0:	rol    DWORD PTR [ebx],0x9d
  41d0c3:	push   es
  41d0c4:	ja     0x41d0b1
  41d0c6:	push   ds
  41d0c7:	jbe    0x41d0ed
  41d0c9:	push   ecx
  41d0ca:	jae    0x41d0ec
  41d0cc:	ss or  al,0x1d
  41d0cf:	xchg   esp,eax
  41d0d0:	cld    
  41d0d1:	call   DWORD PTR [ebx-0x54]
  41d0d4:	test   eax,esi
  41d0d6:	popf   
  41d0d7:	cdq    
  41d0d8:	add    BYTE PTR [ecx+0x627fa133],cl
  41d0de:	mov    eax,ds:0x99427d99
  41d0e3:	mov    DWORD PTR [esi],edx
  41d0e5:	push   ss
  41d0e6:	add    BYTE PTR [eax],al
  41d0e8:	jmp    0x41d13b
  41d0ea:	mov    bh,0xa0
  41d0ec:	mov    ch,ah
  41d0ee:	ja     0x41d0c7
  41d0f0:	adc    al,0x76
  41d0f2:	test   al,0x82
  41d0f4:	push   esi
  41d0f5:	xchg   BYTE PTR [ebx],al
  41d0f7:	xor    bl,BYTE PTR [ebp+0x12]
  41d0fa:	(bad)  
  41d0fb:	(bad)  
  41d0fc:	push   0xffffff99
  41d0fe:	push   ss
  41d0ff:	sub    dl,BYTE PTR [eax]
  41d101:	jbe    0x41d0d7
  41d103:	push   edi
  41d104:	inc    ebp
  41d105:	ja     0x41d145
  41d107:	add    BYTE PTR [ebp-0x37752771],bl
  41d10d:	(bad)  [eax-0x18]
  41d110:	jmp    0xcfd6:0x28000057
  41d117:	dec    edi
  41d118:	xor    cl,BYTE PTR [esi-0x58]
  41d11b:	push   eax
  41d11c:	xor    eax,0x22fca224
  41d121:	and    BYTE PTR [ecx-0x63f792b2],bh
  41d127:	mov    bh,bl
  41d129:	arpl   WORD PTR [eax-0x5821e7b0],bp
  41d12f:	xchg   BYTE PTR [eax+0x55],bl
  41d132:	fwait
  41d133:	mov    ?,eax
  41d135:	add    DWORD PTR [esi-0x19188d55],esp
  41d13b:	xor    BYTE PTR [ebp-0xa1e80b1],dl
  41d141:	mov    ds:0x180d9f8d,eax
  41d146:	mov    edi,0x1e9e5778
  41d14b:	pushf  
  41d14c:	add    BYTE PTR [eax],al
  41d14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14f:	inc    eax
  41d150:	out    0x3,eax
  41d152:	aaa    
  41d153:	fstp   DWORD PTR [ebx+0x29]
  41d156:	lods   eax,DWORD PTR ds:[esi]
  41d157:	dec    ecx
  41d158:	dec    edi
  41d159:	adc    eax,0x7ee7025f
  41d15e:	loope  0x41d1b1
  41d160:	fs inc ecx
  41d162:	fst    QWORD PTR [ecx+0x5c]
  41d165:	inc    ecx
  41d166:	xor    DWORD PTR [ebx],0x8ff1e6d1
  41d16c:	mov    bl,0x87
  41d16e:	add    BYTE PTR [edx],0x6
  41d171:	stos   DWORD PTR es:[edi],eax
  41d172:	add    DWORD PTR [esi-0x3ce007de],0xd125c09a
  41d17c:	jno    0x41d14a
  41d17e:	fisttp DWORD PTR [edi+0x4817a793]
  41d184:	setl   al
  41d187:	lods   eax,DWORD PTR ds:[esi]
  41d188:	add    al,0xab
  41d18a:	pop    ds
  41d18b:	ret    
  41d18c:	jb     0x41d17c
  41d18e:	ret    0x6e86
  41d191:	inc    ebx
  41d192:	popf   
  41d193:	sub    al,0xe3
  41d195:	dec    esi
  41d196:	es dec eax
  41d198:	fistp  WORD PTR [ebx-0x55235244]
  41d19e:	pop    ds
  41d19f:	ret    
  41d1a0:	pop    edx
  41d1a1:	jecxz  0x41d1b8
  41d1a3:	dec    eax
  41d1a4:	fistp  QWORD PTR [esi+0x67]
  41d1a7:	call   0x7ba1:0xd6115071
  41d1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1af:	repz call FWORD PTR [edi+0x0]
  41d1b3:	add    dh,al
  41d1b5:	adc    al,BYTE PTR [edi+0x5789ad19]
  41d1bb:	and    DWORD PTR [edi+0x6a1d5789],edi
  41d1c1:	inc    esp
  41d1c2:	or     al,0xaf
  41d1c4:	pop    esi
  41d1c5:	push   cs
  41d1c6:	(bad)  
  41d1c7:	jg     0x41d1df
  41d1c9:	mov    ds:0x3c53e9fc,al
  41d1ce:	clc    
  41d1cf:	nop
  41d1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d1:	lahf   
  41d1d2:	cld    
  41d1d3:	jbe    0x41d17b
  41d1d5:	or     dl,BYTE PTR [eax]
  41d1d7:	jmp    0x53ae7c7a
  41d1dc:	add    al,0x9f
  41d1de:	mov    BYTE PTR [ecx+0x1d],al
  41d1e1:	mov    ebx,0x9f8d6d0c
  41d1e6:	cld    
  41d1e7:	dec    esi
  41d1e8:	adc    eax,0xb6980c4d
  41d1ed:	add    dl,BYTE PTR [eax]
  41d1ef:	jmp    0xef825f92
  41d1f4:	out    dx,al
  41d1f5:	lahf   
  41d1f6:	jne    0x41d1d9
  41d1f8:	inc    edi
  41d1f9:	hlt    
  41d1fa:	(bad)  
  41d1fb:	cld    
  41d1fc:	fiadd  WORD PTR [edx]
  41d1fe:	and    DWORD PTR [ecx],0xd2830fa1
  41d204:	aaa    
  41d205:	sahf   
  41d206:	cld    
  41d207:	push   0xffffff85
  41d209:	push   cs
  41d20a:	add    BYTE PTR [edi+eiz*4+0x2c],bh
  41d20e:	add    esp,DWORD PTR [ecx+0x718c2aee]
  41d214:	fiadd  WORD PTR [edx]
  41d216:	push   ecx
  41d217:	add    DWORD PTR [eax],eax
  41d219:	add    BYTE PTR [ebp-0x49190255],dh
  41d21f:	inc    esp
  41d220:	or     al,0xd1
  41d222:	into   
  41d223:	xchg   esp,eax
  41d224:	cld    
  41d225:	(bad)  
  41d226:	mov    al,ds:0x61ce0844
  41d22b:	push   es
  41d22c:	jmp    0x71ad8331
  41d231:	or     al,0x8f
  41d233:	push   edi
  41d234:	fs xchg esp,eax
  41d236:	int3   
  41d237:	inc    esi
  41d238:	add    BYTE PTR [edx+0x1],ch
  41d23b:	dec    edx
  41d23c:	call   0xfbab9c98
  41d241:	pop    ecx
  41d242:	pop    ebp
  41d243:	xchg   esp,esi
  41d245:	(bad)  
  41d246:	sti    
  41d247:	and    dh,dh
  41d249:	(bad)  
  41d24a:	sub    ebp,DWORD PTR [ebx+0x62]
  41d24d:	mov    eax,0x370a090c
  41d253:	(bad)  
  41d254:	inc    BYTE PTR [edx+0x1074044c]
  41d25a:	dec    ebx
  41d25b:	icebp  
  41d25c:	or     ecx,DWORD PTR [ebp-0x72b2fd11]
  41d262:	mov    eax,0xf6e84d0c
  41d267:	jle    0x41d263
  41d269:	inc    DWORD PTR [ebp+0x418b0be1]
  41d26f:	cwde   
  41d270:	ret    0x7c04
  41d273:	cdq    
  41d274:	sti    
  41d275:	inc    ebp
  41d276:	js     0x41d297
  41d278:	inc    edx
  41d279:	or     al,0xc2
  41d27b:	add    bl,BYTE PTR [eax]
  41d27d:	or     al,BYTE PTR [eax]
  41d27f:	add    BYTE PTR [ebx+0x418b0bdf],bh
  41d285:	pushf  
  41d286:	xchg   DWORD PTR [ebp+0x78],ecx
  41d289:	xchg   DWORD PTR [eax+edi*2+0x44],ebx
  41d28d:	sbb    eax,0xdecd7055
  41d292:	jae    0x41d2fa
  41d294:	add    DWORD PTR [esi+0x7c],0x0
  41d298:	xor    al,0x14
  41d29a:	(bad)  
  41d29b:	pop    esi
  41d29c:	sub    cl,BYTE PTR [edi-0x3b]
  41d29f:	ret    0x42c
  41d2a2:	xchg   DWORD PTR [eax+0x40],eax
  41d2a5:	xor    edi,ebx
  41d2a7:	je     0x41d246
  41d2a9:	or     eax,0x91958afc
  41d2ae:	cmp    DWORD PTR [edi-0x15ac4e57],0xb
  41d2b5:	popa   
  41d2b6:	scas   eax,DWORD PTR es:[edi]
  41d2b7:	xlat   BYTE PTR ds:[ebx]
  41d2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2b9:	imul   ebp,DWORD PTR [edi-0x394a529],0x951449ff
  41d2c3:	cmp    cl,0xb5
  41d2c6:	push   ebx
  41d2c7:	push   esi
  41d2c8:	push   ss
  41d2c9:	jnp    0x41d346
  41d2cb:	inc    ebp
  41d2cc:	mov    ch,0x24
  41d2ce:	cmp    DWORD PTR [edx+ebp*2],eax
  41d2d1:	adc    cl,BYTE PTR [esi-0x8]
  41d2d4:	adc    al,0xe7
  41d2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d7:	adc    ah,0xa8
  41d2da:	jl     0x41d35b
  41d2dc:	popf   
  41d2dd:	test   eax,0x9d348100
  41d2e2:	add    BYTE PTR [ebx+0x0],dh
  41d2e5:	add    BYTE PTR [ebp-0x4d],bl
  41d2e8:	out    dx,eax
  41d2e9:	mov    ah,BYTE PTR [eax]
  41d2eb:	dec    ebp
  41d2ec:	dec    ecx
  41d2ed:	call   0x423c14
  41d2f2:	mov    ds:0xed123f20,al
  41d2f7:	mov    al,0x6f
  41d2f9:	inc    ebp
  41d2fa:	lods   eax,DWORD PTR ds:[esi]
  41d2fb:	jns    0x41d378
  41d2fd:	(bad)  
  41d2fe:	int    0xc3
  41d300:	or     BYTE PTR [ebp+0x20],bl
  41d303:	jle    0x41d2b9
  41d305:	out    0xe,eax
  41d307:	into   
  41d308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d309:	cld    
  41d30a:	push   ds
  41d30b:	in     eax,dx
  41d30c:	hlt    
  41d30d:	sbb    BYTE PTR [ebp+0x75],0x11
  41d311:	mov    DWORD PTR [ebx+0x14],esp
  41d314:	leave  
  41d315:	mov    al,ah
  41d317:	popf   
  41d318:	dec    esi
  41d319:	call   0xfce66b38
  41d31e:	and    ecx,ebp
  41d320:	sub    eax,0xaf021e21
  41d325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d326:	xor    eax,0xc40250de
  41d32b:	fisubr DWORD PTR [edi]
  41d32d:	or     BYTE PTR [esi+0x27c561f9],cl
  41d333:	sbb    bl,bh
  41d335:	sbb    esi,DWORD PTR [ecx+0x1c042715]
  41d33b:	ret    0x9bda
  41d33e:	in     al,0xa8
  41d340:	lods   al,BYTE PTR ds:[esi]
  41d341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d342:	pop    ds
  41d343:	ret    0xcb91
  41d346:	adc    eax,0x7b9b45
  41d34b:	add    BYTE PTR [edx-0x2ace69fa],ah
  41d351:	mov    ch,BYTE PTR [ebx]
  41d353:	cld    
  41d354:	fadd   DWORD PTR [ecx-0x1d]
  41d357:	add    al,0x14
  41d359:	inc    ebp
  41d35a:	jnp    0x41d2f8
  41d35c:	pop    edx
  41d35d:	lahf   
  41d35e:	jne    0x41d307
  41d360:	push   ds
  41d361:	ret    0xc4f2
  41d364:	ins    DWORD PTR es:[edi],dx
  41d365:	ret    0x45c5
  41d368:	inc    esp
  41d369:	leave  
  41d36a:	sub    BYTE PTR [eax],al
  41d36c:	popf   
  41d36d:	xor    edi,DWORD PTR [ebp+ecx*2+0x7aef1424]
  41d374:	fadd   DWORD PTR [esi]
  41d376:	jb     0x41d312
  41d378:	pop    ds
  41d379:	ret    
  41d37a:	mov    dl,0xe9
  41d37c:	add    bl,BYTE PTR [ebx]
  41d37e:	rol    DWORD PTR [edi+eax*1],cl
  41d381:	add    DWORD PTR [edx+0x74359430],edx
  41d387:	sub    al,0x85
  41d389:	sub    bh,bh
  41d38b:	xor    ch,bl
  41d38d:	add    ch,BYTE PTR [edx-0x3c]
  41d390:	scas   al,BYTE PTR es:[edi]
  41d391:	stos   BYTE PTR es:[edi],al
  41d392:	mov    ds,WORD PTR [eax+edx*2+0xa80a59e]
  41d399:	sbb    ah,ah
  41d39b:	sbb    BYTE PTR [edx-0x62],0xff
  41d39f:	add    DWORD PTR [ecx-0x491aba75],ebp
  41d3a5:	xor    eax,0xe6e2721c
  41d3aa:	sysenter 
  41d3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ad:	(bad)  
  41d3ae:	out    0xdf,eax
  41d3b0:	add    BYTE PTR [eax],al
  41d3b2:	inc    eax
  41d3b3:	lahf   
  41d3b4:	cld    
  41d3b5:	ficom  WORD PTR gs:[ecx]
  41d3b8:	jecxz  0x41d3b4
  41d3ba:	fidivr WORD PTR [edi]
  41d3bc:	pop    ebx
  41d3bd:	and    bl,bh
  41d3bf:	add    DWORD PTR [eax],eax
  41d3c1:	bound  esp,QWORD PTR [ecx-0x6]
  41d3c4:	xor    BYTE PTR [ecx],0x9d
  41d3c7:	add    dh,BYTE PTR [ecx+ecx*8+0x67]
  41d3cb:	fld    QWORD PTR [ebx]
  41d3cd:	cmp    ah,BYTE PTR [esi+0x39]
  41d3d0:	and    al,0xe1
  41d3d2:	imul   ecx,DWORD PTR [ecx-0x7c933a89],0xffffffbf
  41d3d9:	leave  
  41d3da:	es aam 0xe6
  41d3dd:	jg     0x41d3da
  41d3df:	ds pop ecx
  41d3e1:	ins    BYTE PTR es:[edi],dx
  41d3e2:	ficom  WORD PTR [eax]
  41d3e4:	add    ebp,DWORD PTR [edx-0xa]
  41d3e7:	sahf   
  41d3e8:	call   0xc19f83d8
  41d3ed:	in     eax,0x9e
  41d3ef:	lgs    edi,FWORD PTR [eax-0xec17456]
  41d3f6:	loopne 0x41d454
  41d3f8:	(bad)  
  41d3f9:	jmp    0x2a7d69c
  41d3fe:	push   ebx
  41d3ff:	aas    
  41d400:	jno    0x41d3ee
  41d402:	pop    ds
  41d403:	fwait
  41d404:	arpl   WORD PTR [edx+0x260f8b9d],di
  41d40a:	fadd   QWORD PTR [esi]
  41d40c:	data16 jb 0x41d3d8
  41d40f:	imul   BYTE PTR [ecx-0x18]
  41d412:	mov    eax,0xe14f85
  41d417:	add    BYTE PTR [esi],dh
  41d419:	lods   eax,DWORD PTR ds:[esi]
  41d41a:	add    BYTE PTR [eax],al
  41d41c:	xor    eax,0x77c02f01
  41d421:	xor    al,BYTE PTR [edi+0x1075c7ec]
  41d427:	add    BYTE PTR [ecx],0x62
  41d42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42b:	inc    ebx
  41d42c:	xor    al,0x1
  41d42e:	dec    edi
  41d42f:	push   esi
  41d430:	imul   edx,DWORD PTR [edi+0x1078380],0x0
  41d437:	call   0x3c402a
  41d43c:	js     0x41d404
  41d43e:	or     eax,DWORD PTR [edx+ecx*8-0x78fffffd]
  41d445:	in     eax,0xb
  41d447:	add    bl,dl
  41d449:	sbb    al,0x69
  41d44b:	add    esi,esp
  41d44d:	add    BYTE PTR [edi+0x7d],bh
  41d450:	in     al,0x0
  41d452:	or     ecx,DWORD PTR [esi+0x3a6]
  41d458:	aas    
  41d459:	in     eax,dx
  41d45a:	pop    es
  41d45b:	push   esi
  41d45c:	sub    al,0x41
  41d45e:	cmc    
  41d45f:	inc    DWORD PTR [ebx-0x7e]
  41d462:	mov    esp,0xff31480f
  41d467:	inc    esp
  41d469:	sbb    DWORD PTR [edx],edi
  41d46b:	in     al,dx
  41d46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d46d:	inc    eax
  41d46e:	add    BYTE PTR [ebx+0x4028b0],bh
  41d474:	push   edi
  41d475:	addr16 shr eax,cl
  41d478:	cs jne 0x41d476
  41d47b:	inc    DWORD PTR [eax]
  41d47d:	add    BYTE PTR ds:0xdc83fbdc,cl
  41d483:	or     eax,DWORD PTR gs:[edi+ebx*4+0x5d000001]
  41d48b:	rol    BYTE PTR [eax+eax*1+0x4ff0074],0x4c
  41d493:	sub    BYTE PTR [eax+0x0],al
  41d496:	popf   
  41d497:	sub    BYTE PTR [esp+esi*2],ch
  41d49a:	popf   
  41d49b:	jbe    0x41d497
  41d49d:	jg     0x41d464
  41d49f:	xchg   BYTE PTR [eax],al
  41d4a1:	je     0x41d450
  41d4a3:	pushf  
  41d4a4:	sub    eax,0xf51f3a10
  41d4a9:	out    0xe8,eax
  41d4ab:	xchg   edx,eax
  41d4ac:	mov    ds:0xff0634fc,eax
  41d4b1:	call   FWORD PTR [ebp-0x197736f0]
  41d4b7:	and    al,BYTE PTR [esi-0x14]
  41d4ba:	add    eax,0xafc9413
  41d4bf:	adc    edi,DWORD PTR [esi]
  41d4c1:	lock into 
  41d4c3:	imul   ebx,DWORD PTR [edx],0x755d6087
  41d4c9:	inc    edx
  41d4ca:	add    DWORD PTR [ebx],esp
  41d4cc:	inc    eax
  41d4cd:	push   eax
  41d4ce:	push   ss
  41d4cf:	out    dx,eax
  41d4d0:	mov    bl,0x30
  41d4d2:	jmp    0x41d474
  41d4d4:	mov    edx,0x7bb673
  41d4d9:	dec    DWORD PTR [esi-0x6d]
  41d4dc:	push   eax
  41d4dd:	std    
  41d4de:	push   eax
  41d4df:	jne    0x41d479
  41d4e1:	stc    
  41d4e2:	add    BYTE PTR [eax],al
  41d4e4:	(bad)  
  41d4e5:	sbb    al,0xa4
  41d4e7:	sbb    ebp,0xffffffa4
  41d4ea:	jl     0x41d495
  41d4ec:	lahf   
  41d4ed:	test   eax,0x35608900
  41d4f2:	cwde   
  41d4f3:	scas   al,BYTE PTR es:[edi]
  41d4f4:	push   ss
  41d4f5:	addr16 xchg esp,eax
  41d4f7:	mov    BYTE PTR ds:0x9d00012d,dh
  41d4fd:	lock lds esi,FWORD PTR [ebp-0x1b]
  41d501:	add    al,BYTE PTR [ebp+0x10]
  41d504:	xchg   edx,eax
  41d505:	addr16 inc ebp
  41d507:	adc    dh,cl
  41d509:	aam    0x70
  41d50b:	jg     0x41d4aa
  41d50d:	test   eax,0x2f0fd00
  41d512:	repz fwait
  41d514:	cmp    ah,BYTE PTR [ebx+0x4525a41c]
  41d51a:	add    ebx,edx
  41d51c:	sub    al,BYTE PTR [esi-0x7862fc1a]
  41d522:	stos   DWORD PTR es:[edi],eax
  41d523:	xchg   edi,eax
  41d524:	adc    eax,0x9d03628a
  41d529:	add    dh,BYTE PTR [edx-0x120b504b]
  41d52f:	jb     0x41d4db
  41d531:	add    ah,bh
  41d533:	add    esi,DWORD PTR ds:0x19a2c647
  41d539:	xchg   DWORD PTR [ebx],ebp
  41d53b:	mov    al,0x1b
  41d53d:	push   edx
  41d53e:	data16 add al,0x9d
  41d541:	add    dl,dl
  41d543:	cmc    
  41d544:	adc    eax,0x46682
  41d549:	add    BYTE PTR [ebp-0x596ee7fe],bl
  41d54f:	cli    
  41d550:	pop    ss
  41d551:	xor    al,0xf5
  41d553:	mov    fs,WORD PTR es:[edx-0x4fdc791f]
  41d55a:	lds    edx,FWORD PTR [ebx]
  41d55c:	push   ebp
  41d55d:	adc    BYTE PTR ds:0xc839e73f,dl
  41d563:	hlt    
  41d564:	jbe    0x41d55c
  41d566:	add    BYTE PTR [edx],0x7e
  41d569:	sbb    DWORD PTR [ebp-0x4ff00465],ecx
  41d56f:	adc    al,0xdf
  41d571:	mov    ds:0x479ed68f,al
  41d576:	popf   
  41d577:	xchg   DWORD PTR [esi],edi
  41d579:	xchg   DWORD PTR [esi+0x7],ebx
  41d57c:	ins    BYTE PTR es:[edi],dx
  41d57d:	mov    edi,0x5b68aa1
  41d582:	popf   
  41d583:	add    bl,BYTE PTR [ebp-0x4c71965e]
  41d589:	or     eax,DWORD PTR [ebp+0x3e43ff6a]
  41d58f:	xchg   edi,eax
  41d590:	mov    BYTE PTR [ecx],dh
  41d592:	sbb    BYTE PTR ds:0x973e6afc,bl
  41d598:	or     al,0x65
  41d59a:	(bad)  
  41d59b:	cwde   
  41d59c:	cld    
  41d59d:	jmp    0xea31f2bd
  41d5a2:	sbb    edx,ebp
  41d5a4:	daa    
  41d5a5:	inc    ecx
  41d5a6:	fiadd  DWORD PTR [edx]
  41d5a8:	je     0x41d58d
  41d5aa:	sub    eax,edi
  41d5ac:	data16 and BYTE PTR [eax],al
  41d5af:	add    BYTE PTR [ecx],ah
  41d5b1:	call   0x8ce7:0xc8a3e9fc
  41d5b8:	in     al,dx
  41d5b9:	xchg   esi,eax
  41d5ba:	cld    
  41d5bb:	jo     0x41d622
  41d5bd:	xchg   edx,eax
  41d5be:	sub    BYTE PTR [ecx-0x17298151],0x9e
  41d5c5:	add    cl,BYTE PTR [ecx-0x783d4e52]
  41d5cb:	jmp    0xaf42d86e
  41d5d0:	and    DWORD PTR [ebp-0x14],eax
  41d5d3:	cli    
  41d5d4:	add    al,0x33
  41d5d6:	std    
  41d5d7:	sbb    al,0x8d
  41d5d9:	cmp    DWORD PTR [edi+0x656e86e1],0x29
  41d5e0:	cdq    
  41d5e1:	stos   BYTE PTR es:[edi],al
  41d5e2:	mov    ebp,0x89029e7f
  41d5e7:	adc    DWORD PTR [ecx],0xd807f81d
  41d5ed:	adc    al,0xf4
  41d5ef:	jmp    FWORD PTR [ebx+ecx*4+0x4a]
  41d5f3:	jge    0x41d659
  41d5f5:	cmp    DWORD PTR [esi+0x1fdf121],0xffffffe8
  41d5fc:	sahf   
  41d5fd:	jmp    0x41d5db
  41d5ff:	fst    st(2)
  41d601:	mov    eax,DWORD PTR [edx+0x3d]
  41d604:	sbb    eax,DWORD PTR [ecx+0x5740083]
  41d60a:	add    BYTE PTR [ebx],al
  41d60c:	scas   eax,DWORD PTR es:[edi]
  41d60d:	jb     0x41d5bb
  41d60f:	add    BYTE PTR [ebp+eax*1+0xe800],0xe4
  41d617:	push   0xfffffffa
  41d619:	push   eax
  41d61b:	lds    ecx,FWORD PTR [ebx]
  41d61d:	test   ah,al
  41d61f:	(bad)  
  41d620:	(bad)  
  41d621:	(bad)  
  41d622:	mov    edi,0xbc8bec4a
  41d627:	cmp    esp,0xc58a34ff
  41d62d:	je     0x41d67f
  41d62f:	mov    BYTE PTR [eax+eax*4+0x44],bh
  41d633:	add    eax,0x9d508d00
  41d638:	dec    esi
  41d639:	mov    esp,esp
  41d63b:	gs fwait
  41d63d:	out    0xfa,al
  41d63f:	bound  eax,QWORD PTR [edi+0x4986d845]
  41d645:	or     al,0xc7
  41d647:	dec    edx
  41d649:	push   ecx
  41d64a:	fld    TBYTE PTR ds:0x504007d
  41d650:	call   0xfba5b8c8
  41d655:	mov    eax,ecx
  41d657:	push   edx
  41d658:	std    
  41d659:	xchg   edi,eax
  41d65a:	jo     0x41d65a
  41d65c:	(bad)  
  41d65d:	push   edi
  41d65f:	jp     0x41d5e8
  41d661:	fistp  QWORD PTR [edi]
  41d663:	inc    ecx
  41d664:	lock cmp eax,DWORD PTR [edx]
  41d667:	cli    
  41d668:	and    DWORD PTR [ebx],edi
  41d66a:	cli    
  41d66b:	jecxz  0x41d68a
  41d66d:	push   DWORD PTR [ecx-0x278776f8]
  41d673:	jge    0x41d631
  41d675:	sub    BYTE PTR [ebx+ebp*1],bl
  41d678:	jecxz  0x41d678
  41d67a:	add    BYTE PTR [eax],al
  41d67c:	cmp    eax,DWORD PTR [ecx+0x2000fbc]
  41d682:	std    
  41d683:	call   FWORD PTR [ebp-0x72bd7457]
  41d689:	and    eax,0xd7cef81d
  41d68e:	sub    DWORD PTR [edi],esi
  41d690:	lock int 0xe
  41d693:	xchg   BYTE PTR ds:0xa60000aa,ah
  41d699:	fisttp WORD PTR [esi]
  41d69b:	test   BYTE PTR ds:0x140000aa,bl
  41d6a1:	rol    BYTE PTR [ebx],cl
  41d6a3:	add    BYTE PTR [ebp+0x514ad987],bl
  41d6a9:	outs   dx,DWORD PTR ds:[esi]
  41d6aa:	or     DWORD PTR [eax+0x35],edx
  41d6ad:	lea    ebx,[eax+0x45153afc]
  41d6b3:	lock es push 0xffffffe8
  41d6b7:	mov    al,bl
  41d6b9:	xchg   ebp,eax
  41d6ba:	mov    DWORD PTR [esi],edi
  41d6bc:	lods   eax,DWORD PTR ds:[esi]
  41d6bd:	adc    al,0x46
  41d6bf:	lock es jmp 0x3e89:0xbd6088ef
  41d6c8:	xchg   ecx,eax
  41d6c9:	and    al,0x46
  41d6cb:	in     al,dx
  41d6cc:	adc    al,0xda
  41d6ce:	sbb    ecx,DWORD PTR [ecx+0x3fc6c560]
  41d6d4:	jno    0x41d67f
  41d6d6:	mov    ecx,DWORD PTR [edx-0x7]
  41d6d9:	xchg   esp,eax
  41d6da:	mov    esi,0x886a090c
  41d6df:	add    BYTE PTR ds:[eax],al
  41d6e2:	pop    eax
  41d6e3:	adc    al,0x46
  41d6e5:	lock and al,0xfa
  41d6e8:	jmp    0x41d672
  41d6ea:	pusha  
  41d6eb:	ins    DWORD PTR es:[edi],dx
  41d6ec:	cmp    DWORD PTR [edi-0x87cf7df],0x3e
  41d6f3:	test   al,0x87
  41d6f5:	mov    DWORD PTR [ebp+0x608900a9],ebx
  41d6fb:	sbb    DWORD PTR [eax+0x4f027d6f],esp
  41d701:	mov    ?,WORD PTR [edi-0x68]
  41d704:	pop    ebp
  41d705:	mov    edi,ds
  41d707:	xchg   edx,eax
  41d708:	push   ebp
  41d709:	adc    esi,DWORD PTR [ecx-0x7f599756]
  41d70f:	xchg   edi,eax
  41d710:	jno    0x41d758
  41d712:	ins    DWORD PTR es:[edi],dx
  41d713:	sub    al,0xd3
  41d715:	test   BYTE PTR [edx],dh
  41d717:	out    dx,al
  41d718:	xchg   esi,eax
  41d719:	stos   DWORD PTR es:[edi],eax
  41d71a:	add    esp,DWORD PTR [ecx-0x44845fd4]
  41d720:	and    esp,DWORD PTR [eax-0x505474a7]
  41d726:	dec    eax
  41d727:	inc    ecx
  41d728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d729:	or     edi,0xfffffff7
  41d72c:	rcr    DWORD PTR [edi+ecx*8-0x51363e05],1
  41d733:	sbb    eax,0x21b0c1c2
  41d738:	popf   
  41d739:	sub    ecx,DWORD PTR [edi]
  41d73b:	stos   BYTE PTR es:[edi],al
  41d73c:	in     eax,dx
  41d73d:	lahf   
  41d73e:	and    ebp,ebp
  41d740:	out    dx,al
  41d741:	pop    ebx
  41d742:	pop    ebp
  41d743:	add    al,BYTE PTR [eax+0x3d]
  41d746:	add    BYTE PTR [eax],al
  41d748:	sbb    al,0xcb
  41d74a:	aad    0xab
  41d74c:	pop    eax
  41d74d:	(bad)  [eax+ebx*1-0xfc926a1]
  41d754:	jo     0x41d72b
  41d756:	jno    0x41d79c
  41d758:	lds    ecx,FWORD PTR [ecx+0x3d141427]
  41d75e:	mov    bh,0x8b
  41d760:	mov    ds:0xc95171e6,al
  41d765:	mov    BYTE PTR [edi],ah
  41d767:	sbb    BYTE PTR [edi*1+0x1a3a8d83],ah
  41d76e:	bound  ecx,QWORD PTR [ecx-0x4f]
  41d771:	mov    edi,0x8bba2026
  41d776:	sub    esi,DWORD PTR [eax-0x1a00478b]
  41d77c:	xor    dl,BYTE PTR [edi-0x79]
  41d77f:	sub    BYTE PTR [ecx+ecx*4+0x42],bh
  41d783:	pop    ecx
  41d784:	sub    BYTE PTR [esi],ah
  41d786:	sub    BYTE PTR [edx-0x4c],dh
  41d789:	xchg   edx,eax
  41d78a:	out    0xe7,eax
  41d78c:	dec    ebp
  41d78d:	xchg   edi,eax
  41d78e:	cld    
  41d78f:	inc    eax
  41d790:	int3   
  41d791:	cdq    
  41d792:	cld    
  41d793:	inc    esi
  41d794:	es inc ecx
  41d796:	cld    
  41d797:	push   ecx
  41d798:	test   al,0xa9
  41d79a:	cld    
  41d79b:	ss mov ecx,0x9eaab806
  41d7a1:	xchg   edi,eax
  41d7a2:	adc    bl,BYTE PTR [ecx]
  41d7a4:	dec    edi
  41d7a5:	(bad)  
  41d7a6:	push   DWORD PTR [ecx+0x5e]
  41d7a9:	stos   DWORD PTR es:[edi],eax
  41d7aa:	aaa    
  41d7ab:	add    DWORD PTR [eax],0x405a9a00
  41d7b1:	jmp    0xdc31c8d9
  41d7b6:	fiadd  WORD PTR [edx]
  41d7b8:	push   0xfffffff1
  41d7ba:	xchg   BYTE PTR [edx-0x19],dh
  41d7bd:	test   BYTE PTR [ebx],0x97
  41d7c0:	adc    ah,cl
  41d7c2:	mov    BYTE PTR [edx+0x0],0x40
  41d7c6:	fadd   DWORD PTR [ebx-0x12b82139]
  41d7cc:	push   eax
  41d7cd:	(bad)  
  41d7ce:	add    eax,0x992911a6
  41d7d3:	xchg   edi,eax
  41d7d4:	jb     0x41d7af
  41d7d6:	sbb    edx,DWORD PTR [ecx]
  41d7d8:	or     al,0xbe
  41d7da:	xchg   ebp,eax
  41d7db:	or     bh,ch
  41d7dd:	(bad)  
  41d7df:	dec    ebp
  41d7e0:	inc    eax
  41d7e1:	jmp    0x464d9a05
  41d7e6:	fwait
  41d7e7:	cmp    eax,edi
  41d7e9:	stos   BYTE PTR es:[edi],al
  41d7ea:	daa    
  41d7eb:	ds pusha 
  41d7ed:	cmp    al,BYTE PTR [esp+ebp*1+0x2f811989]
  41d7f4:	mov    DWORD PTR [eax],eax
  41d7f6:	pushf  
  41d7f7:	inc    edx
  41d7f8:	mov    ecx,0x405c0c
  41d7fd:	push   ebp
  41d7fe:	mov    bh,0x6e
  41d800:	daa    
  41d801:	stc    
  41d802:	xor    ebx,DWORD PTR [edx+0x14412ec]
  41d808:	push   ebx
  41d809:	push   esi
  41d80a:	pmaxsw mm4,QWORD PTR [ebx]
  41d80d:	sbb    al,0x4a
  41d80f:	je     0x41d822
  41d811:	clc    
  41d812:	add    BYTE PTR [eax],al
  41d814:	sub    eax,DWORD PTR [eax+0x0]
  41d817:	mov    edi,DWORD PTR [eax+eax*4+0x79070cc0]
  41d81e:	sti    
  41d81f:	je     0x41d830
  41d821:	(bad)  
  41d823:	adc    eax,0x3c93a0
  41d828:	lods   al,BYTE PTR ds:[esi]
  41d829:	stos   BYTE PTR es:[edi],al
  41d82a:	out    0xff,eax
  41d82c:	mov    bl,0x80
  41d82e:	hlt    
  41d82f:	jmp    FWORD PTR [ecx]
  41d831:	nop
  41d832:	data16 or BYTE PTR [ecx+edx*1],bl
  41d836:	in     eax,0xff
  41d838:	mov    ds:0x49ffd808,eax
  41d83d:	or     DWORD PTR [eax+0x54d63443],edi
  41d843:	jmp    0x41d829
  41d845:	in     eax,0xbf
  41d847:	mov    BYTE PTR [ecx+eax*1],al
  41d84a:	add    BYTE PTR [ebx],al
  41d84c:	stc    
  41d84d:	test   al,0xb4
  41d84f:	inc    ebx
  41d850:	hlt    
  41d851:	mov    ecx,0x8a0b75db
  41d856:	push   esp
  41d857:	fs jno 0x41d848
  41d85a:	push   edi
  41d85b:	(bad)  
  41d85c:	jmp    0x6677:0x32e43468
  41d863:	adc    BYTE PTR [edx+0x2e52166],cl
  41d869:	ja     0x41d852
  41d86b:	or     ebp,eax
  41d86d:	fcomp  DWORD PTR [edi-0x1]
  41d870:	popf   
  41d871:	jecxz  0x41d89a
  41d873:	xor    esi,esp
  41d875:	out    0x34,eax
  41d877:	std    
  41d878:	add    BYTE PTR [eax],al
  41d87a:	nop
  41d87b:	sbb    esi,edx
  41d87d:	aas    
  41d87e:	popf   
  41d87f:	hlt    
  41d880:	cmp    eax,0x3668165b
  41d885:	ret    0xab99
  41d888:	das    
  41d889:	push   esi
  41d88a:	cmp    al,BYTE PTR es:[ebp+edi*2-0x297855ff]
  41d892:	adc    DWORD PTR [ebx],ecx
  41d894:	xchg   DWORD PTR [ebp-0xb],eax
  41d897:	lock mov ebx,0xbef0a274
  41d89d:	xchg   bl,bl
  41d89f:	mov    cl,0xa7
  41d8a1:	add    eax,0x657ef1b6
  41d8a6:	cmc    
  41d8a7:	test   eax,0x69150c28
  41d8ac:	add    ch,bh
  41d8ae:	test   al,0xf9
  41d8b0:	icebp  
  41d8b1:	aas    
  41d8b2:	popf   
  41d8b3:	add    BYTE PTR [edx],ch
  41d8b5:	push   ebp
  41d8b6:	add    dh,BYTE PTR [esi+0x749d4058]
  41d8bc:	fwait
  41d8bd:	adc    ch,BYTE PTR ds:0x160040b8
  41d8c3:	adc    al,0x29
  41d8c5:	cmp    DWORD PTR [ebx-0x4b],eax
  41d8c8:	ds icebp 
  41d8ca:	jae    0x41d868
  41d8cc:	adc    al,0x24
  41d8ce:	mov    ch,0x10
  41d8d0:	adc    eax,0x9ad3a524
  41d8d5:	adc    al,BYTE PTR ds:0x26003f6d
  41d8db:	bound  edi,QWORD PTR [edi-0x3d]
  41d8de:	add    BYTE PTR [eax],al
  41d8e0:	mov    eax,ds:0x71fc9828
  41d8e5:	(bad)  
  41d8e6:	xor    edi,ebp
  41d8e8:	mov    BYTE PTR [ebp-0x12],dl
  41d8eb:	aas    
  41d8ec:	popf   
  41d8ed:	add    cl,BYTE PTR [edi-0x626c38da]
  41d8f3:	adc    dl,0x93
  41d8f6:	sbb    esi,ecx
  41d8f8:	xor    al,0xa
  41d8fa:	push   DWORD PTR [ebx-0x3e]
  41d8fd:	xchg   ebx,eax
  41d8fe:	test   DWORD PTR [eax],ecx
  41d900:	aad    0x93
  41d902:	ror    DWORD PTR [ebx],cl
  41d904:	in     eax,0x3f
  41d906:	out    0x3a,eax
  41d908:	dec    edx
  41d909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d90a:	(bad)  [edx]
  41d90c:	pop    ebp
  41d90d:	mov    ah,dh
  41d90f:	add    ebx,DWORD PTR [ebp+0x52ebe3ff]
  41d915:	aas    
  41d916:	out    0xea,eax
  41d918:	jmp    0xd892:0x8f9cb62a
  41d91f:	inc    ebx
  41d920:	popf   
  41d921:	xor    ebx,DWORD PTR [ebp+0x29375d88]
  41d927:	or     ebx,DWORD PTR [ebp+0x1daf622d]
  41d92d:	sahf   
  41d92e:	push   ds
  41d92f:	add    BYTE PTR [esi+0x7e],0xe6
  41d933:	add    ebx,DWORD PTR [ebp-0x174725d1]
  41d939:	sub    ecx,edi
  41d93b:	(bad)  
  41d93c:	aas    
  41d93d:	addr16 test eax,0x387ea003
  41d943:	add    eax,DWORD PTR [eax]
  41d945:	add    BYTE PTR [ebp+0x2f0dff02],bl
  41d94b:	xchg   esp,eax
  41d94c:	in     eax,dx
  41d94d:	xchg   BYTE PTR [edx+0x3],bl
  41d950:	imul   esp,DWORD PTR [ecx+0x12],0xffffff93
  41d954:	out    0xdc,al
  41d956:	addr16 push es
  41d958:	out    0x7f,al
  41d95a:	es add ah,bh
  41d95d:	add    esi,DWORD PTR [edx+0x230ad735]
  41d963:	outs   dx,DWORD PTR ds:[esi]
  41d964:	out    0x3,al
  41d966:	popf   
  41d967:	xchg   edi,edi
  41d969:	cmp    edx,DWORD PTR [ecx+0x2d17e82c]
  41d96f:	xchg   esi,eax
  41d970:	cld    
  41d971:	ins    DWORD PTR es:[edi],dx
  41d972:	fld    DWORD PTR ds:0x2a16b84
  41d978:	add    BYTE PTR [esi-0x6b],dl
  41d97b:	pop    edx
  41d97c:	inc    eax
  41d97d:	jmp    0x95546ef1
  41d982:	stos   DWORD PTR es:[edi],eax
  41d983:	sar    bh,cl
  41d985:	nop
  41d986:	lock fwait
  41d988:	cld    
  41d989:	jbe    0x41d99d
  41d98b:	mov    ds:0xfa7af586,eax
  41d990:	and    BYTE PTR [edi+0x36],0x16
  41d994:	pop    ebp
  41d995:	shr    BYTE PTR [edx+ecx*4],1
  41d998:	(bad)  
  41d999:	call   0x174dd3c
  41d99e:	fld    DWORD PTR [edx+0x0]
  41d9a1:	add    BYTE PTR [edi+0x7ed762e],dh
  41d9a7:	adc    eax,0x6208
  41d9ac:	pop    edi
  41d9ad:	stos   BYTE PTR es:[edi],al
  41d9ae:	inc    ebp
  41d9af:	das    
  41d9b0:	(bad)
  41d9b5:	xor    BYTE PTR [eax-0x69],ch
  41d9b8:	push   eax
  41d9b9:	jnp    0x41da05
  41d9bb:	stc    
  41d9bc:	daa    
  41d9bd:	adc    eax,0x8f5f620c
  41d9c2:	jb     0x41d9b5
  41d9c4:	push   es
  41d9c5:	(bad)  
  41d9c6:	std    
  41d9c7:	inc    BYTE PTR [edi]
  41d9c9:	fwait
  41d9ca:	inc    ebx
  41d9cb:	test   BYTE PTR [ebp-0x572750e],0x3d
  41d9d2:	std    
  41d9d3:	pop    esp
  41d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d5:	(bad)  
  41d9d6:	jb     0x41d9c9
  41d9d8:	mov    eax,ss:0x8927d6ec
  41d9de:	inc    ebx
  41d9df:	add    eax,0xf782f5
  41d9e4:	fcomi  st,st(2)
  41d9e6:	das    
  41d9e7:	mov    eax,eax
  41d9e9:	mov    ds:0x60fae814,al
  41d9ee:	sti    
  41d9ef:	(bad)  
  41d9f0:	aas    
  41d9f1:	enter  0x73e4,0xa5
  41d9f5:	push   es
  41d9f6:	add    BYTE PTR [edi+0x2b],dl
  41d9f9:	xchg   ebx,eax
  41d9fa:	in     al,dx
  41d9fb:	adc    dh,BYTE PTR [esi+eax*1-0x5]
  41d9ff:	jne    0x41d9b5
  41da01:	ins    BYTE PTR es:[edi],dx
  41da02:	jno    0x41da10
  41da04:	sbb    esi,ebx
  41da06:	pop    es
  41da07:	call   ecx
  41da09:	ins    DWORD PTR es:[edi],dx
  41da0a:	mov    bl,0x43
  41da0c:	mov    ah,0x88
  41da0e:	ror    BYTE PTR [eax+eax*1],0x0
  41da12:	stos   DWORD PTR es:[edi],eax
  41da13:	int3   
  41da14:	push   esi
  41da15:	mov    esp,ecx
  41da17:	retf   0xffbe
  41da1a:	inc    edx
  41da1b:	std    
  41da1c:	fld    TBYTE PTR cs:[ebp+0x5b4c23ca]
  41da23:	adc    DWORD PTR [edi],edi
  41da25:	add    al,BYTE PTR [ebp+eax*1+0x3ea04489]
  41da2c:	push   eax
  41da2d:	call   0x41bc25
  41da32:	mov    ebp,0xec2023d1
  41da37:	push   es
  41da38:	je     0x41da5d
  41da3a:	mov    ecx,0x9c4823d1
  41da3f:	sahf   
  41da40:	pop    ebp
  41da41:	add    BYTE PTR [esp+edx*8-0x6],al
  41da45:	adc    eax,0x3c9634
  41da4a:	pop    es
  41da4b:	fstp   QWORD PTR [esi-0x494d418]
  41da51:	adc    eax,0x402cfc
  41da56:	pop    ebp
  41da57:	int    0x7e
  41da59:	enter  0x5eeb,0xb1
  41da5d:	mov    DWORD PTR [ebp+0x2417dfd7],ebx
  41da63:	(bad)  
  41da65:	adc    eax,DWORD PTR [ebp-0x63]
  41da68:	pop    es
  41da69:	test   BYTE PTR [edi-0x66],dh
  41da6c:	add    BYTE PTR [eax],al
  41da6e:	push   ss
  41da6f:	jns    0x41da1c
  41da71:	scas   al,BYTE PTR es:[edi]
  41da72:	les    ebx,FWORD PTR [edi-0x6a]
  41da75:	mov    BYTE PTR [eax],al
  41da77:	add    ch,dh
  41da79:	sbb    eax,0x37210cbb
  41da7e:	add    al,0x0
  41da80:	popf   
  41da81:	sbb    al,0x58
  41da83:	and    esp,DWORD PTR [ecx]
  41da85:	fwait
  41da86:	add    BYTE PTR [eax],al
  41da88:	pushf  
  41da89:	cwde   
  41da8a:	jge    0x41da1c
  41da8c:	popf   
  41da8d:	fwait
  41da8e:	add    BYTE PTR [ecx-0x7f40ef],cl
  41da94:	call   0x799:0x9976839a
  41da9b:	test   BYTE PTR [edi],bl
  41da9d:	call   0x47dc:0x5e100000
  41daa4:	sub    BYTE PTR [esi+0x108523dc],bh
  41daaa:	and    eax,DWORD PTR [eax]
  41daac:	popf   
  41daad:	ror    BYTE PTR [edi+0x23],1
  41dab0:	sbb    eax,0x2500009a
  41dab5:	data16 fcom QWORD PTR [esi+eiz*1]
  41dab9:	push   ds
  41daba:	loopne 0x41da43
  41dabc:	popf   
  41dabd:	cdq    
  41dabe:	add    al,ch
  41dac0:	nop
  41dac1:	jp     0x41dac3
  41dac3:	add    BYTE PTR ds:0x9d10dc7e,bl
  41dac9:	cwde   
  41daca:	jl     0x41dad4
  41dacc:	pushf  
  41dacd:	cdq    
  41dace:	add    BYTE PTR [edx+0x22],ch
  41dad1:	cdq    
  41dad2:	or     al,0x24
  41dad4:	shl    DWORD PTR [eax+0x2ae0fed],1
  41dada:	daa    
  41dadb:	add    al,0x0
  41dadd:	add    BYTE PTR [eax],cl
  41dadf:	pop    ss
  41dae0:	add    ebp,esp
  41dae2:	cli    
  41dae3:	mov    edi,0x528ff999
  41dae9:	loopne 0x41daad
  41daeb:	(bad)  
  41daec:	(bad)  [ebx-0x74]
  41daef:	inc    edx
  41daf0:	out    0x8c,eax
  41daf2:	data16 out 0x2,al
  41daf5:	jg     0x41dad0
  41daf7:	jmp    DWORD PTR [edx-0x5d]
  41dafa:	ror    BYTE PTR [edi-0x19a1791a],cl
  41db00:	lods   al,BYTE PTR cs:[esi]
  41db02:	ss and ah,bh
  41db05:	add    esp,DWORD PTR [esi+edi*1]
  41db08:	test   DWORD PTR [esi+ebx*2+0x5dc1e2e6],0x258ae6fe
  41db13:	cli    
  41db14:	lods   al,BYTE PTR ds:[esi]
  41db15:	add    al,0x9a
  41db17:	add    al,0xa8
  41db19:	mov    bl,al
  41db1b:	sbb    ch,BYTE PTR ds:0x5001f941
  41db21:	arpl   WORD PTR [eax-0x1067aa71],ax
  41db27:	repnz dec ebp
  41db29:	push   cs
  41db2a:	mov    eax,ds:0x68a2529a
  41db2f:	(bad)  
  41db30:	outs   dx,DWORD PTR ds:[esi]
  41db31:	aas    
  41db32:	mov    ecx,0xcfc36bea
  41db37:	jmp    0x3e6:0x827e4f2d
  41db3e:	popf   
  41db3f:	jnp    0x41dba3
  41db41:	fild   WORD PTR [eax]
  41db43:	add    BYTE PTR [edx],bl
  41db45:	add    ah,bh
  41db47:	add    eax,DWORD PTR [ebp+0x79]
  41db4a:	xchg   BYTE PTR [ebx],al
  41db4c:	popf   
  41db4d:	cdq    
  41db4e:	jae    0x41db53
  41db50:	popf   
  41db51:	add    ah,BYTE PTR ds:0xff8f9d04
  41db57:	jl     0x41db53
  41db59:	mov    DWORD PTR ds:[ebp-0x6017c90e],esp
  41db60:	add    al,0x8e
  41db62:	cld    
  41db63:	jo     0x41dbc3
  41db65:	cli    
  41db66:	mov    BYTE PTR [ebp-0x3],ch
  41db69:	push   cs
  41db6a:	add    cl,ch
  41db6c:	sahf   
  41db6d:	xchg   DWORD PTR [eax-0xb],eax
  41db70:	pop    ss
  41db71:	and    DWORD PTR [ebx],0x65
  41db74:	cdq    
  41db75:	add    al,BYTE PTR [eax]
  41db77:	inc    ebx
  41db78:	mov    edi,0x25d94087
  41db7d:	or     esp,DWORD PTR [ecx+eiz*8]
  41db80:	xchg   BYTE PTR [edx+0x29ee12c],bl
  41db86:	push   0xffffffca
  41db88:	and    eax,0x76c1240b
  41db8d:	call   0xa689:0x29ec120
  41db94:	imul   edi,DWORD PTR [ebx+0x43],0xfd3e76cd
  41db9b:	hlt    
  41db9c:	mov    cs,WORD PTR [edi-0x5982f28d]
  41dba2:	cli    
  41dba3:	cmp    eax,0xc698f2a
  41dba8:	add    BYTE PTR [eax],al
  41dbaa:	es mov dh,0x8a
  41dbad:	int    0x52
  41dbaf:	not    BYTE PTR [edi+0x51]
  41dbb2:	mov    al,ds:0x17e8ffca
  41dbb7:	(bad)  
  41dbb8:	dec    edi
  41dbb9:	call   0xcd01:0x9241233
  41dbc0:	(bad)  [esi]
  41dbc2:	xor    bl,BYTE PTR [eiz*1+0x7b790172]
  41dbc9:	int    0x56
  41dbcb:	ss call 0xfcd03dd8
  41dbd1:	add    BYTE PTR [edi+0x23534c4d],ch
  41dbd7:	(bad)  
  41dbd8:	and    esp,DWORD PTR [eax]
  41dbda:	pushf  
  41dbdb:	lods   al,BYTE PTR ds:[esi]
  41dbdc:	fdivr  st,st(7)
  41dbde:	add    edi,DWORD PTR [edi+0x40]
  41dbe1:	and    al,0x8
  41dbe3:	add    BYTE PTR [eax+0x24],0x94
  41dbe7:	add    dh,BYTE PTR [edi+edx*2+0x7f]
  41dbeb:	cmc    
  41dbec:	and    ebx,DWORD PTR [eax]
  41dbee:	jns    0x41dc64
  41dbf0:	jno    0x41dbfa
  41dbf2:	outs   dx,DWORD PTR ds:[esi]
  41dbf3:	jmp    0x4e7:0x96818b0b
  41dbfa:	aas    
  41dbfb:	aad    0x23
  41dbfd:	adc    al,0x71
  41dbff:	int    0x23
  41dc01:	sbb    BYTE PTR [ebp+esi*2+0x79a82470],al
  41dc08:	mov    edi,0x70a298ff
  41dc0d:	push   edi
  41dc0e:	add    BYTE PTR [eax],al
  41dc10:	sbb    al,0x72
  41dc12:	in     al,dx
  41dc13:	jmp    DWORD PTR [ebx]
  41dc15:	jne    0x41dc87
  41dc17:	and    al,0x90
  41dc19:	jg     0x41dc5b
  41dc1b:	and    al,0x6c
  41dc1d:	pop    ecx
  41dc1e:	nop
  41dc1f:	loopne 0x41dc23
  41dc21:	jne    0x41dca2
  41dc23:	jl     0x41dbbd
  41dc25:	xchg   edx,eax
  41dc26:	cld    
  41dc27:	je     0x41dc9c
  41dc29:	test   al,0x79
  41dc2b:	or     al,0x58
  41dc2d:	cmp    eax,DWORD PTR [ebp-0x7a716784]
  41dc33:	pop    esp
  41dc34:	cwde   
  41dc35:	xchg   edx,eax
  41dc36:	out    0xb,eax
  41dc38:	lahf   
  41dc39:	jmp    0x41dc46
  41dc3b:	je     0x41dc87
  41dc3d:	fsubr  st(7),st
  41dc3f:	jae    0x41dc25
  41dc41:	ja     0x41dc3e
  41dc43:	mov    eax,DWORD PTR [eax]
  41dc45:	lods   eax,DWORD PTR ds:[esi]
  41dc46:	adc    al,0x85
  41dc48:	mov    ds:0x9d8d28fd,eax
  41dc4d:	pop    edi
  41dc4e:	fadd   QWORD PTR [edi+0x45]
  41dc51:	lds    esi,FWORD PTR ds:0x3d109d00
  41dc57:	and    al,0x81
  41dc59:	sbb    BYTE PTR [ebx],bl
  41dc5b:	pusha  
  41dc5c:	popf   
  41dc5d:	and    bh,BYTE PTR [ebx]
  41dc5f:	push   0x13dc6726
  41dc64:	adc    al,0xdd
  41dc66:	aaa    
  41dc67:	mov    DWORD PTR [eax-0x75],ebx
  41dc6a:	mov    edx,0x899b8945
  41dc6f:	jge    0x41dcc6
  41dc71:	and    bh,BYTE PTR [esi]
  41dc73:	add    BYTE PTR fs:[eax],al
  41dc76:	hlt    
  41dc77:	fst    DWORD PTR [esp+edi*8+0x24401de2]
  41dc7e:	gs ret 
  41dc80:	cwde   
  41dc81:	pop    ebp
  41dc82:	popf   
  41dc83:	fwait
  41dc84:	xchg   DWORD PTR [ebx-0x7f],eax
  41dc87:	pop    es
  41dc88:	xchg   DWORD PTR [edx-0x53],ecx
  41dc8b:	cwde   
  41dc8c:	rol    DWORD PTR [esi+0x45be0363],0x41
  41dc93:	fwait
  41dc94:	test   eax,0x9283a834
  41dc99:	push   edx
  41dc9a:	push   ss
  41dc9b:	jg     0x41dc20
  41dc9d:	cmp    al,BYTE PTR [eax-0x62ffc0bf]
  41dca3:	call   0x4bd7372e
  41dca8:	sub    esi,DWORD PTR [esp+ecx*1-0x17]
  41dcac:	xchg   edx,eax
  41dcad:	cmp    BYTE PTR [edx-0x52],bl
  41dcb0:	daa    
  41dcb1:	aaa    
  41dcb2:	lock lods eax,DWORD PTR ds:[esi]
  41dcb4:	adc    ah,BYTE PTR [esi+0x75]
  41dcb7:	or     al,0xa6
  41dcb9:	std    
  41dcba:	bound  esp,QWORD PTR [esi]
  41dcbc:	les    esi,FWORD PTR [ebx-0x8]
  41dcbf:	rol    DWORD PTR [eax+edi*4],0xde
  41dcc3:	cdq    
  41dcc4:	xchg   ebx,eax
  41dcc5:	adc    bh,BYTE PTR [ecx]
  41dcc7:	add    edi,ecx
  41dcc9:	inc    ebx
  41dcca:	popf   
  41dccb:	leave  
  41dccc:	fwait
  41dccd:	pop    es
  41dcce:	mov    ebx,0x34401d40
  41dcd3:	pop    es
  41dcd4:	call   0xbab94ae8
  41dcd9:	cwde   
  41dcda:	add    BYTE PTR [eax],al
  41dcdc:	cmp    dh,BYTE PTR [eax+0x4]
  41dcdf:	xchg   ebp,eax
  41dce0:	sbb    DWORD PTR [eax-0x25716b12],eax
  41dce6:	jg     0x41dcab
  41dce8:	and    al,BYTE PTR [ebx]
  41dcea:	out    0x3,eax
  41dcec:	pushf  
  41dced:	add    eax,0x25d5c0f
  41dcf2:	push   0x1b
  41dcf4:	imul   eax,DWORD PTR [edx],0xa6ad854
  41dcfa:	inc    esp
  41dcfb:	add    al,0x6e
  41dcfd:	aam    0x71
  41dcff:	retf   
  41dd00:	ret    0xcd7c
  41dd03:	xchg   esp,eax
  41dd04:	rol    DWORD PTR [ebp-0x6b61f05a],1
  41dd0a:	out    0x2,al
  41dd0c:	dec    esi
  41dd0d:	in     al,0x25
  41dd0f:	fnstenv [edi]
  41dd11:	(bad)  
  41dd12:	adc    dl,BYTE PTR [esi+0x3a]
  41dd15:	dec    BYTE PTR [esi+0x40]
  41dd18:	popf   
  41dd19:	mov    ebx,ebx
  41dd1b:	xchg   ebx,eax
  41dd1c:	mov    WORD PTR [edx-0x19],es
  41dd1f:	xchg   esp,eax
  41dd20:	psllq  mm6,QWORD PTR [ebp+0xe]
  41dd24:	mov    eax,ds:0x8aee6e2f
  41dd29:	push   ebx
  41dd2a:	test   eax,0xeac61c03
  41dd2f:	xor    al,0xdb
  41dd31:	daa    
  41dd32:	mov    ah,0xc0
  41dd34:	cli    
  41dd35:	dec    BYTE PTR [esi-0x247462c0]
  41dd3b:	xchg   ebx,eax
  41dd3c:	mov    WORD PTR [edx-0x19],es
  41dd3f:	rol    BYTE PTR [eax],1
  41dd41:	add    BYTE PTR [edx],bl
  41dd43:	inc    edx
  41dd44:	add    bh,cl
  41dd46:	daa    
  41dd47:	aas    
  41dd48:	stc    
  41dd49:	out    0x15,eax
  41dd4b:	(bad)  
  41dd4c:	call   0x73f3a05e
  41dd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd52:	and    al,0xf9
  41dd54:	and    DWORD PTR [eax],0xffffffa2
  41dd57:	int    0x30
  41dd59:	sub    DWORD PTR [esi],ebx
  41dd5b:	xchg   esp,eax
  41dd5c:	sub    bh,BYTE PTR [ebx+eiz*1+0x19]
  41dd60:	add    ah,BYTE PTR [ecx-0xf7fffbb]
  41dd66:	cli    
  41dd67:	ud0    ebp,DWORD PTR [edx-0x2d0a2e48]
  41dd6e:	or     DWORD PTR [ebx],ecx
  41dd70:	mul    DWORD PTR [eax]
  41dd72:	mov    ?,eax
  41dd74:	push   0xbdfdf3df
  41dd79:	mov    al,ds:0x990e0f1c
  41dd7e:	pop    ebx
  41dd7f:	js     0x41dd8a
  41dd81:	imul   ebp,DWORD PTR [eax],0x25c07adb
  41dd87:	les    esi,FWORD PTR [ebx-0x16]
  41dd8a:	and    eax,ebx
  41dd8c:	(bad)  
  41dd8d:	push   eax
  41dd8e:	fwait
  41dd8f:	push   ss
  41dd90:	add    dl,BYTE PTR [esi+0x373483ef]
  41dd96:	fiadd  DWORD PTR [ecx-0x57716dc]
  41dd9c:	push   edi
  41dd9d:	stos   BYTE PTR es:[edi],al
  41dd9e:	fs jns 0x41dd8c
  41dda1:	push   0x45
  41dda3:	xchg   edx,eax
  41dda4:	add    BYTE PTR [ebp+0x33750000],0x56
  41ddab:	push   ss
  41ddac:	jb     0x41dd35
  41ddae:	and    ah,0x8a
  41ddb1:	mov    DWORD PTR [edi+0xcf282dd],eax
  41ddb7:	imul   edx,DWORD PTR [edx+0x1de9fc89],0x46
  41ddbe:	and    al,0x0
  41ddc0:	jl     0x41dd98
  41ddc2:	out    0xf7,eax
  41ddc4:	shl    DWORD PTR [ebp-0x5],0x84
  41ddc8:	test   BYTE PTR ds:0x6355984,al
  41ddce:	add    BYTE PTR [ebx],dh
  41ddd0:	je     0x41de10
  41ddd2:	test   DWORD PTR [eax+eiz*2-0x5e],eax
  41ddd6:	xor    eax,0x86053045
  41dddb:	cmp    al,0x35
  41dddd:	push   es
  41ddde:	add    BYTE PTR [ebx+0x4011fe39],cl
  41dde4:	add    al,0x9
  41dde6:	dec    edx
  41dde7:	adc    BYTE PTR [ebx],dh
  41dde9:	call   0x7f92dde8
  41ddee:	push   ebx
  41ddef:	call   0x3d79d4
  41ddf4:	outs   dx,DWORD PTR ds:[esi]
  41ddf5:	jne    0x41dd7c
  41ddf7:	je     0x41dd99
  41ddf9:	sahf   
  41ddfa:	aaa    
  41ddfb:	test   ebx,0xf4012281
  41de01:	add    eax,0x5c87d80
  41de06:	je     0x41de16
  41de08:	mov    dl,0x75
  41de0a:	jno    0x41de14
  41de0c:	add    BYTE PTR [eax],al
  41de0e:	fcomp  QWORD PTR [esi-0x7a]
  41de11:	(bad)  
  41de12:	sti    
  41de13:	data16 out 0x0,al
  41de16:	les    eax,FWORD PTR ds:0x6dbc4587
  41de1c:	mov    ebp,0x85751b8a
  41de21:	inc    esp
  41de22:	rcr    BYTE PTR [ecx-0x6e9fbb77],1
  41de28:	dec    esp
  41de29:	mov    DWORD PTR [eax-0x1517eb5f],ecx
  41de2f:	jp     0x41de2c
  41de31:	push   eax
  41de33:	lds    ecx,FWORD PTR [ebx]
  41de35:	test   BYTE PTR [ebx],bl
  41de37:	add    eax,0x1e9d0000
  41de3c:	inc    ebp
  41de3d:	and    al,0xb5
  41de3f:	dec    ebx
  41de40:	xchg   ecx,eax
  41de41:	jae    0x41ddfc
  41de43:	sti    
  41de44:	fwait
  41de45:	shl    BYTE PTR [edx],cl
  41de47:	enter  0x8891,0xe1
  41de4b:	neg    ebx
  41de4d:	xchg   cl,bl
  41de4f:	call   edi
  41de51:	dec    esi
  41de52:	push   ss
  41de53:	rol    esi,cl
  41de55:	inc    ebx
  41de56:	sub    DWORD PTR [edi-0x48267900],0xbfa986cc
  41de60:	inc    eax
  41de61:	call   0xfcd3f024
  41de66:	and    ebx,ebx
  41de68:	add    DWORD PTR [esi+ebx*1+0x7300009b],eax
  41de6f:	loope  0x41deb5
  41de71:	and    al,0x0
  41de73:	add    BYTE PTR [esi+0x52d08f9b],ch
  41de79:	push   ss
  41de7a:	inc    eax
  41de7b:	and    al,0xa9
  41de7d:	and    cl,BYTE PTR [eax+0x24]
  41de80:	lods   eax,DWORD PTR ds:[esi]
  41de81:	and    dl,BYTE PTR [eax]
  41de83:	and    al,0x89
  41de85:	mov    bl,0x6b
  41de87:	(bad)  
  41de88:	fiadd  DWORD PTR [edi+0x7a]
  41de8b:	out    dx,eax
  41de8c:	xchg   esi,eax
  41de8d:	dec    eax
  41de8e:	pop    ss
  41de8f:	popa   
  41de90:	jae    0x41deea
  41de92:	mov    dl,0x88
  41de94:	push   ecx
  41de95:	mov    bh,0xe0
  41de97:	dec    edi
  41de98:	push   ebx
  41de99:	push   0xac692417
  41de9e:	shl    bh,0xfc
  41dea1:	fild   WORD PTR [ebx]
  41dea3:	add    BYTE PTR [ecx],bl
  41dea5:	pop    ebx
  41dea6:	pop    ss
  41dea7:	sbb    al,0x9a
  41dea9:	mov    fs,esp
  41deab:	mov    esi,cr1
  41deae:	in     al,0x33
  41deb0:	jne    0x41de42
  41deb2:	jg     0x41deb0
  41deb4:	add    BYTE PTR [ebx],0x6b
  41deb7:	(bad)  
  41deb8:	out    dx,al
  41deb9:	stc    
  41deba:	pop    ebp
  41debb:	inc    eax
  41debc:	mov    ecx,0xc1482cf2
  41dec1:	mul    edi
  41dec3:	aam    0x61
  41dec5:	mov    BYTE PTR [edx-0x4d785519],ch
  41decb:	out    0xa2,eax
  41decd:	jne    0x41de71
  41decf:	out    0x8e,eax
  41ded1:	call   0x9471:0x8841819b
  41ded8:	add    BYTE PTR [eax],al
  41deda:	jne    0x41de6b
  41dedc:	xchg   ebx,eax
  41dedd:	push   esi
  41dede:	mov    dl,0x6
  41dee0:	retf   
  41dee1:	add    BYTE PTR [ebp-0x516f07f2],bl
  41dee7:	fidivr WORD PTR [esi-0x4121a184]
  41deed:	nop
  41deee:	mov    ds,esi
  41def0:	(bad)  
  41def1:	fwait
  41def2:	or     eax,0x1790ed7e
  41def7:	ud2    
  41def9:	aam    0x2
  41defb:	push   esp
  41defc:	imul   edx,DWORD PTR [eax-0x17a58a0f],0xffffff8e
  41df03:	call   0x17c5:0x87e1877c
  41df0a:	and    edx,0x88f74ace
  41df10:	mov    ch,0x7c
  41df12:	pop    esi
  41df13:	fiadd  WORD PTR [edx]
  41df15:	inc    esp
  41df16:	sbb    bh,BYTE PTR [edi]
  41df18:	retf   
  41df19:	out    0x75,eax
  41df1b:	cmp    eax,0xbd1f00f3
  41df20:	xchg   esp,eax
  41df21:	nop
  41df22:	test   eax,0x8ae81275
  41df27:	call   0x236:0x87998770
  41df2e:	test   bl,bh
  41df30:	jmp    DWORD PTR [ebx-0x4e]
  41df33:	ficom  WORD PTR [edi]
  41df35:	adc    DWORD PTR [ebx+0x5066fc7e],0xbf5c47
  41df3f:	add    cl,al
  41df41:	jns    0x41df25
  41df43:	mov    ah,0x60
  41df45:	idiv   edi
  41df47:	sbb    DWORD PTR [ecx-0x39],ebx
  41df4a:	push   es
  41df4b:	in     al,dx
  41df4c:	dec    di
  41df4e:	inc    eax
  41df4f:	jmp    0xf14c61ad
  41df54:	(bad)  
  41df55:	inc    edx
  41df56:	add    bl,ch
  41df58:	out    dx,al
  41df59:	mov    cl,al
  41df5b:	push   0x3b
  41df5d:	iret   
  41df5e:	mov    bh,0xaa
  41df60:	sahf   
  41df61:	cli    
  41df62:	scas   eax,DWORD PTR es:[edi]
  41df63:	call   0xfdcb13c9
  41df68:	push   ds
  41df69:	mov    ds:0x833a68f7,eax
  41df6e:	(bad)  
  41df6f:	call   0x9e981112
  41df74:	icebp  
  41df75:	test   eax,0x7a2d8350
  41df7a:	out    dx,eax
  41df7b:	out    0x93,al
  41df7d:	(bad)  
  41df7e:	push   eax
  41df7f:	rcl    DWORD PTR [edx-0x5129031d],1
  41df85:	sbb    al,0xfd
  41df87:	into   
  41df88:	mov    edi,edx
  41df8a:	xchg   BYTE PTR ds:0xd150dac5,ch
  41df90:	and    bl,0xfc
  41df93:	mov    dh,0x8e
  41df95:	sbb    al,0xfd
  41df97:	scas   al,BYTE PTR es:[edi]
  41df98:	stos   DWORD PTR es:[edi],eax
  41df99:	test   BYTE PTR [esi+0x50d2c52d],0x91
  41dfa0:	jb     0x41df85
  41dfa2:	cld    
  41dfa3:	xchg   esi,eax
  41dfa4:	add    BYTE PTR [eax],al
  41dfa6:	es xchg edi,eax
  41dfa8:	xchg   BYTE PTR ds:0x36d6b5,dl
  41dfae:	rcr    BYTE PTR [edx-0x2007f0e4],0xfc
  41dfb5:	push   DWORD PTR [edi+esi*4+0x58]
  41dfb9:	and    al,0x5c
  41dfbb:	test   DWORD PTR [eax+0x28557],eax
  41dfc1:	cmp    edx,edi
  41dfc3:	test   DWORD PTR [eax+0x2754f],eax
  41dfc9:	cmp    BYTE PTR [ecx],dh
  41dfcb:	mov    dh,BYTE PTR [eax+0x14]
  41dfce:	jecxz  0x41dfba
  41dfd0:	and    ebp,DWORD PTR [eax]
  41dfd2:	xchg   ebx,eax
  41dfd3:	jmp    0xff6e:0xb5dc2423
  41dfda:	jae    0x41dfe4
  41dfdc:	aad    0xe9
  41dfde:	pop    edx
  41dfdf:	(bad)  
  41dfe0:	(bad)  
  41dfe1:	inc    ecx
  41dfe3:	cmp    ah,BYTE PTR [esp]
  41dfe6:	in     al,0x6
  41dfe8:	pop    ecx
  41dfe9:	and    al,0x44
  41dfeb:	push   0x2e
  41dfed:	mov    WORD PTR [ebx-0x7207788b],fs
  41dff3:	repnz and ebx,DWORD PTR [edi+ecx*2]
  41dff7:	jns    0x41e004
  41dff9:	test   ch,ah
  41dffb:	(bad)  
  41dffc:	(bad)  
  41dffd:	inc    DWORD PTR [ebx]
  41dfff:	out    dx,al
  41e000:	and    ebp,DWORD PTR [eax]
  41e002:	adc    ebp,0xedd35823
  41e008:	and    esp,DWORD PTR [eax+eax*1]
  41e00b:	add    ah,bl
  41e00d:	pop    edi
  41e00e:	gs jmp ebx
  41e011:	or     BYTE PTR [ecx+0x24],dh
  41e014:	cwde   
  41e015:	and    DWORD PTR [eax+0x24],0x44c601ec
  41e01c:	cwde   
  41e01d:	test   esp,edi
  41e01f:	test   BYTE PTR [edx],bl
  41e021:	test   DWORD PTR [eax+0x1c4df],eax
  41e027:	imul   ebx,DWORD PTR [ebp-0x2577399b],0x26
  41e02e:	cmp    DWORD PTR [edx],edi
  41e030:	sahf   
  41e031:	add    al,0x82
  41e033:	mov    edi,0x86c9f199
  41e038:	fnstenv [edi-0x40267918]
  41e03e:	hlt    
  41e03f:	pop    eax
  41e040:	add    edx,DWORD PTR [ecx]
  41e042:	test   DWORD PTR [ebx],esp
  41e044:	daa    
  41e045:	fwait
  41e046:	add    BYTE PTR [eax],al
  41e048:	add    edx,DWORD PTR [edi]
  41e04a:	shl    DWORD PTR [ebx-0x69],0xbd
  41e04e:	retf   
  41e04f:	inc    esp
  41e050:	xchg   ebx,eax
  41e051:	mov    WORD PTR [edi+0x9b9d7f],es
  41e057:	pushw  ss
  41e059:	pop    ss
  41e05a:	in     eax,0x8b
  41e05c:	popf   
  41e05d:	fwait
  41e05e:	add    BYTE PTR [esi+0x20],ah
  41e061:	fist   DWORD PTR [esi+eax*1]
  41e064:	mov    ebx,0xb03845a2
  41e069:	jle    0x41e0ea
  41e06b:	inc    ebx
  41e06c:	jns    0x41e0c1
  41e06e:	xor    BYTE PTR [esi+0x0],ah
  41e071:	add    dl,ah
  41e073:	push   esi
  41e074:	in     al,0x37
  41e076:	shl    BYTE PTR [ecx+0x4fc1437b],cl
  41e07c:	lea    edx,[edx]
  41e07e:	test   DWORD PTR [ecx-0x28dbffc0],ebp
  41e084:	out    0x3b,eax
  41e086:	es (bad) 
  41e089:	cmovge esp,DWORD PTR [edx]
  41e08c:	dec    eax
  41e08d:	and    al,0x59
  41e08f:	mov    ah,0xf4
  41e091:	ja     0x41e042
  41e093:	fild   DWORD PTR [ebx]
  41e095:	mov    esp,DWORD PTR [ecx-0x1]
  41e098:	xlat   BYTE PTR ds:[ebx]
  41e099:	xchg   BYTE PTR [ecx-0x9],ah
  41e09c:	inc    edi
  41e09d:	lds    ebx,FWORD PTR [ecx-0x1]
  41e0a0:	xor    eax,DWORD PTR ds:0x3e7029d
  41e0a6:	(bad)  
  41e0a9:	mov    WORD PTR [ecx+0x7418a67d],gs
  41e0af:	leave  
  41e0b0:	or     ch,al
  41e0b2:	mov    dh,0x10
  41e0b4:	repz js 0x41e09d
  41e0b7:	(bad)  
  41e0b9:	xor    al,0x14
  41e0bb:	mov    ebp,0x8566367e
  41e0c0:	ins    DWORD PTR es:[edi],dx
  41e0c1:	(bad)  
  41e0c2:	out    0xde,al
  41e0c4:	or     bl,bl
  41e0c6:	(bad)  
  41e0c7:	fdivrp st(6),st
  41e0c9:	fsubr  DWORD PTR [ebp-0x7c]
  41e0cc:	mov    ds:0x51d78ae7,al
  41e0d1:	fcomi  st,st(6)
  41e0d3:	(bad)  
  41e0d5:	lds    eax,FWORD PTR [eax]
  41e0d7:	add    dh,bl
  41e0d9:	fsubp  st(5),st
  41e0db:	add    cl,BYTE PTR [eax+0x3f]
  41e0de:	or     ebp,esp
  41e0e0:	adc    eax,0x3be8033f
  41e0e5:	sub    bl,cl
  41e0e7:	repz xor ebp,DWORD PTR [eax]
  41e0ea:	ret    
  41e0eb:	neg    DWORD PTR [ebp+0x7947cf87]
  41e0f1:	jmp    0x8d05:0x836781dd
  41e0f8:	xchg   edx,eax
  41e0f9:	push   es
  41e0fa:	ret    
  41e0fb:	cld    
  41e0fc:	or     dl,BYTE PTR [eax]
  41e0fe:	in     al,0x8c
  41e100:	mov    ds,esi
  41e102:	retf   0x7c9b
  41e105:	ja     0x41e0ec
  41e107:	mov    WORD PTR [ebx+ebp*4],fs
  41e10a:	rol    DWORD PTR [ecx],1
  41e10c:	scas   eax,DWORD PTR es:[edi]
  41e10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e10e:	aad    0x17
  41e110:	mov    ecx,0xf5c2bee6
  41e115:	test   ch,al
  41e117:	jle    0x41e167
  41e119:	fimul  WORD PTR [edx]
  41e11b:	pushf  
  41e11c:	inc    BYTE PTR [eax-0x78ee4a01]
  41e122:	jae    0x41e129
  41e124:	rcr    DWORD PTR [ebx-0x78df3d54],0xfc
  41e12b:	adc    eax,0x4fe7dbb5
  41e130:	cmc    
  41e131:	test   esp,edi
  41e133:	mov    ?,WORD PTR [edx+0x3912fde]
  41e139:	stos   DWORD PTR es:[edi],eax
  41e13a:	std    
  41e13b:	jle    0x41e13d
  41e13d:	add    BYTE PTR [ecx-0x4a5575dc],bh
  41e143:	jns    0x41e127
  41e145:	or     al,0x5f
  41e147:	(bad)  
  41e148:	(bad)  
  41e149:	mov    ebx,0x458097f5
  41e14e:	push   ss
  41e14f:	jp     0x41e10f
  41e151:	push   0x14
  41e153:	push   DWORD PTR [ecx-0x20]
  41e156:	mov    ah,0x83
  41e158:	in     al,0xdf
  41e15a:	and    BYTE PTR [esi-0x2f63ad04],al
  41e160:	mov    edi,0xc127fb62
  41e165:	xchg   esp,eax
  41e166:	mov    ch,0x97
  41e168:	or     BYTE PTR ds:0x6abe7a26,0x14
  41e16f:	push   DWORD PTR [ecx-0x20]
  41e172:	test   BYTE PTR [edx],al
  41e174:	call   0xfcc80c8c
  41e179:	adc    bl,BYTE PTR [eax+edx*8+0x284372bf]
  41e180:	rcr    DWORD PTR [ebx-0x7d00e731],0x9f
  41e187:	call   0x3bc0:0x8626e52d
  41e18e:	mov    al,0x18
  41e190:	add    BYTE PTR [ebx-0x68],al
  41e193:	call   0xc0:0x8626cd21
  41e19a:	mov    cl,0x3
  41e19c:	jmp    0x7db7c224
  41e1a1:	in     al,dx
  41e1a2:	add    BYTE PTR [eax],al
  41e1a4:	loopne 0x41e1a2
  41e1a6:	(bad)  
  41e1a7:	call   DWORD PTR [edi+0x708952d0]
  41e1ad:	mov    ds:0xa278890c,al
  41e1b2:	adc    BYTE PTR [ebx-0x79f502f2],al
  41e1b8:	cmp    BYTE PTR [edi],al
  41e1ba:	add    BYTE PTR [eax],al
  41e1bc:	lods   al,BYTE PTR ds:[esi]
  41e1bd:	out    0xfc,al
  41e1bf:	push   DWORD PTR [esi+ebx*4-0xc]
  41e1c3:	fimul  DWORD PTR [edx]
  41e1c5:	mov    gs,WORD PTR [edi]
  41e1c7:	imul   BYTE PTR [edi]
  41e1c9:	inc    esp
  41e1ca:	jo     0x41e1d7
  41e1cc:	out    dx,eax
  41e1cd:	mov    fs,esp
  41e1cf:	dec    edi
  41e1d0:	std    
  41e1d1:	push   es
  41e1d2:	add    BYTE PTR [ebx+0x32fea1ac],cl
  41e1d8:	(bad)  
  41e1d9:	push   ecx
  41e1da:	fimul  DWORD PTR [edi]
  41e1dc:	shl    ch,0xfc
  41e1df:	push   DWORD PTR [ecx+ebx*2]
  41e1e2:	sti    
  41e1e3:	inc    edi
  41e1e4:	dec    ebp
  41e1e5:	or     ah,BYTE PTR [eax+edx*1]
  41e1e8:	bnd js 0x41e172
  41e1eb:	inc    esp
  41e1ec:	pusha  
  41e1ed:	jb     0x41e1ea
  41e1ef:	xor    al,0xbc
  41e1f1:	sahf   
  41e1f2:	cmp    ecx,0x3b430634
  41e1f8:	sub    BYTE PTR [edx+0xc],ah
  41e1fb:	jb     0x41e1a6
  41e1fd:	sti    
  41e1fe:	inc    edi
  41e1ff:	add    al,0x8f
  41e201:	pop    es
  41e202:	sti    
  41e203:	push   eax
  41e204:	lock cmp BYTE PTR [esp+esi*2+0x1f6e0000],0x18
  41e20d:	call   0x3c921c
  41e212:	mov    edi,0x9d1e7044
  41e217:	mov    al,0x0
  41e219:	hlt    
  41e21a:	sub    DWORD PTR [esp+eax*1],ebp
  41e21d:	xchg   DWORD PTR [ebp+0x77],ecx
  41e220:	jnp    0x41e291
  41e222:	lods   eax,DWORD PTR ds:[esi]
  41e223:	test   al,0x40
  41e225:	or     BYTE PTR [ebp-0x1cffbf1a],bl
  41e22b:	sub    esi,eax
  41e22d:	(bad)  
  41e22e:	and    eax,0xa588ffc4
  41e233:	xchg   esp,eax
  41e234:	add    dh,BYTE PTR [ecx]
  41e236:	mov    ds:0xe6738654,al
  41e23b:	fidivr WORD PTR [esp]
  41e23e:	mov    ch,0x1b
  41e240:	push   ds
  41e241:	add    esi,DWORD PTR [ebp-0x6d]
  41e244:	mov    bl,0xff
  41e246:	sub    bh,0xc0
  41e249:	jae    0x41e1f2
  41e24b:	fidivr WORD PTR [esp]
  41e24e:	xchg   ebp,eax
  41e24f:	mov    ebx,0x6b2a3198
  41e254:	add    BYTE PTR [esi-0x35],dl
  41e257:	rcr    BYTE PTR [eax],0xe1
  41e25a:	cwde   
  41e25b:	lods   eax,DWORD PTR ds:[esi]
  41e25c:	add    BYTE PTR [esi-0x15],dl
  41e25f:	enter  0x4fef,0xaf
  41e263:	stos   DWORD PTR es:[edi],eax
  41e264:	add    BYTE PTR [ecx],bh
  41e266:	pop    ebx
  41e267:	mov    esi,0x45a288f2
  41e26c:	add    ecx,DWORD PTR [ecx+0x28620000]
  41e272:	icebp  
  41e273:	mov    BYTE PTR [edx+0x52890395],ah
  41e279:	sbb    cl,dh
  41e27b:	call   0x12cb9e2d
  41e280:	cmp    eax,0x4d00405d
  41e285:	push   0xffffff9d
  41e287:	add    al,0xf5
  41e289:	popa   
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	popf   
  41e28d:	mov    ebp,0x2535cc0
  41e292:	inc    edx
  41e293:	jge    0x41e294
  41e295:	fisubr WORD PTR [ecx+0x376e142f]
  41e29b:	xor    esp,DWORD PTR [eax*8+0x7a3f84e2]
  41e2a2:	out    0x31,al
  41e2a4:	jo     0x41e235
  41e2a6:	xor    DWORD PTR [eax],eax
  41e2a8:	fadd   DWORD PTR [edi+eiz*2]
  41e2ab:	jo     0x41e327
  41e2ad:	add    ch,BYTE PTR [esi-0x597866cc]
  41e2b3:	adc    BYTE PTR [ebx-0x7b],dh
  41e2b6:	add    ecx,DWORD PTR [eax-0x3e6745e]
  41e2bc:	popf   
  41e2bd:	cmc    
  41e2be:	mov    cl,BYTE PTR [ecx-0x521b9538]
  41e2c4:	mov    BYTE PTR [eax+0x6a95127d],al
  41e2ca:	fsubr  QWORD PTR [ebp+0x126d8078]
  41e2d0:	lea    ebp,[edx-0xc]
  41e2d3:	lods   eax,DWORD PTR ds:[esi]
  41e2d4:	add    BYTE PTR [eax],al
  41e2d6:	push   0x99457180
  41e2db:	jg     0x41e288
  41e2dd:	mov    ebx,DWORD PTR ds:0x27ec4ac6
  41e2e3:	int3   
  41e2e4:	jmp    0x453f:0x6da88
  41e2eb:	cmc    
  41e2ec:	and    al,0x77
  41e2ee:	lods   eax,DWORD PTR ds:[esi]
  41e2ef:	push   ds
  41e2f0:	aas    
  41e2f1:	stos   DWORD PTR es:[edi],eax
  41e2f2:	sbb    eax,DWORD PTR [eax+0xaad8925]
  41e2f8:	es inc ebp
  41e2fa:	cdq    
  41e2fb:	mov    bh,BYTE PTR [edx+0x44]
  41e2fe:	popf   
  41e2ff:	push   0x8
  41e301:	stos   DWORD PTR es:[edi],eax
  41e302:	adc    BYTE PTR [eax+0x59e69b99],al
  41e308:	cld    
  41e309:	mov    BYTE PTR [ecx-0x75],ah
  41e30c:	jmp    FWORD PTR [ecx]
  41e30e:	mov    DWORD PTR [edi-0x40],0x8042debb
  41e315:	hlt    
  41e316:	(bad)  
  41e317:	mov    bh,0x40
  41e319:	jmp    0xaa40930c
  41e31e:	and    DWORD PTR ds:0x2599138,ecx
  41e324:	add    al,0x79
  41e326:	lahf   
  41e327:	inc    ecx
  41e328:	push   edx
  41e329:	jb     0x41e355
  41e32b:	add    esp,ebp
  41e32d:	add    DWORD PTR [ebx-0x37e5fffe],esp
  41e333:	pop    edx
  41e334:	push   esp
  41e335:	jo     0x41e3b2
  41e337:	outs   dx,BYTE PTR ds:[esi]
  41e338:	mov    BYTE PTR [eax-0x23da0000],ah
  41e33e:	cld    
  41e33f:	push   0x28
  41e341:	or     BYTE PTR ds:0xfc806867,0xe9
  41e348:	or     edi,eax
  41e34a:	add    eax,DWORD PTR [edi]
  41e34c:	push   esi
  41e34d:	pop    ss
  41e34e:	or     eax,0xfc807c6d
  41e353:	jmp    0xfd3eb604
  41e358:	not    BYTE PTR [edx]
  41e35a:	inc    eax
  41e35b:	jmp    0xe6405a79
  41e360:	fist   DWORD PTR [eax+0x7d9ee8ff]
  41e366:	je     0x41e355
  41e368:	shl    esp,cl
  41e36a:	fild   QWORD PTR [edx+0x6]
  41e36d:	jle    0x41e356
  41e36f:	push   eax
  41e370:	inc    esp
  41e371:	jle    0x41e36f
  41e373:	gs pop esi
  41e375:	push   cs
  41e376:	test   BYTE PTR [edi],ah
  41e378:	sahf   
  41e379:	add    al,BYTE PTR [eax]
  41e37b:	ins    BYTE PTR es:[edi],dx
  41e37c:	mov    ds:0x2516fa57,eax
  41e381:	iret   
  41e382:	out    0x7a,eax
  41e384:	inc    esi
  41e385:	jg     0x41e383
  41e387:	add    BYTE PTR [eax+0x43],bh
  41e38a:	jo     0x41e3ed
  41e38c:	add    ecx,DWORD PTR ds:0xb379e8e0
  41e392:	sti    
  41e393:	(bad)  
  41e394:	jg     0x41e329
  41e396:	aaa    
  41e397:	repz dec eax
  41e399:	cmp    DWORD PTR [esi-0x73],edx
  41e39c:	jns    0x41e34c
  41e39e:	stc    
  41e39f:	inc    DWORD PTR [eax]
  41e3a1:	add    bl,dh
  41e3a3:	xor    eax,0xb528e850
  41e3a8:	cld    
  41e3a9:	(bad)  
  41e3aa:	cmp    DWORD PTR [esi+0x70],eax
  41e3ad:	cmp    esp,DWORD PTR [edi+0x41e07187]
  41e3b3:	shr    edi,0x50
  41e3b6:	cmp    eax,0x6189f029
  41e3bb:	xchg   edx,eax
  41e3bc:	test   DWORD PTR [ebp-0x4],ebx
  41e3bf:	popf   
  41e3c0:	mov    edx,0x8086338e
  41e3c5:	shr    BYTE PTR [eax+0x2035fb6f],0xd1
  41e3cc:	aas    
  41e3cd:	add    cl,dh
  41e3cf:	adc    esp,0xfffffffd
  41e3d2:	repz test DWORD PTR [ebp+ecx*4-0x47],ecx
  41e3d7:	xchg   esi,eax
  41e3d8:	dec    esp
  41e3d9:	call   0x3ddf8f
  41e3de:	in     al,dx
  41e3df:	ret    
  41e3e0:	cli    
  41e3e1:	lea    ecx,[ecx]
  41e3e3:	xchg   edx,eax
  41e3e4:	in     al,0x5a
  41e3e6:	mov    edi,0xec56fb85
  41e3eb:	mov    edx,esp
  41e3ed:	inc    BYTE PTR [ebx-0x231f8e05]
  41e3f3:	jle    0x41e40f
  41e3f5:	inc    DWORD PTR [ebx+0x38681d99]
  41e3fb:	pop    es
  41e3fc:	add    BYTE PTR [eax],al
  41e3fe:	mov    cl,0x83
  41e400:	aam    0xfd
  41e402:	popf   
  41e403:	adc    al,0x85
  41e405:	dec    edi
  41e406:	add    BYTE PTR [eax],al
  41e408:	adc    dl,BYTE PTR [ebp-0x504f0304]
  41e40e:	repz aas 
  41e410:	popf   
  41e411:	mov    bl,0xc7
  41e413:	add    DWORD PTR [ebx+ebp*2+0x257b7500],ebx
  41e41a:	aas    
  41e41b:	std    
  41e41c:	pushf  
  41e41d:	and    esp,DWORD PTR [edi]
  41e41f:	std    
  41e420:	imul   edi,DWORD PTR [esi],0x18c94279
  41e426:	mov    es,WORD PTR [eax+0x180a69d5]
  41e42c:	push   ds
  41e42d:	lods   al,BYTE PTR ds:[esi]
  41e42e:	or     BYTE PTR [edi+0x1e],0xa5
  41e432:	clc    
  41e433:	push   esp
  41e434:	lds    esp,FWORD PTR [ebx-0x1a]
  41e437:	cld    
  41e438:	mov    dl,0xe0
  41e43a:	nop
  41e43b:	cmp    BYTE PTR [esi+0x4087ff1e],ch
  41e441:	pushf  
  41e442:	cdq    
  41e443:	cmp    BYTE PTR [edi],al
  41e445:	imul   esi,DWORD PTR [ecx],0x56
  41e448:	and    dh,ah
  41e44a:	test   al,0xfa
  41e44c:	mov    al,BYTE PTR [eax+esi*1-0x100311af]
  41e453:	inc    edi
  41e454:	mov    gs,WORD PTR [ebx]
  41e456:	add    al,0x81
  41e458:	jne    0x41e4a5
  41e45a:	cmc    
  41e45b:	pushf  
  41e45c:	loopne 0x41e442
  41e45e:	enter  0x625a,0x56
  41e462:	jmp    0x188b:0x2ab8ee50
  41e469:	xor    ecx,DWORD PTR [eax+0x4a0000fc]
  41e46f:	fwait
  41e470:	cwde   
  41e471:	mov    dl,0x64
  41e473:	cmp    al,0x86
  41e475:	sbb    BYTE PTR [ebp+0x64],0x6f
  41e479:	inc    edx
  41e47a:	xor    dl,BYTE PTR [ebp+0x2456f98]
  41e480:	and    eax,0xa388c086
  41e485:	xchg   BYTE PTR [ecx-0x27],bh
  41e488:	pop    ds
  41e489:	ret    0xb3fa
  41e48c:	popa   
  41e48d:	add    ebx,DWORD PTR [ebp+0x6dc2e7b2]
  41e493:	call   0xe817b77e
  41e498:	out    0x42,al
  41e49a:	add    eax,0x9d036053
  41e49f:	mov    BYTE PTR [ecx+0x136adc29],ch
  41e4a5:	fidivr DWORD PTR [si+0x39]
  41e4a9:	sub    eax,0x44614645
  41e4ae:	popf   
  41e4af:	call   0x7d27b69a
  41e4b4:	shr    DWORD PTR [edi-0x56],cl
  41e4b7:	ret    0x78e6
  41e4ba:	stos   BYTE PTR es:[edi],al
  41e4bb:	xchg   BYTE PTR [ebp+0x71d77110],ch
  41e4c1:	xlat   BYTE PTR ds:[ebx]
  41e4c2:	push   ss
  41e4c3:	adc    ah,BYTE PTR [edi]
  41e4c5:	add    al,0xf3
  41e4c7:	call   0xd4ef7db2
  41e4cc:	(bad)  
  41e4cd:	out    dx,eax
  41e4ce:	and    dl,BYTE PTR [ebx]
  41e4d0:	daa    
  41e4d1:	add    al,0x0
  41e4d3:	add    BYTE PTR [esi],bl
  41e4d5:	inc    ebx
  41e4d6:	repnz cld 
  41e4d8:	jmp    0xe6c2:0xa26bdb7b
  41e4df:	sub    eax,0x793b7bd0
  41e4e4:	jb     0x41e46c
  41e4e6:	push   esp
  41e4e7:	cmovno edx,ebx
  41e4ea:	mov    ebp,0xf37d5350
  41e4ef:	jae    0x41e48b
  41e4f1:	ret    0x25e6
  41e4f4:	out    0xdb,al
  41e4f6:	jo     0x41e4b9
  41e4f8:	aad    0x3f
  41e4fa:	call   FWORD PTR [edx-0x3d011791]
  41e500:	sahf   
  41e501:	push   0xffffffcd
  41e503:	and    DWORD PTR [eax],ebx
  41e505:	jg     0x41e4c7
  41e507:	mov    ebx,0x82ffe8cf
  41e50c:	sahf   
  41e50d:	push   0xffffffc1
  41e50f:	adc    DWORD PTR [eax],esp
  41e511:	jg     0x41e4d3
  41e513:	pushf  
  41e514:	test   DWORD PTR [edi+0x7e],esp
  41e517:	or     eax,0xe8fffffd
  41e51c:	rcl    ch,0x8a
  41e51f:	xor    al,0x43
  41e521:	jnp    0x41e51f
  41e523:	out    0x67,al
  41e525:	sar    bl,1
  41e527:	jb     0x41e550
  41e529:	fs mov ?,esp
  41e52c:	sahf   
  41e52d:	add    al,BYTE PTR [ebx]
  41e52f:	fwait
  41e530:	lahf   
  41e531:	add    al,BYTE PTR [eax]
  41e533:	push   ebx
  41e534:	int    0xcb
  41e536:	imul   ebp,ecx,0xf0330000
  41e53c:	shr    DWORD PTR [edx-0xa],cl
  41e53f:	jle    0x41e528
  41e541:	mov    al,0xaf
  41e543:	jle    0x41e541
  41e545:	ins    BYTE PTR es:[edi],dx
  41e546:	fdivp  st(5),st
  41e548:	sbb    dh,BYTE PTR [edx+0x58]
  41e54b:	retf   
  41e54c:	addr16 popa 
  41e54e:	call   0xb9de515
  41e553:	dec    eax
  41e554:	cli    
  41e555:	xchg   BYTE PTR [ecx],bl
  41e557:	retf   
  41e558:	out    0xed,eax
  41e55a:	cs jnp 0x41e559
  41e55d:	ins    BYTE PTR es:[edi],dx
  41e55e:	pop    esi
  41e55f:	push   cs
  41e560:	xchg   ebx,eax
  41e561:	test   eax,0xf072bbea
  41e566:	dec    ebp
  41e567:	mov    ebx,0x47db7065
  41e56c:	cli    
  41e56d:	push   esi
  41e56e:	sbb    DWORD PTR [ebp+ebp*8-0x74fd6118],esi
  41e575:	add    BYTE PTR [ecx+0x7bfff7a5],dh
  41e57b:	mov    ebp,0x3804fffc
  41e580:	jno    0x41e57b
  41e582:	pop    esp
  41e583:	sub    esi,DWORD PTR [eax+eax*2+0x34]
  41e587:	hlt    
  41e588:	or     esp,0x50fb86b9
  41e58e:	stos   DWORD PTR es:[edi],eax
  41e58f:	ins    BYTE PTR es:[edi],dx
  41e590:	test   al,0x12
  41e592:	xor    al,0xff
  41e594:	jle    0x41e613
  41e596:	cwde   
  41e597:	add    BYTE PTR [esi+0x24],dh
  41e59a:	outs   dx,DWORD PTR ds:[esi]
  41e59b:	ds add al,0x66
  41e59e:	add    BYTE PTR [eax],al
  41e5a0:	xchg   DWORD PTR [edi-0x4],eax
  41e5a3:	jae    0x41e574
  41e5a5:	cs sti 
  41e5a7:	adc    eax,0x401474
  41e5ac:	(bad)  
  41e5ad:	mov    esi,0xa73ff4c
  41e5b2:	mov    DWORD PTR [ebp-0x47ed8],eax
  41e5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b9:	out    dx,al
  41e5ba:	fwait
  41e5bb:	aam    0xc4
  41e5bd:	(bad)  
  41e5be:	out    0xc,al
  41e5c0:	cmp    DWORD PTR [ecx+0x7efbfdc8],ecx
  41e5c6:	dec    esp
  41e5c7:	call   0x3d2971
  41e5cc:	(bad)  [ebp+eax*8-0x3d]
  41e5d0:	ror    DWORD PTR [ecx-0x8df7c18],1
  41e5d6:	dec    ebp
  41e5d7:	push   ecx
  41e5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d9:	pop    esp
  41e5da:	mov    DWORD PTR [eax+eiz*2+0xe],esi
  41e5de:	call   0x40b0a9
  41e5e3:	mov    al,BYTE PTR [edx-0x19]
  41e5e6:	or     eax,0x8406749f
  41e5eb:	shl    BYTE PTR [eax+0x1e],0xe8
  41e5ef:	mov    BYTE PTR [ebp+0xefc8114],bl
  41e5f5:	imul   ecx,DWORD PTR [edi+0x6873794b],0xffffffdb
  41e5fc:	sbb    ebp,DWORD PTR [eax+eax*1+0x5e]
  41e600:	daa    
  41e601:	sub    eax,0x88dd
  41e606:	inc    eax
  41e607:	xchg   DWORD PTR [ebp+0x31],eax
  41e60a:	inc    esi
  41e60b:	adc    eax,0x54efe76d
  41e610:	cmp    esp,0xe7456b4d
  41e616:	pop    esp
  41e617:	mov    bh,0x81
  41e619:	cld    
  41e61a:	dec    ebp
  41e61b:	imul   eax,DWORD PTR [ebp+0x52],0x26
  41e61f:	or     BYTE PTR [ebx+0x6e3deb],al
  41e625:	add    BYTE PTR [esi-0x1c],cl
  41e628:	pop    edx
  41e629:	or     al,0x2a
  41e62b:	sub    eax,0xc1725608
  41e630:	xchg   BYTE PTR [edi-0x6a4797b8],bh
  41e636:	popf   
  41e637:	imul   eax,DWORD PTR [eax],0xffffffe9
  41e63a:	mov    ebp,esp
  41e63c:	std    
  41e63d:	pop    es
  41e63e:	mov    edx,0xf08b342f
  41e643:	retf   
  41e644:	jle    0x41e642
  41e646:	stos   BYTE PTR es:[edi],al
  41e647:	inc    ebx
  41e648:	mov    bh,0x2a
  41e64a:	popf   
  41e64b:	imul   eax,DWORD PTR [ecx+0x49f4a570],0x4f
  41e652:	and    dh,ah
  41e654:	test   al,0xfd
  41e656:	mov    cl,BYTE PTR [eax-0x3d2d0016]
  41e65c:	sar    esi,cl
  41e65e:	jp     0x41e6cb
  41e660:	push   0x81f0a3f9
  41e665:	and    BYTE PTR [ecx+0x5b],0x87
  41e669:	mov    edi,0x2e90000
  41e66e:	idiv   DWORD PTR [ebx+0x3e7022b]
  41e674:	es mov bh,0x7e
  41e677:	or     DWORD PTR [ecx+0x79],0x277883e
  41e67e:	out    0x6b,eax
  41e680:	xor    al,0xf8
  41e682:	out    0x3,al
  41e684:	int    0x6a
  41e686:	inc    edi
  41e687:	push   ss
  41e688:	sub    bh,BYTE PTR [ecx+0x61]
  41e68b:	clc    
  41e68c:	xchg   esi,eax
  41e68d:	mov    ebp,esp
  41e68f:	mov    BYTE PTR [edx+0x9],bl
  41e692:	arpl   WORD PTR [edx-0x731986ee],sp
  41e698:	pop    edi
  41e699:	push   es
  41e69a:	fiadd  DWORD PTR [ebx+0x78]
  41e69d:	cmp    ebp,DWORD PTR [edx-0x1508d9f9]
  41e6a3:	adc    cl,BYTE PTR [esi]
  41e6a5:	inc    edx
  41e6a6:	pop    edi
  41e6a7:	enter  0x69e6,0xc6
  41e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ac:	loop   0x41e726
  41e6ae:	push   0x44
  41e6b0:	dec    esi
  41e6b1:	repz push eax
  41e6b3:	or     BYTE PTR [ebp+0x42],al
  41e6b6:	dec    esi
  41e6b7:	(bad)  
  41e6b8:	retf   0x9fe0
  41e6bb:	add    al,0x9d
  41e6bd:	add    al,dh
  41e6bf:	cmp    al,ch
  41e6c1:	dec    edx
  41e6c2:	in     eax,dx
  41e6c3:	add    bl,BYTE PTR [ebp+0x44f8a67e]
  41e6c9:	in     al,dx
  41e6ca:	(bad)  
  41e6cb:	sub    BYTE PTR ds:0x4c0f06,0x0
  41e6d2:	call   0x5a6a:0xc880e678
  41e6d9:	adc    DWORD PTR [edx+0xe446278],ecx
  41e6df:	mov    esi,0xbe260810
  41e6e4:	jp     0x41e6ba
  41e6e6:	cli    
  41e6e7:	dec    esp
  41e6e8:	(bad)  
  41e6e9:	call   0xb83ee98c
  41e6ee:	not    BYTE PTR [ebp+0x7e9ee80c]
  41e6f4:	mov    edi,0x828b8dd5
  41e6f9:	sbb    DWORD PTR [edi],0x1db9fc77
  41e6ff:	adc    eax,0x785edb78
  41e704:	dec    esp
  41e705:	ins    BYTE PTR es:[edi],dx
  41e706:	sbb    ah,BYTE PTR [eax-0x37e3c903]
  41e70c:	and    bl,BYTE PTR [bx+di+0x2]
  41e711:	xlat   BYTE PTR es:[ebx]
  41e713:	push   0x76
  41e715:	out    dx,al
  41e716:	lahf   
  41e717:	add    al,BYTE PTR [ecx+ebp*1-0x5b76f5fb]
  41e71e:	scas   al,BYTE PTR es:[edi]
  41e71f:	inc    eax
  41e720:	jmp    edi
  41e722:	cs jns 0x41e70e
  41e725:	aam    0x21
  41e727:	cs cmp edi,0xfffffff2
  41e72b:	or     al,0xfd
  41e72d:	mov    bh,0x76
  41e72f:	inc    edi
  41e730:	shl    bh,cl
  41e732:	sbb    eax,0xb3e7ce
  41e737:	add    BYTE PTR [ebx+0x75],ch
  41e73a:	cld    
  41e73b:	sbb    esp,DWORD PTR [ecx-0x2a]
  41e73e:	pop    ebp
  41e73f:	xor    dl,BYTE PTR [esi+0x41]
  41e742:	or     ebp,ecx
  41e744:	out    dx,al
  41e745:	js     0x41e705
  41e747:	in     eax,0x9e
  41e749:	ror    DWORD PTR [eax+0x476c21c5],cl
  41e74f:	sbb    al,bh
  41e751:	mov    dh,BYTE PTR [edx]
  41e753:	fnstenv [edx+eax*8+0x78335ff]
  41e75a:	std    
  41e75b:	sbb    al,0x99
  41e75d:	mov    eax,DWORD PTR [edx-0x4b]
  41e760:	outs   dx,BYTE PTR ds:[esi]
  41e761:	jbe    0x41e738
  41e763:	add    BYTE PTR [edi],al
  41e765:	ror    BYTE PTR [eax],0x6a
  41e768:	js     0x41e6f2
  41e76a:	inc    ecx
  41e76b:	in     al,0x84
  41e76d:	out    0x85,al
  41e76f:	(bad)  
  41e770:	repnz cmp BYTE PTR [edi+0x65],0xf0
  41e775:	add    ecx,DWORD PTR [ecx-0x1bac1fbb]
  41e77b:	xor    DWORD PTR [eax-0x7e],0xfffffffb
  41e77f:	test   BYTE PTR [eax+esi*2+0xe],dh
  41e783:	(bad)  
  41e784:	stc    
  41e785:	out    0xe4,al
  41e787:	addr16 lock cmp ebx,0x3c7b8
  41e78f:	add    ch,bl
  41e791:	nop
  41e792:	std    
  41e793:	inc    DWORD PTR [eax+ecx*4]
  41e796:	inc    ecx
  41e797:	aam    0x54
  41e799:	jmp    0x41e814
  41e79b:	add    BYTE PTR [eax],0x0
  41e79e:	mov    bl,0x82
  41e7a0:	add    al,0x28
  41e7a3:	or     eax,0xeb907589
  41e7a8:	inc    esp
  41e7a9:	jl     0x41e79e
  41e7ab:	div    BYTE PTR [edx+edx*4-0x16fffd0c]
  41e7b2:	push   0x4
  41e7b4:	add    BYTE PTR [eax],al
  41e7b6:	inc    edi
  41e7b7:	imul   ebp,esp,0xec494100
  41e7bd:	push   eax
  41e7be:	fdivr  QWORD PTR [eax+edi*2]
  41e7c1:	call   ebx
  41e7c3:	mov    DWORD PTR [ebp+esi*2-0xf8e6e4f],edi
  41e7ca:	int3   
  41e7cb:	sub    BYTE PTR [edi+edi*8-0xd],bh
  41e7cf:	in     al,0x3b
  41e7d1:	add    DWORD PTR [edx+eax*1+0x4c11146a],esi
  41e7d8:	rcl    BYTE PTR [eax+0x1],1
  41e7db:	dec    esp
  41e7dc:	mov    esp,0x558c9d50
  41e7e1:	sbb    BYTE PTR [ecx+0x58],0x68
  41e7e5:	inc    esi
  41e7e6:	ins    BYTE PTR es:[edi],dx
  41e7e7:	jle    0x41e865
  41e7e9:	xchg   al,bl
  41e7eb:	aaa    
  41e7ec:	pop    DWORD PTR [edx+0x71]
  41e7ef:	sbb    al,0xec
  41e7f1:	xchg   esp,eax
  41e7f2:	popf   
  41e7f3:	imul   eax,DWORD PTR [eax],0xffffffe8
  41e7f6:	lds    ebx,FWORD PTR [ebp+0x7d]
  41e7f9:	cld    
  41e7fa:	fmul   QWORD PTR es:[edx+0x75e73572]
  41e801:	or     al,0x0
  41e803:	add    BYTE PTR [ecx],bl
  41e805:	sbb    eax,0xf09d0004
  41e80a:	fdivrp st(3),st
  41e80c:	(bad)  
  41e80d:	arpl   WORD PTR [ecx],si
  41e80f:	rcl    BYTE PTR [esi],cl
  41e811:	sub    ebx,ebx
  41e813:	hlt    
  41e814:	sub    al,0xdf
  41e816:	push   ecx
  41e817:	or     al,0x20
  41e819:	fld    DWORD PTR [ebx]
  41e81b:	add    BYTE PTR [ebp+0x70875a68],bl
  41e821:	pusha  
  41e822:	mov    ebp,edi
  41e824:	(bad)  
  41e825:	sbb    BYTE PTR ds:0x6c1c81,cl
  41e82b:	add    BYTE PTR [eax],ah
  41e82d:	sahf   
  41e82e:	sbb    BYTE PTR [edi+0x7a807360],al
  41e834:	xchg   esi,eax
  41e835:	imul   esi,edi,0x21
  41e838:	inc    edi
  41e839:	ja     0x41e7ca
  41e83b:	inc    edx
  41e83c:	jmp    0xa186777c
  41e841:	cmp    edi,DWORD PTR [ebp+0x12]
  41e844:	sub    DWORD PTR [ebp-0x40],0xca81fff
  41e84b:	sbb    ebp,0x2e
  41e84e:	or     DWORD PTR [ecx+0x48bef60],ecx
  41e854:	fistp  DWORD PTR [esi]
  41e856:	or     edi,edi
  41e858:	xchg   DWORD PTR [edx],eax
  41e85a:	sub    DWORD PTR [ebx-0x3fdbc667],ecx
  41e860:	adc    DWORD PTR [eax],ecx
  41e862:	(bad)  
  41e863:	rol    BYTE PTR [esi+0x29],1
  41e866:	lahf   
  41e867:	test   BYTE PTR [eax],al
  41e869:	add    BYTE PTR [ebx-0x7e],dh
  41e86c:	ror    BYTE PTR [ebx*4-0x39c33314],0x7a
  41e874:	stc    
  41e875:	pop    ds
  41e876:	adc    al,0x41
  41e878:	ror    eax,0x52
  41e87b:	call   0x6d6dc57e
  41e880:	pop    edi
  41e881:	jmp    0x7acf:0x7eb71a0a
  41e888:	mov    ch,0x7e
  41e88a:	(bad)  
  41e88b:	xor    bl,ch
  41e88d:	ret    
  41e88e:	xor    al,BYTE PTR [eax+0x1ab70f22]
  41e894:	(bad)  
  41e895:	sub    al,0xde
  41e897:	outs   dx,BYTE PTR ds:[esi]
  41e898:	add    DWORD PTR [ebp+eax*8+0x7a],ebx
  41e89c:	iret   
  41e89d:	enter  0x810a,0xa3
  41e8a1:	jnp    0x41e855
  41e8a3:	sub    DWORD PTR ds:0x9879c41b,0xf1f77a8a
  41e8ad:	add    ebp,DWORD PTR [esi-0x43]
  41e8b0:	imul   ecx,eax,0x26
  41e8b3:	rol    BYTE PTR [eax+0x6b87441b],cl
  41e8b9:	ja     0x41e8e2
  41e8bb:	mov    edi,0x4dbc6cce
  41e8c0:	fdivr  QWORD PTR [ebp+0x1f]
  41e8c3:	inc    edx
  41e8c4:	pop    ebx
  41e8c5:	cs shr dh,0xbe
  41e8c9:	ins    BYTE PTR es:[edi],dx
  41e8ca:	jp     0x41e91a
  41e8cc:	les    edi,FWORD PTR [ebp+0x0]
  41e8cf:	add    BYTE PTR [ebx-0x56824389],bh
  41e8d5:	retf   
  41e8d6:	inc    eax
  41e8d8:	push   0x4e
  41e8da:	std    
  41e8db:	scas   al,BYTE PTR es:[edi]
  41e8dc:	xchg   DWORD PTR [eax+ebx*2],ecx
  41e8df:	cmp    DWORD PTR [esi],esp
  41e8e1:	shl    ebx,0x6c
  41e8e4:	bound  edi,QWORD PTR [eax+0x502c814f]
  41e8ea:	std    
  41e8eb:	mov    fs,WORD PTR [esp+eiz*2]
  41e8ee:	cmp    BYTE PTR [edi+0x6a],0xfc
  41e8f2:	out    0xa0,al
  41e8f4:	jmp    0x41e96c
  41e8f6:	cld    
  41e8f7:	bound  ebp,QWORD PTR [edx+0x5c]
  41e8fa:	mov    BYTE PTR [edx*8-0x66819833],ah
  41e901:	add    al,BYTE PTR [eax]
  41e903:	push   ecx
  41e904:	jns    0x41e8fc
  41e906:	cld    
  41e907:	push   esi
  41e908:	imul   ecx,DWORD PTR [edx+0x4e9e41d7],0xfffffffd
  41e90f:	inc    esi
  41e910:	and    dh,cl
  41e912:	out    dx,eax
  41e913:	push   ecx
  41e914:	ret    0xfcf9
  41e917:	ss adc eax,0x2bde725b
  41e91d:	icebp  
  41e91e:	jmp    0x41e931
  41e920:	jbe    0x41e91b
  41e922:	cld    
  41e923:	push   ds
  41e924:	dec    ecx
  41e925:	test   edi,edi
  41e927:	call   0x5c4b52ca
  41e92c:	repnz addr16 out 0x33,eax
  41e930:	div    DWORD PTR [esi-0x4]
  41e933:	mov    edx,0xd65e0000
  41e938:	pop    ebp
  41e939:	xchg   edx,eax
  41e93a:	push   edi
  41e93b:	inc    ecx
  41e93c:	add    ebp,ecx
  41e93e:	repz mov ch,bl
  41e941:	push   0xe9019b42
  41e946:	sahf   
  41e947:	rcl    DWORD PTR [ebp+0x3e],1
  41e94a:	adc    al,0x64
  41e94c:	xor    dh,cl
  41e94e:	sar    BYTE PTR [edx+edi*2+0x0],1
  41e952:	hlt    
  41e953:	mov    BYTE PTR [ecx-0x4],dh
  41e956:	jmp    0x41e964
  41e958:	adc    BYTE PTR [edx],0x74
  41e95b:	dec    BYTE PTR [eax+0x7987c21c]
  41e961:	clc    
  41e962:	or     eax,0x273bf075
  41e967:	push   es
  41e968:	jg     0x41e91f
  41e96a:	je     0x41e96b
  41e96c:	dec    DWORD PTR [edx+0x458582c1]
  41e972:	or     al,0xea
  41e974:	or     al,0xf
  41e976:	mov    bl,0x7
  41e978:	jg     0x41e973
  41e97a:	jle    0x41e9e7
  41e97c:	or     BYTE PTR [ebx+0x77404cd],al
  41e982:	(bad)  
  41e983:	mov    edi,0x71773afe
  41e988:	call   0x796cd618
  41e98d:	cld    
  41e98e:	jne    0x41e986
  41e990:	aaa    
  41e991:	ret    
  41e992:	lock push ss
  41e994:	mov    DWORD PTR [eax+0x36],ecx
  41e997:	cmp    al,bh
  41e999:	jae    0x41e99b
  41e99b:	add    BYTE PTR [edx],bh
  41e99d:	pop    ebp
  41e99e:	jg     0x41e9d8
  41e9a0:	stc    
  41e9a1:	imul   eax,DWORD PTR [esi+eiz*2],0xffffff87
  41e9a5:	cmp    BYTE PTR [edx],cl
  41e9a7:	jne    0x41e99f
  41e9a9:	mov    DWORD PTR [ebp-0x78fe4b7d],edi
  41e9af:	dec    ebp
  41e9b0:	mov    WORD PTR [eax+ecx*1-0xff73],es
  41e9b7:	(bad)  
  41e9b8:	jns    0x41ea26
  41e9ba:	lock mov DWORD PTR [ecx],esi
  41e9bd:	repz in al,0x91
  41e9c0:	mov    dh,0xf5
  41e9c2:	sti    
  41e9c3:	test   BYTE PTR [edx+esi*2],al
  41e9c6:	dec    edx
  41e9c7:	test   ebx,ebp
  41e9c9:	jno    0x41e9de
  41e9cb:	call   FWORD PTR [ebp-0x1d77942a]
  41e9d1:	inc    eax
  41e9d2:	out    0xc,eax
  41e9d4:	mov    dl,0x3b
  41e9d6:	mov    WORD PTR [edx-0x4f],cs
  41e9d9:	out    dx,eax
  41e9da:	into   
  41e9db:	not    DWORD PTR [eiz*2+0x385d8293]
  41e9e2:	xor    eax,0x8ca3d889
  41e9e7:	dec    edx
  41e9e8:	xchg   ecx,eax
  41e9e9:	(bad)  
  41e9eb:	jle    0x41ea0b
  41e9ed:	push   esp
  41e9ee:	add    BYTE PTR [edx+eiz*4-0x1c],dh
  41e9f2:	xor    ebp,eax
  41e9f4:	cli    
  41e9f5:	dec    ebx
  41e9f6:	jns    0x41e9f4
  41e9f8:	push   0x27
  41e9fa:	jl     0x41ea32
  41e9fc:	shl    bh,0x8
  41e9ff:	add    BYTE PTR [eax],0x0
  41ea02:	leave  
  41ea03:	loopne 0x41ea7d
  41ea05:	cld    
  41ea06:	push   ds
  41ea07:	addr16 js 0x41ea06
  41ea0a:	rol    BYTE PTR [edx],1
  41ea0c:	inc    ecx
  41ea0d:	inc    edx
  41ea0e:	dec    ebp
  41ea0f:	jmp    0x41ea14
  41ea11:	add    BYTE PTR [ebp+0x32ff03c2],bl
  41ea17:	pop    esp
  41ea18:	lea    eax,[edx+0x25]
  41ea1b:	fcomip st,st(6)
  41ea1d:	repz xor eax,0x1afd554e
  41ea23:	lds    esp,FWORD PTR [eax+0x30]
  41ea26:	adc    ah,BYTE PTR [ebx-0x9]
  41ea29:	neg    DWORD PTR [edx+0x2ff56e9]
  41ea2f:	pop    esp
  41ea30:	inc    ecx
  41ea31:	inc    edx
  41ea32:	stc    
  41ea33:	pop    edx
  41ea34:	add    BYTE PTR [eax],al
  41ea36:	popf   
  41ea37:	repnz imul bl
  41ea3a:	push   ss
  41ea3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3c:	ins    BYTE PTR es:[edi],dx
  41ea3d:	mov    BYTE PTR [eax+0x7],dl
  41ea40:	cmp    edi,DWORD PTR [eiz*4-0x625b83b0]
  41ea47:	add    ah,bh
  41ea49:	add    edx,DWORD PTR [edi+eax*1]
  41ea4c:	out    dx,eax
  41ea4d:	loope  0x41e9da
  41ea4f:	sub    ah,dh
  41ea51:	jg     0x41ea68
  41ea53:	add    esp,edi
  41ea55:	add    ecx,DWORD PTR [ebp+0x71]
  41ea58:	fild   DWORD PTR [ebx-0x71193d74]
  41ea5e:	das    
  41ea5f:	pop    esi
  41ea60:	popa   
  41ea61:	dec    ebx
  41ea62:	and    eax,0x8eb2c7
  41ea67:	add    BYTE PTR [esi-0x7d2f8bf8],bl
  41ea6d:	pop    edx
  41ea6e:	mov    edx,DWORD PTR ds:0x5b617180
  41ea74:	sbb    eax,0x190a8d6d
  41ea79:	jle    0x41ea61
  41ea7b:	add    ebx,DWORD PTR [ebp-0x3e0e61d3]
  41ea81:	call   0x1a99e9e7
  41ea86:	cld    
  41ea87:	ret    
  41ea88:	push   edx
  41ea89:	jle    0x41ea26
  41ea8b:	fild   DWORD PTR [edi+0x71]
  41ea8e:	pop    ebp
  41ea8f:	imul   ebx,DWORD PTR [ebx+ebx*1-0x19],0x3
  41ea94:	and    al,0x48
  41ea96:	popa   
  41ea97:	lock cmp dl,dl
  41ea9a:	inc    ebp
  41ea9b:	xor    DWORD PTR [eax],ebp
  41ea9d:	pop    ss
  41ea9e:	ja     0x41eab5
  41eaa0:	fld    QWORD PTR [edx]
  41eaa2:	ins    BYTE PTR es:[edi],dx
  41eaa3:	inc    ebx
  41eaa4:	mov    ?,edx
  41eaa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaa7:	xchg   BYTE PTR [ecx],dl
  41eaa9:	or     bl,BYTE PTR [ecx+0x720ff550]
  41eaaf:	push   esi
  41eab0:	adc    eax,0xf60f1540
  41eab5:	sbb    eax,0x84f2c37c
  41eaba:	es lock cdq 
  41eabd:	jge    0x41ea62
  41eabf:	ja     0x41ead6
  41eac1:	mov    edi,0xc45fe0ff
  41eac6:	out    dx,eax
  41eac7:	push   ebp
  41eac8:	sahf   
  41eac9:	add    al,BYTE PTR [eax]
  41eacb:	jo     0x41eacd
  41eacd:	add    BYTE PTR [esi-0x4dfe037d],bl
  41ead3:	std    
  41ead4:	mov    BYTE PTR [esi*1+0x5de14a7a],ch
  41eadb:	(bad)  
  41eadc:	out    dx,eax
  41eadd:	pop    esp
  41eade:	mov    eax,ds:0x9e700002
  41eae3:	jnp    0x41eb5f
  41eae5:	shr    DWORD PTR [eax],0x43
  41eae8:	out    0x1f,eax
  41eaea:	jmp    0x41eb59
  41eaec:	cld    
  41eaed:	mov    ebp,cr5
  41eaf0:	out    dx,eax
  41eaf1:	jmp    0x9672fa69
  41eaf6:	and    ch,al
  41eaf8:	jmp    0x41eadf
  41eafa:	cmc    
  41eafb:	(bad)  
  41eafc:	sti    
  41eafd:	jb     0x41eb29
  41eaff:	ins    BYTE PTR es:[edi],dx
  41eb00:	inc    edi
  41eb01:	ret    0x7823
  41eb04:	or     al,0x6b
  41eb06:	(bad)  
  41eb07:	ins    DWORD PTR es:[edi],dx
  41eb08:	cld    
  41eb09:	outs   dx,BYTE PTR ds:[esi]
  41eb0a:	rol    BYTE PTR [esi],0xc5
  41eb0d:	lods   al,BYTE PTR ds:[esi]
  41eb0e:	into   
  41eb0f:	cmp    bh,0xe8
  41eb12:	sahf   
  41eb13:	jns    0x41eb57
  41eb15:	push   ecx
  41eb16:	sub    ch,ch
  41eb18:	repz inc ecx
  41eb1a:	mov    dl,BYTE PTR [ebp+edi*8+0x46]
  41eb1e:	aas    
  41eb1f:	jnp    0x41eb63
  41eb21:	cmp    DWORD PTR [esi+ecx*8+0x58],eax
  41eb25:	and    BYTE PTR [ebx+0x3],ah
  41eb28:	add    BYTE PTR [ecx+eiz*1-0x76f27fa4],dl
  41eb2f:	sub    bl,0x85
  41eb32:	add    BYTE PTR [eax],al
  41eb34:	jmp    0xa0c5400e
  41eb39:	ficom  DWORD PTR [esi-0x187ce3b6]
  41eb3f:	add    BYTE PTR [ebx],cl
  41eb41:	retf   
  41eb42:	cli    
  41eb43:	jmp    DWORD PTR [edi]
  41eb45:	jmp    0x41eacc
  41eb47:	inc    esp
  41eb48:	call   0x4a092258
  41eb4d:	sti    
  41eb4e:	shl    BYTE PTR cs:[ebx+ebx*8-0x27],0x1
  41eb54:	mov    ah,0x3
  41eb56:	das    
  41eb57:	rol    BYTE PTR [ecx+0x5f],0x20
  41eb5b:	inc    eax
  41eb5c:	cmp    eax,0x77b83838
  41eb61:	push   es
  41eb62:	call   0xfc2ca9fa
  41eb67:	mov    ebx,ecx
  41eb69:	dec    BYTE PTR [eax-0x7af567bc]
  41eb6f:	inc    esp
  41eb70:	pop    eax
  41eb71:	aaa    
  41eb72:	das    
  41eb73:	ror    BYTE PTR [edi],0xba
  41eb76:	ret    
  41eb77:	inc    esp
  41eb78:	push   0xc478c417
  41eb7d:	push   es
  41eb7e:	ret    
  41eb7f:	inc    esp
  41eb80:	pop    eax
  41eb81:	daa    
  41eb82:	in     al,dx
  41eb83:	mov    DWORD PTR [esi+eax*1+0x43fe8e8],esi
  41eb8a:	add    cl,ch
  41eb8c:	add    BYTE PTR [ebx],0x0
  41eb8f:	add    BYTE PTR [edi+0x3310086e],dh
  41eb95:	and    DWORD PTR [edx+0x44000000],0xd78b5603
  41eb9f:	fld    TBYTE PTR [esi]
  41eba1:	or     al,0x35
  41eba3:	add    eax,DWORD PTR [edi+0xbeab9f8]
  41eba9:	test   BYTE PTR [eax+0x3],bh
  41ebac:	add    BYTE PTR [eax],al
  41ebae:	sub    ebx,ebx
  41ebb0:	mov    al,0xfb
  41ebb2:	ret    
  41ebb3:	jmp    0xffb:0x12d84c7f
  41ebba:	popf   
  41ebbb:	shl    BYTE PTR [eax+0x65],1
  41ebbe:	sbb    BYTE PTR [edi],dl
  41ebc0:	out    dx,al
  41ebc1:	ss push ss
  41ebc3:	pushf  
  41ebc4:	add    al,0x8b
  41ebc6:	push   edx
  41ebc7:	dec    ecx
  41ebc8:	rol    DWORD PTR [eax-0x1917b73b],1
  41ebce:	rcr    BYTE PTR [eax+0x0],1
  41ebd1:	call   0xfcb75fc2
  41ebd6:	adc    al,0x25
  41ebd8:	and    BYTE PTR [eax+eiz*1],dl
  41ebdb:	cdq    
  41ebdc:	out    dx,al
  41ebdd:	add    al,0xf3
  41ebdf:	jmp    0x54deebe7
  41ebe4:	push   es
  41ebe5:	mov    edx,DWORD PTR [ecx+0x5]
  41ebe8:	adc    al,0x4f
  41ebea:	test   DWORD PTR [ebx+0x4d92fc76],edi
  41ebf0:	lods   eax,DWORD PTR ds:[esi]
  41ebf1:	out    dx,eax
  41ebf2:	mov    dl,BYTE PTR [eax]
  41ebf4:	and    BYTE PTR [esi*2+0x7afd5352],dl
  41ebfb:	loope  0x41ebbc
  41ebfd:	and    eax,DWORD PTR [eax]
  41ebff:	add    BYTE PTR [ebp-0x3e8c74fb],cl
  41ec05:	cmp    ecx,DWORD PTR [ebx-0x74b846bd]
  41ec0b:	jnp    0x41eb8e
  41ec0d:	inc    ebx
  41ec0e:	cmp    al,BYTE PTR [ebx+0x79]
  41ec11:	dec    esp
  41ec12:	add    BYTE PTR [edx-0x63],ch
  41ec15:	push   ecx
  41ec16:	add    ecx,DWORD PTR [ebx+0x4fcc07d9]
  41ec1c:	sub    BYTE PTR [eax+0x1c],dl
  41ec1f:	cmp    BYTE PTR [ebp-0x39],al
  41ec22:	sub    BYTE PTR [eax],al
  41ec24:	popf   
  41ec25:	fild   WORD PTR [ebx+0x72]
  41ec28:	mov    edx,DWORD PTR [ebx-0x78]
  41ec2b:	adc    BYTE PTR [ebp-0x1aed8aa5],bl
  41ec31:	dec    ecx
  41ec32:	sar    bh,0x8
  41ec35:	add    ebp,DWORD PTR [ebx-0x657d6fe1]
  41ec3b:	pop    ds
  41ec3c:	test   al,0x0
  41ec3e:	cdq    
  41ec3f:	dec    edi
  41ec40:	dec    ecx
  41ec41:	pop    edx
  41ec42:	or     BYTE PTR [eax+ebp*8+0x6d],dl
  41ec46:	jno    0x41ec39
  41ec48:	call   0xcd5a:0xe88b2979
  41ec4f:	or     dl,dl
  41ec51:	ins    DWORD PTR es:[edi],dx
  41ec52:	mov    ecx,0x214b1576
  41ec57:	push   edi
  41ec58:	xchg   ecx,eax
  41ec59:	xchg   DWORD PTR [esi],ebx
  41ec5b:	ja     0x41ec16
  41ec5d:	ins    DWORD PTR es:[edi],dx
  41ec5e:	adc    DWORD PTR [edi+0x2e],ebp
  41ec61:	dec    ebp
  41ec63:	sub    eax,0xadb50000
  41ec68:	xchg   esi,eax
  41ec69:	jne    0x41ec0c
  41ec6b:	aam    0xce
  41ec6d:	mov    esp,0xa3b56c6a
  41ec72:	retf   0x29aa
  41ec75:	add    al,0x35
  41ec77:	adc    bl,BYTE PTR [ebx]
  41ec79:	fst    QWORD PTR [edi]
  41ec7b:	mov    dl,0x13
  41ec7e:	int    0x7b
  41ec80:	adc    ah,BYTE PTR [eax]
  41ec82:	mov    DWORD PTR [edx+0x6c],ebx
  41ec85:	out    dx,al
  41ec86:	imul   ebp,DWORD PTR [ebp+0x6a],0x8f2eee43
  41ec8d:	sbb    edx,esp
  41ec8f:	ins    DWORD PTR es:[edi],dx
  41ec90:	jne    0x41ec14
  41ec92:	pop    edx
  41ec93:	and    ah,BYTE PTR [eax-0x41]
  41ec96:	jle    0x41ecae
  41ec98:	je     0x41ec59
  41ec9a:	jle    0x41ecb2
  41ec9c:	mov    bh,0xe9
  41ec9e:	cmp    ebx,ebx
  41eca0:	jmp    0x2976:0xcea03adb
  41eca7:	ins    DWORD PTR es:[edi],dx
  41eca8:	mov    edx,0x785a8d1f
  41ecad:	add    al,0x1a
  41ecaf:	ins    DWORD PTR es:[edi],dx
  41ecb0:	jmp    FWORD PTR [ecx-0x5b]
  41ecb3:	and    ch,BYTE PTR [edx+ebp*4-0x1697ed62]
  41ecba:	sahf   
  41ecbb:	add    al,BYTE PTR [eax+0x7b85aa93]
  41ecc1:	int    0x96
  41ecc3:	outs   dx,DWORD PTR ds:[esi]
  41ecc4:	adc    bl,BYTE PTR [ebp-0x66]
  41ecc7:	ret    0x73ff
  41ecca:	add    BYTE PTR [eax],al
  41eccc:	repnz and BYTE PTR [eax],dl
  41eccf:	adc    ebp,ebx
  41ecd1:	cmc    
  41ecd2:	cld    
  41ecd3:	test   BYTE PTR [ebx+edi*4-0x59],0xe1
  41ecd8:	mov    edx,0x935ae7fa
  41ecdd:	ins    DWORD PTR es:[edi],dx
  41ecde:	cld    
  41ecdf:	mov    DWORD PTR [ecx-0x56],edi
  41ece2:	inc    eax
  41ece3:	jmp    0x6b5eeee
  41ece8:	mov    ecx,0x99297794
  41eced:	pop    edx
  41ecee:	ins    BYTE PTR es:[edi],dx
  41ecef:	scas   al,BYTE PTR es:[edi]
  41ecf0:	adc    BYTE PTR [edi-0x62],ch
  41ecf3:	icebp  
  41ecf4:	push   esi
  41ecf5:	ret    
  41ecf6:	inc    DWORD PTR [eax-0x5f]
  41ecf9:	add    al,BYTE PTR [eax]
  41ecfb:	imul   ebp,esi,0x9e898063
  41ed01:	shr    BYTE PTR [ecx-0x18],cl
  41ed04:	popa   
  41ed05:	xlat   BYTE PTR ds:[ebx]
  41ed06:	push   esp
  41ed07:	mov    ds,WORD PTR [edx-0x66d6f02e]
  41ed0d:	pop    ecx
  41ed0e:	push   cs
  41ed0f:	push   ecx
  41ed10:	popf   
  41ed11:	test   BYTE PTR [edx],0x1
  41ed14:	cdq    
  41ed15:	add    al,BYTE PTR [eax]
  41ed17:	imul   esi,DWORD PTR [edi],0x1afcfd10
  41ed1d:	adc    BYTE PTR [eax-0x17],al
  41ed20:	mov    cl,0xef
  41ed22:	and    esi,ecx
  41ed24:	(bad)  
  41ed25:	daa    
  41ed26:	jmp    edi
  41ed28:	sahf   
  41ed29:	ja     0x41ed6e
  41ed2b:	add    BYTE PTR [eax+0xc74c4e],dl
  41ed31:	add    BYTE PTR [eax+0xc],al
  41ed34:	xor    ah,ch
  41ed36:	jge    0x41ed7e
  41ed38:	cld    
  41ed39:	(bad)  
  41ed3a:	icebp  
  41ed3b:	xlat   BYTE PTR ds:[ebx]
  41ed3c:	push   cs
  41ed3d:	inc    eax
  41ed3e:	hlt    
  41ed3f:	xor    al,al
  41ed41:	pop    edi
  41ed42:	cmp    cl,BYTE PTR [ebx-0x79]
  41ed45:	in     eax,0x29
  41ed47:	ret    0x0
  41ed4a:	xor    bh,BYTE PTR [ebx-0x14]
  41ed4d:	push   edi
  41ed4e:	daa    
  41ed4f:	rol    BYTE PTR [edi-0x1b08e832],0x28
  41ed56:	mov    esi,0x74850000
  41ed5b:	jb     0x41edc4
  41ed5d:	mov    ecx,DWORD PTR [edx]
  41ed5f:	scas   eax,DWORD PTR es:[edi]
  41ed60:	in     al,0x1c
  41ed62:	scas   al,BYTE PTR es:[edi]
  41ed63:	add    BYTE PTR [eax],al
  41ed65:	test   DWORD PTR [ebx*2+0x5bdb85f0],eax
  41ed6c:	push   edi
  41ed6d:	mov    esi,DWORD PTR [edx-0x4beb930a]
  41ed73:	fisub  WORD PTR [edx]
  41ed75:	ror    BYTE PTR [edx-0xa],1
  41ed78:	xchg   eax,esi
  41ed7a:	add    esi,ebx
  41ed7c:	jo     0x41eda0
  41ed7e:	scas   al,BYTE PTR es:[edi]
  41ed7f:	add    ch,al
  41ed81:	mov    ecx,DWORD PTR [ebx-0xb]
  41ed84:	sti    
  41ed85:	test   DWORD PTR [ebx+ebx*2+0x1],eax
  41ed89:	adc    DWORD PTR [edi+edi*8-0x1a],0x2
  41ed8e:	daa    
  41ed8f:	mov    edi,0x6d50c081
  41ed94:	test   DWORD PTR [eax],esi
  41ed96:	add    BYTE PTR [eax],al
  41ed98:	mov    edi,0xb208e7ef
  41ed9d:	fimul  WORD PTR [edi+ecx*8-0x9d00946]
  41eda4:	repnz push esi
  41eda6:	jo     0x41ed75
  41eda8:	popf   
  41eda9:	call   0xd228:0xc19d6a00
  41edb0:	and    al,ah
  41edb2:	jge    0x41ed73
  41edb4:	nop
  41edb5:	push   esi
  41edb6:	jge    0x41edad
  41edb8:	mov    DWORD PTR [esi+0x73],esp
  41edbb:	xor    eax,0xfd43a6f5
  41edc0:	add    ch,BYTE PTR [ebx+0xaea6b68]
  41edc6:	je     0x41edf9
  41edc8:	(bad)  
  41edca:	(bad)  
  41edcb:	scas   eax,DWORD PTR es:[edi]
  41edcc:	pushf  
  41edcd:	pushf  
  41edce:	rol    al,cl
  41edd0:	dec    eax
  41edd1:	lock fs or cl,0x48
  41edd6:	iret   
  41edd7:	imul   ebx,DWORD PTR [esp+ecx*4+0x49711273],0x9919ffc0
  41ede2:	div    DWORD PTR [esi+0x6e]
  41ede5:	inc    eax
  41ede6:	aam    0x50
  41ede8:	inc    edi
  41ede9:	pop    edx
  41edea:	frndint 
  41edec:	nop
  41eded:	xor    DWORD PTR [eax+eax*2],edx
  41edf0:	popf   
  41edf1:	fiadd  WORD PTR [ebx+0x73]
  41edf4:	add    eax,0x91427f0d
  41edf9:	or     al,0xde
  41edfb:	inc    BYTE PTR [eax]
  41edfd:	add    BYTE PTR [edx],al
  41edff:	mov    bl,ch
  41ee01:	aas    
  41ee02:	popf   
  41ee03:	mov    al,ds:0x1b8d5c16
  41ee08:	add    al,0x83
  41ee0a:	pop    ebp
  41ee0b:	or     BYTE PTR [ebx],ch
  41ee0d:	mov    esp,eax
  41ee0f:	(bad)  
  41ee10:	ror    DWORD PTR [edx-0x752c7c28],cl
  41ee16:	loopne 0x41ee03
  41ee18:	sar    esp,cl
  41ee1a:	enter  0x7aef,0x5a
  41ee1e:	inc    ebp
  41ee1f:	fst    DWORD PTR [esi]
  41ee21:	pusha  
  41ee22:	lods   eax,DWORD PTR ds:[esi]
  41ee23:	add    ah,BYTE PTR [edi-0x2dbce1fd]
  41ee29:	pop    ss
  41ee2a:	xor    al,dh
  41ee2c:	pop    edx
  41ee2d:	jae    0x41edde
  41ee2f:	push   0x4d
  41ee31:	stc    
  41ee32:	xor    dl,dl
  41ee34:	inc    ebp
  41ee35:	sbb    DWORD PTR [ecx+0x1e03a712],eax
  41ee3b:	inc    ebx
  41ee3c:	mov    ebx,0x2af00800
  41ee41:	jae    0x41edf2
  41ee43:	mov    bh,al
  41ee45:	ret    
  41ee46:	cli    
  41ee47:	test   BYTE PTR [ebx+0x1a2df16f],ch
  41ee4d:	clc    
  41ee4e:	xchg   esi,eax
  41ee4f:	inc    ecx
  41ee50:	in     al,0xff
  41ee52:	loop   0x41eebd
  41ee54:	out    0x7c,al
  41ee56:	pop    eax
  41ee57:	(bad)  
  41ee58:	outs   dx,DWORD PTR ds:[esi]
  41ee59:	rcr    BYTE PTR [edx-0x4a905483],cl
  41ee5f:	add    al,0xba
  41ee61:	inc    ebx
  41ee62:	add    BYTE PTR [eax],al
  41ee64:	cmp    ebp,DWORD PTR gs:[ecx+0x375725d8]
  41ee6b:	fisub  DWORD PTR ds:0x5d141730
  41ee71:	add    dh,BYTE PTR [esi]
  41ee73:	sbb    DWORD PTR [edi+0x66],0xdb9ade16
  41ee7a:	out    0xdd,al
  41ee7c:	xchg   ebx,eax
  41ee7d:	push   0x5089fc3b
  41ee82:	arpl   WORD PTR [ebx+0xf],ax
  41ee85:	sub    eax,0x139518a6
  41ee8a:	daa    
  41ee8b:	add    al,0x1c
  41ee8d:	push   0x10
  41ee8f:	stc    
  41ee90:	mov    ecx,0x1f70237d
  41ee95:	inc    edx
  41ee96:	cli    
  41ee97:	sbb    eax,DWORD PTR [ebp-0x26]
  41ee9a:	lods   al,BYTE PTR ds:[esi]
  41ee9b:	jno    0x41eeee
  41ee9d:	jge    0x41ee9e
  41ee9f:	jo     0x41eeb6
  41eea1:	data16 jae 0x41ee70
  41eea4:	sbb    eax,0xafb9fbc4
  41eea9:	hlt    
  41eeaa:	sti    
  41eeab:	mov    dh,0x50
  41eead:	push   0x6626dcfd
  41eeb2:	aad    0x64
  41eeb4:	fdivrp st(5),st
  41eeb6:	add    esi,DWORD PTR [edx+0x67]
  41eeb9:	pop    edx
  41eeba:	pop    es
  41eebb:	xchg   esi,eax
  41eebc:	jbe    0x41eeaf
  41eebe:	int    0x37
  41eec0:	(bad)  
  41eec1:	xor    al,al
  41eec3:	mov    gs,esp
  41eec5:	aas    
  41eec6:	shr    ebp,0x0
  41eec9:	add    BYTE PTR [esi-0x15a8f330],bl
  41eecf:	and    al,0x8
  41eed1:	mov    esi,0xe1b0ad1d
  41eed6:	cdq    
  41eed7:	add    al,BYTE PTR [eax]
  41eed9:	jb     0x41ee7a
  41eedb:	test   esi,eax
  41eedd:	jne    0x41ee83
  41eedf:	jnp    0x41eedf
  41eee1:	and    BYTE PTR [ecx+0x776a0f67],0x2
  41eee8:	xor    DWORD PTR [ecx+0x6586decc],ebp
  41eeee:	test   al,0x10
  41eef0:	(bad)  
  41eef1:	call   0xe603b794
  41eef6:	sahf   
  41eef7:	aad    0x88
  41eef9:	aad    0x1e
  41eefb:	pop    esp
  41eefc:	imul   ecx
  41eefe:	sahf   
  41eeff:	add    dl,BYTE PTR [ecx+0x1f]
  41ef02:	fs jge 0x41ef47
  41ef05:	sub    DWORD PTR [ecx+0x3e],0x5aa1a242
  41ef0c:	jno    0x41ef2e
  41ef0e:	in     al,dx
  41ef0f:	data16 mov bl,BYTE PTR [ebx*8-0x668b2ea1]
  41ef17:	add    al,BYTE PTR [ecx-0x3355700]
  41ef1d:	mov    dh,BYTE PTR [edx]
  41ef1f:	mov    edx,0xe854cc41
  41ef24:	cmp    al,0x0
  41ef26:	sbb    al,0xaf
  41ef28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef29:	add    BYTE PTR [edi+eiz*8+0x59],al
  41ef2d:	or     BYTE PTR [eax],al
  41ef2f:	add    cl,al
  41ef31:	jge    0x41ef47
  41ef33:	add    DWORD PTR [esp+eax*1],esi
  41ef36:	test   DWORD PTR [ebp-0x2c],eax
  41ef39:	out    0x7f,eax
  41ef3b:	or     BYTE PTR ds:0x39c60004,al
  41ef41:	enter  0xc6fc,0x39
  41ef45:	lock add eax,0x8504346d
  41ef4b:	inc    ebp
  41ef4c:	enter  0x41eb,0xe8
  41ef50:	outs   dx,DWORD PTR ds:[esi]
  41ef51:	aas    
  41ef52:	in     al,0x8b
  41ef54:	(bad)  
  41ef55:	out    0x41,al
  41ef57:	hlt    
  41ef58:	jg     0x41efb0
  41ef5a:	dec    DWORD PTR [eax+eiz*1+0x5189a819]
  41ef61:	repz xor esi,0x45893e48
  41ef68:	cwde   
  41ef69:	dec    esi
  41ef6a:	mov    DWORD PTR [ebp-0x14],eax
  41ef6d:	push   ebx
  41ef6e:	or     BYTE PTR fs:[ebx+eax*1-0xd2c9800],dh
  41ef76:	cld    
  41ef77:	call   ebx
  41ef79:	imul   eax,DWORD PTR [eax],0xdac9c7
  41ef7f:	add    BYTE PTR [ebx+eax*1+0x104015fb],al
  41ef86:	inc    eax
  41ef87:	add    cl,bh
  41ef89:	ret    
  41ef8a:	jno    0x41efa1
  41ef8c:	icebp  
  41ef8d:	inc    eax
  41ef8e:	les    edx,FWORD PTR [eax+0x13]
  41ef91:	imul   eax,DWORD PTR [edi+edi*8],0x669d0000
  41ef98:	add    al,0xf
  41ef9a:	fstp   QWORD PTR [ecx-0x7b]
  41ef9d:	mov    edi,0xfe65d6aa
  41efa2:	push   edx
  41efa3:	pop    ecx
  41efa4:	outs   dx,DWORD PTR ds:[esi]
  41efa5:	jb     0x41efe0
  41efa7:	and    DWORD PTR ds:0x7bd842fd,0xb6703142
  41efb1:	aas    
  41efb2:	xor    ch,BYTE PTR [ecx-0x2f4603a8]
  41efb8:	outs   dx,DWORD PTR ds:[esi]
  41efb9:	sbb    DWORD PTR [ebp+0x4e],0x8
  41efbd:	pushw  ds
  41efbf:	add    BYTE PTR [ecx*1+0x21b19],al
  41efc6:	popf   
  41efc7:	ins    BYTE PTR es:[edi],dx
  41efc8:	inc    eax
  41efc9:	gs adc al,0x60
  41efcc:	inc    esi
  41efcd:	inc    edx
  41efce:	neg    BYTE PTR [ecx+0x59]
  41efd1:	mov    bl,0x9c
  41efd3:	pop    ecx
  41efd4:	add    BYTE PTR [edx-0x6f],ch
  41efd7:	add    esi,eax
  41efd9:	retf   0xf7e3
  41efdc:	test   DWORD PTR [edi+0x4a7b4851],edi
  41efe2:	leave  
  41efe3:	push   edi
  41efe4:	mov    dh,0xe
  41efe6:	call   0x7b8a:0x6ffcba27
  41efed:	out    dx,eax
  41efee:	(bad)
  41eff1:	cld    
  41eff2:	mov    dl,0xf3
  41eff4:	jae    0x41efde
  41eff6:	lahf   
  41eff7:	or     al,0x76
  41eff9:	add    BYTE PTR [eax],0x0
  41effc:	stos   DWORD PTR es:[edi],eax
  41effd:	inc    edi
  41effe:	test   BYTE PTR [edi-0x76ffa464],al
  41f004:	adc    BYTE PTR [eax+0x5c874245],dl
  41f00a:	xchg   esp,edi
  41f00c:	or     DWORD PTR [ecx],eax
  41f00e:	jns    0x41f014
  41f010:	sub    BYTE PTR [ebx],al
  41f012:	xor    al,0x50
  41f014:	jecxz  0x41efe3
  41f016:	popf   
  41f017:	aam    0xba
  41f019:	jg     0x41efc1
  41f01b:	stc    
  41f01c:	xchg   esp,ebx
  41f01e:	imul   esi,ecx,0x97f56676
  41f024:	adc    bh,BYTE PTR [edi-0x5a]
  41f027:	stc    
  41f028:	fwait
  41f029:	jns    0x41f018
  41f02b:	fld    DWORD PTR [ecx-0x32]
  41f02e:	ins    DWORD PTR es:[edi],dx
  41f02f:	aam    0x6e
  41f031:	ins    DWORD PTR es:[edi],dx
  41f032:	or     bl,BYTE PTR ds:[ebp+0x65]
  41f036:	es jl  0x41f018
  41f039:	push   0xf632c961
  41f03e:	xchg   ebp,eax
  41f03f:	or     al,0x55
  41f041:	adc    ecx,DWORD PTR [esi]
  41f043:	add    al,0x9d
  41f045:	fadd   QWORD PTR [ecx]
  41f047:	dec    esp
  41f048:	mov    WORD PTR [edx+0x28e346e],?
  41f04e:	out    0xe5,eax
  41f050:	mov    ch,0x4a
  41f052:	popf   
  41f053:	sub    eax,0x896be487
  41f058:	cwde   
  41f059:	gs adc eax,0xb702746f
  41f05f:	pop    ebx
  41f060:	add    BYTE PTR [eax],al
  41f062:	enter  0xe819,0x3
  41f066:	daa    
  41f067:	mov    ebp,0xf6de82ea
  41f06c:	(bad)  
  41f06d:	fstp   TBYTE PTR [eax]
  41f06f:	gs in  eax,dx
  41f071:	in     eax,0xfb
  41f073:	inc    ecx
  41f074:	out    dx,al
  41f075:	in     eax,0x1b
  41f077:	sub    dl,0x6e
  41f07a:	test   eax,0x77d4c65
  41f07f:	cmc    
  41f080:	int    0x6e
  41f082:	cdq    
  41f083:	ja     0x41f0e8
  41f085:	call   DWORD PTR [ecx+0x607abd65]
  41f08b:	pop    edx
  41f08c:	jmp    DWORD PTR [esi+0x65fc667b]
  41f092:	fdivrp st(0),st
  41f094:	dec    esi
  41f095:	aas    
  41f096:	sar    DWORD PTR [ebp-0x7e046199],1
  41f09c:	mov    edi,0x57b9c1c
  41f0a1:	add    esp,DWORD PTR [eax-0x51793285]
  41f0a7:	pop    ebp
  41f0a8:	fucomip st,st(1)
  41f0aa:	sahf   
  41f0ab:	add    cl,BYTE PTR [ebx-0x399bd94]
  41f0b1:	outs   dx,BYTE PTR ds:[esi]
  41f0b2:	dec    esi
  41f0b3:	xor    bl,cl
  41f0b5:	push   ecx
  41f0b6:	sub    al,0xdf
  41f0b8:	cld    
  41f0b9:	pop    esi
  41f0ba:	and    ah,BYTE PTR [ebp-0x51dc088d]
  41f0c0:	sbb    ch,0x8b
  41f0c3:	data16 cld 
  41f0c5:	mov    cl,0x0
  41f0c7:	add    BYTE PTR [esi-0xf],dl
  41f0ca:	add    ch,BYTE PTR [edx+0x66]
  41f0cd:	adc    BYTE PTR [ebx-0x12],dh
  41f0d0:	add    ebp,DWORD PTR [esi+0x668bdf9a]
  41f0d6:	cld    
  41f0d7:	(bad)  
  41f0d8:	pop    ecx
  41f0d9:	inc    edx
  41f0da:	pop    es
  41f0db:	out    dx,al
  41f0dc:	xor    ecx,DWORD PTR [edx-0x78]
  41f0df:	lods   al,BYTE PTR ds:[esi]
  41f0e0:	outs   dx,BYTE PTR ds:[esi]
  41f0e1:	fild   WORD PTR [esi-0x73f9f0f]
  41f0e7:	call   0x7329b143
  41f0ec:	fld    QWORD PTR [esi+eax*4-0x47]
  41f0f0:	inc    edi
  41f0f1:	shr    bh,0x87
  41f0f4:	aaa    
  41f0f5:	bound  esi,QWORD PTR gs:[eax-0x62]
  41f0f9:	cmp    esp,0xff7822ee
  41f0ff:	call   0x5c466ca2
  41f104:	pop    edx
  41f105:	dec    esp
  41f106:	dec    esi
  41f107:	add    BYTE PTR [ebx+0x1284cd5],dh
  41f10d:	mov    edi,0x81d21471
  41f112:	jns    0x41f0ec
  41f114:	dec    ebx
  41f115:	xchg   ax,ax
  41f117:	sar    BYTE PTR [eax+0x1],0x71
  41f11b:	or     bh,ch
  41f11d:	std    
  41f11e:	imul   eax,DWORD PTR [eax],0x2c4cd5a3
  41f124:	mov    edi,0x920ff03b
  41f129:	inc    BYTE PTR [edi+0x74]
  41f12c:	add    BYTE PTR [eax],al
  41f12e:	cmp    ch,BYTE PTR [eax+0x649e5171]
  41f134:	ret    
  41f135:	inc    ebp
  41f136:	and    BYTE PTR [eax],dl
  41f138:	add    BYTE PTR [eax],al
  41f13a:	inc    esp
  41f13b:	retf   
  41f13c:	add    eax,0x41bf396a
  41f141:	in     al,0x32
  41f143:	add    BYTE PTR [eax],al
  41f145:	add    BYTE PTR [ebp+eiz*8+0x71],cl
  41f149:	mov    ah,0x6c
  41f14b:	sub    eax,0xeaf4001f
  41f150:	inc    ecx
  41f151:	lock sti 
  41f153:	scas   al,BYTE PTR es:[edi]
  41f154:	cld    
  41f155:	dec    edi
  41f156:	jg     0x41f114
  41f158:	dec    esp
  41f159:	push   0xffffffe8
  41f15b:	cmp    cl,BYTE PTR [ecx-0x3e399b83]
  41f161:	jnp    0x419b473c
  41f167:	mov    esi,0x6b9b167a
  41f16c:	loopne 0x41f0f9
  41f16e:	add    eax,esi
  41f170:	or     esi,DWORD PTR [edi-0x3878b04c]
  41f176:	adc    al,0xe5
  41f178:	inc    ecx
  41f179:	int3   
  41f17a:	je     0x41f142
  41f17c:	outs   dx,DWORD PTR ds:[esi]
  41f17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f17e:	mov    ah,0xff
  41f180:	xchg   BYTE PTR [ebp-0x63],bh
  41f183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f184:	cmp    BYTE PTR [edx-0x69],0x59
  41f188:	hlt    
  41f189:	pop    es
  41f18a:	es push esp
  41f18c:	(bad)  
  41f18d:	push   ebx
  41f18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f190:	shl    BYTE PTR [ebx],1
  41f192:	add    BYTE PTR [eax],al
  41f194:	push   ss
  41f195:	push   cs
  41f196:	cld    
  41f197:	std    
  41f198:	loopne 0x41f13f
  41f19a:	jg     0x41f1de
  41f19c:	test   DWORD PTR [ebp+0x7f],edx
  41f19f:	inc    edx
  41f1a0:	jge    0x41f1f9
  41f1a2:	jg     0x41f1e6
  41f1a4:	imul   esp,DWORD PTR [ecx-0x80],0xfb5d497a
  41f1ab:	or     DWORD PTR [esi+edi*2],0x1e16fc6b
  41f1b2:	pop    eax
  41f1b3:	sbb    BYTE PTR [ebp+0x65],0xf6
  41f1b7:	mov    BYTE PTR [ebp-0x5ab194f7],ah
  41f1bd:	fsub   st,st(5)
  41f1bf:	rcr    DWORD PTR [ebp-0x63748010],cl
  41f1c5:	pop    ecx
  41f1c6:	add    BYTE PTR [edi+0xf91e],al
  41f1cc:	popf   
  41f1cd:	lock aas 
  41f1cf:	lds    ebx,FWORD PTR [esi]
  41f1d1:	add    DWORD PTR [ecx],eax
  41f1d3:	add    BYTE PTR [ebp-0x6285a7a6],bl
  41f1d9:	pop    ecx
  41f1da:	add    BYTE PTR [ebp+ebx*8+0x330d0684],al
  41f1e1:	fsubr  DWORD PTR [eax]
  41f1e3:	jmp    edx
  41f1e5:	pop    eax
  41f1e6:	ja     0x41f170
  41f1e8:	jns    0x41f244
  41f1ea:	add    BYTE PTR [eax],al
  41f1ec:	and    al,0xed
  41f1ee:	jg     0x41f20f
  41f1f0:	pushf  
  41f1f1:	pop    ecx
  41f1f2:	add    dh,bh
  41f1f4:	push   ds
  41f1f5:	mov    cl,0x1
  41f1f7:	add    BYTE PTR [eax],al
  41f1f9:	add    BYTE PTR [ebp+0x47c3bde0],bl
  41f1ff:	add    ch,bl
  41f201:	int    0x15
  41f203:	add    DWORD PTR [esp+eax*2+0x2e],esp
  41f207:	or     esp,esi
  41f209:	mov    cl,0x4d
  41f20b:	sbb    ebp,eax
  41f20d:	add    ebx,DWORD PTR [ebp+0x23fc268d]
  41f213:	xchg   DWORD PTR [ecx+0x24],edi
  41f216:	and    BYTE PTR [edx-0x1a],0x69
  41f21a:	sbb    eax,0x9d03e81b
  41f21f:	test   DWORD PTR [edi-0x44282900],esp
  41f225:	test   bh,ah
  41f227:	pop    ebp
  41f228:	out    0xf0,eax
  41f22a:	mov    ebx,0xdf78daec
  41f22f:	stos   BYTE PTR es:[edi],al
  41f230:	push   ss
  41f231:	jns    0x41f212
  41f233:	xchg   esi,eax
  41f234:	push   ss
  41f235:	imul   ebp,DWORD PTR [edi+0x3ac3dd12],0xffffff85
  41f23c:	mov    ds:0x9ac827f8,al
  41f241:	aam    0xb4
  41f243:	out    0xd0,eax
  41f245:	test   edx,0x19f70b6a
  41f24b:	bound  ebx,QWORD PTR [ebx-0xf]
  41f24e:	out    0x6a,al
  41f250:	lds    esp,FWORD PTR [eax-0x36629df6]
  41f256:	gs dec ebx
  41f258:	sub    BYTE PTR [eax],al
  41f25a:	popf   
  41f25b:	mov    eax,0x7e95
  41f260:	add    dl,BYTE PTR [esi]
  41f262:	es sub eax,0x3e7bf2b
  41f268:	popf   
  41f269:	xlat   BYTE PTR ds:[ebx]
  41f26a:	out    dx,al
  41f26b:	shl    BYTE PTR [ecx-0x47],cl
  41f26e:	mov    ch,0x6a
  41f270:	scas   eax,DWORD PTR es:[edi]
  41f271:	call   0xc864:0x8acac3d8
  41f278:	ret    
  41f279:	popa   
  41f27a:	(bad)  
  41f27b:	call   0xe5b43a0b
  41f280:	push   0xeeebe842
  41f285:	pusha  
  41f286:	pop    ebp
  41f287:	aas    
  41f288:	pop    edx
  41f289:	mov    ah,0x88
  41f28b:	lds    esp,FWORD PTR [ebx]
  41f28d:	ins    DWORD PTR es:[edi],dx
  41f28e:	sub    edi,DWORD PTR [edx]
  41f290:	adc    bh,BYTE PTR [edx]
  41f292:	mov    BYTE PTR [edx-0x7a],ch
  41f295:	pusha  
  41f296:	cld    
  41f297:	jmp    0x631db79d
  41f29c:	and    ecx,DWORD PTR ds:0xb89ee8ff
  41f2a2:	xchg   BYTE PTR [edi*8-0x66227f74],ch
  41f2a9:	add    al,BYTE PTR [eax]
  41f2ab:	ds xchg edx,eax
  41f2ad:	pop    eax
  41f2ae:	dec    edi
  41f2af:	pusha  
  41f2b0:	dec    ebp
  41f2b1:	cmp    esp,eax
  41f2b3:	sub    al,0xc1
  41f2b5:	pusha  
  41f2b6:	cld    
  41f2b7:	jmp    0x81847c5a
  41f2bc:	(bad)  
  41f2bd:	hlt    
  41f2be:	jmp    0x41f29b
  41f2c0:	pop    esi
  41f2c1:	popa   
  41f2c2:	xchg   esp,ebx
  41f2c4:	add    BYTE PTR [eax],al
  41f2c6:	mov    dh,0x18
  41f2c8:	mov    cl,0xc1
  41f2ca:	cdq    
  41f2cb:	add    al,BYTE PTR [eax]
  41f2cd:	out    0x1c,al
  41f2cf:	(bad)  
  41f2d1:	call   0x9dc27e74
  41f2d6:	mov    eax,ds:0x45720002
  41f2db:	pop    ecx
  41f2dc:	mov    ch,bh
  41f2de:	jbe    0x41f327
  41f2e0:	inc    edx
  41f2e1:	das    
  41f2e2:	sahf   
  41f2e3:	test   ebp,esi
  41f2e5:	imul   BYTE PTR [edx-0x4b]
  41f2e8:	(bad)  
  41f2e9:	call   0xe1877e8c
  41f2ee:	sbb    eax,0xf0f873a1
  41f2f3:	pusha  
  41f2f4:	dec    esp
  41f2f5:	add    BYTE PTR [ebx-0xbecf00e],ah
  41f2fb:	add    al,0x81
  41f2fd:	rol    bl,0xe0
  41f300:	cmp    BYTE PTR [ecx],al
  41f302:	les    eax,FWORD PTR [esi+eax*8]
  41f305:	inc    ebp
  41f306:	rol    DWORD PTR ds:0x5c345c6,0xb
  41f30d:	mov    dh,0xc9
  41f30f:	jmp    0xdfc9d3d1
  41f314:	dec    eax
  41f315:	add    eax,0xec41dc40
  41f31a:	stc    
  41f31b:	sbb    ecx,DWORD PTR [esp+eax*4]
  41f31e:	dec    eax
  41f31f:	pop    es
  41f320:	add    BYTE PTR [eax],al
  41f322:	push   ebx
  41f323:	xchg   edx,eax
  41f324:	cmp    eax,0x852ac0c
  41f329:	dec    eax
  41f32a:	add    BYTE PTR [eax],al
  41f32c:	mov    ecx,esi
  41f32e:	mov    BYTE PTR [esi-0x68],al
  41f331:	fs jg  0x41f36c
  41f334:	dec    ebx
  41f335:	mov    edi,0x427a8d03
  41f33a:	bound  eax,QWORD PTR [ebx+0x571065c]
  41f340:	mov    ebp,0x38ebf09f
  41f345:	xchg   DWORD PTR [ecx-0xc],esp
  41f348:	xor    al,0x87
  41f34a:	jns    0x41f340
  41f34c:	xor    al,0x5b
  41f34e:	adc    BYTE PTR [ebp+0xf000404],0x2b
  41f355:	inc    ebp
  41f356:	adc    BYTE PTR [ebx+0x3986f42a],cl
  41f35c:	and    al,0x36
  41f35e:	sti    
  41f35f:	jne    0x41f319
  41f361:	jmp    0xc6ba03b9
  41f366:	jo     0x41f372
  41f368:	ja     0x41f3a9
  41f36a:	in     al,dx
  41f36b:	add    BYTE PTR [edx-0x62fe0561],bh
  41f371:	add    al,0xe9
  41f373:	cld    
  41f374:	test   al,0x55
  41f376:	push   cs
  41f377:	inc    eax
  41f378:	popf   
  41f379:	ret    0x24c0
  41f37c:	popf   
  41f37d:	imul   ebp,DWORD PTR [ebx],0xec953abf
  41f383:	push   ebp
  41f384:	and    al,BYTE PTR es:[ecx+0x41088e6]
  41f38b:	add    BYTE PTR [ecx],ch
  41f38d:	sub    eax,0xe683
  41f392:	mov    bl,0x68
  41f394:	jl     0x41f353
  41f396:	popf   
  41f397:	imul   eax,DWORD PTR [eax],0xec557481
  41f39d:	cmp    eax,0xc582616
  41f3a2:	xor    ebp,DWORD PTR ds:0x41cdd7fd
  41f3a8:	sar    eax,0x6a
  41f3ab:	test   al,0xd3
  41f3ad:	out    0xfa,eax
  41f3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b0:	addr16 cld 
  41f3b2:	pop    edx
  41f3b3:	mov    esp,0x6952fec4
  41f3b8:	adc    dh,BYTE PTR [bx+di+0x3b]
  41f3bc:	sar    bh,0x37
  41f3bf:	dec    edi
  41f3c0:	and    eax,0x698241
  41f3c5:	jl     0x41f411
  41f3c7:	scas   al,BYTE PTR es:[edi]
  41f3c8:	mov    esp,0xe6699d24
  41f3cd:	or     eax,0x1fa760
  41f3d2:	popf   
  41f3d3:	cmp    eax,0x86c3aff
  41f3d8:	add    al,0x0
  41f3da:	nop
  41f3db:	sub    eax,DWORD PTR [ecx-0x1296fc86]
  41f3e1:	or     esp,ebx
  41f3e3:	lods   eax,DWORD PTR ds:[esi]
  41f3e4:	data16 (bad) 
  41f3e6:	and    eax,0x9ee870a6
  41f3eb:	add    ah,BYTE PTR ds:0xa35fe7be
  41f3f1:	push   0x515dd5a
  41f3f6:	add    BYTE PTR [eax],al
  41f3f8:	mov    al,ds:0xc968f484
  41f3fd:	pop    esi
  41f3fe:	data16 out 0xc7,al
  41f401:	add    esi,DWORD PTR [ebx+edx*1+0x24]
  41f405:	enter  0x7ede,0xf2
  41f409:	aad    0xab
  41f40b:	inc    eax
  41f40c:	pusha  
  41f40d:	push   cs
  41f40e:	es pop ds
  41f410:	popf   
  41f411:	add    dl,dl
  41f413:	sbb    DWORD PTR ds:0x904d4e0,ebx
  41f419:	sub    eax,0x2fae66a
  41f41e:	cmp    al,0x10
  41f420:	jne    0x41f422
  41f422:	test   al,0x66
  41f424:	jns    0x41f3b0
  41f426:	imul   edx,eax,0x7ae65e73
  41f42c:	xlat   BYTE PTR ds:[ebx]
  41f42d:	pop    edx
  41f42e:	imul   esp,DWORD PTR [eax],0x10920315
  41f434:	and    al,0xc5
  41f436:	fiadd  WORD PTR [eax+0x7adbd712]
  41f43c:	xlat   BYTE PTR ds:[ebx]
  41f43d:	push   edx
  41f43e:	outs   dx,DWORD PTR ds:[esi]
  41f43f:	mov    dh,0x96
  41f441:	mov    dl,0x7d
  41f443:	adc    DWORD PTR [ecx-0xf],edx
  41f446:	es add al,0x30
  41f449:	enter  0x7b6e,0xdf
  41f44d:	pop    edx
  41f44e:	and    DWORD PTR [ebx+0x3e703ca],eax
  41f454:	test   al,0x80
  41f456:	push   0x615e1166
  41f45b:	imul   eax,DWORD PTR [eax],0x0
  41f45e:	add    cl,dh
  41f460:	out    0x3,eax
  41f462:	popf   
  41f463:	pop    ebp
  41f464:	mov    bl,0x5b
  41f466:	stc    
  41f467:	idiv   edi
  41f469:	cmp    BYTE PTR [edi-0x1f72003e],cl
  41f46f:	mov    edx,0x8acc2ac6
  41f474:	jmp    0x41f4e0
  41f476:	jne    0x41f46d
  41f478:	push   ebp
  41f479:	mov    esi,0xaa885557
  41f47e:	scas   al,BYTE PTR es:[edi]
  41f47f:	cmp    DWORD PTR [edi-0x92bd0a],0x40549ee8
  41f489:	rcr    BYTE PTR [ecx-0x5ef87bf1],1
  41f48f:	add    al,BYTE PTR [eax]
  41f491:	jae    0x41f472
  41f493:	hlt    
  41f494:	add    BYTE PTR [ecx+ecx*1+0x5e],0xfa
  41f499:	mov    eax,ds:0x5cfcc116
  41f49e:	or     ebx,DWORD PTR [edx]
  41f4a0:	(bad)  
  41f4a1:	call   0x24c8a744
  41f4a6:	aad    0x5e
  41f4a8:	adc    al,ch
  41f4aa:	mov    edx,es
  41f4ac:	jmp    FWORD PTR [ecx+0x43]
  41f4af:	mov    ch,0xfe
  41f4b1:	call   0x674ef754
  41f4b6:	cld    
  41f4b7:	pop    esp
  41f4b8:	cld    
  41f4b9:	jmp    0xe8957b95
  41f4be:	sahf   
  41f4bf:	add    cl,BYTE PTR [ecx-0x4effffcc]
  41f4c5:	mov    dh,BYTE PTR [ebx]
  41f4c7:	jno    0x41f482
  41f4c9:	shl    bl,1
  41f4cb:	ins    BYTE PTR es:[edi],dx
  41f4cc:	rcl    cl,0x4b
  41f4cf:	(bad)  
  41f4d0:	call   0x326b77d9
  41f4d5:	shr    BYTE PTR [ecx-0x17],0xee
  41f4d9:	pop    ebp
  41f4da:	adc    bh,cl
  41f4dc:	scas   eax,DWORD PTR es:[edi]
  41f4dd:	ret    0x63ff
  41f4e0:	pop    esi
  41f4e1:	shl    BYTE PTR [edi],1
  41f4e3:	add    BYTE PTR [edi+0x41896c9f],cl
  41f4e9:	rol    DWORD PTR [ecx-0x7908cf40],1
  41f4ef:	jbe    0x41f4b5
  41f4f1:	xlat   BYTE PTR ds:[ebx]
  41f4f2:	inc    ecx
  41f4f3:	hlt    
  41f4f4:	ja     0x41f4b7
  41f4f6:	adc    dh,bh
  41f4f8:	call   0x103b:0xb423f608
  41f4ff:	lea    eax,[edx]
  41f501:	pop    ebp
  41f502:	dec    esp
  41f503:	(bad)  
  41f504:	test   DWORD PTR [edx],0x24d1ff50
  41f50a:	push   ss
  41f50b:	inc    eax
  41f50c:	les    edi,FWORD PTR [edi-0x40]
  41f50f:	or     al,0x41
  41f511:	shl    DWORD PTR [ecx+0x8],0x2e
  41f515:	popf   
  41f516:	sti    
  41f517:	cmp    dl,al
  41f519:	add    DWORD PTR [eax+edx*1+0x6b],esi
  41f51d:	pushf  
  41f51e:	hlt    
  41f51f:	mov    eax,ecx
  41f521:	out    dx,al
  41f522:	aaa    
  41f523:	xchg   DWORD PTR [edi+edi*8+0xffff],edi
  41f52a:	mov    dh,0x71
  41f52c:	out    0x33,eax
  41f52e:	jmp    FWORD PTR [ebx-0x14]
  41f531:	mov    eax,DWORD PTR [edx-0x26]
  41f534:	(bad)  
  41f535:	call   0x3c9a72
  41f53a:	iret   
  41f53b:	pushf  
  41f53c:	add    al,0x85
  41f53e:	add    al,0x53
  41f540:	pop    es
  41f541:	and    DWORD PTR [edx+0x1b4ffc5a],0xc
  41f548:	aam    0x12
  41f54a:	test   BYTE PTR [esi],al
  41f54c:	xchg   DWORD PTR [ebp-0x50],esi
  41f54f:	mov    esi,0xe5babff2
  41f554:	xchg   DWORD PTR [edi+0xe0],eax
  41f55a:	(bad)  
  41f55b:	xchg   ebx,eax
  41f55c:	hlt    
  41f55d:	sbb    DWORD PTR [ebp+0x17ff7c0d],0xffffffa7
  41f564:	push   0x1a21a38
  41f569:	add    BYTE PTR [ebp+0x5ae7fd95],bl
  41f56f:	imul   eax,DWORD PTR [eax],0x5496ea00
  41f575:	cld    
  41f576:	mov    cl,bh
  41f578:	adc    DWORD PTR [eax-0x63],eax
  41f57b:	lock sub esi,ebp
  41f57e:	cmc    
  41f57f:	out    0xb6,al
  41f581:	adc    eax,0xbf1f29a6
  41f586:	pop    ss
  41f587:	xchg   edx,eax
  41f588:	(bad)  
  41f589:	jg     0x41f54f
  41f58b:	xchg   edi,eax
  41f58c:	in     eax,dx
  41f58d:	or     al,0x0
  41f58f:	add    BYTE PTR [esi],bl
  41f591:	sub    al,BYTE PTR [eax]
  41f593:	push   eax
  41f594:	push   ss
  41f595:	push   ebp
  41f596:	pop    eax
  41f597:	imul   ebx,DWORD PTR [edx+0x5d840069],0x92510bb5
  41f5a1:	jl     0x41f523
  41f5a3:	dec    BYTE PTR [edx-0x533ea797]
  41f5a9:	push   0x0
  41f5ab:	test   BYTE PTR [ebp+0x15],bl
  41f5ae:	cld    
  41f5af:	push   esp
  41f5b0:	es test al,0x58
  41f5b3:	and    eax,0x5d0069a1
  41f5b8:	ret    
  41f5b9:	xchg   edx,eax
  41f5ba:	aas    
  41f5bb:	xor    BYTE PTR [eax+edi*1+0x4e],ah
  41f5bf:	and    dl,BYTE PTR ss:[ecx]
  41f5c2:	add    DWORD PTR [eax],eax
  41f5c4:	popf   
  41f5c5:	repz das 
  41f5c7:	push   esi
  41f5c8:	adc    BYTE PTR [ecx*8-0x3096c502],bl
  41f5cf:	mov    BYTE PTR [ebx-0x626fdb18],bl
  41f5d5:	push   ebp
  41f5d6:	sti    
  41f5d7:	mov    BYTE PTR [ecx-0x498588fe],al
  41f5dd:	mov    ah,BYTE PTR [edi-0x518c2a3f]
  41f5e3:	add    bl,BYTE PTR [ebp+0x655bd902]
  41f5e9:	pop    ss
  41f5ea:	sbb    bh,ch
  41f5ec:	test   al,0x89
  41f5ee:	ins    DWORD PTR es:[edi],dx
  41f5ef:	retf   
  41f5f0:	repz pop edx
  41f5f2:	out    0xd8,al
  41f5f4:	add    BYTE PTR [eax],al
  41f5f6:	jecxz  0x41f5cd
  41f5f8:	ds xchg esp,eax
  41f5fa:	fcomp  DWORD PTR [ebx+0x25]
  41f5fd:	(bad)
  41f600:	mov    bl,0xcc
  41f602:	and    eax,0x5d0ddb1d
  41f607:	add    bl,dl
  41f609:	dec    eax
  41f60a:	xor    al,0xf2
  41f60c:	jae    0x41f68b
  41f60e:	mov    ds:0xd803e701,al
  41f613:	add    edi,ebx
  41f615:	jmp    0x7c1b:0xd39a026a
  41f61c:	inc    esi
  41f61d:	add    eax,0x8270029d
  41f622:	inc    BYTE PTR [ebx]
  41f624:	out    0x3,eax
  41f626:	mov    BYTE PTR [edx],dh
  41f628:	inc    eax
  41f629:	or     al,0x16
  41f62b:	sbb    esi,0x1a029d04
  41f631:	mov    ah,0x71
  41f633:	xor    al,BYTE PTR [eax-0x4]
  41f636:	pop    ss
  41f637:	add    DWORD PTR [esi],0x3a029d05
  41f63d:	mov    ah,0x59
  41f63f:	xor    ch,BYTE PTR [ecx+0x48]
  41f642:	jle    0x41f630
  41f644:	cli    
  41f645:	mov    ebp,DWORD PTR [eax]
  41f647:	sbb    ebp,eax
  41f649:	add    ebx,DWORD PTR [ebp+0x385d826a]
  41f64f:	pop    edx
  41f650:	push   ss
  41f651:	xchg   ecx,eax
  41f652:	fdivr  st,st(6)
  41f654:	inc    DWORD PTR [eax-0x16ffd33e]
  41f65a:	add    BYTE PTR [eax],al
  41f65c:	adc    ebp,DWORD PTR ds:0x59defbf4
  41f662:	mov    esp,DWORD PTR [edi-0x43]
  41f665:	pop    ecx
  41f666:	cld    
  41f667:	jmp    0x5d144dba
  41f66c:	pop    ss
  41f66d:	loop   0x41f66d
  41f66f:	call   0x5fc8a912
  41f674:	xor    eax,0x19e9fc59
  41f679:	js     0x41f6d2
  41f67b:	call   0x87c8f91e
  41f680:	fstp   QWORD PTR [eax-0x4]
  41f683:	jmp    0xadca2ac7
  41f688:	xor    dl,0x86
  41f68b:	addr16 sub eax,0xde9fc59
  41f691:	or     BYTE PTR [edi+0x50029ee8],0x60
  41f698:	pop    ds
  41f699:	(bad)  
  41f69b:	call   0x6ddf783e
  41f6a0:	mov    eax,ds:0xd5de0002
  41f6a5:	loope  0x41f690
  41f6a7:	jmp    0x5836:0x678b029e
  41f6ae:	cld    
  41f6af:	jmp    0x973ebfe7
  41f6b4:	sbb    eax,DWORD PTR [ebp+0xb]
  41f6b7:	push   ss
  41f6b8:	pop    esp
  41f6b9:	mov    al,ch
  41f6bb:	adc    bl,bl
  41f6bd:	add    eax,0x3e00
  41f6c2:	sub    dl,BYTE PTR [eax-0x19]
  41f6c5:	cli    
  41f6c6:	sahf   
  41f6c7:	add    al,BYTE PTR [eax]
  41f6c9:	lahf   
  41f6ca:	bound  esp,QWORD PTR ds:0xff6ae808
  41f6d0:	push   esp
  41f6d1:	add    BYTE PTR [edx+eax*4],cl
  41f6d4:	ret    0xb3fe
  41f6d7:	mov    bl,al
  41f6d9:	pop    edi
  41f6da:	test   BYTE PTR [eax],0x0
  41f6dd:	push   ebx
  41f6de:	mov    ch,BYTE PTR [eax+0x0]
  41f6e1:	(bad)  
  41f6e2:	or     esi,DWORD PTR [ecx+0x72044074]
  41f6e8:	mov    bl,0x8
  41f6ea:	cmc    
  41f6eb:	add    al,0x0
  41f6ed:	pop    ebx
  41f6ee:	jg     0x41f6e3
  41f6f0:	or     cl,0x38
  41f6f3:	or     eax,DWORD PTR [edi-0x50231ff]
  41f6f9:	adc    BYTE PTR [edi-0x35],dh
  41f6fc:	add    BYTE PTR [ebx+0x29],cl
  41f6ff:	shl    DWORD PTR ds:0xfffddc9f,cl
  41f705:	jmp    FWORD PTR [edx]
  41f707:	add    eax,DWORD PTR [edi-0x1f779]
  41f70d:	jmp    DWORD PTR [ecx+0x1]
  41f710:	cwde   
  41f711:	sbb    esp,0x4
  41f714:	je     0x41f71d
  41f716:	das    
  41f717:	cmc    
  41f718:	out    0x39,eax
  41f71a:	jb     0x41f6ff
  41f71c:	sti    
  41f71d:	inc    ebx
  41f71e:	out    dx,eax
  41f71f:	adc    DWORD PTR [ecx+eax*1-0x7c],0x4
  41f724:	jb     0x41f708
  41f726:	add    BYTE PTR [eax],al
  41f728:	(bad)  
  41f72a:	out    0x12,eax
  41f72c:	mov    ah,0xfe
  41f72e:	mov    BYTE PTR [edi+0x390],al
  41f734:	xchg   esp,eax
  41f735:	loope  0x41f709
  41f737:	(bad)  
  41f738:	jmp    0x41f6d4
  41f73a:	std    
  41f73b:	push   DWORD PTR [esp+ebp*8+0x30]
  41f73f:	(bad)  
  41f740:	xor    ah,dl
  41f742:	xchg   DWORD PTR [edi+0x3e0],eax
  41f748:	mov    ecx,0x9d0770be
  41f74d:	sbb    DWORD PTR [edi+0x12],ebx
  41f750:	std    
  41f751:	pop    ebx
  41f752:	sar    bh,0x29
  41f755:	jmp    0x6a74f645
  41f75a:	mov    al,0xfc
  41f75c:	push   ebx
  41f75d:	fild   WORD PTR [esi+0x699c8f]
  41f763:	push   eax
  41f764:	sbb    bl,BYTE PTR [eax]
  41f766:	pop    edi
  41f767:	mov    ah,0x7d
  41f769:	push   0x0
  41f76b:	add    ch,dh
  41f76d:	addr16 inc esi
  41f76f:	std    
  41f770:	add    ch,BYTE PTR [eax-0x2b92fbb9]
  41f776:	ret    
  41f777:	call   DWORD PTR [edi+0x2c]
  41f77a:	mov    ch,0x88
  41f77c:	stc    
  41f77d:	jp     0x41f730
  41f77f:	mov    bl,BYTE PTR [edx]
  41f781:	add    WORD PTR [eax],ax
  41f784:	popf   
  41f785:	cdq    
  41f786:	inc    esi
  41f787:	inc    edx
  41f788:	shr    BYTE PTR [ecx-0x77],cl
  41f78b:	inc    edx
  41f78c:	add    BYTE PTR [eax],al
  41f78e:	(bad)
  41f791:	jmp    0x41f742
  41f793:	test   eax,0xa1fa7f00
  41f798:	add    DWORD PTR [eax],eax
  41f79a:	popf   
  41f79b:	pop    eax
  41f79c:	pop    edi
  41f79d:	jmp    FWORD PTR [edx-0x25774e28]
  41f7a3:	add    DWORD PTR [esi],edi
  41f7a5:	stc    
  41f7a6:	call   0x8b20:0x9bf8460
  41f7ad:	mov    ebp,fs
  41f7af:	push   0x0
  41f7b1:	add    ah,bl
  41f7b3:	les    ecx,FWORD PTR [eax+0x73]
  41f7b6:	ror    esi,cl
  41f7b8:	xchg   edi,eax
  41f7b9:	push   ebx
  41f7ba:	pushf  
  41f7bb:	imul   eax,DWORD PTR [eax],0x5ea570e8
  41f7c1:	cld    
  41f7c2:	sbb    DWORD PTR [ecx+0x22828d4],ebp
  41f7c8:	sub    cl,BYTE PTR [eax]
  41f7ca:	in     eax,dx
  41f7cb:	push   edi
  41f7cc:	repz jmp FWORD PTR [ebp+0x198ce6c2]
  41f7d3:	mov    edx,0x8b9d03e7
  41f7d8:	hlt    
  41f7d9:	mov    dl,BYTE PTR [esi-0x3967827f]
  41f7df:	add    edi,esp
  41f7e1:	add    esp,DWORD PTR [eax]
  41f7e3:	jg     0x41f7f3
  41f7e5:	add    ebx,DWORD PTR [ebp-0x110999fe]
  41f7eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ed:	add    esp,ebx
  41f7ef:	mov    esp,0x255
  41f7f4:	arpl   WORD PTR [edi-0x2d],dx
  41f7f7:	pop    ebx
  41f7f8:	stc    
  41f7f9:	in     al,dx
  41f7fa:	ss cmc 
  41f7fc:	mov    dl,0x2
  41f7fe:	jno    0x41f7c6
  41f800:	jmp    0x15f8214d
  41f805:	imul   bp,WORD PTR [edi-0x5a],0xab8b
  41f80b:	or     ebp,DWORD PTR [ebx-0x51]
  41f80e:	jno    0x41f7eb
  41f810:	call   0xf136:0xc9f92683
  41f817:	pusha  
  41f818:	jge    0x41f874
  41f81a:	jae    0x41f7a0
  41f81c:	jbe    0x41f81f
  41f81e:	out    0x3,eax
  41f820:	dec    ebp
  41f821:	inc    eax
  41f822:	stos   DWORD PTR es:[edi],eax
  41f823:	pusha  
  41f824:	mov    ds:0x22072583,al
  41f829:	rcr    dl,0x5f
  41f82c:	scas   eax,DWORD PTR es:[edi]
  41f82d:	data16 clc 
  41f82f:	ret    
  41f830:	mov    dl,BYTE PTR [ecx]
  41f832:	fisttp QWORD PTR [ebp-0x6cf0a4f1]
  41f838:	rol    BYTE PTR [ebx],cl
  41f83a:	out    0x3,eax
  41f83c:	jmp    0x41f822
  41f83e:	jno    0x41f7c3
  41f840:	into   
  41f841:	add    eax,DWORD PTR [eax]
  41f843:	jmp    0x794581e6
  41f848:	inc    BYTE PTR es:[edx+0x36c075b0]
  41f84f:	sub    al,0x99
  41f851:	into   
  41f852:	pop    ds
  41f853:	bound  ebx,QWORD PTR [eax+0x6]
  41f856:	sub    DWORD PTR [eax+0x4f330000],0x22dee2d7
  41f860:	mov    edi,0xbf832513
  41f865:	in     eax,dx
  41f866:	out    dx,al
  41f867:	scas   al,BYTE PTR es:[edi]
  41f868:	cld    
  41f869:	aam    0xba
  41f86b:	in     al,dx
  41f86c:	aas    
  41f86d:	jmp    0x644d3a91
  41f872:	popa   
  41f873:	rcr    BYTE PTR [esi],1
  41f875:	bound  ebx,QWORD PTR [esi]
  41f877:	mov    dl,0xfe
  41f879:	call   0x7975841c
  41f87e:	xor    DWORD PTR [edi],0x8a4a3fbb
  41f884:	dec    edx
  41f885:	xor    DWORD PTR [esi],edx
  41f887:	adc    DWORD PTR [ebx-0x18],0xffffff9e
  41f88b:	add    al,BYTE PTR [ecx-0x3da9d933]
  41f891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f892:	imul   edx,DWORD PTR [ecx+ecx*4+0x18],0xffffffdb
  41f897:	jl     0x41f90b
  41f899:	adc    DWORD PTR [esi-0x6117a86d],edx
  41f89f:	add    dh,BYTE PTR [edx+0x5e]
  41f8a2:	and    ecx,ebx
  41f8a4:	cld    
  41f8a5:	jmp    0xf2caf774
  41f8aa:	push   es
  41f8ab:	idiv   dl
  41f8ad:	out    0xf3,al
  41f8af:	push   esi
  41f8b0:	jb     0x41f887
  41f8b2:	jmp    0x41f8a4
  41f8b4:	out    dx,eax
  41f8b5:	sti    
  41f8b6:	pop    esi
  41f8b7:	push   ebp
  41f8b8:	xchg   BYTE PTR [edx+ebx*8],ah
  41f8bb:	mov    dh,0x5d
  41f8bd:	add    BYTE PTR [eax],al
  41f8bf:	add    BYTE PTR ds:0x910000c3,ch
  41f8c5:	mov    eax,ebp
  41f8c7:	sbb    DWORD PTR [eax+0x1d],0x4f
  41f8cb:	push   esi
  41f8cc:	mov    bl,0xe6
  41f8ce:	pop    ecx
  41f8cf:	icebp  
  41f8d0:	cli    
  41f8d1:	mov    bl,0x87
  41f8d3:	clc    
  41f8d4:	int    0x62
  41f8d6:	in     al,dx
  41f8d7:	test   DWORD PTR [ebx],ebp
  41f8d9:	cmp    al,BYTE PTR [ebx]
  41f8db:	xor    al,BYTE PTR [esi+eiz*8]
  41f8de:	add    DWORD PTR [eax],0x7d7f0144
  41f8e4:	inc    esp
  41f8e5:	add    DWORD PTR [edi+0x41bf305f],eax
  41f8eb:	inc    DWORD PTR [edx+edi*1]
  41f8ee:	or     cl,BYTE PTR [ebp-0x161aeabf]
  41f8f4:	push   esp
  41f8f5:	add    DWORD PTR [eax],eax
  41f8f7:	lea    esi,[ecx]
  41f8f9:	adc    eax,0xb3f44586
  41f8fe:	jno    0x41f910
  41f900:	outs   dx,DWORD PTR ds:[esi]
  41f901:	cmp    al,BYTE PTR [eax+ebp*8]
  41f904:	sar    ah,1
  41f906:	(bad)  
  41f907:	push   DWORD PTR [ecx+0x18]
  41f90a:	jnp    0x41f957
  41f90c:	inc    edi
  41f90d:	push   0xfffffff4
  41f90f:	add    BYTE PTR [ebp+0x42],cl
  41f912:	lock mov eax,ebx
  41f915:	inc    DWORD PTR [eax-0x8]
  41f918:	push   ds
  41f919:	add    ebx,edi
  41f91b:	jne    0x41f8e5
  41f91d:	mov    bl,0x71
  41f91f:	sbb    BYTE PTR [ebx+0xff103a],bl
  41f925:	add    BYTE PTR [ecx],dh
  41f927:	push   ecx
  41f928:	sti    
  41f929:	jne    0x41f8e3
  41f92b:	call   0xc712f8
  41f930:	xchg   eax,esi
  41f932:	add    DWORD PTR [ebp+0x340f1a70],ebp
  41f938:	add    al,0x8b
  41f93a:	popf   
  41f93b:	mov    ebp,DWORD PTR [ebx+0x44]
  41f93e:	jnp    0x41f985
  41f940:	pop    edx
  41f941:	sbb    DWORD PTR [ebp+0x16],0x8
  41f945:	(bad)  
  41f946:	loopne 0x41f8dc
  41f948:	add    al,ch
  41f94a:	test   ch,cl
  41f94c:	pop    ebp
  41f94d:	cld    
  41f94e:	es daa 
  41f950:	push   esp
  41f951:	sbb    al,0xa1
  41f954:	sbb    edi,ebp
  41f956:	fsubr  DWORD PTR [ebp-0x2c]
  41f959:	mov    ebx,0x23683542
  41f95e:	popa   
  41f95f:	test   BYTE PTR [edx+0x54],bl
  41f962:	inc    ebp
  41f963:	pop    esp
  41f964:	inc    esp
  41f965:	std    
  41f966:	sub    dl,al
  41f968:	(bad)  
  41f969:	cld    
  41f96a:	ret    0xb6eb
  41f96d:	(bad)  
  41f96e:	fbstp  TBYTE PTR [ecx]
  41f970:	add    BYTE PTR [ebx+0x26],dl
  41f973:	scas   al,BYTE PTR es:[edi]
  41f974:	jle    0x41f961
  41f976:	cdq    
  41f977:	call   0x98dff560
  41f97c:	mov    bl,0x88
  41f97e:	js     0x41f9e1
  41f980:	xchg   edi,edx
  41f982:	es in  eax,0x8f
  41f985:	(bad)  
  41f986:	jmp    0xe900:0x428969
  41f98d:	loopne 0x41f94d
  41f98f:	pop    es
  41f990:	and    al,0x9f
  41f992:	pop    eax
  41f993:	out    0xcf,eax
  41f995:	push   ds
  41f996:	pop    ebx
  41f997:	cld    
  41f998:	and    DWORD PTR [edx],ebp
  41f99a:	fcom   DWORD PTR [ebx-0x3e]
  41f99d:	jbe    0x41f9ab
  41f99f:	mov    DWORD PTR [eax-0x53],edi
  41f9a2:	icebp  
  41f9a3:	aas    
  41f9a4:	popf   
  41f9a5:	outs   dx,DWORD PTR ds:[esi]
  41f9a6:	add    BYTE PTR [ebx+0x69b04d60],cl
  41f9ac:	lahf   
  41f9ad:	dec    esp
  41f9ae:	xor    eax,DWORD PTR [eax+0x30d56a95]
  41f9b4:	push   ds
  41f9b5:	add    ah,BYTE PTR [edx+0x10]
  41f9b8:	popf   
  41f9b9:	int    0xfb
  41f9bb:	mov    ch,bl
  41f9bd:	rcl    ch,cl
  41f9bf:	(bad)  
  41f9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c1:	xchg   DWORD PTR [esi],esp
  41f9c3:	or     al,0x1a
  41f9c5:	mov    ebp,0x866ae9be
  41f9ca:	and    ebx,DWORD PTR [eax-0x2e]
  41f9cd:	call   0x15b356ba
  41f9d2:	jmp    0x1c4496d9
  41f9d7:	push   es
  41f9d8:	sbb    al,0xc5
  41f9da:	call   0x7b4a:0xda08355c
  41f9e1:	pop    ss
  41f9e2:	test   al,0xd6
  41f9e4:	popf   
  41f9e5:	mov    DWORD PTR [ebx],esi
  41f9e7:	pusha  
  41f9e8:	int    0x87
  41f9ea:	sbb    ecx,DWORD PTR [esi*1+0x5c74f4]
  41f9f1:	add    BYTE PTR [ecx],bl
  41f9f3:	xchg   DWORD PTR [ebx],esp
  41f9f5:	pusha  
  41f9f6:	jno    0x41f9af
  41f9f8:	das    
  41f9f9:	inc    ecx
  41f9fa:	mov    ds:0xf688b402,al
  41f9ff:	jle    0x41fa43
  41fa01:	ret    
  41fa02:	dec    ebp
  41fa03:	lods   al,BYTE PTR ds:[esi]
  41fa04:	popa   
  41fa05:	push   ebx
  41fa06:	and    eax,0xd254d6bc
  41fa0b:	mul    BYTE PTR [esi]
  41fa0d:	mov    ss,WORD PTR [eax-0x14]
  41fa10:	or     DWORD PTR [ebx+0x71],eax
  41fa13:	jg     0x41fa3b
  41fa15:	sti    
  41fa16:	bound  ebp,QWORD PTR [edx+0x76]
  41fa19:	push   ebp
  41fa1a:	enter  0x6252,0x43
  41fa1e:	dec    esi
  41fa1f:	sti    
  41fa20:	fadd   DWORD PTR [ebx-0x3d]
  41fa23:	outs   dx,BYTE PTR ds:[esi]
  41fa24:	out    0x3,eax
  41fa26:	popf   
  41fa27:	test   DWORD PTR [ebx+0xe3c1543],eax
  41fa2d:	jge    0x41f9d8
  41fa2f:	push   ebx
  41fa30:	push   ebp
  41fa32:	add    DWORD PTR [ebx-0x7561f686],0x2a10e0f
  41fa3c:	mov    bh,0x19
  41fa3e:	ins    BYTE PTR es:[edi],dx
  41fa3f:	push   edx
  41fa40:	cld    
  41fa41:	pop    ebp
  41fa42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa43:	call   0xd43b1e7e
  41fa48:	xlat   BYTE PTR ds:[ebx]
  41fa49:	dec    edi
  41fa4a:	mov    BYTE PTR [ebp-0x1854c921],bh
  41fa50:	xor    BYTE PTR [ebp*8+0xdd7051],0x0
  41fa58:	cmp    al,0x19
  41fa5a:	inc    ebx
  41fa5b:	popf   
  41fa5c:	jae    0x41faa3
  41fa5e:	gs loopne 0x41fab6
  41fa61:	push   esi
  41fa62:	je     0x41faba
  41fa64:	sub    cl,ch
  41fa66:	pop    es
  41fa67:	pop    esp
  41fa68:	push   ds
  41fa69:	cmp    dh,0xe8
  41fa6c:	sahf   
  41fa6d:	mov    dl,0xc5
  41fa6f:	and    al,0xc2
  41fa71:	push   ecx
  41fa72:	ret    0x782c
  41fa75:	push   eax
  41fa76:	std    
  41fa77:	aam    0xe6
  41fa79:	add    BYTE PTR [eax-0x17],al
  41fa7c:	sbb    eax,0xdc740c92
  41fa81:	dec    ebx
  41fa82:	out    0x9a,eax
  41fa84:	xchg   BYTE PTR [edi-0x4],cl
  41fa87:	bound  esi,QWORD PTR [ecx+0x6af6d884]
  41fa8d:	cmp    bh,0xe8
  41fa90:	sahf   
  41fa91:	jge    0x41fad5
  41fa93:	and    DWORD PTR [ecx],edx
  41fa95:	jnp    0x41fa87
  41fa97:	inc    ecx
  41fa98:	or     edx,DWORD PTR [esi-0x3]
  41fa9b:	es sbb al,0x92
  41fa9e:	ja     0x41fa7d
  41faa0:	adc    esp,DWORD PTR [edx+0x68]
  41faa3:	pop    ds
  41faa4:	cdq    
  41faa5:	add    esi,DWORD PTR [ecx]
  41faa7:	imul   edx,esp,0x31ffff4b
  41faad:	sub    edi,DWORD PTR [esp+esi*2+0x52fc5fc0]
  41fab4:	pushf  
  41fab5:	imul   ebp,esi,0xfffffffe
  41fab8:	sbb    ebp,0xfffffff5
  41fabb:	fiadd  WORD PTR [eax]
  41fabd:	add    BYTE PTR [edx+0xdcb87ac],al
  41fac3:	inc    esp
  41fac4:	add    al,ch
  41fac6:	cmp    ah,bl
  41fac8:	cli    
  41fac9:	(bad)  
  41faca:	cld    
  41facb:	inc    edx
  41facc:	imul   ebx
  41face:	outs   dx,DWORD PTR ds:[esi]
  41facf:	pop    edi
  41fad0:	std    
  41fad1:	push   edx
  41fad2:	dec    esp
  41fad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad4:	out    dx,al
  41fad5:	(bad)  
  41fad6:	adc    edi,DWORD PTR [ebp+0x41]
  41fad9:	stc    
  41fada:	mov    edi,0x6feb042a
  41fadf:	test   DWORD PTR [ecx-0x6],edi
  41fae2:	xor    al,0x41
  41fae4:	and    DWORD PTR [ebx+0x7d32028f],eax
  41faea:	inc    ebx
  41faeb:	pop    edi
  41faec:	std    
  41faed:	mov    WORD PTR [ecx-0x3a],?
  41faf0:	xchg   ebx,ecx
  41faf2:	or     al,0x10
  41faf4:	out    dx,al
  41faf5:	(bad)  
  41faf6:	xchg   ebx,eax
  41faf7:	sar    DWORD PTR [esp+esi*2-0x1738800d],1
  41fafe:	and    ah,bl
  41fb00:	cli    
  41fb01:	(bad)  
  41fb02:	js     0x41fac9
  41fb04:	jo     0x41fb0a
  41fb06:	retf   0xf742
  41fb09:	add    DWORD PTR [ebx-0x8],esp
  41fb0c:	out    0x7f,eax
  41fb0e:	mov    dh,0xab
  41fb10:	sti    
  41fb11:	push   ebx
  41fb12:	dec    esp
  41fb13:	cs mov esi,0x798593fe
  41fb19:	cli    
  41fb1a:	les    eax,FWORD PTR [eax+0x9]
  41fb1d:	lea    edi,[ebx]
  41fb1f:	aad    0xfd
  41fb21:	inc    DWORD PTR [eax]
  41fb23:	add    BYTE PTR [esp+edx*4-0x1462ea05],dh
  41fb2a:	repnz aas 
  41fb2c:	popf   
  41fb2d:	fcmovnbe st,st(7)
  41fb2f:	clc    
  41fb30:	popf   
  41fb31:	iret   
  41fb32:	add    DWORD PTR [eax-0x740d64],esi
  41fb38:	call   0x95a:0x947a805a
  41fb3f:	test   BYTE PTR [eax+0x10fc5668],al
  41fb45:	jmp    0x5abcfa35
  41fb4a:	mov    al,0x86
  41fb4c:	fsub   DWORD PTR [ecx+0x57]
  41fb4f:	adc    bh,BYTE PTR [ecx+0x2c]
  41fb52:	sar    bh,0x11
  41fb55:	daa    
  41fb56:	dec    esp
  41fb57:	mov    bh,BYTE PTR [edx]
  41fb59:	mov    edx,0xe99d0000
  41fb5e:	mov    dh,al
  41fb60:	xor    eax,0x42fd52d9
  41fb65:	out    0x43,eax
  41fb67:	ja     0x41faec
  41fb69:	in     al,0x53
  41fb6b:	push   0x3103322b
  41fb70:	mov    bh,0x59
  41fb72:	mov    bl,0x8a
  41fb74:	mov    al,ds:0xcff6b99
  41fb79:	fcom   DWORD PTR [esi-0x79]
  41fb7c:	pop    eax
  41fb7d:	aam    0x6b
  41fb7f:	ss jmp 0x41fb69
  41fb82:	push   esi
  41fb83:	xchg   BYTE PTR [ebx+0x65],bl
  41fb86:	mov    eax,eax
  41fb88:	add    BYTE PTR [eax],al
  41fb8a:	add    eax,0xf2fd53f7
  41fb8f:	les    ebp,FWORD PTR [ebx]
  41fb91:	push   0xffffff9c
  41fb93:	(bad)  
  41fb94:	mov    esp,0x6c1516bf
  41fb99:	cmp    esp,ecx
  41fb9b:	pop    ss
  41fb9c:	push   edi
  41fb9d:	xchg   DWORD PTR [eax+0x14],ebx
  41fba0:	cmp    BYTE PTR [edi-0x7d03fdaf],0x1
  41fba7:	out    0xe7,eax
  41fba9:	add    ebx,DWORD PTR [ebp-0x62fc188e]
  41fbaf:	rcr    bh,1
  41fbb1:	adc    al,0xdd
  41fbb3:	jnp    0x41fbe6
  41fbb5:	ins    BYTE PTR es:[edi],dx
  41fbb6:	cmc    
  41fbb7:	push   esp
  41fbb8:	cld    
  41fbb9:	pop    eax
  41fbba:	cdq    
  41fbbb:	aad    0xde
  41fbbd:	pop    eax
  41fbbe:	scas   eax,DWORD PTR es:[edi]
  41fbbf:	push   edx
  41fbc0:	fadd   st,st(3)
  41fbc2:	mov    bh,BYTE PTR [ecx+0x2b]
  41fbc5:	pop    ebp
  41fbc6:	loope  0x41fb78
  41fbc8:	inc    ecx
  41fbc9:	dec    ebx
  41fbca:	pop    esp
  41fbcb:	push   es
  41fbcc:	out    0xae,eax
  41fbce:	and    eax,0xe267695e
  41fbd3:	mov    eax,0x1fa8473
  41fbd8:	out    0x3,eax
  41fbda:	lock mov dl,0xac
  41fbdd:	mov    esi,0xbe600251
  41fbe2:	cmp    cl,BYTE PTR [edi-0x5]
  41fbe5:	lods   al,BYTE PTR ds:[si]
  41fbe7:	ret    0x14e6
  41fbea:	pop    ebp
  41fbeb:	jns    0x41fc18
  41fbed:	pop    esp
  41fbee:	add    BYTE PTR [eax],al
  41fbf0:	imul   eax,DWORD PTR [ebx+0x29d0302],0xfffffff6
  41fbf7:	mov    DWORD PTR [ebx],esp
  41fbf9:	add    ah,bh
  41fbfb:	add    esp,DWORD PTR [edx]
  41fbfd:	lds    edi,FWORD PTR [edx-0x74]
  41fc00:	push   ebp
  41fc01:	loop   0x41fbea
  41fc03:	add    ebx,DWORD PTR [ebp+0x154fe403]
  41fc09:	aad    0xee
  41fc0b:	xchg   BYTE PTR [ecx-0x6],ah
  41fc0e:	mov    dh,0x6b
  41fc10:	call   DWORD PTR [ebx+0x4c]
  41fc13:	pop    eax
  41fc14:	pop    ds
  41fc15:	inc    edx
  41fc16:	cmc    
  41fc17:	mov    dl,BYTE PTR [edi]
  41fc19:	add    ah,bh
  41fc1b:	add    edx,ebx
  41fc1d:	(bad)  
  41fc1e:	jmp    esp
  41fc20:	lahf   
  41fc21:	ror    DWORD PTR [ebx],cl
  41fc23:	bound  ebx,QWORD PTR [edx+eax*4+0x77]
  41fc27:	in     eax,dx
  41fc28:	test   al,0xfd
  41fc2a:	mov    ah,BYTE PTR [eax-0x62]
  41fc2d:	add    al,BYTE PTR [eax]
  41fc2f:	pop    ds
  41fc30:	repz cli 
  41fc32:	add    DWORD PTR [ebp+0x7437d8ca],edx
  41fc38:	jecxz  0x41fbd0
  41fc3a:	push   esp
  41fc3b:	cdq    
  41fc3c:	cmc    
  41fc3d:	lock das 
  41fc3f:	fistp  WORD PTR [esi+0x4e]
  41fc42:	mov    DWORD PTR [esi+eiz*8+0x15f5c382],esp
  41fc49:	jnp    0x41fcaa
  41fc4b:	call   0xfd29feee
  41fc50:	int3   
  41fc51:	dec    edi
  41fc52:	cld    
  41fc53:	into   
  41fc54:	add    BYTE PTR [eax],al
  41fc56:	dec    esp
  41fc57:	pop    esi
  41fc58:	cld    
  41fc59:	xor    al,0xc1
  41fc5b:	sub    BYTE PTR [edx-0x4b],0xb9
  41fc5f:	dec    edi
  41fc60:	adc    bh,BYTE PTR [ecx+0x62000e4f]
  41fc66:	push   ss
  41fc67:	into   
  41fc68:	(bad)  
  41fc69:	call   0x6c41d50c
  41fc6e:	pop    esp
  41fc6f:	xchg   esi,eax
  41fc70:	dec    edi
  41fc71:	fcmovu st,st(6)
  41fc73:	gs mov edi,ecx
  41fc76:	mov    eax,ds:0x4ba98302
  41fc7b:	repnz imul ebp,eax,0x62b7c125
  41fc82:	pop    ebx
  41fc83:	gs push edx
  41fc85:	jns    0x41fcfa
  41fc87:	dec    esi
  41fc88:	sub    DWORD PTR [ecx],0xffffffed
  41fc8b:	add    esi,eax
  41fc8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8e:	push   ebx
  41fc8f:	dec    esp
  41fc90:	std    
  41fc91:	fmul   QWORD PTR [esi+0x4e]
  41fc94:	adc    bh,BYTE PTR ds:0xdef
  41fc9a:	dec    edi
  41fc9b:	inc    ebp
  41fc9c:	data16 add BYTE PTR [edi+0xd],cl
  41fca0:	mov    dh,cl
  41fca2:	pop    esp
  41fca3:	std    
  41fca4:	out    dx,eax
  41fca5:	(bad)  
  41fca6:	jnp    0x41fc2a
  41fca8:	mov    esp,0x21d8ef74
  41fcad:	mov    ecx,DWORD PTR [ecx]
  41fcaf:	cli    
  41fcb0:	xchg   al,dh
  41fcb2:	pop    ds
  41fcb3:	shl    BYTE PTR [ebx+eax*1],0xc5
  41fcb7:	pop    ebx
  41fcb8:	cld    
  41fcb9:	push   eax
  41fcba:	add    BYTE PTR [eax],al
  41fcbc:	mov    ebx,es
  41fcbe:	in     al,dx
  41fcbf:	(bad)  
  41fcc0:	fwait
  41fcc1:	int    0xbc
  41fcc3:	je     0x41fc45
  41fcc5:	cmovb  edi,edi
  41fcc8:	jne    0x41fd42
  41fcca:	jnp    0x41fcd0
  41fccc:	mov    ebp,0x83730034
  41fcd1:	jle    0x41fd4d
  41fcd3:	add    al,0x42
  41fcd5:	inc    edx
  41fcd6:	sti    
  41fcd7:	add    edi,edi
  41fcd9:	inc    edx
  41fcda:	hlt    
  41fcdb:	(bad)  
  41fcdc:	out    dx,eax
  41fcdd:	popa   
  41fcde:	std    
  41fcdf:	inc    DWORD PTR [ecx+ebx*8-0x7d]
  41fce3:	icebp  
  41fce4:	or     dh,BYTE PTR [ebx+edi*8+0x69800c4d]
  41fceb:	hlt    
  41fcec:	cmp    al,0xb4
  41fcee:	inc    ecx
  41fcef:	clc    
  41fcf0:	scas   eax,DWORD PTR es:[edi]
  41fcf1:	inc    edx
  41fcf2:	hlt    
  41fcf3:	add    DWORD PTR [ecx-0x48c4cb4e],0x2d
  41fcfa:	std    
  41fcfb:	push   DWORD PTR [esp+eax*1]
  41fcfe:	mov    WORD PTR [edx],es
  41fd00:	fwait
  41fd01:	mov    ah,0xfb
  41fd03:	call   DWORD PTR [ecx]
  41fd05:	mov    cl,0xfb
  41fd07:	adc    eax,0x3c5384
  41fd0c:	je     0x41fd38
  41fd0e:	sti    
  41fd0f:	add    al,dl
  41fd11:	clc    
  41fd12:	xchg   BYTE PTR [ebp-0x63],al
  41fd15:	arpl   WORD PTR [eax-0x48],bp
  41fd18:	sti    
  41fd19:	mov    esp,0xc4588955
  41fd1e:	mov    ch,0x5d
  41fd20:	add    BYTE PTR [eax],al
  41fd22:	in     al,0x18
  41fd24:	or     DWORD PTR [eax],eax
  41fd26:	inc    edi
  41fd27:	pop    ebx
  41fd28:	push   ebp
  41fd29:	scas   eax,DWORD PTR es:[edi]
  41fd2a:	sbb    DWORD PTR [edx+0x0],ebx
  41fd2d:	add    dl,al
  41fd2f:	dec    ebp
  41fd30:	lock adc BYTE PTR [ebp+0x5b],bl
  41fd34:	dec    ebp
  41fd35:	xlat   BYTE PTR ds:[ebx]
  41fd36:	xchg   esi,eax
  41fd37:	sbb    ecx,DWORD PTR [esi-0x29]
  41fd3a:	ficom  WORD PTR [ebx-0x3ae202ef]
  41fd40:	test   al,0xfe
  41fd42:	call   0x8a64:0xd376005a
  41fd49:	test   DWORD PTR [ebx+ebx*2],esi
  41fd4c:	add    BYTE PTR [eax],al
  41fd4e:	xchg   edx,eax
  41fd4f:	imul   eax,DWORD PTR [ebp+0x599ca7],0x1
  41fd56:	pop    edx
  41fd57:	jmp    0xc0aef18d
  41fd5c:	out    dx,eax
  41fd5d:	cld    
  41fd5e:	jmp    0x6fab0560
  41fd63:	test   DWORD PTR ss:[ebx+0x7f8f],eax
  41fd6a:	popf   
  41fd6b:	jmp    0x4bc30fc2
  41fd70:	sar    bh,0x1f
  41fd73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd74:	pop    es
  41fd75:	sbb    DWORD PTR [ebp-0x12],0x1f
  41fd79:	or     eax,0xfeabe3f3
  41fd7e:	and    bl,BYTE PTR [edx-0x45]
  41fd81:	cmp    BYTE PTR ds:0x893e48,dl
  41fd87:	add    BYTE PTR [ebx],ch
  41fd89:	ret    0x0
  41fd8c:	popf   
  41fd8d:	fstp   DWORD PTR [ecx+0x31]
  41fd90:	mov    es,WORD PTR [edx]
  41fd92:	clc    
  41fd93:	add    al,0x33
  41fd95:	cmp    DWORD PTR [edx+eax*2+0x1a],ebx
  41fd99:	jne    0x41fe19
  41fd9b:	add    ebx,DWORD PTR [ebp-0x5309bdfe]
  41fda1:	inc    edx
  41fda2:	push   ecx
  41fda3:	push   cs
  41fda4:	daa    
  41fda5:	test   DWORD PTR [edi-0x19fd62fd],ecx
  41fdab:	(bad)  
  41fdac:	loop   0x41fdfa
  41fdae:	es add eax,0x8df5430b
  41fdb4:	mov    ah,0x69
  41fdb6:	adc    eax,0x3f751a55
  41fdbb:	add    ebx,DWORD PTR [ebp-0x71b57dfe]
  41fdc1:	fcomp  st(2)
  41fdc3:	push   esp
  41fdc4:	push   cs
  41fdc5:	daa    
  41fdc6:	jmp    0x41fd4e
  41fdc8:	push   ds
  41fdc9:	adc    DWORD PTR [ecx+0x3],eax
  41fdcc:	popf   
  41fdcd:	add    dl,BYTE PTR [edi-0x2ed50ac]
  41fdd3:	ret    
  41fdd4:	jp     0x41fd56
  41fdd6:	mov    ds:0x36012d07,al
  41fddb:	inc    edx
  41fddc:	sahf   
  41fddd:	add    cl,BYTE PTR [edi-0x76f7420f]
  41fde3:	inc    eax
  41fde4:	out    dx,eax
  41fde5:	ja     0x41fdb1
  41fde7:	cmp    BYTE PTR [esi],0x4a
  41fdea:	addr16 add BYTE PTR [bx+si],al
  41fdee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdef:	add    esp,edi
  41fdf1:	add    ebp,esp
  41fdf3:	mov    ah,0x3d
  41fdf5:	in     al,dx
  41fdf6:	adc    cl,BYTE PTR [eax]
  41fdf8:	out    0x3,eax
  41fdfa:	and    al,0x49
  41fdfc:	xchg   ebp,eax
  41fdfd:	out    dx,al
  41fdfe:	(bad)  
  41fdff:	lock es add al,0x16
  41fe03:	(bad)  
  41fe04:	retf   0x2b3
  41fe07:	and    BYTE PTR [eax+0x3],al
  41fe0a:	popf   
  41fe0b:	ja     0x41fe0c
  41fe0d:	mov    ebx,0xe93ff15a
  41fe12:	sbb    edi,DWORD PTR [edi+0x23]
  41fe15:	cmp    DWORD PTR [esi+0x49b90002],ebx
  41fe1b:	xor    eax,0x9e8a8d80
  41fe20:	(bad)  
  41fe21:	call   0xe9ac00c4
  41fe26:	les    ecx,FWORD PTR [ebx+0x31]
  41fe29:	sub    DWORD PTR [ebx],ebx
  41fe2b:	and    esi,DWORD PTR [bx+di-0x62]
  41fe2f:	add    al,BYTE PTR [eax]
  41fe31:	pusha  
  41fe32:	sub    bl,BYTE PTR [edi]
  41fe34:	mov    al,0xe9
  41fe36:	sahf   
  41fe37:	add    ch,al
  41fe39:	adc    eax,0x83fc4acb
  41fe3e:	sahf   
  41fe3f:	fadd   DWORD PTR [ecx]
  41fe41:	ficomp DWORD PTR [esi+0x78]
  41fe44:	fwait
  41fe45:	int    0xe6
  41fe47:	dec    ecx
  41fe48:	cld    
  41fe49:	jmp    0xe9bc6254
  41fe4e:	sahf   
  41fe4f:	jge    0x41fe94
  41fe51:	lds    eax,FWORD PTR [eax]
  41fe53:	add    BYTE PTR [esi-0x7f],cl
  41fe56:	or     DWORD PTR ds:0xe9fc4a45,0xfffffff1
  41fe5d:	lds    esp,FWORD PTR [ebx]
  41fe5f:	std    
  41fe60:	sbb    eax,0x2ef123c6
  41fe65:	cmp    DWORD PTR [ebx-0x3b5faf3],0x23cdd1e9
  41fe6f:	fucomp st(7)
  41fe71:	das    
  41fe72:	mov    ah,dh
  41fe74:	stos   BYTE PTR es:[edi],al
  41fe75:	lock aas 
  41fe77:	jmp    0xc27300d4
  41fe7c:	sbb    al,0xc6
  41fe7e:	and    ebx,ebp
  41fe80:	repz mov ecx,0x461ab7fc
  41fe86:	or     eax,DWORD PTR [eax]
  41fe88:	scas   al,BYTE PTR es:[edi]
  41fe89:	dec    esi
  41fe8a:	mov    DWORD PTR [eax+ebx*8-0x7],eax
  41fe8e:	dec    esi
  41fe8f:	push   eax
  41fe90:	xchg   ebx,eax
  41fe91:	or     al,0x80
  41fe93:	(bad)  
  41fe94:	loopne 0x41fe26
  41fe96:	mov    DWORD PTR [eax+ebp*4+0x4a],eax
  41fe9a:	test   DWORD PTR [eax+ebx*4+0x42],ebx
  41fe9e:	test   DWORD PTR [eax+ebx*4-0x72],ebx
  41fea2:	in     al,0xd6
  41fea4:	retf   
  41fea5:	mov    ah,0xfb
  41fea7:	mov    ecx,DWORD PTR [ebx+0x6c24b083]
  41fead:	(bad)  
  41feae:	(bad)  
  41feaf:	call   FWORD PTR [ebx+eax*8+0x3]
  41feb3:	push   DWORD PTR [ebx-0x7d]
  41feb6:	and    BYTE PTR [eax+eax*1],0x0
  41feba:	fs (bad) 
  41febc:	(bad)  
  41febd:	jmp    FWORD PTR ds:0xb4017c7d
  41fec3:	add    eax,0x55d84489
  41fec8:	test   DWORD PTR [edi+0x8],eax
  41fece:	bsr    edx,DWORD PTR [ebx-0x77]
  41fed2:	sti    
  41fed3:	(bad)  
  41fed4:	std    
  41fed5:	push   DWORD PTR [ebp+ebp*4-0x78]
  41fed9:	lock xor DWORD PTR [esi+eiz*2-0x4599b3f8],0xfffffffe
  41fee2:	push   ebx
  41fee3:	clc    
  41fee4:	mov    esi,0xfcbc4174
  41fee9:	lahf   
  41feea:	xchg   edx,eax
  41feeb:	ds cld 
  41feed:	mov    ah,bl
  41feef:	cli    
  41fef0:	xchg   al,dh
  41fef2:	pop    edi
  41fef3:	jmp    FWORD PTR [esi]
  41fef5:	mul    cl
  41fef7:	inc    ecx
  41fef8:	and    BYTE PTR [eax+0xc],dl
  41fefb:	cmp    eax,0x81440059
  41ff00:	mov    esp,0x7d649d75
  41ff05:	les    esi,FWORD PTR ds:0x1afc4e40
  41ff0b:	xlat   BYTE PTR ds:[ebx]
  41ff0c:	inc    eax
  41ff0d:	jb     0x41fef2
  41ff0f:	repnz jecxz 0x41fefb
  41ff12:	popf   
  41ff13:	pop    ebx
  41ff14:	mov    ch,0x8a
  41ff16:	sbb    bh,BYTE PTR [ebx]
  41ff18:	add    eax,DWORD PTR [eax]
  41ff1a:	popf   
  41ff1b:	mov    eax,DWORD PTR [ecx]
  41ff1d:	mov    dh,0x0
  41ff1f:	add    BYTE PTR [edx],bl
  41ff21:	and    eax,DWORD PTR [ebx]
  41ff23:	add    BYTE PTR [ebp+0x2912518b],bl
  41ff29:	dec    ebp
  41ff2a:	sar    bh,0x1f
  41ff2d:	ret    
  41ff2e:	push   ecx
  41ff2f:	jae    0x41fee0
  41ff31:	inc    esi
  41ff32:	add    bh,bh
  41ff34:	retf   0xd45a
  41ff37:	or     BYTE PTR [edx-0x63c87e2f],dl
  41ff3d:	pop    ebx
  41ff3e:	add    BYTE PTR [ecx],bh
  41ff40:	fsubr  QWORD PTR [ebx+esi*8+0x54]
  41ff44:	mov    ch,0x3c
  41ff46:	push   eax
  41ff47:	cld    
  41ff48:	mov    ds:0xed23c4a5,al
  41ff4d:	icebp  
  41ff4e:	sbb    eax,0x5d599db8
  41ff53:	mov    edx,0x1f89de16
  41ff58:	pushf  
  41ff59:	pop    ecx
  41ff5a:	add    BYTE PTR [ecx],bh
  41ff5c:	sub    cl,dh
  41ff5e:	add    BYTE PTR [eax],al
  41ff60:	popf   
  41ff61:	pop    eax
  41ff62:	test   BYTE PTR ds:0x8900599c,ch
  41ff68:	sbb    dl,BYTE PTR [esi]
  41ff6a:	add    DWORD PTR [eax],eax
  41ff6c:	popf   
  41ff6d:	add    al,0x3c
  41ff6f:	jb     0x41ff11
  41ff71:	add    al,0x43
  41ff73:	jae    0x41ff09
  41ff75:	in     al,0x46
  41ff77:	out    0xba,eax
  41ff79:	mov    WORD PTR [esi-0x4],cs
  41ff7c:	inc    esi
  41ff7d:	add    edi,DWORD PTR [edx+0x7c]
  41ff80:	(bad)  
  41ff81:	push   ds
  41ff82:	jmp    0x41ff84
  41ff84:	add    BYTE PTR [eax],al
  41ff86:	repz mov esi,0x7f15ffca
  41ff8c:	gs cld 
  41ff8e:	sbb    ecx,DWORD PTR [eax-0x1a]
  41ff91:	or     al,0xdc
  41ff93:	into   
  41ff94:	jecxz  0x41ffa0
  41ff96:	push   ebp
  41ff97:	cli    
  41ff98:	cli    
  41ff99:	repz add BYTE PTR [edi-0x3985003e],bh
  41ffa0:	or     al,BYTE PTR [eax]
  41ffa2:	cdq    
  41ffa3:	aam    0x46
  41ffa5:	pop    ebx
  41ffa6:	std    
  41ffa7:	add    ah,bh
  41ffa9:	add    edx,DWORD PTR [eax-0x56d85d70]
  41ffaf:	jnp    0x42002b
  41ffb1:	mov    DWORD PTR [edx-0x7bfc18ff],ebx
  41ffb7:	push   ebx
  41ffb8:	in     eax,0x87
  41ffba:	rol    DWORD PTR [edx],1
  41ffbc:	out    0x3,eax
  41ffbe:	es mov edi,0x4762d7ca
  41ffc4:	xchg   esp,eax
  41ffc5:	sti    
  41ffc6:	test   eax,0x8f50ead0
  41ffcb:	(bad)  
  41ffcd:	ret    
  41ffce:	call   0xe699:0x1e01267e
  41ffd5:	add    ebx,DWORD PTR [ebp+0x927aa50]
  41ffdb:	sti    
  41ffdc:	jb     0x41fffa
  41ffde:	mov    dl,0x66
  41ffe0:	or     cl,BYTE PTR [eax+0xe64772]
  41ffe6:	push   cs
  41ffe7:	inc    edx
  41ffe8:	adc    BYTE PTR [ebp+0x0],al
  41ffeb:	add    BYTE PTR [ecx-0x62fc8983],dl
  41fff1:	add    dl,dl
  41fff3:	jmp    edx
  41fff5:	jnp    0x42005c
  41fff7:	or     DWORD PTR [ebx+0x47],0xffffffff
  41fffb:	call   0xe84d81e6
  420000:	sahf   
  420001:	jns    0x41ffd0
  420003:	xchg   ecx,eax
  420004:	(bad)  
  420005:	mov    al,0xfc
  420007:	sahf   
  420008:	cdq    
  420009:	inc    ecx
  42000a:	jb     0x41ff8c
  42000c:	(bad)
  420010:	sahf   
  420011:	into   
  420012:	push   ebp
  420013:	rol    BYTE PTR [edx+0x23],0x78
  420017:	out    dx,al
  420018:	xchg   ebx,eax
  420019:	xchg   DWORD PTR [ecx],edi
  42001b:	stos   BYTE PTR es:[edi],al
  42001c:	jmp    0x420001
  42001e:	mov    bh,ah
  420020:	(bad)  
  420021:	jbe    0x420025
  420023:	jmp    0x5cd7bc6
  420028:	ins    DWORD PTR es:[edi],dx
  420029:	dec    eax
  42002a:	cld    
  42002b:	jmp    0x5cd7c5f
  420030:	add    DWORD PTR [edi-0x4],0xcd7a0fe9
  420037:	ds push cs
  420039:	(bad)  
  42003a:	cmp    BYTE PTR [edx],ch
  42003c:	in     al,dx
  42003d:	sbb    DWORD PTR [ebx-0x1957da3],ecx
  420043:	call   0x6dccb7e6
  420048:	and    dh,0xfe
  42004b:	call   0xd129b7ee
  420050:	add    BYTE PTR [eax],al
  420052:	xor    DWORD PTR [eax-0x4],ecx
  420055:	jb     0x420045
  420057:	or     dh,cl
  420059:	jne    0x41ffe9
  42005b:	jnp    0x42003a
  42005d:	(bad)  
  42005e:	aad    0x5d
  420060:	popa   
  420061:	cmc    
  420062:	jmp    0xfc48:0x1419e746
  420069:	sbb    dh,BYTE PTR [esi+0x450d434f]
  42006f:	add    al,0xd
  420071:	inc    BYTE PTR gs:[edi-0x4]
  420075:	add    BYTE PTR [ebx-0x8],bl
  420078:	pop    ebx
  420079:	and    al,0x88
  42007b:	inc    ebp
  42007c:	xchg   ecx,eax
  42007d:	ror    BYTE PTR [esi-0x3f],0xb
  420081:	test   ah,ch
  420083:	mov    ah,0xfb
  420085:	(bad)  
  420086:	sti    
  420087:	sub    ah,BYTE PTR [eax]
  420089:	or     al,0xaf
  42008b:	adc    eax,0xb61ab7e5
  420090:	sti    
  420091:	xor    ecx,DWORD PTR [edi-0x72]
  420094:	in     al,0xdb
  420096:	sub    dh,BYTE PTR [esi-0x47f71605]
  42009c:	sti    
  42009d:	(bad)  
  42009e:	jns    0x4200ca
  4200a0:	and    BYTE PTR [eax+0x1c],dl
  4200a3:	pop    eax
  4200a4:	mov    ah,0x0
  4200a6:	add    al,0xc9
  4200a8:	xor    eax,ebp
  4200aa:	out    0x41,al
  4200ac:	cld    
  4200ad:	mov    WORD PTR [eax+0x1a],?
  4200b0:	add    BYTE PTR [ecx],al
  4200b2:	les    eax,FWORD PTR [ecx]
  4200b4:	push   eax
  4200b5:	inc    DWORD PTR [eax]
  4200b7:	add    BYTE PTR [edx-0x195fc637],dh
  4200bd:	inc    ecx
  4200be:	cld    
  4200bf:	cmp    BYTE PTR [eax],ch
  4200c1:	push   ds
  4200c2:	dec    esp
  4200c3:	je     0x420087
  4200c5:	mov    ah,0x70
  4200c7:	and    al,0xe8
  4200c9:	mov    ah,0xd3
  4200cb:	cmp    eax,ebp
  4200cd:	sbb    eax,0xb4b27448
  4200d2:	jo     0x4200f8
  4200d4:	cmp    al,0xb4
  4200d6:	ror    DWORD PTR [ebp-0x17efe2c0],cl
  4200dc:	mov    edi,0xf9fffb37
  4200e1:	cmp    ah,BYTE PTR [eax]
  4200e3:	sbb    BYTE PTR [esp+esi*4],dl
  4200e6:	ror    BYTE PTR [ebp+0xa81e00],cl
  4200ec:	je     0x4200ef
  4200ee:	call   0x3ef9e9f
  4200f3:	add    BYTE PTR [eax],ch
  4200f5:	pop    ds
  4200f6:	sub    BYTE PTR [eax+0x45],dl
  4200f9:	pop    ds
  4200fa:	xchg   esi,eax
  4200fb:	dec    DWORD PTR [edx-0x1c]
  4200fe:	lods   eax,DWORD PTR ds:[esi]
  4200ff:	pop    eax
  420100:	push   ss
  420101:	ss scas eax,DWORD PTR es:[edi]
  420103:	rcl    al,0xe0
  420106:	pop    esp
  420107:	cmp    BYTE PTR [ecx],0xa3
  42010a:	sub    ebx,0xe7b5087d
  420110:	ret    0x4aa0
  420113:	cld    
  420114:	es div bh
  420117:	sbb    ebp,0x46
  42011a:	int3   
  42011b:	mov    al,BYTE PTR [eax]
  42011d:	add    BYTE PTR [ecx+0x3f],ah
  420120:	cld    
  420121:	dec    edi
  420122:	ja     0x420157
  420124:	jg     0x420169
  420126:	shl    DWORD PTR [ebx],0xb0
  420129:	imul   ebx,DWORD PTR [ebp+0x55124d84],0x19ffc177
  420133:	sbb    ecx,ecx
  420135:	pusha  
  420136:	push   ds
  420137:	aaa    
  420138:	and    al,0x14
  42013a:	popf   
  42013b:	xchg   DWORD PTR [eax+eax*4+0x23ff49],ebp
  420142:	dec    ecx
  420143:	pop    esi
  420144:	dec    ebp
  420145:	jae    0x4200c8
  420147:	sti    
  420148:	pop    ebx
  420149:	dec    edx
  42014a:	neg    BYTE PTR [ebx]
  42014c:	dec    esi
  42014d:	sbb    ch,0x6d
  420150:	mov    eax,0x203729fc
  420155:	call   0xfc8d240b
  42015a:	and    cl,BYTE PTR es:[eax-0x29bcee28]
  420161:	(bad)  
  420162:	out    dx,eax
  420163:	add    DWORD PTR [edx+ecx*8],esp
  420166:	jnp    0x4201bd
  420168:	test   BYTE PTR [edi+0x190d02e9],bh
  42016e:	sahf   
  42016f:	push   cs
  420170:	mov    eax,ecx
  420172:	(bad)  
  420173:	push   esi
  420175:	nop
  420176:	call   0x2996:0x7d07d502
  42017d:	add    al,0xad
  42017f:	into   
  420180:	out    dx,eax
  420181:	js     0x420183
  420183:	add    bh,dl
  420185:	out    0xf9,al
  420187:	or     BYTE PTR [edx],0x3
  42018a:	out    0x3,eax
  42018c:	and    al,0xb6
  42018e:	add    bh,BYTE PTR [ebx-0x55]
  420191:	xchg   edx,eax
  420192:	out    0x3,al
  420194:	popf   
  420195:	scas   eax,DWORD PTR es:[edi]
  420196:	xchg   ebp,eax
  420197:	idiv   DWORD PTR [edx]
  420199:	icebp  
  42019a:	es add al,0x10
  42019d:	into   
  42019e:	retf   0x8f4c
  4201a1:	and    bh,BYTE PTR [esi-0x29]
  4201a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a5:	inc    ebx
  4201a6:	sti    
  4201a7:	jmp    0x4201fa
  4201a9:	inc    ebx
  4201aa:	repz repz icebp 
  4201ad:	int    0xf2
  4201af:	dec    esp
  4201b0:	outs   dx,DWORD PTR ds:[esi]
  4201b1:	cli    
  4201b2:	pop    ebp
  4201b3:	mul    DWORD PTR [edx+0x7803a996]
  4201b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ba:	popa   
  4201bb:	addr16 ja 0x4201fe
  4201be:	push   es
  4201bf:	add    al,0x6e
  4201c1:	ja     0x42020d
  4201c3:	xor    DWORD PTR [esi-0x62fc17ca],0xffffffaf
  4201ca:	sub    eax,0xc37782d7
  4201cf:	sti    
  4201d0:	test   eax,0x2f4ccacd
  4201d5:	sbb    dl,BYTE PTR [esi]
  4201d7:	xlat   BYTE PTR ds:[ebx]
  4201d8:	mov    esi,0x90239343
  4201dd:	int    0xe2
  4201df:	dec    esp
  4201e0:	por    mm7,mm5
  4201e3:	(bad)  
  4201e4:	scas   al,BYTE PTR es:[edi]
  4201e5:	inc    ebx
  4201e6:	(bad)  
  4201e7:	jnp    0x4201e9
  4201e9:	add    BYTE PTR [esi+0x46],ch
  4201ec:	jb     0x4201cb
  4201ee:	sub    eax,0x3d2d1246
  4201f3:	ret    0x6fff
  4201f6:	pop    ebx
  4201f7:	pop    ss
  4201f8:	sub    DWORD PTR [ecx-0x161884a7],0xffffff9e
  4201ff:	add    dh,dh
  420201:	sub    al,0x75
  420203:	inc    ebx
  420204:	or     eax,0xfc437065
  420209:	jmp    0x654e2c31
  42020e:	push   0x1de9fc43
  420213:	enter  0xe90b,0x21
  420217:	jg     0x4201e4
  420219:	jmp    0x342a04bc
  42021e:	xlat   BYTE PTR ds:[ebx]
  42021f:	inc    ebp
  420220:	cld    
  420221:	ins    DWORD PTR es:[edi],dx
  420222:	pop    esi
  420223:	test   BYTE PTR [ebx+0x29e3e],0x76
  42022a:	lea    eax,[ebp+0x12]
  42022d:	adc    eax,0x6c0002ee
  420232:	pop    esi
  420233:	test   BYTE PTR [ebx+0x29e8e],0xb9
  42023a:	jbe    0x42024c
  42023c:	enter  0x614f,0x7c
  420240:	inc    edx
  420241:	stc    
  420242:	and    eax,DWORD PTR [ebx+0x4330650c]
  420248:	cld    
  420249:	jmp    0xf2cab03e
  42024e:	add    BYTE PTR [eax],al
  420250:	aam    0x42
  420252:	dec    esp
  420253:	adc    DWORD PTR [edi+0x251efd3b],edx
  420259:	push   ebx
  42025a:	xchg   BYTE PTR [edx+eax*8+0x6095f585],bl
  420261:	jmp    0x420295
  420263:	add    BYTE PTR [eax-0x5e],cl
  420266:	aas    
  420267:	add    BYTE PTR [edi],cl
  420269:	push   ecx
  42026a:	or     BYTE PTR [ebp-0x6e5f7],cl
  420270:	xor    DWORD PTR [ebp-0x5],0x37
  420274:	cmc    
  420275:	les    ecx,FWORD PTR [ebx+esi*4]
  420278:	mov    ah,0x6
  42027a:	ret    
  42027b:	test   DWORD PTR [eax+0x47fffbcb],edi
  420281:	push   es
  420282:	std    
  420283:	jmp    DWORD PTR [ebx+0x34]
  420286:	dec    eax
  420287:	adc    DWORD PTR [esi+eax*1-0x7f],esi
  42028b:	sar    BYTE PTR [eax+0x46],0x87
  42028f:	test   eax,esi
  420291:	retf   
  420292:	sti    
  420293:	(bad)  
  420294:	aas    
  420295:	add    ecx,DWORD PTR [esp+ebp*4+0x77]
  420299:	push   es
  42029a:	jno    0x4202ce
  42029c:	cmp    al,BYTE PTR [eax+eiz*1]
  42029f:	lods   al,BYTE PTR ds:[esi]
  4202a0:	mov    DWORD PTR [esi],0x18fa7410
  4202a6:	mov    cl,0xe4
  4202a8:	or     ebp,0x12898dfb
  4202ae:	stc    
  4202af:	inc    DWORD PTR [ebx+0x37fb76]
  4202b5:	add    BYTE PTR [ebp-0x6d],ch
  4202b8:	loopne 0x4202b7
  4202ba:	inc    ebx
  4202bb:	int    0xc3
  4202bd:	test   DWORD PTR [eax-0x39000435],edi
  4202c3:	add    eax,0x3363fffd
  4202c8:	dec    esp
  4202c9:	adc    esp,esi
  4202cb:	add    eax,0x37f9c081
  4202d0:	add    BYTE PTR fs:[esi+eax*1+0x0],al
  4202d5:	push   0xffffffb4
  4202d7:	int3   
  4202d8:	jno    0x4202fe
  4202da:	sbb    DWORD PTR [ecx],0xfffffffb
  4202dd:	adc    eax,0x3ff5e79d
  4202e2:	popf   
  4202e3:	adc    bh,cl
  4202e5:	das    
  4202e6:	mov    bl,BYTE PTR [esi-0x60]
  4202e9:	adc    ebp,ebx
  4202eb:	sub    ebp,DWORD PTR [ecx+0x146e265d]
  4202f1:	pop    ecx
  4202f2:	fs in  eax,dx
  4202f4:	pop    ss
  4202f5:	add    al,dl
  4202f7:	mov    ah,0x54
  4202f9:	out    0x1e,eax
  4202fb:	jb     0x420343
  4202fd:	cld    
  4202fe:	and    DWORD PTR [ebx-0x31],ebp
  420301:	add    al,0xf0
  420303:	push   eax
  420304:	pop    ds
  420305:	push   eax
  420306:	stc    
  420307:	jmp    0x42030c
  420309:	push   ecx
  42030a:	jmp    0x4202c0
  42030c:	iret   
  42030d:	adc    edx,edx
  42030f:	and    DWORD PTR [ecx+0x72],ecx
  420312:	(bad)  
  420313:	lds    eax,FWORD PTR [ebx]
  420315:	std    
  420316:	mov    al,0x33
  420318:	dec    ecx
  420319:	adc    al,BYTE PTR [eax]
  42031b:	add    cl,cl
  42031d:	iret   
  42031e:	vpshuflw ymm3,YMMWORD PTR [eax-0x6cd9f031],0x49
  420327:	jb     0x4202c2
  420329:	mov    bh,cl
  42032b:	pop    es
  42032c:	add    dl,BYTE PTR [esi-0x50]
  42032f:	stos   DWORD PTR es:[edi],eax
  420330:	pop    esi
  420331:	sub    edi,DWORD PTR [ebp-0x29]
  420334:	sbb    BYTE PTR [eax-0x3bdfac35],dh
  42033a:	enter  0x184f,0xd9
  42033e:	int3   
  42033f:	dec    ebx
  420340:	push   ds
  420341:	sbb    DWORD PTR [esp+esi*2],eax
  420344:	pop    edx
  420345:	lods   al,BYTE PTR ds:[esi]
  420346:	(bad)  
  420347:	setge  BYTE PTR [edi-0x3d]
  42034b:	mov    ebp,0xffc58381
  420350:	push   eax
  420351:	clc    
  420352:	out    dx,eax
  420353:	jmp    0x4202e4
  420355:	imul   eax,DWORD PTR [eax],0xfffffff6
  420358:	mov    al,ds:0x5d8bbb02
  42035d:	add    ch,al
  42035f:	sar    BYTE PTR [edi-0x2d2e5956],1
  420365:	add    cl,BYTE PTR [esi]
  420367:	lock pop edx
  420369:	adc    eax,0x431e03a7
  42036e:	jb     0x42036c
  420370:	and    eax,0xd8a0fe3b
  420375:	aas    
  420376:	in     eax,dx
  420377:	pop    ebp
  420378:	pushf  
  420379:	hlt    
  42037a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42037b:	and    BYTE PTR [edx],0xb7
  42037e:	in     eax,0x84
  420380:	add    BYTE PTR [eax],al
  420382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420383:	(bad)  
  420384:	mov    es,ebp
  420386:	push   edx
  420387:	add    esi,DWORD PTR ds:0xd832af49
  42038d:	ret    
  42038e:	inc    edx
  42038f:	loope  0x4203ad
  420391:	jge    0x4203f0
  420393:	fcom   QWORD PTR [ebx]
  420395:	inc    esi
  420396:	mov    ds:0x2b5a3f02,al
  42039b:	inc    eax
  42039c:	out    0xdb,al
  42039e:	cli    
  42039f:	jb     0x4203ca
  4203a1:	add    al,0x73
  4203a3:	aas    
  4203a4:	sti    
  4203a5:	adc    ebp,DWORD PTR [ebx-0x217b193e]
  4203ab:	push   cs
  4203ac:	sbb    eax,0xe704dc5c
  4203b1:	add    esp,DWORD PTR [ecx+ecx*2]
  4203b4:	test   eax,0x692f25af
  4203b9:	pop    eax
  4203ba:	ret    0xbdd3
  4203bd:	mov    al,dh
  4203bf:	add    edi,esp
  4203c1:	add    esi,DWORD PTR [eax-0x54]
  4203c4:	out    0xb1,al
  4203c6:	rcl    DWORD PTR ds:0x28af213,1
  4203cc:	push   0x40
  4203ce:	xchg   esi,eax
  4203cf:	lea    esp,[edi+edi*8-0x9007696]
  4203d6:	push   esi
  4203d7:	add    bh,0x2f
  4203da:	push   esp
  4203db:	mov    al,BYTE PTR [edx-0xf]
  4203de:	daa    
  4203df:	lds    edi,FWORD PTR [ebx+0x6c]
  4203e2:	pop    ds
  4203e3:	mov    edi,0xe8ff
  4203e8:	sahf   
  4203e9:	shl    bh,cl
  4203eb:	ss call 0x9ed60030
  4203f1:	lods   al,BYTE PTR ds:[esi]
  4203f2:	daa    
  4203f3:	ins    BYTE PTR es:[edi],dx
  4203f4:	cmp    dl,BYTE PTR [edi+0x4f]
  4203f7:	add    ecx,eax
  4203f9:	mov    eax,ds:0xe748e8ff
  4203fe:	mov    dh,BYTE PTR [ecx+esi*4]
  420401:	mov    WORD PTR [ebp+0x29e79],es
  420407:	cmp    cl,dh
  420409:	xchg   ecx,eax
  42040a:	pop    ds
  42040b:	jmp    0xc73e81ae
  420410:	sahf   
  420411:	add    ch,BYTE PTR [edx-0x18]
  420414:	mov    ecx,0x385be746
  420419:	aas    
  42041a:	cld    
  42041b:	fimul  WORD PTR ds:0xa1e86957
  420421:	inc    esi
  420422:	mov    esi,0x80270e8a
  420427:	or     ebx,DWORD PTR [ecx+0x5e560d02]
  42042d:	or     al,cl
  42042f:	jo     0x42044d
  420431:	and    eax,0xac9ee8fe
  420436:	(bad)  
  420437:	popa   
  420438:	pop    ebp
  420439:	daa    
  42043a:	ins    BYTE PTR es:[edi],dx
  42043b:	or     esp,DWORD PTR [ecx-0x4961f2fe]
  420441:	test   eax,0x805d71fe
  420446:	loopne 0x420441
  420448:	jbe    0x420429
  42044a:	popa   
  42044b:	jmp    0xde00450
  420450:	mov    ch,0x0
  420452:	je     0x420492
  420454:	mov    edi,0xe6812d5f
  420459:	add    esp,eax
  42045b:	add    al,BYTE PTR [edi-0x4103f03a]
  420461:	add    al,0xb4
  420463:	outs   dx,DWORD PTR ds:[esi]
  420464:	xchg   esp,ebp
  420466:	push   ebp
  420467:	jae    0x420424
  420469:	out    dx,al
  42046a:	test   DWORD PTR [edx],eax
  42046c:	add    BYTE PTR [edi+0x1e],dl
  42046f:	add    cl,BYTE PTR [edi-0x1]
  420472:	popa   
  420473:	push   cs
  420474:	push   ss
  420475:	inc    eax
  420476:	test   BYTE PTR [edi+0x43f90cc0],al
  42047c:	dec    eax
  42047d:	push   eax
  42047e:	push   ds
  42047f:	push   es
  420480:	test   DWORD PTR [ebx],edi
  420482:	fstp   TBYTE PTR [ebx-0x230fbb9]
  420488:	in     al,0x25
  42048a:	jne    0x420451
  42048c:	sti    
  42048d:	mov    eax,edx
  42048f:	ret    0xfffc
  420492:	xor    al,0xb9
  420494:	cmp    DWORD PTR [eax],esi
  420496:	push   edx
  420497:	inc    edx
  420498:	cld    
  420499:	mov    BYTE PTR [edi-0x36ef99b6],al
  42049f:	mov    esp,0x23400c4
  4204a4:	push   eax
  4204a5:	lea    eax,[edi+0x4fffc86]
  4204ab:	jb     0x4204a8
  4204ad:	xlat   BYTE PTR ds:[ebx]
  4204ae:	pushf  
  4204af:	add    ch,bh
  4204b1:	inc    DWORD PTR [eax]
  4204b3:	add    ah,dh
  4204b5:	mov    edx,0x204d882
  4204ba:	add    BYTE PTR [eax+0x79],dl
  4204bd:	or     DWORD PTR [eax+eax*1-0xaffe0c],0x18c081a3
  4204c8:	jnp    0x420456
  4204ca:	call   0x6da1d2
  4204cf:	mov    esp,DWORD PTR [ebx]
  4204d1:	enter  0x0,0x9d
  4204d5:	fwait
  4204d6:	ja     0x42045d
  4204d8:	fldcw  WORD PTR [edx]
  4204da:	add    BYTE PTR [eax],al
  4204dc:	dec    ebp
  4204dd:	mov    al,ds:0x2abde748
  4204e2:	add    BYTE PTR [eax],al
  4204e4:	mov    ds:0x9d05fbdd,al
  4204e9:	sub    esi,DWORD PTR [edi-0x7b]
  4204ec:	popf   
  4204ed:	sub    eax,0xdeed0000
  4204f2:	jge    0x4204eb
  4204f4:	sahf   
  4204f5:	sub    eax,DWORD PTR [eax]
  4204f7:	push   eax
  4204f8:	test   DWORD PTR [esi+edi*8-0x1],ecx
  4204fc:	popf   
  4204fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204fe:	jge    0x420513
  420500:	mov    ds:0x1650002b,eax
  420505:	push   0x2b9f8658
  42050a:	add    BYTE PTR [ebp+0x5452],bh
  420510:	mov    bh,0x2a
  420512:	jns    0x4204d8
  420514:	xor    eax,0xffe3a1
  420519:	add    BYTE PTR [edx],bh
  42051b:	sub    al,0x8d
  42051d:	mov    edi,0x86f04b5c
  420522:	loopne 0x420593
  420524:	(bad)  
  420525:	(bad)  
  420526:	pop    ss
  420527:	ins    BYTE PTR es:[edi],dx
  420528:	pop    eax
  420529:	xchg   DWORD PTR [ebx+ebp*1+0x0],edi
  42052d:	or     eax,0x42f96b4a
  420532:	or     esp,ebp
  420534:	jp     0x4204b6
  420536:	sti    
  420537:	sub    DWORD PTR [eax],eax
  420539:	add    BYTE PTR [esi],ah
  42053b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42053c:	in     al,0x7
  42053e:	popf   
  42053f:	sub    edi,DWORD PTR [ebx-0x80]
  420542:	imul   DWORD PTR [ecx]
  420544:	add    BYTE PTR [eax],al
  420546:	push   ss
  420547:	add    ch,BYTE PTR [edx]
  420549:	cmp    al,0xdd
  42054b:	(bad)  
  42054c:	jno    0x420525
  42054e:	jle    0x42055a
  420550:	mov    ebp,0xe2c717ae
  420555:	mov    bl,0x34
  420557:	(bad)  
  420558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420559:	js     0x4205c0
  42055b:	into   
  42055c:	jno    0x42059c
  42055e:	mov    edx,0xa94536d6
  420563:	mov    BYTE PTR [ebx-0x2900ea39],ah
  420569:	in     eax,dx
  42056a:	fiadd  DWORD PTR [edx]
  42056c:	jo     0x4204f0
  42056e:	pop    esi
  42056f:	add    esp,edi
  420571:	add    esi,edi
  420573:	adc    bl,BYTE PTR [eax+eax*4+0x2]
  420577:	add    esp,edi
  420579:	add    ecx,ebp
  42057b:	lea    ebp,[ecx+0x3b]
  42057e:	add    BYTE PTR [eax],al
  420580:	jb     0x4205be
  420582:	out    0xb3,al
  420584:	imul   edx,DWORD PTR [esi+edi*2+0x1],0x76e63c62
  42058c:	pop    ds
  42058d:	xchg   ebx,eax
  42058e:	out    0x3,al
  420590:	popf   
  420591:	shl    BYTE PTR [ebx-0x7f],cl
  420594:	jb     0x420599
  420596:	out    0x3,eax
  420598:	in     eax,dx
  420599:	cmp    ebx,DWORD PTR [ebp+0x4f1b5e81]
  42059f:	add    BYTE PTR [edx],dh
  4205a1:	cmp    al,0xe6
  4205a3:	jbe    0x4205c4
  4205a5:	xchg   ecx,eax
  4205a6:	out    0x3,eax
  4205a8:	popf   
  4205a9:	shl    BYTE PTR [ebx-0x6f],cl
  4205ac:	test   BYTE PTR [ecx],0xe7
  4205af:	add    eax,DWORD PTR [edi+0x93c6a02]
  4205b5:	sub    edi,edi
  4205b7:	push   ecx
  4205b8:	add    BYTE PTR [ecx+esi*2],bh
  4205bb:	jg     0x420605
  4205bd:	add    ah,bh
  4205bf:	add    ebx,DWORD PTR [edx]
  4205c1:	cmp    bh,0x84
  4205c4:	pushf  
  4205c5:	add    al,BYTE PTR [eax]
  4205c7:	add    esp,ecx
  4205c9:	mov    BYTE PTR [edx+0x29e8f],al
  4205cf:	mov    ecx,0xeae3824b
  4205d4:	sahf   
  4205d5:	add    dl,BYTE PTR [eax+0x4e]
  4205d8:	jo     0x42055c
  4205da:	ret    
  4205db:	cmc    
  4205dc:	(bad)  
  4205dd:	(bad)  
  4205de:	(bad)  
  4205df:	call   0x7bc48d82
  4205e4:	add    BYTE PTR [eax],al
  4205e6:	sahf   
  4205e7:	add    al,BYTE PTR [eax]
  4205e9:	cdq    
  4205ea:	sub    esi,DWORD PTR [edx-0x9]
  4205ed:	jmp    0x431d:0xe96a029e
  4205f4:	cld    
  4205f5:	add    DWORD PTR [ebp+0x40efd30],esp
  4205fb:	or     ebp,0x87029ee8
  420601:	push   0x71
  420603:	add    eax,0x344e900
  420608:	mov    esp,DWORD PTR [ebx+eiz*4+0x3c]
  42060c:	cld    
  42060d:	jmp    0xe9c28e20
  420612:	push   eax
  420613:	cmp    edi,esp
  420615:	cmp    eax,esp
  420617:	push   esi
  420618:	and    BYTE PTR [ebp-0x17fc5cb6],0x9e
  42061f:	add    cl,BYTE PTR [ebx-0x3c3939c]
  420625:	jmp    0xd5f28e18
  42062a:	and    BYTE PTR [ebx],bh
  42062c:	cld    
  42062d:	adc    esp,DWORD PTR [ecx+0x769ec781]
  420633:	cs out dx,al
  420635:	xchg   edi,eax
  420636:	popa   
  420637:	mov    al,BYTE PTR [edx+0x29f83]
  42063d:	add    bl,al
  42063f:	test   DWORD PTR fs:[ebx-0x3c930],eax
  420646:	xchg   ecx,eax
  420647:	rol    BYTE PTR [eax],0x0
  42064a:	add    BYTE PTR [eax],al
  42064c:	mov    DWORD PTR [ecx+0x377081e8],edi
  420652:	std    
  420653:	inc    esp
  420655:	and    DWORD PTR [ecx-0x4398d08],0xfcaeb900
  42065f:	inc    esp
  420661:	outs   dx,BYTE PTR ds:[esi]
  420662:	mov    DWORD PTR [ebp-0x43aa4],eax
  420668:	pop    esp
  420669:	pushf  
  42066a:	sbb    al,BYTE PTR [eax]
  42066c:	mov    ah,0x81
  42066e:	jns    0x42067c
  420670:	test   BYTE PTR [edx+0xd],cl
  420673:	mov    ecx,DWORD PTR [ecx+0x32]
  420676:	xchg   DWORD PTR [ebp+0x7c],ecx
  420679:	mov    cl,0x81
  42067b:	clc    
  42067c:	xchg   edx,eax
  42067d:	mov    esi,0x1e99e8fb
  420682:	cld    
  420683:	jmp    FWORD PTR [ebp+0x90004c3]
  420689:	mov    ebx,0xcd9883e8
  42068e:	jge    0x42067c
  420690:	fmul   DWORD PTR [eax+eax*1]
  420693:	add    BYTE PTR [ebx+0x4424b893],cl
  420699:	(bad)  
  42069a:	(bad)  
  42069b:	call   FWORD PTR [edx+edx*4-0x3d]
  42069f:	(bad)  
  4206a0:	arpl   WORD PTR [edx+0x62c2460],ax
  4206a6:	mov    DWORD PTR [eax+ebx*4+0x34000137],eax
  4206ad:	push   esi
  4206ae:	mov    DWORD PTR [eax+eax*1+0x0],eax
  4206b2:	call   0x129deec0
  4206b7:	push   es
  4206b8:	add    BYTE PTR [ebx-0x45f42163],cl
  4206be:	repz sub al,BYTE PTR [eax]
  4206c1:	add    BYTE PTR [eax],ch
  4206c3:	call   0xdb470eaf
  4206c8:	and    BYTE PTR [eax],al
  4206ca:	popf   
  4206cb:	adc    BYTE PTR [ebp+0x76d40e2],cl
  4206d1:	add    BYTE PTR [esi],ah
  4206d3:	jo     0x4206b9
  4206d5:	add    ebp,DWORD PTR [esi+0x71]
  4206d8:	(bad)  
  4206d9:	mov    ah,0x2f
  4206db:	sub    eax,DWORD PTR [eax]
  4206dd:	add    BYTE PTR [ebp-0x4502d167],dh
  4206e3:	lods   al,BYTE PTR ds:[esi]
  4206e4:	cmp    edi,esp
  4206e6:	sub    DWORD PTR [ecx-0xb],ebp
  4206e9:	fmul   DWORD PTR [esi-0x64]
  4206ec:	stos   BYTE PTR es:[edi],al
  4206ed:	adc    ecx,DWORD PTR [ebx-0x65]
  4206f0:	inc    ecx
  4206f1:	jae    0x4206b4
  4206f3:	dec    ebx
  4206f4:	aad    0x50
  4206f6:	xchg   edx,eax
  4206f7:	cs mov al,0x11
  4206fa:	(bad)  [ebx]
  4206fc:	std    
  4206fd:	rol    BYTE PTR [ebx],0x52
  420700:	(bad)  
  420701:	or     ebp,DWORD PTR [ebp-0x160324bd]
  420707:	and    BYTE PTR [ebp-0x14516e09],al
  42070d:	xchg   DWORD PTR [ebp+eax*4+0x7d1fd08],eax
  420714:	sbb    BYTE PTR [ebx-0x7ee60000],cl
  42071a:	add    eax,DWORD PTR [eax]
  42071c:	popf   
  42071d:	sti    
  42071e:	inc    eax
  42071f:	adc    cl,BYTE PTR [ebp+0x27ffc031]
  420725:	out    0xe7,eax
  420727:	pop    ds
  420728:	and    al,0xa0
  42072a:	outs   dx,BYTE PTR ds:[esi]
  42072b:	(bad)  
  42072c:	sub    ch,BYTE PTR [ebx]
  42072e:	test   ebx,eax
  420730:	xchg   ecx,eax
  420731:	mov    ebx,0x2765e03
  420736:	test   eax,0xa6f49d0f
  42073b:	adc    DWORD PTR cs:[ebp-0x2a6117de],ecx
  420742:	xor    al,0x91
  420744:	xor    DWORD PTR [edi+eiz*8+0x3],esi
  420748:	popf   
  420749:	sub    al,BYTE PTR [eax+esi*1+0x3b6938e8]
  420750:	loope  0x4206ff
  420752:	sbb    al,0xf7
  420754:	cmc    
  420755:	aam    0xb9
  420757:	lods   eax,DWORD PTR ds:[esi]
  420758:	scas   al,BYTE PTR es:[edi]
  420759:	shl    BYTE PTR [esi+0x6de4e42],1
  42075f:	xlat   BYTE PTR ds:[ebx]
  420760:	ins    DWORD PTR es:[edi],dx
  420761:	cmp    ebx,esi
  420763:	mov    bl,0x8c
  420765:	ret    0xfee6
  420768:	fnsave [edi-0xd696f0c]
  42076e:	out    dx,al
  42076f:	fsub   QWORD PTR [ecx-0x6d791a53]
  420775:	shld   esp,ebp,0x1a
  420779:	sbb    dl,BYTE PTR [ecx-0x77fffff5]
  42077f:	scas   eax,DWORD PTR es:[edi]
  420780:	retf   0x1617
  420783:	and    BYTE PTR [esp+eax*1],0x9d
  420787:	add    dl,BYTE PTR [edi-0x2b0d70be]
  42078d:	ret    
  42078e:	push   0xffffff8d
  420790:	stos   BYTE PTR es:[edi],al
  420791:	out    0x82,eax
  420793:	mov    DWORD PTR [ebp+0x51],esp
  420796:	pop    ebx
  420797:	cmp    dh,ah
  420799:	test   BYTE PTR [esi+0x7],bl
  42079c:	xchg   edi,eax
  42079d:	add    ebp,ebx
  42079f:	fld    TBYTE PTR [eax-0x590b62f0]
  4207a5:	sub    eax,0xe8328c31
  4207aa:	sahf   
  4207ab:	rcl    DWORD PTR [edi+ecx*4],cl
  4207ae:	cli    
  4207af:	push   esp
  4207b0:	jmp    edi
  4207b2:	sahf   
  4207b3:	add    ch,al
  4207b5:	das    
  4207b6:	retf   0xfc35
  4207b9:	push   0xffffffd1
  4207bb:	ss jae 0x42078d
  4207be:	adc    DWORD PTR [ebx+0x50],ebx
  4207c1:	cmp    dh,BYTE PTR [ebx]
  4207c3:	adc    al,0x56
  4207c5:	cmp    DWORD PTR [ebx+esi*4+0x23],ebx
  4207c9:	leave  
  4207ca:	leave  
  4207cb:	sar    ah,cl
  4207cd:	aam    0x2e
  4207cf:	adc    al,BYTE PTR [eax-0x17]
  4207d2:	loope  0x420816
  4207d4:	jge    0x4207ad
  4207d6:	sub    ecx,DWORD PTR [eax+esi*1]
  4207d9:	and    esi,esi
  4207db:	ss jae 0x4207c4
  4207de:	and    DWORD PTR [eax],esi
  4207e0:	adc    edx,esp
  4207e2:	add    BYTE PTR [eax],al
  4207e4:	xchg   edi,eax
  4207e5:	mov    dl,BYTE PTR [esi]
  4207e7:	cdq    
  4207e8:	sahf   
  4207e9:	fcomp  DWORD PTR [eax+0x2b]
  4207ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ed:	add    dh,BYTE PTR [edx]
  4207ef:	sub    DWORD PTR [eax+0x2e],edi
  4207f2:	push   edx
  4207f3:	bound  ebp,QWORD PTR [ebp-0x48]
  4207f6:	jmp    0x4207dd
  4207f8:	mov    al,ds:0x74ba0002
  4207fd:	into   
  4207fe:	addr16 call 0x64420aa3
  420804:	sbb    bh,BYTE PTR [ebx]
  420806:	cli    
  420807:	push   cs
  420808:	fadd   st(7),st
  42080a:	cld    
  42080b:	jl     0x4207b3
  42080d:	xor    eax,0xc2902512
  420812:	jmp    DWORD PTR [ecx-0x3f]
  420815:	test   al,bl
  420817:	outs   dx,DWORD PTR ds:[esi]
  420818:	dec    ecx
  420819:	repnz cld 
  42081b:	sbb    dl,BYTE PTR [edi-0x55a4aca]
  420821:	idiv   bh
  420823:	popa   
  420824:	sub    al,0x77
  420826:	imul   ebp,DWORD PTR [ecx],0xffffffa1
  420829:	mov    eax,DWORD PTR [edx-0x407a800]
  42082f:	inc    DWORD PTR [ebp+eax*4-0x4e91741]
  420836:	cli    
  420837:	inc    DWORD PTR [ecx-0x78ed8f3d]
  42083d:	leave  
  42083e:	or     BYTE PTR [edi+0x77],al
  420841:	rol    DWORD PTR [edx+esi*2+0x4d],0x2e
  420846:	mov    esp,0xca00005f
  42084b:	push   ebp
  42084c:	(bad)
  42084f:	add    esp,DWORD PTR [edi-0x1]
  420852:	clc    
  420853:	push   0x673c8787
  420858:	cmp    al,0x0
  42085a:	pop    ds
  42085b:	call   0x84aa93b1
  420860:	call   0x44cc59
  420865:	push   esi
  420866:	add    ebp,DWORD PTR [ebx-0x78]
  420869:	add    esp,eax
  42086b:	add    cl,BYTE PTR [edi-0x18]
  42086e:	idiv   DWORD PTR [eax+0x106bfffa]
  420874:	pusha  
  420875:	adc    esp,esi
  420877:	add    al,BYTE PTR [ebp-0xb807fbd]
  42087d:	push   DWORD PTR [ecx]
  42087f:	or     esi,DWORD PTR [edx]
  420881:	shr    BYTE PTR [ebp+0x74fffe4a],0x2f
  420888:	repnz push esi
  42088a:	fnstcw WORD PTR [eax+eax*4]
  42088d:	push   eax
  42088e:	or     al,0x11
  420890:	xchg   ebp,eax
  420891:	mov    BYTE PTR [eax],al
  420893:	jmp    0x4589:0xf66ac28f
  42089a:	rcl    BYTE PTR [ecx-0x5],0x15
  42089e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089f:	sbb    al,BYTE PTR [eax+0x0]
  4208a2:	int    0x41
  4208a4:	add    al,0x3b
  4208a6:	popf   
  4208a7:	gs mov bh,0xd4
  4208aa:	(bad)  
  4208ab:	sub    cl,BYTE PTR [edi+0x19000042]
  4208b1:	sbb    al,0xac
  4208b3:	adc    DWORD PTR [esp+esi*4],eax
  4208b6:	xchg   edi,esp
  4208b8:	scas   eax,DWORD PTR es:[edi]
  4208b9:	imul   edi,DWORD PTR ds:0x87df28fc,0x3116b4f
  4208c3:	mov    ebp,0xffc0c765
  4208c8:	imul   ecx,DWORD PTR [esi+edx*1+0x3eb8fb8],0xffffff87
  4208d0:	pop    esi
  4208d1:	das    
  4208d2:	stc    
  4208d3:	lds    esi,FWORD PTR [ecx-0x3a]
  4208d6:	test   eax,0x87e711fe
  4208db:	dec    edi
  4208dc:	inc    ebp
  4208dd:	dec    ecx
  4208de:	call   0xcc15be5a
  4208e3:	ror    ebx,0xd4
  4208e6:	mov    es,WORD PTR [edx+0x19]
  4208e9:	jl     0x4208bd
  4208eb:	push   esp
  4208ec:	mov    edx,0x5d0ed82e
  4208f1:	sub    ecx,DWORD PTR [ebx+0x46009140]
  4208f7:	jae    0x420910
  4208f9:	inc    edx
  4208fa:	add    ecx,DWORD PTR [ebx+0x67d39fe0]
  420900:	mov    edi,0x7597bbc9
  420905:	ds ds std 
  420908:	sbb    BYTE PTR [esi-0x7c327c3a],0xe8
  42090f:	mov    cs,WORD PTR [ebp+0x28]
  420912:	shr    BYTE PTR [ecx+0x0],cl
  420915:	add    BYTE PTR [ecx-0x77032d74],ah
  42091b:	xor    edx,DWORD PTR [eax]
  42091d:	inc    eax
  42091e:	popf   
  42091f:	mov    ds:0x25b3900,al
  420924:	test   BYTE PTR [edi+0x3edd35e6],0xe8
  42092b:	int3   
  42092c:	cmp    al,0xaa
  42092e:	pushf  
  42092f:	ror    ch,cl
  420931:	sbb    BYTE PTR ds:0x64042713,bl
  420937:	cmp    al,0xed
  420939:	xchg   edx,ebx
  42093b:	xor    eax,0xc1233eb5
  420940:	(bad)  
  420941:	or     ch,al
  420943:	add    esp,edi
  420945:	add    esi,DWORD PTR [ebx-0x75]
  420948:	sub    DWORD PTR [ebx+ebx*8],ebx
  42094b:	mov    esi,0xef80391
  420950:	jg     0x420969
  420952:	pop    ebp
  420953:	add    dh,BYTE PTR [eax-0x38]
  420956:	out    dx,al
  420957:	clc    
  420958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420959:	push   cs
  42095a:	sbb    DWORD PTR [eax-0x7662fc19],esi
  420960:	stos   DWORD PTR es:[edi],eax
  420961:	pop    ebx
  420962:	mov    ds:0xa2a9e6c2,al
  420967:	shr    BYTE PTR [edi-0x4e],cl
  42096a:	jle    0x4208f7
  42096c:	fldpi  
  42096e:	mov    ecx,0xb009c04c
  420973:	scas   al,BYTE PTR es:[edi]
  420974:	cmp    cl,BYTE PTR [ebp+ebx*2+0x563de6]
  42097b:	add    BYTE PTR ds:0xebd402c9,dl
  420981:	xor    esi,DWORD PTR [ebx-0x293fe4c9]
  420987:	ds scas eax,DWORD PTR es:[edi]
  420989:	outs   dx,BYTE PTR ds:[esi]
  42098a:	test   bl,0x82
  42098d:	stc    
  42098e:	sub    al,0xb7
  420990:	(bad)  
  420991:	shl    BYTE PTR [ebp+edx*8-0x2c393fd9],cl
  420998:	pop    ss
  420999:	mov    esi,0xae61d2f6
  42099e:	(bad)  
  42099f:	cld    
  4209a0:	xchg   DWORD PTR [eax+0x299ee9eb],eax
  4209a6:	add    DWORD PTR [edx],ebx
  4209a8:	loope  0x4209e0
  4209aa:	jb     0x420981
  4209ac:	push   ss
  4209ad:	ret    
  4209ae:	sbb    edi,DWORD PTR [edi]
  4209b0:	js     0x4209c2
  4209b2:	inc    eax
  4209b3:	hlt    
  4209b4:	pop    esi
  4209b5:	xor    al,0x37
  4209b7:	cmp    bh,BYTE PTR [ebp+0x5]
  4209ba:	test   ah,dl
  4209bc:	lahf   
  4209bd:	add    al,BYTE PTR [eax]
  4209bf:	(bad)  
  4209c0:	jmp    0x6605:0xde626523
  4209c7:	test   al,0xb9
  4209c9:	add    cl,BYTE PTR [eax-0x49f8fed6]
  4209cf:	test   eax,0xbd4065a8
  4209d4:	daa    
  4209d5:	ret    
  4209d6:	xor    edx,DWORD PTR [ecx-0x64]
  4209d9:	scas   al,BYTE PTR es:[edi]
  4209da:	add    eax,0x8037b96a
  4209df:	test   eax,0xc3a50000
  4209e4:	xchg   BYTE PTR [edx],ch
  4209e6:	aad    0x1b
  4209e8:	or     al,0x9d
  4209ea:	mov    esi,DWORD PTR [esi]
  4209ec:	jg     0x4209ca
  4209ee:	xchg   esi,eax
  4209ef:	xor    eax,edx
  4209f1:	lods   al,BYTE PTR ds:[esi]
  4209f2:	jne    0x420a28
  4209f4:	or     eax,0xfc333d64
  4209f9:	jmp    0x414d8319
  4209fe:	pusha  
  4209ff:	lds    ebp,FWORD PTR ss:[ebp+edx*8-0x255a1bcd]
  420a07:	xor    eax,0xaaae93fc
  420a0c:	xchg   edi,eax
  420a0d:	pop    ecx
  420a0e:	pop    esp
  420a0f:	xor    ecx,DWORD PTR [ebx-0x183c8556]
  420a15:	out    dx,eax
  420a16:	jmp    0x92ab:0xf100fc35
  420a1d:	std    
  420a1e:	arpl   si,si
  420a20:	in     al,0xa1
  420a22:	dec    ebp
  420a23:	idiv   bl
  420a25:	mov    eax,esp
  420a27:	fdiv   st(5),st
  420a29:	push   DWORD PTR [eax+ecx*4]
  420a2c:	aas    
  420a2d:	dec    esp
  420a2e:	std    
  420a2f:	in     al,0xfd
  420a31:	inc    DWORD PTR [edx+ecx*4-0x3e]
  420a35:	mov    BYTE PTR [edi+edi*8+0x3f],0x49
  420a3a:	imul   esi,edi,0xff350264
  420a40:	dec    DWORD PTR [ecx+ecx*4+0xfff82c]
  420a47:	add    BYTE PTR [ebx+0x4f],al
  420a4a:	mov    DWORD PTR [ebx-0x3c],eax
  420a4d:	dec    esi
  420a4e:	in     al,0xe7
  420a50:	addr16 cmc 
  420a52:	sti    
  420a53:	push   0x5
  420a55:	test   BYTE PTR [ecx-0x7c],al
  420a58:	mov    ah,0x66
  420a5a:	push   ds
  420a5b:	mov    cl,0x7c
  420a5d:	pop    ss
  420a5e:	call   0xfc373f39
  420a63:	lea    ecx,[ecx+0x43334c8a]
  420a69:	dec    esi
  420a6a:	fs pop eax
  420a6c:	xor    BYTE PTR [edx-0x4],al
  420a6f:	dec    cl
  420a71:	push   esi
  420a72:	or     eax,0x7f87c440
  420a77:	pusha  
  420a78:	(bad)  
  420a7b:	cmp    bh,BYTE PTR [ebx+0x6]
  420a7e:	test   BYTE PTR [ebx],cl
  420a80:	(bad)  
  420a81:	idiv   bl
  420a83:	push   edi
  420a84:	rcr    DWORD PTR [eax],cl
  420a86:	call   0x87484e9f
  420a8b:	lock jg 0x420a85
  420a8e:	jo     0x420ad9
  420a90:	dec    edx
  420a91:	out    dx,eax
  420a92:	adc    DWORD PTR [eax-0x3fd463],esi
  420a98:	and    eax,0x6afed49d
  420a9d:	sbb    al,0xf7
  420a9f:	(bad)  
  420aa0:	jmp    0xc540b110
  420aa5:	sbb    dl,dl
  420aa7:	cld    
  420aa8:	test   al,0xf7
  420aaa:	adc    BYTE PTR [eax+0x0],al
  420aad:	add    BYTE PTR [ebp-0x63a47b4e],bl
  420ab3:	sbb    eax,DWORD PTR [eax]
  420ab5:	cmp    DWORD PTR [edx-0x30],esp
  420ab8:	sbb    al,0x50
  420aba:	xor    cl,BYTE PTR [ebp+0x1c2afecf]
  420ac0:	cmp    DWORD PTR [edx],edx
  420ac2:	cmp    eax,0x25ffc04c
  420ac7:	popf   
  420ac8:	(bad)  
  420aca:	adc    bl,BYTE PTR [edi*8+0x3e1f91c4]
  420ad1:	inc    edx
  420ad2:	push   es
  420ad3:	sbb    ecx,esi
  420ad5:	push   esp
  420ad6:	cli    
  420ad7:	rcl    BYTE PTR cs:[edx],0x5d
  420adb:	sbb    ecx,DWORD PTR [edx-0x261719be]
  420ae1:	(bad)  
  420ae2:	fbld   TBYTE PTR [edi]
  420ae4:	add    BYTE PTR [ecx+0x26],dl
  420ae7:	push   edi
  420ae8:	sbb    al,0xf
  420aea:	pop    ebp
  420aeb:	sbb    ecx,esi
  420aed:	mov    ch,cl
  420aef:	mov    ah,0xc1
  420af1:	sbb    ebp,DWORD PTR [edx-0x5a]
  420af4:	inc    ebx
  420af5:	jae    0x420a95
  420af7:	imul   edi,DWORD PTR [ecx],0xffffffd0
  420afa:	es push 0x4
  420afd:	mov    DWORD PTR [eax+0x7b],ebp
  420b00:	adc    eax,0x43a69d40
  420b05:	jae    0x420aa5
  420b07:	mov    edi,DWORD PTR [ecx]
  420b09:	aam    0x26
  420b0b:	imul   edi,esp,0x26028580
  420b11:	mov    al,0x0
  420b13:	add    BYTE PTR [ecx+0x1111dd2],bl
  420b19:	adc    al,0xa7
  420b1b:	add    esp,DWORD PTR [eax+ecx*8]
  420b1e:	repnz sub BYTE PTR [edx],0xb6
  420b22:	jmp    0x719b6cfa
  420b27:	ret    0x87aa
  420b2a:	es mov al,0x99
  420b2d:	shr    ch,cl
  420b2f:	adc    BYTE PTR [ecx+0x12],dl
  420b32:	daa    
  420b33:	add    al,0x14
  420b35:	or     BYTE PTR [ebx+eax*2-0x52],ah
  420b39:	add    eax,0x82493b37
  420b3e:	dec    edx
  420b3f:	loopne 0x420adb
  420b41:	add    bh,BYTE PTR [ebx]
  420b43:	mov    ebp,0x51e8815
  420b48:	popf   
  420b49:	add    ch,BYTE PTR [ebx+eax*2-0x72]
  420b4d:	call   DWORD PTR [esi]
  420b4f:	cmp    edx,DWORD PTR [eax-0x2a]
  420b52:	out    0x3,eax
  420b54:	popf   
  420b55:	xor    ebx,esi
  420b57:	and    ebp,DWORD PTR [edx+0x188ee6c2]
  420b5d:	into   
  420b5e:	out    0x3,eax
  420b60:	popf   
  420b61:	xchg   DWORD PTR [esi+0x7dd29daf],esp
  420b67:	push   esi
  420b68:	and    eax,0x9d051a88
  420b6d:	add    ah,BYTE PTR [ebx+eax*2+0x4e]
  420b71:	or     DWORD PTR [edi-0x9a950c6],esi
  420b77:	ret    
  420b78:	add    BYTE PTR [eax],al
  420b7a:	mov    edx,0xb3a36c7b
  420b7f:	xor    dh,ah
  420b81:	sub    dl,0xb5
  420b84:	jmp    0x719aad5c
  420b89:	sbb    DWORD PTR [edx],0x9ee90002
  420b8f:	cmp    DWORD PTR [edi-0x657f4b],0xffffffb8
  420b96:	(bad)  
  420b97:	adc    al,0x10
  420b99:	cli    
  420b9a:	pop    esi
  420b9b:	xor    BYTE PTR [ebx],bh
  420b9d:	jmp    0x420b38
  420b9f:	add    al,BYTE PTR [eax]
  420ba1:	xchg   ebp,eax
  420ba2:	nop
  420ba3:	pushf  
  420ba4:	call   DWORD PTR [edx-0x1ee6362]
  420baa:	int    0x87
  420bac:	(bad)  
  420bad:	call   0x19543950
  420bb2:	mov    bl,0xc2
  420bb4:	jmp    DWORD PTR [edi-0x21]
  420bb7:	stos   DWORD PTR es:[edi],eax
  420bb8:	(bad)  
  420bb9:	call   0x9e0b265c
  420bbe:	je     0x420bee
  420bc0:	pop    esp
  420bc1:	das    
  420bc2:	dec    eax
  420bc3:	inc    edx
  420bc4:	add    ebp,ecx
  420bc6:	adc    ecx,ecx
  420bc8:	jae    0xea3e3bef
  420bce:	xchg   edx,eax
  420bcf:	outs   dx,DWORD PTR ds:[esi]
  420bd0:	jae    0x420c06
  420bd2:	and    DWORD PTR [ebx+eiz*1+0xcd19eed],ebp
  420bd9:	jne    0x420c3b
  420bdb:	aad    0xfd
  420bdd:	mov    ds:0x78a40000,al
  420be2:	out    dx,eax
  420be3:	retf   
  420be4:	dec    eax
  420be5:	xchg   DWORD PTR [ebx],ebx
  420be7:	test   esp,0x13493bca
  420bed:	retf   
  420bee:	cmp    ecx,DWORD PTR [eax+0xf]
  420bf1:	out    dx,al
  420bf2:	cmp    ecx,DWORD PTR [edx+0xf]
  420bf5:	(bad)  
  420bf7:	mov    WORD PTR [edi+edi*4],cs
  420bfa:	cmp    DWORD PTR [eax+0x3d],0x2f
  420bfe:	cld    
  420bff:	jmp    0x78c60807
  420c04:	dec    edx
  420c05:	das    
  420c06:	cld    
  420c07:	add    BYTE PTR [eax+eiz*2-0x223bcd00],dh
  420c0e:	dec    BYTE PTR [edx+0x123d7ec6]
  420c14:	fbstp  TBYTE PTR [edx]
  420c16:	adc    BYTE PTR [ecx+0x6d6],0x11
  420c1d:	pop    es
  420c1e:	test   BYTE PTR [ecx+0x6e7],dl
  420c24:	adc    DWORD PTR [edi],ebp
  420c26:	das    
  420c27:	ror    BYTE PTR [edi-0x333d78f8],0x43
  420c2e:	or     eax,0x8daf6deb
  420c33:	mov    al,ds:0x75000334
  420c38:	dec    eax
  420c39:	scas   eax,DWORD PTR es:[edi]
  420c3a:	lea    esp,[ecx+0x75000344]
  420c40:	inc    eax
  420c41:	ss mov esp,0x360000eb
  420c47:	jle    0x420c07
  420c49:	mov    BYTE PTR [ebp+0x16],dh
  420c4c:	das    
  420c4d:	rol    BYTE PTR [eax+0x573fd54],0x43
  420c54:	adc    BYTE PTR [ecx-0xa],0x5e
  420c58:	inc    DWORD PTR [edx+0x5184054c]
  420c5e:	add    BYTE PTR [edi-0x1],bl
  420c61:	cmp    BYTE PTR [ebx+edx*1],0x84
  420c65:	push   ecx
  420c66:	in     al,0x5e
  420c68:	inc    DWORD PTR [edx+0x51802f2c]
  420c6e:	cmc    
  420c6f:	pop    esi
  420c70:	inc    DWORD PTR [edx+0x4c1fafc]
  420c76:	mov    ah,0x3f
  420c78:	xchg   esp,ebp
  420c7a:	aaa    
  420c7b:	pmaddwd mm0,QWORD PTR [ecx-0x34098]
  420c82:	popf   
  420c83:	sbb    ebx,edx
  420c85:	cld    
  420c86:	nop
  420c87:	pop    ebp
  420c88:	adc    DWORD PTR [eax-0x63],eax
  420c8b:	mov    DWORD PTR [edi],esi
  420c8d:	adc    bh,BYTE PTR [ecx+0x19ffc057]
  420c93:	fsubr  QWORD PTR [edx+eiz*2+0x3dc9018]
  420c9a:	in     al,dx
  420c9b:	xchg   ecx,eax
  420c9c:	pushf  
  420c9d:	mov    ch,cl
  420c9f:	inc    edi
  420ca0:	mov    eax,0xd01a074e
  420ca5:	cld    
  420ca6:	nop
  420ca7:	repz adc eax,DWORD PTR [eax+0x0]
  420cab:	add    BYTE PTR [ebp-0x168cbf62],bl
  420cb1:	cwde   
  420cb2:	mov    ah,0x23
  420cb4:	cdq    
  420cb5:	lods   eax,DWORD PTR gs:[esi]
  420cb7:	inc    edx
  420cb8:	mov    bh,0x1b
  420cba:	test   DWORD PTR [ebx+0x79],eax
  420cbd:	aaa    
  420cbe:	shl    BYTE PTR [edi+0x28],1
  420cc1:	repz in al,dx
  420cc3:	es inc ebp
  420cc5:	fwait
  420cc6:	jne    0x420cc5
  420cc8:	sub    al,dl
  420cca:	(bad)  
  420ccb:	mov    bl,cl
  420ccd:	inc    DWORD PTR [edi]
  420ccf:	mov    ebp,DWORD PTR [ecx+0x7]
  420cd2:	mov    al,0xe7
  420cd4:	adc    DWORD PTR [ebx+0x5c20fc35],ebp
  420cda:	scas   al,BYTE PTR es:[edi]
  420cdb:	push   ds
  420cdc:	ins    DWORD PTR es:[edi],dx
  420cdd:	mov    al,ds:0x1b5eb7db
  420ce2:	sub    BYTE PTR [ebx-0x7ccb6b0a],dl
  420ce8:	fst    QWORD PTR [edi]
  420cea:	or     eax,DWORD PTR [ecx+0x40643b90]
  420cf0:	popf   
  420cf1:	daa    
  420cf2:	sub    DWORD PTR [esi],eax
  420cf4:	inc    edi
  420cf5:	sbb    ecx,DWORD PTR [ecx+0x36b5b5c0]
  420cfb:	cld    
  420cfc:	ret    0xc202
  420cff:	mov    bh,BYTE PTR [edi+0x5e8b29cf]
  420d05:	out    0xea,al
  420d07:	ds pushf 
  420d09:	(bad)  
  420d0a:	iret   
  420d0b:	ret    
  420d0c:	mov    ds:0xe79778,al
  420d11:	add    ch,al
  420d13:	rol    DWORD PTR [edx],cl
  420d15:	lea    esp,[edx-0x4a0c6887]
  420d1b:	sar    esi,cl
  420d1d:	mov    edx,ss
  420d1f:	push   es
  420d20:	jb     0x420ca7
  420d22:	into   
  420d23:	add    esp,edi
  420d25:	add    ebx,DWORD PTR [edi+0x6]
  420d28:	out    0xd0,eax
  420d2a:	adc    eax,0xca28691e
  420d2f:	jns    0x420d58
  420d31:	mov    edi,esp
  420d33:	pop    esi
  420d34:	nop
  420d35:	adc    ebx,DWORD PTR [edx]
  420d37:	mov    edi,0xe6da88f2
  420d3c:	cwde   
  420d3d:	mov    bh,dl
  420d3f:	push   ds
  420d40:	aaa    
  420d41:	(bad)  
  420d42:	fistp  WORD PTR [edx]
  420d44:	into   
  420d45:	add    BYTE PTR [edx],al
  420d47:	sub    al,0xd5
  420d49:	test   eax,0x73cdd09c
  420d4e:	into   
  420d4f:	add    esp,edi
  420d51:	add    ebx,DWORD PTR [eax]
  420d53:	pop    ss
  420d54:	daa    
  420d55:	adc    BYTE PTR [ebp+0x2],bl
  420d58:	inc    ecx
  420d59:	add    al,0x8
  420d5b:	pop    ss
  420d5c:	mov    bh,0x12
  420d5e:	pop    ebp
  420d5f:	add    ch,BYTE PTR [ebx+eax*2+0x6e]
  420d63:	clc    
  420d64:	mov    DWORD PTR ss:[edi+0x1a],ebx
  420d68:	ss sub al,0xbe
  420d6b:	(bad)  
  420d6c:	lea    esi,[esi]
  420d6e:	fild   DWORD PTR [eax+0x1c]
  420d71:	iret   
  420d72:	and    eax,0xbd7133
  420d77:	add    BYTE PTR [edx-0x35c700d3],ah
  420d7d:	sub    edi,esp
  420d7f:	jmp    0xe841929b
  420d84:	sahf   
  420d85:	add    cl,BYTE PTR [edi-0x2d]
  420d88:	adc    bh,BYTE PTR [edx-0x7]
  420d8b:	sbb    cl,BYTE PTR [edi-0x2c]
  420d8e:	out    0x18,eax
  420d90:	int    0x2d
  420d92:	cld    
  420d93:	ins    BYTE PTR es:[edi],dx
  420d94:	fisubr WORD PTR [edi-0x1fbdc1f5]
  420d9a:	or     ebx,DWORD PTR [ecx+0x72e74717]
  420da0:	sub    BYTE PTR ds:0x4250c6fc,0x3
  420da7:	jmp    0xe565bd57
  420dac:	pop    ss
  420dad:	ins    DWORD PTR es:[edi],dx
  420dae:	cld    
  420daf:	xchg   ebp,eax
  420db0:	inc    edx
  420db1:	clc    
  420db2:	cld    
  420db3:	jge    0x420e2f
  420db5:	clc    
  420db6:	push   ecx
  420db7:	adc    DWORD PTR ds:0xdce8ff4b,edx
  420dbd:	idiv   edi
  420dbf:	sub    al,BYTE PTR [edx+0x2c]
  420dc2:	push   ebx
  420dc3:	jb     0x420d4a
  420dc5:	and    bl,0xe1
  420dc8:	and    al,0xc1
  420dca:	or     ebp,DWORD PTR [edx+0x75]
  420dcd:	pop    es
  420dce:	push   ecx
  420dcf:	aaa    
  420dd0:	push   eax
  420dd1:	xor    edi,0xffffffc4
  420dd4:	mov    al,ds:0x9ee87086
  420dd9:	add    cl,BYTE PTR ds:0x500006f
  420ddf:	sub    eax,0x341de9fc
  420de4:	cld    
  420de5:	idiv   BYTE PTR [ecx-0xe]
  420de8:	(bad)  
  420de9:	call   0xe1b43b8c
  420dee:	mov    cl,0x10
  420df0:	js     0x420de7
  420df2:	fisubr WORD PTR [ebx]
  420df4:	mov    DWORD PTR [eax],eax
  420df6:	sbb    al,0xac
  420df8:	sti    
  420df9:	(bad)  
  420dfc:	std    
  420dfd:	push   DWORD PTR [edx+eax*4-0x917dbb8]
  420e04:	push   ebx
  420e05:	(bad)  
  420e06:	mov    ecx,0xc4400fc3
  420e0b:	xor    dl,bh
  420e0d:	mov    eax,edi
  420e0f:	dec    ebx
  420e10:	or     al,0xbe
  420e12:	mov    ah,0x2b
  420e14:	cld    
  420e15:	dec    DWORD PTR [ecx]
  420e17:	(bad)  
  420e18:	jp     0x420e3e
  420e1a:	sub    dl,BYTE PTR [edx+0x53]
  420e1d:	jmp    FWORD PTR [ecx-0x49]
  420e20:	cmovo  esi,DWORD PTR [ebx+ebp*4-0x44]
  420e25:	jns    0x420e9b
  420e27:	cmp    eax,0x5b93574f
  420e2c:	add    al,0xff
  420e2e:	imul   edi,DWORD PTR [ebx+0x7874400f],0x42782458
  420e38:	aaa    
  420e39:	pop    esp
  420e3a:	pop    eax
  420e3b:	(bad)  
  420e3d:	(bad)  
  420e3f:	pop    esi
  420e40:	mov    ah,0x43
  420e42:	add    BYTE PTR [eax],al
  420e44:	xor    al,0xf6
  420e46:	lods   al,BYTE PTR ds:[esi]
  420e47:	add    al,0x45
  420e49:	(bad)  
  420e4a:	(bad)  
  420e4b:	(bad)  
  420e4c:	adc    al,0xff
  420e4e:	cld    
  420e4f:	push   DWORD PTR [esi+edi*1]
  420e52:	sti    
  420e53:	jne    0x420e91
  420e55:	not    BYTE PTR [ecx]
  420e57:	or     al,bh
  420e59:	ds cld 
  420e5b:	mov    bh,BYTE PTR [edx+eax*4]
  420e5e:	idiv   edi
  420e60:	add    ebp,DWORD PTR [ebx-0x10bff0c]
  420e66:	push   ebp
  420e67:	push   ebx
  420e68:	mov    ebx,0xf7c811f5
  420e6d:	ds cld 
  420e6f:	mov    BYTE PTR [ebp-0x5bf02023],bl
  420e75:	fstp   st(7)
  420e77:	adc    edx,DWORD PTR [ecx+0x1b]
  420e7a:	xor    edx,DWORD PTR [edx]
  420e7c:	mov    ebp,0x42ffc047
  420e81:	cdq    
  420e82:	cld    
  420e83:	inc    edx
  420e85:	pop    es
  420e86:	retf   
  420e87:	cld    
  420e88:	xor    BYTE PTR [ecx],dh
  420e8a:	xor    edx,DWORD PTR [edx]
  420e8c:	leave  
  420e8d:	daa    
  420e8e:	sar    bh,0x1f
  420e91:	push   esi
  420e92:	add    al,0xfe
  420e94:	xchg   edx,eax
  420e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e96:	cmp    eax,0x2a1c9aff
  420e9b:	inc    ebx
  420e9c:	mov    ecx,0x200cff4b
  420ea1:	mov    dh,0x0
  420ea3:	add    BYTE PTR [ebp+0x23bcf1],bl
  420ea9:	add    BYTE PTR [ebp-0x31bd53d5],cl
  420eaf:	jo     0x420ee4
  420eb1:	adc    cl,BYTE PTR [ebp+0x17ffc027]
  420eb7:	or     al,0x7e
  420eb9:	cmc    
  420eba:	stos   BYTE PTR es:[edi],al
  420ebb:	xchg   edi,eax
  420ebc:	popa   
  420ebd:	call   DWORD PTR [edx+0x1c]
  420ec0:	test   DWORD PTR [ebx-0x7f],eax
  420ec3:	push   ebx
  420ec4:	rcl    BYTE PTR [eax-0x16],1
  420ec7:	sbb    BYTE PTR [edx+0x14273a07],ch
  420ecd:	adc    al,0xdd
  420ecf:	sbb    eax,DWORD PTR [edi+0x7a979abf]
  420ed5:	jmp    DWORD PTR [edx]
  420ed7:	sbb    al,0x9a
  420ed9:	call   FWORD PTR [ebx]
  420edb:	out    0xfb,eax
  420edd:	cld    
  420ede:	mov    edi,edi
  420ee0:	(bad)  
  420ee2:	xchg   ecx,eax
  420ee3:	mul    edi
  420ee5:	addr16 popf 
  420ee7:	fild   DWORD PTR [ebx]
  420ee9:	add    BYTE PTR [ebx+0x2],dl
  420eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eed:	sbb    DWORD PTR [ecx],esi
  420eef:	push   ss
  420ef0:	daa    
  420ef1:	add    al,0xf4
  420ef3:	cwde   
  420ef4:	popf   
  420ef5:	enter  0x12be,0xe7
  420ef9:	sti    
  420efa:	fisubr DWORD PTR [ecx]
  420efc:	cli    
  420efd:	pop    es
  420efe:	mov    WORD PTR [edx-0x6f],es
  420f01:	add    DWORD PTR [ecx+edx*8+0x75],ebp
  420f05:	sbb    DWORD PTR [ebp+0x1c04270e],esp
  420f0b:	sub    esp,DWORD PTR [ebp-0x48]
  420f0e:	add    BYTE PTR [eax],al
  420f10:	dec    ebp
  420f11:	pushf  
  420f12:	out    0x2,al
  420f14:	lock inc edx
  420f16:	mov    dh,0x9b
  420f18:	xchg   ebx,eax
  420f19:	add    esp,edi
  420f1b:	add    ebx,DWORD PTR [eax-0x50cd1151]
  420f21:	inc    esi
  420f22:	fld    st(3)
  420f24:	mov    bl,BYTE PTR [ebx+esi*8]
  420f27:	add    cl,BYTE PTR [eax+0x52]
  420f2a:	daa    
  420f2b:	sbb    al,0xaa
  420f2d:	jnp    0x420ed9
  420f2f:	out    0x96,eax
  420f31:	stc    
  420f32:	push   ebp
  420f33:	inc    ebp
  420f34:	hlt    
  420f35:	add    dl,BYTE PTR [esi]
  420f37:	mov    ecx,0xe7a27b9a
  420f3c:	add    BYTE PTR [ebx+0xf],0x14
  420f40:	(bad)
  420f43:	(bad)  
  420f44:	dec    edx
  420f45:	jbe    0x420ef1
  420f47:	out    0x7e,eax
  420f49:	jnp    0x420edd
  420f4b:	out    0x7e,eax
  420f4d:	jnp    0x420f81
  420f4f:	call   0xf7a629d6
  420f54:	sub    ch,BYTE PTR [ecx]
  420f56:	sar    edi,0x21
  420f59:	out    dx,eax
  420f5a:	ds ins BYTE PTR es:[edi],dx
  420f5c:	pop    ebp
  420f5d:	add    al,dh
  420f5f:	sbb    BYTE PTR [ecx+0x804270e],cl
  420f65:	out    dx,eax
  420f66:	dec    DWORD PTR [ecx+esi*2-0x3e]
  420f6a:	jmp    FWORD PTR [ebp+0x29114e95]
  420f70:	cdq    
  420f71:	(bad)  
  420f72:	pop    ebp
  420f73:	fiadd  DWORD PTR [eax]
  420f75:	add    BYTE PTR [esi-0x36],bl
  420f78:	mov    BYTE PTR [ebp+ecx*8-0xa16f8be],cl
  420f7f:	jns    0x420f6c
  420f81:	push   0xffffffb2
  420f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f84:	cmc    
  420f85:	in     al,0xbe
  420f87:	pop    esp
  420f88:	inc    eax
  420f89:	jmp    0x816fbe28
  420f8e:	stc    
  420f8f:	imul   edi,ebp,0x66
  420f92:	sbb    ch,BYTE PTR [ecx+0x73]
  420f95:	add    al,0xb
  420f97:	sub    DWORD PTR [ebx+0x67b912ac],ecx
  420f9d:	pop    esp
  420f9e:	pop    ecx
  420f9f:	out    dx,eax
  420fa0:	es push ecx
  420fa2:	push   es
  420fa3:	imul   edi,ebp,0x3e
  420fa6:	iret   
  420fa7:	mov    ah,0xf
  420fa9:	fs push ebp
  420fab:	mov    esp,?
  420fad:	mov    ah,0x7a
  420faf:	daa    
  420fb0:	jb     0x420fa3
  420fb2:	dec    esi
  420fb3:	daa    
  420fb4:	adc    ch,ch
  420fb6:	xchg   edx,eax
  420fb7:	ret    0x1ff
  420fba:	lahf   
  420fbb:	and    eax,0xb48ff972
  420fc0:	or     eax,DWORD PTR [esi]
  420fc2:	adc    eax,0xdad4fd00
  420fc7:	adc    eax,DWORD PTR [eax-0x17]
  420fca:	add    DWORD PTR [ecx+0xb],0x200474e9
  420fd1:	xchg   ebp,eax
  420fd2:	pop    eax
  420fd3:	sub    BYTE PTR [eax],al
  420fd5:	push   ebp
  420fd6:	pushf  
  420fd7:	sbb    bh,ah
  420fd9:	xchg   ebp,eax
  420fda:	add    BYTE PTR [eax],al
  420fdc:	outs   dx,DWORD PTR ds:[esi]
  420fdd:	sub    DWORD PTR es:[ecx+0x30fe55],0x44
  420fe5:	aas    
  420fe6:	mov    esi,0x21f2f404
  420feb:	xor    cl,ah
  420fed:	inc    ebx
  420fee:	cld    
  420fef:	push   esp
  420ff0:	jg     0x420fd4
  420ff2:	repnz add eax,0x3fc7e4
  420ff8:	add    BYTE PTR [edx-0x79],cl
  420ffb:	jne    0x420ff5
  420ffd:	outs   dx,DWORD PTR ds:[esi]
  420ffe:	sbb    eax,0xfab30ee8
  421003:	inc    DWORD PTR [eax-0x42]
  421006:	jo     0x421020
  421008:	fbstp  TBYTE PTR [eax]
  42100a:	pop    esp
  42100b:	mov    eax,0x1070fe77
  421010:	dec    ebx
  421011:	outs   dx,DWORD PTR ds:[esi]
  421012:	or     al,0x8b
  421014:	jmp    0xacb80b28
  421019:	or     esi,DWORD PTR [edx-0x180eb403]
  42101f:	adc    bl,ch
  421021:	outs   dx,DWORD PTR ds:[esi]
  421022:	adc    bh,bh
  421024:	push   ecx
  421025:	adc    edx,DWORD PTR [esi-0x1]
  421028:	push   ecx
  421029:	sub    edi,ebx
  42102b:	adc    eax,0x400a10
  421030:	sub    bh,BYTE PTR [eax]
  421032:	mov    esi,0x87508410
  421037:	in     al,dx
  421038:	xchg   edx,eax
  421039:	call   FWORD PTR [edi]
  42103b:	lods   al,BYTE PTR ds:[esi]
  42103c:	aaa    
  42103d:	add    eax,DWORD PTR [esi+edx*2]
  421040:	add    BYTE PTR [eax],al
  421042:	mov    edi,0x6574086f
  421047:	or     edx,DWORD PTR [ecx-0x7f0db544]
  42104d:	rol    al,0xfb
  421050:	ss xor eax,0x3f9b24
  421056:	ror    DWORD PTR [esi],1
  421058:	sti    
  421059:	jne    0x42107f
  42105b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42105c:	dec    ecx
  42105d:	adc    al,0x9d
  42105f:	push   eax
  421060:	mov    ch,0x7
  421062:	add    eax,0x12fc2ce8
  421067:	push   esp
  421068:	adc    ch,bh
  42106a:	nop
  42106b:	dec    ebp
  42106c:	das    
  42106d:	jb     0x42101c
  42106f:	pop    es
  421070:	das    
  421071:	jb     0x421018
  421073:	pop    eax
  421074:	adc    eax,0x3d9883c
  421079:	pop    esi
  42107a:	dec    eax
  42107b:	pop    ebx
  42107c:	adc    BYTE PTR [eax],al
  42107e:	dec    eax
  42107f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421080:	sbb    al,0xf5
  421082:	mov    al,ds:0x9d405c39
  421087:	adc    eax,0x155088d6
  42108c:	mov    ah,0x1e
  42108e:	mov    ch,0xde
  421090:	outs   dx,DWORD PTR ds:[esi]
  421091:	std    
  421092:	mov    edx,0x9573409c
  421097:	in     al,0xf4
  421099:	pop    edi
  42109a:	in     eax,0x5b
  42109c:	add    BYTE PTR [ebx-0x73],dh
  42109f:	shl    BYTE PTR [ebp+0x1487260f],1
  4210a5:	std    
  4210a6:	add    BYTE PTR [eax],al
  4210a8:	or     BYTE PTR [eax+ebx*1],dh
  4210ab:	es mov ch,ah
  4210ae:	das    
  4210af:	call   0x13f7fd61
  4210b4:	jp     0x421125
  4210b6:	adc    BYTE PTR [esi+0x72],dl
  4210b9:	xchg   eax,edi
  4210bb:	cld    
  4210bc:	nop
  4210bd:	out    dx,eax
  4210be:	adc    al,0x40
  4210c0:	popf   
  4210c1:	ins    DWORD PTR es:[edi],dx
  4210c2:	int    0xc1
  4210c4:	lods   eax,DWORD PTR ds:[esi]
  4210c5:	sbb    edx,ebp
  4210c7:	mov    BYTE PTR [ecx+0x26],al
  4210ca:	add    ah,BYTE PTR [eax]
  4210cc:	stc    
  4210cd:	pop    eax
  4210ce:	add    BYTE PTR [ebx+ebp*8],al
  4210d1:	mov    al,ds:0x3ab10bb5
  4210d6:	sbb    BYTE PTR [edi],al
  4210d8:	icebp  
  4210d9:	add    ah,ch
  4210db:	das    
  4210dc:	push   ds
  4210dd:	inc    ebx
  4210de:	push   edx
  4210df:	or     al,0x64
  4210e1:	out    dx,eax
  4210e2:	inc    esi
  4210e3:	ins    BYTE PTR es:[edi],dx
  4210e4:	pop    ebp
  4210e5:	add    dl,BYTE PTR [esp+edx*1+0x10]
  4210e9:	mov    al,0xd6
  4210eb:	jp     0x421144
  4210ed:	push   cs
  4210ee:	mov    esi,0xc91a9ab9
  4210f3:	xor    cl,bh
  4210f5:	and    eax,0xaff014c1
  4210fa:	cli    
  4210fb:	outs   dx,DWORD PTR cs:[esi]
  4210fd:	adc    dh,BYTE PTR ds:0x95fa6f2f
  421103:	sbb    DWORD PTR [ecx+0x7304270f],ecx
  421109:	(bad)  
  42110a:	test   al,0x14
  42110c:	add    BYTE PTR [eax],al
  42110e:	popf   
  42110f:	iret   
  421110:	jno    0x421132
  421112:	enter  0xc6ff,0x5f
  421116:	pop    ebp
  421117:	add    ah,bl
  421119:	aad    0x25
  42111b:	mov    al,0xf6
  42111d:	mov    bh,0x8b
  42111f:	sbb    ch,BYTE PTR [eax]
  421121:	imul   esp,DWORD PTR [eax+0xe446a25],0xb
  421128:	adc    bh,cl
  42112a:	repnz push 0xffffffa9
  42112d:	add    ecx,DWORD PTR [esi]
  42112f:	adc    edi,DWORD PTR [esi]
  421131:	mov    ecx,0xba379ae
  421136:	js     0x4210e7
  421138:	ficomp WORD PTR [ebx]
  42113a:	pop    ss
  42113b:	es and eax,0x1e11752f
  421141:	mov    ecx,0x179b258a
  421146:	repz and eax,0xaf51ff93
  42114c:	out    dx,al
  42114d:	cs scas eax,DWORD PTR es:[edi]
  42114f:	xchg   dl,dl
  421151:	ret    
  421152:	inc    edx
  421153:	(bad)  
  421154:	call   DWORD PTR [ebx-0x6bffee24]
  42115a:	mov    bh,0x19
  42115c:	cmc    
  42115d:	in     al,dx
  42115e:	ds pop ecx
  421160:	inc    eax
  421161:	jmp    0x5ccade00
  421166:	mov    cl,0xae
  421168:	push   ds
  421169:	rol    DWORD PTR [ecx+0x6a],0xfd
  42116d:	(bad)  
  42116e:	and    ah,BYTE PTR [ebp+0x73]
  421171:	loope  0x421173
  421173:	add    bh,dh
  421175:	out    dx,eax
  421176:	pop    edi
  421177:	jno    0x421158
  421179:	and    al,0x73
  42117b:	fld    st(3)
  42117d:	mov    al,0x13
  42117f:	jb     0x42115e
  421181:	or     al,0xfd
  421183:	adc    al,0xe1
  421185:	sbb    al,0x53
  421187:	xchg   ebp,eax
  421188:	mov    esp,DWORD PTR [esi]
  42118a:	call   0x17f29589
  42118f:	xchg   BYTE PTR ds:0x57e5611,al
  421195:	stc    
  421196:	cld    
  421197:	cld    
  421198:	mov    dh,0x25
  42119a:	adc    dl,BYTE PTR [ecx-0x39003d76]
  4211a0:	int    0x42
  4211a2:	adc    ebp,ecx
  4211a4:	lds    edi,FWORD PTR [ecx-0x15]
  4211a7:	pop    edi
  4211a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a9:	loop   0x421156
  4211ab:	stos   BYTE PTR es:[edi],al
  4211ac:	sahf   
  4211ad:	(bad)  
  4211ae:	push   ebp
  4211af:	jb     0x4211f6
  4211b1:	clc    
  4211b2:	jae    0x4211bc
  4211b4:	mov    eax,ds:0xcb37b8d3
  4211b9:	jg     0x42117a
  4211bb:	mov    ch,0xa6
  4211bd:	jmp    0xc3389af4
  4211c2:	call   DWORD PTR [ebx-0x68dda72]
  4211c8:	xlat   BYTE PTR ds:[ebx]
  4211c9:	mov    eax,0xfc150e13
  4211ce:	out    0x0,eax
  4211d0:	dec    edi
  4211d1:	aam    0xfb
  4211d3:	jmp    FWORD PTR [edi+0x75fb0f]
  4211d9:	add    BYTE PTR [eax-0x2b],bl
  4211dc:	jno    0x4211ee
  4211de:	or     dl,ch
  4211e0:	jno    0x4211ea
  4211e2:	inc    ebx
  4211e3:	or     al,0x34
  4211e5:	adc    eax,0x5d5dfe74
  4211ea:	inc    esi
  4211eb:	lldt   WORD PTR [ebp+0x7f]
  4211ef:	loop   0x4211e3
  4211f1:	add    eax,0x3fa294
  4211f6:	clc    
  4211f7:	dec    ebp
  4211f8:	xchg   DWORD PTR [ebp+0x0],esi
  4211fb:	ins    BYTE PTR es:[edi],dx
  4211fc:	sbb    eax,0xfa98dee8
  421201:	(bad)  
  421202:	js     0x4211c2
  421204:	jo     0x42121e
  421206:	jmp    FWORD PTR [esp+ebx*2]
  421209:	mov    eax,0x1070fe87
  42120e:	and    ebp,DWORD PTR [esp+ecx*1-0x75]
  421212:	xchg   ecx,eax
  421213:	or     bh,bl
  421215:	jne    0x4211e3
  421217:	pop    es
  421218:	ret    0x33fb
  42121b:	aad    0xe7
  42121d:	adc    BYTE PTR [ebx+0x6b],al
  421220:	adc    bh,bh
  421222:	leave  
  421223:	orps   xmm7,xmm7
  421226:	leave  
  421227:	daa    
  421228:	sti    
  421229:	adc    eax,0x400b9c
  42122e:	inc    edx
  42122f:	xor    al,0xbe
  421231:	adc    BYTE PTR [esp+ecx*2-0x79],dh
  421235:	in     al,dx
  421236:	retf   0x1ffb
  421239:	lods   al,BYTE PTR ds:[esi]
  42123a:	inc    edi
  42123b:	inc    DWORD PTR [ebx]
  42123d:	push   esi
  42123e:	add    BYTE PTR [eax],al
  421240:	jmp    FWORD PTR [ebx+0xc]
  421243:	je     0x42129a
  421245:	pop    es
  421246:	mov    eax,ds:0x80d582ba
  42124b:	rcr    BYTE PTR [ebp-0x77c6f77b],0x79
  421252:	push   0x10a69d40
  421257:	std    
  421258:	enter  0x774d,0x4a
  42125c:	xchg   ebp,eax
  42125d:	sub    al,0xb5
  42125f:	or     eax,DWORD PTR [ebp-0x6c]
  421262:	daa    
  421263:	cld    
  421264:	sub    dl,BYTE PTR [eax+0xf]
  421267:	std    
  421268:	test   al,0x1
  42126a:	sub    esi,DWORD PTR [edx-0x4f]
  42126d:	jecxz  0x421299
  42126f:	jb     0x421212
  421271:	xor    al,0xb5
  421273:	pop    es
  421274:	or     al,BYTE PTR [esi+0x58]
  421277:	adc    ebx,DWORD PTR [ebp+0x19]
  42127a:	retf   0xdf5a
  42127d:	inc    esp
  42127e:	add    BYTE PTR [ebx+0x26],dl
  421281:	xor    al,BYTE PTR gs:[edx]
  421284:	mov    ebp,0x9effbfcd
  421289:	jmp    0x421301
  42128b:	jb     0x42123a
  42128d:	add    eax,0xcf76e7e1
  421292:	sub    bh,ah
  421294:	and    DWORD PTR [ecx-0x4c],ebx
  421297:	pop    ss
  421298:	xchg   BYTE PTR [esi-0x60],ch
  42129b:	mov    bh,0x5e
  42129d:	sbb    DWORD PTR [ebp+0x142db20f],esi
  4212a3:	mov    DWORD PTR [eax],eax
  4212a5:	add    BYTE PTR [eax+0x1],bl
  4212a8:	sub    esi,DWORD PTR [edx-0x6f]
  4212ab:	shl    edx,1
  4212ad:	clc    
  4212ae:	call   0x837:0x921017b9
  4212b5:	std    
  4212b6:	adc    BYTE PTR [eax-0x2e],al
  4212b9:	cld    
  4212ba:	or     BYTE PTR [eax],dh
  4212bc:	sub    esi,DWORD PTR [edx-0x5b]
  4212bf:	fcom   DWORD PTR ds:0x6b89ac
  4212c5:	pop    esi
  4212c6:	enter  0x2902,0x17
  4212ca:	popf   
  4212cb:	fucom  st(3)
  4212cd:	scas   al,BYTE PTR es:[di]
  4212cf:	ret    0xb6e6
  4212d2:	cwde   
  4212d3:	pop    edx
  4212d4:	fnstenv [edx]
  4212d6:	mov    eax,DWORD PTR [edx]
  4212d8:	sub    ch,al
  4212da:	lahf   
  4212db:	(bad)  
  4212dd:	ret    
  4212de:	cmp    dl,BYTE PTR [edi+0x13ab6bec]
  4212e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e5:	add    ebx,DWORD PTR [esi+ebx*8-0x15]
  4212e9:	out    dx,eax
  4212ea:	pop    edx
  4212ec:	out    0xb0,al
  4212ee:	mov    al,ds:0xd336b35a
  4212f3:	add    ch,BYTE PTR [edx-0x24156021]
  4212f9:	ret    
  4212fa:	add    bl,BYTE PTR [ecx]
  4212fc:	sahf   
  4212fd:	paddusw mm3,QWORD PTR [ecx]
  421300:	xchg   esi,eax
  421301:	loope  0x4212c0
  421303:	adc    eax,0xb7dc0427
  421308:	jno    0x421322
  42130a:	add    BYTE PTR [eax],al
  42130c:	sbb    eax,0x9f31ce2f
  421311:	loop   0x421355
  421313:	(bad)  
  421314:	rol    BYTE PTR ds:0xa4f7f35,cl
  42131a:	sti    
  42131b:	fnstcw WORD PTR [edx-0x46d5c0cb]
  421321:	xchg   BYTE PTR [esi+0x74877fb0],ah
  421327:	mov    al,0x8b
  421329:	lea    ebp,[edi+edi*8+0x2b5d7eba]
  421330:	cdq    
  421331:	xchg   DWORD PTR [esi],esp
  421333:	mov    al,0xaf
  421335:	lods   al,BYTE PTR ds:[esi]
  421336:	(bad)  
  421337:	rcl    DWORD PTR [edi],1
  421339:	iret   
  42133a:	push   ds
  42133b:	aad    0x7a
  42133d:	fst    DWORD PTR [ecx-0x7486d6]
  421343:	stos   DWORD PTR es:[edi],eax
  421344:	fimul  DWORD PTR [edx+eax*2-0x1d5aeef]
  42134b:	mov    esi,0xf5aff4b7
  421350:	pop    esi
  421351:	and    DWORD PTR [edx+0x20],ebx
  421354:	fild   DWORD PTR ds:0x2dcbb400
  42135a:	adc    BYTE PTR ds:0xc9021761,0xd2
  421361:	ret    0xecff
  421364:	dec    esp
  421365:	mov    dh,BYTE PTR [edx-0x1f]
  421368:	cli    
  421369:	out    dx,al
  42136a:	out    0x6f,eax
  42136c:	mov    cl,0x1f
  42136e:	cld    
  42136f:	add    BYTE PTR gs:[eax],al
  421372:	pop    esi
  421373:	xchg   ebp,eax
  421374:	and    ch,BYTE PTR [esp+ecx*8-0x6b]
  421378:	push   ds
  421379:	(bad)  
  42137a:	fadd   QWORD PTR [eax+ebp*8]
  42137d:	ss mov dh,0x1e
  421380:	cld    
  421381:	fs pop esi
  421383:	xchg   ebp,eax
  421384:	adc    al,BYTE PTR [ebx-0x2f]
  421387:	mov    dh,0x8a
  421389:	sbb    al,0x59
  42138b:	shl    bh,1
  42138d:	xchg   ebx,eax
  42138e:	inc    eax
  42138f:	pop    ds
  421390:	cld    
  421391:	jo     0x421370
  421393:	cmp    al,0x8a
  421395:	sub    al,0x61
  421397:	shr    eax,1
  421399:	call   0x6154318a
  42139e:	xchg   edx,eax
  42139f:	ret    0x1eff
  4213a2:	js     0x4213e7
  4213a4:	add    ebp,ecx
  4213a6:	int    0x89
  4213a8:	jmp    0x421414
  4213aa:	xchg   edx,eax
  4213ab:	icebp  
  4213ac:	cmc    
  4213ad:	in     al,dx
  4213ae:	mov    esi,0x9ae9406c
  4213b3:	mov    dh,0x88
  4213b5:	fcom   QWORD PTR [esi+0x79413094]
  4213bb:	pop    ecx
  4213bc:	std    
  4213bd:	add    bl,bl
  4213bf:	lahf   
  4213c0:	mov    esp,0xf2818e74
  4213c5:	je     0x421369
  4213c7:	xchg   DWORD PTR [edx],edi
  4213c9:	xor    BYTE PTR [ecx],dh
  4213cb:	daa    
  4213cc:	xchg   DWORD PTR [esi+0x6c],eax
  4213cf:	cld    
  4213d0:	stc    
  4213d1:	(bad)  
  4213d2:	mov    ebx,0xc081ec
  4213d7:	add    BYTE PTR [eax],dh
  4213d9:	repz imul esi,DWORD PTR [eax],0xd0499b12
  4213e0:	and    eax,0x3aaa94fc
  4213e5:	jmp    0xd041:0x9a8c4585
  4213ec:	add    al,0x1
  4213ee:	(bad)  
  4213ef:	push   ebp
  4213f0:	cmp    edx,DWORD PTR [eax]
  4213f2:	hlt    
  4213f3:	adc    al,0xc4
  4213f5:	push   es
  4213f6:	pop    esi
  4213f7:	leave  
  4213f8:	inc    esi
  4213f9:	add    eax,DWORD PTR [eax]
  4213fb:	push   ebp
  4213fc:	jg     0x4213f8
  4213fe:	jg     0x4213ec
  421400:	add    al,0xd2
  421402:	add    DWORD PTR [eax],esp
  421404:	sub    BYTE PTR [esi-0x4],al
  421407:	add    edx,DWORD PTR [edx-0x4ff78e63]
  42140d:	adc    eax,0xec7ce7e4
  421412:	sti    
  421413:	test   BYTE PTR [ebx+edx*2],al
  421416:	test   DWORD PTR es:[edx],esi
  421419:	push   ebx
  42141a:	and    al,BYTE PTR [ebx+0x217113da]
  421420:	dec    edi
  421421:	inc    esp
  421422:	add    al,0xe8
  421424:	dec    edi
  421425:	in     al,dx
  421426:	sti    
  421427:	inc    DWORD PTR [ecx-0x3a]
  42142a:	jo     0x421441
  42142c:	sahf   
  42142d:	push   ss
  42142e:	push   edx
  42142f:	(bad)  
  421430:	jmp    0x432a61e8
  421435:	mov    ebp,0xa29dfffa
  42143a:	mov    esp,0x180000d7
  42143f:	push   ax
  421441:	dec    edi
  421442:	jbe    0x42146e
  421444:	into   
  421445:	cld    
  421446:	nop
  421447:	ror    DWORD PTR [edi],1
  421449:	inc    eax
  42144a:	popf   
  42144b:	ja     0x421486
  42144d:	shl    DWORD PTR [ecx-0x46847cd7],0x2d
  421454:	add    dl,BYTE PTR [esi+0x26]
  421457:	cli    
  421458:	div    BYTE PTR [ebp-0x7f2b815b]
  42145e:	inc    esp
  42145f:	and    ebp,DWORD PTR [ebx+ebx*1+0x72f5021e]
  421466:	fsubr  DWORD PTR [edi-0x15]
  421469:	lds    ebp,FWORD PTR [esi-0x63887fdc]
  42146f:	and    ebp,DWORD PTR [ebp-0x37d448fe]
  421475:	call   0x3f861118
  42147a:	and    al,0x2b
  42147c:	sbb    eax,DWORD PTR ds:0x12ae2
  421482:	popf   
  421483:	sub    ebx,esi
  421485:	mov    edi,0x80e5345d
  42148a:	hlt    
  42148b:	and    ah,BYTE PTR [ebp+esi*1+0x7df4521e]
  421492:	imul   BYTE PTR [ebx+0x70510a29]
  421498:	xor    esi,0x2918
  42149e:	push   ecx
  42149f:	adc    DWORD PTR [ecx+0x7a0000f6],eax
  4214a5:	dec    ecx
  4214a6:	add    BYTE PTR [eax],al
  4214a8:	cmp    edi,DWORD PTR ds:0x4984f681
  4214ae:	add    BYTE PTR [eax],al
  4214b0:	sub    dh,BYTE PTR ds:0x29e013f
  4214b6:	out    0x3,eax
  4214b8:	popf   
  4214b9:	sub    DWORD PTR [edx],ebp
  4214bb:	hlt    
  4214bc:	push   edx
  4214bd:	fsubr  QWORD PTR [edx+0x740d96df]
  4214c3:	inc    ebx
  4214c4:	ret    0x7c29
  4214c7:	hlt    
  4214c8:	cmp    bh,BYTE PTR [ebp-0x398d04d8]
  4214ce:	imul   esp,DWORD PTR [edi-0x716f942],0xf9c0b28
  4214d8:	sbb    al,0x1c
  4214da:	lock scas eax,DWORD PTR es:[edi]
  4214dc:	in     eax,dx
  4214dd:	shl    DWORD PTR [esi],1
  4214df:	test   BYTE PTR [ebx+0x10],dl
  4214e2:	xchg   esp,eax
  4214e3:	sahf   
  4214e4:	pop    ecx
  4214e5:	add    eax,ebp
  4214e7:	add    ebx,DWORD PTR [ebp+0x1dc71202]
  4214ed:	sbb    al,0xe0
  4214ef:	scas   eax,DWORD PTR es:[edi]
  4214f0:	imul   ebx,DWORD PTR [edi+ebp*4+0x65102b84],0x631b9bd8
  4214fb:	add    al,0x9d
  4214fd:	add    bl,BYTE PTR [ebx+0xc]
  421500:	mov    bl,BYTE PTR [ebx]
  421502:	add    eax,0x441e02e4
  421507:	loopne 0x421509
  421509:	add    BYTE PTR [ebx+0x1b],bh
  42150c:	pmulhuw mm6,mm2
  42150f:	sbb    eax,0xe00835
  421514:	jmp    0x8dd6:0x92029d03
  42151b:	inc    edx
  42151c:	fistp  QWORD PTR [edi-0x6f19f182]
  421522:	or     al,bl
  421524:	and    esp,0x3e800d9
  42152a:	popf   
  42152b:	add    dl,BYTE PTR [edx-0xbd93f6]
  421531:	sbb    DWORD PTR [eax-0x593abc25],0x49690897
  42153b:	push   ds
  42153c:	or     dl,ah
  42153e:	popf   
  42153f:	test   al,0x1
  421541:	mov    cl,0xa7
  421543:	add    dh,BYTE PTR [ecx]
  421545:	sub    DWORD PTR [ecx-0x7c],ebx
  421548:	add    edx,edi
  42154a:	(bad)  
  42154c:	shr    ebp,0x9e
  42154f:	lgs    ebp,FWORD PTR [ecx]
  421552:	in     al,0x1
  421554:	ret    
  421555:	jns    0x42155a
  421557:	(bad)  
  421559:	fldlg2 
  42155b:	rol    dh,cl
  42155d:	xchg   DWORD PTR [edi-0x33],eax
  421560:	add    DWORD PTR [edx-0x46774b67],ebx
  421566:	inc    edx
  421567:	push   cs
  421568:	mov    ch,0xf8
  42156a:	mov    ah,0xf1
  42156c:	xor    DWORD PTR [ebx-0x2f720000],edi
  421572:	into   
  421573:	test   al,0xa6
  421575:	icebp  
  421576:	cmp    eax,0x1c53787
  42157b:	pop    ebx
  42157c:	mov    eax,0xde960cbf
  421581:	add    al,dh
  421583:	in     eax,dx
  421584:	neg    BYTE PTR [ecx+eax*8]
  421587:	fidiv  WORD PTR [ebx+0x5d]
  42158a:	mov    ch,ch
  42158c:	pop    ebp
  42158d:	ins    DWORD PTR es:[edi],dx
  42158e:	sub    DWORD PTR gs:[ecx+0x4cfac6d3],ebx
  421595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421596:	cmp    BYTE PTR [ecx],ah
  421598:	lahf   
  421599:	xchg   ebx,eax
  42159a:	sub    BYTE PTR [edx],bh
  42159c:	jmp    0x1756:0xcbe57789
  4215a3:	out    0x3b,al
  4215a5:	dec    ebx
  4215a6:	fidivr WORD PTR gs:[eax]
  4215a9:	(bad)  [eax+eax*1]
  4215ac:	stos   BYTE PTR es:[edi],al
  4215ad:	adc    edi,esi
  4215af:	imul   dx
  4215b2:	mov    bh,0xff
  4215b4:	mov    ah,0x0
  4215b6:	add    BYTE PTR [esi-0x29],ah
  4215b9:	out    0x3e,eax
  4215bb:	or     ax,0x4a24
  4215bf:	mov    di,0xfe36
  4215c3:	jno    0x421592
  4215c5:	inc    esp
  4215c6:	push   edi
  4215c7:	movntps XMMWORD PTR [eax-0x2],xmm0
  4215cb:	xor    ch,BYTE PTR [ebp+0x3a0c857d]
  4215d1:	rol    DWORD PTR [edi+0x8000041],0x1
  4215d8:	inc    esp
  4215d9:	and    al,0x7c
  4215db:	sub    edi,esp
  4215dd:	jmp    esp
  4215df:	push   DWORD PTR [edx+0x1d]
  4215e2:	or     esp,ebp
  4215e4:	jo     0x42160a
  4215e6:	inc    eax
  4215e7:	fwait
  4215e8:	jne    0x42163a
  4215ea:	xchg   ebx,eax
  4215eb:	imul   esp,DWORD PTR [eax],0xc
  4215ee:	mov    ds:0x1be8006c,eax
  4215f3:	mov    esi,0x8313fffb
  4215f8:	mov    esp,0xfd903874
  4215fd:	jmp    0xc:0xc2bc1206
  421604:	push   0x1
  421606:	ja     0x4215c7
  421608:	or     al,0xe8
  42160a:	inc    esi
  42160b:	ret    0xfffc
  42160e:	je     0x42160f
  421610:	mov    esi,0xfbcf6f56
  421615:	jbe    0x42159b
  421617:	(bad)  
  421618:	xor    BYTE PTR [eax+0x44f2e632],ch
  42161e:	call   0xbb09133a
  421623:	arpl   WORD PTR [edi-0x53d662c0],ax
  421629:	add    eax,0xa7e0816b
  42162e:	mov    ebx,0x53c57684
  421633:	addr16 (bad) 
  421635:	call   DWORD PTR [eax-0x60]
  421638:	pop    ss
  421639:	add    BYTE PTR [eax],0x0
  42163c:	mov    ecx,0xa9eb8091
  421641:	adc    BYTE PTR [eax],al
  421643:	add    dh,ch
  421645:	push   ebx
  421646:	out    dx,eax
  421647:	mov    edi,0x7b7569f2
  42164c:	mov    ecx,0x85d676f9
  421651:	mov    esi,DWORD PTR [ebp+0x401872ff]
  421657:	vpmuludq ymm5,ymm6,ymm7
  42165c:	adc    al,0x69
  42165e:	add    BYTE PTR [edi-0x7fb2df],al
  421664:	push   edx
  421665:	sub    DWORD PTR [ecx-0x7d],edi
  421668:	sub    DWORD PTR [ebp-0x5d62fffd],0x2925237f
  421672:	add    BYTE PTR [eax],al
  421674:	pop    edx
  421675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421676:	fisttp WORD PTR [ebx+0x299d]
  42167c:	pushf  
  42167d:	sub    DWORD PTR [eax],eax
  42167f:	mov    DWORD PTR [esi+0x19],esp
  421682:	ja     0x421682
  421684:	and    DWORD PTR [eax-0x22e7ab05],esp
  42168a:	fistp  WORD PTR [ebx]
  42168c:	outs   dx,DWORD PTR ds:[esi]
  42168d:	mov    al,ds:0xf75f03cf
  421692:	cmp    eax,0x20b943
  421697:	std    
  421698:	lea    ebp,[ebp-0x14e6f3c0]
  42169e:	add    DWORD PTR [eax],eax
  4216a0:	add    BYTE PTR [eax],al
  4216a2:	popf   
  4216a3:	add    dh,BYTE PTR [edi+edi*4+0x7e]
  4216a7:	(bad)  
  4216a8:	ss call 0xe64e:0x24e7a8ca
  4216b0:	ret    0x831b
  4216b3:	pop    ds
  4216b4:	out    0x3,al
  4216b6:	sbb    al,dh
  4216b8:	ret    0x1413
  4216bb:	(bad)  
  4216bc:	retf   0x140b
  4216bf:	or     ah,BYTE PTR [edx-0x46]
  4216c2:	mov    dh,0x8b
  4216c4:	mov    cl,0xf7
  4216c6:	xchg   ecx,eax
  4216c7:	shl    DWORD PTR [ecx+0x33],cl
  4216ca:	add    BYTE PTR [edx-0x4e7eda73],0x3e
  4216d1:	add    BYTE PTR [ecx+0x19],0x45
  4216d5:	xor    dh,0xde
  4216d8:	(bad)  
  4216d9:	add    ebx,DWORD PTR [eax-0x62fe5782]
  4216df:	add    ah,BYTE PTR [edi-0x1c]
  4216e2:	pop    edx
  4216e3:	xchg   DWORD PTR [edx+0x445a7edf],esp
  4216e9:	add    ebx,DWORD PTR [ebp-0x22fd63fe]
  4216ef:	sub    al,BYTE PTR [ebp+eiz*1+0x67731a39]
  4216f6:	jle    0x42173a
  4216f8:	out    0x3,al
  4216fa:	popf   
  4216fb:	pop    edx
  4216fc:	dec    ebx
  4216fd:	add    ebx,DWORD PTR [ebp+0x18cdff02]
  421703:	sbb    ah,ch
  421705:	xchg   ecx,eax
  421706:	add    BYTE PTR [eax],al
  421708:	dec    esi
  421709:	fist   WORD PTR [eax]
  42170b:	add    eax,0x13bf029d
  421710:	neg    BYTE PTR [ecx]
  421712:	int    0x23
  421714:	mov    dl,BYTE PTR [esi-0x1541378d]
  42171a:	mov    ebp,0xffeebe98
  42171f:	sbb    BYTE PTR [edx],dl
  421721:	aas    
  421722:	dec    edi
  421723:	pop    esp
  421724:	in     eax,0xe5
  421726:	das    
  421727:	cmp    DWORD PTR [esi+eax*8],ebp
  42172a:	and    edx,ecx
  42172c:	push   cs
  42172d:	and    bl,ah
  42172f:	mov    DWORD PTR [edi+0x16],edi
  421732:	and    BYTE PTR [ebp-0x9407b47],0x35
  421739:	inc    ebx
  42173a:	mov    dh,0x8f
  42173c:	mov    al,ds:0x57620002
  421741:	aas    
  421742:	(bad)  
  421743:	call   0x60b4d7a6
  421748:	and    dl,BYTE PTR [edi+eax*1+0x4394d365]
  42174f:	push   esi
  421750:	and    al,0x9
  421752:	mov    DWORD PTR [ebp-0x52d71a7e],esp
  421758:	jp     0x42174b
  42175a:	cld    
  42175b:	mov    ah,0x9a
  42175d:	mov    edx,DWORD PTR [ebx+0xd]
  421760:	popf   
  421761:	mov    ecx,ebp
  421763:	inc    ecx
  421764:	ret    
  421765:	(bad)  
  421768:	and    eax,0xff7359
  42176d:	add    BYTE PTR [edi-0x6c],bh
  421770:	punpckldq mm2,DWORD PTR [ebp-0x1b]
  421774:	adc    ecx,DWORD PTR [esi]
  421776:	adc    al,0xd
  421778:	mov    DWORD PTR [ebp+0x2f88e53a],ebx
  42177e:	jns    0x421700
  421780:	inc    ebx
  421781:	idiv   BYTE PTR [edi-0x7b]
  421784:	mov    edi,0x4340a575
  421789:	or     eax,0x55fd19ae
  42178e:	cmc    
  42178f:	hlt    
  421790:	out    0xaf,eax
  421792:	je     0x4217ab
  421794:	cld    
  421795:	into   
  421796:	adc    ah,ch
  421798:	sbb    eax,DWORD PTR [eax]
  42179a:	int3   
  42179b:	mov    eax,ds:0x852bfea2
  4217a0:	js     0x4217c6
  4217a2:	sti    
  4217a3:	add    al,0xb
  4217a5:	test   BYTE PTR [edx+0x2dffffff],cl
  4217ab:	lods   al,BYTE PTR ds:[esi]
  4217ac:	cld    
  4217ad:	push   DWORD PTR [edx+edi*8+0x5402480]
  4217b4:	add    BYTE PTR [eax],al
  4217b6:	lds    esi,FWORD PTR [eax+0xa]
  4217b9:	sbb    DWORD PTR [eax+0x21],0xffffff94
  4217bd:	add    BYTE PTR [esp+eax*1+0x5e310f00],dh
  4217c4:	std    
  4217c5:	inc    DWORD PTR [edx+edi*8+0x4102480]
  4217cc:	add    BYTE PTR [eax],al
  4217ce:	xchg   esp,eax
  4217cf:	jp     0x4217db
  4217d1:	add    DWORD PTR [eax],0x0
  4217d4:	sub    BYTE PTR [eax],ah
  4217d6:	test   al,0x0
  4217d8:	test   BYTE PTR [eax+eax*1],al
  4217db:	sgdtd  [edi-0x3]
  4217df:	push   DWORD PTR [ebp+eiz*4-0x4]
  4217e3:	pop    es
  4217e4:	je     0x4217ea
  4217e6:	out    0x47,eax
  4217e8:	mov    ebp,DWORD PTR [edi+0x20]
  4217eb:	adc    cl,cl
  4217ed:	jg     0x42180f
  4217ef:	sbb    al,0x37
  4217f1:	add    al,0x0
  4217f3:	push   eax
  4217f4:	mov    ecx,0xf468203f
  4217f9:	jb     0x42183b
  4217fb:	and    al,0xe8
  4217fd:	jmp    0x421872
  4217ff:	scas   al,BYTE PTR es:[edi]
  421800:	xor    al,0x4
  421802:	aaa    
  421803:	inc    esp
  421804:	push   eax
  421805:	adc    al,0xb
  421807:	test   edx,ebp
  421809:	(bad)  
  42180a:	(bad)  
  42180b:	dec    DWORD PTR [esi-0x5fa8dfb6]
  421811:	popa   
  421812:	jo     0x42181c
  421814:	popf   
  421815:	in     eax,dx
  421816:	cli    
  421817:	or     al,0x20
  421819:	cmp    BYTE PTR [ecx],al
  42181b:	add    BYTE PTR [ebp+0x210cfafd],bl
  421821:	bound  eax,QWORD PTR [ebx]
  421823:	add    BYTE PTR [ebp-0x52dc6054],bl
  421829:	sub    DWORD PTR [edi],ecx
  42182b:	test   dh,dl
  42182d:	sub    DWORD PTR [eax],eax
  42182f:	add    BYTE PTR [esi],dl
  421831:	and    BYTE PTR [edi-0x3b9ee76],dh
  421837:	add    BYTE PTR [eax],al
  421839:	add    BYTE PTR [ebp-0x1c774ed7],bl
  42183f:	xor    BYTE PTR [ebx-0x1821ebfd],0xf
  421846:	sbb    BYTE PTR [edx-0x68],ch
  421849:	sahf   
  42184a:	call   0xdd29:0xdd15f42e
  421851:	xor    dl,al
  421853:	sub    DWORD PTR [eax],eax
  421855:	or     eax,0x3db18
  42185a:	popf   
  42185b:	enter  0xb94,0x20
  42185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421860:	out    0x97,eax
  421862:	popf   
  421863:	sub    DWORD PTR [eax],eax
  421865:	push   eax
  421866:	push   ss
  421867:	lock imul di,WORD PTR [ecx+eax*8-0x3c],0x5243
  42186f:	loopne 0x4217f5
  421871:	mov    edi,0xfcdf9d9a
  421876:	inc    edx
  421877:	lock sar BYTE PTR [edi+0x38163cdd],cl
  42187e:	pop    ebx
  42187f:	adc    BYTE PTR [ebp+0x299da7],al
  421885:	mov    ecx,esp
  421887:	inc    esp
  421888:	cmp    bh,0x1a
  42188b:	sub    DWORD PTR [ebx+0x6b02b983],ecx
  421891:	add    ebx,DWORD PTR [ebp+0x6b035102]
  421897:	mov    esp,DWORD PTR [ebp+0x5ede2e8a]
  42189d:	add    eax,DWORD PTR [eax]
  42189f:	add    BYTE PTR [ebp-0x41a88ffe],bl
  4218a5:	xchg   dh,ah
  4218a7:	add    ebx,DWORD PTR [ebp+0x2ae77a89]
  4218ad:	add    ah,bh
  4218af:	add    eax,ebp
  4218b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218b2:	mov    DWORD PTR [ebx],eax
  4218b4:	popf   
  4218b5:	mov    edx,DWORD PTR [esi+0x58dc886]
  4218bb:	lea    esp,[eax+0x7410218b]
  4218c1:	retf   0x96e2
  4218c4:	xor    eax,0x15f4318b
  4218c9:	add    DWORD PTR ds:0x6dfeea21,ebx
  4218cf:	fstp   DWORD PTR [edx]
  4218d1:	mov    edi,0x8a82f50a
  4218d6:	and    DWORD PTR [ecx],0xffffff81
  4218d9:	lods   eax,DWORD PTR ds:[esi]
  4218da:	xchg   BYTE PTR ds:[edi],bh
  4218dd:	adc    eax,0xdef6834d
  4218e2:	cmc    
  4218e3:	add    esi,ecx
  4218e5:	enter  0xc43d,0x9e
  4218e9:	xor    BYTE PTR [ecx-0x587062f5],0x8e
  4218f0:	(bad)  
  4218f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218f3:	sub    edx,DWORD PTR [edi]
  4218f5:	inc    ebx
  4218f6:	out    0x3,al
  4218f8:	push   ds
  4218f9:	inc    ebx
  4218fa:	in     eax,0x90
  4218fc:	sub    bl,BYTE PTR [eax]
  4218fe:	or     eax,0xb9e54520
  421903:	sbb    DWORD PTR [eax],eax
  421905:	add    al,dl
  421907:	xchg   DWORD PTR [edx-0xd52119],ebp
  42190d:	push   cs
  42190e:	pop    esi
  42190f:	adc    eax,0xca2187fc
  421914:	and    edi,DWORD PTR ds:0xe8ff3d69
  42191a:	sahf   
  42191b:	pushf  
  42191c:	sub    BYTE PTR [ecx-0x2941b056],ah
  421922:	mov    cl,0xfa
  421924:	mov    edi,0xe703c16a
  421929:	pop    ss
  42192a:	adc    BYTE PTR [esi],0xfc
  42192d:	push   ds
  42192e:	mov    ecx,edx
  421930:	mov    ds:0xb316b2af,al
  421935:	int    0x1e
  421937:	push   ss
  421938:	cld    
  421939:	jmp    0x97e4f6b4
  42193e:	call   0x88bb:0x98595db6
  421945:	mov    esp,ds
  421947:	inc    ebx
  421948:	or     ebp,ecx
  42194a:	adc    DWORD PTR [ecx-0x60e01add],0x3
  421951:	jmp    0xf565ab09
  421956:	loopne 0x421917
  421958:	pop    es
  421959:	call   0xdb52fa6
  42195e:	jno    0x42197d
  421960:	rcr    DWORD PTR [ecx-0x6d],0x16
  421964:	sub    DWORD PTR [ecx],0x5
  421967:	cld    
  421968:	xor    BYTE PTR [ecx],ch
  42196a:	add    BYTE PTR [eax],al
  42196c:	inc    esi
  42196d:	mov    edi,0xeded203
  421972:	xlat   BYTE PTR ds:[ebx]
  421973:	sub    ebp,DWORD PTR [ebp-0x728dacfe]
  421979:	les    edx,FWORD PTR [eax-0x26]
  42197c:	xchg   esp,ecx
  42197e:	pop    edx
  42197f:	stc    
  421980:	adc    eax,0xa6a48906
  421985:	jge    0x42199e
  421987:	add    BYTE PTR [ebp-0x376ffaa],ch
  42198d:	or     BYTE PTR [eax+0x52689f01],dh
  421993:	push   edi
  421994:	jg     0x4219b9
  421996:	ins    BYTE PTR es:[edi],dx
  421997:	adc    dh,BYTE PTR [esi+edi*8+0x51c7534e]
  42199e:	sti    
  42199f:	jne    0x421995
  4219a1:	repz jno 0x4219b0
  4219a4:	mov    bh,0x66
  4219a6:	in     eax,0xfd
  4219a8:	hlt    
  4219a9:	add    bl,bh
  4219ab:	xlat   BYTE PTR ds:[ebx]
  4219ac:	outs   dx,DWORD PTR ds:[esi]
  4219ad:	icebp  
  4219ae:	aaa    
  4219af:	repz xchg edx,eax
  4219b1:	and    al,0x89
  4219b3:	inc    esi
  4219b4:	lds    edx,FWORD PTR [eax-0x1c]
  4219b7:	(bad)  
  4219b8:	pop    eax
  4219b9:	idiv   ebx
  4219bb:	mov    DWORD PTR [ecx-0x1e],edi
  4219be:	aaa    
  4219bf:	ret    
  4219c0:	cwde   
  4219c1:	adc    al,0x4f
  4219c3:	push   ebx
  4219c4:	push   0x4e
  4219c6:	sti    
  4219c7:	jne    0x42198d
  4219c9:	repz jno 0x4219d8
  4219cc:	xchg   DWORD PTR [esi-0x1b],esp
  4219cf:	std    
  4219d0:	add    BYTE PTR [eax],al
  4219d2:	test   BYTE PTR [eax],al
  4219d4:	sti    
  4219d5:	xlat   BYTE PTR ds:[ebx]
  4219d6:	dec    edi
  4219d7:	mov    esi,0x7b030c70
  4219dc:	clc    
  4219dd:	call   0x3cb5f0
  4219e2:	xchg   esi,eax
  4219e3:	mov    esi,0x32ff16e7
  4219e8:	clc    
  4219e9:	mov    edi,DWORD PTR [ecx]
  4219eb:	or     BYTE PTR [eax+0x487651c],cl
  4219f1:	mov    eax,DWORD PTR [ecx]
  4219f3:	adc    BYTE PTR [ebp+0x6c873848],al
  4219f9:	or     ah,ah
  4219fb:	(bad)  
  4219fc:	pop    edx
  4219fd:	pop    esi
  4219fe:	pop    edi
  4219ff:	(bad)  
  421a00:	mov    esi,0x89299d0c
  421a05:	dec    ebx
  421a06:	jns    0x421a29
  421a08:	sub    BYTE PTR [ebx-0x7fe203ba],ch
  421a0e:	and    eax,0xcf039415
  421a13:	jmp    0x24af2741
  421a18:	xchg   ebp,eax
  421a19:	and    ebx,DWORD PTR [ecx-0x6edc68e4]
  421a1f:	xor    DWORD PTR [ebp+0x412cfafc],esi
  421a25:	pop    es
  421a26:	popf   
  421a27:	into   
  421a28:	xchg   bl,ch
  421a2a:	sbb    al,0x2e
  421a2c:	add    eax,DWORD PTR [edx]
  421a2e:	popf   
  421a2f:	sub    DWORD PTR [edi+0x1bf7255],ebp
  421a35:	push   0x93cd0000
  421a3a:	outs   dx,BYTE PTR ds:[esi]
  421a3b:	test   BYTE PTR [esi],dl
  421a3d:	bound  ebp,QWORD PTR [ebx]
  421a3f:	mov    ds:0x301a740c,al
  421a44:	(bad)  
  421a45:	mov    ds:0x687607c2,al
  421a4a:	or     al,BYTE PTR [ebx+eiz*4+0x1000002a]
  421a51:	iret   
  421a52:	add    edi,esi
  421a54:	call   0x1aa4:0x84dd2b8c
  421a5b:	mov    al,ah
  421a5d:	retf   
  421a5e:	jle    0x421aaa
  421a60:	xor    DWORD PTR [esp+ecx*1+0x3a99d00],0xdbe9ae50
  421a6b:	pop    edx
  421a6c:	xchg   ebp,eax
  421a6d:	or     al,0x75
  421a6f:	mov    edi,0x4ffee91e
  421a74:	(bad)  
  421a75:	sub    ch,BYTE PTR [eax+0x402952ff]
  421a7b:	mov    ah,dl
  421a7d:	add    dh,bh
  421a7f:	mov    bl,0x17
  421a81:	mov    ebp,0x7482c1a
  421a86:	push   ss
  421a87:	sbb    eax,0x87dd421e
  421a8c:	clc    
  421a8d:	add    edi,esp
  421a8f:	add    edx,DWORD PTR [esi]
  421a91:	mov    ebp,0x8d27b3fa
  421a96:	imul   BYTE PTR [ebx]
  421a98:	aam    0x6
  421a9a:	out    dx,al
  421a9b:	sbb    al,0x0
  421a9d:	add    BYTE PTR [esi],bl
  421a9f:	inc    edx
  421aa0:	cmc    
  421aa1:	xchg   DWORD PTR [edx+eax*1],esp
  421aa4:	out    0x3,eax
  421aa6:	mov    dl,0xb5
  421aa8:	ficom  DWORD PTR [ebx+ebx*4-0x15ebb47f]
  421aaf:	adc    ah,dh
  421ab1:	rep ins BYTE PTR es:[edi],dx
  421ab3:	retf   
  421ab4:	sbb    DWORD PTR [ecx+0x202b856d],esi
  421aba:	mov    edx,0xc91cda89
  421abf:	jge    0x421a67
  421ac1:	xchg   edi,eax
  421ac2:	xchg   edi,eax
  421ac3:	adc    edx,DWORD PTR [ebx]
  421ac5:	and    BYTE PTR [ecx+0x72f21eec],bh
  421acb:	add    ah,BYTE PTR [ebx+eax*2+0x2f]
  421acf:	div    DWORD PTR [ebx-0x3a]
  421ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad3:	sub    DWORD PTR [ebx+0x8],ebp
  421ad6:	cwde   
  421ad7:	adc    ch,BYTE PTR [edi]
  421ad9:	sub    eax,0x8ee61293
  421ade:	pop    ds
  421adf:	add    esp,DWORD PTR [ebp+0x1c]
  421ae2:	cmp    DWORD PTR [ebx-0x2],0x5097e3c3
  421ae9:	sub    BYTE PTR [eax],al
  421aeb:	jle    0x421a90
  421aed:	pop    ds
  421aee:	imul   ebx,DWORD PTR [eax+0xed78050],0xc942b33d
  421af8:	dec    DWORD PTR [esi+0x2a39029e]
  421afe:	xor    esi,ecx
  421b00:	push   eax
  421b01:	adc    DWORD PTR [eax],eax
  421b03:	add    BYTE PTR [ebx],al
  421b05:	adc    bh,ah
  421b07:	jmp    0x23de037
  421b0c:	idiv   dl
  421b0e:	cld    
  421b0f:	push   cs
  421b10:	(bad)  
  421b11:	pop    ds
  421b12:	(bad)  
  421b13:	call   0xe9c498b6
  421b18:	mov    eax,0x1661fc0e
  421b1d:	rol    BYTE PTR [esi+0x74],cl
  421b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b21:	sbb    dh,BYTE PTR [esi]
  421b23:	jo     0x421b03
  421b25:	std    
  421b26:	mov    ah,BYTE PTR [edx*4-0x681dc6d7]
  421b2d:	push   cs
  421b2e:	mov    dh,0xbf
  421b30:	mov    al,ds:0x1c740002
  421b35:	adc    bh,dl
  421b37:	mov    esi,0x291789b6
  421b3c:	loopne 0x421ad2
  421b3e:	stc    
  421b3f:	jns    0x421ae1
  421b41:	sbb    ebx,DWORD PTR [eax]
  421b43:	je     0x421b21
  421b45:	or     eax,0xfabfce7
  421b4a:	cld    
  421b4b:	push   eax
  421b4c:	xchg   DWORD PTR [eax],edx
  421b4e:	cld    
  421b4f:	jmp    0x8741a069
  421b54:	xchg   BYTE PTR [esi],cl
  421b56:	xchg   ecx,esp
  421b58:	pop    esi
  421b59:	enter  0x7372,0x6b
  421b5d:	push   ecx
  421b5e:	pop    esp
  421b5f:	cmovp  ecx,DWORD PTR [eax-0x3f]
  421b63:	in     eax,dx
  421b64:	sahf   
  421b65:	mov    ch,0x88
  421b67:	dec    ebp
  421b68:	add    BYTE PTR [eax],al
  421b6a:	and    BYTE PTR ds:0x29ee8f3,bl
  421b70:	push   ecx
  421b71:	sbb    ch,BYTE PTR [edx+0x3b0036b7]
  421b77:	or     DWORD PTR [ecx+ebx*2-0x64],esi
  421b7b:	dec    ebx
  421b7c:	add    al,0x75
  421b7e:	push   ebx
  421b7f:	jp     0x421b32
  421b81:	adc    BYTE PTR [edx-0x13],bh
  421b84:	sti    
  421b85:	call   0x3dfa46
  421b8a:	cmp    eax,0x4177d64a
  421b8f:	cs pop ecx
  421b91:	(bad)  
  421b92:	adc    dl,BYTE PTR [esi]
  421b94:	xchg   DWORD PTR [edi+0x28],ebx
  421b97:	jp     0x421bda
  421b99:	(bad)  
  421b9a:	xor    al,0x55
  421b9c:	dec    esp
  421b9d:	push   eax
  421b9e:	pushf  
  421b9f:	or     cl,BYTE PTR [edx]
  421ba1:	(bad)  
  421ba2:	sti    
  421ba3:	aaa    
  421ba4:	xlat   BYTE PTR ds:[ebx]
  421ba5:	mov    ecx,0x5ea
  421baa:	mov    DWORD PTR [edx-0x143401f4],eax
  421bb0:	test   BYTE PTR [eax],bl
  421bb2:	mov    ah,0x3f
  421bb4:	jno    0x421bb0
  421bb6:	outs   dx,DWORD PTR ds:[esi]
  421bb7:	je     0x421bc1
  421bb9:	cmp    edx,DWORD PTR [edi]
  421bbb:	add    DWORD PTR [ecx],0x6a3e8
  421bc1:	add    BYTE PTR ds:0x5938084c,bh
  421bc7:	(bad)  
  421bc8:	jae    0x421bd3
  421bca:	dec    ecx
  421bcb:	inc    esp
  421bcc:	or     al,0x50
  421bce:	add    BYTE PTR [eax],al
  421bd0:	sbb    al,0x7d
  421bd2:	or     bh,bh
  421bd4:	sbb    eax,DWORD PTR [eax-0x3820f7bd]
  421bda:	jo     0x421be5
  421bdc:	mov    ah,0xde
  421bde:	int3   
  421bdf:	rol    DWORD PTR [esp+eax*1+0x4a7c5f85],cl
  421be6:	push   edi
  421be7:	leave  
  421be8:	mov    dh,0xf
  421bea:	cld    
  421beb:	mov    al,BYTE PTR [edx-0x62000b77]
  421bf1:	sub    eax,0x365d830d
  421bf6:	add    DWORD PTR [eax+0x62],edx
  421bf9:	das    
  421bfa:	in     al,0x11
  421bfc:	fstp   QWORD PTR [ecx]
  421bfe:	(bad)  
  421bff:	lds    eax,FWORD PTR [ebp+0x43]
  421c02:	or     bh,ch
  421c04:	dec    edx
  421c05:	js     0x421c2f
  421c07:	outs   dx,DWORD PTR ds:[esi]
  421c08:	jmp    edi
  421c0a:	sbb    DWORD PTR [eax-0x7750229d],ecx
  421c10:	inc    ecx
  421c11:	popf   
  421c12:	mov    eax,ds:0xa19c9d07
  421c17:	or     ebx,DWORD PTR [ebp-0x60e8db66]
  421c1d:	sbb    DWORD PTR [eax],eax
  421c1f:	push   ecx
  421c20:	imul   esp,DWORD PTR [esi+0x2108e94f],0x16
  421c27:	mov    ah,BYTE PTR [edx+0x9]
  421c2a:	sub    BYTE PTR ds:0x2163105,dl
  421c30:	das    
  421c31:	sbb    eax,DWORD PTR [eax]
  421c33:	add    BYTE PTR [eax],al
  421c35:	add    BYTE PTR [edi+0x15],dh
  421c38:	mov    al,0x69
  421c3a:	popf   
  421c3b:	xchg   esi,eax
  421c3c:	mov    edi,ss
  421c3e:	push   ds
  421c3f:	push   edx
  421c40:	push   ss
  421c41:	out    0x53,eax
  421c43:	jne    0x421c5e
  421c45:	cld    
  421c46:	and    BYTE PTR [edx-0x67],bl
  421c49:	adc    al,0x16
  421c4b:	pusha  
  421c4c:	mov    bl,0x67
  421c4e:	and    eax,0x4fffc2c0
  421c53:	sub    DWORD PTR [esi-0x67],0xbf7d199d
  421c5a:	xchg   edx,eax
  421c5b:	scas   al,BYTE PTR es:[edi]
  421c5c:	inc    ebx
  421c5d:	sbb    DWORD PTR [ebp+0x16],0xfffffffd
  421c61:	xor    BYTE PTR [ebp-0x1],bl
  421c64:	mov    BYTE PTR [eax],al
  421c66:	inc    esp
  421c67:	pop    DWORD PTR [eax]
  421c69:	add    BYTE PTR [ebp-0x7b808bfe],bl
  421c6f:	or     eax,0x258195d
  421c74:	out    0xc3,eax
  421c76:	jecxz  0x421c0d
  421c78:	dec    edi
  421c79:	mov    edx,0x4aa14715
  421c7e:	pop    ebp
  421c7f:	mov    ch,0x71
  421c81:	sub    BYTE PTR ds:0x36832e26,bl
  421c87:	add    ch,cl
  421c89:	add    ebx,DWORD PTR [ebp+0x6c0bab7b]
  421c8f:	cmp    DWORD PTR [eax+esi*4+0x7cabe1b],esi
  421c96:	fs inc ecx
  421c98:	xchg   edx,eax
  421c99:	add    eax,0xfa1a0000
  421c9e:	xchg   edi,eax
  421c9f:	mov    ebp,ds
  421ca1:	sbb    DWORD PTR [edx+0x17],edx
  421ca4:	adc    DWORD PTR [edi],ecx
  421ca6:	push   0x44
  421ca8:	cdq    
  421ca9:	xchg   BYTE PTR [ebp+0x4],cl
  421cac:	popf   
  421cad:	add    dh,BYTE PTR [edi+ecx*4-0x42]
  421cb1:	jmp    0x2be6:0xf2bebfa4
  421cb8:	sbb    BYTE PTR [edi],ah
  421cba:	int    0x18
  421cbc:	adc    eax,0xd2bf293
  421cc1:	gs out 0x3,al
  421cc4:	sbb    DWORD PTR [edx+0x3a],eax
  421cc7:	lahf   
  421cc8:	adc    eax,0x1e86da8b
  421ccd:	out    0x4e,al
  421ccf:	add    ebx,DWORD PTR [ebp+0x5e873702]
  421cd5:	out    0xf6,al
  421cd7:	mov    bl,0xc2
  421cd9:	inc    BYTE PTR [ebx+eax*1-0x63]
  421cdd:	xchg   BYTE PTR [esi-0xd861971],ah
  421ce3:	fbld   TBYTE PTR [esi+0x6af4ff7f]
  421ce9:	repnz xchg ch,dh
  421cec:	(bad)
  421cf1:	push   cs
  421cf2:	cld    
  421cf3:	ficom  WORD PTR gs:[eax-0x6e7393e9]
  421cfa:	or     cl,BYTE PTR [esi+0x4c]
  421cfd:	es jl  0x421c88
  421d00:	add    BYTE PTR [eax],al
  421d02:	mov    ah,0xe
  421d04:	push   ebp
  421d05:	push   ecx
  421d06:	aaa    
  421d07:	ins    DWORD PTR es:[edi],dx
  421d08:	std    
  421d09:	and    DWORD PTR ss:[edx+0x1b9edd23],esp
  421d10:	and    esi,DWORD PTR [edx-0x5]
  421d13:	add    eax,0x6222983
  421d18:	mov    DWORD PTR [edx-0x3eb9845e],esp
  421d1e:	pop    ss
  421d1f:	push   es
  421d20:	mov    DWORD PTR [edx-0xeb8845e],ebp
  421d26:	daa    
  421d27:	sti    
  421d28:	mov    BYTE PTR [ecx-0x1abf7a5e],ch
  421d2e:	mov    cl,0x0
  421d30:	(bad)  
  421d31:	sub    eax,0xddfefdfd
  421d36:	or     eax,0x86620fe2
  421d3b:	and    eax,0xe8acf30
  421d40:	mov    dh,0xd7
  421d42:	mov    al,ds:0xdd6c0002
  421d47:	loope  0x421d60
  421d49:	scas   eax,DWORD PTR es:[edi]
  421d4a:	mov    eax,ds:0x2c204002
  421d4f:	adc    eax,0xf9bd2d88
  421d54:	pop    esp
  421d55:	aas    
  421d56:	and    DWORD PTR es:[edx-0x55],ebx
  421d5a:	popf   
  421d5b:	add    dl,BYTE PTR [ebx+0x62]
  421d5e:	jne    0x421ce2
  421d60:	jecxz  0x421d62
  421d62:	sbb    al,0x81
  421d64:	call   0xb7421da5
  421d69:	pop    esp
  421d6a:	push   ebx
  421d6b:	call   0x3e5d58
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	fidiv  WORD PTR [edi-0x22]
  421d74:	test   BYTE PTR [ecx],al
  421d76:	xchg   eax,ebx
  421d78:	stc    
  421d79:	leave  
  421d7a:	or     eax,DWORD PTR [esp+edx*4-0x3efffff9]
  421d81:	push   0x20
  421d83:	adc    ch,cl
  421d85:	dec    edx
  421d86:	and    BYTE PTR [eax],dl
  421d88:	in     al,dx
  421d89:	int    0x67
  421d8b:	add    BYTE PTR [ecx*4-0xb47f044],dh
  421d92:	cld    
  421d93:	inc    DWORD PTR [edx+edi*2+0x70]
  421d97:	and    al,0x58
  421d99:	fnstenv [ebx+0x6a01346c]
  421d9f:	and    DWORD PTR [edi+0x2c6a4ccc],edi
  421da5:	push   eax
  421da6:	in     al,0x69
  421da8:	mov    esi,0xb4840006
  421dad:	add    eax,0xf4e084
  421db2:	add    BYTE PTR [ebx+0x1be4514b],cl
  421db8:	pusha  
  421db9:	push   es
  421dba:	add    BYTE PTR [esp+esi*1-0xb2f7bfc],al
  421dc1:	add    BYTE PTR [eax],al
  421dc3:	lea    ebx,[eax-0x3d17efde]
  421dc9:	arpl   sp,di
  421dcb:	inc    DWORD PTR [eax]
  421dcd:	add    BYTE PTR [esi-0x5],bl
  421dd0:	xchg   dh,al
  421dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dd3:	pop    eax
  421dd4:	imul   edx,DWORD PTR [ebx+0xc],0xc400d628
  421ddb:	mov    WORD PTR [edi+ecx*1-0xb16063],?
  421de2:	mov    ds:0xc143871a,al
  421de7:	sub    DWORD PTR [eax+0x79be7],esi
  421ded:	add    BYTE PTR [esi],dl
  421def:	mov    bh,BYTE PTR [edi-0xb]
  421df2:	or     DWORD PTR [eax],edi
  421df4:	adc    eax,0xaa09c173
  421df9:	imul   eax,DWORD PTR [edx],0x47152849
  421dff:	sbb    al,BYTE PTR [eax]
  421e01:	push   esi
  421e02:	adc    eax,0x4510dc66
  421e07:	inc    esp
  421e08:	pusha  
  421e09:	std    
  421e0a:	push   edx
  421e0b:	call   0x8405:0x199a2394
  421e12:	sbb    eax,0x1d00001a
  421e17:	or     BYTE PTR [bx+si],al
  421e1a:	test   eax,0x81438773
  421e1f:	or     DWORD PTR [eax+0x8cb9e7],esi
  421e25:	add    BYTE PTR [esi],ah
  421e27:	or     bh,BYTE PTR [ebp+esi*8-0x77]
  421e2b:	sub    edx,DWORD PTR ds:0xaa29c173
  421e31:	imul   eax,DWORD PTR [eax],0x28687300
  421e37:	fst    st(4)
  421e39:	sbb    DWORD PTR [eax],eax
  421e3b:	push   esi
  421e3c:	and    eax,0xf510dfe6
  421e41:	(bad)  [ebx-0x3]
  421e44:	loop   0x421ddf
  421e46:	xchg   edi,eax
  421e47:	and    ebp,DWORD PTR [edx+0x204b8c19]
  421e4d:	into   
  421e4e:	fist   WORD PTR [ebx]
  421e50:	mov    ch,0x27
  421e52:	mov    edi,?
  421e54:	ret    0xf3bf
  421e57:	mov    dl,ah
  421e59:	add    dh,BYTE PTR [edi]
  421e5b:	stos   BYTE PTR es:[edi],al
  421e5c:	inc    edx
  421e5d:	scas   eax,DWORD PTR es:[edi]
  421e5e:	mov    cs,WORD PTR [ebp-0x2d]
  421e61:	add    ah,bh
  421e63:	jg     0x421e47
  421e65:	xchg   esi,eax
  421e66:	fadd   DWORD PTR [esi-0x4c291922]
  421e6c:	jp     0x421ea7
  421e6e:	repnz add ebx,DWORD PTR [ebp-0x77808989]
  421e75:	xchg   esi,eax
  421e76:	int3   
  421e77:	adc    al,0xee
  421e79:	out    0xf6,al
  421e7b:	lods   eax,DWORD PTR ds:[esi]
  421e7c:	add    al,0x92
  421e7e:	mov    ecx,0xe629102b
  421e83:	add    ecx,ebx
  421e85:	jp     0x421e29
  421e87:	fild   QWORD PTR [ebp+0x5075441a]
  421e8d:	or     esp,DWORD PTR [esi-0x68]
  421e90:	jle    0x421e8d
  421e92:	out    0x8f,al
  421e94:	sahf   
  421e95:	ja     0x421ec0
  421e97:	sub    DWORD PTR [eax],eax
  421e99:	add    BYTE PTR [ecx+0x462bd90b],ch
  421e9f:	imul   ebx,DWORD PTR [edx*1+0x750c1acd],0x20
  421ea7:	or     ebx,ecx
  421ea9:	inc    ebx
  421eaa:	jns    0x421e58
  421eac:	mov    eax,ds:0x28acff88
  421eb1:	add    BYTE PTR [ebp+0x1d2861b5],bl
  421eb7:	es out dx,al
  421eb9:	add    BYTE PTR [esi],0xe6
  421ebc:	jmp    0xeafc:0x5b819d03
  421ec3:	or     al,BYTE PTR [esi+0x35b44c03]
  421ec9:	add    eax,0x3e79f1c
  421ece:	popf   
  421ecf:	sbb    bh,dh
  421ed1:	retf   
  421ed2:	retf   0xff0a
  421ed5:	sbb    BYTE PTR [ecx-0x12],dh
  421ed8:	fucompp 
  421eda:	sahf   
  421edb:	jns    0x421eb4
  421edd:	fimul  DWORD PTR [ecx+0x2aeedcca]
  421ee3:	mov    bh,0xfe
  421ee5:	call   0xc5859688
  421eea:	mov    bh,BYTE PTR [edx-0xd82da7a]
  421ef0:	out    0x93,eax
  421ef2:	xor    al,0xa
  421ef4:	cld    
  421ef5:	ins    DWORD PTR es:[edi],dx
  421ef6:	fdivrp st(6),st
  421ef8:	add    eax,0xffffff9f
  421efb:	add    al,BYTE PTR [eax]
  421efd:	je     0x421eff
  421eff:	add    BYTE PTR [edx],dh
  421f01:	out    0xf,al
  421f03:	mov    ecx,0xe96befb6
  421f08:	sahf   
  421f09:	jnp    0x421efa
  421f0b:	adc    ch,BYTE PTR [eax+0x22462195]
  421f11:	out    0xf,al
  421f13:	xchg   edi,eax
  421f14:	hlt    
  421f15:	popf   
  421f16:	push   eax
  421f17:	inc    ecx
  421f18:	popf   
  421f19:	xor    edi,edi
  421f1b:	call   0xcd85a128
  421f20:	sub    eax,0x907e6822
  421f25:	push   es
  421f26:	jg     0x421ebd
  421f28:	inc    edx
  421f29:	idiv   edi
  421f2b:	fstp   QWORD PTR [edx-0x611700f2]
  421f31:	jge    0x421fa6
  421f33:	lds    eax,FWORD PTR [esi]
  421f35:	and    ch,BYTE PTR [eax+0x6a029e84]
  421f3b:	fsub   QWORD PTR ds:0x3c534f40
  421f41:	mov    bl,0xe7
  421f43:	sar    DWORD PTR [ecx+0x596dfc09],0xf6
  421f4a:	xor    DWORD PTR [eax+0x2a1],0x6e
  421f51:	cli    
  421f52:	rcr    BYTE PTR [si+0x3e],0xfc
  421f57:	imul   eax,DWORD PTR [ecx+0xcc1e451],0x483ffff
  421f61:	push   es
  421f62:	test   dl,al
  421f64:	add    BYTE PTR [eax],al
  421f66:	mov    ah,0x5
  421f68:	add    BYTE PTR [edx-0x50],ch
  421f6b:	add    BYTE PTR [ecx+0x8],0xd4
  421f6f:	push   0xa92c5372
  421f74:	aam    0x0
  421f76:	je     0x421ef9
  421f78:	mov    esp,0xfca2f00f
  421f7d:	inc    DWORD PTR [esi+esi*1+0xb521879]
  421f84:	sti    
  421f85:	jne    0x421f23
  421f87:	cmc    
  421f88:	jno    0x421f9e
  421f8a:	pop    esi
  421f8b:	ins    BYTE PTR es:[edi],dx
  421f8c:	dec    edi
  421f8d:	call   0x3ef666
  421f92:	sar    BYTE PTR [esi-0x11a7bf5],0xff
  421f99:	dec    DWORD PTR [ebp+0x72]
  421f9c:	or     BYTE PTR [ebx+ebx*2-0xc],dh
  421fa0:	jno    0x421fae
  421fa2:	push   cs
  421fa3:	dec    di
  421fa5:	call   0x3ef626
  421faa:	mov    al,0xbe
  421fac:	jo     0x42202b
  421fae:	in     eax,dx
  421faf:	jno    0x421fbd
  421fb1:	je     0x421fbe
  421fb3:	hlt    
  421fb4:	jno    0x421fc6
  421fb6:	cs addr16 dec edi
  421fb9:	call   0x3ef64e
  421fbe:	cmp    BYTE PTR [esi+0x79696970],0x20
  421fc5:	sub    BYTE PTR [edx+0x41],al
  421fc8:	and    BYTE PTR [edi],cl
  421fca:	add    BYTE PTR [eax],al
  421fcc:	popf   
  421fcd:	sbb    ebx,DWORD PTR [eax]
  421fcf:	push   esp
  421fd0:	fnstenv [edi]
  421fd2:	adc    DWORD PTR [ecx-0x64],ebp
  421fd5:	xchg   esp,eax
  421fd6:	dec    ecx
  421fd7:	out    0x50,eax
  421fd9:	inc    ebp
  421fda:	adc    esp,edi
  421fdc:	sbb    DWORD PTR [ebx-0x6c],ebx
  421fdf:	das    
  421fe0:	sub    BYTE PTR [edi+0x1b9f3fe4],cl
  421fe6:	add    al,ch
  421fe8:	xor    BYTE PTR [edi+0x11],bh
  421feb:	cld    
  421fec:	push   ss
  421fed:	out    dx,eax
  421fee:	out    0x33,eax
  421ff0:	sub    BYTE PTR [esi+0x199fcfe4],bl
  421ff6:	add    BYTE PTR [eax-0x12],dl
  421ff9:	jno    0x422049
  421ffb:	sahf   
  421ffc:	popf   
  421ffd:	sbb    DWORD PTR [eax+0x43],edi
  422000:	shr    DWORD PTR [eax],0x4b
  422003:	in     eax,dx
  422004:	pushf  
  422005:	sbb    DWORD PTR [eax],eax
  422007:	mov    DWORD PTR [ebx-0x20],esp
  42200a:	add    BYTE PTR [eax],al
  42200c:	frstor [edx-0x69]
  42200f:	test   bh,0x19
  422012:	jg     0x42208f
  422014:	jns    0x422003
  422016:	sbb    ebp,DWORD PTR [ebx+0x46]
  422019:	leave  
  42201a:	adc    esp,edi
  42201c:	mov    es,ecx
  42201e:	xchg   edi,eax
  42201f:	popf   
  422020:	cmp    ebx,ecx
  422022:	mov    ch,0xe7
  422024:	ret    0xe7f
  422027:	cld    
  422028:	pop    ss
  422029:	pop    esi
  42202a:	in     al,0xc
  42202c:	and    DWORD PTR ss:[ecx],edx
  42202f:	xor    BYTE PTR [eax],al
  422031:	add    BYTE PTR ds:0x12fd6e7c,al
  422037:	ins    DWORD PTR es:[edi],dx
  422038:	sbb    BYTE PTR [ebx+0x2b],bl
  42203b:	or     BYTE PTR [esi],cl
  42203d:	xor    ebp,ebx
  42203f:	jo     0x421fef
  422041:	pop    eax
  422042:	jmp    FWORD PTR es:[edi-0x18fd763f]
  422049:	mov    dh,0x15
  42204b:	pop    ss
  42204c:	jno    0x422058
  42204e:	sbb    al,0x17
  422050:	cmp    dh,BYTE PTR [ebp+0x7ee79c71]
  422056:	addr16 push esi
  422058:	pop    ss
  422059:	mov    edx,0xb4bd2b8d
  42205e:	jb     0x4220dd
  422060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422061:	xchg   edi,eax
  422062:	popa   
  422063:	jnp    0x422088
  422065:	pop    eax
  422066:	ja     0x42206a
  422068:	out    0x63,eax
  42206a:	stos   BYTE PTR es:[edi],al
  42206b:	xchg   esp,eax
  42206c:	fcmovne st,st(2)
  42206e:	inc    edi
  42206f:	dec    edx
  422070:	sbb    ecx,esp
  422072:	jmp    0x6307:0x7a0c2379
  422079:	adc    cl,BYTE PTR [ecx-0x7a328185]
  42207f:	mov    ?,WORD PTR [edi+0x1b75a07c]
  422085:	or     al,0xe3
  422087:	pop    es
  422088:	fisttp DWORD PTR [ebx]
  42208a:	shl    DWORD PTR [eax+0x7d96b45d],1
  422090:	es xchg edi,eax
  422092:	stos   DWORD PTR es:[edi],eax
  422093:	pop    es
  422094:	ror    DWORD PTR [ebx],cl
  422096:	add    BYTE PTR [eax],al
  422098:	jmp    0xee3ddba4
  42209d:	pushf  
  42209e:	call   0x354ac7be
  4220a3:	adc    DWORD PTR [edx+ebp*1],esp
  4220a6:	xchg   ebp,eax
  4220a7:	sbb    eax,DWORD PTR [edx+0x65]
  4220aa:	and    al,0x11
  4220ac:	leave  
  4220ad:	jl     0x4220d8
  4220af:	lods   eax,DWORD PTR ds:[esi]
  4220b0:	pop    ebx
  4220b1:	inc    esp
  4220b2:	jmp    0x684:0xfa7b6e03
  4220b9:	out    dx,al
  4220ba:	imul   esp,DWORD PTR [edi+0x7e9a0206],0x98ffea5f
  4220c4:	lea    edx,[ebx+edx*1+0x4f0eda5c]
  4220cb:	je     0x4220b0
  4220cd:	or     cl,BYTE PTR [edi-0x2f]
  4220d0:	fsubr  DWORD PTR [edi*8+0x734723d6]
  4220d7:	in     eax,0xe8
  4220d9:	inc    esi
  4220da:	call   0xf8066911
  4220df:	adc    bl,dl
  4220e1:	or     al,BYTE PTR [eax-0x7ef882b4]
  4220e7:	inc    esp
  4220e8:	xchg   ebp,eax
  4220e9:	pop    es
  4220ea:	iret   
  4220eb:	mov    eax,ds:0x9d7205ee
  4220f0:	and    eax,esp
  4220f2:	jmp    0x42212d
  4220f4:	mov    ecx,0xad8ef754
  4220f9:	push   es
  4220fa:	jb     0x422081
  4220fc:	add    BYTE PTR [eax],al
  4220fe:	or     BYTE PTR [esi],ch
  422100:	out    0x63,eax
  422102:	repz pop es
  422104:	cld    
  422105:	ins    DWORD PTR es:[edi],dx
  422106:	leave  
  422107:	xchg   ecx,eax
  422108:	adc    eax,0xfc120b6e
  42210d:	fmul   QWORD PTR [edx-0x72068dfa]
  422113:	nop
  422114:	or     edx,DWORD PTR [esi+0x33]
  422117:	(bad)  
  422118:	out    0x86,eax
  42211a:	mov    ds:0x7673fc06,eax
  42211f:	push   es
  422120:	jb     0x42216f
  422122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422123:	lea    ebx,[edx-0x3f8472c9]
  422129:	xchg   edx,eax
  42212a:	ja     0x42216e
  42212c:	push   edx
  42212d:	jb     0x4220b9
  42212f:	sub    bl,0xed
  422132:	jmp    0x16df1de5
  422137:	jns    0x4221b3
  422139:	adc    eax,0xe72ae9
  42213e:	pop    ss
  42213f:	or     ebx,edi
  422141:	(bad)  
  422142:	js     0x422105
  422144:	jo     0x42216b
  422146:	rep outs dx,DWORD PTR ds:[esi]
  422148:	hlt    
  422149:	cmp    DWORD PTR [ecx],esp
  42214b:	push   es
  42214c:	sti    
  42214d:	jne    0x422117
  42214f:	mov    DWORD PTR [ecx+0x8],eax
  422152:	ret    
  422153:	imul   ecx,DWORD PTR [edi+ecx*1],0xffffff89
  422157:	cmp    ecx,DWORD PTR [eax]
  422159:	push   eax
  42215a:	pop    esi
  42215b:	add    al,ch
  42215d:	fs loope 0x422155
  422160:	sti    
  422161:	inc    DWORD PTR [eax]
  422163:	add    BYTE PTR [ecx-0x23277916],cl
  422169:	sub    ebx,DWORD PTR [ecx-0x79a9fc02]
  42216f:	ret    
  422170:	pop    edi
  422171:	(bad)  
  422172:	mov    esi,0x874ab40c
  422177:	in     al,dx
  422178:	add    eax,0x840410e3
  42217d:	add    DWORD PTR [edi+0x57],ecx
  422180:	maskmovq mm1,(bad)
  422181:	test   DWORD PTR [ecx-0x406ef7b],0xf26694ff
  42218b:	add    BYTE PTR [ecx+eax*1+0xc03db2f],al
  422192:	adc    al,0x13
  422194:	xor    al,0x1
  422196:	dec    eax
  422197:	cmp    eax,0xfffffef9
  42219c:	imul   edx,DWORD PTR [ecx+ecx*4-0x7b],0xffffff88
  4221a1:	repz sti 
  4221a3:	jmp    DWORD PTR [eax+edx*2]
  4221a6:	adc    BYTE PTR fs:[esi-0x467303c2],bh
  4221ad:	loop   0x4221a6
  4221af:	inc    DWORD PTR [ebx+0x15fb4e]
  4221b5:	push   cs
  4221b6:	cmp    al,0x0
  4221b8:	popf   
  4221b9:	xchg   esi,eax
  4221ba:	inc    ebx
  4221bb:	jae    0x422219
  4221bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221be:	xchg   bl,dh
  4221c0:	or     ah,bh
  4221c2:	or     al,0x4f
  4221c4:	cmc    
  4221c5:	(bad)  
  4221c8:	add    BYTE PTR [eax],al
  4221ca:	cli    
  4221cb:	xchg   esi,eax
  4221cc:	inc    ebx
  4221cd:	jae    0x42217b
  4221cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d0:	xchg   bl,dh
  4221d2:	call   0xf5912ef2
  4221d7:	fcmove st,st(1)
  4221d9:	(bad)  
  4221da:	ficom  DWORD PTR [esi+0x347c7340]
  4221e0:	xchg   edi,eax
  4221e1:	pop    es
  4221e2:	push   ss
  4221e3:	aam    0x7
  4221e5:	push   eax
  4221e6:	adc    BYTE PTR [esi+0x4bbafa14],bl
  4221ec:	mov    al,0xe7
  4221ee:	pop    ebp
  4221ef:	push   esp
  4221f0:	or     eax,0x7f4317fc
  4221f5:	sub    BYTE PTR [ecx-0x1203f29b],0x81
  4221fc:	js     0x422205
  4221fe:	xchg   edx,eax
  4221ff:	jne    0x4221ae
  422201:	mov    DWORD PTR [esi-0x1f],ebx
  422204:	cmp    al,cl
  422206:	cdq    
  422207:	sbb    DWORD PTR [edi+0x1c9b8988],esi
  42220d:	and    ebx,DWORD PTR [edi-0x2da9ffe7]
  422213:	mov    cl,0xf9
  422215:	inc    edx
  422216:	popf   
  422217:	sbb    DWORD PTR [esi-0x54387200],edx
  42221d:	hlt    
  42221e:	dec    esp
  42221f:	cdq    
  422220:	push   ss
  422221:	dec    esi
  422223:	es mov dh,0x73
  422226:	xchg   esp,eax
  422227:	fadd   st(7),st
  422229:	mul    DWORD PTR [ebx+0x19]
  42222f:	add    BYTE PTR [esi+0x2a],al
  422232:	inc    ebp
  422233:	inc    edx
  422234:	and    eax,0x9d03eb03
  422239:	add    dl,BYTE PTR [edx]
  42223b:	push   es
  42223c:	loopne 0x4221fb
  42223e:	push   cs
  42223f:	add    DWORD PTR [ebp-0x626618fe],ebx
  422245:	jne    0x4221f2
  422247:	and    eax,0x99e69852
  42224c:	popf   
  42224d:	stos   BYTE PTR es:[edi],al
  42224e:	inc    BYTE PTR [edi-0x6618fda1]
  422254:	mov    eax,0x5f7b4caa
  422259:	push   ds
  42225a:	imul   eax,DWORD PTR [edi+0xdd505f6],0x62
  422261:	ja     0x422286
  422263:	or     al,0x97
  422265:	add    ah,bh
  422267:	add    ebx,DWORD PTR [ecx-0x4138944e]
  42226d:	mov    dl,0x74
  42226f:	jl     0x422271
  422271:	shl    dh,0xb5
  422274:	xor    al,0x2
  422276:	(bad)  
  422277:	jmp    DWORD PTR [ecx+0x2]
  42227a:	out    0x78,eax
  42227c:	xchg   edx,eax
  42227d:	jge    0x422214
  42227f:	xchg   edi,eax
  422280:	sahf   
  422281:	shl    BYTE PTR [esi+0x2b75b919],1
  422287:	adc    al,0xd2
  422289:	lods   al,BYTE PTR ds:[esi]
  42228a:	mov    cs,WORD PTR [edx]
  42228c:	mov    al,ds:0x32887503
  422291:	(bad)  
  422292:	xlat   BYTE PTR ds:[ebx]
  422293:	cdq    
  422294:	add    BYTE PTR [eax],al
  422296:	mov    ds:0xf413ab75,al
  42229b:	add    dh,BYTE PTR [edi-0x33150f4]
  4222a1:	ret    
  4222a2:	push   edx
  4222a3:	and    BYTE PTR [edx],0x0
  4222a6:	dec    eax
  4222a7:	lea    edi,[esi]
  4222a9:	jg     0x42228a
  4222ab:	adc    dl,BYTE PTR [esi-0x7ada4c]
  4222b1:	loopne 0x422249
  4222b3:	mov    esp,0xa6982ee2
  4222b8:	pop    ebp
  4222b9:	xor    bh,bl
  4222bb:	(bad)  
  4222bc:	push   DWORD PTR [ebx-0x47b1e86b]
  4222c2:	dec    ecx
  4222c3:	jp     0x4222bb
  4222c5:	arpl   WORD PTR [ecx-0x611700fd],cx
  4222cb:	jp     0x422317
  4222cd:	(bad)  
  4222ce:	je     0x42234b
  4222d0:	(bad)  
  4222d1:	out    0x9e,eax
  4222d3:	add    cl,BYTE PTR [eax-0x2e7f6764]
  4222d9:	pop    ebp
  4222da:	es jp  0x422327
  4222dd:	icebp  
  4222de:	cmc    
  4222df:	xor    eax,0xb136050
  4222e4:	xchg   BYTE PTR [ecx+ecx*8],dh
  4222e7:	lods   al,BYTE PTR ds:[esi]
  4222e8:	std    
  4222e9:	sub    al,0x90
  4222eb:	div    BYTE PTR [ebp+0x1379a834]
  4222f1:	out    dx,eax
  4222f2:	sahf   
  4222f3:	scas   eax,DWORD PTR es:[edi]
  4222f4:	std    
  4222f5:	ficom  WORD PTR [eax-0x48]
  4222f8:	std    
  4222f9:	jae    0x4222fb
  4222fb:	add    BYTE PTR [edx-0x5f027bfd],dh
  422301:	mov    dl,BYTE PTR [eax+ebp*8]
  422304:	xchg   ecx,eax
  422305:	mov    eax,0xb889e70c
  42230a:	into   
  42230b:	jmp    0xe11f:0x81558ac4
  422312:	sti    
  422313:	jmp    0xddc825b6
  422318:	lahf   
  422319:	xor    al,0xc
  42231b:	and    esp,ecx
  42231d:	push   cs
  42231e:	inc    ebx
  42231f:	pop    esi
  422320:	sbb    ecx,DWORD PTR [edx]
  422322:	jne    0x422353
  422324:	add    BYTE PTR [ebx-0x7a],bl
  422327:	pushf  
  422328:	cdq    
  422329:	mov    DWORD PTR [eax+0x53400],ecx
  42232f:	add    BYTE PTR [esi-0x43770240],ch
  422335:	add    al,0xfb
  422337:	push   DWORD PTR [edi+ebp*4]
  42233a:	ret    0x30c2
  42233d:	push   es
  42233e:	push   ebp
  42233f:	mov    edi,DWORD PTR [ebp-0x547a3d2e]
  422345:	cdq    
  422346:	sbb    dl,BYTE PTR [ebx+0x52]
  422349:	jnp    0x42233c
  42234b:	sub    eax,DWORD PTR [ebx+edi*2]
  42234e:	clts   
  422350:	outs   dx,DWORD PTR ds:[esi]
  422351:	mov    cl,0x1f
  422353:	adc    BYTE PTR [esi],dh
  422355:	cli    
  422356:	adc    al,BYTE PTR [ecx+0x7c]
  422359:	cmc    
  42235a:	cmp    BYTE PTR [eax+edx*4-0xe],cl
  42235e:	outs   dx,BYTE PTR ds:[esi]
  42235f:	add    al,BYTE PTR [eax]
  422361:	add    BYTE PTR [edi+0x714f3b3f],dh
  422367:	and    eax,0x487b5b5d
  42236c:	add    eax,DWORD PTR [eax]
  42236e:	mov    eax,ds:0x818be781
  422373:	inc    BYTE PTR [eax+0x7688b8ec]
  422379:	or     al,0xb4
  42237b:	cld    
  42237c:	test   ebp,edx
  42237e:	mov    ah,0x5
  422380:	add    BYTE PTR [ebx+0x9],dl
  422383:	mov    ah,0xf3
  422385:	push   esi
  422386:	pop    edi
  422387:	aas    
  422388:	push   esp
  422389:	mov    ebp,DWORD PTR ds:0xb1c600a0
  42238f:	or     eax,0xec98cfb
  422394:	pop    ebp
  422395:	sub    DWORD PTR [ecx-0x7],0xfffffffb
  422399:	jne    0x4223e4
  42239b:	jg     0x4223ac
  42239d:	psubq  mm7,QWORD PTR [ebx+0xc01fe07]
  4223a4:	adc    DWORD PTR [ecx],0xffffff9d
  4223a7:	inc    esp
  4223a8:	add    eax,esi
  4223aa:	pushf  
  4223ab:	jmp    0x422371
  4223ad:	dec    ebp
  4223ae:	enter  0xf751,0xb5
  4223b2:	call   0x5d109efa
  4223b7:	inc    ebp
  4223b8:	add    cl,BYTE PTR [edx+0x3f7dd307]
  4223be:	popf   
  4223bf:	clc    
  4223c0:	push   ecx
  4223c1:	push   edx
  4223c2:	adc    al,0x6c
  4223c4:	and    eax,0x26000000
  4223c9:	sbb    eax,0x2aa1de45
  4223ce:	push   ss
  4223cf:	add    edx,DWORD PTR [esi-0x6a728206]
  4223d5:	jne    0x42239b
  4223d7:	call   FWORD PTR [edi]
  4223d9:	xor    BYTE PTR [ebx],al
  4223db:	sub    BYTE PTR [eax-0x10],0x4
  4223df:	mov    BYTE PTR [eax-0x22],dl
  4223e2:	xchg   ecx,eax
  4223e3:	adc    al,0xaa
  4223e5:	cdq    
  4223e6:	mov    eax,0xf6cd1ef9
  4223eb:	mov    esi,0xe644ecbf
  4223f0:	fwait
  4223f1:	hlt    
  4223f2:	cmp    eax,0x7de30c89
  4223f7:	aas    
  4223f8:	popf   
  4223f9:	les    eax,FWORD PTR ds:0x886b68b2
  4223ff:	cld    
  422400:	lahf   
  422401:	and    edi,esi
  422403:	or     al,0x53
  422405:	das    
  422406:	or     al,BYTE PTR [eax-0x79822684]
  42240c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42240d:	arpl   WORD PTR [edi+0x54ec77ff],di
  422413:	cmp    bl,BYTE PTR ds:0xeeffefff
  422419:	retf   0xb5f6
  42241c:	outs   dx,BYTE PTR ds:[esi]
  42241d:	or     BYTE PTR [ebp+0x2f],bh
  422420:	xchg   edx,eax
  422421:	add    bl,BYTE PTR [ebx-0x6cefb070]
  422427:	xor    eax,0xa120b8a1
  42242c:	add    BYTE PTR [eax],al
  42242e:	and    esi,DWORD PTR [ebx-0x19]
  422431:	mov    eax,ds:0xa1ed531b
  422436:	and    ecx,DWORD PTR [ebx-0x1d]
  422439:	xchg   dl,dh
  42243b:	or     bh,BYTE PTR [esi]
  42243d:	hlt    
  42243e:	and    bl,BYTE PTR [ebx]
  422440:	pop    edi
  422441:	test   al,0x2f
  422443:	mov    eax,ecx
  422445:	add    al,0x25
  422447:	push   ebx
  422448:	out    0x7b,eax
  42244a:	pop    edx
  42244b:	add    esp,DWORD PTR [esi+0x43]
  42244e:	sahf   
  42244f:	or     DWORD PTR [edi+esi*8-0x3495eefe],0xfffffff9
  422457:	(bad)  
  422458:	cli    
  422459:	test   eax,0xc0be5b50
  42245e:	mov    ds:0xe2f727c9,al
  422463:	push   esi
  422464:	outs   dx,BYTE PTR ds:[esi]
  422465:	sbb    BYTE PTR ds:0x69b4edef,bl
  42246b:	lea    edx,ds:0xe1461403
  422471:	jl     0x42245e
  422473:	mov    DWORD PTR [eax+edx*1],ebp
  422476:	jne    0x422447
  422478:	jmp    0x5303:0xe9030184
  42247f:	xor    esi,DWORD PTR [ebx-0x3dc4332b]
  422485:	xchg   ebp,eax
  422486:	call   0x5bc2d4bf
  42248b:	jne    0x42245b
  42248d:	add    DWORD PTR [edi],0xf
  422490:	jmp    0x95422512
  422495:	jbe    0x422483
  422497:	test   BYTE PTR [ebp+0x4],bl
  42249a:	mov    es,WORD PTR [ebx]
  42249c:	fmul   QWORD PTR [ebp+0x3bba2800]
  4224a2:	dec    ebx
  4224a3:	mul    BYTE PTR [ecx+0xe]
  4224a6:	mov    dl,0x28
  4224a8:	fild   DWORD PTR [edi-0xa68ccb]
  4224ae:	out    0xeb,al
  4224b0:	jo     0x42247a
  4224b2:	test   BYTE PTR [eax],ah
  4224b4:	sub    eax,0x3d40800c
  4224b9:	mov    WORD PTR [ecx+0x2a],es
  4224bc:	xor    al,0x93
  4224be:	shl    DWORD PTR [edi],0x66
  4224c1:	and    eax,ecx
  4224c3:	bnd jne 0x422537
  4224c6:	lds    ebp,FWORD PTR [ebp-0x2a]
  4224c9:	jae    0x4224ce
  4224cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cd:	enter  0xa588,0xfb
  4224d1:	idiv   BYTE PTR [esi]
  4224d3:	push   0xffffff93
  4224d5:	add    edi,DWORD PTR [edi+edx*2+0x7a]
  4224d9:	cmc    
  4224da:	je     0x42248e
  4224dc:	jo     0x42252a
  4224de:	clc    
  4224df:	arpl   WORD PTR [edx],bp
  4224e1:	clc    
  4224e2:	xchg   BYTE PTR [edi+edx*4+0x5eebe1bf],dl
  4224e9:	out    0x4,eax
  4224eb:	repz pop edi
  4224ed:	mov    DWORD PTR [ebp-0x2d],ecx
  4224f0:	inc    esi
  4224f1:	inc    esp
  4224f2:	cld    
  4224f3:	arpl   WORD PTR [edi-0x41],bx
  4224f6:	loope  0x4224e7
  4224f8:	add    BYTE PTR [eax],al
  4224fa:	mov    eax,0x78a9f74b
  4224ff:	add    eax,eax
  422501:	shl    DWORD PTR [eax-0x149e41f4],0xfc
  422508:	lea    edi,[edi]
  42250a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250b:	xor    cl,cl
  42250d:	jno    0x422562
  42250f:	stc    
  422510:	test   DWORD PTR [ebx+0x14871114],edi
  422516:	lods   eax,DWORD PTR ds:[esi]
  422517:	mov    eax,DWORD PTR [eax+eax*1+0x71]
  42251b:	push   es
  42251c:	cld    
  42251d:	inc    ebp
  42251e:	call   0x3dc72a9c
  422523:	(bad)  
  422524:	sti    
  422525:	inc    eax
  422526:	das    
  422527:	inc    eax
  422528:	ja     0x422515
  42252a:	jg     0x422557
  42252c:	or     al,0x82
  42252e:	pop    ss
  42252f:	or     edi,esp
  422531:	call   DWORD PTR [edx]
  422533:	jg     0x422573
  422535:	hlt    
  422536:	lahf   
  422537:	mov    ebp,0x38ff5f03
  42253c:	ror    DWORD PTR [eax],0x44
  42253f:	mov    ah,0x88
  422541:	lock mov esi,0xb7018803
  422547:	psubd  mm6,QWORD PTR [ebp+0x18]
  42254b:	jne    0x422587
  42254d:	add    edi,ebp
  42254f:	adc    BYTE PTR [esi+0xf7fb34a],al
  422555:	push   es
  422556:	out    0xb1,al
  422558:	cld    
  422559:	mov    ah,dl
  42255b:	rol    DWORD PTR [edx+0x75],0x0
  42255f:	add    al,ch
  422561:	stos   BYTE PTR es:[edi],al
  422562:	sar    BYTE PTR [ecx],0x68
  422565:	(bad)  
  422567:	jae    0x42252c
  422569:	mov    dl,0xfc
  42256b:	je     0x422515
  42256d:	(bad)  
  42256e:	push   ebp
  42256f:	dec    ecx
  422571:	rcl    DWORD PTR ds:0xbf80b440,1
  422577:	or     al,0x61
  422579:	mov    ebp,0x930485fc
  42257e:	or     DWORD PTR [edx+0x30fcd680],ecx
  422584:	rcl    cl,0x43
  422587:	jne    0x422573
  422589:	inc    eax
  42258a:	(bad)  
  42258b:	(bad)  
  42258c:	fnstcw WORD PTR [ecx-0x19]
  42258f:	push   ecx
  422590:	xlat   BYTE PTR ds:[ebx]
  422591:	rol    edx,1
  422593:	push   esi
  422594:	popf   
  422595:	cmp    al,0x7c
  422597:	dec    edx
  422598:	and    BYTE PTR [ebx-0x47],0xfd
  42259c:	add    esi,DWORD PTR [ebx+0x7c]
  42259f:	call   FWORD PTR [ebp+0x6d88ffeb]
  4225a5:	xor    DWORD PTR [edi+edi*8],eax
  4225a8:	(bad)  
  4225a9:	jmp    0x422622
  4225ab:	or     eax,0x389daddc
  4225b0:	(bad)  [bp+si]
  4225b3:	mov    BYTE PTR [ebp+0x60],cl
  4225b6:	push   es
  4225b7:	or     al,0xb
  4225b9:	sahf   
  4225ba:	add    cl,BYTE PTR [eax+0xb79f3d8]
  4225c0:	xchg   esp,eax
  4225c1:	jno    0x4225ad
  4225c3:	add    DWORD PTR [eax],eax
  4225c5:	add    BYTE PTR [edi-0x15],dl
  4225c8:	mov    eax,0xb97592fd
  4225cd:	std    
  4225ce:	daa    
  4225cf:	pop    es
  4225d0:	add    eax,0x7c1c58fe
  4225d5:	sbb    eax,0xd04ff15
  4225da:	dec    ebx
  4225db:	sahf   
  4225dc:	add    bh,BYTE PTR [eax]
  4225de:	push   0xdb0390f7
  4225e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e4:	add    bh,bh
  4225e6:	pusha  
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	nop
  4225e9:	int3   
  4225ea:	inc    edx
  4225eb:	lea    esp,[esi-0xd203a]
  4225f1:	addr16 lahf 
  4225f3:	jmp    0x7e0:0x5ecaffff
  4225fa:	push   ds
  4225fb:	stos   DWORD PTR es:[edi],eax
  4225fc:	sti    
  4225fd:	dec    edi
  4225fe:	mov    edx,0x5d15cfdd
  422603:	jmp    0x422683
  422605:	ret    
  422606:	cdq    
  422607:	test   eax,0xe93afffb
  42260c:	add    al,0x0
  42260e:	popf   
  42260f:	add    ah,BYTE PTR [esi+0x43]
  422612:	sahf   
  422613:	push   edx
  422614:	call   0xb2f0:0x920ebe8f
  42261b:	adc    al,0x29
  42261d:	add    al,0x1c
  42261f:	(bad)  
  422620:	cmc    
  422621:	inc    ecx
  422622:	sahf   
  422623:	add    ch,BYTE PTR [esi-0x5]
  422626:	sbb    eax,0x8fe9ea
  42262b:	add    BYTE PTR [ecx+ecx*2+0x7323f4f4],dl
  422632:	in     eax,dx
  422633:	jl     0x422617
  422635:	or     ah,BYTE PTR [esi]
  422637:	mov    cl,0x1d
  422639:	ret    
  42263a:	in     eax,dx
  42263b:	lods   eax,DWORD PTR ds:[esi]
  42263c:	cmp    dl,BYTE PTR [edx+0x4a]
  42263f:	push   es
  422640:	cmp    eax,eax
  422642:	outs   dx,BYTE PTR ds:[esi]
  422643:	sti    
  422644:	sbb    eax,0x838fe9ea
  422649:	dec    ecx
  42264a:	mov    ebp,0xe6ea1df2
  42264f:	(bad)  
  422650:	popf   
  422651:	xor    BYTE PTR [ecx],ch
  422653:	inc    edx
  422654:	and    eax,0x23d6ecd
  422659:	jmp    0xe8432c71
  42265e:	jmp    0x422666
  422660:	mov    cl,BYTE PTR [edx]
  422662:	outs   dx,BYTE PTR ds:[esi]
  422663:	cmp    ecx,esi
  422665:	jb     0x42264c
  422667:	jp     0x422649
  422669:	xchg   DWORD PTR [ebx],ebx
  42266b:	sbb    edi,esi
  42266d:	(bad)  
  42266e:	jmp    0x9e44:0x6607c505
  422675:	push   esp
  422676:	outs   dx,BYTE PTR ds:[esi]
  422677:	ss ret 0xd559
  42267b:	add    eax,0x40e8b2c1
  422680:	pop    ds
  422681:	cmc    
  422682:	cmp    al,0x1
  422684:	ins    BYTE PTR es:[edi],dx
  422685:	ret    0x79a6
  422688:	mov    ds:0x99c0007f,al
  42268d:	jbe    0x4226cb
  42268f:	and    BYTE PTR [eax],al
  422691:	add    BYTE PTR ds:0x801d4925,ch
  422697:	inc    esp
  422698:	je     0x422693
  42269a:	inc    edi
  42269b:	jo     0x422683
  42269d:	bound  esi,QWORD PTR [ebx-0x239d3476]
  4226a3:	jecxz  0x422643
  4226a5:	xchg   DWORD PTR [eax+0x4b9e7fe],ebx
  4226ab:	sti    
  4226ac:	out    0xeb,al
  4226ae:	add    al,0xfc
  4226b0:	push   ebp
  4226b1:	push   ss
  4226b2:	aam    0xca
  4226b4:	call   0xfc40cbee
  4226b9:	sub    ah,BYTE PTR [eax-0x749df795]
  4226bf:	(bad)  
  4226c0:	jo     0x4226a7
  4226c2:	mov    ch,0xc6
  4226c4:	xchg   DWORD PTR [edx],ebx
  4226c6:	xchg   ecx,eax
  4226c7:	xchg   esp,edi
  4226c9:	mov    al,ds:0xd96a0dea
  4226cf:	dec    DWORD PTR [esi+0x62]
  4226d2:	retf   
  4226d3:	mov    cl,bl
  4226d5:	adc    DWORD PTR [eax-0x7be10406],ebx
  4226db:	lds    edi,FWORD PTR [edi+0x41f4562]
  4226e1:	(bad)  
  4226e2:	not    BYTE PTR [ecx+ecx*2-0x50]
  4226e6:	inc    ecx
  4226e7:	mov    dh,al
  4226e9:	jne    0x4226d7
  4226eb:	inc    ebx
  4226ec:	jne    0x4226c3
  4226ee:	add    al,0x2
  4226f0:	das    
  4226f1:	sbb    edx,DWORD PTR [edx+0x45]
  4226f4:	(bad)  
  4226f5:	aas    
  4226f6:	add    BYTE PTR [eax],al
  4226f8:	mov    al,ds:0x9cc9c1ec
  4226fd:	jmp    0x31de6a0f
  422702:	into   
  422703:	pop    esp
  422704:	clc    
  422705:	add    BYTE PTR [ecx+0x0],bl
  422708:	repz bt eax,0xb7
  42270d:	scas   al,BYTE PTR es:[edi]
  42270e:	jecxz  0x4226a7
  422710:	inc    ebx
  422711:	add    eax,0x794c8bfc
  422716:	cld    
  422717:	je     0x4226b8
  422719:	jnp    0x42275a
  42271b:	and    al,0x78
  42271d:	push   ds
  42271e:	pop    edi
  42271f:	jmp    FWORD PTR [ebx]
  422721:	(bad)  
  422722:	jge    0x4226e4
  422724:	nop
  422725:	lock mov BYTE PTR [eax+eiz*2-0xa],cl
  42272a:	jle    0x4226f5
  42272c:	jo     0x422732
  42272e:	add    DWORD PTR [ecx],0xffffffff
  422731:	ss call 0x8b58da3f
  422737:	xchg   edi,eax
  422738:	mov    edx,0xbc02ffe
  42273d:	mov    al,ds:0xa83408c1
  422742:	mov    cl,dh
  422744:	mov    edi,0x44e980fd
  422749:	mov    ch,BYTE PTR [eax]
  42274b:	dec    ecx
  42274c:	lock call 0x8a7a10d2
  422752:	push   DWORD PTR [ecx]
  422754:	les    ebx,FWORD PTR [edi+0x7b5257c0]
  42275a:	stc    
  42275b:	call   0x3d2760
  422760:	sti    
  422761:	dec    DWORD PTR [ebx+0x1b]
  422764:	sbb    eax,0x88fe14ff
  422769:	retf   0x959b
  42276c:	dec    DWORD PTR [edx-0x172a853e]
  422772:	xchg   edx,eax
  422773:	or     bh,ah
  422775:	call   FWORD PTR [edi-0x3f3f7f06]
  42277b:	pop    ebx
  42277c:	or     esi,0xffffffec
  42277f:	pop    ecx
  422780:	repz call FWORD PTR [ebp+0x5b01b4d0]
  422787:	lods   al,BYTE PTR ds:[esi]
  422788:	push   esi
  422789:	push   ebx
  42278a:	es inc eax
  42278c:	sub    BYTE PTR [esi+edx*1],cl
  42278f:	mov    ebx,0xe728fb89
  422794:	xor    al,al
  422796:	xchg   BYTE PTR [esi],dl
  422798:	mov    ecx,DWORD PTR [eax]
  42279a:	push   ds
  42279b:	xchg   edx,eax
  42279c:	add    al,0x74
  42279e:	shl    BYTE PTR [edx],cl
  4227a0:	js     0x4227c1
  4227a2:	aam    0x17
  4227a4:	adc    cl,BYTE PTR [ecx-0xf]
  4227a7:	in     al,0x4c
  4227a9:	jne    0x42272f
  4227ab:	sbb    eax,0x7868c1ec
  4227b0:	jmp    edi
  4227b2:	lods   eax,DWORD PTR ds:[esi]
  4227b3:	add    eax,0x59fe704
  4227b8:	add    eax,0x8b282652
  4227bd:	(bad)  
  4227be:	xor    eax,0xfc0090
  4227c3:	add    BYTE PTR [edx+0x44],al
  4227c6:	and    al,0xfb
  4227c8:	lods   eax,DWORD PTR ds:[esi]
  4227c9:	jecxz  0x422755
  4227cb:	retf   
  4227cc:	xor    bh,BYTE PTR [ebx+0x53638703]
  4227d2:	(bad)  
  4227d3:	mul    DWORD PTR [edx]
  4227d5:	xor    bl,ch
  4227d7:	or     eax,0x4c46c6f
  4227dc:	cmp    BYTE PTR es:[ebx-0x5e90a36],cl
  4227e3:	sti    
  4227e4:	add    ah,BYTE PTR [edi+eax*8+0x5b]
  4227e8:	pop    ebx
  4227e9:	sub    eax,0xe9260008
  4227ee:	mov    cl,BYTE PTR [ecx+eax*8-0xd]
  4227f2:	inc    edi
  4227f3:	dec    eax
  4227f4:	push   0x72e9d4ed
  4227f9:	call   0x2e3:0x22bb0e7
  422800:	adc    eax,0x480264fa
  422805:	sbb    edx,edx
  422807:	ja     0x42278a
  422809:	push   es
  42280a:	pop    esi
  42280b:	push   edi
  42280c:	jns    0x422814
  42280e:	outs   dx,BYTE PTR ds:[esi]
  42280f:	shl    BYTE PTR [edx],cl
  422811:	rcl    cl,0x77
  422814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422815:	clc    
  422816:	mov    dl,0x88
  422818:	pop    ebp
  422819:	outs   dx,DWORD PTR ds:[esi]
  42281a:	fisttp WORD PTR [eax-0x73189096]
  422820:	mov    cl,BYTE PTR [ebp+0x4f95eea2]
  422826:	sub    DWORD PTR [eax-0x6f10000],0x585d368a
  422830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422831:	or     ebx,DWORD PTR [ebp+0x24ffb4f7]
  422837:	inc    esp
  422838:	jmp    0x6bd35a28
  42283d:	add    cl,BYTE PTR [ebp+0x4ff86c2]
  422843:	inc    esp
  422844:	jmp    0xa6fec5ef
  422849:	add    ebx,DWORD PTR [edx]
  42284b:	or     ecx,DWORD PTR [edi-0x633c62ba]
  422851:	mov    ?,WORD PTR [ecx]
  422853:	test   BYTE PTR [ebp+0x27],cl
  422856:	adc    al,0x46
  422858:	dec    ecx
  422859:	mov    gs,WORD PTR [eax+0xa]
  42285c:	pusha  
  42285d:	push   eax
  42285e:	stc    
  42285f:	mov    esi,DWORD PTR [edi+ecx*1-0x71eeb9ec]
  422866:	push   eax
  422867:	adc    ah,BYTE PTR [eax+0x50]
  42286a:	or     DWORD PTR [ecx+eiz*1+0x25462004],eax
  422871:	imul   ebx,esi,0xbb261d3d
  422877:	mov    DWORD PTR [eax],eax
  422879:	lods   al,BYTE PTR ds:[esi]
  42287a:	(bad)  
  42287b:	jmp    0xabc9:0xf69c0d30
  422882:	lods   eax,DWORD PTR ds:[esi]
  422883:	add    dl,BYTE PTR [ebp+0x72]
  422886:	int    0x77
  422888:	in     al,dx
  422889:	std    
  42288a:	and    DWORD PTR [esi-0x10],ebx
  42288d:	jmp    0x765b2892
  422892:	or     al,0xf1
  422894:	inc    esp
  422895:	push   ebx
  422896:	xchg   DWORD PTR [ecx+edx*4],edi
  422899:	les    eax,FWORD PTR [ebp-0x4a]
  42289c:	mov    eax,ds:0xe4621b6d
  4228a1:	push   es
  4228a2:	jg     0x4228b0
  4228a4:	mov    DWORD PTR [edx],eax
  4228a6:	test   DWORD PTR [ecx+0x26870f05],ebp
  4228ac:	test   eax,0x1991757f
  4228b1:	ss xor edx,eax
  4228b4:	repnz or bh,bl
  4228b7:	and    al,0x61
  4228b9:	cmp    DWORD PTR [ebp+0x71],eax
  4228bc:	shr    ebx,cl
  4228be:	xchg   esp,esi
  4228c0:	scas   al,BYTE PTR es:[edi]
  4228c1:	mov    DWORD PTR [ebp+0x5d],edx
  4228c4:	and    al,dh
  4228c6:	or     al,0xee
  4228c8:	sbb    BYTE PTR ds:0x7f9ee901,al
  4228ce:	add    ch,BYTE PTR [edx+0x31]
  4228d1:	push   es
  4228d2:	or     ebp,DWORD PTR [ebx+0x32]
  4228d5:	add    al,BYTE PTR [eax]
  4228d7:	jmp    0xe736663d
  4228dc:	and    eax,0x9ee900e6
  4228e1:	jg     0x42292d
  4228e3:	in     eax,dx
  4228e4:	and    eax,DWORD PTR [ebp+0xc]
  4228e7:	out    dx,al
  4228e8:	sbb    cl,bl
  4228ea:	add    cl,ch
  4228ec:	sahf   
  4228ed:	repz shr ecx,0x9e
  4228f1:	add    al,al
  4228f3:	add    BYTE PTR [eax],al
  4228f5:	add    bl,dh
  4228f7:	jle    0x4228b4
  4228f9:	add    ah,dh
  4228fb:	add    al,BYTE PTR [eax+0x7402d37d]
  422901:	or     al,0xcb
  422903:	ret    
  422904:	add    BYTE PTR [eax],al
  422906:	mov    ah,0x42
  422908:	pop    es
  422909:	test   BYTE PTR ds:0x3f000003,ah
  42290f:	aam    0x81
  422911:	loop   0x4228d7
  422913:	add    al,BYTE PTR [eax]
  422915:	sub    BYTE PTR [eax-0x3],0xf6
  422919:	inc    ebp
  42291a:	in     al,0x85
  42291c:	inc    ebp
  42291d:	or     al,0xbc
  42291f:	jp     0x422969
  422921:	dec    eax
  422922:	enter  0x4835,0x48
  422926:	test   al,0x31
  422928:	jnp    0x422912
  42292a:	js     0x42299a
  42292c:	and    al,0x83
  42292e:	sbb    al,0xa
  422930:	je     0x422949
  422932:	pop    es
  422933:	jmp    0x0:0x7df90f10
  42293a:	je     0x4228dd
  42293c:	add    al,0xba
  42293e:	xchg   esi,edi
  422940:	xor    al,BYTE PTR [esi+0x3c]
  422943:	ins    DWORD PTR es:[edi],dx
  422944:	jb     0x4228cb
  422946:	xchg   dh,ah
  422948:	jo     0x4228d5
  42294a:	sti    
  42294b:	adc    DWORD PTR [ebx+0x39e7384f],eax
  422951:	mov    edi,ebx
  422953:	or     DWORD PTR [ebx+0x31e6dc4d],eax
  422959:	mov    eax,DWORD PTR [eax]
  42295b:	add    bh,dh
  42295d:	sbb    eax,0xe79c4b83
  422962:	sub    DWORD PTR [ebx+0x4b831247],ecx
  422968:	or     bh,ah
  42296a:	and    DWORD PTR [edx-0x3f7be5c9],ecx
  422970:	popf   
  422971:	xchg   esi,eax
  422972:	pop    es
  422973:	repz fsub st(3),st
  422976:	ltr    WORD PTR [ebp-0x63c3f48a]
  42297d:	outs   dx,BYTE PTR ds:[esi]
  42297e:	inc    esp
  42297f:	repz fsub st(3),st
  422982:	pop    ds
  422983:	add    BYTE PTR [ebp+0x5e873c6f],bl
  422989:	xrelease xchg BYTE PTR [edi-0x6f],al
  42298d:	jo     0x4229a1
  42298f:	jg     0x422948
  422991:	fbstp  TBYTE PTR [ebx+0x21]
  422994:	push   ds
  422995:	rcr    BYTE PTR [eax],cl
  422997:	jb     0x422a0d
  422999:	push   0xd64f4be
  42299e:	adc    al,0x75
  4229a0:	mov    esp,0xdb8d541a
  4229a5:	xlat   BYTE PTR ds:[ebx]
  4229a6:	dec    edi
  4229a7:	das    
  4229a8:	mov    dl,BYTE PTR [ebx-0x6b7c503b]
  4229ae:	xchg   DWORD PTR [ebp-0x5b],edi
  4229b1:	les    di,DWORD PTR [eax-0x60]
  4229b5:	mov    WORD PTR [edx+0x4],es
  4229b8:	popf   
  4229b9:	jmp    0x4229ba
  4229bb:	jg     0x4229a6
  4229bd:	rol    ch,1
  4229bf:	inc    ebp
  4229c0:	add    BYTE PTR [eax],al
  4229c2:	pop    edx
  4229c3:	jmp    0xfff8:0x1e840286
  4229ca:	cmp    ch,BYTE PTR [eax-0x7f]
  4229cd:	hlt    
  4229ce:	xchg   ecx,eax
  4229cf:	in     al,0x7e
  4229d1:	add    BYTE PTR [edx],bh
  4229d3:	dec    esp
  4229d4:	sti    
  4229d5:	xor    BYTE PTR [eax-0x5d8afbbc],0xf8
  4229dc:	mov    edi,0x793bd839
  4229e1:	dec    edi
  4229e3:	sub    eax,DWORD PTR [ebx+ebx*2+0x73]
  4229e7:	and    bh,BYTE PTR [esi-0x28fd62f4]
  4229ed:	ret    
  4229ee:	cli    
  4229ef:	jmp    0x4229a5
  4229f1:	mov    cl,BYTE PTR [ecx]
  4229f3:	add    DWORD PTR ds:0xe902985c,0x52
  4229fa:	dec    edi
  4229fb:	dec    ebp
  4229fc:	outs   dx,BYTE PTR ds:[esi]
  4229fd:	adc    DWORD PTR [ebp+0x2043a289],0x83067cc2
  422a07:	ret    0x7d00
  422a0a:	mov    eax,ds:0x9d6be902
  422a0f:	add    ch,cl
  422a11:	adc    eax,DWORD PTR [ebp-0x10]
  422a14:	cmp    al,0x4
  422a16:	popf   
  422a17:	push   edx
  422a18:	pop    esp
  422a19:	pusha  
  422a1a:	mov    ecx,0x9dd3f4e9
  422a1f:	add    dh,BYTE PTR [eax+0x48]
  422a22:	pop    ecx
  422a23:	jle    0x4229ce
  422a25:	ja     0x422a27
  422a27:	add    BYTE PTR [esi-0x80],dh
  422a2a:	sub    al,0xf0
  422a2c:	xchg   ebp,eax
  422a2d:	mov    DWORD PTR [esp+ebp*8],ebp
  422a30:	xchg   esi,eax
  422a31:	sub    BYTE PTR [eax],0x8
  422a34:	popf   
  422a35:	add    bh,BYTE PTR [esi+0x2]
  422a38:	sbb    bh,BYTE PTR [esi]
  422a3a:	or     DWORD PTR [edx+0xb807f95],0x7b88096
  422a44:	popf   
  422a45:	add    ch,BYTE PTR [esi+0x62044150]
  422a4b:	sub    esp,DWORD PTR [ecx+0x5d82e902]
  422a51:	or     edi,DWORD PTR [ecx+0x43802c8a]
  422a57:	or     edi,DWORD PTR [ebx+0x2203bf22]
  422a5d:	int    0x6e
  422a5f:	ficom  WORD PTR [esi+ebp*2]
  422a62:	dec    ecx
  422a63:	mov    WORD PTR [eax-0x22],fs
  422a66:	add    BYTE PTR [ecx-0x48],al
  422a69:	clc    
  422a6a:	sti    
  422a6b:	cs and al,bl
  422a6e:	or     ebp,DWORD PTR [ebp+0x35]
  422a71:	hlt    
  422a72:	sti    
  422a73:	jmp    0x63269873
  422a78:	enter  0x15c,0x83
  422a7c:	sahf   
  422a7d:	jmp    0x2984:0xf7e30710
  422a84:	stos   DWORD PTR es:[edi],eax
  422a85:	jle    0x422a12
  422a87:	jmp    0x0:0x74fb029e
  422a8e:	ret    0xd27b
  422a91:	push   ebx
  422a92:	lahf   
  422a93:	pop    esp
  422a94:	add    cl,dl
  422a96:	mov    bh,0xf5
  422a98:	sti    
  422a99:	(bad)  
  422a9a:	and    eax,0x26650bc3
  422a9f:	repz sti 
  422aa1:	jmp    0x73269847
  422aa6:	jae    0x422b04
  422aa8:	add    al,0x43
  422aaa:	cdq    
  422aab:	jmp    0xa984:0xf788ace4
  422ab2:	nop
  422ab3:	jle    0x422b14
  422ab5:	jmp    0x7b8d:0x3687029e
  422abc:	inc    ebx
  422abd:	loope  0x422ad6
  422abf:	cmp    eax,0x79446cf4
  422ac4:	pop    es
  422ac5:	sbb    DWORD PTR [eax+0xd],ebx
  422ac8:	js     0x422aa5
  422aca:	fiadd  WORD PTR [edx]
  422acc:	xchg   DWORD PTR [ecx+0x1e7acb22],edx
  422ad2:	adc    bh,BYTE PTR ds:0x23c4b9d0
  422ad8:	call   0xfc399e93
  422add:	(bad)  
  422ade:	fcmovbe st,st(2)
  422ae0:	jg     0x422ae2
  422ae2:	push   ecx
  422ae3:	ret    
  422ae4:	add    BYTE PTR [ecx-0x74ae44b7],cl
  422aea:	mov    esp,0xf4c045bc
  422aef:	xchg   DWORD PTR [ebp-0x38],eax
  422af2:	add    BYTE PTR [eax],al
  422af4:	lods   al,BYTE PTR ds:[esi]
  422af5:	out    dx,eax
  422af6:	cmp    edi,edi
  422af8:	fwait
  422af9:	mov    al,al
  422afb:	jno    0xf4422c03
  422b01:	xor    DWORD PTR [ebp-0x40],0xffffff8c
  422b05:	mov    ebx,0x89dbff3b
  422b0a:	jne    0x422aec
  422b0c:	aas    
  422b0d:	push   ebx
  422b0e:	in     al,0xc6
  422b10:	add    edx,edi
  422b12:	add    dh,al
  422b14:	jno    0x422b07
  422b16:	add    BYTE PTR [ecx-0x18405af],cl
  422b1c:	mov    eax,0xb6257a05
  422b21:	(bad)  
  422b22:	dec    DWORD PTR [edx+0xcf881b7]
  422b28:	mov    eax,DWORD PTR [edx+edx*1+0x33068402]
  422b2f:	inc    ebp
  422b30:	push   eax
  422b31:	(bad)  
  422b32:	jle    0x422b45
  422b34:	jbe    0x422b3c
  422b36:	add    BYTE PTR [ebx-0x3e110551],cl
  422b3c:	test   BYTE PTR [esi],al
  422b3e:	add    BYTE PTR [eax],ah
  422b40:	dec    ebx
  422b41:	mov    dh,cl
  422b43:	add    DWORD PTR [esi+eax*1+0x7b],esi
  422b47:	clc    
  422b48:	dec    eax
  422b49:	(bad)  
  422b4a:	jge    0x422b34
  422b4c:	inc    ebp
  422b4d:	push   es
  422b4e:	add    dh,dh
  422b50:	cmc    
  422b51:	add    al,0x7
  422b53:	test   bl,bl
  422b55:	add    al,0x0
  422b57:	add    BYTE PTR [eax],al
  422b59:	add    BYTE PTR [esi-0x627be7ba],ch
  422b5f:	sbb    esi,DWORD PTR [edx+0x8]
  422b62:	xor    bl,BYTE PTR [ebx]
  422b64:	dec    DWORD PTR [edi]
  422b66:	popf   
  422b67:	(bad)  [edx+0x14]
  422b6a:	(bad)  
  422b6c:	or     al,0x85
  422b6e:	in     eax,0xda
  422b70:	(bad)  
  422b71:	call   DWORD PTR [edx]
  422b73:	sbb    edi,edi
  422b75:	pop    ds
  422b76:	popf   
  422b77:	fisttp DWORD PTR [esp+eax*4]
  422b7a:	cmp    ebx,ebx
  422b7c:	(bad)  
  422b7d:	call   FWORD PTR ds:0x9a00f097
  422b83:	data16 cmc 
  422b85:	add    BYTE PTR [ebp+0x7bff69db],bl
  422b8b:	pop    esi
  422b8c:	mov    dl,0xaa
  422b8e:	xlat   BYTE PTR ds:[ebx]
  422b8f:	clc    
  422b90:	imul   eax
  422b92:	test   al,0x12
  422b94:	cld    
  422b95:	sti    
  422b96:	push   ss
  422b97:	int3   
  422b98:	in     al,dx
  422b99:	xchg   ebx,eax
  422b9a:	dec    ecx
  422b9b:	(bad)  
  422b9d:	cmp    ebx,DWORD PTR [ecx-0x6099fcb4]
  422ba3:	and    BYTE PTR [ecx-0x25307e],cl
  422ba9:	inc    DWORD PTR [edi]
  422bab:	fmul   DWORD PTR [edi+0x66]
  422bae:	popf   
  422baf:	data16 mov cl,0x68
  422bb2:	mov    ah,BYTE PTR [eax-0x57aa8009]
  422bb8:	in     al,dx
  422bb9:	outs   dx,DWORD PTR ds:[esi]
  422bba:	push   0x85f791
  422bbf:	add    BYTE PTR [ebp-0x18],bl
  422bc2:	mov    DWORD PTR [esi+0x7effdb9d],edx
  422bc8:	(bad)  
  422bc9:	fnsave [eax+0x52]
  422bcc:	sub    BYTE PTR [esi],dh
  422bce:	inc    esp
  422bcf:	sti    
  422bd0:	push   edx
  422bd1:	js     0x422b8f
  422bd3:	mov    bl,0x9d
  422bd5:	(bad)  
  422bd7:	out    0xd4,eax
  422bd9:	add    cl,BYTE PTR [edi-0x5]
  422bdc:	ss jg  0x422c43
  422bdf:	ins    BYTE PTR es:[edi],dx
  422be0:	ss icebp 
  422be2:	push   edx
  422be3:	push   esp
  422be4:	and    cl,al
  422be6:	mov    ecx,0x4255b9ee
  422beb:	jno    0x422bfe
  422bed:	pop    eax
  422bee:	cmp    dl,BYTE PTR [ecx]
  422bf0:	xchg   ebp,eax
  422bf1:	adc    al,0xa9
  422bf3:	add    ebp,DWORD PTR [ebp+0x5c]
  422bf6:	loope  0x422c53
  422bf8:	sbb    al,al
  422bfa:	adc    DWORD PTR [edi-0x7],ebp
  422bfd:	lock sbb al,BYTE PTR [eax-0x77098923]
  422c04:	pusha  
  422c05:	ret    0x6901
  422c08:	mov    ds:0xcd8f02f1,al
  422c0d:	xchg   bl,dh
  422c0f:	jo     0x422c06
  422c11:	(bad)  
  422c13:	stc    
  422c14:	(bad)  
  422c15:	lock pop esp
  422c17:	jno    0x422bf6
  422c19:	fstp   DWORD PTR [ebx-0x2f0f49bb]
  422c1f:	add    al,0xb3
  422c21:	lock jmp 0xa6422cad
  422c27:	add    al,0x54
  422c29:	pop    ds
  422c2a:	adc    BYTE PTR [edi-0xf690673],dh
  422c30:	cmp    DWORD PTR [ebx-0x1416fd63],0xfaaada77
  422c3a:	adc    BYTE PTR [esi-0xf8904ef],al
  422c40:	cmp    DWORD PTR [edi-0x77b923a1],ecx
  422c46:	and    BYTE PTR [ebx-0x76],bl
  422c49:	cli    
  422c4a:	push   bx
  422c4c:	xor    BYTE PTR [eax-0x5b],0x7d
  422c50:	fs xchg edi,eax
  422c52:	push   ecx
  422c53:	lock add BYTE PTR [esi-0x12],dh
  422c57:	fiadd  DWORD PTR ds:0x85029e62
  422c5d:	sub    DWORD PTR [edi+0x5e65c095],esp
  422c63:	jbe    0x422c6e
  422c65:	sbb    ah,BYTE PTR [ecx+0x65]
  422c68:	mov    DWORD PTR [edx+ecx*1-0x11],esp
  422c6c:	sti    
  422c6d:	inc    esi
  422c6e:	pop    ecx
  422c6f:	fld    QWORD PTR [ecx]
  422c71:	jmp    0x87c7aa14
  422c76:	or     ah,ch
  422c78:	sti    
  422c79:	daa    
  422c7a:	sahf   
  422c7b:	add    al,BYTE PTR [eax-0x50]
  422c7e:	ins    DWORD PTR es:[edi],dx
  422c7f:	jmp    0x22dd146
  422c84:	xchg   edx,ebp
  422c86:	and    ebx,ebx
  422c88:	or     al,0xb9
  422c8a:	add    BYTE PTR [eax],al
  422c8c:	adc    eax,0x25990c30
  422c91:	outs   dx,BYTE PTR ds:[esi]
  422c92:	nop
  422c93:	mov    edx,0x3997dade
  422c98:	(bad)  
  422c99:	jmp    0x422c1f
  422c9b:	sub    DWORD PTR [edi-0x61177b7a],edx
  422ca1:	add    ch,BYTE PTR [edi]
  422ca3:	ficomp WORD PTR [edx]
  422ca5:	jle    0x422c9b
  422ca7:	xlat   BYTE PTR ds:[ebx]
  422ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca9:	jmp    0x422cda
  422cab:	xlat   BYTE PTR ds:[ebx]
  422cac:	adc    eax,DWORD PTR [edi+0x35]
  422caf:	pop    ecx
  422cb0:	mov    edx,ebx
  422cb2:	int    0xbf
  422cb4:	xchg   esp,eax
  422cb5:	inc    esp
  422cb6:	jg     0x422c60
  422cb8:	popf   
  422cb9:	outs   dx,DWORD PTR ds:[esi]
  422cba:	cli    
  422cbb:	(bad)  [eax]
  422cbd:	(bad)  [edi]
  422cbf:	test   eax,0x6c0179ff
  422cc4:	fcmove st,st(6)
  422cc6:	push   ecx
  422cc7:	add    ebx,DWORD PTR [esi+0x55c8d53]
  422ccd:	out    dx,al
  422cce:	sti    
  422ccf:	add    BYTE PTR [ebx],ah
  422cd1:	scas   al,BYTE PTR es:[edi]
  422cd2:	add    DWORD PTR [eax],eax
  422cd4:	inc    esp
  422cd5:	adc    DWORD PTR [ecx+0x50],0xfffffffb
  422cd9:	fadd   DWORD PTR cs:[esp+esi*1]
  422cdd:	add    eax,DWORD PTR [eax]
  422cdf:	mov    DWORD PTR [ecx],ecx
  422ce1:	xlat   BYTE PTR ds:[ebx]
  422ce2:	jnp    0x422cb2
  422ce4:	shr    ecx,cl
  422ce6:	adc    eax,0x432470
  422ceb:	test   DWORD PTR [edi+ebx*2+0x42],esi
  422cef:	lea    eax,[eax]
  422cf1:	add    BYTE PTR [ecx-0x35],cl
  422cf4:	push   eax
  422cf5:	lea    edi,[ecx]
  422cf7:	stos   DWORD PTR es:[edi],eax
  422cf8:	push   eax
  422cf9:	push   edi
  422cfa:	sub    ecx,DWORD PTR [eax-0x164d0b7b]
  422d00:	not    DWORD PTR [eax-0x3d]
  422d03:	pop    edi
  422d04:	fdiv   st(7),st
  422d06:	jmp    0xf4823d71
  422d0b:	jmp    0xc6bc0985
  422d10:	pop    es
  422d11:	inc    esp
  422d12:	pop    ecx
  422d13:	retf   
  422d14:	not    DWORD PTR ds:0x401348
  422d1a:	aaa    
  422d1b:	in     al,dx
  422d1c:	add    al,0x75
  422d1e:	shr    BYTE PTR [ebx],1
  422d20:	jae    0x422d2a
  422d22:	mov    bl,0x6e
  422d24:	add    DWORD PTR [ecx],eax
  422d26:	les    eax,FWORD PTR [edx]
  422d28:	call   0xf82b4f1d
  422d2d:	mov    edi,DWORD PTR [edi-0x2]
  422d30:	cli    
  422d31:	dec    esp
  422d32:	sbb    al,0x2f
  422d34:	enter  0xfb0f,0xdb
  422d38:	add    BYTE PTR [eax],al
  422d3a:	je     0x422dbb
  422d3c:	jge    0x422d46
  422d3e:	call   FWORD PTR [eax+eiz*8-0x3a]
  422d42:	leave  
  422d43:	out    dx,eax
  422d44:	add    DWORD PTR [ebx-0xbbae679],ecx
  422d4a:	popf   
  422d4b:	fcom   st(7)
  422d4d:	jg     0x422d2f
  422d4f:	xchg   edi,eax
  422d50:	add    ecx,DWORD PTR [ebx]
  422d52:	push   ds
  422d53:	mov    eax,ds:0xfbf2
  422d58:	push   edx
  422d59:	jno    0x422d95
  422d5b:	call   0x28159fa
  422d60:	mov    ch,0xdb
  422d62:	(bad)  
  422d63:	(bad)  
  422d64:	(bad)  [ebx+0x5edd73f8]
  422d6a:	push   edx
  422d6b:	aam    0x35
  422d6d:	das    
  422d6e:	ret    
  422d6f:	add    BYTE PTR [ebp+0x6889c760],bl
  422d75:	cmp    edi,DWORD PTR [edx-0x37]
  422d78:	mov    ds:0x9d00ae67,al
  422d7d:	fisttp DWORD PTR [ebp+ebx*2-0x76401717]
  422d84:	pusha  
  422d85:	paddsb mm2,QWORD PTR ds:0xf684eb26
  422d8c:	mov    ds:0xce371989,eax
  422d91:	xchg   esp,eax
  422d92:	sbb    eax,0xfedf5cf2
  422d97:	je     0x422d3f
  422d99:	rcr    ch,1
  422d9b:	call   esp
  422d9d:	pop    eax
  422d9e:	cld    
  422d9f:	add    cl,BYTE PTR [esi+0x5]
  422da2:	in     al,dx
  422da3:	or     DWORD PTR [eax],ebp
  422da5:	sbb    edi,edx
  422da7:	mov    BYTE PTR [eax-0x29],bl
  422daa:	mov    DWORD PTR [esi],edi
  422dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dad:	aam    0x71
  422daf:	hlt    
  422db0:	outs   dx,BYTE PTR ds:[esi]
  422db1:	mov    ds:0xf4964d3c,al
  422db6:	nop
  422db7:	shl    DWORD PTR [esi+ebx*1],0xa4
  422dbb:	call   0xa66c2dc0
  422dc0:	repnz sti 
  422dc2:	jmp    0x422d60
  422dc4:	jno    0x422daa
  422dc6:	and    al,0x2
  422dc8:	sub    al,0xa0
  422dca:	test   DWORD PTR [ebx+0x7966f678],ecx
  422dd0:	and    al,0xe4
  422dd2:	adc    al,0x3f
  422dd4:	pop    ecx
  422dd5:	mov    ebp,eax
  422dd7:	(bad)  
  422dd8:	mov    dh,0xda
  422dda:	and    al,0x47
  422ddc:	push   ecx
  422ddd:	(bad)  
  422dde:	rcr    BYTE PTR [esi+0x2b094960],1
  422de4:	or     al,0xa0
  422de6:	mov    al,0x7
  422de8:	and    BYTE PTR [ecx+0x29],bl
  422deb:	ja     0x422dd2
  422ded:	cmp    ch,dl
  422def:	jbe    0x422dd0
  422df1:	mov    BYTE PTR [eax-0x52f9be5e],ch
  422df7:	add    ch,cl
  422df9:	jmp    0x3b90:0xef9c2bce
  422e00:	pop    esi
  422e01:	inc    edi
  422e02:	rol    DWORD PTR [ebx-0x42],0xcc
  422e06:	xchg   ebp,eax
  422e07:	jg     0x422da3
  422e09:	cmp    eax,DWORD PTR ds:0xe6f6791b
  422e0f:	test   DWORD PTR [ecx],ebp
  422e11:	jo     0x422e8b
  422e13:	jns    0x422daf
  422e15:	aaa    
  422e16:	and    al,bl
  422e18:	mov    es,ebx
  422e1a:	mov    ch,0x1
  422e1c:	jecxz  0x422e62
  422e1e:	adc    al,0x3d
  422e20:	mov    ch,0x69
  422e22:	add    BYTE PTR [eax],al
  422e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e25:	jg     0x422dc3
  422e27:	mov    ds:0xcd1524c,eax
  422e2c:	or     al,0xec
  422e2e:	(bad)  
  422e30:	stos   BYTE PTR es:[edi],al
  422e31:	ja     0x422e87
  422e33:	or     al,0x1a
  422e35:	inc    edi
  422e36:	ror    DWORD PTR [edx-0x17d3e663],0x9c
  422e3d:	inc    ebp
  422e3e:	rol    DWORD PTR [edx-0x1eff20f8],1
  422e44:	fwait
  422e45:	imul   eax,DWORD PTR [edi],0xffffffad
  422e48:	jae    0x422e32
  422e4a:	out    0x31,eax
  422e4c:	push   0x70
  422e4e:	cmp    BYTE PTR [edx-0x55],dh
  422e51:	cs call 0x44c9fc
  422e57:	add    edi,DWORD PTR [ecx-0x11b6ba83]
  422e5d:	jns    0x422eba
  422e5f:	mov    ebp,0x77910136
  422e64:	dec    ebx
  422e65:	jp     0x422eaa
  422e67:	mov    cl,0x77
  422e69:	stos   DWORD PTR es:[edi],eax
  422e6a:	je     0x422e58
  422e6c:	sub    eax,DWORD PTR [eax+0x3c]
  422e6f:	push   edx
  422e70:	jg     0x422eef
  422e72:	jne    0x422dfd
  422e74:	ss xchg edx,eax
  422e76:	or     ebp,ecx
  422e78:	sahf   
  422e79:	jecxz  0x422e94
  422e7b:	je     0x422e0a
  422e7d:	mov    ds:0x2a366e8,al
  422e82:	add    BYTE PTR [esi],dh
  422e84:	jae    0x422eb0
  422e86:	xchg   DWORD PTR [esi-0x254e0000],esp
  422e8c:	xchg   ebp,eax
  422e8d:	neg    BYTE PTR [esi-0x594176fe]
  422e93:	jns    0x422ef0
  422e95:	aad    0xeb
  422e97:	jne    0x422e55
  422e99:	add    DWORD PTR [ecx-0x6e],eax
  422e9c:	cli    
  422e9d:	push   es
  422e9e:	pop    edx
  422ea0:	aaa    
  422ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea2:	xchg   edx,eax
  422ea3:	adc    eax,eax
  422ea5:	(bad)  
  422ea6:	out    0x47,eax
  422ea8:	pop    edx
  422ea9:	xchg   edx,eax
  422eaa:	jmp    0x642b335b
  422eaf:	sub    esp,0x6a
  422eb2:	mov    ch,0x4a
  422eb4:	dec    edi
  422eb5:	aas    
  422eb6:	push   eax
  422eb7:	cmp    DWORD PTR [ebp-0x1f],0x25
  422ebb:	aas    
  422ebc:	inc    eax
  422ebd:	add    BYTE PTR [ecx],al
  422ebf:	mov    DWORD PTR [edi],0xb684
  422ec5:	add    bh,dh
  422ec7:	jne    0x422ef1
  422ec9:	add    BYTE PTR [ebx+0x6b],bl
  422ecc:	cmp    BYTE PTR [edx],al
  422ece:	test   bh,bh
  422ed0:	add    BYTE PTR [si-0x1],dh
  422ed4:	punpckhbw mm0,QWORD PTR [eax]
  422ed7:	cmp    eax,DWORD PTR [eax]
  422ed9:	add    BYTE PTR [ebx+eax*4+0x5a2cd85d],dl
  422ee0:	ret    
  422ee1:	add    BYTE PTR [edx+eax*4],dh
  422ee4:	gs aam 0x34
  422ee7:	jp     0x422ed9
  422ee9:	mov    eax,DWORD PTR [ecx+0x8b50ce]
  422eef:	add    BYTE PTR [edx-0x54],ch
  422ef2:	inc    ebp
  422ef3:	enter  0x7834,0x45
  422ef7:	int3   
  422ef8:	mov    ebp,0x2e8d05b
  422efd:	aas    
  422efe:	idiv   edi
  422f00:	add    dh,0x7
  422f03:	test   BYTE PTR [esi-0x1],bl
  422f06:	(bad)  
  422f07:	inc    DWORD PTR [edi]
  422f09:	mov    edi,0x630f685
  422f0e:	cmp    BYTE PTR [esi],0x4
  422f11:	pop    esp
  422f12:	(bad)  
  422f13:	aas    
  422f14:	je     0x422f8a
  422f16:	add    DWORD PTR [eax],eax
  422f18:	add    BYTE PTR [edx],al
  422f1a:	ds jmp 0x422ed2
  422f1d:	or     eax,DWORD PTR [ecx]
  422f1f:	add    ah,al
  422f21:	jle    0x422f9c
  422f23:	add    eax,0xfec8820c
  422f28:	hlt    
  422f29:	add    eax,0xfec5d385
  422f2e:	inc    ebp
  422f30:	sub    ecx,0x8384eb00
  422f36:	inc    ebp
  422f37:	enter  0xc19d,0x4e
  422f3b:	inc    eax
  422f3c:	call   0xbf57:0x794586b9
  422f43:	or     esp,DWORD PTR [ecx]
  422f45:	ja     0x422f45
  422f47:	call   FWORD PTR [ebp+0x260c6cb0]
  422f4d:	out    dx,eax
  422f4e:	ja     0x422f5e
  422f50:	fstp   st(3)
  422f52:	hlt    
  422f53:	jae    0x422f55
  422f55:	add    BYTE PTR [ebp-0x322d0ad4],dl
  422f5b:	int3   
  422f5c:	mov    edi,0x14846687
  422f61:	stc    
  422f62:	push   edx
  422f63:	cmp    DWORD PTR [ebx-0x40],0x4582ccd0
  422f6a:	push   ebp
  422f6b:	test   BYTE PTR [esi],bl
  422f6d:	inc    eax
  422f6e:	cmp    bl,BYTE PTR [ecx-0x78]
  422f71:	fcomp  DWORD PTR [eax]
  422f73:	inc    ebp
  422f74:	push   0xffffffbe
  422f76:	xor    al,0xc7
  422f78:	(bad)  
  422f79:	call   FWORD PTR [ebp-0x6099e23b]
  422f7f:	inc    esi
  422f80:	cmp    dh,al
  422f82:	ins    DWORD PTR es:[edi],dx
  422f83:	inc    eax
  422f84:	ins    BYTE PTR es:[edi],dx
  422f85:	and    al,0x16
  422f87:	mov    eax,ds:0x1f1be827
  422f8c:	cmc    
  422f8d:	sti    
  422f8e:	and    al,0x9f
  422f90:	fistp  QWORD PTR [edi-0xb]
  422f93:	and    BYTE PTR [esp+eax*4],al
  422f96:	dec    ebx
  422f97:	(bad)  
  422f99:	push   DWORD PTR [edi-0x2c]
  422f9c:	imul   edi,esi,0x50d79f29
  422fa2:	shl    BYTE PTR [esi-0x25],cl
  422fa5:	sti    
  422fa6:	repz call 0x76f81419
  422fac:	ret    0xbafa
  422faf:	bound  edi,QWORD PTR [edx]
  422fb1:	in     al,0x1e
  422fb3:	add    esp,ecx
  422fb5:	repz xchg esi,eax
  422fb7:	jle    0x422fd0
  422fb9:	add    eax,0x29d0000
  422fbe:	pop    esi
  422fbf:	dec    ebx
  422fc0:	lds    esi,FWORD PTR ds:0x6f522fae
  422fc6:	in     al,dx
  422fc7:	jl     0x422fb1
  422fc9:	out    dx,al
  422fca:	into   
  422fcb:	cld    
  422fcc:	jp     0x422fcc
  422fce:	popa   
  422fcf:	bnd jbe 0x42304d
  422fd2:	and    al,0xf8
  422fd4:	ret    0x70c2
  422fd7:	push   ecx
  422fd8:	jne    0x423005
  422fda:	and    al,0xf8
  422fdc:	xchg   esi,eax
  422fdd:	jle    0x422fc5
  422fdf:	add    al,0x9d
  422fe1:	add    ah,BYTE PTR [eax+0x49]
  422fe4:	inc    ecx
  422fe5:	sub    ebp,DWORD PTR [esp+eiz*8]
  422fe8:	xchg   esi,eax
  422fe9:	sub    BYTE PTR [ebp+0x5e029d04],0x79
  422ff0:	dec    ecx
  422ff1:	jge    0x423017
  422ff3:	hlt    
  422ff4:	mov    dl,0x26
  422ff6:	cdq    
  422ff7:	add    al,0x96
  422ff9:	jle    0x422f87
  422ffb:	add    al,0x9d
  422ffd:	add    bl,BYTE PTR [esi+0x8]
  423000:	dec    ebp
  423001:	jl     0x422fe4
  423003:	xchg   esp,esp
  423005:	clc    
  423006:	ins    BYTE PTR es:[edi],dx
  423007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423008:	popf   
  423009:	add    ch,cl
  42300b:	ss push es
  42300d:	fucom  st(1)
  42300f:	xchg   esp,esp
  423011:	ins    DWORD PTR es:[edi],dx
  423012:	loopne 0x42305e
  423014:	sbb    esi,esi
  423016:	loopne 0x422f9b
  423018:	in     al,0x26
  42301a:	xchg   esp,eax
  42301b:	div    BYTE PTR [edx+0x4960c2]
  423021:	add    cl,bh
  423023:	sub    ah,BYTE PTR [edi+eiz*8+0x416e554f]
  42302a:	in     eax,0x76
  42302c:	in     eax,0x84
  42302e:	inc    edx
  42302f:	sub    al,BYTE PTR [eax]
  423031:	jmp    0xe9c95668
  423036:	push   ds
  423037:	sub    al,BYTE PTR [eax]
  423039:	pop    ebp
  42303a:	or     DWORD PTR fs:[ebp-0x27],0x39b10623
  423042:	pop    es
  423043:	les    eax,FWORD PTR [ebp-0x7f]
  423046:	iret   
  423047:	and    BYTE PTR [ecx+0x15ec3d2c],cl
  42304d:	inc    ecx
  42304e:	stos   DWORD PTR es:[edi],eax
  42304f:	inc    edx
  423050:	add    BYTE PTR [ebp+ebx*8-0x66],ah
  423054:	mov    DWORD PTR [ecx+ebp*1],esp
  423057:	jp     0x4230b6
  423059:	pop    ebp
  42305a:	jmp    0xd5e8e8c4
  42305f:	mov    esi,0x29ee8ff
  423064:	call   0xfc2fa577
  423069:	jb     0x423058
  42306b:	fiadd  DWORD PTR [ecx+ebp*4+0x2c872fc5]
  423072:	dec    ebp
  423073:	inc    ebx
  423074:	mov    DWORD PTR [ecx*2-0x4fb2bad0],esp
  42307b:	xchg   ebp,eax
  42307c:	test   DWORD PTR [edx-0x56],eax
  42307f:	cli    
  423080:	xchg   BYTE PTR [edx+edx*1+0xea04c5],ch
  423087:	add    ah,al
  423089:	daa    
  42308a:	xchg   DWORD PTR [esi+ecx*1+0xf7934ec],ebp
  423091:	push   cs
  423092:	js     0x42306f
  423094:	pop    esi
  423095:	add    al,BYTE PTR [edi-0x4ad1164]
  42309b:	fnsave [ecx]
  42309d:	or     BYTE PTR [ebp+0x15],0x9b
  4230a1:	mov    edi,0x7d010151
  4230a6:	cli    
  4230a7:	push   cs
  4230a8:	fwait
  4230a9:	retf   0x89
  4230ac:	add    esp,ecx
  4230ae:	cmp    DWORD PTR [ebp-0x34],0xfffffff4
  4230b2:	inc    ebp
  4230b3:	in     al,dx
  4230b4:	aas    
  4230b5:	cmp    ch,ah
  4230b7:	cmp    edi,ecx
  4230b9:	jecxz  0x4230c2
  4230bb:	or     BYTE PTR [eax+0x7ffff7f1],0x51
  4230c2:	sub    BYTE PTR [ebp+0x7e],dh
  4230c5:	bnd jne 0x4230bc
  4230c8:	pop    esp
  4230c9:	inc    ebx
  4230ca:	xchg   dh,bh
  4230cc:	arpl   bp,ax
  4230ce:	sbb    al,0x85
  4230d0:	aas    
  4230d1:	outs   dx,DWORD PTR ds:[esi]
  4230d2:	add    edi,edi
  4230d4:	mov    ecx,0xd233e8ea
  4230d9:	hlt    
  4230da:	mul    DWORD PTR [ecx]
  4230dc:	loope  0x4230c8
  4230de:	add    DWORD PTR [ebp+0x8],0x6b
  4230e2:	aas    
  4230e3:	and    al,0xbd
  4230e5:	push   ecx
  4230e6:	sub    dh,al
  4230e8:	jns    0x4230bf
  4230ea:	add    DWORD PTR [ebx-0x25870000],ecx
  4230f0:	cmp    DWORD PTR [ebp-0x4],0xffffffc5
  4230f4:	xor    al,0x8e
  4230f6:	mov    dl,0xf1
  4230f8:	add    DWORD PTR [ebp+0x24],0x65
  4230fc:	jge    0x4230ee
  4230fe:	int3   
  4230ff:	or     eax,DWORD PTR [esi+0x7567c3fe]
  423105:	enter  0xc75c,0x3d
  423109:	jmp    DWORD PTR [ebx+0x68]
  42310c:	inc    ebp
  42310d:	sti    
  42310e:	outs   dx,DWORD PTR ds:[esi]
  42310f:	call   0xc70ea6a0
  423114:	loopne 0x423153
  423116:	mov    bl,0xf1
  423118:	sub    al,al
  42311a:	and    edx,DWORD PTR [ecx+0x53]
  42311d:	leave  
  42311e:	mov    dh,0xfa
  423120:	call   DWORD PTR [edi+ebp*2-0x1e]
  423124:	sub    esp,0xfff7b99d
  42312a:	rcr    BYTE PTR [ebx+0x63],cl
  42312d:	clc    
  42312e:	popf   
  42312f:	mov    WORD PTR [ecx+0x53],ds
  423132:	xor    eax,0x9d3fa6fd
  423137:	pop    ss
  423138:	inc    ebx
  423139:	repz mov dl,0xd7
  42313c:	adc    ch,ah
  42313e:	(bad)  
  42313f:	sbb    DWORD PTR [ecx+eiz*4],eax
  423142:	popf   
  423143:	mov    ds:0x7260044,eax
  423148:	lock mov ecx,0x4576dbde
  42314e:	lea    ebx,[ecx-0x19]
  423151:	or     al,0x0
  423153:	add    BYTE PTR [esi-0x11],dh
  423156:	jl     0x42315a
  423158:	push   ds
  423159:	mov    ah,0xfb
  42315b:	ins    DWORD PTR es:[edi],dx
  42315c:	scas   al,BYTE PTR es:[edi]
  42315d:	lock inc edx
  42315f:	lock repnz int 0xf9
  423163:	inc    edx
  423164:	cdq    
  423165:	fidiv  DWORD PTR [ebx+0x18]
  423168:	es das 
  42316a:	cld    
  42316b:	cli    
  42316c:	into   
  42316d:	(bad)  
  42316e:	jp     0x4231b2
  423170:	cdq    
  423171:	jl     0x4231e7
  423173:	or     BYTE PTR [esi-0x7917b09c],cl
  423179:	aas    
  42317a:	icebp  
  42317b:	sti    
  42317c:	sbb    BYTE PTR [esi+eiz*2+0x16d6165e],bl
  423183:	inc    ebp
  423184:	sub    eax,0x987fefd9
  423189:	dec    ebx
  42318a:	sti    
  42318b:	mov    BYTE PTR [eax+0x16c27443],cl
  423191:	lahf   
  423192:	mul    DWORD PTR [edi-0x7]
  423195:	add    BYTE PTR [eax+eax*1-0x6],0xc6
  42319a:	out    dx,eax
  42319b:	push   cs
  42319c:	pop    ebp
  42319d:	fstp   TBYTE PTR [edi+edi*1+0x5d]
  4231a1:	add    ch,BYTE PTR [ebx+eax*8-0x6a]
  4231a5:	jle    0x4231e7
  4231a7:	add    bl,BYTE PTR [ebp-0x62fc7efe]
  4231ad:	add    bh,cl
  4231af:	pop    ebx
  4231b0:	mov    edx,0x6d03e94f
  4231b5:	ja     0x423153
  4231b7:	mov    edi,0x9cc50000
  4231bc:	and    DWORD PTR [ebx],eax
  4231be:	popf   
  4231bf:	jns    0x42315d
  4231c1:	mov    edi,0x4b15f2a
  4231c6:	adc    al,0x38
  4231c8:	test   eax,0xabba2255
  4231cd:	dec    ecx
  4231ce:	push   ecx
  4231cf:	add    ah,BYTE PTR [eax+0x49]
  4231d2:	popa   
  4231d3:	fisub  DWORD PTR [edi]
  4231d5:	xor    DWORD PTR [esi-0x593b9a1b],eax
  4231db:	jle    0x42322c
  4231dd:	add    eax,0x87c0029d
  4231e2:	pushf  
  4231e3:	add    ch,cl
  4231e5:	pop    ecx
  4231e6:	bound  eax,QWORD PTR [esp+ebp*2-0x47]
  4231ea:	aas    
  4231eb:	in     eax,dx
  4231ec:	xchg   edx,eax
  4231ed:	out    dx,eax
  4231ee:	inc    ebp
  4231ef:	xlat   BYTE PTR ds:[ebx]
  4231f0:	mov    bh,0xef
  4231f2:	inc    esi
  4231f3:	jns    0x42326e
  4231f5:	fdivr  QWORD PTR [esi+0x7903e95c]
  4231fb:	(bad)  
  4231fc:	cmc    
  4231fd:	add    bh,BYTE PTR [ebx+0x1f810a00]
  423203:	shr    al,1
  423205:	add    ebx,DWORD PTR [ebp-0x7cac0aa8]
  42320b:	add    ah,BYTE PTR [ecx+edi*4-0x37]
  42320f:	in     eax,0x4a
  423211:	out    dx,eax
  423212:	mov    bh,BYTE PTR [edx-0x423d23be]
  423218:	cmp    ebp,edi
  42321a:	and    dl,al
  42321c:	add    BYTE PTR [edi+0x657e0000],dh
  423222:	sti    
  423223:	jmp    0x42328a
  423225:	push   es
  423226:	lea    ebx,[ebp+eax*1-0x18]
  42322a:	sti    
  42322b:	push   ds
  42322c:	or     DWORD PTR [ecx-0x25611700],esi
  423232:	sbb    eax,0x8de8ba05
  423237:	ins    BYTE PTR es:[edi],dx
  423238:	test   ecx,ebp
  42323a:	sti    
  42323b:	dec    BYTE PTR [esi+0x7d]
  42323e:	ret    0xd799
  423241:	sbb    edi,DWORD PTR [edi-0x12]
  423244:	lahf   
  423245:	outs   dx,DWORD PTR ds:[esi]
  423246:	pop    ss
  423247:	je     0x42322e
  423249:	lods   eax,DWORD PTR ds:[esi]
  42324a:	std    
  42324b:	fimul  WORD PTR [ebx-0x61164755]
  423251:	add    ch,al
  423253:	int    0x7f
  423255:	call   0x2f57a755
  42325a:	sti    
  42325b:	mov    esi,0xaf87538b
  423260:	push   edi
  423261:	(bad)  
  423262:	lea    esp,[edx+esi*4-0x19]
  423266:	sti    
  423267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423268:	into   
  423269:	out    0x75,eax
  42326b:	icebp  
  42326c:	sbb    eax,0x4393dc7e
  423271:	call   0x7df1b3c6
  423276:	add    cl,ch
  423278:	adc    eax,0x5e540bc3
  42327d:	jg     0x42323f
  42327f:	cld    
  423280:	xor    DWORD PTR ds:0x7c0,edx
  423286:	test   al,0x7d
  423288:	fsub   QWORD PTR [ebx+0x33]
  42328b:	call   0x2e38249
  423290:	add    BYTE PTR [ebp+eiz*1-0x1f],ah
  423294:	repz dec esi
  423296:	sti    
  423297:	rol    BYTE PTR [eax],0x0
  42329a:	hlt    
  42329b:	aas    
  42329c:	dec    ecx
  42329d:	jne    0x4232fc
  42329f:	push   0xe77fe845
  4232a4:	jp     0x42328f
  4232a6:	enter  0xc080,0xc
  4232aa:	and    eax,0x1c7d8d50
  4232af:	xor    eax,eax
  4232b1:	call   0x38bc14
  4232b6:	inc    eax
  4232b7:	mov    edi,0x82494274
  4232bc:	dec    esp
  4232bd:	(bad)  
  4232be:	mov    ebx,0x3ef62bd5
  4232c3:	cmp    esi,DWORD PTR ds:0xbff29c98
  4232c9:	(bad)  
  4232ca:	mov    ebx,0x80c17b3c
  4232cf:	xor    dh,0x10
  4232d2:	test   ah,0x2b
  4232d5:	shl    dl,0x67
  4232d8:	add    eax,ebp
  4232da:	rol    DWORD PTR [esi+0x3bedfff6],cl
  4232e0:	lock push 0xffffff80
  4232e3:	fs inc ebp
  4232e5:	lock test BYTE PTR [eax+0x4],cl
  4232e9:	lea    eax,[eax]
  4232eb:	add    cl,dh
  4232ed:	inc    edx
  4232ee:	idiv   bh
  4232f0:	cmp    ecx,DWORD PTR [esi-0x73]
  4232f3:	test   DWORD PTR [eax],ecx
  4232f5:	fdiv   st,st(7)
  4232f7:	inc    DWORD PTR [esi+eax*8-0xcb8a1b]
  4232fe:	out    0x7c,eax
  423300:	mov    cl,0xd5
  423302:	imul   ecx
  423304:	rcl    ah,cl
  423306:	idiv   edi
  423308:	mov    esi,0x40213bfd
  42330d:	repz cmp ebp,DWORD PTR ds:0x403c0af0
  423314:	popf   
  423315:	(bad)  
  423318:	imul   ecx,ebp,0x3
  42331b:	cs out 0x4f,al
  42331e:	std    
  42331f:	scas   al,BYTE PTR es:[edi]
  423320:	mov    eax,ds:0x9faef650
  423325:	inc    eax
  423326:	add    ch,BYTE PTR [edi-0x5101bf62]
  42332c:	pushf  
  42332d:	xchg   esp,eax
  42332e:	js     0x4233a5
  423330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423331:	add    al,0x72
  423333:	or     al,0xd2
  423335:	xor    bh,0x52
  423338:	retf   0x67ed
  42333b:	push   cs
  42333c:	pop    ebp
  42333d:	(bad)  [edi+0x2f]
  423340:	(bad)  [edi-0x43]
  423343:	call   0xfc2f1990
  423348:	and    DWORD PTR [ecx],ebx
  42334a:	js     0x423375
  42334c:	xchg   edx,eax
  42334d:	fwait
  42334e:	sar    BYTE PTR [edi+0x0],0x0
  423352:	test   esp,ebp
  423354:	jae    0x42336e
  423356:	in     eax,0xe8
  423358:	cmp    esi,0xffffff9d
  42335b:	jmp    0x42335c
  42335d:	inc    edi
  42335e:	xchg   edx,eax
  42335f:	outs   dx,DWORD PTR ds:[esi]
  423360:	jp     0x423362
  423362:	popf   
  423363:	jmp    0x42339c
  423365:	je     0x423305
  423367:	and    esi,DWORD PTR [ebx+0x8]
  42336a:	push   ds
  42336b:	(bad)  
  42336c:	jmp    0x42336f
  42336e:	pop    ebx
  42336f:	das    
  423370:	cmc    
  423371:	add    DWORD PTR ds:0xa37501a5,ebx
  423377:	inc    dx
  423379:	mov    esp,0xfb2ba235
  42337e:	inc    edx
  42337f:	push   ebp
  423380:	out    0x85,eax
  423382:	cmp    dl,bh
  423384:	test   DWORD PTR [ebp+0x7cd717a8],ecx
  42338a:	data16 jo 0x423379
  42338d:	xchg   eax,eax
  42338f:	add    dh,cl
  423391:	cmc    
  423392:	pusha  
  423393:	(bad)  
  423395:	cld    
  423396:	sbb    DWORD PTR [ecx],ecx
  423398:	call   0xd6cfd0a0
  42339d:	call   FWORD PTR [ebx]
  42339f:	inc    esi
  4233a0:	icebp  
  4233a1:	jp     0x423403
  4233a3:	or     ah,BYTE PTR [ebp+esi*8+0x74]
  4233a7:	or     eax,0x5a90ec99
  4233ac:	xlat   BYTE PTR ds:[ebx]
  4233ad:	inc    ebx
  4233ae:	popf   
  4233af:	lea    ebx,[ecx]
  4233b1:	xchg   bh,cl
  4233b3:	adc    DWORD PTR [ebx-0x25],ebp
  4233b6:	add    BYTE PTR [eax],al
  4233b8:	popf   
  4233b9:	add    ch,cl
  4233bb:	jle    0x42341d
  4233bd:	mov    dl,0xb9
  4233bf:	pop    ecx
  4233c0:	jae    0x4233ac
  4233c2:	cmp    dh,BYTE PTR [edi]
  4233c4:	mov    dh,0xe1
  4233c6:	outs   dx,BYTE PTR ds:[esi]
  4233c7:	ds int 0x85
  4233ca:	mov    ebx,fs
  4233cc:	popf   
  4233cd:	mov    ebx,DWORD PTR [ebx+ecx*8-0x3d4e72b4]
  4233d4:	loopne 0x42338c
  4233d6:	jmp    0xc2010c57
  4233db:	cmp    eax,0x80cae1d2
  4233e0:	pop    ebp
  4233e1:	adc    DWORD PTR [ecx+ecx*4-0x63],ebp
  4233e5:	add    ch,cl
  4233e7:	js     0x4233d1
  4233e9:	mov    dh,0xc1
  4233eb:	or     DWORD PTR [edx+0x36ddaae1],esi
  4233f1:	add    ch,cl
  4233f3:	add    eax,ebx
  4233f5:	push   ds
  4233f6:	cmp    dl,BYTE PTR [ebx+0x20]
  4233f9:	xchg   DWORD PTR ds:0xffe146eb,esi
  4233ff:	add    ebp,ebp
  423401:	loope  0x4233df
  423403:	das    
  423404:	pop    DWORD PTR [edx-0x17]
  423407:	xchg   BYTE PTR [ecx+0xe],bl
  42340a:	add    BYTE PTR [esp+ebx*1-0x4a],ah
  42340e:	stc    
  42340f:	outs   dx,BYTE PTR ds:[esi]
  423410:	mov    eax,DWORD PTR ss:[ebp-0x422f82b]
  423417:	ins    BYTE PTR es:[edi],dx
  423418:	sbb    al,0x3e
  42341a:	sti    
  42341b:	push   esi
  42341c:	add    BYTE PTR [eax],al
  42341e:	div    BYTE PTR [ecx]
  423420:	jmpw   0x881b
  423424:	or     al,0x70
  423426:	inc    esp
  423427:	ds sti 
  423429:	ds push es
  42342b:	fnsave [edx-0x1f]
  42342e:	fild   WORD PTR [esi-0x2309d190]
  423434:	jmp    edi
  423436:	sahf   
  423437:	add    bh,bl
  423439:	hlt    
  42343a:	idiv   DWORD PTR ds:[edi]
  42343d:	jmp    0xde440e65
  423442:	sbb    eax,0xc606fb13
  423447:	pusha  
  423448:	mov    ebp,0xfbdcc779
  42344d:	jmp    0xee66b6f9
  423452:	mov    bh,0xdc
  423454:	lea    ebp,[edx+ebp*2-0x26]
  423458:	sti    
  423459:	fsubp  st(6),st
  42345b:	jmp    0xfae9:0x2a15127
  423462:	ja     0x423440
  423464:	sti    
  423465:	scas   eax,DWORD PTR es:[edi]
  423466:	fst    st(3)
  423468:	add    al,dl
  42346a:	jo     0x423449
  42346c:	sti    
  42346d:	mov    dh,0xcc
  42346f:	(bad)  [ebp-0x1f]
  423472:	iret   
  423473:	fist   DWORD PTR ds:0x42b321
  423479:	cmp    DWORD PTR [edx+0x66a687c2],ecx
  42347f:	add    esp,esi
  423481:	mov    es,WORD PTR [eax]
  423483:	add    BYTE PTR [edi],dh
  423485:	xchg   eax,eax
  423487:	add    BYTE PTR [ecx],bh
  423489:	stc    
  42348a:	mov    WORD PTR [ebp+0x8],es
  42348d:	mov    esp,0xecb33b24
  423492:	cmp    eax,0xffffffb9
  423495:	in     al,dx
  423496:	jne    0x423471
  423498:	ins    DWORD PTR es:[edi],dx
  423499:	xor    esi,edi
  42349b:	push   DWORD PTR [ebx+0x5a]
  42349e:	jne    0x423474
  4234a0:	pop    esp
  4234a1:	cmp    dh,BYTE PTR [edx]
  4234a3:	call   DWORD PTR [ebx-0x78]
  4234a6:	dec    ebp
  4234a7:	clc    
  4234a8:	add    eax,0xa5207389
  4234ad:	pop    eax
  4234ae:	daa    
  4234af:	push   0xffffffd1
  4234b1:	pop    edx
  4234b2:	mov    ebp,0xf7ecb2bc
  4234b7:	pop    eax
  4234b8:	lods   al,BYTE PTR ds:[esi]
  4234b9:	push   esi
  4234ba:	loope  0x4234bb
  4234bc:	mov    bl,0x60
  4234be:	imul   ebx,DWORD PTR [esi+ebx*1],0x27
  4234c2:	add    edi,0x3f
  4234c5:	cdq    
  4234c6:	call   0xf82b63ef
  4234cb:	test   DWORD PTR [edx+edx*2+0x26fa8a07],eax
  4234d2:	cmp    al,0x3b
  4234d4:	sub    bh,bl
  4234d6:	jg     0x423498
  4234d8:	stc    
  4234d9:	add    bh,BYTE PTR [ebx+0x4d]
  4234dc:	jl     0x4234d4
  4234de:	add    BYTE PTR [ebx-0x60],0x15
  4234e2:	test   DWORD PTR [ecx-0x38cc452f],0x14b80000
  4234ec:	pop    esi
  4234ed:	cmp    DWORD PTR [edx+edx*2+0x16b78b31],ebx
  4234f4:	xor    eax,edi
  4234f6:	test   al,0x0
  4234f8:	pop    esi
  4234f9:	cmp    DWORD PTR [edi+ebp*2],edi
  4234fc:	and    eax,0xb558526a
  423501:	in     al,0x9d
  423503:	jne    0x4234ee
  423505:	sti    
  423506:	in     eax,0x81
  423508:	dec    ebp
  423509:	loope  0x423545
  42350b:	mov    cl,ch
  42350d:	outs   dx,DWORD PTR ds:[esi]
  42350e:	ins    DWORD PTR es:[edi],dx
  42350f:	push   esp
  423510:	mov    esi,0x4fc5aefb
  423515:	(bad)  
  423516:	fcomp  DWORD PTR [ebp+0x54]
  423519:	call   0xfc284cac
  42351e:	push   ds
  42351f:	and    eax,0x64b9e714
  423524:	inc    ebp
  423525:	xor    al,0xc6
  423527:	sub    BYTE PTR [eax+0x5c],dh
  42352a:	sbb    eax,0x4a740401
  42352f:	mov    bl,0x8
  423531:	lea    esi,[eax]
  423533:	in     eax,dx
  423534:	jmp    0xd7b31834
  423539:	es mov esp,0x4efbe927
  42353f:	mov    ch,0x7c
  423541:	ret    0x666d
  423544:	cmp    ebp,esp
  423546:	ins    DWORD PTR es:[edi],dx
  423547:	add    DWORD PTR [ebx],edi
  423549:	retf   0x7bb
  42354c:	test   esp,eax
  42354e:	add    BYTE PTR [eax],al
  423550:	mov    eax,ds:0x6e7ac0c4
  423555:	in     al,dx
  423556:	mov    edi,0xd355a250
  42355b:	lea    ebx,[eax]
  42355d:	rcr    BYTE PTR [ebp-0x2],1
  423560:	jmp    0x7cb5:0x8ba7f2b3
  423567:	inc    ebp
  423568:	jns    0x42355d
  42356a:	cli    
  42356b:	pop    es
  42356c:	aaa    
  42356d:	sub    DWORD PTR [esi*2-0x1395635d],eax
  423574:	jne    0x4235d4
  423576:	jbe    0x423572
  423578:	bound  ebp,QWORD PTR [ecx+0x5a]
  42357b:	in     al,dx
  42357c:	popf   
  42357d:	add    cl,BYTE PTR [esi-0x5eb02c06]
  423583:	and    ebp,DWORD PTR [edx]
  423585:	or     ecx,DWORD PTR [edi+0x44]
  423588:	popf   
  423589:	or     BYTE PTR [ecx+esi*8],0x36
  42358d:	pop    eax
  42358e:	fld    QWORD PTR [ebx+0x6ee7faaa]
  423594:	lahf   
  423595:	sub    esi,0xdb559d1b
  42359b:	icebp  
  42359c:	pusha  
  42359d:	fimul  DWORD PTR [ecx]
  42359f:	jo     0x423542
  4235a1:	jmp    0xd5cab989
  4235a6:	call   0x9cc3cf19
  4235ab:	jmp    0x423552
  4235ad:	aam    0xac
  4235af:	jmp    0x423556
  4235b1:	or     eax,0xd465
  4235b6:	pushf  
  4235b7:	add    ch,cl
  4235b9:	jl     0x42355d
  4235bb:	sub    ah,BYTE PTR [ebx]
  4235bd:	mov    ds:0x48c36c02,al
  4235c3:	lock mov ss,WORD PTR [eax]
  4235c6:	sbb    BYTE PTR [eax+0x5d],ah
  4235c9:	dec    ebx
  4235ca:	mov    ch,0x65
  4235cc:	or     eax,ebp
  4235ce:	mov    dh,0x89
  4235d0:	sub    dl,BYTE PTR [ebx+0x3b]
  4235d3:	add    eax,0x47af4c0e
  4235d8:	icebp  
  4235d9:	adc    ch,BYTE PTR [ecx]
  4235db:	sbb    edx,ebp
  4235dd:	jae    0x4235a0
  4235df:	jmp    0xd46e:0xdd97c19b
  4235e6:	adc    al,0x37
  4235e8:	fld    DWORD PTR [ecx-0x709af2ad]
  4235ee:	pushf  
  4235ef:	add    ch,cl
  4235f1:	xor    bl,BYTE PTR [ebp+0x1b]
  4235f4:	es sbb al,0xef
  4235f7:	inc    eax
  4235f8:	add    BYTE PTR [ebx+0x65],ah
  4235fb:	or     eax,0x57bbb080
  423600:	add    ch,BYTE PTR [edi-0x6dfa0d63]
  423606:	dec    eax
  423607:	pop    ebp
  423608:	stc    
  423609:	ret    0x6cd
  42360c:	ret    0x8ee5
  42360f:	and    al,BYTE PTR [eax-0x3e]
  423612:	fild   QWORD PTR [edx]
  423614:	outs   dx,BYTE PTR ds:[esi]
  423615:	mov    al,BYTE PTR [esi-0x3]
  423618:	jle    0x42360c
  42361a:	add    BYTE PTR [eax],al
  42361c:	jle    0x423620
  42361e:	or     esp,DWORD PTR [edx+edi*2+0x3]
  423622:	add    cl,ch
  423624:	je     0x423620
  423626:	mov    esp,ds
  423628:	es cmp ch,al
  42362b:	jecxz  0x42362b
  42362d:	fdivr  st,st(3)
  42362f:	bound  edi,QWORD PTR [edx]
  423631:	xor    ah,BYTE PTR [esi-0x10]
  423634:	jmp    0xd903:0x245f
  42363a:	mov    DWORD PTR [esi+ebp*8-0x5ec682a4],ebp
  423641:	or     DWORD PTR [ebp+ebp*4+0x6a000299],eax
  423648:	cmp    al,0xea
  42364a:	add    BYTE PTR [edi+0x39],dl
  42364d:	(bad)  
  42364e:	aas    
  42364f:	jmp    0x15580fbc
  423654:	pop    DWORD PTR [edx+0x0]
  423657:	xchg   DWORD PTR [ecx],eax
  423659:	lds    ebp,FWORD PTR ds:[edx+0x2985609e]
  423660:	or     eax,0xe2f48742
  423665:	lds    edi,FWORD PTR [edi]
  423667:	jmp    0x1eb70089
  42366c:	mov    dl,BYTE PTR [ecx-0x1ba6c740]
  423672:	les    eax,FWORD PTR [eax]
  423674:	pop    edx
  423675:	in     eax,0x85
  423677:	shl    BYTE PTR [eax+0x41b706f8],0x44
  42367e:	lds    eax,FWORD PTR [ebx+0x0]
  423681:	add    BYTE PTR [ecx+edx*1-0x37],al
  423685:	mov    DWORD PTR [ecx-0x4f2d7a42],eax
  42368b:	or     BYTE PTR [esi-0x7d],bl
  42368e:	push   0x43732018
  423693:	cmp    ah,BYTE PTR [eax]
  423695:	pop    edx
  423696:	mov    ds:0x3b48145d,al
  42369b:	lods   eax,DWORD PTR ds:[esi]
  42369c:	adc    eax,0x40f15c
  4236a1:	inc    ecx
  4236a2:	dec    edi
  4236a3:	call   0xf015:0xe552e66a
  4236aa:	push   es
  4236ab:	inc    eax
  4236ac:	add    bh,bh
  4236ae:	out    0xd7,eax
  4236b0:	add    BYTE PTR [ebx-0x28],0x39
  4236b4:	add    al,ch
  4236b6:	add    al,0xc1
  4236b8:	idiv   bh
  4236ba:	outs   dx,DWORD PTR ds:[esi]
  4236bb:	out    0x85,eax
  4236bd:	(bad)  
  4236be:	sti    
  4236bf:	pop    ebx
  4236c0:	mov    ah,0x0
  4236c2:	(bad)  
  4236c3:	jmp    DWORD PTR [ecx+0x3c]
  4236c6:	fimul  DWORD PTR [ebp-0x73]
  4236c9:	test   DWORD PTR [ebp+eiz*8+0x1efff7],edx
  4236d0:	push   eax
  4236d1:	push   DWORD PTR [ecx-0x3bbff1d5]
  4236d7:	add    ah,0xc
  4236da:	cmp    DWORD PTR [edx-0x1a540120],eax
  4236e0:	push   eax
  4236e1:	push   0xffffff84
  4236e3:	in     al,0x6b
  4236e5:	or     al,0x0
  4236e7:	add    BYTE PTR ds:0x6bfee0ac,cl
  4236ed:	in     eax,0xf7
  4236ef:	jae    0x42368e
  4236f1:	loope  0x4236d7
  4236f3:	adc    eax,0x3fd6fd
  4236f8:	push   ds
  4236f9:	sar    edi,0x74
  4236fc:	in     eax,0x2f
  4236fe:	or     cl,BYTE PTR [ebp-0x41cdad8]
  423704:	pop    edx
  423705:	icebp  
  423706:	(bad)  [esi+0x72]
  423709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42370a:	in     eax,0x66
  42370c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42370d:	outs   dx,BYTE PTR ds:[esi]
  42370e:	stos   DWORD PTR es:[edi],eax
  42370f:	sbb    al,0x42
  423711:	je     0x4236f8
  423713:	pop    eax
  423714:	inc    ebp
  423715:	sub    eax,0x6832fbc5
  42371a:	arpl   sp,bp
  42371c:	popf   
  42371d:	push   eax
  42371e:	dec    ebx
  42371f:	call   0xb856573a
  423724:	gs (bad) 
  423726:	aas    
  423727:	add    BYTE PTR [esi],ah
  423729:	cmp    ebp,esi
  42372b:	inc    esp
  42372c:	nop
  42372d:	dec    ebp
  42372e:	jnp    0x4236fe
  423730:	xchg   edx,eax
  423731:	lods   eax,DWORD PTR ds:[esi]
  423732:	iret   
  423733:	test   esp,esp
  423735:	mov    ch,0xfa
  423737:	mov    eax,0x3f9b35
  42373c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42373e:	out    0x1,eax
  423740:	imul   ebp,ebx,0x2cb98572
  423746:	in     eax,0xfb
  423748:	sar    BYTE PTR [ebp-0x11],cl
  42374b:	push   edx
  42374c:	add    BYTE PTR [eax],al
  42374e:	outs   dx,DWORD PTR ds:[esi]
  42374f:	call   0xfd38:0x6e10534f
  423756:	mov    edx,0xdd2f540b
  42375b:	addr16 mov ds:0xabec,eax
  42375f:	fnsetpm(287 only) 
  423761:	add    al,0x37
  423763:	jmp    0x719fcb5c
  423768:	add    al,0xa6
  42376b:	add    bh,BYTE PTR [ecx]
  42376d:	fadd   QWORD PTR [ecx+0x2e4daec]
  423773:	mov    edi,0xde07c01
  423778:	xor    bl,ah
  42377a:	pop    ebp
  42377b:	add    bl,0xe4
  42377e:	push   ax
  423780:	rcr    ebx,1
  423782:	and    eax,0x56e4b382
  423787:	push   eax
  423788:	mov    ecx,0xa3820ddb
  42378d:	in     al,0x1d
  42378f:	pop    eax
  423790:	out    dx,al
  423791:	add    ecx,eax
  423793:	(bad)  
  423794:	gs pop esi
  423796:	xor    eax,0x416e8ad2
  42379b:	jmp    0x423800
  42379d:	jl     0x4237c6
  42379f:	fidiv  DWORD PTR [ebx+0x3e]
  4237a2:	and    eax,0x6a32fc04
  4237a7:	jmp    0xc36d:0xda16f145
  4237ae:	xchg   ecx,eax
  4237af:	(bad)  
  4237b0:	gs add BYTE PTR ss:[eax],al
  4237b4:	add    eax,0xf53e5b05
  4237b9:	repnz aam 0x6
  4237bc:	jb     0x42381b
  4237be:	add    eax,0x6e0b7003
  4237c3:	inc    eax
  4237c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237c5:	test   DWORD PTR [ecx-0x24b12501],esi
  4237cb:	push   eax
  4237cc:	(bad)  
  4237cf:	in     al,0xc6
  4237d1:	jle    0x4237fc
  4237d3:	outs   dx,DWORD PTR ds:[esi]
  4237d4:	cdq    
  4237d5:	test   DWORD PTR [ebx+ebp*8-0x146b265f],esp
  4237dc:	sbb    dl,dh
  4237de:	adc    DWORD PTR [esi],esi
  4237e0:	sbb    dl,bl
  4237e2:	cli    
  4237e3:	ja     0x42383d
  4237e5:	fiadd  DWORD PTR [eax]
  4237e7:	xchg   esi,eax
  4237e8:	loopne 0x42381b
  4237ea:	leave  
  4237eb:	sub    edx,DWORD PTR [edx-0x728dab27]
  4237f1:	add    DWORD PTR [ebp+0x1],0x3a14e61a
  4237f8:	mov    bh,0x81
  4237fa:	xor    BYTE PTR [edx-0x1c],ah
  4237fd:	test   BYTE PTR [esi+0x7c87a7e9],0xe7
  423804:	jg     0x4237f1
  423806:	and    ch,al
  423808:	sahf   
  423809:	add    al,BYTE PTR [eax-0x7af27a11]
  42380f:	add    eax,0x730002a0
  423814:	xchg   DWORD PTR [ebx],eax
  423816:	adc    BYTE PTR [ebx+0xd910000],0x7e
  42381d:	stc    
  42381e:	cdq    
  42381f:	add    al,BYTE PTR [eax]
  423821:	imul   ecx,DWORD PTR [ebx+0x1b],0x396660b
  423828:	add    cl,ch
  42382a:	sub    eax,DWORD PTR [edi+0x18]
  42382d:	bound  esp,QWORD PTR [eax+0x5774d729]
  423833:	fucom  st(7)
  423835:	out    0x1e,al
  423837:	sbb    ah,BYTE PTR ds:0x4819a4dc
  42383d:	adc    ah,cl
  42383f:	push   ebx
  423840:	cmc    
  423841:	aas    
  423842:	loop   0x423846
  423844:	or     esp,DWORD PTR [esi+esi*8+0x1]
  423848:	add    cl,ch
  42384a:	push   ds
  42384b:	shl    BYTE PTR [eax],1
  42384d:	mov    ah,0x9a
  42384f:	sub    eax,eax
  423851:	adc    dh,BYTE PTR [edi+eax*4+0x45]
  423855:	sbb    eax,0xe175dd89
  42385a:	es das 
  42385c:	cld    
  42385d:	daa    
  42385e:	xlat   BYTE PTR fs:[ebx]
  423860:	add    BYTE PTR [eax],al
  423862:	mov    esp,?
  423864:	jne    0x423864
  423866:	mov    ds:0x8301f87f,eax
  42386b:	mov    BYTE PTR [edx+0x33048400],bh
  423871:	inc    ebp
  423872:	test   ch,dh
  423874:	jp     0x42382f
  423876:	je     0x42387c
  423878:	add    BYTE PTR [ebx+0x48cf2c1],cl
  42387e:	add    BYTE PTR [eax],al
  423880:	inc    ebp
  423881:	mov    DWORD PTR [eax],ecx
  423883:	mov    ebx,esp
  423885:	or     ah,BYTE PTR [ebx]
  423887:	stc    
  423888:	ja     0x4238bd
  42388a:	adc    al,0x57
  42388c:	mov    ch,0xe6
  42388e:	sbb    al,BYTE PTR [edi+0x4589e502]
  423894:	cld    
  423895:	mov    dh,bh
  423897:	je     0x4238e5
  423899:	mov    eax,eax
  42389b:	bswap  eax
  42389d:	stos   BYTE PTR es:[edi],al
  42389e:	add    BYTE PTR [eax],al
  4238a0:	inc    esp
  4238a1:	sbb    eax,0x560cd883
  4238a6:	jbe    0x4238a7
  4238a8:	mov    ds:0x7f1c5588,eax
  4238ad:	int    0x82
  4238af:	fdivr  DWORD PTR [edi+0x4a]
  4238b2:	sbb    al,0x8b
  4238b4:	hlt    
  4238b5:	jb     0x423933
  4238b7:	sbb    BYTE PTR [edx-0x78],ah
  4238ba:	inc    ebp
  4238bb:	sbb    BYTE PTR [edi+0x3],bh
  4238be:	or     eax,0xffffff9f
  4238c1:	mov    ah,0x8d
  4238c3:	dec    esp
  4238c4:	(bad)
  4238c7:	lock ins DWORD PTR es:[edi],dx
  4238c9:	xor    dh,ah
  4238cb:	mov    DWORD PTR [ecx],ebx
  4238cd:	mov    ah,0x83
  4238cf:	jne    0x4238bd
  4238d1:	jb     0x42391a
  4238d3:	add    DWORD PTR [eax+ebp*4+0x7fa3fe85],ebp
  4238da:	shl    BYTE PTR [ebp+ebx*4+0x7e],0x8a
  4238df:	ret    0xba26
  4238e2:	add    dh,BYTE PTR [ebp+0x0]
  4238e5:	add    BYTE PTR [ebp+0x2ffeda6c],ch
  4238eb:	mov    ebx,0x5e9175de
  4238f0:	dec    ecx
  4238f1:	(bad)  
  4238f2:	loop   0x42392a
  4238f4:	add    ebp,DWORD PTR [edi]
  4238f6:	in     eax,dx
  4238f7:	mov    cl,0x87
  4238f9:	add    BYTE PTR [ebx-0xcee1248],0xe0
  423900:	mov    WORD PTR [ebp+0x69],cs
  423903:	ss inc esi
  423905:	(bad)  
  423906:	fimul  DWORD PTR [esi-0x8]
  423909:	cs jne 0x423972
  42390c:	xchg   dl,bh
  42390e:	pop    edx
  42390f:	cld    
  423910:	loopne 0x423987
  423912:	push   ebp
  423913:	out    dx,eax
  423914:	loopne 0x42392b
  423916:	(bad)  
  423917:	xlat   BYTE PTR ds:[ebx]
  423918:	aas    
  423919:	add    BYTE PTR [esi],bl
  42391b:	popf   
  42391c:	adc    bl,bh
  42391e:	mov    al,0x71
  423920:	in     al,dx
  423921:	and    al,0x1b
  423923:	xchg   ecx,esp
  423925:	xchg   eax,esp
  423927:	fld    QWORD PTR [esi-0x3e1e9c8]
  42392d:	xchg   BYTE PTR [ebp+0x121a585e],bl
  423933:	ss pusha 
  423935:	cmp    BYTE PTR [edx],cl
  423937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423938:	sbb    al,0xf3
  42393a:	xchg   edx,eax
  42393b:	imul   esi,DWORD PTR [edx-0x6bd00506],0x1
  423942:	push   edx
  423943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423944:	cmp    al,0xc9
  423946:	fnstsw ax
  423948:	jmp    FWORD PTR ds:0x33dd0000
  42394e:	sar    ebx,cl
  423950:	push   eax
  423951:	adc    esp,ebp
  423953:	hlt    
  423954:	sbb    BYTE PTR [edi],ah
  423956:	loope  0x42393f
  423958:	iret   
  423959:	add    DWORD PTR [esp+ecx*4+0x400d82b1],edi
  423960:	and    bh,BYTE PTR ds:0x339d8ce1
  423966:	mov    bl,0x8c
  423968:	xor    BYTE PTR [esi],al
  42396a:	outs   dx,BYTE PTR ds:[esi]
  42396b:	adc    cl,BYTE PTR [esi+0x3]
  42396e:	xor    DWORD PTR [ecx+edx*2-0x77],ebp
  423972:	test   eax,0xf1482403
  423977:	sub    al,0x55
  423979:	xor    al,0x4f
  42397b:	imul   ebx
  42397d:	mov    esp,0xea9de124
  423982:	mov    eax,0x5ed67789
  423987:	mov    ebx,0x87f2ba20
  42398c:	add    BYTE PTR [ebx],al
  42398e:	jmp    0xe59a5b96
  423993:	adc    eax,0xffffffd5
  423996:	jmp    0xc9aabef1
  42399b:	mov    es,eax
  42399d:	mov    edx,0xb709ec41
  4239a2:	xchg   edx,eax
  4239a3:	loopne 0x4239c5
  4239a5:	inc    eax
  4239a6:	xor    DWORD PTR [ebx],0xe0b9dd35
  4239ac:	es jg  0x423958
  4239af:	push   edi
  4239b0:	add    BYTE PTR [eax],al
  4239b2:	mov    bh,0x5
  4239b4:	cmp    al,BYTE PTR [esi+0x1]
  4239b7:	xor    ebx,DWORD PTR [esi-0x38]
  4239ba:	ins    DWORD PTR es:[edi],dx
  4239bb:	push   0x50104119
  4239c0:	xchg   ecx,eax
  4239c1:	jmp    0x4239f0
  4239c3:	int3   
  4239c4:	push   ebx
  4239c5:	loopne 0x4239e1
  4239c7:	push   eax
  4239c8:	fisttp QWORD PTR [ebp+eiz*8-0x19795fc5]
  4239cf:	push   ebp
  4239d0:	out    0x14,eax
  4239d2:	(bad)  
  4239d3:	mov    DWORD PTR [eax],eax
  4239d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239d6:	neg    BYTE PTR ds:0xefb76ac7
  4239dc:	push   eax
  4239dd:	je     0x423a30
  4239df:	out    dx,eax
  4239e0:	mov    ebp,fs
  4239e2:	popf   
  4239e3:	xor    edx,DWORD PTR [eax+0x60]
  4239e6:	pop    ebx
  4239e7:	into   
  4239e8:	sti    
  4239e9:	hlt    
  4239ea:	outs   dx,BYTE PTR ds:[esi]
  4239eb:	lock aas 
  4239ed:	jmp    0x964ef90b
  4239f2:	sub    edi,DWORD PTR [edi]
  4239f4:	test   al,0x99
  4239f6:	leave  
  4239f7:	fst    DWORD PTR ds:0x1584b9
  4239fd:	jb     0x4239eb
  4239ff:	or     al,BYTE PTR [edi-0x18bef210]
  423a05:	call   0x62500fa2
  423a0a:	aam    0xce
  423a0c:	jg     0x4239bb
  423a0e:	lea    ebp,[edx-0x4c]
  423a11:	jae    0x4239f4
  423a13:	add    cl,BYTE PTR [ecx+0x71000024]
  423a19:	sbb    eax,0xefb718c8
  423a1e:	push   esi
  423a1f:	scas   eax,DWORD PTR es:[edi]
  423a20:	aam    0xd9
  423a22:	add    DWORD PTR [ecx-0x69057f6b],edx
  423a28:	es mov edx,0x7f9ab285
  423a2e:	bound  eax,QWORD PTR [esi+0x2486d942]
  423a34:	cli    
  423a35:	cmp    BYTE PTR [edx+0x12],bl
  423a38:	loopne 0x4239cd
  423a3a:	or     cl,ch
  423a3c:	lds    edi,FWORD PTR [ebp-0x14]
  423a3f:	push   0xd
  423a41:	repnz dec esi
  423a43:	mov    bh,0xb3
  423a45:	jge    0x423a37
  423a47:	ret    
  423a48:	cwde   
  423a49:	jge    0x423a21
  423a4b:	mov    bl,0x19
  423a4d:	dec    edi
  423a4e:	hlt    
  423a4f:	add    BYTE PTR [edi-0x41],ch
  423a52:	xor    esi,edx
  423a54:	push   ss
  423a55:	aam    0x82
  423a57:	xor    bh,cl
  423a59:	mov    dl,0x6a
  423a5b:	sbb    edi,ecx
  423a5d:	cmp    esp,esi
  423a5f:	ja     0x423a21
  423a61:	pop    esi
  423a62:	cmp    DWORD PTR [ebp-0x4c],0x5e
  423a66:	test   DWORD PTR [eax-0x40],edi
  423a69:	cmp    DWORD PTR [ecx],edx
  423a6b:	sub    DWORD PTR [ecx],edx
  423a6d:	lods   eax,DWORD PTR ds:[esi]
  423a6e:	sti    
  423a6f:	(bad)
  423a72:	hlt    
  423a73:	jae    0x423a1a
  423a75:	lock mov edi,0xfffdf7e9
  423a7b:	inc    DWORD PTR [eax]
  423a7d:	add    bh,dh
  423a7f:	mov    ebp,0x297a8afe
  423a84:	repnz mov cl,0xb3
  423a88:	add    BYTE PTR [ecx+0x7d89aeb9],cl
  423a8e:	push   eax
  423a8f:	sub    al,0x7
  423a91:	push   edi
  423a92:	idiv   DWORD PTR [edi+0x1d6c4ffe]
  423a98:	test   esi,edi
  423a9a:	or     eax,DWORD PTR [edi-0x3a007bb]
  423aa0:	jp     0x423b07
  423aa2:	cld    
  423aa3:	inc    DWORD PTR [edi+edi*8+0x7d7b4790]
  423aaa:	or     al,0x0
  423aac:	je     0x423abe
  423aae:	leave  
  423aaf:	dec    edx
  423ab0:	hlt    
  423ab1:	push   eax
  423ab2:	test   eax,0x2c50f84a
  423ab7:	popf   
  423ab8:	idiv   bh
  423aba:	mov    ecx,DWORD PTR [eax-0x4b7e0b83]
  423ac0:	je     0x423af3
  423ac2:	ja     0x423b26
  423ac4:	clc    
  423ac5:	add    BYTE PTR [ebx],cl
  423ac7:	jl     0x423afb
  423ac9:	add    DWORD PTR [ebp+0x7086ffe9],ebx
  423acf:	loope  0x423a61
  423ad1:	inc    ebp
  423ad2:	jmp    0xd587cb50
  423ad7:	jns    0x423ab3
  423ad9:	outs   dx,DWORD PTR ds:[esi]
  423ada:	lods   eax,DWORD PTR ds:[esi]
  423adb:	or     al,0x58
  423add:	or     al,0x73
  423adf:	and    al,0x58
  423ae1:	lock add BYTE PTR [eax],al
  423ae4:	mov    ch,0x0
  423ae6:	loope  0x423ae3
  423ae8:	mov    edx,0x190bbf5d
  423aed:	rol    BYTE PTR [eax+eax*1],cl
  423af0:	popf   
  423af1:	pusha  
  423af2:	pusha  
  423af3:	hlt    
  423af4:	mov    dh,0xe8
  423af6:	xchg   BYTE PTR [ebp-0x5b],dh
  423af9:	jnp    0x423b79
  423afb:	jge    0x423aaa
  423afd:	loope  0x423b09
  423aff:	test   DWORD PTR [ebx-0x17],eax
  423b02:	(bad)  
  423b03:	push   ebp
  423b05:	lea    eax,[esi+0x53b49d40]
  423b0b:	lock test DWORD PTR [ecx+ebx*2],esi
  423b0f:	cli    
  423b10:	push   0x68
  423b12:	fdiv   st(1),st
  423b14:	call   0x21024c00
  423b19:	test   eax,0xe944880d
  423b1e:	(bad)  
  423b1f:	inc    DWORD PTR [esi+0x1e0b101e]
  423b25:	mov    DWORD PTR [eax+eax*1],eax
  423b28:	popf   
  423b29:	push   eax
  423b2a:	pop    ecx
  423b2b:	adc    al,0x20
  423b2d:	mov    ch,0xc5
  423b2f:	daa    
  423b30:	stos   DWORD PTR es:[edi],eax
  423b31:	fld    QWORD PTR [eax]
  423b33:	cmp    bl,BYTE PTR [esi+0x210bd7fe]
  423b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b3a:	add    al,0x0
  423b3c:	popf   
  423b3d:	pusha  
  423b3e:	(bad)
  423b41:	addr16 (bad) 
  423b44:	adc    al,0x2
  423b46:	lods   al,BYTE PTR ds:[esi]
  423b47:	repz add BYTE PTR [eax],al
  423b4a:	and    edx,eax
  423b4c:	jmp    0xe603:0xe9022b87
  423b53:	or     ecx,DWORD PTR [edx+0x51]
  423b56:	lea    esi,[edx]
  423b58:	inc    edx
  423b59:	test   DWORD PTR [edx+0x1a03a8ec],0xad46e5fc
  423b63:	jg     0x423b8a
  423b65:	adc    dh,al
  423b67:	dec    esp
  423b68:	sbb    eax,0xb9da30dd
  423b6d:	fmul   QWORD PTR [eax-0x62bc04ee]
  423b73:	xchg   DWORD PTR [ebx-0x22b8e5f9],esp
  423b79:	sub    BYTE PTR [ebp-0x7a],ah
  423b7c:	and    eax,0x9e7dec10
  423b81:	repz mov ecx,edx
  423b84:	pop    esi
  423b85:	push   es
  423b86:	sbb    bl,BYTE PTR [eax-0x7]
  423b89:	add    BYTE PTR [edi+0x6],bl
  423b8c:	and    al,0xd8
  423b8e:	int3   
  423b8f:	xor    dl,dl
  423b91:	idiv   BYTE PTR [edx-0x1dfbd708]
  423b97:	(bad)  
  423b98:	cmc    
  423b99:	fmul   st(2),st
  423b9b:	repnz rcr BYTE PTR [edx-0x754d2f2e],1
  423ba2:	mov    edx,0xa9585ff2
  423ba7:	enter  0xdd2c,0x9c
  423bab:	fnstsw WORD PTR [edx]
  423bad:	add    DWORD PTR [eax],0xe9cab000
  423bb3:	push   esi
  423bb4:	jle    0x423c33
  423bb6:	jecxz  0x423b40
  423bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bb9:	push   es
  423bba:	outs   dx,BYTE PTR ds:[esi]
  423bbb:	dec    eax
  423bbc:	lods   eax,DWORD PTR ds:[esi]
  423bbd:	sbb    eax,0xca123481
  423bc2:	add    BYTE PTR [eax],bl
  423bc4:	stc    
  423bc5:	sar    BYTE PTR [edi+0x6f],1
  423bc8:	loope  0x423c45
  423bca:	inc    ebp
  423bcb:	popa   
  423bcc:	and    eax,ebx
  423bce:	je     0x423bee
  423bd0:	test   al,0x89
  423bd2:	fadd   DWORD PTR [ecx+0x1c]
  423bd5:	pop    edx
  423bd6:	sti    
  423bd7:	dec    esi
  423bd8:	pop    ss
  423bd9:	dec    eax
  423bda:	hlt    
  423bdb:	jb     0x423bd3
  423bdd:	mov    DWORD PTR [ebp-0x1f],ebx
  423be0:	and    eax,0xd2bc86d2
  423be5:	jle    0x423c33
  423be7:	icebp  
  423be8:	lahf   
  423be9:	fisubr DWORD PTR [ebp-0x7b322795]
  423bef:	sub    DWORD PTR [edx-0x11],ecx
  423bf2:	xchg   bh,ch
  423bf4:	popf   
  423bf5:	rcl    DWORD PTR [edx+0xe],1
  423bf8:	dec    ebx
  423bf9:	retf   0x650
  423bfc:	xchg   ebx,eax
  423bfd:	and    DWORD PTR [edx],edx
  423bff:	test   eax,0x6236d19e
  423c04:	mov    al,ds:0x58ddc451
  423c09:	push   es
  423c0a:	add    esi,ebx
  423c0c:	fistp  QWORD PTR [ebx+0x37]
  423c0f:	fmulp  st(4),st
  423c11:	retf   0x2fe8
  423c14:	add    BYTE PTR [eax],al
  423c16:	and    cl,ah
  423c18:	sti    
  423c19:	arpl   sp,bx
  423c1b:	int    0x5b
  423c1d:	daa    
  423c1e:	call   0x8737:0x9ed5bebb
  423c25:	lds    esp,FWORD PTR [edx]
  423c27:	fisub  WORD PTR [eax]
  423c29:	sbb    cl,BYTE PTR [edi+0x2a3ec021]
  423c2f:	dec    edi
  423c30:	or     BYTE PTR [eax-0x24],dh
  423c33:	out    0x89,al
  423c35:	sub    al,0x39
  423c37:	or     eax,DWORD PTR [ebx-0x13]
  423c3a:	xchg   edi,eax
  423c3b:	test   bh,cl
  423c3d:	add    BYTE PTR ds:0xb9890005,al
  423c43:	fiadd  DWORD PTR [ebx+0x7507ec77]
  423c49:	in     al,dx
  423c4a:	inc    edi
  423c4b:	nop
  423c4c:	div    DWORD PTR [esi-0x14]
  423c4f:	jg     0x423c9f
  423c51:	or     al,0xce
  423c53:	cld    
  423c54:	dec    esi
  423c55:	call   0x3a1665
  423c5a:	js     0x423c22
  423c5c:	pop    es
  423c5d:	test   BYTE PTR [ebx+0x7],al
  423c60:	add    BYTE PTR [eax],al
  423c62:	xchg   ebx,eax
  423c63:	xor    al,0x8
  423c65:	mov    ebp,DWORD PTR [edx]
  423c67:	or     DWORD PTR [edx+0x10],esp
  423c6a:	sub    ebx,ebp
  423c6c:	mov    eax,ds:0x84ad83ec
  423c71:	rol    bl,0x50
  423c74:	mov    DWORD PTR [ecx],eax
  423c76:	mov    ah,0x4
  423c78:	add    DWORD PTR [esi+0x0],0x0
  423c7c:	test   al,0x25
  423c7e:	pop    ebp
  423c7f:	lock gs or esi,esp
  423c83:	mov    esi,DWORD PTR [edx]
  423c85:	aam    0x88
  423c87:	inc    ebp
  423c88:	nop
  423c89:	mov    eax,edi
  423c8b:	push   es
  423c8c:	arpl   WORD PTR [esi+0x48400cf],ax
  423c92:	add    DWORD PTR [ebx],0x7
  423c95:	lods   al,BYTE PTR ds:[esi]
  423c96:	dec    BYTE PTR [esi]
  423c98:	not    BYTE PTR [ebx+0x0]
  423c9b:	add    BYTE PTR [ecx+esi*8+0x44],dh
  423c9f:	cld    
  423ca0:	push   ebx
  423ca1:	test   DWORD PTR [edi+0x0],edi
  423ca4:	inc    esp
  423ca5:	add    al,0x7
  423ca7:	mov    bh,0x7f
  423ca9:	add    ch,dh
  423cab:	shr    DWORD PTR [eax+0x40],0x6d
  423caf:	and    BYTE PTR ds:0xedb606d0,0xb4
  423cb6:	fstp   DWORD PTR [ebx]
  423cb8:	popf   
  423cb9:	mov    ds:0x5d35e182,al
  423cbe:	les    esp,FWORD PTR [eax]
  423cc0:	stos   BYTE PTR es:[edi],al
  423cc1:	adc    ah,cl
  423cc3:	mov    DWORD PTR [eax+0x79],esp
  423cc6:	cmp    al,0x9b
  423cc9:	iret   
  423cca:	xor    eax,0x1c53dd7f
  423ccf:	aas    
  423cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd1:	scas   al,BYTE PTR es:[edi]
  423cd2:	dec    ebp
  423cd3:	sti    
  423cd4:	push   0xffffffd5
  423cd6:	mov    BYTE PTR [edi],bh
  423cd8:	mov    ds:0x10104e38,eax
  423cdd:	mov    edi,0x50d7
  423ce2:	lds    ebp,FWORD PTR [ebx+0x5cd2faa4]
  423ce8:	xlat   BYTE PTR ds:[ebx]
  423ce9:	add    DWORD PTR [ecx-0x37],ecx
  423cec:	mov    dl,BYTE PTR [ebp-0x6b]
  423cef:	cs dec eax
  423cf1:	hlt    
  423cf2:	dec    esp
  423cf3:	push   esi
  423cf4:	dec    eax
  423cf5:	lock dec esp
  423cf7:	lock dec edi
  423cf9:	loopne 0x423d11
  423cfb:	and    eax,0xf128fb2f
  423d00:	mov    DWORD PTR [ebp-0x67],eax
  423d03:	icebp  
  423d04:	inc    esi
  423d05:	std    
  423d06:	xchg   edx,eax
  423d07:	sar    BYTE PTR [edx-0x40],1
  423d0a:	adc    ebp,ebx
  423d0c:	(bad)  
  423d0d:	inc    ebp
  423d0e:	jns    0x423cf0
  423d10:	dec    ebx
  423d11:	clc    
  423d12:	xor    eax,0x9d007fd9
  423d17:	mov    cl,0x47
  423d19:	jle    0x423d86
  423d1b:	mov    eax,0x64957d8d
  423d20:	add    eax,0x5c5e029
  423d25:	fcomp  DWORD PTR [esi]
  423d27:	push   cs
  423d28:	fadd   DWORD PTR [edx]
  423d2a:	call   0x85a0:0x42fb5b5c
  423d31:	jge    0x423d64
  423d33:	add    ch,cl
  423d35:	push   ecx
  423d36:	outs   dx,DWORD PTR ds:[esi]
  423d37:	iret   
  423d38:	ror    BYTE PTR [esi+ebx*8+0x20eb0106],cl
  423d3f:	add    ch,cl
  423d41:	jmp    0x423d7e
  423d43:	mov    es,WORD PTR [ebx+0x1a0000d9]
  423d49:	stos   BYTE PTR es:[edi],al
  423d4a:	fs mov ebp,0x4f71e991
  423d50:	or     edi,ecx
  423d52:	hlt    
  423d53:	rol    DWORD PTR [ebx-0x1b9449fe],cl
  423d59:	add    ecx,ebp
  423d5b:	add    esi,ebp
  423d5d:	sbb    eax,0x32e6d947
  423d62:	inc    ecx
  423d63:	add    ebx,DWORD PTR [ebx-0x30]
  423d66:	inc    edx
  423d67:	(bad)  [eax-0x2e]
  423d6a:	push   ecx
  423d6b:	fistp  DWORD PTR [eax+edx*8]
  423d6e:	xor    dl,dl
  423d70:	lahf   
  423d71:	add    edx,ebx
  423d73:	jg     0x423d81
  423d75:	add    ch,cl
  423d77:	add    eax,DWORD PTR [ebp-0x1a]
  423d7a:	pusha  
  423d7b:	inc    ebp
  423d7c:	popf   
  423d7d:	iret   
  423d7e:	cld    
  423d7f:	out    0x93,eax
  423d81:	inc    edx
  423d82:	jmp    0x31c1a72
  423d87:	fstp   DWORD PTR [edx]
  423d89:	inc    ebp
  423d8a:	in     eax,dx
  423d8b:	mov    edi,fs
  423d8d:	cli    
  423d8e:	pop    edi
  423d8f:	aas    
  423d90:	add    DWORD PTR [edx+0x5b0b07f1],0xcaf2046e
  423d9a:	in     eax,dx
  423d9b:	push   ebp
  423d9c:	cld    
  423d9d:	or     DWORD PTR [eax+ebx*8],ebp
  423da0:	out    dx,al
  423da1:	cs pop esi
  423da3:	dec    esp
  423da4:	mov    eax,ds:0x9d03a8d5
  423da9:	add    cl,BYTE PTR [ecx]
  423dab:	push   eax
  423dac:	add    BYTE PTR [eax],al
  423dae:	loope  0x423d31
  423db0:	add    BYTE PTR [ecx-0x48c4af66],dh
  423db6:	pop    edi
  423db7:	add    al,0x74
  423db9:	jecxz  0x423ddc
  423dbb:	add    BYTE PTR [eax],al
  423dbd:	arpl   cx,sp
  423dbf:	add    bh,bh
  423dc1:	mov    al,ds:0x2ab9cf04
  423dc6:	mov    eax,ds:0xf469ddda
  423dcb:	leave  
  423dcc:	test   BYTE PTR [ecx-0x4504dca6],ch
  423dd2:	adc    DWORD PTR [eax],eax
  423dd4:	cld    
  423dd5:	xor    BYTE PTR [ecx+0x2],ah
  423dd8:	push   ebx
  423dda:	sahf   
  423ddb:	xchg   esp,eax
  423ddc:	aas    
  423ddd:	jmp    0xfd3d7193
  423de2:	mov    ?,eax
  423de4:	aas    
  423de5:	jmp    0x2dc10c13
  423dea:	call   0xe:0x28e90503
  423df1:	bound  ebp,QWORD PTR [ebx-0x6]
  423df4:	xchg   dl,ch
  423df6:	xchg   DWORD PTR [edi-0x4],eax
  423df9:	jmp    0x5da2:0x1d7d4df6
  423e00:	cwde   
  423e01:	add    edx,0x75e93f8b
  423e07:	imul   edi
  423e09:	fcmovnu st,st(6)
  423e0b:	add    bh,bl
  423e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e0e:	jbe    0x423d95
  423e10:	inc    ebp
  423e11:	add    DWORD PTR [eax],eax
  423e13:	add    BYTE PTR [ecx],bl
  423e15:	inc    edi
  423e16:	in     al,dx
  423e17:	rcr    DWORD PTR [ecx+0x1cf61c41],1
  423e1d:	adc    bh,dl
  423e1f:	ficom  WORD PTR [edx+0x1d]
  423e22:	rcl    BYTE PTR [edx],0xdc
  423e25:	out    0x5b,al
  423e27:	repnz pop esi
  423e29:	sub    bl,dh
  423e2b:	add    ah,bh
  423e2d:	or     cl,cl
  423e2f:	ret    0x140
  423e32:	dec    esi
  423e33:	mov    eax,DWORD PTR [esi*4-0x8a3f792]
  423e3a:	cmp    dh,0xfb
  423e3d:	mov    ah,0x6e
  423e3f:	adc    BYTE PTR [edi+ebx*1],cl
  423e42:	cmp    esi,0x1c6eb50b
  423e48:	sbb    al,0x27
  423e4a:	cmp    esi,0x2c6eb51b
  423e50:	sub    al,0xcf
  423e52:	cmp    dh,0x8b
  423e55:	mov    ch,0x6e
  423e57:	xor    BYTE PTR [edi+edx*8],bl
  423e5a:	cmp    dh,0x7b
  423e5d:	mov    ch,0x6e
  423e5f:	xor    al,0x4c
  423e61:	inc    DWORD PTR [eax+0x6e794bfe]
  423e67:	inc    eax
  423e68:	inc    ecx
  423e69:	mov    esp,0xfc5b0d74
  423e6e:	out    0xfb,eax
  423e70:	xor    al,0xb4
  423e72:	not    DWORD PTR [esi+0x5c]
  423e75:	mov    bl,0x80
  423e77:	inc    BYTE PTR [eax]
  423e79:	add    BYTE PTR [ebx+0x12ffbb14],cl
  423e7f:	int    0xe3
  423e81:	jmp    0x423eb7
  423e83:	mov    ah,0xf7
  423e85:	inc    DWORD PTR [edx]
  423e87:	stc    
  423e88:	out    0xe3,eax
  423e8a:	add    al,0xb5
  423e8c:	idiv   edi
  423e8e:	adc    dl,al
  423e90:	jecxz  0x423e6d
  423e92:	hlt    
  423e93:	mov    ah,0xf7
  423e95:	ret    
  423e96:	and    edi,DWORD PTR [ecx-0x8]
  423e99:	test   DWORD PTR [ebx-0x10a9f1c4],ecx
  423e9f:	mov    esp,0xff9cf663
  423ea4:	jae    0x423eca
  423ea6:	popf   
  423ea7:	in     eax,0x7e
  423ea9:	jmp    0xc552:0xfbc5c1b5
  423eb0:	inc    edx
  423eb1:	jne    0x423f03
  423eb3:	in     al,dx
  423eb4:	xor    ch,cl
  423eb6:	or     bl,BYTE PTR [edx-0x2b]
  423eb9:	sti    
  423eba:	shl    BYTE PTR [eax-0x1d],1
  423ebd:	jg     0x423ef8
  423ebf:	mov    ds:0x58954586,al
  423ec4:	jecxz  0x423f22
  423ec6:	into   
  423ec7:	or     ebp,DWORD PTR [ebx]
  423ec9:	sti    
  423eca:	(bad)  
  423ecb:	in     eax,0x88
  423ecd:	je     0x423e88
  423ecf:	shl    edi,0xba
  423ed2:	xchg   ebx,eax
  423ed3:	dec    esp
  423ed4:	rol    BYTE PTR [ebp+ebx*8-0x6363841c],cl
  423edb:	fcos   
  423edd:	add    BYTE PTR cs:[eax],al
  423ee0:	(bad)  
  423ee1:	mov    ebx,0xd5c144ba
  423ee6:	inc    DWORD PTR [eax]
  423ee8:	adc    eax,0xc50f1b96
  423eed:	pop    edx
  423eee:	or     eax,0xcf50d2fb
  423ef3:	or     ecx,DWORD PTR [ebx]
  423ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ef6:	sbb    ecx,DWORD PTR [edi]
  423ef8:	xchg   edx,eax
  423ef9:	push   ebx
  423efa:	cmp    eax,DWORD PTR [ecx+edx*4]
  423efd:	push   0x8b4d4f2e
  423f02:	rcl    BYTE PTR ds:0x3fd635,cl
  423f08:	dec    ebx
  423f09:	bound  edi,QWORD PTR [ebx]
  423f0b:	and    al,0xb9
  423f0d:	add    DWORD PTR [eax+eax*4-0x6d],esp
  423f11:	add    al,0x1c
  423f13:	pop    esp
  423f14:	shl    ecx,0x2
  423f17:	test   bl,al
  423f19:	(bad)  
  423f1b:	dec    esi
  423f1d:	push   0x2cfff69
  423f22:	ss aad 0xf1
  423f25:	es xor eax,0x2526e9d5
  423f2b:	aad    0xd1
  423f2d:	es adc eax,0xdc4aa8d5
  423f33:	inc    ebx
  423f34:	popf   
  423f35:	jns    0x423f5c
  423f37:	and    BYTE PTR [ecx+0x7],bh
  423f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f3b:	add    eax,0x3e7f221
  423f40:	popf   
  423f41:	ja     0x423f6f
  423f43:	or     al,0x0
  423f45:	add    BYTE PTR [edx],ah
  423f47:	add    ch,BYTE PTR [ecx+0x5c]
  423f4a:	test   DWORD PTR [ecx],eax
  423f4c:	push   ebx
  423f4d:	ror    BYTE PTR [edi-0x67b016be],0x8c
  423f54:	mov    ch,0x4e
  423f56:	pop    ebp
  423f57:	add    dh,BYTE PTR [esi-0x32b1e236]
  423f5d:	inc    ecx
  423f5e:	sti    
  423f5f:	das    
  423f60:	fisubr DWORD PTR [esi-0x24]
  423f63:	cmp    BYTE PTR [eax-0x1d],ch
  423f66:	popf   
  423f67:	add    ch,BYTE PTR [ecx+0x4]
  423f6a:	sbb    al,0xb9
  423f6c:	jmp    0xb8c8e93d
  423f71:	xor    dh,dl
  423f73:	push   ecx
  423f74:	icebp  
  423f75:	imul   ebp,ebp,0x53
  423f78:	test   eax,0xd55c603
  423f7d:	dec    eax
  423f7e:	dec    edi
  423f7f:	retf   
  423f80:	mov    ch,0x1f
  423f82:	pop    ebp
  423f83:	retf   
  423f84:	cld    
  423f85:	push   ebx
  423f86:	nop
  423f87:	inc    edx
  423f88:	jmp    0x1648ed15
  423f8d:	add    eax,0x3e99121
  423f92:	popf   
  423f93:	pop    esp
  423f94:	fiadd  WORD PTR [esi+0x3bb11f09]
  423f9a:	jne    0x423f4a
  423f9c:	add    BYTE PTR [edi],bl
  423f9e:	push   eax
  423f9f:	into   
  423fa0:	push   0xa0029ee9
  423fa5:	push   ebx
  423fa6:	push   eax
  423fa7:	add    bl,0x39
  423faa:	add    BYTE PTR [eax],al
  423fac:	mov    bl,0xcd
  423fae:	adc    eax,0xa4a45
  423fb3:	inc    ebx
  423fb4:	push   edi
  423fb5:	ja     0x424033
  423fb7:	or     eax,0x7fe82ad9
  423fbc:	lock int 0xfb
  423fbf:	(bad)  
  423fc1:	cli    
  423fc2:	xchg   dh,ah
  423fc4:	xchg   edi,eax
  423fc5:	sub    ah,BYTE PTR [eax]
  423fc7:	pop    ds
  423fc8:	(bad)  
  423fc9:	int    0x70
  423fcb:	std    
  423fcc:	sbb    edi,DWORD PTR [edi]
  423fce:	and    al,0x21
  423fd0:	shl    DWORD PTR [edi+0x44],1
  423fd3:	lds    esi,FWORD PTR [edx-0x22fa17ce]
  423fd9:	int3   
  423fda:	sti    
  423fdb:	push   0x42
  423fdd:	test   DWORD PTR [ecx+ebp*4-0x16980eb0],0xd3a0029e
  423fe8:	ror    ebp,1
  423fea:	je     0x423ff1
  423fec:	mov    ebp,0x42fcfb34
  423ff1:	out    dx,eax
  423ff2:	aas    
  423ff3:	jmp    0xe5668ee1
  423ff8:	mov    dh,0x46
  423ffa:	jnp    0x42403b
  423ffc:	jmp    0x4e784382
  424001:	sbb    bh,bl
  424003:	mov    ecx,0xbf4f3992
  424008:	shr    edi,1
  42400a:	jg     0x424000
  42400c:	pop    esi
  42400d:	add    bh,BYTE PTR [edi+0x11]
  424010:	add    BYTE PTR [eax],al
  424012:	lahf   
  424013:	dec    edi
  424014:	cs mov edx,0x243e1b
  42401a:	jo     0x424031
  42401c:	lea    eax,[eax+ebx*2+0x1d]
  424020:	push   eax
  424021:	push   0x20000557
  424026:	or     al,BYTE PTR [esi-0x53fdbbc]
  42402c:	(bad)  
  42402d:	push   DWORD PTR [esi+eax*2+0x5c]
  424031:	and    al,0xb8
  424033:	mov    ch,0x15
  424035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424036:	dec    ecx
  424037:	inc    ebp
  424038:	add    BYTE PTR [ebx+0xa74ff5c],al
  42403e:	mov    ch,0x32
  424040:	and    al,0x20
  424042:	cld    
  424043:	std    
  424044:	(bad)  
  424045:	jmp    FWORD PTR [eax+0x3d]
  424048:	dec    esi
  424049:	jmp    FWORD PTR [ecx]
  42404b:	cmp    DWORD PTR ds:0x74b43440,edx
  424051:	and    al,0xe8
  424053:	mov    bl,0x15
  424055:	jl     0x424060
  424057:	inc    ebp
  424058:	add    bh,bh
  42405a:	or     BYTE PTR [ecx],ah
  42405c:	sbb    bh,bh
  42405e:	jmp    0x482559b
  424063:	mov    bl,0x44
  424065:	and    al,0xd7
  424067:	test   BYTE PTR [esp-0x19],bh
  42406b:	inc    BYTE PTR [esi]
  42406d:	xor    BYTE PTR [edi-0x4c],0xf7
  424071:	push   DWORD PTR [ebx+0x2a]
  424074:	and    al,0x34
  424076:	add    BYTE PTR [eax],al
  424078:	pop    esp
  424079:	push   DWORD PTR [esi-0x2]
  42407c:	arpl   WORD PTR [ebp-0x5963db8c],si
  424082:	clc    
  424083:	jle    0x4240f7
  424085:	mov    ch,0x57
  424087:	pop    esi
  424088:	mov    bh,0xc4
  42408a:	push   ebx
  42408b:	mov    ebx,DWORD PTR [ecx-0x4bfb45ed]
  424091:	mov    bl,0x74
  424093:	and    al,0x9d
  424095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424096:	xlat   BYTE PTR ds:[ebx]
  424097:	in     al,0x13
  424099:	clc    
  42409a:	into   
  42409b:	sti    
  42409c:	adc    DWORD PTR [esi+0x4866e807],esi
  4240a2:	sar    ebx,1
  4240a4:	pop    es
  4240a5:	scas   al,BYTE PTR es:[edi]
  4240a6:	jl     0x42411b
  4240a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a9:	es push eax
  4240ab:	and    al,0xad
  4240ad:	inc    ecx
  4240ae:	(bad)  
  4240b0:	dec    eax
  4240b1:	test   eax,0xf5f989ce
  4240b6:	out    dx,eax
  4240b7:	out    0xf3,al
  4240b9:	inc    ebx
  4240ba:	and    BYTE PTR [esi-0x62],ah
  4240bd:	dec    esi
  4240be:	inc    ebx
  4240bf:	and    al,0x7d
  4240c1:	jmp    0xf9c38540
  4240c6:	ss call 0xfc13972b
  4240cc:	rcl    BYTE PTR [edx+0x43],cl
  4240cf:	and    al,0x75
  4240d1:	jno    0x42406f
  4240d3:	jp     0x4240f0
  4240d5:	jno    0x424151
  4240d7:	inc    esp
  4240d8:	mov    ecx,0xf882bd
  4240dd:	add    BYTE PTR [edx],cl
  4240df:	mov    BYTE PTR [edi],0x2f
  4240e2:	add    al,ch
  4240e4:	ret    0xc472
  4240e7:	fs inc ebx
  4240e9:	and    al,0x95
  4240eb:	add    edi,DWORD PTR es:[eax+0x155801a4]
  4240f2:	loop   0x4240dd
  4240f4:	into   
  4240f5:	adc    eax,0x3fcb55
  4240fa:	ins    DWORD PTR es:[edi],dx
  4240fb:	fs inc ebx
  4240fd:	and    al,0xa9
  4240ff:	inc    eax
  424100:	adc    edi,DWORD PTR [eax-0xfd34b]
  424106:	mov    edx,0x79244364
  42410b:	mov    al,ds:0x22ff80a
  424110:	cmp    bh,BYTE PTR [esi+0x21]
  424113:	push   ds
  424114:	add    esp,ebx
  424116:	and    DWORD PTR [eax+0x13],ecx
  424119:	shl    BYTE PTR [eax],cl
  42411b:	(bad)
  42411f:	jne    0x4240ce
  424121:	daa    
  424122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424123:	xor    ch,BYTE PTR [edi+eax*2-0x3f]
  424127:	push   cs
  424128:	cdq    
  424129:	cmp    DWORD PTR [ebp+0x66d2b498],eax
  42412f:	jnp    0x424112
  424131:	or     eax,0xdb624d6a
  424136:	in     eax,dx
  424137:	(bad)  
  424138:	rcl    cl,cl
  42413a:	call   0xec75feba
  42413f:	xor    ebx,DWORD PTR [ebx]
  424141:	jnp    0x424143
  424143:	add    BYTE PTR [esi-0x298461ed],bl
  424149:	cli    
  42414a:	mov    cl,0x53
  42414c:	cdq    
  42414d:	(bad)  
  42414e:	cmp    esp,edi
  424150:	inc    edx
  424151:	add    DWORD PTR [esi],ebx
  424153:	shl    DWORD PTR [esi],1
  424155:	jne    0x424169
  424157:	or     BYTE PTR [ebp+0x79],ch
  42415a:	jmp    0x42412c
  42415c:	test   al,0x4a
  42415e:	test   DWORD PTR [ebx-0x63],0x10d02c79
  424165:	cmp    eax,0xda4f347d
  42416a:	int    0xcb
  42416c:	test   dh,0x5e
  42416f:	or     ah,BYTE PTR [edx]
  424171:	xor    eax,0x1817c65
  424176:	and    dl,dh
  424178:	dec    esi
  424179:	and    al,0xb6
  42417b:	xor    al,0x6e
  42417d:	pop    edx
  42417e:	xchg   esi,eax
  42417f:	repnz mov BYTE PTR [edx],al
  424182:	xchg   esi,eax
  424183:	xor    al,0xc6
  424185:	in     al,dx
  424186:	cwde   
  424187:	cmc    
  424188:	jp     0x42418c
  42418a:	add    BYTE PTR [eax+0x64],ah
  42418d:	div    BYTE PTR [esi]
  42418f:	sub    al,BYTE PTR [ebp-0x2]
  424192:	scas   eax,DWORD PTR es:[edi]
  424193:	call   0xd83d3a59
  424198:	jbe    0x424175
  42419a:	jge    0x4241b3
  42419c:	ins    BYTE PTR es:[edi],dx
  42419d:	adc    eax,0xbbb9afc0
  4241a2:	mov    edi,0x7fd3019f
  4241a7:	aas    
  4241a8:	add    BYTE PTR [eax],al
  4241aa:	(bad)
  4241ad:	jmp    0x81629150
  4241b2:	sahf   
  4241b3:	cli    
  4241b4:	(bad)  
  4241b5:	call   0xdfbfd900
  4241ba:	ins    DWORD PTR es:[edi],dx
  4241bb:	jl     0x42413f
  4241bd:	or     eax,0x6400029b
  4241c2:	pop    esi
  4241c3:	push   eax
  4241c4:	or     al,0x53
  4241c6:	inc    ecx
  4241c7:	leave  
  4241c8:	adc    eax,0x63705
  4241cd:	sti    
  4241ce:	pop    esi
  4241cf:	sub    DWORD PTR [edi-0x40d76087],edi
  4241d5:	aas    
  4241d6:	dec    esp
  4241d7:	dec    edi
  4241d8:	and    al,0xed
  4241da:	cdq    
  4241db:	sar    bl,cl
  4241dd:	sbb    eax,0x81e7f6c5
  4241e2:	adc    cl,cl
  4241e4:	sti    
  4241e5:	mov    edx,0x9502c1de
  4241ea:	js     0x42422e
  4241ec:	add    BYTE PTR [eax+0x64],ah
  4241ef:	out    dx,al
  4241f0:	mov    BYTE PTR [edi-0x6],ah
  4241f3:	add    al,BYTE PTR [eax]
  4241f5:	jmp    0xeb66c261
  4241fa:	sahf   
  4241fb:	add    cl,BYTE PTR [ecx-0x43b4991]
  424201:	jmp    0x9d024f
  424206:	jbe    0x4241d1
  424208:	sti    
  424209:	push   ebp
  42420a:	das    
  42420b:	mov    al,0xe8
  42420d:	adc    eax,DWORD PTR [eax]
  42420f:	add    ah,al
  424211:	add    DWORD PTR [eax],eax
  424213:	test   BYTE PTR [eax],0x1e
  424216:	or     BYTE PTR [ecx],al
  424218:	add    ah,bh
  42421a:	dec    ebp
  42421b:	call   0x38764e
  424220:	(bad)  
  424221:	mov    ebx,0x180c256
  424226:	div    DWORD PTR [esi-0xb0]
  42422c:	ret    
  42422d:	sti    
  42422e:	ror    DWORD PTR [edx+0x53e80144],cl
  424234:	stc    
  424235:	mov    bl,0xf7
  424237:	mov    ebp,DWORD PTR [edx]
  424239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42423a:	rcl    BYTE PTR ds:0xf64eb57b,cl
  424240:	pop    es
  424241:	push   DWORD PTR [ebx+0x10]
  424244:	fmulp  st(2),st
  424246:	mov    WORD PTR [edi-0x1c8],es
  42424c:	jle    0x424297
  42424e:	icebp  
  42424f:	call   0x3a1d20
  424254:	repnz sar dl,0x73
  424258:	dec    esp
  424259:	dec    eax
  42425a:	inc    esp
  42425b:	and    al,0xc
  42425d:	jp     0x42421f
  42425f:	je     0x42425b
  424261:	jg     0x424223
  424263:	add    al,0xc4
  424265:	cmp    DWORD PTR [edi],0x14
  424268:	sub    al,0x43
  42426a:	in     al,0xff
  42426c:	jnp    0x424217
  42426e:	or     ch,al
  424270:	jo     0x4242d7
  424272:	idiv   bh
  424274:	add    BYTE PTR [eax],al
  424276:	sahf   
  424277:	retf   0xf082
  42427a:	fiadd  WORD PTR [ecx+0x296c143f]
  424280:	in     al,0xff
  424282:	popf   
  424283:	sub    al,0x7d
  424285:	fwait
  424286:	jne    0x424261
  424288:	(bad)  
  424289:	jmp    DWORD PTR [ebx+0x19]
  42428c:	or     BYTE PTR [eax],al
  42428e:	push   ebx
  42428f:	ins    BYTE PTR es:[edi],dx
  424290:	retf   0x7974
  424293:	stos   DWORD PTR es:[edi],eax
  424294:	jbe    0x424287
  424296:	stos   BYTE PTR es:[edi],al
  424297:	mov    fs,WORD PTR [ebx]
  424299:	adc    BYTE PTR [ebp-0x6505129f],dh
  42429f:	push   ecx
  4242a0:	int3   
  4242a1:	test   DWORD PTR [edx+0x23f1e66c],edx
  4242a7:	ret    0x1
  4242aa:	popf   
  4242ab:	xlat   BYTE PTR ds:[ebx]
  4242ac:	push   ebx
  4242ad:	push   cs
  4242ae:	and    ch,al
  4242b0:	push   ebx
  4242b1:	or     ah,BYTE PTR [esi]
  4242b3:	sahf   
  4242b4:	and    ecx,DWORD PTR [eax+ebx*1]
  4242b7:	pushf  
  4242b8:	xrelease xchg BYTE PTR [edx-0x4e],cl
  4242bc:	inc    ebx
  4242bd:	in     eax,0x5a
  4242bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c0:	jbe    0x424285
  4242c2:	repnz or edi,DWORD PTR [esi+0x32089d08]
  4242c9:	sti    
  4242ca:	leave  
  4242cb:	cmc    
  4242cc:	test   DWORD PTR [esi+0x2453852c],0x24538c89
  4242d6:	xchg   ecx,eax
  4242d7:	shr    esp,0x15
  4242da:	add    BYTE PTR [eax],al
  4242dc:	and    bl,BYTE PTR [ebp-0x3edf278a]
  4242e2:	dec    ebp
  4242e3:	xor    eax,0xfe17540b
  4242e8:	or     bl,dl
  4242ea:	add    DWORD PTR [ecx+esi*4-0x1c],esi
  4242ee:	cmp    BYTE PTR [edx-0x2837],0x1e
  4242f5:	xchg   esp,eax
  4242f6:	repz push edx
  4242f8:	push   ss
  4242f9:	pushf  
  4242fa:	xlat   BYTE PTR ds:[ebx]
  4242fb:	fsin   
  4242fd:	add    ah,BYTE PTR [edx-0x32]
  424300:	and    BYTE PTR [eax+0x371a00d5],ch
  424306:	or     eax,0x5eb023f8
  42430b:	lds    esi,FWORD PTR [ebp-0x4931b234]
  424311:	sub    ebp,DWORD PTR [esi-0x3b]
  424314:	lds    ebx,FWORD PTR [ebx+0x23a6ce46]
  42431a:	mov    edi,DWORD PTR [edx-0x1e]
  42431d:	daa    
  42431e:	daa    
  42431f:	call   FWORD PTR [edx-0x132091d2]
  424325:	xor    DWORD PTR [ebx-0x4e08ef86],edi
  42432b:	jp     0x4242b1
  42432d:	int3   
  42432e:	push   0x1b
  424330:	jnp    0x4242f5
  424332:	jmp    0xf587673b
  424337:	std    
  424338:	push   ds
  424339:	jbe    0x424324
  42433b:	add    ebx,DWORD PTR [ebp+0xfddb7d]
  424341:	add    BYTE PTR [esi+edi*2],ah
  424344:	jmp    0xaab9e04c
  424349:	fsub   st(3),st
  42434b:	(bad)  
  42434c:	retf   0x19cd
  42434f:	ret    0x73c
  424352:	mov    edx,0xb0d9baba
  424357:	jne    0x4243bb
  424359:	and    BYTE PTR [ebx],ch
  42435b:	ret    
  42435c:	jmp    0xe82861df
  424361:	add    ebx,DWORD PTR [ebp+0x153f7031]
  424367:	jns    0x424395
  424369:	add    ch,dh
  42436b:	push   ebp
  42436c:	xchg   ch,cl
  42436e:	push   es
  42436f:	ja     0x4243b3
  424371:	sub    bl,bh
  424373:	ret    0x8be9
  424376:	popf   
  424377:	cli    
  424378:	(bad)  
  424379:	call   0xdf324f1c
  42437e:	mov    ds:0xdaac87d2,eax
  424383:	xor    eax,DWORD PTR [edi-0x40252944]
  424389:	dec    edx
  42438a:	fadd   st,st(6)
  42438c:	xchg   esp,ecx
  42438e:	shr    BYTE PTR [edi],cl
  424390:	sti    
  424391:	jle    0x424318
  424393:	(bad)  
  424394:	sti    
  424395:	jmp    0x592afacf
  42439a:	mov    dh,0xc7
  42439c:	sti    
  42439d:	pusha  
  42439e:	pop    edx
  42439f:	cli    
  4243a0:	ss das 
  4243a2:	cmc    
  4243a3:	and    bl,bh
  4243a5:	xchg   esp,eax
  4243a6:	add    BYTE PTR [eax],al
  4243a8:	data16 mov al,BYTE PTR [ebp-0x1b]
  4243ac:	popw   ss
  4243ae:	fisttp WORD PTR [esi]
  4243b0:	push   eax
  4243b1:	inc    edx
  4243b2:	jge    0x4243a5
  4243b4:	sahf   
  4243b5:	cmp    al,0x11
  4243b7:	jb     0x4243d9
  4243b9:	out    0xfd,eax
  4243bb:	call   0xe1b7cd5e
  4243c0:	in     eax,0x47
  4243c2:	or     al,0xd1
  4243c4:	xlat   BYTE PTR ds:[ebx]
  4243c5:	loope  0x4243c2
  4243c7:	(bad)  
  4243c9:	inc    edi
  4243ca:	or     BYTE PTR [edx],dh
  4243cc:	fs or  al,0x52
  4243cf:	into   
  4243d0:	jmp    0x4243dc
  4243d2:	call   0xfbff89f7
  4243d7:	push   ds
  4243d8:	or     ebx,0xffffffbe
  4243db:	loope  0x42437b
  4243dd:	push   edi
  4243de:	xchg   DWORD PTR [ebp+0x3f0caf1d],edi
  4243e4:	xchg   esp,eax
  4243e5:	aaa    
  4243e6:	adc    BYTE PTR [esi],dh
  4243e8:	xchg   esp,eax
  4243e9:	mov    ebx,0xc0a66ef2
  4243ee:	sti    
  4243ef:	jmp    0xbfcf93
  4243f4:	js     0x42444f
  4243f6:	pop    edi
  4243f7:	test   DWORD PTR [edx+0x4f],ebp
  4243fa:	pop    ebx
  4243fb:	mov    edi,DWORD PTR [ebx]
  4243fd:	fisubr WORD PTR [edx-0x7b318c03]
  424403:	sar    al,0x29
  424406:	mov    eax,0x5cc00
  42440b:	cmp    eax,DWORD PTR [eax]
  42440d:	add    BYTE PTR [eax+eax*2-0x79],ah
  424411:	sub    al,0xb6
  424413:	add    eax,0xd5f10f00
  424418:	dec    ebx
  424419:	lea    edi,[ebx]
  42441b:	mov    cl,0x0
  42441d:	add    BYTE PTR [esp+esi*8+0x3c704d88],dh
  424424:	inc    ebp
  424425:	adc    BYTE PTR [edi+edx*4+0x3ab3ffda],ch
  42442c:	pop    ebp
  42442d:	or     al,0x1
  42442f:	xchg   DWORD PTR [edx+eax*1],esp
  424432:	je     0x424439
  424434:	cmp    DWORD PTR [eax],0xffffffed
  424437:	dec    eax
  424438:	clc    
  424439:	mov    edi,DWORD PTR [ecx]
  42443b:	mov    ch,0xe3
  42443d:	adc    edx,DWORD PTR [edi-0x16000832]
  424443:	rol    DWORD PTR [ebx+0x7cdd5445],1
  424449:	loop   0x4244be
  42444b:	int    0x83
  42444d:	inc    ebp
  42444e:	ins    BYTE PTR es:[edi],dx
  42444f:	inc    ecx
  424450:	dec    ebp
  424451:	hlt    
  424452:	mov    cl,ch
  424454:	xor    bh,bh
  424456:	jns    0x424416
  424458:	jecxz  0x4244bf
  42445a:	cmp    eax,0x5f5bf7cc
  42445f:	mov    edx,0xba69ff51
  424464:	div    BYTE PTR [ebp+0xc]
  424467:	fisttp QWORD PTR [esi+0x19]
  42446a:	xor    ecx,ebp
  42446c:	push   edi
  42446d:	pop    esi
  42446e:	popf   
  42446f:	(bad)
  424474:	popf   
  424475:	idiv   BYTE PTR [edx-0x14]
  424478:	push   ds
  424479:	xchg   edi,eax
  42447a:	clc    
  42447b:	xchg   BYTE PTR [ebx+esi*4+0x32],cl
  42447f:	xchg   DWORD PTR [ecx+eiz*1-0x201a78d1],eax
  424486:	xchg   ecx,eax
  424487:	inc    ebx
  424488:	xchg   ebp,eax
  424489:	xor    al,0x4f
  42448b:	xor    al,0x86
  42448d:	cld    
  42448e:	imul   BYTE PTR [edx-0x40695813]
  424494:	jbe    0x4244f3
  424496:	jge    0x42450d
  424498:	mov    ecx,0x24045533
  42449d:	jbe    0x42446a
  42449f:	or     edi,edx
  4244a1:	jg     0x4244ae
  4244a3:	push   DWORD PTR [edx+0x1d184eab]
  4244a9:	addr16 idiv edi
  4244ac:	and    eax,0x9574c777
  4244b1:	and    al,0x3f
  4244b3:	and    BYTE PTR [edi+eiz*2],dl
  4244b6:	mul    esi
  4244b8:	mov    ds:0x26085132,eax
  4244bd:	cmp    DWORD PTR [edi],ebx
  4244bf:	xchg   esp,eax
  4244c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244c2:	sbb    bl,BYTE PTR [ebp+0x69]
  4244c5:	loope  0x42445d
  4244c7:	pop    ebx
  4244c8:	xchg   ecx,eax
  4244c9:	lods   al,BYTE PTR ds:[esi]
  4244ca:	sub    BYTE PTR [eax],cl
  4244cc:	push   edx
  4244cd:	mov    bh,0xbb
  4244cf:	adc    ch,bl
  4244d1:	test   eax,0xd85437d
  4244d6:	add    eax,0x7e000075
  4244db:	xor    al,0x40
  4244dd:	or     BYTE PTR [esi-0x5e],al
  4244e0:	jp     0x42452f
  4244e2:	and    eax,0x36080327
  4244e7:	test   al,0x7d
  4244e9:	or     BYTE PTR ds:0x5d41f303,ah
  4244ef:	sti    
  4244f0:	mov    eax,ds:0x1c040f55
  4244f5:	enter  0x4702,0x8d
  4244f9:	push   cs
  4244fa:	cmp    dh,BYTE PTR ds:0xfe49de8d
  424500:	out    0x50,al
  424502:	mov    ch,0x8b
  424504:	sub    al,0xfc
  424506:	sti    
  424507:	sbb    eax,0x3d5385e
  42450c:	xor    esi,ebx
  42450e:	mov    eax,ds:0x3cf36e28
  424513:	mov    ebx,edi
  424515:	xchg   bh,bl
  424517:	add    al,0x66
  424519:	ret    
  42451a:	mov    ebx,0xad5527fc
  42451f:	add    esi,DWORD PTR [edi+eax*8+0xe3546aa]
  424526:	loop   0x42455c
  424528:	or     bl,dh
  42452a:	(bad)  
  42452d:	push   eax
  42452e:	mov    ecx,0x83fba48b
  424533:	sbb    ebx,DWORD PTR [esi+0x38]
  424536:	test   DWORD PTR [ebx],eax
  424538:	and    esi,ebx
  42453a:	mov    ds:0x7cd98b,eax
  42453f:	add    BYTE PTR [edi-0x1400dc7d],cl
  424545:	ret    0xeed
  424548:	pop    esp
  424549:	xor    al,0xf7
  42454b:	add    eax,0x3ee6bed0
  424550:	push   ecx
  424551:	sti    
  424552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424553:	push   esi
  424554:	cmp    al,0x5f
  424556:	xor    ebp,DWORD PTR ds:0x3e5c454
  42455c:	ror    BYTE PTR [ebx+0x624183d5],1
  424562:	jmp    0x95e26a
  424567:	pop    ds
  424568:	ins    BYTE PTR es:[edi],dx
  424569:	mov    ebx,0xba99dd75
  42456e:	call   0xfbfd984d
  424573:	out    dx,al
  424574:	sub    eax,0xed2c89c2
  424579:	imul   eax,DWORD PTR [ecx],0x1729c15
  42457f:	nop
  424580:	mov    ebp,0x91e9fbbf
  424585:	xlat   BYTE PTR ds:[ebx]
  424586:	bound  esi,QWORD PTR [edx-0x59f9cb27]
  42458c:	call   0x8702:0x9ee8feb6
  424593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424594:	(bad)  
  424596:	pop    esp
  424597:	stc    
  424598:	push   edx
  424599:	or     ebp,DWORD PTR [eax+0x25076aeb]
  42459f:	inc    esp
  4245a0:	in     al,0x1
  4245a2:	add    BYTE PTR [edx+0x0],ch
  4245a5:	add    cl,ch
  4245a7:	or     DWORD PTR [ecx-0x7a732d54],ecx
  4245ad:	leave  
  4245ae:	gs mov edx,0x3865b9fb
  4245b4:	or     al,0x70
  4245b6:	ret    0x89ae
  4245b9:	mov    ah,0x6e
  4245bb:	mov    WORD PTR [ebp+0x1],ds
  4245be:	neg    BYTE PTR [edi-0x1c]
  4245c1:	cs repnz and bh,bl
  4245c5:	(bad)  
  4245c6:	push   ebp
  4245c7:	(bad)  
  4245c8:	(bad)  
  4245c9:	call   0xb157ff6c
  4245ce:	dec    edx
  4245cf:	(bad)  
  4245d0:	jmp    FWORD PTR [ebx+0x5e]
  4245d3:	cmp    BYTE PTR [ebx],al
  4245d5:	sbb    esp,DWORD PTR [ecx-0x54]
  4245d8:	retf   0x9eeb
  4245db:	add    al,BYTE PTR [edi+0x40169114]
  4245e1:	add    BYTE PTR [ebx+esi*8-0x74],al
  4245e5:	test   eax,esp
  4245e7:	retf   
  4245e8:	idiv   edi
  4245ea:	test   BYTE PTR ds:0xcbb4c445,dh
  4245f0:	into   
  4245f1:	test   DWORD PTR [ebx+edi*4-0x6c],eax
  4245f5:	ret    0xec8c
  4245f8:	icebp  
  4245f9:	cmp    al,BYTE PTR [edi+0x4e]
  4245fc:	sbb    ecx,DWORD PTR [ebx-0x7a7cfd65]
  424602:	mov    ebx,cs
  424604:	idiv   edi
  424606:	ffreep st(0)
  424608:	jge    0x42460f
  42460a:	add    BYTE PTR [eax],al
  42460c:	ffreep st(0)
  42460e:	mov    DWORD PTR [ebp+0x54],eax
  424611:	ds pop es
  424613:	mov    eax,DWORD PTR [ecx+0x5d]
  424616:	idiv   edi
  424618:	imul   ecx,DWORD PTR [esi],0xffffffc1
  42461b:	jge    0x4245ce
  42461d:	push   ds
  42461e:	ror    DWORD PTR [ecx+0x4583d601],0x70
  424625:	xchg   al,ah
  424627:	add    ch,BYTE PTR ds:0xf874bbfc
  42462d:	rol    BYTE PTR [ebp-0x7c],cl
  424630:	test   BYTE PTR [ecx],al
  424632:	add    BYTE PTR [eax],ah
  424634:	xor    BYTE PTR [ebx+eax*4+0x41de875d],bh
  42463b:	push   edi
  42463c:	stc    
  42463d:	cmp    al,0x74
  42463f:	jmp    FWORD PTR [ebx+0x418d50ca]
  424645:	ins    DWORD PTR es:[edi],dx
  424646:	push   eax
  424647:	call   DWORD PTR [edx-0x3ef03fc4]
  42464d:	cld    
  42464e:	or     bh,BYTE PTR [eax]
  424650:	sub    DWORD PTR [esi-0xa30d791],esi
  424656:	add    ecx,DWORD PTR [ebx-0x8b13f]
  42465c:	popf   
  42465d:	aam    0x7
  42465f:	sar    DWORD PTR [eax+0x24c116a6],0xee
  424666:	fild   WORD PTR [edi+0x7481309a]
  42466c:	and    dh,BYTE PTR [ebx+eax*8+0x37]
  424670:	add    BYTE PTR [eax],al
  424672:	fsub   st(5),st
  424674:	cmc    
  424675:	fdiv   QWORD PTR es:[ecx]
  424678:	inc    ecx
  424679:	call   0x55b9ee74
  42467e:	scas   al,BYTE PTR es:[edi]
  42467f:	shr    DWORD PTR [eax],cl
  424681:	div    BYTE PTR [eax-0x5e]
  424684:	pop    es
  424685:	pop    ebp
  424686:	mov    ?,WORD PTR [ebx+edi*2-0x3cc41408]
  42468d:	dec    edi
  42468e:	loop   0x42466d
  424690:	xlat   BYTE PTR ds:[ebx]
  424691:	adc    al,0x5d
  424693:	stos   DWORD PTR es:[edi],eax
  424694:	jbe    0x42468e
  424696:	xchg   esi,eax
  424697:	and    bl,dh
  424699:	or     DWORD PTR [eax+0x6afbc35c],0x54
  4246a0:	icebp  
  4246a1:	scas   eax,DWORD PTR es:[edi]
  4246a2:	lea    ebp,[ebx-0x1]
  4246a5:	push   edx
  4246a6:	dec    esi
  4246a7:	xor    ah,dl
  4246a9:	sti    
  4246aa:	nop
  4246ab:	imul   esi,eax,0x3f
  4246ae:	popf   
  4246af:	mov    al,0xce
  4246b1:	or     esp,DWORD PTR [ecx]
  4246b3:	push   es
  4246b4:	ret    
  4246b5:	sti    
  4246b6:	xchg   edx,eax
  4246b7:	xor    DWORD PTR [ecx+0x8],ecx
  4246ba:	mov    dl,BYTE PTR [ebp-0x407dae1d]
  4246c0:	fist   WORD PTR [eax]
  4246c2:	(bad)  [ecx-0x3ea2ba84]
  4246c8:	mov    esi,0xc2939975
  4246cd:	adc    eax,0x3fda49
  4246d2:	inc    esp
  4246d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246d4:	ret    0xfb
  4246d7:	add    BYTE PTR [edx+0x3],dl
  4246da:	stos   DWORD PTR es:[edi],eax
  4246db:	inc    eax
  4246dc:	push   edx
  4246dd:	add    al,BYTE PTR [ebx+0xd]
  4246e0:	loopne 0x424760
  4246e2:	loop   0x424763
  4246e4:	lods   al,BYTE PTR ds:[esi]
  4246e5:	add    ecx,ebp
  4246e7:	add    ebx,DWORD PTR [edx]
  4246e9:	inc    esi
  4246ea:	cmc    
  4246eb:	jl     0x4246cd
  4246ed:	bound  ebp,QWORD PTR [esi+0x40]
  4246f0:	inc    ecx
  4246f1:	call   0x3666f721
  4246f6:	test   DWORD PTR [eax+ebx*2+0x72],edi
  4246fa:	outs   dx,BYTE PTR ds:[esi]
  4246fb:	inc    eax
  4246fc:	std    
  4246fd:	out    0x23,eax
  4246ff:	lods   al,BYTE PTR ds:[esi]
  424700:	fiadd  WORD PTR [ebp+0x51]
  424703:	add    al,0x9d
  424705:	add    ch,cl
  424707:	jl     0x424761
  424709:	jbe    0x42477f
  42470b:	inc    eax
  42470c:	or     DWORD PTR [ebx+0x7a],edx
  42470f:	adc    BYTE PTR [ecx+0x7a],al
  424712:	es add al,0x24
  424715:	pop    esi
  424716:	inc    ecx
  424717:	jl     0x424789
  424719:	outs   dx,BYTE PTR ds:[esi]
  42471a:	(bad)  
  42471b:	lock adc DWORD PTR ss:[ecx+0x4f3e1d03],ebp
  424723:	add    al,0x22
  424725:	(bad)  
  424726:	sub    al,0xf2
  424728:	jb     0x42472c
  42472a:	mov    esp,0x25461848
  42472f:	xor    edx,DWORD PTR [eax]
  424731:	inc    esi
  424732:	sbb    eax,0xfd159633
  424737:	out    dx,eax
  424738:	rol    BYTE PTR [edx],cl
  42473a:	ins    BYTE PTR es:[edi],dx
  42473b:	ret    
  42473c:	add    BYTE PTR [eax],al
  42473e:	adc    BYTE PTR [eax],ch
  424740:	mov    bl,0xc6
  424742:	test   al,0xce
  424744:	stc    
  424745:	inc    ebx
  424746:	popf   
  424747:	mov    DWORD PTR [edi+ecx*8+0x50155db4],esp
  42474e:	mov    al,ds:0xe9d39bf9
  424753:	or     al,0x0
  424755:	call   0xaee2:0xeef03563
  42475c:	push   edx
  42475d:	out    0x3a,al
  42475f:	jnp    0x424771
  424761:	sub    DWORD PTR [ecx+0x6de14583],ebx
  424767:	lea    ecx,[ebp-0x5b]
  42476a:	push   ecx
  42476b:	adc    al,0xfd
  42476d:	(bad)  
  42476e:	pusha  
  42476f:	dec    ebx
  424770:	callw  0xcd3a
  424774:	add    cl,ch
  424776:	sahf   
  424777:	mov    bh,0x75
  424779:	fst    QWORD PTR [esi+0x38a69c5d]
  42477f:	cli    
  424780:	pop    esp
  424781:	jge    0x4247d5
  424783:	adc    DWORD PTR [esi-0x15],esp
  424786:	enter  0x132a,0xea
  42478a:	sahf   
  42478b:	add    bh,bl
  42478d:	cld    
  42478e:	repnz mov bh,0x15
  424791:	inc    ebp
  424792:	in     eax,dx
  424793:	cli    
  424794:	jmp    DWORD PTR [ecx-0x66]
  424797:	or     ah,BYTE PTR [esi-0x18]
  42479a:	dec    ebx
  42479b:	dec    ebp
  42479c:	les    edx,FWORD PTR [ecx-0x18]
  42479f:	mov    ebp,0x5efb
  4247a4:	fdiv   DWORD PTR [esp+esi*8]
  4247a7:	mov    edi,0xf9d014e1
  4247ac:	pop    esi
  4247ad:	add    al,BYTE PTR [eax+0xb01adc4]
  4247b3:	xor    BYTE PTR fs:[edx],al
  4247b6:	add    cl,ch
  4247b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247b9:	push   edi
  4247ba:	call   0x5dc4de73
  4247bf:	cli    
  4247c0:	xchg   edi,eax
  4247c1:	push   edi
  4247c2:	in     al,0x95
  4247c4:	add    ah,0x45
  4247c7:	cli    
  4247c8:	lahf   
  4247c9:	push   esp
  4247ca:	sti    
  4247cb:	hlt    
  4247cc:	sub    dl,BYTE PTR [ebx]
  4247ce:	inc    eax
  4247cf:	add    BYTE PTR [ebp+edi*1+0x45],dh
  4247d3:	hlt    
  4247d4:	pop    esp
  4247d5:	loope  0x4247e1
  4247d7:	je     0x42481b
  4247d9:	repz div BYTE PTR [ebp-0x68]
  4247dd:	mov    edi,0xbf8ae875
  4247e2:	adc    eax,0x4644c0
  4247e7:	mov    ecx,DWORD PTR [ecx-0x6e72b54a]
  4247ed:	jb     0x4247d7
  4247ef:	cdq    
  4247f0:	pusha  
  4247f1:	mov    edi,0x5c8a53f7
  4247f6:	adc    al,0xff
  4247f8:	fnstcw WORD PTR [edx+0x4943d7f6]
  4247fe:	hlt    
  4247ff:	neg    esp
  424801:	stos   BYTE PTR es:[edi],al
  424802:	mov    ebx,0x453dca40
  424807:	mov    eax,0xa9130000
  42480c:	retf   
  42480d:	adc    ah,al
  42480f:	(bad)  
  424810:	aaa    
  424811:	pop    ebp
  424812:	(bad)  
  424813:	dec    ecx
  424814:	push   es
  424815:	push   ebx
  424816:	arpl   WORD PTR [eax-0x1c],cx
  424819:	(bad)  
  42481a:	(bad)  
  42481c:	dec    esi
  42481d:	(bad)  
  42481e:	jmp    0xb48258e8
  424823:	repnz dec edx
  424825:	push   0xffffffb3
  424827:	mov    esi,0xe03c0c75
  42482c:	fwait
  42482d:	jmp    FWORD PTR [ebx+0xd]
  424830:	pop    ebp
  424831:	pushf  
  424832:	jmp    0xa46adeb
  424837:	pop    esi
  424838:	lsl    eax,WORD PTR [ebp+eax*1-0x418f8a09]
  424840:	adc    eax,0x4588a4
  424845:	mov    edi,DWORD PTR [ecx]
  424847:	mov    ebp,0x1e9d0165
  42484c:	xor    dl,ah
  42484e:	test   edi,eax
  424850:	ret    
  424851:	sti    
  424852:	push   0xffffff9c
  424854:	les    esi,FWORD PTR ds:0x4043c1
  42485a:	pop    edx
  42485b:	(bad)  
  42485c:	push   ebx
  42485d:	adc    ebp,ebx
  42485f:	stos   DWORD PTR es:[edi],eax
  424860:	fadd   DWORD PTR [edx+0x53]
  424863:	out    0xb7,al
  424865:	add    al,0xc9
  424867:	inc    esp
  424868:	std    
  424869:	pop    esp
  42486a:	dec    ecx
  42486b:	push   esi
  42486c:	or     DWORD PTR [ecx],edi
  42486e:	add    BYTE PTR [eax],al
  424870:	rcr    bl,1
  424872:	cmp    BYTE PTR [edx],cl
  424874:	into   
  424875:	sar    BYTE PTR [ecx],0xf0
  424878:	and    ch,dh
  42487a:	scas   eax,DWORD PTR es:[edi]
  42487b:	push   edx
  42487c:	sbb    dl,dh
  42487e:	mov    edi,0x52ab5d10
  424883:	lea    ebx,[eax+0x67]
  424886:	mov    eax,ebx
  424888:	cmc    
  424889:	sahf   
  42488a:	mov    ebx,0xe04fafb
  42488f:	push   edx
  424890:	test   DWORD PTR [eax-0x7f62fffe],esi
  424896:	cmp    DWORD PTR [edx+eiz*8],ecx
  424899:	int    0x63
  42489b:	adc    al,0x5d
  42489d:	stos   DWORD PTR es:[edi],eax
  42489e:	sub    eax,0xc8162001
  4248a3:	xchg   edx,esp
  4248a5:	push   edx
  4248a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a7:	test   edx,0xdd75bf57
  4248ad:	js     0x42486d
  4248af:	adc    eax,0x3fbabd
  4248b4:	push   ebx
  4248b5:	inc    eax
  4248b6:	sbb    esp,edx
  4248b8:	lea    ebp,[ebx-0x1]
  4248bb:	test   eax,esp
  4248bd:	hlt    
  4248be:	pop    esi
  4248bf:	pop    edx
  4248c0:	mul    dl
  4248c2:	ror    DWORD PTR [ebx*4-0x76b6e4fe],0xb
  4248ca:	xchg   ebp,eax
  4248cb:	loop   0x424881
  4248cd:	push   ebp
  4248ce:	add    eax,0xabf99839
  4248d3:	mov    bl,0x0
  4248d5:	add    cl,dh
  4248d7:	or     BYTE PTR [esi-0x54d173e],dl
  4248dd:	cmp    BYTE PTR [ecx+0x51],cl
  4248e0:	repnz sbb BYTE PTR [ebp+0x13],bl
  4248e4:	test   eax,0x3485da03
  4248e9:	enter  0xc01a,0xd1
  4248ed:	data16 xor bh,BYTE PTR [eax-0x4830a92e]
  4248f4:	push   esp
  4248f5:	adc    BYTE PTR [esi],ah
  4248f7:	push   cs
  4248f8:	adc    DWORD PTR [eax],ebx
  4248fa:	fld    QWORD PTR [edx]
  4248fc:	fs ret 
  4248fe:	nop
  4248ff:	popa   
  424900:	popa   
  424901:	pusha  
  424902:	or     ch,BYTE PTR [ecx+eax*4+0x54e2a0b9]
  424909:	inc    esi
  42490a:	popf   
  42490b:	(bad)  
  42490c:	xor    eax,0xe0de598f
  424911:	pop    ecx
  424912:	dec    esi
  424913:	mov    ecx,DWORD PTR ds:0x332e8ee8
  424919:	lods   al,BYTE PTR ds:[esi]
  42491a:	dec    ecx
  42491b:	jge    0x424998
  42491d:	ret    0xc321
  424920:	std    
  424921:	dec    eax
  424922:	sbb    BYTE PTR [eax-0x1239bb0b],bh
  424928:	les    edi,FWORD PTR [ebx-0x7e]
  42492b:	add    bl,BYTE PTR [edx+0x18]
  42492e:	inc    ebp
  42492f:	adc    DWORD PTR [ecx+0x64b31a03],ebp
  424935:	mov    ecx,0x61fde731
  42493a:	add    BYTE PTR [eax],al
  42493c:	cdq    
  42493d:	sub    eax,0x4fdd2e0f
  424942:	add    BYTE PTR [ecx-0x40],al
  424945:	xor    edi,edx
  424947:	sbb    eax,DWORD PTR cs:[eax+ecx*1+0x70]
  42494c:	xchg   edi,eax
  42494d:	jg     0x424991
  42494f:	std    
  424950:	sub    DWORD PTR [ebx+0x4],eax
  424953:	or     DWORD PTR [esi-0x3122bd7b],0x37
  42495a:	ret    
  42495b:	icebp  
  42495c:	(bad)  
  42495d:	stos   BYTE PTR es:[edi],al
  42495e:	xchg   ebx,eax
  42495f:	ja     0x4249bd
  424961:	mov    ebx,0xc4a6af87
  424966:	add    ch,al
  424968:	sti    
  424969:	or     DWORD PTR [ebx+0x3a],edx
  42496c:	pop    esp
  42496d:	or     eax,0x2def5e0
  424972:	pop    ebx
  424973:	aaa    
  424974:	sar    BYTE PTR [eax+0x8],1
  424977:	jmp    0x95624660
  42497c:	fadd   DWORD PTR [edx]
  42497e:	add    al,0x17
  424980:	sub    BYTE PTR [esi],ch
  424982:	and    al,0xe1
  424984:	retf   0xe817
  424987:	ret    
  424988:	adc    eax,0xd96dfbbc
  42498d:	sub    eax,0x5af29e16
  424992:	mov    eax,0x15bb992a
  424997:	add    DWORD PTR [esi-0x2693ffbe],ecx
  42499d:	sub    eax,0xc206
  4249a2:	mov    ?,esi
  4249a4:	je     0x424992
  4249a6:	leave  
  4249a7:	jbe    0x4249e9
  4249a9:	sbb    BYTE PTR [eax-0x52f28b45],0x54
  4249b0:	sti    
  4249b1:	hlt    
  4249b2:	ss push cs
  4249b4:	inc    eax
  4249b5:	jmp    0xe94ac1f6
  4249ba:	push   ebx
  4249bb:	jg     0x4249a9
  4249bd:	add    BYTE PTR [edx-0x1],ah
  4249c0:	pop    ds
  4249c1:	lods   al,BYTE PTR ds:[esi]
  4249c2:	inc    edi
  4249c3:	add    al,BYTE PTR [esi+edx*2]
  4249c6:	xor    eax,DWORD PTR [edi-0x44aff783]
  4249cc:	jecxz  0x424975
  4249ce:	lock shl bh,0x84
  4249d2:	(bad)  
  4249d3:	cli    
  4249d4:	and    eax,0xb85651ff
  4249d9:	inc    ebx
  4249da:	je     0x42499f
  4249dc:	adc    eax,0x424568
  4249e1:	mov    edx,DWORD PTR [ebp+edi*2-0x12]
  4249e5:	je     0x424a4f
  4249e7:	mov    bh,0x79
  4249e9:	add    al,0xd1
  4249eb:	sbb    ch,dh
  4249ed:	inc    ebp
  4249ee:	inc    esp
  4249ef:	ret    0x974
  4249f2:	pop    ebx
  4249f3:	in     eax,dx
  4249f4:	or     edi,edi
  4249f6:	xor    DWORD PTR [esi+0x10],ebx
  4249f9:	inc    eax
  4249fa:	xor    al,0x87
  4249fc:	ds or  dl,dh
  4249ff:	or     eax,DWORD PTR [ecx]
  424a01:	jmp    0x424a0c
  424a03:	ret    
  424a04:	jne    0x424a16
  424a06:	add    BYTE PTR [eax],al
  424a08:	dec    ebx
  424a09:	in     eax,dx
  424a0a:	or     edx,DWORD PTR [edi+0x3b]
  424a0d:	or     eax,0xfeb41548
  424a12:	push   esi
  424a13:	pop    esi
  424a14:	mov    ecx,0x12000cbc
  424a19:	std    
  424a1a:	pop    ds
  424a1b:	lods   al,BYTE PTR ds:[esi]
  424a1c:	mov    bh,0xfe
  424a1e:	add    edx,DWORD PTR [esi+0x6f]
  424a21:	in     eax,dx
  424a22:	and    ecx,DWORD PTR [eax]
  424a24:	shr    BYTE PTR [ebx-0x3cbfb01d],1
  424a2a:	test   DWORD PTR [esp+esi*8-0x5e00e313],0xc443b822
  424a35:	ret    0x6815
  424a38:	popf   
  424a39:	mov    edx,0xec20003f
  424a3e:	xor    cl,BYTE PTR ds:0x75037b66
  424a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a45:	(bad)  
  424a47:	add    BYTE PTR [esi],ah
  424a49:	imul   eax,DWORD PTR [edi],0xffffffe7
  424a4c:	mov    ds:0x7515c08d,al
  424a51:	mov    bh,0x3f
  424a53:	add    bl,bl
  424a55:	jmp    0xa6ad4a5c
  424a5a:	fild   QWORD PTR [ebx+0x5203abde]
  424a60:	push   ss
  424a61:	aaa    
  424a62:	jecxz  0x424a6b
  424a64:	sar    DWORD PTR [ebp-0x52e6ef59],1
  424a6a:	mov    ebx,0x5d000084
  424a6f:	das    
  424a70:	sbb    bh,bl
  424a72:	mov    BYTE PTR [edi],bh
  424a74:	jl     0x424ab5
  424a76:	popf   
  424a77:	aam    0x19
  424a79:	push   0x8503eb8c
  424a7e:	pop    ebp
  424a7f:	dec    edi
  424a80:	adc    DWORD PTR [edi],esi
  424a82:	lods   eax,DWORD PTR ds:[esi]
  424a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a84:	cmp    BYTE PTR [eax],cl
  424a86:	jecxz  0x424a32
  424a88:	add    al,0x87
  424a8a:	pop    ebp
  424a8b:	mov    ds:0x647303a6,eax
  424a90:	sbb    esp,ecx
  424a92:	test   eax,0xdf5a03eb
  424a97:	sahf   
  424a98:	push   ecx
  424a9a:	cwde   
  424a9b:	retf   
  424a9c:	imul   edi,DWORD PTR [edi],0xffffff9d
  424a9f:	lahf   
  424aa0:	push   ebp
  424aa1:	xchg   DWORD PTR [ecx-0x39],ebp
  424aa4:	or     esi,DWORD PTR [esi+edi*2-0x6d]
  424aa8:	aad    0x7f
  424aaa:	shr    DWORD PTR [ebx],cl
  424aac:	mov    al,al
  424aae:	push   ecx
  424aaf:	sar    DWORD PTR [edx-0x5efd9ecb],1
  424ab5:	inc    ebx
  424ab6:	popf   
  424ab7:	mov    ch,0xf4
  424ab9:	sub    ecx,DWORD PTR [edx+eax*2+0x2ddd88e9]
  424ac0:	(bad)  
  424ac2:	xor    cl,BYTE PTR [edx]
  424ac4:	mov    esp,0xa9c2ca08
  424ac9:	stos   BYTE PTR es:[edi],al
  424aca:	call   0x2a06:0xc138324c
  424ad1:	sbb    DWORD PTR [eax],eax
  424ad3:	add    ch,bl
  424ad5:	or     eax,0xc0d703a9
  424ada:	icebp  
  424adb:	add    ecx,eax
  424add:	xchg   DWORD PTR ds:0x3ce2a0b6,eax
  424ae3:	inc    ebx
  424ae4:	popf   
  424ae5:	(bad)  
  424ae6:	xchg   ebp,eax
  424ae7:	mov    bh,al
  424ae9:	or     dl,BYTE PTR [ebx+0x63aac637]
  424aef:	add    DWORD PTR [edi-0x4c],0x65
  424af3:	(bad)  
  424af4:	leave  
  424af5:	sbb    al,0xe2
  424af7:	clc    
  424af8:	(bad)  
  424af9:	jp     0x424b21
  424afb:	add    al,0x36
  424afd:	push   cs
  424afe:	inc    ecx
  424aff:	adc    eax,0xb35e02dd
  424b04:	sbb    BYTE PTR [ebp+0x54d2583d],ch
  424b0a:	in     eax,0x38
  424b0c:	data16 jg 0x424b43
  424b0f:	adc    BYTE PTR [ebp-0x52d625d2],bl
  424b15:	test   DWORD PTR [ebx],ebp
  424b17:	adc    BYTE PTR [ebp-0x7b],cl
  424b1a:	and    al,0x10
  424b1c:	dec    ebp
  424b1d:	stos   BYTE PTR es:[edi],al
  424b1e:	xchg   DWORD PTR [edi],esi
  424b20:	out    0xb3,eax
  424b22:	inc    ax
  424b24:	lea    eax,[edx]
  424b26:	std    
  424b27:	lock outs dx,DWORD PTR ds:[esi]
  424b29:	mov    bl,0xf3
  424b2b:	or     edx,esi
  424b2d:	or     eax,0x42aea500
  424b32:	add    BYTE PTR [ebx],al
  424b34:	cdq    
  424b35:	mov    bh,0x72
  424b37:	icebp  
  424b38:	add    BYTE PTR [eax],al
  424b3a:	daa    
  424b3b:	mov    ebx,0xb74ff566
  424b40:	adc    eax,0x428f35
  424b45:	push   esi
  424b46:	(bad)  
  424b47:	or     eax,eax
  424b49:	sahf   
  424b4a:	pop    ebx
  424b4b:	xor    BYTE PTR [eax],cl
  424b4d:	test   eax,0x361c4021
  424b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b53:	rcl    BYTE PTR [eax],cl
  424b55:	test   eax,0x292f579e
  424b5a:	fimul  WORD PTR [edx-0x4872edfe]
  424b60:	jne    0x424b5b
  424b62:	sub    ebp,DWORD PTR ds:0xd23ba0c
  424b68:	in     al,0xdd
  424b6a:	fiadd  WORD PTR [edx]
  424b6c:	pop    edx
  424b6d:	mov    ds:0xe90c74bd,al
  424b72:	in     eax,0x7b
  424b74:	in     al,dx
  424b75:	neg    DWORD PTR [edx-0x5ed5541e]
  424b7b:	dec    BYTE PTR [esi+0x72]
  424b7e:	ror    BYTE PTR [edx],cl
  424b80:	push   edx
  424b81:	pop    ebp
  424b82:	jno    0x424b2e
  424b84:	imul   DWORD PTR [ebx-0x1d]
  424b87:	mov    dh,0x84
  424b89:	test   eax,0xf4fb1fd5
  424b8e:	jb     0x424c0a
  424b90:	aas    
  424b91:	jmp    0xd8aa58df
  424b96:	pop    esi
  424b97:	add    al,BYTE PTR [edi+0x74b02299]
  424b9d:	xor    al,0x0
  424b9f:	add    ah,dh
  424ba1:	pop    eax
  424ba2:	add    al,0x1c
  424ba4:	push   ecx
  424ba5:	mov    bh,0x72
  424ba7:	icebp  
  424ba8:	and    DWORD PTR [eax],esi
  424baa:	adc    al,0x0
  424bac:	and    ebp,esp
  424bae:	ud0    ecx,edx
  424bb1:	add    dh,bh
  424bb3:	jne    0x424b75
  424bb5:	jne    0x424bcc
  424bb7:	enter  0x3ee4,0x0
  424bbb:	add    ecx,0xe
  424bbe:	add    BYTE PTR [ecx+eiz*4+0x4d],dh
  424bc2:	div    DWORD PTR [esi-0x44]
  424bc5:	jne    0x424bdc
  424bc7:	int3   
  424bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bc9:	add    BYTE PTR ds:[edx-0x7c],ch
  424bcd:	outs   dx,DWORD PTR ds:[esi]
  424bce:	outs   dx,BYTE PTR ds:[esi]
  424bcf:	or     BYTE PTR [edi],cl
  424bd1:	outs   dx,DWORD PTR ds:[esi]
  424bd2:	bound  edx,QWORD PTR [edi+eiz*1]
  424bd5:	outs   dx,DWORD PTR ds:[esi]
  424bd6:	adc    eax,0x4667dc
  424bdb:	neg    esp
  424bdd:	or     eax,eax
  424bdf:	push   edi
  424be0:	xchg   ebx,eax
  424be1:	clc    
  424be2:	pop    es
  424be3:	inc    eax
  424be4:	std    
  424be5:	dec    eax
  424be6:	sbb    al,0xff
  424be8:	imul   edx,esi,0x4f444010
  424bee:	bound  eax,QWORD PTR [edx]
  424bf0:	jp     0x424bfa
  424bf2:	add    DWORD PTR [eax-0x61],ebx
  424bf5:	add    edi,esi
  424bf7:	jne    0x424c5d
  424bf9:	outs   dx,DWORD PTR ds:[esi]
  424bfa:	jne    0x424c08
  424bfc:	ja     0x424c6d
  424bfe:	adc    eax,0x4628c0
  424c03:	pop    esi
  424c04:	add    BYTE PTR [eax],al
  424c06:	outs   dx,DWORD PTR ds:[esi]
  424c07:	push   ecx
  424c08:	mov    edx,0x8359340c
  424c0d:	in     al,dx
  424c0e:	pop    DWORD PTR [esi+0x6040180]
  424c14:	sub    esp,0x9d4
  424c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c1b:	pop    eax
  424c1c:	test   eax,eax
  424c1e:	cwde   
  424c1f:	or     ah,BYTE PTR [edx+0x0]
  424c22:	mov    ah,0x6f
  424c24:	adc    eax,0x3fac9d10
  424c29:	add    BYTE PTR [eax-0x62000163],ah
  424c2f:	mov    eax,0x9b9df383
  424c34:	dec    DWORD PTR [edx+ebp*1-0x62000148]
  424c3b:	and    al,0xb0
  424c3d:	call   0xfbff1dd1
  424c42:	and    BYTE PTR [edi+0x58aaf6e1],dl
  424c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c49:	dec    edx
  424c4a:	in     al,0x40
  424c4c:	mov    esp,0xff9a2f05
  424c51:	inc    DWORD PTR [edi]
  424c53:	fmul   DWORD PTR [edi+0x66]
  424c56:	popf   
  424c57:	xor    al,BYTE PTR es:[eax-0x17441ce2]
  424c5e:	xor    edx,DWORD PTR [esi-0x43]
  424c61:	sti    
  424c62:	sbb    bl,bl
  424c64:	cmp    al,0x1d
  424c66:	push   ss
  424c67:	loope  0x424cb7
  424c69:	push   0xef1d0000
  424c6e:	aas    
  424c6f:	add    BYTE PTR [eax],ch
  424c71:	push   ds
  424c72:	paddw  mm2,QWORD PTR [edx-0x50]
  424c76:	dec    esi
  424c77:	call   0x41d0d0
  424c7c:	sbb    bl,bl
  424c7e:	or     edx,DWORD PTR [ebp+0x75c41f5d]
  424c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c85:	or     al,0xc4
  424c87:	bound  edx,QWORD PTR [esi+ebx*1]
  424c8a:	adc    al,0xfd
  424c8c:	and    al,al
  424c8e:	jge    0x424c7a
  424c90:	pushf  
  424c91:	fwait
  424c92:	dec    DWORD PTR [eax+ebx*1+0xafbbafd]
  424c99:	popa   
  424c9a:	add    al,0x0
  424c9c:	pop    ebp
  424c9d:	loop   0x424ccf
  424c9f:	stc    
  424ca0:	dec    esp
  424ca1:	add    dh,BYTE PTR [ecx+eax*4-0x6b]
  424ca5:	mov    cl,0x9a
  424ca7:	mov    ebx,0x4d641a4d
  424cac:	scas   al,BYTE PTR es:[edi]
  424cad:	fild   DWORD PTR [eax-0x7d4fe2a8]
  424cb3:	cs pop ecx
  424cb5:	push   eax
  424cb6:	adc    ecx,DWORD PTR [ecx+0x3ff5a60]
  424cbc:	ins    DWORD PTR es:[edi],dx
  424cbd:	mov    cl,0xd4
  424cbf:	out    dx,eax
  424cc0:	mov    WORD PTR [edx-0x17],es
  424cc3:	xchg   cl,bl
  424cc5:	std    
  424cc6:	pop    ecx
  424cc7:	xor    ebx,DWORD PTR [ecx-0x59e39381]
  424ccd:	mov    al,0x4a
  424ccf:	lea    eax,[eax]
  424cd1:	add    BYTE PTR [eax],dl
  424cd3:	pop    ebx
  424cd4:	jo     0x424d17
  424cd6:	dec    ebp
  424cd7:	mov    al,0xd4
  424cd9:	das    
  424cda:	lods   al,BYTE PTR ds:[esi]
  424cdb:	inc    edx
  424cdc:	jmp    0x99f52569
  424ce1:	mov    al,ah
  424ce3:	pop    edx
  424ce4:	mov    ecx,0x111a9d2d
  424ce9:	mov    ds,ebp
  424ceb:	add    ah,BYTE PTR [ecx+eax*4-0x73]
  424cef:	lods   eax,DWORD PTR ds:[esi]
  424cf0:	or     bh,BYTE PTR [ebx+0x2fda9aed]
  424cf6:	push   esi
  424cf7:	mov    al,0x64
  424cf9:	(bad)  
  424cfa:	rol    BYTE PTR [esi],1
  424cfc:	mov    bh,0xc3
  424cfe:	cmp    dh,ah
  424d00:	jle    0x424d15
  424d02:	sub    BYTE PTR [esi-0x27],al
  424d05:	push   ebx
  424d06:	loop   0x424ca2
  424d08:	jecxz  0x424d40
  424d0a:	daa    
  424d0b:	mov    al,0x41
  424d0d:	lods   al,BYTE PTR ds:[esi]
  424d0e:	and    dh,BYTE PTR [eax-0x1714517]
  424d14:	rcl    DWORD PTR [eax],0xad
  424d17:	adc    ebp,DWORD PTR [ecx]
  424d19:	add    al,0x20
  424d1b:	ret    
  424d1c:	add    BYTE PTR ds:0xae0028aa,bh
  424d22:	rep lods al,BYTE PTR ds:[esi]
  424d24:	adc    eax,0x428819
  424d29:	jb     0x424d5e
  424d2b:	fwait
  424d2c:	es sbb al,0x26
  424d2f:	lods   al,BYTE PTR ds:[esi]
  424d30:	out    0xa2,eax
  424d32:	dec    esi
  424d33:	add    DWORD PTR [edx+0x22],ebx
  424d36:	add    BYTE PTR [eax],al
  424d38:	loopne 0x424da9
  424d3a:	push   ebp
  424d3b:	jb     0x424d3f
  424d3d:	xor    ah,ah
  424d3f:	jno    0x424d5c
  424d41:	lahf   
  424d42:	and    BYTE PTR [edi],dl
  424d44:	dec    esi
  424d45:	sub    BYTE PTR [ecx],al
  424d47:	lea    bp,[esi+0x529ea910]
  424d4e:	sti    
  424d4f:	cld    
  424d50:	sahf   
  424d51:	adc    DWORD PTR [eax-0x17],eax
  424d54:	push   edi
  424d55:	cmc    
  424d56:	arpl   WORD PTR [ecx-0x378fd25],ax
  424d5c:	pop    edx
  424d5d:	add    BYTE PTR [eax-0x17],al
  424d60:	inc    edi
  424d61:	rol    DWORD PTR [edi+0x40163af4],cl
  424d67:	jmp    0x29c792af
  424d6c:	mov    edx,0x42ad873f
  424d71:	push   DWORD PTR [esi]
  424d73:	in     al,0x7e
  424d75:	push   0x3f
  424d77:	jmp    0x7dc14309
  424d7c:	push   0x13
  424d7e:	cld    
  424d7f:	jl     0x424db5
  424d81:	bound  ebp,QWORD PTR [eax+0x31]
  424d84:	jecxz  0x424d88
  424d86:	callw  0x837f
  424d8a:	and    al,0xfd
  424d8c:	sub    edx,DWORD PTR [ebx]
  424d8e:	add    ecx,ebp
  424d90:	sahf   
  424d91:	sbb    bl,BYTE PTR [eax-0x6f]
  424d94:	pusha  
  424d95:	add    ch,al
  424d97:	add    dh,bl
  424d99:	jo     0x424d92
  424d9b:	inc    DWORD PTR [eax]
  424d9d:	add    BYTE PTR [edi-0x484797f9],cl
  424da3:	push   es
  424da4:	mov    BYTE PTR [ecx+0x3a0],al
  424daa:	cmp    ebx,DWORD PTR [edi+0x6b7b85f]
  424db0:	not    edi
  424db2:	sahf   
  424db3:	push   es
  424db4:	bound  eax,QWORD PTR [eax]
  424db6:	sahf   
  424db7:	imul   ecx,DWORD PTR [ebp+0x500ae044],0xf88532ff
  424dc1:	inc    ecx
  424dc3:	sbb    ebp,DWORD PTR [ebx]
  424dc5:	leave  
  424dc6:	inc    ecx
  424dc7:	(bad)  
  424dc8:	push   edi
  424dc9:	wrmsr  
  424dcb:	(bad)  
  424dcc:	push   esi
  424dcd:	mov    esp,DWORD PTR [ecx+0x57]
  424dd0:	mov    ebx,0x815a3f55
  424dd5:	in     al,dx
  424dd6:	cld    
  424dd7:	push   es
  424dd8:	add    BYTE PTR [eax],al
  424dda:	xor    dl,BYTE PTR [ebx-0x9]
  424ddd:	jne    0x424d6b
  424ddf:	jg     0x424dd9
  424de1:	call   0x397db5
  424de6:	pop    ebx
  424de7:	xor    eax,eax
  424de9:	mov    DWORD PTR [ecx+0x5e],eax
  424dec:	test   al,0x1
  424dee:	jnp    0x424e1d
  424df0:	add    DWORD PTR ds:[edx+eax*1-0x73],esi
  424df5:	inc    ebp
  424df6:	lods   al,BYTE PTR ds:[esi]
  424df7:	push   esi
  424df8:	div    DWORD PTR [ebp+0x4c]
  424dfb:	imul   edx,DWORD PTR ds:0x4267e4,0xffffff85
  424e02:	add    BYTE PTR [eax],al
  424e04:	je     0x424df8
  424e06:	sub    ebp,DWORD PTR [edx+0x46]
  424e09:	test   DWORD PTR [edi],edi
  424e0b:	push   eax
  424e0c:	je     0x424e79
  424e0e:	jne    0x424e08
  424e10:	mov    ecx,0x9d503c42
  424e15:	and    BYTE PTR [eax+0x4c],al
  424e18:	sub    BYTE PTR [edi+0x37],cl
  424e1b:	sti    
  424e1c:	adc    al,ch
  424e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e1f:	pop    esi
  424e20:	inc    ecx
  424e21:	pushf  
  424e22:	dec    DWORD PTR [eax+ebx*1-0x504470c]
  424e29:	or     ebp,DWORD PTR [eax+edi*8-0x780063c1]
  424e30:	pusha  
  424e31:	mov    WORD PTR [esp+eax*1+0xb8dedb],gs
  424e38:	sbb    eax,0x2600b8ff
  424e3d:	outs   dx,DWORD PTR ds:[esi]
  424e3e:	sub    edx,DWORD PTR [ecx]
  424e40:	pop    ebp
  424e41:	fwait
  424e42:	sub    ecx,DWORD PTR [ecx-0x35]
  424e45:	fisubr WORD PTR [edi-0x4727cff0]
  424e4b:	jae    0x424dee
  424e4d:	and    al,0xd1
  424e4f:	or     esi,edx
  424e51:	pop    eax
  424e52:	add    ecx,DWORD PTR [ebx]
  424e54:	jmp    0xcab:0x7dc10760
  424e5b:	shl    DWORD PTR [edx-0x65aff3d4],0x34
  424e62:	inc    esp
  424e63:	add    al,0x5c
  424e65:	cmp    ecx,DWORD PTR [edi]
  424e67:	pop    es
  424e68:	add    BYTE PTR [eax],al
  424e6a:	pop    esp
  424e6b:	mov    edi,DWORD PTR [eax+0x29e4a573]
  424e71:	or     BYTE PTR [edx-0x4a],ch
  424e74:	repz adc ebx,ebp
  424e77:	fwait
  424e78:	jp     0x424e3a
  424e7a:	shr    DWORD PTR [eax+0x2c52642d],1
  424e80:	add    edi,ebx
  424e82:	mov    al,0xcb
  424e84:	adc    al,0x40
  424e86:	popf   
  424e87:	push   ds
  424e88:	mov    edi,0xfeeb210b
  424e8d:	call   FWORD PTR [ebp+0x288cd102]
  424e93:	lods   eax,DWORD PTR ds:[esi]
  424e94:	fiadd  DWORD PTR [eax-0x74b4c9a3]
  424e9a:	pop    esi
  424e9b:	adc    bh,BYTE PTR [edi]
  424e9d:	adc    al,0x62
  424e9f:	pop    es
  424ea0:	fld    QWORD PTR [ebx*4-0x7653e6fe]
  424ea7:	xor    esi,DWORD PTR [ebx-0x22cb0949]
  424ead:	mov    dh,0xcf
  424eaf:	lods   al,BYTE PTR ds:[esi]
  424eb0:	sbb    al,0xc
  424eb2:	sub    DWORD PTR [esi-0x526ad066],0x5a
  424eb9:	mov    WORD PTR [edx+eax*1-0x2d574917],ds
  424ec0:	(bad)  
  424ec1:	inc    ebx
  424ec2:	popf   
  424ec3:	xchg   DWORD PTR [ecx-0x7ee57ad0],ebp
  424ec9:	add    ebx,DWORD PTR [ebp+0x2f6a02]
  424ecf:	add    BYTE PTR [ecx-0x65ec0353],ah
  424ed5:	inc    edx
  424ed6:	jmp    0xf8792c5b
  424edb:	mov    bl,dh
  424edd:	adc    ch,BYTE PTR [ecx+0x7c]
  424ee0:	mov    ecx,0x9c03e901
  424ee5:	xor    eax,0xabd889df
  424eea:	ds pop esp
  424eec:	add    eax,DWORD PTR [ebx]
  424eee:	pop    esp
  424eef:	outs   dx,DWORD PTR ds:[esi]
  424ef0:	icebp  
  424ef1:	add    ecx,ebp
  424ef3:	add    esp,DWORD PTR [esi-0xb]
  424ef6:	sbb    DWORD PTR [ecx],edx
  424ef8:	in     eax,dx
  424ef9:	adc    DWORD PTR [ecx-0x69dabafd],ebp
  424eff:	mov    dh,0x56
  424f01:	js     0x424eaf
  424f03:	pop    es
  424f04:	dec    esi
  424f05:	inc    ebx
  424f06:	lds    eax,FWORD PTR [ebx]
  424f08:	popf   
  424f09:	add    al,BYTE PTR [eax]
  424f0b:	test   eax,0x6a4ef56d
  424f10:	pop    ecx
  424f11:	pop    es
  424f12:	push   eax
  424f13:	je     0x424ef2
  424f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f16:	push   eax
  424f17:	fimul  WORD PTR [ebp-0x5ed6ec0e]
  424f1d:	and    al,0x2
  424f1f:	pop    esp
  424f20:	pop    ebp
  424f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f22:	push   eax
  424f23:	(bad)  
  424f24:	jnp    0x424f7c
  424f26:	add    ecx,ebp
  424f28:	sahf   
  424f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2a:	adc    eax,0x428d29
  424f2f:	inc    ebx
  424f30:	call   0x5d00:0x740624
  424f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f38:	push   eax
  424f39:	sahf   
  424f3a:	jae    0x424f92
  424f3c:	add    ecx,ebp
  424f3e:	sahf   
  424f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f40:	adc    eax,0x42a2d5
  424f45:	cmp    DWORD PTR [ecx-0x234fa5b9],esp
  424f4b:	cli    
  424f4c:	call   FWORD PTR [ebx]
  424f4e:	es lahf 
  424f50:	jg     0x424ed7
  424f52:	imul   BYTE PTR [ebx]
  424f54:	in     al,dx
  424f55:	add    eax,0x5b87504e
  424f5a:	pop    ss
  424f5b:	inc    ecx
  424f5c:	adc    al,0xbe
  424f5e:	pop    ebx
  424f5f:	add    bh,BYTE PTR [ecx+ebp*8]
  424f62:	sahf   
  424f63:	add    bh,bl
  424f65:	mov    edi,0x54c799a
  424f6a:	test   eax,0x76dcfb51
  424f6f:	cmovo  ebp,ecx
  424f72:	sbb    eax,0x106d0bc2
  424f77:	add    al,BYTE PTR [eax]
  424f79:	jmp    0x62568f95
  424f7e:	out    0xe6,al
  424f80:	repnz sub BYTE PTR [esi-0xbfffffe],bl
  424f87:	fiadd  DWORD PTR [ecx*4+0x5e2abc2]
  424f8e:	mov    edi,0x58c77ab5
  424f93:	pop    esp
  424f94:	rol    DWORD PTR [eax],0x34
  424f97:	dec    DWORD PTR [edi]
  424f99:	je     0x424f9b
  424f9b:	add    BYTE PTR [esi+0x79],dh
  424f9e:	sbb    eax,0x3f1830
  424fa3:	push   edi
  424fa4:	xchg   esi,eax
  424fa6:	adc    al,0x50
  424fa8:	xchg   ecx,eax
  424fa9:	inc    edx
  424faa:	and    al,0x1c
  424fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fad:	jne    0x424f7a
  424faf:	test   DWORD PTR [ebp+eax*1-0x6b],eax
  424fb3:	sar    BYTE PTR [eax-0x3a],0x75
  424fb7:	sub    eax,0x8313ec6f
  424fbc:	xor    al,0x12
  424fbe:	push   eax
  424fbf:	(bad)  
  424fc0:	fxch   st(2)
  424fc2:	cmovo  eax,esp
  424fc5:	sub    eax,eax
  424fc7:	je     0x424f6f
  424fc9:	jns    0x425009
  424fcb:	adc    al,0xab
  424fcd:	add    eax,0x44839404
  424fd3:	and    al,0xe0
  424fd5:	dec    esi
  424fd6:	not    ebx
  424fd8:	cmp    esi,eax
  424fda:	pop    es
  424fdb:	xchg   ebp,eax
  424fdc:	je     0x425037
  424fde:	cli    
  424fdf:	xor    esp,eax
  424fe1:	add    al,0x74
  424fe4:	stos   BYTE PTR es:[edi],al
  424fe5:	outs   dx,DWORD PTR ds:[esi]
  424fe6:	outs   dx,BYTE PTR ds:[esi]
  424fe7:	adc    al,0xf
  424fe9:	test   eax,0xe9874f6
  424fee:	sbb    edi,0xffffffdc
  424ff1:	pop    esp
  424ff2:	std    
  424ff3:	inc    ebx
  424ff5:	jnp    0x424ff5
  424ff7:	dec    BYTE PTR [eax]
  424ff9:	retf   0x8907
  424ffc:	cmp    dl,cl
  424ffe:	jnp    0x59df5004
  425004:	or     ecx,DWORD PTR [ecx-0x5184027]
  42500a:	mov    al,0xab
  42500c:	adc    BYTE PTR [eax-0x63],al
  42500f:	push   ds
  425010:	les    esi,FWORD PTR [esi+eiz*4-0x75]
  425014:	add    BYTE PTR [ecx+edi*2-0x31],0x4f
  425019:	call   0xfbf6fcf8
  42501e:	ret    0x73e9
  425021:	add    DWORD PTR [esi+0x24],esi
  425024:	call   0x6cec:0x88eede5d
  42502b:	or     al,0x83
  42502d:	inc    ebp
  42502e:	add    DWORD PTR [ebx+eax*4],ecx
  425031:	pop    ecx
  425032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425033:	ret    
  425034:	ins    DWORD PTR es:[edi],dx
  425035:	int    0xf2
  425037:	pop    eax
  425038:	mov    BYTE PTR [ebp-0x67],cl
  42503b:	xor    bh,dh
  42503d:	push   esi
  42503e:	sbb    BYTE PTR [edx+ebp*1+0x4],bl
  425042:	(bad)  
  425043:	pop    ebx
  425044:	test   al,0x16
  425046:	push   ds
  425047:	div    DWORD PTR [edi-0x7f4aacff]
  42504d:	jge    0x424fe4
  42504f:	ins    DWORD PTR es:[edi],dx
  425050:	xor    BYTE PTR [esi+ebp*2],al
  425053:	pop    ebx
  425054:	test   al,0xff
  425056:	outs   dx,DWORD PTR ds:[esi]
  425057:	pop    ebx
  425058:	aas    
  425059:	xchg   DWORD PTR [eax-0x55],ebx
  42505c:	xchg   DWORD PTR [ecx],eax
  42505e:	in     eax,dx
  42505f:	call   0x874a:0x9ba9bec6
  425066:	add    BYTE PTR [eax],al
  425068:	sbb    DWORD PTR [ebx+ebx*4],0x34f1ef8
  42506f:	dec    edi
  425070:	jmp    0x4250a6
  425072:	scas   al,BYTE PTR es:[edi]
  425073:	push   ebx
  425074:	sub    BYTE PTR [ecx+0x249d6607],dl
  42507a:	ror    BYTE PTR [ecx+0x1bcd02f1],0x75
  425081:	fild   QWORD PTR ds:0x297e56b4
  425087:	das    
  425088:	fldcw  WORD PTR [ecx+0x2d23ff96]
  42508e:	cmc    
  42508f:	mov    ah,0x72
  425091:	call   0xc36d:0x29d2faf
  425098:	test   eax,0x99305e13
  42509d:	call   0x48a3:0x29d38ec
  4250a4:	rcl    DWORD PTR ds:0x2edd87e8,0xe4
  4250ab:	leave  
  4250ac:	popa   
  4250ad:	(bad)  
  4250af:	add    ebx,DWORD PTR [edx]
  4250b1:	inc    ebp
  4250b2:	in     eax,dx
  4250b3:	xchg   BYTE PTR [ebp-0x26],dh
  4250b6:	call   0x553b3b39
  4250bb:	les    ecx,FWORD PTR [ebp-0x66]
  4250be:	add    eax,eax
  4250c0:	out    0xa8,al
  4250c2:	imul   esi,DWORD PTR [eax],0x38e91581
  4250c8:	mov    al,ds:0xe8157d
  4250cd:	add    BYTE PTR [esi+0x6f0cab85],ch
  4250d3:	call   0x495e:0xa8b7ce7c
  4250da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250db:	call   0x51c2:0xa8a692bd
  4250e2:	in     eax,dx
  4250e3:	add    bh,BYTE PTR [esi+0x2746807e]
  4250e9:	or     BYTE PTR [ebp-0x5eba6d09],bl
  4250ef:	push   edx
  4250f0:	push   ecx
  4250f1:	ficom  DWORD PTR [eax-0x58]
  4250f4:	cmp    bh,BYTE PTR [edi-0x17]
  4250f7:	fdivp  st(7),st
  4250f9:	loopne 0x4250ec
  4250fb:	add    DWORD PTR [edi-0x3e037d5b],eax
  425101:	jmp    0xe102289f
  425106:	mov    eax,ds:0x5b2994fb
  42510b:	idiv   edi
  42510d:	popa   
  42510e:	aad    0xde
  425110:	add    edx,DWORD PTR [ecx]
  425112:	push   es
  425113:	(bad)  
  425114:	sti    
  425115:	(bad)  
  425116:	scas   al,BYTE PTR es:[edi]
  425117:	add    DWORD PTR [esi-0x4e046113],edi
  42511d:	test   al,0xa2
  42511f:	daa    
  425120:	call   0x4838bc0e
  425125:	push   ebp
  425126:	mov    ds:0x86aabfd7,al
  42512b:	push   cs
  42512c:	mov    esi,0xb867b6b9
  425131:	fiadd  DWORD PTR [eax]
  425133:	add    al,bl
  425135:	sar    BYTE PTR [eax-0x56],cl
  425138:	push   ebp
  425139:	jg     0x425127
  42513b:	push   0x3a
  42513d:	stos   DWORD PTR es:[edi],eax
  42513e:	cmp    DWORD PTR [ebp-0x170000ee],0x7253544b
  425148:	or     esp,edi
  42514a:	mov    cl,0x2e
  42514c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42514d:	daa    
  42514e:	call   0x24689b3c
  425153:	loope  0x4250df
  425155:	or     eax,0xc4d8f448
  42515a:	inc    esp
  42515b:	int    0xb2
  42515d:	or     DWORD PTR [eax],eax
  42515f:	jmp    0xd871502
  425164:	test   edx,esi
  425166:	je     0x425151
  425168:	sahf   
  425169:	lahf   
  42516a:	adc    BYTE PTR [esi],ch
  42516c:	fcmovu st,st(6)
  42516e:	or     esi,ebp
  425170:	sahf   
  425171:	add    al,BYTE PTR [eax]
  425173:	add    BYTE PTR [ebx+0x6414243f],dh
  425179:	test   DWORD PTR [eax],eax
  42517b:	add    bl,al
  42517d:	aas    
  42517e:	and    al,0x10
  425180:	jle    0x425185
  425182:	add    BYTE PTR [eax],al
  425184:	out    dx,eax
  425185:	aas    
  425186:	and    al,0xc
  425188:	sub    eax,0x44ea60c3
  42518d:	add    ecx,DWORD PTR [ecx-0x7d589fbc]
  425193:	inc    esp
  425194:	push   eax
  425195:	adc    ebp,DWORD PTR [ecx-0x40]
  425198:	add    BYTE PTR [eax],al
  42519a:	and    al,0x85
  42519c:	add    BYTE PTR [eax],al
  42519e:	mov    ebp,0xe710243f
  4251a3:	ret    0x748d
  4251a6:	nop
  4251a7:	xchg   esi,eax
  4251a8:	jecxz  0x4251cd
  4251aa:	xor    esi,DWORD PTR [edi+esi*8-0x1]
  4251ae:	jo     0x42514a
  4251b0:	psubsw mm1,QWORD PTR [ebx]
  4251b3:	add    al,0x0
  4251b5:	add    BYTE PTR [ecx-0x6bebdbc6],cl
  4251bb:	xchg   BYTE PTR [esi-0x7a8ed4e4],bl
  4251c1:	shl    BYTE PTR [eax-0x3517b459],0xe0
  4251c8:	cmc    
  4251c9:	inc    DWORD PTR [edi-0xe]
  4251cc:	and    edx,DWORD PTR [esp+eax*8]
  4251cf:	out    dx,eax
  4251d0:	add    DWORD PTR [eax-0x467b4],edi
  4251d6:	sub    eax,0xc40000ab
  4251db:	xor    BYTE PTR [edi+0x4],0xc4
  4251df:	add    DWORD PTR [ebp+0x2b49e],eax
  4251e5:	lea    edi,[eax-0x20cd9c62]
  4251eb:	xchg   BYTE PTR [ebx-0x4eb36235],dl
  4251f1:	das    
  4251f2:	xchg   ebx,eax
  4251f3:	outs   dx,BYTE PTR ds:[esi]
  4251f4:	jl     0x4251b9
  4251f6:	jne    0x42517c
  4251f8:	mov    bh,0xfb
  4251fa:	jp     0x42521c
  4251fc:	les    esi,FWORD PTR [eax+eax*1+0x0]
  425200:	xchg   ebp,eax
  425201:	and    BYTE PTR [eax+0x24],cl
  425204:	icebp  
  425205:	mov    dl,0x2f
  425207:	sub    BYTE PTR [edx+0x7684c524],dl
  42520d:	xchg   ebp,eax
  42520e:	xchg   ebx,eax
  42520f:	shl    BYTE PTR [edx+0x3550c445],0xea
  425216:	mov    ecx,0x7a8642fb
  42521b:	jl     0x42519e
  42521d:	ja     0x4251b6
  42521f:	enter  0xad67,0xb0
  425223:	test   BYTE PTR [esi+0x2f],al
  425226:	test   BYTE PTR [esi-0x17000827],0x4e
  42522d:	pushf  
  42522e:	(bad)  
  42522f:	jmp    DWORD PTR [eax]
  425231:	nop
  425232:	jecxz  0x4251bb
  425234:	lahf   
  425235:	fwait
  425236:	inc    edx
  425238:	sbb    eax,edi
  42523a:	cmp    esi,0xfffffffa
  42523d:	fwait
  42523e:	stos   DWORD PTR es:[edi],eax
  42523f:	xchg   BYTE PTR [ebp-0x65],bl
  425242:	xchg   edi,eax
  425243:	inc    ebx
  425244:	(bad)  
  425245:	push   esp
  425246:	mov    al,0xfb
  425248:	test   al,0x5f
  42524a:	jne    0x42528b
  42524c:	popf   
  42524d:	push   ss
  42524e:	and    DWORD PTR [ecx+ebx*1],0xffffff9a
  425252:	(bad)  
  425253:	call   DWORD PTR [eax+eiz*8]
  425256:	out    0x37,eax
  425258:	imul   ebp,DWORD PTR [esi],0x43
  42525b:	and    al,0x5d
  42525d:	in     al,0x9a
  42525f:	mov    DWORD PTR [ebp-0x65],ebx
  425262:	dec    edi
  425263:	lea    eax,[eax]
  425265:	add    BYTE PTR [ecx],dh
  425267:	mov    edi,0x22188ef
  42526c:	or     eax,0x311482f4
  425271:	mov    al,0x96
  425273:	jnp    0x42524a
  425275:	out    0xbe,eax
  425277:	sbb    cl,ch
  425279:	jle    0x4252bc
  42527b:	fidiv  WORD PTR [ebp+eax*1-0x63]
  42527f:	add    ch,BYTE PTR [edi-0x35]
  425282:	test   DWORD PTR ds:0x9966b01f,ebx
  425288:	cwde   
  425289:	mov    al,0x88
  42528b:	div    ch
  42528d:	inc    ebx
  42528e:	popf   
  42528f:	jns    0x42523b
  425291:	sti    
  425292:	sbb    DWORD PTR [ebx-0x2ddc0063],edi
  425298:	mov    esi,0xe9a81cd2
  42529d:	dec    edi
  42529e:	jg     0x42529f
  4252a0:	jb     0x4252a6
  4252a2:	and    al,0x3d
  4252a4:	loope  0x425256
  4252a6:	jo     0x42524e
  4252a8:	aaa    
  4252a9:	inc    esp
  4252aa:	popf   
  4252ab:	ja     0x4252da
  4252ad:	call   0xe867ce6c
  4252b2:	retf   0xe818
  4252b5:	and    BYTE PTR [ecx-0x22],0x28
  4252b9:	push   esp
  4252ba:	adc    BYTE PTR [esi],ch
  4252bc:	or     eax,0x53ddff4
  4252c1:	fcomp  QWORD PTR [esi-0x20fbd687]
  4252c7:	cmp    eax,0xe005
  4252cc:	loop   0x425289
  4252ce:	sub    eax,0x70968ae8
  4252d3:	inc    esp
  4252d4:	popf   
  4252d5:	call   0xcc5f:0xa4c6bbe0
  4252dc:	sbb    bh,BYTE PTR [esi]
  4252de:	int    0xff
  4252e0:	push   ds
  4252e1:	leave  
  4252e2:	hlt    
  4252e3:	pop    es
  4252e4:	sbb    bh,BYTE PTR [esi]
  4252e6:	add    ch,cl
  4252e8:	mov    ?,WORD PTR [ebp+0x7c]
  4252eb:	lds    edx,FWORD PTR [esi+0x4d1cfb52]
  4252f1:	push   ebp
  4252f2:	aas    
  4252f3:	jmp    0xfa52613b
  4252f8:	fiadd  WORD PTR [edx]
  4252fa:	cmp    eax,0x299eb
  4252ff:	mul    BYTE PTR [edx]
  425301:	ins    DWORD PTR es:[edi],dx
  425302:	cli    
  425303:	ds inc edx
  425305:	jbe    0x42534b
  425307:	or     eax,0xd4fb52d1
  42530c:	push   es
  42530d:	cmc    
  42530e:	aas    
  42530f:	jmp    0x72999bff
  425314:	add    al,0x46
  425316:	mov    edi,0x5196c7bc
  42531b:	mov    eax,0xe9f81e1f
  425320:	rcl    ebx,cl
  425322:	cli    
  425323:	shr    BYTE PTR [ebp-0x6],0x73
  425327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425328:	sar    BYTE PTR [ebx+0x35],1
  42532b:	adc    DWORD PTR [esi+0x740042],ecx
  425331:	add    BYTE PTR [ebp-0x56],ah
  425334:	push   eax
  425335:	ss sbb al,0x3e
  425338:	cld    
  425339:	cmp    DWORD PTR [edi+0x154faa4],esp
  42533f:	test   eax,0x2dde6cd2
  425344:	cs jb  0x4253ac
  425347:	stos   BYTE PTR es:[edi],al
  425348:	test   DWORD PTR [ecx-0x5681244e],ebp
  42534e:	pushf  
  42534f:	cs and al,0x91
  425352:	test   BYTE PTR [esi],dl
  425354:	cli    
  425355:	sahf   
  425356:	push   edi
  425357:	stos   BYTE PTR es:[edi],al
  425358:	test   DWORD PTR [esi+0x248d0b92],edx
  42535e:	shl    DWORD PTR [ebx],0xfb
  425361:	add    BYTE PTR [ecx-0x3995b0a9],bh
  425367:	push   esp
  425368:	jne    0x425372
  42536a:	xor    ecx,ebp
  42536c:	test   eax,eax
  42536e:	test   eax,0x12e84ea7
  425373:	add    al,0xf6
  425375:	push   DWORD PTR [edi-0x4474a9ad]
  42537b:	xor    al,0xc9
  42537d:	ret    0xff78
  425380:	dec    edx
  425381:	push   edi
  425382:	jecxz  0x42536f
  425384:	and    ecx,DWORD PTR [esi+esi*2]
  425387:	mov    eax,0x54b38de8
  42538c:	test   DWORD PTR [ebx+0x74f77aac],0x74f74d6f
  425396:	add    BYTE PTR [eax],al
  425398:	pop    eax
  425399:	or     ebp,eax
  42539b:	jge    0x425350
  42539d:	push   esp
  42539e:	test   DWORD PTR [ebx+0x74ee7aa4],0xff4f4d58
  4253a8:	dec    ecx
  4253a9:	das    
  4253aa:	or     al,BYTE PTR [eax+0x34]
  4253ad:	jp     0x42536f
  4253af:	jne    0x4253e7
  4253b1:	push   ebp
  4253b2:	mov    ebx,0x6be2ec56
  4253b7:	(bad)  
  4253b8:	repz dec esp
  4253ba:	call   0xf796b406
  4253bf:	pop    esi
  4253c0:	mov    bl,0x28
  4253c2:	mov    ebx,0xfba6465b
  4253c7:	(bad)  
  4253c8:	test   al,0x9a
  4253ca:	(bad)  
  4253cb:	dec    cl
  4253cd:	repnz adc al,0x40
  4253d0:	hlt    
  4253d1:	dec    esi
  4253d2:	call   0xf7975782
  4253d7:	test   BYTE PTR [ebx+ebp*8],al
  4253da:	add    eax,0xe8059dff
  4253df:	add    eax,edx
  4253e1:	lods   eax,DWORD PTR ds:[esi]
  4253e2:	unpckhps xmm3,XMMWORD PTR [ebp-0x67]
  4253e6:	add    al,0x29
  4253e9:	cwde   
  4253ea:	lock mov edi,0x8575d
  4253f0:	dec    eax
  4253f1:	and    BYTE PTR [eax+0x50f8897f],ah
  4253f7:	push   edx
  4253f8:	into   
  4253f9:	inc    esp
  4253fa:	push   ebp
  4253fb:	lea    eax,[eax]
  4253fd:	add    BYTE PTR [eax],dl
  4253ff:	push   eax
  425400:	ins    BYTE PTR es:[edi],dx
  425401:	xchg   ebx,eax
  425402:	popf   
  425403:	stos   DWORD PTR es:[edi],eax
  425404:	inc    DWORD PTR [edi+0x329c48d8]
  42540a:	pop    esi
  42540b:	loope  0x4253b9
  42540d:	mov    ebx,0xfffab9d
  425412:	retf   0x787c
  425415:	ret    0xe8ed
  425418:	adc    al,BYTE PTR [ecx+ebp*4+0x6b]
  42541c:	dec    DWORD PTR [eax-0x41170c20]
  425422:	enter  0x5098,0x53
  425426:	into   
  425427:	adc    al,0xc2
  425429:	push   eax
  42542a:	xor    dh,BYTE PTR [edi-0x5422eaf9]
  425430:	jbe    0x425477
  425432:	and    eax,0x210bc055
  425437:	xchg   ecx,eax
  425438:	(bad)  
  425439:	call   FWORD PTR [ebp-0x4fe3ed40]
  42543f:	jmp    0x425444
  425441:	sti    
  425442:	mov    BYTE PTR [ebx-0x4c0eba8a],dh
  425448:	sub    eax,0x8360f2fb
  42544d:	rcr    BYTE PTR [edx-0x62ff7dd1],0xab
  425454:	js     0x42549b
  425456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425457:	add    dh,BYTE PTR [eax+0x46]
  42545a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42545b:	frstor [ebp+0x2c8f9b36]
  425461:	fadd   DWORD PTR [eax]
  425463:	add    BYTE PTR [eax+ecx*2],dl
  425466:	loope  0x4254e0
  425468:	lods   eax,DWORD PTR ds:[esi]
  425469:	pop    edx
  42546a:	popa   
  42546b:	add    ebx,DWORD PTR [ebp-0x142f6efe]
  425471:	mov    eax,ds:0x35525472
  425476:	push   0x36
  425478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425479:	mov    eax,ds:0x42aefffc
  42547e:	jmp    0x561fe1fb
  425483:	ss test eax,0xea50b235
  425489:	xor    eax,0xa1a53642
  42548e:	aam    0xff
  425490:	xchg   ecx,eax
  425491:	inc    edx
  425492:	jmp    0x361fc20f
  425497:	aaa    
  425498:	(bad)  
  425499:	mov    eax,ds:0x42ac4ffc
  42549e:	jmp    0xf5399af6
  4254a3:	pop    ss
  4254a4:	fld    QWORD PTR [edx]
  4254a6:	mov    bl,0x53
  4254a8:	inc    ebp
  4254a9:	mov    ebp,0x8636ac03
  4254ae:	sub    DWORD PTR [esi],esi
  4254b0:	xchg   edi,eax
  4254b1:	cmp    dl,dh
  4254b3:	adc    eax,0x3a8f779
  4254b8:	and    eax,0xdd81e23f
  4254bd:	adc    eax,0xa160c1e5
  4254c2:	call   0x9395b18
  4254c7:	adc    DWORD PTR [eax],eax
  4254c9:	add    BYTE PTR [ebp+0x2],bl
  4254cc:	add    DWORD PTR [ecx-0xa],ecx
  4254cf:	push   ss
  4254d0:	in     al,dx
  4254d1:	in     al,dx
  4254d2:	dec    ecx
  4254d3:	xchg   esi,eax
  4254d4:	add    BYTE PTR ds:0xb5759be1,bh
  4254da:	cmp    DWORD PTR [ebx-0x62f95906],edx
  4254e0:	jne    0x425483
  4254e2:	div    dh
  4254e4:	adc    edi,esp
  4254e6:	pop    esi
  4254e7:	add    al,BYTE PTR [esi+0x5a3d0624]
  4254ed:	and    dh,al
  4254ef:	pop    edi
  4254f0:	add    al,0xe9
  4254f2:	not    DWORD PTR ds:0x9606ed24
  4254f8:	outs   dx,WORD PTR ds:[esi]
  4254fa:	inc    esi
  4254fb:	pusha  
  4254fc:	sti    
  4254fd:	fnsave [edx+0x4]
  425500:	call   0xfbdf00f8
  425505:	sub    ch,ah
  425507:	xchg   esp,ebp
  425509:	mov    eax,0x9a0c45fb
  42550e:	int3   
  42550f:	xor    esp,DWORD PTR [esi-0x16]
  425512:	(bad)  
  425514:	mov    esi,0x7403016a
  425519:	call   DWORD PTR [esi-0x7d4ee1ea]
  42551f:	hlt    
  425520:	xchg   BYTE PTR [esi+ebp*4-0x3d193f7b],ah
  425527:	add    al,BYTE PTR [ecx]
  425529:	jmp    0x9e4318cc
  42552e:	add    BYTE PTR [eax],al
  425530:	sahf   
  425531:	add    al,BYTE PTR [eax]
  425533:	adc    ah,ch
  425535:	add    al,BYTE PTR [eax]
  425537:	jmp    0xea3e9b9b
  42553c:	sahf   
  42553d:	add    al,al
  42553f:	shr    BYTE PTR [esi-0x6122ba3d],cl
  425545:	add    al,BYTE PTR [eax]
  425547:	sub    DWORD PTR [edx],esp
  425549:	add    al,0xc3
  42554b:	and    al,0x45
  42554d:	add    eax,DWORD PTR [eax]
  42554f:	add    BYTE PTR [esp+eax*4],al
  425552:	add    DWORD PTR [ebp-0x8],0x2d
  425556:	add    BYTE PTR [edi],al
  425558:	hlt    
  425559:	add    ebx,DWORD PTR [ebx]
  42555b:	ret    0x34d
  42555e:	add    al,0x0
  425560:	les    esi,FWORD PTR [eax-0x101f8040]
  425566:	cs test esp,esi
  425569:	out    dx,eax
  42556a:	sub    bh,BYTE PTR ds:0x6c4
  425570:	mov    al,0xf5
  425572:	cmp    al,0x0
  425574:	mov    dh,0x3
  425576:	add    BYTE PTR [ebx+ebp*8-0x56],dh
  42557a:	sti    
  42557b:	add    al,BYTE PTR [ebx+eax*1+0x56ea375]
  425582:	jecxz  0x425586
  425584:	outs   dx,BYTE PTR ds:[esi]
  425585:	lahf   
  425586:	push   edx
  425587:	jmp    0x42550a
  425589:	stos   BYTE PTR es:[edi],al
  42558a:	sti    
  42558b:	add    al,0x84
  42558d:	add    esi,DWORD PTR [ebx+ecx*1-0x67]
  425591:	push   es
  425592:	(bad)  
  425593:	inc    DWORD PTR [eax]
  425595:	add    BYTE PTR [edi+ebp*8+0x20],dh
  425599:	cmp    esi,DWORD PTR [esi-0x50cc782e]
  42559f:	dec    eax
  4255a0:	bound  ecx,QWORD PTR [eax]
  4255a2:	pop    ebx
  4255a3:	xor    al,0xe8
  4255a5:	dec    ebx
  4255a6:	cs imul esi,edi,0xee82a48b
  4255ad:	jne    0x42560a
  4255af:	and    BYTE PTR [ebp+0x10],al
  4255b2:	rol    ebx,0x74
  4255b5:	jp     0x425564
  4255b7:	stos   DWORD PTR es:[edi],eax
  4255b8:	loop   0x425630
  4255ba:	push   ds
  4255bb:	add    ah,bl
  4255bd:	retf   0x9f1e
  4255c0:	jecxz  0x4255f1
  4255c2:	outs   dx,BYTE PTR ds:[esi]
  4255c3:	ins    BYTE PTR es:[edi],dx
  4255c4:	test   DWORD PTR [ebp-0x7cfb2dcc],0xe7a8a19d
  4255ce:	lahf   
  4255cf:	cld    
  4255d0:	ret    
  4255d1:	xchg   DWORD PTR [eax-0x6b],esp
  4255d4:	mov    esi,0x9f299ee9
  4255d9:	add    DWORD PTR [edi+ebp*4],edx
  4255dc:	ja     0x425628
  4255de:	mov    eax,ds:0xa675c426
  4255e3:	adc    al,0x3b
  4255e5:	adc    BYTE PTR [eax],ah
  4255e7:	imul   esi,DWORD PTR [eax],0x9cb11441
  4255ed:	cmp    eax,0x42945
  4255f2:	popf   
  4255f3:	cld    
  4255f4:	sbb    edi,edi
  4255f6:	stos   DWORD PTR es:[edi],eax
  4255f7:	xchg   ebp,eax
  4255f8:	mov    ds:0x280000fb,eax
  4255fd:	mov    eax,ds:0x2e6f1697
  425602:	test   eax,0xfbc05d84
  425607:	xchg   BYTE PTR [ebx+0x31],ah
  42560a:	fld    QWORD PTR [esi-0x4856400]
  425610:	icebp  
  425611:	mov    ds:0xba9515a8,eax
  425616:	aas    
  425617:	add    BYTE PTR [eiz*4-0x2ae7c584],dl
  42561e:	das    
  42561f:	or     eax,0xdf9be526
  425624:	ins    BYTE PTR es:[edi],dx
  425625:	out    0xa8,al
  425627:	push   ebx
  425628:	xor    eax,0x42fa16f2
  42562d:	pop    esi
  42562e:	xchg   edi,eax
  42562f:	in     al,0xc4
  425631:	or     eax,0x5657fa9
  425636:	dec    ecx
  425637:	pop    edx
  425638:	(bad)  
  425639:	rol    cl,cl
  42563b:	or     al,0x9d
  42563d:	les    esi,FWORD PTR cs:[edx+ebx*8+0x28]
  425642:	lods   al,BYTE PTR ds:[esi]
  425643:	sti    
  425644:	mov    DWORD PTR [edx],eax
  425646:	pop    ds
  425647:	test   DWORD PTR [ecx-0x76fc1b1a],ecx
  42564d:	shl    DWORD PTR [ebp+0x27],1
  425650:	ror    DWORD PTR [edx],0xe9
  425653:	jl     0x4255f2
  425655:	pop    ds
  425656:	out    dx,eax
  425657:	sbb    eax,0xdfd49d4e
  42565c:	nop
  42565d:	inc    edx
  42565e:	jmp    0xab4256ff
  425663:	popf   
  425664:	xor    eax,0x1d9d9ae0
  425669:	loopne 0x42560d
  42566b:	xor    dl,BYTE PTR [ecx-0x6d632c7a]
  425671:	jle    0x425650
  425673:	sbb    ebp,esi
  425675:	jle    0x425626
  425677:	push   ss
  425678:	(bad)  [eax+0x43d7fa90]
  42567e:	popf   
  42567f:	mov    ebp,ebx
  425681:	pushf  
  425682:	mov    ds:0x9f2f7387,eax
  425687:	(bad)
  42568a:	popf   
  42568b:	add    ch,cl
  42568d:	test   BYTE PTR [ebp-0x63],dl
  425690:	daa    
  425691:	sti    
  425692:	jp     0x4256ca
  425694:	pop    esi
  425695:	xchg   edi,eax
  425696:	loop   0x4256cc
  425698:	outs   dx,BYTE PTR ds:[esi]
  425699:	mov    bl,0xba
  42569b:	mov    ecx,0x49e9b4fe
  4256a0:	test   ax,0x1656
  4256a4:	mov    ds:0x9d0af1ea,eax
  4256a9:	inc    edx
  4256aa:	test   DWORD PTR [eiz*8-0x147665d1],edi
  4256b1:	sbb    eax,0x9bb6303b
  4256b6:	push   0x22a803b0
  4256bb:	aam    0x95
  4256bd:	jbe    0x425697
  4256bf:	or     al,BYTE PTR [eax]
  4256c1:	cdq    
  4256c2:	ins    DWORD PTR es:[edi],dx
  4256c3:	cdq    
  4256c4:	jne    0x4256a7
  4256c6:	add    BYTE PTR [eax],al
  4256c8:	inc    ebp
  4256c9:	sar    dl,1
  4256cb:	cld    
  4256cc:	add    cl,BYTE PTR [edi]
  4256ce:	inc    eax
  4256cf:	jmp    0xecb718f1
  4256d4:	or     DWORD PTR [esi],ebx
  4256d6:	or     BYTE PTR [ebp-0x78],dl
  4256d9:	test   DWORD PTR [ebp-0xb],esi
  4256dc:	imul   DWORD PTR [ebx-0x8c41d8c]
  4256e2:	pop    ss
  4256e3:	fcomp  DWORD PTR [esi+0x2]
  4256e6:	mov    edi,esp
  4256e8:	aaa    
  4256e9:	xrelease xchg BYTE PTR [esi+0x2486f226],ch
  4256f0:	(bad)
  4256f3:	sbb    eax,0x3600bfbb
  4256f8:	cdq    
  4256f9:	add    al,BYTE PTR [eax]
  4256fb:	push   0xffffffe9
  4256fd:	cwde   
  4256fe:	pop    edx
  4256ff:	and    dl,BYTE PTR [esp+ebx*2+0x8]
  425703:	jmp    0x192edaf5
  425708:	call   0x1c9ade3d
  42570d:	xchg   ecx,eax
  42570e:	je     0x4256be
  425710:	pop    ds
  425711:	cdq    
  425712:	sti    
  425713:	fnsave [ebx+ebx*1-0xd3d1618]
  42571a:	inc    edi
  42571b:	mov    ebp,0xfe754466
  425720:	test   BYTE PTR [ebx+edx*2-0x4012a5be],bl
  425727:	test   eax,0x292e9d37
  42572c:	add    BYTE PTR [eax],al
  42572e:	icebp  
  42572f:	add    DWORD PTR [ebp-0xf],0x11
  425733:	dec    ebp
  425734:	push   eax
  425735:	bound  edi,QWORD PTR [ebx]
  425737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425738:	mov    eax,0x8497fb38
  42573d:	add    BYTE PTR [edx+edx*8+0xa],dh
  425741:	(bad)  
  425742:	jmp    0xd0fe:0x9cf8751a
  425749:	inc    BYTE PTR [ebx]
  42574b:	sbb    al,0xc0
  42574d:	je     0x425748
  42574f:	sbb    BYTE PTR [ebp-0x8],al
  425752:	out    dx,eax
  425753:	or     BYTE PTR [ebp-0x90da701],al
  425759:	adc    eax,0x3ff6ec
  42575e:	ins    DWORD PTR es:[edi],dx
  42575f:	pushf  
  425760:	loop   0x42576c
  425762:	jns    0x4257c8
  425764:	je     0x42576c
  425766:	or     ebx,DWORD PTR [ebp-0x3bffb2]
  42576c:	jp     0x425736
  42576e:	add    eax,DWORD PTR [esi-0x37]
  425771:	ret    0xffb8
  425774:	test   dh,dh
  425776:	cwde   
  425777:	lahf   
  425778:	jp     0x425778
  42577a:	and    ebp,esp
  42577c:	adc    eax,0x84a52f57
  425781:	jmp    FWORD PTR [eax+0x1cc7829a]
  425787:	pop    ss
  425788:	sar    dh,1
  42578a:	add    ecx,DWORD PTR [ebp-0x18]
  42578d:	(bad)  
  42578e:	ins    BYTE PTR es:[edi],dx
  42578f:	not    DWORD PTR gs:[esi+0x0]
  425793:	add    ah,ch
  425795:	push   ds
  425796:	push   0xbb90d3fe
  42579b:	pop    edi
  42579c:	mov    DWORD PTR [edx+0x5c7a74c0],0xff745700
  4257a6:	inc    DWORD PTR [edx+0x55bb647c]
  4257ac:	mov    edi,0x4cec8173
  4257b1:	add    DWORD PTR [eax],eax
  4257b3:	add    BYTE PTR [ebx],cl
  4257b5:	sbb    BYTE PTR [ebp+0x18],bh
  4257b8:	popf   
  4257b9:	es cmp al,0x30
  4257bd:	or     al,0xa2
  4257bf:	push   eax
  4257c0:	push   ss
  4257c1:	outs   dx,BYTE PTR ds:[esi]
  4257c2:	mul    edi
  4257c4:	jae    0x42576d
  4257c6:	(bad)  
  4257c7:	(bad)  
  4257c8:	jp     0x4257f7
  4257ca:	mov    edi,0x2baca974
  4257cf:	adc    al,0x18
  4257d1:	lods   al,BYTE PTR cs:[esi]
  4257d3:	std    
  4257d4:	add    bh,BYTE PTR [ebp+eiz*4-0x6426568b]
  4257db:	aaa    
  4257dc:	lock retf 
  4257de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257df:	leave  
  4257e0:	fimul  WORD PTR [edi]
  4257e2:	cmp    edx,DWORD PTR [eax+ebx*1]
  4257e5:	imul   esi,DWORD PTR [eax],0x4ca8e202
  4257eb:	add    BYTE PTR [ebp-0x35377f57],bl
  4257f1:	push   ecx
  4257f2:	rol    DWORD PTR [edi+0x51fbc559],0x0
  4257f9:	add    BYTE PTR [edx+0x260fdffc],bh
  4257ff:	cmc    
  425800:	fist   WORD PTR [edi]
  425802:	stos   BYTE PTR es:[edi],al
  425803:	pushf  
  425804:	fisttp DWORD PTR [edi]
  425806:	mov    ch,0xe8
  425808:	mov    eax,ds:0xc0f29afb
  42580d:	xchg   ecx,ebx
  42580f:	mov    edi,0xb88a52fb
  425814:	fist   DWORD PTR [ebx]
  425816:	push   ss
  425817:	mov    eax,0xb87a13db
  42581c:	fisttp DWORD PTR [edi]
  42581e:	test   DWORD PTR [ebp+0x616afba5],esi
  425824:	rol    BYTE PTR [edi+0x51fbffd9],0x26
  42582b:	pop    eax
  42582c:	fild   DWORD PTR [edi]
  42582e:	inc    ebp
  42582f:	bound  esp,QWORD PTR [ebx+edi*8-0x3f3cfcb6]
  425836:	sbb    bh,BYTE PTR [edi]
  425838:	(bad)
  42583b:	inc    edi
  42583c:	int    0xff
  42583e:	iret   
  42583f:	cdq    
  425840:	xchg   ebp,eax
  425841:	fist   WORD PTR [esi-0x75207a73]
  425847:	stos   BYTE PTR es:[edi],al
  425848:	sub    BYTE PTR [esi-0x3f6d65ea],ah
  42584e:	push   0xf982fd8d
  425853:	or     ah,bh
  425855:	add    ebx,DWORD PTR [ebp-0x72d991cf]
  42585b:	xchg   DWORD PTR [ebx+ebp*4+0x0],ebp
  42585f:	add    al,dh
  425861:	cdq    
  425862:	retf   0x2253
  425865:	inc    eax
  425866:	icebp  
  425867:	fwait
  425868:	push   ss
  425869:	add    al,0xe9
  42586b:	add    esi,DWORD PTR [esi+0x7e]
  42586e:	test   eax,0x6487a92f
  425873:	stos   DWORD PTR es:[edi],eax
  425874:	enter  0xa299,0x53
  425878:	mov    ch,0x88
  42587a:	mov    dh,0xa5
  42587c:	mov    dh,0x7e
  42587e:	test   eax,0xa8d5992f
  425883:	mov    edx,0xa4b185ea
  425888:	aam    0xc5
  42588a:	adc    al,0x79
  42588c:	mov    DWORD PTR [ebx-0x666cec7b],eax
  425892:	jmp    0xcf7447e7
  425897:	add    BYTE PTR [eax],dl
  425899:	punpcklwd mm0,DWORD PTR [ebx+eax*1+0x24]
  42589e:	mov    edi,0xabaad529
  4258a3:	adc    ebx,DWORD PTR [ebp-0x608534fe]
  4258a9:	test   DWORD PTR [ebx],esp
  4258ab:	add    esi,esp
  4258ad:	sldt   WORD PTR [ebp+ecx*2+0x59]
  4258b2:	bound  esp,QWORD PTR [eax-0x75]
  4258b5:	pushf  
  4258b6:	xchg   DWORD PTR [esi+ebp*4-0x79952917],ebp
  4258bd:	inc    BYTE PTR [eax]
  4258bf:	pushf  
  4258c0:	xor    eax,DWORD PTR [eax+0xe170]
  4258c6:	add    eax,0xa8ff2e98
  4258cb:	jg     0x4258bd
  4258cd:	cld    
  4258ce:	ds popf 
  4258d0:	push   eax
  4258d1:	add    ebp,ebp
  4258d3:	or     al,0x0
  4258d5:	jmp    0xe187e048
  4258da:	leave  
  4258db:	add    edx,0x7
  4258de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258df:	add    al,BYTE PTR [eax]
  4258e1:	aas    
  4258e2:	ds out dx,eax
  4258e4:	jnp    0x4258de
  4258e6:	pop    esi
  4258e7:	add    al,BYTE PTR [ebp-0x72ed7a57]
  4258ed:	xor    DWORD PTR fs:[edi-0x62764905],edx
  4258f4:	adc    eax,0xffd8d255
  4258f9:	jno    0x4258cc
  4258fb:	xchg   BYTE PTR [ebp-0x4630367],al
  425901:	pusha  
  425902:	dec    esp
  425903:	repnz mov eax,ss:0x4872e85
  42590a:	lea    eax,[ecx-0x3bdc0e8b]
  425910:	cli    
  425911:	push   0x67
  425913:	cdq    
  425914:	jecxz  0x425925
  425916:	pop    ds
  425917:	popf   
  425918:	sti    
  425919:	push   0x21
  42591b:	pushf  
  42591c:	je     0x42593d
  42591e:	mov    dl,0x47
  425920:	push   ebx
  425921:	mov    edi,0xf9759bae
  425926:	mov    bl,0x47
  425928:	sti    
  425929:	add    BYTE PTR [eax],al
  42592b:	add    BYTE PTR [ecx-0xc],al
  42592e:	or     DWORD PTR [eax+0x44],eax
  425931:	mov    ecx,0xb79e7eba
  425936:	bnd jle 0x4259a3
  425939:	jae    0x425947
  42593b:	xor    BYTE PTR [edi+edx*8],bh
  42593e:	div    BYTE PTR [edx+eax*2-0x47]
  425942:	mov    esi,0x198c2e7d
  425947:	push   0x36
  425949:	in     al,dx
  42594a:	or     ecx,DWORD PTR [ebx+0x75f703f4]
  425950:	or     al,0x65
  425952:	adc    eax,0x43f230
  425957:	xor    esi,DWORD PTR [edi+edi*2+0x67b40cc4]
  42595e:	cli    
  42595f:	xor    al,BYTE PTR [ebp+eax*2+0x56]
  425963:	pop    ebx
  425964:	cmp    eax,0xb4c02bc1
  425969:	mov    edi,0x80c88b55
  42596e:	in     al,dx
  42596f:	cmp    al,0xb2
  425971:	fild   DWORD PTR [edx-0x9231783]
  425977:	jne    0x425965
  425979:	in     eax,0xff
  42597b:	imul   esi,DWORD PTR [esp+eiz*2-0x51f3f78b],0x890bfff9
  425986:	lock add DWORD PTR [eax],0xffffff90
  42598a:	test   dh,dh
  42598c:	mov    al,ds:0xfe7ad4
  425991:	add    BYTE PTR [ebx],bl
  425993:	lock popa 
  425995:	mov    eax,DWORD PTR [edx-0x5a3bb28e]
  42599b:	arpl   WORD PTR [eax],si
  42599d:	inc    DWORD PTR [ecx-0x7bbff265]
  4259a3:	mov    al,al
  4259a5:	jne    0x425944
  4259a7:	sahf   
  4259a8:	mov    al,BYTE PTR [ebp-0x7b]
  4259ab:	inc    ecx
  4259ac:	mov    eax,0x824062fd
  4259b1:	enter  0x345a,0x4a
  4259b5:	(bad)  
  4259b6:	fcom   st(1)
  4259b8:	cs (bad) 
  4259ba:	loopne 0x4259ad
  4259bc:	cs sti 
  4259be:	test   al,0x25
  4259c0:	hlt    
  4259c1:	aas    
  4259c2:	popf   
  4259c3:	push   ds
  4259c4:	mov    edi,0x17f08d74
  4259c9:	adc    BYTE PTR [eax],bl
  4259cb:	pop    esi
  4259cc:	xchg   edi,eax
  4259cd:	sti    
  4259ce:	test   al,0x8d
  4259d0:	das    
  4259d1:	sti    
  4259d2:	mov    al,0x81
  4259d4:	hlt    
  4259d5:	aas    
  4259d6:	popf   
  4259d7:	and    al,0x48
  4259d9:	les    edx,FWORD PTR [esi]
  4259db:	jbe    0x4259d0
  4259dd:	jle    0x4259dc
  4259df:	pop    es
  4259e0:	mov    DWORD PTR es:[esp+ebp*1+0x369c0421],ebx
  4259e8:	add    eax,DWORD PTR [edi-0x1535e96]
  4259ee:	scas   eax,DWORD PTR es:[edi]
  4259ef:	rol    BYTE PTR [ebx+edi*2+0x812aab1],0x0
  4259f7:	add    BYTE PTR [eax-0x62fffbd7],ah
  4259fd:	aas    
  4259fe:	xchg   DWORD PTR [ecx],eax
  425a00:	push   ss
  425a01:	addr16 inc ecx
  425a03:	pop    edx
  425a04:	in     al,0x6b
  425a06:	xor    eax,DWORD PTR [edi+0x8b029c1]
  425a0c:	lahf   
  425a0d:	test   eax,0x144b4eff
  425a12:	ror    DWORD PTR [edi],cl
  425a14:	lods   al,BYTE PTR ds:[esi]
  425a15:	jmp    0x425a1a
  425a17:	xchg   DWORD PTR [ebp+0x4],esi
  425a1a:	hlt    
  425a1b:	xchg   ch,bl
  425a1d:	stos   DWORD PTR es:[edi],eax
  425a1e:	xor    al,0xfb
  425a20:	imul   eax,DWORD PTR [ebx],0x6c
  425a23:	(bad)  
  425a24:	lock in al,dx
  425a26:	ins    DWORD PTR es:[edi],dx
  425a27:	dec    ecx
  425a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a29:	push   edx
  425a2b:	add    eax,0xa0b9029d
  425a30:	call   0xa3399c3f
  425a35:	repz test al,0x3
  425a38:	or     eax,0xb5403e04
  425a3d:	out    dx,al
  425a3e:	pop    ebp
  425a3f:	inc    esp
  425a40:	popf   
  425a41:	xor    DWORD PTR [edx],esp
  425a43:	mov    edx,0xb94c320
  425a48:	sbb    bh,BYTE PTR [esi]
  425a4a:	loope  0x4259d0
  425a4c:	pop    ebp
  425a4d:	in     eax,dx
  425a4e:	std    
  425a4f:	sar    DWORD PTR [ebx+0x220f9100],0x43
  425a56:	jmp    0x6532708f
  425a5b:	cmc    
  425a5c:	add    BYTE PTR [eax],al
  425a5e:	retf   0x6402
  425a61:	les    ecx,FWORD PTR [eax-0x63f7af32]
  425a67:	add    ch,cl
  425a69:	test   BYTE PTR [edx],dh
  425a6b:	add    DWORD PTR [esi],esi
  425a6d:	xor    al,0x18
  425a6f:	push   eax
  425a70:	rcr    DWORD PTR [esi-0x34996a1a],1
  425a76:	(bad)  
  425a77:	stos   BYTE PTR es:[edi],al
  425a78:	call   0x6cd831e0
  425a7d:	ret    
  425a7e:	inc    edi
  425a7f:	cli    
  425a80:	pop    ebp
  425a81:	leave  
  425a82:	ins    DWORD PTR es:[edi],dx
  425a83:	mov    DWORD PTR [edx],ebp
  425a85:	or     al,0xa0
  425a87:	fsubr  st(4),st
  425a89:	add    ebx,DWORD PTR [ebp-0x6ae96dce]
  425a8f:	stos   BYTE PTR es:[edi],al
  425a90:	cmc    
  425a91:	inc    ecx
  425a92:	popf   
  425a93:	add    ch,BYTE PTR [ebx+eax*8+0x10]
  425a97:	popa   
  425a98:	mov    bh,0xc3
  425a9a:	idiv   DWORD PTR [ecx]
  425a9c:	add    BYTE PTR [eax+0x19fffe60],ah
  425aa2:	push   0xa2c739ac
  425aa7:	or     DWORD PTR [ebp+0x29e84],eax
  425aad:	shl    DWORD PTR [esi+0x7c],0x40
  425ab1:	jmp    0xdb9a49f3
  425ab6:	fiadd  WORD PTR [edx]
  425ab8:	mov    edi,esp
  425aba:	jno    0x425b10
  425abc:	or     ebp,DWORD PTR [ebp-0x32]
  425abf:	add    al,BYTE PTR [eax]
  425ac1:	jmp    0x3ab85ac6
  425ac6:	or     ecx,ebp
  425ac8:	sahf   
  425ac9:	sbb    al,0x8
  425acb:	push   ds
  425acc:	dec    ebx
  425acd:	mov    ch,0xa7
  425acf:	stos   BYTE PTR es:[edi],al
  425ad0:	sahf   
  425ad1:	cdq    
  425ad2:	adc    eax,0xffd529e5
  425ad7:	outs   dx,DWORD PTR ds:[esi]
  425ad8:	or     dh,BYTE PTR fs:[edi]
  425adb:	sub    ch,BYTE PTR [edx-0x149dacda]
  425ae1:	pop    eax
  425ae2:	push   cs
  425ae3:	test   eax,0x72302a9e
  425ae8:	popa   
  425ae9:	add    bh,bl
  425aeb:	pop    ss
  425aec:	adc    dh,BYTE PTR [ecx+0x2a992787]
  425af2:	cmp    al,0x62
  425af4:	pop    ecx
  425af5:	add    cl,BYTE PTR [ecx+0x3299a528]
  425afb:	mov    esi,0xe14a7d0a
  425b00:	jbe    0x425b4c
  425b02:	xchg   DWORD PTR [ecx],ebp
  425b04:	cdq    
  425b05:	mov    eax,DWORD PTR [ecx-0xf]
  425b08:	sbb    edx,eax
  425b0a:	cli    
  425b0b:	mov    dh,0x26
  425b0d:	dec    eax
  425b0e:	or     BYTE PTR [ecx],al
  425b10:	imul   edi,DWORD PTR [ebp+0x40],0xc4311e9
  425b17:	add    BYTE PTR [ebx],ah
  425b19:	lods   eax,DWORD PTR ds:[esi]
  425b1a:	not    bh
  425b1c:	cmovne ecx,DWORD PTR [eax]
  425b1f:	mov    DWORD PTR [ebp+0x7c46828e],esi
  425b25:	aad    0x38
  425b27:	pop    eax
  425b28:	add    BYTE PTR [eax],al
  425b2a:	mov    ah,ch
  425b2c:	push   cs
  425b2d:	cmp    DWORD PTR [eax+ecx*1+0x74],ebx
  425b31:	adc    cl,BYTE PTR [ebp+0x41740bd6]
  425b37:	mov    bh,0x53
  425b39:	adc    BYTE PTR [eax],bl
  425b3b:	or     BYTE PTR [ebx],ch
  425b3d:	rol    BYTE PTR [edi+eax*4],0x3e
  425b41:	add    al,0x2f
  425b43:	rcl    DWORD PTR [eax-0x18],0x86
  425b47:	jmp    0xff07:0xd4adfff5
  425b4e:	dec    edx
  425b4f:	jne    0x425b66
  425b51:	pop    esp
  425b52:	es inc eax
  425b54:	add    BYTE PTR [ecx+0x5bbbb232],cl
  425b5a:	mov    DWORD PTR [edi+0xb2b083e],0xfff4041e
  425b64:	dec    edi
  425b65:	mov    edi,0xfffffef8
  425b6a:	mov    ebx,0xf7181573
  425b6f:	aas    
  425b70:	add    BYTE PTR [ebp+0x31fefb34],al
  425b76:	xor    al,0x67
  425b78:	clc    
  425b79:	add    ah,al
  425b7b:	inc    DWORD PTR [edx+0x5488cc4e]
  425b81:	and    al,0xbc
  425b83:	int3   
  425b84:	add    cl,0xd2
  425b87:	add    DWORD PTR [eax],eax
  425b89:	add    BYTE PTR [edi+edi*1],cl
  425b8c:	pushf  
  425b8d:	inc    BYTE PTR [eax]
  425b8f:	add    BYTE PTR [ebx],dl
  425b91:	mov    eax,eax
  425b93:	jne    0x425b32
  425b95:	xchg   DWORD PTR [esi-0x65ce6ab6],eax
  425b9b:	sti    
  425b9c:	call   0xff9b:0xcd818cfc
  425ba3:	call   DWORD PTR [esi]
  425ba5:	fisttp DWORD PTR [ebx]
  425ba7:	mov    DWORD PTR [ecx*2+0x109d0005],ebx
  425bae:	inc    ebp
  425baf:	or     dh,cl
  425bb1:	clc    
  425bb2:	mov    dh,0x89
  425bb4:	add    eax,0x9d0001f1
  425bb9:	and    BYTE PTR [ebp+0x8],al
  425bbc:	and    al,0x21
  425bbe:	fild   DWORD PTR [ecx]
  425bc0:	popf   
  425bc1:	test   eax,0x22954286
  425bc6:	ja     0x425c08
  425bc8:	fwait
  425bc9:	test   eax,0x91e386ff
  425bce:	ret    0xd980
  425bd1:	fwait
  425bd2:	(bad)  
  425bd3:	call   FWORD PTR [ecx+ebp*4+0x5b16ffff]
  425bda:	pop    es
  425bdb:	mov    DWORD PTR ds:0x9d000551,esi
  425be1:	adc    BYTE PTR [ebp+0x8],al
  425be4:	into   
  425be5:	loop   0x425c0b
  425be7:	mov    DWORD PTR ds:0x9d000579,edx
  425bed:	adc    BYTE PTR [edx+0x8],al
  425bf0:	and    eax,0x22e81
  425bf5:	add    BYTE PTR [ebp-0x6abd7757],bl
  425bfb:	inc    ecx
  425bfc:	out    dx,al
  425bfd:	xchg   BYTE PTR [ebp-0x57],bl
  425c00:	add    cl,BYTE PTR [esi-0x66]
  425c03:	test   eax,0xb5ca4fff
  425c08:	or     edx,DWORD PTR [ecx]
  425c0a:	pop    ebp
  425c0b:	test   eax,0x2a54288
  425c10:	sgdtd  [ebp-0xe]
  425c14:	ins    DWORD PTR es:[edi],dx
  425c15:	inc    esp
  425c16:	popf   
  425c17:	std    
  425c18:	ss or  al,0x9d
  425c1b:	add    bh,BYTE PTR [ecx]
  425c1d:	popf   
  425c1e:	mov    al,0xf6
  425c20:	xlat   BYTE PTR ds:[ebx]
  425c21:	inc    ebx
  425c22:	popf   
  425c23:	jge    0x425c48
  425c25:	or     al,0xef
  425c27:	jg     0x425c8a
  425c29:	aam    0x9c
  425c2b:	add    ch,cl
  425c2d:	xor    al,BYTE PTR ds:0x9d421abf
  425c33:	sbb    dh,BYTE PTR [edi-0x2b]
  425c36:	test   al,0x2
  425c38:	rcr    DWORD PTR [ecx],0xae
  425c3b:	inc    esp
  425c3c:	jmp    0xa71c1f6c
  425c41:	add    eax,ebp
  425c43:	xor    al,0xf2
  425c45:	inc    ecx
  425c46:	popf   
  425c47:	sbb    ch,bh
  425c49:	aam    0x80
  425c4b:	add    al,cl
  425c4d:	nop
  425c4e:	outs   dx,DWORD PTR ds:[esi]
  425c4f:	inc    esp
  425c50:	jmp    0xa7192a80
  425c55:	add    esi,DWORD PTR [ebp+0x41dd3f]
  425c5b:	add    BYTE PTR [ebp-0x7af06481],bl
  425c61:	pop    ds
  425c62:	pop    edx
  425c63:	inc    esp
  425c64:	popf   
  425c65:	xor    edi,edx
  425c67:	xor    esp,DWORD PTR [ecx+0x140ba37d]
  425c6d:	add    al,0x5e
  425c6f:	inc    esi
  425c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c71:	test   DWORD PTR [ebp+0x20bbc3d7],ebp
  425c77:	cld    
  425c78:	push   ebx
  425c79:	add    DWORD PTR [ebx+eax*8+0x46],edi
  425c7d:	(bad)  
  425c7e:	in     eax,0x3
  425c80:	and    cl,BYTE PTR [ecx-0x13]
  425c83:	dec    ebx
  425c84:	dec    ecx
  425c85:	add    eax,0x7db11731
  425c8a:	add    BYTE PTR [edi],ch
  425c8c:	xchg   ecx,eax
  425c8d:	adc    DWORD PTR [eax],edi
  425c8f:	jmp    0xda3d5b26
  425c94:	adc    DWORD PTR [ebx],esi
  425c96:	adc    BYTE PTR [edx+0x60],dh
  425c99:	cli    
  425c9a:	jle    0x425c65
  425c9c:	sahf   
  425c9d:	sub    edi,DWORD PTR [edi+0x7f9e2434]
  425ca3:	xchg   ebp,eax
  425ca4:	mov    ds:0xb37e5341,al
  425ca9:	(bad)  
  425caa:	cli    
  425cab:	fcomp  QWORD PTR [esi]
  425cad:	add    BYTE PTR [eax-0x17],al
  425cb0:	and    eax,0x23422f8a
  425cb5:	inc    ebp
  425cb6:	sti    
  425cb7:	jo     0x425c64
  425cb9:	xchg   esi,eax
  425cba:	mov    DWORD PTR [edx+eax*1+0xe9f9cf],esi
  425cc1:	add    BYTE PTR [esi-0x3291f4fe],bl
  425cc7:	add    al,BYTE PTR [eax]
  425cc9:	jmp    0x624a98e3
  425cce:	mov    edi,edx
  425cd0:	addr16 in eax,0x9f
  425cd3:	add    al,BYTE PTR [eax]
  425cd5:	push   0x5f
  425cd7:	hlt    
  425cd8:	out    0x1f,eax
  425cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cdb:	mov    ebx,?
  425cdd:	ins    BYTE PTR es:[edi],dx
  425cde:	pop    esi
  425cdf:	pop    ss
  425ce0:	jl     0x425c98
  425ce2:	cmp    DWORD PTR [edi],edx
  425ce4:	or     al,0x74
  425ce6:	pop    ebx
  425ce7:	xchg   esi,eax
  425ce8:	push   eax
  425ce9:	adc    eax,eax
  425ceb:	dec    esp
  425cec:	sti    
  425ced:	neg    BYTE PTR [ebx]
  425cef:	ret    0x8274
  425cf2:	pop    ds
  425cf3:	paddb  mm5,mm1
  425cf6:	cdq    
  425cf7:	add    al,BYTE PTR [eax]
  425cf9:	pop    ebx
  425cfa:	in     al,dx
  425cfb:	aas    
  425cfc:	push   ebx
  425cfd:	(bad)  
  425cfe:	mov    esi,?
  425d00:	dec    esi
  425d01:	sar    DWORD PTR [esi+0x69],0xfa
  425d05:	add    bl,bl
  425d07:	cmp    al,0x8b
  425d0a:	cmp    dh,0x87
  425d0d:	pop    eax
  425d0e:	loopne 0x425d6f
  425d10:	add    cl,BYTE PTR [ebx+0x7d82fe82]
  425d16:	adc    ah,al
  425d18:	inc    eax
  425d19:	adc    al,0xb5
  425d1b:	scas   eax,DWORD PTR es:[edi]
  425d1c:	bnd je 0x425cfb
  425d1f:	jg     0x425d5f
  425d21:	or     BYTE PTR [esi+0xa66805],bl
  425d27:	add    BYTE PTR [esi+eax*2+0x0],bl
  425d2b:	push   0x401399
  425d30:	pushf  
  425d31:	sub    BYTE PTR [eax],bh
  425d33:	inc    edx
  425d34:	test   cl,bl
  425d36:	dec    esi
  425d37:	push   0x408170
  425d3c:	retf   
  425d3d:	mov    dh,0xf6
  425d3f:	push   eax
  425d40:	jl     0x425ccb
  425d42:	les    esp,FWORD PTR [eax]
  425d44:	rol    esi,0x7
  425d47:	xchg   ebp,eax
  425d48:	xchg   DWORD PTR [edi+0x210f47c],ebp
  425d4e:	dec    edi
  425d4f:	call   0x3845d6
  425d54:	mov    esi,ecx
  425d56:	repz call 0x3845e6
  425d5c:	scas   al,BYTE PTR es:[edi]
  425d5d:	(bad)  
  425d5e:	jecxz  0x425d6a
  425d60:	mov    esi,ecx
  425d62:	repz call 0x38460e
  425d68:	push   esi
  425d69:	les    edx,FWORD PTR [edi+0x5b]
  425d6c:	int    0xc8
  425d6e:	or     BYTE PTR [eax],al
  425d70:	and    DWORD PTR [ecx+0x8418bec],eax
  425d76:	sub    esp,0x5ec
  425d7c:	mov    bl,0x87
  425d7e:	shr    BYTE PTR [ebx*4-0x5a8a6937],0x2e
  425d86:	cmp    al,0xd0
  425d89:	enter  0x5096,0x0
  425d8d:	add    BYTE PTR [esi],dl
  425d8f:	ret    
  425d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d91:	es cwd 
  425d94:	inc    DWORD PTR [ebp+ebx*8+0x5a86e2d5]
  425d9b:	xchg   ebp,eax
  425d9c:	xor    DWORD PTR [edi-0x7b775ace],eax
  425da2:	pop    eax
  425da3:	jno    0x425d3d
  425da5:	sti    
  425da6:	call   0x9686:0x958588c9
  425dad:	sti    
  425dae:	in     eax,dx
  425daf:	jno    0x425d43
  425db1:	cli    
  425db2:	sbb    BYTE PTR [eax],0x39
  425db5:	test   BYTE PTR [ebp-0x6b],bl
  425db8:	add    bh,bl
  425dba:	ficom  DWORD PTR [ecx-0x2d35402e]
  425dc0:	les    ecx,FWORD PTR [eax]
  425dc2:	popf   
  425dc3:	dec    esi
  425dc4:	mov    ch,ah
  425dc6:	push   ds
  425dc7:	int    0xca
  425dc9:	dec    esi
  425dca:	jmp    0x425d58
  425dcc:	mov    edx,0x401e9966
  425dd1:	fsub   st(6),st
  425dd3:	imul   ecx,DWORD PTR [ebp+ebx*2-0x2bc7ddb3],0xfbb7c624
  425dde:	nop
  425ddf:	mov    ch,0xf1
  425de1:	aas    
  425de2:	popf   
  425de3:	sbb    al,0xbb
  425de5:	or     al,0x28
  425de7:	jbe    0x425d98
  425de9:	mov    DWORD PTR [eax-0xf],esi
  425dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ded:	ret    0x9009
  425df0:	cdq    
  425df1:	test   BYTE PTR [eax],al
  425df3:	add    ch,bl
  425df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425df6:	jnp    0x425d92
  425df8:	popf   
  425df9:	cdq    
  425dfa:	(bad)  
  425dfb:	cli    
  425dfc:	push   0x82abf102
  425e01:	(bad)  
  425e02:	ficomp DWORD PTR [ecx+0x7fe2c219]
  425e08:	daa    
  425e09:	add    ch,cl
  425e0b:	add    ebx,DWORD PTR [edx]
  425e0d:	pop    ss
  425e0e:	in     eax,dx
  425e0f:	xchg   BYTE PTR [eax-0x4e],ah
  425e12:	adc    eax,ecx
  425e14:	pop    eax
  425e15:	sahf   
  425e16:	dec    ebp
  425e17:	lea    ebx,[ebp+0x2]
  425e1a:	pusha  
  425e1b:	aas    
  425e1c:	lods   eax,DWORD PTR ds:[esi]
  425e1d:	js     0x425e63
  425e1f:	nop
  425e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e21:	hlt    
  425e22:	push   0x600262f6
  425e27:	aas    
  425e28:	xchg   ebp,eax
  425e29:	retf   0x12a5
  425e2c:	mov    eax,ds:0xdf186624
  425e31:	mov    WORD PTR ds:0x60429910,ds
  425e37:	aas    
  425e38:	jne    0x425dc8
  425e3a:	bnd jmp DWORD PTR [ecx]
  425e3d:	dec    eax
  425e3e:	push   ebp
  425e3f:	lea    edx,[esi+0x7c]
  425e42:	loop   0x425def
  425e44:	jmp    0x552f:0x9403e92f
  425e4b:	adc    dh,BYTE PTR [edi-0x4a445387]
  425e51:	pop    ds
  425e52:	push   edx
  425e53:	inc    esp
  425e54:	popf   
  425e55:	sbb    al,BYTE PTR [edi+0x780000dc]
  425e5b:	add    dl,BYTE PTR [esi-0x46729268]
  425e61:	pop    es
  425e62:	stos   BYTE PTR es:[edi],al
  425e63:	(bad)  
  425e64:	stc    
  425e65:	rcr    eax,0xf9
  425e68:	out    0x7e,eax
  425e6a:	fst    QWORD PTR [edi]
  425e6c:	out    0x8b,al
  425e6e:	jo     0x425e69
  425e70:	jae    0x425e81
  425e72:	in     eax,dx
  425e73:	call   0x6200:0x8e0699d3
  425e7a:	mov    edx,0x997548b6
  425e7f:	cmp    dh,BYTE PTR [ebp-0xf]
  425e82:	add    eax,0xd7d1d818
  425e87:	and    edi,edx
  425e89:	(bad)  
  425e8a:	imul   DWORD PTR [esi]
  425e8c:	rcl    BYTE PTR [ebp-0x5a],1
  425e8f:	mov    DWORD PTR [ebp-0x67],esi
  425e92:	and    eax,0x5edb5bf8
  425e97:	add    al,BYTE PTR [esi+0x29a5a82c]
  425e9d:	pop    esp
  425e9e:	mov    ds:0x1393e8b2,eax
  425ea3:	mov    bh,bl
  425ea5:	jb     0x425f0a
  425ea7:	mov    dh,0x48
  425ea9:	sbb    eax,0xe1753aa0
  425eae:	xor    eax,0x1391d817
  425eb3:	and    al,0xfa
  425eb5:	jle    0x425f1e
  425eb7:	cs sar ch,1
  425eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ebb:	mov    DWORD PTR [ebp-0x67],esi
  425ebe:	add    BYTE PTR [eax],al
  425ec0:	adc    eax,0xdefb5bf7
  425ec5:	add    ch,BYTE PTR [esi]
  425ec7:	sub    DWORD PTR [ebp+esi*1-0x72a5d437],esp
  425ece:	push   ebp
  425ecf:	bound  esp,QWORD PTR [edx-0x638df81a]
  425ed5:	xor    DWORD PTR [edi+0x432252f],eax
  425edb:	ins    BYTE PTR es:[edi],dx
  425edc:	pop    esi
  425edd:	pop    ss
  425ede:	add    eax,0xe789656a
  425ee3:	idiv   DWORD PTR [eax-0x74]
  425ee6:	dec    ebx
  425ee7:	adc    eax,edi
  425ee9:	pop    ss
  425eea:	cli    
  425eeb:	push   ss
  425eec:	sub    DWORD PTR [edx-0xd5df17b],ecx
  425ef2:	out    0x0,eax
  425ef4:	jmp    0x74c1:0x78fff5f0
  425efb:	pop    es
  425efc:	jg     0x425f01
  425efe:	or     esi,0x3
  425f01:	rol    BYTE PTR [edi],1
  425f03:	add    DWORD PTR [ebx],0x75
  425f06:	je     0x425f12
  425f08:	jns    0x425f7f
  425f0a:	je     0x425f12
  425f0c:	fwait
  425f0d:	pop    esi
  425f0e:	jl     0x425ea2
  425f10:	les    eax,FWORD PTR [eax]
  425f12:	add    DWORD PTR [esi],0x6e
  425f15:	pop    es
  425f16:	or     esi,0x3
  425f19:	xchg   esi,eax
  425f1a:	push   esi
  425f1b:	xor    eax,DWORD PTR [esp+edx*8]
  425f1e:	mov    ecx,0x82d1c404
  425f23:	in     al,dx
  425f24:	add    BYTE PTR [eax],al
  425f26:	fld    QWORD PTR gs:[edx+0x757c39f8]
  425f2d:	add    al,0x76
  425f2f:	shl    bl,0x3c
  425f32:	stc    
  425f33:	jae    0x425fa9
  425f35:	adc    al,0xae
  425f37:	push   es
  425f38:	dec    esi
  425f39:	push   0x3daa17
  425f3e:	sahf   
  425f3f:	push   es
  425f40:	call   0x48eea2
  425f45:	mov    BYTE PTR [ecx],bh
  425f47:	jne    0x425f2c
  425f49:	adc    ebp,DWORD PTR [edx]
  425f4b:	fcomp  st(2)
  425f4d:	cmp    eax,0x620006
  425f52:	fcomp  QWORD PTR [esi]
  425f54:	pop    ebx
  425f55:	jmp    ebx
  425f57:	add    eax,0xf741e90f
  425f5d:	xor    cl,0x74
  425f60:	add    BYTE PTR [ebp+0x3c],dh
  425f63:	jns    0x425f63
  425f65:	imul   esi,DWORD PTR ds:0x24ffc679,0x9dff457a
  425f6f:	push   esp
  425f70:	int3   
  425f71:	mov    edi,0x81a82068
  425f76:	stc    
  425f77:	or     eax,0x6902fffd
  425f7c:	sub    eax,0x63cf2853
  425f81:	std    
  425f82:	repnz pushf 
  425f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f85:	xchg   esi,eax
  425f86:	inc    ebx
  425f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f88:	xchg   edx,eax
  425f89:	sti    
  425f8a:	add    BYTE PTR [eax],al
  425f8c:	push   0x277d869d
  425f91:	mov    ch,0x10
  425f93:	or     BYTE PTR [esi*4-0x3b536732],bl
  425f9a:	mov    WORD PTR [ebp-0x37],?
  425f9d:	mov    cl,0xda
  425f9f:	pusha  
  425fa0:	mov    ebx,0x24d6ce54
  425fa5:	out    0x9b,eax
  425fa7:	aaa    
  425fa8:	fsubp  st(5),st
  425faa:	and    ebx,edi
  425fac:	sub    BYTE PTR [ebp-0x7e9c78d1],bl
  425fb2:	add    ch,BYTE PTR [ecx+0x14297c92]
  425fb8:	sbb    BYTE PTR [esi],bl
  425fba:	xor    ebx,edi
  425fbc:	or     BYTE PTR [edi+ebp*1],0x4f
  425fc0:	sub    BYTE PTR [esi+0x1c657f57],cl
  425fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fc7:	rol    DWORD PTR [edi],cl
  425fc9:	and    edx,DWORD PTR [edx-0x754a27b]
  425fcf:	xchg   BYTE PTR [ebx+0x49],ah
  425fd2:	daa    
  425fd3:	mov    BYTE PTR [ebx],al
  425fd5:	pop    eax
  425fd6:	dec    DWORD PTR [eax+eiz*1+0x42fb9621]
  425fdd:	imul   esp,DWORD PTR [edi-0x662a1a],0x70ac5d84
  425fe7:	shl    BYTE PTR [edi+0x2],0x26
  425feb:	adc    BYTE PTR [edi+ecx*8+0x1d28],dl
  425ff2:	and    al,0x85
  425ff4:	jno    0x425f90
  425ff6:	push   ss
  425ff7:	mov    ebx,DWORD PTR [eax+eax*4+0x25]
  425ffb:	xchg   DWORD PTR [edx],eax
  425ffd:	xchg   esi,eax
  425ffe:	ins    DWORD PTR es:[edi],dx
  425fff:	mov    edx,esp
  426001:	jae    0x425fad
  426003:	inc    edx
  426004:	jmp    0x74bffe32
  426009:	mov    ds:0x4d719a45,eax
  42600e:	out    0x8a,al
  426010:	jno    0x426049
  426012:	mov    ds:0x9c982cc3,al
  426017:	add    ch,cl
  426019:	add    eax,edx
  42601b:	out    0x7f,al
  42601d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42601e:	pushf  
  42601f:	add    ch,cl
  426021:	xchg   BYTE PTR [eax],ah
  426023:	bound  esi,QWORD PTR [ebp+edx*4+0x43d179b6]
  42602a:	push   esp
  42602b:	adc    eax,0x98e2d29f
  426030:	mov    esp,0x5e029d04
  426035:	pop    ss
  426036:	mov    DWORD PTR [edx],esi
  426038:	mov    cl,BYTE PTR [edi]
  42603a:	mov    DWORD PTR [eax+0x2c],edi
  42603d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42603e:	in     eax,dx
  42603f:	sbb    al,0xd5
  426041:	cmp    BYTE PTR [eax],ch
  426043:	or     BYTE PTR [ecx-0x54],bl
  426046:	ins    BYTE PTR es:[edi],dx
  426047:	imul   dx,WORD PTR [ebp-0x7f0a4116],0x65
  42604f:	mov    ch,dl
  426051:	jg     0x42608a
  426053:	add    ebp,ecx
  426055:	add    eax,DWORD PTR [eax]
  426057:	add    BYTE PTR [edx],bl
  426059:	ret    0x86b9
  42605c:	and    BYTE PTR [ebx+0x3e],ch
  42605f:	xchg   ebp,eax
  426060:	inc    esi
  426061:	xor    ebp,DWORD PTR [edi+edi*2+0xd]
  426065:	mov    WORD PTR [eax],es
  426067:	or     BYTE PTR ss:[ebx],dh
  42606a:	call   0x44c734
  42606f:	ins    BYTE PTR es:[edi],dx
  426070:	pop    ecx
  426071:	inc    BYTE PTR [ebx+0x2a169]
  426077:	ficom  DWORD PTR [ebp+0x3a]
  42607a:	push   0x2a169
  42607f:	xchg   ebx,eax
  426080:	lahf   
  426081:	cmp    DWORD PTR [edi-0x6f],ecx
  426084:	sahf   
  426085:	add    al,BYTE PTR [eax]
  426087:	sub    DWORD PTR [edx],ebx
  426089:	adc    BYTE PTR [eax+0x508e11f0],0xe6
  426090:	repz (bad) ds:0xf081a129
  426097:	push   0x28
  426099:	mov    ?,WORD PTR [ebp-0x10]
  42609c:	xor    eax,esi
  42609e:	pop    ss
  42609f:	fcomp  DWORD PTR [esi+0x2]
  4260a2:	jg     0x426065
  4260a4:	outs   dx,BYTE PTR ds:[esi]
  4260a5:	(bad)  
  4260a7:	mov    dh,0x73
  4260a9:	xchg   BYTE PTR [ecx-0x64fad4],al
  4260af:	call   0x92c67952
  4260b4:	fadd   QWORD PTR [ecx+0x77cde57d]
  4260ba:	inc    ebp
  4260bb:	lea    eax,[eax]
  4260bd:	add    dh,cl
  4260bf:	xor    eax,0x3426fcfb
  4260c4:	sti    
  4260c5:	aam    0x52
  4260c7:	idiv   DWORD PTR [edi]
  4260c9:	jmp    0xe0b723c1
  4260ce:	sub    BYTE PTR [edi],bh
  4260d0:	pop    es
  4260d1:	call   0xd63e671d
  4260d6:	popf   
  4260d7:	jp     0x426136
  4260d9:	loop   0x42605b
  4260db:	lea    edx,ds:0xffc94cfd
  4260e1:	jmp    DWORD PTR [edx]
  4260e3:	outs   dx,BYTE PTR ds:[esi]
  4260e4:	adc    eax,0x4556a0
  4260e9:	cmp    BYTE PTR [ecx],cl
  4260eb:	cli    
  4260ec:	je     0x4260fa
  4260ee:	leave  
  4260ef:	or     BYTE PTR [eax+0x506e7bf9],dl
  4260f5:	call   0x391b43
  4260fa:	stos   DWORD PTR es:[edi],eax
  4260fb:	clc    
  4260fc:	imul   eax
  4260fe:	push   ss
  4260ff:	into   
  426100:	cmc    
  426101:	call   FWORD PTR [ebp+0x5f]
  426104:	add    DWORD PTR [eax],eax
  426106:	add    al,0x80
  426108:	test   DWORD PTR [eax-0x39088b17],esp
  42610e:	hlt    
  42610f:	add    al,0x40
  426111:	dec    ecx
  426112:	inc    ecx
  426113:	ja     0x426097
  426115:	inc    ebp
  426116:	iret   
  426117:	rcl    DWORD PTR [ebp+0x5b],cl
  42611a:	std    
  42611b:	mov    edi,0x9910008
  426120:	in     al,dx
  426121:	add    DWORD PTR [eax],0x84de800
  426127:	add    ah,al
  426129:	iret   
  42612a:	dec    ebp
  42612b:	push   edi
  42612c:	cmp    DWORD PTR [ebx],ebp
  42612e:	xchg   esp,eax
  42612f:	std    
  426130:	sti    
  426131:	je     0x42611b
  426133:	stc    
  426134:	push   eax
  426135:	jne    0x42612e
  426137:	push   0xffffff90
  426139:	(bad)  [edx-0x73]
  42613c:	add    DWORD PTR ds:0xcf1bfff7,edi
  426142:	popa   
  426143:	add    BYTE PTR [ecx],cl
  426145:	jmp    0x5ee8:0x742c83ab
  42614c:	int    0x74
  42614e:	test   DWORD PTR [ebp-0x74e30acc],0x8867ceb2
  426158:	sub    al,BYTE PTR [eax+0x0]
  42615b:	lea    ebx,[ebp+0x4af78016]
  426161:	cmp    DWORD PTR [eax+ebp*8],esi
  426164:	int3   
  426165:	push   0xda20ffff
  42616a:	(bad)  
  42616b:	xchg   esp,eax
  42616c:	pop    ebp
  42616d:	push   ss
  42616e:	les    esi,FWORD PTR [ebp-0x6c]
  426171:	mov    WORD PTR [edi-0x7fe8eb9e],?
  426177:	neg    DWORD PTR [edx]
  426179:	jmp    0xf563e6fe
  42617e:	mov    ?,ebx
  426180:	ins    DWORD PTR es:[edi],dx
  426181:	clc    
  426182:	clc    
  426183:	(bad)  
  426184:	scas   al,BYTE PTR es:[edi]
  426185:	pop    ecx
  426186:	inc    DWORD PTR [esi+0x8380000]
  42618c:	mov    ?,ebx
  42618e:	repnz xor edi,0xffffff8c
  426192:	jo     0x426181
  426194:	sub    ebp,eax
  426196:	xchg   esp,eax
  426197:	addr16 mov ?,ebx
  42619a:	sbb    al,0xb1
  42619c:	rcr    BYTE PTR [eax-0x78c94f54],cl
  4261a2:	jecxz  0x42616d
  4261a4:	cmp    BYTE PTR [ebp+0x19],0xb2
  4261a8:	ins    DWORD PTR es:[edi],dx
  4261a9:	sahf   
  4261aa:	mov    ebx,0x1e592c48
  4261af:	push   edx
  4261b0:	mov    cs,WORD PTR [ebx]
  4261b2:	and    ecx,edx
  4261b4:	add    al,0x0
  4261b6:	popf   
  4261b7:	adc    al,0xc6
  4261b9:	push   eax
  4261ba:	sub    BYTE PTR [esi],bl
  4261bc:	jnp    0x4261b5
  4261be:	xchg   edx,eax
  4261bf:	jo     0x4261f0
  4261c1:	lea    esp,[eax]
  4261c3:	sbb    eax,0xe982fb8c
  4261c8:	fwait
  4261c9:	or     dl,dl
  4261cb:	cdq    
  4261cc:	inc    DWORD PTR [ebp+ebx*2-0x63a67c60]
  4261d3:	cdq    
  4261d4:	dec    DWORD PTR [eax+ebx*1+0x569b1d02]
  4261db:	xchg   DWORD PTR [ecx+0x507e1880],edi
  4261e1:	xchg   edx,eax
  4261e2:	inc    esi
  4261e3:	xor    cl,BYTE PTR [edx-0x8]
  4261e6:	sbb    dh,cl
  4261e8:	test   al,0x3
  4261ea:	mov    edx,0x3351d
  4261ef:	add    BYTE PTR [edi*1-0x78da79c7],ah
  4261f6:	fiadd  DWORD PTR [edi+0x3e90187]
  4261fc:	call   0x897d:0x20922135
  426203:	call   0x7618:0x80b98706
  42620a:	(bad)  
  42620b:	xchg   ecx,eax
  42620c:	div    BYTE PTR [ecx]
  42620e:	ins    BYTE PTR es:[edi],dx
  42620f:	mov    BYTE PTR [ecx],bl
  426211:	mov    edx,esi
  426213:	xchg   ecx,eax
  426214:	dec    ebp
  426215:	call   0xc46c:0x29d3925
  42621c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42621d:	jle    0x4261bb
  42621f:	add    al,0x9d
  426221:	add    al,BYTE PTR [ecx-0x7c]
  426224:	popf   
  426225:	add    ch,cl
  426227:	sbb    eax,0x1be618c2
  42622c:	popf   
  42622d:	add    ch,cl
  42622f:	and    DWORD PTR [eax],0x7d
  426232:	ins    DWORD PTR es:[edi],dx
  426233:	mov    esp,DWORD PTR [esi+0x587f1986]
  426239:	mov    dl,BYTE PTR [ecx-0x657aa32b]
  42623f:	mov    BYTE PTR [ebp-0xa],bl
  426242:	ins    BYTE PTR es:[edi],dx
  426243:	ins    BYTE PTR es:[edi],dx
  426244:	popf   
  426245:	add    ch,cl
  426247:	jle    0x426221
  426249:	mov    bl,BYTE PTR [ecx]
  42624b:	jg     0x42623d
  42624d:	sahf   
  42624e:	mov    bh,0xac
  426250:	test   DWORD PTR [eax],ecx
  426252:	add    BYTE PTR [edi-0x75f10000],ch
  426258:	test   BYTE PTR [ecx-0x2378dc7b],ch
  42625e:	add    bh,BYTE PTR [esi-0x3e]
  426261:	repnz fistp DWORD PTR [edx+0x821be74]
  426268:	call   0x6e760856
  42626d:	icebp  
  42626e:	pop    ds
  42626f:	mov    DWORD PTR [eax],eax
  426271:	jmp    0xaeb56534
  426276:	stos   DWORD PTR es:[edi],eax
  426277:	inc    eax
  426278:	(bad)  
  426279:	arpl   WORD PTR [ecx+0xf],bx
  42627c:	adc    DWORD PTR ds:[ebx+0x27],ebp
  426280:	cli    
  426281:	push   ds
  426282:	nop
  426283:	mov    al,BYTE PTR [ebp-0x7b2e5aea]
  426289:	pop    ss
  42628a:	xchg   esi,eax
  42628b:	mul    DWORD PTR [ebp-0x62]
  42628e:	or     eax,0x5edb23f0
  426293:	add    bh,BYTE PTR [edi+0x21]
  426296:	or     al,0x9e
  426298:	pop    es
  426299:	xchg   edi,eax
  42629a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42629b:	ja     0x4262e2
  42629d:	loope  0x42622d
  42629f:	call   0xaf37:0x8a2ca7bb
  4262a6:	mov    bl,0x26
  4262a8:	push   edx
  4262a9:	ss inc edx
  4262ab:	jg     0x426241
  4262ad:	les    ecx,FWORD PTR ds:0x4705e88a
  4262b3:	mov    ebx,edi
  4262b5:	bound  esp,QWORD PTR [ebx-0x6]
  4262b8:	mov    cl,bh
  4262ba:	add    BYTE PTR [eax],al
  4262bc:	daa    
  4262bd:	pop    es
  4262be:	hlt    
  4262bf:	pop    edx
  4262c0:	lahf   
  4262c1:	mov    DWORD PTR [ebp-0x5f],esi
  4262c4:	sub    eax,0xdefb9fef
  4262c9:	add    bh,BYTE PTR [edi+0x1c]
  4262cc:	adc    DWORD PTR [ecx-0x12c0ff7c],ecx
  4262d2:	or     ecx,DWORD PTR [ebp-0x68207]
  4262d8:	repz shl edi,1
  4262db:	jbe    0x42631a
  4262dd:	jae    0x4262d6
  4262df:	add    DWORD PTR [ecx+0x6d],0x0
  4262e3:	jne    0x426293
  4262e5:	add    eax,0xf9dcf845
  4262ea:	(bad)  
  4262eb:	(bad)  
  4262ec:	rol    DWORD PTR [eax*4-0x88d84cc],cl
  4262f3:	push   eax
  4262f4:	jae    0x4262e2
  4262f6:	out    dx,eax
  4262f7:	dec    DWORD PTR [ecx+0x11]
  4262fa:	adc    DWORD PTR [eax+0x34],eax
  4262fd:	jl     0x4262bf
  4262ff:	jns    0xb4425979
  426305:	data16 adc BYTE PTR [edi-0x64],dl
  426309:	fcomp  QWORD PTR [esi+edi*8-0x6d]
  42630d:	stos   WORD PTR es:[edi],ax
  42630f:	lea    ecx,[ecx+0x79]
  426312:	call   0xf7b61c65
  426317:	jmp    FWORD PTR [ecx+0x71]
  42631a:	not    DWORD PTR ds:0x3b9040
  426320:	add    BYTE PTR [eax],al
  426322:	std    
  426323:	arpl   WORD PTR [ecx],ax
  426325:	add    ah,al
  426327:	add    DWORD PTR [ebp-0x88b0e6c],0x4000b4c6
  426331:	dec    ecx
  426332:	jns    0x4263ab
  426334:	add    DWORD PTR [ebp-0x18],0x68
  426338:	adc    al,0xb9
  42633a:	loop   0x42633a
  42633c:	(bad)  
  42633d:	inc    DWORD PTR [ecx+0x7b]
  426340:	xchg   esp,eax
  426341:	std    
  426342:	inc    ebx
  426343:	je     0x426303
  426345:	add    BYTE PTR [eax+eax*2+0x729d7549],al
  42634c:	iret   
  42634d:	mov    edi,0xc926d3e2
  426352:	pop    edi
  426353:	xchg   esi,eax
  426354:	call   DWORD PTR [esi+eiz*1+0x76]
  426358:	test   esp,ebp
  42635a:	xchg   ecx,eax
  42635b:	xchg   edi,eax
  42635c:	(bad)  
  42635d:	call   FWORD PTR [esi]
  42635f:	out    0x8b,eax
  426361:	sti    
  426362:	out    dx,al
  426363:	inc    ebx
  426364:	rcl    esi,1
  426366:	(bad)  
  426367:	popf   
  426368:	add    BYTE PTR [ebp-0x474d0c7],0xed
  42636f:	xor    al,0x19
  426371:	or     bh,al
  426373:	xchg   ebx,eax
  426374:	daa    
  426375:	call   0x41ff00
  42637a:	sbb    BYTE PTR [edi],dl
  42637c:	mov    al,ds:0x33d522fd
  426381:	sti    
  426382:	nop
  426383:	lea    ecx,[edx-0x4affff8b]
  426389:	icebp  
  42638a:	es push ebp
  42638c:	popf   
  42638d:	cdq    
  42638e:	jbe    0x426380
  426390:	sbb    ah,ch
  426392:	pop    ss
  426393:	aas    
  426394:	push   ds
  426395:	jg     0x426386
  426397:	jmp    FWORD PTR [esi-0x57]
  42639a:	mov    dh,BYTE PTR [ebp-0x73]
  42639d:	mov    WORD PTR [eax],ds
  42639f:	sbb    dl,ah
  4263a1:	scas   al,BYTE PTR es:[edi]
  4263a2:	or     DWORD PTR [edi],0x5d
  4263a5:	cdq    
  4263a6:	mov    al,al
  4263a8:	dec    ecx
  4263a9:	in     eax,dx
  4263aa:	mov    dh,BYTE PTR [ebp-0x4f]
  4263ad:	push   ds
  4263ae:	dec    eax
  4263af:	clc    
  4263b0:	aaa    
  4263b1:	call   0xffff:0x99450019
  4263b8:	fld    QWORD PTR [eax+ebx*1+0x18]
  4263bc:	mov    ch,0xd
  4263be:	ret    
  4263bf:	cli    
  4263c0:	mov    ds:0xb675bf1d,al
  4263c5:	add    ah,BYTE PTR [edx+0x28f1aaf8]
  4263cb:	add    al,0xa
  4263cd:	mov    edi,DWORD PTR [ecx]
  4263cf:	sbb    BYTE PTR [esi-0x62fcae3b],bl
  4263d5:	add    bh,ah
  4263d7:	push   es
  4263d8:	ja     0x426399
  4263da:	imul   ecx,DWORD PTR [edx-0x2da0eeff],0x8c24756c
  4263e4:	inc    ebp
  4263e5:	sub    BYTE PTR ds:0x2377568d,0x2d
  4263ec:	add    BYTE PTR [eax],al
  4263ee:	repnz mov ecx,0x2e42f727
  4263f4:	pop    esi
  4263f5:	lahf   
  4263f6:	int3   
  4263f7:	xor    edi,ecx
  4263f9:	add    esi,ebp
  4263fb:	add    bh,bh
  4263fd:	cld    
  4263fe:	sub    bl,BYTE PTR [ebx+0x29d0897]
  426404:	jo     0x4263a1
  426406:	sbb    al,BYTE PTR [ebx-0x75138517]
  42640c:	pop    es
  42640d:	jl     0x42646f
  42640f:	mov    bh,BYTE PTR [edi+0x3]
  426412:	sbb    al,cl
  426414:	pusha  
  426415:	cmp    cl,bh
  426417:	cdq    
  426418:	mov    edi,0xb6029d08
  42641d:	mov    esp,0x18f13dea
  426422:	popf   
  426423:	out    dx,eax
  426424:	fwait
  426425:	pop    DWORD PTR [ebp-0xe]
  426428:	or     DWORD PTR [ebx*4-0x5863c6cf],eax
  42642f:	inc    esp
  426430:	jmp    0xf63e2638
  426435:	xor    al,0xa1
  426437:	jns    0x426424
  426439:	jp     0x42648a
  42643b:	(bad)  
  42643c:	scas   eax,DWORD PTR es:[edi]
  42643d:	shl    DWORD PTR [edx],0x3e
  426440:	add    BYTE PTR ds:0x543cba9,cl
  426446:	cdq    
  426447:	cmc    
  426448:	adc    BYTE PTR [ebx],bl
  42644a:	xchg   edi,eax
  42644b:	mov    DWORD PTR [ebp+eax*8-0x76],eax
  42644f:	cmp    DWORD PTR [ebp+ecx*8+0x0],eax
  426453:	add    BYTE PTR [edx+0x5eda04f5],bl
  426459:	ret    
  42645a:	out    0xeb,al
  42645c:	dec    ebp
  42645d:	ret    0xd9be
  426460:	sahf   
  426461:	xlat   BYTE PTR ds:[ebx]
  426462:	xchg   BYTE PTR [ebp+0x1a306f1c],al
  426468:	xchg   ebx,eax
  426469:	aad    0x8c
  42646b:	lods   al,BYTE PTR ds:[esi]
  42646c:	or     dl,bl
  42646e:	mov    WORD PTR [edx+eax*1+0x22ac8cd3],fs
  426475:	rol    DWORD PTR [esi+0x5d8f36a4],cl
  42647b:	and    eax,0x3fc23311
  426480:	sbb    BYTE PTR [edi-0x7fe51940],al
  426486:	add    cl,ch
  426488:	sahf   
  426489:	mov    DWORD PTR [ebp-0xb],eax
  42648c:	xchg   ebp,eax
  42648d:	sbb    al,BYTE PTR [edi-0x3c765d5f]
  426493:	bound  ebp,QWORD PTR [ecx+edi*4]
  426496:	add    BYTE PTR [ecx+0x69b92b42],ch
  42649c:	call   0x6e72:0x63c00002
  4264a3:	ror    DWORD PTR [ecx+0x3a743907],cl
  4264a9:	icebp  
  4264aa:	push   cs
  4264ab:	out    0xab,al
  4264ad:	jb     0x4264ae
  4264af:	ficomp DWORD PTR [ecx]
  4264b1:	clc    
  4264b2:	jmp    0x4264ae
  4264b4:	(bad)  
  4264b6:	push   ecx
  4264b7:	rol    DWORD PTR [eax],0x0
  4264ba:	and    edi,DWORD PTR [esi-0x5]
  4264bd:	add    bl,bl
  4264bf:	call   0xfc0:0x89f431fa
  4264c6:	xor    BYTE PTR [eax],al
  4264c8:	add    BYTE PTR [eax],al
  4264ca:	test   dl,bh
  4264cc:	mov    esi,0x444c378b
  4264d1:	call   0x5b0d17c
  4264d6:	ins    DWORD PTR es:[edi],dx
  4264d7:	sbb    ah,ah
  4264d9:	jb     0x426552
  4264db:	mov    ?,WORD PTR [ebp-0x18]
  4264de:	xchg   DWORD PTR [ebx+0x722075f7],edx
  4264e4:	rcl    BYTE PTR [eax-0x7e],0x9e
  4264e8:	pop    eax
  4264e9:	dec    ebx
  4264eb:	mov    fs,ebx
  4264ed:	add    dh,BYTE PTR [esi+0x70c08446]
  4264f3:	sub    DWORD PTR [ebx+0x3992bfc7],eax
  4264f9:	inc    ebp
  4264fa:	in     al,0x13
  4264fc:	adc    dh,BYTE PTR [edi+0x41]
  4264ff:	dec    esp
  426500:	je     0x4264de
  426502:	out    0x71,al
  426504:	div    BYTE PTR [ebp-0x2c]
  426507:	add    ch,dl
  426509:	call   DWORD PTR [ecx-0x4f]
  42650c:	or     eax,ecx
  42650e:	push   esp
  42650f:	aaa    
  426510:	call   0xf7d11044
  426515:	jmp    0x42650d
  426517:	push   edx
  426518:	mov    ebx,0x3319c484
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	add    bl,al
  426521:	cli    
  426522:	jmp    0x631a:0x6aad4139
  426529:	or     BYTE PTR [ecx],bh
  42652b:	jne    0x4264dd
  42652d:	adc    ecx,DWORD PTR [ebx]
  42652f:	push   DWORD PTR [ecx-0x52]
  426532:	sti    
  426533:	icebp  
  426534:	jmp    0x426548
  426536:	aam    0x13
  426538:	popf   
  426539:	stos   BYTE PTR es:[edi],al
  42653a:	xor    al,0x52
  42653c:	lds    ebp,FWORD PTR [eax-0x7a]
  42653f:	sti    
  426540:	mov    dl,0x53
  426542:	add    ch,BYTE PTR [esi]
  426544:	fucom  st(6)
  426546:	ret    
  426547:	je     0x4264d8
  426549:	in     al,0x40
  42654b:	adc    BYTE PTR [eax],ah
  42654d:	stos   BYTE PTR es:[edi],al
  42654e:	adc    BYTE PTR [ebx],al
  426550:	push   ds
  426551:	jb     0x4264d9
  426553:	jg     0x42652a
  426555:	xchg   BYTE PTR gs:[eax-0x792a7b64],dh
  42655c:	clc    
  42655d:	pop    ebp
  42655e:	js     0x4265d5
  426560:	imul   edx,DWORD PTR [edx+0x16afa6e],0x698d7d83
  42656a:	or     edx,DWORD PTR [ecx]
  42656c:	(bad)  
  42656d:	popa   
  42656e:	jp     0x426532
  426570:	in     eax,dx
  426571:	call   0x778c7586
  426576:	iret   
  426577:	adc    ebp,ebx
  426579:	imul   eax,DWORD PTR [edx+0x28e4a9c4],0x8baf2008
  426583:	push   eax
  426584:	add    BYTE PTR [eax],al
  426586:	int    0x99
  426588:	das    
  426589:	call   0xfbc894f1
  42658e:	jp     0x42651f
  426590:	sub    cl,cl
  426592:	fbstp  TBYTE PTR [ebp-0x1]
  426595:	push   esp
  426596:	push   ss
  426597:	push   cs
  426598:	test   esp,ebp
  42659a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42659b:	imul   edi,edi,0xffffffff
  42659e:	dec    esi
  42659f:	mov    bh,0x2e
  4265a1:	sti    
  4265a2:	push   0xf9857875
  4265a7:	jle    0x42652f
  4265a9:	sti    
  4265aa:	loop   0x4265aa
  4265ac:	test   BYTE PTR [edi-0x3b],0xa5
  4265b0:	xor    al,BYTE PTR [eax]
  4265b2:	popf   
  4265b3:	add    ch,BYTE PTR [esi-0x6d]
  4265b6:	and    BYTE PTR [ecx-0x16],bh
  4265b9:	jg     0x426599
  4265bb:	add    ch,cl
  4265bd:	add    edi,DWORD PTR [edi]
  4265bf:	or     DWORD PTR [ebx],0x4
  4265c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265c3:	xchg   BYTE PTR [ebx+eax*1+0x3866029d],al
  4265ca:	xchg   ecx,eax
  4265cb:	jg     0x4265c3
  4265cd:	mov    ah,BYTE PTR [eax]
  4265cf:	jg     0x426605
  4265d1:	cmc    
  4265d2:	and    DWORD PTR [ebp+0x7f868895],eax
  4265d8:	cmp    DWORD PTR [ebx+0x43f68aa8],ecx
  4265de:	popf   
  4265df:	test   DWORD PTR [ecx-0x164567f1],ebp
  4265e5:	add    ebx,DWORD PTR [ebp+0x1e1904]
  4265eb:	add    BYTE PTR [edx-0x17],ah
  4265ee:	jmp    0xe945030e
  4265f3:	inc    ebx
  4265f4:	and    BYTE PTR [ebp+0x7f468855],al
  4265fa:	mov    ecx,0x410ed878
  4265ff:	jle    0x4265fc
  426601:	jg     0x42664d
  426603:	jg     0x426662
  426605:	test   al,0x78
  426608:	loopne 0x426680
  42660a:	cdq    
  42660b:	and    BYTE PTR [esi],0xf5
  42660e:	add    DWORD PTR [ebx+0x405c1290],ecx
  426614:	mov    eax,ds:0x73410d2
  426619:	jg     0x426635
  42661b:	jg     0x4265fa
  42661d:	cmc    
  42661e:	mov    BYTE PTR [esi+0x100a7678],al
  426624:	mov    edx,0xe68b8483
  426629:	hlt    
  42662a:	ret    
  42662b:	xor    cl,BYTE PTR [esi-0x73]
  42662e:	add    BYTE PTR [edx+ebp*1-0x358b052e],ch
  426635:	jnp    0x42664c
  426637:	or     ebx,edx
  426639:	add    BYTE PTR ds:[ecx+ebx*8+0x66],ah
  42663e:	adc    BYTE PTR [edx+edi*2+0x76],ah
  426642:	push   eax
  426643:	cmp    DWORD PTR [ecx-0x73],ebp
  426646:	pop    ebp
  426647:	cmc    
  426648:	push   es
  426649:	inc    esp
  42664b:	mov    edi,0x3dc08614
  426650:	add    BYTE PTR [eax],al
  426652:	je     0x4266cd
  426654:	jne    0x426633
  426656:	and    eax,0xdefba018
  42665b:	add    bh,BYTE PTR [edi+0x2c]
  42665e:	test   DWORD PTR [ecx+0x52],edi
  426661:	cs and al,0x18
  426664:	nop
  426665:	cli    
  426666:	fiadd  WORD PTR [edx]
  426668:	test   DWORD PTR [ecx+0x6a62048d],ebp
  42666e:	push   edi
  42666f:	jle    0x42667b
  426671:	ins    BYTE PTR es:[edi],dx
  426672:	cmp    BYTE PTR [ecx-0x5],0x6e
  426676:	retf   0xbc7
  426679:	push   ecx
  42667a:	mov    eax,ds:0xe95efabc
  42667f:	add    esp,edi
  426681:	jecxz  0x426636
  426683:	(bad)  
  426684:	or     eax,DWORD PTR [ecx+0xd]
  426687:	inc    esp
  426688:	cli    
  426689:	inc    esi
  42668a:	push   ebx
  42668b:	mov    esi,0x4b719f5b
  426690:	mov    esi,0x49859ee5
  426695:	rcl    DWORD PTR [ecx-0xe0604fd],1
  42669b:	dec    edx
  42669c:	test   BYTE PTR [ecx],ch
  42669e:	add    al,0x97
  4266a0:	shl    DWORD PTR [esi+ebx*2+0x79],0xbf
  4266a5:	push   cs
  4266a6:	lea    esp,[esi]
  4266a8:	add    al,0x0
  4266aa:	outs   dx,DWORD PTR ds:[esi]
  4266ab:	cmp    DWORD PTR [eax],ebx
  4266ad:	mov    esi,ebp
  4266af:	aaa    
  4266b0:	not    DWORD PTR [eax-0x38]
  4266b3:	push   esi
  4266b4:	enter  0x84,0x0
  4266b8:	test   BYTE PTR [ebx-0x6c],bh
  4266bb:	rcl    DWORD PTR [ecx-0x40],0xf6
  4266bf:	ret    0x1b8
  4266c2:	div    DWORD PTR [eax+ebp*4+0x2]
  4266c6:	or     DWORD PTR [ecx-0x54],0xfffffffe
  4266ca:	add    BYTE PTR [edx-0x1d],dl
  4266cd:	xor    DWORD PTR [eax],ecx
  4266cf:	xor    ebp,ebp
  4266d1:	std    
  4266d2:	mov    edi,0x8d40f90f
  4266d7:	inc    ecx
  4266d8:	inc    ebx
  4266d9:	inc    edi
  4266da:	add    al,0x0
  4266dc:	inc    ebx
  4266dd:	or     eax,0x390f0424
  4266e2:	sbb    BYTE PTR [ebx+0x50f73785],cl
  4266e8:	push   eax
  4266e9:	push   esi
  4266ea:	enter  0x3484,0x7a
  4266ee:	xchg   esp,eax
  4266ef:	shl    ecx,0xc0
  4266f2:	test   dl,0x48
  4266f5:	add    DWORD PTR [ebx+0xfe6c49],eax
  4266fb:	inc    DWORD PTR [ecx+esi*2]
  4266fe:	sub    cl,cl
  426700:	mov    eax,0x85950741
  426705:	hlt    
  426706:	inc    eax
  426707:	inc    DWORD PTR [edi+0x3824748a]
  42670d:	dec    BYTE PTR [eax+0x18]
  426710:	scas   eax,DWORD PTR es:[edi]
  426711:	add    BYTE PTR [edx-0x1],cl
  426714:	xor    al,0x6d
  426716:	sub    cl,cl
  426718:	js     0x42675b
  42671a:	pop    es
  42671b:	xchg   ebp,eax
  42671c:	add    BYTE PTR [eax],al
  42671e:	mov    ch,0xf4
  426720:	inc    eax
  426721:	push   DWORD PTR [esi-0x62750483]
  426727:	mov    ds:0xc9c86e7,al
  42672c:	das    
  42672d:	sbb    BYTE PTR [esi-0x6d3f84ce],ch
  426733:	(bad)  
  426734:	mov    ebp,0xbf745c8d
  426739:	push   edx
  42673a:	ins    DWORD PTR es:[edi],dx
  42673b:	fimul  WORD PTR [edi]
  42673d:	adc    dl,ah
  42673f:	imul   eax,DWORD PTR [ebx],0xffffff87
  426742:	pop    ebp
  426743:	imul   edi,DWORD PTR [ebx+eax*2-0x5b],0x43
  426748:	jne    0x4267be
  42674a:	popf   
  42674b:	imul   edi,DWORD PTR [ebx+edi*2+0x75],0xffffffac
  426750:	cmp    esi,DWORD PTR [eax]
  426752:	das    
  426753:	es add BYTE PTR ds:[edx+0x2d],ah
  426758:	rol    BYTE PTR [ebx-0x3cfbd828],1
  42675e:	loop   0x4267c1
  426760:	gs inc ebp
  426762:	fild   QWORD PTR [ecx-0x46]
  426765:	inc    ebx
  426766:	mov    ecx,0x9d3e40d1
  42676b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42676c:	cmp    eax,DWORD PTR [eax+0x4f]
  42676f:	das    
  426770:	add    BYTE PTR ds:[edx+0x25],bl
  426774:	inc    eax
  426775:	in     eax,0xe0
  426777:	daa    
  426778:	add    al,0xc3
  42677a:	fisub  DWORD PTR [ecx]
  42677c:	add    DWORD PTR [ebp-0x21],0x69
  426780:	jbe    0x426745
  426782:	add    BYTE PTR [eax],al
  426784:	jecxz  0x4267ae
  426786:	mov    al,BYTE PTR [ecx+eax*4+0x6d]
  42678a:	add    al,0x52
  42678c:	fstp   TBYTE PTR es:[edx+0x43f0a902]
  426793:	add    BYTE PTR [ecx+0x12e82d63],ch
  426799:	xchg   edx,eax
  42679a:	test   ebx,edi
  42679c:	es and al,0x22
  42679f:	mov    esi,0x53e902a1
  4267a4:	pushf  
  4267a5:	aas    
  4267a6:	pop    ecx
  4267a7:	add    eax,0xd2e90b3b
  4267ac:	in     eax,0x9f
  4267ae:	stc    
  4267af:	dec    ecx
  4267b0:	stos   BYTE PTR es:[edi],al
  4267b1:	add    ch,BYTE PTR [eax-0x594772b5]
  4267b7:	add    ebp,DWORD PTR [edi-0x79]
  4267ba:	fnstcw WORD PTR [edx-0x3d]
  4267bd:	inc    ecx
  4267be:	sti    
  4267bf:	in     eax,0x7b
  4267c1:	jo     0x426813
  4267c3:	mov    ?,WORD PTR [eax]
  4267c5:	mov    edx,esp
  4267c7:	pop    ss
  4267c8:	mov    edx,0x99136072
  4267cd:	jg     0x426778
  4267cf:	call   FWORD PTR [ebp+0x3d]
  4267d2:	mov    ch,0xc2
  4267d4:	bound  eax,QWORD PTR [edx]
  4267d6:	cmp    eax,0xe50d24a5
  4267db:	dec    ecx
  4267dc:	rol    BYTE PTR [edx],cl
  4267de:	or     eax,ebx
  4267e0:	cmp    al,0xe
  4267e2:	pop    edi
  4267e3:	inc    edx
  4267e4:	popf   
  4267e5:	cmp    eax,0x219
  4267ea:	popf   
  4267eb:	add    ah,dl
  4267ed:	ja     0x42681c
  4267ef:	add    ch,cl
  4267f1:	add    ecx,edi
  4267f3:	shl    DWORD PTR [ebp+0x7a7b27b1],cl
  4267f9:	xchg   dh,dl
  4267fb:	xchg   DWORD PTR [edi-0x2a726686],ebx
  426801:	dec    ecx
  426802:	mov    al,BYTE PTR [edx]
  426804:	push   ss
  426805:	add    BYTE PTR [eax],dl
  426807:	adc    bl,BYTE PTR [edi+0x2b1f9d42]
  42680d:	rcr    BYTE PTR [esi+0x6a49f98d],cl
  426813:	add    ch,BYTE PTR [esi-0x75]
  426816:	dec    esp
  426817:	push   0x66
  426819:	sahf   
  42681a:	pushf  
  42681b:	das    
  42681c:	add    ch,ch
  42681e:	gs mov dl,0xa8
  426821:	stos   BYTE PTR es:[edi],al
  426822:	sahf   
  426823:	sub    eax,DWORD PTR [esp+esi*2]
  426826:	ret    0x3f42
  426829:	jmp    0x6446f18a
  42682e:	out    dx,al
  42682f:	mov    ah,0x3f
  426831:	jmp    0xea21dc57
  426836:	sahf   
  426837:	add    bh,BYTE PTR [ebx+ebp*1+0x21]
  42683b:	je     0x4268a8
  42683d:	jmp    0x4267dd
  42683f:	add    bh,BYTE PTR [ebp-0x46]
  426842:	inc    ebp
  426843:	push   cs
  426844:	xchg   ebp,eax
  426845:	stc    
  426846:	push   esp
  426847:	cmp    eax,DWORD PTR [eax]
  426849:	jb     0x4267e9
  42684b:	sub    eax,DWORD PTR [ecx-0x13]
  42684e:	add    BYTE PTR [eax],al
  426850:	mov    ebp,0x25e82f40
  426855:	jp     0x4268d6
  426857:	into   
  426858:	sahf   
  426859:	cmp    DWORD PTR [esp+edi*2],0xfffffff1
  42685d:	stos   BYTE PTR es:[edi],al
  42685e:	aas    
  42685f:	jmp    0xadb723d1
  426864:	and    BYTE PTR [esi-0x2f],bh
  426867:	xchg   ecx,eax
  426868:	ins    BYTE PTR es:[edi],dx
  426869:	jb     0x4267f4
  42686b:	loopne 0x42688a
  42686d:	inc    esp
  42686e:	add    al,0x68
  426870:	es inc edi
  426872:	mov    edi,0xd3f6a12a
  426877:	jb     0x4268e3
  426879:	dec    esi
  42687a:	mov    edi,0x10a3a12a
  42687f:	xor    ebx,esp
  426881:	add    ch,BYTE PTR [edi]
  426883:	test   al,0x3c
  426885:	inc    esp
  426886:	das    
  426887:	sub    ah,al
  426889:	dec    edx
  42688a:	rcl    DWORD PTR [ecx+0x1c],1
  42688d:	add    DWORD PTR fs:[edx],ebx
  426890:	popf   
  426891:	xchg   DWORD PTR [eax+0x5b02dc81],esi
  426897:	add    BYTE PTR [edi],ah
  426899:	jns    0x4268d6
  42689b:	rol    BYTE PTR [edi+0x6],0x56
  42689f:	mov    ds:0x3b43b8,eax
  4268a4:	pop    es
  4268a5:	inc    esi
  4268a6:	or     DWORD PTR [ecx+esi*2],0x6e
  4268aa:	mov    ch,0x43
  4268ac:	add    al,0xc6
  4268ae:	call   0x8a:0xffc34e0c
  4268b5:	add    BYTE PTR [ebp+0x270be845],dh
  4268bb:	mov    esi,0xd0e1c183
  4268c0:	push   edi
  4268c1:	cmp    cl,bl
  4268c3:	inc    esp
  4268c4:	loopne 0x4268cd
  4268c6:	pop    es
  4268c7:	mov    esi,0xfa91c183
  4268cc:	(bad)  
  4268cd:	(bad)  
  4268ce:	fild   DWORD PTR [eax+eiz*8+0xf]
  4268d2:	xchg   edi,eax
  4268d3:	mov    dh,0x83
  4268d5:	shl    ebp,0x9d
  4268d8:	or     dh,BYTE PTR [ebx]
  4268da:	cmc    
  4268db:	inc    edx
  4268dc:	push   ebp
  4268dd:	mov    ebp,DWORD PTR [eax+0x34]
  4268e0:	push   ecx
  4268e1:	push   0x3b4234
  4268e6:	cmp    ebp,DWORD PTR [eax-0x11]
  4268e9:	adc    dh,BYTE PTR [esi+edi*8+0x353c458c]
  4268f0:	not    DWORD PTR ds:0x3b74f0
  4268f6:	add    DWORD PTR [esi+0x75],eax
  4268f9:	or     BYTE PTR [ebx],bl
  4268fb:	push   0xfe841307
  426900:	loop   0x426905
  426902:	mov    edi,0xdde8f838
  426907:	jg     0x426900
  426909:	jmp    DWORD PTR [esp+eax*1]
  42690c:	leave  
  42690d:	ret    
  42690e:	dec    esp
  42690f:	mov    ch,0xbb
  426911:	inc    ebx
  426912:	popf   
  426913:	imul   eax,DWORD PTR [ebp+edx*1+0x3f7d35],0x0
  42691b:	add    BYTE PTR [esi-0x15],bl
  42691e:	ror    DWORD PTR [edi-0x5420],0x6e
  426925:	in     al,0xe1
  426927:	out    dx,eax
  426928:	scas   eax,DWORD PTR es:[edi]
  426929:	stos   DWORD PTR es:[edi],eax
  42692a:	call   DWORD PTR [ecx+0x6a]
  42692d:	hlt    
  42692e:	shr    ebx,0x8f
  426931:	stos   DWORD PTR es:[edi],eax
  426932:	push   DWORD PTR [ebx+eax*8-0x2f]
  426936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426937:	lds    ebx,FWORD PTR [esi+0x6b]
  42693a:	sub    eax,0xc1eacafb
  42693f:	(bad)  
  426940:	loopne 0x4268ed
  426942:	(bad)  
  426943:	dec    DWORD PTR [eax+0x55]
  426946:	xchg   edi,eax
  426947:	xchg   esp,eax
  426948:	retf   0x7f67
  42694b:	test   ch,bl
  42694d:	(bad)  
  42694e:	adc    al,0xc3
  426950:	mov    al,ds:0x9d3f48ef
  426955:	scas   eax,DWORD PTR es:[edi]
  426956:	(bad)  
  426957:	cmp    eax,0x9009a19d
  42695c:	fsubr  DWORD PTR [ebx]
  42695e:	add    al,0x1
  426960:	repz mov eax,0xad6dba53
  426966:	ret    
  426967:	push   eax
  426969:	test   al,0x57
  42696b:	call   0xfbc20976
  426970:	shl    esp,cl
  426972:	jnp    0x42696f
  426974:	dec    esi
  426975:	in     eax,0x46
  426977:	pop    ebx
  426978:	retf   
  426979:	xor    al,0x43
  42697b:	aaa    
  42697c:	fld    DWORD PTR [ebp+0x3]
  42697f:	jb     0x426981
  426981:	add    BYTE PTR [ebx-0x66dc3cac],bh
  426987:	pop    ss
  426988:	les    eax,FWORD PTR [esi+0x2f036f4d]
  42698e:	pop    ebp
  42698f:	add    ecx,DWORD PTR [esi+0x13]
  426992:	inc    ebp
  426993:	mov    bl,BYTE PTR [edx-0x7d]
  426996:	ss xor al,0x37
  426999:	jnp    0x4269ca
  42699b:	mov    WORD PTR [edi],fs
  42699d:	pop    es
  42699e:	fstp   DWORD PTR [esi]
  4269a0:	icebp  
  4269a1:	loope  0x4269fb
  4269a3:	(bad)  
  4269a4:	call   0xf0b32d82
  4269a9:	idiv   DWORD PTR [esi+0x6e23b306]
  4269af:	pop    es
  4269b0:	pop    ebx
  4269b1:	add    cl,al
  4269b3:	push   cs
  4269b4:	mov    dl,0xbb
  4269b6:	test   BYTE PTR [edx],0xe9
  4269b9:	add    esi,ebp
  4269bb:	mov    bh,0xa
  4269bd:	and    esi,0xffffff8b
  4269c0:	mov    ch,0x27
  4269c2:	test   eax,0x5f11e58a
  4269c7:	cmp    edi,DWORD PTR [ebp+0x27]
  4269ca:	lods   eax,DWORD PTR ds:[esi]
  4269cb:	hlt    
  4269cc:	add    ebx,esp
  4269ce:	fs inc esp
  4269d0:	cmc    
  4269d1:	add    edx,DWORD PTR [eax-0x75]
  4269d4:	int    0x86
  4269d6:	ror    DWORD PTR [esi],0x3b
  4269d9:	xor    DWORD PTR [eax],0x12
  4269dc:	shl    DWORD PTR [eax-0x713d885a],0x8d
  4269e3:	mov    DWORD PTR [esp+edi*2],esi
  4269e6:	add    BYTE PTR [eax],al
  4269e8:	test   DWORD PTR ds:0xa98682b2,ebp
  4269ee:	jmp    0x1d4506f7
  4269f3:	adc    al,0x5e
  4269f5:	mov    ebp,0xc21a9f8c
  4269fa:	call   0x59b54a49
  4269ff:	mov    ds,ebp
  426a01:	add    cl,BYTE PTR [esi-0x7342a1ef]
  426a07:	mov    bl,0x1a
  426a09:	ret    0xe8ff
  426a0c:	xlat   BYTE PTR ds:[ebx]
  426a0d:	mov    ebp,0xc2134def
  426a12:	(bad)  
  426a13:	mov    ecx,0xbc894f73
  426a18:	mov    dl,0x89
  426a1a:	pop    ebp
  426a1b:	stc    
  426a1c:	imul   esp,DWORD PTR [edi+0xb],0x67
  426a20:	add    DWORD PTR [ecx],0x0
  426a23:	jmp    0x6a4a2753
  426a28:	jle    0x426a3c
  426a2a:	mov    DWORD PTR [edx+edx*4-0x5153812d],ebp
  426a31:	js     0x426aa7
  426a33:	xlat   BYTE PTR ds:[ebx]
  426a34:	xchg   BYTE PTR [eax-0x6],ah
  426a37:	push   ds
  426a38:	pop    ds
  426a39:	test   eax,0x29ee800
  426a3e:	je     0x426a39
  426a40:	push   edi
  426a41:	mov    ebp,0xc22b65eb
  426a46:	jmp    DWORD PTR ds:0x62b066e5
  426a4c:	add    BYTE PTR [eax],al
  426a4e:	fidiv  WORD PTR [esi-0x1a]
  426a51:	fist   WORD PTR [edi-0x43]
  426a54:	jmp    0x4269ef
  426a56:	sub    dl,al
  426a58:	jmp    DWORD PTR [ebp+0x629c66da]
  426a5e:	loope  0x426ad6
  426a60:	jle    0x426aa6
  426a62:	mov    DWORD PTR [edx],eax
  426a64:	jg     0x426aaa
  426a66:	adc    eax,0x200f7403
  426a6b:	mov    dh,0x27
  426a6d:	sub    al,0x1d
  426a6f:	div    bh
  426a71:	call   0x562a8cfa
  426a76:	pop    ds
  426a77:	jp     0x426a74
  426a79:	jb     0x426a5c
  426a7b:	mov    edx,0x29ee801
  426a80:	pop    ds
  426a81:	mov    eax,ds:0x754aa0
  426a86:	jbe    0x426a0f
  426a88:	dec    ebp
  426a89:	or     al,0xae
  426a8b:	push   ds
  426a8c:	pop    eax
  426a8d:	mov    bp,0x590a
  426a91:	mov    DWORD PTR [ecx+0x449ce982],edx
  426a97:	add    al,BYTE PTR [eax]
  426a99:	idiv   cl
  426a9b:	or     DWORD PTR [eax],esp
  426a9d:	je     0x426a26
  426a9f:	jge    0x426a74
  426aa1:	jne    0x426add
  426aa3:	cld    
  426aa4:	inc    esp
  426aa5:	or     BYTE PTR [edx+edi*2-0x7c2317d8],al
  426aac:	idiv   edi
  426aae:	fdivp  st(4),st
  426ab0:	sub    dl,dl
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	sub    eax,0xb685f0fb
  426ab9:	ins    DWORD PTR es:[edi],dx
  426aba:	sbb    BYTE PTR [edx+0xe],dl
  426abd:	or     DWORD PTR [eax-0x18],ebx
  426ac0:	mov    dh,0x80
  426ac2:	idiv   edi
  426ac4:	jg     0x426b0b
  426ac6:	pop    es
  426ac7:	setp   BYTE PTR [esi+0x2e84835d]
  426ace:	pop    esi
  426acf:	mov    DWORD PTR [eax+0x3f63e258],edi
  426ad5:	cmp    eax,0x7d588b0b
  426ada:	in     al,dx
  426adb:	mov    edi,DWORD PTR [ecx+0x12]
  426ade:	lea    edi,[esp+ebp*2]
  426ae1:	das    
  426ae2:	rol    BYTE PTR [ecx+0x408395d2],0x84
  426ae9:	adc    dl,BYTE PTR [ebp+0x47feeec0]
  426aef:	adc    DWORD PTR [ebx+edx*1+0x7b],0xffffffc0
  426af4:	jns    0x426adf
  426af6:	mov    edi,esi
  426af8:	inc    ebx
  426af9:	sub    dh,0x45
  426afc:	ins    BYTE PTR es:[edi],dx
  426afd:	add    BYTE PTR [esi+0xf],bl
  426b00:	popf   
  426b01:	int    0x2
  426b03:	xor    bl,bh
  426b05:	loop   0x426b0e
  426b07:	jne    0x426a8a
  426b09:	cmc    
  426b0a:	rol    DWORD PTR [edi],0x9f
  426b0d:	outs   dx,DWORD PTR ds:[esi]
  426b0e:	adc    BYTE PTR [ebp-0x78f3889a],al
  426b14:	fcom   DWORD PTR [edi-0x17]
  426b17:	jle    0x426b19
  426b19:	add    BYTE PTR [ecx-0x56df7ebd],bh
  426b1f:	fs jns 0x426b67
  426b22:	xchg   ebp,eax
  426b23:	arpl   bx,si
  426b25:	adc    BYTE PTR ds:0x1afb816b,dh
  426b2b:	xchg   ebx,eax
  426b2c:	(bad)  
  426b2d:	jae    0x426ad4
  426b2f:	sbb    DWORD PTR [edi-0x5],0xffffff9d
  426b33:	imul   ebp,ecx,0x0
  426b36:	call   0xc21c:0x5ef7f1e0
  426b3d:	movzx  esi,BYTE PTR ds:0xced7e10
  426b44:	cmp    bl,0x42
  426b47:	or     eax,0xa0ad07c2
  426b4c:	repz sbb BYTE PTR [eax],bl
  426b4f:	ins    DWORD PTR es:[edi],dx
  426b50:	repnz adc al,0x16
  426b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b54:	or     ecx,DWORD PTR [ebp+0x6280fb51]
  426b5a:	push   ds
  426b5b:	and    ah,BYTE PTR [esi*2-0x193175a]
  426b62:	pop    eax
  426b63:	(bad)  
  426b64:	ja     0x426b4d
  426b66:	sahf   
  426b67:	loopne 0x426b31
  426b69:	or     ecx,esi
  426b6b:	mov    dl,0x72
  426b6d:	inc    ebp
  426b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b6f:	pop    ebx
  426b70:	in     eax,0x88
  426b72:	cdq    
  426b73:	cmp    eax,edi
  426b75:	push   cs
  426b76:	xchg   edx,eax
  426b77:	in     al,dx
  426b78:	or     edi,DWORD PTR [edi+0x74]
  426b7b:	add    ecx,DWORD PTR [eax]
  426b7d:	repnz add BYTE PTR [eax],al
  426b80:	fwait
  426b81:	jg     0x426b23
  426b83:	cli    
  426b84:	out    dx,eax
  426b85:	cld    
  426b86:	gs inc ebp
  426b88:	jge    0x426b67
  426b8a:	pop    edi
  426b8b:	or     al,0x22
  426b8d:	cmp    eax,0x7134d23
  426b92:	jmp    0xd331bb1f
  426b97:	mov    dl,BYTE PTR [eax+0x3ac3a52a]
  426b9d:	xor    DWORD PTR [ecx],ebp
  426b9f:	mov    DWORD PTR [edi+ebp*8-0xa],esp
  426ba3:	mov    dl,BYTE PTR [eax+0x22c32d1e]
  426ba9:	cmp    edx,DWORD PTR [edi]
  426bab:	clc    
  426bac:	mov    ds:0xc54265c2,eax
  426bb1:	aaa    
  426bb2:	sub    dl,dh
  426bb4:	push   cs
  426bb5:	and    BYTE PTR [ecx],0x7f
  426bb8:	inc    edx
  426bb9:	rcl    BYTE PTR [ebx-0xae17676],1
  426bbf:	and    ch,0x73
  426bc2:	(bad)  
  426bc3:	pop    edx
  426bc4:	dec    esi
  426bc5:	xchg   DWORD PTR [ecx],edx
  426bc7:	cmp    edi,edx
  426bc9:	add    esp,DWORD PTR [ebp-0x78]
  426bcc:	popf   
  426bcd:	add    ch,cl
  426bcf:	mov    ah,BYTE PTR [eax-0x353cdad6]
  426bd5:	xor    BYTE PTR [ecx],ch
  426bd7:	(bad)  
  426bd8:	mov    eax,DWORD PTR [edi+0x73]
  426bdb:	and    al,0x22
  426bdd:	push   cs
  426bde:	or     eax,0x6e027248
  426be3:	jno    0x426be5
  426be5:	add    BYTE PTR [esp+edx*1+0x5d],ah
  426be9:	or     bl,BYTE PTR [ebp+0x7f]
  426bec:	mov    ds:0x3741d22b,eax
  426bf1:	js     0x426c6d
  426bf3:	pop    es
  426bf4:	outs   dx,BYTE PTR ds:[esi]
  426bf5:	jae    0x426bf9
  426bf7:	ins    DWORD PTR es:[edi],dx
  426bf8:	add    BYTE PTR [ecx],al
  426bfa:	sahf   
  426bfb:	xchg   DWORD PTR fs:[ecx+0x12411c75],esi
  426c02:	loopne 0x426c2e
  426c04:	mov    edx,0x33e2c5
  426c09:	cmp    edi,0x228ef9c3
  426c0f:	inc    edx
  426c10:	je     0x426c3a
  426c12:	es xor eax,0x735fa528
  426c18:	cli    
  426c19:	in     al,dx
  426c1a:	jbe    0x426c5a
  426c1c:	aas    
  426c1d:	jmp    0x5fa9db49
  426c22:	xchg   BYTE PTR [ebx+0x34],dh
  426c25:	add    eax,0xdd0033d5
  426c2a:	jbe    0x426bef
  426c2c:	dec    esi
  426c2d:	mov    edx,0x712a89ef
  426c32:	lock (bad) 
  426c34:	cli    
  426c35:	aam    0x46
  426c37:	add    al,0x40
  426c39:	jmp    0x2e5e345d
  426c3e:	sub    eax,eax
  426c40:	pop    es
  426c41:	jo     0x426c13
  426c43:	push   es
  426c44:	mov    DWORD PTR [edi-0x2a57672],edi
  426c4a:	add    BYTE PTR [eax],al
  426c4c:	adc    eax,ebx
  426c4e:	pop    ss
  426c4f:	pusha  
  426c50:	clc    
  426c51:	adc    cl,BYTE PTR [ecx-0x3c848559]
  426c57:	lahf   
  426c58:	jmp    0x426c2f
  426c5a:	push   esi
  426c5b:	sub    ebx,DWORD PTR [edx+0x2e625202]
  426c61:	fcomi  st,st(1)
  426c63:	adc    DWORD PTR [ebp+ebp*1+0x72dca524],ebx
  426c6a:	push   edx
  426c6b:	(bad)  
  426c6c:	stos   DWORD PTR es:[edi],eax
  426c6d:	cli    
  426c6e:	jle    0x426c77
  426c70:	mov    eax,ds:0x2400156d
  426c75:	adc    eax,0x794b0040
  426c7a:	pop    es
  426c7b:	call   0x3bc702
  426c80:	dec    ebx
  426c81:	jns    0x426c8e
  426c83:	mov    eax,edx
  426c85:	or     ch,al
  426c87:	push   ecx
  426c88:	daa    
  426c89:	lock idiv bh
  426c8c:	or     BYTE PTR [esi],0xe8
  426c8f:	and    edx,DWORD PTR [eax+0x528bf6f0]
  426c95:	sub    al,BYTE PTR [ebp+0x4e0850f6]
  426c9b:	call   0x396ed8
  426ca0:	in     eax,0x1e
  426ca2:	les    eax,FWORD PTR [ebx+0x44]
  426ca5:	jnp    0x426c9f
  426ca7:	test   DWORD PTR [edx+ebp*2+0x44],esi
  426cab:	mov    esp,DWORD PTR [ecx]
  426cad:	sub    al,ah
  426caf:	inc    ebx
  426cb0:	add    BYTE PTR [eax],al
  426cb2:	add    al,0x7b
  426cb4:	enter  0xcd6b,0x1e
  426cb8:	lea    ecx,[ebp+eiz*8-0x33]
  426cbc:	jp     0x426cf7
  426cbe:	hlt    
  426cbf:	js     0x426cc2
  426cc1:	sbb    DWORD PTR [ebp+0x1e],0x47
  426cc5:	jne    0x426c58
  426cc7:	sub    edi,eax
  426cc9:	je     0x426cae
  426ccb:	mov    bh,dh
  426ccd:	jne    0x426cc9
  426ccf:	push   ebx
  426cd0:	jecxz  0x426cb5
  426cd2:	pop    ss
  426cd3:	lock mul BYTE PTR [ecx]
  426cd6:	fldcw  WORD PTR [ecx]
  426cd8:	les    eax,FWORD PTR [ebx-0x4c]
  426cdb:	fiadd  DWORD PTR [esi]
  426cdd:	mov    edi,DWORD PTR [ebx+0x5b]
  426ce0:	enter  0x8a28,0x1a
  426ce4:	les    eax,FWORD PTR [ebx-0x3c]
  426ce7:	fld    QWORD PTR [ecx]
  426ce9:	push   ebx
  426cea:	retf   0x88ee
  426ced:	cmp    eax,0x3f48039d
  426cf2:	popf   
  426cf3:	and    dl,bl
  426cf5:	mov    esi,0x516af4e8
  426cfa:	in     al,dx
  426cfb:	sbb    DWORD PTR [eax+ebx*1-0x4fbe32e],edi
  426d02:	dec    ebp
  426d03:	loop   0x426cc6
  426d05:	test   DWORD PTR [ebp+0x6af9de01],0x1907f1f4
  426d0f:	fwait
  426d10:	or     al,0x84
  426d12:	and    bl,BYTE PTR [ebx-0x1]
  426d15:	inc    DWORD PTR [eax]
  426d17:	add    BYTE PTR [esi],ah
  426d19:	push   ds
  426d1a:	adc    al,0x7f
  426d1c:	inc    ebp
  426d1d:	lods   al,BYTE PTR ds:[esi]
  426d1e:	repz xor bl,BYTE PTR [esi]
  426d21:	repz les esi,FWORD PTR [ebx+0x6f]
  426d25:	fdiv   QWORD PTR [esi+0x64]
  426d28:	test   eax,0xbbf88116
  426d2d:	push   esi
  426d2e:	out    dx,eax
  426d2f:	xchg   al,dl
  426d31:	outs   dx,DWORD PTR ds:[esi]
  426d32:	and    BYTE PTR [ebp+0x19],0x5b
  426d36:	and    BYTE PTR [ebp-0x5b],0x5b
  426d3a:	mov    al,BYTE PTR [ebp-0x6b]
  426d3d:	mov    ecx,DWORD PTR [edx+0x7c8b0145]
  426d43:	jne    0x426cda
  426d45:	cdq    
  426d46:	addr16 out 0xa6,eax
  426d49:	pop    ebx
  426d4a:	inc    DWORD PTR [ebp+ebx*8-0xaae306b]
  426d51:	fwait
  426d52:	ltr    WORD PTR [ebp+0x6a4ec704]
  426d59:	enter  0xc40a,0x5e
  426d5d:	pop    ebx
  426d5e:	aam    0xfa
  426d60:	test   al,0x7
  426d62:	adc    DWORD PTR [eax-0x63],eax
  426d65:	add    esi,DWORD PTR [ebx]
  426d67:	cli    
  426d68:	mov    dl,0x1
  426d6a:	loop   0x426da2
  426d6c:	rol    BYTE PTR [ecx+eiz*8+0x5e0d297b],cl
  426d73:	or     ecx,eax
  426d75:	inc    esi
  426d76:	es add al,0xfa
  426d79:	inc    edx
  426d7a:	adc    DWORD PTR [eax+eax*1],edi
  426d7d:	add    cl,ch
  426d7f:	cli    
  426d80:	in     al,0xef
  426d82:	xchg   esi,eax
  426d83:	outs   dx,DWORD PTR ds:[esi]
  426d84:	cmp    eax,0xd46fa50c
  426d89:	dec    edi
  426d8a:	mov    ds:0x2a79e8c2,eax
  426d8f:	fcomp  DWORD PTR [ecx+0x29156d11]
  426d95:	add    al,0xf6
  426d97:	xchg   BYTE PTR [esi+0x6608cedf],ch
  426d9d:	stc    
  426d9e:	call   0xd0f6:0x4613f4e6
  426da5:	jp     0x426d57
  426da7:	push   ss
  426da8:	push   0xfffffff1
  426daa:	mov    ds:0xcf07dc6f,al
  426daf:	outs   dx,DWORD PTR ds:[esi]
  426db0:	mov    ah,0x7b
  426db2:	(bad)  
  426db3:	cmp    DWORD PTR [edi],esp
  426db5:	adc    BYTE PTR [ebp+0x1bd0b5d1],bl
  426dbb:	dec    edx
  426dbc:	imul   BYTE PTR [eax-0x2e]
  426dbf:	dec    ebp
  426dc0:	mov    ah,0x2
  426dc2:	mov    bl,0x42
  426dc4:	inc    eax
  426dc5:	or     BYTE PTR [edx+eax*1+0x43faebe9],bl
  426dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dcd:	add    esp,esi
  426dcf:	adc    eax,0x25d160d
  426dd4:	sub    eax,eax
  426dd6:	jle    0x426dd3
  426dd8:	call   0x2d44ee19
  426ddd:	(bad)  
  426dde:	retf   0xdef6
  426de1:	rol    BYTE PTR [eax],1
  426de3:	add    BYTE PTR [ecx-0x26],ch
  426de6:	jmp    edi
  426de8:	sahf   
  426de9:	push   es
  426dea:	add    dh,ch
  426dec:	lea    ebp,[edx+0xe]
  426def:	sub    DWORD PTR [ecx-0x245aff71],esp
  426df5:	outs   dx,DWORD PTR ds:[esi]
  426df6:	lods   al,BYTE PTR ss:[esi]
  426df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426df9:	xchg   bh,al
  426dfb:	jmp    0xf4c9709e
  426e00:	xchg   esi,eax
  426e01:	inc    esi
  426e02:	aas    
  426e03:	jmp    0xa479b0d3
  426e08:	ins    BYTE PTR es:[edi],dx
  426e09:	adc    eax,DWORD PTR [edi+0x3f4372d4]
  426e0f:	jmp    0xeec07cbd
  426e14:	loop   0x426d9d
  426e16:	add    cl,ch
  426e18:	sahf   
  426e19:	ret    0xa836
  426e1c:	dec    eax
  426e1d:	pop    ebx
  426e1e:	push   edx
  426e1f:	je     0x426dc3
  426e21:	jge    0x426e27
  426e23:	jmp    0xedfc70c6
  426e28:	jp     0x426e59
  426e2a:	add    BYTE PTR [ecx+0x66f9d1e7],al
  426e30:	stos   BYTE PTR es:[edi],al
  426e31:	inc    edx
  426e32:	or     esp,DWORD PTR [ebp+0xe]
  426e35:	add    al,BYTE PTR [eax]
  426e37:	jmp    0xab06687d
  426e3c:	sahf   
  426e3d:	xchg   DWORD PTR ds:0x2fcaed,ecx
  426e43:	jb     0x426e12
  426e45:	push   es
  426e46:	pop    gs
  426e48:	add    BYTE PTR [eax],al
  426e4a:	sahf   
  426e4b:	shl    DWORD PTR [ebp+0xa],cl
  426e4e:	and    BYTE PTR [esi],cl
  426e50:	and    DWORD PTR [esi],0xaac3fa9d
  426e56:	sahf   
  426e57:	aad    0xfa
  426e59:	fcomp  QWORD PTR [esi+0x57e93f46]
  426e5f:	push   esp
  426e60:	xchg   DWORD PTR [eax],eax
  426e62:	pushf  
  426e63:	xor    ch,bh
  426e65:	je     0x426e88
  426e67:	pop    ebp
  426e68:	add    dl,BYTE PTR [ebp-0x4d]
  426e6b:	push   ds
  426e6c:	add    ah,al
  426e6e:	pop    es
  426e6f:	add    esi,edi
  426e71:	(bad)  
  426e72:	das    
  426e73:	div    BYTE PTR [edx]
  426e75:	cmc    
  426e76:	das    
  426e77:	daa    
  426e78:	add    BYTE PTR [ebx],dl
  426e7a:	les    eax,FWORD PTR [esi]
  426e7c:	je     0x426eb9
  426e7e:	fiadd  WORD PTR [esi]
  426e80:	dec    edi
  426e81:	push   esi
  426e82:	cmp    al,BYTE PTR [ecx]
  426e84:	mov    dl,0x89
  426e86:	ret    0xbe01
  426e89:	inc    esi
  426e8a:	mov    DWORD PTR [edx-0x42],ebx
  426e8d:	inc    esi
  426e8e:	jp     0x426e33
  426e90:	inc    ebx
  426e91:	inc    edx
  426e92:	je     0x426e58
  426e94:	cmp    eax,0x3bdf370a
  426e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e9a:	xor    ch,ah
  426e9c:	test   al,al
  426e9e:	test   al,0xf8
  426ea0:	mov    ebp,0x1175844
  426ea5:	jmp    0x426efe
  426ea7:	les    eax,FWORD PTR [ebx+0x24]
  426eaa:	aas    
  426eab:	add    ebx,esp
  426ead:	push   ds
  426eae:	add    BYTE PTR [eax],al
  426eb0:	mov    bl,BYTE PTR [ebx+edi*8-0x2]
  426eb4:	mov    DWORD PTR [esi],eax
  426eb6:	les    eax,FWORD PTR [ebx+0x34]
  426eb9:	jmp    0x426e8f
  426ebb:	push   edi
  426ebc:	fiadd  WORD PTR [ecx]
  426ebe:	div    DWORD PTR ds:0x3b2e04
  426ec4:	arpl   WORD PTR [ebp+0x2e0c0df6],di
  426eca:	cmp    eax,DWORD PTR [eax]
  426ecc:	adc    ecx,DWORD PTR [ebx+eiz*2-0x18]
  426ed0:	mov    DWORD PTR [edi-0x5],0x9f1e9fe
  426ed7:	inc    eax
  426ed8:	hlt    
  426ed9:	jg     0x426f1f
  426edb:	and    al,0x9d
  426edd:	pusha  
  426ede:	rcl    BYTE PTR [esi+0x74],cl
  426ee1:	sbb    bl,cl
  426ee3:	xchg   BYTE PTR [ecx+0x6e0c67d8],bh
  426ee9:	xchg   ebp,eax
  426eea:	mov    WORD PTR ds:0xffbf4e41,?
  426ef0:	dec    ebx
  426ef1:	cmp    ebx,0x82c4c586
  426ef7:	inc    ebp
  426ef8:	mov    eax,ds:0x9145832b
  426efd:	sub    ebp,edx
  426eff:	add    dh,ch
  426f01:	loop   0x426ef4
  426f03:	sti    
  426f04:	mov    cl,BYTE PTR [ebp+0x4c09c07a]
  426f0a:	mov    WORD PTR [ebp+0x71],cs
  426f0d:	fiadd  WORD PTR [ebp+0x74]
  426f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f11:	inc    ebx
  426f12:	lods   eax,DWORD PTR ds:[esi]
  426f13:	cli    
  426f14:	add    BYTE PTR [eax],al
  426f16:	push   0xffffffa4
  426f18:	jnp    0x426eda
  426f1a:	jmp    0x5987f18b
  426f1f:	sub    eax,DWORD PTR [ebx-0x15d4aabb]
  426f25:	adc    al,0xee
  426f27:	repnz icebp 
  426f29:	sti    
  426f2a:	inc    edx
  426f2b:	xchg   ebp,eax
  426f2c:	jp     0x426eee
  426f2e:	mov    cl,0x64
  426f30:	test   BYTE PTR [ebp+0x35],bh
  426f33:	pop    ebx
  426f34:	jmp    0x426f3e
  426f36:	push   ss
  426f37:	inc    esi
  426f38:	ja     0x426f21
  426f3a:	loopne 0x426f44
  426f3c:	inc    esp
  426f3d:	out    0x9f,eax
  426f3f:	mov    edi,esi
  426f41:	pop    edx
  426f42:	jae    0x426ef4
  426f44:	inc    esi
  426f45:	mov    edi,0x23e2f670
  426f4a:	adc    eax,0x9c7462da
  426f4f:	pop    ebx
  426f50:	dec    DWORD PTR [esi+0x4b]
  426f53:	loopne 0x426f7e
  426f55:	hlt    
  426f56:	pop    DWORD PTR [edx]
  426f58:	test   eax,0x1a314e03
  426f5d:	jmp    0x426f05
  426f5f:	inc    esi
  426f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f61:	add    ebx,DWORD PTR [edx]
  426f63:	dec    edx
  426f64:	pusha  
  426f65:	add    DWORD PTR ss:[esi-0x5a],0xd12f1403
  426f6d:	aas    
  426f6e:	jp     0x426f72
  426f70:	repnz push eax
  426f72:	cmp    esp,DWORD PTR [esi]
  426f74:	xchg   edx,eax
  426f75:	mov    eax,0x42640b5
  426f7a:	add    BYTE PTR [eax],al
  426f7c:	dec    esi
  426f7d:	ins    DWORD PTR es:[edi],dx
  426f7e:	hlt    
  426f7f:	das    
  426f80:	scas   eax,DWORD PTR es:[edi]
  426f81:	ret    0x82e8
  426f84:	pop    ecx
  426f85:	push   DWORD PTR [ecx]
  426f87:	ja     0x426ff8
  426f89:	add    DWORD PTR [esp+edx*4],0x4d
  426f8d:	shr    al,0x4
  426f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f91:	test   BYTE PTR [esi+0x5],bh
  426f94:	popf   
  426f95:	add    ah,BYTE PTR [ebx+ebx*2-0xf]
  426f99:	xor    ecx,DWORD PTR [ebx]
  426f9b:	sub    DWORD PTR [edx-0x3ccaeafe],0xffffffc0
  426fa2:	arpl   cx,si
  426fa4:	loop   0x426f70
  426fa6:	sbb    bl,0x2
  426fa9:	ins    BYTE PTR es:[edi],dx
  426faa:	sub    dl,0xdd
  426fad:	jge    0x426fa3
  426faf:	pop    ebx
  426fb0:	aad    0x5a
  426fb2:	sbb    DWORD PTR [esi+esi*1-0x6f88e994],ebp
  426fb9:	xor    bh,0xc3
  426fbc:	and    bh,BYTE PTR [edi-0x5b]
  426fbf:	add    ebx,DWORD PTR [ebx]
  426fc1:	mov    esp,0x7d9de9b5
  426fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fc7:	rcr    DWORD PTR [edx+0x77],cl
  426fca:	sub    edx,esp
  426fcc:	cli    
  426fcd:	inc    edx
  426fce:	inc    DWORD PTR [ebx]
  426fd0:	popf   
  426fd1:	fdivr  st,st(7)
  426fd3:	test   eax,0x91c3f625
  426fd8:	jbe    0x426ffe
  426fda:	test   al,0x26
  426fdc:	push   0xffffffe4
  426fde:	inc    ebx
  426fdf:	ins    BYTE PTR es:[edi],dx
  426fe0:	add    BYTE PTR [eax],al
  426fe2:	int3   
  426fe3:	iret   
  426fe4:	push   edi
  426fe5:	add    DWORD PTR [edx-0x48f10466],ebp
  426feb:	(bad)  
  426fec:	mov    WORD PTR [esi+ecx*4-0x36],?
  426ff0:	out    0xd5,eax
  426ff2:	push   es
  426ff3:	push   0xcfdc64fb
  426ff8:	mov    BYTE PTR [esi+esi*4-0x228f3d7c],ah
  426fff:	xlat   BYTE PTR ds:[ebx]
  427000:	mov    WORD PTR [ecx+ecx*4+0x40],ss
  427004:	inc    ebp
  427005:	pop    ebp
  427006:	lahf   
  427007:	add    al,BYTE PTR [eax]
  427009:	jmp    0x74917825
  42700e:	pop    ebp
  42700f:	aas    
  427010:	push   eax
  427011:	jle    0x426fb4
  427013:	add    al,BYTE PTR [eax]
  427015:	imul   esp,DWORD PTR [edi],0xa9b8e83f
  42701b:	add    al,BYTE PTR [eax]
  42701d:	ins    BYTE PTR es:[edi],dx
  42701e:	fdivrp st(6),st
  427020:	adc    DWORD PTR [edx+0x3d],ebp
  427023:	(bad)  
  427025:	add    bl,BYTE PTR [ebp+0x7119457d]
  42702b:	in     eax,0x3
  42702d:	sbb    dl,BYTE PTR [eax*8-0x3236e63d]
  427034:	xor    eax,0xc1eb9ee9
  427039:	in     eax,0xb3
  42703b:	mov    ebp,0xe4d7dc73
  427040:	inc    ecx
  427041:	ins    BYTE PTR es:[edi],dx
  427042:	or     eax,0x41584f
  427047:	add    BYTE PTR [ebx-0x61],cl
  42704a:	sti    
  42704b:	dec    esi
  42704c:	hlt    
  42704d:	mov    edi,0x4341008c
  427052:	push   ebx
  427053:	call   0x39fcc8
  427058:	jns    0x42709c
  42705a:	outs   dx,DWORD PTR ds:[esi]
  42705b:	push   eax
  42705c:	fiadd  WORD PTR ds:0x7a27db2b
  427062:	inc    ebp
  427063:	aam    0x14
  427065:	cmp    al,0x88
  427067:	jge    0x427099
  427069:	hlt    
  42706a:	adc    al,0x70
  42706c:	les    edi,FWORD PTR [esi]
  42706e:	sti    
  42706f:	test   BYTE PTR [edx+esi*2+0xc],dh
  427073:	mov    eax,DWORD PTR [edx+0x30758c4f]
  427079:	xlat   BYTE PTR ds:[ebx]
  42707a:	repz cmp dh,BYTE PTR [esi+edi*8-0x3979fd1e]
  427082:	add    eax,0xfffffff0
  427085:	adc    ecx,DWORD PTR [ebp-0x73b147bb]
  42708b:	inc    ebp
  42708c:	push   eax
  42708d:	dec    edi
  42708e:	add    bh,0x6c
  427091:	imul   edi,DWORD PTR [eax],0x0
  427094:	test   cl,ch
  427096:	mov    edi,0xff5c4c74
  42709b:	mov    ecx,es
  42709d:	outs   dx,BYTE PTR ds:[esi]
  42709e:	dec    ebx
  42709f:	push   0x70
  4270a1:	add    DWORD PTR [ebp+0x4c],0xd4458194
  4270a8:	xchg   esp,eax
  4270a9:	jge    0x427108
  4270ab:	jo     0x4270ad
  4270ad:	add    BYTE PTR [ecx+ecx*8],bl
  4270b0:	cmp    BYTE PTR [eax],al
  4270b2:	xor    al,0x5c
  4270b4:	inc    ebx
  4270b5:	lea    esi,[ecx]
  4270b7:	mov    bl,BYTE PTR [eax-0x18]
  4270ba:	xchg   esp,eax
  4270bb:	xchg   edi,esi
  4270bd:	call   FWORD PTR [esi+0x7c758c3d]
  4270c3:	inc    esi
  4270c4:	jecxz  0x42710b
  4270c6:	and    esi,eax
  4270c8:	imul   BYTE PTR [edx-0x63]
  4270cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270cc:	xor    BYTE PTR [ebp+0x69],0xb3
  4270d0:	addr16 ss cmp al,cl
  4270d4:	je     0x427063
  4270d6:	pusha  
  4270d7:	add    eax,DWORD PTR [edi+0x39e45945]
  4270dd:	mov    DWORD PTR [eax-0x5d],esp
  4270e0:	xchg   BYTE PTR [ebp+0x69],bl
  4270e3:	sbb    BYTE PTR [ebx-0xa45f91],bh
  4270e9:	call   edx
  4270eb:	xchg   bl,ch
  4270ed:	mov    WORD PTR [eax-0x41],fs
  4270f0:	shl    DWORD PTR [ebp+0x52],cl
  4270f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270f4:	cmp    BYTE PTR [ebp-0x48b975f],0xc5
  4270fb:	sub    al,0x91
  4270fd:	cli    
  4270fe:	stos   BYTE PTR es:[edi],al
  4270ff:	xchg   edx,eax
  427100:	(bad)  
  427101:	test   ch,bl
  427103:	loope  0x427137
  427105:	data16 lahf 
  427107:	(bad)  
  427108:	icebp  
  427109:	inc    ebx
  42710a:	repz in al,0x13
  42710d:	dec    edi
  42710e:	sbb    dh,bl
  427110:	cli    
  427111:	cli    
  427112:	add    BYTE PTR [eax],al
  427114:	add    BYTE PTR [eax-0x31],0xb7
  427118:	pushf  
  427119:	pop    ebx
  42711a:	(bad)  
  42711b:	jg     0x4270a2
  42711d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42711e:	aaa    
  42711f:	add    BYTE PTR [ebp-0x7b8bc122],bl
  427125:	(bad)  
  427127:	imul   ebx,DWORD PTR [ebp-0x2772ffeb],0xffffffff
  42712e:	shl    DWORD PTR [ebp-0x5f],cl
  427131:	sub    al,0x83
  427133:	test   DWORD PTR [ecx-0x32048b80],ebx
  427139:	xchg   ebx,eax
  42713a:	aad    0x38
  42713c:	popf   
  42713d:	pop    ebx
  42713e:	add    bl,0xa1
  427141:	or     ebx,ebp
  427143:	enter  0x222,0xac
  427147:	out    dx,eax
  427148:	pop    ss
  427149:	mov    bh,0xd8
  42714b:	out    dx,al
  42714c:	xor    cl,cl
  42714e:	mov    dl,0xd8
  427150:	mov    edi,DWORD PTR [edi]
  427152:	ror    DWORD PTR [edx+0x42],1
  427155:	iret   
  427156:	ins    DWORD PTR es:[edi],dx
  427157:	addr16 sbb al,0x56
  42715a:	leave  
  42715b:	or     ebx,DWORD PTR [ebp-0x183269fe]
  427161:	out    dx,al
  427162:	loopne 0x427194
  427164:	retf   0x9c76
  427167:	pop    edi
  427168:	and    al,0xc7
  42716a:	sbb    al,0x6b
  42716c:	lea    esi,[edi+0x422103e8]
  427172:	fidivr DWORD PTR [edi+0x5c]
  427175:	add    ebp,ecx
  427177:	add    eax,DWORD PTR [eax]
  427179:	add    BYTE PTR [edx-0x24],ch
  42717c:	out    0x86,eax
  42717e:	pop    eax
  42717f:	outs   dx,BYTE PTR ds:[esi]
  427180:	cdq    
  427181:	je     0x4271b3
  427183:	pop    esi
  427184:	pop    esi
  427185:	mov    esi,0x814459ba
  42718a:	xchg   edi,eax
  42718b:	push   0xbe20746e
  427190:	int3   
  427191:	jge    0x4271a3
  427193:	imul   eax,ecx,0xffffffa9
  427196:	rol    BYTE PTR [edx],1
  427198:	jmp    0xeaaae923
  42719d:	xchg   DWORD PTR [ecx+eax*1-0x2331fc17],edx
  4271a4:	fbstp  TBYTE PTR [esi]
  4271a6:	push   ebx
  4271a7:	jl     0x427154
  4271a9:	int    0x4f
  4271ab:	jb     0x427211
  4271ad:	push   esi
  4271ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271af:	jge    0x42713f
  4271b1:	add    al,0x9d
  4271b3:	add    bh,bh
  4271b5:	mov    esi,0xcc8ce611
  4271ba:	inc    edx
  4271bb:	or     BYTE PTR [ebx+0x73],al
  4271be:	ss (bad) 
  4271c1:	and    al,0x1c
  4271c3:	out    0xd7,al
  4271c5:	adc    ecx,eax
  4271c7:	push   cs
  4271c8:	mov    ds:0xce178e66,al
  4271cd:	jo     0x4271bb
  4271cf:	push   DWORD PTR [esi]
  4271d1:	pop    edx
  4271d2:	sahf   
  4271d3:	test   al,bl
  4271d5:	jmp    0xb4c97478
  4271da:	test   BYTE PTR [eax+0x3545],0x72
  4271e1:	mov    BYTE PTR cs:[eax-0x1c],ah
  4271e5:	push   edi
  4271e6:	test   DWORD PTR [edi],esi
  4271e8:	sahf   
  4271e9:	jle    0x4271a3
  4271eb:	jmp    0xdfc2748e
  4271f0:	sahf   
  4271f1:	sti    
  4271f2:	add    DWORD PTR [esi-0x5f],0x2
  4271f6:	add    BYTE PTR [edx-0x33],ah
  4271f9:	jg     0x4271ff
  4271fb:	jo     0x4271a9
  4271fd:	inc    edi
  4271fe:	test   esi,edi
  427200:	lahf   
  427201:	jle    0x4271a3
  427203:	jmp    0xaec274a6
  427208:	sahf   
  427209:	sti    
  42720a:	cmp    DWORD PTR [esi-0x62],0x2
  42720e:	add    BYTE PTR [edx+0x62],dh
  427211:	jg     0x42721b
  427213:	ins    BYTE PTR es:[edi],dx
  427214:	(bad)  
  427216:	and    DWORD PTR [edx-0x62],0x2
  42721a:	add    BYTE PTR [ecx-0x35],ch
  42721d:	add    cl,BYTE PTR [ebx]
  42721f:	sbb    BYTE PTR gs:[edx],al
  427222:	add    cl,ch
  427224:	and    edi,DWORD PTR [edx]
  427226:	sti    
  427227:	sbb    DWORD PTR [ebx-0x80],ecx
  42722a:	(bad)  
  42722b:	xchg   ecx,eax
  42722c:	jmp    0x4271c0
  42722e:	cli    
  42722f:	sahf   
  427230:	and    eax,0x1dd87442
  427235:	mov    ebp,0xac693ae3
  42723a:	cmp    BYTE PTR [eax],al
  42723c:	sub    al,0x3
  42723e:	add    BYTE PTR [ebp-0x105c97],cl
  427244:	add    BYTE PTR [eax],al
  427246:	mov    bl,0xcb
  427248:	mov    ebx,0x58f4b292
  42724d:	pop    ecx
  42724e:	xchg   ebx,ebx
  427250:	div    BYTE PTR [edx+edx*2-0x18]
  427254:	lds    edx,FWORD PTR [ecx-0x7f]
  427257:	inc    edx
  427258:	imul   eax
  42725a:	out    dx,eax
  42725b:	out    0xf5,eax
  42725d:	dec    DWORD PTR [eax+0x6f4f73c3]
  427263:	push   0xffffffeb
  427265:	mov    esi,DWORD PTR [ecx]
  427267:	jecxz  0x4272b7
  427269:	push   esi
  42726a:	inc    ecx
  42726b:	cmp    dl,bl
  42726d:	push   eax
  42726e:	inc    ebx
  42726f:	sbb    ecx,DWORD PTR [eax]
  427271:	add    ah,al
  427273:	xor    DWORD PTR [ebp-0x90b5460],0xf68d3ee8
  42727d:	inc    DWORD PTR [edi-0x41]
  427280:	or     eax,DWORD PTR [ebx+0x2b73f49c]
  427286:	aas    
  427287:	rcl    DWORD PTR [eax-0x73],0x1
  42728b:	xlat   BYTE PTR ds:[ebx]
  42728c:	out    0x48,eax
  42728e:	psllw  mm6,mm6
  427291:	test   BYTE PTR [ebx+ebp*2+0x17],al
  427295:	cmp    DWORD PTR [ecx-0x4674f79a],0x66
  42729c:	adc    bl,0x9f
  42729f:	cmp    eax,0x29060ff3
  4272a4:	idiv   edi
  4272a6:	xor    ecx,eax
  4272a8:	or     edi,edi
  4272aa:	add    BYTE PTR [eax],al
  4272ac:	test   eax,0x922fe7f2
  4272b1:	lock test BYTE PTR [ebx-0x75000d67],0x9d
  4272b9:	push   ss
  4272ba:	ins    BYTE PTR es:[edi],dx
  4272bb:	xchg   eax,eax
  4272bd:	(bad)  
  4272be:	pop    esp
  4272bf:	cmp    al,0xeb
  4272c1:	jge    0x427334
  4272c3:	pop    ebx
  4272c4:	es pop ds
  4272c6:	jo     0x427322
  4272c8:	(bad)  
  4272c9:	mov    ds:0xe9d0442,al
  4272ce:	jge    0x4272bc
  4272d0:	es xchg edi,eax
  4272d2:	sti    
  4272d3:	add    BYTE PTR [ecx],0x74
  4272d6:	add    eax,0x84a49d00
  4272db:	shl    BYTE PTR [ecx-0x5a8a8f55],0xee
  4272e2:	cmp    al,0xf0
  4272e5:	and    al,0x71
  4272e7:	push   eax
  4272e8:	push   ss
  4272e9:	xor    ebx,DWORD PTR [edx+eiz*2+0x5b]
  4272ed:	pop    ebx
  4272ee:	inc    DWORD PTR [ebp+ebx*8+0x5af1e887]
  4272f5:	pop    edi
  4272f6:	add    eax,0x82de5a74
  4272fb:	clc    
  4272fc:	shl    ah,0x70
  4272ff:	push   eax
  427300:	lds    esp,FWORD PTR [eax-0xd4d048f]
  427306:	ret    0x200b
  427309:	sbb    al,0xf8
  42730b:	cmp    ecx,DWORD PTR [esi-0x73]
  42730e:	iret   
  42730f:	cli    
  427310:	add    BYTE PTR [eax],al
  427312:	mov    al,0xe3
  427314:	adc    DWORD PTR [eax-0x63],eax
  427317:	lock mov edi,0x7ab3160b
  42731d:	jae    0x4272b4
  42731f:	pop    eax
  427320:	cmp    al,0xe8
  427322:	js     0x427353
  427324:	outs   dx,BYTE PTR ds:[esi]
  427325:	sti    
  427326:	sbb    DWORD PTR [ebx+0x141611f3],ebx
  42732c:	add    bh,bh
  42732e:	cwde   
  42732f:	or     BYTE PTR [ecx+0x75],dh
  427332:	test   eax,0xa8713902
  427337:	xor    dh,bl
  427339:	ret    
  42733a:	dec    edx
  42733b:	sub    BYTE PTR [ebp-0x233a6201],0x70
  427342:	mov    al,0xf6
  427344:	nop
  427345:	mov    fs,eax
  427347:	fs jp  0x42731b
  42734a:	shr    DWORD PTR [edx+ebp*1+0x8],cl
  42734e:	pushf  
  42734f:	out    dx,al
  427350:	fdivr  QWORD PTR [esi+0x20]
  427353:	push   0x64
  427355:	jo     0x42736d
  427357:	rcl    BYTE PTR [eax-0x21],cl
  42735a:	inc    ebp
  42735b:	fs push edx
  42735d:	xor    al,0xdd
  42735f:	les    ebx,FWORD PTR [edi]
  427361:	inc    ebp
  427362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427363:	add    bl,BYTE PTR [esp+edi*2+0x6b458101]
  42736a:	sbb    al,0x56
  42736c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42736d:	add    eax,0xdd93029d
  427372:	addr16 ja 0x427312
  427375:	daa    
  427376:	add    BYTE PTR [eax],al
  427378:	xchg   ecx,eax
  427379:	retf   0xa410
  42737c:	add    DWORD PTR [ebp+0x12],esp
  42737f:	jl     0x427360
  427381:	jbe    0x427320
  427383:	daa    
  427384:	shr    DWORD PTR gs:[edi-0x39],cl
  427388:	jle    0x427384
  42738a:	mov    ch,0x43
  42738c:	dec    ebp
  42738d:	sar    BYTE PTR [esi+0x22],cl
  427390:	dec    ebp
  427391:	cmp    eax,0xaab927a5
  427396:	outs   dx,BYTE PTR ds:[esi]
  427397:	les    edx,FWORD PTR [edx-0x42d7c285]
  42739d:	jns    0x4273cc
  42739f:	sub    BYTE PTR [ecx-0x3ad7da87],bh
  4273a5:	arpl   sp,bx
  4273a7:	shl    DWORD PTR [ebx+0x5d88e8c2],cl
  4273ad:	out    dx,al
  4273ae:	inc    DWORD PTR [esi+0x47]
  4273b1:	mov    ah,0x8c
  4273b3:	xor    eax,0x91582e85
  4273b8:	cmp    ah,BYTE PTR [eax-0x40e36105]
  4273be:	and    esp,ecx
  4273c0:	sar    DWORD PTR [esi-0x40e20edd],0x23
  4273c7:	xor    DWORD PTR [eax+0x1ddd23be],esi
  4273cd:	mov    edi,0xbea1ed23
  4273d2:	and    eax,ebp
  4273d4:	sbb    eax,0xeeb123bf
  4273d9:	jbe    0x427427
  4273db:	add    eax,0x3fad0000
  4273e0:	inc    esp
  4273e1:	or     eax,0xe8fffeb5
  4273e6:	sahf   
  4273e7:	aas    
  4273e8:	inc    esp
  4273e9:	or     eax,0xe90001bd
  4273ee:	sahf   
  4273ef:	aas    
  4273f0:	inc    esp
  4273f1:	or     eax,0xe9fb64a9
  4273f6:	sahf   
  4273f7:	pop    edx
  4273f8:	pop    esi
  4273f9:	mov    cl,0x9e
  4273fb:	add    al,BYTE PTR [edi+0x4476f127]
  427401:	int    0x2
  427403:	mov    ah,0x4f
  427405:	add    esi,ecx
  427407:	mov    esi,0x4325e8ff
  42740c:	je     0x4273e9
  42740e:	sbb    eax,0xcea123bf
  427413:	jbe    0x427461
  427415:	lds    ebp,FWORD PTR [edx-0x46f2bb87]
  42741b:	pop    edx
  42741c:	cmp    dh,BYTE PTR [ecx]
  42741e:	mov    eax,ds:0x9caaf202
  427423:	out    dx,al
  427424:	or     eax,0x101f6262
  427429:	add    bh,ch
  42742b:	inc    edx
  42742c:	add    ecx,DWORD PTR [ecx+0x2443e875]
  427432:	inc    eax
  427433:	call   0xfeff8084
  427438:	push   ebp
  427439:	mov    esp,DWORD PTR [ecx]
  42743b:	push   edx
  42743c:	mov    ebp,0x824a3408
  427441:	in     al,dx
  427442:	add    BYTE PTR [eax],al
  427444:	mov    bh,0xc3
  427446:	arpl   WORD PTR [ebx+0x72],dx
  427449:	dec    ebx
  42744a:	mov    WORD PTR [ebp+0x18],es
  42744d:	dec    edi
  42744e:	mov    WORD PTR [ebp-0x50],es
  427451:	dec    edi
  427452:	add    cl,BYTE PTR gs:[edi-0x7400f63a]
  427459:	aam    0x2a
  42745b:	fstp   TBYTE PTR [ebp+0x396af751]
  427461:	fs inc esp
  427463:	pop    ebp
  427464:	pusha  
  427465:	xor    BYTE PTR [ebp-0x60],0x2c
  427469:	(bad)  
  42746a:	mov    cl,0xa3
  42746c:	pop    ebx
  42746d:	aam    0x61
  42746f:	dec    esi
  427470:	jns    0x4274e4
  427472:	out    dx,eax
  427473:	pop    eax
  427474:	pop    esp
  427475:	push   esi
  427476:	call   0x5f85:0xbee88bff
  42747d:	imul   edi,ebp,0xffffff8a
  427480:	ja     0x4274d1
  427482:	mov    WORD PTR [ebp+0x54],es
  427485:	dec    edi
  427486:	add    BYTE PTR gs:[esi],bl
  427489:	jmp    DWORD PTR [ecx+0x1]
  42748c:	mov    WORD PTR [edx-0x57],gs
  42748f:	jmp    FWORD PTR [ebx+0x714c480]
  427495:	(bad)  
  427496:	push   ebx
  427497:	dec    esp
  427498:	mov    dh,al
  42749a:	push   esi
  42749b:	pop    esi
  42749c:	fistp  WORD PTR ds:0xe30f55bb
  4274a2:	jp     0x427490
  4274a4:	popf   
  4274a5:	repz rcl BYTE PTR [ecx+0x0],1
  4274a9:	add    dl,dl
  4274ab:	ret    
  4274ac:	pop    es
  4274ad:	adc    BYTE PTR [ebp+0x16f8786b],bl
  4274b3:	daa    
  4274b4:	adc    al,0x7f
  4274b6:	mov    ebp,0x9d23806b
  4274bb:	(bad)  
  4274be:	mov    BYTE PTR [ebx-0x7f62c067],cl
  4274c4:	adc    eax,DWORD PTR [esi+ebp*4]
  4274c7:	sub    eax,DWORD PTR [edi+eax*4]
  4274ca:	push   ebp
  4274cb:	jecxz  0x427497
  4274cd:	repz sbb BYTE PTR [ebp-0x5490fd0d],ah
  4274d4:	push   edi
  4274d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274d6:	popf   
  4274d7:	imul   edi,edi,0xfffffffa
  4274da:	nop
  4274db:	aas    
  4274dc:	ins    BYTE PTR es:[edi],dx
  4274dd:	adc    eax,0xffbf5a89
  4274e2:	je     0x4274d7
  4274e4:	leave  
  4274e5:	push   ecx
  4274e6:	adc    BYTE PTR [edi-0x646299c5],ch
  4274ec:	inc    ebp
  4274ed:	inc    ebp
  4274ee:	imul   BYTE PTR [edx+0x6c]
  4274f1:	adc    eax,0xffbf39b1
  4274f6:	adc    eax,0xe17f3b9f
  4274fb:	aas    
  4274fc:	jbe    0x42755b
  4274fe:	mov    ebp,0x9d1003e9
  427503:	imul   edi,DWORD PTR [edi+0x7d],0xffffffa9
  427507:	imul   esi,edx,0xe
  42750a:	sub    BYTE PTR [edi+0x5063],ah
  427510:	dec    ebx
  427511:	or     bl,dh
  427513:	rep stos BYTE PTR es:[edi],al
  427515:	(bad)  
  427516:	idiv   dl
  427518:	mov    BYTE PTR [ebx+0x49d4012],bh
  42751e:	adc    edi,ebx
  427520:	or     BYTE PTR [ebx],al
  427522:	add    DWORD PTR [edi-0x20],edi
  427525:	dec    esi
  427526:	dec    edi
  427527:	cld    
  427528:	shl    BYTE PTR [ecx+0x5c],cl
  42752b:	cld    
  42752c:	and    eax,0x886cc4d7
  427531:	jbe    0x42750f
  427533:	ret    
  427534:	push   0xffffff86
  427536:	test   eax,0xdc618af6
  42753b:	or     ebp,DWORD PTR [edx+eax*8+0x5382ee8]
  427542:	jmp    0x6c66454a
  427547:	(bad)  
  427548:	xchg   esi,eax
  427549:	mov    dl,0x80
  42754b:	in     eax,dx
  42754c:	mov    dh,0x2
  42754e:	jmp    0x24cf64ab
  427553:	push   0x10f53d20
  427558:	xlat   BYTE PTR es:[ebx]
  42755a:	jl     0x4275d4
  42755c:	pusha  
  42755d:	repnz and BYTE PTR [ecx+eiz*2],0x60
  427562:	bound  eax,QWORD PTR [esi+0x4588d6dd]
  427568:	pop    eax
  427569:	pop    ebp
  42756a:	jmp    0x4198e5db
  42756f:	sbb    BYTE PTR [edx+0x60],0x42
  427573:	add    DWORD PTR [eax],0x0
  427576:	push   0x98f6e95d
  42757b:	lea    ebp,[ebx+edx*1-0xdbeee2a]
  427582:	pop    ebx
  427583:	pusha  
  427584:	and    bh,BYTE PTR [ecx+0x60]
  427587:	pop    ebp
  427588:	mov    edx,0x274b6bcd
  42758d:	pop    ss
  42758e:	popf   
  42758f:	mov    bh,0x5d
  427591:	pop    edi
  427592:	xor    ah,BYTE PTR [esi+0x1]
  427595:	cmp    BYTE PTR [ecx+0x7ebf6615],0xa
  42759c:	add    dh,dh
  42759e:	push   0xffffff89
  4275a0:	sbb    eax,0xffc2adfd
  4275a5:	outs   dx,BYTE PTR ds:[esi]
  4275a7:	call   0x609d1ab7
  4275ac:	xchg   cl,dl
  4275ae:	push   es
  4275af:	push   eax
  4275b0:	xchg   DWORD PTR [esi],edx
  4275b2:	sar    edi,1
  4275b4:	icebp  
  4275b5:	(bad)  
  4275b6:	neg    bh
  4275b8:	idiv   DWORD PTR [esi-0x14ff7b9a]
  4275be:	sahf   
  4275bf:	add    al,BYTE PTR [edi+0x3f46b2dc]
  4275c5:	jmp    0x6c6b1635
  4275ca:	lea    ecx,[edx]
  4275cc:	das    
  4275cd:	mov    al,ds:0xde13cc88
  4275d2:	sbb    al,0x6a
  4275d4:	add    ecx,ebp
  4275d6:	sahf   
  4275d7:	fistp  QWORD PTR [ecx-0x2b]
  4275da:	add    BYTE PTR [eax],al
  4275dc:	cdq    
  4275dd:	aad    0xd
  4275df:	(bad)  
  4275e0:	fisttp WORD PTR [edi]
  4275e2:	cmp    DWORD PTR [ecx],esp
  4275e4:	popf   
  4275e5:	(bad)  
  4275e6:	add    eax,0x8923df72
  4275eb:	out    0x61,al
  4275ed:	xor    DWORD PTR [ecx],eax
  4275ef:	jmp    0xf987fd92
  4275f4:	ret    
  4275f5:	inc    ecx
  4275f6:	je     0x4275e3
  4275f8:	imul   ecx,DWORD PTR [edx],0x5b9abf7f
  4275fe:	or     ebp,DWORD PTR [edi+edi*4+0x2]
  427602:	add    cl,ch
  427604:	push   ebx
  427605:	les    eax,FWORD PTR [edi]
  427607:	das    
  427608:	fild   WORD PTR [ebx]
  42760a:	add    DWORD PTR [edi-0x3b],ebx
  42760d:	inc    ebx
  42760e:	aas    
  42760f:	jmp    0xc58700e0
  427614:	call   0x3ff5:0xa400155b
  42761b:	add    BYTE PTR [ebx+0x488d1352],ah
  427621:	push   DWORD PTR [ebx]
  427623:	dec    DWORD PTR [ecx]
  427625:	adc    BYTE PTR [eax-0x1],dl
  427628:	call   0xb8cf9a4f
  42762d:	and    al,BYTE PTR [edi+edi*8-0x65]
  427631:	mov    esi,0xec63fe74
  427636:	dec    ebp
  427637:	mov    BYTE PTR [eax+0x7ff0f22],bh
  42763d:	loopne 0x42766d
  42763f:	call   0xd32f7644
  427644:	idiv   bh
  427646:	mov    edi,0x3fe7ad3
  42764b:	pop    esp
  42764c:	jg     0x4275da
  42764e:	xor    eax,0x90800003
  427653:	and    cl,BYTE PTR [ebx]
  427655:	add    BYTE PTR [ebx-0x21],dl
  427658:	nop
  427659:	add    DWORD PTR [ebx+eax*1],esi
  42765c:	arpl   si,si
  42765e:	dec    esp
  42765f:	or     BYTE PTR ds:0xfb484824,dh
  427665:	mov    WORD PTR [eax-0x45afdbde],?
  42766b:	inc    ecx
  42766c:	(bad)  
  42766d:	jmp    DWORD PTR [ebx+0x14]
  427670:	call   0xf72e7b7d
  427675:	lea    edx,[eax]
  427677:	jmp    FWORD PTR [ebx]
  427679:	push   ecx
  42767a:	ins    DWORD PTR es:[edi],dx
  42767b:	lahf   
  42767c:	pop    ds
  42767d:	and    al,0x6f
  42767f:	add    al,0x62
  427681:	add    DWORD PTR [ebx+edi*4],esi
  427684:	les    eax,FWORD PTR [edx]
  427686:	sub    esp,0xffffff88
  427689:	inc    esp
  42768a:	fdivr  st,st(2)
  42768c:	add    BYTE PTR [esi-0x3c],0xdd
  427690:	inc    ebx
  427691:	and    al,0x9d
  427693:	xor    DWORD PTR [edx+0x42],edi
  427696:	mov    DWORD PTR [edx+ecx*2],edi
  427699:	mov    DWORD PTR [ecx+0x4d],esp
  42769c:	and    edi,DWORD PTR [ecx]
  42769e:	inc    ecx
  42769f:	inc    ebp
  4276a0:	pop    ds
  4276a1:	or     esp,DWORD PTR [ecx]
  4276a3:	int    0xfe
  4276a5:	inc    DWORD PTR [eax]
  4276a7:	add    BYTE PTR [ebp-0x42dc4542],bl
  4276ad:	sbb    ebx,DWORD PTR [eax+edx*1+0x5a]
  4276b1:	cmp    eax,0x655d8469
  4276b6:	jnp    0x42764d
  4276b8:	popf   
  4276b9:	imul   edi,edi,0x65
  4276bc:	mov    esp,0xb0e83144
  4276c1:	push   0x68
  4276c3:	sti    
  4276c4:	es xchg esp,eax
  4276c6:	sub    eax,0xe132c9f7
  4276cb:	cmp    BYTE PTR [edx-0x36050a01],ch
  4276d1:	inc    edi
  4276d2:	sub    edi,ebx
  4276d4:	mov    cl,0x4f
  4276d6:	sub    edx,DWORD PTR [ebx+0x45]
  4276d9:	out    0xc0,eax
  4276db:	jmp    FWORD PTR [edx]
  4276dd:	std    
  4276de:	pop    ebx
  4276df:	sbb    al,0xd7
  4276e1:	(bad)  [eax-0x5]
  4276e4:	xchg   ecx,eax
  4276e5:	dec    edi
  4276e6:	pop    ds
  4276e7:	xchg   DWORD PTR [ecx+0x47],ebx
  4276ea:	pop    ss
  4276eb:	dec    edi
  4276ec:	cmc    
  4276ed:	fstp   TBYTE PTR [edi-0x6]
  4276f0:	add    dl,bl
  4276f2:	mov    edi,0x44f09523
  4276f7:	je     0x427743
  4276f9:	jae    0x4276ff
  4276fb:	adc    BYTE PTR [ebp-0x46bb8995],bl
  427701:	aas    
  427702:	push   edi
  427703:	lds    esp,FWORD PTR [ebp+edx*1+0x69]
  427707:	xchg   ebp,edx
  427709:	push   eax
  42770a:	ins    BYTE PTR es:[edi],dx
  42770b:	je     0x42770d
  42770d:	add    BYTE PTR [edi+0x7ec07402],al
  427713:	(bad)  
  427714:	mov    eax,0xccd6b7d0
  427719:	and    ebx,esi
  42771b:	add    eax,0x29d03b9
  427720:	add    cl,BYTE PTR [edi]
  427722:	inc    ebp
  427723:	imul   DWORD PTR [eax+0x7d422003]
  427729:	or     eax,0x2ce0c51a
  42772e:	dec    edx
  42772f:	(bad)  
  427730:	cmc    
  427731:	loope  0x4276f8
  427733:	cli    
  427734:	push   esp
  427735:	cli    
  427736:	ja     0x42770e
  427738:	or     al,0x30
  42773a:	jbe    0x427712
  42773c:	add    al,0x30
  42773e:	int    0x6a
  427740:	or     cl,al
  427742:	bound  ebx,QWORD PTR [ebp+0x12]
  427745:	pop    esp
  427746:	adc    eax,0x5668b2cb
  42774b:	(bad)  
  42774c:	add    al,0xc
  42774e:	xor    eax,0x466a30ad
  427753:	pop    ebp
  427754:	adc    eax,0x4b6a7d20
  427759:	mov    edx,0xef8a5d34
  42775e:	jle    0x42778a
  427760:	xchg   ecx,eax
  427761:	xchg   ah,dl
  427763:	pop    esp
  427764:	jp     0x4277e2
  427766:	popa   
  427767:	es mov ecx,0x5dfa5f7a
  42776d:	mov    edi,0xc17016be
  427772:	add    BYTE PTR [eax],al
  427774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427775:	mov    DWORD PTR [ebx+0x525a7a07],esp
  42777b:	out    dx,eax
  42777c:	bound  ebp,QWORD PTR [ecx]
  42777e:	mov    ds:0xbd5a2223,eax
  427783:	sub    esp,DWORD PTR [edx-0x21]
  427786:	lock add edx,DWORD PTR [eax-0x10]
  42778a:	inc    eax
  42778c:	sahf   
  42778d:	repnz (bad) 
  42778f:	call   0xe962798a
  427794:	sahf   
  427795:	push   0x43
  427797:	sbb    eax,DWORD PTR [ebp+0x59]
  42779a:	mov    DWORD PTR [edx+ebp*4-0x5a2282e7],ebp
  4277a1:	push   ds
  4277a2:	jge    0x427799
  4277a4:	sbb    edi,ebx
  4277a6:	pop    es
  4277a7:	jmp    0xafc98536
  4277ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277ad:	pop    ebx
  4277ae:	inc    ebp
  4277af:	leave  
  4277b0:	ins    DWORD PTR es:[edi],dx
  4277b1:	int3   
  4277b2:	cli    
  4277b3:	pop    esp
  4277b4:	and    DWORD PTR [ebx+eax*4+0x30],0x57015803
  4277bc:	mov    ecx,0x1df94583
  4277c1:	inc    ebx
  4277c2:	je     0x4277af
  4277c4:	loope  0x4277e0
  4277c6:	ret    
  4277c7:	and    eax,0xe900f67d
  4277cc:	sahf   
  4277cd:	add    ch,BYTE PTR [eax-0x23]
  4277d0:	mov    bl,BYTE PTR [ebx]
  4277d2:	add    BYTE PTR [esi+0x290e52ac],ah
  4277d8:	add    BYTE PTR [eax],al
  4277da:	mov    eax,ds:0xa2cd4483
  4277df:	mov    bh,0x59
  4277e1:	xor    ah,BYTE PTR [esi-0x7254a29b]
  4277e7:	add    al,BYTE PTR [eax+0xbbafd]
  4277ed:	std    
  4277ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277ef:	push   edi
  4277f0:	je     0x4277b7
  4277f2:	into   
  4277f3:	push   0xb
  4277f5:	mov    al,0x78
  4277f7:	push   edi
  4277f8:	jg     0x427859
  4277fa:	adc    dh,0xc
  4277fd:	mov    BYTE PTR [ebp-0x3816c0ba],bh
  427803:	push   ecx
  427804:	sub    BYTE PTR [eax],al
  427806:	mov    dl,0x42
  427808:	add    DWORD PTR [esp+eax*8],eax
  42780b:	and    BYTE PTR [esp-0x10],0xff
  427810:	addr16 in al,0xca
  427813:	(bad)  
  427814:	(bad)  
  427815:	inc    cl
  427817:	sti    
  427818:	or     DWORD PTR [eax-0x3c],eax
  42781b:	mov    eax,0xba3f55b3
  427820:	jp     0x42780e
  427822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427823:	xor    BYTE PTR [ebp+0x44],ah
  427826:	add    bl,cl
  427828:	xlat   BYTE PTR ds:[ebx]
  427829:	call   0x3c15f9
  42782e:	inc    DWORD PTR [ecx+0x3]
  427831:	mov    DWORD PTR [edx+0x74000006],0x1043dde
  42783b:	in     eax,0x73
  42783d:	xor    eax,DWORD PTR [eax]
  42783f:	add    BYTE PTR [edx-0x40],dl
  427842:	add    BYTE PTR [ebp-0x6c],dh
  427845:	jg     0x42783a
  427847:	add    al,0xa2
  427849:	pop    es
  42784a:	cmp    DWORD PTR [edi],0x7406ec
  427850:	xchg   ecx,eax
  427851:	out    dx,eax
  427852:	shr    bl,1
  427854:	fiadd  WORD PTR [esi]
  427856:	inc    ebx
  427857:	push   ebx
  427858:	cmp    DWORD PTR [eax],0xfffffffb
  42785b:	mov    BYTE PTR [edx+0x5a],bh
  42785e:	jecxz  0x42782d
  427860:	mov    ah,0xe5
  427862:	imul   bl
  427864:	sub    al,0xda
  427866:	cmp    bh,bh
  427868:	sbb    ebp,0x3d
  42786b:	or     al,0x2c
  42786d:	push   es
  42786e:	test   esi,edi
  427870:	mov    edi,DWORD PTR [eax+0x5aaa8d01]
  427876:	push   eax
  427877:	push   eax
  427878:	ins    BYTE PTR es:[edi],dx
  427879:	push   ebp
  42787a:	idiv   dh
  42787c:	pop    ebx
  42787d:	fidivr WORD PTR ds:0x3eee9d08
  427883:	jne    0x427827
  427885:	test   DWORD PTR [ebx-0x17],0xffff68e8
  42788c:	sub    BYTE PTR [ebx+0x1418500b],ah
  427892:	repnz test BYTE PTR [eax],al
  427895:	imul   edi,edi,0xff4835ff
  42789b:	call   FWORD PTR ds:0xc507effc
  4278a1:	mov    ebx,0xfafe
  4278a6:	stos   BYTE PTR es:[edi],al
  4278a7:	xchg   ebx,eax
  4278a8:	jl     0x4278ec
  4278aa:	(bad)  
  4278ab:	(bad)  
  4278ac:	mov    edi,0xbfe6edfb
  4278b1:	out    dx,eax
  4278b2:	in     eax,dx
  4278b3:	test   DWORD PTR [eax],ebx
  4278b5:	sti    
  4278b6:	adc    BYTE PTR [edx+edi*1+0x45],ah
  4278ba:	adc    DWORD PTR [ebx-0x1],0xb389dff
  4278c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c2:	mov    BYTE PTR [ebx],ch
  4278c4:	add    al,0x7f
  4278c6:	gs imul ebp,edx,0x13
  4278ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278cb:	es push 0xe2ebaa72
  4278d1:	out    dx,eax
  4278d2:	in     eax,dx
  4278d3:	push   ss
  4278d4:	jmp    0xea4157
  4278d9:	jne    0x4278cc
  4278db:	sar    DWORD PTR [ecx+0x24222817],cl
  4278e1:	push   eax
  4278e2:	lds    ebp,FWORD PTR [edx-0x1]
  4278e5:	call   FWORD PTR ds:0x3507eb89
  4278eb:	icebp  
  4278ec:	add    edi,ebx
  4278ee:	sbb    dl,bl
  4278f0:	mov    ecx,0x1427261b
  4278f5:	lea    edx,[ebp-0x18]
  4278f8:	jle    0x4278f3
  4278fa:	add    al,BYTE PTR [ebx]
  4278fc:	(bad)  
  4278fd:	cmc    
  4278fe:	cli    
  4278ff:	shr    bl,1
  427901:	js     0x427963
  427903:	push   es
  427904:	ins    BYTE PTR es:[edi],dx
  427905:	cmp    esi,DWORD PTR [ecx+0x0]
  427908:	pusha  
  427909:	mov    dh,0x0
  42790b:	add    BYTE PTR [esi+0x431bab8b],bh
  427911:	idiv   BYTE PTR [ecx]
  427913:	out    dx,eax
  427914:	call   0x5e59:0xc766416a
  42791b:	dec    esp
  42791c:	sbb    BYTE PTR [esi],bh
  42791e:	popf   
  42791f:	int    0x3c
  427921:	test   esi,ebx
  427923:	add    ebp,DWORD PTR [ecx]
  427925:	mov    dl,0x7e
  427927:	push   es
  427928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427929:	iret   
  42792a:	loopne 0x427987
  42792c:	rcr    DWORD PTR [eax+0x3],cl
  42792f:	and    BYTE PTR gs:[edx+0x75],al
  427933:	daa    
  427934:	inc    DWORD PTR [ebp+0x111103b1]
  42793a:	pusha  
  42793b:	(bad)  
  42793c:	mov    dh,0x8b
  42793e:	sub    esi,DWORD PTR [edx+eax*4]
  427941:	sbb    al,0xda
  427943:	out    dx,al
  427944:	call   0x6059:0x67662a6a
  42794b:	mov    ebp,0xc2b4092
  427950:	popf   
  427951:	ins    DWORD PTR es:[edi],dx
  427952:	jl     0x4278d7
  427954:	rcl    BYTE PTR [edx+0x2a],1
  427957:	cmc    
  427958:	and    DWORD PTR [edi],esp
  42795a:	stos   BYTE PTR es:[edi],al
  42795b:	fs inc esi
  42795d:	test   DWORD PTR [eax+ebp*2],esp
  427960:	cmp    cl,BYTE PTR [eax]
  427962:	and    BYTE PTR fs:[esi],dh
  427965:	pop    ecx
  427966:	xchg   edx,eax
  427967:	cmp    eax,0x5ae8fadf
  42796c:	lods   al,BYTE PTR ds:[esi]
  42796d:	pop    ecx
  42796e:	and    BYTE PTR [eax+eax*1+0x0],0x6d
  427973:	push   0x5f
  427975:	mov    esp,0x1a005914
  42797a:	imul   ebp,DWORD PTR [esi+0x43],0x216a796f
  427981:	pop    edx
  427982:	sbb    BYTE PTR [ebp-0x77],0xa7
  427986:	fisubr WORD PTR [eax-0x67584dff]
  42798c:	or     al,0xe9
  42798e:	sar    DWORD PTR [edi-0x14],cl
  427991:	push   0x7a
  427993:	pop    edx
  427994:	jg     0x4279e3
  427996:	mov    edx,0xeddd457f
  42799b:	mov    dl,0x52
  42799d:	mov    es,WORD PTR cs:[ecx+0x1241f945]
  4279a4:	xchg   DWORD PTR [edx+ebp*4+0x1de1755b],esp
  4279ab:	inc    ecx
  4279ac:	sti    
  4279ad:	bound  esi,QWORD PTR [edi]
  4279af:	xchg   DWORD PTR [ebp+ecx*8+0x52],esi
  4279b3:	mov    ebx,DWORD PTR [ebp+eax*8-0x42]
  4279b7:	push   0x6c
  4279b9:	idiv   esi
  4279bb:	pop    ebx
  4279bc:	test   BYTE PTR [ecx],ch
  4279be:	mov    DWORD PTR [edx+ebx*1-0x78fd6115],eax
  4279c5:	and    al,0xa1
  4279c7:	push   0x5e
  4279c9:	fdiv   st(6),st
  4279cb:	pop    ebx
  4279cc:	mov    BYTE PTR ds:0xaf870bb5,ah
  4279d2:	adc    DWORD PTR [eax+0x4c],esp
  4279d5:	add    BYTE PTR [eax],0x0
  4279d8:	mov    esi,0x752d895b
  4279dd:	cli    
  4279de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279df:	call   0x21aa694e
  4279e4:	outs   dx,BYTE PTR ds:[esi]
  4279e5:	add    al,BYTE PTR [eax]
  4279e7:	sahf   
  4279e8:	xor    al,0x24
  4279ea:	push   cs
  4279eb:	sub    DWORD PTR [ecx+0x2ac563d7],esp
  4279f1:	pop    eax
  4279f2:	call   0x40aaf7
  4279f7:	jmp    FWORD PTR [eax+eax*1+0x7]
  4279fb:	test   BYTE PTR [esi-0x3],dh
  4279fe:	(bad)  
  4279ff:	push   DWORD PTR [edi+0x6a]
  427a02:	pop    ds
  427a03:	adc    BYTE PTR [ecx+esi*8],al
  427a06:	in     eax,dx
  427a07:	inc    esi
  427a08:	mov    edx,0xf50e1f4a
  427a0d:	div    BYTE PTR [ebx+0x24]
  427a10:	sar    BYTE PTR [edx],1
  427a12:	inc    ebp
  427a13:	mov    edx,DWORD PTR [eax]
  427a15:	and    BYTE PTR [eax-0x7d],bh
  427a18:	(bad)  
  427a1a:	push   DWORD PTR [ebx-0xc]
  427a1d:	jb     0x427a63
  427a1f:	and    al,0xf4
  427a21:	jb     0x427a9f
  427a23:	and    al,0xe8
  427a25:	jmp    0x4279ca
  427a27:	enter  0xe393,0x83
  427a2b:	ror    BYTE PTR [eax],0xfa
  427a2e:	mov    WORD PTR [eax+ebx*8-0xd],es
  427a32:	dec    edi
  427a33:	call   0x3db613
  427a38:	xchg   ebx,eax
  427a39:	das    
  427a3a:	pop    ds
  427a3b:	sub    BYTE PTR [eax],al
  427a3d:	add    BYTE PTR [ecx+ebx*1-0x1b8c01c2],bl
  427a44:	jae    0x427a6a
  427a46:	xchg   esp,eax
  427a47:	jecxz  0x427a5d
  427a49:	mov    al,ds:0x8afb4376
  427a4e:	mov    eax,0xb8892c2a
  427a53:	sub    dl,BYTE PTR [eax]
  427a55:	test   DWORD PTR [edi+ebp*1],eax
  427a58:	or     al,0x89
  427a5a:	mov    BYTE PTR [edx],ch
  427a5c:	adc    al,0xeb
  427a5e:	fdivr  DWORD PTR [esi+0x7c]
  427a61:	and    al,0x63
  427a63:	add    esi,DWORD PTR [ebp+0x7]
  427a66:	or     bh,BYTE PTR [edi]
  427a68:	pop    ds
  427a69:	push   cs
  427a6a:	inc    esp
  427a6b:	call   0x4adfe4bd
  427a70:	nop
  427a71:	jl     0x427aec
  427a73:	inc    ecx
  427a74:	mov    bh,0xe7
  427a76:	ficomp WORD PTR ds:[ebp-0x5]
  427a7a:	es mov gs,ebx
  427a7d:	adc    al,0x5d
  427a7f:	imul   esp,edi,0x9f6902ff
  427a85:	dec    edi
  427a86:	sub    BYTE PTR es:[edi+0x5e5168fa],ch
  427a8d:	shl    BYTE PTR [edi+0x5],cl
  427a90:	xchg   ecx,eax
  427a91:	jl     0x427a4c
  427a93:	or     DWORD PTR [edi+eiz*8-0x4a221e2],edi
  427a9a:	push   ss
  427a9b:	imul   edi,edi,0xed7c1dff
  427aa1:	cli    
  427aa2:	add    BYTE PTR [eax],al
  427aa4:	push   ss
  427aa5:	and    BYTE PTR [edi+0x5e5130fa],ch
  427aab:	rol    BYTE PTR [edi+0x3f],cl
  427aae:	nop
  427aaf:	jl     0x427a32
  427ab1:	inc    ecx
  427ab2:	mov    bh,0xe7
  427ab4:	cmp    ah,dh
  427ab6:	pop    ebp
  427ab7:	sti    
  427ab8:	out    dx,al
  427ab9:	jno    0x427b19
  427abb:	xchg   DWORD PTR [edx+0x7c],ebx
  427abe:	pop    esi
  427abf:	jne    0x427a56
  427ac1:	dec    esp
  427ac2:	cmp    BYTE PTR [edi+0x56],bh
  427ac5:	mov    eax,gs:0x429610c
  427acb:	push   ebx
  427acc:	jb     0x427b1d
  427ace:	imul   ecx,DWORD PTR [esi],0xffffffdd
  427ad1:	imul   edi,DWORD PTR [edi+0x7c],0xffffffb9
  427ad5:	xor    eax,0xeb210aff
  427ada:	add    eax,DWORD PTR [eax]
  427adc:	popf   
  427add:	rcl    dl,1
  427adf:	pop    es
  427ae0:	xor    eax,0x42fb4e33
  427ae5:	push   ecx
  427ae6:	inc    esp
  427ae7:	jne    0x427a90
  427ae9:	add    bh,BYTE PTR [ebx]
  427aeb:	ins    BYTE PTR es:[edi],dx
  427aec:	push   0x72619a53
  427af1:	inc    ecx
  427af2:	sbb    eax,0x48531bed
  427af7:	sub    cl,ah
  427af9:	shr    eax,0xec
  427afc:	or     al,0x2b
  427afe:	jp     0x427ad8
  427b00:	mov    edx,0xb2c85df2
  427b05:	out    dx,al
  427b06:	sbb    BYTE PTR [ecx],0x0
  427b09:	add    al,ah
  427b0b:	push   ebp
  427b0c:	bound  esp,QWORD PTR [ebx+0x3a63eb9]
  427b12:	out    0xce,al
  427b14:	jmp    0xd661:0xa301fafb
  427b1b:	mov    ds:0x292480d,eax
  427b20:	callw  0x75c0
  427b24:	call   0xa680f4cb
  427b29:	add    edi,DWORD PTR [edx]
  427b2b:	fsubp  st(2),st
  427b2d:	and    ebx,DWORD PTR [ebp+0x6a47c5a3]
  427b33:	add    ah,BYTE PTR [eax-0x40]
  427b36:	pushf  
  427b37:	test   BYTE PTR [edi+0x28],0x61
  427b3b:	shr    eax,0x8c
  427b3e:	loope  0x427b5e
  427b40:	or     DWORD PTR [edx-0x5d270327],0x3a63eb9
  427b4a:	and    al,dh
  427b4c:	or     al,0xe0
  427b4e:	and    eax,0x3df7e2c6
  427b53:	push   ds
  427b54:	lods   eax,DWORD PTR ds:[esi]
  427b55:	les    esp,FWORD PTR [edx-0x78]
  427b58:	sbb    eax,0x358bad28
  427b5d:	or     bh,BYTE PTR [ecx+0x69]
  427b60:	or     DWORD PTR [ecx-0x2f],esp
  427b63:	push   ds
  427b64:	add    BYTE PTR [ecx],dh
  427b66:	adc    BYTE PTR [esi+0x24],bh
  427b69:	imul   ebx,DWORD PTR [esi+0x910002],0xfb3e6900
  427b73:	sahf   
  427b74:	and    esi,edx
  427b76:	and    edi,ecx
  427b78:	sahf   
  427b79:	into   
  427b7a:	or     BYTE PTR [esi-0x6eefdf0e],cl
  427b80:	mov    DWORD PTR [edi-0x6],edx
  427b83:	jle    0x427bca
  427b85:	pop    eax
  427b86:	adc    eax,0x150879
  427b8b:	and    BYTE PTR [ebx-0x26d2f367],0x54
  427b92:	cmc    
  427b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b94:	ret    0x3fa
  427b97:	frstor ds:0xc505447c
  427b9d:	jnp    0x427bec
  427b9f:	fldenv [edi]
  427ba1:	add    eax,DWORD PTR [edi-0x79157d5b]
  427ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ba8:	retf   0x88af
  427bab:	call   0xfc2e6aed
  427bb0:	ficom  WORD PTR [esi+eax*4-0x6c]
  427bb4:	xchg   esi,eax
  427bb5:	push   0x46
  427bb7:	sbb    DWORD PTR ds:0x732a3759,edi
  427bbd:	(bad)  
  427bbe:	push   ecx
  427bbf:	adc    DWORD PTR [esp+eiz*2-0x6c590105],eax
  427bc6:	je     0x427b90
  427bc8:	adc    DWORD PTR [ebx-0x5f],edx
  427bcb:	(bad)
  427bce:	add    BYTE PTR [edx-0x35],dl
  427bd1:	sub    bh,bl
  427bd3:	push   ebp
  427bd4:	add    BYTE PTR [eax],al
  427bd6:	mov    ds:0x542fe806,eax
  427bdb:	pop    edx
  427bdc:	sti    
  427bdd:	bound  esp,QWORD PTR [ebp+0x20]
  427be0:	fs add bh,cl
  427be3:	icebp  
  427be4:	and    eax,esp
  427be6:	ja     0x427be6
  427be8:	mov    BYTE PTR [edx+edi*1+0x4],al
  427bec:	dec    edi
  427bed:	call   DWORD PTR [ecx-0x50]
  427bf0:	or     DWORD PTR [eax+0x44],eax
  427bf3:	jae    0x427c39
  427bf5:	and    al,0x74
  427bf7:	out    0xeb,al
  427bf9:	ret    
  427bfa:	or     esi,DWORD PTR [edx+eax*4+0x564be044]
  427c01:	pop    esi
  427c02:	mov    edi,0x365de587
  427c07:	dec    edi
  427c08:	sti    
  427c09:	push   esp
  427c0a:	jg     0x427bde
  427c0c:	out    0xcb,eax
  427c0e:	xchg   edi,eax
  427c0f:	mov    ah,0xf6
  427c11:	test   ah,al
  427c13:	cmp    bh,BYTE PTR [ebx]
  427c15:	push   esi
  427c16:	xchg   DWORD PTR [eax+edi*1+0x162be475],ebp
  427c1d:	cmp    ecx,esi
  427c1f:	add    esi,DWORD PTR [edx+ebx*1-0x14]
  427c23:	(bad)  
  427c24:	(bad)  
  427c25:	call   DWORD PTR [esp+esi*4]
  427c28:	je     0x427c3a
  427c2a:	mov    edi,DWORD PTR [ecx]
  427c2c:	pop    es
  427c2d:	push   ecx
  427c2f:	pop    es
  427c30:	not    DWORD PTR ds:0x3b5af0
  427c36:	sub    eax,0x890b39
  427c3b:	add    BYTE PTR [ecx],al
  427c3d:	add    al,0x8d
  427c3f:	inc    ebp
  427c40:	mov    WORD PTR [edi-0x708fba74],cs
  427c46:	push   ecx
  427c47:	call   DWORD PTR [ecx]
  427c49:	or     BYTE PTR [ebx],ch
  427c4b:	leave  
  427c4c:	pushf  
  427c4d:	mov    ?,esp
  427c4f:	dec    DWORD PTR [ebx+0x7bf87a95]
  427c55:	cmp    bh,dh
  427c57:	pop    esp
  427c58:	dec    ebx
  427c59:	sub    cl,BYTE PTR [eax+0x4299d15]
  427c5f:	pop    ebp
  427c60:	pop    edi
  427c61:	dec    ebp
  427c62:	call   DWORD PTR [esi+eiz*1+0x2d]
  427c66:	addr16 je 0x427c57
  427c69:	xchg   ebx,eax
  427c6a:	pop    edx
  427c6b:	test   BYTE PTR [ebp+0x15],bl
  427c6e:	les    edx,FWORD PTR [ecx+0x6e]
  427c71:	mov    ebx,DWORD PTR [esi*2+0x38faf58d]
  427c78:	mov    al,0x65
  427c7a:	rcl    DWORD PTR ds:0xffff69b5,cl
  427c80:	cmp    eax,0x120fd884
  427c85:	push   esi
  427c86:	or     edi,ebx
  427c88:	nop
  427c89:	push   ecx
  427c8a:	pop    edx
  427c8b:	adc    eax,0xffbf3671
  427c90:	and    eax,0x6888ef4e
  427c95:	dec    ebp
  427c96:	nop
  427c97:	inc    ebp
  427c98:	test   DWORD PTR [ecx-0x6676ba70],ebx
  427c9e:	mov    ch,0xfa
  427ca0:	add    BYTE PTR [eax],al
  427ca2:	push   eax
  427ca3:	popa   
  427ca4:	push   cs
  427ca5:	leave  
  427ca6:	(bad)
  427ca9:	sti    
  427caa:	retf   0x7e72
  427cad:	clc    
  427cae:	ret    0x295
  427cb1:	pop    ebp
  427cb2:	mov    edx,0x5d1583fd
  427cb7:	imul   eax,eax,0xb86991bd
  427cbd:	xchg   BYTE PTR [ecx+0x1ef862e7],dh
  427cc3:	push   eax
  427cc4:	sub    dl,BYTE PTR [edx-0x7b]
  427cc7:	xor    ch,BYTE PTR [esi+0x3ee88af9]
  427ccd:	je     0x427cd7
  427ccf:	lea    edx,[ebp+0x66]
  427cd2:	lds    ebp,FWORD PTR [esi+0x2a123c2]
  427cd8:	and    bh,dl
  427cda:	xchg   esi,eax
  427cdb:	xlat   BYTE PTR ds:[ebx]
  427cdc:	repz mov ch,0xd2
  427cdf:	push   ecx
  427ce0:	cld    
  427ce1:	pop    ss
  427ce2:	scas   eax,DWORD PTR es:[edi]
  427ce3:	ret    0x80e8
  427ce6:	pop    ecx
  427ce7:	jmp    FWORD PTR [ecx+0x10fa7ec8]
  427ced:	add    al,0x9d
  427cef:	add    bh,BYTE PTR [esi-0x2327c9ef]
  427cf5:	mov    bl,0x3a
  427cf7:	fisubr WORD PTR [esi+ebx*2]
  427cfa:	es or  al,0x15
  427cfd:	sub    BYTE PTR [ecx-0x6ee5332a],cl
  427d03:	es stc 
  427d05:	xlat   BYTE PTR ds:[ebx]
  427d06:	add    BYTE PTR [eax],al
  427d08:	mov    ah,0xda
  427d0a:	call   0x7ae51a12
  427d0f:	fdivr  DWORD PTR [esi-0x41278e16]
  427d15:	jmp    0xb7fc:0x519ad769
  427d1c:	xchg   ecx,eax
  427d1d:	ret    0x8ae8
  427d20:	imul   esp,DWORD PTR [esi],0x26518af9
  427d26:	cmc    
  427d27:	mov    ds,WORD PTR [ecx+0x26]
  427d2a:	or     DWORD PTR [ecx+ebx*1+0x6d2404c7],esi
  427d31:	mov    eax,0x15a2d731
  427d36:	and    BYTE PTR [edx+edi*1+0x4e],ch
  427d3a:	and    bl,BYTE PTR [ebp+0x2a]
  427d3d:	dec    edx
  427d3e:	sbb    dl,bh
  427d40:	xchg   BYTE PTR [edi-0x53],bh
  427d43:	daa    
  427d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d45:	pop    ebp
  427d46:	out    0x88,al
  427d48:	fdivr  st,st(6)
  427d4a:	add    edi,edx
  427d4c:	mov    dl,0x51
  427d4e:	je     0x427d47
  427d50:	xchg   edi,edx
  427d52:	(bad)  
  427d53:	fsubr  DWORD PTR [esi]
  427d55:	dec    esp
  427d56:	jne    0x427d39
  427d58:	shl    edi,1
  427d5a:	lahf   
  427d5b:	cld    
  427d5c:	pop    esi
  427d5d:	push   ecx
  427d5e:	pop    ebp
  427d5f:	jb     0x427d5c
  427d61:	scas   eax,DWORD PTR es:[edi]
  427d62:	mov    ebp,0x86b79efd
  427d67:	mov    ebp,0x6af8661d
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	mov    edx,0x6fd1521e
  427d73:	mov    edi,0x4222b6f9
  427d78:	je     0x427dae
  427d7a:	mov    WORD PTR [esi+eiz*2-0x2f],ss
  427d7e:	sbb    eax,esi
  427d80:	and    ebp,ebp
  427d82:	xchg   edi,edx
  427d84:	or     ebx,DWORD PTR [edx+edx*1]
  427d87:	mov    bl,0x4f
  427d89:	mov    cs,WORD PTR [ebx]
  427d8b:	adc    eax,0xd1a12912
  427d90:	ret    
  427d91:	in     eax,dx
  427d92:	pop    ecx
  427d93:	(bad)  
  427d94:	and    esp,ecx
  427d96:	mov    BYTE PTR [edx],0x0
  427d99:	jmp    0xdd3d9f23
  427d9e:	call   0xfb4a:0xdd27e7b2
  427da5:	adc    ch,dh
  427da7:	and    al,0x14
  427da9:	aad    0x7a
  427dab:	or     esi,DWORD PTR [ebp+ecx*1-0x2f]
  427daf:	aam    0x19
  427db1:	rcr    DWORD PTR [esi+0x59890002],1
  427db7:	(bad)  
  427db8:	and    edx,ecx
  427dba:	push   ecx
  427dbb:	(bad)  
  427dbc:	and    eax,DWORD PTR [ecx]
  427dbe:	dec    eax
  427dbf:	xlat   BYTE PTR ds:[ebx]
  427dc0:	pop    es
  427dc1:	push   ds
  427dc2:	stos   DWORD PTR es:[edi],eax
  427dc3:	fcom   QWORD PTR [ecx+ebp*4]
  427dc6:	sahf   
  427dc7:	jns    0x427e3d
  427dc9:	lds    ecx,FWORD PTR [esi+0x5800747b]
  427dcf:	pop    eax
  427dd0:	mov    WORD PTR [eax+eax*1+0x0],es
  427dd4:	pop    eax
  427dd5:	and    al,0x50
  427dd7:	lea    ecx,[eax+0x28]
  427dda:	and    BYTE PTR [eax+0xa],dl
  427ddd:	scas   eax,DWORD PTR es:[edi]
  427dde:	je     0x427de8
  427de0:	xchg   DWORD PTR [ebp-0x53803919],edi
  427de6:	test   BYTE PTR [ebx+0x1c74ac6c],0xf1
  427ded:	inc    edx
  427dee:	pop    ds
  427def:	or     BYTE PTR [edi+0x8],ch
  427df2:	add    DWORD PTR [ebp+0x30],0xffffffad
  427df6:	je     0x427e10
  427df8:	repz xor DWORD PTR [edi],ecx
  427dfb:	jmp    FWORD PTR [ecx+0x56]
  427dfe:	dec    ebx
  427dff:	dec    DWORD PTR [ecx-0x33ea0902]
  427e05:	push   ecx
  427e06:	cmp    eax,DWORD PTR [eax]
  427e08:	sar    BYTE PTR [edi-0x1b],cl
  427e0b:	pop    ebp
  427e0c:	inc    esi
  427e0d:	push   ebx
  427e0e:	sti    
  427e0f:	push   edx
  427e10:	stos   BYTE PTR es:[edi],al
  427e11:	jg     0x427e87
  427e13:	and    al,0xf0
  427e15:	xchg   ecx,eax
  427e16:	not    BYTE PTR ds:0x3b52f0
  427e1c:	jg     0x427e2c
  427e1e:	call   0xf6eca3ea
  427e23:	test   BYTE PTR [edx+esi*1-0x4cca8e1],dh
  427e2a:	ret    
  427e2b:	inc    ebx
  427e2c:	les    edx,FWORD PTR [esi+esi*8+0x3b587015]
  427e33:	add    BYTE PTR [edx+ecx*1-0x13],ch
  427e37:	inc    DWORD PTR [eax]
  427e39:	add    BYTE PTR [ebx-0x79],dh
  427e3c:	clc    
  427e3d:	(bad)  
  427e3e:	call   0x92db6645
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	not    BYTE PTR [edi-0x7d]
  427e47:	push   ecx
  427e48:	jmp    0x427e5c
  427e4a:	popf   
  427e4b:	cdq    
  427e4c:	call   FWORD PTR [edx-0xd]
  427e4f:	in     al,0x42
  427e51:	push   edi
  427e52:	pop    edi
  427e53:	pop    ebp
  427e54:	call   DWORD PTR [esi+edx*1-0x3]
  427e58:	imul   edx,DWORD PTR [eax-0x7ba9a834],0x5d
  427e5f:	aad    0x2b
  427e61:	das    
  427e62:	pop    ebp
  427e63:	and    al,cl
  427e65:	or     ebp,ecx
  427e67:	sti    
  427e68:	sbb    al,0x45
  427e6a:	lods   eax,DWORD PTR ds:[esi]
  427e6b:	scas   eax,DWORD PTR es:[edi]
  427e6c:	clc    
  427e6d:	cmp    al,bl
  427e6f:	push   ebp
  427e70:	retf   
  427e71:	pop    ss
  427e72:	in     eax,dx
  427e73:	jmp    0xdeebf3ce
  427e78:	mov    edi,0xf40e3a07
  427e7d:	cli    
  427e7e:	test   al,0x2d
  427e80:	addr16 dec ecx
  427e82:	xor    ch,BYTE PTR [eax+0x70257f56]
  427e88:	rol    BYTE PTR [edx],1
  427e8a:	js     0x427f04
  427e8c:	and    BYTE PTR [eax+0x5d0419a8],dl
  427e92:	fild   QWORD PTR [eax]
  427e94:	call   DWORD PTR [esi+edx*1+0x7d]
  427e98:	mov    cl,0xe7
  427e9a:	push   0xffffffea
  427e9c:	push   ebp
  427e9d:	sti    
  427e9e:	add    BYTE PTR [eax],al
  427ea0:	es push esi
  427ea2:	add    eax,DWORD PTR [ebp+ebx*8-0x147ad3d4]
  427ea9:	xor    al,0x20
  427eab:	xchg   DWORD PTR [ebx+0x4d],esi
  427eae:	or     dh,0x49
  427eb1:	pop    edi
  427eb2:	mov    BYTE PTR [edx-0x5b],al
  427eb5:	aam    0x6
  427eb7:	test   esp,edx
  427eb9:	xchg   esp,eax
  427eba:	lock cli 
  427ebc:	xor    BYTE PTR ds:0x6a4d00ed,ch
  427ec2:	mov    ch,0x8c
  427ec4:	pusha  
  427ec5:	add    dh,cl
  427ec7:	imul   ebx,DWORD PTR [eax+0x1a5a1a57],0x4b
  427ece:	adc    dl,al
  427ed0:	mov    ds:0x87ef944d,al
  427ed5:	fcomp  st(0)
  427ed7:	mov    cl,0x87
  427ed9:	fdiv   st,st(0)
  427edb:	pop    edx
  427edc:	nop
  427edd:	jbe    0x427ebb
  427edf:	ret    
  427ee0:	jb     0x427e92
  427ee2:	mov    eax,DWORD PTR [ebp-0x73]
  427ee5:	add    bh,BYTE PTR [ecx*4-0x4d18a48f]
  427eec:	push   esp
  427eed:	dec    esi
  427eee:	ins    DWORD PTR es:[edi],dx
  427eef:	inc    esp
  427ef0:	leave  
  427ef1:	jmp    0x427ebc
  427ef3:	iret   
  427ef4:	scas   al,BYTE PTR es:[edi]
  427ef5:	jg     0x427f23
  427ef7:	or     al,0xbb
  427ef9:	add    BYTE PTR [edx-0x17275931],bh
  427eff:	in     eax,dx
  427f00:	xor    ah,BYTE PTR [esi-0x62]
  427f03:	push   edx
  427f04:	add    BYTE PTR [eax],al
  427f06:	es dec esi
  427f08:	pop    sp
  427f0a:	es fsub st,st(1)
  427f0d:	mov    dh,0x17
  427f0f:	sub    BYTE PTR [ecx-0x11],dh
  427f12:	rol    BYTE PTR [edx],cl
  427f14:	sub    al,0x46
  427f16:	lods   eax,DWORD PTR ds:[esi]
  427f17:	add    bl,BYTE PTR [ecx*4-0x4b68a50f]
  427f1e:	hlt    
  427f1f:	dec    ebp
  427f20:	ins    DWORD PTR es:[edi],dx
  427f21:	inc    esp
  427f22:	imul   eax,eax,0xff27b112
  427f28:	sub    al,0xc5
  427f2a:	loop   0x427ee0
  427f2c:	pop    ecx
  427f2d:	out    dx,eax
  427f2e:	(bad)  
  427f2f:	lock test al,0x3
  427f32:	sbb    bl,al
  427f34:	loopne 0x427fa1
  427f36:	jmp    0x3a4a:0x4259425e
  427f3d:	rcl    BYTE PTR [ecx+ebx*8+0x4d8128ff],1
  427f44:	add    al,0x5
  427f46:	pop    ebp
  427f47:	or     eax,0xf1c16a00
  427f4c:	add    BYTE PTR [ebp+eiz*4+0x19f94885],dl
  427f53:	retf   
  427f54:	add    ebp,ecx
  427f56:	pop    edx
  427f57:	add    eax,DWORD PTR [edi+0x457ba2a9]
  427f5d:	icebp  
  427f5e:	sub    eax,0x68f91548
  427f63:	or     eax,0xae248e00
  427f68:	cli    
  427f69:	or     al,0x0
  427f6b:	add    BYTE PTR ds:0xc6e93ff7,bh
  427f71:	adc    BYTE PTR [eax-0x29],0xf5
  427f75:	xchg   al,al
  427f77:	push   ebp
  427f78:	xchg   esi,eax
  427f79:	test   DWORD PTR [ebp+ecx*1-0x6f],ecx
  427f7d:	pop    edx
  427f7e:	mov    ah,0xcf
  427f80:	aad    0x49
  427f82:	sti    
  427f83:	or     al,0x1d
  427f85:	idiv   DWORD PTR [edi]
  427f87:	jmp    0xa7925a42
  427f8c:	lds    eax,FWORD PTR [esi-0x7a59ea40]
  427f92:	dec    esp
  427f93:	int    0xa6
  427f95:	pop    edx
  427f96:	pushf  
  427f97:	jg     0x427ffe
  427f99:	dec    ecx
  427f9a:	sti    
  427f9b:	int3   
  427f9c:	mov    dh,bh
  427f9e:	aas    
  427f9f:	jmp    0x6b2f03ef
  427fa4:	retf   
  427fa5:	clc    
  427fa6:	add    ah,dh
  427fa8:	in     eax,dx
  427fa9:	retf   
  427faa:	jl     0x427fa9
  427fac:	loop   0x427f83
  427fae:	adc    BYTE PTR [ecx-0x21],dl
  427fb1:	mov    esp,0x425256f9
  427fb6:	je     0x427f99
  427fb8:	sbb    DWORD PTR [edi+0x336c000f],edi
  427fbe:	jmp    0xf6d6fbc2
  427fc3:	and    eax,0x3b5c38
  427fc8:	adc    DWORD PTR [esi-0x14],edi
  427fcb:	or     DWORD PTR [eax+0x4d1],0x4e928400
  427fd5:	push   0xffffff94
  427fd7:	pop    esi
  427fd8:	sti    
  427fd9:	push   edx
  427fda:	jmp    DWORD PTR [edi+0x524015f6]
  427fe0:	cmp    eax,DWORD PTR [eax]
  427fe2:	pop    es
  427fe3:	or     al,0xc
  427fe5:	sub    cl,0xf7
  427fe8:	push   DWORD PTR [eax+esi*1-0x79]
  427fec:	jge    0x427ffa
  427fee:	je     0x42802c
  427ff0:	push   ds
  427ff1:	test   DWORD PTR [ebx+0x33],edi
  427ff4:	sbb    bh,bh
  427ff6:	icebp  
  427ff7:	cli    
  427ff8:	add    bh,0x5c
  427ffb:	and    BYTE PTR [edx-0x2],cl
  427ffe:	pop    ebx
  427fff:	jle    0x428046
  428001:	cld    
  428002:	rol    esi,0x75
  428005:	adc    dl,BYTE PTR [ebx+0x5c0c74b3]
  42800b:	aam    0x40
  42800d:	(bad)  
  42800e:	sti    
  42800f:	ja     0x428001
  428011:	mov    DWORD PTR [ecx-0x4e097b06],edi
  428017:	ds sub al,al
  42801a:	sbb    eax,0xf400006e
  42801f:	add    al,0xae
  428021:	inc    ebp
  428022:	in     al,dx
  428023:	aaa    
  428024:	outs   dx,DWORD PTR ds:[esi]
  428025:	push   cs
  428026:	mov    esp,0xc18de631
  42802b:	cli    
  42802c:	dec    edi
  42802d:	push   0x6ad
  428032:	outs   dx,DWORD PTR ds:[esi]
  428033:	std    
  428034:	mov    WORD PTR [ebp+0x0],es
  428037:	add    BYTE PTR [ebp-0x2898509b],bl
  42803d:	pop    ecx
  42803e:	(bad)  
  42803f:	push   DWORD PTR [ebp-0x45059694]
  428045:	rcl    BYTE PTR [ebx-0x7b],1
  428048:	stos   DWORD PTR es:[edi],eax
  428049:	lea    ebp,[edi]
  42804b:	xchg   DWORD PTR [eax+0x2d],esp
  42804e:	lods   eax,DWORD PTR ds:[esi]
  42804f:	out    0xcc,eax
  428051:	mov    dl,BYTE PTR [ebp-0x5]
  428054:	and    al,0xa6
  428056:	push   ebx
  428057:	test   DWORD PTR [ebp+0x74],ebx
  42805a:	pop    es
  42805b:	push   edx
  42805c:	jne    0x428055
  42805e:	ret    
  42805f:	stc    
  428060:	xor    al,0x9b
  428063:	lea    edi,[eax]
  428065:	leave  
  428066:	pop    eax
  428067:	sti    
  428068:	jb     0x42806b
  42806a:	sbb    edx,DWORD PTR [ecx+0x6b]
  42806d:	pop    esp
  42806e:	jmp    0x7c209272
  428073:	cli    
  428074:	pop    edx
  428075:	sub    al,0xaf
  428077:	xchg   al,bl
  428079:	gs es inc ebp
  42807c:	dec    ecx
  42807d:	loopne 0x4280c3
  42807f:	call   0x464446
  428084:	es inc ecx
  428086:	mov    WORD PTR [ebp+0x31],?
  428089:	ficom  WORD PTR [ecx+0x74]
  42808c:	pop    ebx
  42808d:	(bad)  
  42808f:	pop    es
  428090:	popf   
  428091:	sar    cl,1
  428093:	xchg   BYTE PTR [ebp+0x4d],bl
  428096:	mov    edi,?
  428098:	mov    cs,WORD PTR [edx+0x52]
  42809b:	xor    eax,DWORD PTR [eax]
  42809d:	add    ch,dh
  42809f:	mov    dh,0xbe
  4280a1:	stc    
  4280a2:	add    ch,ah
  4280a4:	imul   ebx,DWORD PTR [ebp+ebx*2+0x787f51cb],0xffffffd5
  4280ac:	(bad)  
  4280ad:	addr16 adc eax,0x10ffff66
  4280b3:	add    ch,BYTE PTR [ebx+edx*8-0x30]
  4280b7:	dec    edx
  4280b8:	pop    edx
  4280b9:	jmp    0xf0943b90
  4280be:	mov    ?,esp
  4280c0:	test   al,0x3
  4280c2:	sbb    al,ch
  4280c4:	hlt    
  4280c5:	and    cl,0xfd
  4280c8:	cwde   
  4280c9:	lods   eax,DWORD PTR ds:[esi]
  4280ca:	cmp    BYTE PTR [eax],al
  4280cc:	pusha  
  4280cd:	ret    0x7da2
  4280d0:	scas   al,BYTE PTR es:[edi]
  4280d1:	dec    DWORD PTR [edx+0x79]
  4280d4:	xchg   esi,eax
  4280d5:	pop    es
  4280d6:	test   DWORD PTR [edx+0x7e9655bb],ebx
  4280dc:	lods   al,BYTE PTR ds:[esi]
  4280dd:	push   edi
  4280de:	out    0xa8,al
  4280e0:	pop    ds
  4280e1:	inc    ecx
  4280e2:	xchg   ebp,eax
  4280e3:	add    al,BYTE PTR [edx]
  4280e5:	int    0xa6
  4280e7:	pop    edx
  4280e8:	lahf   
  4280e9:	ret    
  4280ea:	je     0x428136
  4280ec:	jg     0x4280e1
  4280ee:	add    BYTE PTR [ebx],al
  4280f0:	xchg   ebx,eax
  4280f1:	push   esi
  4280f2:	mov    BYTE PTR [esi],cl
  4280f4:	sti    
  4280f5:	ret    
  4280f6:	pop    edx
  4280f7:	test   DWORD PTR [ebp+0x5db11208],esp
  4280fd:	sar    BYTE PTR [esi-0x6],1
  428100:	pop    ebp
  428101:	mov    BYTE PTR [eax],0x0
  428104:	xchg   BYTE PTR [edi+0x2b],dh
  428107:	(bad)  
  428108:	jmp    0x475a:0xcf1c237c
  42810f:	add    al,0x9d
  428111:	add    dl,BYTE PTR [ebx]
  428113:	ins    BYTE PTR es:[edi],dx
  428114:	ins    DWORD PTR es:[edi],dx
  428115:	ret    0x55a2
  428118:	retf   0x3b42
  42811b:	inc    edx
  42811c:	cdq    
  42811d:	add    bh,BYTE PTR [ecx+ecx*4]
  428120:	stc    
  428121:	mov    bl,0x37
  428123:	mov    DWORD PTR [edi-0x637b9683],ebx
  428129:	add    ch,cl
  42812b:	mov    al,0x4f
  42812d:	dec    ecx
  42812e:	add    ah,bh
  428130:	xchg   esi,eax
  428131:	ja     0x428190
  428133:	jno    0x4281a6
  428135:	mov    ebp,0x7e9ee98d
  42813a:	rcl    ch,0xac
  42813d:	dec    ebp
  42813e:	jne    0x428195
  428140:	adc    al,0x45
  428142:	sti    
  428143:	aam    0x66
  428145:	dec    ebp
  428146:	jne    0x42813d
  428148:	inc    esi
  428149:	cmp    al,0x0
  42814b:	jmp    0x31b7ceee
  428150:	adc    al,0x4b
  428152:	call   0xfb8f0992
  428157:	jb     0x4280f4
  428159:	or     BYTE PTR [ebp-0xf],0x25
  42815d:	add    BYTE PTR [eax+0x53029ee8],0x1
  428164:	pop    ss
  428165:	js     0x428167
  428167:	jmp    0x42cf816c
  42816c:	test   esi,edi
  42816e:	cdq    
  42816f:	ins    DWORD PTR es:[edi],dx
  428170:	rcl    BYTE PTR [esi-0x1e41c5db],0x9e
  428177:	scas   eax,DWORD PTR es:[edi]
  428178:	xchg   ch,dl
  42817a:	sbb    eax,0x243a3056
  42817f:	sub    cl,BYTE PTR [ebx]
  428181:	lahf   
  428182:	fnstsw WORD PTR [edx+0x53143651]
  428188:	je     0x42817a
  42818a:	data16 into 
  42818c:	add    eax,0x664cf3a7
  428191:	ret    0x432a
  428194:	inc    ebp
  428195:	lods   eax,DWORD PTR ds:[esi]
  428196:	ss (bad) 
  428199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42819a:	jmp    0x4281e8
  42819c:	lea    esp,[ecx+ecx*8]
  42819f:	loopne 0x4281a0
  4281a1:	xor    BYTE PTR [esi],0xa6
  4281a4:	(bad)  
  4281a5:	call   0xc985bf
  4281aa:	test   BYTE PTR [ebp-0x7ffbffff],al
  4281b0:	dec    ebp
  4281b1:	rol    BYTE PTR [ebp+0x730c74af],1
  4281b7:	cmp    BYTE PTR [ebx],al
  4281b9:	call   0x425770
  4281be:	dec    edi
  4281bf:	lods   eax,DWORD PTR ds:[esi]
  4281c0:	test   bh,bh
  4281c2:	call   0x5c99cc1e
  4281c7:	xchg   esi,eax
  4281c8:	idiv   bh
  4281ca:	arpl   WORD PTR [ebx-0x28],di
  4281cd:	mov    eax,DWORD PTR [eax]
  4281cf:	add    BYTE PTR [ebx-0x7c74ffa6],bh
  4281d5:	scas   al,BYTE PTR es:[edi]
  4281d6:	jp     0x8b785c53
  4281dc:	mov    bh,BYTE PTR [ebx-0x80]
  4281df:	add    BYTE PTR [ebp+0x418d0004],0x0
  4281e6:	push   ecx
  4281e7:	lea    esp,[ecx]
  4281e9:	cld    
  4281ea:	push   eax
  4281eb:	(bad)  
  4281ec:	stc    
  4281ed:	sti    
  4281ee:	dec    edi
  4281ef:	mov    al,bh
  4281f1:	fld    TBYTE PTR [edi-0x71]
  4281f4:	je     0x4281fa
  4281f6:	test   al,al
  4281f8:	call   0x50b8784d
  4281fd:	leave  
  4281fe:	mov    ebp,0x4a46e9ff
  428203:	call   0x428654
  428208:	push   ebx
  428209:	sub    al,BYTE PTR [ebx]
  42820b:	test   DWORD PTR [esp+eax*1],eax
  42820e:	xchg   edi,eax
  42820f:	ret    
  428210:	dec    esp
  428211:	div    BYTE PTR [esi]
  428213:	(bad)  
  428214:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428216:	mov    edi,0x5993f432
  42821b:	pop    ebx
  42821c:	dec    ebp
  42821d:	rol    DWORD PTR [edi],0x0
  428220:	leave  
  428221:	(bad)  
  428222:	jmp    0x4281a7
  428224:	popf   
  428225:	jne    0x428273
  428227:	jg     0x42821a
  428229:	push   ebp
  42822a:	mov    dl,0x51
  42822c:	push   edx
  42822d:	sbb    cl,0xb
  428230:	es retf 0x457a
  428234:	add    BYTE PTR [eax],al
  428236:	lea    eax,[ebx]
  428238:	add    al,0x8d
  42823a:	inc    ecx
  42823b:	cmp    eax,0xdf34e81f
  428240:	dec    esi
  428241:	sti    
  428242:	and    al,0x9e
  428244:	and    ecx,DWORD PTR [eax+eiz*1]
  428247:	sbb    bl,cl
  428249:	pop    es
  42824a:	push   ds
  42824b:	and    cl,BYTE PTR [edi-0x17]
  42824e:	(bad)  
  42824f:	pop    ecx
  428250:	(bad)  
  428251:	jmp    DWORD PTR [eax]
  428253:	mov    BYTE PTR [edi],dl
  428255:	das    
  428256:	(bad)  
  428257:	push   0x2d795c77
  42825c:	dec    esi
  42825d:	adc    eax,0xffbf4b89
  428262:	mov    ds:0xd507c8af,eax
  428267:	and    BYTE PTR gs:[eax+0x8],cl
  42826b:	leave  
  42826c:	add    edx,0x3705d495
  428272:	fnstcw WORD PTR ds:0x51016ee7
  428278:	fmul   DWORD PTR [ebx]
  42827a:	push   ss
  42827b:	sahf   
  42827c:	out    dx,eax
  42827d:	addr16 fs pop ecx
  428280:	(bad)  
  428281:	inc    DWORD PTR [ebp+0x32]
  428284:	imul   edi,edx,0x743ed54a
  42828a:	in     eax,dx
  42828b:	repnz in eax,dx
  42828d:	or     dl,BYTE PTR [eax]
  42828f:	cdq    
  428290:	ja     0x4282d6
  428292:	jns    0x4282bd
  428294:	pop    edx
  428295:	sub    al,0x1e
  428297:	xchg   edi,eax
  428298:	test   DWORD PTR [esi+0x549b0000],0x2b523c3
  4282a2:	push   ss
  4282a3:	push   cs
  4282a4:	push   ss
  4282a5:	into   
  4282a6:	(bad)  
  4282a7:	inc    DWORD PTR [edx]
  4282a9:	into   
  4282aa:	jle    0x4282fd
  4282ac:	push   es
  4282ad:	jle    0x428258
  4282af:	xlat   BYTE PTR ds:[ebx]
  4282b0:	leave  
  4282b1:	inc    edi
  4282b2:	cld    
  4282b3:	call   FWORD PTR [ebx]
  4282b5:	mov    ebp,0x1e0dbd8
  4282ba:	jmp    0x83d677c2
  4282bf:	push   ecx
  4282c0:	(bad)  
  4282c1:	jge    0x4282ec
  4282c3:	xlat   BYTE PTR ds:[ebx]
  4282c4:	mov    ch,0x5a
  4282c6:	adc    DWORD PTR [edx-0x3a],edx
  4282c9:	inc    esi
  4282ca:	mov    edi,0x4be11f3
  4282cf:	lock push 0xffffffb0
  4282d2:	inc    ecx
  4282d3:	clc    
  4282d4:	xor    al,0xa8
  4282d7:	add    edi,DWORD PTR [edx+0x2b]
  4282da:	inc    di
  4282dc:	xchg   ecx,eax
  4282dd:	ret    
  4282de:	xchg   ecx,eax
  4282df:	push   edx
  4282e0:	mov    al,0x52
  4282e2:	test   ebx,0x5be8dc92
  4282e8:	cmp    eax,0x203e8d6
  4282ed:	ffreep st(4)
  4282ef:	idiv   DWORD PTR [edx-0x7f]
  4282f2:	inc    BYTE PTR [ebx]
  4282f4:	call   0xa312ebe8
  4282f9:	add    BYTE PTR [ebx+ebp*8+0x67],bh
  4282fd:	iret   
  4282fe:	(bad)  
  4282ff:	repz add BYTE PTR [eax],al
  428302:	push   edi
  428303:	iret   
  428304:	or     al,0xf4
  428306:	cmp    dh,BYTE PTR [edi+0x599d0415]
  42830c:	loopne 0x42838c
  42830e:	leave  
  42830f:	push   ds
  428310:	icebp  
  428311:	pop    ebx
  428312:	push   edi
  428313:	dec    eax
  428314:	ret    0x1a51
  428317:	iret   
  428318:	add    al,0x0
  42831a:	es or  eax,0x88ac100
  428320:	cli    
  428321:	scas   al,BYTE PTR es:[edi]
  428322:	push   edi
  428323:	pop    esi
  428324:	sub    esp,edi
  428326:	ins    BYTE PTR es:[edi],dx
  428327:	dec    ecx
  428328:	lea    edx,ds:0xfbe7eeb5
  42832e:	jnp    0x428378
  428330:	sti    
  428331:	bound  esp,QWORD PTR [eax-0x57]
  428334:	pop    ecx
  428335:	and    dh,BYTE PTR [eax+0x5f]
  428338:	pop    ebp
  428339:	stos   DWORD PTR es:[edi],eax
  42833a:	popf   
  42833b:	add    dl,BYTE PTR [edx+0x1e]
  42833e:	pusha  
  42833f:	dec    edx
  428340:	(bad)  
  428341:	not    dh
  428343:	pop    ebp
  428344:	lods   eax,DWORD PTR ds:[esi]
  428345:	fs ins BYTE PTR es:[edi],dx
  428347:	dec    ecx
  428348:	(bad)  
  428349:	(bad)  
  42834a:	mov    dh,0x5d
  42834c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42834d:	push   esp
  42834e:	ins    BYTE PTR es:[edi],dx
  42834f:	dec    ecx
  428350:	lea    esp,[esi-0x23054d6a]
  428356:	push   esi
  428357:	hlt    
  428358:	aas    
  428359:	jmp    0x6c464c87
  42835e:	dec    esp
  42835f:	into   
  428360:	add    dl,BYTE PTR [esi-0x4601013]
  428366:	add    BYTE PTR [eax],al
  428368:	pop    esi
  428369:	inc    ebp
  42836a:	pop    edx
  42836b:	mov    edi,0xe1b1f9e1
  428370:	inc    edi
  428371:	rol    DWORD PTR [edi],1
  428373:	mov    al,ds:0xb38cf953
  428378:	xchg   BYTE PTR [edi+edi*8+0x6b],bl
  42837c:	sub    edi,ebp
  42837e:	test   BYTE PTR [eax],ah
  428380:	dec    edx
  428381:	add    DWORD PTR [esi],ebp
  428383:	sub    eax,edi
  428385:	mov    edi,0xb0a53886
  42838a:	xchg   BYTE PTR [ebp+0x75],dl
  42838d:	cli    
  42838e:	mov    bh,bh
  428390:	popf   
  428391:	xchg   ecx,eax
  428392:	jo     0x42837e
  428394:	popf   
  428395:	xchg   ecx,eax
  428396:	inc    eax
  428397:	add    BYTE PTR [ebp-0x3a],al
  42839a:	push   eax
  42839b:	or     al,0x3b
  42839d:	mov    ds:0x2d0685be,al
  4283a2:	sbb    cl,BYTE PTR [ebx-0x3ecdb943]
  4283a8:	mov    bl,0x52
  4283aa:	and    cl,al
  4283ac:	inc    edx
  4283ae:	push   es
  4283af:	inc    edx
  4283b0:	and    eax,0xb6cffa8b
  4283b5:	mov    bl,0x73
  4283b7:	and    al,0xd0
  4283b9:	(bad)  
  4283ba:	cs call ecx
  4283bd:	lock or eax,0xc47df440
  4283c3:	or     al,0x1f
  4283c5:	(bad)  
  4283c6:	jp     0x4283ef
  4283c8:	les    esi,FWORD PTR [eax+0x1]
  4283cb:	pop    esi
  4283cc:	add    BYTE PTR [eax],al
  4283ce:	jbe    0x428419
  4283d0:	sti    
  4283d1:	push   esp
  4283d2:	aas    
  4283d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283d4:	push   eax
  4283d5:	push   ecx
  4283d6:	fld    TBYTE PTR [edx+0x49]
  4283d9:	add    eax,DWORD PTR [edi-0x58]
  4283dc:	addr16 push esi
  4283de:	lock push eax
  4283e0:	dec    eax
  4283e1:	dec    ecx
  4283e2:	loopne 0x4283dd
  4283e4:	sub    eax,eax
  4283e6:	fstp   QWORD PTR [edx-0x3a7c0000]
  4283ec:	outs   dx,DWORD PTR ds:[esi]
  4283ed:	sbb    BYTE PTR [edi+0x7c708cfe],ch
  4283f3:	mov    DWORD PTR [edi],0xffb82183
  4283f9:	push   edx
  4283fa:	adc    eax,edi
  4283fc:	mov    eax,0x758c
  428401:	lea    ecx,[eax+ebp*8]
  428404:	dec    edx
  428405:	push   DWORD PTR [ecx-0x5c]
  428408:	or     DWORD PTR [eax+0x44],eax
  42840b:	leave  
  42840c:	cmp    eax,0x73bec10c
  428411:	adc    bl,BYTE PTR [ebp-0x32f82dd4]
  428417:	inc    ecx
  428418:	fwait
  428419:	cmp    eax,0x457d3d33
  42841e:	and    eax,0x1407c1d1
  428423:	pop    ss
  428424:	push   eax
  428425:	dec    edi
  428426:	sbb    ch,BYTE PTR [edi]
  428428:	dec    edi
  428429:	push   cs
  42842a:	pop    ebp
  42842b:	pop    ecx
  42842c:	jle    0x4284ab
  42842e:	add    eax,0x4d765a
  428433:	add    BYTE PTR [ebp-0x6aa7efc],dl
  428439:	out    dx,al
  42843a:	clc    
  42843b:	jle    0x4284b5
  42843d:	jge    0x428443
  42843f:	push   0xffff4ead
  428444:	ja     0x42849b
  428446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428447:	out    0xe1,eax
  428449:	outs   dx,DWORD PTR ds:[esi]
  42844a:	dec    edx
  42844b:	sti    
  42844c:	(bad)  
  42844d:	sbb    DWORD PTR [edi+0x3f],edx
  428450:	or     ebp,edx
  428452:	fdivr  st,st(7)
  428454:	ret    0xd983
  428457:	add    edx,DWORD PTR [ebp-0x19]
  42845a:	es call 0xfb8ca44d
  428460:	and    DWORD PTR [edx],ebx
  428462:	fsub   DWORD PTR [esi+edx*1]
  428465:	xchg   edi,eax
  428466:	dec    ebx
  428467:	xchg   eax,esi
  428469:	adc    DWORD PTR [edi+0x4d],esi
  42846c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42846d:	test   BYTE PTR [ebp+0x49bf29e7],dh
  428473:	sti    
  428474:	sbb    DWORD PTR [ecx],ebx
  428476:	fcom   DWORD PTR [eax]
  428478:	not    WORD PTR es:[edx+0x7]
  42847d:	push   esi
  42847e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42847f:	mov    eax,ss
  428481:	push   ecx
  428482:	push   edi
  428483:	mov    ecx,0x864a4b44
  428488:	jne    0x4284de
  42848a:	fdiv   st,st(7)
  42848c:	inc    ebp
  42848d:	add    dh,BYTE PTR [ebx+0x6f43470f]
  428493:	inc    edx
  428494:	out    0xa7,al
  428496:	xor    bh,BYTE PTR ds:0xfdfb0000
  42849c:	call   0x6df05255
  4284a1:	fistp  QWORD PTR [esi-0x16]
  4284a4:	adc    dh,BYTE PTR [edi-0x299bb5e5]
  4284aa:	ret    0x5fac
  4284ad:	xlat   BYTE PTR ds:[ebx]
  4284ae:	mov    esi,0xf6f8a1f2
  4284b3:	out    dx,eax
  4284b4:	sub    BYTE PTR [edx+ebx*1],al
  4284b7:	mov    ebp,0xfa5e0aec
  4284bc:	adc    cl,BYTE PTR [edx]
  4284be:	fistp  QWORD PTR [ebp+0x759c23cc]
  4284c4:	repnz pop es
  4284c6:	sbb    bh,ah
  4284c8:	adc    eax,0xd51e517d
  4284cd:	mov    ch,bl
  4284cf:	int    0xb4
  4284d1:	fxch   st(2)
  4284d3:	mov    dl,0x59
  4284d5:	clc    
  4284d6:	xchg   edx,eax
  4284d7:	out    dx,eax
  4284d8:	test   al,0x3
  4284da:	js     0x4284dc
  4284dc:	call   0xf81021e4
  4284e1:	adc    edx,edx
  4284e3:	inc    edx
  4284e4:	mov    ch,0x27
  4284e6:	lea    eax,[ebx-0x24]
  4284e9:	push   ebx
  4284ea:	stos   DWORD PTR es:[edi],eax
  4284eb:	ret    0x79e8
  4284ee:	push   edx
  4284ef:	faddp  st(1),st
  4284f1:	lods   eax,DWORD PTR ds:[esi]
  4284f2:	jmp    0xad8444d2
  4284f7:	add    bl,BYTE PTR [esi-0x38]
  4284fa:	jp     0x4284f9
  4284fc:	mov    eax,ds:0xec0000eb
  428501:	or     DWORD PTR [ebx],ebp
  428503:	(bad)  
  428504:	mov    esi,0x215ae6e2
  428509:	fcos   
  42850b:	cmc    
  42850c:	push   edx
  42850d:	xor    cl,BYTE PTR [esi]
  42850f:	test   eax,0xd2bff09e
  428514:	jnp    0x428553
  428516:	xor    bl,dh
  428518:	dec    edx
  428519:	mov    ds:0xc1a1290e,al
  42851e:	and    ecx,ebp
  428520:	push   esi
  428521:	add    BYTE PTR [eax],0xe9
  428524:	sahf   
  428525:	sub    dl,BYTE PTR [edi]
  428527:	std    
  428528:	sar    BYTE PTR ds:0x3522b987,1
  42852e:	je     0x4285a5
  428530:	xchg   esp,eax
  428531:	pop    ds
  428532:	xor    bh,bh
  428534:	fiadd  WORD PTR [ecx+0x69]
  428537:	loope  0x42858a
  428539:	mov    dh,0x23
  42853b:	leave  
  42853c:	xor    BYTE PTR ds:0xe5e563cf,bh
  428542:	das    
  428543:	adc    DWORD PTR [ecx],esp
  428545:	add    eax,DWORD PTR [eax]
  428547:	jmp    0x647e41b3
  42854c:	jmp    0x42854f
  42854e:	jmpw   0xf5b
  428552:	inc    edx
  428553:	and    DWORD PTR [eax+0x17],ebx
  428556:	xor    al,0xf7
  428558:	fiadd  WORD PTR [ecx-0x7a]
  42855b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42855c:	cmp    dl,0x7e
  42855f:	and    eax,0xbdc986c1
  428564:	add    BYTE PTR [eax],al
  428566:	lock mov ds:0x41a6bc7e,eax
  42856c:	jne    0x428514
  42856e:	cdq    
  42856f:	jae    0x4285b6
  428571:	loopne 0x4285eb
  428573:	mov    BYTE PTR [ebp-0xf],dl
  428576:	add    BYTE PTR [edx-0x22],0xf1
  42857a:	js     0x428584
  42857c:	mov    esi,0xb2a11e6
  428581:	push   esi
  428582:	sahf   
  428583:	sub    al,BYTE PTR [edx-0x92f7700]
  428589:	mov    BYTE PTR [eax],bh
  42858b:	jmp    0xdec810b3
  428590:	cdq    
  428591:	aad    0x42
  428593:	into   
  428594:	dec    edi
  428595:	push   ecx
  428596:	mov    ecx,edi
  428598:	retf   0x2a0f
  42859b:	dec    ecx
  42859c:	pop    ds
  42859d:	xor    bh,al
  42859f:	leave  
  4285a0:	or     ecx,DWORD PTR [eax-0x38]
  4285a3:	cmp    BYTE PTR [ebx+0x74],al
  4285a6:	inc    edi
  4285a7:	pop    ebp
  4285a8:	jnp    0x4285aa
  4285aa:	xor    al,0x5
  4285ac:	bound  eax,QWORD PTR [eax]
  4285ae:	mov    ebx,0xea3414cf
  4285b3:	inc    esp
  4285b4:	sti    
  4285b5:	cmp    BYTE PTR [eax],0x41
  4285b8:	loop   0x4285be
  4285ba:	call   0x1f51:0x7f4265bd
  4285c1:	sub    BYTE PTR [edi-0x3a],bh
  4285c4:	out    0x6d,eax
  4285c6:	sub    DWORD PTR ds:0x8b00,eax
  4285cc:	sub    dl,0x13
  4285cf:	push   ebx
  4285d0:	mov    edx,0x865f165e
  4285d5:	push   es
  4285d6:	push   0xfb3cb400
  4285db:	out    0x88,eax
  4285dd:	sbb    BYTE PTR [eax],al
  4285df:	add    BYTE PTR [eax-0x3b],cl
  4285e2:	jae    0x4285eb
  4285e4:	pop    ss
  4285e5:	add    al,0xe9
  4285e7:	add    BYTE PTR [ebx-0x32],ah
  4285ea:	not    BYTE PTR [esi+0x4c]
  4285ed:	dec    esp
  4285ee:	xor    bh,dh
  4285f0:	rol    DWORD PTR [edx-0x2c22ffe5],cl
  4285f6:	cmc    
  4285f7:	inc    ebx
  4285f9:	js     0x42857d
  4285fb:	in     al,dx
  4285fc:	inc    ebp
  4285fd:	jbe    0x428581
  4285ff:	lock popf 
  428601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428602:	sar    ebx,0xcd
  428605:	ja     0x4285e0
  428607:	std    
  428608:	arpl   WORD PTR [edi+0x4b],bp
  42860b:	add    al,0x9c
  42860d:	sub    edi,edi
  42860f:	cli    
  428610:	mov    al,0xfd
  428612:	out    dx,eax
  428613:	aas    
  428614:	popf   
  428615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428616:	ds je  0x4285a8
  428619:	mov    ah,0xc0
  42861b:	sti    
  42861c:	sbb    BYTE PTR [edx-0x30],ch
  42861f:	outs   dx,BYTE PTR es:[esi]
  428621:	(bad)  
  428622:	fimul  WORD PTR [eax-0x3d85185f]
  428628:	ret    
  428629:	add    dh,dh
  42862b:	jae    0x4286a8
  42862d:	xor    BYTE PTR [esi+0x1e000008],cl
  428633:	jae    0x42864c
  428635:	je     0x4285cf
  428637:	lods   al,BYTE PTR ds:[esi]
  428638:	dec    esp
  428639:	pop    esp
  42863a:	nop
  42863b:	das    
  42863c:	fnstsw WORD PTR [ebx+0x64]
  42863f:	pop    es
  428640:	jge    0x42864a
  428642:	push   ds
  428643:	push   0x2
  428645:	bound  ebx,QWORD PTR [esi]
  428647:	push   edx
  428648:	push   DWORD PTR [ecx+eax*1-0x6b]
  42864c:	cld    
  42864d:	gs gs loope 0x4286ac
  428651:	dec    esi
  428652:	das    
  428653:	mov    ecx,0x6ce45a46
  428658:	mov    cl,0x86
  42865a:	mov    ecx,0x1cf85fac
  42865f:	into   
  428660:	iret   
  428661:	(bad)  
  428662:	mov    edx,0x4a51b229
  428667:	sbb    al,0x2b
  428669:	push   0xffc3b4e1
  42866e:	dec    edi
  42866f:	mov    cl,0xa7
  428671:	and    esi,DWORD PTR [edx-0x526c0f08]
  428677:	imul   edi,edi,0xcd02e188
  42867d:	repz retf 
  42867f:	inc    ebx
  428680:	jmp    0x1a03:0xe901ba7f
  428687:	cmc    
  428688:	pop    esp
  428689:	hlt    
  42868a:	stos   BYTE PTR es:[edi],al
  42868b:	add    dl,BYTE PTR [esi-0x5c04c4d]
  428691:	xor    DWORD PTR [edx+0xf37d43],edx
  428697:	add    dl,ah
  428699:	aas    
  42869a:	jne    0x4286bb
  42869c:	mov    cl,0xc7
  42869e:	loope  0x4286d1
  4286a0:	mov    al,BYTE PTR [ebx+0x54]
  4286a3:	push   eax
  4286a4:	jb     0x4286e1
  4286a6:	pop    esp
  4286a7:	(bad)  
  4286a8:	pop    esp
  4286a9:	mov    BYTE PTR [ebx+edi*8],0x9d
  4286ad:	sub    ebx,esi
  4286af:	add    al,0x9d
  4286b1:	add    cl,BYTE PTR [edi-0x2f]
  4286b4:	sub    DWORD PTR [esi-0x768adbf4],esi
  4286ba:	or     eax,0x4589a520
  4286bf:	and    BYTE PTR [ecx-0x98b7ad6],ch
  4286c5:	ds (bad) 
  4286c7:	jmp    DWORD PTR [edx-0x75]
  4286ca:	mov    ds:0xd966b07e,eax
  4286cf:	ret    
  4286d0:	loop   0x4286a0
  4286d2:	imul   edi,DWORD PTR [edi+0x4b18e27e],0x49
  4286d9:	out    0xc8,al
  4286db:	dec    edx
  4286dc:	out    dx,eax
  4286dd:	test   BYTE PTR [ecx],ch
  4286df:	cli    
  4286e0:	push   ds
  4286e1:	pop    ebx
  4286e2:	jmp    0xadce23ea
  4286e7:	pop    ds
  4286e8:	mov    ebx,edi
  4286ea:	and    eax,0x28f39ed0
  4286ef:	pop    esi
  4286f0:	cwde   
  4286f1:	sub    ah,BYTE PTR [edx+0x3e970d]
  4286f7:	pusha  
  4286f8:	push   edx
  4286f9:	loop   0x428712
  4286fb:	repnz add BYTE PTR [eax],al
  4286fe:	jecxz  0x428709
  428700:	test   BYTE PTR [edi-0x62],ah
  428703:	add    al,BYTE PTR [eax]
  428705:	xchg   ebx,eax
  428706:	jp     0x4286d5
  428708:	mov    WORD PTR [ebp+0x5c4fe692],gs
  42870e:	sub    ah,dl
  428710:	pop    ds
  428711:	cdq    
  428712:	xlat   BYTE PTR ds:[ebx]
  428713:	mov    dh,0x23
  428715:	leave  
  428716:	out    0x50,eax
  428718:	test   DWORD PTR [ecx],ebp
  42871a:	push   edi
  42871b:	adc    BYTE PTR [esi+0x68029ee9],0xad
  428722:	rol    dl,0xff
  428725:	imul   edi,DWORD PTR [ecx+0x39],0xbe7d5d8d
  42872c:	out    0x6,eax
  42872e:	dec    edi
  42872f:	cmp    al,0xfb
  428731:	jb     0x428712
  428733:	sar    dl,cl
  428735:	aam    0x16
  428737:	pop    ss
  428738:	inc    eax
  428739:	jmp    0x1664dc9
  42873e:	push   ecx
  42873f:	cmp    DWORD PTR ds:0xfffe0b6d,edx
  428745:	adc    cl,bh
  428747:	mov    ?,WORD PTR [ebp+ecx*8-0x66]
  42874b:	(bad)  
  42874d:	sub    eax,0x74fb396e
  428752:	sbb    eax,0x9ee877e7
  428757:	add    ch,al
  428759:	dec    esp
  42875a:	addr16 cmp ebx,edi
  42875d:	fisubr WORD PTR ds:0x1123c7
  428763:	add    BYTE PTR [ecx],cl
  428765:	or     DWORD PTR [ebx+0x4fe89aa5],esi
  42876b:	out    0xd,al
  42876d:	(bad)  
  42876e:	and    edx,DWORD PTR [edi]
  428770:	icebp  
  428771:	mov    es,WORD PTR [eax+eax*1+0x8290]
  428778:	test   BYTE PTR [ecx-0x74],dh
  42877b:	test   BYTE PTR [eax+0x740000be],ah
  428781:	jno    0x428705
  428783:	mov    BYTE PTR [edi+ebx*2+0x39],0x5b
  428788:	or     DWORD PTR [ebx+0x1851024],ecx
  42878e:	add    al,ch
  428790:	fild   DWORD PTR [ebp-0x7]
  428793:	push   edi
  428795:	ret    0x8517
  428798:	test   BYTE PTR [eax+0x1b],cl
  42879b:	call   eax
  42879d:	sbb    eax,0xcb838b14
  4287a2:	jae    0x4287c8
  4287a4:	cwde   
  4287a5:	jbe    0x42880a
  4287a7:	les    ebp,FWORD PTR [edi+0x4669fb41]
  4287ad:	fld1   
  4287af:	cdq    
  4287b0:	pop    ebx
  4287b1:	retf   0xc083
  4287b4:	pusha  
  4287b5:	cmp    eax,0x3ba044c1
  4287ba:	add    BYTE PTR [ebx],dh
  4287bc:	das    
  4287bd:	retf   0x2473
  4287c0:	in     al,dx
  4287c1:	fsubr  DWORD PTR [edi+0x4aca3a39]
  4287c7:	inc    DWORD PTR [eax]
  4287c9:	add    BYTE PTR [eax-0xe00ec1e],dl
  4287cf:	mov    al,0xf
  4287d1:	inc    eax
  4287d2:	hlt    
  4287d3:	mov    esi,0x69eb2443
  4287d8:	pop    ecx
  4287d9:	pop    ebx
  4287da:	dec    edi
  4287db:	fcomp  QWORD PTR [ebx+eax*8-0x4f]
  4287df:	mov    edi,0xc92083eb
  4287e4:	sub    ah,0x38
  4287e7:	pop    es
  4287e8:	add    BYTE PTR [eax],al
  4287ea:	div    DWORD PTR [edx-0x7e]
  4287ed:	jne    0x42878c
  4287ef:	and    esi,DWORD PTR [eax+0x483b30fa]
  4287f5:	jne    0x428788
  4287f7:	popf   
  4287f8:	dec    eax
  4287f9:	adc    eax,0xffbf5a39
  4287fe:	and    eax,0x20101b6e
  428803:	jmp    0xffff:0x2aac83f7
  42880a:	jb     0x428873
  42880c:	out    dx,eax
  42880d:	push   DWORD PTR [edx+0x2a]
  428810:	out    dx,eax
  428811:	or     ah,BYTE PTR [eax]
  428813:	es (bad) 
  428815:	call   FWORD PTR [ebp+0x210b50ae]
  42881b:	ds (bad) 
  42881d:	call   FWORD PTR [ebp-0x65fff758]
  428823:	mov    ds:0x299d0053,eax
  428828:	jle    0x4288a4
  42882a:	mov    eax,ds:0x83f229
  42882f:	add    BYTE PTR [edx+ebp*1-0x1],al
  428833:	push   DWORD PTR ds:0x22f9bb50
  428839:	scas   al,BYTE PTR es:[edi]
  42883a:	inc    ebx
  42883b:	or     esp,DWORD PTR [ecx]
  42883d:	sahf   
  42883e:	add    al,0x0
  428840:	popf   
  428841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428842:	mov    edi,0x4319bd23
  428847:	adc    eax,0xffbf3819
  42884c:	test   BYTE PTR [ebx],dl
  42884e:	jns    0x428804
  428850:	mov    ecx,0x9d00046d
  428855:	icebp  
  428856:	pop    ebx
  428857:	push   esi
  428858:	or     eax,0x52664385
  42885d:	scas   al,BYTE PTR es:[edi]
  42885e:	iret   
  42885f:	and    ecx,DWORD PTR [ecx+0x2d4a5c11]
  428865:	lods   eax,DWORD PTR ds:[esi]
  428866:	inc    edx
  428867:	lea    ebx,[ecx]
  428869:	add    ecx,DWORD PTR ds:0xe9029c04
  42886f:	pop    ebx
  428870:	push   cs
  428871:	ds push edx
  428873:	inc    edi
  428874:	xchg   esi,eax
  428875:	jae    0x42881c
  428877:	pop    ds
  428878:	jge    0x42884c
  42887a:	icebp  
  42887b:	mov    fs,ecx
  42887d:	out    0x2,al
  42887f:	mov    ah,0xa7
  428881:	jae    0x428830
  428883:	pop    ds
  428884:	mov    bh,0xd2
  428886:	pop    ebp
  428887:	ds in  eax,dx
  428889:	lea    ebp,[ebp+0x20]
  42888c:	lea    eax,[ecx]
  42888e:	jmp    0x6dd05596
  428893:	and    BYTE PTR [eax],al
  428895:	add    BYTE PTR [ecx+0x2],dl
  428898:	jmp    0xc2eb55a0
  42889d:	stos   BYTE PTR es:[edi],al
  42889e:	sub    DWORD PTR [esi+0x763aabc4],edi
  4288a4:	jne    0x4288eb
  4288a6:	inc    esi
  4288a7:	jg     0x4288ce
  4288a9:	in     al,dx
  4288aa:	sbb    DWORD PTR [edx+0x63],eax
  4288ad:	shl    BYTE PTR [ebx],cl
  4288af:	(bad)
  4288b2:	ins    DWORD PTR es:[edi],dx
  4288b3:	cmp    ebx,DWORD PTR [ecx+0x0]
  4288b6:	and    al,BYTE PTR [ebx+0x39]
  4288b9:	adc    esp,DWORD PTR [esi]
  4288bb:	ror    DWORD PTR [esi+0x2],cl
  4288be:	add    eax,0x16466122
  4288c3:	xchg   BYTE PTR [ecx+0x348765cf],ch
  4288c9:	clc    
  4288ca:	retf   
  4288cb:	xor    ebx,DWORD PTR ds:0xdaf97cb2
  4288d1:	iret   
  4288d2:	popa   
  4288d3:	lea    ebp,ds:0x89d25d20
  4288d9:	lock bound edx,QWORD PTR [eax]
  4288dc:	sub    DWORD PTR [ebx+eax*2],eax
  4288df:	or     dl,BYTE PTR [ecx]
  4288e1:	cmp    BYTE PTR [edx],bl
  4288e3:	ret    0xe8ff
  4288e6:	inc    ebp
  4288e7:	mov    BYTE PTR [ebx+0x21],0x9
  4288eb:	and    eax,edi
  4288ed:	and    DWORD PTR [ebx+0x37],esp
  4288f0:	das    
  4288f1:	xor    al,dl
  4288f3:	mov    DWORD PTR [eax-0x1f],ecx
  4288f6:	clc    
  4288f7:	lea    esi,[ebp+eax*1+0x0]
  4288fb:	add    BYTE PTR [ecx-0x9b93845],dh
  428901:	popf   
  428902:	jge    0x428943
  428904:	fstp   TBYTE PTR [esi-0x40]
  428907:	mov    ebp,0x5743d74
  42890c:	jne    0x428895
  42890e:	inc    esp
  42890f:	int    0x3a
  428911:	cmp    eax,0xca86c574
  428916:	push   edx
  428917:	sbb    DWORD PTR [edx+ebp*1+0x3ddb7188],0xffffffe8
  42891f:	js     0x428986
  428921:	cmp    al,0xfb
  428923:	jb     0x428937
  428925:	out    0xf,al
  428927:	xchg   esi,eax
  428928:	add    cl,dl
  42892a:	xchg   BYTE PTR [esi*8+0x54e90c77],al
  428931:	cmp    ch,BYTE PTR [ecx-0x17]
  428934:	jno    0x42893a
  428936:	fsub   DWORD PTR [edx+0x61]
  428939:	cmp    bh,dl
  42893b:	hlt    
  42893c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42893d:	adc    al,0x40
  42893f:	jmp    0x72464ddb
  428944:	sar    DWORD PTR [ecx+0x52],cl
  428947:	bound  ebp,QWORD PTR [esi+0x2a]
  42894a:	psubsw mm3,QWORD PTR [esi-0x42d20dfe]
  428951:	or     al,BYTE PTR [ecx]
  428953:	adc    eax,0xcfe7d3f3
  428958:	xchg   esi,eax
  428959:	cmp    al,0xfb
  42895b:	bound  esp,QWORD PTR [ebx+0xbddc]
  428961:	add    al,cl
  428963:	add    eax,0xbb558b4e
  428968:	cmp    eax,0xd338fb04
  42896d:	mov    esi,DWORD PTR [esi+edi*8-0x7c]
  428971:	rcr    al,0x38
  428974:	jp     0x42896e
  428976:	lds    ecx,FWORD PTR [eax+0x5]
  428979:	jmp    FWORD PTR [ecx-0x4bbff24b]
  42897f:	add    BYTE PTR [esi+0x4],0xe3
  428983:	pusha  
  428984:	mov    edx,0x8439448b
  428989:	ror    BYTE PTR [eax+0x2e],0x7a
  42898d:	clc    
  42898e:	jne    0x4289d9
  428990:	add    eax,0x1048a3d
  428995:	or     BYTE PTR [eax],0x2
  428998:	sub    eax,eax
  42899a:	mov    bh,0x13
  42899c:	rol    BYTE PTR [eax-0x49],0x69
  4289a0:	sub    ah,0x35
  4289a3:	and    BYTE PTR [ebp-0x4],0x44
  4289a7:	mov    al,0x44
  4289a9:	cld    
  4289aa:	and    al,0xbe
  4289ac:	je     0x4289ba
  4289ae:	sbb    al,0x4
  4289b0:	inc    esp
  4289b1:	add    BYTE PTR [ebx+ebx*2-0x5],al
  4289b5:	dec    cl
  4289b7:	not    BYTE PTR ss:0x3b27a8
  4289be:	mov    ecx,0x8f0777c5
  4289c3:	js     0x4289bc
  4289c5:	test   DWORD PTR [eax],eax
  4289c7:	add    BYTE PTR [eax+ecx*2-0x3],al
  4289cb:	xor    dh,BYTE PTR [esp+edi*8]
  4289ce:	mov    ecx,0x8266f408
  4289d3:	icebp  
  4289d4:	or     al,0x32
  4289d6:	sti    
  4289d7:	inc    DWORD PTR [edi+eax*8]
  4289da:	inc    ebx
  4289db:	and    al,0x9d
  4289dd:	and    edi,esi
  4289df:	jae    0x42897c
  4289e1:	icebp  
  4289e2:	pop    ebx
  4289e3:	mov    al,ds:0x87448192
  4289e8:	fistp  DWORD PTR [eax]
  4289ea:	ds add al,0x9d
  4289ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289ee:	mov    esp,0x5b20da07
  4289f3:	xchg   DWORD PTR [ebp+0x2b],ebx
  4289f6:	jp     0x4289b8
  4289f8:	sub    DWORD PTR ds:0xd04d0878,esi
  4289fe:	lods   eax,DWORD PTR ds:[esi]
  4289ff:	pop    es
  428a00:	push   ds
  428a01:	inc    ecx
  428a02:	idiv   edi
  428a04:	fwait
  428a05:	js     0x4289fa
  428a07:	cli    
  428a08:	test   al,0x69
  428a0a:	lock aas 
  428a0c:	popf   
  428a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a0e:	xor    al,0xe9
  428a10:	out    dx,al
  428a11:	call   0xb5138559
  428a16:	push   edx
  428a17:	push   ecx
  428a18:	retf   
  428a19:	pop    esp
  428a1a:	dec    ebp
  428a1b:	push   edx
  428a1c:	shl    DWORD PTR [edi-0x27],cl
  428a1f:	dec    al
  428a21:	outs   dx,DWORD PTR ds:[esi]
  428a22:	lods   eax,DWORD PTR ds:[esi]
  428a23:	gs pop edx
  428a25:	cwde   
  428a26:	inc    esp
  428a27:	adc    eax,0xffbf5021
  428a2c:	add    BYTE PTR [eax],al
  428a2e:	xchg   edi,esp
  428a30:	retf   0x8006
  428a33:	push   edx
  428a34:	inc    BYTE PTR [eax]
  428a36:	sbb    eax,0x5d2e07d6
  428a3b:	push   ebp
  428a3c:	clc    
  428a3d:	push   edx
  428a3e:	mov    ch,0x49
  428a40:	pop    ss
  428a41:	inc    eax
  428a42:	popf   
  428a43:	shl    DWORD PTR [ebx+0x18],0x5d
  428a47:	sub    DWORD PTR [edi],esp
  428a49:	push   ebx
  428a4a:	adc    bh,BYTE PTR [ecx+0x3f]
  428a4d:	xchg   DWORD PTR ds:0x99754135,eax
  428a53:	cmp    edi,DWORD PTR [edi]
  428a55:	out    0x94,eax
  428a57:	add    dh,BYTE PTR [esi]
  428a59:	inc    ebx
  428a5a:	push   0xa9199a06
  428a5f:	adc    ebp,DWORD PTR [ecx]
  428a61:	add    al,0x1a
  428a63:	pop    ebx
  428a64:	pop    esi
  428a65:	or     edx,DWORD PTR [edx+0x6e10fc58]
  428a6b:	aaa    
  428a6c:	sbb    DWORD PTR [ebx+edi*2],ecx
  428a6f:	inc    edx
  428a70:	push   cs
  428a71:	jecxz  0x428ad7
  428a73:	dec    ecx
  428a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a75:	or     al,0x9d
  428a77:	test   DWORD PTR [edi+edi*1-0x264d2fb4],esi
  428a7e:	dec    esp
  428a7f:	sar    BYTE PTR [edx-0x46c8b02a],1
  428a85:	(bad)  
  428a87:	mov    ebp,0xcf9e8ef4
  428a8c:	cmp    esp,edx
  428a8e:	mov    ds:0x1931d3,al
  428a93:	add    ch,bl
  428a95:	adc    ebp,DWORD PTR [ecx-0xb524bfd]
  428a9b:	mov    eax,0x3f93f963
  428aa0:	icebp  
  428aa1:	dec    eax
  428aa2:	mov    ebx,0x7f03f8d9
  428aa7:	push   es
  428aa8:	out    dx,eax
  428aa9:	ror    BYTE PTR [esi-0x352a9f3],1
  428aaf:	inc    edx
  428ab0:	mov    al,0x7e
  428ab2:	fcmovnb st,st(3)
  428ab4:	inc    edx
  428ab5:	jle    0x428ae0
  428ab7:	(bad)  
  428ab8:	loopne 0x428af0
  428aba:	pop    ebp
  428abb:	or     al,0x1a
  428abd:	or     bh,BYTE PTR [ecx]
  428abf:	inc    ebx
  428ac0:	int3   
  428ac1:	or     bh,BYTE PTR [esi-0x1f3ae591]
  428ac7:	mov    WORD PTR [edx+ecx*1+0x79],ds
  428acb:	add    al,0xfa
  428acd:	pop    ebp
  428ace:	adc    al,0x8f
  428ad0:	stc    
  428ad1:	add    BYTE PTR [eax],0xc5
  428ad4:	mov    ds:0xd3e8fffe,al
  428ad9:	shr    BYTE PTR ds:0x153bd7c2,1
  428adf:	loope  0x428a71
  428ae1:	ret    0x69ff
  428ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ae5:	cmp    esi,DWORD PTR [ebp+ecx*1+0x49]
  428ae9:	adc    dh,BYTE PTR [eax+esi*8+0x23]
  428aed:	dec    ebx
  428aee:	call   0xfb794f7c
  428af3:	adc    BYTE PTR [ebx+edx*8+0xf4e7],0x40
  428afb:	cmp    al,0xfb
  428afd:	ins    DWORD PTR es:[edi],dx
  428afe:	pop    esi
  428aff:	lods   eax,DWORD PTR ds:[esi]
  428b00:	shl    DWORD PTR fs:[edx+0x13e90001],1
  428b07:	push   ebx
  428b08:	lea    ebx,[edx+ecx*8+0x37]
  428b0c:	sti    
  428b0d:	inc    esi
  428b0e:	(bad)  
  428b0f:	adc    ch,BYTE PTR [edx+0x3f]
  428b12:	fild   WORD PTR [edi+0x39dd4585]
  428b18:	sti    
  428b19:	cdq    
  428b1a:	fisttp WORD PTR [edi]
  428b1c:	nop
  428b1d:	cli    
  428b1e:	pop    esi
  428b1f:	mov    WORD PTR ss:[edx+esi*4-0x61163f86],ss
  428b27:	add    ch,al
  428b29:	ins    DWORD PTR es:[edi],dx
  428b2a:	sub    eax,0x2574fb3a
  428b2f:	pop    ds
  428b30:	idiv   esi
  428b32:	(bad)  
  428b34:	gs jmp 0x5c92cc4d
  428b3a:	and    eax,0xdce6fd27
  428b3f:	sar    dl,cl
  428b41:	hlt    
  428b42:	jmp    0x7443:0x1be94012
  428b49:	in     eax,dx
  428b4a:	dec    eax
  428b4b:	add    ecx,DWORD PTR [ebp-0xd157f00]
  428b51:	dec    DWORD PTR [ebx+0x4f]
  428b54:	dec    esi
  428b55:	jmp    ecx
  428b57:	cdq    
  428b58:	adc    DWORD PTR [eax+0x4],eax
  428b5b:	test   DWORD PTR [ebp+0x3f0000e4],eax
  428b61:	(bad)  
  428b62:	not    BYTE PTR [eax+0xc]
  428b65:	adc    ebx,DWORD PTR [edx+0x74c40bfe]
  428b6b:	or     al,0x2b
  428b6d:	outs   dx,BYTE PTR ds:[esi]
  428b6e:	add    edx,DWORD PTR [edi+0x2c]
  428b71:	jg     0x428b9e
  428b73:	add    BYTE PTR [ebp+edi*2+0x39e875c0],dh
  428b7a:	inc    esp
  428b7b:	adc    BYTE PTR [ecx-0x51048004],dh
  428b81:	ins    DWORD PTR es:[edi],dx
  428b82:	adc    DWORD PTR [eax-0x5c],ebp
  428b85:	sub    bh,bl
  428b87:	dec    DWORD PTR [ebx+0xd]
  428b8a:	enter  0x4412,0x1
  428b8e:	test   bl,0xed
  428b91:	push   edx
  428b92:	idiv   bh
  428b94:	retf   
  428b95:	scas   al,BYTE PTR es:[edi]
  428b96:	add    bl,ch
  428b98:	jbe    0x428bc9
  428b9a:	mov    ebx,0xb9c80f5e
  428b9f:	or     al,0x84
  428ba1:	dec    esp
  428ba2:	sub    ah,0xf5
  428ba5:	repnz pop ss
  428ba7:	add    DWORD PTR [ecx+eax*1+0x4b],esi
  428bab:	push   esi
  428bac:	adc    eax,edx
  428bae:	xor    al,0x7c
  428bb0:	call   0xd1cf86f4
  428bb5:	icebp  
  428bb6:	out    0x9f,eax
  428bb8:	pop    es
  428bb9:	add    DWORD PTR [eax],eax
  428bbb:	test   BYTE PTR [ebx+edx*1+0x1449684],al
  428bc2:	add    BYTE PTR [ebx+0x6c90000],al
  428bc8:	add    dh,al
  428bca:	popf   
  428bcb:	out    0x40,al
  428bcd:	add    BYTE PTR [eax-0x528abfdb],dl
  428bd3:	mov    al,0xb9
  428bd5:	or     ecx,DWORD PTR [edx]
  428bd7:	out    dx,al
  428bd8:	aaa    
  428bd9:	sti    
  428bda:	mov    BYTE PTR [ebx+0x27],bh
  428bdd:	repnz sti 
  428bdf:	arpl   WORD PTR [eax-0x78],ax
  428be2:	pop    eax
  428be3:	pop    esp
  428be4:	mov    al,BYTE PTR [ebp-0x13]
  428be7:	xchg   edx,eax
  428be8:	or     dh,BYTE PTR [ebx*4+0x26672c2b]
  428bef:	push   es
  428bf0:	cmp    BYTE PTR [ebx-0x2e],dl
  428bf3:	xor    eax,0x6d94e82f
  428bf8:	inc    ecx
  428bf9:	sti    
  428bfa:	push   ss
  428bfb:	mov    ebx,0x82ad4589
  428c00:	xor    ch,BYTE PTR [edi]
  428c02:	popf   
  428c03:	sub    eax,DWORD PTR [edx-0x5885ce0e]
  428c09:	xchg   DWORD PTR [eax-0x5a9800d5],ebx
  428c0f:	dec    edx
  428c10:	mov    edi,0x26a721ff
  428c15:	cli    
  428c16:	mov    dh,ch
  428c18:	es inc edx
  428c1a:	and    ebp,ebp
  428c1c:	aas    
  428c1d:	push   eax
  428c1e:	es adc eax,0x6985c28c
  428c24:	fwait
  428c25:	cli    
  428c26:	push   0xffffff9f
  428c28:	ds je  0x428c2b
  428c2b:	add    BYTE PTR [ebp+0x5be8899e],dh
  428c31:	add    eax,0xb7525140
  428c36:	push   es
  428c37:	mov    bh,0x3b
  428c39:	sub    edi,edi
  428c3b:	push   DWORD PTR ds:0x3afa9bcb
  428c41:	sahf   
  428c42:	ds je  0x428bd2
  428c45:	add    ah,dl
  428c47:	mov    ecx,0xc16dcb9a
  428c4c:	xchg   esi,eax
  428c4d:	int3   
  428c4e:	rol    BYTE PTR [edi-0x7335cbe9],0x58
  428c55:	xor    ebx,DWORD PTR [ebx]
  428c57:	sub    al,0xc9
  428c59:	in     eax,dx
  428c5a:	mov    edx,0xb1be1b3f
  428c5f:	fist   WORD PTR [edi+edx*8-0x61]
  428c63:	inc    edx
  428c64:	mov    eax,ds:0xf98b3c02
  428c69:	or     DWORD PTR [ebp-0x16cc1f18],0x896e29d5
  428c73:	inc    ecx
  428c74:	(bad)  
  428c75:	xor    edx,DWORD PTR [ecx+0x7a335327]
  428c7b:	xchg   ecx,eax
  428c7c:	sbb    BYTE PTR [edi],bl
  428c7e:	je     0x428cbf
  428c80:	mov    dh,0xd2
  428c82:	(bad)  
  428c83:	test   al,0xb7
  428c85:	jmp    0x428cd7
  428c87:	sbb    esi,DWORD PTR [esi]
  428c89:	add    ch,cl
  428c8b:	xchg   ebp,ebx
  428c8d:	jns    0x428cd2
  428c8f:	add    eax,0x29d0000
  428c94:	pop    esi
  428c95:	inc    esi
  428c96:	or     BYTE PTR [eax],cl
  428c98:	sub    eax,DWORD PTR [ebx*4-0x7a47503e]
  428c9f:	lock sub BYTE PTR [ebx],ch
  428ca2:	loope  0x428ce0
  428ca4:	jmp    0x9c0c69ac
  428ca9:	cmp    al,0x75
  428cab:	dec    ecx
  428cac:	cmp    BYTE PTR ds:0x2bfca866,0x1b
  428cb3:	fwait
  428cb4:	or     bh,BYTE PTR [edi]
  428cb6:	in     eax,dx
  428cb7:	test   al,0x8a
  428cb9:	mov    gs,WORD PTR ds:[edx]
  428cbc:	xchg   ecx,eax
  428cbd:	lods   eax,DWORD PTR ds:[esi]
  428cbe:	inc    edx
  428cbf:	xor    eax,DWORD PTR [eax]
  428cc1:	ins    DWORD PTR es:[edi],dx
  428cc2:	loope  0x428c72
  428cc4:	(bad)  
  428cc5:	pop    esp
  428cc6:	fs dec edi
  428cc8:	push   eax
  428cc9:	shl    ecx,1
  428ccb:	push   edi
  428ccc:	cli    
  428ccd:	fdivp  st(0),st
  428ccf:	mov    bl,0x7c
  428cd1:	mov    ebp,0x5c10ae9e
  428cd6:	in     eax,0x4e
  428cd8:	push   eax
  428cd9:	push   ebx
  428cda:	inc    edx
  428cdb:	cmp    BYTE PTR [ebx],dh
  428cdd:	rcr    DWORD PTR [ebx-0x58],1
  428ce0:	(bad)  
  428ce1:	call   0x73b6cf08
  428ce6:	outs   dx,BYTE PTR ds:[esi]
  428ce7:	add    DWORD PTR [edx-0x50],ebx
  428cea:	pop    edi
  428ceb:	int    0x86
  428ced:	lea    ebx,[ecx]
  428cef:	es call 0x52452bde
  428cf5:	mov    es,WORD PTR [eax]
  428cf7:	add    BYTE PTR [ebp-0x5ed6f0fa],dh
  428cfd:	jnp    0x428cef
  428cff:	ins    BYTE PTR es:[edi],dx
  428d00:	aad    0x2e
  428d02:	push   eax
  428d03:	scas   al,BYTE PTR es:[edi]
  428d04:	in     eax,0x2e
  428d06:	or     cl,ch
  428d08:	sahf   
  428d09:	add    bh,bl
  428d0b:	cld    
  428d0c:	mov    ds:0x15e9400d,al
  428d11:	inc    edx
  428d12:	je     0x428d00
  428d14:	daa    
  428d15:	inc    ebp
  428d16:	daa    
  428d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d18:	(bad)  
  428d19:	jnp    0x428d60
  428d1b:	inc    ecx
  428d1c:	sbb    eax,ecx
  428d1e:	in     al,0x6c
  428d20:	push   ebp
  428d21:	inc    edx
  428d22:	push   eax
  428d23:	das    
  428d24:	gs push edx
  428d26:	add    DWORD PTR [eax+0x35],esp
  428d29:	and    edi,ebx
  428d2b:	cld    
  428d2c:	push   ss
  428d2d:	add    DWORD PTR [eax-0x17],eax
  428d30:	or     eax,0x86b9cfc8
  428d35:	pop    edx
  428d36:	push   eax
  428d37:	setae  BYTE PTR [ebx+0x45]
  428d3b:	add    BYTE PTR [ebp+0x431c8592],ch
  428d41:	lock not BYTE PTR [eax+0x33]
  428d45:	sbb    dl,BYTE PTR [eax-0x7cf9fbee]
  428d4b:	test   DWORD PTR [eax-0x30000911],esp
  428d51:	mov    bl,0x89
  428d54:	leave  
  428d55:	loope  0x428db8
  428d57:	adc    DWORD PTR [ecx+0x49],esi
  428d5a:	fist   DWORD PTR [eax+0x0]
  428d5d:	add    BYTE PTR [edi+0x6f6a0349],cl
  428d63:	out    dx,eax
  428d64:	das    
  428d65:	call   0x3defb2
  428d6a:	mov    ds:0xf404b9bd,al
  428d6f:	pop    eax
  428d70:	sub    ah,0x77
  428d73:	repnz (bad)
  428d76:	sahf   
  428d77:	and    eax,0xef8a0065
  428d7c:	adc    al,0x34
  428d7e:	jmp    0x6212:0xf882fb45
  428d85:	sbb    eax,0x4688688c
  428d8a:	lds    eax,FWORD PTR [eax-0x381b0fbb]
  428d90:	std    
  428d91:	add    BYTE PTR [esi+edx*2-0x2a],cl
  428d95:	(bad)  
  428d96:	repz push 0x68f44582
  428d9c:	mov    BYTE PTR [esi+0x79],al
  428d9f:	add    BYTE PTR [di-0x3a],0x68
  428da4:	mov    BYTE PTR [esi-0x75],al
  428da7:	add    BYTE PTR [ebp-0x4],0x14
  428dab:	(bad)  
  428dad:	loop   0x428d71
  428daf:	out    dx,eax
  428db0:	mov    dh,0xff
  428db2:	add    DWORD PTR [esi],0x0
  428db5:	test   DWORD PTR [ebp+0x260db7db],ebx
  428dbb:	mov    ?,WORD PTR [ebx]
  428dbd:	aaa    
  428dbe:	pop    edx
  428dbf:	cmp    ah,al
  428dc1:	retf   0x0
  428dc4:	in     eax,dx
  428dc5:	mov    DWORD PTR [esi+0x5303a44a],eax
  428dcb:	das    
  428dcc:	xor    esp,DWORD PTR [eax]
  428dce:	mov    al,BYTE PTR [ebp+0x29]
  428dd1:	jmp    0x428dfe
  428dd3:	ss aas 
  428dd5:	push   ecx
  428dd6:	cmp    al,0x85
  428dd8:	(bad)  
  428dda:	or     eax,0xf83f6087
  428ddf:	retf   0xe09a
  428de2:	dec    esp
  428de3:	push   eax
  428de4:	jnp    0x428d98
  428de6:	int3   
  428de7:	push   es
  428de8:	add    eax,0xf2f9efb1
  428ded:	int    0xc1
  428def:	sti    
  428df0:	dec    ebp
  428df1:	xchg   ebx,eax
  428df2:	and    ecx,0xc0828fe3
  428df8:	push   ecx
  428df9:	sub    dh,dh
  428dfb:	jl     0x428dce
  428dfd:	jmp    0x88a5:0x8748420c
  428e04:	inc    ebx
  428e05:	push   ds
  428e06:	daa    
  428e07:	cwde   
  428e08:	outs   dx,BYTE PTR ds:[esi]
  428e09:	mov    ecx,0x9f588d3b
  428e0e:	into   
  428e0f:	addr16 add eax,0xb5ffff1b
  428e15:	mov    ebx,0x799afa5a
  428e1a:	add    al,0x9
  428e1d:	sub    eax,DWORD PTR [eax-0x4ed57683]
  428e23:	add    al,0xfb
  428e25:	pushf  
  428e26:	int3   
  428e27:	inc    BYTE PTR [eax]
  428e29:	add    BYTE PTR [ebp-0x518bd877],bl
  428e2f:	fistp  QWORD PTR [ebx]
  428e31:	leave  
  428e32:	pop    esi
  428e33:	add    edi,DWORD PTR [eax+ecx*4-0x24f27d8f]
  428e3a:	pop    eax
  428e3b:	xor    cl,ch
  428e3d:	shr    ah,1
  428e3f:	xlat   BYTE PTR ds:[ebx]
  428e40:	dec    ebp
  428e41:	pop    es
  428e42:	pushf  
  428e43:	add    ch,cl
  428e45:	rcl    BYTE PTR [ecx],1
  428e47:	xchg   BYTE PTR [ebp+0x3e],cl
  428e4a:	xor    BYTE PTR ss:[ecx-0x2bcecd57],bl
  428e51:	inc    ebx
  428e52:	fwait
  428e53:	ret    0x8ee8
  428e56:	pusha  
  428e57:	div    dl
  428e59:	ret    
  428e5a:	sbb    bh,BYTE PTR [ebx+0x2c]
  428e5d:	cmp    al,0x18
  428e5f:	inc    ebx
  428e60:	push   ebp
  428e61:	pop    ss
  428e62:	sbb    BYTE PTR [esi-0x6b],bh
  428e65:	cmp    DWORD PTR [esi],eax
  428e67:	xor    BYTE PTR [eax],bl
  428e69:	mov    DWORD PTR [eax+0x56],esi
  428e6c:	rcr    esp,0x6a
  428e6f:	xor    BYTE PTR [edx-0xc4a2280],ch
  428e75:	lods   eax,DWORD PTR ds:[esi]
  428e76:	xchg   esi,eax
  428e77:	jge    0x428e9d
  428e79:	push   eax
  428e7a:	inc    ebx
  428e7b:	add    bh,BYTE PTR [ecx]
  428e7d:	cmp    ebp,esi
  428e7f:	and    DWORD PTR [ebp-0x76ea39f8],0x16
  428e86:	pop    ebp
  428e87:	add    ch,BYTE PTR [esi+0x34]
  428e8a:	dec    edi
  428e8b:	das    
  428e8c:	fadd   QWORD PTR [ebx-0x3d5d0000]
  428e92:	call   0xe9453913
  428e97:	add    ebp,DWORD PTR [edx+0x41]
  428e9a:	mov    bl,0x88
  428e9c:	adc    BYTE PTR [edi],bl
  428e9e:	loop   0x428e68
  428ea0:	pop    ebp
  428ea1:	sbb    al,BYTE PTR [esp+edi*4]
  428ea4:	test   BYTE PTR [edi],ch
  428ea6:	ins    DWORD PTR es:[edi],dx
  428ea7:	inc    esp
  428ea8:	or     bh,bh
  428eaa:	into   
  428eab:	pop    es
  428eac:	and    cl,BYTE PTR [eax+0x0]
  428eaf:	ret    
  428eb0:	sahf   
  428eb1:	sar    dl,cl
  428eb3:	push   ss
  428eb4:	and    al,BYTE PTR [esi+0xc]
  428eb7:	je     0x428f15
  428eb9:	aaa    
  428eba:	push   eax
  428ebb:	ins    BYTE PTR es:[edi],dx
  428ebc:	sbb    al,0x5e
  428ebe:	std    
  428ebf:	push   ss
  428ec0:	xchg   esi,eax
  428ec1:	shl    BYTE PTR [ebp-0x15],cl
  428ec4:	sbb    ebp,ecx
  428ec6:	test   DWORD PTR [esi],0xa90f76ac
  428ecc:	sahf   
  428ecd:	xchg   al,al
  428ecf:	jge    0x428e5d
  428ed1:	jge    0x428e58
  428ed3:	cmp    eax,0x39fb2b64
  428ed8:	adc    al,ch
  428eda:	imul   DWORD PTR [ebp+ecx*2+0x4f]
  428ede:	call   0xfb6bdea3
  428ee3:	gs pop esi
  428ee5:	mov    ch,0xc
  428ee7:	push   ebx
  428ee8:	xchg   ebp,eax
  428ee9:	jge    0x428f30
  428eeb:	leave  
  428eec:	dec    eax
  428eed:	das    
  428eee:	dec    ebx
  428eef:	mov    dh,0x4f
  428ef1:	scas   eax,DWORD PTR es:[edi]
  428ef2:	ret    
  428ef3:	fld    QWORD PTR [eax]
  428ef5:	add    BYTE PTR ds:0x1439cbc5,dl
  428efb:	(bad)
  428efe:	and    al,0xc5
  428f00:	mov    ebx,0xb3c52439
  428f05:	cmp    ebx,edi
  428f07:	sub    edi,ebx
  428f09:	fdivr  QWORD PTR [edx]
  428f0b:	adc    DWORD PTR [eax-0x17],eax
  428f0e:	sbb    eax,0xabed7542
  428f13:	xor    bh,ah
  428f15:	enter  0xc51b,0xb3
  428f19:	jb     0x428ef0
  428f1b:	jbe    0x428f83
  428f1d:	jmp    0x28c291bf
  428f22:	and    BYTE PTR [esi+0x326777f],0x81
  428f29:	add    BYTE PTR [ebp-0x459db6da],ah
  428f2f:	push   esi
  428f30:	dec    ebx
  428f31:	call   0x42775e
  428f36:	push   ecx
  428f38:	or     BYTE PTR [ebp-0x74],0x4
  428f3c:	dec    ebp
  428f3d:	hlt    
  428f3e:	iret   
  428f3f:	inc    edx
  428f40:	xlat   BYTE PTR ds:[ebx]
  428f41:	lea    ecx,[eax]
  428f43:	pop    es
  428f44:	or     cl,BYTE PTR [ecx-0x247b1607]
  428f4a:	rol    DWORD PTR [eax],0x2b
  428f4d:	dec    DWORD PTR [ebp+0x44000080]
  428f53:	jge    0x428f10
  428f55:	call   0x3bc7b5
  428f5a:	add    BYTE PTR [eax],al
  428f5c:	scas   eax,DWORD PTR es:[edi]
  428f5d:	out    dx,al
  428f5e:	test   bh,bh
  428f60:	jo     0x428fce
  428f62:	rol    DWORD PTR [edi],0x5
  428f65:	mov    eax,ds:0x6b7b093
  428f6a:	mov    DWORD PTR [edi-0xb],eax
  428f6d:	mov    eax,ds:0x6c7b08f
  428f72:	lea    ebx,[edi-0x2a]
  428f75:	jns    0x428fb6
  428f77:	add    eax,0x11b7fe3b
  428f7c:	mov    ah,0x6
  428f7e:	pop    esi
  428f7f:	mov    DWORD PTR [ebx-0x43887700],eax
  428f85:	arpl   WORD PTR [edx+0x357ff845],ax
  428f8b:	xor    dl,ah
  428f8d:	inc    ecx
  428f8e:	sti    
  428f8f:	gs sub eax,0x3f660743
  428f95:	ins    DWORD PTR es:[edi],dx
  428f96:	out    dx,eax
  428f97:	cmp    ax,0x943
  428f9b:	data16 das 
  428f9d:	ins    DWORD PTR es:[edi],dx
  428f9e:	jecxz  0x429006
  428fa0:	or     eax,0x9d0f0b44
  428fa5:	mov    ecx,es
  428fa7:	or     ebp,ebp
  428fa9:	mov    esp,0xc4eed3aa
  428fae:	dec    ebp
  428faf:	or     esi,DWORD PTR [edx]
  428fb1:	fs add edi,edi
  428fb4:	dec    edx
  428fb5:	and    al,0x70
  428fb7:	inc    ebx
  428fb8:	fwait
  428fb9:	cwde   
  428fba:	aas    
  428fbb:	or     al,0xcd
  428fbd:	in     al,0xaa
  428fbf:	jmp    0x428fc1
  428fc1:	add    dh,ch
  428fc3:	or     al,0x4e
  428fc5:	or     ecx,DWORD PTR [edx]
  428fc7:	pop    esp
  428fc8:	movq   QWORD PTR [ecx+0x4f],mm4
  428fcc:	iret   
  428fcd:	or     cl,BYTE PTR [edx]
  428fcf:	pop    esp
  428fd0:	or     ebx,edi
  428fd2:	mov    al,0xfb
  428fd4:	add    al,0xbf
  428fd6:	int    0x34
  428fd8:	push   ecx
  428fd9:	xchg   eax,ecx
  428fdb:	xor    eax,DWORD PTR [esp+eax*8-0x2c56496f]
  428fe2:	add    eax,0x12f9b16e
  428fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fe8:	test   eax,0xb175f5eb
  428fed:	stc    
  428fee:	add    dh,BYTE PTR [esi+0x5e05dfa9]
  428ff4:	mov    cl,0xf9
  428ff6:	repnz lahf 
  428ff8:	mov    ecx,0x8c531407
  428ffd:	ret    
  428ffe:	inc    edx
  428fff:	(bad)
  429002:	fbld   TBYTE PTR [esi]
  429004:	dec    DWORD PTR [esi+0x68]
  429007:	in     al,dx
  429008:	cmp    eax,0x23839c02
  42900d:	push   es
  42900e:	popf   
  42900f:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x40b737]
  429016:	outs   dx,DWORD PTR ds:[esi]
  429017:	nop
  429018:	xchg   DWORD PTR [edx-0x64],eax
  42901b:	fcom   QWORD PTR [esi-0x3b]
  42901e:	pop    esi
  42901f:	add    ch,cl
  429021:	sti    
  429022:	mov    ecx,0xc4243a
  429027:	add    BYTE PTR [edx-0x782eff49],dl
  42902d:	push   esi
  42902e:	adc    DWORD PTR [edi],edx
  429030:	push   ebp
  429031:	inc    esi
  429032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429033:	add    esi,eax
  429035:	adc    al,0x51
  429037:	(bad)  
  429038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429039:	add    ch,cl
  42903b:	jg     0x42909a
  42903d:	mov    bh,0xdb
  42903f:	mov    al,BYTE PTR [eax+0x5ac42c3e]
  429045:	inc    esi
  429046:	in     al,0x4b
  429048:	pop    eax
  429049:	shr    al,0x2
  42904c:	out    dx,al
  42904d:	sub    esi,esp
  42904f:	xor    edx,DWORD PTR [ebx-0x25e173e]
  429055:	lock and al,0xc4
  429058:	xor    ah,BYTE PTR [esi+0x2428c15f]
  42905e:	or     BYTE PTR ds:0xbe71029d,cl
  429064:	sahf   
  429065:	jmp    0xb0e8:0xbfd84bfb
  42906c:	ret    0xc9d3
  42906f:	push   ecx
  429070:	lds    ecx,FWORD PTR ds:0x2ba41b1
  429076:	xor    al,0xe
  429078:	add    eax,0x9d03e008
  42907d:	xchg   BYTE PTR [ecx+0x47991b0],ch
  429083:	dec    eax
  429084:	loopne 0x429045
  429086:	call   0xac7d28c8
  42908b:	ret    
  42908c:	add    BYTE PTR [eax],al
  42908e:	retf   0x3202
  429091:	aaa    
  429092:	test   al,0x32
  429094:	xlat   BYTE PTR ds:[ebx]
  429095:	ret    
  429096:	mov    edx,0xdeee47a5
  42909b:	mov    edi,0x7b08e8ff
  4290a0:	inc    edx
  4290a1:	in     al,0x76
  4290a3:	dec    ebx
  4290a4:	push   es
  4290a5:	jmp    0xe6850a48
  4290aa:	retf   
  4290ab:	adc    eax,0x2b5ef8a4
  4290b0:	pop    edx
  4290b1:	lods   al,BYTE PTR ds:[esi]
  4290b2:	and    BYTE PTR [edx+0x42],bh
  4290b5:	repnz push edi
  4290b7:	ins    BYTE PTR es:[edi],dx
  4290b8:	push   ebp
  4290b9:	jb     0x429080
  4290bb:	stos   DWORD PTR es:[edi],eax
  4290bc:	jecxz  0x4290ef
  4290be:	and    BYTE PTR [esi],bl
  4290c0:	xchg   esp,eax
  4290c1:	jmp    0x429061
  4290c3:	add    cl,BYTE PTR [edi-0x41]
  4290c6:	imul   ebp,DWORD PTR [eax],0x15
  4290c9:	push   ecx
  4290ca:	test   al,0xc2
  4290cc:	(bad)  
  4290cd:	(bad)  
  4290cf:	jns    0x429115
  4290d1:	lds    esi,FWORD PTR [edx]
  4290d3:	hlt    
  4290d4:	mov    esi,0xbfdc3b7c
  4290d9:	adc    BYTE PTR [esi],dh
  4290db:	sub    eax,0x54f6e9fb
  4290e0:	add    ecx,ebp
  4290e2:	sahf   
  4290e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290e4:	pop    es
  4290e5:	out    0xd,al
  4290e7:	dec    ebx
  4290e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290e9:	sub    bl,BYTE PTR [ecx+0x10d443f]
  4290ef:	sub    eax,0xe9fb
  4290f4:	sahf   
  4290f5:	daa    
  4290f6:	adc    eax,0xffc28fed
  4290fb:	jno    0x4290b3
  4290fd:	repz idiv BYTE PTR ds:0x5847d49
  429104:	or     DWORD PTR [edx],eax
  429106:	add    cl,ch
  429108:	out    dx,al
  429109:	mov    ebx,0xcabd114e
  42910e:	(bad)  
  42910f:	call   0xe845d203
  429114:	adc    esi,ecx
  429116:	and    eax,DWORD PTR [eax]
  429118:	shl    bl,1
  42911a:	adc    al,0x50
  42911c:	xlat   BYTE PTR ds:[ebx]
  42911d:	ds sti 
  42911f:	test   ah,dh
  429121:	jno    0x429130
  429123:	lea    edi,[eax]
  429125:	dec    ebx
  429126:	mov    eax,DWORD PTR [eax]
  429128:	test   BYTE PTR [esi],al
  42912a:	push   eax
  42912b:	dec    DWORD PTR [ecx+0x74400b86]
  429131:	ja     0x429177
  429133:	and    al,0x8c
  429135:	pop    esi
  429136:	jecxz  0x4290c3
  429138:	inc    esp
  429139:	push   es
  42913a:	lea    eax,[eax+ebx*4+0x24]
  42913e:	dec    ebx
  42913f:	dec    DWORD PTR [ecx-0x2]
  429142:	adc    BYTE PTR [eax+0x74],al
  429145:	jnp    0x4291bb
  429147:	and    al,0xc
  429149:	scas   al,BYTE PTR es:[edi]
  42914a:	pushf  
  42914b:	add    BYTE PTR [esi+eax*1-0x18],al
  42914f:	mov    eax,ds:0x8bf6f0bb
  429154:	jp     0x42913d
  429156:	inc    ebx
  429157:	and    al,0x0
  429159:	add    BYTE PTR [eax-0x1],ch
  42915c:	mov    esi,0x1a1e5844
  429161:	add    BYTE PTR [esi+eax*1],dh
  429164:	mov    DWORD PTR [eax+ebx*2+0x22],eax
  429168:	mov    BYTE PTR [eax+ebp*4+0x2e],bl
  42916c:	sbb    DWORD PTR [eax+ebx*4-0x1],0xffffff88
  429171:	pop    esp
  429172:	cwde   
  429173:	push   cs
  429174:	or     DWORD PTR [eax+ebx*4+0xe],0x2b
  429179:	rol    ah,0xd3
  42917c:	fild   WORD PTR [ebp+0xf2f22b8]
  429182:	js     0x4291e1
  429184:	add    BYTE PTR [eax],al
  429186:	hlt    
  429187:	jp     0x4291cd
  429189:	and    al,0xd8
  42918b:	out    dx,eax
  42918c:	add    DWORD PTR ds:[edi+0x42],eax
  429190:	pop    ds
  429191:	adc    al,0x9d
  429193:	sub    eax,0xa59a3482
  429198:	mov    edi,0xf9b3aa23
  42919d:	or     ch,bl
  42919f:	pop    ebx
  4291a0:	call   0x5988:0x99dadd7e
  4291a7:	aas    
  4291a8:	adc    ecx,DWORD PTR [ebp+0x5017f7e1]
  4291ae:	pop    ebx
  4291af:	pop    edi
  4291b0:	fist   DWORD PTR [eax]
  4291b2:	popf   
  4291b3:	ror    BYTE PTR [edx],1
  4291b5:	mov    al,ds:0x47ff5bac
  4291ba:	in     eax,0x30
  4291bc:	jnp    0x42917c
  4291be:	add    BYTE PTR [eax],al
  4291c0:	popf   
  4291c1:	sbb    edi,edi
  4291c3:	inc    edi
  4291c4:	call   0xc71b:0x9d006e97
  4291cb:	or     ah,BYTE PTR [ecx]
  4291cd:	mov    esp,0x739d0003
  4291d2:	add    al,0x84
  4291d4:	xor    BYTE PTR [ebx],bl
  4291d6:	(bad)  
  4291d7:	call   ebp
  4291d9:	dec    eax
  4291da:	jp     0x429183
  4291dc:	popf   
  4291dd:	sbb    edi,edi
  4291df:	rcr    ecx,0x3f
  4291e2:	add    al,BYTE PTR ds:0x443d19ed
  4291e8:	jns    0x429233
  4291ea:	inc    DWORD PTR [ebx-0x1d84d023]
  4291f0:	popf   
  4291f1:	sbb    edi,edi
  4291f3:	addr16 mov al,ds:0xff1a
  4291f7:	call   DWORD PTR [eax]
  4291f9:	lahf   
  4291fa:	ficom  DWORD PTR [ebx+0x4fff1b9d]
  429200:	dec    esi
  429201:	or     al,0xd1
  429203:	dec    esi
  429204:	dec    esi
  429205:	sahf   
  429206:	mov    edx,0x350ba523
  42920b:	adc    eax,0xc3f801dd
  429210:	sar    BYTE PTR [ebp-0x57],cl
  429213:	add    al,0x21
  429215:	jge    0x429200
  429217:	add    ebx,DWORD PTR [ebp+0x259da8f5]
  42921d:	jle    0x4291ec
  42921f:	fwait
  429220:	mov    bl,0x28
  429222:	jmp    0x214292ad
  429227:	ficomp WORD PTR [eax+0x3]
  42922a:	popf   
  42922b:	add    bl,BYTE PTR [ecx]
  42922d:	xor    eax,0xc3fd7ab0
  429232:	xchg   edx,eax
  429233:	jnp    0x4291f2
  429235:	fistp  QWORD PTR [edx-0x2679d20c]
  42923b:	fiadd  WORD PTR [esp+ebp*1]
  42923e:	xchg   edi,eax
  42923f:	(bad)  
  429240:	call   0xb585aa48
  429245:	aad    0xda
  429247:	jne    0x4292b6
  429249:	fisttp WORD PTR [esi]
  42924b:	add    ebp,ecx
  42924d:	add    ebp,ebp
  42924f:	daa    
  429250:	cld    
  429251:	jae    0x4291ff
  429253:	ret    0x7ee8
  429256:	pop    ebp
  429257:	scas   al,BYTE PTR es:[edi]
  429258:	test   eax,0xcaaf6a7f
  42925d:	xor    DWORD PTR [edx],0x2
  429260:	jge    0x429253
  429262:	and    esp,eax
  429264:	cli    
  429265:	imul   BYTE PTR [ebx]
  429267:	mov    cl,0xb9
  429269:	cmp    eax,0x13daded9
  42926e:	add    dh,bl
  429270:	stos   BYTE PTR es:[edi],al
  429271:	enter  0xf5be,0xe4
  429275:	push   ds
  429276:	scas   eax,DWORD PTR es:[edi]
  429277:	inc    eax
  429278:	sub    eax,0xbe0391e8
  42927d:	add    ebx,edi
  42927f:	mov    esi,0x1af3010c
  429284:	sbb    dh,BYTE PTR [ebx]
  429286:	out    0x27,al
  429288:	add    BYTE PTR [edi-0x1c2b0000],ch
  42928e:	or     al,0xe8
  429290:	shl    BYTE PTR [edi-0x17],1
  429293:	cmp    al,0x8e
  429295:	sub    edi,ebx
  429297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429298:	aad    0xe3
  42929a:	or     ecx,ebx
  42929c:	mov    ds:0xc525c1fd,eax
  4292a1:	stc    
  4292a2:	pop    ds
  4292a3:	xchg   DWORD PTR [edx+0x1f],ebx
  4292a6:	xchg   ebp,eax
  4292a7:	mov    edx,0xcd44755b
  4292ac:	fidiv  WORD PTR [edi-0x147ada74]
  4292b2:	dec    edi
  4292b3:	mov    edx,0x1123be1d
  4292b8:	jno    0x4292e6
  4292ba:	adc    eax,0xffc2a895
  4292bf:	arpl   cx,sp
  4292c1:	scas   al,BYTE PTR es:[edi]
  4292c2:	sbb    esi,DWORD PTR [edx+0x65]
  4292c5:	jecxz  0x4292fe
  4292c7:	jo     0x429320
  4292c9:	and    eax,0xeb7aad86
  4292ce:	mov    BYTE PTR [edi-0x32bb805c],ah
  4292d4:	pop    esi
  4292d5:	jp     0x429319
  4292d7:	repz retf 
  4292d9:	mov    esi,0xc4c1ad23
  4292de:	or     DWORD PTR [ebx+0x65],esp
  4292e1:	jecxz  0x4292ec
  4292e3:	repz pop edx
  4292e5:	jecxz  0x4292f3
  4292e7:	jb     0x429346
  4292e9:	jecxz  0x4292fa
  4292eb:	popa   
  4292ec:	push   edi
  4292ed:	add    bh,BYTE PTR [ecx]
  4292ef:	popf   
  4292f0:	add    BYTE PTR [eax],al
  4292f2:	add    cl,BYTE PTR [edi]
  4292f4:	jne    0x4292e2
  4292f6:	adc    ah,BYTE PTR [edi+0x2ca02787]
  4292fc:	inc    esp
  4292fd:	or     eax,0x5442b9e
  429302:	xchg   ecx,eax
  429303:	cmp    BYTE PTR [eax+eax*1-0x60],0x3
  429308:	adc    cl,BYTE PTR [edi]
  42930a:	jbe    0x42937a
  42930c:	stc    
  42930d:	jmp    FWORD PTR [ebx]
  42930f:	cmp    DWORD PTR [esp-0x60],0xfffffffe
  429314:	add    BYTE PTR [ebp-0x34],0xa7
  429318:	dec    ebx
  429319:	and    al,0xd0
  42931b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42931c:	pop    es
  42931d:	jne    0x4292dc
  42931f:	repz jae 0x429346
  429322:	clc    
  429323:	or     ah,BYTE PTR [eax-0x7d0be5d2]
  429329:	(bad)  
  42932a:	mov    edx,DWORD PTR [edx+edx*2-0x75]
  42932e:	adc    DWORD PTR [edx-0x43],edx
  429331:	add    al,0x84
  429333:	dec    ebx
  429334:	sub    ah,0x7
  429337:	fdivrp st(7),st
  429339:	sbb    eax,0x15
  42933c:	dec    edx
  42933d:	push   esi
  42933e:	inc    ebx
  42933f:	mov    BYTE PTR [ebx],al
  429341:	xor    ebp,DWORD PTR [edi-0x16297dad]
  429347:	cmp    eax,0x35ed1c1f
  42934c:	pop    ds
  42934d:	sbb    al,0xfd
  42934f:	xor    eax,0x35bd201f
  429354:	pop    ds
  429355:	and    al,0x0
  429357:	add    BYTE PTR [ebx-0xbd7e0c3],al
  42935d:	add    DWORD PTR [eax],eax
  42935f:	add    BYTE PTR [esp+ebp*4-0x5b5400d5],bl
  429366:	dec    ebx
  429367:	and    al,0x38
  429369:	jle    0x42932b
  42936b:	je     0x4293a7
  42936d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42936e:	inc    ebx
  42936f:	and    al,0x54
  429371:	std    
  429372:	ror    BYTE PTR [ecx+0x3b1b1d90],0x47
  429379:	outs   dx,BYTE PTR ds:[esi]
  42937a:	or     al,0x51
  42937c:	in     al,dx
  42937d:	imul   ebp,DWORD PTR [ecx],0xf54c9dfe
  429383:	mov    edi,0x52f04
  429388:	popf   
  429389:	sub    BYTE PTR [edi],bh
  42938b:	lea    ebp,[ecx-0x1]
  42938e:	adc    ah,BYTE PTR [edi-0x3da57f85]
  429394:	popa   
  429395:	call   DWORD PTR [edi]
  429397:	add    ebp,eax
  429399:	sub    eax,DWORD PTR [eax-0x6]
  42939c:	retf   0x33b0
  42939f:	mov    DWORD PTR [ecx+0x37],ecx
  4293a2:	getsec 
  4293a4:	scas   al,BYTE PTR es:[edi]
  4293a5:	inc    esp
  4293a6:	sbb    DWORD PTR [ebx],0xffffff9c
  4293a9:	sbb    edi,edi
  4293ab:	xchg   BYTE PTR [eax-0x62bfe695],cl
  4293b1:	mov    al,ds:0xb31e3fc5
  4293b6:	or     ecx,DWORD PTR [ebx]
  4293b8:	sbb    esp,eax
  4293ba:	add    eax,DWORD PTR [eax]
  4293bc:	add    BYTE PTR [eax],al
  4293be:	popf   
  4293bf:	push   es
  4293c0:	test   DWORD PTR [eax],eax
  4293c2:	popf   
  4293c3:	sbb    eax,DWORD PTR [eax]
  4293c5:	test   BYTE PTR [ecx+0x1effff1b],cl
  4293cb:	cmp    eax,0x9e9a00c3
  4293d0:	and    DWORD PTR [eax],eax
  4293d2:	popf   
  4293d3:	sbb    edx,DWORD PTR [edi]
  4293d5:	cmp    esp,DWORD PTR [edx-0x66c400e5]
  4293db:	mov    esi,esi
  4293dd:	repnz jecxz 0x429403
  4293e0:	jg     0x4293e3
  4293e2:	popf   
  4293e3:	sbb    ebx,DWORD PTR [esi+eax*1]
  4293e6:	push   ds
  4293e7:	jne    0x4293ec
  4293e9:	add    BYTE PTR [eax-0x2a857bcf],ch
  4293ef:	sbb    eax,DWORD PTR [eax]
  4293f1:	test   BYTE PTR [ebp+0x1b],bl
  4293f4:	(bad)  
  4293f5:	dec    esi
  4293f7:	fistp  DWORD PTR [ecx+0x70027b01]
  4293fd:	(bad)  
  4293fe:	mov    esi,0x817f3ff2
  429403:	fiadd  WORD PTR [edx]
  429405:	xor    eax,0xb15e5842
  42940a:	mov    ds:0x5e7d1a19,al
  42940f:	mul    BYTE PTR [ebx+0x43]
  429412:	imul   esi,DWORD PTR [edi-0x7e553fa3],0x44813b0
  42941c:	or     eax,DWORD PTR [ebp+0xc140085]
  429422:	add    BYTE PTR [eax],al
  429424:	sbb    esi,DWORD PTR [esi-0x424b0d34]
  42942a:	(bad)  
  42942b:	repnz push ds
  42942d:	cmp    edi,esp
  42942f:	hlt    
  429430:	sub    eax,DWORD PTR [edx-0x1b]
  429433:	popf   
  429434:	sahf   
  429435:	shl    BYTE PTR [ebx-0x39],cl
  429438:	mov    esi,0x13e27de7
  42943d:	sub    al,BYTE PTR ds:0x659ca8b7
  429443:	jmp    0x4293f4
  429445:	lods   eax,DWORD PTR ds:[esi]
  429446:	hlt    
  429447:	jge    0x429432
  429449:	ficom  WORD PTR [esi]
  42944b:	xor    bl,cl
  42944d:	fdivrp st(6),st
  42944f:	xchg   DWORD PTR [esi+ebp*4-0x28],edx
  429453:	test   BYTE PTR [ebp-0x5],bl
  429456:	mov    esi,0xa575ed13
  42945b:	out    0x97,eax
  42945d:	shl    BYTE PTR [ecx],cl
  42945f:	push   esp
  429460:	retf   0xed3e
  429463:	jl     0x42942b
  429465:	cli    
  429466:	imul   esi,DWORD PTR [eax],0xffffffb0
  429469:	pop    ebp
  42946a:	cmp    DWORD PTR [edi+ebx*8-0x16],0xffffff8a
  42946f:	jp     0x429452
  429471:	fmulp  st(4),st
  429473:	jl     0x429454
  429475:	ret    0x2fff
  429478:	int    0x2
  42947a:	add    cl,ch
  42947c:	add    DWORD PTR [esi+edx*1],edi
  42947f:	mov    al,0xd3
  429481:	push   ecx
  429482:	push   ds
  429483:	mov    cl,0x86
  429485:	sar    BYTE PTR [ebx],0x61
  429488:	add    BYTE PTR [eax],al
  42948a:	fstp   st(7)
  42948c:	sub    DWORD PTR [eax-0x16ffd83e],edx
  429492:	inc    eax
  429493:	jnp    0x4294e1
  429495:	add    eax,0x3ec0ecc2
  42949a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42949b:	mov    al,ds:0xd8c52588
  4294a0:	add    bl,BYTE PTR gs:[edi+edi*4]
  4294a4:	and    ebx,ecx
  4294a6:	out    dx,al
  4294a7:	sub    BYTE PTR [ebp+ecx*8-0x2a],dh
  4294ab:	jbe    0x429529
  4294ad:	(bad)
  4294b0:	sub    al,0xd2
  4294b2:	jnp    0x4294db
  4294b4:	test   DWORD PTR [ecx+0x2df9ffe5],ebp
  4294ba:	test   DWORD PTR [edx],ecx
  4294bc:	xchg   edi,esi
  4294be:	xchg   esi,eax
  4294bf:	jle    0x4294b3
  4294c1:	not    BYTE PTR ds:0xb25efa14
  4294c7:	daa    
  4294c8:	je     0x4294d7
  4294ca:	xchg   ecx,eax
  4294cb:	sbb    bh,bh
  4294cd:	sti    
  4294ce:	shl    BYTE PTR [edi],0x2f
  4294d1:	and    al,BYTE PTR [edi]
  4294d3:	add    ch,al
  4294d5:	inc    eax
  4294d6:	(bad)  [eax]
  4294d8:	sti    
  4294d9:	bound  edx,QWORD PTR [ecx+0x11b5eeeb]
  4294df:	jp     0x42953d
  4294e1:	int    0xae
  4294e3:	jmp    0x767a3401
  4294e8:	pop    edx
  4294e9:	in     eax,dx
  4294ea:	pop    ds
  4294eb:	stos   DWORD PTR es:[edi],eax
  4294ec:	add    edi,ecx
  4294ee:	add    BYTE PTR [eax],al
  4294f0:	cmc    
  4294f1:	loope  0x429479
  4294f3:	add    BYTE PTR [edi],dh
  4294f5:	jp     0x4294b7
  4294f7:	je     0x429538
  4294f9:	mov    edi,edi
  4294fb:	add    ah,0xfa
  4294fe:	dec    edi
  4294ff:	dec    DWORD PTR [eax-0x7f72dce5]
  429505:	sbb    ah,BYTE PTR [ebx]
  429507:	call   0x38de57
  42950c:	mov    DWORD PTR [edi+0x3ae20473],edi
  429512:	pop    ds
  429513:	sbb    ah,bl
  429515:	cmp    bl,BYTE PTR [edi]
  429517:	adc    BYTE PTR [edi+0x3b],ch
  42951a:	pop    ds
  42951b:	adc    BYTE PTR [edi-0x40],al
  42951e:	pop    es
  42951f:	cmp    edi,DWORD PTR [edx-0x20cc3aae]
  429525:	dec    esp
  429526:	jecxz  0x4294d3
  429528:	rcl    ah,1
  42952a:	imul   BYTE PTR [edx-0x3a]
  42952d:	push   es
  42952e:	fwait
  42952f:	int3   
  429530:	and    dl,ah
  429532:	xor    al,0xdf
  429535:	out    dx,eax
  429536:	jae    0x429581
  429538:	sub    eax,0x4d101f33
  42953d:	adc    BYTE PTR [esi+0x3b],dh
  429540:	icebp  
  429541:	dec    edi
  429542:	inc    DWORD PTR [edx+0x751c0a7f]
  429548:	xchg   ebp,eax
  429549:	popf   
  42954a:	cli    
  42954b:	test   ah,al
  42954d:	pop    ecx
  42954e:	adc    ch,BYTE PTR [edx+0x74]
  429551:	test   eax,eax
  429553:	or     BYTE PTR [eax],al
  429555:	add    BYTE PTR [ecx+esi*8],al
  429558:	jae    0x42957e
  42955a:	mov    WORD PTR [ebx-0x163db84],es
  429560:	sub    BYTE PTR [edx],0x83
  429563:	lock test al,al
  429566:	sub    BYTE PTR [edx],cl
  429568:	test   BYTE PTR [eax+ebx*2+0xd],0xf7
  42956d:	inc    esp
  42956e:	popf   
  42956f:	dec    edi
  429570:	ja     0x7f51dd4f
  429576:	pop    esi
  429577:	adc    al,0xe6
  429579:	add    DWORD PTR [ecx+0x73d6edd5],esp
  42957f:	add    ebx,eax
  429581:	sub    edx,DWORD PTR [ebx]
  429583:	xor    DWORD PTR [eax-0x180fe7f9],ebx
  429589:	pop    ss
  42958a:	ins    DWORD PTR es:[edi],dx
  42958b:	fdivr  QWORD PTR [edx+0x7c]
  42958e:	rol    DWORD PTR [ebx],0x77
  429591:	pop    esp
  429592:	mov    ecx,0xb74d1c0a
  429597:	dec    eax
  429598:	sub    eax,0xe4075987
  42959d:	xchg   BYTE PTR [eax+0x23],ch
  4295a0:	ror    BYTE PTR [eax+0x2bef439c],1
  4295a6:	retf   
  4295a7:	push   0x1f794479
  4295ac:	int3   
  4295ad:	pop    ecx
  4295ae:	push   esi
  4295af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295b0:	and    bl,BYTE PTR [ebp-0x21]
  4295b3:	daa    
  4295b4:	call   DWORD PTR [esi+edx*1+0x78]
  4295b8:	sub    esp,0xfc2d0000
  4295be:	shl    DWORD PTR [ebp-0x53],1
  4295c1:	add    eax,0x36925304
  4295c6:	repz adc ebp,ebx
  4295c9:	sub    eax,DWORD PTR [eax-0x3d516e3c]
  4295cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295d0:	int    0xf1
  4295d2:	add    al,0x1
  4295d4:	pop    edx
  4295d5:	push   di
  4295d7:	inc    eax
  4295d8:	popf   
  4295d9:	sub    edi,edi
  4295db:	cli    
  4295dc:	mov    BYTE PTR [edi-0x5162bff2],dl
  4295e2:	inc    ebx
  4295e3:	je     0x429663
  4295e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295e6:	ret    0x16b3
  4295e9:	add    dh,BYTE PTR [ebx+esi*2+0x18286e96]
  4295f0:	pop    esp
  4295f1:	sub    bh,ch
  4295f3:	xchg   BYTE PTR [ebp-0x69],bl
  4295f6:	jecxz  0x429578
  4295f8:	and    al,0x21
  4295fa:	jnp    0x429600
  4295fc:	jb     0x429649
  4295fe:	enter  0xebe,0x2d
  429602:	out    0x7a,al
  429604:	pop    eax
  429605:	push   ss
  429606:	pusha  
  429607:	mov    ebp,0x3c2c8f9d
  42960c:	ins    DWORD PTR es:[edi],dx
  42960d:	and    esp,esi
  42960f:	(bad)  
  429610:	mov    edx,es
  429612:	call   0xe9638c82
  429617:	add    esi,DWORD PTR [edx+0x687ea4c7]
  42961d:	jb     0x4295fd
  42961f:	inc    ebx
  429620:	add    BYTE PTR [eax],al
  429622:	into   
  429623:	xor    DWORD PTR [esi],eax
  429625:	(bad)  
  429626:	mul    BYTE PTR [edi+0x5aa1c45f]
  42962c:	add    DWORD PTR [ebx],0xffffff9d
  42962f:	add    dl,BYTE PTR [ecx-0x6ddec4e0]
  429635:	jle    0x42965f
  429637:	adc    dl,BYTE PTR [ecx-0x74]
  42963a:	popf   
  42963b:	add    ch,cl
  42963d:	sbb    ecx,edi
  42963f:	cmp    DWORD PTR [edx+0x2c],0x22
  429643:	dec    ecx
  429644:	sbb    DWORD PTR [edi-0x28],edi
  429647:	jb     0x429662
  429649:	ins    BYTE PTR es:[edi],dx
  42964a:	mov    esp,DWORD PTR [eax]
  42964c:	jmp    0xf5900bd4
  429651:	add    ebx,DWORD PTR [ebp-0x7667e375]
  429657:	ret    0x99e8
  42965a:	fimul  DWORD PTR [ecx+0x396604aa]
  429660:	iret   
  429661:	mov    ebp,0xe1ffc822
  429666:	xor    DWORD PTR [esi+eiz*2],0xfb3ac59e
  42966d:	aas    
  42966e:	ret    
  42966f:	iret   
  429670:	cli    
  429671:	pusha  
  429672:	mov    ebx,DWORD PTR [ebx]
  429674:	add    cl,ch
  429676:	inc    ebp
  429677:	xor    esi,DWORD PTR [ebx-0x22]
  42967a:	stos   DWORD PTR es:[edi],eax
  42967b:	mov    dl,0xfa
  42967d:	ret    0x93cf
  429680:	pop    es
  429681:	xchg   DWORD PTR [edi+0x8f0bbb],edx
  429687:	add    BYTE PTR [edi-0x2a70f63d],dl
  42968d:	dec    edx
  42968e:	mov    edi,0x7f2e823c
  429693:	(bad)
  429696:	in     al,dx
  429697:	sbb    eax,0x3a000298
  42969c:	iret   
  42969d:	mov    ah,0x2e
  42969f:	test   eax,0x1d8938ea
  4296a4:	mov    ebp,0xbd358cc7
  4296a9:	retf   
  4296aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296ab:	adc    dl,0x5f
  4296ae:	mov    DWORD PTR [ebp-0x43],eax
  4296b1:	mov    bl,0x8c
  4296b3:	sbb    eax,0x42a6b7bd
  4296b8:	xor    BYTE PTR [esi+0x5fb20923],bh
  4296be:	lea    eax,ds:0x6ca6a3bd
  4296c4:	dec    ebp
  4296c5:	jecxz  0x4296fe
  4296c7:	pusha  
  4296c8:	gs jecxz 0x4296fa
  4296cb:	inc    edx
  4296cc:	test   eax,0xb666ee5b
  4296d1:	lea    esi,[ebp+eax*1-0x16fffde3]
  4296d8:	push   es
  4296d9:	arpl   WORD PTR [eax],ax
  4296db:	jmp    0x86da7e
  4296e0:	nop
  4296e1:	fisttp WORD PTR cs:[ebx+0x5c890304]
  4296e8:	mov    al,ds:0x5c8846
  4296ed:	add    BYTE PTR [eax-0x49d61cbe],ah
  4296f3:	jmp    0x4296eb
  4296f5:	(bad)  
  4296f6:	shl    BYTE PTR [edx],1
  4296f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296f9:	add    BYTE PTR [ebx+eax*1-0x48],al
  4296fd:	mov    eax,ds:0xe8000334
  429702:	cmp    al,0x85
  429704:	idiv   edi
  429706:	pop    esp
  429708:	dec    edi
  429709:	lea    eax,[eax+0x3f]
  42970c:	aaa    
  42970d:	push   eax
  42970e:	pushf  
  42970f:	dec    esp
  429710:	jmp    0x9e75:0xbf9efbff
  429717:	cdq    
  429718:	and    DWORD PTR [eax+eax*4],0x3
  42971c:	add    BYTE PTR [eax],al
  42971e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42971f:	cdq    
  429720:	inc    ebx
  429721:	and    al,0x98
  429723:	ss jecxz 0x42976e
  429726:	pop    ss
  429727:	in     al,dx
  429728:	test   BYTE PTR [esp+eax*1-0x4abf80e4],0x2
  429730:	add    BYTE PTR [ebx+0x400a26b9],cl
  429736:	les    ebx,FWORD PTR [ecx-0x6283dbbd]
  42973c:	inc    ebx
  42973d:	and    al,0xd4
  42973f:	cdq    
  429740:	inc    ebx
  429741:	and    al,0x80
  429743:	popf   
  429744:	inc    ebx
  429745:	and    al,0x60
  429747:	fwait
  429748:	inc    ebx
  429749:	and    al,0xa4
  42974b:	lahf   
  42974c:	inc    ebx
  42974d:	and    al,0x5c
  42974f:	fwait
  429750:	inc    ebx
  429751:	and    al,0x0
  429753:	add    BYTE PTR [edi+ebx*4-0x3e8fdbbd],dl
  42975a:	inc    ebx
  42975b:	and    al,0x9d
  42975d:	pop    ss
  42975e:	das    
  42975f:	xchg   ebp,ebx
  429761:	sub    edi,DWORD PTR [esi]
  429763:	inc    esp
  429764:	mov    ecx,0x9d0002f7
  429769:	sub    edi,DWORD PTR [edx+0x44]
  42976c:	jns    0x4297a5
  42976e:	mov    eax,ds:0x6abe9d86
  429773:	and    al,0x65
  429775:	sub    al,0xff
  429777:	inc    DWORD PTR [ebp-0x38]
  42977a:	cmp    ebx,0x32
  42977d:	xor    eax,ebx
  42977f:	and    esp,ecx
  429781:	jbe    0x429795
  429783:	push   0xffbe9141
  429788:	sbb    esi,ebp
  42978a:	jnp    0x4297d0
  42978c:	mov    ecx,0x9abeea6f
  429791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429792:	cmp    al,0x0
  429794:	popf   
  429795:	sub    esi,DWORD PTR [edx-0x7c]
  429798:	rol    DWORD PTR [ebx+0x4],0x0
  42979c:	popf   
  42979d:	(bad)  [esi+0x5c]
  4297a0:	rcl    DWORD PTR [edi],0x28
  4297a3:	rcl    DWORD PTR [esi],cl
  4297a5:	pop    esp
  4297a6:	in     eax,dx
  4297a7:	out    dx,al
  4297a8:	push   ecx
  4297a9:	cmp    al,0x7c
  4297ab:	inc    esp
  4297ac:	jns    0x429799
  4297ae:	jl     0x4297b8
  4297b0:	sbb    al,bh
  4297b2:	fisttp WORD PTR [edi]
  4297b4:	outs   dx,DWORD PTR ds:[esi]
  4297b5:	fcomp  DWORD PTR [ecx+0x5300002f]
  4297bb:	jl     0x42976d
  4297bd:	and    ecx,DWORD PTR [ecx-0x25]
  4297c0:	sub    BYTE PTR [ecx+0x4d],dl
  4297c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297c4:	inc    ebx
  4297c5:	je     0x429760
  4297c7:	xchg   edx,eax
  4297c8:	(bad)  
  4297c9:	and    ebp,DWORD PTR [ebp-0x22ead70b]
  4297cf:	cmp    BYTE PTR [edi-0x2018e801],bh
  4297d5:	unpcklps xmm0,XMMWORD PTR [edx]
  4297d8:	lods   eax,DWORD PTR ds:[esi]
  4297d9:	fist   WORD PTR [edx+0x1ef925d9]
  4297df:	sub    cl,0x3
  4297e2:	popf   
  4297e3:	mov    ecx,esp
  4297e5:	jbe    0x4297b0
  4297e7:	out    0xd4,al
  4297e9:	aad    0x29
  4297eb:	mov    dh,0x4
  4297ed:	in     al,dx
  4297ee:	loopne 0x429798
  4297f0:	out    0x9b,eax
  4297f2:	call   0xb81d:0xed03e8e5
  4297f9:	adc    esp,DWORD PTR [eax]
  4297fb:	inc    edx
  4297fc:	xchg   esp,eax
  4297fd:	int3   
  4297fe:	mov    bl,0x9e
  429800:	int3   
  429801:	xchg   edi,eax
  429802:	popf   
  429803:	xchg   edi,eax
  429804:	mov    ah,0x7c
  429806:	(bad)  
  429808:	mov    esp,0x95b1a57c
  42980d:	jbe    0x429878
  42980f:	out    0x70,al
  429811:	aad    0x5b
  429813:	stos   BYTE PTR es:[edi],al
  429814:	lock jl 0x429874
  429817:	add    bh,BYTE PTR [ecx]
  429819:	sub    DWORD PTR [edx+esi*8+0x63],ecx
  42981d:	inc    ebx
  42981e:	add    BYTE PTR [eax],al
  429820:	push   0x69854aed
  429825:	out    0x58,al
  429827:	cld    
  429828:	imul   edi,esi,0x9a7ebf6d
  42982e:	std    
  42982f:	inc    esp
  429830:	dec    ecx
  429831:	test   BYTE PTR [edx-0x15],0xb2
  429835:	xchg   esi,eax
  429836:	(bad)  
  429838:	sbb    eax,esi
  42983a:	int3   
  42983b:	or     esp,DWORD PTR [edx]
  42983d:	shl    BYTE PTR [ebp+0x3b],cl
  429840:	mov    dh,0x29
  429842:	mov    al,ds:0x5c1ca499
  429847:	mov    edi,0x2918927e
  42984c:	mov    al,0xda
  42984e:	aad    0xc3
  429850:	xchg   edx,eax
  429851:	mov    DWORD PTR [eax],eax
  429853:	sub    eax,0xe186d07d
  429858:	outs   dx,BYTE PTR ds:[esi]
  429859:	sbb    DWORD PTR [ecx-0xf],edx
  42985c:	stc    
  42985d:	(bad)  
  42985e:	and    eax,DWORD PTR [ecx]
  429860:	lock or dl,BYTE PTR [eax+0x56]
  429864:	dec    edi
  429865:	add    al,0x7f
  429867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429868:	inc    edx
  429869:	clc    
  42986a:	std    
  42986b:	imul   ebx,DWORD PTR [edx],0x85e513e0
  429871:	into   
  429872:	and    eax,DWORD PTR ds:0x2ff28744
  429878:	jne    0x429891
  42987a:	lea    ebx,[ebp+0x39e7d45a]
  429880:	outs   dx,DWORD PTR ds:[esi]
  429881:	pop    ss
  429882:	sti    
  429883:	add    BYTE PTR fs:[eax],al
  429886:	cli    
  429887:	fistp  WORD PTR [edi]
  429889:	add    DWORD PTR [esi-0x68f904ef],ecx
  42988f:	mov    esi,0x3891d123
  429894:	ret    
  429895:	lods   eax,DWORD PTR ds:[esi]
  429896:	jmp    0xe31b:0xde5d1ffb
  42989d:	aam    0x9e
  42989f:	add    al,BYTE PTR [eax]
  4298a1:	gs pop ecx
  4298a3:	xchg   esi,eax
  4298a4:	sub    esp,DWORD PTR [edx-0x23]
  4298a7:	fbld   TBYTE PTR [edi]
  4298a9:	(bad)
  4298ae:	mov    cl,0xcc
  4298b0:	dec    edi
  4298b1:	mov    esi,0xa984fbe8
  4298b6:	or     al,0x5
  4298b8:	bound  ebp,QWORD PTR [edx-0xb]
  4298bb:	fisttp WORD PTR [edi]
  4298bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298be:	mov    dl,0x6f
  4298c0:	rcl    BYTE PTR [edx+0x6dbfec9f],0x61
  4298c7:	xchg   esi,eax
  4298c8:	pop    es
  4298c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298ca:	fstp   st(7)
  4298cc:	das    
  4298cd:	add    BYTE PTR [ebp+0x1ffffff],al
  4298d3:	push   ebx
  4298d4:	pop    ds
  4298d5:	and    BYTE PTR [esp+ecx*4],bl
  4298d8:	sti    
  4298d9:	push   DWORD PTR [eax+ebx*4+0x4b]
  4298dd:	and    al,0x4c
  4298df:	add    BYTE PTR [esp+0x30],cl
  4298e3:	cwde   
  4298e4:	inc    ebx
  4298e5:	and    al,0x24
  4298e7:	call   0x9e7c:0x15b
  4298ee:	pop    ebx
  4298ef:	and    al,0x3c
  4298f1:	adc    bl,0x75
  4298f4:	cmp    BYTE PTR [eax],dl
  4298f6:	imul   bl
  4298f8:	pusha  
  4298f9:	cwde   
  4298fa:	mov    edx,0xf93eb3e8
  4298ff:	jmp    FWORD PTR [edi+0x8ff84ee]
  429905:	inc    esp
  429906:	add    BYTE PTR [eax+ebx*2+0xf],0x82
  42990b:	xor    eax,0x400d44
  429910:	lea    ebx,[ebx+0x0]
  429913:	(bad)  
  429914:	sti    
  429915:	add    eax,0x2ed84482
  42991a:	add    DWORD PTR [edi-0x7],0xffffff98
  42991e:	inc    ebx
  42991f:	and    al,0x60
  429921:	sahf   
  429922:	ds push es
  429924:	outs   dx,BYTE PTR ds:[esi]
  429925:	pop    ebx
  429926:	pop    ds
  429927:	push   0xefe5c7c
  42992c:	or     bl,BYTE PTR [esp+eax*1+0x50]
  429930:	jecxz  0x42999c
  429932:	pop    ds
  429933:	dec    esp
  429934:	inc    ecx
  429935:	inc    esp
  429936:	add    edx,DWORD PTR [ebx+0x13]
  429939:	int    0x6
  42993b:	mov    dh,0x7b
  42993d:	add    ebx,edi
  42993f:	xlat   BYTE PTR ds:[ebx]
  429940:	mov    bl,0xac
  429942:	ds push es
  429944:	je     0x429929
  429946:	jae    0x42996c
  429948:	popf   
  429949:	or     eax,0x3bcbfacf
  42994e:	ins    DWORD PTR es:[edi],dx
  42994f:	inc    ebx
  429950:	add    BYTE PTR [eax],al
  429952:	mov    ds:0xdab1f2fb,al
  429957:	and    DWORD PTR [edx],esp
  429959:	je     0x42991c
  42995b:	paddd  mm7,QWORD PTR [esi-0x78b35713]
  429962:	fld    DWORD PTR [edi]
  429964:	call   0x7942f2e7
  429969:	je     0x42992c
  42996b:	arpl   WORD PTR [edi],dx
  42996d:	xchg   ebx,eax
  42996e:	lock leave 
  429970:	and    DWORD PTR [ebp-0x182ff82f],ecx
  429976:	and    eax,DWORD PTR [edi+0x25]
  429979:	sti    
  42997a:	sbb    BYTE PTR [eax-0x25],bl
  42997d:	pop    edi
  42997e:	xor    eax,0x3af9979f
  429983:	xchg   ebp,eax
  429984:	mov    edi,0x77042407
  429989:	ret    
  42998a:	retf   0xc651
  42998d:	xchg   BYTE PTR [eax],bh
  42998f:	addr16 inc ecx
  429991:	add    al,0x9d
  429993:	xchg   esp,eax
  429994:	mov    dh,0xb
  429996:	sbb    bl,dl
  429998:	scas   eax,DWORD PTR es:[edi]
  429999:	pop    es
  42999a:	push   ss
  42999b:	test   DWORD PTR fs:[eax+0x2f163755],0x36fbdc26
  4299a6:	out    0xbd,eax
  4299a8:	fist   DWORD PTR [ecx+0x16]
  4299ab:	mov    esp,0xbd898cff
  4299b0:	shl    DWORD PTR [esi],0xe7
  4299b3:	fadd   QWORD PTR [edi]
  4299b5:	bound  eax,QWORD PTR [eax]
  4299b7:	add    BYTE PTR [esi],ah
  4299b9:	cmp    eax,DWORD PTR [eax-0x445d603f]
  4299bf:	or     edi,DWORD PTR [ebx]
  4299c1:	sahf   
  4299c2:	dec    ebp
  4299c3:	jne    0x429974
  4299c5:	add    cl,BYTE PTR [ebx]
  4299c7:	jmp    0x429956
  4299c9:	(bad)  
  4299ca:	jmp    0x42994c
  4299cc:	fadd   QWORD PTR [eax+eiz*2]
  4299cf:	mov    esp,0x41a8d596
  4299d4:	sbb    ah,BYTE PTR [ebx-0x3de5fc0c]
  4299da:	in     al,dx
  4299db:	inc    eax
  4299dc:	lock lea eax,[ebp+0x12de7181]
  4299e3:	data16 mov ch,0x3e
  4299e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299e7:	add    ecx,edi
  4299e9:	inc    ecx
  4299ea:	in     al,0xeb
  4299ec:	pop    esi
  4299ed:	(bad)
  4299f0:	pushf  
  4299f1:	add    ch,cl
  4299f3:	and    al,0xb0
  4299f5:	xlat   BYTE PTR ds:[ebx]
  4299f7:	ret    
  4299f8:	push   edx
  4299f9:	jle    0x429a24
  4299fb:	cmc    
  4299fc:	push   ds
  4299fd:	push   es
  4299fe:	call   0xe6ef3706
  429a03:	retf   0x775
  429a06:	mov    cl,0x3f
  429a08:	jb     0x429a0c
  429a0a:	jmp    0xfd03:0xe902287e
  429a11:	mov    bl,0x23
  429a13:	rcr    DWORD PTR [edx],0xd4
  429a16:	push   ss
  429a17:	call   0x62d929b9
  429a1c:	add    BYTE PTR [eax],al
  429a1e:	leave  
  429a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a21:	add    eax,DWORD PTR [edx-0x64511be6]
  429a27:	arpl   WORD PTR [ecx],bp
  429a29:	inc    eax
  429a2a:	mov    dl,0x2
  429a2c:	push   ds
  429a2d:	inc    edx
  429a2e:	jo     0x429a3b
  429a30:	stos   DWORD PTR es:[edi],eax
  429a31:	(bad)  
  429a32:	mov    dl,0x3e
  429a34:	es add al,0x9c
  429a37:	sub    eax,0x2d58145
  429a3c:	xor    eax,0x439200
  429a41:	cmp    al,0xc
  429a43:	or     DWORD PTR ds:0xffd97af9,0xf7981591
  429a4d:	out    0xfb,eax
  429a4f:	mov    ds:0xd95d29a0,al
  429a54:	call   ecx
  429a56:	fmul   QWORD PTR [ebp-0x176c50f8]
  429a5c:	ret    
  429a5d:	sub    ah,BYTE PTR [ecx+0x1c1de6fe]
  429a63:	sbb    eax,DWORD PTR [ecx]
  429a65:	hlt    
  429a66:	xor    DWORD PTR [edx+0x5],eax
  429a69:	sbb    ebp,ebx
  429a6b:	xlat   BYTE PTR ds:[ebx]
  429a6c:	jmp    esi
  429a6e:	test   esp,eax
  429a70:	xor    eax,0x3c043228
  429a75:	jmp    0xd7dd:0x5a0da0b
  429a7c:	jmp    FWORD PTR [ecx+0x76]
  429a7f:	std    
  429a80:	je     0x429a5a
  429a82:	add    BYTE PTR [eax],al
  429a84:	aaa    
  429a85:	pop    es
  429a86:	inc    eax
  429a87:	and    eax,0xd574185d
  429a8c:	jo     0x429a8b
  429a8e:	das    
  429a8f:	and    eax,0x1fe185d
  429a94:	cmp    eax,0x4be7f799
  429a99:	cli    
  429a9a:	mov    al,ds:0xffd7d2a9
  429a9f:	rcr    DWORD PTR [ebp+ecx*4+0x8],0x2f
  429aa4:	add    ebp,eax
  429aa6:	ret    
  429aa7:	stos   BYTE PTR es:[edi],al
  429aa8:	sahf   
  429aa9:	std    
  429aaa:	out    0xf5,al
  429aac:	sbb    ebx,DWORD PTR [ebx]
  429aae:	add    DWORD PTR [esi+edx*4+0x44],edx
  429ab2:	add    eax,0xffd75519
  429ab7:	in     eax,0x41
  429ab9:	mov    esi,0xfe8700c3
  429abe:	mov    eax,0xffff0bff
  429ac3:	cmp    bh,ah
  429ac5:	pop    ss
  429ac6:	enter  0x15f7,0x20
  429aca:	ret    
  429acb:	mov    eax,0xfffffefb
  429ad0:	mov    ds:0xf0320d85,al
  429ad5:	aas    
  429ad6:	sti    
  429ad7:	gs ins DWORD PTR es:[edi],dx
  429ad9:	or     cl,BYTE PTR [ebp+eax*8-0x39]
  429add:	(bad)  
  429ade:	outs   dx,BYTE PTR ds:[esi]
  429adf:	adc    eax,0x4e1435a2
  429ae4:	xor    DWORD PTR [edi],edi
  429ae6:	sti    
  429ae7:	je     0x429ae9
  429ae9:	add    BYTE PTR [eax-0x5d],bl
  429aec:	dec    ebx
  429aed:	lds    eax,FWORD PTR [edi+0x3]
  429af0:	call   0x72ea:0xfb3fc034
  429af7:	mov    edx,DWORD PTR ds:0xfb3f8034
  429afd:	mov    WORD PTR [ecx],es
  429aff:	xlat   BYTE PTR ds:[ebx]
  429b00:	dec    edi
  429b01:	push   DWORD PTR [ecx-0x69]
  429b04:	adc    BYTE PTR [eax+0x34],al
  429b07:	imul   eax,DWORD PTR [edx-0x659357bb],0xfb3f8036
  429b11:	scas   eax,DWORD PTR es:[edi]
  429b12:	xor    eax,0x66332ae8
  429b17:	das    
  429b18:	mov    ebx,0xfffe0868
  429b1d:	jmp    DWORD PTR [edx]
  429b1f:	mov    al,ds:0x337c429
  429b24:	dec    edx
  429b25:	mov    eax,0xffffe40b
  429b2a:	adc    cl,BYTE PTR [ebx+0x40403015]
  429b30:	sti    
  429b31:	xchg   ecx,esi
  429b33:	cs mov edi,0xa9299d43
  429b39:	sahf   
  429b3a:	xchg   ebx,eax
  429b3b:	pop    ebp
  429b3c:	ret    0xd3ff
  429b3f:	xor    eax,0x295d11d3
  429b44:	add    ah,0x91
  429b47:	sbb    edi,DWORD PTR [edi]
  429b49:	pop    edx
  429b4a:	in     al,0x6b
  429b4c:	jg     0x429b8b
  429b4e:	add    BYTE PTR [eax],al
  429b50:	in     eax,0x65
  429b52:	ret    0xaaff
  429b55:	in     eax,dx
  429b56:	fcom   DWORD PTR [ecx-0x1d]
  429b59:	push   eax
  429b5a:	dec    eax
  429b5b:	aas    
  429b5c:	popf   
  429b5d:	int    0x1e
  429b5f:	adc    eax,0xffbf3a81
  429b64:	or     dl,BYTE PTR [edi+0x47]
  429b67:	(bad)
  429b6a:	push   DWORD PTR [edx+edx*4-0x7d]
  429b6e:	cwde   
  429b6f:	stc    
  429b70:	jb     0x429b0f
  429b72:	add    al,0xf1
  429b75:	and    eax,0xe7512582
  429b7a:	sar    edi,0x5a
  429b7d:	fiadd  WORD PTR [edi]
  429b7f:	enter  0x6958,0xff
  429b83:	add    bl,dh
  429b85:	aam    0xf7
  429b87:	out    dx,eax
  429b88:	scas   eax,DWORD PTR es:[edi]
  429b89:	imul   edi,edi,0x59
  429b8c:	std    
  429b8d:	sbb    eax,DWORD PTR [ebx+0x3f]
  429b90:	popf   
  429b91:	call   0xdf97d914
  429b96:	sar    edi,0x22
  429b99:	ja     0x429b73
  429b9b:	push   ecx
  429b9c:	pop    ebx
  429b9d:	aam    0x47
  429b9f:	aas    
  429ba0:	popf   
  429ba1:	jne    0x429bc1
  429ba3:	adc    eax,0xffbf39f9
  429ba8:	or     BYTE PTR [esi+0x47],0xc5
  429bac:	pop    esi
  429bad:	sub    edi,edi
  429baf:	je     0x429b3b
  429bb1:	add    dl,cl
  429bb3:	rol    DWORD PTR [eax],cl
  429bb5:	add    ah,ah
  429bb7:	adc    eax,0x8edd88da
  429bbc:	loop   0x429b42
  429bbe:	add    BYTE PTR [esi-0x5c],0xc5
  429bc2:	rcl    BYTE PTR ds:0x3fd507ab,cl
  429bc8:	es add al,0x9c
  429bcb:	lods   al,BYTE PTR ds:[esi]
  429bcc:	mov    cl,0xf7
  429bce:	retf   0x28f0
  429bd1:	add    al,0x57
  429bd3:	(bad)  
  429bd4:	fld    QWORD PTR [edi+0x6a]
  429bd7:	add    ah,BYTE PTR [esi+0x38271bb7]
  429bdd:	mov    ch,0xcb
  429bdf:	cmp    ecx,edx
  429be1:	(bad)  
  429be2:	pop    edx
  429be3:	aas    
  429be4:	es add al,0x10
  429be7:	rcl    BYTE PTR [edx],cl
  429be9:	bound  esp,QWORD PTR [ebp+0x3f]
  429bec:	es add al,0xcf
  429bef:	adc    eax,0xc2a32fd4
  429bf4:	call   0x248d25d4
  429bf9:	lds    esp,FWORD PTR [edx-0x72]
  429bfc:	cli    
  429bfd:	sub    eax,DWORD PTR [ebp+0x17]
  429c00:	dec    edx
  429c01:	and    DWORD PTR [ecx],ebx
  429c03:	inc    edx
  429c04:	mov    ebp,0x2cf7140e
  429c09:	inc    edi
  429c0a:	add    BYTE PTR [edx],0x2b
  429c0d:	pop    es
  429c0e:	gs aas 
  429c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c11:	add    ebx,DWORD PTR [esp+ebp*4-0xfc508df]
  429c18:	test   al,0x3
  429c1a:	add    BYTE PTR [eax],al
  429c1c:	(bad)  
  429c1d:	stos   BYTE PTR es:[edi],al
  429c1e:	cmp    BYTE PTR [edi-0x409ffd26],dl
  429c24:	push   ss
  429c25:	adc    eax,0xc29b33dc
  429c2a:	call   0xffd0e00b
  429c2f:	scas   eax,DWORD PTR es:[edi]
  429c30:	inc    esi
  429c31:	add    eax,0xb29ea98c
  429c36:	cli    
  429c37:	cld    
  429c38:	dec    edx
  429c39:	add    al,0x40
  429c3b:	jmp    0xb6f001
  429c40:	sub    al,bh
  429c42:	sti    
  429c43:	cmp    BYTE PTR [ecx+edx*2-0x2a9dc8f3],ch
  429c4a:	call   DWORD PTR [edi]
  429c4c:	lods   al,BYTE PTR ds:[esi]
  429c4d:	push   ecx
  429c4e:	or     eax,0xffd56225
  429c53:	pop    ss
  429c54:	jl     0x429c25
  429c56:	aas    
  429c57:	lods   eax,DWORD PTR ds:[esi]
  429c58:	loope  0x429c6e
  429c5a:	cli    
  429c5b:	aam    0xc2
  429c5d:	inc    eax
  429c5e:	aas    
  429c5f:	jmp    0xa9c7cf21
  429c64:	sub    edx,DWORD PTR ds:0x7bbd2488
  429c6a:	inc    ebp
  429c6b:	jge    0x429cae
  429c6d:	dec    ebx
  429c6e:	mov    edi,0xe812281f
  429c73:	ficomp DWORD PTR [esi+0x625f0002]
  429c79:	loopne 0x429c82
  429c7b:	call   0x41949e8a
  429c80:	add    BYTE PTR [eax],al
  429c82:	and    ebx,esi
  429c84:	stc    
  429c85:	dec    esi
  429c86:	and    DWORD PTR [ecx+0x5a],eax
  429c89:	sub    esp,DWORD PTR [edx-0x695878fe]
  429c8f:	aas    
  429c90:	add    cl,BYTE PTR [ecx]
  429c92:	or     eax,0xde63ffc3
  429c97:	mov    es,WORD PTR ds:0xfab29672
  429c9d:	mov    eax,0xe1619396
  429ca2:	sahf   
  429ca3:	jnp    0x429c6f
  429ca5:	add    bh,bl
  429ca7:	es sti 
  429ca9:	add    BYTE PTR [ebx+0x25ec824c],ah
  429caf:	push   ecx
  429cb0:	jp     0x429d2d
  429cb2:	cld    
  429cb3:	push   DWORD PTR [ebx+0x4]
  429cb6:	mov    ah,0x0
  429cb8:	leave  
  429cb9:	ret    
  429cba:	ja     0x429d25
  429cbc:	repz add BYTE PTR [edx-0x7be8a49a],ch
  429cc3:	(bad)  
  429cc4:	addr16 or bl,0x3f
  429cc8:	sti    
  429cc9:	out    0x7d,eax
  429ccb:	shl    esi,1
  429ccd:	dec    DWORD PTR [edi-0x12]
  429cd0:	test   dh,dh
  429cd2:	js     0x429d0c
  429cd4:	add    BYTE PTR [esi],0x47
  429cd7:	imul   esi,edi,0xf7313100
  429cdd:	push   ecx
  429cde:	push   0xfffffff3
  429ce0:	dec    edi
  429ce1:	sbb    al,0x9
  429ce3:	mov    edi,0x2274
  429ce8:	dec    DWORD PTR [ecx-0x9]
  429ceb:	test   DWORD PTR [edx+edi*2],esi
  429cee:	adc    cl,BYTE PTR [ebx-0x7aa8d74]
  429cf4:	xchg   esi,eax
  429cf5:	dec    esi
  429cf6:	not    BYTE PTR [ecx+0x60]
  429cf9:	mov    al,al
  429cfb:	je     0x429d75
  429cfd:	and    BYTE PTR [ebp-0x8],0x74
  429d01:	mov    BYTE PTR [ebp-0x4],al
  429d04:	mov    edi,0x15ff5006
  429d09:	pop    es
  429d0a:	add    DWORD PTR [esi],0x2a
  429d0d:	hlt    
  429d0e:	dec    edi
  429d0f:	or     bh,cl
  429d11:	dec    ecx
  429d12:	repz pop esi
  429d14:	leave  
  429d15:	mov    esi,0x3fbd0573
  429d1a:	add    ebp,ebx
  429d1c:	pop    ds
  429d1d:	xor    BYTE PTR [ebx-0x7da68837],bh
  429d23:	in     al,dx
  429d24:	popf   
  429d25:	pop    edx
  429d26:	xchg   BYTE PTR [eax-0x5b],al
  429d29:	test   al,0xa8
  429d2b:	sti    
  429d2c:	popf   
  429d2d:	nop
  429d2e:	or     ecx,DWORD PTR [ebp+0x4fb11568]
  429d34:	cli    
  429d35:	jns    0x429cfe
  429d37:	test   ch,bl
  429d39:	mov    WORD PTR [edx],es
  429d3b:	jg     0x429cbd
  429d3d:	sbb    eax,0x355886ff
  429d42:	dec    esp
  429d43:	mov    edi,0x12b3c173
  429d48:	pop    ebp
  429d49:	sub    DWORD PTR [edi-0x4dffff91],esp
  429d4f:	jmp    0x452e8557
  429d54:	sbb    bh,bl
  429d56:	es pop ecx
  429d58:	mov    dl,dh
  429d5a:	sub    ecx,esi
  429d5c:	mov    dl,0xfa
  429d5e:	xor    DWORD PTR [ebp+0xb],eax
  429d61:	sti    
  429d62:	mov    BYTE PTR ds:0xa49d3fee,dh
  429d68:	push   ss
  429d69:	test   DWORD PTR [edx-0x5c792708],edx
  429d6f:	lock mov cl,0xfa
  429d72:	in     eax,dx
  429d73:	cmp    ecx,DWORD PTR [eax+0xa45f0c0]
  429d79:	mov    bl,0xe1
  429d7b:	inc    edi
  429d7c:	out    dx,eax
  429d7d:	xchg   BYTE PTR [ebx-0x32054ab6],ah
  429d83:	jecxz  0x429d0d
  429d85:	rcl    al,0x15
  429d88:	sbb    dh,BYTE PTR [ecx+edi*2+0x17]
  429d8c:	xchg   BYTE PTR [edx],al
  429d8e:	repz enter 0x2fae,0x18
  429d93:	fcom   QWORD PTR [edi-0x56ddd9f5]
  429d99:	dec    eax
  429d9b:	loopne 0x429d4b
  429d9d:	aas    
  429d9e:	and    BYTE PTR [ebx],al
  429da0:	sub    DWORD PTR [edi-0x4a1c8266],edx
  429da6:	pop    ss
  429da7:	mov    bl,0xe0
  429da9:	ror    BYTE PTR [edx+edi*4],cl
  429dac:	or     eax,edi
  429dae:	retf   0xa8f5
  429db1:	add    eax,DWORD PTR [eax]
  429db3:	add    BYTE PTR [edx],bl
  429db5:	dec    ecx
  429db6:	call   0x1bb8:0xe8ff38bd
  429dbd:	pop    ds
  429dbe:	cwde   
  429dbf:	mov    ah,BYTE PTR [eax-0x6]
  429dc2:	cmp    dh,BYTE PTR [ebp+0x1dd9b0fa]
  429dc8:	(bad)  
  429dc9:	jge    0x429da4
  429dcb:	xchg   edi,ecx
  429dcd:	xchg   esi,eax
  429dce:	and    al,BYTE PTR [ecx-0x7716f1c0]
  429dd4:	lahf   
  429dd5:	jg     0x429e03
  429dd7:	and    BYTE PTR [ecx+edx*1+0x3c],cl
  429ddb:	clc    
  429ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ddd:	pop    ecx
  429dde:	sbb    al,0xf4
  429de0:	dec    ebp
  429de1:	mov    eax,0x877ab4a1
  429de6:	test   eax,0xc859e98
  429deb:	and    BYTE PTR [ebp-0x784a1c83],bl
  429df1:	mov    dl,0xf0
  429df3:	mov    al,bl
  429df5:	push   cs
  429df6:	outs   dx,BYTE PTR ds:[esi]
  429df7:	adc    al,0x20
  429df9:	inc    edx
  429dfa:	std    
  429dfb:	cli    
  429dfc:	sbb    edi,edx
  429dfe:	(bad)  
  429dff:	sbb    al,0xcd
  429e01:	adc    DWORD PTR [eax+0x6e0a1bb3],edi
  429e07:	push   es
  429e08:	out    dx,eax
  429e09:	adc    DWORD PTR [ecx+0x6442820b],edi
  429e0f:	sbb    eax,0x29297696
  429e14:	aad    0x11
  429e16:	mov    ah,0xf7
  429e18:	add    BYTE PTR [eax],al
  429e1a:	aaa    
  429e1b:	xchg   edi,eax
  429e1c:	(bad)  
  429e1d:	fcom   DWORD PTR [ecx+0x43410b97]
  429e23:	or     al,0xfb
  429e25:	es adc al,0xa
  429e28:	test   DWORD PTR [esi],ebx
  429e2a:	xor    al,BYTE PTR ds:0xd2c4292e
  429e30:	xchg   BYTE PTR [esi+edx*4-0x5f07183f],ah
  429e37:	or     eax,0x879172fb
  429e3c:	bnd jl 0x429dd9
  429e3f:	loopne 0x429e17
  429e41:	add    ah,ch
  429e43:	xchg   DWORD PTR [edx],eax
  429e45:	sub    ecx,DWORD PTR ds:[eax+edx*2]
  429e49:	or     DWORD PTR [edx+ebp*1],esp
  429e4c:	xchg   edi,ebp
  429e4e:	or     BYTE PTR [eax+edx*2],cl
  429e51:	loope  0x429e76
  429e53:	cmp    DWORD PTR [ebx],ecx
  429e55:	pop    ebp
  429e56:	pop    ebp
  429e57:	mov    DWORD PTR [ebx],eax
  429e59:	push   ss
  429e5a:	cwde   
  429e5b:	mov    dl,0x7
  429e5d:	arpl   WORD PTR [ebp-0x47],bx
  429e60:	pop    edx
  429e61:	orps   xmm2,XMMWORD PTR [eax+0x10]
  429e65:	jmp    0x6b2f2655
  429e6a:	retf   0x4ef6
  429e6d:	aas    
  429e6e:	dec    eax
  429e6f:	test   al,0xef
  429e71:	neg    DWORD PTR [esi+0x10]
  429e74:	arpl   cx,bx
  429e76:	mov    eax,edx
  429e78:	call   DWORD PTR [eax+0x76fb27d2]
  429e7e:	add    BYTE PTR [eax],al
  429e80:	and    eax,0x45772f2b
  429e85:	sub    dh,BYTE PTR [ecx+eiz*8+0x15]
  429e89:	adc    BYTE PTR [ebp-0x46],dl
  429e8c:	mov    ecx,0x9ee9fc72
  429e91:	add    al,BYTE PTR [edi-0x53eef16]
  429e97:	add    ah,ah
  429e99:	and    eax,DWORD PTR [eax]
  429e9b:	add    BYTE PTR [ebx+edi*2-0x5],al
  429e9f:	imul   ebp,DWORD PTR [ebx+0x52],0x54c90f6
  429ea6:	add    BYTE PTR [eax],al
  429ea8:	scas   eax,DWORD PTR es:[edi]
  429ea9:	add    cl,BYTE PTR [esi+0x53]
  429eac:	mov    ebx,0x4010f93
  429eb1:	add    al,0x83
  429eb3:	add    ebp,DWORD PTR [ecx+0x40]
  429eb6:	not    DWORD PTR [ecx+0x2c]
  429eb9:	add    al,0xf
  429ebb:	inc    eax
  429ebc:	add    al,0x53
  429ebe:	not    BYTE PTR [eax]
  429ec0:	add    ebx,0x48493d74
  429ec6:	out    0x50,eax
  429ec8:	sti    
  429ec9:	adc    DWORD PTR [edi],ebp
  429ecb:	adc    eax,DWORD PTR [esi+eax*1+0x648c0b62]
  429ed2:	mov    BYTE PTR [ebp+0x8],al
  429ed5:	mov    ah,ch
  429ed7:	adc    bh,al
  429ed9:	ret    
  429eda:	pop    ebp
  429edb:	mov    DWORD PTR [ecx-0x17ba7d0e],eax
  429ee1:	jg     0x429eeb
  429ee3:	mov    eax,DWORD PTR [eax]
  429ee5:	add    al,bh
  429ee7:	jns    0x429f5e
  429ee9:	in     al,dx
  429eea:	push   ecx
  429eeb:	mov    eax,ds:0x876068a4
  429ef0:	inc    eax
  429ef1:	add    ah,dl
  429ef3:	mov    eax,ds:0x5b491f6
  429ef8:	add    BYTE PTR [eax],al
  429efa:	cmovb  esi,edi
  429efd:	mov    ebp,DWORD PTR [ebx+edx*2-0xa]
  429f01:	push   ecx
  429f02:	jl     0x429f50
  429f04:	pop    ecx
  429f05:	mov    esi,DWORD PTR [edi]
  429f07:	dec    edi
  429f08:	enter  0x21c3,0x80
  429f0c:	in     al,dx
  429f0d:	sub    eax,0xe
  429f10:	dec    edx
  429f11:	push   esi
  429f12:	popf   
  429f13:	push   eax
  429f14:	inc    ecx
  429f15:	inc    ebp
  429f16:	dec    edx
  429f17:	sbb    DWORD PTR [edi],esp
  429f19:	dec    ebx
  429f1a:	inc    edx
  429f1b:	enter  0x8716,0x55
  429f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f20:	cmp    dh,BYTE PTR [esp+edi*4-0x5a]
  429f24:	shl    bh,0xcd
  429f27:	loopne 0x429f19
  429f29:	xor    ecx,DWORD PTR [esi-0x5a9a00a7]
  429f2f:	inc    ecx
  429f30:	push   ss
  429f31:	jne    0x429ed8
  429f33:	jg     0x429ec1
  429f35:	inc    ebp
  429f36:	cmc    
  429f37:	push   eax
  429f39:	cmp    ebp,DWORD PTR [esi+0x6088ff59]
  429f3f:	or     DWORD PTR [eax-0x75ae9640],eax
  429f45:	call   FWORD PTR [ecx]
  429f47:	outs   dx,BYTE PTR ds:[esi]
  429f48:	pop    ss
  429f49:	push   ecx
  429f4a:	add    BYTE PTR [eax],al
  429f4c:	push   ds
  429f4d:	xor    eax,0x9dd986ef
  429f52:	(bad)  
  429f53:	out    0xf8,eax
  429f55:	jge    0x429fb7
  429f57:	dec    edi
  429f58:	add    BYTE PTR [eax+0x6f],al
  429f5b:	call   0x8541b8fd
  429f60:	fst    st(5)
  429f62:	or     ah,BYTE PTR [edx+0x1e]
  429f65:	(bad)  
  429f66:	sbb    edi,ebx
  429f68:	xor    BYTE PTR ds:0x19a24541,ah
  429f6e:	mov    BYTE PTR [ebp-0x7b],al
  429f71:	int3   
  429f72:	push   ss
  429f73:	adc    eax,0xffbf08d5
  429f78:	or     bh,bh
  429f7a:	push   ss
  429f7b:	add    BYTE PTR [eax],cl
  429f7d:	adc    al,0x8a
  429f7f:	dec    edi
  429f81:	mov    WORD PTR [esi-0x498f51f9],gs
  429f87:	pop    ecx
  429f88:	push   ss
  429f89:	pop    ecx
  429f8a:	mov    edx,0xed035fc8
  429f8f:	add    esi,eax
  429f91:	jns    0x429fe0
  429f93:	mov    ah,0x1b
  429f95:	add    eax,0xb446c864
  429f9a:	mov    dl,0x1a
  429f9c:	in     eax,dx
  429f9d:	call   0xa066:0x6b1436b
  429fa4:	add    ebx,DWORD PTR ss:[esi+0x1]
  429fa8:	iret   
  429fa9:	or     eax,0xc81a0b99
  429fae:	and    al,0x4c
  429fb0:	add    BYTE PTR [eax],al
  429fb2:	pop    edx
  429fb3:	jp     0x429fa6
  429fb5:	(bad)  
  429fb6:	loopne 0x429f6c
  429fb8:	imul   ecx,DWORD PTR [ecx+edx*4-0xf],0x65
  429fbd:	inc    ebx
  429fbe:	cdq    
  429fbf:	jns    0x429f7a
  429fc1:	fisubr WORD PTR [esi-0x1a]
  429fc4:	lock (bad) 
  429fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fc7:	shl    BYTE PTR [ebp+0x43],0xa1
  429fcb:	leave  
  429fcc:	pop    ss
  429fcd:	xchg   ebp,eax
  429fce:	repnz shr BYTE PTR [eax-0x16f8e746],1
  429fd5:	push   ebx
  429fd6:	pushf  
  429fd7:	sbb    ecx,edx
  429fd9:	scas   eax,DWORD PTR es:[edi]
  429fda:	and    ebx,DWORD PTR [edi]
  429fdc:	push   0xe9039128
  429fe1:	add    ecx,DWORD PTR [edi-0x2f]
  429fe4:	mov    dl,0x8d
  429fe6:	pop    eax
  429fe7:	repnz in eax,dx
  429fe9:	inc    ecx
  429fea:	das    
  429feb:	mov    edi,0x96a61c65
  429ff0:	sti    
  429ff1:	aam    0x68
  429ff3:	dec    ebx
  429ff4:	xchg   ecx,eax
  429ff5:	add    eax,0x139a029d
  429ffa:	hlt    
  429ffb:	xor    BYTE PTR [ecx+0x70029d05],al
  42a001:	mov    edi,0x18147b72
  42a006:	sbb    al,bh
  42a008:	(bad)  
  42a009:	fcomp  DWORD PTR [esi+0x10]
  42a00c:	fcom   st(2)
  42a00e:	fidivr WORD PTR [edi+0x4d]
  42a011:	popa   
  42a012:	inc    eax
  42a013:	inc    edx
  42a014:	push   eax
  42a015:	mov    bh,0x0
  42a017:	add    BYTE PTR [esi+edi*2],cl
  42a01a:	test   DWORD PTR [ebp-0x59],ebx
  42a01d:	or     ebx,edi
  42a01f:	mov    ecx,0x3d85400c
  42a024:	xchg   edi,eax
  42a025:	or     ebx,edi
  42a027:	call   0x6042a2ca
  42a02c:	ror    BYTE PTR [edx],cl
  42a02e:	cli    
  42a02f:	test   BYTE PTR cs:[ecx],cl
  42a032:	adc    eax,0xffcd0a59
  42a037:	imul   esi,DWORD PTR [ecx+0x4cc37503],0xa5dd7508
  42a041:	xchg   edi,eax
  42a042:	pop    es
  42a043:	sahf   
  42a044:	xchg   ebp,eax
  42a045:	not    DWORD PTR [edi]
  42a047:	xlat   BYTE PTR ds:[ebx]
  42a048:	fimul  WORD PTR [esi+esi*1]
  42a04b:	das    
  42a04c:	pop    es
  42a04d:	cmc    
  42a04e:	sub    BYTE PTR [edx+ebx*4-0x80ebafd],ah
  42a055:	xchg   ebp,eax
  42a056:	or     ebx,DWORD PTR [esi+0x24]
  42a059:	fnstsw WORD PTR [edi+0xaf91a10]
  42a05f:	jne    0x42a0bf
  42a061:	test   al,0xc8
  42a063:	stos   DWORD PTR es:[edi],eax
  42a064:	mov    ds:0x81a92e02,al
  42a069:	adc    DWORD PTR [ebp+0x62],edx
  42a06c:	xor    BYTE PTR [ebx+0x7a6c252],0x75
  42a073:	stc    
  42a074:	sub    DWORD PTR [esi-0x7a461f9],ecx
  42a07a:	gs call 0xc665a080
  42a080:	cli    
  42a081:	cmp    DWORD PTR [ecx+0x2300faaf],esi
  42a087:	jmp    0x42a00c
  42a089:	shr    BYTE PTR [eax+0x5],0x7b
  42a08d:	jge    0x42a00f
  42a08f:	add    BYTE PTR [ebp-0x1e],dh
  42a092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a093:	add    BYTE PTR [edi-0x37],dl
  42a096:	xchg   BYTE PTR [ebx],al
  42a098:	add    BYTE PTR [edx],dh
  42a09a:	test   dh,bl
  42a09c:	out    dx,al
  42a09d:	push   0x34
  42a09f:	jmp    0x42a114
  42a0a1:	and    al,0x44
  42a0a3:	jmp    0x42a118
  42a0a5:	and    al,0x54
  42a0a7:	jmp    0x42a11c
  42a0a9:	and    al,0x54
  42a0ab:	jmp    0x42a0c1
  42a0ad:	and    BYTE PTR [edx+0x40],cl
  42a0b0:	sti    
  42a0b1:	cmp    bh,al
  42a0b3:	sub    eax,DWORD PTR [edi]
  42a0b5:	sets   BYTE PTR [edi-0x4fbf347]
  42a0bc:	scas   al,BYTE PTR es:[edi]
  42a0bd:	pop    es
  42a0be:	dec    edx
  42a0bf:	pop    esi
  42a0c0:	add    DWORD PTR [edx-0xb],ebp
  42a0c3:	dec    edi
  42a0c4:	not    BYTE PTR ds:0x3b1c9c
  42a0ca:	outs   dx,DWORD PTR ds:[esi]
  42a0cb:	out    dx,eax
  42a0cc:	jp     0x42a0cc
  42a0ce:	repz jl 0x42a0ef
  42a0d1:	xor    esi,DWORD PTR [ecx+eiz*2+0x4c63f7a]
  42a0d8:	xchg   ebp,eax
  42a0d9:	ror    BYTE PTR [edi+edi*2-0x39c80b20],0x1b
  42a0e1:	push   eax
  42a0e2:	add    BYTE PTR [eax],al
  42a0e4:	mov    ebx,DWORD PTR [esi+esi*8+0x15]
  42a0e8:	cld    
  42a0e9:	adc    DWORD PTR [ebx],edi
  42a0eb:	add    BYTE PTR [ecx],bh
  42a0ed:	(bad)  
  42a0ee:	jae    0x42a0fa
  42a0f0:	mov    dh,bl
  42a0f2:	adc    al,0x1c
  42a0f4:	retf   0xfb3f
  42a0f7:	adc    BYTE PTR [edx-0xd],0x82
  42a0fb:	(bad)  
  42a0fc:	sar    BYTE PTR [edi-0x7a6274ac],cl
  42a102:	mov    ch,0x50
  42a104:	out    dx,al
  42a105:	aam    0x99
  42a107:	rcr    BYTE PTR [ebp+0x11],0x2
  42a10b:	mov    bl,0x55
  42a10d:	dec    eax
  42a10e:	adc    cl,BYTE PTR [ebp+0x52af21e0]
  42a114:	retf   0x909c
  42a117:	pop    es
  42a118:	and    al,0x26
  42a11a:	adc    ecx,DWORD PTR [ecx+0x1512a1d0]
  42a120:	adc    DWORD PTR [esi],ecx
  42a122:	mov    edi,0x8fd919ff
  42a127:	pop    es
  42a128:	push   ds
  42a129:	rcl    DWORD PTR [edx],1
  42a12b:	jmp    0x41ba4f
  42a130:	shl    DWORD PTR [eax+0xb360790],cl
  42a136:	xchg   BYTE PTR [edx-0x5f],al
  42a139:	cwde   
  42a13a:	sbb    edi,esi
  42a13c:	mov    DWORD PTR [ecx],ecx
  42a13e:	adc    dh,BYTE PTR [edx-0x53]
  42a141:	hlt    
  42a142:	mov    DWORD PTR [edi],edx
  42a144:	cmc    
  42a145:	dec    eax
  42a146:	in     al,0xf9
  42a148:	add    BYTE PTR [eax],al
  42a14a:	cli    
  42a14b:	xchg   ecx,eax
  42a14c:	sar    bl,0x6
  42a14f:	sub    BYTE PTR [esi-0x8],bh
  42a152:	xchg   edx,eax
  42a153:	mov    es,WORD PTR [ebx+edi*8]
  42a156:	imul   ebp,DWORD PTR [ecx],0x12
  42a159:	jb     0x42a110
  42a15b:	xor    esi,edx
  42a15d:	and    bl,dl
  42a15f:	sub    ecx,DWORD PTR [ebp+eax*2+0x1b8c9fc5]
  42a166:	xchg   BYTE PTR [eax+edx*4],dh
  42a169:	leave  
  42a16a:	mov    edx,0x88fb0bcd
  42a16f:	adc    ebp,ebp
  42a171:	aas    
  42a172:	popf   
  42a173:	mov    al,ds:0x6b1efbbf
  42a178:	adc    dh,BYTE PTR [edi]
  42a17a:	bound  eax,QWORD PTR [ebx]
  42a17c:	sbb    eax,0x30b1a09
  42a181:	(bad)  
  42a182:	in     eax,0x4
  42a184:	sbb    ebx,0x8a8a0a87
  42a18a:	ins    DWORD PTR es:[edi],dx
  42a18b:	jle    0x42a191
  42a18d:	sbb    al,0x18
  42a18f:	or     dh,ch
  42a191:	repz jmp 0x42a19c
  42a194:	jb     0x42a126
  42a196:	fwait
  42a197:	mov    al,ds:0x2258b65f
  42a19c:	or     BYTE PTR [edi],dl
  42a19e:	push   esi
  42a19f:	or     ch,BYTE PTR [esi+0x13]
  42a1a2:	inc    esi
  42a1a3:	nop
  42a1a4:	push   esp
  42a1a5:	sub    ebx,DWORD PTR [ecx]
  42a1a7:	jecxz  0x42a1f3
  42a1a9:	push   ss
  42a1aa:	ss nop
  42a1ac:	inc    eax
  42a1ad:	sub    eax,DWORD PTR [eax]
  42a1af:	add    BYTE PTR [ecx+0x22163ae2],dh
  42a1b5:	inc    ecx
  42a1b6:	xchg   ebx,eax
  42a1b7:	mov    dh,0xcb
  42a1b9:	cmp    esp,DWORD PTR [edi]
  42a1bb:	call   FWORD PTR [edx]
  42a1bd:	mov    al,0xb9
  42a1bf:	mov    dl,BYTE PTR ds:0x80fe51fa
  42a1c5:	add    BYTE PTR [edi+0x4],bh
  42a1c8:	ins    DWORD PTR es:[edi],dx
  42a1c9:	or     esp,esi
  42a1cb:	sbb    edx,DWORD PTR [eax-0x1275173e]
  42a1d1:	test   ebx,edi
  42a1d3:	adc    eax,0x43b5c571
  42a1d8:	jg     0x42a15f
  42a1da:	stos   BYTE PTR es:[edi],al
  42a1db:	add    DWORD PTR [esi+0x53cca96f],esp
  42a1e1:	and    dl,ch
  42a1e3:	sbb    ebp,0x6cad38e6
  42a1e9:	or     esp,esi
  42a1eb:	seto   dl
  42a1ee:	call   0xebd27f71
  42a1f3:	test   eax,0xb5ffb09d
  42a1f8:	mov    dl,0x41
  42a1fa:	adc    eax,0xc07fa129
  42a1ff:	sbb    eax,0xf5150c96
  42a204:	js     0x42a1cf
  42a206:	(bad)  
  42a207:	ds adc al,0xa
  42a20a:	sti    
  42a20b:	hlt    
  42a20c:	jb     0x42a201
  42a20e:	aas    
  42a20f:	jmp    0xc557ae55
  42a214:	add    BYTE PTR [eax],al
  42a216:	js     0x42a1e1
  42a218:	jmp    FWORD PTR [ecx-0x25]
  42a21b:	or     eax,0xac9b625b
  42a220:	mov    esi,0x23961bbc
  42a225:	ins    DWORD PTR es:[edi],dx
  42a226:	push   ds
  42a227:	push   ss
  42a228:	adc    ah,ch
  42a22a:	sahf   
  42a22b:	add    dl,BYTE PTR [edx-0x4a]
  42a22e:	and    eax,0x5edcafc7
  42a233:	or     DWORD PTR [esi],ebp
  42a235:	aaa    
  42a236:	je     0x42a1d7
  42a238:	mov    BYTE PTR [esi+ecx*1-0x4e3a4b36],bh
  42a23f:	or     eax,0x80549ffb
  42a244:	inc    ebp
  42a245:	cdq    
  42a246:	adc    eax,0xa981857e
  42a24b:	or     eax,0x8f5dd2fb
  42a250:	pop    es
  42a251:	jb     0x42a22d
  42a253:	mov    WORD PTR [eax-0xdfbd54],cs
  42a259:	pop    edi
  42a25a:	sub    bl,BYTE PTR [ebp-0x1617eaf]
  42a260:	(bad)  
  42a261:	call   0xe2a71981
  42a266:	mov    cl,0xd
  42a268:	push   ecx
  42a269:	cmp    DWORD PTR [eax-0x2108e811],ebp
  42a26f:	or     BYTE PTR [eax+0x7a568100],cl
  42a275:	clc    
  42a276:	mov    ch,0x70
  42a278:	dec    edi
  42a279:	push   esi
  42a27a:	add    BYTE PTR [eax],al
  42a27c:	test   BYTE PTR [ecx-0x10b09b7b],al
  42a282:	not    BYTE PTR [eax+0x3b]
  42a285:	jns    0x42a2ee
  42a287:	call   DWORD PTR [ecx+0x74401124]
  42a28d:	sub    eax,DWORD PTR [eax+ebp*2-0x6f]
  42a291:	das    
  42a292:	test   BYTE PTR [ebp+0x74],0x7b
  42a296:	inc    ebp
  42a297:	jo     0x42a2f8
  42a299:	mov    DWORD PTR [ebx-0x1],esp
  42a29c:	jmp    0x42a28c
  42a29e:	imul   esp,DWORD PTR [esi+0x567748bf],0x6c857d12
  42a2a8:	jmp    0x42a298
  42a2aa:	not    BYTE PTR [esi-0x47]
  42a2ad:	mov    BYTE PTR [ebx-0x1],ah
  42a2b0:	jmp    0x42a2a0
  42a2b2:	dec    edi
  42a2b3:	push   esi
  42a2b4:	or     DWORD PTR [eax-0x1194009d],0xfffffff9
  42a2bb:	push   DWORD PTR [esp+eax*1]
  42a2be:	mov    DWORD PTR [ebp-0x91124],ebx
  42a2c4:	mov    ebx,0xf5f87ad6
  42a2c9:	dec    BYTE PTR [esp+ebp*2+0x5ff6eeab]
  42a2d0:	dec    edx
  42a2d1:	add    ebp,0x74
  42a2d4:	lods   eax,DWORD PTR ds:[esi]
  42a2d5:	rol    DWORD PTR [ebx],0x0
  42a2d8:	adc    DWORD PTR [ebx-0x14],edi
  42a2db:	sbb    DWORD PTR [eax+0xff],0x8252c400
  42a2e5:	pop    ebp
  42a2e6:	int3   
  42a2e7:	dec    ecx
  42a2e8:	xor    al,0x4f
  42a2eb:	cmp    DWORD PTR [edi],eax
  42a2ed:	lea    ebx,[ebp-0x4b80fb21]
  42a2f3:	fst    DWORD PTR [edx-0x67a5e788]
  42a2f9:	pop    ss
  42a2fa:	outs   dx,BYTE PTR ds:[esi]
  42a2fb:	imul   ecx,DWORD PTR [ebx-0x18],0xffffff9e
  42a2ff:	sbb    edi,edi
  42a301:	repnz mov fs,WORD PTR [eax+esi*4+0x1c4c0407]
  42a309:	dec    DWORD PTR [edx-0x7aba83e7]
  42a30f:	mov    ds:0x1e07fbb8,al
  42a314:	mov    dl,0x8c
  42a316:	sbb    BYTE PTR [ecx-0x169504f2],al
  42a31c:	jl     0x42a2ab
  42a31e:	imul   ecx,DWORD PTR [edi-0x18ba04f2],0x9652f9ee
  42a328:	adc    eax,0x4594b074
  42a32d:	sar    DWORD PTR ds:0xb0faaf1b,0x9
  42a334:	add    BYTE PTR [ebp-0x4f140cf],0xcd
  42a33b:	mov    cl,0xd8
  42a33d:	sbb    ah,BYTE PTR [ebx]
  42a33f:	rcl    dl,1
  42a341:	mov    edi,0x8cfb5ed6
  42a346:	add    BYTE PTR [eax],al
  42a348:	pusha  
  42a349:	loope  0x42a335
  42a34b:	mov    edi,0x65b3dabe
  42a350:	popf   
  42a351:	cmp    edi,0xffffff8c
  42a354:	and    ch,ch
  42a356:	or     eax,0x9d68f2fb
  42a35b:	(bad)  
  42a35c:	jmp    0x42a38b
  42a35e:	dec    edi
  42a35f:	adc    eax,0xc088195d
  42a364:	push   eax
  42a365:	sub    eax,0x27a4b97
  42a36a:	jmp    0x52f6972
  42a36f:	cli    
  42a370:	add    BYTE PTR [edx],0x66
  42a373:	cmp    esi,DWORD PTR [esi-0xcc2d259]
  42a379:	cmc    
  42a37a:	call   0x35494905
  42a37f:	push   ss
  42a380:	jb     0x42a392
  42a382:	mov    dl,0xd7
  42a384:	dec    ebx
  42a385:	js     0x42a3eb
  42a387:	pop    ss
  42a388:	xchg   edi,eax
  42a389:	push   es
  42a38a:	mov    ds:0x9a06c81b,al
  42a38f:	adc    bl,BYTE PTR [ecx]
  42a391:	inc    ebx
  42a392:	sbb    al,0xfc
  42a394:	fadd   QWORD PTR [ecx+0x1b03048b]
  42a39a:	mov    ?,WORD PTR [ecx]
  42a39c:	and    bh,bh
  42a39e:	xor    eax,0x5db0491e
  42a3a3:	pop    ds
  42a3a4:	push   esi
  42a3a5:	nop
  42a3a6:	(bad)  
  42a3a8:	adc    bl,BYTE PTR [ecx+0x12e8]
  42a3ae:	sar    dl,1
  42a3b0:	test   al,0x1b
  42a3b2:	jnp    0x42a3b9
  42a3b4:	push   edx
  42a3b5:	adc    bh,BYTE PTR [edx-0x7168b5f6]
  42a3bb:	ja     0x42a371
  42a3bd:	dec    ebp
  42a3bf:	cwde   
  42a3c0:	call   0xe5030378
  42a3c5:	sbb    DWORD PTR [ebp-0x57ed16fe],0x42
  42a3cc:	cld    
  42a3cd:	ret    
  42a3ce:	or     ah,BYTE PTR [edi-0x7efd04da]
  42a3d4:	adc    edx,DWORD PTR [edx]
  42a3d6:	jno    0x42a3ca
  42a3d8:	jle    0x42a3df
  42a3da:	dec    edi
  42a3db:	add    eax,0xc2901bdc
  42a3e0:	call   0x328b9e
  42a3e5:	aam    0xd4
  42a3e7:	vmovaps YMMWORD PTR [edi+0x2b3e0251],ymm3
  42a3ef:	repz gs jmp 0x42a401
  42a3f3:	or     DWORD PTR ds:0xffc5b2d1,edx
  42a3f9:	popa   
  42a3fa:	mov    eax,ds:0x5c6fa85
  42a3ff:	loope  0x42a42f
  42a401:	test   eax,0xeb3984f7
  42a406:	popf   
  42a407:	outs   dx,DWORD PTR ds:[esi]
  42a408:	shl    BYTE PTR [ecx],0x18
  42a40b:	and    dh,ah
  42a40d:	push   0xffffffe1
  42a40f:	out    0x4f,al
  42a411:	aaa    
  42a412:	add    BYTE PTR [eax],al
  42a414:	inc    esp
  42a415:	or     BYTE PTR ds:0xffc5729d,dl
  42a41b:	arpl   cx,bx
  42a41d:	mov    es,WORD PTR ds:0x1bef8c1e
  42a423:	xlat   BYTE PTR ds:[ebx]
  42a424:	pop    esi
  42a425:	add    eax,0x7daca67e
  42a42a:	ret    
  42a42b:	push   cs
  42a42c:	fsubr  DWORD PTR [edi-0x4df1aa7a]
  42a432:	dec    esi
  42a433:	mov    bh,0xc1
  42a435:	iret   
  42a436:	mov    ebx,0x63055efb
  42a43b:	shl    DWORD PTR [edx+0x4445ffc2],0x8
  42a442:	rcl    cl,cl
  42a444:	sbb    dh,BYTE PTR [esi+0x40]
  42a447:	jmp    0x11c975f9
  42a44c:	lods   al,BYTE PTR ds:[esi]
  42a44d:	xor    BYTE PTR [edi-0x74],bh
  42a450:	xchg   esi,eax
  42a451:	add    al,BYTE PTR [edi+0x742d1a19]
  42a457:	shl    DWORD PTR [ebx],0x10
  42a45a:	je     0x42a421
  42a45c:	jae    0x42a41d
  42a45e:	sti    
  42a45f:	add    BYTE PTR [edi+eiz*2],al
  42a462:	sti    
  42a463:	(bad)  
  42a464:	imul   ecx,DWORD PTR [ecx],0xbe49d3f6
  42a46a:	je     0x42a481
  42a46c:	ret    
  42a46d:	imul   eax,DWORD PTR [edi],0xffffff8b
  42a470:	sti    
  42a471:	icebp  
  42a472:	je     0x42a470
  42a474:	in     al,dx
  42a475:	psubq  mm7,mm7
  42a478:	add    BYTE PTR [eax],al
  42a47a:	(bad)  
  42a47b:	icebp  
  42a47c:	je     0x42a47a
  42a47e:	cmp    eax,0xafff33c
  42a483:	xchg   BYTE PTR [eax+edi*8-0x7e],al
  42a487:	push   edi
  42a488:	enter  0x7cc2,0x0
  42a48c:	push   ebp
  42a48d:	mov    edx,DWORD PTR [eax+0x7f]
  42a490:	in     al,dx
  42a491:	dec    esp
  42a492:	(bad)  
  42a493:	dec    eax
  42a494:	xor    BYTE PTR ds:0x3b0de0,0xbb
  42a49b:	test   edi,esi
  42a49d:	push   0x3f83ec
  42a4a2:	and    ebp,DWORD PTR [ebx]
  42a4a4:	mov    esi,0xfb121045
  42a4a9:	inc    DWORD PTR [ebx+esi*8-0x33]
  42a4ad:	push   0x3f8388
  42a4b2:	ret    
  42a4b3:	sub    al,BYTE PTR [edx+0x67c9e3d8]
  42a4b9:	int3   
  42a4ba:	sar    BYTE PTR [edi],0xfb
  42a4bd:	dec    BYTE PTR [ebx-0x1c0fbb79]
  42a4c3:	leave  
  42a4c4:	sub    dh,dh
  42a4c6:	lods   eax,DWORD PTR ds:[esi]
  42a4c7:	cmp    al,0xe3
  42a4c9:	cmp    esi,DWORD PTR [edx+0x5338402]
  42a4cf:	add    BYTE PTR [eax],al
  42a4d1:	cmp    DWORD PTR [ecx],ebp
  42a4d3:	lock push es
  42a4d5:	test   dh,ch
  42a4d7:	add    BYTE PTR [eax],al
  42a4d9:	add    BYTE PTR [ebp+0xb4930],bl
  42a4df:	add    BYTE PTR [ecx],bl
  42a4e1:	cmp    dh,bh
  42a4e3:	call   FWORD PTR [ebp+0x4df3c18e]
  42a4e9:	xchg   esi,eax
  42a4ea:	sar    ebx,0x6d
  42a4ed:	mov    ds:0x8f24f791,al
  42a4f2:	or     cl,BYTE PTR [ecx-0x30f4dab0]
  42a4f8:	sbb    BYTE PTR [edx-0x5],bl
  42a4fb:	test   BYTE PTR [edi+0x26ffff1a],bl
  42a501:	fist   WORD PTR [edi]
  42a503:	aaa    
  42a504:	jecxz  0x42a512
  42a506:	xor    ebx,0xffffff9d
  42a509:	sbb    edi,edi
  42a50b:	cmp    BYTE PTR [eax],dl
  42a50d:	dec    esi
  42a50e:	sti    
  42a50f:	add    DWORD PTR [ebx+0x75ffff19],0x60
  42a516:	lock stc 
  42a518:	adc    BYTE PTR [eax+0x1c5b372b],0x83
  42a51f:	fistp  DWORD PTR [ebp+0x6a4eff19]
  42a525:	push   es
  42a526:	adc    edi,ebx
  42a528:	call   0x4d97afb2
  42a52d:	xchg   esi,eax
  42a52e:	inc    ebx
  42a52f:	jne    0x42a4c5
  42a531:	push   edx
  42a532:	cwde   
  42a533:	sti    
  42a534:	shl    ebp,cl
  42a536:	xor    BYTE PTR [edi-0x73],0xa4
  42a53a:	sar    dl,cl
  42a53c:	mov    al,0x1d
  42a53e:	or     dl,BYTE PTR ds:0xffbf06ed
  42a544:	add    BYTE PTR [eax],al
  42a546:	and    ecx,ebx
  42a548:	xchg   edi,eax
  42a549:	push   es
  42a54a:	fistp  DWORD PTR [eax+0x46d64c42]
  42a550:	or     ebp,DWORD PTR [esi+0x5]
  42a553:	sar    al,0x66
  42a556:	adc    eax,DWORD PTR [edx]
  42a558:	mov    ch,0x99
  42a55a:	xchg   edx,eax
  42a55b:	call   DWORD PTR ds:0x30bd29b6
  42a561:	mov    ah,0xfa
  42a563:	loop   0x42a550
  42a565:	or     eax,0xf8c7ee6
  42a56a:	popf   
  42a56b:	iret   
  42a56c:	repnz mov dl,0xc2
  42a56f:	sub    dl,ch
  42a571:	or     eax,0xf73c8d6
  42a576:	xchg   esi,eax
  42a577:	jge    0x42a5e9
  42a579:	add    ebx,DWORD PTR [ebp-0x4d3793fe]
  42a57f:	mov    cl,0x15
  42a581:	divps  xmm5,XMMWORD PTR [ebx-0x7d6ff0ce]
  42a588:	fcmovnb st,st(3)
  42a58a:	mov    ds:0xc98a97d,al
  42a58f:	cmp    al,0x3c
  42a591:	or     al,0x9
  42a593:	je     0x42a5f5
  42a595:	cwde   
  42a596:	push   edx
  42a597:	cmp    al,0x1c
  42a599:	and    BYTE PTR [edi],cl
  42a59b:	cmp    ecx,DWORD PTR [edi]
  42a59d:	hlt    
  42a59e:	add    ah,bh
  42a5a0:	fs ret 
  42a5a2:	jb     0x42a533
  42a5a4:	and    edx,DWORD PTR [eax-0x33]
  42a5a7:	jmp    0x264:0xef9e
  42a5ae:	outs   dx,BYTE PTR ds:[esi]
  42a5af:	enter  0x6e12,0xa9
  42a5b3:	out    dx,eax
  42a5b4:	pop    edi
  42a5b5:	inc    edi
  42a5b6:	in     al,0x33
  42a5b8:	mov    eax,ds:0x1a03e902
  42a5bd:	dec    eax
  42a5be:	mov    eax,ds:0x601efa9a
  42a5c3:	(bad)  
  42a5c4:	cdq    
  42a5c5:	into   
  42a5c6:	pop    ebp
  42a5c7:	enter  0x6df2,0x29
  42a5cb:	out    dx,eax
  42a5cc:	adc    DWORD PTR [eax+0x4d],edx
  42a5cf:	jl     0x42a63a
  42a5d1:	pop    es
  42a5d2:	add    BYTE PTR ds:0x5cb847a3,bl
  42a5d8:	aad    0xb9
  42a5da:	dec    edi
  42a5db:	je     0x42a5b2
  42a5dd:	(bad)  [edi+0x1e]
  42a5e0:	adc    eax,0xf69cfafa
  42a5e5:	cld    
  42a5e6:	push   esp
  42a5e7:	add    DWORD PTR ds:0x96ac86c3,edx
  42a5ed:	jbe    0x42a5f6
  42a5ef:	jb     0x42a5c7
  42a5f1:	push   ecx
  42a5f2:	sti    
  42a5f3:	cwde   
  42a5f4:	(bad)  
  42a5f5:	mov    dh,BYTE PTR [ecx+esi*8-0x5c]
  42a5f9:	or     al,0x87
  42a5fb:	and    DWORD PTR [ebx],ecx
  42a5fd:	push   esp
  42a5fe:	das    
  42a5ff:	mov    al,0xee
  42a601:	xor    dh,cl
  42a603:	cmp    ebp,ecx
  42a605:	cld    
  42a606:	push   edx
  42a607:	cmc    
  42a608:	and    eax,0x9fd2f847
  42a60d:	xor    eax,eax
  42a60f:	push   ds
  42a610:	add    BYTE PTR [eax],al
  42a612:	dec    ebx
  42a613:	pop    eax
  42a614:	leave  
  42a615:	stos   DWORD PTR es:[edi],eax
  42a616:	xchg   ecx,eax
  42a617:	add    DWORD PTR [edx+eiz*2-0x43],edx
  42a61b:	mov    DWORD PTR [ebp+esi*8+0x1f],eax
  42a61f:	out    dx,al
  42a620:	pop    es
  42a621:	jmp    0x42a5c1
  42a623:	add    cl,BYTE PTR [edi+0x3f]
  42a626:	hlt    
  42a627:	repz mov al,cs:0x1e100293
  42a62e:	add    eax,0x3da97f51
  42a633:	push   ecx
  42a634:	sti    
  42a635:	cld    
  42a636:	push   esi
  42a637:	mov    es,WORD PTR [ecx+esi*2-0x46050266]
  42a63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a63f:	jl     0x42a655
  42a641:	jmp    0xde022de4
  42a646:	jmp    0xa6281fd2
  42a64b:	inc    ebp
  42a64c:	or     BYTE PTR [eax],al
  42a64e:	test   eax,0xbf3302bf
  42a653:	(bad)  
  42a655:	add    al,0x81
  42a657:	inc    esi
  42a658:	je     0x42a67e
  42a65a:	jg     0x42a623
  42a65c:	push   es
  42a65d:	jmp    eax
  42a65f:	ins    BYTE PTR es:[edi],dx
  42a660:	lea    eax,[ebp-0x8ee44]
  42a666:	xor    al,0x1d
  42a668:	stos   DWORD PTR es:[edi],eax
  42a669:	push   ebp
  42a66a:	call   0x81de:0x60c0850f
  42a671:	inc    edi
  42a672:	int3   
  42a673:	jg     0x42a6bc
  42a675:	or     BYTE PTR [eax],al
  42a677:	add    BYTE PTR [edi],al
  42a679:	push   cs
  42a67a:	push   eax
  42a67b:	add    al,0xf
  42a67d:	sub    eax,0xde6edc6a
  42a682:	push   edi
  42a683:	push   ecx
  42a684:	fcmovnbe st,st(7)
  42a686:	div    BYTE PTR [edx+0x15f70687]
  42a68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a68d:	icebp  
  42a68e:	cmp    al,BYTE PTR [eax]
  42a690:	jecxz  0x42a6be
  42a692:	adc    eax,eax
  42a694:	pop    es
  42a695:	and    al,0xf6
  42a697:	add    DWORD PTR [edx+eax*1+0x57],0x5e
  42a69c:	scas   eax,DWORD PTR es:[edi]
  42a69d:	cmp    edi,DWORD PTR [edx-0x452c8bf8]
  42a6a3:	inc    eax
  42a6a4:	(bad)  
  42a6a6:	div    DWORD PTR [eax+eiz*2-0x4]
  42a6aa:	or     DWORD PTR [ecx+0x7c],0x6c24740f
  42a6b1:	jnp    0x42a6b4
  42a6b3:	push   DWORD PTR [edx+ecx*1+0x1704b607]
  42a6ba:	fcomp  DWORD PTR [ebx]
  42a6bc:	hlt    
  42a6bd:	sbb    bh,0xfe
  42a6c0:	mov    bh,0x43
  42a6c2:	cli    
  42a6c3:	shr    DWORD PTR [esp+eax*1],0x4e
  42a6c7:	mov    ebx,DWORD PTR [ebp-0x5e8df3a6]
  42a6cd:	sub    BYTE PTR ds:0xfeaa11f4,al
  42a6d3:	out    0x96,eax
  42a6d5:	in     al,0xc
  42a6d7:	sti    
  42a6d8:	and    BYTE PTR [eax+0xe7f6],ch
  42a6de:	test   eax,0xbfffeea
  42a6e3:	scas   al,BYTE PTR es:[edi]
  42a6e4:	loop   0x42a6ed
  42a6e6:	pushf  
  42a6e7:	sub    BYTE PTR ds:0xfeaa2670,al
  42a6ed:	jae    0x42a692
  42a6ef:	mov    bh,0x16
  42a6f1:	pusha  
  42a6f2:	xchg   BYTE PTR [edi],al
  42a6f4:	or     al,0x87
  42a6f6:	jecxz  0x42a697
  42a6f8:	inc    eax
  42a6f9:	add    al,0x9d
  42a6fb:	fs mov ebx,0xb49ca123
  42a701:	out    0x26,eax
  42a703:	cmp    al,0x6
  42a705:	sti    
  42a706:	push   ds
  42a707:	loop   0x42a70f
  42a709:	je     0x42a766
  42a70b:	outs   dx,BYTE PTR ds:[esi]
  42a70c:	inc    esp
  42a70d:	je     0x42a76e
  42a70f:	ror    BYTE PTR [edi-0x642e6edd],1
  42a715:	push   edx
  42a716:	fwait
  42a717:	sar    BYTE PTR [edx-0x28],0x18
  42a71b:	xchg   esp,eax
  42a71c:	(bad)  
  42a71d:	cs out dx,al
  42a71f:	mov    al,0xf0
  42a721:	jnp    0x42a6d1
  42a723:	sub    DWORD PTR [edi+eax*4],eax
  42a726:	loop   0x42a721
  42a728:	ja     0x42a72e
  42a72a:	sbb    ch,ch
  42a72c:	(bad)  
  42a72d:	call   FWORD PTR [ebp-0x32f470a2]
  42a733:	xchg   ecx,eax
  42a734:	arpl   WORD PTR [esi],dx
  42a736:	pop    ebx
  42a737:	add    BYTE PTR [eax+0x79e8c9c0],0x43
  42a73e:	lods   eax,DWORD PTR ds:[esi]
  42a73f:	test   BYTE PTR fs:[eax+0x2a10000],0x68
  42a747:	or     ebx,esi
  42a749:	adc    bl,BYTE PTR [ecx-0x49f5c5fb]
  42a74f:	sbb    esp,DWORD PTR [ecx+0x730b4b1b]
  42a755:	ret    0xaea2
  42a758:	pop    eax
  42a759:	push   es
  42a75a:	jmp    0x2b54a6aa
  42a75f:	pop    eax
  42a760:	dec    edx
  42a761:	push   ebp
  42a762:	pop    esi
  42a763:	sbb    BYTE PTR [edx+0x98720e6],al
  42a769:	es (bad) 
  42a76b:	inc    ebx
  42a76c:	bound  ebx,QWORD PTR [eax+0x5e]
  42a76f:	adc    eax,0xefc54614
  42a774:	adc    eax,0x25ebcd46
  42a779:	inc    esi
  42a77a:	(bad)
  42a77d:	inc    esi
  42a77e:	int    0xdb
  42a780:	and    ecx,DWORD PTR [eax-0x1b]
  42a783:	mov    dl,0x15
  42a785:	inc    esi
  42a786:	or     eax,0xedba42f0
  42a78b:	add    ebx,DWORD PTR [ebp-0x550ca746]
  42a791:	(bad)  
  42a792:	mov    eax,ds:0xe5127ebf
  42a797:	js     0x42a776
  42a799:	add    dh,BYTE PTR [eax-0x71]
  42a79c:	mov    esi,0x4a74c116
  42a7a1:	(bad)  
  42a7a2:	test   eax,0xf612c07e
  42a7a7:	ret    
  42a7a8:	add    BYTE PTR [eax],al
  42a7aa:	jp     0x42a7fa
  42a7ac:	call   0x6604:0x25b176d0
  42a7b3:	(bad)  
  42a7b4:	dec    ebp
  42a7b5:	add    eax,0x1ee9029c
  42a7ba:	cwde   
  42a7bb:	mov    DWORD PTR [edx],ebp
  42a7bd:	add    BYTE PTR [edx],bl
  42a7bf:	add    al,0x0
  42a7c1:	fs cli 
  42a7c3:	and    DWORD PTR [eax],ebx
  42a7c5:	sbb    edx,DWORD PTR [esi+0x2a298412]
  42a7cb:	xor    edi,ebx
  42a7cd:	aad    0x52
  42a7cf:	sbb    cl,BYTE PTR [ebp-0x72f1b553]
  42a7d5:	popf   
  42a7d6:	inc    edx
  42a7d7:	sbb    cl,BYTE PTR [ecx-0x17e60553]
  42a7dd:	dec    esp
  42a7de:	or     eax,0x56c1fafe
  42a7e3:	add    eax,0x7256e900
  42a7e8:	adc    ebp,ecx
  42a7ea:	sahf   
  42a7eb:	jmp    0x164f:0xf9a72a42
  42a7f2:	int    0xf9
  42a7f4:	lods   eax,DWORD PTR ds:[esi]
  42a7f5:	stos   BYTE PTR es:[edi],al
  42a7f6:	sahf   
  42a7f7:	stc    
  42a7f8:	rol    dl,cl
  42a7fa:	arpl   WORD PTR [esi-0x45],si
  42a7fd:	sahf   
  42a7fe:	add    al,0x55
  42a800:	xchg   DWORD PTR [esi*8-0x569dae44],ecx
  42a807:	rol    DWORD PTR [ecx],0xe9
  42a80a:	xor    eax,DWORD PTR [edx+0x0]
  42a80d:	rol    DWORD PTR [eax],1
  42a80f:	add    BYTE PTR [ecx-0x6a160503],ch
  42a815:	jo     0x42a81b
  42a817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a818:	lahf   
  42a819:	adc    cl,BYTE PTR [ebp+0x36eaa129]
  42a81f:	jecxz  0x42a7c5
  42a821:	stc    
  42a822:	pop    ecx
  42a823:	stos   BYTE PTR es:[edi],al
  42a824:	dec    edi
  42a825:	test   al,dh
  42a827:	imul   edx,DWORD PTR [edi],0x8b1d0009
  42a82d:	push   eax
  42a82e:	das    
  42a82f:	sahf   
  42a830:	data16 jnp 0x42a83b
  42a833:	pop    ds
  42a834:	outs   dx,BYTE PTR ds:[esi]
  42a835:	test   BYTE PTR [ecx-0x1b],al
  42a838:	xchg   ebp,eax
  42a839:	ss mov eax,0x14e52c00
  42a83f:	(bad)  
  42a840:	rol    ebx,cl
  42a842:	xor    DWORD PTR [esi+0x3c],edi
  42a845:	xchg   edi,eax
  42a846:	in     eax,0x5f
  42a848:	mov    bl,0x90
  42a84a:	(bad)  
  42a84b:	out    0x32,eax
  42a84d:	out    dx,eax
  42a84e:	clc    
  42a84f:	inc    edi
  42a851:	mov    al,ds:0xa0b7fffe
  42a856:	add    al,BYTE PTR [eax]
  42a858:	repnz inc ebp
  42a85a:	dec    esi
  42a85b:	mov    edx,ebp
  42a85d:	xchg   BYTE PTR [ebp+0xc],dh
  42a860:	add    al,0xb2
  42a862:	cmp    DWORD PTR [eax+ebx*4-0x6],0xc07f126e
  42a86a:	(bad)  
  42a86b:	(bad)  
  42a86c:	fmul   DWORD PTR [eax-0x18]
  42a86f:	jmp    0x42a80e
  42a871:	or     bh,dh
  42a873:	mov    eax,DWORD PTR [eax]
  42a875:	add    BYTE PTR [edx],bh
  42a877:	std    
  42a878:	jns    0x42a89e
  42a87a:	dec    esp
  42a87b:	push   es
  42a87c:	dec    edi
  42a87d:	mov    edx,DWORD PTR [edx-0x3bfffae2]
  42a883:	add    BYTE PTR [edi+0x5e],dl
  42a886:	jbe    0x42a88a
  42a888:	add    BYTE PTR [ebx+0x55fedcf8],cl
  42a88e:	jnp    0x42a90f
  42a890:	stc    
  42a891:	lea    ecx,[ebx+0x2]
  42a894:	or     DWORD PTR [esi],0x41
  42a897:	in     eax,dx
  42a898:	jg     0x42a825
  42a89a:	jnp    0x42a89a
  42a89c:	mov    eax,DWORD PTR [eax*1-0x708d3031]
  42a8a3:	jne    0x42a8e7
  42a8a5:	add    al,0xa6
  42a8a7:	push   ds
  42a8a8:	cmc    
  42a8a9:	sbb    dh,BYTE PTR [edx]
  42a8ab:	or     esp,ebx
  42a8ad:	add    dl,BYTE PTR [esi+0x40]
  42a8b0:	test   al,al
  42a8b2:	mov    cl,bh
  42a8b4:	cmc    
  42a8b5:	dec    edi
  42a8b6:	popf   
  42a8b7:	loope  0x42a934
  42a8b9:	inc    ebx
  42a8ba:	xchg   ebp,eax
  42a8bb:	stos   BYTE PTR es:[edi],al
  42a8bc:	push   ds
  42a8bd:	(bad)  
  42a8be:	jmp    0xa87d:0x5318de91
  42a8c5:	pop    ecx
  42a8c6:	pop    edi
  42a8c7:	out    dx,al
  42a8c8:	(bad)  
  42a8c9:	push   ecx
  42a8ca:	push   ss
  42a8cb:	jnp    0x42a8e4
  42a8cd:	cmp    DWORD PTR [edx],edi
  42a8cf:	gs or  dl,dh
  42a8d2:	fld    DWORD PTR ds:0xebb100fc
  42a8d8:	mov    al,0xe7
  42a8da:	add    BYTE PTR [eax],al
  42a8dc:	push   ds
  42a8dd:	repz or bl,bh
  42a8e0:	es sub al,0xa9
  42a8e3:	mov    ebp,0x86a9e999
  42a8e8:	stc    
  42a8e9:	call   0x2ef6:0xb70252b3
  42a8f0:	(bad)  
  42a8f1:	mov    eax,0xe9997596
  42a8f6:	inc    BYTE PTR [edi+0x15081448]
  42a8fc:	mov    cl,0xfa
  42a8fe:	mov    esi,0xcc0227ff
  42a903:	test   BYTE PTR [ecx-0x77],0xb0
  42a907:	dec    esi
  42a908:	retf   0xf37e
  42a90b:	out    0xa2,eax
  42a90d:	les    ecx,FWORD PTR [eax]
  42a90f:	sti    
  42a910:	es fcmovb st,st(6)
  42a913:	out    dx,al
  42a914:	sub    DWORD PTR [ecx],esi
  42a916:	xlat   BYTE PTR ds:[ebx]
  42a917:	add    al,0x71
  42a919:	test   DWORD PTR [esi-0x50c7b001],edi
  42a91f:	add    al,0xdf
  42a921:	js     0x42a8e7
  42a923:	jmp    edx
  42a925:	sbb    BYTE PTR [edi+0x3ade8a52],ch
  42a92b:	adc    ebp,ebx
  42a92d:	jmp    0x2e7eead
  42a932:	fiadd  WORD PTR [edx-0x17]
  42a935:	pop    ss
  42a936:	adc    esp,esi
  42a938:	mov    edi,0x67b3e902
  42a93d:	adc    eax,0xf2f9
  42a942:	call   0xd3fb:0x9a918202
  42a949:	arpl   WORD PTR [ebx-0x27c216be],bx
  42a94f:	sti    
  42a950:	out    0x1a,eax
  42a952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a953:	push   0xffffffe9
  42a955:	sbb    DWORD PTR [ebp-0x305249fe],0xfffffffb
  42a95c:	sti    
  42a95d:	aaa    
  42a95e:	xchg   ebx,eax
  42a95f:	inc    edx
  42a960:	jmp    0x8957c113
  42a965:	repnz rol BYTE PTR [edx],cl
  42a968:	fwait
  42a969:	jns    0x42a9cb
  42a96b:	sti    
  42a96c:	xchg   ecx,eax
  42a96d:	stos   BYTE PTR es:[edi],al
  42a96e:	aad    0xbf
  42a970:	loopne 0x42a975
  42a972:	push   eax
  42a973:	xchg   DWORD PTR [eax*4+0x3e75201],edx
  42a97a:	popf   
  42a97b:	dec    edi
  42a97c:	pop    esi
  42a97d:	jmp    0x3ebb984
  42a982:	outs   dx,DWORD PTR ds:[esi]
  42a983:	push   ebx
  42a984:	mov    dh,0x6
  42a986:	fild   WORD PTR [edx+edi*8+0x3]
  42a98a:	adc    al,0x7d
  42a98c:	std    
  42a98d:	jl     0x42a9cf
  42a98f:	cli    
  42a990:	xchg   ecx,eax
  42a991:	cdq    
  42a992:	mov    eax,0x8dcbfbfb
  42a997:	inc    edx
  42a998:	jmp    0x60350a19
  42a99d:	mov    BYTE PTR [esi-0x59f92f82],dh
  42a9a3:	jle    0x42a9a1
  42a9a5:	add    al,0x0
  42a9a7:	add    BYTE PTR [ebp+0x4d806c02],bl
  42a9ad:	clc    
  42a9ae:	push   DWORD PTR [ebp+0x34fb529b]
  42a9b4:	xchg   ecx,eax
  42a9b5:	lds    eax,FWORD PTR [ecx+ebx*2-0x3205025b]
  42a9bc:	pushf  
  42a9bd:	add    al,BYTE PTR [eax]
  42a9bf:	xchg   esi,eax
  42a9c0:	ins    DWORD PTR es:[edi],dx
  42a9c1:	ret    0x2910
  42a9c4:	mov    eax,ds:0x9ee9faeb
  42a9c9:	add    al,BYTE PTR [edi-0x5082994]
  42a9cf:	jbe    0x42aa28
  42a9d1:	int    0xa
  42a9d3:	add    DWORD PTR [bp+si],0x767e900
  42a9da:	xchg   esp,eax
  42a9db:	cdq    
  42a9dc:	pop    edi
  42a9dd:	cli    
  42a9de:	or     DWORD PTR [ebp+0x6d],ebp
  42a9e1:	add    al,BYTE PTR [eax]
  42a9e3:	jmp    0xc47b63d7
  42a9e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9e9:	je     0x42a9f9
  42a9eb:	jb     0x42aa3a
  42a9ed:	idiv   BYTE PTR [eax]
  42a9ef:	in     eax,0x1c
  42a9f1:	push   cs
  42a9f2:	test   BYTE PTR [ebx],ch
  42a9f4:	sahf   
  42a9f5:	add    al,BYTE PTR [eax]
  42a9f7:	test   eax,0x9bf83ee7
  42a9fc:	nop
  42a9fd:	push   ebx
  42a9fe:	call   0xfb3ea801
  42aa03:	pusha  
  42aa04:	fucom  st(1)
  42aa06:	ss cs retf 
  42aa09:	test   DWORD PTR [esi-0x61ffff17],esp
  42aa0f:	add    bh,bl
  42aa11:	cmp    al,0x56
  42aa13:	idiv   edx
  42aa15:	out    dx,al
  42aa16:	or     BYTE PTR [edx+0x0],ah
  42aa19:	in     eax,dx
  42aa1a:	sahf   
  42aa1b:	add    bh,bl
  42aa1d:	hlt    
  42aa1e:	rcl    BYTE PTR [edx],cl
  42aa20:	inc    eax
  42aa21:	jmp    0xd6799c4b
  42aa26:	nop
  42aa27:	test   DWORD PTR [ebp+0x58400],eax
  42aa2d:	(bad)  
  42aa2e:	shl    DWORD PTR [edx],0x50
  42aa31:	push   esi
  42aa32:	pop    esp
  42aa33:	push   edx
  42aa34:	push   cs
  42aa35:	dec    DWORD PTR [ebx-0x58]
  42aa38:	cmp    eax,0xff85333b
  42aa3e:	nop
  42aa3f:	mov    DWORD PTR [ecx+0x3cb1045],eax
  42aa45:	xor    BYTE PTR [eax-0x5f8b053d],bl
  42aa4b:	jmp    FWORD PTR [esi]
  42aa4d:	push   DWORD PTR [ecx-0x7b]
  42aa50:	cmovo  esi,DWORD PTR [edx+ecx*8]
  42aa54:	add    ebp,DWORD PTR [eax]
  42aa56:	js     0x42aa1b
  42aa58:	cli    
  42aa59:	je     0x42aa4b
  42aa5b:	jns    0x42aa64
  42aa5d:	push   eax
  42aa5e:	adc    eax,0x3443a6e2
  42aa63:	jp     0x42aa65
  42aa65:	call   0x3b912d
  42aa6a:	cmp    DWORD PTR [esi],0xb18f4175
  42aa70:	repnz lea eax,[eax]
  42aa73:	add    al,bh
  42aa75:	outs   dx,DWORD PTR ds:[esi]
  42aa76:	add    al,0x0
  42aa78:	add    al,0x5
  42aa7a:	lea    esi,[ebp-0x70]
  42aa7d:	push   ss
  42aa7e:	and    dl,BYTE PTR [edi]
  42aa80:	mov    bh,bh
  42aa82:	add    eax,0x0
  42aa85:	fiadd  DWORD PTR [ecx-0x7a8453ab]
  42aa8b:	mov    eax,0x8bf6ff99
  42aa90:	stc    
  42aa91:	or     bh,dh
  42aa93:	jne    0x42aa31
  42aa95:	inc    DWORD PTR [eax+edi*8-0x35]
  42aa99:	mov    bh,0xe6
  42aa9b:	mov    eax,eax
  42aa9d:	jae    0x42aa96
  42aa9f:	mov    ch,0xfc
  42aaa1:	push   esi
  42aaa3:	call   FWORD PTR [ebp-0x6506493d]
  42aaa9:	leave  
  42aaaa:	jp     0x42aa6c
  42aaac:	or     esi,esp
  42aaae:	cmp    al,0x45
  42aab0:	mov    ch,bl
  42aab2:	stos   DWORD PTR es:[edi],eax
  42aab3:	out    0x4a,eax
  42aab5:	fld    DWORD PTR [ebx+edi*8]
  42aab8:	scas   al,BYTE PTR es:[edi]
  42aab9:	test   al,0x3
  42aabb:	jne    0x42aa42
  42aabd:	mov    eax,ds:0x5a208d2f
  42aac2:	add    bh,bl
  42aac4:	bound  edi,QWORD PTR [edx]
  42aac6:	add    eax,0xe9894d75
  42aacb:	retf   
  42aacc:	lods   al,BYTE PTR ds:[esi]
  42aacd:	sub    DWORD PTR [eax*4-0x68616a3],eax
  42aad4:	inc    ebx
  42aad5:	jno    0x42aadb
  42aad7:	sti    
  42aad8:	add    BYTE PTR [eax],al
  42aada:	mov    al,0x79
  42aadc:	add    al,0xcf
  42aade:	je     0x42aabe
  42aae0:	adc    cl,BYTE PTR [ebx]
  42aae2:	and    BYTE PTR [esi+0x5122fb04],cl
  42aae8:	mov    dh,bl
  42aaea:	add    eax,0x12f9ec6c
  42aaef:	je     0x42aaab
  42aaf1:	cli    
  42aaf2:	push   0xffffff97
  42aaf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaf5:	enter  0x96de,0x77
  42aaf9:	in     al,dx
  42aafa:	dec    esp
  42aafb:	pushf  
  42aafc:	lods   al,BYTE PTR ds:[esi]
  42aafd:	mov    WORD PTR [eax+0x1d],fs
  42ab00:	scas   al,BYTE PTR es:[edi]
  42ab01:	gs pushf 
  42ab03:	xchg   ebx,eax
  42ab04:	(bad)  
  42ab05:	cli    
  42ab06:	push   0xd94575e1
  42ab0b:	mov    ecx,0xd94d1503
  42ab10:	mov    esi,0x8a2a21ff
  42ab15:	sbb    BYTE PTR ds:0x9d0000e1,dh
  42ab1b:	nop
  42ab1c:	jno    0x42ab63
  42ab1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab1f:	add    bh,BYTE PTR [ecx]
  42ab21:	add    esi,DWORD PTR [eax]
  42ab23:	push   es
  42ab24:	ins    BYTE PTR es:[edi],dx
  42ab25:	jns    0x42aac8
  42ab27:	jmp    0xdc5e:0x29d04b0
  42ab2e:	jnp    0x42ab33
  42ab30:	iretw  
  42ab32:	xchg   DWORD PTR [ebx+0x730903bd],eax
  42ab38:	mov    ebx,0x3e6d9dc7
  42ab3d:	xchg   DWORD PTR [eax],eax
  42ab3f:	add    cl,dh
  42ab41:	or     ch,al
  42ab43:	ja     0x42aae4
  42ab45:	sbb    DWORD PTR [ebx],0xc
  42ab48:	arpl   WORD PTR [esi+0x32],bp
  42ab4b:	mov    DWORD PTR [ebx+0x6d],esi
  42ab4e:	loop   0x42ab86
  42ab50:	pop    ebp
  42ab51:	pusha  
  42ab52:	jo     0x42ab5f
  42ab54:	inc    edx
  42ab55:	push   edx
  42ab56:	cwde   
  42ab57:	out    dx,eax
  42ab58:	adc    DWORD PTR [ebx+0x72],eax
  42ab5b:	push   0xffffffba
  42ab5d:	and    al,BYTE PTR ss:[eax+ebp*4]
  42ab61:	add    ebp,DWORD PTR [esi+0x1c429aee]
  42ab67:	or     BYTE PTR [edx+eax*1+0x33d876e9],bl
  42ab6e:	and    BYTE PTR [edx+0x24],ch
  42ab71:	push   es
  42ab72:	stos   BYTE PTR es:[edi],al
  42ab73:	mov    ?,edx
  42ab75:	add    BYTE PTR [eax+0x6],0x8f
  42ab79:	and    WORD PTR es:[ebp+0x4e29b404],0xffea
  42ab83:	push   esi
  42ab84:	out    0xf6,eax
  42ab86:	ins    DWORD PTR es:[edi],dx
  42ab87:	hlt    
  42ab88:	sbb    eax,esi
  42ab8a:	pushf  
  42ab8b:	adc    al,0x45
  42ab8d:	(bad)  
  42ab8e:	out    0x3,eax
  42ab90:	popf   
  42ab91:	dec    edi
  42ab92:	fwait
  42ab93:	add    dh,BYTE PTR [eax-0x62bc27c2]
  42ab99:	jge    0x42ab9a
  42ab9b:	sub    BYTE PTR [edi+esi*8],dh
  42ab9e:	jge    0x42abc2
  42aba0:	sahf   
  42aba1:	push   esp
  42aba2:	call   0x8442ac5e
  42aba7:	cld    
  42aba8:	cli    
  42aba9:	jb     0x42ab86
  42abab:	(bad)  
  42abad:	imul   esp,DWORD PTR [esi-0x7],0xb8603259
  42abb4:	pop    es
  42abb5:	jmp    0x192e299f
  42abba:	call   0x9ef81134
  42abbf:	xchg   DWORD PTR [ecx+esi*4-0x37],ecx
  42abc3:	pop    esp
  42abc4:	add    DWORD PTR [ebx],edx
  42abc6:	mov    eax,ds:0x11f174f9
  42abcb:	aas    
  42abcc:	clc    
  42abcd:	cmp    DWORD PTR [esi-0x21068ff1],ebx
  42abd3:	add    al,BYTE PTR [ebp+0x521bc5a9]
  42abd9:	adc    edx,DWORD PTR [ebp-0x318abb79]
  42abdf:	xchg   DWORD PTR [ecx+eiz*8-0x32],eax
  42abe3:	stc    
  42abe4:	je     0x42abdb
  42abe6:	or     eax,0x8351f86f
  42abeb:	add    al,BYTE PTR [eax]
  42abed:	jmp    0x6a41896e
  42abf2:	out    0xf8,al
  42abf4:	jle    0x42ac37
  42abf6:	mov    ds:0x5400056f,al
  42abfb:	or     dh,BYTE PTR [ebp+ebp*8+0x23]
  42abff:	pop    edi
  42ac00:	cld    
  42ac01:	jmp    0x313eeb29
  42ac06:	loopne 0x42ac05
  42ac08:	push   DWORD PTR [ebx-0x15ed0000]
  42ac0e:	push   edx
  42ac0f:	fs gs push cs
  42ac12:	push   eax
  42ac13:	push   cs
  42ac14:	push   ebp
  42ac15:	adc    bh,BYTE PTR [edi+0x0]
  42ac18:	xchg   ebx,eax
  42ac19:	add    bh,dh
  42ac1b:	jne    0x42abcd
  42ac1d:	addr16 add bh,bh
  42ac20:	cmp    DWORD PTR [ecx],ecx
  42ac22:	div    DWORD PTR [esi]
  42ac24:	ret    
  42ac25:	or     eax,0xfe74106c
  42ac2a:	div    BYTE PTR [esi]
  42ac2c:	cmp    DWORD PTR [esi+0x1af14405],edi
  42ac32:	not    DWORD PTR ds:0x400ee8
  42ac38:	bswap  esp
  42ac3a:	push   ebp
  42ac3b:	pop    ebp
  42ac3c:	ss push cs
  42ac3e:	add    BYTE PTR [ebp-0x1],dl
  42ac41:	repnz dec edi
  42ac43:	push   ebx
  42ac44:	ja     0x42ac1c
  42ac46:	dec    ecx
  42ac47:	lea    esi,[ecx-0x71acaefe]
  42ac4d:	cld    
  42ac4e:	dec    edx
  42ac4f:	push   ebx
  42ac50:	xchg   edi,eax
  42ac51:	add    esi,DWORD PTR [ebp+0x8]
  42ac54:	in     al,dx
  42ac55:	add    DWORD PTR [eax],eax
  42ac57:	add    BYTE PTR [esi+ecx*2+0x3c04589],dh
  42ac5e:	adc    eax,0x415468
  42ac63:	test   DWORD PTR [ebp*2+0x1949ff25],eax
  42ac6a:	div    DWORD PTR [ebp+0x28]
  42ac6d:	add    dh,BYTE PTR [ebp+0x10]
  42ac70:	add    BYTE PTR [eax],al
  42ac72:	push   edi
  42ac73:	add    dh,BYTE PTR [ebp+0xc]
  42ac76:	arpl   WORD PTR [ebp-0x4],bp
  42ac79:	(bad)  
  42ac7a:	jmp    0xf482bcf7
  42ac7f:	jnp    0x42ac3b
  42ac81:	jne    0x42ac89
  42ac83:	scas   al,BYTE PTR es:[edi]
  42ac84:	(bad)  
  42ac85:	(bad)  
  42ac86:	sub    ebp,esi
  42ac88:	cmc    
  42ac89:	adc    eax,0x401108
  42ac8e:	outs   dx,BYTE PTR ds:[esi]
  42ac8f:	mov    edi,0x299dc951
  42ac94:	sbb    BYTE PTR [eax],al
  42ac96:	push   0xb97ef060
  42ac9b:	out    dx,al
  42ac9c:	or     DWORD PTR [ebp+eax*8-0xd],0x53
  42aca1:	push   edx
  42aca2:	es mov dh,0x6a
  42aca5:	adc    BYTE PTR [ebp-0x15],bl
  42aca8:	mov    DWORD PTR [ecx+ebp*4+0x3a],eax
  42acac:	xor    eax,0x71d44ed7
  42acb1:	or     al,0x24
  42acb3:	das    
  42acb4:	add    BYTE PTR [edi-0x6e],cl
  42acb7:	dec    edi
  42acb8:	or     al,0xfb
  42acba:	sar    BYTE PTR [eax+ebx*8+0x4d2f5d84],cl
  42acc1:	xchg   eax,esp
  42acc3:	lods   eax,DWORD PTR ds:[esi]
  42acc4:	cmp    edi,DWORD PTR [edi+0x5c85dee8]
  42acca:	gs xchg ecx,eax
  42accc:	aas    
  42accd:	jg     0x42ad2c
  42accf:	fidivr WORD PTR [ebx]
  42acd1:	mov    edi,0x70e6d1d1
  42acd6:	add    BYTE PTR [eax],al
  42acd8:	test   al,0x83
  42acda:	dec    DWORD PTR [eax-0x40c38a20]
  42ace0:	leave  
  42ace1:	lds    ecx,FWORD PTR [ecx+0x541b394c]
  42ace7:	sti    
  42ace8:	test   al,0xd5
  42acea:	push   ebx
  42aceb:	sti    
  42acec:	mov    al,0xf1
  42acee:	push   DWORD PTR [edx]
  42acf0:	and    ch,BYTE PTR [edx+eax*4]
  42acf3:	mov    edi,0x448bf990
  42acf8:	lods   eax,DWORD PTR ds:[esi]
  42acf9:	pusha  
  42acfa:	dec    edx
  42acfb:	hlt    
  42acfc:	adc    al,0xf2
  42acfe:	mov    eax,DWORD PTR [ecx+eax*1+0x73]
  42ad02:	inc    edx
  42ad03:	clc    
  42ad04:	push   es
  42ad05:	loop   0x42ad06
  42ad07:	je     0x42acf2
  42ad09:	inc    ecx
  42ad0a:	outs   dx,BYTE PTR ds:[esi]
  42ad0b:	adc    eax,0x2202eb
  42ad10:	scas   al,BYTE PTR es:[edi]
  42ad11:	repz repz ja 0x42acc2
  42ad15:	inc    edx
  42ad16:	jmp    0xab3d06a7
  42ad1b:	pop    esp
  42ad1c:	aam    0xc0
  42ad1e:	hlt    
  42ad1f:	add    edx,DWORD PTR [edx+0x2f]
  42ad22:	sub    DWORD PTR [ebx+0x4d],edx
  42ad25:	push   edx
  42ad26:	cdq    
  42ad27:	add    BYTE PTR [ecx],ch
  42ad29:	push   ds
  42ad2a:	rol    DWORD PTR [eax],1
  42ad2c:	outs   dx,DWORD PTR ds:[esi]
  42ad2d:	repz sti 
  42ad2f:	outs   dx,DWORD PTR ds:[esi]
  42ad30:	lea    eax,[edx-0x17]
  42ad33:	dec    ah
  42ad35:	xchg   DWORD PTR [eax-0x51e79409],esi
  42ad3b:	inc    BYTE PTR [eax]
  42ad3d:	add    BYTE PTR [ebx-0xd],cl
  42ad40:	(bad)  [edi-0x53]
  42ad43:	inc    edx
  42ad44:	jmp    0xa799e8d2
  42ad49:	or     BYTE PTR [ebp-0x140fa1b3],bl
  42ad4f:	out    0x38,al
  42ad51:	push   ebx
  42ad52:	iret   
  42ad53:	dec    ebx
  42ad54:	(bad)  
  42ad55:	fcmovb st,st(2)
  42ad57:	ss gs inc esp
  42ad5a:	popf   
  42ad5b:	mov    DWORD PTR [ebx],ebp
  42ad5d:	in     al,dx
  42ad5e:	inc    edi
  42ad5f:	or     eax,0x2dd14e5
  42ad64:	jo     0x42adaf
  42ad66:	push   ecx
  42ad67:	aaa    
  42ad68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad69:	nop    DWORD PTR [ebx-0x18]
  42ad6d:	add    ebx,DWORD PTR [ebp+0x628fb16a]
  42ad73:	add    bh,BYTE PTR [ecx-0x9494e02]
  42ad79:	inc    ebx
  42ad7a:	popf   
  42ad7b:	mov    ebx,0x29dc7a3
  42ad80:	jmp    0x3197c188
  42ad85:	lea    ebx,[ecx-0x3a]
  42ad88:	call   FWORD PTR [edi+0x7c]
  42ad8b:	shl    BYTE PTR [esi],cl
  42ad8d:	sub    bl,BYTE PTR [edx-0x6117ba82]
  42ad93:	add    cl,BYTE PTR [edi+0x6c]
  42ad96:	ins    BYTE PTR es:[edi],dx
  42ad97:	mov    esi,0xda6c6450
  42ad9c:	push   eax
  42ad9d:	push   cs
  42ad9e:	icebp  
  42ad9f:	jge    0x42ad60
  42ada1:	test   BYTE PTR [eax],0x0
  42ada4:	adc    eax,0x9ee90130
  42ada9:	inc    ebx
  42adaa:	dec    edi
  42adab:	call   0xf79e:0xa98d2a46
  42adb2:	adc    al,0xa5
  42adb4:	mov    es,WORD PTR [edx+0x0]
  42adb7:	jb     0x42ad4f
  42adb9:	jnp    0x42ae37
  42adbb:	leave  
  42adbc:	xlat   BYTE PTR ds:[ebx]
  42adbd:	stc    
  42adbe:	or     ah,BYTE PTR [ebp-0x62]
  42adc1:	add    eax,DWORD PTR [eax]
  42adc3:	jmp    0x79579bb3
  42adc8:	mov    es,WORD PTR [edx+0x0]
  42adcb:	pusha  
  42adcc:	in     eax,0xea
  42adce:	ss stos BYTE PTR es:[edi],al
  42add0:	fwait
  42add1:	xchg   dl,ah
  42add3:	jmp    0x29aab076
  42add8:	and    edx,esi
  42adda:	cli    
  42addb:	cmp    ch,dh
  42addd:	push   0x6da100fe
  42ade2:	add    cl,ch
  42ade4:	out    dx,eax
  42ade5:	in     eax,dx
  42ade6:	adc    al,0x75
  42ade8:	pop    DWORD PTR [edx+0x0]
  42adeb:	pusha  
  42adec:	in     eax,0xf6
  42adee:	ss stos BYTE PTR es:[edi],al
  42adf0:	mov    dl,0x22
  42adf2:	lea    esi,[esi+ebp*8-0x4aa1afae]
  42adf9:	xchg   BYTE PTR [ebx],dl
  42adfb:	test   eax,0xd5bf879e
  42ae00:	cwde   
  42ae01:	jg     0x42ae47
  42ae03:	add    al,cl
  42ae05:	push   ebp
  42ae06:	not    DWORD PTR ds:0xb9c0000
  42ae0c:	inc    eax
  42ae0d:	add    BYTE PTR [ecx+0x7d0373c5],al
  42ae13:	(bad)  
  42ae14:	hlt    
  42ae15:	mov    eax,ecx
  42ae17:	int    0xa
  42ae19:	inc    eax
  42ae1a:	les    ebx,FWORD PTR [ebx+0x8]
  42ae1d:	push   edi
  42ae1e:	stos   DWORD PTR es:[edi],eax
  42ae1f:	xlat   BYTE PTR ds:[ebx]
  42ae20:	or     dl,BYTE PTR fs:[ebx]
  42ae23:	jg     0x42ae68
  42ae25:	lock fwait
  42ae27:	xlat   BYTE PTR ds:[ebx]
  42ae28:	dec    edx
  42ae29:	push   DWORD PTR [ecx]
  42ae2b:	cmc    
  42ae2c:	xchg   DWORD PTR [ebp-0x60],eax
  42ae2f:	pop    eax
  42ae30:	not    DWORD PTR ds:0x401570
  42ae36:	sub    eax,0x473bec49
  42ae3b:	push   0x72
  42ae3d:	mov    esi,DWORD PTR [ecx+0x74400ae6]
  42ae43:	push   ebp
  42ae44:	div    DWORD PTR [ebp+0x5c]
  42ae47:	out    dx,eax
  42ae48:	ror    BYTE PTR [ecx-0x3cce1d3f],1
  42ae4e:	mov    al,0x50
  42ae50:	push   0x3ac17420
  42ae55:	push   ebx
  42ae56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae57:	push   edi
  42ae58:	div    DWORD PTR [ebp+0x20]
  42ae5b:	out    dx,eax
  42ae5c:	jae    0x42ae4e
  42ae5e:	xchg   edi,eax
  42ae5f:	push   ebx
  42ae60:	div    DWORD PTR [ebp+0x2c]
  42ae63:	out    dx,eax
  42ae64:	adc    edi,DWORD PTR [eax-0x7affba9c]
  42ae6a:	add    al,0x6a
  42ae6c:	cmp    DWORD PTR [ecx],edi
  42ae6e:	add    BYTE PTR [eax],al
  42ae70:	mov    edx,ebp
  42ae72:	outs   dx,BYTE PTR ds:[esi]
  42ae73:	and    BYTE PTR [edi-0x16d433bf],bh
  42ae79:	mov    eax,0xefd44581
  42ae7e:	jae    0x42ae74
  42ae80:	popf   
  42ae81:	call   0xa6f975cc
  42ae86:	mov    dh,0xa
  42ae88:	push   ebp
  42ae89:	sbb    al,0x54
  42ae8b:	push   ecx
  42ae8c:	cli    
  42ae8d:	mov    ch,0xf6
  42ae8f:	cli    
  42ae90:	mov    BYTE PTR [ebx+0x18],bl
  42ae93:	inc    eax
  42ae94:	popf   
  42ae95:	and    BYTE PTR [ebx+0x8],dh
  42ae98:	adc    BYTE PTR [esi-0xaf052e],ah
  42ae9e:	jmp    0x42ae73
  42aea0:	enter  0xfd17,0x86
  42aea4:	dec    eax
  42aea5:	sti    
  42aea6:	xchg   BYTE PTR [ebp+esi*4+0x7],al
  42aeaa:	jae    0x42ae88
  42aeac:	mov    edx,0xcbfaf775
  42aeb1:	div    DWORD PTR [ecx-0x14]
  42aeb4:	stos   BYTE PTR es:[edi],al
  42aeb5:	aad    0xe2
  42aeb7:	minps  xmm3,xmm3
  42aeba:	sti    
  42aebb:	je     0x42ae52
  42aebd:	rcl    DWORD PTR [ecx],1
  42aebf:	aam    0xad
  42aec1:	sbb    DWORD PTR [ebx+edx*2],eax
  42aec4:	mov    dh,bh
  42aec6:	ror    BYTE PTR [edi],cl
  42aec8:	fstp   st(1)
  42aeca:	xor    eax,0x2436515d
  42aecf:	push   0x3f65d5
  42aed4:	add    BYTE PTR [eax],al
  42aed6:	push   0x37
  42aed8:	fdivr  st,st(2)
  42aeda:	mov    BYTE PTR [ebp+0x11],ah
  42aedd:	inc    eax
  42aede:	popf   
  42aedf:	in     al,0xbf
  42aee1:	jae    0x42ae7b
  42aee3:	cwde   
  42aee4:	jno    0x42aebe
  42aee6:	dec    edx
  42aee7:	stos   BYTE PTR es:[edi],al
  42aee8:	sti    
  42aee9:	je     0x42af54
  42aeeb:	mov    DWORD PTR [ecx],edx
  42aeed:	pop    esp
  42aeee:	(bad)  
  42aeef:	sbb    DWORD PTR [edi+eax*4],eax
  42aef2:	fadd   DWORD PTR [ecx-0x5d39a5a5]
  42aef8:	rol    BYTE PTR [ebx],0x9d
  42aefb:	add    bh,BYTE PTR [ebp+edx*2+0x27d4ef6e]
  42af02:	lods   eax,DWORD PTR ds:[esi]
  42af03:	out    dx,eax
  42af04:	sti    
  42af05:	sbb    DWORD PTR [eax+0xa88e942],0xffffffae
  42af0c:	push   eax
  42af0d:	add    BYTE PTR [ebp+0x74fefe02],bl
  42af13:	xor    al,0x73
  42af15:	arpl   ax,sp
  42af17:	inc    ebx
  42af18:	jmp    0x15589572
  42af1d:	adc    DWORD PTR [ebp+0x2],ebx
  42af20:	sbb    dh,BYTE PTR [esi]
  42af22:	imul   eax,ebp,0x63b503a5
  42af28:	idiv   ch
  42af2a:	mov    DWORD PTR [ebx+0x43e057cb],0xc28203e9
  42af34:	call   0x40:0x244f0a65
  42af3b:	add    BYTE PTR [ebp-0x570c0411],bl
  42af41:	inc    edx
  42af42:	jmp    0xe944ec33
  42af47:	add    ebx,edx
  42af49:	pop    edx
  42af4a:	dec    ecx
  42af4b:	rol    ebx,0x2
  42af4e:	ret    0x8911
  42af51:	adc    al,0x29
  42af53:	add    al,0xa6
  42af55:	mov    bh,0xd3
  42af57:	push   edi
  42af58:	pusha  
  42af59:	inc    ebx
  42af5a:	jmp    0x3cf2f565
  42af5f:	rcr    DWORD PTR [ebx-0x332721fe],0x3b
  42af66:	push   eax
  42af67:	aam    0x9f
  42af69:	add    ch,cl
  42af6b:	jmp    0x42af51
  42af6d:	adc    al,0x83
  42af6f:	sti    
  42af70:	push   ds
  42af71:	ret    0x69f4
  42af74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af75:	mov    bh,0xff
  42af77:	jecxz  0x42af4b
  42af79:	lds    edi,FWORD PTR [esi]
  42af7b:	jmp    0x2e697593
  42af80:	retf   0x8cba
  42af83:	cmc    
  42af84:	sahf   
  42af85:	mov    eax,ds:0x2622c53
  42af8a:	dec    esi
  42af8b:	pop    esp
  42af8c:	xchg   ebp,eax
  42af8d:	cmp    dl,BYTE PTR [ecx-0x67]
  42af90:	push   es
  42af91:	aaa    
  42af92:	(bad)  
  42af94:	imul   bh
  42af96:	adc    ebx,DWORD PTR [ebp+0x5c002fdd]
  42af9c:	popf   
  42af9d:	sub    edx,DWORD PTR [eax+0x26]
  42afa0:	add    BYTE PTR [eax],al
  42afa2:	dec    ebp
  42afa3:	sbb    BYTE PTR es:[ebx+0x170f22c6],bh
  42afaa:	(bad)  
  42afab:	pusha  
  42afac:	mov    DWORD PTR [edx+ebp*2-0x3416c13b],edi
  42afb3:	xor    DWORD PTR [ebp+0x14da93ed],ecx
  42afb9:	(bad)  [ebx+ebp*8+0x252d2983]
  42afc0:	xchg   esp,esi
  42afc2:	jmp    0x3b02:0x25e93ec7
  42afc9:	cmp    DWORD PTR [esi+0x5c2d04b1],edx
  42afcf:	sub    eax,0x270ac600
  42afd4:	sbb    BYTE PTR [edx+esi*2+0x43],ch
  42afd8:	push   eax
  42afd9:	shl    DWORD PTR [ecx+0x0],0xfa
  42afdd:	scas   al,BYTE PTR es:[edi]
  42afde:	cld    
  42afdf:	jnp    0x42affd
  42afe1:	inc    ebp
  42afe2:	pop    esp
  42afe3:	sub    eax,0xc7b91100
  42afe8:	ds jmp 0xfc32c735
  42afee:	fiadd  WORD PTR [edx]
  42aff0:	push   edi
  42aff1:	add    BYTE PTR [ebx+0x38c25d48],al
  42aff7:	add    cl,BYTE PTR [esi-0x42]
  42affa:	xchg   esp,eax
  42affb:	ret    
  42affc:	cmp    DWORD PTR [eax],eax
  42affe:	mov    ch,cl
  42b000:	adc    ebp,esp
  42b002:	push   ss
  42b003:	inc    edx
  42b004:	add    BYTE PTR [edx+0x0],ch
  42b007:	add    BYTE PTR [eax],cl
  42b009:	dec    edx
  42b00a:	div    DWORD PTR ds:0x39c2a0
  42b010:	fisub  DWORD PTR [edx+edx*2-0x17fdb83b]
  42b017:	jnp    0x42afef
  42b019:	jmp    0x42b010
  42b01b:	xor    esi,DWORD PTR [esi+ebp*1+0x5dfc2444]
  42b022:	or     eax,0x80e38ff
  42b027:	push   eax
  42b028:	inc    edi
  42b029:	mov    ecx,0x459ce8f5
  42b02e:	idiv   bh
  42b030:	or     ah,BYTE PTR [ebp+0x207c426]
  42b036:	not    DWORD PTR ds:0x4016b4
  42b03c:	adc    cl,al
  42b03e:	(bad)  
  42b03f:	dec    DWORD PTR [ecx]
  42b041:	jge    0x42b029
  42b043:	sub    DWORD PTR [eax-0x12],0x7f
  42b047:	in     al,dx
  42b048:	call   0xc742b054
  42b04d:	push   eax
  42b04e:	dec    edi
  42b04f:	mov    edx,ecx
  42b051:	inc    BYTE PTR [edi+edi*8+0x1366d73]
  42b058:	test   BYTE PTR [ecx],al
  42b05a:	call   0xf62b454e
  42b05f:	test   BYTE PTR [ebx+edi*8],dh
  42b062:	xor    DWORD PTR [edx],0x45
  42b065:	add    DWORD PTR [eax],eax
  42b067:	mov    edi,DWORD PTR [ebx+0x2]
  42b06a:	cmp    eax,0x9d000001
  42b06f:	fsin   
  42b071:	call   DWORD PTR [edx+0x3affb566]
  42b077:	(bad)  [esi+0x60]
  42b07a:	pop    eax
  42b07b:	sbb    BYTE PTR [ebx+edi*8],al
  42b07e:	nop
  42b07f:	xchg   DWORD PTR [ecx],edx
  42b081:	inc    eax
  42b082:	popf   
  42b083:	add    eax,0x1e753c85
  42b088:	inc    ebp
  42b089:	add    BYTE PTR [ebp-0x62737f24],bl
  42b08f:	(bad)  
  42b091:	mov    bh,0x2
  42b093:	cmp    al,0x4
  42b095:	add    BYTE PTR [ebx-0x27a80626],al
  42b09b:	xchg   edi,eax
  42b09c:	dec    BYTE PTR [ecx+esi*2+0x6b81fff]
  42b0a3:	(bad)  
  42b0a5:	inc    ebp
  42b0a7:	shl    BYTE PTR [ebp-0x5],cl
  42b0aa:	shr    BYTE PTR [edi-0x42],cl
  42b0ad:	dec    edi
  42b0ae:	mov    ch,0x43
  42b0b0:	clc    
  42b0b1:	cli    
  42b0b2:	ret    0x4061
  42b0b5:	and    al,0xa9
  42b0b7:	pop    esi
  42b0b8:	les    esi,FWORD PTR [ebx+0x3e]
  42b0bb:	pop    esi
  42b0bc:	jo     0x42b0e2
  42b0be:	imul   esi,DWORD PTR [ebx],0xdaa2ff97
  42b0c4:	out    0x5,al
  42b0c6:	add    al,0xe5
  42b0c8:	test   DWORD PTR [ecx+ecx*1+0x27b81406],0xfffeda
  42b0d3:	add    BYTE PTR [ebp-0x42],dh
  42b0d6:	data16 sti 
  42b0d8:	jp     0x42b155
  42b0da:	and    al,ah
  42b0dc:	fcompp 
  42b0de:	jns    0x42b09f
  42b0e0:	icebp  
  42b0e1:	xlat   BYTE PTR ds:[ebx]
  42b0e2:	mov    ebp,edi
  42b0e4:	(bad)  
  42b0e5:	xlat   BYTE PTR ds:[ebx]
  42b0e6:	add    cl,BYTE PTR [edi]
  42b0e8:	fld    QWORD PTR [edx]
  42b0ea:	jmp    0x75790742
  42b0ef:	mov    bl,0x8b
  42b0f1:	add    ah,BYTE PTR [edi+edi*1+0x79]
  42b0f5:	inc    esi
  42b0f6:	xor    edx,DWORD PTR [edx+esi*8+0x6]
  42b0fa:	call   0x3cc04e02
  42b0ff:	pop    ds
  42b100:	adc    eax,0x3503e902
  42b105:	jae    0x42b11b
  42b107:	cli    
  42b108:	pop    ss
  42b109:	js     0x42b0e7
  42b10b:	pop    ds
  42b10c:	mov    cl,0x7f
  42b10e:	and    al,0x13
  42b110:	and    al,ah
  42b112:	mov    eax,0x4a6fb3eb
  42b117:	clc    
  42b118:	and    eax,DWORD PTR ds:0xfa62f89b
  42b11e:	ins    DWORD PTR es:[edi],dx
  42b11f:	jbe    0x42b0b6
  42b121:	pop    edx
  42b122:	leave  
  42b123:	mov    esi,0xe2a02a3
  42b128:	int    0x10
  42b12a:	test   eax,0xdc71ba03
  42b12f:	add    ebx,DWORD PTR [edx+eax*1+0x7f3b6ee9]
  42b136:	mov    DWORD PTR [ebx],ecx
  42b138:	add    BYTE PTR [eax],al
  42b13a:	xchg   edx,eax
  42b13b:	jbe    0x42b0ca
  42b13d:	xchg   BYTE PTR [esi+0x26],bl
  42b140:	adc    DWORD PTR [ebx-0x5a],0x5d0f7915
  42b147:	add    ah,BYTE PTR [ebx+eax*8+0xe]
  42b14b:	push   esi
  42b14c:	dec    edi
  42b14d:	add    al,0xfb
  42b14f:	stc    
  42b150:	imul   eax,DWORD PTR [eax-0x3f],0xa
  42b154:	cmp    DWORD PTR [ecx+0x465261e],ecx
  42b15a:	popf   
  42b15b:	add    bl,BYTE PTR [ecx]
  42b15d:	pop    es
  42b15e:	ss inc ebx
  42b160:	jmp    0x42b182
  42b162:	data16 add al,BYTE PTR [eax]
  42b165:	jmp    0x373e0408
  42b16a:	test   eax,0xad2514e7
  42b16f:	inc    edx
  42b170:	add    BYTE PTR [ecx+eiz*2+0x69],ah
  42b174:	sub    eax,0x7502416a
  42b179:	fcomp  QWORD PTR [edi]
  42b17b:	push   0xf9adf108
  42b180:	rcl    DWORD PTR [di],0x2b
  42b184:	add    BYTE PTR [edx+0x7086793],al
  42b18a:	push   ds
  42b18b:	addr16 and al,0xf9
  42b18e:	mov    esi,0xd81a115c
  42b193:	pusha  
  42b194:	mov    DWORD PTR [ebp-0x5a72ed3e],esp
  42b19a:	call   0x8600:0x515012
  42b1a1:	in     eax,dx
  42b1a2:	cli    
  42b1a3:	ds pop edx
  42b1a5:	out    0x14,eax
  42b1a7:	cmp    DWORD PTR [ebp+0x708e0042],ecx
  42b1ad:	push   ebx
  42b1ae:	xchg   DWORD PTR [esp+esi*2],ecx
  42b1b1:	lods   al,BYTE PTR ds:[esi]
  42b1b2:	add    ebp,ecx
  42b1b4:	ins    DWORD PTR es:[edi],dx
  42b1b5:	sub    ebx,0xffffffbf
  42b1b8:	pop    ss
  42b1b9:	jbe    0x42b1c3
  42b1bb:	mov    dh,0x68
  42b1bd:	out    0x14,eax
  42b1bf:	add    eax,0x7200428d
  42b1c4:	test   eax,0xb6e17c79
  42b1c9:	jbe    0x42b1e5
  42b1cb:	out    dx,eax
  42b1cc:	xchg   ebx,eax
  42b1cd:	xchg   BYTE PTR [edi-0x3d7e6da4],bh
  42b1d3:	rcl    BYTE PTR ds:0x1de9faea,1
  42b1d9:	in     eax,dx
  42b1da:	or     ah,BYTE PTR [ebp+0x1c]
  42b1dd:	jmp    0x1f8:0x858400fa
  42b1e4:	mov    al,0xfc
  42b1e6:	jp     0x42b1e6
  42b1e8:	jns    0x42b244
  42b1ea:	add    eax,0x73e90a83
  42b1ef:	jae    0x42b188
  42b1f1:	cmp    edi,esi
  42b1f3:	adc    eax,0x400f04
  42b1f8:	mov    edi,0x90db83cd
  42b1fd:	bound  eax,QWORD PTR [ebx+0x1d726cc6]
  42b203:	add    DWORD PTR [eax],0x0
  42b206:	or     al,0xe8
  42b208:	outs   dx,BYTE PTR ds:[esi]
  42b209:	or     DWORD PTR [edi-0x138aff23],esi
  42b20f:	jl     0x42b202
  42b211:	jmp    0x42b226
  42b213:	push   ebp
  42b214:	bound  eax,QWORD PTR [ecx]
  42b216:	ja     0x42b1d5
  42b218:	cmc    
  42b219:	call   0x38ef1a
  42b21e:	jg     0x42b20d
  42b220:	loope  0x42b22a
  42b222:	pop    ss
  42b223:	pop    esp
  42b224:	add    bl,ch
  42b226:	pop    ebx
  42b227:	jl     0x42b2a4
  42b229:	or     BYTE PTR [ecx-0x10],dh
  42b22c:	outs   dx,BYTE PTR ds:[esi]
  42b22d:	sub    eax,0x43c5654a
  42b232:	les    esi,FWORD PTR [edi]
  42b234:	not    DWORD PTR ds:0x401398
  42b23a:	sbb    al,0x32
  42b23c:	lea    eax,[eax-0x3c]
  42b23f:	(bad)  
  42b241:	cld    
  42b242:	fwait
  42b243:	lock dec ebp
  42b245:	call   0x38a3b6
  42b24a:	add    dh,cl
  42b24c:	adc    esi,eax
  42b24e:	jbe    0x42b295
  42b250:	add    BYTE PTR [ebx],bh
  42b252:	jg     0x42b2c6
  42b254:	(bad)  
  42b255:	push   esi
  42b256:	ins    BYTE PTR es:[edi],dx
  42b257:	cmp    eax,0xd09dfe10
  42b25c:	hlt    
  42b25d:	je     0x42b204
  42b25f:	mov    eax,0x1b8cd40a
  42b264:	add    al,0x57
  42b266:	push   ss
  42b267:	push   ds
  42b268:	or     al,0x5b
  42b26a:	add    BYTE PTR [eax],al
  42b26c:	ret    
  42b26d:	push   cs
  42b26e:	mov    esi,0x3a649d03
  42b273:	add    al,0x18
  42b275:	fwait
  42b276:	outs   dx,DWORD PTR ds:[esi]
  42b277:	pop    es
  42b278:	in     eax,dx
  42b279:	mov    BYTE PTR [edx],cl
  42b27b:	hlt    
  42b27c:	lods   eax,DWORD PTR ds:[esi]
  42b27d:	sbb    eax,DWORD PTR [edi+edi*2]
  42b280:	ret    
  42b281:	(bad)  
  42b283:	xchg   BYTE PTR [ebx-0x688c3baa],bl
  42b289:	or     esi,ebp
  42b28b:	adc    al,0xfd
  42b28d:	int3   
  42b28e:	add    BYTE PTR ds:[esi],bl
  42b291:	sar    esi,0xbe
  42b294:	test   ebx,ebp
  42b296:	(bad)  
  42b297:	call   FWORD PTR [ebp+0x5e4f96d3]
  42b29d:	(bad)  
  42b29f:	mov    cl,0x3a
  42b2a1:	(bad)  
  42b2a3:	cs bnd jno 0x42b31a
  42b2a7:	loopne 0x42b2bd
  42b2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2aa:	shl    BYTE PTR [ebp-0x61],cl
  42b2ad:	mov    BYTE PTR [ebx-0x73],cl
  42b2b0:	pusha  
  42b2b1:	cmp    edx,DWORD PTR [ebx+edi*8+0x48]
  42b2b5:	out    dx,eax
  42b2b6:	repz xor al,0xc9
  42b2b9:	dec    esp
  42b2ba:	inc    ecx
  42b2bb:	add    BYTE PTR [edi],dh
  42b2bd:	adc    BYTE PTR [ecx+0x3eed0134],cl
  42b2c3:	add    BYTE PTR [edx+0x30bf7b08],dh
  42b2c9:	loopne 0x42b2fb
  42b2cb:	shl    BYTE PTR [esp+eax*1+0x4],0x9d
  42b2d3:	add    DWORD PTR [eax],0x53
  42b2d6:	jmp    0xda53:0x693e7402
  42b2dd:	outs   dx,BYTE PTR ds:[esi]
  42b2de:	xchg   ecx,eax
  42b2df:	out    0x1b,eax
  42b2e1:	add    al,0x4a
  42b2e3:	inc    esp
  42b2e4:	jmp    0x9b2b2952
  42b2e9:	jle    0x42b315
  42b2eb:	outs   dx,DWORD PTR ds:[esi]
  42b2ec:	leave  
  42b2ed:	imul   ebp,DWORD PTR [ecx-0x3cfc1706],0xfffffffa
  42b2f4:	test   eax,0x259c3d2e
  42b2f9:	add    al,0x46
  42b2fb:	push   cs
  42b2fc:	in     eax,0x10
  42b2fe:	fld    QWORD PTR [edx]
  42b300:	pop    esi
  42b301:	(bad)  ds:0x5638b146
  42b307:	outs   dx,DWORD PTR ds:[esi]
  42b308:	lods   eax,DWORD PTR ds:[esi]
  42b309:	imul   ebx,DWORD PTR [edx+ebp*4+0x29d0379],0xe8557281
  42b314:	imul   ecx,DWORD PTR [ebx+0xc18a913],0x7870029d
  42b31e:	cdq    
  42b31f:	mov    edi,0x29807a5
  42b324:	jmp    0xd986d32c
  42b329:	push   ebx
  42b32a:	cmc    
  42b32b:	push   edi
  42b32c:	jg     0x42b323
  42b32e:	out    0x7b,eax
  42b330:	stos   DWORD PTR es:[edi],eax
  42b331:	jecxz  0x42b358
  42b333:	inc    esp
  42b334:	in     eax,dx
  42b335:	mov    BYTE PTR [eax],al
  42b337:	add    BYTE PTR [ecx-0x3a],bl
  42b33a:	outs   dx,DWORD PTR ds:[esi]
  42b33b:	inc    eax
  42b33c:	pop    ebp
  42b33d:	jne    0x42b392
  42b33f:	loope  0x42b307
  42b341:	out    0x11,eax
  42b343:	jmp    0x42b2c9
  42b345:	dec    ebp
  42b346:	or     dh,ah
  42b348:	(bad)  
  42b349:	fidiv  DWORD PTR [ecx]
  42b34b:	dec    ebp
  42b34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b34d:	out    0x3f,eax
  42b34f:	in     eax,0x9d
  42b351:	add    al,BYTE PTR [eax]
  42b353:	jmp    0xea04747d
  42b358:	sahf   
  42b359:	inc    edx
  42b35a:	dec    ecx
  42b35b:	pop    esp
  42b35c:	js     0x42b322
  42b35e:	test   BYTE PTR [ecx-0x12051371],bh
  42b364:	sahf   
  42b365:	add    al,BYTE PTR [eax]
  42b367:	bound  edx,QWORD PTR [esi-0x80]
  42b36a:	out    dx,al
  42b36b:	je     0x42b381
  42b36d:	mov    bh,0xf9
  42b36f:	mov    esi,0x3fb4df6e
  42b374:	dec    esi
  42b375:	in     al,dx
  42b376:	shl    DWORD PTR [esi+ebx*4],0x1
  42b37a:	jg     0x42b388
  42b37c:	dec    ebp
  42b37d:	out    0x85,eax
  42b37f:	adc    al,0x41
  42b381:	in     al,dx
  42b382:	jno    0x42b365
  42b384:	fadd   DWORD PTR [edx]
  42b386:	sti    
  42b387:	pop    ss
  42b388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b389:	jmp    0x42b39f
  42b38b:	mov    ebp,0x6a004284
  42b390:	push   ebp
  42b391:	sti    
  42b392:	push   edx
  42b393:	sbb    cl,BYTE PTR [esi]
  42b395:	jno    0x42b39b
  42b397:	outs   dx,BYTE PTR ds:[esi]
  42b398:	mov    ah,0x32
  42b39a:	adc    ch,BYTE PTR [ecx+0x679e0000]
  42b3a0:	(bad)  
  42b3a1:	in     eax,dx
  42b3a2:	sbb    esi,DWORD PTR [esi]
  42b3a4:	cld    
  42b3a5:	push   esi
  42b3a6:	(bad)  
  42b3a8:	sub    DWORD PTR cs:[ecx-0x59],ebx
  42b3ac:	xchg   ah,cl
  42b3ae:	mov    al,0x44
  42b3b1:	out    dx,al
  42b3b2:	sahf   
  42b3b3:	addr16 dec ebp
  42b3b5:	xor    eax,0x115c7fce
  42b3ba:	push   0xffffffda
  42b3bc:	jmp    0x9fa4:0x85ebccf7
  42b3c3:	fcmovbe st,st(3)
  42b3c5:	push   edi
  42b3c6:	mov    eax,ds:0x9ee1be02
  42b3cb:	dec    ebp
  42b3cc:	xchg   DWORD PTR [eax],eax
  42b3ce:	nop
  42b3cf:	jge    0x42b3b7
  42b3d1:	mov    BYTE PTR [ecx+0x3b560002],bh
  42b3d7:	cmp    DWORD PTR [ebx-0xa0e7188],0xffffffe8
  42b3de:	xchg   esp,eax
  42b3df:	adc    esi,esi
  42b3e1:	dec    DWORD PTR [edi]
  42b3e3:	stos   DWORD PTR es:[edi],eax
  42b3e4:	xchg   edx,eax
  42b3e5:	cli    
  42b3e6:	push   ebx
  42b3e7:	icebp  
  42b3e8:	bound  ecx,QWORD PTR [eax-0x74fffd87]
  42b3ee:	cmp    ecx,DWORD PTR [eax+0x0]
  42b3f1:	push   eax
  42b3f2:	and    ecx,DWORD PTR [ebx]
  42b3f4:	xor    al,0x16
  42b3f6:	test   dh,bh
  42b3f8:	jp     0x42b3be
  42b3fa:	jo     0x42b477
  42b3fc:	shl    DWORD PTR [esi+esi*1+0x67],1
  42b400:	sub    dh,BYTE PTR [ebx]
  42b402:	add    BYTE PTR [eax],al
  42b404:	hlt    
  42b405:	jp     0x42b3f7
  42b407:	pop    edi
  42b408:	inc    ebx
  42b409:	mov    ?,WORD PTR [edx+0x62bcfd5e]
  42b40f:	and    al,0x35
  42b411:	add    al,BYTE PTR [eax]
  42b413:	push   0x3b51ac
  42b418:	sbb    al,0x39
  42b41a:	mov    dh,0x0
  42b41c:	add    al,0x2d
  42b41e:	ror    DWORD PTR [ecx+0x458be1e1],cl
  42b424:	enter  0xf751,0x15
  42b428:	cmovo  eax,DWORD PTR fs:[eax]
  42b42c:	xor    al,0xf1
  42b42e:	adc    ecx,DWORD PTR [edi+eax*8+0x41]
  42b432:	add    BYTE PTR [ecx-0x3cce49c7],cl
  42b438:	ret    
  42b439:	jge    0x42b445
  42b43b:	add    esp,eax
  42b43d:	add    DWORD PTR [ecx],edi
  42b43f:	pop    ebp
  42b440:	mov    BYTE PTR [ebx+0x3d],dh
  42b443:	mov    edi,ecx
  42b445:	mov    ch,0x81
  42b447:	xor    al,0x9d
  42b449:	jae    0x42b3d3
  42b44b:	icebp  
  42b44c:	sub    ebx,eax
  42b44e:	pop    esp
  42b44f:	inc    BYTE PTR [edx-0x65]
  42b452:	jg     0x42b493
  42b454:	popf   
  42b455:	(bad)  
  42b456:	in     eax,dx
  42b457:	adc    al,0xd
  42b459:	leave  
  42b45a:	add    BYTE PTR ds:[eax],bl
  42b45d:	sbb    edi,DWORD PTR [eax+0x12]
  42b460:	sbb    BYTE PTR ds:0xc4008d08,ah
  42b466:	(bad)  [eax]
  42b468:	add    BYTE PTR [eax],al
  42b46a:	out    dx,al
  42b46b:	int    0xf0
  42b46d:	test   BYTE PTR [ebp+0x4e],bl
  42b470:	or     DWORD PTR [edi-0x407d5c20],eax
  42b476:	call   0xf879f86e
  42b47b:	xchg   DWORD PTR [edi-0x38],ebp
  42b47e:	inc    esi
  42b47f:	fdiv   DWORD PTR [ebp+0x44]
  42b482:	cmp    eax,0x42dc729c
  42b487:	out    dx,al
  42b488:	xchg   BYTE PTR ds:0x7c83dbdd,cl
  42b48e:	cmp    eax,0xe683ffdb
  42b493:	(bad)  
  42b495:	call   FWORD PTR [esi]
  42b497:	out    0xde,al
  42b499:	cli    
  42b49a:	stos   BYTE PTR es:[edi],al
  42b49b:	push   edi
  42b49c:	scas   eax,DWORD PTR es:[edi]
  42b49d:	call   DWORD PTR [edx]
  42b49f:	(bad)  [eax-0x1246501]
  42b4a5:	push   ecx
  42b4a6:	cmc    
  42b4a7:	push   eax
  42b4a8:	sti    
  42b4a9:	stc    
  42b4aa:	cli    
  42b4ab:	pop    edi
  42b4ac:	in     al,dx
  42b4ad:	mov    BYTE PTR [eax+0x33],dh
  42b4b0:	cmp    edx,0xffffff9a
  42b4b3:	push   edi
  42b4b4:	xchg   edi,edi
  42b4b6:	loop   0x42b492
  42b4b8:	pop    eax
  42b4b9:	popfw  
  42b4bb:	sar    esi,0x65
  42b4be:	cdq    
  42b4bf:	nop
  42b4c0:	push   ebx
  42b4c1:	sti    
  42b4c2:	push   eax
  42b4c3:	add    cl,BYTE PTR [ecx]
  42b4c5:	icebp  
  42b4c6:	test   eax,0x9d43f782
  42b4cb:	jnp    0x42b478
  42b4cd:	iret   
  42b4ce:	add    BYTE PTR [eax],al
  42b4d0:	sbb    edx,eax
  42b4d2:	xchg   esp,eax
  42b4d3:	inc    ebp
  42b4d4:	sub    bl,BYTE PTR [edi+0x5]
  42b4d7:	add    al,0x4f
  42b4d9:	push   edx
  42b4da:	xchg   edx,eax
  42b4db:	lock mov cl,0x32
  42b4de:	fild   DWORD PTR [ebx-0x63]
  42b4e1:	jg     0x42b507
  42b4e3:	add    BYTE PTR [esi+eax*4],dl
  42b4e6:	mov    ah,0xf1
  42b4e8:	xchg   esp,esp
  42b4ea:	ins    DWORD PTR es:[edi],dx
  42b4eb:	fldenv [ebx]
  42b4ed:	mov    ah,0x63
  42b4ef:	xchg   BYTE PTR [esi-0x1b],ah
  42b4f2:	leave  
  42b4f3:	lock sub BYTE PTR ds:0x8067f13b,0x2b
  42b4fb:	lock push edi
  42b4fd:	fsub   st,st(2)
  42b4ff:	xor    al,0x5d
  42b501:	inc    ebx
  42b502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b503:	jl     0x42b4c6
  42b505:	fisub  DWORD PTR [ebp+0x3e]
  42b508:	inc    ecx
  42b509:	in     al,0x6d
  42b50b:	outs   dx,BYTE PTR ds:[esi]
  42b50c:	push   ebp
  42b50d:	in     al,0x1b
  42b50f:	shl    BYTE PTR [edi],1
  42b511:	push   cs
  42b512:	xchg   ebp,eax
  42b513:	adc    ebx,ebp
  42b515:	add    al,BYTE PTR [ecx+0x33]
  42b518:	xchg   ebp,eax
  42b519:	add    ch,cl
  42b51b:	sub    bl,BYTE PTR [esi-0x2]
  42b51e:	cld    
  42b51f:	(bad)  
  42b520:	outs   dx,DWORD PTR ds:[esi]
  42b521:	ja     0x42b52e
  42b523:	cld    
  42b524:	add    cl,BYTE PTR [ebp-0x1a]
  42b527:	add    ebx,DWORD PTR [ebp-0x5523bf88]
  42b52d:	push   edx
  42b52e:	mov    edx,0x49fa69f0
  42b533:	push   ss
  42b534:	add    BYTE PTR [eax],al
  42b536:	lods   eax,DWORD PTR ds:[esi]
  42b537:	or     al,0xa9
  42b539:	add    esp,DWORD PTR [edx-0x42]
  42b53c:	in     al,dx
  42b53d:	mov    ah,0x9d
  42b53f:	dec    ebx
  42b540:	add    BYTE PTR [ecx+0x4b],al
  42b543:	cmc    
  42b544:	stc    
  42b545:	cs and cl,ch
  42b548:	jae    0x42b53e
  42b54a:	int    0x6e
  42b54c:	loopne 0x42b56c
  42b54e:	xchg   ebx,eax
  42b54f:	mov    ds:0xb29ea90d,al
  42b554:	add    BYTE PTR [edx],al
  42b556:	mov    al,ds:0x6011c014
  42b55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b55c:	(bad)  
  42b55d:	call   0x7f42b4c2
  42b562:	adc    al,0xdf
  42b564:	cmp    BYTE PTR [esi],ah
  42b566:	mov    ds:0x73ee5179,eax
  42b56b:	sti    
  42b56c:	mov    ch,0x59
  42b56e:	push   ss
  42b56f:	dec    eax
  42b570:	mov    ecx,edx
  42b572:	cmc    
  42b573:	inc    esi
  42b574:	call   0x9e40:0x4df1f31a
  42b57b:	out    dx,eax
  42b57c:	inc    esp
  42b57d:	xchg   BYTE PTR [ebp+eiz*2-0x1e722743],cl
  42b584:	inc    eax
  42b585:	or     cl,BYTE PTR [ebx+edi*8+0x35]
  42b589:	inc    edi
  42b58a:	inc    esp
  42b58b:	cli    
  42b58c:	retf   0xc8c4
  42b58f:	outs   dx,DWORD PTR ds:[esi]
  42b590:	mov    dl,0xd7
  42b592:	mov    bh,0xf9
  42b594:	cmp    BYTE PTR ds:0xadc90e30,ch
  42b59a:	add    BYTE PTR [eax],al
  42b59c:	stos   DWORD PTR es:[edi],eax
  42b59d:	aaa    
  42b59e:	add    BYTE PTR [edi-0x34],0x66
  42b5a2:	mov    ebp,0x6a059cfa
  42b5a7:	mov    eax,0xcd30fb4d
  42b5ac:	dec    ebp
  42b5ad:	jbe    0x42b624
  42b5af:	mov    dh,0xef
  42b5b1:	jnp    0x42b5f0
  42b5b3:	xor    eax,0x2dd00270
  42b5b8:	cmp    al,0xf0
  42b5ba:	stos   BYTE PTR es:[edi],al
  42b5bb:	add    bh,ah
  42b5bd:	les    eax,FWORD PTR [edx-0x46]
  42b5c0:	sub    al,0xe8
  42b5c2:	and    esi,0xffffffc3
  42b5c5:	mov    cl,0xda
  42b5c7:	cmp    BYTE PTR [ecx+eax*1],al
  42b5ca:	out    dx,eax
  42b5cb:	shl    bl,1
  42b5cd:	outs   dx,BYTE PTR ds:[esi]
  42b5ce:	mov    WORD PTR [esi-0x45fd0d6f],ds
  42b5d4:	pop    ss
  42b5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5d6:	leave  
  42b5d7:	jmp    0x9e6a1b46
  42b5dc:	push   esp
  42b5dd:	sub    edi,ebp
  42b5df:	push   edx
  42b5e0:	xchg   BYTE PTR [eax+esi*8-0x5bac16bb],ch
  42b5e7:	stc    
  42b5e8:	push   edi
  42b5e9:	outs   dx,BYTE PTR ds:[esi]
  42b5ea:	enter  0xbfc4,0x56
  42b5ee:	dec    esp
  42b5ef:	sahf   
  42b5f0:	mov    edi,0xb34558a3
  42b5f5:	iret   
  42b5f6:	or     dl,BYTE PTR [edx+0x73]
  42b5f9:	out    dx,al
  42b5fa:	add    bh,BYTE PTR [edx+0x2eff1312]
  42b600:	add    BYTE PTR [eax],al
  42b602:	addr16 leave 
  42b604:	ror    edi,0x9e
  42b607:	pop    eax
  42b608:	inc    esp
  42b609:	sahf   
  42b60a:	inc    edi
  42b60b:	mov    al,ds:0xf1eedcc2
  42b610:	cmp    esi,0x43
  42b613:	xchg   ebx,eax
  42b614:	push   edx
  42b615:	push   edx
  42b616:	fwait
  42b617:	jle    0x42b606
  42b619:	inc    ebp
  42b61a:	jge    0x42b5ee
  42b61c:	in     eax,dx
  42b61d:	into   
  42b61e:	xor    edi,DWORD PTR [edi-0x64fc017d]
  42b624:	push   edx
  42b625:	push   edx
  42b626:	cmp    ah,0xee
  42b629:	inc    ebp
  42b62a:	arpl   WORD PTR [edx],dx
  42b62c:	jge    0x42b5dc
  42b62e:	push   ds
  42b62f:	cmc    
  42b630:	or     BYTE PTR [edx-0x61b3a959],bh
  42b636:	popf   
  42b637:	int3   
  42b638:	ja     0x42b64a
  42b63a:	out    0xc5,eax
  42b63c:	jbe    0x42b62b
  42b63e:	dec    esi
  42b63f:	rol    BYTE PTR [eax],1
  42b641:	repz pusha 
  42b643:	xchg   ecx,eax
  42b644:	stos   DWORD PTR es:[edi],eax
  42b645:	sub    eax,DWORD PTR [edi]
  42b647:	popf   
  42b648:	xchg   ebp,eax
  42b649:	fistp  QWORD PTR [ebx-0x7c0d0289]
  42b64f:	or     al,0x7c
  42b651:	adc    eax,0x17cb8872
  42b656:	(bad)  
  42b657:	dec    ebp
  42b658:	sub    esp,edx
  42b65a:	out    0xcc,al
  42b65c:	out    dx,eax
  42b65d:	pop    edx
  42b65e:	mov    cl,0x14
  42b660:	(bad)  
  42b661:	mov    eax,0xe23dffe0
  42b666:	add    BYTE PTR [eax],al
  42b668:	push   esi
  42b669:	int3   
  42b66a:	out    dx,eax
  42b66b:	pop    ecx
  42b66c:	ror    BYTE PTR [eax+0x14774bcb],cl
  42b672:	push   ebx
  42b673:	mov    eax,0x1cfe0c74
  42b678:	daa    
  42b679:	(bad)  
  42b67a:	stos   BYTE PTR es:[edi],al
  42b67b:	pop    es
  42b67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b67d:	enter  0x84ee,0x63
  42b681:	lock test eax,0xb14bff7f
  42b687:	jl     0x42b666
  42b689:	cmp    al,0xf0
  42b68b:	push   edx
  42b68c:	inc    ecx
  42b68d:	adc    esi,DWORD PTR [edx-0x13]
  42b690:	cmp    ch,BYTE PTR [ebp+0x54d00007]
  42b696:	loopne 0x42b618
  42b698:	inc    ecx
  42b699:	inc    edi
  42b69a:	add    al,0x0
  42b69c:	popf   
  42b69d:	sbb    al,0x52
  42b69f:	push   ebx
  42b6a0:	mov    bh,0xd7
  42b6a2:	jns    0x42b6e8
  42b6a4:	cmc    
  42b6a5:	repnz dec ebx
  42b6a7:	lods   al,BYTE PTR ds:[esi]
  42b6a8:	pop    esi
  42b6a9:	jmp    0x42b6da
  42b6ab:	xlat   BYTE PTR ds:[ebx]
  42b6ac:	dec    ebx
  42b6ad:	jmp    0x42b6bd
  42b6af:	add    BYTE PTR [ebp+0x597ab902],bl
  42b6b5:	fisubr DWORD PTR [edi+0x77]
  42b6b8:	icebp  
  42b6b9:	loopne 0x42b6b6
  42b6bb:	xor    ecx,DWORD PTR [edi-0x217f16be]
  42b6c1:	or     eax,0x6a6a5596
  42b6c6:	in     eax,0x3
  42b6c8:	popf   
  42b6c9:	or     ah,BYTE PTR [edi+eax*2+0x0]
  42b6cd:	add    ch,ah
  42b6cf:	xor    DWORD PTR [edi+0x946dfec],edi
  42b6d5:	add    ebx,DWORD PTR [ebp-0x761316fe]
  42b6db:	(bad)  
  42b6dd:	inc    ebx
  42b6de:	popf   
  42b6df:	lea    edx,[eax]
  42b6e1:	jnp    0x42b704
  42b6e3:	(bad)  
  42b6e4:	mov    ebp,0x92fc0ee8
  42b6e9:	push   eax
  42b6ea:	loop   0x42b758
  42b6ec:	jmp    0x42b742
  42b6ee:	xchg   dh,dh
  42b6f0:	push   0x7002dd13
  42b6f5:	inc    esi
  42b6f6:	jne    0x42b714
  42b6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6f9:	jbe    0x42b68f
  42b6fb:	lea    ebx,[ebx-0x8]
  42b6fe:	or     BYTE PTR [esi-0x71981333],0x3b
  42b705:	clc    
  42b706:	inc    edx
  42b707:	xchg   BYTE PTR [ebp-0x56eaa814],bh
  42b70d:	dec    esp
  42b70e:	out    0x3b,eax
  42b710:	mov    al,ds:0x61029ac1
  42b715:	cmp    ebp,DWORD PTR [eax]
  42b717:	inc    ebx
  42b718:	jmp    0x1c518748
  42b71d:	pop    es
  42b71e:	in     eax,0x4a
  42b720:	adc    al,0x44
  42b722:	popf   
  42b723:	xor    bl,BYTE PTR [edx]
  42b725:	pop    esp
  42b726:	ins    DWORD PTR es:[edi],dx
  42b727:	lea    ebp,[eax]
  42b729:	add    al,0x62
  42b72b:	(bad)  
  42b72c:	jmp    FWORD PTR [ebx+0x72]
  42b72f:	(bad)  
  42b731:	outs   dx,BYTE PTR ds:[esi]
  42b732:	add    BYTE PTR [eax],al
  42b734:	outs   dx,BYTE PTR ds:[esi]
  42b735:	push   0xb4d6c01a
  42b73a:	ds pop edi
  42b73c:	add    DWORD PTR [ecx-0x3c],esp
  42b73f:	std    
  42b740:	and    esp,DWORD PTR [eax+0x42442b74]
  42b746:	lea    ebp,[edx+esi*1+0x19515051]
  42b74d:	data16 add cl,ch
  42b750:	(bad)  
  42b751:	ret    0x8c88
  42b754:	mov    edx,0x15117c8e
  42b759:	popa   
  42b75a:	(bad)  
  42b75b:	in     eax,dx
  42b75c:	adc    eax,0xc2ac8ca9
  42b761:	dec    edi
  42b762:	lea    esp,[esi+ecx*1-0xb65b0b0]
  42b769:	push   es
  42b76a:	callw  0x75b
  42b76e:	lea    ebp,[edx+esi*8-0x25]
  42b772:	cli    
  42b773:	out    dx,al
  42b774:	out    dx,eax
  42b775:	(bad)  [ecx+esi*8+0x5f]
  42b779:	inc    esi
  42b77a:	nop
  42b77b:	and    eax,0xd6000299
  42b780:	mov    WORD PTR [edx],gs
  42b782:	adc    DWORD PTR [ecx],ebp
  42b784:	cdq    
  42b785:	test   DWORD PTR [edi+0x748e563c],edi
  42b78b:	mov    ch,0x71
  42b78d:	(bad)  
  42b78f:	mov    dh,0x36
  42b791:	test   DWORD PTR [esi-0x5244e40],edi
  42b797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b798:	add    BYTE PTR [eax],al
  42b79a:	inc    esi
  42b79b:	push   esi
  42b79c:	in     al,0x6c
  42b79e:	(bad)  
  42b7a0:	dec    edi
  42b7a1:	adc    DWORD PTR [ebx+0x1d8efad7],0xf400739f
  42b7ab:	jmp    0x42b820
  42b7ad:	call   0x121aa945
  42b7b2:	mov    ah,0x6
  42b7b4:	jnp    0x42b7ae
  42b7b6:	jae    0x42b80a
  42b7b8:	cli    
  42b7b9:	mov    dl,0x5
  42b7bb:	in     al,dx
  42b7bc:	jae    0x42b7a2
  42b7be:	outs   dx,DWORD PTR ds:[esi]
  42b7bf:	adc    DWORD PTR [eax-0x8fccbee],esp
  42b7c5:	(bad)  
  42b7c6:	push   ebx
  42b7c7:	push   ecx
  42b7c8:	call   0xb60272cc
  42b7cd:	push   ebp
  42b7ce:	dec    edi
  42b7cf:	mov    edx,0x85bc4d81
  42b7d4:	out    0xc,al
  42b7d6:	mov    dh,0x2
  42b7d8:	add    BYTE PTR [ebx-0x6],dl
  42b7db:	xor    ebp,DWORD PTR [ebx]
  42b7dd:	rcl    bh,0xd0
  42b7e0:	loop   0x42b81a
  42b7e2:	stc    
  42b7e3:	add    al,BYTE PTR [eax]
  42b7e5:	test   DWORD PTR [edx+edx*2+0x22],esi
  42b7e9:	test   DWORD PTR [esi+ebx*8-0x6],0x73f284ff
  42b7f1:	adc    edi,edi
  42b7f3:	fidivr WORD PTR [ecx-0x7]
  42b7f6:	push   ecx
  42b7f7:	pop    eax
  42b7f8:	add    al,BYTE PTR [ebp+0x3b046e5a]
  42b7fe:	add    BYTE PTR [eax],al
  42b800:	adc    BYTE PTR [edx+edi*8-0x76],0x44
  42b805:	pop    ebp
  42b806:	dec    esp
  42b807:	or     BYTE PTR [eax+edi*8+0x44],bl
  42b80b:	add    BYTE PTR [ebx+eax*4-0x46],al
  42b80f:	jne    0x42b80f
  42b811:	xor    al,0x75
  42b814:	cmp    BYTE PTR [eax],bl
  42b816:	shr    bl,0x89
  42b819:	xchg   BYTE PTR [ebx+0xc],bh
  42b81c:	inc    esp
  42b81d:	push   ebx
  42b81e:	add    eax,0x740b5283
  42b823:	icebp  
  42b824:	popf   
  42b825:	je     0x42b896
  42b827:	or     BYTE PTR [esi],dl
  42b829:	push   cs
  42b82a:	clc    
  42b82b:	out    0x6c,eax
  42b82d:	cs add al,0x0
  42b830:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42b832:	jg     0x42b80a
  42b834:	xchg   ecx,eax
  42b835:	mov    esi,DWORD PTR [edi-0x7c]
  42b838:	add    eax,0x4dfae66f
  42b83d:	mov    bl,0x5e
  42b83f:	lea    ebx,[ebp-0x15]
  42b842:	rol    BYTE PTR [edx+ebx*4-0x15],0xd6
  42b847:	or     dl,BYTE PTR [ebx+ebp*8-0x60227c02]
  42b84e:	sub    eax,0x806e6e53
  42b853:	test   eax,0xb54fe614
  42b859:	idiv   ch
  42b85b:	call   FWORD PTR [ebp+0x7873bf6f]
  42b861:	push   0x1d29
  42b866:	call   0x4f2b:0xeb0abf5f
  42b86d:	lea    esp,[eax]
  42b86f:	add    ebp,eax
  42b871:	cli    
  42b872:	xchg   edx,eax
  42b873:	jnp    0x42b84b
  42b875:	sub    BYTE PTR [ebx-0x2778172c],cl
  42b87b:	mov    esp,0xe6758477
  42b880:	call   0x17f6867f
  42b885:	jb     0x42b8f2
  42b887:	mov    ah,0x54
  42b889:	call   0xfb2b9a6c
  42b88e:	daa    
  42b88f:	cs stc 
  42b891:	pop    edx
  42b892:	repz and BYTE PTR [edi+0x49eb95bd],dh
  42b899:	xchg   DWORD PTR [ecx],esi
  42b89b:	push   0xffffffd8
  42b89d:	repz pushf 
  42b89f:	add    ch,cl
  42b8a1:	add    ecx,edi
  42b8a3:	mov    DWORD PTR [ebx],edx
  42b8a5:	cld    
  42b8a6:	sbb    eax,0x9512e85c
  42b8ab:	add    ch,cl
  42b8ad:	push   eax
  42b8ae:	xchg   ecx,eax
  42b8af:	add    eax,0x6105c3b7
  42b8b4:	call   0xb8e055bc
  42b8b9:	sti    
  42b8ba:	add    bl,ch
  42b8bc:	adc    DWORD PTR [esi-0x63],ebx
  42b8bf:	xor    DWORD PTR [edx+0xf],esp
  42b8c2:	test   eax,0x1403a8f4
  42b8c7:	pop    ecx
  42b8c8:	in     eax,dx
  42b8c9:	jl     0x42b8cb
  42b8cb:	add    BYTE PTR [ebx+ecx*1+0x66],bl
  42b8cf:	shl    BYTE PTR [esi+0x21f7a58b],0x44
  42b8d6:	in     al,dx
  42b8d7:	push   ebx
  42b8d8:	inc    ebx
  42b8d9:	not    DWORD PTR [ecx+0x5df25b76]
  42b8df:	rol    edx,0xce
  42b8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8e3:	jmp    0x30e5419f
  42b8e8:	adc    al,0x41
  42b8ea:	aad    0x7c
  42b8ec:	pop    esp
  42b8ed:	sbb    DWORD PTR [eax+0x45],esp
  42b8f0:	fisttp QWORD PTR [ebp+0x68ed40aa]
  42b8f6:	mov    ebp,0xa5481848
  42b8fb:	jl     0x42b95c
  42b8fd:	jmp    0x42b937
  42b8ff:	inc    ebx
  42b900:	ja     0x42b8de
  42b902:	ins    DWORD PTR es:[edi],dx
  42b903:	xor    DWORD PTR [edi],0x2203e903
  42b909:	push   ds
  42b90a:	sbb    DWORD PTR [edx],edx
  42b90c:	fld    QWORD PTR [edx]
  42b90e:	pusha  
  42b90f:	test   BYTE PTR [esi+0x3],bl
  42b912:	jmp    0x6c35741a
  42b917:	or     DWORD PTR [ebx],0x9ee90003
  42b91d:	xor    cl,BYTE PTR [ebp-0x5240996]
  42b923:	jmp    0x6b1590f6
  42b928:	jmp    0x2:0x9feb6807
  42b92f:	pop    esp
  42b930:	add    BYTE PTR [eax],al
  42b932:	sbb    al,0xcd
  42b934:	(bad)  
  42b935:	call   0x6acfebd8
  42b93a:	(bad)  
  42b93b:	(bad)  
  42b93d:	jmp    0x6b1590b0
  42b942:	cmp    cl,BYTE PTR [eax]
  42b944:	mov    ebx,0x29fed
  42b949:	push   0xe900b6dc
  42b94e:	sahf   
  42b94f:	xor    BYTE PTR [ebp+0x2e262],cl
  42b955:	jmp    0xa22a79ab
  42b95a:	pop    edi
  42b95b:	fdivr  st,st(2)
  42b95d:	ins    BYTE PTR es:[edi],dx
  42b95e:	fimul  WORD PTR [eax]
  42b960:	test   DWORD PTR [ecx-0x6c05273b],ebx
  42b966:	lahf   
  42b967:	lea    esi,[ecx+edi*8+0x1fad8b4]
  42b96e:	push   0x47
  42b970:	sti    
  42b971:	push   cs
  42b972:	sbb    edx,eax
  42b974:	dec    edi
  42b975:	adc    DWORD PTR [esi+0x67],ebx
  42b978:	sti    
  42b979:	dec    BYTE PTR [ebx]
  42b97b:	pushf  
  42b97c:	je     0x42b958
  42b97e:	aaa    
  42b97f:	jmp    0x83e1a284
  42b984:	shr    DWORD PTR [edi+0x30400299],0xec
  42b98b:	fld1   
  42b98d:	or     eax,0x36fad87a
  42b992:	aam    0x46
  42b994:	mov    esi,0xb4000000
  42b999:	pop    ecx
  42b99a:	stos   BYTE PTR es:[edi],al
  42b99b:	clc    
  42b99c:	aaa    
  42b99d:	(bad)  
  42b99e:	jmp    FWORD PTR [ecx+0x34]
  42b9a1:	add    dl,0xff
  42b9a4:	pop    esp
  42b9a5:	outs   dx,BYTE PTR ds:[esi]
  42b9a6:	cmp    edi,esi
  42b9a8:	sti    
  42b9a9:	cmp    BYTE PTR [edx-0x1751cc81],0x1
  42b9b0:	xor    al,0xff
  42b9b2:	mov    WORD PTR [ebp-0xa1aec],es
  42b9b8:	inc    edx
  42b9b9:	push   es
  42b9ba:	add    BYTE PTR [eax-0x33],al
  42b9bd:	push   ecx
  42b9be:	stc    
  42b9bf:	jmp    0x389e44
  42b9c4:	jg     0x42ba07
  42b9c6:	(bad)  
  42b9c7:	mov    DWORD PTR [edi-0xbffff22],eax
  42b9cd:	cmp    BYTE PTR [eax],cl
  42b9cf:	lea    esi,[ecx]
  42b9d1:	int    0x4a
  42b9d3:	lea    eax,[edi+0x6]
  42b9d6:	(bad)  
  42b9d7:	inc    esp
  42b9d9:	not    DWORD PTR cs:0x400cc4
  42b9e0:	aaa    
  42b9e1:	ret    0xb906
  42b9e4:	jp     0x42b9eb
  42b9e6:	add    BYTE PTR [eax],al
  42b9e8:	sub    DWORD PTR [ecx-0x1c7401f6],eax
  42b9ee:	rol    BYTE PTR [eax],0xb4
  42b9f1:	ds dec ecx
  42b9f3:	jne    0x42b9a2
  42b9f5:	pop    ebp
  42b9f6:	je     0x42ba00
  42b9f8:	or     DWORD PTR [ecx-0x1c],ebx
  42b9fb:	add    eax,0x6740000
  42ba00:	push   eax
  42ba01:	(bad)  
  42ba02:	push   edx
  42ba04:	std    
  42ba05:	inc    DWORD PTR [ebp+ebx*2+0x4608e8be]
  42ba0c:	idiv   bh
  42ba0e:	add    esi,eax
  42ba10:	add    eax,0xe4879d85
  42ba15:	cli    
  42ba16:	pop    edx
  42ba17:	gs jge 0x42ba16
  42ba1a:	call   0xf6b8:0x1e88feeb
  42ba21:	inc    DWORD PTR [edx+0x5c]
  42ba24:	add    al,0x5b
  42ba26:	(bad)  [edx+0x169d03c0]
  42ba2c:	ja     0x42ba19
  42ba2e:	into   
  42ba2f:	mov    esp,0xb3ca51c5
  42ba34:	pop    es
  42ba35:	mov    al,ds:0x75042ce0
  42ba3a:	ret    
  42ba3b:	inc    ecx
  42ba3c:	mov    esp,0xfb4ceb5e
  42ba42:	test   al,0x7f
  42ba44:	adc    BYTE PTR [eax-0x63],al
  42ba47:	xchg   ebx,eax
  42ba48:	pop    es
  42ba49:	mov    al,ds:0x74feacd8
  42ba4e:	mov    ss,WORD PTR [edx+0x8]
  42ba51:	js     0x42ba2b
  42ba53:	lods   al,BYTE PTR ds:[esi]
  42ba54:	dec    BYTE PTR [eax+0x3ebf7fb8]
  42ba5a:	popf   
  42ba5b:	sub    DWORD PTR [eax],eax
  42ba5d:	mov    al,ds:0xfeace0
  42ba62:	add    BYTE PTR [eax],al
  42ba64:	imul   edx,DWORD PTR [eax],0x10
  42ba67:	lock (bad) 
  42ba69:	stos   DWORD PTR es:[edi],eax
  42ba6a:	inc    BYTE PTR [esi-0x40ea2ca8]
  42ba70:	xor    DWORD PTR [esi-0x3cd6b7ca],ebp
  42ba76:	ss je  0x42ba32
  42ba79:	mov    ds:0xd0e5106a,eax
  42ba7e:	jg     0x42ba44
  42ba80:	popf   
  42ba81:	jmp    0x42ba81
  42ba83:	mov    edx,0x3eb96d
  42ba88:	pop    es
  42ba89:	rcl    ch,0x1d
  42ba8c:	xor    al,BYTE PTR [edx]
  42ba8e:	test   eax,0x4f02dd0e
  42ba93:	pop    ds
  42ba94:	jp     0x42ba91
  42ba96:	xchg   ecx,eax
  42ba97:	in     al,0xac
  42ba99:	inc    edx
  42ba9a:	jmp    0xd9303ff8
  42ba9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baa0:	cli    
  42baa1:	out    dx,eax
  42baa2:	sub    BYTE PTR [ebx+edi*4],al
  42baa5:	idiv   BYTE PTR [ebp-0x2d5e0803]
  42baab:	inc    ebx
  42baac:	popf   
  42baad:	ins    BYTE PTR es:[edi],dx
  42baae:	jmp    DWORD PTR [edx+0x425bfb2]
  42bab4:	(bad)  
  42bab5:	sbb    eax,0x6aca6fa6
  42baba:	jmp    0x8245182a
  42babf:	paddsw mm6,mm3
  42bac2:	sub    BYTE PTR [edx+ecx*8],al
  42bac5:	(bad)  
  42bac8:	add    BYTE PTR [eax],al
  42baca:	test   DWORD PTR [edx+0x5c],ebp
  42bacd:	inc    esp
  42bace:	popf   
  42bacf:	xor    ah,BYTE PTR [edx+0xf]
  42bad2:	sub    esp,esi
  42bad4:	test   al,0x3
  42bad6:	add    bl,BYTE PTR [edx+0x2c]
  42bad9:	inc    ecx
  42bada:	popf   
  42badb:	sbb    eax,0x85a66f26
  42bae0:	xor    ch,ah
  42bae2:	sub    ebx,DWORD PTR [edx+0x24]
  42bae5:	inc    ecx
  42bae6:	popf   
  42bae7:	in     eax,dx
  42bae8:	jmp    0x42ba8c
  42baea:	xor    bh,BYTE PTR [edi-0x25cdfc5b]
  42baf0:	and    DWORD PTR [eax+0x5c],esi
  42baf3:	sbb    eax,0x87607026
  42baf8:	mov    ds:0x8133edfb,eax
  42bafd:	add    ebp,DWORD PTR [ebp-0x79b316fe]
  42bb03:	mov    bl,0x63
  42bb05:	les    ecx,FWORD PTR [ecx]
  42bb07:	inc    esp
  42bb08:	add    BYTE PTR [edx-0x16],ah
  42bb0b:	or     al,BYTE PTR [edi+0x4606a9c]
  42bb11:	call   0x402abdb4
  42bb16:	mov    eax,0xcbd6fadc
  42bb1b:	or     al,BYTE PTR [edi+0x73ef39d9]
  42bb21:	(bad)  
  42bb23:	add    dh,BYTE PTR [edi]
  42bb25:	mov    edx,0x3cfb1eb3
  42bb2a:	xor    eax,0x2d14dd
  42bb2f:	add    BYTE PTR [edx+eax*2-0x2060a700],cl
  42bb36:	sbb    BYTE PTR [esi-0x587ef94d],bl
  42bb3c:	sahf   
  42bb3d:	adc    al,BYTE PTR [eax]
  42bb3f:	jmp    0x1a9502b1
  42bb44:	add    bh,ch
  42bb46:	dec    edi
  42bb47:	ficomp DWORD PTR [esi+0x2]
  42bb4a:	test   DWORD PTR [ecx-0x56d2522b],ebp
  42bb50:	pop    ecx
  42bb51:	cmp    al,0x57
  42bb53:	(bad)  
  42bb54:	fdiv   st(7),st
  42bb56:	push   DWORD PTR [ebx+0x6a50eb65]
  42bb5c:	inc    ebx
  42bb5d:	bnd call esp
  42bb60:	retf   
  42bb61:	add    BYTE PTR [ecx+ebx*8+0x68],0x57
  42bb66:	cmp    BYTE PTR [ebp-0x538101cd],bl
  42bb6c:	mov    ds,eax
  42bb6e:	dec    ebp
  42bb6f:	xchg   edi,eax
  42bb70:	xor    eax,0x2bbe084e
  42bb75:	ror    DWORD PTR [edx],1
  42bb77:	gs rcl edi,0xfa
  42bb7b:	jmp    0x14f0295
  42bb80:	sub    ebx,DWORD PTR [ecx]
  42bb82:	cli    
  42bb83:	add    BYTE PTR [ebx-0x7c7c0ca6],ah
  42bb89:	jecxz  0x42bb90
  42bb8b:	test   BYTE PTR [eax-0x50fffffd],bl
  42bb91:	xlat   BYTE PTR ds:[ebx]
  42bb92:	(bad)  
  42bb93:	inc    DWORD PTR [eax]
  42bb95:	add    BYTE PTR [eax+edi*8-0xe],dh
  42bb99:	maskmovq mm1,mm3
  42bb9c:	cli    
  42bb9d:	inc    DWORD PTR [eax+ecx*4+0x4b]
  42bba1:	adc    BYTE PTR [ecx+esi*2+0x38],bl
  42bba5:	(bad)  
  42bba6:	arpl   WORD PTR [ebp-0x494803bd],ax
  42bbac:	cmc    
  42bbad:	bswap  eax
  42bbaf:	outs   dx,DWORD PTR ds:[esi]
  42bbb0:	cli    
  42bbb1:	inc    DWORD PTR [eax+edi*8-0x46]
  42bbb5:	movzx  esp,WORD PTR [edi-0x75cb0006]
  42bbbc:	cmc    
  42bbbd:	jne    0x42bbbb
  42bbbf:	mov    DWORD PTR [edx-0x57c87f1],edi
  42bbc5:	push   esp
  42bbc7:	mov    DWORD PTR [edx+0x74f7ee75],edi
  42bbcd:	or     al,0xf8
  42bbcf:	int3   
  42bbd0:	mov    eax,DWORD PTR [ebx+eax*2-0x3]
  42bbd4:	dec    edi
  42bbd5:	dec    ecx
  42bbd7:	push   es
  42bbd8:	dec    esi
  42bbd9:	(bad)  
  42bbda:	jmp    0xc482c9d1
  42bbdf:	jg     0x42bb9f
  42bbe1:	or     al,0xa
  42bbe3:	in     al,0x13
  42bbe5:	jl     0x42bbce
  42bbe7:	inc    edx
  42bbe8:	add    BYTE PTR [ebx+0x3e3ee672],cl
  42bbee:	jb     0x42bbd3
  42bbf0:	mov    eax,DWORD PTR [edx+edi*8]
  42bbf3:	out    0x69,eax
  42bbf5:	test   DWORD PTR [ebx+0x8b4d3a],eax
  42bbfb:	add    cl,dh
  42bbfd:	push   es
  42bbfe:	lea    esi,[ebx*4+0x117f68ac]
  42bc05:	mov    dh,0xe0
  42bc07:	pop    ebx
  42bc08:	call   0x1c2b:0xce0b4936
  42bc0f:	inc    ebp
  42bc10:	stos   BYTE PTR es:[edi],al
  42bc11:	fdiv   QWORD PTR [edi-0x41]
  42bc14:	sahf   
  42bc15:	sahf   
  42bc16:	(bad)  
  42bc18:	arpl   WORD PTR [ecx],sp
  42bc1a:	ret    
  42bc1b:	outs   dx,BYTE PTR ds:[esi]
  42bc1c:	shl    DWORD PTR [edx],1
  42bc1e:	push   ecx
  42bc1f:	or     cl,dl
  42bc21:	fnstsw WORD PTR [eax]
  42bc23:	push   ecx
  42bc24:	push   edx
  42bc25:	das    
  42bc26:	or     al,0xfb
  42bc28:	mov    al,0xdb
  42bc2a:	clc    
  42bc2b:	aas    
  42bc2c:	popf   
  42bc2d:	push   0x169c0bc3
  42bc32:	or     al,0x80
  42bc34:	mov    al,0xb4
  42bc36:	(bad)  
  42bc37:	jae    0x42bbd1
  42bc39:	push   eax
  42bc3a:	push   eax
  42bc3b:	or     BYTE PTR [esi],bl
  42bc3d:	pop    ds
  42bc3e:	or     al,0xfe
  42bc40:	test   BYTE PTR [edi],cl
  42bc42:	cmp    al,0x62
  42bc44:	and    al,0xeb
  42bc46:	mov    DWORD PTR [ebp+edx*4+0x50],esi
  42bc4a:	dec    eax
  42bc4b:	cld    
  42bc4c:	adc    BYTE PTR [eax],ah
  42bc4e:	add    al,0xfe
  42bc50:	push   0x4c
  42bc52:	pop    eax
  42bc53:	adc    BYTE PTR [ebx+0x64],cl
  42bc56:	clc    
  42bc57:	das    
  42bc58:	xchg   ebx,eax
  42bc59:	stos   DWORD PTR es:[edi],eax
  42bc5a:	(bad)  
  42bc5b:	jle    0x42bc36
  42bc5d:	out    0x38,eax
  42bc5f:	sti    
  42bc60:	add    BYTE PTR [eax],al
  42bc62:	mov    al,0xaf
  42bc64:	icebp  
  42bc65:	aas    
  42bc66:	popf   
  42bc67:	pusha  
  42bc68:	leave  
  42bc69:	out    0x9f,al
  42bc6b:	fdivr  DWORD PTR [esi-0x345f9ca6]
  42bc71:	mov    ebp,0x418feba9
  42bc76:	mov    eax,ds:0xb114dd7b
  42bc7b:	add    dh,bh
  42bc7d:	inc    ebx
  42bc7e:	popf   
  42bc7f:	adc    DWORD PTR [ecx],ebp
  42bc81:	mov    WORD PTR [ebx+ecx*4+0x3c2407aa],ds
  42bc88:	loope  0x42bc18
  42bc8a:	pop    esp
  42bc8b:	rcr    DWORD PTR [edx-0x4a2de5c6],0xe2
  42bc92:	mov    ch,0x14
  42bc94:	jnp    0x42bc8a
  42bc96:	sbb    edi,DWORD PTR [eiz*8-0x1e65511e]
  42bc9d:	test   DWORD PTR [edx],0xde0428f0
  42bca3:	sbb    DWORD PTR [ebx],edx
  42bca5:	push   esi
  42bca6:	inc    esi
  42bca7:	aad    0x52
  42bca9:	or     BYTE PTR ds:0x47e1eb15,dh
  42bcaf:	and    DWORD PTR [edx-0x242a30f0],0xe942a0eb
  42bcb9:	inc    eax
  42bcba:	mov    ecx,0x89cf3537
  42bcc0:	cwde   
  42bcc1:	(bad)  
  42bcc2:	pop    esp
  42bcc3:	push   es
  42bcc4:	cmp    DWORD PTR [ebx+0x1e5e0000],ecx
  42bcca:	fucom  st(0)
  42bccc:	mov    cl,0xe6
  42bcce:	(bad)  
  42bccf:	inc    ebx
  42bcd0:	popf   
  42bcd1:	adc    DWORD PTR [esi-0x3f5a8e5],ebx
  42bcd7:	aaa    
  42bcd8:	dec    eax
  42bcd9:	adc    DWORD PTR [ebx+ebx*1-0x79],edi
  42bcdd:	dec    esp
  42bcde:	and    al,0x39
  42bce0:	sbb    bh,BYTE PTR [eiz*8+0x1480d98c]
  42bce7:	pushf  
  42bce8:	rcl    BYTE PTR [eax-0x2],cl
  42bceb:	ins    DWORD PTR es:[edi],dx
  42bcec:	popf   
  42bced:	aad    0xfc
  42bcef:	fwait
  42bcf0:	(bad)  
  42bcf1:	out    dx,al
  42bcf2:	fdiv   st,st(4)
  42bcf4:	jp     0x42bcf8
  42bcf6:	add    BYTE PTR [ecx+ebx*8+0x7b],ch
  42bcfa:	inc    ecx
  42bcfb:	in     eax,0x53
  42bcfd:	add    al,0xfb
  42bcff:	fld    QWORD PTR [esi]
  42bd01:	fcom   DWORD PTR [ecx+ecx*2]
  42bd04:	xchg   ebx,eax
  42bd05:	adc    al,0x0
  42bd07:	(bad)  
  42bd08:	out    0xfe,eax
  42bd0a:	jle    0x42bcd1
  42bd0c:	es aam 0xe5
  42bd0f:	out    dx,al
  42bd10:	adc    DWORD PTR [eax],ecx
  42bd12:	mov    eax,0x3e7a8d70
  42bd17:	lods   al,BYTE PTR ds:[esi]
  42bd18:	xchg   ecx,eax
  42bd19:	sub    BYTE PTR [esi+0x24],ch
  42bd1c:	fmul   QWORD PTR [ecx-0x3cae8de7]
  42bd22:	loopne 0x42bd0f
  42bd24:	and    edx,eax
  42bd26:	add    eax,ecx
  42bd28:	cdq    
  42bd29:	std    
  42bd2a:	stc    
  42bd2b:	into   
  42bd2c:	add    BYTE PTR [eax],al
  42bd2e:	mov    edx,edi
  42bd30:	jae    0x42bd3f
  42bd32:	xchg   ecx,eax
  42bd33:	xlat   BYTE PTR ds:[ebx]
  42bd34:	adc    al,0xb9
  42bd36:	xor    BYTE PTR [eax+eax*1],dl
  42bd39:	pop    ss
  42bd3a:	jo     0x42bd75
  42bd3c:	mov    edi,0x50e81814
  42bd41:	cmp    BYTE PTR [eax-0x7b],ch
  42bd44:	inc    edx
  42bd45:	in     eax,dx
  42bd46:	aam    0x32
  42bd48:	mov    DWORD PTR [ecx+esi*8],ebp
  42bd4b:	fcom   DWORD PTR [edi*2-0x45ffebf0]
  42bd52:	inc    ecx
  42bd53:	sbb    ebx,DWORD PTR [ebx-0xf]
  42bd56:	lea    edi,[ebp-0x77]
  42bd59:	jmp    0xc7bbffc
  42bd5e:	lea    eax,[edi]
  42bd60:	test   BYTE PTR [esi+ebx*4+0x2],ch
  42bd64:	add    BYTE PTR [edx-0x53],dh
  42bd67:	test   DWORD PTR [edx-0x13],esi
  42bd6a:	and    ecx,DWORD PTR [eax]
  42bd6c:	(bad)  
  42bd6d:	in     eax,0x9e
  42bd6f:	add    al,BYTE PTR [eax]
  42bd71:	add    BYTE PTR [ebp+0x2c],cl
  42bd74:	cld    
  42bd75:	call   0x38b996
  42bd7a:	inc    eax
  42bd7b:	mov    edi,0x66076d6e
  42bd80:	add    al,0xff
  42bd82:	add    eax,edx
  42bd84:	cmc    
  42bd85:	jne    0x42bd0f
  42bd87:	loop   0x42bdfc
  42bd89:	or     BYTE PTR [edi-0x1e],dl
  42bd8c:	adc    edx,DWORD PTR [eax-0x7a]
  42bd8f:	aas    
  42bd90:	add    BYTE PTR [ebx-0x87c0000],cl
  42bd96:	jmp    0xf014:0x5cf83474
  42bd9d:	cmc    
  42bd9e:	popa   
  42bd9f:	add    al,BYTE PTR [edi]
  42bda1:	push   cs
  42bda2:	div    DWORD PTR [ebp+0x60]
  42bda5:	imul   esi,edi,0xf5b3ee56
  42bdab:	adc    eax,0x3ad020
  42bdb0:	sar    DWORD PTR [esi-0x26a4db8d],0x12
  42bdb7:	adc    DWORD PTR [esi+edi*8-0x2714a9b1],eax
  42bdbe:	dec    esi
  42bdbf:	adc    dh,BYTE PTR [esi+edi*8+0x4d]
  42bdc3:	jmp    DWORD PTR [ecx]
  42bdc5:	lahf   
  42bdc6:	or     al,0x40
  42bdc8:	add    al,0x88
  42bdca:	add    eax,0xbfe2b18b
  42bdcf:	loope  0x42bdc7
  42bdd1:	out    0x58,al
  42bdd3:	add    al,0x1a
  42bdd5:	mov    bl,0xe1
  42bdd7:	adc    eax,0x4d82fb6f
  42bddc:	push   0x30890787
  42bde1:	jle    0x42bdd8
  42bde3:	pop    es
  42bde4:	and    dh,BYTE PTR [ebx+edx*1+0x3ed5d8]
  42bdeb:	mov    bl,0x9d
  42bded:	jmp    0xeff9:0x43c574d9
  42bdf4:	scas   eax,DWORD PTR es:[edi]
  42bdf5:	test   eax,0x59fe
  42bdfa:	daa    
  42bdfb:	sub    BYTE PTR [edi],dh
  42bdfd:	leave  
  42bdfe:	fistp  QWORD PTR [eax+0x604e50fe]
  42be04:	add    esp,ebp
  42be06:	(bad)  
  42be0a:	repnz pop esi
  42be0c:	pop    edx
  42be0d:	or     al,0xea
  42be0f:	clc    
  42be10:	scas   al,BYTE PTR es:[edi]
  42be11:	cli    
  42be12:	jecxz  0x42bdf7
  42be14:	xor    ebx,edi
  42be16:	test   al,0xcb
  42be18:	lock aas 
  42be1a:	popf   
  42be1b:	mov    edi,gs
  42be1d:	rcr    ecx,0xbf
  42be20:	or     DWORD PTR [ecx],eax
  42be22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be23:	xchg   ecx,eax
  42be24:	push   esp
  42be25:	xor    BYTE PTR [esi],dl
  42be27:	loop   0x42be4e
  42be29:	lds    ebx,FWORD PTR [esi]
  42be2b:	in     al,0x3e
  42be2d:	outs   dx,BYTE PTR ds:[esi]
  42be2e:	sahf   
  42be2f:	inc    ebp
  42be30:	inc    esp
  42be31:	pop    eax
  42be32:	push   ss
  42be33:	repnz pop es
  42be35:	inc    dx
  42be37:	ss add eax,0x3372a98d
  42be3d:	push   eax
  42be3e:	xor    ch,BYTE PTR [edi-0x2422f26e]
  42be44:	xchg   DWORD PTR [edi-0x3b822d58],edi
  42be4a:	pop    ebp
  42be4b:	in     al,0x2c
  42be4d:	outs   dx,BYTE PTR ds:[esi]
  42be4e:	jmp    0x9c7:0x61c20784
  42be55:	add    BYTE PTR [edx-0x78],ch
  42be58:	lods   eax,DWORD PTR ds:[esi]
  42be59:	cli    
  42be5a:	imul   edx,ebx,0x31
  42be5d:	sti    
  42be5e:	add    BYTE PTR [eax],al
  42be60:	mov    BYTE PTR [ebx-0xf],cl
  42be63:	aas    
  42be64:	popf   
  42be65:	gs inc ebx
  42be67:	and    al,0x92
  42be69:	add    al,dl
  42be6b:	inc    eax
  42be6c:	jb     0x42be99
  42be6e:	cmp    BYTE PTR es:[edx],bl
  42be71:	fbld   TBYTE PTR [edi-0x11]
  42be74:	push   0x6
  42be76:	jmp    0xa3c0107e
  42be7b:	or     ecx,DWORD PTR [edi+0x39]
  42be7e:	rol    DWORD PTR [ebx+0x32e94321],1
  42be84:	sbb    BYTE PTR [eax-0x2e58257c],cl
  42be8a:	mov    eax,0x3cda8d8a
  42be8f:	fist   WORD PTR [edi+0x11c36bd1]
  42be95:	sti    
  42be96:	jle    0x42be9a
  42be98:	in     eax,0xdb
  42be9a:	pushf  
  42be9b:	add    al,0x9d
  42be9d:	add    ch,BYTE PTR [eax+ecx*4+0x46]
  42bea1:	iret   
  42bea2:	icebp  
  42bea3:	fstp   st(2)
  42bea5:	jg     0x42bf0a
  42bea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bea8:	imul   edx,ecx,0xffffffe1
  42beab:	xor    al,0x56
  42bead:	div    DWORD PTR [eax-0xd]
  42beb0:	xchg   edx,eax
  42beb1:	add    ah,BYTE PTR [eax+0x47]
  42beb4:	xchg   ebp,eax
  42beb5:	test   eax,edx
  42beb7:	(bad)  
  42beb9:	push   es
  42beba:	dec    edi
  42bebb:	or     BYTE PTR [edx-0x54],al
  42bebe:	cmc    
  42bebf:	fsub   QWORD PTR [ecx]
  42bec1:	xchg   DWORD PTR [eax+0x270000df],edx
  42bec7:	rol    eax,1
  42bec9:	jmp    0x15a:0x87e8d123
  42bed0:	fs mov eax,0x88e8d112
  42bed6:	xchg   esp,eax
  42bed7:	jge    0x42bec0
  42bed9:	mov    gs,WORD PTR [ecx]
  42bedb:	sahf   
  42bedc:	sbb    ebp,0xfffffff7
  42bedf:	xor    edx,DWORD PTR [esi]
  42bee1:	frstor [edx+0x45a8ff87]
  42bee7:	cli    
  42bee8:	jle    0x42bf5b
  42beea:	sahf   
  42beeb:	(bad)  [edi-0xdfd6117]
  42bef1:	fs or  eax,0xd156face
  42bef7:	sti    
  42bef8:	and    DWORD PTR [ebp-0x67],0x2
  42befc:	add    BYTE PTR [edi],bh
  42befe:	arpl   dx,di
  42bf00:	std    
  42bf01:	mov    ah,0x7d
  42bf03:	jg     0x42be89
  42bf05:	adc    edx,ecx
  42bf07:	retf   
  42bf08:	cli    
  42bf09:	cdq    
  42bf0a:	mov    dh,0xdd
  42bf0c:	(bad)  
  42bf0d:	call   0x960245b0
  42bf12:	lea    ecx,[ecx+0x7d9e6209]
  42bf18:	xchg   esp,eax
  42bf19:	cmp    eax,0x9bfacd62
  42bf1e:	lods   eax,DWORD PTR ds:[esi]
  42bf1f:	retf   
  42bf20:	dec    edi
  42bf21:	in     eax,0x1b
  42bf23:	nop
  42bf24:	je     0x42bf51
  42bf26:	push   ebx
  42bf27:	inc    edx
  42bf28:	or     al,ch
  42bf2a:	add    BYTE PTR [eax],al
  42bf2c:	retf   0x8d4c
  42bf2f:	ins    BYTE PTR es:[edi],dx
  42bf30:	push   ss
  42bf31:	iret   
  42bf32:	cli    
  42bf33:	fimul  WORD PTR [esi+0x26c8d3f]
  42bf39:	fsqrt  
  42bf3b:	into   
  42bf3c:	mov    ds,edx
  42bf3e:	xor    ch,al
  42bf40:	pop    ecx
  42bf41:	int    0x84
  42bf43:	test   eax,0xea6605cb
  42bf48:	imul   esp,edi,0xa41b5c19
  42bf4e:	mul    BYTE PTR [esi-0x5078c007]
  42bf54:	push   es
  42bf55:	stc    
  42bf56:	cli    
  42bf57:	xchg   esi,eax
  42bf58:	jmp    0xe1a7b6e5
  42bf5d:	push   ebx
  42bf5e:	dec    ebp
  42bf5f:	add    BYTE PTR [edi-0x5e8c0052],al
  42bf65:	xor    ebp,0x835be802
  42bf6b:	push   cs
  42bf6c:	jg     0x42bf72
  42bf6e:	dec    edi
  42bf6f:	lea    ebx,[ecx-0x61]
  42bf72:	sti    
  42bf73:	push   DWORD PTR [ebx+0x11]
  42bf76:	dec    ebx
  42bf77:	inc    DWORD PTR [esp+edi*8]
  42bf7a:	jp     0x42bf74
  42bf7c:	mov    bh,0x37
  42bf7e:	mov    al,0xe9
  42bf80:	jmp    0x42bf30
  42bf82:	cmc    
  42bf83:	jmp    FWORD PTR [edx+0x45]
  42bf86:	or     BYTE PTR [eax+ebp*8],al
  42bf89:	and    cl,BYTE PTR [ebp-0xa4f737b]
  42bf8f:	inc    DWORD PTR [eax]
  42bf91:	add    BYTE PTR [ebx+ebx*8+0x67],dl
  42bf95:	add    BYTE PTR [ebx+eax*1-0x2dd73f7c],al
  42bf9c:	or     DWORD PTR [esi],0x958d04ff
  42bfa2:	shl    BYTE PTR [eax+0x1216fff5],1
  42bfa8:	not    DWORD PTR [eax+0x78]
  42bfab:	mov    BYTE PTR [edx-0x7c7fb18b],bh
  42bfb1:	lods   al,BYTE PTR ds:[esi]
  42bfb2:	inc    ecx
  42bfb3:	stos   DWORD PTR es:[edi],eax
  42bfb4:	cmc    
  42bfb5:	push   eax
  42bfb6:	jae    0x42bfe9
  42bfb8:	or     bh,bh
  42bfba:	dec    ecx
  42bfbb:	push   ebx
  42bfbc:	adc    BYTE PTR [eax+0x34],al
  42bfbf:	cmp    BYTE PTR [edx-0x8fa36f1],0xff
  42bfc6:	repz fiadd WORD PTR [ecx]
  42bfc9:	xor    edi,ebp
  42bfcb:	xchg   dl,dh
  42bfcd:	add    al,BYTE PTR [ebx+0x52]
  42bfd0:	ror    BYTE PTR [ebp+0x15f705bd],0x9c
  42bfd7:	aad    0x3a
  42bfd9:	add    BYTE PTR [ebp+0x284d464],bl
  42bfdf:	test   BYTE PTR [ebx],0x7f
  42bfe2:	sti    
  42bfe3:	stos   BYTE PTR es:[edi],al
  42bfe4:	dec    edx
  42bfe5:	inc    DWORD PTR [ebp+eiz*8-0x1e8f04cb]
  42bfec:	aad    0x14
  42bfee:	adc    DWORD PTR [edx+0x6873003e],ebp
  42bff4:	icebp  
  42bff5:	and    eax,DWORD PTR [eax]
  42bff7:	add    BYTE PTR [edi-0x1d790167],ch
  42bffd:	xchg   edi,eax
  42bffe:	cmp    BYTE PTR [edi-0x2c],dl
  42c001:	sbb    al,BYTE PTR [eax]
  42c003:	add    BYTE PTR [edx-0x34],dl
  42c006:	aad    0x38
  42c008:	xor    DWORD PTR ds:0xcba1750c,eax
  42c00e:	mov    esi,0x3e6448e6
  42c013:	adc    al,0xc6
  42c015:	sbb    al,0x50
  42c017:	dec    esp
  42c018:	in     eax,0x77
  42c01a:	sbb    cl,BYTE PTR [eax+0x10]
  42c01d:	add    eax,0x75ad7a1d
  42c022:	in     al,dx
  42c023:	xchg   bl,ah
  42c025:	xlat   BYTE PTR ds:[ebx]
  42c026:	aad    0x33
  42c028:	xor    eax,0x99244acd
  42c02d:	aam    0xef
  42c02f:	imul   ecx,DWORD PTR [esi+0x5d84fe9b],0x2f
  42c036:	sub    DWORD PTR [ebx-0x6a],eax
  42c039:	sub    eax,0xc1436df4
  42c03e:	enter  0xdb86,0xaf
  42c042:	mov    esi,DWORD PTR [edi-0x57]
  42c045:	mov    al,0x5
  42c047:	push   eax
  42c048:	xor    bl,BYTE PTR [eax]
  42c04a:	and    BYTE PTR [edx+ebp*1],cl
  42c04d:	scas   eax,DWORD PTR es:[edi]
  42c04e:	bound  ecx,QWORD PTR [edi]
  42c050:	fstp   st(3)
  42c052:	jg     0x42c013
  42c054:	nop
  42c055:	add    dh,bl
  42c057:	mov    ds,WORD PTR [esi+edi*8-0x70]
  42c05b:	inc    edx
  42c05c:	add    BYTE PTR [eax],al
  42c05e:	repz int 0x91
  42c061:	push   ds
  42c062:	ficom  WORD PTR [edi-0x7c]
  42c065:	out    dx,al
  42c066:	inc    ebp
  42c067:	xchg   ebx,eax
  42c068:	out    0x3a,eax
  42c06a:	xor    eax,DWORD PTR [edi]
  42c06c:	jmp    0x1621e2a1
  42c071:	xor    dh,BYTE PTR [edx+0x1d6c15a9]
  42c077:	add    ebp,ecx
  42c079:	add    edi,DWORD PTR [ebx]
  42c07b:	add    BYTE PTR [esi-0x16a56393],dh
  42c081:	add    ebx,DWORD PTR [ebp-0x5aafb5be]
  42c087:	int    0xdb
  42c089:	adc    esp,DWORD PTR [ebx-0x457116be]
  42c08f:	xor    DWORD PTR [edx],0xf0142eda
  42c095:	cmp    BYTE PTR [ecx-0xfe301aa],ch
  42c09b:	repnz xchg esp,eax
  42c09d:	icebp  
  42c09e:	fstp   TBYTE PTR [edi-0x55]
  42c0a1:	repz ror ch,cl
  42c0a4:	xchg   ebx,eax
  42c0a5:	repz ja 0x42c0ff
  42c0a8:	cmc    
  42c0a9:	xor    DWORD PTR [esi-0x9],esi
  42c0ac:	mov    esp,0x6c02aaf5
  42c0b1:	ret    
  42c0b2:	out    dx,al
  42c0b3:	add    BYTE PTR [esi],dh
  42c0b5:	add    al,0xef
  42c0b7:	int    0xfb
  42c0b9:	mov    ds:0x83e942a0,eax
  42c0be:	push   ebx
  42c0bf:	add    ebx,DWORD PTR [ebp+0xc]
  42c0c2:	add    BYTE PTR [eax],al
  42c0c4:	inc    esi
  42c0c5:	push   edi
  42c0c6:	loope  0x42c0b3
  42c0c8:	fwait
  42c0c9:	pop    esp
  42c0ca:	ret    
  42c0cb:	(bad)  
  42c0cd:	js     0x42c074
  42c0cf:	cmp    eax,0xe4ffc0c8
  42c0d4:	sahf   
  42c0d5:	aaa    
  42c0d6:	xchg   DWORD PTR [ebp-0x25accc32],edi
  42c0dc:	cmc    
  42c0dd:	das    
  42c0de:	push   ebx
  42c0df:	adc    esp,DWORD PTR [eax+0x76e86631]
  42c0e5:	add    al,BYTE PTR [eax]
  42c0e7:	jmp    0xf1b7890a
  42c0ec:	aad    0xf5
  42c0ee:	das    
  42c0ef:	fistp  DWORD PTR [esi+0x2]
  42c0f2:	mov    DWORD PTR [edi],ebp
  42c0f4:	xchg   ecx,eax
  42c0f5:	dec    ebp
  42c0f6:	clc    
  42c0f7:	outs   dx,BYTE PTR ds:[esi]
  42c0f8:	ins    DWORD PTR es:[edi],dx
  42c0f9:	push   edx
  42c0fa:	lea    esi,[esi+esi*8-0x45a1afcf]
  42c101:	and    al,0xe
  42c103:	test   eax,0xd5bf879e
  42c108:	jbe    0x42c115
  42c10a:	jge    0x42c151
  42c10c:	bound  edi,QWORD PTR ds:0x79c6a487
  42c112:	inc    ecx
  42c113:	in     eax,dx
  42c114:	add    ecx,0xa27e574
  42c11a:	out    0xda,eax
  42c11c:	add    BYTE PTR [edi],al
  42c11e:	push   0x2aee9
  42c123:	mov    ecx,0x514c7cd
  42c128:	add    BYTE PTR [eax],al
  42c12a:	outs   dx,BYTE PTR ds:[esi]
  42c12b:	or     al,0x0
  42c12d:	jo     0x42c0ce
  42c12f:	adc    eax,ebx
  42c131:	jne    0x42c0c1
  42c133:	das    
  42c134:	lea    esp,[esi+edx*4+0x5a77fb31]
  42c13b:	cmp    al,0xfb
  42c13d:	pop    edi
  42c13e:	mov    eax,ds:0x531514c7
  42c143:	or     al,0x0
  42c145:	ins    BYTE PTR es:[edi],dx
  42c146:	pop    esi
  42c147:	push   eax
  42c148:	or     al,0x62
  42c14a:	jnp    0x42c146
  42c14c:	add    BYTE PTR ss:[edx-0x5bfb8afe],al
  42c153:	add    bl,ah
  42c155:	sbb    esp,ebx
  42c157:	push   es
  42c158:	add    BYTE PTR [eax],0x4
  42c15b:	adc    esi,edi
  42c15d:	ss cmp ebx,ebp
  42c160:	ficom  DWORD PTR [ecx]
  42c162:	mov    ah,0x6
  42c164:	div    DWORD PTR [esi-0x4]
  42c167:	stos   BYTE PTR es:[edi],al
  42c168:	adc    esp,DWORD PTR [eax+0x32003ff6]
  42c16e:	inc    esp
  42c16f:	or     ecx,ecx
  42c171:	ret    0x0
  42c174:	dec    esi
  42c175:	mov    esp,DWORD PTR [esi+edi*2+0x0]
  42c179:	test   DWORD PTR [esp+edi*1],eax
  42c17c:	push   es
  42c17d:	push   0xfffa7fc4
  42c182:	out    dx,al
  42c183:	dec    DWORD PTR [edi-0x1]
  42c186:	rcr    edi,0xf
  42c189:	inc    eax
  42c18a:	les    edi,FWORD PTR [esi+0x70]
  42c18d:	or     BYTE PTR [eax],al
  42c18f:	add    BYTE PTR [ecx-0x4f],al
  42c192:	outs   dx,BYTE PTR ds:[esi]
  42c193:	pop    es
  42c194:	adc    ch,BYTE PTR [ebx+0x3fc6a013]
  42c19a:	add    BYTE PTR [esi-0x39],bl
  42c19d:	sbb    al,0x83
  42c19f:	in     al,dx
  42c1a0:	add    eax,0x74040ae4
  42c1a5:	dec    DWORD PTR [edx+0x56]
  42c1a8:	inc    ebx
  42c1a9:	test   BYTE PTR [ebx-0xa557010],al
  42c1af:	push   eax
  42c1b0:	or     al,0xb1
  42c1b2:	cli    
  42c1b3:	push   DWORD PTR [edx+ebp*4+0x13]
  42c1b7:	sbb    BYTE PTR [edi+0x3f],al
  42c1ba:	add    BYTE PTR [eax+0x9],cl
  42c1bd:	mov    esp,0x3c44fffa
  42c1c2:	ins    BYTE PTR es:[edi],dx
  42c1c3:	xor    esi,DWORD PTR [edx-0x4d]
  42c1c6:	jae    0x42c1d0
  42c1c8:	popf   
  42c1c9:	sar    DWORD PTR [esi+0x33bc3aa8],0x68
  42c1d0:	mov    ebp,0xb5004456
  42c1d5:	mov    DWORD PTR gs:[edi],edi
  42c1d8:	popf   
  42c1d9:	push   eax
  42c1da:	add    BYTE PTR [ecx],al
  42c1dc:	popf   
  42c1dd:	fld    DWORD PTR [edi-0x2d59ea44]
  42c1e3:	cli    
  42c1e4:	cmc    
  42c1e5:	jecxz  0x42c226
  42c1e7:	cli    
  42c1e8:	add    bl,BYTE PTR [eax-0x40]
  42c1eb:	nop    DWORD PTR [ecx-0x2e]
  42c1ef:	jae    0x42c1a3
  42c1f1:	push   eax
  42c1f2:	mov    ebx,0x1800004f
  42c1f7:	data16 aam 0xf6
  42c1fa:	loop   0x42c24f
  42c1fc:	xor    al,0xfb
  42c1fe:	push   eax
  42c1ff:	lods   eax,DWORD PTR ds:[esi]
  42c200:	out    0x7d,al
  42c202:	aam    0x63
  42c204:	rol    DWORD PTR [ebp+ebx*8-0x6299e14c],cl
  42c20b:	sar    DWORD PTR [esi-0x1],0xba
  42c20f:	fsubr  DWORD PTR [eax+0x1]
  42c212:	inc    edi
  42c213:	fldcw  WORD PTR [eax+0x1]
  42c216:	xor    eax,0xddfffed9
  42c21b:	adc    edx,DWORD PTR [ecx+0xc]
  42c21e:	call   0x7ddb:0xdd0e0eaf
  42c225:	test   DWORD PTR [edx+0x1c41f06f],0x7affcbf2
  42c22f:	fcom   QWORD PTR [eax-0x6e]
  42c232:	scas   eax,DWORD PTR es:[edi]
  42c233:	sbb    esi,DWORD PTR [ebx]
  42c235:	pop    edx
  42c236:	(bad)  
  42c237:	adc    bh,BYTE PTR [esi-0x2e9462f9]
  42c23d:	adc    al,0xfd
  42c23f:	lods   eax,DWORD PTR ds:[esi]
  42c240:	add    BYTE PTR ds:0x34eae803,cl
  42c247:	xor    BYTE PTR [esi-0x19],ch
  42c24a:	sbb    eax,0x3afff8d7
  42c24f:	retf   0x2e35
  42c252:	into   
  42c253:	ja     0x42c2c0
  42c255:	shl    DWORD PTR [ebx],cl
  42c257:	retf   0x33b9
  42c25a:	add    BYTE PTR [eax],al
  42c25c:	mov    ch,0xd0
  42c25e:	call   0xd40c5f66
  42c263:	sti    
  42c264:	mov    ds:0xc84be942,eax
  42c269:	iret   
  42c26a:	call   0x3c945f72
  42c26f:	adc    ebp,edi
  42c271:	fcmove st,st(0)
  42c273:	lods   al,BYTE PTR ds:[esi]
  42c274:	test   ecx,0x777d6c18
  42c27a:	sub    BYTE PTR [esi*2-0x62bc9c96],al
  42c281:	(bad)  
  42c282:	in     al,0x4
  42c284:	popf   
  42c285:	add    dh,BYTE PTR [eax+ebx*4-0x2e]
  42c289:	(bad)  
  42c28a:	pop    ecx
  42c28b:	(bad)  
  42c28c:	mov    edx,0xb7d5ad5e
  42c291:	test   DWORD PTR [edi+eax*1],esp
  42c294:	xor    cl,dl
  42c296:	inc    ecx
  42c297:	dec    edi
  42c298:	cmp    BYTE PTR [ebp+0x21],0x33
  42c29c:	adc    BYTE PTR [eax-0x366825c8],al
  42c2a2:	cwde   
  42c2a3:	(bad)  
  42c2a4:	or     ebx,edi
  42c2a6:	adc    BYTE PTR [esi-0x7fe6366e],dh
  42c2ac:	inc    edx
  42c2ad:	dec    esi
  42c2ae:	loop   0x42c319
  42c2b0:	popf   
  42c2b1:	leave  
  42c2b2:	xchg   ebx,eax
  42c2b3:	or     esi,DWORD PTR [esi-0x11]
  42c2b6:	and    al,0xf4
  42c2b8:	stos   BYTE PTR es:[edi],al
  42c2b9:	add    ah,BYTE PTR [ebx+eax*8-0x17]
  42c2bd:	stc    
  42c2be:	jmp    FWORD PTR [esi-0x34e10000]
  42c2c4:	arpl   WORD PTR [ebx+0x5],di
  42c2c7:	pop    ss
  42c2c8:	rol    BYTE PTR [esi-0x6d],0x31
  42c2cc:	leave  
  42c2cd:	stos   DWORD PTR es:[edi],eax
  42c2ce:	popf   
  42c2cf:	add    dh,BYTE PTR [eax-0x7b31ba18]
  42c2d5:	test   eax,0x6a61edcd
  42c2da:	mov    DWORD PTR [esi*2+0x479599e0],ebx
  42c2e1:	jmp    0x42c35b
  42c2e3:	jg     0x42c2ad
  42c2e5:	xor    eax,0xd7f949a5
  42c2ea:	pop    ebx
  42c2eb:	add    DWORD PTR [edx+0x6a],esp
  42c2ee:	popa   
  42c2ef:	(bad)  
  42c2f0:	call   FWORD PTR [ebx]
  42c2f2:	popf   
  42c2f3:	sbb    eax,eax
  42c2f5:	sub    esp,ebx
  42c2f7:	pop    ss
  42c2f8:	shr    BYTE PTR [edx+0xd872fac],0xbd
  42c2ff:	not    BYTE PTR [ecx+0x1e]
  42c302:	mov    bl,BYTE PTR [eax]
  42c304:	xlat   BYTE PTR ds:[ebx]
  42c305:	outs   dx,BYTE PTR ds:[esi]
  42c306:	ret    0xf60
  42c309:	test   eax,0x64ef819e
  42c30e:	ror    DWORD PTR [ebp-0x2],cl
  42c311:	popa   
  42c312:	jmp    0x5bd1:0x1de7b2fb
  42c319:	mov    ebp,0xef84994
  42c31e:	dec    ebp
  42c31f:	jmp    DWORD PTR [ecx+0x6c]
  42c322:	popa   
  42c323:	dec    edi
  42c324:	sub    al,0x62
  42c326:	add    BYTE PTR [eax],al
  42c328:	jno    0x42c343
  42c32a:	sar    BYTE PTR [eax+ebp*8+0x721e0179],0x10
  42c332:	push   cs
  42c333:	test   eax,0xef8479e
  42c338:	loop   0x42c32f
  42c33a:	add    BYTE PTR gs:[ecx+ebx*1-0x9],dh
  42c33f:	adc    eax,0x3ad380
  42c344:	leave  
  42c345:	mov    esi,0xcedc02e1
  42c34a:	outs   dx,BYTE PTR ds:[esi]
  42c34b:	pminub mm0,QWORD PTR [edi-0xa]
  42c34f:	je     0x42c39d
  42c351:	mov    DWORD PTR es:[esi],edi
  42c354:	mov    DWORD PTR [ebp+0x7321eafc],0xf825eff
  42c35e:	add    bl,0x7f
  42c361:	(bad)  
  42c362:	(bad)  
  42c363:	(bad)  
  42c364:	mov    ecx,0xd883e679
  42c369:	stos   DWORD PTR es:[edi],eax
  42c36a:	jg     0x42c358
  42c36c:	pop    esp
  42c36d:	add    al,BYTE PTR [eax]
  42c36f:	add    dl,cl
  42c371:	adc    eax,0x43818068
  42c376:	add    BYTE PTR [ebx+0x448d170d],cl
  42c37c:	fcom   st(3)
  42c37e:	dec    edx
  42c37f:	call   0x386f74
  42c384:	dec    ecx
  42c385:	ret    
  42c386:	outs   dx,BYTE PTR ds:[esi]
  42c387:	jp     0x42c3fa
  42c389:	inc    edi
  42c38a:	pop    ds
  42c38b:	adc    BYTE PTR [eax],al
  42c38d:	add    BYTE PTR [esi+0x31500003],dh
  42c393:	pop    es
  42c394:	and    al,0xc
  42c396:	hlt    
  42c397:	scas   al,BYTE PTR es:[edi]
  42c398:	adc    ecx,DWORD PTR [eax-0x74ffbc4b]
  42c39e:	fs cmp al,0xff
  42c3a2:	call   0xa8c7510a
  42c3a7:	jmp    0xff27:0xdb84fff9
  42c3ae:	ret    
  42c3af:	scas   al,BYTE PTR es:[edi]
  42c3b0:	jle    0x42c372
  42c3b2:	sub    ebp,esi
  42c3b4:	mov    WORD PTR [ebp+ebx*4+0x72fe12b5],es
  42c3bb:	fldcw  WORD PTR [esi]
  42c3bd:	push   ebx
  42c3be:	sbb    BYTE PTR [ebp-0xe32efe6],dl
  42c3c4:	(bad)  
  42c3c5:	repnz pop edx
  42c3c7:	sar    BYTE PTR [edi+edi*4-0x37],1
  42c3cb:	mov    eax,0xc98183cc
  42c3d0:	add    al,0x0
  42c3d2:	popf   
  42c3d3:	leave  
  42c3d4:	push   edx
  42c3d5:	pop    es
  42c3d6:	sub    BYTE PTR ds:0x61450828,bl
  42c3dc:	iret   
  42c3dd:	cli    
  42c3de:	sub    dh,BYTE PTR [ecx+edi*8-0x4022674]
  42c3e5:	dec    edi
  42c3e6:	add    eax,0x12fa59b2
  42c3eb:	mov    BYTE PTR es:[ebx],ah
  42c3ee:	lods   eax,DWORD PTR ds:[esi]
  42c3ef:	(bad)  
  42c3f1:	inc    DWORD PTR [eax]
  42c3f3:	add    BYTE PTR [ebp+0xf],ch
  42c3f6:	iret   
  42c3f7:	adc    al,0xd
  42c3f9:	retf   0x3e
  42c3fc:	sbb    BYTE PTR [ecx-0x7fac5ca8],bl
  42c402:	clc    
  42c403:	mov    ecx,DWORD PTR [ecx+ebx*1-0x26e297fc]
  42c40a:	(bad)  
  42c40b:	jmp    FWORD PTR [edx+0x58]
  42c40e:	stc    
  42c40f:	imul   ebx,DWORD PTR [ecx-0x323dad02]
  42c416:	(bad)  
  42c417:	adc    BYTE PTR [ebp-0x27],bl
  42c41a:	xchg   DWORD PTR [edi-0x408857ae],edi
  42c420:	dec    ebx
  42c421:	push   esp
  42c422:	jmp    0x4896a283
  42c427:	and    al,0xa5
  42c429:	fcomp  QWORD PTR [ebp+0x2ea7b943]
  42c42f:	call   0xd165c78e
  42c434:	xchg   edx,eax
  42c436:	sbb    DWORD PTR [eax-0x3f],ebx
  42c439:	cli    
  42c43a:	add    cl,ch
  42c43c:	je     0x42c406
  42c43e:	or     edi,eax
  42c440:	add    BYTE PTR [edi],al
  42c442:	(bad)  
  42c443:	sti    
  42c444:	adc    BYTE PTR [bx+di],cl
  42c447:	lahf   
  42c448:	fwait
  42c449:	add    dh,dl
  42c44b:	clc    
  42c44c:	sahf   
  42c44d:	icebp  
  42c44e:	test   al,0x3
  42c450:	and    bl,al
  42c452:	pop    esp
  42c453:	stc    
  42c454:	pop    edi
  42c455:	inc    ebx
  42c456:	or     DWORD PTR [eax+0x0],esp
  42c459:	add    ch,bh
  42c45b:	inc    eax
  42c45c:	jmp    0x4d61372b
  42c461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c462:	push   0x7543aa02
  42c467:	stc    
  42c468:	call   0x5e046170
  42c46d:	or     DWORD PTR [eax],ebx
  42c46f:	ret    
  42c470:	xor    al,0x29
  42c472:	and    dh,BYTE PTR ds:0xf9893ced
  42c478:	das    
  42c479:	pop    ecx
  42c47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c47b:	xor    al,BYTE PTR [ecx-0x16fd8c92]
  42c481:	ficomp WORD PTR [edx+esi*1+0x27d8691]
  42c488:	jmp    0x5b1d515f
  42c48d:	rcl    ecx,1
  42c48f:	lds    esp,FWORD PTR [ebp+0x29]
  42c492:	popf   
  42c493:	or     edx,0xb3c19d07
  42c499:	jle    0x42c461
  42c49b:	add    DWORD PTR [edi+edi*8+0x33],0x2a03555f
  42c4a3:	pop    edi
  42c4a4:	inc    ecx
  42c4a5:	add    ecx,DWORD PTR [edi+0x2d]
  42c4a8:	outs   dx,BYTE PTR ds:[esi]
  42c4a9:	retf   
  42c4aa:	xor    BYTE PTR [ecx-0x1],0x35
  42c4ae:	outs   dx,DWORD PTR ds:[esi]
  42c4af:	enter  0x3986,0x15
  42c4b3:	shl    DWORD PTR [ebx-0x4d],cl
  42c4b6:	loopne 0x42c4c2
  42c4b8:	push   0x51d51
  42c4bd:	add    DWORD PTR [eax],0x0
  42c4c0:	dec    ecx
  42c4c1:	xor    ebp,eax
  42c4c3:	xor    edx,ecx
  42c4c5:	add    al,BYTE PTR [eax]
  42c4c7:	ins    BYTE PTR es:[edi],dx
  42c4c8:	pop    esi
  42c4c9:	dec    esi
  42c4ca:	xor    DWORD PTR [edx-0x1b],esi
  42c4cd:	cli    
  42c4ce:	mov    bh,ch
  42c4d0:	sar    DWORD PTR [esi],cl
  42c4d2:	or     al,0x60
  42c4d4:	aam    0xfe
  42c4d6:	xchg   BYTE PTR [ecx+ecx*2],ch
  42c4d9:	jp     0x42c51c
  42c4db:	in     eax,dx
  42c4dc:	mov    ecx,0x74ed6600
  42c4e1:	jnp    0x42c557
  42c4e3:	aad    0x54
  42c4e5:	ds clc 
  42c4e7:	jmp    0x42c487
  42c4e9:	add    al,BYTE PTR [eax]
  42c4eb:	jo     0x42c554
  42c4ed:	repnz out 0x65,eax
  42c4f0:	jg     0x42c4f4
  42c4f2:	add    BYTE PTR [edx+0x5f],ah
  42c4f5:	out    dx,al
  42c4f6:	mov    dh,dh
  42c4f8:	or     ebp,0xdab4f0e6
  42c4fe:	and    dl,BYTE PTR [edi-0x729a381e]
  42c504:	lods   al,BYTE PTR ds:[esi]
  42c505:	ja     0x42c57b
  42c507:	jge    0x42c4ca
  42c509:	es sti 
  42c50b:	jle    0x42c4f9
  42c50d:	jnp    0x42c4d1
  42c50f:	push   ss
  42c510:	(bad)  
  42c511:	mov    ebx,0x2f9eddbd
  42c516:	xchg   DWORD PTR [ebp+0x18],edx
  42c519:	fst    DWORD PTR [edi]
  42c51b:	mov    edx,0xba51ad91
  42c520:	imul   esi,DWORD PTR ds:0x2687,0x202826
  42c52a:	sub    eax,0x3b892413
  42c52f:	call   0xb2a5921b
  42c534:	cmc    
  42c535:	test   BYTE PTR [ecx+eax*1+0x74b884],dh
  42c53c:	add    BYTE PTR [edi+0x9],dl
  42c53f:	sub    al,0xe8
  42c541:	call   0x391f7e
  42c546:	add    BYTE PTR [edi-0x12c7bfb],bh
  42c54c:	(bad)  
  42c54d:	dec    ebp
  42c54f:	adc    esi,eax
  42c551:	mov    DWORD PTR [ecx],ebp
  42c553:	lods   al,BYTE PTR ds:[esi]
  42c554:	loope  0x42c558
  42c556:	pop    es
  42c557:	xchg   edi,eax
  42c558:	fs add eax,0x50f83cc9
  42c55e:	jae    0x42c506
  42c560:	mov    dh,0x66
  42c562:	dec    edx
  42c563:	mov    bl,0x31
  42c565:	ret    
  42c566:	dec    ebx
  42c567:	jl     0x42c4ec
  42c569:	add    BYTE PTR [eax+eax*1],dh
  42c56c:	jnp    0x42c566
  42c56e:	add    DWORD PTR ds:0xb6c18b5a,ebp
  42c574:	sub    DWORD PTR [edi-0x14],eax
  42c577:	inc    ebp
  42c578:	inc    esi
  42c579:	sbb    ah,ah
  42c57b:	add    al,0xfc
  42c57d:	xor    edx,DWORD PTR [edx]
  42c57f:	inc    edi
  42c580:	rol    DWORD PTR [ebx],cl
  42c582:	test   eax,0xc4587ae
  42c587:	iret   
  42c588:	jae    0x42c57e
  42c58a:	add    BYTE PTR [eax],al
  42c58c:	ja     0x42c54c
  42c58e:	add    eax,DWORD PTR [ebx+0x75330032]
  42c594:	sbb    BYTE PTR [ebx],ch
  42c596:	cmp    al,0x72
  42c598:	shl    esi,0x5c
  42c59b:	call   0x7fb283
  42c5a0:	les    ebx,FWORD PTR [edi-0x4628906]
  42c5a6:	pop    ecx
  42c5a7:	add    BYTE PTR [ebx-0x78],dl
  42c5aa:	jnp    0x42c56e
  42c5ac:	mov    ch,0x68
  42c5ae:	push   0xbf5d9afa
  42c5b3:	jae    0x42c593
  42c5b5:	pop    eax
  42c5b6:	dec    eax
  42c5b7:	and    BYTE PTR [edx+eiz*2+0x6614f02a],bl
  42c5be:	sar    BYTE PTR [esi-0x2e],cl
  42c5c1:	mov    ebp,0xedd8f1fe
  42c5c6:	std    
  42c5c7:	je     0x42c5d6
  42c5c9:	pop    eax
  42c5ca:	dec    edx
  42c5cb:	clc    
  42c5cc:	popf   
  42c5cd:	inc    ebx
  42c5ce:	jge    0x42c5ca
  42c5d0:	loop   0x42c583
  42c5d2:	fild   DWORD PTR [esi+ecx*4-0x2f04cc10]
  42c5d9:	int    0x76
  42c5db:	ret    0x2642
  42c5de:	aam    0xe7
  42c5e0:	jge    0x42c61d
  42c5e2:	retf   0x19fa
  42c5e5:	cdq    
  42c5e6:	push   edi
  42c5e7:	adc    BYTE PTR [edx],ch
  42c5e9:	in     al,dx
  42c5ea:	retf   0xd514
  42c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5ee:	add    BYTE PTR ds:[eax],al
  42c5f1:	add    BYTE PTR [eax],ah
  42c5f3:	cdq    
  42c5f4:	push   edi
  42c5f5:	add    al,0x4d
  42c5f7:	fcmovbe st,st(5)
  42c5f9:	std    
  42c5fa:	int3   
  42c5fb:	cdq    
  42c5fc:	sub    DWORD PTR [edi-0x2c],edx
  42c5ff:	xchg   edi,eax
  42c600:	xor    al,0x52
  42c602:	push   edx
  42c603:	out    dx,eax
  42c604:	adc    ebp,eax
  42c606:	call   0x5799:0x20fad06e
  42c60d:	sbb    dl,BYTE PTR [esi]
  42c60f:	or     eax,0xd11e1428
  42c614:	leave  
  42c615:	jle    0x42c67c
  42c617:	loope  0x42c5e2
  42c619:	jle    0x42c670
  42c61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c61c:	leave  
  42c61d:	jle    0x42c65c
  42c61f:	add    bh,cl
  42c621:	add    edi,DWORD PTR [edx]
  42c623:	(bad)  
  42c624:	cmc    
  42c625:	add    esp,DWORD PTR [edx+edi*1]
  42c628:	icebp  
  42c629:	jp     0x42c5e5
  42c62b:	(bad)  
  42c62c:	out    0x12,al
  42c62e:	scas   eax,DWORD PTR es:[edi]
  42c62f:	jl     0x42c66b
  42c631:	pop    ecx
  42c632:	mov    eax,ds:0xa8db28f5
  42c637:	lea    ebp,[edi+eiz*1+0x7d2a8dad]
  42c63e:	pushf  
  42c63f:	stos   BYTE PTR es:[edi],al
  42c640:	ds into 
  42c642:	ja     0x42c606
  42c644:	fs (bad) 
  42c646:	jmp    0xd378c754
  42c64b:	ror    DWORD PTR [ecx],0xdb
  42c64e:	jle    0x42c5de
  42c650:	sub    ch,BYTE PTR [edi]
  42c652:	neg    DWORD PTR [ebx+0x27]
  42c655:	cld    
  42c656:	add    BYTE PTR [eax],al
  42c658:	push   edx
  42c659:	push   edi
  42c65a:	pop    esi
  42c65b:	loopne 0x42c628
  42c65d:	scas   al,BYTE PTR es:[edi]
  42c65e:	shl    BYTE PTR [edx],1
  42c660:	out    dx,eax
  42c661:	(bad)  
  42c662:	sub    eax,DWORD PTR [eax]
  42c664:	int    0xc1
  42c666:	push   ebx
  42c667:	add    BYTE PTR [edx-0x4e30ca23],al
  42c66d:	or     al,cl
  42c66f:	cmp    DWORD PTR [ebp+0x2],esp
  42c672:	jmp    0xfe4d27f3
  42c677:	ret    0x86a7
  42c67a:	mov    eax,DWORD PTR [ebx]
  42c67c:	popf   
  42c67d:	add    bh,BYTE PTR [edi]
  42c67f:	add    dl,BYTE PTR [edx+0x55]
  42c682:	outs   dx,BYTE PTR ds:[esi]
  42c683:	mov    BYTE PTR [edx],0x83
  42c686:	add    ecx,esi
  42c688:	test   DWORD PTR [esi-0x72e10158],0x599d03e8
  42c692:	je     0x42c6ec
  42c694:	lds    ebp,FWORD PTR [edx-0x3e289735]
  42c69a:	jmp    FWORD PTR [esi+ebx*8+0x35]
  42c69e:	jge    0x42c702
  42c6a0:	pop    ebx
  42c6a1:	sbb    ch,BYTE PTR [edi]
  42c6a3:	lods   al,BYTE PTR ds:[esi]
  42c6a4:	mov    dh,0x88
  42c6a6:	xor    al,0x1d
  42c6a8:	scas   eax,DWORD PTR es:[edi]
  42c6a9:	add    DWORD PTR [eax],eax
  42c6ab:	pusha  
  42c6ac:	push   ebp
  42c6ad:	mov    dh,0x85
  42c6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c6b0:	mov    dh,0x50
  42c6b2:	mov    BYTE PTR [esi+eiz*2-0x31c2bb72],ch
  42c6b9:	sub    BYTE PTR ds:0xd5000064,al
  42c6bf:	mov    dh,0x4f
  42c6c1:	cs stos DWORD PTR es:[edi],eax
  42c6c3:	mov    ebp,0x355e6cd1
  42c6c8:	cmp    ebp,DWORD PTR [edx-0x33]
  42c6cb:	mov    esi,0x51999c04
  42c6d0:	lea    esp,[edx+edx*2+0x567cfb51]
  42c6d7:	mov    esp,0xf463ed74
  42c6dc:	cli    
  42c6dd:	pop    ds
  42c6de:	adc    eax,0xc7c77381
  42c6e3:	inc    esi
  42c6e4:	or     BYTE PTR [eax],ah
  42c6e6:	loop   0x42c6a6
  42c6e8:	je     0x42c6e9
  42c6ea:	sbb    eax,0x59e82044
  42c6ef:	hlt    
  42c6f0:	adc    BYTE PTR [esi],ch
  42c6f2:	jne    0x42c6b1
  42c6f4:	inc    edx
  42c6f5:	adc    eax,ebp
  42c6f7:	adc    eax,0x25edb2c
  42c6fc:	sti    
  42c6fd:	cmp    al,0x9d
  42c6ff:	stos   BYTE PTR es:[edi],al
  42c700:	lods   eax,DWORD PTR cs:[esi]
  42c702:	sar    BYTE PTR [ebx+0x20d5e8af],cl
  42c708:	dec    edi
  42c709:	sahf   
  42c70a:	dec    edx
  42c70b:	scas   al,BYTE PTR es:[edi]
  42c70c:	xchg   BYTE PTR [esi-0x7e17ca28],ch
  42c712:	retf   
  42c713:	and    al,0xfa
  42c715:	add    BYTE PTR [ebx],ah
  42c717:	iret   
  42c718:	sub    eax,0x9fce9ff
  42c71d:	inc    eax
  42c71e:	mov    ah,0xcd
  42c720:	jae    0x42c72e
  42c722:	add    BYTE PTR [eax],al
  42c724:	sbb    al,0xb5
  42c726:	idiv   ch
  42c728:	inc    ebx
  42c729:	adc    al,0xc0
  42c72b:	pop    esi
  42c72c:	fistp  QWORD PTR [ebx-0x44]
  42c72f:	or     BYTE PTR [edi+esi*8-0x5dc8137e],dh
  42c736:	or     dl,BYTE PTR [ebx+0xf]
  42c739:	icebp  
  42c73a:	adc    edx,DWORD PTR [edi+0xf]
  42c73d:	push   ecx
  42c73e:	adc    bl,ch
  42c740:	mov    ds,WORD PTR [edx+0x5]
  42c743:	lea    edi,[ecx]
  42c745:	int3   
  42c746:	dec    edx
  42c747:	push   esi
  42c748:	mov    WORD PTR [ebx-0x7e6c01a2],fs
  42c74e:	repnz add eax,0x45830c09
  42c754:	mov    WORD PTR [ecx],ss
  42c756:	ds sbb dh,cl
  42c759:	(bad)  
  42c75a:	sti    
  42c75b:	xor    al,BYTE PTR [edx]
  42c75d:	lods   al,BYTE PTR ds:[esi]
  42c75e:	mov    edx,DWORD PTR [eax+0x39]
  42c761:	cmp    eax,0xca37f07c
  42c766:	xchg   DWORD PTR [ebp+0x58],ebx
  42c769:	or     ecx,0x0
  42c76c:	lods   eax,DWORD PTR ds:[esi]
  42c76d:	dec    eax
  42c76e:	clc    
  42c76f:	mov    BYTE PTR [ecx+0x35c1f0d2],al
  42c775:	pop    ecx
  42c776:	add    al,0x85
  42c778:	inc    esp
  42c779:	pop    ecx
  42c77a:	adc    eax,0x4ef3046a
  42c77f:	mov    edi,DWORD PTR [edx]
  42c781:	fadd   QWORD PTR [edi+0x7ecf3264]
  42c787:	rol    BYTE PTR [eax],0x0
  42c78a:	cdq    
  42c78b:	xchg   ebp,eax
  42c78c:	sub    al,0xc0
  42c78e:	mov    bl,0xe9
  42c790:	enter  0x9dc3,0x24
  42c794:	inc    edx
  42c795:	lock adc al,0xe8
  42c798:	sti    
  42c799:	xchg   BYTE PTR [eax+0x3d],ah
  42c79c:	jbe    0x42c7df
  42c79e:	mov    eax,ds:0x14104d32
  42c7a3:	sbb    al,bh
  42c7a5:	scas   eax,DWORD PTR es:[edi]
  42c7a6:	pushf  
  42c7a7:	test   ah,ah
  42c7a9:	push   eax
  42c7aa:	es jno 0x42c7a3
  42c7ad:	xchg   BYTE PTR [edx-0x53],ah
  42c7b0:	ja     0x42c781
  42c7b2:	jle    0x42c7ae
  42c7b4:	das    
  42c7b5:	push   edx
  42c7b6:	push   ds
  42c7b7:	push   esp
  42c7b8:	int3   
  42c7b9:	jae    0x42c7c2
  42c7bb:	sub    eax,0xaa0704bf
  42c7c0:	jg     0x42c792
  42c7c2:	popf   
  42c7c3:	call   0x6445:0x415a872e
  42c7ca:	jnp    0x42c7b4
  42c7cc:	cmp    BYTE PTR [edi+0x727776e9],0x8d
  42c7d3:	les    edx,FWORD PTR [ebx+0x8]
  42c7d6:	push   ds
  42c7d7:	mov    edi,0xc7455204
  42c7dc:	(bad)  
  42c7dd:	cld    
  42c7de:	push   edx
  42c7df:	xor    al,0xa7
  42c7e1:	test   BYTE PTR [esi+0x3d],ah
  42c7e4:	aas    
  42c7e5:	test   DWORD PTR [ebx+0x32],ecx
  42c7e8:	cli    
  42c7e9:	shr    BYTE PTR gs:[eax+0x23f0],cl
  42c7f0:	(bad)
  42c7f4:	push   ebp
  42c7f5:	fcomp  st(2)
  42c7f7:	pop    es
  42c7f8:	retf   
  42c7f9:	cld    
  42c7fa:	cs call 0xfb0915ce
  42c800:	(bad)  
  42c801:	addr16 push eax
  42c803:	sbb    eax,0x73c5aa77
  42c808:	mov    ecx,0x26c179d1
  42c80d:	add    ch,BYTE PTR [esi-0x1705f924]
  42c813:	add    esp,DWORD PTR [edx]
  42c815:	dec    esi
  42c816:	int    0xf3
  42c818:	adc    eax,0x4ec46401
  42c81d:	push   es
  42c81e:	cmp    DWORD PTR ds:0xdc1609ba,eax
  42c824:	mov    dl,0xbb
  42c826:	jae    0x42c7f3
  42c828:	jo     0x42c7ec
  42c82a:	or     ch,BYTE PTR [edi]
  42c82c:	push   esp
  42c82d:	(bad)  
  42c82e:	lock add ecx,DWORD PTR [eax-0x75]
  42c832:	dec    esp
  42c833:	jg     0x42c896
  42c835:	or     ah,BYTE PTR [esi-0x28]
  42c838:	xchg   edx,eax
  42c839:	push   ebx
  42c83a:	pop    esi
  42c83b:	sub    DWORD PTR [ecx+0x123225e1],ebp
  42c841:	mov    ebx,0x8c1efb39
  42c846:	call   0x5c98654e
  42c84b:	push   ecx
  42c84c:	ins    DWORD PTR es:[edi],dx
  42c84d:	stos   DWORD PTR es:[edi],eax
  42c84e:	mov    esp,0x64be7766
  42c853:	les    eax,FWORD PTR [eax]
  42c855:	add    dh,ch
  42c857:	ds into 
  42c859:	sub    BYTE PTR [ecx+0x36],ch
  42c85c:	xchg   edx,eax
  42c85d:	push   ebp
  42c85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c85f:	mov    DWORD PTR [ebx-0x6b87405],ebp
  42c865:	push   esi
  42c866:	mov    eax,0x42d38b81
  42c86b:	add    DWORD PTR [ebx-0x16d3c531],0x6db6a9ca
  42c875:	ret    0x3827
  42c878:	(bad)  
  42c87a:	add    eax,0x1ecacb22
  42c87f:	ret    
  42c880:	cmp    al,0x36
  42c882:	jnp    0x42c88b
  42c884:	ins    BYTE PTR es:[edi],dx
  42c885:	inc    eax
  42c886:	add    eax,0xe11e0053
  42c88b:	gs pop esi
  42c88d:	scas   eax,DWORD PTR es:[edi]
  42c88e:	out    0x3c,eax
  42c890:	clc    
  42c891:	in     al,dx
  42c892:	dec    ebp
  42c893:	inc    ebx
  42c894:	xchg   DWORD PTR [ecx+ebx*8],edx
  42c897:	in     al,dx
  42c898:	jb     0x42c88b
  42c89a:	pusha  
  42c89b:	inc    eax
  42c89c:	sbb    cl,bl
  42c89e:	pop    ebp
  42c89f:	mov    esi,0xecd11c86
  42c8a4:	mov    edi,0x4bbd0472
  42c8a9:	jns    0x42c8ec
  42c8ab:	ss clc 
  42c8ad:	ficomp DWORD PTR [ebp-0x4a]
  42c8b0:	jle    0x42c8da
  42c8b2:	popf   
  42c8b3:	cmp    eax,0x5799e9d0
  42c8b8:	lock fadd QWORD PTR [eax]
  42c8bb:	add    BYTE PTR [esi-0x54aaab7c],ah
  42c8c1:	push   edi
  42c8c2:	or     al,0xbd
  42c8c4:	or     BYTE PTR [edx+0x4709394c],0xf4
  42c8cb:	repnz fisttp QWORD PTR [esi]
  42c8ce:	jae    0x42c8b6
  42c8d0:	shl    BYTE PTR [edx+0x36],1
  42c8d3:	mov    ah,0x76
  42c8d5:	xor    edx,DWORD PTR [edi+0x575b5edb]
  42c8db:	and    BYTE PTR [eax+0x5],bl
  42c8de:	add    BYTE PTR [edi],dl
  42c8e0:	fnstsw WORD PTR [esi-0x79978400]
  42c8e6:	icebp  
  42c8e7:	jne    0x42c94d
  42c8e9:	test   BYTE PTR [ecx+edi*8-0x3a],dh
  42c8ed:	inc    eax
  42c8ee:	adc    al,0x60
  42c8f0:	iret   
  42c8f1:	or     cl,BYTE PTR [ecx+0x4a8a353e]
  42c8f7:	stc    
  42c8f8:	push   cs
  42c8f9:	add    ah,bh
  42c8fb:	mov    ah,0x72
  42c8fd:	test   ebx,ebp
  42c8ff:	bound  ebx,QWORD PTR [edi+0xa]
  42c902:	xchg   DWORD PTR [eax],eax
  42c904:	retf   0x81ba
  42c907:	rcl    BYTE PTR [edi-0x1b13868f],1
  42c90d:	test   esp,esi
  42c90f:	push   DWORD PTR [eax-0x4aff9dad]
  42c915:	test   BYTE PTR [edx+0x5cc80cc6],0xfe
  42c91c:	or     eax,DWORD PTR [edx+0x74ba]
  42c922:	pushf  
  42c923:	pop    esp
  42c924:	add    eax,0x4ad2818d
  42c929:	push   esi
  42c92a:	sub    al,0xb5
  42c92c:	pop    ecx
  42c92d:	dec    BYTE PTR [ebx-0x79]
  42c930:	repnz add eax,0x4e82f1b1
  42c936:	pushf  
  42c937:	adc    DWORD PTR [ebp-0xc],ecx
  42c93a:	test   ebp,esi
  42c93c:	repz mov ah,BYTE PTR [ebp+0x3c]
  42c940:	shl    BYTE PTR [edx],0x41
  42c943:	enter  0x64,0xdb
  42c947:	push   eax
  42c948:	or     al,0xc
  42c94a:	jne    0x42c917
  42c94c:	jo     0x42c956
  42c94e:	xchg   dh,al
  42c950:	add    BYTE PTR [ebp-0x54],0x3d
  42c954:	shr    eax,0xc7
  42c957:	and    al,0xf6
  42c959:	inc    DWORD PTR [eax]
  42c95b:	(bad)  
  42c95c:	outs   dx,BYTE PTR ds:[esi]
  42c95d:	sub    eax,0x458d001e
  42c962:	test   al,0xf6
  42c964:	popa   
  42c965:	add    eax,0x50f3fbc9
  42c96a:	dec    ebx
  42c96b:	adc    dh,bh
  42c96d:	adc    eax,0x3ab608
  42c972:	rol    esi,0x6e
  42c975:	adc    eax,0x5fc44c7
  42c97a:	sar    DWORD PTR [ecx-0x2b62c90b],1
  42c980:	cmp    BYTE PTR [eax],ch
  42c982:	sbb    dh,BYTE PTR [edi+0xe12]
  42c988:	pop    ebp
  42c989:	test   eax,0x68d4008e
  42c98e:	adc    al,0xc0
  42c990:	aam    0x68
  42c992:	jno    0x42c9e3
  42c994:	or     BYTE PTR [ecx],ch
  42c996:	int    0xa
  42c998:	mov    ds:0x9d013a2c,al
  42c99d:	test   eax,0xef0823c7
  42c9a2:	mov    al,ds:0xc6299d3d
  42c9a7:	sub    cl,BYTE PTR [ecx-0x5d]
  42c9aa:	jle    0x42c9a4
  42c9ac:	ja     0x42c963
  42c9ae:	in     eax,0x7f
  42c9b0:	aam    0xc9
  42c9b2:	jle    0x42c9ac
  42c9b4:	cmp    al,0xdc
  42c9b6:	test   BYTE PTR [edi],ah
  42c9b8:	pushf  
  42c9b9:	test   eax,0x9fa47ffe
  42c9be:	test   DWORD PTR [edx-0x1557e],0xfddbb607
  42c9c8:	add    al,0xa4
  42c9ca:	es mov edi,0xc57f1a17
  42c9d0:	mov    ebp,0xef60cd29
  42c9d5:	mov    ds:0xb4f7f57e,al
  42c9da:	add    BYTE PTR [edx],0x9c
  42c9dd:	test   eax,0xcf647ffe
  42c9e2:	test   DWORD PTR [esi+edx*2-0x38000157],0xbf26de
  42c9ed:	add    BYTE PTR ds:0x180b1802,bl
  42c9f3:	add    edi,edi
  42c9f5:	call   FWORD PTR [ebp+0x5e57f07f]
  42c9fb:	add    ch,BYTE PTR [ecx-0x33]
  42c9fe:	ja     0x42ca0b
  42ca00:	fs in  eax,0x22
  42ca03:	mov    ebx,0x5aae59e8
  42ca08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca09:	test   BYTE PTR ds:0x83003c57,dl
  42ca0f:	sbb    ah,BYTE PTR [ecx]
  42ca11:	ret    
  42ca12:	sbb    cl,al
  42ca14:	in     al,0x23
  42ca16:	mov    ecx,0xb1003721
  42ca1b:	cmp    BYTE PTR [ebx],bl
  42ca1d:	in     al,dx
  42ca1e:	push   0xffffffb9
  42ca20:	fadd   DWORD PTR [edi-0x68]
  42ca23:	or     BYTE PTR [edi+0x690c570d],0xcd
  42ca2a:	test   BYTE PTR [esi],dh
  42ca2c:	lock add ebp,0xffffffec
  42ca30:	jmp    0xe944bcb5
  42ca35:	add    eax,DWORD PTR [ebx+0x17]
  42ca38:	adc    ebx,eax
  42ca3a:	sbb    cl,al
  42ca3c:	hlt    
  42ca3d:	and    ebp,DWORD PTR [ecx+0x21]
  42ca40:	xlat   BYTE PTR ds:[ebx]
  42ca41:	jmp    DWORD PTR [esi+0x38]
  42ca44:	fcmovnbe st,st(3)
  42ca46:	sbb    bh,BYTE PTR [eax+ebx*1+0x3f829848]
  42ca4d:	or     eax,0xcd68a107
  42ca52:	add    BYTE PTR [eax],al
  42ca54:	mov    ah,0x2e
  42ca56:	dec    eax
  42ca57:	test   BYTE PTR [ebp-0x18],dh
  42ca5a:	mov    ah,0xa7
  42ca5c:	repnz mov ebx,0x2b1ef6d1
  42ca62:	sbb    al,bh
  42ca64:	or     DWORD PTR [bx],0xa
  42ca68:	ror    DWORD PTR [ebx],1
  42ca6a:	imul   ecx,ebp,0x59802f97
  42ca70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca71:	pop    edx
  42ca72:	es pop edx
  42ca74:	mov    eax,ds:0x212a005a
  42ca79:	mov    ebx,0x2032745c
  42ca7e:	push   ss
  42ca7f:	inc    ecx
  42ca80:	pop    esi
  42ca81:	cmp    bh,cl
  42ca83:	sbb    ebp,edx
  42ca85:	(bad)  
  42ca86:	jg     0x42ca58
  42ca88:	test   eax,0xd963113c
  42ca8d:	or     eax,0x28800520
  42ca92:	add    al,0xfd
  42ca94:	pusha  
  42ca95:	xor    al,0x5
  42ca97:	imul   ebp,ecx,0x571c74ef
  42ca9d:	sbb    ebx,DWORD PTR [eax-0x56]
  42caa0:	push   ds
  42caa1:	mov    ebx,0xde62ee2a
  42caa6:	cli    
  42caa7:	xchg   esi,eax
  42caa8:	jecxz  0x42cae3
  42caaa:	stc    
  42caab:	into   
  42caac:	bound  edi,QWORD PTR [eax+0x7f]
  42caaf:	nop
  42cab0:	scas   al,BYTE PTR es:[edi]
  42cab1:	cmp    al,0xf0
  42cab4:	push   ebx
  42cab5:	jmp    0x439f1f
  42caba:	xchg   BYTE PTR [ecx+0xa],bh
  42cabd:	aaa    
  42cabe:	jmp    0x3f3480fc
  42cac3:	inc    edx
  42cac4:	add    cl,ch
  42cac6:	dec    ebp
  42cac7:	in     al,0x7f
  42cac9:	push   eax
  42caca:	mov    edi,0xb9c3a02f
  42cacf:	pop    edx
  42cad0:	mov    edi,0x7fd218f6
  42cad5:	add    DWORD PTR [esi-0x6116bfa7],0x2e
  42cadc:	add    al,0xc3
  42cade:	mov    esi,0x5969bf5a
  42cae3:	sbb    BYTE PTR [esi+eax*1+0x1e],dh
  42cae7:	mov    edx,0xe99f9d3a
  42caec:	mov    edi,0xb20c5fa9
  42caf1:	add    BYTE PTR [ebp+0x1408b485],ah
  42caf7:	inc    ebp
  42caf8:	add    BYTE PTR [eax],al
  42cafa:	mov    ecx,0x53e4e1d4
  42caff:	xchg   edi,ecx
  42cb01:	cmp    dh,0xb5
  42cb04:	pop    edx
  42cb05:	inc    eax
  42cb06:	xor    al,0x5
  42cb08:	je     0x42cb0e
  42cb0a:	pop    esi
  42cb0b:	in     al,0x57
  42cb0d:	ret    
  42cb0e:	test   ch,cl
  42cb10:	sbb    DWORD PTR [eax+eax*2+0x7e],esi
  42cb14:	idiv   DWORD PTR [edi]
  42cb16:	leave  
  42cb17:	jb     0x42cafa
  42cb19:	lock add eax,DWORD PTR [edi+0x80cf]
  42cb20:	outs   dx,BYTE PTR ds:[esi]
  42cb21:	mov    dh,0x5a
  42cb23:	inc    eax
  42cb24:	hlt    
  42cb25:	add    al,0x75
  42cb27:	leave  
  42cb28:	je     0x42caf7
  42cb2a:	sbb    DWORD PTR [eax+ecx*1-0x25],esi
  42cb2e:	mov    ah,0x8b
  42cb30:	and    eax,edx
  42cb32:	mov    ds:0xa3d9b442,eax
  42cb37:	inc    edx
  42cb38:	mov    ah,0xb9
  42cb3a:	mov    al,ds:0xa0acc442
  42cb3f:	inc    edx
  42cb40:	les    edx,FWORD PTR [edi]
  42cb42:	sahf   
  42cb43:	inc    edx
  42cb44:	mov    ah,0x2a
  42cb46:	mov    eax,ds:0xa133b442
  42cb4b:	inc    edx
  42cb4c:	test   BYTE PTR [esi-0x62],al
  42cb4f:	inc    edx
  42cb50:	test   dh,ah
  42cb52:	popf   
  42cb53:	inc    edx
  42cb54:	je     0x42cbcd
  42cb56:	mov    al,ds:0xa08d7442
  42cb5b:	inc    edx
  42cb5c:	test   BYTE PTR [ebx-0x60],dh
  42cb5f:	inc    edx
  42cb60:	test   ah,bl
  42cb62:	mov    al,ds:0x9db67442
  42cb67:	inc    edx
  42cb68:	je     0x42cb12
  42cb6a:	popf   
  42cb6b:	inc    edx
  42cb6c:	popf   
  42cb6d:	test   eax,0xa9dfa30e
  42cb72:	sub    DWORD PTR [edi-0x81fd2c7],eax
  42cb78:	push   ds
  42cb79:	push   es
  42cb7a:	sbb    BYTE PTR [edi-0x78d02618],al
  42cb80:	shl    BYTE PTR [ecx+0x872c],1
  42cb86:	sub    eax,0xd988c41d
  42cb8b:	std    
  42cb8c:	jmp    0x42cb16
  42cb8e:	popa   
  42cb8f:	add    eax,0xfd5988f4
  42cb94:	out    0x88,eax
  42cb96:	popa   
  42cb97:	add    eax,0xd05b85f0
  42cb9c:	jbe    0x42cbe1
  42cb9e:	shl    DWORD PTR [esi+edi*2+0x43a4b963],0x53
  42cba6:	push   ss
  42cba7:	fcomip st,st(7)
  42cba9:	jae    0x42cb45
  42cbab:	fdivr  QWORD PTR [esi-0x1459b18]
  42cbb1:	call   FWORD PTR [eax]
  42cbb3:	arpl   WORD PTR [ecx+0x45],cx
  42cbb6:	pop    ss
  42cbb7:	lock inc BYTE PTR [ebx-0x7fec522c]
  42cbbe:	mov    ah,0xab
  42cbc0:	dec    esp
  42cbc1:	jmp    0x743dfee3
  42cbc6:	shr    DWORD PTR [ecx],0xc6
  42cbc9:	adc    BYTE PTR [ecx],ch
  42cbcb:	clc    
  42cbcc:	jle    0x42cbc6
  42cbce:	fcom   st(6)
  42cbd0:	out    0x86,eax
  42cbd2:	fidiv  WORD PTR [ecx+0x1d11bf79]
  42cbd8:	js     0x42cba3
  42cbda:	sbb    BYTE PTR [ecx],0x7a
  42cbdd:	mov    edi,0x4178e4f1
  42cbe2:	mov    bh,ch
  42cbe4:	jl     0x42cbf1
  42cbe6:	mov    ds:0x3d7102,al
  42cbeb:	add    BYTE PTR [esi+0x251f59ab],cl
  42cbf1:	push   es
  42cbf2:	loope  0x42cc6f
  42cbf4:	fmul   QWORD PTR [edi]
  42cbf6:	(bad)  
  42cbf7:	ret    
  42cbf8:	mov    ch,BYTE PTR [ecx-0x48bd0d18]
  42cbfe:	outs   dx,BYTE PTR ds:[esi]
  42cbff:	cmp    eax,0x4ec2f69c
  42cc04:	cdq    
  42cc05:	mov    DWORD PTR [edi+ebx*1-0x77],ebp
  42cc09:	neg    BYTE PTR [eax]
  42cc0b:	cmp    DWORD PTR [ecx-0x5117a377],ebx
  42cc11:	out    0xfc,al
  42cc13:	jmp    DWORD PTR [edi+ebp*1-0x2179731b]
  42cc1a:	or     BYTE PTR [ecx+0x4070079e],dl
  42cc20:	rcl    DWORD PTR [edx],0x60
  42cc23:	dec    eax
  42cc24:	mov    ecx,0x97bbedde
  42cc29:	jle    0x42cc0f
  42cc2b:	adc    bl,BYTE PTR [ebp-0x63bd96fe]
  42cc31:	cli    
  42cc32:	pop    esi
  42cc33:	and    ecx,DWORD PTR [esi+0x12]
  42cc36:	mov    cl,BYTE PTR [edx-0x5f]
  42cc39:	add    DWORD PTR [edx],0xe8429d08
  42cc3f:	add    esp,DWORD PTR [esi-0x62ecff81]
  42cc45:	add    bl,BYTE PTR [esi+0x41]
  42cc48:	xchg   ebp,eax
  42cc49:	pop    es
  42cc4a:	fwait
  42cc4b:	dec    edx
  42cc4c:	pushf  
  42cc4d:	dec    edx
  42cc4e:	mov    sp,0x0
  42cc52:	fld    DWORD PTR ds:0x2a7b06a
  42cc58:	jmp    0xdbc28b1f
  42cc5d:	jl     0x42cc1f
  42cc5f:	add    ch,BYTE PTR [ecx-0x41]
  42cc62:	test   eax,0x2d6d0005
  42cc67:	or     al,0x0
  42cc69:	jmp    0xf648798c
  42cc6e:	sbb    dl,ch
  42cc70:	or     ecx,ebp
  42cc72:	sahf   
  42cc73:	and    BYTE PTR [ecx],0xea
  42cc76:	sbb    ecx,DWORD PTR [eax+ecx*1+0xe]
  42cc7a:	and    cl,BYTE PTR [esp+ecx*1+0x6]
  42cc7e:	adc    eax,DWORD PTR [eax+eax*4]
  42cc81:	add    ch,cl
  42cc83:	or     DWORD PTR [edx+ebx*1-0x3afffd68],eax
  42cc8a:	jmp    0x1103:0xd4af017d
  42cc91:	rcr    BYTE PTR [ecx-0x501b08cb],cl
  42cc97:	jle    0x42cc2f
  42cc99:	out    0x9e,al
  42cc9b:	add    al,BYTE PTR [eax-0x7af66f3e]
  42cca1:	bound  esp,QWORD PTR [edi+0x64af0002]
  42cca7:	add    esi,DWORD PTR [ebx]
  42cca9:	ret    0x3581
  42ccac:	div    esp
  42ccae:	(bad)  
  42ccaf:	jle    0x42cc3a
  42ccb1:	repz sahf 
  42ccb3:	add    al,BYTE PTR [eax-0x5fffff6e]
  42ccb9:	or     DWORD PTR [ebp+0x2986f],eax
  42ccbf:	push   0xffffff82
  42ccc1:	ficom  WORD PTR [ebx]
  42ccc3:	jmp    0xbb4410ac
  42ccc8:	push   0x7e
  42ccca:	xchg   BYTE PTR [esi],ah
  42cccc:	lea    edi,[edi-0x41]
  42cccf:	fnsave [edx-0x4afaac84]
  42ccd5:	jge    0x42cd22
  42ccd7:	or     eax,0xb8c5dda9
  42ccdc:	sbb    ecx,ebx
  42ccde:	cli    
  42ccdf:	add    BYTE PTR [edx+ecx*4-0x78918b46],ah
  42cce6:	inc    eax
  42cce7:	pop    ss
  42cce8:	mov    al,ds:0xfc04068a
  42cced:	dec    ebx
  42ccee:	jp     0x7f66e526
  42ccf4:	int3   
  42ccf5:	cmp    eax,0x8a3b0f24
  42ccfa:	jns    0x42ccfc
  42ccfc:	xor    al,0x1
  42ccfe:	jnp    0x42cd64
  42cd00:	push   eax
  42cd01:	or     eax,0xc003e900
  42cd06:	cmc    
  42cd07:	inc    esp
  42cd09:	je     0x42cd25
  42cd0b:	xadd   ch,cl
  42cd0e:	add    DWORD PTR [eax],eax
  42cd10:	xor    al,0x81
  42cd12:	icebp  
  42cd13:	or     DWORD PTR [ebx],ecx
  42cd15:	jge    0x42ccd8
  42cd17:	or     eax,DWORD PTR [ecx+eax*1]
  42cd1a:	mov    esi,0xf5000046
  42cd1f:	mov    ds:0xc2db2ce7,eax
  42cd24:	cmc    
  42cd25:	sbb    bh,0x3
  42cd28:	pop    es
  42cd29:	test   DWORD PTR [ebx+0x7effffff],edx
  42cd2f:	or     al,al
  42cd31:	call   0xf45f62c
  42cd36:	inc    ecx
  42cd37:	sub    eax,0xcac40002
  42cd3c:	inc    eax
  42cd3d:	add    esp,ebp
  42cd3f:	sub    BYTE PTR [ebx],cl
  42cd41:	jne    0x42cd11
  42cd43:	cmp    BYTE PTR [eax+0x16],0xc1
  42cd47:	in     al,dx
  42cd48:	add    esi,DWORD PTR [ebx]
  42cd4a:	add    al,0x67
  42cd4c:	stc    
  42cd4d:	xor    dh,ah
  42cd4f:	cmp    eax,0x6b3e0c0
  42cd54:	inc    esp
  42cd55:	and    al,0x8b
  42cd57:	mov    BYTE PTR [eax+0x17],al
  42cd5a:	popf   
  42cd5b:	and    BYTE PTR [ecx+0x10],cl
  42cd5e:	and    dl,ch
  42cd60:	aaa    
  42cd61:	movlhps xmm5,xmm4
  42cd64:	ror    bh,0x1e
  42cd67:	push   edx
  42cd68:	add    al,0x74
  42cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd6b:	popa   
  42cd6c:	jne    0x41a157
  42cd72:	sbb    eax,0xe3857eac
  42cd77:	lods   al,BYTE PTR ds:[esi]
  42cd78:	loop   0x42cdf4
  42cd7a:	and    eax,0x9a0ae266
  42cd7f:	sbb    eax,0xf9ce
  42cd84:	inc    edx
  42cd85:	std    
  42cd86:	mov    WORD PTR [ebx-0x7f],es
  42cd89:	fldpi  
  42cd8b:	inc    esp
  42cd8c:	mov    eax,ds:0x9d0b3902
  42cd91:	test   eax,0x1091448b
  42cd96:	dec    eax
  42cd97:	and    al,0xad
  42cd99:	xor    BYTE PTR [ecx+0xc],dl
  42cd9c:	sahf   
  42cd9d:	out    0x13,al
  42cd9f:	cdq    
  42cda0:	push   ss
  42cda1:	rol    BYTE PTR [ebp-0x72ee46bd],1
  42cda7:	inc    ecx
  42cda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cda9:	add    cl,dl
  42cdab:	jb     0x42cd3a
  42cdad:	test   DWORD PTR ds:0xebfd6137,0xcf30956e
  42cdb7:	mov    BYTE PTR [ecx-0x43],ch
  42cdba:	repnz out 0xa5,al
  42cdbd:	and    BYTE PTR [ebx+0x24],dl
  42cdc0:	jne    0x42cde4
  42cdc2:	cmp    esp,DWORD PTR [ecx+ecx*4]
  42cdc5:	sub    BYTE PTR [ebx],bh
  42cdc7:	and    al,0x95
  42cdc9:	test   eax,0xae260831
  42cdce:	loop   0x42cddf
  42cdd0:	adc    al,0xa6
  42cdd2:	loop   0x42cdeb
  42cdd4:	jbe    0x42cdd8
  42cdd6:	daa    
  42cdd7:	sbb    al,0xe9
  42cdd9:	ficom  WORD PTR [ebx+ecx*4]
  42cddc:	fmul   QWORD PTR [edx]
  42cdde:	pop    esi
  42cddf:	inc    edi
  42cde0:	rcl    DWORD PTR [edx],0x5c
  42cde3:	inc    edi
  42cde4:	lods   eax,DWORD PTR ds:[esi]
  42cde5:	mov    bl,0x6f
  42cde7:	inc    edi
  42cde8:	add    BYTE PTR [eax],al
  42cdea:	rcl    DWORD PTR [edx],0x6e
  42cded:	dec    ecx
  42cdee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cdef:	pop    es
  42cdf0:	sub    BYTE PTR [edx-0x7925f92c],cl
  42cdf6:	inc    DWORD PTR ds:0x3c5f03e9
  42cdfc:	call   0xcd816202
  42ce01:	sbb    edx,DWORD PTR [esi+0x47c19c7e]
  42ce07:	mov    bl,0x6d
  42ce09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce0b:	xchg   DWORD PTR [ecx+0x7cc21817],esp
  42ce11:	out    dx,al
  42ce12:	and    ecx,DWORD PTR [esi-0x3b]
  42ce15:	sbb    ebx,DWORD PTR [edx]
  42ce17:	inc    esi
  42ce18:	or     eax,0x27c8c214
  42ce1d:	push   ebp
  42ce1e:	sbb    al,ah
  42ce20:	rcl    esp,1
  42ce22:	and    edx,eax
  42ce24:	push   esp
  42ce25:	or     bl,BYTE PTR [ebx]
  42ce27:	cmp    al,0xda
  42ce29:	out    0x1c,eax
  42ce2b:	push   es
  42ce2c:	jecxz  0x42cdb9
  42ce2e:	pop    esp
  42ce2f:	or     ebx,DWORD PTR [edi+0x46]
  42ce32:	mov    ds,esi
  42ce34:	sub    DWORD PTR [esi+ebx*2+0x200ef1de],ecx
  42ce3b:	dec    eax
  42ce3c:	call   0xb2e8:0xc7ed7bf
  42ce43:	add    al,BYTE PTR [eax-0x7e4d38f2]
  42ce49:	test   BYTE PTR [ebx+0x87ea04],dh
  42ce4f:	add    BYTE PTR [edi-0x6116fffb],ah
  42ce55:	xor    dh,0xe3
  42ce58:	xchg   ebx,eax
  42ce59:	jle    0x42ce5c
  42ce5b:	hlt    
  42ce5c:	sahf   
  42ce5d:	add    al,BYTE PTR [esi-0x7a195459]
  42ce63:	in     eax,0x94
  42ce65:	lock fcomp QWORD PTR [esi-0x5e503dfe]
  42ce6d:	mov    cl,0x85
  42ce6f:	(bad)  
  42ce70:	and    eax,0x2d6d0aad
  42ce75:	(bad)  
  42ce76:	(bad)  
  42ce77:	call   0x3f3d8a93
  42ce7c:	and    al,0x72
  42ce7e:	jae    0x42ce73
  42ce80:	and    al,0x44
  42ce82:	adc    ecx,ebp
  42ce84:	and    esi,edi
  42ce86:	add    BYTE PTR [ecx-0x25],ah
  42ce89:	adc    eax,0xe693af86
  42ce8e:	jp     0x42cf01
  42ce90:	in     eax,0xe6
  42ce92:	or     ah,dh
  42ce94:	and    cl,cl
  42ce96:	or     ebp,ecx
  42ce98:	sahf   
  42ce99:	mov    DWORD PTR [ebx+0xd],eax
  42ce9c:	mov    cl,0xe9
  42ce9e:	inc    esp
  42ce9f:	in     eax,dx
  42cea0:	pop    esi
  42cea1:	fwait
  42cea2:	push   0x80029ee7
  42cea7:	shr    BYTE PTR [edx+0x37],cl
  42ceaa:	push   es
  42ceab:	jae    0x42ce4d
  42cead:	out    0xfc,al
  42ceaf:	in     eax,dx
  42ceb0:	cdq    
  42ceb1:	jp     0x42ceb4
  42ceb3:	ret    0x0
  42ceb6:	dec    ebp
  42ceb7:	xor    dh,0x24
  42ceba:	xchg   edx,eax
  42cebb:	xchg   DWORD PTR [esp+esi*8],ecx
  42cebe:	sahf   
  42cebf:	add    al,BYTE PTR [eax+0x41c412c7]
  42cec5:	call   FWORD PTR [esp+eax*8-0x3b6315bf]
  42cecc:	inc    ecx
  42cecd:	add    ch,al
  42cecf:	adc    ebp,ecx
  42ced1:	xchg   edx,eax
  42ced2:	rol    BYTE PTR ds:0x4da8000,0x7b
  42ced9:	dec    esi
  42ceda:	mov    esp,0x904e7970
  42cedf:	jo     0x42cf5b
  42cee1:	sti    
  42cee2:	mov    ?,ecx
  42cee4:	mov    eax,DWORD PTR [eax-0x788bed11]
  42ceea:	hlt    
  42ceeb:	ins    BYTE PTR es:[edi],dx
  42ceec:	inc    edx
  42ceed:	wbinvd 
  42ceef:	int    0x6
  42cef1:	add    BYTE PTR [edi+eax*8+0x5e790140],al
  42cef8:	jae    0x42cef9
  42cefa:	mov    bl,0x70
  42cefc:	jp     0x42cef9
  42cefe:	sbb    BYTE PTR [eax],al
  42cf00:	test   DWORD PTR [ebp+eax*2-0x539fffb],ecx
  42cf07:	add    eax,0x10de8fe
  42cf0c:	add    BYTE PTR [eax],al
  42cf0e:	les    ebp,FWORD PTR [esi+ecx*2+0xf]
  42cf12:	mov    ecx,0x340000eb
  42cf17:	mov    DWORD PTR [eax+0x1],0x5e3b0000
  42cf1e:	cmp    eax,0x8005040c
  42cf23:	sti    
  42cf24:	aam    0xff
  42cf26:	test   BYTE PTR [eax-0xb],ch
  42cf29:	add    al,0x0
  42cf2b:	(bad)  
  42cf2c:	mov    edx,0xf9e90805
  42cf31:	add    BYTE PTR [eax],al
  42cf33:	add    BYTE PTR [ebx+ebp*2+0x58790f25],al
  42cf3a:	add    DWORD PTR [eax],eax
  42cf3c:	hlt    
  42cf3d:	mov    BYTE PTR [eax+0x1],0xcd
  42cf41:	pop    ebx
  42cf42:	sbb    DWORD PTR [esp+eax*8],ecx
  42cf45:	add    al,0x8d
  42cf47:	inc    ebx
  42cf48:	popf   
  42cf49:	imul   edi,edi,0x8
  42cf4c:	dec    edx
  42cf4d:	in     eax,dx
  42cf4e:	and    DWORD PTR [ebx],ecx
  42cf50:	sti    
  42cf51:	pop    ebx
  42cf52:	and    DWORD PTR [edi-0x3b],edi
  42cf55:	push   0x24
  42cf57:	mov    DWORD PTR [ebx-0x35],esp
  42cf5a:	les    eax,FWORD PTR [ecx-0x64]
  42cf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf5f:	add    ch,BYTE PTR [ecx-0x69800167]
  42cf65:	add    BYTE PTR [ebx],dh
  42cf67:	or     DWORD PTR [ebx+0x60],esp
  42cf6a:	std    
  42cf6b:	push   es
  42cf6c:	je     0x42cfc1
  42cf6e:	or     DWORD PTR [eax],eax
  42cf70:	popf   
  42cf71:	sbb    DWORD PTR [ecx-0x7bec0ed1],edi
  42cf77:	mul    BYTE PTR [eax+edi*2+0x681661e1]
  42cf7e:	push   cs
  42cf7f:	bound  eax,QWORD PTR [eax]
  42cf81:	add    dh,al
  42cf83:	fld    DWORD PTR ds:0xc94fa262
  42cf89:	popa   
  42cf8a:	sahf   
  42cf8b:	fisub  DWORD PTR [ecx]
  42cf8d:	jg     0x42cfc4
  42cf8f:	retf   0x8924
  42cf92:	jecxz  0x42cf5d
  42cf94:	jne    0x42cf78
  42cf96:	sahf   
  42cf97:	cdq    
  42cf98:	(bad)  
  42cf99:	popa   
  42cf9a:	data16 fimul DWORD PTR [edx+eax*4]
  42cf9e:	push   edi
  42cf9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfa0:	(bad)  
  42cfa1:	jmp    DWORD PTR [edi]
  42cfa3:	loopne 0x42cfb9
  42cfa5:	and    al,0x26
  42cfa7:	sahf   
  42cfa8:	pop    es
  42cfa9:	jmp    0x4175fe
  42cfae:	adc    ch,bl
  42cfb0:	sar    DWORD PTR [ebx],cl
  42cfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfb3:	lock stos BYTE PTR es:[edi],al
  42cfb5:	popa   
  42cfb6:	mov    ds:0x1e61c02f,al
  42cfbb:	ret    0x61ee
  42cfbe:	adc    al,0xe8
  42cfc0:	or     eax,0xe80263c2
  42cfc5:	pinsrw mm4,WORD PTR [ebp+ebp*8+0x3],0x9d
  42cfcb:	or     BYTE PTR [ebp-0x5d06b61d],0x45
  42cfd2:	pushf  
  42cfd3:	std    
  42cfd4:	(bad)  
  42cfd5:	xchg   edi,eax
  42cfd6:	fwait
  42cfd7:	add    ch,cl
  42cfd9:	xor    DWORD PTR [ebx+0x22c6f4f2],0xffffffab
  42cfe0:	scas   eax,DWORD PTR es:[edi]
  42cfe1:	cmp    al,0x5d
  42cfe3:	sub    BYTE PTR [esi+0x45],ch
  42cfe6:	add    BYTE PTR [eax],al
  42cfe8:	mov    ds:0xa0c3ce28,eax
  42cfed:	sub    dl,ah
  42cfef:	jge    0x42d04c
  42cff1:	sub    dh,ah
  42cff3:	ret    0x83fc
  42cff6:	push   eax
  42cff7:	repz cld 
  42cff9:	jns    0x42cf9d
  42cffb:	adc    DWORD PTR [edx+0x4d406389],eax
  42d001:	out    dx,al
  42d002:	fbstp  TBYTE PTR [eax+esi*4]
  42d005:	sub    dl,dh
  42d007:	jge    0x42d01c
  42d009:	sub    BYTE PTR [esi-0x55],ah
  42d00c:	jp     0x42d036
  42d00e:	pusha  
  42d00f:	inc    ebp
  42d010:	test   eax,0xa702a2c8
  42d015:	cdq    
  42d016:	fwait
  42d017:	or     BYTE PTR [ebp-0x754796fe],bl
  42d01d:	jmp    FWORD PTR [edi+ecx*2-0x66]
  42d021:	add    ch,cl
  42d023:	mov    DWORD PTR [edi+edx*1+0xd],ebx
  42d027:	mov    BYTE PTR [esi-0x690c3002],ah
  42d02d:	add    ch,cl
  42d02f:	mov    bl,al
  42d031:	ror    BYTE PTR [ecx*1-0x70b51792],cl
  42d038:	pop    esp
  42d039:	push   ss
  42d03a:	inc    ebx
  42d03b:	das    
  42d03c:	(bad)  
  42d03e:	dec    DWORD PTR [esi-0x6a]
  42d041:	ins    BYTE PTR es:[edi],dx
  42d042:	mov    BYTE PTR [edi-0x5e],0xc1
  42d046:	popa   
  42d047:	push   0x1
  42d049:	fistp  QWORD PTR [eax-0x5dffff7a]
  42d04f:	add    al,BYTE PTR [eax]
  42d051:	movups xmm0,XMMWORD PTR [ecx+0x14]
  42d055:	pop    es
  42d056:	mov    edx,0xb572c1
  42d05b:	add    BYTE PTR [edi],al
  42d05d:	jmp    0xe4395300
  42d062:	jb     0x42d04c
  42d064:	jg     0x42d0d8
  42d066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d067:	punpckhwd mm2,QWORD PTR ss:[edx+0xe]
  42d06c:	jne    0x42d00f
  42d06e:	pop    edi
  42d06f:	inc    esp
  42d070:	add    esi,esp
  42d072:	xor    DWORD PTR [ebp-0x7d6116fb],esi
  42d078:	div    ah
  42d07a:	lods   eax,DWORD PTR ds:[esi]
  42d07b:	sti    
  42d07c:	shl    DWORD PTR [edi+0x44e912a1],0x93
  42d083:	add    al,BYTE PTR [eax]
  42d085:	imul   ebx,DWORD PTR [edx],0xfd6c0b08
  42d08b:	pop    es
  42d08c:	add    cl,ch
  42d08e:	pop    esp
  42d08f:	inc    esp
  42d090:	add    esp,eax
  42d092:	icebp  
  42d093:	aam    0x5
  42d095:	jmp    0xf4395338
  42d09a:	sbb    BYTE PTR [ebp+eax*4-0x6a197059],0xe5
  42d0a2:	sbb    BYTE PTR [ebx+0x29ee2c0],0x80
  42d0a9:	loop   0x42d050
  42d0ab:	stc    
  42d0ac:	sub    DWORD PTR [eax+0x69000298],0x0
  42d0b3:	add    BYTE PTR [ebx+0x8],al
  42d0b6:	or     esp,DWORD PTR [ebp+0x76]
  42d0b9:	pop    es
  42d0ba:	add    BYTE PTR [eax],al
  42d0bc:	add    al,0x82
  42d0be:	and    BYTE PTR [ebx],al
  42d0c0:	ja     0x42d0fd
  42d0c2:	or     bh,bh
  42d0c4:	ja     0x42d101
  42d0c6:	or     al,0xff
  42d0c8:	les    eax,FWORD PTR ds:[esi]
  42d0cb:	and    BYTE PTR [eax-0x2f7df91a],bh
  42d0d1:	cld    
  42d0d2:	(bad)  
  42d0d3:	(bad)  
  42d0d4:	call   0xd8c9d7c8
  42d0d9:	cld    
  42d0da:	(bad)  
  42d0db:	jmp    FWORD PTR [ebx-0x7d3945d5]
  42d0e1:	adc    BYTE PTR [eax],al
  42d0e3:	(bad)  
  42d0e4:	jb     0x42d0eb
  42d0e6:	add    DWORD PTR [ebx+0x48773c0c],eax
  42d0ec:	jo     0x42d12f
  42d0ee:	jnp    0x42d0d8
  42d0f0:	aaa    
  42d0f1:	fnsave [eax+ecx*2]
  42d0f4:	pusha  
  42d0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d0f6:	jns    0x42d0e0
  42d0f8:	xchg   ebp,ebx
  42d0fa:	and    BYTE PTR [eax+0x30],cl
  42d0fd:	or     DWORD PTR [ebx-0x18],edi
  42d100:	sbb    ch,0xc
  42d103:	dec    eax
  42d104:	jnp    0x42d088
  42d106:	fmul   DWORD PTR [edx]
  42d108:	inc    esp
  42d109:	add    DWORD PTR [esi-0x1d00adba],edi
  42d10f:	pop    edi
  42d110:	add    BYTE PTR [ebx+0xe],0x9
  42d114:	lahf   
  42d115:	dec    esi
  42d116:	mov    esi,0x32000046
  42d11b:	pop    es
  42d11c:	jecxz  0x42d171
  42d11e:	add    BYTE PTR [ebx+0xe],0x1
  42d122:	(bad)  
  42d123:	cmp    bh,BYTE PTR [esi-0x1cfebdba]
  42d129:	inc    edi
  42d12a:	ret    0xe43
  42d12d:	add    eax,0x46be40ef
  42d132:	adc    bh,ch
  42d134:	loop   0x42d171
  42d136:	popf   
  42d137:	sbb    BYTE PTR [edx+ecx*2+0x744c0971],ch
  42d13e:	(bad)  
  42d13f:	repz dec ebx
  42d141:	je     0x42d0cd
  42d143:	repz das 
  42d145:	adc    dl,BYTE PTR [ebp-0x11]
  42d148:	add    cl,BYTE PTR [eax-0x56]
  42d14b:	es popf 
  42d14d:	add    eax,0x41c09b9d
  42d152:	mov    bl,0x9d
  42d154:	stos   DWORD PTR es:[edi],eax
  42d155:	sbb    ebx,ebx
  42d157:	fmul   QWORD PTR ds:0xc0b4c603
  42d15d:	inc    ecx
  42d15e:	mov    ecx,esi
  42d160:	stos   DWORD PTR es:[edi],eax
  42d161:	pavgw  mm4,mm4
  42d164:	or     eax,0xc0a0b60b
  42d169:	inc    ecx
  42d16a:	mov    bl,0x98
  42d16c:	stos   DWORD PTR es:[edi],eax
  42d16d:	add    ebx,DWORD PTR [ebx+0x5c]
  42d170:	adc    BYTE PTR [edx],al
  42d172:	arpl   WORD PTR [ebp+edi*8+0xd],sp
  42d176:	je     0x42d115
  42d178:	mov    cl,0xfa
  42d17a:	jp     0x42d1a2
  42d17c:	fisttp QWORD PTR [edx]
  42d17e:	add    BYTE PTR [eax],al
  42d180:	sbb    edx,edx
  42d182:	or     al,0x0
  42d184:	popf   
  42d185:	das    
  42d186:	dec    esi
  42d187:	adc    dl,BYTE PTR [edx-0x5e793dd5]
  42d18d:	es pop esp
  42d18f:	lahf   
  42d190:	ficomp WORD PTR [ecx-0x69820982]
  42d196:	or     DWORD PTR [esi-0x4df8672d],eax
  42d19c:	xor    al,0x1a
  42d19e:	clc    
  42d19f:	add    bl,BYTE PTR [ebp-0x1c3df9d2]
  42d1a5:	call   0xfffe:0x9a25e913
  42d1ac:	daa    
  42d1ad:	mov    WORD PTR [ebx],es
  42d1af:	or     ecx,DWORD PTR [ebx+0x3]
  42d1b2:	loopne 0x42d1b1
  42d1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1b5:	add    ebp,edx
  42d1b7:	jg     0x42d1ae
  42d1b9:	add    ch,cl
  42d1bb:	add    ebx,DWORD PTR ds:0xc72ee3a9
  42d1c1:	cmp    BYTE PTR [edi+0x68fc7002],0xbc
  42d1c8:	pop    edx
  42d1c9:	xor    eax,0x145cc1e0
  42d1ce:	fsubr  DWORD PTR [edx+0x3e902ed]
  42d1d4:	sbb    eax,0x1808e6aa
  42d1d9:	mov    ebx,esi
  42d1db:	add    ebx,DWORD PTR [ebp-0x59ac727e]
  42d1e1:	test   DWORD PTR [ecx+0xd],esi
  42d1e4:	add    BYTE PTR [eax],al
  42d1e6:	popf   
  42d1e7:	add    ah,BYTE PTR [ebx+0x7ffa8f41]
  42d1ed:	jno    0x42d189
  42d1ef:	stos   DWORD PTR es:[edi],eax
  42d1f0:	call   0xdc3b5a78
  42d1f5:	dec    ecx
  42d1f6:	sbb    eax,0xcc2ee7a9
  42d1fb:	or     BYTE PTR [ebp+0x48],0xf0
  42d1ff:	stc    
  42d200:	and    al,BYTE PTR [ecx-0x71]
  42d203:	test   DWORD PTR [edi-0x67],0x83e8ab6a
  42d20a:	add    DWORD PTR gs:[ecx+ebx*1+0x2ea3a71d],edi
  42d212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d213:	les    ebp,FWORD PTR [edx+0x6d999b11]
  42d219:	add    ebx,DWORD PTR [ebp-0x624596fe]
  42d21f:	xor    eax,0xdd2b83de
  42d224:	jnp    0x42d227
  42d226:	pop    edi
  42d227:	inc    esp
  42d228:	rcl    DWORD PTR [edx+edi*1],cl
  42d22b:	daa    
  42d22c:	add    BYTE PTR [ecx+0x57],ch
  42d22f:	lods   eax,DWORD PTR ds:[esi]
  42d230:	or     DWORD PTR [eax+ebx*2+0x4],esp
  42d234:	add    cl,ch
  42d236:	push   ds
  42d237:	mov    ah,0x40
  42d239:	out    dx,al
  42d23a:	sbb    eax,0x9ee905ea
  42d23f:	rol    BYTE PTR [ecx-0x9],0x8e
  42d243:	mov    ds:0x228695e,eax
  42d248:	jne    0x42d25d
  42d24a:	add    BYTE PTR [eax],al
  42d24c:	sbb    DWORD PTR [ebp+0x2abc3bfe],esi
  42d252:	neg    DWORD PTR [ebx]
  42d254:	mov    WORD PTR [eax],es
  42d256:	ret    0x9b2f
  42d259:	(bad)  
  42d25a:	out    0x2f,al
  42d25c:	sbb    DWORD PTR [esp+edx*2+0x41c0bb1c],esi
  42d263:	div    DWORD PTR [edx-0x1996c15d]
  42d269:	inc    ecx
  42d26a:	or     esp,DWORD PTR [edi+edx*4+0x4]
  42d26e:	add    cl,ch
  42d270:	pop    eax
  42d271:	inc    esp
  42d272:	adc    dl,dh
  42d274:	inc    edi
  42d275:	idiv   BYTE PTR [edi+0x60]
  42d278:	lahf   
  42d279:	das    
  42d27a:	adc    BYTE PTR [ecx+0x47],ch
  42d27d:	cld    
  42d27e:	je     0x42d262
  42d280:	push   ds
  42d281:	mov    cl,0x4e
  42d283:	aam    0x70
  42d285:	les    eax,FWORD PTR [ecx-0x21]
  42d288:	cwde   
  42d289:	mov    eax,ds:0x620691a
  42d28e:	or     ebp,DWORD PTR [edx+esi*8-0x5]
  42d292:	(bad)  
  42d293:	call   0xf64e82b6
  42d298:	sbb    eax,0x9ee90954
  42d29d:	xor    dh,0xb9
  42d2a0:	mov    ds:0x9ee04c7f,eax
  42d2a5:	add    al,dl
  42d2a7:	add    dl,bh
  42d2a9:	test   DWORD PTR [esi+edi*8],0x3487675
  42d2b0:	add    BYTE PTR [eax],al
  42d2b2:	popf   
  42d2b3:	mov    edx,0x86040002
  42d2b8:	icebp  
  42d2b9:	and    BYTE PTR [ebx],dl
  42d2bb:	sub    bh,BYTE PTR [edx+0x7b05f408]
  42d2c1:	jl     0x42d26b
  42d2c3:	sahf   
  42d2c4:	cli    
  42d2c5:	je     0x42d2c3
  42d2c7:	jl     0x42d307
  42d2c9:	and    al,0xc4
  42d2cb:	jbe    0x42d30b
  42d2cd:	and    al,0x94
  42d2cf:	jle    0x42d349
  42d2d1:	push   ss
  42d2d2:	leave  
  42d2d3:	repnz add eax,esi
  42d2d6:	jp     0x42d2d7
  42d2d8:	push   cs
  42d2d9:	punpckhdq mm4,mm7
  42d2dc:	add    BYTE PTR [edx-0x91aa1f1],cl
  42d2e2:	adc    esi,DWORD PTR [ecx-0x7e]
  42d2e5:	inc    esi
  42d2e6:	lds    esi,FWORD PTR [ecx+0x79390eff]
  42d2ec:	add    al,BYTE PTR [eax]
  42d2ee:	mov    ah,0x7b
  42d2f0:	inc    eax
  42d2f1:	pop    ss
  42d2f2:	push   0x1d0e067f
  42d2f7:	lock or BYTE PTR [eax],al
  42d2fa:	je     0x42d281
  42d2fc:	icebp  
  42d2fd:	or     ch,BYTE PTR [eax+0x60]
  42d300:	jp     0x42d2fd
  42d302:	sbb    ecx,0xa5cf80e1
  42d308:	outs   dx,BYTE PTR ds:[esi]
  42d309:	in     eax,0xcf
  42d30b:	mov    edx,0xd96efb7a
  42d310:	jo     0xbb6cda5
  42d316:	add    BYTE PTR [eax],al
  42d318:	les    ebp,FWORD PTR [edx+ebx*1+0x75]
  42d31c:	ret    0x4067
  42d31f:	add    DWORD PTR [edi+0x5c],edx
  42d322:	adc    dh,BYTE PTR [ebx]
  42d324:	popf   
  42d325:	fistp  DWORD PTR [ecx+ecx*4]
  42d328:	fld    TBYTE PTR [ebx+0x1bc50928]
  42d32e:	mov    dh,0xc
  42d330:	mov    ebx,0xaa0e3d32
  42d335:	inc    esi
  42d336:	mov    edi,0x3d23c103
  42d33b:	add    DWORD PTR [esi],edx
  42d33d:	out    0xdf,eax
  42d33f:	pop    ds
  42d340:	sbb    BYTE PTR [ebp+0x4],ch
  42d343:	test   BYTE PTR [ebx+0x26fffea3],bh
  42d349:	cmp    BYTE PTR [eax],al
  42d34b:	test   edx,ebp
  42d34d:	out    0xeb,al
  42d34f:	xchg   BYTE PTR [ecx-0x1],bl
  42d352:	adc    esp,DWORD PTR [edi]
  42d354:	fisttp WORD PTR [edx]
  42d356:	mov    ecx,ecx
  42d358:	ror    BYTE PTR [edi-0x4aae4086],cl
  42d35e:	mov    BYTE PTR [ecx-0x56],al
  42d361:	mov    edi,0x239f0b80
  42d366:	cmp    dl,BYTE PTR [ebx]
  42d368:	daa    
  42d369:	loope  0x42d377
  42d36b:	and    al,0x2a
  42d36d:	xor    eax,DWORD PTR [eax+0x24]
  42d370:	xchg   edx,eax
  42d371:	cwde   
  42d372:	jns    0x42d3b7
  42d374:	xchg   esi,eax
  42d375:	xor    DWORD PTR [ebp-0x21420682],esi
  42d37b:	inc    DWORD PTR [eax]
  42d37d:	add    BYTE PTR [ebp-0x69],dh
  42d380:	push   es
  42d381:	add    BYTE PTR [ebp-0x55e046e7],bl
  42d387:	adc    eax,0x999d02b8
  42d38c:	jle    0x42d384
  42d38e:	aad    0xb0
  42d390:	jns    0x42d3e7
  42d392:	xchg   ebp,eax
  42d393:	cdq    
  42d394:	inc    cl
  42d396:	jecxz  0x42d332
  42d398:	(bad)  
  42d39a:	inc    edi
  42d39b:	mov    eax,ds:0x31dfffe
  42d3a0:	push   ds
  42d3a1:	push   eax
  42d3a2:	xchg   esi,eax
  42d3a3:	jge    0x42d392
  42d3a5:	mov    dh,0x37
  42d3a7:	test   al,0x2a
  42d3a9:	ds pushf 
  42d3ab:	(bad)  
  42d3ad:	fistp  DWORD PTR [edi+0x2b83e902]
  42d3b3:	dec    edi
  42d3b4:	jmp    0xdcb4:0xf1a7157e
  42d3bb:	inc    eax
  42d3bc:	call   0xea03c99e
  42d3c1:	add    ebx,DWORD PTR [ebp-0x59ac227e]
  42d3c7:	jge    0x42d392
  42d3c9:	mov    bh,0xf7
  42d3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3cc:	mov    ds:0xcfdf9c3d,al
  42d3d1:	outs   dx,DWORD PTR ds:[esi]
  42d3d2:	lahf   
  42d3d3:	add    ch,cl
  42d3d5:	adc    ebx,0xffffffd7
  42d3d8:	loope  0x42d458
  42d3da:	jmp    0xdcf77d85
  42d3df:	inc    eax
  42d3e0:	call   0xb542d4d0
  42d3e5:	fs loope 0x42d3eb
  42d3e8:	popf   
  42d3e9:	jne    0x42d410
  42d3eb:	lds    esi,FWORD PTR [esi-0x6]
  42d3ee:	fnstcw WORD PTR [ecx+ebx*8-0x55]
  42d3f2:	xor    DWORD PTR [esp+edi*1-0x33fc509],0xfcf38083
  42d3fd:	jns    0x42d421
  42d3ff:	adc    al,0x5f
  42d401:	inc    eax
  42d402:	call   0xe1c749f1
  42d407:	add    ebx,DWORD PTR [ebp-0x581ab27e]
  42d40d:	jge    0x42d477
  42d40f:	mov    eax,0x3d2aa767
  42d414:	pushf  
  42d415:	fmul   QWORD PTR [edi+0x33]
  42d418:	sahf   
  42d419:	add    al,BYTE PTR [eax]
  42d41b:	jmp    0xee12bc3b
  42d420:	xchg   edi,eax
  42d421:	sti    
  42d422:	add    BYTE PTR [edx-0x780553fb],0xa1
  42d429:	ins    BYTE PTR es:[edi],dx
  42d42a:	mov    esi,0x2f9f1d8f
  42d42f:	xchg   DWORD PTR [edi],edx
  42d431:	inc    ecx
  42d432:	push   cs
  42d433:	das    
  42d434:	pusha  
  42d435:	add    DWORD PTR [edi],esp
  42d437:	adc    BYTE PTR [esi+0x3],ch
  42d43a:	add    cl,ch
  42d43c:	push   ds
  42d43d:	mov    al,0xc
  42d43f:	je     0x42d3d8
  42d441:	les    eax,FWORD PTR [ecx-0x18]
  42d444:	loop   0x42d3df
  42d446:	cmp    eax,0x9e0000e6
  42d44b:	add    al,BYTE PTR [eax-0x7c040c2e]
  42d451:	xor    al,0x2d
  42d453:	lods   al,BYTE PTR ds:[esi]
  42d454:	cli    
  42d455:	sar    BYTE PTR [ecx-0x50],1
  42d458:	cli    
  42d459:	mov    esi,0xe605b021
  42d45e:	sbb    al,BYTE PTR [esp+edi*8-0x52]
  42d462:	push   cs
  42d463:	jge    0x42d4a6
  42d465:	(bad)  
  42d466:	mov    edx,0x19f50b92
  42d46b:	adc    DWORD PTR [eax],ecx
  42d46d:	jmp    0xe8849910
  42d472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d473:	cdq    
  42d474:	adc    esi,ebp
  42d476:	sahf   
  42d477:	add    cl,BYTE PTR [ebx]
  42d479:	aaa    
  42d47a:	bound  eax,QWORD PTR [eax+0x42ece17f]
  42d480:	add    BYTE PTR [ebp+0x61],ah
  42d483:	stc    
  42d484:	sub    DWORD PTR [eax-0x6a],0x2
  42d488:	add    BYTE PTR [edx-0x53],ch
  42d48b:	ficomp WORD PTR [ebx]
  42d48d:	jmp    0x9dc9cf47
  42d492:	xor    dh,0x88
  42d495:	add    BYTE PTR [eax],ch
  42d497:	sahf   
  42d498:	push   ss
  42d499:	pminub mm7,QWORD PTR [esi-0x43981787]
  42d4a0:	inc    eax
  42d4a1:	add    esi,DWORD PTR [esp+edi*4]
  42d4a4:	inc    eax
  42d4a5:	add    DWORD PTR [edx-0x12],ebp
  42d4a8:	sub    eax,DWORD PTR [ebx+0x1e74038c]
  42d4ae:	add    BYTE PTR [eax],al
  42d4b0:	mov    DWORD PTR [esi-0x15db8c02],0xfefa8506
  42d4ba:	(bad)  
  42d4bb:	inc    edx
  42d4bd:	cmp    dl,bh
  42d4bf:	pop    es
  42d4c0:	popf   
  42d4c1:	ret    0x0
  42d4c4:	hlt    
  42d4c5:	mov    ebx,0x86f30240
  42d4ca:	mov    ecx,0xbe020406
  42d4cf:	inc    esi
  42d4d0:	push   es
  42d4d1:	sti    
  42d4d2:	call   0x44d791
  42d4d7:	(bad)  
  42d4d8:	mov    dl,0xfc
  42d4da:	add    cl,ch
  42d4dc:	push   ebp
  42d4dd:	sti    
  42d4de:	(bad)  
  42d4df:	(bad)  
  42d4e0:	mov    ebx,0x348aba2b
  42d4e5:	test   eax,0x7db44058
  42d4ea:	mov    edx,0xffaf400f
  42d4ef:	inc    esp
  42d4f1:	add    BYTE PTR [esi+0x7ae6b64e],ch
  42d4f7:	stc    
  42d4f8:	scas   eax,DWORD PTR es:[edi]
  42d4f9:	add    BYTE PTR [edi-0x6e],bh
  42d4fc:	add    BYTE PTR [ecx],0x0
  42d4ff:	jmp    DWORD PTR [eax-0x7e]
  42d502:	or     edi,DWORD PTR [edx+0x46f5feb6]
  42d508:	ja     0x42d49f
  42d50a:	gs psllw mm0,mm1
  42d50e:	clc    
  42d50f:	enter  0xf79d,0x1
  42d513:	jmp    0x9a0dd518
  42d518:	(bad)  
  42d519:	jmp    DWORD PTR [ebx+0x55]
  42d51c:	add    DWORD PTR [ebx+ecx*8],edi
  42d51f:	xchg   esp,eax
  42d520:	xchg   edi,eax
  42d521:	mov    edi,0xfee2e353
  42d526:	xor    eax,0x9d000486
  42d52b:	fisttp QWORD PTR [eax-0x1]
  42d52e:	jbe    0x42d5a5
  42d530:	xor    cl,BYTE PTR [edx]
  42d532:	jno    0x42d4bb
  42d534:	std    
  42d535:	xchg   esp,eax
  42d536:	pop    ebp
  42d537:	cmc    
  42d538:	mov    dh,0x23
  42d53a:	fwait
  42d53b:	adc    ah,bh
  42d53d:	std    
  42d53e:	sbb    bl,BYTE PTR [ebx-0x6860be38]
  42d544:	fwait
  42d545:	inc    esi
  42d546:	mov    ds:0x5bf9fe9b,eax
  42d54b:	cwde   
  42d54c:	jl     0x42d597
  42d54e:	sahf   
  42d54f:	sbb    esp,DWORD PTR [edi-0x3ceb5dfb]
  42d555:	(bad)  
  42d556:	jmp    0x8200:0xccb1ff9a
  42d55d:	adc    esi,DWORD PTR [ecx]
  42d55f:	fild   DWORD PTR [ebx]
  42d561:	or     ebx,DWORD PTR [eax]
  42d563:	and    eax,0x1b9d0004
  42d568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d569:	or     BYTE PTR [edx-0x62fe17ea],dl
  42d56f:	fwait
  42d570:	enter  0x9f41,0xa2
  42d574:	xchg   ebp,eax
  42d575:	push   ss
  42d576:	mov    ds:0xf9fe9b,eax
  42d57b:	add    BYTE PTR [ebx-0x68],bl
  42d57e:	jl     0x42d5c9
  42d580:	sahf   
  42d581:	sbb    DWORD PTR [edi-0x6ceb5df1],esp
  42d587:	dec    DWORD PTR [edx+0x6cb1ff9a]
  42d58d:	add    ebx,DWORD PTR [edi]
  42d58f:	xchg   BYTE PTR [edx-0x59fc5772],bl
  42d595:	jge    0x42d601
  42d597:	add    al,0x9d
  42d599:	add    ch,BYTE PTR [ecx-0x55]
  42d59c:	xchg   edi,eax
  42d59d:	xchg   edi,eax
  42d59e:	xor    dh,BYTE PTR [edx+0x426effdc]
  42d5a4:	push   edx
  42d5a5:	and    al,0x30
  42d5a7:	add    cl,dh
  42d5a9:	sub    al,0xda
  42d5ab:	jns    0x42d61a
  42d5ad:	jmp    0x4351ce18
  42d5b2:	jmp    0xfc58fed
  42d5b7:	call   DWORD PTR [edi-0x62f8d083]
  42d5bd:	add    ch,BYTE PTR [ebx]
  42d5bf:	dec    edx
  42d5c0:	sbb    edi,edx
  42d5c2:	paddq  mm3,QWORD PTR [ecx+0x5cb1e902]
  42d5c9:	call   FWORD PTR [esi+0x42]
  42d5cc:	add    ah,BYTE PTR [eax+eiz*8]
  42d5cf:	adc    ch,BYTE PTR [esi+0x34]
  42d5d2:	jmp    0x1147:0x66e8cd79
  42d5d9:	inc    ebx
  42d5da:	jmp    0xbfc57815
  42d5df:	adc    eax,DWORD PTR [eax]
  42d5e1:	add    BYTE PTR [esi-0x62f98883],ah
  42d5e7:	add    ch,BYTE PTR [ebx-0x400734b7]
  42d5ed:	pop    ebx
  42d5ee:	cdq    
  42d5ef:	add    ch,cl
  42d5f1:	mov    cl,0x5c
  42d5f3:	jmp    FWORD PTR [esi+0x41]
  42d5f6:	mov    dl,0x23
  42d5f8:	nop
  42d5f9:	or     BYTE PTR [esi],ch
  42d5fb:	(bad)  
  42d5fd:	jns    0x42d5cc
  42d5ff:	call   0x4274216a
  42d604:	jmp    0xffc5803f
  42d609:	outs   dx,DWORD PTR ds:[esi]
  42d60a:	xchg   esp,eax
  42d60b:	test   DWORD PTR [eax+eiz*2+0x2f00029b],0x5006a4e4
  42d616:	push   ds
  42d617:	(bad)  
  42d618:	(bad)  
  42d619:	call   0xde62823c
  42d61e:	sbb    dh,BYTE PTR [eax]
  42d620:	add    eax,0x41c09ee9
  42d625:	jmp    0x42d5c5
  42d627:	cdq    
  42d628:	imul   ebp,esp,0x3280029e
  42d62e:	xor    BYTE PTR [esi],ch
  42d630:	dec    ecx
  42d631:	das    
  42d632:	in     al,0x1
  42d634:	sub    esi,DWORD PTR [edx-0x36]
  42d637:	ficomp WORD PTR [ebx]
  42d639:	ins    BYTE PTR es:[edi],dx
  42d63a:	push   eax
  42d63b:	clc    
  42d63c:	xor    DWORD PTR [eax+0x7200029b],0xffffffcd
  42d643:	cli    
  42d644:	test   dh,bh
  42d646:	add    BYTE PTR [eax],al
  42d648:	retf   
  42d649:	fiadd  DWORD PTR [esi+0x26f302ad]
  42d64f:	sub    ebp,DWORD PTR [esi+0x7b]
  42d652:	leave  
  42d653:	out    0xd2,al
  42d655:	jge    0x42d616
  42d657:	push   ebp
  42d658:	idiv   DWORD PTR [ecx+eax*2-0x2]
  42d65c:	add    ah,BYTE PTR [esp+ecx*1]
  42d65f:	jmp    0xf63:0x73134166
  42d666:	and    al,0x3e
  42d668:	push   ecx
  42d669:	aas    
  42d66a:	and    al,0xe6
  42d66c:	retf   
  42d66d:	jge    0x42d6c9
  42d66f:	mov    cl,0xf2
  42d671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d672:	jle    0x42d681
  42d674:	lds    eax,FWORD PTR [esi]
  42d676:	add    BYTE PTR [eax-0x17000247],dl
  42d67c:	push   ds
  42d67d:	lods   al,BYTE PTR ds:[esi]
  42d67e:	or     al,0x14
  42d680:	fwait
  42d681:	rol    BYTE PTR [ecx+0x0],0x85
  42d685:	xchg   esp,eax
  42d686:	loope  0x42d638
  42d688:	add    al,0x6e
  42d68a:	add    al,0xf
  42d68c:	stc    
  42d68d:	push   ds
  42d68e:	add    al,0x0
  42d690:	je     0x42d65a
  42d692:	inc    eax
  42d693:	add    DWORD PTR [ecx-0x7f6083],edx
  42d699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d69a:	add    eax,0xad184
  42d69f:	add    ah,dh
  42d6a1:	ins    DWORD PTR es:[edi],dx
  42d6a2:	pop    es
  42d6a3:	bswap  eax
  42d6a5:	pop    edx
  42d6a6:	(bad)  
  42d6a7:	inc    DWORD PTR [ebp+edx*4-0x46]
  42d6ab:	cmp    DWORD PTR [eax],eax
  42d6ad:	add    al,bh
  42d6af:	test   eax,0x1d3c750e
  42d6b4:	inc    edi
  42d6b5:	and    al,0x34
  42d6b7:	pop    ds
  42d6b8:	inc    edi
  42d6b9:	and    al,0x28
  42d6bb:	enter  0x140,0x44
  42d6bf:	push   ds
  42d6c0:	inc    ecx
  42d6c1:	add    esi,DWORD PTR [ebp+ebp*2-0x17ae8af5]
  42d6c8:	mov    esi,0xfa940546
  42d6cd:	cmp    BYTE PTR [eax],bh
  42d6cf:	stos   BYTE PTR es:[edi],al
  42d6d0:	push   cs
  42d6d1:	vmread DWORD PTR [esi-0x2],ebx
  42d6d5:	inc    DWORD PTR [ebx*1+0x6ebf0c76]
  42d6dc:	outs   dx,BYTE PTR ds:[esi]
  42d6dd:	sub    al,0x7f
  42d6df:	cmp    DWORD PTR [esp+edx*1],esp
  42d6e2:	jg     0x42d72d
  42d6e4:	and    al,0x10
  42d6e6:	scas   eax,DWORD PTR es:[edi]
  42d6e7:	les    ecx,FWORD PTR [edx-0x75]
  42d6ea:	add    dh,BYTE PTR [ecx-0x33]
  42d6ed:	test   esp,esi
  42d6ef:	fld    DWORD PTR [ecx]
  42d6f1:	mov    bh,BYTE PTR [edx-0x7]
  42d6f4:	and    eax,DWORD PTR [eax+esi*4-0x54b977f7]
  42d6fb:	sbb    eax,DWORD PTR [ecx+0x17]
  42d6fe:	popf   
  42d6ff:	iret   
  42d700:	sub    DWORD PTR [eax+0xaf9c759],ecx
  42d706:	and    BYTE PTR [ebp-0x4f],dl
  42d709:	cli    
  42d70a:	xchg   edx,eax
  42d70b:	sub    al,0x23
  42d70d:	and    al,0xb1
  42d70f:	stos   DWORD PTR es:[edi],eax
  42d710:	fwait
  42d711:	xchg   BYTE PTR [eax],al
  42d713:	add    BYTE PTR [ecx+0x767ffeab],bl
  42d719:	xchg   ebp,eax
  42d71a:	aaa    
  42d71b:	add    bl,BYTE PTR [ebx+0x69]
  42d71e:	add    ebp,DWORD PTR ds:0xb1f98976
  42d724:	shr    DWORD PTR [ebp+0xba9be78],cl
  42d72a:	jg     0x42d714
  42d72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d72d:	push   edi
  42d72e:	inc    ebx
  42d72f:	dec    ecx
  42d730:	ror    DWORD PTR [edx],1
  42d732:	cmp    eax,0xc462ae74
  42d737:	inc    ecx
  42d738:	lahf   
  42d739:	stos   DWORD PTR es:[edi],eax
  42d73a:	stc    
  42d73b:	test   BYTE PTR [edi+0x1dfffea7],bh
  42d741:	test   eax,0xa7c7e93e
  42d746:	(bad)  
  42d747:	(bad)  
  42d748:	(bad)  [ecx+edi*8-0x4a5f226c]
  42d74f:	and    ebx,DWORD PTR [eax+0x5e8cee04]
  42d755:	sti    
  42d756:	jmp    0x9d03:0xb730aa08
  42d75d:	stos   DWORD PTR es:[edi],eax
  42d75e:	sti    
  42d75f:	mov    ecx,0x2f9c2bde
  42d764:	add    al,0x22
  42d766:	inc    edx
  42d767:	or     BYTE PTR [ecx+eax*1],ah
  42d76a:	add    cl,ch
  42d76c:	(bad)  
  42d76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d76e:	(bad)  
  42d76f:	dec    DWORD PTR [ecx-0x24f6ccbc]
  42d775:	call   0x42e177
  42d77a:	les    eax,FWORD PTR [ecx]
  42d77c:	int3   
  42d77d:	pop    es
  42d77e:	popf   
  42d77f:	add    bl,ch
  42d781:	and    BYTE PTR [esi-0x25515789],dl
  42d787:	in     eax,0xd9
  42d789:	jnp    0x42d767
  42d78b:	add    al,0x90
  42d78d:	sbb    BYTE PTR [ecx+0x680e902],bl
  42d793:	out    0xdc,eax
  42d795:	add    ebx,DWORD PTR [edi+0x49]
  42d798:	call   0xebc97f8e
  42d79d:	pop    es
  42d79e:	popf   
  42d79f:	add    ch,BYTE PTR [esi+0x2d]
  42d7a2:	cdq    
  42d7a3:	test   DWORD PTR [ecx-0x65],edx
  42d7a6:	stos   BYTE PTR es:[edi],al
  42d7a7:	lahf   
  42d7a8:	dec    ecx
  42d7a9:	lods   eax,DWORD PTR ds:[esi]
  42d7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7ab:	pop    eax
  42d7ac:	mov    dl,0x1
  42d7ae:	sbb    eax,esp
  42d7b0:	in     al,dx
  42d7b1:	jecxz  0x42d77e
  42d7b3:	cdq    
  42d7b4:	jecxz  0x42d7b2
  42d7b6:	pop    ss
  42d7b7:	pop    esi
  42d7b8:	call   0x6d5274c0
  42d7bd:	test   DWORD PTR [edx],esi
  42d7bf:	mov    al,ds:0x33580e8
  42d7c4:	loop   0x42d74d
  42d7c6:	dec    ebx
  42d7c7:	add    al,0xe9
  42d7c9:	add    ebx,DWORD PTR [edx+0x1efcefa9]
  42d7cf:	mov    ch,0xe5
  42d7d1:	add    ebx,DWORD PTR [ebp+0x55ff7d49]
  42d7d7:	pcmpgtw mm7,QWORD PTR [ebx+edi*8+0x9ae89f]
  42d7df:	add    BYTE PTR [esi+0x3],al
  42d7e2:	jmp    0x8def4ea
  42d7e7:	std    
  42d7e8:	push   ds
  42d7e9:	pop    ebp
  42d7ea:	in     eax,0x3
  42d7ec:	popf   
  42d7ed:	cmp    BYTE PTR [ebp-0xd71580d],0x7
  42d7f4:	popf   
  42d7f5:	add    al,BYTE PTR [eax]
  42d7f7:	imul   esi,ebp,0xdb5e0ada
  42d7fd:	add    eax,DWORD PTR [eax]
  42d7ff:	jmp    0x134b2139
  42d804:	mov    eax,ds:0x84aaba0b
  42d809:	or     bl,bh
  42d80b:	pop    ss
  42d80c:	popf   
  42d80d:	pop    ds
  42d80e:	call   0x8774ffcc
  42d813:	add    DWORD PTR ds:0xc205e7b6,0x46ea0002
  42d81d:	adc    dh,dl
  42d81f:	and    ah,bl
  42d821:	push   cs
  42d822:	or     ebp,DWORD PTR [ebx-0x5d]
  42d825:	push   es
  42d826:	add    cl,ch
  42d828:	test   eax,0x56cf3709
  42d82d:	or     al,0x7e
  42d82f:	inc    ebx
  42d830:	popf   
  42d831:	add    al,BYTE PTR [eax]
  42d833:	jb     0x42d896
  42d835:	add    BYTE PTR [edi+0xa9bf66a],bh
  42d83b:	sbb    esp,DWORD PTR gs:[eax+0x19b7e9fa]
  42d842:	or     BYTE PTR [eax+0x0],dh
  42d845:	add    al,bl
  42d847:	push   cs
  42d848:	jmp    0x457601
  42d84d:	punpcklbw mm3,DWORD PTR [edi-0x7d624878]
  42d854:	clc    
  42d855:	out    0x9,al
  42d857:	test   dl,dl
  42d859:	hlt    
  42d85a:	ss pushf 
  42d85c:	or     dh,BYTE PTR [edi]
  42d85e:	iret   
  42d85f:	aam    0x7d
  42d861:	dec    ecx
  42d862:	or     eax,0x1dedffdf
  42d867:	(bad)  
  42d868:	cld    
  42d869:	(bad)  
  42d86a:	ss pop ds
  42d86c:	stc    
  42d86d:	out    0xd7,eax
  42d86f:	test   DWORD PTR [ecx],esi
  42d871:	add    bh,al
  42d873:	add    al,BYTE PTR [eax]
  42d875:	mov    BYTE PTR [edx-0x6616eff8],0x7
  42d87c:	add    BYTE PTR [eax],al
  42d87e:	inc    edi
  42d87f:	ins    DWORD PTR es:[edi],dx
  42d880:	or     BYTE PTR [eax+ebp*2-0x79],dh
  42d884:	test   DWORD PTR [edi],0xc17af390
  42d88a:	add    al,0x87
  42d88c:	test   DWORD PTR [edx],0xfd8d847b
  42d892:	sbb    ebp,DWORD PTR [edx+0x60]
  42d895:	mov    edx,0x1d003007
  42d89b:	fwait
  42d89c:	stc    
  42d89d:	inc    DWORD PTR [esp+ebp*2-0x2711fcc0]
  42d8a4:	cli    
  42d8a5:	jg     0x42d8a4
  42d8a7:	add    eax,DWORD PTR [edi]
  42d8a9:	xchg   DWORD PTR [eax],eax
  42d8ab:	add    dl,dh
  42d8ad:	imul   esi,ebp,0xffffffff
  42d8b0:	jnp    0x42d8c6
  42d8b2:	sar    BYTE PTR [edx],1
  42d8b4:	(bad)  
  42d8b5:	rcl    BYTE PTR [ebx-0x7c66cbc0],cl
  42d8bb:	ja     0x42d846
  42d8bd:	imul   esi,ebp,0x7026d80
  42d8c3:	test   DWORD PTR [ecx-0x7dfffffc],esp
  42d8c9:	inc    eax
  42d8ca:	cli    
  42d8cb:	adc    DWORD PTR [ebp+0x4fffcca],ebx
  42d8d1:	ins    BYTE PTR es:[edi],dx
  42d8d2:	inc    eax
  42d8d3:	add    ecx,DWORD PTR [esi-0x62800528]
  42d8d9:	pushf  
  42d8da:	add    eax,0xf56b2287
  42d8df:	(bad)  
  42d8e0:	fist   DWORD PTR [ebx]
  42d8e2:	sar    BYTE PTR [edx],1
  42d8e4:	xchg   cl,bh
  42d8e6:	xchg   ebx,eax
  42d8e7:	inc    eax
  42d8e8:	hlt    
  42d8e9:	cwde   
  42d8ea:	add    DWORD PTR [edi-0x63],0xffffffb6
  42d8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8ef:	cli    
  42d8f0:	sbb    eax,0x180afbb3
  42d8f5:	pop    ds
  42d8f6:	add    eax,0x40659d00
  42d8fb:	(bad)  
  42d8fc:	lods   eax,DWORD PTR ds:[esi]
  42d8fd:	ret    0xfd52
  42d900:	mov    edx,0xa7f67eab
  42d905:	xchg   esp,eax
  42d906:	jg     0x42d8d4
  42d908:	mov    dl,0x7c
  42d90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d90b:	or     ch,bl
  42d90d:	in     eax,dx
  42d90e:	add    DWORD PTR [edi+0x0],edi
  42d911:	add    BYTE PTR [ebp-0x63be3f65],al
  42d917:	pop    edx
  42d918:	sub    dl,BYTE PTR [esi]
  42d91a:	aad    0x97
  42d91c:	cmc    
  42d91d:	inc    edi
  42d91e:	xchg   edx,eax
  42d91f:	cs jae 0x42d91f
  42d922:	jp     0x42d8cf
  42d924:	jle    0x42d92f
  42d926:	lea    esi,[edx]
  42d928:	jnp    0x42d927
  42d92a:	push   0xffffffab
  42d92c:	jle    0x42d937
  42d92e:	xchg   ebp,eax
  42d92f:	inc    edx
  42d930:	and    edi,esi
  42d932:	pop    edx
  42d933:	stos   DWORD PTR es:[edi],eax
  42d934:	jle    0x42d93f
  42d936:	cdq    
  42d937:	xor    ch,BYTE PTR [ebx]
  42d939:	dec    BYTE PTR [edx-0x55]
  42d93c:	rol    BYTE PTR [ecx-0x64],0x4
  42d940:	popf   
  42d941:	data16 lahf 
  42d943:	stos   DWORD PTR es:[edi],eax
  42d944:	inc    BYTE PTR [esi+0x478f35b]
  42d94a:	popf   
  42d94b:	stos   DWORD PTR es:[edi],eax
  42d94c:	jg     0x42d90d
  42d94e:	test   eax,0xc1017c98
  42d953:	test   al,0xf5
  42d955:	mov    cl,0xdd
  42d957:	fwait
  42d958:	lds    edx,FWORD PTR [esi]
  42d95a:	frstor [edi]
  42d95c:	lahf   
  42d95d:	out    dx,al
  42d95e:	push   ds
  42d95f:	jmp    0x42d974
  42d961:	out    0x9e,eax
  42d963:	pop    eax
  42d964:	mov    esi,0x2b02253f
  42d969:	add    esp,DWORD PTR [edx]
  42d96b:	sbb    eax,0xce77f01
  42d970:	ins    DWORD PTR es:[edi],dx
  42d971:	call   0x7d2b764e
  42d976:	add    BYTE PTR [eax],al
  42d978:	in     al,0x9c
  42d97a:	cdq    
  42d97b:	jg     0x42d987
  42d97d:	or     eax,0x9cc85265
  42d982:	mov    cl,0x7e
  42d984:	pop    esp
  42d985:	cmc    
  42d986:	add    al,0x81
  42d988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d989:	add    eax,0x9cb04190
  42d98e:	cdq    
  42d98f:	test   BYTE PTR [ebx-0x1e811df9],ch
  42d995:	xchg   ebx,eax
  42d996:	mov    DWORD PTR [ecx+0x3ed2513],ebp
  42d99c:	pop    DWORD PTR [ebp-0x2e]
  42d99f:	adc    DWORD PTR [edi-0x62f9c17b],0x2
  42d9a6:	pop    edi
  42d9a7:	or     bl,BYTE PTR [ebx]
  42d9a9:	shr    BYTE PTR [eax],0x9c
  42d9ac:	push   0x892f0864
  42d9b1:	push   0xffffffe7
  42d9b3:	clc    
  42d9b4:	and    DWORD PTR [ebp-0x7862fc19],edx
  42d9ba:	stos   BYTE PTR es:[edi],al
  42d9bb:	sti    
  42d9bc:	and    ecx,DWORD PTR [ebp-0x13]
  42d9bf:	jl     0x42da13
  42d9c1:	or     BYTE PTR [eax],bl
  42d9c3:	das    
  42d9c4:	stos   BYTE PTR es:[edi],al
  42d9c5:	xchg   DWORD PTR [edx],esp
  42d9c7:	pushf  
  42d9c8:	lea    eax,ds:0xc32003e9
  42d9ce:	xchg   esp,eax
  42d9cf:	xchg   ecx,eax
  42d9d0:	mov    ds:0x4cf8e59f,al
  42d9d5:	sar    ch,0x85
  42d9d8:	mov    bl,0xc1
  42d9da:	lods   al,BYTE PTR gs:[esi]
  42d9dc:	add    BYTE PTR [eax],al
  42d9de:	pop    es
  42d9df:	pop    ss
  42d9e0:	lock rcr DWORD PTR [ecx+eax*1+0x0],0xb5
  42d9e6:	pop    ss
  42d9e7:	lds    eax,FWORD PTR [eax]
  42d9e9:	jmp    0xeb215c8c
  42d9ee:	mov    edx,0xe27ce80c
  42d9f3:	fwait
  42d9f4:	cli    
  42d9f5:	ins    BYTE PTR es:[edi],dx
  42d9f6:	fimul  WORD PTR [edi]
  42d9f8:	or     DWORD PTR [edi-0x2fc2fea4],esp
  42d9fe:	cmp    al,BYTE PTR [edx]
  42da00:	add    cl,ch
  42da02:	inc    ecx
  42da03:	shl    edi,0x9e
  42da06:	mov    edx,0xde64fa9b
  42da0b:	or     BYTE PTR [ecx+eax*2-0x2505670c],al
  42da12:	fidivr WORD PTR [edi-0x2a]
  42da15:	out    0x2b,al
  42da17:	pop    ebx
  42da18:	inc    edi
  42da19:	push   0x3e
  42da1b:	push   cs
  42da1c:	jg     0x42d9c7
  42da1e:	mov    ch,BYTE PTR [edx-0x67ca81b9]
  42da24:	jle    0x42da1b
  42da26:	pop    edx
  42da27:	repz push ebx
  42da2a:	jbe    0x42d9b0
  42da2c:	inc    ebx
  42da2d:	or     eax,0x5438991
  42da32:	xchg   ecx,eax
  42da33:	add    DWORD PTR [ebx+0xd],0x3d
  42da37:	inc    ebx
  42da38:	mov    DWORD PTR [ebp-0x4316f48e],esp
  42da3e:	lahf   
  42da3f:	add    al,BYTE PTR [eax]
  42da41:	out    dx,al
  42da42:	add    BYTE PTR [eax],al
  42da44:	int3   
  42da45:	pop    esp
  42da46:	test   DWORD PTR [ecx+0x36],ebp
  42da49:	cmp    BYTE PTR [eax-0x17],al
  42da4c:	cmp    bl,BYTE PTR [eax-0x639692f6]
  42da52:	cli    
  42da53:	jmp    0x7102337d
  42da58:	xchg   edi,eax
  42da59:	inc    ecx
  42da5a:	or     BYTE PTR [eax+0x6c],ah
  42da5d:	push   cs
  42da5e:	ret    0x3a00
  42da61:	add    BYTE PTR [ecx+ebp*8],dh
  42da64:	and    eax,0x84000000
  42da69:	outs   dx,BYTE PTR ds:[esi]
  42da6a:	or     esi,DWORD PTR [ebp-0x3]
  42da6d:	rol    BYTE PTR [eax+0x1],0x8a
  42da71:	jge    0x42daac
  42da73:	add    esp,esi
  42da75:	inc    BYTE PTR [esi]
  42da77:	mov    dh,0x7
  42da79:	sbb    BYTE PTR [ebx+0x468308],cl
  42da7f:	sbb    dh,0x62
  42da82:	jae    0x42da9b
  42da84:	xor    al,0x67
  42da86:	xor    DWORD PTR [ebp+edi*4+0x7e],esi
  42da8a:	icebp  
  42da8b:	and    bl,dl
  42da8d:	or     DWORD PTR [eax],0xbdfeb402
  42da93:	inc    esi
  42da94:	mov    ch,0x91
  42da96:	out    0x1e,eax
  42da98:	test   DWORD PTR [esi],eax
  42da9a:	add    BYTE PTR [ebx+0x46819aa2],cl
  42daa0:	mov    WORD PTR ds:0xbfd80fc6,ds
  42daa6:	inc    al
  42daa8:	add    BYTE PTR [eax],al
  42daaa:	and    al,0x3
  42daac:	sbb    eax,0x53
  42daaf:	and    BYTE PTR [ebp+0x9ce7799],bh
  42dab5:	retf   0x51bf
  42dab8:	add    eax,0xffffc682
  42dabd:	jmp    FWORD PTR [ebx-0x69]
  42dac0:	xor    DWORD PTR [esi+0x4c],ebx
  42dac3:	xchg   ecx,eax
  42dac4:	jl     0x42db3d
  42dac6:	xor    eax,0x878b0006
  42dacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dacc:	mov    edi,0x5616c83
  42dad1:	test   BYTE PTR [esi],cl
  42dad3:	(bad)  
  42dad4:	(bad)  
  42dad5:	jmp    FWORD PTR [ebp-0x6276f7c0]
  42dadb:	popa   
  42dadc:	bnd call 0x4186d9
  42dae2:	sbb    eax,0x180af905
  42dae7:	sti    
  42dae8:	add    eax,DWORD PTR [eax]
  42daea:	popf   
  42daeb:	add    al,0x7f
  42daed:	jg     0x42dae5
  42daef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daf0:	icebp  
  42daf1:	test   ch,ch
  42daf3:	mov    dh,0xa1
  42daf5:	cli    
  42daf6:	push   ss
  42daf7:	loop   0x42daf4
  42daf9:	jle    0x42db3e
  42dafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dafc:	inc    BYTE PTR [esi]
  42dafe:	pop    ebx
  42daff:	mov    bh,0x2f
  42db01:	or     BYTE PTR ds:0xd3e8de92,bl
  42db07:	dec    esi
  42db08:	mov    eax,ds:0x4e9e3fa
  42db0d:	cmp    DWORD PTR [eax],eax
  42db0f:	add    ah,al
  42db11:	cmp    dh,0xff
  42db14:	popf   
  42db15:	adc    al,0x40
  42db17:	or     al,0x16
  42db19:	clc    
  42db1a:	fisttp WORD PTR [edi]
  42db1c:	es loope 0x42db16
  42db1f:	xchg   bl,dh
  42db21:	mov    ds:0xe69ec2d5,eax
  42db26:	adc    ebx,DWORD PTR [ecx+0x62955c6]
  42db2c:	out    dx,eax
  42db2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db2e:	in     eax,0xd7
  42db30:	out    dx,al
  42db31:	lahf   
  42db32:	jne    0x42daf2
  42db34:	push   ss
  42db35:	fidivr DWORD PTR [ebp+0x7b]
  42db38:	mov    ecx,0xa1750403
  42db3d:	and    ah,BYTE PTR [ebx]
  42db3f:	and    al,0xb5
  42db41:	add    al,0xcc
  42db43:	mov    ecx,fs
  42db45:	test   al,0xa1
  42db47:	mov    cl,bl
  42db49:	call   DWORD PTR [ebx]
  42db4b:	pop    ss
  42db4c:	addr16 and al,0xbe
  42db4f:	push   es
  42db50:	pop    esp
  42db51:	and    al,BYTE PTR [ebp+0x8]
  42db54:	adc    al,0x2
  42db56:	mov    bl,0xf7
  42db58:	test   eax,0x9c3d231f
  42db5d:	fdiv   st(5),st
  42db5f:	inc    ebp
  42db60:	sbb    eax,0x21f6db9d
  42db65:	cmp    bl,0xa5
  42db68:	pop    es
  42db69:	test   DWORD PTR [edi+ebx*8-0x6e],edi
  42db6d:	add    ch,BYTE PTR [ebx]
  42db6f:	cmp    eax,0x3a74dd9c
  42db74:	add    BYTE PTR [eax],al
  42db76:	and    bl,BYTE PTR [ecx]
  42db78:	std    
  42db79:	jle    0x42db62
  42db7b:	or     eax,0xde6e790d
  42db80:	lock js 0x42dbe1
  42db83:	fdivp  st(0),st
  42db85:	fmul   DWORD PTR [eax]
  42db87:	xor    ch,BYTE PTR [esi-0x4a]
  42db8a:	(bad)  
  42db8b:	mov    al,0x63
  42db8d:	les    ebp,FWORD PTR [esi]
  42db8f:	or     al,0x5f
  42db91:	ds mov ds,esi
  42db94:	(bad)  
  42db95:	clc    
  42db96:	pushf  
  42db97:	mov    ch,BYTE PTR [edx]
  42db99:	or     eax,0xdff2401b
  42db9e:	pop    ss
  42db9f:	mov    ebp,DWORD PTR [eax+eiz*8]
  42dba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dba3:	pop    es
  42dba4:	fs aaa 
  42dba6:	jp     0x42db40
  42dba8:	add    DWORD PTR [ecx+0x3e0defe],0xa968f282
  42dbb2:	cwde   
  42dbb3:	pop    es
  42dbb4:	fs bnd jno 0x42db50
  42dbb8:	popa   
  42dbb9:	cmp    esp,0xdcbde8fe
  42dbbf:	add    DWORD PTR [esi],edx
  42dbc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbc2:	(bad)  
  42dbc4:	clc    
  42dbc5:	js     0x42dba5
  42dbc7:	(bad)  
  42dbc9:	js     0x42dc15
  42dbcb:	fsub   QWORD PTR [edi+ebx*8+0x6c00077e]
  42dbd2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbd4:	cli    
  42dbd5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42dbd7:	or     BYTE PTR ss:[edx+0x0],ch
  42dbdb:	add    BYTE PTR [ebp-0x22],dh
  42dbde:	sbb    ebp,ecx
  42dbe0:	adc    DWORD PTR [eax+ebp*8-0x78fd6117],eax
  42dbe7:	stos   BYTE PTR es:[edi],al
  42dbe8:	push   es
  42dbe9:	jg     0x42dbaa
  42dbeb:	test   BYTE PTR [edx-0x61170047],0x7f
  42dbf2:	push   ebx
  42dbf3:	int    0x9a
  42dbf5:	jg     0x42dbc1
  42dbf7:	ret    0xdeb2
  42dbfa:	sbb    edi,DWORD PTR [eax]
  42dbfc:	fs leave 
  42dbfe:	cli    
  42dbff:	mov    ecx,0xe373575b
  42dc04:	push   esp
  42dc05:	inc    ecx
  42dc06:	adc    eax,DWORD PTR ds:0x70ff0c1c
  42dc0c:	xor    bl,0xf1
  42dc0f:	daa    
  42dc10:	test   al,0x1b
  42dc12:	or     ebp,DWORD PTR [ebp+0x41]
  42dc15:	xchg   edi,eax
  42dc16:	cli    
  42dc17:	jmp    0xb92ba041
  42dc1c:	out    dx,eax
  42dc1d:	pushf  
  42dc1e:	cli    
  42dc1f:	jae    0x42dbf9
  42dc21:	repz and esp,DWORD PTR [eax-0x76]
  42dc25:	or     ch,cl
  42dc27:	jns    0x42dbc7
  42dc29:	add    al,BYTE PTR [eax]
  42dc2b:	jae    0x42dbed
  42dc2d:	repz and esp,DWORD PTR [ecx+0x72]
  42dc31:	out    dx,eax
  42dc32:	call   0x457aa4
  42dc37:	arpl   WORD PTR [eax+0x6a7423f3],bp
  42dc3d:	push   es
  42dc3e:	out    0xe2,eax
  42dc40:	add    BYTE PTR [eax],al
  42dc42:	aam    0x41
  42dc44:	adc    ecx,DWORD PTR ds:0x42150b22
  42dc4a:	mov    WORD PTR [eax-0x489cffbf],es
  42dc50:	nop
  42dc51:	or     al,0x52
  42dc53:	jp     0x42dcbc
  42dc55:	mov    al,BYTE PTR [edx]
  42dc57:	push   es
  42dc58:	and    al,0x85
  42dc5a:	dec    eax
  42dc5b:	cwde   
  42dc5c:	add    BYTE PTR [esi+0x23],0x7c
  42dc60:	xor    ecx,0xc6815ebb
  42dc66:	pushf  
  42dc67:	adc    eax,0x17f4fffd
  42dc6c:	mov    ebx,0x118e774
  42dc71:	and    al,0x7
  42dc73:	mov    ?,WORD PTR [eax+0x11cbf3c0]
  42dc79:	shl    BYTE PTR [edi+0x63],0xe9
  42dc7d:	xor    DWORD PTR [ecx*4-0x4148fc1f],0x3a
  42dc85:	mov    BYTE PTR [edx-0x33807d03],al
  42dc8b:	mov    ebp,esi
  42dc8d:	wrmsr  
  42dc8f:	in     eax,0xe9
  42dc91:	(bad)  
  42dc92:	sti    
  42dc93:	xchg   al,cl
  42dc95:	call   DWORD PTR [ebx]
  42dc97:	mov    DWORD PTR [edx-0x15bebff1],edi
  42dc9d:	(bad)  
  42dc9e:	sti    
  42dc9f:	xchg   DWORD PTR [eax+0x17],eax
  42dca2:	pusha  
  42dca3:	mov    DWORD PTR [esi],eax
  42dca5:	pop    es
  42dca6:	add    BYTE PTR [eax],al
  42dca8:	cld    
  42dca9:	dec    eax
  42dcaa:	psubsw mm5,QWORD PTR [edx+0xefff56c]
  42dcb1:	dec    ecx
  42dcb2:	mov    ebx,tr2
  42dcb5:	repnz push cs
  42dcb7:	jmp    0x42dc3c
  42dcb9:	mov    BYTE PTR [eax+0x17],al
  42dcbc:	pusha  
  42dcbd:	pop    ss
  42dcbe:	pop    es
  42dcbf:	sbb    esp,ebp
  42dcc1:	dec    eax
  42dcc2:	jp     0x7fe575ca
  42dcc8:	popf   
  42dcc9:	pushf  
  42dcca:	xchg   DWORD PTR [esi],ebx
  42dccc:	dec    esp
  42dccd:	inc    ebp
  42dcce:	lahf   
  42dccf:	and    esp,DWORD PTR [ecx]
  42dcd1:	nop
  42dcd2:	cli    
  42dcd3:	out    0x27,al
  42dcd5:	sub    DWORD PTR [eax],esp
  42dcd7:	and    al,0x89
  42dcd9:	stos   DWORD PTR es:[edi],eax
  42dcda:	adc    ch,BYTE PTR [edx]
  42dcdc:	push   ss
  42dcdd:	imul   ecx,DWORD PTR [edx],0xe5785d85
  42dce3:	xchg   BYTE PTR [ecx-0x41],dh
  42dce6:	repnz xchg dl,ah
  42dce9:	ror    BYTE PTR [edx+0x24],0xb1
  42dced:	pop    edx
  42dcee:	mov    ecx,ecx
  42dcf0:	add    bh,ah
  42dcf2:	mov    BYTE PTR [edi+0x418c9171],bh
  42dcf8:	mov    al,bh
  42dcfa:	or     BYTE PTR [ebx],0xa1
  42dcfd:	and    eax,DWORD PTR [esi+0x13]
  42dd00:	jmp    0x42dce7
  42dd02:	idiv   BYTE PTR [edx-0x56]
  42dd05:	push   ds
  42dd06:	repz cli 
  42dd08:	shr    BYTE PTR [ecx+eax*4-0x7effff85],cl
  42dd0f:	or     eax,DWORD PTR [esp+esi*2]
  42dd12:	jae    0x42dd24
  42dd14:	inc    edx
  42dd15:	add    al,0x20
  42dd17:	ins    BYTE PTR es:[edi],dx
  42dd18:	adc    ah,BYTE PTR [ebx]
  42dd1a:	es clc 
  42dd1c:	out    0x1f,eax
  42dd1e:	push   ss
  42dd1f:	jne    0x42dd0a
  42dd21:	dec    ebx
  42dd22:	jns    0x42dcef
  42dd24:	xor    eax,DWORD PTR [edi-0x7b518b95]
  42dd2a:	pop    ebp
  42dd2b:	test   DWORD PTR [ecx],0xe28ce386
  42dd31:	jge    0x42dcc4
  42dd33:	test   eax,0xd924186
  42dd38:	dec    ecx
  42dd39:	adc    esi,edx
  42dd3b:	pushf  
  42dd3c:	xchg   edx,ebx
  42dd3e:	imul   esp,DWORD PTR [esi+ebx*4],0x7e
  42dd42:	loope  0x42dd46
  42dd44:	or     eax,0xd115afc
  42dd49:	(bad)  
  42dd4a:	xchg   ebx,eax
  42dd4b:	out    dx,al
  42dd4c:	imul   eax,ebx,0xffffffce
  42dd4f:	fistp  WORD PTR [ebp+0x37]
  42dd52:	jns    0x42dd4e
  42dd54:	ins    DWORD PTR es:[edi],dx
  42dd55:	rol    BYTE PTR [ebx+0x648e97c8],cl
  42dd5b:	xchg   ebp,eax
  42dd5c:	sbb    BYTE PTR [eax-0x7220f216],cl
  42dd62:	fsub   st(5),st
  42dd64:	int3   
  42dd65:	mov    DWORD PTR [esi-0x51b68f04],esp
  42dd6b:	mov    WORD PTR [edx+0x640587fa],gs
  42dd71:	outs   dx,DWORD PTR ds:[esi]
  42dd72:	add    BYTE PTR [eax],al
  42dd74:	add    al,0x95
  42dd76:	add    DWORD PTR [esi+0x4199f261],ecx
  42dd7c:	dec    edx
  42dd7d:	mov    DWORD PTR [ebx],ecx
  42dd7f:	inc    eax
  42dd80:	sub    eax,DWORD PTR [esi]
  42dd82:	jmp    0xe98318d3
  42dd87:	das    
  42dd88:	add    eax,0xf864e940
  42dd8d:	aas    
  42dd8e:	jmp    0xe982de63
  42dd93:	cdq    
  42dd94:	clc    
  42dd95:	aas    
  42dd96:	jmp    0xe982dfa6
  42dd9b:	std    
  42dd9c:	sti    
  42dd9d:	aas    
  42dd9e:	jmp    0xe982e192
  42dda3:	loope  0x42dda0
  42dda5:	aas    
  42dda6:	jmp    0xe9841fe8
  42ddab:	cmp    eax,DWORD PTR fs:[ecx-0x17]
  42ddaf:	pusha  
  42ddb0:	inc    ebx
  42ddb1:	inc    ecx
  42ddb2:	jmp    0xe984194a
  42ddb7:	loop   0x42ddff
  42ddb9:	inc    ecx
  42ddba:	jmp    0x841ee8
  42ddbf:	jmp    0xe98045d8
  42ddc4:	in     eax,0x67
  42ddc6:	cmp    eax,0x3d6582e9
  42ddcb:	jmp    0xe980479b
  42ddd0:	pop    es
  42ddd1:	push   0x3d
  42ddd3:	jmp    0xe98047df
  42ddd8:	add    BYTE PTR [eax],al
  42ddda:	imul   DWORD PTR [ecx+0x3d]
  42dddd:	jmp    0xe98047d9
  42dde2:	out    0x69,eax
  42dde4:	cmp    eax,0x3d69e7e9
  42dde9:	jmp    0xe9804836
  42ddee:	inc    eax
  42ddef:	push   0x3d
  42ddf1:	jmp    0xe980483d
  42ddf6:	xor    BYTE PTR [edx+0x3d],ch
  42ddf9:	jmp    0xe9804846
  42ddfe:	inc    eax
  42ddff:	push   0x3d
  42de01:	jmp    0xe980483e
  42de06:	xor    BYTE PTR [edx+0x3d],ch
  42de09:	jmp    0xe9804816
  42de0e:	xchg   edx,eax
  42de0f:	addr16 cmp eax,0x3d67a5e9
  42de15:	jmp    0xe9804731
  42de1a:	cmp    DWORD PTR [eax+0x3d],ebp
  42de1d:	jmp    0xe9804665
  42de22:	cmp    eax,0xdde93d68
  42de27:	push   0x682fe93d
  42de2c:	cmp    eax,0x3d638fe9
  42de31:	jmp    0xe98041b1
  42de36:	sbb    al,0x5b
  42de38:	cmp    eax,0xab2f8400
  42de3d:	inc    edx
  42de3e:	add    BYTE PTR [eax],al
  42de40:	test   dh,dl
  42de42:	test   eax,0xa3397442
  42de47:	inc    edx
  42de48:	je     0x42ddd9
  42de4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de4b:	inc    edx
  42de4c:	inc    esp
  42de4d:	sub    al,0xaf
  42de4f:	inc    edx
  42de50:	inc    esp
  42de51:	arpl   WORD PTR [ebx-0x4f70cbbe],si
  42de57:	inc    edx
  42de58:	xor    al,0x8a
  42de5a:	mov    al,0x42
  42de5c:	inc    esp
  42de5d:	or     eax,0xa64442b1
  42de62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de63:	inc    edx
  42de64:	xor    al,0xb4
  42de66:	mov    bl,0x42
  42de68:	xor    al,0x37
  42de6a:	mov    cl,0x42
  42de6c:	add    al,0xfd
  42de6e:	scas   al,BYTE PTR es:[edi]
  42de6f:	inc    edx
  42de70:	add    al,0xcf
  42de72:	scas   al,BYTE PTR es:[edi]
  42de73:	inc    edx
  42de74:	hlt    
  42de75:	or     ebp,DWORD PTR [eax-0x4c4e0bbe]
  42de7b:	inc    edx
  42de7c:	add    al,0x79
  42de7e:	scas   al,BYTE PTR es:[edi]
  42de7f:	inc    edx
  42de80:	add    al,0x59
  42de82:	stos   BYTE PTR es:[edi],al
  42de83:	inc    edx
  42de84:	hlt    
  42de85:	imul   ebp,DWORD PTR [edx-0x55890bbe],0xaf8cc442
  42de8f:	inc    edx
  42de90:	les    edi,FWORD PTR [ecx+esi*4]
  42de93:	inc    edx
  42de94:	mov    ah,0xe5
  42de96:	mov    al,0x42
  42de98:	mov    ah,0xd
  42de9a:	mov    al,0x42
  42de9c:	les    esi,FWORD PTR ds:0x5dc442b0
  42dea2:	scas   eax,DWORD PTR es:[edi]
  42dea3:	inc    edx
  42dea4:	add    BYTE PTR [eax],al
  42dea6:	mov    ah,0x5d
  42dea8:	scas   eax,DWORD PTR es:[edi]
  42dea9:	inc    edx
  42deaa:	mov    ah,0x5d
  42deac:	scas   eax,DWORD PTR es:[edi]
  42dead:	inc    edx
  42deae:	test   BYTE PTR [edi-0x51],ah
  42deb1:	inc    edx
  42deb2:	test   ch,dl
  42deb4:	sbb    DWORD PTR [esi],0xfebe719d
  42deba:	push   cs
  42debb:	fimul  WORD PTR [edx]
  42debd:	mov    bl,0xeb
  42debf:	scas   eax,DWORD PTR es:[edi]
  42dec0:	xor    DWORD PTR [edi-0x66d809a4],eax
  42dec6:	retf   0x9b10
  42dec9:	pop    edx
  42deca:	push   ds
  42decb:	adc    al,0x5
  42decd:	je     0x42de59
  42decf:	arpl   di,cx
  42ded1:	call   DWORD PTR [edx-0x64]
  42ded4:	and    al,0x37
  42ded6:	push   ebp
  42ded7:	mov    al,0xe7
  42ded9:	jle    0x42df38
  42dedb:	enter  0x3724,0x65
  42dedf:	push   eax
  42dee0:	inc    DWORD PTR [ebp-0x25423a2]
  42dee6:	add    bh,ah
  42dee8:	sbb    BYTE PTR [esi*8+0x2610179a],dl
  42deef:	bound  eax,QWORD PTR [esi]
  42def1:	pop    ds
  42def2:	pop    ebx
  42def3:	lahf   
  42def4:	jge    0x42deed
  42def6:	or     ch,BYTE PTR [edi+0x7]
  42def9:	das    
  42defa:	fstp   QWORD PTR [ebx+0x35]
  42defd:	mov    edi,0xbf36dbae
  42df02:	dec    ebx
  42df03:	adc    al,0x94
  42df05:	popa   
  42df06:	push   ds
  42df07:	sbb    ch,bh
  42df09:	inc    DWORD PTR [eax]
  42df0b:	add    BYTE PTR [eax-0x55],ch
  42df0e:	and    al,0x7f
  42df10:	pop    ebx
  42df11:	(bad)  
  42df12:	(bad)  
  42df13:	jno    0x42deb9
  42df15:	mov    ecx,0xa2511004
  42df1a:	int    0xbf
  42df1c:	arpl   WORD PTR [esp+edx*4+0x1],bx
  42df20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df21:	iret   
  42df22:	xchg   edx,eax
  42df23:	out    0x23,eax
  42df25:	push   ecx
  42df26:	cdq    
  42df27:	cli    
  42df28:	mov    dl,0x73
  42df2a:	cmc    
  42df2b:	mov    edi,0x52bf015d
  42df30:	add    ah,BYTE PTR es:[ebx]
  42df33:	cld    
  42df34:	clc    
  42df35:	loop   0x42df45
  42df37:	add    al,0xef
  42df39:	xchg   ecx,eax
  42df3a:	sti    
  42df3b:	xlat   BYTE PTR ds:[ebx]
  42df3c:	lods   al,BYTE PTR ds:[esi]
  42df3d:	inc    edx
  42df3e:	jmp    0x2d177bcc
  42df43:	call   0xfe764d6
  42df48:	rol    DWORD PTR ds:0xee205b9,0xc5
  42df4f:	or     ebx,DWORD PTR [ebp-0x8041d85]
  42df55:	pop    ss
  42df56:	in     al,0x29
  42df58:	lods   al,BYTE PTR ds:[esi]
  42df59:	sub    bh,BYTE PTR [esi]
  42df5b:	or     eax,0x1f65c272
  42df60:	add    DWORD PTR [esi],0xc2090ee8
  42df66:	imul   eax,DWORD PTR [edi-0x63],0x4
  42df6a:	imul   esp,DWORD PTR ds:0x4560828e,0xc49c0000
  42df74:	in     al,dx
  42df75:	add    ebx,DWORD PTR [ebx]
  42df77:	inc    ebx
  42df78:	repnz mov edx,ebx
  42df7b:	add    DWORD PTR [esi],0x6907891e
  42df81:	cdq    
  42df82:	xchg   ebx,eax
  42df83:	pop    ss
  42df84:	fiadd  DWORD PTR [edx+0x3e4e676]
  42df8a:	xchg   esi,eax
  42df8b:	jbe    0x42dfb3
  42df8d:	popf   
  42df8e:	fadd   DWORD PTR [ecx-0x4d7705fa]
  42df94:	push   0xb8d457a2
  42df99:	mov    WORD PTR [ebp-0x7],gs
  42df9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df9d:	or     BYTE PTR [ebp-0x76d5572b],bl
  42dfa3:	xor    dh,BYTE PTR [eax+0x46]
  42dfa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfa7:	jnp    0x42dfcb
  42dfa9:	adc    BYTE PTR [eax+ecx*2],dl
  42dfac:	add    cl,bl
  42dfae:	adc    eax,DWORD PTR [ebx+0x12]
  42dfb1:	cli    
  42dfb2:	addr16 inc eax
  42dfb4:	ret    
  42dfb5:	das    
  42dfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfb7:	add    DWORD PTR [eax],eax
  42dfb9:	jmp    0x1544a35c
  42dfbe:	add    eax,0x2606ffd0
  42dfc3:	cmp    dl,BYTE PTR [esi+eax*4]
  42dfc6:	push   0xffffffd4
  42dfc8:	adc    DWORD PTR [ecx],ebp
  42dfca:	mov    eax,ds:0x15e5c40f
  42dfcf:	ret    0x17be
  42dfd2:	and    al,0x93
  42dfd4:	out    0xfa,eax
  42dfd6:	add    BYTE PTR [eax],al
  42dfd8:	sahf   
  42dfd9:	add    al,BYTE PTR [eax]
  42dfdb:	push   edi
  42dfdc:	aad    0xe6
  42dfde:	pop    es
  42dfdf:	call   0x4194e48e
  42dfe4:	sahf   
  42dfe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfe6:	cld    
  42dfe7:	inc    esi
  42dfe8:	and    al,0xc2
  42dfea:	pop    ecx
  42dfeb:	sub    edx,DWORD PTR [ebp-0x695078fe]
  42dff1:	ret    
  42dff2:	add    DWORD PTR [ebp+0x6bffcf92],ebp
  42dff8:	fst    DWORD PTR [ebx]
  42dffa:	add    edi,DWORD PTR [ecx-0x46008d7]
  42e000:	pop    esi
  42e001:	add    bh,bl
  42e003:	xchg   edi,eax
  42e004:	out    dx,al
  42e005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e006:	fimul  DWORD PTR [edx]
  42e008:	adc    cl,BYTE PTR [ebp+0x396ae7c2]
  42e00e:	inc    eax
  42e00f:	jmp    0xe1bcf0f1
  42e014:	sahf   
  42e015:	adc    eax,0x28995312
  42e01a:	add    BYTE PTR [ebx-0x62],dl
  42e01d:	sub    BYTE PTR [eax],al
  42e01f:	(bad)  
  42e020:	retf   
  42e021:	push   edi
  42e022:	or     eax,0x4179a129
  42e027:	add    BYTE PTR [eax+ecx*4-0x3d4a8a46],ch
  42e02e:	sub    eax,eax
  42e030:	je     0x42dff3
  42e032:	add    eax,0x798ac5b7
  42e037:	clc    
  42e038:	push   0x32faf6
  42e03d:	add    BYTE PTR [edx+eax*8],dh
  42e040:	add    eax,0x798ebdb6
  42e045:	shl    BYTE PTR [eax],0x9a
  42e048:	mov    edi,0xe67991c3
  42e04d:	sbb    DWORD PTR [eax],0xffffffa3
  42e050:	push   eax
  42e051:	push   edi
  42e052:	jmp    FWORD PTR [ebx+0x29]
  42e055:	rol    BYTE PTR [edi+edi*2-0x27131b8d],0xff
  42e05d:	std    
  42e05e:	jmp    0x42e0bb
  42e060:	add    BYTE PTR [ebx+ebp*8-0x17ba7892],cl
  42e067:	add    BYTE PTR [ebx-0x10],0x14
  42e06b:	outs   dx,BYTE PTR ds:[esi]
  42e06c:	adc    edx,DWORD PTR [ebp+eax*2+0x74850043]
  42e073:	clc    
  42e074:	or     esp,DWORD PTR [ecx]
  42e076:	inc    ecx
  42e077:	ja     0x42e06e
  42e079:	adc    eax,0x3a9208
  42e07e:	lea    ecx,[eax-0x10]
  42e081:	push   0x0
  42e083:	pop    ebx
  42e084:	cmp    al,0x16
  42e086:	stos   BYTE PTR es:[edi],al
  42e087:	outs   dx,BYTE PTR ds:[esi]
  42e088:	dec    edx
  42e089:	lea    eax,[ecx+0x67]
  42e08c:	loop   0x42e02e
  42e08e:	hlt    
  42e08f:	ins    BYTE PTR es:[edi],dx
  42e090:	cmc    
  42e091:	test   BYTE PTR [edi+esi*8+0x7fbc6a2f],dh
  42e098:	inc    ebx
  42e099:	lock xchg esp,eax
  42e09b:	jns    0x42e0e0
  42e09d:	in     al,0xec
  42e09f:	jnp    0x42e09b
  42e0a1:	std    
  42e0a2:	add    BYTE PTR [eax],al
  42e0a4:	popf   
  42e0a5:	mov    eax,0x9f31bf7f
  42e0aa:	sub    al,0x4
  42e0ac:	and    dh,bl
  42e0ae:	xchg   edi,eax
  42e0af:	dec    edi
  42e0b0:	sbb    dh,ah
  42e0b2:	lahf   
  42e0b3:	out    0x21,eax
  42e0b5:	cdq    
  42e0b6:	cwde   
  42e0b7:	cli    
  42e0b8:	and    DWORD PTR [edi+ecx*1+0xc],ebx
  42e0bc:	and    bh,bl
  42e0be:	lahf   
  42e0bf:	out    0xaf,eax
  42e0c1:	call   0x1a10:0x5c19fa98
  42e0c8:	pop    es
  42e0c9:	cwde   
  42e0ca:	sub    al,0x0
  42e0cc:	retf   0xf084
  42e0cf:	xor    edx,DWORD PTR [ebx-0x6a99fc25]
  42e0d5:	es inc ecx
  42e0d7:	lock in eax,dx
  42e0d9:	sbb    BYTE PTR [edi-0xedb15f5],bh
  42e0df:	das    
  42e0e0:	mov    bl,0x5b
  42e0e2:	(bad)  
  42e0e3:	jle    0x42e13e
  42e0e5:	xchg   esp,eax
  42e0e6:	xchg   DWORD PTR [ecx+eax*2+0x44],eax
  42e0ea:	stc    
  42e0eb:	push   DWORD PTR [eax]
  42e0ed:	inc    ebp
  42e0ee:	aaa    
  42e0ef:	pop    edx
  42e0f0:	push   esp
  42e0f1:	fldcw  WORD PTR ds:0xabcc1653
  42e0f7:	ins    DWORD PTR es:[edi],dx
  42e0f8:	fst    QWORD PTR es:[esi+0x7cdc4b0a]
  42e0ff:	mov    edx,0xfffe9c0a
  42e104:	push   ss
  42e105:	in     eax,0x8e
  42e107:	clc    
  42e108:	add    BYTE PTR [eax],al
  42e10a:	sti    
  42e10b:	(bad)  [ebx-0x7697faef]
  42e111:	cli    
  42e112:	jmp    0x958d:0x4bf509c
  42e119:	test   DWORD PTR [ecx-0x39],esp
  42e11c:	add    al,BYTE PTR [edi-0xde6fd70]
  42e122:	mov    al,BYTE PTR [edx]
  42e124:	jno    0x42e167
  42e126:	ret    
  42e127:	jnp    0x42e155
  42e129:	loopne 0x42e0d5
  42e12b:	jp     0x42e14f
  42e12d:	pop    es
  42e12e:	and    BYTE PTR [ebp-0x13],al
  42e131:	cdq    
  42e132:	call   0x8f231db8
  42e137:	add    ah,BYTE PTR [ecx+0x31]
  42e13a:	pushf  
  42e13b:	push   ss
  42e13c:	fld    TBYTE PTR ds:0xe01c8da9
  42e142:	mov    dl,0x32
  42e144:	call   0xa1ae:0xe4c703b2
  42e14b:	call   0xf00e:0x8d779ae8
  42e152:	or     BYTE PTR [ebx],0xd4
  42e155:	cdq    
  42e156:	xor    ah,BYTE PTR [bp-0x3f]
  42e15a:	mov    dl,0x34
  42e15c:	push   0xffffffb2
  42e15e:	rol    esi,cl
  42e160:	hlt    
  42e161:	cmp    ah,bh
  42e163:	shr    ah,0x3
  42e166:	out    dx,eax
  42e167:	xor    eax,0x8d219b5e
  42e16c:	ror    DWORD PTR [ebx],cl
  42e16e:	add    BYTE PTR [eax],al
  42e170:	sbb    BYTE PTR [ecx+0x17dddbc],ch
  42e176:	dec    esi
  42e177:	rcr    DWORD PTR [ecx],1
  42e179:	test   eax,0x4529d1bc
  42e17e:	out    0x80,eax
  42e180:	push   edx
  42e181:	push   ss
  42e182:	shr    BYTE PTR [ebx-0x65e45f3b],cl
  42e188:	sbb    edx,DWORD PTR [edx-0x19916e95]
  42e18e:	adc    bl,0x69
  42e191:	add    ch,cl
  42e193:	xor    ah,BYTE PTR [edx]
  42e195:	push   cs
  42e196:	(bad)
  42e199:	call   0x65fa:0x87dee3ff
  42e1a0:	ficom  WORD PTR ds:0x38f93f06
  42e1a6:	(bad)  
  42e1a8:	and    al,0xdf
  42e1aa:	mov    edi,0x2e79c1c2
  42e1af:	cdq    
  42e1b0:	sahf   
  42e1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1b2:	adc    eax,0x15d151
  42e1b7:	jmp    0xdb66b29
  42e1bc:	lea    esp,[edi+esi*2-0x7b76cb57]
  42e1c3:	ret    0xc41b
  42e1c6:	or     dh,BYTE PTR [ecx+ebx*2-0x76]
  42e1ca:	(bad)  
  42e1cb:	retf   
  42e1cc:	pop    edi
  42e1cd:	sub    DWORD PTR [edx-0x55],ebx
  42e1d0:	popf   
  42e1d1:	add    dl,BYTE PTR [ebp+0x72]
  42e1d4:	add    BYTE PTR [eax],al
  42e1d6:	xor    eax,0x19e1ec0d
  42e1db:	(bad)  
  42e1dd:	jmp    0x83b75b5e
  42e1e2:	and    DWORD PTR [edi-0x14],eax
  42e1e5:	fcomp  QWORD PTR [eax+0x7cc10524]
  42e1eb:	jns    0x42e231
  42e1ed:	inc    ecx
  42e1ee:	jno    0x42e193
  42e1f0:	adc    al,bl
  42e1f2:	inc    ebx
  42e1f3:	xor    al,0x66
  42e1f5:	fld    DWORD PTR ds:0x17c70c17
  42e1fb:	inc    edi
  42e1fc:	call   0x4fe0bc65
  42e201:	inc    ecx
  42e202:	cli    
  42e203:	lods   eax,DWORD PTR ds:[esi]
  42e204:	cld    
  42e205:	es mov ebx,0x36a48cf5
  42e20b:	cmp    al,0xfb
  42e20d:	pushf  
  42e20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e20f:	call   0x83:0x89142957
  42e216:	mov    ah,0xf2
  42e218:	sbb    al,0x66
  42e21a:	jns    0x42e28c
  42e21c:	outs   dx,BYTE PTR ds:[esi]
  42e21d:	adc    eax,ebx
  42e21f:	xor    al,cl
  42e221:	push   eax
  42e222:	ret    
  42e223:	cld    
  42e224:	ud0    ebp,DWORD PTR [ecx-0x2]
  42e228:	out    0x40,eax
  42e22a:	hlt    
  42e22b:	push   0xfffffff5
  42e22d:	test   BYTE PTR [esp+edi*8],al
  42e230:	add    al,0x33
  42e232:	add    al,0x40
  42e234:	jecxz  0x42e238
  42e236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e237:	mov    edi,0xc2c7
  42e23c:	mov    al,0xff
  42e23e:	dec    edx
  42e23f:	(bad)  
  42e240:	mov    edi,DWORD PTR [edi-0x72]
  42e243:	inc    eax
  42e244:	test   BYTE PTR [esi-0x34f2a92f],dh
  42e24a:	pop    es
  42e24b:	mov    ebx,eax
  42e24d:	cli    
  42e24e:	mov    esi,0x8e778847
  42e253:	inc    eax
  42e254:	test   bh,dl
  42e256:	out    0x8b,eax
  42e258:	mov    ah,0x6
  42e25a:	lea    eax,[edi+0x48]
  42e25d:	ja     0x42e2b4
  42e25f:	sbb    al,0xbd
  42e261:	retf   0x891f
  42e264:	mov    ds:0xac5f87a2,eax
  42e269:	(bad)  
  42e26a:	mov    ebp,0xf56a4447
  42e26f:	adc    eax,0x3a903c
  42e274:	shl    edx,1
  42e276:	sub    edi,DWORD PTR [eax-0xf4]
  42e27c:	int3   
  42e27d:	ss xor edi,edi
  42e280:	sar    DWORD PTR [eax+0x6d],cl
  42e283:	and    al,0x22
  42e285:	js     0x42e2dc
  42e287:	sub    BYTE PTR [edx-0x44fee3be],bh
  42e28d:	inc    edx
  42e28e:	and    BYTE PTR [edx],bh
  42e290:	popf   
  42e291:	cdq    
  42e292:	(bad)  
  42e293:	jmp    DWORD PTR [esi]
  42e295:	in     al,0x3b
  42e297:	mov    edi,0x86a31050
  42e29c:	push   eax
  42e29d:	xchg   ecx,eax
  42e29e:	sub    ebx,0x0
  42e2a1:	add    BYTE PTR [ecx+0x32e82f6b],bh
  42e2a7:	mov    cl,0x98
  42e2a9:	cli    
  42e2aa:	push   ss
  42e2ab:	test   eax,0x1b92f180
  42e2b0:	dec    edi
  42e2b1:	(bad)  
  42e2b2:	mov    edx,0xb2f97d98
  42e2b7:	stos   DWORD PTR es:[edi],eax
  42e2b8:	jp     0x42e25f
  42e2ba:	popf   
  42e2bb:	cdq    
  42e2bc:	(bad)  
  42e2bd:	jle    0x42e2f7
  42e2bf:	lds    eax,FWORD PTR [ebx]
  42e2c1:	sti    
  42e2c2:	adc    BYTE PTR [ebp+ecx*8-0x5428df41],ah
  42e2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2ca:	ss xor eax,0x6216a667
  42e2d0:	stos   DWORD PTR es:[edi],eax
  42e2d1:	dec    esi
  42e2d2:	cwde   
  42e2d3:	jno    0x42e267
  42e2d5:	cs jb  0x42e2fb
  42e2d8:	inc    ecx
  42e2d9:	in     al,0xa6
  42e2db:	pop    eax
  42e2dc:	add    al,BYTE PTR [eax+ebx*1+0x28fffe9c]
  42e2e3:	cwde   
  42e2e4:	int3   
  42e2e5:	mov    al,bl
  42e2e7:	or     DWORD PTR [eax+0x2c4c4d44],0xfffffffb
  42e2ee:	enter  0x2993,0xe8
  42e2f2:	mov    BYTE PTR [edx],al
  42e2f4:	xchg   edx,eax
  42e2f5:	cli    
  42e2f6:	and    al,0x5f
  42e2f8:	mov    ds:0xfd476236,al
  42e2fd:	mov    BYTE PTR [eax+0x154488cb],ah
  42e303:	ins    BYTE PTR es:[edi],dx
  42e304:	sub    al,0xfb
  42e306:	add    BYTE PTR [eax],al
  42e308:	mov    BYTE PTR [ebx+0x308e926],ah
  42e30e:	jmp    0xd036d816
  42e313:	xchg   ebp,eax
  42e314:	idiv   DWORD PTR [ebx-0x55]
  42e317:	(bad)  
  42e318:	stos   DWORD PTR es:[edi],eax
  42e319:	rcl    DWORD PTR [ebx+0x1081402],0x8b
  42e320:	mov    ds:0xdd2aa8f6,eax
  42e325:	jmp    0x3001:0x32a51363
  42e32c:	mov    ebp,0x27fe187
  42e331:	psubd  mm5,QWORD PTR [ecx]
  42e334:	xchg   ebp,eax
  42e335:	ja     0x42e362
  42e337:	mov    al,ds:0x8257d62
  42e33c:	inc    edx
  42e33d:	ret    0x2e0
  42e340:	lahf   
  42e341:	xor    bh,BYTE PTR [edx+0x28f0caf0]
  42e347:	add    al,0x12
  42e349:	mov    edi,0xf6cb96dc
  42e34e:	pop    eax
  42e34f:	add    al,0x7a
  42e351:	in     al,dx
  42e352:	cdq    
  42e353:	adc    BYTE PTR [ecx+0x71a34a9a],al
  42e359:	mov    DWORD PTR [ecx+0x629a7910],ecx
  42e35f:	mov    ds:0x10798961,eax
  42e364:	push   ecx
  42e365:	call   0xc3b6:0x8951a35a
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	out    0x28,eax
  42e370:	xor    cl,al
  42e372:	sahf   
  42e373:	add    cl,bh
  42e375:	pop    es
  42e376:	lds    ebx,FWORD PTR [edx]
  42e378:	mov    ecx,0x149a9d42
  42e37d:	je     0x42e3a9
  42e37f:	mov    DWORD PTR [ebp-0x64],ebp
  42e382:	mov    ds:0x9a033d1f,eax
  42e387:	pop    ds
  42e388:	add    BYTE PTR [ebp-0x62],cl
  42e38b:	ja     0x42e3d7
  42e38d:	in     eax,0x17
  42e38f:	add    bh,bl
  42e391:	mov    ecx,0x5748002
  42e396:	xlat   BYTE PTR ds:[ebx]
  42e397:	cwde   
  42e398:	outs   dx,BYTE PTR ds:[esi]
  42e399:	(bad)  
  42e39a:	(bad)  
  42e39b:	xchg   esp,eax
  42e39c:	pop    ss
  42e39d:	jmp    0x7de2:0xa786fa9b
  42e3a4:	(bad)  
  42e3a5:	jg     0x42e378
  42e3a7:	mov    esi,DWORD PTR [ecx]
  42e3a9:	mul    BYTE PTR [edx-0x695b790a]
  42e3af:	call   0xa984:0x8c2ac855
  42e3b6:	stos   BYTE PTR es:[edi],al
  42e3b7:	fadd   DWORD PTR [esi-0x29805ac9]
  42e3bd:	dec    edi
  42e3be:	scas   eax,DWORD PTR es:[edi]
  42e3bf:	mov    esi,DWORD PTR [ecx-0xf]
  42e3c2:	or     DWORD PTR [esi],ecx
  42e3c4:	or     al,0x72
  42e3c6:	(bad)  
  42e3c8:	out    0x28,eax
  42e3ca:	ds xchg edx,edi
  42e3cd:	fs popa 
  42e3cf:	nop    DWORD PTR [edx+0x0]
  42e3d3:	add    bl,cl
  42e3d5:	out    dx,al
  42e3d6:	test   dl,al
  42e3d8:	xchg   ebx,eax
  42e3d9:	lock cli 
  42e3db:	pop    ds
  42e3dc:	imul   ecx,DWORD PTR [ebp+0x3f15dd74],0xa3719108
  42e3e6:	cld    
  42e3e7:	jle    0x42e3c3
  42e3e9:	inc    edi
  42e3ea:	jae    0x42e3cd
  42e3ec:	sbb    eax,0xf16efc37
  42e3f1:	add    ah,bh
  42e3f3:	sti    
  42e3f4:	sub    DWORD PTR [edi],edi
  42e3f6:	in     al,0x52
  42e3f8:	lods   eax,DWORD PTR ds:[esi]
  42e3f9:	fdivr  DWORD PTR [edi+0x64815da9]
  42e3ff:	inc    ecx
  42e400:	sbb    al,0x37
  42e402:	cld    
  42e403:	add    bl,bl
  42e405:	mov    ah,0xba
  42e407:	call   0x3d616f
  42e40c:	(bad)  
  42e40d:	idiv   bh
  42e40f:	push   ebp
  42e410:	xor    edi,DWORD PTR [ebx-0x11]
  42e413:	inc    DWORD PTR [ecx]
  42e415:	sbb    al,0x10
  42e417:	inc    eax
  42e418:	add    al,0x7b
  42e41a:	bnd jmp 0x42e3f3
  42e41d:	mov    dl,0xba
  42e41f:	inc    eax
  42e420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e421:	pop    esi
  42e422:	add    edi,0x60
  42e425:	pushf  
  42e426:	pusha  
  42e427:	setp   BYTE PTR [ebx-0x1a09b975]
  42e42e:	jp     0x42e3f1
  42e430:	cmc    
  42e431:	rcr    DWORD PTR [ebp-0x77],cl
  42e434:	int3   
  42e435:	outs   dx,BYTE PTR ds:[esi]
  42e436:	adc    esp,DWORD PTR [eax+0x43b50000]
  42e43c:	add    BYTE PTR [ebx+0x217402cc],al
  42e442:	aaa    
  42e443:	imul   edi,esi,0x73
  42e446:	mov    eax,0xd102f282
  42e44b:	xchg   DWORD PTR [edx],esi
  42e44d:	inc    esi
  42e44e:	je     0x42e440
  42e450:	or     esi,edi
  42e452:	ret    0x848e
  42e455:	dec    esi
  42e456:	test   BYTE PTR [ebx-0x3e67e509],al
  42e45c:	sub    al,0xc0
  42e45e:	stos   DWORD PTR es:[edi],eax
  42e45f:	sar    BYTE PTR [ecx+0x3e7a7404],1
  42e465:	and    al,0x68
  42e467:	or     BYTE PTR [eax+0x12],0xcd
  42e46b:	cmp    eax,DWORD PTR [ecx*4-0x9d67586]
  42e472:	add    eax,DWORD PTR [ebx+0x8]
  42e475:	add    eax,0x3b000334
  42e47a:	mov    bh,al
  42e47c:	add    al,0x89
  42e47e:	popf   
  42e47f:	test   eax,0x2282e6ea
  42e484:	inc    edi
  42e485:	or     al,0x16
  42e487:	push   edx
  42e488:	push   es
  42e489:	das    
  42e48a:	out    dx,eax
  42e48b:	add    eax,edx
  42e48d:	jae    0x42e43b
  42e48f:	mov    bh,0xd5
  42e491:	xor    BYTE PTR [eax-0x3b9dbf60],dl
  42e497:	push   0x0
  42e499:	je     0x42e43b
  42e49b:	sbb    al,0xbe
  42e49d:	std    
  42e49e:	add    BYTE PTR [eax],al
  42e4a0:	pop    es
  42e4a1:	add    BYTE PTR [esi+0x3ee08d4f],al
  42e4a7:	adc    al,0x9c
  42e4a9:	cdq    
  42e4aa:	(bad)  
  42e4ab:	dec    DWORD PTR ds:0x68b0a79a
  42e4b1:	and    al,0xa3
  42e4b3:	jle    0x42e476
  42e4b5:	nop
  42e4b6:	sub    bl,0xa1
  42e4b9:	fwait
  42e4ba:	(bad)  
  42e4bb:	dec    DWORD PTR [esi-0x31]
  42e4be:	jp     0x42e534
  42e4c0:	mov    eax,ds:0x14fad2c8
  42e4c5:	in     eax,0xe7
  42e4c7:	sbb    esp,DWORD PTR [edi+edi*1-0x10]
  42e4cb:	or     ah,BYTE PTR [eax]
  42e4cd:	mov    es,WORD PTR [ebx]
  42e4cf:	add    BYTE PTR [ebp-0x37dfb9e0],bl
  42e4d5:	fwait
  42e4d6:	(bad)  
  42e4d7:	lahf   
  42e4d8:	popf   
  42e4d9:	mov    WORD PTR [ebp-0x16463d9],es
  42e4df:	cmp    al,0x9d
  42e4e1:	call   0xf1:0x199afffe
  42e4e8:	popf   
  42e4e9:	fwait
  42e4ea:	jg     0x42e52d
  42e4ec:	mov    ebx,ebp
  42e4ee:	mov    ?,WORD PTR [ebp+eiz*4+0x22]
  42e4f2:	dec    eax
  42e4f3:	and    al,0x7d
  42e4f5:	es dec eax
  42e4f7:	and    al,0x75
  42e4f9:	add    bh,BYTE PTR [ecx+0xdeb67c]
  42e4ff:	jge    0x42e4b7
  42e501:	fdivrp st(4),st
  42e503:	jl     0x42e505
  42e505:	add    BYTE PTR [esi-0x4f63f722],ah
  42e50b:	lods   eax,DWORD PTR ds:[esi]
  42e50c:	inc    ecx
  42e50d:	xchg   ebx,eax
  42e50e:	and    ebx,eax
  42e510:	jmp    0xe945f39c
  42e515:	add    ebp,DWORD PTR [esi+0x2d]
  42e518:	mov    edi,0xea186e06
  42e51d:	sbb    ebx,DWORD PTR [ebp+0x2183e902]
  42e523:	aas    
  42e524:	int    0xcb
  42e526:	pop    edx
  42e527:	test   ebx,esi
  42e529:	rcl    DWORD PTR [eax+0x5e7ce942],cl
  42e52f:	fsubp  st(4),st
  42e531:	xchg   dl,cl
  42e533:	test   ecx,esp
  42e535:	xchg   DWORD PTR ds:0x6d03e903,eax
  42e53b:	ja     0x42e569
  42e53d:	call   0xcf1417ec
  42e542:	aas    
  42e543:	test   cl,dl
  42e545:	xchg   edx,ebp
  42e547:	wbinvd 
  42e549:	xchg   ebx,eax
  42e54a:	cs fdivrp st(4),st
  42e54d:	xchg   edx,eax
  42e54e:	mov    cl,0x62
  42e550:	(bad)  
  42e551:	inc    ebx
  42e552:	popf   
  42e553:	retf   
  42e554:	xor    al,0xe8
  42e556:	scas   al,BYTE PTR es:[edi]
  42e557:	cmc    
  42e558:	mov    DWORD PTR fs:[edx-0x116d177b],eax
  42e55f:	fdivrp st(4),st
  42e561:	xchg   edx,eax
  42e562:	mov    DWORD PTR [esi-0x6662bc08],ecx
  42e568:	push   cs
  42e569:	int    0x0
  42e56b:	add    dh,ah
  42e56d:	(bad)  
  42e56f:	jle    0x42e565
  42e571:	loop   0x42e5e0
  42e573:	ror    BYTE PTR [esi-0xe],1
  42e576:	jmp    FWORD PTR [eax]
  42e578:	mov    eax,ds:0xaa6e020e
  42e57d:	ficom  WORD PTR [ebx]
  42e57f:	div    WORD PTR [ebx]
  42e582:	jmpw   0xe816
  42e586:	in     ax,dx
  42e588:	movups XMMWORD PTR [ecx+ecx*1],xmm4
  42e58c:	push   cs
  42e58d:	out    dx,al
  42e58e:	jg     0x42e568
  42e590:	pop    esi
  42e591:	add    al,BYTE PTR [edi+0x73ac2521]
  42e597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e598:	das    
  42e599:	adc    esp,DWORD PTR [eax]
  42e59b:	(bad)
  42e5a0:	push   ss
  42e5a1:	stos   DWORD PTR es:[edi],eax
  42e5a2:	cld    
  42e5a3:	push   ds
  42e5a4:	jno    0x89e28369
  42e5aa:	jae    0x42e571
  42e5ac:	div    BYTE PTR [ebp+0x43]
  42e5af:	int    0xc2
  42e5b1:	xor    al,0x50
  42e5b3:	adc    DWORD PTR [eax*8-0x766f0906],eax
  42e5ba:	shr    BYTE PTR [edx-0x6e],cl
  42e5bd:	fimul  WORD PTR [edi]
  42e5bf:	jmp    0xfbe2b3fd
  42e5c4:	pop    esi
  42e5c5:	add    dh,BYTE PTR [edi+ebp*8+0xd]
  42e5c9:	adc    DWORD PTR [ecx+edi*8],esp
  42e5cc:	or     eax,0x457eb3
  42e5d1:	add    BYTE PTR [ebp+0x6134fff8],al
  42e5d7:	add    eax,0x879d0d7c
  42e5dc:	jae    0x42e5d6
  42e5de:	sub    eax,0xdf52410
  42e5e3:	mov    dl,0xe6
  42e5e5:	ror    BYTE PTR [ecx-0x77],1
  42e5e8:	cmp    BYTE PTR ds:0xe373f475,dl
  42e5ee:	or     eax,0x74002410
  42e5f3:	jae    0x42e608
  42e5f5:	mov    al,ds:0x39004076
  42e5fa:	push   eax
  42e5fb:	pushf  
  42e5fc:	push   es
  42e5fd:	je     0x42e664
  42e5ff:	jg     0x42e677
  42e601:	and    al,0x30
  42e603:	jae    0x42e673
  42e605:	or     dl,bl
  42e607:	jmp    0x129a:0x8bd30c23
  42e60e:	hlt    
  42e60f:	call   DWORD PTR [esi+0x5e]
  42e612:	xchg   esp,eax
  42e613:	call   DWORD PTR [edx-0x75]
  42e616:	pop    ecx
  42e617:	sar    DWORD PTR [ecx-0x7d360bf8],cl
  42e61d:	icebp  
  42e61e:	mov    bl,0xe8
  42e620:	add    ebp,eax
  42e622:	xchg   edx,eax
  42e623:	push   ebx
  42e624:	sti    
  42e625:	inc    DWORD PTR [edi+0x770003d8]
  42e62b:	fadd   DWORD PTR [edi]
  42e62d:	add    BYTE PTR [edx],dh
  42e62f:	mov    edi,0xbecc4181
  42e634:	adc    DWORD PTR [eax+eax*1+0x0],0x6b4dfbd8
  42e63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e63d:	xchg   esi,eax
  42e63e:	dec    ebp
  42e63f:	mov    ecx,ebp
  42e641:	push   es
  42e642:	or     BYTE PTR ds:[edi-0x42],cl
  42e646:	adc    cl,BYTE PTR [ebp+0xe82fa4b]
  42e64c:	mov    bh,0x50
  42e64e:	stc    
  42e64f:	ror    BYTE PTR [edi+0x110b6c4f],0xc6
  42e656:	pop    ss
  42e657:	push   edx
  42e658:	ins    BYTE PTR es:[edi],dx
  42e659:	jne    0x42e633
  42e65b:	std    
  42e65c:	push   ebx
  42e65d:	data16 cld 
  42e65f:	xor    DWORD PTR [ebx+edi*2],esi
  42e662:	mov    edx,0x45727374
  42e667:	or     bh,ch
  42e669:	repnz pop es
  42e66b:	imul   ebx,DWORD PTR [ebp+0x7552e66c],0xffffffbe
  42e672:	test   eax,0x2ddc5afc
  42e677:	mov    esi,0x87319999
  42e67c:	cmp    DWORD PTR [eax],ebx
  42e67e:	mov    ds:0x35eeeef7,eax
  42e683:	push   ebx
  42e684:	(bad)  
  42e685:	call   0xe7e6:0xeba90016
  42e68c:	popf   
  42e68d:	inc    eax
  42e68e:	mov    bh,dl
  42e690:	push   ss
  42e691:	inc    ecx
  42e692:	sub    ah,0x90
  42e695:	cwde   
  42e696:	ds out 0x60,eax
  42e699:	xor    esi,ecx
  42e69b:	jmp    0x42e69d
  42e69d:	add    BYTE PTR [eax],cl
  42e69f:	int3   
  42e6a0:	cmp    BYTE PTR [edi-0xee36a77],0xfa
  42e6a7:	test   DWORD PTR [edx+0x2e995d0f],ecx
  42e6ad:	sti    
  42e6ae:	nop
  42e6af:	cdq    
  42e6b0:	in     eax,dx
  42e6b1:	aas    
  42e6b2:	popf   
  42e6b3:	and    dl,dl
  42e6b5:	stmxcsr DWORD PTR [ecx-0x2]
  42e6b9:	mov    dh,0x25
  42e6bb:	test   al,0xfe
  42e6bd:	jmp    FWORD PTR [esi-0x74]
  42e6c0:	aam    0xfb
  42e6c2:	addps  xmm7,xmm6
  42e6c5:	cli    
  42e6c6:	rcr    DWORD PTR [ebx-0x3],cl
  42e6c9:	add    BYTE PTR [ebp-0x4af66a67],bl
  42e6cf:	mov    bh,0xfa
  42e6d2:	mov    ds:0x99348ac7,al
  42e6d7:	(bad)  
  42e6d8:	add    BYTE PTR ds:[edx+0x11c2c69a],dl
  42e6df:	dec    edx
  42e6e0:	cmp    al,ch
  42e6e2:	mul    BYTE PTR [ecx-0x2]
  42e6e5:	jmp    FWORD PTR [esi-0x28d056fe]
  42e6eb:	fistp  QWORD PTR ds:0xa6e0817b
  42e6f1:	or     BYTE PTR [ebp-0x7edfa429],bl
  42e6f7:	mov    fs,WORD PTR [edi-0x60]
  42e6fa:	cmp    al,BYTE PTR [edi]
  42e6fc:	jmp    0x8e78c104
  42e701:	xor    eax,DWORD PTR [eax]
  42e703:	add    BYTE PTR [esi+0x18],al
  42e706:	ins    DWORD PTR es:[edi],dx
  42e707:	hlt    
  42e708:	jp     0x42e70c
  42e70a:	mov    ecx,0xf802898e
  42e70f:	inc    ebx
  42e710:	popf   
  42e711:	in     al,dx
  42e712:	out    0x1b,eax
  42e714:	pushf  
  42e715:	not    BYTE PTR [edx]
  42e717:	in     eax,dx
  42e718:	add    bh,bl
  42e71a:	dec    esi
  42e71b:	xchg   ecx,eax
  42e71c:	pop    ss
  42e71d:	mov    WORD PTR [ebx-0x44ba2de1],fs
  42e723:	sti    
  42e724:	mov    bl,0x42
  42e726:	test   al,0x9c
  42e728:	icebp  
  42e729:	add    ch,cl
  42e72b:	add    ecx,DWORD PTR [edi-0x2b]
  42e72e:	imul   ecx,DWORD PTR [ecx+0x21],0xffffffd3
  42e732:	and    dl,0x9a
  42e735:	and    al,0xa
  42e737:	pushf  
  42e738:	mov    bl,0x6c
  42e73a:	add    ecx,DWORD PTR [edi-0x749547df]
  42e740:	mov    DWORD PTR [ecx-0x7e5f9100],0x42b08e9
  42e74a:	jmp    0x39592252
  42e74f:	xor    ebx,DWORD PTR [eax]
  42e751:	clc    
  42e752:	sub    al,0x83
  42e754:	fiadd  DWORD PTR [ecx-0x7f500440]
  42e75a:	ror    DWORD PTR [eax+0x7adc0052],0x5c
  42e761:	sar    bh,cl
  42e763:	inc    eax
  42e764:	sbb    DWORD PTR [ebp+0xe93e],ebp
  42e76a:	sbb    eax,0x23a47b86
  42e76f:	jl     0x42e7c0
  42e771:	xchg   ecx,eax
  42e772:	ja     0x42e7ca
  42e774:	cli    
  42e775:	xchg   esi,eax
  42e776:	adc    eax,0x5e740ac1
  42e77b:	aaa    
  42e77c:	mov    edi,0xc03051fc
  42e781:	pop    es
  42e782:	enter  0x7b86,0x74
  42e786:	adc    edi,DWORD PTR [eax+edi*4+0x7f]
  42e78a:	mov    eax,ds:0x25740002
  42e78f:	mov    esi,esi
  42e791:	pop    esi
  42e792:	sbb    ecx,DWORD PTR [ecx-0x89e56e9]
  42e798:	cmc    
  42e799:	pop    esp
  42e79a:	and    eax,0x2346fcfd
  42e79f:	sar    edx,1
  42e7a1:	aam    0xbe
  42e7a3:	adc    DWORD PTR [eax-0x17],eax
  42e7a6:	sbb    eax,0x2b2c7b86
  42e7ab:	jl     0x42e7fc
  42e7ad:	es cmc 
  42e7af:	add    BYTE PTR [esi],cl
  42e7b1:	test   eax,0x99448b9e
  42e7b6:	push   es
  42e7b7:	sbb    eax,0x852b0ce7
  42e7bc:	mov    edi,0x8cd5847d
  42e7c1:	je     0x42e7e9
  42e7c3:	mov    ecx,0x29ee9a8
  42e7c8:	call   0xfabeb72a
  42e7cd:	jb     0x42e7cf
  42e7cf:	add    dl,cl
  42e7d1:	adc    BYTE PTR [edi],cl
  42e7d3:	sub    DWORD PTR [ecx-0x61163847],esp
  42e7d9:	add    cl,BYTE PTR [edi-0x32]
  42e7dc:	jb     0x42e85a
  42e7de:	lods   eax,DWORD PTR ds:[esi]
  42e7df:	add    bh,al
  42e7e1:	push   es
  42e7e2:	not    esi
  42e7e4:	stc    
  42e7e5:	or     DWORD PTR [edx],esi
  42e7e7:	cmp    esi,DWORD PTR [ebx]
  42e7e9:	sbb    BYTE PTR [eax],dh
  42e7eb:	mov    eax,ecx
  42e7ed:	push   ss
  42e7ee:	lea    eax,[esp+eax*4+0x2]
  42e7f2:	mov    DWORD PTR [ebp-0x7c],eax
  42e7f5:	lea    esi,[ebx+0x70]
  42e7f8:	stc    
  42e7f9:	xchg   DWORD PTR [esi-0x3],esi
  42e7fc:	sub    ecx,DWORD PTR [esi+0x1456a4a]
  42e802:	inc    esp
  42e803:	test   BYTE PTR [edi+edi*8-0x615b17bd],ah
  42e80a:	xlat   BYTE PTR ds:[ebx]
  42e80b:	(bad)
  42e80e:	dec    ecx
  42e80f:	call   DWORD PTR [ecx+0x3443ac92]
  42e815:	(bad)  
  42e816:	sar    BYTE PTR [ebx],1
  42e818:	jae    0x42e834
  42e81a:	rcr    BYTE PTR [edi+0x6b],cl
  42e81d:	pop    ss
  42e81e:	ins    BYTE PTR es:[edi],dx
  42e81f:	call   0x3d6936
  42e824:	pop    es
  42e825:	inc    esp
  42e826:	pop    eax
  42e827:	pop    ebx
  42e828:	ja     0x42e871
  42e82a:	outs   dx,BYTE PTR ds:[esi]
  42e82b:	leave  
  42e82c:	(bad)  
  42e82d:	or     al,BYTE PTR [eax]
  42e82f:	push   ebp
  42e830:	outs   dx,DWORD PTR ds:[esi]
  42e831:	mov    ds:0x534f,al
  42e836:	xor    edx,DWORD PTR [ebx-0x2f]
  42e839:	push   ebx
  42e83a:	daa    
  42e83b:	sbb    al,0xcd
  42e83d:	rol    DWORD PTR [esi],0x4
  42e840:	cmp    ecx,0x37
  42e843:	pushf  
  42e844:	and    dh,dl
  42e846:	retf   
  42e847:	mov    cs,WORD PTR [ecx+0x53]
  42e84a:	sbb    al,0xc3
  42e84c:	mov    ecx,0x8832c442
  42e851:	inc    ebp
  42e852:	mov    ebx,0xcbd6109b
  42e857:	mov    ?,WORD PTR [edx]
  42e859:	pop    ebp
  42e85a:	popf   
  42e85b:	pop    eax
  42e85c:	adc    DWORD PTR [eax],ecx
  42e85e:	xlat   BYTE PTR ds:[ebx]
  42e85f:	lods   al,BYTE PTR ds:[esi]
  42e860:	adc    DWORD PTR [esi+ecx*8],eax
  42e863:	test   eax,0xa9cffe97
  42e868:	ds pop ebx
  42e86a:	out    0xa2,al
  42e86c:	mov    edi,0x7dbd2654
  42e871:	jmp    0x42e8c0
  42e873:	imul   edi,esi,0x3537ceff
  42e879:	popfw  
  42e87b:	out    0x81,al
  42e87d:	das    
  42e87e:	pop    edx
  42e87f:	nop
  42e880:	mov    ecx,DWORD PTR [edi-0x3b]
  42e883:	dec    esp
  42e884:	neg    BYTE PTR ds:0xe7b2914a
  42e88a:	inc    eax
  42e88b:	clc    
  42e88c:	jns    0x42e902
  42e88e:	adc    eax,0x32ff5631
  42e893:	imul   edx,DWORD PTR [esi-0x741f903f],0x4600002d
  42e89d:	cwde   
  42e89e:	std    
  42e89f:	call   FWORD PTR [ebp-0x327b8617]
  42e8a5:	enter  0xfa8b,0x6d
  42e8a9:	out    dx,al
  42e8aa:	inc    ecx
  42e8ab:	cwde   
  42e8ac:	ins    DWORD PTR es:[edi],dx
  42e8ad:	mov    al,ds:0x5c75148b
  42e8b2:	add    BYTE PTR ds:[eax],bl
  42e8b5:	sub    DWORD PTR [edx],edx
  42e8b7:	aas    
  42e8b8:	jne    0x42e8cf
  42e8ba:	(bad)  
  42e8bb:	call   FWORD PTR [ebp-0x50380de8]
  42e8c1:	test   eax,0x5588cfe
  42e8c6:	das    
  42e8c7:	pushfw 
  42e8c9:	xchg   ebx,eax
  42e8ca:	dec    BYTE PTR [eax+ebx*2+0x24532ed1]
  42e8d1:	out    dx,al
  42e8d2:	mov    bh,dl
  42e8d4:	mov    BYTE PTR [edx],al
  42e8d6:	pop    ecx
  42e8d7:	hlt    
  42e8d8:	push   0x2
  42e8da:	les    ebp,FWORD PTR fs:[ecx]
  42e8dd:	adc    DWORD PTR [ecx+eax*4-0x36],esp
  42e8e1:	jge    0x42e8ac
  42e8e3:	mov    esp,edx
  42e8e5:	(bad)  
  42e8e6:	cmp    ecx,DWORD PTR [eax-0x745ca57e]
  42e8ec:	xchg   DWORD PTR [edx-0x1a],ebp
  42e8ef:	aad    0x3a
  42e8f1:	xchg   DWORD PTR [eax-0x5a8358f0],ebp
  42e8f7:	test   BYTE PTR [ebx+0x8],dh
  42e8fa:	pop    ss
  42e8fb:	arpl   WORD PTR [eax+0x2a3142],si
  42e901:	add    dl,dh
  42e903:	dec    ebx
  42e904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e905:	push   esp
  42e906:	popf   
  42e907:	imul   edi,DWORD PTR [ecx+0x7f],0xc5978a5d
  42e90e:	cmp    BYTE PTR [ebx],dl
  42e910:	int3   
  42e911:	add    ebx,DWORD PTR [ebp-0xf011783]
  42e917:	mov    DWORD PTR [edi],esi
  42e919:	test   DWORD PTR [eax+0x3],ecx
  42e91c:	pop    edx
  42e91d:	add    al,0x9d
  42e91f:	inc    ebx
  42e920:	inc    edi
  42e921:	hlt    
  42e922:	mov    ds:0x9a9c2753,eax
  42e927:	inc    ebx
  42e928:	inc    esi
  42e929:	cld    
  42e92a:	mov    ds:0x1a312540,eax
  42e92f:	outs   dx,DWORD PTR ds:[esi]
  42e930:	xchg   ebp,eax
  42e931:	jle    0x42e905
  42e933:	mov    ebp,ebx
  42e935:	fwait
  42e936:	out    0x7d,eax
  42e938:	and    DWORD PTR [ebx+0x46b6c7a9],ecx
  42e93e:	dec    ebp
  42e93f:	imul   cl
  42e941:	(bad)  
  42e942:	sbb    ch,BYTE PTR [esp+eiz*8+0x4]
  42e946:	popf   
  42e947:	add    bl,BYTE PTR [ebx-0xeffddce]
  42e94d:	sbb    eax,0x61ffdb9b
  42e952:	adc    ch,BYTE PTR [ebp-0x5c]
  42e955:	bound  esi,QWORD PTR [edx+0x6]
  42e958:	call   0xfabc00f1
  42e95d:	jb     0x42e8ec
  42e95f:	or     cl,BYTE PTR [ecx+0x46859d2f]
  42e965:	loope  0x42e967
  42e967:	add    BYTE PTR [esi],dh
  42e969:	cwde   
  42e96a:	cli    
  42e96b:	(bad)  
  42e96c:	pop    ss
  42e96d:	mov    al,BYTE PTR [ecx-0xf]
  42e970:	xchg   DWORD PTR [eax+0x52fbe546],esi
  42e976:	rol    bl,0x76
  42e979:	inc    edx
  42e97a:	loopne 0x42e96d
  42e97c:	(bad)  
  42e97d:	js     0x42e97e
  42e97f:	call   0xe3130722
  42e984:	adc    ebx,esp
  42e986:	mov    BYTE PTR [edi],dh
  42e988:	push   ebp
  42e989:	or     BYTE PTR [ebx-0x2f7baece],dh
  42e98f:	test   al,0x20
  42e991:	add    eax,0x6261991f
  42e996:	pop    es
  42e997:	loop   0x42e982
  42e999:	loop   0x42e923
  42e99b:	mov    edi,0xb2b3082e
  42e9a0:	sub    BYTE PTR [eax+edx*8+0x1f053828],al
  42e9a7:	cmp    ecx,ebx
  42e9a9:	popa   
  42e9aa:	pop    es
  42e9ab:	repnz push ecx
  42e9ad:	jecxz  0x42e937
  42e9af:	xchg   edi,eax
  42e9b0:	or     BYTE PTR [eax],cl
  42e9b2:	mov    bl,0xa2
  42e9b4:	or     al,BYTE PTR [eax+edx*8+0x1f051028]
  42e9bb:	cmp    ecx,esp
  42e9bd:	popa   
  42e9be:	pop    es
  42e9bf:	repnz sub ebx,esp
  42e9c2:	mov    BYTE PTR [edi-0x5d4cf836],bh
  42e9c8:	int3   
  42e9c9:	adc    eax,0x0
  42e9cc:	add    BYTE PTR [eax],al
  42e9ce:	jne    0x42e96f
  42e9d0:	add    ah,BYTE PTR [ebx]
  42e9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9d3:	inc    esi
  42e9d4:	fisttp WORD PTR [eax]
  42e9d6:	mov    edi,0xa8960b5
  42e9db:	jae    0x42e9e2
  42e9dd:	mov    bh,0x6f
  42e9df:	outs   dx,BYTE PTR ds:[esi]
  42e9e0:	adc    ecx,0x23029bf5
  42e9e6:	push   esp
  42e9e7:	inc    eax
  42e9e8:	fisttp WORD PTR [eax]
  42e9ea:	jg     0x42e99d
  42e9ec:	pusha  
  42e9ed:	mov    DWORD PTR [edx-0x3048fa92],ebp
  42e9f3:	ins    BYTE PTR es:[edi],dx
  42e9f4:	adc    ecx,0x23029d45
  42e9fa:	adc    al,0x40
  42e9fc:	fisttp WORD PTR [eax]
  42e9fe:	outs   dx,DWORD PTR ds:[esi]
  42e9ff:	mov    cl,0x60
  42ea01:	mov    DWORD PTR [edx+0x7fb7056c],ebp
  42ea07:	push   0xffffff81
  42ea09:	pop    ebp
  42ea0a:	jo     0x42ea0b
  42ea0c:	iret   
  42ea0d:	shr    DWORD PTR [esi],0x7f
  42ea10:	sbb    eax,edx
  42ea12:	cmc    
  42ea13:	lahf   
  42ea14:	add    cl,BYTE PTR [ebx]
  42ea16:	adc    eax,0x60568921
  42ea1b:	std    
  42ea1c:	shl    DWORD PTR [ebx+edx*4-0x3],1
  42ea20:	jnp    0x42ea32
  42ea22:	dec    esi
  42ea23:	jg     0x42ea7c
  42ea25:	mov    esi,DWORD PTR [edi-0x6b]
  42ea28:	mov    ds:0xd597ff8b,eax
  42ea2d:	(bad)  
  42ea2e:	arpl   WORD PTR [ecx+0x7581],cx
  42ea34:	in     al,0xf8
  42ea36:	add    BYTE PTR [ebx-0x2d1d83c1],cl
  42ea3c:	ret    0xf589
  42ea3f:	mov    DWORD PTR [edx],edi
  42ea41:	jl     0x42e9c4
  42ea43:	dec    ebx
  42ea44:	int3   
  42ea45:	xchg   edi,eax
  42ea46:	mov    ebp,0x89149dfe
  42ea4b:	mov    BYTE PTR [ebx+0x41],bl
  42ea4e:	jnp    0x42eac4
  42ea50:	xchg   ebp,eax
  42ea51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea52:	jnp    0x42ea15
  42ea54:	arpl   WORD PTR [eax+0x69a9be21],sp
  42ea5a:	das    
  42ea5b:	data16 mov dl,0x6c
  42ea5e:	adc    BYTE PTR [edx+ebp*4],dl
  42ea61:	jle    0x42ea51
  42ea63:	push   cs
  42ea64:	pop    ebp
  42ea65:	imul   edi,DWORD PTR [ebx+0x41],0x746e0ad
  42ea6c:	pushf  
  42ea6d:	imul   edi,esi,0xfc0dd986
  42ea73:	mov    BYTE PTR ds:0x9dfffd6d,dl
  42ea79:	loopne 0x42eabb
  42ea7b:	adc    bl,bh
  42ea7d:	loopne 0x42eab1
  42ea7f:	and    al,0x99
  42ea81:	repnz popw es
  42ea84:	pushf  
  42ea85:	imul   edi,esi,0x2079e386
  42ea8b:	mov    DWORD PTR ds:0x9dfffd79,esp
  42ea91:	test   BYTE PTR [eax],dl
  42ea93:	adc    al,0x42
  42ea95:	push   esi
  42ea96:	jmp    0x2f69:0xdd00000d
  42ea9d:	sti    
  42ea9e:	mov    BYTE PTR [ecx],al
  42eaa0:	lock aas 
  42eaa2:	popf   
  42eaa3:	out    dx,al
  42eaa4:	mov    esi,0xd3b88373
  42eaa9:	mov    edi,0xfde9416d
  42eaae:	adc    ch,BYTE PTR [ecx+0x2f]
  42eab1:	cmp    BYTE PTR [ecx+0xd],ah
  42eab4:	in     al,0x73
  42eab6:	xchg   ebp,eax
  42eab7:	cmp    al,0xea
  42eab9:	cmp    edx,DWORD PTR [ecx-0x64190157]
  42eabf:	sub    al,0xea
  42eac1:	fisttp DWORD PTR [esi+0x1a03a902]
  42eac7:	inc    ebx
  42eac8:	mov    ecx,0xbc02a6c5
  42eacd:	jl     0x42ea95
  42eacf:	jle    0x42eacd
  42ead1:	out    0x5b,al
  42ead3:	aam    0x99
  42ead5:	jl     0x42ea87
  42ead7:	out    0xf9,eax
  42ead9:	xchg   DWORD PTR [esi+edx*1],ebp
  42eadc:	pop    esi
  42eadd:	stos   DWORD PTR es:[edi],eax
  42eade:	sbb    edi,DWORD PTR [ecx-0x17]
  42eae1:	in     eax,dx
  42eae2:	call   0xf8c4:0x1a04290f
  42eae9:	jp     0x42eb0d
  42eaeb:	or     ebp,eax
  42eaed:	add    ebx,DWORD PTR [ebp-0x657b6df7]
  42eaf3:	add    ebp,ecx
  42eaf5:	add    eax,DWORD PTR [esi-0x16832b0f]
  42eafb:	jbe    0x42eb5c
  42eafd:	inc    ecx
  42eafe:	add    BYTE PTR [eax],al
  42eb00:	jne    0x42eb7c
  42eb02:	shr    edi,cl
  42eb04:	cwde   
  42eb05:	ret    0x78e8
  42eb08:	fldcw  WORD PTR [edx+0x38]
  42eb0b:	xchg   ecx,edx
  42eb0d:	jbe    0x42eaa0
  42eb0f:	icebp  
  42eb10:	out    dx,al
  42eb11:	push   cs
  42eb12:	sub    DWORD PTR [eax+eiz*1],eax
  42eb15:	inc    ebx
  42eb16:	icebp  
  42eb17:	jg     0x42eb6d
  42eb19:	add    ebp,ecx
  42eb1b:	add    edi,DWORD PTR [edi+0x308bf385]
  42eb21:	out    dx,eax
  42eb22:	retf   
  42eb23:	jp     0x42ead1
  42eb25:	adc    cl,BYTE PTR [esi]
  42eb27:	inc    esi
  42eb28:	and    al,BYTE PTR [ebx]
  42eb2a:	jmp    0xecdbad32
  42eb2f:	add    al,0x9d
  42eb31:	add    ch,al
  42eb33:	or     ch,dh
  42eb35:	add    esp,DWORD PTR [edi+edx*4+0x538f79d]
  42eb3c:	pop    eax
  42eb3d:	outs   dx,BYTE PTR ds:[esi]
  42eb3e:	inc    DWORD PTR [ecx-0x55]
  42eb41:	or     eax,0xf916a4b3
  42eb46:	div    esp
  42eb48:	fwait
  42eb49:	push   ss
  42eb4a:	je     0x42eb40
  42eb4c:	xchg   esi,eax
  42eb4d:	retf   0xf873
  42eb50:	xchg   esi,eax
  42eb51:	retf   0xc973
  42eb54:	pop    ds
  42eb55:	bound  eax,QWORD PTR [ecx]
  42eb57:	jge    0x42eb39
  42eb59:	shl    DWORD PTR [ebx-0x1e],0x76
  42eb5d:	out    dx,eax
  42eb5e:	das    
  42eb5f:	add    dl,dh
  42eb61:	mov    bh,BYTE PTR [ecx+eax*1+0x0]
  42eb65:	add    BYTE PTR [esi],al
  42eb67:	and    al,0x7f
  42eb69:	shr    DWORD PTR [eax-0x52cee60b],1
  42eb6f:	adc    al,0x48
  42eb71:	pop    ebp
  42eb72:	xchg   esi,eax
  42eb73:	shl    DWORD PTR [edx+esi*8+0x9],0xd7
  42eb78:	repz jo 0x42eb10
  42eb7b:	jb     0x42eb63
  42eb7d:	(bad)  
  42eb7f:	(bad)  
  42eb80:	repz pusha 
  42eb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb83:	push   0xffffffe6
  42eb85:	loop   0x42eb70
  42eb87:	(bad)  
  42eb88:	repz xchg edx,eax
  42eb8a:	pusha  
  42eb8b:	mov    bh,BYTE PTR [ecx+ebx*4-0x27]
  42eb8f:	(bad)  
  42eb90:	jmp    0x42ebf6
  42eb92:	(bad)  [edx+0x4f]
  42eb95:	mov    cs,WORD PTR [ebp+0x25]
  42eb98:	adc    al,0x29
  42eb9a:	cdq    
  42eb9b:	jg     0x42eb5c
  42eb9d:	hlt    
  42eb9e:	jo     0x42eb80
  42eba0:	out    dx,eax
  42eba1:	jbe    0x42eb30
  42eba3:	jbe    0x42eb9f
  42eba5:	aam    0x22
  42eba7:	or     BYTE PTR [eax-0x17],al
  42ebaa:	sar    DWORD PTR [ecx-0x6],0xe9
  42ebae:	pop    esi
  42ebaf:	out    dx,al
  42ebb0:	pop    ss
  42ebb1:	ret    
  42ebb2:	pushf  
  42ebb3:	xchg   DWORD PTR [ecx+eax*2-0x32],eax
  42ebb7:	jge    0x42ec2d
  42ebb9:	add    BYTE PTR [eax-0x80],bl
  42ebbc:	adc    ebx,DWORD PTR [eax-0x30]
  42ebbf:	(bad)  
  42ebc0:	dec    DWORD PTR [edi-0x22]
  42ebc3:	add    al,0xf7
  42ebc5:	adc    eax,0x3a6928
  42ebca:	add    BYTE PTR [eax],al
  42ebcc:	outs   dx,DWORD PTR ds:[esi]
  42ebcd:	ret    0x2bf3
  42ebd0:	add    DWORD PTR [ecx+0x5270c62],edx
  42ebd6:	add    BYTE PTR [eax+0x3f],dl
  42ebd9:	ret    0x2bef
  42ebdc:	icebp  
  42ebdd:	pushf  
  42ebde:	dec    edx
  42ebdf:	push   DWORD PTR [ecx]
  42ebe1:	xchg   ecx,eax
  42ebe2:	cmc    
  42ebe3:	jne    0x42eb81
  42ebe5:	sbb    eax,DWORD PTR [eax]
  42ebe7:	push   DWORD PTR [ecx]
  42ebe9:	xor    ebp,0x3a725015
  42ebef:	add    bl,bl
  42ebf1:	and    BYTE PTR [ebx-0x37],dl
  42ebf4:	inc    edi
  42ebf5:	sub    BYTE PTR [ebx+0x43f9c5ec],al
  42ebfb:	or     al,0xa9
  42ebfd:	jecxz  0x42ebf9
  42ebff:	inc    DWORD PTR [ebx+esi*1+0x1cb9744f]
  42ec06:	sti    
  42ec07:	pop    eax
  42ec08:	lahf   
  42ec09:	inc    ebx
  42ec0a:	outs   dx,BYTE PTR ds:[esi]
  42ec0b:	cmp    eax,0x306e454f
  42ec10:	imul   ebp,DWORD PTR [edx],0x8440001
  42ec16:	and    BYTE PTR [ebx],ch
  42ec18:	cmc    
  42ec19:	adc    cl,BYTE PTR [ebx]
  42ec1b:	sub    esi,ebp
  42ec1d:	ins    DWORD PTR es:[edi],dx
  42ec1e:	sub    DWORD PTR [eax-0x38fffbbc],0xffffff81
  42ec25:	mov    al,BYTE PTR [edi]
  42ec27:	add    dh,BYTE PTR [esp+eax*1]
  42ec2a:	sub    bl,bl
  42ec2c:	iret   
  42ec2d:	dec    edi
  42ec2e:	mov    ebp,0x78000045
  42ec33:	js     0x42ec31
  42ec35:	call   FWORD PTR [ebp-0x1d116897]
  42ec3b:	sahf   
  42ec3c:	cmp    dh,0x9c
  42ec3f:	imul   edi,esi,0x3b2107e6
  42ec45:	cld    
  42ec46:	inc    esp
  42ec47:	push   0xfffffffe
  42ec49:	push   esi
  42ec4b:	pop    ecx
  42ec4c:	mov    ebx,0x3c7e144
  42ec51:	add    BYTE PTR [ebp+0x58c2fd14],bl
  42ec57:	or     eax,0x69caff61
  42ec5c:	dec    edi
  42ec5d:	add    dl,al
  42ec5f:	push   esi
  42ec60:	repnz push cs
  42ec62:	pop    ebp
  42ec63:	imul   esi,DWORD PTR [edi-0x9],0x38f6a726
  42ec6a:	and    esi,esi
  42ec6c:	std    
  42ec6d:	call   FWORD PTR [ebp+0x2b873bd6]
  42ec73:	sar    esi,1
  42ec75:	call   FWORD PTR [ebp+0x100c3314]
  42ec7b:	pop    es
  42ec7c:	jns    0x42ec48
  42ec7e:	mov    dh,0xef
  42ec80:	sbb    al,BYTE PTR [ecx]
  42ec82:	popf   
  42ec83:	imul   edi,DWORD PTR [ebp-0x8],0xfffe6c85
  42ec8a:	bnd jbe 0x42ed07
  42ec8d:	(bad)  
  42ec8e:	call   0xee250501
  42ec93:	cwde   
  42ec94:	jmp    0xa942ecf4
  42ec99:	sub    DWORD PTR [eax+ebp*4],eax
  42ec9c:	xchg   ebp,eax
  42ec9d:	or     eax,0xf25d2ee7
  42eca2:	jl     0x42ed0b
  42eca4:	pushf  
  42eca5:	imul   edi,esi,0xff051b88
  42ecab:	call   FWORD PTR [ebp-0x6394831e]
  42ecb1:	add    ch,cl
  42ecb3:	add    esp,DWORD PTR [edx]
  42ecb5:	mov    ebp,0x8bab985c
  42ecba:	stos   DWORD PTR es:[edi],eax
  42ecbb:	sti    
  42ecbc:	and    eax,ebp
  42ecbe:	fdivr  QWORD PTR [edx+0x14]
  42ecc1:	jmp    0x1f7a:0x899d03e7
  42ecc8:	pushf  
  42ecc9:	add    ch,cl
  42eccb:	jp     0x42ece9
  42eccd:	out    0xe7,al
  42eccf:	add    ebx,DWORD PTR [ebp+0x77f7ab8b]
  42ecd5:	fld    TBYTE PTR [edi]
  42ecd7:	rcr    DWORD PTR [edx-0x498743fe],0xd0
  42ecde:	mov    ch,0x2d
  42ece0:	outs   dx,BYTE PTR ds:[esi]
  42ece1:	mov    eax,DWORD PTR [ebx+0x677223ef]
  42ece7:	test   BYTE PTR [ebp+0x3103e904],bl
  42eced:	adc    ch,BYTE PTR [eax-0x7c]
  42ecf0:	lahf   
  42ecf1:	add    al,0xe9
  42ecf3:	add    edx,DWORD PTR [ecx]
  42ecf5:	or     ebp,DWORD PTR [eax-0x7d]
  42ecf8:	sahf   
  42ecf9:	add    cl,ch
  42ecfb:	add    eax,DWORD PTR [eax]
  42ecfd:	add    BYTE PTR [eax],dl
  42ecff:	iret   
  42ed00:	ds push es
  42ed02:	xchg   al,dh
  42ed04:	lock adc BYTE PTR [ecx+0x72c3d4e2],0x89
  42ed0c:	nop
  42ed0d:	aas    
  42ed0e:	pop    es
  42ed0f:	repz out 0x3,eax
  42ed12:	popf   
  42ed13:	out    dx,al
  42ed14:	loope  0x42ed28
  42ed16:	push   cs
  42ed17:	enter  0x90f8,0xd9
  42ed1b:	jbe    0x42ed55
  42ed1d:	out    dx,al
  42ed1e:	mov    esi,0xb84b5205
  42ed23:	add    BYTE PTR [eax-0x57f6559c],ch
  42ed29:	aam    0xe3
  42ed2b:	call   0xef62b52f
  42ed30:	pop    es
  42ed31:	outs   dx,BYTE PTR ds:[esi]
  42ed32:	test   dh,bh
  42ed34:	adc    ebp,DWORD PTR [ecx-0x2a408062]
  42ed3a:	stos   BYTE PTR es:[edi],al
  42ed3b:	cmc    
  42ed3c:	jl     0x42ed93
  42ed3e:	mov    ds:0x99f08409,eax
  42ed43:	add    al,BYTE PTR [eax]
  42ed45:	push   0xffffff9c
  42ed47:	jbe    0x42ed4c
  42ed49:	out    dx,al
  42ed4a:	sbb    cl,BYTE PTR [ecx]
  42ed4c:	add    ecx,ebp
  42ed4e:	sahf   
  42ed4f:	mov    ebx,DWORD PTR [ecx+0x299b9]
  42ed55:	not    BYTE PTR [edi]
  42ed57:	xlat   BYTE PTR ds:[ebx]
  42ed58:	pmaxsw mm2,QWORD PTR [edi]
  42ed5b:	inc    ecx
  42ed5c:	xchg   ah,dl
  42ed5e:	mov    cl,BYTE PTR [esi]
  42ed60:	inc    eax
  42ed61:	jmp    0x559bed66
  42ed66:	pslld  mm4,QWORD PTR [ebx-0x3b]
  42ed6a:	cli    
  42ed6b:	je     0x42ed13
  42ed6d:	mov    ebx,DWORD PTR [ebp+esi*8-0x48]
  42ed71:	adc    eax,0x799674fb
  42ed76:	ror    BYTE PTR [edi+0x22],cl
  42ed79:	test   BYTE PTR [edi],0xe8
  42ed7c:	xchg   ebp,eax
  42ed7d:	adc    al,0x66
  42ed7f:	jmp    0x9fc93054
  42ed84:	idiv   al
  42ed86:	and    eax,esi
  42ed88:	pop    ds
  42ed89:	js     0x42edff
  42ed8b:	fisttp QWORD PTR [edi+0x1e19bfb1]
  42ed91:	out    dx,al
  42ed92:	adc    ebp,DWORD PTR [esi+0xce7fd65]
  42ed98:	pop    ds
  42ed99:	js     0x42ed95
  42ed9b:	cmp    eax,eax
  42ed9d:	scas   eax,DWORD PTR es:[edi]
  42ed9e:	(bad)  
  42ed9f:	call   0xf1b76742
  42eda4:	pop    ds
  42eda5:	out    dx,al
  42eda6:	pop    es
  42eda7:	add    BYTE PTR [ecx*2-0x794c0008],cl
  42edae:	inc    ebx
  42edaf:	sbb    BYTE PTR [edi-0x3cf0fd0c],dh
  42edb5:	push   cs
  42edb6:	add    DWORD PTR [eax],eax
  42edb8:	add    al,0x10
  42edba:	test   ch,ch
  42edbc:	add    al,0x1
  42edbe:	add    BYTE PTR [ebx-0x7bf90091],al
  42edc4:	add    DWORD PTR es:[eax],eax
  42edc7:	add    BYTE PTR [eax],al
  42edc9:	add    BYTE PTR [edi+0x2b73f9f4],al
  42edcf:	jl     0x42edc2
  42edd1:	add    eax,0x4b8b5a28
  42edd6:	scas   al,BYTE PTR es:[edi]
  42edd7:	jl     0x42edd0
  42edd9:	add    DWORD PTR [ebx],edi
  42eddb:	cmp    eax,0xc4a13b
  42ede0:	add    BYTE PTR [ebp+edx*8-0x3f],dh
  42ede4:	cdq    
  42ede5:	add    BYTE PTR [eax+eax*1-0x641ec98c],dh
  42edec:	cli    
  42eded:	inc    esp
  42edef:	ins    BYTE PTR es:[edi],dx
  42edf0:	and    eax,0x1543d
  42edf5:	add    BYTE PTR [eax],ch
  42edf7:	sub    DWORD PTR ds:0x84a5,edi
  42edfd:	jne    0x42edd7
  42edff:	out    0x55,eax
  42ee01:	add    DWORD PTR [eax+eax*1-0x7d],esi
  42ee05:	pop    ebp
  42ee06:	jl     0x42ee6e
  42ee08:	jmp    FWORD PTR [ecx-0x7c]
  42ee0b:	data16 cli 
  42ee0d:	push   edx
  42ee0e:	xor    ecx,DWORD PTR [esp+eiz*8]
  42ee11:	adc    esi,DWORD PTR [esi+edi*8-0x7d7217b1]
  42ee18:	cmc    
  42ee19:	dec    edi
  42ee1b:	cmp    edx,DWORD PTR [edx]
  42ee1d:	mov    edx,DWORD PTR [ecx-0x628a0a7e]
  42ee23:	dec    ecx
  42ee24:	shr    eax,cl
  42ee26:	enter  0x8084,0xfa
  42ee2a:	js     0x42edf6
  42ee2c:	add    eax,DWORD PTR [eax]
  42ee2e:	add    BYTE PTR [eax],al
  42ee30:	popf   
  42ee31:	outs   dx,BYTE PTR ds:[esi]
  42ee32:	add    eax,0x80ff9d66
  42ee37:	cli    
  42ee38:	stos   DWORD PTR es:[edi],eax
  42ee39:	popa   
  42ee3a:	imul   esp,DWORD PTR [eax+ebx*8],0xffffff89
  42ee3e:	add    eax,DWORD PTR [eax]
  42ee40:	popf   
  42ee41:	dec    esi
  42ee42:	and    esp,DWORD PTR [esi-0x63]
  42ee45:	aas    
  42ee46:	and    dh,0xf3
  42ee49:	push   es
  42ee4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee4b:	(bad)  
  42ee4c:	cli    
  42ee4d:	imul   esi,ecx,0x6e4a351c
  42ee53:	(bad)  
  42ee54:	jmp    0x43ec:0x921ff32c
  42ee5b:	dec    edi
  42ee5c:	inc    ebp
  42ee5d:	ja     0x42ee5c
  42ee5f:	call   FWORD PTR [ebp-0x35f80cec]
  42ee65:	xor    al,0xe1
  42ee67:	pop    ecx
  42ee68:	data16 and al,BYTE PTR [edx+0x1b]
  42ee6c:	popf   
  42ee6d:	mov    eax,ds:0xf69b2ff
  42ee73:	test   BYTE PTR [ebx+0x60fffe69],bh
  42ee79:	retf   0x3
  42ee7c:	popf   
  42ee7d:	push   eax
  42ee7e:	jge    0x42eebc
  42ee80:	ds imul edi,esi,0x39ef11ff
  42ee87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee88:	popf   
  42ee89:	imul   edi,esi,0xfe96210a
  42ee8f:	call   FWORD PTR [ebp+0xff9d76]
  42ee95:	add    BYTE PTR [edx+0x69],ch
  42ee98:	icebp  
  42ee99:	leave  
  42ee9a:	push   ss
  42ee9b:	push   es
  42ee9c:	or     al,0x66
  42ee9e:	pushf  
  42ee9f:	add    ah,BYTE PTR [edx-0x17175d0a]
  42eea5:	aam    0x47
  42eea7:	or     eax,0x2dd148d
  42eeac:	cmp    DWORD PTR [edi+ebx*2+0x77],ebp
  42eeb0:	add    DWORD PTR [eax-0x5a4452c5],0x10e8732a
  42eeba:	sbb    BYTE PTR [ebx],dh
  42eebc:	push   0xffffff80
  42eebe:	pop    ss
  42eebf:	xchg   DWORD PTR [ebx+0x4c20e0f],ebp
  42eec5:	add    al,0x9d
  42eec7:	add    cl,ch
  42eec9:	mul    DWORD PTR [edx+edi*4]
  42eecc:	or     BYTE PTR [edx+edi*8+0x72],dh
  42eed0:	dec    ebp
  42eed1:	mov    DWORD PTR [ebx+0x77],esi
  42eed4:	out    dx,eax
  42eed5:	mul    DWORD PTR [ebx+eax*1+0x72e7ca63]
  42eedc:	sub    DWORD PTR [ebx+edx*8+0x53b5a310],eax
  42eee3:	ja     0x42eed9
  42eee5:	mul    DWORD PTR [edi+edi*2+0x7d96160d]
  42eeec:	rol    BYTE PTR [eax-0x5a3c8d49],cl
  42eef2:	mov    dl,0x72
  42eef4:	call   0xf2420f09
  42eef9:	jg     0x42eefb
  42eefb:	add    BYTE PTR [edi-0x658d9747],ah
  42ef01:	jb     0x42eed2
  42ef03:	rcl    DWORD PTR [edi+0x2b41d972],cl
  42ef09:	add    ebp,ecx
  42ef0b:	add    edx,DWORD PTR [esi+0x777eba87]
  42ef11:	jb     0x42eee2
  42ef13:	ds jbe 0x42ef88
  42ef16:	mov    ecx,0xff7267bd
  42ef1b:	call   0xe9e11ebe
  42ef20:	sahf   
  42ef21:	add    dh,BYTE PTR [ebp-0x30]
  42ef24:	daa    
  42ef25:	(bad)  
  42ef26:	or     esi,DWORD PTR [edx+0x61]
  42ef29:	es test eax,0x39ee9
  42ef2f:	fisub  WORD PTR [edx]
  42ef31:	xor    eax,0x26b286fb
  42ef36:	add    cl,ch
  42ef38:	sahf   
  42ef39:	add    esi,ebx
  42ef3b:	xchg   ecx,eax
  42ef3c:	xchg   BYTE PTR [edx+0x24],al
  42ef3f:	jns    0x42eee2
  42ef41:	add    al,BYTE PTR [eax]
  42ef43:	in     al,dx
  42ef44:	into   
  42ef45:	jb     0x42ef46
  42ef47:	call   0x4302a4e7
  42ef4c:	lods   al,BYTE PTR ds:[esi]
  42ef4d:	das    
  42ef4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef4f:	jmp    0x6c4df1f2
  42ef54:	xchg   ebp,eax
  42ef55:	ins    DWORD PTR es:[edi],dx
  42ef56:	cli    
  42ef57:	ds push ss
  42ef59:	inc    ebx
  42ef5a:	popa   
  42ef5b:	ins    BYTE PTR es:[edi],dx
  42ef5c:	pop    ecx
  42ef5d:	cld    
  42ef5e:	and    eax,0x0
  42ef61:	add    BYTE PTR [ebx+0x6c],bl
  42ef64:	cli    
  42ef65:	(bad)  
  42ef66:	xchg   edi,eax
  42ef67:	inc    ebx
  42ef68:	or     ah,BYTE PTR [edx+edi*1+0x6b]
  42ef6c:	cli    
  42ef6d:	push   ss
  42ef6e:	inc    edx
  42ef6f:	neg    BYTE PTR [edi]
  42ef71:	push   cs
  42ef72:	mov    ah,0x9
  42ef74:	data16 add BYTE PTR [ecx+0x5b],0xf9
  42ef79:	(bad)  
  42ef7a:	sub    edx,esi
  42ef7c:	xchg   BYTE PTR ds:0x9a5b5e1e,al
  42ef82:	jo     0x42ef0c
  42ef84:	out    dx,eax
  42ef85:	jb     0x42efdf
  42ef87:	add    DWORD PTR [ebx+0x1a],edx
  42ef8a:	or     bh,BYTE PTR [ebx+0x7c]
  42ef8d:	fnstsw WORD PTR [eax+0x2a]
  42ef90:	mov    eax,0x2a1f9
  42ef95:	add    BYTE PTR [eax+0x6c45ee1c],dh
  42ef9b:	push   es
  42ef9c:	je     0x42efaf
  42ef9e:	(bad)  
  42ef9f:	cmp    cl,BYTE PTR [edx]
  42efa1:	mov    edi,DWORD PTR [ecx+0x2cd68312]
  42efa7:	inc    esp
  42efa8:	icebp  
  42efa9:	jmp    FWORD PTR [ebx]
  42efab:	test   BYTE PTR [ebx+0x8],ah
  42efae:	sub    dh,bh
  42efb0:	inc    ebx
  42efb1:	or     BYTE PTR [eax+0x79],al
  42efb4:	and    eax,0x4d58456a
  42efb9:	xor    edi,edi
  42efbb:	fdiv   QWORD PTR [ebp-0x1e0f5406]
  42efc1:	and    bh,BYTE PTR [edi-0x7b]
  42efc4:	add    al,BYTE PTR [ecx]
  42efc6:	add    BYTE PTR [eax],al
  42efc8:	add    al,0x5
  42efca:	mov    DWORD PTR [ebp+0x70],eax
  42efcd:	sub    al,0xbf
  42efcf:	jne    0x42efc2
  42efd1:	jge    0x42f04e
  42efd3:	in     al,0x5f
  42efd5:	adc    eax,0x7cc4324f
  42efda:	enter  0x9de8,0x24
  42efde:	idiv   edi
  42efe0:	sti    
  42efe1:	mov    bh,0xba
  42efe3:	mov    DWORD PTR [ecx],eax
  42efe5:	jmp    0x7c17366b
  42efea:	dec    ebx
  42efeb:	or     al,0x4f
  42efed:	bound  eax,QWORD PTR [edx]
  42efef:	mov    DWORD PTR [eax*1+0x7bc40001],edi
  42eff6:	inc    eax
  42eff7:	adc    BYTE PTR [edi],ch
  42eff9:	push   edx
  42effa:	or     cl,BYTE PTR [ecx+0x1092c]
  42f000:	mov    ah,0x2b
  42f002:	xlat   BYTE PTR ds:[ebx]
  42f003:	verw   WORD PTR [esi-0x4]
  42f007:	inc    DWORD PTR [ebp+edi*2+0x67f7f05b]
  42f00e:	jmp    0x9c66:0x7cd9d02
  42f015:	inc    esp
  42f016:	add    edx,esi
  42f018:	pop    esi
  42f019:	pop    esi
  42f01a:	repnz add eax,0x86fee9d2
  42f020:	push   ebx
  42f021:	inc    edx
  42f022:	ja     0x42f044
  42f024:	pop    edx
  42f025:	mov    eax,ds:0xdd415c86
  42f02a:	loop   0x42f017
  42f02c:	add    BYTE PTR [eax],al
  42f02e:	jge    0x42f045
  42f030:	or     BYTE PTR [esi-0x64],ah
  42f033:	test   BYTE PTR [ecx],al
  42f035:	repnz pop esi
  42f037:	sbb    bh,al
  42f039:	add    eax,0x870829ca
  42f03e:	pop    ebx
  42f03f:	xchg   edx,eax
  42f040:	pop    ebx
  42f041:	and    BYTE PTR [edx],ah
  42f043:	stc    
  42f044:	xchg   BYTE PTR [ebp+eax*1-0x23],bl
  42f048:	loop   0x42f031
  42f04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f04b:	dec    ebp
  42f04c:	add    ah,BYTE PTR [esi-0x64]
  42f04f:	aam    0x1
  42f051:	repnz fisubr WORD PTR [ecx-0xe]
  42f055:	add    eax,0x86fd8952
  42f05a:	jecxz  0x42f02d
  42f05c:	mov    edi,0x8930ea20
  42f061:	inc    ecx
  42f062:	lea    edi,[eax]
  42f064:	mov    ah,0x3
  42f066:	pushf  
  42f067:	pop    ecx
  42f068:	dec    BYTE PTR [eax+ebp*2-0x625082df]
  42f06f:	pop    edx
  42f070:	(bad)  
  42f071:	push   DWORD PTR [edi]
  42f073:	jge    0x42f04a
  42f075:	out    0xf,eax
  42f077:	cdq    
  42f078:	jl     0x42f074
  42f07a:	add    cl,BYTE PTR es:[ecx+0x43dca544]
  42f081:	icebp  
  42f082:	adc    al,0xf7
  42f084:	jp     0x42f104
  42f086:	xchg   ebp,eax
  42f087:	push   0x30733f3
  42f08c:	(bad)  
  42f08e:	xchg   DWORD PTR ds:0x10dd,edx
  42f094:	fld    QWORD PTR [edx]
  42f096:	add    BYTE PTR [ebx],0x9d
  42f099:	add    ch,BYTE PTR [ecx]
  42f09b:	clc    
  42f09c:	mov    esi,0x5d03e8a9
  42f0a1:	add    ch,BYTE PTR [esi+0x53]
  42f0a4:	adc    DWORD PTR [ecx-0x13],0x52
  42f0a8:	into   
  42f0a9:	pop    ss
  42f0aa:	add    BYTE PTR [ebx],0x9d
  42f0ad:	push   es
  42f0ae:	imul   esi,esi,0x1699d79a
  42f0b4:	in     eax,0x16
  42f0b6:	sub    DWORD PTR [eax+eiz*1],eax
  42f0b9:	inc    edx
  42f0ba:	adc    al,0x7
  42f0bc:	and    al,0xc5
  42f0be:	test   BYTE PTR [eax-0x8867ace],cl
  42f0c4:	jno    0x42f09d
  42f0c6:	sbb    BYTE PTR [ecx-0x54969047],0xd2
  42f0cd:	test   BYTE PTR ds:0xd4768839,0x16
  42f0d4:	jnp    0x42f0d8
  42f0d6:	mov    edx,0xf566917c
  42f0db:	ret    
  42f0dc:	repnz fsub st,st(7)
  42f0df:	jmp    0x5cb0afce
  42f0e4:	cli    
  42f0e5:	(bad)  
  42f0e6:	das    
  42f0e7:	jl     0x42f0c0
  42f0e9:	inc    esi
  42f0ea:	mov    ds:0xe9029d7b,eax
  42f0ef:	add    eax,edx
  42f0f1:	lds    ebp,FWORD PTR [ebp-0x22]
  42f0f4:	into   
  42f0f5:	test   BYTE PTR ds:0x790000f7,ch
  42f0fb:	ror    DWORD PTR [ecx],cl
  42f0fd:	push   ss
  42f0fe:	inc    ebp
  42f0ff:	push   ss
  42f100:	test   eax,0x74422003
  42f105:	pop    ds
  42f106:	sbb    BYTE PTR [edi-0x1],ch
  42f109:	jl     0x42f0af
  42f10b:	xor    eax,0x709875db
  42f110:	inc    esp
  42f111:	int    0x9e
  42f113:	test   BYTE PTR [ecx],0x70
  42f116:	fs push 0xffffffc2
  42f119:	sub    al,0xf9
  42f11b:	add    al,BYTE PTR [eax]
  42f11d:	jmp    0xd33976c0
  42f122:	pop    DWORD PTR [ebx-0x7d660e84]
  42f128:	(bad)  
  42f129:	call   0xe8a8f078
  42f12e:	inc    eax
  42f12f:	outs   dx,BYTE PTR ds:[esi]
  42f130:	push   0xe75593e9
  42f135:	cmp    al,al
  42f137:	push   0xf8b66cfa
  42f13c:	sbb    DWORD PTR [esi],0xffffff98
  42f13f:	add    al,BYTE PTR [eax]
  42f141:	je     0x42f19f
  42f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f144:	dec    edi
  42f145:	push   ss
  42f146:	faddp  st(6),st
  42f148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f149:	mov    ch,0x9e
  42f14b:	add    al,BYTE PTR [eax]
  42f14d:	outs   dx,BYTE PTR ds:[esi]
  42f14e:	lods   al,BYTE PTR ds:[esi]
  42f14f:	sub    dl,BYTE PTR [ecx+ebp*4]
  42f152:	sahf   
  42f153:	xchg   DWORD PTR [edi+0x13682ee],edi
  42f159:	jmp    0xacf5eafc
  42f15e:	add    BYTE PTR [eax],al
  42f160:	mov    ?,ecx
  42f162:	mov    dl,0xac
  42f164:	mov    ds:0x93d9de43,al
  42f169:	dec    edx
  42f16a:	jle    0x42f120
  42f16c:	push   esi
  42f16d:	add    dh,BYTE PTR [ebp+0x6]
  42f170:	out    dx,al
  42f171:	gs repz add eax,0xc9a76846
  42f178:	mov    dl,0x1
  42f17a:	xchg   DWORD PTR [edx],edx
  42f17c:	dec    edx
  42f17d:	or     DWORD PTR [edi+0x45258ea4],eax
  42f183:	add    BYTE PTR [ecx+edi*8-0x52],dh
  42f187:	clc    
  42f188:	das    
  42f189:	inc    ebx
  42f18a:	push   es
  42f18b:	sub    ecx,DWORD PTR [ecx-0x4b]
  42f18e:	mov    edi,0xaef874e7
  42f193:	ror    BYTE PTR [edi+0xf03e1e9],0x6b
  42f19a:	add    al,BYTE PTR [ebx+0x73faf6d1]
  42f1a0:	push   edx
  42f1a1:	push   esp
  42f1a2:	dec    ebp
  42f1a3:	push   0x115
  42f1a8:	int3   
  42f1a9:	pop    es
  42f1aa:	cli    
  42f1ab:	inc    DWORD PTR [esp+ebx*8+0xc]
  42f1af:	idiv   BYTE PTR [ecx-0x2]
  42f1b2:	add    esi,DWORD PTR [ecx+eiz*4+0x55]
  42f1b6:	dec    ebp
  42f1b7:	push   0x1d6
  42f1bc:	pushf  
  42f1bd:	add    al,0xfa
  42f1bf:	inc    DWORD PTR [eax+ebp*8+0x73]
  42f1c3:	clc    
  42f1c4:	add    BYTE PTR [eax],al
  42f1c6:	mov    cl,0x42
  42f1c8:	mov    ds:0xf672a350,al
  42f1cd:	mov    ecx,DWORD PTR [edx-0x27]
  42f1d0:	and    al,0xfb
  42f1d2:	sub    eax,0x79
  42f1d5:	jge    0x42f247
  42f1d7:	add    DWORD PTR [esi+ecx*1+0x47],esi
  42f1db:	push   eax
  42f1dc:	bound  esp,QWORD PTR [edi+0x68000104]
  42f1e2:	sti    
  42f1e3:	push   es
  42f1e4:	add    BYTE PTR [eax],al
  42f1e6:	dec    edi
  42f1e7:	pop    ss
  42f1e8:	out    dx,al
  42f1e9:	inc    ebp
  42f1ea:	in     al,dx
  42f1eb:	inc    eax
  42f1ec:	outs   dx,BYTE PTR ds:[esi]
  42f1ed:	sbb    eax,0xa8625037
  42f1f2:	les    eax,FWORD PTR [eax]
  42f1f4:	add    BYTE PTR [eax-0x34],ch
  42f1f7:	push   es
  42f1f8:	add    BYTE PTR [eax],al
  42f1fa:	mov    ds:0x9d8df272,eax
  42f1ff:	sahf   
  42f200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f201:	dec    edi
  42f202:	mov    dl,0x95
  42f204:	jb     0x42f18c
  42f206:	jecxz  0x42f21a
  42f208:	jb     0x42f1ff
  42f20a:	mov    ds:0x857c846b,al
  42f20f:	pop    edx
  42f210:	jmp    0x9da3:0xe694ee09
  42f217:	pop    ecx
  42f218:	(bad)  
  42f219:	addr16 cdq 
  42f21b:	push   edi
  42f21c:	(bad)  
  42f21d:	inc    DWORD PTR [esi-0x5abb8f98]
  42f223:	imul   ebp,edx,0xec0cce1c
  42f229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f22a:	add    BYTE PTR [eax],al
  42f22c:	popf   
  42f22d:	pop    ecx
  42f22e:	(bad)  
  42f22f:	addr16 mov al,ds:0xfe57
  42f233:	call   DWORD PTR [edx+0x37]
  42f236:	jl     0x42f1c4
  42f238:	loopne 0x42f20b
  42f23a:	sar    edx,cl
  42f23c:	enter  0x8c8d,0xc1
  42f240:	inc    ebp
  42f241:	(bad)  
  42f242:	jns    0x42f23e
  42f244:	xor    dl,BYTE PTR [edx+edi*4+0x116d9c07]
  42f24b:	dec    edi
  42f24c:	retf   0xa411
  42f24f:	call   FWORD PTR [edx]
  42f251:	pop    edx
  42f252:	out    0xff,al
  42f254:	pushf  
  42f255:	pop    ecx
  42f256:	(bad)  
  42f257:	cli    
  42f258:	nop
  42f259:	loope  0x42f1dd
  42f25b:	inc    esp
  42f25c:	xor    eax,0xf97477aa
  42f261:	loopne 0x42f2a0
  42f263:	out    0x14,eax
  42f265:	sar    BYTE PTR [eax-0x6],1
  42f268:	repnz sahf 
  42f26a:	push   es
  42f26b:	add    BYTE PTR [ebp-0x7d8c01a7],dl
  42f271:	aas    
  42f272:	(bad)  
  42f273:	sub    eax,0xe745e0dd
  42f278:	sti    
  42f279:	add    al,BYTE PTR [edx]
  42f27b:	jns    0x42f244
  42f27d:	sti    
  42f27e:	push   ecx
  42f27f:	(bad)  
  42f280:	mov    ?,ebx
  42f282:	pop    ecx
  42f283:	inc    esp
  42f284:	arpl   WORD PTR [ecx+0x7],ax
  42f287:	adc    al,0xa2
  42f289:	cmp    dl,BYTE PTR [edi-0x16ff6715]
  42f28f:	add    eax,DWORD PTR [eax]
  42f291:	add    BYTE PTR [esi-0x56870b0b],dl
  42f297:	cs aad 0xc3
  42f29a:	mov    cl,ah
  42f29c:	inc    edx
  42f29d:	fst    QWORD PTR [ebp+0x40]
  42f2a0:	clc    
  42f2a1:	add    ebp,DWORD PTR [edi+0x5]
  42f2a4:	or     DWORD PTR [eax-0x101afd4d],ebp
  42f2aa:	mov    ebx,DWORD PTR [edx+0x3a]
  42f2ad:	fs popa 
  42f2af:	imul   esp,DWORD PTR [ebx+eax*2-0x32],0x8
  42f2b4:	pop    esi
  42f2b5:	push   es
  42f2b6:	lds    ebp,FWORD PTR [edx-0x4c69fbdb]
  42f2bc:	call   FWORD PTR [di-0x16fe]
  42f2c1:	or     dh,ch
  42f2c3:	js     0x42f2ad
  42f2c5:	add    bl,BYTE PTR [ebp-0x659c57fe]
  42f2cb:	mul    DWORD PTR [edi+0x49252744]
  42f2d1:	minps  xmm0,XMMWORD PTR [edx]
  42f2d4:	jnp    0x42f2d4
  42f2d6:	mov    dl,0x9e
  42f2d8:	and    eax,0x20f6a104
  42f2dd:	ins    BYTE PTR es:[edi],dx
  42f2de:	pop    esi
  42f2df:	bound  ebx,QWORD PTR [ebx+0x78]
  42f2e2:	push   ds
  42f2e3:	inc    edx
  42f2e4:	fsubr  QWORD PTR [eax]
  42f2e6:	sbb    al,dh
  42f2e8:	add    al,0x0
  42f2ea:	and    BYTE PTR [edx-0x44],al
  42f2ed:	and    al,0x1a
  42f2ef:	std    
  42f2f0:	sar    BYTE PTR [ebx+0x6200029b],1
  42f2f6:	add    BYTE PTR [eax],al
  42f2f8:	daa    
  42f2f9:	imul   edi,edi,0xffffffe8
  42f2fc:	sahf   
  42f2fd:	jns    0x42f306
  42f2ff:	jb     0x42f29c
  42f301:	fidiv  DWORD PTR [edi-0x777c6156]
  42f307:	in     eax,dx
  42f308:	lahf   
  42f309:	add    al,BYTE PTR [eax]
  42f30b:	pusha  
  42f30c:	(bad)  
  42f30d:	(bad)  
  42f30e:	cs sub esi,ebx
  42f311:	lods   al,BYTE PTR ds:[esi]
  42f312:	add    ebp,ecx
  42f314:	rol    DWORD PTR [edx-0x1a],1
  42f317:	lock or bl,BYTE PTR [edi]
  42f31a:	cmp    ah,dl
  42f31c:	pop    esi
  42f31d:	push   0xfffffff4
  42f31f:	in     al,dx
  42f320:	mov    esi,0x7ae93e96
  42f325:	imul   BYTE PTR [ecx]
  42f327:	shl    esp,0x4c
  42f32a:	cld    
  42f32b:	into   
  42f32c:	sbb    eax,0x380c73aa
  42f331:	loop   0x42f2ea
  42f333:	sub    ah,BYTE PTR [ecx-0x62f2b47f]
  42f339:	jnp    0x42f2c2
  42f33b:	jmp    0x7242f5e1
  42f340:	pop    ebp
  42f341:	or     BYTE PTR es:[edx-0x5c],dh
  42f345:	fidiv  DWORD PTR [edi-0x7f8466d6]
  42f34b:	in     eax,0xa1
  42f34d:	add    al,BYTE PTR [eax]
  42f34f:	mov    edx,0xf1be29de
  42f354:	sahf   
  42f355:	ins    DWORD PTR es:[edi],dx
  42f356:	and    al,0x71
  42f358:	lods   eax,DWORD PTR ds:[esi]
  42f359:	ret    0x76ff
  42f35c:	add    BYTE PTR [eax],al
  42f35e:	pushf  
  42f35f:	and    ch,BYTE PTR [edx+ebp*4-0x48b10162]
  42f366:	jmp    0x42f35d
  42f368:	inc    esp
  42f369:	inc    ecx
  42f36a:	xor    al,0x4d
  42f36c:	cld    
  42f36d:	dec    esi
  42f36e:	sbb    eax,0x980073aa
  42f373:	jge    0x42f3cb
  42f375:	and    al,0xf4
  42f377:	xor    al,0xee
  42f379:	cmp    ebp,DWORD PTR [edx+0x32561373]
  42f37f:	cmp    BYTE PTR [ecx],ch
  42f381:	fstp   TBYTE PTR [edx]
  42f383:	inc    esi
  42f384:	mov    dl,0x43
  42f386:	(bad)  
  42f387:	fld    QWORD PTR ds:0x55f18bf7
  42f38d:	pop    esi
  42f38e:	out    dx,eax
  42f38f:	ret    
  42f390:	(bad)  
  42f391:	call   FWORD PTR [ebx+0x44115c13]
  42f397:	add    eax,0xe6ff534e
  42f39c:	cmc    
  42f39d:	adc    eax,0x4015a0
  42f3a2:	mov    edi,0xb20573e6
  42f3a7:	cmp    BYTE PTR [ebp-0x15],cl
  42f3aa:	xor    esi,DWORD PTR [eax+eax*8]
  42f3ad:	jmp    0x42f3e8
  42f3af:	push   eax
  42f3b0:	pop    eax
  42f3b1:	pop    ebx
  42f3b2:	pop    ebx
  42f3b3:	and    dl,al
  42f3b5:	adc    al,0x84
  42f3b7:	(bad)  
  42f3b8:	in     eax,dx
  42f3b9:	add    eax,0x399aa4
  42f3be:	inc    eax
  42f3bf:	pop    ecx
  42f3c0:	aas    
  42f3c1:	call   0xd1d4f3c6
  42f3c6:	sti    
  42f3c7:	inc    eax
  42f3c9:	lds    ebp,FWORD PTR [esi+0x38]
  42f3cc:	or     edx,DWORD PTR [edx]
  42f3ce:	pop    esp
  42f3cf:	adc    DWORD PTR [esi+edi*8-0x7e],esi
  42f3d3:	or     eax,0x39a68c
  42f3d8:	fnstsw WORD PTR [ebp+0x6]
  42f3db:	add    DWORD PTR [eax*1+0x38a71975],eax
  42f3e2:	sub    eax,eax
  42f3e4:	inc    esp
  42f3e5:	push   ebp
  42f3e6:	dec    edx
  42f3e7:	xor    ebx,DWORD PTR [edi-0x51]
  42f3ea:	push   edx
  42f3eb:	mov    eax,0xe7fe9c9d
  42f3f0:	aaa    
  42f3f1:	shl    DWORD PTR [ecx-0x6],1
  42f3f4:	scas   al,BYTE PTR es:[edi]
  42f3f5:	sbb    edx,ebp
  42f3f7:	aas    
  42f3f8:	jbe    0x42f416
  42f3fa:	jmp    0x1a88c603
  42f3ff:	push   cs
  42f400:	pop    ebp
  42f401:	pop    ebx
  42f402:	sub    eax,0x201fdec0
  42f407:	dec    esp
  42f408:	nop
  42f409:	fwait
  42f40a:	(bad)  
  42f40b:	icebp  
  42f40c:	cwde   
  42f40d:	cmp    esp,DWORD PTR [edx-0x33a062c2]
  42f413:	jae    0x42f46b
  42f415:	adc    edx,DWORD PTR [eax]
  42f417:	fistp  DWORD PTR [eax+0x9bf7969]
  42f41d:	pushf  
  42f41e:	jno    0x42f434
  42f420:	jmp    0x1842b26f
  42f425:	outs   dx,DWORD PTR ds:[esi]
  42f426:	out    0xb7,al
  42f428:	add    BYTE PTR [eax],al
  42f42a:	ficomp WORD PTR [ecx+0x35]
  42f42d:	and    DWORD PTR [ecx-0xf0001a6],0x95b088ff
  42f437:	pop    edx
  42f438:	(bad)  
  42f439:	jmp    DWORD PTR [eax]
  42f43b:	mov    al,0xef
  42f43d:	pop    ds
  42f43e:	jmp    0x42f3f0
  42f440:	or     ch,BYTE PTR [eax-0x4f]
  42f443:	sbb    DWORD PTR [eax*4+0x4f0b075d],eax
  42f44a:	int    0x29
  42f44c:	aam    0x2e
  42f44e:	push   esi
  42f44f:	rcr    bl,1
  42f451:	mov    bh,0xde
  42f453:	pop    ecx
  42f454:	inc    dx
  42f456:	sub    eax,DWORD PTR [ecx-0x6631a98c]
  42f45c:	sar    DWORD PTR [esi-0x412e67da],1
  42f462:	imul   ebx,eax,0x1a
  42f465:	in     al,dx
  42f466:	test   eax,0x7a03a902
  42f46b:	out    0x4,al
  42f46d:	add    BYTE PTR [ebp+0x66810fee],bl
  42f473:	push   ds
  42f474:	in     eax,0x74
  42f476:	outs   dx,BYTE PTR ds:[esi]
  42f477:	xor    al,0x6c
  42f479:	outs   dx,BYTE PTR ds:[esi]
  42f47a:	dec    esi
  42f47b:	sbb    BYTE PTR [ebx],dh
  42f47d:	push   DWORD PTR [edx-0x5efc5a6a]
  42f483:	out    dx,al
  42f484:	add    ebp,DWORD PTR [edx+edi*8+0x48]
  42f488:	and    esi,DWORD PTR [ebp+0x1e]
  42f48b:	inc    ebx
  42f48c:	xchg   esp,eax
  42f48d:	pop    ss
  42f48e:	add    BYTE PTR [eax],al
  42f490:	cld    
  42f491:	ficom  DWORD PTR [eax-0x3f]
  42f494:	stos   BYTE PTR es:[edi],al
  42f495:	jl     0x42f4ff
  42f497:	add    al,0x9c
  42f499:	add    ch,cl
  42f49b:	mov    bl,ah
  42f49d:	push   cs
  42f49e:	dec    eax
  42f49f:	in     al,dx
  42f4a0:	dec    edx
  42f4a1:	ret    
  42f4a2:	call   0xe841ff2f
  42f4a7:	add    ebx,DWORD PTR [ebp+0x3b1c2a79]
  42f4ad:	(bad)  
  42f4ae:	call   0xd311080
  42f4b3:	or     al,0xce
  42f4b5:	addr16 push esp
  42f4b7:	and    BYTE PTR [ebp-0x4adfc399],al
  42f4bd:	addr16 xor al,0x20
  42f4c0:	mov    ch,0xd0
  42f4c2:	mov    cl,0xe
  42f4c4:	popa   
  42f4c5:	push   cs
  42f4c6:	sub    DWORD PTR [edx+ebx*1],eax
  42f4c9:	push   0x39
  42f4cb:	ins    BYTE PTR es:[edi],dx
  42f4cc:	push   ss
  42f4cd:	addr16 cdq 
  42f4cf:	je     0x42f4ec
  42f4d1:	aas    
  42f4d2:	xor    esi,edx
  42f4d4:	call   0x1c10ddea
  42f4d9:	out    dx,al
  42f4da:	int3   
  42f4db:	or     ebp,DWORD PTR [esi+0x67]
  42f4de:	hlt    
  42f4df:	pop    ds
  42f4e0:	mov    ch,0x67
  42f4e2:	(bad)  
  42f4e3:	cld    
  42f4e4:	stos   BYTE PTR es:[edi],al
  42f4e5:	or     bh,bl
  42f4e7:	cmc    
  42f4e8:	mov    ds:0xab66520a,al
  42f4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4ee:	adc    ebp,DWORD PTR [ecx-0x41088062]
  42f4f4:	add    BYTE PTR [eax],al
  42f4f6:	jbe    0x42f4eb
  42f4f8:	cli    
  42f4f9:	dec    esi
  42f4fa:	imul   eax,DWORD PTR [eax-0x5b0f593e],0x7fe3e90f
  42f504:	jmp    0x42f4a5
  42f506:	adc    eax,0x499607ee
  42f50b:	out    dx,al
  42f50c:	pop    ss
  42f50d:	es retf 
  42f50f:	adc    bh,bl
  42f511:	xchg   esp,eax
  42f512:	mov    gs,WORD PTR [ebx+0x74]
  42f515:	in     eax,0xd8
  42f517:	imul   edx,DWORD PTR [ecx+ebp*8],0xffffff93
  42f51b:	ret    0x71ff
  42f51e:	push   ss
  42f51f:	shl    edi,1
  42f521:	mov    bl,0x9
  42f523:	imul   edi,edx,0x59c8c962
  42f529:	mov    esp,ds
  42f52b:	adc    DWORD PTR [eax],eax
  42f52d:	cmp    al,0xfa
  42f52f:	pop    ecx
  42f530:	push   ecx
  42f531:	jb     0x42f5a7
  42f533:	(bad)  
  42f534:	push   edx
  42f535:	(bad)  
  42f536:	fs push cs
  42f538:	sti    
  42f539:	push   esp
  42f53a:	test   DWORD PTR [ecx+0x74],ebp
  42f53d:	fxch   st(7)
  42f53f:	out    dx,al
  42f540:	or     edx,DWORD PTR [edi]
  42f542:	into   
  42f543:	push   cs
  42f544:	inc    esp
  42f545:	fcomp  QWORD PTR [esi+0x66]
  42f548:	test   DWORD PTR [ecx-0x59e5a19a],esi
  42f54e:	scas   al,BYTE PTR es:[edi]
  42f54f:	push   0xcc4ea686
  42f554:	pop    esp
  42f555:	stos   DWORD PTR es:[edi],eax
  42f556:	test   DWORD PTR [edx],eax
  42f558:	push   ebp
  42f559:	bound  eax,QWORD PTR [eax]
  42f55b:	add    BYTE PTR [ebp-0x1bff141c],bh
  42f561:	dec    ebx
  42f562:	dec    ebp
  42f563:	mov    edx,DWORD PTR [ecx+0x2]
  42f566:	adc    eax,0xee2cf440
  42f56b:	push   0xfffffa73
  42f570:	into   
  42f571:	lock push eax
  42f573:	dec    ecx
  42f575:	imul   esp,DWORD PTR [ecx+eax*1+0x53],0x34144c0b
  42f57d:	add    cl,BYTE PTR [ecx-0xd829fbb]
  42f583:	add    DWORD PTR [eax],ecx
  42f585:	sbb    eax,0x51904583
  42f58a:	pop    eax
  42f58b:	leave  
  42f58c:	jbe    0x42f588
  42f58e:	inc    DWORD PTR [edx+0x740cde01]
  42f594:	xchg   ebp,eax
  42f595:	add    DWORD PTR [ebx-0x20],0xffffffe4
  42f599:	lock adc esi,eax
  42f59c:	test   al,0x41
  42f59e:	cli    
  42f59f:	mov    WORD PTR [ecx-0x1f],cs
  42f5a2:	dec    edx
  42f5a3:	jmp    FWORD PTR [ecx+0x51]
  42f5a6:	push   cs
  42f5a7:	inc    eax
  42f5a8:	je     0x42f5f1
  42f5aa:	call   DWORD PTR [ebp+0x2a]
  42f5ad:	dec    ebx
  42f5ae:	mov    eax,DWORD PTR [ebp+0x64]
  42f5b1:	push   ecx
  42f5b2:	cmc    
  42f5b3:	xlat   BYTE PTR ds:[ebx]
  42f5b4:	stc    
  42f5b5:	shl    DWORD PTR [ebx-0x29],0x5f
  42f5b9:	scas   al,BYTE PTR es:[edi]
  42f5ba:	cmc    
  42f5bb:	je     0x42f555
  42f5bd:	cli    
  42f5be:	not    BYTE PTR ds:0xf780000
  42f5c4:	inc    eax
  42f5c5:	add    BYTE PTR [ebx],dl
  42f5c7:	sbb    ah,BYTE PTR [eax-0x9018bee]
  42f5cd:	je     0x42f567
  42f5cf:	cli    
  42f5d0:	popa   
  42f5d1:	add    BYTE PTR [esi+edi*8-0xfbbf001],cl
  42f5d8:	adc    ebp,esp
  42f5da:	popf   
  42f5db:	push   0xffffffbe
  42f5dd:	call   FWORD PTR [ecx]
  42f5df:	fwait
  42f5e0:	repnz push es
  42f5e2:	ins    DWORD PTR es:[edi],dx
  42f5e3:	jl     0x42f5fc
  42f5e5:	mov    al,ds:0xb0041baf
  42f5ea:	pushf  
  42f5eb:	add    BYTE PTR [esi+ebp*1],0xdd
  42f5ef:	cwde   
  42f5f0:	add    al,BYTE PTR [eax]
  42f5f2:	push   eax
  42f5f3:	lock pop edx
  42f5f5:	jle    0x42f5f8
  42f5f7:	imul   edx,ecx,0x51
  42f5fa:	push   ss
  42f5fb:	push   es
  42f5fc:	fmul   QWORD PTR [edi]
  42f5fe:	pop    ebp
  42f5ff:	pop    ebx
  42f600:	xor    edi,edx
  42f602:	outs   dx,BYTE PTR ds:[esi]
  42f603:	out    dx,al
  42f604:	(bad)  
  42f605:	imul   DWORD PTR [ebp-0x78]
  42f608:	fadd   QWORD PTR [ebx]
  42f60a:	outs   dx,BYTE PTR ds:[esi]
  42f60b:	mov    cl,dl
  42f60d:	cli    
  42f60e:	dec    eax
  42f60f:	arpl   WORD PTR [esi+0x5c],si
  42f612:	mov    edx,0x9d000392
  42f617:	fld    TBYTE PTR [ebp-0x2f]
  42f61a:	and    BYTE PTR [ebx],bl
  42f61c:	clc    
  42f61d:	dec    esi
  42f61e:	dec    edx
  42f61f:	loopne 0x42f650
  42f621:	je     0x42f5d0
  42f623:	cdq    
  42f624:	dec    BYTE PTR [eax+0x71f00000]
  42f62a:	fadd   QWORD PTR [ebx]
  42f62c:	mov    ah,bh
  42f62e:	cli    
  42f62f:	gs cdq 
  42f631:	jg     0x42f63b
  42f633:	pop    eax
  42f634:	test   esp,ebx
  42f636:	clc    
  42f637:	cli    
  42f638:	jb     0x42f611
  42f63a:	ret    0xcdef
  42f63d:	faddp  st(2),st
  42f63f:	repz int 0x28
  42f642:	(bad)  
  42f644:	out    dx,eax
  42f645:	or     ch,dl
  42f647:	cli    
  42f648:	enter  0x6f55,0x74
  42f64c:	inc    ebp
  42f64d:	lods   eax,DWORD PTR ds:[esi]
  42f64e:	push   ebp
  42f64f:	test   BYTE PTR [ebp+0x2f],bl
  42f652:	std    
  42f653:	cli    
  42f654:	mov    al,0x2
  42f656:	popf   
  42f657:	jno    0x42f6a8
  42f659:	sbb    BYTE PTR [ebx],0x74
  42f65c:	popf   
  42f65d:	out    dx,al
  42f65e:	fnsave [eax-0x27]
  42f661:	cli    
  42f662:	gs out dx,eax
  42f664:	mov    ds:0xfb44f6de,al
  42f669:	(bad)  
  42f66a:	mov    ds:0x720207c7,al
  42f66f:	test   DWORD PTR [edx],0x20d19164
  42f675:	mov    esi,0x394bd261
  42f67a:	es cld 
  42f67c:	jmp    0x6776:0xbee063ce
  42f683:	pusha  
  42f684:	jmp    0x91cc:0x6203e900
  42f68b:	xor    al,0x0
  42f68d:	add    ch,bl
  42f68f:	jne    0x42f6f4
  42f691:	test   al,0xc1
  42f693:	arpl   WORD PTR [ecx],bp
  42f695:	shr    DWORD PTR [edx-0x2e],cl
  42f698:	mov    fs,WORD PTR [edi]
  42f69a:	dec    ebp
  42f69b:	xor    BYTE PTR [esi],bh
  42f69d:	jno    0x42f630
  42f69f:	shl    ch,cl
  42f6a1:	ret    
  42f6a2:	mov    ds:0xbf7287e,al
  42f6a7:	js     0x42f664
  42f6a9:	iret   
  42f6aa:	mov    ds:0x217ee8c2,eax
  42f6af:	sahf   
  42f6b0:	repz jo 0x42f63a
  42f6b3:	shr    cl,cl
  42f6b5:	pop    ecx
  42f6b6:	and    esp,DWORD PTR ds:0x2dd12d9
  42f6bc:	into   
  42f6bd:	sub    BYTE PTR [eax],bl
  42f6bf:	jge    0x42f64d
  42f6c1:	outs   dx,BYTE PTR ds:[esi]
  42f6c2:	arpl   WORD PTR [bx+si],di
  42f6c5:	jno    0x42f678
  42f6c7:	out    0xd5,al
  42f6c9:	ret    
  42f6ca:	push   edx
  42f6cb:	jbe    0x42f730
  42f6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6ce:	dec    ecx
  42f6cf:	arpl   di,di
  42f6d1:	mov    ch,0x6e
  42f6d3:	push   0xc2915914
  42f6d8:	jmp    FWORD PTR [ebx-0x22]
  42f6db:	out    dx,eax
  42f6dc:	cmp    DWORD PTR [ebx+eiz*1-0x61],ebp
  42f6e0:	cld    
  42f6e1:	xchg   esi,eax
  42f6e2:	lods   eax,DWORD PTR ds:[esi]
  42f6e3:	mov    bl,0xfa
  42f6e5:	mov    bh,0xf8
  42f6e7:	fimul  WORD PTR [esp+ebp*1+0x648cb33d]
  42f6ee:	inc    edx
  42f6ef:	data16 cli 
  42f6f1:	jbe    0x42f6f3
  42f6f3:	add    dh,ch
  42f6f5:	shl    BYTE PTR [si+0x5e],cl
  42f6f9:	out    dx,eax
  42f6fa:	ror    edi,0x19
  42f6fd:	out    0xbf,al
  42f6ff:	loop   0x42f6f4
  42f701:	or     edi,ebx
  42f703:	fdivr  st(2),st
  42f705:	adc    eax,eax
  42f707:	(bad)  
  42f708:	push   edi
  42f709:	mov    esi,0xa2db740b
  42f70e:	dec    edi
  42f70f:	ds mov bl,0xea
  42f712:	adc    DWORD PTR [ecx-0x4b408262],ebp
  42f718:	mov    ds:0xb0120093,al
  42f71d:	fmul   QWORD PTR [edi]
  42f71f:	push   ds
  42f720:	mov    bl,0xe6
  42f722:	out    0xb2,eax
  42f724:	pop    esp
  42f725:	data16 cli 
  42f727:	scas   al,BYTE PTR es:[edi]
  42f728:	ins    BYTE PTR es:[edi],dx
  42f729:	mov    BYTE PTR [esi+0x734719a2],bh
  42f72f:	xor    al,ah
  42f731:	add    eax,0x6e019c00
  42f736:	cmp    ch,0xab
  42f739:	add    eax,DWORD PTR [eax]
  42f73b:	jmp    0x5395ab8f
  42f740:	xchg   ecx,eax
  42f741:	pop    ebp
  42f742:	je     0x42f725
  42f744:	out    0x3a,eax
  42f746:	mov    WORD PTR [ecx+edx*8],ds
  42f749:	mov    dl,0xe7
  42f74b:	add    dh,bl
  42f74d:	ret    
  42f74e:	sti    
  42f74f:	inc    DWORD PTR [ebp+0x4b]
  42f752:	jmp    0xc1:0xee4b4566
  42f759:	add    BYTE PTR [edi+esi*8+0x5d],bl
  42f75d:	xor    DWORD PTR [ecx+0x47ff29d8],eax
  42f763:	pop    ds
  42f764:	sub    al,al
  42f766:	mov    esi,0xf40c033a
  42f76b:	cmp    DWORD PTR [ebx],ecx
  42f76d:	clc    
  42f76e:	les    eax,FWORD PTR [ebp+0x49fb04f2]
  42f774:	mov    ebp,0x2ef7741
  42f779:	jb     0x42f79a
  42f77b:	xor    BYTE PTR [ebp+0x10],bh
  42f77e:	shr    BYTE PTR [edx],1
  42f780:	div    DWORD PTR [ebp-0x1c]
  42f783:	add    BYTE PTR [ebx-0xa0eb518],0x89
  42f78a:	sub    DWORD PTR [edi-0x41a40008],edi
  42f790:	es xor al,0x8b
  42f793:	icebp  
  42f794:	adc    BYTE PTR fs:[esi],ch
  42f797:	xor    DWORD PTR [ebx-0x10],0x59
  42f79b:	mov    esp,edx
  42f79d:	(bad)  
  42f79e:	jnp    0x42f791
  42f7a0:	loop   0x42f80b
  42f7a2:	shl    al,1
  42f7a4:	cmc    
  42f7a5:	cmovb  ecx,DWORD PTR [ebx+0xe]
  42f7a9:	sub    eax,ebx
  42f7ab:	pop    edx
  42f7ac:	push   ds
  42f7ad:	dec    eax
  42f7ae:	adc    BYTE PTR [edx+0x42],ah
  42f7b1:	jne    0x42f81d
  42f7b3:	lods   eax,DWORD PTR ds:[esi]
  42f7b4:	mov    ss,WORD PTR [esp+esi*1-0x60f89dfb]
  42f7bb:	or     DWORD PTR [eax-0xfffff5c],edi
  42f7c1:	inc    ebp
  42f7c2:	cli    
  42f7c3:	imul   eax,DWORD PTR [edx-0x6274b5b0],0x45ee75b0
  42f7cd:	mov    dh,dh
  42f7cf:	stc    
  42f7d0:	push   edx
  42f7d1:	(bad)  
  42f7d2:	or     dh,BYTE PTR [edi-0x49]
  42f7d5:	repz into 
  42f7d7:	mov    eax,ds
  42f7d9:	fwait
  42f7da:	into   
  42f7db:	cli    
  42f7dc:	nop
  42f7dd:	das    
  42f7de:	adc    al,BYTE PTR [eax-0x63]
  42f7e1:	enter  0x56c9,0x54
  42f7e5:	lods   eax,DWORD PTR ds:[esi]
  42f7e6:	push   cs
  42f7e7:	add    BYTE PTR [edi+0x6d27d667],dh
  42f7ed:	sub    al,0x4
  42f7ef:	call   0x46ff60
  42f7f4:	into   
  42f7f5:	fldenv [ebx]
  42f7f7:	jne    0x42f7fa
  42f7f9:	in     al,0xc0
  42f7fb:	cmp    ebx,DWORD PTR [esi+0x65b2f9ad]
  42f801:	pop    edi
  42f802:	jg     0x42f84f
  42f804:	pushf  
  42f805:	add    edi,ebx
  42f807:	mov    dl,0x5d
  42f809:	jno    0x42f7ef
  42f80b:	test   ch,bl
  42f80d:	ss sbb eax,0xe4a89f66
  42f813:	lds    ebx,FWORD PTR ss:[ebx+0x774c8705]
  42f81a:	std    
  42f81b:	in     eax,dx
  42f81c:	and    al,0x96
  42f81e:	(bad)  
  42f81f:	cli    
  42f820:	sub    al,0x43
  42f822:	aam    0xfa
  42f824:	add    BYTE PTR [eax],al
  42f826:	nop
  42f827:	not    DWORD PTR [ebx]
  42f829:	inc    eax
  42f82a:	popf   
  42f82b:	out    dx,al
  42f82c:	ds jae 0x42f7cf
  42f82f:	cmp    al,0x74
  42f831:	mov    BYTE PTR [eax],cl
  42f833:	push   cs
  42f834:	jle    0x42f882
  42f836:	mov    DWORD PTR [ecx+0x78],esp
  42f839:	shl    DWORD PTR [esi+0x67],0x2d
  42f83d:	rcr    ch,0x2c
  42f840:	jbe    0x42f8a6
  42f842:	test   DWORD PTR [ebx],eax
  42f844:	mov    di,0x6066
  42f848:	adc    eax,0x55177a44
  42f84d:	add    al,0x9d
  42f84f:	inc    ebx
  42f850:	ds adc al,0xc5
  42f853:	cli    
  42f854:	sbb    cl,al
  42f856:	dec    edx
  42f857:	push   0x6042e9cc
  42f85c:	pop    ebp
  42f85d:	(bad)  
  42f85e:	stos   BYTE PTR es:[edi],al
  42f85f:	mov    esi,DWORD PTR [esi+0x660ab179]
  42f865:	out    0x26,eax
  42f867:	add    ebp,DWORD PTR [esi-0x2d]
  42f86a:	adc    WORD PTR [edx+edi*8+0x3e],0x3
  42f870:	jmp    0x6d529578
  42f875:	mov    cs,WORD PTR [edx]
  42f877:	pusha  
  42f878:	call   0x49501ef5
  42f87d:	add    al,0x9d
  42f87f:	add    ah,BYTE PTR [eax-0x31]
  42f882:	mov    ds:0x1efd3d85,al
  42f887:	(bad)
  42f88b:	add    BYTE PTR [ebp-0x24004c75],bl
  42f891:	cmp    bl,BYTE PTR [edi-0x31]
  42f894:	call   0xdd3a:0xce02e48d
  42f89b:	inc    ebx
  42f89c:	mov    ds:0xa0d85d43,eax
  42f8a1:	push   ss
  42f8a2:	(bad)  
  42f8a3:	jno    0x42f920
  42f8a5:	pop    esp
  42f8a6:	outs   dx,DWORD PTR ds:[esi]
  42f8a7:	out    dx,eax
  42f8a8:	xchg   esi,eax
  42f8a9:	mov    edi,DWORD PTR [ebx+0x5f3aa213]
  42f8af:	iret   
  42f8b0:	jp     0x42f835
  42f8b2:	int    0x3
  42f8b4:	or     DWORD PTR [edi-0x7c612e93],esi
  42f8ba:	(bad)  
  42f8bb:	sti    
  42f8bc:	lock (bad) 
  42f8be:	jmp    DWORD PTR [ebx-0x79]
  42f8c1:	push   edi
  42f8c2:	sar    dh,1
  42f8c4:	neg    esi
  42f8c6:	punpckhdq mm0,QWORD PTR [ebx+0x4b71ff63]
  42f8cd:	arpl   WORD PTR [esi],si
  42f8cf:	mov    esi,0x960b134d
  42f8d4:	push   0xffffffd0
  42f8d6:	pop    es
  42f8d7:	dec    edi
  42f8d8:	and    cl,BYTE PTR [ebp+0x73]
  42f8db:	add    al,0x1e
  42f8dd:	cmp    eax,0x29ee6fa
  42f8e2:	(bad)  
  42f8e3:	fstp   DWORD PTR [ebp+0x293c3631]
  42f8e9:	in     eax,dx
  42f8ea:	adc    DWORD PTR [esi+ebx*8-0x2d],esp
  42f8ee:	add    edx,edx
  42f8f0:	add    BYTE PTR [eax],al
  42f8f2:	outs   dx,BYTE PTR ds:[esi]
  42f8f3:	aam    0x9
  42f8f5:	bound  eax,QWORD PTR [ebx]
  42f8f7:	or     ebp,DWORD PTR [ecx]
  42f8f9:	ret    
  42f8fa:	test   DWORD PTR ds:0x15877eff,edx
  42f900:	xchg   esp,esi
  42f902:	mov    ds,WORD PTR [ebx+0x44]
  42f905:	test   DWORD PTR [ebp+0x46],edx
  42f908:	inc    cl
  42f90a:	mov    ds:0x236aa367,al
  42f90f:	pop    ebx
  42f910:	cli    
  42f911:	cdq    
  42f912:	lahf   
  42f913:	addr16 or al,0x1a
  42f916:	pop    ecx
  42f917:	pop    ds
  42f918:	mov    edi,0x7e66c372
  42f91d:	lods   al,BYTE PTR ds:[esi]
  42f91e:	xor    bl,BYTE PTR [ebp+ebp*1+0x29]
  42f922:	push   esi
  42f923:	loop   0x42f99b
  42f925:	jmp    0xe94e99c8
  42f92a:	(bad)  
  42f92b:	repnz addr16 mov eax,ds:0x1fce
  42f930:	add    BYTE PTR [ecx],al
  42f932:	mov    cl,0xd5
  42f934:	(bad)  
  42f935:	call   0x714c4f
  42f93a:	mov    edi,0xffc5bd8
  42f93f:	dec    eax
  42f940:	ss mov esi,eax
  42f943:	adc    DWORD PTR [eax-0x78],edx
  42f946:	and    edi,esp
  42f948:	fs inc eax
  42f94a:	int3   
  42f94b:	push   es
  42f94c:	xor    BYTE PTR [eax],al
  42f94e:	je     0x42f981
  42f950:	dec    ecx
  42f951:	(bad)  
  42f952:	stc    
  42f953:	pop    esi
  42f954:	cmc    
  42f955:	adc    eax,0xf4e40000
  42f95a:	aas    
  42f95b:	add    ch,cl
  42f95d:	inc    ebx
  42f95e:	fidivr DWORD PTR [ebx]
  42f960:	not    DWORD PTR [edx+0x51]
  42f963:	push   edi
  42f964:	call   0x81ea:0x1cb9cbe
  42f96b:	enter  0x9bad,0xd6
  42f96f:	cmp    ebp,edi
  42f971:	push   edx
  42f972:	das    
  42f973:	push   ebx
  42f974:	xlat   BYTE PTR ds:[ebx]
  42f975:	xor    BYTE PTR [ecx-0x2b40dbab],al
  42f97b:	(bad)  
  42f97c:	and    ebp,edx
  42f97e:	jle    0x42f940
  42f980:	or     BYTE PTR [eax],dl
  42f982:	dec    ebx
  42f983:	push   edi
  42f984:	jae    0x42f9d9
  42f986:	(bad)  
  42f987:	(bad)  
  42f988:	jmp    0xecb8ef6e
  42f98d:	call   0x42298da5
  42f992:	cli    
  42f993:	test   BYTE PTR [ebp+ecx*1-0x21730840],0x43
  42f99b:	out    0x63,eax
  42f99d:	push   ebx
  42f99e:	(bad)  
  42f99f:	call   0x3f1602
  42f9a4:	lods   al,BYTE PTR ds:[esi]
  42f9a5:	dec    edx
  42f9a6:	fnsave [ebp-0x37]
  42f9a9:	cmp    edx,edi
  42f9ab:	jg     0x42f961
  42f9ad:	add    DWORD PTR [ebx-0x1],ecx
  42f9b0:	or     edx,esp
  42f9b2:	cmc    
  42f9b3:	jne    0x42f952
  42f9b5:	arpl   WORD PTR [ebp+0x14],sp
  42f9b8:	popa   
  42f9b9:	pop    ecx
  42f9ba:	mov    esi,0x150000ff
  42f9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9c0:	pop    esi
  42f9c1:	jle    0x42f993
  42f9c3:	pop    edi
  42f9c4:	gs xchg al,ah
  42f9c7:	or     ebx,DWORD PTR [ebx+0xc]
  42f9ca:	scas   al,BYTE PTR es:[edi]
  42f9cb:	sub    eax,esp
  42f9cd:	mov    esi,0x7e5bce16
  42f9d2:	sar    BYTE PTR [edi],1
  42f9d4:	gs cs pop ebp
  42f9d7:	inc    ebx
  42f9d8:	mov    ah,0x75
  42f9da:	popf   
  42f9db:	imul   eax,DWORD PTR [ebx+eax*1-0x63],0xffffffb1
  42f9e0:	or     ebp,DWORD PTR [eax-0x6b]
  42f9e3:	sti    
  42f9e4:	ret    0x42ff
  42f9e7:	ret    
  42f9e8:	jmp    0x6c232cec
  42f9ed:	jle    0x42f9af
  42f9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9f0:	inc    BYTE PTR [esi-0x3cfec026]
  42f9f6:	push   ds
  42f9f7:	cmp    DWORD PTR [esi-0x7a],0xffffffcd
  42f9fb:	out    0x70,al
  42f9fd:	jae    0x42fa7b
  42f9ff:	call   0x55ebfdea
  42fa04:	leave  
  42fa05:	(bad)  
  42fa06:	repz loope 0x42f9f8
  42fa09:	xlat   BYTE PTR ds:[ebx]
  42fa0a:	push   ds
  42fa0b:	lods   eax,DWORD PTR ds:[esi]
  42fa0c:	(bad)  
  42fa0d:	jae    0x42fa5b
  42fa0f:	rol    al,1
  42fa11:	or     ebx,DWORD PTR [esi+0x70facf24]
  42fa17:	arpl   WORD PTR [ebx+0x44],di
  42fa1a:	mov    ebp,0x6d733ee5
  42fa1f:	ror    BYTE PTR [eax],1
  42fa21:	inc    DWORD PTR [eax]
  42fa23:	add    bl,ah
  42fa25:	iret   
  42fa26:	ror    BYTE PTR [edi],0x9e
  42fa29:	sub    al,0x7c
  42fa2b:	inc    esp
  42fa2c:	mov    ecx,0x16dbc7e1
  42fa31:	add    ah,dh
  42fa33:	and    dl,0xd5
  42fa36:	shr    esp,0x9f
  42fa39:	and    eax,0x5c926a12
  42fa3e:	std    
  42fa3f:	dec    DWORD PTR [edx-0x7fbc9abb]
  42fa45:	int3   
  42fa46:	stc    
  42fa47:	out    dx,eax
  42fa48:	pop    edx
  42fa49:	pop    esp
  42fa4a:	fwait
  42fa4b:	neg    DWORD PTR [ecx]
  42fa4d:	inc    ebx
  42fa4e:	je     0x42fa75
  42fa50:	and    cl,dh
  42fa52:	int3   
  42fa53:	jnp    0x42f9f2
  42fa55:	jg     0x42f9fc
  42fa57:	add    dl,bl
  42fa59:	(bad)
  42fa5c:	cmp    dh,BYTE PTR [ebx]
  42fa5e:	gs inc edx
  42fa60:	scas   al,BYTE PTR es:[edi]
  42fa61:	mov    DWORD PTR [di+0x5ed1],eax
  42fa66:	mov    ecx,0xe3679db4
  42fa6b:	xor    al,0x5d
  42fa6d:	ret    
  42fa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa6f:	jge    0x42fa32
  42fa71:	push   0x65
  42fa73:	mov    bh,0x26
  42fa75:	pop    esp
  42fa76:	(bad)  
  42fa77:	inc    ebx
  42fa78:	add    dh,bh
  42fa7a:	push   cs
  42fa7b:	add    al,0x9d
  42fa7d:	inc    eax
  42fa7e:	loopne 0x42fa83
  42fa80:	cmp    edx,0x10
  42fa83:	ins    BYTE PTR es:[edi],dx
  42fa84:	push   edi
  42fa85:	mov    edi,0x5be8
  42fa8a:	loopne 0x42fa65
  42fa8c:	call   0x607abc94
  42fa91:	(bad)  
  42fa92:	dec    DWORD PTR [ecx-0x3de4983d]
  42fa98:	sbb    al,0x7d
  42fa9a:	or     ebp,DWORD PTR cs:[ecx+0x4]
  42fa9e:	popf   
  42fa9f:	add    cl,BYTE PTR [esi]
  42faa1:	push   ebp
  42faa2:	dec    esp
  42faa3:	mov    dl,0x65
  42faa5:	test   al,0x9a
  42faa7:	xchg   al,ch
  42faa9:	add    ebx,DWORD PTR [ebp-0x2341000a]
  42faaf:	mov    ?,WORD PTR [ebx]
  42fab1:	jecxz  0x42fada
  42fab3:	(bad)  
  42fab4:	xlat   BYTE PTR ds:[ebx]
  42fab5:	jb     0x42fa56
  42fab7:	adc    edi,DWORD PTR [edi+0x3b8dc895]
  42fabd:	loope  0x42fad0
  42fabf:	ret    0xea0f
  42fac2:	fisttp WORD PTR [edx-0x20f9dabc]
  42fac8:	ffreep st(0)
  42faca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42facb:	(bad)  
  42facc:	pop    ss
  42facd:	bound  esp,QWORD PTR [edx+0x3]
  42fad0:	aaa    
  42fad1:	fnstcw WORD PTR [ebx+0xa]
  42fad4:	xchg   DWORD PTR [eiz*2+0x1ba70f8a],edi
  42fadb:	pusha  
  42fadc:	add    BYTE PTR [edx-0x23],ch
  42fadf:	(bad)  
  42fae0:	jle    0x42fa8b
  42fae2:	dec    edx
  42fae3:	fldcw  WORD PTR fs:[edx-0x24]
  42fae7:	out    dx,eax
  42fae8:	out    0xb1,al
  42faea:	jno    0x42fb2e
  42faec:	aas    
  42faed:	stos   BYTE PTR es:[edi],al
  42faee:	add    BYTE PTR [eax],al
  42faf0:	mov    cl,0xe6
  42faf2:	out    0xa7,eax
  42faf4:	jmp    0x42fb55
  42faf6:	jmp    FWORD PTR [ecx-0x15]
  42faf9:	push   esi
  42fafa:	cli    
  42fafb:	jae    0x42fb58
  42fafd:	pusha  
  42fafe:	out    0x7a,eax
  42fb00:	pop    es
  42fb01:	pop    ebx
  42fb02:	cli    
  42fb03:	stos   DWORD PTR es:[edi],eax
  42fb04:	push   es
  42fb05:	pop    ebx
  42fb06:	push   ebx
  42fb07:	jb     0x42fb73
  42fb09:	fsub   st(3),st
  42fb0b:	mov    ecx,0xa8800378
  42fb10:	scas   al,BYTE PTR es:[edi]
  42fb11:	mov    cl,BYTE PTR [ecx+edi*2+0x68]
  42fb15:	ret    
  42fb16:	std    
  42fb17:	cmc    
  42fb18:	sub    eax,0x27b6021b
  42fb1d:	in     eax,0x2
  42fb1f:	popa   
  42fb20:	or     edx,DWORD PTR [edx+0x58]
  42fb23:	push   esi
  42fb24:	aaa    
  42fb25:	test   eax,ecx
  42fb27:	add    dh,ch
  42fb29:	add    DWORD PTR [ebp-0x182e6b83],ecx
  42fb2f:	mov    BYTE PTR [ecx],al
  42fb31:	aad    0x81
  42fb33:	inc    ebp
  42fb34:	mov    esp,0x29f343d7
  42fb39:	pushf  
  42fb3a:	jmp    0xa3ab:0xe2c67750
  42fb41:	loopne 0x42fb38
  42fb43:	test   BYTE PTR [edx+ebx*2+0x674e77e],dh
  42fb4a:	add    BYTE PTR [ebp+0x3249b641],cl
  42fb50:	(bad)  
  42fb51:	fadd   QWORD PTR [ebx-0x8]
  42fb54:	add    BYTE PTR [eax],al
  42fb56:	ret    
  42fb57:	cwde   
  42fb58:	jmp    0x818b:0x67410
  42fb5f:	out    0x84,al
  42fb61:	add    BYTE PTR [esi+0x40e8bb16],bh
  42fb67:	pop    edx
  42fb68:	outs   dx,DWORD PTR ds:[esi]
  42fb69:	adc    BYTE PTR [ebp+0x52],0x82
  42fb6d:	inc    ebp
  42fb6e:	sti    
  42fb6f:	jle    0x42fb30
  42fb71:	popa   
  42fb72:	ss (bad) 
  42fb74:	jp     0x42fbf3
  42fb76:	sti    
  42fb77:	ins    BYTE PTR es:[edi],dx
  42fb78:	jo     0x42fb8a
  42fb7a:	mov    ah,0x43
  42fb7c:	cmc    
  42fb7d:	mov    dh,0xb
  42fb7f:	test   al,0xbf
  42fb81:	cdq    
  42fb82:	sahf   
  42fb83:	pop    esp
  42fb84:	push   ebp
  42fb85:	neg    DWORD PTR [ebx]
  42fb87:	fdivr  QWORD PTR [eax+esi*1]
  42fb8a:	or     ebp,DWORD PTR [eax-0x28b80137]
  42fb90:	push   es
  42fb91:	xor    bh,BYTE PTR [esi+0x33]
  42fb94:	cmc    
  42fb95:	lss    ebx,FWORD PTR ds:0xf26cc3f9
  42fb9c:	xor    BYTE PTR [esp+eax*4-0x62f0fdae],al
  42fba3:	jns    0x42fbdb
  42fba5:	xchg   DWORD PTR [ecx-0x3d419e06],esp
  42fbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbac:	data16 cli 
  42fbae:	push   0xa2abf11b
  42fbb3:	fnstcw WORD PTR [esi]
  42fbb5:	shl    DWORD PTR [ecx+0x87145b],0x0
  42fbbc:	pop    eax
  42fbbd:	push   ebx
  42fbbe:	fadd   DWORD PTR [ecx]
  42fbc0:	into   
  42fbc1:	sbb    eax,0xf18af2c3
  42fbc6:	or     dl,BYTE PTR ds:[ebx+0x24]
  42fbca:	dec    ecx
  42fbcc:	sbb    ch,bh
  42fbce:	lock push es
  42fbd0:	bound  ebp,QWORD PTR [edx-0x10]
  42fbd3:	je     0x42fb72
  42fbd5:	imul   edi,DWORD PTR [esi-0x42],0xffffff9f
  42fbd9:	add    al,0xce
  42fbdb:	xchg   al,bl
  42fbdd:	push   ebx
  42fbde:	fadd   DWORD PTR [esi+ecx*4]
  42fbe1:	popf   
  42fbe2:	shl    edx,0x4a
  42fbe5:	out    0x50,al
  42fbe7:	je     0x42fb7e
  42fbe9:	mov    al,ds:0xc5b45e03
  42fbee:	add    esp,edi
  42fbf0:	je     0x42fbc6
  42fbf2:	mov    edi,0xef6c0507
  42fbf7:	push   es
  42fbf8:	bound  ebp,QWORD PTR [edx-0x25]
  42fbfb:	imul   edi,DWORD PTR [ebx-0x5e417c10],0x9e661874
  42fc05:	cmp    al,0x50
  42fc07:	pop    edx
  42fc08:	adc    dh,BYTE PTR [eax+0x7f]
  42fc0b:	int    0x88
  42fc0d:	push   ebx
  42fc0e:	cmp    DWORD PTR [eax],eax
  42fc10:	mov    bl,BYTE PTR [ebp-0x27]
  42fc13:	inc    DWORD PTR [edi]
  42fc15:	aaa    
  42fc16:	ins    BYTE PTR es:[edi],dx
  42fc17:	inc    esp
  42fc18:	xchg   ebp,eax
  42fc19:	push   0xffffffef
  42fc1b:	pop    es
  42fc1c:	fiadd  DWORD PTR [ecx]
  42fc1e:	call   0x4142fcf8
  42fc23:	into   
  42fc24:	call   0xe7849883
  42fc29:	loop   0x42fc62
  42fc2b:	out    0xe8,eax
  42fc2d:	add    DWORD PTR [ebx],0x5
  42fc30:	repnz lods eax,DWORD PTR ds:[esi]
  42fc32:	sti    
  42fc33:	aas    
  42fc34:	in     al,0x33
  42fc36:	popf   
  42fc37:	mov    WORD PTR ds:0x264b47ca,fs
  42fc3d:	jmp    DWORD PTR [edx+0x1b576dad]
  42fc43:	addr16 mov eax,0xab85efcd
  42fc49:	pop    ebx
  42fc4a:	fisubr DWORD PTR [edx+0x6c]
  42fc4d:	inc    BYTE PTR [edx-0x11bc93a8]
  42fc53:	or     eax,DWORD PTR [ecx+0x4a]
  42fc56:	lahf   
  42fc57:	add    ch,cl
  42fc59:	frstor [ebp-0x670dff43]
  42fc5f:	test   DWORD PTR [ebx],ebp
  42fc61:	pop    esp
  42fc62:	jmp    0xe8c2:0xa07ff357
  42fc69:	pop    ebx
  42fc6a:	or     bl,dl
  42fc6c:	leave  
  42fc6d:	gs ret 
  42fc6f:	ffree  st(0)
  42fc71:	add    al,0x24
  42fc73:	mov    esi,0xfe56a5bc
  42fc78:	call   0xe118a680
  42fc7d:	add    ecx,esi
  42fc7f:	int    0xf0
  42fc81:	fs mov cl,0x4a
  42fc84:	test   bl,0x0
  42fc87:	add    BYTE PTR [edx],dl
  42fc89:	ins    DWORD PTR es:[edi],dx
  42fc8a:	clc    
  42fc8b:	fs xchg ecx,eax
  42fc8d:	or     cl,BYTE PTR [edx+0x28f3ad0f]
  42fc93:	add    al,0xb8
  42fc95:	add    al,0xe8
  42fc97:	add    ebx,DWORD PTR [ebp+0x65b6ffcd]
  42fc9d:	mov    esi,0x9a4cbafb
  42fca2:	out    0xea,eax
  42fca4:	sahf   
  42fca5:	add    dh,bl
  42fca7:	pop    eax
  42fca8:	dec    edx
  42fca9:	mov    esi,0xa7ba64e7
  42fcae:	dec    ebp
  42fcaf:	inc    ecx
  42fcb0:	fistp  DWORD PTR [ecx-0x6]
  42fcb3:	inc    esi
  42fcb4:	inc    eax
  42fcb5:	mov    esi,0xd35965fb
  42fcba:	sbb    ah,BYTE PTR [edx-0x26]
  42fcbd:	or     eax,DWORD PTR [edi-0x45aebee1]
  42fcc3:	and    al,0x0
  42fcc5:	(bad)  
  42fcc7:	jmp    0xa18aec4e
  42fccc:	jp     0x42fcd9
  42fcce:	sti    
  42fccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcd0:	test   BYTE PTR [edx+0x58d9017c],0xfa
  42fcd7:	jmp    0x29707548
  42fcdc:	pusha  
  42fcdd:	mov    ecx,0x57612bc8
  42fce2:	stos   BYTE PTR es:[edi],al
  42fce3:	call   0x72974edd
  42fce8:	jmp    0x5800:0x3f4eb2
  42fcef:	fild   QWORD PTR [ebx]
  42fcf1:	in     eax,0x9e
  42fcf3:	add    ah,BYTE PTR [esi-0xf]
  42fcf6:	ror    DWORD PTR [esi],0xe0
  42fcf9:	xchg   edx,eax
  42fcfa:	pop    ebp
  42fcfb:	push   edi
  42fcfc:	sub    eax,0xfbb6a792
  42fd01:	scas   al,BYTE PTR es:[edi]
  42fd02:	xchg   ebx,eax
  42fd03:	dec    BYTE PTR [esi]
  42fd05:	sub    DWORD PTR [ecx-0x721d1081],esp
  42fd0b:	or     al,0x84
  42fd0d:	lods   al,BYTE PTR ds:[esi]
  42fd0e:	sahf   
  42fd0f:	add    al,BYTE PTR [eax]
  42fd11:	bound  edi,QWORD PTR [ebx-0x3bfff05a]
  42fd17:	dec    BYTE PTR [edx+0x56]
  42fd1a:	xchg   edi,eax
  42fd1b:	cmp    al,0xff
  42fd1d:	push   edx
  42fd1e:	jae    0x42fd88
  42fd20:	push   ss
  42fd21:	(bad)  
  42fd22:	cli    
  42fd23:	cli    
  42fd24:	(bad)  
  42fd25:	inc    esp
  42fd27:	fnsave [ebx+0x8]
  42fd2a:	jae    0x42fcf2
  42fd2c:	add    eax,0xffffffc3
  42fd2f:	(bad)  
  42fd30:	fwait
  42fd31:	add    BYTE PTR [edx+eax*1+0x3917564b],dh
  42fd38:	call   DWORD PTR [edx+0x73]
  42fd3b:	push   0x5ae9ff16
  42fd40:	cmc    
  42fd41:	xlat   BYTE PTR ds:[ebx]
  42fd42:	cmp    ebx,eax
  42fd44:	add    eax,0x20b84
  42fd49:	add    BYTE PTR [ebx-0x7600e99c],dh
  42fd4f:	mov    dh,0xa
  42fd51:	inc    eax
  42fd52:	add    BYTE PTR [eax],al
  42fd54:	je     0x42fd35
  42fd56:	jo     0x42fd60
  42fd58:	out    dx,eax
  42fd59:	sbb    al,0x60
  42fd5b:	push   ss
  42fd5c:	inc    esp
  42fd5d:	add    cl,BYTE PTR [ecx-0x3220afa3]
  42fd63:	pop    ecx
  42fd64:	call   FWORD PTR [ecx]
  42fd66:	push   es
  42fd67:	mov    bh,0x8a
  42fd69:	lock out dx,al
  42fd6b:	(bad)  [edi+eax*4-0xf17f7b8]
  42fd72:	jp     0x42fd5c
  42fd74:	aaa    
  42fd75:	cs pop es
  42fd77:	or     DWORD PTR [ebx+ebx*2+0x73],0x11
  42fd7c:	into   
  42fd7d:	push   ds
  42fd7e:	jecxz  0x42fd88
  42fd80:	mov    ebp,0x3c6a1a40
  42fd85:	xchg   DWORD PTR [eax+0x24],ebx
  42fd88:	pop    esp
  42fd89:	push   0xf1024687
  42fd8e:	scas   al,BYTE PTR es:[edi]
  42fd8f:	inc    esi
  42fd90:	popf   
  42fd91:	pop    ebp
  42fd92:	or     eax,0xd5f5bab
  42fd97:	stos   DWORD PTR es:[edi],eax
  42fd98:	fsubr  st(2),st
  42fd9a:	sbb    ch,0x9a
  42fd9d:	push   0x68e5c044
  42fda2:	scas   al,BYTE PTR es:[edi]
  42fda3:	cli    
  42fda4:	retf   0xe0e0
  42fda7:	or     esi,DWORD PTR [edx+edx*8-0x3b]
  42fdab:	adc    esp,DWORD PTR [esi+edx*4]
  42fdae:	out    dx,al
  42fdaf:	ss (bad) 
  42fdb1:	aaa    
  42fdb2:	add    al,0x89
  42fdb4:	mov    al,ah
  42fdb6:	fcom   DWORD PTR [edi]
  42fdb8:	add    BYTE PTR [eax],al
  42fdba:	mov    edx,0x28faf296
  42fdbf:	cmp    esi,DWORD PTR [ecx+0x696aa51]
  42fdc5:	sti    
  42fdc6:	mov    BYTE PTR [edi],al
  42fdc8:	hlt    
  42fdc9:	aas    
  42fdca:	popf   
  42fdcb:	ror    al,cl
  42fdcd:	sti    
  42fdce:	(bad)  
  42fdcf:	sub    al,bl
  42fdd1:	add    eax,esi
  42fdd3:	lock fcom DWORD PTR [ebx]
  42fdd6:	jmp    0x42fddb
  42fdd8:	sar    DWORD PTR gs:[eax-0x4],0x1c
  42fddd:	pop    ebp
  42fdde:	xchg   ecx,eax
  42fddf:	iret   
  42fde0:	or     edi,ebx
  42fde2:	lock das 
  42fde4:	pop    ebp
  42fde5:	adc    al,0x79
  42fde7:	cmp    edi,DWORD PTR [esi+0x602627ff]
  42fded:	pop    edx
  42fdee:	repz ror BYTE PTR [ebp+edi*4-0x5b],0x6b
  42fdf4:	mov    bh,0x86
  42fdf6:	xor    edx,ebp
  42fdf8:	push   0xb
  42fdfa:	pushf  
  42fdfb:	imul   edi,esi,0x51
  42fdfe:	es fwait
  42fe00:	or     eax,0x895fe0b3
  42fe05:	leave  
  42fe06:	pop    esp
  42fe07:	dec    edx
  42fe08:	out    dx,al
  42fe09:	push   es
  42fe0a:	fadd   QWORD PTR [ecx]
  42fe0c:	outs   dx,BYTE PTR ds:[esi]
  42fe0d:	rcr    BYTE PTR [edx+0x618cef89],1
  42fe13:	push   es
  42fe14:	pop    esi
  42fe15:	int3   
  42fe16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe17:	inc    ebx
  42fe18:	xchg   DWORD PTR [ebx],ecx
  42fe1a:	mov    ds:0xc86f43,al
  42fe1f:	add    BYTE PTR [esi+0x14102387],ah
  42fe25:	jg     0x42fe9b
  42fe27:	popa   
  42fe28:	out    0x54,eax
  42fe2a:	pop    ebx
  42fe2b:	mov    dl,dl
  42fe2d:	push   ebx
  42fe2e:	popa   
  42fe2f:	(bad)  
  42fe30:	fistp  QWORD PTR [esi+0x60]
  42fe33:	popa   
  42fe34:	(bad)  
  42fe35:	push   esp
  42fe36:	out    0x3,eax
  42fe38:	popf   
  42fe39:	add    ah,BYTE PTR [edx]
  42fe3b:	mov    BYTE PTR [edx-0x619dbead],bh
  42fe41:	add    ch,cl
  42fe43:	add    esi,DWORD PTR [ebp-0x589cfcf0]
  42fe49:	mov    bl,0x1f
  42fe4b:	inc    ebp
  42fe4c:	mov    ds:0x868ebc02,al
  42fe51:	add    BYTE PTR [ebx+ebx*2],0xed
  42fe55:	jg     0x42fdea
  42fe57:	setge  BYTE PTR [edi-0x2211454e]
  42fe5e:	ins    DWORD PTR es:[edi],dx
  42fe5f:	ror    BYTE PTR [esi+0x6742fd81],0x74
  42fe66:	call   0x6bcac745
  42fe6b:	or     esp,DWORD PTR [edx]
  42fe6d:	cld    
  42fe6e:	ins    DWORD PTR es:[edi],dx
  42fe6f:	les    ebp,FWORD PTR [esi-0x6503d37b]
  42fe75:	xchg   ecx,ebx
  42fe77:	ins    BYTE PTR es:[edi],dx
  42fe78:	sar    BYTE PTR ds:0x431e61cb,0x3c
  42fe7f:	lds    ebx,FWORD PTR [ebx]
  42fe81:	cld    
  42fe82:	ins    DWORD PTR es:[edi],dx
  42fe83:	aam    0x0
  42fe85:	add    BYTE PTR [esi+0x16b8ffff],cl
  42fe8b:	mov    edx,0xcfd86407
  42fe90:	adc    ah,BYTE PTR [esi-0x5578f816]
  42fe96:	sbb    BYTE PTR [edi-0x25edc1f1],dh
  42fe9c:	jno    0x873d57db
  42fea2:	and    BYTE PTR [edi-0x4358ded],dh
  42fea8:	xchg   BYTE PTR [ecx*4+0x27e1497b],ch
  42feaf:	add    al,bl
  42feb1:	scas   eax,DWORD PTR es:[edi]
  42feb2:	call   0x5989:0x9eeb0002
  42feb9:	in     eax,0x11
  42febb:	add    DWORD PTR [edi+0x28],edi
  42febe:	mov    cl,0x2
  42fec0:	dec    eax
  42fec1:	fisttp QWORD PTR [esi]
  42fec3:	add    esp,edi
  42fec5:	jmp    0x42fe57
  42fec7:	inc    edx
  42fec8:	pop    edx
  42fec9:	xchg   edi,eax
  42feca:	loope  0x42ff48
  42fecc:	in     al,0x8c
  42fece:	loopne 0x42fed3
  42fed0:	add    BYTE PTR [ecx+eiz*1-0x52f28199],bh
  42fed7:	ret    
  42fed8:	cli    
  42fed9:	pushf  
  42feda:	mov    es,WORD PTR [esi+0x2b901544]
  42fee0:	dec    edi
  42fee1:	jo     0x42ff15
  42fee3:	dec    edi
  42fee4:	mov    BYTE PTR [edx+ecx*8+0xc8695b],bl
  42feeb:	add    ch,bh
  42feed:	pop    eax
  42feee:	sub    DWORD PTR [ecx],0x72
  42fef1:	or     bl,bh
  42fef3:	pop    esp
  42fef4:	cmc    
  42fef5:	pop    ebx
  42fef6:	(bad)  
  42fef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fef8:	jmp    0x42ff52
  42fefa:	test   DWORD PTR [edx-0x2242b5ff],ebp
  42ff00:	sahf   
  42ff01:	push   edi
  42ff02:	je     0x42ff04
  42ff04:	pop    eax
  42ff05:	loop   0x42ff7a
  42ff07:	hlt    
  42ff08:	jmp    0x42ff35
  42ff0a:	push   es
  42ff0b:	jmp    DWORD PTR [ecx+0x6]
  42ff0e:	call   0xf6254a54
  42ff13:	mov    bl,ah
  42ff15:	in     eax,0xd6
  42ff17:	test   DWORD PTR [esp+ebp*1],esi
  42ff1a:	or     ecx,DWORD PTR [ebx+0x14727df5]
  42ff20:	les    ebp,FWORD PTR [ebx*1-0x1d10bb7d]
  42ff27:	pop    es
  42ff28:	outs   dx,DWORD PTR ds:[esi]
  42ff29:	pop    DWORD PTR [edx]
  42ff2b:	lea    esi,[eax-0xa74f004]
  42ff31:	test   edx,eax
  42ff33:	sub    ecx,DWORD PTR [esi+0x37144c86]
  42ff39:	ror    BYTE PTR [edx],0x3b
  42ff3c:	jle    0x42ff78
  42ff3e:	add    DWORD PTR [esi+0x3f],edx
  42ff41:	das    
  42ff42:	add    al,BYTE PTR [ebx]
  42ff44:	jne    0x42ff3c
  42ff46:	jmp    0x2b3ff1a9
  42ff4b:	shl    BYTE PTR [edi-0x12],0xbf
  42ff4f:	jmp    0x42ff51
  42ff51:	add    BYTE PTR [ebx+0x7f],dh
  42ff54:	add    bh,BYTE PTR [ebx]
  42ff56:	dec    eax
  42ff57:	sub    cl,BYTE PTR [eax]
  42ff59:	jne    0x42ffd6
  42ff5b:	jg     0x42ff9f
  42ff5d:	add    al,0xf5
  42ff5f:	in     al,0xfa
  42ff61:	inc    DWORD PTR [esi+esi*1+0x2604c37]
  42ff68:	je     0x42ff77
  42ff6a:	out    dx,eax
  42ff6b:	inc    ecx
  42ff6c:	push   ds
  42ff6d:	add    al,0x9c
  42ff6f:	fwait
  42ff70:	cmc    
  42ff71:	dec    DWORD PTR [ebx-0x78]
  42ff74:	mov    edx,0x6c55875
  42ff79:	add    BYTE PTR [ecx-0x62ae1983],dl
  42ff7f:	in     al,0xc1
  42ff81:	or     ecx,esi
  42ff83:	sbb    BYTE PTR [ecx+0x7eb5a9bf],cl
  42ff89:	mov    edi,0x176beb9f
  42ff8e:	pop    eax
  42ff8f:	xchg   edi,eax
  42ff90:	pop    edx
  42ff91:	xchg   BYTE PTR ds:0x18fbe0e3,dl
  42ff97:	test   eax,0x2a1357d7
  42ff9c:	or     BYTE PTR [ecx],al
  42ff9e:	adc    BYTE PTR [edx],bl
  42ffa0:	hlt    
  42ffa1:	jae    0x42ff5d
  42ffa3:	adc    cl,0x7
  42ffa6:	add    eax,0xeafc478a
  42ffab:	aam    0x5b
  42ffad:	test   dl,ah
  42ffaf:	dec    edi
  42ffb0:	sbb    edi,ebx
  42ffb2:	xchg   ebx,eax
  42ffb3:	in     al,0xc1
  42ffb5:	pop    es
  42ffb6:	add    BYTE PTR [eax],al
  42ffb8:	shr    BYTE PTR [esi],cl
  42ffba:	push   es
  42ffbb:	call   0xfa9db11f
  42ffc0:	ret    0x5a2e
  42ffc3:	xchg   BYTE PTR [ebx+0x2f],ah
  42ffc6:	pop    ecx
  42ffc7:	jno    0x42ff6e
  42ffc9:	ror    al,cl
  42ffcb:	pop    es
  42ffcc:	push   edx
  42ffcd:	fmulp  st(0),st
  42ffcf:	pop    es
  42ffd0:	mov    ch,0x43
  42ffd2:	inc    esp
  42ffd3:	cli    
  42ffd4:	call   0x47f9:0x85d78578
  42ffdb:	cld    
  42ffdc:	mov    bl,ah
  42ffde:	push   esi
  42ffdf:	add    BYTE PTR [eax],cl
  42ffe1:	gs sbb ax,0xa926
  42ffe6:	push   es
  42ffe7:	cmp    ebx,ebx
  42ffe9:	push   edi
  42ffea:	ror    BYTE PTR [edi],cl
  42ffec:	push   0xffffffd6
  42ffee:	pop    edx
  42ffef:	out    0x4a,eax
  42fff1:	pop    ds
  42fff2:	popa   
  42fff3:	cli    
  42fff4:	mov    ds,WORD PTR [ebx]
  42fff6:	mov    ebx,0xa7026456
  42fffb:	pop    es
  42fffc:	popf   
  42fffd:	push   ecx
  42fffe:	adc    bl,BYTE PTR [edi-0x37]
  430001:	cli    
  430002:	rcr    BYTE PTR [edi+0x39],0x51
  430006:	leave  
  430007:	mov    ah,ah
  430009:	(bad)  
  43000a:	ins    DWORD PTR es:[edi],dx
  43000b:	enter  0x4826,0xe4
  43000f:	or     ebx,DWORD PTR [ebp-0x20efdd83]
  430015:	(bad)
  430018:	popf   
  430019:	pop    ebp
  43001a:	les    esi,FWORD PTR [ebp+0x516f0000]
  430020:	adc    al,0x28
  430022:	test   eax,0x6e5e9215
  430027:	es cmc 
  430029:	pop    esi
  43002a:	outs   dx,BYTE PTR ds:[esi]
  43002b:	(bad)  es:[ebx-0x75]
  43002f:	push   ecx
  430030:	jns    0x430090
  430032:	sbb    edx,DWORD PTR [edx+0x6b]
  430035:	push   ebp
  430036:	dec    esi
  430037:	jmp    0x1e50:0xfe7ed769
  43003e:	(bad)  
  43003f:	push   eax
  430040:	pop    ecx
  430041:	mov    cl,dl
  430043:	xchg   BYTE PTR [ecx-0x29],dl
  430046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430047:	xchg   DWORD PTR ds:0xaa7d99d7,ebp
  43004d:	unpcklps xmm0,XMMWORD PTR ds:0xb047466e
  430054:	setge  BYTE PTR es:[ebp+0x5f1d6f5d]
  43005c:	hlt    
  43005d:	add    al,0x9d
  43005f:	add    dl,BYTE PTR [ebx]
  430061:	enter  0x196,0xb6
  430065:	mov    ch,0xcf
  430067:	jnp    0x42fff4
  430069:	or     esp,DWORD PTR [esi-0x62fc8c7a]
  43006f:	add    dh,BYTE PTR [esi-0xbfe4bd]
  430075:	add    BYTE PTR [eax],al
  430077:	dec    edx
  430078:	cli    
  430079:	out    dx,al
  43007a:	and    al,0x60
  43007c:	test   bh,bl
  43007e:	gs retf 0xe9b6
  430082:	add    BYTE PTR [eax],al
  430084:	sahf   
  430085:	add    dh,BYTE PTR [eax+0x6a]
  430088:	fwait
  430089:	add    dh,BYTE PTR [ebx+ecx*2+0x24]
  43008d:	ret    0x9003
  430090:	mov    eax,ds:0x4be90c02
  430095:	mov    eax,0x5f78b624
  43009a:	cli    
  43009b:	pusha  
  43009c:	fild   DWORD PTR [ebx]
  43009e:	pop    ds
  43009f:	stos   BYTE PTR es:[edi],al
  4300a0:	push   ss
  4300a1:	(bad)  
  4300a2:	or     esi,DWORD PTR [edx+0x5b]
  4300a5:	push   0x17a9621b
  4300aa:	or     dl,BYTE PTR [ebx+ebp*8]
  4300ad:	mov    BYTE PTR [edi-0x13],al
  4300b0:	mov    ebp,0x8d2c3647
  4300b5:	aad    0xb
  4300b7:	jle    0x43009a
  4300b9:	add    eax,DWORD PTR [eax]
  4300bb:	jmp    0xf9b80360
  4300c0:	sbb    eax,0x5071fff0
  4300c5:	addr16 push edi
  4300c7:	push   edi
  4300c8:	pop    eax
  4300c9:	dec    esp
  4300ca:	test   BYTE PTR [ecx],ch
  4300cc:	retf   0xe62a
  4300cf:	or     BYTE PTR [edx+eiz*1],bl
  4300d2:	add    BYTE PTR [edx-0x2f],dh
  4300d5:	add    esi,ebx
  4300d7:	sub    BYTE PTR [ecx+0x6ae90802],ah
  4300dd:	push   es
  4300de:	jg     0x4300a9
  4300e0:	sahf   
  4300e1:	or     DWORD PTR [bx+si-0x2],ebp
  4300e5:	dec    esp
  4300e6:	cli    
  4300e7:	sbb    DWORD PTR [eax],eax
  4300e9:	add    al,bl
  4300eb:	jp     0x430134
  4300ed:	in     eax,0x5
  4300ef:	push   ecx
  4300f0:	jge    0x4300f2
  4300f2:	pop    edx
  4300f3:	add    eax,DWORD PTR [ebx-0x1d42103a]
  4300f9:	sub    BYTE PTR [edx-0x52],dl
  4300fc:	cmc    
  4300fd:	mov    edx,DWORD PTR [eax+ecx*4-0x10]
  430101:	jne    0x4300be
  430103:	pop    ecx
  430104:	cs push 0x4c
  430107:	scas   al,BYTE PTR es:[edi]
  430108:	xor    esp,eax
  43010a:	pop    ds
  43010b:	inc    edx
  43010c:	cli    
  43010d:	(bad)  
  43010e:	sub    DWORD PTR [edi],eax
  430110:	or     eax,DWORD PTR [eax+0x34]
  430113:	jp     0x4300e7
  430115:	mov    DWORD PTR [ecx+0x3c084f2],eax
  43011b:	xchg   DWORD PTR [eax],edx
  43011d:	add    DWORD PTR [ebx+eax*1],eax
  430120:	lea    esi,[eax+0x8]
  430123:	mov    BYTE PTR [eax],0x30
  430126:	hlt    
  430127:	add    al,BYTE PTR [eax]
  430129:	mov    eax,DWORD PTR [ebx]
  43012b:	jp     0x430174
  43012d:	sbb    BYTE PTR [ebp+0x3b],bh
  430130:	adc    cl,BYTE PTR [ebx+0x1c4779f3]
  430136:	ins    DWORD PTR es:[edi],dx
  430137:	cmp    edx,DWORD PTR [esi]
  430139:	xor    eax,DWORD PTR [edx+edi*2]
  43013c:	(bad)
  43013f:	xor    DWORD PTR ds:0x8189e800,0x879cc47
  430149:	add    DWORD PTR [ebx+edx*2+0xc7f9],0x51
  430151:	cmp    BYTE PTR [esi],al
  430153:	mov    ecx,edi
  430155:	scas   al,BYTE PTR es:[edi]
  430156:	loop   0x430111
  430158:	jbe    0x43010a
  43015a:	cmc    
  43015b:	mov    esi,DWORD PTR [ecx]
  43015d:	inc    BYTE PTR [ebx-0x39798c40]
  430163:	add    BYTE PTR [edx+eax*1-0x7d],dh
  430167:	psllw  mm6,QWORD PTR [edx]
  43016a:	push   cs
  43016b:	mov    ebx,DWORD PTR [ebp+0x24beff5d]
  430171:	xchg   DWORD PTR fs:[edx-0x5f],ecx
  430175:	rol    dh,cl
  430177:	add    edx,DWORD PTR [esi]
  430179:	popf   
  43017a:	push   es
  43017b:	mov    ebp,esp
  43017d:	arpl   WORD PTR [edi-0x391d5eb6],ax
  430183:	or     edx,DWORD PTR [esi]
  430185:	adc    al,0xc
  430187:	test   DWORD PTR [eax+edi*4-0xf],edx
  43018b:	push   eax
  43018c:	sub    BYTE PTR ds:0x9c1e50f4,ah
  430192:	repz dec edi
  430194:	sub    ch,BYTE PTR [edi]
  430196:	push   cs
  430197:	adc    bl,ch
  430199:	pop    ebx
  43019a:	add    ebx,0xfbc0e0a9
  4301a0:	pushf  
  4301a1:	mov    DWORD PTR gs:[ebp+edx*4-0x30],ecx
  4301a6:	ds out 0x81,eax
  4301a9:	outs   dx,BYTE PTR ds:[esi]
  4301aa:	push   esi
  4301ab:	cli    
  4301ac:	es je  0x43012f
  4301af:	cli    
  4301b0:	push   0x3e8acb
  4301b5:	add    BYTE PTR [ecx+0x3dfffe46],dl
  4301bb:	pop    esp
  4301bc:	int    0x72
  4301be:	push   ds
  4301bf:	pushf  
  4301c0:	xor    ecx,DWORD PTR [edi+0x20]
  4301c3:	sbb    DWORD PTR [eax+edx*2],edx
  4301c6:	sbb    BYTE PTR [ecx+0x1e],ah
  4301c9:	das    
  4301ca:	fnsave [ebx-0x4b471f38]
  4301d0:	jg     0x430191
  4301d2:	sub    DWORD PTR [edx],edi
  4301d4:	in     al,dx
  4301d5:	push   DWORD PTR [edi+ebp*1]
  4301d8:	mov    cl,0xe7
  4301da:	mov    ds:0x1efa5530,eax
  4301df:	xchg   esi,eax
  4301e0:	out    dx,al
  4301e1:	jmp    DWORD PTR [edi]
  4301e3:	nop
  4301e4:	jmp    0x8e81:0x2a02e073
  4301eb:	dec    esp
  4301ec:	sbb    DWORD PTR [ebx-0x62],ebx
  4301ef:	add    ch,cl
  4301f1:	add    ebx,DWORD PTR [eax]
  4301f3:	dec    ebp
  4301f4:	xchg   esp,eax
  4301f5:	or     ah,BYTE PTR [edx]
  4301f7:	xor    eax,0x8711576d
  4301fc:	hlt    
  4301fd:	pop    ecx
  4301fe:	push   edi
  4301ff:	dec    ebp
  430200:	add    BYTE PTR [edi+0x5ae94d78],dh
  430206:	shl    edx,1
  430208:	mov    al,gs:0x5ad94c4e
  43020e:	cmp    bh,BYTE PTR [esi+0x6b]
  430211:	dec    edi
  430212:	xor    al,0x4d
  430214:	leave  
  430215:	imul   edi,DWORD PTR [edx],0x1b
  430218:	ret    0x5a
  43021b:	add    BYTE PTR [ecx],bl
  43021d:	dec    ebp
  43021e:	xor    al,0xb
  430220:	and    dh,BYTE PTR ds:0x8721565d
  430226:	mov    ah,0x59
  430228:	pop    es
  430229:	dec    ebp
  43022a:	nop
  43022b:	cs mov ebx,0x618e994d
  430231:	neg    BYTE PTR [edi-0x5]
  430234:	sbb    eax,DWORD PTR [ebp+0x7d]
  430237:	or     ebx,DWORD PTR [edx+0x5a]
  43023a:	bound  eax,QWORD PTR [ebp-0x1f]
  43023d:	dec    esp
  43023e:	mov    ch,0x43
  430240:	ja     0x4301ee
  430242:	or     eax,0xe8f2104d
  430247:	mov    cl,0x40
  430249:	push   es
  43024a:	push   ecx
  43024b:	call   0x809c5150
  430250:	cli    
  430251:	aad    0xe9
  430253:	xchg   BYTE PTR [edx-0x3caca1fe],dl
  430259:	push   ebp
  43025b:	push   ecx
  43025c:	sbb    DWORD PTR [esp+esi*4+0x11],edx
  430260:	add    edx,DWORD PTR [edi]
  430262:	add    bl,al
  430264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430265:	inc    edi
  430266:	xor    al,0x49
  430268:	cmp    ecx,DWORD PTR ds:0x8d2600
  43026e:	pop    gs
  430270:	sahf   
  430271:	jns    0x430274
  430273:	ins    BYTE PTR es:[edi],dx
  430274:	fmulp  st(7),st
  430276:	adc    esp,DWORD PTR [edx+0x62]
  430279:	and    BYTE PTR [eax],cl
  43027b:	cs pop esi
  43027d:	lock das 
  43027f:	jmp    0x2e10284
  430284:	xchg   edi,ebp
  430286:	and    esp,eax
  430288:	sbb    esp,DWORD PTR [edx-0x24]
  43028b:	or     DWORD PTR fs:[ecx],edi
  43028e:	mov    cl,0xb7
  430290:	mov    ebp,0xe7b1d4dc
  430295:	das    
  430296:	fisttp DWORD PTR [esi-0x6]
  430299:	sbb    ah,cl
  43029b:	test   eax,0xb59eedbd
  4302a0:	xchg   ch,cl
  4302a2:	push   ds
  4302a3:	pop    eax
  4302a4:	pop    ss
  4302a5:	call   0x62950548
  4302aa:	outs   dx,BYTE PTR ds:[esi]
  4302ab:	mov    al,0x86
  4302ad:	mov    eax,ds:0x650a5182
  4302b2:	addr16 dec ebx
  4302b4:	cli    
  4302b5:	jmp    0xcd12c3d5
  4302ba:	scas   al,BYTE PTR es:[edi]
  4302bb:	dec    eax
  4302bc:	call   0x9ee9:0xbf7f95e9
  4302c3:	add    al,BYTE PTR [edi-0x20345ad4]
  4302c9:	call   0xdc4ec9e5
  4302ce:	iret   
  4302cf:	mov    al,0x51
  4302d1:	push   ecx
  4302d2:	int3   
  4302d3:	(bad)  
  4302d4:	cld    
  4302d5:	push   esi
  4302d6:	and    BYTE PTR [esp+eax*4+0x57],bl
  4302da:	xchg   esp,eax
  4302db:	xchg   BYTE PTR [ebx-0x4c00],ah
  4302e1:	sbb    BYTE PTR [ecx-0x9],0xff
  4302e5:	jae    0x4302e7
  4302e7:	add    BYTE PTR [ecx-0x56],al
  4302ea:	jae    0x4302f4
  4302ec:	imul   DWORD PTR [ebx-0x1e]
  4302ef:	(bad)  
  4302f0:	mov    ebx,0x18cfaa9
  4302f5:	(bad)  
  4302f7:	dec    DWORD PTR [ebx-0x64d6f122]
  4302fd:	test   eax,0xfae0ff83
  430302:	adc    bh,0xcf
  430305:	mov    eax,0xa89c858b
  43030a:	cmc    
  43030b:	call   FWORD PTR [esi+edi*1-0x3dc400dc]
  430312:	sub    eax,0x5a
  430315:	stos   BYTE PTR es:[edi],al
  430316:	cmc    
  430317:	add    al,0x44
  430319:	(bad)  
  43031a:	inc    DWORD PTR [ebx+ebx*2+0x38b053b]
  430321:	jle    0x4302eb
  430323:	lea    eax,[ecx+0x4bfff8d7]
  430329:	xlat   BYTE PTR ds:[ebx]
  43032a:	and    DWORD PTR [edx],ebp
  43032c:	cmp    ebp,DWORD PTR [edx-0x11ffb97f]
  430332:	mov    esi,0xba85c275
  430337:	shl    BYTE PTR [ebx+eax*4-0x7c5bcfc0],1
  43033e:	jnp    0x430330
  430340:	daa    
  430341:	mov    edi,0xb43bdfe2
  430346:	cmc    
  430347:	test   BYTE PTR [ebx+edi*1],al
  43034a:	sub    ch,BYTE PTR [edx+0x0]
  43034d:	add    ah,ah
  43034f:	add    DWORD PTR [eax+0x20],0x4
  430353:	jle    0x430312
  430355:	push   eax
  430356:	pop    ebx
  430357:	pop    esp
  430358:	ss push ss
  43035a:	popf   
  43035b:	cdq    
  43035c:	(bad)  
  43035d:	jle    0x430340
  43035f:	sub    al,0x79
  430361:	mov    edi,0x3ec5f28
  430366:	test   DWORD PTR [esi-0x286d03c3],esp
  43036c:	ds jae 0x43030f
  43036f:	fcomp  QWORD PTR [esi]
  430371:	add    BYTE PTR [esi+0x5e],dh
  430374:	adc    eax,eax
  430376:	and    BYTE PTR [ebx+ecx*8],bl
  430379:	add    esp,DWORD PTR [esp+ebp*1]
  43037c:	imul   ecx,DWORD PTR [ecx],0x1e
  43037f:	ja     0x430383
  430381:	add    al,ch
  430383:	pop    ecx
  430384:	mov    al,0xe7
  430386:	neg    BYTE PTR [edx]
  430388:	push   edx
  430389:	cli    
  43038a:	mov    ds,WORD PTR [ebx]
  43038c:	mov    eax,0x71e5459
  430391:	add    al,ch
  430393:	aam    0x67
  430395:	jle    0x4303e0
  430397:	dec    esp
  430398:	lods   eax,DWORD PTR ds:[esi]
  430399:	cs push esi
  43039b:	or     bl,BYTE PTR [ebx*1-0x416113]
  4303a2:	test   eax,0xe0d79202
  4303a7:	sbb    al,0x4
  4303a9:	push   edx
  4303aa:	adc    ah,BYTE PTR [edi]
  4303ac:	bound  ecx,QWORD PTR ds:0x1d165b5d
  4303b2:	add    BYTE PTR [eax],al
  4303b4:	dec    ebp
  4303b5:	xchg   edi,eax
  4303b6:	mov    esi,0x3c4971ff
  4303bb:	add    al,0xfb
  4303bd:	les    edi,FWORD PTR [esi+0xa0ebff]
  4303c3:	jl     0x43039d
  4303c5:	sbb    al,0x4
  4303c7:	in     al,0x31
  4303c9:	sbb    al,0x4
  4303cb:	mov    DWORD PTR [eax-0x62c1bef9],esi
  4303d1:	mov    eax,ds:0x2d8b000
  4303d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4303d7:	add    ebx,DWORD PTR [eax+esi*4-0xb3d0ea7]
  4303de:	test   al,0x3
  4303e0:	adc    al,0xa8
  4303e2:	pop    eax
  4303e3:	lea    eax,[ecx+0x4e]
  4303e6:	outs   dx,DWORD PTR ds:[esi]
  4303e7:	mov    ecx,0x569b7a92
  4303ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4303ed:	nop
  4303ee:	stos   DWORD PTR es:[edi],eax
  4303ef:	push   esi
  4303f0:	and    esi,edi
  4303f2:	lods   al,BYTE PTR ds:[esi]
  4303f3:	inc    eax
  4303f4:	ret    
  4303f5:	add    dh,BYTE PTR [esi+0x6b83ae56]
  4303fb:	rol    DWORD PTR [edx-0x1324ff4e],0x48
  430402:	or     DWORD PTR [eax+0x55edcf22],eax
  430408:	loope  0x430453
  43040a:	push   0x770457d9
  43040f:	aaa    
  430410:	inc    ebx
  430411:	add    al,0x36
  430413:	add    eax,0x6bd8bf10
  430418:	add    BYTE PTR [eax],al
  43041a:	fwait
  43041b:	aad    0xda
  43041d:	push   esi
  43041e:	aam    0x7c
  430420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430421:	mov    edx,0x8b334555
  430426:	ss test esp,edx
  430429:	out    dx,eax
  43042a:	imul   edx,DWORD PTR ds:0xe7caad9e,0x78
  430431:	inc    eax
  430432:	retf   
  430433:	add    dh,BYTE PTR [ebx*1-0x3d54d5b9]
  43043a:	cli    
  43043b:	scas   al,BYTE PTR es:[edi]
  43043c:	cdq    
  43043d:	lock push es
  43043f:	hlt    
  430440:	sub    BYTE PTR [eiz*4-0x5cbfa719],al
  430447:	add    bh,ah
  430449:	cmc    
  43044a:	fdiv   st(6),st
  43044c:	sub    BYTE PTR [edx+0x76000293],0x8b
  430453:	(bad)  
  430454:	jnp    0x4303fa
  430456:	fisttp WORD PTR [eax-0x22]
  430459:	jge    0x430439
  43045b:	dec    eax
  43045c:	xchg   esp,edi
  43045e:	and    bh,BYTE PTR [esi]
  430460:	ds jmp 0x24f302ce
  430466:	fisttp WORD PTR [eax-0x1]
  430469:	sahf   
  43046a:	repz out dx,al
  43046c:	out    dx,eax
  43046d:	fistp  DWORD PTR [esi+0x48]
  430470:	push   0xeba719d9
  430475:	pusha  
  430476:	inc    ebp
  430477:	pop    eax
  430478:	mov    ah,al
  43047a:	jmp    0x2800:0x1e5c7f
  430481:	std    
  430482:	mov    cl,0xac
  430484:	rol    DWORD PTR [eax+0x8dd8d0c],cl
  43048a:	add    BYTE PTR [edx+0x6c8113f3],bl
  430490:	pop    ebp
  430491:	pop    esp
  430492:	dec    edi
  430493:	add    DWORD PTR [edi-0x3c110632],esi
  430499:	xchg   DWORD PTR [ebx+0x7],esi
  43049c:	in     al,dx
  43049d:	jbe    0x4304e3
  43049f:	loope  0x43048a
  4304a1:	dec    esp
  4304a2:	je     0x430485
  4304a4:	pop    ss
  4304a5:	iret   
  4304a6:	test   DWORD PTR [ecx-0x6a],0x70290002
  4304ad:	into   
  4304ae:	repz mov esi,0x2914a402
  4304b4:	mov    eax,ds:0xd2e8f7c7
  4304b9:	jmp    0x9e7c:0xc7502cf9
  4304c0:	lahf   
  4304c1:	fdivr  DWORD PTR [ecx+0x744d2c3f]
  4304c7:	loope  0x430512
  4304c9:	out    dx,al
  4304ca:	xor    eax,DWORD PTR [eax]
  4304cc:	cli    
  4304cd:	inc    ebx
  4304ce:	cli    
  4304cf:	cmp    al,0xfa
  4304d2:	loop   0x4304d6
  4304d4:	xchg   DWORD PTR [ebx],eax
  4304d6:	lea    eax,[ebp+0x40]
  4304d9:	(bad)  
  4304da:	pop    ebp
  4304db:	jb     0x43051f
  4304dd:	lods   eax,DWORD PTR ds:[esi]
  4304de:	pop    eax
  4304df:	mov    al,BYTE PTR [edi+0xc2c789]
  4304e5:	add    BYTE PTR [eax+0x608b5503],bh
  4304eb:	and    esi,0x8
  4304ee:	xchg   BYTE PTR [ebx],al
  4304f0:	add    BYTE PTR [ebp-0x45907],cl
  4304f6:	ror    DWORD PTR [esi+0x3748062],cl
  4304fc:	add    al,0x6a
  4304fe:	test   BYTE PTR [esi+0x470e0873],ch
  430504:	loop   0x4304cd
  430506:	push   ss
  430507:	scas   al,BYTE PTR es:[edi]
  430508:	cmc    
  430509:	test   DWORD PTR [edx+esi*1-0x7fbb95f7],esi
  430510:	cmp    eax,0x51
  430513:	scas   al,BYTE PTR es:[edi]
  430514:	cmc    
  430515:	push   eax
  430516:	push   ebx
  430517:	pop    eax
  430518:	(bad)  
  430519:	adc    esp,esi
  43051b:	add    al,BYTE PTR [ebp+0x2a02d9c0]
  430521:	ror    BYTE PTR [edi+0x23],0xf7
  430525:	jne    0x430567
  430527:	add    BYTE PTR [ebx-0xa51ae08],0x68
  43052e:	test   BYTE PTR [ebx],al
  430530:	add    BYTE PTR [eax],al
  430532:	ins    BYTE PTR es:[edi],dx
  430533:	cli    
  430534:	xchg   esp,eax
  430535:	inc    eax
  430536:	hlt    
  430537:	xchg   edx,eax
  430538:	fs add ah,bl
  43053b:	rcr    DWORD PTR [edi+edi*8+0x43],cl
  43053f:	enter  0xfba,0x69
  430543:	ret    
  430544:	mov    edx,0x54fe619d
  43054a:	add    BYTE PTR [eax],al
  43054c:	push   ss
  43054d:	lds    eax,FWORD PTR [ecx+0x54e9a944]
  430553:	je     0x4304f6
  430555:	enter  0x7a9,0x20
  430559:	cdq    
  43055a:	retf   0x6a5b
  43055d:	fmul   st,st(1)
  43055f:	or     eax,ebp
  430561:	popf   
  430562:	dec    esi
  430563:	stc    
  430564:	mov    dl,0xd3
  430566:	push   esi
  430567:	test   BYTE PTR [edx+0x28fabf24],ch
  43056d:	dec    ecx
  43056e:	push   ebx
  43056f:	xor    bl,BYTE PTR [edx-0x22f02dd9]
  430575:	pop    ebx
  430576:	jns    0x430537
  430578:	adc    esi,edi
  43057a:	test   eax,0x873008fa
  43057f:	je     0x43052a
  430581:	into   
  430582:	mov    ecx,0xcbb40507
  430587:	aas    
  430588:	popf   
  430589:	mov    esp,DWORD PTR [esi-0x39]
  43058c:	sahf   
  43058d:	cmc    
  43058e:	push   ebx
  43058f:	jle    0x4305f2
  430591:	push   eax
  430592:	jns    0x430553
  430594:	shr    DWORD PTR [edx],cl
  430596:	push   ebx
  430597:	je     0x43052e
  430599:	gs out 0x5d,ax
  43059d:	push   esi
  43059e:	dec    esi
  43059f:	cli    
  4305a0:	mov    al,0x53
  4305a2:	push   esi
  4305a3:	dec    ebx
  4305a4:	repnz es dec esi
  4305a7:	pop    ecx
  4305a8:	rol    BYTE PTR [ebx-0x38],cl
  4305ab:	mov    edx,0x744e3520
  4305b0:	add    BYTE PTR [eax],al
  4305b2:	test   eax,0xaf9ff83c
  4305b7:	sbb    eax,DWORD PTR [ebx+ebx*2]
  4305ba:	push   0x69fff399
  4305bf:	loopne 0x430620
  4305c1:	jle    0x4305cc
  4305c3:	add    edx,DWORD PTR ds:0x74d021ba
  4305c9:	mov    WORD PTR ds:0xf503e903,fs
  4305cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4305d0:	repnz push edx
  4305d2:	xlat   BYTE PTR ds:[ebx]
  4305d3:	jns    0x43057f
  4305d5:	mov    ah,0xd7
  4305d7:	out    dx,eax
  4305d8:	and    dh,dh
  4305da:	mov    al,BYTE PTR [edx]
  4305dc:	pusha  
  4305dd:	leave  
  4305de:	(bad)  
  4305df:	jg     0x430589
  4305e1:	add    esp,DWORD PTR [ecx]
  4305e3:	sub    ch,al
  4305e5:	add    ebx,DWORD PTR [ebp+0x2980b1b1]
  4305eb:	xchg   edx,eax
  4305ec:	nop
  4305ed:	mov    fs,WORD PTR [edx-0x61a417bb]
  4305f3:	in     al,dx
  4305f4:	inc    ecx
  4305f5:	push   ebx
  4305f6:	sbb    ecx,DWORD PTR [edi]
  4305f8:	jge    0x4305f0
  4305fa:	retf   0x5e02
  4305fd:	dec    ebx
  4305fe:	rol    BYTE PTR [ebp-0x4d],cl
  430601:	dec    edi
  430602:	ja     0x430630
  430604:	ins    DWORD PTR es:[edi],dx
  430605:	sub    al,0x21
  430607:	(bad)  
  430608:	cmp    al,0x8c
  43060a:	xor    eax,DWORD PTR [edx]
  43060c:	jmp    0xf3a07b14
  430611:	push   edx
  430612:	push   edi
  430613:	jns    0x43063e
  430615:	mov    ah,0x0
  430617:	add    BYTE PTR [edi-0x31],dl
  43061a:	cld    
  43061b:	push   edx
  43061c:	ins    BYTE PTR es:[edi],dx
  43061d:	jnp    0x4305ca
  43061f:	push   ebx
  430620:	adc    edi,eax
  430622:	and    BYTE PTR [esi+esi*8+0x4503e901],cl
  430629:	xor    eax,0x792752f3
  43062e:	test   eax,0xcccf27b3
  430633:	push   edx
  430634:	in     al,dx
  430635:	adc    BYTE PTR [ebx-0x64f6f582],bh
  43063b:	xlat   BYTE PTR ds:[ebx]
  43063c:	xchg   BYTE PTR [ebx],cl
  43063e:	add    BYTE PTR [ecx+ebp*2],bh
  430641:	shl    DWORD PTR [edx-0xe],1
  430644:	dec    esp
  430645:	shr    DWORD PTR [esi+0x11],1
  430648:	jge    0x4306bb
  43064a:	aas    
  43064b:	jmp    0x97ff2f96
  430650:	dec    edi
  430651:	dec    eax
  430652:	adc    al,0x91
  430654:	rol    DWORD PTR [eax+eax*1],1
  430657:	jo     0x43063e
  430659:	pop    eax
  43065a:	jle    0x4305dd
  43065c:	outs   dx,DWORD PTR ds:[esi]
  43065d:	ror    DWORD PTR [esi+esi*2],1
  430660:	in     eax,0xf8
  430662:	cli    
  430663:	hlt    
  430664:	mov    dh,0xb4
  430666:	push   edx
  430667:	push   ecx
  430668:	inc    ebp
  430669:	dec    ebx
  43066a:	cli    
  43066b:	pop    esi
  43066c:	sbb    eax,0x1db9f7be
  430671:	mov    esi,0x378b9f3
  430676:	push   edx
  430677:	lahf   
  430678:	out    dx,eax
  430679:	xor    al,0x84
  43067b:	sub    DWORD PTR [eax],eax
  43067d:	add    BYTE PTR [edx+0x8],dh
  430680:	das    
  430681:	adc    dl,BYTE PTR [ecx-0x40480833]
  430687:	jnp    0x4306cd
  430689:	sbb    eax,0x7201f81d
  43068e:	popa   
  43068f:	cld    
  430690:	test   BYTE PTR [ecx],ch
  430692:	dec    edx
  430693:	(bad)  
  430694:	jle    0x4306a7
  430696:	mov    ds:0x997213cd,al
  43069b:	or     eax,DWORD PTR [ebp+0xd]
  43069e:	jb     0x430697
  4306a0:	cli    
  4306a1:	jl     0x4306e5
  4306a3:	dec    ecx
  4306a4:	je     0x430687
  4306a6:	out    dx,al
  4306a7:	mov    al,0xe7
  4306a9:	(bad)  
  4306aa:	iret   
  4306ab:	dec    eax
  4306ac:	cli    
  4306ad:	sub    ah,BYTE PTR [eax]
  4306af:	inc    edx
  4306b0:	or     edx,DWORD PTR [edx]
  4306b2:	repnz dec ebx
  4306b4:	ins    DWORD PTR es:[edi],dx
  4306b5:	mov    eax,0xf3ce6c
  4306ba:	fisttp DWORD PTR [ebx-0x4d2e0016]
  4306c0:	cmc    
  4306c1:	adc    eax,0x3a4ca8
  4306c6:	stos   DWORD PTR es:[edi],eax
  4306c7:	xchg   ebp,eax
  4306c8:	pop    eax
  4306c9:	leave  
  4306ca:	inc    esi
  4306cb:	inc    edi
  4306cc:	cli    
  4306cd:	jne    0x430661
  4306cf:	fidiv  DWORD PTR [edi]
  4306d1:	(bad)  
  4306d2:	icebp  
  4306d3:	enter  0x7750,0x2d
  4306d7:	inc    edi
  4306d8:	mov    ah,0x70
  4306da:	outs   dx,DWORD PTR ds:[esi]
  4306db:	xchg   ecx,eax
  4306dc:	sub    eax,0x2956fd7f
  4306e1:	outs   dx,DWORD PTR ds:[esi]
  4306e2:	add    BYTE PTR [eax],al
  4306e4:	sub    eax,0x960c4c4f
  4306e9:	test   eax,0x3279a743
  4306ee:	mov    ebx,0xb3df8911
  4306f3:	and    cl,BYTE PTR [ecx+0x46]
  4306f6:	sub    eax,0xfc86cd57
  4306fb:	xchg   ebx,eax
  4306fc:	fld    DWORD PTR [esi-0x4c]
  4306ff:	in     eax,0x1d
  430701:	and    dh,BYTE PTR [ebp-0x58e59edd]
  430707:	fadd   QWORD PTR [esi-0x1ef8c784]
  43070d:	inc    esp
  43070e:	mov    ah,0x23
  430710:	fldcw  WORD PTR [ebp+0x34]
  430713:	(bad)
  430717:	retf   
  430718:	arpl   WORD PTR [ebx+eax*2-0x4bf8e224],bp
  43071f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430720:	push   esp
  430721:	inc    edi
  430722:	mov    ah,0x23
  430724:	les    eax,FWORD PTR [ebx+0x7d790f98]
  43072a:	jbe    0x43079f
  43072c:	xor    ebp,ebp
  43072e:	push   esp
  43072f:	fdiv   QWORD PTR [esi]
  430731:	ret    
  430732:	je     0x430760
  430734:	popf   
  430735:	mov    dl,0x43
  430737:	mov    ch,0xbe
  430739:	ss jnp 0x430715
  43073c:	call   0xd808:0xfe88f63a
  430743:	cdq    
  430744:	sahf   
  430745:	jnp    0x4306ea
  430747:	inc    esp
  430748:	add    BYTE PTR [eax],al
  43074a:	mov    bl,0x16
  43074c:	jmp    0xae99:0xca57bef5
  430753:	jmp    0x6ca400ef
  430758:	div    BYTE PTR [ebp-0x2de51df5]
  43075e:	pop    es
  43075f:	ficomp DWORD PTR [edx]
  430761:	sahf   
  430762:	(bad)  
  430763:	inc    esp
  430764:	sti    
  430765:	inc    esp
  430766:	loope  0x43070d
  430768:	jbe    0x43071f
  43076a:	jle    0x430742
  43076c:	cmp    ecx,0xeca6be9a
  430772:	cmc    
  430773:	push   edi
  430774:	pop    esi
  430775:	retf   0x5778
  430778:	push   edi
  430779:	xor    al,BYTE PTR [edx]
  43077b:	repz and ah,dh
  43077e:	inc    ebp
  43077f:	add    eax,0x2dc17e64
  430784:	push   edi
  430785:	xor    BYTE PTR [eax-0x79],bh
  430788:	pop    esi
  430789:	ins    BYTE PTR es:[edi],dx
  43078a:	sahf   
  43078b:	sub    eax,0xd7783057
  430790:	pop    esi
  430791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430792:	shr    BYTE PTR ds:0x9bbecf57,0x7a
  430799:	cdq    
  43079a:	ficom  DWORD PTR [eax]
  43079c:	div    DWORD PTR [ebp-0x1abf3e32]
  4307a2:	push   esi
  4307a3:	fdivr  DWORD PTR [edi+0x44]
  4307a6:	popa   
  4307a7:	ins    DWORD PTR es:[edi],dx
  4307a8:	push   0x792e7eb6
  4307ad:	jne    0x4307af
  4307af:	add    dl,cl
  4307b1:	add    bl,BYTE PTR [ebp-0x3ff5db77]
  4307b7:	lods   al,BYTE PTR ds:[esi]
  4307b8:	xor    eax,0x6124ae4e
  4307bd:	pop    esi
  4307be:	dec    edi
  4307bf:	cmp    al,0xe4
  4307c1:	out    dx,al
  4307c2:	cmp    al,al
  4307c4:	and    al,0xa
  4307c6:	mov    WORD PTR [edi-0x2c],ss
  4307c9:	or     esp,ecx
  4307cb:	stos   DWORD PTR es:[edi],eax
  4307cc:	push   0x595749a2
  4307d1:	mov    bh,0x18
  4307d3:	rol    BYTE PTR [edx+edx*8],0x4b
  4307d7:	in     al,0x90
  4307d9:	xchg   ebp,eax
  4307da:	push   edx
  4307db:	cld    
  4307dc:	popa   
  4307dd:	clc    
  4307de:	fwait
  4307df:	out    dx,al
  4307e0:	enter  0x2e5,0x40
  4307e4:	or     al,0x71
  4307e6:	call   FWORD PTR [edi]
  4307e8:	jecxz  0x4307cd
  4307ea:	jae    0x4307e8
  4307ec:	rcr    BYTE PTR [esi+0x5f],0x20
  4307f0:	call   FWORD PTR [esi+0x50]
  4307f3:	add    al,0x2
  4307f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307f6:	pop    ebx
  4307f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307f9:	or     DWORD PTR [edi-0x3],edx
  4307fc:	iret   
  4307fd:	test   eax,0xe616e42f
  430802:	inc    ebx
  430803:	mov    esp,0x81e4d88e
  430808:	test   BYTE PTR [ecx],cl
  43080a:	aaa    
  43080b:	mov    bh,0x7e
  43080d:	mov    edx,0x457f60b2
  430812:	mov    ebx,0x7600007a
  430817:	or     DWORD PTR [eax+ebp*1],0xffffff99
  43081b:	add    ch,cl
  43081d:	mov    ch,0xef
  43081f:	cmp    edx,0x9a029d04
  430825:	dec    esi
  430826:	ror    DWORD PTR [edx],1
  430828:	xchg   ecx,eax
  430829:	fwait
  43082a:	repnz (bad) 
  43082c:	(bad)  
  43082d:	call   0xd7731f1d
  430832:	pop    esi
  430833:	inc    ecx
  430834:	jge    0x4307e3
  430836:	sub    cl,BYTE PTR [esi+0x3ccdc5b4]
  43083c:	cli    
  43083d:	rcr    DWORD PTR [ebx-0xb3106c1],0x10
  430844:	lea    ebp,[edx+eax*1+0x3b]
  430848:	cli    
  430849:	mov    esi,0x2aaf9911
  43084e:	mov    eax,ds:0x4d6c772a
  430853:	cmp    al,0x84
  430855:	test   eax,0xa7870dd2
  43085a:	pop    eax
  43085b:	inc    ecx
  43085c:	cli    
  43085d:	sub    DWORD PTR [edx],ebx
  43085f:	mov    dh,0xf8
  430861:	fistp  DWORD PTR [esi+0x28]
  430864:	push   0x13
  430866:	lds    ecx,FWORD PTR [ebp+0x3c53f784]
  43086c:	cli    
  43086d:	sbb    edi,edx
  43086f:	inc    eax
  430870:	mov    esi,esp
  430872:	push   0xffffffc0
  430874:	(bad)  
  430875:	inc    si
  430877:	push   eax
  430878:	icebp  
  430879:	pop    esp
  43087a:	add    BYTE PTR [eax],al
  43087c:	push   ebx
  43087d:	xchg   BYTE PTR [edi-0x3e767229],bh
  430883:	mov    ecx,0xaaabc076
  430888:	sahf   
  430889:	lea    eax,[ebp+ebx*1-0x6605c329]
  430890:	(bad)  
  430891:	and    DWORD PTR [ebx-0x40791cd2],esi
  430897:	mul    ch
  430899:	jg     0x43081e
  43089b:	sub    DWORD PTR [ebp+0xb],eax
  43089e:	das    
  43089f:	sub    DWORD PTR [eax-0x75],eax
  4308a2:	test   BYTE PTR ds:0xfa3ce7,ch
  4308a8:	mov    ds:0xf7ac7c1a,eax
  4308ad:	add    ecx,DWORD PTR [ebp-0xa336f7b]
  4308b3:	call   DWORD PTR [ecx+edx*8]
  4308b6:	adc    esi,DWORD PTR [eax-0x7b05bbda]
  4308bc:	hlt    
  4308bd:	mov    edi,0xcdf1e483
  4308c2:	cmc    
  4308c3:	je     0x4308c2
  4308c5:	(bad)  
  4308c8:	mov    ah,0x7d
  4308ca:	jae    0x4308c5
  4308cc:	out    dx,eax
  4308cd:	mov    eax,0x440400c0
  4308d2:	inc    ebp
  4308d3:	jne    0x430902
  4308d5:	xchg   edi,eax
  4308d6:	call   FWORD PTR [esi+0x62]
  4308d9:	sti    
  4308da:	mov    esp,0x8178f404
  4308df:	in     al,dx
  4308e0:	add    BYTE PTR [eax],al
  4308e2:	inc    ebp
  4308e3:	mov    ds:0x3c4066e,al
  4308e8:	dec    ebx
  4308e9:	push   esi
  4308ea:	pop    es
  4308eb:	jmp    0x43093a
  4308ed:	(bad)  
  4308ee:	leave  
  4308ef:	push   DWORD PTR [edx+0x3c4bd]
  4308f5:	mov    BYTE PTR [ecx-0x58b61d33],ah
  4308fb:	into   
  4308fc:	cmc    
  4308fd:	mov    edi,DWORD PTR [edx+0x76]
  430900:	cmc    
  430901:	adc    eax,0x3a314c
  430906:	std    
  430907:	inc    edi
  430908:	out    dx,al
  430909:	cmp    esi,DWORD PTR [edi+0x74a27e3d]
  43090f:	add    eax,DWORD PTR [eax]
  430911:	lea    esi,[ecx]
  430913:	lahf   
  430914:	mov    dl,0xbe
  430916:	test   BYTE PTR [ebx],al
  430918:	add    al,ch
  43091a:	xchg   BYTE PTR [esi*8+0x4ac5efff],dh
  430921:	call   FWORD PTR [ebp-0x5705ad62]
  430927:	int    0xed
  430929:	aas    
  43092a:	popf   
  43092b:	inc    esp
  43092c:	aas    
  43092d:	jae    0x4308f9
  43092f:	scas   al,BYTE PTR es:[edi]
  430930:	mov    edx,0x7aa6ccf7
  430935:	lahf   
  430936:	xor    BYTE PTR [eax],dh
  430938:	dec    ebx
  430939:	push   eax
  43093a:	(bad)  
  43093b:	out    dx,al
  43093c:	dec    ebx
  43093d:	add    ebx,DWORD PTR [ecx+ebp*1-0x54120502]
  430944:	inc    esi
  430945:	add    BYTE PTR [eax],al
  430947:	add    BYTE PTR [eax+0x25847aef],cl
  43094d:	inc    esp
  43094e:	dec    ebx
  43094f:	cli    
  430950:	ins    DWORD PTR es:[edi],dx
  430951:	sar    esi,cl
  430953:	gs cli 
  430955:	ret    0x4f04
  430958:	repnz push ebp
  43095a:	scas   al,BYTE PTR es:[edi]
  43095b:	push   cs
  43095c:	pop    ebp
  43095d:	sub    DWORD PTR [ecx+0x7ae768bf],eax
  430963:	test   ch,bh
  430965:	xchg   ebp,eax
  430966:	dec    ebx
  430967:	cli    
  430968:	ins    DWORD PTR es:[edi],dx
  430969:	nop
  43096a:	icebp  
  43096b:	jg     0x43091c
  43096d:	jmp    0xe6575975
  430972:	dec    ebx
  430973:	mov    WORD PTR [eax],fs
  430975:	rol    DWORD PTR [edi-0x6],1
  430978:	mov    dl,0x18
  43097a:	jnp    0x430900
  43097c:	std    
  43097d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43097e:	dec    ebx
  43097f:	cli    
  430980:	dec    ebp
  430981:	loopne 0x430974
  430983:	push   edi
  430984:	scas   al,BYTE PTR es:[edi]
  430985:	imul   edi,esi,0xffffff84
  430988:	pop    ebp
  430989:	push   edi
  43098a:	jmp    0x7a06ea15
  43098f:	sbb    eax,0xffffffa3
  430992:	inc    edi
  430993:	cli    
  430994:	jp     0x430932
  430996:	jg     0x43095f
  430998:	jb     0x430979
  43099a:	xchg   ecx,eax
  43099b:	xchg   edi,eax
  43099c:	add    sp,WORD PTR [edx]
  43099f:	dec    esp
  4309a0:	jp     0x430975
  4309a2:	adc    DWORD PTR [esi+0x57],ecx
  4309a5:	inc    ebp
  4309a6:	stos   DWORD PTR es:[edi],eax
  4309a7:	dec    esp
  4309a8:	popf   
  4309a9:	cmp    eax,0x5793
  4309ae:	inc    edi
  4309af:	sbb    BYTE PTR [ebp-0x3efd7d0f],ah
  4309b5:	scas   al,BYTE PTR es:[edi]
  4309b6:	aaa    
  4309b7:	mov    eax,0x2c5d11e9
  4309bc:	jbe    0x4309c0
  4309be:	popf   
  4309bf:	add    dh,BYTE PTR [ecx-0x57]
  4309c2:	daa    
  4309c3:	mov    WORD PTR [ebx],?
  4309c5:	pop    esp
  4309c6:	push   edi
  4309c7:	(bad)  
  4309c9:	les    edx,FWORD PTR [edx]
  4309cb:	(bad)  
  4309cc:	and    ebx,DWORD PTR [edx+ebx*2-0x71]
  4309d0:	sub    esp,DWORD PTR [eax+0x52]
  4309d3:	(bad)  
  4309d4:	and    edx,DWORD PTR [edx+ebp*2-0x58]
  4309d8:	mov    cl,0x79
  4309da:	pop    ecx
  4309db:	cmp    bl,BYTE PTR [eax]
  4309dd:	fsubp  st(0),st
  4309df:	shl    BYTE PTR ds:0x993a417d,1
  4309e5:	icebp  
  4309e6:	jle    0x4309f9
  4309e8:	sub    DWORD PTR [esp],eax
  4309eb:	enter  0xf7c,0xa
  4309ef:	mov    bh,0xed
  4309f1:	or     BYTE PTR [ebx-0x59fc16fe],bh
  4309f7:	xchg   DWORD PTR [esp+eax*1-0x574ffd63],ecx
  4309fe:	mov    dl,0xd
  430a00:	ins    DWORD PTR es:[edi],dx
  430a01:	cmp    ah,BYTE PTR [edx-0x70e917c3]
  430a07:	sti    
  430a08:	mov    bl,0x53
  430a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a0b:	test   BYTE PTR [esi+0x74029d04],cl
  430a11:	rol    DWORD PTR [eax],0x0
  430a14:	mov    ss,edx
  430a16:	ins    DWORD PTR es:[edi],dx
  430a17:	shl    DWORD PTR [edx-0x58],0xff
  430a1b:	fucom  st(7)
  430a1d:	icebp  
  430a1e:	scas   eax,DWORD PTR es:[edi]
  430a1f:	call   0x3d5e:0xfa2c16d7
  430a26:	sub    DWORD PTR [ecx],0x56
  430a29:	xchg   BYTE PTR [ecx+ebp*8-0x5b78fd62],dl
  430a30:	(bad)  
  430a32:	mov    esi,0xff87c2f6
  430a37:	call   0x49cf99da
  430a3c:	in     al,0x38
  430a3e:	cli    
  430a3f:	cwde   
  430a40:	xlat   BYTE PTR ds:[ebx]
  430a41:	lods   eax,DWORD PTR ds:[esi]
  430a42:	psrlw  mm2,QWORD PTR [esi+ecx*2]
  430a46:	cld    
  430a47:	ficomp WORD PTR [edx-0x6bb88c83]
  430a4d:	xchg   BYTE PTR [edi+0x4f3857d2],dl
  430a53:	je     0x430a72
  430a55:	popf   
  430a56:	cld    
  430a57:	mov    esi,0xc14fcd67
  430a5c:	mov    edi,0x1daefa6d
  430a61:	jge    0x430ad6
  430a63:	aas    
  430a64:	xchg   BYTE PTR fs:[edi+0x4f38679c],bl
  430a6b:	adc    DWORD PTR [edx+0x77],0x7d4a8efa
  430a72:	jae    0x430aa3
  430a74:	inc    esp
  430a75:	xchg   BYTE PTR [edi+0x67000080],cl
  430a7b:	cmp    BYTE PTR [edi+0x1],cl
  430a7e:	sbb    DWORD PTR ds:0x8defe5fa,edi
  430a84:	test   BYTE PTR [ecx-0x4605c7ab],cl
  430a8a:	push   ebx
  430a8b:	and    al,0x62
  430a8d:	mov    ah,0xe7
  430a8f:	cmp    BYTE PTR [ecx+ebp*1+0x4ee45a],al
  430a96:	or     DWORD PTR [ebx-0x37440676],eax
  430a9c:	dec    edx
  430a9d:	push   ebx
  430a9e:	fdivr  QWORD PTR [ebx-0x44440082]
  430aa4:	mov    edx,0x83bb6274
  430aa9:	nop
  430aaa:	jge    0x430a74
  430aac:	cmc    
  430aad:	push   eax
  430aae:	mov    edi,0x24ffee42
  430ab3:	xor    al,al
  430ab5:	inc    ebp
  430ab6:	fwait
  430ab7:	push   es
  430ab8:	call   0xf60ba9e1
  430abd:	push   DWORD PTR [ecx+0x5c15f5cb]
  430ac3:	xor    eax,0xd72003a
  430ac8:	jne    0x430aba
  430aca:	or     eax,DWORD PTR [esi-0x361400c0]
  430ad0:	cmc    
  430ad1:	jne    0x430abf
  430ad3:	leave  
  430ad4:	adc    ebp,DWORD PTR [eax]
  430ad6:	out    0x3f,eax
  430ad8:	cli    
  430ad9:	cmp    BYTE PTR [ecx+0xe4da],0x0
  430ae0:	add    al,0x0
  430ae2:	pop    es
  430ae3:	test   bh,bl
  430ae5:	enter  0xfff5,0x69
  430ae9:	mov    ebx,0xca3bfb92
  430aee:	dec    edx
  430aef:	push   0xffffffc5
  430af1:	pop    ebp
  430af2:	cmc    
  430af3:	push   0xfffa7fc3
  430af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430af9:	leave  
  430afa:	adc    edx,DWORD PTR [eax-0x29]
  430afd:	aas    
  430afe:	cli    
  430aff:	test   BYTE PTR [esp+ecx*2],al
  430b02:	lea    eax,cs:[ecx-0x4a]
  430b06:	idiv   edi
  430b08:	cmp    esi,DWORD PTR [esi+0x62]
  430b0b:	add    BYTE PTR [edi+edi*8-0x5962a8fd],0x7a
  430b13:	xchg   edi,eax
  430b14:	xchg   ah,cl
  430b16:	dec    eax
  430b17:	dec    edi
  430b18:	out    dx,al
  430b19:	shl    DWORD PTR [edx],1
  430b1b:	pop    ebx
  430b1c:	jp     0x430b1a
  430b1e:	jp     0x430adf
  430b20:	jmp    0x20cfbe80
  430b25:	fld    DWORD PTR [esi-0x6]
  430b28:	bound  edi,QWORD PTR [ecx-0x4d]
  430b2b:	out    0x57,eax
  430b2d:	test   al,0x48
  430b2f:	cli    
  430b30:	sbb    ecx,ebp
  430b32:	iret   
  430b33:	add    esp,DWORD PTR [ebx+0x66]
  430b36:	inc    edi
  430b37:	add    BYTE PTR [edi],dl
  430b39:	outs   dx,BYTE PTR ds:[esi]
  430b3a:	inc    edi
  430b3b:	pop    edx
  430b3c:	(bad)  [eax+0x35]
  430b3f:	mov    esi,0x8057a0c8
  430b44:	add    BYTE PTR [eax],al
  430b46:	cmp    DWORD PTR [ebp-0x7dd0008],esp
  430b4c:	lods   eax,DWORD PTR ds:[esi]
  430b4d:	push   edx
  430b4e:	sub    BYTE PTR [esi+0x5412f2fe],dl
  430b54:	push   esi
  430b55:	mov    DWORD PTR [edx],ecx
  430b57:	dec    ebx
  430b58:	inc    edi
  430b59:	gs test eax,0xf58d79b6
  430b5f:	jnp    0x430ba8
  430b61:	dec    edi
  430b62:	push   ds
  430b63:	pusha  
  430b64:	inc    edi
  430b65:	gs popf 
  430b67:	fimul  WORD PTR [ecx+0x4763e25f]
  430b6d:	xchg   dh,bl
  430b6f:	nop
  430b70:	dec    esi
  430b71:	out    dx,al
  430b72:	rcl    BYTE PTR [ebx+0x2e4bbf79],1
  430b78:	jnp    0x430b3b
  430b7a:	ins    DWORD PTR es:[edi],dx
  430b7b:	adc    DWORD PTR [ebx+ebp*4-0x7b8ed6a2],eax
  430b82:	popf   
  430b83:	mov    ch,0x47
  430b85:	cli    
  430b86:	dec    ebp
  430b87:	add    DWORD PTR [ebx],0x6201a2ae
  430b8d:	jle    0x430be9
  430b8f:	or     dh,BYTE PTR [ebx+eax*2+0x1e]
  430b93:	inc    ebx
  430b94:	(bad)  
  430b96:	mov    ebx,0x197ac242
  430b9b:	add    eax,DWORD PTR [ebp+0x48]
  430b9e:	ja     0x430b2e
  430ba0:	sti    
  430ba1:	jae    0x430b46
  430ba3:	ret    0x76e8
  430ba6:	and    DWORD PTR [ebx],eax
  430ba8:	sub    eax,0x67000048
  430bad:	shl    DWORD PTR [ecx],cl
  430baf:	xor    al,al
  430bb1:	push   cs
  430bb2:	ins    BYTE PTR es:[edi],dx
  430bb3:	jle    0x430bb5
  430bb5:	cmp    edx,DWORD PTR [ecx]
  430bb7:	dec    eax
  430bb8:	fisubr DWORD PTR [eax+ebp*8+0x6d72c976]
  430bbf:	inc    esp
  430bc0:	inc    edx
  430bc1:	gs cmc 
  430bc3:	inc    ebp
  430bc4:	aaa    
  430bc5:	sub    BYTE PTR [eax],0xc9
  430bc8:	mov    DWORD PTR [ebp-0x75454cde],ecx
  430bce:	xchg   edx,eax
  430bcf:	ret    
  430bd0:	sbb    al,BYTE PTR [edi+0x3a154c63]
  430bd6:	shl    DWORD PTR [edx+eax*1+0x7479770],1
  430bdd:	sub    BYTE PTR [eax+0x644311f7],0x44
  430be4:	imul   ecx,DWORD PTR [ebx],0x8b7c43f6
  430bea:	arpl   WORD PTR [ebp+eiz*8+0x39],cx
  430bee:	mov    eax,ds:0x9f3b2179
  430bf3:	inc    edi
  430bf4:	xlat   BYTE PTR ds:[ebx]
  430bf5:	rcl    BYTE PTR [ecx-0x731038d1],cl
  430bfb:	xchg   edx,eax
  430bfc:	add    DWORD PTR [edx],0x66
  430bff:	stc    
  430c00:	call   0xff38:0xb3042566
  430c07:	fstp   TBYTE PTR [edx+0x7]
  430c0a:	inc    eax
  430c0b:	jmp    0xaaf04609
  430c10:	add    BYTE PTR [eax],al
  430c12:	sahf   
  430c13:	icebp  
  430c14:	mov    esi,0x4fc896d5
  430c19:	push   esi
  430c1a:	mov    WORD PTR [ecx],cs
  430c1c:	pop    gs
  430c1e:	sahf   
  430c1f:	sub    al,BYTE PTR [edx+0x24]
  430c22:	loop   0x430c60
  430c24:	mov    WORD PTR [ecx+ebx*4+0x36],gs
  430c28:	cli    
  430c29:	ss leave 
  430c2b:	out    dx,eax
  430c2c:	mov    eax,0x8c86da2e
  430c31:	and    eax,ebp
  430c33:	cmp    al,0xfa
  430c35:	adc    DWORD PTR [edx+0x6716fa7b],ebp
  430c3b:	adc    eax,0x318f648d
  430c40:	cli    
  430c41:	push   es
  430c42:	icebp  
  430c43:	sahf   
  430c44:	jmp    FWORD PTR [ebx+0x4c]
  430c47:	add    DWORD PTR [esi-0x10ef36d6],0xbf7edbec
  430c51:	addr16 mov eax,0x26c17487
  430c57:	je     0x430c58
  430c59:	call   0xdf3f36fc
  430c5e:	pop    ebx
  430c5f:	cmp    al,0x8c
  430c61:	sub    al,0x79
  430c63:	leave  
  430c64:	xchg   BYTE PTR [edi-0x4e7b79d2],ah
  430c6a:	pop    edx
  430c6b:	cmp    al,0xfa
  430c6d:	sbb    DWORD PTR [ecx+0x17],eax
  430c70:	mov    cl,0xa6
  430c72:	arpl   WORD PTR [esi-0x41],di
  430c75:	out    dx,al
  430c76:	add    BYTE PTR [eax],al
  430c78:	dec    ebp
  430c79:	jns    0x430bfe
  430c7b:	test   eax,0xa92f09ed
  430c80:	loopne 0x430c0b
  430c82:	test   BYTE PTR [eax],al
  430c84:	sbb    al,0xc9
  430c86:	cmc    
  430c87:	inc    DWORD PTR [ecx-0x7e]
  430c8a:	repnz hlt 
  430c8c:	xor    eax,eax
  430c8e:	dec    edx
  430c8f:	push   0x800004b5
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	outs   dx,BYTE PTR ds:[esi]
  430c97:	adc    eax,DWORD PTR [esp+eax*1-0x7d]
  430c9b:	xor    eax,0x3a34e0
  430ca0:	loope  0x430c24
  430ca2:	jmp    0xf98d:0x4ac0e3f8
  430ca9:	add    edi,esp
  430cab:	push   DWORD PTR [ebx-0x3e290a8d]
  430cb1:	add    BYTE PTR [edx],0xfe
  430cb4:	add    eax,0x4a
  430cb7:	lea    edi,[ecx-0x4c000835]
  430cbd:	jae    0x430cb4
  430cbf:	(bad)  
  430cc0:	loope  0x430c4c
  430cc2:	or     bh,bh
  430cc4:	mov    ds:0x449cb2c0,eax
  430cc9:	add    al,0x0
  430ccb:	call   0x383dde
  430cd0:	rol    DWORD PTR [edx-0x41fc01fe],0x4a
  430cd7:	lea    edi,[ecx-0x32]
  430cda:	repnz inc DWORD PTR [eax]
  430cdd:	add    bl,dh
  430cdf:	outs   dx,BYTE PTR ds:[esi]
  430ce0:	mov    eax,DWORD PTR [ebp-0xa4204]
  430ce6:	xchg   esp,eax
  430ce7:	scas   eax,DWORD PTR es:[edi]
  430ce8:	xor    eax,0xffffffdc
  430ceb:	mov    ebp,0xf57f50f5
  430cf0:	dec    edx
  430cf1:	mov    edi,0x2a8
  430cf6:	push   ecx
  430cf7:	xchg   DWORD PTR [edx-0x10],edi
  430cfa:	xor    edi,DWORD PTR [esi-0x7262b01e]
  430d00:	inc    edx
  430d01:	cli    
  430d02:	push   ds
  430d03:	pop    esi
  430d04:	out    dx,eax
  430d05:	test   ch,bl
  430d07:	(bad)  
  430d08:	sti    
  430d09:	xchg   bl,bl
  430d0b:	sbb    DWORD PTR [ebp+eax*2-0x1a],ebx
  430d0f:	scas   eax,DWORD PTR es:[edi]
  430d10:	inc    esp
  430d11:	cmp    BYTE PTR [eax-0x62c170d7],al
  430d17:	push   esi
  430d18:	mul    BYTE PTR [ebp-0x63]
  430d1b:	fsubr  st,st(2)
  430d1d:	jecxz  0x430cce
  430d1f:	imul   edi,esi,0xfe2a73b8
  430d25:	jmp    FWORD PTR [eax]
  430d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d28:	add    esi,ebx
  430d2a:	jb     0x430d24
  430d2c:	cmp    edi,edi
  430d2e:	push   0x69
  430d30:	mov    ch,0x74
  430d32:	mov    BYTE PTR fs:[edi+ebp*4-0x41cabb64],ah
  430d3a:	call   0x39c164f3
  430d3f:	inc    ebp
  430d40:	jg     0x430da6
  430d42:	add    BYTE PTR [eax],al
  430d44:	inc    ecx
  430d45:	sub    DWORD PTR [edi-0x53d2277a],ebp
  430d4b:	mov    esi,ds
  430d4d:	jno    0x430d42
  430d4f:	mov    dl,0x6d
  430d51:	cwde   
  430d52:	dec    ebx
  430d53:	fld    DWORD PTR [esi-0x41ff27d1]
  430d59:	pop    ecx
  430d5a:	fcom   DWORD PTR [ecx]
  430d5c:	and    dh,bl
  430d5e:	daa    
  430d5f:	dec    edi
  430d60:	adc    al,0xd6
  430d62:	dec    edi
  430d63:	out    0xdb,eax
  430d65:	enter  0xfa44,0x26
  430d69:	je     0x430dc1
  430d6b:	add    ecx,ecx
  430d6d:	ja     0x430db2
  430d6f:	popa   
  430d70:	push   ds
  430d71:	jno    0x430d69
  430d73:	ins    DWORD PTR es:[edi],dx
  430d74:	(bad)  
  430d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d76:	mov    edi,0xa902200f
  430d7b:	into   
  430d7c:	cdq    
  430d7d:	loope  0x430da2
  430d7f:	dec    eax
  430d80:	ret    
  430d81:	jmp    DWORD PTR [ebp+0x43]
  430d84:	jbe    0x430d0f
  430d86:	and    ecx,DWORD PTR [eax+0x23]
  430d89:	mov    ch,0xf0
  430d8b:	jbe    0x430dec
  430d8d:	repnz sbb BYTE PTR [ebp-0x6f],al
  430d91:	es (bad) 
  430d93:	ret    
  430d94:	mov    ds:0x25f4218b,al
  430d99:	ror    BYTE PTR [eax+0x78],0xdf
  430d9d:	loop   0x430e0e
  430d9f:	mov    esi,0x13a98866
  430da4:	in     eax,dx
  430da5:	xor    eax,0x53f3
  430daa:	test   al,0xc2
  430dac:	call   0xb1403da5
  430db1:	mov    ebx,0x5b660eee
  430db6:	mov    DWORD PTR [esi+0x2a5d10e4],ebp
  430dbc:	cld    
  430dbd:	js     0x430d5e
  430dbf:	pushf  
  430dc0:	ins    DWORD PTR es:[edi],dx
  430dc1:	and    DWORD PTR [ebx+eax*1+0xc3a03e9],0x5e
  430dc9:	cld    
  430dca:	mov    esp,0x9de76889
  430dcf:	add    ch,cl
  430dd1:	fst    QWORD PTR ds:0x63780cc0
  430dd7:	adc    dh,dl
  430dd9:	sub    ch,BYTE PTR [ecx]
  430ddb:	retf   0x1efa
  430dde:	fucom  st(1)
  430de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430de1:	lea    ebx,[ecx+0x3a]
  430de4:	sbb    dl,BYTE PTR ds:[eax]
  430de7:	enter  0xd5ac,0x7b
  430deb:	inc    edx
  430dec:	in     al,dx
  430ded:	sar    DWORD PTR [eax+0x3],cl
  430df0:	outs   dx,BYTE PTR ds:[esi]
  430df1:	push   edx
  430df2:	add    ah,BYTE PTR [ecx+0x29ee3ff]
  430df8:	xchg   DWORD PTR [ecx-0x128bcbdc],edi
  430dfe:	enter  0xe675,0x2b
  430e02:	sbb    bh,cl
  430e04:	xchg   BYTE PTR [edi-0x700f1f8f],dh
  430e0a:	pop    esi
  430e0b:	jg     0x430de4
  430e0d:	xchg   ecx,eax
  430e0e:	add    BYTE PTR [eax],al
  430e10:	pop    esi
  430e11:	imul   edi,esp,0x7e
  430e14:	sbb    bh,BYTE PTR [edi-0x4ea69305]
  430e1a:	sub    BYTE PTR [edi-0x5f],dh
  430e1d:	add    esi,DWORD PTR [ebp+ecx*1+0x22]
  430e21:	mov    esi,0x561720b
  430e26:	repz xor DWORD PTR [edx-0x495be1be],esp
  430e2d:	mov    ah,0xbf
  430e2f:	loope  0x430e7f
  430e31:	cmp    BYTE PTR [ebp+esi*1+0x1a],dh
  430e35:	mov    esi,0x39996207
  430e3a:	scas   eax,DWORD PTR es:[edi]
  430e3b:	popa   
  430e3c:	mov    al,ds:0x28110002
  430e41:	add    bh,dl
  430e43:	push   ds
  430e44:	sbb    esi,DWORD PTR [edx+ebx*2-0x49]
  430e48:	arpl   WORD PTR [edx-0x43],cx
  430e4b:	loope  0x430deb
  430e4d:	iret   
  430e4e:	xchg   BYTE PTR ds:0xe46f2918,dl
  430e54:	sahf   
  430e55:	add    cl,BYTE PTR [edi-0x61]
  430e58:	adc    ecx,DWORD PTR [ebp+0x52]
  430e5b:	bound  ebp,QWORD PTR [edx+0x1d]
  430e5e:	adc    bh,BYTE PTR [edx+0x6a61385f]
  430e64:	(bad)  
  430e65:	dec    BYTE PTR [edx]
  430e67:	imul   ebx,DWORD PTR [esi*1-0x2bb91606],0x4
  430e6f:	add    BYTE PTR [ecx+eax*1],al
  430e72:	lea    eax,[ebp-0x8bb0000]
  430e78:	cmc    
  430e79:	call   FWORD PTR [esi-0x2]
  430e7c:	dec    edi
  430e7d:	mov    BYTE PTR [ecx-0x6f],0xf4
  430e81:	(bad)  
  430e82:	sti    
  430e83:	add    al,ch
  430e85:	mov    ecx,0x8b0000d1
  430e8a:	ja     0x430e9a
  430e8c:	jnp    0x430e52
  430e8e:	fmul   DWORD PTR [ecx+0x7bc774ba]
  430e94:	mov    edx,0x42b7bb2c
  430e99:	add    ebp,DWORD PTR [edx+0x61]
  430e9c:	add    eax,DWORD PTR [eax]
  430e9e:	test   BYTE PTR [edi+0x3562fc73],al
  430ea4:	enter  0x30f,0x7e
  430ea8:	cli    
  430ea9:	push   DWORD PTR [edx+ebp*2-0x7d]
  430ead:	leave  
  430eae:	push   eax
  430eaf:	inc    ebx
  430eb0:	test   BYTE PTR [eax],cl
  430eb2:	fcmovb st,st(6)
  430eb4:	jp     0x430eaf
  430eb6:	jne    0x430f31
  430eb8:	outs   dx,BYTE PTR ds:[esi]
  430eb9:	mov    eax,DWORD PTR [ecx]
  430ebb:	or     BYTE PTR [ebp-0xa0a0f73],cl
  430ec1:	call   DWORD PTR ds:0x7e908b93
  430ec7:	shl    ch,0x51
  430eca:	mov    bh,0xbd
  430ecc:	add    cl,BYTE PTR [ebp+0x73e2f429]
  430ed2:	sbb    al,0xc1
  430ed4:	cmc    
  430ed5:	test   BYTE PTR [ebx+ebp*2+0x4e],dh
  430ed9:	mov    eax,DWORD PTR [eax]
  430edb:	add    BYTE PTR [ecx],al
  430edd:	hlt    
  430ede:	xor    esi,edx
  430ee0:	xchg   ebx,eax
  430ee1:	push   edx
  430ee2:	add    DWORD PTR [ebx+0x14],0x341bd2fb
  430ee9:	test   BYTE PTR [ecx+0x16],al
  430eec:	popf   
  430eed:	or     BYTE PTR [edi],bh
  430eef:	jle    0x430ecf
  430ef1:	loope  0x430f03
  430ef3:	mov    bl,0xa6
  430ef5:	je     0x430f4d
  430ef7:	push   ss
  430ef8:	aam    0xa8
  430efa:	inc    ecx
  430efb:	add    ecx,DWORD PTR [edi-0x62]
  430efe:	xchg   edx,eax
  430eff:	(bad)  
  430f00:	xlat   BYTE PTR ds:[ebx]
  430f01:	fs inc eax
  430f03:	dec    ebp
  430f04:	push   ds
  430f05:	push   0x7
  430f07:	push   eax
  430f08:	jle    0x430f7a
  430f0a:	test   eax,0xffab504
  430f0f:	add    BYTE PTR [ebp-0x297ba460],bl
  430f15:	xor    eax,0x31608715
  430f1a:	mov    esi,DWORD PTR [edi]
  430f1c:	mov    ch,0x52
  430f1e:	cs stc 
  430f20:	call   0x2630:0xd88734a0
  430f27:	jmp    0x8583e564
  430f2c:	fsub   DWORD PTR [eax]
  430f2e:	sub    edi,ebp
  430f30:	lods   al,BYTE PTR ds:[esi]
  430f31:	jmp    0xf3196916
  430f36:	inc    ecx
  430f37:	add    ebx,DWORD PTR [ebp+0x1ceb8b8e]
  430f3d:	mov    ebp,0x37
  430f42:	popf   
  430f43:	sub    ebx,edx
  430f45:	xchg   al,dh
  430f47:	sub    eax,0xcad3e8b
  430f4c:	pop    esp
  430f4d:	push   ecx
  430f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f4f:	jmp    0x2bf99c2c
  430f54:	jecxz  0x430f18
  430f56:	mov    ds:0x1ffec3f3,al
  430f5b:	adc    DWORD PTR [ecx+ecx*4],eax
  430f5e:	mov    al,ds:0xa584110d
  430f63:	daa    
  430f64:	(bad)  
  430f65:	jmp    DWORD PTR [ebp+0x2]
  430f68:	xor    DWORD PTR [eax-0x47cf3530],edi
  430f6e:	mov    edi,0xa6b820ca
  430f73:	jg     0x430f35
  430f75:	out    dx,eax
  430f76:	outs   dx,BYTE PTR ds:[esi]
  430f77:	sti    
  430f78:	test   BYTE PTR [ebx-0xb],0x38
  430f7c:	out    0x3,eax
  430f7e:	popf   
  430f7f:	xchg   DWORD PTR [ebx],ebp
  430f81:	or     al,0x22
  430f83:	add    ch,BYTE PTR [edx-0x16fee58d]
  430f89:	add    esp,DWORD PTR [edx]
  430f8b:	dec    edi
  430f8c:	nop
  430f8d:	pop    esi
  430f8e:	ret    0x9134
  430f91:	sub    bl,al
  430f93:	add    cl,ch
  430f95:	add    esi,DWORD PTR [esi-0x14730f54]
  430f9b:	sub    DWORD PTR [edx],esi
  430f9d:	inc    ecx
  430f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f9f:	xor    bh,BYTE PTR [edi+0x54]
  430fa2:	popf   
  430fa3:	add    ch,cl
  430fa5:	mov    WORD PTR [eax],es
  430fa7:	add    BYTE PTR [ebx+0x1b],bl
  430faa:	cmp    dl,BYTE PTR [edx-0x79]
  430fad:	xor    al,dl
  430faf:	test   BYTE PTR [edx-0x7db628f1],cl
  430fb5:	repz inc esi
  430fb7:	ds ja  0x431038
  430fba:	cmp    BYTE PTR [ebx+ebp*4+0x1555f612],cl
  430fc1:	mov    eax,0xb848fc34
  430fc6:	jmp    0x431000
  430fc8:	push   0xe
  430fca:	sub    DWORD PTR [ebx+ecx*1-0x64871645],eax
  430fd1:	in     eax,0x29
  430fd3:	cmp    BYTE PTR [ebp-0x2b],dl
  430fd6:	in     eax,dx
  430fd7:	dec    edx
  430fd8:	loopne 0x430f5f
  430fda:	sub    BYTE PTR [edi],al
  430fdc:	int    0xe5
  430fde:	sub    eax,0xff2a23ad
  430fe3:	addr16 test eax,0xce620002
  430fe9:	xchg   cl,dh
  430feb:	pop    ebp
  430fec:	sbb    ecx,DWORD PTR [ecx-0x5e80ebc]
  430ff2:	xchg   BYTE PTR [edi-0x30153b37],dh
  430ff8:	mov    dl,0x87
  430ffa:	xlat   BYTE PTR ds:[ebx]
  430ffb:	ror    DWORD PTR [edx-0x4f4103a1],1
  431001:	call   0x34bd:0xf99ee900
  431008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431009:	jnp    0x43105f
  43100b:	mov    eax,ds:0x3760000
  431010:	jg     0x430fbb
  431012:	int    0x7a
  431014:	inc    esp
  431015:	xchg   ecx,eax
  431016:	scas   al,BYTE PTR es:[edi]
  431017:	sub    al,0x67
  431019:	stos   DWORD PTR es:[edi],eax
  43101a:	cwde   
  43101b:	add    al,BYTE PTR [eax]
  43101d:	je     0x431033
  43101f:	add    bh,dl
  431021:	jle    0x431085
  431023:	aam    0x4f
  431025:	pusha  
  431026:	je     0x431049
  431028:	mov    ah,ch
  43102a:	retf   0x142c
  43102d:	sbb    eax,0x19ffc2b3
  431032:	fnstenv [eax-0x39d61a3d]
  431038:	jmp    0x43104a
  43103a:	pop    ebx
  43103b:	add    eax,0xc619cf7a
  431040:	out    0x72,eax
  431042:	imul   esi,DWORD PTR [eax],0x73
  431045:	inc    ecx
  431046:	sub    al,0xc3
  431048:	pop    es
  431049:	cdq    
  43104a:	and    DWORD PTR [esi+0x255470df],esi
  431050:	out    0xed,eax
  431052:	jbe    0x431082
  431054:	cli    
  431055:	ins    DWORD PTR es:[edi],dx
  431056:	loope  0x43100e
  431058:	xor    ch,BYTE PTR [edx+0x72]
  43105b:	pop    es
  43105c:	outs   dx,DWORD PTR ds:[esi]
  43105d:	add    BYTE PTR [edx],dh
  43105f:	pop    ebx
  431060:	dec    DWORD PTR [edx-0xfb46c86]
  431066:	pushf  
  431067:	sbb    esp,esp
  431069:	std    
  43106a:	add    ebx,esp
  43106c:	pop    ds
  43106d:	jmp    FWORD PTR [ecx-0x12]
  431070:	add    DWORD PTR [ebp+0x0],0x7391d800
  431077:	lock fadd st(0),st
  43107a:	jecxz  0x431079
  43107c:	jecxz  0x4310f9
  43107e:	ret    0x2d85
  431081:	ins    DWORD PTR es:[edi],dx
  431082:	or     cl,BYTE PTR [ebx-0x217e1947]
  431088:	fdiv   QWORD PTR [ecx-0x22]
  43108b:	std    
  43108c:	add    edi,DWORD PTR [ebx+ebx*2+0xc]
  431090:	dec    edi
  431091:	inc    edx
  431092:	out    dx,al
  431093:	(bad)  
  431094:	jns    0x431088
  431096:	add    DWORD PTR [ebp+0x10],0x47ec4b7c
  43109d:	cmp    ah,dl
  43109f:	cmp    BYTE PTR [edi],ch
  4310a1:	cmc    
  4310a2:	xor    DWORD PTR [eax-0x48],ecx
  4310a5:	jo     0x431042
  4310a7:	call   FWORD PTR [edx-0x24]
  4310aa:	mov    ?,WORD PTR [ecx+eax*1+0x12e850f1]
  4310b1:	mov    eax,0xf0f9fffb
  4310b6:	js     0x431119
  4310b8:	(bad)  
  4310b9:	cmp    ch,dl
  4310bb:	mov    DWORD PTR [ecx],edi
  4310bd:	lock mov eax,DWORD PTR [ebp-0xa0f67]
  4310c4:	in     eax,dx
  4310c5:	cmp    al,BYTE PTR [esi]
  4310c7:	mov    DWORD PTR [ecx],edx
  4310c9:	in     al,dx
  4310ca:	xor    DWORD PTR [ebp+0x70],0xb7fc7b7d
  4310d1:	vpsubsb xmm5,xmm3,XMMWORD PTR [eax-0x24]
  4310d6:	sti    
  4310d7:	inc    DWORD PTR [eax]
  4310d9:	add    BYTE PTR [ebp-0x44f4405c],bl
  4310df:	pushf  
  4310e0:	mov    ecx,0x8ae9d03
  4310e5:	pushfw 
  4310e7:	xchg   ebx,eax
  4310e8:	add    dl,BYTE PTR [ebx+0x5]
  4310eb:	xchg   ebx,eax
  4310ec:	(bad)  
  4310ee:	adc    bh,BYTE PTR [eax]
  4310f0:	add    edi,esi
  4310f2:	xchg   ecx,eax
  4310f3:	das    
  4310f4:	test   al,0x0
  4310f6:	ja     0x431121
  4310f8:	mov    DWORD PTR [edx-0x5d],eax
  4310fb:	jmp    0x4093532b
  431100:	cmp    al,0xe7
  431102:	sub    dh,ah
  431104:	cmp    al,0xfa
  431106:	jnp    0x4310ba
  431108:	les    edx,FWORD PTR [ecx]
  43110a:	push   ds
  43110b:	fistp  QWORD PTR [edi]
  43110d:	aaa    
  43110e:	push   ds
  43110f:	imul   ebp,edx,0x866158fa
  431115:	jl     0x4310a8
  431117:	push   ss
  431118:	js     0x4310a0
  43111a:	cmp    BYTE PTR [ebp-0x6772c178],cl
  431120:	pop    ebx
  431121:	push   ss
  431122:	fnstsw WORD PTR [ecx+eax*8]
  431125:	fistp  DWORD PTR [esi]
  431127:	pop    ebp
  431128:	retf   
  431129:	or     dl,BYTE PTR [edx+0x24]
  43112c:	xor    ebx,eax
  43112e:	mov    dh,0x62
  431130:	test   al,0xfa
  431132:	mov    eax,0xad948970
  431137:	iret   
  431138:	cmp    al,0xfa
  43113a:	iret   
  43113b:	pushf  
  43113c:	inc    ebx
  43113d:	add    eax,DWORD PTR [eax]
  43113f:	add    ch,cl
  431141:	cld    
  431142:	dec    eax
  431143:	gs sahf 
  431145:	shr    ebx,1
  431147:	add    eax,0xef87199d
  43114c:	and    bh,ch
  43114e:	mov    dl,0xc
  431150:	push   edx
  431151:	jbe    0x431181
  431153:	out    0x3a,eax
  431155:	add    dl,BYTE PTR [esi+0x3f]
  431158:	inc    edi
  431159:	sbb    eax,edx
  43115b:	cmp    eax,0xc75d2f37
  431160:	call   0x71a:0x4488d07b
  431167:	das    
  431168:	and    al,0x2f
  43116a:	outs   dx,BYTE PTR ds:[esi]
  43116b:	pop    esp
  43116c:	add    ch,BYTE PTR [ecx+0x3d]
  43116f:	aas    
  431170:	pop    ss
  431171:	das    
  431172:	jae    0x4311a7
  431174:	add    bh,BYTE PTR [edi]
  431176:	xchg   ebp,eax
  431177:	ds pop es
  431179:	jl     0x431120
  43117b:	sub    BYTE PTR [ebp-0x65492e2d],ah
  431181:	sbb    dh,BYTE PTR [ebp+0x212ee738]
  431187:	fimul  WORD PTR [ebx+0x39]
  43118a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43118b:	or     ebx,DWORD PTR [ebp+0x1d2f5dd5]
  431191:	push   ds
  431192:	nop
  431193:	add    bl,BYTE PTR [ebp+0x6fd63602]
  431199:	jnp    0x4311b6
  43119b:	or     al,0x22
  43119d:	xor    bl,BYTE PTR [ebp+0x4]
  4311a0:	mov    dh,0x71
  4311a2:	pop    esp
  4311a3:	add    al,BYTE PTR [eax]
  4311a5:	add    BYTE PTR [ebp-0x51298bfe],bl
  4311ab:	fwait
  4311ac:	jecxz  0x431189
  4311ae:	and    edi,DWORD PTR ds:0x2ce2b580
  4311b4:	imul   eax,DWORD PTR [edi+0x596cfe4a],0x88e9029d
  4311be:	cdq    
  4311bf:	out    dx,al
  4311c0:	cli    
  4311c1:	ret    
  4311c2:	jb     0x431160
  4311c4:	in     al,0x8e
  4311c6:	loope  0x4311fe
  4311c8:	shr    bl,1
  4311ca:	out    dx,eax
  4311cb:	ret    0xd3e8
  4311ce:	push   edi
  4311cf:	push   edx
  4311d0:	jmp    FWORD PTR [ecx-0x26]
  4311d3:	stc    
  4311d4:	test   BYTE PTR [ecx],ch
  4311d6:	adc    dl,BYTE PTR [esi]
  4311d8:	data16 in al,dx
  4311da:	adc    eax,edi
  4311dc:	repz xchg ecx,eax
  4311de:	cs mov cl,0x3f
  4311e1:	jmp    0x6b113b34
  4311e6:	loop   0x4311e1
  4311e8:	test   BYTE PTR [ecx],ch
  4311ea:	xchg   ecx,eax
  4311eb:	xchg   DWORD PTR [ecx-0x72fd6117],edx
  4311f1:	ins    BYTE PTR es:[edi],dx
  4311f2:	or     ch,BYTE PTR [ecx]
  4311f4:	cli    
  4311f5:	out    dx,al
  4311f6:	out    dx,eax
  4311f7:	and    eax,0x28c73433
  4311fc:	sub    DWORD PTR [ecx+0x6a61b82d],0x74
  431203:	icebp  
  431204:	cli    
  431205:	into   
  431206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431207:	das    
  431208:	jae    0x4311ff
  43120a:	add    BYTE PTR [eax],al
  43120c:	push   ds
  43120d:	outs   dx,DWORD PTR ds:[esi]
  43120e:	aaa    
  43120f:	mov    esi,0xe67a2896
  431214:	and    ch,BYTE PTR [esi-0x1a]
  431217:	push   es
  431218:	jmp    FWORD PTR [esp+edi*4-0x5d77823]
  43121f:	imul   ch
  431221:	adc    al,0x66
  431223:	stc    
  431224:	and    eax,0x668e3b87
  431229:	sub    BYTE PTR [edi+0x11],cl
  43122c:	or     DWORD PTR [edi+edi*1+0x7e3cd7e9],esi
  431233:	lods   eax,DWORD PTR ds:[esi]
  431234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431235:	xor    edi,edx
  431237:	rcr    esi,cl
  431239:	sub    edi,DWORD PTR [edi-0x402364ae]
  43123f:	gs loope 0x4311f3
  431242:	cmp    BYTE PTR [edx-0x62],ah
  431245:	test   DWORD PTR [edi+0x61],edi
  431248:	mov    al,ds:0xe9000002
  43124d:	cmp    ebp,esi
  43124f:	mov    DWORD PTR [ecx],ecx
  431251:	fld    DWORD PTR [ecx-0x21bc7cf8]
  431257:	dec    esp
  431258:	adc    DWORD PTR [ecx-0x6],eax
  43125b:	mov    BYTE PTR [ecx],ah
  43125d:	in     eax,0x83
  43125f:	leave  
  431260:	dec    ebx
  431261:	lods   eax,DWORD PTR ds:[esi]
  431262:	xor    eax,DWORD PTR [ecx]
  431264:	inc    esp
  431265:	add    edi,esi
  431267:	mov    cl,0xc8
  431269:	pop    es
  43126a:	add    BYTE PTR [eax],al
  43126c:	test   eax,0x6ade3b
  431271:	add    BYTE PTR ds:0x71e84a56,al
  431277:	call   0x8e11277
  43127c:	add    DWORD PTR [eax],eax
  43127e:	hlt    
  43127f:	jns    0x4312c4
  431281:	hlt    
  431282:	mov    dl,0x56
  431284:	add    DWORD PTR [edi],0xfffaabdd
  43128a:	hlt    
  43128b:	jnp    0x43128a
  43128d:	(bad)  
  43128e:	fs test edi,edi
  431291:	inc    esp
  431293:	jns    0x4312e8
  431295:	mov    ebp,0x8b52215e
  43129a:	sub    bl,cl
  43129c:	(bad)  
  43129d:	dec    edi
  43129e:	cli    
  43129f:	out    0x7e,eax
  4312a1:	ror    bl,0xac
  4312a4:	repz add ah,al
  4312a7:	add    BYTE PTR [edx+0x5],ah
  4312aa:	dec    ecx
  4312ab:	inc    edx
  4312ac:	out    dx,al
  4312ad:	push   eax
  4312ae:	sub    DWORD PTR [edx-0x4e],eax
  4312b1:	push   eax
  4312b2:	sbb    edx,DWORD PTR [ebx]
  4312b4:	xor    BYTE PTR [esi],dl
  4312b6:	les    eax,FWORD PTR [esi]
  4312b8:	add    DWORD PTR [edi],0xfffffff7
  4312bb:	mov    edi,0x3b082fe
  4312c0:	push   eax
  4312c1:	xor    ebx,edi
  4312c3:	jp     0x431248
  4312c5:	sub    al,0x9d
  4312c7:	shl    DWORD PTR ds:0xe29f14fa,cl
  4312cd:	stc    
  4312ce:	(bad)  
  4312cf:	lds    esp,FWORD PTR [esi]
  4312d1:	stos   DWORD PTR es:[edi],eax
  4312d2:	mov    ah,0xec
  4312d4:	xor    eax,0x81000065
  4312d9:	pop    DWORD PTR [edi+0x7fcf054c]
  4312df:	sub    eax,DWORD PTR [ebx-0x1b]
  4312e2:	xor    eax,0x37003fe7
  4312e7:	cli    
  4312e8:	jne    0x431360
  4312ea:	jbe    0x4312f6
  4312ec:	and    ebp,ebp
  4312ee:	(bad)  
  4312ef:	call   FWORD PTR [ebp-0x554a28bf]
  4312f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4312f6:	pusha  
  4312f7:	call   DWORD PTR [edx]
  4312f9:	sbb    dl,cl
  4312fb:	sbb    BYTE PTR ds:[edi+0x5203864e],cl
  431302:	(bad)  
  431303:	xor    al,0xfa
  431305:	dec    esp
  431306:	add    BYTE PTR [ebp+ebp*4+0x4dfa3853],0xce
  43130e:	mov    ebp,0x16d3f513
  431313:	sti    
  431314:	ficomp DWORD PTR [eax+esi*2]
  431317:	dec    esp
  431318:	push   ss
  431319:	rol    BYTE PTR [ecx],0x56
  43131c:	xchg   esp,eax
  43131d:	shr    ebx,cl
  43131f:	std    
  431320:	ret    0x8b19
  431323:	rcr    BYTE PTR [esi],0x92
  431326:	lahf   
  431327:	jae    0x431373
  431329:	inc    eax
  43132a:	inc    esp
  43132b:	jae    0x43137b
  43132d:	inc    eax
  43132e:	inc    esp
  43132f:	jae    0x431394
  431331:	push   eax
  431332:	inc    esp
  431333:	jae    0x43130c
  431335:	cwde   
  431336:	sub    ebx,DWORD PTR [ecx+0x9]
  431339:	push   esi
  43133a:	jmp    0x4312f9
  43133c:	add    BYTE PTR [eax],al
  43133e:	adc    eax,edi
  431340:	in     al,dx
  431341:	mov    ebp,0xd1c30308
  431346:	jmp    0x5202:0x1a0ba377
  43134d:	je     0x43136d
  43134f:	add    ecx,ebp
  431351:	add    esi,DWORD PTR [ebp-0x48]
  431354:	sar    DWORD PTR [ecx],1
  431356:	push   edi
  431357:	pop    ss
  431358:	scas   al,BYTE PTR es:[edi]
  431359:	adc    ecx,0x69
  43135c:	in     eax,0xae
  43135e:	fidiv  WORD PTR [edi-0x5d]
  431361:	or     ebx,DWORD PTR [edx]
  431363:	add    bh,BYTE PTR [ebx-0x1879f574]
  431369:	add    ebx,DWORD PTR [ebp+0x24b2eb1a]
  43136f:	sub    edi,ebp
  431371:	repnz sbb eax,ebp
  431374:	lock rcr DWORD PTR [ebx+0x6186f042],1
  43137b:	push   0x0
  43137d:	into   
  43137e:	mov    gs,WORD PTR [ebx]
  431380:	jmp    0xcfc2b5b1
  431385:	lahf   
  431386:	outs   dx,BYTE PTR ds:[esi]
  431387:	stc    
  431388:	or     eax,0x6113694e
  43138d:	into   
  43138e:	cli    
  43138f:	push   ss
  431390:	in     eax,0x8b
  431392:	inc    ecx
  431393:	xor    al,cl
  431395:	scas   al,BYTE PTR es:[edi]
  431396:	retf   0x6dd3
  431399:	scas   al,BYTE PTR es:[edi]
  43139a:	call   0x3778:0xb50baa7f
  4313a1:	cmp    DWORD PTR [eax],eax
  4313a3:	add    bh,al
  4313a5:	retf   0xdd42
  4313a8:	in     eax,0x3f
  4313aa:	in     al,0x3
  4313ac:	dec    eax
  4313ad:	ja     0x431333
  4313af:	test   BYTE PTR [esi+0x6e276729],bh
  4313b5:	(bad)  
  4313b6:	call   0xe8e002be
  4313bb:	lods   eax,DWORD PTR ds:[esi]
  4313bc:	xchg   edx,eax
  4313bd:	ja     0x4313be
  4313bf:	sub    al,0x7d
  4313c1:	cli    
  4313c2:	out    0x89,eax
  4313c4:	mov    DWORD PTR ds:0x24b72fa,ebp
  4313ca:	xchg   edi,esp
  4313cc:	and    edx,eax
  4313ce:	add    esp,DWORD PTR [eax+0x62]
  4313d1:	out    0xb,al
  4313d3:	bound  edx,QWORD PTR [esi+0x2]
  4313d6:	jg     0x431389
  4313d8:	pop    edx
  4313d9:	sub    eax,0xfa72ad88
  4313de:	test   DWORD PTR [ecx-0x1ea0565e],esp
  4313e4:	sahf   
  4313e5:	jp     0x431432
  4313e7:	int    0xaa
  4313e9:	add    BYTE PTR [edi-0x14],0x26
  4313ed:	mov    esi,0xfc19fc23
  4313f2:	xchg   BYTE PTR [ecx-0x32bc8472],ch
  4313f8:	mov    dh,0x7f
  4313fa:	enter  0x9c75,0x81
  4313fe:	add    BYTE PTR [ebx-0x11f0d261],al
  431404:	dec    ebp
  431405:	push   es
  431406:	lea    ebp,ds:0xfdfd0000
  43140c:	out    0x6e,eax
  43140e:	mov    ah,0x2c
  431410:	cli    
  431411:	aas    
  431412:	mov    ecx,0xaaccb0c5
  431417:	jbe    0x43148c
  431419:	or     eax,0xfad21aa9
  43141e:	mov    ebp,DWORD PTR [esi+ebp*1]
  431421:	test   eax,0xce480f3
  431426:	pop    edi
  431427:	add    eax,0x1e263c00
  43142c:	push   eax
  43142d:	cmp    ah,bl
  43142f:	aam    0x86
  431431:	xchg   ecx,eax
  431432:	push   ss
  431433:	lds    eax,FWORD PTR [ebx]
  431435:	cmp    DWORD PTR [edx+0x5f],0x7d2300fa
  43143c:	ins    DWORD PTR es:[edi],dx
  43143d:	add    al,0x7
  43143f:	test   BYTE PTR fs:[eax],0x1
  431443:	push   ecx
  431444:	push   es
  431445:	push   ebx
  431446:	repz adc ebp,esp
  431449:	adc    al,BYTE PTR [ebp+eax*1-0x7d]
  43144d:	push   es
  43144e:	stc    
  43144f:	mov    esi,0x58ff116e
  431454:	inc    BYTE PTR [edx+0x373fe92]
  43145a:	jecxz  0x43149f
  43145c:	test   BYTE PTR [ebx+0x7548027a],0x86
  431463:	push   ebp
  431464:	cmc    
  431465:	adc    eax,0x401484
  43146a:	lds    ebp,FWORD PTR [ebx-0xa]
  43146d:	ret    0x0
  431470:	inc    ebp
  431471:	add    eax,0x7c3f7600
  431476:	dec    ebx
  431477:	or     BYTE PTR [ecx-0x70bb9149],bh
  43147d:	jmp    edx
  43147f:	cmp    al,0x2e
  431481:	std    
  431482:	out    0xb7,eax
  431484:	(bad)  
  431485:	jmp    0x43147c
  431487:	mov    edx,DWORD PTR [ecx]
  431489:	std    
  43148a:	xor    al,0x89
  43148d:	xlat   BYTE PTR ds:[ebx]
  43148e:	outs   dx,BYTE PTR ds:[esi]
  43148f:	and    al,0x4e
  431491:	dec    BYTE PTR [ebp+0x68]
  431494:	adc    bl,dl
  431496:	cmp    al,0x0
  431498:	jge    0x4314a9
  43149a:	mov    DWORD PTR [esi-0x38],edi
  43149d:	jnp    0x431514
  43149f:	add    al,0x6c
  4314a1:	(bad)  
  4314a2:	inc    DWORD PTR [edi]
  4314a4:	mov    ah,0xdc
  4314a6:	clc    
  4314a7:	stos   BYTE PTR es:[edi],al
  4314a8:	repz out dx,eax
  4314aa:	jle    0x43146c
  4314ac:	cdq    
  4314ad:	adc    al,0x4e
  4314af:	call   0x3eca02
  4314b4:	popf   
  4314b5:	xchg   esi,eax
  4314b6:	push   ebp
  4314b7:	jae    0x43144e
  4314b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314ba:	std    
  4314bb:	xchg   BYTE PTR [esi+0x14],ah
  4314be:	add    eax,0xd208adfb
  4314c3:	push   esi
  4314c4:	push   esp
  4314c5:	pop    esp
  4314c6:	cli    
  4314c7:	(bad)  
  4314c8:	jmp    0x89c13771
  4314cd:	cs int 0x2e
  4314d0:	push   esi
  4314d1:	jo     0x43149c
  4314d3:	xchg   BYTE PTR [eax],al
  4314d5:	add    BYTE PTR [ebx+eiz*4-0x29],ch
  4314d9:	sti    
  4314da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314db:	fsubr  QWORD PTR [edx+0x2a572414]
  4314e1:	out    0x54,eax
  4314e3:	bound  esi,QWORD PTR [ecx]
  4314e5:	cli    
  4314e6:	mov    bh,0x1a
  4314e8:	mov    eax,DWORD PTR [ebp+eax*2+0x44]
  4314ec:	push   es
  4314ed:	(bad)  
  4314ee:	loopne 0x4314f5
  4314f0:	iret   
  4314f1:	out    0x99,al
  4314f3:	xchg   ebx,eax
  4314f4:	add    ecx,DWORD PTR [edi-0x32]
  4314f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314f8:	mov    edi,0xcd6cce07
  4314fd:	out    0xf2,eax
  4314ff:	push   ss
  431500:	(bad)  
  431501:	jmp    DWORD PTR [esi]
  431503:	add    dh,dh
  431505:	not    BYTE PTR [ecx+0x65cd2678]
  43150b:	sbb    BYTE PTR [esi+ebp*1],dh
  43150e:	iret   
  43150f:	bound  ecx,QWORD PTR [ebx+0x2b199d0e]
  431515:	lock push ss
  431517:	pop    ecx
  431518:	jle    0x4314d7
  43151a:	add    eax,0x6f000414
  43151f:	inc    eax
  431520:	jmp    0x3178900c
  431525:	cli    
  431526:	adc    al,0xd7
  431528:	aaa    
  431529:	ss (bad) 
  43152c:	clc    
  43152d:	aaa    
  43152e:	pop    eax
  43152f:	add    dh,ch
  431531:	scas   eax,DWORD PTR es:[edi]
  431532:	ins    BYTE PTR es:[edi],dx
  431533:	jnp    0x431566
  431535:	mov    ah,0x23
  431537:	cmp    eax,0xa780
  43153c:	(bad)  
  43153d:	daa    
  43153e:	mov    DWORD PTR [esi-0x4e25d4e5],ebx
  431544:	mov    esp,0xd214267b
  431549:	inc    ebx
  43154a:	cld    
  43154b:	add    BYTE PTR [eax],dl
  43154d:	retf   0x34bc
  431550:	in     al,dx
  431551:	(bad)  
  431552:	jae    0x431516
  431554:	(bad)  
  431556:	xchg   ecx,eax
  431557:	or     al,0x6e
  431559:	dec    ecx
  43155a:	in     eax,dx
  43155b:	dec    edx
  43155c:	shl    ebx,cl
  43155e:	and    bl,dl
  431560:	push   edi
  431561:	lods   eax,DWORD PTR ds:[esi]
  431562:	lock xchg ah,bl
  431565:	cli    
  431566:	push   eax
  431567:	lock mov ebx,0x4f893127
  43156d:	sbb    dl,BYTE PTR [ebx*2-0x4092d8c7]
  431574:	ss (bad) 
  431576:	mov    edx,0xe04455d8
  43157b:	add    ecx,eax
  43157d:	jnp    0x43157b
  43157f:	cmp    dh,0x29
  431582:	sub    BYTE PTR gs:[esi-0x51205b86],dh
  431589:	repz sub cl,dl
  43158c:	jl     0x431607
  43158e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43158f:	fist   WORD PTR [ebp+0x2acdbdf3]
  431595:	shl    bl,cl
  431597:	add    ebx,DWORD PTR [ebp+0x5e8b4acf]
  43159d:	fiadd  WORD PTR ds:0x5e00003e
  4315a3:	fdivrp st(2),st
  4315a5:	add    esp,DWORD PTR [esi+eax*8]
  4315a8:	add    al,0x14
  4315aa:	adc    al,0xc6
  4315ac:	dec    DWORD PTR [ebp*4-0x5ffabcbc]
  4315b3:	add    al,BYTE PTR [edi+0x27fa124]
  4315b9:	xchg   ecx,eax
  4315ba:	rcr    BYTE PTR [ebx],0xf9
  4315bd:	xchg   esi,eax
  4315be:	and    ah,BYTE PTR [edi+0xa]
  4315c1:	gs push ds
  4315c3:	es cli 
  4315c5:	jmp    0xe4a9190e
  4315ca:	and    eax,edx
  4315cc:	and    eax,ecx
  4315ce:	outs   dx,BYTE PTR ds:[esi]
  4315cf:	jge    0x431615
  4315d1:	fld    QWORD PTR [esi+eiz*1+0x68]
  4315d5:	jmp    0xec2b181e
  4315da:	imul   esp,DWORD PTR [esi],0xfffffffa
  4315dd:	bound  ebp,QWORD PTR [esi-0x25210e82]
  4315e3:	hlt    
  4315e4:	add    cl,ch
  4315e6:	sahf   
  4315e7:	call   0xfefb:0x29eda87
  4315ee:	jbe    0x4315b5
  4315f0:	out    0x2f,al
  4315f2:	jno    0x431670
  4315f4:	imul   DWORD PTR [edx+0x69]
  4315f7:	add    bh,BYTE PTR [ebp-0x10]
  4315fa:	jbe    0x4315bb
  4315fc:	mov    ds:0xc27c6914,al
  431601:	add    al,BYTE PTR [edi*2+0x7979]
  431608:	and    eax,0x554be739
  43160d:	sub    dl,bh
  43160f:	(bad)  
  431610:	sbb    eax,0x1cde032e
  431615:	dec    esp
  431616:	(bad)  
  431617:	call   0xe5858dba
  43161c:	into   
  43161d:	sub    BYTE PTR [esi*8-0x3f003d75],dl
  431624:	ret    0xfc60
  431627:	add    bl,bl
  431629:	sub    eax,0x1a8889ba
  43162e:	push   ss
  43162f:	inc    eax
  431630:	aaa    
  431631:	(bad)  
  431632:	cmc    
  431633:	jne    0x431607
  431635:	repz ds and al,0xab
  431639:	xor    DWORD PTR [esi+0x24],0x8206fcbb
  431640:	xchg   ecx,esi
  431642:	cmc    
  431643:	call   FWORD PTR ds:0x84fffaaa
  431649:	sub    al,0xba
  43164b:	sbb    DWORD PTR [edi+edi*8],0x6
  43164f:	mov    ebp,ds
  431651:	(bad)  
  431652:	(bad)  
  431653:	(bad)  
  431654:	inc    DWORD PTR [edx+0x1e]
  431657:	sbb    al,0xef
  431659:	outs   dx,DWORD PTR ds:[esi]
  43165a:	or     al,BYTE PTR [ebp-0x7d06952e]
  431660:	mov    dl,0x22
  431662:	mov    edx,DWORD PTR [esi+0x40]
  431665:	or     DWORD PTR [ebx-0x35],eax
  431668:	fcomi  st,st(1)
  43166a:	pusha  
  43166b:	add    DWORD PTR [eax],0x0
  43166e:	in     al,dx
  43166f:	cli    
  431670:	push   es
  431671:	mov    bh,0x8c
  431673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431674:	jbe    0x43169a
  431676:	dec    esp
  431677:	jp     0x43164a
  431679:	je     0x4316bb
  43167b:	push   ss
  43167c:	sbb    BYTE PTR [ebp+0x53],dh
  43167f:	jl     0x4316b9
  431681:	add    BYTE PTR [eax],al
  431683:	das    
  431684:	pusha  
  431685:	cmp    ebp,DWORD PTR [eax]
  431687:	sbb    eax,0xa3ef7719
  43168c:	ds and al,0xf0
  43168f:	jmp    FWORD PTR [esi+0x3bbbf7df]
  431695:	add    BYTE PTR [eax],al
  431697:	mov    eax,ds:0x589f76fa
  43169c:	cmp    edi,0x50
  43169f:	cmc    
  4316a0:	dec    ecx
  4316a1:	lea    ebx,[ebp+0x2817e7cf]
  4316a7:	(bad)  
  4316a9:	adc    eax,ebp
  4316ab:	push   es
  4316ac:	pop    edi
  4316ad:	cld    
  4316ae:	retf   0xaaaf
  4316b1:	and    esp,DWORD PTR [ebp-0x5f8bc16a]
  4316b7:	pop    ebp
  4316b8:	ret    0xa323
  4316bb:	sbb    bh,BYTE PTR [ecx+0x19]
  4316be:	push   ss
  4316bf:	psubsb mm3,QWORD PTR [ebx]
  4316c2:	mov    ch,0xa2
  4316c4:	push   0x2efc9afc
  4316c9:	inc    ebx
  4316ca:	mov    ecx,0xc17b7e3a
  4316cf:	adc    edi,esi
  4316d1:	je     0x4316d3
  4316d3:	add    BYTE PTR [eax-0x3e84150d],dh
  4316d9:	cmp    ch,bh
  4316db:	or     DWORD PTR [edx-0x64],0x2d
  4316df:	cli    
  4316e0:	push   ss
  4316e1:	pop    esi
  4316e2:	loop   0x4316f3
  4316e4:	push   ss
  4316e5:	pop    edi
  4316e6:	push   cs
  4316e7:	mov    DWORD PTR [eax+eiz*4+0x6e2613c7],ebx
  4316ee:	loop   0x431703
  4316f0:	adc    al,0x32
  4316f2:	outs   dx,BYTE PTR ds:[esi]
  4316f3:	add    dl,ah
  4316f5:	mov    ecx,ecx
  4316f7:	xchg   BYTE PTR [eax+0x77],al
  4316fa:	inc    esp
  4316fb:	setge  BYTE PTR [ecx]
  4316fe:	mov    esi,0x2e0528a1
  431703:	jae    0x43177e
  431705:	sub    DWORD PTR [esi],edx
  431707:	arpl   WORD PTR [ebx-0x9],cx
  43170a:	sub    eax,0x2810dd2d
  43170f:	push   esp
  431710:	push   ss
  431711:	not    bl
  431713:	dec    esi
  431714:	push   ss
  431715:	adc    bh,BYTE PTR [edx+0x44]
  431718:	test   eax,0xfaff7544
  43171d:	add    bl,ah
  43171f:	leave  
  431720:	in     al,0x23
  431722:	jo     0x4316eb
  431724:	out    0x7e,al
  431726:	test   al,0xb7
  431728:	sahf   
  431729:	out    dx,eax
  43172a:	test   al,0x1d
  43172c:	push   ecx
  43172d:	retf   
  43172e:	push   eax
  43172f:	hlt    
  431730:	retf   
  431731:	and    ebp,eax
  431733:	sbb    ebp,DWORD PTR [edx+0x31b354]
  431739:	add    BYTE PTR [ecx],ah
  43173b:	inc    ebx
  43173c:	xor    al,0x2
  43173e:	cmp    eax,DWORD PTR [ecx]
  431740:	mov    ds:0x201aa6b7,al
  431745:	hlt    
  431746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431747:	and    ebx,DWORD PTR [ebp+0x2c]
  43174a:	add    DWORD PTR [eax],0xffffffd6
  43174d:	xor    BYTE PTR [ecx],bl
  43174f:	and    edi,ebx
  431751:	pop    es
  431752:	mov    edx,0x1bd78d42
  431757:	call   FWORD PTR [ebp-0x7c]
  43175a:	es add ecx,ebp
  43175d:	add    ecx,edi
  43175f:	shr    BYTE PTR [edi-0x39],cl
  431762:	data16 ja 0x431708
  431765:	jmp    DWORD PTR [edx+esi*8]
  431768:	fild   DWORD PTR [ebx]
  43176a:	popf   
  43176b:	int3   
  43176c:	pop    ebp
  43176d:	inc    ecx
  43176e:	cmp    bl,BYTE PTR [edx+0x7e4731b0]
  431774:	sub    BYTE PTR [eax+0x7cf52379],bh
  43177a:	jmp    0xb247d679
  43177f:	inc    ecx
  431780:	lock int3 
  431782:	inc    edx
  431783:	sbb    eax,0x30
  431786:	daa    
  431787:	and    ebx,DWORD PTR [ebx-0x732dcd1]
  43178d:	fnstcw WORD PTR [eax-0x2a]
  431790:	mov    al,ds:0x6d19d77c
  431795:	mov    ebp,0x6cff2304
  43179a:	popa   
  43179b:	scas   al,BYTE PTR es:[edi]
  43179c:	or     esp,DWORD PTR [edx+0x0]
  43179f:	add    BYTE PTR [esp+ebx*4+0x285d7200],ah
  4317a6:	bndldx bnd3,[ecx+0x1c]
  4317aa:	std    
  4317ab:	popa   
  4317ac:	gs leave 
  4317ae:	pop    edx
  4317af:	xor    dl,BYTE PTR [esi-0xc16f49b]
  4317b5:	jnp    0x4317a2
  4317b7:	sbb    BYTE PTR [eax+0x23],al
  4317ba:	test   DWORD PTR [ecx+edi*4],esp
  4317bd:	rcl    BYTE PTR [edx+0x62],1
  4317c0:	inc    esi
  4317c1:	ja     0x4317c3
  4317c3:	jmp    0xe5a8e766
  4317c8:	(bad)  
  4317c9:	jne    0x43181f
  4317cb:	xchg   ebp,eax
  4317cc:	mov    dh,0x86
  4317ce:	inc    ebp
  4317cf:	(bad)  
  4317d0:	int    0x85
  4317d2:	mov    edi,0x7ca193fd
  4317d7:	jge    0x431777
  4317d9:	xchg   esi,eax
  4317da:	sub    ch,BYTE PTR [eax+0x4b]
  4317dd:	push   ds
  4317de:	jmp    esp
  4317e0:	(bad)  
  4317e1:	and    DWORD PTR [ecx+0xf],esi
  4317e4:	lods   al,BYTE PTR ds:[esi]
  4317e5:	xchg   esi,eax
  4317e6:	sti    
  4317e7:	push   ecx
  4317e8:	pop    es
  4317e9:	outs   dx,DWORD PTR ds:[esi]
  4317ea:	cld    
  4317eb:	push   esi
  4317ec:	fnstenv [ecx]
  4317ee:	test   BYTE PTR [edi+0xa],dl
  4317f1:	cli    
  4317f2:	xchg   BYTE PTR [edx+edi*2+0x65f14c88],ch
  4317f9:	mov    ecx,edx
  4317fb:	inc    ecx
  4317fc:	push   esp
  4317fd:	enter  0x2ef9,0x1a
  431801:	bound  esi,QWORD PTR [edi+esi*8+0x0]
  431805:	add    BYTE PTR [edx+ebp*1+0x66],al
  431809:	dec    esp
  43180a:	jae    0x431828
  43180c:	sub    eax,0xc8bbed29
  431811:	sub    ebx,DWORD PTR [edx+0x39008702]
  431817:	xacquire xchg DWORD PTR [ebx-0x8],eax
  43181b:	pushf  
  43181c:	sub    DWORD PTR [eax-0x741700fb],esi
  431822:	add    al,0xd3
  431824:	stos   BYTE PTR es:[edi],al
  431825:	mov    ebp,?
  431827:	add    eax,0x2aa88d00
  43182c:	add    ch,BYTE PTR [eax-0x4c]
  43182f:	pop    ebx
  431830:	cli    
  431831:	call   FWORD PTR [esi+0xa]
  431834:	pop    eax
  431835:	call   0x3b752d
  43183a:	cmp    dh,al
  43183c:	add    eax,0xfec50495
  431841:	dec    DWORD PTR [ecx+0x1083e69d]
  431847:	dec    edi
  431848:	add    eax,0xffffffb3
  43184b:	mov    esi,eax
  43184d:	add    BYTE PTR [ebp+eax*1-0x768c097b],al
  431854:	mov    esi,0x81057400
  431859:	cmp    BYTE PTR [ecx+0x78503934],bh
  43185f:	or     ecx,DWORD PTR [ebp+0x6437b04d]
  431865:	add    cl,dh
  431867:	inc    ebx
  431868:	rcl    BYTE PTR [ecx+0x0],cl
  43186b:	add    ah,cl
  43186d:	add    cl,dl
  43186f:	push   ebx
  431871:	mov    edi,DWORD PTR [edx-0x984c48b]
  431877:	jmp    0x431e94
  43187c:	mov    bh,0xed
  43187e:	add    eax,0xfa7bcb0f
  431883:	inc    DWORD PTR [eax+esi*8+0x1e]
  431887:	popf   
  431888:	sub    ah,dl
  43188a:	cmp    al,0x0
  43188c:	scas   eax,DWORD PTR es:[edi]
  43188d:	inc    esi
  43188e:	add    ah,BYTE PTR ds:0xfba8789d
  431894:	mov    esi,0x5d86aa04
  431899:	das    
  43189a:	adc    eax,0xfe491e78
  43189f:	out    0x73,al
  4318a1:	sub    BYTE PTR [ecx+0x3f],dh
  4318a4:	lea    eax,[edx+ebx*4]
  4318a7:	or     dh,BYTE PTR [edx]
  4318a9:	jmp    0x4318b8
  4318ab:	out    0x75,eax
  4318ad:	xor    BYTE PTR [ecx+0x47],dh
  4318b0:	test   eax,0x4efd4341
  4318b5:	sub    ecx,edi
  4318b7:	mov    dl,0x5d
  4318b9:	aas    
  4318ba:	adc    eax,0x436a1658
  4318bf:	out    0x9e,eax
  4318c1:	lods   al,BYTE PTR ds:[esi]
  4318c2:	ss stc 
  4318c4:	(bad)  
  4318c5:	(bad)  
  4318c6:	jle    0x4318d1
  4318c8:	stos   BYTE PTR es:[edi],al
  4318c9:	jae    0x431885
  4318cb:	icebp  
  4318cc:	pop    ebp
  4318cd:	das    
  4318ce:	add    dh,BYTE PTR [eax+eax*1+0x0]
  4318d2:	mov    ds:0xab3f7128,eax
  4318d7:	test   ah,ch
  4318d9:	jle    0x431930
  4318db:	mov    DWORD PTR ds:0xbed89238,edx
  4318e1:	adc    eax,0xb2f95d86
  4318e6:	fisttp QWORD PTR [ebp+0x15]
  4318e9:	sub    al,0x9a
  4318eb:	xor    BYTE PTR [esi+0x7bd19e17],0x9
  4318f2:	inc    esi
  4318f3:	cmovae eax,DWORD PTR [ecx]
  4318f6:	mov    ch,0x5f
  4318f8:	mov    esi,0xf92737ff
  4318fd:	mov    dl,0xdd
  4318ff:	sub    eax,0x3a46cf31
  431904:	stc    
  431905:	mov    dl,0xdd
  431907:	cmp    eax,0x2a1e743
  43190c:	push   cs
  43190d:	push   es
  43190e:	xchg   esi,eax
  43190f:	push   edi
  431910:	test   al,0xff
  431912:	(bad)  [edx]
  431914:	jmp    0x431898
  431916:	repnz add DWORD PTR [eax+0x5],esp
  43191a:	mov    edx,0x78422f42
  43191f:	sbb    eax,0x2083010d
  431924:	nop
  431925:	cmp    al,0x33
  431927:	jae    0x431995
  431929:	xor    DWORD PTR [eax-0x5fcd94fe],ebp
  43192f:	add    bh,BYTE PTR [ecx+0x32]
  431932:	cwde   
  431933:	add    bh,BYTE PTR [ebx+0x32]
  431936:	add    BYTE PTR [eax],al
  431938:	nop
  431939:	add    ch,BYTE PTR [ebp+0x32]
  43193c:	mov    BYTE PTR [edx],al
  43193e:	outs   dx,BYTE PTR ds:[esi]
  43193f:	xor    al,BYTE PTR [eax+0x78327f02]
  431945:	add    bl,BYTE PTR [esi-0x67fd8fce]
  43194b:	xor    ch,BYTE PTR [eax+0x2]
  43194e:	mov    edx,0x6e026032
  431953:	xor    bl,al
  431955:	add    cl,BYTE PTR [eax-0x7ffd2fce]
  43195b:	xor    cl,al
  43195d:	add    bh,BYTE PTR [eax+0x32]
  431960:	rol    BYTE PTR [edx],0x7f
  431963:	xor    bh,BYTE PTR [eax-0x4fcdc3fe]
  431969:	add    ah,BYTE PTR [esi+0x2d]
  43196c:	mov    dl,BYTE PTR [ebx+ebp*8-0x2d5f9880]
  431973:	clc    
  431974:	sub    DWORD PTR [edi+0x1f572cc8],eax
  43197a:	gs sub al,0xe7
  43197d:	xchg   edi,eax
  43197e:	in     al,dx
  43197f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431980:	sbb    eax,DWORD PTR [edi+0x25]
  431983:	jns    0x4319e4
  431985:	in     eax,0xff
  431987:	call   0xed3e1c2a
  43198c:	sahf   
  43198d:	add    al,BYTE PTR [eax]
  43198f:	call   0xda94427e
  431994:	rcr    BYTE PTR [edx+0x2],1
  431997:	jmp    0x0:0xe58d029e
  43199e:	(bad)  
  4319a0:	sub    ebp,DWORD PTR es:[esi+0x17]
  4319a4:	or     dh,BYTE PTR [esi]
  4319a6:	xchg   ebp,eax
  4319a7:	test   DWORD PTR [edi+0x351edea7],ebp
  4319ad:	push   ss
  4319ae:	sub    al,0x6
  4319b0:	lea    ebx,[ecx-0x62]
  4319b3:	daa    
  4319b4:	add    al,0x57
  4319b6:	aam    0x8d
  4319b8:	inc    edi
  4319b9:	(bad)  
  4319ba:	lds    ecx,FWORD PTR [eax+0x7c]
  4319bd:	scas   eax,DWORD PTR es:[edi]
  4319be:	int    0x5e
  4319c0:	pop    ecx
  4319c1:	stos   BYTE PTR es:[edi],al
  4319c2:	clc    
  4319c3:	xchg   DWORD PTR [ebx],eax
  4319c5:	fs sub al,0xc9
  4319c8:	aas    
  4319c9:	jmp    0x629779ae
  4319ce:	mov    dh,BYTE PTR [edx+0x17243e4e]
  4319d4:	cs test eax,0xe60bc786
  4319da:	sub    ebx,DWORD PTR [esi+0x47]
  4319dd:	les    ebx,FWORD PTR [esi+0x7a90002]
  4319e3:	(bad)  
  4319e4:	sti    
  4319e5:	mov    ebx,0xa1b208de
  4319ea:	xchg   edx,ebx
  4319ec:	int3   
  4319ed:	cdq    
  4319ee:	push   esp
  4319ef:	fdivp  st(7),st
  4319f1:	fsub   QWORD PTR [edi]
  4319f3:	sbb    al,0xbf
  4319f5:	sbb    eax,0x1ae9b069
  4319fa:	in     al,0xa3
  4319fc:	test   BYTE PTR [edx],dh
  4319fe:	dec    ecx
  4319ff:	or     BYTE PTR [edi+0x34000000],0x2
  431a06:	add    bh,bh
  431a08:	icebp  
  431a09:	sbb    eax,0xdfbfc384
  431a0e:	loop   0x431a42
  431a10:	ins    DWORD PTR es:[edi],dx
  431a11:	out    dx,eax
  431a12:	cmc    
  431a13:	cmpps  xmm5,xmm2,0x64
  431a17:	add    BYTE PTR [ebx-0x11],dl
  431a1a:	adc    ecx,DWORD PTR [eax+0x10]
  431a1d:	inc    edx
  431a1e:	cli    
  431a1f:	test   BYTE PTR [ebp+edx*2-0x3e3df0f9],dh
  431a26:	mov    edi,0x4318d4e0
  431a2b:	cld    
  431a2c:	jg     0x431a75
  431a2e:	or     dh,dh
  431a30:	xor    al,0xf4
  431a32:	jg     0x431aa8
  431a34:	(bad)  
  431a35:	sar    BYTE PTR [edx],1
  431a37:	adc    DWORD PTR [ebx+edx*2+0x19],eax
  431a3b:	mov    al,0xc5
  431a3d:	cld    
  431a3e:	pop    ds
  431a3f:	rdmsr  
  431a41:	mov    DWORD PTR ds:0xd3c2c8b6,0x706845a
  431a4b:	mov    dh,0xc0
  431a4d:	ret    0x5ace
  431a50:	je     0x431a58
  431a52:	pop    esi
  431a53:	rcl    DWORD PTR ds:0x4c0b601f,0x19
  431a5a:	lods   eax,DWORD PTR ds:[esi]
  431a5b:	fstp   DWORD PTR [edi]
  431a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a5e:	sub    al,0xc0
  431a60:	fidiv  WORD PTR [bp+si]
  431a63:	dec    ebp
  431a64:	mov    BYTE PTR [ebp+0x8],ch
  431a67:	test   BYTE PTR [eax],al
  431a69:	add    BYTE PTR [ecx+ebx*1-0x6d],al
  431a6d:	sar    ecx,0x2
  431a70:	lea    eax,[eax]
  431a72:	jne    0x431a75
  431a74:	add    bl,ch
  431a76:	push   0xd10fba9d
  431a7b:	(bad)  
  431a7c:	mov    eax,DWORD PTR [ebx*4-0x62fefb5a]
  431a83:	sub    esp,DWORD PTR ds:0xce7c4174
  431a89:	cli    
  431a8a:	mov    al,0x13
  431a8c:	and    eax,0xbe3f7114
  431a91:	push   DWORD PTR [ebx]
  431a93:	repz or al,al
  431a96:	sub    al,bl
  431a98:	sbb    ch,BYTE PTR [edi]
  431a9a:	sbb    eax,0x8efff27e
  431a9f:	inc    ebx
  431aa0:	push   ss
  431aa1:	leave  
  431aa2:	or     ecx,DWORD PTR [edi+eiz*1]
  431aa5:	or     cl,BYTE PTR [edx-0x15]
  431aa8:	popf   
  431aa9:	test   ch,bl
  431aab:	xchg   esi,eax
  431aac:	or     DWORD PTR [edi+0x40303b63],eax
  431ab2:	(bad)  
  431ab3:	stos   DWORD PTR es:[edi],eax
  431ab4:	scas   eax,DWORD PTR es:[edi]
  431ab5:	add    bl,BYTE PTR [esi+edx*8]
  431ab8:	daa    
  431ab9:	(bad)  
  431aba:	fisubr DWORD PTR [edx]
  431abc:	fdivp  st(2),st
  431abe:	dec    eax
  431abf:	aaa    
  431ac0:	into   
  431ac1:	addr16 lahf 
  431ac3:	sub    bh,dh
  431ac5:	push   DWORD PTR [esi+0x5abff469]
  431acb:	loopne 0x431b09
  431acd:	mov    ebp,0x2ba50000
  431ad2:	rcl    BYTE PTR [edx+0x16],1
  431ad5:	push   edx
  431ad6:	jns    0x431b4a
  431ad8:	sub    eax,0x3017fd6c
  431add:	jmp    0xe800:0xfe8b8503
  431ae4:	and    al,cl
  431ae6:	daa    
  431ae7:	cli    
  431ae8:	push   ss
  431ae9:	popf   
  431aea:	push   ss
  431aeb:	mov    al,ds:0xf1259d63
  431af0:	(bad)  [ebp-0xe]
  431af3:	add    cl,dh
  431af5:	and    ecx,ebp
  431af7:	out    0x12,eax
  431af9:	add    ecx,DWORD PTR [edi+0x21885728]
  431aff:	retf   0x40f4
  431b02:	in     al,dx
  431b03:	add    esi,eax
  431b05:	xchg   DWORD PTR [esp+edx*8],edi
  431b08:	shl    DWORD PTR [ecx+ebx*4-0xa014ed6],cl
  431b0f:	dec    esi
  431b10:	aaa    
  431b11:	xchg   esi,eax
  431b12:	sar    BYTE PTR [esi+0x32],1
  431b15:	sbb    al,0xb3
  431b17:	(bad)  
  431b19:	xchg   esi,eax
  431b1a:	clc    
  431b1b:	sub    dl,BYTE PTR [ecx-0x654fe5f2]
  431b21:	scas   eax,DWORD PTR es:[edi]
  431b22:	mov    ch,0x1b
  431b24:	aam    0x2
  431b26:	jmp    0xbd56352e
  431b2b:	outs   dx,BYTE PTR ss:[esi]
  431b2d:	fwait
  431b2e:	sub    ah,0x57
  431b31:	loop   0x431baf
  431b33:	repz add BYTE PTR [eax],al
  431b36:	xor    dl,0x5b
  431b39:	rcr    DWORD PTR [esi-0x51],0x38
  431b3d:	sub    DWORD PTR [ecx-0x2d3c0d2a],esi
  431b43:	sub    BYTE PTR [eax+edi*8-0x5dceffc0],0x15
  431b4b:	lds    ebp,FWORD PTR [ecx+edi*8]
  431b4e:	in     al,dx
  431b4f:	ret    
  431b50:	pop    es
  431b51:	mov    ds:0xa208cc1b,al
  431b56:	frstor [ecx]
  431b58:	loopne 0x431afb
  431b5a:	fwait
  431b5b:	inc    ecx
  431b5c:	or     bh,BYTE PTR [ebx-0x24]
  431b5f:	les    ebp,FWORD PTR [ebp-0x3f]
  431b62:	mov    dh,0x89
  431b64:	sub    bh,BYTE PTR [esp+edi*8+0xef029d9]
  431b6b:	ror    BYTE PTR [esi],0x8
  431b6e:	sub    ah,al
  431b70:	adc    al,0xd5
  431b72:	loop   0x431b8f
  431b74:	(bad)  
  431b75:	fstp   TBYTE PTR [edx-0xf]
  431b78:	aas    
  431b79:	jmp    0xd34e5a97
  431b7e:	lods   eax,DWORD PTR ds:[esi]
  431b7f:	mov    edx,0xaf5f7061
  431b84:	or     bl,BYTE PTR [edi+0x6261d65c]
  431b8a:	add    al,0xcf
  431b8c:	popa   
  431b8d:	sub    BYTE PTR [esi+0x3],bh
  431b90:	(bad)
  431b95:	iret   
  431b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431b97:	rcl    DWORD PTR [ecx+0x6a],0x0
  431b9b:	add    ah,bl
  431b9d:	fisttp WORD PTR [edi+ebp*4+0x704fafe2]
  431ba4:	out    0xb2,eax
  431ba6:	cli    
  431ba7:	cld    
  431ba8:	push   cs
  431ba9:	icebp  
  431baa:	aas    
  431bab:	jmp    0x704e5ac9
  431bb0:	out    0xa6,eax
  431bb2:	pop    edx
  431bb3:	jb     0x431c14
  431bb5:	mov    ecx,0x5ce39056
  431bba:	pop    ss
  431bbb:	jmp    0x392e9f93
  431bc0:	out    dx,al
  431bc1:	pop    es
  431bc2:	mov    bl,0xe8
  431bc4:	leave  
  431bc5:	dec    esp
  431bc6:	jle    0x431b99
  431bc8:	mov    al,ds:0xb600795
  431bcd:	adc    ecx,DWORD PTR [eax+0x624851c]
  431bd3:	push   0xffffff86
  431bd5:	lock je 0x431bc7
  431bd8:	daa    
  431bd9:	mov    dh,0xf7
  431bdb:	pusha  
  431bdc:	jmp    0x431bf4
  431bde:	dec    ebp
  431bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431be0:	dec    ebx
  431be1:	idiv   dl
  431be3:	adc    al,0xa9
  431be5:	enter  0x1cfa,0x85
  431be9:	sbb    eax,0x8eb5e174
  431bee:	sti    
  431bef:	add    BYTE PTR [ebx],ah
  431bf1:	imul   esi,edx,0x678e8
  431bf7:	add    BYTE PTR ds:0x89000ac0,bh
  431bfd:	xchg   edi,eax
  431bfe:	out    0x81,al
  431c00:	add    BYTE PTR [eax],al
  431c02:	lock adc edi,edi
  431c05:	inc    DWORD PTR [edi+ebp*1-0x4f]
  431c09:	cmp    DWORD PTR fs:[esi],eax
  431c0c:	add    BYTE PTR [esi+0xb],dl
  431c0f:	sub    eax,0x6bfb205b
  431c14:	fs je  0x431be3
  431c17:	dec    esp
  431c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c19:	std    
  431c1a:	jae    0x431bb2
  431c1c:	jmp    0x9e74:0xed267333
  431c23:	mul    BYTE PTR [ebx]
  431c25:	lds    esi,FWORD PTR [ebx+0x7dc029ea]
  431c2b:	imul   ebp,DWORD PTR [edx-0x39],0xfffffffa
  431c2f:	or     eax,0x64044095
  431c34:	xchg   DWORD PTR [esi+0x38],eax
  431c37:	xchg   DWORD PTR fs:[esi+0x8],eax
  431c3b:	xchg   edi,eax
  431c3c:	clc    
  431c3d:	test   ebx,esi
  431c3f:	push   0x2241804f
  431c44:	cli    
  431c45:	jae    0x431bcf
  431c47:	jbe    0x431c0b
  431c49:	add    BYTE PTR [ebp+eax*1-0x13e2dc18],dh
  431c50:	cmc    
  431c51:	mov    esi,esp
  431c53:	xor    eax,0x74
  431c56:	xlat   BYTE PTR ds:[ebx]
  431c57:	std    
  431c58:	out    dx,eax
  431c59:	(bad)  
  431c5a:	repz loope 0x431c86
  431c5d:	sar    bl,0x18
  431c60:	xchg   edx,eax
  431c61:	dec    esi
  431c62:	(bad)  
  431c63:	(bad)  
  431c64:	pop    ebp
  431c65:	mov    DWORD PTR [eax],eax
  431c67:	add    BYTE PTR [edx-0x62fd1eaa],bh
  431c6d:	cmp    al,0x2c
  431c6f:	mov    BYTE PTR [edx],cl
  431c71:	cld    
  431c72:	xor    cl,0xf1
  431c75:	cmp    BYTE PTR [ebp-0xe],dh
  431c78:	test   ebp,ebp
  431c7a:	inc    eax
  431c7b:	cli    
  431c7c:	push   0xffffffa7
  431c7e:	inc    ebx
  431c7f:	jae    0x431c12
  431c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c82:	stos   BYTE PTR es:[edi],al
  431c83:	outs   dx,DWORD PTR ds:[esi]
  431c84:	inc    ebp
  431c85:	stc    
  431c86:	inc    eax
  431c87:	cli    
  431c88:	push   edx
  431c89:	lahf   
  431c8a:	inc    ebx
  431c8b:	je     0x431c39
  431c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c8e:	cli    
  431c8f:	gs pushf 
  431c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c92:	xor    bh,dl
  431c94:	lea    ebx,[esi+edi*1]
  431c97:	pop    edx
  431c98:	shl    DWORD PTR [ebx+edi*1-0x43],cl
  431c9c:	jge    0x431cc9
  431c9e:	jne    0x431cec
  431ca0:	jge    0x431c35
  431ca2:	push   ebx
  431ca3:	add    BYTE PTR [ebp-0x76381ad5],bl
  431ca9:	xor    ch,ah
  431cab:	(bad)  
  431cac:	xchg   ecx,eax
  431cad:	cmp    al,0x77
  431caf:	nop
  431cb0:	aad    0x2a
  431cb2:	(bad)  
  431cb3:	jmp    FWORD PTR [edx-0x1ac9d228]
  431cb9:	xchg   ebp,eax
  431cba:	sti    
  431cbb:	popa   
  431cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431cbd:	sbb    ebp,DWORD PTR [ebp+0x16e1160c]
  431cc3:	or     BYTE PTR [esi],ah
  431cc5:	imul   ebx,DWORD PTR [esi+esi*1-0x79024332],0x4de0000
  431cd0:	inc    ebp
  431cd1:	or     cl,BYTE PTR [ebx]
  431cd3:	imul   ebx,DWORD PTR [eax-0x2c5b3b00],0xfffffffa
  431cda:	mov    dl,0x93
  431cdc:	mov    bh,0x1f
  431cde:	adc    eax,0x99e6dfe6
  431ce3:	popa   
  431ce4:	mov    edi,0xf2029d23
  431ce9:	ins    DWORD PTR es:[edi],dx
  431cea:	(bad)  
  431cec:	add    al,BYTE PTR [ebx]
  431cee:	pop    esp
  431cef:	mov    eax,ds:0xa0b64365
  431cf4:	pop    edi
  431cf5:	mov    esi,0x433a078e
  431cfa:	loop   0x431d26
  431cfc:	(bad)  
  431cfd:	pop    ebx
  431cfe:	imul   ebx,DWORD PTR [eax],0x7d92be5f
  431d04:	test   al,0xaf
  431d06:	and    eax,0x52fbe384
  431d0b:	(bad)  
  431d0c:	sti    
  431d0d:	rep lods al,BYTE PTR ds:[esi]
  431d0f:	ret    0xafe8
  431d12:	xchg   esp,eax
  431d13:	lods   al,BYTE PTR ds:[esi]
  431d14:	clc    
  431d15:	es mov cl,0xa
  431d18:	je     0x431cd8
  431d1a:	fidiv  WORD PTR [edx+0x3eab5239]
  431d20:	in     al,0x82
  431d22:	mov    eax,ds:0xa4afe906
  431d27:	lods   al,BYTE PTR ds:[esi]
  431d28:	add    al,0x27
  431d2a:	mov    DWORD PTR [esi],eax
  431d2c:	ins    BYTE PTR es:[edi],dx
  431d2d:	mov    esi,0x5211b26e
  431d32:	add    BYTE PTR [eax],al
  431d34:	cmp    DWORD PTR [esi],0xffffffdc
  431d37:	es jno 0x431d28
  431d3a:	outs   dx,BYTE PTR ds:[esi]
  431d3b:	shl    BYTE PTR [edx-0x46ec8ce9],0xd4
  431d42:	icebp  
  431d43:	scas   eax,DWORD PTR es:[edi]
  431d44:	mov    esi,0x500da185
  431d49:	cli    
  431d4a:	rcl    ah,1
  431d4c:	fst    DWORD PTR [edi]
  431d4e:	fld    DWORD PTR [ecx+ecx*2-0x61521306]
  431d55:	shr    DWORD PTR [eax+0x7b079e19],cl
  431d5b:	mov    edi,0xd218a8a
  431d60:	ret    0xfffd
  431d63:	shl    BYTE PTR [ecx+0x14aefa3e],0x95
  431d6a:	movlps QWORD PTR [ebp-0x7a],xmm6
  431d6e:	inc    edx
  431d6f:	imul   DWORD PTR [esi-0x4f]
  431d72:	cli    
  431d73:	mov    edx,0x6a1f8eb8
  431d78:	mov    ebx,0x9afcfaeb
  431d7d:	mov    ah,0xfa
  431d7f:	call   0x8d9d:0xcd445170
  431d86:	pop    ds
  431d87:	push   0xffffffdd
  431d89:	out    dx,eax
  431d8a:	gs call 0xed2acefe
  431d90:	outs   dx,DWORD PTR ds:[esi]
  431d91:	sbb    al,0xfa
  431d93:	out    0xb1,al
  431d95:	mov    ah,0x13
  431d97:	add    BYTE PTR es:[eax],al
  431d9a:	mov    edx,0x7846f90f
  431d9f:	add    eax,DWORD PTR [eax]
  431da1:	jmp    0xbe109b44
  431da6:	sub    BYTE PTR [eax+0x7e93d972],al
  431dac:	mul    DWORD PTR [edi]
  431dae:	mov    eax,0x1191e71c
  431db3:	sbb    al,0xfa
  431db5:	(bad)  
  431db6:	shr    BYTE PTR [edx],0xde
  431db9:	xadd   BYTE PTR [esi+eax*4],bl
  431dbd:	push   es
  431dbe:	loop   0x431e3f
  431dc0:	jmp    0x431e2a
  431dc2:	test   DWORD PTR [edi-0x3],eax
  431dc5:	call   0x49427f68
  431dca:	fcom   QWORD PTR [esi]
  431dcc:	sub    eax,0xfbbe57ac
  431dd1:	jo     0x431e1e
  431dd3:	aaa    
  431dd4:	cld    
  431dd5:	(bad)  
  431dd6:	jns    0x431d62
  431dd8:	mov    WORD PTR [ebp+0xfa1c83],gs
  431dde:	sub    eax,0xebfdd288
  431de3:	fld    QWORD PTR [edi-0xa1fff63]
  431de9:	(bad)  
  431dea:	std    
  431deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431dec:	retf   0x3bfd
  431def:	fild   WORD PTR [edi-0xa22c743]
  431df5:	call   DWORD PTR [edx+0x29f8939a]
  431dfb:	fcomip st,st(5)
  431dfd:	data16 add BYTE PTR [eax],al
  431e00:	call   0xec410491
  431e05:	fisub  WORD PTR [eax-0x74]
  431e08:	leave  
  431e09:	fsincos 
  431e0b:	dec    ebx
  431e0d:	ja     0x431d95
  431e0f:	test   DWORD PTR [eax+0x62fff5dc],eax
  431e15:	mov    fs,WORD PTR [ebx-0xa211640]
  431e1b:	data16 fsubr DWORD PTR [esi+esi*4-0x69212403]
  431e23:	pop    ecx
  431e25:	sar    ebx,1
  431e27:	jmp    FWORD PTR [ebx-0x66]
  431e2a:	inc    ebx
  431e2b:	add    al,0x7d
  431e2d:	xchg   esp,eax
  431e2e:	loop   0x431e2d
  431e30:	mov    ebx,0x458bde
  431e35:	xlat   BYTE PTR ds:[ebx]
  431e36:	xor    DWORD PTR [eax],0xffffffa9
  431e39:	fdivrp st(5),st
  431e3b:	add    DWORD PTR [ecx+eax*1],eax
  431e3e:	add    BYTE PTR [ecx-0x41a7f],cl
  431e44:	jmp    0x431dd3
  431e46:	cmp    bh,ah
  431e48:	sbb    al,0x52
  431e4a:	pop    ss
  431e4b:	inc    eax
  431e4c:	les    ebx,FWORD PTR [eax-0x1e461b7d]
  431e52:	cmc    
  431e53:	call   ecx
  431e55:	add    eax,0x2b9d400a
  431e5a:	mov    DWORD PTR [ecx+edi*4-0x8],ecx
  431e5e:	push   eax
  431e5f:	out    0x88,eax
  431e61:	sub    edi,esi
  431e63:	inc    DWORD PTR [eax]
  431e65:	add    ah,dl
  431e67:	push   0xa048fa8a
  431e6c:	das    
  431e6d:	pop    esp
  431e6e:	test   ah,dh
  431e70:	push   ds
  431e71:	cli    
  431e72:	xchg   edx,eax
  431e73:	dec    edi
  431e74:	dec    edi
  431e75:	retf   
  431e76:	pop    ecx
  431e77:	addr16 dec edi
  431e79:	retf   
  431e7a:	push   ecx
  431e7b:	xor    BYTE PTR [edi],cl
  431e7d:	add    BYTE PTR ds:0x9e7503e8,bh
  431e83:	imul   eax,DWORD PTR [ebx],0x84f7400
  431e89:	add    BYTE PTR [ebp+0x26511ea0],bl
  431e8f:	cdq    
  431e90:	fcmovb st,st(0)
  431e92:	leave  
  431e93:	adc    al,0x87
  431e95:	icebp  
  431e96:	rcr    DWORD PTR [eax],1
  431e98:	mov    cl,0x86
  431e9a:	inc    edx
  431e9b:	mov    eax,ds:0xa38d85fc
  431ea0:	sti    
  431ea1:	dec    ecx
  431ea2:	and    eax,0x2040be3a
  431ea7:	int    0x98
  431ea9:	lock (bad) 
  431eab:	ins    DWORD PTR es:[edi],dx
  431eac:	inc    ecx
  431ead:	retf   
  431eae:	jmp    0xe20e6ea9
  431eb3:	into   
  431eb4:	dec    edi
  431eb5:	retf   
  431eb6:	(bad)  
  431eb8:	dec    edi
  431eb9:	retf   
  431eba:	rcr    DWORD PTR [edi+0x1726541e],1
  431ec0:	mov    bl,0x86
  431ec2:	dec    eax
  431ec3:	adc    esi,DWORD PTR [ebp+0x1c3fe586]
  431ec9:	jno    0x431ecb
  431ecb:	add    BYTE PTR [ebx-0x60],dh
  431ece:	ror    BYTE PTR [ebx],1
  431ed0:	sub    BYTE PTR [edi],bl
  431ed2:	or     al,0x4f
  431ed4:	and    al,0x2
  431ed6:	sub    al,0x20
  431ed8:	ins    BYTE PTR es:[edi],dx
  431ed9:	sub    ebp,esp
  431edb:	nop
  431edc:	push   ebp
  431edd:	add    bl,BYTE PTR [esi-0x68]
  431ee0:	mov    dh,0x88
  431ee2:	scas   al,BYTE PTR es:[edi]
  431ee3:	fisubr WORD PTR [edi-0x16ef574]
  431ee9:	fucomp st(0)
  431eeb:	add    ebx,DWORD PTR [ebp-0x512fa1fe]
  431ef1:	scas   eax,DWORD PTR es:[edi]
  431ef2:	adc    dh,BYTE PTR [ebp-0x79075169]
  431ef8:	pop    esi
  431ef9:	pop    es
  431efa:	fs inc ebx
  431efc:	add    al,0x1
  431efe:	pop    esi
  431eff:	inc    ecx
  431f00:	jnp    0x431e91
  431f02:	(bad)  
  431f04:	outs   dx,DWORD PTR ds:[esi]
  431f05:	lea    ecx,[ecx+0x6e06d98e]
  431f0b:	mov    eax,0x8e77879a
  431f10:	pop    edi
  431f11:	fmul   DWORD PTR [ecx+0x2f7db797]
  431f17:	xchg   edi,eax
  431f18:	mov    bl,0x87
  431f1a:	sub    eax,0x5e7357ee
  431f1f:	sti    
  431f20:	and    bh,ch
  431f22:	out    0x8b,eax
  431f24:	xchg   esi,eax
  431f25:	add    DWORD PTR [ebx+0x63c29a8b],esi
  431f2b:	sbb    DWORD PTR [ecx+0xd05d12],ebp
  431f31:	add    BYTE PTR [esi-0x45f46c79],ah
  431f37:	sbb    ebp,ebx
  431f39:	sbb    eax,0xbeba5e8f
  431f3e:	xchg   DWORD PTR [bp+di],ecx
  431f41:	sar    BYTE PTR [ebx],0x47
  431f44:	sbb    al,0x4f
  431f46:	out    0x46,al
  431f48:	xor    al,0x4f
  431f4a:	(bad)  
  431f4b:	inc    esi
  431f4c:	sub    al,0x4f
  431f4e:	(bad)  
  431f4f:	inc    esi
  431f50:	jmp    DWORD PTR [ecx+0x7f]
  431f53:	scas   al,BYTE PTR es:[edi]
  431f54:	xchg   ch,bh
  431f56:	push   ds
  431f57:	sub    bh,bh
  431f59:	out    0x9e,eax
  431f5b:	add    cl,BYTE PTR [edi+0x72]
  431f5e:	add    bh,ah
  431f60:	push   edx
  431f61:	bound  ebx,QWORD PTR [edx]
  431f63:	or     BYTE PTR [ebp-0x7b23f54e],al
  431f69:	mov    BYTE PTR ds:0xb2d4fae0,0xf1
  431f70:	aas    
  431f71:	jmp    0xe9ab32be
  431f76:	inc    eax
  431f77:	adc    ebp,DWORD PTR [eax-0x17]
  431f7a:	cmp    BYTE PTR [ebx],dl
  431f7c:	shr    ecx,0x84
  431f7f:	adc    edi,edx
  431f81:	jmp    0x8f3c404c
  431f86:	mov    esp,0x5dddc394
  431f8b:	lods   al,BYTE PTR ds:[esi]
  431f8c:	xchg   BYTE PTR [edx+eiz*1+0x32625154],al
  431f93:	add    eax,DWORD PTR [ebp+0x37000077]
  431f99:	add    DWORD PTR [edi-0x1c],edi
  431f9c:	push   edx
  431f9d:	adc    esi,DWORD PTR [ebx+0x4]
  431fa0:	jl     0x431f90
  431fa2:	sub    edi,edi
  431fa4:	pop    esi
  431fa5:	adc    ebp,DWORD PTR [eax-0x17]
  431fa8:	add    BYTE PTR [ebx],dl
  431faa:	push   0x6812f8e9
  431faf:	jmp    0xe9573389
  431fb4:	sahf   
  431fb5:	add    ch,al
  431fb7:	je     0x431f78
  431fb9:	sbb    dl,bh
  431fbb:	push   0x55
  431fbd:	out    dx,eax
  431fbe:	pop    ecx
  431fbf:	mov    esi,0xb4e47c41
  431fc4:	popa   
  431fc5:	xchg   esp,eax
  431fc6:	cli    
  431fc7:	jmp    0x431fd1
  431fc9:	cmovp  eax,DWORD PTR [eax]
  431fcc:	repz xchg ecx,eax
  431fce:	clc    
  431fcf:	add    ebx,DWORD PTR [edi-0x3b0bbc37]
  431fd5:	(bad)  
  431fd6:	(bad)  
  431fd7:	(bad)  
  431fd8:	cmp    eax,0x4189f653
  431fdd:	test   BYTE PTR [ebx-0x14b65],0xff
  431fe4:	aas    
  431fe5:	retf   0xc321
  431fe8:	xchg   edi,eax
  431fe9:	int3   
  431fea:	in     eax,dx
  431feb:	div    BYTE PTR [ebp+edi*2-0xe]
  431fef:	or     BYTE PTR [ebx+0x17],ch
  431ff2:	add    DWORD PTR [ebp+0x6c],0xb4144b7f
  431ff9:	push   ebp
  431ffa:	push   eax
  431ffb:	push   ebx
  431ffc:	add    BYTE PTR [eax],al
  431ffe:	btc    edx,esp
  432001:	shl    DWORD PTR [edx],0xe3
  432004:	cmc    
  432005:	or     DWORD PTR [eax+0x16],0xffffffe7
  432009:	sahf   
  43200a:	test   DWORD PTR [esi],eax
  43200c:	add    BYTE PTR [ebx-0x1730f177],cl
  432012:	jae    0x431fa7
  432014:	rol    BYTE PTR [ebx],0x7
  432017:	jg     0x432003
  432019:	push   esi
  43201a:	mov    bh,0x58
  43201c:	cmc    
  43201d:	push   ebp
  43201e:	dec    eax
  43201f:	xchg   DWORD PTR [esi+0x78c5b90c],edi
  432025:	or     al,0xbf
  432027:	pop    eax
  432028:	or     cl,BYTE PTR [ebx-0x1746816e]
  43202e:	pop    eax
  43202f:	in     al,0xf5
  432031:	jmp    FWORD PTR [edi+0x37571248]
  432037:	push   esi
  432038:	cmc    
  432039:	push   ebp
  43203a:	call   0x794fdec5
  43203f:	lds    edi,FWORD PTR [eax+0xc]
  432042:	(bad)  
  432043:	pop    eax
  432044:	or     cl,BYTE PTR [ebx-0x41741763]
  43204a:	add    eax,0xeafa2064
  43204f:	xchg   esp,eax
  432050:	leave  
  432051:	pop    ss
  432052:	dec    edx
  432053:	jns    0x432002
  432055:	cli    
  432056:	jo     0x432087
  432058:	add    ebx,0xffffffa1
  43205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43205c:	ds jns 0x431ff8
  43205f:	xchg   esp,eax
  432060:	mov    eax,0x1600000f
  432065:	popa   
  432066:	xchg   cl,al
  432068:	lds    eax,FWORD PTR [edi]
  43206a:	sbb    bh,dl
  43206c:	mov    dl,0xf4
  43206e:	push   cs
  43206f:	jno    0x431ff7
  432071:	sbb    al,0xbf
  432073:	pcmpgtd mm6,QWORD PTR [ecx-0x72]
  432077:	adc    esp,DWORD PTR [esi]
  432079:	out    dx,al
  43207a:	sti    
  43207b:	push   ecx
  43207c:	out    dx,al
  43207d:	in     eax,dx
  43207e:	sbb    dl,BYTE PTR [ecx+esi*4-0x64]
  432082:	inc    edi
  432083:	or     ebx,DWORD PTR [eax]
  432085:	pop    ebx
  432086:	cdq    
  432087:	call   0x1cd58d42
  43208c:	sahf   
  43208d:	fdivrp st(3),st
  43208f:	ss enter 0x9283,0x14
  432094:	push   ss
  432095:	out    0xfb,al
  432097:	push   ecx
  432098:	out    dx,al
  432099:	jmp    0x4320b5
  43209b:	push   esp
  43209c:	test   eax,0x200b479c
  4320a1:	fistp  DWORD PTR [ecx-0x70e3c919]
  4320a7:	dec    eax
  4320a8:	popf   
  4320a9:	add    al,0xa1
  4320ab:	pcmpeqd mm0,mm1
  4320ae:	xchg   ecx,eax
  4320af:	movhps xmm2,QWORD PTR [esi-0xa]
  4320b3:	push   ecx
  4320b4:	retf   0x196a
  4320b7:	push   esp
  4320b8:	mov    cl,0x9c
  4320ba:	inc    edi
  4320bb:	or     ebx,DWORD PTR [eax]
  4320bd:	fistp  DWORD PTR [edx+0x4202c6e8]
  4320c3:	xchg   edi,eax
  4320c4:	lds    edi,FWORD PTR [ebp-0x4d]
  4320c7:	repz add BYTE PTR [eax],al
  4320ca:	and    ecx,DWORD PTR [ecx-0x64]
  4320cd:	loop   0x4320ea
  4320cf:	cmp    eax,0x7b604ebd
  4320d4:	fwait
  4320d5:	adc    edx,DWORD PTR [edi+0x2504d458]
  4320db:	mov    bh,0xdd
  4320dd:	push   cs
  4320de:	pslld  mm4,QWORD PTR [eax-0x8]
  4320e2:	popf   
  4320e3:	add    DWORD PTR [ebx-0x7856448],ebx
  4320e9:	mov    dl,BYTE PTR [ecx+0x12]
  4320ec:	sub    BYTE PTR [ecx-0x25386920],cl
  4320f2:	scas   eax,DWORD PTR es:[edi]
  4320f3:	add    BYTE PTR [esi+edx*4-0x59],ch
  4320f7:	adc    BYTE PTR [ecx+0x381a8b8a],bh
  4320fd:	pop    ds
  4320fe:	xchg   edi,eax
  4320ff:	adc    ch,ah
  432101:	mov    al,ds:0x9299cb9a
  432106:	mov    ecx,0xe590e51b
  43210b:	add    bh,BYTE PTR [esi-0x75345d60]
  432111:	xchg   ebp,eax
  432112:	test   DWORD PTR [ebx+0x2b],edi
  432115:	cld    
  432116:	int3   
  432117:	mov    bh,0x18
  432119:	pop    ds
  43211a:	icebp  
  43211b:	mul    BYTE PTR [ebp+0x47]
  43211e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43211f:	test   DWORD PTR [eax+0x59cc3597],ebp
  432125:	xchg   ecx,eax
  432126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432127:	sbb    esp,ebp
  432129:	nop
  43212a:	in     eax,0x2
  43212c:	(bad)  
  43212d:	mov    al,ds:0x7ba20000
  432132:	mov    ds:0xba0a731f,eax
  432137:	repnz sbb edi,DWORD PTR [esi-0x4e904a20]
  43213e:	push   DWORD PTR ds:0x257ef455
  432144:	call   0x4488:0xb89dbf85
  43214b:	sbb    eax,0x62f7b727
  432150:	fs mov dl,dh
  432153:	ret    0xe857
  432156:	out    dx,eax
  432157:	ret    0x8b89
  43215a:	es ret 0xa063
  43215e:	adc    al,0x62
  432160:	in     eax,dx
  432161:	adc    ecx,DWORD PTR [eax-0x567d29b]
  432167:	out    0xa0,al
  432169:	jp     0x432126
  43216b:	ins    BYTE PTR es:[edi],dx
  43216c:	mov    eax,ds:0xded6fa0b
  432171:	jp     0x4321bf
  432173:	aad    0xc4
  432175:	xor    eax,0x8f14006e
  43217a:	div    DWORD PTR [edx+0x32]
  43217d:	dec    DWORD PTR [eax+0x681abd14]
  432183:	scas   eax,DWORD PTR es:[edi]
  432184:	test   al,0xc
  432186:	ss ret 
  432188:	sub    al,0xf6
  43218a:	xchg   BYTE PTR [edx*4+0x11649b7a],ch
  432191:	or     al,0xfa
  432193:	mov    es,WORD PTR [eax]
  432195:	add    BYTE PTR [esi],dl
  432197:	jae    0x432125
  432199:	jmp    0x293d2e1f
  43219e:	es mov esi,0xa0d9b2f3
  4321a4:	or     DWORD PTR [edx+0xa],esp
  4321a7:	or     eax,DWORD PTR [esi+0x7c7a4edc]
  4321ad:	popa   
  4321ae:	xchg   cl,cl
  4321b0:	stc    
  4321b1:	push   esi
  4321b2:	nop
  4321b3:	mov    BYTE PTR [ecx+edi*8+0x15],dh
  4321b7:	(bad)  
  4321b8:	repz add BYTE PTR [edi+0x4188ffde],dh
  4321bf:	test   DWORD PTR ds:0xf5ed0388,0x838a7fff
  4321c9:	js     0x432186
  4321cb:	in     eax,dx
  4321cc:	cmc    
  4321cd:	mov    eax,DWORD PTR [eax-0x74010579]
  4321d3:	in     eax,dx
  4321d4:	xchg   DWORD PTR [ebp-0x68],edx
  4321d7:	jnp    0x43221c
  4321d9:	clc    
  4321da:	outs   dx,DWORD PTR ds:[esi]
  4321db:	int3   
  4321dc:	cmp    eax,0xfff5fdad
  4321e2:	retf   
  4321e3:	mov    esi,0x5527ccc6
  4321e8:	dec    ebp
  4321e9:	mov    eax,DWORD PTR [eax-0x7f74f5e6]
  4321ef:	sbb    cl,BYTE PTR [esi]
  4321f1:	mov    edi,DWORD PTR [eax+0x1a]
  4321f4:	adc    dl,BYTE PTR [ebp+0x66]
  4321f7:	push   esi
  4321f8:	dec    edi
  4321f9:	push   ecx
  4321fa:	add    BYTE PTR [eax],al
  4321fc:	dec    esp
  4321fd:	sbb    dh,dh
  4321ff:	inc    edx
  432200:	test   BYTE PTR [esi-0xb],ah
  432203:	xor    eax,0x284
  432208:	adc    eax,0x7443a002
  43220d:	xor    edi,DWORD PTR [esi+0x21ac089]
  432213:	fs std 
  432215:	and    al,0xfa
  432217:	push   DWORD PTR [edx+eax*1-0x7d]
  43221b:	inc    esp
  43221c:	push   eax
  43221d:	xor    al,BYTE PTR [ecx+0x467b4c58]
  432223:	and    al,0x58
  432225:	xor    edx,DWORD PTR [edi]
  432227:	mov    eax,DWORD PTR [esi+edi*8+0x7a]
  43222b:	(bad)  
  43222c:	mov    edx,0xf08b3175
  432231:	and    eax,0xb19d832e
  432236:	sbb    al,0x73
  432238:	mov    eax,ds:0x73710df0
  43223d:	xchg   esi,eax
  43223e:	shl    BYTE PTR [ecx+0x28],cl
  432241:	jo     0x432292
  432243:	(bad)  
  432245:	and    DWORD PTR [ebp-0x686766b9],eax
  43224b:	add    ebx,DWORD PTR [ebp-0x6398b592]
  432251:	sbb    bh,dh
  432253:	jmp    DWORD PTR [esi]
  432255:	pop    ecx
  432256:	push   es
  432257:	call   0x4149f3
  43225c:	and    al,0x1b
  43225e:	(bad)  
  43225f:	inc    DWORD PTR [eax]
  432261:	add    BYTE PTR [ebp-0x3af84070],bl
  432267:	aaa    
  432268:	add    al,BYTE PTR [eax]
  43226a:	popf   
  43226b:	add    BYTE PTR [edi+0x63],cl
  43226e:	adc    bl,BYTE PTR [edi]
  432270:	(bad)  
  432271:	call   FWORD PTR [ebp-0x6a3c7ee5]
  432277:	aam    0xb5
  432279:	push   esi
  43227a:	fisub  WORD PTR [eax+0x4c9923c7]
  432280:	les    eax,FWORD PTR [ebx]
  432282:	mov    ds:0x55fffe1b,eax
  432287:	sbb    bh,dh
  432289:	call   FWORD PTR [ebp-0x26792d29]
  43228f:	aas    
  432290:	push   es
  432291:	xchg   ebp,esp
  432293:	adc    edx,ecx
  432295:	mov    DWORD PTR [ebp+0x6afa1a77],0x85678ad6
  43229f:	test   BYTE PTR [ebx-0x11f4a5f5],dl
  4322a5:	cli    
  4322a6:	int    0x2f
  4322a8:	cmp    DWORD PTR es:[edx-0x64],ecx
  4322ac:	push   ss
  4322ad:	jle    0x432308
  4322af:	add    dh,ch
  4322b1:	mov    eax,0xc04c623
  4322b6:	sbb    dh,BYTE PTR [esi+0x15f40c]
  4322bc:	xchg   ecx,eax
  4322bd:	pop    es
  4322be:	popf   
  4322bf:	add    ch,cl
  4322c1:	inc    esi
  4322c2:	jno    0x43233d
  4322c4:	lods   al,BYTE PTR ds:[esi]
  4322c5:	fild   WORD PTR [eax]
  4322c7:	add    BYTE PTR [edx-0x72e50087],bl
  4322cd:	out    dx,al
  4322ce:	sub    DWORD PTR [ebp-0x1468f256],edx
  4322d4:	add    dh,bh
  4322d6:	sbb    DWORD PTR [ebx],ebx
  4322d8:	test   DWORD PTR [eax+0x4048082c],0xb44803e4
  4322e2:	cdq    
  4322e3:	mov    dh,0x23
  4322e5:	sbb    BYTE PTR [ebp-0x4ad67cbd],dh
  4322eb:	xor    eax,0x1ab5147b
  4322f0:	(bad)  
  4322f1:	xor    bh,BYTE PTR ds:0xa5af54bb
  4322f7:	mov    ?,WORD PTR [eax-0x22712888]
  4322fd:	xchg   edi,eax
  4322fe:	out    0x2b,eax
  432300:	aas    
  432301:	add    ecx,ebp
  432303:	add    ecx,edx
  432305:	inc    edx
  432306:	cmc    
  432307:	ds ret 
  432309:	cmp    ebp,esi
  43230b:	xor    eax,0x21a90bbb
  432310:	jmp    0xccf9b78c
  432315:	mov    bl,0xe
  432317:	add    al,0xfb
  432319:	add    al,BYTE PTR [ecx]
  43231b:	dec    edi
  43231c:	shr    ax,0xb4
  432320:	jp     0x4322e8
  432322:	push   ss
  432323:	add    al,0x9d
  432325:	stos   DWORD PTR es:[edi],eax
  432326:	sbb    bh,BYTE PTR [edi+0x1bff3ff1]
  43232c:	add    BYTE PTR [eax],al
  43232e:	sbb    bl,BYTE PTR [eax-0x4cf71edd]
  432334:	cli    
  432335:	fstp   QWORD PTR [edx-0x10]
  432338:	out    0x95,eax
  43233a:	xchg   esp,eax
  43233b:	or     dl,bh
  43233d:	push   0x6a
  43233f:	neg    DWORD PTR [ebx+ebp*1-0x6a]
  432343:	add    cl,ah
  432345:	xor    eax,0x2dcb3762
  43234a:	pop    edx
  43234b:	aaa    
  43234c:	retf   
  43234d:	bound  esp,QWORD PTR [edi+0x1b3d86b6]
  432353:	sbb    BYTE PTR [edi],dl
  432355:	jb     0x432334
  432357:	add    ecx,DWORD PTR [edi+0x72]
  43235a:	xor    eax,0x136251f0
  43235f:	add    al,0x2f
  432361:	fldcw  WORD PTR [edi]
  432363:	test   DWORD PTR [ecx],eax
  432365:	das    
  432366:	fisttp QWORD PTR [eax]
  432368:	jmp    DWORD PTR ds:0xe9000fdd
  43236e:	sahf   
  43236f:	add    cl,BYTE PTR [ebp-0x873318e]
  432375:	out    0xd,eax
  432377:	add    eax,0xb9d2f87
  43237c:	leave  
  43237d:	sbb    dl,BYTE PTR [ebp-0x6acb0536]
  432383:	or     DWORD PTR [ecx-0xb],0x29
  432387:	mov    cl,0x7
  432389:	jmp    0xb6a5:0xf30bdce5
  432390:	or     esp,DWORD PTR [edx+0x0]
  432393:	add    BYTE PTR [edx-0x5],al
  432396:	icebp  
  432397:	sub    DWORD PTR [ebp+0x6b640aa0],ebx
  43239d:	add    al,BYTE PTR [eax]
  43239f:	jmp    0x612ae1c7
  4323a4:	push   eax
  4323a5:	pop    es
  4323a6:	xchg   BYTE PTR [eax],al
  4323a8:	jg     0x4323a4
  4323aa:	mov    BYTE PTR [ebp+0x2c],al
  4323ad:	jge    0x4323f2
  4323af:	sbb    BYTE PTR [ebp-0x307c19b5],bh
  4323b5:	call   0x1128428
  4323ba:	lea    ebx,[ebx-0xbc]
  4323c0:	rcl    DWORD PTR [edx],0x51
  4323c3:	mov    eax,DWORD PTR [eax]
  4323c5:	xchg   ecx,eax
  4323c6:	push   cs
  4323c7:	lea    ecx,[eax-0x6f]
  4323ca:	or     cl,BYTE PTR [ecx+0x81ef39]
  4323d0:	jge    0x43241d
  4323d2:	repnz test DWORD PTR [ebp-0x4474f18e],edi
  4323d9:	fiadd  WORD PTR [edx]
  4323db:	call   DWORD PTR [ebx-0x6cba3f17]
  4323e1:	inc    DWORD PTR [eax+eax*8+0x43753310]
  4323e8:	dec    edi
  4323e9:	dec    ebx
  4323ea:	repnz mov edi,DWORD PTR [ebp+eax*4-0xe]
  4323ef:	dec    BYTE PTR [ecx-0x47]
  4323f2:	jp     0x432471
  4323f4:	mov    bl,0xfe
  4323f6:	jae    0x432418
  4323f8:	add    BYTE PTR [eax],al
  4323fa:	das    
  4323fb:	add    DWORD PTR [ebx-0x8],edi
  4323fe:	sar    BYTE PTR [edx+0x1],cl
  432401:	mov    eax,DWORD PTR [edx-0x783104fe]
  432407:	cli    
  432408:	aaa    
  432409:	(bad)  
  43240a:	mov    ecx,0x804e82fa
  43240f:	ja     0x432461
  432411:	or     BYTE PTR [edi-0x45],dh
  432414:	sub    DWORD PTR [esi+ecx*4],ecx
  432417:	jmp    0x43246c
  432419:	or     al,0xef
  43241b:	dec    eax
  43241c:	out    dx,al
  43241d:	pop    edi
  43241e:	mov    dl,0x47
  432420:	and    ebp,0xc244ce9d
  432426:	fsubr  DWORD PTR [edi-0x2]
  432429:	call   FWORD PTR [ebp+0x26cc2b1b]
  43242f:	fcomip st,st(3)
  432431:	add    BYTE PTR [ebp+0x3d6c94fc],0xf
  432438:	in     eax,0x7e
  43243a:	js     0x432493
  43243c:	inc    eax
  43243d:	ds popf 
  43243f:	sbb    ecx,DWORD PTR [edx+0x4057b51f]
  432445:	ds popf 
  432447:	ret    
  432448:	cmp    edi,ebp
  43244a:	sbb    bl,BYTE PTR [ebx+eax*4]
  43244d:	ret    
  43244e:	cdq    
  43244f:	sahf   
  432450:	ds jae 0x4323ed
  432453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432454:	ror    DWORD PTR [edi],0x77
  432457:	sbb    ch,BYTE PTR [ebp+0x405790fa]
  43245d:	add    BYTE PTR ds:[eax],al
  432460:	popf   
  432461:	pushf  
  432462:	cmp    al,BYTE PTR [edi]
  432464:	push   ss
  432465:	pop    edi
  432466:	jmp    0x26fa:0x17fa32e7
  43246d:	push   edi
  43246e:	jmp    0x1610:0x8a177538
  432475:	addr16 push es
  432477:	dec    esi
  432478:	push   0xffffffa4
  43247a:	xor    eax,DWORD PTR [esi-0x6b1cc1b]
  432480:	mov    dl,0x28
  432482:	xchg   BYTE PTR [ecx+edx*4-0x5c],al
  432486:	enter  0x14f7,0xe4
  43248a:	pop    es
  43248b:	xchg   DWORD PTR [ebx+0x9f91b9c],esp
  432491:	adc    eax,0x1ca14985
  432496:	inc    ecx
  432497:	cs xchg ecx,eax
  432499:	adc    edx,DWORD PTR [ecx]
  43249b:	push   esp
  43249c:	test   eax,0xa6c66e02
  4324a1:	jge    0x4324d5
  4324a3:	or     al,0x6a
  4324a5:	cmp    ch,dl
  4324a7:	pop    es
  4324a8:	stos   DWORD PTR es:[edi],eax
  4324a9:	or     DWORD PTR [ebx],esi
  4324ab:	or     BYTE PTR [edx],ah
  4324ad:	mov    edi,0xfada8b78
  4324b2:	ins    DWORD PTR es:[edi],dx
  4324b3:	das    
  4324b4:	inc    edx
  4324b5:	mov    esp,0x4c471772
  4324ba:	push   0x17
  4324bc:	aaa    
  4324bd:	or     DWORD PTR [edi],ebx
  4324bf:	mov    bl,0xa6
  4324c1:	stc    
  4324c2:	fs scas eax,DWORD PTR es:[edi]
  4324c4:	add    BYTE PTR [eax],al
  4324c6:	daa    
  4324c7:	or     DWORD PTR [ecx-0x75],edx
  4324ca:	sar    edx,1
  4324cc:	mov    bh,0xae
  4324ce:	and    edi,DWORD PTR ds:0x914a350
  4324d4:	cmp    DWORD PTR ds:0x173109bc,ebp
  4324da:	pop    es
  4324db:	(bad)  
  4324dd:	in     eax,dx
  4324de:	mov    edx,0xaee12202
  4324e3:	lock test al,0x3
  4324e6:	out    0xde,al
  4324e8:	mov    ah,0xed
  4324ea:	mov    ds:0x71175e02,al
  4324ef:	jge    0x432505
  4324f1:	test   esi,eax
  4324f3:	fxam   
  4324f5:	add    ebx,DWORD PTR [ebp-0x7c92d79b]
  4324fb:	add    ah,BYTE PTR [eax+0x9]
  4324fe:	stc    
  4324ff:	pop    edx
  432500:	and    eax,0xa0ef2404
  432505:	ins    BYTE PTR es:[edi],dx
  432506:	imul   eax,DWORD PTR [edx],0x60
  432509:	clc    
  43250a:	out    dx,al
  43250b:	pop    edx
  43250c:	and    eax,0x78ce2404
  432511:	ins    BYTE PTR es:[edi],dx
  432512:	rol    DWORD PTR [edx],cl
  432514:	jo     0x4324ee
  432516:	ss pop edx
  432518:	jmp    FWORD PTR [ecx]
  43251a:	cdq    
  43251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43251c:	mov    edx,esp
  43251e:	mov    dh,0x5a
  432520:	ds jmp 0xad4fa136
  432526:	stc    
  432527:	enter  0xeff,0x0
  43252b:	add    BYTE PTR ds:0x5f40a7e7,dl
  432531:	or     BYTE PTR [ebp+esi*2-0x63],ah
  432535:	pop    esi
  432536:	test   al,0x2a
  432538:	mov    eax,ds:0xbecc8ba4
  43253d:	pop    edx
  43253e:	ds jmp 0x856fa15c
  432544:	ror    eax,0xff
  432547:	jl     0x43256c
  432549:	dec    edi
  43254b:	sbb    BYTE PTR [edi+0x8],0x85
  43254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432550:	sahf   
  432551:	addr16 ret 
  432553:	nop
  432554:	fild   WORD PTR [edi]
  432556:	test   DWORD PTR [edx+ecx*1-0x207f3897],esp
  43255d:	pop    es
  43255e:	mov    esp,DWORD PTR [esi+eiz*4-0x20af2c99]
  432565:	pop    es
  432566:	test   DWORD PTR [esi+edi*4+0xb],esp
  43256a:	cli    
  43256b:	push   ss
  43256c:	mov    ds:0xdf400ffe,eax
  432571:	pop    es
  432572:	(bad)  
  432573:	call   0x31e42811
  432578:	cmp    eax,ecx
  43257a:	dec    DWORD PTR [ecx+0x5a]
  43257d:	pop    edi
  43257e:	ds jmp 0x920323ff
  432584:	fadd   QWORD PTR [edi]
  432586:	pop    es
  432587:	in     eax,0x9e
  432589:	inc    edx
  43258a:	ret    0x62ec
  43258d:	pop    edi
  43258e:	ds jmp 0x2e22594
  432594:	add    BYTE PTR [eax],al
  432596:	test   BYTE PTR [edx+edi*8-0x77014861],ah
  43259d:	test   DWORD PTR [edx+ebp*8],ebp
  4325a0:	cmc    
  4325a1:	jmp    DWORD PTR ds:0x8443a002
  4325a7:	jl     0x43252c
  4325a9:	fmul   QWORD PTR [eax]
  4325ab:	in     eax,dx
  4325ac:	cmc    
  4325ad:	push   0x74
  4325af:	out    dx,al
  4325b0:	adc    edi,esp
  4325b2:	push   ebp
  4325b3:	inc    ebx
  4325b4:	cli    
  4325b5:	addr16 loopne 0x4325c3
  4325b8:	cmp    al,BYTE PTR [eax]
  4325ba:	retf   
  4325bb:	pop    ss
  4325bc:	cli    
  4325bd:	adc    DWORD PTR [esi+edi*8+0x67],esi
  4325c1:	or     DWORD PTR [eax+0x3],eax
  4325c4:	sar    bh,0x31
  4325c7:	pop    es
  4325c8:	or     al,0x40
  4325ca:	xor    al,0x53
  4325cc:	cmc    
  4325cd:	adc    eax,0x3a1444
  4325d2:	mov    ebp,0xc8ccc6c1
  4325d7:	mov    edx,0xbab8ccc6
  4325dc:	(bad)  
  4325dd:	int3   
  4325de:	and    bh,BYTE PTR [edx+0x3e]
  4325e1:	and    al,0xd0
  4325e3:	stc    
  4325e4:	mov    edi,0x4679cc75
  4325e9:	and    al,0xe4
  4325eb:	jns    0x43262b
  4325ed:	and    al,0xf8
  4325ef:	xor    esp,ecx
  4325f1:	div    DWORD PTR [ebp+0x8bd279]
  4325f7:	add    BYTE PTR [eax],al
  4325f9:	daa    
  4325fa:	add    dh,bh
  4325fc:	lds    edi,FWORD PTR [ecx-0x16]
  4325ff:	mov    esi,DWORD PTR [edi-0xb]
  432602:	pop    esi
  432603:	and    al,0xd4
  432605:	jns    0x4325c9
  432607:	mov    eax,DWORD PTR [edx]
  432609:	neg    BYTE PTR [esi+0x24]
  43260c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43260d:	add    ecx,edx
  43260f:	jmp    0x4325ae
  432611:	fmul   DWORD PTR [eax-0x2027d939]
  432617:	mov    tr5,eax
  43261a:	fisttp WORD PTR [ebx]
  43261c:	push   ss
  43261d:	loopne 0x4325fe
  43261f:	pop    es
  432620:	ins    BYTE PTR es:[edi],dx
  432621:	inc    ebx
  432622:	sub    eax,0x2d424cd6
  432627:	xlat   BYTE PTR ds:[ebx]
  432628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432629:	push   edx
  43262a:	mov    ebx,esi
  43262c:	jb     0x432697
  43262e:	xchg   edi,ebp
  432630:	push   0xfffffff8
  432632:	fist   WORD PTR [ebx]
  432634:	es xchg DWORD PTR fs:[ebx+0x79],eax
  432639:	sub    ecx,DWORD PTR [ebx]
  43263b:	loope  0x4325db
  43263d:	push   0xffffff90
  43263f:	or     DWORD PTR [esi-0x4df42019],eax
  432645:	and    edx,DWORD PTR [eax-0x25a889f6]
  43264b:	pop    es
  43264c:	mov    bl,0x12
  43264e:	les    esp,FWORD PTR [esi]
  432650:	fincstp 
  432652:	repz push ss
  432654:	jno    0x432655
  432656:	out    dx,eax
  432657:	cs div al
  43265a:	mov    edi,0x95000023
  43265f:	and    BYTE PTR [edx+0x38c49123],ch
  432665:	repnz aad 0x98
  432668:	cmp    bh,bh
  43266a:	daa    
  43266b:	rol    BYTE PTR [edi-0x783ce932],cl
  432671:	(bad)  
  432672:	push   ss
  432673:	(bad)  
  432674:	mov    ah,0xbd
  432676:	lods   eax,DWORD PTR ds:[esi]
  432677:	sbb    eax,DWORD PTR [edx-0x35]
  43267a:	loope  0x4326e4
  43267c:	lods   eax,DWORD PTR ds:[esi]
  43267d:	mov    dh,0xad
  43267f:	mov    ebx,0x20b7ffbf
  432684:	scas   eax,DWORD PTR es:[edi]
  432685:	push   eax
  432686:	imul   BYTE PTR [ebx]
  432688:	pop    esi
  432689:	ds popf 
  43268b:	add    ch,BYTE PTR [esi-0x40]
  43268e:	jle    0x432686
  432690:	outs   dx,DWORD PTR ds:[esi]
  432691:	mov    edi,0x8257b9a
  432696:	and    al,0x99
  432698:	fdivr  QWORD PTR [eax-0x52df4d13]
  43269e:	jmp    0x9e89444e
  4326a3:	add    dh,BYTE PTR [edx-0x63c9c4cc]
  4326a9:	inc    eax
  4326aa:	data16 ss mov ah,0x40
  4326ae:	push   esi
  4326af:	lods   al,BYTE PTR ss:[esi]
  4326b1:	inc    eax
  4326b2:	push   esi
  4326b3:	ss pop ebp
  4326b5:	adc    esi,ecx
  4326b7:	jns    0x432735
  4326b9:	jg     0x43269c
  4326bb:	cli    
  4326bc:	inc    eax
  4326bd:	shl    eax,0x2
  4326c0:	jmp    0x8543276e
  4326c5:	add    edi,ebp
  4326c7:	pop    es
  4326c8:	mov    al,BYTE PTR [edx+0xb]
  4326cb:	inc    edi
  4326cc:	sbb    eax,ebx
  4326ce:	and    al,0x7
  4326d0:	pop    esp
  4326d1:	and    DWORD PTR [eax],0xffffffb4
  4326d4:	fld    DWORD PTR [edx]
  4326d6:	jmp    0x37142e73
  4326db:	dec    ebp
  4326dc:	fwait
  4326dd:	add    ebp,ecx
  4326df:	add    edi,DWORD PTR [edi-0x35]
  4326e2:	mov    al,0xeb
  4326e4:	xchg   edi,eax
  4326e5:	outs   dx,BYTE PTR ds:[esi]
  4326e6:	es jg  0x432721
  4326e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326ea:	and    eax,0x3435e640
  4326ef:	inc    eax
  4326f0:	(bad)  
  4326f1:	xor    eax,0x35d6402c
  4326f6:	pop    ebp
  4326f7:	adc    esi,DWORD PTR [ecx+0x79]
  4326fa:	cld    
  4326fb:	jle    0x432756
  4326fd:	cli    
  4326fe:	ins    DWORD PTR es:[edi],dx
  4326ff:	mov    esp,0x3310186
  432704:	push   cs
  432705:	ret    
  432706:	(bad)  
  432707:	fdivr  st(3),st
  432709:	mov    dl,0xa
  43270b:	or     BYTE PTR ss:[ebx],al
  43270e:	das    
  43270f:	mov    ebx,0xf14375e7
  432714:	mov    dh,0x7d
  432716:	icebp  
  432717:	pop    edi
  432718:	mov    bh,BYTE PTR [ebp+0x7c]
  43271b:	fst    QWORD PTR [ebx]
  43271d:	mov    esp,0x9598020b
  432722:	or     BYTE PTR [edx+0x36],dh
  432725:	cld    
  432726:	dec    BYTE PTR [edi+0xd6b0000]
  43272c:	ins    DWORD PTR es:[edi],dx
  43272d:	jecxz  0x432787
  43272f:	test   DWORD PTR [edi+0x6d325bd1],edi
  432735:	xchg   ecx,eax
  432736:	dec    ebx
  432737:	inc    esp
  432738:	pop    edx
  432739:	aaa    
  43273a:	or     ah,BYTE PTR [edi-0x63aefc42]
  432740:	xlat   BYTE PTR ds:[ebx]
  432741:	bound  eax,QWORD PTR ss:[edx+eiz*8]
  432745:	inc    ebp
  432746:	sahf   
  432747:	add    al,BYTE PTR [eax]
  432749:	push   0x5
  43274b:	or     bh,bh
  43274d:	cs sahf 
  43274f:	add    al,BYTE PTR [eax-0x17]
  432752:	in     al,0x1b
  432754:	pusha  
  432755:	pop    esi
  432756:	(bad)
  43275a:	pop    esi
  43275b:	(bad)  
  43275c:	cmp    al,0x62
  43275e:	in     eax,0xfb
  432760:	es das 
  432762:	dec    esi
  432763:	mov    dl,0xe7
  432765:	pop    ecx
  432766:	scas   eax,DWORD PTR es:[edi]
  432767:	or     dl,bh
  432769:	nop
  43276a:	dec    ecx
  43276b:	jg     0x43272c
  43276d:	mov    ch,0xd3
  43276f:	jl     0x4327b0
  432771:	int    0x61
  432773:	sbb    ebx,DWORD PTR [edx]
  432775:	push   ss
  432776:	scas   al,BYTE PTR es:[edi]
  432777:	test   bh,bl
  432779:	call   0x103ee5e5
  43277e:	scas   eax,DWORD PTR es:[edi]
  43277f:	or     dl,bh
  432781:	add    BYTE PTR [edi-0x6fba7ee1],ch
  432787:	test   dl,bh
  432789:	mov    al,ah
  43278b:	sub    al,0xc7
  43278d:	cmp    eax,0xffb90000
  432792:	(bad)  
  432793:	mov    edi,0x8bbf8bb3
  432798:	cmc    
  432799:	mov    ebp,0xb95c6581
  43279e:	inc    ebx
  43279f:	cld    
  4327a0:	(bad)
  4327a5:	mov    edi,0xff748ae2
  4327aa:	inc    edx
  4327ac:	xor    ebx,DWORD PTR [ebx]
  4327ae:	pop    esi
  4327af:	push   ss
  4327b0:	(bad)  
  4327b1:	dec    bl
  4327b3:	int3   
  4327b4:	xor    dl,al
  4327b6:	(bad)  
  4327b7:	int3   
  4327b8:	xor    dl,al
  4327ba:	(bad)  
  4327bb:	int3   
  4327bc:	mov    edi,0xbf081e3a
  4327c1:	inc    edx
  4327c2:	push   ds
  4327c3:	adc    BYTE PTR [edi-0x39],cl
  4327c6:	or     DWORD PTR [eax+ebx*2+0x3],0x3abf0973
  4327ce:	push   ds
  4327cf:	add    al,0xab
  4327d1:	fistp  QWORD PTR [eax+edx*1-0x1e12b1cc]
  4327d8:	scas   eax,DWORD PTR es:[edi]
  4327d9:	(bad)  
  4327da:	add    DWORD PTR [eax+ebp*4+0x6],0xa9864ed
  4327e2:	stc    
  4327e3:	xlat   BYTE PTR ds:[ebx]
  4327e4:	(bad)  
  4327e5:	cmp    bl,BYTE PTR [esi]
  4327e7:	or     bl,cl
  4327e9:	(bad)  
  4327eb:	ror    BYTE PTR [edi],cl
  4327ed:	mov    ebp,0xc3dc000a
  4327f2:	inc    DWORD PTR [edx+0x0]
  4327f5:	add    ah,dh
  4327f7:	pop    edx
  4327f8:	cmc    
  4327f9:	xor    eax,0xfffffef4
  4327fe:	popf   
  4327ff:	mov    al,ds:0xa2ad23c7
  432804:	lahf   
  432805:	and    ebp,DWORD PTR [ebp-0x52dc6072]
  43280b:	xor    BYTE PTR [esi],bl
  43280d:	dec    esi
  43280e:	push   ebx
  43280f:	fs pop ebp
  432811:	call   DWORD PTR [edx]
  432813:	pop    eax
  432814:	(bad)  
  432815:	xor    BYTE PTR [eax+0x1d],ah
  432818:	rol    esp,cl
  43281a:	dec    ebp
  43281b:	xchg   edx,eax
  43281c:	mov    eax,ds:0xc5f9ae7
  432821:	xchg   al,bl
  432823:	iret   
  432824:	dec    eax
  432825:	inc    esp
  432826:	mov    edx,ecx
  432828:	adc    dl,bh
  43282a:	xor    BYTE PTR [ebx-0x3e],0xf7
  43282e:	sub    BYTE PTR [edi],ch
  432830:	adc    al,0x63
  432832:	ds in  al,dx
  432834:	std    
  432835:	call   FWORD PTR [ebp+0x6d4c7cac]
  43283b:	or     BYTE PTR [ebp+0xc],dh
  43283e:	popf   
  43283f:	jmp    0x43283e
  432841:	push   esp
  432843:	xor    BYTE PTR [edi+0x2274e659],ch
  432849:	pop    esp
  43284a:	in     al,dx
  43284b:	lods   al,BYTE PTR ds:[esi]
  43284c:	jl     0x432848
  43284e:	shl    BYTE PTR [ecx+ebx*1-0x6],1
  432852:	test   al,0xd7
  432854:	adc    BYTE PTR [ebp+ecx*4+0x68],dh
  432858:	xchg   edx,eax
  432859:	or     eax,DWORD PTR [eax]
  43285b:	add    BYTE PTR [edx],ah
  43285d:	xlat   BYTE PTR ds:[ebx]
  43285e:	cmc    
  43285f:	addr16 pop ebp
  432861:	push   ebx
  432862:	ret    
  432863:	(bad)  
  432864:	jp     0x432851
  432866:	pop    ebp
  432867:	ds popf 
  432869:	push   ebx
  43286a:	add    al,0xf7
  43286c:	add    al,BYTE PTR [ecx-0x7c]
  43286f:	ret    
  432870:	xchg   ebp,eax
  432871:	xchg   esi,eax
  432872:	inc    esp
  432873:	cli    
  432874:	mov    eax,0x9d3ff7bf
  432879:	add    dh,BYTE PTR [ebx]
  43287b:	aas    
  43287c:	(bad)  
  43287d:	into   
  43287e:	sub    edi,DWORD PTR [edi]
  432880:	out    0xce,al
  432882:	mov    ecx,0xa18dc27c
  432887:	out    dx,eax
  432888:	and    edx,DWORD PTR [ecx-0x29]
  43288b:	mov    eax,0xccd37b1b
  432890:	mov    ch,0x78
  432892:	in     eax,0x7c
  432894:	mov    ch,0x87
  432896:	jmp    0x1bf4:0x278d7196
  43289d:	push   ecx
  43289e:	jmp    0x432856
  4328a0:	jmp    0xcb01:0x96c1bf53
  4328a7:	jnp    0x432885
  4328a9:	push   ds
  4328aa:	call   0x3f46bf3c
  4328af:	hlt    
  4328b0:	popf   
  4328b1:	sbb    bl,0xdc
  4328b4:	hlt    
  4328b5:	adc    bl,BYTE PTR [esi-0x3a]
  4328b8:	xchg   BYTE PTR [ebx],ch
  4328ba:	pop    ds
  4328bb:	clc    
  4328bc:	sbb    edi,DWORD PTR [eax-0x5]
  4328bf:	add    BYTE PTR [eax],0x0
  4328c2:	pop    esi
  4328c3:	push   cs
  4328c4:	data16 mov gs,WORD PTR [esi+0x22061402]
  4328cb:	pop    eax
  4328cc:	out    dx,eax
  4328cd:	jl     0x4328bb
  4328cf:	adc    bl,BYTE PTR [edx]
  4328d1:	scas   al,BYTE PTR es:[edi]
  4328d2:	sti    
  4328d3:	int    0x1c
  4328d5:	jnp    0x43291d
  4328d7:	pop    eax
  4328d8:	pop    esi
  4328d9:	cdq    
  4328da:	mov    ds:0x1eff5987,al
  4328df:	(bad)  
  4328e0:	out    0x3,eax
  4328e2:	popf   
  4328e3:	lea    ebp,[ecx-0x253de611]
  4328e9:	xchg   DWORD PTR [edi+0x2],ecx
  4328ec:	out    0x3,eax
  4328ee:	outs   dx,BYTE PTR ds:[esi]
  4328ef:	lea    edi,[edi+0x1017a07]
  4328f5:	add    edx,DWORD PTR ds:0xd42e7d2d
  4328fb:	je     0x43291e
  4328fd:	push   0xffffff92
  4328ff:	dec    edx
  432900:	je     0x4328cd
  432902:	pop    ds
  432903:	cld    
  432904:	push   ebp
  432905:	popf   
  432906:	int    0x7f
  432908:	stc    
  432909:	xchg   BYTE PTR [edx],dh
  43290b:	sbb    DWORD PTR [ebp+0x6],edi
  43290e:	sub    BYTE PTR [ebp+0xd],dh
  432911:	push   0xe8fe97aa
  432916:	sahf   
  432917:	jbe    0x43291e
  432919:	mov    ss,WORD PTR [esi-0x5]
  43291c:	stc    
  43291d:	out    0x93,al
  43291f:	pop    ebx
  432920:	pop    ebx
  432921:	stos   DWORD PTR es:[edi],eax
  432922:	mov    ds:0x298502,al
  432927:	add    BYTE PTR [ecx-0x63aa3f79],dl
  43292d:	xchg   DWORD PTR [edx+0xd],ecx
  432930:	dec    ecx
  432931:	mov    DWORD PTR [edx+0x11],eax
  432934:	xor    ebp,edi
  432936:	iret   
  432937:	push   0xffffffda
  432939:	pop    es
  43293a:	test   DWORD PTR [edi],edx
  43293c:	ins    DWORD PTR es:[edi],dx
  43293d:	mov    DWORD PTR [esi],edi
  43293f:	sub    eax,0xec74c014
  432944:	xlat   BYTE PTR ds:[ebx]
  432945:	dec    ecx
  432946:	and    al,0x39
  432948:	(bad)  
  432949:	inc    ecx
  43294a:	sub    BYTE PTR [ecx],bh
  43294c:	call   0x5289:0x46ad7dd2
  432953:	fnsave [edi-0x2193bfc3]
  432959:	jae    0x432966
  43295b:	(bad)  
  43295c:	call   0x58b57984
  432961:	sub    BYTE PTR [eax+0x5e],dl
  432964:	rol    DWORD PTR [eax+0x5197e1c4],1
  43296a:	sbb    al,0x62
  43296c:	fdiv   QWORD PTR [edi]
  43296e:	add    DWORD PTR [eax],0xffffffb4
  432971:	xchg   edi,eax
  432972:	or     al,0x8b
  432974:	dec    edx
  432975:	call   0xdc85b4c3
  43297a:	dec    ecx
  43297b:	inc    DWORD PTR [ebp+0x6f08bd84]
  432981:	mov    ch,0x15
  432983:	mov    eax,DWORD PTR [edx]
  432985:	fadd   QWORD PTR [edx+0x49b1e04e]
  43298b:	inc    DWORD PTR [eax]
  43298d:	add    BYTE PTR [ebp+0x708bd84],al
  432993:	inc    esp
  432994:	jp     0x432995
  432996:	xor    eax,0xbc09500
  43299b:	dec    ecx
  43299c:	aas    
  43299d:	sbb    al,0xb4
  43299f:	add    eax,DWORD PTR [eax]
  4329a1:	add    BYTE PTR [edx-0x42],bl
  4329a4:	jp     0x432986
  4329a6:	jns    0x432957
  4329a8:	mov    ebx,0xf74b8404
  4329ad:	call   FWORD PTR [ebx+0xd]
  4329b0:	push   edi
  4329b1:	pop    ebp
  4329b2:	or     al,BYTE PTR ss:[eax]
  4329b5:	int3   
  4329b6:	dec    eax
  4329b7:	inc    edx
  4329b8:	(bad)
  4329bb:	jns    0x4329a2
  4329bd:	mov    eax,edx
  4329bf:	or     cl,BYTE PTR [ebp-0x75]
  4329c2:	cmp    al,0xc9
  4329c4:	clc    
  4329c5:	jbe    0x432a0d
  4329c7:	jp     0x4329c1
  4329c9:	test   DWORD PTR [ebx],ebp
  4329cb:	xchg   edi,eax
  4329cc:	add    al,0x33
  4329ce:	hlt    
  4329cf:	lods   al,BYTE PTR ds:[esi]
  4329d0:	pop    esp
  4329d1:	ret    
  4329d2:	outs   dx,DWORD PTR ds:[esi]
  4329d3:	inc    esi
  4329d4:	mov    BYTE PTR [esi+0x40],al
  4329d7:	jp     0x432a18
  4329d9:	sbb    al,0xbf
  4329db:	(bad)  
  4329dc:	adc    DWORD PTR [ebx+0xf7303ac],eax
  4329e2:	scas   eax,DWORD PTR es:[edi]
  4329e3:	add    BYTE PTR [ebx+0x50b5b456],al
  4329e9:	push   edx
  4329ea:	popf   
  4329eb:	inc    ecx
  4329ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4329ed:	and    BYTE PTR [ebp+0xd18e9],bl
  4329f3:	add    BYTE PTR [esi],bl
  4329f5:	inc    ecx
  4329f6:	(bad)  
  4329f7:	je     0x432986
  4329f9:	je     0x4329fd
  4329fb:	xchg   DWORD PTR [ebx-0x7],esp
  4329fe:	mov    ah,0x4f
  432a00:	dec    esp
  432a01:	inc    ecx
  432a02:	xchg   ebx,eax
  432a03:	and    DWORD PTR [ebp-0x72be8917],ebx
  432a09:	je     0x4329fd
  432a0b:	xchg   BYTE PTR [eax-0x1f],bl
  432a0e:	mov    ah,0x4d
  432a10:	ins    DWORD PTR es:[edi],dx
  432a11:	add    DWORD PTR ds:0xfd07c2f5,edx
  432a17:	cmp    DWORD PTR [esi],ebx
  432a19:	and    eax,0xe1330100
  432a1e:	js     0x4329e2
  432a20:	dec    edx
  432a21:	mov    es,WORD PTR [eax-0x35]
  432a24:	shl    DWORD PTR [ecx+edi*1+0x39b069cb],1
  432a2b:	retf   
  432a2c:	popa   
  432a2d:	cmp    DWORD PTR [edi+0x5a],esi
  432a30:	mov    ecx,0xc1727735
  432a35:	adc    BYTE PTR [ebx-0x5fdad98d],dl
  432a3b:	xchg   dl,ah
  432a3d:	pop    es
  432a3e:	jns    0x4329d3
  432a40:	xchg   esi,eax
  432a41:	mov    cl,0xb
  432a43:	cli    
  432a44:	(bad)
  432a49:	sbb    ah,BYTE PTR [edi-0x4f2c257a]
  432a4f:	mov    WORD PTR [ecx+0x354faef3],ds
  432a55:	dec    esi
  432a56:	pop    es
  432a57:	cli    
  432a58:	add    BYTE PTR [eax],al
  432a5a:	cmp    dh,BYTE PTR [ecx-0x4c]
  432a5d:	dec    ebx
  432a5e:	es sub eax,0xfbca28c8
  432a64:	(bad)  
  432a65:	pop    edx
  432a66:	mov    cl,0x2
  432a68:	inc    di
  432a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a6b:	sub    edi,DWORD PTR [edx-0x48f0de51]
  432a71:	cld    
  432a72:	dec    edi
  432a73:	inc    esp
  432a74:	dec    ecx
  432a75:	xor    ch,0x0
  432a78:	inc    BYTE PTR [eax-0x78]
  432a7b:	push   es
  432a7c:	push   cs
  432a7d:	inc    ecx
  432a7e:	sti    
  432a7f:	add    dh,dh
  432a81:	inc    ebx
  432a82:	pusha  
  432a83:	fs pusha 
  432a85:	add    ch,BYTE PTR [eax-0x15]
  432a88:	outs   dx,BYTE PTR ds:[esi]
  432a89:	mov    esp,0x7e36899a
  432a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a8f:	pop    ebx
  432a90:	loop   0x432ae6
  432a92:	pop    ebp
  432a93:	cld    
  432a94:	data16 sbb al,al
  432a97:	cmp    BYTE PTR [esi],ah
  432a99:	xchg   ecx,eax
  432a9a:	sahf   
  432a9b:	sub    DWORD PTR [esi],esp
  432a9d:	sbb    BYTE PTR [eax+0x3cb92730],dh
  432aa3:	mov    ebp,eax
  432aa5:	xchg   esi,eax
  432aa6:	mov    ch,0x1
  432aa8:	(bad)  
  432aa9:	jg     0x432a4a
  432aab:	sbb    DWORD PTR [edi+0x0],0x426b0d9d
  432ab2:	mov    bh,ch
  432ab4:	out    0x7e,eax
  432ab6:	out    dx,eax
  432ab7:	jbe    0x432a9f
  432ab9:	mov    dl,0x6
  432abb:	mov    ch,BYTE PTR [ecx-0x31fffff9]
  432ac1:	cmp    bl,BYTE PTR [esi+0x14]
  432ac4:	fsubr  st,st(2)
  432ac6:	scas   eax,DWORD PTR es:[edi]
  432ac7:	or     ah,BYTE PTR [edi-0x3]
  432aca:	call   0x32ccf991
  432acf:	nop
  432ad0:	rol    esi,cl
  432ad2:	jmp    0x432a5a
  432ad4:	push   eax
  432ad5:	add    DWORD PTR ds:0x13751be9,edx
  432adb:	pop    es
  432adc:	scas   al,BYTE PTR es:[edi]
  432add:	cmp    ch,BYTE PTR [esi-0x45]
  432ae0:	retf   0xd
  432ae3:	aas    
  432ae4:	lahf   
  432ae5:	mov    eax,DWORD PTR [ecx+0x21]
  432ae8:	push   0xffffffdd
  432aea:	or     DWORD PTR [edi+0x282d0257],ebx
  432af0:	cli    
  432af1:	aas    
  432af2:	push   esp
  432af3:	pusha  
  432af4:	fiadd  WORD PTR [edi+edi*2+0x53]
  432af8:	lahf   
  432af9:	add    eax,DWORD PTR [eax]
  432afb:	jmp    0xe6c83413
  432b00:	sbb    esi,DWORD PTR [ebp+0x4]
  432b03:	jmp    0x2e6db0ef
  432b08:	xchg   esi,eax
  432b09:	clc    
  432b0a:	test   DWORD PTR [esi+0x61],ebp
  432b0d:	adc    eax,DWORD PTR [eax]
  432b0f:	jmp    0xd27f7367
  432b14:	popa   
  432b15:	ins    BYTE PTR es:[edi],dx
  432b16:	popa   
  432b17:	bound  ebp,QWORD PTR [esi]
  432b19:	imul   edi,ebp,0x6dc2ebfa
  432b1f:	int3   
  432b20:	ror    edx,cl
  432b22:	test   DWORD PTR [eax],edx
  432b24:	add    BYTE PTR [eax],al
  432b26:	and    ah,dh
  432b28:	(bad)  
  432b29:	out    0x9e,eax
  432b2b:	add    dh,BYTE PTR [edx-0x14]
  432b2e:	jmp    0x432b2d
  432b30:	add    cl,ch
  432b32:	sahf   
  432b33:	or     DWORD PTR [ecx+0x11],0x52
  432b37:	std    
  432b38:	retf   
  432b39:	inc    ebx
  432b3a:	cdq    
  432b3b:	push   ecx
  432b3c:	call   0xfa3bd4f6
  432b41:	push   0xffffffb2
  432b43:	pop    es
  432b44:	std    
  432b45:	xchg   esi,eax
  432b46:	xor    al,0x8b
  432b48:	cdq    
  432b49:	test   eax,0x42f9fc6c
  432b4e:	loop   0x432ade
  432b50:	xchg   edx,eax
  432b51:	jmp    0x432aec
  432b53:	add    al,BYTE PTR [eax]
  432b55:	shl    al,cl
  432b57:	ins    BYTE PTR es:[edi],dx
  432b58:	and    edx,eax
  432b5a:	scas   al,BYTE PTR es:[edi]
  432b5b:	add    dl,0x0
  432b5e:	inc    esi
  432b5f:	pop    es
  432b60:	add    BYTE PTR [eax],al
  432b62:	dec    edi
  432b63:	cmp    BYTE PTR [edx],dh
  432b65:	icebp  
  432b66:	sub    al,BYTE PTR [esi]
  432b68:	xor    ecx,0x5631b8bf
  432b6e:	pop    es
  432b6f:	cmp    BYTE PTR [ebx+0x0],ah
  432b72:	push   ebp
  432b73:	sbb    BYTE PTR [edi+0x7a0873f9],cl
  432b79:	(bad)  
  432b7a:	loopne 0x432b82
  432b7c:	lods   eax,DWORD PTR ds:[esi]
  432b7d:	rcr    dl,0xff
  432b80:	call   FWORD PTR [ebp+0x3f]
  432b83:	inc    ebp
  432b84:	(bad)
  432b87:	jge    0x432b6e
  432b89:	push   esi
  432b8a:	add    BYTE PTR [eax],al
  432b8c:	or     edi,DWORD PTR [ebp+0x7c]
  432b8f:	or     BYTE PTR [edi-0x40],cl
  432b92:	add    eax,0xf908b3be
  432b97:	push   DWORD PTR [edi]
  432b99:	aas    
  432b9a:	repnz cmp edi,DWORD PTR [edx-0x6c]
  432b9e:	or     BYTE PTR [ebx+0x249d73b4],cl
  432ba4:	(bad)  
  432ba5:	(bad)  
  432ba6:	(bad)  
  432ba7:	(bad)  
  432ba8:	aas    
  432ba9:	shr    BYTE PTR [ebp-0x7d],0xac
  432bad:	jmp    FWORD PTR [eax+edx*1+0x6c]
  432bb1:	test   edi,esi
  432bb3:	push   DWORD PTR [ebx+0x7d]
  432bb6:	ds je  0x432bb2
  432bb9:	inc    esi
  432bba:	push   es
  432bbb:	test   bl,dh
  432bbd:	push   es
  432bbe:	add    BYTE PTR [eax],al
  432bc0:	test   edx,eax
  432bc2:	gs mov eax,ebx
  432bc5:	stos   BYTE PTR es:[edi],al
  432bc6:	adc    BYTE PTR [edi-0x20],0x41
  432bca:	ds je  0x432c41
  432bcd:	(bad)  
  432bce:	(bad)  
  432bcf:	call   ecx
  432bd1:	add    ch,BYTE PTR [edi]
  432bd3:	je     0x432c0d
  432bd5:	into   
  432bd6:	leave  
  432bd7:	jb     0x432b76
  432bd9:	rcr    ah,cl
  432bdb:	iret   
  432bdc:	adc    al,0x34
  432bde:	nop
  432bdf:	mov    dl,ah
  432be1:	adc    eax,0xe4b5c879
  432be6:	jl     0x432c3a
  432be8:	gs call 0xb8e3121c
  432bee:	xor    esp,DWORD PTR [ebp+0x0]
  432bf1:	add    BYTE PTR [ebp+0x6f4f3d10],bl
  432bf7:	mov    ah,0x15
  432bf9:	sbb    ecx,ecx
  432bfb:	jmp    0xbd9db2fd
  432c00:	jbe    0x432c44
  432c02:	pop    ecx
  432c03:	jo     0x432c04
  432c05:	jle    0x432be0
  432c07:	fcom   DWORD PTR ds:0x733e989
  432c0d:	xchg   BYTE PTR [edx-0x62f07a98],dl
  432c13:	popf   
  432c14:	rol    BYTE PTR [esi+0x527cbd62],0x39
  432c1b:	pusha  
  432c1c:	mov    edi,0xd13a762b
  432c21:	add    DWORD PTR [ecx+ebp*8+0x76cd36fd],ebx
  432c28:	add    DWORD PTR [esp+edx*8+0x5a870070],0xffffffb1
  432c30:	add    al,0xc1
  432c32:	xchg   dh,ch
  432c34:	aam    0xbf
  432c36:	pop    es
  432c37:	in     al,dx
  432c38:	mov    bl,0x4f
  432c3a:	bnd ret 
  432c3c:	sub    al,0x36
  432c3e:	popf   
  432c3f:	jmp    0x432cbd
  432c41:	dec    edx
  432c42:	or     DWORD PTR [ebp+0x0],esi
  432c45:	jg     0x432ca0
  432c47:	fdiv   QWORD PTR [esi+0x4a]
  432c4a:	leave  
  432c4b:	ret    
  432c4c:	mov    esp,0x7ca962fb
  432c51:	adc    bl,BYTE PTR [esi]
  432c53:	add    ebx,DWORD PTR ds:0x520000f4
  432c59:	or     DWORD PTR [eax+edi*4+0x47],esp
  432c5d:	cli    
  432c5e:	xchg   edx,eax
  432c5f:	test   al,0x73
  432c61:	ret    0xa729
  432c64:	sti    
  432c65:	(bad)  
  432c66:	cld    
  432c67:	neg    DWORD PTR [ecx]
  432c69:	icebp  
  432c6a:	repz adc al,0x23
  432c6d:	dec    edx
  432c6e:	adc    edi,DWORD PTR [edi+0x55]
  432c71:	jnp    0x432c55
  432c73:	jl     0x432cd4
  432c75:	cmp    ah,dh
  432c77:	inc    edx
  432c78:	sti    
  432c79:	add    al,0x16
  432c7b:	inc    esp
  432c7c:	mov    ebx,0x9e0966d4
  432c81:	or     DWORD PTR [ebx+0x45],esi
  432c84:	push   0xbb979a8d
  432c89:	rcl    DWORD PTR [ebp+0x63ea4fb3],cl
  432c8f:	int3   
  432c90:	loop   0x432c8b
  432c92:	pop    esi
  432c93:	rol    BYTE PTR [esi-0x75],0xaa
  432c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c98:	sbb    eax,DWORD PTR [edx]
  432c9a:	data16 aas 
  432c9c:	call   0x5ef9:0xc70c13ea
  432ca3:	clc    
  432ca4:	mov    eax,edx
  432ca6:	rol    dl,0xa2
  432ca9:	outs   dx,DWORD PTR ds:[esi]
  432caa:	jmp    0xe241d133
  432caf:	outs   dx,BYTE PTR ds:[esi]
  432cb0:	loop   0x432d0b
  432cb2:	mov    DWORD PTR [ebx-0x571a1ce5],edi
  432cb8:	push   ebx
  432cb9:	test   ecx,ebx
  432cbb:	add    BYTE PTR [eax],al
  432cbd:	add    BYTE PTR [esi-0x1b585872],dl
  432cc3:	xchg   DWORD PTR [ebx],esp
  432cc5:	add    al,0x9c
  432cc7:	push   edi
  432cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432cc9:	cmp    BYTE PTR [esi-0x3a],ah
  432ccc:	stos   DWORD PTR es:[edi],eax
  432ccd:	cmp    BYTE PTR [esi-0x3a],dl
  432cd0:	add    BYTE PTR [esi+eiz*8],bl
  432cd3:	in     eax,dx
  432cd4:	dec    ebp
  432cd5:	pop    ss
  432cd6:	or     al,BYTE PTR [eax+0x2e7f17b]
  432cdc:	add    cl,ch
  432cde:	sahf   
  432cdf:	cmp    ecx,0x3b750262
  432ce5:	out    0xa1,eax
  432ce7:	add    al,BYTE PTR [eax]
  432ce9:	cli    
  432cea:	cmp    al,0xe1
  432cec:	dec    edi
  432ced:	jl     0x432c91
  432cef:	cld    
  432cf0:	test   DWORD PTR [esi],ebp
  432cf2:	or     eax,0xe5dd7380
  432cf7:	add    bh,bh
  432cf9:	call   0x644b969c
  432cfe:	fwait
  432cff:	or     al,0x84
  432d01:	mov    eax,ds:0x6400029c
  432d06:	popa   
  432d07:	or     al,0x84
  432d09:	scas   al,BYTE PTR es:[edi]
  432d0a:	pushf  
  432d0b:	add    al,BYTE PTR [eax]
  432d0d:	push   0xffffff99
  432d0f:	clc    
  432d10:	outs   dx,DWORD PTR ds:[esi]
  432d11:	lds    esp,FWORD PTR [edi+0x44]
  432d14:	dec    eax
  432d15:	bound  edx,QWORD PTR [edx]
  432d17:	push   ecx
  432d18:	test   DWORD PTR [esi-0x2a8e7fd6],edi
  432d1e:	(bad)  
  432d1f:	fld    DWORD PTR [ebp-0x29ffff5a]
  432d25:	or     esi,DWORD PTR [edx+0x2ef6b19d]
  432d2b:	sub    BYTE PTR [esi-0xd8dabbd],bh
  432d31:	inc    esp
  432d32:	sbb    eax,0x405427fb
  432d37:	pusha  
  432d38:	pop    edx
  432d39:	inc    eax
  432d3a:	bound  esi,QWORD PTR [edx-0x6e]
  432d3d:	inc    ebx
  432d3e:	bound  esi,QWORD PTR [eax-0x76]
  432d41:	test   WORD PTR [esi],sp
  432d44:	and    eax,0xf6154919
  432d49:	push   esp
  432d4a:	inc    eax
  432d4b:	add    BYTE PTR [ebx+0x49],ch
  432d4e:	std    
  432d4f:	dec    ecx
  432d50:	out    dx,eax
  432d51:	mov    al,0x41
  432d53:	mov    eax,DWORD PTR [ebx-0x6c74a03e]
  432d59:	call   0xc084:0xba70895f
  432d60:	mov    al,0xdf
  432d62:	or     BYTE PTR [edi-0x68],0x7b
  432d66:	dec    esi
  432d67:	sub    al,0x5f
  432d69:	cmp    al,0x80
  432d6b:	jmp    0x3a5f:0xffffff42
  432d72:	outs   dx,BYTE PTR ds:[esi]
  432d73:	or     eax,0x39e1a784
  432d78:	out    0x3,eax
  432d7a:	add    BYTE PTR [ebx+0x4788fbc0],al
  432d80:	aam    0x84
  432d82:	jbe    0x432de4
  432d84:	div    eax
  432d86:	jnp    0x432dad
  432d88:	add    BYTE PTR [eax],al
  432d8a:	add    eax,0x6f660004
  432d8f:	mov    al,0x65
  432d91:	data16 (bad) 
  432d93:	scas   eax,DWORD PTR es:[edi]
  432d94:	imul   ecx,DWORD PTR [ebx+0xf6343],0x603e79c4
  432d9e:	dec    edi
  432d9f:	dec    eax
  432da0:	popf   
  432da1:	push   ss
  432da2:	mov    ah,0x3
  432da4:	add    eax,0x88957db7
  432da9:	or     al,0xf2
  432dab:	jl     0x432d3b
  432dad:	cwde   
  432dae:	rol    BYTE PTR [ebx],cl
  432db0:	add    BYTE PTR [ebx+0xf6373],cl
  432db6:	mov    ah,0xcf
  432db8:	cli    
  432db9:	xchg   DWORD PTR [eax+0x249f00d1],eax
  432dbf:	call   0x45bf2dbd
  432dc4:	mov    ecx,0x74979d0f
  432dc9:	jg     0x432db1
  432dcb:	sub    DWORD PTR [edx+eiz*2],eax
  432dce:	pushf  
  432dcf:	pop    ebp
  432dd0:	imul   edx,DWORD PTR [edi-0x7302165f],0x19
  432dd7:	pop    eax
  432dd8:	ins    BYTE PTR es:[edi],dx
  432dd9:	add    ebx,DWORD PTR [ebp+0x52c07ee9]
  432ddf:	mov    al,ds:0xe9050004
  432de4:	(bad)  
  432de5:	call   FWORD PTR [ebp-0x513838f9]
  432deb:	aad    0xf4
  432ded:	mov    dl,0x0
  432def:	add    BYTE PTR [eax+esi*8+0x4b],ah
  432df3:	sbb    BYTE PTR ds:0x37ffc432,0xde
  432dfa:	hlt    
  432dfb:	mov    dl,0xec
  432dfd:	test   eax,0x97a20216
  432e02:	jle    0x432e83
  432e04:	push   edi
  432e05:	test   eax,0x6d9c61fd
  432e0a:	jnp    0x432d93
  432e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e0d:	jmp    0x5d5db50f
  432e12:	jmp    0xde26:0x36fbeaff
  432e19:	icebp  
  432e1a:	jl     0x432dbb
  432e1c:	mov    bl,0xe9
  432e1e:	std    
  432e1f:	xchg   BYTE PTR [edx-0x77],bl
  432e22:	hlt    
  432e23:	xchg   ebx,eax
  432e24:	(bad)  
  432e26:	mov    esp,0x771a1673
  432e2b:	dec    edx
  432e2c:	xor    esp,edx
  432e2e:	jl     0x432eaf
  432e30:	popf   
  432e31:	jmp    0x6c95a133
  432e36:	add    eax,0xb59b2cfe
  432e3b:	mov    dl,ah
  432e3d:	mov    edi,esi
  432e3f:	pop    edx
  432e40:	add    DWORD PTR [ebx],eax
  432e42:	outs   dx,BYTE PTR ds:[esi]
  432e43:	lods   al,BYTE PTR ds:[esi]
  432e44:	test   BYTE PTR [ecx+0x461bbc3a],0x2f
  432e4b:	jns    0x432e2c
  432e4d:	cmp    bl,dl
  432e4f:	dec    ebp
  432e50:	fiadd  WORD PTR [eax]
  432e52:	in     eax,0x30
  432e54:	add    BYTE PTR [eax],al
  432e56:	dec    ebx
  432e57:	mov    ch,BYTE PTR [edx]
  432e59:	shl    BYTE PTR [ebx-0x1142f93f],0x89
  432e60:	or     dl,al
  432e62:	and    eax,0xff52f3e
  432e67:	jmp    DWORD PTR [edi]
  432e69:	loope  0x432ed3
  432e6b:	mov    bh,BYTE PTR [edx]
  432e6d:	les    edi,FWORD PTR [ebx+ecx*4-0x5258561d]
  432e74:	sub    bl,BYTE PTR [eax+0x792f4623]
  432e7a:	iret   
  432e7b:	or     DWORD PTR ds:[ebx-0x62],edi
  432e7f:	dec    eax
  432e80:	push   0xffffffb4
  432e82:	jb     0x432e3d
  432e84:	call   0xd445cb8c
  432e89:	dec    esp
  432e8a:	cmc    
  432e8b:	and    edi,0xa2039d03
  432e91:	xchg   edi,eax
  432e92:	sbb    ecx,DWORD PTR [esi-0x1]
  432e95:	add    BYTE PTR [esi+0x66],cl
  432e98:	outs   dx,BYTE PTR ds:[esi]
  432e99:	mov    ah,0x4a
  432e9b:	mov    ebp,0xf5daa3aa
  432ea0:	out    0x3,eax
  432ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ea3:	lods   al,BYTE PTR ds:[esi]
  432ea4:	in     eax,0x7a
  432ea6:	pop    edi
  432ea7:	dec    edx
  432ea8:	and    edx,DWORD PTR ss:[edi-0x75fd6254]
  432eaf:	ret    
  432eb0:	(bad)  
  432eb1:	mov    esp,0xbbaa8b4e
  432eb6:	ret    
  432eb7:	push   edi
  432eb8:	outs   dx,BYTE PTR ds:[esi]
  432eb9:	lods   al,BYTE PTR ds:[esi]
  432eba:	add    BYTE PTR [eax],al
  432ebc:	mov    DWORD PTR ss:[eax],eax
  432ebf:	scas   al,BYTE PTR es:[edi]
  432ec0:	data16 jg 0x432ec7
  432ec3:	jmp    0x432eda
  432ec5:	mov    DWORD PTR [eax-0x7afd6101],esp
  432ecb:	jbe    0x432f02
  432ecd:	adc    BYTE PTR [eax],al
  432ecf:	jmp    0x60a61f87
  432ed4:	mov    ch,0x3c
  432ed6:	test   DWORD PTR [esi+0x41],ebx
  432ed9:	adc    BYTE PTR [eax],al
  432edb:	jmp    0xdfdbb9f3
  432ee0:	sahf   
  432ee1:	add    cl,BYTE PTR [eax-0x650a561b]
  432ee7:	dec    ecx
  432ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432ee9:	add    al,BYTE PTR [eax]
  432eeb:	out    dx,al
  432eec:	add    al,0xc2
  432eee:	(bad)  
  432eef:	call   0xe9d7b20e
  432ef4:	sahf   
  432ef5:	add    al,BYTE PTR [ebp+0xffd76]
  432efb:	jmp    0x5dc4ad0d
  432f00:	mov    eax,ds:0xe8ba0002
  432f05:	push   ds
  432f06:	lds    esp,FWORD PTR [eax]
  432f08:	mov    cs:0xb9ee912,al
  432f0e:	xchg   esp,eax
  432f0f:	sub    ebx,DWORD PTR [esi-0x149d8bb8]
  432f15:	hlt    
  432f16:	pop    edx
  432f17:	aad    0x15
  432f19:	lock or DWORD PTR [ebp-0x32],esp
  432f1d:	clc    
  432f1e:	stc    
  432f1f:	add    BYTE PTR ss:[eax],al
  432f22:	sub    cl,BYTE PTR [ebx+0x5c]
  432f25:	fs loopne 0x432fa1
  432f28:	add    DWORD PTR [edx+0x56],esi
  432f2b:	cmp    bh,ch
  432f2d:	daa    
  432f2e:	mov    dl,0xf3
  432f30:	sub    DWORD PTR cs:[edx],ebp
  432f33:	push   ebx
  432f34:	ins    BYTE PTR es:[edi],dx
  432f35:	sbb    DWORD PTR [esi+0x600cf1f],0x51
  432f3c:	dec    edi
  432f3d:	call   0x4367e6
  432f42:	inc    DWORD PTR [edi+0x6c]
  432f45:	mov    DWORD PTR [ebx],edi
  432f47:	push   esp
  432f48:	add    DWORD PTR [edi],0xfffffff7
  432f4b:	mov    ebx,0xf5d4e810
  432f50:	idiv   edi
  432f52:	call   DWORD PTR [eax]
  432f54:	jnp    0x432fcf
  432f56:	je     0x432f58
  432f58:	pop    es
  432f59:	test   eax,ecx
  432f5b:	add    dh,dh
  432f5d:	inc    DWORD PTR [ebx-0x503fd4a0]
  432f63:	popa   
  432f64:	mov    ebx,0x7d62b38b
  432f69:	leave  
  432f6a:	jl     0x432f73
  432f6c:	add    DWORD PTR [edi+0x3c],0xfffffffd
  432f70:	mov    eax,0xc02d46eb
  432f75:	xor    esi,esi
  432f77:	jl     0x432f6f
  432f79:	add    al,0x33
  432f7b:	mov    WORD PTR [edx+0x6c58af52],?
  432f81:	sub    esi,DWORD PTR ds:0x57504e
  432f87:	add    BYTE PTR [ecx+ebp*4],bl
  432f8a:	cmp    BYTE PTR [eax],al
  432f8c:	hlt    
  432f8d:	test   BYTE PTR [edi],bh
  432f8f:	ins    BYTE PTR es:[edi],dx
  432f90:	lea    ecx,[eax+0x5c]
  432f93:	mov    ecx,DWORD PTR [ebx]
  432f95:	jge    0x432f5b
  432f97:	adc    BYTE PTR [eax+ebx*1-0xf],bl
  432f9b:	jmp    DWORD PTR [ebx-0x7c]
  432f9e:	pop    es
  432f9f:	xor    esi,DWORD PTR [esi+esi*1+0x11191039]
  432fa6:	jnp    0x432fa6
  432fa8:	mov    eax,0xe3c08d10
  432fad:	popa   
  432fae:	push   ebx
  432faf:	dec    eax
  432fb0:	aaa    
  432fb1:	(bad)  
  432fb3:	pop    esp
  432fb4:	popf   
  432fb5:	sub    BYTE PTR [edx-0x6e2b6606],al
  432fbb:	ror    BYTE PTR [edx-0x65],0x5a
  432fbf:	mov    ebx,DWORD PTR [ecx-0x17]
  432fc2:	add    al,0x5b
  432fc4:	pop    esi
  432fc5:	xchg   esi,eax
  432fc6:	mov    ch,ah
  432fc8:	out    dx,al
  432fc9:	mov    edx,DWORD PTR [esi-0x7b]
  432fcc:	or     dl,dh
  432fce:	mov    esp,0xfde982ff
  432fd3:	test   BYTE PTR [edx+0x60],bh
  432fd6:	dec    edi
  432fd7:	je     0x432ff5
  432fd9:	rol    BYTE PTR [esi],cl
  432fdb:	jmp    FWORD PTR [edx-0x17]
  432fde:	je     0x432ffe
  432fe0:	jne    0x43301b
  432fe2:	cli    
  432fe3:	stc    
  432fe4:	pop    edx
  432fe5:	pusha  
  432fe6:	dec    edi
  432fe7:	je     0x433005
  432fe9:	mov    dl,0x6
  432feb:	inc    DWORD PTR [eax]
  432fed:	add    BYTE PTR [edx-0x17],cl
  432ff0:	je     0x432ff8
  432ff2:	push   ds
  432ff3:	push   ss
  432ff4:	adc    BYTE PTR [eax],al
  432ff6:	stos   BYTE PTR es:[edi],al
  432ff7:	gs cs (bad) 
  432ffa:	xor    ch,cl
  432ffc:	add    bh,0x9a
  432fff:	xlat   BYTE PTR gs:[ebx]
  433001:	(bad)  
  433002:	and    ch,cl
  433004:	xor    al,0xc0
  433006:	push   ds
  433007:	jb     0x43300c
  433009:	outs   dx,BYTE PTR ds:[esi]
  43300a:	fs pusha 
  43300c:	inc    edi
  43300d:	dec    eax
  43300e:	push   ss
  43300f:	lods   al,BYTE PTR ds:[esi]
  433010:	push   ebp
  433011:	test   DWORD PTR [edx-0x3b],ebp
  433014:	mov    WORD PTR [ecx-0x4f],?
  433017:	cmp    ah,ah
  433019:	test   DWORD PTR [edx+0x11],esp
  43301c:	lss    ebx,FWORD PTR [ecx-0x26]
  433020:	add    ebp,DWORD PTR ds:0x544707dc
  433026:	es pushf 
  433028:	inc    ecx
  433029:	sbb    eax,0x40575fcf
  43302e:	adc    al,0x2
  433030:	stos   BYTE PTR es:[edi],al
  433031:	dec    ebx
  433032:	aas    
  433033:	xchg   ebx,esp
  433035:	inc    edx
  433036:	aas    
  433037:	mov    ebx,ebp
  433039:	jne    0x433053
  43303b:	inc    ebx
  43303c:	jnp    0x433062
  43303e:	push   esp
  43303f:	outs   dx,BYTE PTR cs:[esi]
  433041:	pop    ecx
  433042:	pop    ebp
  433043:	add    esi,DWORD PTR [edx]
  433045:	or     bl,ah
  433047:	jge    0x432feb
  433049:	dec    ebx
  43304a:	sbb    BYTE PTR [edx-0x5d],bl
  43304d:	imul   esp,DWORD PTR [eax],0x6a537a
  433053:	add    BYTE PTR [edx],bl
  433055:	aaa    
  433056:	sub    eax,0x5e62e48d
  43305b:	pop    eax
  43305c:	in     eax,dx
  43305d:	mov    al,0xe5
  43305f:	add    ebx,DWORD PTR [ebp-0x1aaf8ffe]
  433065:	jnp    0x433079
  433067:	push   0x87477a22
  43306c:	pop    ebp
  43306d:	ja     0x43308c
  43306f:	cmp    eax,0x3e78314
  433074:	popf   
  433075:	jne    0x43309c
  433077:	(bad)  
  433078:	int3   
  433079:	pop    esi
  43307a:	pop    esi
  43307b:	push   eax
  43307c:	sbb    DWORD PTR ds:0x94282b7,0x2d9d03e8
  433086:	cwde   
  433087:	js     0x433056
  433089:	push   edx
  43308a:	sbb    ch,ah
  43308c:	retf   
  43308d:	and    ah,bh
  43308f:	add    ecx,DWORD PTR [eax+0x5c8aefc6]
  433095:	bound  esp,QWORD PTR [esi-0x5]
  433098:	sahf   
  433099:	jns    0x43308c
  43309b:	cmp    dl,BYTE PTR [ebx+edi*2]
  43309e:	out    0x3,eax
  4330a0:	popf   
  4330a1:	jbe    0x433079
  4330a3:	test   ch,ah
  4330a5:	add    eax,0x5a2012b4
  4330aa:	add    ch,al
  4330ac:	adc    DWORD PTR [ebx+0x70],0x1002c868
  4330b3:	jmp    0x7040a556
  4330b8:	add    BYTE PTR [eax],al
  4330ba:	xor    eax,0x36ae8562
  4330bf:	outs   dx,DWORD PTR ds:[esi]
  4330c0:	clc    
  4330c1:	jmp    0x29e:0xe869708d
  4330c8:	aaa    
  4330c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4330ca:	(bad)  
  4330cb:	sti    
  4330cc:	or     BYTE PTR [edi-0x78fffd61],0x19
  4330d3:	push   ebx
  4330d4:	ins    BYTE PTR es:[edi],dx
  4330d5:	dec    edi
  4330d6:	mov    dh,0x53
  4330d8:	fs jb  0x4330bd
  4330db:	pop    esi
  4330dc:	test   DWORD PTR [esi],esp
  4330de:	cmc    
  4330df:	fs and eax,0xa48b16ba
  4330e5:	fistp  WORD PTR [esi-0x56ca74fe]
  4330eb:	in     eax,dx
  4330ec:	xchg   BYTE PTR [esi],ch
  4330ee:	sar    ebx,1
  4330f0:	mov    al,0xa3
  4330f2:	push   ss
  4330f3:	xchg   ebx,eax
  4330f4:	mov    al,ds:0x62029eff
  4330f9:	jo     0x433088
  4330fb:	aas    
  4330fc:	test   DWORD PTR [esi-0x7],esi
  4330ff:	adc    eax,DWORD PTR [eax]
  433101:	jmp    0xdfdbc41d
  433106:	sahf   
  433107:	add    ch,BYTE PTR [edx+ebp*8]
  43310a:	es push es
  43310c:	push   ss
  43310d:	out    0x48,al
  43310f:	ret    0xe8b5
  433112:	sahf   
  433113:	add    al,BYTE PTR [eax]
  433115:	call   0xe955d33d
  43311a:	sahf   
  43311b:	sti    
  43311c:	mov    cl,0x79
  43311e:	add    BYTE PTR [eax],al
  433120:	sbb    DWORD PTR [edi+0x40],eax
  433123:	jmp    0xd922a8
  433128:	inc    ebx
  433129:	mov    es,WORD PTR [eax+eax*1]
  43312c:	les    edx,FWORD PTR [ecx-0x593687c]
  433132:	(bad)  
  433133:	push   DWORD PTR ds:0xb4fff7c7
  433139:	add    al,0xb8
  43313b:	add    ch,al
  43313d:	add    al,0x0
  43313f:	iretw  
  433141:	mov    esp,0xb7cb0c6b
  433146:	ror    DWORD PTR [edi],0x62
  433149:	xchg   DWORD PTR [eax-0x1cfbbbb7],eax
  43314f:	or     eax,0xc1c9b97b
  433154:	sahf   
  433155:	pop    es
  433156:	pop    es
  433157:	mov    dh,0xf6
  433159:	add    DWORD PTR [edx+0x40],0xffffff84
  43315d:	data16 stc 
  43315f:	fwait
  433160:	add    edi,DWORD PTR [ecx+eax*1+0x0]
  433164:	je     0x4331e3
  433166:	jg     0x433104
  433168:	inc    edx
  433169:	add    al,0x0
  43316b:	sub    eax,DWORD PTR [edi]
  43316d:	xor    eax,0xa3c339c1
  433172:	push   cs
  433173:	add    BYTE PTR [edi*2-0x67b487c1],dh
  43317a:	mov    ecx,0xd01cf78b
  43317f:	add    DWORD PTR [ebx+0x6a],esi
  433182:	jnp    0x433144
  433184:	add    BYTE PTR [eax],al
  433186:	sbb    bh,BYTE PTR [edi+0x3f]
  433189:	js     0x433138
  43318b:	push   edx
  43318c:	or     bl,ch
  43318e:	pop    es
  43318f:	xchg   ebx,eax
  433190:	inc    ecx
  433191:	add    BYTE PTR ds:0xb38b6c51,al
  433197:	jb     0x4331cc
  433199:	(bad)  
  43319a:	jecxz  0x4331c9
  43319c:	add    DWORD PTR [edi+0x2c],0x7d
  4331a0:	inc    edi
  4331a1:	pop    eax
  4331a2:	popf   
  4331a3:	fs pop edx
  4331a5:	xor    al,0xce
  4331a7:	cmp    DWORD PTR [esi-0x4c075ab7],eax
  4331ad:	dec    esp
  4331ae:	lods   al,BYTE PTR ds:[esi]
  4331af:	fld    TBYTE PTR [esi]
  4331b1:	mov    edi,0x8551a07e
  4331b6:	pop    edx
  4331b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331b8:	mov    WORD PTR [ecx+0x55],es
  4331bb:	clc    
  4331bc:	mov    dl,0x4
  4331be:	pop    esp
  4331bf:	mov    esp,0x994a85d7
  4331c4:	arpl   WORD PTR [edi-0x4ef54c5f],ax
  4331ca:	pop    edx
  4331cb:	xchg   ebp,eax
  4331cc:	xchg   BYTE PTR [ecx-0x1b],cl
  4331cf:	je     0x433223
  4331d1:	inc    esp
  4331d2:	sti    
  4331d3:	bound  eax,QWORD PTR [ecx]
  4331d5:	inc    esi
  4331d6:	inc    esi
  4331d7:	(bad)  
  4331d9:	call   FWORD PTR [ebp-0xf87b418]
  4331df:	mov    ebp,?
  4331e1:	pop    eax
  4331e2:	add    DWORD PTR [ebp+0x79],ebx
  4331e5:	or     BYTE PTR [ebp+0x6c4364],bl
  4331eb:	add    BYTE PTR [edx+0x20],bl
  4331ee:	ins    BYTE PTR es:[edi],dx
  4331ef:	add    BYTE PTR [ebp-0x253f0227],bl
  4331f5:	cmp    esi,edi
  4331f7:	call   FWORD PTR [ebp+0x38840cd9]
  4331fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4331fe:	sti    
  4331ff:	stc    
  433200:	cmp    BYTE PTR es:[eax-0x7d],ah
  433204:	dec    edi
  433205:	adc    DWORD PTR [ebx],eax
  433207:	test   edx,ebx
  433209:	rol    DWORD PTR [eax],1
  43320b:	(bad)  
  43320c:	(bad)  ss:[eax]
  43320f:	mov    DWORD PTR [edi+0x6dbe28d9],0xb4e8530a
  433219:	mov    bh,0xfd
  43321b:	call   DWORD PTR [esi]
  43321d:	add    dh,BYTE PTR [edx+0x6607206f]
  433223:	enter  0x798d,0xa2
  433227:	pop    edi
  433228:	cmc    
  433229:	mov    BYTE PTR [ecx-0x3],dl
  43322c:	in     al,0x7a
  43322e:	fiadd  DWORD PTR [eax+0xce71253]
  433234:	push   ds
  433235:	popf   
  433236:	xor    al,0xfd
  433238:	les    ecx,FWORD PTR [esi-0x77]
  43323b:	xor    ch,bl
  43323d:	dec    edx
  43323e:	(bad)  
  43323f:	sar    BYTE PTR [eax],0x6f
  433242:	pop    DWORD PTR [ebx]
  433244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433245:	xchg   BYTE PTR [ebp+0x4],dh
  433248:	popf   
  433249:	add    bl,BYTE PTR [esi+0x45]
  43324c:	xor    DWORD PTR [ebx-0x4e],edi
  43324f:	cmp    eax,DWORD PTR [eax]
  433251:	add    BYTE PTR [ebx],ah
  433253:	inc    edi
  433254:	out    dx,eax
  433255:	cld    
  433256:	sbb    BYTE PTR [esi+0x29d1647],dl
  43325c:	pop    esi
  43325d:	lea    edi,[ecx]
  43325f:	adc    eax,0xf4c803e7
  433264:	inc    ecx
  433265:	mov    ebp,DWORD PTR [ecx+0x5945e53]
  43326b:	adc    eax,0x7e1803e7
  433270:	xchg   DWORD PTR ds:0x76f029d,edx
  433276:	fwait
  433277:	add    edx,DWORD PTR [edx-0x5d]
  43327a:	scas   eax,DWORD PTR es:[edi]
  43327b:	add    ah,bh
  43327d:	or     al,0xf
  43327f:	ror    DWORD PTR [ecx],cl
  433281:	add    ebx,DWORD PTR [ecx]
  433283:	xchg   esi,eax
  433284:	jae    0x433289
  433286:	popf   
  433287:	add    ah,BYTE PTR [edi+eax*4+0xc]
  43328b:	xchg   edi,eax
  43328c:	out    0x3,eax
  43328e:	popf   
  43328f:	jns    0x4332fb
  433291:	lahf   
  433292:	scas   eax,DWORD PTR es:[edi]
  433293:	add    ah,bh
  433295:	sub    BYTE PTR [eax+0x2c],dl
  433298:	add    BYTE PTR [esi+0x3e],ch
  43329b:	adc    DWORD PTR [eax],eax
  43329d:	jmp    0xb6c84e2d
  4332a2:	pop    edx
  4332a3:	add    edi,0x418799e1
  4332a9:	adc    DWORD PTR [ebp+ebp*4-0x3d52141b],ebx
  4332b0:	test   DWORD PTR [esi+0x1200644a],ebx
  4332b6:	add    BYTE PTR [eax],al
  4332b8:	out    dx,al
  4332b9:	cmp    al,0x50
  4332bb:	sahf   
  4332bc:	mov    dh,0x84
  4332be:	xor    ebp,ecx
  4332c0:	sahf   
  4332c1:	xchg   DWORD PTR [ecx-0x6b],eax
  4332c4:	daa    
  4332c5:	inc    esp
  4332c6:	pop    esp
  4332c7:	jb     0x433262
  4332c9:	outs   dx,DWORD PTR ds:[esi]
  4332ca:	(bad)  
  4332cb:	stc    
  4332cc:	mov    dh,0xf4
  4332ce:	repz push cs
  4332d0:	mov    eax,ds:0xf9e80987
  4332d5:	pop    esi
  4332d6:	stc    
  4332d7:	scas   al,BYTE PTR es:[edi]
  4332d8:	or     dh,BYTE PTR [esi]
  4332da:	outs   dx,DWORD PTR ds:[esi]
  4332db:	fnstenv [edi+0x53]
  4332de:	stc    
  4332df:	out    dx,al
  4332e0:	xchg   ch,ch
  4332e2:	pop    edx
  4332e3:	push   ebp
  4332e4:	jbe    0x433321
  4332e6:	je     0x433358
  4332e8:	(bad)  
  4332e9:	pop    edx
  4332ea:	out    0xd5,eax
  4332ec:	gs jmp 0x4332e8
  4332ef:	push   0xffffffe6
  4332f1:	pop    edx
  4332f2:	add    BYTE PTR ds:0x4d5187df,bh
  4332f8:	and    al,BYTE PTR [ebx+0x38]
  4332fb:	arpl   bp,bx
  4332fd:	in     al,dx
  4332fe:	cli    
  4332ff:	bound  edx,QWORD PTR [esi]
  433301:	mov    ds:0x879ee912,al
  433306:	xchg   ecx,eax
  433307:	inc    ebp
  433308:	pop    DWORD PTR [edx]
  43330a:	add    dl,bl
  43330c:	sub    al,0x60
  43330e:	xchg   ebp,edx
  433310:	rol    BYTE PTR [edi+0x10640091],1
  433316:	add    BYTE PTR [eax],al
  433318:	(bad)  
  433319:	jns    0x4332b3
  43331b:	push   ss
  43331c:	add    BYTE PTR [eax],al
  43331e:	hlt    
  43331f:	add    BYTE PTR [eax-0x68fa1afc],cl
  433325:	mov    al,ds:0xf0000fa
  43332a:	or     al,dh
  43332c:	pop    esi
  43332d:	add    DWORD PTR [eax-0x7f],esi
  433330:	xchg   esp,eax
  433331:	add    ah,dh
  433333:	add    BYTE PTR [ebp+0x924b84],al
  433339:	add    ah,al
  43333b:	jge    0x4333ac
  43333d:	push   0x855c393f
  433342:	jge    0x4333b2
  433344:	dec    DWORD PTR [edx-0x3f04d6f5]
  43334a:	pop    DWORD PTR [ebx+ebp*1]
  43334d:	sar    BYTE PTR [edi],0x73
  433350:	or     al,0x33
  433352:	test   si,si
  433355:	add    al,0x93
  433357:	jl     0x433313
  433359:	push   edx
  43335a:	(bad)  
  43335c:	ins    BYTE PTR es:[edi],dx
  43335d:	sub    esp,DWORD PTR [ebp-0x63a8afac]
  433363:	fbstp  TBYTE PTR [eax+eax*1]
  433366:	test   BYTE PTR [ebp+0x3f],bh
  433369:	ins    BYTE PTR es:[edi],dx
  43336a:	in     eax,dx
  43336b:	inc    eax
  43336c:	pop    esp
  43336d:	mov    edi,DWORD PTR [ebx-0x7b]
  433370:	les    edx,FWORD PTR [eax]
  433372:	pop    esp
  433373:	push   ecx
  433374:	in     eax,dx
  433375:	jmp    DWORD PTR [ebx+0x7d]
  433378:	pop    es
  433379:	xor    eax,DWORD PTR [edi+ebp*1]
  43337c:	cmp    DWORD PTR [eax],edx
  43337e:	mov    edi,esi
  433380:	jp     0x433380
  433382:	add    BYTE PTR [eax],al
  433384:	cmp    cl,bh
  433386:	mov    eax,es
  433388:	jecxz  0x4333d2
  43338a:	push   ebx
  43338b:	dec    eax
  43338c:	(bad)  
  43338d:	(bad)  
  43338f:	pop    esp
  433390:	popf   
  433391:	cwde   
  433392:	cmp    dl,0x99
  433395:	int3   
  433396:	mov    eax,eax
  433398:	jp     0x4333bd
  43339a:	pop    ecx
  43339b:	mov    ebx,DWORD PTR [ecx-0x27]
  43339e:	add    al,0x5b
  4333a0:	fimul  WORD PTR [esi]
  4333a2:	mov    esp,ebp
  4333a4:	push   ss
  4333a5:	pop    ss
  4333a6:	or     al,0x2d
  4333a8:	in     al,0x20
  4333aa:	shl    DWORD PTR [ecx+edi*2+0x70],cl
  4333ae:	inc    ebx
  4333af:	sbb    al,0xa6
  4333b1:	sbb    ch,BYTE PTR [ecx+0x5b]
  4333b4:	adc    al,0xa2
  4333b6:	adc    DWORD PTR [edi+0x468ccd67],eax
  4333bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333bd:	jb     0x43340a
  4333bf:	sbb    dl,ah
  4333c1:	xchg   edi,eax
  4333c2:	sub    eax,0xfdd9c2ff
  4333c7:	xchg   BYTE PTR [ebp+0x24044572],ah
  4333cd:	mov    dl,0x1
  4333cf:	xchg   DWORD PTR [ebp-0x47],edx
  4333d2:	mov    WORD PTR [eax+0x75],cs
  4333d5:	bound  eax,QWORD PTR [ebp+0x2c]
  4333d8:	and    al,0xb1
  4333da:	sub    eax,0x8cc1e587
  4333df:	dec    eax
  4333e0:	leave  
  4333e1:	test   WORD PTR [eax],si
  4333e4:	cwde   
  4333e5:	fscale 
  4333e7:	rol    BYTE PTR [eax],0x0
  4333ea:	fucomp st(5)
  4333ec:	std    
  4333ed:	jg     0x43338c
  4333ef:	fld    DWORD PTR [esi+0x4c62f948]
  4333f5:	push   eax
  4333f6:	adc    al,0x21
  4333f8:	dec    eax
  4333f9:	rcr    DWORD PTR ds:0x9d001b99,0xda
  433400:	std    
  433401:	call   FWORD PTR [ebp-0x593b7b64]
  433407:	fscale 
  433409:	clc    
  43340a:	cmp    al,BYTE PTR [edx]
  43340c:	mov    ds:0x3cc280f9,al
  433411:	(bad)  
  433412:	mov    eax,ds:0x24fa4f02
  433417:	jmp    0x4333a3
  433419:	push   edi
  43341a:	pop    ebx
  43341b:	push   es
  43341c:	out    0xc7,eax
  43341e:	loope  0x4333dd
  433420:	stos   DWORD PTR es:[edi],eax
  433421:	enter  0xbdd9,0x1c
  433425:	(bad)  
  433426:	icebp  
  433427:	jbe    0x433445
  433429:	or     al,0x4c
  43342b:	test   DWORD PTR [eax],esi
  43342d:	jo     0x433498
  43342f:	ja     0x433411
  433431:	pop    ss
  433432:	push   ds
  433433:	jmp    0x433410
  433435:	push   ax
  433437:	push   esp
  433438:	pop    esi
  433439:	outs   dx,DWORD PTR ds:[esi]
  43343a:	test   eax,0x9f7b3985
  43343f:	das    
  433440:	push   ds
  433441:	icebp  
  433442:	out    0xd6,eax
  433444:	loope  0x4333d2
  433446:	out    0xc0,eax
  433448:	add    BYTE PTR cs:[eax+0x7f],bh
  43344c:	and    DWORD PTR [eax+eax*1],esi
  43344f:	add    BYTE PTR [esi],dh
  433451:	jmp    DWORD PTR [ebp-0x1e]
  433454:	xchg   esp,eax
  433455:	test   DWORD PTR [ecx],ebx
  433457:	jo     0x4333e8
  433459:	jg     0x433464
  43345b:	or     al,0x19
  43345d:	add    BYTE PTR [esi-0x6],ah
  433460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433461:	push   0xaaf059eb
  433466:	icebp  
  433467:	clc    
  433468:	test   dl,ch
  43346a:	mov    dl,BYTE PTR [esi+0x3b]
  43346d:	sti    
  43346e:	out    0x8c,al
  433470:	fsubr  QWORD PTR [esi]
  433472:	fs ret 
  433474:	icebp  
  433475:	push   es
  433476:	adc    BYTE PTR [ecx-0x47],dh
  433479:	outs   dx,BYTE PTR ds:[esi]
  43347a:	repnz push ebx
  43347c:	and    BYTE PTR [edi+ecx*1-0x73],al
  433480:	ficomp DWORD PTR [esi]
  433482:	pop    ss
  433483:	stc    
  433484:	pop    edx
  433485:	jle    0x433487
  433487:	and    al,0x91
  433489:	(bad)
  43348e:	xor    al,0xe9
  433490:	sahf   
  433491:	add    al,BYTE PTR [eax]
  433493:	cmp    BYTE PTR [esi],dl
  433495:	dec    esp
  433496:	or     BYTE PTR [eax-0x53],ah
  433499:	push   ds
  43349a:	call   0xfa2f4a80
  43349f:	daa    
  4334a0:	jo     0x4334ed
  4334a2:	pop    ebx
  4334a3:	stos   DWORD PTR es:[edi],eax
  4334a4:	xchg   esi,eax
  4334a5:	add    bh,BYTE PTR [eax-0x613fa89]
  4334ab:	push   cs
  4334ac:	push   edx
  4334ad:	test   al,0x8
  4334af:	jmp    0x2e0feb8e
  4334b4:	add    BYTE PTR [eax],al
  4334b6:	loop   0x43346e
  4334b8:	int3   
  4334b9:	mov    esp,0xa485d711
  4334be:	scas   al,BYTE PTR es:[edi]
  4334bf:	aaa    
  4334c0:	sub    eax,0x9a79122
  4334c5:	sub    DWORD PTR gs:[ebx],eax
  4334c8:	add    cl,ch
  4334ca:	push   ds
  4334cb:	sub    ebp,DWORD PTR [edi]
  4334cd:	fidivr WORD PTR [ebx]
  4334cf:	js     0x4334d1
  4334d1:	jmp    0xf5be9c74
  4334d6:	data16 sti 
  4334d8:	and    BYTE PTR [ecx-0x62],0x2
  4334dc:	add    BYTE PTR [edi-0x3df78ad7],dh
  4334e2:	mov    DWORD PTR [ebp+0x7],esi
  4334e5:	lahf   
  4334e6:	and    esp,DWORD PTR [edi]
  4334e8:	cli    
  4334e9:	xchg   edx,eax
  4334ea:	jmp    0x433494
  4334ec:	adc    cl,ch
  4334ee:	daa    
  4334ef:	dec    esp
  4334f0:	sbb    BYTE PTR [eax],ah
  4334f2:	retf   
  4334f3:	and    dh,BYTE PTR [ebx-0xd]
  4334f6:	sub    eax,DWORD PTR [eax+eiz*1+0x69]
  4334fa:	fisub  WORD PTR [edi]
  4334fc:	add    BYTE PTR [eax-0xd],ah
  4334ff:	sbb    dh,BYTE PTR [edi]
  433501:	add    BYTE PTR [edx+0x22],bh
  433504:	ins    DWORD PTR es:[edi],dx
  433505:	pop    es
  433506:	add    ebp,DWORD PTR [eax]
  433508:	and    al,0xa0
  43350a:	ja     0x433551
  43350c:	add    BYTE PTR [ebx+0x4e831682],cl
  433512:	cmp    BYTE PTR fs:[eax-0x34],ch
  433516:	lahf   
  433517:	(bad)  
  433518:	jmp    FWORD PTR [ecx+0x0]
  43351b:	add    BYTE PTR ds:0x7fd1f755,dh
  433521:	out    0x7b,al
  433523:	les    ecx,FWORD PTR [eax]
  433525:	sub    al,0xf3
  433527:	jne    0x433521
  433529:	dec    edi
  43352a:	push   esi
  43352b:	mov    eax,0xfff7f188
  433530:	(bad)  
  433531:	dec    ebx
  433532:	mov    edx,0x4d7c0410
  433537:	or     al,0x26
  433539:	jbe    0x4335b1
  43353b:	sbb    al,0x22
  43353d:	jbe    0x433596
  43353f:	xor    al,0x5c
  433541:	leave  
  433542:	idiv   bh
  433544:	pop    ebx
  433545:	jge    0x43351f
  433547:	test   DWORD PTR [edi+0x72],edi
  43354a:	adc    al,0x8b
  43354c:	repnz sbb al,0x83
  43354f:	dec    esi
  433550:	mov    al,ds:0x75ff5039
  433555:	test   esp,eax
  433557:	or     BYTE PTR [ebx-0x4bffe3d8],al
  43355d:	add    al,0x0
  43355f:	pop    edi
  433560:	dec    edx
  433561:	jge    0x43351e
  433563:	pop    ebx
  433564:	cmp    edx,eax
  433566:	adc    BYTE PTR [eax],al
  433568:	fsub   st(4),st
  43356a:	idiv   edi
  43356c:	mov    ecx,DWORD PTR [ebp+0x55]
  43356f:	ret    0x454
  433572:	int3   
  433573:	int3   
  433574:	sub    al,al
  433576:	int3   
  433577:	int3   
  433578:	cmp    al,al
  43357a:	int3   
  43357b:	int3   
  43357c:	popf   
  43357d:	cwde   
  43357e:	cmp    eax,0x2d00004c
  433583:	hlt    
  433584:	cmp    eax,0x501a5a00
  433589:	pop    es
  43358a:	popf   
  43358b:	fscale 
  43358d:	rcr    ch,0x9
  433590:	xchg   esp,eax
  433591:	push   ds
  433592:	fstp   st(1)
  433594:	mov    edx,0xfdd6d540
  433599:	call   FWORD PTR [ebp+0x51ccc19c]
  43359f:	daa    
  4335a0:	test   esp,ebp
  4335a2:	ins    BYTE PTR es:[edi],dx
  4335a3:	das    
  4335a4:	test   DWORD PTR [ebp-0x4f],ebp
  4335a7:	pop    esp
  4335a8:	jae    0x4335de
  4335aa:	popf   
  4335ab:	adc    BYTE PTR [ebp-0x793b7708],al
  4335b1:	dec    edx
  4335b2:	shl    DWORD PTR [esi+ecx*2+0x20],0x35
  4335b7:	(bad)  
  4335b9:	call   FWORD PTR [ebp+0x5685dd2c]
  4335bf:	add    DWORD PTR [esi-0x1],esp
  4335c2:	push   0xffffffaa
  4335c4:	repnz into 
  4335c6:	push   ds
  4335c7:	push   ss
  4335c8:	add    DWORD PTR [edi-0x3f7f129d],eax
  4335ce:	dec    eax
  4335cf:	in     al,0x52
  4335d1:	mov    eax,0xfffdd99c
  4335d6:	push   ebx
  4335d7:	je     0x4335b9
  4335d9:	pop    ebx
  4335da:	fmulp  st(4),st
  4335dc:	mov    ebp,0x70c15b37
  4335e1:	or     eax,0xb6198726
  4335e6:	add    BYTE PTR [eax],al
  4335e8:	pushf  
  4335e9:	fscale 
  4335eb:	jmp    FWORD PTR [esi-0x5]
  4335ee:	mov    eax,DWORD PTR [edx-0x33]
  4335f1:	bound  edi,QWORD PTR [ebx]
  4335f3:	sub    al,0x24
  4335f5:	(bad)  
  4335f6:	and    eax,0xf702f625
  4335fb:	mov    bh,bl
  4335fd:	sbb    bl,BYTE PTR [esi]
  4335ff:	cld    
  433600:	repz sbb bl,BYTE PTR [esi+0x49]
  433604:	test   eax,0xed30317b
  433609:	sbb    ebp,DWORD PTR [edi+0x25dadb53]
  43360f:	in     eax,0x44
  433611:	out    0x5e,eax
  433613:	test   DWORD PTR ds:[ebx+0x401a08a3],eax
  43361a:	rcl    DWORD PTR [esp+ebx*2+0x40],cl
  43361e:	xlat   BYTE PTR ds:[ebx]
  43361f:	add    ebx,DWORD PTR [ebp-0x22cf18fe]
  433625:	inc    edi
  433626:	pop    esi
  433627:	fbstp  TBYTE PTR [esi-0x3d]
  43362a:	into   
  43362b:	cmp    eax,0xf82479cd
  433630:	enter  0xf9bf,0xfe
  433634:	and    esp,DWORD PTR [ebp+0x6b]
  433637:	mov    esp,ebx
  433639:	jp     0x4335e9
  43363b:	pop    es
  43363c:	and    BYTE PTR [eax+0x13],dl
  43363f:	add    DWORD PTR [edi+0x32],ecx
  433642:	mov    bh,0x28
  433644:	in     al,0x50
  433646:	mov    ch,0xeb
  433648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433649:	xlat   BYTE PTR ds:[ebx]
  43364a:	inc    edx
  43364b:	cmc    
  43364c:	add    BYTE PTR [eax],al
  43364e:	and    BYTE PTR ds:0xf5d9813b,dh
  433654:	std    
  433655:	cli    
  433656:	xor    DWORD PTR [esi],ebx
  433658:	pop    esi
  433659:	inc    ecx
  43365a:	mov    eax,ds:0x4c2fb17b
  43365f:	sbb    esp,DWORD PTR [edx]
  433661:	push   esp
  433662:	push   edx
  433663:	fiadd  DWORD PTR [ecx]
  433665:	out    0x94,al
  433667:	out    0x5e,al
  433669:	dec    esi
  43366a:	lds    eax,FWORD PTR [ecx+0x6522082b]
  433670:	mov    bh,0x54
  433672:	sbb    cl,BYTE PTR [ebp+0x0]
  433675:	lds    ebp,FWORD PTR [ebp+0x52625ac2]
  43367b:	dec    edx
  43367c:	mov    ebp,0xff1aa872
  433681:	cs test eax,0xca19422d
  433687:	add    eax,ecx
  433689:	daa    
  43368a:	mov    DWORD PTR [edx],eax
  43368c:	add    cl,ch
  43368e:	sahf   
  43368f:	jg     0x4336e3
  433691:	or     eax,0xec6dd284
  433696:	popf   
  433697:	mov    ch,0x87
  433699:	pop    ss
  43369a:	test   DWORD PTR [ebx+0x2d],ecx
  43369d:	test   eax,0x3ce37fd0
  4336a2:	pop    esp
  4336a3:	mov    bh,0xcc
  4336a5:	cmp    al,0x24
  4336a7:	xlat   BYTE PTR ds:[ebx]
  4336a8:	test   DWORD PTR [ecx+eiz*4],esp
  4336ab:	addr16 in al,dx
  4336ad:	mov    ecx,0xeec08159
  4336b2:	add    BYTE PTR [eax],al
  4336b4:	sub    dh,0xd
  4336b7:	jmp    0xcdbbb65a
  4336bc:	jae    0x4336a9
  4336be:	or     DWORD PTR [ebp-0x9],ebp
  4336c1:	idiv   edi
  4336c3:	call   0xe94fa1e5
  4336c8:	mov    eax,ds:0x9efad97e
  4336cd:	add    bh,BYTE PTR [ebp+0x1]
  4336d0:	mov    eax,ds:0x466a0671
  4336d5:	(bad)  
  4336d6:	jmp    ebp
  4336d8:	cmp    edx,edx
  4336da:	or     eax,0x39679ee9
  4336df:	repnz cmp eax,DWORD PTR [eax]
  4336e2:	shl    esi,0x9a
  4336e5:	add    al,BYTE PTR [eax]
  4336e7:	jmp    0x624f7111
  4336ec:	scas   al,BYTE PTR es:[edi]
  4336ed:	jge    0x43373a
  4336ef:	add    BYTE PTR [edx+edi*2+0x420f1048],ch
  4336f6:	add    al,0x53
  4336f8:	dec    DWORD PTR [esi+0x38]
  4336fb:	mov    DWORD PTR [ecx],edi
  4336fd:	in     eax,dx
  4336fe:	add    DWORD PTR [ebp+0x24],0xef55ff65
  433705:	imul   edi,DWORD PTR [ecx+ecx*4],0x5581ee81
  43370c:	ins    BYTE PTR es:[edi],dx
  43370d:	addr16 inc ebp
  43370f:	loopne 0x43370c
  433711:	cmp    bl,al
  433713:	add    BYTE PTR [ecx+eax*1],dh
  433716:	add    BYTE PTR [ebx+0xfec0000],al
  43371c:	pop    es
  43371d:	xchg   DWORD PTR [esp+ecx*1+0x1a030000],esp
  433724:	jge    0x4336fa
  433726:	push   edi
  433727:	cmp    al,0x0
  433729:	mov    ecx,ebx
  43372b:	out    0x7e,al
  43372d:	shr    BYTE PTR [ecx+0x1007c0e5],0x1
  433734:	add    BYTE PTR [eax],al
  433736:	sub    eax,0x40009f2
  43373b:	jl     0x433733
  43373d:	adc    bh,dh
  43373f:	push   ds
  433740:	jnp    0x4337bf
  433742:	cmp    dh,0x6
  433745:	test   BYTE PTR [edi],ch
  433747:	sldt   WORD PTR [eax]
  43374a:	ret    
  43374b:	stos   BYTE PTR es:[edi],al
  43374c:	cli    
  43374d:	(bad)  
  43374e:	xor    ebp,edx
  433750:	or     esi,0xffffffa7
  433753:	fidivr WORD PTR [edx]
  433755:	cmp    DWORD PTR [edx-0x1a],0xffffff82
  433759:	push   ebp
  43375a:	ins    BYTE PTR es:[edi],dx
  43375b:	std    
  43375c:	xlat   BYTE PTR ds:[ebx]
  43375d:	add    DWORD PTR [edx-0x752195f2],0x39
  433764:	or     BYTE PTR [edx],al
  433766:	or     BYTE PTR [ebx],dh
  433768:	jns    0x433765
  43376a:	popf   
  43376b:	in     al,dx
  43376c:	jp     0x43376e
  43376e:	popf   
  43376f:	mov    ?,WORD PTR [edi]
  433771:	popfw  
  433773:	(bad)  
  433774:	std    
  433775:	gs popf 
  433777:	adc    DWORD PTR [ebp+0x17],ecx
  43377a:	popf   
  43377b:	fnstcw WORD PTR [ecx+eax*2+0x0]
  43377f:	add    BYTE PTR [ebp-0x2774fc81],dl
  433785:	int    0x67
  433787:	xchg   eax,eax
  433789:	mov    ch,0x7a
  43378b:	push   ecx
  43378c:	mov    ch,0x2a
  43378e:	push   edx
  43378f:	call   0x412a78
  433794:	push   ss
  433795:	pop    es
  433796:	in     al,dx
  433797:	sub    eax,0x18467366
  43379c:	outs   dx,BYTE PTR ds:[esi]
  43379d:	mov    ds:0xd99c01c6,eax
  4337a2:	std    
  4337a3:	push   DWORD PTR [ebx+ebp*2]
  4337a6:	adc    al,0x0
  4337a8:	popf   
  4337a9:	jo     0x4337f1
  4337ab:	and    dl,ah
  4337ad:	adc    al,0x14
  4337af:	add    BYTE PTR [ebp-0x227d0227],bl
  4337b5:	in     eax,0x6
  4337b7:	rcr    DWORD PTR [ebp-0x57],0xee
  4337bb:	stc    
  4337bc:	cli    
  4337bd:	ins    BYTE PTR es:[edi],dx
  4337be:	test   DWORD PTR [ecx-0x5b],0xc83feda
  4337c5:	(bad)  
  4337c7:	call   DWORD PTR [edx-0x42403d75]
  4337cd:	loope  0x433849
  4337cf:	kandnw k6,k4,k5
  4337d3:	cld    
  4337d4:	fucomp st(0)
  4337d6:	shl    DWORD PTR [edi-0x2265e],cl
  4337dc:	mov    dl,0x2a
  4337de:	mov    dh,cl
  4337e0:	sub    BYTE PTR [edx+edi*2+0x1d0000cd],ch
  4337e7:	add    eax,DWORD PTR ds:0xefe91d02
  4337ed:	ja     0x43379a
  4337ef:	ja     0x43379d
  4337f1:	sti    
  4337f2:	sbb    DWORD PTR [ebp+0xf],ecx
  4337f5:	retf   0xadd
  4337f8:	stos   DWORD PTR es:[edi],eax
  4337f9:	js     0x4337d8
  4337fb:	add    dl,BYTE PTR [eax]
  4337fd:	cmp    DWORD PTR [edx-0x238118fe],ebp
  433803:	push   ds
  433804:	sub    dh,bl
  433806:	mov    eax,ds:0x4285ae77
  43380b:	repz gs loop 0x4337b0
  43380f:	jg     0x4337b9
  433811:	cld    
  433812:	pop    ds
  433813:	ret    0x2e54
  433816:	and    dh,BYTE PTR [ebx]
  433818:	or     ebp,DWORD PTR [esi+0x3e7e342]
  43381e:	ret    
  43381f:	add    dl,BYTE PTR [esi+0x3d02bbe6]
  433825:	add    al,0x22
  433827:	dec    ebx
  433828:	sti    
  433829:	(bad)  [ebx+0x2003e70f]
  43382f:	xor    eax,0xea6e7cdf
  433834:	test   al,0xdd
  433836:	xchg   ebp,eax
  433837:	jmp    0x4337cf
  433839:	test   eax,esp
  43383b:	jmp    DWORD PTR [ebp-0x43]
  43383e:	mov    ds:0x1a0c2a79,al
  433843:	inc    ecx
  433844:	mov    bh,0x7a
  433846:	test   BYTE PTR [edi],ch
  433848:	ds xor eax,0xd8ef0000
  43384e:	dec    esp
  43384f:	adc    al,0x9d
  433851:	add    cl,BYTE PTR [esi]
  433853:	mov    esp,0x575ebd4f
  433858:	(bad)
  43385b:	adc    al,0x9d
  43385d:	add    ch,BYTE PTR [esi+0x57]
  433860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433861:	mov    ebx,0x3ea6ab00
  433866:	jae    0x433811
  433868:	sahf   
  433869:	jge    0x4338be
  43386b:	and    esi,eax
  43386d:	mov    edx,0x5f9ee910
  433872:	cli    
  433873:	stc    
  433874:	or     DWORD PTR [ecx],eax
  433876:	jge    0x433804
  433878:	jp     0x43387d
  43387a:	or     DWORD PTR [ebp-0x51],ebp
  43387d:	adc    DWORD PTR [eax],eax
  43387f:	jmp    0xf641cd21
  433884:	mov    bl,0xde
  433886:	test   DWORD PTR [edi],ebx
  433888:	push   eax
  433889:	jecxz  0x4338c9
  43388b:	push   0x54
  43388d:	or     eax,DWORD PTR [edi-0x2e1fb6cc]
  433893:	push   0x4c
  433895:	rep ins DWORD PTR es:[edi],dx
  433897:	scas   eax,DWORD PTR es:[edi]
  433898:	(bad)  
  433899:	cmp    edx,DWORD PTR [eax]
  43389b:	imul   esi,DWORD PTR [ecx],0xba64090b
  4338a1:	repnz (bad) 
  4338a3:	call   0xc943d8dd
  4338a8:	sahf   
  4338a9:	add    dh,BYTE PTR [esi+esi*8-0x5f]
  4338ad:	inc    ebp
  4338ae:	or     BYTE PTR [esi-0x5a20000],ah
  4338b4:	inc    ebx
  4338b5:	sbb    al,0x59
  4338b7:	add    ah,bh
  4338b9:	push   cs
  4338ba:	mov    cl,0x2
  4338bc:	add    BYTE PTR [edx+0x55],dh
  4338bf:	and    al,BYTE PTR [ebx-0x7af78d57]
  4338c5:	mov    ds:0x6a08e9df,al
  4338ca:	jmp    ecx
  4338cc:	mov    cl,dh
  4338ce:	in     eax,0x43
  4338d0:	adc    cl,ch
  4338d2:	mov    al,ds:0xacdd0002
  4338d7:	mov    bl,BYTE PTR [ebx+0x3d]
  4338da:	(bad)  
  4338dc:	or     BYTE PTR [eax],al
  4338de:	out    dx,al
  4338df:	pop    es
  4338e0:	test   DWORD PTR [ebp+0x68],edx
  4338e3:	pop    ebp
  4338e4:	push   ebp
  4338e5:	in     eax,dx
  4338e6:	aas    
  4338e7:	dec    edx
  4338e8:	sbb    BYTE PTR [edx+0x4],dl
  4338eb:	mov    esi,0x5b417ee
  4338f0:	adc    DWORD PTR [ebp-0x44],0x5c
  4338f4:	aas    
  4338f5:	sbb    BYTE PTR [edi-0x32],dh
  4338f8:	sub    esi,esi
  4338fa:	ret    
  4338fb:	or     bh,dl
  4338fd:	push   DWORD PTR [ebp+eax*1-0x1d]
  433901:	add    eax,0x7320d407
  433906:	data16 xchg BYTE PTR [ebp-0x4],dh
  43390a:	je     0x43390e
  43390c:	test   BYTE PTR [eax+0xf000564],dl
  433912:	xor    al,BYTE PTR [edi+esi*8]
  433915:	dec    ebp
  433916:	add    BYTE PTR [eax],al
  433918:	push   0x54d3c65d
  43391d:	inc    esp
  43391e:	jnp    0x4338e6
  433920:	dec    esp
  433921:	pop    esi
  433922:	dec    ebp
  433923:	clc    
  433924:	inc    edi
  433925:	int    0x7b
  433927:	(bad)  
  433928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433929:	push   esp
  43392a:	(bad)  
  43392b:	mov    eax,DWORD PTR [ebx-0x7f3f82da]
  433931:	add    eax,0xd8005881
  433936:	aas    
  433937:	adc    BYTE PTR [ebx+eax*1],al
  43393a:	add    BYTE PTR [eax],al
  43393c:	mov    al,0x0
  43393e:	mov    BYTE PTR [ebp+0x28],bl
  433941:	pop    ebp
  433942:	ret    
  433943:	mov    edx,DWORD PTR [edi]
  433945:	(bad)  
  433946:	loope  0x433950
  433948:	inc    ebp
  433949:	mov    esp,0xe1fc110
  43394e:	bound  eax,QWORD PTR [ecx+ebp*2]
  433951:	dec    ebx
  433952:	in     al,dx
  433953:	mov    BYTE PTR [ecx],cl
  433955:	loop   0x4338df
  433957:	push   ebp
  433958:	popf   
  433959:	dec    ecx
  43395a:	jl     0x4339b7
  43395c:	mov    edx,0x6d183963
  433961:	jp     0x433938
  433963:	jle    0x4338f7
  433965:	jmp    0x433964
  433967:	test   BYTE PTR [eax+0x13],cl
  43396a:	jnp    0x4339ad
  43396c:	test   esp,ebx
  43396e:	(bad)  
  43396f:	sub    eax,0xfd012fab
  433974:	call   0xea6c:0x98e4fdea
  43397b:	adc    BYTE PTR [eax],al
  43397d:	add    BYTE PTR [esi],cl
  43397f:	int3   
  433980:	jle    0x4339fd
  433982:	sub    edx,0xb99983fa
  433988:	std    
  433989:	jmp    DWORD PTR [edx-0x270701e1]
  43398f:	in     eax,dx
  433990:	jbe    0x43395c
  433992:	dec    esi
  433993:	retf   0x7d3f
  433996:	arpl   dx,dx
  433998:	jl     0x4339ed
  43399a:	push   ebp
  43399b:	in     eax,dx
  43399c:	lds    edi,FWORD PTR [ebp+0x4b]
  43399f:	fisubr DWORD PTR [edi-0x26]
  4339a2:	push   ss
  4339a3:	xor    DWORD PTR [ebx+eax*4],esp
  4339a6:	pop    ebp
  4339a7:	push   ss
  4339a8:	adc    al,BYTE PTR [ebp-0x61b949a]
  4339ae:	popf   
  4339af:	jmp    0xd218c0b1
  4339b4:	jbe    0x4339ff
  4339b6:	mov    ebp,0x5bfbe54
  4339bb:	loop   0x433a39
  4339bd:	aas    
  4339be:	cdq    
  4339bf:	js     0x433a03
  4339c1:	adc    BYTE PTR [ebp+0x71fffdeb],bl
  4339c7:	mov    edi,0xab015b75
  4339cc:	(bad)  
  4339cd:	or     BYTE PTR [edi-0x15],dh
  4339d0:	adc    BYTE PTR [ebx-0xf],0x2
  4339d4:	outs   dx,DWORD PTR ds:[esi]
  4339d5:	push   eax
  4339d6:	(bad)  
  4339d7:	mov    esp,DWORD PTR [edx+0x3f32630b]
  4339dd:	cli    
  4339de:	lods   eax,DWORD PTR ds:[esi]
  4339df:	add    ah,bh
  4339e1:	jp     0x4339e3
  4339e3:	add    BYTE PTR [esi-0x26],ch
  4339e6:	jo     0x433a2e
  4339e8:	xchg   ebp,eax
  4339e9:	adc    ebx,DWORD PTR [esi]
  4339eb:	xor    ch,BYTE PTR [edi-0x62f81539]
  4339f1:	add    ah,bh
  4339f3:	neg    BYTE PTR [edx+esi*8-0x1a]
  4339f7:	pop    es
  4339f8:	popf   
  4339f9:	add    dl,BYTE PTR [ebx-0x81eef9c]
  4339ff:	jb     0x4339ac
  433a01:	or     DWORD PTR [edi+ebp*8-0x7294f063],0xffffffa4
  433a09:	add    ah,bh
  433a0b:	(bad)  
  433a0c:	sub    al,0x4
  433a0e:	repnz aas 
  433a10:	imul   ecx,DWORD PTR [ebx+0x447dd219],0x89a5c666
  433a1a:	xor    al,0xec
  433a1c:	push   eax
  433a1d:	mov    bh,0x66
  433a1f:	out    dx,al
  433a20:	lods   eax,DWORD PTR ds:[esi]
  433a21:	push   esp
  433a22:	test   eax,0x7022dc79
  433a27:	dec    ebp
  433a28:	fld    QWORD PTR [ebp-0x75cf8759]
  433a2e:	nop/reserved BYTE PTR [edi+eax*2]
  433a32:	xlat   BYTE PTR ds:[ebx]
  433a33:	add    esp,DWORD PTR [ebx]
  433a35:	(bad)  
  433a37:	ja     0x4339f0
  433a39:	mov    bh,BYTE PTR [eax+eiz*8]
  433a3c:	push   edx
  433a3d:	jmp    0x433a1e
  433a3f:	pop    ecx
  433a40:	or     ecx,DWORD PTR [esi+0x3d15e01c]
  433a46:	xchg   esp,eax
  433a47:	jns    0x433a49
  433a49:	add    BYTE PTR [edx+edi*8+0x17],cl
  433a4d:	push   edx
  433a4e:	add    eax,0x9edf007d
  433a53:	add    al,BYTE PTR [ebp+0x4186f114]
  433a59:	add    DWORD PTR [ebp+esi*4+0xbf4572d],ecx
  433a60:	test   DWORD PTR [esi-0x2a3f7c82],ebp
  433a66:	cdq    
  433a67:	rol    DWORD PTR [eax-0x27],0x9e
  433a6b:	add    al,BYTE PTR [eax]
  433a6d:	jmp    0xe9463b4b
  433a72:	sahf   
  433a73:	add    dh,cl
  433a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433a76:	mov    es,WORD PTR [edx]
  433a78:	add    al,0xe9
  433a7a:	sahf   
  433a7b:	or     eax,DWORD PTR [esi+esi*2+0x62000299]
  433a82:	loopne 0x433ac6
  433a84:	test   DWORD PTR [edx+esi*2-0x3a02bc7a],ebx
  433a8b:	popf   
  433a8c:	jb     0x433a72
  433a8e:	cmc    
  433a8f:	popf   
  433a90:	xchg   DWORD PTR [edx+esi*2+0x1adec082],esp
  433a97:	jo     0x433a99
  433a99:	jmp    0x98cc23c
  433a9e:	sbb    al,dh
  433aa0:	je     0x433ab9
  433aa2:	les    eax,FWORD PTR [ebp+0x10]
  433aa5:	pusha  
  433aa6:	xor    DWORD PTR [esi+0x16b2b083],0xffffff85
  433aad:	push   ss
  433aae:	add    BYTE PTR [eax],al
  433ab0:	jns    0x433a39
  433ab2:	inc    esi
  433ab3:	fld    QWORD PTR [ebp-0x339dbfb5]
  433ab9:	cli    
  433aba:	xchg   BYTE PTR [eax*1+0x54e2c1e0],dh
  433ac1:	push   ecx
  433ac2:	add    eax,edx
  433ac4:	jae    0x433aac
  433ac6:	test   DWORD PTR [ebx+0xf83185],ebp
  433acc:	xchg   esp,eax
  433acd:	pop    ebx
  433ace:	cmp    eax,0xe44507d4
  433ad3:	push   edx
  433ad4:	test   BYTE PTR [esi-0x118c1564],bh
  433ada:	add    DWORD PTR [ebp+0x78],0x5a
  433ade:	dec    ebp
  433adf:	clc    
  433ae0:	inc    edi
  433ae1:	lds    ecx,FWORD PTR [edi+esi*8]
  433ae4:	sti    
  433ae5:	icebp  
  433ae6:	inc    DWORD PTR [ecx]
  433ae8:	mov    ah,0x1
  433aea:	je     0x433b06
  433aec:	das    
  433aed:	xor    al,0xf4
  433aef:	mov    edi,ecx
  433af1:	jmp    0x340f8a79
  433af6:	push   eax
  433af7:	push   ecx
  433af8:	pop    esp
  433af9:	(bad)  
  433afa:	or     eax,0x4d5a8400
  433aff:	clc    
  433b00:	or     eax,0x398b1847
  433b05:	aad    0x21
  433b07:	inc    ebp
  433b08:	nop
  433b09:	add    dl,al
  433b0b:	sub    DWORD PTR [ebx+0x41],ecx
  433b0e:	adc    DWORD PTR [ebp-0x64],0x407782
  433b15:	add    BYTE PTR [esi+ebx*8+0x7e],dh
  433b19:	xchg   esp,eax
  433b1a:	inc    edx
  433b1b:	add    DWORD PTR [eax],eax
  433b1d:	(bad)  
  433b1e:	mov    eax,DWORD PTR [esi+0x0]
  433b21:	add    BYTE PTR [ecx+eax*1-0x41],al
  433b25:	pop    es
  433b26:	cmp    al,BYTE PTR [ecx]
  433b28:	add    BYTE PTR [eax],al
  433b2a:	imul   eax,DWORD PTR [ecx+0x10],0x0
  433b2e:	sub    al,0x1
  433b30:	add    BYTE PTR [edi],cl
  433b32:	mov    eax,0x34000081
  433b37:	test   BYTE PTR [ebp-0x4],dh
  433b3a:	xor    al,0xd8
  433b3c:	jge    0x433bae
  433b3e:	adc    al,BYTE PTR [ecx]
  433b40:	add    BYTE PTR [ebx],dh
  433b42:	inc    esp
  433b43:	pop    ebx
  433b44:	inc    ecx
  433b45:	add    BYTE PTR [ebp-0x52f3501c],bl
  433b4b:	sub    edi,DWORD PTR [ebx+0x43]
  433b4e:	icebp  
  433b4f:	dec    edi
  433b50:	cmp    eax,0xe02e2420
  433b55:	sbb    ebp,0xffffffde
  433b58:	and    al,0x85
  433b5a:	push   ebp
  433b5b:	iret   
  433b5c:	jl     0x433ba9
  433b5e:	icebp  
  433b5f:	ins    DWORD PTR es:[edi],dx
  433b60:	mov    ebx,0x3550aa74
  433b65:	inc    eax
  433b66:	xchg   BYTE PTR [ebx+0x60926d1d],ah
  433b6c:	dec    edi
  433b6d:	aam    0x27
  433b6f:	scas   al,BYTE PTR es:[edi]
  433b70:	(bad)  [eax+0x41e6d199]
  433b76:	pop    ebp
  433b77:	pusha  
  433b78:	dec    edi
  433b79:	clc    
  433b7a:	add    BYTE PTR [eax],al
  433b7c:	push   ds
  433b7d:	scas   al,BYTE PTR es:[edi]
  433b7e:	fld    DWORD PTR [eax]
  433b80:	adc    edx,edx
  433b82:	jp     0x433bc7
  433b84:	mov    ecx,esp
  433b86:	inc    eax
  433b87:	cld    
  433b88:	sysexit 
  433b8a:	in     eax,dx
  433b8b:	inc    ecx
  433b8c:	lods   eax,DWORD PTR ds:[esi]
  433b8d:	jmp    0x5de03b95
  433b92:	push   cs
  433b93:	test   eax,esp
  433b95:	aad    0x7a
  433b97:	push   ebx
  433b98:	gs popa 
  433b9a:	cmp    eax,0x4d77cc18
  433b9f:	call   0x411a94
  433ba4:	es pop ss
  433ba6:	in     al,dx
  433ba7:	xchg   edx,esp
  433ba9:	sar    DWORD PTR [edx+0x43],1
  433bac:	dec    ecx
  433bad:	add    edi,DWORD PTR [edi]
  433baf:	cld    
  433bb0:	sahf   
  433bb1:	jns    0x433b35
  433bb3:	jnp    0x433bee
  433bb5:	jmp    0xf380:0xe525537c
  433bbc:	nop
  433bbd:	jmp    0x2ef20bf
  433bc2:	outs   dx,BYTE PTR ds:[esi]
  433bc3:	inc    edx
  433bc4:	mov    ebp,0x9c6fa785
  433bc9:	ret    
  433bca:	daa    
  433bcb:	or     BYTE PTR [ebp-0x23fc18fe],bl
  433bd1:	inc    ebx
  433bd2:	daa    
  433bd3:	add    al,0x9d
  433bd5:	add    ah,bh
  433bd7:	ret    0x39c
  433bda:	out    0x3,eax
  433bdc:	popf   
  433bdd:	shl    DWORD PTR [edx],cl
  433bdf:	adc    al,0x0
  433be1:	add    BYTE PTR [ebp-0x5bfc190e],bl
  433be7:	xchg   BYTE PTR [edi+0x3],ch
  433bea:	popf   
  433beb:	add    ah,BYTE PTR [esi+0x68]
  433bee:	rol    DWORD PTR [edx],0xda
  433bf1:	jg     0x433bed
  433bf3:	or     eax,0xc28003e7
  433bf8:	ins    BYTE PTR es:[edi],dx
  433bf9:	pop    edi
  433bfa:	add    DWORD PTR [edx],0xf291b1e2
  433c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c01:	jl     0x433be1
  433c03:	(bad)  
  433c04:	outs   dx,BYTE PTR ds:[esi]
  433c05:	inc    edx
  433c06:	mov    ebp,0x1edfac89
  433c0b:	ret    0x249b
  433c0e:	sbb    BYTE PTR [edx-0x3d],cl
  433c11:	jl     0x433bf9
  433c13:	mov    dh,0x6c
  433c15:	mov    esp,0x3a6df3e9
  433c1a:	fst    QWORD PTR [edi]
  433c1c:	lahf   
  433c1d:	sbb    esi,eax
  433c1f:	or     ebx,DWORD PTR [esi+0x50]
  433c22:	jno    0x433bac
  433c24:	sub    al,0xe0
  433c26:	and    eax,0xdce8ed06
  433c2b:	inc    edx
  433c2c:	pop    esi
  433c2d:	dec    edi
  433c2e:	inc    ebp
  433c2f:	jg     0x433c7d
  433c31:	loopne 0x433bd0
  433c33:	push   esi
  433c34:	out    dx,eax
  433c35:	jl     0x433c15
  433c37:	(bad)  
  433c38:	(bad)  
  433c39:	sub    DWORD PTR ds:[eax+0x0],edx
  433c3d:	jbe    0x433c6b
  433c3f:	inc    ecx
  433c40:	adc    cl,ch
  433c42:	mov    al,ds:0x1d0002
  433c47:	add    BYTE PTR [ebp+eax*4+0x2f88954b],ch
  433c4e:	clc    
  433c4f:	bound  ebx,QWORD PTR [edx+edi*8+0x4e]
  433c53:	cmp    edx,DWORD PTR [ecx-0x16]
  433c56:	mov    ds:0x85029edd,eax
  433c5b:	adc    al,0xf9
  433c5d:	add    BYTE PTR [ecx-0x2f],0x61
  433c61:	aas    
  433c62:	hlt    
  433c63:	rcr    BYTE PTR [ebx+0x1838fdde],0x57
  433c6a:	in     al,0xe9
  433c6c:	inc    edi
  433c6d:	das    
  433c6e:	clc    
  433c6f:	out    0x43,al
  433c71:	aas    
  433c72:	or     ebp,ecx
  433c74:	sahf   
  433c75:	in     eax,0xa
  433c77:	jb     0x433cd5
  433c79:	and    al,BYTE PTR [ebx-0x3efed2d7]
  433c7f:	test   eax,0xe9000282
  433c84:	sahf   
  433c85:	ret    
  433c86:	add    ecx,esi
  433c88:	sahf   
  433c89:	add    al,BYTE PTR [eax]
  433c8b:	push   ss
  433c8c:	fdivr  st(2),st
  433c8e:	(bad)  
  433c8f:	jmp    0xdd21:0xcc74029e
  433c96:	adc    BYTE PTR [edx-0x6a],bh
  433c99:	lea    edx,[ebp+0x29ee9]
  433c9f:	push   0xfffffffa
  433ca1:	(bad)  
  433ca2:	add    dh,bl
  433ca4:	fimul  DWORD PTR [ecx]
  433ca6:	or     ebp,ecx
  433ca8:	sahf   
  433ca9:	or     esi,DWORD PTR [edx+0x350000eb]
  433caf:	dec    esi
  433cb0:	cld    
  433cb1:	bound  eax,QWORD PTR [eax+ecx*8]
  433cb4:	loopne 0x433ce1
  433cb6:	and    ch,al
  433cb8:	or     BYTE PTR [eax],al
  433cba:	lods   eax,DWORD PTR ds:[esi]
  433cbb:	dec    eax
  433cbc:	clc    
  433cbd:	add    edi,esp
  433cbf:	jle    0x433cb7
  433cc1:	adc    BYTE PTR [esi-0x34],ah
  433cc4:	pop    es
  433cc5:	mov    bh,0xbb
  433cc7:	push   es
  433cc8:	xor    ebx,ecx
  433cca:	or     ebx,DWORD PTR [ecx-0xd]
  433ccd:	sti    
  433cce:	sub    ebp,ebx
  433cd0:	sub    ebx,ebx
  433cd2:	out    0xd3,eax
  433cd4:	add    DWORD PTR [edi-0x1c],0x58
  433cd8:	shl    BYTE PTR [edx+edx*8+0x56],0x47
  433cdd:	adc    BYTE PTR ds:0x158301ed,dh
  433ce3:	add    eax,0x57184881
  433ce8:	dec    edi
  433ce9:	and    BYTE PTR [ebx-0x4bfecfc1],al
  433cef:	add    eax,0x37b46a00
  433cf4:	add    BYTE PTR [edx-0x3c],ch
  433cf7:	mov    ebp,0x5c413fe
  433cfc:	or     DWORD PTR [ebp-0x54],0x56
  433d00:	dec    ebp
  433d01:	clc    
  433d02:	cmp    eax,0x45891842
  433d07:	adc    eax,0x58f07bf
  433d0c:	add    BYTE PTR [eax],al
  433d0e:	lods   eax,DWORD PTR ds:[esi]
  433d0f:	adc    DWORD PTR [eax+eax*1],ecx
  433d12:	add    BYTE PTR [eax],al
  433d14:	je     0x433d94
  433d16:	mul    BYTE PTR [eax]
  433d18:	pop    ss
  433d19:	pop    ds
  433d1a:	jnp    0x433d99
  433d1c:	cwde   
  433d1d:	add    eax,0xd1ff8407
  433d22:	stc    
  433d23:	(bad)  
  433d24:	jnp    0x433cb9
  433d26:	cli    
  433d27:	(bad)  
  433d28:	cmp    ecx,esp
  433d2a:	or     esi,0x17
  433d2d:	fidivr WORD PTR [edx]
  433d2f:	add    DWORD PTR [edx],0xffffffd6
  433d32:	adc    BYTE PTR [ebp-0x63],0xb3
  433d36:	std    
  433d37:	xlat   BYTE PTR ds:[ebx]
  433d38:	push   ds
  433d39:	leave  
  433d3a:	and    al,0x6e
  433d3c:	push   ebx
  433d3d:	push   esp
  433d3e:	mov    ch,0x85
  433d40:	pop    esi
  433d41:	stos   BYTE PTR es:[edi],al
  433d42:	in     al,0x10
  433d44:	sbb    al,0xca
  433d46:	add    al,0xf9
  433d48:	popf   
  433d49:	jmp    0x433d49
  433d4b:	(bad)  
  433d4c:	lods   al,BYTE PTR es:[esi]
  433d4e:	ret    
  433d4f:	call   0x926e7e9
  433d54:	mov    eax,0x9d00e2eb
  433d59:	in     al,dx
  433d5a:	les    eax,FWORD PTR [ebp-0x1a3b2ca0]
  433d60:	test   esp,ebp
  433d62:	mov    esi,0x7cb35a87
  433d67:	aas    
  433d68:	lea    ebx,[esi+eax*8-0x6d834d3]
  433d6f:	add    eax,0x7cfdeb9d
  433d74:	inc    edx
  433d75:	(bad)  
  433d77:	or     BYTE PTR [eax],al
  433d79:	add    BYTE PTR [ecx],ah
  433d7b:	dec    ecx
  433d7c:	cmc    
  433d7d:	push   DWORD PTR [edx-0x629a024c]
  433d83:	mov    ch,0xfd
  433d85:	out    0x50,eax
  433d87:	loope  0x433d86
  433d89:	jmp    DWORD PTR [esi]
  433d8b:	outs   dx,DWORD PTR ds:[esi]
  433d8c:	cmc    
  433d8d:	xchg   dl,bl
  433d8f:	add    DWORD PTR [ebx+0x3e],edi
  433d92:	int    0x54
  433d94:	dec    edi
  433d95:	clc    
  433d96:	pop    edx
  433d97:	jmp    0xeabe3d92
  433d9c:	jle    0x433e19
  433d9e:	mov    eax,ds:0x8983f2e6
  433da3:	in     eax,0xfd
  433da5:	call   FWORD PTR [esi]
  433da7:	dec    edi
  433da8:	icebp  
  433da9:	add    DWORD PTR [edx-0x62f3f1a3],ebp
  433daf:	add    ah,bh
  433db1:	add    ah,0xfe
  433db4:	out    0x6f,al
  433db6:	test   eax,0x5a82a18b
  433dbb:	add    BYTE PTR [esi-0x552e8726],dh
  433dc1:	(bad)  
  433dc2:	nop
  433dc3:	add    ah,bh
  433dc5:	add    edi,DWORD PTR [edx]
  433dc7:	jge    0x433da7
  433dc9:	add    ebx,DWORD PTR [ebp-0x7ffd567d]
  433dcf:	sub    al,0x8e
  433dd1:	std    
  433dd2:	pop    ss
  433dd3:	jl     0x433dbc
  433dd5:	add    ebx,DWORD PTR [ebp-0x69799fe]
  433ddb:	add    bl,dl
  433ddd:	jg     0x433ddf
  433ddf:	add    dl,dl
  433de1:	or     esp,edi
  433de3:	add    edx,DWORD PTR [eax+edx*4-0x29a9191b]
  433dea:	pop    esi
  433deb:	mov    ch,0xe8
  433ded:	loop   0x433e14
  433def:	sbb    edi,0xa
  433df2:	jo     0x433e44
  433df4:	lds    eax,FWORD PTR [ebx]
  433df6:	aas    
  433df7:	add    bh,0x3
  433dfa:	aad    0xc5
  433dfc:	and    ah,cl
  433dfe:	cmp    dl,bl
  433e00:	sbb    ah,al
  433e02:	data16 in al,0xaa
  433e05:	test   BYTE PTR [edi+0x2],al
  433e08:	sbb    cl,BYTE PTR [eax-0x15]
  433e0b:	adc    BYTE PTR [ebp-0x6bb14dfd],0x1e
  433e12:	ins    BYTE PTR es:[edi],dx
  433e13:	push   ebx
  433e14:	rol    DWORD PTR [ebx-0x19],0xc4
  433e18:	js     0x433e1e
  433e1a:	sub    bh,dh
  433e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e1d:	add    ah,bh
  433e1f:	add    esi,eax
  433e21:	call   0xbe81b0c
  433e26:	out    0x3,eax
  433e28:	sbb    BYTE PTR [edi-0x2e28ff00],bh
  433e2e:	stc    
  433e2f:	out    dx,al
  433e30:	sbb    al,0x5b
  433e32:	or     al,0xef
  433e34:	or     DWORD PTR [ecx],eax
  433e36:	or     eax,0x73029ee9
  433e3b:	add    eax,0x69fedd5e
  433e40:	dec    ebx
  433e41:	aad    0xe8
  433e43:	inc    esi
  433e44:	add    BYTE PTR [eax],al
  433e46:	and    al,0xd7
  433e48:	stc    
  433e49:	test   al,0x44
  433e4b:	fadd   st,st(2)
  433e4d:	out    dx,al
  433e4e:	scas   al,BYTE PTR es:[edi]
  433e4f:	add    al,BYTE PTR [eax]
  433e51:	jmp    0x90412a73
  433e56:	mov    cl,0xfd
  433e58:	(bad)  
  433e59:	call   0xae4b81e3
  433e5e:	popa   
  433e5f:	cli    
  433e60:	inc    ebx
  433e61:	adc    al,0x59
  433e63:	add    al,cl
  433e65:	out    dx,al
  433e66:	mov    ds:0xdfe90002,eax
  433e6b:	fdiv   st(6),st
  433e6d:	imul   esi,ebx,0xd774e8d4
  433e73:	(bad)  
  433e74:	stc    
  433e75:	jb     0x433e8a
  433e77:	push   ebp
  433e78:	(bad)  
  433e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433e7b:	out    0xcd,eax
  433e7d:	inc    edx
  433e7e:	sbb    al,0xdc
  433e80:	and    dl,bl
  433e82:	jl     0x433ed9
  433e84:	jnp    0x433ecb
  433e86:	mov    eax,ds:0xa4028409
  433e8b:	(bad)  
  433e8c:	stc    
  433e8d:	out    0x48,al
  433e8f:	aad    0xfa
  433e91:	pushf  
  433e92:	jp     0x433e14
  433e94:	retf   0x813a
  433e97:	adc    eax,0x7d81277d
  433e9c:	push   ebx
  433e9d:	adc    DWORD PTR [edx+edi*4+0x64b90f7d],ebx
  433ea4:	fiadd  DWORD PTR [eax]
  433ea6:	out    dx,eax
  433ea7:	fwait
  433ea8:	add    ebx,0x0
  433eab:	add    BYTE PTR [ebx-0x4f],ch
  433eae:	sbb    eax,0x253ff
  433eb3:	rcr    DWORD PTR [ebp+0x53c132ee],0x55
  433eba:	adc    edi,edx
  433ebc:	arpl   di,bx
  433ebe:	sub    ebx,ebx
  433ec0:	xchg   edi,eax
  433ec1:	in     al,0x7b
  433ec3:	jge    0x433f15
  433ec5:	fadd   DWORD PTR [edx-0x688bb9]
  433ecb:	or     eax,0xf000234
  433ed0:	mov    bh,ah
  433ed2:	add    al,BYTE PTR [eax]
  433ed4:	add    al,0x97
  433ed6:	dec    DWORD PTR [esi]
  433ed8:	hlt    
  433ed9:	add    DWORD PTR [eax],eax
  433edb:	mov    edi,DWORD PTR [ebx+0x1845813e]
  433ee1:	push   ebp
  433ee2:	ror    BYTE PTR [edi],0x78
  433ee5:	dec    ecx
  433ee6:	(bad)  
  433ee7:	push   esp
  433ee9:	pop    edx
  433eea:	inc    ebp
  433eeb:	cld    
  433eec:	ffreep st(0)
  433eee:	outs   dx,BYTE PTR ds:[esi]
  433eef:	add    eax,0x4d81c03f
  433ef4:	dec    eax
  433ef5:	pop    edx
  433ef6:	inc    ebp
  433ef7:	lock jg 0x433ebb
  433efa:	outs   dx,BYTE PTR ds:[esi]
  433efb:	add    eax,0x4581c04f
  433f00:	pop    eax
  433f01:	push   esp
  433f02:	ror    BYTE PTR [edi],0x38
  433f05:	ret    
  433f06:	add    al,BYTE PTR [eax]
  433f08:	mov    ah,0x5a
  433f0a:	inc    ebp
  433f0b:	hlt    
  433f0c:	das    
  433f0d:	inc    esp
  433f0e:	clc    
  433f0f:	mov    eax,DWORD PTR [eax]
  433f11:	add    BYTE PTR [ecx-0x47],cl
  433f14:	dec    ecx
  433f15:	push   edx
  433f16:	xor    al,0xb9
  433f18:	js     0x433f00
  433f1a:	ret    
  433f1b:	fiadd  WORD PTR [ebx+0x3d00a845]
  433f21:	clc    
  433f22:	popf   
  433f23:	ret    0xfc3a
  433f26:	les    ebx,FWORD PTR [esi-0xc1e0013]
  433f2c:	ja     0x433f81
  433f2e:	gs push 0xa4840cb9
  433f34:	cmp    eax,0xfde18be7
  433f39:	call   FWORD PTR [esi]
  433f3b:	fisttp QWORD PTR [esi]
  433f3d:	ins    DWORD PTR es:[edi],dx
  433f3e:	jnp    0x433fa6
  433f40:	push   0x5f689d24
  433f45:	cld    
  433f46:	popf   
  433f47:	mov    ah,0x81
  433f49:	jg     0x433ee2
  433f4b:	jmp    0x433f4a
  433f4d:	or     bl,ch
  433f4f:	call   0x605c8b32
  433f54:	into   
  433f55:	int    0xfd
  433f57:	sub    BYTE PTR [ecx+0x375295c2],al
  433f5d:	clc    
  433f5e:	sahf   
  433f5f:	ret    
  433f60:	cmp    edx,0x85bdf9ab
  433f66:	out    0x67,al
  433f68:	jecxz  0x433f83
  433f6a:	fsubr  QWORD PTR [edi+0x7]
  433f6d:	jg     0x433f4b
  433f6f:	jmp    0x60e03f78
  433f74:	rol    DWORD PTR [edi+0xb620000],0xc3
  433f7b:	in     eax,0xa0
  433f7d:	push   eax
  433f7e:	leave  
  433f7f:	jge    0x433f3e
  433f81:	rol    DWORD PTR [edx-0x7d545521],cl
  433f87:	mov    edi,0x4e92a99
  433f8c:	push   ds
  433f8d:	sub    eax,0xcb227f0e
  433f92:	(bad)  
  433f93:	(bad)  
  433f94:	call   0x4d62:0xf9418cea
  433f9b:	pop    esp
  433f9c:	call   0x1ad4:0x8a206a02
  433fa3:	xchg   DWORD PTR [ebp-0xb],esi
  433fa6:	loope  0x433f32
  433fa8:	rcr    cl,0xa
  433fab:	jecxz  0x434009
  433fad:	cmp    al,0x8f
  433faf:	add    ebx,DWORD PTR [ebp-0x633518fe]
  433fb5:	icebp  
  433fb6:	out    0x3,al
  433fb8:	popf   
  433fb9:	xchg   DWORD PTR [edx+0x4343906b],ebx
  433fbf:	push   edi
  433fc0:	shl    edi,cl
  433fc2:	out    0x90,al
  433fc4:	loop   0x433fc8
  433fc6:	data16 loope 0x433ff9
  433fc9:	push   ecx
  433fca:	add    eax,0xe7d6a687
  433fcf:	adc    bl,BYTE PTR [ecx]
  433fd1:	xlat   BYTE PTR ds:[ebx]
  433fd2:	lock add ebx,DWORD PTR [ebp+0x14057903]
  433fd9:	inc    esi
  433fda:	stos   DWORD PTR es:[edi],eax
  433fdb:	mov    es,WORD PTR [eax]
  433fdd:	add    bh,dl
  433fdf:	scas   eax,DWORD PTR es:[edi]
  433fe0:	xchg   DWORD PTR [ebp-0x80],eax
  433fe3:	mov    esp,0xda4e8cef
  433fe8:	out    0xbb,al
  433fea:	jo     0x433fc0
  433fec:	out    0x55,al
  433fee:	mov    DWORD PTR [edi-0x746b93d6],0x1fad48e3
  433ff8:	daa    
  433ff9:	add    al,0x18
  433ffb:	enter  0xe466,0x9c
  433fff:	pop    esp
  434000:	jo     0x434051
  434002:	pop    esp
  434003:	push   edx
  434004:	pop    edx
  434005:	dec    edx
  434006:	inc    ebp
  434007:	xchg   DWORD PTR [edx-0x19180d95],esp
  43400d:	xchg   BYTE PTR [edi+0x4152fdff],dh
  434013:	push   eax
  434014:	jbe    0x433fb1
  434016:	test   al,0x2
  434018:	add    cl,ch
  43401a:	sahf   
  43401b:	or     eax,DWORD PTR [ecx-0x3f]
  43401e:	repz cmc 
  434020:	in     al,0xee
  434022:	sub    eax,0x9ee9249e
  434027:	add    al,BYTE PTR [eax]
  434029:	bound  esi,QWORD PTR [edi-0x65a9f696]
  43402f:	das    
  434030:	adc    dl,cl
  434032:	fiadd  WORD PTR [edx]
  434034:	sub    eax,0x547bc41b
  434039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43403a:	out    dx,al
  43403b:	fld    DWORD PTR [ecx-0x7f]
  43403e:	test   eax,0x5b6841
  434043:	add    BYTE PTR [edi],dh
  434045:	xchg   DWORD PTR [ecx+0x2a219],eax
  43404b:	fs int3 
  43404d:	xchg   ax,bp
  434050:	pop    ss
  434051:	inc    ecx
  434052:	dec    esp
  434053:	je     0x433ff9
  434055:	sar    dh,cl
  434057:	call   0x2ece84fa
  43405c:	aad    0x32
  43405e:	dec    edi
  43405f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434060:	mov    eax,ds:0x9ee90001
  434065:	pop    esp
  434066:	or     eax,0x5052646c
  43406b:	add    ebx,DWORD PTR [ecx-0x61275816]
  434071:	add    al,BYTE PTR [ebp-0x3bab3ee4]
  434077:	loope  0x4340a0
  434079:	aas    
  43407a:	fsubr  DWORD PTR [ecx+ebx*8+0x8]
  43407e:	add    DWORD PTR [ecx+ebx*4+0x54700002],0x6a
  434086:	shl    esi,0xb0
  434089:	sar    cl,cl
  43408b:	jmp    0xeaa781b1
  434090:	push   ebp
  434091:	bound  esi,QWORD PTR [edi]
  434093:	add    bl,dh
  434095:	popw   es
  434097:	and    DWORD PTR [edi-0xfffff8],0x33
  43409e:	push   esp
  43409f:	mov    eax,0x675
  4340a4:	(bad)  
  4340a5:	out    0x83,al
  4340a7:	dec    edi
  4340a8:	add    BYTE PTR [eax],al
  4340aa:	dec    eax
  4340ab:	ds sbb eax,ebx
  4340ae:	(bad)  
  4340af:	cli    
  4340b0:	js     0x43403d
  4340b2:	mov    esp,0x6b08e1c5
  4340b7:	ins    BYTE PTR es:[edi],dx
  4340b8:	ror    DWORD PTR [ecx-0x31cc45ff],0xd2
  4340bf:	and    bh,BYTE PTR [ebx+0x7d]
  4340c2:	cmp    BYTE PTR [esi],al
  4340c4:	pop    es
  4340c5:	test   BYTE PTR [ebx-0x3],cl
  4340c8:	(bad)  
  4340c9:	dec    DWORD PTR [ebx+0x6c]
  4340cc:	cli    
  4340cd:	(bad)  
  4340ce:	jns    0x4340b2
  4340d0:	or     esi,0xffffffe7
  4340d3:	in     eax,0x83
  4340d5:	dec    edi
  4340d6:	or     BYTE PTR [eax+0x7b],0xc6
  4340da:	or     al,0x7
  4340dc:	fdivr  DWORD PTR [eax+0x605]
  4340e2:	daa    
  4340e3:	out    0x83,al
  4340e5:	dec    edi
  4340e6:	enter  0x4d7d,0xf8
  4340ea:	lods   al,BYTE PTR ds:[esi]
  4340eb:	daa    
  4340ec:	mov    ebx,0x8385008b
  4340f1:	enter  0xdd35,0x8
  4340f5:	cpuid  
  4340f7:	mov    esp,0xee504581
  4340fc:	lds    esi,FWORD PTR [edi+0x5]
  4340ff:	jg     0x4340c9
  434101:	rcr    DWORD PTR ds:0xc4f97cd6,0x36
  434108:	dec    edi
  434109:	mov    ebp,DWORD PTR [esp+eax*8-0x1f]
  43410d:	or     BYTE PTR [eax],al
  43410f:	add    BYTE PTR [ebp+0x66c797e8],bl
  434115:	sub    dl,BYTE PTR [eax+esi*1-0x4a]
  434119:	loopne 0x4340a5
  43411b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43411c:	rcr    ebx,0xfd
  43411f:	call   FWORD PTR [ebp-0x6203a5a4]
  434125:	mov    al,0x81
  434127:	scas   eax,DWORD PTR es:[edi]
  434128:	xchg   ebp,eax
  434129:	(bad)  
  43412b:	or     BYTE PTR [ebx],dh
  43412d:	fucom  st(0)
  43412f:	dec    ebx
  434130:	jno    0x434196
  434132:	iret   
  434133:	int    0x7d
  434135:	popf   
  434136:	test   dl,al
  434138:	xchg   ebp,eax
  434139:	push   edx
  43413a:	xor    bh,al
  43413c:	sahf   
  43413d:	and    ecx,DWORD PTR [ebx+eax*2-0x336817b7]
  434144:	xchg   dl,cl
  434146:	push   esp
  434147:	xlat   BYTE PTR ds:[ebx]
  434148:	xchg   edx,eax
  434149:	jno    0x43411b
  43414b:	test   edx,esp
  43414d:	xor    ebp,DWORD PTR [ebp+0x62aa86e5]
  434153:	test   eax,ebx
  434155:	mov    ecx,0x20d18762
  43415a:	push   esp
  43415b:	stc    
  43415c:	bound  esi,QWORD PTR [ebx]
  43415e:	jmp    0x4341ae
  434160:	pushf  
  434161:	(bad)  
  434163:	popa   
  434164:	push   ss
  434165:	out    dx,al
  434166:	shl    DWORD PTR [edx+0x1e],1
  434169:	mov    ds:0xe08572f4,al
  43416e:	xchg   ebx,eax
  43416f:	int3   
  434170:	and    BYTE PTR [edx],bl
  434172:	inc    BYTE PTR [esi-0x60a80000]
  434178:	adc    eax,0x90b96ef0
  43417d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43417e:	sbb    ebx,0x5c9dfffd
  434184:	pop    edi
  434185:	cld    
  434186:	popf   
  434187:	mov    al,0x81
  434189:	dec    edi
  43418a:	xchg   ebp,eax
  43418b:	add    ah,bh
  43418d:	add    esp,DWORD PTR [eax+ebx*4-0x3199211b]
  434194:	pop    esi
  434195:	into   
  434196:	fsub   st,st(1)
  434198:	pop    esi
  434199:	push   ecx
  43419a:	rol    DWORD PTR [ebx+0x66],0xc6
  43419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43419f:	add    ebx,DWORD PTR [edi]
  4341a1:	xchg   ecx,eax
  4341a2:	rol    BYTE PTR [eax+eiz*2],cl
  4341a5:	cmp    DWORD PTR [ebp+0x6a52370c],eax
  4341ab:	jl     0x434157
  4341ad:	imul   ebp,DWORD PTR [eax-0x24],0xffffffce
  4341b1:	aam    0x1e
  4341b3:	ret    
  4341b4:	loop   0x43413d
  4341b6:	sub    al,0x8
  4341b8:	out    0x3,eax
  4341ba:	xchg   esp,eax
  4341bb:	xchg   edi,eax
  4341bc:	mov    bl,0x46
  4341be:	(bad)  
  4341bf:	jnp    0x4341e7
  4341c1:	cmp    DWORD PTR ds:0x48c46604,0xffffffc3
  4341c8:	inc    BYTE PTR [ecx]
  4341ca:	sbb    bh,BYTE PTR [esi]
  4341cc:	retf   
  4341cd:	mov    esi,ds
  4341cf:	(bad)  
  4341d0:	in     ax,dx
  4341d2:	xor    ebx,ebx
  4341d4:	jle    0x4341d9
  4341d6:	popf   
  4341d7:	add    al,BYTE PTR [ecx-0x7d]
  4341da:	add    BYTE PTR [eax],al
  4341dc:	sub    dh,dl
  4341de:	icebp  
  4341df:	xchg   ebp,eax
  4341e0:	jmp    0x8f036e5e
  4341e5:	inc    eax
  4341e6:	fs inc esp
  4341e8:	or     BYTE PTR ds:0xdbcd52b7,cl
  4341ee:	jmp    0x9d03:0xe7274190
  4341f5:	add    ah,BYTE PTR [esi+0x60]
  4341f8:	jmp    0xc2cb1bff
  4341fd:	pop    es
  4341fe:	out    0x3,eax
  434200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434201:	cwde   
  434202:	in     eax,0xde
  434204:	data16 into 
  434206:	add    BYTE PTR [edx-0x28],ah
  434209:	mov    ebp,0xae6d62e0
  43420e:	ds push 0xffffffe0
  434211:	cli    
  434212:	cld    
  434213:	inc    eax
  434214:	or     eax,0x655ffd10
  434219:	retf   0x5935
  43421c:	dec    esp
  43421d:	mov    bh,0xcd
  43421f:	push   edx
  434220:	daa    
  434221:	lea    edi,[ebp+0x49]
  434224:	fwait
  434225:	dec    ebp
  434226:	shr    dl,0x19
  434229:	inc    ebx
  43422a:	hlt    
  43422b:	sub    BYTE PTR [edi-0x33],dh
  43422e:	mov    cl,0x24
  434230:	pop    ebx
  434231:	leave  
  434232:	stc    
  434233:	adc    bl,bh
  434235:	jnp    0x434276
  434237:	out    dx,al
  434238:	xchg   edx,edx
  43423a:	ins    DWORD PTR es:[edi],dx
  43423b:	(bad)  
  43423c:	pop    ds
  43423d:	dec    ebx
  43423e:	cld    
  43423f:	jmp    0x86ee4244
  434244:	pushf  
  434245:	out    0x9e,al
  434247:	add    cl,BYTE PTR [ecx]
  434249:	aas    
  43424a:	pushf  
  43424b:	leave  
  43424c:	dec    ebx
  43424d:	in     eax,dx
  43424e:	adc    al,0xbc
  434250:	int    0xc9
  434252:	and    al,0x3b
  434254:	fsubr  QWORD PTR [ebx]
  434256:	sbb    al,0xc4
  434258:	or     dl,ch
  43425a:	out    0x7a,al
  43425c:	aas    
  43425d:	out    0x17,al
  43425f:	xor    edi,eax
  434261:	add    dh,cl
  434263:	pop    edi
  434264:	xlat   BYTE PTR ds:[ebx]
  434265:	call   0x4901:0x6abd8504
  43426c:	jge    0x434217
  43426e:	xchg   esp,eax
  43426f:	xchg   DWORD PTR [ebx-0x63],eax
  434272:	fsubrp st(4),st
  434274:	add    DWORD PTR [ecx-0x2a],esp
  434277:	enter  0x96f9,0xb4
  43427b:	(bad)  
  43427c:	std    
  43427d:	cwde   
  43427e:	adc    al,0x43
  434280:	hlt    
  434281:	add    BYTE PTR [ebx],cl
  434283:	inc    edi
  434284:	in     al,0x0
  434286:	les    eax,FWORD PTR [edx]
  434288:	add    BYTE PTR [ebx-0x3804a17d],cl
  43428e:	aas    
  43428f:	inc    ebp
  434290:	add    ecx,DWORD PTR fs:[ebx]
  434293:	arpl   WORD PTR [ebx],si
  434295:	enter  0x85c3,0xc6
  434299:	add    dh,BYTE PTR [edx+eax*1+0x6487d7b]
  4342a0:	je     0x4342be
  4342a2:	cmovbe esp,esp
  4342a5:	jmp    0x4342a7
  4342a7:	add    BYTE PTR [edi-0xffbe83],al
  4342ad:	aas    
  4342ae:	push   0x5eb621ff
  4342b3:	mov    DWORD PTR [eax+0x3f],ecx
  4342b6:	jo     0x4342b7
  4342b8:	cmp    ebx,DWORD PTR [edx+0x7b]
  4342bb:	jge    0x434245
  4342bd:	push   es
  4342be:	ins    DWORD PTR es:[edi],dx
  4342bf:	in     al,dx
  4342c0:	inc    DWORD PTR [edi+0x64]
  4342c3:	add    ecx,DWORD PTR [ebx]
  4342c5:	bound  esi,QWORD PTR [ecx]
  4342c7:	inc    edi
  4342c8:	sub    al,0xff
  4342ca:	jns    0x4342a9
  4342cc:	push   ecx
  4342cd:	scas   eax,DWORD PTR es:[edi]
  4342ce:	test   DWORD PTR [ebx-0x7bf7330d],0x815
  4342d8:	fiadd  DWORD PTR [ebx+0x23670b7]
  4342de:	add    BYTE PTR [eax],al
  4342e0:	inc    ebx
  4342e1:	xchg   BYTE PTR [ebx-0x7afdfbfa],cl
  4342e7:	xchg   DWORD PTR [eax*1+0x3e810000],edx
  4342ee:	ins    BYTE PTR es:[edi],dx
  4342ef:	mov    ebp,esi
  4342f1:	js     0x434332
  4342f3:	dec    esp
  4342f4:	jno    0x43434c
  4342f6:	lock add al,BYTE PTR [edx+eax*1]
  4342fa:	dec    edx
  4342fb:	mov    ebx,DWORD PTR [ebp+0x5a8b640c]
  434301:	pop    ss
  434302:	xor    al,0x4f
  434304:	loop   0x4342e1
  434306:	push   es
  434307:	add    BYTE PTR [ebp+0x8b2fdb],bl
  43430d:	add    BYTE PTR [edx-0x35],ah
  434310:	sub    eax,0xf4839c66
  434315:	sub    BYTE PTR [ebp-0x6a3b7f25],bl
  43431b:	push   edx
  43431c:	inc    edx
  43431d:	fsub   DWORD PTR [eax]
  43431f:	sbb    al,0xc
  434321:	and    DWORD PTR [eax],0x36
  434324:	fdiv   st(1),st
  434326:	es ins BYTE PTR es:[edi],dx
  434328:	imul   ecx,DWORD PTR [ebx+0x5186bfe2],0xf07466ed
  434332:	lahf   
  434333:	(bad)  
  434335:	dec    ebp
  434336:	sub    BYTE PTR [ebp+esi*1+0x4c50cc50],bl
  43433d:	pusha  
  43433e:	(bad)  
  43433f:	fild   DWORD PTR [ebx]
  434341:	add    BYTE PTR [ebp-0x3ebe7725],bl
  434347:	imul   ecx,DWORD PTR [edx+0x2f4be254],0x66
  43434e:	lahf   
  43434f:	add    edi,DWORD PTR [eax-0x7f2462d6]
  434355:	les    edx,FWORD PTR [ebp+0x18d83f52]
  43435b:	fwait
  43435c:	add    eax,0xd5af4983
  434361:	stc    
  434362:	push   ds
  434363:	or     BYTE PTR ds:[edx],al
  434366:	es out dx,al
  434368:	fcmovnb st,st(1)
  43436a:	call   0x79e4:0x9dfffda8
  434371:	jae    0x434373
  434373:	add    BYTE PTR [ebx-0x5d3f0225],bl
  434379:	add    bh,bl
  43437b:	add    ebx,DWORD PTR [ebp-0x16a699fe]
  434381:	add    edx,DWORD PTR ds:0x974f626a
  434387:	push   es
  434388:	fcmove st,st(4)
  43438a:	out    0x55,eax
  43438c:	ds jns 0x4343b3
  43438f:	or     al,0x20
  434391:	aas    
  434392:	jg     0x434323
  434394:	outs   dx,BYTE PTR ds:[esi]
  434395:	shl    BYTE PTR [eax+0x4c],cl
  434398:	test   eax,0x1adbb479
  43439d:	cli    
  43439e:	ins    DWORD PTR es:[edi],dx
  43439f:	dec    ecx
  4343a0:	mov    ebp,0x19f3b77a
  4343a5:	aaa    
  4343a6:	dec    ebx
  4343a7:	xor    eax,0x33eb3322
  4343ac:	sbb    ch,BYTE PTR [edi+edi*8]
  4343af:	mov    WORD PTR [edi+ecx*1],cs
  4343b2:	aas    
  4343b3:	dec    edi
  4343b4:	mov    esp,0xde8ee702
  4343b9:	cli    
  4343ba:	ins    DWORD PTR es:[edi],dx
  4343bb:	xor    al,0xa1
  4343bd:	ja     0x43436e
  4343bf:	repz and DWORD PTR [edi+ecx*8],ebp
  4343c3:	mov    gs,esp
  4343c5:	push   cs
  4343c6:	pusha  
  4343c7:	xor    DWORD PTR [ebp+0x78],eax
  4343ca:	xlat   BYTE PTR ds:[ebx]
  4343cb:	mov    ds,ebp
  4343cd:	push   es
  4343ce:	data16 rcl BYTE PTR [ebp+0x1a0eb27f],0x3e
  4343d6:	test   DWORD PTR [eax+eax*1+0x70cace00],0x63fc3140
  4343e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4343e2:	sahf   
  4343e3:	add    ah,bh
  4343e5:	ret    0xc71c
  4343e8:	out    dx,al
  4343e9:	add    ebx,DWORD PTR [ebp+0x14dac2cb]
  4343ef:	ficomp DWORD PTR [eax+eax*1-0x63]
  4343f3:	add    al,BYTE PTR [eax]
  4343f5:	bound  edx,QWORD PTR [edi+0x36]
  4343f8:	mov    eax,0x29ee8
  4343fd:	mov    edx,0xa581c1fe
  434402:	jmp    0x4343cf
  434404:	stc    
  434405:	jmp    0x214346a8
  43440a:	or     BYTE PTR [ebp+0x4223b185],0x4c
  434411:	jb     0x4343dd
  434413:	add    DWORD PTR [ebp+0x8e3d9a1],0xffffffde
  43441a:	or     al,0xc4
  43441c:	xchg   DWORD PTR [edx+eiz*8+0x61d7ca15],ebp
  434423:	test   ecx,edi
  434425:	push   0x45
  434427:	into   
  434428:	add    dh,bl
  43442a:	sbb    cl,BYTE PTR [ebx+eax*1-0x4e066117]
  434431:	jmp    0x43449a
  434433:	aaa    
  434434:	cld    
  434435:	bound  edx,QWORD PTR [ebp+edi*4-0x20]
  434439:	(bad)  
  43443a:	out    0x36,eax
  43443c:	ds push 0x0
  43443f:	add    BYTE PTR [edx+edi*8-0x4],bl
  434443:	inc    eax
  434444:	push   es
  434445:	retf   
  434446:	stc    
  434447:	jmp    0x632401ea
  43444c:	out    0x3e,eax
  43444e:	xchg   DWORD PTR [esi+esi*2+0x1b2a1d3a],ebx
  434455:	push   es
  434456:	jg     0x4344ba
  434458:	push   esi
  434459:	mov    esp,edi
  43445b:	loope  0x434404
  43445d:	nop
  43445e:	(bad)  
  43445f:	jo     0x4344d3
  434461:	(bad)  
  434462:	xor    eax,0x848bccaf
  434467:	test   eax,0xe9c08694
  43446c:	sahf   
  43446d:	add    ch,BYTE PTR [eax+0x7cf95400]
  434473:	mov    eax,0x8afffef4
  434478:	cmp    al,0xbf
  43447a:	loope  0x434484
  43447c:	jge    0x4344c1
  43447e:	aam    0xf
  434480:	push   edx
  434481:	mov    bh,0x81
  434483:	dec    ebp
  434484:	and    cl,bh
  434486:	lods   eax,DWORD PTR ds:[esi]
  434487:	enter  0x43f7,0xe4
  43448b:	mov    DWORD PTR [ecx-0x3bfe4776],eax
  434491:	(bad)  
  434492:	call   edx
  434494:	adc    al,0x7d
  434496:	inc    ebp
  434497:	in     al,0x7c
  434499:	and    eax,0x7d1cd3bb
  43449e:	inc    ebp
  43449f:	hlt    
  4344a0:	test   edi,edx
  4344a2:	adc    BYTE PTR [ebx],al
  4344a4:	add    BYTE PTR [eax],al
  4344a6:	jne    0x434525
  4344a8:	enter  0xf38b,0x42
  4344ac:	add    DWORD PTR [esp+edi*8],0xfffffffb
  4344b0:	lods   eax,DWORD PTR ds:[esi]
  4344b1:	dec    ebp
  4344b2:	mov    al,0x7d
  4344b4:	cmp    eax,0x8d6b5f4
  4344b9:	lar    edi,WORD PTR [edi-0x3b903f05]
  4344c0:	outs   dx,BYTE PTR ds:[esi]
  4344c1:	pop    esi
  4344c2:	pop    DWORD PTR [eax*4+0x6749b]
  4344c9:	add    bh,dh
  4344cb:	xor    esp,edi
  4344cd:	add    BYTE PTR [ebx+0x4a],bh
  4344d0:	sbb    DWORD PTR ds:0xb6070644,eax
  4344d6:	ss ja  0x43449f
  4344d9:	rcl    DWORD PTR [edi+esi*2+0x414bdc45],cl
  4344e0:	cld    
  4344e1:	inc    edx
  4344e2:	inc    edi
  4344e3:	mov    es,WORD PTR [edi]
  4344e5:	mov    dh,0x1
  4344e7:	jge    0x434526
  4344e9:	in     al,0x9d
  4344eb:	loopne 0x43447c
  4344ed:	(bad)  
  4344ee:	sahf   
  4344ef:	mov    ds:0xdc12ff95,eax
  4344f4:	std    
  4344f5:	int3   
  4344f6:	std    
  4344f7:	push   esp
  4344f8:	inc    edx
  4344f9:	in     al,0x1e
  4344fb:	call   0x1d45:0x93508705
  434502:	fimul  WORD PTR [ebp+eiz*8-0x49e8cdf7]
  434509:	std    
  43450a:	add    BYTE PTR [eax],al
  43450c:	frstor [eax+ecx*2+0x4c]
  434510:	es loopne 0x434591
  434513:	xchg   DWORD PTR [eax+0x47],ebx
  434516:	mov    esi,0x8fd895e8
  43451b:	rcr    BYTE PTR [esi-0x1cca1fea],0xd0
  434522:	stos   DWORD PTR es:[edi],eax
  434523:	or     ebx,ebp
  434525:	mov    ?,WORD PTR [edx-0x4bd09f7b]
  43452b:	in     eax,0x76
  43452d:	sub    al,BYTE PTR [esi-0x22b9e77]
  434533:	jmp    DWORD PTR [esi]
  434535:	adc    edi,DWORD PTR [esi-0x70276a19]
  43453b:	(bad)  
  43453c:	pushf  
  43453d:	pusha  
  43453e:	mov    ecx,0xb4db9d15
  434543:	in     eax,0xc6
  434545:	jmp    0xbfc5:0x54814b85
  43454c:	je     0x434519
  43454e:	xchg   BYTE PTR [ecx-0x23],cl
  434551:	pop    edi
  434552:	mov    ebp,0x18a673
  434557:	pop    ss
  434558:	popf   
  434559:	(bad)  
  43455b:	out    0x87,al
  43455d:	xlat   BYTE PTR ds:[ebx]
  43455e:	std    
  43455f:	inc    DWORD PTR ds:0x5a1349bb
  434565:	add    ch,BYTE PTR [edx-0x40]
  434568:	nop
  434569:	add    ah,bh
  43456b:	(bad)  
  43456c:	and    al,0xc9
  43456e:	sar    BYTE PTR [edi-0x2640000],cl
  434574:	out    0x3,al
  434576:	popf   
  434577:	fisttp DWORD PTR [eax]
  434579:	add    BYTE PTR [ebp-0x76bb70fe],bl
  43457f:	stc    
  434580:	pop    ebp
  434581:	inc    ecx
  434582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434583:	shl    DWORD PTR [edi],0xfc
  434586:	pop    esi
  434587:	dec    edi
  434588:	daa    
  434589:	add    al,0x2
  43458b:	cli    
  43458c:	loop   0x434591
  43458e:	popf   
  43458f:	stc    
  434590:	pop    eax
  434591:	int3   
  434592:	pop    eax
  434593:	jecxz  0x43456f
  434595:	mov    WORD PTR [edx+edi*1-0x56],fs
  434599:	jmp    FWORD PTR [edi+0x1803e702]
  43459f:	inc    ecx
  4345a0:	pop    ds
  4345a1:	sbb    ebp,0xad1b224d
  4345a7:	push   esp
  4345a8:	adc    BYTE PTR [ecx+0x3e71e01],cl
  4345ae:	popf   
  4345af:	add    ah,BYTE PTR [esi+0x59]
  4345b2:	cdq    
  4345b3:	add    ebx,edx
  4345b5:	jg     0x434589
  4345b7:	(bad)  
  4345b8:	out    0x3,al
  4345ba:	xchg   esp,eax
  4345bb:	nop
  4345bc:	in     eax,0xd6
  4345be:	(bad)  
  4345bf:	(bad)  
  4345c0:	pop    esi
  4345c1:	(bad)  
  4345c2:	push   0x5f82a5e3
  4345c7:	sti    
  4345c8:	outs   dx,DWORD PTR ds:[esi]
  4345c9:	xor    DWORD PTR [ebp+0x4],esp
  4345cc:	aas    
  4345cd:	sbb    ebp,esp
  4345cf:	cmp    dl,BYTE PTR [ebp-0x60c7df4b]
  4345d5:	fwait
  4345d6:	add    BYTE PTR [eax],al
  4345d8:	push   edx
  4345d9:	enter  0x3e7,0x58
  4345dd:	jecxz  0x4345ad
  4345df:	aam    0xd5
  4345e1:	and    eax,DWORD PTR [eax]
  4345e3:	sub    ah,BYTE PTR [eax+0x461a4041]
  4345e9:	enter  0xad8a,0x27
  4345ed:	enter  0x72f9,0xdb
  4345f1:	inc    edx
  4345f2:	xchg   DWORD PTR [esi-0x1a],esp
  4345f5:	in     eax,dx
  4345f6:	(bad)  
  4345f7:	call   0xe955484f
  4345fc:	sahf   
  4345fd:	add    al,BYTE PTR [ebp-0x753ed2]
  434603:	call   0xca1048a6
  434608:	in     ax,0xbc
  43460b:	jb     0x4345e3
  43460d:	jge    0x434650
  43460f:	cmp    DWORD PTR [esi],edx
  434611:	inc    DWORD PTR [edi-0x1878199e]
  434617:	loope  0x4345b4
  434619:	xchg   esp,eax
  43461a:	(bad)  
  43461b:	jo     0x43467a
  43461d:	into   
  43461e:	xor    eax,0x904250af
  434623:	push   0x55
  434625:	mov    BYTE PTR [eax],0xde
  434628:	xor    dh,BYTE PTR [edi-0x6611703]
  43462e:	mov    cl,0xeb
  434630:	retf   
  434631:	cmp    edi,esp
  434633:	bound  esp,QWORD PTR [eax-0x4b]
  434636:	loopne 0x43469a
  434638:	fld    TBYTE PTR [edx]
  43463a:	ds push 0x0
  43463d:	add    BYTE PTR [eax-0x6],cl
  434640:	cld    
  434641:	and    BYTE PTR [esi],ah
  434643:	(bad)  
  434644:	stc    
  434645:	jmp    0x6323fbe8
  43464a:	(bad)  [edx]
  43464c:	xchg   DWORD PTR [esi+eax*2+0x172a1d3a],edi
  434653:	(bad)  
  434654:	jle    0x4346b8
  434656:	xchg   di,sp
  434659:	loope  0x4345f6
  43465b:	xchg   esp,eax
  43465c:	mov    DWORD PTR [eax],0x3bf442cd
  434662:	jb     0x43469c
  434664:	mov    ecx,0x7cfd34a8
  434669:	mov    al,0x44
  43466b:	add    eax,DWORD PTR [eax]
  43466d:	mov    ebp,esp
  43466f:	ret    0x8e1
  434672:	lods   eax,DWORD PTR ds:[esi]
  434673:	aas    
  434674:	aam    0xf
  434676:	cmp    bh,BYTE PTR [ebx-0x327b27f]
  43467c:	lods   eax,DWORD PTR ds:[esi]
  43467d:	enter  0x3ff7,0xe4
  434681:	mov    DWORD PTR [ecx+0x401b88a],edi
  434687:	add    eax,DWORD PTR [eax]
  434689:	shl    esp,cl
  43468b:	js     0x4346d2
  43468d:	in     al,0xac
  43468f:	and    DWORD PTR [ebx+0x45790cd3],edi
  434695:	hlt    
  434696:	add    eax,0x50310db
  43469b:	jns    0x434665
  43469d:	mov    edi,DWORD PTR [ebx+0xe]
  4346a0:	add    DWORD PTR [eax+eax*1],0x0
  4346a4:	dec    esp
  4346a5:	std    
  4346a6:	lods   eax,DWORD PTR ds:[esi]
  4346a7:	dec    ebp
  4346a8:	sbb    BYTE PTR [ebx+0x3d],bh
  4346ab:	hlt    
  4346ac:	add    eax,0xa0f08d6
  4346b1:	mov    esi,0x887fc0fb
  4346b6:	outs   dx,BYTE PTR ds:[esi]
  4346b7:	push   esi
  4346b8:	pop    es
  4346b9:	cs cld 
  4346bb:	add    BYTE PTR [ebx+0x46],dh
  4346be:	cmp    DWORD PTR [ebx],eax
  4346c0:	je     0x4346c4
  4346c2:	pop    es
  4346c3:	mov    dh,0x76
  4346c5:	jnp    0x43468d
  4346c7:	shl    esp,cl
  4346c9:	jnp    0x434710
  4346cb:	fadd   st(3),st
  4346cd:	cmp    eax,0x8a7742fc
  4346d2:	pop    es
  4346d3:	mov    dh,0xb9
  4346d5:	jns    0x434714
  4346d7:	in     al,0x9d
  4346d9:	fmul   QWORD PTR [ebx-0x63dc6139]
  4346df:	dec    DWORD PTR [edx-0x24]
  4346e2:	std    
  4346e3:	int3   
  4346e4:	cmp    eax,0x1ee44151
  4346e9:	push   ss
  4346ea:	or     al,0x87
  4346ec:	enter  0x45d3,0x1d
  4346f0:	pop    esi
  4346f1:	mov    ebp,esp
  4346f3:	or     edx,ebp
  4346f5:	push   ss
  4346f6:	mov    dl,0xfd
  4346f8:	frstor [eax+0x44]
  4346fb:	push   eax
  4346fc:	es loopne 0x43477d
  4346ff:	xchg   DWORD PTR [eax-0x79],esp
  434702:	mov    esi,0x8bd495e8
  434707:	rol    BYTE PTR [eax],0x0
  43470a:	sahf   
  43470b:	push   ss
  43470c:	loopne 0x434743
  43470e:	fisttp DWORD PTR [esi+eiz*4]
  434711:	or     DWORD PTR [ebx],esi
  434713:	cmpxchg DWORD PTR [ebp-0x1a4f90a8],eax
  43471a:	xchg   BYTE PTR [edx-0x2],ch
  43471d:	mov    cl,bl
  43471f:	sar    ch,1
  434721:	call   DWORD PTR [esi]
  434723:	xchg   esp,eax
  434724:	mov    esi,0x8bd495e7
  434729:	(bad)  
  43472a:	pushf  
  43472b:	pop    esp
  43472c:	mov    ecx,0xb0db9d15
  434731:	in     eax,0x76
  434733:	sub    al,BYTE PTR [esi+0x3d73b94b]
  434739:	je     0x4346e5
  43473b:	pusha  
  43473c:	cmp    cl,BYTE PTR [eax]
  43473e:	pop    edx
  43473f:	fwait
  434740:	cmc    
  434741:	inc    ebx
  434742:	adc    BYTE PTR [ebp+edi*8-0x2261a1a],bl
  434749:	jmp    DWORD PTR [esi]
  43474b:	and    eax,DWORD PTR [edx+esi*4]
  43474e:	pop    ebp
  43474f:	sbb    ah,dh
  434751:	adc    BYTE PTR [esi],bl
  434753:	add    al,BYTE PTR [edi]
  434755:	add    al,0x1a
  434757:	xor    eax,0x3adc8aa3
  43475c:	sub    bh,ah
  43475e:	lods   eax,DWORD PTR ds:[esi]
  43475f:	add    ah,bh
  434761:	add    esp,DWORD PTR [eax]
  434763:	cmp    eax,0x4e5d7eaf
  434768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434769:	sbb    BYTE PTR ds:0x80c551,ch
  43476f:	add    BYTE PTR [esi+0x2104e7c6],dh
  434775:	jb     0x43475c
  434777:	add    ebx,DWORD PTR [ebp+0x140690f5]
  43477d:	aaa    
  43477e:	sar    DWORD PTR [edi-0x19],cl
  434781:	mov    al,0xc7
  434783:	inc    esi
  434784:	mov    BYTE PTR [edi+ebp*8-0x19359184],bh
  43478b:	stos   DWORD PTR es:[edi],eax
  43478c:	mov    al,0x4d
  43478e:	pop    ds
  43478f:	push   esi
  434790:	xlat   BYTE PTR ds:[ebx]
  434791:	js     0x4347ad
  434793:	cmp    al,0x25
  434795:	add    esp,edi
  434797:	add    ebx,DWORD PTR [ebp-0x35e0784f]
  43479d:	cmp    esi,eax
  43479f:	(bad)  
  4347a0:	sar    BYTE PTR [ebx],cl
  4347a2:	and    esi,DWORD PTR [edi-0x378dfd40]
  4347a8:	test   al,0x2
  4347aa:	out    0xca,eax
  4347ac:	pushf  
  4347ad:	jmp    0xd3ec:0x819d03e6
  4347b4:	popf   
  4347b5:	cmc    
  4347b6:	push   0x42
  4347b8:	mov    ds:0xe67ee7c4,eax
  4347bd:	loop   0x4347bd
  4347bf:	inc    eax
  4347c0:	lea    edi,[eax-0x5e]
  4347c3:	inc    edi
  4347c4:	rol    cl,1
  4347c6:	mov    ecx,0x70c1b83c
  4347cb:	dec    ecx
  4347cc:	jno    0x4347d6
  4347ce:	add    BYTE PTR [esi+0x6a0b5092],ch
  4347d4:	add    BYTE PTR [eax],al
  4347d6:	push   cs
  4347d7:	ret    
  4347d8:	adc    eax,0x9029ee9
  4347dd:	fs sub eax,0xd3e9f9c4
  4347e3:	cmp    DWORD PTR [eax],esi
  4347e5:	shl    BYTE PTR [ecx+0x51],cl
  4347e8:	or     edx,edx
  4347ea:	pop    ecx
  4347eb:	jle    0x434836
  4347ed:	mov    ch,0xa3
  4347ef:	cmp    DWORD PTR [eax],ebp
  4347f1:	pusha  
  4347f2:	in     al,0xce
  4347f4:	and    eax,0x84fe4a21
  4347f9:	test   DWORD PTR ss:0x125feac8,ebx
  434800:	test   DWORD PTR [esi*8-0x744ab485],ebp
  434807:	cmp    DWORD PTR [eax+0x70],eax
  43480a:	pop    ebp
  43480b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43480c:	xor    eax,0x84ef54a8
  434811:	test   al,0xd3
  434813:	clc    
  434814:	test   BYTE PTR [ecx+ecx*8],bl
  434817:	sbb    eax,0x425772c8
  43481c:	xchg   DWORD PTR [edx*1+0x51b5437c],ebp
  434823:	aas    
  434824:	hlt    
  434825:	bound  ebx,QWORD PTR [ebp-0x2e]
  434828:	xor    eax,0x84ff64a8
  43482d:	test   al,0x39
  43482f:	aas    
  434830:	hlt    
  434831:	ret    0x7bf6
  434834:	dec    ebx
  434835:	jns    0x434862
  434837:	aaa    
  434838:	fcom   QWORD PTR [edx]
  43483a:	add    BYTE PTR [eax],al
  43483c:	loope  0x4348bb
  43483e:	inc    ebx
  43483f:	push   ecx
  434840:	sbb    DWORD PTR [edx],edi
  434842:	inc    eax
  434843:	(bad)  
  434844:	(bad)  [esi+0x7b669c25]
  43484a:	dec    ebx
  43484b:	add    BYTE PTR [eax-0x7814f75c],ah
  434851:	add    BYTE PTR [ecx+0x0],0xff
  434855:	inc    edx
  434856:	aam    0x8a
  434858:	dec    eax
  434859:	inc    BYTE PTR [edx+0x8478c45]
  43485f:	inc    eax
  434860:	mov    ebx,0x189f442
  434865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434866:	ins    DWORD PTR es:[edi],dx
  434867:	in     al,dx
  434868:	mov    bh,0x30
  43486a:	inc    eax
  43486b:	add    BYTE PTR [ebx+0x7a],cl
  43486e:	aaa    
  43486f:	add    DWORD PTR [edi+edi*8-0x42],eax
  434873:	pop    es
  434874:	push   eax
  434875:	(bad)  
  434876:	(bad)  
  434877:	call   FWORD PTR [ebp+0x34fff8eb]
  43487d:	jle    0x4348f4
  43487f:	lock add al,0x2
  434882:	test   BYTE PTR [eax-0x750000fb],cl
  434888:	shl    DWORD PTR [esi+0x46b44f82],0x8
  43488f:	inc    eax
  434890:	cmp    eax,DWORD PTR [ebx]
  434892:	lock mov ecx,eax
  434895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434896:	mov    edi,0xfffed007
  43489b:	dec    DWORD PTR ds:0xffface
  4348a1:	add    ah,al
  4348a3:	jge    0x43491c
  4348a5:	or     ah,al
  4348a7:	add    DWORD PTR [eax+esi*4-0x7d00014c],eax
  4348ae:	sbb    bl,BYTE PTR [esi]
  4348b0:	imul   esp,DWORD PTR [esi],0x49
  4348b3:	pop    edx
  4348b4:	and    al,0x0
  4348b6:	inc    edi
  4348b7:	xor    edi,esp
  4348b9:	add    bl,cl
  4348bb:	jp     0x434906
  4348bd:	add    DWORD PTR [esi+edi*8-0x2c7949fa],esi
  4348c4:	inc    ebp
  4348c5:	cld    
  4348c6:	popf   
  4348c7:	and    al,0xbe
  4348c9:	int    0x7d
  4348cb:	outs   dx,BYTE PTR ds:[esi]
  4348cc:	test   dl,al
  4348ce:	xchg   ebp,eax
  4348cf:	xor    dh,BYTE PTR [ecx]
  4348d1:	clc    
  4348d2:	sahf   
  4348d3:	jecxz  0x434857
  4348d5:	cli    
  4348d6:	mov    ebp,0xe085af7d
  4348db:	dec    ebx
  4348dc:	sbb    eax,DWORD PTR [ebx+0x6d]
  4348df:	xor    eax,0x6a9c0839
  4348e4:	icebp  
  4348e5:	(bad)  
  4348e6:	(bad)  [edi+0x273d4376]
  4348ec:	les    esi,FWORD PTR [esp+esi*2+0x34]
  4348f0:	cmp    eax,ebp
  4348f2:	es cdq 
  4348f4:	in     eax,0x4f
  4348f6:	xchg   bl,ah
  4348f8:	cmp    BYTE PTR [ecx-0x73],0xab
  4348fc:	cs dec esi
  4348fe:	test   eax,0xa54ed5b0
  434903:	stos   DWORD PTR es:[edi],eax
  434904:	std    
  434905:	in     al,0x0
  434907:	add    BYTE PTR [eax+0xafcecc3],bl
  43490d:	lods   al,BYTE PTR ds:[esi]
  43490e:	jl     0x43495b
  434910:	xchg   ebp,eax
  434911:	xor    al,0x32
  434913:	clc    
  434914:	and    al,0xe9
  434916:	jmp    0x43489e
  434918:	pop    esp
  434919:	mov    ebx,0xab8d7984
  43491e:	jl     0x434963
  434920:	in     eax,dx
  434921:	xor    al,BYTE PTR [edx-0x20]
  434924:	es ins DWORD PTR es:[edi],dx
  434926:	push   edx
  434927:	sbb    eax,0xd0ab78
  43492c:	popf   
  43492d:	and    al,0xbc
  43492f:	mov    edi,0xbf04dbbc
  434934:	es jne 0x4348f5
  434937:	out    0xa5,eax
  434939:	sub    bl,dh
  43493b:	add    BYTE PTR [edx-0x42410255],ch
  434941:	add    ch,bh
  434943:	add    al,0x5a
  434945:	lea    ebp,[esi]
  434947:	ret    0x1a7a
  43494a:	out    0xc2,al
  43494c:	ror    BYTE PTR [ecx-0x11],1
  43494f:	push   edi
  434950:	xchg   ecx,eax
  434951:	lea    ebp,[ebx+edi*8+0x47df425d]
  434958:	out    dx,al
  434959:	inc    edx
  43495a:	out    0xdc,eax
  43495c:	shl    ebp,1
  43495e:	or     eax,0xeac96f14
  434963:	in     al,dx
  434964:	pop    edx
  434965:	shl    edi,0x84
  434968:	aam    0xa
  43496a:	out    0x0,eax
  43496c:	add    BYTE PTR [eax],al
  43496e:	and    DWORD PTR [eax-0x7a62fc19],edx
  434974:	xor    bl,0x3a
  434977:	adc    BYTE PTR [ebx-0x79],ah
  43497a:	popf   
  43497b:	add    ah,bh
  43497d:	test   BYTE PTR [edi],ah
  43497f:	loop   0x4349f6
  434981:	and    eax,0x4e33fa0
  434986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434987:	xchg   BYTE PTR [esi+0x4],ch
  43498a:	popf   
  43498b:	add    ah,dl
  43498d:	xchg   ebp,eax
  43498e:	or     eax,eax
  434990:	sbb    al,0xd0
  434992:	sbb    al,dl
  434994:	xchg   esi,eax
  434995:	in     al,0xbb
  434997:	test   DWORD PTR [ecx-0x50a8e404],esp
  43499d:	add    eax,ebp
  43499f:	test   BYTE PTR [ecx-0x211f8cdc],ch
  4349a5:	cs mov ecx,0x667b3336
  4349ab:	or     ch,BYTE PTR [edx+0x1446a545]
  4349b1:	inc    esp
  4349b2:	popf   
  4349b3:	leave  
  4349b4:	jmp    0x9c7a:0xe7c0baf0
  4349bb:	test   DWORD PTR [eax],eax
  4349bd:	jno    0x43497a
  4349bf:	or     DWORD PTR [edx-0x6454377],eax
  4349c5:	mov    eax,ds:0x5ef9ba6b
  4349ca:	ret    
  4349cb:	push   ebp
  4349cc:	pop    ecx
  4349cd:	bound  esi,QWORD PTR [esp+ebx*2-0x42]
  4349d1:	loope  0x4349d3
  4349d3:	add    BYTE PTR [esi-0x80ebc7b],bl
  4349d9:	dec    ebx
  4349da:	call   0x8551fb4f
  4349df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4349e0:	dec    esi
  4349e1:	mov    BYTE PTR [eax],dl
  4349e3:	bound  esp,QWORD PTR [esi+edi*4-0x76b14e79]
  4349ea:	push   eax
  4349eb:	in     eax,0xd1
  4349ed:	xor    DWORD PTR [edi+esi*4],edi
  4349f0:	leave  
  4349f1:	pop    ecx
  4349f2:	cmp    BYTE PTR [edx-0x16063eea],dh
  4349f8:	sahf   
  4349f9:	pop    ecx
  4349fa:	test   DWORD PTR [esp+ebp*2],eax
  4349fd:	or     BYTE PTR [eax],0xe9
  434a00:	(bad)  
  434a01:	aad    0x2d
  434a03:	neg    DWORD PTR [ebx+0x2]
  434a06:	sbb    al,0xe9
  434a08:	sahf   
  434a09:	add    al,cl
  434a0b:	and    al,0x41
  434a0d:	sar    cl,0xe9
  434a10:	sahf   
  434a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434a12:	add    DWORD PTR [esi-0x390425ab],esp
  434a18:	jmp    0x4349d3
  434a1a:	test   DWORD PTR [ecx+esi*8],esp
  434a1d:	xchg   BYTE PTR [ebx-0x3f],cl
  434a20:	imul   ecx,DWORD PTR [edx+0xc],0x87b25d62
  434a27:	stc    
  434a28:	push   edi
  434a29:	push   ebx
  434a2a:	cld    
  434a2b:	jo     0x4349c3
  434a2d:	adc    al,BYTE PTR [edi+0x793d9539]
  434a33:	rcr    DWORD PTR [esi+0x5987],0x0
  434a3a:	fdivr  QWORD PTR [esi]
  434a3c:	outs   dx,DWORD PTR ds:[esi]
  434a3d:	cmp    al,0xa9
  434a3f:	mov    bl,0x7c
  434a41:	aas    
  434a42:	into   
  434a43:	push   edx
  434a44:	mov    edi,DWORD PTR es:[ecx-0x5a]
  434a48:	or     DWORD PTR [ebp-0x74],0xc
  434a4c:	cmp    DWORD PTR [eax],edx
  434a4e:	push   0xd44582e4
  434a53:	cmp    al,0x55
  434a55:	or     ah,bl
  434a57:	js     0x434a3c
  434a59:	jmp    ebx
  434a5b:	mov    al,al
  434a5d:	je     0x434aa7
  434a5f:	enter  0x1dff,0x74
  434a63:	add    eax,DWORD PTR [eax]
  434a65:	pop    esi
  434a66:	jnp    0xd0c74a68
  434a6c:	push   edi
  434a6d:	mov    ebx,DWORD PTR [ecx+0x3408b9f2]
  434a73:	cmp    al,0x6d
  434a75:	or     BYTE PTR [edi+0xa2bd04a],bh
  434a7b:	pop    es
  434a7c:	sbb    DWORD PTR [ebp-0x5c],0x1c
  434a80:	push   esi
  434a81:	adc    BYTE PTR ds:0x12010845,dh
  434a87:	mov    bh,0xfa
  434a89:	pop    esi
  434a8a:	mov    al,ds:0x4087781
  434a8f:	cmp    al,0x3d
  434a91:	shr    BYTE PTR [eax+0x13],1
  434a94:	jge    0x434a71
  434a96:	push   0xd47f7b1f
  434a9b:	add    cl,BYTE PTR [ebx+0x74]
  434a9e:	add    BYTE PTR [eax],al
  434aa0:	aad    0x39
  434aa2:	dec    esi
  434aa3:	or     al,0x7f
  434aa5:	inc    ebp
  434aa6:	sbb    BYTE PTR [ebx],ch
  434aa8:	pop    es
  434aa9:	hlt    
  434aaa:	dec    edi
  434aab:	call   0x435328
  434ab0:	das    
  434ab1:	mov    ebp,0xa59d4e84
  434ab6:	js     0x434b09
  434ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ab9:	les    edi,FWORD PTR [eax+0x4f914f4f]
  434abf:	push   DWORD PTR [edx-0x7abe8958]
  434ac5:	and    al,BYTE PTR [edx+0x30]
  434ac8:	push   ss
  434ac9:	test   al,0x80
  434acb:	clc    
  434acc:	scas   al,BYTE PTR es:[edi]
  434acd:	(bad)  
  434acf:	rcr    al,0xb3
  434ad2:	std    
  434ad3:	call   FWORD PTR [ebp-0x6c077f55]
  434ad9:	(bad)  
  434ada:	add    al,0xc1
  434adc:	loopne 0x434a91
  434ade:	std    
  434adf:	(bad)  
  434ae0:	jb     0x434a8e
  434ae2:	js     0x434b2d
  434ae4:	mov    eax,ds:0x5415a4fc
  434ae9:	mov    ecx,0x6c3c7daf
  434aee:	cmp    al,0xa6
  434af1:	lods   al,BYTE PTR ds:[esi]
  434af2:	jb     0x434ab2
  434af4:	sahf   
  434af5:	data16 cmc 
  434af7:	inc    ebp
  434af8:	sbb    al,0xa
  434afa:	test   BYTE PTR [eax],al
  434afc:	popf   
  434afd:	stos   DWORD PTR es:[edi],eax
  434afe:	add    bh,cl
  434b00:	sahf   
  434b01:	xchg   esp,eax
  434b02:	or     DWORD PTR [ebp+0x0],edi
  434b05:	add    BYTE PTR [eax-0x3478fbe5],ch
  434b0b:	jg     0x434b5f
  434b0d:	add    al,0x20
  434b0f:	rcl    DWORD PTR [ecx+0x2],0x1e
  434b13:	pop    edi
  434b14:	add    BYTE PTR [eax+edx*4],al
  434b17:	mov    dl,0x78
  434b19:	inc    ebx
  434b1a:	in     eax,0x26
  434b1c:	mov    ebp,0xcb3b2009
  434b21:	stc    
  434b22:	repnz sbb eax,0x74e6b827
  434b28:	int3   
  434b29:	stc    
  434b2a:	inc    edx
  434b2b:	and    dl,ah
  434b2d:	pop    ebx
  434b2e:	fild   WORD PTR [edx]
  434b30:	out    dx,eax
  434b31:	add    ebx,DWORD PTR [eax]
  434b33:	dec    eax
  434b34:	mov    edi,0x5e5d702d
  434b39:	out    0x66,al
  434b3b:	rcr    bh,0x3
  434b3e:	cmc    
  434b3f:	mov    esp,0x5db4cc82
  434b44:	outs   dx,BYTE PTR ds:[esi]
  434b45:	out    0x46,al
  434b47:	rcr    bh,0x3
  434b4a:	sbb    BYTE PTR [esi+0x2d9f3aa],bh
  434b50:	loope  0x434b44
  434b52:	rol    DWORD PTR [edx],1
  434b54:	jmp    0x434b47
  434b56:	leave  
  434b57:	add    ah,BYTE PTR [edi-0xf]
  434b5a:	rol    DWORD PTR [edx],0x54
  434b5d:	icebp  
  434b5e:	mov    ecx,0xb1f0b602
  434b63:	add    al,BYTE PTR [ebx]
  434b65:	clc    
  434b66:	test   eax,0xf71602
  434b6b:	add    BYTE PTR [ecx-0x660954fe],ah
  434b71:	add    ch,al
  434b73:	cmc    
  434b74:	xchg   ecx,eax
  434b75:	add    bh,BYTE PTR [ecx+0x6c0289f5]
  434b7b:	cmc    
  434b7c:	add    DWORD PTR [edx],0x279f570
  434b82:	lahf   
  434b83:	hlt    
  434b84:	jno    0x434b88
  434b86:	xor    al,0xf4
  434b88:	imul   eax,DWORD PTR [edx],0x261f42e
  434b8e:	shr    bl,cl
  434b90:	fld    DWORD PTR [edx]
  434b92:	jbe    0x434b80
  434b94:	rol    DWORD PTR [edx],1
  434b96:	dec    eax
  434b97:	in     eax,dx
  434b98:	leave  
  434b99:	add    bl,BYTE PTR [ecx]
  434b9b:	call   0xe84e4e61
  434ba0:	mov    ecx,0xb1ea3102
  434ba5:	add    cl,BYTE PTR [esi+0x2a9ea]
  434bab:	out    dx,eax
  434bac:	mov    esi,0x8119ffff
  434bb1:	(bad)  
  434bb2:	(bad)  
  434bb3:	(bad)  
  434bb4:	js     0x434bb5
  434bb6:	(bad)  
  434bb7:	fild   DWORD PTR [ecx+0x7893ffff]
  434bbd:	(bad)  
  434bbe:	push   DWORD PTR [ecx-0x7d]
  434bc1:	(bad)  
  434bc2:	dec    DWORD PTR [ebx+edi*2-0x1]
  434bc6:	(bad)  
  434bc7:	jns    0x434b4c
  434bc9:	(bad)  
  434bca:	push   DWORD PTR [ebx-0x51]
  434bcd:	std    
  434bce:	(bad)  
  434bcf:	fiadd  WORD PTR [eax]
  434bd1:	add    BYTE PTR [edi-0x71eb0001],cl
  434bd7:	(bad)  
  434bd8:	call   FWORD PTR [ebx]
  434bda:	mov    ?,edi
  434bdc:	(bad)  
  434bdd:	mov    ebx,0x6252af03
  434be2:	int3   
  434be3:	or     al,BYTE PTR [ebx-0x7b0832c1]
  434be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434bea:	add    BYTE PTR [ecx-0x7a734240],0x4a
  434bf1:	add    eax,0xd674c41c
  434bf6:	rol    DWORD PTR [edx+0x34],cl
  434bf9:	fs popa 
  434bfb:	aaa    
  434bfc:	push   es
  434bfd:	mov    ecx,0xb92840c3
  434c02:	addr16 int3 
  434c04:	jge    0x434c33
  434c06:	xor    DWORD PTR [edi+0x50abdd4a],eax
  434c0c:	sub    BYTE PTR [edx-0x21],ah
  434c0f:	out    0x4e,al
  434c11:	fwait
  434c12:	out    0xd2,eax
  434c14:	jge    0x434bc3
  434c16:	push   ss
  434c17:	ret    
  434c18:	inc    edx
  434c19:	std    
  434c1a:	sahf   
  434c1b:	add    al,BYTE PTR [eax]
  434c1d:	jmp    0x2c9e0ecd
  434c22:	jecxz  0x434c2a
  434c24:	add    BYTE PTR [eax],al
  434c26:	sbb    al,0xca
  434c28:	idiv   edi
  434c2a:	sub    ebp,edx
  434c2c:	push   esp
  434c2d:	ret    0xfff0
  434c30:	retf   
  434c31:	int3   
  434c32:	cmp    BYTE PTR [esp+ecx*8-0x34],dh
  434c36:	add    BYTE PTR [eax],al
  434c38:	or     BYTE PTR [esp+ecx*8-0x34],dh
  434c3c:	clc    
  434c3d:	jae    0x434c0b
  434c3f:	int3   
  434c40:	cmp    DWORD PTR [ebx],0xbe998bec
  434c46:	dec    esp
  434c47:	mov    edi,DWORD PTR [ecx-0x4a]
  434c4a:	push   eax
  434c4b:	mov    ebx,DWORD PTR ds:0x3510e7c7
  434c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c52:	idiv   edi
  434c54:	test   bh,bh
  434c56:	jp     0x434c53
  434c58:	test   DWORD PTR [edx+0x2b],edx
  434c5b:	mov    eax,DWORD PTR [ecx-0x4d]
  434c5e:	or     BYTE PTR [esi-0x7e3dfb7c],dh
  434c64:	int    0xd6
  434c66:	test   DWORD PTR [eax],0x80fe5584
  434c6c:	int    0xd6
  434c6e:	test   DWORD PTR [eax],0x81f10474
  434c74:	mov    edx,esi
  434c76:	test   DWORD PTR [eax],0x80fe5544
  434c7c:	fwait
  434c7d:	(bad)  
  434c7e:	test   DWORD PTR [eax],0xc1bf3c34
  434c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c85:	scas   eax,DWORD PTR es:[edi]
  434c86:	pop    eax
  434c87:	or     eax,DWORD PTR [ebp+0x38c254ec]
  434c8d:	dec    DWORD PTR [ebp-0x75]
  434c90:	mov    eax,ds:0x91f67eb3
  434c95:	mov    ebp,0xe9054686
  434c9a:	push   esi
  434c9b:	pop    ebx
  434c9c:	add    BYTE PTR [eax],al
  434c9e:	leave  
  434c9f:	les    ecx,FWORD PTR [eax+eax*1]
  434ca2:	popf   
  434ca3:	sub    bl,cl
  434ca5:	adc    BYTE PTR [esi-0x18],ch
  434ca8:	js     0x434c7f
  434caa:	imul   edx,edi,0xa9c1a472
  434cb0:	std    
  434cb1:	call   FWORD PTR [ebp-0x61fd705c]
  434cb7:	popa   
  434cb8:	ds std 
  434cba:	aad    0xef
  434cbc:	dec    eax
  434cbd:	repz sbb al,0x62
  434cc0:	int    0xf9
  434cc2:	popf   
  434cc3:	test   eax,0x821c0253
  434cc8:	int    0xf9
  434cca:	popf   
  434ccb:	test   eax,0xa41d6f85
  434cd0:	jge    0x434cc3
  434cd2:	mov    edx,0x2609da69
  434cd7:	outs   dx,BYTE PTR ds:[esi]
  434cd8:	mov    ebp,0xc21499e0
  434cdd:	std    
  434cde:	arpl   WORD PTR [edx-0x42],di
  434ce1:	loopne 0x434c90
  434ce3:	jo     0x434ce1
  434ce5:	mov    esi,0xcc366d6
  434cea:	popf   
  434ceb:	sub    cl,bl
  434ced:	mov    al,0x90
  434cef:	stos   DWORD PTR es:[edi],eax
  434cf0:	std    
  434cf1:	or     BYTE PTR [edi],bl
  434cf3:	push   ds
  434cf4:	add    al,0x0
  434cf6:	popf   
  434cf7:	xor    edx,DWORD PTR [edi-0x2f3e3c59]
  434cfd:	fstp   QWORD PTR [esi+edx*1-0x5]
  434d01:	xchg   BYTE PTR [eax],al
  434d03:	add    al,ch
  434d05:	lahf   
  434d06:	jle    0x434ced
  434d08:	in     eax,dx
  434d09:	scas   al,BYTE PTR es:[edi]
  434d0a:	std    
  434d0b:	push   ebp
  434d0d:	fs (bad) 
  434d0f:	call   FWORD PTR [ebp-0x62db9fda]
  434d15:	mov    al,ds:0xe59e128f
  434d1a:	div    BYTE PTR [ecx+0x4e8026b]
  434d20:	adc    al,BYTE PTR [esi]
  434d22:	lods   eax,DWORD PTR ds:[esi]
  434d23:	clc    
  434d24:	dec    esp
  434d25:	push   ecx
  434d26:	in     eax,0x4
  434d28:	repnz add eax,0x512cf89d
  434d2e:	out    0x4,al
  434d30:	repnz add eax,0x512cf8ad
  434d36:	jmp    0x434d3c
  434d38:	rol    BYTE PTR ds:0x510cf89d,cl
  434d3e:	in     al,dx
  434d3f:	add    al,0xd2
  434d41:	add    eax,0x510cf8ad
  434d46:	jmp    0x9d48ff4f
  434d4b:	clc    
  434d4c:	in     al,dx
  434d4d:	push   eax
  434d4e:	jmp    0xecf8:0xad05b204
  434d55:	push   eax
  434d56:	fild   WORD PTR [edx+edx*4]
  434d59:	add    eax,0x504cf89d
  434d5e:	lock add al,0x92
  434d61:	add    eax,0x504cf82d
  434d66:	fld    QWORD PTR [eax+eax*1]
  434d69:	add    BYTE PTR [edx+0x5],dh
  434d6c:	sbb    eax,0xee502cf8
  434d71:	add    al,0x72
  434d73:	add    eax,0x502cf82d
  434d78:	jecxz  0x434d7e
  434d7a:	push   edx
  434d7b:	add    eax,0x500cf81d
  434d80:	hlt    
  434d81:	add    al,0x52
  434d83:	add    eax,0x500cf82d
  434d88:	loope  0x434d8e
  434d8a:	xor    al,BYTE PTR ds:0x4fecf81d
  434d90:	repnz add al,0x32
  434d93:	add    eax,0x852a042d
  434d98:	add    BYTE PTR [edi],ch
  434d9a:	push   cs
  434d9b:	inc    ecx
  434d9c:	or     DWORD PTR [ebp+ebp*2-0x45],esp
  434da0:	stc    
  434da1:	out    0x19,al
  434da3:	sub    DWORD PTR [eax-0x204ce11a],eax
  434da9:	test   al,0xd7
  434dab:	or     ah,BYTE PTR [edi-0x45]
  434dae:	jmp    0xb8c0:0x9ec6fab8
  434db5:	cmp    BYTE PTR [ecx],bl
  434db7:	add    eax,DWORD PTR [eax-0x19870542]
  434dbd:	fidiv  WORD PTR [ecx-0x38]
  434dc0:	or     ecx,ebp
  434dc2:	jecxz  0x434d7e
  434dc4:	std    
  434dc5:	mov    ds:0xe60c4cda,al
  434dca:	sbb    eax,0x8ef8ef
  434dcf:	add    dl,bl
  434dd1:	test   ch,dl
  434dd3:	imul   BYTE PTR [edx]
  434dd5:	leave  
  434dd6:	add    cl,ch
  434dd8:	sahf   
  434dd9:	aaa    
  434dda:	cmc    
  434ddb:	fst    DWORD PTR [ebx-0x61166cca]
  434de1:	add    al,BYTE PTR [ebp+0x4ab602a]
  434de7:	ins    BYTE PTR es:[edi],dx
  434de8:	std    
  434de9:	fdivp  st(7),st
  434deb:	in     eax,0x28
  434ded:	adc    eax,0x726a22fd
  434df2:	push   edx
  434df3:	call   0x3340fd97
  434df8:	push   0x72
  434dfa:	push   edx
  434dfb:	jmp    0x434d9c
  434dfd:	scas   eax,DWORD PTR es:[edi]
  434dfe:	std    
  434dff:	and    cl,BYTE PTR [edx+0x72]
  434e02:	push   edx
  434e03:	jmp    0x724a:0x32fdaf9f
  434e0a:	push   edx
  434e0b:	in     eax,dx
  434e0c:	lahf   
  434e0d:	scas   eax,DWORD PTR es:[edi]
  434e0e:	std    
  434e0f:	and    ch,BYTE PTR [edx]
  434e11:	jb     0x434e65
  434e13:	add    BYTE PTR [ecx],bh
  434e15:	add    eax,0xaf6e03f1
  434e1a:	scas   eax,DWORD PTR es:[edi]
  434e1b:	push   esi
  434e1c:	or     al,BYTE PTR ds:0xafbe03f1
  434e22:	scas   eax,DWORD PTR es:[edi]
  434e23:	push   esi
  434e24:	sti    
  434e25:	add    al,0xf1
  434e27:	add    ecx,DWORD PTR [esi-0x4f]
  434e2a:	scas   eax,DWORD PTR es:[edi]
  434e2b:	push   esi
  434e2c:	cld    
  434e2d:	add    al,0xf1
  434e2f:	add    edi,DWORD PTR [esi]
  434e31:	mov    cl,0xaf
  434e33:	push   esi
  434e34:	add    BYTE PTR [eax],al
  434e36:	in     eax,dx
  434e37:	add    al,0xf1
  434e39:	add    ebp,DWORD PTR [esi]
  434e3b:	mov    cl,0xaf
  434e3d:	push   esi
  434e3e:	mov    esi,0xfe03f104
  434e43:	mov    al,0xaf
  434e45:	push   esi
  434e46:	iret   
  434e47:	add    al,0xf1
  434e49:	add    ecx,DWORD PTR [esi]
  434e4b:	mov    cl,0xaf
  434e4d:	push   esi
  434e4e:	rol    BYTE PTR [ecx+esi*8],0x3
  434e52:	(bad)  
  434e53:	mov    al,0xaf
  434e55:	push   esi
  434e56:	mov    cl,0x4
  434e58:	icebp  
  434e59:	add    ebp,esi
  434e5b:	mov    al,0xaf
  434e5d:	push   esi
  434e5e:	add    BYTE PTR [ecx+esi*8],0x3
  434e62:	ds mov al,0xaf
  434e65:	push   esi
  434e66:	xchg   ebx,eax
  434e67:	add    al,0xf1
  434e69:	add    ecx,esi
  434e6b:	test   bl,ah
  434e6d:	adc    BYTE PTR [edi+0x74c67bc6],al
  434e73:	sti    
  434e74:	push   es
  434e75:	test   DWORD PTR [eax],ebp
  434e77:	shl    bh,0xff
  434e7a:	stc    
  434e7b:	ins    BYTE PTR es:[edi],dx
  434e7c:	je     0x434e89
  434e7e:	inc    ebx
  434e7f:	test   esi,edi
  434e81:	add    bh,BYTE PTR [ebp+esi*8-0x6]
  434e85:	clc    
  434e86:	rsqrtps xmm5,xmm5
  434e89:	mov    eax,0x7fff8325
  434e8e:	popf   
  434e8f:	sbb    ah,ah
  434e91:	mov    edi,0xce5cd847
  434e96:	call   0x9e00:0xf9c2a9
  434e9d:	repz test BYTE PTR [edi+0x1d],ch
  434ea1:	test   al,0x7d
  434ea3:	icebp  
  434ea4:	cli    
  434ea5:	jmp    0x7bb75880
  434eaa:	repz inc DWORD PTR [ebx]
  434ead:	fdivr  st,st(7)
  434eaf:	cmc    
  434eb0:	es push 0xb8fdbf22
  434eb6:	and    al,0x5
  434eb8:	fsubr  st(3),st
  434eba:	and    BYTE PTR [esi-0x334e566f],bh
  434ec0:	jmp    0xcb31c5db
  434ec5:	cwde   
  434ec6:	jns    0x434eba
  434ec8:	push   ecx
  434ec9:	(bad)  
  434eca:	jb     0x434e70
  434ecc:	jns    0x434e77
  434ece:	std    
  434ecf:	call   FWORD PTR [ebp+0x2efdbd97]
  434ed5:	mov    dl,0xf4
  434ed7:	mov    cl,0x8c
  434ed9:	jl     0x434e88
  434edb:	jg     0x434e9c
  434edd:	aaa    
  434ede:	add    al,0x0
  434ee0:	popf   
  434ee1:	push   0xffffffdc
  434ee3:	or     dh,cl
  434ee5:	lahf   
  434ee6:	push   0x38
  434ee8:	mov    esi,0xd33efd6b
  434eed:	into   
  434eee:	fisttp WORD PTR [ebp-0x2e]
  434ef1:	sub    dl,al
  434ef3:	and    BYTE PTR [edx+0x6afdf729],ah
  434ef9:	lods   al,BYTE PTR ds:[esi]
  434efa:	js     0x434ef6
  434efc:	pop    esp
  434efd:	inc    ebp
  434efe:	stc    
  434eff:	test   BYTE PTR [eax],al
  434f01:	add    BYTE PTR [edx-0x47],bl
  434f04:	inc    BYTE PTR [ebp+ebp*2+0x1610d5eb]
  434f0b:	add    edi,DWORD PTR [edi]
  434f0d:	ret    
  434f0e:	cmp    BYTE PTR [ebx],cl
  434f10:	push   0xe70334e1
  434f15:	add    esi,DWORD PTR [edx-0x62fbf560]
  434f1b:	add    ch,BYTE PTR [esi-0x10]
  434f1e:	psubq  mm0,mm1
  434f21:	inc    ebx
  434f22:	popf   
  434f23:	icebp  
  434f24:	fisub  DWORD PTR [esi-0x2b]
  434f27:	jmp    0xdb6352d2
  434f2c:	test   al,0xd8
  434f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f2f:	icebp  
  434f30:	repnz data16 mov ch,0xe1
  434f34:	es add al,0xbe
  434f37:	mov    ch,0xe7
  434f39:	add    ebx,DWORD PTR [ebp-0x5a81250f]
  434f3f:	in     eax,0x26
  434f41:	add    al,0x88
  434f43:	push   ebx
  434f44:	jmp    0x434fbe
  434f46:	adc    eax,esp
  434f48:	mov    edi,0xe7b57ff3
  434f4d:	add    ebx,DWORD PTR [ebp+0x757ee389]
  434f53:	frstor [esi]
  434f55:	add    al,0x18
  434f57:	fldcw  WORD PTR [eax-0x797c6a28]
  434f5d:	les    ebx,FWORD PTR [ebp-0x5eef18fe]
  434f63:	xchg   edi,eax
  434f64:	scas   eax,DWORD PTR es:[edi]
  434f65:	sbb    BYTE PTR [eax],al
  434f67:	add    ch,bl
  434f69:	add    bl,BYTE PTR [esi-0x57]
  434f6c:	dec    edx
  434f6d:	test   eax,0x979910ff
  434f72:	pop    ds
  434f73:	and    ebp,ebx
  434f75:	add    ch,BYTE PTR [eax-0x1f]
  434f78:	je     0x434f7c
  434f7a:	out    0x3,eax
  434f7c:	mov    eax,0xb40b5bfe
  434f81:	inc    edx
  434f82:	out    0x10,eax
  434f84:	call   0xe675:0xe62000a
  434f8b:	fld    st(5)
  434f8d:	fidivr DWORD PTR [edi-0x22cbb9ee]
  434f93:	push   ds
  434f94:	sahf   
  434f95:	add    al,BYTE PTR [eax]
  434f97:	push   0xe900bb3c
  434f9c:	sahf   
  434f9d:	jg     0x434fb3
  434f9f:	pop    esp
  434fa0:	xchg   esi,eax
  434fa1:	jecxz  0x434fe2
  434fa3:	jmp    0xb1de5e55
  434fa8:	mov    ch,0x42
  434faa:	add    BYTE PTR [edx+0x36],ah
  434fad:	jne    0x434f94
  434faf:	add    DWORD PTR [edx],ecx
  434fb1:	adc    DWORD PTR [ebx-0xafddf],ebx
  434fb7:	or     ebx,esi
  434fb9:	add    DWORD PTR [eax],eax
  434fbb:	jmp    0x1c660b3
  434fc0:	out    dx,al
  434fc1:	hlt    
  434fc2:	(bad)  
  434fc3:	stc    
  434fc4:	jno    0x434fcc
  434fc6:	test   DWORD PTR [ebx+0x410a9d8],ebp
  434fcc:	add    BYTE PTR [eax],al
  434fce:	fiadd  WORD PTR [ecx]
  434fd0:	add    cl,ch
  434fd2:	adc    edi,esi
  434fd4:	and    cl,0xc7
  434fd7:	hlt    
  434fd8:	jmp    DWORD PTR [ecx-0x2d]
  434fdb:	je     0x434fc2
  434fdd:	loope  0x435000
  434fdf:	xlat   BYTE PTR ds:[ebx]
  434fe0:	stc    
  434fe1:	jmp    0xe5705284
  434fe6:	cmp    eax,0x992924fb
  434feb:	jge    0x434fc3
  434fed:	test   al,0x3a
  434fef:	sbb    ebp,DWORD PTR ds:0x1cfb3ded
  434ff5:	test   eax,0x56de339e
  434ffa:	cdq    
  434ffb:	add    al,BYTE PTR [eax]
  434ffd:	sbb    dl,BYTE PTR [ebp-0x74ffc771]
  435003:	add    BYTE PTR ds:[ebx],dh
  435006:	add    eax,0x85d08310
  43500b:	adc    BYTE PTR fs:[ebx+0x8e3bdac],cl
  435012:	mov    ch,0x5c
  435014:	test   DWORD PTR [eax],0x14830044
  43501a:	mov    cl,0xb6
  43501c:	and    BYTE PTR [eax+0x34],al
  43501f:	jg     0x434ffc
  435021:	push   DWORD PTR [eax+eax*1]
  435024:	add    BYTE PTR [ebx],dh
  435026:	lock bound edi,QWORD PTR [eax]
  435029:	sub    eax,DWORD PTR [eax+eax*1-0x7d]
  43502d:	fdiv   DWORD PTR [ebp+0x331863]
  435033:	add    BYTE PTR [eax],al
  435035:	arpl   WORD PTR [eax],di
  435037:	and    eax,esp
  435039:	(bad)  
  43503a:	sbb    al,0xff
  43503c:	add    al,0x0
  43503e:	add    BYTE PTR [ebx],dh
  435040:	lock mov bh,BYTE PTR [eax]
  435043:	das    
  435044:	mov    ah,0xfe
  435046:	sub    dl,BYTE PTR [ecx-0x10]
  435049:	test   BYTE PTR [edx+0x1d0fdcc1],bh
  43504f:	push   DWORD PTR [edi+edi*8-0x754f7501]
  435056:	cmp    BYTE PTR [edi],ah
  435058:	test   dh,bh
  43505a:	sbb    dl,0x5
  43505d:	or     BYTE PTR gs:[ecx+0xc117],al
  435064:	mov    ah,0xac
  435066:	std    
  435067:	pushf  
  435068:	pop    esp
  435069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43506a:	cmp    DWORD PTR [eax],eax
  43506c:	call   ebp
  43506e:	mov    ecx,0xfdac6ceb
  435073:	pushf  
  435074:	mov    esp,0x500399b
  435079:	pop    esi
  43507a:	test   DWORD PTR [eax],0x2cfda99d
  435080:	mov    eax,ds:0xdd28f52e
  435085:	test   eax,0xb87dbf82
  43508a:	inc    esp
  43508b:	clc    
  43508c:	push   ds
  43508d:	cmp    ebx,ebp
  43508f:	test   BYTE PTR [ebp+0x20],ch
  435092:	aad    0xbf
  435094:	aaa    
  435095:	mov    ecx,0xe5c4
  43509a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43509b:	sub    ah,BYTE PTR [ebx-0x2566207]
  4350a1:	test   BYTE PTR [ecx-0x22df0ad2],dl
  4350a7:	test   eax,0xa91add84
  4350ac:	std    
  4350ad:	dec    esi
  4350af:	aad    0xa0
  4350b1:	cmp    BYTE PTR [esi-0x1a7b0297],dh
  4350b7:	imul   ebp,DWORD PTR [ebx-0x655251e8],0x3e9be38
  4350c1:	and    ebp,edx
  4350c3:	test   al,0xfd
  4350c5:	jmp    FWORD PTR [esi-0x75c77d2b]
  4350cb:	jmp    0x6daf7dd3
  4350d0:	mov    edi,DWORD PTR [esi+0x2314c0dc]
  4350d6:	ret    0xfda8
  4350d9:	jmp    DWORD PTR [esi]
  4350db:	popf   
  4350dc:	cmp    BYTE PTR [eax],0x7a
  4350df:	jmp    0x6a0ad5e7
  4350e4:	stos   DWORD PTR es:[edi],eax
  4350e5:	or     BYTE PTR [eax+ecx*4],bl
  4350e8:	mov    edi,0xf49b9d00
  4350ed:	add    esi,DWORD PTR [eax]
  4350ef:	je     0x4350dd
  4350f1:	aas    
  4350f2:	popf   
  4350f3:	and    al,0xda
  4350f5:	mov    edi,0xf4ff0376
  4350fa:	sahf   
  4350fb:	(bad)  
  4350fc:	pop    ds
  4350fd:	in     eax,0x0
  4350ff:	add    BYTE PTR [edx+0x64a66802],dh
  435105:	add    esp,edi
  435107:	add    esi,DWORD PTR [eax-0x7a03a3fa]
  43510d:	inc    edx
  43510e:	out    0x50,eax
  435110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435111:	xchg   DWORD PTR [ebx],esi
  435113:	mov    edi,0xc266b244
  435118:	cdq    
  435119:	xor    al,0xb7
  43511b:	mov    WORD PTR [edi-0x3c],cs
  43511e:	or     eax,0xd6b21806
  435123:	add    ch,BYTE PTR [eax+0x258ce3c3]
  435129:	les    edx,FWORD PTR [edx]
  43512b:	adc    al,0x9a
  43512d:	test   eax,0x29d03fa
  435132:	pop    esi
  435133:	add    BYTE PTR [esi-0x15],al
  435136:	rol    DWORD PTR [ebx-0x63],0x7d
  43513a:	mov    edi,0x67fb00c2
  43513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435140:	hlt    
  435141:	add    ah,bh
  435143:	add    edi,DWORD PTR [eax-0x46049412]
  435149:	inc    edx
  43514a:	out    0x8c,eax
  43514c:	cmc    
  43514d:	ret    
  43514e:	into   
  43514f:	sbb    eax,DWORD PTR [eax-0x5604ac12]
  435155:	inc    edx
  435156:	out    0xe6,eax
  435158:	lds    eax,FWORD PTR [edx]
  43515a:	out    0x3,eax
  43515c:	mov    dh,ch
  43515e:	arpl   bx,di
  435160:	test   DWORD PTR [edx-0x19],eax
  435163:	test   BYTE PTR [eax],al
  435165:	add    BYTE PTR [edi-0x2372e2fa],dh
  43516b:	aaa    
  43516c:	cmp    ah,BYTE PTR [eax-0x10]
  43516f:	xchg   DWORD PTR [ecx+0x37],esi
  435172:	stos   DWORD PTR es:[edi],eax
  435173:	xchg   edx,eax
  435174:	add    dh,ah
  435176:	add    al,0x2
  435178:	sub    eax,0xf9d01f99
  43517d:	jmp    0x52025420
  435182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435183:	fild   WORD PTR [ebx]
  435185:	jl     0x4351ed
  435187:	push   cs
  435188:	inc    eax
  435189:	jmp    0x4eb68e6d
  43518e:	adc    eax,0x622a5ad2
  435193:	mov    esi,0x9e199ccc
  435198:	test   DWORD PTR [edx+edx*4-0x5b63387b],ebx
  43519f:	fistp  QWORD PTR [edi-0x1a744]
  4351a5:	popa   
  4351a6:	rcl    DWORD PTR [edx],cl
  4351a8:	test   DWORD PTR [esi+edx*4-0x22fbdc66],esp
  4351af:	stos   BYTE PTR es:[edi],al
  4351b0:	pop    ebx
  4351b1:	sub    esp,DWORD PTR [edx+0x659ccc02]
  4351b7:	push   esp
  4351b8:	dec    ebp
  4351b9:	push   0x32
  4351bb:	out    0x84,al
  4351bd:	cmp    eax,0x2d84f905
  4351c2:	add    eax,0xa92b84ed
  4351c7:	xchg   DWORD PTR [esi-0x66ffffa3],edx
  4351cd:	add    al,BYTE PTR [eax]
  4351cf:	add    bl,dh
  4351d1:	xchg   BYTE PTR [esi],bh
  4351d3:	cmc    
  4351d4:	daa    
  4351d5:	pop    eax
  4351d6:	jl     0x43520d
  4351d8:	sahf   
  4351d9:	jno    0x4351c0
  4351db:	jmp    0x435234
  4351dd:	jno    0x4351bc
  4351df:	stc    
  4351e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351e1:	retf   0xfd87
  4351e4:	mov    edx,0xa1797e85
  4351e9:	add    al,BYTE PTR [eax]
  4351eb:	bound  eax,QWORD PTR [edi+0x36]
  4351ee:	xor    eax,0xfa433c00
  4351f3:	mov    bh,BYTE PTR [esi+edi*2]
  4351f6:	pop    esp
  4351f7:	and    al,0x6c
  4351f9:	jge    0x435265
  4351fb:	cmp    ch,bh
  4351fd:	jmp    0x8d6b:0xdcef0423
  435204:	push   eax
  435205:	stos   DWORD PTR es:[edi],eax
  435206:	stc    
  435207:	mov    BYTE PTR [eax-0x58],dl
  43520a:	sbb    DWORD PTR [ebx-0x7c278845],ecx
  435210:	in     al,0x3
  435212:	add    DWORD PTR [eax+ebx*4+0xa],0xb1a04283
  43521a:	inc    DWORD PTR [eax]
  43521c:	xor    al,0x4
  43521e:	and    ebp,eax
  435220:	add    eax,DWORD PTR [edx]
  435222:	sub    ebp,ebp
  435224:	scas   eax,DWORD PTR es:[edi]
  435225:	inc    esp
  435226:	js     0x4351b1
  435228:	clc    
  435229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43522a:	adc    eax,0x747d8403
  43522f:	and    al,0x0
  435231:	add    BYTE PTR [ecx+eax*1],cl
  435234:	scas   eax,DWORD PTR es:[edi]
  435235:	pop    ds
  435236:	lea    esp,[edx]
  435238:	and    al,0x10
  43523a:	add    edi,DWORD PTR [ecx]
  43523c:	pop    esp
  43523d:	cmp    bl,dh
  43523f:	jle    0x43529d
  435241:	and    al,0xf0
  435243:	jl     0x4352b7
  435245:	inc    eax
  435246:	outs   dx,DWORD PTR ds:[esi]
  435247:	pop    ss
  435248:	and    al,0xeb
  43524a:	icebp  
  43524b:	xchg   edx,eax
  43524c:	inc    ecx
  43524d:	add    BYTE PTR [edi-0x2f48f844],dl
  435253:	inc    eax
  435254:	xor    ecx,ebp
  435256:	ret    
  435257:	test   eax,esp
  435259:	add    BYTE PTR [ebx+eax*1+0x3b4ea79],dh
  435260:	stc    
  435261:	push   DWORD PTR [ebx-0x3bff2b85]
  435267:	add    eax,DWORD PTR [edi]
  435269:	mov    bh,0x9d
  43526b:	(bad)  
  43526d:	clc    
  43526e:	pop    sp
  435270:	cmp    bl,bl
  435272:	es fucom st(7)
  435275:	add    esp,DWORD PTR [edx-0x3800ff08]
  43527b:	fucom  st(7)
  43527d:	invd   
  43527f:	xchg   ecx,eax
  435280:	mov    WORD PTR [ecx+eax*8],ss
  435283:	xor    al,0x31
  435285:	and    al,0x99
  435287:	xor    al,0x39
  435289:	and    al,0xbd
  43528b:	pushf  
  43528c:	mov    ah,0x85
  43528e:	fld    DWORD PTR ds:0x4755b618
  435294:	mov    edx,0x200000f9
  435299:	sub    eax,0x999c07f5
  43529e:	std    
  43529f:	mov    cl,BYTE PTR [ecx]
  4352a1:	test   eax,0x993aff05
  4352a6:	xchg   BYTE PTR [edi+ebp*2],al
  4352a9:	int3   
  4352aa:	add    DWORD PTR [esi],esi
  4352ac:	mov    al,0xad
  4352ae:	xchg   BYTE PTR [edi+ebp*2-0x5b],al
  4352b2:	out    dx,al
  4352b3:	inc    ebx
  4352b4:	xlat   BYTE PTR ds:[ebx]
  4352b5:	popf   
  4352b6:	cmp    BYTE PTR [ecx],al
  4352b8:	push   ds
  4352b9:	fild   DWORD PTR [ebx+esi*2]
  4352bc:	hlt    
  4352bd:	add    esi,DWORD PTR [edi*2-0x6935b21]
  4352c4:	cli    
  4352c5:	cwde   
  4352c6:	std    
  4352c7:	jb     0x435264
  4352c9:	sbb    al,0xbe
  4352cb:	(bad)  
  4352cc:	ffree  st(0)
  4352ce:	adc    al,0x2c
  4352d0:	pushf  
  4352d1:	sbb    al,0xce
  4352d3:	add    BYTE PTR [eax],ch
  4352d5:	popf   
  4352d6:	test   DWORD PTR [ecx+edx*2-0x1ddb1bfb],0xc2feffb5
  4352e1:	cwde   
  4352e2:	cmp    cl,BYTE PTR [esi+eiz*1+0x2]
  4352e6:	cmp    ebp,eax
  4352e8:	push   0x7b
  4352ea:	cmp    ebp,eax
  4352ec:	xchg   bl,ch
  4352ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4352ef:	cmp    eax,0xe8137b90
  4352f4:	mov    ds:0x1843fd79,al
  4352f9:	dec    edi
  4352fa:	ret    
  4352fb:	sldt   WORD PTR [eax]
  4352fe:	and    BYTE PTR [edi],dl
  435300:	retf   
  435301:	stos   BYTE PTR es:[edi],al
  435302:	xlat   BYTE PTR ds:[ebx]
  435303:	lods   eax,DWORD PTR ds:[esi]
  435304:	push   0xffffffbd
  435306:	and    BYTE PTR [edi+0xb],cl
  435309:	sbb    al,0x1a
  43530b:	inc    edi
  43530c:	add    esp,DWORD PTR [eax]
  43530e:	and    bh,BYTE PTR [ecx]
  435310:	xlat   BYTE PTR ds:[ebx]
  435311:	clc    
  435312:	and    DWORD PTR [eax],esi
  435314:	cld    
  435315:	mov    cl,dl
  435317:	out    0xea,al
  435319:	add    BYTE PTR [ebp+0x7c],cl
  43531c:	mov    bl,0xe7
  43531e:	mov    ds:0x856079fd,al
  435323:	lods   eax,DWORD PTR ds:[esi]
  435324:	pop    esi
  435325:	cmp    bl,ch
  435327:	jnp    0x4352ec
  435329:	out    0xa6,eax
  43532b:	jns    0x435320
  43532d:	out    0x43,eax
  43532f:	in     al,0x11
  435331:	mov    ebp,0xe7b37a24
  435336:	rol    ch,cl
  435338:	stos   DWORD PTR es:[edi],eax
  435339:	out    0xb6,eax
  43533b:	add    al,ch
  43533d:	add    ebx,DWORD PTR [ebp+0x18339d7b]
  435343:	push   edi
  435344:	ret    
  435345:	sti    
  435346:	and    DWORD PTR [edi+0xb],ecx
  435349:	and    BYTE PTR [eax],bl
  43534b:	inc    ecx
  43534c:	push   ebx
  43534d:	stc    
  43534e:	shr    BYTE PTR ds:0x822088e5,cl
  435354:	mov    ds:0x224c71e7,eax
  435359:	pop    edi
  43535a:	adc    BYTE PTR [eax],al
  43535c:	in     eax,dx
  43535d:	and    bh,BYTE PTR [eax]
  43535f:	pop    ds
  435360:	add    bh,bh
  435362:	add    BYTE PTR [eax],al
  435364:	(bad)  
  435365:	repz pop ds
  435367:	xchg   BYTE PTR ss:[esi],dh
  43536a:	push   0x6d4d83c9
  43536f:	or     al,0xad
  435371:	or     eax,0x25651969
  435376:	imul   eax,DWORD PTR [eax],0xffffffcc
  435379:	and    DWORD PTR [ecx+ecx*8-0x41],esp
  43537d:	pop    ds
  43537e:	ins    DWORD PTR es:[edi],dx
  43537f:	add    al,0xba
  435381:	dec    esp
  435382:	ins    BYTE PTR es:[edi],dx
  435383:	lock jle 0x4353d4
  435386:	imul   eax,DWORD PTR ds:0xdb61e2c2,0xab2019c1
  435390:	lods   al,BYTE PTR ds:[esi]
  435391:	and    eax,0x3f7ec75f
  435396:	pop    edi
  435397:	rcl    BYTE PTR [edx+0x39156e21],0x32
  43539e:	outs   dx,BYTE PTR ds:[esi]
  43539f:	rcl    BYTE PTR [edx+0x3ec76336],1
  4353a5:	fdiv   QWORD PTR [esi]
  4353a7:	lock ss clc 
  4353aa:	add    eax,0xccbe622a
  4353af:	sub    eax,0x64ccbe5a
  4353b4:	sbb    al,0x96
  4353b6:	add    cl,ch
  4353b8:	sahf   
  4353b9:	jne    0x4353d5
  4353bb:	call   0x6c95565e
  4353c0:	ret    0xffe6
  4353c3:	mov    ecx,0xb9872048
  4353c8:	add    BYTE PTR [eax],al
  4353ca:	sbb    eax,0xac3004c2
  4353cf:	mov    cl,0x8b
  4353d1:	imul   ebx,DWORD PTR [ecx],0x5
  4353d4:	add    cl,ch
  4353d6:	popa   
  4353d7:	or     BYTE PTR [eax],al
  4353d9:	jmp    0x135337c
  4353de:	bound  edi,QWORD PTR [edi+0x30]
  4353e1:	xor    esp,0x1
  4353e4:	inc    ecx
  4353e5:	jne    0x4353e8
  4353e7:	jnp    0x435463
  4353e9:	jl     0x4353a9
  4353eb:	add    BYTE PTR [eax],al
  4353ed:	mov    ecx,0xb7
  4353f2:	cmp    edx,esp
  4353f4:	and    eax,DWORD PTR [eax]
  4353f6:	(bad)  
  4353f7:	jb     0x435457
  4353f9:	mov    DWORD PTR [ebp+eax*4-0x40],esi
  4353fd:	add    al,0xcd
  4353ff:	icebp  
  435400:	in     al,dx
  435401:	mov    eax,0x75
  435406:	xchg   edx,eax
  435407:	jge    0x435483
  435409:	xchg   esp,eax
  43540a:	add    BYTE PTR [eax],0x0
  43540d:	xor    eax,esp
  43540f:	jge    0x43548b
  435411:	lods   al,BYTE PTR ds:[esi]
  435412:	jb     0x435414
  435414:	add    BYTE PTR [ecx+0xe1ef6],cl
  43541a:	inc    esp
  43541b:	jg     0x435497
  43541d:	mov    al,0x72
  43541f:	add    BYTE PTR [eax],al
  435421:	mov    DWORD PTR [esi+0x34000e26],esi
  435427:	dec    edx
  435428:	mov    ebx,0xccba98cc
  43542d:	int3   
  43542e:	add    BYTE PTR [eax],al
  435430:	push   0x78ccccba
  435435:	mov    edx,0x7ce1cccc
  43543a:	in     al,dx
  43543b:	push   ecx
  43543c:	jg     0x4353d4
  43543e:	push   eax
  43543f:	adc    al,0x4
  435441:	add    BYTE PTR [ebx+0x56],cl
  435444:	(bad)  
  435445:	icebp  
  435446:	pop    es
  435447:	mov    ebp,DWORD PTR [eax+0x36]
  43544a:	pop    esp
  43544b:	or     eax,DWORD PTR [eax+eax*1]
  43544e:	test   DWORD PTR [edx+edx*4],ecx
  435451:	jge    0x4354a8
  435453:	cld    
  435454:	mov    edi,0x9d8f07bc
  435459:	jp     0x435458
  43545b:	call   FWORD PTR [ebp+0x984ef3e]
  435461:	xor    bl,BYTE PTR ds:0x8a999d05
  435467:	pushf  
  435468:	adc    eax,0x9d000916
  43546d:	int3   
  43546e:	outs   dx,BYTE PTR ds:[esi]
  43546f:	adc    al,0xea
  435471:	mov    ah,0x6e
  435473:	sbb    al,0xa
  435475:	add    al,0xf9
  435477:	int3   
  435478:	das    
  435479:	mov    dl,0x30
  43547b:	sbb    BYTE PTR [edi],ah
  43547d:	xor    eax,0x99a957ff
  435482:	std    
  435483:	test   BYTE PTR [ecx+0x31],dl
  435486:	push   ecx
  435487:	add    eax,0x93fb999d
  43548c:	mov    ds:0x9d001011,eax
  435491:	int3   
  435492:	add    al,0x3f
  435494:	add    BYTE PTR [eax],al
  435496:	push   ss
  435497:	xchg   ebp,eax
  435498:	test   DWORD PTR [esi+edx*4-0x67],ebx
  43549c:	std    
  43549d:	test   al,dh
  43549f:	cmp    eax,0x4ca9b106
  4354a4:	push   es
  4354a5:	mov    cl,0xa9
  4354a7:	xor    al,0x1f
  4354a9:	xor    eax,0x733d676e
  4354ae:	mov    fs,WORD PTR [eax]
  4354b0:	push   eax
  4354b1:	cld    
  4354b2:	daa    
  4354b3:	test   DWORD PTR [ebx],eax
  4354b5:	pop    eax
  4354b6:	xchg   ecx,eax
  4354b7:	cdq    
  4354b8:	std    
  4354b9:	xor    eax,0x14559b01
  4354be:	popf   
  4354bf:	cdq    
  4354c0:	das    
  4354c1:	sub    ah,BYTE PTR [esi]
  4354c3:	mov    es,WORD PTR ds:0x51495187
  4354c9:	add    eax,0x908a999d
  4354ce:	dec    ebp
  4354cf:	aad    0xfd
  4354d1:	jmp    DWORD PTR [esi]
  4354d3:	add    bl,al
  4354d5:	add    eax,0xc5478e2
  4354da:	test   al,0xb8
  4354dc:	push   ecx
  4354dd:	xchg   BYTE PTR [eax],ah
  4354df:	cmp    eax,0x72218bcb
  4354e4:	and    ecx,DWORD PTR ds:0x5d19029d
  4354ea:	sbb    BYTE PTR [ebp+0x5520c514],ah
  4354f0:	stos   DWORD PTR es:[edi],eax
  4354f1:	lea    esp,[esi-0x6]
  4354f4:	inc    eax
  4354f5:	mov    edx,DWORD PTR [ecx]
  4354f7:	jp     0x435534
  4354f9:	or     eax,0x29d0000
  4354fe:	lea    edi,cs:[esi+0x48]
  435502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435503:	mov    esi,DWORD PTR [ecx]
  435505:	jae    0x43552a
  435507:	or     eax,0x5d19029d
  43550c:	sbb    BYTE PTR [eax-0x48963aec],ah
  435512:	fwait
  435513:	enter  0xb761,0x33
  435517:	enter  0xb759,0x2b
  43551b:	enter  0xb751,0xbc
  43551f:	mov    WORD PTR [ecx-0x7a],cs
  435522:	cmp    ebp,esp
  435524:	sbb    DWORD PTR [ebx+ebp*8+0x54],edx
  435528:	and    BYTE PTR [esi+ebp*2],cl
  43552b:	dec    ebx
  43552c:	xchg   ebp,eax
  43552d:	jnp    0x4354cb
  43552f:	stos   DWORD PTR es:[edi],eax
  435530:	and    BYTE PTR [eax+eiz*2],dl
  435533:	dec    edi
  435534:	push   ecx
  435535:	jle    0x4354ef
  435537:	dec    esp
  435539:	jnp    0x4354ef
  43553b:	mov    ds:0x50df5418,eax
  435540:	and    BYTE PTR [edi+esi*8],ch
  435543:	hlt    
  435544:	fstp   TBYTE PTR [ebx-0x64]
  435547:	lahf   
  435548:	xchg   esp,eax
  435549:	jno    0x435563
  43554b:	(bad)  
  43554c:	fcmovnb st,st(3)
  43554e:	add    BYTE PTR [ebx],cl
  435550:	xchg   ecx,eax
  435551:	inc    ebp
  435553:	pusha  
  435554:	and    edi,esp
  435556:	add    al,0xe9
  435558:	sahf   
  435559:	or     DWORD PTR [eax+0x29029],0x26000060
  435563:	aas    
  435564:	add    eax,0x88819ee9
  435569:	xor    DWORD PTR [eax+0x16700002],ebx
  43556f:	aaa    
  435570:	add    eax,0x88819ee9
  435575:	sbb    DWORD PTR [eax+0x16700002],esp
  43557b:	dec    edi
  43557c:	add    eax,0x88819ee9
  435581:	xor    DWORD PTR [eax+0x26620002],ebp
  435587:	dec    esi
  435588:	adc    al,0xe9
  43558a:	sahf   
  43558b:	jg     0x435521
  43558d:	jno    0x435579
  43558f:	(bad)  
  435590:	(bad)  
  435591:	call   0x60a61607
  435596:	fidiv  DWORD PTR [edi-0x2]
  435599:	jno    0x4355b1
  43559b:	dec    esi
  43559c:	adc    al,0xe9
  43559e:	sahf   
  43559f:	xlat   BYTE PTR ds:[ebx]
  4355a0:	icebp  
  4355a1:	test   al,0x27
  4355a3:	dec    ebp
  4355a4:	fsub   DWORD PTR [eax-0x75]
  4355a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4355a8:	xchg   DWORD PTR [esi+eax*1-0x670308d7],edi
  4355af:	add    al,BYTE PTR [eax]
  4355b1:	out    0x23,al
  4355b3:	push   eax
  4355b4:	(bad)  
  4355b5:	call   0x71d7d358
  4355ba:	sar    bh,cl
  4355bc:	(bad)  
  4355bd:	call   0x5437aad9
  4355c2:	adc    esp,DWORD PTR [edi+0xe9f9]
  4355c8:	add    DWORD PTR [eax+0x7ccefffd],edi
  4355ce:	dec    ebp
  4355cf:	in     al,dx
  4355d0:	lea    eax,[eax-0x10]
  4355d3:	nop
  4355d4:	jg     0x435616
  4355d6:	hlt    
  4355d7:	mov    edx,ebp
  4355d9:	stc    
  4355da:	scas   al,BYTE PTR es:[edi]
  4355db:	dec    esp
  4355dc:	addr16 add al,0x7
  4355df:	mov    bh,0xb0
  4355e1:	jge    0x4355dd
  4355e3:	inc    eax
  4355e4:	scas   eax,DWORD PTR es:[edi]
  4355e5:	shl    DWORD PTR [esi+0x6],0x7a
  4355e9:	jge    0x4355b2
  4355eb:	mov    DWORD PTR [ecx+0x70895e66],ecx
  4355f1:	xchg   ebp,eax
  4355f2:	cli    
  4355f3:	cmp    bl,BYTE PTR [ecx+0x3f477756]
  4355f9:	jmp    0x4355de
  4355fb:	add    ax,WORD PTR [edx+0x4af3c48]
  435602:	add    BYTE PTR [ebx],dh
  435604:	cmp    ch,BYTE PTR [eax+edx*8-0x15828184]
  43560b:	sub    ecx,DWORD PTR [ebx]
  43560d:	jl     0x435684
  43560f:	loopne 0x435620
  435611:	mov    bl,0xb0
  435613:	btc    DWORD PTR [edx+0x12038c],ebp
  43561a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43561b:	iret   
  43561c:	jne    0x43569a
  43561e:	test   al,0x16
  435620:	je     0x435626
  435622:	or     DWORD PTR [ebp-0x70],0xffffff81
  435626:	shl    DWORD PTR [esp+edx*2+0x1],0xaf
  43562b:	push   esp
  43562c:	add    BYTE PTR [eax],al
  43562e:	in     eax,0x4
  435630:	sti    
  435631:	aad    0x33
  435633:	and    edi,ecx
  435635:	add    esp,edx
  435637:	sbb    cl,BYTE PTR [esi]
  435639:	add    BYTE PTR [ebp+edi*2+0x75],al
  43563d:	cld    
  43563e:	scas   eax,DWORD PTR es:[edi]
  43563f:	icebp  
  435640:	test   DWORD PTR [ebx-0xfba807],0x73a15e9d
  43564a:	and    DWORD PTR [edi],ebx
  43564c:	stos   BYTE PTR es:[edi],al
  43564d:	or     DWORD PTR [ecx],esp
  43564f:	(bad)  
  435650:	add    eax,DWORD PTR [eax]
  435652:	popf   
  435653:	push   ss
  435654:	js     0x4356ce
  435656:	mov    ecx,0x26fffda4
  43565b:	xchg   DWORD PTR [ecx+0x711c8347],esi
  435661:	dec    eax
  435662:	mov    eax,ds:0x9dfffdb4
  435667:	push   ds
  435668:	mov    DWORD PTR [eax-0x6f],ecx
  43566b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43566c:	std    
  43566d:	call   DWORD PTR [eax-0x36]
  435670:	mov    BYTE PTR [ecx+edi*2-0x62000267],ah
  435677:	sbb    al,0xa7
  435679:	(bad)  
  43567a:	gs aas 
  43567c:	jge    0x4356b4
  43567e:	popf   
  43567f:	add    eax,0x1e1e62aa
  435684:	inc    ebp
  435685:	cmp    ah,BYTE PTR [esi+0x54fdfd99]
  43568b:	js     0x43563f
  43568d:	add    BYTE PTR [ebp+0x9402f7],bl
  435693:	add    ch,dl
  435695:	gs push es
  435697:	add    BYTE PTR [ebp-0x639d38dc],bl
  43569d:	enter  0xea7e,0x9f
  4356a1:	push   ss
  4356a2:	stos   DWORD PTR es:[edi],eax
  4356a3:	jns    0x4356cf
  4356a5:	xor    al,0x50
  4356a7:	cld    
  4356a8:	and    bl,ch
  4356aa:	sub    BYTE PTR [ebx+0x24],ch
  4356ad:	mov    dh,0xa1
  4356af:	or     DWORD PTR [edx],edx
  4356b1:	add    BYTE PTR [ebx-0x4de1b685],cl
  4356b7:	je     0x43568a
  4356b9:	and    al,0x48
  4356bb:	lock and BYTE PTR ds:0x2965c85,ch
  4356c2:	out    0x3,eax
  4356c4:	push   ss
  4356c5:	mov    esp,edi
  4356c7:	add    ebx,DWORD PTR [ebp+0x11455e02]
  4356cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4356ce:	pushf  
  4356cf:	mov    bl,0x88
  4356d1:	cwde   
  4356d2:	jmp    0x435660
  4356d4:	mov    fs,WORD PTR [edx+0x270548be]
  4356da:	ret    0x2c06
  4356dd:	es pop esi
  4356df:	add    DWORD PTR [esi],edx
  4356e1:	outs   dx,BYTE PTR cs:[esi]
  4356e3:	add    ch,BYTE PTR [eax+0x201b53ac]
  4356e9:	int3   
  4356ea:	(bad)  
  4356eb:	aam    0x18
  4356ed:	stos   DWORD PTR es:[edi],eax
  4356ee:	pop    esi
  4356ef:	push   edi
  4356f0:	in     eax,0xf6
  4356f2:	jns    0x4356fc
  4356f4:	sbb    bh,dh
  4356f6:	mov    DWORD PTR [ebx+0x6eba0000],edi
  4356fc:	jg     0x43570c
  4356fe:	popf   
  4356ff:	add    al,BYTE PTR [ecx-0x75]
  435702:	(bad)  
  435703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435704:	xor    al,0xb0
  435706:	sbb    BYTE PTR ds:0xa30e8993,ah
  43570c:	ins    BYTE PTR es:[edi],dx
  43570d:	mov    ch,0xe
  43570f:	addr16 pop esi
  435711:	aaa    
  435712:	jns    0x435696
  435714:	xchg   edx,eax
  435715:	add    bl,bl
  435717:	jnp    0x435715
  435719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43571a:	out    dx,al
  43571b:	mov    WORD PTR [edx],ss
  43571d:	push   esi
  43571e:	enter  0x8479,0x57
  435722:	sub    BYTE PTR [edi-0x48ae37cd],dh
  435728:	sub    ecx,eax
  43572a:	imul   esi,DWORD PTR [edi-0x7dbe7744],0x4cd8143b
  435734:	call   0xec05:0x1f7a4a88
  43573b:	cmp    eax,0xb82deb00
  435740:	shl    DWORD PTR [esi+eiz*8-0x17d90655],0x7d
  435748:	inc    ebx
  435749:	sbb    DWORD PTR [edx],esp
  43574b:	cmp    eax,0xfecf6401
  435750:	sub    BYTE PTR [ecx],0xba
  435753:	cli    
  435754:	mov    dh,0x73
  435756:	cdq    
  435757:	add    al,BYTE PTR [eax]
  435759:	ins    BYTE PTR es:[edi],dx
  43575a:	mov    cl,0xa7
  43575c:	mov    cl,0xf6
  43575e:	add    BYTE PTR [eax],al
  435760:	sub    DWORD PTR [ebx],eax
  435762:	add    BYTE PTR [edi-0x1066c0e9],al
  435768:	arpl   di,cx
  43576a:	or     DWORD PTR [ecx+0x2e],esi
  43576d:	add    eax,DWORD PTR [eax]
  43576f:	jmp    0x2a461b91
  435774:	push   ss
  435775:	sub    bh,ah
  435777:	jb     0x435704
  435779:	cli    
  43577a:	xchg   BYTE PTR [ebp*8+0x25b95b7f],bl
  435781:	push   0xfbe50c85
  435786:	mov    al,0x2
  435788:	pop    edi
  435789:	out    dx,eax
  43578a:	into   
  43578b:	sbb    al,0x9d
  43578d:	out    dx,eax
  43578e:	mov    esp,0xd1efb31d
  435793:	or     al,0x97
  435795:	and    bh,bh
  435797:	pop    esp
  435798:	add    DWORD PTR [edi],esp
  43579a:	push   es
  43579b:	jmp    0x6c6cf73e
  4357a0:	pop    esi
  4357a1:	adc    dh,BYTE PTR cs:[edx-0xe8b5555]
  4357a8:	sub    BYTE PTR [ebx-0x36d997c],0xff
  4357af:	call   0x8dc50364
  4357b4:	xchg   esp,eax
  4357b5:	add    al,BYTE PTR [eax]
  4357b7:	add    bh,ch
  4357b9:	hlt    
  4357ba:	jp     0x4357b6
  4357bc:	cs out dx,al
  4357be:	add    BYTE PTR [esi+0x6b],ah
  4357c1:	ror    BYTE PTR es:[edx],0x0
  4357c5:	add    BYTE PTR [ecx+eax*1],dh
  4357c8:	jecxz  0x4357d1
  4357ca:	adc    ch,BYTE PTR [esi+0x7f]
  4357cd:	les    ecx,FWORD PTR [esi]
  4357cf:	add    DWORD PTR [eax],eax
  4357d1:	xor    edx,esi
  4357d3:	js     0x435812
  4357d5:	clc    
  4357d6:	or     edx,0x7b5d0a6d
  4357dc:	add    BYTE PTR [eax],al
  4357de:	add    al,0x7c
  4357e0:	push   0x3
  4357e2:	lahf   
  4357e3:	div    DWORD PTR [edx]
  4357e5:	ret    
  4357e6:	jno    0x4357e3
  4357e8:	mov    al,0x6
  4357ea:	hlt    
  4357eb:	add    BYTE PTR [eax],al
  4357ed:	lea    esi,[ebp+0x73]
  4357f0:	jecxz  0x4357fa
  4357f2:	sub    eax,0xb4fffff9
  4357f7:	sub    DWORD PTR [ecx-0x3],0x4fc3b37
  4357fe:	sti    
  4357ff:	inc    edx
  435800:	hlt    
  435801:	jne    0x435847
  435803:	push   ecx
  435804:	push   esi
  435805:	pop    ebx
  435806:	aas    
  435807:	pop    ebx
  435808:	push   ebp
  435809:	ret    
  43580a:	call   0x491024d0
  43580f:	ret    
  435810:	int3   
  435811:	int3   
  435812:	shl    DWORD PTR [ebx],1
  435814:	in     al,dx
  435815:	or     DWORD PTR [eax],0x13
  435818:	dec    ebx
  435819:	push   esi
  43581a:	(bad)  
  43581c:	pop    es
  43581d:	mov    bh,0x9a
  43581f:	cld    
  435820:	sub    dl,dl
  435822:	xchg   ebx,eax
  435823:	and    esi,ecx
  435825:	mov    ecx,0xfff762
  43582b:	add    bl,bh
  43582d:	outs   dx,DWORD PTR ds:[esi]
  43582e:	sbb    DWORD PTR [ebp-0x10],0x9d074281
  435835:	aam    0x46
  435837:	clc    
  435838:	mov    eax,ds:0x18fffd99
  43583d:	loope  0x435875
  43583f:	or     al,0xf4
  435841:	das    
  435842:	add    al,0x0
  435844:	popf   
  435845:	aam    0x46
  435847:	clc    
  435848:	sahf   
  435849:	cdq    
  43584a:	std    
  43584b:	call   FWORD PTR [eax]
  43584d:	(bad)  
  43584f:	xchg   eax,edx
  435851:	sahf   
  435852:	std    
  435853:	call   FWORD PTR [esi]
  435855:	aam    0x5
  435857:	inc    ecx
  435858:	adc    al,0x8f
  43585a:	lods   eax,DWORD PTR ds:[esi]
  43585b:	xchg   DWORD PTR [eax-0x50096ef],eax
  435861:	cdq    
  435862:	std    
  435863:	test   dl,dh
  435865:	and    BYTE PTR [edi],ch
  435867:	lock call 0x2c5:0x6884ecec
  43586f:	int    0x24
  435871:	dec    edi
  435872:	test   al,0x87
  435874:	push   eax
  435875:	lds    edi,FWORD PTR [ebx+edx*2-0x37]
  435879:	adc    bl,dl
  43587b:	jnp    0x435812
  43587d:	add    BYTE PTR [ebp+0x16d2109],dh
  435883:	add    BYTE PTR [ebp-0x6507a750],bl
  435889:	inc    esi
  43588a:	push   0x80999d00
  43588f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435890:	add    BYTE PTR [eax],al
  435892:	rcr    DWORD PTR [ecx-0x63620003],0x76
  435899:	mov    esp,0xfff9f34d
  43589e:	xor    BYTE PTR [eax],0x75
  4358a1:	mov    esp,0xb5fd9993
  4358a6:	lea    ebx,[ecx-0x73490003]
  4358ac:	jmp    0xc02:0xc402e3c5
  4358b3:	outs   dx,BYTE PTR ds:[esi]
  4358b4:	xchg   edi,eax
  4358b5:	das    
  4358b6:	fwait
  4358b7:	add    ah,bh
  4358b9:	sub    DWORD PTR [eax],esp
  4358bb:	int3   
  4358bc:	rcl    esi,0x63
  4358bf:	ja     0x435870
  4358c1:	sti    
  4358c2:	mov    esp,0x8f6b56f9
  4358c7:	add    ah,bh
  4358c9:	add    ch,bh
  4358cb:	mov    DWORD PTR [edi+0x19],ebp
  4358ce:	popf   
  4358cf:	add    ch,BYTE PTR [esi+0x53]
  4358d2:	mov    cl,0x7a
  4358d4:	sti    
  4358d5:	adc    al,0x14
  4358d7:	inc    edx
  4358d8:	sti    
  4358d9:	add    cl,BYTE PTR [edi-0x76]
  4358dc:	push   eax
  4358dd:	sbb    DWORD PTR [ebp-0x6ec491fe],ebx
  4358e3:	ja     0x43587c
  4358e5:	sti    
  4358e6:	sbb    al,BYTE PTR [esi]
  4358e8:	fdivr  DWORD PTR [esi+0xd]
  4358eb:	rol    WORD PTR [ebx],1
  4358ee:	popf   
  4358ef:	jno    0x4358e8
  4358f1:	ins    BYTE PTR es:[edi],dx
  4358f2:	fisub  DWORD PTR [edx+0x3e7]
  4358f8:	ror    BYTE PTR [edx-0x5],cl
  4358fb:	fucom  st(0)
  4358fd:	sbb    esi,DWORD PTR [esi-0x2c9e95e]
  435903:	mov    bl,0x3f
  435905:	jns    0x43597e
  435907:	ins    BYTE PTR es:[edi],dx
  435908:	pop    DWORD PTR [edx]
  43590a:	out    0x7c,eax
  43590c:	cs sahf 
  43590e:	mov    esi,0x7b773f18
  435913:	je     0x43592e
  435915:	or     eax,0xb5ff03e7
  43591a:	test   DWORD PTR [edx],ebp
  43591c:	mov    ds:0x9d1a4f72,al
  435921:	add    ah,dh
  435923:	rol    dl,0x3f
  435926:	jnp    0x4359a3
  435928:	and    eax,0x9edf005f
  43592d:	add    cl,BYTE PTR [ecx]
  43592f:	fs mov ah,0x9b
  435932:	stc    
  435933:	data16 adc al,BYTE PTR ss:[ecx+ebp*8]
  435938:	sahf   
  435939:	test   edx,esi
  43593b:	out    0x22,al
  43593d:	enter  0xe8ff,0x9e
  435941:	xlat   BYTE PTR ds:[ebx]
  435942:	jb     0x435999
  435944:	pushf  
  435945:	xchg   BYTE PTR [esi+0x9029ee9],ah
  43594b:	jle    0x43596a
  43594d:	push   ebx
  43594e:	jp     0x435933
  435950:	sahf   
  435951:	add    bh,BYTE PTR [ecx+0x29ef9]
  435957:	rol    BYTE PTR [edi-0x76],cl
  43595a:	dec    ebx
  43595b:	adc    DWORD PTR [eax],eax
  43595d:	add    BYTE PTR [eax-0x61084376],cl
  435963:	add    dh,BYTE PTR ds:0x92aaf36
  435969:	ss adc eax,0x9ee37c53
  43596f:	add    al,BYTE PTR [edi-0x32dafd6c]
  435975:	retf   
  435976:	pop    ecx
  435977:	dec    edx
  435978:	or     BYTE PTR [eax+0x5b],dh
  43597b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43597c:	(bad)  
  43597d:	loopne 0x4359ad
  43597f:	pop    ebx
  435980:	adc    ch,cl
  435982:	sahf   
  435983:	xchg   DWORD PTR [eax-0x23],edx
  435986:	cmp    BYTE PTR [edx+0x29ed7b8],al
  43598c:	mov    ch,ch
  43598e:	pop    DWORD PTR [edi+0x3a9fc543]
  435994:	adc    al,0x72
  435996:	(bad)  
  435997:	test   BYTE PTR [ecx+esi*1+0x50908791],0xa4
  43599f:	add    al,BYTE PTR [eax]
  4359a1:	popa   
  4359a2:	stos   BYTE PTR es:[edi],al
  4359a3:	or     eax,DWORD PTR [ebp+0xe31d400]
  4359a9:	add    BYTE PTR [esi+ebx*1+0x4d75ec75],al
  4359b0:	adc    al,0xb1
  4359b2:	inc    esp
  4359b3:	mov    edi,0x629766c3
  4359b8:	or     DWORD PTR [ebp-0x44],0x20
  4359bc:	push   esp
  4359bd:	or     ah,ah
  4359bf:	sbb    al,0x90
  4359c1:	mov    esp,0x54a0000
  4359c6:	add    BYTE PTR [ebx-0x76a18ee7],cl
  4359cc:	sbb    al,0x2d
  4359ce:	push   cs
  4359cf:	add    BYTE PTR [esi+edi*2],dh
  4359d2:	sbb    DWORD PTR [esi-0x41],esp
  4359d5:	xor    DWORD PTR [eax+0x50e7c],esi
  4359db:	data16 xlat BYTE PTR ds:[ebx]
  4359dd:	push   0xffffff83
  4359df:	mov    BYTE PTR [eax-0x5],dh
  4359e2:	(bad)  
  4359e3:	call   FWORD PTR [edx]
  4359e5:	pushf  
  4359e6:	mov    cl,0xb8
  4359e8:	fiadd  DWORD PTR [eax+eax*1]
  4359eb:	add    eax,DWORD PTR [ecx+0x6d]
  4359ee:	or     DWORD PTR [eax-0x450],0x5581b5df
  4359f8:	shl    BYTE PTR [eax-0x63cd7750],0xf9
  4359ff:	push   DWORD PTR [ebx]
  435a01:	idiv   bh
  435a03:	push   DWORD PTR [ebx+edi*4+0x6e7189f2]
  435a0a:	or     DWORD PTR [eax-0x7d0],0xffffffaf
  435a11:	pop    edi
  435a12:	jbe    0x435a7b
  435a14:	ret    
  435a15:	pop    ss
  435a16:	nop
  435a17:	mov    esp,0x8900048e
  435a1c:	leave  
  435a1d:	bound  ebx,QWORD PTR [esi-0x2d]
  435a20:	popf   
  435a21:	mov    esi,DWORD PTR [ebp+0x48]
  435a24:	xchg   ebp,eax
  435a25:	and    al,BYTE PTR [edi-0x1c]
  435a28:	add    BYTE PTR [eax],al
  435a2a:	add    edx,DWORD PTR [ebx-0x56744773]
  435a30:	std    
  435a31:	test   ch,cl
  435a33:	mov    ebp,0xb8258077
  435a38:	std    
  435a39:	jmp    DWORD PTR ds:0xd88514ae
  435a3f:	inc    ebp
  435a40:	add    ebx,DWORD PTR [eax-0x4f]
  435a43:	and    al,0x2c
  435a45:	adc    al,0x16
  435a47:	(bad)  
  435a48:	cmc    
  435a49:	test   DWORD PTR ds:0x9d001283,ecx
  435a4f:	adc    DWORD PTR [eax],ebx
  435a51:	or     DWORD PTR [esi],edx
  435a53:	cmp    dh,BYTE PTR [eax+0x12]
  435a56:	popf   
  435a57:	test   eax,0xab097b76
  435a5c:	inc    ebp
  435a5d:	adc    al,0x4c
  435a5f:	call   0x8598:0xdc83c5d7
  435a66:	push   eax
  435a67:	icebp  
  435a68:	jle    0x435abe
  435a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a6b:	cdq    
  435a6c:	jl     0x4359fe
  435a6e:	xor    DWORD PTR [eax+0x7f16fffd],edi
  435a74:	test   eax,0x6bd21462
  435a79:	adc    bl,BYTE PTR [ebp+0x3b1696a9]
  435a7f:	adc    al,0x65
  435a81:	mov    esp,0x61fda997
  435a86:	out    dx,al
  435a87:	enter  0x723,0xf5
  435a8b:	adc    DWORD PTR [ebx],0x9d000000
  435a91:	lods   al,BYTE PTR ds:[esi]
  435a92:	inc    eax
  435a93:	clc    
  435a94:	adc    al,0x22
  435a96:	imul   edx,DWORD PTR [edx],0x8876a99d
  435a9c:	pop    ecx
  435a9d:	add    bh,cl
  435a9f:	add    ebx,DWORD PTR [ebp+0x8b0a583]
  435aa5:	call   0xa034:0x89e12de1
  435aac:	push   DWORD PTR [ebx+0xae57a85]
  435ab2:	jo     0x435afc
  435ab4:	sub    DWORD PTR [eax],0xf82593e0
  435aba:	out    0x3,al
  435abc:	and    BYTE PTR [edx],dh
  435abe:	sti    
  435abf:	jns    0x435ade
  435ac1:	pop    edx
  435ac2:	icebp  
  435ac3:	add    ebx,DWORD PTR [ebp+0x1814eb8a]
  435ac9:	inc    ebp
  435aca:	inc    ebx
  435acb:	add    al,0xd5
  435acd:	imul   BYTE PTR [ebp+0x2b]
  435ad0:	mov    DWORD PTR [edi+edx*2-0x18fd7094],ecx
  435ad7:	jp     0x435aae
  435ad9:	or     bl,BYTE PTR [edi+0x17]
  435adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435add:	mov    esi,DWORD PTR [edi+0x6f]
  435ae0:	scas   eax,DWORD PTR es:[edi]
  435ae1:	add    ah,bh
  435ae3:	jp     0x435a6b
  435ae5:	scas   al,BYTE PTR es:[edi]
  435ae6:	call   0xf7950436
  435aeb:	fchs   
  435aed:	daa    
  435aee:	push   ss
  435aef:	sahf   
  435af0:	jo     0x435ab6
  435af2:	cmc    
  435af3:	jnp    0x435af5
  435af5:	add    BYTE PTR ds:0x9d03d95e,cl
  435afb:	sub    BYTE PTR [eax+0x6b],ah
  435afe:	adc    eax,0xba03e6f8
  435b03:	xor    ebp,esp
  435b05:	add    ebx,DWORD PTR [ebp+0x3fa2b628]
  435b0b:	or     DWORD PTR [edi+0x6c],esi
  435b0e:	pop    DWORD PTR [edx]
  435b10:	out    0x80,eax
  435b12:	repnz add edx,eax
  435b15:	in     al,dx
  435b16:	test   al,0x9e
  435b18:	add    cl,ch
  435b1a:	xor    edx,esi
  435b1c:	(bad)  
  435b1d:	call   0xf4397ac0
  435b22:	xchg   ecx,eax
  435b23:	mov    edx,DWORD PTR [edi]
  435b25:	call   0x5e4c5dc8
  435b2a:	add    DWORD PTR [ebp+0x6],ebx
  435b2d:	jmp    0x713a42d0
  435b32:	mov    dl,0x9a
  435b34:	test   DWORD PTR [ecx-0x13],esi
  435b37:	lock (bad) 
  435b39:	call   0x6be26b3
  435b3e:	pop    eax
  435b3f:	push   ebx
  435b40:	nop
  435b41:	sub    DWORD PTR [edi-0x62],edx
  435b44:	stc    
  435b45:	jo     0x435b39
  435b47:	scas   al,BYTE PTR es:[edi]
  435b48:	bound  edi,QWORD PTR [edx]
  435b4a:	inc    DWORD PTR [edi+0x41b7e148]
  435b50:	in     al,0xcf
  435b52:	aaa    
  435b53:	mov    ?,WORD PTR [eax-0x7afd6129]
  435b59:	cdq    
  435b5a:	add    BYTE PTR [eax],al
  435b5c:	mov    al,BYTE PTR [eax+eax*4+0x2b371]
  435b63:	jno    0x435b0a
  435b65:	or     eax,0x9e42a485
  435b6a:	push   ecx
  435b6b:	std    
  435b6c:	test   DWORD PTR [edx],ebx
  435b6e:	adc    al,0x62
  435b70:	mov    ecx,0x8659860a
  435b75:	lock (bad) 
  435b77:	call   0x624c51e2
  435b7c:	or     DWORD PTR [edi+0x12],ebx
  435b7f:	jmp    0xd5bee322
  435b84:	lahf   
  435b85:	cmp    dl,BYTE PTR [eax+ebx*4]
  435b88:	scas   al,BYTE PTR es:[edi]
  435b89:	in     al,0xc5
  435b8b:	dec    edi
  435b8c:	in     al,dx
  435b8d:	stos   DWORD PTR es:[edi],eax
  435b8e:	test   DWORD PTR [ecx+ecx*1],ebx
  435b91:	mov    dl,BYTE PTR [eax+eax*1-0x52]
  435b95:	push   ecx
  435b96:	adc    DWORD PTR [eax-0x8d8],0x66fc343f
  435ba0:	std    
  435ba1:	sub    DWORD PTR [eax-0x1cfe7bea],edi
  435ba7:	and    BYTE PTR [edx+0x7ec0b81b],ah
  435bad:	add    DWORD PTR [eax],eax
  435baf:	data16 aaa 
  435bb1:	or     WORD PTR [eax-0x828],0xffa2
  435bb9:	cdq    
  435bba:	mov    cl,0xb8
  435bbc:	inc    edx
  435bbd:	add    DWORD PTR [eax],eax
  435bbf:	add    eax,DWORD PTR [eax]
  435bc1:	add    BYTE PTR [ecx-0x7777e92],bh
  435bc7:	idiv   bh
  435bc9:	dec    edi
  435bcb:	sbb    DWORD PTR [esi+edx*1-0x3d84fecc],edi
  435bd2:	jmp    0x5a514d59
  435bd7:	dec    ebp
  435bd8:	adc    DWORD PTR [ebp-0x28],0xbfe2cae7
  435bdf:	fld    DWORD PTR [edi]
  435be1:	mov    DWORD PTR [ecx+0x65],eax
  435be4:	pop    esi
  435be5:	or     DWORD PTR [ecx+ebp*1+0x19f4000e],edx
  435bec:	push   eax
  435bed:	adc    al,0x7e
  435bef:	cmp    DWORD PTR [eax-0x77fefbea],0x3d19d504
  435bf9:	in     al,0xf5
  435bfb:	dec    eax
  435bfc:	adc    al,0x8b
  435bfe:	ins    BYTE PTR es:[edi],dx
  435bff:	cmc    
  435c00:	adc    DWORD PTR [eax-0x873],0x8807de4f
  435c0a:	rcl    BYTE PTR [edi+0x779d9084],1
  435c10:	push   cs
  435c11:	add    BYTE PTR [ebp-0x6313d8e0],bl
  435c17:	jecxz  0x435c28
  435c19:	scas   eax,DWORD PTR es:[edi]
  435c1a:	(bad)  
  435c1b:	icebp  
  435c1c:	mov    ecx,0x81c3ce62
  435c21:	mov    esi,0xbc94238e
  435c26:	add    BYTE PTR [eax],al
  435c28:	stos   DWORD PTR es:[edi],eax
  435c29:	test   eax,0x221461fd
  435c2e:	ins    BYTE PTR es:[edi],dx
  435c2f:	adc    bl,BYTE PTR [ebp-0x63d86357]
  435c35:	test   eax,0x884e61fd
  435c3a:	push   ds
  435c3b:	pop    es
  435c3c:	or     eax,0x9d000e42
  435c41:	sub    bl,al
  435c43:	std    
  435c44:	inc    ebp
  435c45:	mov    ebx,0x949d0004
  435c4a:	outs   dx,BYTE PTR ds:[esi]
  435c4b:	mov    BYTE PTR [ebx-0x70],ah
  435c4e:	std    
  435c4f:	push   DWORD PTR [esi+0x32]
  435c52:	jnp    0x435c9f
  435c54:	xor    eax,0x8bbc7c21
  435c59:	test   eax,0x5c5a34fd
  435c5e:	push   ds
  435c5f:	or     edx,ebp
  435c61:	cmp    eax,eax
  435c63:	push   es
  435c64:	popf   
  435c65:	test   eax,0x8c01537c
  435c6a:	rcr    dh,cl
  435c6c:	push   ss
  435c6d:	push   edx
  435c6e:	cmc    
  435c6f:	xchg   BYTE PTR [eax+0xd],bl
  435c72:	push   ds
  435c73:	pop    es
  435c74:	or     eax,0x9d000e32
  435c79:	adc    BYTE PTR [esp+edx*1+0x17],dl
  435c7d:	sub    ch,BYTE PTR [edx+edx*1-0x63]
  435c81:	test   eax,0x20ac0475
  435c86:	aas    
  435c87:	in     al,0x9c
  435c89:	add    bh,BYTE PTR [edi]
  435c8b:	adc    BYTE PTR [eax],al
  435c8d:	add    BYTE PTR [eax],ah
  435c8f:	sbb    esi,ebx
  435c91:	jle    0x435ce8
  435c93:	or     bl,BYTE PTR [ebp-0x6d]
  435c96:	repnz hlt 
  435c98:	out    0x3,al
  435c9a:	and    eax,0xd7ef1f7
  435c9f:	pop    edi
  435ca0:	rol    DWORD PTR [ebx],1
  435ca2:	popf   
  435ca3:	xchg   DWORD PTR [eax+ebx*4],esi
  435ca6:	call   0xace8:0xad74d333
  435cad:	and    DWORD PTR [eax-0x55],ebx
  435cb0:	outs   dx,BYTE PTR ds:[esi]
  435cb1:	cmp    BYTE PTR [ebp-0x7501c473],al
  435cb7:	mov    DWORD PTR [edi+0x67],esi
  435cba:	pop    DWORD PTR [edx]
  435cbc:	out    0x7e,eax
  435cbe:	into   
  435cbf:	sahf   
  435cc0:	add    DWORD PTR [ebp+0x25],edi
  435cc3:	pop    edx
  435cc4:	fld    DWORD PTR [ebx]
  435cc6:	popf   
  435cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435cc8:	(bad)  
  435cc9:	and    DWORD PTR [eax],ebx
  435ccb:	pop    edx
  435ccc:	sub    edi,ebp
  435cce:	dec    edx
  435ccf:	fwait
  435cd0:	rcl    esi,0x3c
  435cd3:	xchg   DWORD PTR [edi+0x67],ebx
  435cd6:	pop    DWORD PTR [edx]
  435cd8:	out    0x21,eax
  435cda:	call   0xe602:0x9d117f5a
  435ce1:	cmp    BYTE PTR ds:0xaf675f89,ah
  435ce7:	add    ah,bh
  435ce9:	jle    0x435d10
  435ceb:	pop    esi
  435cec:	stc    
  435ced:	add    ebx,DWORD PTR [ebp+0xb0257f]
  435cf3:	add    BYTE PTR [eax+0x5229e099],al
  435cf9:	mov    DWORD PTR [edi+edx*4+0x7e05af7f],esi
  435d00:	push   ebp
  435d01:	or     dh,BYTE PTR [eax+0x40]
  435d04:	stc    
  435d05:	and    eax,DWORD PTR [eax]
  435d07:	loopne 0x435d37
  435d09:	pop    edx
  435d0a:	adc    ch,cl
  435d0c:	sahf   
  435d0d:	test   DWORD PTR [eax-0x3],edx
  435d10:	dec    eax
  435d11:	cmp    BYTE PTR [eax-0x77fd6109],0xed
  435d18:	pop    DWORD PTR [ebp+0x3a9ec543]
  435d1e:	adc    al,0x72
  435d20:	jns    0x435d18
  435d22:	test   DWORD PTR [ecx+0x36],ebx
  435d25:	lock (bad) 
  435d27:	call   0x614ba845
  435d2c:	lods   eax,DWORD PTR ds:[esi]
  435d2d:	or     eax,DWORD PTR [ebp-0xb0a87]
  435d33:	call   0xe92f7b39
  435d38:	out    0xee,al
  435d3a:	scas   al,BYTE PTR es:[edi]
  435d3b:	stc    
  435d3c:	push   eax
  435d3d:	shl    BYTE PTR [edx-0x66],0x4
  435d41:	sbb    BYTE PTR [esi-0x438d198a],bh
  435d47:	fistp  WORD PTR [esi-0x3e9f9dfe]
  435d4d:	pop    edx
  435d4e:	adc    ch,cl
  435d50:	sahf   
  435d51:	lahf   
  435d52:	or     eax,0x62b969c7
  435d57:	loopne 0x435d59
  435d59:	add    BYTE PTR [esi],cl
  435d5b:	pop    ebx
  435d5c:	adc    ch,cl
  435d5e:	sahf   
  435d5f:	pop    ss
  435d60:	mov    edi,0xbc8aa7ee
  435d65:	xlat   BYTE PTR ds:[ebx]
  435d66:	sahf   
  435d67:	add    al,BYTE PTR [ebp-0x3217b55c]
  435d6d:	pusha  
  435d6e:	ret    0x83a6
  435d71:	xor    BYTE PTR [edx-0x668c48f4],bh
  435d77:	add    al,BYTE PTR [eax]
  435d79:	cs mov edx,0x9ee8fd9a
  435d7f:	add    ah,ch
  435d81:	add    BYTE PTR [edx],al
  435d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d84:	jmp    0xc4ff:0xfe2cf275
  435d8b:	add    eax,0xfecc45bf
  435d90:	(bad)  
  435d91:	push   DWORD PTR [esi+esi*2+0x5bbb90c]
  435d98:	add    BYTE PTR [eax],al
  435d9a:	or     ebx,ecx
  435d9c:	test   DWORD PTR [esp+eax*8],0x79830005
  435da3:	dec    esi
  435da4:	add    al,0x29
  435da6:	xor    DWORD PTR [esi+0x7],0xf7673085
  435dad:	jmp    DWORD PTR [ebx+0x198b534c]
  435db3:	inc    eax
  435db4:	mov    ebx,0xcc5130cc
  435db9:	int3   
  435dba:	mov    ecx,0x51ec17
  435dbf:	add    bh,bh
  435dc1:	fadd   DWORD PTR [edi]
  435dc3:	mov    esi,edx
  435dc5:	and    DWORD PTR [esi],ecx
  435dc7:	add    BYTE PTR [esi+ebp*1-0x3],dh
  435dcb:	(bad)  
  435dcc:	shr    BYTE PTR [edx-0x9],cl
  435dcf:	push   edi
  435dd0:	pop    DWORD PTR [eax+eax*1]
  435dd3:	add    BYTE PTR [esi+edi*2],dh
  435dd6:	icebp  
  435dd7:	or     esp,DWORD PTR [edx+0x33]
  435dda:	pop    esi
  435ddb:	mov    esi,DWORD PTR [ebx+eiz*8-0x36]
  435ddf:	loop   0x435da0
  435de1:	fist   DWORD PTR [ebx]
  435de3:	mov    ecx,edi
  435de5:	pusha  
  435de6:	pop    esi
  435de7:	or     edx,ecx
  435de9:	sub    eax,0x1604000e
  435dee:	dec    esi
  435def:	or     BYTE PTR [esi-0x7d],bh
  435df2:	mov    eax,0x8804f416
  435df7:	add    al,0x5
  435df9:	add    al,0x56
  435dfb:	adc    al,0x9d
  435dfd:	and    eax,0xab8bb78f
  435e02:	std    
  435e03:	test   BYTE PTR [ebx-0x49],ch
  435e06:	jl     0x435e52
  435e08:	xchg   ebp,eax
  435e09:	adc    al,0x3a
  435e0b:	cld    
  435e0c:	and    eax,0x2b84f8b7
  435e11:	out    0xe,eax
  435e13:	add    BYTE PTR [ebp+0xc1443aa],bl
  435e19:	fwait
  435e1a:	xlat   BYTE PTR ds:[ebx]
  435e1b:	lds    eax,FWORD PTR [ebx+0x5c]
  435e1e:	pushf  
  435e1f:	jge    0x435e00
  435e21:	lods   eax,DWORD PTR ds:[esi]
  435e22:	jnp    0x435db6
  435e24:	add    BYTE PTR [eax],al
  435e26:	jmp    0x3c435be3
  435e2b:	adc    bh,BYTE PTR [edx-0x48]
  435e2e:	mov    bl,0xa9
  435e30:	std    
  435e31:	in     al,0xae
  435e33:	aas    
  435e34:	int    0xe0
  435e36:	add    edx,DWORD PTR [ebx-0x56544785]
  435e3c:	std    
  435e3d:	jl     0x435e9b
  435e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e40:	jl     0x435dcc
  435e42:	xor    DWORD PTR [eax-0x18e90003],edx
  435e48:	test   DWORD PTR [ebx+edx*1-0x62fff62a],0xa6f77ce1
  435e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e54:	dec    ebx
  435e55:	bound  edx,QWORD PTR [esi]
  435e57:	ficomp DWORD PTR [ecx]
  435e59:	int    0x3f
  435e5b:	adc    eax,0x67241432
  435e60:	mov    eax,ds:0x6c0fa462
  435e65:	adc    bl,BYTE PTR [ebp-0x6aad8957]
  435e6b:	adc    edi,DWORD PTR [edx-0x48]
  435e6e:	mov    bl,0xa9
  435e70:	std    
  435e71:	xchg   DWORD PTR [ecx-0x4ea5fb46],ebx
  435e77:	add    ch,BYTE PTR [ebp-0x72]
  435e7a:	dec    edx
  435e7b:	icebp  
  435e7c:	out    0x3,al
  435e7e:	and    BYTE PTR [ecx],bl
  435e80:	sti    
  435e81:	jp     0x435eea
  435e83:	or     bl,BYTE PTR [esi+0x41]
  435e86:	jmp    0x13a3a15
  435e8b:	add    BYTE PTR [ecx],bl
  435e8d:	jno    0x435eca
  435e8f:	push   cs
  435e90:	popf   
  435e91:	add    ch,al
  435e93:	inc    ebp
  435e94:	test   eax,0xe0d9d751
  435e99:	and    BYTE PTR [esi-0x2b3bbf65],dh
  435e9f:	jl     0x435eb0
  435ea1:	push   edi
  435ea2:	stc    
  435ea3:	add    ebx,DWORD PTR [ebp-0x1a829fe0]
  435ea9:	lock out 0x3,al
  435eac:	mov    eax,0x7dd340f3
  435eb1:	and    al,ah
  435eb3:	jge    0x435f0a
  435eb5:	lock out 0x3,al
  435eb8:	or     dl,al
  435eba:	in     al,dx
  435ebb:	jl     0x435ed4
  435ebd:	push   esi
  435ebe:	icebp  
  435ebf:	add    ebx,DWORD PTR [ebp+0x18142c8b]
  435ec5:	mov    BYTE PTR [ebx+0xd],cl
  435ec8:	popf   
  435ec9:	add    ah,BYTE PTR [esi-0x3d]
  435ecc:	popa   
  435ecd:	add    DWORD PTR [eax+0x930d4f7],0x7b
  435ed4:	ins    DWORD PTR es:[edi],dx
  435ed5:	and    BYTE PTR [esi-0x4b7df5f],dl
  435edb:	jl     0x435ebb
  435edd:	xchg   esi,eax
  435ede:	sar    esp,0xc
  435ee1:	pop    edx
  435ee2:	stc    
  435ee3:	add    ebx,DWORD PTR [ebp+0x20fbb18b]
  435ee9:	cmp    BYTE PTR [edi+0xd],0x9d
  435eed:	add    ch,BYTE PTR [edi-0x1]
  435ef0:	add    BYTE PTR [eax],al
  435ef2:	stos   DWORD PTR es:[edi],eax
  435ef3:	add    DWORD PTR [eax],eax
  435ef5:	xchg   edi,eax
  435ef6:	mov    ds:0x98709280,al
  435efb:	add    al,BYTE PTR [eax]
  435efd:	jb     0x435eb7
  435eff:	out    dx,al
  435f00:	test   BYTE PTR [edi+0x15437df6],ch
  435f06:	jbe    0x435ef6
  435f08:	or     BYTE PTR [edx+0x18],ah
  435f0b:	push   esi
  435f0c:	adc    ch,cl
  435f0e:	sahf   
  435f0f:	xchg   edi,eax
  435f10:	pop    ebx
  435f11:	aad    0x51
  435f13:	repnz and eax,0xe8c5b023
  435f19:	push   0xffffffdc
  435f1b:	lea    eax,[edi-0xbca81]
  435f21:	call   0x91c5debe
  435f26:	mov    ds:0x8cc20002,eax
  435f2b:	and    al,0xcd
  435f2d:	leave  
  435f2e:	cmp    edi,0xffffff81
  435f31:	sub    DWORD PTR [ebx+0x5e6a0002],0xf55f86ff
  435f3b:	lock (bad) 
  435f3d:	call   0x1c7afacf
  435f42:	xchg   ecx,eax
  435f43:	or     ecx,DWORD PTR [edx+0x29977]
  435f49:	(bad)
  435f4e:	sahf   
  435f4f:	pop    ss
  435f50:	imul   esp
  435f52:	and    BYTE PTR [eax],0x9
  435f55:	aas    
  435f56:	add    BYTE PTR [eax],al
  435f58:	and    BYTE PTR [edi+0x3d],ah
  435f5b:	sub    DWORD PTR [ecx+0x136db10b],esp
  435f61:	sbb    DWORD PTR [esi],eax
  435f63:	jmp    0x39c88006
  435f68:	xchg   ebx,eax
  435f69:	(bad)  
  435f6a:	fisub  WORD PTR [edx+0x73]
  435f6d:	out    dx,al
  435f6e:	popa   
  435f6f:	add    BYTE PTR ds:0x416b888,ch
  435f75:	add    al,BYTE PTR [edi]
  435f77:	mov    dh,0x6a
  435f79:	es push cs
  435f7b:	add    ah,dh
  435f7d:	sbb    cl,BYTE PTR [esi+0x8]
  435f80:	mov    WORD PTR [edx],cs
  435f82:	or     edi,edi
  435f84:	inc    edx
  435f85:	push   es
  435f86:	pop    es
  435f87:	mov    dh,0x6a
  435f89:	sub    DWORD PTR [esi],ecx
  435f8b:	add    ah,dh
  435f8d:	sbb    al,BYTE PTR [esi+0x14]
  435f90:	outs   dx,DWORD PTR ds:[esi]
  435f91:	inc    esp
  435f92:	or     BYTE PTR [eax-0x697d0f08],cl
  435f98:	mov    BYTE PTR [eax+eax*1],al
  435f9b:	add    BYTE PTR [ebp+0x52ca21ee],al
  435fa1:	mov    bl,0xe8
  435fa3:	mov    ebx,0x1c5
  435fa8:	lds    edi,FWORD PTR [edi]
  435faa:	adc    al,0x83
  435fac:	not    BYTE PTR [edx+0x5e]
  435faf:	mov    DWORD PTR [edx],esi
  435fb1:	sub    DWORD PTR [esi],ecx
  435fb3:	add    BYTE PTR [eax+ebx*1+0x172bc8e],al
  435fba:	add    bl,ch
  435fbc:	add    BYTE PTR [eax],al
  435fbe:	xchg   esi,eax
  435fbf:	(bad)  
  435fc0:	scas   eax,DWORD PTR es:[edi]
  435fc1:	xchg   eax,ebp
  435fc3:	inc    edx
  435fc4:	inc    eax
  435fc5:	add    BYTE PTR [edx-0x75796be5],ah
  435fcb:	cwde   
  435fcc:	stc    
  435fcd:	jmp    DWORD PTR [edx+0x6d66dab3]
  435fd3:	xchg   DWORD PTR [eax+0x7b014416],edi
  435fd9:	rol    DWORD PTR [edi+0x18],0x86
  435fdd:	mov    esp,0x3000172
  435fe2:	mov    edi,0x4b1076aa
  435fe7:	or     eax,0x2c9dff5a
  435fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435fed:	test   eax,ebx
  435fef:	mov    ds:0x370b8b36,eax
  435ff4:	std    
  435ff5:	call   FWORD PTR [ebp+0x60e8bb10]
  435ffb:	shl    DWORD PTR [ebx-0xe89e907],cl
  436001:	inc    esi
  436002:	adc    BYTE PTR ds:0xab9d0775,dl
  436008:	js     0x435fcc
  43600a:	add    eax,0xeaf9a5af
  43600f:	arpl   WORD PTR [eax-0x7b],cx
  436012:	clc    
  436013:	pop    ebp
  436014:	ror    ah,0xe9
  436017:	out    0xb0,al
  436019:	int3   
  43601a:	loope  0x436091
  43601c:	js     0x43600a
  43601e:	push   ds
  43601f:	xchg   edi,eax
  436020:	push   cs
  436021:	dec    ebp
  436022:	add    BYTE PTR [eax],al
  436024:	push   ss
  436025:	ds or  al,0x2d
  436028:	iret   
  436029:	int3   
  43602a:	xor    al,0x37
  43602c:	or     eax,0xaafff68b
  436031:	mov    bl,0x81
  436033:	aaa    
  436034:	sahf   
  436035:	stos   DWORD PTR es:[edi],eax
  436036:	std    
  436037:	in     al,0xa2
  436039:	sub    BYTE PTR es:[ebx*4+0x16f43720],ah
  436041:	and    ch,BYTE PTR [eax+0x12]
  436044:	popf   
  436045:	test   eax,0xdaa9b10e
  43604a:	mov    BYTE PTR [eax-0x26beb],dh
  436050:	call   0x4f12:0xdf2dd82b
  436057:	cld    
  436058:	and    BYTE PTR [ebx-0x77],dl
  43605b:	mov    BYTE PTR [ecx],dl
  43605d:	mov    ah,0xfd
  43605f:	call   DWORD PTR [edi+ebp*8]
  436062:	xchg   edi,eax
  436063:	or     DWORD PTR [eax],ebx
  436065:	add    esi,DWORD PTR [eax+0x4]
  436068:	popf   
  436069:	add    ch,dl
  43606b:	pop    edx
  43606c:	leave  
  43606d:	dec    edi
  43606e:	in     eax,0x62
  436070:	lea    eax,[edx]
  436072:	out    0x3,eax
  436074:	js     0x43600e
  436076:	jo     0x4360b1
  436078:	adc    eax,0x722229d8
  43607d:	add    edi,DWORD PTR [edx-0x28]
  436080:	cmp    DWORD PTR ds:0xaf7fba5e,ebx
  436086:	add    eax,0x6500008f
  43608b:	or     dh,BYTE PTR [eax+0x41]
  43608e:	icebp  
  43608f:	sbb    al,0xe0
  436091:	jae    0x4360b8
  436093:	in     eax,dx
  436094:	out    0x3,al
  436096:	sbb    BYTE PTR [ebx],dh
  436098:	fisttp DWORD PTR [ebp+0x3d15b35]
  43609e:	popf   
  43609f:	mov    dl,bl
  4360a1:	hlt    
  4360a2:	lds    eax,FWORD PTR [edx-0x2d]
  4360a5:	mov    ss,WORD PTR [ebp+0xa]
  4360a8:	ins    DWORD PTR es:[edi],dx
  4360a9:	jae    0x43609d
  4360ab:	in     al,dx
  4360ac:	out    0x3,al
  4360ae:	sbb    BYTE PTR [ebx],bl
  4360b0:	sti    
  4360b1:	mov    es,WORD PTR [esi-0x6a]
  4360b4:	pop    edi
  4360b5:	not    DWORD PTR [ebp-0x50a0a879]
  4360bb:	add    ah,bh
  4360bd:	mov    ds:0xf377eedd,al
  4360c2:	ror    al,0x41
  4360c5:	mov    bh,0x77
  4360c7:	xchg   DWORD PTR [esp+ebx*4],esi
  4360ca:	es cs in eax,dx
  4360cd:	xchg   ebx,eax
  4360ce:	sbb    dh,BYTE PTR [edx+0x53]
  4360d1:	stc    
  4360d2:	push   0xffffff93
  4360d4:	add    DWORD PTR [ebp+0x3d95a2d],ecx
  4360da:	popf   
  4360db:	test   eax,0x29d0563
  4360e0:	add    BYTE PTR [edi],cl
  4360e2:	sbb    cl,dh
  4360e4:	lods   al,BYTE PTR ds:[esi]
  4360e5:	pop    es
  4360e6:	or     ah,BYTE PTR [eax+0x5acef062]
  4360ec:	adc    ch,cl
  4360ee:	add    BYTE PTR [eax],al
  4360f0:	sahf   
  4360f1:	xchg   ebp,eax
  4360f2:	mov    DWORD PTR [eax+0x79],0x8fe9f994
  4360f9:	push   eax
  4360fa:	mov    edx,0x426b69
  4360ff:	out    dx,al
  436100:	ja     0x436170
  436102:	mov    ch,0xef
  436104:	mov    ds:0xe720002,al
  436109:	xchg   ebx,eax
  43610a:	stc    
  43610b:	jmp    0xb4cb0e1b
  436110:	push   ss
  436111:	jge    0x436166
  436113:	loope  0x4360e0
  436115:	mov    ebp,0x518f887a
  43611a:	xchg   esp,eax
  43611b:	inc    ebx
  43611c:	mov    ds:0x21e8fffe,al
  436121:	das    
  436122:	lock (bad) 
  436124:	adc    esi,DWORD PTR [ebp+eax*4+0x72096a1]
  43612b:	jns    0x436186
  43612d:	lock (bad) 
  43612f:	call   0x91dbb1c1
  436134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436135:	xchg   edx,eax
  436136:	stc    
  436137:	bound  ebp,QWORD PTR [ecx-0x12]
  43613a:	xchg   ebp,esp
  43613c:	(bad)  
  43613d:	mov    eax,DWORD PTR [eax-0x2b]
  436140:	lods   eax,DWORD PTR ds:[esi]
  436141:	push   esp
  436142:	cwde   
  436143:	jo     0x4360cc
  436145:	xchg   edx,eax
  436146:	stc    
  436147:	(bad)
  43614c:	test   eax,0x21f81c7a
  436151:	jae    0x43610f
  436153:	inc    DWORD PTR [eax]
  436155:	add    BYTE PTR [esi+0x92c8502],bl
  43615b:	mov    WORD PTR [eax+0x0],es
  43615e:	js     0x436195
  436160:	adc    BYTE PTR [edx],ch
  436162:	push   cs
  436163:	(bad)  
  436165:	jmp    0x436126
  436167:	inc    ecx
  436168:	clc    
  436169:	lea    ebp,[eax-0x4b761000]
  43616f:	and    cl,BYTE PTR [esi]
  436171:	add    BYTE PTR [esp+ebx*8-0x80],al
  436175:	cwde   
  436176:	or     al,0x8d
  436178:	stc    
  436179:	(bad)  
  43617a:	fisttp WORD PTR [edi+0x30788b5f]
  436180:	add    al,0x4
  436182:	add    al,0x6
  436184:	pop    esi
  436185:	rcl    DWORD PTR [esi-0x24],cl
  436188:	add    BYTE PTR [eax-0x67374],dl
  43618e:	pop    es
  43618f:	inc    ecx
  436190:	clc    
  436191:	mov    DWORD PTR [edx+eiz*1+0xe],ebp
  436195:	add    ah,dh
  436197:	jle    0x4361b5
  436199:	mov    ebp,0x4046cc
  43619e:	dec    edi
  43619f:	fsincos 
  4361a1:	mov    DWORD PTR [ecx],esi
  4361a3:	jbe    0x436222
  4361a5:	fisttp DWORD PTR [eax-0x11]
  4361a8:	and    dh,BYTE PTR [ecx+esi*2]
  4361ab:	xchg   BYTE PTR [eax+eax*2-0x3c],cl
  4361af:	jle    0x436139
  4361b1:	mov    esp,0xbf0005aa
  4361b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4361b7:	add    eax,0x0
  4361bc:	lahf   
  4361bd:	outs   dx,DWORD PTR ds:[esi]
  4361be:	xor    ecx,edi
  4361c0:	loop   0x436198
  4361c2:	pop    ebp
  4361c3:	mov    edx,DWORD PTR [edx-0x25]
  4361c6:	retf   0xffe7
  4361c9:	cmp    eax,0x2d7d6608
  4361ce:	mov    eax,0x7058416
  4361d3:	mov    dh,0x1c
  4361d5:	sub    eax,0x9b9d000e
  4361da:	mov    WORD PTR [eax-0x77],?
  4361dd:	and    edi,ecx
  4361df:	ss pop edx
  4361e1:	fcomi  st,st(7)
  4361e3:	or     BYTE PTR [ebx],cl
  4361e5:	and    edx,DWORD PTR [esi+0x12]
  4361e8:	popf   
  4361e9:	fwait
  4361ea:	mov    WORD PTR [eax-0x6b],cs
  4361ed:	and    al,0x15
  4361ef:	adc    al,0x25
  4361f1:	pop    es
  4361f2:	jne    0x3ad10d
  4361f8:	sub    bh,BYTE PTR [eax]
  4361fa:	cmp    eax,0xeb8aec14
  4361ff:	les    eax,FWORD PTR [ebx+0x6085aeec]
  436205:	retf   
  436206:	mov    DWORD PTR [esi+edx*4-0x35],ecx
  43620a:	xchg   DWORD PTR es:[ebp+0x13],ecx
  43620e:	idiv   edi
  436210:	cli    
  436211:	repz or BYTE PTR [edx-0x32],ah
  436215:	or     BYTE PTR [edi],ah
  436217:	pop    es
  436218:	sub    eax,0xe2fff733
  43621d:	fwait
  43621e:	int3   
  43621f:	xchg   DWORD PTR [eax],eax
  436221:	add    BYTE PTR ds:0xd2fff747,ah
  436227:	push   esp
  436228:	xchg   BYTE PTR [ebx-0x37],dl
  43622b:	sbb    DWORD PTR [ebx-0x2646400],ebx
  436231:	ins    BYTE PTR es:[edi],dx
  436232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436233:	cwde   
  436234:	push   ebx
  436235:	scas   al,BYTE PTR es:[edi]
  436236:	sbb    eax,0xb60043d2
  43623b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43623c:	xchg   dh,al
  43623e:	fadd   st(1),st
  436240:	add    DWORD PTR [ecx],ecx
  436242:	push   ebx
  436243:	or     eax,DWORD PTR [esi+eax*2+0x4b8699dd]
  43624a:	cdq    
  43624b:	test   al,0x52
  43624d:	jl     0x43629b
  43624f:	pushf  
  436250:	xchg   BYTE PTR [eax+0x3f90339],cl
  436256:	popf   
  436257:	dec    ebx
  436258:	test   DWORD PTR [ebx],0xbebe029d
  43625e:	sbb    cl,BYTE PTR [esi]
  436260:	xchg   edi,eax
  436261:	(bad)  [ecx+0x11]
  436264:	pop    es
  436265:	mov    ebp,esi
  436267:	(bad)  
  436268:	jmp    0x997ebc3
  43626d:	mov    ebp,DWORD PTR [ecx+ebp*1-0x6a]
  436271:	mov    ds:0x25ef3b20,al
  436276:	call   0xe290:0x2af69f72
  43627d:	push   ebp
  43627e:	add    eax,0x9d03f14b
  436283:	jnp    0x43621c
  436285:	test   DWORD PTR [eax],0xd7ef1a00
  43628b:	sahf   
  43628c:	pop    ebp
  43628d:	neg    BYTE PTR [ebp+0x4c]
  436290:	test   eax,0x327c70ff
  436295:	stc    
  436296:	out    0x3,al
  436298:	sbb    BYTE PTR [ebx],dh
  43629a:	out    dx,eax
  43629b:	mov    ecx,DWORD PTR [ecx+0x21745df1]
  4362a1:	stc    
  4362a2:	out    0x3,al
  4362a4:	aam    0x42
  4362a6:	fist   DWORD PTR [ebp+ebp*4-0x24]
  4362aa:	sub    al,0x26
  4362ac:	fcomp  DWORD PTR [edi+0x7dcd515e]
  4362b2:	xchg   ebx,eax
  4362b3:	or     DWORD PTR [ebp-0x70a08887],ebp
  4362b9:	add    ah,bh
  4362bb:	mov    cl,BYTE PTR [esi-0x72]
  4362be:	dec    ecx
  4362bf:	(bad)  
  4362c0:	in     eax,0x4a
  4362c2:	icebp  
  4362c3:	add    ebx,DWORD PTR [ebp-0x9751f65]
  4362c9:	inc    BYTE PTR [eax-0x75]
  4362cc:	test   eax,0x4e4f0053
  4362d1:	lods   eax,DWORD PTR ds:[esi]
  4362d2:	(bad)  
  4362d3:	loopne 0x4362cb
  4362d5:	dec    edx
  4362d6:	adc    ch,cl
  4362d8:	sahf   
  4362d9:	(bad)  
  4362da:	retf   0x1670
  4362dd:	dec    esi
  4362de:	adc    ch,cl
  4362e0:	sahf   
  4362e1:	test   DWORD PTR [esp+edx*2],edi
  4362e4:	pop    esi
  4362e5:	int    0x3f
  4362e7:	jmp    0x644b8e13
  4362ec:	add    BYTE PTR [eax],al
  4362ee:	sub    edi,ecx
  4362f0:	sub    DWORD PTR [ecx-0x62],0x2
  4362f4:	add    dl,al
  4362f6:	xor    dl,BYTE PTR [eax+edi*8-0x4b]
  4362fa:	fiadd  WORD PTR [edx]
  4362fc:	test   DWORD PTR [ecx-0x36],esi
  4362ff:	hlt    
  436300:	(bad)  
  436301:	call   0xe94355c6
  436306:	sahf   
  436307:	in     eax,0xf0
  436309:	add    ah,bl
  43630b:	or     edx,DWORD PTR [edx-0x39]
  43630e:	pop    ss
  43630f:	mov    al,ds:0x85381a62
  436314:	dec    eax
  436315:	loope  0x4362d7
  436317:	pop    es
  436318:	mov    al,0x61
  43631a:	call   0x51325cad
  43631f:	push   0xffffffb8
  436321:	call   FWORD PTR [esi-0x2d667afe]
  436327:	xchg   BYTE PTR [eax+edi*4],bl
  43632a:	xor    eax,DWORD PTR [edx+0x14]
  43632d:	out    dx,al
  43632e:	jo     0x43639a
  436330:	mov    bh,0xdf
  436332:	sahf   
  436333:	add    al,BYTE PTR [ebp+0x4885b279]
  436339:	icebp  
  43633a:	es out dx,al
  43633c:	or     DWORD PTR [edx+0x29],esi
  43633f:	dec    esi
  436340:	adc    ch,cl
  436342:	sahf   
  436343:	mov    DWORD PTR [eax-0xb],eax
  436346:	out    dx,eax
  436347:	repnz and eax,0xcae54f00
  43634d:	jmp    0x0:0xb89079e2
  436354:	bound  eax,QWORD PTR [edx]
  436356:	add    BYTE PTR [ebp-0x74165470],cl
  43635c:	fsin   
  43635e:	adc    BYTE PTR [eax-0x66b38],0x1f
  436365:	xchg   ecx,eax
  436366:	pop    edi
  436367:	shl    DWORD PTR [esi],cl
  436369:	in     eax,0x0
  43636b:	nop
  43636c:	fcom   QWORD PTR [ecx+edi*8-0x7e40c801]
  436373:	mov    BYTE PTR [eax-0x4000066c],cl
  436379:	cmp    eax,0x26ac3bf4
  43637e:	push   cs
  43637f:	add    BYTE PTR [edi+edi*8],dh
  436382:	jns    0x436351
  436384:	enter  0xf76f,0xf
  436388:	xor    edx,DWORD PTR [edx+edi*8]
  43638b:	add    eax,DWORD PTR [edx+eax*1]
  43638e:	or     DWORD PTR [eax-0x66b78],0xffffff8a
  436395:	xchg   esi,eax
  436396:	stc    
  436397:	inc    DWORD PTR [ebx+ebx*4]
  43639a:	jmp    0x436325
  43639c:	xor    edx,edi
  43639e:	xor    cl,dh
  4363a0:	or     dh,bl
  4363a2:	push   es
  4363a3:	mov    bh,0x47
  4363a5:	push   es
  4363a6:	add    al,0x0
  4363a8:	(bad)  
  4363a9:	out    0x82,eax
  4363ab:	(bad)  
  4363ac:	and    dl,BYTE PTR [ebx-0x26]
  4363af:	mov    ecx,DWORD PTR [edx+edi*8]
  4363b2:	sbb    BYTE PTR [ebp-0x3c],0xe7
  4363b6:	add    BYTE PTR [eax-0x6b940000],dl
  4363bc:	stc    
  4363bd:	jmp    FWORD PTR [edi]
  4363bf:	rcl    DWORD PTR [ebx],1
  4363c1:	mov    bl,BYTE PTR [edx+ebp*1]
  4363c4:	push   cs
  4363c5:	add    BYTE PTR [ebp-0x53e37a65],bl
  4363cb:	mov    esp,0x4326143d
  4363d0:	clc    
  4363d1:	test   ch,dl
  4363d3:	xchg   ebx,eax
  4363d4:	xchg   DWORD PTR [eax-0x252bc],edx
  4363da:	es (bad) 
  4363dc:	xchg   ebx,eax
  4363dd:	mov    BYTE PTR [ecx+0x29908894],cl
  4363e3:	xchg   ebp,eax
  4363e4:	std    
  4363e5:	jmp    DWORD PTR [edx-0x25]
  4363e8:	imul   DWORD PTR [esi+0x62c7c1ad]
  4363ee:	outs   dx,BYTE PTR ds:[esi]
  4363ef:	jne    0x436379
  4363f1:	dec    ebx
  4363f2:	xchg   ebp,eax
  4363f3:	push   ds
  4363f4:	xor    DWORD PTR [esi],eax
  4363f6:	dec    ebp
  4363f7:	and    ch,BYTE PTR [ebp-0x44]
  4363fa:	xchg   ebx,eax
  4363fb:	fwait
  4363fc:	std    
  4363fd:	popa   
  4363fe:	and    al,0x6b
  436400:	push   ebp
  436401:	adc    bl,BYTE PTR [ebp+0x16b10c9b]
  436407:	cdq    
  436408:	add    DWORD PTR [eax],eax
  43640a:	popf   
  43640b:	pop    esp
  43640c:	cmp    eax,DWORD PTR [edi-0xcf0db]
  436412:	or     ah,BYTE PTR [eax-0x78]
  436415:	jecxz  0x436477
  436417:	fsub   DWORD PTR [edx]
  436419:	test   DWORD PTR [esi],ebp
  43641b:	fwait
  43641c:	add    DWORD PTR [eax],eax
  43641e:	add    BYTE PTR [eax],al
  436420:	popf   
  436421:	jge    0x4363d3
  436423:	loop   0x43646f
  436425:	test   DWORD PTR [esi],eax
  436427:	mov    al,0x25
  436429:	(bad)  
  43642a:	std    
  43642b:	call   FWORD PTR [esi+0x118885e1]
  436431:	lods   eax,DWORD PTR ds:[esi]
  436432:	std    
  436433:	call   FWORD PTR [edx-0x6101902c]
  436439:	fwait
  43643a:	std    
  43643b:	pop    ecx
  43643c:	and    al,0x2b
  43643e:	push   ecx
  43643f:	adc    bl,BYTE PTR [ebp+0x203ee702]
  436445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436446:	cmp    al,0xc7
  436448:	sar    DWORD PTR [ebp-0x73a2e473],1
  43644e:	(bad)  
  43644f:	xlat   BYTE PTR ds:[ebx]
  436450:	push   edx
  436451:	jle    0x4364c4
  436453:	jo     0x4363f2
  436455:	add    ah,bh
  436457:	mov    dl,bl
  436459:	add    bh,BYTE PTR [ecx-0x1eef853a]
  43645f:	and    eax,esi
  436461:	leave  
  436462:	out    0x10,al
  436464:	fild   WORD PTR [edx+0x66]
  436467:	lds    ebx,FWORD PTR [ecx+0x55877db1]
  43646d:	in     al,dx
  43646e:	or     BYTE PTR [esi+0x5c417fbf],ch
  436474:	popf   
  436475:	add    ah,bh
  436477:	add    ecx,esi
  436479:	(bad)  
  43647a:	or     BYTE PTR [edi+0x3e74ef7],al
  436480:	popf   
  436481:	add    bl,ah
  436483:	in     eax,dx
  436484:	add    BYTE PTR [eax],al
  436486:	mov    esp,0x9dcc997f
  43648b:	add    ah,bh
  43648d:	add    ecx,DWORD PTR [esi+0x12e48ee2]
  436493:	mov    edi,fs
  436495:	mov    BYTE PTR [edi],dl
  436497:	mul    edi
  436499:	add    ebx,DWORD PTR [ebp-0x4d79368e]
  43649f:	add    dh,BYTE PTR [ecx+ecx*1+0x287f5d]
  4364a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4364a7:	add    ch,al
  4364a9:	add    ebx,DWORD PTR [ebp+0x1ad7020e]
  4364af:	ror    BYTE PTR [edi+0x5],0x9d
  4364b3:	add    ah,bh
  4364b5:	(bad)  
  4364b6:	fnstcw WORD PTR [esi-0x412e37d5]
  4364bc:	add    BYTE PTR [edx-0x77acf22],bh
  4364c2:	sbb    esp,DWORD PTR [ecx+0x44dcf1ff]
  4364c8:	iret   
  4364c9:	rcr    BYTE PTR [ebx-0x48447c3e],1
  4364cf:	xchg   edx,eax
  4364d0:	iret   
  4364d1:	rcl    esp,0x4d
  4364d4:	int3   
  4364d5:	mov    ch,0x62
  4364d7:	mov    esi,0xbe5aadcc
  4364dc:	int3   
  4364dd:	bound  esp,QWORD PTR [esi]
  4364df:	dec    esi
  4364e0:	adc    ch,cl
  4364e2:	sahf   
  4364e3:	cmp    eax,0x896a07d
  4364e8:	push   ds
  4364e9:	out    dx,al
  4364ea:	add    BYTE PTR [eax],al
  4364ec:	int3   
  4364ed:	push   0xffffffb8
  4364ef:	call   FWORD PTR [esi+0x4d398502]
  4364f5:	xchg   BYTE PTR [eax-0xf],cl
  4364f8:	push   ss
  4364f9:	out    dx,al
  4364fa:	push   cs
  4364fb:	jle    0x4364db
  4364fd:	test   BYTE PTR [ecx+eiz*1-0x1eaf79d3],0xa7
  436505:	push   eax
  436506:	cwde   
  436507:	mov    al,ds:0x52f98b2c
  43650c:	cs add bh,0xd7
  436510:	adc    BYTE PTR [esi+0x3223e148],al
  436516:	adc    al,0x73
  436518:	xchg   BYTE PTR [edx+0x12],cl
  43651b:	jmp    0xd85fdfbe
  436520:	pop    ss
  436521:	inc    edx
  436522:	adc    al,0xfa
  436524:	loope  0x436545
  436526:	xchg   DWORD PTR [ecx+0x46],esi
  436529:	lock (bad) 
  43652b:	call   0xffffdf41
  436530:	sahf   
  436531:	add    dl,BYTE PTR [ebp+0x2a]
  436534:	fidivr DWORD PTR [ebp-0x3c6fff34]
  43653a:	int3   
  43653b:	int3   
  43653c:	jo     0x436501
  43653e:	int3   
  43653f:	int3   
  436540:	sbb    DWORD PTR [esp+ebp*8+0x53],edi
  436544:	or     bh,BYTE PTR [ecx+edx*8-0x75]
  436548:	(bad)  
  436549:	pop    ebp
  43654a:	mov    bh,bh
  43654c:	ret    
  43654d:	push   0x7d7b
  436552:	jl     0x43655a
  436554:	mov    edi,0xf9952880
  436559:	dec    DWORD PTR [esi+eax*1+0x40c80000]
  436560:	or     DWORD PTR [eax+0x58],0x77
  436564:	push   eax
  436565:	or     ah,bh
  436567:	mov    cl,BYTE PTR [edx]
  436569:	push   DWORD PTR [edx+edx*4-0x2c93af7c]
  436570:	cmp    BYTE PTR [eax+0x58],0x77
  436574:	ret    
  436575:	rcr    DWORD PTR ds:0x6b0c87f7,0x6b
  43657c:	inc    eax
  43657d:	adc    al,0xcf
  43657f:	out    0x13,al
  436581:	mov    edx,DWORD PTR [esi+esi*8+0x55aacb81]
  436588:	mov    BYTE PTR [ebx+ebp*1],cl
  43658b:	imul   eax,DWORD PTR [eax+0x14],0xffffffaf
  43658f:	out    0x13,al
  436591:	mov    edx,DWORD PTR [esi+edi*8-0x7e]
  436595:	retf   
  436596:	imul   edx,DWORD PTR [ebp-0x47],0xffffffe9
  43659a:	or     al,0x7e
  43659c:	or     al,0x17
  43659e:	ret    
  43659f:	ds adc al,0x5f
  4365a2:	mov    DWORD PTR [edi+0x74],eax
  4365a5:	sbb    bh,BYTE PTR [edi+0x36]
  4365a8:	adc    al,0x8b
  4365aa:	and    al,0xfe
  4365ac:	inc    edx
  4365ad:	mov    DWORD PTR [ecx],esp
  4365af:	inc    BYTE PTR [ecx-0x7dc62e2]
  4365b5:	push   cs
  4365b6:	add    BYTE PTR [eax],al
  4365b8:	es push edi
  4365ba:	add    eax,0x3fa75df9
  4365bf:	and    esi,0xe
  4365c2:	lahf   
  4365c3:	pop    edx
  4365c4:	push   esi
  4365c5:	outs   dx,BYTE PTR ds:[esi]
  4365c6:	(bad)  
  4365c7:	int3   
  4365c8:	loope  0x4365b1
  4365ca:	(bad)  
  4365cb:	int3   
  4365cc:	(bad)  [edi-0x3f]
  4365cf:	int3   
  4365d0:	rcl    DWORD PTR [edi-0x3f],1
  4365d3:	int3   
  4365d4:	imul   eax,esi,0x471eec8a
  4365da:	fst    QWORD PTR [ecx+0x18]
  4365dd:	(bad)  
  4365de:	mov    eax,ds:0xfe83542d
  4365e3:	call   FWORD PTR [ebp+0x20d1ec9b]
  4365e9:	pop    DWORD PTR [ebx+0x62]
  4365ec:	push   ss
  4365ed:	out    0xc8,eax
  4365ef:	(bad)  
  4365f1:	pushf  
  4365f2:	mov    fs,WORD PTR [edx-0x62]
  4365f5:	imul   ecx,DWORD PTR [eax],0x850163b1
  4365fb:	dec    esp
  4365fc:	loopne 0x436679
  4365fe:	cmp    eax,0x1798457d
  436603:	in     al,0x6e
  436605:	or     DWORD PTR [edx-0x2b],edi
  436608:	mov    ch,0xbf
  43660a:	or     BYTE PTR [ecx-0x7cfc972f],dh
  436610:	dec    edi
  436611:	scas   eax,DWORD PTR es:[edi]
  436612:	out    dx,eax
  436613:	or     BYTE PTR [edx+0x57],dl
  436616:	sub    ah,al
  436618:	es jecxz 0x436657
  43661b:	bound  eax,QWORD PTR [eax]
  43661d:	add    BYTE PTR [edi+edx*2],dl
  436620:	sub    ah,al
  436622:	cmc    
  436623:	jp     0x4365bc
  436625:	stc    
  436626:	cli    
  436627:	mov    eax,0x612a0486
  43662c:	fsub   st(4),st
  43662e:	imul   eax,DWORD PTR [edx],0x43
  436631:	cmp    DWORD PTR [eax],ebx
  436633:	lahf   
  436634:	mov    esp,0xbcb5e9c4
  436639:	mov    ecx,es
  43663b:	test   bl,bh
  43663d:	or     ah,BYTE PTR [eax]
  43663f:	aas    
  436640:	out    dx,eax
  436641:	xor    al,0x6c
  436643:	jge    0x436604
  436645:	mov    WORD PTR [ebp-0x6],ds
  436648:	pop    ebp
  436649:	xor    esp,DWORD PTR [ecx-0x1d7b3083]
  43664f:	mov    BYTE PTR [esi],dl
  436651:	les    ebx,FWORD PTR [edx]
  436653:	das    
  436654:	fisttp WORD PTR [ebp+0x7eaa86e6]
  43665a:	in     eax,dx
  43665b:	out    dx,al
  43665c:	out    0x3,al
  43665e:	popf   
  43665f:	add    ah,bh
  436661:	add    ebx,DWORD PTR [ecx+eax*4+0x13]
  436665:	lock jp 0x4365f0
  436668:	hlt    
  436669:	add    DWORD PTR [ebp-0x184d9bfe],ebx
  43666f:	ror    BYTE PTR [eax],1
  436671:	and    DWORD PTR [ecx-0x44f01881],0xffffff87
  436678:	imul   esi,DWORD PTR [ecx+ebp*4],0x2f8ae702
  43667f:	xor    ebx,ebx
  436681:	add    eax,DWORD PTR [eax]
  436683:	add    BYTE PTR [ebp-0x26919c87],bl
  436689:	sti    
  43668a:	out    0x3,al
  43668c:	sbb    bh,BYTE PTR [esi]
  43668e:	imul   edi,DWORD PTR [esi-0x10412cdf],0x22
  436695:	mov    bh,ah
  436697:	mov    ah,ch
  436699:	fwait
  43669a:	jmp    0x1c30:0x6020e0d2
  4366a1:	add    eax,0x8a5fdaa7
  4366a6:	mov    ebx,0x4878c9
  4366ab:	cdq    
  4366ac:	add    cl,BYTE PTR [eax+0x3785ebf9]
  4366b2:	jge    0x4366d4
  4366b4:	lahf   
  4366b5:	or     eax,DWORD PTR [ebx]
  4366b7:	test   al,0x27
  4366b9:	dec    eax
  4366ba:	in     eax,0xeb
  4366bc:	out    dx,eax
  4366bd:	inc    edi
  4366be:	stc    
  4366bf:	addr16 xchg ecx,eax
  4366c1:	out    dx,al
  4366c2:	(bad)  
  4366c3:	call   0xd593dbdf
  4366c8:	sahf   
  4366c9:	add    al,BYTE PTR [edi+0x526436d]
  4366cf:	jmp    0xe942b772
  4366d4:	sahf   
  4366d5:	add    ah,BYTE PTR [edx+0x70]
  4366d8:	mov    al,BYTE PTR [edx+0x2f906dc2]
  4366de:	adc    al,0xe9
  4366e0:	sahf   
  4366e1:	add    bh,cl
  4366e3:	ja     0x4366db
  4366e5:	hlt    
  4366e6:	(bad)  
  4366e7:	call   0xad6066ec
  4366ec:	je     0x4366d0
  4366ee:	fwait
  4366ef:	push   ecx
  4366f0:	inc    esp
  4366f1:	push   0xffffff9c
  4366f3:	fild   WORD PTR [ecx-0x6788fab]
  4366f9:	push   0xfffffff0
  4366fb:	xor    dl,BYTE PTR [ecx+ebp*8]
  4366fe:	sahf   
  4366ff:	mov    BYTE PTR [ebp+0x5b],dh
  436702:	sbb    DWORD PTR [ebx],edi
  436704:	cld    
  436705:	jb     0x436694
  436707:	cli    
  436708:	xchg   BYTE PTR [ebx],dh
  43670a:	popf   
  43670b:	jge    0x43668f
  43670d:	sbb    DWORD PTR ds:0x3750f987,ebp
  436713:	inc    ebp
  436714:	test   DWORD PTR [ecx-0x17],eax
  436717:	mov    WORD PTR [ebp+0x62],?
  43671a:	mov    eax,ds:0x27ba0f06
  43671f:	(bad)  
  436720:	call   0xf9cc9c96
  436725:	add    BYTE PTR [edi-0x7c],cl
  436728:	les    eax,FWORD PTR [edi+eax*4]
  43672b:	ins    BYTE PTR es:[edi],dx
  43672c:	stc    
  43672d:	jl     0x43678a
  43672f:	jl     0x43676e
  436731:	clc    
  436732:	jge    0x436776
  436734:	clc    
  436735:	jmp    0x43672a
  436737:	jns    0x4366dd
  436739:	and    al,0xc4
  43673b:	add    al,BYTE PTR [eax]
  43673d:	add    BYTE PTR [edi],bh
  43673f:	add    eax,0x2b41450
  436744:	or     DWORD PTR [edx+esi*1-0x3bfffd31],0x7b
  43674c:	xchg   esi,eax
  43674d:	pusha  
  43674e:	add    BYTE PTR [eax],al
  436750:	mov    edi,0x3d480002
  436755:	add    eax,0x2b41450
  43675a:	bound  eax,QWORD PTR [ecx]
  43675c:	cmovne eax,DWORD PTR [ecx-0x41b72]
  436763:	call   FWORD PTR [eax+ebx*8-0x1c]
  436767:	call   FWORD PTR [ebx+0x7c]
  43676a:	jle    0x4367cc
  43676c:	outs   dx,DWORD PTR ds:[esi]
  43676d:	add    al,BYTE PTR [eax]
  43676f:	cmp    DWORD PTR [esi],0x70
  436772:	stc    
  436773:	xchg   ebp,eax
  436774:	nop
  436775:	xchg   edx,eax
  436776:	stc    
  436777:	(bad)  
  436778:	out    dx,eax
  436779:	jl     0x4367cf
  43677b:	adc    al,0x44
  43677d:	add    al,BYTE PTR [ecx+0x2caba9c]
  436783:	add    BYTE PTR [ecx+eax*1],dh
  436786:	mov    ss,WORD PTR [eax+eiz*2+0x2]
  43678a:	add    BYTE PTR [ebx+0x13d2ca],cl
  436790:	inc    esp
  436791:	jns    0x436717
  436793:	mov    ds,WORD PTR [eax+0x52fffffb]
  436799:	jnp    0x4367af
  43679b:	xchg   edx,esp
  43679d:	add    dl,BYTE PTR [edi+ebx*4]
  4367a0:	popf   
  4367a1:	and    BYTE PTR [ecx-0x8],al
  4367a4:	and    DWORD PTR [edx],0xfffffff0
  4367a7:	mov    BYTE PTR [edi],dl
  4367a9:	sub    dl,dh
  4367ab:	push   edi
  4367ac:	xchg   ecx,eax
  4367ad:	fwait
  4367ae:	std    
  4367af:	test   DWORD PTR [ecx],esp
  4367b1:	xchg   esi,eax
  4367b2:	xor    eax,0x9d000014
  4367b7:	fwait
  4367b8:	add    ah,0x99
  4367bb:	mov    eax,ds:0xca1309ae
  4367c0:	push   cs
  4367c1:	std    
  4367c2:	mov    ds:0x5885ad25,eax
  4367c7:	repz xchg ecx,eax
  4367c9:	mov    esi,0x58022815
  4367ce:	xchg   ecx,eax
  4367cf:	fwait
  4367d0:	std    
  4367d1:	or     dl,ch
  4367d3:	jmp    0x61fe:0x1c518719
  4367da:	adc    al,0xc8
  4367dc:	jb     0x4367dc
  4367de:	and    eax,0x9d051d15
  4367e3:	fwait
  4367e4:	ds pushfw 
  4367e7:	and    BYTE PTR [ebx-0x5a3c2f79],bh
  4367ed:	into   
  4367ee:	mov    DWORD PTR [esp+edx*4+0x7d],eax
  4367f2:	pop    ecx
  4367f3:	xchg   edi,eax
  4367f4:	cmp    BYTE PTR [edx-0x25033],0x9f
  4367fb:	mov    WORD PTR [edx-0x6b9ba5c2],es
  436801:	stc    
  436802:	and    eax,edi
  436804:	out    dx,eax
  436805:	dec    DWORD PTR [edx+0x20]
  436808:	jnp    0x43685e
  43680a:	test   eax,0x1384fd9b
  43680f:	sti    
  436810:	push   es
  436811:	add    BYTE PTR [ebp+0x14084220],bl
  436817:	das    
  436818:	jnp    0x436876
  43681a:	add    BYTE PTR [eax],al
  43681c:	xchg   esi,eax
  43681d:	add    ah,bh
  43681f:	add    esp,DWORD PTR [eax]
  436821:	mov    esp,0x8506144f
  436826:	push   edx
  436827:	mov    BYTE PTR [esi-0x7a],ah
  43682a:	pop    esp
  43682b:	ins    DWORD PTR es:[edi],dx
  43682c:	sar    ecx,0xe6
  43682f:	add    eax,DWORD PTR ds:0xf4943c53
  436835:	and    al,0x8e
  436837:	mov    dh,bh
  436839:	es es (bad) 
  43683c:	shl    DWORD PTR [ebp-0x4a1638cd],1
  436842:	sub    eax,edi
  436844:	loope  0x4367fb
  436846:	mov    ecx,0x6178cd88
  43684b:	neg    DWORD PTR [ecx+0x2786e702]
  436851:	outs   dx,BYTE PTR ds:[esi]
  436852:	out    0x3,eax
  436854:	popf   
  436855:	sub    al,0xff
  436857:	inc    edi
  436858:	mov    ah,0x84
  43685a:	jmp    0x9d03:0xedda1f87
  436861:	jne    0x4368cc
  436863:	jl     0x4367ff
  436865:	add    ah,bh
  436867:	cmp    DWORD PTR [ebp-0x36],esi
  43686a:	mov    ecx,0x69768493
  43686f:	aam    0xa1
  436871:	add    ah,bh
  436873:	xor    eax,DWORD PTR [ebp+0x6493b4b6]
  436879:	and    BYTE PTR [ebx-0x190edb00],0x3
  436880:	add    BYTE PTR [eax],al
  436882:	popf   
  436883:	xchg   edi,eax
  436884:	out    0x80,al
  436886:	fiadd  DWORD PTR [edx]
  436888:	loop   0x4368e3
  43688a:	adc    eax,0x9d442657
  43688f:	sbb    al,0x66
  436891:	push   eax
  436892:	daa    
  436893:	add    eax,0x29d03ed
  436898:	add    ah,bh
  43689a:	mov    ecx,edi
  43689c:	mov    cl,0x59
  43689e:	ret    0x3fc5
  4368a1:	jmp    0x77ff6e6a
  4368a6:	scas   eax,DWORD PTR es:[edi]
  4368a7:	cld    
  4368a8:	(bad)  
  4368a9:	call   0xde7b784c
  4368ae:	fs jp  0x436857
  4368b1:	stos   BYTE PTR es:[edi],al
  4368b2:	pop    esi
  4368b3:	add    ah,BYTE PTR [edx+0x6a]
  4368b6:	dec    ebp
  4368b7:	js     0x436933
  4368b9:	jecxz  0x436859
  4368bb:	add    al,BYTE PTR [eax]
  4368bd:	mov    ah,0xcb
  4368bf:	cli    
  4368c0:	mov    cl,0x79
  4368c2:	js     0x436889
  4368c4:	aas    
  4368c5:	jmp    0x7fff6e4e
  4368ca:	scas   eax,DWORD PTR es:[edi]
  4368cb:	cld    
  4368cc:	(bad)  
  4368cd:	call   0x6a737870
  4368d2:	sbb    edi,edi
  4368d4:	jl     0x4368d7
  4368d6:	call   0xf42:0x5d64b007
  4368dd:	call   0xe955c3fe
  4368e2:	sahf   
  4368e3:	sub    BYTE PTR [ebp+0x1c000031],bh
  4368e9:	ss inc eax
  4368eb:	clc    
  4368ec:	mov    eax,ds:0x9ef7a878
  4368f1:	add    bl,BYTE PTR [edx-0x56]
  4368f4:	and    ebx,DWORD PTR [edx+0x42b26bfe]
  4368fa:	psubsb mm3,QWORD PTR [edx+ebx*2]
  4368fe:	adc    ch,cl
  436900:	sahf   
  436901:	sub    BYTE PTR [ebp-0x737ac996],bh
  436907:	sub    eax,0x66fef3d9
  43690c:	out    0xf0,al
  43690e:	(bad)  
  43690f:	call   0x10faea0
  436914:	lock inc edx
  436916:	int3   
  436917:	int3   
  436918:	add    BYTE PTR [ebx-0x34],al
  43691b:	int3   
  43691c:	mov    DWORD PTR [ebx],eax
  43691e:	in     al,dx
  43691f:	mov    edi,DWORD PTR [ecx-0x7a]
  436922:	test   BYTE PTR [eax-0x676c0],cl
  436928:	xchg   DWORD PTR [esi+0x5],esi
  43692b:	jle    0x43690a
  43692d:	retf   
  43692e:	dec    ebp
  43692f:	mov    ebp,ecx
  436931:	mov    bl,BYTE PTR [edi-0x75]
  436934:	call   0x7c7:0x6fe2cad9
  43693b:	data16 std 
  43693d:	push   cs
  43693e:	mov    eax,0x6fef416
  436943:	mov    dh,0x1c
  436945:	aaa    
  436946:	push   cs
  436947:	add    ah,al
  436949:	add    edx,DWORD PTR [eax+0x14]
  43694c:	add    BYTE PTR [eax],al
  43694e:	cmp    al,0x93
  436950:	or     cl,BYTE PTR [edi]
  436952:	push   0x17
  436954:	mov    cl,0x16
  436956:	(bad)  
  436957:	(bad)  
  436958:	test   BYTE PTR [eax-0x38],0x3
  43695c:	dec    eax
  43695d:	adc    al,0x3f
  43695f:	iret   
  436960:	pop    es
  436961:	mov    al,dl
  436963:	lea    eax,[eax+edx*4-0x682c0]
  43696a:	jae    0x436933
  43696c:	adc    esi,DWORD PTR [ecx+0x66c36084]
  436972:	inc    edi
  436973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436974:	or     DWORD PTR [ebp+0x54],0xffffff87
  436978:	mov    edx,0xbbf6edf3
  43697d:	push   ss
  43697e:	je     0x436986
  436980:	adc    DWORD PTR [ebp+0x40],0x2c
  436984:	xor    DWORD PTR [eax-0x68344],0x1622f92
  43698e:	popf   
  43698f:	cmp    DWORD PTR [ebx-0x7c6ebd0b],0xffffffc4
  436996:	mov    eax,ds:0x2662c326
  43699b:	pop    ss
  43699c:	clc    
  43699d:	popa   
  43699e:	dec    esi
  43699f:	mov    es,WORD PTR [ebx+0x7be29ebf]
  4369a5:	mov    esp,0x84fd6bb3
  4369aa:	pusha  
  4369ab:	jnp    0x4369d4
  4369ad:	pop    es
  4369ae:	sub    eax,0xfff694
  4369b3:	add    BYTE PTR [edx],al
  4369b5:	in     eax,0x30
  4369b7:	or     al,0x87
  4369b9:	push   0xffffff95
  4369bb:	sahf   
  4369bc:	test   BYTE PTR [eax-0x71],0x7d
  4369c0:	loope  0x436a31
  4369c2:	sub    bh,BYTE PTR [ebp-0x333fe02f]
  4369c8:	jmp    0xe2102a04
  4369cd:	das    
  4369ce:	ror    ah,0xd9
  4369d1:	mov    esi,0xbc6cec7c
  4369d6:	jl     0x436a33
  4369d8:	lea    esp,[ecx-0x135a8c84]
  4369de:	dec    ebp
  4369df:	test   BYTE PTR [ebp+0x4afffd6b],bl
  4369e5:	sub    BYTE PTR [ecx-0x4],al
  4369e8:	popf   
  4369e9:	imul   edi,ebp,0xffffffff
  4369ec:	adc    edi,DWORD PTR ds:0xd81e3a7b
  4369f2:	(bad)  
  4369f4:	or     DWORD PTR [ebp+edx*4+0x72],esp
  4369f8:	ja     0x436a42
  4369fa:	nop
  4369fb:	xchg   edx,ebx
  4369fd:	vmwrite eax,DWORD PTR [edx-0x29b7b]
  436a04:	int    0x43
  436a06:	dec    eax
  436a07:	cld    
  436a08:	pop    edx
  436a09:	add    ah,BYTE PTR [edx-0x11d9d882]
  436a0f:	add    ebx,DWORD PTR [ebp+0x46cc7ed3]
  436a15:	or     DWORD PTR [edx+0x61000084],0x45c96e0a
  436a1f:	xor    edi,DWORD PTR [ecx-0x70]
  436a22:	and    al,0x8d
  436a24:	pop    ecx
  436a25:	pop    ebx
  436a26:	pop    DWORD PTR [edx]
  436a28:	out    0x7c,eax
  436a2a:	daa    
  436a2b:	scas   al,BYTE PTR es:[edi]
  436a2c:	stc    
  436a2d:	add    ebx,DWORD PTR [ebp-0x7602da7b]
  436a33:	inc    ebx
  436a34:	ffree  st(2)
  436a36:	sti    
  436a37:	add    al,0x28
  436a39:	call   0x4ca8:0x8fac89f8
  436a40:	mov    dl,0x8
  436a42:	add    BYTE PTR ds:0x8d9e3c64,al
  436a48:	sbb    BYTE PTR [esi-0x68],bh
  436a4b:	push   es
  436a4c:	faddp  st(5),st
  436a4e:	dec    esp
  436a4f:	sbb    eax,0x8799466e
  436a54:	daa    
  436a55:	pop    ss
  436a56:	test   eax,0x4df78c8d
  436a5b:	aad    0x96
  436a5d:	cmp    ebp,eax
  436a5f:	inc    edx
  436a60:	stc    
  436a61:	(bad)  
  436a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a63:	test   BYTE PTR [ebx],ch
  436a65:	repz mov ebx,0x9d03e7cd
  436a6b:	and    DWORD PTR [ecx-0x18fd6284],0x7
  436a72:	xchg   esp,eax
  436a73:	xchg   BYTE PTR [esp+eax*1-0x45f1fd63],bl
  436a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a7b:	xchg   BYTE PTR [esp+eax*1+0x29d0000],dl
  436a82:	outs   dx,BYTE PTR ds:[esi]
  436a83:	jle    0x436aae
  436a85:	sbb    DWORD PTR [eax],eax
  436a87:	jmp    0xd5bef02a
  436a8c:	sbb    eax,0x206a03d2
  436a91:	or     al,0x7a
  436a93:	cmp    eax,DWORD PTR [ebx+0xe0fbe85]
  436a99:	arpl   WORD PTR [ebp+0x6e2351f],ax
  436a9f:	outs   dx,DWORD PTR ds:[esi]
  436aa0:	loope  0x436ab6
  436aa2:	add    cl,ch
  436aa4:	sub    esi,DWORD PTR [edx-0x7fd4ce66]
  436aaa:	stc    
  436aab:	bound  esp,QWORD PTR [ebx+0xa]
  436aae:	mov    BYTE PTR ds:0xf5427998,al
  436ab4:	or     esi,DWORD PTR [edx-0x7ff46f66]
  436aba:	stc    
  436abb:	bound  esp,QWORD PTR [ebx+0x16]
  436abe:	test   DWORD PTR [edi-0xee3780a],esi
  436ac4:	test   BYTE PTR [si-0x6121],bh
  436ac9:	add    bh,cl
  436acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436acc:	shl    BYTE PTR [eax-0x1ae92cf0],cl
  436ad2:	int3   
  436ad3:	adc    ebx,DWORD PTR [esi]
  436ad5:	inc    ebx
  436ad6:	in     eax,dx
  436ad7:	pusha  
  436ad8:	sbb    edi,DWORD PTR [edi-0x1b6116ee]
  436ade:	xchg   BYTE PTR [edi+0x61],bl
  436ae1:	adc    al,0x0
  436ae3:	jmp    0xe4a6ae8
  436ae8:	bound  ebx,QWORD PTR [edx]
  436aea:	jmp    esp
  436aec:	push   es
  436aed:	push   edi
  436aee:	jmp    0x202c6b07
  436af3:	mov    edi,0xbf086ffd
  436af8:	adc    ch,cl
  436afa:	sahf   
  436afb:	test   DWORD PTR [ebx-0x33],eax
  436afe:	test   DWORD PTR [eax+ebp*1+0x36f00],0x46fd28b
  436b09:	add    BYTE PTR [ebx+eax*8+0x4f],dh
  436b0d:	inc    ecx
  436b0e:	mov    ch,0xc4
  436b10:	dec    ecx
  436b11:	call   0x3aff56
  436b16:	mov    ecx,0x34098885
  436b1b:	add    edx,DWORD PTR [eax-0x73]
  436b1e:	(bad)  
  436b20:	(bad)  
  436b21:	inc    DWORD PTR [esi+esi*1-0x7d]
  436b25:	(bad)  
  436b26:	or     al,0x50
  436b28:	out    dx,al
  436b29:	jmp    FWORD PTR [ebx+0x1d14c484]
  436b2f:	stc    
  436b30:	(bad)  
  436b31:	inc    DWORD PTR [esp+edi*8]
  436b34:	test   DWORD PTR [edx+edx*1-0x1674fffd],edi
  436b3b:	jbe    0x436ac3
  436b3d:	inc    edi
  436b3e:	push   es
  436b3f:	test   cl,dh
  436b41:	or     eax,0x8b5e30da
  436b46:	test   BYTE PTR ds:0xe2cb,ah
  436b4c:	jg     0x436b8b
  436b4e:	adc    al,0x66
  436b50:	mov    ebp,0xc416b7f4
  436b55:	add    al,BYTE PTR [edi]
  436b57:	mov    dh,0x4a
  436b59:	retf   
  436b5a:	or     eax,0x4dfbb400
  436b5f:	or     BYTE PTR [edi+ebp*2],bh
  436b62:	or     bh,bh
  436b64:	add    dh,BYTE PTR [edi+0x8]
  436b67:	mov    dh,0x4a
  436b69:	into   
  436b6a:	or     eax,0x45fbb400
  436b6f:	adc    al,0xff
  436b71:	aaa    
  436b72:	or     BYTE PTR [eax-0x697b8e68],cl
  436b78:	sub    BYTE PTR [ebp-0x7],dh
  436b7b:	call   FWORD PTR [ebp+0x2c144254]
  436b81:	jl     0x436b5a
  436b83:	(bad)  
  436b86:	pushf  
  436b87:	jge    0x436be8
  436b89:	mov    ecx,0x5e219275
  436b8e:	std    
  436b8f:	inc    ebx
  436b91:	loop   0x436b14
  436b93:	mov    eax,0xe4fd6bab
  436b98:	scas   al,BYTE PTR es:[edi]
  436b99:	add    eax,0x62bbe0af
  436b9e:	cmp    DWORD PTR [eax+0x7cfd6b93],0x5c
  436ba5:	imul   esi,DWORD PTR [esi-0x76],0xfffd55e9
  436bac:	mov    ch,0x63
  436bae:	ss inc eax
  436bb0:	add    BYTE PTR [eax],al
  436bb2:	popf   
  436bb3:	add    edi,DWORD PTR [esp+eax*2+0x5d]
  436bb7:	imul   edi,DWORD PTR [eax-0x3e],0xfffffff5
  436bbb:	fwait
  436bbc:	cwde   
  436bbd:	stc    
  436bbe:	add    ch,cl
  436bc0:	(bad)  
  436bc1:	or     BYTE PTR [esi],ah
  436bc3:	ss pushf 
  436bc5:	xchg   edx,eax
  436bc6:	add    eax,0xea838ac5
  436bcb:	mov    bh,0x4
  436bcd:	test   ebx,ebx
  436bcf:	ret    
  436bd0:	(bad)  
  436bd1:	neg    dl
  436bd3:	sub    al,0x2b
  436bd5:	pop    edx
  436bd6:	jbe    0x436bc8
  436bd8:	mov    al,ds:0xc02fde5b
  436bdd:	int3   
  436bde:	sar    DWORD PTR [esi-0x58d91388],1
  436be4:	stc    
  436be5:	or     BYTE PTR [edx],al
  436be7:	scas   eax,DWORD PTR es:[edi]
  436be8:	in     eax,dx
  436be9:	dec    edi
  436bea:	mov    ch,0x89
  436bec:	dec    ebx
  436bed:	stc    
  436bee:	mov    ds:0xf804c7e8,al
  436bf3:	sub    al,al
  436bf5:	int3   
  436bf6:	popa   
  436bf7:	add    dh,BYTE PTR [ebx-0x54b1a641]
  436bfd:	mov    edi,0x793c4e51
  436c02:	mov    DWORD PTR [ecx+0x6acd0024],ecx
  436c08:	imul   ecx,DWORD PTR [esi+0x64],0x7d
  436c0c:	data16 (bad) 
  436c0e:	cdq    
  436c0f:	fbld   TBYTE PTR [ebp-0x64b19641]
  436c15:	mov    edi,0x4e610000
  436c1a:	mov    bl,0xbf
  436c1c:	pop    ecx
  436c1d:	dec    esi
  436c1e:	stos   DWORD PTR es:[edi],eax
  436c1f:	mov    edi,0x74804e51
  436c24:	popf   
  436c25:	add    ah,bh
  436c27:	jle    0x436c03
  436c29:	add    ah,bh
  436c2b:	jle    0x436c0f
  436c2d:	add    ah,bh
  436c2f:	jle    0x436c0b
  436c31:	add    ah,bh
  436c33:	jle    0x436c97
  436c35:	add    ah,bh
  436c37:	jle    0x436c93
  436c39:	add    ah,bh
  436c3b:	add    ebx,DWORD PTR [ebp-0x62fc17fe]
  436c41:	add    ah,dh
  436c43:	add    ebx,DWORD PTR [ebp-0x62fc1dfe]
  436c49:	add    dh,dl
  436c4b:	add    ebx,DWORD PTR [ebp-0x62fc25fe]
  436c51:	add    dh,dl
  436c53:	add    ebx,DWORD PTR [ebp-0x62fc55fe]
  436c59:	add    ah,BYTE PTR [edx]
  436c5b:	add    ebx,DWORD PTR [ebp-0x62fde5fe]
  436c61:	add    dl,BYTE PTR [edx]
  436c63:	add    BYTE PTR [ebp-0x62fbf5fe],bl
  436c69:	add    al,BYTE PTR [edx]
  436c6b:	cld    
  436c6c:	stos   BYTE PTR es:[edi],al
  436c6d:	jl     0x436c69
  436c6f:	jmp    0x436c13
  436c71:	jl     0x436c73
  436c73:	mul    BYTE PTR [esi+0x7c]
  436c76:	stc    
  436c77:	out    dx,al
  436c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c79:	add    al,BYTE PTR [eax]
  436c7b:	out    0x0,al
  436c7d:	add    BYTE PTR [esi],dl
  436c7f:	add    eax,DWORD PTR [eax]
  436c81:	ficom  WORD PTR [esi]
  436c83:	jl     0x436c7e
  436c85:	(bad)  
  436c86:	es jle 0x436c82
  436c89:	into   
  436c8a:	add    al,BYTE PTR es:[eax]
  436c8d:	(bad)  
  436c8e:	push   ss
  436c8f:	or     al,BYTE PTR [eax]
  436c91:	mov    esi,0xb6001a16
  436c96:	cmp    al,BYTE PTR es:[eax]
  436c99:	scas   al,BYTE PTR es:[edi]
  436c9a:	es cli 
  436c9c:	jmp    DWORD PTR [ebp-0x61ff85ea]
  436ca2:	push   ss
  436ca3:	jp     0x436ca4
  436ca5:	xchg   ebp,eax
  436ca6:	es jp  0x436ca6
  436ca9:	lea    esp,[esi]
  436cab:	jp     0x436cae
  436cad:	xchg   BYTE PTR [esi],dl
  436caf:	jp     0x436cba
  436cb1:	jle    0x436cc9
  436cb3:	jp     0x436cce
  436cb5:	jbe    0x436cdd
  436cb7:	jp     0x436cf2
  436cb9:	outs   dx,BYTE PTR ds:[esi]
  436cba:	es jp  0x436d36
  436cbd:	pushw  ss
  436cbf:	jp     0x436cba
  436cc1:	mov    dh,0xcc
  436cc3:	iret   
  436cc4:	dec    esp
  436cc5:	jne    0x436ce9
  436cc7:	outs   dx,DWORD PTR ds:[esi]
  436cc8:	inc    eax
  436cc9:	dec    ebp
  436cca:	jb     0x436cc2
  436ccc:	and    esp,DWORD PTR [ecx+0x721bf86b]
  436cd2:	scas   eax,DWORD PTR es:[edi]
  436cd3:	push   es
  436cd4:	test   edi,ebp
  436cd6:	mov    ds:0xd2437d52,eax
  436cdb:	test   BYTE PTR [ebp+ecx*8-0xe],al
  436cdf:	test   BYTE PTR [ebp+eax*8+0x0],dl
  436ce3:	add    BYTE PTR [edx-0x7d32937a],dh
  436ce9:	test   DWORD PTR [edx-0x7],ecx
  436cec:	xor    ebx,eax
  436cee:	or     eax,DWORD PTR [eax]
  436cf0:	iret   
  436cf1:	sahf   
  436cf2:	out    dx,eax
  436cf3:	fnsave [edi-0x7a168664]
  436cf9:	push   es
  436cfa:	add    BYTE PTR [eax],al
  436cfc:	xchg   DWORD PTR [ecx+eax*4-0x7db567a4],edi
  436d03:	ins    BYTE PTR es:[edi],dx
  436d04:	cwde   
  436d05:	pop    esi
  436d06:	or     BYTE PTR [eax+ebp*4+0x76],0x84
  436d0b:	inc    edi
  436d0c:	nop
  436d0d:	sti    
  436d0e:	inc    esi
  436d0f:	push   eax
  436d10:	in     eax,dx
  436d11:	cmp    esp,DWORD PTR [eax+ecx*1]
  436d14:	in     eax,dx
  436d15:	xor    esp,DWORD PTR [esp+ecx*1]
  436d18:	int3   
  436d19:	push   es
  436d1a:	add    BYTE PTR [eax],al
  436d1c:	inc    esp
  436d1d:	cld    
  436d1e:	inc    esi
  436d1f:	push   esp
  436d20:	pop    es
  436d21:	lahf   
  436d22:	dec    eax
  436d23:	mov    DWORD PTR [eax],edi
  436d25:	pop    ebx
  436d26:	mov    cl,0x1
  436d28:	inc    esp
  436d29:	(bad)  
  436d2a:	dec    DWORD PTR [edx-0x1f34d16d]
  436d30:	ins    BYTE PTR es:[edi],dx
  436d31:	std    
  436d32:	inc    ebx
  436d33:	and    al,0x38
  436d35:	cld    
  436d36:	sub    BYTE PTR ds:[edi+0x38],bh
  436d3a:	xor    BYTE PTR [ebx+0x448252ab],cl
  436d40:	cwde   
  436d41:	push   edx
  436d42:	or     BYTE PTR [eax+ebx*4+0x56],0x82
  436d47:	push   esp
  436d48:	add    BYTE PTR [eax],al
  436d4a:	test   al,0x4e
  436d4c:	test   BYTE PTR [edi-0x74],ch
  436d4f:	sti    
  436d50:	push   esi
  436d51:	cmp    al,0x6f
  436d53:	or     esp,DWORD PTR [esp+ebp*1]
  436d56:	outs   dx,DWORD PTR ds:[esi]
  436d57:	xor    esp,DWORD PTR [esp+edx*1]
  436d5a:	iret   
  436d5b:	mov    eax,0x4647226f
  436d60:	add    ebp,DWORD PTR [ebx]
  436d62:	xchg   edx,eax
  436d63:	(bad)  
  436d64:	or     eax,DWORD PTR [eax]
  436d66:	mov    ah,0xfe
  436d68:	and    al,cl
  436d6a:	popf   
  436d6b:	out    0x0,al
  436d6d:	and    al,0x91
  436d6f:	sbb    BYTE PTR [ecx-0x7b],bl
  436d72:	aad    0xb7
  436d74:	mov    ebp,0x8edf7ed
  436d79:	and    al,0xb9
  436d7b:	loop   0x436d85
  436d7d:	and    al,0xa9
  436d7f:	add    al,0xe5
  436d81:	lock arpl WORD PTR [ebp-0x3],bp
  436d85:	call   FWORD PTR [ebp+0x5d2cf3cf]
  436d8b:	out    0xfd,al
  436d8d:	inc    ecx
  436d8e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  436d90:	cmp    DWORD PTR [ebp+0x5a49c95],0x75
  436d97:	push   ebp
  436d98:	pushf  
  436d99:	test   ecx,ebx
  436d9b:	pop    es
  436d9c:	enter  0x907c,0x1b
  436da0:	arpl   WORD PTR ds:0x83f86d9d,di
  436da6:	adc    al,0x6e
  436da8:	std    
  436da9:	push   DWORD PTR [edx+0x4d3404]
  436daf:	add    ah,cl
  436db1:	cmp    eax,0x47a18568
  436db6:	jle    0x436dec
  436db8:	jns    0x436e25
  436dba:	std    
  436dbb:	pop    ds
  436dbc:	popf   
  436dbd:	into   
  436dbe:	addr16 push esi
  436dc0:	into   
  436dc1:	fwait
  436dc2:	adc    BYTE PTR [esi+ecx*8+0x2b],al
  436dc6:	neg    DWORD PTR [ebp+0x633ee51c]
  436dcc:	mov    edx,DWORD PTR [esi+0xa]
  436dcf:	cmp    BYTE PTR [ebx+edx*8],bl
  436dd2:	adc    eax,0xa4f8074
  436dd7:	xor    BYTE PTR [esi+eax*8],bl
  436dda:	adc    al,0x6a
  436ddc:	inc    eax
  436ddd:	mov    ds:0x6b15280a,al
  436de2:	std    
  436de3:	call   FWORD PTR [ebp+0x265f202]
  436de9:	imul   ebp,edi,0xffffff84
  436dec:	mov    ebp,0x9f8c6609
  436df1:	out    dx,eax
  436df2:	lock nop
  436df4:	jmp    0x436df8
  436df6:	out    0x83,eax
  436df8:	popf   
  436df9:	out    dx,eax
  436dfa:	in     al,0x9c
  436dfc:	test   eax,0x3033ec41
  436e01:	(bad)
  436e04:	popf   
  436e05:	add    ah,bh
  436e07:	pushf  
  436e08:	fwait
  436e09:	inc    ecx
  436e0a:	in     al,0x33
  436e0c:	sbb    ch,al
  436e0e:	out    0x4,al
  436e10:	popf   
  436e11:	add    ah,bh
  436e13:	sub    eax,0xddd20000
  436e18:	push   ds
  436e19:	popf   
  436e1a:	sbb    al,0x92
  436e1c:	mov    WORD PTR [si-0x1c0f],fs
  436e21:	aam    0x12
  436e23:	loopne 0x436ea0
  436e25:	jge    0x436e87
  436e27:	and    BYTE PTR [esi-0x119dae0d],0x9b
  436e2e:	and    BYTE PTR [esi],cl
  436e30:	retf   
  436e31:	jl     0x436e14
  436e33:	push   ds
  436e34:	(bad)  
  436e36:	dec    edi
  436e37:	(bad)  
  436e38:	jmp    0x436eac
  436e3a:	sbb    eax,DWORD PTR [esi-0x33]
  436e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e3e:	call   0x8f06d9a9
  436e43:	sbb    ebp,DWORD PTR [eax+0x20acad9b]
  436e49:	or     BYTE PTR [ecx+0x5b81ea12],bh
  436e4f:	(bad)  
  436e50:	out    0x3,al
  436e52:	stos   BYTE PTR es:[edi],al
  436e53:	out    dx,al
  436e54:	add    dh,al
  436e56:	ins    DWORD PTR es:[edi],dx
  436e57:	ds push eax
  436e59:	xor    BYTE PTR [ecx-0x128318fe],bl
  436e5f:	inc    edx
  436e60:	add    BYTE PTR [ebx-0x32],al
  436e63:	jle    0x436e2d
  436e65:	or     esi,0x9e1d8409
  436e6b:	add    al,BYTE PTR [eax]
  436e6d:	imul   edi,edi,0xe0cc740a
  436e73:	dec    edi
  436e74:	ins    DWORD PTR es:[edi],dx
  436e75:	clc    
  436e76:	sub    BYTE PTR [ecx+0x2d],ah
  436e79:	sub    DWORD PTR [eax],eax
  436e7b:	add    BYTE PTR [ebp+ebp*4-0x7a],bh
  436e7f:	xor    bl,BYTE PTR [esi]
  436e81:	mov    dh,0x10
  436e83:	sbb    bh,BYTE PTR [esi]
  436e85:	(bad)  
  436e86:	out    0x63,eax
  436e88:	push   ebx
  436e89:	mov    ebx,0x29ee8ff
  436e8e:	int    0xc9
  436e90:	mov    ecx,0x5c0ad720
  436e95:	inc    esi
  436e96:	jmp    0x436e82
  436e98:	adc    BYTE PTR cs:[ebp+ecx*1+0x71],0xf8
  436e9e:	hlt    
  436e9f:	out    dx,al
  436ea0:	stos   DWORD PTR es:[edi],eax
  436ea1:	or     ebp,DWORD PTR ds:0x86abb3a9
  436ea7:	mov    ds:0xba10b621,al
  436eac:	stc    
  436ead:	std    
  436eae:	out    0x72,eax
  436eb0:	ins    DWORD PTR es:[edi],dx
  436eb1:	push   ds
  436eb2:	add    al,0x62
  436eb4:	jne    0x436ed4
  436eb6:	or     al,0xca
  436eb8:	in     eax,dx
  436eb9:	jge    0x436ebf
  436ebb:	pop    eax
  436ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436ebd:	push   edx
  436ebe:	mov    edi,0xcc7e1193
  436ec3:	ret    
  436ec4:	cmp    al,BYTE PTR [esi-0x15]
  436ec7:	arpl   WORD PTR [ecx-0x55],cx
  436eca:	adc    dh,dh
  436ecc:	sub    BYTE PTR [eax-0x7d611700],0xdf
  436ed3:	out    0xa2,al
  436ed5:	jecxz  0x436f0c
  436ed7:	xor    BYTE PTR [esi+0x4d008607],cl
  436edd:	push   ebx
  436ede:	mov    ecx,0x29000066
  436ee3:	std    
  436ee4:	ret    0x8780
  436ee7:	outs   dx,BYTE PTR ds:[esi]
  436ee8:	int3   
  436ee9:	loopne 0x436eaa
  436eeb:	fwait
  436eec:	or     ch,0x3c
  436eef:	std    
  436ef0:	(bad)  
  436ef1:	inc    esp
  436ef3:	mov    ah,0xe0
  436ef5:	dec    eax
  436ef6:	fisub  WORD PTR [esi-0x66983ae5]
  436efc:	sti    
  436efd:	iret   
  436efe:	(bad)  
  436eff:	inc    BYTE PTR [eax-0x7bb09f8c]
  436f05:	(bad)  
  436f06:	pop    edi
  436f07:	aaa    
  436f08:	and    al,0x28
  436f0a:	dec    edi
  436f0b:	inc    ecx
  436f0c:	pop    es
  436f0d:	add    BYTE PTR [eax],0x4
  436f10:	add    BYTE PTR [eax],al
  436f12:	out    dx,eax
  436f13:	das    
  436f14:	and    al,0x18
  436f16:	dec    DWORD PTR [eax-0x69080ddd]
  436f1c:	sti    
  436f1d:	mov    DWORD PTR [edx-0x5],esi
  436f20:	dec    BYTE PTR [ecx+0x5681fd82]
  436f26:	inc    esi
  436f27:	test   BYTE PTR [esi-0x6c743fd],bh
  436f2d:	xchg   DWORD PTR [ebx+0x47c77b04],eax
  436f33:	xchg   esp,eax
  436f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f35:	mov    edx,DWORD PTR [eax+0x24e92562]
  436f3b:	xor    bh,0xff
  436f3e:	mov    bh,0x89
  436f40:	stc    
  436f41:	je     0x436f1c
  436f43:	inc    esi
  436f44:	jne    0x436f6a
  436f46:	add    BYTE PTR [eax],al
  436f48:	fadd   QWORD PTR [esi]
  436f4a:	scas   eax,DWORD PTR es:[edi]
  436f4b:	dec    edi
  436f4c:	jg     0x436f7d
  436f4e:	and    al,0x18
  436f50:	mov    ?,WORD PTR [eax+0x7c]
  436f53:	jmp    0x1826a5f
  436f58:	popf   
  436f59:	loope  0x436f94
  436f5b:	(bad)  
  436f5c:	and    ah,BYTE PTR [eax+0x64da7cfe]
  436f62:	mov    fs,WORD PTR [esi-0x67d2f3c]
  436f68:	rol    BYTE PTR [eax+0x5720093d],cl
  436f6e:	(bad)  
  436f6f:	call   FWORD PTR [ebp-0x62fffc1f]
  436f75:	imul   ebp,DWORD PTR [esi-0x3fb39a20],0x28e3dcfd
  436f7f:	and    al,0x95
  436f81:	hlt    
  436f82:	clc    
  436f83:	jge    0x436f09
  436f85:	ret    0xf982
  436f88:	xchg   edx,eax
  436f89:	les    edi,FWORD PTR [ecx+ecx*1]
  436f8c:	and    BYTE PTR [edx],cl
  436f8e:	(bad)  
  436f8f:	call   FWORD PTR [ebp-0x6200025d]
  436f95:	imul   esi,DWORD PTR [eax-0x46f71a20],0xfffffffd
  436f9c:	pop    esp
  436f9d:	loope  0x436fce
  436f9f:	and    al,0x91
  436fa1:	lock (bad) 
  436fa3:	jge    0x436fe9
  436fa5:	arpl   WORD PTR [ecx+edi*8-0x7a441eae],ax
  436fac:	add    BYTE PTR [eax],al
  436fae:	loope  0x436faf
  436fb0:	iret   
  436fb1:	lock fs icebp 
  436fb4:	(bad)  
  436fb6:	jne    0x437018
  436fb8:	mov    edi,0xfeae1f09
  436fbd:	call   FWORD PTR [ebp-0x5e824898]
  436fc3:	inc    edi
  436fc4:	int    0xff
  436fc6:	xchg   ecx,eax
  436fc7:	aas    
  436fc8:	fdivr  DWORD PTR [esi+0x4476fb9e]
  436fce:	rcl    DWORD PTR [ebx-0x38],0xbe
  436fd2:	mov    eax,DWORD PTR [edx]
  436fd4:	(bad)  
  436fd5:	fdivr  DWORD PTR [ebx]
  436fd7:	jb     0x436f5c
  436fd9:	jns    0x436fc7
  436fdb:	sub    DWORD PTR [ebp-0x67],edx
  436fde:	dec    edi
  436fdf:	cmp    DWORD PTR [eax],ebp
  436fe1:	push   cs
  436fe2:	push   ebx
  436fe3:	sub    DWORD PTR [eax],ebp
  436fe5:	xchg   ecx,eax
  436fe6:	add    DWORD PTR [edx+0x69c0d932],ecx
  436fec:	lahf   
  436fed:	js     0x437050
  436fef:	push   ds
  436ff0:	test   eax,0xd2ecda
  436ff6:	xor    DWORD PTR [esi],ebx
  436ff8:	rol    DWORD PTR [eax],cl
  436ffa:	lods   eax,DWORD PTR ds:[esi]
  436ffb:	sub    DWORD PTR [eax],ebx
  436ffd:	(bad)  
  436fff:	mov    DWORD PTR [ebx+0x28398adf],esp
  437005:	push   cs
  437006:	(bad)  
  437007:	sub    DWORD PTR [eax],ebp
  437009:	xchg   ecx,eax
  43700a:	cmp    DWORD PTR [ecx-0x762d2085],ecx
  437010:	fild   WORD PTR [eax]
  437013:	add    BYTE PTR [edx-0x68f257c7],dh
  437019:	sub    DWORD PTR [eax-0x2576c670],ebp
  43701f:	fdivr  DWORD PTR [eax+0x69]
  437022:	repz add BYTE PTR [ebp+0x29],ch
  437026:	mov    eax,0xdf1ee178
  43702b:	enter  0xec13,0xde
  43702f:	fmul   DWORD PTR [ebx]
  437031:	jno    0x436fb6
  437033:	js     0x437081
  437035:	sub    DWORD PTR [ebp+0x43716578],edx
  43703b:	js     0x436fe6
  43703d:	push   ds
  43703e:	ret    
  43703f:	call   0x7518:0x848a749b
  437046:	repnz or al,0xa4
  437049:	in     al,0xa3
  43704b:	js     0x437045
  43704d:	add    al,0x0
  43704f:	pop    es
  437050:	std    
  437051:	and    BYTE PTR [ecx],cl
  437053:	out    dx,al
  437054:	cmp    eax,0xdad56a0b
  437059:	add    BYTE PTR [ecx],cl
  43705b:	ficom  WORD PTR [ebx+ecx*1]
  43705e:	jmp    0x2419d583
  437063:	loope  0x43706a
  437065:	jne    0x436ff0
  437067:	test   BYTE PTR ds:0xbe3c7db5,0xf1
  43706e:	or     eax,0x971b0e6
  437073:	mov    edi,0xedc1f5d8
  437078:	add    BYTE PTR [eax],al
  43707a:	mov    cl,0x65
  43707c:	cli    
  43707d:	push   0xfffffff3
  43707f:	and    DWORD PTR [ecx],ecx
  437081:	add    ch,cl
  437083:	or     dl,ch
  437085:	or     DWORD PTR [ecx-0x5e092006],ebp
  43708b:	push   esi
  43708c:	test   ebp,esp
  43708e:	sbb    eax,0x9125b20a
  437093:	jmp    0x5cc0:0x7f27c2c6
  43709a:	cwde   
  43709b:	mov    bl,0xe8
  43709d:	stc    
  43709e:	inc    eax
  43709f:	sub    al,0x7c
  4370a1:	or     eax,0xed820991
  4370a6:	cwde   
  4370a7:	add    al,BYTE PTR [eax]
  4370a9:	add    BYTE PTR [ebp+0x20],dl
  4370ac:	adc    al,0x36
  4370ae:	adc    ebx,DWORD PTR [edi+ecx*1-0x15]
  4370b2:	sahf   
  4370b3:	add    al,BYTE PTR [ebp+0x105cd899]
  4370b9:	push   ecx
  4370ba:	xchg   ecx,eax
  4370bb:	or     DWORD PTR [ecx+ecx*4+0x6a000299],eax
  4370c2:	ror    DWORD PTR [ecx],0x74
  4370c5:	cmc    
  4370c6:	pop    DWORD PTR [ebp-0x41]
  4370c9:	add    BYTE PTR [ebx],dl
  4370cb:	jb     0x43708e
  4370cd:	movlps xmm7,QWORD PTR [edi+0x3d7e822]
  4370d4:	jge    0x4370ae
  4370d6:	mov    bh,0x3b
  4370d8:	stc    
  4370d9:	add    dh,BYTE PTR [ebp+0xc1cb0f]
  4370df:	add    BYTE PTR [edi-0x1988df7f],al
  4370e5:	adc    BYTE PTR [esi-0xb],ah
  4370e8:	ret    
  4370e9:	jno    0x437122
  4370eb:	or     DWORD PTR [edx-0x6d0cf8f6],0x7b
  4370f2:	mov    ebp,0xbee4c320
  4370f7:	mov    edx,DWORD PTR [eax]
  4370f9:	sbb    al,0xc
  4370fb:	maxps  xmm4,xmm6
  4370fe:	push   es
  4370ff:	jle    0x43708d
  437101:	emms   
  437103:	aad    0x3f
  437105:	or     bh,BYTE PTR [ebx+0xf]
  437108:	dec    edx
  437109:	rol    BYTE PTR [edx+0xfe3c5d8],cl
  43710f:	sub    ebp,DWORD PTR [ebp-0x233699f1]
  437115:	push   cs
  437116:	pop    es
  437117:	test   al,al
  437119:	(bad)  
  43711a:	(bad)  
  43711b:	inc    DWORD PTR [edi]
  43711d:	loopne 0x437125
  43711f:	je     0x4370cc
  437121:	bswap  ebx
  437123:	rol    DWORD PTR [ebx-0x2df03e8f],0xbd
  43712a:	and    ch,al
  43712c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43712d:	adc    bh,BYTE PTR [ebp-0x28]
  437130:	xchg   DWORD PTR [ebx],edi
  437132:	stc    
  437133:	add    ch,BYTE PTR ds:0x40247486
  437139:	test   BYTE PTR [edi+0x282a882b],bh
  43713f:	cmp    eax,DWORD PTR [edi]
  437141:	adc    BYTE PTR [edx-0x57],bh
  437144:	add    BYTE PTR [eax],al
  437146:	popf   
  437147:	imul   edi,ebp,0x8a9f16ff
  43714d:	icebp  
  43714e:	xabort 0x81
  437151:	out    0x9e,eax
  437153:	out    dx,eax
  437154:	push   es
  437155:	mov    BYTE PTR [edx+0x14fec6df],ah
  43715b:	or     eax,DWORD PTR [edx]
  43715d:	jge    0x437142
  43715f:	test   DWORD PTR [bx+di-0x64],eax
  437163:	icebp  
  437164:	aad    0xfd
  437166:	pop    ds
  437167:	and    al,0x2
  437169:	in     eax,dx
  43716a:	cmp    eax,esp
  43716c:	lock and ecx,DWORD PTR [ecx-0x5adc2710]
  437173:	shr    BYTE PTR [edi],cl
  437175:	stc    
  437176:	retf   0x902b
  437179:	inc    edi
  43717a:	popf   
  43717b:	call   0xe17570f9
  437180:	cmp    edi,DWORD PTR [ecx+edi*2+0x51]
  437184:	icebp  
  437185:	lods   eax,DWORD PTR ds:[esi]
  437186:	pop    edx
  437187:	loopne 0x4371d3
  437189:	xchg   BYTE PTR [edx+0x22fd6be8],bl
  43718f:	mov    eax,ds:0x5dda8804
  437194:	test   DWORD PTR [ecx-0x62],eax
  437197:	fadd   QWORD PTR [ebp+0x4]
  43719a:	mov    es,esi
  43719c:	mov    DWORD PTR [ecx+eax*8+0x73],ebx
  4371a0:	data16 add BYTE PTR [edx+0x51],dh
  4371a4:	jg     0x43712b
  4371a6:	push   0xffffff84
  4371a8:	les    ecx,FWORD PTR [eax]
  4371aa:	add    BYTE PTR [eax],al
  4371ac:	sbb    BYTE PTR [edx-0x2362fffc],ah
  4371b2:	arpl   WORD PTR [ecx],cx
  4371b4:	mov    ds:0xcb093d8c,al
  4371b9:	call   0x3cc3:0x94180c23
  4371c0:	popf   
  4371c1:	add    ah,dh
  4371c3:	dec    ebp
  4371c4:	sbb    BYTE PTR [edi],al
  4371c6:	outs   dx,BYTE PTR ds:[esi]
  4371c7:	imul   ebx,DWORD PTR [ecx+0x71],0xffffff92
  4371cb:	sbb    DWORD PTR [eax],0xa5c43f72
  4371d1:	xchg   DWORD PTR [ecx+0x4],edx
  4371d4:	popf   
  4371d5:	add    ah,BYTE PTR [esi+0x64]
  4371d8:	xchg   esp,eax
  4371d9:	add    DWORD PTR [esi-0x580f6bbd],edx
  4371df:	and    eax,0xc53f87a9
  4371e4:	mov    cl,0x2
  4371e6:	outs   dx,BYTE PTR ds:[esi]
  4371e7:	enter  0xfebe,0xe5
  4371eb:	dec    esp
  4371ec:	sbb    BYTE PTR [edi],al
  4371ee:	pop    edi
  4371ef:	imul   esi,DWORD PTR [edx+0x18814271],0x72
  4371f6:	outs   dx,BYTE PTR ds:[esi]
  4371f7:	dec    esp
  4371f8:	and    bh,al
  4371fa:	or     bh,BYTE PTR [eax]
  4371fc:	int3   
  4371fd:	dec    ebx
  4371fe:	pop    esi
  4371ff:	clc    
  437200:	jle    0x43722c
  437202:	fiadd  WORD PTR [esp+eiz*4-0x7c]
  437206:	inc    ebp
  437207:	add    al,0x9d
  437209:	add    ah,dh
  43720b:	dec    esp
  43720c:	and    dh,ch
  43720e:	ret    0x33
  437211:	add    BYTE PTR [ebp+0x522cc6f7],bl
  437217:	add    eax,0xf85a3cf7
  43721c:	mov    gs,WORD PTR [edx+edx*2]
  43721f:	jne    0x437264
  437221:	lea    ebp,[ebp+ebx*1-0x2a]
  437225:	ins    BYTE PTR es:[edi],dx
  437226:	out    0x2d,eax
  437228:	mov    eax,0xb81de0f9
  43722d:	je     0x437268
  43722f:	jge    0x437203
  437231:	sub    al,0x48
  437233:	pop    ebp
  437234:	daa    
  437235:	(bad)  
  437236:	fldenv [esi]
  437238:	idiv   DWORD PTR [edx*2-0x67ff0008]
  43723f:	mul    BYTE PTR [ebx]
  437241:	cmc    
  437242:	mov    eax,ds:0x81982572
  437247:	cmp    dh,BYTE PTR ds:0x252724b8
  43724d:	mov    eax,0x1585a6a9
  437252:	lds    ebp,FWORD PTR [edx]
  437254:	test   DWORD PTR ds:0x983532c5,esi
  43725a:	add    al,0x17
  43725c:	and    eax,0x85a68998
  437261:	jbe    0x43722c
  437263:	pop    edi
  437264:	in     eax,0xf9
  437266:	cdq    
  437267:	jb     0x43728e
  437269:	pop    eax
  43726a:	test   eax,0xb1e17241
  43726f:	inc    ecx
  437270:	in     eax,dx
  437271:	test   DWORD PTR [ecx],ebp
  437273:	jae    0x43729a
  437275:	cmp    al,BYTE PTR [eax]
  437277:	add    BYTE PTR [ecx],ah
  437279:	dec    eax
  43727a:	in     eax,dx
  43727b:	test   DWORD PTR [ecx],ebx
  43727d:	mul    BYTE PTR [ebx]
  43727f:	add    eax,0xe123ce10
  437284:	inc    edi
  437285:	es cli 
  437287:	es sbb eax,0xe1aad0b9
  43728d:	jo     0x437246
  43728f:	repz sahf 
  437291:	add    al,BYTE PTR [eax]
  437293:	add    cl,dl
  437295:	call   0xe900:0xb7a27d20
  43729c:	sahf   
  43729d:	add    dh,BYTE PTR [esi+0x29ee2]
  4372a3:	add    bl,BYTE PTR [edx+0x5e2accb7]
  4372a9:	jo     0x437262
  4372ab:	add    esp,DWORD PTR [ecx-0x763dfffe]
  4372b1:	test   DWORD PTR [ebp+eax*1-0x73],esi
  4372b5:	mov    bh,0xd4
  4372b7:	add    BYTE PTR [edi+0x3eb9f943],al
  4372bd:	add    al,0x0
  4372bf:	add    BYTE PTR [edi+0x7],bl
  4372c2:	add    DWORD PTR [eax+eiz*4+0x4e],0x7e
  4372c7:	leave  
  4372c8:	nop
  4372c9:	add    eax,DWORD PTR [ecx+0x407b9c48]
  4372cf:	sbb    al,0xbd
  4372d1:	push   ss
  4372d2:	jecxz  0x4372d4
  4372d4:	xchg   ecx,eax
  4372d6:	dec    edi
  4372d7:	mov    ds:0x74fa06c7,eax
  4372dc:	add    BYTE PTR [eax],al
  4372de:	idiv   BYTE PTR [ebp+edx*8-0x75]
  4372e2:	mov    al,0x1a
  4372e4:	pop    eax
  4372e5:	mov    edi,DWORD PTR [edi]
  4372e7:	jl     0x437339
  4372e9:	sbb    al,0xc5
  4372eb:	(bad)  
  4372ed:	sub    al,BYTE PTR [ebp-0x3b]
  4372f0:	fadd   DWORD PTR [ebx]
  4372f2:	lahf   
  4372f3:	int    0x80
  4372f5:	js     0x4372ef
  4372f7:	jle    0x43734b
  4372f9:	cmp    al,0x4f
  4372fb:	mov    ebx,0x22a05c84
  437300:	xor    DWORD PTR [eax+edx*4+0xa],ebx
  437304:	ins    DWORD PTR es:[edi],dx
  437305:	adc    al,0x9f
  437307:	repz sbb BYTE PTR [eax],0x2d
  43730b:	bound  ebx,QWORD PTR ds:0x82f4b714
  437311:	pop    eax
  437312:	mov    al,0x84
  437314:	jecxz  0x437321
  437316:	test   DWORD PTR [edi+0x1d],ecx
  437319:	adc    al,0xd
  43731b:	aaa    
  43731c:	mov    bl,0x1
  43731e:	je     0x437323
  437320:	add    bl,dl
  437322:	xchg   edi,eax
  437323:	cmp    edi,DWORD PTR [ebp+edi*1+0x14]
  437327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437328:	cmp    eax,DWORD PTR [eax]
  43732a:	xchg   BYTE PTR [edx+0x1],ch
  43732d:	(bad)  
  43732f:	mov    BYTE PTR [esi],0x7e
  437332:	popf   
  437333:	sahf   
  437334:	or     dh,BYTE PTR [ecx+0x7e]
  437337:	inc    esp
  437338:	mov    WORD PTR [esi-0x6b],fs
  43733b:	hlt    
  43733c:	fsub   DWORD PTR [ebx]
  43733e:	mov    cl,0x4
  437340:	pop    edx
  437341:	jb     0x437343
  437343:	add    BYTE PTR [edi+0x5e7d5a04],dl
  437349:	mov    WORD PTR fs:[eax-0x67],ds
  43734d:	xchg   esp,eax
  43734e:	pop    es
  43734f:	and    eax,0x7d5b982e
  437354:	pop    ebx
  437355:	mov    WORD PTR fs:[eax-0x5f],?
  437359:	in     al,0xd8
  43735b:	and    ebp,DWORD PTR [ebp-0x678da5bc]
  437361:	push   esp
  437362:	pop    edx
  437363:	jg     0x437343
  437365:	pop    ecx
  437366:	add    al,0x0
  437368:	popf   
  437369:	loop   0x43733f
  43736b:	clts   
  43736d:	jbe    0x437395
  43736f:	cmc    
  437370:	repnz das 
  437372:	test   cl,al
  437374:	pushf  
  437375:	pop    edx
  437376:	std    
  437377:	jmp    DWORD PTR [ecx+edx*2]
  43737a:	or     eax,0xa098d97d
  43737f:	push   ebp
  437380:	push   0xd1bcda8f
  437385:	lea    eax,[esi-0x6d2e114]
  43738b:	test   BYTE PTR [eax+0x69],cl
  43738e:	rcr    BYTE PTR cs:[edx-0x237abb28],0x19
  437396:	adc    BYTE PTR fs:[esi-0xf7b31e6],ah
  43739d:	ja     0x43732b
  43739f:	inc    ebx
  4373a0:	inc    ecx
  4373a1:	repz (bad) 
  4373a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4373a4:	adc    al,0x9f
  4373a6:	test   eax,0xe0000087
  4373ab:	sub    ecx,DWORD PTR [ebx+eax*2-0x388ffcd7]
  4373b2:	xor    bh,BYTE PTR [esp-0x40]
  4373b6:	sbb    cl,al
  4373b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4373b9:	xor    DWORD PTR [ebp-0x2b],ebx
  4373bc:	arpl   WORD PTR [edx-0x37],dx
  4373bf:	or     dh,cl
  4373c1:	push   es
  4373c2:	push   ss
  4373c3:	mov    ah,bh
  4373c5:	add    ebx,DWORD PTR [ebp-0x564b1dfe]
  4373cb:	rol    DWORD PTR [eax+0x7d],0xd9
  4373cf:	mov    edi,0xbfd98f4a
  4373d4:	inc    edx
  4373d5:	les    ebp,FWORD PTR [ecx+0x40]
  4373d8:	adc    eax,0xeef8206e
  4373dd:	mov    BYTE PTR [edi+0x4580347b],ah
  4373e3:	(bad)  
  4373e4:	out    0x3,al
  4373e6:	popf   
  4373e7:	xchg   edx,eax
  4373e8:	or     DWORD PTR [ecx+0x442c779],eax
  4373ee:	outs   dx,BYTE PTR ds:[esi]
  4373ef:	add    al,0xaf
  4373f1:	and    ch,0x3
  4373f4:	(bad)  
  4373f5:	jno    0x437411
  4373f7:	enter  0x395a,0xe5
  4373fb:	hlt    
  4373fc:	jecxz  0x437388
  4373fe:	pop    esi
  4373ff:	outs   dx,BYTE PTR ds:[esi]
  437400:	outs   dx,BYTE PTR ds:[esi]
  437401:	dec    esp
  437402:	push   ds
  437403:	inc    ebx
  437404:	mov    ah,0x2a
  437406:	sbb    al,cl
  437408:	fimul  DWORD PTR [eax+0x13a4458d]
  43740e:	add    BYTE PTR [eax],al
  437410:	pop    ebp
  437411:	add    esp,edi
  437413:	add    esp,DWORD PTR [eax]
  437415:	shl    dh,0x8a
  437418:	fwait
  437419:	and    edi,0x60122007
  43741f:	or     dl,BYTE PTR [eax]
  437421:	add    ebp,ebx
  437423:	inc    esp
  437424:	lahf   
  437425:	add    esp,edi
  437427:	add    ebx,DWORD PTR [ebp-0x21460034]
  43742d:	xlat   BYTE PTR ds:[ebx]
  43742e:	test   BYTE PTR [edx+edx*2],al
  437431:	scas   al,BYTE PTR es:[edi]
  437432:	push   ecx
  437433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437434:	lahf   
  437435:	add    al,BYTE PTR [eax]
  437437:	jmp    0xe4b5b7e1
  43743c:	inc    eax
  43743d:	out    dx,al
  43743e:	jnp    0x43748c
  437440:	add    eax,0x61ec7302
  437445:	ss clc 
  437447:	cmp    ecx,esp
  437449:	aaa    
  43744a:	leave  
  43744b:	cmp    bl,BYTE PTR [ebp+eax*4+0x6cf0ad7b]
  437452:	stc    
  437453:	jmp    0x6d15fbf6
  437458:	cmp    ah,BYTE PTR [ecx]
  43745a:	add    dh,ah
  43745c:	push   ecx
  43745d:	mov    esi,0x709d4552
  437462:	and    eax,0x3e130678
  437467:	push   0xffffff84
  437469:	sti    
  43746a:	jno    0x4373f2
  43746c:	and    eax,0x686407d1
  437471:	call   0x43e082
  437476:	dec    esp
  437477:	test   BYTE PTR [edx],0x6a
  43747a:	ins    WORD PTR es:[edi],dx
  43747c:	ins    DWORD PTR es:[edi],dx
  43747d:	jecxz  0x437478
  43747f:	retf   0x217c
  437482:	push   ecx
  437483:	xlat   BYTE PTR ds:[ebx]
  437484:	test   BYTE PTR [ebx+ebp*8-0x53],cl
  437488:	sub    eax,0x4383b829
  43748d:	outs   dx,DWORD PTR ds:[esi]
  43748e:	imul   BYTE PTR [ebx-0x7]
  437491:	jmp    0x744bdc34
  437496:	add    ah,BYTE PTR [esi]
  437498:	add    cl,ch
  43749a:	sahf   
  43749b:	add    dl,BYTE PTR [eax+0x2bf258f]
  4374a1:	gs js  0x437513
  4374a4:	inc    ebp
  4374a5:	add    BYTE PTR [ecx-0x5c],bh
  4374a8:	jnp    0x43746a
  4374aa:	jbe    0x437512
  4374ac:	or     BYTE PTR [ecx+ecx*4-0x7c],0x7b
  4374b1:	clc    
  4374b2:	bound  esi,QWORD PTR [edx-0x1e]
  4374b5:	mov    esi,DWORD PTR [ecx+0x60758316]
  4374bb:	xor    eax,0x72fd85c0
  4374c0:	and    ah,BYTE PTR [esi-0x39]
  4374c3:	sub    bh,BYTE PTR [ebx]
  4374c5:	add    BYTE PTR [eax+0x68b70709],cl
  4374cb:	inc    ebp
  4374cc:	or     BYTE PTR [edi+0x667d5198],dh
  4374d2:	mov    ebp,0xcb0f4e02
  4374d7:	adc    bh,BYTE PTR [ebx]
  4374d9:	data16 add BYTE PTR [eax],al
  4374dc:	add    eax,DWORD PTR [ebx+0x4e]
  4374df:	test   BYTE PTR [ecx+0x7f844e52],al
  4374e5:	push   ecx
  4374e6:	add    DWORD PTR [eax-0x21],eax
  4374e9:	(bad)  
  4374ea:	imul   edx,edi,0xe87ac48f
  4374f0:	add    al,0xaf
  4374f2:	idiv   edi
  4374f4:	and    edi,0x73
  4374f7:	cmp    DWORD PTR [esp+ebx*2],ebp
  4374fa:	or     al,0xc7
  4374fc:	cmp    esp,edx
  4374fe:	pop    ss
  4374ff:	dec    esi
  437500:	add    al,0x0
  437502:	mov    edi,0x474e6445
  437507:	inc    eax
  437508:	mov    ah,0x7e
  43750a:	inc    ebp
  43750b:	in     al,0x6f
  43750d:	ss mov eax,0xf9400198
  437513:	sub    al,0xc6
  437515:	add    eax,0x412d0000
  43751a:	aad    0xb8
  43751c:	pop    esp
  43751d:	cmp    DWORD PTR [ecx],edi
  43751f:	add    BYTE PTR [ebp-0x6d01fcba],bl
  437525:	pop    ecx
  437526:	mov    WORD PTR [ebx+0x7d],es
  437529:	sbb    al,0xbf
  43752b:	jecxz  0x4374ca
  43752d:	pop    edx
  43752e:	std    
  43752f:	inc    DWORD PTR [esi+0x7d738c66]
  437535:	loop   0x437525
  437537:	(bad)  [edx+0x1e]
  43753a:	pusha  
  43753b:	or     eax,0x84fd599d
  437540:	add    BYTE PTR [eax],al
  437542:	loopne 0x4375b1
  437544:	mov    al,BYTE PTR [eax]
  437546:	and    al,0x26
  437548:	je     0x4374d1
  43754a:	fsub   DWORD PTR [ecx-0x7ebeb476]
  437550:	add    al,0x0
  437552:	popf   
  437553:	pop    ecx
  437554:	push   edx
  437555:	loopne 0x4375c5
  437557:	nop
  437558:	mov    WORD PTR [ebx+0x25],?
  43755b:	repnz xlat BYTE PTR ds:[ebx]
  43755d:	jmp    0x437575
  43755f:	mov    eax,ds:0xe21a4888
  437564:	test   edi,0x87502624
  43756a:	pop    eax
  43756b:	mov    ch,0x82
  43756d:	neg    BYTE PTR [esi+esi*2+0x58513afe]
  437574:	std    
  437575:	inc    DWORD PTR [esi]
  437577:	pop    edi
  437578:	xor    dh,0x9f
  43757b:	dec    esi
  43757c:	or     bh,BYTE PTR [ebx]
  43757e:	dec    ebp
  43757f:	push   edi
  437580:	std    
  437581:	jmp    FWORD PTR [edx-0x2d01e928]
  437587:	pop    eax
  437588:	mov    WORD PTR [ebx-0x4b],?
  43758b:	iret   
  43758c:	or     ecx,DWORD PTR [ebx-0x2a6da]
  437592:	popf   
  437593:	loopne 0x43758c
  437595:	iret   
  437596:	daa    
  437597:	xchg   esi,eax
  437598:	jne    0x43751f
  43759a:	xor    BYTE PTR [edx],al
  43759c:	or     ebp,DWORD PTR ds:0x14b479d0
  4375a2:	and    al,dl
  4375a4:	dec    BYTE PTR [ecx]
  4375a6:	add    BYTE PTR [eax],al
  4375a8:	dec    esp
  4375a9:	add    eax,0x38d04b5e
  4375ae:	test   BYTE PTR [ecx],al
  4375b0:	pop    edi
  4375b1:	rcl    dh,0x3
  4375b4:	and    BYTE PTR [esi],0x71
  4375b7:	push   ds
  4375b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375b9:	mov    cl,0xe5
  4375bb:	mov    ss,esi
  4375bd:	(bad)  
  4375be:	out    0x43,al
  4375c0:	sbb    ecx,DWORD PTR [edi]
  4375c2:	out    dx,eax
  4375c3:	mov    esi,fs
  4375c5:	inc    esi
  4375c6:	pop    edi
  4375c7:	iret   
  4375c8:	mov    ds:0x95105de0,al
  4375cd:	loopne 0x43763e
  4375cf:	iret   
  4375d0:	nop
  4375d1:	pop    ebp
  4375d2:	in     eax,dx
  4375d3:	inc    ecx
  4375d4:	ficom  WORD PTR [edx]
  4375d6:	inc    edi
  4375d7:	xor    eax,0xbf5fe15d
  4375dc:	cwde   
  4375dd:	jge    0x437613
  4375df:	jl     0x437659
  4375e1:	cmp    eax,0xe820416e
  4375e6:	cmp    BYTE PTR [esi+0x3e76a12],0xd8
  4375ed:	outs   dx,BYTE PTR fs:[esi]
  4375ef:	dec    ebp
  4375f0:	rcr    BYTE PTR [ecx+0x6e],1
  4375f3:	(bad)  
  4375f4:	or     bh,BYTE PTR [esp+ebp*1+0x4c]
  4375f8:	es das 
  4375fa:	push   esp
  4375fb:	add    al,0x9d
  4375fd:	add    ah,bh
  4375ff:	add    al,0xe5
  437601:	ja     0x4375ee
  437603:	mov    edx,0x2cf6e820
  437608:	out    0x1d,eax
  43760a:	and    eax,0x9200008b
  43760f:	out    dx,eax
  437610:	lea    ebp,ds:[esi+0x6a]
  437614:	ins    BYTE PTR es:[edi],dx
  437615:	into   
  437616:	mov    ch,0xaa
  437618:	add    al,ch
  43761a:	sahf   
  43761b:	add    al,BYTE PTR [eax]
  43761d:	sbb    al,BYTE PTR [ecx+0x7f]
  437620:	dec    ebx
  437621:	adc    eax,0xf074a922
  437626:	and    eax,ecx
  437628:	push   DWORD PTR [edi]
  43762a:	add    DWORD PTR [esi-0x79f76b41],eax
  437630:	sar    BYTE PTR [ebp-0x69],0x7d
  437634:	js     0x437634
  437636:	shl    DWORD PTR [ecx-0x3],0xf0
  43763a:	add    DWORD PTR [ecx+0x2e],ebp
  43763d:	out    dx,al
  43763e:	and    ebp,eax
  437640:	out    0xeb,eax
  437642:	es imul edi,ecx,0xffffffe9
  437646:	sahf   
  437647:	in     al,0xfe
  437649:	sub    al,0x62
  43764b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43764c:	xchg   DWORD PTR [ebp+esi*4-0xb],ecx
  437650:	adc    al,0x2
  437652:	push   edx
  437653:	jne    0x43765e
  437655:	gs loop 0x43765a
  437658:	add    cl,ch
  43765a:	and    DWORD PTR [ebp-0x7122119],edi
  437660:	test   BYTE PTR [edx*4-0x11124f05],ch
  437667:	jg     0x4376b4
  437669:	xchg   ecx,eax
  43766a:	and    DWORD PTR [ecx],edi
  43766c:	xor    eax,0x81fb8534
  437671:	int    0x0
  437673:	add    BYTE PTR [ebp+0xb72f96b],al
  437679:	cmp    eax,0xf5277e1d
  43767e:	ret    
  43767f:	mov    dl,0xfb
  437681:	push   eax
  437682:	or     DWORD PTR [ebp-0x77],ebp
  437685:	imul   edi,ecx,0x5e
  437688:	pop    ebx
  437689:	dec    edi
  43768a:	jae    0x437676
  43768c:	and    ebp,ecx
  43768e:	sti    
  43768f:	(bad)  
  437690:	fistp  DWORD PTR [eax-0x7b]
  437693:	add    cl,dh
  437695:	mov    esp,0x7c460c84
  43769a:	inc    ebp
  43769b:	lock aas 
  43769d:	inc    eax
  43769e:	icebp  
  43769f:	sub    edi,DWORD PTR [edi-0x53]
  4376a2:	stc    
  4376a3:	push   DWORD PTR [esp+eax*1-0x3070eb7b]
  4376aa:	fistp  QWORD PTR [ebx]
  4376ac:	push   ecx
  4376ad:	fsubr  DWORD PTR [edx+0x1c]
  4376b0:	jmp    0x8be7c50c
  4376b5:	mov    bl,0x36
  4376b7:	sub    eax,ebx
  4376b9:	call   0x3ebbf57d
  4376be:	cmp    al,BYTE PTR [ebx-0x4005023e]
  4376c4:	mov    edi,0x6f72ed51
  4376c9:	jl     0x437738
  4376cb:	les    edi,FWORD PTR [edi-0x7e7432af]
  4376d1:	div    BYTE PTR [esi+0x43401]
  4376d7:	rol    DWORD PTR [eax],cl
  4376d9:	add    BYTE PTR [ebx+0x4],ah
  4376dc:	iret   
  4376dd:	mov    DWORD PTR [ecx-0x32],ebp
  4376e0:	adc    BYTE PTR [ebp+0x10],0x84
  4376e4:	clc    
  4376e5:	add    DWORD PTR [ecx-0x2f05870a],eax
  4376eb:	add    eax,DWORD PTR [eax]
  4376ed:	add    BYTE PTR [edi],bl
  4376ef:	cld    
  4376f0:	jp     0x4376ea
  4376f2:	div    BYTE PTR [edx+0x5]
  4376f5:	sbb    DWORD PTR [esi],0x4fffb4f
  4376fb:	add    DWORD PTR [ebx-0x50],edi
  4376fe:	add    al,0x4
  437700:	add    BYTE PTR [ebx+0x146d7c42],cl
  437706:	outs   dx,DWORD PTR ds:[esi]
  437707:	clc    
  437708:	xchg   DWORD PTR [esi+eax*2],ecx
  43770b:	jnp    0x437713
  43770d:	mov    bl,BYTE PTR [ebp+0x718871a6]
  437713:	fiadd  DWORD PTR [edx]
  437715:	test   DWORD PTR [ebx-0x7910390c],ecx
  43771b:	pop    ss
  43771c:	inc    ebx
  43771d:	neg    DWORD PTR [edi+0x43d7bee2]
  437723:	loop   0x4376ec
  437725:	sbb    DWORD PTR [edi-0x650615ee],0xc7be8608
  43772f:	sbb    al,0x2d
  437731:	(bad)  
  437732:	arpl   WORD PTR [esi-0x69eabff3],bx
  437738:	adc    al,0x62
  43773a:	and    al,0x96
  43773c:	jae    0xe5b57742
  437742:	rol    DWORD PTR [eax+esi*8-0x162a7f97],cl
  437749:	std    
  43774a:	test   BYTE PTR [ebx+0x69],al
  43774d:	cld    
  43774e:	cmp    BYTE PTR ds:0xde9b1d8,dh
  437754:	push   ss
  437755:	push   ds
  437756:	js     0x4376dd
  437758:	rol    BYTE PTR [ebp-0x7a],1
  43775b:	das    
  43775c:	outs   dx,BYTE PTR ds:[esi]
  43775d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43775e:	mov    WORD PTR [ebx+0x35],es
  437761:	loope  0x437722
  437763:	push   cs
  437764:	push   ss
  437765:	mov    DWORD PTR [esi+0x4e9816c5],eax
  43776b:	call   0x87578d96
  437770:	mov    eax,ds:0xa4687d7
  437775:	rol    DWORD PTR [ebx],1
  437777:	add    BYTE PTR [ebp+0x20e04e59],bl
  43777d:	mov    al,ds:0x8a0d00e9
  437782:	gs and edx,0x6d
  437786:	ja     0x43770b
  437788:	fld    QWORD PTR [ecx]
  43778a:	fisttp DWORD PTR [esi+eiz*1]
  43778d:	mov    edx,0x2ca2259
  437792:	dec    edi
  437793:	lock clc 
  437795:	jp     0x43774b
  437797:	dec    edi
  437798:	sbb    BYTE PTR [ebp-0x72567726],bh
  43779e:	out    0x3,eax
  4377a0:	popf   
  4377a1:	add    ch,al
  4377a3:	or     eax,DWORD PTR [eax]
  4377a5:	add    BYTE PTR [eax],ah
  4377a7:	mov    ebp,0xa4e8a2a
  4377ac:	ret    0x23d5
  4377af:	add    esi,edx
  4377b1:	inc    ebx
  4377b2:	call   0x4a1b8430
  4377b7:	(bad)  
  4377b8:	test   al,0xbb
  4377ba:	and    BYTE PTR [esi-0x19],0x3
  4377be:	sar    BYTE PTR [ecx+0x4],1
  4377c1:	fdiv   DWORD PTR [ecx]
  4377c3:	aaa    
  4377c4:	repnz pop ds
  4377c6:	xchg   ebp,eax
  4377c7:	adc    BYTE PTR [edi+0x6e375103],ah
  4377cd:	inc    edx
  4377ce:	sbb    BYTE PTR [ebx-0x3e1a13b1],dl
  4377d4:	out    0xdf,al
  4377d6:	sub    eax,DWORD PTR [ebx]
  4377d8:	out    0x3,eax
  4377da:	popf   
  4377db:	shr    BYTE PTR [ebp-0x40],cl
  4377de:	jle    0x4377f2
  4377e0:	jo     0x4377ca
  4377e2:	jle    0x4377f6
  4377e4:	fs call 0x64418a68
  4377ea:	ror    ah,1
  4377ec:	cmp    DWORD PTR [ecx-0x208f95a2],ecx
  4377f2:	cli    
  4377f3:	rcr    BYTE PTR [ebp-0x41],cl
  4377f6:	push   es
  4377f7:	ds and al,0x78
  4377fa:	add    al,0x66
  4377fc:	xor    BYTE PTR [ebp+0x22],0xc0
  437800:	jle    0x437789
  437802:	pop    esi
  437803:	jb     0x437805
  437805:	or     eax,0xe900033c
  43780a:	add    BYTE PTR [eax],al
  43780c:	sahf   
  43780d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43780e:	test   DWORD PTR [esi+ecx*2-0x61137922],esi
  437815:	add    al,BYTE PTR [eax]
  437817:	jmp    0xb29d4303
  43781c:	push   edi
  43781d:	mov    ch,0xbc
  43781f:	inc    esi
  437820:	call   0xcc36:0x9ea911da
  437827:	call   0xff81:0x5447ed8
  43782e:	mov    edi,0x4c7fb69c
  437833:	lds    esp,FWORD PTR [edx-0x5132bb81]
  437839:	pop    ss
  43783a:	into   
  43783b:	push   ss
  43783c:	push   cs
  43783d:	sbb    al,0x72
  437840:	pop    ebp
  437841:	and    DWORD PTR [esi+esi*8],ecx
  437844:	out    dx,eax
  437845:	jg     0x437814
  437847:	add    bl,BYTE PTR [esi+0x7e]
  43784a:	enter  0x4562,0x21
  43784e:	adc    al,0x72
  437850:	push   0x21
  437852:	adc    BYTE PTR [edx+0x12],dh
  437855:	and    DWORD PTR [eax+edi*4],ecx
  437858:	mov    bh,0x35
  43785a:	aad    0xb8
  43785c:	mov    ah,0x35
  43785e:	fdiv   st,st(2)
  437860:	out    0xf1,eax
  437862:	repz mov dh,0xad
  437865:	jg     0x437857
  437867:	mov    esi,0x6218214a
  43786c:	(bad)  
  43786d:	jg     0x4378b3
  43786f:	int    0x0
  437871:	add    BYTE PTR [edx+0x6feae273],ch
  437877:	aam    0x9
  437879:	rcr    dl,cl
  43787b:	and    BYTE PTR [eax],dl
  43787d:	push   ss
  43787e:	xchg   ecx,eax
  43787f:	aam    0x0
  437881:	add    bh,bl
  437883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437884:	sbb    eax,0x45ffea0c
  437889:	xor    eax,DWORD PTR [esi]
  43788b:	jp     0x43784b
  43788d:	pop    esi
  43788e:	pop    eax
  437890:	sldt   WORD PTR [edx-0x12]
  437894:	idiv   bh
  437896:	les    eax,FWORD PTR [eax]
  437898:	add    BYTE PTR [eax],al
  43789a:	mov    esi,gs
  43789c:	idiv   bh
  43789e:	mov    ah,0x0
  4378a0:	add    BYTE PTR [eax],al
  4378a2:	(bad)  
  4378a3:	out    dx,al
  4378a4:	idiv   bh
  4378a6:	scas   al,BYTE PTR es:[edi]
  4378a7:	(bad)  
  4378a8:	cmp    al,BYTE PTR [eax]
  4378aa:	sar    bh,cl
  4378ac:	cmp    al,BYTE PTR [eax]
  4378ae:	mov    ah,0x0
  4378b0:	add    BYTE PTR [eax],al
  4378b2:	ret    
  4378b3:	out    dx,al
  4378b4:	idiv   bh
  4378b6:	loope  0x43786c
  4378b8:	cmp    DWORD PTR [eax],eax
  4378ba:	in     eax,0xb4
  4378bc:	cmp    DWORD PTR [eax],eax
  4378be:	je     0x4378c0
  4378c0:	add    BYTE PTR [eax],al
  4378c2:	mov    ds:0x35fff6ee,eax
  4378c7:	mov    ch,0x39
  4378c9:	add    BYTE PTR [ecx],ch
  4378cb:	mov    ch,0x39
  4378cd:	add    BYTE PTR [eax+eax*1+0x0],dh
  4378d1:	add    BYTE PTR [ebx-0x10],al
  4378d4:	idiv   bh
  4378d6:	add    BYTE PTR [eax],al
  4378d8:	pop    eax
  4378d9:	int3   
  4378da:	cmp    DWORD PTR [eax],eax
  4378dc:	pop    esp
  4378dd:	int3   
  4378de:	cmp    DWORD PTR [eax],eax
  4378e0:	xor    al,0x0
  4378e2:	add    BYTE PTR [eax],al
  4378e4:	arpl   ax,si
  4378e6:	idiv   bh
  4378e8:	push   ebp
  4378e9:	int    0x39
  4378eb:	add    BYTE PTR [ecx-0x33],cl
  4378ee:	cmp    DWORD PTR [eax],eax
  4378f0:	xor    al,0x0
  4378f2:	add    BYTE PTR [eax],al
  4378f4:	inc    ebx
  4378f5:	lock idiv bh
  4378f8:	je     0x437939
  4378fa:	cmp    al,BYTE PTR [eax]
  4378fc:	popf   
  4378fd:	lds    edi,FWORD PTR [esi+edi*1-0x2a663]
  437904:	popf   
  437905:	jl     0x437974
  437907:	stc    
  437908:	repnz lds ecx,FWORD PTR [edx+0x40]
  43790c:	popf   
  43790d:	mov    ecx,0x599d404a
  437912:	std    
  437913:	call   FWORD PTR [ebp-0x2d069324]
  437919:	aas    
  43791a:	dec    esp
  43791b:	inc    eax
  43791c:	popf   
  43791d:	stos   DWORD PTR es:[edi],eax
  43791e:	dec    esp
  43791f:	inc    eax
  437920:	popf   
  437921:	pop    ecx
  437922:	std    
  437923:	call   FWORD PTR [ebp-0x4d069344]
  437929:	sub    DWORD PTR [esi-0x51c862c2],0x3e
  437930:	popf   
  437931:	pop    ecx
  437932:	std    
  437933:	call   FWORD PTR [ebp-0x6d0692e4]
  437939:	call   0x43b795
  43793e:	popf   
  43793f:	in     al,0x57
  437941:	ds popf 
  437943:	pop    ecx
  437944:	std    
  437945:	call   FWORD PTR [ebp+0x72f96cfc]
  43794b:	sub    dl,BYTE PTR [ebx-0x6cd962c2]
  437951:	ds popf 
  437953:	pop    ecx
  437954:	std    
  437955:	call   FWORD PTR [ebp+0x52f96e5c]
  43795b:	mov    eax,0xb49d3e93
  437960:	xchg   ebx,eax
  437961:	ds popf 
  437963:	pop    ecx
  437964:	std    
  437965:	call   FWORD PTR [ebp-0x620002a7]
  43796b:	pop    ecx
  43796c:	std    
  43796d:	call   FWORD PTR [ebp+0x7aec8106]
  437973:	loop   0x4379dc
  437975:	dec    edi
  437976:	outs   dx,DWORD PTR ds:[esi]
  437977:	add    bh,BYTE PTR [ecx]
  437979:	pop    esp
  43797a:	sbb    eax,0x7d03e712
  43797f:	adc    edi,esp
  437981:	add    esp,DWORD PTR [ecx+0x11]
  437984:	out    0x3,eax
  437986:	push   ebp
  437987:	adc    edi,esp
  437989:	add    ecx,DWORD PTR [ecx+0x11]
  43798c:	out    0x3,eax
  43798e:	adc    DWORD PTR [ecx],0x110103e7
  437994:	out    0x3,eax
  437996:	and    eax,0x1903e711
  43799b:	adc    edi,esp
  43799d:	add    ebx,DWORD PTR [ebp+0x11]
  4379a0:	out    0x3,eax
  4379a2:	add    BYTE PTR [eax],al
  4379a4:	adc    DWORD PTR [ecx],0x117503e7
  4379aa:	out    0x3,eax
  4379ac:	imul   edx,DWORD PTR [ecx],0x116103e7
  4379b2:	out    0x3,eax
  4379b4:	and    DWORD PTR [ecx],edx
  4379b6:	out    0x3,eax
  4379b8:	add    eax,0xca03e6f4
  4379bd:	cld    
  4379be:	out    0x3,al
  4379c0:	mov    ebp,0xa103e6f3
  4379c5:	repz out 0x3,al
  4379c8:	xchg   ebp,eax
  4379c9:	repz out 0x3,al
  4379cc:	mov    ebx,esi
  4379ce:	out    0x3,al
  4379d0:	shl    ebx,0xe6
  4379d3:	add    eax,ecx
  4379d5:	repz out 0x3,al
  4379d8:	in     eax,0xf3
  4379da:	out    0x3,al
  4379dc:	fpatan 
  4379de:	out    0x3,al
  4379e0:	popf   
  4379e1:	repz out 0x3,al
  4379e4:	inc    ecx
  4379e5:	repz out 0x3,al
  4379e8:	xor    eax,0x2903e6f3
  4379ed:	repz out 0x3,al
  4379f0:	mov    eax,ds:0x9ee8fff3
  4379f5:	push   ds
  4379f6:	psubsw mm3,QWORD PTR [esi-0x6116f0d6]
  4379fd:	psubsw mm3,QWORD PTR es:[esi-0x6116ef9e]
  437a05:	ds adc cl,ch
  437a08:	add    BYTE PTR [eax],al
  437a0a:	sahf   
  437a0b:	cmp    dl,BYTE PTR [eax]
  437a0d:	jmp    0xe953b0b0
  437a12:	sahf   
  437a13:	data16 adc cl,ch
  437a16:	sahf   
  437a17:	dec    BYTE PTR [esi]
  437a19:	jmp    0xe9531ebc
  437a1e:	sahf   
  437a1f:	push   es
  437a20:	psubsw mm3,QWORD PTR [esi-0x6116efbe]
  437a27:	sahf   
  437a28:	adc    cl,ch
  437a2a:	sahf   
  437a2b:	call   0xe910:0x969ee910
  437a32:	sahf   
  437a33:	inc    esi
  437a34:	adc    cl,ch
  437a36:	sahf   
  437a37:	pop    esi
  437a38:	adc    cl,ch
  437a3a:	sahf   
  437a3b:	test   BYTE PTR [edi],cl
  437a3d:	jmp    0xe953e0e0
  437a42:	sahf   
  437a43:	mov    ds:0x7e9ee910,al
  437a48:	adc    cl,ch
  437a4a:	sahf   
  437a4b:	jp     0x437a5d
  437a4d:	jmp    0xe953f0f0
  437a52:	sahf   
  437a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a54:	adc    cl,ch
  437a56:	sahf   
  437a57:	ds adc cl,ch
  437a5a:	sahf   
  437a5b:	in     al,0xe
  437a5d:	jmp    0xe953c100
  437a62:	sahf   
  437a63:	adc    BYTE PTR [eax],0xe9
  437a66:	sahf   
  437a67:	fimul  WORD PTR [edi]
  437a69:	jmp    0x53550c
  437a6e:	add    BYTE PTR [eax],al
  437a70:	inc    esp
  437a71:	add    eax,0x5341074
  437a76:	test   BYTE PTR [eax],dl
  437a78:	xor    al,0x5
  437a7a:	mov    esp,0x3e050410
  437a7f:	adc    DWORD PTR [eax*1+0x4f410a4],eax
  437a86:	adc    BYTE PTR [ecx],dl
  437a88:	hlt    
  437a89:	add    al,0xc
  437a8b:	adc    DWORD PTR [eax*1+0x5041108],eax
  437a92:	add    al,0x11
  437a94:	hlt    
  437a95:	add    al,0x0
  437a97:	adc    esp,esi
  437a99:	add    al,0xfc
  437a9b:	adc    ah,al
  437a9d:	add    al,0xf8
  437a9f:	adc    ah,al
  437aa1:	add    al,0xf4
  437aa3:	adc    BYTE PTR [esp+eax*1+0x4b410c4],dh
  437aaa:	rcl    BYTE PTR [eax],0xc4
  437aad:	add    al,0xbc
  437aaf:	adc    ah,al
  437ab1:	add    al,0xb8
  437ab3:	adc    BYTE PTR [esp+eax*1+0x4b410b4],dh
  437aba:	mov    al,0x10
  437abc:	test   BYTE PTR [esp+ebp*4],al
  437abf:	adc    BYTE PTR [esp+eax*1+0x47410a8],al
  437ac6:	xor    BYTE PTR [eax],dl
  437ac8:	je     0x437ace
  437aca:	sub    al,0x10
  437acc:	test   BYTE PTR [eax+ebp*1],al
  437acf:	adc    BYTE PTR [esp+eax*1+0x1024],al
  437ad6:	je     0x437adc
  437ad8:	and    BYTE PTR [eax],dl
  437ada:	je     0x437ae0
  437adc:	sbb    al,0x10
  437ade:	inc    esp
  437adf:	add    al,0x18
  437ae1:	adc    BYTE PTR [esp+eax*1+0x14],al
  437ae5:	adc    BYTE PTR [esp+eax*1],dh
  437ae8:	adc    BYTE PTR [eax],dl
  437aea:	popf   
  437aeb:	imul   edi,ebp,0xfd698d0b
  437af1:	pop    es
  437af2:	lea    ebp,[ecx-0x3]
  437af5:	add    ecx,DWORD PTR [ebp-0x72000297]
  437afb:	imul   edi,ebp,0xfd69aafb
  437b01:	mul    DWORD PTR [edx-0x650c0297]
  437b07:	imul   edi,ebp,0xfd6992ef
  437b0d:	jmp    0x437ab9
  437b0f:	imul   edi,ebp,0xfd698c09
  437b15:	rcr    DWORD PTR [edx-0x72560297],cl
  437b1b:	imul   edi,ebp,0xfd69ada5
  437b21:	mov    eax,0xebfd69aa
  437b26:	mov    dl,0x69
  437b28:	std    
  437b29:	(bad)  
  437b2a:	lods   al,BYTE PTR ds:[esi]
  437b2b:	imul   edi,ebp,0xfd698ca3
  437b31:	retf   
  437b32:	mov    ds:0x8d28fd69,al
  437b37:	imul   edi,ebp,0x920000bf
  437b3d:	imul   edi,ebp,0xfd69aabb
  437b43:	mov    bh,0xa2
  437b45:	imul   edi,ebp,0xfd699ab3
  437b4b:	mov    bl,0x92
  437b4d:	imul   edi,ebp,0xfd69aaaf
  437b53:	stos   DWORD PTR es:[edi],eax
  437b54:	mov    ds:0x9aa7fd69,al
  437b59:	imul   edi,ebp,0xfd6992a3
  437b5f:	lahf   
  437b60:	stos   BYTE PTR es:[edi],al
  437b61:	imul   edi,ebp,0xe702a29b
  437b67:	add    esp,DWORD PTR ds:0x2903e70f
  437b6d:	movntq QWORD PTR [ebx],mm0
  437b70:	or     eax,0x2103e70f
  437b75:	movntq QWORD PTR [ebx],mm0
  437b78:	adc    eax,0x1903e70f
  437b7d:	movntq QWORD PTR [ebx],mm0
  437b80:	sbb    eax,0x9103e70f
  437b85:	movntq QWORD PTR [ebx],mm0
  437b88:	test   DWORD PTR [edi],ecx
  437b8a:	out    0x3,eax
  437b8c:	call   0xff47629f
  437b91:	lock out 0x3,al
  437b94:	loope  0x437b86
  437b96:	out    0x3,al
  437b98:	aam    0xe
  437b9a:	out    0x3,eax
  437b9c:	dec    ebp
  437b9d:	movntq QWORD PTR [ebx],mm0
  437ba0:	add    BYTE PTR [eax],al
  437ba2:	imul   ecx,DWORD PTR [edi],0xf6503e7
  437ba8:	out    0x3,eax
  437baa:	popa   
  437bab:	movntq QWORD PTR [ebx],mm0
  437bae:	pop    ebp
  437baf:	movntq QWORD PTR [ebx],mm0
  437bb2:	jns    0x437bc3
  437bb4:	out    0x3,eax
  437bb6:	jne    0x437bc7
  437bb8:	out    0x3,eax
  437bba:	jno    0x437bcb
  437bbc:	out    0x3,eax
  437bbe:	ins    DWORD PTR es:[edi],dx
  437bbf:	movntq QWORD PTR [ebx],mm0
  437bc2:	leave  
  437bc3:	or     eax,0xdc503e7
  437bc8:	out    0x3,eax
  437bca:	xlat   BYTE PTR ds:[ebx]
  437bcb:	repz out 0x3,al
  437bce:	int    0xd
  437bd0:	out    0x3,eax
  437bd2:	leave  
  437bd3:	or     eax,0xdc503e7
  437bd8:	out    0x3,eax
  437bda:	ror    DWORD PTR ds:0xdbd03e7,0x0
  437be1:	jmp    0xe94c7a84
  437be6:	sahf   
  437be7:	cli    
  437be8:	or     cl,ch
  437bea:	sahf   
  437beb:	test   BYTE PTR [eax],0xe9
  437bee:	sahf   
  437bef:	repnz or cl,ch
  437bf2:	sahf   
  437bf3:	push   cs
  437bf4:	or     ecx,ebp
  437bf6:	sahf   
  437bf7:	lahf   
  437bf8:	adc    cl,ch
  437bfa:	sahf   
  437bfb:	push   es
  437bfc:	or     ecx,ebp
  437bfe:	sahf   
  437bff:	add    cl,BYTE PTR [ecx]
  437c01:	jmp    0xe94ddaa4
  437c06:	add    BYTE PTR [eax],al
  437c08:	sahf   
  437c09:	pop    edx
  437c0a:	or     ch,cl
  437c0c:	sahf   
  437c0d:	push   esi
  437c0e:	or     ch,cl
  437c10:	sahf   
  437c11:	(bad)  
  437c12:	psubsw mm3,QWORD PTR [esi-0x6116f04e]
  437c19:	push   ds
  437c1a:	adc    cl,ch
  437c1c:	sahf   
  437c1d:	retf   0xe90f
  437c20:	sahf   
  437c21:	bound  ecx,QWORD PTR [edx]
  437c23:	jmp    0xe94dbac6
  437c28:	sahf   
  437c29:	cmp    cl,BYTE PTR [edx]
  437c2b:	jmp    0xe94db2ce
  437c30:	sahf   
  437c31:	ss or  ch,cl
  437c34:	sahf   
  437c35:	push   cs
  437c36:	or     ecx,ebp
  437c38:	sahf   
  437c39:	dec    edx
  437c3a:	or     ch,cl
  437c3c:	sahf   
  437c3d:	inc    esi
  437c3e:	or     ch,cl
  437c40:	sahf   
  437c41:	inc    edx
  437c42:	or     ch,cl
  437c44:	sahf   
  437c45:	sahf   
  437c46:	or     ch,cl
  437c48:	sahf   
  437c49:	call   0xe90a:0x969ee90a
  437c50:	sahf   
  437c51:	xchg   esi,eax
  437c52:	or     ch,cl
  437c54:	sahf   
  437c55:	xchg   edx,eax
  437c56:	or     ch,cl
  437c58:	sahf   
  437c59:	scas   al,BYTE PTR es:[edi]
  437c5a:	or     al,BYTE PTR [eax]
  437c5c:	je     0x437c5f
  437c5e:	test   al,0xe
  437c60:	je     0x437c63
  437c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c63:	push   cs
  437c64:	inc    esp
  437c65:	add    DWORD PTR [eax-0x63febbf2],esp
  437c6b:	push   cs
  437c6c:	add    BYTE PTR [eax],al
  437c6e:	xor    al,0x1
  437c70:	cwde   
  437c71:	push   cs
  437c72:	xor    al,0x1
  437c74:	loopne 0x437c84
  437c76:	inc    esp
  437c77:	add    esp,ebx
  437c79:	push   cs
  437c7a:	inc    esp
  437c7b:	add    eax,ebx
  437c7d:	push   cs
  437c7e:	xor    al,0x1
  437c80:	aam    0xe
  437c82:	xor    al,0x1
  437c84:	ror    BYTE PTR [esi],1
  437c86:	add    al,0x1
  437c88:	int3   
  437c89:	push   cs
  437c8a:	add    al,0x1
  437c8c:	enter  0xf40e,0x0
  437c90:	les    ecx,FWORD PTR [esi]
  437c92:	hlt    
  437c93:	add    bl,dl
  437c95:	push   cs
  437c96:	add    al,0x1
  437c98:	iret   
  437c99:	push   cs
  437c9a:	add    al,0x1
  437c9c:	scas   eax,DWORD PTR es:[edi]
  437c9d:	pmuludq mm0,QWORD PTR [eax]
  437ca0:	fs push cs
  437ca2:	hlt    
  437ca3:	add    BYTE PTR [esi+0xf],bh
  437ca6:	les    eax,FWORD PTR [eax]
  437ca8:	jp     0x437cb9
  437caa:	les    eax,FWORD PTR [eax]
  437cac:	mov    ebx,0x3d00b40e
  437cb1:	lfs    eax,FWORD PTR [eax]
  437cb4:	ins    BYTE PTR es:[edi],dx
  437cb5:	pinsrw mm0,WORD PTR [eax],0x4c
  437cb9:	push   cs
  437cba:	les    eax,FWORD PTR [eax]
  437cbc:	(bad)  
  437cbd:	lfs    eax,FWORD PTR [eax]
  437cc0:	inc    esp
  437cc1:	push   cs
  437cc2:	mov    ah,0x0
  437cc4:	inc    eax
  437cc5:	push   cs
  437cc6:	test   BYTE PTR [eax],al
  437cc8:	inc    eax
  437cc9:	push   cs
  437cca:	test   BYTE PTR [eax],al
  437ccc:	push   0x3400740e
  437cd1:	push   cs
  437cd2:	add    BYTE PTR [eax],al
  437cd4:	je     0x437cd6
  437cd6:	and    BYTE PTR [esi],cl
  437cd8:	popf   
  437cd9:	imul   edi,ebp,0xfd69a31b
  437cdf:	pop    ss
  437ce0:	fwait
  437ce1:	imul   edi,ebp,0xfd699313
  437ce7:	and    al,0xaa
  437ce9:	imul   edi,ebp,0xfd69a220
  437cef:	pop    ss
  437cf0:	fwait
  437cf1:	imul   edi,ebp,0xfd699313
  437cf7:	test   DWORD PTR [edx-0x75440297],edx
  437cfd:	imul   edi,ebp,0xfd69854e
  437d03:	test   al,0x85
  437d05:	imul   edi,ebp,0xfd69b425
  437d0b:	ja     0x437cc1
  437d0d:	imul   edi,ebp,0xfd69a4d9
  437d13:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  437d15:	imul   edi,ebp,0xfd69a8f3
  437d1b:	out    dx,eax
  437d1c:	mov    al,ds:0x98ebfd69
  437d21:	imul   edi,ebp,0xfd6990e7
  437d27:	jecxz  0x437cd1
  437d29:	imul   edi,ebp,0xfd69a0df
  437d2f:	fistp  DWORD PTR [eax-0x6f280297]
  437d35:	imul   edi,ebp,0xab00000f
  437d3b:	imul   edi,ebp,0xfd69a30b
  437d41:	rcr    DWORD PTR [edx-0x6f380297],0x69
  437d48:	std    
  437d49:	mov    edi,0xbbfd69a8
  437d4e:	mov    al,ds:0x98b7fd69
  437d53:	add    ah,bh
  437d55:	add    ecx,DWORD PTR [ecx+0xd]
  437d58:	out    0x3,eax
  437d5a:	test   DWORD PTR [edi+eiz*8],0xe70d4103
  437d61:	add    edi,DWORD PTR [eax-0xb]
  437d64:	out    0x3,al
  437d66:	scas   eax,DWORD PTR es:[edi]
  437d67:	hlt    
  437d68:	out    0x3,al
  437d6a:	std    
  437d6b:	or     al,0xe7
  437d6d:	add    esi,DWORD PTR [ecx]
  437d6f:	or     eax,0xf27903e7
  437d74:	out    0x3,al
  437d76:	jmp    0x437d6a
  437d78:	out    0x3,al
  437d7a:	or     eax,0x2103e70d
  437d7f:	or     eax,0xd1503e7
  437d84:	out    0x3,eax
  437d86:	sbb    DWORD PTR ds:0xd1d03e7,ecx
  437d8c:	out    0x3,eax
  437d8e:	xchg   ecx,eax
  437d8f:	or     eax,0xf23503e7
  437d94:	out    0x3,al
  437d96:	fdivrp st(1),st
  437d98:	out    0x3,al
  437d9a:	fcomi  st,st(1)
  437d9c:	out    0x3,al
  437d9e:	add    BYTE PTR [eax],al
  437da0:	hlt    
  437da1:	icebp  
  437da2:	out    0x3,al
  437da4:	inc    ebp
  437da5:	or     eax,0xd4903e7
  437daa:	out    0x3,eax
  437dac:	pop    ss
  437dad:	or     esp,edi
  437daf:	add    esi,DWORD PTR [ecx+0xd]
  437db2:	out    0x3,eax
  437db4:	gs or  eax,0xd6903e7
  437dba:	out    0x3,eax
  437dbc:	dec    ebp
  437dbd:	or     eax,0xd6103e7
  437dc2:	out    0x3,eax
  437dc4:	dec    DWORD PTR [edx]
  437dc6:	out    0x3,eax
  437dc8:	pop    ecx
  437dc9:	or     eax,0xa3703e7
  437dce:	add    cl,ch
  437dd0:	sahf   
  437dd1:	es or  ebp,ecx
  437dd4:	sahf   
  437dd5:	sbb    cl,BYTE PTR [ebx]
  437dd7:	jmp    0xe94d067a
  437ddc:	sahf   
  437ddd:	and    cl,BYTE PTR [ebx]
  437ddf:	jmp    0xe94e7482
  437de4:	sahf   
  437de5:	cli    
  437de6:	or     ch,cl
  437de8:	sahf   
  437de9:	out    dx,al
  437dea:	or     ch,cl
  437dec:	sahf   
  437ded:	repnz or ch,cl
  437df0:	sahf   
  437df1:	push   es
  437df2:	or     ebp,ecx
  437df4:	sahf   
  437df5:	or     cl,BYTE PTR [ebx]
  437df7:	jmp    0xe94e7c9a
  437dfc:	sahf   
  437dfd:	test   DWORD PTR [ecx+ebp*8],edx
  437e00:	sahf   
  437e01:	push   esi
  437e02:	or     al,0xe9
  437e04:	add    BYTE PTR [eax],al
  437e06:	sahf   
  437e07:	pop    edx
  437e08:	or     al,0xe9
  437e0a:	sahf   
  437e0b:	dec    esi
  437e0c:	or     al,0xe9
  437e0e:	sahf   
  437e0f:	push   edx
  437e10:	or     al,0xe9
  437e12:	sahf   
  437e13:	data16 or al,0xe9
  437e16:	sahf   
  437e17:	push   0xc
  437e19:	jmp    0xe94fdcbc
  437e1e:	sahf   
  437e1f:	sub    cl,BYTE PTR [edx]
  437e21:	jmp    0xe94d9cc4
  437e26:	sahf   
  437e27:	and    cl,BYTE PTR [edx]
  437e29:	jmp    0xe94d74cc
  437e2e:	sahf   
  437e2f:	sbb    al,0x9
  437e31:	jmp    0xe94c8ed4
  437e36:	sahf   
  437e37:	adc    al,0x9
  437e39:	jmp    0xe94ca6dc
  437e3e:	sahf   
  437e3f:	inc    edx
  437e40:	or     al,0xe9
  437e42:	sahf   
  437e43:	xchg   esi,eax
  437e44:	or     al,0xe9
  437e46:	sahf   
  437e47:	call   0xcb4:0x5b4000c
  437e4e:	test   BYTE PTR ds:0x5840cb0,al
  437e54:	lods   al,BYTE PTR ds:[esi]
  437e55:	or     al,0x74
  437e57:	add    eax,0x5740ca8
  437e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437e5d:	or     al,0x84
  437e5f:	add    eax,0x5840cb0
  437e64:	lods   al,BYTE PTR ds:[esi]
  437e65:	or     al,0x74
  437e67:	add    eax,0xca8
  437e6c:	je     0x437e73
  437e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437e6f:	or     al,0x44
  437e71:	add    eax,0x5440ca0
  437e76:	pushf  
  437e77:	or     al,0x34
  437e79:	add    eax,0x5340eee
  437e7e:	jmp    0x4415:0xbc05440e
  437e85:	add    eax,0x5340ee2
  437e8a:	rcl    DWORD PTR ds:0xeda0534,cl
  437e90:	add    al,0x5
  437e92:	(bad)  
  437e93:	push   cs
  437e94:	add    al,0x5
  437e96:	ror    BYTE PTR [esi],cl
  437e98:	hlt    
  437e99:	add    al,0xce
  437e9b:	push   cs
  437e9c:	hlt    
  437e9d:	add    al,0xca
  437e9f:	push   cs
  437ea0:	add    al,0x5
  437ea2:	pusha  
  437ea3:	or     al,0x4
  437ea5:	add    eax,0x4f40c5c
  437eaa:	pop    eax
  437eab:	or     al,0xf4
  437ead:	add    al,0x54
  437eaf:	or     al,0xc4
  437eb1:	add    al,0x50
  437eb3:	or     al,0xc4
  437eb5:	add    al,0x4c
  437eb7:	or     al,0xb4
  437eb9:	add    al,0x48
  437ebb:	or     al,0xb4
  437ebd:	add    al,0x44
  437ebf:	or     al,0xc4
  437ec1:	add    al,0x40
  437ec3:	or     al,0x9d
  437ec5:	imul   edi,ebp,0x3b
  437ec8:	cdq    
  437ec9:	imul   edi,ebp,0x37
  437ecc:	xchg   ecx,eax
  437ecd:	imul   edi,ebp,0x33
  437ed0:	add    BYTE PTR [eax],al
  437ed2:	test   eax,0xa12ffd69
  437ed7:	imul   edi,ebp,0xfd69992b
  437edd:	daa    
  437ede:	xchg   ecx,eax
  437edf:	imul   edi,ebp,0xfd69a923
  437ee5:	pop    ds
  437ee6:	mov    eax,ds:0x991bfd69
  437eeb:	imul   edi,ebp,0xfd699117
  437ef1:	adc    ebp,DWORD PTR [ecx-0x5ef00297]
  437ef7:	imul   edi,ebp,0xfd69990b
  437efd:	pop    es
  437efe:	xchg   ecx,eax
  437eff:	imul   edi,ebp,0xfd69a903
  437f05:	jmp    DWORD PTR [ecx-0x69040297]
  437f0b:	imul   edi,ebp,0xfd6996f7
  437f11:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f13:	imul   edi,ebp,0xfd69a6ef
  437f19:	jmp    0x437eb1
  437f1b:	imul   edi,ebp,0xfd6996e7
  437f21:	jecxz  0x437ec9
  437f23:	imul   edi,ebp,0xfd69a6df
  437f29:	fist   DWORD PTR [esi-0x69280297]
  437f2f:	imul   edi,ebp,0xfd69a6d3
  437f35:	iret   
  437f36:	add    BYTE PTR [eax],al
  437f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f39:	imul   edi,ebp,0xfd6996cb
  437f3f:	(bad)  
  437f40:	xchg   esi,eax
  437f41:	add    ah,bh
  437f43:	add    esp,ecx
  437f45:	or     esp,edi
  437f47:	add    ebx,ebp
  437f49:	or     esp,edi
  437f4b:	add    ebp,ecx
  437f4d:	or     esp,edi
  437f4f:	add    esp,ebp
  437f51:	or     esp,edi
  437f53:	add    edx,DWORD PTR [ecx+0xb]
  437f56:	out    0x3,eax
  437f58:	pop    edx
  437f59:	or     esp,edi
  437f5b:	add    ebx,DWORD PTR [esi+0xb]
  437f5e:	out    0x3,eax
  437f60:	xor    eax,0x4103e70b
  437f65:	or     esp,edi
  437f67:	add    edi,DWORD PTR ds:0x1703e70b
  437f6d:	repnz out 0x3,al
  437f70:	mov    ?,ecx
  437f72:	out    0x3,al
  437f74:	cmp    ecx,esi
  437f76:	out    0x3,al
  437f78:	sub    eax,0x1903e70b
  437f7d:	or     esp,edi
  437f7f:	add    edx,DWORD PTR ds:0x1103e70b
  437f85:	or     esp,edi
  437f87:	add    ebx,DWORD PTR ds:0xa903e70b
  437f8d:	or     esp,edi
  437f8f:	add    edi,DWORD PTR [edi]
  437f91:	add    eax,0x4fb03e7
  437f96:	out    0x3,eax
  437f98:	lea    ecx,[ebx]
  437f9a:	out    0x3,eax
  437f9c:	add    BYTE PTR [eax],al
  437f9e:	jns    0x437fab
  437fa0:	out    0x3,eax
  437fa2:	jne    0x437faf
  437fa4:	out    0x3,eax
  437fa6:	or     DWORD PTR [ebx],0xb2d03e7
  437fac:	out    0x3,eax
  437fae:	cmp    DWORD PTR [ebx],ecx
  437fb0:	out    0x3,eax
  437fb2:	sbb    al,BYTE PTR [esi]
  437fb4:	out    0x3,eax
  437fb6:	push   ds
  437fb7:	push   es
  437fb8:	out    0x3,eax
  437fba:	push   edx
  437fbb:	push   es
  437fbc:	add    cl,ch
  437fbe:	sahf   
  437fbf:	fisttp DWORD PTR [ebx]
  437fc1:	jmp    0xe948fa64
  437fc6:	sahf   
  437fc7:	outs   dx,BYTE PTR ds:[esi]
  437fc8:	add    eax,0x5729ee9
  437fcd:	jmp    0xe9490670
  437fd2:	sahf   
  437fd3:	mov    al,BYTE PTR ds:0x57e9ee9
  437fd9:	jmp    0xe949027c
  437fde:	sahf   
  437fdf:	(bad)  
  437fe0:	add    al,0xe9
  437fe2:	sahf   
  437fe3:	fiadd  DWORD PTR [ecx+ebp*8]
  437fe6:	sahf   
  437fe7:	into   
  437fe8:	add    al,0xe9
  437fea:	sahf   
  437feb:	and    al,BYTE PTR ds:0x4f69ee9
  437ff1:	jmp    0xe9487a94
  437ff6:	sahf   
  437ff7:	out    dx,al
  437ff8:	add    al,0xe9
  437ffa:	sahf   
  437ffb:	repnz add al,0xe9
  437ffe:	sahf   
  437fff:	push   es
  438000:	add    eax,0x9e0000e9
  438005:	or     al,BYTE PTR ds:0x4fe9ee9
  43800b:	jmp    0xe94882ae
  438010:	sahf   
  438011:	push   esi
  438012:	push   es
  438013:	jmp    0xe949dab6
  438018:	sahf   
  438019:	dec    esi
  43801a:	push   es
  43801b:	jmp    0xe949d2be
  438020:	sahf   
  438021:	pushw  es
  438023:	jmp    0xe949eac6
  438028:	sahf   
  438029:	pop    esi
  43802a:	push   es
  43802b:	jmp    0xe949d2ce
  438030:	sahf   
  438031:	pushw  es
  438033:	jmp    0x49ead6
  438038:	les    eax,FWORD PTR [ecx]
  43803a:	aam    0xa
  43803c:	les    eax,FWORD PTR [ecx]
  43803e:	inc    ebx
  43803f:	or     esi,DWORD PTR [ecx+eax*1+0x1b40acc]
  438046:	cs or  eax,0xd2a01c4
  43804c:	les    eax,FWORD PTR [ecx]
  43804e:	ror    BYTE PTR [edx],1
  438050:	mov    ah,0x1
  438052:	int3   
  438053:	or     dh,BYTE PTR [ecx+eax*1+0x1840ac8]
  43805a:	mov    ah,0xa
  43805c:	test   BYTE PTR [ecx],al
  43805e:	and    ecx,DWORD PTR [ebx]
  438060:	je     0x438063
  438062:	lods   al,BYTE PTR ds:[esi]
  438063:	or     dh,BYTE PTR [ecx+eax*1+0x68]
  438067:	adc    DWORD PTR [eax],eax
  438069:	add    BYTE PTR [ecx+eax*1+0x1840aa4],al
  438070:	mov    al,ds:0x9c01740a
  438075:	or     dh,BYTE PTR [ecx+eax*1-0x68]
  438079:	or     al,BYTE PTR [ecx+eax*1-0x6c]
  43807d:	or     al,BYTE PTR [ecx+eax*1-0x70]
  438081:	or     dh,BYTE PTR [ecx+eax*1]
  438084:	mov    WORD PTR [edx],cs
  438086:	xor    al,0x1
  438088:	mov    BYTE PTR [edx],cl
  43808a:	inc    esp
  43808b:	add    DWORD PTR [edx+ecx*1+0xa800144],eax
  438092:	xor    al,0x1
  438094:	mov    WORD PTR [edx],cs
  438096:	xor    al,0x1
  438098:	in     al,dx
  438099:	push   cs
  43809a:	add    al,0x1
  43809c:	je     0x4380a8
  43809e:	add    al,0x1
  4380a0:	jo     0x4380ac
  4380a2:	hlt    
  4380a3:	add    BYTE PTR [edx+ecx*1-0xc],ch
  4380a7:	add    BYTE PTR [eax+0xa],ch
  4380aa:	add    al,0x1
  4380ac:	or     al,BYTE PTR fs:[ecx+eax*1]
  4380b0:	pusha  
  4380b1:	or     bl,BYTE PTR [ebp-0x68a40295]
  4380b7:	imul   edi,ebp,0x57
  4380ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380bb:	imul   edi,ebp,0x53
  4380be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380bf:	imul   edi,ebp,0x4f
  4380c2:	xchg   edi,eax
  4380c3:	imul   edi,ebp,0x4b
  4380c6:	xchg   edi,eax
  4380c7:	imul   edi,ebp,0x47
  4380ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380cb:	imul   edi,ebp,0xffffffd6
  4380ce:	add    BYTE PTR [eax],al
  4380d0:	mov    ds:0x974ffd6b,eax
  4380d5:	imul   edi,ebp,0x4b
  4380d8:	xchg   edi,eax
  4380d9:	imul   edi,ebp,0x47
  4380dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380dd:	imul   edi,ebp,0xfd69a743
  4380e3:	aas    
  4380e4:	xchg   edi,eax
  4380e5:	imul   edi,ebp,0xfd69973b
  4380eb:	aaa    
  4380ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380ed:	imul   edi,ebp,0xfd69a733
  4380f3:	pop    ds
  4380f4:	xchg   edi,eax
  4380f5:	imul   edi,ebp,0xfd69971b
  4380fb:	pop    ss
  4380fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380fd:	imul   edi,ebp,0xfd69a713
  438103:	seta   BYTE PTR [ecx-0x3]
  438107:	or     edx,DWORD PTR [edi-0x59590297]
  43810d:	imul   edi,ebp,0xfd69a703
  438113:	call   DWORD PTR [edi-0x6b040297]
  438119:	imul   edi,ebp,0xfd69a4f7
  43811f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438121:	imul   edi,ebp,0xfd6994ef
  438127:	jmp    0x4380bd
  438129:	imul   edi,ebp,0xe702a4e7
  43812f:	add    edi,ecx
  438131:	or     edi,esp
  438133:	add    eax,DWORD PTR [eax]
  438135:	add    ch,bh
  438137:	or     edi,esp
  438139:	add    eax,ecx
  43813b:	or     edi,esp
  43813d:	add    esi,ebp
  43813f:	or     edi,esp
  438141:	add    ebp,ecx
  438143:	or     edi,esp
  438145:	add    ebp,ebp
  438147:	or     edi,esp
  438149:	add    edx,ecx
  43814b:	or     edi,esp
  43814d:	add    eax,DWORD PTR [edx+0x7]
  438150:	out    0x3,eax
  438152:	(bad)  [ecx]
  438154:	out    0x3,eax
  438156:	fisttp QWORD PTR [ecx]
  438158:	out    0x3,eax
  43815a:	loope  0x438165
  43815c:	out    0x3,eax
  43815e:	push   ebp
  43815f:	or     edi,esp
  438161:	add    ecx,DWORD PTR [ecx+0x9]
  438164:	out    0x3,eax
  438166:	dec    ebp
  438167:	or     edi,esp
  438169:	add    esi,DWORD PTR [ecx]
  43816b:	or     edi,esp
  43816d:	add    eax,DWORD PTR [ebp+0x9]
  438170:	out    0x3,eax
  438172:	cmp    DWORD PTR [ecx],ecx
  438174:	out    0x3,eax
  438176:	imul   eax,DWORD PTR [edi],0x90103e7
  43817c:	out    0x3,eax
  43817e:	xor    eax,0x2903e709
  438183:	or     edi,esp
  438185:	add    ebp,DWORD PTR ds:0x1103e709
  43818b:	or     edi,esp
  43818d:	add    esp,DWORD PTR ds:0x1903e709
  438193:	or     edi,esp
  438195:	add    ebx,DWORD PTR ds:0x3e709
  43819b:	add    BYTE PTR [ecx-0x6afc18f7],ah
  4381a1:	or     edi,esp
  4381a3:	add    ecx,DWORD PTR [ecx-0x72fc18f7]
  4381a9:	or     DWORD PTR [eax],eax
  4381ab:	jmp    0xe94a684e
  4381b0:	sahf   
  4381b1:	jmp    0xe905:0x449ee906
  4381b8:	sahf   
  4381b9:	loop   0x4381c1
  4381bb:	jmp    0xe94a385e
  4381c0:	sahf   
  4381c1:	mov    edx,0xae9ee906
  4381c6:	push   es
  4381c7:	jmp    0xe94a346a
  4381cc:	sahf   
  4381cd:	mov    BYTE PTR [esi],0xe9
  4381d0:	sahf   
  4381d1:	retf   0xe906
  4381d4:	sahf   
  4381d5:	mov    esi,0xc29ee906
  4381da:	push   es
  4381db:	jmp    0xe94a987e
  4381e0:	sahf   
  4381e1:	or     al,BYTE PTR [edi]
  4381e3:	jmp    0xe94a9886
  4381e8:	sahf   
  4381e9:	ins    BYTE PTR es:[edi],dx
  4381ea:	add    eax,0x5789ee9
  4381ef:	jmp    0xe948f692
  4381f4:	sahf   
  4381f5:	add    BYTE PTR ds:0x7199ee9,0xe9
  4381fc:	sahf   
  4381fd:	mov    BYTE PTR ds:0x9e0000e9,al
  438203:	test   BYTE PTR ds:0x4d09ee9,al
  438209:	jmp    0xe94aabac
  43820e:	sahf   
  43820f:	and    eax,0xd49ee907
  438214:	add    al,0xe9
  438216:	sahf   
  438217:	in     eax,dx
  438218:	push   es
  438219:	jmp    0xe9485ebc
  43821e:	sahf   
  43821f:	call   0xe4e26b28
  438224:	add    al,0x0
  438226:	add    al,0x6
  438228:	pop    edx
  438229:	or     esi,esp
  43822b:	add    eax,0x5f408f0
  438230:	in     al,dx
  438231:	or     BYTE PTR [esi+eax*1],al
  438234:	call   0x4a498641
  438239:	or     esi,esp
  43823b:	add    eax,0x5f408f1
  438240:	in     eax,dx
  438241:	or     ah,al
  438243:	add    eax,0x5c408e9
  438248:	in     eax,0x8
  43824a:	mov    ah,0x5
  43824c:	loope  0x438256
  43824e:	mov    ah,0x5
  438250:	fisttp QWORD PTR [eax]
  438252:	les    eax,FWORD PTR ds:0x5c40b2e
  438258:	sub    cl,BYTE PTR [ebx]
  43825a:	mov    ah,0x5
  43825c:	ror    DWORD PTR [eax],1
  43825e:	mov    ah,0x5
  438260:	int    0x8
  438262:	test   BYTE PTR ds:0x8c9,al
  438268:	test   BYTE PTR ds:0x57408c5,al
  43826e:	push   ss
  43826f:	or     esi,DWORD PTR [ebp+eax*1+0x12]
  438273:	or     eax,DWORD PTR [ebp+eax*1+0x5840b0e]
  43827a:	or     cl,BYTE PTR [ebx]
  43827c:	je     0x438283
  43827e:	mov    cl,0x8
  438280:	je     0x438287
  438282:	lods   eax,DWORD PTR ds:[esi]
  438283:	or     BYTE PTR [ebp+eax*1-0x57],al
  438287:	or     BYTE PTR [ebp+eax*1-0x5b],al
  43828b:	or     BYTE PTR [eax*1+0x53408a1],dh
  438292:	popf   
  438293:	or     BYTE PTR [ebp+eax*1-0x12],al
  438297:	or     al,BYTE PTR [ebp+eax*1-0x6b]
  43829b:	or     BYTE PTR [eax*1+0x5b9d0891],dh
  4382a2:	std    
  4382a3:	xchg   edx,eax
  4382a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4382a5:	pop    ebx
  4382a6:	std    
  4382a7:	mov    fs,WORD PTR [ebp-0x6a7502a5]
  4382ad:	pop    ebx
  4382ae:	std    
  4382af:	xchg   BYTE PTR [ebp-0x5a7d02a5],dl
  4382b5:	pop    ebx
  4382b6:	std    
  4382b7:	jle    0x43825e
  4382b9:	pop    ebx
  4382ba:	std    
  4382bb:	jp     0x438252
  4382bd:	pop    ebx
  4382be:	std    
  4382bf:	jbe    0x438256
  4382c1:	pop    ebx
  4382c2:	std    
  4382c3:	jb     0x43826a
  4382c5:	pop    ebx
  4382c6:	std    
  4382c7:	shl    DWORD PTR [edi+0xbdfd5b],0x0
  4382ce:	xchg   edi,eax
  4382cf:	pop    ebx
  4382d0:	std    
  4382d1:	mov    ecx,0xb5fd5b97
  4382d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382d7:	pop    ebx
  4382d8:	std    
  4382d9:	mov    cl,0xa7
  4382db:	pop    ebx
  4382dc:	std    
  4382dd:	lods   eax,DWORD PTR ds:[esi]
  4382de:	xchg   edi,eax
  4382df:	pop    ebx
  4382e0:	std    
  4382e1:	test   eax,0xa5fd5b97
  4382e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382e7:	pop    ecx
  4382e8:	std    
  4382e9:	mov    eax,ds:0x9dfd59a7
  4382ee:	xchg   edi,eax
  4382ef:	pop    ecx
  4382f0:	std    
  4382f1:	cdq    
  4382f2:	xchg   edi,eax
  4382f3:	pop    ecx
  4382f4:	std    
  4382f5:	xchg   ebp,eax
  4382f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382f7:	pop    ecx
  4382f8:	std    
  4382f9:	xchg   ecx,eax
  4382fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382fb:	pop    ecx
  4382fc:	std    
  4382fd:	lea    edx,[edi-0x687602a7]
  438303:	pop    ecx
  438304:	std    
  438305:	test   DWORD PTR [edi-0x587e02a7],esp
  43830b:	pop    ecx
  43830c:	std    
  43830d:	jge    0x4382a6
  43830f:	pop    ecx
  438310:	std    
  438311:	jns    0x4382aa
  438313:	pop    ecx
  438314:	std    
  438315:	jne    0x4382be
  438317:	pop    ecx
  438318:	std    
  438319:	jno    0x4382c2
  43831b:	add    ah,bh
  43831d:	add    edi,DWORD PTR [ebx-0x48fc1904]
  438323:	cld    
  438324:	out    0x3,al
  438326:	cmp    esp,0xffffffe6
  438329:	add    edi,DWORD PTR [edi-0x4]
  43832c:	out    0x3,al
  43832e:	imul   edi,esp,0xffffffe6
  438331:	add    eax,DWORD PTR [eax]
  438333:	add    BYTE PTR [edi-0x4],ah
  438336:	out    0x3,al
  438338:	push   ebx
  438339:	cld    
  43833a:	out    0x3,al
  43833c:	dec    edi
  43833d:	cld    
  43833e:	out    0x3,al
  438340:	pop    ebx
  438341:	cld    
  438342:	out    0x3,al
  438344:	push   edi
  438345:	cld    
  438346:	out    0x3,al
  438348:	arpl   sp,di
  43834a:	out    0x3,al
  43834c:	pop    edi
  43834d:	cld    
  43834e:	out    0x3,al
  438350:	mov    edi,esp
  438352:	out    0x3,al
  438354:	xchg   esp,edi
  438356:	out    0x3,al
  438358:	jae    0x438356
  43835a:	out    0x3,al
  43835c:	outs   dx,DWORD PTR ds:[esi]
  43835d:	cld    
  43835e:	out    0x3,al
  438360:	jnp    0x43835e
  438362:	out    0x3,al
  438364:	ja     0x438362
  438366:	out    0x3,al
  438368:	ret    
  438369:	cld    
  43836a:	out    0x3,al
  43836c:	mov    edi,0xab03e6fc
  438371:	cld    
  438372:	out    0x3,al
  438374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438375:	cld    
  438376:	out    0x3,al
  438378:	xchg   ebx,eax
  438379:	cld    
  43837a:	out    0x3,al
  43837c:	(bad)  
  43837d:	cld    
  43837e:	out    0x3,al
  438380:	fwait
  438381:	cld    
  438382:	out    0x3,al
  438384:	xchg   edi,eax
  438385:	cld    
  438386:	out    0x3,al
  438388:	mov    ds:0x9f03e6fc,eax
  43838d:	cld    
  43838e:	out    0x3,al
  438390:	dec    ebx
  438391:	stc    
  438392:	out    0x3,al
  438394:	inc    edi
  438395:	stc    
  438396:	(bad)  
  438397:	call   0x58e1839c
  43839c:	pop    es
  43839d:	jmp    0xe94ad840
  4383a2:	sahf   
  4383a3:	pusha  
  4383a4:	pop    es
  4383a5:	jmp    0xe94ae048
  4383aa:	sahf   
  4383ab:	push   0x649ee907
  4383b0:	pop    es
  4383b1:	jmp    0xe94ab454
  4383b6:	sahf   
  4383b7:	sub    al,0x7
  4383b9:	jmp    0xe94abc5c
  4383be:	sahf   
  4383bf:	xor    al,0x7
  4383c1:	jmp    0xe94ac464
  4383c6:	sahf   
  4383c7:	cmp    al,0x7
  4383c9:	jmp    0xe94acc6c
  4383ce:	sahf   
  4383cf:	inc    esp
  4383d0:	pop    es
  4383d1:	jmp    0xe94b1474
  4383d6:	sahf   
  4383d7:	mov    WORD PTR [edi],es
  4383d9:	jmp    0xe94b1c7c
  4383de:	sahf   
  4383df:	xchg   esp,eax
  4383e0:	pop    es
  4383e1:	jmp    0xe94b2484
  4383e6:	sahf   
  4383e7:	pushf  
  4383e8:	pop    es
  4383e9:	jmp    0xe94b288c
  4383ee:	sahf   
  4383ef:	mov    al,ds:0x6c9ee907
  4383f4:	pop    es
  4383f5:	jmp    0xe94aec98
  4383fa:	sahf   
  4383fb:	je     0x438404
  4383fd:	jmp    0x70e18402
  438402:	pop    es
  438403:	jmp    0xe94b00a6
  438408:	sahf   
  438409:	js     0x438412
  43840b:	jmp    0xe94b08ae
  438410:	sahf   
  438411:	add    BYTE PTR [edi],0x0
  438414:	xor    al,0x2
  438416:	jp     0x438421
  438418:	xor    al,0x2
  43841a:	jbe    0x438425
  43841c:	inc    esp
  43841d:	add    dh,BYTE PTR [edx+0x9]
  438420:	inc    esp
  438421:	add    ch,BYTE PTR [esi+0x9]
  438424:	xor    al,0x2
  438426:	push   0x9
  438428:	xor    al,0x2
  43842a:	or     WORD PTR [edx+eax*1],ax
  43842e:	bound  ecx,QWORD PTR [ecx]
  438430:	add    al,0x2
  438432:	pop    esi
  438433:	or     esp,esi
  438435:	add    DWORD PTR [edx+0x9],ebx
  438438:	hlt    
  438439:	add    DWORD PTR [esi+0x9],edx
  43843c:	add    al,0x2
  43843e:	push   edx
  43843f:	or     DWORD PTR [edx+eax*1],eax
  438442:	dec    esi
  438443:	or     esp,esi
  438445:	add    DWORD PTR [edx+0x9],ecx
  438448:	hlt    
  438449:	add    DWORD PTR [esi+0x9],eax
  43844c:	les    eax,FWORD PTR [ecx]
  43844e:	inc    edx
  43844f:	or     esp,eax
  438451:	add    DWORD PTR [esi],edi
  438453:	or     DWORD PTR [ecx+eax*1+0x1b4093a],esi
  43845a:	ss or  esp,eax
  43845d:	add    DWORD PTR [edx],esi
  43845f:	or     esp,eax
  438461:	add    DWORD PTR [esi],ebp
  438463:	or     DWORD PTR [eax],eax
  438465:	add    BYTE PTR [ecx+eax*1+0x1b4092a],dh
  43846c:	or     DWORD PTR es:[ecx+eax*1+0x1840922],eax
  438474:	push   ds
  438475:	or     DWORD PTR [ecx+eax*1+0x1a],esi
  438479:	or     DWORD PTR [ecx+eax*1+0x16],esi
  43847d:	or     DWORD PTR [ecx+eax*1+0x1840912],eax
  438484:	push   cs
  438485:	or     DWORD PTR [ecx+eax*1+0xa],esi
  438489:	or     DWORD PTR [ecx+eax*1+0x6],esi
  43848d:	or     DWORD PTR [ebp-0x5bfa02a5],ebx
  438493:	pop    ebx
  438494:	std    
  438495:	add    DWORD PTR [ebx+ebx*2+0x5b95fdfd],edx
  43849c:	std    
  43849d:	stc    
  43849e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43849f:	pop    ebx
  4384a0:	std    
  4384a1:	cmc    
  4384a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384a3:	pop    ebx
  4384a4:	std    
  4384a5:	icebp  
  4384a6:	xchg   ebp,eax
  4384a7:	pop    ebx
  4384a8:	std    
  4384a9:	in     eax,dx
  4384aa:	xchg   ebp,eax
  4384ab:	pop    ebx
  4384ac:	std    
  4384ad:	jmp    0xe640e057
  4384b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384b3:	pop    ebx
  4384b4:	std    
  4384b5:	loope  0x43844c
  4384b7:	pop    ebx
  4384b8:	std    
  4384b9:	fst    QWORD PTR [ebp-0x5a2602a5]
  4384bf:	pop    ebx
  4384c0:	std    
  4384c1:	aad    0xa5
  4384c3:	pop    ebx
  4384c4:	std    
  4384c5:	rcl    DWORD PTR [ebp+0xcdfd5b],1
  4384cb:	add    BYTE PTR [ebp-0x5a3602a5],dl
  4384d1:	pop    ebx
  4384d2:	std    
  4384d3:	lds    esp,FWORD PTR [ebp-0x6a3e02a5]
  4384d9:	pop    ebx
  4384da:	std    
  4384db:	mov    ebp,0xb9fd5b95
  4384e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384e1:	pop    ebx
  4384e2:	std    
  4384e3:	mov    ch,0xa5
  4384e5:	pop    ebx
  4384e6:	std    
  4384e7:	mov    cl,0x95
  4384e9:	pop    ebx
  4384ea:	std    
  4384eb:	lods   eax,DWORD PTR ds:[esi]
  4384ec:	xchg   ebp,eax
  4384ed:	pop    ebx
  4384ee:	std    
  4384ef:	test   eax,0xa5fd59a5
  4384f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384f5:	pop    ecx
  4384f6:	std    
  4384f7:	mov    eax,ds:0x9dfd5995
  4384fc:	xchg   ebp,eax
  4384fd:	pop    ecx
  4384fe:	std    
  4384ff:	cdq    
  438500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438501:	pop    ecx
  438502:	std    
  438503:	xchg   ebp,eax
  438504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438505:	pop    ecx
  438506:	std    
  438507:	xchg   ecx,eax
  438508:	xchg   ebp,eax
  438509:	add    ah,bh
  43850b:	add    edx,DWORD PTR [ebx]
  43850d:	sti    
  43850e:	out    0x3,al
  438510:	daa    
  438511:	sti    
  438512:	out    0x3,al
  438514:	sbb    edi,ebx
  438516:	out    0x3,al
  438518:	pop    ds
  438519:	sti    
  43851a:	out    0x3,al
  43851c:	ret    
  43851d:	cli    
  43851e:	out    0x3,al
  438520:	mov    bh,0xfa
  438522:	out    0x3,al
  438524:	stos   DWORD PTR es:[edi],eax
  438525:	cli    
  438526:	out    0x3,al
  438528:	scas   eax,DWORD PTR es:[edi]
  438529:	cli    
  43852a:	out    0x3,al
  43852c:	mov    bl,0xfa
  43852e:	out    0x3,al
  438530:	add    BYTE PTR [eax],al
  438532:	xchg   edx,edi
  438534:	out    0x3,al
  438536:	jnp    0x438532
  438538:	out    0x3,al
  43853a:	jg     0x438536
  43853c:	out    0x3,al
  43853e:	arpl   dx,di
  438540:	out    0x3,al
  438542:	push   edi
  438543:	cli    
  438544:	out    0x3,al
  438546:	dec    ebx
  438547:	cli    
  438548:	out    0x3,al
  43854a:	dec    edi
  43854b:	cli    
  43854c:	out    0x3,al
  43854e:	push   ebx
  43854f:	cli    
  438550:	out    0x3,al
  438552:	addr16 cli 
  438554:	out    0x3,al
  438556:	pop    ebx
  438557:	cli    
  438558:	out    0x3,al
  43855a:	pop    edi
  43855b:	cli    
  43855c:	out    0x3,al
  43855e:	cmp    edx,0xffffffe6
  438561:	add    esi,DWORD PTR [edi-0x6]
  438564:	out    0x3,al
  438566:	imul   edi,edx,0xffffffe6
  438569:	add    ebp,DWORD PTR [edi-0x6]
  43856c:	out    0x3,al
  43856e:	jae    0x43856a
  438570:	out    0x3,al
  438572:	(bad)  
  438573:	cli    
  438574:	out    0x3,al
  438576:	mov    ebx,0xbf03e6fa
  43857b:	cli    
  43857c:	out    0x3,al
  43857e:	mov    ds:0x9703e6fa,eax
  438583:	cli    
  438584:	(bad)  
  438585:	call   0xe94b7a28
  43858a:	sahf   
  43858b:	lock pop es
  43858d:	jmp    0xe94b8230
  438592:	sahf   
  438593:	sbb    DWORD PTR [ecx],eax
  438595:	jmp    0x25e1859a
  43859a:	add    ecx,ebp
  43859c:	sahf   
  43859d:	add    BYTE PTR [eax],cl
  43859f:	jmp    0xe944d242
  4385a4:	sahf   
  4385a5:	dec    eax
  4385a6:	add    ecx,ebp
  4385a8:	sahf   
  4385a9:	push   esp
  4385aa:	add    ecx,ebp
  4385ac:	sahf   
  4385ad:	push   eax
  4385ae:	add    ecx,ebp
  4385b0:	sahf   
  4385b1:	pop    esp
  4385b2:	add    ecx,ebp
  4385b4:	sahf   
  4385b5:	pop    eax
  4385b6:	add    ecx,ebp
  4385b8:	sahf   
  4385b9:	fs add ecx,ebp
  4385bc:	sahf   
  4385bd:	pusha  
  4385be:	add    ecx,ebp
  4385c0:	sahf   
  4385c1:	sub    al,0x1
  4385c3:	jmp    0xe944ae66
  4385c8:	sahf   
  4385c9:	xor    al,0x1
  4385cb:	jmp    0xe944b66e
  4385d0:	sahf   
  4385d1:	cmp    al,0x1
  4385d3:	jmp    0xe944be76
  4385d8:	sahf   
  4385d9:	inc    esp
  4385da:	add    ecx,ebp
  4385dc:	sahf   
  4385dd:	inc    eax
  4385de:	add    ecx,ebp
  4385e0:	sahf   
  4385e1:	mov    WORD PTR [ecx],es
  4385e3:	jmp    0xe9450e86
  4385e8:	sahf   
  4385e9:	xchg   esp,eax
  4385ea:	add    ecx,ebp
  4385ec:	sahf   
  4385ed:	nop
  4385ee:	add    ecx,ebp
  4385f0:	sahf   
  4385f1:	pushf  
  4385f2:	add    ecx,ebp
  4385f4:	sahf   
  4385f5:	fild   WORD PTR [edx]
  4385f7:	jmp    0xe946699a
  4385fc:	add    BYTE PTR [eax],al
  4385fe:	sahf   
  4385ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438600:	add    al,BYTE PTR [eax]
  438602:	je     0x43860a
  438604:	push   edi
  438605:	add    eax,0x5530684
  43860a:	test   BYTE PTR [esi],al
  43860c:	dec    edi
  43860d:	add    eax,0x54b0674
  438612:	je     0x43861a
  438614:	and    al,0x5
  438616:	inc    esp
  438617:	push   es
  438618:	xchg   BYTE PTR [edi],al
  43861a:	inc    esp
  43861b:	push   es
  43861c:	add    BYTE PTR [edi],0x34
  43861f:	push   es
  438620:	jle    0x438629
  438622:	xor    al,0x6
  438624:	jp     0x43862d
  438626:	inc    esp
  438627:	push   es
  438628:	xor    eax,DWORD PTR ds:0x52f0644
  43862e:	xor    al,0x6
  438630:	sub    eax,DWORD PTR ds:0x5270634
  438636:	add    al,0x6
  438638:	popw   es
  43863a:	add    al,0x6
  43863c:	bound  eax,QWORD PTR [edi]
  43863e:	hlt    
  43863f:	add    eax,0x5f4075e
  438644:	pop    edx
  438645:	pop    es
  438646:	add    al,0x6
  438648:	push   esi
  438649:	pop    es
  43864a:	add    al,0x6
  43864c:	push   edx
  43864d:	pop    es
  43864e:	hlt    
  43864f:	add    eax,0x5f4074e
  438654:	dec    edx
  438655:	pop    es
  438656:	les    eax,FWORD PTR ds:0x5c40503
  43865c:	inc    DWORD PTR [esp+esi*4]
  43865f:	add    eax,0x4fb
  438664:	mov    ah,0x5
  438666:	cmp    al,BYTE PTR [edi]
  438668:	les    eax,FWORD PTR ds:0x5c40736
  43866e:	xor    al,BYTE PTR [edi]
  438670:	mov    ah,0x5
  438672:	cs pop es
  438674:	mov    ah,0x5
  438676:	sub    al,BYTE PTR [edi]
  438678:	test   BYTE PTR ds:0x5b9d0726,al
  43867e:	std    
  43867f:	and    eax,0x21fd5ba2
  438684:	call   0xfd5b:0xa21dfd5b
  43868b:	sbb    DWORD PTR [edx-0x5dea02a5],ebx
  438691:	pop    ebx
  438692:	std    
  438693:	adc    DWORD PTR [edx-0x5df202a5],ebx
  438699:	pop    ebx
  43869a:	std    
  43869b:	or     DWORD PTR [edx-0x5dfa02a5],ebx
  4386a1:	pop    ebx
  4386a2:	std    
  4386a3:	add    DWORD PTR [edx-0x5c0202a5],ebx
  4386a9:	pop    ebx
  4386aa:	std    
  4386ab:	stc    
  4386ac:	fwait
  4386ad:	pop    ebx
  4386ae:	std    
  4386af:	cmc    
  4386b0:	mov    ds:0x9bf1fd5b,eax
  4386b5:	pop    ebx
  4386b6:	std    
  4386b7:	in     eax,dx
  4386b8:	mov    ds:0x9be9fd5b,eax
  4386bd:	pop    ebx
  4386be:	std    
  4386bf:	in     eax,0xa3
  4386c1:	pop    ebx
  4386c2:	std    
  4386c3:	loope  0x438660
  4386c5:	pop    ebx
  4386c6:	std    
  4386c7:	fld    QWORD PTR [eax]
  4386c9:	add    BYTE PTR [ebx-0x642602a5],ah
  4386cf:	pop    ebx
  4386d0:	std    
  4386d1:	aad    0xa3
  4386d3:	pop    ebx
  4386d4:	std    
  4386d5:	rcr    DWORD PTR [ebx-0x5c3202a5],1
  4386db:	pop    ebx
  4386dc:	std    
  4386dd:	test   BYTE PTR [ecx-0x5e7f02a5],bl
  4386e3:	pop    ebx
  4386e4:	std    
  4386e5:	jl     0x438680
  4386e7:	pop    ebx
  4386e8:	std    
  4386e9:	mov    ebp,0xb9fd5ba3
  4386ee:	fwait
  4386ef:	pop    ebx
  4386f0:	std    
  4386f1:	mov    ch,0xa3
  4386f3:	pop    ebx
  4386f4:	std    
  4386f5:	mov    cl,0x9b
  4386f7:	add    ah,bh
  4386f9:	add    ecx,DWORD PTR [ebx+0x1]
  4386fc:	out    0x3,eax
  4386fe:	inc    edi
  4386ff:	add    edi,esp
  438701:	add    eax,DWORD PTR [ebx+0x1]
  438704:	out    0x3,eax
  438706:	aas    
  438707:	add    edi,esp
  438709:	add    ebx,DWORD PTR [ebx]
  43870b:	add    edi,esp
  43870d:	add    edx,DWORD PTR [edi]
  43870f:	add    edi,esp
  438711:	add    edx,DWORD PTR [ebx]
  438713:	add    edi,esp
  438715:	add    ecx,DWORD PTR [edi]
  438717:	add    edi,esp
  438719:	add    ebp,DWORD PTR [ebx]
  43871b:	add    edi,esp
  43871d:	add    esp,DWORD PTR [edi]
  43871f:	add    edi,esp
  438721:	add    esp,DWORD PTR [ebx]
  438723:	add    edi,esp
  438725:	add    ebx,DWORD PTR [edi]
  438727:	add    edi,esp
  438729:	add    edi,DWORD PTR [ebx+0x3e700]
  43872f:	add    BYTE PTR [edi-0x4cfc1900],dh
  438735:	add    bh,ah
  438737:	add    ebp,DWORD PTR [edi-0x74fc1900]
  43873d:	add    bh,ah
  43873f:	add    eax,DWORD PTR [edi-0x7cfc1900]
  438745:	add    bh,ah
  438747:	add    edi,DWORD PTR [edi+0x0]
  43874a:	out    0x3,eax
  43874c:	pop    ebx
  43874d:	add    bh,ah
  43874f:	add    edx,DWORD PTR [edi+0x0]
  438752:	out    0x3,eax
  438754:	push   ebx
  438755:	add    bh,ah
  438757:	add    ecx,DWORD PTR [edi+0x0]
  43875a:	out    0x3,eax
  43875c:	imul   eax,DWORD PTR [eax],0xffffffe7
  43875f:	add    ebx,DWORD PTR [eax-0x63fc1902]
  438765:	(bad)  
  438766:	out    0x3,al
  438768:	rol    BYTE PTR [ebx],0xe7
  43876b:	add    esi,DWORD PTR [ebx+eax*1+0x7703e7]
  438772:	add    cl,ch
  438774:	sahf   
  438775:	adc    BYTE PTR [edx],al
  438777:	jmp    0xe9459c1a
  43877c:	sahf   
  43877d:	sbb    BYTE PTR [edx],al
  43877f:	jmp    0xe945a422
  438784:	sahf   
  438785:	and    BYTE PTR [edx],al
  438787:	jmp    0xe945ac2a
  43878c:	sahf   
  43878d:	call   0xece27093
  438792:	add    ecx,ebp
  438794:	add    BYTE PTR [eax],al
  438796:	sahf   
  438797:	lock add ecx,ebp
  43879a:	sahf   
  43879b:	hlt    
  43879c:	add    ecx,ebp
  43879e:	sahf   
  43879f:	clc    
  4387a0:	add    ecx,ebp
  4387a2:	sahf   
  4387a3:	cld    
  4387a4:	add    ecx,ebp
  4387a6:	sahf   
  4387a7:	add    BYTE PTR [edx],al
  4387a9:	jmp    0xe9458c4c
  4387ae:	sahf   
  4387af:	dec    eax
  4387b0:	add    ebp,ecx
  4387b2:	sahf   
  4387b3:	dec    esp
  4387b4:	add    ebp,ecx
  4387b6:	sahf   
  4387b7:	push   eax
  4387b8:	add    ebp,ecx
  4387ba:	sahf   
  4387bb:	push   esp
  4387bc:	add    ebp,ecx
  4387be:	sahf   
  4387bf:	pop    eax
  4387c0:	add    ebp,ecx
  4387c2:	sahf   
  4387c3:	pop    esp
  4387c4:	add    ebp,ecx
  4387c6:	sahf   
  4387c7:	pusha  
  4387c8:	add    ebp,ecx
  4387ca:	sahf   
  4387cb:	fs add ebp,ecx
  4387ce:	sahf   
  4387cf:	sub    BYTE PTR [ebx],al
  4387d1:	jmp    0xe946b474
  4387d6:	sahf   
  4387d7:	xor    BYTE PTR [ebx],al
  4387d9:	jmp    0xe946bc7c
  4387de:	sahf   
  4387df:	cmp    BYTE PTR [ebx],al
  4387e1:	jmp    0xe946c484
  4387e6:	sahf   
  4387e7:	inc    eax
  4387e8:	add    ebp,ecx
  4387ea:	sahf   
  4387eb:	inc    esp
  4387ec:	add    eax,DWORD PTR [eax]
  4387ee:	les    eax,FWORD PTR [edx]
  4387f0:	mov    edx,0xb602c405
  4387f5:	add    eax,0x5b202b4
  4387fa:	add    BYTE PTR [eax],al
  4387fc:	mov    ah,0x2
  4387fe:	scas   al,BYTE PTR es:[edi]
  4387ff:	add    eax,0x5aa0284
  438804:	test   BYTE PTR [edx],al
  438806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438807:	add    eax,0x5a20274
  43880c:	je     0x438810
  43880e:	sahf   
  43880f:	add    eax,0x59a0284
  438814:	test   BYTE PTR [edx],al
  438816:	xchg   esi,eax
  438817:	add    eax,0x5920274
  43881c:	je     0x438820
  43881e:	mov    es,WORD PTR ds:0x58a0244
  438824:	inc    esp
  438825:	add    al,BYTE PTR [esi-0x7dfdcbfb]
  43882b:	add    eax,0x57e0234
  438830:	inc    esp
  438831:	add    bh,BYTE PTR [edx+0x5]
  438834:	inc    esp
  438835:	add    dh,BYTE PTR [esi+0x5]
  438838:	xor    al,0x2
  43883a:	jb     0x438841
  43883c:	xor    al,0x2
  43883e:	outs   dx,BYTE PTR ds:[esi]
  43883f:	add    eax,0x56a0204
  438844:	add    al,0x2
  438846:	add    ax,0x1f4
  43884a:	bound  eax,QWORD PTR ds:0x55e01f4
  438850:	add    al,0x2
  438852:	pop    edx
  438853:	add    eax,0x5560204
  438858:	hlt    
  438859:	add    DWORD PTR [edx+0x5],edx
  43885c:	hlt    
  43885d:	add    DWORD PTR [esi+0x5],ecx
  438860:	add    BYTE PTR [eax],al
  438862:	les    eax,FWORD PTR [ecx]
  438864:	dec    edx
  438865:	add    eax,0x54601c4
  43886a:	popf   
  43886b:	pop    ebx
  43886c:	std    
  43886d:	inc    ebp
  43886e:	cwde   
  43886f:	pop    ebx
  438870:	std    
  438871:	inc    ecx
  438872:	mov    al,ds:0x983dfd5b
  438877:	pop    ebx
  438878:	std    
  438879:	cmp    DWORD PTR [eax-0x67ca02a5],esp
  43887f:	pop    ebx
  438880:	std    
  438881:	xor    DWORD PTR [eax-0x67d202a5],esp
  438887:	pop    ebx
  438888:	std    
  438889:	sub    DWORD PTR [eax-0x67da02a5],esp
  43888f:	pop    ebx
  438890:	std    
  438891:	and    DWORD PTR [eax-0x67e202a5],esp
  438897:	pop    ebx
  438898:	std    
  438899:	sbb    DWORD PTR [eax-0x67ea02a5],esp
  43889f:	pop    ebx
  4388a0:	std    
  4388a1:	adc    DWORD PTR [eax-0x67f202a5],esp
  4388a7:	pop    ebx
  4388a8:	std    
  4388a9:	or     DWORD PTR [eax-0x67fa02a5],esp
  4388af:	pop    ebx
  4388b0:	std    
  4388b1:	add    DWORD PTR [eax-0x660202a5],esp
  4388b7:	pop    ebx
  4388b8:	std    
  4388b9:	stc    
  4388ba:	mov    eax,ds:0x99f5fd5b
  4388bf:	pop    ebx
  4388c0:	std    
  4388c1:	icebp  
  4388c2:	mov    eax,ds:0xedfd5b
  4388c7:	add    BYTE PTR [ecx-0x5e1602a5],bl
  4388cd:	pop    ebx
  4388ce:	std    
  4388cf:	in     eax,0x99
  4388d1:	pop    ebx
  4388d2:	std    
  4388d3:	loope  0x438876
  4388d5:	pop    ebx
  4388d6:	std    
  4388d7:	fstp   QWORD PTR [ecx-0x5e2602a5]
  4388dd:	pop    ebx
  4388de:	std    
  4388df:	aad    0x99
  4388e1:	pop    ebx
  4388e2:	std    
  4388e3:	shl    DWORD PTR [ecx-0x1cfc18fe],1
  4388e9:	std    
  4388ea:	out    0x3,al
  4388ec:	xlat   BYTE PTR ds:[ebx]
  4388ed:	std    
  4388ee:	out    0x3,al
  4388f0:	(bad)  
  4388f2:	out    0x3,al
  4388f4:	(bad)  
  4388f6:	out    0x3,al
  4388f8:	repz std 
  4388fa:	out    0x3,al
  4388fc:	out    0xfd,eax
  4388fe:	out    0x3,al
  438900:	jmp    0x4388ff
  438902:	out    0x3,al
  438904:	dec    edi
  438905:	jmp    esi
  438907:	add    eax,DWORD PTR [ebx-0x1]
  43890a:	out    0x3,al
  43890c:	aaa    
  43890d:	jmp    esi
  43890f:	add    edi,DWORD PTR [ebx]
  438911:	jmp    esi
  438913:	add    edi,DWORD PTR [edi]
  438915:	jmp    esi
  438917:	add    edx,DWORD PTR [ebx]
  438919:	jmp    esi
  43891b:	add    eax,DWORD PTR [edi]
  43891d:	jmp    esi
  43891f:	add    ecx,DWORD PTR [ebx]
  438921:	jmp    esi
  438923:	add    ebp,DWORD PTR [edi]
  438925:	jmp    esi
  438927:	add    esp,DWORD PTR [ebx]
  438929:	jmp    esi
  43892b:	add    eax,DWORD PTR [eax]
  43892d:	add    BYTE PTR [edi],dl
  43892f:	jmp    esi
  438931:	add    ebx,DWORD PTR [ebx]
  438933:	jmp    esi
  438935:	add    ebx,DWORD PTR [edi]
  438937:	jmp    esi
  438939:	add    esi,DWORD PTR [ebx-0x58fc1902]
  43893f:	(bad)  
  438940:	out    0x3,al
  438942:	stos   DWORD PTR es:[edi],eax
  438943:	(bad)  
  438944:	out    0x3,al
  438946:	(bad)  
  438947:	(bad)  
  438948:	out    0x3,al
  43894a:	cmp    esi,0xffffffe6
  43894d:	add    esi,DWORD PTR [edi-0x2]
  438950:	out    0x3,al
  438952:	jnp    0x438952
  438954:	out    0x3,al
  438956:	jg     0x438956
  438958:	out    0x3,al
  43895a:	push   ebx
  43895b:	(bad)  
  43895c:	out    0x3,al
  43895e:	inc    edi
  43895f:	(bad)  
  438960:	(bad)  
  438961:	call   0xe9473604
  438966:	sahf   
  438967:	mov    al,0x3
  438969:	jmp    0xe9473e0c
  43896e:	sahf   
  43896f:	mov    eax,0xbc9ee903
  438974:	add    ebp,ecx
  438976:	sahf   
  438977:	rol    BYTE PTR [ebx],0xe9
  43897a:	sahf   
  43897b:	add    al,0x4
  43897d:	jmp    0xe9479220
  438982:	sahf   
  438983:	or     al,0x4
  438985:	jmp    0xe9479a28
  43898a:	sahf   
  43898b:	adc    al,0x4
  43898d:	jmp    0xe947a230
  438992:	add    BYTE PTR [eax],al
  438994:	sahf   
  438995:	sbb    al,0x4
  438997:	jmp    0xe947aa3a
  43899c:	sahf   
  43899d:	in     al,0x3
  43899f:	jmp    0xe9477242
  4389a4:	sahf   
  4389a5:	in     al,dx
  4389a6:	add    ebp,ecx
  4389a8:	sahf   
  4389a9:	lock add ebp,ecx
  4389ac:	sahf   
  4389ad:	hlt    
  4389ae:	add    ebp,ecx
  4389b0:	sahf   
  4389b1:	clc    
  4389b2:	add    ebp,ecx
  4389b4:	sahf   
  4389b5:	cld    
  4389b6:	add    ebp,ecx
  4389b8:	sahf   
  4389b9:	add    BYTE PTR [ecx+ebp*8],al
  4389bc:	sahf   
  4389bd:	inc    esp
  4389be:	std    
  4389bf:	call   0xe940d262
  4389c4:	sahf   
  4389c5:	dec    esp
  4389c6:	std    
  4389c7:	call   0xe940da6a
  4389cc:	sahf   
  4389cd:	push   esp
  4389ce:	std    
  4389cf:	call   0xe940e272
  4389d4:	sahf   
  4389d5:	pop    esp
  4389d6:	std    
  4389d7:	call   0x40ea7a
  4389dc:	add    al,0xff
  4389de:	fld    DWORD PTR [ebx]
  4389e0:	hlt    
  4389e1:	(bad)  
  4389e2:	aad    0x3
  4389e4:	hlt    
  4389e5:	(bad)  
  4389e6:	rol    DWORD PTR [ebx],1
  4389e8:	(bad)  
  4389e9:	dec    ch
  4389eb:	add    eax,esp
  4389ed:	dec    cl
  4389ef:	add    esi,DWORD PTR [esi+edi*8-0x14bfee8]
  4389f6:	adc    al,0x1
  4389f8:	add    BYTE PTR [eax],al
  4389fa:	(bad)  
  4389fb:	(bad)  
  4389fc:	adc    BYTE PTR [ecx],al
  4389fe:	(bad)  
  4389ff:	dec    BYTE PTR [ecx+eax*1]
  438a02:	mov    ah,0xfe
  438a04:	or     DWORD PTR [ecx],eax
  438a06:	mov    ah,0xfe
  438a08:	sub    eax,0x35068401
  438a0d:	add    DWORD PTR [esi+eax*1+0x67400fd],eax
  438a14:	stc    
  438a15:	add    BYTE PTR [esi+eax*1-0xb],dh
  438a19:	add    BYTE PTR [esi+eax*1+0x68400f1],al
  438a20:	in     eax,dx
  438a21:	add    BYTE PTR [esi+eax*1-0x16],dh
  438a25:	add    BYTE PTR [esi+eax*1-0x1b],dh
  438a29:	add    BYTE PTR [esi+eax*1-0x1f],al
  438a2d:	add    BYTE PTR [esi+eax*1-0x23],al
  438a31:	add    BYTE PTR [esi+eax*1],dh
  438a34:	fld    DWORD PTR [eax]
  438a36:	xor    al,0x6
  438a38:	aad    0x0
  438a3a:	inc    esp
  438a3b:	push   es
  438a3c:	rol    DWORD PTR [eax],1
  438a3e:	inc    esp
  438a3f:	push   es
  438a40:	int    0x0
  438a42:	xor    al,0x6
  438a44:	retf   0x3400
  438a47:	push   es
  438a48:	lds    eax,FWORD PTR [eax]
  438a4a:	add    al,0x6
  438a4c:	rol    DWORD PTR [eax],0x4
  438a4f:	push   es
  438a50:	mov    ebp,0xb905f400
  438a55:	add    BYTE PTR [ebp-0x624502d5],bl
  438a5b:	sub    edi,ebp
  438a5d:	mov    dh,0x0
  438a5f:	add    BYTE PTR [ebp-0x624d02d5],bl
  438a65:	sub    edi,ebp
  438a67:	scas   al,BYTE PTR es:[edi]
  438a68:	popf   
  438a69:	sub    edi,ebp
  438a6b:	stos   BYTE PTR es:[edi],al
  438a6c:	popf   
  438a6d:	sub    edi,ebp
  438a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a70:	popf   
  438a71:	sub    edi,ebp
  438a73:	mov    ds:0x59fd2b9d,al
  438a78:	ret    0x1f1e
  438a7b:	mov    DWORD PTR [eax+0x4c],esp
  438a7e:	inc    edi
  438a7f:	inc    ebx
  438a80:	jg     0x438aad
  438a82:	dec    eax
  438a83:	inc    ebx
  438a84:	lahf   
  438a85:	dec    ebx
  438a86:	std    
  438a87:	call   FWORD PTR [ebp-0x42fe3e90]
  438a8d:	sub    edi,ebp
  438a8f:	call   FWORD PTR [esi]
  438a91:	es adc al,0x40
  438a94:	adc    BYTE PTR [ecx],ch
  438a96:	dec    eax
  438a97:	inc    ebx
  438a98:	fwait
  438a99:	imul   edi,ebp,0xffffffff
  438a9c:	popf   
  438a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a9e:	rcr    BYTE PTR [edx+eiz*4],0xc1
  438aa2:	sti    
  438aa3:	mov    ah,BYTE PTR [ecx+0x1e0002b1]
  438aa9:	jmp    0x438ab2
  438aab:	stc    
  438aac:	ins    DWORD PTR es:[edi],dx
  438aad:	lods   al,BYTE PTR ds:[esi]
  438aae:	dec    ebx
  438aaf:	stc    
  438ab0:	leave  
  438ab1:	xor    DWORD PTR [ebx+eax*2+0x7e],edi
  438ab5:	push   esp
  438ab6:	ret    0xe328
  438ab9:	jne    0x438a61
  438abb:	jl     0x438b1e
  438abd:	dec    eax
  438abe:	stos   BYTE PTR es:[edi],al
  438abf:	mov    ebp,0x43482ba5
  438ac4:	add    BYTE PTR [eax],al
  438ac6:	xchg   DWORD PTR [ebx],ebp
  438ac8:	std    
  438ac9:	call   FWORD PTR [ebp-0x55e33f5c]
  438acf:	stc    
  438ad0:	ret    
  438ad1:	(bad)  
  438ad2:	mov    ecx,0x9d03aa02
  438ad7:	add    ah,BYTE PTR [eax-0x18befd3d]
  438add:	adc    ch,bl
  438adf:	cmp    al,bl
  438ae1:	jp     0x438b41
  438ae3:	or     al,0x66
  438ae5:	dec    ebx
  438ae6:	jmp    0xe81c:0x5e84e2b5
  438aed:	test   ch,dl
  438aef:	add    esi,DWORD PTR [eax+ecx*1]
  438af2:	push   eax
  438af3:	(bad)  
  438af4:	cld    
  438af5:	pop    es
  438af6:	and    dl,bh
  438af8:	call   0xe84a483f
  438afd:	push   ebx
  438afe:	sahf   
  438aff:	add    dh,bh
  438b01:	add    ebx,DWORD PTR [ebp-0x578c1471]
  438b07:	inc    eax
  438b08:	inc    bx
  438b0a:	cdq    
  438b0b:	inc    ecx
  438b0c:	xchg   edi,eax
  438b0d:	inc    esp
  438b0e:	and    dh,al
  438b10:	lds    eax,FWORD PTR [eax]
  438b12:	dec    edi
  438b13:	ret    
  438b14:	out    0x84,eax
  438b16:	jge    0x438b13
  438b18:	daa    
  438b19:	pop    ebx
  438b1a:	or     BYTE PTR [ebx+0x4439f9ac],0x66
  438b21:	into   
  438b22:	pushf  
  438b23:	loop   0x438ae7
  438b25:	and    ch,al
  438b27:	(bad)
  438b2a:	add    BYTE PTR [eax],al
  438b2c:	sbb    dh,al
  438b2e:	add    eax,0xe4c30f01
  438b33:	test   BYTE PTR ds:0x98c67008,bh
  438b39:	sbb    DWORD PTR [ebp+esi*8-0x7b234a61],0xffffffb6
  438b41:	or     al,0xe7
  438b43:	(bad)  
  438b44:	sahf   
  438b45:	sub    DWORD PTR [ebp+ebp*8-0x3199bc62],0xffffff9c
  438b4d:	loop   0x438b4e
  438b4f:	je     0x438af3
  438b51:	mov    ebp,0x7d9ad342
  438b56:	jge    0x438bbc
  438b58:	mov    ds:0x1fe57312,eax
  438b5d:	les    edx,FWORD PTR ds:0x5e2a5feb
  438b63:	into   
  438b64:	bound  edi,QWORD PTR [ecx]
  438b66:	test   DWORD PTR [edi+esi*8],ebp
  438b69:	inc    eax
  438b6a:	inc    esp
  438b6b:	or     bl,BYTE PTR [esi]
  438b6d:	les    ebx,FWORD PTR [ebx+ebp*8]
  438b70:	pop    edi
  438b71:	cmp    DWORD PTR [ebx+0xa],eax
  438b74:	pop    esi
  438b75:	mov    ebp,0x7d9cca42
  438b7a:	jge    0x438b98
  438b7c:	lahf   
  438b7d:	adc    dh,BYTE PTR [ebx-0x11]
  438b80:	push   esi
  438b81:	pop    esi
  438b82:	stc    
  438b83:	mov    fs,WORD PTR [edx+0x7d]
  438b86:	call   0x462ab8
  438b8b:	stos   BYTE PTR es:[edi],al
  438b8c:	push   ds
  438b8d:	mov    esp,0xd8fd
  438b92:	jne    0x438b9c
  438b94:	call   0xf97d6e3c
  438b99:	push   sp
  438b9b:	push   ds
  438b9c:	mov    ebp,0xf940a251
  438ba1:	jmp    0x1abe4985
  438ba6:	pop    ecx
  438ba7:	mov    ah,0x1
  438ba9:	push   ecx
  438baa:	mov    esi,0xdfe9f940
  438baf:	cmp    DWORD PTR [ebx+0xa],eax
  438bb2:	fidivr WORD PTR [ebp-0x41811486]
  438bb8:	add    ch,BYTE PTR [edx+0x54]
  438bbb:	push   ds
  438bbc:	add    ebp,DWORD PTR [edx]
  438bbe:	push   ds
  438bbf:	ret    
  438bc0:	sbb    al,0xea
  438bc2:	fistp  QWORD PTR [ebp-0x4ba11486]
  438bc8:	add    al,BYTE PTR [eax]
  438bca:	mov    bh,0x49
  438bcc:	sbb    al,0x9
  438bce:	ja     0x438b53
  438bd0:	jne    0x438bd4
  438bd2:	in     al,0x59
  438bd4:	inc    BYTE PTR [edx-0x3d031bc7]
  438bda:	ja     0x438c26
  438bdc:	sbb    al,0x3
  438bde:	aaa    
  438bdf:	fstp   TBYTE PTR [edi-0x1]
  438be2:	ror    edi,cl
  438be4:	test   BYTE PTR [ebp-0x59],0xc3
  438be8:	jp     0x438c67
  438bea:	out    0x42,eax
  438bec:	outs   dx,BYTE PTR ds:[esi]
  438bed:	and    bh,BYTE PTR [ebx]
  438bef:	dec    edx
  438bf0:	sti    
  438bf1:	aas    
  438bf2:	les    eax,FWORD PTR [edx]
  438bf4:	add    bh,bh
  438bf6:	add    BYTE PTR [eax],al
  438bf8:	jns    0x438bdd
  438bfa:	add    BYTE PTR [ebp-0x29],0x3f
  438bfe:	scas   eax,DWORD PTR es:[edi]
  438bff:	or     BYTE PTR [ecx],dh
  438c01:	pop    es
  438c02:	xchg   BYTE PTR [ebx],al
  438c04:	les    eax,FWORD PTR [ebx-0xcdcfb40]
  438c0a:	mov    esi,0xffe2b645
  438c0f:	push   DWORD PTR [ebx+eax*8-0x3e98ba0a]
  438c16:	jp     0x438c95
  438c18:	push   edi
  438c19:	inc    edx
  438c1a:	outs   dx,BYTE PTR ds:[esi]
  438c1b:	and    eax,DWORD PTR [ebx]
  438c1d:	dec    ebx
  438c1e:	sbb    al,0xfe
  438c20:	cmp    esp,esp
  438c22:	jg     0x438ca1
  438c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438c25:	cmp    eax,0x64dc066e
  438c2a:	stc    
  438c2b:	push   DWORD PTR [ecx+eax*8-0x7e]
  438c2f:	inc    ebp
  438c30:	xchg   edi,eax
  438c31:	cmp    eax,0x5c108af
  438c36:	xchg   BYTE PTR [ebx],al
  438c38:	inc    esp
  438c39:	add    eax,0xbaf18304
  438c3f:	cmp    ecx,0xffffffe0
  438c42:	clc    
  438c43:	ret    0x149d
  438c46:	enter  0x331c,0x67
  438c4a:	pop    ds
  438c4b:	sub    BYTE PTR [eax-0x648d05b7],0x13
  438c52:	retf   0x1afe
  438c55:	sub    al,0x3e
  438c57:	test   DWORD PTR [eax+0x48],ebx
  438c5a:	cli    
  438c5b:	mov    cl,0x0
  438c5d:	add    BYTE PTR [ebp-0x6175f84a],dl
  438c63:	sub    eax,DWORD PTR [eax+0x3454a1c0]
  438c69:	mov    ebp,0x1ffdcf1e
  438c6e:	imul   esi,DWORD PTR [ecx],0x7ce3f455
  438c74:	dec    ebx
  438c75:	jge    0x438cd7
  438c77:	or     BYTE PTR [eax],cl
  438c79:	mov    ebp,0xf94a41c5
  438c7e:	retf   0xc0a8
  438c81:	sbb    al,0x9f
  438c83:	push   0xeb6e7b7f
  438c88:	rol    BYTE PTR [ecx],1
  438c8a:	(bad)
  438c8d:	call   FWORD PTR [ebp+0x7e437f68]
  438c93:	sub    DWORD PTR [eax+0x7d],eax
  438c96:	loopne 0x438ce0
  438c98:	add    DWORD PTR [ebp+0x31ee61e],edi
  438c9e:	pop    esi
  438c9f:	test   al,0xc8
  438ca1:	sub    al,0xdd
  438ca3:	push   esi
  438ca4:	add    ebp,eax
  438ca6:	enter  0xfd2a,0xff
  438caa:	pop    esi
  438cab:	ret    
  438cac:	test   dl,bh
  438cae:	push   0xffffffc4
  438cb0:	ds call 0xf98e8a3d
  438cb6:	push   ds
  438cb7:	jbe    0x438cb0
  438cb9:	cld    
  438cba:	leave  
  438cbb:	and    eax,0x24ba855
  438cc0:	and    cl,BYTE PTR [ebp+0x0]
  438cc3:	add    BYTE PTR [eax],al
  438cc5:	sub    dh,bh
  438cc7:	add    bl,BYTE PTR [ebp-0x217ed9fe]
  438ccd:	loope  0x438cb4
  438ccf:	inc    eax
  438cd0:	test   al,0xbf
  438cd2:	call   0x664b3c9a
  438cd7:	(bad)  
  438cd8:	mov    ecx,0x5e81260b
  438cdd:	loope  0x438cc2
  438cdf:	inc    eax
  438ce0:	mov    BYTE PTR [edi+0x78ff3e8],bh
  438ce6:	data16 (bad) 
  438ce8:	cdq    
  438ce9:	add    DWORD PTR [esi+0x7047680],esp
  438cef:	xlat   BYTE PTR ds:[ebx]
  438cf0:	lahf   
  438cf1:	sub    DWORD PTR [ecx+eiz*1],0xc666419e
  438cf8:	mov    ecx,0x5683a60b
  438cfd:	add    ch,al
  438cff:	(bad)  
  438d00:	pushf  
  438d01:	sub    cl,BYTE PTR [ecx]
  438d03:	dec    esi
  438d04:	les    edi,FWORD PTR [esi+eiz*4]
  438d07:	pop    ebx
  438d08:	out    0x1,eax
  438d0a:	out    0x3,eax
  438d0c:	lock or DWORD PTR [esp+eax*1],0x5be8b5aa
  438d14:	dec    ecx
  438d15:	cmp    al,0x7a
  438d17:	dec    esp
  438d18:	pop    eax
  438d19:	xor    esp,0x2
  438d1c:	xchg   edx,eax
  438d1d:	mov    bh,0xe0
  438d1f:	pop    ebx
  438d20:	aad    0x3c
  438d22:	bound  ecx,QWORD PTR [eax+eax*2-0x80]
  438d26:	fadd   QWORD PTR [ecx]
  438d28:	add    BYTE PTR [eax],al
  438d2a:	lea    esi,[ebp+0x3cb15be8]
  438d30:	dec    edx
  438d31:	dec    esp
  438d32:	sub    BYTE PTR [ebx],ch
  438d34:	mov    eax,DWORD PTR [ebx]
  438d36:	popf   
  438d37:	add    ah,BYTE PTR [esi]
  438d39:	adc    dh,0xef
  438d3c:	jmp    FWORD PTR [eax+0x51e8026b]
  438d42:	sahf   
  438d43:	add    al,BYTE PTR [eax]
  438d45:	sub    bl,BYTE PTR ds:0x53c8fdb8
  438d4b:	add    DWORD PTR [ebp-0x54],edi
  438d4e:	jge    0x438d51
  438d50:	mov    ebp,0x31f636a
  438d55:	sub    bl,ch
  438d57:	mov    ebp,0xb00eeb7a
  438d5c:	(bad)  
  438d5e:	jmp    0x15bf:0x92eef938
  438d65:	call   0x24c0ac47
  438d6a:	ret    0xbd00
  438d6d:	sar    ebp,0x38
  438d70:	stc    
  438d71:	into   
  438d72:	push   0xffffffbf
  438d74:	adc    eax,0x7d1edde8
  438d79:	and    al,0x82
  438d7b:	push   es
  438d7c:	mov    ebp,0x3feee46a
  438d81:	xor    al,0x9f
  438d83:	sub    dl,BYTE PTR [ebx-0x17]
  438d86:	sahf   
  438d87:	add    bh,BYTE PTR [ebp+0x193de46a]
  438d8d:	sbb    al,0x0
  438d8f:	add    BYTE PTR [ebp+edi*4+0x7d9fca42],bl
  438d96:	jge    0x438dc4
  438d98:	jp     0x438d99
  438d9a:	mov    esp,0xf9372091
  438d9f:	jbe    0x438dbb
  438da1:	mov    bh,0x11
  438da3:	jmp    0x302b8f15
  438da8:	aam    0x39
  438daa:	stc    
  438dab:	sub    bl,cl
  438dad:	call   0x7de276b1
  438db2:	jge    0x438d80
  438db4:	xchg   ebx,eax
  438db5:	ret    0x72
  438db8:	jno    0x438d3e
  438dba:	cmp    eax,0x7ac44123
  438dbf:	jge    0x438e07
  438dc1:	fild   QWORD PTR [ebp+eax*1-0x49]
  438dc5:	inc    ecx
  438dc6:	sbb    al,0x5
  438dc8:	ja     0x438d4d
  438dca:	cmp    eax,0x7fc44723
  438dcf:	jge    0x438e15
  438dd1:	push   es
  438dd2:	ins    DWORD PTR es:[edi],dx
  438dd3:	push   es
  438dd4:	pushf  
  438dd5:	lods   eax,DWORD PTR ds:[esi]
  438dd6:	hlt    
  438dd7:	call   FWORD PTR [ebx+0x401e7c3]
  438ddd:	(bad)  
  438dde:	inc    edx
  438de0:	int3   
  438de1:	(bad)  
  438de2:	idiv   bh
  438de4:	sti    
  438de5:	ret    
  438de6:	jp     0x438e65
  438de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438de9:	inc    esi
  438dea:	outs   dx,BYTE PTR ds:[esi]
  438deb:	push   es
  438dec:	int3   
  438ded:	xlat   BYTE PTR ds:[ebx]
  438dee:	idiv   bh
  438df0:	retf   
  438df1:	ret    
  438df2:	out    0x7b,eax
  438df4:	add    BYTE PTR [eax],al
  438df6:	fld    st(7)
  438df8:	test   BYTE PTR [ebx-0x3d071c4f],0x47
  438dff:	dec    edx
  438e00:	sti    
  438e01:	pop    ds
  438e02:	mov    BYTE PTR [ecx+eiz*8],bh
  438e05:	imul   edi,ecx,0xffffffc7
  438e08:	test   BYTE PTR [ebx-0x3cfc1c8f],0xc
  438e0f:	es idiv bh
  438e12:	or     eax,DWORD PTR [ebp+edi*1-0x183c49dd]
  438e19:	mov    esi,0xe8f6c818
  438e1e:	xchg   bl,cl
  438e20:	idiv   bh
  438e22:	pop    es
  438e23:	dec    ebx
  438e24:	lldt   WORD PTR [ecx-0x61ba7bc7]
  438e2b:	(bad)  
  438e2c:	cmp    al,0x23
  438e2e:	pop    es
  438e2f:	inc    ebx
  438e30:	sbb    al,0x3
  438e32:	popf   
  438e33:	in     al,dx
  438e34:	cmp    DWORD PTR [ebx-0x6d],0x7501d02a
  438e3b:	mov    BYTE PTR [esi-0x7],al
  438e3e:	pop    edx
  438e3f:	in     eax,dx
  438e40:	jns    0x438e85
  438e42:	mov    bh,0x2a
  438e44:	rcr    BYTE PTR [esi+ebx*1],0x5f
  438e48:	and    bh,dh
  438e4a:	pop    edi
  438e4b:	lods   eax,DWORD PTR ds:[esi]
  438e4c:	(bad)  
  438e4d:	std    
  438e4e:	call   0x4610:0x1be81397
  438e55:	stc    
  438e56:	xor    eax,0xf940e6
  438e5b:	add    BYTE PTR [edx],ah
  438e5d:	lods   eax,DWORD PTR ds:[esi]
  438e5e:	(bad)  
  438e5f:	adc    DWORD PTR [ebp+0x5884f9ae],ebx
  438e65:	push   ebp
  438e66:	add    al,0x43
  438e68:	mov    esi,0x9b1cbfac
  438e6d:	ins    BYTE PTR es:[edi],dx
  438e6e:	cmp    DWORD PTR [ebx-0x6d],0x2a
  438e72:	retf   0x501
  438e75:	rol    BYTE PTR [esi-0x7],0xea
  438e79:	ins    BYTE PTR es:[edi],dx
  438e7a:	jnp    0x438ebf
  438e7c:	xchg   DWORD PTR [edx],ebp
  438e7e:	mov    edx,0x22df1e1c
  438e83:	(bad)  
  438e84:	fild   WORD PTR [ebx-0x50]
  438e87:	sti    
  438e88:	retf   0x5c68
  438e8b:	cwde   
  438e8c:	shl    DWORD PTR [eax+0x47],0x7d
  438e90:	cmp    BYTE PTR [ecx],dh
  438e92:	std    
  438e93:	jb     0x438e3b
  438e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e96:	mov    eax,0x22de9c15
  438e9b:	jge    0x438ef5
  438e9d:	dec    esp
  438e9e:	stc    
  438e9f:	mov    esp,0xfeef361e
  438ea4:	or     DWORD PTR [edx],ebp
  438ea6:	push   ebp
  438ea7:	mov    ch,BYTE PTR ss:[eax+0x216bd46]
  438eae:	lods   al,BYTE PTR ds:[esi]
  438eaf:	in     eax,dx
  438eb0:	jnp    0x438e70
  438eb2:	add    eax,0xe4e5de85
  438eb7:	inc    esp
  438eb8:	jne    0x438e9e
  438eba:	dec    edx
  438ebb:	dec    ecx
  438ebc:	fs sub cl,cl
  438ebf:	inc    edi
  438ec0:	add    BYTE PTR [eax],al
  438ec2:	push   esp
  438ec3:	cmp    DWORD PTR [esi-0x39],esp
  438ec6:	lods   al,BYTE PTR ds:[esi]
  438ec7:	add    esi,DWORD PTR [ecx+0x2a1b3501]
  438ecd:	dec    ecx
  438ece:	inc    esp
  438ecf:	inc    ebp
  438ed0:	outs   dx,BYTE PTR ds:[esi]
  438ed1:	mov    edi,0x24a40390
  438ed6:	mov    al,0xbf
  438ed8:	lds    eax,FWORD PTR ds:0x479d29e8
  438ede:	and    al,0x39
  438ee0:	data16 (bad) 
  438ee2:	lods   al,BYTE PTR ds:[esi]
  438ee3:	add    BYTE PTR [ecx+0x1],bh
  438ee6:	add    eax,0x448f137
  438eeb:	inc    ebp
  438eec:	call   DWORD PTR [ebx+0x8]
  438eef:	cmp    edx,esp
  438ef1:	jl     0x438f51
  438ef3:	sbb    al,0xe8
  438ef5:	mov    esi,0x252c8591
  438efa:	jmp    0x438f3f
  438efc:	mov    edi,0xc238e863
  438f01:	pop    ebx
  438f02:	xor    DWORD PTR [esi],0xb75048ba
  438f08:	fdivr  st,st(6)
  438f0a:	inc    esp
  438f0b:	add    BYTE PTR [edi-0x5dc738d0],bh
  438f11:	inc    esp
  438f12:	and    BYTE PTR [edi-0x1aa1fd04],bh
  438f18:	gs mov esi,0x5ba60489
  438f1e:	in     al,0x3c
  438f20:	or     BYTE PTR [eax-0x7b],0x4
  438f24:	jnp    0x438f6e
  438f26:	add    BYTE PTR [eax],al
  438f28:	xchg   esp,eax
  438f29:	test   BYTE PTR [eax],al
  438f2b:	hlt    
  438f2c:	mov    WORD PTR [eax],?
  438f2e:	je     0x438f03
  438f30:	sbb    DWORD PTR [ebp+eax*1-0x537a8a16],edi
  438f37:	jmp    0xd4c091da
  438f3c:	fs add al,0x9
  438f3f:	pop    edi
  438f40:	cmp    BYTE PTR [ebx],al
  438f42:	add    cl,ch
  438f44:	neg    BYTE PTR [eax+0x75e53efa]
  438f4a:	jge    0x438f00
  438f4c:	dec    esp
  438f4d:	cmp    DWORD PTR [ebx+edx*8+0x19],esi
  438f51:	mov    esp,0x8535ea05
  438f56:	mov    ecx,gs
  438f58:	sahf   
  438f59:	add    bh,BYTE PTR [ebp-0x6c]
  438f5c:	and    al,0x39
  438f5e:	or     bl,BYTE PTR [edi+0x18]
  438f61:	add    eax,DWORD PTR [eax]
  438f63:	jmp    0xff3d47de
  438f68:	pop    edx
  438f69:	jne    0x438fe8
  438f6b:	je     0x438f79
  438f6d:	ss je  0x438f49
  438f70:	sbb    DWORD PTR [ebp+eax*1+0x6c84f3ea],edi
  438f77:	jmp    0x462b921a
  438f7c:	arpl   WORD PTR [ecx],di
  438f7e:	stc    
  438f7f:	stos   BYTE PTR es:[edi],al
  438f80:	push   ds
  438f81:	mov    esp,0xbedea11
  438f86:	jge    0x438fc4
  438f88:	xlat   BYTE PTR ds:[ebx]
  438f89:	ss je  0x438f9f
  438f8c:	add    BYTE PTR [eax],al
  438f8e:	imul   edx,eax,0x755aaef9
  438f94:	jge    0x438fba
  438f96:	retf   
  438f97:	add    esi,DWORD PTR [ebx-0x13]
  438f9a:	pop    ds
  438f9b:	mov    esp,0xbfcdea05
  438fa0:	out    0x21,eax
  438fa2:	pop    ebx
  438fa3:	cmp    ecx,edi
  438fa5:	add    BYTE PTR [edi-0x7d],al
  438fa8:	jne    0x438fc0
  438faa:	jns    0x438ffe
  438fac:	jmp    edi
  438fae:	push   eax
  438faf:	mov    ebp,0x8337fff6
  438fb4:	jne    0x438fcc
  438fb6:	mov    dl,BYTE PTR [edx+0x5]
  438fb9:	adc    DWORD PTR [ecx+0x39],0xfffffffc
  438fbd:	je     0x438f5d
  438fbf:	(bad)  
  438fc0:	and    esi,edi
  438fc2:	sar    DWORD PTR [edi+0x256183ba],cl
  438fc8:	add    BYTE PTR [ebp+0x72],dh
  438fcb:	test   BYTE PTR [ebp+0xa],dh
  438fce:	aaa    
  438fcf:	push   edx
  438fd0:	adc    DWORD PTR [ebx+0x754013f1],eax
  438fd6:	xor    BYTE PTR [ebp+esi*2+0x547440e],al
  438fdd:	call   0x3a4d22
  438fe2:	ja     0x438fba
  438fe4:	std    
  438fe5:	std    
  438fe6:	mov    ds:0x398bbabf,eax
  438feb:	sub    edx,edi
  438fed:	inc    esp
  438fee:	xlat   BYTE PTR ds:[ebx]
  438fef:	cmp    DWORD PTR ds:0xf6000023,0xffffffc3
  438ff6:	out    0xee,eax
  438ff8:	(bad)  
  438ff9:	mov    edi,0xcb96e8f6
  438ffe:	idiv   bh
  439000:	ja     0x43904c
  439002:	(bad)  
  439004:	push   ecx
  439005:	cmp    cl,ah
  439007:	in     eax,0xe1
  439009:	mov    edi,0x424fc3f6
  43900e:	adc    eax,DWORD PTR [ecx]
  439010:	jns    0x438ff5
  439012:	jp     0x439059
  439014:	xchg   edi,eax
  439015:	add    edi,DWORD PTR [ebx-0x9370e18]
  43901b:	dec    DWORD PTR [esi+ebp*1]
  43901e:	hlt    
  43901f:	call   FWORD PTR [ebp-0x74848170]
  439025:	sub    eax,edx
  439027:	add    DWORD PTR [ebp-0x6d06b798],eax
  43902d:	imul   edi,DWORD PTR [esi+0x7b],0x1d029b3
  439034:	jne    0x43902a
  439036:	inc    edi
  439037:	stc    
  439038:	jp     0x439023
  43903a:	jge    0x4390b7
  43903c:	mov    ebp,DWORD PTR [eax]
  43903e:	rol    BYTE PTR [ecx],1
  439040:	jne    0x438fc2
  439042:	dec    eax
  439043:	stc    
  439044:	(bad)  
  439045:	jmp    0x27f70bc7
  43904a:	rol    BYTE PTR [ecx],1
  43904c:	inc    ebp
  43904d:	mov    WORD PTR [eax-0x7],cs
  439050:	dec    edx
  439051:	jmp    0x1eef0bd3
  439056:	rol    BYTE PTR [ecx],1
  439058:	add    BYTE PTR [eax],al
  43905a:	inc    ebp
  43905b:	mov    eax,0xe932f947
  439060:	jge    0x4390dd
  439062:	xchg   ebx,eax
  439063:	and    al,0xc3
  439065:	add    DWORD PTR ds:0x1af947a4,esi
  43906b:	jmp    0x2afad3e5
  439070:	rcr    BYTE PTR [esi+ebx*1],0x67
  439074:	push   ds
  439075:	(bad)  
  439076:	fild   WORD PTR [ebx]
  439078:	mov    esi,?
  43907a:	cli    
  43907b:	sbb    al,0x7f
  43907d:	jnp    0x43900a
  43907f:	sub    ecx,edx
  439081:	add    ebp,esi
  439083:	mov    edi,0x68e2f940
  439088:	jg     0x439105
  43908a:	mov    bl,0x2a
  43908c:	retf   0xc501
  43908f:	retf   
  439090:	inc    eax
  439091:	stc    
  439092:	retf   0x7f68
  439095:	jnp    0x439042
  439097:	sub    edx,ecx
  439099:	push   cs
  43909a:	lds    eax,FWORD PTR [edx]
  43909c:	xor    al,0x4a
  43909e:	mov    ah,0x35
  4390a0:	data16 (bad) 
  4390a2:	mov    al,ds:0xbab21b01
  4390a7:	retf   
  4390a8:	mov    eax,DWORD PTR [ebp-0x6c]
  4390ab:	inc    ecx
  4390ac:	data16 (bad) 
  4390ae:	lods   al,BYTE PTR ds:[esi]
  4390af:	add    esp,esi
  4390b1:	std    
  4390b2:	xor    bh,0x73
  4390b5:	inc    ebp
  4390b6:	test   BYTE PTR [ecx+0x66],al
  4390b9:	(bad)  
  4390ba:	mov    esi,?
  4390bc:	fcomi  st,st(2)
  4390be:	add    BYTE PTR [eax],al
  4390c0:	jp     0x4390aa
  4390c2:	pop    esp
  4390c3:	inc    ebp
  4390c4:	fs adc esp,0xf9b161f9
  4390cb:	pop    ebx
  4390cc:	jg     0x439105
  4390ce:	inc    edx
  4390cf:	inc    ebp
  4390d0:	adc    BYTE PTR [ecx-0x50601244],al
  4390d6:	call   0x2a7b3c36
  4390db:	inc    ebp
  4390dc:	clc    
  4390dd:	and    BYTE PTR [ebp+ebp*8+0x5bf7af9c],0x9c
  4390e5:	cmp    BYTE PTR [edx],dl
  4390e7:	inc    ebp
  4390e8:	mov    al,ds:0x9100dcb7
  4390ed:	push   es
  4390ee:	lgdtd  [esi]
  4390f1:	xor    eax,0x36f540fa
  4390f6:	repz inc esp
  4390f8:	add    al,0x41
  4390fa:	pop    esi
  4390fb:	mov    edi,0x212c0390
  439100:	jo     0x4390c1
  439102:	add    eax,0x12a2801
  439107:	dec    edx
  439108:	in     al,0x34
  43910a:	data16 (bad) 
  43910c:	lods   al,BYTE PTR ds:[esi]
  43910d:	add    bh,BYTE PTR [esi+edi*8]
  439110:	mov    edx,0xc444bb22
  439115:	inc    eax
  439116:	add    BYTE PTR [edx-0x25],ch
  439119:	adc    bh,bh
  43911b:	xor    edi,DWORD PTR [ebx+0x59a5d31c]
  439121:	cmp    edi,DWORD PTR [ebp-0x1cffff96]
  439127:	adc    bh,dh
  439129:	sbb    ebp,DWORD PTR [esi-0x1e6f41e4]
  43912f:	cmp    DWORD PTR [ebp+0x4],edi
  439132:	xchg   edi,eax
  439133:	aaa    
  439134:	ins    DWORD PTR es:[edi],dx
  439135:	sbb    ebp,ecx
  439137:	js     0x439135
  439139:	jbe    0x439114
  43913b:	jne    0x4391ba
  43913d:	in     al,dx
  43913e:	mov    BYTE PTR [edi],dh
  439140:	je     0x439131
  439142:	(bad)  
  439143:	fs cld 
  439145:	pop    esi
  439146:	loope  0x4391bd
  439148:	jge    0x43911e
  43914a:	jo     0x43914c
  43914c:	jae    0x439146
  43914e:	neg    BYTE PTR [ecx-0x4a26b909]
  439154:	jp     0x439149
  439156:	popf   
  439157:	scas   al,BYTE PTR es:[edi]
  439158:	sub    BYTE PTR [ecx-0x4b],al
  43915b:	ss stc 
  43915d:	fnsave cs:[ebp-0x4ecc0086]
  439164:	add    DWORD PTR [ecx],edx
  439166:	mov    cl,0x36
  439168:	stc    
  439169:	push   ss
  43916a:	fnsave [ebp-0x4ee70886]
  439170:	push   cs
  439171:	adc    edx,ebx
  439173:	sub    al,0xf9
  439175:	dec    BYTE PTR [edx-0x2d15fa49]
  43917b:	pop    es
  43917c:	call   0xf97cf3f2
  439181:	stos   BYTE PTR es:[edi],al
  439182:	shl    DWORD PTR [ebx+edi*8-0x7a8aa122],0x2c
  43918a:	add    BYTE PTR [eax],al
  43918c:	xor    DWORD PTR [ebx],0x44
  43918f:	or     ah,BYTE PTR [edx]
  439191:	rcr    BYTE PTR [eax+eax*1],0xc7
  439195:	mov    esp,0xbfdda3e7
  43919a:	test   BYTE PTR [ebx+0x75001889],0xc2
  4391a1:	out    0x4d,eax
  4391a3:	cld    
  4391a4:	sti    
  4391a5:	mov    edi,0x188983ba
  4391aa:	stc    
  4391ab:	je     0x43915f
  4391ad:	out    0x41,eax
  4391af:	cld    
  4391b0:	sub    edi,DWORD PTR [edi+0x189983ba]
  4391b6:	cli    
  4391b7:	je     0x43922a
  4391b9:	out    0x2e,eax
  4391bb:	stc    
  4391bc:	or     eax,eax
  4391be:	jp     0x43923d
  4391c0:	jle    0x4391be
  4391c2:	push   es
  4391c3:	test   BYTE PTR [edi-0x1],bh
  4391c6:	(bad)  
  4391c7:	dec    esp
  4391c9:	das    
  4391ca:	cmc    
  4391cb:	dec    ebx
  4391cd:	mov    ebx,0xfc527d7a
  4391d2:	ins    BYTE PTR es:[edi],dx
  4391d3:	sbb    eax,0xffb41c7
  4391d8:	adc    DWORD PTR [esi],ecx
  4391da:	call   0xf7031ef5
  4391df:	or     DWORD PTR [ecx],0x5
  4391e2:	sti    
  4391e3:	jae    0x43923f
  4391e5:	out    0x9,eax
  4391e7:	cld    
  4391e8:	mov    edi,DWORD PTR [edi-0xcc71746]
  4391ee:	idiv   bh
  4391f0:	add    BYTE PTR [eax],al
  4391f2:	(bad)  
  4391f3:	jnp    0x43926a
  4391f5:	push   ss
  4391f6:	add    BYTE PTR [edx-0x1],bh
  4391f9:	out    0xf4,eax
  4391fb:	repnz idiv bh
  4391fe:	mov    bh,0x7b
  439200:	jne    0x439218
  439202:	add    DWORD PTR [edx-0x1],edi
  439205:	out    0xd0,eax
  439207:	repz idiv bh
  43920a:	aaa    
  43920b:	jl     0x439282
  43920d:	push   ss
  43920e:	popf   
  43920f:	and    edi,DWORD PTR [eax+0x3549c50e]
  439215:	stc    
  439216:	shl    BYTE PTR [edi-0x1261fa41],cl
  43921c:	jmp    0xdef9:0x3e6fe0e7
  439223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439224:	mov    edi,0x15169a11
  439229:	jge    0x439253
  43922b:	daa    
  43922c:	or     eax,0x41818c73
  439231:	clc    
  439232:	call   0xb11c:0xa77b8281
  439239:	or     esi,DWORD PTR [ebp+0x5c]
  43923c:	cmp    bh,cl
  43923e:	sbb    BYTE PTR [ebp+0x25],0xb6
  439242:	jbe    0x4391e5
  439244:	cmp    eax,0x1b5f26bd
  439249:	jmp    ecx
  43924b:	cld    
  43924c:	add    BYTE PTR [ebx-0x42],0x1c
  439250:	inc    edx
  439251:	call   0xf981669c
  439256:	add    BYTE PTR [eax],al
  439258:	push   ds
  439259:	inc    edi
  43925a:	pop    ss
  43925b:	add    al,dl
  43925d:	push   esi
  43925e:	and    eax,0x3df94591
  439263:	jge    0x43921d
  439265:	and    eax,0xbc180902
  43926a:	cld    
  43926b:	call   FWORD PTR [ebp+0x22f58e13]
  439271:	sbb    DWORD PTR [edx+0x7d],eax
  439274:	cwde   
  439275:	cmp    DWORD PTR [ebx+esi*2],eax
  439278:	test   al,0x13
  43927a:	mov    ecx,0x83310af7
  43927f:	jnp    0x439218
  439281:	sbb    al,0xe
  439283:	and    DWORD PTR [eax],0x1c
  439286:	std    
  439287:	inc    DWORD PTR ds:0xe43d5b03
  43928d:	xor    DWORD PTR [esi-0x1ae7997b],esp
  439293:	mov    dh,0xaf
  439295:	sbb    cl,BYTE PTR [eax+0x3c]
  439298:	aam    0x31
  43929a:	mov    di,0x5a0
  43929e:	jmp    0xc503:0xe7023b86
  4392a5:	retf   
  4392a6:	lods   eax,DWORD PTR ds:[esi]
  4392a7:	inc    ecx
  4392a8:	mov    ah,0x45
  4392aa:	mov    di,0x58c
  4392ae:	adc    al,0x13
  4392b0:	mov    ch,0xc8
  4392b2:	mov    es,WORD PTR [ecx-0x6c]
  4392b5:	test   DWORD PTR [esi+ecx*1],ecx
  4392b8:	nop
  4392b9:	mov    dh,0x15
  4392bb:	sub    al,0x0
  4392bd:	add    bl,cl
  4392bf:	sub    eax,0x8540417a
  4392c4:	hlt    
  4392c5:	sbb    DWORD PTR [ecx-0x50d41f49],esp
  4392cb:	sub    eax,0x85284162
  4392d0:	fcomp  QWORD PTR [ecx]
  4392d2:	sahf   
  4392d3:	mov    bh,0xf7
  4392d5:	sub    edi,DWORD PTR [eax-0x2fbeb5d6]
  4392db:	scas   eax,DWORD PTR es:[edi]
  4392dc:	in     al,dx
  4392dd:	add    al,0xce
  4392df:	repnz dec esi
  4392e1:	and    DWORD PTR [eax+0x31],ecx
  4392e4:	xor    al,BYTE PTR [ebp-0x48]
  4392e7:	scas   eax,DWORD PTR es:[edi]
  4392e8:	ror    BYTE PTR [ecx],1
  4392ea:	scas   al,BYTE PTR es:[edi]
  4392eb:	adc    ecx,DWORD PTR [edi]
  4392ed:	adc    BYTE PTR ds:0xa6851a31,ah
  4392f3:	cld    
  4392f4:	in     eax,0xb6
  4392f6:	mov    bl,0x1a
  4392f8:	fistp  QWORD PTR [esp+edx*1]
  4392fb:	xor    DWORD PTR [esi],esp
  4392fd:	test   DWORD PTR [esi-0x623f1de8],eax
  439303:	sbb    al,BYTE PTR [eax]
  439305:	cld    
  439306:	mov    ch,0x2b
  439308:	stc    
  439309:	add    ah,BYTE PTR [edi+0x5de3f31a]
  43930f:	sub    edi,DWORD PTR [ebp-0xe9248e]
  439315:	sub    eax,eax
  439317:	lods   eax,DWORD PTR ds:[esi]
  439318:	inc    edx
  439319:	or     bl,BYTE PTR [ebx-0x76f01791]
  43931f:	sub    edi,ecx
  439321:	push   0x0
  439323:	add    BYTE PTR [ebx],al
  439325:	adc    eax,DWORD PTR [eax]
  439327:	cmp    al,0x8e
  439329:	sbb    cl,dh
  43932b:	mov    dh,0x5d
  43932d:	sub    edi,DWORD PTR [ebp+0x24]
  439330:	fwait
  439331:	das    
  439332:	je     0x43936c
  439334:	jno    0x439372
  439336:	not    BYTE PTR [esi+0xc7d6ddd]
  43933c:	mov    bh,0x2f
  43933e:	je     0x439318
  439340:	mov    dh,0x75
  439342:	icebp  
  439343:	jle    0x439322
  439345:	lods   eax,DWORD PTR ds:[esi]
  439346:	jp     0x43932b
  439348:	mov    eax,ds:0xf58135b3
  43934d:	cmp    cl,bh
  43934f:	data16 loope 0x4392ff
  439352:	jp     0x43934b
  439354:	cwde   
  439355:	mov    bl,0xe
  439357:	inc    ecx
  439358:	ret    0xf931
  43935b:	dec    esi
  43935c:	sbb    DWORD PTR [ebp+eax*1-0x17f0ec16],ebp
  439363:	mov    DWORD PTR [eax+0x212af929],eax
  439369:	lods   al,BYTE PTR ds:[esi]
  43936a:	adc    edx,ebp
  43936c:	jmp    0x43936e
  43936e:	call   0xf96cf8e7
  439373:	push   0xffffffe3
  439375:	add    eax,0x1aaa9bfd
  43937a:	xchg   DWORD PTR [ebx],edx
  43937c:	pop    ebp
  43937d:	sub    DWORD PTR [ebp-0xd795400],edi
  439383:	inc    DWORD PTR [ebx]
  439385:	les    eax,FWORD PTR [edx-0x31ffffbb]
  43938b:	add    al,0x3d
  43938d:	and    eax,DWORD PTR [edi+0x37021c48]
  439393:	lock cmp al,0x23
  439396:	cmp    edi,DWORD PTR [edx]
  439398:	sti    
  439399:	pinsrw mm0,WORD PTR [ebx],0x0
  43939d:	(bad)  
  43939e:	jns    0x4393c4
  4393a0:	jns    0x43941f
  4393a2:	xchg   esi,eax
  4393a3:	jmp    FWORD PTR [esi+eax*1-0x14]
  4393a7:	dec    edi
  4393a8:	repz push ebx
  4393ab:	ret    
  4393ac:	add    BYTE PTR [ebp-0x59],0xff
  4393b0:	lods   eax,DWORD PTR ds:[esi]
  4393b1:	or     BYTE PTR [ecx],dh
  4393b3:	cli    
  4393b4:	test   DWORD PTR [ebx],eax
  4393b6:	mov    ah,0x84
  4393b8:	rol    BYTE PTR [ebx+esi*1],0xd6
  4393bc:	mov    esi,0xf9238645
  4393c1:	push   DWORD PTR [esp+eax*8-0xa]
  4393c5:	inc    ebp
  4393c6:	push   edi
  4393c7:	in     eax,dx
  4393c8:	cmp    al,0x22
  4393ca:	add    al,0x42
  4393cc:	sbb    ecx,DWORD PTR [edi]
  4393ce:	imul   eax,DWORD PTR ds:0xeffe35e8,0x51efc3f6
  4393d8:	call   eax
  4393da:	fnstsw WORD PTR [ebp+0x55]
  4393dd:	push   es
  4393de:	mov    edi,0xca0f1c39
  4393e3:	inc    BYTE PTR [esp+eax*1-0x7cfffc4e]
  4393ea:	test   dl,bh
  4393ec:	not    al
  4393ee:	add    BYTE PTR [eax],al
  4393f0:	mov    edi,0x95d0ff21
  4393f5:	jge    0x43943c
  4393f7:	push   es
  4393f8:	ja     0x4393e9
  4393fa:	cmp    al,0x23
  4393fc:	popf   
  4393fd:	pop    ss
  4393fe:	(bad)  
  4393ff:	sbb    eax,0x8df7e1d
  439404:	nop
  439405:	pop    ds
  439406:	and    eax,0x3a3004fe
  43940b:	mov    ebp,0x8de5e26
  439410:	sub    ebx,DWORD PTR [ecx]
  439412:	stc    
  439413:	mov    ds:0xa0f92b71,eax
  439418:	imul   ebx,DWORD PTR [edi],0x2351a9f9
  43941e:	stc    
  43941f:	test   al,0x49
  439421:	daa    
  439422:	stc    
  439423:	or     BYTE PTR [ecx+0x1b],dl
  439426:	es add al,0xdb
  439429:	in     eax,0x3
  43942b:	jmp    DWORD PTR [edi]
  43942d:	(bad)  
  43942f:	or     bl,ch
  439431:	and    BYTE PTR [eax-0x2e3e4fc],dl
  439437:	jl     0x439416
  439439:	and    al,0x3a
  43943b:	shl    BYTE PTR [ebx-0x21],1
  43943e:	add    eax,DWORD PTR [eax]
  439440:	pop    esi
  439441:	jge    0x43940b
  439443:	sbb    al,0x8b
  439445:	(bad)  
  439447:	jg     0x439449
  439449:	cmp    cl,BYTE PTR [edx]
  43944b:	jae    0x4393f0
  43944d:	xor    DWORD PTR [esi-0x9],0x72
  439451:	popf   
  439452:	cmp    eax,0xe0000085
  439457:	clc    
  439458:	or     BYTE PTR [edx+0x74940f9d],dh
  43945e:	fwait
  43945f:	pop    ss
  439460:	push   0x66ff9774
  439465:	je     0x4393fa
  439467:	pop    es
  439468:	bound  esi,QWORD PTR [edi+ecx*4+0x2f]
  43946c:	bound  esi,QWORD PTR [ebx+ecx*4+0x37]
  439470:	addr16 je 0x4393fa
  439473:	pop    ds
  439474:	data16 je 0x4393fa
  439477:	add    ah,bl
  439479:	outs   dx,DWORD PTR ds:[esi]
  43947a:	test   eax,0x9170dae0
  43947f:	or     al,0xd3
  439481:	ins    DWORD PTR es:[edi],dx
  439482:	mov    DWORD PTR [eax],ecx
  439484:	retf   
  439485:	outs   dx,BYTE PTR ds:[esi]
  439486:	xchg   ecx,eax
  439487:	adc    al,0xc3
  439489:	scas   eax,DWORD PTR es:[edi]
  43948a:	mov    ss,WORD PTR [eax]
  43948c:	mov    ebx,0xb2fc6eb0
  439491:	lods   eax,DWORD PTR ds:[esi]
  439492:	outs   dx,BYTE PTR ds:[esi]
  439493:	clc    
  439494:	stos   BYTE PTR es:[edi],al
  439495:	scas   al,BYTE PTR es:[edi]
  439496:	outs   dx,BYTE PTR ds:[esi]
  439497:	add    al,0x23
  439499:	or     eax,0x8ce0069
  43949e:	ffreep st(7)
  4394a0:	out    0x2,eax
  4394a2:	sbb    al,cl
  4394a4:	add    eax,0x73fb0f0d
  4394a9:	or     BYTE PTR [edi],dl
  4394ab:	add    ah,bh
  4394ad:	sbb    ch,0x6
  4394b0:	mov    dl,0x54
  4394b2:	ffreep st(7)
  4394b4:	out    0x3,eax
  4394b6:	call   0x124c0e8
  4394bb:	add    BYTE PTR [edi+eax*8-0x1ee97c3c],ah
  4394c2:	loope  0x43947a
  4394c4:	pushf  
  4394c5:	sbb    bl,BYTE PTR [edi]
  4394c7:	cmp    eax,DWORD PTR [ebp+ebp*1-0x1e21765a]
  4394ce:	jmp    0x6bc33a48
  4394d3:	mov    ds,WORD PTR [ebp+0x6803e706]
  4394d9:	sub    eax,0x2d994466
  4394de:	aaa    
  4394df:	inc    ecx
  4394e0:	push   esp
  4394e1:	mov    DWORD PTR ds:0x66e0de3e,0xbbfda8bf
  4394eb:	add    eax,0x3d3fe335
  4394f0:	xor    al,0x41
  4394f2:	add    BYTE PTR [edx+0x5a],ah
  4394f5:	push   cs
  4394f6:	or     DWORD PTR [edi-0x67],esi
  4394f9:	jns    0x43947f
  4394fb:	ja     0x439496
  4394fd:	cli    
  4394fe:	(bad)  
  4394ff:	call   0x29c097a1
  439504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439505:	sub    edx,eax
  439507:	sub    cl,al
  439509:	rcr    DWORD PTR [edi+eax*1],0xda
  43950d:	push   cs
  43950e:	cmp    BYTE PTR [esp+edi*8-0x7],0x72
  439513:	out    dx,eax
  439514:	(bad)  
  439515:	xor    al,0xf8
  439517:	out    dx,al
  439518:	test   eax,0xfc2c856f
  43951d:	stc    
  43951e:	mov    cl,0xf1
  439520:	add    BYTE PTR [eax],al
  439522:	sub    eax,DWORD PTR [esi+0x2a2e98a]
  439528:	add    dl,ch
  43952a:	sahf   
  43952b:	scas   eax,DWORD PTR es:[edi]
  43952c:	mov    edi,0xbd5281ed
  439531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439532:	jecxz  0x43954a
  439534:	add    cl,ch
  439536:	sahf   
  439537:	add    al,BYTE PTR [ebp-0x4e0643dc]
  43953d:	sub    DWORD PTR [esi-0x61164717],ebx
  439543:	add    bh,BYTE PTR [ecx-0x8]
  439546:	(bad)  
  439547:	(bad)  
  439548:	icebp  
  439549:	mov    cs,ecx
  43954b:	lods   eax,DWORD PTR ds:[esi]
  43954c:	jp     0x43952d
  43954e:	cdq    
  43954f:	test   al,0x1
  439551:	xchg   ecx,eax
  439552:	stc    
  439553:	sub    bh,cl
  439555:	jbe    0x439534
  439557:	sbb    ch,BYTE PTR [esi-0x7ad6568c]
  43955d:	lods   al,BYTE PTR ds:[esi]
  43955e:	test   BYTE PTR [ebx],ch
  439560:	inc    esp
  439561:	or     bl,BYTE PTR [eax+eax*8]
  439564:	sbb    al,0xeb
  439566:	fld    QWORD PTR [ecx+0x43]
  439569:	repz sahf 
  43956b:	add    al,BYTE PTR [eax]
  43956d:	add    BYTE PTR [ebx+edi*2],dh
  439570:	cmp    eax,0x3fb64b23
  439575:	add    DWORD PTR [ecx],ebp
  439577:	scas   eax,DWORD PTR es:[edi]
  439578:	(bad)  
  439579:	push   DWORD PTR [edi+ebp*2]
  43957c:	adc    al,ch
  43957e:	(bad)  
  43957f:	hlt    
  439580:	idiv   bh
  439582:	xchg   DWORD PTR [edi+ecx*1+0x1],ebp
  439586:	add    BYTE PTR [eax],al
  439588:	xor    DWORD PTR [ecx+0x7c],ebx
  43958b:	jge    0x43959f
  43958d:	pop    es
  43958e:	jbe    0x4395f3
  439590:	lods   al,BYTE PTR ds:[esi]
  439591:	cmp    al,0xff
  439594:	sti    
  439595:	jmp    0x4395cb
  439597:	rol    BYTE PTR [eax+eax*1],0x0
  43959b:	jl     0x4395af
  43959d:	jns    0x439559
  43959f:	ror    esi,0x2
  4395a2:	add    ecx,0x8306e547
  4395a8:	out    dx,al
  4395a9:	stc    
  4395aa:	ins    BYTE PTR es:[edi],dx
  4395ab:	or     esi,DWORD PTR [edi]
  4395ad:	in     eax,dx
  4395ae:	push   DWORD PTR [ebx+0x76]
  4395b1:	ficomp WORD PTR [ecx-0x8]
  4395b4:	sti    
  4395b5:	out    0xba,eax
  4395b7:	sub    esi,0xfffffff8
  4395ba:	ins    BYTE PTR es:[edi],dx
  4395bb:	aaa    
  4395bc:	aaa    
  4395bd:	in     eax,dx
  4395be:	stc    
  4395bf:	je     0x439573
  4395c1:	xlat   BYTE PTR ds:[ebx]
  4395c2:	dec    ecx
  4395c3:	clc    
  4395c4:	cmp    esp,edi
  4395c6:	mov    edx,0x6d032d83
  4395cb:	push   es
  4395cc:	sbb    al,0x3f
  4395ce:	icebp  
  4395cf:	call   FWORD PTR [ebx]
  4395d1:	ret    
  4395d2:	jp     0x4395cd
  4395d4:	xor    BYTE PTR [edx-0x1],0xe7
  4395d8:	sub    bh,ah
  4395da:	idiv   bh
  4395dc:	aaa    
  4395dd:	xor    ecx,0x7
  4395e0:	inc    ecx
  4395e1:	add    eax,ebp
  4395e3:	xor    DWORD PTR [edi+eiz*8-0x67623c0a],edi
  4395ea:	cmp    cl,BYTE PTR [ecx]
  4395ec:	add    BYTE PTR [eax],al
  4395ee:	shl    BYTE PTR [ebx],1
  4395f0:	and    eax,0x34c44522
  4395f5:	mov    ebp,0xf9302245
  4395fa:	xor    ah,BYTE PTR [eax+0x669c15be]
  439600:	loop   0x43967e
  439602:	fdivr  DWORD PTR [eax]
  439604:	add    edi,DWORD PTR [ebp+0x1b65e2]
  43960a:	popf   
  43960b:	sbb    ebp,edi
  43960d:	test   BYTE PTR [eax+0x38],ah
  439610:	push   es
  439611:	mov    dl,0x5d
  439613:	sbb    bh,al
  439615:	mov    eax,0x78fd199d
  43961a:	mov    WORD PTR [ecx],es
  43961c:	div    edx
  43961e:	jmp    0xb71c:0x8b7b821b
  439625:	sub    eax,0xf92e48c5
  43962a:	rcl    BYTE PTR [edi-0x8],cl
  43962d:	mov    edi,0x7bfd199d
  439632:	js     0x4395e6
  439634:	inc    edx
  439635:	mov    edi,0xbf8c24c7
  43963a:	push   ds
  43963b:	cmp    al,BYTE PTR [esi]
  43963d:	jge    0x4395e6
  43963f:	dec    edx
  439640:	mov    al,0x4
  439642:	push   ds
  439643:	bound  ecx,QWORD PTR [esp+esi*2]
  439646:	lods   al,BYTE PTR ds:[esi]
  439647:	xchg   ebx,eax
  439648:	inc    esi
  439649:	icebp  
  43964a:	xchg   edx,eax
  43964b:	xchg   ecx,eax
  43964c:	inc    edx
  43964d:	jge    0x4395d6
  43964f:	dec    ecx
  439650:	mov    al,0x1
  439652:	add    BYTE PTR [eax],al
  439654:	jne    0x4396ae
  439656:	cs stc 
  439658:	jp     0x4396b7
  43965a:	and    eax,0x35b169b1
  43965f:	test   eax,esp
  439661:	push   ebp
  439662:	add    al,0x43
  439664:	mov    esi,0xb9c06602
  439669:	add    al,0x26
  43966b:	inc    edx
  43966c:	fimul  WORD PTR [edi+eiz*8]
  43966f:	add    ebx,DWORD PTR [ebp-0x5e3fa1fe]
  439675:	stc    
  439676:	js     0x43963b
  439678:	cmp    esp,edi
  43967a:	jns    0x43967f
  43967c:	popf   
  43967d:	add    dh,BYTE PTR [edx+0x334e351a]
  439683:	cmp    ah,BYTE PTR [esi+eax*4]
  439686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439687:	adc    DWORD PTR [ecx-0x69791752],esp
  43968d:	adc    cl,ch
  43968f:	scas   eax,DWORD PTR es:[edi]
  439690:	mov    ds:0x9c118c85,al
  439695:	test   eax,0x1aba2ee4
  43969a:	addr16 xor dh,ah
  43969d:	sub    DWORD PTR [esi],esp
  43969f:	clc    
  4396a0:	sub    al,BYTE PTR [ebx]
  4396a2:	out    0x3,eax
  4396a4:	popa   
  4396a5:	out    dx,al
  4396a6:	outs   dx,DWORD PTR ds:[esi]
  4396a7:	inc    esi
  4396a8:	sbb    bl,BYTE PTR ds:0x86128ae3
  4396ae:	enter  0x4809,0x2c
  4396b2:	fldcw  WORD PTR [esi+0xcc085af]
  4396b8:	add    BYTE PTR [eax],al
  4396ba:	ss loop 0x439722
  4396bd:	cmp    esi,DWORD PTR [eax-0x4d7b324b]
  4396c3:	add    al,0x33
  4396c5:	adc    dh,BYTE PTR [ebp-0x6bc66631]
  4396cb:	inc    ebp
  4396cc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4396cf:	scas   eax,DWORD PTR es:[edi]
  4396d0:	fld    QWORD PTR [edx+edx*4+0x75020afa]
  4396d7:	mov    edi,0x45743979
  4396dc:	(bad)  
  4396dd:	cld    
  4396de:	outs   dx,BYTE PTR ds:[esi]
  4396df:	sub    DWORD PTR [eax],eax
  4396e1:	jbe    0x4396fb
  4396e3:	lds    edx,FWORD PTR ds:0x7d0623e8
  4396e9:	lods   al,BYTE PTR ds:[esi]
  4396ea:	inc    ecx
  4396eb:	daa    
  4396ec:	mov    esi,0xf1226
  4396f1:	jmp    0xa4c89994
  4396f6:	cmp    edx,edi
  4396f8:	mov    cl,0xa9
  4396fa:	lahf   
  4396fb:	in     eax,dx
  4396fc:	mov    eax,0x79029ee9
  439701:	fdiv   DWORD PTR [esi-0x3a]
  439704:	repz cs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  439708:	jp     0x439709
  43970a:	popf   
  43970b:	lods   al,BYTE PTR ds:[esi]
  43970c:	sbb    eax,0xf933a411
  439711:	push   ss
  439712:	pusha  
  439713:	in     eax,dx
  439714:	mov    edi,0x7c029ee9
  439719:	fsub   QWORD PTR [edi]
  43971b:	push   0x13bf
  439720:	popf   
  439721:	cmp    DWORD PTR [edi+0x7cfbbe6a],0x1b59bf3
  43972b:	rcl    DWORD PTR [ecx+0x59def934],1
  439731:	sbb    ah,dl
  439733:	fiadd  DWORD PTR [ebp-0x5cdb7ad5]
  439739:	sub    DWORD PTR [edx+ecx*1+0x20],eax
  43973d:	lds    ebx,FWORD PTR [ebx+ebp*8]
  439740:	pop    ecx
  439741:	inc    ebx
  439742:	inc    ebx
  439743:	rcr    DWORD PTR [esi+0x11e90002],cl
  439749:	lds    ebx,FWORD PTR [esi+esi*8]
  43974c:	or     al,0xc3
  43974e:	(bad)  
  43974f:	fist   DWORD PTR ds:0x45e90003
  439755:	adc    eax,ebp
  439757:	jecxz  0x43970b
  439759:	sub    ecx,edi
  43975b:	add    BYTE PTR [edi],al
  43975d:	jno    0x43976e
  43975f:	add    eax,0x7d7afc68
  439764:	dec    edx
  439765:	add    esi,DWORD PTR [edi+0x2]
  439768:	pop    ds
  439769:	cs loope 0x439721
  43976c:	cli    
  43976d:	jmp    0xffff:0xbeb1c3f6
  439774:	xor    al,0x70
  439776:	push   ds
  439777:	mov    DWORD PTR [esi-0x3c],esi
  43977a:	loope  0x439780
  43977c:	lods   eax,DWORD PTR ds:[esi]
  43977d:	les    edi,FWORD PTR [edx-0x1f]
  439780:	inc    ebx
  439781:	jg     0x439775
  439783:	or     al,0x0
  439785:	add    cl,ch
  439787:	idiv   BYTE PTR [edx-0x7]
  43978a:	cmp    al,0x70
  43978c:	or     ch,al
  43978e:	cwde   
  43978f:	icebp  
  439790:	idiv   bh
  439792:	(bad)  
  439793:	jle    0x439787
  439795:	movaps XMMWORD PTR [edx],xmm0
  439798:	call   0xf72e4226
  43979d:	ret    
  43979e:	mov    WORD PTR [edi-0x14],gs
  4397a1:	push   ebx
  4397a3:	jnp    0x4397e2
  4397a5:	sbb    dh,ch
  4397a7:	push   0x1f39831c
  4397ac:	sti    
  4397ad:	ret    0x420b
  4397b0:	adc    eax,DWORD PTR [eax]
  4397b2:	les    eax,FWORD PTR [ebx]
  4397b4:	add    BYTE PTR [ebx-0x49f7dc87],cl
  4397ba:	je     0x4397b9
  4397bc:	xor    al,0xbf
  4397be:	les    eax,FWORD PTR [ebx]
  4397c0:	add    BYTE PTR [edi-0x2b],bh
  4397c3:	fistp  DWORD PTR [edi+0x7aeff3f3]
  4397c9:	jge    0x439795
  4397cb:	sub    BYTE PTR [edi+0x27],dh
  4397ce:	sub    al,0x53
  4397d0:	out    dx,eax
  4397d1:	push   DWORD PTR [ebx]
  4397d3:	ret    
  4397d4:	xor    al,0xc0
  4397d6:	popf   
  4397d7:	sbb    ebp,edi
  4397d9:	inc    DWORD PTR [ecx]
  4397db:	xor    al,0x8c
  4397dd:	mov    esi,0x8700935c
  4397e2:	pop    esp
  4397e3:	pushf  
  4397e4:	and    cl,BYTE PTR [ecx]
  4397e6:	push   ds
  4397e7:	mov    bl,0x6
  4397e9:	jae    0x4397eb
  4397eb:	add    BYTE PTR [esi-0x2ef8c564],dl
  4397f1:	pop    ss
  4397f2:	and    eax,0x30c84b2e
  4397f7:	mov    ebp,0xf92cf635
  4397fc:	inc    edx
  4397fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4397fe:	mov    esi,0xde569c15
  439803:	jl     0x4397dd
  439805:	cld    
  439806:	std    
  439807:	mov    esp,0x175662
  43980c:	popf   
  43980d:	sbb    ebp,edi
  43980f:	test   BYTE PTR [eax+0x3c],ah
  439812:	add    dh,BYTE PTR [edx-0x4707e5a3]
  439818:	popf   
  439819:	sbb    ebp,edi
  43981b:	js     0x4397c9
  43981d:	add    ebx,ecx
  43981f:	in     al,dx
  439820:	cli    
  439821:	(bad)  
  439822:	jl     0x43989f
  439824:	mov    esp,DWORD PTR [eax]
  439826:	mov    bl,0x4d
  439828:	cmc    
  439829:	sub    al,0x30
  43982b:	stc    
  43982c:	loop   0x439809
  43982e:	idiv   BYTE PTR [edi+0x7bfd199d]
  439834:	pop    eax
  439835:	mov    dl,0x3e
  439837:	mov    edi,0xbf8c14b7
  43983c:	push   ds
  43983d:	cmp    al,BYTE PTR [edx]
  43983f:	jge    0x4397f8
  439841:	sub    al,0xb0
  439843:	add    ebp,eax
  439845:	cmp    BYTE PTR [eax],dh
  439847:	stc    
  439848:	stos   BYTE PTR es:[edi],al
  439849:	pop    ebx
  43984a:	jle    0x439842
  43984c:	nop
  43984d:	out    dx,al
  43984e:	stc    
  43984f:	out    0x0,eax
  439851:	add    BYTE PTR [eax+0x3],dh
  439854:	pushf  
  439855:	ss xchg esp,eax
  439857:	inc    edx
  439858:	cmp    WORD PTR [edi-0x757d0951],dx
  43985f:	add    edx,DWORD PTR [ebx]
  439861:	sbb    edi,eax
  439863:	sub    ebp,edi
  439865:	mov    eax,0x30a71a8c
  43986a:	fs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  43986d:	sub    BYTE PTR [ebx-0xa],0xf3
  439871:	or     bl,al
  439873:	sub    ebp,edi
  439875:	mov    bh,0x9c
  439877:	sbb    dl,BYTE PTR [edi+0x26264430]
  43987d:	sub    esp,DWORD PTR [eax]
  43987f:	xor    DWORD PTR [edx+0x36],ecx
  439882:	and    al,al
  439884:	fadd   QWORD PTR [esi+ebx*8]
  439887:	loope  0x4398ee
  439889:	ror    BYTE PTR [ecx+0x51472600],0x37
  439890:	push   DWORD PTR [ecx+ebx*1-0x62fc18da]
  439897:	add    ah,bh
  439899:	add    ebx,DWORD PTR [ebp+0x839702]
  43989f:	adc    edx,DWORD PTR es:[ebx]
  4398a2:	popf   
  4398a3:	add    dh,bh
  4398a5:	mov    cl,0xf1
  4398a7:	and    eax,0x29d03e7
  4398ac:	out    0x3,eax
  4398ae:	popf   
  4398af:	add    dh,BYTE PTR [ecx-0x5cda2782]
  4398b5:	adc    DWORD PTR [eax],eax
  4398b7:	add    BYTE PTR [ebp-0x364becfe],bl
  4398bd:	and    eax,0x29d03e7
  4398c2:	out    0x3,eax
  4398c4:	popf   
  4398c5:	add    cl,BYTE PTR [ebx]
  4398c7:	mov    dh,BYTE PTR [eax-0x62ec18db]
  4398cd:	add    al,BYTE PTR [eax]
  4398cf:	gs in  al,dx
  4398d1:	es stc 
  4398d3:	jmp    0xe9439b76
  4398d8:	sahf   
  4398d9:	add    al,BYTE PTR [eax]
  4398db:	jg     0x4398f1
  4398dd:	daa    
  4398de:	stc    
  4398df:	xor    DWORD PTR [edx+eax*1+0x262c0d00],ebp
  4398e6:	stc    
  4398e7:	jmp    0xe9439b8a
  4398ec:	sahf   
  4398ed:	add    al,BYTE PTR [eax]
  4398ef:	lea    edx,[edi+eiz*1]
  4398f2:	stc    
  4398f3:	and    DWORD PTR [edx+eax*1+0x260c5100],ebp
  4398fa:	stc    
  4398fb:	jmp    0xe9439b9e
  439900:	sahf   
  439901:	add    al,BYTE PTR [eax]
  439903:	jmp    0x439927
  439905:	daa    
  439906:	stc    
  439907:	jge    0x439895
  439909:	add    al,BYTE PTR [eax]
  43990b:	xchg   ecx,eax
  43990c:	sti    
  43990d:	and    eax,0x29ee9f9
  439912:	add    cl,ch
  439914:	sahf   
  439915:	add    al,BYTE PTR [eax]
  439917:	addr16 and eax,0x95f927
  43991d:	add    BYTE PTR [eax+0x49090002],bl
  439923:	es stc 
  439925:	jmp    0xe9439bc8
  43992a:	sahf   
  43992b:	add    al,BYTE PTR [eax]
  43992d:	dec    edi
  43992e:	and    ah,BYTE PTR [edi]
  439930:	stc    
  439931:	inc    ebp
  439932:	mov    DWORD PTR [edx],eax
  439934:	add    BYTE PTR ds:0xe9f9260a,al
  43993a:	sahf   
  43993b:	add    al,BYTE PTR [eax]
  43993d:	jmp    0x31439be0
  439942:	sbb    esp,DWORD PTR [edi]
  439944:	stc    
  439945:	cdq    
  439946:	stos   DWORD PTR es:[edi],eax
  439947:	add    al,BYTE PTR [eax]
  439949:	add    BYTE PTR [eax],bl
  43994b:	jno    0x439949
  43994d:	push   DWORD PTR [eax+eax*1+0xb40000]
  439954:	add    BYTE PTR [eax],al
  439956:	nop
  439957:	jg     0x439954
  439959:	dec    DWORD PTR [eax+edx*1]
  43995c:	add    BYTE PTR [eax],al
  43995e:	or     al,0x55
  439960:	cld    
  439961:	push   DWORD PTR [eax+eax*1+0x0]
  439965:	add    BYTE PTR [eax+eax*1-0x6ed00000],al
  43996c:	sti    
  43996d:	call   DWORD PTR [eax-0x6300000d]
  439973:	jno    0x439971
  439975:	inc    DWORD PTR [eax+eax*1+0x0]
  439979:	add    BYTE PTR [eax+eax*1+0x0],al
  43997d:	add    ah,dh
  43997f:	nop
  439980:	sti    
  439981:	inc    DWORD PTR [eax]
  439983:	add    BYTE PTR [eax-0x13ffffef],ah
  439989:	jb     0x439987
  43998b:	inc    DWORD PTR [eax+eax*1+0x0]
  43998f:	add    BYTE PTR [eax+eax*1],dh
  439992:	add    BYTE PTR [eax],al
  439994:	mov    dh,0x90
  439996:	sti    
  439997:	jmp    DWORD PTR [eax-0x1bffffef]
  43999d:	jo     0x43999b
  43999f:	push   esp
  4399a1:	(bad)  
  4399a2:	(bad)  
  4399a3:	push   esp
  4399a5:	(bad)  
  4399a6:	(bad)  
  4399a7:	call   FWORD PTR [eax+edx*4-0x5]
  4399ab:	dec    DWORD PTR [eax+0x1400000f]
  4399b1:	push   esi
  4399b2:	cld    
  4399b3:	push   esp
  4399b5:	(bad)  
  4399b6:	(bad)  
  4399b7:	inc    esp
  4399b9:	(bad)  
  4399ba:	(bad)  
  4399bb:	inc    DWORD PTR [edx-0x67000474]
  4399c1:	or     BYTE PTR [eax],al
  4399c3:	add    BYTE PTR [ebp-0x620002e7],bl
  4399c9:	sbb    ebp,edi
  4399cb:	call   FWORD PTR [ebp-0x620002e7]
  4399d1:	sbb    ebp,edi
  4399d3:	call   FWORD PTR [ebp-0x620002e7]
  4399d9:	xlat   BYTE PTR ds:[ebx]
  4399da:	test   ch,bh
  4399dc:	xchg   edx,eax
  4399dd:	cmc    
  4399de:	test   ch,bh
  4399e0:	mov    al,BYTE PTR [ebx]
  4399e2:	test   ebp,edi
  4399e4:	and    BYTE PTR [edi+0xfd84],0x7a
  4399eb:	mov    edi,0x5972fd84
  4399f0:	test   ebp,edi
  4399f2:	push   0xffffff87
  4399f4:	test   ebp,edi
  4399f6:	bound  esi,QWORD PTR [ebx-0x7b]
  4399f9:	std    
  4399fa:	pop    edx
  4399fb:	stos   DWORD PTR es:[edi],eax
  4399fc:	test   ch,bh
  4399fe:	push   edx
  4399ff:	das    
  439a00:	jne    0x4399ff
  439a02:	dec    edx
  439a03:	stc    
  439a04:	jnp    0x439a03
  439a06:	inc    edx
  439a07:	pop    es
  439a08:	jl     0x439a07
  439a0a:	cmp    al,BYTE PTR [ebp+0x3732fd75]
  439a10:	jne    0x439a0f
  439a12:	sub    bh,BYTE PTR [edi]
  439a14:	jne    0x439a13
  439a16:	and    al,bh
  439a18:	jnp    0x439a17
  439a1a:	sbb    bh,BYTE PTR [edi+0x7c]
  439a1d:	std    
  439a1e:	adc    dl,bh
  439a20:	jnp    0x439a1f
  439a22:	or     ch,bl
  439a24:	jnp    0x439a23
  439a26:	add    al,BYTE PTR [ecx]
  439a28:	jl     0x439a27
  439a2a:	cli    
  439a2b:	push   cs
  439a2c:	jl     0x439a2b
  439a2e:	repnz inc edx
  439a30:	jl     0x439a2f
  439a32:	jmp    0x7c86:0xe2fd7c6a
  439a39:	std    
  439a3a:	ficomp DWORD PTR [esi+0x1d2fd7a]
  439a40:	mov    DWORD PTR [eax+ecx*8+0x22],edi
  439a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a45:	jl     0x439a07
  439a47:	and    bh,BYTE PTR [ebx-0x40dd4784]
  439a4d:	jl     0x439a4f
  439a4f:	add    BYTE PTR [eax-0x578340de],dh
  439a55:	and    ah,cl
  439a57:	jge    0x4399f9
  439a59:	and    cl,bh
  439a5b:	jge    0x4399f5
  439a5d:	and    dl,BYTE PTR [ebx]
  439a5f:	mov    edx,DWORD PTR [eax-0x62fc18de]
  439a65:	add    bl,BYTE PTR [ebp-0x4cdd7f7f]
  439a6b:	cmp    DWORD PTR [eax+0x22],0x2270819d
  439a72:	xor    eax,0x57226881
  439a77:	and    DWORD PTR [eax+0x22],0x225881ed
  439a7e:	add    eax,DWORD PTR [edx-0x7cfcddb0]
  439a84:	dec    eax
  439a85:	and    ah,bh
  439a87:	add    ebx,DWORD PTR [ebp+0x38806102]
  439a8d:	and    dh,ch
  439a8f:	xor    BYTE PTR [eax],0x22
  439a92:	aas    
  439a93:	jg     0x439abd
  439a95:	and    ah,BYTE PTR [ebx-0x80]
  439a98:	and    BYTE PTR [edx],ah
  439a9a:	scas   eax,DWORD PTR es:[edi]
  439a9b:	sbb    BYTE PTR [eax],0x22
  439a9e:	ret    
  439a9f:	adc    BYTE PTR [eax],0x22
  439aa2:	mov    edi,0xad220880
  439aa7:	add    BYTE PTR [eax],0x22
  439aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439aab:	cmp    al,0x21
  439aae:	rol    DWORD PTR [eax-0x7f30de10],cl
  439ab4:	add    BYTE PTR [eax],al
  439ab6:	call   0xe0c2a9dc
  439abb:	and    DWORD PTR [eax],eax
  439abd:	push   ebx
  439abe:	sbb    eax,0x5221f920
  439ac3:	pop    ds
  439ac4:	stc    
  439ac5:	rcr    DWORD PTR ds:0x9ee9f920,0x2
  439acc:	add    BYTE PTR [ecx+0xe],bh
  439acf:	and    cl,bh
  439ad1:	jmp    0x47439d74
  439ad6:	clc    
  439ad7:	push   ds
  439ad8:	stc    
  439ad9:	pop    ecx
  439ada:	lock push ds
  439adc:	stc    
  439add:	(bad)
  439ae1:	jae    0x439b23
  439ae3:	push   ds
  439ae4:	stc    
  439ae5:	mov    bh,0x38
  439ae7:	push   ds
  439ae8:	stc    
  439ae9:	xchg   DWORD PTR [eax],esi
  439aeb:	push   ds
  439aec:	stc    
  439aed:	fwait
  439aee:	dec    eax
  439aef:	push   ds
  439af0:	stc    
  439af1:	pop    DWORD PTR [eax+0x1e]
  439af4:	stc    
  439af5:	repz cmp bl,BYTE PTR [esi]
  439af8:	stc    
  439af9:	xlat   BYTE PTR ds:[ebx]
  439afa:	xor    bl,BYTE PTR [esi]
  439afc:	stc    
  439afd:	iret   
  439afe:	or     bl,BYTE PTR [esi]
  439b00:	stc    
  439b01:	mov    bh,0x2
  439b03:	push   ds
  439b04:	stc    
  439b05:	mov    bl,0xfa
  439b07:	sbb    eax,0x1df2c5f9
  439b0c:	stc    
  439b0d:	fisttp WORD PTR [edx]
  439b0f:	push   ds
  439b10:	stc    
  439b11:	gs in  eax,dx
  439b13:	sbb    eax,0x1ded5df9
  439b18:	stc    
  439b19:	test   DWORD PTR [eax],eax
  439b1b:	add    ch,ch
  439b1d:	sbb    eax,0x1e4d29f9
  439b22:	stc    
  439b23:	or     eax,0x1df91e4d
  439b28:	dec    ebp
  439b29:	push   ds
  439b2a:	stc    
  439b2b:	stc    
  439b2c:	xor    ebx,DWORD PTR [esi]
  439b2e:	stc    
  439b2f:	ret    
  439b30:	dec    ebx
  439b31:	push   ds
  439b32:	stc    
  439b33:	iret   
  439b34:	inc    ebx
  439b35:	push   ds
  439b36:	stc    
  439b37:	add    BYTE PTR [esi],al
  439b39:	jo     0x439b37
  439b3b:	call   DWORD PTR [esi]
  439b3d:	jo     0x439b3b
  439b3f:	call   DWORD PTR [esi+0x70]
  439b42:	cld    
  439b43:	(bad)  
  439b44:	cmp    al,0x71
  439b46:	cld    
  439b47:	dec    DWORD PTR [eax+0x70]
  439b4a:	cld    
  439b4b:	inc    DWORD PTR [edx+0x70]
  439b4e:	cld    
  439b4f:	jmp    DWORD PTR [eax]
  439b51:	jo     0x439b4f
  439b53:	dec    DWORD PTR [esi]
  439b55:	jo     0x439b53
  439b57:	push   edx
  439b59:	outs   dx,DWORD PTR ds:[esi]
  439b5a:	cld    
  439b5b:	inc    DWORD PTR [eax]
  439b5d:	jo     0x439b5b
  439b5f:	call   FWORD PTR [eax+0x71]
  439b62:	cld    
  439b63:	call   edx
  439b65:	ins    DWORD PTR es:[edi],dx
  439b66:	cld    
  439b67:	call   FWORD PTR [esp+edx*2+0x5266fffc]
  439b6e:	cld    
  439b6f:	dec    eax
  439b71:	push   esp
  439b72:	cld    
  439b73:	push   DWORD PTR [esp+edx*2+0x5494fffc]
  439b7a:	cld    
  439b7b:	call   FWORD PTR [esi+0xfffc54]
  439b81:	add    BYTE PTR [ecx+edx*2+0x51e2fffc],bh
  439b88:	cld    
  439b89:	push   DWORD PTR [edx]
  439b8b:	push   edx
  439b8c:	cld    
  439b8d:	push   DWORD PTR [eax+0x51]
  439b90:	cld    
  439b91:	jmp    esp
  439b93:	push   ecx
  439b94:	cld    
  439b95:	call   esi
  439b97:	push   ecx
  439b98:	cld    
  439b99:	jmp    edx
  439b9b:	push   ecx
  439b9c:	cld    
  439b9d:	dec    DWORD PTR [edx+0x53]
  439ba0:	cld    
  439ba1:	call   DWORD PTR [esi]
  439ba3:	push   ebx
  439ba4:	cld    
  439ba5:	(bad)  
  439ba6:	cmp    al,0x53
  439ba8:	cld    
  439ba9:	call   DWORD PTR [ebx+edx*2]
  439bac:	cld    
  439bad:	jmp    FWORD PTR [edx]
  439baf:	push   ebx
  439bb0:	cld    
  439bb1:	call   FWORD PTR [ebp-0xd03505f]
  439bb7:	xchg   ebx,eax
  439bb8:	scas   eax,DWORD PTR es:[edi]
  439bb9:	cld    
  439bba:	jmp    0xafc1:0xe2fcafb1
  439bc1:	cld    
  439bc2:	(bad)  
  439bc4:	scas   eax,DWORD PTR es:[edi]
  439bc5:	cld    
  439bc6:	ror    BYTE PTR ds:0x33cafcb0,cl
  439bcc:	test   eax,0xa923c2fc
  439bd1:	cld    
  439bd2:	mov    edx,0xb2fd7d27
  439bd7:	sub    eax,0xe9aafd7d
  439bdc:	cmp    ebp,0xffffffa2
  439bdf:	stc    
  439be0:	cmp    ebp,0xffffff9a
  439be3:	lahf   
  439be4:	(bad)  
  439be5:	std    
  439be6:	add    BYTE PTR [eax],al
  439be8:	xchg   edx,eax
  439be9:	mov    bl,0x8d
  439beb:	std    
  439bec:	mov    ch,BYTE PTR [edi-0x1c7d0273]
  439bf2:	(bad)  
  439bf3:	std    
  439bf4:	jp     0x439c03
  439bf6:	mov    ?,ebp
  439bf8:	jb     0x439bdb
  439bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439bfb:	cld    
  439bfc:	push   0xffffffe7
  439bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439bff:	cld    
  439c00:	bound  esi,QWORD PTR [ebx]
  439c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c03:	cld    
  439c04:	pop    edx
  439c05:	xor    eax,0x3f52fca6
  439c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c0b:	cld    
  439c0c:	dec    edx
  439c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c0f:	cld    
  439c10:	inc    edx
  439c11:	iret   
  439c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c13:	cld    
  439c14:	cmp    dl,bl
  439c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c17:	cld    
  439c18:	xor    bh,ch
  439c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c1b:	cld    
  439c1c:	sub    ch,cl
  439c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c1f:	cld    
  439c20:	and    dh,BYTE PTR [ebx-0x5a]
  439c23:	cld    
  439c24:	sbb    dh,BYTE PTR [edi-0x46ed035b]
  439c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c2b:	cld    
  439c2c:	or     al,BYTE PTR [edx]
  439c2e:	mov    ds:0x8b1f01a9,eax
  439c33:	test   eax,0xa9ad1ef9
  439c38:	icebp  
  439c39:	push   ds
  439c3a:	popf   
  439c3b:	test   eax,0xa9bf1ee9
  439c40:	loope  0x439c60
  439c42:	iret   
  439c43:	test   eax,0xa9cd1ed9
  439c48:	rcr    DWORD PTR [esi],1
  439c4a:	fild   QWORD PTR [ecx+0x1ec90000]
  439c50:	fld    TBYTE PTR [ecx+eax*8-0x465338e2]
  439c57:	push   ds
  439c58:	mov    eax,ds:0x8f1eb1ac
  439c5d:	lods   al,BYTE PTR ds:[esi]
  439c5e:	test   eax,0xa1ac851e
  439c63:	push   ds
  439c64:	push   ecx
  439c65:	lods   al,BYTE PTR ds:[esi]
  439c66:	cdq    
  439c67:	push   ds
  439c68:	pop    ebp
  439c69:	lods   al,BYTE PTR ds:[esi]
  439c6a:	xchg   ecx,eax
  439c6b:	push   ds
  439c6c:	sub    DWORD PTR [ebp-0x52eee177],ebp
  439c72:	sbb    DWORD PTR [esi],0x1e79ad39
  439c78:	ret    
  439c79:	lods   al,BYTE PTR ds:[esi]
  439c7a:	jno    0x439c9a
  439c7c:	and    ebp,DWORD PTR [ebp-0x5326e197]
  439c82:	popa   
  439c83:	push   ds
  439c84:	in     eax,dx
  439c85:	lods   al,BYTE PTR ds:[esi]
  439c86:	pop    ecx
  439c87:	push   ds
  439c88:	jnp    0x439c35
  439c8a:	push   ecx
  439c8b:	push   ds
  439c8c:	sub    DWORD PTR [ebx-0x54c4e1b7],0xab211e41
  439c96:	cmp    DWORD PTR [esi],ebx
  439c98:	lea    ebp,[ebx-0x5486e1cf]
  439c9e:	sub    DWORD PTR [esi],ebx
  439ca0:	pop    ebx
  439ca1:	stos   DWORD PTR es:[edi],eax
  439ca2:	and    DWORD PTR [esi],ebx
  439ca4:	arpl   WORD PTR [ebx-0x44ffe1e7],bp
  439caa:	inc    esi
  439cab:	pop    ds
  439cac:	stc    
  439cad:	lea    esi,[esi]
  439caf:	pop    ds
  439cb0:	stc    
  439cb1:	mov    ch,0x0
  439cb3:	add    BYTE PTR [esi],dh
  439cb5:	pop    ds
  439cb6:	stc    
  439cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439cb8:	inc    esi
  439cb9:	pop    ds
  439cba:	stc    
  439cbb:	fld    QWORD PTR [esi+0x1f]
  439cbe:	stc    
  439cbf:	leave  
  439cc0:	ss pop ds
  439cc2:	stc    
  439cc3:	fnsave [esi]
  439cc5:	pop    ds
  439cc6:	stc    
  439cc7:	jmp    0xfa3cbbd2
  439ccc:	or     BYTE PTR [edi],bl
  439cce:	stc    
  439ccf:	movlps QWORD PTR [edi],xmm3
  439cd2:	stc    
  439cd3:	mov    ecx,0xa1f91f08
  439cd8:	lock push ds
  439cda:	stc    
  439cdb:	mov    eax,ebp
  439cdd:	push   ds
  439cde:	stc    
  439cdf:	popa   
  439ce0:	lock push ds
  439ce2:	stc    
  439ce3:	push   ebp
  439ce4:	call   0x50639607
  439ce9:	push   ds
  439cea:	stc    
  439ceb:	and    eax,0x29f91e48
  439cf0:	push   eax
  439cf1:	push   ds
  439cf2:	stc    
  439cf3:	fisttp QWORD PTR [ecx+0x1e]
  439cf6:	stc    
  439cf7:	(bad)  
  439cf8:	xor    DWORD PTR [esi],ebx
  439cfa:	stc    
  439cfb:	jmp    FWORD PTR [ecx]
  439cfd:	push   ds
  439cfe:	stc    
  439cff:	jmp    0x923cbb35
  439d04:	sub    ebx,DWORD PTR [esi]
  439d06:	stc    
  439d07:	icebp  
  439d08:	or     BYTE PTR [esi],bl
  439d0a:	stc    
  439d0b:	cdq    
  439d0c:	or     ebx,DWORD PTR [esi]
  439d0e:	stc    
  439d0f:	jmp    0xdd439fb2
  439d14:	das    
  439d15:	pop    ds
  439d16:	stc    
  439d17:	leave  
  439d18:	add    BYTE PTR [eax],al
  439d1a:	nop    ecx
  439d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d1e:	nop    ecx
  439d21:	jmp    0x439fc4
  439d26:	sub    al,0x1
  439d28:	add    BYTE PTR [eax-0x7ffffef3],al
  439d2e:	push   es
  439d2f:	add    DWORD PTR [eax],eax
  439d31:	add    BYTE PTR [edx],0x1
  439d34:	add    BYTE PTR [eax+0xf4],al
  439d3a:	mov    al,0x9b
  439d3c:	cli    
  439d3d:	dec    DWORD PTR [edx-0x65]
  439d40:	cli    
  439d41:	call   FWORD PTR [esi-0x65]
  439d44:	cli    
  439d45:	push   esp
  439d47:	add    BYTE PTR [eax],al
  439d49:	add    BYTE PTR [esi-0x65],dh
  439d4c:	cli    
  439d4d:	dec    DWORD PTR [edx-0x66]
  439d50:	cli    
  439d51:	call   FWORD PTR [esi]
  439d53:	call   0xfffa:0x9b80fffa
  439d5a:	sbb    BYTE PTR [ebx-0x64690006],0xfa
  439d61:	jmp    DWORD PTR [edx-0x3d000565]
  439d67:	cdq    
  439d68:	cli    
  439d69:	inc    DWORD PTR [eax+0x58fffa9b]
  439d6f:	call   0xfffa:0x9a32fffa
  439d76:	ss call 0xfffa:0x99eafffa
  439d7e:	add    BYTE PTR [eax],al
  439d80:	out    0x99,al
  439d82:	cli    
  439d83:	dec    eax
  439d85:	cdq    
  439d86:	cli    
  439d87:	call   FWORD PTR [eax+ebx*4-0x67510006]
  439d8e:	cli    
  439d8f:	jmp    FWORD PTR [edx-0x55000568]
  439d95:	cwde   
  439d96:	cli    
  439d97:	dec    DWORD PTR [edx+0x0]
  439d9a:	add    BYTE PTR [eax-0x565fc],al
  439da0:	popf   
  439da1:	div    DWORD PTR [ebp-0x3]
  439da4:	sub    ch,BYTE PTR [edx]
  439da6:	std    
  439da7:	call   FWORD PTR [ebp+0x1afd77d9]
  439dad:	sub    bh,ch
  439daf:	call   FWORD PTR [ebp+0xafd8179]
  439db5:	adc    al,BYTE PTR [ecx-0x7ecdfd03]
  439dbb:	std    
  439dbc:	cli    
  439dbd:	add    DWORD PTR [eax-0x7ed20d03],ecx
  439dc3:	std    
  439dc4:	jmp    0x7fe5:0xe2fd791b
  439dcb:	std    
  439dcc:	fucompp 
  439dce:	jg     0x439dcd
  439dd0:	rcr    cl,cl
  439dd2:	jg     0x439dd1
  439dd4:	retf   0x7fc3
  439dd7:	std    
  439dd8:	ret    0x808f
  439ddb:	std    
  439ddc:	mov    edx,0xb2fd80a1
  439de1:	mov    edi,0xfd80
  439de6:	stos   BYTE PTR es:[edi],al
  439de7:	iret   
  439de8:	cmp    ch,0xa2
  439deb:	aad    0x80
  439ded:	std    
  439dee:	call   0x8101:0x92fd80ff
  439df5:	std    
  439df6:	mov    dh,BYTE PTR [ebx]
  439df8:	cmp    ch,0x82
  439dfb:	sub    DWORD PTR [edx+0x7fa97afd],eax
  439e01:	std    
  439e02:	jb     0x439da1
  439e04:	jg     0x439e03
  439e06:	push   0xffffffc5
  439e08:	jg     0x439e07
  439e0a:	bound  ecx,QWORD PTR ds:0x635afd80
  439e10:	cmp    ch,0x52
  439e13:	jnp    0x439d95
  439e15:	std    
  439e16:	dec    edx
  439e17:	jg     0x439d99
  439e19:	std    
  439e1a:	inc    edx
  439e1b:	add    ch,bl
  439e1d:	cmp    BYTE PTR [eax],0x1b
  439e20:	cmc    
  439e21:	xor    BYTE PTR [eax],0x1b
  439e24:	pop    es
  439e25:	sub    DWORD PTR [eax],0x2080fb1b
  439e2b:	sbb    eax,DWORD PTR [ebx]
  439e2d:	sbb    DWORD PTR [eax],0x1080af1b
  439e33:	sbb    ecx,DWORD PTR [edi-0x40e4f780]
  439e39:	add    BYTE PTR [eax],0x1b
  439e3c:	fwait
  439e3d:	cmp    al,0x1a
  439e40:	ret    
  439e41:	xor    al,0x1a
  439e44:	fild   WORD PTR [edx-0x7dece518]
  439e4a:	add    BYTE PTR [eax],al
  439e4c:	loopne 0x439e68
  439e4e:	or     eax,DWORD PTR [edx-0x7de0e528]
  439e54:	rcr    BYTE PTR [edx],1
  439e56:	pop    ds
  439e57:	or     al,0x1a
  439e5a:	sub    eax,0x8d1ac082
  439e5f:	cmp    DWORD PTR [eax-0x4f7e86e6],0xa881631a
  439e69:	sbb    cl,BYTE PTR [edi-0x7e]
  439e6c:	mov    al,ds:0x987f751a
  439e71:	sbb    dh,BYTE PTR [ecx]
  439e73:	adc    BYTE PTR [eax-0x777dbce6],0x1a
  439e7a:	inc    edi
  439e7b:	add    BYTE PTR [eax+0x7882351a],0x1a
  439e82:	and    eax,DWORD PTR [edx-0x7beee590]
  439e88:	push   0x6083591a
  439e8d:	sbb    ah,BYTE PTR [ebx-0x7d]
  439e90:	pop    eax
  439e91:	sbb    dh,BYTE PTR [edi]
  439e93:	adc    DWORD PTR [eax+0x1a],0x0
  439e97:	stos   DWORD PTR es:[edi],eax
  439e98:	push   ds
  439e99:	sbb    cl,bh
  439e9b:	fwait
  439e9c:	push   ds
  439e9d:	sbb    cl,bh
  439e9f:	dec    ebx
  439ea0:	push   ds
  439ea1:	sbb    cl,bh
  439ea3:	push   ebp
  439ea4:	push   ds
  439ea5:	sbb    cl,bh
  439ea7:	out    dx,eax
  439ea8:	and    DWORD PTR [eax],ebx
  439eaa:	stc    
  439eab:	icebp  
  439eac:	sbb    DWORD PTR [eax],ebx
  439eae:	stc    
  439eaf:	cmp    eax,0x18200000
  439eb4:	stc    
  439eb5:	push   ecx
  439eb6:	sbb    BYTE PTR [eax],bl
  439eb8:	stc    
  439eb9:	adc    esp,DWORD PTR [eax]
  439ebb:	sbb    cl,bh
  439ebd:	and    ebx,DWORD PTR [eax]
  439ebf:	sbb    cl,bh
  439ec1:	and    BYTE PTR gs:[eax],bl
  439ec4:	stc    
  439ec5:	push   ecx
  439ec6:	sbb    BYTE PTR [eax],bl
  439ec8:	stc    
  439ec9:	jae    0x439eeb
  439ecb:	sbb    cl,bh
  439ecd:	pop    ebp
  439ece:	sbb    BYTE PTR [eax],bl
  439ed0:	stc    
  439ed1:	xchg   DWORD PTR [eax],esp
  439ed3:	sbb    cl,bh
  439ed5:	(bad)  
  439ed6:	sbb    BYTE PTR [eax],bl
  439ed8:	stc    
  439ed9:	xchg   ebx,eax
  439eda:	and    BYTE PTR [eax],bl
  439edc:	stc    
  439edd:	popf   
  439ede:	sbb    BYTE PTR [eax],bl
  439ee0:	stc    
  439ee1:	and    eax,0x15f91823
  439ee6:	sbb    ebx,DWORD PTR [eax]
  439ee8:	stc    
  439ee9:	mov    db3,eax
  439eec:	stc    
  439eed:	sti    
  439eee:	sbb    BYTE PTR [eax],bl
  439ef0:	stc    
  439ef1:	(bad)  
  439ef2:	push   ds
  439ef3:	pop    ss
  439ef4:	stc    
  439ef5:	iret   
  439ef6:	push   ds
  439ef7:	pop    ss
  439ef8:	stc    
  439ef9:	xchg   ebx,eax
  439efa:	push   ds
  439efb:	pop    ss
  439efc:	stc    
  439efd:	mov    ds:0xd9f9171e,eax
  439f02:	sbb    al,0x17
  439f04:	stc    
  439f05:	retf   
  439f06:	sbb    al,0x17
  439f08:	stc    
  439f09:	stc    
  439f0a:	sbb    al,0x17
  439f0c:	stc    
  439f0d:	xchg   edi,eax
  439f0e:	loop   0x439f27
  439f10:	stc    
  439f11:	add    BYTE PTR [ecx+ebx*4],ah
  439f14:	cli    
  439f15:	inc    DWORD PTR [eax]
  439f17:	add    BYTE PTR [ecx+ebx*4],cl
  439f1a:	cli    
  439f1b:	jmp    edx
  439f1d:	cdq    
  439f1e:	cli    
  439f1f:	call   edx
  439f21:	cdq    
  439f22:	cli    
  439f23:	jmp    FWORD PTR [esi-0x6f000567]
  439f29:	test   ebx,edi
  439f2b:	jmp    esp
  439f2d:	cmp    ebx,0xffffffff
  439f30:	repnz cmp ebx,0xffffffff
  439f34:	repnz cmp ebx,0xffffffff
  439f38:	xchg   BYTE PTR [ebp-0x7a990005],al
  439f3e:	sti    
  439f3f:	call   FWORD PTR [eax]
  439f41:	test   ebx,edi
  439f43:	call   DWORD PTR [ebp+eax*4-0x5]
  439f47:	inc    esp
  439f49:	test   ebx,edi
  439f4b:	(bad)  
  439f4c:	fiadd  WORD PTR [ebx+0x4f4fffb]
  439f52:	add    BYTE PTR [eax],al
  439f54:	mov    esi,0xc6fffb73
  439f59:	jae    0x439f56
  439f5b:	jmp    DWORD PTR [eax-0x53000492]
  439f61:	outs   dx,BYTE PTR ds:[esi]
  439f62:	sti    
  439f63:	inc    DWORD PTR [esi*2+0x7514fffb]
  439f6a:	sti    
  439f6b:	jmp    FWORD PTR [edx]
  439f6d:	jne    0x439f6a
  439f6f:	push   DWORD PTR [esi]
  439f71:	jne    0x439f6e
  439f73:	(bad)  
  439f74:	out    dx,al
  439f75:	outs   dx,BYTE PTR ds:[esi]
  439f76:	sti    
  439f77:	jmp    FWORD PTR [edx+0xfffb6e]
  439f7d:	add    BYTE PTR [esi+ebp*2+0x7480fffb],dh
  439f84:	sti    
  439f85:	push   DWORD PTR [edx+0x74]
  439f88:	sti    
  439f89:	(bad)  
  439f8a:	ds fwait
  439f8c:	cli    
  439f8d:	call   FWORD PTR [ebp+0x62fd7885]
  439f93:	pop    edx
  439f94:	js     0x439f93
  439f96:	pop    edx
  439f97:	les    esi,FWORD PTR [edi-0x3]
  439f9a:	push   edx
  439f9b:	mov    dh,0x77
  439f9d:	std    
  439f9e:	dec    edx
  439f9f:	adc    BYTE PTR [eax-0x3],bh
  439fa2:	inc    edx
  439fa3:	add    dh,BYTE PTR [edi-0x3]
  439fa6:	cmp    bl,BYTE PTR [eax+0x78]
  439fa9:	std    
  439faa:	xor    ch,BYTE PTR [edx+0x78]
  439fad:	std    
  439fae:	sub    ch,BYTE PTR [edx]
  439fb0:	std    
  439fb1:	call   FWORD PTR [ebp+0x1dfffd1b]
  439fb7:	fidiv  WORD PTR [ecx-0x3]
  439fba:	adc    bh,BYTE PTR [ebx]
  439fbc:	std    
  439fbd:	call   FWORD PTR ds:0x1dfffd27
  439fc3:	sub    edi,ebp
  439fc5:	call   FWORD PTR ds:0xf2fd71f4
  439fcb:	es std 
  439fcd:	call   FWORD PTR ds:0x1dfffd29
  439fd3:	bound  esi,QWORD PTR [edi-0x3]
  439fd6:	fidivr DWORD PTR ds:0x1dd2fd77
  439fdc:	std    
  439fdd:	call   FWORD PTR ds:0xfffc9d
  439fe3:	add    BYTE PTR ds:0xbafd773e,bl
  439fe9:	sbb    esi,DWORD PTR [ebx-0x3]
  439fec:	mov    dl,0xf
  439fee:	std    
  439fef:	call   FWORD PTR ds:0x1dfffd17
  439ff5:	scas   al,BYTE PTR es:[edi]
  439ff6:	add    eax,DWORD PTR [eax]
  439ff8:	sbb    eax,0x1dfffd2b
  439ffd:	xor    ch,bh
  439fff:	call   FWORD PTR ds:0x82fd7329
  43a005:	pop    ds
  43a006:	std    
  43a007:	call   FWORD PTR ds:0x9d03fb02
  43a00d:	sub    BYTE PTR [ebx-0x5ae89787],0x79
  43a014:	pusha  
  43a015:	pop    ss
  43a016:	dec    edi
  43a017:	jns    0x43a071
  43a019:	pop    ss
  43a01a:	adc    al,BYTE PTR [ebx*4-0x62fc287e]
  43a021:	and    dh,0x3
  43a024:	popf   
  43a025:	adc    dh,0x3
  43a028:	popf   
  43a029:	adc    bh,0x3
  43a02c:	popf   
  43a02d:	and    bh,0x3
  43a030:	popf   
  43a031:	add    bl,BYTE PTR [ecx+0x27172095]
  43a037:	xchg   ebp,eax
  43a038:	sbb    BYTE PTR [edi],dl
  43a03a:	sub    eax,0x13171095
  43a03f:	xchg   ebp,eax
  43a040:	or     BYTE PTR [edi],dl
  43a042:	adc    DWORD PTR [ebp-0x6ac0e900],edx
  43a048:	add    BYTE PTR [eax],al
  43a04a:	clc    
  43a04b:	push   ss
  43a04c:	pop    ss
  43a04d:	xchg   ebp,eax
  43a04e:	lock push ss
  43a050:	sbb    DWORD PTR [ebp-0x6e1ce918],edx
  43a056:	loopne 0x43a06e
  43a058:	icebp  
  43a059:	xchg   ecx,eax
  43a05a:	fcom   DWORD PTR [esi]
  43a05c:	(bad)  
  43a05d:	xchg   ecx,eax
  43a05e:	rcl    BYTE PTR [esi],1
  43a060:	int    0x91
  43a062:	enter  0xbb16,0x91
  43a066:	rcl    BYTE PTR [esi],0xa7
  43a069:	xchg   ecx,eax
  43a06a:	mov    eax,0xb0923516
  43a06f:	push   ss
  43a070:	mov    bl,0x91
  43a072:	test   al,0x16
  43a074:	sub    eax,0xe716a092
  43a079:	add    ebx,DWORD PTR [ebp-0x6f8892fe]
  43a07f:	push   ss
  43a080:	pop    ebp
  43a081:	ja     0x43a00b
  43a083:	push   ss
  43a084:	add    BYTE PTR [ebp+0x3bf9180a],al
  43a08a:	cmc    
  43a08b:	pop    ss
  43a08c:	stc    
  43a08d:	inc    edi
  43a08e:	cmc    
  43a08f:	pop    ss
  43a090:	stc    
  43a091:	sub    eax,0xddf917e5
  43a096:	jmp    0xf917:0xd2cbf917
  43a09d:	test   edx,0x9ee9f917
  43a0a3:	add    al,BYTE PTR [eax]
  43a0a5:	xchg   BYTE PTR [ebp+edi*4-0x58020a97],bl
  43a0ac:	imul   edx,esi,0x0
  43a0af:	add    bh,bh
  43a0b1:	sahf   
  43a0b2:	(bad)  
  43a0b3:	(bad)
  43a0b6:	pop    esp
  43a0b7:	(bad)  
  43a0b9:	test   al,0x62
  43a0bb:	mov    edi,0x52f9164a
  43a0c0:	pushf  
  43a0c1:	mov    ebp,0xa83db569
  43a0c6:	imul   eax,esi,0x3f
  43a0c9:	lahf   
  43a0ca:	(bad)  
  43a0cb:	lds    edi,FWORD PTR [edx]
  43a0cd:	mov    eax,ds:0xa93d9b5c
  43a0d2:	bound  ecx,QWORD PTR [edi+0x10f9163a]
  43a0d8:	loop   0x43a08c
  43a0da:	pop    esi
  43a0db:	or     BYTE PTR [edx],0xc4
  43a0de:	push   0x699cef7b
  43a0e3:	xchg   BYTE PTR [edx],dh
  43a0e5:	mov    eax,ds:0xa1248b48
  43a0ea:	pop    esp
  43a0eb:	jne    0x43a08b
  43a0ed:	xchg   esi,edi
  43a0ef:	sub    eax,0x50539212
  43a0f4:	cld    
  43a0f5:	sahf   
  43a0f6:	cmp    al,0x46
  43a0f8:	repnz stos DWORD PTR es:[edi],eax
  43a0fa:	jae    0x43a0e5
  43a0fc:	sahf   
  43a0fd:	inc    esp
  43a0fe:	(bad)  
  43a0ff:	dec    esp
  43a101:	jne    0x43a15d
  43a103:	jo     0x43a0ab
  43a105:	jne    0x43a141
  43a107:	ins    BYTE PTR es:[edi],dx
  43a108:	fsubr  DWORD PTR [edi+0x5c]
  43a10b:	add    BYTE PTR [edi],bh
  43a10d:	add    BYTE PTR [eax+0x65],cl
  43a110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a111:	dec    esi
  43a112:	cmp    ch,BYTE PTR [eax+eax*1+0x0]
  43a116:	cwde   
  43a117:	outs   dx,DWORD PTR ds:[esi]
  43a118:	pop    esp
  43a119:	add    BYTE PTR [ebx],bh
  43a11b:	add    BYTE PTR [eax+0x65],cl
  43a11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a11f:	dec    esi
  43a120:	aas    
  43a121:	jb     0x43a0c4
  43a123:	jne    0x43a11e
  43a125:	dec    DWORD PTR [esi+0x40653f00]
  43a12b:	xor    DWORD PTR [ebx+0x6f],ebp
  43a12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a12f:	jne    0x43a19d
  43a131:	jae    0x43a11f
  43a133:	jae    0x43a18f
  43a135:	jo     0x43a16b
  43a137:	add    ebp,eax
  43a139:	add    bh,ah
  43a13b:	jae    0x43a197
  43a13d:	jo     0x43a186
  43a13f:	push   ebx
  43a140:	pop    esi
  43a141:	popa   
  43a142:	push   eax
  43a143:	je     0x43a13e
  43a145:	call   DWORD PTR [esi+0x0]
  43a148:	inc    ecx
  43a149:	outs   dx,BYTE PTR ds:[esi]
  43a14a:	frstor [edx+eiz*2+0x61]
  43a14e:	cmp    BYTE PTR [eax+0x73],bh
  43a151:	gs inc edi
  43a153:	push   ebx
  43a154:	bound  esi,QWORD PTR [ebp+ecx*1+0x62]
  43a158:	pop    edx
  43a159:	ins    BYTE PTR es:[edi],dx
  43a15a:	daa    
  43a15b:	je     0x43a1b9
  43a15d:	je     0x43a17c
  43a15f:	outs   dx,BYTE PTR ds:[esi]
  43a160:	addr16 add ch,bl
  43a163:	add    DWORD PTR [ebp+eiz*2+0x15],ecx
  43a167:	addr16 pop esi
  43a169:	inc    ebx
  43a16a:	inc    esi
  43a16b:	js     0x43a1da
  43a16d:	imul   esp,DWORD PTR [edi],0x61536560
  43a173:	arpl   WORD PTR [ebp+0x69],bp
  43a176:	pop    ebx
  43a177:	ins    BYTE PTR es:[edi],dx
  43a178:	stc    
  43a179:	inc    DWORD PTR [eax]
  43a17b:	add    BYTE PTR [ebp+0xb42fd3d],bl
  43a181:	scas   al,BYTE PTR es:[edi]
  43a182:	cwde   
  43a183:	ins    DWORD PTR es:[edi],dx
  43a184:	(bad)  
  43a186:	xchg   esp,eax
  43a187:	jae    0x43a17d
  43a189:	enter  0x6b9c,0xee
  43a18d:	(bad)  
  43a18e:	sahf   
  43a18f:	jae    0x43a195
  43a191:	aad    0x91
  43a193:	push   DWORD PTR [edx+0x5b]
  43a196:	std    
  43a197:	inc    ebx
  43a198:	add    BYTE PTR [esi],al
  43a19a:	cdq    
  43a19b:	jae    0x43a195
  43a19d:	call   0x315084f
  43a1a2:	lahf   
  43a1a3:	pop    esi
  43a1a4:	sar    eax,0x98
  43a1a7:	pop    esp
  43a1a8:	shl    edx,1
  43a1aa:	xchg   edx,eax
  43a1ab:	imul   ebx,DWORD PTR [ebp-0x4abd01ce],0xaf4fb002
  43a1b5:	sub    al,0xa0
  43a1b7:	bound  ebp,QWORD PTR [esi-0x637f02c8]
  43a1bd:	fs call 0x7c6a:0x92545e73
  43a1c5:	sub    ebx,DWORD PTR [ecx-0x65bc8bb5]
  43a1cb:	push   eax
  43a1cc:	popf   
  43a1cd:	jno    0x43a1c8
  43a1cf:	dec    esp
  43a1d0:	or     BYTE PTR [ebp-0x46],0x6d
  43a1d4:	outs   dx,DWORD PTR ds:[esi]
  43a1d5:	ins    BYTE PTR es:[edi],dx
  43a1d6:	scas   eax,DWORD PTR es:[edi]
  43a1d7:	dec    edx
  43a1d8:	jp     0x43a257
  43a1da:	call   0x40:0xfd9ce2ff
  43a1e1:	add    BYTE PTR [eax+0x6d],al
  43a1e4:	shr    BYTE PTR [eax+0x40],0x99
  43a1e8:	test   eax,0xb2974073
  43a1ed:	pop    esi
  43a1ee:	xor    BYTE PTR [esi+0x72baffcc],al
  43a1f4:	stc    
  43a1f5:	dec    esp
  43a1f6:	cmp    BYTE PTR [edx],al
  43a1f8:	pop    ebx
  43a1f9:	leave  
  43a1fa:	sub    al,0x9d
  43a1fc:	dec    eax
  43a1fd:	cwde   
  43a1fe:	mov    ds:0xdc05ef13,al
  43a203:	popf   
  43a204:	push   edx
  43a205:	rol    DWORD PTR ds:0xffb03b9f,1
  43a20b:	retf   0xb247
  43a20e:	(bad)  
  43a20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a210:	dec    ebx
  43a211:	mov    ebx,0x8bc137a
  43a216:	iret   
  43a217:	test   eax,0xa1ef9814
  43a21c:	or     cl,dl
  43a21e:	lock popf 
  43a220:	or     ecx,ecx
  43a222:	rol    BYTE PTR [edx],cl
  43a224:	push   ebp
  43a225:	or     al,ah
  43a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a228:	or     ebp,DWORD PTR [ecx+0x64302ba]
  43a22e:	fcomp  QWORD PTR [ebp-0x6f404606]
  43a234:	cmc    
  43a235:	lods   al,BYTE PTR ds:[esi]
  43a236:	lds    esp,FWORD PTR [ebx+ebp*4-0xcfd3265]
  43a23d:	add    eax,0xd0da9ddc
  43a242:	test   DWORD PTR [esi+0xafd3],ebx
  43a248:	jg     0x43a206
  43a24a:	iret   
  43a24b:	scas   eax,DWORD PTR es:[edi]
  43a24c:	jg     0x43a212
  43a24e:	(bad)  
  43a24f:	mov    al,0x7f
  43a251:	stos   DWORD PTR es:[edi],eax
  43a252:	out    0x3,al
  43a254:	pop    esi
  43a255:	add    BYTE PTR [edx-0x6b4d9158],ah
  43a25b:	mov    dl,0x49
  43a25d:	rol    DWORD PTR [edx-0x6a628f59],0x96
  43a264:	ficom  DWORD PTR [edx]
  43a266:	fs add al,0x90
  43a269:	nop
  43a26a:	mov    esp,DWORD PTR [esi+ecx*2+0x3f99a39d]
  43a271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a272:	(bad)  
  43a273:	jl     0x43a26c
  43a275:	adc    bh,cl
  43a277:	neg    BYTE PTR [edx+0x5505eb1]
  43a27d:	shr    DWORD PTR [eax+0x5b],0xcc
  43a281:	(bad)  
  43a282:	imul   ebx,DWORD PTR [ebp+0x48],0xffffffa2
  43a286:	imul   eax,DWORD PTR [esi+ebp*2-0x50],0x65
  43a28b:	dec    esp
  43a28c:	inc    edx
  43a28d:	xchg   esi,eax
  43a28e:	ins    BYTE PTR es:[edi],dx
  43a28f:	jmp    0x45466832
  43a294:	adc    dl,BYTE PTR [esi-0x5dd3b593]
  43a29a:	mov    ax,ds:0xa0d02cb
  43a2a1:	xchg   esi,eax
  43a2a2:	ins    DWORD PTR es:[edi],dx
  43a2a3:	or     al,BYTE PTR [eax]
  43a2a5:	xchg   esi,eax
  43a2a6:	push   eax
  43a2a7:	jmp    0x3640384a
  43a2ac:	add    BYTE PTR [eax],al
  43a2ae:	xor    DWORD PTR [ebp-0x5ad8db97],esp
  43a2b4:	imul   edi,ebp,0x81f911f7
  43a2ba:	sahf   
  43a2bb:	(bad)  
  43a2bc:	jb     0x43a297
  43a2be:	cli    
  43a2bf:	test   al,0x5c
  43a2c1:	enter  0xa50a,0x47
  43a2c5:	enter  0xa64c,0x6b
  43a2c9:	les    ebx,FWORD PTR [esi+0x3aa9ffc0]
  43a2cf:	fwait
  43a2d0:	ins    BYTE PTR es:[edi],dx
  43a2d1:	(bad)  
  43a2d2:	(bad)  
  43a2d3:	mov    al,0x69
  43a2d5:	int    0x4a
  43a2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2d8:	jmp    DWORD PTR [edi]
  43a2da:	cdq    
  43a2db:	ret    
  43a2dc:	bound  ebx,QWORD PTR [ebp-0x64926b1d]
  43a2e2:	xor    eax,0x30b9739c
  43a2e7:	fwait
  43a2e8:	pop    esp
  43a2e9:	test   BYTE PTR [ebx],ch
  43a2eb:	lahf   
  43a2ec:	inc    esi
  43a2ed:	add    BYTE PTR [eax],bl
  43a2ef:	push   es
  43a2f0:	dec    eax
  43a2f1:	add    esi,eax
  43a2f3:	push   esp
  43a2f4:	pop    esp
  43a2f5:	popa   
  43a2f6:	and    BYTE PTR [ebx+ebp*2],bh
  43a2f9:	sbb    DWORD PTR gs:[esi],eax
  43a2fc:	es add eax,0x7462786b
  43a302:	pop    ecx
  43a303:	push   esi
  43a304:	imul   ebp,DWORD PTR [edi-0x19],0x69
  43a308:	ins    BYTE PTR es:[edi],dx
  43a309:	jae    0x43a2bc
  43a30b:	imul   esp,DWORD PTR [esi+0x6f],0xfff96dc6
  43a312:	add    BYTE PTR [eax],al
  43a314:	add    ebx,edi
  43a316:	dec    edx
  43a317:	jns    0x43a2d0
  43a319:	push   0x5e
  43a31b:	ins    DWORD PTR es:[edi],dx
  43a31c:	mov    BYTE PTR [ebp+0x66],bl
  43a31f:	gs test al,0x53
  43a322:	aas    
  43a323:	imul   edx,DWORD PTR [eax-0x5e96b297],0xccfff969
  43a32d:	or     BYTE PTR [edi],bh
  43a32f:	gs dec eax
  43a331:	pop    ecx
  43a332:	bound  ebp,QWORD PTR [ebp-0x67]
  43a335:	push   eax
  43a336:	push   0x673da96e
  43a33b:	xor    si,WORD PTR [edi+0x66]
  43a33f:	popa   
  43a340:	dec    eax
  43a341:	pop    esp
  43a342:	push   0xfb05346e
  43a347:	add    DWORD PTR [ebx+0x68],ecx
  43a34a:	ins    DWORD PTR es:[edi],dx
  43a34b:	dec    esp
  43a34c:	push   ebx
  43a34d:	pop    dx
  43a34f:	ins    BYTE PTR es:[edi],dx
  43a350:	sub    BYTE PTR [esi+eiz*2+0x65],bl
  43a354:	hlt    
  43a355:	add    al,0x6f
  43a357:	add    cl,BYTE PTR [ebx+0x68]
  43a35a:	ins    DWORD PTR es:[edi],dx
  43a35b:	push   ebx
  43a35c:	sub    eax,0x11656d76
  43a361:	pop    ecx
  43a362:	bound  ebp,QWORD PTR [ebp+0x19]
  43a365:	add    eax,0x879d0546
  43a36a:	xchg   esp,eax
  43a36b:	jae    0x43a3bc
  43a36d:	(bad)  
  43a36e:	mov    eax,ds:0xfd1b7269
  43a373:	inc    ebx
  43a374:	cwde   
  43a375:	jg     0x43a30b
  43a377:	jae    0x43a379
  43a379:	add    BYTE PTR [edi],ch
  43a37b:	jl     0x43a327
  43a37d:	outs   dx,DWORD PTR ds:[esi]
  43a37e:	inc    esp
  43a37f:	pop    edx
  43a380:	std    
  43a381:	dec    edx
  43a382:	mov    al,ds:0x2f7392b7
  43a387:	mov    edi,0x19dc69a0
  43a38c:	std    
  43a38d:	pusha  
  43a38e:	sahf   
  43a38f:	out    dx,al
  43a390:	nop
  43a391:	imul   edx,DWORD PTR [ecx],0xffffffb3
  43a394:	shl    DWORD PTR [esi+0x9],0xc7
  43a398:	mov    bh,0x68
  43a39a:	rol    dl,cl
  43a39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a39d:	(bad)  
  43a39e:	faddp  st(1),st
  43a3a0:	pushf  
  43a3a1:	ins    DWORD PTR es:[edi],dx
  43a3a2:	popf   
  43a3a3:	or     al,BYTE PTR [edx]
  43a3a5:	push   ecx
  43a3a6:	hlt    
  43a3a7:	add    eax,0xfac53ca1
  43a3ac:	xchg   ecx,eax
  43a3ad:	push   ebx
  43a3ae:	ret    0x90ee
  43a3b1:	imul   edx,ecx,0xfffffff2
  43a3b4:	shl    DWORD PTR [esi-0x37],0x6
  43a3b8:	add    al,0xee
  43a3ba:	mov    eax,ds:0xa96da4ef
  43a3bf:	push   ss
  43a3c0:	sahf   
  43a3c1:	imul   ecx,esp,0x2e
  43a3c4:	mov    ds:0x9566a46d,al
  43a3c9:	call   FWORD PTR [edx]
  43a3cb:	fld    QWORD PTR [ebx]
  43a3cd:	dec    esi
  43a3ce:	js     0x43a40a
  43a3d0:	mov    eax,ds:0xa4388f4f
  43a3d5:	bound  ecx,QWORD PTR [esi-0x779d35b4]
  43a3db:	dec    eax
  43a3dc:	xchg   ebx,eax
  43a3dd:	jbe    0x43a3df
  43a3df:	add    BYTE PTR [ebp+0x745200c9],bl
  43a3e5:	add    dl,BYTE PTR [ebp-0x755e9069]
  43a3eb:	mov    bl,0x48
  43a3ed:	lahf   
  43a3ee:	call   0xca9b:0xa39671a6
  43a3f5:	prefetch BYTE PTR [edi]
  43a3f8:	outs   dx,DWORD PTR ds:[esi]
  43a3f9:	cdq    
  43a3fa:	je     0x43a393
  43a3fc:	das    
  43a3fd:	mov    eax,ds:0x9e46c282
  43a402:	jns    0x43a3a8
  43a404:	pop    edi
  43a405:	mov    ah,dh
  43a407:	add    eax,DWORD PTR [ebx+0x1]
  43a40a:	and    DWORD PTR [edx-0x52dd5a01],edx
  43a410:	lock xchg esp,eax
  43a412:	inc    edi
  43a413:	xchg   edx,eax
  43a414:	adc    eax,DWORD PTR [ebx]
  43a416:	add    al,BYTE PTR [ebx]
  43a418:	rcr    DWORD PTR [edi-0x661957b9],1
  43a41e:	inc    esp
  43a41f:	xchg   edx,eax
  43a420:	rcl    DWORD PTR [edi+ebp*1-0x57f09549],cl
  43a427:	or     cl,cl
  43a429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a42a:	adc    al,0xb1
  43a42c:	ret    
  43a42d:	mov    al,ds:0xb6bf9807
  43a432:	(bad)  
  43a433:	xchg   ecx,eax
  43a434:	mov    edi,0xe040aa1
  43a439:	add    ah,BYTE PTR [esi]
  43a43b:	xchg   edx,eax
  43a43c:	mov    edi,0xcea8faa1
  43a441:	call   0xa6cb:0xa8f4
  43a448:	out    0x3,al
  43a44a:	xor    al,0x6
  43a44c:	mov    cl,0xac
  43a44e:	mov    BYTE PTR [esi-0x4d795b25],dl
  43a454:	aam    0xae
  43a456:	mov    fs,WORD PTR [ebp+0xf0297c5]
  43a45c:	xchg   esi,eax
  43a45d:	pop    es
  43a45e:	push   0xe5bcffa5
  43a463:	cwde   
  43a464:	arpl   WORD PTR [esi-0x6a993ec0],bx
  43a46a:	xor    eax,0xa286f90f
  43a46f:	mov    ebp,0xa7d89d62
  43a474:	imul   eax,DWORD PTR [esi+ecx*1+0x2a97669a],0xffffffa4
  43a47c:	ins    DWORD PTR es:[edi],dx
  43a47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a47e:	push   ss
  43a47f:	psubw  mm0,QWORD PTR [ebx+0x7562bd9a]
  43a486:	loopne 0x43a42f
  43a488:	imul   ecx,DWORD PTR [ebp+eiz*8-0x59],0x6a
  43a48d:	inc    esp
  43a48e:	mov    eax,ds:0x2f3e02e1
  43a493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a494:	jae    0x43a4da
  43a496:	arpl   WORD PTR [ebp+0x24994c6b],sp
  43a49c:	jmp    DWORD PTR ds:0x40419244
  43a4a2:	sub    eax,0x5353ea1
  43a4a7:	mov    al,ds:0xb66
  43a4ac:	add    al,0x92
  43a4ae:	bound  ebx,QWORD PTR [edx]
  43a4b0:	adc    cl,BYTE PTR [esi]
  43a4b2:	stc    
  43a4b3:	test   eax,0x862bc9f
  43a4b8:	cmc    
  43a4b9:	ret    
  43a4ba:	adc    ax,0xdf4
  43a4be:	stc    
  43a4bf:	outs   dx,BYTE PTR ds:[esi]
  43a4c0:	sahf   
  43a4c1:	iret   
  43a4c2:	ins    DWORD PTR es:[edi],dx
  43a4c3:	or     al,0xf8
  43a4c5:	xchg   ecx,eax
  43a4c6:	bound  esp,QWORD PTR [edi]
  43a4c8:	clc    
  43a4c9:	cdq    
  43a4ca:	bound  edi,QWORD PTR [esi-0x59014c62]
  43a4d0:	dec    edx
  43a4d1:	xchg   ecx,eax
  43a4d2:	ins    BYTE PTR es:[edi],dx
  43a4d3:	rcr    eax,0xa4
  43a4d6:	imul   eax,esp,0xffffffdc
  43a4d9:	nop
  43a4da:	popa   
  43a4db:	add    dl,dl
  43a4dd:	pop    edx
  43a4de:	imul   esi,DWORD PTR [ebx+0x4],0x2
  43a4e2:	jmp    0x6d9ee7e8
  43a4e7:	inc    esi
  43a4e8:	fstp   QWORD PTR [ebp+0x5e]
  43a4eb:	push   ebx
  43a4ec:	or     eax,0xfc455e6c
  43a4f1:	add    DWORD PTR [ebx+0x4],ebp
  43a4f4:	pop    ss
  43a4f5:	pop    ebx
  43a4f6:	ins    DWORD PTR es:[edi],dx
  43a4f7:	dec    esp
  43a4f8:	adc    eax,0x46456d71
  43a4fd:	jae    0x43a567
  43a4ff:	jb     0x43a4c5
  43a501:	add    edx,ebp
  43a503:	add    DWORD PTR [ebx],eax
  43a505:	pop    ebx
  43a506:	ins    DWORD PTR es:[edi],dx
  43a507:	inc    esi
  43a508:	sbb    eax,0x4d545e5e
  43a50d:	pop    ebp
  43a50e:	pop    esi
  43a50f:	add    BYTE PTR [eax],al
  43a511:	add    BYTE PTR [edx+0x6],dl
  43a514:	inc    esp
  43a515:	fsub   DWORD PTR gs:[ebp+0x6d]
  43a519:	gs ret 0x6559
  43a51d:	mov    gs:0xc301ec06,eax
  43a523:	gs ins DWORD PTR es:[edi],dx
  43a525:	inc    esi
  43a526:	fst    QWORD PTR [edx+0x5e]
  43a529:	dec    ecx
  43a52a:	stos   BYTE PTR es:[edi],al
  43a52b:	fs push 0x6d618972
  43a531:	imul   ebp,DWORD PTR [ebx+0x7c793b5c],0x48646761
  43a53b:	fs stc 
  43a53d:	call   DWORD PTR [ebp+0x30654afa]
  43a543:	inc    edi
  43a544:	bound  ebp,QWORD PTR [ecx+eiz*4+0x41]
  43a548:	ins    DWORD PTR es:[edi],dx
  43a549:	je     0x43a571
  43a54b:	pop    eax
  43a54c:	pop    ebx
  43a54d:	jne    0x43a58f
  43a54f:	fs ins BYTE PTR es:[edi],dx
  43a551:	push   edi
  43a552:	add    al,0x1
  43a554:	repnz add ebx,DWORD PTR [ebp-0x7f945db7]
  43a55b:	cmp    dl,BYTE PTR [eax-0x6eb1af9e]
  43a561:	bound  esi,QWORD PTR [ebp+0x1b]
  43a564:	std    
  43a565:	push   eax
  43a566:	sahf   
  43a567:	data16 sahf 
  43a569:	outs   dx,DWORD PTR ds:[esi]
  43a56a:	push   ebx
  43a56b:	inc    edx
  43a56c:	mov    ds:0xc37d5270,al
  43a571:	dec    cx
  43a573:	xchg   ch,bh
  43a575:	rol    DWORD PTR [eax],1
  43a577:	add    BYTE PTR [ecx+0x3c6aab4e],bl
  43a57d:	imul   esi,DWORD PTR [ebx-0x3473c79a],0x61
  43a584:	arpl   WORD PTR [edx-0x57],si
  43a587:	bound  ebx,QWORD PTR [ebp+0x2f3d03a7]
  43a58d:	xchg   BYTE PTR [esi-0x5b22c78d],bl
  43a593:	imul   eax,DWORD PTR [eax],0xffffffdf
  43a596:	pushf  
  43a597:	outs   dx,DWORD PTR ds:[esi]
  43a598:	or     eax,0xf260a9c3
  43a59d:	sbb    ebp,edi
  43a59f:	ret    
  43a5a0:	pushf  
  43a5a1:	fsub   QWORD PTR [eax-0x7229218d]
  43a5a7:	ins    DWORD PTR es:[edi],dx
  43a5a8:	clc    
  43a5a9:	ret    
  43a5aa:	xchg   edi,eax
  43a5ab:	push   ebx
  43a5ac:	cmc    
  43a5ad:	(bad)  
  43a5ae:	mov    al,ds:0xfd19f95e
  43a5b3:	xchg   esi,eax
  43a5b4:	mov    eax,ds:0xe973a0c8
  43a5b9:	add    DWORD PTR [esi-0x4bfa439e],ecx
  43a5bf:	ins    DWORD PTR es:[edi],dx
  43a5c0:	mov    ah,0xf4
  43a5c2:	lea    esp,[esi-0x4f]
  43a5c5:	add    al,BYTE PTR [ecx+edi*8]
  43a5c8:	pushf  
  43a5c9:	fsub   QWORD PTR [eax-0x56052a8d]
  43a5cf:	arpl   WORD PTR [ecx-0x7b3533fe],si
  43a5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a5d6:	leave  
  43a5d7:	xchg   ecx,eax
  43a5d8:	xchg   DWORD PTR [ecx+0xaada],esp
  43a5de:	jne    0x43a57c
  43a5e0:	out    0x3,al
  43a5e2:	push   ebp
  43a5e3:	add    eax,0x906e90d3
  43a5e8:	lds    edx,FWORD PTR [ebx+0x3e6b36b]
  43a5ee:	pop    esp
  43a5ef:	add    eax,0x906e90bb
  43a5f4:	test   DWORD PTR [ebx+0x3e6c153],edx
  43a5fa:	xchg   edx,eax
  43a5fb:	add    eax,0x904e9083
  43a600:	test   DWORD PTR [esi+0x3e6c132],ebp
  43a606:	arpl   WORD PTR ds:0x902e908b,ax
  43a60c:	test   DWORD PTR [ebx+0x3a79c33],edx
  43a612:	mov    ds:0xea12a01,eax
  43a617:	mov    edi,0xc60e9747
  43a61c:	push   esp
  43a61d:	xchg   esi,eax
  43a61e:	cmc    
  43a61f:	nop
  43a620:	out    0x3,al
  43a622:	sar    edi,0x32
  43a625:	stos   DWORD PTR es:[edi],eax
  43a626:	(bad)  [esi-0x6f2f52d6]
  43a62c:	inc    edi
  43a62d:	xchg   esi,eax
  43a62e:	repz shl esi,0x3
  43a632:	jge    0x43a635
  43a634:	sub    ah,BYTE PTR [ecx-0x52e13a32]
  43a63a:	into   
  43a63b:	mov    edi,0xb6bfa001
  43a640:	(bad)  
  43a641:	xchg   ebp,eax
  43a642:	add    BYTE PTR [eax],al
  43a644:	mov    edi,0x59040aa1
  43a649:	add    DWORD PTR [edx],esp
  43a64b:	mov    eax,ds:0x6ffc5ae
  43a650:	shld   DWORD PTR [ebp-0x2],ebp,0xf4
  43a655:	xchg   edi,eax
  43a656:	(bad)  
  43a657:	xlat   BYTE PTR ds:[ebx]
  43a658:	sub    dh,BYTE PTR [ecx-0x53be24a2]
  43a65e:	pop    ebp
  43a65f:	lds    edi,FWORD PTR ds:0x9980ffb2
  43a665:	int    0x6d
  43a667:	int3   
  43a668:	inc    ecx
  43a669:	(bad)  
  43a66a:	bound  ebx,QWORD PTR [ecx-0x33a365f8]
  43a670:	adc    ebx,DWORD PTR [esi-0x7d6116b0]
  43a676:	std    
  43a677:	mov    ch,0x2e
  43a679:	mov    al,ds:0x9a28b969
  43a67e:	pop    esp
  43a67f:	mov    WORD PTR [ebx],?
  43a681:	sahf   
  43a682:	jmp    FWORD PTR [ecx]
  43a684:	popf   
  43a685:	mov    dh,0x67
  43a687:	jnp    0x43a686
  43a689:	stos   DWORD PTR es:[edi],eax
  43a68a:	arpl   WORD PTR [edx+0x7b66c0c8],di
  43a690:	adc    ecx,DWORD PTR [edi-0x4962db01]
  43a696:	addr16 pop ebx
  43a698:	cmp    al,0xa9
  43a69a:	arpl   WORD PTR [edx],bx
  43a69c:	imul   edi,DWORD PTR [edx+eiz*2-0x6f5d2af],0xffffff8f
  43a6a4:	sahf   
  43a6a5:	(bad)  
  43a6a6:	ins    DWORD PTR es:[edi],dx
  43a6a7:	dec    esp
  43a6a8:	add    BYTE PTR [eax],al
  43a6aa:	inc    eax
  43a6ab:	xchg   esi,eax
  43a6ac:	bound  edx,QWORD PTR ds:0x416b9b46
  43a6b2:	cmp    al,0x9e
  43a6b4:	outs   dx,DWORD PTR ds:[esi]
  43a6b5:	cli    
  43a6b6:	dec    eax
  43a6b7:	mov    bh,0x69
  43a6b9:	or     BYTE PTR [ecx],dh
  43a6bb:	xchg   edi,eax
  43a6bc:	addr16 push cs
  43a6be:	sub    eax,0xa32bf90a
  43a6c3:	ret    
  43a6c4:	bound  edx,QWORD PTR ds:0x669809
  43a6ca:	cmp    bl,BYTE PTR [edi+0x6d]
  43a6cd:	gs xchg esp,eax
  43a6cf:	jo     0x43a739
  43a6d1:	popfw  
  43a6d3:	pop    edx
  43a6d4:	pop    esi
  43a6d5:	push   ebx
  43a6d6:	sub    BYTE PTR [eax+0x62],dh
  43a6d9:	outs   dx,BYTE PTR ds:[esi]
  43a6da:	jmp    0x43a730
  43a6dc:	stc    
  43a6dd:	push   DWORD PTR [eax-0x179ac100]
  43a6e3:	push   ebp
  43a6e4:	imul   ebp,DWORD PTR [ecx-0x16],0x5e
  43a6e8:	ins    DWORD PTR es:[edi],dx
  43a6e9:	gs adc al,0x70
  43a6ec:	push   0x5e61cd66
  43a6f1:	dec    ecx
  43a6f2:	loop   0x43a76d
  43a6f4:	push   eax
  43a6f5:	add    cl,dl
  43a6f7:	(bad)  
  43a6f8:	cmp    al,0x78
  43a6fa:	xor    al,0x5f
  43a6fc:	addr16 fs stc 
  43a6ff:	pop    ebx
  43a700:	outs   dx,DWORD PTR ds:[esi]
  43a701:	imul   esp,DWORD PTR [esi],0x196d675d
  43a707:	pop    esp
  43a708:	ins    DWORD PTR es:[edi],dx
  43a709:	push   ebx
  43a70a:	cmp    BYTE PTR [edi+0x62],ch
  43a70d:	outs   dx,BYTE PTR ds:[esi]
  43a70e:	add    BYTE PTR [eax],al
  43a710:	sbb    esi,DWORD PTR [ecx+0x50]
  43a713:	add    BYTE PTR [edx+0x2d724d09],al
  43a719:	inc    edx
  43a71a:	addr16 je 0x43a706
  43a71d:	jo     0x43a75b
  43a71f:	jb     0x43a70e
  43a721:	jb     0x43a785
  43a723:	arpl   bp,dx
  43a725:	pop    edx
  43a726:	dec    esp
  43a727:	xlat   BYTE PTR gs:[ebx]
  43a729:	jb     0x43a78d
  43a72b:	outs   dx,DWORD PTR ds:[esi]
  43a72c:	sar    dh,cl
  43a72e:	jge    0x43a732
  43a730:	mov    ebx,0xdc546d69
  43a735:	jo     0x43a795
  43a737:	popa   
  43a738:	fdivr  DWORD PTR [edi]
  43a73a:	push   0x7169b86e
  43a73f:	je     0x43a785
  43a741:	add    eax,0xcc9d0489
  43a746:	cwde   
  43a747:	jae    0x43a732
  43a749:	add    edx,DWORD PTR [edx-0x3d08439e]
  43a74f:	push   0x779a0fc3
  43a754:	mov    cl,0x1b
  43a756:	std    
  43a757:	dec    ebx
  43a758:	lahf   
  43a759:	loopne 0x43a6f3
  43a75b:	jae    0x43a7ca
  43a75d:	sub    eax,0x2c785ca8
  43a762:	xchg   esp,eax
  43a763:	inc    esi
  43a764:	sbb    DWORD PTR [ebx],0x5c9d99fd
  43a76a:	xchg   ebx,eax
  43a76b:	bound  edi,QWORD PTR [edi+eax*2-0x66]
  43a76f:	dec    edx
  43a770:	push   0x779a4f
  43a775:	add    BYTE PTR [edx+0x1b],dl
  43a778:	std    
  43a779:	ret    0x609c
  43a77c:	call   0x386d:0x93665e73
  43a783:	jns    0x43a70e
  43a785:	push   ebx
  43a786:	xor    eax,0x395e9a6d
  43a78b:	bound  ebx,QWORD PTR [ecx-0x2a4501]
  43a791:	push   ebx
  43a792:	inc    ecx
  43a793:	mov    WORD PTR [ebp-0x5b7fc695],?
  43a799:	jmp    DWORD PTR [edx+0x953ffe0]
  43a79f:	lods   eax,DWORD PTR ds:[esi]
  43a7a0:	mov    ebp,0x3bef86d
  43a7a5:	shl    DWORD PTR [ecx-0x2593583b],0xbe
  43a7ac:	(bad)  
  43a7ad:	push   ecx
  43a7ae:	cld    
  43a7af:	lods   eax,DWORD PTR ds:[esi]
  43a7b0:	mov    BYTE PTR [edx-0x63],ah
  43a7b3:	push   ecx
  43a7b4:	stc    
  43a7b5:	push   ebx
  43a7b6:	stc    
  43a7b7:	int3   
  43a7b8:	mov    dl,0x62
  43a7ba:	jmp    0xd0af44ae
  43a7bf:	add    cl,BYTE PTR [esp+eax*1]
  43a7c2:	pop    ebp
  43a7c3:	push   DWORD PTR [edx]
  43a7c5:	lahf   
  43a7c6:	mov    eax,0xe3a9ff95
  43a7cb:	mov    es,WORD PTR [ebx]
  43a7cd:	mov    ah,0xc8
  43a7cf:	xchg   edi,eax
  43a7d0:	add    eax,0xe693c19f
  43a7d5:	add    edx,DWORD PTR [esi+edi*8+0x9f14]
  43a7dc:	mov    cl,0x9d
  43a7de:	repnz mov esi,0x8fd09d8c
  43a7e4:	adc    cl,BYTE PTR [eax]
  43a7e6:	push   es
  43a7e7:	add    ebx,DWORD PTR [edi-0x67]
  43a7ea:	ret    0x6e9e
  43a7ed:	cdq    
  43a7ee:	mov    ebx,0xaa974e9e
  43a7f3:	test   al,0x81
  43a7f5:	mov    esi,0xae7f8fc7
  43a7fa:	mov    edi,0x66027fa6
  43a7ff:	add    eax,0xaf9a9d5c
  43a804:	aas    
  43a805:	xchg   ebp,eax
  43a806:	xchg   esi,eax
  43a807:	rol    DWORD PTR [ebx-0x6a],0x8b
  43a80b:	leave  
  43a80c:	arpl   WORD PTR [ebp+0x7bab083],dx
  43a812:	ins    BYTE PTR es:[edi],dx
  43a813:	add    eax,0xaf729d5c
  43a818:	aas    
  43a819:	xchg   ebp,eax
  43a81a:	jbe    0x43a7cf
  43a81c:	inc    ebx
  43a81d:	mov    ?,WORD PTR [esi-0x50]
  43a820:	call   0x4a99:0xdf050b07
  43a827:	mov    eax,ds:0xa14399ee
  43a82c:	out    dx,al
  43a82d:	xchg   edi,eax
  43a82e:	sbb    ah,BYTE PTR [edi-0x41ad5e27]
  43a834:	sti    
  43a835:	xchg   esi,eax
  43a836:	inc    ebx
  43a837:	mov    al,0x3
  43a839:	xchg   esi,eax
  43a83a:	dec    DWORD PTR [ebx-0x67]
  43a83d:	iret   
  43a83e:	(bad)  
  43a83f:	add    BYTE PTR es:[eax],al
  43a842:	or     BYTE PTR [ecx-0x6affd09d],bl
  43a848:	ins    BYTE PTR es:[edi],dx
  43a849:	adc    eax,0xc6ba00b
  43a84e:	repnz push es
  43a850:	stc    
  43a851:	mov    edi,0x1766c4a1
  43a856:	std    
  43a857:	lds    ebp,FWORD PTR [ebx+0xe]
  43a85a:	push   cs
  43a85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a85c:	jmp    FWORD PTR [ebx]
  43a85e:	cwde   
  43a85f:	les    esp,FWORD PTR [esi-0x1]
  43a862:	cmp    bh,BYTE PTR [ecx-0x3edd1e9e]
  43a868:	data16 int 0x3d
  43a86b:	mov    dl,0xff
  43a86d:	lea    ebx,[esi+0xcc472b7]
  43a873:	nop
  43a874:	dec    edi
  43a875:	int3   
  43a876:	or     al,0xa1
  43a878:	push   0x69a835bb
  43a87d:	retf   0xc63d
  43a880:	push   0x629300b4
  43a885:	fwait
  43a886:	sahf   
  43a887:	mov    ds:0x9103abfc,al
  43a88c:	bound  ebp,QWORD PTR [edi-0x5b9d650f]
  43a892:	push   ss
  43a893:	mov    dl,0xff
  43a895:	retf   
  43a896:	pushf  
  43a897:	shl    DWORD PTR [edx+0x75],0xe0
  43a89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a89c:	jae    0x43a81e
  43a89e:	adc    BYTE PTR [esp+ecx*2+0x62922f70],ah
  43a8a5:	push   esp
  43a8a6:	add    BYTE PTR [eax],al
  43a8a8:	pusha  
  43a8a9:	pushf  
  43a8aa:	popa   
  43a8ab:	dec    esi
  43a8ac:	mov    eax,ds:0x3c2dff37
  43a8b1:	xchg   edx,eax
  43a8b2:	inc    ebx
  43a8b3:	pop    ebx
  43a8b4:	dec    eax
  43a8b5:	xchg   esp,eax
  43a8b6:	bound  eax,QWORD PTR [eax]
  43a8b8:	nop
  43a8b9:	imul   esp,DWORD PTR [di-0x6d],0xb30265fe
  43a8c1:	arpl   WORD PTR [ebp+0x53],bp
  43a8c4:	lea    esi,[ecx+0x6d]
  43a8c7:	gs test eax,0x95665e42
  43a8cd:	jae    0x43a934
  43a8cf:	je     0x43a852
  43a8d1:	aaa    
  43a8d2:	inc    ebp
  43a8d3:	popa   
  43a8d4:	cmp    ah,BYTE PTR [ebp+0x6e]
  43a8d7:	popa   
  43a8d8:	mov    ds:0x2dfff963,eax
  43a8dd:	add    al,0x3f
  43a8df:	and    BYTE PTR gs:[esi],bh
  43a8e2:	push   0x5a619d67
  43a8e7:	ins    BYTE PTR es:[edi],dx
  43a8e8:	inc    eax
  43a8e9:	je     0x43a94d
  43a8eb:	jbe    0x43a8ce
  43a8ed:	jo     0x43a8e8
  43a8ef:	inc    DWORD PTR [esi+0x4]
  43a8f2:	aas    
  43a8f3:	rcl    BYTE PTR gs:[ecx+0x6b],1
  43a8f7:	outs   dx,DWORD PTR ds:[esi]
  43a8f8:	out    0x62,eax
  43a8fa:	ins    BYTE PTR es:[edi],dx
  43a8fb:	jae    0x43a90d
  43a8fd:	push   edi
  43a8fe:	data16 gs daa 
  43a901:	add    bh,BYTE PTR [edx]
  43a903:	add    eax,0x726d7118
  43a908:	daa    
  43a909:	pop    ebx
  43a90a:	imul   edx,DWORD PTR [edi+0x0],0xc001b400
  43a911:	add    dh,bl
  43a913:	pop    ebp
  43a914:	push   0x465e2562
  43a919:	or     DWORD PTR gs:[ebp+0x6b],ebx
  43a91d:	jns    0x43a926
  43a91f:	jbe    0x43a97b
  43a921:	je     0x43a944
  43a923:	jo     0x43a963
  43a925:	js     0x43a8ab
  43a927:	add    DWORD PTR [esi+0x6d65c302],edx
  43a92d:	push   ebp
  43a92e:	out    0x65,eax
  43a930:	imul   eax,DWORD PTR [ebp+ebx*4-0x4a],0xffffff99
  43a935:	pop    esi
  43a936:	lock (bad) 
  43a938:	(bad)  
  43a939:	push   edx
  43a93a:	in     al,0xcf
  43a93c:	pushf  
  43a93d:	imul   eax,DWORD PTR [edx],0xf8609ccf
  43a943:	sbb    edi,ebp
  43a945:	leave  
  43a946:	pushf  
  43a947:	fcomp  QWORD PTR [eax-0x710d268d]
  43a94d:	fs jecxz 0x43a939
  43a950:	cwde   
  43a951:	(bad)  
  43a952:	out    dx,al
  43a953:	jmp    0x43a8f1
  43a955:	pop    esp
  43a956:	rcr    dh,0x9b
  43a959:	push   eax
  43a95a:	popf   
  43a95b:	mov    ah,0xfd
  43a95d:	inc    eax
  43a95e:	ror    BYTE PTR [edi],0xab
  43a961:	push   0x62a206b1
  43a966:	fs add eax,0x2e8f689b
  43a96c:	sahf   
  43a96d:	jae    0x43a9e3
  43a96f:	xor    al,0xa3
  43a971:	push   eax
  43a972:	add    BYTE PTR [eax],al
  43a974:	popf   
  43a975:	add    BYTE PTR [edi*1+0x739e3e6f],0x78
  43a97d:	imul   ebx,DWORD PTR [edx-0x65b08596],0x9a497553
  43a987:	pop    esi
  43a988:	inc    ecx
  43a989:	sbb    edi,ebp
  43a98b:	xchg   ecx,eax
  43a98c:	sahf   
  43a98d:	dec    ebx
  43a98e:	(bad)
  43a992:	nop
  43a993:	ins    BYTE PTR es:[edi],dx
  43a994:	mov    gs,WORD PTR [ecx]
  43a996:	mov    ebx,0x89682f66
  43a99b:	push   eax
  43a99c:	popf   
  43a99d:	mov    ds:0x742f4ffe,eax
  43a9a2:	mov    al,ds:0xcf882e62
  43a9a7:	sub    eax,0x73957eeb
  43a9ac:	jmp    0x2201:0x4703e702
  43a9b3:	test   al,0xf5
  43a9b5:	mov    al,ds:0x93e6a847
  43a9ba:	inc    ebp
  43a9bb:	test   eax,0x1ac0472
  43a9c0:	fcom   QWORD PTR [esi-0x693c5db7]
  43a9c6:	sbb    esp,DWORD PTR [esi-0x56ba6c3a]
  43a9cc:	push   edx
  43a9cd:	add    al,0xf6
  43a9cf:	(bad)  
  43a9d0:	fcomp  DWORD PTR [ebp-0x624870eb]
  43a9d6:	cmp    ch,BYTE PTR [eax+eax*1+0x79dc800]
  43a9dd:	mov    al,ds:0x3680432
  43a9e2:	push   0xaea30390
  43a9e7:	popf   
  43a9e8:	sub    ch,BYTE PTR [ebx-0x6ffa6278]
  43a9ee:	test   DWORD PTR [eax+0x40aacdf],edx
  43a9f4:	dec    ebx
  43a9f5:	jmp    FWORD PTR [ecx+ebx*4-0x2c]
  43a9f9:	(bad)  
  43a9fa:	outs   dx,DWORD PTR ds:[esi]
  43a9fb:	mov    eax,ds:0x9d80bdba
  43aa00:	retf   
  43aa01:	add    eax,DWORD PTR [edx]
  43aa03:	call   DWORD PTR [eax-0x44718f56]
  43aa09:	mov    ds:0xa7bac146,al
  43aa0e:	inc    ebp
  43aa0f:	lahf   
  43aa10:	out    0x3,al
  43aa12:	enter  0xb4ff,0x9e
  43aa16:	aaa    
  43aa17:	xchg   ebx,eax
  43aa18:	cwde   
  43aa19:	sahf   
  43aa1a:	pop    esi
  43aa1b:	cdq    
  43aa1c:	xchg   esp,eax
  43aa1d:	sahf   
  43aa1e:	push   ecx
  43aa1f:	mov    ss,WORD PTR [ecx-0x1954cc6f]
  43aa25:	add    esp,DWORD PTR [esi]
  43aa27:	(bad)  
  43aa28:	jmp    DWORD PTR [ebp-0x63965fd2]
  43aa2e:	and    ecx,DWORD PTR [edi+0x3466162]
  43aa34:	stc    
  43aa35:	nop
  43aa36:	fwait
  43aa37:	shl    DWORD PTR [edx+0x5d],0x37
  43aa3b:	call   0xa03c:0x546b
  43aa42:	dec    ecx
  43aa43:	dec    eax
  43aa44:	cmp    al,0xa0
  43aa46:	inc    ecx
  43aa47:	dec    esi
  43aa48:	or     esi,DWORD PTR [ecx-0x67cbba98]
  43aa4e:	bound  ebx,QWORD PTR [esi+edi*8]
  43aa51:	(bad)
  43aa55:	call   0x9dff:0xb2250f66
  43aa5c:	mov    ds:0xf82b6cbb,eax
  43aa61:	sahf   
  43aa62:	dec    ebp
  43aa63:	or     al,0x0
  43aa65:	lahf   
  43aa66:	dec    edi
  43aa67:	cmc    
  43aa68:	or     BYTE PTR [ebx],al
  43aa6a:	stc    
  43aa6b:	jge    0x43aa12
  43aa6d:	mov    cl,0x53
  43aa6f:	sbb    ah,dh
  43aa71:	lahf   
  43aa72:	jae    0x43aa1c
  43aa74:	inc    ebx
  43aa75:	(bad)  
  43aa76:	data16 xlat BYTE PTR ds:[ebx]
  43aa78:	xor    eax,0x13c768c6
  43aa7d:	call   0xba6c:0xa02bc46b
  43aa84:	or     DWORD PTR [edx+0x33ab069],ebx
  43aa8a:	stc    
  43aa8b:	mov    ds:0xa449b4e5,al
  43aa90:	adc    dl,dh
  43aa92:	sub    eax,0x6b9702d7
  43aa97:	jmp    0xac43ba3a
  43aa9c:	es pushf 
  43aa9e:	jae    0x43aa56
  43aaa0:	adc    DWORD PTR [ecx+0x63],ebx
  43aaa6:	adc    ebp,DWORD PTR [eax+0x6c]
  43aaa9:	inc    ebp
  43aaaa:	sbb    al,0xff
  43aaac:	and    al,BYTE PTR [eax]
  43aaae:	inc    edi
  43aaaf:	sahf   
  43aab0:	pop    ecx
  43aab1:	jb     0x43aae3
  43aab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aab4:	outs   dx,DWORD PTR ds:[esi]
  43aab5:	gs out 0xc7,al
  43aab8:	clc    
  43aab9:	jmp    edx
  43aabb:	pop    es
  43aabc:	aas    
  43aabd:	fdivr  DWORD PTR gs:[ecx-0x54378c8f]
  43aac4:	gs dec ebp
  43aac6:	fstp   DWORD PTR [edx-0x66289696]
  43aacc:	clc    
  43aacd:	(bad)  
  43aace:	jg     0x43aad8
  43aad0:	dec    edx
  43aad1:	fistp  DWORD PTR gs:[edi-0x67668b95]
  43aad8:	cmp    ebp,DWORD PTR [ebp+edx*4-0x67]
  43aadc:	imul   eax,DWORD PTR [ecx+0x44],0x6
  43aae0:	pop    DWORD PTR [eax]
  43aae2:	js     0x43aa8f
  43aae4:	pop    esi
  43aae5:	inc    esi
  43aae6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43aae8:	gs test BYTE PTR gs:[eax+0x6bb6367],bl
  43aaf0:	push   ebx
  43aaf1:	add    DWORD PTR [ebx-0x26b29355],edi
  43aaf7:	cwde   
  43aaf8:	imul   esp,DWORD PTR [ecx-0x25],0xffffffaa
  43aafc:	dec    eax
  43aafd:	outs   dx,DWORD PTR ds:[esi]
  43aafe:	xlat   BYTE PTR ds:[ebx]
  43aaff:	add    eax,0xab38009c
  43ab04:	pop    esi
  43ab05:	push   edi
  43ab06:	int    0xa3
  43ab08:	pop    esp
  43ab09:	outs   dx,DWORD PTR ds:[esi]
  43ab0a:	add    BYTE PTR [eax],al
  43ab0c:	sub    esi,DWORD PTR [esi-0x43189096]
  43ab12:	clc    
  43ab13:	jmp    edx
  43ab15:	add    eax,0xa230613b
  43ab1a:	dec    edi
  43ab1b:	imul   edx,DWORD PTR [edx],0x9d7767aa
  43ab21:	mov    ebx,0xb83e6892
  43ab26:	cld    
  43ab27:	sbb    bl,BYTE PTR [ebp+0x316ba3ac]
  43ab2d:	cwde   
  43ab2e:	fwait
  43ab2f:	imul   eax,DWORD PTR [ecx],0xf4f9589
  43ab35:	and    DWORD PTR [edx+0x2399d3e],0x9548f84e
  43ab3f:	ins    BYTE PTR es:[edi],dx
  43ab40:	icebp  
  43ab41:	dec    esi
  43ab42:	xchg   edx,eax
  43ab43:	cmp    al,0x1
  43ab45:	dec    ebx
  43ab46:	xchg   ebx,eax
  43ab47:	ins    BYTE PTR es:[edi],dx
  43ab48:	shr    bl,cl
  43ab4a:	cld    
  43ab4b:	arpl   WORD PTR [edi-0x3f945ee3],bx
  43ab51:	dec    edx
  43ab52:	xchg   ebx,eax
  43ab53:	(bad)  
  43ab54:	fimul  WORD PTR [edx-0x6c]
  43ab57:	jae    0x43ab29
  43ab59:	sbb    eax,0x8342ffa1
  43ab5e:	add    eax,DWORD PTR [eax+eax*8+0x11]
  43ab62:	mov    ecx,0x9c2ce443
  43ab67:	mov    cx,0xb40f
  43ab6b:	ins    DWORD PTR es:[edi],dx
  43ab6c:	mov    dl,0xc
  43ab6e:	mov    ebp,0x1a0000ff
  43ab73:	pop    edi
  43ab74:	add    al,0x44
  43ab76:	js     0x43ab81
  43ab78:	enter  0x826b,0xbb
  43ab7c:	xchg   edx,eax
  43ab7d:	push   0xe7fcaa7e
  43ab82:	lahf   
  43ab83:	mov    esp,0xcc696697
  43ab88:	xchg   esp,eax
  43ab89:	inc    ebx
  43ab8a:	cmp    BYTE PTR [ebx+ebx*4-0x3448d8d],0x96
  43ab92:	popf   
  43ab93:	scas   eax,DWORD PTR es:[edi]
  43ab94:	mov    eax,ds:0xb5a76061
  43ab99:	cmp    al,0x35
  43ab9b:	add    dl,BYTE PTR [eax-0x6aadc161]
  43aba1:	mov    al,ds:0x3e75959
  43aba6:	jge    0x43abab
  43aba8:	mov    ds:0x7c452ea6,al
  43abad:	xchg   ebp,eax
  43abae:	xor    DWORD PTR [ecx+0x75],esi
  43abb1:	mov    bl,0x5
  43abb3:	je     0x43ab9c
  43abb5:	add    ebp,DWORD PTR [eax]
  43abb7:	add    esp,DWORD PTR [ebx+0x5057fca6]
  43abbd:	mov    ds:0xb4526ffe,al
  43abc2:	or     BYTE PTR [eax+0x46],dh
  43abc5:	ret    
  43abc6:	jb     0x43abc8
  43abc8:	inc    esp
  43abc9:	push   es
  43abca:	(bad)  [ebp+0x53]
  43abcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43abce:	ret    
  43abcf:	jae    0x43ac15
  43abd1:	enter  0x299,0xf5
  43abd5:	add    eax,0x65ed0000
  43abda:	inc    esp
  43abdb:	popf   
  43abdc:	xlat   BYTE PTR ds:[ebx]
  43abdd:	gs push ss
  43abdf:	xchg   ebp,eax
  43abe0:	jecxz  0x43ac49
  43abe2:	add    al,0xc3
  43abe4:	cmp    al,BYTE PTR [eax]
  43abe6:	lds    eax,FWORD PTR [edx]
  43abe8:	fsub   QWORD PTR [ebp+0x13]
  43abeb:	enter  0x4569,0xff
  43abef:	add    esi,DWORD PTR [eax+0x4]
  43abf2:	pop    ss
  43abf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43abf4:	jg     0x43ac61
  43abf6:	and    al,0xa7
  43abf8:	xor    DWORD PTR [ebx+0x8],0xe7577fa9
  43abff:	add    ebp,DWORD PTR [edi+0x6ea6a201]
  43ac05:	inc    ebx
  43ac06:	ret    
  43ac07:	call   0x6678:0xa2ba6482
  43ac0e:	stos   DWORD PTR es:[edi],eax
  43ac0f:	mov    ds:0x3e7616e,al
  43ac14:	and    eax,DWORD PTR ds:0x73fb9a00
  43ac1a:	cmp    eax,0x696f30b4
  43ac1f:	fwait
  43ac20:	push   cs
  43ac21:	imul   ebp,DWORD PTR [ebp-0x17],0xffffff9e
  43ac25:	dec    ebx
  43ac26:	(bad)  
  43ac27:	mov    edx,0x9a6762fb
  43ac2c:	adc    ah,BYTE PTR [ebp+0x6e]
  43ac2f:	stos   BYTE PTR es:[edi],al
  43ac30:	add    ah,BYTE PTR [ecx+0x6d]
  43ac33:	jp     0x43ac98
  43ac35:	ja     0x43ac88
  43ac37:	jmp    0x9541aada
  43ac3c:	add    BYTE PTR [eax],al
  43ac3e:	xor    BYTE PTR [eax+0x6a],ah
  43ac41:	pop    edx
  43ac42:	cmp    eax,0x5c447460
  43ac47:	fs ins DWORD PTR es:[edi],dx
  43ac49:	pop    edx
  43ac4a:	cmp    BYTE PTR [edx+0x63],ah
  43ac4d:	jmp    0x2e42b6f0
  43ac52:	xor    al,0x73
  43ac54:	cmp    eax,0x73733148
  43ac59:	cmp    eax,DWORD PTR [edi+edi*8]
  43ac5c:	clc    
  43ac5d:	or     BYTE PTR [eax+0x551d6341],ah
  43ac63:	add    BYTE PTR ds:[esi-0x60],ah
  43ac67:	inc    ecx
  43ac68:	arpl   WORD PTR ds:0x8646ef4,bx
  43ac6e:	add    eax,0xfe0c4e64
  43ac73:	jb     0x43ac75
  43ac75:	out    dx,eax
  43ac76:	sahf   
  43ac77:	inc    eax
  43ac78:	arpl   WORD PTR [esi],cx
  43ac7a:	xor    BYTE PTR [ecx+0x50],ch
  43ac7d:	or     BYTE PTR [eax],ch
  43ac7f:	imul   esi,DWORD PTR [ecx+ebp*8-0x62],0xeadfe28
  43ac87:	fs push 0xffffffa0
  43ac8a:	adc    BYTE PTR [edi+0x73],ch
  43ac8d:	aad    0xe2
  43ac8f:	arpl   WORD PTR [ebp+0x0],bp
  43ac92:	iret   
  43ac93:	xchg   esi,eax
  43ac94:	addr16 jo 0x43ac5b
  43ac97:	add    cl,BYTE PTR [esi+0x5eaa0000]
  43ac9d:	inc    esi
  43ac9e:	push   es
  43ac9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aca0:	gs add BYTE PTR gs:[eax],al
  43aca4:	add    al,0x91
  43aca6:	arpl   WORD PTR [di],ax
  43aca9:	add    ecx,DWORD PTR [ebp+0x5eaa0000]
  43acaf:	inc    esp
  43acb0:	sub    BYTE PTR [eax-0x5bf48db8],ch
  43acb6:	dec    edi
  43acb7:	add    BYTE PTR [ecx+eax*1],al
  43acba:	dec    ebx
  43acbb:	gs adc cl,al
  43acbe:	pop    ecx
  43acbf:	jo     0x43acd1
  43acc1:	fwait
  43acc2:	push   0x65
  43acc4:	je     0x43acc8
  43acc6:	mov    al,BYTE PTR [ecx]
  43acc8:	ret    
  43acc9:	stos   DWORD PTR es:[edi],eax
  43acca:	ins    BYTE PTR es:[edi],dx
  43accb:	push   edi
  43accc:	fstp   QWORD PTR [esp+ebx*2+0x3bcad36f]
  43acd3:	add    BYTE PTR [eax-0x1c9ab600],ch
  43acd9:	lahf   
  43acda:	imul   esi,DWORD PTR [ecx+eiz*8-0x70],0x3b
  43acdf:	ins    BYTE PTR es:[edi],dx
  43ace0:	aad    0x91
  43ace2:	imul   eax,DWORD PTR [ebp+0x7c],0xffffffc7
  43ace6:	clc    
  43ace7:	(bad)  
  43ace8:	jns    0x43acf1
  43acea:	aas    
  43aceb:	gs nop
  43aced:	ret    
  43acee:	pop    ebp
  43acef:	jae    0x43ac78
  43acf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43acf2:	pop    edi
  43acf3:	add    DWORD PTR gs:[esi],0xffffff88
  43acf7:	add    ebx,eax
  43acf9:	stos   DWORD PTR es:[edi],eax
  43acfa:	ins    BYTE PTR es:[edi],dx
  43acfb:	push   ebp
  43acfc:	adc    al,0xa6
  43acfe:	pop    ecx
  43acff:	je     0x43aca2
  43ad01:	mov    al,0x5f
  43ad03:	outs   dx,BYTE PTR ds:[esi]
  43ad04:	hlt    
  43ad05:	add    DWORD PTR [ecx+0x1],edx
  43ad08:	add    BYTE PTR [eax],al
  43ad0a:	inc    ebx
  43ad0b:	stos   DWORD PTR es:[edi],eax
  43ad0c:	ins    BYTE PTR es:[edi],dx
  43ad0d:	dec    ebp
  43ad0e:	popf   
  43ad0f:	into   
  43ad10:	lea    ebp,[esp+edi*2-0x3c]
  43ad14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad15:	ds popf 
  43ad17:	daa    
  43ad18:	std    
  43ad19:	inc    edx
  43ad1a:	dec    ebx
  43ad1b:	(bad)  
  43ad1c:	lods   al,BYTE PTR ds:[esi]
  43ad1d:	pop    esi
  43ad1e:	inc    esp
  43ad1f:	lds    edx,FWORD PTR [eax+0x45dcaff]
  43ad25:	inc    ecx
  43ad26:	cmp    BYTE PTR [edi-0x78b4994f],bl
  43ad2c:	cdq    
  43ad2d:	jo     0x43accc
  43ad2f:	nop
  43ad30:	dec    BYTE PTR [eax+eax*2+0x7d]
  43ad34:	mov    eax,ds:0x8e78384a
  43ad39:	pop    esi
  43ad3a:	add    al,BYTE PTR [edi-0x70ff9950]
  43ad40:	cdq    
  43ad41:	jb     0x43ad54
  43ad43:	xchg   ebp,eax
  43ad44:	cld    
  43ad45:	ret    
  43ad46:	lahf   
  43ad47:	cmp    BYTE PTR [ecx-0x65ad2d8d],ah
  43ad4d:	arpl   WORD PTR [edx],ax
  43ad4f:	pop    ebp
  43ad50:	shr    BYTE PTR [eax-0x5],0x44
  43ad54:	mov    bl,0xff
  43ad56:	bound  ebx,QWORD PTR [ebp-0x3]
  43ad59:	inc    eax
  43ad5a:	shl    BYTE PTR [edi],0xb3
  43ad5d:	retw   
  43ad5f:	dec    edi
  43ad60:	fwait
  43ad61:	jo     0x43ad3c
  43ad63:	cmp    al,0x9a
  43ad65:	pusha  
  43ad66:	jmp    0x9534:0x9e2bfceb
  43ad6d:	imul   eax,DWORD PTR [eax],0x9304b900
  43ad73:	inc    ecx
  43ad74:	scas   eax,DWORD PTR es:[edi]
  43ad75:	cld    
  43ad76:	cdq    
  43ad77:	dec    edi
  43ad78:	mov    dl,0x12
  43ad7a:	call   0x824b:0xfc8c9d73
  43ad81:	or     ch,BYTE PTR [eax-0x5cf587ba]
  43ad87:	bound  ebp,QWORD PTR [edx+0x2]
  43ad8a:	out    0x3,eax
  43ad8c:	push   ds
  43ad8d:	add    esp,DWORD PTR [edx-0x3da9915a]
  43ad93:	xchg   ebx,eax
  43ad94:	dec    ebp
  43ad95:	imul   edi,DWORD PTR [ecx-0x188a8a59],0x3
  43ad9c:	xchg   ebp,eax
  43ad9d:	add    ah,BYTE PTR [esi-0x648f8c65]
  43ada3:	pushf  
  43ada4:	push   ebp
  43ada5:	addr16 mov esp,0x9ffcc2b4
  43adab:	add    bl,BYTE PTR [edi+eiz*2-0x6d]
  43adaf:	mov    al,0x3a
  43adb1:	sbb    DWORD PTR [bx+0x6b4d],0x79
  43adb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43adb8:	xor    eax,0x4103e775
  43adbd:	add    ah,BYTE PTR [edx-0x7fabf15a]
  43adc3:	popf   
  43adc4:	(bad)  
  43adc5:	imul   esi,DWORD PTR [edx-0x49],0xfffffffa
  43adc9:	jo     0x43ae17
  43adcb:	mov    ds:0x9d5552fe,eax
  43add0:	shl    DWORD PTR [ebp+0x56],1
  43add3:	xchg   ecx,eax
  43add4:	add    BYTE PTR [eax],al
  43add6:	jecxz  0x43ae3e
  43add8:	out    0x3,eax
  43adda:	dec    eax
  43addb:	add    ebp,DWORD PTR [esi+ebx*4]
  43adde:	mov    esi,0xcf9e444d
  43ade3:	add    dh,BYTE PTR [ebx]
  43ade5:	add    bl,al
  43ade7:	cmp    DWORD PTR gs:[eax-0x6ee99a29],ebp
  43adee:	(bad)  [ebx+0x4]
  43adf1:	mov    ch,0x32
  43adf3:	cld    
  43adf4:	pop    ebp
  43adf5:	add    bl,ah
  43adf7:	adc    esi,DWORD PTR gs:[edi-0x430a9a4f]
  43adfe:	js     0x43ae68
  43ae00:	add    al,0xa1
  43ae02:	mov    cs,WORD PTR [ecx+0x0]
  43ae05:	pop    es
  43ae06:	inc    ebx
  43ae07:	imul   ebp,DWORD PTR [esi-0x4],0x3f
  43ae0b:	jo     0x43ae74
  43ae0d:	(bad)  
  43ae0e:	sbb    BYTE PTR [ebx+0x0],dl
  43ae11:	xchg   ebx,eax
  43ae12:	lahf   
  43ae13:	dec    edx
  43ae14:	lds    eax,FWORD PTR [bx]
  43ae17:	jo     0x43ae7c
  43ae19:	pushf  
  43ae1a:	cmp    ebp,DWORD PTR [edx+0x73]
  43ae1d:	mov    al,0x32
  43ae1f:	popa   
  43ae20:	imul   ebp,ecx,0xffffff9e
  43ae23:	xor    edi,esi
  43ae25:	cwde   
  43ae26:	sub    DWORD PTR [edi+0x74],ebp
  43ae29:	xchg   ebp,eax
  43ae2a:	outs   dx,BYTE PTR es:[esi]
  43ae2c:	arpl   WORD PTR [eax-0x659cb6fe],cx
  43ae32:	or     eax,0xf18c615d
  43ae37:	sti    
  43ae38:	clc    
  43ae39:	mov    eax,0x419f0000
  43ae3e:	arpl   WORD PTR [ebp+0x5b],di
  43ae41:	pusha  
  43ae42:	push   0x74
  43ae44:	push   edi
  43ae45:	outs   dx,DWORD PTR ds:[esi]
  43ae46:	arpl   WORD PTR [ebp+ebx*2+0x2a7f736a],ax
  43ae4d:	sti    
  43ae4e:	clc    
  43ae4f:	aas    
  43ae50:	mov    al,ds:0x34556341
  43ae55:	pusha  
  43ae56:	push   0x5c
  43ae58:	xor    ch,BYTE PTR [edi+0x5f]
  43ae5b:	push   ebp
  43ae5c:	cmp    al,0xfb
  43ae5e:	clc    
  43ae5f:	(bad)  [ecx+0x5a356341]
  43ae65:	addr16 pop edi
  43ae67:	cmp    dh,BYTE PTR [edx]
  43ae69:	dec    ecx
  43ae6a:	pop    edi
  43ae6b:	cmp    al,0xfc
  43ae6d:	push   ecx
  43ae6e:	add    BYTE PTR [ebp+0x1a774da3],dl
  43ae74:	or     eax,0x396b60
  43ae79:	ins    DWORD PTR es:[edi],dx
  43ae7a:	pop    edi
  43ae7b:	cld    
  43ae7c:	std    
  43ae7d:	outs   dx,BYTE PTR ds:[esi]
  43ae7e:	arpl   WORD PTR [eax],ax
  43ae80:	push   ss
  43ae81:	xchg   esp,eax
  43ae82:	inc    ecx
  43ae83:	outs   dx,BYTE PTR ds:[esi]
  43ae84:	call   0x5404:0x8b004f97
  43ae8b:	jb     0x43ae22
  43ae8d:	mov    ds:0x8ed35063,eax
  43ae92:	ins    DWORD PTR es:[edi],dx
  43ae93:	jo     0x43aed6
  43ae95:	mov    ds:0x87397566,al
  43ae9a:	clc    
  43ae9b:	jmp    FWORD PTR [ecx]
  43ae9d:	push   es
  43ae9e:	aas    
  43ae9f:	add    BYTE PTR gs:[eax],al
  43aea2:	sbb    BYTE PTR [edx-0x41f691a3],bh
  43aea8:	ins    BYTE PTR es:[edi],dx
  43aea9:	gs loope 0x43ae60
  43aeac:	pop    ebp
  43aead:	arpl   WORD PTR [eax],cx
  43aeaf:	inc    DWORD PTR [edx+0x1]
  43aeb2:	or     esp,DWORD PTR [edx-0x66e6b294]
  43aeb8:	ins    DWORD PTR es:[edi],dx
  43aeb9:	add    BYTE PTR [esi+0x22654504],bh
  43aebf:	xchg   edx,eax
  43aec0:	inc    ecx
  43aec1:	je     0x43aeec
  43aec3:	fwait
  43aec4:	ds jb  0x43aeea
  43aec7:	fwait
  43aec8:	dec    eax
  43aec9:	outs   dx,DWORD PTR ds:[esi]
  43aeca:	sbb    eax,0x5c006c9c
  43aecf:	add    BYTE PTR [edi+0x70],al
  43aed2:	jmp    0xd7a8eb73
  43aed7:	cdq    
  43aed8:	ins    BYTE PTR es:[edi],dx
  43aed9:	outs   dx,DWORD PTR ds:[esi]
  43aeda:	les    esi,FWORD PTR [ebp-0x310008]
  43aee0:	ds gs cwde 
  43aee3:	mov    cl,0x6d
  43aee5:	bound  eax,QWORD PTR [ecx+0x347566a3]
  43aeeb:	push   es
  43aeec:	mov    es,WORD PTR [edx]
  43aeee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aeef:	mov    ds:0x87a94b6c,eax
  43aef4:	pop    edx
  43aef5:	outs   dx,DWORD PTR ds:[esi]
  43aef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aef7:	nop
  43aef8:	pop    esp
  43aef9:	push   ebx
  43aefa:	popf   
  43aefb:	pop    ss
  43aefc:	mov    ds:0xfcebb873,eax
  43af01:	dec    ebp
  43af02:	pushf  
  43af03:	sub    BYTE PTR [edi+0x60000073],bl
  43af09:	(bad)  
  43af0a:	xchg   ebp,eax
  43af0b:	jb     0x43af61
  43af0d:	neg    DWORD PTR [edi+0x41f546a]
  43af13:	jle    0x43aeb1
  43af15:	test   al,0x9f
  43af17:	jae    0x43af62
  43af19:	rcl    DWORD PTR [edx-0x4738839e],cl
  43af1f:	bound  ebp,QWORD PTR [esi-0x3c]
  43af22:	mov    BYTE PTR [eax+0x4d],ch
  43af25:	jmp    0x43af23
  43af27:	pop    esp
  43af28:	lahf   
  43af29:	popf   
  43af2a:	lahf   
  43af2b:	pusha  
  43af2c:	xor    al,0xbc
  43af2e:	mov    BYTE PTR [edx+0x4f],ah
  43af31:	nop
  43af32:	fwait
  43af33:	imul   eax,DWORD PTR [ecx-0x70],0x9c384a8d
  43af3a:	xchg   ecx,eax
  43af3b:	pop    esi
  43af3c:	inc    edx
  43af3d:	xchg   BYTE PTR [ebp+0x42fa2ff],ch
  43af43:	inc    edi
  43af44:	push   cs
  43af45:	sahf   
  43af46:	lahf   
  43af47:	pop    esp
  43af48:	or     DWORD PTR [edi+0x73116f97],ebx
  43af4e:	std    
  43af4f:	xor    eax,0x66929b9f
  43af54:	or     ebx,DWORD PTR [eax-0x51]
  43af57:	add    ax,WORD PTR [eax-0x69]
  43af5b:	jo     0x43aefa
  43af5d:	fadd   QWORD PTR [ebx]
  43af5f:	inc    ebx
  43af60:	in     al,dx
  43af61:	dec    esi
  43af62:	popf   
  43af63:	imul   ebp,edi,0x46
  43af66:	mov    ds:0xfd769d73,eax
  43af6b:	inc    esi
  43af6c:	add    BYTE PTR [eax],al
  43af6e:	mov    ebx,0xce6d9937
  43af73:	mov    ds:0xc02cf73,eax
  43af79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43af7a:	scas   al,BYTE PTR es:[edi]
  43af7b:	add    ah,BYTE PTR [esi+0x874e104]
  43af81:	xchg   ecx,eax
  43af82:	fistp  WORD PTR [esi+0x2]
  43af85:	lahf   
  43af86:	sbb    bh,cl
  43af88:	pop    edx
  43af89:	add    ebx,DWORD PTR [edi+ebx*2-0xd]
  43af8d:	mov    al,0x83
  43af8f:	push   0x4b8d990b
  43af94:	stc    
  43af95:	mov    eax,ds:0x6190285
  43af9a:	dec    ebp
  43af9b:	imul   edx,esi,0xd65f578f
  43afa1:	xchg   esp,eax
  43afa2:	inc    ebx
  43afa3:	popa   
  43afa4:	les    esi,FWORD PTR [eax+0x438f8da]
  43afaa:	pop    edi
  43afab:	imul   ecx,ebx,0xffffff97
  43afae:	pop    eax
  43afaf:	pop    edi
  43afb0:	(bad)  
  43afb1:	pop    edx
  43afb3:	clc    
  43afb4:	sti    
  43afb5:	add    eax,0x998c7264
  43afba:	dec    ebp
  43afbb:	imul   ecx,DWORD PTR [ecx-0x498eca61],0xffffff8f
  43afc2:	inc    ebx
  43afc3:	outs   dx,BYTE PTR ds:[esi]
  43afc4:	sbb    BYTE PTR [eax+0x3e75004],0x4b
  43afcb:	add    eax,0x4f0e9e96
  43afd0:	jg     0x43af67
  43afd2:	add    BYTE PTR [eax],al
  43afd4:	jmp    DWORD PTR [ecx-0x7d]
  43afd7:	mov    edi,0x904e73ff
  43afdc:	add    eax,0xe303e773
  43afe1:	add    ah,BYTE PTR [esi]
  43afe3:	cwde   
  43afe4:	cmc    
  43afe5:	jae    0x43b02b
  43afe7:	sar    BYTE PTR [edi-0x3a6fb18d],0x72
  43afee:	out    0x3,eax
  43aff0:	mov    ch,0x1
  43aff2:	add    BYTE PTR [esi],ch
  43aff4:	and    dh,BYTE PTR [eax+edx*2+0x3b]
  43aff8:	adc    al,0x57
  43affa:	arpl   WORD PTR [edx],bx
  43affc:	or     BYTE PTR [ebx+0x67],dl
  43afff:	paddw  mm5,QWORD PTR [edx+0x71]
  43b003:	cmp    cl,BYTE PTR ds:0x34007459
  43b009:	push   0x0
  43b00b:	stc    
  43b00c:	sahf   
  43b00d:	xor    eax,0x743e046e
  43b012:	arpl   WORD PTR [esi],bx
  43b014:	es push 0x64
  43b017:	dec    BYTE PTR ds:0x22c87447
  43b01d:	popa   
  43b01e:	imul   ecx,edi,0xa7f8f82d
  43b024:	sahf   
  43b025:	xor    eax,0x6531be6c
  43b02a:	push   ecx
  43b02b:	shl    BYTE PTR [esp+eiz*2],1
  43b02e:	imul   esi,DWORD PTR [esi-0x42a08bef],0xe96a6b27
  43b038:	add    BYTE PTR [eax],al
  43b03a:	sahf   
  43b03b:	mov    al,ds:0x7413b9fd
  43b040:	push   eax
  43b041:	fwait
  43b042:	add    eax,0x99a6357
  43b047:	push   ebx
  43b048:	addr16 jg 0x43b085
  43b04b:	push   0x71
  43b04d:	call   0x6925:0x90745822
  43b054:	add    BYTE PTR [edi-0x7b91ca62],dl
  43b05a:	aas    
  43b05b:	jae    0x43b0c0
  43b05d:	sub    eax,0x5565663c
  43b062:	adc    ah,BYTE PTR [edi+0x51]
  43b065:	jmp    0x2a43dd08
  43b06a:	cmp    DWORD PTR [eax+0x6e],ebx
  43b06d:	add    BYTE PTR [eax-0x799a9071],cl
  43b073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b074:	clc    
  43b075:	push   DWORD PTR [ecx-0x3]
  43b078:	ds gs jo 0x43b036
  43b07c:	pop    ecx
  43b07d:	jae    0x43b00f
  43b07f:	mov    ch,0x66
  43b081:	jo     0x43b014
  43b083:	xchg   edx,eax
  43b084:	inc    ecx
  43b085:	outs   dx,BYTE PTR ds:[esi]
  43b086:	xchg   edx,eax
  43b087:	(bad)  
  43b088:	clc    
  43b089:	(bad)  
  43b08a:	call   0xa5abeb91
  43b08f:	xchg   esp,eax
  43b090:	dec    ebp
  43b091:	jo     0x43b097
  43b093:	mov    ds:0x2f4576a,al
  43b098:	sub    eax,DWORD PTR [ecx]
  43b09a:	ret    
  43b09b:	mov    eax,ds:0x496c
  43b0a0:	out    0x8f,eax
  43b0a2:	dec    cx
  43b0a4:	ficom  DWORD PTR [edi+eiz*2+0x43feb300]
  43b0ab:	jb     0x43b092
  43b0ad:	xchg   DWORD PTR [ecx+0x63],eax
  43b0b0:	jmp    0x43b03e
  43b0b2:	clc    
  43b0b3:	inc    DWORD PTR [edi+0x216f5404]
  43b0b9:	lea    esp,[ecx+0x63]
  43b0bc:	sti    
  43b0bd:	xchg   esi,eax
  43b0be:	pop    ebp
  43b0bf:	add    BYTE PTR [esi],al
  43b0c1:	(bad)  
  43b0c2:	ds adc BYTE PTR gs:[ebp+ebx*2+0x59901679],bh
  43b0cb:	jb     0x43b0ed
  43b0cd:	mov    cl,0x6c
  43b0cf:	popa   
  43b0d0:	adc    BYTE PTR [ebx+0x48dfff8],ah
  43b0d6:	inc    ebp
  43b0d7:	popa   
  43b0d8:	add    al,0xa5
  43b0da:	popa   
  43b0db:	outs   dx,BYTE PTR ds:[esi]
  43b0dc:	and    BYTE PTR [ebp-0x6834af91],cl
  43b0e2:	data16 je 0x43b0ac
  43b0e5:	(bad)  
  43b0e6:	rol    BYTE PTR [ecx],cl
  43b0e8:	popf   
  43b0e9:	and    cl,BYTE PTR [ebp-0x5fca3bb0]
  43b0ef:	push   0xc1fcebca
  43b0f4:	lahf   
  43b0f5:	sbb    BYTE PTR [edi-0x6dbd158d],bl
  43b0fb:	arpl   dx,cx
  43b0fd:	sub    al,0xb4
  43b0ff:	push   0x3fcebae
  43b104:	add    BYTE PTR [eax],al
  43b106:	pushf  
  43b107:	sbb    al,0x9f
  43b109:	jae    0x43b0e7
  43b10b:	std    
  43b10c:	pushf  
  43b10d:	bound  ecx,QWORD PTR [esi-0x62926ef1]
  43b113:	fild   DWORD PTR [ebx]
  43b115:	inc    ecx
  43b116:	sub    bh,0xbd
  43b119:	imul   edi,DWORD PTR [eax+edi*8-0x73],0x4b
  43b11e:	mov    dh,ch
  43b120:	cdq    
  43b121:	push   eax
  43b122:	popf   
  43b123:	mov    DWORD PTR [ebx],0xaccf8041
  43b129:	pop    esi
  43b12a:	outs   dx,DWORD PTR ds:[esi]
  43b12b:	(bad)  
  43b12c:	xchg   edx,eax
  43b12d:	jae    0x43b0cc
  43b12f:	addr16 add al,0x41
  43b132:	cmp    BYTE PTR [edi-0x40c49957],dh
  43b138:	xchg   ecx,eax
  43b139:	jo     0x43b1aa
  43b13b:	(bad)  
  43b13c:	popf   
  43b13d:	jae    0x43b0dc
  43b13f:	je     0x43b13e
  43b141:	inc    ebx
  43b142:	inc    esp
  43b143:	cwde   
  43b144:	mov    WORD PTR [esi+0x31],ds
  43b147:	mov    BYTE PTR [edx+ecx*2+0x5e8d9838],dl
  43b14e:	add    bh,BYTE PTR [edi-0x57]
  43b151:	call   DWORD PTR [edx+0xe4afedf]
  43b157:	jge    0x43b102
  43b159:	pop    esi
  43b15a:	hlt    
  43b15b:	ja     0x43b118
  43b15d:	push   0x6b8f96ef
  43b162:	jmp    0xf6d80169
  43b167:	pop    edi
  43b168:	sub    ah,BYTE PTR [edx+0x5ff80000]
  43b16e:	inc    esi
  43b16f:	nop
  43b170:	leave  
  43b171:	add    bl,bh
  43b173:	add    esi,esp
  43b175:	arpl   WORD PTR [edi],si
  43b177:	scas   al,BYTE PTR es:[edi]
  43b178:	ret    
  43b179:	jo     0x43b1ae
  43b17b:	(bad)  
  43b17c:	jecxz  0x43b1e4
  43b17e:	push   ds
  43b17f:	lahf   
  43b180:	mov    bl,0x4d
  43b182:	out    0x3,eax
  43b184:	into   
  43b185:	push   ecx
  43b186:	sub    al,0xb2
  43b188:	jns    0x43b1ba
  43b18a:	leave  
  43b18b:	lahf   
  43b18c:	mov    dh,0x66
  43b18e:	out    0x3,eax
  43b190:	sbb    al,0x3
  43b192:	and    BYTE PTR [ecx-0x67eca093],dl
  43b198:	popa   
  43b199:	or     cl,BYTE PTR fs:[ebp-0x5fffae8c]
  43b1a0:	cli    
  43b1a1:	hlt    
  43b1a2:	mov    al,0x2
  43b1a4:	pop    esp
  43b1a5:	pop    edi
  43b1a6:	(bad)  [edi-0x703d9b81]
  43b1ac:	jp     0x43b1ff
  43b1ae:	rcr    BYTE PTR [edi+0x3baf4da],0x90
  43b1b5:	ror    DWORD PTR gs:[ebp-0x4f4c8fc1],1
  43b1bc:	cmp    ebx,DWORD PTR [esi-0x65]
  43b1bf:	xchg   esp,eax
  43b1c0:	imul   ebp,DWORD PTR [esi-0x4b],0xb65d449a
  43b1c7:	call   0x1d9:0x3e74d3e
  43b1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b1cf:	xchg   ecx,eax
  43b1d0:	add    BYTE PTR [eax],al
  43b1d2:	adc    esi,DWORD PTR [ebx-0x6d]
  43b1d5:	mov    esp,0xa2af6eff
  43b1da:	stc    
  43b1db:	push   0xffffff97
  43b1dd:	mov    ds:0x840061f0,al
  43b1e2:	sahf   
  43b1e3:	mov    ds:0x6d0ca9ff,eax
  43b1e8:	jo     0x43b247
  43b1ea:	pop    esi
  43b1eb:	push   edi
  43b1ec:	outs   dx,DWORD PTR ds:[esi]
  43b1ed:	push   esp
  43b1ee:	push   es
  43b1ef:	data16 arpl WORD PTR [edx],bp
  43b1f2:	xor    BYTE PTR [edx+0x74],ch
  43b1f5:	inc    esp
  43b1f6:	and    DWORD PTR [eax+0x51],esi
  43b1f9:	jmp    0x2a436f9c
  43b1fe:	das    
  43b1ff:	ins    DWORD PTR es:[edi],dx
  43b200:	jo     0x43b23f
  43b202:	out    dx,eax
  43b203:	pusha  
  43b204:	ins    BYTE PTR es:[edi],dx
  43b205:	inc    esp
  43b206:	(bad)  
  43b207:	data16 arpl WORD PTR [edx],bp
  43b20a:	adc    BYTE PTR [edx+0x74],ch
  43b20d:	add    al,0x11
  43b20f:	jo     0x43b211
  43b211:	pop    edx
  43b212:	sahf   
  43b213:	xor    eax,0x7029106e
  43b218:	cmp    eax,0x74552bfb
  43b21d:	add    al,0x41
  43b21f:	push   ebp
  43b220:	ins    DWORD PTR es:[edi],dx
  43b221:	add    DWORD PTR [ecx+0xf29ffb0],esp
  43b227:	ins    DWORD PTR es:[edi],dx
  43b228:	jo     0x43b207
  43b22a:	sub    ah,BYTE PTR [ecx+0x6d]
  43b22d:	aad    0xc
  43b22f:	imul   esi,DWORD PTR [edi-0x5f],0xffffffff
  43b233:	pushw  0xe9
  43b237:	add    BYTE PTR [esi+0x2ca9ffca],bl
  43b23d:	ins    DWORD PTR es:[edi],dx
  43b23e:	jo     0x43b1f5
  43b240:	push   es
  43b241:	push   ebp
  43b242:	ins    DWORD PTR es:[edi],dx
  43b243:	sar    edx,0x54
  43b246:	je     0x43b210
  43b248:	sahf   
  43b249:	icebp  
  43b24a:	(bad)  
  43b24b:	mov    ch,0xe
  43b24d:	popa   
  43b24e:	push   0xffffffb9
  43b250:	or     al,0x6b
  43b252:	pop    ebp
  43b253:	mov    WORD PTR ds:0x357e5466,gs
  43b259:	pusha  
  43b25a:	push   0x0
  43b25c:	je     0x43b25d
  43b25e:	dec    esi
  43b25f:	add    DWORD PTR [ebx],edi
  43b261:	xchg   esp,eax
  43b262:	ins    BYTE PTR es:[edi],dx
  43b263:	push   ebx
  43b264:	sbb    eax,0x26754b93
  43b269:	shr    BYTE PTR [ebp+0x74],0xcc
  43b26d:	outs   dx,DWORD PTR ds:[esi]
  43b26e:	push   0x69
  43b270:	enter  0x75,0x0
  43b274:	jo     0x43b273
  43b276:	inc    esi
  43b277:	jo     0x43b252
  43b279:	jo     0x43b2cf
  43b27b:	push   0x64596986
  43b280:	test   al,0x6f
  43b282:	arpl   WORD PTR [ebp-0x1e],sp
  43b285:	(bad)  
  43b286:	push   edi
  43b287:	add    DWORD PTR [ebx+0x69],edi
  43b28a:	je     0x43b2df
  43b28c:	lea    ebp,[edx+0x4b]
  43b28f:	jne    0x43b227
  43b291:	cmp    eax,0x6f9c746d
  43b296:	push   0x69
  43b298:	test   al,0x75
  43b29a:	cmp    ebp,DWORD PTR [edi+0x0]
  43b29d:	add    BYTE PTR [ecx],cl
  43b29f:	jno    0x43b315
  43b2a1:	add    BYTE PTR [esi-0x79ac103],bh
  43b2a7:	dec    edx
  43b2a8:	imul   ebx,DWORD PTR [bx+di+0x4170],0x6e
  43b2ae:	fisubr DWORD PTR [edi+0x6a]
  43b2b1:	ins    DWORD PTR es:[edi],dx
  43b2b2:	aad    0x6a
  43b2b4:	popa   
  43b2b5:	outs   dx,DWORD PTR ds:[esi]
  43b2b6:	loop   0x43b2b6
  43b2b8:	jnp    0x43b2ba
  43b2ba:	pop    es
  43b2bb:	ins    DWORD PTR es:[edi],dx
  43b2bc:	pop    ebp
  43b2bd:	popa   
  43b2be:	or     BYTE PTR [edx+0x50],ch
  43b2c1:	jb     0x43b296
  43b2c3:	pop    ebx
  43b2c4:	pop    ebp
  43b2c5:	jae    0x43b2be
  43b2c7:	cmp    eax,0x69f7556b
  43b2cc:	push   0x57
  43b2ce:	mov    ah,0xfe
  43b2d0:	mov    es,WORD PTR [ecx]
  43b2d2:	lock outs dx,DWORD PTR ds:[esi]
  43b2d4:	imul   ebx,DWORD PTR [di+0x6c8e],0x50
  43b2da:	jae    0x7f3d1a56
  43b2e0:	gs arpl bx,bp
  43b2e3:	jp     0x43b34d
  43b2e5:	jae    0x43b2e7
  43b2e7:	xchg   ecx,eax
  43b2e8:	cld    
  43b2e9:	sbb    BYTE PTR [ebp-0xf999f66],bl
  43b2ef:	dec    esp
  43b2f0:	js     0x43b346
  43b2f2:	repnz push esp
  43b2f4:	addr16 push 0xffffffed
  43b2f7:	dec    ebp
  43b2f8:	imul   esi,DWORD PTR [edx-0x3c],0x2f
  43b2fc:	addr16 popa 
  43b2fe:	shr    BYTE PTR [esp+eax*1],0xd2
  43b302:	add    BYTE PTR [eax],al
  43b304:	popf   
  43b305:	sbb    al,0x72
  43b307:	ja     0x43b2b6
  43b309:	das    
  43b30a:	push   esi
  43b30b:	arpl   WORD PTR [edi-0x318899be],bp
  43b311:	adc    ah,BYTE PTR [ebp+0x6a]
  43b314:	mov    esp,0x806e7717
  43b319:	xor    BYTE PTR [ebx+eax*8],al
  43b31c:	popf   
  43b31d:	sbb    al,0x72
  43b31f:	ja     0x43b2ae
  43b321:	out    dx,eax
  43b322:	inc    ebp
  43b323:	arpl   WORD PTR [ecx+0x4d776734],cx
  43b329:	cli    
  43b32a:	jno    0x43b38b
  43b32c:	sbb    bl,0xfc
  43b32f:	lds    ebx,FWORD PTR [ebp+0x6d77729c]
  43b335:	xlat   BYTE PTR ds:[ebx]
  43b336:	dec    ebx
  43b337:	imul   ecx,DWORD PTR [ebp-0x38],0x72
  43b33b:	je     0x43b3a3
  43b33d:	(bad)  
  43b33e:	jnp    0x43b340
  43b340:	popf   
  43b341:	jo     0x43b340
  43b343:	cmp    al,0x4f
  43b345:	ret    0x746c
  43b348:	popa   
  43b349:	mov    esi,0xb02f7471
  43b34e:	jnp    0x43b395
  43b350:	inc    eax
  43b351:	add    ah,BYTE PTR [eax-0x4ffcd9fd]
  43b357:	jno    0x43b35b
  43b359:	ja     0x43b2db
  43b35b:	or     DWORD PTR fs:[eax-0x4a],ebp
  43b35f:	jl     0x43b359
  43b361:	jbe    0x43b2ef
  43b363:	jo     0x43b335
  43b365:	pop    edx
  43b366:	je     0x43b3df
  43b368:	add    BYTE PTR [eax],al
  43b36a:	add    DWORD PTR [edx+0x7a],esp
  43b36d:	jno    0x43b34d
  43b36f:	push   0xffffff92
  43b371:	add    ebp,esp
  43b373:	add    esi,DWORD PTR [eax]
  43b375:	jb     0x43b371
  43b377:	jbe    0x43b3c9
  43b379:	arpl   cx,cx
  43b37b:	pop    ebx
  43b37c:	dec    ebp
  43b37d:	addr16 loopne 0x43b3e7
  43b380:	inc    esi
  43b381:	ja     0x43b33e
  43b383:	pop    ebx
  43b384:	cmp    edi,DWORD PTR [ebx-0x27]
  43b387:	addr16 ss gs retf 
  43b38b:	pop    ebx
  43b38c:	aaa    
  43b38d:	js     0x43b353
  43b38f:	je     0x43b378
  43b391:	add    ebp,edi
  43b393:	add    esi,DWORD PTR [esi]
  43b395:	addr16 test eax,0x8e650455
  43b39b:	je     0x43b39d
  43b39d:	js     0x43b329
  43b39f:	inc    esi
  43b3a0:	add    al,0x75
  43b3a2:	push   0x89741074
  43b3a7:	popa   
  43b3a8:	cmc    
  43b3a9:	inc    edi
  43b3aa:	pop    edx
  43b3ab:	add    eax,DWORD PTR gs:[ebx+eax*4]
  43b3af:	add    ah,BYTE PTR [esi]
  43b3b1:	jno    0x43b42a
  43b3b3:	js     0x43b381
  43b3b5:	jne    0x43b420
  43b3b7:	push   ebp
  43b3b8:	shl    DWORD PTR [ebp+0x42],cl
  43b3bb:	pusha  
  43b3bc:	retf   0x3e54
  43b3bf:	gs aam 0x75
  43b3c2:	inc    edx
  43b3c3:	jbe    0x43b385
  43b3c5:	inc    edi
  43b3c6:	ds jne 0x43b38f
  43b3c9:	jne    0x43b40d
  43b3cb:	jb     0x43b3cd
  43b3cd:	mov    ebp,0x602d0000
  43b3d2:	push   esp
  43b3d3:	mov    esi,0x9c5d6551
  43b3d8:	sub    BYTE PTR [ecx+0x74],ch
  43b3db:	mov    al,ds:0x8a6d63e2
  43b3e0:	or     BYTE PTR [eax+0x70],ch
  43b3e3:	xchg   ebp,eax
  43b3e4:	or     eax,0x9ee95161
  43b3e9:	cmp    edi,edi
  43b3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b3ec:	add    esi,DWORD PTR [edi+0x4d]
  43b3ef:	mov    ecx,?
  43b3f1:	jae    0x43b461
  43b3f3:	xor    dl,0x77
  43b3f6:	inc    esp
  43b3f7:	dec    esp
  43b3f8:	call   0xd194224a
  43b3fd:	jbe    0x43b468
  43b3ff:	pop    ebx
  43b400:	call   0xa1811154
  43b405:	mov    eax,0x76ba19fd
  43b40a:	dec    ebp
  43b40b:	inc    esp
  43b40c:	shl    BYTE PTR [ebx+0x6e],0x40
  43b410:	mov    ch,0x77
  43b412:	inc    esp
  43b413:	inc    esp
  43b414:	mov    al,0x4d
  43b416:	outs   dx,BYTE PTR ds:[esi]
  43b417:	adc    BYTE PTR [ecx+0x701b6976],ch
  43b41d:	dec    edi
  43b41e:	pop    ebp
  43b41f:	add    eax,0x3afe3799
  43b424:	and    BYTE PTR [ecx+0x3d],0xfb
  43b428:	jnp    0x43b479
  43b42a:	je     0x43b430
  43b42c:	push   0x712c7763
  43b431:	push   ecx
  43b432:	add    bh,bh
  43b434:	add    BYTE PTR [eax],al
  43b436:	mov    al,ds:0x4fce6340
  43b43b:	jae    0x43b4a0
  43b43d:	fist   DWORD PTR [edi+0x54]
  43b440:	pop    edi
  43b441:	lds    ecx,FWORD PTR [ebx+0x63]
  43b444:	inc    ebx
  43b445:	shl    DWORD PTR [ebp+0x2],1
  43b448:	add    BYTE PTR [eax],al
  43b44a:	aad    0x5
  43b44c:	dec    edx
  43b44d:	gs jecxz 0x43b4a2
  43b450:	jo     0x43b4b7
  43b452:	fidivr DWORD PTR [esi]
  43b454:	pop    ebp
  43b455:	jns    0x43b458
  43b457:	ins    BYTE PTR es:[edi],dx
  43b458:	dec    edi
  43b459:	add    ah,al
  43b45b:	add    eax,0x4623654a
  43b460:	ins    BYTE PTR es:[edi],dx
  43b461:	outs   dx,DWORD PTR ds:[esi]
  43b462:	aaa    
  43b463:	push   0x32d6543
  43b468:	jbe    0x43b46c
  43b46a:	es push 0x7721535f
  43b470:	dec    esi
  43b471:	popa   
  43b472:	sbb    BYTE PTR [eax+0x5d],bh
  43b475:	inc    ebp
  43b476:	in     al,dx
  43b477:	dec    edx
  43b478:	add    BYTE PTR [eax],al
  43b47a:	jae    0x43b482
  43b47c:	cmp    eax,0x6c65f171
  43b481:	push   ebx
  43b482:	fstp   QWORD PTR [edx+0x0]
  43b485:	add    BYTE PTR [ebp+0x3a],dh
  43b488:	dec    esi
  43b489:	inc    ecx
  43b48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b48b:	cmp    eax,0x5aaa322b
  43b490:	ins    BYTE PTR es:[edi],dx
  43b491:	ins    BYTE PTR es:[edi],dx
  43b492:	inc    esp
  43b493:	add    esi,DWORD PTR [eax+0x1]
  43b496:	jae    0x43b510
  43b498:	data16 jae 0x43b49b
  43b49b:	add    BYTE PTR [esp+esi*2+0x68b06e61],al
  43b4a2:	dec    edi
  43b4a3:	add    BYTE PTR [ebx+0xa766f05],bl
  43b4a9:	je     0x43b51b
  43b4ab:	jb     0x43b45a
  43b4ad:	pusha  
  43b4ae:	je     0x43b516
  43b4b0:	lds    eax,FWORD PTR [esi]
  43b4b2:	bound  eax,QWORD PTR [ecx]
  43b4b4:	xchg   ecx,eax
  43b4b5:	je     0x43b523
  43b4b7:	push   ebp
  43b4b8:	jmp    0x5d72:0xd5636b59
  43b4bf:	inc    ecx
  43b4c0:	les    eax,FWORD PTR [edx]
  43b4c2:	push   ss
  43b4c3:	add    DWORD PTR [ebp+0x5e6e70ac],ebx
  43b4c9:	scas   al,BYTE PTR es:[edi]
  43b4ca:	ins    BYTE PTR es:[edi],dx
  43b4cb:	dec    edx
  43b4cc:	push   esp
  43b4cd:	call   0x7463:0x899d6cfc
  43b4d4:	inc    ebp
  43b4d5:	mov    ds:0x8d4f536d,al
  43b4da:	push   ecx
  43b4db:	add    BYTE PTR [ebp-0x3b0034e],bl
  43b4e1:	xchg   edi,eax
  43b4e2:	fs inc edx
  43b4e4:	add    al,0x86
  43b4e6:	pusha  
  43b4e7:	inc    edx
  43b4e8:	hlt    
  43b4e9:	outs   dx,DWORD PTR ds:[esi]
  43b4ea:	push   0x6796fc4a
  43b4ef:	push   ecx
  43b4f0:	popf   
  43b4f1:	jo     0x43b4f7
  43b4f3:	push   eax
  43b4f4:	cld    
  43b4f5:	outs   dx,DWORD PTR ds:[esi]
  43b4f6:	gs dec esi
  43b4f8:	add    BYTE PTR [edi+0x6a],ch
  43b4fb:	jb     0x43b4f5
  43b4fd:	sbb    eax,0x6c6b
  43b502:	shr    BYTE PTR [eax],0x74
  43b505:	arpl   WORD PTR [esi-0x63eafbd4],di
  43b50b:	sub    BYTE PTR [eax+0x6e],bh
  43b50e:	ficom  WORD PTR [esi+0x74]
  43b511:	dec    edx
  43b512:	(bad)  
  43b514:	cld    
  43b515:	push   esp
  43b516:	popf   
  43b517:	or     esp,DWORD PTR [ebx+0x74]
  43b51a:	mov    ch,0x22
  43b51c:	ins    DWORD PTR es:[edi],dx
  43b51d:	inc    esp
  43b51e:	mov    ah,0x9
  43b520:	addr16 pop ebp
  43b522:	xchg   ecx,eax
  43b523:	cld    
  43b524:	ins    DWORD PTR es:[edi],dx
  43b525:	ja     0x43b591
  43b527:	(bad)  
  43b529:	sub    eax,0x74632b9d
  43b52e:	jne    0x43b54a
  43b530:	push   0x78036064
  43b535:	arpl   WORD PTR [ebx+0x7b696be8],ax
  43b53b:	adc    al,0x4
  43b53d:	push   ebx
  43b53e:	popf   
  43b53f:	add    dh,BYTE PTR [edi-0x5da5ae9c]
  43b545:	push   0x6cd54649
  43b54a:	dec    edi
  43b54b:	addr16 cdq 
  43b54d:	js     0x43b585
  43b54f:	pusha  
  43b550:	int3   
  43b551:	jno    0x43b59f
  43b553:	add    ah,BYTE PTR [ebx+eax*1+0x4d]
  43b557:	arpl   WORD PTR [ebx-0x4398a495],di
  43b55d:	outs   dx,BYTE PTR ds:[esi]
  43b55e:	das    
  43b55f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43b561:	fs clc 
  43b563:	pop    ecx
  43b564:	xchg   esi,eax
  43b565:	outs   dx,DWORD PTR ds:[esi]
  43b566:	add    BYTE PTR [eax],al
  43b568:	bnd jno 0x43b5ea
  43b56b:	push   esi
  43b56c:	popf   
  43b56d:	add    dl,BYTE PTR [edx+0x3]
  43b570:	sar    BYTE PTR [edx],1
  43b572:	stos   DWORD PTR es:[edi],eax
  43b573:	push   0x68736809
  43b578:	iret   
  43b579:	arpl   WORD PTR [ebx-0x18aa0188],ax
  43b57f:	add    esi,DWORD PTR [eax]
  43b581:	add    dh,BYTE PTR [esi]
  43b583:	dec    esp
  43b584:	loope  0x43b5ed
  43b586:	dec    ebx
  43b587:	addr16 leave 
  43b589:	addr16 push ds
  43b58b:	rcl    BYTE PTR [di-0x19],cl
  43b58f:	add    esp,DWORD PTR [ebx-0x3487e9fd]
  43b595:	inc    ecx
  43b596:	dec    esp
  43b597:	je     0x43b580
  43b599:	push   ebp
  43b59a:	out    0x3,eax
  43b59c:	mov    al,0x2
  43b59e:	pop    ss
  43b59f:	arpl   WORD PTR [ecx-0x6e9ccba6],bp
  43b5a5:	popa   
  43b5a6:	sqrtps xmm1,XMMWORD PTR [ebp-0x62aaf999]
  43b5ad:	add    dh,BYTE PTR [esi+0x4]
  43b5b0:	ins    DWORD PTR es:[edi],dx
  43b5b1:	arpl   bx,di
  43b5b3:	imul   ebp,DWORD PTR [eax+0x59],0x10
  43b5b7:	je     0x43b61c
  43b5b9:	pop    ebp
  43b5ba:	add    BYTE PTR [esi],al
  43b5bc:	gs push ebx
  43b5be:	add    BYTE PTR [esi-0x67],cl
  43b5c1:	push   edx
  43b5c2:	pop    edi
  43b5c3:	fld    QWORD PTR [esi+0x51]
  43b5c6:	push   0xffffffd8
  43b5c8:	dec    ebx
  43b5c9:	pop    ebx
  43b5ca:	je     0x43b598
  43b5cc:	add    BYTE PTR [eax],al
  43b5ce:	ins    DWORD PTR es:[edi],dx
  43b5cf:	jb     0x43b630
  43b5d1:	retf   0x5f3b
  43b5d4:	push   ecx
  43b5d5:	jmp    0x99442178
  43b5da:	aas    
  43b5db:	jbe    0x43b645
  43b5dd:	cwde   
  43b5de:	xor    ebx,DWORD PTR [ebx+0x74]
  43b5e1:	les    ecx,FWORD PTR [ebp+0x72]
  43b5e4:	pop    edi
  43b5e5:	mov    al,BYTE PTR [ebx]
  43b5e7:	pop    esi
  43b5e8:	push   ecx
  43b5e9:	jmp    0xb943e88c
  43b5ee:	push   DWORD PTR [esi+0x68]
  43b5f1:	test   al,0xfa
  43b5f3:	data16 ds mov ch,bh
  43b5f7:	gs ins DWORD PTR es:[edi],dx
  43b5f9:	(bad)  
  43b5fa:	call   FWORD PTR [ebp+0x68]
  43b5fd:	sahf   
  43b5fe:	sahf   
  43b5ff:	or     edi,edi
  43b601:	cdq    
  43b602:	jmp    0x4738:0xd1543d5c
  43b609:	ss cdq 
  43b60b:	cmp    eax,0x2bf02548
  43b610:	push   eax
  43b611:	and    BYTE PTR [ebx+0x66],dh
  43b614:	ins    BYTE PTR es:[edi],dx
  43b615:	push   ebp
  43b616:	mov    eax,ds:0xe119ffad
  43b61b:	inc    ecx
  43b61c:	arpl   WORD PTR ds:0x456c59e3,di
  43b622:	mov    edx,0x9508505c
  43b627:	pop    edx
  43b628:	push   ecx
  43b629:	jmp    0x2a43b6cc
  43b62e:	js     0x43b687
  43b630:	imul   ecx,DWORD PTR [eax],0x0
  43b633:	add    BYTE PTR [ebx+0x66],dh
  43b636:	dec    esp
  43b637:	add    BYTE PTR [ebp-0x5caba2a4],cl
  43b63d:	aas    
  43b63e:	push   0x67
  43b640:	jmp    0x4b00:0xd6000056
  43b647:	push   0x456c5be9
  43b64c:	mov    esp,0xe8755b64
  43b651:	fs dec edi
  43b653:	add    BYTE PTR [edi],al
  43b655:	cmp    BYTE PTR ds:0x2a32f04c,bh
  43b65b:	fcomp  DWORD PTR cs:[ebx+0x6c]
  43b65f:	add    dl,dl
  43b661:	(bad)  
  43b662:	ds gs call 0x36a921bd
  43b669:	cmp    eax,0x44196d59
  43b66e:	js     0x43b6c7
  43b670:	je     0x43b671
  43b672:	dec    edx
  43b673:	gs pop ss
  43b675:	je     0x43b6e1
  43b677:	xor    esi,DWORD PTR [esi]
  43b679:	sbb    eax,0xff206c64
  43b67e:	(bad)  
  43b680:	aaa    
  43b681:	pop    esi
  43b682:	cmp    esi,DWORD PTR [edx+0x19]
  43b685:	pusha  
  43b686:	je     0x43b6ed
  43b688:	lea    ebx,[eax+0x6b]
  43b68b:	je     0x43b672
  43b68d:	pop    eax
  43b68e:	pop    ebx
  43b68f:	gs xor al,0xff
  43b692:	imul   eax,DWORD PTR [eax],0x77
  43b695:	push   edi
  43b696:	dec    ebp
  43b697:	outs   dx,BYTE PTR ds:[esi]
  43b698:	add    BYTE PTR [eax],al
  43b69a:	int    0x58
  43b69c:	popa   
  43b69d:	je     0x43b66c
  43b69f:	gs ins BYTE PTR es:[edi],dx
  43b6a1:	imul   ebp,DWORD PTR [esi+0x61],0x6740000
  43b6a8:	cmp    ebp,DWORD PTR [edi-0x33]
  43b6ab:	pop    eax
  43b6ac:	popa   
  43b6ad:	je     0x43b65c
  43b6af:	gs ins BYTE PTR es:[edi],dx
  43b6b1:	imul   ebx,DWORD PTR [ebp+0x784d5f0f],0x846e6ef8
  43b6bb:	in     eax,dx
  43b6bc:	jnp    0x43b6be
  43b6be:	popf   
  43b6bf:	lods   al,BYTE PTR ds:[esi]
  43b6c0:	cld    
  43b6c1:	cmp    al,0x7a
  43b6c3:	and    ah,BYTE PTR [esi+0x67]
  43b6c6:	imul   eax,DWORD PTR [edx],0xdf446c63
  43b6cc:	pop    edi
  43b6cd:	inc    ebx
  43b6ce:	push   ebp
  43b6cf:	frndint 
  43b6d1:	pop    esp
  43b6d2:	popf   
  43b6d3:	cwde   
  43b6d4:	gs dec ebp
  43b6d6:	cmp    ch,dl
  43b6d8:	dec    esp
  43b6d9:	outs   dx,BYTE PTR ds:[esi]
  43b6da:	dec    edx
  43b6db:	sar    DWORD PTR [ebx+0x3e],0x41
  43b6df:	mov    edx,0xad406566
  43b6e4:	cld    
  43b6e5:	sbb    DWORD PTR [ebp-0x39c8d68],0x94d5f87
  43b6ef:	mov    ds,WORD PTR [edi+0x5f]
  43b6f2:	clc    
  43b6f3:	mov    al,ds:0x67da4866
  43b6f8:	pop    si
  43b6fa:	cld    
  43b6fb:	(bad)  
  43b6fc:	cld    
  43b6fd:	add    BYTE PTR [bx+si],al
  43b700:	popf   
  43b701:	pushf  
  43b702:	gs push esp
  43b704:	cld    
  43b705:	ins    BYTE PTR es:[edi],dx
  43b706:	push   0x4b
  43b708:	clc    
  43b709:	data16 aas 
  43b70b:	outs   dx,BYTE PTR ds:[esi]
  43b70c:	shl    BYTE PTR [esi],0x4
  43b70f:	or     BYTE PTR [ebp-0x2bb2b7e4],bl
  43b715:	pop    ss
  43b716:	outs   dx,BYTE PTR ds:[esi]
  43b718:	mov    dl,0x26
  43b71a:	push   ecx
  43b71b:	je     0x43b6cc
  43b71d:	push   edx
  43b71e:	popaw  
  43b720:	popf   
  43b721:	inc    edx
  43b722:	add    ecx,DWORD PTR [ebp-0x4f]
  43b725:	sub    eax,0x21ba6a6b
  43b72a:	jb     0x43b795
  43b72c:	mov    BYTE PTR [edx],al
  43b72e:	sub    dl,BYTE PTR [ecx+0x5a]
  43b731:	ds aad 0x3
  43b734:	je     0x43b78c
  43b736:	or     al,0x37
  43b738:	mov    bl,0x18
  43b73a:	add    ebp,DWORD PTR [eax-0x77]
  43b73d:	add    bh,dl
  43b73f:	add    eax,0x610b5f60
  43b744:	dec    eax
  43b745:	outs   dx,BYTE PTR ds:[esi]
  43b746:	and    ah,BYTE PTR [esi+0x7b]
  43b749:	pop    edi
  43b74a:	push   es
  43b74b:	jo     0x43b6ea
  43b74d:	add    cl,BYTE PTR [ecx+0x3]
  43b750:	pop    ecx
  43b751:	pop    edi
  43b752:	retf   
  43b753:	pusha  
  43b754:	push   ecx
  43b755:	pop    edi
  43b756:	mov    ds:0xc65f3b65,al
  43b75b:	outs   dx,DWORD PTR ds:[esi]
  43b75c:	popf   
  43b75d:	add    ch,BYTE PTR [esi]
  43b75f:	add    al,0x5c
  43b761:	pop    edi
  43b762:	mov    bl,0x3f
  43b764:	add    BYTE PTR [eax],al
  43b766:	ds jo  0x43b729
  43b769:	ds inc bp
  43b76c:	enter  0x873,0x3
  43b770:	rol    BYTE PTR [ebx],cl
  43b772:	shl    BYTE PTR [esp+eax*4+0x64],1
  43b776:	adc    DWORD PTR [eax-0x5a],esp
  43b779:	push   0xfffffff6
  43b77b:	jb     0x43b705
  43b77d:	outs   dx,DWORD PTR ds:[esi]
  43b77e:	add    ah,BYTE PTR [ebp-0x6d]
  43b781:	pusha  
  43b782:	mov    bl,0x5b
  43b784:	jae    0x43b7ee
  43b786:	retf   0xe772
  43b789:	add    ebp,DWORD PTR [ebp-0x418a59fe]
  43b78f:	arpl   WORD PTR [ebx+0x5f],bx
  43b792:	nop
  43b793:	pop    ecx
  43b794:	dec    esp
  43b795:	je     0x43b781
  43b797:	outs   dx,BYTE PTR ds:[esi]
  43b798:	inc    eax
  43b799:	data16 mov cl,0x5f
  43b79c:	and    eax,DWORD PTR [ebp-0x63]
  43b79f:	add    al,dh
  43b7a1:	add    al,0xd9
  43b7a3:	pop    edi
  43b7a4:	dec    ebx
  43b7a5:	pop    edi
  43b7a6:	mov    cl,0x5f
  43b7a8:	add    BYTE PTR ds:0x400002d8,ch
  43b7ae:	mov    ds:0x8d1a6338,eax
  43b7b3:	pop    ebx
  43b7b4:	outs   dx,BYTE PTR ds:[esi]
  43b7b5:	add    al,0x5d
  43b7b7:	daa    
  43b7b8:	add    BYTE PTR [ecx],bl
  43b7ba:	fwait
  43b7bb:	aaa    
  43b7bc:	pop    edi
  43b7bd:	pop    ss
  43b7be:	pop    edx
  43b7bf:	ds cmp eax,0xfda29ee9
  43b7c5:	sbb    DWORD PTR [edx+0x6e],ecx
  43b7c8:	dec    esi
  43b7c9:	or     al,0x0
  43b7cb:	add    BYTE PTR [eax+0x6e],bh
  43b7ce:	dec    esi
  43b7cf:	push   es
  43b7d0:	inc    edi
  43b7d1:	add    al,BYTE PTR [eax]
  43b7d3:	fcomp  QWORD PTR [edi+0x5cd06443]
  43b7d9:	push   esi
  43b7da:	jae    0x43b7b6
  43b7dc:	add    al,BYTE PTR ss:[eax]
  43b7df:	and    BYTE PTR [ebx+0x4cbd6337],0x61
  43b7e6:	arpl   WORD PTR [esi-0x4291a4d2],si
  43b7ec:	push   ebp
  43b7ed:	pop    eax
  43b7ee:	popa   
  43b7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7f0:	push   ss
  43b7f1:	add    eax,DWORD PTR [eax]
  43b7f3:	fistp  DWORD PTR [esi-0x7b91db]
  43b7f9:	outs   dx,BYTE PTR ds:[esi]
  43b7fa:	arpl   WORD PTR [ebp-0x5ffae27],bp
  43b800:	sahf   
  43b801:	sub    BYTE PTR [edi+0x7d],ah
  43b804:	fcom   DWORD PTR [esi+0x74]
  43b807:	jmp    0xae4278aa
  43b80c:	ret    
  43b80d:	outs   dx,BYTE PTR ds:[esi]
  43b80e:	inc    esp
  43b80f:	mov    al,ds:0x5a745fe0
  43b814:	cdq    
  43b815:	xor    eax,DWORD PTR [eax]
  43b817:	sub    dl,bl
  43b819:	arpl   WORD PTR [edi+0x5d],bx
  43b81c:	loop   0x43b85c
  43b81e:	inc    edi
  43b81f:	sub    edx,eax
  43b821:	arpl   WORD PTR [ebp+0x0],bx
  43b824:	jo     0x43b881
  43b826:	outs   dx,BYTE PTR ds:[si]
  43b828:	xor    al,0x4
  43b82a:	aas    
  43b82b:	inc    esp
  43b82c:	jge    0x43b85b
  43b82e:	sub    ch,BYTE PTR [esi]
  43b830:	add    BYTE PTR [eax],al
  43b832:	pusha  
  43b833:	pop    edx
  43b834:	ins    BYTE PTR es:[edi],dx
  43b835:	add    ch,cl
  43b837:	dec    BYTE PTR [esi+0x53]
  43b83a:	mov    ch,0x4d
  43b83c:	pop    ebp
  43b83d:	outs   dx,BYTE PTR ds:[esi]
  43b83e:	nop
  43b83f:	inc    BYTE PTR [ebx+0x0]
  43b842:	mov    bl,0x4d
  43b844:	cmp    DWORD PTR [edx-0x5f],edx
  43b847:	pop    ebp
  43b848:	outs   dx,BYTE PTR ds:[esi]
  43b849:	add    BYTE PTR [ebx+eax*1+0x5e],ch
  43b84d:	jb     0x43b7e0
  43b84f:	inc    edi
  43b850:	pop    ecx
  43b851:	mov    al,fs:0xe26e6170
  43b857:	pop    edx
  43b858:	add    BYTE PTR [eax],al
  43b85a:	dec    ebp
  43b85b:	add    ebx,DWORD PTR [edi+0x65]
  43b85e:	loopne 0x43b8c4
  43b860:	fs fs (bad) 
  43b863:	pop    esp
  43b864:	data16 retfw 
  43b867:	add    eax,DWORD PTR [esi]
  43b869:	add    BYTE PTR [ebx],dl
  43b86b:	dec    edi
  43b86c:	cmp    DWORD PTR [ecx-0x30],eax
  43b86f:	inc    edi
  43b870:	push   0x65
  43b872:	push   edi
  43b873:	outs   dx,BYTE PTR ds:[esi]
  43b874:	push   esp
  43b875:	outs   dx,DWORD PTR ds:[esi]
  43b876:	push   edi
  43b877:	push   edi
  43b878:	push   0x69
  43b87a:	sbb    ah,BYTE PTR [edx+0x39]
  43b87d:	add    BYTE PTR [ebx+eax*1+0x4f],dl
  43b881:	push   ebx
  43b882:	inc    ebp
  43b883:	ds push 0x65
  43b886:	and    eax,0xf2455d57
  43b88b:	dec    eax
  43b88c:	data16 je 0x43b903
  43b88f:	add    esp,DWORD PTR [edx]
  43b891:	add    BYTE PTR [ebx],dh
  43b893:	dec    esi
  43b894:	cmp    DWORD PTR [ebp+0x0],eax
  43b897:	add    dl,dh
  43b899:	popa   
  43b89a:	data16 je 0x43b824
  43b89d:	popa   
  43b89e:	ins    BYTE PTR es:[edi],dx
  43b89f:	gs popf 
  43b8a1:	cmp    al,0x70
  43b8a3:	add    BYTE PTR [ebp-0x31aefc00],bl
  43b8a9:	sbb    bh,BYTE PTR [edi]
  43b8ab:	push   0xffffffb0
  43b8ad:	ss inc edx
  43b8af:	arpl   WORD PTR [ecx-0x79919ed8],bp
  43b8b5:	push   ds
  43b8b6:	push   0x63
  43b8b8:	add    DWORD PTR ds:0xcf9d006d,0xfffffffc
  43b8bf:	push   eax
  43b8c0:	outs   dx,BYTE PTR ds:[esi]
  43b8c1:	sbb    cl,BYTE PTR [ebx+0x69]
  43b8c4:	jle    0x43b8d3
  43b8c6:	push   0xfce49d00
  43b8cb:	push   eax
  43b8cc:	dec    esi
  43b8cd:	sbb    bh,BYTE PTR ds:0x5fec726c
  43b8d3:	inc    ebx
  43b8d4:	push   ebx
  43b8d5:	(bad)  
  43b8d6:	popa   
  43b8d7:	je     0x43b876
  43b8d9:	test   al,0x4d
  43b8db:	cs push 0xc
  43b8de:	sub    bh,BYTE PTR cs:[ecx]
  43b8e1:	mov    ebp,0x349d0060
  43b8e6:	add    al,0x3d
  43b8e8:	das    
  43b8e9:	ret    0x746c
  43b8ec:	push   eax
  43b8ed:	mov    bh,0x6c
  43b8ef:	outs   dx,BYTE PTR ds:[esi]
  43b8f0:	xor    ah,BYTE PTR [ebp-0x5feea2a1]
  43b8f6:	arpl   WORD PTR [esp+edi*8-0x25],si
  43b8fa:	cld    
  43b8fb:	adc    BYTE PTR [eax],al
  43b8fd:	add    BYTE PTR [ebx+ebp*4+0x7ed4583a],bl
  43b904:	ins    BYTE PTR es:[edi],dx
  43b905:	imul   ebp,edi,0xef633d8f
  43b90b:	addr16 dec esi
  43b90d:	je     0x43b909
  43b90f:	imul   esp,DWORD PTR [eax+0x0],0x3cfcba9d
  43b916:	shr    BYTE PTR [ecx+0x69],0x44
  43b91a:	mov    eax,0xd1615302
  43b91f:	pop    edi
  43b920:	es popa 
  43b922:	mov    bl,0x6e
  43b924:	inc    eax
  43b925:	pop    esi
  43b926:	ret    0x4861
  43b929:	jo     0x43b8e9
  43b92b:	cmp    al,0x35
  43b92d:	addr16 mov dh,0x51
  43b930:	xor    esp,DWORD PTR [edi-0x4d]
  43b933:	pop    edi
  43b934:	out    0x3,eax
  43b936:	jb     0x43b93a
  43b938:	es popa 
  43b93a:	sub    DWORD PTR [esi+0x32],0x74
  43b93e:	jle    0x43b994
  43b940:	ss jge 0x43b9b3
  43b943:	outs   dx,BYTE PTR ds:[esi]
  43b944:	or     al,0x69
  43b946:	push   0x7e71fa6e
  43b94b:	dec    ebp
  43b94c:	out    0x3,eax
  43b94e:	fwait
  43b94f:	add    ah,BYTE PTR [esi]
  43b951:	popa   
  43b952:	jae    0x43b9c2
  43b954:	es push 0x53047144
  43b95a:	dec    ecx
  43b95b:	push   ebp
  43b95c:	aad    0x60
  43b95e:	popf   
  43b95f:	add    cl,BYTE PTR [ebx]
  43b961:	add    al,0x0
  43b963:	add    BYTE PTR [eax+0x5e6fd55f],al
  43b969:	push   esp
  43b96a:	aam    0x68
  43b96c:	jo     0x43b9cd
  43b96e:	mov    ch,0x6f
  43b970:	inc    edx
  43b971:	pop    esp
  43b972:	shl    BYTE PTR [edx+0x42],1
  43b975:	outs   dx,BYTE PTR ds:[esi]
  43b976:	int3   
  43b977:	jb     0x43b95b
  43b979:	push   esp
  43b97a:	xchg   esi,eax
  43b97b:	outs   dx,DWORD PTR ds:[esi]
  43b97c:	add    al,0x71
  43b97e:	mov    WORD PTR [ebx],es
  43b980:	mov    esi,0xf360a602
  43b985:	outs   dx,BYTE PTR ds:[esi]
  43b986:	stos   DWORD PTR es:[edi],eax
  43b987:	jo     0x43b976
  43b989:	push   esi
  43b98a:	and    BYTE PTR [edx-0x2e],0x6e
  43b98e:	mov    WORD PTR [edx-0x2],es
  43b991:	jo     0x43ba06
  43b993:	ins    BYTE PTR es:[edi],dx
  43b994:	call   FWORD PTR [ebx+0x0]
  43b997:	mov    al,cl
  43b999:	outs   dx,BYTE PTR ds:[esi]
  43b99a:	arpl   WORD PTR [edx+0x4c7458bb],bp
  43b9a0:	leave  
  43b9a1:	outs   dx,BYTE PTR ds:[esi]
  43b9a2:	add    bh,dh
  43b9a4:	lahf   
  43b9a5:	push   edx
  43b9a6:	inc    edx
  43b9a7:	xor    DWORD PTR [edx+0x6a],edi
  43b9aa:	jo     0x43b9ea
  43b9ac:	scas   eax,DWORD PTR es:[edi]
  43b9ad:	outs   dx,BYTE PTR ds:[esi]
  43b9ae:	cmp    eax,0x4d6eaf4c
  43b9b3:	xor    eax,0x2c6354b8
  43b9b8:	cdq    
  43b9b9:	add    al,BYTE PTR [eax]
  43b9bb:	sub    ch,BYTE PTR [edi+0x4d]
  43b9be:	push   eax
  43b9bf:	cmp    eax,0x52a14cc
  43b9c4:	jne    0x43ba1c
  43b9c6:	add    BYTE PTR ds:0x3aa10000,dh
  43b9cc:	je     0x43b9e3
  43b9ce:	imul   esi,DWORD PTR [edi],0x347d1763
  43b9d4:	arpl   ax,di
  43b9d6:	jae    0x43ba39
  43b9d8:	ins    DWORD PTR es:[edi],dx
  43b9d9:	std    
  43b9da:	fwait
  43b9db:	push   0x3f
  43b9dd:	jmp    0xb1440780
  43b9e2:	cmp    ch,BYTE PTR [esi+0x70]
  43b9e5:	mov    eax,0xd06e6133
  43b9ea:	addr16 pop eax
  43b9ec:	bound  edi,QWORD PTR [esi-0x5bfffda1]
  43b9f2:	sahf   
  43b9f3:	cmp    dh,BYTE PTR [ebp+esi*4+0x2e]
  43b9f7:	aaa    
  43b9f8:	arpl   di,ax
  43b9fa:	cli    
  43b9fb:	xor    al,0x63
  43b9fd:	mov    eax,0x9d6d6003
  43ba02:	retf   
  43ba03:	push   0x51
  43ba05:	jmp    0xa0434fa8
  43ba0a:	add    BYTE PTR [edi+0x63],ch
  43ba0d:	fwait
  43ba0e:	clc    
  43ba0f:	pop    edi
  43ba10:	je     0x43ba12
  43ba12:	pop    es
  43ba13:	inc    ebp
  43ba14:	je     0x43ba69
  43ba16:	call   0xd7b92e7b
  43ba1b:	inc    edx
  43ba1c:	pop    ecx
  43ba1d:	ins    BYTE PTR es:[edi],dx
  43ba1e:	shl    BYTE PTR [ecx+0x59],1
  43ba21:	arpl   di,bp
  43ba23:	aas    
  43ba24:	add    BYTE PTR [eax],al
  43ba26:	pop    ds
  43ba27:	add    BYTE PTR [ecx+0x6e],al
  43ba2a:	fadd   DWORD PTR [ebx+0x6a]
  43ba2d:	outs   dx,BYTE PTR ds:[esi]
  43ba2e:	add    BYTE PTR [eax],al
  43ba30:	fnstenv [edx+0x49]
  43ba33:	jne    0x43ba0e
  43ba35:	jo     0x43baa8
  43ba37:	inc    esp
  43ba38:	aad    0x72
  43ba3a:	pop    ecx
  43ba3b:	inc    ecx
  43ba3c:	ficomp DWORD PTR [edi+0x61]
  43ba3f:	ins    BYTE PTR es:[edi],dx
  43ba40:	gs pusha 
  43ba42:	ins    BYTE PTR es:[edi],dx
  43ba43:	gs hlt 
  43ba45:	call   FWORD PTR [edi+0x745ccd00]
  43ba4b:	gs xchg esi,eax
  43ba4d:	pop    esp
  43ba4e:	pop    ebp
  43ba4f:	je     0x43ba07
  43ba51:	inc    ebx
  43ba52:	pop    ecx
  43ba53:	fs mov edx,0xb9656c57
  43ba59:	cmp    WORD PTR [eax],ax
  43ba5c:	jae    0x43ba5d
  43ba5e:	inc    eax
  43ba5f:	outs   dx,BYTE PTR ds:[esi]
  43ba60:	enter  0x6a44,0x6e
  43ba64:	fst    DWORD PTR [ebx+0x4a]
  43ba67:	gs aad 0x43
  43ba6a:	ds imul esp,eax,0x30000044
  43ba71:	inc    DWORD PTR [eax+0x6e]
  43ba74:	call   0xd9b224bd
  43ba79:	push   ebx
  43ba7a:	dec    ebx
  43ba7b:	gs pop eax
  43ba7d:	ds jo  0x43baf4
  43ba80:	pop    ebp
  43ba81:	pop    esi
  43ba82:	inc    cx
  43ba84:	je     0x43ba85
  43ba86:	push   ebp
  43ba87:	add    BYTE PTR [ebx+edx*2+0x74],cl
  43ba8b:	jo     0x43ba2a
  43ba8d:	test   al,0x59
  43ba8f:	push   0xfffffff9
  43ba91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba92:	pop    ecx
  43ba93:	outs   dx,DWORD PTR ds:[esi]
  43ba94:	add    BYTE PTR [eax],al
  43ba96:	lock jbe 0x43bb08
  43ba99:	je     0x43ba65
  43ba9b:	frndint 
  43ba9d:	mov    bl,0x9d
  43ba9f:	mov    ds:0x67b87462,al
  43baa4:	arpl   WORD PTR [ebx-0x2f],sp
  43baa7:	sub    BYTE PTR [edi+0x74],ah
  43baaa:	out    dx,al
  43baab:	dec    ebp
  43baac:	arpl   WORD PTR [eax+esi*4+0x48],si
  43bab0:	inc    ecx
  43bab1:	pop    edi
  43bab2:	shl    DWORD PTR ds:0x50be5f62,0x55
  43bab9:	add    BYTE PTR [ebp-0x6eb7fbe0],bl
  43babf:	and    eax,0x23784d74
  43bac4:	push   0x770a804e
  43bac9:	arpl   WORD PTR [esi-0x62ffbcf3],cx
  43bacf:	add    BYTE PTR [edi+eax*2],al
  43bad2:	or     DWORD PTR ds:0xf67b6e67,0x77
  43bad9:	cmp    eax,0x6370f471
  43bade:	gs cli 
  43bae0:	pop    ebp
  43bae1:	fs inc ecx
  43bae3:	inc    BYTE PTR [ebx]
  43bae5:	outs   dx,DWORD PTR ds:[esi]
  43bae6:	popf   
  43bae7:	mov    dl,0x5e
  43bae9:	je     0x43bb23
  43baeb:	(bad)  
  43baec:	pop    esi
  43baed:	arpl   WORD PTR [ecx],si
  43baef:	cwde   
  43baf0:	pop    ebp
  43baf1:	push   0x43
  43baf3:	mov    esi,0xd95c7461
  43baf8:	cld    
  43baf9:	cdq    
  43bafa:	add    BYTE PTR [eax],al
  43bafc:	popf   
  43bafd:	mov    dl,0x5e
  43baff:	je     0x43bb01
  43bb01:	sahf   
  43bb02:	pop    esi
  43bb03:	arpl   WORD PTR [ecx],cx
  43bb05:	jnp    0x43bb7e
  43bb07:	arpl   WORD PTR [edi],cx
  43bb09:	add    esp,DWORD PTR [eax-0x6fa8f2be]
  43bb0f:	bound  eax,QWORD PTR [edi]
  43bb11:	cmp    ah,bh
  43bb13:	add    ecx,esp
  43bb15:	add    bl,BYTE PTR [edi-0x4dad0e89]
  43bb1b:	jae    0x43bb1b
  43bb1d:	jo     0x43bab4
  43bb1f:	push   0x768c57ca
  43bb24:	leave  
  43bb25:	inc    ebx
  43bb26:	out    0x3,eax
  43bb28:	fild   DWORD PTR [edx]
  43bb2a:	das    
  43bb2b:	js     0x43baf6
  43bb2d:	push   edx
  43bb2e:	sub    BYTE PTR [eax-0x3f],ch
  43bb31:	xor    al,0x4c
  43bb33:	jne    0x43bae3
  43bb35:	addr16 push esi
  43bb37:	js     0x43bb0e
  43bb39:	addr16 dec eax
  43bb3b:	push   0x453654be
  43bb40:	popf   
  43bb41:	add    bl,BYTE PTR [edx+0x3]
  43bb44:	pop    edx
  43bb45:	jo     0x43bb7a
  43bb47:	imul   edi,DWORD PTR [ebx+0x70],0x5254780c
  43bb4e:	add    al,0x62
  43bb50:	mov    edx,0x5a037402
  43bb55:	jo     0x43bb6a
  43bb57:	imul   edi,DWORD PTR [ebx+0x70],0x5752780c
  43bb5e:	add    al,0x76
  43bb60:	add    BYTE PTR [eax],al
  43bb62:	push   edx
  43bb63:	push   ecx
  43bb64:	div    DWORD PTR [edi+0x3a]
  43bb67:	jno    0x43bb62
  43bb69:	inc    esp
  43bb6a:	popf   
  43bb6b:	add    dl,dh
  43bb6d:	add    ebx,DWORD PTR [edx+0x70]
  43bb70:	shr    DWORD PTR [eax+0x4b],cl
  43bb73:	jo     0x43bb41
  43bb75:	ja     0x43bbe7
  43bb77:	push   esp
  43bb78:	enter  0x4066,0x37
  43bb7c:	mov    ch,0x5f
  43bb7e:	bound  eax,QWORD PTR [edx]
  43bb80:	add    DWORD PTR [ebx],0xffffffe2
  43bb83:	jo     0x43bb85
  43bb85:	mov    ebp,0xc46a7105
  43bb8a:	adc    dl,BYTE PTR [eax+0x63]
  43bb8d:	popf   
  43bb8e:	fld    TBYTE PTR [ebx+0x69]
  43bb91:	xchg   edx,eax
  43bb92:	fldenv [ebp+0x3f]
  43bb95:	jmp    0xa6440238
  43bb9a:	cmc    
  43bb9b:	push   esi
  43bb9c:	push   ebx
  43bb9d:	jnp    0x43bb61
  43bb9f:	pop    ds
  43bba0:	pop    edi
  43bba1:	mov    dh,dh
  43bba3:	gs inc ebx
  43bba5:	xchg   edx,ecx
  43bba7:	jo     0x43bc20
  43bba9:	mov    al,ds:0x3e6964bc
  43bbae:	cdq    
  43bbaf:	dec    edi
  43bbb0:	add    BYTE PTR [ecx],dh
  43bbb2:	mov    ch,0x56
  43bbb4:	jo     0x43bbde
  43bbb6:	lds    esp,FWORD PTR [esi+0x4e]
  43bbb9:	inc    esp
  43bbba:	scas   al,BYTE PTR es:[edi]
  43bbbb:	push   ebp
  43bbbc:	arpl   WORD PTR [edx],di
  43bbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bbbf:	dec    edx
  43bbc0:	arpl   WORD PTR [eax-0x7b],cx
  43bbc3:	outs   dx,BYTE PTR gs:[esi]
  43bbc5:	cmp    al,BYTE PTR [eax]
  43bbc7:	add    BYTE PTR [edx+eax*1+0x0],dh
  43bbcb:	push   ss
  43bbcc:	(bad)  
  43bbcd:	dec    esp
  43bbce:	inc    edi
  43bbcf:	aaa    
  43bbd0:	pop    edx
  43bbd1:	sub    al,BYTE PTR ss:0x26006e7d
  43bbd8:	pop    ebp
  43bbd9:	inc    ebp
  43bbda:	aas    
  43bbdb:	xor    al,0x45
  43bbdd:	das    
  43bbde:	xlat   BYTE PTR cs:[ebx]
  43bbe0:	jp     0x43bc50
  43bbe2:	ins    BYTE PTR es:[edi],dx
  43bbe3:	jmp    0x27439786
  43bbe8:	cmp    dl,BYTE PTR [esi+0x53]
  43bbeb:	cli    
  43bbec:	inc    ebx
  43bbed:	jo     0x43bc30
  43bbef:	int3   
  43bbf0:	dec    edx
  43bbf1:	dec    ecx
  43bbf2:	push   0xffffffc7
  43bbf4:	cmp    eax,0x9ecc0002
  43bbf9:	dec    esp
  43bbfa:	arpl   bp,dx
  43bbfc:	pop    edi
  43bbfd:	push   edx
  43bbfe:	addr16 add dh,dh
  43bc01:	push   edi
  43bc02:	pop    esi
  43bc03:	popaw  
  43bc05:	push   esi
  43bc06:	ds jb  0x43bc6a
  43bc09:	imul   eax,DWORD PTR [eax],0x4606b900
  43bc0f:	and    BYTE PTR gs:[ecx],bh
  43bc12:	imul   esp,DWORD PTR [ebp+0x16],0x49
  43bc16:	data16 jne 0x43bc32
  43bc19:	add    al,0x46
  43bc1b:	inc    ebp
  43bc1c:	xor    BYTE PTR [ebp+0x50],al
  43bc1f:	dec    ecx
  43bc20:	daa    
  43bc21:	push   ss
  43bc22:	es sub BYTE PTR fs:[eax+0x0],al
  43bc27:	add    BYTE PTR [edx],cl
  43bc29:	add    al,0x3f
  43bc2b:	add    BYTE PTR gs:[eax],al
  43bc2e:	rol    BYTE PTR [esp+eiz*2+0x61],1
  43bc32:	in     al,0x5a
  43bc34:	pop    ebp
  43bc35:	jb     0x43bc0e
  43bc37:	inc    ebx
  43bc38:	fs fs (bad) 
  43bc3b:	imul   esi,DWORD PTR [bp+di-0x1f],0x55
  43bc40:	add    BYTE PTR [eax],al
  43bc42:	ins    DWORD PTR es:[edi],dx
  43bc43:	ss dec eax
  43bc45:	dec    esp
  43bc46:	mov    ah,0x43
  43bc48:	push   eax
  43bc49:	dec    ecx
  43bc4a:	call   0x4e03:0xf44c4c4a
  43bc51:	add    DWORD PTR [ebx+0x67],ebx
  43bc54:	push   0x72
  43bc56:	stos   BYTE PTR es:[edi],al
  43bc57:	popa   
  43bc58:	add    BYTE PTR [eax],al
  43bc5a:	push   ds
  43bc5b:	or     BYTE PTR [ebp+0x65],ah
  43bc5e:	jmp    0xf4bd2cc9
  43bc63:	add    esp,esi
  43bc65:	add    al,0xa9
  43bc67:	addr16 gs jae 0x43bc0c
  43bc6b:	pop    edx
  43bc6c:	add    BYTE PTR [eax],al
  43bc6e:	lock or BYTE PTR [ebx+0x74],ch
  43bc72:	out    0x66,al
  43bc74:	gs jo  0x43bc3b
  43bc77:	add    esp,ecx
  43bc79:	add    al,0x9d
  43bc7b:	(bad)  
  43bc7c:	popa   
  43bc7d:	imul   edi,DWORD PTR [esi],0xffffff9e
  43bc80:	ins    BYTE PTR es:[edi],dx
  43bc81:	add    BYTE PTR [ebp+0x125900b2],bl
  43bc87:	xchg   esi,eax
  43bc88:	pop    edi
  43bc89:	addr16 popf 
  43bc8b:	daa    
  43bc8c:	add    al,0x59
  43bc8e:	adc    ebx,DWORD PTR [ebp+0x715e]
  43bc94:	or     eax,0xf16a557c
  43bc99:	xchg   esp,edi
  43bc9b:	(bad)  
  43bc9c:	sahf   
  43bc9d:	cwde   
  43bc9e:	jbe    0x43bd0d
  43bca0:	sti    
  43bca1:	jns    0x43bd15
  43bca3:	addr16 repz pop ebp
  43bca6:	add    BYTE PTR [di+0x43f],bl
  43bcab:	pop    ecx
  43bcac:	enter  0x7085,0x69
  43bcb0:	shr    cl,cl
  43bcb2:	cld    
  43bcb3:	jmp    0x43bc4e
  43bcb5:	ss addr16 imul ecx,eax,0x50
  43bcba:	jb     0x43bd1f
  43bcbc:	popf   
  43bcbd:	rol    DWORD PTR [edi],0x6b
  43bcc0:	rcr    BYTE PTR [esi],0x5d
  43bcc3:	push   0x9bfce9af
  43bcc8:	sahf   
  43bcc9:	add    BYTE PTR [edi+0x6c],dh
  43bccc:	mov    DWORD PTR [eax+0x63],ecx
  43bccf:	add    BYTE PTR [ebp-0x72a70253],bl
  43bcd5:	(bad)  
  43bcd6:	ins    DWORD PTR es:[edi],dx
  43bcd7:	arpl   WORD PTR [esi+0xa],di
  43bcda:	pusha  
  43bcdb:	ins    BYTE PTR es:[edi],dx
  43bcdc:	popf   
  43bcdd:	add    BYTE PTR [eax],cl
  43bcdf:	pop    edi
  43bce0:	jg     0x43bcde
  43bce2:	add    ebp,DWORD PTR [ebx+0x6e]
  43bce5:	fistp  WORD PTR [ebp+0x6e]
  43bce8:	push   ecx
  43bce9:	iret   
  43bcea:	pusha  
  43bceb:	ins    BYTE PTR es:[edi],dx
  43bcec:	inc    ecx
  43bced:	jmp    0x7e55eee
  43bcf2:	outs   dx,BYTE PTR ds:[esi]
  43bcf3:	arpl   WORD PTR [eax],di
  43bcf5:	add    ah,bh
  43bcf7:	add    eax,DWORD PTR [eax]
  43bcf9:	add    bh,dl
  43bcfb:	add    eax,0x6e4164cc
  43bd00:	ret    0x9d62
  43bd03:	add    ah,BYTE PTR [eax+0x3]
  43bd06:	push   esp
  43bd07:	push   ebp
  43bd08:	mov    ebx,0xa3570e73
  43bd0d:	push   0x52ca57f3
  43bd12:	adc    DWORD PTR [ecx-0x40],edx
  43bd15:	pop    ebp
  43bd16:	cld    
  43bd17:	inc    ebx
  43bd18:	out    0x3,eax
  43bd1a:	xchg   ebp,eax
  43bd1b:	push   es
  43bd1c:	mov    ch,0x77
  43bd1e:	add    DWORD PTR [eax],edi
  43bd20:	xor    DWORD PTR [esi+0x2],0x5d03836d
  43bd27:	add    al,0xaa
  43bd29:	push   0x717441d1
  43bd2e:	ret    
  43bd2f:	xor    DWORD PTR [bx-0x13],0xbe627a50
  43bd37:	push   ecx
  43bd38:	push   esi
  43bd39:	add    al,0x68
  43bd3b:	pop    es
  43bd3c:	xor    al,0x5e
  43bd3e:	lds    esp,FWORD PTR [ebx+0x41]
  43bd41:	push   0x494367b9
  43bd46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bd47:	popa   
  43bd48:	dec    esp
  43bd49:	je     0x43bcdc
  43bd4b:	imul   ecx,DWORD PTR [edx+0x5e],0x5f
  43bd4f:	imul   eax,DWORD PTR [ebx+0x78],0x7e
  43bd53:	push   eax
  43bd54:	out    0x3,eax
  43bd56:	ds pop es
  43bd58:	imul   esi,DWORD PTR ss:[ecx+0x37],0x5c09
  43bd60:	push   edx
  43bd61:	ins    BYTE PTR es:[edi],dx
  43bd62:	or     esp,DWORD PTR [eax+0x7e]
  43bd65:	data16 and al,0x6c
  43bd68:	inc    eax
  43bd69:	div    DWORD PTR [bx+0x42]
  43bd6d:	ins    DWORD PTR es:[edi],dx
  43bd6e:	or     DWORD PTR [esi+0x3a],eax
  43bd71:	outs   dx,BYTE PTR ds:[esi]
  43bd72:	add    ch,bh
  43bd74:	xor    eax,0x9811006c
  43bd79:	cmp    esp,DWORD PTR [ebx-0x1f]
  43bd7c:	aas    
  43bd7d:	popa   
  43bd7e:	jo     0x43bd55
  43bd80:	arpl   WORD PTR [edx+0x5f],bp
  43bd83:	mov    DWORD PTR [edx+0x6e],0x26fdb63
  43bd8a:	add    cl,ch
  43bd8c:	sahf   
  43bd8d:	add    al,BYTE PTR [eax]
  43bd8f:	jmp    0xe943c032
  43bd94:	sahf   
  43bd95:	add    al,BYTE PTR [eax]
  43bd97:	jmp    0xe943c03a
  43bd9c:	sahf   
  43bd9d:	add    al,BYTE PTR [eax]
  43bd9f:	jmp    0xe943c042
  43bda4:	sahf   
  43bda5:	add    al,BYTE PTR [eax]
  43bda7:	jmp    0xe943c04a
  43bdac:	sahf   
  43bdad:	add    al,BYTE PTR [eax]
  43bdaf:	jmp    0xe943c052
  43bdb4:	sahf   
  43bdb5:	add    al,BYTE PTR [eax]
  43bdb7:	jmp    0xe943c05a
  43bdbc:	sahf   
  43bdbd:	add    al,BYTE PTR [eax]
  43bdbf:	jmp    0xe943c062
  43bdc4:	add    BYTE PTR [eax],al
  43bdc6:	sahf   
  43bdc7:	add    al,BYTE PTR [eax]
  43bdc9:	jmp    0xe943c06c
  43bdce:	sahf   
  43bdcf:	add    al,BYTE PTR [eax]
  43bdd1:	jmp    0xe943c074
  43bdd6:	sahf   
  43bdd7:	add    al,BYTE PTR [eax]
  43bdd9:	jmp    0xe943c07c
  43bdde:	sahf   
  43bddf:	add    al,BYTE PTR [eax]
  43bde1:	jmp    0xe943c084
  43bde6:	sahf   
  43bde7:	add    al,BYTE PTR [eax]
  43bde9:	jmp    0x43c08c
  43bdee:	les    eax,FWORD PTR [eax]
  43bdf0:	add    BYTE PTR [eax],al
  43bdf2:	les    eax,FWORD PTR [eax]
  43bdf4:	add    BYTE PTR [eax],al
  43bdf6:	mov    ah,0x0
  43bdf8:	add    BYTE PTR [eax],al
  43bdfa:	mov    ah,0x0
  43bdfc:	add    BYTE PTR [eax],al
  43bdfe:	les    eax,FWORD PTR [eax]
  43be00:	add    BYTE PTR [eax],al
  43be02:	les    eax,FWORD PTR [eax]
  43be04:	add    BYTE PTR [eax],al
  43be06:	mov    ah,0x0
  43be08:	add    BYTE PTR [eax],al
  43be0a:	mov    ah,0x0
  43be0c:	add    BYTE PTR [eax],al
  43be0e:	test   BYTE PTR [eax],al
  43be10:	add    BYTE PTR [eax],al
  43be12:	test   BYTE PTR [eax],al
  43be14:	add    BYTE PTR [eax],al
  43be16:	je     0x43be18
  43be18:	add    BYTE PTR [eax],al
  43be1a:	je     0x43be1c
  43be1c:	add    BYTE PTR [eax],al
  43be1e:	test   BYTE PTR [eax],al
  43be20:	add    BYTE PTR [eax],al
  43be22:	test   BYTE PTR [eax],al
  43be24:	add    BYTE PTR [eax],al
  43be26:	je     0x43be28
  43be28:	add    BYTE PTR [eax],al
  43be2a:	add    BYTE PTR [eax],al
  43be2c:	je     0x43be2e
  43be2e:	add    BYTE PTR [eax],al
  43be30:	inc    esp
  43be31:	add    BYTE PTR [eax],al
  43be33:	add    BYTE PTR [eax+eax*1+0x0],al
  43be37:	add    BYTE PTR [eax+eax*1],dh
  43be3a:	add    BYTE PTR [eax],al
  43be3c:	xor    al,0x0
  43be3e:	add    BYTE PTR [eax],al
  43be40:	inc    esp
  43be41:	add    BYTE PTR [eax],al
  43be43:	add    BYTE PTR [eax+eax*1+0x0],al
  43be47:	add    BYTE PTR [eax+eax*1],dh
  43be4a:	add    BYTE PTR [eax],al
  43be4c:	xor    al,0x0
  43be4e:	add    BYTE PTR [eax],al
  43be50:	add    al,0x0
  43be52:	add    BYTE PTR [eax],al
  43be54:	add    al,0x0
  43be56:	add    BYTE PTR [eax],al
  43be58:	hlt    
  43be59:	(bad)  
  43be5a:	(bad)  
  43be5b:	push   esp
  43be5d:	(bad)  
  43be5e:	(bad)  
  43be5f:	inc    DWORD PTR [eax+eax*1]
  43be62:	add    BYTE PTR [eax],al
  43be64:	add    al,0x0
  43be66:	add    BYTE PTR [eax],al
  43be68:	popf   
  43be69:	jmp    0xe9e1be6a
  43be6e:	cld    
  43be6f:	call   FWORD PTR [ebp-0x62000317]
  43be75:	jmp    0xe9e1be76
  43be7a:	cld    
  43be7b:	call   FWORD PTR [ebp-0x62000317]
  43be81:	jmp    0xe9e1be82
  43be86:	cld    
  43be87:	call   FWORD PTR [ebp-0x62000317]
  43be8d:	jmp    0x44be8e
  43be92:	popf   
  43be93:	jmp    0xe9e1be94
  43be98:	cld    
  43be99:	call   FWORD PTR [ebp-0x62000317]
  43be9f:	jmp    0xe9e1bea0
  43bea4:	cld    
  43bea5:	call   FWORD PTR [ebp-0x62000317]
  43beab:	mov    ds:0x3a263fe2,eax
  43beb0:	push   es
  43beb1:	mov    ecx,0xfffce9e1
  43beb6:	popf   
  43beb7:	jmp    0xc9e1beb8
  43bebc:	add    DWORD PTR [ebp-0x3165c],ecx
  43bec2:	popf   
  43bec3:	jmp    0xe9e1bec4
  43bec8:	cld    
  43bec9:	call   FWORD PTR [ebp+0x22fff8e9]
  43becf:	jmp    0xfffc:0xde1af8e0
  43bed6:	popf   
  43bed7:	sar    ah,1
  43bed9:	call   FWORD PTR [ebp-0x62fffbd7]
  43bedf:	lods   al,BYTE PTR ds:[esi]
  43bee0:	add    BYTE PTR [eax],al
  43bee2:	popf   
  43bee3:	add    ah,BYTE PTR [edi+0x4]
  43bee6:	popf   
  43bee7:	add    ch,BYTE PTR [eax-0x15]
  43beea:	in     eax,0xda
  43beec:	out    dx,al
  43beed:	add    ebx,DWORD PTR [ebp-0x62fc20fe]
  43bef3:	add    al,bh
  43bef5:	add    eax,DWORD PTR [eax]
  43bef7:	add    BYTE PTR [ebp-0x62fc05fe],bl
  43befd:	add    ah,bh
  43beff:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43bf05:	add    ah,bh
  43bf07:	mov    ds:0x3e71ab0,eax
  43bf0c:	popf   
  43bf0d:	add    ah,bh
  43bf0f:	add    ebx,DWORD PTR [ebp-0x604418fe]
  43bf15:	inc    edx
  43bf16:	out    0x3,eax
  43bf18:	popf   
  43bf19:	add    ah,bh
  43bf1b:	add    ebx,DWORD PTR [ebp-0x651218fe]
  43bf21:	inc    edx
  43bf22:	out    0x3,eax
  43bf24:	popf   
  43bf25:	add    ah,bh
  43bf27:	add    ebx,DWORD PTR [ebp-0x697858fe]
  43bf2d:	inc    edx
  43bf2e:	out    0x3,eax
  43bf30:	popf   
  43bf31:	add    ah,bh
  43bf33:	add    ebx,DWORD PTR [ebp-0x5a3968fe]
  43bf39:	inc    edx
  43bf3a:	out    0x3,eax
  43bf3c:	popf   
  43bf3d:	add    ah,bh
  43bf3f:	add    ebx,DWORD PTR [ebp-0x57103cfe]
  43bf45:	inc    edx
  43bf46:	out    0x3,eax
  43bf48:	popf   
  43bf49:	add    ah,bh
  43bf4b:	add    ebx,DWORD PTR [ebp-0x7374877e]
  43bf51:	inc    edx
  43bf52:	out    0x3,eax
  43bf54:	popf   
  43bf55:	add    ah,bh
  43bf57:	add    ebx,DWORD PTR [ebp+0xa97b22]
  43bf5d:	add    BYTE PTR [ebx-0x6116ffbe],dh
  43bf63:	add    al,BYTE PTR [eax]
  43bf65:	jmp    0x30a5a64
  43bf6a:	ja     0x43bf81
  43bf6c:	inc    eax
  43bf6d:	jmp    0x84e2c210
  43bf72:	sub    cl,ah
  43bf74:	adc    al,0xab
  43bf76:	repz dec ebx
  43bf78:	inc    eax
  43bf79:	leave  
  43bf7a:	into   
  43bf7b:	jnp    0x43bf2f
  43bf7d:	stc    
  43bf7e:	stos   DWORD PTR es:[edi],eax
  43bf7f:	stos   BYTE PTR es:[edi],al
  43bf80:	stos   BYTE PTR es:[edi],al
  43bf81:	lods   al,BYTE PTR ds:[esi]
  43bf82:	adc    eax,0x65994061
  43bf87:	frstor [edx]
  43bf89:	dec    esp
  43bf8a:	mov    al,ds:0xca00488c
  43bf8f:	push   esi
  43bf90:	inc    eax
  43bf91:	fmul   DWORD PTR [ebx+esi*4]
  43bf94:	xchg   edx,eax
  43bf95:	stos   BYTE PTR es:[edi],al
  43bf96:	xchg   esp,eax
  43bf97:	add    al,0x8b
  43bf99:	adc    BYTE PTR [esi],dh
  43bf9b:	jnp    0x43bfdc
  43bf9d:	inc    eax
  43bf9e:	aaa    
  43bf9f:	jns    0x43bfe4
  43bfa1:	inc    esp
  43bfa2:	sbb    DWORD PTR [edi],eax
  43bfa4:	mov    DWORD PTR [eax+0x20],ebp
  43bfa7:	nop
  43bfa8:	aas    
  43bfa9:	mov    dx,0xa1b5
  43bfad:	cs ja  0x43bff0
  43bfb0:	sbb    DWORD PTR [ecx+0x7e3fc658],edx
  43bfb6:	pop    esp
  43bfb7:	mov    ecx,0xc01e108b
  43bfbc:	inc    eax
  43bfbd:	inc    ebx
  43bfbe:	xor    esp,DWORD PTR [ecx+0x353e]
  43bfc4:	sbb    eax,0x89c6535e
  43bfc9:	(bad)  
  43bfca:	lock pop ecx
  43bfcc:	cmp    DWORD PTR [ebp+0x3e],ebx
  43bfcf:	popf   
  43bfd0:	bound  ecx,QWORD PTR [ebx-0x31e52f27]
  43bfd6:	in     al,0x4f
  43bfd8:	cmp    ecx,DWORD PTR [eax+0x3d]
  43bfdb:	add    BYTE PTR ds:0x38e36ee4,ah
  43bfe1:	shl    BYTE PTR [ecx],1
  43bfe3:	das    
  43bfe4:	jo     0x43bf6b
  43bfe6:	push   ds
  43bfe7:	inc    esp
  43bfe8:	pushf  
  43bfe9:	out    dx,al
  43bfea:	push   cs
  43bfeb:	stos   BYTE PTR es:[edi],al
  43bfec:	cmp    al,0x7c
  43bfee:	or     bl,ah
  43bff0:	inc    ecx
  43bff1:	ret    0x44f2
  43bff4:	pop    ds
  43bff5:	mov    ds:0xb733f3cc,eax
  43bffa:	(bad)  [edx-0x62]
  43bffd:	mov    edi,eax
  43bfff:	inc    ebp
  43c000:	mov    eax,ds:0xba91bf9a
  43c005:	mov    ds:0xddcda0a6,al
  43c00a:	fwait
  43c00b:	inc    esi
  43c00c:	test   eax,0xd10c0f37
  43c011:	cmp    DWORD PTR [esi+0x75],0xffffffc2
  43c015:	fwait
  43c016:	inc    eax
  43c017:	dec    ebp
  43c018:	dec    esp
  43c019:	ds in  al,0xa7
  43c01c:	imul   DWORD PTR [ebx]
  43c01e:	xor    esi,DWORD PTR ds:0x53e5911c
  43c024:	cmp    DWORD PTR [ebx+0x5ddd],esp
  43c02a:	mov    DWORD PTR [ecx-0x7310c4ab],ebx
  43c030:	mov    bl,BYTE PTR [edx-0x75]
  43c033:	aas    
  43c034:	sahf   
  43c035:	lock aad 0x1e
  43c038:	rcl    BYTE PTR [ecx+eiz*8+0x5a],0x30
  43c03d:	popa   
  43c03e:	mov    ch,0xdf
  43c040:	sbb    DWORD PTR [edx-0x31],0xffffffc6
  43c044:	sbb    eax,0xd3ebbd5d
  43c049:	fiadd  WORD PTR [bx-0xc10]
  43c04e:	mov    ds:0x69c89aa9,eax
  43c053:	mov    edi,0x1d9d6e78
  43c058:	mov    ch,0x94
  43c05a:	xor    cl,BYTE PTR [edx]
  43c05c:	jp     0x43c05b
  43c05e:	ins    BYTE PTR es:[edi],dx
  43c05f:	dec    ecx
  43c060:	shl    BYTE PTR [edx],0x90
  43c063:	jmp    0x9ee1c064
  43c068:	mov    al,0xca
  43c06a:	jmp    0xe20f70e4
  43c06f:	lea    esi,[eax+0x20faaaf4]
  43c075:	push   es
  43c076:	retf   0x6d4c
  43c079:	cmp    esp,DWORD PTR [edi-0x6d085c70]
  43c07f:	and    esp,DWORD PTR [eax+0x35]
  43c082:	jmp    0x83bb:0x33907128
  43c089:	bnd jp 0x43c038
  43c08c:	shr    DWORD PTR [ebx],cl
  43c08e:	add    BYTE PTR [eax],al
  43c090:	cmp    BYTE PTR [edx],al
  43c092:	loop   0x43c0eb
  43c094:	xchg   edx,eax
  43c095:	jo     0x43c064
  43c097:	out    dx,al
  43c098:	bound  ebx,QWORD PTR [ecx]
  43c09a:	clc    
  43c09b:	sbb    al,0x21
  43c09d:	mov    al,ds:0x2641410b
  43c0a2:	mov    al,ds:0x9ea9cae9
  43c0a7:	mov    cl,0xf4
  43c0a9:	mov    ebp,0xd0380297
  43c0ae:	jle    0x43c094
  43c0b0:	mov    dl,0xbc
  43c0b2:	and    DWORD PTR [edi+ebx*8+0x9d2d9a3],edi
  43c0b9:	xor    bh,cl
  43c0bb:	loopne 0x43c057
  43c0bd:	sub    esp,edx
  43c0bf:	cli    
  43c0c0:	arpl   WORD PTR [edx+0x25d20e78],cx
  43c0c6:	pushf  
  43c0c7:	jecxz  0x43c04b
  43c0c9:	shl    BYTE PTR [eax],0x55
  43c0cc:	cmp    al,0x76
  43c0ce:	mov    eax,0x7c0209b9
  43c0d3:	fisub  WORD PTR [ebx+0x17]
  43c0d6:	jne    0x43c098
  43c0d8:	rcr    DWORD PTR [ebx],1
  43c0da:	pop    esp
  43c0db:	inc    eax
  43c0dc:	out    0xed,al
  43c0de:	mov    BYTE PTR [edx+0x5fa11745],cl
  43c0e4:	push   ebx
  43c0e5:	outs   dx,BYTE PTR ds:[esi]
  43c0e6:	inc    DWORD PTR [eax+0x36]
  43c0e9:	clc    
  43c0ea:	ja     0x43c0a3
  43c0ec:	push   cs
  43c0ed:	pop    ss
  43c0ee:	add    esp,DWORD PTR [ebx]
  43c0f0:	(bad)  
  43c0f2:	bound  ebp,QWORD PTR [edx+0x11b10000]
  43c0f8:	or     BYTE PTR [ebx+0x68],bh
  43c0fb:	pop    ss
  43c0fc:	or     BYTE PTR [ecx+0x72],dl
  43c0ff:	ror    DWORD PTR [eax],0xb5
  43c102:	popa   
  43c103:	push   esi
  43c104:	aad    0xaa
  43c106:	gs pop ss
  43c108:	xchg   edx,eax
  43c109:	(bad)  
  43c10a:	jne    0x43c091
  43c10c:	call   0xd3c0e9b6
  43c111:	jmp    0xe8fe:0x270b175e
  43c118:	pop    ds
  43c119:	mov    eax,ds:0x9bd1ec7d
  43c11e:	rcl    BYTE PTR ds:0xdf3397cc,0x82
  43c125:	pusha  
  43c126:	or     DWORD PTR ds:0x14efc917,edi
  43c12c:	(bad)  
  43c12d:	push   0xffffff9f
  43c12f:	mov    BYTE PTR ds:0x2181ec50,0x95
  43c136:	jmp    0x43c14f
  43c138:	js     0x43c124
  43c13a:	test   al,0xfb
  43c13c:	mov    WORD PTR [edx+0x7e],fs
  43c13f:	inc    ecx
  43c140:	fadd   st,st(3)
  43c142:	push   es
  43c143:	pop    ss
  43c144:	enter  0x5b7c,0x1b
  43c148:	gs aas 
  43c14a:	sub    al,0x9b
  43c14c:	(bad)  
  43c14d:	call   0xd787497
  43c152:	mov    cl,0x2d
  43c154:	or     BYTE PTR [edx],al
  43c156:	lock fstp st(4)
  43c159:	add    BYTE PTR [bx+si],al
  43c15c:	add    bh,dl
  43c15e:	xor    eax,0x3e409aaf
  43c163:	out    0x40,al
  43c165:	ins    DWORD PTR es:[edi],dx
  43c166:	jb     0x43c166
  43c168:	xlat   BYTE PTR ds:[ebx]
  43c169:	sub    esi,DWORD PTR [esi]
  43c16b:	cli    
  43c16c:	mov    esi,esi
  43c16e:	int    0xa
  43c170:	out    0x27,al
  43c172:	jmp    0x6b4f:0x37300920
  43c179:	fwait
  43c17a:	mov    edi,0x7da0d736
  43c17f:	dec    edi
  43c180:	cld    
  43c181:	nop
  43c182:	sub    eax,0xea4768b
  43c187:	dec    esi
  43c188:	ins    BYTE PTR es:[edi],dx
  43c189:	jnp    0x43c1ce
  43c18b:	and    dl,dh
  43c18d:	add    eax,0xde79cc2c
  43c192:	sub    dh,BYTE PTR [edi-0x68b2b47e]
  43c198:	lock pop esi
  43c19a:	and    ebp,DWORD PTR [esi+0x51]
  43c19d:	(bad)  
  43c19e:	mov    ds:0x7a976029,eax
  43c1a3:	push   edx
  43c1a4:	jbe    0x43c169
  43c1a6:	sbb    DWORD PTR [edi+0x6b],esp
  43c1a9:	jge    0x43c200
  43c1ab:	xchg   esi,eax
  43c1ac:	sub    DWORD PTR [ecx],ebx
  43c1ae:	mov    ecx,0x17f71f99
  43c1b3:	lahf   
  43c1b4:	mov    bh,0x61
  43c1b6:	pop    esi
  43c1b7:	and    al,0x1f
  43c1b9:	mov    ch,BYTE PTR [eax+0xf5812e7]
  43c1bf:	or     eax,0xb8b50000
  43c1c4:	cwde   
  43c1c5:	pop    ds
  43c1c6:	ins    BYTE PTR es:[edi],dx
  43c1c7:	mov    ebp,0x77810003
  43c1cc:	ror    BYTE PTR [edx],1
  43c1ce:	xor    al,0x1
  43c1d0:	add    BYTE PTR [eax],al
  43c1d2:	mov    esp,0xec004015
  43c1d7:	aas    
  43c1d8:	inc    eax
  43c1d9:	add    BYTE PTR ds:0x22000000,dh
  43c1df:	add    BYTE PTR [eax],al
  43c1e1:	add    BYTE PTR [ebx],al
  43c1e3:	add    DWORD PTR [eax],eax
  43c1e5:	add    ah,bh
  43c1e7:	pop    ss
  43c1e8:	inc    eax
  43c1e9:	add    BYTE PTR [ebx+eax*2],dh
  43c1ec:	inc    eax
  43c1ed:	add    ah,dh
  43c1ef:	add    BYTE PTR [eax],al
  43c1f1:	add    dl,dl
  43c1f3:	add    BYTE PTR [eax],al
  43c1f5:	add    bl,dl
  43c1f7:	add    BYTE PTR [eax],al
  43c1f9:	add    ah,dh
  43c1fb:	add    BYTE PTR [eax],al
  43c1fd:	add    ah,bh
  43c1ff:	adc    al,0x40
  43c201:	add    ah,al
  43c203:	add    BYTE PTR [eax],al
  43c205:	add    bh,dl
  43c207:	add    BYTE PTR [eax],al
  43c209:	add    BYTE PTR [ebx-0x4c000000],bh
  43c20f:	add    BYTE PTR [eax],al
  43c211:	add    ch,al
  43c213:	add    BYTE PTR [eax],al
  43c215:	add    ah,al
  43c217:	add    BYTE PTR [eax],al
  43c219:	add    BYTE PTR [eax+0x70003884],dh
  43c21f:	fs inc eax
  43c221:	add    BYTE PTR [eax+0x3884],cl
  43c227:	add    BYTE PTR [eax+0x74004064],bh
  43c22d:	test   BYTE PTR [eax],bh
  43c22f:	add    ah,bl
  43c231:	jno    0x43c26b
  43c233:	add    BYTE PTR [ecx+esi*2+0x71dc0038],dh
  43c23a:	cmp    BYTE PTR [eax],al
  43c23c:	xchg   esp,eax
  43c23d:	jno    0x43c277
  43c23f:	add    ah,bl
  43c241:	jno    0x43c27b
  43c243:	add    BYTE PTR [ebp-0x62c070e7],bl
  43c249:	and    DWORD PTR [edi-0x70c262c1],ecx
  43c24f:	aas    
  43c250:	popf   
  43c251:	sbb    DWORD PTR [edi-0x70be62c1],ecx
  43c257:	aas    
  43c258:	popf   
  43c259:	dec    ecx
  43c25a:	(bad)  
  43c25b:	aas    
  43c25c:	popf   
  43c25d:	push   ebp
  43c25e:	nop
  43c25f:	aas    
  43c260:	popf   
  43c261:	push   ecx
  43c262:	nop
  43c263:	aas    
  43c264:	popf   
  43c265:	imul   edx,DWORD PTR [eax-0x70d262c1],0x8f2d9d3f
  43c26f:	aas    
  43c270:	popf   
  43c271:	dec    ecx
  43c272:	(bad)  
  43c273:	aas    
  43c274:	popf   
  43c275:	cmc    
  43c276:	mov    ?,WORD PTR [edi]
  43c278:	popf   
  43c279:	cmc    
  43c27a:	mov    ?,WORD PTR [edi]
  43c27c:	popf   
  43c27d:	and    eax,0xb59d3f8f
  43c282:	(bad)  
  43c283:	aas    
  43c284:	popf   
  43c285:	lds    ecx,FWORD PTR [edi-0x717a62c1]
  43c28b:	aas    
  43c28c:	add    BYTE PTR [eax],al
  43c28e:	popf   
  43c28f:	pop    ecx
  43c290:	(bad)  
  43c291:	aas    
  43c292:	popf   
  43c293:	ins    DWORD PTR es:[edi],dx
  43c294:	mov    ?,WORD PTR [edi]
  43c296:	popf   
  43c297:	test   eax,0x459d3f8e
  43c29c:	(bad)  
  43c29d:	aas    
  43c29e:	popf   
  43c29f:	push   ecx
  43c2a0:	(bad)  
  43c2a1:	aas    
  43c2a2:	popf   
  43c2a3:	mov    ebp,0x9d9d3f8e
  43c2a8:	mov    ?,WORD PTR [edi]
  43c2aa:	popf   
  43c2ab:	std    
  43c2ac:	lea    edi,[edi]
  43c2ae:	popf   
  43c2af:	loope  0x43c23f
  43c2b1:	aas    
  43c2b2:	popf   
  43c2b3:	adc    eax,0x459d3f8e
  43c2b8:	mov    ?,WORD PTR [edi]
  43c2ba:	popf   
  43c2bb:	mov    ?,WORD PTR gs:[edi]
  43c2be:	popf   
  43c2bf:	add    cl,BYTE PTR [ebx-0x6e]
  43c2c2:	mov    ds:0x9a926702,al
  43c2c7:	add    al,BYTE PTR [ebx-0x34fd6d6e]
  43c2cd:	xchg   edx,eax
  43c2ce:	mov    al,BYTE PTR [edx]
  43c2d0:	retf   
  43c2d1:	xchg   edx,eax
  43c2d2:	add    BYTE PTR [edx],0xb
  43c2d5:	xchg   ebx,eax
  43c2d6:	jp     0x43c2da
  43c2d8:	setae  BYTE PTR [edx+0x2]
  43c2dc:	daa    
  43c2dd:	xchg   ebx,eax
  43c2de:	push   0x2
  43c2e0:	xchg   ebx,eax
  43c2e1:	je     0x43c345
  43c2e3:	add    dh,BYTE PTR [edi+0x74]
  43c2e6:	fiadd  DWORD PTR [edx]
  43c2e8:	push   ebx
  43c2e9:	je     0x43c2bd
  43c2eb:	add    bh,BYTE PTR [edi]
  43c2ed:	je     0x43c2b9
  43c2ef:	add    bl,BYTE PTR [edi]
  43c2f1:	je     0x43c2f3
  43c2f3:	add    dl,al
  43c2f5:	add    ch,BYTE PTR [ebx]
  43c2f7:	je     0x43c2b3
  43c2f9:	add    ch,bh
  43c2fb:	jae    0x43c2af
  43c2fd:	add    bh,bh
  43c2ff:	jae    0x43c2ab
  43c301:	add    bh,bl
  43c303:	jae    0x43c2a7
  43c305:	add    ah,bl
  43c307:	jae    0x43c2a3
  43c309:	add    dl,BYTE PTR [edi-0x78fd6d6d]
  43c30f:	xchg   ebx,eax
  43c310:	mov    al,BYTE PTR [edx]
  43c312:	stos   DWORD PTR es:[edi],eax
  43c313:	xchg   ebx,eax
  43c314:	add    BYTE PTR [edx],0x4b
  43c317:	xchg   ebx,eax
  43c318:	jp     0x43c31c
  43c31a:	pop    ebx
  43c31b:	xchg   ebx,eax
  43c31c:	jb     0x43c320
  43c31e:	addr16 xchg ebx,eax
  43c320:	push   0x2
  43c322:	xlat   BYTE PTR ds:[ebx]
  43c323:	xchg   edx,eax
  43c324:	bound  eax,QWORD PTR [edx]
  43c326:	mov    edi,0x1302da92
  43c32b:	xchg   ebx,eax
  43c32c:	rol    BYTE PTR [edx],cl
  43c32e:	pop    es
  43c32f:	xchg   ebx,eax
  43c330:	retf   0xeb02
  43c333:	xchg   edx,eax
  43c334:	ret    0x1f02
  43c337:	xchg   edx,eax
  43c338:	mov    edx,0xf290002
  43c33d:	adc    al,BYTE PTR [eax]
  43c33f:	push   ecx
  43c340:	movlps xmm0,QWORD PTR [eax]
  43c343:	imul   ecx,DWORD PTR [edi],0x2c910012
  43c349:	adc    al,BYTE PTR [eax]
  43c34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c34c:	sub    al,0x12
  43c34e:	add    ch,al
  43c350:	sub    al,0x12
  43c352:	add    cl,ah
  43c354:	sub    al,0x12
  43c356:	add    BYTE PTR [ecx],al
  43c358:	add    BYTE PTR [eax],al
  43c35a:	or     al,0x12
  43c35c:	add    BYTE PTR ds:0x1100120c,al
  43c362:	or     al,0x12
  43c364:	add    BYTE PTR [ebp-0x66ffedf3],dh
  43c36a:	sub    eax,0x9ee90012
  43c36f:	add    al,BYTE PTR [eax]
  43c371:	jmp    0xe943c614
  43c376:	sahf   
  43c377:	add    al,BYTE PTR [eax]
  43c379:	jmp    0xe943c61c
  43c37e:	sahf   
  43c37f:	add    al,BYTE PTR [eax]
  43c381:	push   esi
  43c382:	add    dl,BYTE PTR [ecx]
  43c384:	add    cl,ch
  43c386:	sahf   
  43c387:	add    al,BYTE PTR [eax]
  43c389:	jmp    0xe943c62c
  43c38e:	sahf   
  43c38f:	add    al,BYTE PTR [eax]
  43c391:	push   ds
  43c392:	mov    edx,DWORD PTR [eax]
  43c394:	add    cl,ch
  43c396:	sahf   
  43c397:	add    al,BYTE PTR [eax]
  43c399:	jmp    0xe943c63c
  43c39e:	sahf   
  43c39f:	add    al,BYTE PTR [eax]
  43c3a1:	inc    edi
  43c3a2:	push   0x9ee90010
  43c3a7:	add    al,BYTE PTR [eax]
  43c3a9:	jmp    0xe943c64c
  43c3ae:	sahf   
  43c3af:	add    al,BYTE PTR [eax]
  43c3b1:	dec    esp
  43c3b2:	enter  0x10,0x0
  43c3b6:	je     0x43c3bd
  43c3b8:	add    BYTE PTR [eax],al
  43c3ba:	test   BYTE PTR ds:0x0,al
  43c3c0:	test   BYTE PTR ds:0x10160000,al
  43c3c6:	cmp    al,BYTE PTR [eax]
  43c3c8:	je     0x43c3cf
  43c3ca:	add    BYTE PTR [eax],al
  43c3cc:	inc    esp
  43c3cd:	add    eax,0x5440000
  43c3d2:	add    BYTE PTR [eax],al
  43c3d4:	add    edx,DWORD PTR [ecx]
  43c3d6:	cmp    al,BYTE PTR [eax]
  43c3d8:	xor    al,0x5
  43c3da:	add    BYTE PTR [eax],al
  43c3dc:	inc    esp
  43c3dd:	add    eax,0x5440000
  43c3e2:	add    BYTE PTR [eax],al
  43c3e4:	mov    esi,0x34003a11
  43c3e9:	add    eax,0x5040000
  43c3ee:	add    BYTE PTR [eax],al
  43c3f0:	add    al,0x5
  43c3f2:	add    BYTE PTR [eax],al
  43c3f4:	ds inc edx
  43c3f6:	cmp    al,BYTE PTR [eax]
  43c3f8:	hlt    
  43c3f9:	add    al,0x0
  43c3fb:	add    BYTE PTR [eax*1+0x5040000],al
  43c402:	add    BYTE PTR [eax],al
  43c404:	int3   
  43c405:	(bad)  
  43c408:	hlt    
  43c409:	add    al,0x0
  43c40b:	add    ah,al
  43c40d:	add    al,0x0
  43c40f:	add    ah,al
  43c411:	add    al,0x0
  43c413:	add    BYTE PTR [ecx+edx*1+0x3a],bh
  43c417:	add    BYTE PTR [esp+eax*1+0x4c40000],dh
  43c41e:	add    BYTE PTR [eax],al
  43c420:	les    eax,FWORD PTR [eax+eax*1]
  43c423:	add    BYTE PTR [eax],al
  43c425:	add    BYTE PTR [ecx+0x11],bl
  43c428:	cmp    al,BYTE PTR [eax]
  43c42a:	mov    ah,0x4
  43c42c:	add    BYTE PTR [eax],al
  43c42e:	test   BYTE PTR [eax+eax*1],al
  43c431:	add    BYTE PTR [ebp-0x62000327],bl
  43c437:	jbe    0x43c471
  43c439:	ds popf 
  43c43b:	frndint 
  43c43d:	call   FWORD PTR [ebp-0x62000327]
  43c443:	frndint 
  43c445:	call   FWORD PTR [ebp-0x62c1c712]
  43c44b:	frndint 
  43c44d:	call   FWORD PTR [ebp-0x62000327]
  43c453:	frndint 
  43c455:	call   FWORD PTR [ebp-0x62c05c49]
  43c45b:	frndint 
  43c45d:	call   FWORD PTR [ebp-0x62000327]
  43c463:	frndint 
  43c465:	call   FWORD PTR [ebp-0x62c05c9f]
  43c46b:	frndint 
  43c46d:	call   FWORD PTR [ebp-0x62000327]
  43c473:	frndint 
  43c475:	call   FWORD PTR [ebp-0x62c05c65]
  43c47b:	frndint 
  43c47d:	call   FWORD PTR [ebp-0x62000327]
  43c483:	frndint 
  43c485:	call   FWORD PTR [ebp+0x3fa0d5]
  43c48b:	add    BYTE PTR [ebp-0x62000327],bl
  43c491:	frndint 
  43c493:	call   FWORD PTR [ebp-0x62000327]
  43c499:	std    
  43c49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c49b:	aas    
  43c49c:	popf   
  43c49d:	frndint 
  43c49f:	call   FWORD PTR [ebp-0x62000327]
  43c4a5:	frndint 
  43c4a7:	call   FWORD PTR [ebp-0x62c1335a]
  43c4ad:	add    ah,bh
  43c4af:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c4b5:	add    ah,bh
  43c4b7:	add    ebx,DWORD PTR [ebp-0x3c2d0bfe]
  43c4bd:	add    ah,bh
  43c4bf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c4c5:	add    ah,bh
  43c4c7:	add    ebx,DWORD PTR [ebp-0x5c2d09fe]
  43c4cd:	add    ah,bh
  43c4cf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c4d5:	add    ah,bh
  43c4d7:	add    ebx,DWORD PTR [ebp-0x7c2d6ffe]
  43c4dd:	add    ah,bh
  43c4df:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c4e5:	add    ah,bh
  43c4e7:	add    ebx,DWORD PTR [ebp+0x63d22a02]
  43c4ed:	add    ah,bh
  43c4ef:	add    eax,DWORD PTR [eax]
  43c4f1:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43c4f7:	add    ah,bh
  43c4f9:	add    ebx,DWORD PTR [ebp-0x3c2e1bfe]
  43c4ff:	add    ah,bh
  43c501:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c507:	add    ah,bh
  43c509:	add    ebx,DWORD PTR [ebp-0x5c2de1fe]
  43c50f:	add    ah,bh
  43c511:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c517:	add    ah,bh
  43c519:	add    ebx,DWORD PTR [ebp-0x7c2d8cfe]
  43c51f:	add    ah,bh
  43c521:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c527:	add    al,BYTE PTR [eax]
  43c529:	jmp    0x8c43c7cc
  43c52e:	iret   
  43c52f:	verw   cx
  43c532:	sahf   
  43c533:	add    al,BYTE PTR [eax]
  43c535:	jmp    0xe943c7d8
  43c53a:	sahf   
  43c53b:	add    al,BYTE PTR [eax]
  43c53d:	or     ch,BYTE PTR [esi+0xd]
  43c540:	add    cl,ch
  43c542:	sahf   
  43c543:	add    al,BYTE PTR [eax]
  43c545:	jmp    0xe943c7e8
  43c54a:	sahf   
  43c54b:	add    al,BYTE PTR [eax]
  43c54d:	ror    BYTE PTR [edi+0xd],0x0
  43c551:	jmp    0xe943c7f4
  43c556:	add    BYTE PTR [eax],al
  43c558:	sahf   
  43c559:	add    al,BYTE PTR [eax]
  43c55b:	jmp    0x5b43c7fe
  43c560:	outs   dx,BYTE PTR ds:[esi]
  43c561:	or     eax,0x29ee900
  43c566:	add    cl,ch
  43c568:	sahf   
  43c569:	add    al,BYTE PTR [eax]
  43c56b:	jmp    0xb643c80e
  43c570:	dec    edx
  43c571:	or     eax,0x29ee900
  43c576:	add    cl,ch
  43c578:	sahf   
  43c579:	add    al,BYTE PTR [eax]
  43c57b:	jmp    0x6543c81e
  43c580:	jmp    0x2:0x9ee9000c
  43c587:	jmp    0xe943c82a
  43c58c:	sahf   
  43c58d:	add    al,BYTE PTR [eax]
  43c58f:	cwde   
  43c590:	retf   0xc
  43c593:	jmp    0xe943c836
  43c598:	sahf   
  43c599:	add    al,BYTE PTR [eax]
  43c59b:	jmp    0xca43c83e
  43c5a0:	in     eax,0xc
  43c5a2:	add    BYTE PTR [eax],al
  43c5a4:	les    eax,FWORD PTR [ecx]
  43c5a6:	add    BYTE PTR [eax],al
  43c5a8:	les    eax,FWORD PTR [ecx]
  43c5aa:	add    BYTE PTR [eax],al
  43c5ac:	mov    ah,0x1
  43c5ae:	add    BYTE PTR [eax],al
  43c5b0:	imul   ebx,DWORD PTR [ecx],0x184003a
  43c5b6:	add    BYTE PTR [eax],al
  43c5b8:	test   BYTE PTR [ecx],al
  43c5ba:	add    BYTE PTR [eax],al
  43c5bc:	add    BYTE PTR [eax],al
  43c5be:	je     0x43c5c1
  43c5c0:	add    BYTE PTR [eax],al
  43c5c2:	cdq    
  43c5c3:	pop    ds
  43c5c4:	cmp    al,BYTE PTR [eax]
  43c5c6:	test   BYTE PTR [ecx],al
  43c5c8:	add    BYTE PTR [eax],al
  43c5ca:	test   BYTE PTR [ecx],al
  43c5cc:	add    BYTE PTR [eax],al
  43c5ce:	je     0x43c5d1
  43c5d0:	add    BYTE PTR [eax],al
  43c5d2:	pop    ecx
  43c5d3:	push   ds
  43c5d4:	cmp    al,BYTE PTR [eax]
  43c5d6:	inc    esp
  43c5d7:	add    DWORD PTR [eax],eax
  43c5d9:	add    BYTE PTR [ecx+eax*1+0x0],al
  43c5dd:	add    BYTE PTR [ecx+eax*1],dh
  43c5e0:	add    BYTE PTR [eax],al
  43c5e2:	je     0x43c602
  43c5e4:	cmp    al,BYTE PTR [eax]
  43c5e6:	inc    esp
  43c5e7:	add    DWORD PTR [eax],eax
  43c5e9:	add    BYTE PTR [ecx+eax*1+0x0],al
  43c5ed:	add    BYTE PTR [ecx+eax*1],dh
  43c5f0:	add    BYTE PTR [eax],al
  43c5f2:	xor    ebx,DWORD PTR [ecx]
  43c5f4:	cmp    al,BYTE PTR [eax]
  43c5f6:	add    al,0x1
  43c5f8:	add    BYTE PTR [eax],al
  43c5fa:	add    al,0x1
  43c5fc:	add    BYTE PTR [eax],al
  43c5fe:	hlt    
  43c5ff:	add    BYTE PTR [eax],al
  43c601:	add    BYTE PTR [edx+0x4003a18],dl
  43c607:	add    DWORD PTR [eax],eax
  43c609:	add    BYTE PTR [ecx+eax*1],al
  43c60c:	add    BYTE PTR [eax],al
  43c60e:	hlt    
  43c60f:	add    BYTE PTR [eax],al
  43c611:	add    BYTE PTR [edx-0x3bffc5e8],dh
  43c617:	add    BYTE PTR [eax],al
  43c619:	add    ah,al
  43c61b:	add    BYTE PTR [eax],al
  43c61d:	add    BYTE PTR [ebp+0xfffcdb],bl
  43c623:	add    BYTE PTR [ebp-0x62c1d836],bl
  43c629:	(bad)  
  43c62b:	call   FWORD PTR [ebp-0x62000325]
  43c631:	(bad)  
  43c633:	call   FWORD PTR [ebp-0x62c236c3]
  43c639:	frndint 
  43c63b:	call   FWORD PTR [ebp-0x62000327]
  43c641:	frndint 
  43c643:	call   FWORD PTR [ebp-0x62c236f7]
  43c649:	frndint 
  43c64b:	call   FWORD PTR [ebp-0x62000327]
  43c651:	frndint 
  43c653:	call   FWORD PTR [ebp-0x62c2354c]
  43c659:	frndint 
  43c65b:	call   FWORD PTR [ebp-0x62000327]
  43c661:	frndint 
  43c663:	call   FWORD PTR [ebp-0x62c2356b]
  43c669:	frndint 
  43c66b:	call   FWORD PTR [ebp-0x62000327]
  43c671:	frndint 
  43c673:	call   FWORD PTR [ebp-0x62c235f5]
  43c679:	frndint 
  43c67b:	call   FWORD PTR [ebp-0x62000327]
  43c681:	frndint 
  43c683:	call   FWORD PTR [ebp+0x3dcabb]
  43c689:	add    BYTE PTR [ebp-0x62000327],bl
  43c68f:	frndint 
  43c691:	call   FWORD PTR [ebp-0x62000327]
  43c697:	ds int3 
  43c699:	cmp    eax,0x3e7029d
  43c69e:	popf   
  43c69f:	add    ah,bh
  43c6a1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c6a7:	add    ah,BYTE PTR [esp+ecx*8+0x3e70278]
  43c6ae:	popf   
  43c6af:	add    ah,bh
  43c6b1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c6b7:	add    bh,BYTE PTR [esp+ecx*8-0x28]
  43c6bb:	add    ah,bh
  43c6bd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c6c3:	add    ah,bh
  43c6c5:	add    ebx,DWORD PTR [ebp-0x474c10fe]
  43c6cb:	add    ah,bh
  43c6cd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c6d3:	add    ah,bh
  43c6d5:	add    ebx,DWORD PTR [ebp-0x67712cfe]
  43c6db:	add    ah,bh
  43c6dd:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c6e3:	add    ah,bh
  43c6e5:	add    ebx,DWORD PTR [ebp+0x788d8c02]
  43c6eb:	add    ah,bh
  43c6ed:	add    eax,DWORD PTR [eax]
  43c6ef:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43c6f5:	add    ah,bh
  43c6f7:	add    ebx,DWORD PTR [ebp-0x2499e8fe]
  43c6fd:	add    ah,bh
  43c6ff:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c705:	add    ah,bh
  43c707:	add    ebx,DWORD PTR [ebp-0x446b6dfe]
  43c70d:	add    ah,bh
  43c70f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c715:	add    al,BYTE PTR [eax]
  43c717:	jmp    0xb343c9ba
  43c71c:	xor    DWORD PTR [eax+eax*1],ecx
  43c71f:	jmp    0xe943c9c2
  43c724:	sahf   
  43c725:	add    al,BYTE PTR [eax]
  43c727:	jmp    0x2343c9ca
  43c72c:	push   ss
  43c72d:	or     al,0x0
  43c72f:	jmp    0xe943c9d2
  43c734:	sahf   
  43c735:	add    al,BYTE PTR [eax]
  43c737:	jmp    0xdc43c9da
  43c73c:	das    
  43c73d:	or     DWORD PTR [eax],eax
  43c73f:	jmp    0xe943c9e2
  43c744:	sahf   
  43c745:	add    al,BYTE PTR [eax]
  43c747:	jmp    0x5a43c9ea
  43c74c:	sbb    cl,BYTE PTR [ecx]
  43c74e:	add    cl,ch
  43c750:	sahf   
  43c751:	add    al,BYTE PTR [eax]
  43c753:	jmp    0x2e1c758
  43c758:	add    BYTE PTR [ecx],bh
  43c75a:	add    al,0xa
  43c75c:	add    BYTE PTR [esi],dh
  43c75e:	xor    al,0xa
  43c760:	add    BYTE PTR [ecx],ch
  43c762:	out    dx,eax
  43c763:	inc    edx
  43c764:	add    cl,ch
  43c766:	sahf   
  43c767:	add    al,BYTE PTR [eax]
  43c769:	(bad)  
  43c76a:	out    dx,eax
  43c76b:	inc    edx
  43c76c:	add    BYTE PTR [ecx-0x5affbd31],cl
  43c772:	iret   
  43c773:	inc    edx
  43c774:	add    BYTE PTR [ecx-0x62ffbd31],ah
  43c77a:	iret   
  43c77b:	inc    edx
  43c77c:	add    BYTE PTR [ecx+0x3500426f],bl
  43c782:	outs   dx,BYTE PTR ds:[esi]
  43c783:	inc    edx
  43c784:	add    BYTE PTR [ecx],dh
  43c786:	outs   dx,BYTE PTR ds:[esi]
  43c787:	inc    edx
  43c788:	add    BYTE PTR ds:0x2900426e,ch
  43c78e:	dec    esi
  43c78f:	inc    edx
  43c790:	add    BYTE PTR [eax],al
  43c792:	cwde   
  43c793:	xor    eax,0x359c0040
  43c798:	inc    eax
  43c799:	add    ah,dh
  43c79b:	add    eax,0x762b0000
  43c7a0:	add    BYTE PTR [ecx+0x5c4],bl
  43c7a6:	mov    ah,0x5
  43c7a8:	add    BYTE PTR [eax],al
  43c7aa:	mov    ah,0x5
  43c7ac:	add    BYTE PTR [eax],al
  43c7ae:	les    eax,FWORD PTR ds:0x5c40000
  43c7b4:	add    BYTE PTR [eax],al
  43c7b6:	mov    ah,0x5
  43c7b8:	add    BYTE PTR [eax],al
  43c7ba:	add    BYTE PTR [eax],al
  43c7bc:	mov    ah,0x5
  43c7be:	add    BYTE PTR [eax],al
  43c7c0:	test   BYTE PTR ds:0x5840000,al
  43c7c6:	add    BYTE PTR [eax],al
  43c7c8:	je     0x43c7cf
  43c7ca:	add    BYTE PTR [eax],al
  43c7cc:	je     0x43c7d3
  43c7ce:	add    BYTE PTR [eax],al
  43c7d0:	test   BYTE PTR ds:0x5840000,al
  43c7d6:	add    BYTE PTR [eax],al
  43c7d8:	je     0x43c7df
  43c7da:	add    BYTE PTR [eax],al
  43c7dc:	je     0x43c7e3
  43c7de:	add    BYTE PTR [eax],al
  43c7e0:	inc    esp
  43c7e1:	add    eax,0x5440000
  43c7e6:	add    BYTE PTR [eax],al
  43c7e8:	xor    al,0x5
  43c7ea:	add    BYTE PTR [eax],al
  43c7ec:	xor    al,0x5
  43c7ee:	add    BYTE PTR [eax],al
  43c7f0:	inc    esp
  43c7f1:	add    eax,0x5440000
  43c7f6:	add    BYTE PTR [eax],al
  43c7f8:	xor    al,0x5
  43c7fa:	add    BYTE PTR [eax],al
  43c7fc:	xor    al,0x5
  43c7fe:	add    BYTE PTR [eax],al
  43c800:	add    al,0x5
  43c802:	add    BYTE PTR [eax],al
  43c804:	add    al,0x5
  43c806:	add    BYTE PTR [eax],al
  43c808:	hlt    
  43c809:	add    al,0x0
  43c80b:	add    BYTE PTR [ebp-0x62000325],bl
  43c811:	(bad)  
  43c813:	call   FWORD PTR [ebp-0x62000325]
  43c819:	(bad)  
  43c81b:	call   FWORD PTR [ebp+0xfffcdb]
  43c821:	add    BYTE PTR [ebp-0x62000325],bl
  43c827:	(bad)  
  43c829:	call   FWORD PTR [ebp-0x62000325]
  43c82f:	(bad)  
  43c831:	call   FWORD PTR [ebp-0x62000325]
  43c837:	(bad)  
  43c839:	call   FWORD PTR [ebp-0x62000325]
  43c83f:	(bad)  
  43c841:	call   FWORD PTR [ebp-0x62000327]
  43c847:	frndint 
  43c849:	call   FWORD PTR [ebp-0x62000327]
  43c84f:	frndint 
  43c851:	call   FWORD PTR [ebp-0x62000327]
  43c857:	frndint 
  43c859:	call   FWORD PTR [ebp-0x62000327]
  43c85f:	frndint 
  43c861:	call   FWORD PTR [ebp-0x62000327]
  43c867:	frndint 
  43c869:	call   FWORD PTR [ebp-0x62000327]
  43c86f:	frndint 
  43c871:	call   FWORD PTR [ebp-0x62000327]
  43c877:	frndint 
  43c879:	call   FWORD PTR [ebp-0x62000327]
  43c87f:	frndint 
  43c881:	call   FWORD PTR [ebp+0xfffcd9]
  43c887:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43c88d:	add    ah,bh
  43c88f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c895:	add    ah,bh
  43c897:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c89d:	add    ah,bh
  43c89f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8a5:	add    ah,bh
  43c8a7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8ad:	add    ah,bh
  43c8af:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8b5:	add    ah,bh
  43c8b7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8bd:	add    ah,bh
  43c8bf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8c5:	add    ah,bh
  43c8c7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8cd:	add    ah,bh
  43c8cf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8d5:	add    ah,bh
  43c8d7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8dd:	add    ah,bh
  43c8df:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43c8e5:	add    ah,bh
  43c8e7:	add    ebx,DWORD PTR [ebp+0x3e702]
  43c8ed:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43c8f3:	add    ah,bh
  43c8f5:	repz cmp al,bh
  43c8f8:	mov    BYTE PTR [ebx],0x9d
  43c8fb:	add    cl,BYTE PTR [ebx+0x1a]
  43c8fe:	cmc    
  43c8ff:	or     bh,bl
  43c901:	sbb    eax,0xb9000c79
  43c906:	mov    eax,0xb0a13606
  43c90b:	cs ss dec ecx
  43c90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c90f:	push   esi
  43c910:	ss popa 
  43c912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c913:	jle    0x43c94a
  43c915:	jmp    0x143cb78
  43c91a:	cdq    
  43c91b:	add    al,BYTE PTR [eax]
  43c91d:	cmp    DWORD PTR [esi+ecx*2+0x4684413b],eax
  43c924:	cmp    ebp,DWORD PTR [ecx-0x4c]
  43c927:	jle    0x43c963
  43c929:	popa   
  43c92a:	mov    ah,0x76
  43c92c:	cmp    bh,BYTE PTR [ecx-0x5c]
  43c92f:	outs   dx,BYTE PTR ds:[esi]
  43c930:	cmp    al,BYTE PTR [ecx+0x493966ab]
  43c936:	xchg   ebx,eax
  43c937:	sahf   
  43c938:	cmp    DWORD PTR [ecx-0x75],eax
  43c93b:	add    al,BYTE PTR [eax]
  43c93d:	jmp    0x9943cb80
  43c942:	cwde   
  43c943:	add    al,BYTE PTR [eax]
  43c945:	pop    ecx
  43c946:	stos   DWORD PTR es:[edi],eax
  43c947:	xor    WORD PTR [ecx-0x5d],cx
  43c94b:	call   0x9d31:0x8e9b9531
  43c952:	add    BYTE PTR [eax],al
  43c954:	xchg   ebx,eax
  43c955:	mov    esi,0xaeab2531
  43c95a:	xor    DWORD PTR ds:0x5531dea3,ebp
  43c960:	fwait
  43c961:	into   
  43c962:	xor    DWORD PTR ds:0xe530fe93,edi
  43c968:	stos   DWORD PTR es:[edi],eax
  43c969:	out    dx,al
  43c96a:	xor    ch,cl
  43c96c:	mov    ds:0x9bd5311e,eax
  43c971:	push   cs
  43c972:	xor    ebp,ebx
  43c974:	xchg   ebx,eax
  43c975:	xor    DWORD PTR ds:[ebp-0x52ced155],esp
  43c97c:	mov    ds:0x1000315e,eax
  43c981:	cmc    
  43c982:	jae    0x43c9bb
  43c984:	mov    al,ds:0x803783f4
  43c989:	cmc    
  43c98a:	xchg   ebx,eax
  43c98b:	aaa    
  43c98c:	pusha  
  43c98d:	cmc    
  43c98e:	mov    ds:0xb3f53037,eax
  43c993:	aaa    
  43c994:	and    ch,dh
  43c996:	ret    
  43c997:	aaa    
  43c998:	inc    eax
  43c999:	cmc    
  43c99a:	shl    DWORD PTR [edi],cl
  43c99c:	inc    eax
  43c99d:	cmc    
  43c99e:	jecxz  0x43c9d7
  43c9a0:	shl    ah,1
  43c9a2:	repz aaa 
  43c9a4:	and    ch,dh
  43c9a6:	add    edi,DWORD PTR [eax]
  43c9a8:	shr    cl,0x13
  43c9ab:	cmp    al,ah
  43c9ad:	jmp    0xea3401d5
  43c9b2:	xor    edi,DWORD PTR [eax]
  43c9b4:	loopne 0x43c99f
  43c9b6:	inc    ebx
  43c9b7:	cmp    BYTE PTR [eax],al
  43c9b9:	add    BYTE PTR [eax-0x7fc7ac1a],al
  43c9bf:	out    0x63,al
  43c9c1:	cmp    BYTE PTR [eax-0x5fc78c1a],dl
  43c9c7:	jmp    0xea44024f
  43c9cc:	xchg   ebx,eax
  43c9cd:	cmp    al,ah
  43c9cf:	jmp    0xe9740277
  43c9d4:	mov    bl,0x38
  43c9d6:	and    cl,ch
  43c9d8:	ret    
  43c9d9:	cmp    al,al
  43c9db:	jmp    0xea0402b3
  43c9e0:	jecxz  0x43ca1a
  43c9e2:	shr    cl,1
  43c9e4:	repz cmp BYTE PTR [eax+0x403903e9],ah
  43c9eb:	out    0x13,al
  43c9ed:	cmp    DWORD PTR [eax-0x1a],esp
  43c9f0:	and    edi,DWORD PTR [ecx]
  43c9f2:	jo     0x43c9da
  43c9f4:	xor    edi,DWORD PTR [ecx]
  43c9f6:	pusha  
  43c9f7:	out    0x43,al
  43c9f9:	cmp    DWORD PTR [ebp+0x74541b9f],ebx
  43c9ff:	xchg   edi,eax
  43ca00:	sbb    esp,DWORD PTR [esp+eiz*2+0x6f]
  43ca04:	sbb    esi,DWORD PTR [esp+eiz*2+0x47]
  43ca08:	sbb    al,0x84
  43ca0a:	aam    0x5f
  43ca0c:	sbb    al,0x94
  43ca0e:	aam    0x37
  43ca10:	sbb    al,0xa4
  43ca12:	les    ebp,FWORD PTR [edi+0x14]
  43ca15:	mov    ah,0xc4
  43ca17:	addr16 adc al,0xc4
  43ca1a:	mov    ah,0x9f
  43ca1c:	adc    al,0xd4
  43ca1e:	add    BYTE PTR [eax],al
  43ca20:	mov    ah,0x97
  43ca22:	adc    al,0xe4
  43ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca25:	scas   eax,DWORD PTR es:[edi]
  43ca26:	adc    al,0xf4
  43ca28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca29:	xchg   DWORD PTR [esp+eax*1],edx
  43ca2c:	xchg   edi,eax
  43ca2d:	fist   WORD PTR [esi]
  43ca2f:	adc    al,0x97
  43ca31:	mov    bh,0x16
  43ca33:	and    al,0x87
  43ca35:	scas   eax,DWORD PTR es:[edi]
  43ca36:	push   ss
  43ca37:	xor    al,0x87
  43ca39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca3a:	push   ss
  43ca3b:	inc    esp
  43ca3c:	ja     0x43ca5d
  43ca3e:	push   ss
  43ca3f:	push   esp
  43ca40:	ja     0x43ca59
  43ca42:	push   ss
  43ca43:	fs addr16 out dx,eax
  43ca46:	adc    eax,0x16c76774
  43ca4b:	test   bh,dl
  43ca4d:	pop    ebp
  43ca4e:	push   ss
  43ca4f:	xchg   esp,eax
  43ca50:	xlat   BYTE PTR ds:[ebx]
  43ca51:	xor    eax,0x6dc7a416
  43ca56:	adc    eax,0x1565c7b4
  43ca5b:	les    esi,FWORD PTR [edi-0x482be9e3]
  43ca61:	adc    eax,0x2da7e416
  43ca66:	push   ss
  43ca67:	hlt    
  43ca68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca69:	add    eax,0xdd960416
  43ca6e:	pop    ss
  43ca6f:	adc    al,0x96
  43ca71:	mov    ch,0x17
  43ca73:	and    al,0x86
  43ca75:	add    dl,bl
  43ca77:	sbb    BYTE PTR [ecx-0x1ee724f9],cl
  43ca7d:	pop    es
  43ca7e:	mov    ds:0xab07c918,eax
  43ca83:	sbb    BYTE PTR [eax],al
  43ca85:	add    cl,al
  43ca87:	pop    es
  43ca88:	xchg   ebx,eax
  43ca89:	sbb    BYTE PTR [ecx+0x21187b07],ch
  43ca8f:	or     BYTE PTR [ebx+0x19],ah
  43ca92:	sub    DWORD PTR [eax],ecx
  43ca94:	dec    ebx
  43ca95:	sbb    DWORD PTR [ecx+0x8],eax
  43ca98:	xchg   ebx,eax
  43ca99:	sbb    BYTE PTR [ecx+0x8],cl
  43ca9c:	fwait
  43ca9d:	sbb    cl,ah
  43ca9f:	pop    es
  43caa0:	mov    ds:0xab07c918,eax
  43caa5:	sbb    BYTE PTR [ecx],al
  43caa7:	or     bl,dl
  43caa9:	sbb    cl,ch
  43caab:	pop    es
  43caac:	mov    ebx,0xe306a118
  43cab1:	pop    ss
  43cab2:	test   eax,0x8117cb06
  43cab7:	push   es
  43cab8:	rcl    DWORD PTR [edi],cl
  43caba:	mov    DWORD PTR [esi],eax
  43cabc:	fist   DWORD PTR [edi]
  43cabe:	popa   
  43cabf:	push   es
  43cac0:	and    ebx,DWORD PTR [eax]
  43cac2:	dec    ecx
  43cac3:	push   es
  43cac4:	sub    ebx,DWORD PTR [eax]
  43cac6:	inc    ecx
  43cac7:	push   es
  43cac8:	adc    ebx,DWORD PTR [eax]
  43caca:	sub    DWORD PTR [esi],eax
  43cacc:	sti    
  43cacd:	pop    ss
  43cace:	and    DWORD PTR [esi],eax
  43cad0:	arpl   WORD PTR [edi],dx
  43cad2:	sub    DWORD PTR [esi],eax
  43cad4:	dec    ebx
  43cad5:	pop    ss
  43cad6:	inc    ecx
  43cad7:	push   es
  43cad8:	xchg   ebx,eax
  43cad9:	pop    ss
  43cada:	dec    ecx
  43cadb:	push   es
  43cadc:	daa    
  43cadd:	pop    ss
  43cade:	imul   eax,DWORD PTR [esi],0x679172f
  43cae4:	push   edi
  43cae5:	pop    ss
  43cae6:	imul   eax,DWORD PTR [esi],0x1713
  43caec:	test   eax,0xe116fb05
  43caf1:	add    eax,0x2eaba500
  43caf6:	cmp    ecx,DWORD PTR [ebp-0x6ac4a14d]
  43cafc:	stos   DWORD PTR es:[edi],eax
  43cafd:	dec    esi
  43cafe:	cmp    ebx,DWORD PTR [ebp+0x653a7e93]
  43cb04:	mov    ebp,DWORD PTR [esi+0x3a]
  43cb07:	ins    DWORD PTR es:[edi],dx
  43cb08:	xchg   ebx,eax
  43cb09:	sahf   
  43cb0a:	cmp    dl,BYTE PTR [ebp-0x75]
  43cb0d:	mov    ?,WORD PTR [edx]
  43cb0f:	cmp    eax,0x253abeb3
  43cb14:	stos   DWORD PTR es:[edi],eax
  43cb15:	scas   al,BYTE PTR es:[edi]
  43cb16:	cmp    cl,BYTE PTR ds:0xe93adeb3
  43cb1c:	outs   dx,BYTE PTR ds:[esi]
  43cb1d:	add    al,BYTE PTR [eax]
  43cb1f:	and    DWORD PTR [ecx-0x6a0afffe],esp
  43cb25:	and    dh,BYTE PTR [ebx]
  43cb27:	add    eax,0x15331a84
  43cb2c:	test   BYTE PTR [edx],dl
  43cb2e:	xor    esi,ebp
  43cb30:	mov    ch,0xa
  43cb32:	xor    esi,ebp
  43cb34:	mov    ch,0x42
  43cb36:	xor    ebx,DWORD PTR ds:0xb132bea4
  43cb3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb3d:	mov    dh,0x32
  43cb3f:	inc    ebp
  43cb40:	xchg   edi,eax
  43cb41:	call   0x5531:0x92974531
  43cb48:	xchg   DWORD PTR [esi-0x316e4ec9],edi
  43cb4e:	aaa    
  43cb4f:	add    DWORD PTR [eax],0x37bea900
  43cb55:	jmp    0xf63c8d78
  43cb5a:	sahf   
  43cb5b:	add    al,BYTE PTR [eax]
  43cb5d:	push   ebp
  43cb5e:	nop
  43cb5f:	mov    dl,0x36
  43cb61:	push   ebp
  43cb62:	test   al,0xba
  43cb64:	ss push ebp
  43cb66:	mov    al,ds:0x98e53602
  43cb6b:	or     dh,BYTE PTR [esi]
  43cb6d:	add    BYTE PTR [eax+0x10],ch
  43cb70:	aam    0x3a
  43cb72:	jl     0x43cb84
  43cb74:	fdivr  QWORD PTR [edx]
  43cb76:	in     al,0x10
  43cb78:	in     al,0x3a
  43cb7a:	test   BYTE PTR [eax],dl
  43cb7c:	hlt    
  43cb7d:	cmp    bh,BYTE PTR [eax+edx*1-0x4]
  43cb81:	cmp    al,BYTE PTR [ecx+edx*1+0x4]
  43cb85:	cmp    edi,DWORD PTR [ecx+edx*1]
  43cb88:	cmp    ebx,DWORD PTR fs:[ecx+edx*1]
  43cb8c:	ins    BYTE PTR es:[edi],dx
  43cb8d:	cmp    esp,DWORD PTR [eax+edx*1+0x111c3b74]
  43cb94:	jl     0x43cbd1
  43cb96:	test   BYTE PTR [ecx],dl
  43cb98:	test   BYTE PTR [ebx],bh
  43cb9a:	jl     0x43cbad
  43cb9c:	mov    WORD PTR [ebx],?
  43cb9e:	test   BYTE PTR [eax],dl
  43cba0:	xchg   esp,eax
  43cba1:	cmp    ebx,DWORD PTR [ecx+edx*1]
  43cba4:	mov    eax,0xc011083b
  43cba9:	cmp    ebp,DWORD PTR [ecx+edx*1]
  43cbac:	in     al,0x3b
  43cbae:	xchg   esp,eax
  43cbaf:	adc    dh,ah
  43cbb1:	cmp    al,0xdc
  43cbb3:	adc    esp,edi
  43cbb5:	cmp    al,0x0
  43cbb7:	add    ah,al
  43cbb9:	adc    al,BYTE PTR [edi*1+0x3d0c12bc]
  43cbc0:	les    edx,FWORD PTR [edx]
  43cbc2:	adc    al,0x3d
  43cbc4:	pushf  
  43cbc5:	adc    ebx,DWORD PTR [edi*1+0x3d2412e4]
  43cbcc:	mov    ah,0x35
  43cbce:	stc    
  43cbcf:	dec    DWORD PTR [eax-0x67fffffa]
  43cbd5:	sbb    DWORD PTR [eax-0x77e5ffcc],eax
  43cbdb:	xor    al,0xe8
  43cbdd:	sbb    DWORD PTR [eax-0x17e62fcc],edx
  43cbe3:	xor    al,0x9c
  43cbe5:	sbb    ebx,DWORD PTR ds:0x17ea9d35
  43cbeb:	clc    
  43cbec:	mov    al,0xde
  43cbee:	push   ss
  43cbef:	dec    ebx
  43cbf0:	stos   DWORD PTR es:[edi],eax
  43cbf1:	cmp    BYTE PTR [edi],dl
  43cbf3:	stc    
  43cbf4:	xchg   ebx,eax
  43cbf5:	add    eax,0xb48a4d15
  43cbfa:	or     esp,edi
  43cbfc:	test   BYTE PTR [ebx-0x16784cf6],dh
  43cc02:	or     DWORD PTR [ecx+edi*2+0x62],esp
  43cc06:	or     BYTE PTR [edx+0x5908eb71],dh
  43cc0c:	push   0x63331010
  43cc11:	sahf   
  43cc12:	push   cs
  43cc13:	data16 fld TBYTE PTR [ebx]
  43cc16:	setb   bl
  43cc19:	icebp  
  43cc1a:	push   cs
  43cc1b:	int3   
  43cc1c:	add    BYTE PTR [eax],al
  43cc1e:	retf   
  43cc1f:	sbb    BYTE PTR [edi],cl
  43cc21:	fcmovnb st,st(3)
  43cc23:	mov    dh,0xf
  43cc25:	or     eax,0x240fc1ba
  43cc2a:	mov    dl,0x18
  43cc2c:	cmovae ebp,DWORD PTR [edx-0x5da2f112]
  43cc33:	inc    edx
  43cc34:	vmwrite ebx,DWORD PTR [edx-0x62fff184]
  43cc3b:	stos   DWORD PTR es:[edi],eax
  43cc3c:	pushf  
  43cc3d:	dec    edx
  43cc3f:	inc    edx
  43cc40:	std    
  43cc41:	call   FWORD PTR [ebp+0x6d651407]
  43cc47:	cs adc al,0xbf
  43cc4a:	ins    DWORD PTR es:[edi],dx
  43cc4b:	jl     0x43cc60
  43cc4d:	fild   QWORD PTR [ebp-0x43]
  43cc50:	or     eax,0xcf96c1e
  43cc55:	pop    ebx
  43cc56:	int3   
  43cc57:	adc    cl,BYTE PTR ds:0xd2ccc69
  43cc5d:	nop
  43cc5e:	int3   
  43cc5f:	lock or al,0xc6
  43cc62:	int3   
  43cc63:	add    bh,BYTE PTR [ecx]
  43cc65:	adc    edx,DWORD PTR [esi-0xe]
  43cc68:	xchg   ebp,eax
  43cc69:	push   ss
  43cc6a:	sub    esi,ebp
  43cc6c:	sub    edx,DWORD PTR [esi]
  43cc6e:	push   0xb714dcf5
  43cc73:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc75:	adc    al,0xe2
  43cc77:	repz mov edx,0x4cf41914
  43cc7d:	adc    eax,0x17a0f43d
  43cc82:	add    BYTE PTR [eax],al
  43cc84:	sub    bh,dh
  43cc86:	adc    ebx,DWORD PTR [eax]
  43cc88:	leave  
  43cc89:	cmc    
  43cc8a:	xchg   edx,eax
  43cc8b:	push   ss
  43cc8c:	adc    dh,dh
  43cc8e:	loop   0x43cca9
  43cc90:	mov    edi,eax
  43cc92:	mov    eax,0xaaf86c19
  43cc97:	sbb    DWORD PTR [ebx-0x8],esp
  43cc9a:	xchg   ebx,eax
  43cc9b:	sbb    DWORD PTR ds:0x181a60f9,ebx
  43cca1:	stc    
  43cca2:	dec    ebp
  43cca3:	sbb    ah,BYTE PTR [edx]
  43cca5:	stc    
  43cca6:	mov    BYTE PTR [ecx],bl
  43cca8:	inc    esi
  43cca9:	stc    
  43ccaa:	xchg   ebp,eax
  43ccab:	sbb    DWORD PTR ds:0xde1991f9,esi
  43ccb1:	clc    
  43ccb2:	pushf  
  43ccb3:	sbb    edx,edx
  43ccb5:	clc    
  43ccb6:	cdq    
  43ccb7:	sbb    ecx,edi
  43ccb9:	clc    
  43ccba:	lds    ebx,FWORD PTR [ecx]
  43ccbc:	mov    edx,0xce19c0f8
  43ccc1:	clc    
  43ccc2:	lods   eax,DWORD PTR ds:[esi]
  43ccc3:	sbb    eax,eax
  43ccc5:	clc    
  43ccc6:	in     eax,dx
  43ccc7:	sbb    BYTE PTR [eax+0x5e18dbf7],ch
  43cccd:	neg    DWORD PTR [ecx+ebx*1]
  43ccd0:	dec    esi
  43ccd1:	test   DWORD PTR [ecx],0x55f72419
  43ccd7:	sbb    BYTE PTR [ecx-0x9],al
  43ccda:	sbb    BYTE PTR ss:[esi-0x9],dl
  43ccde:	jmp    FWORD PTR [ecx-0x61cf355b]
  43cce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cce5:	mov    al,0x30
  43cce7:	out    dx,eax
  43cce8:	add    BYTE PTR [eax],al
  43ccea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cceb:	jecxz  0x43cd24
  43cced:	and    DWORD PTR [ecx-0x693bc7ab],esp
  43ccf3:	xchg   DWORD PTR [edi],esi
  43ccf5:	jns    0x43cc8d
  43ccf7:	ins    BYTE PTR es:[edi],dx
  43ccf8:	aaa    
  43ccf9:	and    BYTE PTR [esi-0x59dfc833],0xdf
  43cd00:	aaa    
  43cd01:	inc    ebx
  43cd02:	xchg   esi,eax
  43cd03:	pop    es
  43cd04:	aaa    
  43cd05:	fist   WORD PTR [edi-0x5835c8e2]
  43cd0b:	out    0x36,eax
  43cd0d:	into   
  43cd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd0f:	repz rcl BYTE PTR ss:[edi-0x68a2c8aa],cl
  43cd17:	ret    0x3436
  43cd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd1b:	scas   eax,DWORD PTR es:[edi]
  43cd1c:	ss out dx,eax
  43cd1e:	mov    al,ds:0x989d3619
  43cd23:	pop    eax
  43cd24:	mov    DWORD PTR ss:[eax-0x58a4c9d2],edx
  43cd2b:	test   DWORD PTR ds:0x357ba794,esi
  43cd31:	mov    ah,0x97
  43cd33:	loopne 0x43cd6a
  43cd35:	mov    ebp,0xbe35af97
  43cd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd3b:	mov    ecx,0x14a7e635
  43cd40:	xor    eax,0x352097d2
  43cd45:	cmc    
  43cd46:	xchg   edi,eax
  43cd47:	clc    
  43cd48:	xor    al,0x3a
  43cd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd4b:	push   edi
  43cd4c:	xor    eax,0xa600003e
  43cd51:	and    esi,DWORD PTR ds:0x34939679
  43cd57:	outs   dx,BYTE PTR ds:[esi]
  43cd58:	xchg   esi,eax
  43cd59:	jo     0x43cd8f
  43cd5b:	add    bl,bl
  43cd5d:	or     esi,ecx
  43cd5f:	cmp    edi,DWORD PTR [edi]
  43cd61:	or     ah,al
  43cd63:	cmp    ebp,DWORD PTR [edx-0x70c392ee]
  43cd69:	push   cs
  43cd6a:	jg     0x43cda8
  43cd6c:	stc    
  43cd6d:	adc    al,bl
  43cd6f:	cmp    al,0xb7
  43cd71:	adc    al,BYTE PTR [eax]
  43cd73:	cmp    eax,0x3d0d137a
  43cd78:	fwait
  43cd79:	adc    esi,DWORD PTR ds:0x78136f3d
  43cd7f:	cmp    eax,0x3d8313b9
  43cd84:	in     eax,0x13
  43cd86:	mov    ds:0xcc13c53d,eax
  43cd8b:	cmp    eax,0x3ddf1375
  43cd90:	mov    al,ds:0x5a3e0913
  43cd95:	adc    BYTE PTR [esi+edi*1],ch
  43cd98:	call   0x798230ac
  43cd9d:	or     al,0x6
  43cd9f:	aas    
  43cda0:	mov    eax,0xa53fc30d
  43cda5:	or     eax,0xcf13fcf
  43cdaa:	add    BYTE PTR [eax],al
  43cdac:	add    al,0x92
  43cdae:	clc    
  43cdaf:	inc    DWORD PTR [edx+eax*1+0x0]
  43cdb3:	add    BYTE PTR [eax],al
  43cdb5:	add    BYTE PTR [ebp+0x16],dl
  43cdb8:	pop    es
  43cdb9:	xor    DWORD PTR [eax-0x64ceb6e9],edi
  43cdbf:	pop    ss
  43cdc0:	xor    DWORD PTR [ecx],0x31a81668
  43cdc6:	dec    eax
  43cdc7:	push   ss
  43cdc8:	mov    bl,0x31
  43cdca:	sti    
  43cdcb:	push   ss
  43cdcc:	into   
  43cdcd:	xor    DWORD PTR [ecx],edx
  43cdcf:	pop    ss
  43cdd0:	or     DWORD PTR [edx],esi
  43cdd2:	mov    al,0x13
  43cdd4:	sbb    eax,0xede9d32
  43cdd9:	cmp    DWORD PTR [edi+0x1a],ebp
  43cddc:	push   cs
  43cddd:	test   bh,cl
  43cddf:	and    DWORD PTR [edi],ecx
  43cde1:	mov    bh,0xcf
  43cde3:	gs push cs
  43cde5:	fmul   st(7),st
  43cde7:	(bad)  
  43cde8:	or     eax,0xdf7ce5e
  43cded:	das    
  43cdee:	mov    cl,0x1c
  43cdf0:	sbb    BYTE PTR [ecx-0x57],al
  43cdf3:	outs   dx,BYTE PTR ds:[esi]
  43cdf4:	adc    BYTE PTR [eax-0x4f],dh
  43cdf7:	popf   
  43cdf8:	adc    bl,dl
  43cdfa:	test   eax,0x90031146
  43cdff:	fst    DWORD PTR [edi]
  43ce01:	data16 mov BYTE PTR [edi+0x17],dh
  43ce05:	xchg   ebx,eax
  43ce06:	nop
  43ce07:	push   edi
  43ce08:	sbb    cl,cl
  43ce0a:	mov    BYTE PTR [eax+ebx*1],dl
  43ce0d:	push   DWORD PTR [eax-0x5f]
  43ce10:	adc    al,BYTE PTR [eax+0x6b]
  43ce13:	ret    0x6712
  43ce16:	jae    0x43cd9c
  43ce18:	adc    bl,BYTE PTR [ebx-0xd950000]
  43ce1e:	adc    ah,bl
  43ce20:	rcl    DWORD PTR [edi],cl
  43ce22:	adc    ebp,DWORD PTR [ecx]
  43ce24:	retf   0x1176
  43ce27:	dec    esp
  43ce28:	ror    BYTE PTR [ecx+0x4eca6a11],cl
  43ce2e:	adc    ch,BYTE PTR [eax-0x7ced9e4e]
  43ce34:	mov    ch,0x84
  43ce36:	or     ecx,DWORD PTR [ecx-0x5c]
  43ce39:	es add eax,0x617a4ef
  43ce3f:	inc    ebx
  43ce40:	xchg   edi,eax
  43ce41:	lock add eax,0x57397bf
  43ce47:	fadd   QWORD PTR [edi-0x7966f8fd]
  43ce4d:	das    
  43ce4e:	pop    es
  43ce4f:	stc    
  43ce50:	jbe    0x43ce54
  43ce52:	lds    ecx,FWORD PTR [edi]
  43ce54:	pop    esp
  43ce55:	(bad)  
  43ce56:	adc    BYTE PTR ss:[esi+edi*8+0x33],cl
  43ce5b:	adc    BYTE PTR [esi+edi*8],dh
  43ce5e:	adc    BYTE PTR [eax],dl
  43ce60:	pop    ss
  43ce61:	call   FWORD PTR [eax+edx*1+0x3a]
  43ce65:	(bad)  
  43ce66:	jg     0x43ce78
  43ce68:	lods   eax,DWORD PTR ds:[esi]
  43ce69:	std    
  43ce6a:	mov    dl,0xe
  43ce6c:	push   ss
  43ce6d:	(bad)  
  43ce6e:	push   ecx
  43ce6f:	push   cs
  43ce70:	inc    edx
  43ce71:	std    
  43ce72:	out    0xc3,al
  43ce74:	jb     0x43ce32
  43ce76:	mov    dh,0x3
  43ce78:	popf   
  43ce79:	add    cl,dh
  43ce7b:	adc    esi,DWORD PTR [eax]
  43ce7d:	repz pop ss
  43ce7f:	adc    eax,DWORD PTR [eax]
  43ce81:	add    bh,al
  43ce83:	icebp  
  43ce84:	jne    0x43ce99
  43ce86:	out    0xf0,eax
  43ce88:	into   
  43ce89:	adc    edx,edi
  43ce8b:	lock jns 0x43cea0
  43ce8e:	jo     0x43ce7f
  43ce90:	mov    ch,0x10
  43ce92:	test   dh,dh
  43ce94:	sbb    BYTE PTR cs:[ebp+esi*8-0x9cde892],al
  43ce9c:	rcl    DWORD PTR ds:0x14e6f4e4,1
  43cea2:	and    bh,bl
  43cea4:	pop    esi
  43cea5:	or     al,0x3f
  43cea7:	cli    
  43cea8:	sbb    DWORD PTR [ebx],ecx
  43ceaa:	add    al,0xfa
  43ceac:	inc    ebp
  43cead:	or     edx,esi
  43ceaf:	(bad)  
  43ceb0:	scas   eax,DWORD PTR es:[edi]
  43ceb1:	push   cs
  43ceb2:	inc    ecx
  43ceb3:	(bad)  
  43ceb4:	sbb    cl,BYTE PTR [esi]
  43ceb6:	xchg   esp,edi
  43ceb8:	ror    BYTE PTR ds:0xd4ffb5f,cl
  43cebe:	xor    eax,0x9d0ca8fc
  43cec3:	add    ah,bh
  43cec5:	mov    bl,0xd2
  43cec7:	mov    ebx,0x29d044a
  43cecc:	add    ah,ah
  43cece:	scas   al,BYTE PTR es:[edi]
  43cecf:	fs das 
  43ced1:	les    ecx,FWORD PTR [esi-0x70a6d0cb]
  43ced7:	shr    BYTE PTR [esi],0xf8
  43ceda:	mov    WORD PTR [ebx],ds
  43cedc:	and    ecx,DWORD PTR cs:[edi-0x50ccd1b3]
  43cee3:	and    ch,BYTE PTR [esi]
  43cee5:	sti    
  43cee6:	add    BYTE PTR [eax],al
  43cee8:	lods   al,BYTE PTR ds:[esi]
  43cee9:	xor    ebp,DWORD PTR [esi]
  43ceeb:	push   0x532d81ac
  43cef0:	lods   al,BYTE PTR ds:[esi]
  43cef1:	outs   dx,BYTE PTR ds:[esi]
  43cef2:	sub    eax,0x2ce68c7d
  43cef7:	and    DWORD PTR [edi+eax*2+0x7d8da32d],ecx
  43cefe:	sub    al,0xba
  43cf00:	mov    bh,BYTE PTR ds:0x1b23034
  43cf06:	xor    edi,DWORD PTR [ecx]
  43cf08:	stos   DWORD PTR es:[edi],eax
  43cf09:	or     eax,0x4b97fd31
  43cf0e:	aaa    
  43cf0f:	mov    bl,0x97
  43cf11:	mov    DWORD PTR [esi],esi
  43cf13:	outs   dx,DWORD PTR ds:[esi]
  43cf14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf15:	retf   
  43cf16:	ss daa 
  43cf18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf19:	push   ebx
  43cf1a:	adc    BYTE PTR ss:[esp+eax*8+0x54941e35],0x35
  43cf23:	mov    fs,WORD PTR [ebp-0x5aedcb9b]
  43cf29:	pop    ss
  43cf2a:	cmp    al,0x7a
  43cf2c:	call   0x392a:0x90b93b6f
  43cf33:	jmp    0x3a3c8a36
  43cf38:	cdq    
  43cf39:	add    al,BYTE PTR [eax]
  43cf3b:	push   esp
  43cf3c:	xchg   ecx,eax
  43cf3d:	push   ss
  43cf3e:	das    
  43cf3f:	mov    ds:0x592d8a88,eax
  43cf44:	mov    dl,0x86
  43cf46:	sub    al,0x0
  43cf48:	push   ebp
  43cf49:	adc    edi,DWORD PTR [edx+0x3f000033]
  43cf4f:	adc    bh,BYTE PTR [edx+0x2f109e34]
  43cf55:	ss pop edi
  43cf57:	bndstx [eax],(bad)
  43cf5a:	push   0xe
  43cf5c:	push   ebx
  43cf5d:	cmp    BYTE PTR [esi+ecx*1],ah
  43cf60:	sar    BYTE PTR [eax],cl
  43cf62:	mov    WORD PTR ds:0x853399a,cs
  43cf68:	jnp    0x43cfa5
  43cf6a:	cli    
  43cf6b:	or     DWORD PTR [ebp+0x450af43b],edi
  43cf71:	cmp    eax,0x3e820c6e
  43cf76:	int    0xc
  43cf78:	mov    ds:0xd103e,al
  43cf7d:	aas    
  43cf7e:	inc    ebx
  43cf7f:	or     eax,0xd503f52
  43cf84:	add    BYTE PTR [eax],al
  43cf86:	inc    esp
  43cf87:	(bad)  
  43cf88:	clc    
  43cf89:	push   DWORD PTR [eax]
  43cf8b:	push   es
  43cf8c:	add    BYTE PTR [eax],al
  43cf8e:	add    BYTE PTR [esi],dl
  43cf90:	push   eax
  43cf91:	xor    DWORD PTR [ebx],edx
  43cf93:	adc    BYTE PTR [ebp+0x400f9431],dh
  43cf99:	xor    ch,BYTE PTR [eax+0x6a33c710]
  43cf9f:	adc    esi,ebx
  43cfa1:	xor    ecx,DWORD PTR [ecx+edx*1+0x9ff3404]
  43cfa8:	pop    ds
  43cfa9:	xor    eax,0x367c137f
  43cfae:	jne    0x43cfc4
  43cfb0:	scas   eax,DWORD PTR es:[edi]
  43cfb1:	add    BYTE PTR ss:[eax],al
  43cfb4:	enter  0xfe14,0x37
  43cfb8:	dec    edx
  43cfb9:	push   cs
  43cfba:	js     0x43cff4
  43cfbc:	jns    0x43cfc4
  43cfbe:	dec    ebx
  43cfbf:	cmp    DWORD PTR [eax+0x7],edx
  43cfc2:	jp     0x43cffd
  43cfc4:	popf   
  43cfc5:	lea    ecx,[ecx]
  43cfc7:	cld    
  43cfc8:	xchg   esi,eax
  43cfc9:	mov    bl,0x0
  43cfcb:	inc    edx
  43cfcc:	xchg   ecx,eax
  43cfcd:	das    
  43cfce:	add    DWORD PTR [eax-0x78],eax
  43cfd1:	arpl   WORD PTR [edi],ax
  43cfd3:	icebp  
  43cfd4:	add    cl,0x6
  43cfd7:	push   edi
  43cfd8:	jp     0x43cffc
  43cfda:	push   es
  43cfdb:	add    BYTE PTR [ebp-0x55010355],bl
  43cfe1:	jecxz  0x43cfe6
  43cfe3:	add    BYTE PTR [ebp-0x32a8f328],bl
  43cfe9:	dec    ebp
  43cfea:	adc    al,0x2f
  43cfec:	iret   
  43cfed:	call   0x63131c03
  43cff2:	adc    bh,BYTE PTR [edi-0x32]
  43cff5:	stos   DWORD PTR es:[edi],eax
  43cff6:	or     eax,0xd04b23e
  43cffb:	xchg   ecx,eax
  43cffc:	stos   BYTE PTR es:[edi],al
  43cffd:	dec    ebx
  43cffe:	push   cs
  43cfff:	pop    ds
  43d000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d001:	jp     0x43d007
  43d003:	je     0x43cfaa
  43d005:	push   ds
  43d006:	add    eax,0x5279593
  43d00b:	sahf   
  43d00c:	xchg   ebp,eax
  43d00d:	xchg   ebp,eax
  43d00e:	add    al,0xb0
  43d010:	test   DWORD PTR [ecx],esi
  43d012:	add    eax,0x4e785bc
  43d017:	mov    BYTE PTR [eax],0x0
  43d01a:	jne    0x43d038
  43d01c:	add    eax,0x50d75d7
  43d021:	out    0x65,eax
  43d023:	or     DWORD PTR ds:0xbcb6418,eax
  43d029:	and    esp,edx
  43d02b:	jbe    0x43d038
  43d02d:	xor    edx,esp
  43d02f:	les    ecx,FWORD PTR [ebx]
  43d031:	aas    
  43d032:	les    esp,FWORD PTR [eax+0xb]
  43d035:	dec    ecx
  43d036:	les    edx,FWORD PTR [esi+0x7fb45a0b]
  43d03c:	or     ebp,DWORD PTR [ebx-0x4c]
  43d03f:	add    bl,BYTE PTR [ebx+0xb]
  43d042:	jb     0x43d03f
  43d044:	mov    dh,0xb
  43d046:	mov    edi,0x6e0e12fc
  43d04b:	cld    
  43d04c:	lods   eax,DWORD PTR ds:[esi]
  43d04d:	push   cs
  43d04e:	xchg   edi,eax
  43d04f:	std    
  43d050:	push   ds
  43d051:	or     eax,0xd9bfd6b
  43d056:	popf   
  43d057:	add    ah,bh
  43d059:	repz mov ebx,0x9d0406b8
  43d05f:	add    cl,BYTE PTR [esi+0xb]
  43d062:	add    bh,ch
  43d064:	int3   
  43d065:	push   es
  43d066:	imul   esi,edi,0xf91d06fc
  43d06c:	inc    esi
  43d06d:	or     dl,BYTE PTR [ecx-0x7]
  43d070:	stos   DWORD PTR es:[edi],eax
  43d071:	or     bh,BYTE PTR [ebx-0x7]
  43d074:	add    cl,BYTE PTR [ecx]
  43d076:	sub    al,0xf8
  43d078:	out    0x23,al
  43d07a:	jp     0x43d034
  43d07c:	or     al,BYTE PTR [ebx]
  43d07e:	add    BYTE PTR [eax],al
  43d080:	popf   
  43d081:	add    bl,BYTE PTR [esp+edx*1+0x139ef1d8]
  43d088:	dec    ecx
  43d089:	repnz mov ebp,0x5bf42915
  43d08f:	adc    ah,BYTE PTR [eax]
  43d091:	icebp  
  43d092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d093:	adc    BYTE PTR [ecx],bh
  43d095:	lock mov ds:0xbbfae80b,eax
  43d09b:	or     edx,DWORD PTR [eax]
  43d09d:	sti    
  43d09e:	jl     0x43d0ac
  43d0a0:	add    edi,ebx
  43d0a2:	and    ecx,DWORD PTR [eax*4-0x44f57907]
  43d0a9:	stc    
  43d0aa:	or     BYTE PTR [edx],0x8e
  43d0ad:	stc    
  43d0ae:	lea    ecx,[edx]
  43d0b0:	xchg   esp,eax
  43d0b1:	stc    
  43d0b2:	push   0xb
  43d0b4:	and    bh,dl
  43d0b6:	push   0xfffa100b
  43d0bb:	push   eax
  43d0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d0bd:	fwait
  43d0be:	ss dec ebx
  43d0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d0c1:	popa   
  43d0c2:	ss xchg ebp,eax
  43d0c4:	xchg   edi,eax
  43d0c5:	addr16 ss xchg edi,eax
  43d0c8:	xchg   edi,eax
  43d0c9:	ins    DWORD PTR es:[edi],dx
  43d0ca:	ss test eax,0xa336c3a7
  43d0d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d0d1:	leave  
  43d0d2:	ss popf 
  43d0d4:	xchg   edi,eax
  43d0d5:	iret   
  43d0d6:	ss lahf 
  43d0d8:	xchg   edi,eax
  43d0d9:	aad    0x36
  43d0db:	shl    DWORD PTR [edi-0x5844c955],0xb1
  43d0e2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43d0e4:	add    BYTE PTR [eax],al
  43d0e6:	xchg   edi,eax
  43d0e7:	mov    bh,0x36
  43d0e9:	out    0x90,eax
  43d0eb:	std    
  43d0ec:	xor    eax,0x3613a8f9
  43d0f1:	repz mov al,ds:0x98cd3619
  43d0f7:	fbstp  TBYTE PTR ds:0x35e590cf
  43d0fd:	mov    cl,0xa8
  43d0ff:	sti    
  43d100:	xor    eax,0x3641a32b
  43d105:	mov    ch,0x98
  43d107:	inc    edi
  43d108:	ss mov bh,0x90
  43d10b:	dec    ebp
  43d10c:	ss leave 
  43d10e:	test   al,0x23
  43d110:	ss ret 
  43d112:	mov    al,ds:0x98bd3629
  43d117:	das    
  43d118:	ss mov edi,0x61363590
  43d11e:	test   al,0x8b
  43d120:	xor    eax,0x3591a05b
  43d125:	test   DWORD PTR [eax-0x6fb8ca69],ebx
  43d12b:	pop    ebp
  43d12c:	xor    eax,0x3573a859
  43d131:	push   ebx
  43d132:	mov    al,ds:0xb8003579
  43d137:	add    eax,0x5b23ac1
  43d13c:	retf   
  43d13d:	cmp    cl,BYTE PTR [ebp+eax*1+0x5a63ad5]
  43d144:	fistp  QWORD PTR [edx]
  43d146:	ror    BYTE PTR [ebx],1
  43d148:	jmp    0xca43d187
  43d14d:	or     esi,ebx
  43d14f:	cmp    al,ah
  43d151:	or     edi,ebp
  43d153:	cmp    bh,BYTE PTR [esi-0x17c4f8f5]
  43d159:	or     edx,DWORD PTR [ecx]
  43d15b:	cmp    esp,edx
  43d15d:	or     ebx,DWORD PTR [ebx]
  43d15f:	cmp    ebx,DWORD PTR [ebx+ecx*1+0xbb63b25]
  43d166:	das    
  43d167:	cmp    eax,eax
  43d169:	or     edi,DWORD PTR [ecx]
  43d16b:	cmp    edi,DWORD PTR [edx+0xb]
  43d16e:	inc    ebx
  43d16f:	cmp    edx,esp
  43d171:	or     DWORD PTR [ebp+0x3b],ecx
  43d174:	into   
  43d175:	or     DWORD PTR [edi+0x3b],edx
  43d178:	cwde   
  43d179:	or     DWORD PTR [ecx+0x3b],esp
  43d17c:	xchg   edx,eax
  43d17d:	or     DWORD PTR [ebx+0x3b],ebp
  43d180:	ins    BYTE PTR es:[edi],dx
  43d181:	or     DWORD PTR [ebp+0x3b],esi
  43d184:	push   es
  43d185:	or     bh,BYTE PTR [edi+0x3b]
  43d188:	lock or DWORD PTR [ecx-0x6cf615c5],ecx
  43d18f:	cmp    esp,DWORD PTR [edx+ecx*1]
  43d192:	popf   
  43d193:	cmp    edx,eax
  43d195:	or     DWORD PTR [ecx-0x3bf5dcc5],ebp
  43d19b:	cmp    esi,DWORD PTR [eax+0x9]
  43d19e:	retf   0x8d3b
  43d1a1:	or     edi,edx
  43d1a3:	cmp    ebx,edx
  43d1a5:	or     esp,ebp
  43d1a7:	cmp    eax,DWORD PTR [edi+0x363bf109]
  43d1ad:	(bad)  
  43d1ae:	(bad)  
  43d1af:	cmp    eax,DWORD PTR [eax]
  43d1b1:	add    BYTE PTR [ebp-0x2edfff4d],bl
  43d1b7:	mov    ebp,0x79c92c00
  43d1bc:	add    BYTE PTR [edi+0x590844c1],dl
  43d1c2:	mov    ebx,0xb3a50285
  43d1c7:	test   eax,0xf1aa4001
  43d1cc:	add    BYTE PTR [ebx-0x5e],ah
  43d1cf:	sub    eax,0x859a9a02
  43d1d4:	add    DWORD PTR [edx-0x45fe726e],ebp
  43d1da:	mov    ah,BYTE PTR [ebp+0x1]
  43d1dd:	add    BYTE PTR [ebp-0x4500f355],bl
  43d1e3:	(bad)  
  43d1e4:	cld    
  43d1e5:	call   FWORD PTR [ebp+0x6d55140e]
  43d1eb:	clc    
  43d1ec:	adc    dl,BYTE PTR [edi+0x6c]
  43d1ef:	add    eax,0xeecf1413
  43d1f4:	or     eax,0xe0fcf5d
  43d1f9:	test   bh,cl
  43d1fb:	and    ecx,DWORD PTR [edi]
  43d1fd:	call   0xebaf:0xe70f51cf
  43d204:	or     al,0x41
  43d206:	scas   al,BYTE PTR es:[edi]
  43d207:	inc    edi
  43d208:	push   cs
  43d209:	popa   
  43d20a:	mov    cl,0x30
  43d20c:	or     DWORD PTR [edi-0x53f4c957],ecx
  43d212:	xchg   ebx,eax
  43d213:	cdq    
  43d214:	or     bh,BYTE PTR [eax-0x15750000]
  43d21a:	or     cl,al
  43d21c:	xchg   ebx,eax
  43d21d:	in     eax,dx
  43d21e:	or     ah,al
  43d220:	mov    edi,DWORD PTR [edi]
  43d222:	or     esp,esi
  43d224:	jae    0x43d21f
  43d226:	or     bh,BYTE PTR [eax]
  43d228:	push   0xffffffa5
  43d22a:	or     DWORD PTR [ecx+0x72],eax
  43d22d:	add    dh,BYTE PTR [ecx-0x7f1236f2]
  43d233:	push   cs
  43d234:	sub    ebp,0xffffff96
  43d237:	push   cs
  43d238:	xchg   ebp,eax
  43d239:	in     eax,dx
  43d23a:	push   0x3ed3b0e
  43d23f:	push   cs
  43d240:	(bad)  
  43d243:	or     eax,DWORD PTR [edx+0x90b72fa]
  43d249:	cli    
  43d24a:	dec    ebx
  43d24b:	or     esi,DWORD PTR [edx+edi*8]
  43d24e:	les    ecx,FWORD PTR [esi+edi*2]
  43d251:	sti    
  43d252:	pop    esi
  43d253:	or     esi,DWORD PTR [eax]
  43d255:	sti    
  43d256:	or     BYTE PTR [ebx],0xdc
  43d259:	cli    
  43d25a:	icebp  
  43d25b:	or     DWORD PTR [edx+0x4e0a03f8],ebp
  43d261:	clc    
  43d262:	stos   BYTE PTR es:[edi],al
  43d263:	or     bl,dl
  43d265:	test   ecx,0x38f7b60a
  43d26b:	or     ecx,ebp
  43d26d:	clc    
  43d26e:	mov    dl,0x9
  43d270:	fwait
  43d271:	div    bh
  43d273:	pop    es
  43d274:	mov    dl,0xf6
  43d276:	mov    esp,0x15f6d907
  43d27b:	or     BYTE PTR [eax],al
  43d27d:	add    BYTE PTR [ebp-0x9],bl
  43d280:	or     DWORD PTR [eax],0xffffffa9
  43d283:	cmc    
  43d284:	sub    eax,DWORD PTR [edi]
  43d286:	daa    
  43d287:	test   BYTE PTR [ecx+0x7],0x64
  43d28b:	neg    al
  43d28d:	add    eax,0x691f4f7
  43d292:	dec    ecx
  43d293:	cmc    
  43d294:	dec    edi
  43d295:	push   es
  43d296:	dec    ebx
  43d297:	cmc    
  43d298:	dec    edi
  43d299:	push   es
  43d29a:	push   esp
  43d29b:	cmc    
  43d29c:	test   DWORD PTR [esi+ebp*4],0xa304ddf3
  43d2a3:	repz test DWORD PTR [edi+ecx*8],0x99bbfff3
  43d2ab:	cmp    DWORD PTR ss:[edx-0x60],ebp
  43d2af:	jnp    0x43d2e9
  43d2b1:	sbb    DWORD PTR [eax-0x5fbac768],0x66
  43d2b8:	cmp    BYTE PTR [edi-0x68],dl
  43d2bb:	sar    BYTE PTR [eax],cl
  43d2bd:	adc    DWORD PTR [eax+0x5ee90002],esp
  43d2c3:	mov    bl,0xf8
  43d2c5:	mov    eax,gs:0x8eb70002
  43d2cb:	jge    0x43d2fc
  43d2cd:	cmp    dl,BYTE PTR [ecx-0x714bd042]
  43d2d3:	into   
  43d2d4:	das    
  43d2d5:	ret    
  43d2d6:	scas   al,BYTE PTR es:[edi]
  43d2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d2d8:	das    
  43d2d9:	fldcw  WORD PTR [esi-0x5130d050]
  43d2df:	adc    ebp,DWORD PTR [edi]
  43d2e1:	adc    eax,DWORD PTR [eax]
  43d2e3:	add    BYTE PTR [esi-0x71e2d11b],ch
  43d2e9:	fisubr DWORD PTR [esi]
  43d2eb:	daa    
  43d2ec:	(bad)  
  43d2ed:	and    ebp,DWORD PTR [esi]
  43d2ef:	push   edi
  43d2f0:	mov    ecx,ds
  43d2f2:	sub    eax,0x2cf18c94
  43d2f7:	adc    DWORD PTR [ecx+edi*1+0x2bad672d],ebp
  43d2fe:	xor    edi,DWORD PTR [ecx-0x77cd2e65]
  43d304:	xchg   ebx,eax
  43d305:	in     al,dx
  43d306:	xor    DWORD PTR [ecx],edx
  43d308:	stos   DWORD PTR es:[edi],eax
  43d309:	and    esi,DWORD PTR [edx]
  43d30b:	icebp  
  43d30c:	mov    al,ds:0x98593238
  43d311:	xchg   ecx,eax
  43d312:	xor    DWORD PTR [esi-0x6dcea170],eax
  43d318:	test   al,0x63
  43d31a:	xor    DWORD PTR [ecx],ebp
  43d31c:	mov    al,ds:0x985131c4
  43d321:	mov    ah,0x31
  43d323:	add    BYTE PTR [ebp+0x6],cl
  43d326:	pop    es
  43d327:	aaa    
  43d328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d329:	add    eax,0x6343728
  43d32e:	ins    DWORD PTR es:[edi],dx
  43d32f:	aaa    
  43d330:	rol    BYTE PTR [esi],1
  43d332:	ret    0x6137
  43d335:	push   es
  43d336:	cmp    DWORD PTR [eax],edi
  43d338:	xchg   esi,eax
  43d339:	pop    es
  43d33a:	idiv   BYTE PTR [eax]
  43d33c:	stc    
  43d33d:	pop    es
  43d33e:	fwait
  43d33f:	cmp    bl,BYTE PTR [ecx+ecx*1-0x448c3b0]
  43d346:	push   0x400003f
  43d34b:	out    dx,eax
  43d34c:	clc    
  43d34d:	call   FWORD PTR [eax-0x1]
  43d350:	(bad)  
  43d351:	inc    DWORD PTR [ebx+0xf]
  43d354:	ins    DWORD PTR es:[edi],dx
  43d355:	xor    BYTE PTR [ecx],dl
  43d357:	scas   al,BYTE PTR es:[edi]
  43d358:	out    dx,al
  43d359:	xor    ch,dl
  43d35b:	lods   eax,DWORD PTR ds:[esi]
  43d35c:	push   ebp
  43d35d:	xor    DWORD PTR [esi-0x53],esi
  43d360:	xor    DWORD PTR [ecx],0x31c7ad21
  43d366:	add    ebp,DWORD PTR [ebp-0x534ecddc]
  43d36c:	cmp    dh,BYTE PTR [edx]
  43d36e:	jge    0x43d31c
  43d370:	dec    esi
  43d371:	xor    dh,BYTE PTR [ebx-0x54]
  43d374:	jp     0x43d3a8
  43d376:	inc    esp
  43d377:	lods   al,BYTE PTR ds:[esi]
  43d378:	int    0x32
  43d37a:	sub    eax,0x2f32e8b9
  43d37f:	mov    ecx,0xb95f3301
  43d384:	cmp    al,0x33
  43d386:	cmp    BYTE PTR [ecx-0x4646cc67],0xee
  43d38d:	xor    edi,DWORD PTR [edi-0x2dcb8c56]
  43d393:	stos   BYTE PTR es:[edi],al
  43d394:	mov    ch,0x34
  43d396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d397:	stos   BYTE PTR es:[edi],al
  43d398:	fnsave [ebx+ebp*2]
  43d39b:	stos   DWORD PTR es:[edi],eax
  43d39c:	ins    DWORD PTR es:[edi],dx
  43d39d:	xor    eax,0x89f71e9d
  43d3a2:	nop
  43d3a3:	jp     0x43d39b
  43d3a5:	mov    al,ds:0xf1f73a88
  43d3aa:	jo     0x43d378
  43d3ac:	mul    BYTE PTR [eax+0x0]
  43d3af:	add    BYTE PTR [ebx+0x1e],ch
  43d3b2:	not    cl
  43d3b4:	jae    0x43d3b6
  43d3b6:	idiv   dl
  43d3b8:	imul   edi,DWORD PTR [esi+0x29d265f5],0xfffffff5
  43d3bf:	ror    dl,cl
  43d3c1:	or     dh,ch
  43d3c3:	cmp    eax,esp
  43d3c5:	(bad)  
  43d3c6:	sti    
  43d3c7:	jl     0x43d38d
  43d3c9:	aas    
  43d3ca:	sti    
  43d3cb:	mov    bh,0xb4
  43d3cd:	fdivp  st(2),st
  43d3cf:	fidiv  DWORD PTR [esi+ebp*2+0x3ba766fa]
  43d3d6:	cli    
  43d3d7:	stos   DWORD PTR es:[edi],eax
  43d3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d3d9:	nop
  43d3da:	cli    
  43d3db:	into   
  43d3dc:	xchg   edi,eax
  43d3dd:	mov    ebx,0x4d9606fa
  43d3e2:	stc    
  43d3e3:	stos   DWORD PTR es:[edi],eax
  43d3e4:	xchg   BYTE PTR [ebp-0x7],ch
  43d3e7:	or     eax,DWORD PTR [ecx+0x79aafff1]
  43d3ed:	int3   
  43d3ee:	push   DWORD PTR [eax]
  43d3f0:	jo     0x43d46e
  43d3f2:	push   DWORD PTR [esi+0x6b]
  43d3f5:	pop    ecx
  43d3f6:	dec    ebp
  43d3f8:	bound  ebx,QWORD PTR [ebx-0x386500e4]
  43d3fe:	cld    
  43d3ff:	call   FWORD PTR [ebp-0x3274133a]
  43d405:	sbb    ebx,esi
  43d407:	jp     0x43d3d5
  43d409:	es hlt 
  43d40b:	adc    al,0xaf
  43d40d:	outs   dx,BYTE PTR ds:[esi]
  43d40e:	icebp  
  43d40f:	cwde   
  43d410:	scas   al,BYTE PTR es:[edi]
  43d411:	gs lock and al,0x0
  43d415:	add    BYTE PTR [eax-0x5587092f],dh
  43d41b:	add    dh,ch
  43d41d:	sti    
  43d41e:	adc    ch,ah
  43d420:	out    0x33,al
  43d422:	push   edx
  43d423:	mov    cl,0xa
  43d425:	add    al,0x9d
  43d427:	add    bl,dh
  43d429:	hlt    
  43d42a:	nop
  43d42b:	repz icebp 
  43d42d:	cmc    
  43d42e:	mov    esp,?
  43d430:	scas   eax,DWORD PTR es:[edi]
  43d431:	mul    dl
  43d433:	cmc    
  43d434:	inc    esi
  43d435:	clc    
  43d436:	cmp    eax,0xcdfb96f7
  43d43b:	jmp    0x240:0xeea1fb72
  43d442:	popf   
  43d443:	add    ah,bh
  43d445:	or     DWORD PTR [ebx],0xffffffb1
  43d448:	mov    esi,0xe8029d04
  43d44d:	repz adc eax,0xf2f327f2
  43d453:	icebp  
  43d454:	mov    bl,0xf4
  43d456:	fs repz and ah,dh
  43d45a:	cwde   
  43d45b:	hlt    
  43d45c:	xor    esi,esi
  43d45e:	sub    dh,ah
  43d460:	(bad)  
  43d461:	hlt    
  43d462:	add    al,0xf5
  43d464:	pop    ebp
  43d465:	clc    
  43d466:	div    ch
  43d468:	scas   al,BYTE PTR es:[edi]
  43d469:	clc    
  43d46a:	jae    0x43d463
  43d46c:	xor    eax,0x89f721f7
  43d471:	mul    DWORD PTR [ebx+0x75fcfdec]
  43d477:	in     eax,dx
  43d478:	cmc    
  43d479:	cld    
  43d47a:	add    BYTE PTR [eax],al
  43d47c:	ins    DWORD PTR es:[edi],dx
  43d47d:	in     eax,dx
  43d47e:	(bad)  
  43d480:	aad    0xeb
  43d482:	and    eax,0x1debddfd
  43d487:	std    
  43d488:	aad    0xeb
  43d48a:	xor    eax,0x1debedfd
  43d48f:	std    
  43d490:	aad    0xeb
  43d492:	add    eax,0xffebfdfd
  43d497:	add    DWORD PTR [eax+0x1b],ebp
  43d49a:	xor    eax,0x353361fa
  43d49f:	loop   0x43d4fa
  43d4a1:	sub    esi,DWORD PTR ds:0x3483506a
  43d4a7:	bound  ecx,QWORD PTR [eax+0x7b]
  43d4aa:	xor    al,0x7a
  43d4ac:	inc    eax
  43d4ad:	xchg   ebx,eax
  43d4ae:	xor    al,0x62
  43d4b0:	cmp    BYTE PTR [ebx+0x63308a34],cl
  43d4b6:	xor    al,0x82
  43d4b8:	sub    BYTE PTR [ebx+0x34],bl
  43d4bb:	jp     0x43d4dd
  43d4bd:	jae    0x43d4f3
  43d4bf:	bound  ebx,QWORD PTR [eax]
  43d4c1:	imul   esi,DWORD PTR [edx+ebp*1],0x10
  43d4c5:	ret    
  43d4c6:	xor    al,0x22
  43d4c8:	or     BYTE PTR [ebx-0x2cffc5cc],bh
  43d4ce:	xor    al,0x22
  43d4d0:	clc    
  43d4d1:	retf   0xa34
  43d4d4:	lock mov ds:0x9ae80234,al
  43d4da:	xor    al,0xfa
  43d4dc:	loope  0x43d490
  43d4de:	xor    al,0xe2
  43d4e0:	add    BYTE PTR [eax],al
  43d4e2:	fldcw  WORD PTR [edx+0x2d2ea34]
  43d4e8:	cmp    al,0xe2
  43d4ea:	retf   0x3bfa
  43d4ed:	cli    
  43d4ee:	ret    0x3c12
  43d4f1:	loop   0x43d4ad
  43d4f3:	or     bh,BYTE PTR [edx+ecx*1]
  43d4f6:	popf   
  43d4f7:	loope  0x43d534
  43d4f9:	add    bl,BYTE PTR [ebp-0x5d05c427]
  43d4ff:	repnz cmp esp,edx
  43d502:	call   0x3c41:0x9d2a3bea
  43d509:	and    bl,BYTE PTR [ebp-0x7d5dc3c7]
  43d50f:	mov    edx,0xaf17003b
  43d514:	iret   
  43d515:	cmp    al,0x3f
  43d517:	scas   eax,DWORD PTR es:[edi]
  43d518:	xlat   BYTE PTR ds:[ebx]
  43d519:	cmp    al,0x17
  43d51b:	scas   eax,DWORD PTR es:[edi]
  43d51c:	fistp  QWORD PTR [edi+ebx*1]
  43d51f:	scas   eax,DWORD PTR es:[edi]
  43d520:	out    0x3c,eax
  43d522:	imul   DWORD PTR [edi-0x5040c311]
  43d528:	idiv   DWORD PTR [edi+esi*1]
  43d52b:	mov    al,0xff
  43d52d:	cmp    al,0x3f
  43d52f:	mov    al,0x7
  43d531:	cmp    eax,0x3d0fb057
  43d536:	aas    
  43d537:	mov    al,0x17
  43d539:	cmp    eax,0x3d1faf97
  43d53e:	lahf   
  43d53f:	scas   eax,DWORD PTR es:[edi]
  43d540:	daa    
  43d541:	cmp    eax,0x3d2faff7
  43d546:	add    BYTE PTR [eax],al
  43d548:	jmp    FWORD PTR [edi-0x4fc8c2c9]
  43d54e:	aas    
  43d54f:	cmp    eax,0x3d47b03f
  43d554:	pop    ss
  43d555:	mov    al,0x4f
  43d557:	cmp    eax,0x3d57b03f
  43d55c:	pop    ss
  43d55d:	mov    al,0x5f
  43d55f:	cmp    eax,0x3d67b01f
  43d564:	ja     0x43d567
  43d566:	outs   dx,DWORD PTR ds:[esi]
  43d567:	cmp    eax,0x3d77013f
  43d56c:	aaa    
  43d56d:	add    DWORD PTR [edi+0x3d],edi
  43d570:	shr    BYTE PTR [eax+esi*8-0x66d3bc1],0xff
  43d578:	je     0x43d580
  43d57a:	add    BYTE PTR [eax],al
  43d57c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d57d:	mov    dh,0x93
  43d57f:	xor    al,0x29
  43d581:	stos   BYTE PTR es:[edi],al
  43d582:	sti    
  43d583:	xor    al,0xb7
  43d585:	stos   DWORD PTR es:[edi],eax
  43d586:	cdq    
  43d587:	xor    eax,0x36e5ac46
  43d58c:	popf   
  43d58d:	shl    ecx,1
  43d58f:	fcmovne st,st(2)
  43d591:	cdq    
  43d592:	hlt    
  43d593:	sbb    al,0xb5
  43d595:	aad    0xf4
  43d597:	dec    esp
  43d598:	mov    ch,0x1a
  43d59a:	cld    
  43d59b:	mov    esp,DWORD PTR [ebp-0x58ff04bf]
  43d5a1:	fs cmc 
  43d5a3:	loope  0x43d53c
  43d5a5:	cld    
  43d5a6:	hlt    
  43d5a7:	ss xchg esi,eax
  43d5a9:	shl    ch,cl
  43d5ab:	lods   al,BYTE PTR ds:[esi]
  43d5ac:	add    BYTE PTR [eax],al
  43d5ae:	xchg   BYTE PTR [edi-0x8],bl
  43d5b1:	out    0x81,eax
  43d5b3:	jp     0x43d5b3
  43d5b5:	hlt    
  43d5b6:	js     0x43d5b4
  43d5b8:	stc    
  43d5b9:	cmp    esi,DWORD PTR [ebx-0x6b]
  43d5bc:	cli    
  43d5bd:	outs   dx,BYTE PTR ds:[esi]
  43d5be:	imul   ebx,DWORD PTR [edx+edi*8],0xffffff8d
  43d5c2:	arpl   WORD PTR [ebx],bp
  43d5c4:	cli    
  43d5c5:	mov    al,0xdb
  43d5c7:	repnz stc 
  43d5c9:	jmp    0xb0ca:0xbf999d3
  43d5d0:	stc    
  43d5d1:	aaa    
  43d5d2:	ret    0xf964
  43d5d5:	pop    ecx
  43d5d6:	mov    edx,0xb2a7f94a
  43d5db:	or     cl,bh
  43d5dd:	loope  0x43d589
  43d5df:	pop    es
  43d5e0:	stc    
  43d5e1:	repnz mov ds:0xdafff99f,al
  43d5e7:	fwait
  43d5e8:	pop    esp
  43d5e9:	(bad)  
  43d5ea:	ror    BYTE PTR [ebx+0x129dfffc],cl
  43d5f0:	hlt    
  43d5f1:	lea    ecx,gs:[edi-0x13]
  43d5f5:	mov    dl,0x6d
  43d5f7:	jo     0x43d5e5
  43d5f9:	pop    es
  43d5fa:	ins    BYTE PTR es:[edi],dx
  43d5fb:	retf   0x23f3
  43d5fe:	ins    BYTE PTR es:[edi],dx
  43d5ff:	add    dh,bl
  43d601:	cs ins BYTE PTR es:[edi],dx
  43d603:	div    edx
  43d605:	scas   al,BYTE PTR es:[edi]
  43d606:	int3   
  43d607:	add    ah,BYTE PTR [ecx-0xc]
  43d60a:	jne    0x43d5ff
  43d60c:	xchg   ebp,eax
  43d60d:	hlt    
  43d60e:	mov    ebp,0xf1d4f0
  43d613:	add    dl,ch
  43d615:	lock add esi,edx
  43d618:	inc    ebp
  43d619:	lock xchg esi,eax
  43d61b:	icebp  
  43d61c:	push   eax
  43d61d:	lock (bad) 
  43d61f:	repnz loopne 0x43d613
  43d622:	push   ss
  43d623:	repz std 
  43d625:	icebp  
  43d626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d627:	repnz aas 
  43d629:	icebp  
  43d62a:	in     al,0xf7
  43d62c:	mov    esi,esi
  43d62e:	xchg   esi,eax
  43d62f:	not    DWORD PTR [ebx+0x7af8c9f7]
  43d635:	hlt    
  43d636:	adc    dh,dh
  43d638:	out    0xf4,eax
  43d63a:	retf   
  43d63b:	cmc    
  43d63c:	and    eax,0xfef558f4
  43d641:	repz je 0x43d639
  43d644:	push   edx
  43d645:	cmc    
  43d646:	sar    bl,1
  43d648:	mov    eax,0x70fbb5ea
  43d64d:	jmp    0xfcb5:0xe9f4fb8b
  43d654:	sub    bl,0x9a
  43d657:	stc    
  43d658:	mov    ch,al
  43d65a:	pusha  
  43d65b:	stc    
  43d65c:	fucom  st(7)
  43d65e:	push   ss
  43d65f:	stc    
  43d660:	stc    
  43d661:	out    0xea,eax
  43d663:	cli    
  43d664:	cwde   
  43d665:	jmp    0xe94ed12f
  43d66a:	sahf   
  43d66b:	stc    
  43d66c:	adc    al,0xe9
  43d66e:	mov    ds:0xbae8d6f9,al
  43d673:	stc    
  43d674:	out    0xe8,al
  43d676:	ret    0xf9
  43d679:	add    ah,al
  43d67b:	call   0xeee1d03e
  43d680:	(bad)  
  43d681:	dec    DWORD PTR [eax-0x62fe0012]
  43d687:	jmp    0x4ae0fdc7
  43d68c:	cmp    al,0x46
  43d68e:	popf   
  43d68f:	pop    ds
  43d690:	cmp    al,0xc
  43d692:	popf   
  43d693:	das    
  43d694:	cmp    al,0x14
  43d696:	popf   
  43d697:	jp     0x43d6d4
  43d699:	xchg   esi,eax
  43d69a:	jp     0x43d648
  43d69c:	clc    
  43d69d:	jmp    0x523c8390
  43d6a2:	mov    eax,ds:0x6ee30002
  43d6a7:	adc    esi,DWORD PTR [eax]
  43d6a9:	dec    eax
  43d6aa:	push   ecx
  43d6ab:	push   0x2f
  43d6ad:	xor    cl,BYTE PTR [ecx-0x37]
  43d6b0:	das    
  43d6b1:	inc    ebp
  43d6b2:	push   ecx
  43d6b3:	popf   
  43d6b4:	das    
  43d6b5:	jmp    0xd82e:0x42f104f
  43d6bc:	cs stos DWORD PTR es:[edi],eax
  43d6be:	das    
  43d6bf:	sub    eax,0x762e662f
  43d6c4:	sub    DWORD PTR cs:[esi],ebp
  43d6c7:	pop    es
  43d6c8:	cs jg  0x43d6da
  43d6cb:	leave  
  43d6cc:	sub    eax,0x337b0d9c
  43d6d1:	push   ss
  43d6d2:	add    eax,0xbc632fb
  43d6d7:	out    0x31,al
  43d6d9:	(bad)  
  43d6da:	lock adc BYTE PTR [ecx],dh
  43d6dd:	sahf   
  43d6de:	add    BYTE PTR [eax],al
  43d6e0:	jmp    0xf1c1082c
  43d6e5:	in     al,dx
  43d6e6:	aaa    
  43d6e7:	mov    eax,ds:0x663852e6
  43d6ec:	fldcw  WORD PTR [ecx+0x37]
  43d6ef:	add    edi,edx
  43d6f1:	sbb    eax,0x2cc76136
  43d6f6:	outs   dx,BYTE PTR ss:[esi]
  43d6f8:	les    ecx,FWORD PTR [edi+0x5cb48b35]
  43d6fe:	xor    eax,0xcea9ef00
  43d703:	cmp    dl,bh
  43d705:	test   eax,0xaab93aec
  43d70a:	adc    eax,0x6ea9bc3b
  43d70f:	cmp    edi,DWORD PTR [eax+0xf3b7ca9]
  43d715:	stos   DWORD PTR es:[edi],eax
  43d716:	fwait
  43d717:	cmp    esp,eax
  43d719:	stos   BYTE PTR es:[edi],al
  43d71a:	lds    edi,FWORD PTR [ebx]
  43d71c:	dec    ecx
  43d71d:	stos   BYTE PTR es:[edi],al
  43d71e:	fistp  QWORD PTR [ebx]
  43d720:	sub    BYTE PTR [ebx+0x2ac3c39],0x64
  43d727:	cmp    al,0xaa
  43d729:	stos   DWORD PTR es:[edi],eax
  43d72a:	lds    edi,FWORD PTR [esp+edi*1]
  43d72d:	lods   al,BYTE PTR ds:[esi]
  43d72e:	or     al,0x3d
  43d730:	shr    BYTE PTR [ecx+eiz*4+0x69adfb3d],cl
  43d737:	aas    
  43d738:	arpl   WORD PTR [esi-0x5178c06c],bp
  43d73e:	sar    DWORD PTR [edi],0x92
  43d741:	scas   al,BYTE PTR es:[edi]
  43d742:	fstp   TBYTE PTR [edi]
  43d744:	add    BYTE PTR [eax],al
  43d746:	int    0xae
  43d748:	clc    
  43d749:	push   DWORD PTR [edi+edi*4]
  43d74c:	stc    
  43d74d:	call   DWORD PTR [eax-0x1]
  43d750:	(bad)  
  43d751:	dec    DWORD PTR [ebp-0x5bce1e51]
  43d757:	mov    al,0xf2
  43d759:	xor    DWORD PTR [edi],eax
  43d75b:	mov    dl,0x1e
  43d75d:	xor    esp,DWORD PTR [esi-0x4d]
  43d760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d761:	xor    al,0xa6
  43d763:	mov    bl,0xe2
  43d765:	xor    al,0x3
  43d767:	mov    ah,0x28
  43d769:	xor    eax,0x3591b46b
  43d76e:	addr16 mov ah,0xd1
  43d771:	xor    eax,0x3680b08c
  43d776:	cli    
  43d777:	scas   eax,DWORD PTR es:[edi]
  43d778:	sbb    esi,DWORD PTR [edi]
  43d77a:	popf   
  43d77b:	push   es
  43d77c:	in     eax,dx
  43d77d:	xor    eax,0x4eece372
  43d782:	push   0x3e
  43d784:	in     eax,dx
  43d785:	mov    edi,0xfdec7672
  43d78a:	push   0xffffffd1
  43d78c:	hlt    
  43d78d:	sbb    ah,dl
  43d78f:	inc    eax
  43d790:	sti    
  43d791:	mov    bh,0xd4
  43d793:	cmp    al,0xfa
  43d795:	loopne 0x43d75e
  43d797:	cmp    ecx,edi
  43d799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d79a:	shr    DWORD PTR [edi+esi*8-0x15],0xb9
  43d79f:	pushf  
  43d7a0:	mul    DWORD PTR [ecx-0x3a09a250]
  43d7a6:	test   al,0xac
  43d7a8:	imul   BYTE PTR [ebp+0x2da30000]
  43d7ae:	test   BYTE PTR [ebx],0x9a
  43d7b1:	mov    dh,0xf5
  43d7b3:	and    DWORD PTR [edx-0x75be0af5],edx
  43d7b9:	ret    0x68f5
  43d7bc:	add    dh,0xf5
  43d7bf:	fnstcw WORD PTR [edx-0x65]
  43d7c2:	int3   
  43d7c3:	(bad)  
  43d7c4:	xor    al,ah
  43d7c6:	cld    
  43d7c7:	call   FWORD PTR [ebp+0x6d23eccc]
  43d7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7ce:	in     al,dx
  43d7cf:	xor    eax,0x65ec91cd
  43d7d4:	int    0x88
  43d7d6:	in     al,dx
  43d7d7:	lahf   
  43d7d8:	int    0x25
  43d7da:	hlt    
  43d7db:	dec    edi
  43d7dc:	int3   
  43d7dd:	(bad)  
  43d7de:	repz scas eax,DWORD PTR es:[edi]
  43d7e0:	lods   al,BYTE PTR ds:[esi]
  43d7e1:	(bad)  
  43d7e3:	dec    eax
  43d7e4:	test   eax,0xb1ccf018
  43d7e9:	mov    ch,0xef
  43d7eb:	sub    DWORD PTR [eax-0x6cb61128],0x2b
  43d7f2:	out    dx,eax
  43d7f3:	scas   eax,DWORD PTR es:[edi]
  43d7f4:	mov    eax,DWORD PTR [edx]
  43d7f6:	(bad)  
  43d7f7:	icebp  
  43d7f8:	xchg   edi,eax
  43d7f9:	icebp  
  43d7fa:	sub    al,0xf3
  43d7fc:	dec    edx
  43d7fd:	icebp  
  43d7fe:	out    0xfb,al
  43d800:	stos   BYTE PTR es:[edi],al
  43d801:	jmp    0xfce0:0xeacbfc31
  43d808:	imul   ebp,ebx,0xeb20fd41
  43d80e:	jae    0x43d80c
  43d810:	add    BYTE PTR [eax],al
  43d812:	jo     0x43d7ff
  43d814:	mov    esi,0x3beca9fc
  43d819:	(bad)  
  43d81a:	and    eax,0xeffe62ec
  43d81f:	out    0xe6,al
  43d821:	clc    
  43d822:	mov    ebp,0x2bf875e7
  43d827:	out    0xf1,eax
  43d829:	stc    
  43d82a:	mov    edx,0x4efa02e8
  43d82f:	call   0xe9d1d1a3
  43d834:	push   ecx
  43d835:	cli    
  43d836:	adc    cl,ch
  43d838:	aaa    
  43d839:	cli    
  43d83a:	dec    edx
  43d83b:	test   eax,0xa943a3e6
  43d840:	add    ebx,DWORD PTR es:[ebp-0x20bebfe]
  43d847:	icebp  
  43d848:	inc    ebp
  43d849:	repz test eax,0xb9f59df3
  43d84f:	hlt    
  43d850:	or     eax,0x6f5b1f5
  43d855:	idiv   DWORD PTR [ebp+esi*8-0xa9b095c]
  43d85c:	jle    0x43d854
  43d85e:	out    dx,al
  43d85f:	hlt    
  43d860:	fsubp  st(7),st
  43d862:	nop
  43d863:	out    dx,al
  43d864:	mov    esp,0xa4eea8ef
  43d869:	out    dx,eax
  43d86a:	sub    dh,0x66
  43d86d:	out    dx,eax
  43d86e:	sbb    ebp,esi
  43d870:	dec    DWORD PTR [esi-0x36]
  43d873:	ins    DWORD PTR es:[edi],dx
  43d874:	xor    ebx,DWORD PTR [eax+eax*1]
  43d877:	add    dl,al
  43d879:	popf   
  43d87a:	xor    ebx,ebx
  43d87c:	int    0xb0
  43d87e:	xor    ebp,ecx
  43d880:	mov    bl,0x2
  43d882:	xor    esi,esi
  43d884:	retf   
  43d885:	loope  0x43d8b9
  43d887:	adc    eax,edx
  43d889:	out    0x32,eax
  43d88b:	dec    ebp
  43d88c:	mov    edx,0xaf1231ff
  43d891:	mov    al,0x31
  43d893:	xor    al,0x99
  43d895:	xchg   DWORD PTR [edi],esi
  43d897:	les    edx,FWORD PTR [ecx-0x79cbc901]
  43d89d:	jl     0x43d8d5
  43d89f:	jge    0x43d827
  43d8a1:	xchg   BYTE PTR [esi],dh
  43d8a3:	mov    ecx,0xf1369a76
  43d8a8:	jo     0x43d899
  43d8aa:	xor    eax,0x36256b2b
  43d8af:	pop    ecx
  43d8b0:	arpl   WORD PTR [edx+0x35],sp
  43d8b3:	lods   eax,DWORD PTR ds:[esi]
  43d8b4:	pop    ebx
  43d8b5:	aad    0x35
  43d8b7:	jb     0x43d90c
  43d8b9:	pop    es
  43d8ba:	xor    eax,0x34d349e2
  43d8bf:	cmp    al,0x40
  43d8c1:	xchg   esi,eax
  43d8c2:	xor    al,0x56
  43d8c4:	cmp    BYTE PTR [esp+edi*1],dl
  43d8c7:	add    dh,BYTE PTR ds:0x32983be9
  43d8cd:	and    BYTE PTR [edi+edi*4],bh
  43d8d0:	sub    dl,BYTE PTR [edx-0x30ea8bc5]
  43d8d6:	cmp    esi,DWORD PTR [edx]
  43d8d8:	adc    eax,0xd3b14
  43d8dd:	add    BYTE PTR [edx],dl
  43d8df:	lahf   
  43d8e0:	cmp    ah,ch
  43d8e2:	add    al,0xf1
  43d8e4:	cmp    DWORD PTR [ecx+0x3d3a46f4],esp
  43d8ea:	div    DWORD PTR [ebx+0x39]
  43d8ed:	add    BYTE PTR [edi],dh
  43d8ef:	stos   DWORD PTR es:[edi],eax
  43d8f0:	push   ecx
  43d8f1:	aas    
  43d8f2:	gs stos BYTE PTR es:[edi],al
  43d8f4:	jns    0x43d935
  43d8f6:	jne    0x43d8a1
  43d8f8:	lahf   
  43d8f9:	aas    
  43d8fa:	(bad)
  43d8fe:	fild   QWORD PTR [edx+0x73b43ff7]
  43d904:	stc    
  43d905:	(bad)  
  43d906:	cmp    BYTE PTR [ebx],al
  43d908:	add    BYTE PTR [eax],al
  43d90a:	lods   eax,DWORD PTR ds:[esi]
  43d90b:	mov    bl,0x32
  43d90d:	xor    BYTE PTR [esi+0x2f3063ae],al
  43d913:	mov    bl,0x9c
  43d915:	xor    BYTE PTR [esi],bl
  43d917:	mov    bl,0xa8
  43d919:	xor    BYTE PTR [edx],cl
  43d91b:	mov    ah,0xc5
  43d91d:	xor    BYTE PTR [eax-0x4d],al
  43d920:	add    eax,0x27b48b31
  43d925:	xor    DWORD PTR [esp+esi*4+0x46],ecx
  43d929:	xor    DWORD PTR [ebx+esi*4-0x4b37ce8a],edx
  43d930:	scas   al,BYTE PTR es:[edi]
  43d931:	xor    DWORD PTR [eax],edi
  43d933:	mov    ah,0xd2
  43d935:	xor    eax,edx
  43d937:	mov    ah,0x2
  43d939:	xor    ah,BYTE PTR [ebp+ebp*4+0x3a]
  43d93d:	xor    al,BYTE PTR [ebp*4+0x325e]
  43d944:	iret   
  43d945:	lods   eax,DWORD PTR ds:[esi]
  43d946:	xchg   ecx,eax
  43d947:	xor    ah,BYTE PTR [ebx]
  43d949:	lods   eax,DWORD PTR ds:[esi]
  43d94a:	int3   
  43d94b:	xor    ah,dh
  43d94d:	lods   eax,DWORD PTR ds:[esi]
  43d94e:	lock xor bh,BYTE PTR [esi]
  43d951:	scas   al,BYTE PTR es:[edi]
  43d952:	and    BYTE PTR [ebx],dh
  43d954:	and    ch,BYTE PTR [esi-0x521dcca8]
  43d95a:	jl     0x43d98f
  43d95c:	sbb    eax,0xd133afae
  43d961:	scas   al,BYTE PTR es:[edi]
  43d962:	jmp    0x9d33:0xfcaea133
  43d969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d96a:	call   0xe8f6827c
  43d96f:	pop    ds
  43d970:	mov    cl,0xb8
  43d972:	call   0xe8ac82a4
  43d977:	je     0x43d90a
  43d979:	sbb    eax,0x1289c7e9
  43d97e:	jmp    0xef586998
  43d983:	imul   ecx,DWORD PTR [eax+0x73a5ea4d],0xe
  43d98a:	jmp    0xfb3243fc
  43d98f:	xchg   ecx,eax
  43d990:	addr16 pop ecx
  43d992:	hlt    
  43d993:	out    0x61,al
  43d995:	add    al,0xf7
  43d997:	call   FWORD PTR [edx-0x6d020364]
  43d99d:	cwde   
  43d99e:	cld    
  43d99f:	call   FWORD PTR [ebp-0x30aa1330]
  43d9a5:	hlt    
  43d9a6:	in     eax,dx
  43d9a7:	jnp    0x43d9a9
  43d9a9:	add    BYTE PTR [edi-0x51a71236],ch
  43d9af:	(bad)  
  43d9b1:	test   BYTE PTR [ecx-0x56430fb1],dh
  43d9b7:	loopne 0x43d9a7
  43d9b9:	sbb    dl,BYTE PTR [ebx-0x744215be]
  43d9bf:	xchg   bl,bh
  43d9c1:	(bad)  
  43d9c2:	test   DWORD PTR ds:0xd585dcfc,edi
  43d9c8:	cli    
  43d9c9:	dec    eax
  43d9ca:	jbe    0x43d989
  43d9cc:	lock pop eax
  43d9ce:	jo     0x43d986
  43d9d0:	test   DWORD PTR [ebx-0xed998],0xfe0c9c22
  43d9da:	sbb    dh,BYTE PTR [esp+edi*8-0x1]
  43d9de:	popf   
  43d9df:	daa    
  43d9e0:	hlt    
  43d9e1:	call   0xf5b6dcb3
  43d9e6:	sub    al,0xf4
  43d9e8:	jge    0x43d9df
  43d9ea:	sbb    esi,esp
  43d9ec:	std    
  43d9ed:	hlt    
  43d9ee:	add    esi,esp
  43d9f0:	arpl   bx,si
  43d9f2:	stc    
  43d9f3:	icebp  
  43d9f4:	scas   eax,DWORD PTR es:[edi]
  43d9f5:	out    dx,eax
  43d9f6:	addr16 out dx,al
  43d9f8:	ds lock cld 
  43d9fb:	out    dx,eax
  43d9fc:	xor    ecx,esi
  43d9fe:	push   ebx
  43d9ff:	in     al,dx
  43da00:	pop    esi
  43da01:	out    dx,al
  43da02:	adc    al,0xed
  43da04:	jg     0x43d9f3
  43da06:	repz in al,dx
  43da08:	test   eax,0xebecd1ed
  43da0d:	out    dx,al
  43da0e:	add    BYTE PTR [eax],al
  43da10:	xchg   ecx,eax
  43da11:	in     eax,dx
  43da12:	xor    eax,0xf9ed3def
  43da17:	cld    
  43da18:	adc    al,0xec
  43da1a:	jecxz  0x43da15
  43da1c:	scas   al,BYTE PTR es:[edi]
  43da1d:	call   0xe9eed41f
  43da22:	cmp    al,0xfb
  43da24:	add    eax,0x98fa44ea
  43da29:	out    0x1d,al
  43da2b:	stc    
  43da2c:	sti    
  43da2d:	out    0x4d,eax
  43da2f:	clc    
  43da30:	xor    bh,ah
  43da32:	mov    ch,0xf8
  43da34:	push   ebx
  43da35:	out    0x87,eax
  43da37:	clc    
  43da38:	jbe    0x43da21
  43da3a:	out    0xf5,eax
  43da3c:	popf   
  43da3d:	in     al,0x6d
  43da3f:	cmc    
  43da40:	jge    0x43da27
  43da42:	daa    
  43da43:	mul    edx
  43da45:	in     eax,0xcc
  43da47:	test   bl,0xe5
  43da4a:	xchg   dh,dh
  43da4c:	pop    ebx
  43da4d:	in     eax,0x4d
  43da4f:	div    BYTE PTR [edx]
  43da51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da52:	out    0xe3,al
  43da54:	sub    BYTE PTR [ebp+0x29d034e],ah
  43da5a:	push   es
  43da5b:	hlt    
  43da5c:	shl    edx,cl
  43da5e:	jmp    FWORD PTR [ecx+0xe30380e]
  43da64:	push   cs
  43da65:	out    0x2e,al
  43da67:	lea    ecx,[ecx]
  43da69:	sbb    DWORD PTR [edi],ebp
  43da6b:	dec    ebp
  43da6c:	icebp  
  43da6d:	mov    eax,0x87ece72e
  43da72:	xor    esi,DWORD PTR [ebp+0x0]
  43da75:	add    ch,ch
  43da77:	pop    edi
  43da78:	xor    bl,BYTE PTR [eax-0x72cdb910]
  43da7e:	enter  0x3223,0x66
  43da82:	sar    BYTE PTR [edx-0x5f47eccf],0x31
  43da89:	fnsave [ebx-0x37fcce57]
  43da8f:	cmp    BYTE PTR [ecx],dh
  43da91:	dec    edx
  43da92:	sar    BYTE PTR [edi+0x30],0x72
  43da96:	mov    eax,0xb09c3066
  43da9b:	mov    cl,0x30
  43da9d:	repnz xchg esi,eax
  43da9f:	cmc    
  43daa0:	aaa    
  43daa1:	clc    
  43daa2:	xchg   esi,eax
  43daa3:	cmp    DWORD PTR [eax],edi
  43daa5:	dec    edx
  43daa6:	mov    DWORD PTR [esi],ebx
  43daa8:	cmp    BYTE PTR [ebx-0x7f],bh
  43daab:	pop    esp
  43daac:	aaa    
  43daad:	push   esi
  43daae:	jns    0x43da7c
  43dab0:	aaa    
  43dab1:	mov    bh,0x71
  43dab3:	getsec 
  43dab5:	(bad)  
  43dab6:	addr16 jmp 0x1337:0x49662d36
  43dabe:	push   esi
  43dabf:	and    eax,0x85566e37
  43dac4:	ss aaa 
  43dac6:	inc    esi
  43dac7:	ss inc ax
  43daca:	inc    esi
  43dacb:	retf   
  43dacc:	ss push esi
  43dace:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43dad0:	ss icebp 
  43dad2:	xor    al,0xa
  43dad4:	ss pop ss
  43dad6:	daa    
  43dad7:	in     al,0x35
  43dad9:	add    BYTE PTR [eax],al
  43dadb:	add    BYTE PTR [ebx],al
  43dadd:	stos   BYTE PTR es:[edi],al
  43dade:	push   ebp
  43dadf:	cmp    dl,BYTE PTR [edx-0x56]
  43dae2:	jnp    0x43db1e
  43dae4:	outs   dx,BYTE PTR ds:[esi]
  43dae5:	test   al,0x98
  43dae7:	cmp    ah,BYTE PTR [eax+ebp*4-0x5759c528]
  43daee:	(bad)  
  43daef:	cmp    dh,dl
  43daf1:	stos   BYTE PTR es:[edi],al
  43daf2:	and    eax,0x4baad73b
  43daf7:	cmp    edx,DWORD PTR [edi]
  43daf9:	stos   DWORD PTR es:[edi],eax
  43dafa:	imul   edi,DWORD PTR [ebx],0x71
  43dafd:	test   eax,0xa99b3b93
  43db02:	sti    
  43db03:	cmp    esi,DWORD PTR [ecx]
  43db05:	lods   al,BYTE PTR ds:[esi]
  43db06:	gs cmp al,0x38
  43db09:	stos   DWORD PTR es:[edi],eax
  43db0a:	mov    ds:0xd2abfc3c,al
  43db0f:	cmp    al,0xe5
  43db11:	stos   DWORD PTR es:[edi],eax
  43db12:	fistp  QWORD PTR [ecx+ebx*8]
  43db15:	stos   DWORD PTR es:[edi],eax
  43db16:	in     eax,dx
  43db17:	cmp    al,0xc1
  43db19:	lods   al,BYTE PTR ds:[esi]
  43db1a:	or     edi,DWORD PTR ds:0x3d26ab97
  43db20:	sahf   
  43db21:	stos   DWORD PTR es:[edi],eax
  43db22:	cmp    DWORD PTR ds:0x3df5ac3d,0x68
  43db29:	lods   eax,DWORD PTR ds:[esi]
  43db2a:	aas    
  43db2b:	(bad)  ds:[esi+esi*2-0x575205c2]
  43db33:	ds inc eax
  43db35:	lods   eax,DWORD PTR ds:[esi]
  43db36:	jmp    0x39f25679
  43db3b:	aas    
  43db3c:	in     al,dx
  43db3d:	scas   al,BYTE PTR es:[edi]
  43db3e:	clc    
  43db3f:	inc    DWORD PTR [eax]
  43db41:	add    BYTE PTR [edi+ebp*4-0x6],al
  43db45:	dec    DWORD PTR [eax-0x76000001]
  43db4b:	mov    al,0xb0
  43db4d:	xor    DWORD PTR [ecx+0x3731efb0],ecx
  43db53:	mov    cl,0x26
  43db55:	xor    bl,BYTE PTR [ebp+0x6f56ee10]
  43db5b:	push   esp
  43db5c:	out    dx,al
  43db5d:	jb     0x43dbce
  43db5f:	inc    ebp
  43db60:	out    dx,eax
  43db61:	or     cl,dh
  43db63:	stos   BYTE PTR es:[edi],al
  43db64:	out    dx,eax
  43db65:	inc    edx
  43db66:	into   
  43db67:	outs   dx,DWORD PTR ds:[esi]
  43db68:	out    dx,eax
  43db69:	mov    cl,dh
  43db6b:	xor    esi,eax
  43db6d:	(bad)  
  43db6e:	into   
  43db6f:	push   cs
  43db70:	lock imul BYTE PTR [esi-0x56f21767]
  43db77:	mov    ch,0xe8
  43db79:	cmp    BYTE PTR [ecx-0x57551684],dh
  43db7f:	lock jmp 0xeaf86e9b
  43db85:	mov    ds:0x33f4b88b,eax
  43db8a:	test   DWORD PTR [edx+0x2c8581f4],eax
  43db90:	in     al,dx
  43db91:	(bad)  
  43db92:	jne    0x43db35
  43db94:	jmp    0x43dba1
  43db96:	je     0x43db77
  43db98:	jmp    0x646c:0xeb3f644e
  43db9f:	xor    ch,bl
  43dba1:	(bad)  
  43dba2:	aam    0xca
  43dba4:	jmp    0xea59:0xd40000e0
  43dbab:	add    eax,edi
  43dbad:	mov    ebp,0xccc710ea
  43dbb2:	jmp    0xb778:0xe9eab72d
  43dbb9:	adc    al,0xea
  43dbbb:	and    ah,BYTE PTR [esi-0x59cb1646]
  43dbc1:	lock call 0xe9437217
  43dbc7:	pop    esi
  43dbc8:	xchg   esi,eax
  43dbc9:	adc    ecx,ebp
  43dbcb:	xchg   BYTE PTR fs:[ebx+0x28672e9],bl
  43dbd2:	fucomp st(6)
  43dbd4:	mov    ch,0xdd
  43dbd6:	popa   
  43dbd7:	out    dx,eax
  43dbd8:	arpl   si,bx
  43dbda:	test   eax,0xb7ded6ef
  43dbdf:	out    dx,eax
  43dbe0:	retf   0x42de
  43dbe3:	lock retf 0xfadf
  43dbe7:	lock jns 0x43dbc9
  43dbea:	mov    dh,0xf0
  43dbec:	inc    ecx
  43dbed:	loopne 0x43dc00
  43dbef:	icebp  
  43dbf0:	push   esi
  43dbf1:	loopne 0x43dbb3
  43dbf3:	icebp  
  43dbf4:	fsub   st,st(0)
  43dbf6:	jmp    0x43dbea
  43dbf8:	or     dl,ah
  43dbfa:	dec    ecx
  43dbfb:	repz xlat BYTE PTR ds:[ebx]
  43dbfd:	loope  0x43dc01
  43dbff:	repz stc 
  43dc01:	loope  0x43dbe9
  43dc03:	inc    ebx
  43dc04:	(bad)  [ecx+0x29d03fa]
  43dc0a:	mov    ?,ebx
  43dc0c:	add    BYTE PTR [eax],al
  43dc0e:	sbb    al,0xd3
  43dc10:	add    ah,dh
  43dc12:	sbb    esp,edx
  43dc14:	mov    eax,ds:0xf2d3cbf4
  43dc19:	cmc    
  43dc1a:	pmullw mm1,QWORD PTR [ebp+esi*8-0x87629b9]
  43dc22:	mov    dl,bh
  43dc24:	stc    
  43dc25:	clc    
  43dc26:	(bad)  
  43dc28:	(bad)  
  43dc2a:	mov    ecx,0xd3f9f4d8
  43dc2f:	fsub   DWORD PTR [esi]
  43dc31:	cli    
  43dc32:	fstp   st(0)
  43dc34:	xor    dl,bh
  43dc36:	iret   
  43dc37:	fadd   DWORD PTR [ecx]
  43dc39:	cli    
  43dc3a:	push   ds
  43dc3b:	fcomp  DWORD PTR [ecx+edi*8+0x42]
  43dc3f:	fcom   DWORD PTR [esi-0x7]
  43dc42:	sub    eax,0x71f99ad8
  43dc47:	fadd   DWORD PTR [edx-0x27bf07]
  43dc4d:	outs   dx,DWORD PTR ds:[esi]
  43dc4e:	inc    esp
  43dc4f:	mov    al,ds:0xec47d131
  43dc54:	xor    BYTE PTR [ebx-0x51ceb8c9],ch
  43dc5a:	aaa    
  43dc5b:	ds xor ebx,eax
  43dc5e:	daa    
  43dc5f:	xor    DWORD PTR [ecx],esi
  43dc61:	shl    BYTE PTR [edi],1
  43dc63:	sbb    dh,BYTE PTR [ecx]
  43dc65:	jns    0x43dc7e
  43dc67:	push   ebx
  43dc68:	xor    BYTE PTR [ecx],ch
  43dc6a:	pop    ss
  43dc6b:	(bad)  
  43dc6c:	xor    BYTE PTR [edi+eax*1],dl
  43dc6f:	mov    esi,0x4330
  43dc74:	pop    es
  43dc75:	scas   eax,DWORD PTR es:[edi]
  43dc76:	xor    BYTE PTR [ebx],ah
  43dc78:	neg    DWORD PTR [edi-0x2f90cd0]
  43dc7e:	aaa    
  43dc7f:	leave  
  43dc80:	mul    dl
  43dc82:	aaa    
  43dc83:	mov    esi,0x2d375bf6
  43dc88:	(bad)  
  43dc89:	retf   
  43dc8a:	aaa    
  43dc8b:	adc    eax,0xe63708c6
  43dc90:	mov    ecx,0xb1ce36f8
  43dc95:	arpl   WORD PTR [esi],si
  43dc97:	cmp    cl,bl
  43dc99:	cmp    DWORD PTR [esi],esi
  43dc9b:	jb     0x43dc60
  43dc9d:	js     0x43dcd4
  43dc9f:	xchg   ebp,eax
  43dca0:	mov    ebx,0xb3b835c5
  43dca5:	mov    esp,0xf78bd435
  43dcaa:	xor    al,0x11
  43dcac:	xor    BYTE PTR ds:0x89784835,0x34
  43dcb3:	push   esp
  43dcb4:	jo     0x43dc36
  43dcb6:	xor    al,0x57
  43dcb8:	mov    BYTE PTR [ecx],cl
  43dcba:	cmp    al,0xf9
  43dcbc:	cmp    dh,0x3b
  43dcbf:	fdivr  QWORD PTR [edx-0x26]
  43dcc2:	cmp    edx,DWORD PTR [edi]
  43dcc4:	ins    DWORD PTR es:[edi],dx
  43dcc5:	sbb    al,0x3c
  43dcc7:	add    bl,cl
  43dcc9:	xchg   edx,eax
  43dcca:	mov    ?,WORD PTR [edi+edi*4]
  43dccd:	xchg   edx,eax
  43dcce:	mov    eax,ds:0xc892893c
  43dcd3:	cmp    al,0x16
  43dcd5:	xchg   ebx,eax
  43dcd6:	loopne 0x43dd14
  43dcd8:	add    BYTE PTR [eax],al
  43dcda:	rcl    BYTE PTR [edx-0x4ebac30e],cl
  43dce0:	or     bh,BYTE PTR ds:0x3d2db132
  43dce6:	in     eax,dx
  43dce7:	mov    al,0x5c
  43dce9:	cmp    eax,0x3d6bb0f0
  43dcee:	fnsave [eax-0x5035c279]
  43dcf4:	idiv   BYTE PTR ds:0x3e0491fa
  43dcfa:	cli    
  43dcfb:	xchg   ecx,eax
  43dcfc:	adc    eax,0x4f91cd3e
  43dd01:	not    DWORD PTR ds:[edx+0x33f4fff8]
  43dd08:	cli    
  43dd09:	(bad)  
  43dd0a:	js     0x43dd12
  43dd0c:	add    BYTE PTR [eax],al
  43dd0e:	cmp    al,0x93
  43dd10:	mov    bl,0x31
  43dd12:	jmp    0x43dca9
  43dd14:	and    DWORD PTR [edx],esi
  43dd16:	or     al,0x97
  43dd18:	xor    edi,DWORD PTR ss:[ebx-0x6b]
  43dd1c:	arpl   WORD PTR [ebx],si
  43dd1e:	xor    al,0x96
  43dd20:	lahf   
  43dd21:	xor    eax,DWORD PTR ds:0xaf340c97
  43dd27:	xchg   edi,eax
  43dd28:	sub    eax,0x809ae134
  43dd2d:	xor    al,0x43
  43dd2f:	xchg   edi,eax
  43dd30:	xor    BYTE PTR ds:0x36329988,0xd5
  43dd37:	pushf  
  43dd38:	jno    0x43dd70
  43dd3a:	mov    ds:0x383699,al
  43dd3f:	add    BYTE PTR [edi],bl
  43dd41:	stos   DWORD PTR es:[edi],eax
  43dd42:	lds    edi,FWORD PTR [eax]
  43dd44:	popf   
  43dd45:	lahf   
  43dd46:	in     eax,0x1a
  43dd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd49:	out    0xe4,al
  43dd4b:	push   ebp
  43dd4c:	xchg   esp,eax
  43dd4d:	icebp  
  43dd4e:	in     al,0x6d
  43dd50:	xchg   esp,eax
  43dd51:	popf   
  43dd52:	in     eax,0x82
  43dd54:	test   BYTE PTR [ebx],bh
  43dd56:	out    0x98,al
  43dd58:	test   BYTE PTR [ecx-0x1b],bh
  43dd5b:	shl    BYTE PTR [eax+eax*2-0x1a],1
  43dd5f:	adc    esi,DWORD PTR [edi-0xd]
  43dd62:	jmp    0xeaf54499
  43dd67:	cdq    
  43dd68:	addr16 add bl,ch
  43dd6b:	repnz xlat BYTE PTR ds:[ebx]
  43dd6d:	or     ch,bl
  43dd6f:	push   esi
  43dd70:	(bad)  
  43dd71:	cmp    ah,ch
  43dd73:	rol    esi,0xd7
  43dd76:	jmp    0x43ddb3
  43dd78:	sar    DWORD PTR [ecx-0x18],0x5e
  43dd7c:	mov    ecx,0xb179e871
  43dd81:	jmp    0x43dd6b
  43dd83:	or     BYTE PTR [eax-0x5faf1697],ch
  43dd89:	outs   dx,DWORD PTR ds:[esi]
  43dd8a:	jmp    0xea7d7602
  43dd8f:	xchg   esi,eax
  43dd90:	nop
  43dd91:	fucompp 
  43dd93:	(bad)  
  43dd94:	mov    BYTE PTR [ecx+0xb8307ea],bl
  43dd9a:	out    dx,eax
  43dd9b:	adc    BYTE PTR [edx-0x57],bh
  43dd9e:	sbb    al,0xfe
  43dda0:	mov    dl,0x68
  43dda2:	add    eax,DWORD PTR [eax]
  43dda4:	add    BYTE PTR [eax],al
  43dda6:	popf   
  43dda7:	inc    eax
  43dda8:	hlt    
  43dda9:	in     eax,0x6d
  43ddab:	mov    eax,0xdccc66f3
  43ddb0:	repnz retf 0xb6cc
  43ddb4:	out    dx,al
  43ddb5:	xor    cl,bh
  43ddb7:	adc    esi,ebp
  43ddb9:	fxch   st(7)
  43ddbb:	pop    edx
  43ddbc:	in     eax,dx
  43ddbd:	or     eax,0xf30102ae
  43ddc2:	lods   eax,DWORD PTR ds:[esi]
  43ddc3:	sar    DWORD PTR ds:0xb4d239f3,1
  43ddc9:	repz xchg edx,eax
  43ddcb:	(bad)  
  43ddcc:	add    eax,edi
  43ddce:	enter  0x6ad6,0xf8
  43ddd2:	pop    ebp
  43ddd3:	xlat   BYTE PTR ds:[ebx]
  43ddd4:	fdivp  st(0),st
  43ddd6:	ja     0x43ddaf
  43ddd8:	scas   al,BYTE PTR es:[edi]
  43ddd9:	clc    
  43ddda:	sub    eax,ebx
  43dddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dddd:	stc    
  43ddde:	inc    ecx
  43dddf:	fcomp  DWORD PTR [ecx]
  43dde1:	neg    BYTE PTR [ebp+edx*8+0x2b]
  43dde5:	test   BYTE PTR [ebp-0x2f08f42b],0xd5
  43ddec:	(bad)  
  43dded:	idiv   BYTE PTR [edx]
  43ddef:	(bad)  
  43ddf0:	sbb    esi,edi
  43ddf2:	push   es
  43ddf3:	(bad)  
  43ddf4:	in     eax,dx
  43ddf5:	jmp    0x43dda1
  43ddf7:	fimul  DWORD PTR [ebx]
  43ddf9:	in     al,dx
  43ddfa:	(bad)  
  43ddfb:	fidiv  DWORD PTR [ebx+ebp*8-0x139d24db]
  43de02:	in     eax,dx
  43de03:	(bad)  
  43de05:	in     al,dx
  43de06:	mov    ebx,0xec84db
  43de0b:	add    BYTE PTR ds:0xdced05dc,bl
  43de11:	fcomp  DWORD PTR [edi]
  43de13:	jmp    0xd95d:0xead4d8cb
  43de1a:	fucomi st,st(7)
  43de1c:	test   eax,0x6bef9ede
  43de21:	fisubr WORD PTR [edi+ebp*8-0x25]
  43de25:	fiadd  WORD PTR [ecx+esi*8]
  43de28:	sbb    bh,0x18
  43de2b:	icebp  
  43de2c:	pop    ebp
  43de2d:	fistp  WORD PTR [ebp-0x62209010]
  43de33:	lock jl 0x43de15
  43de36:	mov    cl,0xf0
  43de38:	xchg   edi,ebx
  43de3a:	(bad)  
  43de3b:	jmp    0x43dead
  43de3d:	push   es
  43de3e:	cmp    cl,ah
  43de40:	mov    ch,ah
  43de42:	cmp    eax,esp
  43de44:	sbb    dl,0x39
  43de47:	es jnp 0x43de92
  43de4a:	cmp    dh,BYTE PTR [esi]
  43de4c:	jae    0x43de67
  43de4e:	cmp    dh,BYTE PTR [ebx+0x48]
  43de51:	cmp    DWORD PTR gs:[edx-0x78c647c0],esi
  43de58:	cmp    BYTE PTR [ecx+edi*1+0x3852320b],ch
  43de5f:	xchg   esi,eax
  43de60:	dec    ebx
  43de61:	xchg   esp,eax
  43de62:	cmp    cl,ch
  43de64:	outs   dx,BYTE PTR ds:[esi]
  43de65:	pushf  
  43de66:	clc    
  43de67:	inc    ebp
  43de68:	sahf   
  43de69:	add    al,BYTE PTR [eax]
  43de6b:	leave  
  43de6c:	cs dec ecx
  43de6e:	das    
  43de6f:	mov    ah,0x0
  43de71:	add    BYTE PTR [edi],cl
  43de73:	sub    DWORD PTR ds:0x2cbc0f64,ebp
  43de79:	rcl    DWORD PTR [edx],cl
  43de7b:	push   esp
  43de7c:	xor    ecx,DWORD PTR [eax+0xa]
  43de7f:	add    dh,BYTE PTR [ebx]
  43de81:	sahf   
  43de82:	cmc    
  43de83:	jo     0x43deb7
  43de85:	xor    dh,ch
  43de87:	or     eax,0x32f06532
  43de8c:	xor    DWORD PTR [ebx+ebp*8-0x2c6ecedf],esi
  43de93:	sbb    eax,0x74cb7731
  43de98:	xor    BYTE PTR [ebx-0x2d],cl
  43de9b:	push   eax
  43de9c:	xor    BYTE PTR [ecx],ch
  43de9e:	retf   
  43de9f:	(bad)  
  43dea0:	xor    BYTE PTR [ecx],dl
  43dea2:	mov    bl,0xa4
  43dea4:	xor    dl,bl
  43dea6:	test   al,0x95
  43dea8:	xor    cl,dh
  43deaa:	mov    dh,0xe
  43deac:	cmp    BYTE PTR [ecx],cl
  43deae:	mov    cl,0xe2
  43deb0:	aaa    
  43deb1:	push   cs
  43deb2:	mov    DWORD PTR [edx+0x38],eax
  43deb5:	add    bl,cl
  43deb7:	scas   al,BYTE PTR es:[edi]
  43deb8:	dec    esi
  43deb9:	cmp    BYTE PTR [edi-0x26c7a452],bh
  43debf:	scas   al,BYTE PTR es:[edi]
  43dec0:	outs   dx,DWORD PTR ds:[esi]
  43dec1:	cmp    dh,bh
  43dec3:	scas   al,BYTE PTR es:[edi]
  43dec4:	(bad)  
  43dec5:	cmp    BYTE PTR [ecx],bl
  43dec7:	scas   eax,DWORD PTR es:[edi]
  43dec8:	fwait
  43dec9:	cmp    ch,cl
  43decb:	scas   al,BYTE PTR es:[edi]
  43decc:	scas   eax,DWORD PTR es:[edi]
  43decd:	cmp    BYTE PTR [edi+ebp*4],dh
  43ded0:	mov    edi,0xd7af3938
  43ded5:	cmp    BYTE PTR [eax],al
  43ded7:	add    BYTE PTR [edx],ah
  43ded9:	scas   eax,DWORD PTR es:[edi]
  43deda:	out    0x38,al
  43dedc:	shr    BYTE PTR [esi-0x56cfc70d],1
  43dee2:	add    edi,DWORD PTR [ecx]
  43dee4:	push   ebp
  43dee5:	test   eax,0xa78e391b
  43deea:	sub    bh,BYTE PTR [ecx]
  43deec:	jl     0x43de95
  43deee:	ds cmp edx,edi
  43def1:	test   al,0x4d
  43def3:	cmp    DWORD PTR [edi-0x57],ecx
  43def6:	cmp    DWORD PTR fs:[esi-0x57],edx
  43defa:	jb     0x43df35
  43defc:	je     0x43dea5
  43defe:	cmp    DWORD PTR [ecx],0x3991a766
  43df04:	sbb    al,0xa8
  43df06:	test   al,0x39
  43df08:	push   ebx
  43df09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43df0a:	mov    ch,0x39
  43df0c:	test   BYTE PTR [edi-0x5628c5ea],ah
  43df12:	cdq    
  43df13:	cmp    ah,BYTE PTR [edx-0x58]
  43df16:	mov    ah,0x3a
  43df18:	ret    0xbbaa
  43df1b:	cmp    ecx,DWORD PTR [ecx+ebp*4-0x5411c3ff]
  43df22:	xor    al,0x3c
  43df24:	xor    ch,BYTE PTR [ebx-0x5404c382]
  43df2a:	jo     0x43df69
  43df2c:	das    
  43df2d:	lods   al,BYTE PTR ds:[esi]
  43df2e:	out    0x3d,eax
  43df30:	popf   
  43df31:	mov    eax,ds:0xf8db27ea
  43df36:	jmp    0xeab9b293
  43df3b:	add    al,BYTE PTR [eax]
  43df3d:	add    dl,cl
  43df3f:	push   es
  43df40:	jmp    0x43df6f
  43df42:	ret    0xeb95
  43df45:	inc    edx
  43df46:	mov    edx,0xb260eafd
  43df4b:	dec    eax
  43df4c:	in     al,dx
  43df4d:	mov    edx,0xfd7ca9aa
  43df52:	bound  ebx,QWORD PTR [ebp+0x3e9dfffd]
  43df58:	in     eax,dx
  43df59:	fwait
  43df5a:	lea    ebx,[ebp*8-0x124673fa]
  43df61:	pop    ds
  43df62:	mov    ecx,gs
  43df64:	in     al,dx
  43df65:	inc    esp
  43df66:	ins    BYTE PTR es:[edi],dx
  43df67:	or     al,0xed
  43df69:	arpl   WORD PTR [esi+esi*4-0x13],bp
  43df6d:	mov    ebx,0xd3ede56c
  43df72:	ins    BYTE PTR es:[edi],dx
  43df73:	aam    0xed
  43df75:	pop    esp
  43df76:	iret   
  43df77:	test   dh,ch
  43df79:	mov    eax,0xa3f023cf
  43df7e:	into   
  43df7f:	inc    ebx
  43df80:	lock stc 
  43df82:	into   
  43df83:	fwait
  43df84:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43df86:	mov    cl,0x14
  43df88:	icebp  
  43df89:	mov    ecx,0x17f1a7a9
  43df8e:	mov    al,0xc3
  43df90:	icebp  
  43df91:	cld    
  43df92:	test   al,0x94
  43df94:	repnz and BYTE PTR [ebx-0x74bc0d46],dl
  43df9b:	push   esi
  43df9c:	repnz pop esi
  43df9e:	xchg   ebx,eax
  43df9f:	jno    0x43df93
  43dfa1:	jge    0x43dfa3
  43dfa3:	add    BYTE PTR [ebx+0x73bdf332],cl
  43dfa9:	lock repnz sbb ch,BYTE PTR [edx+0x2]
  43dfae:	es repz push edi
  43dfb1:	shl    DWORD PTR ds:0xa8d347f3,cl
  43dfb7:	repz popf 
  43dfb9:	ficomp DWORD PTR [ebp-0x14]
  43dfbc:	push   ecx
  43dfbd:	fcmovnu st,st(0)
  43dfbf:	in     al,dx
  43dfc0:	mov    esi,0xfbed29db
  43dfc5:	fld    TBYTE PTR [esi]
  43dfc7:	in     eax,dx
  43dfc8:	sub    ebx,esp
  43dfca:	stos   DWORD PTR es:[edi],eax
  43dfcb:	in     eax,dx
  43dfcc:	mov    ebx,esp
  43dfce:	iret   
  43dfcf:	in     eax,dx
  43dfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dfd1:	fsubr  QWORD PTR [esi]
  43dfd3:	out    dx,al
  43dfd4:	retf   0x31dc
  43dfd7:	out    dx,al
  43dfd8:	sub    ch,bl
  43dfda:	outs   dx,BYTE PTR ds:[esi]
  43dfdb:	out    dx,al
  43dfdc:	push   es
  43dfdd:	fnsave [edx-0x75229b12]
  43dfe3:	out    dx,al
  43dfe4:	dec    ebx
  43dfe5:	fstp   st(2)
  43dfe7:	out    dx,al
  43dfe8:	frstor [ecx]
  43dfeb:	out    dx,eax
  43dfec:	ret    0x7bdd
  43dfef:	out    dx,eax
  43dff0:	add    al,0xde
  43dff2:	sub    edi,0xfffffff5
  43dff5:	fisttp QWORD PTR [esi+0x47dde0ef]
  43dffb:	out    dx,eax
  43dffc:	add    ebx,esi
  43dffe:	ds out dx,eax
  43e000:	add    al,0xde
  43e002:	out    dx,eax
  43e003:	out    0x91,eax
  43e005:	(bad)  
  43e006:	iret   
  43e007:	out    0x0,eax
  43e009:	add    BYTE PTR [esi-0x3c18032a],bh
  43e00f:	(bad)  
  43e010:	fsubrp st(7),st
  43e012:	pop    ebx
  43e013:	(bad)  
  43e014:	mov    ecx,0x6bd672e7
  43e019:	call   0xe886b751
  43e01e:	or     dl,bh
  43e020:	inc    ebx
  43e021:	call   0xe85ab72f
  43e026:	in     eax,dx
  43e027:	(bad)  
  43e028:	dec    DWORD PTR [eax]
  43e02a:	lds    esp,FWORD PTR [ebx+0xdc5e73b]
  43e030:	cmp    esi,DWORD PTR [ebx]
  43e032:	mov    ah,0x49
  43e034:	cmp    esi,DWORD PTR [esi]
  43e036:	mov    ah,0x1f
  43e038:	cmp    eax,DWORD PTR [eax-0x72c5ab7b]
  43e03e:	test   DWORD PTR [ecx+0x975bf3a],ebp
  43e044:	cmp    al,BYTE PTR [ecx]
  43e046:	ja     0x43e095
  43e048:	cmp    bh,BYTE PTR [ecx]
  43e04a:	xchg   DWORD PTR [ecx-0x6b7b92c7],eax
  43e050:	cmp    DWORD PTR [ebp-0x5c6678c],esp
  43e056:	ja     0x43e03b
  43e058:	cmp    bh,dl
  43e05a:	inc    edi
  43e05b:	dec    edx
  43e05c:	cmp    DWORD PTR [esi+eax*2],ebp
  43e05f:	push   cs
  43e060:	cmp    DWORD PTR [edx+0x37],ebp
  43e063:	js     0x43e09d
  43e065:	aaa    
  43e066:	aaa    
  43e067:	pop    ebp
  43e068:	cmp    cl,ch
  43e06a:	push   cs
  43e06b:	xchg   edi,eax
  43e06c:	clc    
  43e06d:	jge    0x43e06f
  43e06f:	add    BYTE PTR [esi+0x2eb10002],bl
  43e075:	xor    esi,DWORD PTR [eax]
  43e077:	(bad)  
  43e078:	cs int 0x2f
  43e07b:	dec    ecx
  43e07c:	push   cs
  43e07d:	mov    ds:0xa09e12f,al
  43e082:	das    
  43e083:	add    al,0x10
  43e085:	push   cs
  43e086:	das    
  43e087:	outs   dx,BYTE PTR ds:[esi]
  43e088:	or     ebp,eax
  43e08a:	cs dec edi
  43e08c:	icebp  
  43e08d:	call   0x782e:0x20e89a2e
  43e094:	lock out dx,eax
  43e096:	sub    al,0xfe
  43e098:	jmp    0x43e0e5
  43e09a:	sub    eax,0x2d19d388
  43e09f:	jne    0x43e06c
  43e0a1:	dec    edi
  43e0a2:	sub    al,0x0
  43e0a4:	ja     0x43e036
  43e0a6:	ret    0xd633
  43e0a9:	test   al,0x46
  43e0ab:	xor    al,0x12
  43e0ad:	test   eax,0x920e34d1
  43e0b2:	cwde   
  43e0b3:	xor    eax,0x36ba9450
  43e0b8:	in     eax,dx
  43e0b9:	xchg   ebx,eax
  43e0ba:	enter  0x5a36,0x95
  43e0be:	(bad)  
  43e0bf:	ss pop eax
  43e0c1:	xchg   ebp,eax
  43e0c2:	loop   0x43e0fa
  43e0c4:	inc    esi
  43e0c5:	xchg   ebp,eax
  43e0c6:	pop    es
  43e0c7:	aaa    
  43e0c8:	jl     0x43e05d
  43e0ca:	sbb    DWORD PTR [edi],esi
  43e0cc:	sahf   
  43e0cd:	xchg   ecx,eax
  43e0ce:	sub    esi,DWORD PTR [edi]
  43e0d0:	outs   dx,BYTE PTR ds:[esi]
  43e0d1:	xchg   ebx,eax
  43e0d2:	cmp    al,0x37
  43e0d4:	add    BYTE PTR [eax],al
  43e0d6:	scas   al,BYTE PTR es:[edi]
  43e0d7:	xchg   ecx,eax
  43e0d8:	dec    ebx
  43e0d9:	aaa    
  43e0da:	ficom  WORD PTR [ecx-0x6e60c8a9]
  43e0e0:	push   0x37
  43e0e2:	fist   DWORD PTR [ecx-0x6df0c854]
  43e0e8:	push   ebp
  43e0e9:	cmp    BYTE PTR [ebx+0x1a38a0a6],bl
  43e0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e0f0:	fdivr  DWORD PTR [eax]
  43e0f2:	stos   DWORD PTR es:[edi],eax
  43e0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e0f4:	adc    bh,BYTE PTR [ecx]
  43e0f6:	test   DWORD PTR [ebx-0x52afc6c1],ebp
  43e0fc:	je     0x43e137
  43e0fe:	and    BYTE PTR [esp+edi*4+0x18a60739],ch
  43e105:	cmp    ch,BYTE PTR [esi-0x62c5d558]
  43e10b:	test   al,0x53
  43e10d:	cmp    ch,dl
  43e10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e110:	outs   dx,BYTE PTR ds:[esi]
  43e111:	cmp    bh,BYTE PTR [eax+ebp*4-0x57]
  43e115:	cmp    ah,BYTE PTR [eax+ebp*4-0x591fc51b]
  43e11c:	sbb    DWORD PTR [ebx*4-0x6eb31f53],edi
  43e123:	push   ebx
  43e124:	loopne 0x43e0b3
  43e126:	mov    edx,ebx
  43e128:	out    0xe6,eax
  43e12a:	and    DWORD PTR [ebp+0x647816e1],0x1d7059e1
  43e134:	loope  0x43e0d1
  43e136:	push   0xbce163
  43e13b:	add    BYTE PTR [eax-0x36],ah
  43e13e:	loope  0x43e128
  43e140:	fsub   DWORD PTR [eax-0x6a2cdf1a]
  43e146:	out    0x72,al
  43e148:	retf   
  43e149:	cmp    al,0xe7
  43e14b:	mov    dl,0xc3
  43e14d:	push   ebx
  43e14e:	out    0xc8,al
  43e150:	mov    ebx,0xb251e7a1
  43e155:	out    0xe6,eax
  43e157:	mov    ebp,DWORD PTR [edx-0x5d2317e0]
  43e15d:	test   eax,0xd15afd5c
  43e162:	add    eax,DWORD PTR [eax]
  43e164:	popf   
  43e165:	enter  0x45ec,0x8d
  43e169:	div    ebx
  43e16b:	pop    edx
  43e16c:	lea    esp,ds:0x2e6d8ded
  43e172:	in     eax,dx
  43e173:	mov    ds:0x20ed256d,eax
  43e178:	outs   dx,DWORD PTR ds:[esi]
  43e179:	cmp    eax,0x666e24f3
  43e17e:	repz adc eax,0xa2ea19d1
  43e184:	enter  0xe9e9,0xd7
  43e188:	shr    DWORD PTR [esi],cl
  43e18a:	out    dx,eax
  43e18b:	add    al,0xca
  43e18d:	mov    ds:0x66b232ef,al
  43e192:	out    dx,eax
  43e193:	inc    esi
  43e194:	stos   BYTE PTR es:[edi],al
  43e195:	jbe    0x43e186
  43e197:	dec    esi
  43e198:	mov    dl,0x2
  43e19a:	mov    esp,0xbbcf4bf0
  43e19f:	lock add BYTE PTR [eax],al
  43e1a2:	jnp    0x43e173
  43e1a4:	mov    esi,eax
  43e1a6:	cmp    ecx,edi
  43e1a8:	jnp    0x43e19a
  43e1aa:	cmp    ecx,edi
  43e1ac:	jnp    0x43e19e
  43e1ae:	dec    ebx
  43e1af:	iret   
  43e1b0:	jnp    0x43e1a2
  43e1b2:	cmp    ecx,edi
  43e1b4:	jle    0x43e1a1
  43e1b6:	das    
  43e1b7:	aad    0xe6
  43e1b9:	jae    0x43e163
  43e1bb:	xchg   esi,eax
  43e1bc:	mov    BYTE PTR [ebx*4+0x4ff43702],0xd3
  43e1c4:	mov    ah,0xf4
  43e1c6:	mov    eax,0x13f52cd3
  43e1cb:	aam    0x87
  43e1cd:	cmc    
  43e1ce:	pop    ebx
  43e1cf:	aam    0xde
  43e1d1:	out    dx,eax
  43e1d2:	add    ecx,edi
  43e1d4:	dec    edi
  43e1d5:	lock adc eax,0x5
  43e1d9:	out    dx,al
  43e1da:	(bad)  
  43e1db:	(bad)  
  43e1dd:	in     al,dx
  43e1de:	xchg   ebx,ebx
  43e1e0:	(bad)  
  43e1e1:	in     al,dx
  43e1e2:	jg     0x43e1bf
  43e1e4:	mov    edi,0xd7db87ec
  43e1e9:	in     al,dx
  43e1ea:	(bad)  
  43e1eb:	fstp   TBYTE PTR [edi+0x27db87ec]
  43e1f1:	in     eax,dx
  43e1f2:	(bad)  
  43e1f4:	pop    ds
  43e1f5:	in     eax,dx
  43e1f6:	out    0xdb,eax
  43e1f8:	pop    ss
  43e1f9:	in     eax,dx
  43e1fa:	iret   
  43e1fb:	fstp   TBYTE PTR [edi-0x38243814]
  43e201:	in     al,dx
  43e202:	jg     0x43e1df
  43e204:	mov    edi,0x870000ec
  43e209:	fcmovnbe st,st(7)
  43e20b:	in     al,dx
  43e20c:	(bad)  
  43e20d:	fstp   TBYTE PTR [edi+0x67db87ec]
  43e213:	in     eax,dx
  43e214:	pop    ds
  43e215:	fdiv   st(7),st
  43e217:	pop    edi
  43e218:	add    BYTE PTR [ecx+0x70f85836],cl
  43e21e:	ss xor al,0x78
  43e222:	ss dec eax
  43e224:	enter  0x3660,0x40
  43e228:	shr    BYTE PTR [eax+0x36],0x58
  43e22c:	mov    eax,0xb0403650
  43e231:	pop    eax
  43e232:	ss sub al,cl
  43e235:	shl    BYTE PTR [esi],0x20
  43e238:	ror    al,0x36
  43e23b:	sbb    BYTE PTR [eax-0x4e3fc950],bh
  43e241:	mov    eax,0xa089c836
  43e246:	rol    BYTE PTR ss:[ecx+0x79d836a8],0x90
  43e24e:	shl    BYTE PTR ss:[ecx-0x68],0x36
  43e253:	call   0xe079e2dc
  43e258:	test   BYTE PTR [eax],cl
  43e25a:	fdiv   DWORD PTR ss:[eax+esi*8+0x35]
  43e25f:	add    BYTE PTR [edi-0x8],dh
  43e262:	xor    eax,0x35e044c8
  43e267:	rol    BYTE PTR [eax+ebp*8+0x35],0xd8
  43e26c:	add    BYTE PTR [eax],al
  43e26e:	xor    al,0xd0
  43e270:	xor    eax,0x355434c0
  43e275:	sub    DWORD PTR [esi+0x3f],eax
  43e278:	xor    eax,0x351a47fd
  43e27d:	pop    esp
  43e27e:	aaa    
  43e27f:	ja     0x43e2b5
  43e281:	push   edx
  43e282:	aaa    
  43e283:	lea    esi,[ebx+esi*4]
  43e286:	add    ch,BYTE PTR [edi]
  43e288:	cmp    al,0x71
  43e28a:	cli    
  43e28b:	arpl   WORD PTR [edx],di
  43e28d:	sub    ch,dh
  43e28f:	ret    0x3a
  43e292:	push   esp
  43e293:	stos   BYTE PTR es:[edi],al
  43e294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e295:	ds fwait
  43e297:	lahf   
  43e298:	jno    0x43e2d9
  43e29a:	dec    edi
  43e29b:	pushf  
  43e29c:	clc    
  43e29d:	push   esp
  43e29f:	sar    dl,0xff
  43e2a2:	inc    eax
  43e2a3:	add    DWORD PTR [eax],eax
  43e2a5:	add    BYTE PTR [ecx-0x6f],al
  43e2a8:	mov    ds:0xc6916b30,eax
  43e2ad:	xor    BYTE PTR [ebx+0xf311391],ah
  43e2b3:	mov    ds,WORD PTR [edx+0x31]
  43e2b6:	popf   
  43e2b7:	mov    ?,eax
  43e2b9:	xor    edx,eax
  43e2bb:	xchg   edx,eax
  43e2bc:	or     dh,BYTE PTR [edx]
  43e2be:	jecxz  0x43e252
  43e2c0:	dec    esp
  43e2c1:	xor    bl,BYTE PTR [edi-0x70]
  43e2c4:	test   eax,0xf2916932
  43e2c9:	xor    cl,BYTE PTR [esi-0x32cce16d]
  43e2cf:	xchg   ecx,eax
  43e2d0:	jp     0x43e305
  43e2d2:	add    BYTE PTR [eax],al
  43e2d4:	in     eax,0x91
  43e2d6:	jmp    0x43e30b
  43e2d8:	xchg   BYTE PTR [eax+edx*1-0x3a5c32cc],ah
  43e2df:	xor    eax,0x35e6a410
  43e2e4:	add    ah,BYTE PTR [esi+ecx*1+0x3aa67136]
  43e2eb:	add    ah,BYTE PTR ss:[ebp-0x5ae0c933]
  43e2f2:	in     al,dx
  43e2f3:	ss cmp al,0xa7
  43e2f6:	xor    DWORD PTR [edi],0x3823a57a
  43e2fc:	xchg   edx,eax
  43e2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2fe:	jns    0x43e338
  43e300:	jmp    0xb6aa:0x1839b8a8
  43e307:	cmp    esp,DWORD PTR [edi-0x57]
  43e30a:	(bad)  
  43e30b:	cmp    ebx,DWORD PTR [ebp-0x37731fad]
  43e311:	mov    eax,esp
  43e313:	lods   eax,DWORD PTR ds:[esi]
  43e314:	ror    ch,0xe0
  43e317:	int    0xb8
  43e319:	inc    ebp
  43e31a:	loope  0x43e311
  43e31c:	mov    al,0xb8
  43e31e:	loop   0x43e336
  43e320:	stos   DWORD PTR es:[edi],eax
  43e321:	jmp    ecx
  43e323:	cmp    DWORD PTR [ebx-0x64ae1da7],esp
  43e329:	vprolvq zmm4{k3}{z},zmm7,zmm2
  43e32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e330:	mov    edi,DWORD PTR [ecx]
  43e332:	loop   0x43e2f1
  43e334:	adc    ecx,0xffffffe1
  43e337:	fld    DWORD PTR [eax]
  43e339:	add    BYTE PTR [ebx-0x66],bh
  43e33c:	loop   0x43e333
  43e33e:	jae    0x43e2e9
  43e340:	jecxz  0x43e34e
  43e342:	push   0xffffffb2
  43e344:	jecxz  0x43e373
  43e346:	(bad)  
  43e347:	jmp    0x78e3:0x43da51e2
  43e34e:	rcr    BYTE PTR [esi],cl
  43e350:	in     al,0xad
  43e352:	retf   0xe34f
  43e355:	inc    DWORD PTR [edx+0x7afdcca9]
  43e35b:	xor    eax,0xa59dfffd
  43e360:	in     al,dx
  43e361:	sub    BYTE PTR [ebp-0x52a20c0a],ch
  43e367:	sub    ch,ch
  43e369:	mov    cl,BYTE PTR [ebp-0x725612cf]
  43e36f:	sub    al,0xed
  43e371:	lds    ecx,FWORD PTR [ebp-0x73fe1376]
  43e377:	cld    
  43e378:	in     al,dx
  43e379:	xchg   BYTE PTR [ecx+eiz*1-0x12],ch
  43e37d:	mov    al,ds:0xe9edd56c
  43e382:	ins    BYTE PTR es:[edi],dx
  43e383:	xor    ebp,edi
  43e385:	nop
  43e386:	outs   dx,DWORD PTR ds:[esi]
  43e387:	add    bl,BYTE PTR [ebx+0x5ad058f1]
  43e38d:	icebp  
  43e38e:	mov    ebp,0xbef052cf
  43e393:	into   
  43e394:	lods   eax,DWORD PTR ds:[esi]
  43e395:	out    dx,eax
  43e396:	or     esi,0xcd63ef8d
  43e39c:	fucomi st,st(4)
  43e39e:	add    BYTE PTR [eax],al
  43e3a0:	test   eax,0x41eca8cb
  43e3a5:	retf   
  43e3a6:	jo     0x43e394
  43e3a8:	fmul   st(2),st
  43e3aa:	out    0xeb,eax
  43e3ac:	mov    al,ds:0x21eb92da
  43e3b1:	fidiv  DWORD PTR [ecx-0x18]
  43e3b4:	call   esi
  43e3b6:	mov    edi,0xfcd5cee7
  43e3bb:	out    0xd4,al
  43e3bd:	aam    0xc5
  43e3bf:	in     eax,0x78
  43e3c1:	aam    0xb7
  43e3c3:	in     eax,0x6d
  43e3c5:	aam    0xa9
  43e3c7:	in     eax,0x5c
  43e3c9:	aam    0x2c
  43e3cb:	loop   0x43e3b7
  43e3cd:	shl    BYTE PTR [eax],1
  43e3cf:	loop   0x43e3c5
  43e3d1:	rcr    BYTE PTR [edx-0x1e],1
  43e3d4:	cmp    dl,cl
  43e3d6:	xchg   ecx,eax
  43e3d7:	loop   0x43e41d
  43e3d9:	shr    DWORD PTR [edx-0x6a2e991e],1
  43e3df:	loop   0x43e42e
  43e3e1:	rcl    DWORD PTR [ebx-0x422eb61e],1
  43e3e7:	loop   0x43e387
  43e3e9:	rcl    eax,1
  43e3eb:	loop   0x43e3ca
  43e3ed:	shl    DWORD PTR [ebx+eiz*8+0x7],1
  43e3f1:	sar    BYTE PTR [edi-0x1d],cl
  43e3f4:	inc    esi
  43e3f5:	shl    dh,cl
  43e3f7:	mov    ds:0x3fa9240,eax
  43e3fc:	popf   
  43e3fd:	add    cl,ch
  43e3ff:	shl    esi,cl
  43e401:	sar    bh,cl
  43e403:	add    al,0x0
  43e405:	add    BYTE PTR [ecx+0x59],dl
  43e408:	das    
  43e409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e40a:	dec    ecx
  43e40b:	loop   0x43e43b
  43e40d:	out    0xf1,eax
  43e40f:	push   ebp
  43e410:	cs pop ds
  43e412:	jmp    0x43e459
  43e414:	cs mov al,0xf0
  43e417:	jl     0x43e446
  43e419:	jp     0x43e406
  43e41b:	pop    ebx
  43e41c:	sub    eax,0x2d07d34f
  43e421:	(bad)  
  43e422:	retf   
  43e423:	xor    DWORD PTR ds:0x2c54d26d,ebp
  43e429:	daa    
  43e42a:	retf   0x2cab
  43e42d:	icebp  
  43e42e:	repnz jmp 0xfd34:0x12eadf33
  43e436:	in     eax,0xe2
  43e438:	xor    ah,BYTE PTR [edx+0x1432c8e5]
  43e43e:	aam    0xf2
  43e440:	xor    DWORD PTR [ebp-0x67cdb82c],esp
  43e446:	les    esi,FWORD PTR [ebx]
  43e448:	xor    cl,BYTE PTR [ebx-0x36ce483c]
  43e44e:	je     0x43e485
  43e450:	xor    DWORD PTR [edi],edi
  43e452:	jbe    0x43e40e
  43e454:	xor    ah,cl
  43e456:	cmp    DWORD PTR ds:0x63ae,esi
  43e45b:	test   al,0x34
  43e45d:	les    ebx,FWORD PTR [ebx+0x48]
  43e460:	cmp    al,0x3a
  43e462:	jge    0x43e41f
  43e464:	cmp    ebx,DWORD PTR [edi]
  43e466:	jg     0x43e47d
  43e468:	cmp    cl,BYTE PTR [ecx-0x6e840000]
  43e46e:	clc    
  43e46f:	jmp    0x4a3c73a2
  43e474:	sahf   
  43e475:	add    al,BYTE PTR [eax]
  43e477:	leave  
  43e478:	outs   dx,BYTE PTR ds:[esi]
  43e479:	sbb    DWORD PTR [esi],ebp
  43e47b:	mov    ch,BYTE PTR [eax-0xb]
  43e47e:	sub    al,0x0
  43e480:	cmp    al,0xb8
  43e482:	adc    al,0x33
  43e484:	fs mov eax,0xb85c331c
  43e48a:	and    al,0x33
  43e48c:	in     al,0xb7
  43e48e:	sub    al,0x33
  43e490:	mov    esp,0x443334b9
  43e495:	mov    eax,0xb83c333c
  43e49a:	inc    esp
  43e49b:	xor    eax,DWORD PTR [eax+edi*4-0x79]
  43e49f:	xor    edx,DWORD PTR [ecx]
  43e4a1:	mov    eax,0xb8b333cc
  43e4a6:	and    dh,BYTE PTR [esi+eiz*8]
  43e4a9:	mov    eax,0xb96e3467
  43e4ae:	adc    esi,DWORD PTR ds:0x3579aa15
  43e4b4:	mov    ecx,0x91362eaa
  43e4b9:	stos   DWORD PTR es:[edi],eax
  43e4ba:	mov    esi,DWORD PTR [edi]
  43e4bc:	lds    ebp,FWORD PTR [ebp+edx*1+0x25ad0638]
  43e4c3:	cmp    DWORD PTR [ebx],edx
  43e4c5:	scas   al,BYTE PTR es:[edi]
  43e4c6:	mov    eax,ds:0xb9b0693b
  43e4cb:	cmp    al,0x8c
  43e4cd:	mov    ds:0x3dd8,al
  43e4d2:	jl     0x43e484
  43e4d4:	ins    BYTE PTR es:[edi],dx
  43e4d5:	ds (bad) 
  43e4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4d8:	js     0x43e518
  43e4da:	add    al,0xa5
  43e4dc:	mov    ?,WORD PTR [esi]
  43e4de:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4e0:	call   0xe93e:0xa6a50c3e
  43e4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4e8:	mov    ah,0x3e
  43e4ea:	aaa    
  43e4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e4ec:	ret    0x53e
  43e4ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e4f0:	sar    BYTE PTR [esi],1
  43e4f2:	arpl   WORD PTR [ebp-0x5adcc121],sp
  43e4f8:	out    dx,eax
  43e4f9:	ds popf 
  43e4fb:	pushf  
  43e4fc:	fisttp WORD PTR [ebx]
  43e4fe:	or     BYTE PTR [edx-0x4585ef21],0xdf
  43e505:	and    eax,0x3cdf5672
  43e50a:	push   0xffffffe1
  43e50c:	fimul  WORD PTR [ecx+0x62]
  43e50f:	repnz ficomp WORD PTR [edi-0x26]
  43e513:	cdq    
  43e514:	cld    
  43e515:	cld    
  43e516:	adc    ch,dl
  43e518:	add    eax,DWORD PTR [eax]
  43e51a:	popf   
  43e51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e51c:	int3   
  43e51d:	adc    ecx,ebp
  43e51f:	call   0x8bf1b7f7
  43e524:	int    0x72
  43e526:	lods   al,BYTE PTR ds:[esi]
  43e527:	sub    ecx,ebp
  43e529:	fsubr  DWORD PTR [ebp+edi*1-0x4530c33]
  43e530:	(bad)  
  43e531:	inc    esp
  43e532:	xchg   edx,eax
  43e533:	ret    
  43e534:	xlat   BYTE PTR ds:[ebx]
  43e535:	pop    esi
  43e536:	add    BYTE PTR [eax],al
  43e538:	xchg   edi,eax
  43e539:	adc    ebx,edx
  43e53b:	xchg   esi,eax
  43e53c:	xchg   DWORD PTR [ecx+0x3c8328de],edi
  43e542:	fisubr WORD PTR [esi-0x3136685]
  43e548:	mov    dl,0xad
  43e54a:	cld    
  43e54b:	call   FWORD PTR [ebp+0x6c07cc54]
  43e551:	or     ecx,esi
  43e553:	mov    eax,0x3cd6a2cc
  43e558:	retf   0xd45f
  43e55b:	add    ah,al
  43e55d:	out    dx,eax
  43e55e:	fucom  st(1)
  43e560:	ret    0xdc99
  43e563:	cld    
  43e564:	jp     0x43e5df
  43e566:	cld    
  43e567:	call   FWORD PTR [ebp-0x50c33242]
  43e56d:	ins    DWORD PTR es:[edi],dx
  43e56e:	rcl    edi,cl
  43e570:	scas   al,BYTE PTR es:[edi]
  43e571:	jge    0x43e546
  43e573:	fisttp WORD PTR [esi+0x3ad48b02]
  43e579:	ror    DWORD PTR [edx-0x652cc52c],cl
  43e57f:	aam    0x4a
  43e581:	ror    DWORD PTR [edx-0x152cc52c],cl
  43e587:	xlat   BYTE PTR ds:[ebx]
  43e588:	call   0xdad6:0x9ad7ead6
  43e58f:	xlat   BYTE PTR ds:[ebx]
  43e590:	mov    dl,dh
  43e592:	retf   0xbad7
  43e595:	(bad)  
  43e596:	or     bl,al
  43e598:	mov    edx,0xd80ad6
  43e59d:	add    BYTE PTR [edx-0x3527e52a],bh
  43e5a3:	(bad)  
  43e5a4:	or     bl,al
  43e5a6:	mov    edx,0x5ad7aad6
  43e5ab:	(bad)  
  43e5ac:	stos   BYTE PTR es:[edi],al
  43e5ad:	xlat   BYTE PTR ds:[ebx]
  43e5ae:	pop    edx
  43e5af:	(bad)  
  43e5b0:	call   0x6cd7:0x8ad64ad7
  43e5b7:	xlat   BYTE PTR ds:[ebx]
  43e5b8:	ins    DWORD PTR es:[edi],dx
  43e5b9:	fsub   DWORD PTR [eax]
  43e5bb:	xlat   BYTE PTR ds:[ebx]
  43e5bc:	js     0x43e596
  43e5be:	add    bh,dl
  43e5c0:	push   eax
  43e5c1:	fcom   st(2)
  43e5c3:	(bad)  
  43e5c4:	sub    bl,al
  43e5c6:	ret    
  43e5c7:	(bad)  
  43e5c8:	out    dx,eax
  43e5c9:	(bad)  [edx-0x7d242536]
  43e5cf:	retf   0xdbb2
  43e5d2:	push   esp
  43e5d3:	retf   0xdb8c
  43e5d6:	std    
  43e5d7:	retf   0xdc67
  43e5da:	and    al,0xcb
  43e5dc:	jl     0x43e5ba
  43e5de:	cmp    al,0xcb
  43e5e0:	mov    esp,ds
  43e5e2:	push   esi
  43e5e3:	retf   
  43e5e4:	scas   al,BYTE PTR es:[edi]
  43e5e5:	fdivr  QWORD PTR [edi-0x35]
  43e5e8:	jmp    0x43e5c6
  43e5ea:	mov    al,ds:0xc0dcd8cb
  43e5ef:	retf   
  43e5f0:	push   esi
  43e5f2:	inc    ecx
  43e5f3:	ds aaa 
  43e5f5:	or     eax,0x7a372578
  43e5fa:	jo     0x43e65d
  43e5fc:	ss pop eax
  43e5fe:	push   0x883649
  43e603:	add    BYTE PTR [eax-0x72],ah
  43e606:	clc    
  43e607:	jmp    0xe63c755a
  43e60c:	sahf   
  43e60d:	add    al,BYTE PTR [eax]
  43e60f:	sbb    edx,DWORD PTR [edx+0x56]
  43e612:	xor    BYTE PTR [ecx+0x54368241],al
  43e618:	clc    
  43e619:	div    BYTE PTR ds:0x35c0f710
  43e61f:	ss out 0x8d,eax
  43e622:	clc    
  43e623:	jmp    0xaa3c7586
  43e628:	sahf   
  43e629:	add    al,BYTE PTR [eax]
  43e62b:	stos   BYTE PTR es:[edi],al
  43e62c:	into   
  43e62d:	xor    BYTE PTR [eax],dh
  43e62f:	(bad)  
  43e630:	into   
  43e631:	adc    al,0x30
  43e633:	cdq    
  43e634:	iret   
  43e635:	xor    BYTE PTR ds:0x327cf5f5,ch
  43e63b:	test   ah,dh
  43e63d:	cmp    BYTE PTR ds:[edx-0x17],dl
  43e641:	shl    DWORD PTR [esi],1
  43e643:	mov    cl,0xe1
  43e645:	xchg   esi,eax
  43e646:	ss not ah
  43e649:	loop   0x43e680
  43e64b:	scas   eax,DWORD PTR es:[edi]
  43e64c:	aam    0x71
  43e64e:	xor    eax,0x3c20ca9f
  43e653:	xchg   dl,al
  43e655:	or     DWORD PTR [ebx+ebx*8],edi
  43e658:	jnp    0x43e642
  43e65a:	cmp    BYTE PTR [ebx+0x72],dl
  43e65d:	cdq    
  43e65e:	cmp    cl,bl
  43e660:	imul   ecx,DWORD PTR [ecx-0x703116c8],0xfffffff8
  43e667:	adc    eax,0x2a10000
  43e66c:	add    BYTE PTR [eax],al
  43e66e:	test   BYTE PTR [ecx-0x4ebbcffc],dh
  43e674:	adc    al,0x30
  43e676:	xchg   esp,eax
  43e677:	mov    dh,0x24
  43e679:	xor    BYTE PTR [ecx+esi*4+0x34],dl
  43e67d:	xor    BYTE PTR [esi+esi*4-0x497bcfbc],al
  43e684:	push   esp
  43e685:	xor    BYTE PTR [esi+esi*4-0x496bcf9c],dl
  43e68c:	je     0x43e6be
  43e68e:	les    esi,FWORD PTR [ecx-0x4e3bcf7c]
  43e694:	xchg   esp,eax
  43e695:	xor    ah,dl
  43e697:	mov    cl,0xf8
  43e699:	inc    DWORD PTR [ecx+eiz*1]
  43e69c:	cld    
  43e69d:	dec    DWORD PTR [eax+0x6]
  43e6a0:	add    BYTE PTR [eax],al
  43e6a2:	add    al,0xb0
  43e6a4:	or     al,0x33
  43e6a6:	nop
  43e6a7:	mov    cl,0x20
  43e6a9:	xor    ebp,DWORD PTR [eax+0x383350b1]
  43e6af:	mov    al,0x58
  43e6b1:	xor    esp,eax
  43e6b3:	scas   eax,DWORD PTR es:[edi]
  43e6b4:	pusha  
  43e6b5:	xor    ebx,eax
  43e6b7:	scas   eax,DWORD PTR es:[edi]
  43e6b8:	push   0x70b01033
  43e6bd:	xor    edi,eax
  43e6bf:	scas   eax,DWORD PTR es:[edi]
  43e6c0:	js     0x43e6f5
  43e6c2:	inc    eax
  43e6c3:	mov    al,0x80
  43e6c5:	xor    edi,DWORD PTR [eax]
  43e6c7:	mov    al,0x88
  43e6c9:	xor    esi,DWORD PTR [eax]
  43e6cb:	mov    al,0x90
  43e6cd:	xor    eax,DWORD PTR [eax]
  43e6cf:	add    BYTE PTR [eax],bh
  43e6d1:	mov    al,0x98
  43e6d3:	xor    esp,DWORD PTR [eax-0x50]
  43e6d6:	mov    al,ds:0xa8b05833
  43e6db:	xor    edx,eax
  43e6dd:	mov    al,0xb0
  43e6df:	xor    edi,DWORD PTR [eax]
  43e6e1:	mov    dl,0xb8
  43e6e3:	xor    eax,DWORD PTR [eax-0x4e]
  43e6e6:	shl    BYTE PTR [ebx],0x9d
  43e6e9:	gs into 
  43e6eb:	iret   
  43e6ec:	scas   al,BYTE PTR es:[edi]
  43e6ed:	push   ebp
  43e6ee:	into   
  43e6ef:	xlat   BYTE PTR ds:[ebx]
  43e6f0:	scas   al,BYTE PTR es:[edi]
  43e6f1:	gs into 
  43e6f3:	fild   QWORD PTR [esi-0x5118313b]
  43e6f9:	(bad)
  43e6fc:	mov    ss,WORD PTR [ebp-0x32]
  43e6ff:	test   DWORD PTR [esi-0x7100319b],0x8907d0a5
  43e709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e70a:	ror    BYTE PTR [edi],1
  43e70c:	jno    0x43e6a3
  43e70e:	rcl    BYTE PTR [edi],1
  43e710:	imul   esp,DWORD PTR [ebp-0x3a8ee030],0xc56927d0
  43e71a:	shr    BYTE PTR [edi],1
  43e71c:	rcl    DWORD PTR [ebp-0x30],1
  43e71f:	aaa    
  43e720:	leave  
  43e721:	in     eax,0xd7
  43e723:	aas    
  43e724:	shl    DWORD PTR [ebp-0x30],1
  43e727:	inc    edi
  43e728:	leave  
  43e729:	ror    BYTE PTR gs:[edi-0x4f],1
  43e72d:	push   ebp
  43e72e:	rcl    BYTE PTR [edi-0x57],1
  43e731:	rcr    BYTE PTR gs:[edi+0x0],1
  43e735:	add    BYTE PTR [ecx-0x56982f3b],dh
  43e73b:	(bad)
  43e73e:	xchg   ecx,eax
  43e73f:	push   ebp
  43e740:	shl    BYTE PTR [edi-0x77],1
  43e743:	sar    BYTE PTR gs:[edi-0x6f],1
  43e747:	and    eax,0x258987d8
  43e74c:	fmul   DWORD PTR [edi-0x6827ea8f]
  43e752:	imul   esp,DWORD PTR ds:0xe571b3d8,0xfd69d3d7
  43e75c:	xlat   BYTE PTR ds:[ebx]
  43e75d:	repz shl DWORD PTR [ebp+0x2c813d1],1
  43e764:	or     edx,edi
  43e766:	into   
  43e767:	aad    0x22
  43e769:	xlat   BYTE PTR ds:[ebx]
  43e76a:	out    dx,al
  43e76b:	aad    0x4a
  43e76d:	xlat   BYTE PTR ds:[ebx]
  43e76e:	out    dx,al
  43e76f:	aad    0x62
  43e771:	(bad)  
  43e772:	push   cs
  43e773:	aad    0x8a
  43e775:	(bad)  
  43e776:	cs aad 0xa2
  43e779:	(bad)  
  43e77a:	dec    esi
  43e77b:	aad    0xca
  43e77d:	(bad)  
  43e77e:	dec    esi
  43e77f:	aad    0xe2
  43e781:	aad    0xae
  43e783:	aam    0xca
  43e785:	aad    0x8e
  43e787:	aam    0x22
  43e789:	(bad)  
  43e78a:	out    dx,al
  43e78b:	aam    0xa
  43e78d:	(bad)  
  43e78e:	scas   al,BYTE PTR es:[edi]
  43e78f:	aam    0x62
  43e791:	aad    0xe
  43e793:	aam    0x4a
  43e795:	aad    0xee
  43e797:	shl    DWORD PTR [edx+0x4e0000d5],cl
  43e79d:	aam    0x8a
  43e79f:	aad    0xe
  43e7a1:	aam    0xe2
  43e7a3:	aam    0xae
  43e7a5:	ror    DWORD PTR [edx],cl
  43e7a7:	aad    0xce
  43e7a9:	shl    DWORD PTR [edx-0x352c912c],cl
  43e7af:	aam    0x6e
  43e7b1:	shl    DWORD PTR [edx-0x2c],cl
  43e7b4:	push   cs
  43e7b5:	ror    DWORD PTR [edx+0x22d32ed4],cl
  43e7bb:	aam    0xce
  43e7bd:	ror    BYTE PTR [edx-0x2c],cl
  43e7c0:	into   
  43e7c1:	shl    dl,cl
  43e7c3:	fld    TBYTE PTR [esi-0x71243536]
  43e7c9:	retf   0xdba2
  43e7cc:	outs   dx,BYTE PTR ds:[esi]
  43e7cd:	retf   0xdb8a
  43e7d0:	dec    edx
  43e7d1:	retf   0xdb92
  43e7d4:	sub    cl,dl
  43e7d6:	data16 fistp DWORD PTR [esi]
  43e7d9:	retf   0xdb6e
  43e7dc:	push   ss
  43e7dd:	retf   0x58ff
  43e7e0:	jbe    0x43e858
  43e7e2:	aaa    
  43e7e3:	push   ecx
  43e7e4:	jbe    0x43e854
  43e7e6:	aaa    
  43e7e7:	mov    DWORD PTR [ecx+0x66],ebp
  43e7ea:	aaa    
  43e7eb:	xchg   ecx,eax
  43e7ec:	popa   
  43e7ed:	pop    esi
  43e7ee:	aaa    
  43e7ef:	jmp    0xe943ea92
  43e7f4:	sahf   
  43e7f5:	add    al,BYTE PTR [eax]
  43e7f7:	jmp    0xe943ea9a
  43e7fc:	sahf   
  43e7fd:	add    al,BYTE PTR [eax]
  43e7ff:	jmp    0x2e1e804
  43e804:	add    cl,ch
  43e806:	sahf   
  43e807:	add    al,BYTE PTR [eax]
  43e809:	jmp    0xe943eaac
  43e80e:	sahf   
  43e80f:	add    al,BYTE PTR [eax]
  43e811:	jmp    0xe943eab4
  43e816:	sahf   
  43e817:	add    al,BYTE PTR [eax]
  43e819:	jmp    0xe943eabc
  43e81e:	sahf   
  43e81f:	add    al,BYTE PTR [eax]
  43e821:	jmp    0xe943eac4
  43e826:	sahf   
  43e827:	add    al,BYTE PTR [eax]
  43e829:	jmp    0xe943eacc
  43e82e:	sahf   
  43e82f:	add    al,BYTE PTR [eax]
  43e831:	jmp    0xe943ead4
  43e836:	sahf   
  43e837:	add    al,BYTE PTR [eax]
  43e839:	jmp    0xe943eadc
  43e83e:	sahf   
  43e83f:	add    al,BYTE PTR [eax]
  43e841:	jmp    0xe943eae4
  43e846:	sahf   
  43e847:	add    al,BYTE PTR [eax]
  43e849:	jmp    0xe943eaec
  43e84e:	sahf   
  43e84f:	add    al,BYTE PTR [eax]
  43e851:	jmp    0xe943eaf4
  43e856:	sahf   
  43e857:	add    al,BYTE PTR [eax]
  43e859:	add    BYTE PTR [ebp+eax*1+0x5b40000],dh
  43e860:	add    BYTE PTR [eax],al
  43e862:	test   BYTE PTR ds:0x0,al
  43e868:	test   BYTE PTR ds:0x5740000,al
  43e86e:	add    BYTE PTR [eax],al
  43e870:	je     0x43e877
  43e872:	add    BYTE PTR [eax],al
  43e874:	test   BYTE PTR ds:0x5840000,al
  43e87a:	add    BYTE PTR [eax],al
  43e87c:	je     0x43e883
  43e87e:	add    BYTE PTR [eax],al
  43e880:	je     0x43e887
  43e882:	add    BYTE PTR [eax],al
  43e884:	inc    esp
  43e885:	add    eax,0x5440000
  43e88a:	add    BYTE PTR [eax],al
  43e88c:	xor    al,0x5
  43e88e:	add    BYTE PTR [eax],al
  43e890:	xor    al,0x5
  43e892:	add    BYTE PTR [eax],al
  43e894:	inc    esp
  43e895:	add    eax,0x5440000
  43e89a:	add    BYTE PTR [eax],al
  43e89c:	xor    al,0x5
  43e89e:	add    BYTE PTR [eax],al
  43e8a0:	xor    al,0x5
  43e8a2:	add    BYTE PTR [eax],al
  43e8a4:	add    al,0x5
  43e8a6:	add    BYTE PTR [eax],al
  43e8a8:	add    al,0x5
  43e8aa:	add    BYTE PTR [eax],al
  43e8ac:	hlt    
  43e8ad:	add    al,0x0
  43e8af:	add    ah,dh
  43e8b1:	add    al,0x0
  43e8b3:	add    BYTE PTR [eax*1+0x5040000],al
  43e8ba:	add    BYTE PTR [eax],al
  43e8bc:	hlt    
  43e8bd:	add    al,0x0
  43e8bf:	add    ah,dh
  43e8c1:	add    al,0x0
  43e8c3:	add    ah,al
  43e8c5:	add    al,0x0
  43e8c7:	add    ah,al
  43e8c9:	add    al,0x0
  43e8cb:	add    BYTE PTR [eax],al
  43e8cd:	add    BYTE PTR [esp+eax*1+0x4b40000],dh
  43e8d4:	add    BYTE PTR [eax],al
  43e8d6:	popf   
  43e8d7:	fwait
  43e8d8:	cld    
  43e8d9:	call   FWORD PTR [ebp-0x62000365]
  43e8df:	fwait
  43e8e0:	cld    
  43e8e1:	call   FWORD PTR [ebp-0x62000365]
  43e8e7:	cdq    
  43e8e8:	cld    
  43e8e9:	call   FWORD PTR [ebp-0x62000367]
  43e8ef:	cdq    
  43e8f0:	cld    
  43e8f1:	call   FWORD PTR [ebp-0x62000367]
  43e8f7:	cdq    
  43e8f8:	cld    
  43e8f9:	call   FWORD PTR [ebp-0x62000367]
  43e8ff:	cdq    
  43e900:	cld    
  43e901:	call   FWORD PTR [ebp-0x62000367]
  43e907:	cdq    
  43e908:	cld    
  43e909:	call   FWORD PTR [ebp-0x62000367]
  43e90f:	cdq    
  43e910:	cld    
  43e911:	call   FWORD PTR [ebp-0x62000367]
  43e917:	cdq    
  43e918:	cld    
  43e919:	call   FWORD PTR [ebp-0x62000367]
  43e91f:	cdq    
  43e920:	cld    
  43e921:	call   FWORD PTR [ebp-0x62000367]
  43e927:	cdq    
  43e928:	cld    
  43e929:	call   FWORD PTR [ebp-0x62000367]
  43e92f:	cdq    
  43e930:	cld    
  43e931:	inc    DWORD PTR [eax]
  43e933:	add    BYTE PTR [ebp-0x62000367],bl
  43e939:	cdq    
  43e93a:	cld    
  43e93b:	call   FWORD PTR [ebp-0x62000367]
  43e941:	cdq    
  43e942:	cld    
  43e943:	call   FWORD PTR [ebp-0x62000367]
  43e949:	cdq    
  43e94a:	cld    
  43e94b:	call   FWORD PTR [ebp-0x62000367]
  43e951:	add    ah,bh
  43e953:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e959:	add    ah,bh
  43e95b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e961:	add    ah,bh
  43e963:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e969:	add    ah,bh
  43e96b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e971:	add    ah,bh
  43e973:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e979:	add    ah,bh
  43e97b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e981:	add    ah,bh
  43e983:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e989:	add    ah,bh
  43e98b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e991:	add    ah,bh
  43e993:	add    ebx,DWORD PTR [ebp+0x3e702]
  43e999:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43e99f:	add    ah,bh
  43e9a1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e9a7:	add    ah,bh
  43e9a9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e9af:	add    ah,bh
  43e9b1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e9b7:	add    ah,bh
  43e9b9:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e9bf:	add    ah,bh
  43e9c1:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43e9c7:	add    ah,bh
  43e9c9:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  43e9cf:	add    al,BYTE PTR [eax]
  43e9d1:	jmp    0xe943ec74
  43e9d6:	sahf   
  43e9d7:	add    al,BYTE PTR [eax]
  43e9d9:	jmp    0xe943ec7c
  43e9de:	sahf   
  43e9df:	add    al,BYTE PTR [eax]
  43e9e1:	jmp    0xe943ec84
  43e9e6:	sahf   
  43e9e7:	add    al,BYTE PTR [eax]
  43e9e9:	jmp    0xe943ec8c
  43e9ee:	sahf   
  43e9ef:	add    al,BYTE PTR [eax]
  43e9f1:	jmp    0xe943ec94
  43e9f6:	sahf   
  43e9f7:	add    al,BYTE PTR [eax]
  43e9f9:	jmp    0xe943ec9c
  43e9fe:	add    BYTE PTR [eax],al
  43ea00:	sahf   
  43ea01:	add    al,BYTE PTR [eax]
  43ea03:	jmp    0xe943eca6
  43ea08:	sahf   
  43ea09:	add    al,BYTE PTR [eax]
  43ea0b:	jmp    0xe943ecae
  43ea10:	sahf   
  43ea11:	add    al,BYTE PTR [eax]
  43ea13:	jmp    0xe943ecb6
  43ea18:	sahf   
  43ea19:	add    al,BYTE PTR [eax]
  43ea1b:	jmp    0xe943ecbe
  43ea20:	sahf   
  43ea21:	add    al,BYTE PTR [eax]
  43ea23:	jmp    0xe943ecc6
  43ea28:	sahf   
  43ea29:	add    al,BYTE PTR [eax]
  43ea2b:	jmp    0xe943ecce
  43ea30:	sahf   
  43ea31:	add    al,BYTE PTR [eax]
  43ea33:	jmp    0xe943ecd6
  43ea38:	sahf   
  43ea39:	add    al,BYTE PTR [eax]
  43ea3b:	jmp    0xe943ecde
  43ea40:	sahf   
  43ea41:	add    al,BYTE PTR [eax]
  43ea43:	jmp    0x43ece6
  43ea48:	hlt    
  43ea49:	add    DWORD PTR [eax],eax
  43ea4b:	add    ah,al
  43ea4d:	add    DWORD PTR [eax],eax
  43ea4f:	add    ah,al
  43ea51:	add    DWORD PTR [eax],eax
  43ea53:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  43ea5a:	add    BYTE PTR [eax],al
  43ea5c:	les    eax,FWORD PTR [ecx]
  43ea5e:	add    BYTE PTR [eax],al
  43ea60:	les    eax,FWORD PTR [ecx]
  43ea62:	add    BYTE PTR [eax],al
  43ea64:	add    BYTE PTR [eax],al
  43ea66:	mov    ah,0x1
  43ea68:	add    BYTE PTR [eax],al
  43ea6a:	mov    ah,0x1
  43ea6c:	add    BYTE PTR [eax],al
  43ea6e:	test   BYTE PTR [ecx],al
  43ea70:	add    BYTE PTR [eax],al
  43ea72:	test   BYTE PTR [ecx],al
  43ea74:	add    BYTE PTR [eax],al
  43ea76:	je     0x43ea79
  43ea78:	add    BYTE PTR [eax],al
  43ea7a:	je     0x43ea7d
  43ea7c:	add    BYTE PTR [eax],al
  43ea7e:	test   BYTE PTR [ecx],al
  43ea80:	add    BYTE PTR [eax],al
  43ea82:	test   BYTE PTR [ecx],al
  43ea84:	add    BYTE PTR [eax],al
  43ea86:	je     0x43ea89
  43ea88:	add    BYTE PTR [eax],al
  43ea8a:	je     0x43ea8d
  43ea8c:	add    BYTE PTR [eax],al
  43ea8e:	inc    esp
  43ea8f:	add    DWORD PTR [eax],eax
  43ea91:	add    BYTE PTR [ecx+eax*1+0x0],al
  43ea95:	add    BYTE PTR [ecx+eax*1],dh
  43ea98:	add    BYTE PTR [eax],al
  43ea9a:	xor    al,0x1
  43ea9c:	add    BYTE PTR [eax],al
  43ea9e:	inc    esp
  43ea9f:	add    DWORD PTR [eax],eax
  43eaa1:	add    BYTE PTR [ecx+eax*1+0x0],al
  43eaa5:	add    BYTE PTR [ecx+eax*1],dh
  43eaa8:	add    BYTE PTR [eax],al
  43eaaa:	xor    al,0x1
  43eaac:	add    BYTE PTR [eax],al
  43eaae:	add    al,0x1
  43eab0:	add    BYTE PTR [eax],al
  43eab2:	add    al,0x1
  43eab4:	add    BYTE PTR [eax],al
  43eab6:	hlt    
  43eab7:	add    BYTE PTR [eax],al
  43eab9:	add    ah,dh
  43eabb:	add    BYTE PTR [eax],al
  43eabd:	add    BYTE PTR [ecx+eax*1],al
  43eac0:	add    BYTE PTR [eax],al
  43eac2:	popf   
  43eac3:	fwait
  43eac4:	cld    
  43eac5:	call   FWORD PTR [ebp+0xfffc9b]
  43eacb:	add    BYTE PTR [ebp-0x62000365],bl
  43ead1:	fwait
  43ead2:	cld    
  43ead3:	call   FWORD PTR [ebp-0x62000365]
  43ead9:	fwait
  43eada:	cld    
  43eadb:	call   FWORD PTR [ebp-0x62000365]
  43eae1:	fwait
  43eae2:	cld    
  43eae3:	call   FWORD PTR [ebp-0x62000365]
  43eae9:	fwait
  43eaea:	cld    
  43eaeb:	call   FWORD PTR [ebp-0x62000365]
  43eaf1:	cdq    
  43eaf2:	cld    
  43eaf3:	call   FWORD PTR [ebp-0x62000367]
  43eaf9:	cdq    
  43eafa:	cld    
  43eafb:	call   FWORD PTR [ebp-0x62000367]
  43eb01:	cdq    
  43eb02:	cld    
  43eb03:	call   FWORD PTR [ebp-0x62000367]
  43eb09:	cdq    
  43eb0a:	cld    
  43eb0b:	call   FWORD PTR [ebp-0x62000367]
  43eb11:	cdq    
  43eb12:	cld    
  43eb13:	call   FWORD PTR [ebp-0x62000367]
  43eb19:	cdq    
  43eb1a:	cld    
  43eb1b:	call   FWORD PTR [ebp-0x62000367]
  43eb21:	cdq    
  43eb22:	cld    
  43eb23:	call   FWORD PTR [ebp-0x62000367]
  43eb29:	cdq    
  43eb2a:	cld    
  43eb2b:	call   FWORD PTR [ebp+0xfffc99]
  43eb31:	add    BYTE PTR [ebp-0x62000367],bl
  43eb37:	cdq    
  43eb38:	cld    
  43eb39:	call   FWORD PTR [ebp-0x62000367]
  43eb3f:	add    ah,bh
  43eb41:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb47:	add    ah,bh
  43eb49:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb4f:	add    ah,bh
  43eb51:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb57:	add    ah,bh
  43eb59:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb5f:	add    ah,bh
  43eb61:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb67:	add    ah,bh
  43eb69:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb6f:	add    ah,bh
  43eb71:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb77:	add    ah,bh
  43eb79:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb7f:	add    ah,bh
  43eb81:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb87:	add    ah,bh
  43eb89:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eb8f:	add    ah,bh
  43eb91:	add    ebx,DWORD PTR [ebp+0x3e702]
  43eb97:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43eb9d:	add    ah,bh
  43eb9f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eba5:	add    ah,bh
  43eba7:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ebad:	add    ah,bh
  43ebaf:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ebb5:	add    ah,bh
  43ebb7:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  43ebbd:	add    al,BYTE PTR [eax]
  43ebbf:	jmp    0xe943ee62
  43ebc4:	sahf   
  43ebc5:	add    al,BYTE PTR [eax]
  43ebc7:	jmp    0xe943ee6a
  43ebcc:	sahf   
  43ebcd:	add    al,BYTE PTR [eax]
  43ebcf:	jmp    0xe943ee72
  43ebd4:	sahf   
  43ebd5:	add    al,BYTE PTR [eax]
  43ebd7:	jmp    0xe943ee7a
  43ebdc:	sahf   
  43ebdd:	add    al,BYTE PTR [eax]
  43ebdf:	jmp    0xe943ee82
  43ebe4:	sahf   
  43ebe5:	add    al,BYTE PTR [eax]
  43ebe7:	jmp    0xe943ee8a
  43ebec:	sahf   
  43ebed:	add    al,BYTE PTR [eax]
  43ebef:	jmp    0xe943ee92
  43ebf4:	sahf   
  43ebf5:	add    al,BYTE PTR [eax]
  43ebf7:	jmp    0xe943ee9a
  43ebfc:	add    BYTE PTR [eax],al
  43ebfe:	sahf   
  43ebff:	add    al,BYTE PTR [eax]
  43ec01:	jmp    0xe943eea4
  43ec06:	sahf   
  43ec07:	add    al,BYTE PTR [eax]
  43ec09:	jmp    0xe943eeac
  43ec0e:	sahf   
  43ec0f:	add    al,BYTE PTR [eax]
  43ec11:	jmp    0xe943eeb4
  43ec16:	sahf   
  43ec17:	add    al,BYTE PTR [eax]
  43ec19:	jmp    0xe943eebc
  43ec1e:	sahf   
  43ec1f:	add    al,BYTE PTR [eax]
  43ec21:	jmp    0xe943eec4
  43ec26:	sahf   
  43ec27:	add    al,BYTE PTR [eax]
  43ec29:	jmp    0xe943eecc
  43ec2e:	sahf   
  43ec2f:	add    al,BYTE PTR [eax]
  43ec31:	jmp    0x43eed4
  43ec36:	add    al,0x6
  43ec38:	add    BYTE PTR [eax],al
  43ec3a:	add    al,0x6
  43ec3c:	add    BYTE PTR [eax],al
  43ec3e:	hlt    
  43ec3f:	add    eax,0x5f40000
  43ec44:	add    BYTE PTR [eax],al
  43ec46:	add    al,0x6
  43ec48:	add    BYTE PTR [eax],al
  43ec4a:	add    al,0x6
  43ec4c:	add    BYTE PTR [eax],al
  43ec4e:	hlt    
  43ec4f:	add    eax,0x5f40000
  43ec54:	add    BYTE PTR [eax],al
  43ec56:	les    eax,FWORD PTR ds:0x5c40000
  43ec5c:	add    BYTE PTR [eax],al
  43ec5e:	mov    ah,0x5
  43ec60:	add    BYTE PTR [eax],al
  43ec62:	add    BYTE PTR [eax],al
  43ec64:	mov    ah,0x5
  43ec66:	add    BYTE PTR [eax],al
  43ec68:	les    eax,FWORD PTR ds:0x5c40000
  43ec6e:	add    BYTE PTR [eax],al
  43ec70:	mov    ah,0x5
  43ec72:	add    BYTE PTR [eax],al
  43ec74:	mov    ah,0x5
  43ec76:	add    BYTE PTR [eax],al
  43ec78:	test   BYTE PTR ds:0x5840000,al
  43ec7e:	add    BYTE PTR [eax],al
  43ec80:	je     0x43ec87
  43ec82:	add    BYTE PTR [eax],al
  43ec84:	je     0x43ec8b
  43ec86:	add    BYTE PTR [eax],al
  43ec88:	test   BYTE PTR ds:0x5840000,al
  43ec8e:	add    BYTE PTR [eax],al
  43ec90:	je     0x43ec97
  43ec92:	add    BYTE PTR [eax],al
  43ec94:	je     0x43ec9b
  43ec96:	add    BYTE PTR [eax],al
  43ec98:	inc    esp
  43ec99:	add    eax,0x5440000
  43ec9e:	add    BYTE PTR [eax],al
  43eca0:	xor    al,0x5
  43eca2:	add    BYTE PTR [eax],al
  43eca4:	xor    al,0x5
  43eca6:	add    BYTE PTR [eax],al
  43eca8:	inc    esp
  43eca9:	add    eax,0x5440000
  43ecae:	add    BYTE PTR [eax],al
  43ecb0:	popf   
  43ecb1:	imul   edi,esp,0xffffffff
  43ecb4:	popf   
  43ecb5:	imul   edi,esp,0xffffffff
  43ecb8:	popf   
  43ecb9:	imul   edi,esp,0xffffffff
  43ecbc:	popf   
  43ecbd:	imul   edi,esp,0xffffffff
  43ecc0:	popf   
  43ecc1:	imul   edi,esp,0xffffffff
  43ecc4:	popf   
  43ecc5:	imul   edi,esp,0xffffffff
  43ecc8:	add    BYTE PTR [eax],al
  43ecca:	popf   
  43eccb:	imul   edi,esp,0xffffffff
  43ecce:	popf   
  43eccf:	imul   edi,esp,0xffffffff
  43ecd2:	popf   
  43ecd3:	imul   edi,esp,0xffffffff
  43ecd6:	popf   
  43ecd7:	imul   edi,esp,0xffffffff
  43ecda:	popf   
  43ecdb:	imul   edi,esp,0xffffffff
  43ecde:	popf   
  43ecdf:	imul   edi,esp,0xffffffff
  43ece2:	popf   
  43ece3:	imul   edi,esp,0xffffffff
  43ece6:	popf   
  43ece7:	imul   edi,esp,0xffffffff
  43ecea:	popf   
  43eceb:	imul   edi,esp,0xffffffff
  43ecee:	popf   
  43ecef:	imul   edi,esp,0xffffffff
  43ecf2:	popf   
  43ecf3:	imul   edi,esp,0xffffffff
  43ecf6:	popf   
  43ecf7:	imul   edi,esp,0xffffffff
  43ecfa:	popf   
  43ecfb:	imul   edi,esp,0xfc699dff
  43ed01:	call   FWORD PTR [ebp-0x62000397]
  43ed07:	imul   edi,esp,0xfc699dff
  43ed0d:	call   FWORD PTR [ebp-0x62000397]
  43ed13:	imul   edi,esp,0xfc699dff
  43ed19:	call   FWORD PTR [ebp-0x62000397]
  43ed1f:	imul   edi,esp,0xfc699dff
  43ed25:	call   FWORD PTR [ebp-0x62000397]
  43ed2b:	add    ah,bh
  43ed2d:	add    eax,DWORD PTR [eax]
  43ed2f:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43ed35:	add    ah,bh
  43ed37:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed3d:	add    ah,bh
  43ed3f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed45:	add    ah,bh
  43ed47:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed4d:	add    ah,bh
  43ed4f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed55:	add    ah,bh
  43ed57:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed5d:	add    ah,bh
  43ed5f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed65:	add    ah,bh
  43ed67:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed6d:	add    ah,bh
  43ed6f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed75:	add    ah,bh
  43ed77:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed7d:	add    ah,bh
  43ed7f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed85:	add    ah,bh
  43ed87:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ed8d:	add    ah,bh
  43ed8f:	add    ebx,DWORD PTR [ebp+0x3e702]
  43ed95:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43ed9b:	add    ah,bh
  43ed9d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43eda3:	add    ah,bh
  43eda5:	add    ebx,DWORD PTR [ebp-0x6116fffe]
  43edab:	add    al,BYTE PTR [eax]
  43edad:	jmp    0xe943f050
  43edb2:	sahf   
  43edb3:	add    al,BYTE PTR [eax]
  43edb5:	jmp    0xe943f058
  43edba:	sahf   
  43edbb:	add    al,BYTE PTR [eax]
  43edbd:	jmp    0xe943f060
  43edc2:	sahf   
  43edc3:	add    al,BYTE PTR [eax]
  43edc5:	jmp    0xe943f068
  43edca:	sahf   
  43edcb:	add    al,BYTE PTR [eax]
  43edcd:	jmp    0xe943f070
  43edd2:	sahf   
  43edd3:	add    al,BYTE PTR [eax]
  43edd5:	jmp    0xe943f078
  43edda:	sahf   
  43eddb:	add    al,BYTE PTR [eax]
  43eddd:	jmp    0xe943f080
  43ede2:	sahf   
  43ede3:	add    al,BYTE PTR [eax]
  43ede5:	jmp    0xe943f088
  43edea:	sahf   
  43edeb:	add    al,BYTE PTR [eax]
  43eded:	jmp    0xe943f090
  43edf2:	sahf   
  43edf3:	add    al,BYTE PTR [eax]
  43edf5:	jmp    0xe943f098
  43edfa:	add    BYTE PTR [eax],al
  43edfc:	sahf   
  43edfd:	add    al,BYTE PTR [eax]
  43edff:	jmp    0xe943f0a2
  43ee04:	sahf   
  43ee05:	add    al,BYTE PTR [eax]
  43ee07:	jmp    0xe943f0aa
  43ee0c:	sahf   
  43ee0d:	add    al,BYTE PTR [eax]
  43ee0f:	jmp    0xe943f0b2
  43ee14:	sahf   
  43ee15:	add    al,BYTE PTR [eax]
  43ee17:	jmp    0xe943f0ba
  43ee1c:	sahf   
  43ee1d:	add    al,BYTE PTR [eax]
  43ee1f:	jmp    0x43f0c2
  43ee24:	inc    esp
  43ee25:	add    al,BYTE PTR [eax]
  43ee27:	add    BYTE PTR [edx+eax*1],dh
  43ee2a:	add    BYTE PTR [eax],al
  43ee2c:	xor    al,0x2
  43ee2e:	add    BYTE PTR [eax],al
  43ee30:	inc    esp
  43ee31:	add    al,BYTE PTR [eax]
  43ee33:	add    BYTE PTR [edx+eax*1+0x0],al
  43ee37:	add    BYTE PTR [edx+eax*1],dh
  43ee3a:	add    BYTE PTR [eax],al
  43ee3c:	xor    al,0x2
  43ee3e:	add    BYTE PTR [eax],al
  43ee40:	add    al,0x2
  43ee42:	add    BYTE PTR [eax],al
  43ee44:	add    al,0x2
  43ee46:	add    BYTE PTR [eax],al
  43ee48:	hlt    
  43ee49:	add    DWORD PTR [eax],eax
  43ee4b:	add    ah,dh
  43ee4d:	add    DWORD PTR [eax],eax
  43ee4f:	add    BYTE PTR [edx+eax*1],al
  43ee52:	add    BYTE PTR [eax],al
  43ee54:	add    al,0x2
  43ee56:	add    BYTE PTR [eax],al
  43ee58:	hlt    
  43ee59:	add    DWORD PTR [eax],eax
  43ee5b:	add    ah,dh
  43ee5d:	add    DWORD PTR [eax],eax
  43ee5f:	add    BYTE PTR [eax],al
  43ee61:	add    ah,al
  43ee63:	add    DWORD PTR [eax],eax
  43ee65:	add    ah,al
  43ee67:	add    DWORD PTR [eax],eax
  43ee69:	add    BYTE PTR [ecx+eax*1+0x1b40000],dh
  43ee70:	add    BYTE PTR [eax],al
  43ee72:	les    eax,FWORD PTR [ecx]
  43ee74:	add    BYTE PTR [eax],al
  43ee76:	les    eax,FWORD PTR [ecx]
  43ee78:	add    BYTE PTR [eax],al
  43ee7a:	mov    ah,0x1
  43ee7c:	add    BYTE PTR [eax],al
  43ee7e:	mov    ah,0x1
  43ee80:	add    BYTE PTR [eax],al
  43ee82:	test   BYTE PTR [ecx],al
  43ee84:	add    BYTE PTR [eax],al
  43ee86:	test   BYTE PTR [ecx],al
  43ee88:	add    BYTE PTR [eax],al
  43ee8a:	je     0x43ee8d
  43ee8c:	add    BYTE PTR [eax],al
  43ee8e:	je     0x43ee91
  43ee90:	add    BYTE PTR [eax],al
  43ee92:	test   BYTE PTR [ecx],al
  43ee94:	add    BYTE PTR [eax],al
  43ee96:	test   BYTE PTR [ecx],al
  43ee98:	add    BYTE PTR [eax],al
  43ee9a:	je     0x43ee9d
  43ee9c:	add    BYTE PTR [eax],al
  43ee9e:	popf   
  43ee9f:	imul   edi,esp,0xffffffff
  43eea2:	popf   
  43eea3:	imul   edi,esp,0xffffffff
  43eea6:	popf   
  43eea7:	imul   edi,esp,0xffffffff
  43eeaa:	popf   
  43eeab:	imul   edi,esp,0xffffffff
  43eeae:	popf   
  43eeaf:	imul   edi,esp,0xffffffff
  43eeb2:	popf   
  43eeb3:	imul   edi,esp,0xffffffff
  43eeb6:	popf   
  43eeb7:	imul   edi,esp,0xffffffff
  43eeba:	popf   
  43eebb:	imul   edi,esp,0xffffffff
  43eebe:	popf   
  43eebf:	imul   edi,esp,0xffffffff
  43eec2:	popf   
  43eec3:	imul   edi,esp,0xffffffff
  43eec6:	add    BYTE PTR [eax],al
  43eec8:	popf   
  43eec9:	imul   edi,esp,0xffffffff
  43eecc:	popf   
  43eecd:	imul   edi,esp,0xffffffff
  43eed0:	popf   
  43eed1:	imul   edi,esp,0xffffffff
  43eed4:	popf   
  43eed5:	imul   edi,esp,0xffffffff
  43eed8:	popf   
  43eed9:	imul   edi,esp,0xffffffff
  43eedc:	popf   
  43eedd:	imul   edi,esp,0xffffffff
  43eee0:	popf   
  43eee1:	imul   edi,esp,0xffffffff
  43eee4:	popf   
  43eee5:	imul   edi,esp,0xffffffff
  43eee8:	popf   
  43eee9:	imul   edi,esp,0xffffffff
  43eeec:	popf   
  43eeed:	imul   edi,esp,0xffffffff
  43eef0:	popf   
  43eef1:	imul   edi,esp,0xffffffff
  43eef4:	popf   
  43eef5:	imul   edi,esp,0xffffffff
  43eef8:	popf   
  43eef9:	imul   edi,esp,0xffffffff
  43eefc:	popf   
  43eefd:	imul   edi,esp,0xffffffff
  43ef00:	popf   
  43ef01:	imul   edi,esp,0xffffffff
  43ef04:	popf   
  43ef05:	imul   edi,esp,0xfc699dff
  43ef0b:	call   FWORD PTR [ebp-0x62000397]
  43ef11:	imul   edi,esp,0xfc699dff
  43ef17:	call   FWORD PTR [ebp-0x62fc18fe]
  43ef1d:	add    ah,bh
  43ef1f:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef25:	add    ah,bh
  43ef27:	add    ebx,DWORD PTR [ebp+0x3e702]
  43ef2d:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43ef33:	add    ah,bh
  43ef35:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef3b:	add    ah,bh
  43ef3d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef43:	add    ah,bh
  43ef45:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef4b:	add    ah,bh
  43ef4d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef53:	add    ah,bh
  43ef55:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef5b:	add    ah,bh
  43ef5d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef63:	add    ah,bh
  43ef65:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef6b:	add    ah,bh
  43ef6d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef73:	add    ah,bh
  43ef75:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef7b:	add    ah,bh
  43ef7d:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef83:	add    ah,bh
  43ef85:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43ef8b:	add    ah,bh
  43ef8d:	add    ebx,DWORD PTR [ebp+0x3e702]
  43ef93:	add    BYTE PTR [ebp-0x6116fffe],bl
  43ef99:	add    al,BYTE PTR [eax]
  43ef9b:	jmp    0xe943f23e
  43efa0:	sahf   
  43efa1:	add    al,BYTE PTR [eax]
  43efa3:	jmp    0xe943f246
  43efa8:	sahf   
  43efa9:	add    al,BYTE PTR [eax]
  43efab:	jmp    0xe943f24e
  43efb0:	sahf   
  43efb1:	add    al,BYTE PTR [eax]
  43efb3:	jmp    0xe943f256
  43efb8:	sahf   
  43efb9:	add    al,BYTE PTR [eax]
  43efbb:	jmp    0xe943f25e
  43efc0:	sahf   
  43efc1:	add    al,BYTE PTR [eax]
  43efc3:	jmp    0xe943f266
  43efc8:	sahf   
  43efc9:	add    al,BYTE PTR [eax]
  43efcb:	jmp    0xe943f26e
  43efd0:	sahf   
  43efd1:	add    al,BYTE PTR [eax]
  43efd3:	jmp    0xe943f276
  43efd8:	sahf   
  43efd9:	add    al,BYTE PTR [eax]
  43efdb:	jmp    0xe943f27e
  43efe0:	sahf   
  43efe1:	add    al,BYTE PTR [eax]
  43efe3:	jmp    0xe943f286
  43efe8:	sahf   
  43efe9:	add    al,BYTE PTR [eax]
  43efeb:	jmp    0xe943f28e
  43eff0:	sahf   
  43eff1:	add    al,BYTE PTR [eax]
  43eff3:	jmp    0xe943f296
  43eff8:	add    BYTE PTR [eax],al
  43effa:	sahf   
  43effb:	add    al,BYTE PTR [eax]
  43effd:	jmp    0xe943f2a0
  43f002:	sahf   
  43f003:	add    al,BYTE PTR [eax]
  43f005:	jmp    0xe943f2a8
  43f00a:	sahf   
  43f00b:	add    al,BYTE PTR [eax]
  43f00d:	jmp    0x43f2b0
  43f012:	je     0x43f01a
  43f014:	add    BYTE PTR [eax],al
  43f016:	je     0x43f01e
  43f018:	add    BYTE PTR [eax],al
  43f01a:	test   BYTE PTR [esi],al
  43f01c:	add    BYTE PTR [eax],al
  43f01e:	test   BYTE PTR [esi],al
  43f020:	add    BYTE PTR [eax],al
  43f022:	je     0x43f02a
  43f024:	add    BYTE PTR [eax],al
  43f026:	je     0x43f02e
  43f028:	add    BYTE PTR [eax],al
  43f02a:	inc    esp
  43f02b:	push   es
  43f02c:	add    BYTE PTR [eax],al
  43f02e:	inc    esp
  43f02f:	push   es
  43f030:	add    BYTE PTR [eax],al
  43f032:	xor    al,0x6
  43f034:	add    BYTE PTR [eax],al
  43f036:	xor    al,0x6
  43f038:	add    BYTE PTR [eax],al
  43f03a:	inc    esp
  43f03b:	push   es
  43f03c:	add    BYTE PTR [eax],al
  43f03e:	inc    esp
  43f03f:	push   es
  43f040:	add    BYTE PTR [eax],al
  43f042:	xor    al,0x6
  43f044:	add    BYTE PTR [eax],al
  43f046:	xor    al,0x6
  43f048:	add    BYTE PTR [eax],al
  43f04a:	add    al,0x6
  43f04c:	add    BYTE PTR [eax],al
  43f04e:	add    al,0x6
  43f050:	add    BYTE PTR [eax],al
  43f052:	hlt    
  43f053:	add    eax,0x5f40000
  43f058:	add    BYTE PTR [eax],al
  43f05a:	add    al,0x6
  43f05c:	add    BYTE PTR [eax],al
  43f05e:	add    BYTE PTR [eax],al
  43f060:	add    al,0x6
  43f062:	add    BYTE PTR [eax],al
  43f064:	hlt    
  43f065:	add    eax,0x5f40000
  43f06a:	add    BYTE PTR [eax],al
  43f06c:	les    eax,FWORD PTR ds:0x5c40000
  43f072:	add    BYTE PTR [eax],al
  43f074:	mov    ah,0x5
  43f076:	add    BYTE PTR [eax],al
  43f078:	mov    ah,0x5
  43f07a:	add    BYTE PTR [eax],al
  43f07c:	les    eax,FWORD PTR ds:0x5c40000
  43f082:	add    BYTE PTR [eax],al
  43f084:	mov    ah,0x5
  43f086:	add    BYTE PTR [eax],al
  43f088:	mov    ah,0x5
  43f08a:	add    BYTE PTR [eax],al
  43f08c:	popf   
  43f08d:	imul   edi,esp,0xffffffff
  43f090:	popf   
  43f091:	imul   edi,esp,0xffffffff
  43f094:	popf   
  43f095:	imul   edi,esp,0xffffffff
  43f098:	popf   
  43f099:	imul   edi,esp,0xffffffff
  43f09c:	popf   
  43f09d:	imul   edi,esp,0xffffffff
  43f0a0:	popf   
  43f0a1:	imul   edi,esp,0xffffffff
  43f0a4:	popf   
  43f0a5:	imul   edi,esp,0xffffffff
  43f0a8:	popf   
  43f0a9:	imul   edi,esp,0xffffffff
  43f0ac:	popf   
  43f0ad:	imul   edi,esp,0xffffffff
  43f0b0:	popf   
  43f0b1:	imul   edi,esp,0xffffffff
  43f0b4:	popf   
  43f0b5:	imul   edi,esp,0xffffffff
  43f0b8:	popf   
  43f0b9:	imul   edi,esp,0xffffffff
  43f0bc:	popf   
  43f0bd:	imul   edi,esp,0xffffffff
  43f0c0:	popf   
  43f0c1:	imul   edi,esp,0xffffffff
  43f0c4:	add    BYTE PTR [eax],al
  43f0c6:	popf   
  43f0c7:	imul   edi,esp,0xffffffff
  43f0ca:	popf   
  43f0cb:	imul   edi,esp,0xffffffff
  43f0ce:	popf   
  43f0cf:	imul   edi,esp,0xffffffff
  43f0d2:	popf   
  43f0d3:	imul   edi,esp,0xffffffff
  43f0d6:	popf   
  43f0d7:	imul   edi,esp,0xffffffff
  43f0da:	popf   
  43f0db:	imul   edi,esp,0xffffffff
  43f0de:	popf   
  43f0df:	imul   edi,esp,0xffffffff
  43f0e2:	popf   
  43f0e3:	imul   edi,esp,0xffffffff
  43f0e6:	popf   
  43f0e7:	imul   edi,esp,0xffffffff
  43f0ea:	popf   
  43f0eb:	imul   edi,esp,0xffffffff
  43f0ee:	popf   
  43f0ef:	imul   edi,esp,0xffffffff
  43f0f2:	popf   
  43f0f3:	imul   edi,esp,0xffffffff
  43f0f6:	popf   
  43f0f7:	imul   edi,esp,0xffffffff
  43f0fa:	popf   
  43f0fb:	imul   edi,esp,0xffffffff
  43f0fe:	popf   
  43f0ff:	imul   edi,esp,0xffffffff
  43f102:	popf   
  43f103:	imul   edi,esp,0xffffffff
  43f106:	popf   
  43f107:	add    ah,bh
  43f109:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f10f:	add    ah,bh
  43f111:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f117:	add    ah,bh
  43f119:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f11f:	add    ah,bh
  43f121:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f127:	add    ah,bh
  43f129:	add    eax,DWORD PTR [eax]
  43f12b:	add    BYTE PTR [ebp-0x62fc18fe],bl
  43f131:	add    ah,bh
  43f133:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f139:	add    ah,bh
  43f13b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f141:	add    ah,bh
  43f143:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f149:	add    ah,bh
  43f14b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f151:	add    ah,bh
  43f153:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f159:	add    ah,bh
  43f15b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f161:	add    ah,bh
  43f163:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f169:	add    ah,bh
  43f16b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f171:	add    ah,bh
  43f173:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f179:	add    ah,bh
  43f17b:	add    ebx,DWORD PTR [ebp-0x62fc18fe]
  43f181:	add    al,BYTE PTR [eax]
  43f183:	jmp    0xe943f426
  43f188:	sahf   
  43f189:	add    al,BYTE PTR [eax]
  43f18b:	jmp    0xe943f42e
  43f190:	add    BYTE PTR [eax],al
  43f192:	sahf   
  43f193:	add    al,BYTE PTR [eax]
  43f195:	jmp    0xe943f438
  43f19a:	sahf   
  43f19b:	add    al,BYTE PTR [eax]
  43f19d:	jmp    0xe943f440
  43f1a2:	sahf   
  43f1a3:	add    al,BYTE PTR [eax]
  43f1a5:	jmp    0xe943f448
  43f1aa:	sahf   
  43f1ab:	add    al,BYTE PTR [eax]
  43f1ad:	jmp    0xe943f450
  43f1b2:	sahf   
  43f1b3:	add    al,BYTE PTR [eax]
  43f1b5:	jmp    0xe943f458
  43f1ba:	sahf   
  43f1bb:	add    al,BYTE PTR [eax]
  43f1bd:	jmp    0xe943f460
  43f1c2:	sahf   
  43f1c3:	add    al,BYTE PTR [eax]
  43f1c5:	jmp    0xe943f468
  43f1ca:	sahf   
  43f1cb:	add    al,BYTE PTR [eax]
  43f1cd:	jmp    0xe943f470
  43f1d2:	sahf   
  43f1d3:	add    al,BYTE PTR [eax]
  43f1d5:	jmp    0xe943f478
  43f1da:	sahf   
  43f1db:	add    al,BYTE PTR [eax]
  43f1dd:	jmp    0xe943f480
  43f1e2:	sahf   
  43f1e3:	add    al,BYTE PTR [eax]
  43f1e5:	jmp    0xe943f488
  43f1ea:	sahf   
  43f1eb:	add    al,BYTE PTR [eax]
  43f1ed:	jmp    0xe943f490
  43f1f2:	sahf   
  43f1f3:	add    al,BYTE PTR [eax]
  43f1f5:	jmp    0x2e1f1fa
  43f1fa:	add    cl,ch
  43f1fc:	sahf   
  43f1fd:	add    al,BYTE PTR [eax]
  43f1ff:	add    BYTE PTR [edx+eax*1+0x2c40000],dh
  43f206:	add    BYTE PTR [eax],al
  43f208:	les    eax,FWORD PTR [edx]
  43f20a:	add    BYTE PTR [eax],al
  43f20c:	mov    ah,0x2
  43f20e:	add    BYTE PTR [eax],al
  43f210:	mov    ah,0x2
  43f212:	add    BYTE PTR [eax],al
  43f214:	test   BYTE PTR [edx],al
  43f216:	add    BYTE PTR [eax],al
  43f218:	(bad)  
  43f219:	aad    0x9a
  43f21b:	daa    
  43f21c:	enter  0x71da,0x29
  43f220:	xor    DWORD PTR [esi],ecx
  43f222:	stos   DWORD PTR es:[edi],eax
  43f223:	stos   BYTE PTR es:[edi],al
  43f224:	xor    edx,esp
  43f226:	aam    0xca
  43f228:	mov    eax,ds:0x136f476c
  43f22d:	bound  ecx,QWORD PTR [esi]
  43f22f:	xor    edi,DWORD PTR [edi+0x22]
  43f232:	push   0x98282116
  43f237:	xor    BYTE PTR [ebx],dl
  43f239:	sub    cl,BYTE PTR [esi+0xa]
  43f23c:	mov    esi,0xbfcaeee0
  43f241:	dec    esi
  43f242:	dec    esi
  43f243:	push   ecx
  43f244:	cwde   
  43f245:	mov    eax,DWORD PTR [edx+0x6ccec807]
  43f24b:	jae    0x43f2b4
  43f24d:	dec    edi
  43f24e:	int3   
  43f24f:	loope  0x43f29f
  43f251:	lods   al,BYTE PTR ds:[esi]
  43f252:	push   0xffffffa8
  43f254:	inc    ebx
  43f255:	mov    bl,0x82
  43f257:	and    ebp,DWORD PTR [eax-0x2a]
  43f25a:	fwait
  43f25b:	jmp    0x43f25d
  43f25d:	add    BYTE PTR [ebx],al
  43f25f:	dec    ebp
  43f260:	lahf   
  43f261:	bound  ebx,QWORD PTR [edi-0x77040a4c]
  43f267:	adc    al,0x45
  43f269:	mov    BYTE PTR [eax],al
  43f26b:	mov    ebx,DWORD PTR [ecx]
  43f26d:	call   0x1612:0x2dc962fe
  43f274:	outs   dx,BYTE PTR ds:[esi]
  43f275:	cli    
  43f276:	les    edi,FWORD PTR [ebx]
  43f278:	repnz and ebx,DWORD PTR [ebp+0x2c387d76]
  43f27f:	gs loope 0x43f243
  43f282:	into   
  43f283:	loope  0x43f255
  43f285:	push   edi
  43f286:	daa    
  43f287:	mov    ds,WORD PTR [esi]
  43f289:	push   0x6213affe
  43f28e:	fstp   QWORD PTR [edx+ecx*1+0x155c8855]
  43f295:	mov    al,ds:0x134e9a89
  43f29a:	ins    BYTE PTR es:[edi],dx
  43f29b:	out    dx,al
  43f29c:	mov    esi,0x2a65caa6
  43f2a1:	out    dx,eax
  43f2a2:	cwde   
  43f2a3:	pop    ecx
  43f2a4:	push   edi
  43f2a5:	popa   
  43f2a6:	int3   
  43f2a7:	hlt    
  43f2a8:	push   eax
  43f2a9:	and    BYTE PTR [ebx+ecx*1-0x45],dl
  43f2ad:	inc    eax
  43f2ae:	pop    ebx
  43f2af:	or     BYTE PTR [edx-0xa8c2bb],ch
  43f2b5:	(bad)  
  43f2b6:	jmp    FWORD PTR [ebx-0x489f1b2e]
  43f2bc:	mov    esi,0x9f350e2
  43f2c1:	repnz add BYTE PTR [eax],al
  43f2c4:	popf   
  43f2c5:	sub    DWORD PTR [ebx-0x4a19cbda],esp
  43f2cb:	ret    
  43f2cc:	sub    BYTE PTR [ecx],0xc5
  43f2cf:	test   al,0x7
  43f2d1:	cmp    BYTE PTR [ebx-0x56],ch
  43f2d4:	ret    
  43f2d5:	inc    ebx
  43f2d6:	dec    esp
  43f2d7:	dec    esp
  43f2d8:	fcomp  QWORD PTR ds:[edi-0x197a2411]
  43f2df:	mov    ebp,0xa171a35b
  43f2e4:	loop   0x43f292
  43f2e6:	out    dx,eax
  43f2e7:	lea    edx,[eax]
  43f2e9:	daa    
  43f2ea:	fldcw  WORD PTR [ecx-0x3d064b5e]
  43f2f0:	repnz das 
  43f2f2:	in     al,0xc0
  43f2f4:	push   0x2
  43f2f6:	push   ecx
  43f2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f2f8:	or     edi,DWORD PTR cs:[ecx]
  43f2fb:	adc    DWORD PTR ds:[esp+esi*4+0x43efd1b3],0xffffffd7
  43f304:	cmp    eax,0xeb8206f6
  43f309:	das    
  43f30a:	out    0x14,al
  43f30c:	push   cs
  43f30d:	jmp    DWORD PTR [edi-0x5a]
  43f310:	jne    0x43f2aa
  43f312:	popa   
  43f313:	je     0x43f392
  43f315:	leave  
  43f316:	aam    0xe8
  43f318:	outs   dx,BYTE PTR ds:[esi]
  43f319:	sbb    ch,BYTE PTR [ebx+0x6fae3be5]
  43f31f:	dec    eax
  43f320:	mov    ch,0x11
  43f322:	sbb    edi,DWORD PTR [eax]
  43f324:	push   cs
  43f325:	repnz xor DWORD PTR [edx+0x0],ebp
  43f329:	add    BYTE PTR [edx],ah
  43f32b:	cmp    bp,0x6
  43f32f:	push   eax
  43f330:	pop    esp
  43f331:	jmp    0xfcac:0x50e35f98
  43f338:	iret   
  43f339:	(bad)  
  43f33a:	pop    esi
  43f33b:	push   ebx
  43f33c:	xor    DWORD PTR [ebp-0x2c38d82],ebx
  43f342:	xchg   edx,eax
  43f343:	cs sub al,0xe2
  43f346:	pop    ss
  43f347:	aad    0x3f
  43f349:	clc    
  43f34a:	(bad)  
  43f34b:	outs   dx,BYTE PTR ds:[esi]
  43f34c:	lods   al,BYTE PTR ds:[esi]
  43f34d:	fsub   DWORD PTR ds:0x6b796b5d
  43f353:	mov    BYTE PTR [edi],al
  43f355:	cmp    DWORD PTR [ebx+0x7a],eax
  43f358:	dec    esi
  43f359:	adc    DWORD PTR [ebp+edx*8+0x58],ecx
  43f35d:	popa   
  43f35e:	mov    ds:0x363878ac,eax
  43f363:	add    DWORD PTR [ebx+0x6506a312],eax
  43f369:	or     BYTE PTR [ecx-0x21],bl
  43f36c:	ins    BYTE PTR es:[edi],dx
  43f36d:	adc    edx,DWORD PTR ds:[eax-0x74cad01]
  43f374:	mov    esp,DWORD PTR [esi]
  43f376:	push   edi
  43f377:	(bad)  [esi]
  43f379:	ret    
  43f37a:	add    DWORD PTR [ebx-0x382f8d33],edi
  43f380:	xlat   BYTE PTR ds:[ebx]
  43f381:	xor    edx,eax
  43f383:	nop
  43f384:	lods   eax,DWORD PTR ds:[esi]
  43f385:	in     eax,dx
  43f386:	add    DWORD PTR [edi],ecx
  43f388:	adc    ebx,DWORD PTR [eax]
  43f38a:	(bad)  [eax-0x5a]
  43f38d:	cmc    
  43f38e:	add    BYTE PTR [eax],al
  43f390:	leave  
  43f391:	ficomp DWORD PTR es:[eax-0x51f63392]
  43f398:	sub    BYTE PTR [ecx],ah
  43f39a:	arpl   WORD PTR [esi+ecx*4+0x6d9e2b57],cx
  43f3a1:	xchg   ecx,eax
  43f3a2:	add    DWORD PTR [edx+0x134276e3],0x38d0934c
  43f3ac:	adc    BYTE PTR [esp+esi*1-0x1e8f47cd],dh
  43f3b3:	loopne 0x43f3da
  43f3b5:	rol    BYTE PTR [esi+0x7a936496],cl
  43f3bb:	mov    ebx,0x273dbecf
  43f3c0:	xchg   bp,ax
  43f3c2:	push   edi
  43f3c3:	aam    0xfe
  43f3c5:	or     al,0x39
  43f3c7:	icebp  
  43f3c8:	dec    esi
  43f3c9:	cli    
  43f3ca:	outs   dx,DWORD PTR ds:[esi]
  43f3cb:	xlat   BYTE PTR ds:[ebx]
  43f3cc:	ins    BYTE PTR es:[edi],dx
  43f3cd:	mov    bh,0xc7
  43f3cf:	(bad)  
  43f3d0:	ja     0x43f43e
  43f3d2:	clc    
  43f3d3:	pop    ss
  43f3d4:	rol    BYTE PTR [edi],0x30
  43f3d7:	pop    ebp
  43f3d8:	stos   BYTE PTR es:[edi],al
  43f3d9:	and    ah,BYTE PTR [esp+esi*1-0x51]
  43f3dd:	jbe    0x43f36c
  43f3df:	(bad)  
  43f3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f3e1:	in     eax,0x2c
  43f3e3:	mov    bh,0x17
  43f3e5:	push   es
  43f3e6:	sbb    al,0x57
  43f3e8:	sbb    BYTE PTR [ecx],bh
  43f3ea:	pop    esi
  43f3eb:	add    BYTE PTR [edi],dh
  43f3ed:	push   ecx
  43f3ee:	xchg   ebx,eax
  43f3ef:	ss adc eax,0x8e8c7f
  43f3f5:	add    BYTE PTR [eax+0xb],bh
  43f3f8:	sub    cl,BYTE PTR [ebx-0x459c9022]
  43f3fe:	or     ah,BYTE PTR [ebx+0x10e75ed2]
  43f404:	xlat   BYTE PTR ds:[ebx]
  43f405:	adc    eax,0x8cc22f4
  43f40a:	leave  
  43f40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f40c:	ds mov dl,0x6e
  43f40f:	xchg   ecx,eax
  43f410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f411:	(bad)  
  43f412:	addr16 add al,0xac
  43f415:	rol    DWORD PTR [eax+eax*1],cl
  43f418:	mov    ebx,esi
  43f41a:	xchg   esi,eax
  43f41b:	fcom   QWORD PTR [eax+edi*1-0x58]
  43f41f:	aas    
  43f420:	loop   0x43f452
  43f422:	into   
  43f423:	js     0x43f407
  43f425:	js     0x43f480
  43f427:	aas    
  43f428:	retf   
  43f429:	int3   
  43f42a:	call   0x2695dfac
  43f42f:	enter  0x8a07,0xa5
  43f433:	jp     0x43f47f
  43f435:	call   DWORD PTR [esi]
  43f437:	push   0x7dc8c35a
  43f43c:	jmp    0x43f48f
  43f43e:	repz fldcw WORD PTR [ecx+ecx*8]
  43f442:	mov    ecx,0x16306e7d
  43f447:	stc    
  43f448:	or     ecx,DWORD PTR [ebx+0x46850ecb]
  43f44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f44f:	jnp    0x43f493
  43f451:	cld    
  43f452:	es icebp 
  43f454:	pop    ds
  43f455:	mov    esi,DWORD PTR [ebx-0x7e]
  43f458:	cmp    BYTE PTR [ebx+0x0],ch
  43f45b:	add    BYTE PTR [ecx+0x663f8009],ch
  43f461:	idiv   ch
  43f463:	jmp    0xd000:0x8b59d204
  43f46a:	mov    esp,0xeb7d68cc
  43f46f:	or     DWORD PTR [ecx],0x27
  43f472:	test   DWORD PTR [ebp-0x5b],eax
  43f475:	jnp    0x43f4b9
  43f477:	loopne 0x43f48f
  43f479:	rcr    bh,0x8b
  43f47c:	dec    eax
  43f47d:	(bad)  
  43f47e:	cld    
  43f47f:	push   eax
  43f480:	cdq    
  43f481:	jnp    0x43f4d5
  43f483:	in     al,0x26
  43f485:	enter  0x8be3,0x55
  43f489:	jmp    0xf84a:0x7b954cfc
  43f490:	es fdiv st,st(7)
  43f493:	mov    ebx,DWORD PTR [edi+0x26]
  43f496:	std    
  43f497:	inc    esp
  43f498:	xchg   ebp,eax
  43f499:	jnp    0x43f4dd
  43f49b:	call   0x8c3bb4b6
  43f4a0:	in     al,dx
  43f4a1:	and    bh,ch
  43f4a3:	push   esp
  43f4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f4a5:	jnp    0x43f4f9
  43f4a7:	lock push ss
  43f4a9:	(bad)  
  43f4aa:	test   DWORD PTR [ebx+0x4cfd0ed5],0xfc4a7ba5
  43f4b4:	pop    edx
  43f4b5:	(bad)  
  43f4b6:	repz add BYTE PTR [ebp-0x6b14fffe],bl
  43f4bd:	jge    0x43f511
  43f4bf:	hlt    
  43f4c0:	add    BYTE PTR [eax],al
  43f4c2:	push   ds
  43f4c3:	inc    esp
  43f4c4:	dec    BYTE PTR [eax+0x458476e8]
  43f4ca:	inc    ebp
  43f4cb:	jge    0x43f517
  43f4cd:	hlt    
  43f4ce:	xchg   BYTE PTR [edx+0x7de57317],bh
  43f4d4:	push   edx
  43f4d5:	lock es add al,0xfd
  43f4d9:	inc    esp
  43f4da:	xchg   ebp,eax
  43f4db:	jnp    0x43f51f
  43f4dd:	fdiv   QWORD PTR [edi-0x61539800]
  43f4e3:	ret    0x8aff
  43f4e6:	pusha  
  43f4e7:	dec    esi
  43f4e8:	dec    esi
  43f4e9:	call   0x43f85b
  43f4ee:	push   ds
  43f4ef:	inc    esi
  43f4f0:	or     eax,DWORD PTR [ebp-0x74eb0923]
  43f4f6:	dec    eax
  43f4f7:	jbe    0x43f47d
  43f4f9:	inc    ebp
  43f4fa:	cmc    
  43f4fb:	add    BYTE PTR [ecx+0x4a7b4d0c],dh
  43f501:	in     al,dx
  43f502:	xlat   BYTE PTR es:[ebx]
  43f504:	jmp    0x43f491
  43f506:	pop    eax
  43f507:	outs   dx,BYTE PTR ds:[esi]
  43f508:	test   BYTE PTR [ebp*1-0x49f7bcfb],al
  43f50f:	inc    BYTE PTR [ebp+ecx*2+0x4be84ad]
  43f516:	and    al,0xbf
  43f518:	out    dx,eax
  43f519:	jmp    0x43f51c
  43f51b:	xor    eax,0xceb88bc0
  43f520:	mov    esp,0xcb3f69cc
  43f525:	int3   
  43f526:	add    BYTE PTR [eax],al
  43f528:	popa   
  43f529:	aas    
  43f52a:	retf   
  43f52b:	int3   
  43f52c:	pop    ecx
  43f52d:	aas    
  43f52e:	retf   
  43f52f:	int3   
  43f530:	call   0x89c7e0b0
  43f535:	or     ebp,eax
  43f537:	add    eax,0x89f87072
  43f53c:	loopne 0x43f598
  43f53e:	test   BYTE PTR [ebp+0x75],al
  43f541:	shl    edi,cl
  43f543:	sub    DWORD PTR [edx+0x70],ebx
  43f546:	clc    
  43f547:	sbb    DWORD PTR [ecx+0x7],0xffffff9d
  43f54b:	hlt    
  43f54c:	outs   dx,BYTE PTR ds:[esi]
  43f54d:	(bad)  
  43f54e:	jmp    DWORD PTR [edi+0x1]
  43f551:	add    al,0x40
  43f553:	add    BYTE PTR [esi],ah
  43f555:	mov    esi,0x163251e7
  43f55a:	hlt    
  43f55b:	rcr    esi,cl
  43f55d:	add    bl,BYTE PTR [ebp-0x3bb108]
  43f563:	imul   ebx,DWORD PTR [ebp-0x1e980024],0xa004003
  43f56d:	push   ss
  43f56e:	clc    
  43f56f:	rcr    DWORD PTR [esi+0x2],cl
  43f572:	xchg   DWORD PTR [ebp+0x5],eax
  43f575:	dec    eax
  43f576:	inc    edx
  43f577:	cld    
  43f578:	popf   
  43f579:	add    al,BYTE PTR [eax]
  43f57b:	add    dh,dh
  43f57d:	stc    
  43f57e:	test   BYTE PTR [ebp-0x1f],dl
  43f581:	cmp    DWORD PTR [ebp-0x429dbff],0xffffff83
  43f588:	push   eax
  43f589:	outs   dx,BYTE PTR ds:[esi]
  43f58a:	pop    es
  43f58b:	jae    0x43f58d
  43f58d:	add    BYTE PTR [ebx+edi*2+0x42],bh
  43f591:	cld    
  43f592:	push   ss
  43f593:	inc    DWORD PTR [edx-0x3d6174]
  43f599:	push   eax
  43f59a:	es (bad) 
  43f59c:	out    0x52,eax
  43f59e:	stos   BYTE PTR es:[edi],al
  43f59f:	adc    eax,0x25ed3f4
  43f5a4:	test   DWORD PTR [ebp-0x67],ecx
  43f5a7:	jns    0x43f5ac
  43f5a9:	lea    ecx,[ecx+0x76003c53]
  43f5af:	push   edx
  43f5b0:	test   ch,ah
  43f5b2:	loopne 0x43f5f7
  43f5b4:	retf   
  43f5b5:	int3   
  43f5b6:	imul   edi,DWORD PTR [esi],0x3e61cccb
  43f5bc:	retf   
  43f5bd:	int3   
  43f5be:	pop    ecx
  43f5bf:	ds retf 
  43f5c1:	int3   
  43f5c2:	enter  0xeb7b,0xa1
  43f5c6:	in     eax,dx
  43f5c7:	push   esi
  43f5c8:	cmp    al,0x0
  43f5ca:	xchg   ebx,eax
  43f5cb:	jnp    0x43f60c
  43f5cd:	xor    BYTE PTR [esi],dl
  43f5cf:	mov    ebp,0xba143e07
  43f5d4:	pop    es
  43f5d5:	pop    ebp
  43f5d6:	pop    esi
  43f5d7:	ds retf 
  43f5d9:	int3   
  43f5da:	popa   
  43f5db:	ds retf 
  43f5dd:	int3   
  43f5de:	pop    ecx
  43f5df:	ds retf 
  43f5e1:	int3   
  43f5e2:	enter  0xeb7b,0x8b
  43f5e6:	pusha  
  43f5e7:	dec    BYTE PTR [edi-0x75]
  43f5ea:	pusha  
  43f5eb:	cli    
  43f5ec:	dec    esi
  43f5ed:	push   DWORD PTR [eax+0x43cc76]
  43f5f3:	add    BYTE PTR [ebp-0x16334333],bl
  43f5f9:	cmp    eax,0x3de1cccb
  43f5fe:	retf   
  43f5ff:	int3   
  43f600:	fnstcw WORD PTR ds:0x7b48cccb
  43f606:	jmp    0x43f58b
  43f608:	leave  
  43f609:	stc    
  43f60a:	add    BYTE PTR gs:[edi+0x2],al
  43f60e:	push   0xffc29edc
  43f613:	(bad)  
  43f614:	test   al,0x6a
  43f616:	int3   
  43f617:	inc    ebx
  43f618:	popf   
  43f619:	jns    0x43f65d
  43f61b:	clc    
  43f61c:	inc    ebp
  43f61d:	pop    edx
  43f61e:	cld    
  43f61f:	aas    
  43f620:	popf   
  43f621:	jnp    0x43f665
  43f623:	clc    
  43f624:	dec    ebp
  43f625:	pop    edx
  43f626:	mov    ch,0xff
  43f628:	call   0x427b:0xa5c47c6e
  43f62f:	cld    
  43f630:	push   ss
  43f631:	ror    BYTE PTR [edi],0x51
  43f634:	push   ss
  43f635:	fmul   DWORD PTR [ebx]
  43f637:	push   edx
  43f638:	es enter 0x5007,0x72
  43f63d:	fdivr  st,st(3)
  43f63f:	mov    eax,DWORD PTR [eax-0x37334330]
  43f645:	jns    0x43f632
  43f647:	push   ecx
  43f648:	(bad)  
  43f649:	enter  0xfb,0x9d
  43f64d:	add    al,BYTE PTR [eax]
  43f64f:	jmp    0x43f5e5
  43f651:	jns    0x43f695
  43f653:	cld    
  43f654:	push   ds
  43f655:	inc    ebx
  43f656:	dec    BYTE PTR [eax+0x6ee00000]
  43f65c:	test   BYTE PTR [ebp+0x31],cl
  43f65f:	sub    cl,BYTE PTR [ebx+0x10]
  43f662:	scas   al,BYTE PTR es:[edi]
  43f663:	or     eax,0x1955585
  43f668:	push   ebx
  43f669:	cld    
  43f66a:	stos   BYTE PTR es:[edi],al
  43f66b:	mov    ah,0xfd
  43f66d:	mov    ah,BYTE PTR [eax-0x2]
  43f670:	cld    
  43f671:	dec    esp
  43f672:	or     esi,edi
  43f674:	mov    cl,0x11
  43f676:	mov    BYTE PTR [eax+0x73],0x7
  43f67a:	xor    eax,0x9d000004
  43f67f:	pop    ecx
  43f680:	add    ebp,ebx
  43f682:	int    0x31
  43f684:	ror    BYTE PTR [ebx-0x33433008],0xe9
  43f68b:	ds retf 
  43f68d:	int3   
  43f68e:	loope  0x43f6ce
  43f690:	retf   
  43f691:	int3   
  43f692:	fnstcw WORD PTR [esi]
  43f694:	retf   
  43f695:	int3   
  43f696:	push   0x95b9eb79
  43f69b:	add    al,BYTE PTR [eax]
  43f69d:	add    BYTE PTR [ecx],bh
  43f69f:	jns    0x43f6a7
  43f6a1:	mov    DWORD PTR [eax-0x62bc2c2e],ebx
  43f6a7:	iret   
  43f6a8:	mov    esp,0xcb3e69cc
  43f6ad:	int3   
  43f6ae:	popa   
  43f6af:	ds retf 
  43f6b1:	int3   
  43f6b2:	pop    ecx
  43f6b3:	ds retf 
  43f6b5:	int3   
  43f6b6:	call   0x89c7e234
  43f6bb:	adc    al,BYTE PTR [ebp-0x5affffbb]
  43f6c1:	xor    DWORD PTR [edi+0x4],0x8883fd9d
  43f6c8:	popf   
  43f6c9:	add    al,BYTE PTR [eax]
  43f6cb:	mov    ebp,eax
  43f6cd:	cli    
  43f6ce:	test   BYTE PTR [ecx-0x67],dl
  43f6d1:	and    ebp,0x86586c08
  43f6d7:	push   ebp
  43f6d8:	dec    ecx
  43f6d9:	jns    0x43f71d
  43f6db:	or     BYTE PTR [esi],bl
  43f6dd:	inc    edx
  43f6de:	pop    es
  43f6df:	mov    eax,ebx
  43f6e1:	jb     0x43f6a3
  43f6e3:	inc    ebp
  43f6e4:	sub    DWORD PTR [edx],eax
  43f6e6:	add    BYTE PTR [eax],al
  43f6e8:	popf   
  43f6e9:	pop    ecx
  43f6ea:	push   es
  43f6eb:	mov    ebp,DWORD PTR [eax+0x6e]
  43f6ee:	jl     0x43f6b1
  43f6f0:	pushf  
  43f6f1:	jnp    0x43f73d
  43f6f3:	cld    
  43f6f4:	push   ss
  43f6f5:	xlat   BYTE PTR ds:[ebx]
  43f6f6:	sti    
  43f6f7:	cmp    ebp,DWORD PTR [eax+0x76]
  43f6fa:	ins    BYTE PTR es:[edi],dx
  43f6fb:	inc    esi
  43f6fc:	es (bad) 
  43f6fe:	sti    
  43f6ff:	mov    esp,DWORD PTR [eax+0x72]
  43f702:	or     BYTE PTR [edi-0x5413c6f],dh
  43f708:	xchg   ecx,eax
  43f709:	xor    ebp,0x85305003
  43f70f:	inc    ebp
  43f710:	sar    DWORD PTR [eax+0x4a],1
  43f713:	lock call 0xf860:0x1c4113b5
  43f71b:	setge  BYTE PTR [edx]
  43f71e:	xchg   DWORD PTR [ebp-0x4b],edx
  43f721:	js     0x43f765
  43f723:	or     BYTE PTR [eax],al
  43f725:	add    BYTE PTR [esi],dl
  43f727:	mov    edi,0x7995030b
  43f72c:	push   edx
  43f72d:	clc    
  43f72e:	es pop es
  43f730:	lsl    ebx,ax
  43f733:	adc    al,BYTE PTR [ebp+0x5277954d]
  43f739:	or     al,0x9e
  43f73b:	adc    DWORD PTR [ebp+0x37a754d],eax
  43f741:	or     al,BYTE PTR [esi-0x6aaa7b66]
  43f747:	ja     0x43f78b
  43f749:	or     BYTE PTR [esi-0x1f76fc40],bl
  43f74f:	cli    
  43f750:	out    0x6b,al
  43f752:	push   edx
  43f753:	ins    BYTE PTR es:[edi],dx
  43f754:	clc    
  43f755:	mov    eax,DWORD PTR [eax-0x32]
  43f758:	mov    esp,0xeb77e8cc
  43f75d:	or     DWORD PTR [ecx+0x27],0xffffff85
  43f761:	inc    ebp
  43f762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f763:	jns    0x43f7a7
  43f765:	in     al,0x16
  43f767:	mov    esi,0x66c88be3
  43f76c:	cld    
  43f76d:	push   eax
  43f76e:	fnstcw WORD PTR [ecx+0x52]
  43f771:	call   0x8c2bbd9c
  43f776:	adc    eax,0x9dffff83
  43f77b:	jns    0x43f7c7
  43f77d:	lock push ds
  43f77f:	out    dx,al
  43f780:	out    dx,eax
  43f781:	add    BYTE PTR [edx-0x62ff0b7a],ah
  43f787:	add    al,BYTE PTR [ebp-0x6affffab]
  43f78d:	call   DWORD PTR [edx-0x10]
  43f790:	and    al,0xd6
  43f792:	fisttp WORD PTR [ebx+0x787c6258]
  43f798:	lods   eax,DWORD PTR ds:[esi]
  43f799:	add    cl,BYTE PTR [ecx]
  43f79b:	test   BYTE PTR [eax+0x47000002],bh
  43f7a1:	add    ah,BYTE PTR [esi+0x0]
  43f7a4:	es mov esi,0xfa508bdf
  43f7aa:	cld    
  43f7ab:	push   eax
  43f7ac:	xchg   ecx,eax
  43f7ad:	sar    al,1
  43f7af:	adc    eax,0x3c4f95
  43f7b4:	and    al,0xc5
  43f7b6:	sti    
  43f7b7:	mov    esp,eax
  43f7b9:	bound  edi,QWORD PTR [eax+edi*1-0x63]
  43f7bd:	not    BYTE PTR [esi]
  43f7bf:	mov    ebp,eax
  43f7c1:	bound  eax,QWORD PTR [ebp+edx*2-0x76f1005b]
  43f7c8:	shl    BYTE PTR [esi-0x7c],1
  43f7cb:	inc    ebp
  43f7cc:	jge    0x43f845
  43f7ce:	dec    edx
  43f7cf:	or     BYTE PTR [esi-0x1f76f046],bl
  43f7d5:	pop    esi
  43f7d6:	in     al,0x17
  43f7d8:	push   ss
  43f7d9:	aad    0xdf
  43f7db:	mov    ebx,eax
  43f7dd:	cli    
  43f7de:	cld    
  43f7df:	inc    ecx
  43f7e0:	lea    edi,[ecx+0x42]
  43f7e3:	hlt    
  43f7e4:	es mov ebp,0xfad08bdf
  43f7ea:	cld    
  43f7eb:	adc    BYTE PTR [edx*8+0xc7eb],dl
  43f7f2:	pusha  
  43f7f3:	push   0xffffffff
  43f7f5:	call   FWORD PTR [ebp-0x2ba7afe]
  43f7fb:	jle    0x43f874
  43f7fd:	adc    BYTE PTR [ebp+0x688b08f6],bl
  43f803:	bound  edi,QWORD PTR [ecx+edi*1-0x63]
  43f807:	test   BYTE PTR [eax],0xc7
  43f80a:	pusha  
  43f80b:	push   0xfffffffe
  43f80d:	call   FWORD PTR [ebp-0x2eaa7afe]
  43f813:	jle    0x43f84a
  43f815:	add    BYTE PTR [ecx-0x1f],cl
  43f818:	test   BYTE PTR [ebp-0x2f],al
  43f81b:	jbe    0x43f824
  43f81d:	cmp    DWORD PTR [ecx+eax*1-0x9e30000],0x76488b1b
  43f828:	test   BYTE PTR [edx],al
  43f82a:	sub    BYTE PTR [ebx-0x8],0xff
  43f82e:	and    dl,dl
  43f830:	test   BYTE PTR [ebp-0x67],cl
  43f833:	aam    0xe7
  43f835:	mov    ch,0x90
  43f837:	push   0xfffffff8
  43f839:	and    DWORD PTR [ecx-0x5],0xffffff86
  43f83d:	inc    ebp
  43f83e:	popa   
  43f83f:	pop    esi
  43f840:	sbb    ecx,DWORD PTR [ebx+0x2846ed0]
  43f846:	es mov eax,0xfad18d07
  43f84c:	std    
  43f84d:	push   ecx
  43f84e:	push   ss
  43f84f:	sar    bl,0x50
  43f852:	inc    ebp
  43f853:	xchg   edx,eax
  43f854:	cli    
  43f855:	inc    DWORD PTR [eax]
  43f857:	add    BYTE PTR [edx-0x7a],dl
  43f85a:	ret    
  43f85b:	or     BYTE PTR [eax+eax*8],dl
  43f85e:	fisttp DWORD PTR [ebx+0x558456d0]
  43f864:	pop    ecx
  43f865:	jl     0x43f875
  43f867:	mov    ebx,eax
  43f869:	outs   dx,BYTE PTR ds:[esi]
  43f86a:	jl     0x43f82c
  43f86c:	mov    eax,ds:0x16f4427b
  43f871:	mov    eax,0xfedc83eb
  43f876:	xchg   BYTE PTR [ebp+0x1],cl
  43f879:	pop    esi
  43f87a:	nop
  43f87b:	mov    esi,DWORD PTR [eax+0x62]
  43f87e:	jl     0x43f842
  43f880:	test   eax,0x4e0527b
  43f885:	stc    
  43f886:	clc    
  43f887:	push   edx
  43f889:	jge    0x43f86d
  43f88b:	pop    ebp
  43f88c:	fidiv  WORD PTR [esi]
  43f88e:	retf   
  43f88f:	int3   
  43f890:	dec    eax
  43f891:	jge    0x43f87e
  43f893:	or     ecx,0xfffffffa
  43f896:	addr16 lock sahf 
  43f899:	ret    0xfeff
  43f89c:	mov    al,0x2
  43f89e:	aam    0x43
  43f8a0:	popf   
  43f8a1:	jnp    0x43f8e5
  43f8a3:	clc    
  43f8a4:	inc    ebp
  43f8a5:	data16 cld 
  43f8a7:	aas    
  43f8a8:	popf   
  43f8a9:	jge    0x43f8ed
  43f8ab:	clc    
  43f8ac:	dec    ebp
  43f8ad:	pop    edx
  43f8ae:	cmp    ebp,edi
  43f8b0:	mov    ds:0xa5c47c69,al
  43f8b5:	jnp    0x43f8f9
  43f8b7:	cld    
  43f8b8:	es mov bh,0xf
  43f8bb:	push   ecx
  43f8bc:	add    BYTE PTR [eax],al
  43f8be:	push   ss
  43f8bf:	iret   
  43f8c0:	or     edx,DWORD PTR [edx+0x16]
  43f8c3:	mov    edi,0xcf7a5007
  43f8c8:	sti    
  43f8c9:	mov    edi,DWORD PTR [eax-0x39]
  43f8cc:	mov    esp,0xcb3659cc
  43f8d1:	int3   
  43f8d2:	enter  0xeb7d,0xa1
  43f8d6:	stc    
  43f8d7:	dec    esi
  43f8d8:	cmp    al,0x0
  43f8da:	pop    ebx
  43f8db:	add    ch,BYTE PTR [eax-0x75]
  43f8de:	mov    al,0xce
  43f8e0:	rol    DWORD PTR [ebx-0x63],cl
  43f8e3:	jnp    0x43f934
  43f8e5:	add    edi,ebp
  43f8e7:	inc    esp
  43f8e8:	xchg   DWORD PTR [eax-0x68],edx
  43f8eb:	(bad)  
  43f8ec:	mov    esp,0xcb3659cc
  43f8f1:	int3   
  43f8f2:	enter  0xeb7d,0x83
  43f8f6:	or     esi,esi
  43f8f8:	sahf   
  43f8f9:	push   eax
  43f8fa:	jmp    0xefcef8c3
  43f8ff:	xor    al,0xc7
  43f901:	ds push ss
  43f903:	ret    0x8b2f
  43f906:	iret   
  43f907:	jl     0x43f8d6
  43f909:	ds es mov edx,0x7acf8b0b
  43f910:	dec    edx
  43f911:	hlt    
  43f912:	push   ss
  43f913:	mov    edi,0xf6658bf3
  43f918:	xchg   BYTE PTR [ebp-0x2b],cl
  43f91b:	jl     0x43f96f
  43f91d:	clc    
  43f91e:	adc    al,0xcf
  43f920:	sti    
  43f921:	mov    eax,0x29c0000
  43f926:	add    BYTE PTR [eax],al
  43f928:	and    BYTE PTR [edx+0x73],al
  43f92b:	inc    esp
  43f92c:	push   ds
  43f92d:	out    0xf7,eax
  43f92f:	add    BYTE PTR [eax],dh
  43f931:	(bad)  
  43f932:	sub    al,0xc0
  43f934:	mov    dh,0x25
  43f936:	test   DWORD PTR [ebp-0x6b],ecx
  43f939:	jl     0x43f989
  43f93b:	sbb    dh,dl
  43f93d:	int    0x7
  43f93f:	jne    0x43f8e5
  43f941:	jnp    0x43f985
  43f943:	clc    
  43f944:	push   ss
  43f945:	mov    dh,0xb
  43f947:	mov    ebp,esp
  43f949:	push   es
  43f94a:	test   DWORD PTR [ebp+0x75],edx
  43f94d:	jl     0x43f991
  43f94f:	adc    BYTE PTR [eax*8+0x29cb817],dl
  43f956:	add    BYTE PTR [eax],al
  43f958:	inc    esi
  43f959:	or     eax,DWORD PTR [ebp+0xe7c554d]
  43f95f:	mov    eax,esi
  43f961:	push   0xffffff84
  43f963:	inc    ebp
  43f964:	inc    ebp
  43f965:	sub    al,0x43
  43f967:	cld    
  43f968:	mov    al,0xfe
  43f96a:	sub    al,0xc0
  43f96c:	inc    esi
  43f96d:	jmp    esp
  43f96f:	mov    bl,0x6e
  43f971:	inc    edx
  43f972:	test   ch,ah
  43f974:	rol    BYTE PTR [ebx-0x35],0xcc
  43f978:	jmp    0xe210c4b3
  43f97d:	ss retf 
  43f97f:	int3   
  43f980:	fnstenv [esi]
  43f982:	retf   
  43f983:	int3   
  43f984:	push   0x83eb7b
  43f989:	add    BYTE PTR [ecx],cl
  43f98b:	or     eax,ecx
  43f98d:	inc    ebp
  43f98e:	cmc    
  43f98f:	add    dh,BYTE PTR [eax]
  43f991:	add    BYTE PTR [ebp+0x5d0403da],bl
  43f997:	add    bl,BYTE PTR [edi-0x3c0ec4]
  43f99d:	dec    edi
  43f99e:	(bad)
  43f9a1:	dec    edx
  43f9a3:	add    ebx,0x8
  43f9a6:	adc    al,0xbe
  43f9a8:	repz push 0x5d
  43f9ab:	jnp    0x43f9f7
  43f9ad:	clc    
  43f9ae:	dec    esp
  43f9af:	jnp    0x43f9c3
  43f9b1:	sbb    al,0xd1
  43f9b3:	ret    
  43f9b4:	dec    DWORD PTR [edx+0x6a4fd25f]
  43f9ba:	popf   
  43f9bb:	addr16 push edx
  43f9bd:	hlt    
  43f9be:	ds push cs
  43f9c0:	aam    0x43
  43f9c2:	popf   
  43f9c3:	cmp    DWORD PTR [edx],0x14
  43f9c6:	imul   eax,ebx,0xfff0ffff
  43f9cc:	mov    bh,0x2
  43f9ce:	popf   
  43f9cf:	add    al,BYTE PTR [eax]
  43f9d1:	jmp    0x43f9ca
  43f9d3:	jnp    0x43f9df
  43f9d5:	add    BYTE PTR [esi-0x1777003e],bl
  43f9db:	jb     0x43fa44
  43f9dd:	add    BYTE PTR [edi+0x3],ch
  43f9e0:	add    BYTE PTR [eax-0x63],ch
  43f9e3:	add    eax,DWORD PTR [eax+0x0]
  43f9e6:	push   ss
  43f9e7:	or     eax,0x2ded414
  43f9ec:	jg     0x43f9b0
  43f9ee:	add    BYTE PTR [eax],al
  43f9f0:	popf   
  43f9f1:	add    eax,DWORD PTR [eax]
  43f9f3:	add    bh,cl
  43f9f5:	pop    edx
  43f9f6:	cdq    
  43f9f7:	(bad)  
  43f9f8:	and    ah,BYTE PTR [edi+0x7c]
  43f9fb:	les    ebp,FWORD PTR [ecx+0x5d02ffaa]
  43fa01:	add    ch,BYTE PTR [ebx]
  43fa03:	add    BYTE PTR [esi-0x6f74fffe],bl
  43fa09:	push   cs
  43fa0a:	aam    0x43
  43fa0c:	popf   
  43fa0d:	sbb    ecx,eax
  43fa0f:	mov    DWORD PTR [eax-0x62bc2c42],esp
  43fa15:	jnp    0x43fa29
  43fa17:	inc    esp
  43fa18:	leave  
  43fa19:	ret    0x51ff
  43fa1c:	cld    
  43fa1d:	or     eax,0xd29d43d4
  43fa22:	test   BYTE PTR [ebp-0x33],cl
  43fa25:	shl    bh,1
  43fa27:	popf   
  43fa28:	shl    DWORD PTR [esi-0x8],0x83
  43fa2c:	loope  0x43fa23
  43fa2e:	test   BYTE PTR ds:0x3c4e89,dl
  43fa34:	sahf   
  43fa35:	int    0x7
  43fa37:	mov    DWORD PTR [eax+0x5a],ecx
  43fa3a:	test   BYTE PTR [ebp-0x7b],dl
  43fa3d:	data16 fisttp QWORD PTR [ebx-0x33433788]
  43fa44:	pop    ecx
  43fa45:	aaa    
  43fa46:	retf   
  43fa47:	int3   
  43fa48:	call   0xe0cfe5c6
  43fa4d:	cli    
  43fa4e:	xor    al,0x45
  43fa50:	mov    eax,ds:0x8b00f1
  43fa55:	add    al,ah
  43fa57:	cli    
  43fa58:	in     al,0x5
  43fa5a:	jbe    0x43fa5e
  43fa5c:	test   DWORD PTR [ebp-0x57],eax
  43fa5f:	(bad)  
  43fa60:	mov    esp,0xcb3761cc
  43fa65:	int3   
  43fa66:	pop    ecx
  43fa67:	aaa    
  43fa68:	retf   
  43fa69:	int3   
  43fa6a:	call   0x49c7e5e8
  43fa6f:	pop    ss
  43fa70:	rol    DWORD PTR [ebp+0x31],0x3
  43fa74:	add    BYTE PTR [ebx*4+0x14084279],al
  43fa7b:	rcl    bh,0x8b
  43fa7e:	push   0xa555844a
  43fa83:	add    DWORD PTR [edi+0x3c],ecx
  43fa86:	adc    al,0xd0
  43fa88:	fisttp WORD PTR [ebx-0x48f79da8]
  43fa8e:	gs push cs
  43fa90:	test   DWORD PTR [ebp-0x3],edx
  43fa93:	ja     0x43fad8
  43fa95:	or     al,BYTE PTR [ebp+0x75e8427b]
  43fa9b:	push   cs
  43fa9c:	add    al,0x40
  43fa9e:	popf   
  43fa9f:	jns    0x43faab
  43faa1:	cmp    al,0xe9
  43faa3:	sar    edi,0x50
  43faa6:	mov    ch,0xb5
  43faa8:	hlt    
  43faa9:	inc    edx
  43faab:	add    ebx,0xefc02408
  43fab1:	push   0x5d
  43fab3:	(bad)  
  43fab5:	das    
  43fab6:	popf   
  43fab7:	add    ch,BYTE PTR [eax+0x0]
  43faba:	add    BYTE PTR [eax],al
  43fabc:	popf   
  43fabd:	(bad)  
  43fabe:	jmp    FWORD PTR [ecx-0x63]
  43fac1:	gs push edx
  43fac3:	lock and al,0xbf
  43fac6:	jecxz  0x43fa53
  43fac8:	lock bound eax,QWORD PTR [edx+eax*2+0x4d84d2e9]
  43fad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fad1:	rol    DWORD PTR [ebp+edx*2-0x3e182f87],cl
  43fad8:	push   0x5983f865
  43fadd:	test   al,0x45
  43fae0:	push   ecx
  43fae1:	add    al,BYTE PTR [eax]
  43fae3:	add    BYTE PTR [ebp-0x1f74f9a7],bl
  43fae9:	outs   dx,BYTE PTR ds:[esi]
  43faea:	jl     0x43faac
  43faec:	pushf  
  43faed:	jnp    0x43fb31
  43faef:	hlt    
  43faf0:	es mov bh,0xdf
  43faf3:	pminsw mm2,mm2
  43faf6:	add    DWORD PTR [ecx],edi
  43faf8:	shr    BYTE PTR [esi+0x6c],1
  43fafb:	pop    ecx
  43fafc:	push   ss
  43fafd:	mov    edi,0xe9583e7
  43fb02:	add    BYTE PTR [eax+ebx*2+0x79],dh
  43fb06:	dec    edx
  43fb07:	call   0x53e62a
  43fb0c:	mov    DWORD PTR [esi],esp
  43fb0e:	test   DWORD PTR [ebp+0x5],edx
  43fb11:	jns    0x43fb50
  43fb13:	adc    BYTE PTR [esi],ah
  43fb15:	mov    bh,0xdf
  43fb17:	mov    ecx,DWORD PTR [esi+eiz*1-0x75]
  43fb1b:	inc    esp
  43fb1c:	lea    esp,[ebp-0x7c]
  43fb1f:	dec    ebp
  43fb20:	add    BYTE PTR [eax],al
  43fb22:	mov    ebp,0x4cf7ce30
  43fb27:	test   DWORD PTR es:[ebp-0x43],edx
  43fb2b:	hlt    
  43fb2c:	test   al,0x42
  43fb2e:	adc    edx,0x78c54584
  43fb34:	dec    edx
  43fb35:	or     BYTE PTR [esi+0x165113ba],bl
  43fb3b:	iret   
  43fb3c:	out    0x8b,eax
  43fb3e:	pop    eax
  43fb3f:	pop    esi
  43fb40:	cld    
  43fb41:	inc    ecx
  43fb42:	test   eax,0x9055e7d2
  43fb47:	fs clc 
  43fb49:	and    DWORD PTR [ecx-0x9],0xffffff84
  43fb4d:	dec    ebp
  43fb4e:	jne    0x43fad0
  43fb50:	mov    esi,0xe7b62428
  43fb55:	jmp    0x43fb66
  43fb57:	js     0x43fbab
  43fb59:	in     al,0xcf
  43fb5b:	pop    edx
  43fb5c:	or     esp,edi
  43fb5e:	bound  esp,QWORD PTR [esp+edi*2-0x3c]
  43fb62:	mov    eax,ds:0xdd0423da
  43fb67:	add    bl,BYTE PTR [edi-0x3f8ec4]
  43fb6d:	dec    edi
  43fb6e:	xor    eax,0x3afff578
  43fb73:	add    bl,0x8
  43fb76:	and    al,0xbe
  43fb78:	fild   DWORD PTR [ebx+0x43d42a68]
  43fb7e:	popf   
  43fb7f:	add    dh,BYTE PTR [ebx+0xa]
  43fb82:	imul   BYTE PTR es:[edi]
  43fb85:	aam    0x0
  43fb87:	add    BYTE PTR [esi+0x2],bl
  43fb8a:	dec    edi
  43fb8b:	push   DWORD PTR [eax+0x46]
  43fb8e:	jl     0x43fbcd
  43fb90:	lds    ecx,FWORD PTR [esi+0x3c]
  43fb93:	add    BYTE PTR [ebp+0x5d6a1bed],bl
  43fb99:	(bad)  
  43fb9b:	das    
  43fb9c:	popf   
  43fb9d:	add    al,BYTE PTR [ebp-0x7b2f1eab]
  43fba3:	inc    ebp
  43fba4:	mov    ebp,0x6c344777
  43fba9:	arpl   WORD PTR [edx-0x10],dx
  43fbac:	dec    BYTE PTR [esi]
  43fbae:	aam    0x43
  43fbb0:	popf   
  43fbb1:	push   edi
  43fbb2:	adc    ch,BYTE PTR [edx+0x5d]
  43fbb5:	(bad)  
  43fbb7:	das    
  43fbb8:	popf   
  43fbb9:	add    al,BYTE PTR [ebp+0x65d0a955]
  43fbbf:	add    BYTE PTR [edx-0x4e5c1033],ah
  43fbc5:	dec    esi
  43fbc6:	cmp    al,0x0
  43fbc8:	push   ds
  43fbc9:	and    eax,0x2ded414
  43fbce:	add    BYTE PTR [ebp-0x58],dh
  43fbd1:	fdivr  DWORD PTR [edi]
  43fbd3:	push   0x329d
  43fbd8:	es mov ebp,0x2f750fb
  43fbde:	stc    
  43fbdf:	push   ebp
  43fbe0:	ins    DWORD PTR es:[edi],dx
  43fbe1:	lahf   
  43fbe2:	adc    edx,esp
  43fbe4:	fiadd  WORD PTR [edx]
  43fbe6:	test   DWORD PTR [ebp+0x39],ecx
  43fbe9:	jns    0x43fc35
  43fbeb:	fadd   DWORD PTR [eax]
  43fbed:	add    BYTE PTR [esi],dl
  43fbef:	int    0xd7
  43fbf1:	mov    ebx,eax
  43fbf3:	dec    edx
  43fbf4:	cld    
  43fbf5:	inc    ecx
  43fbf6:	jns    0x43fc71
  43fbf8:	inc    edx
  43fbf9:	loopne 0x43fc21
  43fbfb:	mov    ch,0xdf
  43fbfd:	mov    ecx,esp
  43fbff:	ror    BYTE PTR [ebp-0x75],cl
  43fc02:	fcomp  DWORD PTR [esi+0x4f]
  43fc05:	mov    ebp,DWORD PTR [eax-0x62bc2bf2]
  43fc0b:	shl    edi,1
  43fc0d:	xchg   ecx,eax
  43fc0e:	or     DWORD PTR [ebx-0x8],esp
  43fc11:	sbb    ecx,0xfffffff5
  43fc14:	test   BYTE PTR [ebp-0x3],dl
  43fc17:	jle    0x43fbce
  43fc19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc1a:	popf   
  43fc1b:	add    al,BYTE PTR [eax]
  43fc1d:	add    BYTE PTR [ecx+0x29],dh
  43fc20:	test   DWORD PTR [ebp-0x3],eax
  43fc23:	jbe    0x43fc6f
  43fc25:	fcomp  DWORD PTR [esi-0x62ff6086]
  43fc2b:	add    al,BYTE PTR [edi+0x5276b94d]
  43fc31:	loopne 0x43fc2f
  43fc33:	or     eax,0x179d43d4
  43fc38:	ds xor al,0xfe
  43fc3b:	mov    ebp,0x779d43d3
  43fc40:	or     al,BYTE PTR [ecx+ecx*8-0x42]
  43fc44:	call   DWORD PTR [eax+0x26]
  43fc47:	clc    
  43fc48:	adc    edx,esp
  43fc4a:	fiadd  WORD PTR [edx]
  43fc4c:	dec    esi
  43fc4d:	mov    esp,eax
  43fc4f:	outs   dx,BYTE PTR ds:[esi]
  43fc50:	dec    edi
  43fc51:	call   0x5d44fc56
  43fc56:	clc    
  43fc57:	call   FWORD PTR [esi]
  43fc59:	inc    edi
  43fc5a:	or     ecx,DWORD PTR [ebx+0x158462e0]
  43fc60:	xchg   ecx,eax
  43fc61:	ss cmp al,0x0
  43fc64:	sahf   
  43fc65:	mov    bl,0x27
  43fc67:	mov    DWORD PTR [eax-0x62bc2c4a],esi
  43fc6d:	test   DWORD PTR [edx],edi
  43fc6f:	cmp    BYTE PTR [ecx-0x3a],dh
  43fc72:	(bad)  
  43fc73:	dec    eax
  43fc75:	cs lahf 
  43fc77:	adc    al,0x51
  43fc79:	(bad)  
  43fc7a:	dec    DWORD PTR [edi+0x26]
  43fc7d:	adc    BYTE PTR [esp+edx*8-0x22],dl
  43fc81:	add    cl,BYTE PTR [edi-0x75]
  43fc84:	mov    BYTE PTR [edx],dl
  43fc86:	aam    0x43
  43fc88:	popf   
  43fc89:	mov    ah,0xe7
  43fc8b:	jne    0x43fc9e
  43fc8d:	(bad)  
  43fc8e:	clc    
  43fc8f:	and    ecx,0xe
  43fc92:	lahf   
  43fc93:	adc    al,0xe9
  43fc95:	(bad)  
  43fc98:	add    eax,0xf2fff6ca
  43fc9d:	test   ebx,eax
  43fc9f:	add    al,0xf6
  43fca1:	loop   0x43fd0a
  43fca3:	xor    al,0x99
  43fca5:	ret    0x8aff
  43fca8:	test   al,0x1e
  43fcaa:	aam    0x43
  43fcac:	popf   
  43fcad:	mov    bl,0xe7
  43fcaf:	push   ecx
  43fcb0:	les    esp,FWORD PTR [ecx-0x8]
  43fcb3:	sbb    ecx,0xa
  43fcb6:	xchg   DWORD PTR [ebp+0x0],eax
  43fcb9:	add    cl,dl
  43fcbb:	lea    edx,[edx]
  43fcbd:	adc    al,0xc9
  43fcbf:	vsqrtsd xmm2,xmm0,QWORD PTR [esi]
  43fcc3:	enter  0x8bdf,0x90
  43fcc7:	not    bl
  43fcc9:	inc    ebx
  43fcca:	popf   
  43fccb:	add    eax,0x8dec2848
  43fcd0:	adc    dh,BYTE PTR [eax]
  43fcd2:	jno    0x43fc99
  43fcd4:	call   DWORD PTR [ecx+0x75]
  43fcd7:	sub    eax,0x857afffc
  43fcdc:	ret    
  43fcdd:	or     al,0x3c
  43fcdf:	adc    dl,ah
  43fce1:	inc    ebx
  43fce2:	popf   
  43fce3:	pop    es
  43fce4:	nop
  43fce5:	rcr    DWORD PTR [esi+0x715c9d02],1
  43fceb:	(bad)  
  43fcee:	loopne 0x43fd4a
  43fcf0:	dec    esi
  43fcf1:	push   0xffffffdd
  43fcf3:	in     al,dx
  43fcf4:	add    DWORD PTR [ebx+0x43d3bea8],ecx
  43fcfa:	popf   
  43fcfb:	mov    ah,0xf8
  43fcfd:	push   ebp
  43fcfe:	dec    ecx
  43fcff:	push   0xffffffdd
  43fd01:	sti    
  43fd02:	sub    ah,BYTE PTR [ecx-0x49]
  43fd05:	add    DWORD PTR [ebp+0x8b0002],ebx
  43fd0b:	mov    edi,0x4e9d04bd
  43fd10:	retf   
  43fd11:	int3   
  43fd12:	(bad)  [ebp-0x35]
  43fd15:	int3   
  43fd16:	push   0x608beb8d
  43fd1b:	or     al,BYTE PTR [ebp-0xeffffc0]
  43fd21:	mov    esi,0x4dd9ccbc
  43fd26:	retf   
  43fd27:	int3   
  43fd28:	dec    eax
  43fd29:	(bad)  
  43fd2a:	jmp    0x43fd7f
  43fd2c:	jae    0x43fce7
  43fd2e:	test   BYTE PTR ds:0x3c367d,bh
  43fd34:	push   ss
  43fd35:	jmp    FWORD PTR [ebx]
  43fd37:	aam    0x5e
  43fd39:	add    al,BYTE PTR [ebp+0x3c369535]
  43fd3f:	add    BYTE PTR [edx-0x40],dl
  43fd42:	push   esp
  43fd43:	pop    ebp
  43fd44:	fimul  WORD PTR [ebp-0x35]
  43fd47:	int3   
  43fd48:	dec    eax
  43fd49:	(bad)  
  43fd4a:	jmp    0x43fd9d
  43fd4c:	add    eax,0x9d4003c7
  43fd51:	mov    eax,ds:0x2ded43b
  43fd56:	push   eax
  43fd57:	call   0x3c588d
  43fd5c:	push   ds
  43fd5d:	inc    edi
  43fd5e:	pop    es
  43fd5f:	mov    eax,ebx
  43fd61:	pop    esi
  43fd62:	test   BYTE PTR [ebp-0x6b],cl
  43fd65:	mov    cl,0x65
  43fd67:	add    BYTE PTR [esi],dl
  43fd69:	not    BYTE PTR [edi-0x2c]
  43fd6c:	fiadd  WORD PTR [edx]
  43fd6e:	dec    esi
  43fd6f:	(bad)  
  43fd70:	call   0xe92981d3
  43fd75:	inc    ebx
  43fd76:	retf   
  43fd77:	int3   
  43fd78:	call   0x49c7e908
  43fd7d:	daa    
  43fd7e:	rol    DWORD PTR [ebp+0x35],0x3
  43fd82:	add    BYTE PTR [eax],al
  43fd84:	add    BYTE PTR [eax],al
  43fd86:	popf   
  43fd87:	inc    edi
  43fd88:	inc    edx
  43fd89:	fsub   QWORD PTR [ebp-0x1dfffffe]
  43fd8f:	(bad)
  43fd92:	popf   
  43fd93:	add    al,BYTE PTR [eax]
  43fd95:	(bad)  
  43fd96:	pusha  
  43fd97:	pop    esi
  43fd98:	(bad)  
  43fd99:	call   FWORD PTR [ebp+0x145c102]
  43fd9f:	add    eax,DWORD PTR [eax]
  43fda1:	add    BYTE PTR [ebp+0x14084a8b],bl
  43fda7:	push   cs
  43fda8:	xor    ah,dl
  43fdaa:	pop    esi
  43fdab:	add    ch,al
  43fdad:	test   eax,0xa1f85fd2
  43fdb2:	lea    esi,[esi]
  43fdb4:	cmp    al,0x0
  43fdb6:	sbb    BYTE PTR [edi-0x8],0x0
  43fdba:	popf   
  43fdbb:	(bad)  
  43fdbc:	or     eax,edi
  43fdbe:	mov    al,ds:0x9d43d41a
  43fdc3:	add    al,BYTE PTR [eax]
  43fdc5:	add    BYTE PTR [ebp-0x6738fa95],bl
  43fdcb:	sbb    dl,ah
  43fdcd:	inc    ebx
  43fdce:	popf   
  43fdcf:	add    DWORD PTR [eax],eax
  43fdd1:	add    BYTE PTR [ebp+0x71303a83],bl
  43fdd7:	ret    
  43fdd8:	(bad)  
  43fdd9:	dec    DWORD PTR [eax]
  43fddb:	or     eax,0x36b505c1
  43fde0:	cmp    al,0x0
  43fde2:	popf   
  43fde3:	add    al,BYTE PTR [eax]
  43fde5:	add    BYTE PTR [esi],bl
  43fde7:	sbb    eax,0xd438
  43fdec:	fiadd  WORD PTR [edx]
  43fdee:	add    BYTE PTR [ebp-0x58],dh
  43fdf1:	in     al,dx
  43fdf2:	(bad)  
  43fdf3:	(bad)  
  43fdf4:	test   al,0x2
  43fdf6:	aam    0x43
  43fdf8:	popf   
  43fdf9:	mov    ds:0x2ded42f,eax
  43fdfe:	test   DWORD PTR ds:0x3c366d,ecx
  43fe04:	and    al,0xcd
  43fe06:	out    0x8b,eax
  43fe08:	nop
  43fe09:	adc    dl,ah
  43fe0b:	inc    ebx
  43fe0c:	popf   
  43fe0d:	mov    eax,DWORD PTR [edx-0x18]
  43fe10:	sahf   
  43fe11:	les    edi,FWORD PTR [ebx]
  43fe13:	mov    DWORD PTR [eax+0x6a],ebx
  43fe16:	test   BYTE PTR [ebp-0xb],cl
  43fe19:	mov    BYTE PTR [edx],cl
  43fe1b:	sbb    al,0xe9
  43fe1d:	ret    0x67ff
  43fe20:	dec    ebp
  43fe21:	push   es
  43fe22:	inc    eax
  43fe23:	add    dl,dh
  43fe25:	hlt    
  43fe26:	call   ebx
  43fe28:	pop    esi
  43fe29:	add    bl,BYTE PTR [ebp-0x3d36c4]
  43fe2f:	(bad)  
  43fe30:	mov    al,ds:0x9d43d3ce
  43fe35:	aad    0x3
  43fe37:	inc    eax
  43fe38:	popf   
  43fe39:	jmp    0x1585:0x25d045f
  43fe40:	jns    0x43fe78
  43fe42:	cmp    al,0x0
  43fe44:	dec    edi
  43fe45:	push   0xffffffbd
  43fe47:	imul   DWORD PTR [edx-0x6a3b83a2]
  43fe4d:	mov    ds:0xd447,eax
  43fe52:	fiadd  WORD PTR [edx]
  43fe54:	stc    
  43fe55:	adc    eax,0x3c36e5
  43fe5a:	ds mov ebx,0xa39d43d3
  43fe60:	dec    ebx
  43fe61:	aam    0xde
  43fe63:	add    dl,BYTE PTR [eax-0x18]
  43fe66:	sub    DWORD PTR [ebp-0x8],ebx
  43fe69:	call   FWORD PTR [esi]
  43fe6b:	inc    edi
  43fe6c:	add    ecx,DWORD PTR [ecx+0x4d8452d8]
  43fe72:	dec    ebp
  43fe73:	mov    ah,0xe7
  43fe75:	aad    0x53
  43fe77:	pop    esi
  43fe78:	clc    
  43fe79:	and    DWORD PTR [ecx+0x7],0xffffff9d
  43fe7d:	xor    al,0x69
  43fe7f:	ret    0x8aff
  43fe82:	rcl    BYTE PTR [edx+0x4d],1
  43fe85:	push   0xffffff9d
  43fe87:	mov    ds:0x2ded433,eax
  43fe8c:	push   eax
  43fe8d:	call   0x3c5493
  43fe92:	push   ds
  43fe93:	inc    edi
  43fe94:	or     ecx,DWORD PTR [ebx+0x4d865260]
  43fe9a:	std    
  43fe9b:	mov    DWORD PTR [edx-0x4],edx
  43fe9e:	(bad)  
  43fe9f:	mov    bh,0xef
  43fea1:	jae    0x43fefa
  43fea3:	mov    DWORD PTR [edx-0x20],eax
  43fea6:	dec    ebp
  43fea7:	mov    DWORD PTR [edx-0x24],ecx
  43feaa:	dec    esp
  43feab:	push   0xffffffa9
  43fead:	sti    
  43feae:	loop   0x43ff0d
  43feb0:	jl     0x43fe76
  43feb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43feb3:	mov    eax,ds:0xd43f
  43feb8:	pop    esi
  43feb9:	add    al,BYTE PTR [ebp+0x3c365d15]
  43febf:	add    BYTE PTR [edi-0x5d],ch
  43fec2:	dec    ebx
  43fec3:	aam    0x5e
  43fec5:	add    bh,ch
  43fec7:	inc    esp
  43fec8:	mov    ecx,0x710d84b2
  43fecd:	ss cmp al,0x0
  43fed0:	sahf   
  43fed1:	iret   
  43fed2:	sti    
  43fed3:	push   ecx
  43fed4:	test   DWORD PTR ds:0x8192fff6,esi
  43feda:	ret    
  43fedb:	or     al,0x16
  43fedd:	mov    bh,0xf3
  43fedf:	add    ebp,eax
  43fee1:	ds cld 
  43fee3:	push   esp
  43fee4:	or     DWORD PTR [ebx-0x38d91bae],0x3ee003fb
  43feee:	xchg   BYTE PTR [ebp+0x61],al
  43fef1:	mov    DWORD PTR [edx-0x20],ecx
  43fef4:	xchg   BYTE PTR [edi],cl
  43fef6:	inc    eax
  43fef7:	aam    0xde
  43fef9:	add    al,BYTE PTR [edi-0x6696c2b3]
  43feff:	(bad)  
  43ff00:	fcomp  DWORD PTR [edx-0x1]
  43ff03:	call   FWORD PTR [ebp+0x2609e502]
  43ff09:	mov    bh,0xf7
  43ff0b:	sbb    DWORD PTR [edi+0x6],0xffffff87
  43ff0f:	push   ebp
  43ff10:	and    eax,0xd6f84289
  43ff15:	(bad)  
  43ff16:	out    dx,eax
  43ff17:	jae    0x43feee
  43ff19:	mov    DWORD PTR [edx],ecx
  43ff1b:	xor    al,0x0
  43ff1d:	add    cl,dh
  43ff1f:	sar    bh,0x2
  43ff22:	push   eax
  43ff23:	pop    edx
  43ff24:	test   BYTE PTR [ecx],dl
  43ff26:	sahf   
  43ff27:	mov    bh,0xf7
  43ff29:	mov    eax,ds:0x3c36a9
  43ff2e:	sahf   
  43ff2f:	(bad)  
  43ff30:	test   DWORD PTR [ecx-0x7b57673],0x3e6431c
  43ff3a:	popf   
  43ff3b:	add    al,BYTE PTR [ebp+0x3c369115]
  43ff41:	add    BYTE PTR [esi-0x58cc0849],bl
  43ff47:	mov    ds:0x25ed433,eax
  43ff4c:	std    
  43ff4d:	inc    esp
  43ff4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ff4f:	mov    al,BYTE PTR [edi]
  43ff51:	jmp    0x43ff3d
  43ff53:	mov    ch,BYTE PTR [edx]
  43ff55:	and    al,0x71
  43ff57:	sar    bh,0x88
  43ff5a:	shl    BYTE PTR [edx],1
  43ff5c:	aam    0x43
  43ff5e:	popf   
  43ff5f:	cmpxchg8b QWORD PTR [ecx+0x43d3fac8]
  43ff66:	popf   
  43ff67:	cmpxchg8b QWORD PTR [ecx+0x43d42e90]
  43ff6e:	popf   
  43ff6f:	push   0x49
  43ff71:	mul    DWORD PTR [edx+0x5c]
  43ff74:	mov    cl,BYTE PTR ds:0x3c300a
  43ff7a:	and    al,0xce
  43ff7c:	idiv   DWORD PTR [ecx+0x3fff9d]
  43ff82:	add    BYTE PTR [eax],al
  43ff84:	sbb    al,0x6a
  43ff86:	inc    DWORD PTR [edx]
  43ff88:	popf   
  43ff89:	add    al,BYTE PTR [ebp-0x30d7caab]
  43ff8f:	mov    DWORD PTR [eax-0x62bc2bd6],edx
  43ff95:	mov    eax,ds:0x25ed427
  43ff9a:	push   eax
  43ff9b:	call   0x3c5839
  43ffa0:	push   ds
  43ffa1:	inc    edi
  43ffa2:	add    ecx,DWORD PTR [ebx+0x43d41690]
  43ffa8:	popf   
  43ffa9:	mov    cl,0xe7
  43ffab:	aad    0xf7
  43ffad:	pop    ebx
  43ffae:	clc    
  43ffaf:	test   ebp,ebx
  43ffb1:	aad    0x3
  43ffb3:	xor    ebx,ebp
  43ffb5:	addr16 and eax,0xd426808b
  43ffbb:	inc    ebx
  43ffbc:	popf   
  43ffbd:	jg     0x43ff82
  43ffbf:	add    al,0x1e
  43ffc1:	push   ds
  43ffc2:	cmp    ah,dl
  43ffc4:	pop    esi
  43ffc5:	add    al,BYTE PTR [eax]
  43ffc7:	je     0x43ff6d
  43ffc9:	mov    eax,ds:0x25ed413
  43ffce:	xchg   DWORD PTR [ecx+eax*4+0x6],eax
  43ffd2:	call   0xf89fa034
  43ffd7:	mov    esi,DWORD PTR [eax-0x62bc2c4a]
  43ffdd:	mov    al,0xbc
  43ffdf:	xor    ebx,DWORD PTR [ebp-0x79]
  43ffe2:	loop   0x440041
  43ffe4:	pop    esi
  43ffe5:	dec    esi
  43ffe6:	retf   
  43ffe7:	int3   
  43ffe8:	add    BYTE PTR [eax],al
  43ffea:	popf   
  43ffeb:	add    al,BYTE PTR [eax]
  43ffed:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fff3:	add    al,BYTE PTR [eax]
  43fff5:	add    BYTE PTR [ebp-0x62fffffe],bl
  43fffb:	add    al,BYTE PTR [eax]
  43fffd:	add    BYTE PTR [ebp-0x62fffffe],bl
  440003:	add    al,BYTE PTR [eax]
  440005:	add    BYTE PTR [ebp-0x62fffffe],bl
  44000b:	add    al,BYTE PTR [eax]
  44000d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440013:	add    al,BYTE PTR [eax]
  440015:	add    BYTE PTR [ebp-0x62fffffe],bl
  44001b:	add    al,BYTE PTR [eax]
  44001d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440023:	add    al,BYTE PTR [eax]
  440025:	add    BYTE PTR [ebp-0x62fffffe],bl
  44002b:	add    al,BYTE PTR [eax]
  44002d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440033:	add    al,BYTE PTR [eax]
  440035:	add    BYTE PTR [ebp-0x62fffffe],bl
  44003b:	add    al,BYTE PTR [eax]
  44003d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440043:	add    al,BYTE PTR [eax]
  440045:	add    BYTE PTR [ebp-0x62fffffe],bl
  44004b:	add    al,BYTE PTR [eax]
  44004d:	add    BYTE PTR [eax],al
  44004f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440055:	add    al,BYTE PTR [eax]
  440057:	add    BYTE PTR [ebp-0x62fffffe],bl
  44005d:	add    al,BYTE PTR [eax]
  44005f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440065:	add    al,BYTE PTR [eax]
  440067:	add    BYTE PTR [ebp-0x62fffffe],bl
  44006d:	add    al,BYTE PTR [eax]
  44006f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440075:	add    al,BYTE PTR [eax]
  440077:	add    BYTE PTR [ebp-0x62fffffe],bl
  44007d:	add    al,BYTE PTR [eax]
  44007f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440085:	add    al,BYTE PTR [eax]
  440087:	add    BYTE PTR [ebp-0x62fffffe],bl
  44008d:	add    al,BYTE PTR [eax]
  44008f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440095:	add    al,BYTE PTR [eax]
  440097:	add    BYTE PTR [ebp-0x62fffffe],bl
  44009d:	add    al,BYTE PTR [eax]
  44009f:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400a5:	add    al,BYTE PTR [eax]
  4400a7:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400ad:	add    al,BYTE PTR [eax]
  4400af:	add    BYTE PTR [ebp+0x2],bl
  4400b5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400bb:	add    al,BYTE PTR [eax]
  4400bd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400c3:	add    al,BYTE PTR [eax]
  4400c5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400cb:	add    al,BYTE PTR [eax]
  4400cd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400d3:	add    al,BYTE PTR [eax]
  4400d5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400db:	add    al,BYTE PTR [eax]
  4400dd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400e3:	add    al,BYTE PTR [eax]
  4400e5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400eb:	add    al,BYTE PTR [eax]
  4400ed:	add    BYTE PTR [ebp-0x62fffffe],bl
  4400f3:	add    al,BYTE PTR [eax]
  4400f5:	add    BYTE PTR [ebp+0x2],bl
  4400fb:	add    al,0x0
  4400fd:	add    BYTE PTR [ebp-0x4afffffe],bl
  440103:	add    al,BYTE PTR [eax]
  440105:	add    BYTE PTR [ecx],ah
  440107:	xor    DWORD PTR [eax-0x67cececd],edx
  44010d:	xor    esp,DWORD PTR [ecx]
  44010f:	xor    DWORD PTR [eax-0x57cefecd],esp
  440115:	xor    ebx,DWORD PTR [ebp-0x4afffc3e]
  44011b:	add    al,BYTE PTR [eax]
  44011d:	add    BYTE PTR [esi+0x3b],bh
  440120:	mov    edi,DWORD PTR [ecx]
  440122:	sub    eax,0x32399a3b
  440127:	cmp    ebp,DWORD PTR [eax-0x2cc4c4c7]
  44012d:	cmp    ebx,esp
  44012f:	cmp    ch,al
  440131:	cmp    DWORD PTR [ecx+0x663a2d38],esp
  440137:	cmp    BYTE PTR [ecx+0x3a],dl
  44013a:	inc    esp
  44013b:	cmp    ch,bl
  44013d:	cmp    bh,cl
  44013f:	cmp    bh,al
  440141:	cmp    al,0xe8
  440143:	cmp    eax,0x3f993cd5
  440148:	or     eax,0xbe3f823d
  44014d:	cmp    eax,0x3ddb3ede
  440152:	les    edi,FWORD PTR [esi]
  440154:	out    dx,eax
  440155:	cmp    eax,0x3e0c3eb2
  44015a:	(bad)  
  44015b:	cmp    al,0x26
  44015d:	ds ins BYTE PTR es:[edi],dx
  44015f:	cmp    al,0x39
  440161:	add    BYTE PTR ds:[eax],al
  440164:	fidivr DWORD PTR [eax*2-0x3ec30ac2]
  44016b:	bound  edi,QWORD PTR ds:0x3c163f86
  440172:	popf   
  440173:	aas    
  440174:	inc    ebx
  440175:	cmp    al,0xb0
  440177:	aas    
  440178:	pusha  
  440179:	cmp    al,0xe4
  44017b:	aas    
  44017c:	ja     0x4401ba
  44017e:	add    BYTE PTR [eax],al
  440180:	popf   
  440181:	rol    BYTE PTR [ebx],cl
  440183:	add    BYTE PTR [ecx],bh
  440185:	add    eax,DWORD PTR [eax]
  440187:	add    BYTE PTR [edi-0x13cfdace],bl
  44018d:	xor    bl,BYTE PTR [ecx+0x30]
  440190:	loop   0x4401c4
  440192:	data16 xor BYTE PTR [ecx+0x26308532],bh
  440199:	xor    edx,DWORD PTR [ebx-0x5eccf8d0]
  44019f:	xor    dl,dh
  4401a1:	xor    bh,BYTE PTR [edi-0x28cd1fd0]
  4401a7:	xor    ah,bh
  4401a9:	xor    ch,bl
  4401ab:	xor    BYTE PTR [ebx+esi*1],al
  4401ae:	add    esi,DWORD PTR [ecx]
  4401b0:	lods   al,BYTE PTR ds:[esi]
  4401b1:	xor    DWORD PTR [eax+0x31],ecx
  4401b4:	imul   esi,DWORD PTR [ecx],0x54
  4401b7:	xor    DWORD PTR [eax+0x31],edi
  4401ba:	push   0x31
  4401bc:	pop    ds
  4401bd:	xor    bh,BYTE PTR [esi-0x2ace2acf]
  4401c3:	xor    DWORD PTR [ecx+esi*1+0x31eb],edi
  4401ca:	leave  
  4401cb:	xor    esi,edi
  4401cd:	xor    DWORD PTR [eax+esi*1+0x30a9320e],edx
  4401d4:	sbb    eax,0x34308a32
  4401d9:	xor    dh,BYTE PTR [edi+0x30]
  4401dc:	aas    
  4401dd:	xor    ah,BYTE PTR [eax+0x30]
  4401e0:	dec    ecx
  4401e1:	xor    dl,BYTE PTR [ebx+0x30]
  4401e4:	push   esp
  4401e5:	xor    bh,bh
  4401e7:	xor    BYTE PTR [eax+0x32],ch
  4401ea:	add    BYTE PTR [ecx],dh
  4401ec:	jb     0x440220
  4401ee:	sbb    dh,BYTE PTR [eax]
  4401f0:	call   0x4f32:0xcc305b32
  4401f7:	xor    ah,bl
  4401f9:	xor    bl,BYTE PTR [ebx-0x5accd4d1]
  4401ff:	das    
  440200:	dec    esp
  440201:	xor    ecx,ebx
  440203:	das    
  440204:	arpl   WORD PTR [ebx],si
  440206:	les    ebp,FWORD PTR [edi]
  440208:	jno    0x44023d
  44020a:	aam    0x2f
  44020c:	test   BYTE PTR [ebx],dh
  44020e:	sbb    DWORD PTR [edi],ebp
  440210:	popf   
  440211:	xor    edi,edi
  440213:	cs mov cl,0x33
  440216:	pusha  
  440217:	das    
  440218:	into   
  440219:	xor    ecx,DWORD PTR [ebx+0x2f]
  44021c:	in     eax,0x33
  44021e:	popf   
  44021f:	add    al,BYTE PTR [eax]
  440221:	add    BYTE PTR [ebp-0x62fffffe],bl
  440227:	add    al,BYTE PTR [eax]
  440229:	add    BYTE PTR [ebp+0x2],bl
  44022f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440235:	add    al,BYTE PTR [eax]
  440237:	add    BYTE PTR [ebp-0x62fffffe],bl
  44023d:	add    al,BYTE PTR [eax]
  44023f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440245:	add    al,BYTE PTR [eax]
  440247:	add    BYTE PTR [ebp-0x62fffffe],bl
  44024d:	add    al,BYTE PTR [eax]
  44024f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440255:	add    al,BYTE PTR [eax]
  440257:	add    BYTE PTR [ebp-0x62fffffe],bl
  44025d:	add    al,BYTE PTR [eax]
  44025f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440265:	add    al,BYTE PTR [eax]
  440267:	add    BYTE PTR [ebp-0x62fffffe],bl
  44026d:	add    al,BYTE PTR [eax]
  44026f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440275:	add    al,BYTE PTR [eax]
  440277:	add    BYTE PTR [ebp-0x62fffffe],bl
  44027d:	add    al,BYTE PTR [eax]
  44027f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440285:	add    al,BYTE PTR [eax]
  440287:	add    BYTE PTR [ebp-0x62fffffe],bl
  44028d:	add    al,BYTE PTR [eax]
  44028f:	add    BYTE PTR [ebp+0x2],bl
  440295:	add    BYTE PTR [ebp-0x62fffffe],bl
  44029b:	add    al,BYTE PTR [eax]
  44029d:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402a3:	add    al,BYTE PTR [eax]
  4402a5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402ab:	add    al,BYTE PTR [eax]
  4402ad:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402b3:	add    al,BYTE PTR [eax]
  4402b5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402bb:	add    al,BYTE PTR [eax]
  4402bd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402c3:	add    al,BYTE PTR [eax]
  4402c5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402cb:	add    al,BYTE PTR [eax]
  4402cd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402d3:	add    al,BYTE PTR [eax]
  4402d5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402db:	add    al,BYTE PTR [eax]
  4402dd:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402e3:	add    al,BYTE PTR [eax]
  4402e5:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402eb:	add    al,BYTE PTR [eax]
  4402ed:	add    BYTE PTR [ebp-0x62fffffe],bl
  4402f3:	add    al,BYTE PTR [eax]
  4402f5:	add    BYTE PTR [ebp+0x2],bl
  4402fb:	add    BYTE PTR [ebp-0x62fffffe],bl
  440301:	add    al,BYTE PTR [eax]
  440303:	add    BYTE PTR [ebp-0x62fffffe],bl
  440309:	add    al,BYTE PTR [eax]
  44030b:	add    BYTE PTR [ebp-0x62fffffe],bl
  440311:	add    al,BYTE PTR [eax]
  440313:	add    BYTE PTR [ebp-0x62fffffe],bl
  440319:	add    al,BYTE PTR [eax]
  44031b:	add    BYTE PTR [ebp-0x62fffffe],bl
  440321:	add    al,BYTE PTR [eax]
  440323:	add    BYTE PTR [ebp-0x62fffffe],bl
  440329:	add    al,BYTE PTR [eax]
  44032b:	add    BYTE PTR [ebp-0x62fffffe],bl
  440331:	add    al,BYTE PTR [eax]
  440333:	add    BYTE PTR [ebp-0x62fffffe],bl
  440339:	add    al,BYTE PTR [eax]
  44033b:	add    BYTE PTR [ebp-0x62fffffe],bl
  440341:	add    al,BYTE PTR [eax]
  440343:	add    BYTE PTR [ebp-0x62fffffe],bl
  440349:	add    al,BYTE PTR [eax]
  44034b:	add    BYTE PTR [ebp-0x62fffffe],bl
  440351:	add    al,BYTE PTR [eax]
  440353:	add    BYTE PTR [ebp-0x62fffffe],bl
  440359:	add    al,BYTE PTR [eax]
  44035b:	add    BYTE PTR [ebp+0x2],bl
  440361:	add    BYTE PTR [ebp-0x62fffffe],bl
  440367:	add    al,BYTE PTR [eax]
  440369:	add    BYTE PTR [ebp-0x62fffffe],bl
  44036f:	add    al,BYTE PTR [eax]
  440371:	add    BYTE PTR [ebp-0x62fffffe],bl
  440377:	add    al,BYTE PTR [eax]
  440379:	add    BYTE PTR [ebp-0x62fffffe],bl
  44037f:	add    al,BYTE PTR [eax]
  440381:	add    BYTE PTR [ebp-0x62fffffe],bl
  440387:	add    al,BYTE PTR [eax]
  440389:	add    BYTE PTR [ebp-0x62fffffe],bl
  44038f:	add    al,BYTE PTR [eax]
  440391:	add    BYTE PTR [ebp-0x62fffffe],bl
  440397:	add    al,BYTE PTR [eax]
  440399:	add    BYTE PTR [ebp-0x62fffffe],bl
  44039f:	add    al,BYTE PTR [eax]
  4403a1:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403a7:	add    al,BYTE PTR [eax]
  4403a9:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403af:	add    al,BYTE PTR [eax]
  4403b1:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403b7:	add    al,BYTE PTR [eax]
  4403b9:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403bf:	add    al,BYTE PTR [eax]
  4403c1:	add    BYTE PTR [ebp+0x2],bl
  4403c7:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403cd:	add    al,BYTE PTR [eax]
  4403cf:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403d5:	add    al,BYTE PTR [eax]
  4403d7:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403dd:	add    al,BYTE PTR [eax]
  4403df:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403e5:	add    al,BYTE PTR [eax]
  4403e7:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403ed:	add    al,BYTE PTR [eax]
  4403ef:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403f5:	add    al,BYTE PTR [eax]
  4403f7:	add    BYTE PTR [ebp-0x62fffffe],bl
  4403fd:	add    al,BYTE PTR [eax]
  4403ff:	add    BYTE PTR [ebp-0x62fffffe],bl
  440405:	add    al,BYTE PTR [eax]
  440407:	add    BYTE PTR [ebp-0x62fffffe],bl
  44040d:	add    al,BYTE PTR [eax]
  44040f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440415:	add    al,BYTE PTR [eax]
  440417:	add    BYTE PTR [ebp-0x62fffffe],bl
  44041d:	add    al,BYTE PTR [eax]
  44041f:	add    BYTE PTR [ebp-0x62fffffe],bl
  440425:	add    al,BYTE PTR [eax]
  440427:	add    BYTE PTR [ebp+0x2],bl
  44042d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440433:	add    al,BYTE PTR [eax]
  440435:	add    BYTE PTR [ebp-0x62fffffe],bl
  44043b:	add    al,BYTE PTR [eax]
  44043d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440443:	add    al,BYTE PTR [eax]
  440445:	add    BYTE PTR [ebp-0x62fffffe],bl
  44044b:	add    al,BYTE PTR [eax]
  44044d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440453:	add    al,BYTE PTR [eax]
  440455:	add    BYTE PTR [ebp-0x62fffffe],bl
  44045b:	add    al,BYTE PTR [eax]
  44045d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440463:	add    al,BYTE PTR [eax]
  440465:	add    BYTE PTR [ebp-0x62fffffe],bl
  44046b:	add    al,BYTE PTR [eax]
  44046d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440473:	add    al,BYTE PTR [eax]
  440475:	add    BYTE PTR [ebp-0x62fffffe],bl
  44047b:	add    al,BYTE PTR [eax]
  44047d:	add    BYTE PTR [ebp-0x62fffffe],bl
  440483:	add    al,BYTE PTR [eax]
  440485:	add    BYTE PTR [ebp-0x62fffffe],bl
  44048b:	add    al,BYTE PTR [eax]
  44048d:	add    BYTE PTR [ebp+0x2],bl
  440493:	add    BYTE PTR [ebp-0x62fffffe],bl
  440499:	add    al,BYTE PTR [eax]
  44049b:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404a1:	add    al,BYTE PTR [eax]
  4404a3:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404a9:	add    al,BYTE PTR [eax]
  4404ab:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404b1:	add    al,BYTE PTR [eax]
  4404b3:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404b9:	add    al,BYTE PTR [eax]
  4404bb:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404c1:	add    al,BYTE PTR [eax]
  4404c3:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404c9:	add    al,BYTE PTR [eax]
  4404cb:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404d1:	add    al,BYTE PTR [eax]
  4404d3:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404d9:	add    al,BYTE PTR [eax]
  4404db:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404e1:	add    al,BYTE PTR [eax]
  4404e3:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404e9:	add    al,BYTE PTR [eax]
  4404eb:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404f1:	add    al,BYTE PTR [eax]
  4404f3:	add    BYTE PTR [ebp+0x2],bl
  4404f9:	add    BYTE PTR [ebp-0x62fffffe],bl
  4404ff:	add    al,BYTE PTR [eax]
  440501:	add    BYTE PTR [ebp-0x62fffffe],bl
  440507:	add    al,BYTE PTR [eax]
  440509:	add    BYTE PTR [ebp-0x62fffffe],bl
  44050f:	add    al,BYTE PTR [eax]
  440511:	add    BYTE PTR [eax],dl
  440513:	ds inc esp
  440515:	add    BYTE PTR [esi+edi*1],dl
  440518:	inc    esp
  440519:	add    BYTE PTR [eax],bl
  44051b:	ds inc esp
  44051d:	add    BYTE PTR [esi+edi*1],bl
  440520:	inc    esp
  440521:	add    BYTE PTR [eax],ah
  440523:	ds inc esp
  440525:	add    BYTE PTR [esi+edi*1],ah
  440528:	inc    esp
  440529:	add    BYTE PTR [eax],ch
  44052b:	ds inc esp
  44052d:	add    BYTE PTR [esi+edi*1],ch
  440530:	inc    esp
  440531:	add    BYTE PTR [eax],dh
  440533:	ds inc esp
  440535:	add    BYTE PTR [esi+edi*1],dh
  440538:	inc    esp
  440539:	add    BYTE PTR [eax],bh
  44053b:	ds inc esp
  44053d:	add    BYTE PTR [esi+edi*1],bh
  440540:	inc    esp
  440541:	add    BYTE PTR [eax+0x3e],al
  440544:	inc    esp
  440545:	add    al,bh
  440547:	cmp    eax,0x3e440044
  44054c:	inc    esp
  44054d:	add    BYTE PTR [eax+0x3e],cl
  440550:	inc    esp
  440551:	add    BYTE PTR [esi+edi*1+0x44],cl
  440555:	add    BYTE PTR [eax+0x3e],dl
  440558:	inc    esp
  440559:	add    BYTE PTR [esi+edi*1+0x44],dl
  44055d:	add    BYTE PTR [eax+0x3e],bl
  440560:	inc    esp
  440561:	add    BYTE PTR [esi+edi*1+0x44],bl
  440565:	add    BYTE PTR [eax+0x3e],ah
  440568:	inc    esp
  440569:	add    BYTE PTR [esi+edi*1+0x44],ah
  44056d:	add    BYTE PTR [eax+0x3e],ch
  440570:	inc    esp
  440571:	add    BYTE PTR [esi+edi*1+0x44],ch
  440575:	add    BYTE PTR [eax+0x3e],dh
  440578:	inc    esp
  440579:	add    BYTE PTR [esi+edi*1+0x44],dh
  44057d:	add    BYTE PTR [eax+0x3e],bh
  440580:	inc    esp
  440581:	add    BYTE PTR [esi+edi*1+0x44],bh
  440585:	add    BYTE PTR [eax-0x7bffbbc2],al
  44058b:	ds inc esp
  44058d:	add    BYTE PTR [eax-0x73ffbbc2],cl
  440593:	ds inc esp
  440595:	add    BYTE PTR [eax-0x6bffbbc2],dl
  44059b:	ds inc esp
  44059d:	add    BYTE PTR [eax-0x63ffbbc2],bl
  4405a3:	ds inc esp
  4405a5:	add    BYTE PTR [eax-0x5bffbbc2],ah
  4405ab:	ds inc esp
  4405ad:	add    BYTE PTR [esi+edi*1],dh
  4405b0:	inc    esp
  4405b1:	add    BYTE PTR [eax-0x53ffbbc2],ch
  4405b7:	ds inc esp
  4405b9:	add    BYTE PTR [eax-0x4bffbbc2],dh
  4405bf:	ds inc esp
  4405c1:	add    BYTE PTR [eax-0x43ffbbc2],bh
  4405c7:	ds inc esp
  4405c9:	add    al,al
  4405cb:	ds inc esp
  4405cd:	add    ah,al
  4405cf:	ds inc esp
  4405d1:	add    al,cl
  4405d3:	ds inc esp
  4405d5:	add    ah,cl
  4405d7:	ds inc esp
  4405d9:	add    al,dl
  4405db:	ds inc esp
  4405dd:	add    ah,dl
  4405df:	ds inc esp
  4405e1:	add    al,bl
  4405e3:	ds inc esp
  4405e5:	add    ah,bl
  4405e7:	ds inc esp
  4405e9:	add    al,ah
  4405eb:	ds inc esp
  4405ed:	add    ah,ah
  4405ef:	ds inc esp
  4405f1:	add    al,ch
  4405f3:	ds inc esp
  4405f5:	add    ah,ch
  4405f7:	ds inc esp
  4405f9:	add    al,dh
  4405fb:	ds inc esp
  4405fd:	add    ah,dh
  4405ff:	ds inc esp
  440601:	add    al,bh
  440603:	ds inc esp
  440605:	add    ah,bh
  440607:	ds inc esp
  440609:	add    BYTE PTR [eax],al
  44060b:	aas    
  44060c:	inc    esp
  44060d:	add    BYTE PTR [edi+edi*1],al
  440610:	inc    esp
  440611:	add    BYTE PTR [eax],cl
  440613:	aas    
  440614:	inc    esp
  440615:	add    BYTE PTR [edi+edi*1],cl
  440618:	inc    esp
  440619:	add    BYTE PTR [eax],dl
  44061b:	aas    
  44061c:	inc    esp
  44061d:	add    BYTE PTR [edi+edi*1],dl
  440620:	inc    esp
  440621:	add    BYTE PTR [eax],bl
  440623:	aas    
  440624:	inc    esp
  440625:	add    BYTE PTR [edi+edi*1],bl
  440628:	inc    esp
  440629:	add    BYTE PTR [eax],ah
  44062b:	aas    
  44062c:	inc    esp
  44062d:	add    BYTE PTR [edi+edi*1],ah
  440630:	inc    esp
  440631:	add    BYTE PTR [eax],ch
  440633:	aas    
  440634:	inc    esp
  440635:	add    BYTE PTR [edi+edi*1],ch
  440638:	inc    esp
  440639:	add    BYTE PTR [eax],dh
  44063b:	aas    
  44063c:	inc    esp
  44063d:	add    BYTE PTR [edi+edi*1],dh
  440640:	inc    esp
  440641:	add    BYTE PTR [eax],bh
  440643:	aas    
  440644:	inc    esp
  440645:	add    BYTE PTR [edi+edi*1],bh
  440648:	inc    esp
  440649:	add    BYTE PTR [eax+0x3f],al
  44064c:	inc    esp
  44064d:	add    BYTE PTR [edi+edi*1+0x44],al
  440651:	add    BYTE PTR [eax],bl
  440653:	aas    
  440654:	inc    esp
  440655:	add    BYTE PTR [eax+0x3f],cl
  440658:	inc    esp
  440659:	add    BYTE PTR [edi+edi*1+0x44],cl
  44065d:	add    BYTE PTR [eax+0x3f],dl
  440660:	inc    esp
  440661:	add    BYTE PTR [edi+edi*1+0x44],dl
  440665:	add    ah,bh
  440667:	cmp    eax,0x3f580044
  44066c:	inc    esp
  44066d:	add    BYTE PTR [edi+edi*1+0x44],bl
  440671:	add    BYTE PTR [eax+0x3f],ah
  440674:	inc    esp
  440675:	add    BYTE PTR [edi+edi*1+0x44],ah
  440679:	add    BYTE PTR [eax+0x3f],ch
  44067c:	inc    esp
  44067d:	add    BYTE PTR [edi+edi*1+0x44],ch
  440681:	add    al,ah
  440683:	ds inc esp
  440685:	add    BYTE PTR [eax+0x3f],dh
  440688:	inc    esp
  440689:	add    BYTE PTR [edi+edi*1+0x44],dh
  44068d:	add    BYTE PTR [eax+0x3f],bh
  440690:	inc    esp
  440691:	add    BYTE PTR [edi+edi*1+0x44],bh
  440695:	add    BYTE PTR [eax-0x7bffbbc1],al
  44069b:	aas    
  44069c:	inc    esp
  44069d:	add    BYTE PTR [eax+0x400443f],cl
  4406a3:	aas    
  4406a4:	inc    esp
  4406a5:	add    BYTE PTR [esi+edi*1+0x3f8c0044],dl
  4406ac:	inc    esp
  4406ad:	add    BYTE PTR [eax-0x6bffbbc1],dl
  4406b3:	aas    
  4406b4:	inc    esp
  4406b5:	add    BYTE PTR [eax-0x63ffbbc1],bl
  4406bb:	aas    
  4406bc:	inc    esp
  4406bd:	add    BYTE PTR [eax-0x5bffbbc1],ah
  4406c3:	aas    
  4406c4:	inc    esp
  4406c5:	add    BYTE PTR [eax-0x53ffbbc1],ch
  4406cb:	aas    
  4406cc:	inc    esp
  4406cd:	add    BYTE PTR [eax-0x4bffbbc1],dh
  4406d3:	aas    
  4406d4:	inc    esp
  4406d5:	add    BYTE PTR [eax+0x3f],al
  4406d8:	inc    esp
  4406d9:	add    BYTE PTR [eax-0x43ffbbc1],bh
  4406df:	aas    
  4406e0:	inc    esp
  4406e1:	add    al,al
  4406e3:	aas    
  4406e4:	inc    esp
  4406e5:	add    ah,al
  4406e7:	aas    
  4406e8:	inc    esp
  4406e9:	add    al,cl
  4406eb:	aas    
  4406ec:	inc    esp
  4406ed:	add    BYTE PTR [edi+edi*1+0x44],dl
  4406f1:	add    ah,cl
  4406f3:	aas    
  4406f4:	inc    esp
  4406f5:	add    al,dl
  4406f7:	aas    
  4406f8:	inc    esp
  4406f9:	add    ah,dl
  4406fb:	aas    
  4406fc:	inc    esp
  4406fd:	add    ah,dl
  4406ff:	ds inc esp
  440701:	add    al,bl
  440703:	aas    
  440704:	inc    esp
  440705:	add    ah,bl
  440707:	aas    
  440708:	inc    esp
  440709:	add    BYTE PTR [eax],bh
  44070b:	aas    
  44070c:	inc    esp
  44070d:	add    al,ah
  44070f:	aas    
  440710:	inc    esp
  440711:	add    ah,ah
  440713:	aas    
  440714:	inc    esp
  440715:	add    BYTE PTR [edi+edi*1+0x3fe80044],al
  44071c:	inc    esp
  44071d:	add    ah,ch
  44071f:	aas    
  440720:	inc    esp
  440721:	add    al,dh
  440723:	aas    
  440724:	inc    esp
  440725:	add    ah,dh
  440727:	aas    
  440728:	inc    esp
  440729:	add    al,bh
  44072b:	aas    
  44072c:	inc    esp
  44072d:	add    ah,bh
  44072f:	aas    
  440730:	inc    esp
  440731:	add    BYTE PTR [eax],al
  440733:	inc    eax
  440734:	inc    esp
  440735:	add    BYTE PTR [eax+eax*2],al
  440738:	inc    esp
  440739:	add    BYTE PTR [eax],cl
  44073b:	inc    eax
  44073c:	inc    esp
  44073d:	add    BYTE PTR [eax+eax*2],cl
  440740:	inc    esp
  440741:	add    BYTE PTR [eax],dl
  440743:	inc    eax
  440744:	inc    esp
  440745:	add    BYTE PTR [eax+eax*2],dl
  440748:	inc    esp
  440749:	add    ah,bh
  44074b:	aas    
  44074c:	inc    esp
  44074d:	add    BYTE PTR [eax],bl
  44074f:	inc    eax
  440750:	inc    esp
  440751:	add    BYTE PTR [eax+eax*2],bl
  440754:	inc    esp
  440755:	add    BYTE PTR [eax],ah
  440757:	inc    eax
  440758:	inc    esp
  440759:	add    BYTE PTR [eax+eax*2],ah
  44075c:	inc    esp
  44075d:	add    BYTE PTR [eax],ch
  44075f:	inc    eax
  440760:	inc    esp
  440761:	add    BYTE PTR [eax],bl
  440763:	ds inc esp
  440765:	add    BYTE PTR [eax+eax*2],ch
  440768:	inc    esp
  440769:	add    al,bl
  44076b:	ds inc esp
  44076d:	add    BYTE PTR [eax],dh
  44076f:	inc    eax
  440770:	inc    esp
  440771:	add    BYTE PTR [eax+eax*2],dh
  440774:	inc    esp
  440775:	add    BYTE PTR [eax],bh
  440777:	inc    eax
  440778:	inc    esp
  440779:	add    BYTE PTR [eax+eax*2],bh
  44077c:	inc    esp
  44077d:	add    BYTE PTR [eax+0x40],al
  440780:	inc    esp
  440781:	add    BYTE PTR [eax+eax*2],ah
  440784:	inc    esp
  440785:	add    BYTE PTR [eax+eax*2+0x44],al
  440789:	add    BYTE PTR [eax+0x40],cl
  44078c:	inc    esp
  44078d:	add    BYTE PTR [eax+eax*2+0x44],cl
  440791:	add    BYTE PTR [eax+0x40],dl
  440794:	inc    esp
  440795:	add    BYTE PTR [eax+eax*2+0x44],dl
  440799:	add    BYTE PTR [eax+0x40],bl
  44079c:	inc    esp
  44079d:	add    BYTE PTR [eax+eax*2+0x44],bl
  4407a1:	add    ah,al
  4407a3:	ds inc esp
  4407a5:	add    BYTE PTR [eax+0x6000443f],dl
  4407ab:	inc    eax
  4407ac:	inc    esp
  4407ad:	add    BYTE PTR [eax+eax*2+0x44],ah
  4407b1:	add    BYTE PTR [eax+0x40],ch
  4407b4:	inc    esp
  4407b5:	add    BYTE PTR [eax+eax*2+0x44],ch
  4407b9:	add    BYTE PTR [eax],cl
  4407bb:	ds inc esp
  4407bd:	add    BYTE PTR [eax+0x40],dh
  4407c0:	inc    esp
  4407c1:	add    BYTE PTR [eax+eax*2+0x44],dh
  4407c5:	add    BYTE PTR [eax+0x40],bh
  4407c8:	inc    esp
  4407c9:	add    BYTE PTR [esi+edi*1],al
  4407cc:	inc    esp
  4407cd:	add    BYTE PTR [eax+eax*2+0x44],bh
  4407d1:	add    BYTE PTR [eax-0x43ffbbc0],al
  4407d7:	ds inc esp
  4407d9:	add    BYTE PTR [eax+eax*2+0x40880044],al
  4407e0:	inc    esp
  4407e1:	add    ah,bh
  4407e3:	ds inc esp
  4407e5:	add    BYTE PTR [eax+eax*2+0x40900044],cl
  4407ec:	inc    esp
  4407ed:	add    BYTE PTR [eax+eax*2+0x3ef80044],dl
  4407f4:	inc    esp
  4407f5:	add    BYTE PTR [eax],cl
  4407f7:	ds inc esp
  4407f9:	add    BYTE PTR [eax+0x3f],ch
  4407fc:	inc    esp
  4407fd:	add    BYTE PTR [eax+0x2c004440],bl
  440803:	inc    eax
  440804:	inc    esp
  440805:	add    BYTE PTR [eax],bl
  440807:	inc    eax
  440808:	inc    esp
  440809:	add    BYTE PTR [eax+eax*2+0x40a00044],bl
  440810:	inc    esp
  440811:	add    BYTE PTR [eax+eax*2+0x3ea40044],ah
  440818:	inc    esp
  440819:	add    BYTE PTR [eax-0x53ffbbc0],ch
  44081f:	inc    eax
  440820:	inc    esp
  440821:	add    BYTE PTR [eax-0x4bffbbc0],dh
  440827:	inc    eax
  440828:	inc    esp
  440829:	add    BYTE PTR [eax+eax*2+0x44],dl
  44082d:	add    BYTE PTR [eax-0x1bffbbc0],bh
  440833:	inc    eax
  440834:	inc    esp
  440835:	add    al,ch
  440837:	inc    eax
  440838:	inc    esp
  440839:	add    ah,ch
  44083b:	inc    eax
  44083c:	inc    esp
  44083d:	add    al,dh
  44083f:	inc    eax
  440840:	inc    esp
  440841:	add    ah,ah
  440843:	inc    eax
  440844:	inc    esp
  440845:	add    ah,dh
  440847:	inc    eax
  440848:	inc    esp
  440849:	add    al,bh
  44084b:	inc    eax
  44084c:	inc    esp
  44084d:	add    ah,bh
  44084f:	inc    eax
  440850:	inc    esp
  440851:	add    BYTE PTR [eax],al
  440853:	inc    ecx
  440854:	inc    esp
  440855:	add    BYTE PTR [ecx+eax*2],al
  440858:	inc    esp
  440859:	add    BYTE PTR [eax],cl
  44085b:	inc    ecx
  44085c:	inc    esp
  44085d:	add    BYTE PTR [ecx+eax*2],cl
  440860:	inc    esp
  440861:	add    BYTE PTR [eax],dl
  440863:	inc    ecx
  440864:	inc    esp
  440865:	add    BYTE PTR [ecx+eax*2],dl
  440868:	inc    esp
  440869:	add    BYTE PTR [eax],bl
  44086b:	inc    ecx
  44086c:	inc    esp
  44086d:	add    BYTE PTR [ecx+eax*2],bl
  440870:	inc    esp
  440871:	add    BYTE PTR [eax],ah
  440873:	inc    ecx
  440874:	inc    esp
  440875:	add    BYTE PTR [ecx+eax*2],ah
  440878:	inc    esp
  440879:	add    BYTE PTR [eax],ch
  44087b:	inc    ecx
  44087c:	inc    esp
  44087d:	add    BYTE PTR [ecx+eax*2],ch
  440880:	inc    esp
  440881:	add    BYTE PTR [eax],dh
  440883:	inc    ecx
  440884:	inc    esp
  440885:	add    BYTE PTR [ecx+eax*2],dh
  440888:	inc    esp
  440889:	add    BYTE PTR [eax],bh
  44088b:	inc    ecx
  44088c:	inc    esp
  44088d:	add    BYTE PTR [ecx+eax*2],bh
  440890:	inc    esp
  440891:	add    BYTE PTR [eax+0x41],al
  440894:	inc    esp
  440895:	add    BYTE PTR [ecx+eax*2+0x44],al
  440899:	add    BYTE PTR [eax+0x41],cl
  44089c:	inc    esp
  44089d:	add    BYTE PTR [ecx+eax*2+0x44],cl
  4408a1:	add    BYTE PTR [eax+0x41],dl
  4408a4:	inc    esp
  4408a5:	add    BYTE PTR [ecx+eax*2+0x44],dl
  4408a9:	add    BYTE PTR [eax+0x41],bl
  4408ac:	inc    esp
  4408ad:	add    BYTE PTR [ecx+eax*2+0x44],bl
  4408b1:	add    BYTE PTR [eax+0x41],ah
  4408b4:	inc    esp
  4408b5:	add    BYTE PTR [ecx+eax*2+0x44],ah
  4408b9:	add    BYTE PTR [eax+0x41],ch
  4408bc:	inc    esp
  4408bd:	add    BYTE PTR [eax],al
  4408bf:	inc    ecx
  4408c0:	inc    esp
  4408c1:	add    BYTE PTR [ecx+eax*2+0x44],ch
  4408c5:	add    BYTE PTR [eax+0x41],dh
  4408c8:	inc    esp
  4408c9:	add    BYTE PTR [eax],dl
  4408cb:	inc    ecx
  4408cc:	inc    esp
  4408cd:	add    BYTE PTR [ecx+eax*2+0x44],dh
  4408d1:	add    BYTE PTR [eax+0x41],bh
  4408d4:	inc    esp
  4408d5:	add    BYTE PTR [ecx+eax*2+0x44],bh
  4408d9:	add    BYTE PTR [eax-0x7bffbbbf],al
  4408df:	inc    ecx
  4408e0:	inc    esp
  4408e1:	add    BYTE PTR [eax-0x73ffbbbf],cl
  4408e7:	inc    ecx
  4408e8:	inc    esp
  4408e9:	add    BYTE PTR [eax-0x6bffbbbf],dl
  4408ef:	inc    ecx
  4408f0:	inc    esp
  4408f1:	add    BYTE PTR [eax-0x63ffbbbf],bl
  4408f7:	inc    ecx
  4408f8:	inc    esp
  4408f9:	add    BYTE PTR [eax-0x5bffbbbf],ah
  4408ff:	inc    ecx
  440900:	inc    esp
  440901:	add    BYTE PTR [eax+0x18004441],ch
  440907:	inc    ecx
  440908:	inc    esp
  440909:	add    BYTE PTR [ecx+eax*2+0x41b00044],ch
  440910:	inc    esp
  440911:	add    BYTE PTR [ecx+eax*2+0x41b80044],dh
  440918:	inc    esp
  440919:	add    BYTE PTR [ecx+eax*2+0x44],ah
  44091d:	add    al,dl
  44091f:	inc    eax
  440920:	inc    esp
  440921:	add    BYTE PTR [ecx+eax*2+0x41c00044],bh
  440928:	inc    esp
  440929:	add    ah,al
  44092b:	inc    ecx
  44092c:	inc    esp
  44092d:	add    BYTE PTR [ecx+eax*2],al
  440930:	inc    esp
  440931:	add    al,cl
  440933:	inc    ecx
  440934:	inc    esp
  440935:	add    ah,cl
  440937:	inc    ecx
  440938:	inc    esp
  440939:	add    al,cl
  44093b:	inc    eax
  44093c:	inc    esp
  44093d:	add    al,dl
  44093f:	inc    ecx
  440940:	inc    esp
  440941:	add    ah,dl
  440943:	inc    ecx
  440944:	inc    esp
  440945:	add    ah,ah
  440947:	inc    eax
  440948:	inc    esp
  440949:	add    al,bl
  44094b:	inc    ecx
  44094c:	inc    esp
  44094d:	add    BYTE PTR [ecx+eax*2+0x44],ch
  440951:	add    BYTE PTR [ecx+eax*2+0x44],dl
  440955:	add    BYTE PTR [eax-0x23ffbbbf],cl
  44095b:	inc    ecx
  44095c:	inc    esp
  44095d:	add    BYTE PTR [eax],dl
  44095f:	inc    ecx
  440960:	inc    esp
  440961:	add    al,ah
  440963:	inc    ecx
  440964:	inc    esp
  440965:	add    BYTE PTR [ecx+eax*2+0x41e40044],ah
  44096c:	inc    esp
  44096d:	add    al,ch
  44096f:	inc    ecx
  440970:	inc    esp
  440971:	add    ah,ch
  440973:	inc    ecx
  440974:	inc    esp
  440975:	add    BYTE PTR [ecx+eax*2+0x416c0044],ah
  44097c:	inc    esp
  44097d:	add    al,dh
  44097f:	inc    ecx
  440980:	inc    esp
  440981:	add    ah,dh
  440983:	inc    ecx
  440984:	inc    esp
  440985:	add    al,bh
  440987:	inc    ecx
  440988:	inc    esp
  440989:	add    ah,bh
  44098b:	inc    ecx
  44098c:	inc    esp
  44098d:	add    BYTE PTR [eax],al
  44098f:	inc    edx
  440990:	inc    esp
  440991:	add    BYTE PTR [edx+eax*2],al
  440994:	inc    esp
  440995:	add    BYTE PTR [eax],cl
  440997:	inc    edx
  440998:	inc    esp
  440999:	add    BYTE PTR [edx+eax*2],cl
  44099c:	inc    esp
  44099d:	add    BYTE PTR [ecx+eax*2+0x40cc0044],bl
  4409a4:	inc    esp
  4409a5:	add    BYTE PTR [eax],dl
  4409a7:	inc    edx
  4409a8:	inc    esp
  4409a9:	add    BYTE PTR [edx+eax*2],dl
  4409ac:	inc    esp
  4409ad:	add    BYTE PTR [eax],bl
  4409af:	inc    edx
  4409b0:	inc    esp
  4409b1:	add    BYTE PTR [edx+eax*2],bl
  4409b4:	inc    esp
  4409b5:	add    BYTE PTR [eax],ah
  4409b7:	inc    edx
  4409b8:	inc    esp
  4409b9:	add    BYTE PTR [edx+eax*2],ah
  4409bc:	inc    esp
  4409bd:	add    ah,dh
  4409bf:	inc    ecx
  4409c0:	inc    esp
  4409c1:	add    BYTE PTR [eax],ch
  4409c3:	inc    edx
  4409c4:	inc    esp
  4409c5:	add    BYTE PTR [edx+eax*2],ch
  4409c8:	inc    esp
  4409c9:	add    BYTE PTR [eax],dh
  4409cb:	inc    edx
  4409cc:	inc    esp
  4409cd:	add    BYTE PTR [edx+eax*2],dh
  4409d0:	inc    esp
  4409d1:	add    BYTE PTR [eax],bh
  4409d3:	inc    edx
  4409d4:	inc    esp
  4409d5:	add    BYTE PTR [edx+eax*2],bh
  4409d8:	inc    esp
  4409d9:	add    BYTE PTR [eax+0x42],al
  4409dc:	inc    esp
  4409dd:	add    BYTE PTR [edx+eax*2+0x44],al
  4409e1:	add    BYTE PTR [ecx+eax*2+0x42480044],cl
  4409e8:	inc    esp
  4409e9:	add    BYTE PTR [edx+eax*2+0x44],cl
  4409ed:	add    BYTE PTR [eax+0x42],dl
  4409f0:	inc    esp
  4409f1:	add    BYTE PTR [edx+eax*2+0x44],dl
  4409f5:	add    BYTE PTR [eax+0x41],bh
  4409f8:	inc    esp
  4409f9:	add    BYTE PTR [eax+0x42],bl
  4409fc:	inc    esp
  4409fd:	add    BYTE PTR [edx+eax*2+0x44],bl
  440a01:	add    BYTE PTR [eax+0x42],ah
  440a04:	inc    esp
  440a05:	add    BYTE PTR [eax+0x34004441],ch
  440a0b:	inc    ecx
  440a0c:	inc    esp
  440a0d:	add    BYTE PTR [eax+0x42],cl
  440a10:	inc    esp
  440a11:	add    BYTE PTR [edx+eax*2+0x44],ah
  440a15:	add    BYTE PTR [eax+0x42],ch
  440a18:	inc    esp
  440a19:	add    BYTE PTR [edx+eax*2+0x44],ch
  440a1d:	add    BYTE PTR [eax+0x42],dh
  440a20:	inc    esp
  440a21:	add    BYTE PTR [edx+eax*2+0x44],dh
  440a25:	add    BYTE PTR [eax+0x42],bh
  440a28:	inc    esp
  440a29:	add    BYTE PTR [eax],ah
  440a2b:	inc    edx
  440a2c:	inc    esp
  440a2d:	add    BYTE PTR [edx+eax*2+0x44],bh
  440a31:	add    BYTE PTR [eax-0x7bffbbbe],al
  440a37:	inc    edx
  440a38:	inc    esp
  440a39:	add    BYTE PTR [eax-0x73ffbbbe],cl
  440a3f:	inc    edx
  440a40:	inc    esp
  440a41:	add    BYTE PTR [eax-0x6bffbbbe],dl
  440a47:	inc    edx
  440a48:	inc    esp
  440a49:	add    BYTE PTR [eax-0x63ffbbbe],bl
  440a4f:	inc    edx
  440a50:	inc    esp
  440a51:	add    BYTE PTR [eax-0x5bffbbbe],ah
  440a57:	inc    edx
  440a58:	inc    esp
  440a59:	add    BYTE PTR [eax-0x53ffbbbe],ch
  440a5f:	inc    edx
  440a60:	inc    esp
  440a61:	add    BYTE PTR [ecx+eax*2],dh
  440a64:	inc    esp
  440a65:	add    BYTE PTR [eax-0x4fffbbbe],cl
  440a6b:	inc    edx
  440a6c:	inc    esp
  440a6d:	add    BYTE PTR [edx+eax*2+0x42b80044],dh
  440a74:	inc    esp
  440a75:	add    BYTE PTR [edx+eax*2+0x42c00044],bh
  440a7c:	inc    esp
  440a7d:	add    BYTE PTR [ecx+eax*2],bh
  440a80:	inc    esp
  440a81:	add    ah,al
  440a83:	inc    edx
  440a84:	inc    esp
  440a85:	add    al,cl
  440a87:	inc    edx
  440a88:	inc    esp
  440a89:	add    ah,cl
  440a8b:	inc    edx
  440a8c:	inc    esp
  440a8d:	add    al,dl
  440a8f:	inc    edx
  440a90:	inc    esp
  440a91:	add    ah,dl
  440a93:	inc    edx
  440a94:	inc    esp
  440a95:	add    ah,al
  440a97:	inc    eax
  440a98:	inc    esp
  440a99:	add    al,bl
  440a9b:	inc    edx
  440a9c:	inc    esp
  440a9d:	add    ah,bl
  440a9f:	inc    edx
  440aa0:	inc    esp
  440aa1:	add    al,ah
  440aa3:	inc    edx
  440aa4:	inc    esp
  440aa5:	add    BYTE PTR [eax+0x42],ch
  440aa8:	inc    esp
  440aa9:	add    ah,ah
  440aab:	inc    edx
  440aac:	inc    esp
  440aad:	add    BYTE PTR [edx+eax*2+0x44],bh
  440ab1:	add    al,ch
  440ab3:	inc    edx
  440ab4:	inc    esp
  440ab5:	add    ah,ch
  440ab7:	inc    edx
  440ab8:	inc    esp
  440ab9:	add    al,dh
  440abb:	inc    edx
  440abc:	inc    esp
  440abd:	add    ah,dh
  440abf:	inc    edx
  440ac0:	inc    esp
  440ac1:	add    al,bh
  440ac3:	inc    edx
  440ac4:	inc    esp
  440ac5:	add    BYTE PTR [edx+eax*2],ch
  440ac8:	inc    esp
  440ac9:	add    ah,dh
  440acb:	inc    eax
  440acc:	inc    esp
  440acd:	add    BYTE PTR [eax+0x42],al
  440ad0:	inc    esp
  440ad1:	add    ah,bh
  440ad3:	inc    edx
  440ad4:	inc    esp
  440ad5:	add    BYTE PTR [eax],al
  440ad7:	inc    ebx
  440ad8:	inc    esp
  440ad9:	add    BYTE PTR [ebx+eax*2],al
  440adc:	inc    esp
  440add:	add    BYTE PTR [edx+eax*2],bh
  440ae0:	inc    esp
  440ae1:	add    BYTE PTR [eax],cl
  440ae3:	inc    ebx
  440ae4:	inc    esp
  440ae5:	add    BYTE PTR [eax+0x42],ah
  440ae8:	inc    esp
  440ae9:	add    BYTE PTR [ebx+eax*2],cl
  440aec:	inc    esp
  440aed:	add    BYTE PTR [eax],dl
  440aef:	inc    ebx
  440af0:	inc    esp
  440af1:	add    BYTE PTR [ebx+eax*2],dl
  440af4:	inc    esp
  440af5:	add    BYTE PTR [eax],bl
  440af7:	inc    ebx
  440af8:	inc    esp
  440af9:	add    BYTE PTR [ebx+eax*2],bl
  440afc:	inc    esp
  440afd:	add    BYTE PTR [eax],ah
  440aff:	inc    ebx
  440b00:	inc    esp
  440b01:	add    BYTE PTR [ebx+eax*2],ah
  440b04:	inc    esp
  440b05:	add    BYTE PTR [eax],ch
  440b07:	inc    ebx
  440b08:	inc    esp
  440b09:	add    BYTE PTR [ebx+eax*2],ch
  440b0c:	inc    esp
  440b0d:	add    BYTE PTR [eax],dh
  440b0f:	inc    ebx
  440b10:	inc    esp
  440b11:	add    BYTE PTR [ebx+eax*2],dh
  440b14:	inc    esp
  440b15:	add    BYTE PTR [eax],bh
  440b17:	inc    ebx
  440b18:	inc    esp
  440b19:	add    BYTE PTR [ebx+eax*2],bh
  440b1c:	inc    esp
  440b1d:	add    BYTE PTR [eax+0x43],al
  440b20:	inc    esp
  440b21:	add    BYTE PTR [ecx+eax*2],bl
  440b24:	inc    esp
  440b25:	add    BYTE PTR [ebx+eax*2+0x44],al
  440b29:	add    BYTE PTR [eax+0x43],cl
  440b2c:	inc    esp
  440b2d:	add    BYTE PTR [ebx+eax*2+0x44],cl
  440b31:	add    BYTE PTR [eax+0x43],dl
  440b34:	inc    esp
  440b35:	add    BYTE PTR [ebx+eax*2+0x44],dl
  440b39:	add    BYTE PTR [eax+0x43],bl
  440b3c:	inc    esp
  440b3d:	add    BYTE PTR [eax-0x33ffbbbf],dh
  440b43:	inc    ecx
  440b44:	inc    esp
  440b45:	add    BYTE PTR [ebx+eax*2+0x44],bl
  440b49:	add    BYTE PTR [eax+0x43],ah
  440b4c:	inc    esp
  440b4d:	add    BYTE PTR [ebx+eax*2+0x44],ah
  440b51:	add    al,bh
  440b53:	inc    ebx
  440b54:	inc    esp
  440b55:	add    ah,bh
  440b57:	inc    ebx
  440b58:	inc    esp
  440b59:	add    BYTE PTR [eax],al
  440b5b:	inc    esp
  440b5c:	inc    esp
  440b5d:	add    BYTE PTR [esp+eax*2],al
  440b60:	inc    esp
  440b61:	add    BYTE PTR [eax],cl
  440b63:	inc    esp
  440b64:	inc    esp
  440b65:	add    BYTE PTR [esp+eax*2],cl
  440b68:	inc    esp
  440b69:	add    BYTE PTR [eax],dl
  440b6b:	inc    esp
  440b6c:	inc    esp
  440b6d:	add    BYTE PTR [esp+eax*2],dl
  440b70:	inc    esp
  440b71:	add    BYTE PTR [eax],bl
  440b73:	inc    esp
  440b74:	inc    esp
  440b75:	add    BYTE PTR [esp+eax*2],bl
  440b78:	inc    esp
  440b79:	add    BYTE PTR [eax],ah
  440b7b:	inc    esp
  440b7c:	inc    esp
  440b7d:	add    BYTE PTR [esp+eax*2],ah
  440b80:	inc    esp
  440b81:	add    BYTE PTR [eax],ch
  440b83:	inc    esp
  440b84:	inc    esp
  440b85:	add    BYTE PTR [esp+eax*2],ch
  440b88:	inc    esp
  440b89:	add    BYTE PTR [eax],dh
  440b8b:	inc    esp
  440b8c:	inc    esp
  440b8d:	add    BYTE PTR [esp+eax*2],dh
  440b90:	inc    esp
  440b91:	add    BYTE PTR [eax],bh
  440b93:	inc    esp
  440b94:	inc    esp
  440b95:	add    BYTE PTR [esp+eax*2],bh
  440b98:	inc    esp
  440b99:	add    BYTE PTR [eax+0x44],al
  440b9c:	inc    esp
  440b9d:	add    BYTE PTR [esp+eax*2+0x44],al
  440ba1:	add    BYTE PTR [eax+0x44],cl
  440ba4:	inc    esp
  440ba5:	add    BYTE PTR [esp+eax*2+0x44],cl
  440ba9:	add    BYTE PTR [eax+0x44],dl
  440bac:	inc    esp
  440bad:	add    BYTE PTR [esp+eax*2+0x44],dl
  440bb1:	add    BYTE PTR [eax+0x44],bl
  440bb4:	inc    esp
  440bb5:	add    BYTE PTR [esp+eax*2+0x44],bl
  440bb9:	add    BYTE PTR [esp+eax*2],ah
  440bbc:	inc    esp
  440bbd:	add    BYTE PTR [eax+0x44],ah
  440bc0:	inc    esp
  440bc1:	add    BYTE PTR [esp+eax*2+0x44],ah
  440bc5:	add    BYTE PTR [eax+0x44],ch
  440bc8:	inc    esp
  440bc9:	add    BYTE PTR [esp+eax*2+0x44],ch
  440bcd:	add    BYTE PTR [eax+0x44],dh
  440bd0:	inc    esp
  440bd1:	add    BYTE PTR [esp+eax*2+0x44],dh
  440bd5:	add    BYTE PTR [esp+eax*2],al
  440bd8:	inc    esp
  440bd9:	add    BYTE PTR [eax+0x44],bh
  440bdc:	inc    esp
  440bdd:	add    BYTE PTR [esp+eax*2+0x44],bh
  440be1:	add    BYTE PTR [eax+0x44],bh
  440be4:	inc    esp
  440be5:	add    BYTE PTR [eax-0x7bffbbbc],al
  440beb:	inc    esp
  440bec:	inc    esp
  440bed:	add    BYTE PTR [eax-0x73ffbbbc],cl
  440bf3:	inc    esp
  440bf4:	inc    esp
  440bf5:	add    BYTE PTR [eax-0x6bffbbbc],dl
  440bfb:	inc    esp
  440bfc:	inc    esp
  440bfd:	add    BYTE PTR [eax-0x63ffbbbc],bl
  440c03:	inc    esp
  440c04:	inc    esp
  440c05:	add    BYTE PTR [esp+eax*2+0x44],dh
  440c09:	add    BYTE PTR [eax+0x44004444],ah
  440c0f:	inc    esp
  440c10:	inc    esp
  440c11:	add    BYTE PTR [esp+eax*2+0x44a80044],ah
  440c18:	inc    esp
  440c19:	add    BYTE PTR [esp+eax*2+0x44b00044],ch
  440c20:	inc    esp
  440c21:	add    BYTE PTR [esp+eax*2+0x44b80044],dh
  440c28:	inc    esp
  440c29:	add    BYTE PTR [esp+eax*2+0x44c00044],bh
  440c30:	inc    esp
  440c31:	add    ah,al
  440c33:	inc    esp
  440c34:	inc    esp
  440c35:	add    al,cl
  440c37:	inc    esp
  440c38:	inc    esp
  440c39:	add    ah,cl
  440c3b:	inc    esp
  440c3c:	inc    esp
  440c3d:	add    al,dl
  440c3f:	inc    esp
  440c40:	inc    esp
  440c41:	add    BYTE PTR [esp+eax*2+0x44],dl
  440c45:	add    ah,dl
  440c47:	inc    esp
  440c48:	inc    esp
  440c49:	add    al,bl
  440c4b:	inc    esp
  440c4c:	inc    esp
  440c4d:	add    ah,bl
  440c4f:	inc    esp
  440c50:	inc    esp
  440c51:	add    al,ah
  440c53:	inc    esp
  440c54:	inc    esp
  440c55:	add    ah,ah
  440c57:	inc    esp
  440c58:	inc    esp
  440c59:	add    al,ch
  440c5b:	inc    esp
  440c5c:	inc    esp
  440c5d:	add    BYTE PTR [eax+0x44],bh
  440c60:	inc    esp
  440c61:	add    ah,ch
  440c63:	inc    esp
  440c64:	inc    esp
  440c65:	add    al,dh
  440c67:	inc    esp
  440c68:	inc    esp
  440c69:	add    BYTE PTR [eax+0x44],bl
  440c6c:	inc    esp
  440c6d:	add    BYTE PTR [esp+eax*2+0x44],al
  440c71:	add    BYTE PTR [esp+eax*2],ch
  440c74:	inc    esp
  440c75:	add    ah,dh
  440c77:	inc    esp
  440c78:	inc    esp
  440c79:	add    BYTE PTR [esp+eax*2+0x44],bl
  440c7d:	add    al,bh
  440c7f:	inc    esp
  440c80:	inc    esp
  440c81:	add    BYTE PTR [esp+eax*2+0x44],ch
  440c85:	add    ah,bh
  440c87:	inc    esp
  440c88:	inc    esp
  440c89:	add    BYTE PTR [eax],al
  440c8b:	inc    ebp
  440c8c:	inc    esp
  440c8d:	add    BYTE PTR [eax*2+0x45080044],al
  440c94:	inc    esp
  440c95:	add    BYTE PTR [eax*2+0x45100044],cl
  440c9c:	inc    esp
  440c9d:	add    ah,ah
  440c9f:	inc    esp
  440ca0:	inc    esp
  440ca1:	add    BYTE PTR [eax*2+0x441c0044],dl
  440ca8:	inc    esp
  440ca9:	add    BYTE PTR [eax*2+0x45180044],cl
  440cb0:	inc    esp
  440cb1:	add    BYTE PTR [eax*2+0x44100044],bl
  440cb8:	inc    esp
  440cb9:	add    BYTE PTR [eax],ah
  440cbb:	inc    ebp
  440cbc:	inc    esp
  440cbd:	add    BYTE PTR [eax*2+0x45280044],ah
  440cc4:	inc    esp
  440cc5:	add    BYTE PTR [esp+eax*2],ah
  440cc8:	inc    esp
  440cc9:	add    BYTE PTR [eax*2+0x45300044],ch
  440cd0:	inc    esp
  440cd1:	add    al,ch
  440cd3:	inc    esp
  440cd4:	inc    esp
  440cd5:	add    BYTE PTR [eax-0x6bffbbbc],bl
  440cdb:	inc    esp
  440cdc:	inc    esp
  440cdd:	add    BYTE PTR [eax*2+0x45380044],dh
  440ce4:	inc    esp
  440ce5:	add    BYTE PTR [eax*2+0x45000044],bh
  440cec:	inc    esp
  440ced:	add    ah,bh
  440cef:	inc    esp
  440cf0:	inc    esp
  440cf1:	add    BYTE PTR [eax+0x45],al
  440cf4:	inc    esp
  440cf5:	add    BYTE PTR [ebp+eax*2+0x44],al
  440cf9:	add    BYTE PTR [eax+0x45],cl
  440cfc:	inc    esp
  440cfd:	add    BYTE PTR [esp+eax*2+0x454c0044],cl
  440d04:	inc    esp
  440d05:	add    BYTE PTR [eax*2+0x45500044],bh
  440d0c:	inc    esp
  440d0d:	add    BYTE PTR [esp+eax*2+0x44],al
  440d11:	add    BYTE PTR [esp+eax*2],ch
  440d14:	inc    esp
  440d15:	add    BYTE PTR [ebp+eax*2+0x44],dl
  440d19:	add    BYTE PTR [eax],bl
  440d1b:	inc    ebp
  440d1c:	inc    esp
  440d1d:	add    BYTE PTR [esp+eax*2+0x44],ah
  440d21:	add    BYTE PTR [eax+0x45],bl
  440d24:	inc    esp
  440d25:	add    BYTE PTR [eax+0x44],cl
  440d28:	inc    esp
  440d29:	add    BYTE PTR [ebp+eax*2+0x44],bl
  440d2d:	add    BYTE PTR [eax+0x45],ah
  440d30:	inc    esp
  440d31:	add    BYTE PTR [ebp+eax*2+0x44],ah
  440d35:	add    BYTE PTR [eax+0x45],ch
  440d38:	inc    esp
  440d39:	add    BYTE PTR [ebp+eax*2+0x44],ch
  440d3d:	add    BYTE PTR [eax+0x45],dh
  440d40:	inc    esp
  440d41:	add    BYTE PTR [ebp+eax*2+0x44],dh
  440d45:	add    BYTE PTR [eax+0x45],bh
  440d48:	inc    esp
  440d49:	add    BYTE PTR [ebp+eax*2+0x44],bh
  440d4d:	add    BYTE PTR [eax-0x7bffbbbb],al
  440d53:	inc    ebp
  440d54:	inc    esp
  440d55:	add    BYTE PTR [eax+0x44],dl
  440d58:	inc    esp
  440d59:	add    BYTE PTR [eax-0x73ffbbbb],cl
  440d5f:	inc    ebp
  440d60:	inc    esp
  440d61:	add    BYTE PTR [eax-0x6fffbbbc],cl
  440d67:	inc    ebp
  440d68:	inc    esp
  440d69:	add    BYTE PTR [ebp+eax*2+0x45980044],dl
  440d70:	inc    esp
  440d71:	add    BYTE PTR [ebp+eax*2+0x45a00044],bl
  440d78:	inc    esp
  440d79:	add    BYTE PTR [ebp+eax*2+0x45a80044],ah
  440d80:	inc    esp
  440d81:	add    BYTE PTR [eax],al
  440d83:	inc    ebp
  440d84:	inc    esp
  440d85:	add    BYTE PTR [eax+0x45],dl
  440d88:	inc    esp
  440d89:	add    BYTE PTR [ebp+eax*2+0x45b00044],ch
  440d90:	inc    esp
  440d91:	add    BYTE PTR [esp+eax*2],ah
  440d94:	inc    esp
  440d95:	add    BYTE PTR [eax+0x45],dl
  440d98:	inc    esp
  440d99:	add    BYTE PTR [ebp+eax*2+0x44],dh
  440d9d:	add    BYTE PTR [esp+eax*2+0x44],dl
  440da1:	add    BYTE PTR [ebp+eax*2+0x44580044],dh
  440da8:	inc    esp
  440da9:	add    BYTE PTR [eax-0x43ffbbbb],bh
  440daf:	inc    ebp
  440db0:	inc    esp
  440db1:	add    al,al
  440db3:	inc    ebp
  440db4:	inc    esp
  440db5:	add    ah,al
  440db7:	inc    ebp
  440db8:	inc    esp
  440db9:	add    BYTE PTR [ebp+eax*2+0x44],ah
  440dbd:	add    al,cl
  440dbf:	inc    ebp
  440dc0:	inc    esp
  440dc1:	add    ah,cl
  440dc3:	inc    ebp
  440dc4:	inc    esp
  440dc5:	add    BYTE PTR [eax*2+0x45600044],dl
  440dcc:	inc    esp
  440dcd:	add    al,dl
  440dcf:	inc    ebp
  440dd0:	inc    esp
  440dd1:	add    BYTE PTR [ebp+eax*2+0x45540044],dl
  440dd8:	inc    esp
  440dd9:	add    BYTE PTR [eax-0x6fffbbbb],dh
  440ddf:	inc    esp
  440de0:	inc    esp
  440de1:	add    ah,dl
  440de3:	inc    ebp
  440de4:	inc    esp
  440de5:	add    BYTE PTR [eax-0x27ffbbbb],ah
  440deb:	inc    ebp
  440dec:	inc    esp
  440ded:	add    ah,bl
  440def:	inc    ebp
  440df0:	inc    esp
  440df1:	add    al,ah
  440df3:	inc    ebp
  440df4:	inc    esp
  440df5:	add    ah,ah
  440df7:	inc    ebp
  440df8:	inc    esp
  440df9:	add    BYTE PTR [ebp+eax*2+0x44],dl
  440dfd:	add    BYTE PTR [eax],ah
  440dff:	inc    esp
  440e00:	inc    esp
  440e01:	add    BYTE PTR [esp+eax*2+0x45e80044],ah
  440e08:	inc    esp
  440e09:	add    BYTE PTR [esp+eax*2+0x44],cl
  440e0d:	add    BYTE PTR [eax+0x44],bl
  440e10:	inc    esp
  440e11:	add    ah,dl
  440e13:	inc    ebp
  440e14:	inc    esp
  440e15:	add    BYTE PTR [eax-0x13ffbbbc],ch
  440e1b:	inc    ebp
  440e1c:	inc    esp
  440e1d:	add    BYTE PTR [esp+eax*2+0x44],dl
  440e21:	add    al,dh
  440e23:	inc    ebp
  440e24:	inc    esp
  440e25:	add    ah,dh
  440e27:	inc    ebp
  440e28:	inc    esp
  440e29:	add    BYTE PTR [eax+0x4c004445],ch
  440e2f:	inc    ebp
  440e30:	inc    esp
  440e31:	add    al,bh
  440e33:	inc    ebp
  440e34:	inc    esp
  440e35:	add    ah,ch
  440e37:	inc    ebp
  440e38:	inc    esp
  440e39:	add    BYTE PTR [eax],bl
  440e3b:	inc    ebp
  440e3c:	inc    esp
  440e3d:	add    ah,bh
  440e3f:	inc    ebp
  440e40:	inc    esp
  440e41:	add    al,ah
  440e43:	inc    esp
  440e44:	inc    esp
  440e45:	add    BYTE PTR [eax],al
  440e47:	inc    esi
  440e48:	inc    esp
  440e49:	add    BYTE PTR [esi+eax*2],al
  440e4c:	inc    esp
  440e4d:	add    BYTE PTR [eax],bh
  440e4f:	inc    esp
  440e50:	inc    esp
  440e51:	add    ah,dl
  440e53:	inc    esp
  440e54:	inc    esp
  440e55:	add    BYTE PTR [eax],cl
  440e57:	inc    esi
  440e58:	inc    esp
  440e59:	add    BYTE PTR [esi+eax*2],cl
  440e5c:	inc    esp
  440e5d:	add    BYTE PTR [eax*2+0x46100044],ah
  440e64:	inc    esp
  440e65:	add    BYTE PTR [esi+eax*2],dl
  440e68:	inc    esp
  440e69:	add    BYTE PTR [eax],al
  440e6b:	inc    esi
  440e6c:	inc    esp
  440e6d:	add    BYTE PTR [eax],bl
  440e6f:	inc    esi
  440e70:	inc    esp
  440e71:	add    BYTE PTR [eax],ah
  440e73:	inc    esi
  440e74:	inc    esp
  440e75:	add    BYTE PTR [esi+eax*2],ah
  440e78:	inc    esp
  440e79:	add    BYTE PTR [eax],ch
  440e7b:	inc    esi
  440e7c:	inc    esp
  440e7d:	add    BYTE PTR [esi+eax*2],ch
  440e80:	inc    esp
  440e81:	add    BYTE PTR [eax],dh
  440e83:	inc    esi
  440e84:	inc    esp
  440e85:	add    BYTE PTR [esi+eax*2],dh
  440e88:	inc    esp
  440e89:	add    BYTE PTR [eax],ch
  440e8b:	inc    esi
  440e8c:	inc    esp
  440e8d:	add    BYTE PTR [eax],bh
  440e8f:	inc    esi
  440e90:	inc    esp
  440e91:	add    BYTE PTR [esi+eax*2],bh
  440e94:	inc    esp
  440e95:	add    BYTE PTR [eax+0x46],al
  440e98:	inc    esp
  440e99:	add    BYTE PTR [esi+eax*2+0x44],al
  440e9d:	add    BYTE PTR [eax+0x46],cl
  440ea0:	inc    esp
  440ea1:	add    BYTE PTR [esi+eax*2+0x44],cl
  440ea5:	add    BYTE PTR [eax+0x46],dl
  440ea8:	inc    esp
  440ea9:	add    BYTE PTR [esi+eax*2+0x44],dl
  440ead:	add    BYTE PTR [eax+0x46],bl
  440eb0:	inc    esp
  440eb1:	add    BYTE PTR [esi+eax*2+0x44],bl
  440eb5:	add    BYTE PTR [eax+0x46],ah
  440eb8:	inc    esp
  440eb9:	add    BYTE PTR [esi+eax*2+0x44],ah
  440ebd:	add    BYTE PTR [eax+0x46],ch
  440ec0:	inc    esp
  440ec1:	add    BYTE PTR [esi+eax*2+0x44],ch
  440ec5:	add    BYTE PTR [eax+0x46],dh
  440ec8:	inc    esp
  440ec9:	add    BYTE PTR [esi+eax*2+0x44],dh
  440ecd:	add    BYTE PTR [eax+0x46],bh
  440ed0:	inc    esp
  440ed1:	add    BYTE PTR [esi+eax*2+0x44],bh
  440ed5:	add    BYTE PTR [eax-0x7bffbbba],al
  440edb:	inc    esi
  440edc:	inc    esp
  440edd:	add    BYTE PTR [eax-0x73ffbbba],cl
  440ee3:	inc    esi
  440ee4:	inc    esp
  440ee5:	add    BYTE PTR [eax-0x6bffbbba],dl
  440eeb:	inc    esi
  440eec:	inc    esp
  440eed:	add    BYTE PTR [eax+0x4c004446],bl
  440ef3:	inc    esi
  440ef4:	inc    esp
  440ef5:	add    BYTE PTR [esi+eax*2+0x46a00044],bl
  440efc:	inc    esp
  440efd:	add    BYTE PTR [esi+eax*2+0x46a80044],ah
  440f04:	inc    esp
  440f05:	add    BYTE PTR [esi+eax*2+0x46b00044],ch
  440f0c:	inc    esp
  440f0d:	add    BYTE PTR [esi+eax*2+0x46b80044],dh
  440f14:	inc    esp
  440f15:	add    BYTE PTR [esi+eax*2+0x46c00044],bh
  440f1c:	inc    esp
  440f1d:	add    ah,al
  440f1f:	inc    esi
  440f20:	inc    esp
  440f21:	add    BYTE PTR [esi+eax*2+0x46c80044],bh
  440f28:	inc    esp
  440f29:	add    ah,cl
  440f2b:	inc    esi
  440f2c:	inc    esp
  440f2d:	add    al,dl
  440f2f:	inc    esi
  440f30:	inc    esp
  440f31:	add    ah,dl
  440f33:	inc    esi
  440f34:	inc    esp
  440f35:	add    al,bl
  440f37:	inc    esi
  440f38:	inc    esp
  440f39:	add    ah,bl
  440f3b:	inc    esi
  440f3c:	inc    esp
  440f3d:	add    BYTE PTR [esi+eax*2],ah
  440f40:	inc    esp
  440f41:	add    al,ah
  440f43:	inc    esi
  440f44:	inc    esp
  440f45:	add    ah,ah
  440f47:	inc    esi
  440f48:	inc    esp
  440f49:	add    al,ch
  440f4b:	inc    esi
  440f4c:	inc    esp
  440f4d:	add    ah,ch
  440f4f:	inc    esi
  440f50:	inc    esp
  440f51:	add    al,dh
  440f53:	inc    esi
  440f54:	inc    esp
  440f55:	add    ah,dh
  440f57:	inc    esi
  440f58:	inc    esp
  440f59:	add    al,bh
  440f5b:	inc    esi
  440f5c:	inc    esp
  440f5d:	add    ah,bh
  440f5f:	inc    esi
  440f60:	inc    esp
  440f61:	add    BYTE PTR [eax+0x46],cl
  440f64:	inc    esp
  440f65:	add    BYTE PTR [eax],al
  440f67:	inc    edi
  440f68:	inc    esp
  440f69:	add    BYTE PTR [edi+eax*2],al
  440f6c:	inc    esp
  440f6d:	add    BYTE PTR [eax],cl
  440f6f:	inc    edi
  440f70:	inc    esp
  440f71:	add    BYTE PTR [edi+eax*2],cl
  440f74:	inc    esp
  440f75:	add    BYTE PTR [eax],dl
  440f77:	inc    edi
  440f78:	inc    esp
  440f79:	add    BYTE PTR [edi+eax*2],dl
  440f7c:	inc    esp
  440f7d:	add    BYTE PTR [eax],bl
  440f7f:	inc    edi
  440f80:	inc    esp
  440f81:	add    BYTE PTR [edi+eax*2],bl
  440f84:	inc    esp
  440f85:	add    BYTE PTR [eax],ah
  440f87:	inc    edi
  440f88:	inc    esp
  440f89:	add    BYTE PTR [edi+eax*2],ah
  440f8c:	inc    esp
  440f8d:	add    BYTE PTR [eax],ch
  440f8f:	inc    edi
  440f90:	inc    esp
  440f91:	add    BYTE PTR [edi+eax*2],ch
  440f94:	inc    esp
  440f95:	add    BYTE PTR [eax],dh
  440f97:	inc    edi
  440f98:	inc    esp
  440f99:	add    BYTE PTR [edi+eax*2],dh
  440f9c:	inc    esp
  440f9d:	add    BYTE PTR [edi+eax*2],dl
  440fa0:	inc    esp
  440fa1:	add    BYTE PTR [eax+0x46],dl
  440fa4:	inc    esp
  440fa5:	add    BYTE PTR [eax],bh
  440fa7:	inc    edi
  440fa8:	inc    esp
  440fa9:	add    BYTE PTR [edi+eax*2],bh
  440fac:	inc    esp
  440fad:	add    BYTE PTR [eax+0x47],al
  440fb0:	inc    esp
  440fb1:	add    BYTE PTR [edi+eax*2+0x44],al
  440fb5:	add    BYTE PTR [eax+0x48004446],bl
  440fbb:	inc    edi
  440fbc:	inc    esp
  440fbd:	add    BYTE PTR [esi+eax*2+0x44],dl
  440fc1:	add    BYTE PTR [edi+eax*2+0x44],cl
  440fc5:	add    BYTE PTR [eax+0x47],dl
  440fc8:	inc    esp
  440fc9:	add    BYTE PTR [edi+eax*2+0x44],dl
  440fcd:	add    BYTE PTR [eax+0x47],bl
  440fd0:	inc    esp
  440fd1:	add    BYTE PTR [edi+eax*2+0x44],bl
  440fd5:	add    BYTE PTR [eax+0x47],ah
  440fd8:	inc    esp
  440fd9:	add    BYTE PTR [edi+eax*2+0x44],ah
  440fdd:	add    BYTE PTR [eax+0x47],ch
  440fe0:	inc    esp
  440fe1:	add    BYTE PTR [esi+eax*2+0x44],ch
  440fe5:	add    BYTE PTR [edi+eax*2+0x44],ch
  440fe9:	add    BYTE PTR [eax],al
  440feb:	inc    edi
  440fec:	inc    esp
  440fed:	add    BYTE PTR [eax+0x47],dh
  440ff0:	inc    esp
  440ff1:	add    BYTE PTR [edi+eax*2+0x44],dh
  440ff5:	add    BYTE PTR [eax+0x47],bh
  440ff8:	inc    esp
  440ff9:	add    BYTE PTR [eax+0x46],ah
  440ffc:	inc    esp
  440ffd:	add    BYTE PTR [edi+eax*2+0x44],bh
  441001:	add    BYTE PTR [eax+0x46],bh
  441004:	inc    esp
  441005:	add    BYTE PTR [esi+eax*2+0x44],ch
  441009:	add    BYTE PTR [edi+eax*2+0x44],dl
  44100d:	add    BYTE PTR [eax-0x7bffbbb9],al
  441013:	inc    edi
  441014:	inc    esp
  441015:	add    BYTE PTR [esi+eax*2+0x47880044],dl
  44101c:	inc    esp
  44101d:	add    BYTE PTR [edi+eax*2+0x47900044],cl
  441024:	inc    esp
  441025:	add    BYTE PTR [edi+eax*2+0x47980044],dl
  44102c:	inc    esp
  44102d:	add    BYTE PTR [edi+eax*2+0x46c40044],bl
  441034:	inc    esp
  441035:	add    BYTE PTR [edi+eax*2],bl
  441038:	inc    esp
  441039:	add    BYTE PTR [eax+0x74004447],ah
  44103f:	inc    esi
  441040:	inc    esp
  441041:	add    ah,ch
  441043:	inc    esi
  441044:	inc    esp
  441045:	add    BYTE PTR [edi+eax*2+0x47a40044],dl
  44104c:	inc    esp
  44104d:	add    BYTE PTR [eax-0x53ffbbb9],ch
  441053:	inc    edi
  441054:	inc    esp
  441055:	add    BYTE PTR [eax-0x4bffbbb9],dh
  44105b:	inc    edi
  44105c:	inc    esp
  44105d:	add    BYTE PTR [eax-0x43ffbbb9],bh
  441063:	inc    edi
  441064:	inc    esp
  441065:	add    al,al
  441067:	inc    edi
  441068:	inc    esp
  441069:	add    ah,al
  44106b:	inc    edi
  44106c:	inc    esp
  44106d:	add    al,cl
  44106f:	inc    edi
  441070:	inc    esp
  441071:	add    ah,cl
  441073:	inc    edi
  441074:	inc    esp
  441075:	add    BYTE PTR [edi+eax*2+0x47d00044],ch
  44107c:	inc    esp
  44107d:	add    ah,dl
  44107f:	inc    edi
  441080:	inc    esp
  441081:	add    BYTE PTR [edi+eax*2],dl
  441084:	inc    esp
  441085:	add    BYTE PTR [eax-0x27ffbbb9],ah
  44108b:	inc    edi
  44108c:	inc    esp
  44108d:	add    ah,ah
  44108f:	inc    esi
  441090:	inc    esp
  441091:	add    ah,bl
  441093:	inc    edi
  441094:	inc    esp
  441095:	add    BYTE PTR [edi+eax*2+0x47e00044],al
  44109c:	inc    esp
  44109d:	add    ah,ah
  44109f:	inc    edi
  4410a0:	inc    esp
  4410a1:	add    al,ch
  4410a3:	inc    edi
  4410a4:	inc    esp
  4410a5:	add    ah,ch
  4410a7:	inc    edi
  4410a8:	inc    esp
  4410a9:	add    al,dh
  4410ab:	inc    edi
  4410ac:	inc    esp
  4410ad:	add    BYTE PTR [edi+eax*2+0x44],bh
  4410b1:	add    BYTE PTR [eax],ch
  4410b3:	inc    esi
  4410b4:	inc    esp
  4410b5:	add    BYTE PTR [esi+eax*2+0x46500044],ah
  4410bc:	inc    esp
  4410bd:	add    ah,dh
  4410bf:	inc    edi
  4410c0:	inc    esp
  4410c1:	add    al,bh
  4410c3:	inc    edi
  4410c4:	inc    esp
  4410c5:	add    al,dh
  4410c7:	inc    esi
  4410c8:	inc    esp
  4410c9:	add    ah,bh
  4410cb:	inc    edi
  4410cc:	inc    esp
  4410cd:	add    BYTE PTR [eax],al
  4410cf:	dec    eax
  4410d0:	inc    esp
  4410d1:	add    BYTE PTR [eax+ecx*2],al
  4410d4:	inc    esp
  4410d5:	add    BYTE PTR [eax],cl
  4410d7:	dec    eax
  4410d8:	inc    esp
  4410d9:	add    BYTE PTR [eax+ecx*2],cl
  4410dc:	inc    esp
  4410dd:	add    BYTE PTR [esi+eax*2+0x44],bl
  4410e1:	add    ah,ch
  4410e3:	inc    esi
  4410e4:	inc    esp
  4410e5:	add    BYTE PTR [eax],dl
  4410e7:	dec    eax
  4410e8:	inc    esp
  4410e9:	add    BYTE PTR [eax+0x14004447],bh
  4410ef:	dec    eax
  4410f0:	inc    esp
  4410f1:	add    BYTE PTR [eax],bl
  4410f3:	dec    eax
  4410f4:	inc    esp
  4410f5:	add    BYTE PTR [eax+ecx*2],bl
  4410f8:	inc    esp
  4410f9:	add    BYTE PTR [eax],ch
  4410fb:	inc    edi
  4410fc:	inc    esp
  4410fd:	add    BYTE PTR [eax+0x46],bh
  441100:	inc    esp
  441101:	add    BYTE PTR [eax+0x47],bh
  441104:	inc    esp
  441105:	add    BYTE PTR [eax],ah
  441107:	dec    eax
  441108:	inc    esp
  441109:	add    BYTE PTR [eax+ecx*2],ah
  44110c:	inc    esp
  44110d:	add    BYTE PTR [eax],ch
  44110f:	dec    eax
  441110:	inc    esp
  441111:	add    al,bh
  441113:	inc    esi
  441114:	inc    esp
  441115:	add    BYTE PTR [eax+ecx*2],ch
  441118:	inc    esp
  441119:	add    al,cl
  44111b:	inc    esi
  44111c:	inc    esp
  44111d:	add    BYTE PTR [eax],dh
  44111f:	dec    eax
  441120:	inc    esp
  441121:	add    al,cl
  441123:	inc    edi
  441124:	inc    esp
  441125:	add    BYTE PTR [eax+ecx*2],dh
  441128:	inc    esp
  441129:	add    BYTE PTR [eax],bh
  44112b:	dec    eax
  44112c:	inc    esp
  44112d:	add    BYTE PTR [edi+eax*2+0x44],ch
  441131:	add    BYTE PTR [eax+ecx*2],cl
  441134:	inc    esp
  441135:	add    BYTE PTR [eax+ecx*2],bh
  441138:	inc    esp
  441139:	add    BYTE PTR [eax+0x48],al
  44113c:	inc    esp
  44113d:	add    BYTE PTR [eax+ecx*2+0x44],al
  441141:	add    BYTE PTR [eax+0x48],cl
  441144:	inc    esp
  441145:	add    BYTE PTR [eax+ecx*2+0x44],cl
  441149:	add    BYTE PTR [eax+0x48],dl
  44114c:	inc    esp
  44114d:	add    BYTE PTR [eax+ecx*2+0x44],dl
  441151:	add    BYTE PTR [eax+0x48],bl
  441154:	inc    esp
  441155:	add    BYTE PTR [edi+eax*2],bl
  441158:	inc    esp
  441159:	add    BYTE PTR [eax+ecx*2+0x44],bl
  44115d:	add    BYTE PTR [eax],cl
  44115f:	dec    eax
  441160:	inc    esp
  441161:	add    BYTE PTR [eax+0x48],ah
  441164:	inc    esp
  441165:	add    BYTE PTR [eax],ah
  441167:	inc    esi
  441168:	inc    esp
  441169:	add    BYTE PTR [eax+ecx*2+0x44],ah
  44116d:	add    BYTE PTR [eax+0x48],ch
  441170:	inc    esp
  441171:	add    BYTE PTR [eax+ecx*2+0x44],ch
  441175:	add    BYTE PTR [eax+0x48],dh
  441178:	inc    esp
  441179:	add    BYTE PTR [eax+0x47],dl
  44117c:	inc    esp
  44117d:	add    BYTE PTR [eax-0x4bffbbb9],bh
  441183:	inc    esi
  441184:	inc    esp
  441185:	add    BYTE PTR [eax+ecx*2+0x44],dh
  441189:	add    BYTE PTR [eax+0x48],bh
  44118c:	inc    esp
  44118d:	add    BYTE PTR [eax+ecx*2+0x44],bh
  441191:	add    BYTE PTR [eax-0x63ffbbbd],bl
  441197:	inc    ebx
  441198:	inc    esp
  441199:	add    BYTE PTR [eax-0x5bffbbbd],ah
  44119f:	inc    ebx
  4411a0:	inc    esp
  4411a1:	add    BYTE PTR [eax-0x53ffbbbd],ch
  4411a7:	inc    ebx
  4411a8:	inc    esp
  4411a9:	add    BYTE PTR [eax-0x4fffbbbd],dh
  4411af:	inc    ebx
  4411b0:	inc    esp
  4411b1:	add    BYTE PTR [ebx+eax*2+0x43b40044],bl
  4411b8:	inc    esp
  4411b9:	add    BYTE PTR [eax-0x47ffbbbd],dh
  4411bf:	inc    ebx
  4411c0:	inc    esp
  4411c1:	add    BYTE PTR [ebx+eax*2+0x43c00044],bh
  4411c8:	inc    esp
  4411c9:	add    BYTE PTR [ebx+eax*2+0x43c40044],ah
  4411d0:	inc    esp
  4411d1:	add    al,al
  4411d3:	inc    ebx
  4411d4:	inc    esp
  4411d5:	add    al,cl
  4411d7:	inc    ebx
  4411d8:	inc    esp
  4411d9:	add    BYTE PTR [ebx+eax*2+0x43980044],bh
  4411e0:	inc    esp
  4411e1:	add    ah,cl
  4411e3:	inc    ebx
  4411e4:	inc    esp
  4411e5:	add    al,dl
  4411e7:	inc    ebx
  4411e8:	inc    esp
  4411e9:	add    BYTE PTR [eax-0x5bffbbbd],ah
  4411ef:	inc    ebx
  4411f0:	inc    esp
  4411f1:	add    ah,al
  4411f3:	inc    ebx
  4411f4:	inc    esp
  4411f5:	add    BYTE PTR [eax-0x2fffbbbd],bl
  4411fb:	inc    ebx
  4411fc:	inc    esp
  4411fd:	add    BYTE PTR [eax-0x3bffbbbd],ch
  441203:	inc    ebx
  441204:	inc    esp
  441205:	add    ah,dl
  441207:	inc    ebx
  441208:	inc    esp
  441209:	add    BYTE PTR [ebx+eax*2+0x43b80044],ah
  441210:	inc    esp
  441211:	add    al,bl
  441213:	inc    ebx
  441214:	inc    esp
  441215:	add    ah,dl
  441217:	inc    ebx
  441218:	inc    esp
  441219:	add    BYTE PTR [ebx+eax*2+0x43dc0044],ch
  441220:	inc    esp
  441221:	add    al,cl
  441223:	inc    ebx
  441224:	inc    esp
  441225:	add    ah,bl
  441227:	inc    ebx
  441228:	inc    esp
  441229:	add    BYTE PTR [eax-0x47ffbbbd],ah
  44122f:	inc    ebx
  441230:	inc    esp
  441231:	add    al,al
  441233:	inc    ebx
  441234:	inc    esp
  441235:	add    BYTE PTR [eax-0x5bffbbbd],bl
  44123b:	inc    ebx
  44123c:	inc    esp
  44123d:	add    BYTE PTR [ebx+eax*2+0x43c00044],ah
  441244:	inc    esp
  441245:	add    BYTE PTR [eax-0x33ffbbbd],ah
  44124b:	inc    ebx
  44124c:	inc    esp
  44124d:	add    BYTE PTR [ebx+eax*2+0x43d00044],ah
  441254:	inc    esp
  441255:	add    ah,cl
  441257:	inc    ebx
  441258:	inc    esp
  441259:	add    ah,al
  44125b:	inc    ebx
  44125c:	inc    esp
  44125d:	add    ah,bl
  44125f:	inc    ebx
  441260:	inc    esp
  441261:	add    BYTE PTR [ebx+eax*2+0x43c40044],dh
  441268:	inc    esp
  441269:	add    al,ah
  44126b:	inc    ebx
  44126c:	inc    esp
  44126d:	add    ah,dl
  44126f:	inc    ebx
  441270:	inc    esp
  441271:	add    BYTE PTR [ebx+eax*2+0x43d40044],dh
  441278:	inc    esp
  441279:	add    al,al
  44127b:	inc    ebx
  44127c:	inc    esp
  44127d:	add    BYTE PTR [ebx+eax*2+0x43e40044],bh
  441284:	inc    esp
  441285:	add    BYTE PTR [eax-0x4bffbbbd],ch
  44128b:	inc    ebx
  44128c:	inc    esp
  44128d:	add    BYTE PTR [ebx+eax*2+0x43c80044],ah
  441294:	inc    esp
  441295:	add    ah,cl
  441297:	inc    ebx
  441298:	inc    esp
  441299:	add    BYTE PTR [ebx+eax*2+0x43980044],bl
  4412a0:	inc    esp
  4412a1:	add    al,bl
  4412a3:	inc    ebx
  4412a4:	inc    esp
  4412a5:	add    al,ah
  4412a7:	inc    ebx
  4412a8:	inc    esp
  4412a9:	add    BYTE PTR [eax-0x2bffbbbd],bl
  4412af:	inc    ebx
  4412b0:	inc    esp
  4412b1:	add    BYTE PTR [ebx+eax*2+0x43c00044],ch
  4412b8:	inc    esp
  4412b9:	add    al,ch
  4412bb:	inc    ebx
  4412bc:	inc    esp
  4412bd:	add    al,ah
  4412bf:	inc    ebx
  4412c0:	inc    esp
  4412c1:	add    BYTE PTR [eax-0x53ffbbbd],bh
  4412c7:	inc    ebx
  4412c8:	inc    esp
  4412c9:	add    ah,dl
  4412cb:	inc    ebx
  4412cc:	inc    esp
  4412cd:	add    BYTE PTR [eax-0x5fffbbbd],dh
  4412d3:	inc    ebx
  4412d4:	inc    esp
  4412d5:	add    ah,cl
  4412d7:	inc    ebx
  4412d8:	inc    esp
  4412d9:	add    al,cl
  4412db:	inc    ebx
  4412dc:	inc    esp
  4412dd:	add    BYTE PTR [ebx+eax*2+0x43ac0044],bl
  4412e4:	inc    esp
  4412e5:	add    BYTE PTR [eax-0x17ffbbbd],bl
  4412eb:	inc    ebx
  4412ec:	inc    esp
  4412ed:	add    al,cl
  4412ef:	inc    ebx
  4412f0:	inc    esp
  4412f1:	add    BYTE PTR [eax-0x4fffbbbd],ah
  4412f7:	inc    ebx
  4412f8:	inc    esp
  4412f9:	add    BYTE PTR [ebx+eax*2+0x43c80044],ch
  441300:	inc    esp
  441301:	add    al,cl
  441303:	inc    ebx
  441304:	inc    esp
  441305:	add    al,dl
  441307:	inc    ebx
  441308:	inc    esp
  441309:	add    al,ah
  44130b:	inc    ebx
  44130c:	inc    esp
  44130d:	add    al,ch
  44130f:	inc    ebx
  441310:	inc    esp
  441311:	add    BYTE PTR [eax-0x4bffbbbd],bl
  441317:	inc    ebx
  441318:	inc    esp
  441319:	add    ah,ah
  44131b:	inc    ebx
  44131c:	inc    esp
  44131d:	add    BYTE PTR [eax-0x5fffbbbd],ch
  441323:	inc    ebx
  441324:	inc    esp
  441325:	add    BYTE PTR [ebx+eax*2+0x43e40044],ch
  44132c:	inc    esp
  44132d:	add    al,dl
  44132f:	inc    ebx
  441330:	inc    esp
  441331:	add    BYTE PTR [ebx+eax*2+0x43a80044],bl
  441338:	inc    esp
  441339:	add    al,ah
  44133b:	inc    ebx
  44133c:	inc    esp
  44133d:	add    BYTE PTR [ebx+eax*2+0x43ac0044],ah
  441344:	inc    esp
  441345:	add    BYTE PTR [eax-0x1bffbbbd],ch
  44134b:	inc    ebx
  44134c:	inc    esp
  44134d:	add    BYTE PTR [ebx+eax*2+0x43b00044],bl
  441354:	inc    esp
  441355:	add    BYTE PTR [ebx+eax*2+0x439c0044],ch
  44135c:	inc    esp
  44135d:	add    al,al
  44135f:	inc    ebx
  441360:	inc    esp
  441361:	add    BYTE PTR [ebx+eax*2+0x43e80044],dh
  441368:	inc    esp
  441369:	add    ah,dl
  44136b:	inc    ebx
  44136c:	inc    esp
  44136d:	add    ah,bl
  44136f:	inc    ebx
  441370:	inc    esp
  441371:	add    ah,ah
  441373:	inc    ebx
  441374:	inc    esp
  441375:	add    al,cl
  441377:	inc    ebx
  441378:	inc    esp
  441379:	add    ah,dl
  44137b:	inc    ebx
  44137c:	inc    esp
  44137d:	add    BYTE PTR [eax-0x2bffbbbd],ah
  441383:	inc    ebx
  441384:	inc    esp
  441385:	add    BYTE PTR [ebx+eax*2+0x43c40044],bh
  44138c:	inc    esp
  44138d:	add    al,ch
  44138f:	inc    ebx
  441390:	inc    esp
  441391:	add    al,cl
  441393:	inc    ebx
  441394:	inc    esp
  441395:	add    al,ah
  441397:	inc    ebx
  441398:	inc    esp
  441399:	add    ah,ah
  44139b:	inc    ebx
  44139c:	inc    esp
  44139d:	add    BYTE PTR [ebx+eax*2+0x43d80044],ah
  4413a4:	inc    esp
  4413a5:	add    BYTE PTR [ebx+eax*2+0x43a80044],ch
  4413ac:	inc    esp
  4413ad:	add    ah,ah
  4413af:	inc    ebx
  4413b0:	inc    esp
  4413b1:	add    BYTE PTR [ebx+eax*2+0x43b80044],ah
  4413b8:	inc    esp
  4413b9:	add    BYTE PTR [ebx+eax*2+0x43a80044],ah
  4413c0:	inc    esp
  4413c1:	add    BYTE PTR [eax-0x33ffbbbd],ah
  4413c7:	inc    ebx
  4413c8:	inc    esp
  4413c9:	add    ah,bl
  4413cb:	inc    ebx
  4413cc:	inc    esp
  4413cd:	add    BYTE PTR [eax-0x53ffbbbd],ah
  4413d3:	inc    ebx
  4413d4:	inc    esp
  4413d5:	add    al,al
  4413d7:	inc    ebx
  4413d8:	inc    esp
  4413d9:	add    BYTE PTR [eax-0x2fffbbbd],bl
  4413df:	inc    ebx
  4413e0:	inc    esp
  4413e1:	add    ah,dl
  4413e3:	inc    ebx
  4413e4:	inc    esp
  4413e5:	add    ah,ah
  4413e7:	inc    ebx
  4413e8:	inc    esp
  4413e9:	add    al,ch
  4413eb:	inc    ebx
  4413ec:	inc    esp
  4413ed:	add    BYTE PTR [ebx+eax*2+0x43e00044],ch
  4413f4:	inc    esp
  4413f5:	add    ah,cl
  4413f7:	inc    ebx
  4413f8:	inc    esp
  4413f9:	add    BYTE PTR [eax-0x33ffbbbd],ah
  4413ff:	inc    ebx
  441400:	inc    esp
  441401:	add    ah,dl
  441403:	inc    ebx
  441404:	inc    esp
  441405:	add    al,cl
  441407:	inc    ebx
  441408:	inc    esp
  441409:	add    ah,dl
  44140b:	inc    ebx
  44140c:	inc    esp
  44140d:	add    al,ch
  44140f:	inc    ebx
  441410:	inc    esp
  441411:	add    ah,al
  441413:	inc    ebx
  441414:	inc    esp
  441415:	add    BYTE PTR [eax-0x2bffbbbd],dh
  44141b:	inc    ebx
  44141c:	inc    esp
  44141d:	add    al,ch
  44141f:	inc    ebx
  441420:	inc    esp
  441421:	add    ah,ah
  441423:	inc    ebx
  441424:	inc    esp
  441425:	add    al,bl
  441427:	inc    ebx
  441428:	inc    esp
  441429:	add    BYTE PTR [ebx+eax*2+0x43a00044],dh
  441430:	inc    esp
  441431:	add    BYTE PTR [ebx+eax*2+0x43ac0044],ah
  441438:	inc    esp
  441439:	add    ah,bl
  44143b:	inc    ebx
  44143c:	inc    esp
  44143d:	add    BYTE PTR [ebx+eax*2+0x43d80044],dh
  441444:	inc    esp
  441445:	add    al,al
  441447:	inc    ebx
  441448:	inc    esp
  441449:	add    ah,dl
  44144b:	inc    ebx
  44144c:	inc    esp
  44144d:	add    BYTE PTR [eax-0x43ffbbbd],ch
  441453:	inc    ebx
  441454:	inc    esp
  441455:	add    BYTE PTR [eax-0x33ffbbbd],ch
  44145b:	inc    ebx
  44145c:	inc    esp
  44145d:	add    BYTE PTR [eax-0x63ffbbbd],ch
  441463:	inc    ebx
  441464:	inc    esp
  441465:	add    ah,ah
  441467:	inc    ebx
  441468:	inc    esp
  441469:	add    BYTE PTR [ebx+eax*2+0x43980044],bh
  441470:	inc    esp
  441471:	add    al,cl
  441473:	inc    ebx
  441474:	inc    esp
  441475:	add    BYTE PTR [eax-0x3bffbbbd],bh
  44147b:	inc    ebx
  44147c:	inc    esp
  44147d:	add    BYTE PTR [eax-0x23ffbbbd],dh
  441483:	inc    ebx
  441484:	inc    esp
  441485:	add    ah,dl
  441487:	inc    ebx
  441488:	inc    esp
  441489:	add    al,ch
  44148b:	inc    ebx
  44148c:	inc    esp
  44148d:	add    al,ch
  44148f:	inc    ebx
  441490:	inc    esp
  441491:	add    al,cl
  441493:	inc    ebx
  441494:	inc    esp
  441495:	add    ah,dl
  441497:	inc    ebx
  441498:	inc    esp
  441499:	add    BYTE PTR [eax-0x3bffbbbd],ah
  44149f:	inc    ebx
  4414a0:	inc    esp
  4414a1:	add    BYTE PTR [eax-0x67ffbbbd],ch
  4414a7:	inc    ebx
  4414a8:	inc    esp
  4414a9:	add    al,ch
  4414ab:	inc    ebx
  4414ac:	inc    esp
  4414ad:	add    al,ch
  4414af:	inc    ebx
  4414b0:	inc    esp
  4414b1:	add    BYTE PTR [eax+ecx*2+0x48880044],al
  4414b8:	inc    esp
  4414b9:	add    BYTE PTR [eax+ecx*2+0x48900044],cl
  4414c0:	inc    esp
  4414c1:	add    BYTE PTR [eax+ecx*2+0x48980044],dl
  4414c8:	inc    esp
  4414c9:	add    BYTE PTR [eax+ecx*2+0x48a00044],bl
  4414d0:	inc    esp
  4414d1:	add    BYTE PTR [eax+ecx*2+0x48a80044],ah
  4414d8:	inc    esp
  4414d9:	add    BYTE PTR [eax-0x53ffbbb8],ch
  4414df:	dec    eax
  4414e0:	inc    esp
  4414e1:	add    BYTE PTR [eax+ecx*2+0x48b00044],ch
  4414e8:	inc    esp
  4414e9:	add    BYTE PTR [eax+ecx*2+0x48b80044],dh
  4414f0:	inc    esp
  4414f1:	add    BYTE PTR [eax+ecx*2+0x48c00044],bh
  4414f8:	inc    esp
  4414f9:	add    ah,al
  4414fb:	dec    eax
  4414fc:	inc    esp
  4414fd:	add    al,cl
  4414ff:	dec    eax
  441500:	inc    esp
  441501:	add    ah,cl
  441503:	dec    eax
  441504:	inc    esp
  441505:	add    al,dl
  441507:	dec    eax
  441508:	inc    esp
  441509:	add    ah,dl
  44150b:	dec    eax
  44150c:	inc    esp
  44150d:	add    BYTE PTR [eax+ecx*2+0x48d80044],bh
  441514:	inc    esp
  441515:	add    ah,bl
  441517:	dec    eax
  441518:	inc    esp
  441519:	add    al,ah
  44151b:	dec    eax
  44151c:	inc    esp
  44151d:	add    ah,ah
  44151f:	dec    eax
  441520:	inc    esp
  441521:	add    al,ch
  441523:	dec    eax
  441524:	inc    esp
  441525:	add    ah,ch
  441527:	dec    eax
  441528:	inc    esp
  441529:	add    al,dh
  44152b:	dec    eax
  44152c:	inc    esp
  44152d:	add    ah,dh
  44152f:	dec    eax
  441530:	inc    esp
  441531:	add    al,bh
  441533:	dec    eax
  441534:	inc    esp
  441535:	add    ah,bh
  441537:	dec    eax
  441538:	inc    esp
  441539:	add    BYTE PTR [eax],al
  44153b:	dec    ecx
  44153c:	inc    esp
  44153d:	add    al,dl
  44153f:	dec    eax
  441540:	inc    esp
  441541:	add    BYTE PTR [eax+0x4004448],dl
  441547:	dec    ecx
  441548:	inc    esp
  441549:	add    al,ah
  44154b:	dec    eax
  44154c:	inc    esp
  44154d:	add    al,bl
  44154f:	dec    eax
  441550:	inc    esp
  441551:	add    BYTE PTR [eax],cl
  441553:	dec    ecx
  441554:	inc    esp
  441555:	add    BYTE PTR [ecx+ecx*2],cl
  441558:	inc    esp
  441559:	add    BYTE PTR [eax],dl
  44155b:	dec    ecx
  44155c:	inc    esp
  44155d:	add    BYTE PTR [ecx+ecx*2],dl
  441560:	inc    esp
  441561:	add    BYTE PTR [eax],bl
  441563:	dec    ecx
  441564:	inc    esp
  441565:	add    BYTE PTR [ecx+ecx*2],bl
  441568:	inc    esp
  441569:	add    al,bh
  44156b:	dec    eax
  44156c:	inc    esp
  44156d:	add    BYTE PTR [eax],ah
  44156f:	dec    ecx
  441570:	inc    esp
  441571:	add    BYTE PTR [eax-0x5fffbbb8],cl
  441577:	dec    eax
  441578:	inc    esp
  441579:	add    BYTE PTR [eax+ecx*2+0x48fc0044],dl
  441580:	inc    esp
  441581:	add    BYTE PTR [eax+ecx*2+0x49240044],dh
  441588:	inc    esp
  441589:	add    BYTE PTR [eax],cl
  44158b:	dec    ecx
  44158c:	inc    esp
  44158d:	add    BYTE PTR [eax],ch
  44158f:	dec    ecx
  441590:	inc    esp
  441591:	add    BYTE PTR [eax+ecx*2+0x48d80044],bh
  441598:	inc    esp
  441599:	add    BYTE PTR [ecx+ecx*2],ch
  44159c:	inc    esp
  44159d:	add    BYTE PTR [eax+0x30004448],cl
  4415a3:	dec    ecx
  4415a4:	inc    esp
  4415a5:	add    BYTE PTR [ecx+ecx*2],dh
  4415a8:	inc    esp
  4415a9:	add    BYTE PTR [eax],bh
  4415ab:	dec    ecx
  4415ac:	inc    esp
  4415ad:	add    BYTE PTR [ecx+ecx*2],bh
  4415b0:	inc    esp
  4415b1:	add    BYTE PTR [eax],dh
  4415b3:	dec    ecx
  4415b4:	inc    esp
  4415b5:	add    ah,bh
  4415b7:	dec    eax
  4415b8:	inc    esp
  4415b9:	add    BYTE PTR [eax+0x49],al
  4415bc:	inc    esp
  4415bd:	add    BYTE PTR [ecx+ecx*2],dl
  4415c0:	inc    esp
  4415c1:	add    BYTE PTR [eax+ecx*2+0x48cc0044],cl
  4415c8:	inc    esp
  4415c9:	add    BYTE PTR [ecx+ecx*2+0x44],al
  4415cd:	add    BYTE PTR [eax+0x49],cl
  4415d0:	inc    esp
  4415d1:	add    BYTE PTR [ecx+ecx*2+0x44],al
  4415d5:	add    BYTE PTR [ecx+ecx*2],ch
  4415d8:	inc    esp
  4415d9:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  4415dd:	add    BYTE PTR [ecx+ecx*2+0x44],al
  4415e1:	add    ah,al
  4415e3:	dec    eax
  4415e4:	inc    esp
  4415e5:	add    BYTE PTR [eax+ecx*2+0x48cc0044],cl
  4415ec:	inc    esp
  4415ed:	add    BYTE PTR [eax+0x49],dl
  4415f0:	inc    esp
  4415f1:	add    BYTE PTR [eax],dh
  4415f3:	dec    ecx
  4415f4:	inc    esp
  4415f5:	add    BYTE PTR [eax],bl
  4415f7:	dec    ecx
  4415f8:	inc    esp
  4415f9:	add    BYTE PTR [eax-0x3bffbbb8],bh
  4415ff:	dec    eax
  441600:	inc    esp
  441601:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  441605:	add    al,ah
  441607:	dec    eax
  441608:	inc    esp
  441609:	add    ah,al
  44160b:	dec    eax
  44160c:	inc    esp
  44160d:	add    BYTE PTR [ecx+ecx*2],cl
  441610:	inc    esp
  441611:	add    BYTE PTR [ecx+ecx*2],al
  441614:	inc    esp
  441615:	add    BYTE PTR [ecx+ecx*2+0x44],al
  441619:	add    BYTE PTR [eax+0x49],bl
  44161c:	inc    esp
  44161d:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  441621:	add    BYTE PTR [eax+0x49],ah
  441624:	inc    esp
  441625:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  441629:	add    BYTE PTR [eax],bh
  44162b:	dec    ecx
  44162c:	inc    esp
  44162d:	add    BYTE PTR [eax+ecx*2+0x48c40044],bh
  441634:	inc    esp
  441635:	add    al,dh
  441637:	dec    eax
  441638:	inc    esp
  441639:	add    BYTE PTR [eax+0x49],ch
  44163c:	inc    esp
  44163d:	add    BYTE PTR [ecx+ecx*2+0x44],ch
  441641:	add    BYTE PTR [eax],ah
  441643:	dec    ecx
  441644:	inc    esp
  441645:	add    al,dl
  441647:	dec    eax
  441648:	inc    esp
  441649:	add    BYTE PTR [eax+ecx*2+0x49100044],dl
  441650:	inc    esp
  441651:	add    BYTE PTR [eax],bh
  441653:	dec    ecx
  441654:	inc    esp
  441655:	add    al,ah
  441657:	dec    eax
  441658:	inc    esp
  441659:	add    BYTE PTR [ecx+ecx*2],bl
  44165c:	inc    esp
  44165d:	add    BYTE PTR [eax+ecx*2+0x49240044],bh
  441664:	inc    esp
  441665:	add    ah,al
  441667:	dec    eax
  441668:	inc    esp
  441669:	add    BYTE PTR [eax+ecx*2+0x496c0044],ch
  441670:	inc    esp
  441671:	add    BYTE PTR [eax],ah
  441673:	dec    ecx
  441674:	inc    esp
  441675:	add    ah,bl
  441677:	dec    eax
  441678:	inc    esp
  441679:	add    ah,bl
  44167b:	dec    eax
  44167c:	inc    esp
  44167d:	add    BYTE PTR [ecx+ecx*2],cl
  441680:	inc    esp
  441681:	add    al,bl
  441683:	dec    eax
  441684:	inc    esp
  441685:	add    BYTE PTR [eax-0x43ffbbb8],cl
  44168b:	dec    eax
  44168c:	inc    esp
  44168d:	add    BYTE PTR [eax+ecx*2+0x496c0044],cl
  441694:	inc    esp
  441695:	add    BYTE PTR [eax+0x49],dh
  441698:	inc    esp
  441699:	add    BYTE PTR [eax-0x3bffbbb8],cl
  44169f:	dec    eax
  4416a0:	inc    esp
  4416a1:	add    al,cl
  4416a3:	dec    eax
  4416a4:	inc    esp
  4416a5:	add    BYTE PTR [eax+ecx*2+0x49600044],ch
  4416ac:	inc    esp
  4416ad:	add    BYTE PTR [eax+ecx*2+0x49740044],al
  4416b4:	inc    esp
  4416b5:	add    BYTE PTR [eax+0x49],bh
  4416b8:	inc    esp
  4416b9:	add    BYTE PTR [eax+0x3c004448],ah
  4416bf:	dec    ecx
  4416c0:	inc    esp
  4416c1:	add    ah,bh
  4416c3:	dec    eax
  4416c4:	inc    esp
  4416c5:	add    BYTE PTR [eax+ecx*2+0x497c0044],dh
  4416cc:	inc    esp
  4416cd:	add    BYTE PTR [eax+ecx*2+0x48a00044],cl
  4416d4:	inc    esp
  4416d5:	add    BYTE PTR [eax+ecx*2+0x489c0044],cl
  4416dc:	inc    esp
  4416dd:	add    BYTE PTR [ecx+ecx*2],dl
  4416e0:	inc    esp
  4416e1:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  4416e5:	add    al,ah
  4416e7:	dec    eax
  4416e8:	inc    esp
  4416e9:	add    al,bl
  4416eb:	dec    eax
  4416ec:	inc    esp
  4416ed:	add    al,dh
  4416ef:	dec    eax
  4416f0:	inc    esp
  4416f1:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  4416f5:	add    ah,al
  4416f7:	dec    eax
  4416f8:	inc    esp
  4416f9:	add    BYTE PTR [eax-0x5fffbbb8],bh
  4416ff:	dec    eax
  441700:	inc    esp
  441701:	add    BYTE PTR [eax+0x10004449],al
  441707:	dec    ecx
  441708:	inc    esp
  441709:	add    BYTE PTR [ecx+ecx*2],dl
  44170c:	inc    esp
  44170d:	add    ah,dl
  44170f:	dec    eax
  441710:	inc    esp
  441711:	add    al,cl
  441713:	dec    eax
  441714:	inc    esp
  441715:	add    ah,bh
  441717:	dec    eax
  441718:	inc    esp
  441719:	add    BYTE PTR [eax+0x49],cl
  44171c:	inc    esp
  44171d:	add    BYTE PTR [eax-0x7bffbbb8],bl
  441723:	dec    ecx
  441724:	inc    esp
  441725:	add    BYTE PTR [ecx+ecx*2],bl
  441728:	inc    esp
  441729:	add    BYTE PTR [eax-0x3ffbbb7],cl
  44172f:	dec    eax
  441730:	inc    esp
  441731:	add    BYTE PTR [eax+0x49],dl
  441734:	inc    esp
  441735:	add    BYTE PTR [eax+ecx*2+0x49140044],ch
  44173c:	inc    esp
  44173d:	add    BYTE PTR [ecx+ecx*2],dl
  441740:	inc    esp
  441741:	add    BYTE PTR [eax-0x2bffbbb8],bl
  441747:	dec    eax
  441748:	inc    esp
  441749:	add    BYTE PTR [ecx+ecx*2+0x48840044],cl
  441750:	inc    esp
  441751:	add    BYTE PTR [eax+0x34004449],dl
  441757:	dec    ecx
  441758:	inc    esp
  441759:	add    BYTE PTR [ecx+ecx*2],al
  44175c:	inc    esp
  44175d:	add    BYTE PTR [eax+0x49],ah
  441760:	inc    esp
  441761:	add    BYTE PTR [ecx+ecx*2+0x44],bl
  441765:	add    BYTE PTR [ecx+ecx*2+0x44],ch
  441769:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  44176d:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  441771:	add    al,bh
  441773:	dec    eax
  441774:	inc    esp
  441775:	add    BYTE PTR [eax+0x49],dh
  441778:	inc    esp
  441779:	add    al,al
  44177b:	dec    eax
  44177c:	inc    esp
  44177d:	add    BYTE PTR [ecx+ecx*2],dl
  441780:	inc    esp
  441781:	add    BYTE PTR [ecx+ecx*2+0x48b00044],dl
  441788:	inc    esp
  441789:	add    ah,bl
  44178b:	dec    eax
  44178c:	inc    esp
  44178d:	add    BYTE PTR [eax+0x2c004448],dh
  441793:	dec    ecx
  441794:	inc    esp
  441795:	add    BYTE PTR [eax+ecx*2+0x49580044],dl
  44179c:	inc    esp
  44179d:	add    BYTE PTR [eax],al
  44179f:	dec    ecx
  4417a0:	inc    esp
  4417a1:	add    BYTE PTR [eax-0x67ffbbb8],cl
  4417a7:	dec    ecx
  4417a8:	inc    esp
  4417a9:	add    BYTE PTR [ecx+ecx*2+0x44],ah
  4417ad:	add    ah,bl
  4417af:	dec    eax
  4417b0:	inc    esp
  4417b1:	add    BYTE PTR [ecx+ecx*2+0x44],bh
  4417b5:	add    BYTE PTR [ecx+ecx*2+0x44],dl
  4417b9:	add    BYTE PTR [ecx+ecx*2],ah
  4417bc:	inc    esp
  4417bd:	add    BYTE PTR [eax-0x3bffbbb8],ah
  4417c3:	dec    eax
  4417c4:	inc    esp
  4417c5:	add    BYTE PTR [ecx+ecx*2],cl
  4417c8:	inc    esp
  4417c9:	add    BYTE PTR [ecx+ecx*2],al
  4417cc:	inc    esp
  4417cd:	add    BYTE PTR [eax+0x49],bh
  4417d0:	inc    esp
  4417d1:	add    dl,al
  4417d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4417d4:	mov    ds:0x79afac27,al
  4417d9:	sub    DWORD PTR [ebp+0x6c],eax
  4417dc:	mov    bl,0xaa
  4417de:	aaa    
  4417df:	mov    dh,0xdc
  4417e1:	retf   0xde5
  4417e4:	dec    edi
  4417e5:	outs   dx,DWORD PTR ds:[esi]
  4417e6:	push   edi
  4417e7:	and    BYTE PTR [esi],dl
  4417e9:	xor    edi,ebx
  4417eb:	arpl   WORD PTR [eax+0x16],bp
  4417ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4417ef:	pop    ecx
  4417f0:	cwde   
  4417f1:	xor    bh,dl
  4417f3:	pop    ebx
  4417f4:	push   esi
  4417f5:	or     cl,BYTE PTR [edx-0x6435095e]
  4417fb:	xor    BYTE PTR [esi+0x51],dl
  4417fe:	pop    esp
  4417ff:	std    
  441800:	mov    al,BYTE PTR [edi]
  441802:	pushf  
  441803:	mov    al,0x74
  441805:	jae    0x44187a
  441807:	xor    esp,edx
  441809:	loope  0x441835
  44180b:	fidiv  DWORD PTR [edx-0x58]
  44180e:	(bad)  
  44180f:	aam    0x8a
  441811:	and    edi,DWORD PTR [eax+ebp*4+0x2f07eba3]
  441818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441819:	bound  edi,QWORD PTR [ebx-0x3a]
  44181c:	std    
  44181d:	sti    
  44181e:	mov    WORD PTR [esi+0x4d],fs
  441821:	mov    BYTE PTR [edi*8+0x250a9a21],al
  441828:	shr    DWORD PTR ds:0xfa7667a6,1
  44182e:	add    BYTE PTR [edx-0x6],cl
  441831:	and    edx,DWORD PTR ds:0x1f913f83
  441837:	pop    ds
  441838:	(bad)  
  441839:	repz call 0x6862:0x568a582f
  441841:	mov    ds:0xc066717c,eax
  441846:	inc    edi
  441847:	jbe    0x4418a4
  441849:	adc    eax,0xeca06b3f
  44184e:	jno    0x441802
  441850:	adc    al,0xd1
  441852:	popf   
  441853:	lds    ebp,FWORD PTR [ecx-0xea9e1c1]
  441859:	add    eax,0x5166ad12
  44185e:	jg     0x44180c
  441860:	daa    
  441861:	fchs   
  441863:	leave  
  441864:	inc    edi
  441865:	into   
  441866:	jecxz  0x44183e
  441868:	dec    edx
  441869:	mov    al,ds:0xa26505f4
  44186e:	xlat   BYTE PTR ds:[ebx]
  44186f:	cs jmp 0x44183f
  441872:	aam    0xc2
  441874:	in     eax,0xf5
  441876:	cwde   
  441877:	ja     0x44186f
  441879:	add    BYTE PTR [edx-0x1f],al
  44187c:	sub    ecx,edi
  44187e:	(bad)  
  44187f:	retf   
  441880:	les    ebp,FWORD PTR [edi]
  441882:	inc    edx
  441883:	cmp    ebp,DWORD PTR [edi-0x52668c66]
  441889:	pop    esi
  44188a:	fdiv   DWORD PTR [eax-0x1a785cad]
  441890:	lock (bad) 
  441892:	in     eax,0x1a
  441894:	ret    0xc84e
  441897:	(bad)  
  441898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441899:	(bad)  
  44189b:	adc    eax,0x274c9592
  4418a0:	scas   al,BYTE PTR es:[edi]
  4418a1:	getsec 
  4418a3:	pop    es
  4418a4:	(bad)
  4418a7:	and    edi,eax
  4418a9:	ja     0x441899
  4418ab:	fcom   QWORD PTR [ecx+ecx*1-0x61cdb822]
  4418b2:	push   edx
  4418b3:	sar    bl,1
  4418b5:	jb     0x44189c
  4418b7:	sub    al,0x67
  4418b9:	jl     0x4418db
  4418bb:	adc    cl,0x32
  4418be:	add    esi,DWORD PTR [ecx-0x6b]
  4418c1:	add    eax,0x9a2fdf81
  4418c6:	xchg   DWORD PTR [ecx+0x1d324b27],edx
  4418cc:	aam    0x19
  4418ce:	dec    esp
  4418cf:	push   ds
  4418d0:	test   eax,0x2fbd99b5
  4418d5:	adc    esp,ecx
  4418d7:	dec    ebp
  4418d8:	jne    0x44194b
  4418da:	iret   
  4418db:	fwait
  4418dc:	mov    ch,ch
  4418de:	gs push es
  4418e0:	ins    BYTE PTR es:[edi],dx
  4418e1:	ror    DWORD PTR [edx+0x5e3121b],cl
  4418e7:	mov    ch,0x36
  4418e9:	push   es
  4418ea:	jmp    0x5814dd1d
  4418ef:	out    0x24,eax
  4418f1:	lock push 0x7
  4418f4:	cmp    BYTE PTR [ebx*2+0x795e8d22],dh
  4418fb:	or     al,0x6c
  4418fd:	hlt    
  4418fe:	retf   0x8f2c
  441901:	out    0x85,al
  441903:	mov    eax,DWORD PTR [ecx-0x76]
  441906:	and    DWORD PTR [ebx-0x1e],ecx
  441909:	stc    
  44190a:	test   al,0x73
  44190c:	mov    bh,0x5e
  44190e:	mov    esi,0x96b611a3
  441913:	dec    esp
  441914:	lods   eax,DWORD PTR ds:[esi]
  441915:	add    ah,ah
  441917:	jb     0x44193b
  441919:	or     al,0x82
  44191b:	jl     0x441979
  44191d:	arpl   WORD PTR [edx-0x656c5dba],cx
  441923:	dec    esi
  441924:	jle    0x4418b2
  441926:	inc    edi
  441927:	mov    edx,0xdf5a115e
  44192c:	mov    edi,0x4c078bd2
  441931:	fcomp  st(2)
  441933:	setne  BYTE PTR [edx+0x151bc71c]
  44193a:	shr    DWORD PTR [eax],1
  44193c:	int    0xa9
  44193e:	xor    al,0x2f
  441940:	xor    ebx,esi
  441942:	push   ecx
  441943:	push   eax
  441944:	pop    edx
  441945:	push   cs
  441946:	jg     0x4418d6
  441948:	es gs gs adc ah,bl
  44194d:	sub    al,0x7f
  44194f:	xor    edx,DWORD PTR [esi+0x3bd6b86]
  441955:	inc    esi
  441956:	cli    
  441957:	shl    DWORD PTR [eax-0x3e104e29],cl
  44195d:	cmp    ecx,edx
  44195f:	pop    edi
  441960:	mul    dh
  441962:	or     ebx,ecx
  441964:	push   edi
  441965:	mov    DWORD PTR [edi+0xa],edx
  441968:	mov    al,ds:0x4b91d27d
  44196d:	inc    edx
  44196e:	inc    esi
  44196f:	cmp    DWORD PTR [edx+0x1ae0fd58],esp
  441975:	aas    
  441976:	sbb    BYTE PTR [eax],dl
  441978:	jg     0x4419ea
  44197a:	out    dx,al
  44197b:	push   edx
  44197c:	mov    ebp,0xfa4917c8
  441981:	call   FWORD PTR [esi-0x61]
  441984:	or     al,0x30
  441986:	mov    WORD PTR [edi+eiz*1-0x38db29c],cs
  44198d:	xchg   edx,eax
  44198e:	out    dx,al
  44198f:	jns    0x441a04
  441991:	xor    ebx,esi
  441993:	stc    
  441994:	adc    ebx,DWORD PTR [esi+esi*4]
  441997:	(bad)  
  441998:	bound  esi,QWORD PTR ds:[ebx]
  44199b:	xor    bl,BYTE PTR [ebx-0x6b7f2eca]
  4419a1:	mov    es,WORD PTR [esp+ebp*2+0x112a8b32]
  4419a8:	imul   edi,DWORD PTR [edx+0x5edad446],0x63
  4419af:	jb     0x441990
  4419b1:	adc    eax,0x8cc5440
  4419b6:	adc    eax,0xcab246d8
  4419bb:	repnz lods eax,DWORD PTR ds:[esi]
  4419bd:	(bad)  
  4419be:	jecxz  0x441a35
  4419c0:	lods   al,BYTE PTR ds:[esi]
  4419c1:	rcl    DWORD PTR [eax+0x1],cl
  4419c4:	xchg   ebx,eax
  4419c5:	fisub  WORD PTR [edx]
  4419c7:	sahf   
  4419c8:	pop    esp
  4419c9:	cmp    ah,ah
  4419cb:	ss jmp 0xff78:0xea0dca30
  4419d3:	and    eax,0x443df4
  4419d8:	jmp    DWORD PTR ds:0x443df8
  4419de:	jmp    DWORD PTR ds:0x443dfc
  4419e4:	jmp    DWORD PTR ds:0x443e00
  4419ea:	jmp    DWORD PTR ds:0x443e04
  4419f0:	jmp    DWORD PTR ds:0x443e08
  4419f6:	jmp    DWORD PTR ds:0x443e0c
  4419fc:	jmp    DWORD PTR ds:0x443e10
  441a02:	jmp    DWORD PTR ds:0x443e14
  441a08:	jmp    DWORD PTR ds:0x443e18
  441a0e:	jmp    DWORD PTR ds:0x443e1c
  441a14:	jmp    DWORD PTR ds:0x443e20
  441a1a:	jmp    DWORD PTR ds:0x443e24
  441a20:	jmp    DWORD PTR ds:0x443e28
  441a26:	jmp    DWORD PTR ds:0x443e2c
  441a2c:	jmp    DWORD PTR ds:0x443e30
  441a32:	jmp    DWORD PTR ds:0x443e34
  441a38:	jmp    DWORD PTR ds:0x443e38
  441a3e:	jmp    DWORD PTR ds:0x443e3c
  441a44:	jmp    DWORD PTR ds:0x443e40
  441a4a:	jmp    DWORD PTR ds:0x443e44
  441a50:	jmp    DWORD PTR ds:0x443e48
  441a56:	jmp    DWORD PTR ds:0x443e4c
  441a5c:	jmp    DWORD PTR ds:0x443e50
  441a62:	jmp    DWORD PTR ds:0x443e54
  441a68:	jmp    DWORD PTR ds:0x443e58
  441a6e:	jmp    DWORD PTR ds:0x443e5c
  441a74:	jmp    DWORD PTR ds:0x443e60
  441a7a:	jmp    DWORD PTR ds:0x443e64
  441a80:	jmp    DWORD PTR ds:0x443e68
  441a86:	jmp    DWORD PTR ds:0x443e6c
  441a8c:	jmp    DWORD PTR ds:0x443e70
  441a92:	jmp    DWORD PTR ds:0x443e74
  441a98:	jmp    DWORD PTR ds:0x443e78
  441a9e:	jmp    DWORD PTR ds:0x443e7c
  441aa4:	jmp    DWORD PTR ds:0x443e80
  441aaa:	jmp    DWORD PTR ds:0x443e84
  441ab0:	jmp    DWORD PTR ds:0x443e88
  441ab6:	jmp    DWORD PTR ds:0x443e8c
  441abc:	jmp    DWORD PTR ds:0x443e90
  441ac2:	jmp    DWORD PTR ds:0x443e94
  441ac8:	jmp    DWORD PTR ds:0x443e98
  441ace:	jmp    DWORD PTR ds:0x443e9c
  441ad4:	jmp    DWORD PTR ds:0x443ea0
  441ada:	jmp    DWORD PTR ds:0x443ea4
  441ae0:	jmp    DWORD PTR ds:0x443ea8
  441ae6:	jmp    DWORD PTR ds:0x443eac
  441aec:	jmp    DWORD PTR ds:0x443eb0
  441af2:	jmp    DWORD PTR ds:0x443eb4
  441af8:	jmp    DWORD PTR ds:0x443eb8
  441afe:	jmp    DWORD PTR ds:0x443ebc
  441b04:	jmp    DWORD PTR ds:0x443ec0
  441b0a:	jmp    DWORD PTR ds:0x443ec4
  441b10:	jmp    DWORD PTR ds:0x443ec8
  441b16:	jmp    DWORD PTR ds:0x443ecc
  441b1c:	jmp    DWORD PTR ds:0x443ed0
  441b22:	jmp    DWORD PTR ds:0x443ed4
  441b28:	jmp    DWORD PTR ds:0x443ed8
  441b2e:	jmp    DWORD PTR ds:0x443edc
  441b34:	jmp    DWORD PTR ds:0x443ee0
  441b3a:	jmp    DWORD PTR ds:0x443ee4
  441b40:	jmp    DWORD PTR ds:0x443ee8
  441b46:	jmp    DWORD PTR ds:0x443eec
  441b4c:	jmp    DWORD PTR ds:0x443ef0
  441b52:	jmp    DWORD PTR ds:0x443ef4
  441b58:	jmp    DWORD PTR ds:0x443ef8
  441b5e:	jmp    DWORD PTR ds:0x443efc
  441b64:	jmp    DWORD PTR ds:0x443f00
  441b6a:	jmp    DWORD PTR ds:0x443f04
  441b70:	jmp    DWORD PTR ds:0x443f08
  441b76:	jmp    DWORD PTR ds:0x443f0c
  441b7c:	jmp    DWORD PTR ds:0x443f10
  441b82:	jmp    DWORD PTR ds:0x443f14
  441b88:	jmp    DWORD PTR ds:0x443f18
  441b8e:	jmp    DWORD PTR ds:0x443f1c
  441b94:	jmp    DWORD PTR ds:0x443f20
  441b9a:	jmp    DWORD PTR ds:0x443f24
  441ba0:	jmp    DWORD PTR ds:0x443f28
  441ba6:	jmp    DWORD PTR ds:0x443f2c
  441bac:	jmp    DWORD PTR ds:0x443f30
  441bb2:	jmp    DWORD PTR ds:0x443f34
  441bb8:	jmp    DWORD PTR ds:0x443f38
  441bbe:	jmp    DWORD PTR ds:0x443f3c
  441bc4:	jmp    DWORD PTR ds:0x443f40
  441bca:	jmp    DWORD PTR ds:0x443f44
  441bd0:	jmp    DWORD PTR ds:0x443f48
  441bd6:	jmp    DWORD PTR ds:0x443f4c
  441bdc:	jmp    DWORD PTR ds:0x443f50
  441be2:	jmp    DWORD PTR ds:0x443f54
  441be8:	jmp    DWORD PTR ds:0x443f58
  441bee:	jmp    DWORD PTR ds:0x443f5c
  441bf4:	jmp    DWORD PTR ds:0x443f60
  441bfa:	jmp    DWORD PTR ds:0x443f64
  441c00:	jmp    DWORD PTR ds:0x443f68
  441c06:	jmp    DWORD PTR ds:0x443f6c
  441c0c:	jmp    DWORD PTR ds:0x443f70
  441c12:	jmp    DWORD PTR ds:0x443f74
  441c18:	jmp    DWORD PTR ds:0x443f78
  441c1e:	jmp    DWORD PTR ds:0x443f7c
  441c24:	jmp    DWORD PTR ds:0x443f80
  441c2a:	jmp    DWORD PTR ds:0x443f84
  441c30:	jmp    DWORD PTR ds:0x443f88
  441c36:	jmp    DWORD PTR ds:0x443f8c
  441c3c:	jmp    DWORD PTR ds:0x443f90
  441c42:	jmp    DWORD PTR ds:0x443f94
  441c48:	jmp    DWORD PTR ds:0x443f98
  441c4e:	jmp    DWORD PTR ds:0x443f9c
  441c54:	jmp    DWORD PTR ds:0x443fa0
  441c5a:	jmp    DWORD PTR ds:0x443fa4
  441c60:	jmp    DWORD PTR ds:0x443fa8
  441c66:	jmp    DWORD PTR ds:0x443fac
  441c6c:	jmp    DWORD PTR ds:0x443fb0
  441c72:	jmp    DWORD PTR ds:0x443fb4
  441c78:	jmp    DWORD PTR ds:0x443fb8
  441c7e:	jmp    DWORD PTR ds:0x443fbc
  441c84:	jmp    DWORD PTR ds:0x443fc0
  441c8a:	jmp    DWORD PTR ds:0x443fc4
  441c90:	jmp    DWORD PTR ds:0x443fc8
  441c96:	jmp    DWORD PTR ds:0x443fcc
  441c9c:	jmp    DWORD PTR ds:0x443fd0
  441ca2:	jmp    DWORD PTR ds:0x443fd4
  441ca8:	jmp    DWORD PTR ds:0x443fd8
  441cae:	jmp    DWORD PTR ds:0x443fdc
  441cb4:	jmp    DWORD PTR ds:0x443fe0
  441cba:	jmp    DWORD PTR ds:0x443fe4
  441cc0:	jmp    DWORD PTR ds:0x443fe8
  441cc6:	jmp    DWORD PTR ds:0x443fec
  441ccc:	jmp    DWORD PTR ds:0x443ff0
  441cd2:	jmp    DWORD PTR ds:0x443ff4
  441cd8:	jmp    DWORD PTR ds:0x443ff8
  441cde:	jmp    DWORD PTR ds:0x443ffc
  441ce4:	jmp    DWORD PTR ds:0x444000
  441cea:	jmp    DWORD PTR ds:0x444004
  441cf0:	jmp    DWORD PTR ds:0x444008
  441cf6:	jmp    DWORD PTR ds:0x44400c
  441cfc:	jmp    DWORD PTR ds:0x444010
  441d02:	jmp    DWORD PTR ds:0x444014
  441d08:	jmp    DWORD PTR ds:0x444018
  441d0e:	jmp    DWORD PTR ds:0x44401c
  441d14:	jmp    DWORD PTR ds:0x444020
  441d1a:	jmp    DWORD PTR ds:0x444024
  441d20:	jmp    DWORD PTR ds:0x444028
  441d26:	jmp    DWORD PTR ds:0x44402c
  441d2c:	jmp    DWORD PTR ds:0x444030
  441d32:	jmp    DWORD PTR ds:0x444034
  441d38:	jmp    DWORD PTR ds:0x444038
  441d3e:	jmp    DWORD PTR ds:0x44403c
  441d44:	jmp    DWORD PTR ds:0x444040
  441d4a:	jmp    DWORD PTR ds:0x444044
  441d50:	jmp    DWORD PTR ds:0x444048
  441d56:	jmp    DWORD PTR ds:0x44404c
  441d5c:	jmp    DWORD PTR ds:0x444050
  441d62:	jmp    DWORD PTR ds:0x444054
  441d68:	jmp    DWORD PTR ds:0x444058
  441d6e:	jmp    DWORD PTR ds:0x44405c
  441d74:	jmp    DWORD PTR ds:0x444060
  441d7a:	jmp    DWORD PTR ds:0x444064
  441d80:	jmp    DWORD PTR ds:0x444068
  441d86:	jmp    DWORD PTR ds:0x44406c
  441d8c:	jmp    DWORD PTR ds:0x444070
  441d92:	jmp    DWORD PTR ds:0x444074
  441d98:	jmp    DWORD PTR ds:0x444078
  441d9e:	jmp    DWORD PTR ds:0x44407c
  441da4:	jmp    DWORD PTR ds:0x444080
  441daa:	jmp    DWORD PTR ds:0x444084
  441db0:	jmp    DWORD PTR ds:0x444088
  441db6:	jmp    DWORD PTR ds:0x44408c
  441dbc:	jmp    DWORD PTR ds:0x444090
  441dc2:	jmp    DWORD PTR ds:0x444094
  441dc8:	jmp    DWORD PTR ds:0x444098
  441dce:	jmp    DWORD PTR ds:0x44409c
  441dd4:	jmp    DWORD PTR ds:0x4440a0
  441dda:	jmp    DWORD PTR ds:0x4440a4
  441de0:	jmp    DWORD PTR ds:0x4440a8
  441de6:	jmp    DWORD PTR ds:0x4440ac
  441dec:	jmp    DWORD PTR ds:0x4440b0
  441df2:	jmp    DWORD PTR ds:0x4440b4
  441df8:	jmp    DWORD PTR ds:0x4440b8
  441dfe:	jmp    DWORD PTR ds:0x4440c0
  441e04:	jmp    DWORD PTR ds:0x4440c4
  441e0a:	jmp    DWORD PTR ds:0x4440c8
  441e10:	jmp    DWORD PTR ds:0x4440cc
  441e16:	jmp    DWORD PTR ds:0x4440d0
  441e1c:	jmp    DWORD PTR ds:0x4440d4
  441e22:	jmp    DWORD PTR ds:0x4440d8
  441e28:	jmp    DWORD PTR ds:0x4440dc
  441e2e:	jmp    DWORD PTR ds:0x4440e0
  441e34:	jmp    DWORD PTR ds:0x4440e4
  441e3a:	jmp    DWORD PTR ds:0x4440e8
  441e40:	jmp    DWORD PTR ds:0x4440ec
  441e46:	jmp    DWORD PTR ds:0x4440f0
  441e4c:	jmp    DWORD PTR ds:0x4440f4
  441e52:	jmp    DWORD PTR ds:0x4440f8
  441e58:	jmp    DWORD PTR ds:0x4440fc
  441e5e:	jmp    DWORD PTR ds:0x444100
  441e64:	jmp    DWORD PTR ds:0x444104
  441e6a:	jmp    DWORD PTR ds:0x444108
  441e70:	jmp    DWORD PTR ds:0x44410c
  441e76:	jmp    DWORD PTR ds:0x444110
  441e7c:	jmp    DWORD PTR ds:0x444114
  441e82:	jmp    DWORD PTR ds:0x444118
  441e88:	jmp    DWORD PTR ds:0x44411c
  441e8e:	jmp    DWORD PTR ds:0x444120
  441e94:	jmp    DWORD PTR ds:0x444124
  441e9a:	jmp    DWORD PTR ds:0x444128
  441ea0:	jmp    DWORD PTR ds:0x44412c
  441ea6:	jmp    DWORD PTR ds:0x444130
  441eac:	jmp    DWORD PTR ds:0x444134
  441eb2:	jmp    DWORD PTR ds:0x444138
  441eb8:	jmp    DWORD PTR ds:0x44413c
  441ebe:	jmp    DWORD PTR ds:0x444140
  441ec4:	jmp    DWORD PTR ds:0x444144
  441eca:	jmp    DWORD PTR ds:0x444148
  441ed0:	jmp    DWORD PTR ds:0x44414c
  441ed6:	jmp    DWORD PTR ds:0x444150
  441edc:	jmp    DWORD PTR ds:0x444154
  441ee2:	jmp    DWORD PTR ds:0x444158
  441ee8:	jmp    DWORD PTR ds:0x44415c
  441eee:	jmp    DWORD PTR ds:0x444160
  441ef4:	jmp    DWORD PTR ds:0x444164
  441efa:	jmp    DWORD PTR ds:0x444168
  441f00:	jmp    DWORD PTR ds:0x44416c
  441f06:	jmp    DWORD PTR ds:0x444170
  441f0c:	jmp    DWORD PTR ds:0x444174
  441f12:	jmp    DWORD PTR ds:0x444178
  441f18:	jmp    DWORD PTR ds:0x44417c
  441f1e:	jmp    DWORD PTR ds:0x444180
  441f24:	jmp    DWORD PTR ds:0x444184
  441f2a:	jmp    DWORD PTR ds:0x444188
  441f30:	jmp    DWORD PTR ds:0x44418c
  441f36:	jmp    DWORD PTR ds:0x444190
  441f3c:	jmp    DWORD PTR ds:0x444194
  441f42:	jmp    DWORD PTR ds:0x444198
  441f48:	jmp    DWORD PTR ds:0x44419c
  441f4e:	jmp    DWORD PTR ds:0x4441a0
  441f54:	jmp    DWORD PTR ds:0x4441a4
  441f5a:	jmp    DWORD PTR ds:0x4441a8
  441f60:	jmp    DWORD PTR ds:0x4441ac
  441f66:	jmp    DWORD PTR ds:0x4441b0
  441f6c:	jmp    DWORD PTR ds:0x4441b4
  441f72:	jmp    DWORD PTR ds:0x4441b8
  441f78:	jmp    DWORD PTR ds:0x4441bc
  441f7e:	jmp    DWORD PTR ds:0x4441c0
  441f84:	jmp    DWORD PTR ds:0x4441c4
  441f8a:	jmp    DWORD PTR ds:0x4441c8
  441f90:	jmp    DWORD PTR ds:0x4441cc
  441f96:	jmp    DWORD PTR ds:0x4441d0
  441f9c:	jmp    DWORD PTR ds:0x4441d4
  441fa2:	jmp    DWORD PTR ds:0x4441d8
  441fa8:	jmp    DWORD PTR ds:0x4441dc
  441fae:	jmp    DWORD PTR ds:0x4441e0
  441fb4:	jmp    DWORD PTR ds:0x4441e4
  441fba:	jmp    DWORD PTR ds:0x4441e8
  441fc0:	jmp    DWORD PTR ds:0x4441ec
  441fc6:	jmp    DWORD PTR ds:0x4441f0
  441fcc:	jmp    DWORD PTR ds:0x4441f4
  441fd2:	jmp    DWORD PTR ds:0x4441f8
  441fd8:	jmp    DWORD PTR ds:0x4441fc
  441fde:	jmp    DWORD PTR ds:0x444200
  441fe4:	jmp    DWORD PTR ds:0x444204
  441fea:	jmp    DWORD PTR ds:0x444208
  441ff0:	jmp    DWORD PTR ds:0x44420c
  441ff6:	jmp    DWORD PTR ds:0x444210
  441ffc:	jmp    DWORD PTR ds:0x444214
  442002:	jmp    DWORD PTR ds:0x444218
  442008:	jmp    DWORD PTR ds:0x44421c
  44200e:	jmp    DWORD PTR ds:0x444220
  442014:	jmp    DWORD PTR ds:0x444224
  44201a:	jmp    DWORD PTR ds:0x444228
  442020:	jmp    DWORD PTR ds:0x44422c
  442026:	jmp    DWORD PTR ds:0x444230
  44202c:	jmp    DWORD PTR ds:0x444234
  442032:	jmp    DWORD PTR ds:0x444238
  442038:	jmp    DWORD PTR ds:0x44423c
  44203e:	jmp    DWORD PTR ds:0x444240
  442044:	jmp    DWORD PTR ds:0x444244
  44204a:	jmp    DWORD PTR ds:0x444248
  442050:	jmp    DWORD PTR ds:0x44424c
  442056:	jmp    DWORD PTR ds:0x444250
  44205c:	jmp    DWORD PTR ds:0x444254
  442062:	jmp    DWORD PTR ds:0x444258
  442068:	jmp    DWORD PTR ds:0x44425c
  44206e:	jmp    DWORD PTR ds:0x444260
  442074:	jmp    DWORD PTR ds:0x444264
  44207a:	jmp    DWORD PTR ds:0x444268
  442080:	jmp    DWORD PTR ds:0x44426c
  442086:	jmp    DWORD PTR ds:0x444270
  44208c:	jmp    DWORD PTR ds:0x444274
  442092:	jmp    DWORD PTR ds:0x444278
  442098:	jmp    DWORD PTR ds:0x44427c
  44209e:	jmp    DWORD PTR ds:0x444280
  4420a4:	jmp    DWORD PTR ds:0x444284
  4420aa:	jmp    DWORD PTR ds:0x444288
  4420b0:	jmp    DWORD PTR ds:0x44428c
  4420b6:	jmp    DWORD PTR ds:0x444290
  4420bc:	jmp    DWORD PTR ds:0x444294
  4420c2:	jmp    DWORD PTR ds:0x444298
  4420c8:	jmp    DWORD PTR ds:0x44429c
  4420ce:	jmp    DWORD PTR ds:0x4442a0
  4420d4:	jmp    DWORD PTR ds:0x4442a4
  4420da:	jmp    DWORD PTR ds:0x4442a8
  4420e0:	jmp    DWORD PTR ds:0x4442ac
  4420e6:	jmp    DWORD PTR ds:0x4442b0
  4420ec:	jmp    DWORD PTR ds:0x4442b4
  4420f2:	jmp    DWORD PTR ds:0x4442b8
  4420f8:	jmp    DWORD PTR ds:0x4442bc
  4420fe:	jmp    DWORD PTR ds:0x4442c0
  442104:	jmp    DWORD PTR ds:0x4442c4
  44210a:	jmp    DWORD PTR ds:0x4442c8
  442110:	jmp    DWORD PTR ds:0x4442cc
  442116:	jmp    DWORD PTR ds:0x4442d0
  44211c:	jmp    DWORD PTR ds:0x4442d4
  442122:	jmp    DWORD PTR ds:0x4442d8
  442128:	jmp    DWORD PTR ds:0x4442dc
  44212e:	jmp    DWORD PTR ds:0x4442e0
  442134:	jmp    DWORD PTR ds:0x4442e4
  44213a:	jmp    DWORD PTR ds:0x4442e8
  442140:	jmp    DWORD PTR ds:0x4442ec
  442146:	jmp    DWORD PTR ds:0x4442f0
  44214c:	jmp    DWORD PTR ds:0x4442f4
  442152:	jmp    DWORD PTR ds:0x4442f8
  442158:	jmp    DWORD PTR ds:0x4442fc
  44215e:	jmp    DWORD PTR ds:0x444300
  442164:	jmp    DWORD PTR ds:0x444304
  44216a:	jmp    DWORD PTR ds:0x444308
  442170:	jmp    DWORD PTR ds:0x44430c
  442176:	jmp    DWORD PTR ds:0x444310
  44217c:	jmp    DWORD PTR ds:0x444314
  442182:	jmp    DWORD PTR ds:0x444318
  442188:	jmp    DWORD PTR ds:0x44431c
  44218e:	jmp    DWORD PTR ds:0x444320
  442194:	jmp    DWORD PTR ds:0x444324
  44219a:	jmp    DWORD PTR ds:0x444328
  4421a0:	jmp    DWORD PTR ds:0x44432c
  4421a6:	jmp    DWORD PTR ds:0x444330
  4421ac:	jmp    DWORD PTR ds:0x444334
  4421b2:	jmp    DWORD PTR ds:0x444338
  4421b8:	jmp    DWORD PTR ds:0x44433c
  4421be:	jmp    DWORD PTR ds:0x444340
  4421c4:	jmp    DWORD PTR ds:0x444344
  4421ca:	jmp    DWORD PTR ds:0x444348
  4421d0:	jmp    DWORD PTR ds:0x44434c
  4421d6:	jmp    DWORD PTR ds:0x444350
  4421dc:	jmp    DWORD PTR ds:0x444354
  4421e2:	jmp    DWORD PTR ds:0x444358
  4421e8:	jmp    DWORD PTR ds:0x44435c
  4421ee:	jmp    DWORD PTR ds:0x444360
  4421f4:	jmp    DWORD PTR ds:0x444364
  4421fa:	jmp    DWORD PTR ds:0x44436c
  442200:	jmp    DWORD PTR ds:0x444370
  442206:	jmp    DWORD PTR ds:0x444374
  44220c:	jmp    DWORD PTR ds:0x444378
  442212:	jmp    DWORD PTR ds:0x44437c
  442218:	jmp    DWORD PTR ds:0x444380
  44221e:	jmp    DWORD PTR ds:0x444384
  442224:	jmp    DWORD PTR ds:0x444388
  44222a:	jmp    DWORD PTR ds:0x444390
  442230:	jmp    DWORD PTR ds:0x444398
  442236:	jmp    DWORD PTR ds:0x44439c
  44223c:	jmp    DWORD PTR ds:0x4443a0
  442242:	jmp    DWORD PTR ds:0x4443a4
  442248:	jmp    DWORD PTR ds:0x4443a8
  44224e:	jmp    DWORD PTR ds:0x4443ac
  442254:	jmp    DWORD PTR ds:0x4443b0
  44225a:	jmp    DWORD PTR ds:0x4443b4
  442260:	jmp    DWORD PTR ds:0x4443b8
  442266:	jmp    DWORD PTR ds:0x4443bc
  44226c:	jmp    DWORD PTR ds:0x4443c0
  442272:	jmp    DWORD PTR ds:0x4443c4
  442278:	jmp    DWORD PTR ds:0x4443c8
  44227e:	jmp    DWORD PTR ds:0x4443cc
  442284:	jmp    DWORD PTR ds:0x4443d0
  44228a:	jmp    DWORD PTR ds:0x4443d4
  442290:	jmp    DWORD PTR ds:0x4443d8
  442296:	jmp    DWORD PTR ds:0x4443dc
  44229c:	jmp    DWORD PTR ds:0x4443e0
  4422a2:	jmp    DWORD PTR ds:0x4443e4
  4422a8:	jmp    DWORD PTR ds:0x4443e8
  4422ae:	jmp    DWORD PTR ds:0x4443f0
  4422b4:	jmp    DWORD PTR ds:0x4443f8
  4422ba:	jmp    DWORD PTR ds:0x4443fc
  4422c0:	jmp    DWORD PTR ds:0x444400
  4422c6:	jmp    DWORD PTR ds:0x444404
  4422cc:	jmp    DWORD PTR ds:0x444408
  4422d2:	jmp    DWORD PTR ds:0x44440c
  4422d8:	jmp    DWORD PTR ds:0x444410
  4422de:	jmp    DWORD PTR ds:0x444414
  4422e4:	jmp    DWORD PTR ds:0x444418
  4422ea:	jmp    DWORD PTR ds:0x44441c
  4422f0:	jmp    DWORD PTR ds:0x444420
  4422f6:	jmp    DWORD PTR ds:0x444424
  4422fc:	jmp    DWORD PTR ds:0x444428
  442302:	jmp    DWORD PTR ds:0x44442c
  442308:	jmp    DWORD PTR ds:0x444430
  44230e:	jmp    DWORD PTR ds:0x444434
  442314:	jmp    DWORD PTR ds:0x444438
  44231a:	jmp    DWORD PTR ds:0x44443c
  442320:	jmp    DWORD PTR ds:0x444440
  442326:	jmp    DWORD PTR ds:0x444444
  44232c:	jmp    DWORD PTR ds:0x444448
  442332:	jmp    DWORD PTR ds:0x44444c
  442338:	jmp    DWORD PTR ds:0x444450
  44233e:	jmp    DWORD PTR ds:0x444454
  442344:	jmp    DWORD PTR ds:0x444458
  44234a:	jmp    DWORD PTR ds:0x44445c
  442350:	jmp    DWORD PTR ds:0x444460
  442356:	jmp    DWORD PTR ds:0x444464
  44235c:	jmp    DWORD PTR ds:0x444468
  442362:	jmp    DWORD PTR ds:0x44446c
  442368:	jmp    DWORD PTR ds:0x444470
  44236e:	jmp    DWORD PTR ds:0x444474
  442374:	jmp    DWORD PTR ds:0x444478
  44237a:	jmp    DWORD PTR ds:0x44447c
  442380:	jmp    DWORD PTR ds:0x444480
  442386:	jmp    DWORD PTR ds:0x444484
  44238c:	jmp    DWORD PTR ds:0x444488
  442392:	jmp    DWORD PTR ds:0x44448c
  442398:	jmp    DWORD PTR ds:0x444490
  44239e:	jmp    DWORD PTR ds:0x444494
  4423a4:	jmp    DWORD PTR ds:0x444498
  4423aa:	jmp    DWORD PTR ds:0x44449c
  4423b0:	jmp    DWORD PTR ds:0x4444a0
  4423b6:	jmp    DWORD PTR ds:0x4444a4
  4423bc:	jmp    DWORD PTR ds:0x4444a8
  4423c2:	jmp    DWORD PTR ds:0x4444ac
  4423c8:	jmp    DWORD PTR ds:0x4444b0
  4423ce:	jmp    DWORD PTR ds:0x4444b4
  4423d4:	jmp    DWORD PTR ds:0x4444b8
  4423da:	jmp    DWORD PTR ds:0x4444bc
  4423e0:	jmp    DWORD PTR ds:0x4444c0
  4423e6:	jmp    DWORD PTR ds:0x4444c4
  4423ec:	jmp    DWORD PTR ds:0x4444c8
  4423f2:	jmp    DWORD PTR ds:0x4444cc
  4423f8:	jmp    DWORD PTR ds:0x4444d0
  4423fe:	jmp    DWORD PTR ds:0x4444d4
  442404:	jmp    DWORD PTR ds:0x4444d8
  44240a:	jmp    DWORD PTR ds:0x4444dc
  442410:	jmp    DWORD PTR ds:0x4444e0
  442416:	jmp    DWORD PTR ds:0x4444e4
  44241c:	jmp    DWORD PTR ds:0x4444e8
  442422:	jmp    DWORD PTR ds:0x4444ec
  442428:	jmp    DWORD PTR ds:0x4444f0
  44242e:	jmp    DWORD PTR ds:0x4444f4
  442434:	jmp    DWORD PTR ds:0x4444f8
  44243a:	jmp    DWORD PTR ds:0x4444fc
  442440:	jmp    DWORD PTR ds:0x444500
  442446:	jmp    DWORD PTR ds:0x444504
  44244c:	jmp    DWORD PTR ds:0x444508
  442452:	jmp    DWORD PTR ds:0x44450c
  442458:	jmp    DWORD PTR ds:0x444510
  44245e:	jmp    DWORD PTR ds:0x444514
  442464:	jmp    DWORD PTR ds:0x444518
  44246a:	jmp    DWORD PTR ds:0x44451c
  442470:	jmp    DWORD PTR ds:0x444520
  442476:	jmp    DWORD PTR ds:0x444524
  44247c:	jmp    DWORD PTR ds:0x444528
  442482:	jmp    DWORD PTR ds:0x44452c
  442488:	jmp    DWORD PTR ds:0x444530
  44248e:	jmp    DWORD PTR ds:0x444534
  442494:	jmp    DWORD PTR ds:0x444538
  44249a:	jmp    DWORD PTR ds:0x44453c
  4424a0:	jmp    DWORD PTR ds:0x444540
  4424a6:	jmp    DWORD PTR ds:0x444544
  4424ac:	jmp    DWORD PTR ds:0x444548
  4424b2:	jmp    DWORD PTR ds:0x44454c
  4424b8:	jmp    DWORD PTR ds:0x444550
  4424be:	jmp    DWORD PTR ds:0x444554
  4424c4:	jmp    DWORD PTR ds:0x444558
  4424ca:	jmp    DWORD PTR ds:0x44455c
  4424d0:	jmp    DWORD PTR ds:0x444560
  4424d6:	jmp    DWORD PTR ds:0x444564
  4424dc:	jmp    DWORD PTR ds:0x444568
  4424e2:	jmp    DWORD PTR ds:0x44456c
  4424e8:	jmp    DWORD PTR ds:0x444570
  4424ee:	jmp    DWORD PTR ds:0x444574
  4424f4:	jmp    DWORD PTR ds:0x444578
  4424fa:	jmp    DWORD PTR ds:0x44457c
  442500:	jmp    DWORD PTR ds:0x444580
  442506:	jmp    DWORD PTR ds:0x444584
  44250c:	jmp    DWORD PTR ds:0x444588
  442512:	jmp    DWORD PTR ds:0x44458c
  442518:	jmp    DWORD PTR ds:0x444590
  44251e:	jmp    DWORD PTR ds:0x444594
  442524:	jmp    DWORD PTR ds:0x444598
  44252a:	jmp    DWORD PTR ds:0x44459c
  442530:	jmp    DWORD PTR ds:0x4445a0
  442536:	jmp    DWORD PTR ds:0x4445a4
  44253c:	jmp    DWORD PTR ds:0x4445a8
  442542:	jmp    DWORD PTR ds:0x4445ac
  442548:	jmp    DWORD PTR ds:0x4445b0
  44254e:	jmp    DWORD PTR ds:0x4445b4
  442554:	jmp    DWORD PTR ds:0x4445b8
  44255a:	jmp    DWORD PTR ds:0x4445bc
  442560:	jmp    DWORD PTR ds:0x4445c0
  442566:	jmp    DWORD PTR ds:0x4445c4
  44256c:	jmp    DWORD PTR ds:0x4445c8
  442572:	jmp    DWORD PTR ds:0x4445cc
  442578:	jmp    DWORD PTR ds:0x4445d0
  44257e:	jmp    DWORD PTR ds:0x4445d4
  442584:	jmp    DWORD PTR ds:0x4445d8
  44258a:	jmp    DWORD PTR ds:0x4445dc
  442590:	jmp    DWORD PTR ds:0x4445e0
  442596:	jmp    DWORD PTR ds:0x4445e4
  44259c:	jmp    DWORD PTR ds:0x4445e8
  4425a2:	jmp    DWORD PTR ds:0x4445ec
  4425a8:	jmp    DWORD PTR ds:0x4445f0
  4425ae:	jmp    DWORD PTR ds:0x4445f4
  4425b4:	jmp    DWORD PTR ds:0x4445f8
  4425ba:	jmp    DWORD PTR ds:0x4445fc
  4425c0:	jmp    DWORD PTR ds:0x444600
  4425c6:	jmp    DWORD PTR ds:0x444604
  4425cc:	jmp    DWORD PTR ds:0x444608
  4425d2:	jmp    DWORD PTR ds:0x44460c
  4425d8:	jmp    DWORD PTR ds:0x444610
  4425de:	jmp    DWORD PTR ds:0x444614
  4425e4:	jmp    DWORD PTR ds:0x444618
  4425ea:	jmp    DWORD PTR ds:0x444620
  4425f0:	jmp    DWORD PTR ds:0x444624
  4425f6:	jmp    DWORD PTR ds:0x444628
  4425fc:	jmp    DWORD PTR ds:0x44462c
  442602:	jmp    DWORD PTR ds:0x444630
  442608:	jmp    DWORD PTR ds:0x444634
  44260e:	jmp    DWORD PTR ds:0x444638
  442614:	jmp    DWORD PTR ds:0x44463c
  44261a:	jmp    DWORD PTR ds:0x444640
  442620:	jmp    DWORD PTR ds:0x444644
  442626:	jmp    DWORD PTR ds:0x444648
  44262c:	jmp    DWORD PTR ds:0x44464c
  442632:	jmp    DWORD PTR ds:0x444650
  442638:	jmp    DWORD PTR ds:0x444654
  44263e:	jmp    DWORD PTR ds:0x444658
  442644:	jmp    DWORD PTR ds:0x44465c
  44264a:	jmp    DWORD PTR ds:0x444660
  442650:	jmp    DWORD PTR ds:0x444664
  442656:	jmp    DWORD PTR ds:0x444668
  44265c:	jmp    DWORD PTR ds:0x44466c
  442662:	jmp    DWORD PTR ds:0x444670
  442668:	jmp    DWORD PTR ds:0x444674
  44266e:	jmp    DWORD PTR ds:0x444678
  442674:	jmp    DWORD PTR ds:0x44467c
  44267a:	jmp    DWORD PTR ds:0x444680
  442680:	jmp    DWORD PTR ds:0x444684
  442686:	jmp    DWORD PTR ds:0x444688
  44268c:	jmp    DWORD PTR ds:0x44468c
  442692:	jmp    DWORD PTR ds:0x444690
  442698:	jmp    DWORD PTR ds:0x444694
  44269e:	jmp    DWORD PTR ds:0x444698
  4426a4:	jmp    DWORD PTR ds:0x44469c
  4426aa:	jmp    DWORD PTR ds:0x4446a0
  4426b0:	jmp    DWORD PTR ds:0x4446a4
  4426b6:	jmp    DWORD PTR ds:0x4446a8
  4426bc:	jmp    DWORD PTR ds:0x4446ac
  4426c2:	jmp    DWORD PTR ds:0x4446b0
  4426c8:	jmp    DWORD PTR ds:0x4446b4
  4426ce:	jmp    DWORD PTR ds:0x4446b8
  4426d4:	jmp    DWORD PTR ds:0x4446bc
  4426da:	jmp    DWORD PTR ds:0x4446c0
  4426e0:	jmp    DWORD PTR ds:0x4446c4
  4426e6:	jmp    DWORD PTR ds:0x4446c8
  4426ec:	jmp    DWORD PTR ds:0x4446cc
  4426f2:	jmp    DWORD PTR ds:0x4446d0
  4426f8:	jmp    DWORD PTR ds:0x4446d4
  4426fe:	jmp    DWORD PTR ds:0x4446d8
  442704:	jmp    DWORD PTR ds:0x4446dc
  44270a:	jmp    DWORD PTR ds:0x4446e0
  442710:	jmp    DWORD PTR ds:0x4446e4
  442716:	jmp    DWORD PTR ds:0x4446e8
  44271c:	jmp    DWORD PTR ds:0x4446ec
  442722:	jmp    DWORD PTR ds:0x4446f0
  442728:	jmp    DWORD PTR ds:0x4446f4
  44272e:	jmp    DWORD PTR ds:0x4446f8
  442734:	jmp    DWORD PTR ds:0x4446fc
  44273a:	jmp    DWORD PTR ds:0x444700
  442740:	jmp    DWORD PTR ds:0x444704
  442746:	jmp    DWORD PTR ds:0x444708
  44274c:	jmp    DWORD PTR ds:0x44470c
  442752:	jmp    DWORD PTR ds:0x444710
  442758:	jmp    DWORD PTR ds:0x444714
  44275e:	jmp    DWORD PTR ds:0x444718
  442764:	jmp    DWORD PTR ds:0x44471c
  44276a:	jmp    DWORD PTR ds:0x444720
  442770:	jmp    DWORD PTR ds:0x444724
  442776:	jmp    DWORD PTR ds:0x444728
  44277c:	jmp    DWORD PTR ds:0x44472c
  442782:	jmp    DWORD PTR ds:0x444730
  442788:	jmp    DWORD PTR ds:0x444734
  44278e:	jmp    DWORD PTR ds:0x444738
  442794:	jmp    DWORD PTR ds:0x44473c
  44279a:	jmp    DWORD PTR ds:0x444740
  4427a0:	jmp    DWORD PTR ds:0x444744
  4427a6:	jmp    DWORD PTR ds:0x444748
  4427ac:	jmp    DWORD PTR ds:0x44474c
  4427b2:	jmp    DWORD PTR ds:0x444750
  4427b8:	jmp    DWORD PTR ds:0x444754
  4427be:	jmp    DWORD PTR ds:0x444758
  4427c4:	jmp    DWORD PTR ds:0x44475c
  4427ca:	jmp    DWORD PTR ds:0x444760
  4427d0:	jmp    DWORD PTR ds:0x444764
  4427d6:	jmp    DWORD PTR ds:0x444768
  4427dc:	jmp    DWORD PTR ds:0x44476c
  4427e2:	jmp    DWORD PTR ds:0x444770
  4427e8:	jmp    DWORD PTR ds:0x444774
  4427ee:	jmp    DWORD PTR ds:0x444778
  4427f4:	jmp    DWORD PTR ds:0x44477c
  4427fa:	jmp    DWORD PTR ds:0x444780
  442800:	jmp    DWORD PTR ds:0x444784
  442806:	jmp    DWORD PTR ds:0x444788
  44280c:	jmp    DWORD PTR ds:0x44478c
  442812:	jmp    DWORD PTR ds:0x444790
  442818:	jmp    DWORD PTR ds:0x444794
  44281e:	jmp    DWORD PTR ds:0x444798
  442824:	jmp    DWORD PTR ds:0x44479c
  44282a:	jmp    DWORD PTR ds:0x4447a0
  442830:	jmp    DWORD PTR ds:0x4447a4
  442836:	jmp    DWORD PTR ds:0x4447a8
  44283c:	jmp    DWORD PTR ds:0x4447ac
  442842:	jmp    DWORD PTR ds:0x4447b0
  442848:	jmp    DWORD PTR ds:0x4447b4
  44284e:	jmp    DWORD PTR ds:0x4447b8
  442854:	jmp    DWORD PTR ds:0x4447bc
  44285a:	jmp    DWORD PTR ds:0x4447c0
  442860:	jmp    DWORD PTR ds:0x4447c4
  442866:	jmp    DWORD PTR ds:0x4447c8
  44286c:	jmp    DWORD PTR ds:0x4447cc
  442872:	jmp    DWORD PTR ds:0x4447d0
  442878:	jmp    DWORD PTR ds:0x4447d4
  44287e:	jmp    DWORD PTR ds:0x4447d8
  442884:	jmp    DWORD PTR ds:0x4447dc
  44288a:	jmp    DWORD PTR ds:0x4447e0
  442890:	jmp    DWORD PTR ds:0x4447e4
  442896:	jmp    DWORD PTR ds:0x4447e8
  44289c:	jmp    DWORD PTR ds:0x4447ec
  4428a2:	jmp    DWORD PTR ds:0x4447f0
  4428a8:	jmp    DWORD PTR ds:0x4447f4
  4428ae:	jmp    DWORD PTR ds:0x4447f8
  4428b4:	jmp    DWORD PTR ds:0x4447fc
  4428ba:	jmp    DWORD PTR ds:0x444800
  4428c0:	jmp    DWORD PTR ds:0x444804
  4428c6:	jmp    DWORD PTR ds:0x444808
  4428cc:	jmp    DWORD PTR ds:0x44480c
  4428d2:	jmp    DWORD PTR ds:0x444810
  4428d8:	jmp    DWORD PTR ds:0x444814
  4428de:	jmp    DWORD PTR ds:0x444818
  4428e4:	jmp    DWORD PTR ds:0x44481c
  4428ea:	jmp    DWORD PTR ds:0x444820
  4428f0:	jmp    DWORD PTR ds:0x444824
  4428f6:	jmp    DWORD PTR ds:0x444828
  4428fc:	jmp    DWORD PTR ds:0x44482c
  442902:	jmp    DWORD PTR ds:0x444830
  442908:	jmp    DWORD PTR ds:0x444834
  44290e:	jmp    DWORD PTR ds:0x444838
  442914:	jmp    DWORD PTR ds:0x44483c
  44291a:	jmp    DWORD PTR ds:0x444840
  442920:	jmp    DWORD PTR ds:0x444844
  442926:	jmp    DWORD PTR ds:0x444848
  44292c:	jmp    DWORD PTR ds:0x44484c
  442932:	jmp    DWORD PTR ds:0x444850
  442938:	jmp    DWORD PTR ds:0x444854
  44293e:	jmp    DWORD PTR ds:0x444858
  442944:	jmp    DWORD PTR ds:0x44485c
  44294a:	jmp    DWORD PTR ds:0x444860
  442950:	jmp    DWORD PTR ds:0x444864
  442956:	jmp    DWORD PTR ds:0x444868
  44295c:	jmp    DWORD PTR ds:0x44486c
  442962:	jmp    DWORD PTR ds:0x444870
  442968:	jmp    DWORD PTR ds:0x444874
  44296e:	jmp    DWORD PTR ds:0x444878
  442974:	jmp    DWORD PTR ds:0x44487c
  44297a:	jmp    DWORD PTR ds:0x444884
  442980:	jmp    DWORD PTR ds:0x444888
  442986:	jmp    DWORD PTR ds:0x44488c
  44298c:	jmp    DWORD PTR ds:0x444890
  442992:	jmp    DWORD PTR ds:0x444894
  442998:	jmp    DWORD PTR ds:0x444898
  44299e:	jmp    DWORD PTR ds:0x44489c
  4429a4:	jmp    DWORD PTR ds:0x4448a0
  4429aa:	jmp    DWORD PTR ds:0x4448a4
  4429b0:	jmp    DWORD PTR ds:0x4448a8
  4429b6:	jmp    DWORD PTR ds:0x4448ac
  4429bc:	jmp    DWORD PTR ds:0x4448b0
  4429c2:	jmp    DWORD PTR ds:0x4448b4
  4429c8:	jmp    DWORD PTR ds:0x4448b8
  4429ce:	jmp    DWORD PTR ds:0x4448bc
  4429d4:	jmp    DWORD PTR ds:0x4448c0
  4429da:	jmp    DWORD PTR ds:0x4448c4
  4429e0:	jmp    DWORD PTR ds:0x4448c8
  4429e6:	jmp    DWORD PTR ds:0x4448cc
  4429ec:	jmp    DWORD PTR ds:0x4448d0
  4429f2:	jmp    DWORD PTR ds:0x4448d4
  4429f8:	jmp    DWORD PTR ds:0x4448d8
  4429fe:	jmp    DWORD PTR ds:0x4448dc
  442a04:	jmp    DWORD PTR ds:0x4448e0
  442a0a:	jmp    DWORD PTR ds:0x4448e4
  442a10:	jmp    DWORD PTR ds:0x4448e8
  442a16:	jmp    DWORD PTR ds:0x4448ec
  442a1c:	jmp    DWORD PTR ds:0x4448f0
  442a22:	jmp    DWORD PTR ds:0x4448f4
  442a28:	jmp    DWORD PTR ds:0x4448f8
  442a2e:	jmp    DWORD PTR ds:0x4448fc
  442a34:	jmp    DWORD PTR ds:0x444900
  442a3a:	jmp    DWORD PTR ds:0x444904
  442a40:	jmp    DWORD PTR ds:0x444908
  442a46:	jmp    DWORD PTR ds:0x44490c
  442a4c:	jmp    DWORD PTR ds:0x444910
  442a52:	jmp    DWORD PTR ds:0x444914
  442a58:	jmp    DWORD PTR ds:0x444918
  442a5e:	jmp    DWORD PTR ds:0x44491c
  442a64:	jmp    DWORD PTR ds:0x444920
  442a6a:	jmp    DWORD PTR ds:0x444924
  442a70:	jmp    DWORD PTR ds:0x444928
  442a76:	jmp    DWORD PTR ds:0x44492c
  442a7c:	jmp    DWORD PTR ds:0x444930
  442a82:	jmp    DWORD PTR ds:0x444934
  442a88:	jmp    DWORD PTR ds:0x444938
  442a8e:	jmp    DWORD PTR ds:0x44493c
  442a94:	jmp    DWORD PTR ds:0x444940
  442a9a:	jmp    DWORD PTR ds:0x444944
  442aa0:	jmp    DWORD PTR ds:0x444948
  442aa6:	jmp    DWORD PTR ds:0x44494c
  442aac:	jmp    DWORD PTR ds:0x444950
  442ab2:	jmp    DWORD PTR ds:0x444954
  442ab8:	jmp    DWORD PTR ds:0x444958
  442abe:	jmp    DWORD PTR ds:0x44495c
  442ac4:	jmp    DWORD PTR ds:0x444960
  442aca:	jmp    DWORD PTR ds:0x444964
  442ad0:	jmp    DWORD PTR ds:0x444968
  442ad6:	jmp    DWORD PTR ds:0x44496c
  442adc:	jmp    DWORD PTR ds:0x444970
  442ae2:	jmp    DWORD PTR ds:0x444974
  442ae8:	jmp    DWORD PTR ds:0x444978
  442aee:	jmp    DWORD PTR ds:0x44497c
  442af4:	jmp    DWORD PTR ds:0x444980
  442afa:	jmp    DWORD PTR ds:0x444984
  442b00:	jmp    DWORD PTR ds:0x444988
  442b06:	jmp    DWORD PTR ds:0x44498c
  442b0c:	jmp    DWORD PTR ds:0x444990
  442b12:	jmp    DWORD PTR ds:0x444994
  442b18:	jmp    DWORD PTR ds:0x444998
