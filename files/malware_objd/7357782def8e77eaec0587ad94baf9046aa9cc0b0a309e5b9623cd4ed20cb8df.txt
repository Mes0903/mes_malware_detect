
7357782def8e77eaec0587ad94baf9046aa9cc0b0a309e5b9623cd4ed20cb8df.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x30
  401006:	push   esi
  401007:	push   edi
  401008:	push   ebx
  401009:	mov    esi,0x3d7a
  40100e:	mov    eax,DWORD PTR [ebp+0x8]
  401011:	xor    eax,0x24bd00
  401016:	mov    edx,DWORD PTR [ebp+0x8]
  401019:	sub    edx,eax
  40101b:	movzx  edi,dl
  40101e:	cmp    esi,0x3d79
  401024:	jne    0x40102f
  401026:	mov    edx,esi
  401028:	mov    eax,edx
  40102a:	jmp    0x40128f
  40102f:	mov    edx,esi
  401031:	imul   edx,edx
  401034:	movzx  ebx,dx
  401037:	mov    eax,esi
  401039:	movzx  ebx,ax
  40103c:	cmp    edi,0x0
  40103f:	jge    0x40104a
  401041:	mov    edx,edi
  401043:	mov    eax,edx
  401045:	jmp    0x40128f
  40104a:	mov    edx,ebx
  40104c:	shl    edx,0x10
  40104f:	mov    BYTE PTR [ebp-0x4],dl
  401052:	cmp    esi,0x3d7a
  401058:	jle    0x401061
  40105a:	mov    eax,ebx
  40105c:	jmp    0x40128f
  401061:	mov    ecx,esi
  401063:	movzx  edx,BYTE PTR [ebp-0x4]
  401067:	add    ecx,edx
  401069:	sub    ecx,0xdb6359da
  40106f:	mov    edx,0x24ded364
  401074:	xor    edx,ecx
  401076:	mov    DWORD PTR [ebp-0x8],edx
  401079:	movzx  edx,BYTE PTR [ebp-0x4]
  40107d:	sub    edx,0xe3
  401083:	movzx  eax,BYTE PTR [ebp-0x4]
  401087:	sub    edx,eax
  401089:	movzx  edi,dl
  40108c:	cmp    ebx,0x3d7a
  401092:	je     0x40109d
  401094:	mov    edx,ebx
  401096:	mov    eax,edx
  401098:	jmp    0x40128f
  40109d:	movzx  ecx,BYTE PTR [ebp-0x4]
  4010a1:	and    ecx,edi
  4010a3:	sub    ecx,0x4aa59801
  4010a9:	mov    eax,0xb519f7ef
  4010ae:	xor    eax,ecx
  4010b0:	mov    DWORD PTR [ebp-0xc],eax
  4010b3:	mov    eax,DWORD PTR [ebp+0xc]
  4010b6:	imul   eax,eax,0x102d
  4010bc:	mov    edx,DWORD PTR [ebp+0xc]
  4010bf:	sub    edx,eax
  4010c1:	mov    BYTE PTR [ebp-0x10],dl
  4010c4:	mov    edx,esi
  4010c6:	movzx  eax,BYTE PTR [ebp-0x10]
  4010ca:	sub    edx,eax
  4010cc:	add    edx,0xffffc2da
  4010d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4010d5:	mov    eax,DWORD PTR [ecx+edx*4]
  4010d8:	mov    DWORD PTR [ebp-0x14],eax
  4010db:	mov    edx,esi
  4010dd:	shr    edx,0x2
  4010e0:	mov    WORD PTR [ebp-0x18],dx
  4010e4:	cmp    BYTE PTR [ebp-0x10],0x54
  4010e8:	jle    0x4010f1
  4010ea:	mov    eax,edi
  4010ec:	jmp    0x40128f
  4010f1:	mov    eax,edi
  4010f3:	movzx  edx,WORD PTR [ebp-0x18]
  4010f7:	xor    eax,edx
  4010f9:	sub    eax,0xf42
  4010fe:	mov    DWORD PTR [ebp-0x1c],eax
  401101:	mov    eax,DWORD PTR [ebp+0x8]
  401104:	mov    BYTE PTR [ebp-0x20],al
  401107:	mov    eax,ebx
  401109:	movzx  edx,BYTE PTR [ebp-0x10]
  40110d:	sub    eax,edx
  40110f:	add    eax,0xffffc2da
  401114:	cmp    DWORD PTR [ebp-0x1c],eax
  401117:	je     0x40124e
  40111d:	mov    WORD PTR [ebp-0x24],0x7f00
  401123:	movzx  ecx,WORD PTR [ebp-0x24]
  401127:	shr    ecx,0x2
  40112a:	mov    DWORD PTR [ebp-0x28],ecx
  40112d:	mov    eax,DWORD PTR [ebp+0x8]
  401130:	mov    WORD PTR [ebp-0x2c],ax
  401134:	movzx  eax,WORD PTR [ebp-0x2c]
  401138:	shl    eax,0x18
  40113b:	mov    DWORD PTR [ebp-0x28],eax
  40113e:	cmp    WORD PTR [ebp-0x2c],0x0
  401143:	jle    0x40114f
  401145:	mov    edx,DWORD PTR [ebp-0x28]
  401148:	mov    eax,edx
  40114a:	jmp    0x40128f
  40114f:	mov    edx,DWORD PTR [ebp-0x28]
  401152:	movzx  ecx,WORD PTR [ebp-0x24]
  401156:	and    edx,ecx
  401158:	push   edx
  401159:	movzx  edx,WORD PTR [ebp-0x24]
  40115d:	movzx  ecx,WORD PTR [ebp-0x2c]
  401161:	sub    edx,ecx
  401163:	add    edx,0xffff8100
  401169:	push   edx
  40116a:	mov    eax,DWORD PTR [ebp-0x28]
  40116d:	movzx  ecx,WORD PTR [ebp-0x24]
  401171:	add    eax,ecx
  401173:	add    eax,0xffff8100
  401178:	push   eax
  401179:	call   DWORD PTR ds:0x423004
  40117f:	mov    WORD PTR [ebp-0x24],ax
  401183:	mov    dx,WORD PTR [ebp-0x24]
  401187:	test   dx,dx
  40118a:	je     0x40119b
  40118c:	mov    eax,DWORD PTR [ebp-0x28]
  40118f:	sub    eax,0x5776
  401194:	push   eax
  401195:	call   DWORD PTR ds:0x42305c
  40119b:	mov    edx,DWORD PTR [ebp-0x28]
  40119e:	movzx  eax,WORD PTR [ebp-0x24]
  4011a2:	imul   edx,eax
  4011a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4011a8:	movzx  eax,BYTE PTR [ecx+edx*1]
  4011ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4011af:	mov    BYTE PTR [ecx],al
  4011b1:	mov    eax,DWORD PTR [ebp-0x28]
  4011b4:	mov    ecx,0x61
  4011b9:	xor    edx,edx
  4011bb:	div    ecx
  4011bd:	mov    WORD PTR [ebp-0x2c],dx
  4011c1:	mov    edx,DWORD PTR [ebp-0x28]
  4011c4:	test   edx,edx
  4011c6:	je     0x4011d3
  4011c8:	movzx  ecx,WORD PTR [ebp-0x2c]
  4011cc:	mov    eax,ecx
  4011ce:	jmp    0x40128f
  4011d3:	mov    eax,DWORD PTR [ebp-0x28]
  4011d6:	movzx  ecx,WORD PTR [ebp-0x24]
  4011da:	sub    eax,ecx
  4011dc:	add    eax,0x1
  4011df:	mov    ecx,DWORD PTR [ebp-0x14]
  4011e2:	add    ecx,eax
  4011e4:	mov    DWORD PTR [ebp-0x14],ecx
  4011e7:	mov    edx,DWORD PTR [ebp+0x8]
  4011ea:	xor    edx,0x900
  4011f0:	and    edx,DWORD PTR [ebp-0x28]
  4011f3:	mov    DWORD PTR [ebp-0x28],edx
  4011f6:	movzx  eax,WORD PTR [ebp-0x24]
  4011fa:	movzx  ecx,WORD PTR [ebp-0x2c]
  4011fe:	add    eax,ecx
  401200:	sub    eax,0xffffffff
  401203:	mov    edx,DWORD PTR [ebp-0x8]
  401206:	add    edx,eax
  401208:	mov    DWORD PTR [ebp-0x8],edx
  40120b:	mov    eax,DWORD PTR [ebp+0x10]
  40120e:	movzx  ecx,WORD PTR [ebp-0x2c]
  401212:	imul   eax,ecx
  401215:	mov    WORD PTR [ebp-0x24],ax
  401219:	mov    dx,WORD PTR [ebp-0x24]
  40121d:	test   dx,dx
  401220:	je     0x401229
  401222:	mov    edx,DWORD PTR [ebp-0x28]
  401225:	mov    eax,edx
  401227:	jmp    0x40128f
  401229:	mov    eax,DWORD PTR [ebp-0x28]
  40122c:	movzx  ecx,WORD PTR [ebp-0x2c]
  401230:	or     eax,ecx
  401232:	add    eax,0x1
  401235:	mov    ecx,DWORD PTR [ebp-0x1c]
  401238:	sub    ecx,eax
  40123a:	mov    DWORD PTR [ebp-0x1c],ecx
  40123d:	mov    eax,DWORD PTR [ebp+0x8]
  401240:	movzx  edx,WORD PTR [ebp-0x24]
  401244:	sub    eax,edx
  401246:	mov    BYTE PTR [ebp-0x30],al
  401249:	jmp    0x401107
  40124e:	movzx  edx,BYTE PTR [ebp-0x4]
  401252:	shl    edx,0x18
  401255:	movzx  ebx,dx
  401258:	movzx  ecx,BYTE PTR [ebp-0x4]
  40125c:	add    ecx,edi
  40125e:	sub    ecx,0x4aa5981e
  401264:	mov    edx,0xb519f7ef
  401269:	xor    edx,ecx
  40126b:	mov    DWORD PTR [ebp-0xc],edx
  40126e:	mov    eax,ebx
  401270:	sub    eax,0x1
  401273:	movzx  ebx,ax
  401276:	mov    ecx,DWORD PTR [ebp-0xc]
  401279:	mov    eax,DWORD PTR [ebp-0x14]
  40127c:	mov    DWORD PTR [ecx],eax
  40127e:	mov    eax,ebx
  401280:	mov    ecx,0x54
  401285:	xor    edx,edx
  401287:	div    ecx
  401289:	mov    WORD PTR [ebp-0x18],dx
  40128d:	mov    eax,ebx
  40128f:	pop    ebx
  401290:	pop    edi
  401291:	pop    esi
  401292:	mov    esp,ebp
  401294:	pop    ebp
  401295:	ret    0xc
  401298:	mov    esp,DWORD PTR [ebp-0x18]
  40129b:	push   DWORD PTR [ebp-0x78]
  40129e:	call   DWORD PTR ds:0x423068
  4012a4:	push   ebp
  4012a5:	mov    ebp,esp
  4012a7:	sub    esp,0xc
  4012aa:	push   esi
  4012ab:	push   edi
  4012ac:	push   ebx
  4012ad:	mov    edx,DWORD PTR [ebp+0x8]
  4012b0:	movzx  esi,dx
  4012b3:	mov    edx,esi
  4012b5:	xor    edx,0xf000000
  4012bb:	movzx  edi,dl
  4012be:	mov    edx,edi
  4012c0:	sub    edx,DWORD PTR [ebp+0x8]
  4012c3:	movzx  ebx,dx
  4012c6:	cmp    ebx,0x100
  4012cc:	jge    0x4012d5
  4012ce:	mov    eax,edi
  4012d0:	jmp    0x4013d5
  4012d5:	mov    eax,esi
  4012d7:	or     eax,edi
  4012d9:	add    eax,0xffff0001
  4012de:	push   eax
  4012df:	mov    edx,ebx
  4012e1:	add    edx,edi
  4012e3:	add    edx,0xfffffe01
  4012e9:	push   edx
  4012ea:	mov    eax,ebx
  4012ec:	imul   eax,esi
  4012ef:	sub    eax,0xffff00
  4012f4:	push   eax
  4012f5:	call   DWORD PTR ds:0x423004
  4012fb:	movzx  ebx,ax
  4012fe:	mov    eax,ebx
  401300:	test   ax,ax
  401303:	je     0x401313
  401305:	mov    eax,edi
  401307:	or     eax,0x5c83f837
  40130c:	push   eax
  40130d:	call   DWORD PTR ds:0x423074
  401313:	mov    ecx,edi
  401315:	shr    ecx,0x3
  401318:	movzx  ebx,cx
  40131b:	cmp    edi,0xff
  401321:	je     0x40132c
  401323:	mov    ecx,ebx
  401325:	mov    eax,ecx
  401327:	jmp    0x4013d5
  40132c:	mov    ecx,DWORD PTR [ebp+0x10]
  40132f:	add    ecx,0xf5e8
  401335:	add    ecx,edi
  401337:	movzx  ebx,cx
  40133a:	mov    eax,edi
  40133c:	add    eax,esi
  40133e:	mov    DWORD PTR [ebp-0x4],eax
  401341:	mov    ecx,edi
  401343:	shl    ecx,0x8
  401346:	mov    DWORD PTR [ebp-0x8],ecx
  401349:	mov    edx,ebx
  40134b:	xor    edx,DWORD PTR [ebp+0x10]
  40134e:	imul   edx,edx,0x2979
  401354:	mov    DWORD PTR [ebp-0x8],edx
  401357:	cmp    DWORD PTR [ebp-0x4],0x100fe
  40135e:	je     0x401367
  401360:	mov    ecx,DWORD PTR [ebp-0x8]
  401363:	mov    eax,ecx
  401365:	jmp    0x4013d5
  401367:	cmp    edi,0xff
  40136d:	jne    0x40137f
  40136f:	push   DWORD PTR [ebp-0x4]
  401372:	push   ebx
  401373:	push   DWORD PTR [ebp-0x4]
  401376:	push   esi
  401377:	call   0x403db1
  40137c:	movzx  esi,ax
  40137f:	mov    edx,DWORD PTR [ebp+0x10]
  401382:	sub    edx,esi
  401384:	movzx  edi,dl
  401387:	cmp    DWORD PTR [ebp-0x4],0x100fe
  40138e:	jge    0x401396
  401390:	mov    edx,esi
  401392:	mov    eax,edx
  401394:	jmp    0x4013d5
  401396:	mov    eax,esi
  401398:	mov    DWORD PTR [ebp-0x4],eax
  40139b:	mov    eax,ebx
  40139d:	or     eax,0xae8100
  4013a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4013a5:	add    ecx,eax
  4013a7:	mov    WORD PTR [ebp-0xc],cx
  4013ab:	mov    eax,ebx
  4013ad:	xor    edx,edx
  4013af:	div    DWORD PTR [ebp-0x4]
  4013b2:	mov    DWORD PTR [ebp-0x4],eax
  4013b5:	cmp    DWORD PTR [ebp-0x4],0x2
  4013b9:	jle    0x4013c1
  4013bb:	mov    ecx,edi
  4013bd:	mov    eax,ecx
  4013bf:	jmp    0x4013d5
  4013c1:	mov    eax,esi
  4013c3:	movzx  esi,ax
  4013c6:	cmp    edi,0x3
  4013c9:	jne    0x4013d1
  4013cb:	mov    edx,ebx
  4013cd:	mov    eax,edx
  4013cf:	jmp    0x4013d5
  4013d1:	movzx  eax,WORD PTR [ebp-0xc]
  4013d5:	pop    ebx
  4013d6:	pop    edi
  4013d7:	pop    esi
  4013d8:	mov    esp,ebp
  4013da:	pop    ebp
  4013db:	ret    0xc
  4013de:	push   ebp
  4013df:	mov    ebp,esp
  4013e1:	sub    esp,0x88
  4013e7:	push   esi
  4013e8:	push   edi
  4013e9:	push   ebx
  4013ea:	mov    esi,0xe0
  4013ef:	mov    edx,DWORD PTR [ebp+0x8]
  4013f2:	movzx  edi,dl
  4013f5:	cmp    edi,0x88
  4013fb:	je     0x401404
  4013fd:	mov    eax,esi
  4013ff:	jmp    0x401a9a
  401404:	mov    ecx,edi
  401406:	shl    ecx,0x8
  401409:	movzx  ebx,cl
  40140c:	mov    ecx,ebx
  40140e:	movzx  edi,cl
  401411:	mov    eax,ebx
  401413:	sub    eax,edi
  401415:	sub    eax,0xb7566353
  40141a:	mov    edx,0x48ea0ca1
  40141f:	xor    edx,eax
  401421:	mov    DWORD PTR [ebp-0x4],edx
  401424:	mov    eax,esi
  401426:	imul   eax,eax,0x4e00
  40142c:	mov    ecx,DWORD PTR [ebp+0x14]
  40142f:	sub    ecx,eax
  401431:	movzx  esi,cl
  401434:	cmp    ebx,0xff
  40143a:	jne    0x401445
  40143c:	mov    ecx,ebx
  40143e:	mov    eax,ecx
  401440:	jmp    0x401a9a
  401445:	mov    edx,ebx
  401447:	and    edx,edi
  401449:	mov    ecx,DWORD PTR [ebp-0x4]
  40144c:	mov    eax,DWORD PTR [ecx+edx*4]
  40144f:	mov    DWORD PTR [ebp-0x8],eax
  401452:	mov    eax,ebx
  401454:	movzx  ebx,al
  401457:	mov    eax,DWORD PTR [ebp-0x8]
  40145a:	sub    eax,0x0
  40145d:	mov    DWORD PTR [ebp-0xc],eax
  401460:	mov    ecx,DWORD PTR [ebp+0x8]
  401463:	sub    ecx,ebx
  401465:	mov    DWORD PTR [ebp-0x10],ecx
  401468:	mov    eax,ebx
  40146a:	and    eax,edi
  40146c:	sub    eax,0xfffe0038
  401471:	mov    DWORD PTR [ebp-0x14],eax
  401474:	mov    eax,ebx
  401476:	sub    eax,DWORD PTR [ebp-0x10]
  401479:	add    eax,0x88
  40147e:	cmp    DWORD PTR [ebp-0x14],eax
  401481:	je     0x401a1a
  401487:	mov    ecx,DWORD PTR [ebp+0xc]
  40148a:	mov    DWORD PTR [ebp-0x18],ecx
  40148d:	mov    edx,DWORD PTR [ebp+0x8]
  401490:	add    edx,DWORD PTR [ebp-0x18]
  401493:	add    edx,0xba170000
  401499:	mov    DWORD PTR [ebp-0x18],edx
  40149c:	mov    edx,DWORD PTR [ebp+0x8]
  40149f:	mov    BYTE PTR [ebp-0x1c],dl
  4014a2:	cmp    BYTE PTR [ebp-0x1c],0x87
  4014a6:	jne    0x4014b3
  4014a8:	movzx  edx,BYTE PTR [ebp-0x1c]
  4014ac:	mov    eax,edx
  4014ae:	jmp    0x401a9a
  4014b3:	mov    ecx,DWORD PTR [ebp-0x18]
  4014b6:	shr    ecx,0x2
  4014b9:	mov    DWORD PTR [ebp-0x20],ecx
  4014bc:	cmp    DWORD PTR [ebp-0x20],0x2e85c044
  4014c3:	jle    0x4014d0
  4014c5:	movzx  edx,BYTE PTR [ebp-0x1c]
  4014c9:	mov    eax,edx
  4014cb:	jmp    0x401a9a
  4014d0:	mov    eax,DWORD PTR [ebp-0x20]
  4014d3:	movzx  edx,BYTE PTR [ebp-0x1c]
  4014d7:	xor    eax,edx
  4014d9:	add    eax,0xd17a3f3c
  4014de:	cmp    DWORD PTR [ebp-0x14],eax
  4014e1:	jge    0x4015b9
  4014e7:	mov    eax,DWORD PTR [ebp+0x10]
  4014ea:	mov    DWORD PTR [ebp-0x24],eax
  4014ed:	mov    eax,DWORD PTR [ebp-0x24]
  4014f0:	shr    eax,1
  4014f2:	mov    DWORD PTR [ebp-0x24],eax
  4014f5:	cmp    DWORD PTR [ebp-0x24],0x2
  4014f9:	jge    0x401503
  4014fb:	mov    eax,DWORD PTR [ebp-0x24]
  4014fe:	jmp    0x401a9a
  401503:	mov    eax,DWORD PTR [ebp-0x24]
  401506:	shr    eax,0x3
  401509:	mov    BYTE PTR [ebp-0x28],al
  40150c:	mov    cl,BYTE PTR [ebp-0x28]
  40150f:	test   cl,cl
  401511:	je     0x40151d
  401513:	mov    ecx,DWORD PTR [ebp-0x24]
  401516:	mov    eax,ecx
  401518:	jmp    0x401a9a
  40151d:	movzx  eax,BYTE PTR [ebp-0x28]
  401521:	mov    WORD PTR [ebp-0x2c],ax
  401525:	movzx  ecx,BYTE PTR [ebp-0x28]
  401529:	movzx  eax,WORD PTR [ebp-0x2c]
  40152d:	and    ecx,eax
  40152f:	mov    eax,DWORD PTR [ebp-0x8]
  401532:	movzx  edx,BYTE PTR [eax]
  401535:	mov    eax,DWORD PTR [ebp-0xc]
  401538:	mov    BYTE PTR [eax+ecx*1],dl
  40153b:	movzx  edx,WORD PTR [ebp-0x2c]
  40153f:	add    edx,0x1
  401542:	mov    WORD PTR [ebp-0x2c],dx
  401546:	mov    edx,DWORD PTR [ebp-0xc]
  401549:	add    edx,0x1
  40154c:	mov    DWORD PTR [ebp-0xc],edx
  40154f:	movzx  edx,BYTE PTR [ebp-0x28]
  401553:	mov    WORD PTR [ebp-0x2c],dx
  401557:	cmp    BYTE PTR [ebp-0x28],0x0
  40155b:	jge    0x401568
  40155d:	movzx  edx,BYTE PTR [ebp-0x28]
  401561:	mov    eax,edx
  401563:	jmp    0x401a9a
  401568:	movzx  edx,BYTE PTR [ebp-0x28]
  40156c:	add    edx,DWORD PTR [ebp-0x24]
  40156f:	add    edx,0xffffffff
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	add    eax,edx
  401577:	mov    DWORD PTR [ebp-0x8],eax
  40157a:	movzx  ecx,BYTE PTR [ebp-0x28]
  40157e:	add    ecx,0xf1ac
  401584:	mov    BYTE PTR [ebp-0x28],cl
  401587:	movzx  edx,BYTE PTR [ebp-0x28]
  40158b:	and    edx,DWORD PTR [ebp-0x24]
  40158e:	add    edx,0x1
  401591:	mov    ecx,DWORD PTR [ebp-0x14]
  401594:	sub    ecx,edx
  401596:	mov    DWORD PTR [ebp-0x14],ecx
  401599:	movzx  eax,WORD PTR [ebp-0x2c]
  40159d:	shr    eax,1
  40159f:	mov    WORD PTR [ebp-0x30],ax
  4015a3:	cmp    BYTE PTR [ebp-0x28],0xab
  4015a7:	jne    0x4015b4
  4015a9:	movzx  edx,WORD PTR [ebp-0x2c]
  4015ad:	mov    eax,edx
  4015af:	jmp    0x401a9a
  4015b4:	jmp    0x401a0f
  4015b9:	mov    DWORD PTR [ebp-0x34],0x2e8a
  4015c0:	mov    edx,DWORD PTR [ebp-0x34]
  4015c3:	shr    edx,0x2
  4015c6:	mov    DWORD PTR [ebp-0x38],edx
  4015c9:	cmp    DWORD PTR [ebp-0x38],0xba2
  4015d0:	je     0x4015da
  4015d2:	mov    eax,DWORD PTR [ebp-0x34]
  4015d5:	jmp    0x401a9a
  4015da:	mov    ecx,DWORD PTR [ebp-0x34]
  4015dd:	or     ecx,0xe940b6b2
  4015e3:	mov    eax,DWORD PTR [ebp-0x34]
  4015e6:	imul   eax,ecx
  4015e9:	mov    DWORD PTR [ebp-0x34],eax
  4015ec:	mov    eax,DWORD PTR [ebp-0x34]
  4015ef:	and    eax,DWORD PTR [ebp-0x38]
  4015f2:	sub    eax,0x800
  4015f7:	mov    edx,DWORD PTR [ebp-0x8]
  4015fa:	movzx  ecx,BYTE PTR [edx+eax*1]
  4015fe:	shl    ecx,0x18
  401601:	mov    DWORD PTR [ebp-0x3c],ecx
  401604:	mov    eax,DWORD PTR [ebp-0x38]
  401607:	imul   eax,eax,0x4400
  40160d:	mov    DWORD PTR [ebp-0x40],eax
  401610:	cmp    DWORD PTR [ebp-0x34],0x5f2c3c43
  401617:	jne    0x401623
  401619:	mov    edx,DWORD PTR [ebp-0x38]
  40161c:	mov    eax,edx
  40161e:	jmp    0x401a9a
  401623:	mov    ecx,DWORD PTR [ebp-0x38]
  401626:	imul   ecx,DWORD PTR [ebp-0x40]
  40162a:	sub    ecx,0xf1eb1000
  401630:	mov    edx,DWORD PTR [ebp-0x8]
  401633:	movzx  eax,BYTE PTR [edx+ecx*1]
  401637:	shl    eax,0x10
  40163a:	mov    DWORD PTR [ebp-0x44],eax
  40163d:	mov    eax,DWORD PTR [ebp-0x38]
  401640:	mov    WORD PTR [ebp-0x48],ax
  401644:	mov    edx,DWORD PTR [ebp-0x3c]
  401647:	add    edx,DWORD PTR [ebp-0x44]
  40164a:	movzx  ecx,WORD PTR [ebp-0x48]
  40164e:	imul   ecx,DWORD PTR [ebp-0x38]
  401652:	sub    ecx,0x875284
  401658:	sub    edx,ecx
  40165a:	mov    DWORD PTR [ebp-0x3c],edx
  40165d:	mov    edx,DWORD PTR [ebp-0x34]
  401660:	mov    DWORD PTR [ebp-0x38],edx
  401663:	cmp    DWORD PTR [ebp-0x38],0x5f2c3c44
  40166a:	je     0x401675
  40166c:	movzx  eax,WORD PTR [ebp-0x48]
  401670:	jmp    0x401a9a
  401675:	movzx  ecx,WORD PTR [ebp-0x48]
  401679:	xor    ecx,DWORD PTR [ebp-0x40]
  40167c:	sub    ecx,0x31703a2
  401682:	mov    eax,DWORD PTR [ebp-0x8]
  401685:	movzx  edx,BYTE PTR [eax+ecx*1]
  401689:	shl    edx,0x8
  40168c:	mov    DWORD PTR [ebp-0x44],edx
  40168f:	mov    edx,DWORD PTR [ebp-0x38]
  401692:	xor    edx,0x1200
  401698:	sub    edx,DWORD PTR [ebp-0x34]
  40169b:	mov    WORD PTR [ebp-0x48],dx
  40169f:	mov    ecx,DWORD PTR [ebp-0x3c]
  4016a2:	add    ecx,DWORD PTR [ebp-0x44]
  4016a5:	mov    DWORD PTR [ebp-0x3c],ecx
  4016a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4016ab:	and    ecx,DWORD PTR [ebp+0x14]
  4016ae:	mov    edx,DWORD PTR [ebp-0x34]
  4016b1:	sub    edx,ecx
  4016b3:	mov    DWORD PTR [ebp-0x40],edx
  4016b6:	mov    edx,DWORD PTR [ebp-0x40]
  4016b9:	movzx  eax,WORD PTR [ebp-0x48]
  4016bd:	imul   edx,eax
  4016c0:	add    edx,0x2f07b800
  4016c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4016c9:	movzx  eax,BYTE PTR [ecx+edx*1]
  4016cd:	mov    ecx,DWORD PTR [ebp-0x3c]
  4016d0:	add    ecx,eax
  4016d2:	mov    DWORD PTR [ebp-0x3c],ecx
  4016d5:	mov    eax,DWORD PTR [ebp-0x38]
  4016d8:	xor    edx,edx
  4016da:	div    DWORD PTR [ebp-0x38]
  4016dd:	mov    WORD PTR [ebp-0x48],dx
  4016e1:	cmp    DWORD PTR [ebp-0x40],0x5f2c3c43
  4016e8:	jne    0x4016f4
  4016ea:	mov    edx,DWORD PTR [ebp-0x34]
  4016ed:	mov    eax,edx
  4016ef:	jmp    0x401a9a
  4016f4:	mov    ecx,DWORD PTR [ebp-0x34]
  4016f7:	movzx  edx,WORD PTR [ebp-0x48]
  4016fb:	or     ecx,edx
  4016fd:	sub    ecx,0x5f2c3c44
  401703:	mov    edx,DWORD PTR [ebp-0x8]
  401706:	sub    edx,ecx
  401708:	mov    DWORD PTR [ebp-0x4],edx
  40170b:	mov    edx,DWORD PTR [ebp+0x14]
  40170e:	or     edx,0x2400
  401714:	add    edx,DWORD PTR [ebp-0x34]
  401717:	mov    WORD PTR [ebp-0x48],dx
  40171b:	cmp    DWORD PTR [ebp-0x40],0x5f2c3c44
  401722:	jle    0x40172e
  401724:	mov    edx,DWORD PTR [ebp-0x40]
  401727:	mov    eax,edx
  401729:	jmp    0x401a9a
  40172e:	mov    ecx,DWORD PTR [ebp-0x38]
  401731:	imul   ecx,DWORD PTR [ebp-0x34]
  401735:	sub    ecx,0x3d8ff210
  40173b:	mov    DWORD PTR [ebp-0x44],ecx
  40173e:	movzx  ecx,WORD PTR [ebp-0x48]
  401742:	xor    ecx,0x8d3cc920
  401748:	xor    ecx,DWORD PTR [ebp-0x38]
  40174b:	mov    DWORD PTR [ebp-0x38],ecx
  40174e:	movzx  eax,WORD PTR [ebp-0x48]
  401752:	sub    eax,DWORD PTR [ebp-0x34]
  401755:	sub    eax,0xa0d42400
  40175a:	mov    ecx,DWORD PTR [ebp-0x4]
  40175d:	mov    edx,DWORD PTR [ecx+eax*4]
  401760:	cmp    edx,DWORD PTR [ebp-0x3c]
  401763:	jne    0x40180f
  401769:	mov    BYTE PTR [ebp-0x4c],0xe5
  40176d:	mov    ecx,DWORD PTR [ebp+0x14]
  401770:	mov    WORD PTR [ebp-0x50],cx
  401774:	cmp    BYTE PTR [ebp-0x4c],0xe5
  401778:	je     0x401785
  40177a:	movzx  edx,WORD PTR [ebp-0x50]
  40177e:	mov    eax,edx
  401780:	jmp    0x401a9a
  401785:	mov    ecx,DWORD PTR [ebp+0x14]
  401788:	movzx  edx,WORD PTR [ebp-0x50]
  40178c:	sub    ecx,edx
  40178e:	mov    DWORD PTR [ebp-0x54],ecx
  401791:	cmp    BYTE PTR [ebp-0x4c],0xe5
  401795:	jle    0x4017a2
  401797:	movzx  edx,WORD PTR [ebp-0x50]
  40179b:	mov    eax,edx
  40179d:	jmp    0x401a9a
  4017a2:	movzx  ecx,BYTE PTR [ebp-0x4c]
  4017a6:	add    ecx,DWORD PTR [ebp-0x54]
  4017a9:	sub    ecx,0x200000e4
  4017af:	mov    eax,DWORD PTR [ebp-0x4]
  4017b2:	mov    edx,DWORD PTR [eax+ecx*4]
  4017b5:	cmp    edx,DWORD PTR [ebp-0x3c]
  4017b8:	jne    0x4017f5
  4017ba:	mov    DWORD PTR [ebp-0x58],0x2d000000
  4017c1:	mov    edx,DWORD PTR [ebp-0x58]
  4017c4:	or     edx,0x6abc1133
  4017ca:	mov    BYTE PTR [ebp-0x5c],dl
  4017cd:	movzx  edx,BYTE PTR [ebp-0x5c]
  4017d1:	shl    edx,0x18
  4017d4:	mov    DWORD PTR [ebp-0x60],edx
  4017d7:	cmp    BYTE PTR [ebp-0x5c],0x32
  4017db:	jne    0x4017e7
  4017dd:	mov    edx,DWORD PTR [ebp-0x60]
  4017e0:	mov    eax,edx
  4017e2:	jmp    0x401a9a
  4017e7:	mov    DWORD PTR [ebp-0x44],0x1
  4017ee:	mov    eax,DWORD PTR [ebp+0x10]
  4017f1:	mov    WORD PTR [ebp-0x64],ax
  4017f5:	movzx  edx,WORD PTR [ebp-0x50]
  4017f9:	shr    edx,1
  4017fb:	mov    BYTE PTR [ebp-0x68],dl
  4017fe:	cmp    BYTE PTR [ebp-0x4c],0xe4
  401802:	jne    0x40180f
  401804:	movzx  ecx,BYTE PTR [ebp-0x68]
  401808:	mov    eax,ecx
  40180a:	jmp    0x401a9a
  40180f:	mov    eax,DWORD PTR [ebp-0x34]
  401812:	xor    edx,edx
  401814:	div    DWORD PTR [ebp-0x38]
  401817:	mov    DWORD PTR [ebp-0x34],edx
  40181a:	movzx  edx,WORD PTR [ebp-0x48]
  40181e:	xor    edx,DWORD PTR [ebp-0x34]
  401821:	sub    edx,0x5f2c5c00
  401827:	push   edx
  401828:	movzx  eax,WORD PTR [ebp-0x48]
  40182c:	xor    eax,DWORD PTR [ebp-0x34]
  40182f:	sub    eax,0x5f2c5c00
  401834:	push   eax
  401835:	mov    edx,DWORD PTR [ebp-0x40]
  401838:	imul   edx,DWORD PTR [ebp-0x38]
  40183c:	sub    edx,0x30db1c80
  401842:	push   edx
  401843:	call   DWORD PTR ds:0x423004
  401849:	mov    DWORD PTR [ebp-0x34],eax
  40184c:	mov    ecx,DWORD PTR [ebp-0x34]
  40184f:	test   ecx,ecx
  401851:	je     0x401886
  401853:	mov    eax,DWORD PTR [ebp-0x34]
  401856:	and    eax,0xd1d0
  40185b:	push   eax
  40185c:	movzx  eax,WORD PTR [ebp-0x48]
  401860:	add    eax,0xb1b400
  401865:	push   eax
  401866:	mov    edx,DWORD PTR [ebp-0x40]
  401869:	imul   edx,edx,0xf2cd43ea
  40186f:	mov    eax,DWORD PTR [ebp-0x40]
  401872:	sub    eax,edx
  401874:	push   eax
  401875:	movzx  ecx,WORD PTR [ebp-0x48]
  401879:	or     ecx,0x76d000
  40187f:	push   ecx
  401880:	call   DWORD PTR ds:0x42302c
  401886:	mov    edx,DWORD PTR [ebp-0x34]
  401889:	movzx  eax,WORD PTR [ebp-0x48]
  40188d:	add    edx,eax
  40188f:	add    edx,0xffff9fbc
  401895:	cmp    DWORD PTR [ebp-0x44],edx
  401898:	je     0x401900
  40189a:	mov    WORD PTR [ebp-0x6c],0x0
  4018a0:	mov    ecx,DWORD PTR [ebp+0xc]
  4018a3:	mov    DWORD PTR [ebp-0x70],ecx
  4018a6:	mov    edx,DWORD PTR [ebp-0x70]
  4018a9:	shl    edx,0x10
  4018ac:	mov    BYTE PTR [ebp-0x74],dl
  4018af:	cmp    BYTE PTR [ebp-0x74],0x0
  4018b3:	jge    0x4018c0
  4018b5:	movzx  ecx,WORD PTR [ebp-0x6c]
  4018b9:	mov    eax,ecx
  4018bb:	jmp    0x401a9a
  4018c0:	movzx  eax,BYTE PTR [ebp-0x74]
  4018c4:	xor    eax,DWORD PTR [ebp-0x70]
  4018c7:	add    eax,0xffffff80
  4018ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4018cd:	sub    ecx,eax
  4018cf:	mov    DWORD PTR [ebp-0x14],ecx
  4018d2:	movzx  ecx,WORD PTR [ebp-0x6c]
  4018d6:	add    ecx,DWORD PTR [ebp+0x10]
  4018d9:	mov    DWORD PTR [ebp-0x70],ecx
  4018dc:	movzx  eax,BYTE PTR [ebp-0x74]
  4018e0:	movzx  edx,WORD PTR [ebp-0x6c]
  4018e4:	add    eax,edx
  4018e6:	add    eax,0x8
  4018e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4018ec:	add    ecx,eax
  4018ee:	mov    DWORD PTR [ebp-0x8],ecx
  4018f1:	mov    edx,DWORD PTR [ebp-0x70]
  4018f4:	shl    edx,0x10
  4018f7:	mov    WORD PTR [ebp-0x78],dx
  4018fb:	jmp    0x401a0f
  401900:	mov    WORD PTR [ebp-0x7c],0x8425
  401906:	movzx  ecx,WORD PTR [ebp-0x7c]
  40190a:	or     ecx,ecx
  40190c:	and    ecx,0x30000000
  401912:	mov    WORD PTR [ebp-0x80],cx
  401916:	mov    dx,WORD PTR [ebp-0x80]
  40191a:	test   dx,dx
  40191d:	je     0x401928
  40191f:	movzx  eax,WORD PTR [ebp-0x80]
  401923:	jmp    0x401a9a
  401928:	mov    ecx,DWORD PTR [ebp+0x14]
  40192b:	mov    WORD PTR [ebp-0x7c],cx
  40192f:	movzx  eax,WORD PTR [ebp-0x7c]
  401933:	or     eax,DWORD PTR [ebp+0x8]
  401936:	movzx  edx,WORD PTR [ebp-0x80]
  40193a:	imul   edx,eax
  40193d:	mov    WORD PTR [ebp-0x80],dx
  401941:	movzx  ecx,WORD PTR [ebp-0x80]
  401945:	mov    WORD PTR [ebp-0x80],cx
  401949:	movzx  eax,WORD PTR [ebp-0x80]
  40194d:	movzx  edx,WORD PTR [ebp-0x7c]
  401951:	imul   eax,edx
  401954:	mov    ecx,DWORD PTR [ebp-0x8]
  401957:	movzx  edx,BYTE PTR [ecx+eax*1]
  40195b:	mov    eax,DWORD PTR [ebp-0xc]
  40195e:	mov    BYTE PTR [eax],dl
  401960:	movzx  ecx,WORD PTR [ebp-0x7c]
  401964:	mov    DWORD PTR [ebp-0x84],ecx
  40196a:	movzx  eax,WORD PTR [ebp-0x7c]
  40196e:	xor    eax,DWORD PTR [ebp-0x84]
  401974:	sub    eax,0xffffffff
  401977:	mov    ecx,DWORD PTR [ebp-0xc]
  40197a:	add    ecx,eax
  40197c:	mov    DWORD PTR [ebp-0xc],ecx
  40197f:	mov    edx,DWORD PTR [ebp-0x84]
  401985:	xor    edx,0x433025a3
  40198b:	mov    eax,DWORD PTR [ebp-0x84]
  401991:	add    eax,edx
  401993:	mov    BYTE PTR [ebp-0x88],al
  401999:	mov    edx,DWORD PTR [ebp-0x84]
  40199f:	test   edx,edx
  4019a1:	je     0x4019ae
  4019a3:	movzx  edx,WORD PTR [ebp-0x7c]
  4019a7:	mov    eax,edx
  4019a9:	jmp    0x401a9a
  4019ae:	movzx  eax,WORD PTR [ebp-0x80]
  4019b2:	movzx  edx,WORD PTR [ebp-0x7c]
  4019b6:	and    eax,edx
  4019b8:	sub    eax,0xffffffff
  4019bb:	mov    edx,DWORD PTR [ebp-0x8]
  4019be:	add    edx,eax
  4019c0:	mov    DWORD PTR [ebp-0x8],edx
  4019c3:	movzx  eax,WORD PTR [ebp-0x7c]
  4019c7:	mov    ecx,0x14
  4019cc:	xor    edx,edx
  4019ce:	div    ecx
  4019d0:	mov    WORD PTR [ebp-0x7c],ax
  4019d4:	cmp    BYTE PTR [ebp-0x88],0xa3
  4019db:	je     0x4019e6
  4019dd:	movzx  eax,WORD PTR [ebp-0x80]
  4019e1:	jmp    0x401a9a
  4019e6:	movzx  ecx,WORD PTR [ebp-0x80]
  4019ea:	movzx  edx,BYTE PTR [ebp-0x88]
  4019f1:	and    ecx,edx
  4019f3:	sub    ecx,0xffffffff
  4019f6:	mov    eax,DWORD PTR [ebp-0x14]
  4019f9:	sub    eax,ecx
  4019fb:	mov    DWORD PTR [ebp-0x14],eax
  4019fe:	movzx  edx,BYTE PTR [ebp-0x88]
  401a05:	and    edx,0x6bc6
  401a0b:	mov    WORD PTR [ebp-0x80],dx
  401a0f:	mov    eax,DWORD PTR [ebp+0x14]
  401a12:	mov    DWORD PTR [ebp-0x20],eax
  401a15:	jmp    0x401474
  401a1a:	mov    edx,esi
  401a1c:	and    edx,edi
  401a1e:	movzx  esi,dl
  401a21:	mov    edx,esi
  401a23:	sub    edx,DWORD PTR [ebp-0x10]
  401a26:	sub    edx,0xb75662cb
  401a2c:	mov    eax,0x48ea0ca1
  401a31:	xor    eax,edx
  401a33:	mov    DWORD PTR [ebp-0x4],eax
  401a36:	mov    eax,esi
  401a38:	xor    edx,edx
  401a3a:	div    DWORD PTR [ebp-0x10]
  401a3d:	mov    DWORD PTR [ebp-0x10],eax
  401a40:	mov    edx,edi
  401a42:	add    edx,DWORD PTR [ebp-0x10]
  401a45:	mov    ecx,DWORD PTR [ebp-0x4]
  401a48:	mov    eax,DWORD PTR [ecx+edx*4]
  401a4b:	mov    DWORD PTR [ebp-0x8],eax
  401a4e:	mov    edx,ebx
  401a50:	or     edx,edx
  401a52:	mov    DWORD PTR [ebp-0x10],edx
  401a55:	cmp    DWORD PTR [ebp-0x10],0x0
  401a59:	jge    0x401a5f
  401a5b:	mov    eax,ebx
  401a5d:	jmp    0x401a9a
  401a5f:	mov    eax,DWORD PTR [ebp-0xc]
  401a62:	sub    eax,DWORD PTR [ebp-0x8]
  401a65:	shr    eax,0x3
  401a68:	mov    DWORD PTR [ebp-0x14],eax
  401a6b:	mov    eax,DWORD PTR [ebp-0x10]
  401a6e:	and    eax,edi
  401a70:	add    eax,0x34b50bc2
  401a75:	mov    edx,0x34f69bd6
  401a7a:	xor    edx,eax
  401a7c:	mov    DWORD PTR [ebp-0x4],edx
  401a7f:	mov    edx,DWORD PTR [ebp+0x14]
  401a82:	movzx  esi,dl
  401a85:	mov    edx,DWORD PTR [ebp-0x4]
  401a88:	mov    ecx,DWORD PTR [ebp-0x14]
  401a8b:	mov    DWORD PTR [edx],ecx
  401a8d:	mov    ecx,esi
  401a8f:	imul   ecx,DWORD PTR [ebp+0x14]
  401a93:	movzx  edi,cl
  401a96:	mov    ecx,esi
  401a98:	mov    eax,ecx
  401a9a:	pop    ebx
  401a9b:	pop    edi
  401a9c:	pop    esi
  401a9d:	mov    esp,ebp
  401a9f:	pop    ebp
  401aa0:	ret    0x10
  401aa3:	push   ebp
  401aa4:	mov    ebp,esp
  401aa6:	sub    esp,0x8
  401aa9:	push   esi
  401aaa:	push   edi
  401aab:	push   ebx
  401aac:	mov    esi,0xf8
  401ab1:	mov    eax,esi
  401ab3:	imul   eax,eax,0xb1
  401ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  401abc:	sub    ecx,eax
  401abe:	movzx  esi,cl
  401ac1:	cmp    esi,0x88
  401ac7:	je     0x401ad2
  401ac9:	mov    edx,esi
  401acb:	mov    eax,edx
  401acd:	jmp    0x401c89
  401ad2:	mov    eax,esi
  401ad4:	xor    eax,0xa100
  401ad9:	or     eax,esi
  401adb:	movzx  edi,al
  401ade:	cmp    edi,0x87
  401ae4:	jne    0x401aed
  401ae6:	mov    eax,esi
  401ae8:	jmp    0x401c89
  401aed:	mov    edx,edi
  401aef:	xor    edx,DWORD PTR [ebp+0x8]
  401af2:	movzx  edi,dl
  401af5:	cmp    esi,0x88
  401afb:	jge    0x401b04
  401afd:	mov    eax,edi
  401aff:	jmp    0x401c89
  401b04:	mov    eax,esi
  401b06:	xor    eax,0xf35d832a
  401b0b:	mov    ebx,eax
  401b0d:	cmp    edi,0x88
  401b13:	jle    0x401b1e
  401b15:	mov    edx,edi
  401b17:	mov    eax,edx
  401b19:	jmp    0x401c89
  401b1e:	mov    eax,esi
  401b20:	shr    eax,0x2
  401b23:	mov    WORD PTR [ebp-0x4],ax
  401b27:	cmp    ebx,0xf35d83a2
  401b2d:	je     0x401b38
  401b2f:	movzx  eax,WORD PTR [ebp-0x4]
  401b33:	jmp    0x401c89
  401b38:	mov    eax,edi
  401b3a:	xor    edx,edx
  401b3c:	div    ebx
  401b3e:	mov    ebx,edx
  401b40:	cmp    esi,0x88
  401b46:	je     0x401b4f
  401b48:	mov    eax,ebx
  401b4a:	jmp    0x401c89
  401b4f:	mov    ecx,esi
  401b51:	shl    ecx,0x18
  401b54:	mov    ebx,ecx
  401b56:	cmp    ebx,0x88000000
  401b5c:	jge    0x401b6e
  401b5e:	mov    eax,esi
  401b60:	or     eax,0xf68138f
  401b65:	push   eax
  401b66:	push   ebx
  401b67:	push   esi
  401b68:	call   DWORD PTR ds:0x423034
  401b6e:	cmp    ebx,0x88000000
  401b74:	je     0x401b81
  401b76:	movzx  ecx,WORD PTR [ebp-0x4]
  401b7a:	mov    eax,ecx
  401b7c:	jmp    0x401c89
  401b81:	movzx  edx,WORD PTR [ebp-0x4]
  401b85:	shr    edx,0x3
  401b88:	mov    DWORD PTR [ebp-0x8],edx
  401b8b:	cmp    DWORD PTR [ebp-0x8],0x4
  401b8f:	je     0x401b9a
  401b91:	mov    edx,edi
  401b93:	mov    eax,edx
  401b95:	jmp    0x401c89
  401b9a:	movzx  eax,WORD PTR [ebp-0x4]
  401b9e:	xor    edx,edx
  401ba0:	div    ebx
  401ba2:	mov    WORD PTR [ebp-0x4],ax
  401ba6:	cmp    DWORD PTR [ebp-0x8],0x4
  401baa:	je     0x401bb7
  401bac:	movzx  ecx,WORD PTR [ebp-0x4]
  401bb0:	mov    eax,ecx
  401bb2:	jmp    0x401c89
  401bb7:	movzx  ecx,WORD PTR [ebp-0x4]
  401bbb:	or     ecx,esi
  401bbd:	imul   ecx,ecx,0xed00
  401bc3:	mov    WORD PTR [ebp-0x4],cx
  401bc7:	cmp    edi,0x87
  401bcd:	jne    0x401bd6
  401bcf:	mov    eax,ebx
  401bd1:	jmp    0x401c89
  401bd6:	imul   ebx,DWORD PTR [ebp-0x8]
  401bda:	cmp    esi,0x88
  401be0:	je     0x401bec
  401be2:	mov    ecx,DWORD PTR [ebp-0x8]
  401be5:	mov    eax,ecx
  401be7:	jmp    0x401c89
  401bec:	cmp    ebx,0x20000000
  401bf2:	jne    0x401c03
  401bf4:	push   ebx
  401bf5:	push   DWORD PTR [ebp-0x8]
  401bf8:	push   esi
  401bf9:	push   esi
  401bfa:	call   0x4013de
  401bff:	mov    WORD PTR [ebp-0x4],ax
  401c03:	mov    ecx,edi
  401c05:	shr    ecx,1
  401c07:	mov    DWORD PTR [ebp-0x8],ecx
  401c0a:	cmp    ebx,0x20000000
  401c10:	je     0x401c17
  401c12:	mov    eax,DWORD PTR [ebp-0x8]
  401c15:	jmp    0x401c89
  401c17:	mov    ecx,DWORD PTR [ebp-0x8]
  401c1a:	movzx  edi,cl
  401c1d:	cmp    WORD PTR [ebp-0x4],0xffff
  401c22:	jne    0x401c2c
  401c24:	movzx  edx,WORD PTR [ebp-0x4]
  401c28:	mov    eax,edx
  401c2a:	jmp    0x401c89
  401c2c:	movzx  edx,WORD PTR [ebp-0x4]
  401c30:	shl    edx,0x8
  401c33:	mov    DWORD PTR [ebp-0x8],edx
  401c36:	cmp    ebx,0x20000000
  401c3c:	jne    0x401c50
  401c3e:	movzx  edx,WORD PTR [ebp-0x4]
  401c42:	push   edx
  401c43:	movzx  edx,WORD PTR [ebp-0x4]
  401c47:	push   edx
  401c48:	call   0x402324
  401c4d:	movzx  esi,al
  401c50:	mov    eax,DWORD PTR [ebp+0x8]
  401c53:	add    eax,ebx
  401c55:	mov    DWORD PTR [ebp-0x8],eax
  401c58:	cmp    WORD PTR [ebp-0x4],0xffff
  401c5d:	jne    0x401c65
  401c5f:	movzx  eax,WORD PTR [ebp-0x4]
  401c63:	jmp    0x401c89
  401c65:	mov    edx,ebx
  401c67:	shl    edx,0x8
  401c6a:	movzx  edi,dl
  401c6d:	movzx  ecx,WORD PTR [ebp-0x4]
  401c71:	xor    ecx,ebx
  401c73:	and    ecx,DWORD PTR [ebp+0x8]
  401c76:	movzx  esi,cl
  401c79:	mov    ecx,edi
  401c7b:	test   cl,cl
  401c7d:	je     0x401c83
  401c7f:	mov    eax,edi
  401c81:	jmp    0x401c89
  401c83:	movzx  ecx,WORD PTR [ebp-0x4]
  401c87:	mov    eax,ecx
  401c89:	pop    ebx
  401c8a:	pop    edi
  401c8b:	pop    esi
  401c8c:	mov    esp,ebp
  401c8e:	pop    ebp
  401c8f:	ret    0x4
  401c92:	push   ebp
  401c93:	mov    ebp,esp
  401c95:	sub    esp,0x4
  401c98:	push   esi
  401c99:	push   edi
  401c9a:	push   ebx
  401c9b:	mov    esi,0x1bd6
  401ca0:	mov    esi,esi
  401ca2:	cmp    esi,0x1bd5
  401ca8:	jne    0x401cb1
  401caa:	mov    eax,esi
  401cac:	jmp    0x401dd9
  401cb1:	mov    ecx,esi
  401cb3:	shr    ecx,1
  401cb5:	movzx  edi,cx
  401cb8:	cmp    edi,0xdeb
  401cbe:	je     0x401cc7
  401cc0:	mov    eax,esi
  401cc2:	jmp    0x401dd9
  401cc7:	mov    eax,edi
  401cc9:	xor    eax,eax
  401ccb:	add    eax,edi
  401ccd:	mov    ebx,eax
  401ccf:	cmp    esi,0x1bd6
  401cd5:	jle    0x401ce0
  401cd7:	mov    edx,edi
  401cd9:	mov    eax,edx
  401cdb:	jmp    0x401dd9
  401ce0:	mov    ecx,esi
  401ce2:	add    ecx,ecx
  401ce4:	mov    DWORD PTR [ebp-0x4],ecx
  401ce7:	mov    edx,edi
  401ce9:	mov    ebx,edx
  401ceb:	mov    eax,DWORD PTR [ebp-0x4]
  401cee:	xor    edx,edx
  401cf0:	div    DWORD PTR [ebp-0x4]
  401cf3:	mov    esi,edx
  401cf5:	sub    esi,ebx
  401cf7:	mov    eax,esi
  401cf9:	and    eax,0x97dc9ecf
  401cfe:	sub    eax,esi
  401d00:	mov    DWORD PTR [ebp-0x4],eax
  401d03:	cmp    DWORD PTR [ebp-0x4],0x97dc9ff0
  401d0a:	jle    0x401d15
  401d0c:	mov    ecx,edi
  401d0e:	mov    eax,ecx
  401d10:	jmp    0x401dd9
  401d15:	push   0x0
  401d17:	mov    eax,edi
  401d19:	imul   eax,esi
  401d1c:	sub    eax,0xff3e4a47
  401d21:	push   eax
  401d22:	mov    eax,ebx
  401d24:	and    eax,edi
  401d26:	sub    eax,0xdeb
  401d2b:	push   eax
  401d2c:	call   DWORD PTR ds:0x423004
  401d32:	mov    ebx,eax
  401d34:	test   ebx,ebx
  401d36:	je     0x401d3f
  401d38:	push   ebx
  401d39:	call   DWORD PTR ds:0x423010
  401d3f:	mov    edx,esi
  401d41:	and    edx,DWORD PTR [ebp-0x4]
  401d44:	movzx  edi,dx
  401d47:	cmp    ebx,0xffffffff
  401d4a:	jne    0x401d53
  401d4c:	mov    eax,ebx
  401d4e:	jmp    0x401dd9
  401d53:	mov    ebx,DWORD PTR [ebp-0x4]
  401d56:	cmp    esi,0xfffff215
  401d5c:	je     0x401d62
  401d5e:	mov    eax,esi
  401d60:	jmp    0x401dd9
  401d62:	cmp    edi,0x9210
  401d68:	jne    0x401d72
  401d6a:	call   0x40337b
  401d6f:	movzx  edi,ax
  401d72:	mov    eax,esi
  401d74:	xor    edx,edx
  401d76:	div    DWORD PTR [ebp-0x4]
  401d79:	mov    ebx,edx
  401d7b:	cmp    esi,0xfffff215
  401d81:	jge    0x401d87
  401d83:	mov    eax,esi
  401d85:	jmp    0x401dd9
  401d87:	mov    ecx,esi
  401d89:	or     ecx,edi
  401d8b:	mov    esi,ecx
  401d8d:	cmp    DWORD PTR [ebp-0x4],0x97dc9ff0
  401d94:	jle    0x401d9c
  401d96:	mov    ecx,edi
  401d98:	mov    eax,ecx
  401d9a:	jmp    0x401dd9
  401d9c:	mov    esi,ebx
  401d9e:	mov    eax,ebx
  401da0:	or     eax,edi
  401da2:	add    eax,0x97dcad99
  401da7:	push   eax
  401da8:	push   0x0
  401daa:	mov    ecx,edi
  401dac:	add    ecx,esi
  401dae:	add    ecx,0x97dcad74
  401db4:	push   ecx
  401db5:	call   DWORD PTR ds:0x423004
  401dbb:	mov    DWORD PTR [ebp-0x4],eax
  401dbe:	mov    eax,DWORD PTR [ebp-0x4]
  401dc1:	test   eax,eax
  401dc3:	je     0x401dd7
  401dc5:	push   ebx
  401dc6:	mov    ecx,edi
  401dc8:	imul   ecx,ecx,0x267000
  401dce:	sub    ecx,esi
  401dd0:	push   ecx
  401dd1:	call   DWORD PTR ds:0x42309c
  401dd7:	mov    eax,esi
  401dd9:	pop    ebx
  401dda:	pop    edi
  401ddb:	pop    esi
  401ddc:	mov    esp,ebp
  401dde:	pop    ebp
  401ddf:	ret    
  401de0:	push   ebp
  401de1:	mov    ebp,esp
  401de3:	push   0xffffffff
  401de5:	push   0x4230b8
  401dea:	push   0x40450e
  401def:	mov    eax,fs:0x0
  401df5:	push   eax
  401df6:	mov    DWORD PTR fs:0x0,esp
  401dfd:	sub    esp,0x68
  401e00:	push   ebx
  401e01:	push   esi
  401e02:	push   edi
  401e03:	mov    DWORD PTR [ebp-0x18],esp
  401e06:	xor    ebx,ebx
  401e08:	mov    DWORD PTR [ebp-0x4],ebx
  401e0b:	push   0x2
  401e0d:	call   DWORD PTR ds:0x42308c
  401e13:	pop    ecx
  401e14:	or     DWORD PTR ds:0x439000,0xffffffff
  401e1b:	or     DWORD PTR ds:0x439004,0xffffffff
  401e22:	call   DWORD PTR ds:0x423094
  401e28:	mov    ecx,DWORD PTR ds:0x425f71
  401e2e:	mov    DWORD PTR [eax],ecx
  401e30:	call   DWORD PTR ds:0x42304c
  401e36:	mov    ecx,DWORD PTR ds:0x425f6d
  401e3c:	mov    DWORD PTR [eax],ecx
  401e3e:	mov    eax,ds:0x423064
  401e43:	mov    eax,DWORD PTR [eax]
  401e45:	mov    ds:0x439008,eax
  401e4a:	call   0x404504
  401e4f:	cmp    DWORD PTR ds:0x425f51,ebx
  401e55:	jne    0x401e63
  401e57:	push   0x40450b
  401e5c:	call   DWORD PTR ds:0x423098
  401e62:	pop    ecx
  401e63:	call   0x402eb3
  401e68:	push   0x425f4d
  401e6d:	push   0x425f49
  401e72:	call   0x40451a
  401e77:	mov    eax,ds:0x425f69
  401e7c:	mov    DWORD PTR [ebp-0x6c],eax
  401e7f:	lea    eax,[ebp-0x6c]
  401e82:	push   eax
  401e83:	push   DWORD PTR ds:0x425f65
  401e89:	lea    eax,[ebp-0x64]
  401e8c:	push   eax
  401e8d:	lea    eax,[ebp-0x70]
  401e90:	push   eax
  401e91:	lea    eax,[ebp-0x60]
  401e94:	push   eax
  401e95:	call   DWORD PTR ds:0x42306c
  401e9b:	push   0x425f45
  401ea0:	push   0x425f41
  401ea5:	call   0x40451a
  401eaa:	add    esp,0x24
  401ead:	mov    eax,ds:0x4230a4
  401eb2:	mov    esi,DWORD PTR [eax]
  401eb4:	mov    DWORD PTR [ebp-0x74],esi
  401eb7:	cmp    BYTE PTR [esi],0x22
  401eba:	jne    0x401ef6
  401ebc:	inc    esi
  401ebd:	mov    DWORD PTR [ebp-0x74],esi
  401ec0:	mov    al,BYTE PTR [esi]
  401ec2:	cmp    al,bl
  401ec4:	je     0x401eca
  401ec6:	cmp    al,0x22
  401ec8:	jne    0x401ebc
  401eca:	cmp    BYTE PTR [esi],0x22
  401ecd:	jne    0x401ed3
  401ecf:	inc    esi
  401ed0:	mov    DWORD PTR [ebp-0x74],esi
  401ed3:	mov    al,BYTE PTR [esi]
  401ed5:	cmp    al,bl
  401ed7:	je     0x401edd
  401ed9:	cmp    al,0x20
  401edb:	jbe    0x401ecf
  401edd:	mov    DWORD PTR [ebp-0x30],ebx
  401ee0:	lea    eax,[ebp-0x5c]
  401ee3:	push   eax
  401ee4:	call   DWORD PTR ds:0x423018
  401eea:	test   BYTE PTR [ebp-0x30],0x1
  401eee:	je     0x401f01
  401ef0:	movzx  eax,WORD PTR [ebp-0x2c]
  401ef4:	jmp    0x401f04
  401ef6:	cmp    BYTE PTR [esi],0x20
  401ef9:	jbe    0x401ed3
  401efb:	inc    esi
  401efc:	mov    DWORD PTR [ebp-0x74],esi
  401eff:	jmp    0x401ef6
  401f01:	push   0xa
  401f03:	pop    eax
  401f04:	push   eax
  401f05:	push   esi
  401f06:	push   ebx
  401f07:	push   ebx
  401f08:	call   DWORD PTR ds:0x423040
  401f0e:	push   eax
  401f0f:	call   0x404460
  401f14:	mov    DWORD PTR [ebp-0x68],eax
  401f17:	push   eax
  401f18:	call   DWORD PTR ds:0x4230a0
  401f1e:	push   ebp
  401f1f:	mov    ebp,esp
  401f21:	sub    esp,0x4
  401f24:	push   esi
  401f25:	push   edi
  401f26:	push   ebx
  401f27:	mov    edx,DWORD PTR [ebp+0x14]
  401f2a:	movzx  esi,dx
  401f2d:	mov    eax,esi
  401f2f:	shl    eax,0x10
  401f32:	movzx  edi,al
  401f35:	mov    ecx,DWORD PTR [ebp+0x8]
  401f38:	and    ecx,0x6c41
  401f3e:	movzx  ebx,cl
  401f41:	mov    eax,edi
  401f43:	shr    eax,1
  401f45:	movzx  ebx,al
  401f48:	cmp    ebx,0x0
  401f4b:	jle    0x401f56
  401f4d:	mov    edx,edi
  401f4f:	mov    eax,edx
  401f51:	jmp    0x40204a
  401f56:	mov    ecx,ebx
  401f58:	or     ecx,edi
  401f5a:	movzx  ebx,cl
  401f5d:	mov    eax,edi
  401f5f:	test   al,al
  401f61:	je     0x401f6a
  401f63:	mov    eax,esi
  401f65:	jmp    0x40204a
  401f6a:	mov    eax,DWORD PTR [ebp+0xc]
  401f6d:	xor    eax,edi
  401f6f:	or     eax,edi
  401f71:	movzx  esi,ax
  401f74:	mov    eax,edi
  401f76:	and    eax,0x68860000
  401f7b:	movzx  ebx,al
  401f7e:	cmp    edi,0x0
  401f81:	jge    0x401f8c
  401f83:	mov    ecx,edi
  401f85:	mov    eax,ecx
  401f87:	jmp    0x40204a
  401f8c:	mov    eax,esi
  401f8e:	shr    eax,1
  401f90:	movzx  ebx,al
  401f93:	mov    edx,ebx
  401f95:	test   dl,dl
  401f97:	jne    0x401fa3
  401f99:	push   edi
  401f9a:	push   ebx
  401f9b:	call   0x402053
  401fa0:	movzx  ebx,al
  401fa3:	mov    edx,ebx
  401fa5:	movzx  ebx,dl
  401fa8:	mov    eax,edi
  401faa:	movzx  ebx,al
  401fad:	cmp    ebx,0xff
  401fb3:	jne    0x401fbe
  401fb5:	mov    edx,esi
  401fb7:	mov    eax,edx
  401fb9:	jmp    0x40204a
  401fbe:	mov    edx,ebx
  401fc0:	sub    edx,0x874b
  401fc6:	sub    edx,edi
  401fc8:	mov    BYTE PTR [ebp-0x4],dl
  401fcb:	cmp    BYTE PTR [ebp-0x4],0xb4
  401fcf:	jne    0x401fd5
  401fd1:	mov    eax,ebx
  401fd3:	jmp    0x40204a
  401fd5:	mov    edx,edi
  401fd7:	movzx  ecx,BYTE PTR [ebp-0x4]
  401fdb:	xor    edx,ecx
  401fdd:	add    edx,0xffffff4b
  401fe3:	push   edx
  401fe4:	movzx  eax,BYTE PTR [ebp-0x4]
  401fe8:	xor    eax,ebx
  401fea:	add    eax,0xffffff4b
  401fef:	push   eax
  401ff0:	mov    edx,edi
  401ff2:	and    edx,ebx
  401ff4:	push   edx
  401ff5:	call   DWORD PTR ds:0x423004
  401ffb:	movzx  esi,ax
  401ffe:	mov    edx,esi
  402000:	test   dx,dx
  402003:	je     0x402020
  402005:	push   esi
  402006:	mov    edx,ebx
  402008:	xor    edx,0x4390000
  40200e:	xor    edx,esi
  402010:	push   edx
  402011:	mov    ecx,edi
  402013:	movzx  eax,BYTE PTR [ebp-0x4]
  402017:	and    ecx,eax
  402019:	push   ecx
  40201a:	call   DWORD PTR ds:0x42300c
  402020:	mov    eax,edi
  402022:	movzx  edx,BYTE PTR [ebp-0x4]
  402026:	or     eax,edx
  402028:	and    eax,0x2d99
  40202d:	movzx  ebx,al
  402030:	cmp    esi,0x0
  402033:	jge    0x40203b
  402035:	mov    ecx,esi
  402037:	mov    eax,ecx
  402039:	jmp    0x40204a
  40203b:	movzx  ecx,BYTE PTR [ebp-0x4]
  40203f:	sub    ecx,esi
  402041:	movzx  edi,cl
  402044:	movzx  edx,BYTE PTR [ebp-0x4]
  402048:	mov    eax,edx
  40204a:	pop    ebx
  40204b:	pop    edi
  40204c:	pop    esi
  40204d:	mov    esp,ebp
  40204f:	pop    ebp
  402050:	ret    0x10
  402053:	push   ebp
  402054:	mov    ebp,esp
  402056:	sub    esp,0xc
  402059:	push   esi
  40205a:	push   edi
  40205b:	push   ebx
  40205c:	mov    esi,DWORD PTR [ebp+0xc]
  40205f:	imul   esi,DWORD PTR [ebp+0x8]
  402063:	test   esi,esi
  402065:	je     0x40206e
  402067:	mov    eax,esi
  402069:	jmp    0x40215c
  40206e:	mov    edx,esi
  402070:	or     edx,0x21b668c7
  402076:	mov    eax,DWORD PTR [ebp+0xc]
  402079:	sub    eax,edx
  40207b:	mov    edi,eax
  40207d:	mov    ecx,edi
  40207f:	and    ecx,0x17000000
  402085:	mov    edx,esi
  402087:	sub    edx,ecx
  402089:	mov    ebx,edx
  40208b:	mov    edi,DWORD PTR [ebp+0xc]
  40208e:	cmp    ebx,0xea000000
  402094:	je     0x40209d
  402096:	mov    eax,edi
  402098:	jmp    0x40215c
  40209d:	mov    ecx,ebx
  40209f:	imul   ecx,ecx
  4020a2:	mov    WORD PTR [ebp-0x4],cx
  4020a6:	movzx  eax,WORD PTR [ebp-0x4]
  4020aa:	xor    edx,edx
  4020ac:	div    ebx
  4020ae:	mov    edi,edx
  4020b0:	mov    eax,edi
  4020b2:	or     eax,ebx
  4020b4:	sub    eax,0xea000000
  4020b9:	push   eax
  4020ba:	mov    eax,ebx
  4020bc:	or     eax,esi
  4020be:	add    eax,0x16000000
  4020c3:	push   eax
  4020c4:	mov    ecx,esi
  4020c6:	imul   ecx,ebx
  4020c9:	push   ecx
  4020ca:	call   DWORD PTR ds:0x423004
  4020d0:	mov    WORD PTR [ebp-0x4],ax
  4020d4:	mov    cx,WORD PTR [ebp-0x4]
  4020d8:	test   cx,cx
  4020db:	je     0x4020e3
  4020dd:	call   DWORD PTR ds:0x423058
  4020e3:	mov    cx,WORD PTR [ebp-0x4]
  4020e7:	test   cx,cx
  4020ea:	jne    0x4020f3
  4020ec:	call   0x4043a9
  4020f1:	mov    ebx,eax
  4020f3:	mov    ecx,edi
  4020f5:	and    ecx,DWORD PTR [ebp+0xc]
  4020f8:	mov    BYTE PTR [ebp-0x8],cl
  4020fb:	test   esi,esi
  4020fd:	je     0x402103
  4020ff:	mov    eax,esi
  402101:	jmp    0x40215c
  402103:	mov    eax,DWORD PTR [ebp+0x8]
  402106:	xor    eax,0x9bbe
  40210b:	movzx  ecx,WORD PTR [ebp-0x4]
  40210f:	xor    eax,ecx
  402111:	mov    ebx,eax
  402113:	movzx  eax,BYTE PTR [ebp-0x8]
  402117:	xor    eax,0xf587dd34
  40211c:	mov    DWORD PTR [ebp-0xc],eax
  40211f:	mov    eax,ebx
  402121:	movzx  edx,BYTE PTR [ebp-0x8]
  402125:	add    eax,edx
  402127:	add    eax,0xffff6442
  40212c:	push   eax
  40212d:	movzx  ecx,BYTE PTR [ebp-0x8]
  402131:	or     ecx,DWORD PTR [ebp-0xc]
  402134:	add    ecx,0xa7822cc
  40213a:	push   ecx
  40213b:	mov    edx,esi
  40213d:	movzx  ecx,BYTE PTR [ebp-0x8]
  402141:	sub    edx,ecx
  402143:	push   edx
  402144:	call   DWORD PTR ds:0x423004
  40214a:	mov    DWORD PTR [ebp-0xc],eax
  40214d:	mov    ecx,DWORD PTR [ebp-0xc]
  402150:	test   ecx,ecx
  402152:	je     0x40215a
  402154:	call   DWORD PTR ds:0x42303c
  40215a:	mov    eax,edi
  40215c:	pop    ebx
  40215d:	pop    edi
  40215e:	pop    esi
  40215f:	mov    esp,ebp
  402161:	pop    ebp
  402162:	ret    0x8
  402165:	push   ebp
  402166:	mov    ebp,esp
  402168:	sub    esp,0x8
  40216b:	push   esi
  40216c:	push   edi
  40216d:	push   ebx
  40216e:	mov    edx,DWORD PTR [ebp+0x8]
  402171:	movzx  esi,dx
  402174:	mov    eax,esi
  402176:	xor    eax,0x53
  402179:	movzx  edi,ax
  40217c:	mov    eax,esi
  40217e:	mov    ecx,0x5b
  402183:	xor    edx,edx
  402185:	div    ecx
  402187:	movzx  edi,dx
  40218a:	cmp    edi,0x29
  40218d:	jne    0x402195
  40218f:	call   DWORD PTR ds:0x423078
  402195:	cmp    edi,0x2a
  402198:	jle    0x4021a3
  40219a:	mov    edx,esi
  40219c:	mov    eax,edx
  40219e:	jmp    0x40231b
  4021a3:	mov    ecx,edi
  4021a5:	xor    ecx,esi
  4021a7:	push   ecx
  4021a8:	mov    ecx,esi
  4021aa:	xor    ecx,edi
  4021ac:	push   ecx
  4021ad:	mov    edx,edi
  4021af:	and    edx,esi
  4021b1:	sub    edx,0x2a
  4021b4:	push   edx
  4021b5:	call   DWORD PTR ds:0x423004
  4021bb:	movzx  esi,ax
  4021be:	mov    edx,esi
  4021c0:	test   dx,dx
  4021c3:	je     0x4021cb
  4021c5:	call   DWORD PTR ds:0x42301c
  4021cb:	mov    ecx,edi
  4021cd:	shl    ecx,0x8
  4021d0:	movzx  ebx,cl
  4021d3:	cmp    ebx,0xff
  4021d9:	jne    0x4021e2
  4021db:	mov    eax,ebx
  4021dd:	jmp    0x40231b
  4021e2:	mov    eax,ebx
  4021e4:	mov    BYTE PTR [ebp-0x4],al
  4021e7:	mov    ecx,ebx
  4021e9:	test   cl,cl
  4021eb:	je     0x4021f4
  4021ed:	mov    eax,esi
  4021ef:	jmp    0x40231b
  4021f4:	mov    edx,edi
  4021f6:	xor    edx,0x5aba0000
  4021fc:	movzx  esi,dx
  4021ff:	mov    eax,DWORD PTR [ebp+0x8]
  402202:	mov    BYTE PTR [ebp-0x4],al
  402205:	mov    eax,esi
  402207:	or     eax,0xad08
  40220c:	xor    eax,DWORD PTR [ebp+0xc]
  40220f:	mov    DWORD PTR [ebp-0x8],eax
  402212:	cmp    DWORD PTR [ebp-0x8],0xad2a
  402219:	je     0x402222
  40221b:	mov    eax,esi
  40221d:	jmp    0x40231b
  402222:	mov    eax,ebx
  402224:	xor    edx,edx
  402226:	div    DWORD PTR [ebp-0x8]
  402229:	movzx  ebx,dl
  40222c:	cmp    BYTE PTR [ebp-0x4],0x2a
  402230:	jge    0x40223b
  402232:	mov    ecx,edi
  402234:	mov    eax,ecx
  402236:	jmp    0x40231b
  40223b:	mov    ecx,DWORD PTR [ebp+0xc]
  40223e:	and    ecx,0x791100
  402244:	movzx  esi,cx
  402247:	mov    ecx,edi
  402249:	or     ecx,0x5d
  40224c:	movzx  edi,cx
  40224f:	mov    edx,ebx
  402251:	movzx  eax,BYTE PTR [ebp-0x4]
  402255:	xor    edx,eax
  402257:	sub    edx,0x2a
  40225a:	push   edx
  40225b:	mov    ecx,DWORD PTR [ebp-0x8]
  40225e:	and    ecx,esi
  402260:	push   ecx
  402261:	mov    eax,DWORD PTR [ebp-0x8]
  402264:	imul   eax,esi
  402267:	push   eax
  402268:	call   DWORD PTR ds:0x423004
  40226e:	mov    BYTE PTR [ebp-0x4],al
  402271:	mov    al,BYTE PTR [ebp-0x4]
  402274:	test   al,al
  402276:	je     0x40228d
  402278:	mov    ecx,ebx
  40227a:	and    ecx,DWORD PTR [ebp-0x8]
  40227d:	add    ecx,esi
  40227f:	push   ecx
  402280:	mov    edx,esi
  402282:	xor    edx,edx
  402284:	or     edx,edi
  402286:	push   edx
  402287:	call   DWORD PTR ds:0x423054
  40228d:	cmp    edi,0x7f
  402290:	jne    0x40229a
  402292:	call   0x403187
  402297:	movzx  edi,ax
  40229a:	mov    eax,edi
  40229c:	xor    edx,edx
  40229e:	div    DWORD PTR [ebp-0x8]
  4022a1:	movzx  edi,ax
  4022a4:	cmp    edi,0xffff
  4022aa:	jne    0x4022b2
  4022ac:	mov    edx,ebx
  4022ae:	mov    eax,edx
  4022b0:	jmp    0x40231b
  4022b2:	mov    ecx,ebx
  4022b4:	or     ecx,DWORD PTR [ebp-0x8]
  4022b7:	add    ecx,0xffff52d6
  4022bd:	push   ecx
  4022be:	mov    eax,ebx
  4022c0:	sub    eax,edi
  4022c2:	push   eax
  4022c3:	push   0x0
  4022c5:	call   DWORD PTR ds:0x423004
  4022cb:	movzx  esi,ax
  4022ce:	mov    edx,esi
  4022d0:	test   dx,dx
  4022d3:	je     0x4022e4
  4022d5:	mov    eax,DWORD PTR [ebp-0x8]
  4022d8:	or     eax,0x73ae
  4022dd:	push   eax
  4022de:	call   DWORD PTR ds:0x423020
  4022e4:	mov    eax,ebx
  4022e6:	shl    eax,0x18
  4022e9:	movzx  esi,ax
  4022ec:	mov    dl,BYTE PTR [ebp-0x4]
  4022ef:	test   dl,dl
  4022f1:	je     0x4022f9
  4022f3:	mov    ecx,edi
  4022f5:	mov    eax,ecx
  4022f7:	jmp    0x40231b
  4022f9:	mov    eax,ebx
  4022fb:	xor    edx,edx
  4022fd:	div    DWORD PTR [ebp-0x8]
  402300:	mov    BYTE PTR [ebp-0x4],dl
  402303:	mov    eax,esi
  402305:	shr    eax,0x3
  402308:	movzx  edi,ax
  40230b:	mov    eax,DWORD PTR [ebp-0x8]
  40230e:	add    eax,0x9d
  402313:	movzx  edi,ax
  402316:	mov    ecx,DWORD PTR [ebp-0x8]
  402319:	mov    eax,ecx
  40231b:	pop    ebx
  40231c:	pop    edi
  40231d:	pop    esi
  40231e:	mov    esp,ebp
  402320:	pop    ebp
  402321:	ret    0x8
  402324:	push   ebp
  402325:	mov    ebp,esp
  402327:	sub    esp,0x4
  40232a:	push   esi
  40232b:	push   edi
  40232c:	push   ebx
  40232d:	mov    ecx,DWORD PTR [ebp+0x8]
  402330:	movzx  esi,cl
  402333:	mov    edx,DWORD PTR [ebp+0x8]
  402336:	movzx  edi,dx
  402339:	mov    ecx,edi
  40233b:	mov    ebx,ecx
  40233d:	test   ebx,ebx
  40233f:	jne    0x402349
  402341:	push   ebx
  402342:	call   0x40330d
  402347:	mov    ebx,eax
  402349:	mov    edx,DWORD PTR [ebp+0xc]
  40234c:	or     edx,esi
  40234e:	mov    BYTE PTR [ebp-0x4],dl
  402351:	cmp    edi,0x0
  402354:	jle    0x40235c
  402356:	mov    ecx,edi
  402358:	mov    eax,ecx
  40235a:	jmp    0x40238f
  40235c:	mov    ecx,edi
  40235e:	movzx  esi,cl
  402361:	test   ebx,ebx
  402363:	je     0x40236b
  402365:	mov    ecx,esi
  402367:	mov    eax,ecx
  402369:	jmp    0x40238f
  40236b:	mov    eax,ebx
  40236d:	mov    ecx,0x35
  402372:	xor    edx,edx
  402374:	div    ecx
  402376:	mov    ebx,edx
  402378:	cmp    esi,0x0
  40237b:	jle    0x402381
  40237d:	mov    eax,ebx
  40237f:	jmp    0x40238f
  402381:	mov    ecx,DWORD PTR [ebp+0xc]
  402384:	add    ecx,DWORD PTR [ebp+0xc]
  402387:	sub    ecx,DWORD PTR [ebp+0xc]
  40238a:	movzx  esi,cl
  40238d:	mov    eax,ebx
  40238f:	pop    ebx
  402390:	pop    edi
  402391:	pop    esi
  402392:	mov    esp,ebp
  402394:	pop    ebp
  402395:	ret    0x8
  402398:	push   ebp
  402399:	mov    ebp,esp
  40239b:	sub    esp,0x4
  40239e:	push   esi
  40239f:	push   edi
  4023a0:	push   ebx
  4023a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4023a4:	movzx  esi,cl
  4023a7:	mov    ecx,esi
  4023a9:	shl    ecx,0x8
  4023ac:	movzx  edi,cl
  4023af:	mov    eax,esi
  4023b1:	shr    eax,0x3
  4023b4:	movzx  ebx,ax
  4023b7:	mov    ecx,edi
  4023b9:	and    ecx,esi
  4023bb:	push   ecx
  4023bc:	mov    edx,edi
  4023be:	xor    edx,esi
  4023c0:	add    edx,0xffffff82
  4023c3:	push   edx
  4023c4:	mov    edx,ebx
  4023c6:	and    edx,esi
  4023c8:	sub    edx,0xe
  4023cb:	push   edx
  4023cc:	call   DWORD PTR ds:0x423004
  4023d2:	movzx  ebx,ax
  4023d5:	mov    eax,ebx
  4023d7:	test   ax,ax
  4023da:	je     0x4023eb
  4023dc:	mov    edx,ebx
  4023de:	imul   edx,edx,0xe56300
  4023e4:	push   edx
  4023e5:	call   DWORD PTR ds:0x423028
  4023eb:	mov    eax,esi
  4023ed:	movzx  esi,al
  4023f0:	mov    eax,esi
  4023f2:	mov    DWORD PTR [ebp-0x4],eax
  4023f5:	mov    ecx,ebx
  4023f7:	test   cx,cx
  4023fa:	je     0x402406
  4023fc:	mov    edx,DWORD PTR [ebp-0x4]
  4023ff:	mov    eax,edx
  402401:	jmp    0x402522
  402406:	mov    eax,DWORD PTR [ebp+0xc]
  402409:	or     eax,0x516be59f
  40240e:	movzx  ebx,ax
  402411:	cmp    esi,0x7d
  402414:	jne    0x402420
  402416:	mov    edx,DWORD PTR [ebp-0x4]
  402419:	mov    eax,edx
  40241b:	jmp    0x402522
  402420:	mov    eax,DWORD PTR [ebp-0x4]
  402423:	xor    edx,edx
  402425:	div    DWORD PTR [ebp-0x4]
  402428:	movzx  ebx,ax
  40242b:	cmp    edi,0x0
  40242e:	jge    0x402437
  402430:	mov    eax,esi
  402432:	jmp    0x402522
  402437:	mov    eax,esi
  402439:	and    eax,DWORD PTR [ebp+0xc]
  40243c:	mov    DWORD PTR [ebp-0x4],eax
  40243f:	cmp    DWORD PTR [ebp-0x4],0x1
  402443:	jne    0x40244c
  402445:	mov    eax,edi
  402447:	jmp    0x402522
  40244c:	mov    eax,DWORD PTR [ebp-0x4]
  40244f:	xor    edx,edx
  402451:	div    DWORD PTR [ebp-0x4]
  402454:	movzx  ebx,ax
  402457:	mov    edx,ebx
  402459:	movzx  ebx,dx
  40245c:	mov    edx,ebx
  40245e:	or     edx,0x77ffae57
  402464:	mov    ecx,DWORD PTR [ebp-0x4]
  402467:	sub    ecx,edx
  402469:	mov    DWORD PTR [ebp-0x4],ecx
  40246c:	cmp    DWORD PTR [ebp-0x4],0x880051ab
  402473:	jne    0x40247e
  402475:	push   esi
  402476:	call   0x4037b4
  40247b:	movzx  ebx,ax
  40247e:	mov    ecx,DWORD PTR [ebp+0xc]
  402481:	movzx  ebx,cx
  402484:	cmp    DWORD PTR [ebp-0x4],0x880051ab
  40248b:	jge    0x402496
  40248d:	mov    ecx,edi
  40248f:	mov    eax,ecx
  402491:	jmp    0x402522
  402496:	mov    ecx,DWORD PTR [ebp-0x4]
  402499:	movzx  ebx,cx
  40249c:	cmp    esi,0x7e
  40249f:	jge    0x4024a7
  4024a1:	mov    ecx,ebx
  4024a3:	mov    eax,ecx
  4024a5:	jmp    0x402522
  4024a7:	mov    eax,esi
  4024a9:	xor    edx,edx
  4024ab:	div    DWORD PTR [ebp-0x4]
  4024ae:	mov    DWORD PTR [ebp-0x4],eax
  4024b1:	cmp    ebx,0x51ab
  4024b7:	je     0x4024bf
  4024b9:	mov    edx,esi
  4024bb:	mov    eax,edx
  4024bd:	jmp    0x402522
  4024bf:	mov    eax,edi
  4024c1:	mov    ecx,0x60
  4024c6:	xor    edx,edx
  4024c8:	div    ecx
  4024ca:	movzx  esi,dl
  4024cd:	cmp    DWORD PTR [ebp-0x4],0x0
  4024d1:	jge    0x4024d9
  4024d3:	mov    edx,esi
  4024d5:	mov    eax,edx
  4024d7:	jmp    0x402522
  4024d9:	mov    ecx,edi
  4024db:	add    ecx,DWORD PTR [ebp-0x4]
  4024de:	push   ecx
  4024df:	mov    edx,DWORD PTR [ebp-0x4]
  4024e2:	add    edx,edi
  4024e4:	push   edx
  4024e5:	mov    eax,edi
  4024e7:	xor    eax,esi
  4024e9:	push   eax
  4024ea:	call   DWORD PTR ds:0x423004
  4024f0:	movzx  ebx,ax
  4024f3:	mov    eax,ebx
  4024f5:	test   ax,ax
  4024f8:	je     0x402515
  4024fa:	mov    eax,DWORD PTR [ebp-0x4]
  4024fd:	and    eax,0x3
  402500:	push   eax
  402501:	mov    eax,esi
  402503:	or     eax,0xb9
  402508:	mov    edx,esi
  40250a:	imul   edx,eax
  40250d:	push   edx
  40250e:	push   esi
  40250f:	call   DWORD PTR ds:0x423088
  402515:	mov    ecx,ebx
  402517:	shl    ecx,0x8
  40251a:	movzx  edi,cl
  40251d:	mov    ecx,DWORD PTR [ebp-0x4]
  402520:	mov    eax,ecx
  402522:	pop    ebx
  402523:	pop    edi
  402524:	pop    esi
  402525:	mov    esp,ebp
  402527:	pop    ebp
  402528:	ret    0x8
  40252b:	push   ebp
  40252c:	mov    ebp,esp
  40252e:	sub    esp,0x2c
  402531:	push   esi
  402532:	push   edi
  402533:	push   ebx
  402534:	mov    esi,0x7150
  402539:	mov    edx,esi
  40253b:	shl    edx,0x18
  40253e:	movzx  edi,dx
  402541:	mov    ecx,esi
  402543:	and    ecx,0x3b9d
  402549:	mov    edx,esi
  40254b:	imul   edx,ecx
  40254e:	movzx  esi,dx
  402551:	cmp    esi,0x6500
  402557:	jle    0x402562
  402559:	mov    ecx,esi
  40255b:	mov    eax,ecx
  40255d:	jmp    0x402787
  402562:	mov    eax,DWORD PTR [ebp+0x8]
  402565:	movzx  ebx,ax
  402568:	mov    eax,edi
  40256a:	test   ax,ax
  40256d:	je     0x402578
  40256f:	mov    edx,esi
  402571:	mov    eax,edx
  402573:	jmp    0x402787
  402578:	mov    edx,esi
  40257a:	imul   edx,edx,0x9bba
  402580:	movzx  ebx,dx
  402583:	mov    ecx,0x24df4180
  402588:	xor    ecx,0x249ce3a0
  40258e:	mov    DWORD PTR [ebp-0x4],ecx
  402591:	mov    ecx,DWORD PTR [ebp+0x8]
  402594:	xor    ecx,0xa417
  40259a:	mov    DWORD PTR [ebp-0x8],ecx
  40259d:	cmp    edi,0x0
  4025a0:	jle    0x4025ac
  4025a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4025a5:	mov    eax,ecx
  4025a7:	jmp    0x402787
  4025ac:	mov    ecx,DWORD PTR [ebp-0x8]
  4025af:	xor    ecx,edi
  4025b1:	add    ecx,0xb559c3e8
  4025b7:	mov    edx,0xb519f7ef
  4025bc:	xor    edx,ecx
  4025be:	mov    DWORD PTR [ebp-0xc],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0x8]
  4025c4:	add    edx,0x9cbe
  4025ca:	movzx  ebx,dx
  4025cd:	mov    ecx,DWORD PTR [ebp-0x8]
  4025d0:	xor    ecx,ebx
  4025d2:	add    ecx,0xffffc757
  4025d8:	mov    edx,DWORD PTR [ebp-0xc]
  4025db:	mov    eax,DWORD PTR [edx+ecx*4]
  4025de:	mov    DWORD PTR [ebp-0x10],eax
  4025e1:	mov    edx,DWORD PTR [ebp-0x8]
  4025e4:	or     edx,0x95
  4025ea:	mov    DWORD PTR [ebp-0x14],edx
  4025ed:	cmp    edi,0x0
  4025f0:	jge    0x4025fc
  4025f2:	mov    edx,DWORD PTR [ebp-0x14]
  4025f5:	mov    eax,edx
  4025f7:	jmp    0x402787
  4025fc:	mov    edx,esi
  4025fe:	sub    edx,edi
  402600:	add    edx,0xffffb495
  402606:	mov    DWORD PTR [ebp-0x18],edx
  402609:	mov    eax,DWORD PTR [ebp-0x8]
  40260c:	sub    eax,0x1
  40260f:	mov    DWORD PTR [ebp-0x8],eax
  402612:	mov    edx,DWORD PTR [ebp-0x14]
  402615:	and    edx,ebx
  402617:	sub    edx,0x8496
  40261d:	cmp    DWORD PTR [ebp-0x18],edx
  402620:	je     0x40273b
  402626:	mov    edx,DWORD PTR [ebp+0x8]
  402629:	mov    BYTE PTR [ebp-0x1c],dl
  40262c:	movzx  eax,BYTE PTR [ebp-0x1c]
  402630:	mov    BYTE PTR [ebp-0x20],al
  402633:	movzx  ecx,BYTE PTR [ebp-0x20]
  402637:	shr    ecx,1
  402639:	mov    BYTE PTR [ebp-0x24],cl
  40263c:	mov    dl,BYTE PTR [ebp-0x20]
  40263f:	test   dl,dl
  402641:	je     0x40264e
  402643:	movzx  ecx,BYTE PTR [ebp-0x1c]
  402647:	mov    eax,ecx
  402649:	jmp    0x402787
  40264e:	movzx  eax,BYTE PTR [ebp-0x20]
  402652:	xor    eax,0x127900
  402657:	mov    BYTE PTR [ebp-0x20],al
  40265a:	movzx  ecx,BYTE PTR [ebp-0x24]
  40265e:	movzx  edx,BYTE PTR [ebp-0x20]
  402662:	xor    ecx,edx
  402664:	push   ecx
  402665:	movzx  eax,BYTE PTR [ebp-0x1c]
  402669:	movzx  ecx,BYTE PTR [ebp-0x24]
  40266d:	or     eax,ecx
  40266f:	push   eax
  402670:	movzx  edx,BYTE PTR [ebp-0x24]
  402674:	movzx  eax,BYTE PTR [ebp-0x20]
  402678:	or     edx,eax
  40267a:	push   edx
  40267b:	call   DWORD PTR ds:0x423004
  402681:	mov    BYTE PTR [ebp-0x1c],al
  402684:	mov    cl,BYTE PTR [ebp-0x1c]
  402687:	test   cl,cl
  402689:	je     0x40269c
  40268b:	movzx  edx,BYTE PTR [ebp-0x24]
  40268f:	sub    edx,0xff310000
  402695:	push   edx
  402696:	call   DWORD PTR ds:0x423000
  40269c:	movzx  eax,BYTE PTR [ebp-0x1c]
  4026a0:	movzx  edx,BYTE PTR [ebp-0x24]
  4026a4:	xor    eax,edx
  4026a6:	mov    edx,DWORD PTR [ebp-0x4]
  4026a9:	movzx  ecx,BYTE PTR [edx+eax*1]
  4026ad:	mov    edx,DWORD PTR [ebp-0x10]
  4026b0:	mov    BYTE PTR [edx],cl
  4026b2:	movzx  eax,BYTE PTR [ebp-0x24]
  4026b6:	xor    eax,eax
  4026b8:	mov    DWORD PTR [ebp-0x28],eax
  4026bb:	mov    dl,BYTE PTR [ebp-0x20]
  4026be:	test   dl,dl
  4026c0:	je     0x4026cb
  4026c2:	movzx  eax,BYTE PTR [ebp-0x20]
  4026c6:	jmp    0x402787
  4026cb:	movzx  eax,BYTE PTR [ebp-0x20]
  4026cf:	movzx  ecx,BYTE PTR [ebp-0x1c]
  4026d3:	xor    eax,ecx
  4026d5:	sub    eax,0xffffffff
  4026d8:	mov    edx,DWORD PTR [ebp-0x10]
  4026db:	add    edx,eax
  4026dd:	mov    DWORD PTR [ebp-0x10],edx
  4026e0:	movzx  ecx,BYTE PTR [ebp-0x24]
  4026e4:	mov    BYTE PTR [ebp-0x1c],cl
  4026e7:	movzx  eax,BYTE PTR [ebp-0x24]
  4026eb:	movzx  edx,BYTE PTR [ebp-0x20]
  4026ef:	xor    eax,edx
  4026f1:	sub    eax,0xffffffff
  4026f4:	mov    edx,DWORD PTR [ebp-0x4]
  4026f7:	add    edx,eax
  4026f9:	mov    DWORD PTR [ebp-0x4],edx
  4026fc:	movzx  ecx,BYTE PTR [ebp-0x20]
  402700:	shl    ecx,0x10
  402703:	mov    BYTE PTR [ebp-0x2c],cl
  402706:	cmp    DWORD PTR [ebp-0x28],0x0
  40270a:	jle    0x402712
  40270c:	movzx  eax,BYTE PTR [ebp-0x20]
  402710:	jmp    0x402787
  402712:	mov    ecx,DWORD PTR [ebp-0x28]
  402715:	movzx  edx,BYTE PTR [ebp-0x24]
  402719:	imul   ecx,edx
  40271c:	add    ecx,0x1
  40271f:	mov    eax,DWORD PTR [ebp-0x18]
  402722:	sub    eax,ecx
  402724:	mov    DWORD PTR [ebp-0x18],eax
  402727:	mov    edx,DWORD PTR [ebp-0x28]
  40272a:	and    edx,0x608d0000
  402730:	xor    edx,DWORD PTR [ebp+0x8]
  402733:	mov    BYTE PTR [ebp-0x1c],dl
  402736:	jmp    0x402612
  40273b:	mov    ecx,DWORD PTR [ebp-0x14]
  40273e:	sub    ecx,0x1
  402741:	mov    DWORD PTR [ebp-0x14],ecx
  402744:	cmp    DWORD PTR [ebp-0x8],0xa416
  40274b:	je     0x402754
  40274d:	mov    edx,DWORD PTR [ebp-0x14]
  402750:	mov    eax,edx
  402752:	jmp    0x402787
  402754:	mov    ecx,DWORD PTR [ebp-0x14]
  402757:	sub    ecx,DWORD PTR [ebp-0x8]
  40275a:	add    ecx,0xb55a677f
  402760:	mov    eax,0xb519f7ef
  402765:	xor    eax,ecx
  402767:	mov    DWORD PTR [ebp-0xc],eax
  40276a:	mov    eax,DWORD PTR [ebp-0x14]
  40276d:	add    eax,0xd400
  402772:	mov    DWORD PTR [ebp-0x14],eax
  402775:	mov    edx,DWORD PTR [ebp-0xc]
  402778:	mov    ecx,DWORD PTR [ebp-0x10]
  40277b:	mov    DWORD PTR [edx],ecx
  40277d:	mov    ecx,DWORD PTR [ebp+0x8]
  402780:	mov    DWORD PTR [ebp-0x8],ecx
  402783:	mov    edx,edi
  402785:	mov    eax,edx
  402787:	pop    ebx
  402788:	pop    edi
  402789:	pop    esi
  40278a:	mov    esp,ebp
  40278c:	pop    ebp
  40278d:	ret    0x4
  402790:	push   ebp
  402791:	mov    ebp,esp
  402793:	sub    esp,0x90
  402799:	push   esi
  40279a:	push   edi
  40279b:	push   ebx
  40279c:	mov    esi,0x44f87fe6
  4027a1:	mov    eax,esi
  4027a3:	shl    eax,0x8
  4027a6:	movzx  edi,al
  4027a9:	mov    edx,esi
  4027ab:	shl    edx,0x10
  4027ae:	movzx  ebx,dl
  4027b1:	cmp    esi,0x44f87fe6
  4027b7:	jle    0x4027c0
  4027b9:	mov    eax,ebx
  4027bb:	jmp    0x402eac
  4027c0:	mov    DWORD PTR [ebp-0x4],0xdf335b8
  4027c7:	mov    ecx,ebx
  4027c9:	or     ecx,0x7d13ba34
  4027cf:	imul   ecx,edi
  4027d2:	mov    esi,ecx
  4027d4:	cmp    edi,0x0
  4027d7:	jge    0x4027e2
  4027d9:	mov    edx,edi
  4027db:	mov    eax,edx
  4027dd:	jmp    0x402eac
  4027e2:	mov    eax,ebx
  4027e4:	add    eax,esi
  4027e6:	add    eax,0xdb105a0
  4027eb:	mov    edx,DWORD PTR [ebp-0x4]
  4027ee:	xor    edx,eax
  4027f0:	mov    DWORD PTR [ebp-0x4],edx
  4027f3:	mov    eax,esi
  4027f5:	movzx  edi,al
  4027f8:	cmp    edi,0x0
  4027fb:	jle    0x402804
  4027fd:	mov    eax,esi
  4027ff:	jmp    0x402eac
  402804:	mov    eax,esi
  402806:	imul   eax,ebx
  402809:	mov    edx,DWORD PTR [ebp-0x4]
  40280c:	mov    ecx,DWORD PTR [edx+eax*4]
  40280f:	mov    eax,edi
  402811:	imul   eax,esi
  402814:	add    ecx,eax
  402816:	mov    DWORD PTR [ebp-0x8],ecx
  402819:	mov    eax,esi
  40281b:	mov    ecx,0x1a
  402820:	xor    edx,edx
  402822:	div    ecx
  402824:	movzx  ebx,dl
  402827:	cmp    ebx,0x0
  40282a:	jge    0x402835
  40282c:	mov    ecx,edi
  40282e:	mov    eax,ecx
  402830:	jmp    0x402eac
  402835:	mov    edx,edi
  402837:	and    edx,ebx
  402839:	mov    eax,DWORD PTR [ebp-0x8]
  40283c:	add    eax,edx
  40283e:	mov    WORD PTR [ebp-0xc],ax
  402842:	mov    edx,ebx
  402844:	add    edx,esi
  402846:	mov    WORD PTR [ebp-0x10],dx
  40284a:	test   esi,esi
  40284c:	je     0x402857
  40284e:	movzx  eax,WORD PTR [ebp-0x10]
  402852:	jmp    0x402eac
  402857:	movzx  edx,WORD PTR [ebp-0x10]
  40285b:	add    edx,esi
  40285d:	mov    eax,DWORD PTR [ebp-0x8]
  402860:	add    eax,edx
  402862:	movzx  ecx,WORD PTR [ebp-0xc]
  402866:	sub    eax,ecx
  402868:	mov    DWORD PTR [ebp-0x8],eax
  40286b:	mov    ecx,esi
  40286d:	add    ecx,0x1
  402870:	mov    esi,ecx
  402872:	mov    eax,DWORD PTR [ebp-0x8]
  402875:	add    eax,0x0
  402878:	mov    DWORD PTR [ebp-0x14],eax
  40287b:	mov    eax,edi
  40287d:	add    eax,0x35000000
  402882:	movzx  edi,al
  402885:	mov    ecx,edi
  402887:	or     ecx,ebx
  402889:	mov    eax,0xcf3d56b9
  40288e:	sub    eax,ecx
  402890:	mov    DWORD PTR [ebp-0x18],eax
  402893:	movzx  eax,WORD PTR [ebp-0x10]
  402897:	sub    eax,0x1
  40289a:	mov    WORD PTR [ebp-0x10],ax
  40289e:	cmp    WORD PTR [ebp-0x10],0xffff
  4028a3:	jle    0x4028b0
  4028a5:	movzx  ecx,WORD PTR [ebp-0x10]
  4028a9:	mov    eax,ecx
  4028ab:	jmp    0x402eac
  4028b0:	mov    ecx,ebx
  4028b2:	add    ecx,edi
  4028b4:	mov    edx,DWORD PTR [ebp-0x14]
  4028b7:	movzx  eax,WORD PTR [edx+ecx*2]
  4028bb:	movzx  edx,WORD PTR [ebp-0x10]
  4028bf:	add    edx,esi
  4028c1:	add    edx,0xffff5a4d
  4028c7:	cmp    eax,edx
  4028c9:	je     0x40292e
  4028cb:	mov    BYTE PTR [ebp-0x1c],0x26
  4028cf:	movzx  edx,BYTE PTR [ebp-0x1c]
  4028d3:	add    edx,0xaa68
  4028d9:	mov    BYTE PTR [ebp-0x20],dl
  4028dc:	cmp    BYTE PTR [ebp-0x20],0x8e
  4028e0:	je     0x4028ed
  4028e2:	movzx  edx,BYTE PTR [ebp-0x20]
  4028e6:	mov    eax,edx
  4028e8:	jmp    0x402eac
  4028ed:	movzx  ecx,BYTE PTR [ebp-0x1c]
  4028f1:	shr    ecx,0x3
  4028f4:	mov    WORD PTR [ebp-0x24],cx
  4028f8:	cmp    WORD PTR [ebp-0x24],0x4
  4028fd:	jge    0x402908
  4028ff:	movzx  eax,WORD PTR [ebp-0x24]
  402903:	jmp    0x402eac
  402908:	movzx  eax,BYTE PTR [ebp-0x20]
  40290c:	shl    eax,0x8
  40290f:	mov    WORD PTR [ebp-0x28],ax
  402913:	movzx  edx,BYTE PTR [ebp-0x20]
  402917:	movzx  eax,WORD PTR [ebp-0x24]
  40291b:	imul   edx,eax
  40291e:	add    edx,0xfdc8
  402924:	mov    ecx,DWORD PTR [ebp-0x14]
  402927:	sub    ecx,edx
  402929:	mov    DWORD PTR [ebp-0x14],ecx
  40292c:	jmp    0x4028b0
  40292e:	mov    ecx,esi
  402930:	movzx  edx,WORD PTR [ebp-0x10]
  402934:	or     ecx,edx
  402936:	add    ecx,0xffff0001
  40293c:	mov    edx,DWORD PTR [ebp-0x14]
  40293f:	add    edx,ecx
  402941:	mov    DWORD PTR [ebp-0x4],edx
  402944:	mov    edx,esi
  402946:	movzx  ecx,WORD PTR [ebp-0x10]
  40294a:	imul   edx,ecx
  40294d:	add    edx,0xfb373f85
  402953:	mov    DWORD PTR [ebp-0x2c],edx
  402956:	mov    edx,DWORD PTR [ebp-0x4]
  402959:	mov    ecx,DWORD PTR [edx+0x3c]
  40295c:	mov    eax,DWORD PTR [ebp-0x4]
  40295f:	add    eax,ecx
  402961:	mov    ecx,esi
  402963:	movzx  edx,WORD PTR [ebp-0x10]
  402967:	sub    ecx,edx
  402969:	sub    ecx,0xffff0002
  40296f:	sub    eax,ecx
  402971:	mov    DWORD PTR [ebp-0x4],eax
  402974:	mov    ecx,edi
  402976:	movzx  ebx,cl
  402979:	cmp    DWORD PTR [ebp-0x2c],0xfb383f84
  402980:	je     0x40298d
  402982:	movzx  ecx,WORD PTR [ebp-0x10]
  402986:	mov    eax,ecx
  402988:	jmp    0x402eac
  40298d:	mov    ecx,ebx
  40298f:	movzx  eax,WORD PTR [ebp-0x10]
  402993:	or     ecx,eax
  402995:	add    ecx,0xffff001f
  40299b:	mov    eax,DWORD PTR [ebp-0x4]
  40299e:	mov    edx,DWORD PTR [eax+ecx*4]
  4029a1:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a4:	add    ecx,edx
  4029a6:	mov    edx,esi
  4029a8:	or     edx,edi
  4029aa:	add    edx,0xffffffff
  4029ad:	sub    ecx,edx
  4029af:	mov    DWORD PTR [ebp-0x30],ecx
  4029b2:	mov    edx,ebx
  4029b4:	add    edx,0x53000000
  4029ba:	movzx  edi,dl
  4029bd:	mov    edx,edi
  4029bf:	movzx  ecx,WORD PTR [ebp-0x10]
  4029c3:	xor    edx,ecx
  4029c5:	add    edx,0xffff0007
  4029cb:	mov    eax,DWORD PTR [ebp-0x30]
  4029ce:	mov    ecx,DWORD PTR [eax+edx*4]
  4029d1:	mov    eax,ebx
  4029d3:	sub    eax,edi
  4029d5:	sub    ecx,eax
  4029d7:	mov    DWORD PTR [ebp-0x8],ecx
  4029da:	movzx  edx,WORD PTR [ebp-0x10]
  4029de:	xor    edx,0x13a5
  4029e4:	mov    eax,edi
  4029e6:	imul   eax,edx
  4029e9:	mov    DWORD PTR [ebp-0x34],eax
  4029ec:	mov    edx,esi
  4029ee:	add    edx,ebx
  4029f0:	sub    edx,0xfffffff9
  4029f3:	mov    eax,DWORD PTR [ebp-0x30]
  4029f6:	mov    ecx,DWORD PTR [eax+edx*4]
  4029f9:	mov    eax,DWORD PTR [ebp-0x14]
  4029fc:	add    eax,ecx
  4029fe:	mov    edx,DWORD PTR [ebp-0x2c]
  402a01:	add    edx,esi
  402a03:	add    edx,0x4c7c07b
  402a09:	sub    eax,edx
  402a0b:	mov    DWORD PTR [ebp-0x38],eax
  402a0e:	movzx  eax,WORD PTR [ebp-0x10]
  402a12:	movzx  edi,al
  402a15:	cmp    DWORD PTR [ebp-0x34],0xffffffff
  402a19:	jne    0x402a24
  402a1b:	mov    ecx,ebx
  402a1d:	mov    eax,ecx
  402a1f:	jmp    0x402eac
  402a24:	movzx  ecx,WORD PTR [ebp-0x10]
  402a28:	or     ecx,DWORD PTR [ebp-0x34]
  402a2b:	add    ecx,0xffff0001
  402a31:	cmp    DWORD PTR [ebp-0x8],ecx
  402a34:	je     0x402e96
  402a3a:	mov    BYTE PTR [ebp-0x3c],0x0
  402a3e:	movzx  edx,BYTE PTR [ebp-0x3c]
  402a42:	or     edx,edx
  402a44:	movzx  ecx,BYTE PTR [ebp-0x3c]
  402a48:	add    edx,ecx
  402a4a:	mov    WORD PTR [ebp-0x40],dx
  402a4e:	cmp    WORD PTR [ebp-0x40],0x0
  402a53:	jle    0x402a5e
  402a55:	movzx  eax,BYTE PTR [ebp-0x3c]
  402a59:	jmp    0x402eac
  402a5e:	movzx  edx,BYTE PTR [ebp-0x3c]
  402a62:	xor    edx,edx
  402a64:	movzx  ecx,WORD PTR [ebp-0x40]
  402a68:	imul   ecx,edx
  402a6b:	mov    DWORD PTR [ebp-0x44],ecx
  402a6e:	movzx  eax,WORD PTR [ebp-0x40]
  402a72:	add    eax,DWORD PTR [ebp-0x44]
  402a75:	mov    ecx,DWORD PTR [ebp-0x38]
  402a78:	mov    edx,DWORD PTR [ecx+eax*4]
  402a7b:	add    edx,DWORD PTR [ebp-0x14]
  402a7e:	mov    eax,DWORD PTR [ebp-0x44]
  402a81:	movzx  ecx,BYTE PTR [ebp-0x3c]
  402a85:	and    eax,ecx
  402a87:	sub    edx,eax
  402a89:	mov    DWORD PTR [ebp-0x48],edx
  402a8c:	movzx  edx,BYTE PTR [ebp-0x3c]
  402a90:	mov    BYTE PTR [ebp-0x4c],dl
  402a93:	mov    edx,DWORD PTR [ebp-0x44]
  402a96:	movzx  ecx,BYTE PTR [ebp-0x4c]
  402a9a:	sub    edx,ecx
  402a9c:	mov    DWORD PTR [ebp-0x50],edx
  402a9f:	movzx  eax,BYTE PTR [ebp-0x3c]
  402aa3:	sub    eax,0x49d00000
  402aa8:	movzx  edx,BYTE PTR [ebp-0x3c]
  402aac:	add    eax,edx
  402aae:	mov    BYTE PTR [ebp-0x3c],al
  402ab1:	cmp    DWORD PTR [ebp-0x44],0xffffffff
  402ab5:	jne    0x402ac1
  402ab7:	mov    edx,DWORD PTR [ebp-0x44]
  402aba:	mov    eax,edx
  402abc:	jmp    0x402eac
  402ac1:	movzx  edx,WORD PTR [ebp-0x40]
  402ac5:	add    edx,DWORD PTR [ebp-0x44]
  402ac8:	mov    eax,DWORD PTR [ebp-0x48]
  402acb:	movzx  ecx,BYTE PTR [eax+edx*1]
  402acf:	mov    eax,DWORD PTR [ebp-0x44]
  402ad2:	movzx  edx,BYTE PTR [ebp-0x3c]
  402ad6:	xor    eax,edx
  402ad8:	cmp    ecx,eax
  402ada:	je     0x402b8f
  402ae0:	mov    BYTE PTR [ebp-0x54],0x58
  402ae4:	movzx  edx,BYTE PTR [ebp-0x54]
  402ae8:	or     edx,edx
  402aea:	mov    WORD PTR [ebp-0x58],dx
  402aee:	cmp    WORD PTR [ebp-0x58],0x58
  402af3:	jge    0x402b00
  402af5:	movzx  ecx,BYTE PTR [ebp-0x54]
  402af9:	mov    eax,ecx
  402afb:	jmp    0x402eac
  402b00:	movzx  eax,BYTE PTR [ebp-0x54]
  402b04:	xor    eax,0x5b00
  402b09:	mov    WORD PTR [ebp-0x5c],ax
  402b0d:	cmp    WORD PTR [ebp-0x58],0x58
  402b12:	jge    0x402b1d
  402b14:	movzx  eax,WORD PTR [ebp-0x58]
  402b18:	jmp    0x402eac
  402b1d:	movzx  ecx,WORD PTR [ebp-0x5c]
  402b21:	xor    ecx,0x2155
  402b27:	mov    BYTE PTR [ebp-0x60],cl
  402b2a:	mov    eax,DWORD PTR [ebp-0x50]
  402b2d:	shl    eax,0x7
  402b30:	mov    edx,DWORD PTR [ebp-0x50]
  402b33:	shr    edx,0x19
  402b36:	or     eax,edx
  402b38:	mov    DWORD PTR [ebp-0x50],eax
  402b3b:	movzx  eax,BYTE PTR [ebp-0x60]
  402b3f:	mov    DWORD PTR [ebp-0x64],eax
  402b42:	movzx  ecx,BYTE PTR [ebp-0x60]
  402b46:	movzx  edx,WORD PTR [ebp-0x5c]
  402b4a:	or     ecx,edx
  402b4c:	sub    ecx,0x5b5d
  402b52:	mov    eax,DWORD PTR [ebp-0x48]
  402b55:	movzx  edx,BYTE PTR [eax+ecx*1]
  402b59:	xor    edx,0x53
  402b5c:	mov    ecx,DWORD PTR [ebp-0x50]
  402b5f:	add    ecx,edx
  402b61:	mov    DWORD PTR [ebp-0x50],ecx
  402b64:	mov    ecx,DWORD PTR [ebp-0x64]
  402b67:	mov    BYTE PTR [ebp-0x60],cl
  402b6a:	mov    ecx,DWORD PTR [ebp-0x64]
  402b6d:	movzx  eax,WORD PTR [ebp-0x5c]
  402b71:	or     ecx,eax
  402b73:	sub    ecx,0x5b5c
  402b79:	mov    edx,DWORD PTR [ebp-0x48]
  402b7c:	add    edx,ecx
  402b7e:	mov    DWORD PTR [ebp-0x48],edx
  402b81:	movzx  eax,WORD PTR [ebp-0x58]
  402b85:	add    eax,eax
  402b87:	mov    BYTE PTR [ebp-0x68],al
  402b8a:	jmp    0x402ac1
  402b8f:	movzx  ecx,WORD PTR [ebp-0x40]
  402b93:	or     ecx,0xec
  402b99:	movzx  eax,WORD PTR [ebp-0x40]
  402b9d:	imul   eax,ecx
  402ba0:	mov    DWORD PTR [ebp-0x44],eax
  402ba3:	mov    ecx,DWORD PTR [ebp-0x18]
  402ba6:	cmp    DWORD PTR [ebp-0x50],ecx
  402ba9:	jne    0x402ddf
  402baf:	mov    BYTE PTR [ebp-0x6c],0xd9
  402bb3:	movzx  ecx,BYTE PTR [ebp-0x6c]
  402bb7:	shl    ecx,0x18
  402bba:	mov    WORD PTR [ebp-0x70],cx
  402bbe:	cmp    BYTE PTR [ebp-0x6c],0xd9
  402bc2:	je     0x402bcf
  402bc4:	movzx  edx,BYTE PTR [ebp-0x6c]
  402bc8:	mov    eax,edx
  402bca:	jmp    0x402eac
  402bcf:	movzx  eax,WORD PTR [ebp-0x70]
  402bd3:	and    eax,eax
  402bd5:	mov    DWORD PTR [ebp-0x74],eax
  402bd8:	movzx  edx,BYTE PTR [ebp-0x6c]
  402bdc:	or     edx,DWORD PTR [ebp-0x74]
  402bdf:	movzx  ecx,WORD PTR [ebp-0x70]
  402be3:	sub    ecx,edx
  402be5:	mov    DWORD PTR [ebp-0x74],ecx
  402be8:	movzx  ecx,BYTE PTR [ebp-0x6c]
  402bec:	movzx  eax,WORD PTR [ebp-0x70]
  402bf0:	or     ecx,eax
  402bf2:	sub    ecx,0xd3
  402bf8:	mov    eax,DWORD PTR [ebp-0x30]
  402bfb:	mov    edx,DWORD PTR [eax+ecx*4]
  402bfe:	sub    edx,DWORD PTR [ebp-0x8]
  402c01:	movzx  ecx,BYTE PTR [ebp-0x6c]
  402c05:	movzx  eax,WORD PTR [ebp-0x70]
  402c09:	and    ecx,eax
  402c0b:	sub    edx,ecx
  402c0d:	mov    DWORD PTR [ebp-0x8],edx
  402c10:	movzx  eax,WORD PTR [ebp-0x70]
  402c14:	xor    edx,edx
  402c16:	div    DWORD PTR [ebp-0x74]
  402c19:	mov    BYTE PTR [ebp-0x6c],dl
  402c1c:	mov    ecx,DWORD PTR [ebp-0x74]
  402c1f:	movzx  eax,WORD PTR [ebp-0x70]
  402c23:	sub    ecx,eax
  402c25:	sub    ecx,0xffffff1e
  402c2b:	mov    edx,DWORD PTR [ebp-0x30]
  402c2e:	mov    eax,DWORD PTR [edx+ecx*4]
  402c31:	mov    ecx,DWORD PTR [ebp-0x74]
  402c34:	movzx  edx,BYTE PTR [ebp-0x6c]
  402c38:	xor    ecx,edx
  402c3a:	sub    ecx,0xffffff27
  402c40:	sub    eax,ecx
  402c42:	mov    DWORD PTR [ebp-0x78],eax
  402c45:	mov    ecx,DWORD PTR [ebp-0x74]
  402c48:	mov    WORD PTR [ebp-0x7c],cx
  402c4c:	mov    dx,WORD PTR [ebp-0x70]
  402c50:	test   dx,dx
  402c53:	je     0x402c5e
  402c55:	movzx  eax,WORD PTR [ebp-0x7c]
  402c59:	jmp    0x402eac
  402c5e:	mov    ecx,DWORD PTR [ebp-0x78]
  402c61:	add    ecx,DWORD PTR [ebp-0x14]
  402c64:	movzx  eax,WORD PTR [ebp-0x70]
  402c68:	movzx  edx,BYTE PTR [ebp-0x6c]
  402c6c:	or     eax,edx
  402c6e:	sub    ecx,eax
  402c70:	mov    DWORD PTR [ebp-0x78],ecx
  402c73:	movzx  ecx,BYTE PTR [ebp-0x6c]
  402c77:	add    ecx,0x33
  402c7a:	movzx  edx,WORD PTR [ebp-0x70]
  402c7e:	sub    ecx,edx
  402c80:	mov    WORD PTR [ebp-0x80],cx
  402c84:	mov    eax,DWORD PTR [ebp-0x74]
  402c87:	movzx  ecx,WORD PTR [ebp-0x80]
  402c8b:	and    eax,ecx
  402c8d:	add    eax,0xffffffdd
  402c90:	mov    edx,DWORD PTR [ebp-0x8]
  402c93:	add    edx,eax
  402c95:	mov    ecx,DWORD PTR [ebp-0x78]
  402c98:	movzx  eax,WORD PTR [ecx+edx*2]
  402c9c:	mov    DWORD PTR [ebp-0x8],eax
  402c9f:	movzx  ecx,BYTE PTR [ebp-0x6c]
  402ca3:	sub    ecx,0x1
  402ca6:	mov    BYTE PTR [ebp-0x6c],cl
  402ca9:	cmp    WORD PTR [ebp-0x70],0x0
  402cae:	jge    0x402cbb
  402cb0:	movzx  edx,BYTE PTR [ebp-0x6c]
  402cb4:	mov    eax,edx
  402cb6:	jmp    0x402eac
  402cbb:	mov    eax,DWORD PTR [ebp-0x74]
  402cbe:	movzx  ecx,WORD PTR [ebp-0x70]
  402cc2:	sub    eax,ecx
  402cc4:	add    eax,0xe0
  402cc9:	mov    ecx,DWORD PTR [ebp-0x30]
  402ccc:	mov    edx,DWORD PTR [ecx+eax*4]
  402ccf:	mov    ecx,DWORD PTR [ebp-0x14]
  402cd2:	add    ecx,edx
  402cd4:	movzx  edx,WORD PTR [ebp-0x7c]
  402cd8:	movzx  eax,WORD PTR [ebp-0x80]
  402cdc:	and    edx,eax
  402cde:	add    edx,0xffffffdd
  402ce1:	add    ecx,edx
  402ce3:	mov    DWORD PTR [ebp-0x38],ecx
  402ce6:	mov    edx,DWORD PTR [ebp-0x74]
  402ce9:	imul   edx,edx,0xf0
  402cef:	mov    DWORD PTR [ebp-0x84],edx
  402cf5:	mov    eax,DWORD PTR [ebp-0x74]
  402cf8:	sub    eax,DWORD PTR [ebp-0x84]
  402cfe:	add    eax,0xffff3569
  402d03:	mov    edx,DWORD PTR [ebp-0x8]
  402d06:	add    edx,eax
  402d08:	mov    ecx,DWORD PTR [ebp-0x38]
  402d0b:	mov    eax,DWORD PTR [ecx+edx*4]
  402d0e:	mov    edx,DWORD PTR [ebp-0x14]
  402d11:	add    edx,eax
  402d13:	mov    DWORD PTR [ebp-0x88],edx
  402d19:	movzx  eax,WORD PTR [ebp-0x80]
  402d1d:	mov    BYTE PTR [ebp-0x6c],al
  402d20:	movzx  eax,WORD PTR [ebp-0x7c]
  402d24:	movzx  edx,WORD PTR [ebp-0x70]
  402d28:	add    eax,edx
  402d2a:	add    eax,0x48a89d86
  402d2f:	mov    ecx,0x48ea0ca1
  402d34:	xor    ecx,eax
  402d36:	mov    DWORD PTR [ebp-0x4],ecx
  402d39:	movzx  ecx,WORD PTR [ebp-0x80]
  402d3d:	and    ecx,0xb06500
  402d43:	mov    WORD PTR [ebp-0x80],cx
  402d47:	cmp    BYTE PTR [ebp-0x6c],0x33
  402d4b:	je     0x402d58
  402d4d:	movzx  ecx,WORD PTR [ebp-0x7c]
  402d51:	mov    eax,ecx
  402d53:	jmp    0x402eac
  402d58:	movzx  edx,WORD PTR [ebp-0x70]
  402d5c:	xor    edx,DWORD PTR [ebp-0x74]
  402d5f:	add    edx,0x119
  402d65:	push   edx
  402d66:	mov    eax,DWORD PTR [ebp-0x74]
  402d69:	movzx  ecx,WORD PTR [ebp-0x70]
  402d6d:	or     eax,ecx
  402d6f:	sub    eax,0xffffef27
  402d74:	push   eax
  402d75:	movzx  eax,WORD PTR [ebp-0x80]
  402d79:	add    eax,DWORD PTR [ebp-0x74]
  402d7c:	sub    eax,0xfffdff5f
  402d81:	push   eax
  402d82:	movzx  ecx,WORD PTR [ebp-0x70]
  402d86:	movzx  edx,WORD PTR [ebp-0x7c]
  402d8a:	add    ecx,edx
  402d8c:	add    ecx,0xffff00d9
  402d92:	push   ecx
  402d93:	call   DWORD PTR [ebp-0x88]
  402d99:	mov    DWORD PTR [ebp-0x8c],eax
  402d9f:	movzx  edx,WORD PTR [ebp-0x80]
  402da3:	mov    BYTE PTR [ebp-0x6c],dl
  402da6:	cmp    WORD PTR [ebp-0x7c],0xff27
  402dac:	jge    0x402db7
  402dae:	movzx  eax,WORD PTR [ebp-0x7c]
  402db2:	jmp    0x402eac
  402db7:	mov    eax,DWORD PTR [ebp-0x74]
  402dba:	movzx  edx,WORD PTR [ebp-0x70]
  402dbe:	xor    eax,edx
  402dc0:	sub    eax,0xffffff27
  402dc5:	mov    edx,DWORD PTR [ebp-0x8c]
  402dcb:	sub    edx,eax
  402dcd:	mov    ecx,DWORD PTR [ebp-0x4]
  402dd0:	mov    DWORD PTR [ecx],edx
  402dd2:	mov    ecx,DWORD PTR [ebp-0x84]
  402dd8:	imul   ecx,ecx,0x61
  402ddb:	mov    WORD PTR [ebp-0x80],cx
  402ddf:	movzx  ecx,BYTE PTR [ebp-0x4c]
  402de3:	sub    ecx,DWORD PTR [ebp-0x44]
  402de6:	add    ecx,0x4
  402de9:	mov    edx,DWORD PTR [ebp-0x38]
  402dec:	add    edx,ecx
  402dee:	mov    DWORD PTR [ebp-0x38],edx
  402df1:	movzx  ecx,BYTE PTR [ebp-0x4c]
  402df5:	and    ecx,ecx
  402df7:	mov    WORD PTR [ebp-0x40],cx
  402dfb:	cmp    BYTE PTR [ebp-0x3c],0xff
  402dff:	jne    0x402e0c
  402e01:	movzx  edx,BYTE PTR [ebp-0x4c]
  402e05:	mov    eax,edx
  402e07:	jmp    0x402eac
  402e0c:	movzx  edx,BYTE PTR [ebp-0x3c]
  402e10:	movzx  eax,WORD PTR [ebp-0x40]
  402e14:	sub    edx,eax
  402e16:	push   edx
  402e17:	movzx  ecx,BYTE PTR [ebp-0x3c]
  402e1b:	movzx  edx,BYTE PTR [ebp-0x4c]
  402e1f:	imul   ecx,edx
  402e22:	push   ecx
  402e23:	movzx  edx,BYTE PTR [ebp-0x3c]
  402e27:	movzx  ecx,WORD PTR [ebp-0x40]
  402e2b:	xor    edx,ecx
  402e2d:	push   edx
  402e2e:	call   DWORD PTR ds:0x423004
  402e34:	mov    BYTE PTR [ebp-0x4c],al
  402e37:	mov    cl,BYTE PTR [ebp-0x4c]
  402e3a:	test   cl,cl
  402e3c:	je     0x402e6b
  402e3e:	movzx  eax,WORD PTR [ebp-0x40]
  402e42:	or     eax,0xd736
  402e47:	movzx  edx,BYTE PTR [ebp-0x3c]
  402e4b:	imul   edx,eax
  402e4e:	push   edx
  402e4f:	movzx  edx,WORD PTR [ebp-0x40]
  402e53:	push   edx
  402e54:	movzx  eax,WORD PTR [ebp-0x40]
  402e58:	or     eax,0xf2000000
  402e5d:	movzx  ecx,WORD PTR [ebp-0x40]
  402e61:	imul   ecx,eax
  402e64:	push   ecx
  402e65:	call   DWORD PTR ds:0x423030
  402e6b:	mov    edx,DWORD PTR [ebp-0x8]
  402e6e:	sub    edx,0x1
  402e71:	mov    DWORD PTR [ebp-0x8],edx
  402e74:	movzx  eax,WORD PTR [ebp-0x40]
  402e78:	xor    eax,eax
  402e7a:	imul   eax,eax,0x34340000
  402e80:	mov    WORD PTR [ebp-0x40],ax
  402e84:	cmp    DWORD PTR [ebp-0x44],0x0
  402e88:	jge    0x402e91
  402e8a:	mov    ecx,DWORD PTR [ebp-0x44]
  402e8d:	mov    eax,ecx
  402e8f:	jmp    0x402eac
  402e91:	jmp    0x402a24
  402e96:	mov    ecx,DWORD PTR [ebp-0x2c]
  402e99:	add    ecx,DWORD PTR [ebp-0x34]
  402e9c:	sub    ecx,DWORD PTR [ebp-0x34]
  402e9f:	mov    BYTE PTR [ebp-0x90],cl
  402ea5:	movzx  eax,BYTE PTR [ebp-0x90]
  402eac:	pop    ebx
  402ead:	pop    edi
  402eae:	pop    esi
  402eaf:	mov    esp,ebp
  402eb1:	pop    ebp
  402eb2:	ret    
  402eb3:	push   0x30000
  402eb8:	push   0x10000
  402ebd:	call   0x404505
  402ec2:	pop    ecx
  402ec3:	pop    ecx
  402ec4:	ret    
  402ec5:	mov    eax,DWORD PTR [ebp-0x14]
  402ec8:	mov    ecx,DWORD PTR [eax]
  402eca:	mov    ecx,DWORD PTR [ecx]
  402ecc:	mov    DWORD PTR [ebp-0x78],ecx
  402ecf:	push   eax
  402ed0:	push   ecx
  402ed1:	call   0x404514
  402ed6:	pop    ecx
  402ed7:	pop    ecx
  402ed8:	ret    
  402ed9:	push   ebp
  402eda:	mov    ebp,esp
  402edc:	sub    esp,0x14
  402edf:	push   esi
  402ee0:	push   edi
  402ee1:	push   ebx
  402ee2:	mov    ecx,DWORD PTR [ebp+0x10]
  402ee5:	movzx  esi,cl
  402ee8:	mov    edx,esi
  402eea:	shr    edx,1
  402eec:	movzx  edi,dx
  402eef:	mov    eax,esi
  402ef1:	shl    eax,0x8
  402ef4:	movzx  ebx,al
  402ef7:	mov    ecx,edi
  402ef9:	add    ecx,esi
  402efb:	add    ecx,0xbc0ec9e9
  402f01:	movzx  esi,cl
  402f04:	mov    edx,edi
  402f06:	imul   edx,edx,0x77c00000
  402f0c:	imul   edx,DWORD PTR [ebp+0x10]
  402f10:	mov    DWORD PTR [ebp-0x4],edx
  402f13:	mov    eax,esi
  402f15:	mov    BYTE PTR [ebp-0x8],al
  402f18:	cmp    BYTE PTR [ebp-0x8],0xea
  402f1c:	jge    0x402f25
  402f1e:	mov    eax,edi
  402f20:	jmp    0x4030a1
  402f25:	mov    edx,esi
  402f27:	movzx  ebx,dl
  402f2a:	mov    edx,DWORD PTR [ebp+0xc]
  402f2d:	sub    edx,0x1000000
  402f33:	sub    edx,esi
  402f35:	movzx  esi,dl
  402f38:	mov    edx,ebx
  402f3a:	mov    DWORD PTR [ebp-0xc],edx
  402f3d:	cmp    edi,0x0
  402f40:	jge    0x402f49
  402f42:	mov    eax,edi
  402f44:	jmp    0x4030a1
  402f49:	mov    edx,esi
  402f4b:	sub    edx,edi
  402f4d:	add    edx,0xffffffde
  402f50:	push   edx
  402f51:	mov    ecx,edi
  402f53:	and    ecx,DWORD PTR [ebp-0xc]
  402f56:	push   ecx
  402f57:	mov    eax,DWORD PTR [ebp-0x4]
  402f5a:	add    eax,ebx
  402f5c:	sub    eax,0xea
  402f61:	push   eax
  402f62:	call   DWORD PTR ds:0x423004
  402f68:	movzx  ebx,al
  402f6b:	mov    eax,ebx
  402f6d:	test   al,al
  402f6f:	je     0x402f7f
  402f71:	mov    eax,DWORD PTR [ebp-0xc]
  402f74:	xor    eax,edi
  402f76:	and    eax,edi
  402f78:	push   eax
  402f79:	call   DWORD PTR ds:0x423014
  402f7f:	mov    eax,ebx
  402f81:	mov    BYTE PTR [ebp-0x10],al
  402f84:	mov    ecx,DWORD PTR [ebp+0x8]
  402f87:	and    ecx,DWORD PTR [ebp-0xc]
  402f8a:	add    ecx,0x169e0000
  402f90:	mov    DWORD PTR [ebp-0x4],ecx
  402f93:	cmp    BYTE PTR [ebp-0x8],0xea
  402f97:	jle    0x402fa2
  402f99:	mov    edx,edi
  402f9b:	mov    eax,edx
  402f9d:	jmp    0x4030a1
  402fa2:	mov    edx,esi
  402fa4:	sub    edx,0x1
  402fa7:	movzx  esi,dl
  402faa:	cmp    DWORD PTR [ebp-0x4],0x169e002a
  402fb1:	jne    0x402fc2
  402fb3:	movzx  ecx,BYTE PTR [ebp-0x8]
  402fb7:	push   ecx
  402fb8:	push   esi
  402fb9:	push   edi
  402fba:	call   0x401000
  402fbf:	movzx  ebx,al
  402fc2:	mov    eax,DWORD PTR [ebp+0x10]
  402fc5:	mov    DWORD PTR [ebp-0x14],eax
  402fc8:	mov    eax,edi
  402fca:	xor    edx,edx
  402fcc:	div    DWORD PTR [ebp-0x14]
  402fcf:	movzx  ebx,al
  402fd2:	cmp    ebx,0x0
  402fd5:	jle    0x402fe1
  402fd7:	mov    edx,DWORD PTR [ebp-0x4]
  402fda:	mov    eax,edx
  402fdc:	jmp    0x4030a1
  402fe1:	mov    eax,DWORD PTR [ebp-0x4]
  402fe4:	xor    edx,edx
  402fe6:	div    DWORD PTR [ebp-0x14]
  402fe9:	mov    BYTE PTR [ebp-0x8],dl
  402fec:	cmp    BYTE PTR [ebp-0x8],0x2a
  402ff0:	jne    0x403004
  402ff2:	movzx  edx,BYTE PTR [ebp-0x10]
  402ff6:	push   edx
  402ff7:	movzx  ecx,BYTE PTR [ebp-0x8]
  402ffb:	push   ecx
  402ffc:	call   0x402165
  403001:	movzx  edi,ax
  403004:	mov    eax,ebx
  403006:	sub    eax,DWORD PTR [ebp+0xc]
  403009:	add    eax,0x68423082
  40300e:	movzx  ebx,al
  403011:	mov    edx,edi
  403013:	mov    DWORD PTR [ebp-0x4],edx
  403016:	mov    eax,DWORD PTR [ebp-0x4]
  403019:	sub    eax,0xb4000000
  40301e:	add    eax,ebx
  403020:	movzx  edi,ax
  403023:	cmp    DWORD PTR [ebp-0x14],0xee1c0000
  40302a:	jne    0x403032
  40302c:	movzx  eax,BYTE PTR [ebp-0x10]
  403030:	jmp    0x4030a1
  403032:	mov    eax,esi
  403034:	xor    edx,edx
  403036:	div    DWORD PTR [ebp-0x14]
  403039:	mov    DWORD PTR [ebp-0x14],edx
  40303c:	cmp    edi,0xada0
  403042:	je     0x40304a
  403044:	mov    edx,esi
  403046:	mov    eax,edx
  403048:	jmp    0x4030a1
  40304a:	mov    edx,ebx
  40304c:	imul   edx,DWORD PTR [ebp-0xc]
  403050:	sub    edx,0x6bdc
  403056:	push   edx
  403057:	movzx  edx,BYTE PTR [ebp-0x8]
  40305b:	add    edx,edi
  40305d:	add    edx,0xffff5236
  403063:	push   edx
  403064:	mov    edx,edi
  403066:	or     edx,DWORD PTR [ebp-0x4]
  403069:	add    edx,0xffff5256
  40306f:	push   edx
  403070:	call   DWORD PTR ds:0x423004
  403076:	mov    DWORD PTR [ebp-0x4],eax
  403079:	mov    edx,DWORD PTR [ebp-0x4]
  40307c:	test   edx,edx
  40307e:	je     0x40309b
  403080:	push   ebx
  403081:	movzx  eax,BYTE PTR [ebp-0x8]
  403085:	push   eax
  403086:	mov    ecx,esi
  403088:	or     ecx,0x87af00
  40308e:	movzx  eax,BYTE PTR [ebp-0x10]
  403092:	xor    ecx,eax
  403094:	push   ecx
  403095:	call   DWORD PTR ds:0x42302c
  40309b:	movzx  edx,BYTE PTR [ebp-0x8]
  40309f:	mov    eax,edx
  4030a1:	pop    ebx
  4030a2:	pop    edi
  4030a3:	pop    esi
  4030a4:	mov    esp,ebp
  4030a6:	pop    ebp
  4030a7:	ret    0xc
  4030aa:	push   ebp
  4030ab:	mov    ebp,esp
  4030ad:	sub    esp,0x4
  4030b0:	push   esi
  4030b1:	push   edi
  4030b2:	push   ebx
  4030b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4030b6:	movzx  esi,cl
  4030b9:	mov    edx,DWORD PTR [ebp+0x8]
  4030bc:	imul   edx,edx,0xdb32
  4030c2:	add    edx,esi
  4030c4:	movzx  esi,dl
  4030c7:	mov    ecx,esi
  4030c9:	test   cl,cl
  4030cb:	je     0x4030d6
  4030cd:	mov    edx,esi
  4030cf:	mov    eax,edx
  4030d1:	jmp    0x40317e
  4030d6:	mov    eax,esi
  4030d8:	or     eax,DWORD PTR [ebp+0x8]
  4030db:	movzx  edi,ax
  4030de:	mov    ecx,edi
  4030e0:	add    ecx,0x1
  4030e3:	movzx  edi,cx
  4030e6:	mov    eax,edi
  4030e8:	shl    eax,0x10
  4030eb:	movzx  ebx,ax
  4030ee:	mov    eax,esi
  4030f0:	and    eax,DWORD PTR [ebp+0x8]
  4030f3:	add    eax,DWORD PTR [ebp+0x8]
  4030f6:	movzx  ebx,ax
  4030f9:	mov    eax,ebx
  4030fb:	shr    eax,0x2
  4030fe:	mov    WORD PTR [ebp-0x4],ax
  403102:	movzx  edx,WORD PTR [ebp-0x4]
  403106:	imul   edx,edx,0xefa2
  40310c:	mov    eax,DWORD PTR [ebp+0x8]
  40310f:	add    eax,edx
  403111:	mov    WORD PTR [ebp-0x4],ax
  403115:	mov    edx,esi
  403117:	test   dl,dl
  403119:	jne    0x403123
  40311b:	call   0x40397e
  403120:	movzx  esi,al
  403123:	movzx  ecx,WORD PTR [ebp-0x4]
  403127:	or     ecx,0x8a7e0dfa
  40312d:	movzx  ebx,cx
  403130:	mov    ecx,edi
  403132:	movzx  esi,cl
  403135:	cmp    ebx,0xdfa
  40313b:	je     0x403145
  40313d:	movzx  ecx,WORD PTR [ebp-0x4]
  403141:	mov    eax,ecx
  403143:	jmp    0x40317e
  403145:	mov    ecx,DWORD PTR [ebp+0x8]
  403148:	xor    ecx,0xe421aebe
  40314e:	mov    edx,edi
  403150:	add    edx,ecx
  403152:	movzx  edi,dx
  403155:	cmp    esi,0x1
  403158:	jge    0x403160
  40315a:	mov    edx,edi
  40315c:	mov    eax,edx
  40315e:	jmp    0x40317e
  403160:	mov    ecx,edi
  403162:	mov    WORD PTR [ebp-0x4],cx
  403166:	cmp    ebx,0xdfa
  40316c:	je     0x403174
  40316e:	mov    edx,esi
  403170:	mov    eax,edx
  403172:	jmp    0x40317e
  403174:	mov    ecx,ebx
  403176:	shr    ecx,0x2
  403179:	movzx  ebx,cx
  40317c:	mov    eax,edi
  40317e:	pop    ebx
  40317f:	pop    edi
  403180:	pop    esi
  403181:	mov    esp,ebp
  403183:	pop    ebp
  403184:	ret    0x4
  403187:	push   ebp
  403188:	mov    ebp,esp
  40318a:	sub    esp,0x8
  40318d:	push   esi
  40318e:	push   edi
  40318f:	push   ebx
  403190:	mov    esi,0x3607
  403195:	mov    ecx,esi
  403197:	and    ecx,0x7a74
  40319d:	mov    eax,esi
  40319f:	sub    eax,ecx
  4031a1:	mov    edi,eax
  4031a3:	mov    eax,edi
  4031a5:	shl    eax,0x8
  4031a8:	movzx  esi,ax
  4031ab:	cmp    edi,0x402
  4031b1:	jne    0x4031bc
  4031b3:	mov    ecx,esi
  4031b5:	mov    eax,ecx
  4031b7:	jmp    0x403306
  4031bc:	mov    eax,esi
  4031be:	xor    eax,eax
  4031c0:	movzx  ebx,ax
  4031c3:	mov    eax,edi
  4031c5:	imul   eax,eax,0xe2
  4031cb:	mov    WORD PTR [ebp-0x4],ax
  4031cf:	mov    ecx,esi
  4031d1:	xor    ecx,ebx
  4031d3:	mov    edi,ecx
  4031d5:	mov    edx,esi
  4031d7:	or     edx,0x66290000
  4031dd:	movzx  eax,WORD PTR [ebp-0x4]
  4031e1:	or     edx,eax
  4031e3:	movzx  esi,dx
  4031e6:	cmp    edi,0x300
  4031ec:	jne    0x4031f6
  4031ee:	call   0x401c92
  4031f3:	movzx  ebx,ax
  4031f6:	mov    edx,edi
  4031f8:	movzx  eax,WORD PTR [ebp-0x4]
  4031fc:	imul   edx,eax
  4031ff:	mov    DWORD PTR [ebp-0x8],edx
  403202:	cmp    esi,0x8ba5
  403208:	jne    0x403214
  40320a:	mov    ecx,DWORD PTR [ebp-0x8]
  40320d:	mov    eax,ecx
  40320f:	jmp    0x403306
  403214:	mov    edx,edi
  403216:	xor    edx,0x83
  40321c:	mov    eax,esi
  40321e:	imul   eax,edx
  403221:	movzx  ebx,ax
  403224:	cmp    DWORD PTR [ebp-0x8],0x19ff1ff
  40322b:	jne    0x403234
  40322d:	mov    eax,edi
  40322f:	jmp    0x403306
  403234:	mov    eax,DWORD PTR [ebp-0x8]
  403237:	xor    eax,edi
  403239:	mov    WORD PTR [ebp-0x4],ax
  40323d:	cmp    edi,0x300
  403243:	jle    0x40324e
  403245:	movzx  eax,WORD PTR [ebp-0x4]
  403249:	jmp    0x403306
  40324e:	mov    ecx,esi
  403250:	xor    ecx,DWORD PTR [ebp-0x8]
  403253:	sub    ecx,0x19f79a6
  403259:	push   ecx
  40325a:	mov    ecx,edi
  40325c:	add    ecx,esi
  40325e:	add    ecx,0xffff715a
  403264:	push   ecx
  403265:	mov    ecx,DWORD PTR [ebp-0x8]
  403268:	movzx  edx,WORD PTR [ebp-0x4]
  40326c:	or     ecx,edx
  40326e:	add    ecx,0xfe600d00
  403274:	push   ecx
  403275:	call   DWORD PTR ds:0x423004
  40327b:	movzx  ebx,ax
  40327e:	mov    eax,ebx
  403280:	test   ax,ax
  403283:	je     0x40328b
  403285:	call   DWORD PTR ds:0x423050
  40328b:	mov    edx,esi
  40328d:	add    edx,0x1
  403290:	movzx  esi,dx
  403293:	cmp    DWORD PTR [ebp-0x8],0x19ff200
  40329a:	jge    0x4032a0
  40329c:	mov    eax,esi
  40329e:	jmp    0x403306
  4032a0:	cmp    edi,0x300
  4032a6:	jne    0x4032b7
  4032a8:	push   DWORD PTR [ebp-0x8]
  4032ab:	push   esi
  4032ac:	push   DWORD PTR [ebp-0x8]
  4032af:	push   ebx
  4032b0:	call   0x403a5c
  4032b5:	mov    edi,eax
  4032b7:	mov    edx,esi
  4032b9:	and    edx,edi
  4032bb:	movzx  eax,WORD PTR [ebp-0x4]
  4032bf:	imul   eax,edx
  4032c2:	movzx  ebx,ax
  4032c5:	mov    edx,DWORD PTR [ebp-0x8]
  4032c8:	and    edx,edi
  4032ca:	mov    eax,DWORD PTR [ebp-0x8]
  4032cd:	imul   eax,edx
  4032d0:	mov    edi,eax
  4032d2:	cmp    DWORD PTR [ebp-0x8],0x19ff200
  4032d9:	jge    0x4032e1
  4032db:	mov    edx,esi
  4032dd:	mov    eax,edx
  4032df:	jmp    0x403306
  4032e1:	mov    edx,esi
  4032e3:	and    edx,0x1d52
  4032e9:	mov    eax,edi
  4032eb:	add    eax,edx
  4032ed:	mov    WORD PTR [ebp-0x4],ax
  4032f1:	cmp    WORD PTR [ebp-0x4],0x902
  4032f7:	je     0x403300
  4032f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4032fc:	mov    eax,ecx
  4032fe:	jmp    0x403306
  403300:	movzx  ecx,WORD PTR [ebp-0x4]
  403304:	mov    eax,ecx
  403306:	pop    ebx
  403307:	pop    edi
  403308:	pop    esi
  403309:	mov    esp,ebp
  40330b:	pop    ebp
  40330c:	ret    
  40330d:	push   ebp
  40330e:	mov    ebp,esp
  403310:	sub    esp,0xc
  403313:	push   esi
  403314:	push   edi
  403315:	push   ebx
  403316:	mov    esi,0x0
  40331b:	mov    ecx,esi
  40331d:	shr    ecx,1
  40331f:	mov    edi,ecx
  403321:	mov    ecx,edi
  403323:	and    ecx,0x9886dce4
  403329:	movzx  ebx,cl
  40332c:	test   edi,edi
  40332e:	jne    0x403339
  403330:	push   ebx
  403331:	call   0x4030aa
  403336:	movzx  esi,al
  403339:	mov    edx,edi
  40333b:	shr    edx,0x2
  40333e:	mov    DWORD PTR [ebp-0x4],edx
  403341:	mov    edx,edi
  403343:	mov    BYTE PTR [ebp-0x8],dl
  403346:	mov    eax,ebx
  403348:	mov    DWORD PTR [ebp-0x4],eax
  40334b:	mov    ecx,esi
  40334d:	sub    ecx,0x1
  403350:	movzx  esi,cl
  403353:	cmp    edi,0x0
  403356:	jge    0x40335c
  403358:	mov    eax,edi
  40335a:	jmp    0x403372
  40335c:	mov    eax,DWORD PTR [ebp+0x8]
  40335f:	mov    BYTE PTR [ebp-0xc],al
  403362:	cmp    edi,0xffffffff
  403365:	jne    0x40336c
  403367:	mov    eax,DWORD PTR [ebp-0x4]
  40336a:	jmp    0x403372
  40336c:	movzx  ecx,BYTE PTR [ebp-0xc]
  403370:	mov    eax,ecx
  403372:	pop    ebx
  403373:	pop    edi
  403374:	pop    esi
  403375:	mov    esp,ebp
  403377:	pop    ebp
  403378:	ret    0x4
  40337b:	push   ebp
  40337c:	mov    ebp,esp
  40337e:	sub    esp,0x28
  403381:	push   esi
  403382:	push   edi
  403383:	push   ebx
  403384:	mov    esi,0x5b000000
  403389:	mov    eax,esi
  40338b:	imul   eax,eax
  40338e:	movzx  edi,ax
  403391:	mov    eax,edi
  403393:	movzx  ebx,ax
  403396:	mov    eax,ebx
  403398:	mov    esi,eax
  40339a:	cmp    edi,0x0
  40339d:	jge    0x4033a8
  40339f:	mov    edx,ebx
  4033a1:	mov    eax,edx
  4033a3:	jmp    0x40359a
  4033a8:	mov    eax,esi
  4033aa:	add    eax,edi
  4033ac:	add    eax,0x249ce3a0
  4033b1:	mov    edx,0x24debce0
  4033b6:	xor    edx,eax
  4033b8:	mov    DWORD PTR [ebp-0x4],edx
  4033bb:	mov    eax,ebx
  4033bd:	shr    eax,0x2
  4033c0:	mov    WORD PTR [ebp-0x8],ax
  4033c4:	cmp    edi,0x0
  4033c7:	jge    0x4033d0
  4033c9:	mov    eax,ebx
  4033cb:	jmp    0x40359a
  4033d0:	movzx  edx,WORD PTR [ebp-0x8]
  4033d4:	add    edx,esi
  4033d6:	add    edx,0xb55a67ff
  4033dc:	mov    ecx,0xb519f7ef
  4033e1:	xor    ecx,edx
  4033e3:	mov    DWORD PTR [ebp-0xc],ecx
  4033e6:	movzx  edx,WORD PTR [ebp-0x8]
  4033ea:	xor    edx,edx
  4033ec:	xor    edx,ebx
  4033ee:	mov    esi,edx
  4033f0:	cmp    esi,0x0
  4033f3:	jle    0x4033fc
  4033f5:	mov    eax,esi
  4033f7:	jmp    0x40359a
  4033fc:	mov    ecx,ebx
  4033fe:	sub    ecx,esi
  403400:	mov    eax,DWORD PTR [ebp-0xc]
  403403:	mov    eax,DWORD PTR [eax+ecx*4]
  403406:	mov    DWORD PTR [ebp-0x10],eax
  403409:	movzx  ecx,WORD PTR [ebp-0x8]
  40340d:	shr    ecx,0x3
  403410:	mov    BYTE PTR [ebp-0x14],cl
  403413:	movzx  ecx,BYTE PTR [ebp-0x14]
  403417:	movzx  edx,WORD PTR [ebp-0x8]
  40341b:	add    ecx,edx
  40341d:	sub    ecx,0xffffffff
  403420:	mov    DWORD PTR [ebp-0x18],ecx
  403423:	mov    edx,esi
  403425:	sub    edx,0xd69400
  40342b:	mov    BYTE PTR [ebp-0x14],dl
  40342e:	cmp    ebx,0x0
  403431:	jle    0x40343c
  403433:	mov    edx,edi
  403435:	mov    eax,edx
  403437:	jmp    0x40359a
  40343c:	movzx  edx,BYTE PTR [ebp-0x14]
  403440:	movzx  ecx,WORD PTR [ebp-0x8]
  403444:	imul   edx,ecx
  403447:	cmp    DWORD PTR [ebp-0x18],edx
  40344a:	je     0x403550
  403450:	mov    DWORD PTR [ebp-0x1c],0x6e2e
  403457:	mov    edx,DWORD PTR [ebp-0x1c]
  40345a:	imul   edx,edx
  40345d:	add    edx,DWORD PTR [ebp-0x1c]
  403460:	mov    DWORD PTR [ebp-0x20],edx
  403463:	mov    eax,DWORD PTR [ebp-0x20]
  403466:	sub    eax,0x1
  403469:	mov    DWORD PTR [ebp-0x20],eax
  40346c:	mov    ecx,DWORD PTR [ebp-0x20]
  40346f:	imul   ecx,ecx,0x6f9c
  403475:	mov    BYTE PTR [ebp-0x24],cl
  403478:	cmp    DWORD PTR [ebp-0x20],0x2f6bfe71
  40347f:	je     0x40348c
  403481:	movzx  edx,BYTE PTR [ebp-0x24]
  403485:	mov    eax,edx
  403487:	jmp    0x40359a
  40348c:	mov    eax,DWORD PTR [ebp-0x1c]
  40348f:	sub    eax,0x1
  403492:	mov    DWORD PTR [ebp-0x1c],eax
  403495:	mov    eax,DWORD PTR [ebp-0x1c]
  403498:	movzx  edx,BYTE PTR [ebp-0x24]
  40349c:	add    eax,edx
  40349e:	sub    eax,0x6f09
  4034a3:	mov    edx,DWORD PTR [ebp-0x4]
  4034a6:	movzx  ecx,BYTE PTR [edx+eax*1]
  4034aa:	mov    eax,DWORD PTR [ebp-0x10]
  4034ad:	mov    BYTE PTR [eax],cl
  4034af:	mov    eax,DWORD PTR [ebp-0x1c]
  4034b2:	mov    DWORD PTR [ebp-0x1c],eax
  4034b5:	movzx  ecx,BYTE PTR [ebp-0x24]
  4034b9:	or     ecx,DWORD PTR [ebp-0x1c]
  4034bc:	sub    ecx,0x6efc
  4034c2:	mov    edx,DWORD PTR [ebp-0x10]
  4034c5:	add    edx,ecx
  4034c7:	mov    DWORD PTR [ebp-0x10],edx
  4034ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  4034cd:	and    ecx,DWORD PTR [ebp-0x20]
  4034d0:	sub    ecx,DWORD PTR [ebp-0x20]
  4034d3:	mov    DWORD PTR [ebp-0x28],ecx
  4034d6:	cmp    DWORD PTR [ebp-0x28],0xd0946fb0
  4034dd:	jge    0x4034e9
  4034df:	mov    ecx,DWORD PTR [ebp-0x1c]
  4034e2:	mov    eax,ecx
  4034e4:	jmp    0x40359a
  4034e9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4034ec:	sub    ecx,DWORD PTR [ebp-0x20]
  4034ef:	add    ecx,0x2f6b9045
  4034f5:	mov    eax,DWORD PTR [ebp-0x4]
  4034f8:	add    eax,ecx
  4034fa:	mov    DWORD PTR [ebp-0x4],eax
  4034fd:	mov    ecx,DWORD PTR [ebp-0x28]
  403500:	mov    DWORD PTR [ebp-0x28],ecx
  403503:	cmp    DWORD PTR [ebp-0x28],0xd0946fb0
  40350a:	jle    0x403516
  40350c:	mov    edx,DWORD PTR [ebp-0x28]
  40350f:	mov    eax,edx
  403511:	jmp    0x40359a
  403516:	mov    ecx,DWORD PTR [ebp-0x28]
  403519:	xor    ecx,DWORD PTR [ebp-0x20]
  40351c:	sub    ecx,0xffff91c0
  403522:	mov    edx,DWORD PTR [ebp-0x18]
  403525:	sub    edx,ecx
  403527:	mov    DWORD PTR [ebp-0x18],edx
  40352a:	mov    ecx,DWORD PTR [ebp-0x20]
  40352d:	xor    ecx,0x1082
  403533:	mov    edx,DWORD PTR [ebp-0x28]
  403536:	add    edx,ecx
  403538:	mov    DWORD PTR [ebp-0x1c],edx
  40353b:	cmp    DWORD PTR [ebp-0x1c],0x5ea3
  403542:	je     0x40354b
  403544:	mov    ecx,DWORD PTR [ebp-0x20]
  403547:	mov    eax,ecx
  403549:	jmp    0x40359a
  40354b:	jmp    0x40343c
  403550:	mov    eax,esi
  403552:	add    eax,0x9ace
  403557:	add    eax,esi
  403559:	mov    BYTE PTR [ebp-0x14],al
  40355c:	mov    eax,edi
  40355e:	imul   eax,esi
  403561:	sub    eax,0x4aa59801
  403566:	mov    ecx,0xb519f7ef
  40356b:	xor    ecx,eax
  40356d:	mov    DWORD PTR [ebp-0xc],ecx
  403570:	movzx  eax,BYTE PTR [ebp-0x14]
  403574:	shr    eax,1
  403576:	movzx  edi,ax
  403579:	cmp    ebx,0x0
  40357c:	jge    0x403586
  40357e:	movzx  ecx,BYTE PTR [ebp-0x14]
  403582:	mov    eax,ecx
  403584:	jmp    0x40359a
  403586:	mov    eax,DWORD PTR [ebp-0xc]
  403589:	mov    edx,DWORD PTR [ebp-0x10]
  40358c:	mov    DWORD PTR [eax],edx
  40358e:	movzx  eax,BYTE PTR [ebp-0x14]
  403592:	and    eax,ebx
  403594:	mov    WORD PTR [ebp-0x8],ax
  403598:	mov    eax,edi
  40359a:	pop    ebx
  40359b:	pop    edi
  40359c:	pop    esi
  40359d:	mov    esp,ebp
  40359f:	pop    ebp
  4035a0:	ret    
  4035a1:	push   ebp
  4035a2:	mov    ebp,esp
  4035a4:	sub    esp,0x14
  4035a7:	push   esi
  4035a8:	push   edi
  4035a9:	push   ebx
  4035aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4035ad:	movzx  esi,cx
  4035b0:	mov    eax,esi
  4035b2:	shl    eax,0x10
  4035b5:	movzx  edi,al
  4035b8:	mov    ecx,esi
  4035ba:	shr    ecx,1
  4035bc:	movzx  ebx,cl
  4035bf:	mov    edx,edi
  4035c1:	mov    DWORD PTR [ebp-0x4],edx
  4035c4:	cmp    esi,0xffff
  4035ca:	je     0x4035d3
  4035cc:	mov    eax,edi
  4035ce:	jmp    0x4037ab
  4035d3:	mov    edx,DWORD PTR [ebp-0x4]
  4035d6:	and    edx,DWORD PTR [ebp+0x10]
  4035d9:	xor    edx,0x752300
  4035df:	mov    WORD PTR [ebp-0x8],dx
  4035e3:	movzx  edx,WORD PTR [ebp-0x8]
  4035e7:	and    edx,0x2f3c9ce9
  4035ed:	mov    BYTE PTR [ebp-0xc],dl
  4035f0:	movzx  eax,WORD PTR [ebp-0x8]
  4035f4:	and    eax,0x4ad09c0d
  4035f9:	mov    edx,ebx
  4035fb:	sub    edx,eax
  4035fd:	mov    WORD PTR [ebp-0x10],dx
  403601:	cmp    esi,0xfffe
  403607:	jne    0x403614
  403609:	movzx  ecx,BYTE PTR [ebp-0xc]
  40360d:	mov    eax,ecx
  40360f:	jmp    0x4037ab
  403614:	mov    edx,edi
  403616:	shl    edx,0x10
  403619:	mov    WORD PTR [ebp-0x14],dx
  40361d:	cmp    edi,0xff
  403623:	jne    0x403630
  403625:	movzx  ecx,WORD PTR [ebp-0x8]
  403629:	mov    eax,ecx
  40362b:	jmp    0x4037ab
  403630:	movzx  ecx,WORD PTR [ebp-0x14]
  403634:	shr    ecx,0x2
  403637:	movzx  esi,cx
  40363a:	mov    ecx,ebx
  40363c:	and    ecx,0xf3000000
  403642:	add    ecx,ebx
  403644:	movzx  esi,cx
  403647:	cmp    WORD PTR [ebp-0x10],0xff
  40364d:	jle    0x403656
  40364f:	mov    eax,edi
  403651:	jmp    0x4037ab
  403656:	movzx  edx,WORD PTR [ebp-0x8]
  40365a:	and    edx,edi
  40365c:	push   edx
  40365d:	mov    ecx,ebx
  40365f:	or     ecx,DWORD PTR [ebp-0x4]
  403662:	add    ecx,0xffffff01
  403668:	push   ecx
  403669:	movzx  edx,WORD PTR [ebp-0x8]
  40366d:	and    edx,esi
  40366f:	push   edx
  403670:	call   DWORD PTR ds:0x423004
  403676:	mov    BYTE PTR [ebp-0xc],al
  403679:	mov    cl,BYTE PTR [ebp-0xc]
  40367c:	test   cl,cl
  40367e:	je     0x4036a6
  403680:	movzx  eax,WORD PTR [ebp-0x14]
  403684:	movzx  edx,WORD PTR [ebp-0x10]
  403688:	or     eax,edx
  40368a:	movzx  edx,BYTE PTR [ebp-0xc]
  40368e:	sub    eax,edx
  403690:	push   eax
  403691:	movzx  edx,BYTE PTR [ebp-0xc]
  403695:	push   edx
  403696:	movzx  edx,WORD PTR [ebp-0x14]
  40369a:	push   edx
  40369b:	movzx  ecx,WORD PTR [ebp-0x10]
  40369f:	push   ecx
  4036a0:	call   DWORD PTR ds:0x423030
  4036a6:	movzx  edx,WORD PTR [ebp-0x10]
  4036aa:	movzx  edi,dl
  4036ad:	cmp    DWORD PTR [ebp-0x4],0x0
  4036b1:	jge    0x4036be
  4036b3:	movzx  edx,WORD PTR [ebp-0x14]
  4036b7:	mov    eax,edx
  4036b9:	jmp    0x4037ab
  4036be:	cmp    WORD PTR [ebp-0x8],0x2300
  4036c4:	jne    0x4036d4
  4036c6:	movzx  eax,BYTE PTR [ebp-0xc]
  4036ca:	push   eax
  4036cb:	call   0x40252b
  4036d0:	mov    WORD PTR [ebp-0x14],ax
  4036d4:	mov    ecx,DWORD PTR [ebp+0x10]
  4036d7:	sub    ecx,0x5c4e3485
  4036dd:	mov    WORD PTR [ebp-0x10],cx
  4036e1:	cmp    esi,0xff
  4036e7:	je     0x4036f2
  4036e9:	mov    edx,ebx
  4036eb:	mov    eax,edx
  4036ed:	jmp    0x4037ab
  4036f2:	mov    eax,edi
  4036f4:	shr    eax,1
  4036f6:	movzx  esi,ax
  4036f9:	mov    eax,DWORD PTR [ebp+0x14]
  4036fc:	mov    WORD PTR [ebp-0x10],ax
  403700:	mov    ecx,edi
  403702:	movzx  edx,BYTE PTR [ebp-0xc]
  403706:	xor    ecx,edx
  403708:	mov    DWORD PTR [ebp-0x4],ecx
  40370b:	cmp    BYTE PTR [ebp-0xc],0xff
  40370f:	jne    0x40371c
  403711:	movzx  ecx,WORD PTR [ebp-0x8]
  403715:	mov    eax,ecx
  403717:	jmp    0x4037ab
  40371c:	movzx  eax,WORD PTR [ebp-0x14]
  403720:	movzx  edx,BYTE PTR [ebp-0xc]
  403724:	imul   eax,edx
  403727:	sub    eax,0x821b
  40372c:	mov    BYTE PTR [ebp-0xc],al
  40372f:	cmp    esi,0x7f
  403732:	je     0x40373c
  403734:	movzx  edx,BYTE PTR [ebp-0xc]
  403738:	mov    eax,edx
  40373a:	jmp    0x4037ab
  40373c:	cmp    WORD PTR [ebp-0x10],0xc1
  403742:	jne    0x403759
  403744:	movzx  ecx,WORD PTR [ebp-0x14]
  403748:	push   ecx
  403749:	push   ebx
  40374a:	movzx  ecx,WORD PTR [ebp-0x14]
  40374e:	push   ecx
  40374f:	push   ebx
  403750:	call   0x401f1e
  403755:	mov    WORD PTR [ebp-0x10],ax
  403759:	mov    edx,esi
  40375b:	mov    WORD PTR [ebp-0x14],dx
  40375f:	cmp    WORD PTR [ebp-0x10],0xb5
  403765:	jge    0x40376e
  403767:	mov    ecx,DWORD PTR [ebp-0x4]
  40376a:	mov    eax,ecx
  40376c:	jmp    0x4037ab
  40376e:	mov    edx,DWORD PTR [ebp+0xc]
  403771:	imul   edx,edx,0x3cd20000
  403777:	mov    ecx,DWORD PTR [ebp-0x4]
  40377a:	add    ecx,edx
  40377c:	mov    DWORD PTR [ebp-0x4],ecx
  40377f:	cmp    WORD PTR [ebp-0x14],0x7e
  403784:	jne    0x40378b
  403786:	mov    eax,DWORD PTR [ebp-0x4]
  403789:	jmp    0x4037ab
  40378b:	movzx  ecx,WORD PTR [ebp-0x10]
  40378f:	xor    ecx,ebx
  403791:	sub    ecx,DWORD PTR [ebp-0x4]
  403794:	movzx  ebx,cl
  403797:	cmp    WORD PTR [ebp-0x8],0x2300
  40379d:	jle    0x4037a5
  40379f:	mov    ecx,ebx
  4037a1:	mov    eax,ecx
  4037a3:	jmp    0x4037ab
  4037a5:	movzx  edx,BYTE PTR [ebp-0xc]
  4037a9:	mov    eax,edx
  4037ab:	pop    ebx
  4037ac:	pop    edi
  4037ad:	pop    esi
  4037ae:	mov    esp,ebp
  4037b0:	pop    ebp
  4037b1:	ret    0x10
  4037b4:	push   ebp
  4037b5:	mov    ebp,esp
  4037b7:	sub    esp,0xc
  4037ba:	push   esi
  4037bb:	push   edi
  4037bc:	push   ebx
  4037bd:	mov    esi,0x5d8a9e4b
  4037c2:	mov    ecx,esi
  4037c4:	shr    ecx,0x3
  4037c7:	movzx  edi,cx
  4037ca:	cmp    esi,0x5d8a9e4a
  4037d0:	jne    0x4037db
  4037d2:	mov    ecx,edi
  4037d4:	mov    eax,ecx
  4037d6:	jmp    0x403975
  4037db:	mov    eax,esi
  4037dd:	movzx  ebx,ax
  4037e0:	mov    eax,DWORD PTR [ebp+0x8]
  4037e3:	or     eax,edi
  4037e5:	xor    eax,0xa5f90000
  4037ea:	mov    WORD PTR [ebp-0x4],ax
  4037ee:	mov    eax,edi
  4037f0:	xor    edx,edx
  4037f2:	div    esi
  4037f4:	mov    WORD PTR [ebp-0x4],ax
  4037f8:	push   0x0
  4037fa:	mov    edx,ebx
  4037fc:	imul   edx,esi
  4037ff:	add    edx,0xab15607
  403805:	push   edx
  403806:	mov    eax,ebx
  403808:	xor    eax,esi
  40380a:	add    eax,0xa2760000
  40380f:	push   eax
  403810:	call   DWORD PTR ds:0x423004
  403816:	mov    WORD PTR [ebp-0x4],ax
  40381a:	mov    cx,WORD PTR [ebp-0x4]
  40381e:	test   cx,cx
  403821:	je     0x403835
  403823:	mov    ecx,ebx
  403825:	or     ecx,0xfd
  40382b:	add    ecx,esi
  40382d:	push   ecx
  40382e:	push   edi
  40382f:	call   DWORD PTR ds:0x423080
  403835:	cmp    edi,0x53c9
  40383b:	jne    0x403844
  40383d:	call   0x402790
  403842:	mov    esi,eax
  403844:	mov    ecx,esi
  403846:	movzx  edx,WORD PTR [ebp-0x4]
  40384a:	or     ecx,edx
  40384c:	mov    eax,DWORD PTR [ebp+0x8]
  40384f:	add    eax,ecx
  403851:	mov    DWORD PTR [ebp-0x8],eax
  403854:	cmp    ebx,0x9e4a
  40385a:	jne    0x403863
  40385c:	mov    eax,edi
  40385e:	jmp    0x403975
  403863:	mov    ecx,DWORD PTR [ebp-0x8]
  403866:	and    ecx,DWORD PTR [ebp+0x8]
  403869:	or     ecx,esi
  40386b:	movzx  ebx,cx
  40386e:	cmp    DWORD PTR [ebp-0x8],0x102
  403875:	jge    0x40387e
  403877:	mov    eax,edi
  403879:	jmp    0x403975
  40387e:	movzx  eax,WORD PTR [ebp-0x4]
  403882:	mov    esi,eax
  403884:	movzx  edx,WORD PTR [ebp-0x4]
  403888:	sub    edx,0x1
  40388b:	mov    WORD PTR [ebp-0x4],dx
  40388f:	cmp    DWORD PTR [ebp-0x8],0x102
  403896:	jge    0x40389f
  403898:	mov    eax,ebx
  40389a:	jmp    0x403975
  40389f:	test   esi,esi
  4038a1:	jne    0x4038b5
  4038a3:	push   DWORD PTR [ebp-0x8]
  4038a6:	push   ebx
  4038a7:	movzx  ecx,WORD PTR [ebp-0x4]
  4038ab:	push   ecx
  4038ac:	call   0x4012a4
  4038b1:	mov    WORD PTR [ebp-0x4],ax
  4038b5:	mov    edx,esi
  4038b7:	shl    edx,0x18
  4038ba:	mov    DWORD PTR [ebp-0xc],edx
  4038bd:	mov    eax,DWORD PTR [ebp-0xc]
  4038c0:	xor    edx,edx
  4038c2:	div    DWORD PTR [ebp-0x8]
  4038c5:	movzx  ebx,ax
  4038c8:	cmp    ebx,0x0
  4038cb:	jle    0x4038d7
  4038cd:	mov    edx,DWORD PTR [ebp-0xc]
  4038d0:	mov    eax,edx
  4038d2:	jmp    0x403975
  4038d7:	mov    eax,edi
  4038d9:	movzx  edi,ax
  4038dc:	cmp    DWORD PTR [ebp-0x8],0x102
  4038e3:	jge    0x4038ee
  4038e5:	mov    edx,edi
  4038e7:	mov    eax,edx
  4038e9:	jmp    0x403975
  4038ee:	mov    eax,DWORD PTR [ebp+0x8]
  4038f1:	add    eax,DWORD PTR [ebp+0x8]
  4038f4:	movzx  edi,ax
  4038f7:	cmp    DWORD PTR [ebp-0x8],0x102
  4038fe:	jge    0x403905
  403900:	mov    eax,DWORD PTR [ebp-0x8]
  403903:	jmp    0x403975
  403905:	mov    eax,edi
  403907:	shr    eax,1
  403909:	movzx  edi,ax
  40390c:	cmp    WORD PTR [ebp-0x4],0x53e7
  403912:	jge    0x403918
  403914:	mov    eax,esi
  403916:	jmp    0x403975
  403918:	movzx  eax,WORD PTR [ebp-0x4]
  40391c:	sub    eax,DWORD PTR [ebp-0xc]
  40391f:	add    eax,0xffffac19
  403924:	push   eax
  403925:	movzx  eax,WORD PTR [ebp-0x4]
  403929:	xor    eax,edi
  40392b:	add    eax,0xffffac67
  403930:	push   eax
  403931:	mov    ecx,edi
  403933:	xor    ecx,ebx
  403935:	add    ecx,0xffffff82
  403938:	push   ecx
  403939:	call   DWORD PTR ds:0x423004
  40393f:	mov    DWORD PTR [ebp-0x8],eax
  403942:	mov    ecx,DWORD PTR [ebp-0x8]
  403945:	test   ecx,ecx
  403947:	je     0x403970
  403949:	movzx  eax,WORD PTR [ebp-0x4]
  40394d:	and    eax,0x81ce
  403952:	mov    ecx,edi
  403954:	imul   ecx,eax
  403957:	push   ecx
  403958:	mov    eax,DWORD PTR [ebp-0x8]
  40395b:	sub    eax,ebx
  40395d:	push   eax
  40395e:	mov    ecx,ebx
  403960:	imul   ecx,ecx,0xbc53
  403966:	add    ecx,DWORD PTR [ebp-0xc]
  403969:	push   ecx
  40396a:	call   DWORD PTR ds:0x423038
  403970:	mov    ecx,DWORD PTR [ebp-0xc]
  403973:	mov    eax,ecx
  403975:	pop    ebx
  403976:	pop    edi
  403977:	pop    esi
  403978:	mov    esp,ebp
  40397a:	pop    ebp
  40397b:	ret    0x4
  40397e:	push   ebp
  40397f:	mov    ebp,esp
  403981:	sub    esp,0x4
  403984:	push   esi
  403985:	push   edi
  403986:	push   ebx
  403987:	mov    esi,0xc7
  40398c:	mov    eax,esi
  40398e:	shl    eax,0x10
  403991:	movzx  edi,ax
  403994:	mov    ecx,esi
  403996:	xor    ecx,0x535c00
  40399c:	and    ecx,esi
  40399e:	movzx  ebx,cx
  4039a1:	mov    eax,esi
  4039a3:	xor    eax,ebx
  4039a5:	imul   eax,edi
  4039a8:	movzx  esi,al
  4039ab:	mov    ecx,edi
  4039ad:	movzx  edi,cx
  4039b0:	mov    eax,esi
  4039b2:	test   al,al
  4039b4:	je     0x4039bf
  4039b6:	mov    ecx,ebx
  4039b8:	mov    eax,ecx
  4039ba:	jmp    0x403a55
  4039bf:	mov    ecx,esi
  4039c1:	shl    ecx,0x18
  4039c4:	movzx  esi,cl
  4039c7:	cmp    edi,0x0
  4039ca:	jle    0x4039d5
  4039cc:	mov    edx,esi
  4039ce:	mov    eax,edx
  4039d0:	jmp    0x403a55
  4039d5:	mov    eax,ebx
  4039d7:	movzx  edi,ax
  4039da:	cmp    edi,0xc7
  4039e0:	je     0x4039e6
  4039e2:	mov    eax,ebx
  4039e4:	jmp    0x403a55
  4039e6:	mov    ecx,edi
  4039e8:	shl    ecx,0x18
  4039eb:	mov    WORD PTR [ebp-0x4],cx
  4039ef:	cmp    edi,0xc7
  4039f5:	jle    0x4039fb
  4039f7:	mov    eax,edi
  4039f9:	jmp    0x403a55
  4039fb:	movzx  ecx,WORD PTR [ebp-0x4]
  4039ff:	movzx  esi,cl
  403a02:	cmp    edi,0xc7
  403a08:	je     0x403a0e
  403a0a:	mov    eax,ebx
  403a0c:	jmp    0x403a55
  403a0e:	mov    ecx,edi
  403a10:	movzx  ebx,cx
  403a13:	cmp    ebx,0xc7
  403a19:	je     0x403a1f
  403a1b:	mov    eax,edi
  403a1d:	jmp    0x403a55
  403a1f:	cmp    edi,0xc7
  403a25:	jne    0x403a35
  403a27:	push   esi
  403a28:	movzx  eax,WORD PTR [ebp-0x4]
  403a2c:	push   eax
  403a2d:	call   0x403faa
  403a32:	movzx  esi,al
  403a35:	mov    edx,edi
  403a37:	movzx  ecx,WORD PTR [ebp-0x4]
  403a3b:	imul   edx,ecx
  403a3e:	movzx  ebx,dx
  403a41:	mov    ecx,edi
  403a43:	shr    ecx,1
  403a45:	movzx  ebx,cx
  403a48:	movzx  eax,WORD PTR [ebp-0x4]
  403a4c:	add    eax,0x1
  403a4f:	mov    WORD PTR [ebp-0x4],ax
  403a53:	mov    eax,edi
  403a55:	pop    ebx
  403a56:	pop    edi
  403a57:	pop    esi
  403a58:	mov    esp,ebp
  403a5a:	pop    ebp
  403a5b:	ret    
  403a5c:	push   ebp
  403a5d:	mov    ebp,esp
  403a5f:	sub    esp,0xc
  403a62:	push   esi
  403a63:	push   edi
  403a64:	push   ebx
  403a65:	mov    esi,0xc1
  403a6a:	mov    edx,esi
  403a6c:	movzx  edi,dx
  403a6f:	cmp    edi,0xc1
  403a75:	jle    0x403a7e
  403a77:	mov    eax,edi
  403a79:	jmp    0x403b77
  403a7e:	mov    edx,edi
  403a80:	or     edx,DWORD PTR [ebp+0xc]
  403a83:	mov    ecx,edi
  403a85:	imul   ecx,edx
  403a88:	movzx  esi,cx
  403a8b:	cmp    edi,0xc1
  403a91:	jle    0x403a9a
  403a93:	mov    eax,esi
  403a95:	jmp    0x403b77
  403a9a:	mov    ecx,edi
  403a9c:	shl    ecx,0x10
  403a9f:	mov    ebx,ecx
  403aa1:	cmp    ebx,0xc0ffff
  403aa7:	jne    0x403ab0
  403aa9:	mov    eax,esi
  403aab:	jmp    0x403b77
  403ab0:	mov    edx,esi
  403ab2:	add    edx,0x1
  403ab5:	movzx  esi,dx
  403ab8:	mov    edx,DWORD PTR [ebp+0xc]
  403abb:	mov    BYTE PTR [ebp-0x4],dl
  403abe:	cmp    BYTE PTR [ebp-0x4],0x0
  403ac2:	jle    0x403acb
  403ac4:	mov    eax,edi
  403ac6:	jmp    0x403b77
  403acb:	mov    ecx,ebx
  403acd:	sub    ecx,0x1
  403ad0:	mov    ebx,ecx
  403ad2:	cmp    ebx,0xc0ffff
  403ad8:	je     0x403ae1
  403ada:	mov    eax,esi
  403adc:	jmp    0x403b77
  403ae1:	mov    al,BYTE PTR [ebp-0x4]
  403ae4:	test   al,al
  403ae6:	jne    0x403af8
  403ae8:	push   edi
  403ae9:	push   esi
  403aea:	push   ebx
  403aeb:	movzx  edx,BYTE PTR [ebp-0x4]
  403aef:	push   edx
  403af0:	call   0x4035a1
  403af5:	mov    BYTE PTR [ebp-0x4],al
  403af8:	movzx  eax,BYTE PTR [ebp-0x4]
  403afc:	shl    eax,0x10
  403aff:	mov    BYTE PTR [ebp-0x8],al
  403b02:	mov    edx,edi
  403b04:	shr    edx,1
  403b06:	mov    BYTE PTR [ebp-0x4],dl
  403b09:	mov    ecx,DWORD PTR [ebp+0x10]
  403b0c:	mov    BYTE PTR [ebp-0x4],cl
  403b0f:	cmp    ebx,0xc0fffe
  403b15:	jne    0x403b1d
  403b17:	mov    edx,edi
  403b19:	mov    eax,edx
  403b1b:	jmp    0x403b77
  403b1d:	movzx  eax,BYTE PTR [ebp-0x4]
  403b21:	and    eax,esi
  403b23:	add    eax,0xffffff7e
  403b28:	push   eax
  403b29:	push   0x0
  403b2b:	push   0x0
  403b2d:	call   DWORD PTR ds:0x423004
  403b33:	movzx  edi,ax
  403b36:	mov    ecx,edi
  403b38:	test   cx,cx
  403b3b:	je     0x403b55
  403b3d:	mov    ecx,ebx
  403b3f:	or     ecx,0x184c0000
  403b45:	movzx  edx,BYTE PTR [ebp-0x8]
  403b49:	or     ecx,edx
  403b4b:	push   ecx
  403b4c:	push   ebx
  403b4d:	push   ebx
  403b4e:	push   edi
  403b4f:	call   DWORD PTR ds:0x423008
  403b55:	movzx  edx,BYTE PTR [ebp-0x4]
  403b59:	mov    DWORD PTR [ebp-0xc],edx
  403b5c:	cmp    BYTE PTR [ebp-0x8],0x0
  403b60:	jle    0x403b6a
  403b62:	movzx  edx,BYTE PTR [ebp-0x4]
  403b66:	mov    eax,edx
  403b68:	jmp    0x403b77
  403b6a:	mov    edx,edi
  403b6c:	or     edx,0x7d6b
  403b72:	mov    BYTE PTR [ebp-0x8],dl
  403b75:	mov    eax,esi
  403b77:	pop    ebx
  403b78:	pop    edi
  403b79:	pop    esi
  403b7a:	mov    esp,ebp
  403b7c:	pop    ebp
  403b7d:	ret    0x10
  403b80:	push   ebp
  403b81:	mov    ebp,esp
  403b83:	sub    esp,0x2c
  403b86:	push   esi
  403b87:	push   edi
  403b88:	push   ebx
  403b89:	mov    esi,DWORD PTR [ebp+0xc]
  403b8c:	mov    edx,esi
  403b8e:	or     edx,edx
  403b90:	or     edx,0x57cd
  403b96:	mov    esi,edx
  403b98:	cmp    esi,0x57cd
  403b9e:	jge    0x403ba6
  403ba0:	call   DWORD PTR ds:0x423024
  403ba6:	cmp    esi,0x57cd
  403bac:	jge    0x403bb5
  403bae:	mov    eax,esi
  403bb0:	jmp    0x403da8
  403bb5:	mov    edx,esi
  403bb7:	movzx  edi,dl
  403bba:	mov    edx,edi
  403bbc:	imul   edx,esi
  403bbf:	add    edx,0x24569477
  403bc5:	mov    eax,0x24dca680
  403bca:	xor    eax,edx
  403bcc:	mov    ebx,eax
  403bce:	mov    eax,edi
  403bd0:	and    eax,0x600
  403bd5:	mov    ecx,DWORD PTR [ebp+0xc]
  403bd8:	sub    ecx,eax
  403bda:	movzx  edi,cl
  403bdd:	mov    ecx,esi
  403bdf:	or     ecx,edi
  403be1:	sub    ecx,0xb756bb20
  403be7:	mov    eax,0x48ea0ca1
  403bec:	xor    eax,ecx
  403bee:	mov    DWORD PTR [ebp-0x4],eax
  403bf1:	mov    eax,edi
  403bf3:	shr    eax,0x2
  403bf6:	movzx  edi,al
  403bf9:	mov    eax,edi
  403bfb:	and    eax,esi
  403bfd:	mov    ecx,DWORD PTR [ebp-0x4]
  403c00:	mov    eax,DWORD PTR [ecx+eax*4]
  403c03:	mov    DWORD PTR [ebp-0x8],eax
  403c06:	mov    eax,DWORD PTR [ebp+0x10]
  403c09:	sub    eax,0x52010000
  403c0e:	add    eax,edi
  403c10:	mov    BYTE PTR [ebp-0xc],al
  403c13:	cmp    edi,0xff
  403c19:	jne    0x403c24
  403c1b:	mov    edx,edi
  403c1d:	mov    eax,edx
  403c1f:	jmp    0x403da8
  403c24:	mov    eax,esi
  403c26:	and    eax,edi
  403c28:	sub    eax,0xfffe19cf
  403c2d:	mov    DWORD PTR [ebp-0x10],eax
  403c30:	mov    ecx,edi
  403c32:	shl    ecx,0x10
  403c35:	mov    WORD PTR [ebp-0x14],cx
  403c39:	movzx  ecx,WORD PTR [ebp-0x14]
  403c3d:	movzx  eax,BYTE PTR [ebp-0xc]
  403c41:	add    ecx,eax
  403c43:	add    ecx,0xffffff02
  403c49:	cmp    DWORD PTR [ebp-0x10],ecx
  403c4c:	je     0x403d54
  403c52:	mov    eax,DWORD PTR [ebp+0x8]
  403c55:	mov    BYTE PTR [ebp-0x18],al
  403c58:	mov    eax,DWORD PTR [ebp+0x10]
  403c5b:	mov    WORD PTR [ebp-0x1c],ax
  403c5f:	cmp    BYTE PTR [ebp-0x18],0xfe
  403c63:	je     0x403c6e
  403c65:	movzx  eax,BYTE PTR [ebp-0x18]
  403c69:	jmp    0x403da8
  403c6e:	movzx  edx,BYTE PTR [ebp-0x18]
  403c72:	sub    edx,edx
  403c74:	mov    BYTE PTR [ebp-0x18],dl
  403c77:	movzx  eax,WORD PTR [ebp-0x1c]
  403c7b:	shl    eax,0x10
  403c7e:	mov    DWORD PTR [ebp-0x20],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x20]
  403c84:	shr    eax,0x3
  403c87:	mov    WORD PTR [ebp-0x1c],ax
  403c8b:	movzx  edx,BYTE PTR [ebp-0x18]
  403c8f:	xor    edx,DWORD PTR [ebp-0x20]
  403c92:	sub    edx,0x5bfe0000
  403c98:	movzx  ecx,BYTE PTR [ebx]
  403c9b:	mov    eax,DWORD PTR [ebp-0x8]
  403c9e:	mov    BYTE PTR [eax+edx*1],cl
  403ca1:	movzx  edx,BYTE PTR [ebp-0x18]
  403ca5:	movzx  ecx,WORD PTR [ebp-0x1c]
  403ca9:	or     edx,ecx
  403cab:	xor    edx,0x71f4fd57
  403cb1:	mov    BYTE PTR [ebp-0x24],dl
  403cb4:	cmp    WORD PTR [ebp-0x1c],0xc000
  403cba:	je     0x403cc7
  403cbc:	movzx  edx,WORD PTR [ebp-0x1c]
  403cc0:	mov    eax,edx
  403cc2:	jmp    0x403da8
  403cc7:	movzx  edx,WORD PTR [ebp-0x1c]
  403ccb:	movzx  ecx,BYTE PTR [ebp-0x18]
  403ccf:	or     edx,ecx
  403cd1:	sub    edx,0xbfff
  403cd7:	mov    eax,DWORD PTR [ebp-0x8]
  403cda:	add    eax,edx
  403cdc:	mov    DWORD PTR [ebp-0x8],eax
  403cdf:	movzx  eax,WORD PTR [ebp-0x1c]
  403ce3:	xor    eax,DWORD PTR [ebp+0xc]
  403ce6:	imul   eax,eax,0x8eee0000
  403cec:	mov    DWORD PTR [ebp-0x20],eax
  403cef:	cmp    WORD PTR [ebp-0x1c],0xbfff
  403cf5:	jne    0x403d00
  403cf7:	movzx  eax,BYTE PTR [ebp-0x18]
  403cfb:	jmp    0x403da8
  403d00:	movzx  edx,BYTE PTR [ebp-0x24]
  403d04:	movzx  ecx,WORD PTR [ebp-0x1c]
  403d08:	imul   edx,ecx
  403d0b:	sub    edx,0x413fff
  403d11:	add    ebx,edx
  403d13:	mov    eax,DWORD PTR [ebp+0x8]
  403d16:	and    eax,0x1a000000
  403d1b:	and    eax,DWORD PTR [ebp+0xc]
  403d1e:	mov    DWORD PTR [ebp-0x28],eax
  403d21:	mov    edx,DWORD PTR [ebp-0x20]
  403d24:	movzx  ecx,WORD PTR [ebp-0x1c]
  403d28:	or     edx,ecx
  403d2a:	add    edx,0x7fff4001
  403d30:	mov    ecx,DWORD PTR [ebp-0x10]
  403d33:	sub    ecx,edx
  403d35:	mov    DWORD PTR [ebp-0x10],ecx
  403d38:	mov    edx,DWORD PTR [ebp-0x28]
  403d3b:	sub    edx,0x1
  403d3e:	mov    DWORD PTR [ebp-0x28],edx
  403d41:	cmp    BYTE PTR [ebp-0x18],0xff
  403d45:	jne    0x403d4f
  403d47:	movzx  ecx,BYTE PTR [ebp-0x18]
  403d4b:	mov    eax,ecx
  403d4d:	jmp    0x403da8
  403d4f:	jmp    0x403c39
  403d54:	movzx  edx,BYTE PTR [ebp-0xc]
  403d58:	or     edx,0x4600
  403d5e:	mov    BYTE PTR [ebp-0xc],dl
  403d61:	mov    cx,WORD PTR [ebp-0x14]
  403d65:	test   cx,cx
  403d68:	je     0x403d6e
  403d6a:	mov    eax,esi
  403d6c:	jmp    0x403da8
  403d6e:	movzx  edx,BYTE PTR [ebp-0xc]
  403d72:	and    edx,edi
  403d74:	sub    edx,0x4aa59801
  403d7a:	mov    ecx,0xb519f7ef
  403d7f:	xor    ecx,edx
  403d81:	mov    DWORD PTR [ebp-0x4],ecx
  403d84:	mov    edx,esi
  403d86:	mov    BYTE PTR [ebp-0x2c],dl
  403d89:	cmp    BYTE PTR [ebp-0x2c],0xcc
  403d8d:	jne    0x403d93
  403d8f:	mov    eax,esi
  403d91:	jmp    0x403da8
  403d93:	mov    ecx,DWORD PTR [ebp-0x4]
  403d96:	mov    eax,DWORD PTR [ebp-0x8]
  403d99:	mov    DWORD PTR [ecx],eax
  403d9b:	movzx  ecx,BYTE PTR [ebp-0x2c]
  403d9f:	shr    ecx,0x2
  403da2:	mov    esi,ecx
  403da4:	mov    edx,edi
  403da6:	mov    eax,edx
  403da8:	pop    ebx
  403da9:	pop    edi
  403daa:	pop    esi
  403dab:	mov    esp,ebp
  403dad:	pop    ebp
  403dae:	ret    0xc
  403db1:	push   ebp
  403db2:	mov    ebp,esp
  403db4:	sub    esp,0x8
  403db7:	push   esi
  403db8:	push   edi
  403db9:	push   ebx
  403dba:	mov    edx,DWORD PTR [ebp+0x8]
  403dbd:	movzx  esi,dx
  403dc0:	mov    ecx,esi
  403dc2:	xor    ecx,0x46d31848
  403dc8:	sub    ecx,esi
  403dca:	movzx  edi,cl
  403dcd:	mov    edx,DWORD PTR [ebp+0x8]
  403dd0:	or     edx,0x2db23bc2
  403dd6:	movzx  ebx,dx
  403dd9:	cmp    esi,0xffff
  403ddf:	je     0x403dea
  403de1:	mov    edx,esi
  403de3:	mov    eax,edx
  403de5:	jmp    0x403ecf
  403dea:	mov    edx,ebx
  403dec:	shl    edx,0x10
  403def:	mov    WORD PTR [ebp-0x4],dx
  403df3:	movzx  ecx,WORD PTR [ebp-0x4]
  403df7:	add    ecx,0x5b00
  403dfd:	add    ecx,DWORD PTR [ebp+0x14]
  403e00:	movzx  esi,cx
  403e03:	mov    edx,edi
  403e05:	shl    edx,0x18
  403e08:	mov    WORD PTR [ebp-0x4],dx
  403e0c:	mov    cx,WORD PTR [ebp-0x4]
  403e10:	test   cx,cx
  403e13:	jne    0x403e24
  403e15:	push   esi
  403e16:	movzx  edx,WORD PTR [ebp-0x4]
  403e1a:	push   edx
  403e1b:	push   esi
  403e1c:	call   0x403b80
  403e21:	movzx  edi,al
  403e24:	mov    ecx,DWORD PTR [ebp+0x14]
  403e27:	imul   ecx,edi
  403e2a:	movzx  ebx,cx
  403e2d:	mov    dx,WORD PTR [ebp-0x4]
  403e31:	test   dx,dx
  403e34:	je     0x403e3d
  403e36:	mov    eax,edi
  403e38:	jmp    0x403ecf
  403e3d:	mov    edx,esi
  403e3f:	xor    edx,0xdb00
  403e45:	movzx  ecx,WORD PTR [ebp-0x4]
  403e49:	add    edx,ecx
  403e4b:	mov    WORD PTR [ebp-0x8],dx
  403e4f:	cmp    ebx,0x0
  403e52:	jge    0x403e5c
  403e54:	movzx  edx,WORD PTR [ebp-0x4]
  403e58:	mov    eax,edx
  403e5a:	jmp    0x403ecf
  403e5c:	movzx  eax,WORD PTR [ebp-0x8]
  403e60:	movzx  edx,WORD PTR [ebp-0x4]
  403e64:	and    eax,edx
  403e66:	imul   eax,eax,0x12020000
  403e6c:	mov    WORD PTR [ebp-0x4],ax
  403e70:	mov    edx,ebx
  403e72:	mov    WORD PTR [ebp-0x4],dx
  403e76:	movzx  edx,WORD PTR [ebp-0x8]
  403e7a:	movzx  ebx,dx
  403e7d:	cmp    ebx,0x80fd
  403e83:	jne    0x403e8b
  403e85:	mov    edx,esi
  403e87:	mov    eax,edx
  403e89:	jmp    0x403ecf
  403e8b:	mov    ax,WORD PTR [ebp-0x4]
  403e8f:	test   ax,ax
  403e92:	jne    0x403e9d
  403e94:	call   0x4042d1
  403e99:	mov    WORD PTR [ebp-0x4],ax
  403e9d:	mov    edx,ebx
  403e9f:	imul   edx,edx,0xaa00
  403ea5:	imul   edx,ebx
  403ea8:	mov    WORD PTR [ebp-0x8],dx
  403eac:	mov    edx,ebx
  403eae:	add    edx,0xf3530000
  403eb4:	mov    WORD PTR [ebp-0x8],dx
  403eb8:	mov    ecx,esi
  403eba:	mov    WORD PTR [ebp-0x8],cx
  403ebe:	cmp    WORD PTR [ebp-0x4],0x2f
  403ec3:	jle    0x403ecb
  403ec5:	mov    edx,edi
  403ec7:	mov    eax,edx
  403ec9:	jmp    0x403ecf
  403ecb:	mov    edx,esi
  403ecd:	mov    eax,edx
  403ecf:	pop    ebx
  403ed0:	pop    edi
  403ed1:	pop    esi
  403ed2:	mov    esp,ebp
  403ed4:	pop    ebp
  403ed5:	ret    0x10
  403ed8:	push   ebp
  403ed9:	mov    ebp,esp
  403edb:	sub    esp,0x4
  403ede:	push   esi
  403edf:	push   edi
  403ee0:	push   ebx
  403ee1:	mov    esi,0x2e
  403ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  403ee9:	or     ecx,0x3400
  403eef:	mov    edi,ecx
  403ef1:	cmp    edi,0x3400
  403ef7:	je     0x403f02
  403ef9:	mov    edx,esi
  403efb:	mov    eax,edx
  403efd:	jmp    0x403fa1
  403f02:	mov    eax,edi
  403f04:	imul   eax,eax,0xb0e300
  403f0a:	mov    edi,eax
  403f0c:	cmp    edi,0xee1c0000
  403f12:	jge    0x403f1d
  403f14:	mov    edx,esi
  403f16:	mov    eax,edx
  403f18:	jmp    0x403fa1
  403f1d:	mov    ecx,esi
  403f1f:	movzx  ebx,cl
  403f22:	cmp    ebx,0x2e
  403f25:	jge    0x403f2b
  403f27:	mov    eax,edi
  403f29:	jmp    0x403fa1
  403f2b:	mov    eax,DWORD PTR [ebp+0x8]
  403f2e:	imul   eax,eax,0x2f5cbea6
  403f34:	mov    ecx,esi
  403f36:	add    ecx,eax
  403f38:	movzx  esi,cx
  403f3b:	mov    ecx,esi
  403f3d:	shr    ecx,0x2
  403f40:	mov    DWORD PTR [ebp-0x4],ecx
  403f43:	mov    ecx,edi
  403f45:	add    ecx,0x1
  403f48:	mov    edi,ecx
  403f4a:	mov    eax,DWORD PTR [ebp-0x4]
  403f4d:	add    eax,0x1
  403f50:	mov    DWORD PTR [ebp-0x4],eax
  403f53:	cmp    ebx,0x2e
  403f56:	jge    0x403f5c
  403f58:	mov    eax,esi
  403f5a:	jmp    0x403fa1
  403f5c:	cmp    DWORD PTR [ebp-0x4],0xc
  403f60:	jne    0x403f6f
  403f62:	push   edi
  403f63:	push   DWORD PTR [ebp-0x4]
  403f66:	push   esi
  403f67:	call   0x402ed9
  403f6c:	movzx  esi,ax
  403f6f:	mov    eax,DWORD PTR [ebp-0x4]
  403f72:	xor    edx,edx
  403f74:	div    DWORD PTR [ebp-0x4]
  403f77:	mov    edi,edx
  403f79:	cmp    esi,0x2a
  403f7c:	je     0x403f84
  403f7e:	mov    ecx,esi
  403f80:	mov    eax,ecx
  403f82:	jmp    0x403fa1
  403f84:	mov    ecx,ebx
  403f86:	add    ecx,0x1
  403f89:	movzx  ebx,cl
  403f8c:	test   edi,edi
  403f8e:	je     0x403f94
  403f90:	mov    eax,ebx
  403f92:	jmp    0x403fa1
  403f94:	mov    edx,DWORD PTR [ebp-0x4]
  403f97:	xor    edx,DWORD PTR [ebp+0x8]
  403f9a:	movzx  esi,dx
  403f9d:	mov    ecx,ebx
  403f9f:	mov    eax,ecx
  403fa1:	pop    ebx
  403fa2:	pop    edi
  403fa3:	pop    esi
  403fa4:	mov    esp,ebp
  403fa6:	pop    ebp
  403fa7:	ret    0x8
  403faa:	push   ebp
  403fab:	mov    ebp,esp
  403fad:	sub    esp,0x30
  403fb0:	push   esi
  403fb1:	push   edi
  403fb2:	push   ebx
  403fb3:	mov    esi,DWORD PTR [ebp+0x8]
  403fb6:	mov    ecx,DWORD PTR [ebp+0x8]
  403fb9:	and    ecx,esi
  403fbb:	imul   ecx,esi
  403fbe:	movzx  edi,cl
  403fc1:	cmp    esi,0xffffffff
  403fc4:	jne    0x403fcd
  403fc6:	mov    eax,esi
  403fc8:	jmp    0x4042c8
  403fcd:	mov    ecx,edi
  403fcf:	sub    ecx,esi
  403fd1:	push   ecx
  403fd2:	mov    ecx,esi
  403fd4:	xor    ecx,edi
  403fd6:	push   ecx
  403fd7:	mov    ecx,edi
  403fd9:	add    ecx,esi
  403fdb:	push   ecx
  403fdc:	call   DWORD PTR ds:0x423004
  403fe2:	movzx  edi,al
  403fe5:	mov    ecx,edi
  403fe7:	test   cl,cl
  403fe9:	je     0x40400c
  403feb:	mov    edx,esi
  403fed:	and    edx,0x90e015e5
  403ff3:	mov    ecx,edi
  403ff5:	imul   ecx,edx
  403ff8:	push   ecx
  403ff9:	mov    edx,edi
  403ffb:	or     edx,esi
  403ffd:	push   edx
  403ffe:	mov    eax,edi
  404000:	add    eax,0xfd1f90ae
  404005:	push   eax
  404006:	call   DWORD PTR ds:0x423044
  40400c:	mov    edx,esi
  40400e:	and    edx,0x9f
  404014:	xor    edx,esi
  404016:	movzx  ebx,dl
  404019:	cmp    edi,0xff
  40401f:	jne    0x404027
  404021:	call   DWORD PTR ds:0x42307c
  404027:	cmp    edi,0x0
  40402a:	jle    0x404033
  40402c:	mov    eax,ebx
  40402e:	jmp    0x4042c8
  404033:	mov    eax,DWORD PTR [ebp+0xc]
  404036:	mov    BYTE PTR [ebp-0x4],al
  404039:	cmp    ebx,0x0
  40403c:	jge    0x404047
  40403e:	mov    ecx,edi
  404040:	mov    eax,ecx
  404042:	jmp    0x4042c8
  404047:	mov    edx,ebx
  404049:	mov    esi,edx
  40404b:	cmp    esi,0xffffffff
  40404e:	jne    0x404057
  404050:	mov    eax,esi
  404052:	jmp    0x4042c8
  404057:	mov    edx,ebx
  404059:	movzx  eax,BYTE PTR [ebp-0x4]
  40405d:	imul   edx,eax
  404060:	add    edx,0x48a99cad
  404066:	mov    ecx,0x48ea0ca1
  40406b:	xor    ecx,edx
  40406d:	mov    DWORD PTR [ebp-0x8],ecx
  404070:	mov    ecx,esi
  404072:	xor    ecx,0xa39ca3c4
  404078:	movzx  edx,BYTE PTR [ebp-0x4]
  40407c:	and    ecx,edx
  40407e:	mov    DWORD PTR [ebp-0xc],ecx
  404081:	mov    ecx,ebx
  404083:	add    ecx,DWORD PTR [ebp-0xc]
  404086:	mov    edx,DWORD PTR [ebp-0x8]
  404089:	mov    eax,DWORD PTR [edx+ecx*4]
  40408c:	mov    DWORD PTR [ebp-0x10],eax
  40408f:	mov    eax,ebx
  404091:	mov    ecx,0x16
  404096:	xor    edx,edx
  404098:	div    ecx
  40409a:	movzx  ebx,dl
  40409d:	cmp    BYTE PTR [ebp-0x4],0x0
  4040a1:	jge    0x4040ac
  4040a3:	movzx  eax,BYTE PTR [ebp-0x4]
  4040a7:	jmp    0x4042c8
  4040ac:	mov    eax,DWORD PTR [ebp-0xc]
  4040af:	movzx  ecx,BYTE PTR [ebp-0x4]
  4040b3:	imul   eax,ecx
  4040b6:	sub    eax,0xcb4af43e
  4040bb:	mov    ecx,0x34f69bd6
  4040c0:	xor    ecx,eax
  4040c2:	mov    DWORD PTR [ebp-0x8],ecx
  4040c5:	mov    edx,ebx
  4040c7:	or     edx,0xef
  4040cd:	mov    BYTE PTR [ebp-0x4],dl
  4040d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4040d3:	xor    ecx,esi
  4040d5:	mov    edx,DWORD PTR [ebp-0x8]
  4040d8:	mov    eax,DWORD PTR [edx+ecx*4]
  4040db:	mov    DWORD PTR [ebp-0x14],eax
  4040de:	mov    eax,edi
  4040e0:	or     eax,eax
  4040e2:	mov    DWORD PTR [ebp-0x18],eax
  4040e5:	mov    edx,edi
  4040e7:	imul   edx,ebx
  4040ea:	cmp    DWORD PTR [ebp-0x14],edx
  4040ed:	je     0x404232
  4040f3:	mov    WORD PTR [ebp-0x1c],0x85
  4040f9:	movzx  edx,WORD PTR [ebp-0x1c]
  4040fd:	shl    edx,0x18
  404100:	mov    WORD PTR [ebp-0x1c],dx
  404104:	movzx  eax,WORD PTR [ebp-0x1c]
  404108:	mov    BYTE PTR [ebp-0x20],al
  40410b:	mov    ecx,DWORD PTR [ebp+0x8]
  40410e:	movzx  eax,WORD PTR [ebp-0x1c]
  404112:	add    ecx,eax
  404114:	mov    BYTE PTR [ebp-0x20],cl
  404117:	cmp    BYTE PTR [ebp-0x20],0x0
  40411b:	jle    0x404128
  40411d:	movzx  edx,WORD PTR [ebp-0x1c]
  404121:	mov    eax,edx
  404123:	jmp    0x4042c8
  404128:	movzx  edx,BYTE PTR [ebp-0x20]
  40412c:	imul   edx,edx,0xd9cf00
  404132:	movzx  ecx,BYTE PTR [ebp-0x20]
  404136:	sub    edx,ecx
  404138:	mov    DWORD PTR [ebp-0x24],edx
  40413b:	cmp    BYTE PTR [ebp-0x20],0xff
  40413f:	jne    0x40414c
  404141:	movzx  ecx,WORD PTR [ebp-0x1c]
  404145:	mov    eax,ecx
  404147:	jmp    0x4042c8
  40414c:	mov    edx,DWORD PTR [ebp-0x24]
  40414f:	movzx  ecx,WORD PTR [ebp-0x1c]
  404153:	imul   edx,ecx
  404156:	mov    eax,DWORD PTR [ebp-0x10]
  404159:	mov    ecx,DWORD PTR [eax+edx*4]
  40415c:	mov    eax,DWORD PTR [ebp-0x24]
  40415f:	movzx  edx,WORD PTR [ebp-0x1c]
  404163:	add    eax,edx
  404165:	add    eax,0x7d89af5e
  40416a:	xor    ecx,eax
  40416c:	mov    DWORD PTR [ebp-0x28],ecx
  40416f:	movzx  edx,BYTE PTR [ebp-0x20]
  404173:	xor    edx,DWORD PTR [ebp+0xc]
  404176:	movzx  ecx,WORD PTR [ebp-0x1c]
  40417a:	sub    ecx,edx
  40417c:	mov    BYTE PTR [ebp-0x20],cl
  40417f:	mov    edx,DWORD PTR [ebp-0x10]
  404182:	mov    ecx,DWORD PTR [ebp-0x28]
  404185:	mov    DWORD PTR [edx],ecx
  404187:	movzx  ecx,BYTE PTR [ebp-0x20]
  40418b:	mov    DWORD PTR [ebp-0x24],ecx
  40418e:	movzx  edx,WORD PTR [ebp-0x1c]
  404192:	movzx  eax,BYTE PTR [ebp-0x20]
  404196:	xor    edx,eax
  404198:	sub    edx,0xffffffff
  40419b:	mov    ecx,DWORD PTR [ebp-0x10]
  40419e:	mov    eax,DWORD PTR [ecx+edx*4]
  4041a1:	movzx  ecx,BYTE PTR [ebp-0x20]
  4041a5:	movzx  edx,WORD PTR [ebp-0x1c]
  4041a9:	sub    ecx,edx
  4041ab:	sub    ecx,0xad528487
  4041b1:	xor    eax,ecx
  4041b3:	mov    DWORD PTR [ebp-0x28],eax
  4041b6:	movzx  ecx,WORD PTR [ebp-0x1c]
  4041ba:	mov    DWORD PTR [ebp-0x24],ecx
  4041bd:	mov    edx,DWORD PTR [ebp-0x10]
  4041c0:	mov    ecx,DWORD PTR [ebp-0x28]
  4041c3:	mov    DWORD PTR [edx+0x4],ecx
  4041c6:	movzx  ecx,WORD PTR [ebp-0x1c]
  4041ca:	shr    ecx,1
  4041cc:	mov    DWORD PTR [ebp-0x2c],ecx
  4041cf:	cmp    BYTE PTR [ebp-0x20],0x0
  4041d3:	jle    0x4041de
  4041d5:	movzx  eax,WORD PTR [ebp-0x1c]
  4041d9:	jmp    0x4042c8
  4041de:	mov    edx,DWORD PTR [ebp-0x24]
  4041e1:	movzx  ecx,WORD PTR [ebp-0x1c]
  4041e5:	add    edx,ecx
  4041e7:	add    edx,0x8
  4041ea:	mov    eax,DWORD PTR [ebp-0x10]
  4041ed:	add    eax,edx
  4041ef:	mov    DWORD PTR [ebp-0x10],eax
  4041f2:	movzx  eax,WORD PTR [ebp-0x1c]
  4041f6:	and    eax,DWORD PTR [ebp-0x24]
  4041f9:	movzx  edx,WORD PTR [ebp-0x1c]
  4041fd:	sub    eax,edx
  4041ff:	mov    DWORD PTR [ebp-0x2c],eax
  404202:	mov    edx,DWORD PTR [ebp-0x14]
  404205:	sub    edx,0x1
  404208:	mov    DWORD PTR [ebp-0x14],edx
  40420b:	movzx  eax,WORD PTR [ebp-0x1c]
  40420f:	mov    ecx,0x1a
  404214:	xor    edx,edx
  404216:	div    ecx
  404218:	mov    DWORD PTR [ebp-0x2c],edx
  40421b:	mov    dl,BYTE PTR [ebp-0x20]
  40421e:	test   dl,dl
  404220:	je     0x40422d
  404222:	movzx  ecx,WORD PTR [ebp-0x1c]
  404226:	mov    eax,ecx
  404228:	jmp    0x4042c8
  40422d:	jmp    0x4040e5
  404232:	mov    edx,DWORD PTR [ebp-0xc]
  404235:	movzx  edi,dl
  404238:	cmp    BYTE PTR [ebp-0x4],0xef
  40423c:	jle    0x404246
  40423e:	mov    eax,DWORD PTR [ebp-0xc]
  404241:	jmp    0x4042c8
  404246:	movzx  edx,BYTE PTR [ebp-0x4]
  40424a:	imul   edx,DWORD PTR [ebp-0xc]
  40424e:	sub    edx,0xb7566353
  404254:	mov    ecx,0x48ea0ca1
  404259:	xor    ecx,edx
  40425b:	mov    DWORD PTR [ebp-0x8],ecx
  40425e:	mov    eax,edi
  404260:	mov    ecx,0x5
  404265:	xor    edx,edx
  404267:	div    ecx
  404269:	mov    BYTE PTR [ebp-0x4],al
  40426c:	mov    edx,DWORD PTR [ebp-0x18]
  40426f:	xor    edx,esi
  404271:	mov    eax,DWORD PTR [ebp-0x8]
  404274:	mov    eax,DWORD PTR [eax+edx*4]
  404277:	mov    DWORD PTR [ebp-0x8],eax
  40427a:	movzx  edx,BYTE PTR [ebp-0x4]
  40427e:	mov    esi,edx
  404280:	mov    ecx,edi
  404282:	test   cl,cl
  404284:	je     0x40428a
  404286:	mov    eax,edi
  404288:	jmp    0x4042c8
  40428a:	movzx  edx,BYTE PTR [ebp-0x4]
  40428e:	sub    edx,edi
  404290:	push   edx
  404291:	movzx  ecx,BYTE PTR [ebp-0x4]
  404295:	sub    ecx,DWORD PTR [ebp-0xc]
  404298:	push   ecx
  404299:	mov    ecx,DWORD PTR [ebp-0xc]
  40429c:	xor    ecx,DWORD PTR [ebp-0x18]
  40429f:	push   ecx
  4042a0:	call   DWORD PTR ds:0x423004
  4042a6:	mov    esi,eax
  4042a8:	test   esi,esi
  4042aa:	je     0x4042b3
  4042ac:	push   esi
  4042ad:	call   DWORD PTR ds:0x423090
  4042b3:	call   DWORD PTR [ebp-0x8]
  4042b6:	mov    ecx,ebx
  4042b8:	mov    WORD PTR [ebp-0x30],cx
  4042bc:	cmp    DWORD PTR [ebp-0xc],0xffffffff
  4042c0:	jne    0x4042c6
  4042c2:	mov    eax,ebx
  4042c4:	jmp    0x4042c8
  4042c6:	mov    eax,ebx
  4042c8:	pop    ebx
  4042c9:	pop    edi
  4042ca:	pop    esi
  4042cb:	mov    esp,ebp
  4042cd:	pop    ebp
  4042ce:	ret    0x8
  4042d1:	push   ebp
  4042d2:	mov    ebp,esp
  4042d4:	sub    esp,0xc
  4042d7:	push   esi
  4042d8:	push   edi
  4042d9:	push   ebx
  4042da:	mov    esi,0xeb0e0000
  4042df:	mov    edx,esi
  4042e1:	shr    edx,1
  4042e3:	movzx  edi,dl
  4042e6:	mov    eax,esi
  4042e8:	imul   eax,edi
  4042eb:	sub    eax,0xf9f8
  4042f0:	movzx  ebx,al
  4042f3:	mov    ecx,edi
  4042f5:	or     ecx,ecx
  4042f7:	mov    eax,edi
  4042f9:	sub    eax,ecx
  4042fb:	mov    DWORD PTR [ebp-0x4],eax
  4042fe:	mov    eax,ebx
  404300:	xor    edx,edx
  404302:	div    esi
  404304:	movzx  ebx,al
  404307:	mov    eax,ebx
  404309:	test   al,al
  40430b:	je     0x404314
  40430d:	mov    eax,esi
  40430f:	jmp    0x4043a2
  404314:	mov    ecx,esi
  404316:	sub    ecx,0x1
  404319:	mov    esi,ecx
  40431b:	mov    eax,ebx
  40431d:	sub    eax,eax
  40431f:	mov    DWORD PTR [ebp-0x4],eax
  404322:	cmp    esi,0xeb0dffff
  404328:	je     0x404330
  40432a:	mov    edx,ebx
  40432c:	mov    eax,edx
  40432e:	jmp    0x4043a2
  404330:	mov    eax,esi
  404332:	xor    edx,edx
  404334:	div    esi
  404336:	movzx  ebx,al
  404339:	cmp    esi,0xeb0dffff
  40433f:	je     0x404346
  404341:	mov    eax,DWORD PTR [ebp-0x4]
  404344:	jmp    0x4043a2
  404346:	mov    eax,ebx
  404348:	shr    eax,0x2
  40434b:	mov    BYTE PTR [ebp-0x8],al
  40434e:	mov    ecx,edi
  404350:	shl    ecx,0x10
  404353:	mov    esi,ecx
  404355:	mov    eax,edi
  404357:	test   al,al
  404359:	jne    0x404365
  40435b:	push   ebx
  40435c:	push   edi
  40435d:	call   0x403ed8
  404362:	mov    BYTE PTR [ebp-0x8],al
  404365:	movzx  eax,BYTE PTR [ebp-0x8]
  404369:	mov    ecx,0x48
  40436e:	xor    edx,edx
  404370:	div    ecx
  404372:	movzx  ebx,dl
  404375:	mov    edx,edi
  404377:	sub    edx,0x1
  40437a:	movzx  edi,dl
  40437d:	cmp    DWORD PTR [ebp-0x4],0x0
  404381:	jge    0x404389
  404383:	mov    ecx,ebx
  404385:	mov    eax,ecx
  404387:	jmp    0x4043a2
  404389:	mov    edx,esi
  40438b:	shl    edx,0x8
  40438e:	mov    DWORD PTR [ebp-0xc],edx
  404391:	cmp    esi,0x0
  404394:	jle    0x40439e
  404396:	movzx  ecx,BYTE PTR [ebp-0x8]
  40439a:	mov    eax,ecx
  40439c:	jmp    0x4043a2
  40439e:	mov    edx,ebx
  4043a0:	mov    eax,edx
  4043a2:	pop    ebx
  4043a3:	pop    edi
  4043a4:	pop    esi
  4043a5:	mov    esp,ebp
  4043a7:	pop    ebp
  4043a8:	ret    
  4043a9:	push   ebp
  4043aa:	mov    ebp,esp
  4043ac:	sub    esp,0x8
  4043af:	push   esi
  4043b0:	push   edi
  4043b1:	push   ebx
  4043b2:	mov    esi,0x6b2200
  4043b7:	mov    edx,esi
  4043b9:	shr    edx,1
  4043bb:	movzx  edi,dl
  4043be:	cmp    esi,0x6b2200
  4043c4:	je     0x4043cd
  4043c6:	mov    eax,esi
  4043c8:	jmp    0x404459
  4043cd:	mov    ecx,esi
  4043cf:	shr    ecx,0x3
  4043d2:	movzx  edi,cl
  4043d5:	cmp    esi,0x6b2200
  4043db:	jle    0x4043e1
  4043dd:	mov    eax,esi
  4043df:	jmp    0x404459
  4043e1:	mov    edx,edi
  4043e3:	or     edx,esi
  4043e5:	imul   edx,edx,0xbc000000
  4043eb:	mov    ebx,edx
  4043ed:	mov    ecx,edi
  4043ef:	and    ecx,0xdc55
  4043f5:	mov    eax,esi
  4043f7:	imul   eax,ecx
  4043fa:	mov    DWORD PTR [ebp-0x4],eax
  4043fd:	mov    eax,DWORD PTR [ebp-0x4]
  404400:	and    eax,0xa20ad55c
  404405:	movzx  edi,al
  404408:	mov    eax,edi
  40440a:	test   al,al
  40440c:	je     0x404412
  40440e:	mov    eax,ebx
  404410:	jmp    0x404459
  404412:	cmp    DWORD PTR [ebp-0x4],0x1ac88000
  404419:	jne    0x404423
  40441b:	push   ebx
  40441c:	call   0x401aa3
  404421:	mov    ebx,eax
  404423:	mov    eax,edi
  404425:	xor    edx,edx
  404427:	div    esi
  404429:	movzx  edi,al
  40442c:	mov    DWORD PTR [ebp-0x8],ebx
  40442f:	mov    edx,esi
  404431:	sub    edx,0xb300
  404437:	mov    esi,edx
  404439:	cmp    DWORD PTR [ebp-0x8],0x0
  40443d:	jge    0x404447
  40443f:	push   esi
  404440:	push   edi
  404441:	call   DWORD PTR ds:0x423014
  404447:	cmp    DWORD PTR [ebp-0x4],0x1ac88000
  40444e:	je     0x404457
  404450:	mov    edx,DWORD PTR [ebp-0x8]
  404453:	mov    eax,edx
  404455:	jmp    0x404459
  404457:	mov    eax,esi
  404459:	pop    ebx
  40445a:	pop    edi
  40445b:	pop    esi
  40445c:	mov    esp,ebp
  40445e:	pop    ebp
  40445f:	ret    
  404460:	push   ebp
  404461:	mov    ebp,esp
  404463:	sub    esp,0x4
  404466:	push   esi
  404467:	push   edi
  404468:	push   ebx
  404469:	mov    esi,0x7e
  40446e:	mov    eax,esi
  404470:	or     eax,eax
  404472:	movzx  edi,ax
  404475:	mov    eax,edi
  404477:	mov    ecx,0x23
  40447c:	xor    edx,edx
  40447e:	div    ecx
  404480:	movzx  esi,ax
  404483:	mov    ecx,edi
  404485:	movzx  ebx,cl
  404488:	cmp    ebx,0x7e
  40448b:	jne    0x404497
  40448d:	push   esi
  40448e:	push   edi
  40448f:	call   0x402398
  404494:	movzx  ebx,al
  404497:	mov    ecx,esi
  404499:	shr    ecx,0x3
  40449c:	mov    DWORD PTR [ebp-0x4],ecx
  40449f:	cmp    edi,0x7e
  4044a2:	jle    0x4044aa
  4044a4:	mov    edx,esi
  4044a6:	mov    eax,edx
  4044a8:	jmp    0x4044fd
  4044aa:	mov    eax,edi
  4044ac:	mov    DWORD PTR [ebp-0x4],eax
  4044af:	mov    edx,ebx
  4044b1:	or     edx,esi
  4044b3:	add    edx,0xfffffffd
  4044b6:	push   edx
  4044b7:	mov    edx,esi
  4044b9:	xor    edx,edi
  4044bb:	sub    edx,0x7d
  4044be:	push   edx
  4044bf:	mov    ecx,esi
  4044c1:	and    ecx,ebx
  4044c3:	push   ecx
  4044c4:	call   DWORD PTR ds:0x423004
  4044ca:	movzx  ebx,al
  4044cd:	mov    ecx,ebx
  4044cf:	test   cl,cl
  4044d1:	je     0x4044f4
  4044d3:	mov    edx,esi
  4044d5:	xor    edx,edx
  4044d7:	imul   edx,edi
  4044da:	push   edx
  4044db:	mov    ecx,ebx
  4044dd:	xor    ecx,0x165f
  4044e3:	push   ecx
  4044e4:	push   esi
  4044e5:	mov    eax,DWORD PTR [ebp-0x4]
  4044e8:	add    eax,esi
  4044ea:	sub    eax,DWORD PTR [ebp-0x4]
  4044ed:	push   eax
  4044ee:	call   DWORD PTR ds:0x423070
  4044f4:	mov    eax,edi
  4044f6:	shr    eax,1
  4044f8:	movzx  edi,ax
  4044fb:	mov    eax,edi
  4044fd:	pop    ebx
  4044fe:	pop    edi
  4044ff:	pop    esi
  404500:	mov    esp,ebp
  404502:	pop    ebp
  404503:	ret    
  404504:	ret    
  404505:	jmp    DWORD PTR ds:0x4230a8
  40450b:	xor    eax,eax
  40450d:	ret    
  40450e:	jmp    DWORD PTR ds:0x4230ac
  404514:	jmp    DWORD PTR ds:0x4230b0
  40451a:	jmp    DWORD PTR ds:0x423060
  404520:	cmp    dl,BYTE PTR [eax-0x44]
  404523:	dec    ebp
  404524:	jns    0x4045a1
  404526:	lods   eax,DWORD PTR ds:[esi]
  404527:	or     dl,ch
  404529:	out    dx,eax
  40452a:	test   esi,esi
  40452c:	cmp    DWORD PTR [edi+0x26],esp
  40452f:	or     dl,BYTE PTR [esi+0x47]
  404532:	lea    edi,[ebp+0x79]
  404535:	jnp    0x4045b2
  404537:	dec    edx
  404538:	cmp    ecx,DWORD PTR [eax-0x30]
  40453b:	or     BYTE PTR [eax+0x28],0x45
  40453f:	and    bl,BYTE PTR [esi-0x51]
  404542:	mov    esp,eax
  404544:	push   ebp
  404545:	loop   0x404585
  404547:	inc    edx
  404548:	in     eax,0xda
  40454a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454b:	or     al,0x6e
  40454d:	adc    DWORD PTR [ebp-0x763aa1c8],ebp
  404553:	pop    ss
  404554:	jns    0x4044da
  404556:	jge    0x404529
  404558:	call   0x9884:0x1db688bf
  40455f:	bound  ebx,QWORD PTR [esi-0x51]
  404562:	mov    DWORD PTR ds:0xd9a13bf2,esp
  404568:	push   ds
  404569:	mov    bl,0x2
  40456b:	cmp    eax,0x52a99371
  404570:	pop    esi
  404571:	scas   eax,DWORD PTR es:[edi]
  404572:	mov    dh,0xa3
  404574:	lock mov edi,0xff6fadf4
  40457a:	popa   
  40457b:	dec    ecx
  40457c:	jns    0x4045f9
  40457e:	lods   eax,DWORD PTR ds:[esi]
  40457f:	arpl   WORD PTR [ebp+eax*8-0x7567d77],cx
  404586:	imul   edx,DWORD PTR [esi+0x5f],0x797c617c
  40458d:	jnp    0x40453c
  40458f:	xchg   ecx,eax
  404590:	add    esp,DWORD PTR [edx]
  404592:	cmp    al,0xe9
  404594:	jns    0x404611
  404596:	lods   eax,DWORD PTR ds:[esi]
  404597:	fld    TBYTE PTR [ecx+0x79011c16]
  40459d:	jnp    0x4045f0
  40459f:	jmp    FWORD PTR [edi+0x77]
  4045a2:	and    bl,BYTE PTR [edi+0x572d9283]
  4045a8:	pop    esi
  4045a9:	scas   eax,DWORD PTR es:[edi]
  4045aa:	fwait
  4045ab:	dec    edx
  4045ac:	scas   al,BYTE PTR es:[edi]
  4045ad:	ret    0x4591
  4045b0:	jne    0x4045ad
  4045b2:	cmp    eax,0xfe9ef028
  4045b7:	add    al,0x9
  4045b9:	and    al,0xd4
  4045bb:	jne    0x404637
  4045bd:	and    BYTE PTR [ecx-0x7558dc27],dl
  4045c3:	push   es
  4045c4:	add    eax,esi
  4045c6:	cli    
  4045c7:	dec    edx
  4045c8:	aad    0xda
  4045ca:	cmp    DWORD PTR [esi+0xe],0x1b51005b
  4045d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d2:	fucomip st,st(3)
  4045d4:	dec    eax
  4045d5:	mov    dl,0x9c
  4045d7:	xchg   edx,eax
  4045d8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045da:	dec    ecx
  4045db:	or     DWORD PTR [ebx-0x46],esi
  4045de:	ins    BYTE PTR es:[edi],dx
  4045df:	push   ebp
  4045e0:	fstp   QWORD PTR [edi-0x26]
  4045e3:	jl     0x40459d
  4045e5:	nop
  4045e6:	pop    esp
  4045e7:	or     al,0x65
  4045e9:	loop   0x404570
  4045eb:	or     BYTE PTR [eax+esi*8-0x16],ah
  4045ef:	dec    edx
  4045f0:	ja     0x404671
  4045f2:	add    dh,BYTE PTR [eax]
  4045f4:	jno    0x40466e
  4045f6:	loop   0x40466e
  4045f8:	push   ecx
  4045f9:	sbb    BYTE PTR [ebp-0x5ad10dc4],al
  4045ff:	push   ecx
  404600:	or     DWORD PTR [ebx+0x78f37902],esi
  404606:	call   0xc3eafb65
  40460b:	or     BYTE PTR [eax+0xd6d4a],bh
  404611:	hlt    
  404612:	inc    eax
  404613:	mov    edi,0x428f7b71
  404618:	outs   dx,DWORD PTR ds:[esi]
  404619:	scas   eax,DWORD PTR es:[edi]
  40461a:	aad    0xfc
  40461c:	in     al,0x79
  40461e:	xchg   ebp,eax
  40461f:	pop    es
  404620:	sahf   
  404621:	hlt    
  404622:	push   edi
  404623:	push   0x39e7edd
  404628:	cli    
  404629:	mov    ds:0xb8aa20ba,al
  40462e:	cmp    dl,BYTE PTR [esi]
  404630:	stos   BYTE PTR es:[edi],al
  404631:	jp     0x404660
  404633:	or     bh,BYTE PTR [esi+0x7127ba67]
  404639:	lods   eax,DWORD PTR ds:[esi]
  40463a:	push   0xdee29f39
  40463f:	daa    
  404640:	jno    0x404620
  404642:	in     eax,dx
  404643:	adc    al,0x67
  404645:	retf   0x7c52
  404648:	jno    0x404628
  40464a:	sahf   
  40464b:	jnp    0x4046c2
  40464d:	mov    ecx,0xcec166b8
  404652:	jbe    0x40469b
  404654:	push   esi
  404655:	or     bh,BYTE PTR [edx+0x69adb137]
  40465b:	jge    0x4046c6
  40465d:	mov    al,ds:0x9399f351
  404662:	sahf   
  404663:	or     BYTE PTR [esi+0x23],dl
  404666:	arpl   WORD PTR [edx+0x61],dx
  404669:	fmul   QWORD PTR ss:[eax]
  40466c:	push   esi
  40466d:	or     dl,BYTE PTR [ecx+0xf]
  404670:	fisttp QWORD PTR [edi]
  404672:	jbe    0x4046f0
  404674:	sbb    ebx,DWORD PTR [ebx]
  404676:	jae    0x404644
  404678:	ins    DWORD PTR es:[edi],dx
  404679:	dec    edi
  40467a:	(bad)  
  40467b:	leave  
  40467c:	mov    dh,0x2
  40467e:	push   ss
  40467f:	iret   
  404680:	pop    ebp
  404681:	ficomp WORD PTR [esi-0x38f594f8]
  404687:	daa    
  404688:	jno    0x404637
  40468a:	xchg   esp,eax
  40468b:	mov    BYTE PTR [edx-0xdde36f1],ch
  404691:	es loope 0x404713
  404694:	push   esp
  404695:	dec    ebx
  404696:	sti    
  404697:	mov    dl,0xf8
  404699:	ss sub eax,0x44830009
  40469f:	push   cs
  4046a0:	mov    bh,0x2d
  4046a2:	cmp    dl,BYTE PTR [esi-0x43]
  4046a5:	test   BYTE PTR [edx+0x14db04f5],bh
  4046ab:	push   ds
  4046ac:	adc    BYTE PTR [edx],bl
  4046ae:	push   0xdf1740e4
  4046b3:	loopne 0x40466d
  4046b5:	cmc    
  4046b6:	inc    ebp
  4046b7:	fsub   DWORD PTR [eax+0x17]
  4046ba:	jbe    0x4046ab
  4046bc:	test   eax,0x835545f5
  4046c1:	sbb    eax,0x227274b5
  4046c6:	xor    ebx,DWORD PTR [ebx+0x55]
  4046c9:	ret    0xcbff
  4046cc:	or     DWORD PTR [esi+eax*4+0x4cfda0af],ecx
  4046d3:	sub    dl,dh
  4046d5:	repz xchg esi,eax
  4046d7:	sub    al,0x81
  4046d9:	imul   edi,DWORD PTR [ebx-0x2],0x22
  4046dd:	shr    BYTE PTR [esi],cl
  4046df:	jmp    0x4046f6
  4046e1:	out    dx,al
  4046e2:	mov    bh,0xa
  4046e4:	mul    ah
  4046e6:	xlat   BYTE PTR ds:[ebx]
  4046e7:	retf   0x52f2
  4046ea:	adc    dl,cl
  4046ec:	mov    ebx,0x220b619d
  4046f1:	mov    cl,cl
  4046f3:	ins    BYTE PTR es:[edi],dx
  4046f4:	fst    QWORD PTR [edi]
  4046f6:	mov    ah,BYTE PTR [edi]
  4046f8:	jno    0x4046d8
  4046fa:	adc    eax,0xe1815a53
  4046ff:	cmp    edi,eax
  404701:	add    DWORD PTR [edx-0x7d],esp
  404704:	and    eax,0x5d13f2a
  404709:	sti    
  40470a:	scas   eax,DWORD PTR es:[edi]
  40470b:	sar    edx,0x2
  40470e:	jp     0x404763
  404710:	pusha  
  404711:	loop   0x404712
  404713:	je     0x404769
  404715:	es call 0x96be:0x91d3b8e6
  40471d:	or     edi,DWORD PTR [ebx+0x61]
  404720:	call   0x91c0:0x41f11f34
  404727:	dec    ecx
  404728:	add    al,0xdb
  40472a:	adc    eax,0xb2e15e4b
  40472f:	lods   al,BYTE PTR ds:[esi]
  404730:	push   0xffffffe7
  404732:	gs jl  0x404789
  404735:	loope  0x4047a8
  404737:	js     0x404768
  404739:	test   DWORD PTR [ebp-0x5],ebx
  40473c:	adc    al,0x64
  40473e:	cmp    dh,al
  404740:	repz sbb eax,DWORD PTR [ecx-0x56]
  404744:	in     al,dx
  404745:	outs   dx,BYTE PTR ds:[esi]
  404746:	adc    eax,0x5e959fc6
  40474b:	clc    
  40474c:	ins    DWORD PTR es:[edi],dx
  40474d:	aam    0x20
  40474f:	jg     0x404733
  404751:	das    
  404752:	xchg   edi,eax
  404753:	sbb    eax,0x4ed64561
  404758:	adc    eax,0x9bea993
  40475d:	mov    edx,0x3a50824d
  404762:	cmp    edx,edx
  404764:	xor    esi,DWORD PTR [edx+eax*4-0x70b4eeb9]
  40476b:	popa   
  40476c:	shr    DWORD PTR [edx-0x2219b245],cl
  404772:	or     eax,DWORD PTR [ebp-0x56]
  404775:	sbb    ecx,DWORD PTR [esi-0x70fd936d]
  40477b:	push   esi
  40477c:	cli    
  40477d:	test   eax,0xba94aeef
  404782:	adc    eax,0xba0a6605
  404787:	daa    
  404788:	cli    
  404789:	xchg   edi,eax
  40478a:	xchg   edx,eax
  40478b:	sbb    DWORD PTR [edi],0x6
  40478e:	xor    DWORD PTR [edx+0x79],esp
  404791:	out    0xdf,eax
  404793:	adc    BYTE PTR [edx],ah
  404795:	push   cs
  404796:	xor    DWORD PTR [esi],ebp
  404798:	call   0xfa09:0x5e4d152a
  40479f:	sbb    edi,edx
  4047a1:	sahf   
  4047a2:	mov    dh,0xb
  4047a4:	adc    eax,DWORD PTR [edx]
  4047a6:	xor    esp,DWORD PTR [esi+0x6d]
  4047a9:	pop    ss
  4047aa:	pop    esp
  4047ab:	or     al,0x56
  4047ad:	xchg   edi,eax
  4047ae:	shl    BYTE PTR [ebx+0x79],cl
  4047b1:	out    0xec,al
  4047b3:	mov    esp,0x6f7625a0
  4047b8:	mov    dh,0xa3
  4047ba:	clc    
  4047bb:	dec    ecx
  4047bc:	add    eax,DWORD PTR [ebx-0x25625ba1]
  4047c2:	int    0x5e
  4047c4:	add    DWORD PTR [ecx-0x7a8dd419],eax
  4047ca:	mov    ds:0xba0a55e0,al
  4047cf:	daa    
  4047d0:	mov    bl,0xd6
  4047d2:	sahf   
  4047d3:	push   ecx
  4047d4:	fisttp DWORD PTR [edi+0x46]
  4047d7:	ja     0x4047f4
  4047d9:	sahf   
  4047da:	popa   
  4047db:	jnp    0x4047e3
  4047dd:	cmc    
  4047de:	iret   
  4047df:	das    
  4047e0:	mov    cs,WORD PTR [edi+0x66]
  4047e3:	or     edx,DWORD PTR [esi+0xa]
  4047e6:	mov    esp,edi
  4047e8:	cli    
  4047e9:	mov    ds:0x5a1d8396,eax
  4047ee:	dec    ecx
  4047ef:	lea    edi,[esi+0x69]
  4047f2:	int    0xe
  4047f4:	fist   DWORD PTR [ecx-0x218ed8be]
  4047fa:	adc    eax,0xc7815a7d
  4047ff:	das    
  404800:	cli    
  404801:	xchg   ebp,eax
  404802:	mov    bh,bl
  404804:	repnz or edi,0x8aad722b
  40480b:	sub    DWORD PTR [ebx],0x2
  40480e:	mov    ecx,0xd5557d5c
  404813:	sbb    BYTE PTR [ebp+0x59e439ae],ah
  404819:	xchg   esp,eax
  40481a:	jmp    0x4047fd
  40481c:	or     DWORD PTR [ecx+eiz*8-0x12],edx
  404820:	mov    bl,0xd6
  404822:	sahf   
  404823:	pop    esp
  404824:	in     al,dx
  404825:	repnz arpl WORD PTR [ecx-0x7c],cx
  404829:	xchg   ebp,eax
  40482a:	xor    DWORD PTR [edx],ebx
  40482c:	dec    ebx
  40482d:	push   edi
  40482e:	adc    DWORD PTR [ecx+0x2d],edi
  404831:	pop    edx
  404832:	retf   
  404833:	xor    DWORD PTR [ebx+0x22235689],0xb83c988
  40483d:	add    bh,BYTE PTR [ecx+0x2d554d7c]
  404843:	mov    BYTE PTR [esi+0xa],dl
  404846:	mov    edx,0xfdaa872e
  40484b:	or     esp,DWORD PTR [ebx]
  40484d:	add    bh,BYTE PTR [ecx]
  40484f:	pop    ecx
  404850:	popa   
  404851:	fsubp  st(2),st
  404853:	push   edx
  404854:	fisttp QWORD PTR [esi+esi*4+0x24]
  404858:	xor    al,0xd6
  40485a:	into   
  40485b:	loopne 0x4048b2
  40485d:	or     bh,BYTE PTR [edx-0x61254cd9]
  404863:	push   ebx
  404864:	test   eax,0x7124e699
  404869:	ficom  WORD PTR [edi]
  40486b:	dec    ebp
  40486c:	stos   BYTE PTR es:[edi],al
  40486d:	pop    esp
  40486e:	xor    DWORD PTR [ecx+0x61],esp
  404871:	pop    ebp
  404872:	mov    al,ds:0x31082208
  404877:	and    DWORD PTR [edx-0x65],esi
  40487a:	xchg   esi,eax
  40487b:	sub    DWORD PTR [eax],0x1a
  40487e:	mov    ecx,0x3348795a
  404883:	add    DWORD PTR [esi+0x718e9b7e],edx
  404889:	ficomp WORD PTR [esi-0x46fddc78]
  40488f:	bound  edi,QWORD PTR [ecx+0x5d]
  404892:	pop    esi
  404893:	or     bh,BYTE PTR [ebp-0x712760f1]
  404899:	and    ecx,esp
  40489b:	pop    eax
  40489c:	test   eax,0xe2d8467f
  4048a1:	xchg   BYTE PTR [ebp+0x51a15608],bl
  4048a7:	std    
  4048a8:	das    
  4048a9:	pop    ebp
  4048aa:	pop    eax
  4048ab:	sbb    al,0xbd
  4048ad:	stos   BYTE PTR es:[edi],al
  4048ae:	in     eax,0x79
  4048b0:	sub    dl,BYTE PTR [edi]
  4048b2:	pop    esp
  4048b3:	or     al,0x56
  4048b5:	mov    esp,0xbb30964e
  4048ba:	sbb    DWORD PTR [esp+eax*2],esi
  4048bd:	retf   
  4048be:	repz or al,0xc1
  4048c1:	cmp    eax,DWORD PTR [ecx+0x11]
  4048c4:	sub    al,0x8c
  4048c6:	sub    al,0x2c
  4048c8:	leave  
  4048c9:	(bad)  
  4048ca:	enter  0x35f,0xe2
  4048ce:	mov    ebx,0x5dde7127
  4048d3:	push   ebp
  4048d4:	cmp    al,0xa
  4048d6:	shl    BYTE PTR ds:0xa604b8e,1
  4048dc:	push   esi
  4048dd:	or     ch,BYTE PTR [ecx]
  4048df:	stos   BYTE PTR es:[edi],al
  4048e0:	int3   
  4048e1:	ins    BYTE PTR es:[edi],dx
  4048e2:	call   0x700f:0xbdcd5608
  4048e9:	ficomp WORD PTR [esi+0x2ff5055f]
  4048ef:	and    eax,0x19ede72
  4048f4:	xchg   esi,eax
  4048f5:	jle    0x4048f6
  4048f7:	stos   BYTE PTR es:[edi],al
  4048f8:	push   es
  4048f9:	cli    
  4048fa:	scas   eax,DWORD PTR es:[edi]
  4048fb:	shl    DWORD PTR [edi-0x36],0x16
  4048ff:	das    
  404900:	mov    cl,0xaa
  404902:	mov    ?,WORD PTR [edi+esi*1]
  404905:	jbe    0x4048bf
  404907:	or     edx,DWORD PTR [ecx+0x1f]
  40490a:	pop    edi
  40490b:	pmullw mm7,mm2
  40490e:	jmp    0x7575f939
  404913:	test   ebx,esp
  404915:	push   0x737127b9
  40491a:	xchg   edi,eax
  40491b:	enter  0x322,0x83
  40491f:	out    0x4,al
  404921:	sub    esp,esi
  404923:	or     DWORD PTR [esi],ecx
  404925:	loope  0x4048d6
  404927:	jo     0x40494b
  404929:	and    DWORD PTR [ebx],ecx
  40492b:	push   cs
  40492c:	push   ebp
  40492d:	or     bh,BYTE PTR [edx+0x5aabb12e]
  404933:	pop    ebx
  404934:	test   eax,0x7124b09f
  404939:	fisubr WORD PTR [edi-0x1baaf438]
  40493f:	jl     0x4048f3
  404941:	mov    bh,0xc6
  404943:	stc    
  404944:	ret    0x4cc4
  404947:	mov    al,ds:0xf5b90f5c
  40494c:	push   0xffffffbc
  40494e:	dec    edx
  40494f:	les    ecx,FWORD PTR [edx-0x5ba5c9f7]
  404955:	lea    ebp,[ebp-0x5b]
  404958:	out    0xbb,eax
  40495a:	test   BYTE PTR [eax],al
  40495c:	popa   
  40495d:	std    
  40495e:	cmp    esi,DWORD PTR [edi+eiz*1-0x77]
  404962:	retf   
  404963:	loopne 0x4049bc
  404965:	or     bh,BYTE PTR [edx+0x1583b227]
  40496b:	lea    ebp,[edx]
  40496d:	or     BYTE PTR [edx-0x15e187d9],bh
  404973:	add    ch,BYTE PTR [ecx+0x7ee7b3da]
  404979:	pop    ebx
  40497a:	adc    DWORD PTR [ecx],ecx
  40497c:	push   esi
  40497d:	or     dh,BYTE PTR [edi]
  40497f:	xchg   edx,eax
  404980:	jns    0x40495f
  404982:	sahf   
  404983:	or     dl,bh
  404985:	add    bh,BYTE PTR [edx+0x53]
  404988:	xchg   ax,ax
  40498a:	enter  0xc3f7,0x72
  40498e:	mov    eax,0x5ed77127
  404993:	pop    es
  404994:	sar    DWORD PTR [esi-0x45],cl
  404997:	daa    
  404998:	jno    0x404a0c
  40499a:	xchg   esi,eax
  40499b:	enter  0xf123,0x51
  40499f:	ret    
  4049a0:	cdq    
  4049a1:	cli    
  4049a2:	popa   
  4049a3:	imul   DWORD PTR [ecx-0xbd785fd]
  4049a9:	mov    esi,0x8756089f
  4049ae:	aas    
  4049af:	push   edi
  4049b0:	jb     0x404990
  4049b2:	sahf   
  4049b3:	pop    eax
  4049b4:	test   eax,0x7125ee9f
  4049b9:	ficom  WORD PTR [ebx]
  4049bb:	test   edi,ebx
  4049bd:	or     DWORD PTR [edx+0x618e2027],edi
  4049c3:	popf   
  4049c4:	push   es
  4049c5:	or     BYTE PTR [edx+0x1a5bf827],bh
  4049cb:	or     dl,BYTE PTR [esi+0xa]
  4049ce:	aaa    
  4049cf:	mov    ds:0x89edd0d,al
  4049d4:	push   es
  4049d5:	cmc    
  4049d6:	das    
  4049d7:	jae    0x404a4c
  4049d9:	ficomp WORD PTR [esi+0x288fdb9b]
  4049df:	and    al,0x71
  4049e1:	fmulp  st(6),st
  4049e3:	pop    ebx
  4049e4:	test   eax,0x7125ea9f
  4049e9:	ficom  WORD PTR [edi]
  4049eb:	(bad)  
  4049ec:	fimul  WORD PTR [eax]
  4049ee:	mov    edx,0x3e5bfc27
  4049f3:	or     edx,DWORD PTR [esi+0xa]
  4049f6:	jmp    0x560a:0xce4b8e74
  4049fd:	or     dh,BYTE PTR [ebx]
  4049ff:	mov    ds:0x89edcfd,al
  404a04:	fisttp DWORD PTR [edi-0x218edbf5]
  404a0a:	into   
  404a0b:	pop    ebx
  404a0c:	test   eax,0x7125ea9f
  404a11:	ficom  WORD PTR [edi]
  404a13:	(bad)  
  404a14:	(bad)  
  404a15:	or     BYTE PTR [edx-0x975ded9],bh
  404a1b:	adc    DWORD PTR [esi+0x8],edx
  404a1e:	mov    edx,0x1b53714d
  404a23:	mov    ch,0x55
  404a25:	or     bh,BYTE PTR [edx-0x6123e689]
  404a2b:	or     dh,dl
  404a2d:	cmc    
  404a2e:	das    
  404a2f:	scas   eax,DWORD PTR es:[edi]
  404a30:	jae    0x404a10
  404a32:	sahf   
  404a33:	push   ebx
  404a34:	pop    edi
  404a35:	retf   0x71cf
  404a38:	cld    
  404a39:	pop    ebx
  404a3a:	fimul  DWORD PTR [edi]
  404a3c:	push   esi
  404a3d:	or     ch,dl
  404a3f:	stos   BYTE PTR es:[edi],al
  404a40:	hlt    
  404a41:	call   0x27d0:0x5a56089b
  404a48:	sbb    ebx,esi
  404a4a:	adc    ecx,DWORD PTR [ebp+0x27ba0e59]
  404a50:	and    DWORD PTR [ebp+0x8da9d61],ecx
  404a56:	mov    edx,0x618d2127
  404a5b:	popf   
  404a5c:	(bad)  
  404a5d:	or     BYTE PTR [edx+0x5ed72927],bh
  404a63:	jge    0x404ae4
  404a65:	xchg   DWORD PTR [edi],ecx
  404a67:	jno    0x404adb
  404a69:	ficomp WORD PTR [esi-0x3135a15c]
  404a6f:	cmp    DWORD PTR [edi],edi
  404a71:	mov    BYTE PTR [ebx],dl
  404a73:	lea    edx,[edx]
  404a75:	bt     DWORD PTR [edi],0x21
  404a79:	and    DWORD PTR [ebx],ecx
  404a7b:	mov    WORD PTR [edx+ecx*1-0x46],ss
  404a7f:	cs mov cl,0xd1
  404a82:	sbb    ecx,DWORD PTR [esi-0x7445f5aa]
  404a88:	jns    0x404aa8
  404a8a:	jmp    0x404a7f
  404a8c:	mov    ebp,0x1973ead7
  404a91:	(bad)  
  404a92:	sahf   
  404a93:	or     dl,BYTE PTR [esi+0x60]
  404a96:	mov    edx,0x9d3bf4aa
  404a9b:	or     BYTE PTR [esi+0x5a],dl
  404a9e:	shl    BYTE PTR ds:0xf71ede71,cl
  404aa4:	ret    
  404aa5:	cmp    BYTE PTR [eax-0x687a8ed9],0xc8
  404aac:	and    edx,DWORD PTR [edi+0x37]
  404aaf:	mov    ds:0x89ed935,al
  404ab4:	xchg   ecx,eax
  404ab5:	or     bh,BYTE PTR [edx-0x31218edb]
  404abb:	test   ebx,edx
  404abd:	dec    esi
  404abe:	mov    edi,0xf48e7127
  404ac3:	or     BYTE PTR [edx+ecx*1],bh
  404ac6:	aaa    
  404ac7:	mov    ds:0x89eda60,al
  404acc:	push   es
  404acd:	pop    ecx
  404ace:	inc    ebp
  404acf:	mov    dl,0xfd
  404ad1:	fcomp  QWORD PTR [esi+0x45590608]
  404ad7:	mov    dl,0xe1
  404ad9:	fcomp  QWORD PTR [esi+0x7a030e08]
  404adf:	push   edx
  404ae0:	pop    ebx
  404ae1:	push   ebx
  404ae2:	sub    ecx,DWORD PTR [ebx+edx*2+0xa]
  404ae6:	mov    edx,0x5eefb816
  404aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aec:	pop    esi
  404aed:	retf   0x2dce
  404af0:	mov    al,0x1f
  404af2:	cdq    
  404af3:	mov    esp,DWORD PTR [esi-0x651944a7]
  404af9:	das    
  404afa:	adc    edi,DWORD PTR [ebp+0x27ba08aa]
  404b00:	(bad)  
  404b02:	pop    esi
  404b03:	jl     0x404b55
  404b05:	xor    edi,DWORD PTR [ebx+0x52]
  404b08:	xchg   BYTE PTR ds:0x605ee39c,dh
  404b0e:	mov    edx,0x9c86e4d8
  404b13:	or     BYTE PTR [esi+0x57],dl
  404b16:	in     eax,0x79
  404b18:	sub    bl,BYTE PTR ds:0x43162bc7
  404b1e:	push   ds
  404b1f:	out    0x18,al
  404b21:	mov    dh,0x7e
  404b23:	adc    al,0xbe
  404b25:	push   ss
  404b26:	dec    ecx
  404b27:	pop    ecx
  404b28:	mov    dl,0x51
  404b2a:	int    0x5e
  404b2c:	add    DWORD PTR [edi+0x52],ebx
  404b2f:	es jno 0x404b10
  404b32:	sahf   
  404b33:	retf   
  404b34:	or     esp,edx
  404b36:	or     al,0xdc
  404b38:	mov    fs,WORD PTR [ecx]
  404b3a:	or     eax,0xba8feb85
  404b3f:	daa    
  404b40:	jno    0x404b99
  404b42:	pusha  
  404b43:	mov    edx,DWORD PTR [eax-0x4ed1e8b2]
  404b49:	stos   BYTE PTR es:[edi],al
  404b4a:	xchg   esp,eax
  404b4b:	pop    eax
  404b4c:	add    eax,0x8edddbe2
  404b51:	and    DWORD PTR ds:0xbe60a7e3,esi
  404b57:	dec    edi
  404b58:	jno    0x404b28
  404b5a:	sahf   
  404b5b:	or     bl,bl
  404b5d:	xchg   edi,eax
  404b5e:	daa    
  404b5f:	and    dh,BYTE PTR [ecx-0x22]
  404b62:	test   BYTE PTR [eax],0x14
  404b65:	or     DWORD PTR [edx+0xb21714d],edi
  404b6b:	cdq    
  404b6c:	push   esi
  404b6d:	or     bh,BYTE PTR [edx-0x32714852]
  404b73:	loopne 0x404b72
  404b75:	lock inc ebp
  404b77:	fmul   st,st(6)
  404b79:	ficomp WORD PTR [esi-0x12a3a9b8]
  404b7f:	iret   
  404b80:	dec    ecx
  404b81:	and    ah,BYTE PTR [ecx-0x9]
  404b84:	or     bh,BYTE PTR ds:[edx]
  404b87:	daa    
  404b88:	jno    0x404b3e
  404b8a:	sahf   
  404b8b:	pop    esi
  404b8c:	test   eax,0x7127239f
  404b91:	fmulp  st(1),st
  404b93:	loopne 0x404b61
  404b95:	test   BYTE PTR [ebp-0x28],0x26
  404b99:	ss jle 0x404b8f
  404b9c:	test   eax,0x72df33f5
  404ba1:	cdq    
  404ba2:	mov    ds:0xbb221683,al
  404ba7:	fild   QWORD PTR [ecx+eax*4]
  404baa:	rcl    BYTE PTR [ebx+0x3c],0xa
  404bae:	inc    ebp
  404baf:	neg    DWORD PTR [ebx]
  404bb1:	fisub  WORD PTR [ecx-0x63]
  404bb4:	fisttp DWORD PTR [edx]
  404bb6:	mov    edx,0x588c1127
  404bbb:	add    edi,esp
  404bbd:	sub    al,dh
  404bbf:	fcom   DWORD PTR cs:0xfcce6ab7
  404bc6:	inc    ebx
  404bc7:	add    dl,bl
  404bc9:	push   esi
  404bca:	xor    dh,BYTE PTR ds:0x2d846906
  404bd0:	add    al,al
  404bd2:	je     0x404be1
  404bd4:	jmp    0x22ab1a5e
  404bd9:	mov    dl,0x17
  404bdb:	pop    ss
  404bdc:	pop    es
  404bdd:	(bad)  
  404bde:	pushf  
  404bdf:	push   eax
  404be0:	test   DWORD PTR [ebx-0x11],esp
  404be3:	sbb    al,0xfe
  404be5:	loop   0x404bbe
  404be7:	adc    BYTE PTR [edi+0x54],dh
  404bea:	pop    ebx
  404beb:	sbb    dl,dl
  404bed:	xchg   edx,eax
  404bee:	push   edx
  404bef:	aas    
  404bf0:	xchg   ebx,eax
  404bf1:	shr    bl,1
  404bf3:	inc    esi
  404bf4:	std    
  404bf5:	xor    eax,0xf602409e
  404bfa:	dec    esi
  404bfb:	je     0x404bf7
  404bfd:	mov    al,0x48
  404bff:	hlt    
  404c00:	(bad)  
  404c01:	repz adc eax,0xe1a89745
  404c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c08:	enter  0xa388,0xc7
  404c0c:	push   eax
  404c0d:	lds    esi,FWORD PTR [ebp+0x68285604]
  404c13:	sbb    esp,ebx
  404c15:	push   eax
  404c16:	pop    ebp
  404c17:	pop    esi
  404c18:	cmp    al,BYTE PTR [ecx+0x4d93993f]
  404c1e:	cwde   
  404c1f:	ins    DWORD PTR es:[edi],dx
  404c20:	shl    DWORD PTR [edx+0x70],0xeb
  404c24:	add    al,0xf5
  404c26:	stc    
  404c27:	ja     0x404c84
  404c29:	addr16 loopne 0x404c71
  404c2c:	dec    esi
  404c2d:	mov    ebp,0xde71fed5
  404c32:	sahf   
  404c33:	or     BYTE PTR [eax],ah
  404c35:	inc    ebp
  404c36:	add    ecx,eax
  404c38:	scas   eax,DWORD PTR es:[edi]
  404c39:	clc    
  404c3a:	adc    BYTE PTR [esi-0x485af844],ch
  404c40:	add    BYTE PTR [esi+0x5f],0x1c
  404c44:	fsincos 
  404c46:	add    DWORD PTR [ecx-0xd106fb9],ebp
  404c4c:	cs hlt 
  404c4e:	ja     0x404ca2
  404c50:	mov    ch,0xdd
  404c52:	dec    esp
  404c53:	imul   BYTE PTR [esi-0xb]
  404c56:	jg     0x404cb4
  404c58:	push   0x77
  404c5a:	inc    eax
  404c5b:	adc    edx,DWORD PTR [eax+0x71f82800]
  404c61:	ficomp WORD PTR [esi-0x3e1e0ff8]
  404c67:	outs   dx,DWORD PTR ds:[esi]
  404c68:	les    esp,FWORD PTR [esi]
  404c6a:	add    BYTE PTR [eax],bl
  404c6c:	push   esi
  404c6d:	or     bh,BYTE PTR [edx-0x843ddd9]
  404c73:	ins    DWORD PTR es:[edi],dx
  404c74:	adc    ah,BYTE PTR [esi-0x2a]
  404c77:	or     DWORD PTR ds:0x3708f2b2,edx
  404c7d:	jp     0x404c52
  404c7f:	js     0x404c9e
  404c81:	mov    cl,0xf9
  404c83:	xor    ah,BYTE PTR es:[esi-0x2a]
  404c87:	daa    
  404c88:	add    DWORD PTR [ebp+0x6f2467ea],ebp
  404c8e:	(bad)  [ecx]
  404c90:	adc    eax,0x3208f2b2
  404c95:	arpl   ax,cx
  404c97:	js     0x404c9f
  404c99:	mov    edi,0x243e6bea
  404c9e:	fimul  WORD PTR [ebx+0x1d]
  404ca1:	(bad)  
  404ca3:	pop    edi
  404ca4:	add    eax,0x1849d547
  404ca9:	stos   BYTE PTR es:[edi],al
  404caa:	icebp  
  404cab:	jp     0x404d25
  404cad:	outs   dx,BYTE PTR ds:[esi]
  404cae:	(bad)  
  404caf:	dec    ebx
  404cb0:	jno    0x404c6c
  404cb2:	cld    
  404cb3:	outs   dx,DWORD PTR ds:[esi]
  404cb4:	outs   dx,DWORD PTR ds:[esi]
  404cb6:	(bad)  
  404cb7:	push   edi
  404cb8:	pop    edi
  404cb9:	mov    edx,0xa5664f2
  404cbe:	in     al,dx
  404cbf:	outs   dx,BYTE PTR ds:[esi]
  404cc0:	and    ecx,DWORD PTR [edx+0xa1a49cb]
  404cc6:	in     al,dx
  404cc7:	push   0x26
  404cc9:	lahf   
  404cca:	int3   
  404ccb:	dec    ebp
  404ccc:	push   esi
  404ccd:	pop    esp
  404cce:	clc    
  404ccf:	push   0x4dcfde29
  404cd4:	sbb    ebx,DWORD PTR [edi-0x46]
  404cd7:	daa    
  404cd8:	and    dh,BYTE PTR [esi+0x7a377ff2]
  404cde:	ror    DWORD PTR [ecx],cl
  404ce0:	adc    eax,0x3708f2b2
  404ce5:	outs   dx,BYTE PTR ds:[esi]
  404ce6:	int3   
  404ce7:	inc    esi
  404ce8:	add    DWORD PTR [edi+0x6e783aad],esi
  404cee:	(bad)  
  404cef:	dec    ebx
  404cf0:	rol    al,0xc0
  404cf3:	rol    al,0xc0
  404cf6:	rol    al,0xc0
  404cf9:	rol    al,0xc0
  404cfc:	rol    al,0xc0
  404cff:	rol    al,0xc0
  404d02:	rol    al,0xc0
  404d05:	rol    al,0xc0
  404d08:	rol    al,0xc0
  404d0b:	rol    al,0xc0
  404d0e:	rol    al,0xc0
  404d11:	rol    al,0xc0
  404d14:	rol    al,0xc0
  404d17:	rol    al,0xc0
  404d1a:	rol    al,0xc0
  404d1d:	rol    al,0xc0
  404d20:	jno    0x404caf
  404d22:	jmp    0x306e:0xc87e057a
  404d29:	fmulp  st(4),st
  404d2b:	ins    DWORD PTR es:[edi],dx
  404d2c:	xor    DWORD PTR [ebp-0x36],eax
  404d2f:	inc    edx
  404d30:	pop    ds
  404d31:	xchg   ebp,eax
  404d32:	sti    
  404d33:	jno    0x404d48
  404d35:	jb     0x404d32
  404d37:	daa    
  404d38:	and    edi,DWORD PTR [ebx+0x6f2359f9]
  404d3e:	enter  0x275e,0xbf
  404d42:	bnd jge 0x404d78
  404d45:	dec    edi
  404d46:	ret    0x7166
  404d49:	mov    ebx,?
  404d4b:	outs   dx,DWORD PTR ds:[esi]
  404d4c:	adc    eax,0x1454d566
  404d51:	xchg   ebp,eax
  404d52:	sti    
  404d53:	jno    0x404dab
  404d55:	pop    ecx
  404d56:	jecxz  0x404dcc
  404d58:	and    eax,0x1554d39b
  404d5d:	gs aam 0x53
  404d60:	add    esi,DWORD PTR [ecx+0x7e335bf2]
  404d66:	mov    dl,BYTE PTR [edi]
  404d68:	inc    eax
  404d69:	or     ch,0x6d
  404d6c:	and    al,0x7c
  404d6e:	rol    DWORD PTR [esp+edx*1-0x53],cl
  404d72:	ret    0x3f4c
  404d75:	jns    0x404d48
  404d77:	jnp    0x404dad
  404d79:	mov    al,0xeb
  404d7b:	gs push esi
  404d7d:	pop    ecx
  404d7e:	aad    0x41
  404d80:	add    eax,0x337affa9
  404d85:	push   esi
  404d86:	test   DWORD PTR [esi+0x12],0x397bf1ac
  404d8d:	ins    BYTE PTR es:[edi],dx
  404d8e:	into   
  404d8f:	jnp    0x404db7
  404d91:	mov    bh,0xf0
  404d93:	ins    BYTE PTR es:[edi],dx
  404d94:	cmp    DWORD PTR [ebp-0x37],edi
  404d97:	jnp    0x404dcb
  404d99:	stos   DWORD PTR es:[edi],eax
  404d9a:	in     al,dx
  404d9b:	jp     0x404dd0
  404d9d:	fs into 
  404d9f:	jno    0x404db5
  404da1:	lods   al,BYTE PTR ds:[esi]
  404da2:	in     eax,dx
  404da3:	popa   
  404da4:	cmp    DWORD PTR [edx+edi*4+0x17],esp
  404da8:	jno    0x404d38
  404daa:	in     al,dx
  404dab:	xor    bh,BYTE PTR [bx-0x27]
  404daf:	push   ebx
  404db0:	cmp    BYTE PTR [edx+0xa56089e],bh
  404db6:	mov    edx,0x9ede7127
  404dbb:	or     BYTE PTR [esi+0xa],dl
  404dbe:	mov    edx,0x9ede7127
  404dc3:	or     BYTE PTR [esi+0xa],dl
  404dc6:	mov    edx,0x9ede7127
  404dcb:	or     BYTE PTR [esi+0xa],dl
  404dce:	mov    edx,0x9ede7127
  404dd3:	or     BYTE PTR [esi+0xa],dl
  404dd6:	mov    edx,0x9ede7127
  404ddb:	or     BYTE PTR [esi+0xa],dl
  404dde:	mov    edx,0x9ede7127
  404de3:	or     BYTE PTR [esi+0xa],dl
  404de6:	mov    edx,0x9ede7127
  404deb:	or     BYTE PTR [esi+0xa],dl
  404dee:	mov    edx,0x9ede7127
  404df3:	or     BYTE PTR [esi+0xa],dl
  404df6:	mov    edx,0x9ede7127
  404dfb:	or     BYTE PTR [esi+0xa],dl
  404dfe:	mov    edx,0x9ede7127
  404e03:	or     BYTE PTR [esi+0xa],dl
  404e06:	mov    edx,0x9ede7127
  404e0b:	or     BYTE PTR [esi+0xa],dl
  404e0e:	mov    edx,0x9ede7127
  404e13:	or     BYTE PTR [esi+0xa],dl
  404e16:	mov    edx,0x9ede7127
  404e1b:	or     BYTE PTR [esi+0xa],dl
  404e1e:	mov    edx,0x9ede7127
  404e23:	or     BYTE PTR [esi+0xa],dl
  404e26:	mov    edx,0x9ede7127
  404e2b:	or     BYTE PTR [esi+0xa],dl
  404e2e:	mov    edx,0x9ede7127
  404e33:	or     BYTE PTR [esi+0xa],dl
  404e36:	mov    edx,0x9ede7127
  404e3b:	or     BYTE PTR [esi+0xa],dl
  404e3e:	mov    edx,0x9ede7127
  404e43:	or     BYTE PTR [esi+0xa],dl
  404e46:	mov    edx,0x9ede7127
  404e4b:	or     BYTE PTR [esi+0xa],dl
  404e4e:	mov    edx,0x9ede7127
  404e53:	or     BYTE PTR [esi+0xa],dl
  404e56:	mov    edx,0x9ede7127
  404e5b:	or     BYTE PTR [esi+0xa],dl
  404e5e:	mov    edx,0x9ede7127
  404e63:	or     BYTE PTR [esi+0xa],dl
  404e66:	mov    edx,0x9ede7127
  404e6b:	or     BYTE PTR [esi+0xa],dl
  404e6e:	mov    edx,0x9ede7127
  404e73:	or     BYTE PTR [esi+0xa],dl
  404e76:	mov    edx,0x9ede7127
  404e7b:	or     BYTE PTR [esi+0xa],dl
  404e7e:	mov    edx,0x9ede7127
  404e83:	or     BYTE PTR [esi+0xa],dl
  404e86:	mov    edx,0x9ede7127
  404e8b:	or     BYTE PTR [esi+0xa],dl
  404e8e:	mov    edx,0x9ede7127
  404e93:	or     BYTE PTR [esi+0xa],dl
  404e96:	mov    edx,0x9ede7127
  404e9b:	or     BYTE PTR [esi+0xa],dl
  404e9e:	mov    edx,0x9ede7127
  404ea3:	or     BYTE PTR [esi+0xa],dl
  404ea6:	mov    edx,0x9ede7127
  404eab:	or     BYTE PTR [esi+0xa],dl
  404eae:	mov    edx,0x9ede7127
  404eb3:	or     BYTE PTR [esi+0xa],dl
  404eb6:	mov    edx,0x9ede7127
  404ebb:	or     BYTE PTR [esi+0xa],dl
  404ebe:	mov    edx,0x9ede7127
  404ec3:	or     BYTE PTR [esi+0xa],dl
  404ec6:	mov    edx,0x9ede7127
  404ecb:	or     BYTE PTR [esi+0xa],dl
  404ece:	mov    edx,0x9ede7127
  404ed3:	or     BYTE PTR [esi+0xa],dl
  404ed6:	mov    edx,0x9ede7127
  404edb:	or     BYTE PTR [eax-0x79e1e8fa],bl
  404ee1:	sbb    edi,DWORD PTR [ebp+0x23e93e18]
  404ee7:	cmp    esi,edx
  404ee9:	adc    DWORD PTR [esi-0x524a61cd],edi
  404eef:	inc    eax
  404ef0:	sub    esi,eax
  404ef2:	scas   al,BYTE PTR es:[edi]
  404ef3:	inc    eax
  404ef4:	cmp    BYTE PTR [esp+esi*1+0x6a],dl
  404ef8:	clc    
  404ef9:	jno    0x404f42
  404efb:	xor    eax,0x3929614e
  404f00:	daa    
  404f01:	fcmovb st,st(2)
  404f03:	push   0x1e9ad1d0
  404f08:	(bad)  
  404f09:	mov    DWORD PTR [edx-0x77487dec],esi
  404f0f:	add    al,0x28
  404f11:	rcl    BYTE PTR gs:[eax+0xf],cl
  404f15:	mul    DWORD PTR ds:0x2f375732
  404f1b:	xor    dh,BYTE PTR [edx+0x1251fbd1]
  404f21:	dec    esp
  404f22:	push   ebp
  404f23:	push   ebp
  404f24:	out    0xdb,al
  404f26:	dec    ebp
  404f27:	js     0x404fa1
  404f29:	jne    0x404fa4
  404f2b:	push   cs
  404f2c:	aas    
  404f2d:	aad    0x37
  404f2f:	je     0x404f5c
  404f31:	dec    edi
  404f32:	fmul   DWORD PTR [edi]
  404f34:	daa    
  404f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f36:	dec    edx
  404f37:	push   cs
  404f38:	dec    eax
  404f39:	out    0x10,eax
  404f3b:	jo     0x404f8f
  404f3d:	add    ebp,esi
  404f3f:	pushw  0xff8b
  404f42:	ret    0xb24
  404f45:	jl     0x404fb4
  404f47:	inc    esi
  404f48:	stos   DWORD PTR es:[edi],eax
  404f49:	fild   DWORD PTR [edx]
  404f4b:	add    dh,dh
  404f4d:	and    eax,0x11b41cfe
  404f52:	or     al,0x71
  404f54:	mov    dh,al
  404f56:	cmp    al,0x32
  404f58:	lods   eax,DWORD PTR ds:[esi]
  404f59:	shr    DWORD PTR [edx+0x4c],cl
  404f5c:	mov    bh,0x3
  404f5e:	add    BYTE PTR [ebp-0x12],dl
  404f61:	adc    eax,DWORD PTR [eax+0x1b]
  404f64:	mov    esp,0x782f3781
  404f69:	push   0x42
  404f6b:	or     al,0xb
  404f6d:	mov    bh,0x15
  404f6f:	adc    al,BYTE PTR [ebp-0x62]
  404f72:	daa    
  404f73:	sub    al,0x97
  404f75:	and    bl,BYTE PTR [ecx+ebx*2+0x73a309eb]
  404f7c:	cli    
  404f7d:	hlt    
  404f7e:	scas   eax,DWORD PTR es:[edi]
  404f7f:	ds pusha 
  404f81:	add    eax,0x7e427b9c
  404f86:	(bad)  
  404f87:	outs   dx,BYTE PTR ds:[si]
  404f89:	xor    BYTE PTR [esi],dh
  404f8b:	and    cl,BYTE PTR [ecx+eax*2+0x13]
  404f8f:	pop    ds
  404f90:	je     0x404ffd
  404f92:	pop    ds
  404f93:	jp     0x404f3d
  404f95:	lahf   
  404f96:	sub    DWORD PTR [esi],eax
  404f98:	fwait
  404f99:	mov    ecx,0x6f4468c2
  404f9e:	adc    BYTE PTR [ebp+0x55],dh
  404fa1:	jne    0x404ff2
  404fa3:	cmp    al,dl
  404fa5:	jmp    0x404f27
  404fa7:	xor    bh,BYTE PTR [ecx+esi*8]
  404faa:	xor    al,BYTE PTR [eax+ebx*8-0x7b]
  404fae:	out    dx,eax
  404faf:	sbb    esp,ebp
  404fb1:	or     al,0xdd
  404fb3:	sbb    eax,0x300ff722
  404fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb9:	or     BYTE PTR [ebp+eiz*1+0x86c5b47],cl
  404fc0:	rcl    DWORD PTR [ebp+0xf2f17fa],1
  404fc6:	sbb    edx,DWORD PTR [esi+0x46]
  404fc9:	pop    ebx
  404fca:	lock or dh,BYTE PTR [esi-0x2b]
  404fce:	push   ecx
  404fcf:	add    ah,BYTE PTR [edx]
  404fd1:	pop    ds
  404fd2:	sbb    ebp,DWORD PTR [eax]
  404fd4:	test   DWORD PTR [edx-0x13],ecx
  404fd7:	or     dl,BYTE PTR [edi+0x2833fe2d]
  404fdd:	xchg   ebp,eax
  404fde:	xchg   esi,eax
  404fdf:	jge    0x404fe4
  404fe1:	jmp    0x3c387eeb
  404fe6:	out    dx,eax
  404fe7:	sbb    BYTE PTR [eax+ebp*2-0x23358552],cl
  404fee:	xchg   DWORD PTR [ebx+0x62],edi
  404ff1:	adc    eax,0x77da574a
  404ff6:	fisubr DWORD PTR [eax+ebx*2]
  404ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ffa:	dec    esp
  404ffb:	arpl   WORD PTR [edx+0x9],bx
  404ffe:	jne    0x405061
  405000:	push   esp
  405001:	repz dec edi
  405003:	dec    eax
  405004:	aaa    
  405005:	repz push eax
  405007:	inc    ebx
  405008:	xchg   DWORD PTR [edx-0xe98f605],esp
  40500e:	push   esp
  40500f:	or     dh,bh
  405011:	mov    ebx,0x596f2c33
  405016:	pop    esi
  405017:	push   esp
  405018:	shl    DWORD PTR [eax],1
  40501a:	lea    ebx,[ebx]
  40501c:	jg     0x404fec
  40501e:	or     esp,DWORD PTR [edx]
  405020:	fstp   TBYTE PTR [ebx+ebx*2+0x6abea751]
  405027:	or     al,bh
  405029:	(bad)
  40502d:	mov    edi,0x4c4f664f
  405032:	(bad)  
  405033:	bound  edx,QWORD PTR [edi+0x51]
  405036:	fwait
  405037:	dec    ebp
  405038:	or     eax,DWORD PTR [bp+di+0x3b]
  40503c:	mov    ds:0x6a0f6abb,al
  405041:	ror    ebp,0x15
  405044:	icebp  
  405045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405047:	sbb    esi,DWORD PTR [esi-0xed3d900]
  40504d:	out    0x6a,eax
  40504f:	add    DWORD PTR [eax-0x4ea9c3a4],ebp
  405055:	push   eax
  405056:	jns    0x40507f
  405058:	sub    bl,BYTE PTR fs:[edx]
  40505b:	adc    DWORD PTR [edi+0x21400e91],ebx
  405061:	add    cl,al
  405063:	or     dh,BYTE PTR [ecx]
  405065:	pop    ebp
  405066:	inc    esi
  405067:	inc    esp
  405068:	or     BYTE PTR [eax-0x7579bcb0],al
  40506e:	es jle 0x405048
  405071:	fist   DWORD PTR [ebx+0x39]
  405074:	and    esp,0xffffff97
  405077:	sub    al,0xdf
  405079:	cmp    DWORD PTR [esp+edi*2],eax
  40507c:	push   es
  40507d:	xchg   BYTE PTR [edx+0x42],bl
  405080:	add    edx,edx
  405082:	xor    BYTE PTR [ecx+0x78],0xc1
  405086:	into   
  405087:	pop    es
  405088:	(bad)  
  405089:	xchg   edi,eax
  40508a:	pop    ecx
  40508b:	pop    ebx
  40508c:	mov    edi,0x5e670e97
  405091:	xchg   ebx,eax
  405092:	jne    0x4050ad
  405094:	(bad)  
  405095:	pop    ebx
  405096:	mov    ds:0x3b68fb48,al
  40509b:	sub    eax,0x5c93b03
  4050a0:	outs   dx,DWORD PTR ds:[esi]
  4050a1:	or     esi,DWORD PTR ds:0x8ecbf530
  4050a7:	xor    ebx,DWORD PTR ds:[edi]
  4050aa:	or     bl,BYTE PTR [esi+0x20]
  4050ad:	or     ah,BYTE PTR [esi-0x3425599]
  4050b3:	data16 sub al,0xfd
  4050b6:	xor    ebx,DWORD PTR [edx-0x78]
  4050b9:	je     0x405103
  4050bb:	fs adc al,0xf3
  4050be:	enter  0xbd26,0x82
  4050c2:	aam    0x2b
  4050c4:	jnp    0x405133
  4050c6:	test   al,0x40
  4050c8:	dec    ecx
  4050c9:	lods   eax,DWORD PTR cs:[esi]
  4050cb:	popa   
  4050cc:	sub    ebp,DWORD PTR [eax]
  4050ce:	pop    edx
  4050cf:	ja     0x405148
  4050d1:	mov    eax,0x23a22266
  4050d6:	dec    eax
  4050d7:	or     eax,DWORD PTR ds:[ecx+0x856613e]
  4050de:	mov    edx,0xa638d727
  4050e3:	loop   0x4050ec
  4050e5:	fbstp  TBYTE PTR ds:0x936f44c4
  4050eb:	xchg   esp,eax
  4050ec:	and    DWORD PTR [ebx-0x5c89ff7b],ebp
  4050f2:	and    DWORD PTR [edi-0xd],ecx
  4050f5:	mov    dh,0xff
  4050f7:	stos   BYTE PTR es:[edi],al
  4050f8:	hlt    
  4050f9:	xor    al,0xe2
  4050fb:	retf   0xfa18
  4050fe:	lods   al,BYTE PTR ds:[esi]
  4050ff:	in     al,dx
  405100:	cmp    al,0xae
  405102:	les    esp,FWORD PTR [ebp-0x1a950ca9]
  405108:	data16 sub BYTE PTR [esi-0x9fdeca8],0x26
  405110:	jb     0x405150
  405112:	mov    ch,0x1d
  405114:	int    0xd1
  405116:	cmc    
  405117:	xor    edi,edi
  405119:	ds popf 
  40511b:	or     dl,BYTE PTR [edi+0x1]
  40511e:	sub    DWORD PTR ds:0x388ccc46,ebp
  405124:	push   ebx
  405125:	inc    esp
  405126:	fwait
  405127:	xor    esp,DWORD PTR [esi+edi*8]
  40512a:	movups XMMWORD PTR [esi+0x3d],xmm0
  40512e:	mov    dh,BYTE PTR [esi]
  405130:	je     0x4050d0
  405132:	mov    ebp,0xbc325404
  405137:	and    al,BYTE PTR [ebp-0x21]
  40513a:	fwait
  40513b:	sub    al,0x5e
  40513d:	inc    esi
  40513e:	mov    ebx,0x3ada30b7
  405143:	add    ebx,DWORD PTR [ebx+0x78743b35]
  405149:	repnz add DWORD PTR [eax],0xfffffff7
  40514d:	add    eax,0xbfc5c43a
  405152:	mov    eax,DWORD PTR [esi+edx*1+0xb]
  405156:	sbb    ebx,DWORD PTR [ebx-0x37c1e4ef]
  40515c:	dec    esp
  40515d:	popa   
  40515e:	arpl   di,di
  405160:	mov    edx,0x49a598f2
  405165:	dec    edx
  405166:	xchg   esp,eax
  405167:	push   ebx
  405168:	adc    al,0xa6
  40516a:	jns    0x405185
  40516c:	or     al,0x1a
  40516e:	out    0xff,al
  405170:	arpl   WORD PTR [ecx+0x26],di
  405173:	sub    edx,DWORD PTR [edi+0x12]
  405176:	call   0x2269:0xa7ba5fda
  40517d:	dec    esi
  40517e:	jp     0x4051f0
  405180:	pop    ebx
  405181:	and    ch,BYTE PTR [edx+eax*1+0x26921c47]
  405188:	sub    BYTE PTR [esi+0x7878371e],bl
  40518e:	fisttp WORD PTR [ebx+0x1e]
  405191:	mov    ebp,0xa6766c1e
  405196:	push   cs
  405197:	(bad)  
  405198:	push   ebx
  405199:	push   ebp
  40519a:	jnp    0x405210
  40519c:	jle    0x4051e6
  40519e:	pop    ebx
  40519f:	jl     0x405211
  4051a1:	and    BYTE PTR [edx-0x50],bl
  4051a4:	cs leave 
  4051a6:	or     ch,bh
  4051a8:	push   ebx
  4051a9:	xlat   BYTE PTR ds:[ebx]
  4051aa:	inc    esi
  4051ab:	dec    esp
  4051ac:	mov    al,0xfc
  4051ae:	xor    ah,BYTE PTR [ebx]
  4051b0:	or     BYTE PTR [edi-0x7a],bl
  4051b3:	sbb    bh,BYTE PTR [edx+0x2e]
  4051b6:	cld    
  4051b7:	outs   dx,DWORD PTR ds:[esi]
  4051b8:	cmovg  ecx,DWORD PTR [esi]
  4051bb:	sub    bh,dl
  4051bd:	dec    esi
  4051be:	jb     0x4051b3
  4051c0:	clc    
  4051c1:	xor    cl,BYTE PTR [edi-0x51f7d3f4]
  4051c7:	add    edx,DWORD PTR [edi-0x6a]
  4051ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051cb:	cdq    
  4051cc:	sbb    BYTE PTR [eax],ch
  4051ce:	fisub  WORD PTR [ebx+0xd]
  4051d1:	push   eax
  4051d2:	pop    ss
  4051d3:	mov    al,ds:0xf79eb444
  4051d8:	cmp    DWORD PTR [eax],edi
  4051da:	push   ss
  4051db:	push   cs
  4051dc:	sub    eax,0x4b05981b
  4051e1:	call   0xb3a8:0x8adf6ccc
  4051e8:	push   ebp
  4051e9:	jb     0x4051c1
  4051eb:	mov    dh,0xf6
  4051ed:	or     ecx,DWORD PTR [ecx-0x25310ebf]
  4051f3:	sub    bl,BYTE PTR [edi+0x2c]
  4051f6:	(bad)  
  4051f7:	xor    ecx,DWORD PTR [ebp-0x202d1e62]
  4051fd:	into   
  4051fe:	test   al,0x89
  405200:	pop    ecx
  405201:	fist   WORD PTR [edx+0x261a2864]
  405207:	out    dx,eax
  405208:	js     0x40527c
  40520a:	lfs    esi,FWORD PTR [esi+eax*8-0x2]
  40520f:	call   DWORD PTR [ebp-0x55e58fa9]
  405215:	sub    al,0xb2
  405217:	jle    0x40522e
  405219:	ret    0x2097
  40521c:	adc    ecx,DWORD PTR [esp+eax*8-0xce5b6fa]
  405223:	or     esi,DWORD PTR [esi+0x51d3b328]
  405229:	(bad)  
  40522a:	lock dec esp
  40522c:	dec    esi
  40522d:	and    BYTE PTR [ebx],dh
  40522f:	arpl   WORD PTR gs:[eax+0x601e54ba],dx
  405236:	sub    ebx,DWORD PTR [ebp+0x53]
  405239:	push   edx
  40523a:	ficom  DWORD PTR [esi+eiz*8-0x56ca877d]
  405241:	cli    
  405242:	jo     0x405290
  405244:	pop    esi
  405245:	gs mov dl,0x7
  405248:	loopne 0x405234
  40524a:	mov    esp,0xde5e124a
  40524f:	scas   al,BYTE PTR es:[edi]
  405250:	add    esp,ecx
  405252:	push   ss
  405253:	sub    al,0xca
  405255:	inc    edx
  405256:	or     al,0xb6
  405258:	mov    bl,0xfc
  40525a:	dec    edx
  40525b:	fisub  DWORD PTR ds:[esi+0x5b]
  40525f:	ss push ecx
  405261:	(bad)  
  405263:	outs   dx,BYTE PTR ds:[esi]
  405264:	dec    esp
  405265:	add    ecx,DWORD PTR [eax]
  405267:	ficom  WORD PTR [edi]
  405269:	loop   0x4051fa
  40526b:	inc    edx
  40526c:	pop    edi
  40526d:	dec    esi
  40526e:	in     al,dx
  40526f:	inc    ecx
  405270:	clc    
  405271:	pop    esi
  405272:	mov    WORD PTR [esi-0x6a0d578e],ds
  405278:	loopne 0x405296
  40527a:	mov    esp,0x4cee12d8
  40527f:	lods   al,BYTE PTR ds:[esi]
  405280:	sub    DWORD PTR [edi+0x221e1e9a],0x2b
  405287:	pop    ds
  405288:	push   ebx
  405289:	xchg   esp,eax
  40528a:	ficom  DWORD PTR [eax+0x24]
  40528d:	sub    DWORD PTR [esi*1-0x261f072b],0x32
  405295:	outs   dx,BYTE PTR ds:[esi]
  405296:	mov    bl,0x71
  405298:	cmp    DWORD PTR [edi+ecx*1-0xd38bc4],ebx
  40529f:	xor    eax,0x636cfc8b
  4052a4:	push   eax
  4052a5:	stos   BYTE PTR es:[edi],al
  4052a6:	inc    ebx
  4052a7:	inc    ebx
  4052a8:	loope  0x405281
  4052aa:	sbb    al,0x40
  4052ac:	cmp    bl,BYTE PTR [ebx-0x65b0fa12]
  4052b2:	sbb    BYTE PTR [edx],0xdf
  4052b5:	hlt    
  4052b6:	and    esi,DWORD PTR [esi-0x7f]
  4052b9:	xlat   BYTE PTR ds:[ebx]
  4052ba:	jle    0x4052d6
  4052bc:	xchg   BYTE PTR [esi],ch
  4052be:	push   es
  4052bf:	outs   dx,DWORD PTR ds:[esi]
  4052c0:	fisttp QWORD PTR [ebx-0x50]
  4052c3:	mov    WORD PTR [ebp-0x6a],fs
  4052c6:	stos   DWORD PTR es:[edi],eax
  4052c7:	lds    eax,FWORD PTR [ebx+0x57]
  4052ca:	dec    esp
  4052cb:	add    esp,ebp
  4052cd:	cs sbb al,0x6f
  4052d0:	jmp    0x326a7124
  4052d5:	dec    esi
  4052d6:	loop   0x40533b
  4052d8:	clc    
  4052d9:	jmp    0xd1a1:0xdb79168c
  4052e0:	sbb    eax,DWORD PTR [edi-0x44]
  4052e3:	add    DWORD PTR [esi+ecx*2+0x78f89506],ebx
  4052ea:	mov    WORD PTR [eax+0x21d32a74],ds
  4052f0:	or     ecx,edi
  4052f2:	cli    
  4052f3:	outs   dx,BYTE PTR ds:[esi]
  4052f4:	pop    edi
  4052f5:	pop    eax
  4052f6:	repnz addr16 loopne 0x4052e8
  4052fa:	mov    esp,0xbe181228
  4052ff:	scas   al,BYTE PTR es:[edi]
  405300:	test   DWORD PTR [edi-0x29],eax
  405303:	out    dx,al
  405304:	pop    edi
  405305:	aam    0xa8
  405307:	jmp    0xa5166f61
  40530c:	(bad)  
  40530d:	call   0x81c4:0xac35a398
  405314:	sbb    al,0x18
  405316:	xchg   esp,eax
  405317:	add    eax,0xe0d2b193
  40531c:	pusha  
  40531d:	lock cmp BYTE PTR [esi+0x78],dl
  405321:	fwait
  405322:	dec    edx
  405323:	or     eax,0xa781cb57
  405328:	jns    0x405379
  40532a:	xchg   edi,eax
  40532b:	add    DWORD PTR [eax+ecx*1+0x3a],esi
  40532f:	xor    edi,ebx
  405331:	mov    ds:0x54f28835,eax
  405336:	xchg   ebx,eax
  405337:	add    edi,DWORD PTR [ebp+0x1c]
  40533a:	loop   0x405354
  40533c:	sbb    al,dh
  40533e:	mov    ds:0x17f07867,eax
  405343:	adc    BYTE PTR [esi+ecx*1-0x64],al
  405347:	rol    DWORD PTR [eax-0x46],cl
  40534a:	jp     0x40534d
  40534c:	or     BYTE PTR [esi+0x66],0x5c
  405350:	jge    0x4053c2
  405352:	(bad)  
  405353:	xchg   edx,eax
  405354:	sahf   
  405355:	add    edi,DWORD PTR [esi+esi*4]
  405358:	or     esp,edi
  40535a:	test   BYTE PTR [esi+eax*1+0x4e],0x33
  40535f:	pop    ss
  405360:	arpl   sp,di
  405362:	mov    edx,0xe3f41a02
  405367:	iret   
  405368:	jmp    0xaace:0x32a40a0a
  40536f:	push   ecx
  405370:	outs   dx,DWORD PTR ds:[esi]
  405371:	outs   dx,DWORD PTR ds:[esi]
  405372:	xchg   edi,eax
  405373:	cld    
  405374:	and    edi,DWORD PTR [eax-0x556d17d]
  40537a:	push   edx
  40537b:	inc    eax
  40537c:	call   0xef45681c
  405381:	call   0x4ba8:0x70df800a
  405388:	push   ebp
  405389:	adc    dh,0x42
  40538c:	(bad)  
  40538d:	cmp    cl,BYTE PTR [ebx-0x15c9f7f9]
  405393:	mov    edx,0x37e0327
  405398:	fist   WORD PTR [esi+0x28d69904]
  40539e:	(bad)  
  40539f:	arpl   WORD PTR ds:0xc7d41796,bp
  4053a5:	pop    ebx
  4053a6:	xchg   esi,eax
  4053a7:	add    eax,0xf0969a6d
  4053ac:	push   ss
  4053ad:	jns    0x40540d
  4053af:	out    dx,eax
  4053b0:	js     0x4053b4
  4053b2:	pop    es
  4053b3:	and    al,0x6f
  4053b5:	xor    BYTE PTR [ebx],ch
  4053b7:	cs cmp ecx,esi
  4053ba:	add    dh,BYTE PTR [eax+0x74]
  4053bd:	test   dh,bh
  4053bf:	push   ebp
  4053c0:	adc    DWORD PTR [edi-0x34],edx
  4053c3:	sbb    dl,BYTE PTR [edx]
  4053c5:	mov    BYTE PTR cs:[edi+0x57],ch
  4053c9:	dec    edi
  4053ca:	mov    WORD PTR [eax],ds
  4053cc:	lods   al,BYTE PTR ds:[esi]
  4053cd:	jge    0x405367
  4053cf:	shl    DWORD PTR ds:0xe8815404,0x18
  4053d6:	adc    al,0x3
  4053d8:	in     eax,dx
  4053d9:	xchg   esi,eax
  4053da:	adc    BYTE PTR [ecx+0x63d22828],bl
  4053e0:	sub    eax,0x44341794
  4053e5:	push   ss
  4053e6:	sahf   
  4053e7:	or     eax,0x4c26d039
  4053ec:	dec    esp
  4053ed:	mov    ds:0xc63cb06,eax
  4053f2:	cmp    BYTE PTR [eax-0x7401fc18],cl
  4053f8:	mov    ecx,0x5fb0bf12
  4053fd:	mov    ds:0x5863b133,al
  405402:	mov    edx,0x83921a70
  405407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405408:	mov    ecx,0x3299eed7
  40540d:	sub    dh,ch
  40540f:	arpl   WORD PTR [ebx],si
  405411:	lock pop ss
  405413:	push   ss
  405414:	inc    esp
  405415:	add    BYTE PTR [eax+0x78da03db],bl
  40541b:	inc    eax
  40541c:	test   BYTE PTR [ebx-0x6520fa86],bl
  405422:	or     al,0x8a
  405424:	fistp  QWORD PTR [edx-0x58]
  405427:	inc    ecx
  405428:	push   esp
  405429:	mov    edx,0xf61ae0ba
  40542e:	loop   0x405466
  405430:	and    eax,0x5f4abf12
  405435:	cmp    BYTE PTR [ebx],dh
  405437:	xor    DWORD PTR [ebx-0x26],esp
  40543a:	mov    esp,0x5a0e27fa
  40543f:	outs   dx,DWORD PTR ds:[esi]
  405440:	mov    eax,ds:0xf67dba61
  405445:	enter  0xa496,0x77
  405449:	loopne 0x4053e2
  40544b:	dec    ebp
  40544c:	inc    eax
  40544d:	or     BYTE PTR [ebx+0x66f018c3],bh
  405453:	sbb    BYTE PTR [edi+0x6],0x3b
  405457:	ss push edi
  405459:	cld    
  40545a:	cld    
  40545b:	sub    dl,dh
  40545d:	mov    dh,bh
  40545f:	stos   DWORD PTR es:[edi],eax
  405460:	add    eax,0x181afc57
  405465:	xchg   BYTE PTR cs:[edi+0x53],ch
  405469:	dec    edi
  40546a:	nop
  40546b:	cmp    esp,DWORD PTR [edx+0x78056c43]
  405471:	pusha  
  405472:	fisub  DWORD PTR [edx+0x343a83c0]
  405478:	mov    bh,0xfc
  40547a:	cmove  esi,DWORD PTR [eax]
  40547d:	sub    BYTE PTR [ebx+0x2c9a7887],0x3e
  405484:	add    al,0x8b
  405486:	rcl    BYTE PTR [ecx+ecx*1],cl
  405489:	aas    
  40548a:	adc    ch,BYTE PTR [edx]
  40548c:	pop    edi
  40548d:	nop
  40548e:	mov    BYTE PTR [ebx-0x18],0x6a
  405492:	pop    edx
  405493:	sbb    bl,BYTE PTR ds:0x60e71c5c
  405499:	iret   
  40549a:	cli    
  40549b:	or     eax,0x43f60b5f
  4054a0:	push   eax
  4054a1:	mov    cl,0x17
  4054a3:	sbb    eax,DWORD PTR [ebp-0x64]
  4054a6:	cwde   
  4054a7:	ds jne 0x4054cf
  4054aa:	nop    DWORD PTR ds:0x642eac38
  4054b1:	cli    
  4054b2:	mov    al,BYTE PTR [eax+0x46]
  4054b5:	xchg   ebx,eax
  4054b6:	cld    
  4054b7:	push   ss
  4054b8:	jb     0x405487
  4054ba:	call   0xde419be9
  4054bf:	sub    bh,BYTE PTR [eax-0x52]
  4054c2:	aad    0x1f
  4054c4:	outs   dx,DWORD PTR ds:[esi]
  4054c5:	add    cl,BYTE PTR [esi+0x40fc7d40]
  4054cb:	dec    esp
  4054cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054cd:	push   cs
  4054ce:	cli    
  4054cf:	pop    ecx
  4054d0:	addr16 push ss
  4054d2:	xchg   edi,eax
  4054d3:	and    bh,al
  4054d5:	dec    edx
  4054d6:	cwde   
  4054d7:	ja     0x4054f1
  4054d9:	adc    al,0xae
  4054db:	dec    ebp
  4054dc:	data16 or bh,BYTE PTR [ebx]
  4054df:	cwde   
  4054e0:	inc    edx
  4054e1:	imul   DWORD PTR [eax-0x5427a08d]
  4054e7:	xchg   ebp,eax
  4054e8:	jg     0x4054c8
  4054ea:	jmp    0xda752336
  4054ef:	daa    
  4054f0:	rol    al,0xc0
  4054f3:	rol    al,0xc0
  4054f6:	rol    al,0xc0
  4054f9:	rol    al,0xc0
  4054fc:	rol    al,0xc0
  4054ff:	rol    al,0xc0
  405502:	rol    al,0xc0
  405505:	rol    al,0xc0
  405508:	rol    al,0xc0
  40550b:	rol    al,0xc0
  40550e:	rol    al,0xc0
  405511:	rol    al,0xc0
  405514:	rol    al,0xc0
  405517:	rol    al,0xc0
  40551a:	rol    al,0xc0
  40551d:	rol    al,0xc0
  405520:	inc    ebx
  405521:	push   ecx
  405522:	cdq    
  405523:	std    
  405524:	pop    es
  405525:	iret   
  405526:	imul   esi,DWORD PTR [esi],0x30275741
  40552c:	scas   al,BYTE PTR es:[edi]
  40552d:	adc    eax,0x46502758
  405532:	mov    ds:0x64bbfb5d,eax
  405537:	ins    DWORD PTR es:[edi],dx
  405538:	jno    0x4054d3
  40553a:	adc    BYTE PTR [edi],bl
  40553c:	stos   BYTE PTR es:[edi],al
  40553d:	push   es
  40553e:	call   0x71d5:0xa6c2c652
  405545:	mov    cl,dl
  405547:	call   0xfa58:0xb6d8362d
  40554e:	cdq    
  40554f:	xchg   ecx,eax
  405550:	ret    0xb61e
  405553:	xchg   ebp,edi
  405555:	ret    0x27df
  405558:	add    BYTE PTR [esi+0x31],dl
  40555b:	mov    ch,0x14
  40555d:	mov    WORD PTR [edi+0x74],es
  405560:	dec    esi
  405561:	into   
  405562:	sub    cl,BYTE PTR [eax-0x4ebbf7f4]
  405568:	mov    al,0xa0
  40556a:	fwait
  40556b:	push   cs
  40556c:	fld    TBYTE PTR es:[ebx-0x61801e76]
  405573:	shr    BYTE PTR [ebx+0x63813bf5],1
  405579:	add    ah,cl
  40557b:	or     al,0x25
  40557d:	lds    ebp,FWORD PTR [ebx-0x5aa6c351]
  405583:	or     BYTE PTR ds:0x77bd9e24,bl
  405589:	loop   0x405536
  40558b:	inc    ecx
  40558c:	cmp    eax,0xdf05fa5b
  405591:	js     0x405529
  405593:	mov    esi,0xde3a2ade
  405598:	call   0xc6de1dc3
  40559d:	xchg   BYTE PTR [esi+0x7],bh
  4055a0:	shl    BYTE PTR [eax-0x32e9c521],cl
  4055a6:	cmp    eax,0x9fdc517c
  4055ab:	jo     0x405580
  4055ad:	jbe    0x4055ea
  4055af:	mov    cl,0x61
  4055b1:	fistp  QWORD PTR [edi+0x4f]
  4055b4:	das    
  4055b5:	or     BYTE PTR [ebx-0x1b54010],cl
  4055bb:	pop    edi
  4055bc:	cdq    
  4055bd:	retf   0x52bb
  4055c0:	xlat   BYTE PTR ds:[ebx]
  4055c1:	jb     0x40559d
  4055c3:	or     ch,BYTE PTR [edx-0x2ec9951e]
  4055c9:	mov    ds:0x5122680f,al
  4055ce:	stos   BYTE PTR es:[edi],al
  4055cf:	es std 
  4055d1:	fs fs adc al,0x75
  4055d5:	pop    ds
  4055d6:	call   0x9b2e5e62
  4055db:	xchg   ebp,eax
  4055dc:	push   esp
  4055dd:	jns    0x40556a
  4055df:	push   esi
  4055e0:	inc    ebp
  4055e1:	sub    dl,dl
  4055e3:	call   0x275eb33e
  4055e8:	cmp    edi,DWORD PTR [ecx]
  4055ea:	xchg   DWORD PTR [esi-0x16],ebx
  4055ed:	jmp    0x40562c
  4055ef:	int3   
  4055f0:	push   ebp
  4055f1:	in     eax,dx
  4055f2:	lods   al,BYTE PTR ds:[esi]
  4055f3:	sbb    BYTE PTR [esp+eiz*4+0x73],bl
  4055f7:	pop    ss
  4055f8:	sbb    DWORD PTR ss:[esi-0x6a],ebx
  4055fc:	xchg   edx,eax
  4055fd:	add    DWORD PTR [esi],0x4a5b51e2
  405603:	mov    BYTE PTR [ebp+0x71a4a550],bh
  405609:	ficomp DWORD PTR [ebx-0x2a]
  40560c:	pop    gs
  40560e:	test   eax,0xd6de45cf
  405613:	cmp    BYTE PTR [eax+esi*4-0x3b],0x3a
  405618:	push   es
  405619:	mov    ds:0xdacf7eb5,eax
  40561e:	push   esp
  40561f:	fs mov bl,0xdb
  405622:	mov    ecx,0xda1a2feb
  405627:	xchg   esp,eax
  405628:	cmp    DWORD PTR [edi+ebx*1+0x7f],ebx
  40562c:	les    edi,FWORD PTR [edx+ebx*4+0xed489d5]
  405633:	dec    ebp
  405634:	ins    BYTE PTR es:[edi],dx
  405635:	pop    ss
  405636:	sub    ch,BYTE PTR ds:0xcb5ec1f8
  40563c:	into   
  40563d:	ins    BYTE PTR es:[edi],dx
  40563e:	adc    al,BYTE PTR [eax-0x1d]
  405641:	xor    BYTE PTR [ebx+0x28],bl
  405644:	sti    
  405645:	jnp    0x405621
  405647:	mov    bh,0x59
  405649:	(bad)  
  40564a:	and    ebx,DWORD PTR [esi+0x1f]
  40564d:	stos   BYTE PTR es:[edi],al
  40564e:	cmp    esp,DWORD PTR [ecx-0x16fb44bf]
  405654:	inc    ecx
  405655:	sbb    BYTE PTR [edx],0x92
  405658:	mov    dh,bl
  40565a:	aad    0x78
  40565c:	push   0x7bb0edf7
  405661:	jno    0x405656
  405663:	aas    
  405664:	js     0x405610
  405666:	retf   
  405667:	call   0xf8b6:0xcebd6e2e
  40566e:	fdiv   QWORD PTR [edx]
  405670:	mov    dh,0xec
  405672:	sbb    BYTE PTR [esi-0x9],0x8d
  405676:	mov    bh,BYTE PTR [edx-0x7a7d21dc]
  40567c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40567d:	mov    cs,WORD PTR [ecx]
  40567f:	ins    BYTE PTR es:[edi],dx
  405680:	(bad)  
  405681:	or     ebp,ebp
  405683:	pop    esi
  405684:	push   ebp
  405685:	dec    ecx
  405686:	loopne 0x405644
  405688:	xlat   BYTE PTR ds:[ebx]
  405689:	daa    
  40568a:	sub    ecx,0xffffffe1
  40568d:	pop    ds
  40568e:	dec    eax
  40568f:	cmp    DWORD PTR [bx-0x7e],0x765b66a9
  405697:	sbb    eax,0x3a21aff9
  40569c:	add    eax,0x90403c9b
  4056a2:	lds    edi,FWORD PTR [eax+0x57]
  4056a5:	jmp    0x405665
  4056a7:	ins    BYTE PTR es:[edi],dx
  4056a8:	cld    
  4056a9:	out    dx,eax
  4056aa:	lea    ecx,[ecx-0x1a]
  4056ad:	mov    eax,DWORD PTR [edx]
  4056af:	das    
  4056b0:	sub    esp,DWORD PTR [esi+0x4c02042a]
  4056b6:	inc    edi
  4056b7:	mov    ds:0xb5c27550,eax
  4056bc:	popf   
  4056bd:	or     dl,BYTE PTR ds:0x43d4a0f8
  4056c3:	xor    al,0xd3
  4056c5:	adc    al,BYTE PTR [edi-0x5f]
  4056c8:	push   cs
  4056c9:	(bad)  
  4056ca:	sbb    al,0x5a
  4056cc:	repnz sub dh,BYTE PTR [eax+0x5b86f276]
  4056d3:	sbb    BYTE PTR [edi],ah
  4056d5:	(bad)  
  4056d7:	pop    es
  4056d8:	jo     0x405751
  4056da:	or     al,0x4
  4056dc:	mov    cl,0xf7
  4056de:	icebp  
  4056df:	rcl    WORD PTR [ebx+ecx*1+0x18],1
  4056e4:	out    dx,eax
  4056e5:	pop    ebx
  4056e6:	dec    ecx
  4056e7:	jno    0x4056c4
  4056e9:	into   
  4056ea:	push   edi
  4056eb:	add    ch,dh
  4056ed:	mov    ds:0xeb6d16f9,al
  4056f2:	scas   al,BYTE PTR es:[edi]
  4056f3:	cmp    edx,ebp
  4056f5:	dec    esi
  4056f6:	lea    edx,[ecx]
  4056f8:	aaa    
  4056f9:	popa   
  4056fa:	test   eax,0x6d3e314a
  4056ff:	fs data16 in al,dx
  405702:	inc    eax
  405703:	xchg   edi,eax
  405704:	stos   DWORD PTR es:[edi],eax
  405705:	jge    0x4056cd
  405707:	data16 add BYTE PTR [eax-0x66ae5a99],bl
  40570e:	mov    fs,WORD PTR [ebp+0x4ce61d14]
  405714:	pop    esi
  405715:	cmp    cl,bh
  405717:	jns    0x40571a
  405719:	rol    DWORD PTR [edi-0x3dac8729],0x38
  405720:	pop    esp
  405721:	scas   eax,DWORD PTR es:[edi]
  405722:	mov    al,ds:0xd5694218
  405727:	dec    ecx
  405728:	xor    DWORD PTR [edi+0x68786f83],0xffffff81
  40572f:	(bad)  
  405730:	push   0xa473e9a2
  405735:	or     dl,cl
  405737:	dec    eax
  405738:	mov    ah,0xee
  40573a:	lahf   
  40573b:	outs   dx,DWORD PTR ds:[esi]
  40573c:	jge    0x405732
  40573e:	mov    edx,0x54a8daf0
  405743:	mov    bl,BYTE PTR [edi+0x28274077]
  405749:	cdq    
  40574a:	outs   dx,BYTE PTR ds:[esi]
  40574b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574c:	sub    BYTE PTR [eax+0x7a71bb15],0xec
  405753:	enter  0xf7e1,0x29
  405757:	add    DWORD PTR [edi-0x22],eax
  40575a:	mov    eax,ds:0x1f3e9aff
  40575f:	ret    0xaf80
  405762:	sahf   
  405763:	shl    BYTE PTR [edi+0x1f],1
  405766:	mov    esi,0x861d52e0
  40576b:	or     al,al
  40576d:	mov    eax,cr4
  405770:	arpl   WORD PTR [esi+0x7c],bx
  405773:	jecxz  0x4057cb
  405775:	sub    eax,0x5d785208
  40577a:	mov    dl,0x12
  40577c:	dec    ebp
  40577d:	or     dl,ah
  40577f:	jge    0x405752
  405781:	mov    WORD PTR [ebp-0x42dc1a22],fs
  405787:	les    ebx,FWORD PTR [esi+0x5a]
  40578a:	int    0xd9
  40578c:	push   esi
  40578d:	out    0x9a,eax
  40578f:	fcmovnb st,st(0)
  405791:	faddp  st(5),st
  405793:	bound  ebx,QWORD PTR [ebp+0x3d6d83b4]
  405799:	xchg   BYTE PTR [esi+0x10e586c7],bl
  40579f:	fdiv   QWORD PTR [edx]
  4057a1:	xchg   ebx,eax
  4057a2:	lods   eax,DWORD PTR ds:[esi]
  4057a3:	or     bl,dl
  4057a5:	dec    edi
  4057a6:	inc    ebx
  4057a7:	and    eax,0x97a28e0e
  4057ac:	push   esi
  4057ad:	mov    ds:0x513184eb,al
  4057b2:	or     al,0x95
  4057b4:	outs   dx,BYTE PTR ds:[esi]
  4057b5:	or     cl,BYTE PTR [edi-0x65]
  4057b8:	mov    DWORD PTR [edi+edi*4],0xbaf9a918
  4057bf:	cmc    
  4057c0:	mov    esp,0x9e48dd2
  4057c5:	popf   
  4057c6:	(bad)  
  4057c7:	daa    
  4057c8:	data16 sbb bh,BYTE PTR [ecx]
  4057cb:	jbe    0x405838
  4057cd:	outs   dx,BYTE PTR ds:[esi]
  4057ce:	out    0x3e,eax
  4057d0:	jno    0x40577f
  4057d2:	dec    BYTE PTR [ecx+0xd98d619]
  4057d8:	loope  0x4057b8
  4057da:	push   ss
  4057db:	dec    esi
  4057dc:	mov    eax,0x2ff9aeb2
  4057e1:	aad    0x9e
  4057e3:	shl    DWORD PTR [esi+0x382d8038],cl
  4057e9:	fdivr  DWORD PTR [edx+0x69c80a08]
  4057ef:	mov    edx,DWORD PTR [ebx]
  4057f1:	dec    edi
  4057f2:	or     ebp,esp
  4057f4:	push   esi
  4057f5:	jae    0x405854
  4057f7:	out    dx,eax
  4057f8:	inc    esi
  4057f9:	mov    bl,0x13
  4057fb:	fstp   QWORD PTR [eax]
  4057fd:	or     dl,BYTE PTR [ebx]
  4057ff:	dec    ebx
  405800:	daa    
  405801:	sub    dh,BYTE PTR [ebp+ebp*2+0x2c]
  405805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405806:	mov    edx,0xbba6cb2f
  40580b:	es dec edx
  40580d:	lods   al,BYTE PTR ds:[esi]
  40580e:	push   cs
  40580f:	daa    
  405810:	mov    bh,0x36
  405812:	inc    ebx
  405813:	jl     0x40585e
  405815:	inc    ecx
  405816:	pop    es
  405817:	lods   al,BYTE PTR ds:[esi]
  405818:	cmp    eax,0xe3088554
  40581d:	ins    BYTE PTR es:[edi],dx
  40581e:	repnz and al,0x87
  405821:	sar    bh,1
  405823:	or     BYTE PTR [ebx+0x5d],ah
  405826:	add    esp,DWORD PTR [ecx-0x16ff3c50]
  40582c:	push   esi
  40582d:	repnz and dh,BYTE PTR [esi]
  405830:	sbb    BYTE PTR [edi],al
  405832:	adc    BYTE PTR [ebp+ecx*8-0x675f5bf6],bl
  405839:	adc    bl,cl
  40583b:	and    BYTE PTR [ecx-0x779457a],cl
  405841:	shl    DWORD PTR [ecx],cl
  405843:	out    dx,al
  405844:	adc    al,0x62
  405846:	sti    
  405847:	daa    
  405848:	call   0x2f8ea40
  40584d:	mov    cl,0xac
  40584f:	jne    0x4058b4
  405851:	xlat   BYTE PTR ds:[ebx]
  405852:	hlt    
  405853:	fst    QWORD PTR [esi+0x40]
  405856:	pop    ds
  405857:	pop    ds
  405858:	into   
  405859:	sahf   
  40585a:	cmp    eax,0x498bc808
  40585f:	lock mov ah,BYTE PTR [edx-0x77a8ce83]
  405866:	and    DWORD PTR [eax],ecx
  405868:	mov    ds,WORD PTR [ecx-0x56]
  40586b:	xchg   BYTE PTR [esi+0x5c],dh
  40586e:	jle    0x405897
  405870:	scas   eax,DWORD PTR es:[edi]
  405871:	aaa    
  405872:	push   ebp
  405873:	pop    esp
  405874:	sub    eax,0x7181889e
  405879:	sbb    al,0xbd
  40587b:	xor    eax,0x2c2f46b8
  405880:	xor    ebx,esi
  405882:	fs retf 
  405884:	sbb    BYTE PTR [edx],al
  405886:	xchg   esp,eax
  405887:	xchg   BYTE PTR [edi],dl
  405889:	neg    BYTE PTR [esi-0x33478d2f]
  40588f:	jl     0x405864
  405891:	xchg   edi,eax
  405892:	repz or ch,bl
  405895:	fistp  DWORD PTR [edi-0x5d776ab]
  40589b:	mov    ss,WORD PTR [esi+0x62]
  40589e:	and    dh,BYTE PTR [ecx]
  4058a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a1:	jp     0x405865
  4058a3:	les    ecx,FWORD PTR [ebx]
  4058a5:	or     bl,bh
  4058a7:	xchg   ecx,eax
  4058a8:	jecxz  0x40585c
  4058aa:	out    dx,al
  4058ab:	inc    eax
  4058ac:	push   es
  4058ad:	idiv   DWORD PTR [edx-0x3ffb3736]
  4058b3:	sbb    eax,0x241d5d10
  4058b8:	cld    
  4058b9:	inc    ebx
  4058ba:	sbb    bl,BYTE PTR [eax-0x54c55e72]
  4058c0:	int    0xd
  4058c2:	sahf   
  4058c3:	add    ah,BYTE PTR [ecx-0x36dd1d12]
  4058c9:	ins    DWORD PTR es:[edi],dx
  4058ca:	fisttp DWORD PTR [eax]
  4058cc:	push   eax
  4058cd:	ficom  DWORD PTR [esi-0x5eeb01c7]
  4058d3:	pop    es
  4058d4:	js     0x4058de
  4058d6:	jnp    0x4058e3
  4058d8:	jno    0x4058b7
  4058da:	lahf   
  4058db:	sbb    ebx,esp
  4058dd:	popa   
  4058de:	and    BYTE PTR [edi],0xe0
  4058e1:	iret   
  4058e2:	fild   WORD PTR [edi+0x31]
  4058e5:	(bad)  
  4058e6:	push   eax
  4058e7:	mov    al,0x71
  4058e9:	sub    al,0x51
  4058eb:	(bad)  
  4058ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058ed:	mov    esi,0xdee7545c
  4058f2:	xor    bh,BYTE PTR [esp+esi*2-0x13]
  4058f6:	pop    ss
  4058f7:	adc    dh,ah
  4058f9:	cmp    al,0x9e
  4058fb:	icebp  
  4058fc:	popa   
  4058fd:	loop   0x4058a5
  4058ff:	push   edx
  405900:	scas   al,BYTE PTR es:[edi]
  405901:	mov    al,0xd9
  405903:	or     BYTE PTR [edi+0x583acb10],ah
  405909:	sbb    edx,DWORD PTR [edi]
  40590b:	addr16 push esi
  40590d:	mov    ebp,0xc6db29d8
  405912:	and    BYTE PTR [ebx],dl
  405914:	stos   BYTE PTR es:[edi],al
  405915:	or     ch,ah
  405917:	sbb    DWORD PTR [edx],edi
  405919:	sbb    BYTE PTR [ecx+esi*2+0x76],cl
  40591d:	nop
  40591e:	mov    edx,0xe620b1fc
  405923:	lds    ecx,FWORD PTR [esi+edi*8]
  405926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405927:	daa    
  405928:	lods   al,BYTE PTR ds:[esi]
  405929:	jbe    0x4058d8
  40592b:	adc    BYTE PTR [ecx-0x33],0x8b
  40592f:	xchg   esi,eax
  405930:	jne    0x4058fe
  405932:	mov    ss,WORD PTR [ecx+0x71]
  405935:	mov    bh,BYTE PTR [edx]
  405937:	ins    BYTE PTR es:[edi],dx
  405938:	adc    DWORD PTR [edi+0x13ff08e1],ecx
  40593e:	(bad)  
  405940:	jl     0x405935
  405942:	jnp    0x4059b6
  405944:	push   esi
  405945:	xchg   ebp,eax
  405946:	sub    esi,ebp
  405948:	in     eax,dx
  405949:	xor    DWORD PTR [esi],edi
  40594b:	call   0x8a3763bd
  405950:	pop    ebx
  405951:	sub    ebp,DWORD PTR [esi]
  405953:	sar    BYTE PTR [ebp-0xde4454f],0x8d
  40595a:	pop    es
  40595b:	imul   eax,DWORD PTR [ecx+0x21],0x640f27be
  405962:	jmp    0xd42bca45
  405967:	xor    esi,DWORD PTR [edx-0x43]
  40596a:	retf   
  40596b:	sub    DWORD PTR [edx+0x77],ebx
  40596e:	jl     0x405900
  405970:	add    BYTE PTR [ebx+0x66],bh
  405973:	je     0x405907
  405975:	mov    ss,WORD PTR [esi+edx*2+0x6]
  405979:	ret    0xfe07
  40597c:	sub    eax,0x83d8374d
  405981:	iret   
  405982:	xchg   ebx,eax
  405983:	fidivr WORD PTR ds:0xf907ce
  405989:	mov    cl,0x82
  40598b:	mov    ecx,0x73fdcfc7
  405990:	adc    esi,ebp
  405992:	(bad)  
  405993:	pop    eax
  405994:	push   esp
  405995:	or     edi,DWORD PTR [esi+0x24]
  405998:	mov    edi,0xff14f9af
  40599d:	pop    esp
  40599e:	xchg   ecx,eax
  40599f:	pusha  
  4059a0:	or     al,0x39
  4059a2:	pusha  
  4059a3:	adc    al,0xe8
  4059a5:	fstp   QWORD PTR [eax+0x45]
  4059a8:	dec    ecx
  4059a9:	xchg   ebx,eax
  4059aa:	xor    eax,0xcce6b086
  4059af:	or     eax,0x86a613eb
  4059b4:	adc    edx,DWORD PTR ds:0x57ec0438
  4059ba:	push   edi
  4059bb:	adc    BYTE PTR [esi],0xf0
  4059be:	mov    ebp,0xe471abf6
  4059c4:	inc    ebx
  4059c5:	xor    cl,BYTE PTR [eax]
  4059c7:	jle    0x4059c8
  4059c9:	xor    eax,0xc3754f10
  4059ce:	inc    ecx
  4059cf:	xlat   BYTE PTR ds:[ebx]
  4059d0:	stc    
  4059d1:	aad    0xdf
  4059d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d4:	mov    ah,0xe6
  4059d6:	adc    BYTE PTR [ebp+eiz*4-0xba806b0],0x29
  4059de:	inc    edi
  4059df:	(bad)  
  4059e0:	ficom  WORD PTR [esi+0x74]
  4059e3:	sub    ecx,edx
  4059e5:	call   0x7a6278ef
  4059ea:	push   esi
  4059eb:	pop    es
  4059ec:	outs   dx,BYTE PTR ds:[esi]
  4059ed:	js     0x405a23
  4059ef:	mov    cl,0xea
  4059f1:	push   ds
  4059f2:	mov    ebp,0x32bd2353
  4059f7:	in     eax,0x90
  4059f9:	and    edi,DWORD PTR [esp+edx*1+0x6e]
  4059fd:	aaa    
  4059fe:	sub    DWORD PTR [ecx+0x2bb892df],ebp
  405a04:	cmp    al,0x66
  405a06:	mov    WORD PTR [edi-0x155e5fd5],gs
  405a0c:	pop    ss
  405a0d:	xor    cl,BYTE PTR [edi-0x30]
  405a10:	(bad)  
  405a11:	fcomp  QWORD PTR ds:0xd24575c4
  405a17:	adc    edi,ecx
  405a19:	or     bh,0xad
  405a1c:	mov    ah,0xfe
  405a1e:	xor    dh,0x94
  405a21:	and    al,0xa6
  405a23:	icebp  
  405a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a25:	test   BYTE PTR [edx+0xdfd00c5],dh
  405a2b:	mov    ds:0x45c9828e,eax
  405a30:	inc    eax
  405a31:	cmp    al,0xcd
  405a33:	xor    BYTE PTR [edi+ebx*1+0x34],bh
  405a37:	sbb    BYTE PTR [ecx-0x26],bh
  405a3a:	mov    ebp,0x32cdc304
  405a3f:	jne    0x405a78
  405a41:	std    
  405a42:	jl     0x405ab1
  405a44:	outs   dx,BYTE PTR ds:[esi]
  405a45:	xchg   edi,eax
  405a46:	jns    0x4059f1
  405a48:	das    
  405a49:	out    dx,al
  405a4a:	xchg   BYTE PTR [ebx],ch
  405a4c:	jle    0x405a8b
  405a4e:	sub    al,0xaf
  405a50:	rcl    ah,1
  405a52:	fwait
  405a53:	jmp    0x6bff:0xbd953259
  405a5a:	nop
  405a5b:	pcmpeqw mm0,QWORD PTR [ebx]
  405a5e:	sahf   
  405a5f:	xor    eax,0x8885e8f9
  405a64:	mov    ah,0x91
  405a66:	cmp    al,0x93
  405a69:	push   eax
  405a6a:	mov    ds:0x9c29bdc5,eax
  405a6f:	imul   edx,DWORD PTR [esi+0x56],0xe9e477f7
  405a76:	push   esi
  405a77:	int    0x4
  405a79:	cmp    al,0x1
  405a7b:	xor    BYTE PTR [ebx+eax*1+0x34],al
  405a7f:	cmp    al,0x6c
  405a81:	pop    ebp
  405a82:	mov    ebp,0x32260e96
  405a87:	push   ebx
  405a88:	inc    ebp
  405a89:	les    edi,FWORD PTR [esi+eiz*1-0x77]
  405a8d:	pop    eax
  405a8e:	jge    0x405a9a
  405a90:	lods   eax,DWORD PTR ds:[esi]
  405a91:	mov    al,0x8f
  405a93:	mov    edx,0xc97e50e2
  405a98:	sub    ch,BYTE PTR [edi-0x5152ebc2]
  405a9e:	call   0xa5e8e206
  405aa3:	mov    DWORD PTR [edx],edx
  405aa5:	mov    ebp,0xa310e36c
  405aaa:	out    dx,eax
  405aab:	mov    ebx,0xecbc429
  405ab0:	ins    DWORD PTR es:[edi],dx
  405ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab2:	inc    ebx
  405ab3:	jmp    0x405ac6
  405ab5:	xor    al,0xe4
  405ab7:	or     BYTE PTR [eax-0x51],ah
  405aba:	lea    ecx,[edx+edx*4+0x22561c9d]
  405ac1:	ret    0xb16b
  405ac4:	xchg   DWORD PTR [edx+edx*8+0x6],ebx
  405ac8:	sub    DWORD PTR [edi],ebx
  405aca:	jae    0x405a98
  405acc:	jp     0x405b18
  405ace:	retf   
  405acf:	pop    es
  405ad0:	ins    DWORD PTR es:[edi],dx
  405ad1:	mov    esi,0x1511f47d
  405ad6:	ret    
  405ad7:	xchg   esi,eax
  405ad8:	pusha  
  405ad9:	push   ss
  405ada:	sub    BYTE PTR [ebx-0x6e],dl
  405add:	out    0x6e,eax
  405adf:	push   esi
  405ae0:	sbb    eax,edx
  405ae2:	and    BYTE PTR [ebp+0x40fc449d],al
  405ae8:	lods   al,BYTE PTR ds:[esi]
  405ae9:	sbb    DWORD PTR [edi+0x7a],eax
  405aec:	outs   dx,DWORD PTR ds:[esi]
  405aed:	sbb    esi,ecx
  405aef:	mov    bl,0x3b
  405af1:	sbb    al,BYTE PTR [eax-0x70]
  405af4:	daa    
  405af5:	inc    esi
  405af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af7:	repz rol DWORD PTR [esi-0x3a2c1f27],0xa5
  405aff:	loopne 0x405acb
  405b01:	push   cs
  405b02:	(bad)  
  405b03:	arpl   WORD PTR [ebx+0x3e0d7ee5],dx
  405b09:	scas   eax,DWORD PTR es:[edi]
  405b0a:	xor    al,0x14
  405b0c:	mov    bl,0xe7
  405b0e:	inc    ecx
  405b0f:	ins    BYTE PTR es:[edi],dx
  405b10:	addr16 pop eax
  405b12:	xchg   ecx,eax
  405b13:	fnstenv [ecx-0x59c90870]
  405b19:	mov    eax,0x7b03cdad
  405b1e:	pop    es
  405b1f:	jecxz  0x405b06
  405b21:	push   esp
  405b22:	out    dx,eax
  405b23:	dec    ebp
  405b24:	dec    edx
  405b25:	lds    edx,FWORD PTR [ebx-0x22]
  405b28:	ss into 
  405b2a:	call   0xb558:0x440c470a
  405b31:	pop    edi
  405b32:	ds jns 0x405b3b
  405b35:	push   ss
  405b36:	dec    edx
  405b37:	pop    edi
  405b38:	dec    ebp
  405b39:	cdq    
  405b3a:	fisubr DWORD PTR ds:0x6c001bc9
  405b40:	fstp   DWORD PTR [edx]
  405b42:	jge    0x405aee
  405b44:	or     bl,BYTE PTR [ebx-0x5a]
  405b47:	cmp    ebp,DWORD PTR [edi*2+0x4ad6f6d9]
  405b4e:	stos   DWORD PTR es:[edi],eax
  405b4f:	out    0x74,eax
  405b51:	push   ecx
  405b52:	pop    edx
  405b53:	sub    BYTE PTR [ecx+0x7b],0x28
  405b57:	cmp    ebx,esp
  405b59:	inc    DWORD PTR [ebx]
  405b5b:	dec    edi
  405b5c:	jmp    0x6b2f:0x3936827a
  405b63:	int3   
  405b64:	push   edx
  405b65:	imul   ecx,DWORD PTR [edi-0x35],0xbeefa9ae
  405b6c:	into   
  405b6d:	gs retf 
  405b6f:	std    
  405b70:	ins    DWORD PTR es:[edi],dx
  405b71:	stos   DWORD PTR es:[edi],eax
  405b72:	fsubr  QWORD PTR [ecx]
  405b74:	sub    DWORD PTR [esi-0x11c9c866],edx
  405b7a:	jnp    0x405b73
  405b7c:	inc    edi
  405b7d:	adc    BYTE PTR [edi-0x2c],al
  405b80:	mov    ch,0xd0
  405b82:	and    DWORD PTR [ecx-0x7c],edi
  405b85:	push   ss
  405b86:	xlat   BYTE PTR ds:[ebx]
  405b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b88:	mov    esp,0x5a10d299
  405b8d:	sbb    ebp,DWORD PTR [esi-0x54e59dff]
  405b93:	retf   
  405b94:	daa    
  405b95:	out    0xa6,al
  405b97:	or     bh,cl
  405b99:	add    eax,0xfd9d0ae9
  405b9f:	test   ecx,edi
  405ba1:	call   0x1e7e:0x1d78c48f
  405ba8:	loop   0x405b59
  405baa:	pop    edx
  405bab:	adc    al,0x1
  405bad:	pop    edi
  405bae:	sbb    eax,0xe0228360
  405bb3:	sbb    esp,edx
  405bb5:	jo     0x405b3e
  405bb7:	jecxz  0x405bef
  405bb9:	push   ss
  405bba:	out    dx,eax
  405bbb:	ins    BYTE PTR es:[edi],dx
  405bbc:	dec    edx
  405bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbe:	add    BYTE PTR [edx+0x36],bh
  405bc1:	cmp    DWORD PTR [ecx+edx*1-0x7682debe],ebp
  405bc8:	pusha  
  405bc9:	dec    ebx
  405bca:	pop    esi
  405bcb:	push   0xa657aa93
  405bd0:	mov    ch,0x46
  405bd2:	add    BYTE PTR [ecx+0x19],bh
  405bd5:	push   ss
  405bd6:	imul   eax,DWORD PTR [ebp+ebp*4+0x744ce199],0x1b
  405bde:	fdiv   QWORD PTR [ebx+0x5b]
  405be1:	sbb    ah,al
  405be3:	xor    esp,DWORD PTR [edi]
  405be5:	call   0x8bd5:0x567a8ca6
  405bec:	fimul  DWORD PTR [ebx+0x30b6ed2e]
  405bf2:	pop    edx
  405bf3:	and    DWORD PTR ds:0xa23b027b,edi
  405bf9:	test   BYTE PTR [edx+0x64ad6a4f],0x36
  405c00:	or     BYTE PTR [edx-0x40],ah
  405c03:	int3   
  405c04:	mov    ah,0x1c
  405c06:	retf   
  405c07:	sub    al,0x6d
  405c09:	ret    
  405c0a:	xor    edx,ebx
  405c0c:	add    BYTE PTR [eax+ebp*4-0x3a],bh
  405c10:	jbe    0x405c91
  405c12:	cli    
  405c13:	cmp    al,BYTE PTR [edi+0x5c]
  405c16:	into   
  405c17:	sbb    eax,0x798a90b5
  405c1c:	pop    esp
  405c1d:	push   ss
  405c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c1f:	mov    ch,0x38
  405c21:	cdq    
  405c22:	inc    ebp
  405c23:	add    al,0x50
  405c25:	adc    eax,0xcf556ffd
  405c2a:	repnz mov al,0xa
  405c2d:	into   
  405c2e:	pop    esi
  405c2f:	mov    eax,0x55821c00
  405c34:	jmp    0x405c0f
  405c36:	std    
  405c37:	dec    ecx
  405c38:	xor    dh,BYTE PTR [edx-0x71]
  405c3b:	out    0x92,eax
  405c3d:	push   0xaf48817e
  405c42:	unpcklps xmm7,xmm6
  405c45:	cmp    ebp,DWORD PTR [edi]
  405c47:	pusha  
  405c48:	aad    0xd
  405c4a:	jp     0x405c65
  405c4c:	popa   
  405c4d:	clc    
  405c4e:	ret    
  405c4f:	jecxz  0x405c4b
  405c51:	or     ecx,edi
  405c53:	out    dx,eax
  405c54:	fstp   st(7)
  405c56:	jb     0x405c3b
  405c58:	xor    dh,BYTE PTR [eax-0x2ff00b9d]
  405c5e:	retf   
  405c5f:	dec    edx
  405c60:	ins    DWORD PTR es:[edi],dx
  405c61:	imul   ebx,DWORD PTR [edi+0xb861185],0x2ba60f2
  405c6b:	inc    esi
  405c6c:	xchg   edx,eax
  405c6d:	fdiv   st,st(3)
  405c6f:	push   esi
  405c70:	fadd   st,st(2)
  405c72:	jle    0x405c44
  405c74:	cmp    cl,BYTE PTR [ebp+0xe]
  405c77:	mov    esp,DWORD PTR [edi]
  405c79:	iret   
  405c7a:	fs sti 
  405c7c:	mov    ds:0xe8bdce,al
  405c81:	xor    al,0x82
  405c83:	sub    eax,0x88e46f9c
  405c88:	lods   eax,DWORD PTR ds:[esi]
  405c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c8a:	clc    
  405c8b:	xchg   edi,eax
  405c8c:	dec    edx
  405c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c8e:	std    
  405c8f:	into   
  405c90:	popa   
  405c91:	(bad)  
  405c92:	(bad)  
  405c93:	adc    BYTE PTR [ecx],bh
  405c95:	mov    al,0x7f
  405c97:	repnz push eax
  405c99:	(bad)  
  405c9a:	pop    edx
  405c9b:	sbb    BYTE PTR [ebx+edi*2],0x9f
  405c9f:	shr    DWORD PTR ds:0x2414b0af,1
  405ca5:	xor    ah,BYTE PTR [esi+0x38895560]
  405cab:	sbb    DWORD PTR [edi-0x491cf187],esp
  405cb1:	dec    ecx
  405cb2:	out    dx,eax
  405cb3:	into   
  405cb4:	dec    edx
  405cb5:	pop    ebx
  405cb6:	jno    0x405c87
  405cb8:	ss std 
  405cba:	aas    
  405cbb:	aad    0x41
  405cbd:	jbe    0x405c8c
  405cbf:	push   ebx
  405cc0:	pusha  
  405cc1:	inc    edx
  405cc2:	mov    al,ds:0x2c2b9217
  405cc7:	push   esi
  405cc8:	cmp    ah,BYTE PTR [edx]
  405cca:	(bad)  
  405ccb:	jns    0x405cb8
  405ccd:	push   ss
  405cce:	data16 sub bh,dl
  405cd1:	cdq    
  405cd2:	sbb    BYTE PTR [edi],al
  405cd4:	fcomp  QWORD PTR [ebx]
  405cd6:	aas    
  405cd7:	mov    DWORD PTR [ecx],0x27740e1a
  405cdd:	xor    al,0xa6
  405cdf:	add    BYTE PTR gs:[ebx-0x27],ch
  405ce3:	int3   
  405ce4:	call   0x8f96:0xa68dad6c
  405ceb:	rcl    BYTE PTR [eax+0x9],1
  405cee:	jle    0x405d12
  405cf0:	rol    al,0xc0
  405cf3:	rol    al,0xc0
  405cf6:	rol    al,0xc0
  405cf9:	rol    al,0xc0
  405cfc:	rol    al,0xc0
  405cff:	rol    al,0xc0
  405d02:	rol    al,0xc0
  405d05:	rol    al,0xc0
  405d08:	rol    al,0xc0
  405d0b:	rol    al,0xc0
  405d0e:	rol    al,0xc0
  405d11:	rol    al,0xc0
  405d14:	rol    al,0xc0
  405d17:	rol    al,0xc0
  405d1a:	rol    al,0xc0
  405d1d:	rol    al,0xc0
  405d20:	rol    al,0xc0
  405d23:	rol    al,0xc0
  405d26:	rol    al,0xc0
  405d29:	rol    al,0xc0
  405d2c:	rol    al,0xc0
  405d2f:	rol    BYTE PTR [esi+0x571468af],0x16
  405d36:	mov    ah,0x60
  405d38:	arpl   WORD PTR [edi+edi*8],bx
  405d3b:	sbb    ebp,esi
  405d3d:	pusha  
  405d3e:	(bad)  
  405d3f:	jecxz  0x405d6f
  405d41:	jo     0x405d32
  405d43:	pop    edi
  405d44:	dec    edx
  405d45:	repz rcr DWORD PTR [esi-0x7176f1ca],cl
  405d4c:	inc    edi
  405d4d:	fwait
  405d4e:	and    esp,esi
  405d50:	mov    ch,0x86
  405d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d53:	jns    0x405da0
  405d55:	xchg   edx,eax
  405d56:	cmp    al,0x56
  405d58:	out    dx,eax
  405d59:	ret    0xd127
  405d5c:	mov    bh,0x4d
  405d5e:	or     ah,0x89
  405d61:	iret   
  405d62:	lea    esp,[ebx]
  405d64:	into   
  405d65:	into   
  405d66:	or     DWORD PTR ds:0x3b82cf00,eax
  405d6c:	test   BYTE PTR [ebx-0x3],ah
  405d6f:	pushf  
  405d70:	fadd   DWORD PTR [edi]
  405d72:	(bad)  
  405d73:	js     0x405dc6
  405d75:	test   BYTE PTR [edi-0x52],bh
  405d78:	test   BYTE PTR [edx+0x5a],cl
  405d7b:	scas   eax,DWORD PTR es:[edi]
  405d7c:	jnp    0x405df9
  405d7e:	and    DWORD PTR [ebx],edi
  405d80:	(bad)  
  405d81:	loop   0x405d03
  405d83:	dec    edi
  405d84:	je     0x405da5
  405d86:	cmp    eax,0x7717e336
  405d8b:	int    0x76
  405d8d:	xlat   BYTE PTR ds:[ebx]
  405d8e:	je     0x405d73
  405d90:	cmp    BYTE PTR [edi+ebp*8+0x5d],dh
  405d94:	dec    edx
  405d95:	cmc    
  405d96:	jmp    0x47d7:0x3ba6360f
  405d9d:	jo     0x405d58
  405d9f:	stos   DWORD PTR es:[edi],eax
  405da0:	mov    ch,0x51
  405da2:	(bad)  
  405da3:	jns    0x405d9c
  405da5:	push   ss
  405da6:	inc    edx
  405da7:	cs clc 
  405da9:	cdq    
  405daa:	push   ds
  405dab:	adc    bl,BYTE PTR [ebx+0x1b]
  405dae:	lods   eax,DWORD PTR ds:[esi]
  405daf:	inc    edx
  405db0:	into   
  405db1:	sbb    al,BYTE PTR [edi+ebx*8+0x27]
  405db5:	in     al,dx
  405db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db7:	push   ss
  405db8:	cmc    
  405db9:	pushf  
  405dba:	fxch   st(6)
  405dbc:	xchg   BYTE PTR [edx-0x55],ah
  405dbf:	lahf   
  405dc0:	repz lahf 
  405dc2:	pop    edx
  405dc3:	retf   
  405dc4:	jg     0x405e41
  405dc6:	and    edi,DWORD PTR [ebx]
  405dc8:	rol    DWORD PTR [ebx+esi*4-0x4aebdeb1],0x34
  405dd0:	pusha  
  405dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd2:	dec    ecx
  405dd3:	mov    ecx,0xe3eea29d
  405dd8:	lea    esi,[ebx-0x23b54c11]
  405dde:	xchg   esi,eax
  405ddf:	xor    DWORD PTR [edx],edi
  405de1:	in     al,0x3b
  405de3:	lods   al,BYTE PTR ds:[esi]
  405de4:	push   edi
  405de5:	mov    ?,edx
  405de7:	mov    esi,0x5bc53e0
  405dec:	adc    dh,BYTE PTR [edi-0x33da51f5]
  405df2:	into   
  405df3:	sub    al,0x55
  405df5:	inc    edx
  405df6:	adc    esi,DWORD PTR [esi+0x4c87fc0c]
  405dfc:	xor    al,0xec
  405dfe:	xor    edi,DWORD PTR [ebp-0x6a45649d]
  405e04:	push   ds
  405e05:	dec    edx
  405e06:	sub    esp,DWORD PTR [eax-0x1c2434ad]
  405e0c:	lods   al,BYTE PTR ds:[esi]
  405e0d:	cs mov cl,0x6f
  405e10:	popf   
  405e11:	dec    edi
  405e12:	stc    
  405e13:	sub    ch,BYTE PTR [ebx-0x767afb2]
  405e19:	sub    DWORD PTR [esi+ebx*4-0x1a0dae8e],ecx
  405e20:	loopne 0x405de4
  405e22:	mov    esp,0xe06012a6
  405e27:	scas   al,BYTE PTR es:[edi]
  405e28:	xor    ah,cl
  405e2a:	pushf  
  405e2b:	sub    al,0x19
  405e2d:	inc    edx
  405e2e:	out    0xb6,al
  405e30:	test   DWORD PTR [eax-0x66bbffe9],ebp
  405e36:	sahf   
  405e37:	push   esp
  405e38:	cmp    DWORD PTR [ebp+0x674370f],ecx
  405e3e:	(bad)  
  405e3f:	jne    0x405e55
  405e41:	push   edi
  405e42:	rcr    BYTE PTR [edx],0x7e
  405e45:	sbb    ebp,DWORD PTR cs:[edi+0x7e]
  405e49:	dec    edi
  405e4a:	sub    ebp,DWORD PTR [edx]
  405e4c:	pop    edi
  405e4d:	dec    esi
  405e4e:	mov    WORD PTR [eax+edi*8+0x722e8ce3],?
  405e55:	arpl   di,sp
  405e57:	lds    esi,FWORD PTR ds:0xc8818541
  405e5d:	sbb    dh,cl
  405e5f:	add    ebx,DWORD PTR [edi-0x6a]
  405e62:	mov    bl,0x99
  405e64:	in     al,0x28
  405e66:	push   esp
  405e67:	arpl   WORD PTR [edx+0x44451728],cx
  405e6d:	imul   ebx,DWORD PTR [esi+0xfa539e9],0x36
  405e74:	je     0x405ef1
  405e76:	(bad)  
  405e77:	mov    al,0x84
  405e79:	push   edi
  405e7a:	neg    BYTE PTR [edi]
  405e7c:	pop    esi
  405e7d:	fwait
  405e7e:	xchg   esi,eax
  405e7f:	add    eax,0xc0819a11
  405e84:	(bad)  
  405e86:	repnz cdq 
  405e88:	loopne 0x405e22
  405e8a:	mov    esp,0x644112d1
  405e8f:	scas   al,BYTE PTR es:[edi]
  405e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e91:	int3   
  405e92:	jbe    0x405ebb
  405e94:	pop    es
  405e95:	sub    cl,dl
  405e97:	arpl   WORD PTR [ebx+0x3b],bx
  405e9a:	pop    ss
  405e9b:	push   ds
  405e9c:	inc    ecx
  405e9d:	mov    dl,0x2b
  405e9f:	lock push ebx
  405ea1:	mov    ebx,edx
  405ea3:	pushf  
  405ea4:	cdq    
  405ea5:	sub    DWORD PTR [edx+0x1ffa7735],0x40
  405eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ead:	fwait
  405eae:	inc    BYTE PTR ds:0xfb7d9acb
  405eb4:	fcomip st,st(4)
  405eb6:	test   al,0xe7
  405eb8:	push   ebp
  405eb9:	push   esp
  405eba:	(bad)  
  405ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebc:	(bad)  
  405ebd:	mov    dh,0x98
  405ebf:	outs   dx,DWORD PTR ds:[esi]
  405ec0:	xor    eax,0x978141da
  405ec5:	sbb    bh,cl
  405ec7:	or     BYTE PTR [eax],al
  405ec9:	cld    
  405eca:	scas   al,BYTE PTR es:[edi]
  405ecb:	dec    esp
  405ecc:	dec    esp
  405ecd:	add    al,0x33
  405ecf:	dec    edx
  405ed0:	arpl   WORD PTR [edx+0x3f1e1cba],dx
  405ed6:	sub    ecx,DWORD PTR [eax]
  405ed8:	push   ebx
  405ed9:	aas    
  405eda:	fisubr DWORD PTR [edx+0x3583839a]
  405ee0:	es cli 
  405ee2:	ins    BYTE PTR es:[edi],dx
  405ee3:	inc    eax
  405ee4:	aam    0x9b
  405ee6:	std    
  405ee7:	add    eax,0x23799add
  405eec:	fistp  WORD PTR [edi+0x465587a8]
  405ef2:	(bad)  
  405ef3:	fld    st(7)
  405ef5:	jne    0x405e8f
  405ef7:	inc    ecx
  405ef8:	xor    eax,0xd58135a0
  405efd:	sbb    BYTE PTR [eax+0x3],dh
  405f00:	pop    eax
  405f01:	xchg   esi,eax
  405f02:	dec    ebp
  405f03:	cdq    
  405f04:	push   0x28
  405f06:	ret    
  405f07:	arpl   WORD PTR [ebx+0x447e17c3],dx
  405f0d:	xor    DWORD PTR [esi+0xf903971],ebx
  405f13:	push   ss
  405f14:	sub    DWORD PTR [ecx+0x4f1d6f0e],eax
  405f1a:	jp     0x405f46
  405f1c:	or     ecx,DWORD PTR [esi-0x2c]
  405f1f:	enter  0x78f8,0x8c
  405f23:	mov    al,ds:0x10f2ae72
  405f28:	loopne 0x405f7f
  405f2a:	mov    esp,0xe349123a
  405f2f:	scas   al,BYTE PTR es:[edi]
  405f30:	(bad)  
  405f31:	int3   
  405f32:	adc    ch,BYTE PTR [edx+esi*1]
  405f35:	inc    edx
  405f36:	push   0x2afc91b6
  405f3b:	dec    esp
  405f3c:	lods   al,BYTE PTR ds:[esi]
  405f3d:	or     eax,0x71630233
  405f42:	mov    edx,0x2be31e86
  405f47:	aas    
  405f48:	push   ebx
  405f49:	or     ebx,ebx
  405f4b:	or     BYTE PTR [eax+0x556fc82e],0x4f
  405f52:	outs   dx,DWORD PTR ds:[esi]
  405f53:	sub    dl,BYTE PTR [ecx-0x7fb14b2]
  405f59:	mov    ds:0x2b72948c,al
  405f5e:	in     al,0x85
  405f60:	xor    eax,0xd3811802
  405f65:	sbb    BYTE PTR [edx],ch
  405f67:	add    esi,DWORD PTR [ebx]
  405f69:	xchg   esi,eax
  405f6a:	pop    edx
  405f6b:	cdq    
  405f6c:	cld    
  405f6d:	sub    BYTE PTR [edx+0x63],ah
  405f70:	je     0x405f51
  405f72:	pop    ss
  405f73:	sbb    al,BYTE PTR [ecx+ebp*4-0x62]
  405f77:	js     0x405fb2
  405f79:	daa    
  405f7a:	psubusb mm6,QWORD PTR [ebx+ebx*4-0x2]
  405f7f:	jg     0x405fd7
  405f81:	push   ebp
  405f82:	push   0x40
  405f84:	outs   dx,BYTE PTR ds:[esi]
  405f85:	fwait
  405f86:	test   eax,0xad9ac205
  405f8b:	mov    bl,0xdf
  405f8d:	jp     0x405f37
  405f8f:	scas   al,BYTE PTR es:[edi]
  405f90:	push   ebp
  405f91:	jns    0x405f69
  405f93:	mov    esi,0xb59828c7
  405f98:	xor    eax,0xa981d7fe
  405f9d:	sbb    dl,al
  405f9f:	add    ecx,DWORD PTR [ebx]
  405fa1:	xchg   esi,eax
  405fa2:	adc    DWORD PTR [ecx+0x633a28ae],ebx
  405fa8:	data16 add al,0x17
  405fab:	cmp    DWORD PTR [esp+ecx*8-0x62],eax
  405faf:	lahf   
  405fb0:	cmp    DWORD PTR ds:0x7d74b80f,ebx
  405fb6:	(bad)  
  405fb7:	ss mov edx,0x801a6257
  405fbd:	sub    BYTE PTR cs:[edi+0x12],0x4f
  405fc2:	loop   0x405fee
  405fc4:	and    DWORD PTR [esi-0x3f],ecx
  405fc7:	aad    0xf8
  405fc9:	mov    ch,0x8c
  405fcb:	addr16 jb 0x405f9d
  405fce:	repnz pop ss
  405fd0:	loopne 0x405fb1
  405fd2:	mov    esp,0x4421126f
  405fd7:	scas   al,BYTE PTR es:[edi]
  405fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd9:	int3   
  405fda:	xor    eax,0x7042202c
  405fdf:	mov    dh,0xf3
  405fe1:	cld    
  405fe2:	push   edi
  405fe3:	dec    ebp
  405fe4:	sub    eax,eax
  405fe6:	sahf   
  405fe7:	jle    0x406022
  405fe9:	cdq    
  405fea:	psubb  mm6,QWORD PTR [edi+eiz*4-0x2]
  405fef:	repz rcl DWORD PTR [edi+0x31],cl
  405ff3:	sbb    cl,dl
  405ff5:	cs push ds
  405ff7:	outs   dx,DWORD PTR ds:[esi]
  405ff8:	add    ecx,DWORD PTR [edi+0x5e]
  405ffb:	sub    ah,cl
  405ffd:	dec    esi
  405ffe:	inc    edi
  405fff:	mov    ah,0xf8
  406001:	clc    
  406002:	mov    WORD PTR [esi],?
  406004:	jb     0x40603b
  406006:	repnz shl al,1
  406009:	adc    bh,BYTE PTR [esp+edi*1-0x51a050ee]
  406010:	or     ah,0xef
  406013:	sub    al,0x8e
  406015:	inc    edx
  406016:	mov    esi,DWORD PTR [esi+0x4c9afc64]
  40601c:	xchg   ecx,eax
  40601d:	sub    DWORD PTR [ebx],esi
  40601f:	in     al,0x63
  406021:	(bad)  
  406022:	mov    edx,0x2b0f1e9e
  406027:	mov    ebp,0x1adad953
  40602c:	(bad)  
  40602d:	sbb    DWORD PTR [eax+0x35],0xffffff9a
  406031:	cli    
  406032:	mov    ecx,0xcf9be440
  406037:	add    eax,0x241d9a78
  40603c:	fist   WORD PTR [eax]
  40603e:	lods   eax,DWORD PTR ds:[esi]
  40603f:	fnstsw ax
  406041:	mov    al,0xbc
  406043:	push   edx
  406044:	adc    ch,BYTE PTR [edx-0x33b55118]
  40604a:	dec    eax
  40604b:	sub    al,0xe5
  40604d:	inc    edx
  40604e:	xchg   ebx,eax
  40604f:	mov    dh,0x92
  406051:	cld    
  406052:	mov    cl,0x4c
  406054:	rcr    BYTE PTR [ecx+0x33],cl
  406057:	mul    BYTE PTR [esi-0x2a]
  40605a:	pmulhw mm6,QWORD PTR [edx+ebp*1-0x2]
  40605f:	fcmovnb st,st(0)
  406061:	push   edi
  406062:	lds    ebx,FWORD PTR [edx]
  406064:	cmp    al,0x2e
  406066:	jno    0x4060e2
  406068:	xchg   ebx,eax
  406069:	call   0x7fa8:0x46df42a7
  406070:	push   ebp
  406071:	adc    esi,edx
  406073:	fadd   st,st(7)
  406075:	in     eax,0x98
  406077:	lea    esi,ds:0x1b81dd25
  40607d:	sbb    BYTE PTR [ecx-0x24690bfd],cl
  406083:	cdq    
  406084:	scas   eax,DWORD PTR es:[edi]
  406085:	sub    BYTE PTR [eax+0x178e0e63],bh
  40608b:	xor    al,0x44
  40608d:	xchg   ebp,eax
  40608e:	sahf   
  40608f:	(bad)  
  406090:	cmp    DWORD PTR [edi+0x4a74ab0f],ecx
  406096:	(bad)  
  406097:	test   al,0xe3
  406099:	push   edi
  40609a:	add    ebx,DWORD PTR [edx]
  40609c:	outs   dx,BYTE PTR ds:[esi]
  40609d:	cs dec edi
  40609f:	jns    0x406034
  4060a1:	call   0x37a8:0x2bdfd228
  4060a8:	push   ebp
  4060a9:	and    esi,edx
  4060ab:	sti    
  4060ac:	(bad)  
  4060ad:	fcomp  DWORD PTR [eax-0x722dca16]
  4060b3:	cmp    DWORD PTR [edx-0x19fc1ae8],0x4199da96
  4060bd:	sub    BYTE PTR [esi+0x63],bh
  4060c0:	(bad)  
  4060c1:	mov    al,ds:0x6e443517
  4060c6:	sahf   
  4060c7:	jp     0x406102
  4060c9:	(bad)  
  4060ca:	(bad)  
  4060cc:	je     0x406138
  4060ce:	(bad)  
  4060cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d0:	ds push edi
  4060d2:	inc    edx
  4060d3:	sbb    dh,BYTE PTR [esi+ebp*1-0x70]
  4060d7:	outs   dx,DWORD PTR ds:[esi]
  4060d8:	loope  0x406129
  4060da:	push   ss
  4060db:	sub    dl,BYTE PTR [eax]
  4060dd:	dec    esi
  4060de:	push   esp
  4060df:	lahf   
  4060e0:	clc    
  4060e1:	retf   0xd68c
  4060e4:	jb     0x40613a
  4060e6:	repnz sub al,0xe0
  4060e9:	add    eax,0x3812e8bc
  4060ee:	sub    BYTE PTR [esi+0x2cd7cc7b],0x50
  4060f5:	inc    edx
  4060f6:	sahf   
  4060f7:	mov    dh,0x2d
  4060f9:	cld    
  4060fa:	pop    esp
  4060fb:	dec    esp
  4060fc:	test   DWORD PTR [esi+0x4f634533],esp
  406102:	mov    edx,0x2bee1e9d
  406107:	pop    esi
  406108:	push   ebx
  406109:	cmp    ebx,ebx
  40610b:	shr    BYTE PTR [eax-0x39028d2],0x4f
  406112:	dec    ebx
  406113:	sub    bl,BYTE PTR [eax]
  406115:	dec    esi
  406116:	adc    ecx,DWORD PTR [ebx-0x8]
  406119:	mov    BYTE PTR [esp+edi*8+0x42f2e072],cl
  406120:	loopne 0x4060c6
  406122:	mov    esp,0x212a6
  406127:	scas   al,BYTE PTR es:[edi]
  406128:	or     esp,ecx
  40612a:	mov    ebx,0xa642782c
  40612f:	mov    dh,0xd7
  406131:	cld    
  406132:	sub    cl,BYTE PTR [eax+edx*4-0x1e]
  406136:	xor    edi,edx
  406138:	arpl   WORD PTR [edx+0x411e17ba],bp
  40613e:	sub    ebx,DWORD PTR [edx-0x7d25aaad]
  406144:	add    DWORD PTR es:[ebp+esi*1+0x40f8fac4],0x1e
  40614d:	fwait
  40614e:	mov    ecx,0x909a8705
  406153:	imul   ebx,edi,0x5570a83f
  406159:	addr16 (bad) 
  40615b:	mov    es,edi
  40615d:	retf   
  40615e:	cwde   
  40615f:	cmp    dh,BYTE PTR ds:0xae817f40
  406165:	sbb    BYTE PTR [edx],ah
  406167:	add    esp,DWORD PTR [eax-0x6a]
  40616a:	neg    DWORD PTR [ecx+0x6334288f]
  406170:	in     eax,0x45
  406172:	pop    ss
  406173:	push   ss
  406174:	inc    esp
  406175:	lea    ebx,[esi+0xf1039ce]
  40617b:	pop    ebp
  40617c:	je     0x4061a0
  40617e:	(bad)  
  40617f:	clc    
  406180:	std    
  406181:	push   edi
  406182:	aas    
  406183:	sbb    bl,bh
  406185:	cs mov bh,0x6f
  406188:	into   
  406189:	dec    edi
  40618a:	js     0x4061b6
  40618c:	adc    al,0x4e
  40618e:	shl    BYTE PTR [esi-0x8],cl
  406191:	inc    edi
  406192:	mov    WORD PTR ds:0xc5e40572,fs
  406198:	xor    eax,0x4081258a
  40619d:	sbb    cl,bl
  40619f:	add    ecx,DWORD PTR ds:0x2d99e996
  4061a5:	sub    BYTE PTR [eax+0x63],cl
  4061a8:	sbb    dh,BYTE PTR [ecx+0x3a44cd17]
  4061ae:	sahf   
  4061af:	cmp    DWORD PTR es:[ecx-0xb8bdcf1],edi
  4061b6:	(bad)  
  4061b7:	lock ficom DWORD PTR [edi-0x18]
  4061bb:	sbb    bl,BYTE PTR [esi+ebp*1+0x4fb86f38]
  4061c2:	jecxz  0x40623d
  4061c4:	fist   WORD PTR [ebx-0x58]
  4061c7:	pusha  
  4061c8:	push   ebp
  4061c9:	cs (bad) 
  4061cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061cc:	(bad)  
  4061cd:	ficomp WORD PTR [eax+0x2713585]
  4061d3:	xor    edx,0xb103c818
  4061d9:	xchg   esi,eax
  4061da:	sub    DWORD PTR [ecx+0x632928ab],ebx
  4061e0:	push   edi
  4061e1:	call   0xfd8498fd
  4061e6:	sahf   
  4061e7:	jmp    0x406222
  4061e9:	jmp    0xd6fe:0xef74ad0f
  4061f0:	add    BYTE PTR [edi+0x46],dl
  4061f3:	sbb    ah,BYTE PTR [edi+0x2e]
  4061f6:	scas   eax,DWORD PTR es:[edi]
  4061f7:	outs   dx,DWORD PTR ds:[esi]
  4061f8:	jne    0x406249
  4061fa:	pop    ecx
  4061fb:	sub    dh,BYTE PTR [ebp+0x4e]
  4061fe:	jns    0x40623f
  406200:	clc    
  406201:	dec    eax
  406202:	mov    WORD PTR ds:0x20f29072,cs
  406208:	loopne 0x4061d6
  40620a:	mov    esp,0x51e81288
  40620f:	scas   al,BYTE PTR es:[edi]
  406210:	push   esi
  406211:	int3   
  406212:	sub    al,0x2c
  406214:	and    eax,DWORD PTR [edx-0x4d]
  406217:	mov    dh,0xf2
  406219:	cld    
  40621a:	mov    dl,0x4d
  40621c:	dec    esp
  40621d:	lock sahf 
  40621f:	dec    ecx
  406220:	cmp    DWORD PTR [edi+ecx*1-0x1a78b58],eax
  406227:	sbb    al,0xa7
  406229:	push   edi
  40622a:	sub    eax,0x592e7f1a
  40622f:	outs   dx,DWORD PTR ds:[esi]
  406230:	pop    esi
  406231:	dec    edi
  406232:	sbb    ch,BYTE PTR [edx]
  406234:	add    eax,0x71446b4f
  406239:	xchg   DWORD PTR [edi+0x464e762a],ebx
  40623f:	xchg   esi,eax
  406240:	clc    
  406241:	test   DWORD PTR [edx+eiz*2-0x7a183e8e],ecx
  406248:	xor    eax,0x1a81d4e7
  40624d:	sbb    dl,ah
  40624f:	add    edi,DWORD PTR [esi-0x4666b16a]
  406255:	sub    BYTE PTR [eax],dl
  406257:	arpl   WORD PTR [edx+0x4445179d],cx
  40625d:	cmp    DWORD PTR [esi+0xf9b39a2],ebx
  406263:	icebp  
  406264:	je     0x40626e
  406266:	(bad)  
  406267:	pop    eax
  406268:	and    DWORD PTR [edi-0x5e],edx
  40626b:	sbb    cl,cl
  40626d:	adc    ch,BYTE PTR cs:[edi+0x20]
  406271:	dec    edi
  406272:	cmp    eax,0x354e162a
  406277:	mov    ch,0xf8
  406279:	inc    ebx
  40627a:	mov    WORD PTR [eax],?
  40627c:	jb     0x40627d
  40627e:	in     al,0x85
  406280:	xor    eax,0x77814468
  406285:	sbb    BYTE PTR [edx+0x6d968e03],ch
  40628b:	cdq    
  40628c:	test   BYTE PTR [eax],ch
  40628e:	ja     0x4062f3
  406290:	jge    0x40625f
  406292:	pop    ss
  406293:	in     al,0x44
  406295:	push   ebp
  406296:	sahf   
  406297:	mov    al,0x39
  406299:	call   0x80fe:0xce741f0f
  4062a0:	xorps  xmm4,XMMWORD PTR [ebx-0x18d1cde6]
  4062a7:	outs   dx,DWORD PTR ds:[esi]
  4062a8:	push   0x362aed4f
  4062ad:	dec    esi
  4062ae:	cmp    ebp,DWORD PTR [eax-0x8]
  4062b1:	add    cl,BYTE PTR [edx+ebp*1-0x480ddf8e]
  4062b8:	loopne 0x406310
  4062ba:	mov    esp,0x2e4124e
  4062bf:	scas   al,BYTE PTR es:[edi]
  4062c0:	gs int3 
  4062c2:	inc    eax
  4062c3:	sub    al,0x8
  4062c5:	inc    edx
  4062c6:	mov    cl,0xb6
  4062c8:	stos   BYTE PTR es:[edi],al
  4062c9:	cld    
  4062ca:	jle    0x406318
  4062cc:	xor    BYTE PTR fs:[ebx],dh
  4062cf:	sub    eax,0xeba9763
  4062d4:	push   ds
  4062d5:	sub    edi,DWORD PTR cs:[ebx+0x53]
  4062d9:	sbb    al,0xda
  4062db:	(bad)  
  4062dd:	sbb    eax,0x35
  4062e0:	loopne 0x4062dc
  4062e2:	or     eax,DWORD PTR [eax-0x4e]
  4062e5:	fwait
  4062e6:	ret    
  4062e7:	add    eax,0xf2569b96
  4062ec:	jb     0x406355
  4062ee:	repnz stos BYTE PTR es:[edi],al
  4062f0:	loopne 0x4062fd
  4062f2:	mov    esp,0xd6a31246
  4062f7:	scas   al,BYTE PTR es:[edi]
  4062f8:	daa    
  4062f9:	int3   
  4062fa:	push   0x2c
  4062fc:	mov    esp,0xbb6df42
  406301:	cld    
  406302:	xor    BYTE PTR [esi+ebx*2-0x50],cl
  406306:	xor    ebx,DWORD PTR [edi+0x63]
  406309:	sti    
  40630a:	mov    edx,0x2b161e26
  40630f:	adc    DWORD PTR [ebx+0x6a],0x83beceda
  406316:	addr16 xor eax,0x4081fa05
  40631c:	sbb    eax,0xfa05079b
  406321:	call   0x92a8:0x34df7814
  406328:	push   ebp
  406329:	mov    eax,0x9c740d6
  40632e:	cwde   
  40632f:	shl    DWORD PTR ds:0x6381ffd0,1
  406335:	sbb    ch,ch
  406337:	add    ecx,eax
  406339:	xchg   esi,eax
  40633a:	sbb    BYTE PTR [ecx+0x63a72897],bl
  406340:	out    dx,eax
  406341:	aas    
  406342:	pop    ss
  406343:	lock inc esp
  406345:	xchg   edx,eax
  406346:	sahf   
  406347:	cmp    DWORD PTR ss:[edi-0x7b8b2ef1],esi
  40634e:	(bad)  
  40634f:	mov    bl,0xea
  406351:	push   edi
  406352:	sbb    BYTE PTR [edx],0xd1
  406355:	cs push ebx
  406357:	outs   dx,DWORD PTR ds:[esi]
  406358:	mov    edi,0x7e2acb4f
  40635d:	dec    esi
  40635e:	gs stos DWORD PTR es:[edi],eax
  406360:	clc    
  406361:	jg     0x4062ef
  406363:	xor    DWORD PTR [edx+0x7],0x38e098f2
  40636a:	mov    esp,0xfb62124a
  40636f:	scas   al,BYTE PTR es:[edi]
  406370:	call   0x596d1741
  406375:	push   esp
  406376:	sbb    BYTE PTR [ebx+0x25],ah
  406379:	gs pop ss
  40637b:	push   ds
  40637c:	inc    esi
  40637d:	pop    ebx
  40637e:	dec    esi
  40637f:	xor    BYTE PTR [ecx-0x72],0xe0
  406383:	dec    ecx
  406384:	xor    ebx,DWORD PTR [ecx-0x60]
  406387:	xor    ch,dl
  406389:	mov    al,ds:0x5471085d
  40638e:	sub    al,0x1c
  406390:	fidiv  DWORD PTR [ebp-0x68aae8ab]
  406396:	call   esi
  406398:	frstor [esi+eax*8]
  40639b:	fcomp  DWORD PTR ds:0xe239b9e9
  4063a1:	(bad)  
  4063a2:	scas   al,BYTE PTR es:[edi]
  4063a3:	dec    eax
  4063a4:	add    esp,DWORD PTR [edi+0x56874acc]
  4063aa:	jmp    0x406370
  4063ac:	push   esi
  4063ad:	fwait
  4063ae:	dec    edi
  4063af:	and    eax,0xedd1fb3d
  4063b4:	add    DWORD PTR [esi+eax*2],0x37155be2
  4063bb:	cs (bad) 
  4063bd:	sub    BYTE PTR [edx],bh
  4063bf:	xchg   edx,eax
  4063c0:	adc    edi,DWORD PTR [ebp-0x62]
  4063c3:	xchg   DWORD PTR [eax+0x546ee0bb],ecx
  4063c9:	test   DWORD PTR fs:[eax],ecx
  4063cc:	xor    DWORD PTR [edi+0x50],ecx
  4063cf:	sub    ecx,ebp
  4063d1:	and    DWORD PTR [eax-0x38],0x56
  4063d5:	jmp    0x406450
  4063d7:	or     BYTE PTR [esp+ebx*8],al
  4063da:	pop    ds
  4063db:	inc    esp
  4063dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063dd:	or     ch,BYTE PTR [eax+0x3d4937aa]
  4063e3:	arpl   WORD PTR [ebp+0x72e1baf3],ax
  4063e9:	push   ecx
  4063ea:	shr    edi,0x43
  4063ed:	cwde   
  4063ee:	es and ah,ah
  4063f1:	popa   
  4063f2:	repz jb 0x4063b2
  4063f5:	pop    edx
  4063f6:	call   0x9e4b0f79
  4063fb:	mov    dh,0xd5
  4063fd:	daa    
  4063fe:	loop   0x406453
  406400:	push   eax
  406401:	or     eax,0x63b608d7
  406406:	xchg   ebx,eax
  406407:	test   eax,0x7dda16b8
  40640c:	pop    ecx
  40640d:	enter  0x4d33,0x85
  406411:	(bad)  
  406412:	out    0x70,eax
  406414:	iret   
  406415:	push   edx
  406416:	test   BYTE PTR [edi],ah
  406418:	sbb    bh,cl
  40641a:	daa    
  40641b:	jns    0x4063a8
  40641d:	mov    ah,0x5b
  40641f:	push   0x806e6871
  406424:	sti    
  406425:	sbb    eax,0xdedd0773
  40642a:	clc    
  40642b:	jne    0x4063c5
  40642d:	xor    BYTE PTR [esi],cl
  40642f:	inc    esp
  406430:	scas   al,BYTE PTR es:[edi]
  406431:	xchg   esp,eax
  406432:	sahf   
  406433:	adc    BYTE PTR [ebx-0x195a74f0],dh
  406439:	(bad)  
  40643a:	lods   eax,DWORD PTR ds:[esi]
  40643b:	or     BYTE PTR [esi],dh
  40643d:	push   0x6f3458e9
  406442:	cli    
  406443:	jg     0x40649b
  406445:	jmp    0x8960:0x5adf4c01
  40644c:	test   BYTE PTR [edx],0xa6
  40644f:	fidivr WORD PTR [ecx-0xb]
  406452:	or     bh,BYTE PTR [eax+0x1e]
  406455:	bound  edi,QWORD PTR [ebp+0x639bfe7f]
  40645b:	adc    esi,eax
  40645d:	aam    0xd6
  40645f:	mov    al,ds:0xf0e5de23
  406464:	loope  0x406407
  406466:	leave  
  406467:	hlt    
  406468:	push   edx
  406469:	lods   al,BYTE PTR ds:[esi]
  40646a:	sahf   
  40646b:	inc    ebx
  40646c:	push   esp
  40646d:	call   0x8a3e9ccb
  406472:	clc    
  406473:	jbe    0x406478
  406475:	or     dl,BYTE PTR [eax-0x6609656b]
  40647b:	daa    
  40647c:	jecxz  0x406446
  40647e:	mov    edx,0xe51bf724
  406483:	xchg   edx,eax
  406484:	test   DWORD PTR ds:0xeed418b2,edi
  40648a:	sbb    DWORD PTR [edi+0x570529a4],ecx
  406490:	ret    
  406491:	fcomp  QWORD PTR [ebp+0x57b05662]
  406497:	xor    ebx,esi
  406499:	adc    BYTE PTR [edi+eax*8],0x4a
  40649d:	or     dl,BYTE PTR [ecx+0xc6a0880]
  4064a3:	sti    
  4064a4:	push   ecx
  4064a5:	clc    
  4064a6:	mov    edx,0x7cb73fd7
  4064ab:	test   eax,0x274ed033
  4064b0:	mov    esp,0x83b69bd8
  4064b5:	fisttp DWORD PTR [esi+0x5ac17645]
  4064bb:	scas   al,BYTE PTR es:[edi]
  4064bc:	test   al,0x80
  4064be:	retf   0x2209
  4064c1:	inc    ebx
  4064c2:	cmp    al,0x7
  4064c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c5:	pop    edi
  4064c6:	sbb    ah,BYTE PTR [edx]
  4064c8:	xor    DWORD PTR [edi],edi
  4064ca:	lods   al,BYTE PTR ds:[esi]
  4064cb:	lods   al,BYTE PTR ds:[esi]
  4064cc:	mov    al,ds:0x7a52bae1
  4064d1:	pop    ebp
  4064d2:	jb     0x406505
  4064d4:	push   ss
  4064d5:	push   0x55
  4064d7:	daa    
  4064d8:	fild   DWORD PTR [eax-0x48af6811]
  4064de:	aam    0x37
  4064e0:	addr16 (bad) 
  4064e2:	mov    al,ds:0x2c955129
  4064e7:	cli    
  4064e8:	(bad)  
  4064e9:	jecxz  0x40648c
  4064eb:	sub    BYTE PTR [ebx-0x5c],dl
  4064ee:	test   ecx,0x99d8decc
  4064f4:	add    al,BYTE PTR [edi-0x7c4aa9f1]
  4064fa:	fs or  al,0x56
  4064fd:	or     al,0x6e
  4064ff:	dec    eax
  406500:	rol    al,0xc0
  406503:	rol    al,0xc0
  406506:	rol    al,0xc0
  406509:	rol    al,0xc0
  40650c:	rol    al,0xc0
  40650f:	rol    al,0xc0
  406512:	rol    al,0xc0
  406515:	rol    al,0xc0
  406518:	rol    al,0xc0
  40651b:	rol    al,0xc0
  40651e:	rol    al,0xc0
  406521:	rol    al,0xc0
  406524:	rol    al,0xc0
  406527:	rol    al,0xc0
  40652a:	rol    al,0xc0
  40652d:	rol    al,0xc0
  406530:	rol    al,0xc0
  406533:	rol    al,0xc0
  406536:	rol    al,0xc0
  406539:	rol    al,0xc0
  40653c:	rol    al,0xc0
  40653f:	rol    al,0xc0
  406542:	rol    al,0xc0
  406545:	rol    al,0xc0
  406548:	adc    DWORD PTR [esi+0xa4ff78b],ecx
  40654e:	and    bl,ah
  406550:	push   ebp
  406551:	or     BYTE PTR [ebx],ah
  406553:	loope  0x406516
  406555:	cmp    DWORD PTR [edx-0x6edcd99],0xffffffd1
  40655c:	enter  0xa7d,0x18
  406560:	cdq    
  406561:	pushf  
  406562:	mov    al,ds:0x3281d60f
  406567:	shr    BYTE PTR [eax-0x7b],0xa6
  40656b:	jno    0x4065c4
  40656d:	ret    0xfc54
  406570:	shl    BYTE PTR [edx+0x489a4f94],1
  406576:	mov    ch,0x22
  406578:	cwde   
  406579:	sbb    dl,BYTE PTR es:[esi]
  40657c:	lahf   
  40657d:	ret    0x2efe
  406580:	jo     0x4065e0
  406582:	sbb    BYTE PTR [ebx+0x6f572164],cl
  406588:	mov    edi,ecx
  40658a:	out    dx,al
  40658b:	or     dl,bh
  40658d:	data16 loopne 0x4065e5
  406590:	aas    
  406591:	and    edx,DWORD PTR [eax-0x4a0ea909]
  406597:	mov    ds:0xa6a38849,al
  40659c:	or     DWORD PTR [ecx],0xffffffa4
  40659f:	adc    DWORD PTR [edi+eiz*8-0x47],ebx
  4065a3:	add    bh,BYTE PTR [esi+0x714fded3]
  4065a9:	cmp    BYTE PTR [eax],0x29
  4065ac:	int    0x51
  4065ae:	out    dx,al
  4065af:	not    BYTE PTR [ebp-0x22]
  4065b2:	test   al,0x26
  4065b4:	ins    BYTE PTR es:[edi],dx
  4065b5:	push   es
  4065b6:	mov    al,0x40
  4065b8:	ror    BYTE PTR [ebp-0x62],0x5f
  4065bc:	mov    cl,0x5
  4065be:	push   cs
  4065bf:	leave  
  4065c0:	out    0xc,eax
  4065c2:	test   DWORD PTR [eax],ecx
  4065c4:	int    0x9b
  4065c6:	and    al,0xa7
  4065c8:	mov    cl,0x1b
  4065ca:	shr    DWORD PTR [ecx+0x56],1
  4065cd:	(bad)  
  4065ce:	call   0x4a61:0xd5a92b85
  4065d5:	or     ch,BYTE PTR [eax+0xd3c673d]
  4065db:	mov    dl,0x5c
  4065dd:	retf   0x87bb
  4065e0:	pop    ebx
  4065e1:	cmp    esp,DWORD PTR [edx+0x4649b62a]
  4065e7:	cmp    al,0x66
  4065e9:	clc    
  4065ea:	add    DWORD PTR [esi],0x70
  4065ed:	or     dh,BYTE PTR [ecx+0x3319fad5]
  4065f3:	and    eax,0x9e12bc56
  4065f8:	shl    BYTE PTR gs:[edi],0xc0
  4065fc:	add    DWORD PTR [edx],ecx
  4065fe:	dec    ebx
  4065ff:	ds hlt 
  406601:	jno    0x4065ee
  406603:	nop    esp
  406606:	mov    edx,0x3d65acbe
  40660b:	ja     0x406643
  40660d:	test   DWORD PTR [ebp+0x27],0x5401f870
  406614:	and    al,0xff
  406616:	push   es
  406617:	arpl   WORD PTR [ecx-0x48],si
  40661a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661b:	int    0xd
  40661d:	icebp  
  40661e:	les    edx,FWORD PTR [ebx]
  406620:	cli    
  406621:	(bad)  
  406623:	and    DWORD PTR [eax],esp
  406625:	rcr    DWORD PTR [ecx-0x4797521f],0xe5
  40662c:	stos   BYTE PTR es:[edi],al
  40662d:	inc    esp
  40662e:	mov    ebx,0x49bd80c3
  406633:	cmp    DWORD PTR [edx-0xb340740],edi
  406639:	fimul  WORD PTR [esi-0x5d73ee5]
  40663f:	mov    ds:0x28e4cfb7,eax
  406644:	push   esi
  406645:	inc    eax
  406646:	sahf   
  406647:	pop    edx
  406648:	mov    ds:0xf8f0a365,eax
  40664d:	xor    al,0x43
  40664f:	adc    eax,0xa9b719f1
  406654:	cmp    edx,DWORD PTR [edi]
  406656:	and    al,0x8
  406658:	jno    0x4065ef
  40665a:	inc    edx
  40665b:	mov    edx,0xa1b7f966
  406660:	and    ebx,esi
  406662:	jb     0x4066e3
  406664:	xchg   edi,eax
  406665:	jmp    0xc90272d4
  40666a:	sahf   
  40666b:	fs (bad) 
  40666d:	jp     0x406672
  40666f:	mov    esi,0x8d64a60
  406674:	lods   al,BYTE PTR ds:[esi]
  406675:	dec    ebp
  406676:	push   ebx
  406677:	inc    ebx
  406678:	push   ebx
  406679:	jbe    0x4066dd
  40667b:	test   BYTE PTR [esi-0x32],dl
  40667e:	sbb    dl,bh
  406680:	dec    esi
  406681:	(bad)  
  406682:	enter  0x7a75,0x77
  406686:	bound  esp,QWORD PTR [edi]
  406688:	inc    edx
  406689:	dec    esi
  40668a:	jno    0x40661b
  40668c:	pop    ds
  40668d:	inc    esp
  40668e:	jge    0x40668e
  406690:	jno    0x406678
  406692:	dec    edi
  406693:	leave  
  406694:	fcmovb st,st(0)
  406696:	sbb    cl,bl
  406698:	jmp    0x6043b17b
  40669d:	lods   al,BYTE PTR ds:[esi]
  40669e:	dec    edi
  40669f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a0:	mov    esi,0x88729e7b
  4066a5:	and    ah,BYTE PTR [eax-0x70]
  4066a8:	(bad)  
  4066a9:	clc    
  4066aa:	mov    eax,ds:0x1eb5fb08
  4066af:	or     ecx,DWORD PTR [ebx+0x43]
  4066b2:	jp     0x40670c
  4066b4:	push   esi
  4066b5:	jb     0x4066df
  4066b7:	sub    bl,BYTE PTR [ebx]
  4066b9:	adc    DWORD PTR [edx-0x6d],0x61c40a02
  4066c0:	adc    ebp,DWORD PTR [eax]
  4066c2:	adc    ebx,DWORD PTR [ebx]
  4066c4:	xchg   esp,eax
  4066c5:	call   0x31b0:0x36c9ffba
  4066cc:	mov    eax,ds:0xb2273854
  4066d1:	jno    0x40673e
  4066d3:	xchg   edi,eax
  4066d4:	or     ecx,DWORD PTR [edx+0xe714e04]
  4066da:	or     eax,0x97df3974
  4066df:	mov    ?,WORD PTR [esi-0x1ae54422]
  4066e5:	ret    0xbe16
  4066e8:	dec    edx
  4066e9:	into   
  4066ea:	sahf   
  4066eb:	adc    BYTE PTR [ebx],ch
  4066ed:	lods   eax,DWORD PTR ds:[esi]
  4066ee:	push   edx
  4066ef:	mov    ebx,0xfc45b012
  4066f4:	in     eax,dx
  4066f5:	or     eax,0xa657eac1
  4066fa:	xchg   edi,eax
  4066fb:	cwde   
  4066fc:	movlps xmm1,QWORD PTR [esi-0x35]
  406700:	jbe    0x406746
  406702:	sub    DWORD PTR [ecx],ecx
  406704:	aad    0x45
  406706:	jmp    0x406697
  406708:	xchg   edi,eax
  406709:	dec    ebx
  40670a:	ins    WORD PTR es:[edi],dx
  40670c:	cld    
  40670d:	jl     0x406754
  40670f:	daa    
  406710:	ud0    esp,DWORD PTR [edx]
  406713:	(bad)  
  406714:	pop    esi
  406715:	in     eax,0xaf
  406717:	iret   
  406718:	(bad)  
  406719:	fs sahf 
  40671b:	out    dx,eax
  40671c:	int    0xd3
  40671e:	lock dec eax
  406720:	inc    edi
  406721:	adc    BYTE PTR [eax+ecx*1-0x37],dh
  406725:	add    ebp,DWORD PTR [esi+0xe]
  406728:	shl    DWORD PTR [edx-0x51aac6b8],0x8
  40672f:	mov    BYTE PTR [ebx-0x1f],bl
  406732:	mov    ebp,0x2eaf90b0
  406737:	daa    
  406738:	inc    ecx
  406739:	jmp    0x406777
  40673b:	outs   dx,BYTE PTR ds:[esi]
  40673c:	xchg   esi,eax
  40673d:	jle    0x406733
  40673f:	fwait
  406740:	jno    0x40672b
  406742:	bound  ecx,QWORD PTR [edx-0x48a55364]
  406748:	mov    eax,ds:0xf13b2ede
  40674d:	shr    BYTE PTR [edi-0x61b98a2a],cl
  406753:	inc    edx
  406754:	pop    ss
  406755:	out    0x60,al
  406757:	ror    BYTE PTR [esi],1
  406759:	adc    ecx,esi
  40675b:	or     BYTE PTR [eax+0x1d],bl
  40675e:	sub    edx,ecx
  406760:	pop    esi
  406761:	test   al,0xd3
  406763:	ficomp WORD PTR [eax-0x79]
  406766:	stc    
  406767:	enter  0x19c1,0x52
  40676b:	mov    ds:0xb15e5ec6,al
  406770:	jne    0x406750
  406772:	inc    ecx
  406773:	xchg   esi,eax
  406774:	xchg   DWORD PTR [edi+0x561b6b59],edi
  40677a:	sahf   
  40677b:	adc    edx,DWORD PTR [edi+0x379fa526]
  406781:	mov    ebx,0x972908cf
  406786:	in     al,0xcd
  406788:	jne    0x406769
  40678a:	adc    bh,BYTE PTR ds:0xa0405756
  406790:	add    eax,0x170365ad
  406795:	or     dl,BYTE PTR [esp+edx*4-0x653b3cea]
  40679c:	(bad)  
  40679d:	fdivr  DWORD PTR [edx-0x3731678b]
  4067a3:	cmp    edi,DWORD PTR [ebx]
  4067a5:	fdiv   st(5),st
  4067a7:	daa    
  4067a8:	bound  eax,QWORD PTR [ecx+ecx*2+0x69]
  4067ac:	fidivr DWORD PTR ds:0xa4722b1b
  4067b2:	(bad)  
  4067b3:	lock inc edx
  4067b5:	test   BYTE PTR [ecx-0x29],dl
  4067b8:	dec    ebp
  4067b9:	push   edi
  4067ba:	push   eax
  4067bb:	or     bh,bh
  4067bd:	sub    eax,0x17109054
  4067c2:	stos   DWORD PTR es:[edi],eax
  4067c3:	jmp    0xca9f7e1e
  4067c8:	or     ebx,DWORD PTR [ecx+0xaca342f]
  4067ce:	push   0x6c8b28f8
  4067d3:	jnp    0x40683e
  4067d5:	adc    ah,BYTE PTR [edi+0x1ea7bf33]
  4067db:	iret   
  4067dc:	popa   
  4067dd:	mov    ch,0xe9
  4067df:	sar    BYTE PTR [esi+ebx*8-0x5f54a88c],1
  4067e6:	loope  0x4067e0
  4067e8:	dec    esp
  4067e9:	mov    cl,0x9e
  4067eb:	sbb    al,0x2e
  4067ed:	dec    esi
  4067ee:	popa   
  4067ef:	mov    eax,ds:0x86d71bb
  4067f4:	xlat   BYTE PTR ds:[ebx]
  4067f5:	mov    bl,0xd2
  4067f7:	jecxz  0x406848
  4067f9:	out    0xba,al
  4067fb:	cmp    al,0x56
  4067fd:	es js  0x406784
  406800:	xor    DWORD PTR [ecx+0xa951588],eax
  406806:	enter  0x939b,0xfb
  40680a:	xchg   edx,eax
  40680b:	and    BYTE PTR [edx+0x43],ch
  40680e:	mov    edx,0xbd38eac
  406813:	dec    ecx
  406814:	outs   dx,DWORD PTR ds:[esi]
  406815:	mov    ds:0xd60018bb,al
  40681a:	sahf   
  40681b:	mov    ebx,0xc30ed288
  406820:	in     eax,dx
  406821:	mov    edx,0x9a975e9e
  406826:	shr    esp,0xf5
  406829:	mov    edi,0xbc64244b
  40682e:	lea    esp,[edi]
  406830:	sbb    eax,0xeed8ea82
  406835:	pop    ebp
  406836:	xchg   esp,eax
  406837:	gs and edi,ebx
  40683a:	cvtdq2ps xmm6,XMMWORD PTR [ecx+ecx*8-0x2]
  40683f:	mov    cl,0xba
  406841:	push   edi
  406842:	outs   dx,DWORD PTR ds:[esi]
  406843:	pop    ds
  406844:	ds fwait
  406846:	sub    DWORD PTR ds:0x99689a24,eax
  40684c:	fild   QWORD PTR [edi]
  40684e:	test   al,0xdb
  406850:	pop    edi
  406851:	out    dx,eax
  406852:	mov    esp,0xf3851288
  406857:	scas   al,BYTE PTR es:[edi]
  406858:	push   ss
  406859:	int3   
  40685a:	push   es
  40685b:	sub    al,0xb7
  40685d:	inc    edx
  40685e:	mov    eax,0x3dfc63b6
  406863:	dec    esp
  406864:	nop
  406865:	in     eax,dx
  406866:	xor    esi,DWORD PTR [edx-0x2d45ca9d]
  40686c:	push   ds
  40686d:	daa    
  40686e:	sub    esi,esp
  406870:	push   ebx
  406871:	neg    edx
  406873:	dec    esp
  406874:	cmp    al,0x83
  406876:	ret    0x1a35
  406879:	cli    
  40687a:	inc    ebx
  40687b:	inc    eax
  40687c:	loopne 0x406819
  40687e:	lods   eax,DWORD PTR ds:[esi]
  40687f:	add    eax,0x102a9a17
  406884:	fisttp WORD PTR [eax-0x64aab858]
  40688a:	(bad)  
  40688b:	call   0x3bd8f757
  406890:	xor    eax,0x4f81c64a
  406895:	sbb    BYTE PTR ds:0xbd96c603,bh
  40689b:	cdq    
  40689c:	mov    ah,0x28
  40689e:	in     eax,dx
  40689f:	arpl   WORD PTR [ebx-0x27],bx
  4068a2:	pop    ss
  4068a3:	or     eax,DWORD PTR [eax+edx*4-0x62]
  4068a7:	cmp    BYTE PTR [ecx],0x2c
  4068aa:	btr    DWORD PTR [eax+esi*4-0x2],0x7b
  4068b0:	pop    edx
  4068b1:	push   edi
  4068b2:	or     al,0x1a
  4068b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068b5:	sbb    ebp,DWORD PTR cs:[edi-0x44]
  4068b9:	dec    edi
  4068ba:	dec    ebx
  4068bb:	sub    cl,BYTE PTR [ecx+0x4e]
  4068be:	xor    BYTE PTR [edx+0x3a8c7ef8],bh
  4068c4:	jb     0x406945
  4068c6:	repnz push ds
  4068c8:	loopne 0x40693e
  4068ca:	mov    esp,0x435b120e
  4068cf:	scas   al,BYTE PTR es:[edi]
  4068d0:	dec    esp
  4068d1:	int3   
  4068d2:	xor    BYTE PTR [eax+edx*1],ch
  4068d5:	inc    edx
  4068d6:	setnp  BYTE PTR [ebp+0x44f717b1]
  4068dd:	cs sahf 
  4068df:	mov    al,0x39
  4068e1:	adc    cl,BYTE PTR [edi]
  4068e3:	jg     0x406911
  4068e5:	xor    DWORD PTR [edx],0x35
  4068e8:	dec    ecx
  4068e9:	cli    
  4068ea:	inc    ebp
  4068eb:	inc    eax
  4068ec:	adc    DWORD PTR [ebx+0x3fb80553],ebx
  4068f2:	mov    WORD PTR [ebx-0x740dbd8e],cs
  4068f8:	loopne 0x40688a
  4068fa:	mov    esp,0x445c13f3
  4068ff:	add    edx,DWORD PTR [esi-0x6a]
  406902:	cli    
  406903:	cdq    
  406904:	ja     0x40692e
  406906:	imul   esp,DWORD PTR [ebx+0x4b],0x6f
  40690a:	pop    ss
  40690b:	pop    es
  40690c:	inc    esp
  40690d:	fcomp  DWORD PTR [esi+0xf9139b9]
  406913:	stos   BYTE PTR es:[edi],al
  406914:	je     0x406979
  406916:	(bad)  
  406917:	xor    DWORD PTR [ebx+0x57],edi
  40691a:	jnp    0x406936
  40691c:	adc    eax,0x7a6fa72e
  406921:	dec    edi
  406922:	xor    ebp,DWORD PTR [edx]
  406924:	out    dx,eax
  406925:	dec    esi
  406926:	jb     0x4068ca
  406928:	clc    
  406929:	xchg   edx,eax
  40692a:	mov    WORD PTR [ebx-0x470d088e],?
  406930:	loopne 0x406994
  406932:	mov    esp,0xcc3e12cd
  406937:	scas   al,BYTE PTR es:[edi]
  406938:	lods   eax,DWORD PTR ds:[esi]
  406939:	int3   
  40693a:	imul   BYTE PTR [esi*1+0x61b67042]
  406941:	cld    
  406942:	fimul  WORD PTR [esi+esi*2+0x77]
  406946:	xor    ebx,edi
  406948:	inc    si
  40694a:	pcmpgtw mm6,QWORD PTR [ecx+eax*2-0x2]
  40694f:	aam    0x9d
  406951:	push   edi
  406952:	dec    esi
  406953:	sbb    bh,BYTE PTR [edx]
  406955:	and    ebp,DWORD PTR cs:[edi-0x75]
  406959:	dec    edi
  40695a:	mov    esp,0xa04e922a
  40695f:	(bad)  
  406960:	clc    
  406961:	xor    DWORD PTR [edi+ecx*8-0x260d348e],ecx
  406968:	loopne 0x406952
  40696a:	mov    esp,0x9c2212c7
  40696f:	scas   al,BYTE PTR es:[edi]
  406970:	aad    0xcc
  406972:	jp     0x4069a0
  406974:	pop    ebx
  406975:	inc    edx
  406976:	and    DWORD PTR [esi+0x4c5cfc13],esi
  40697c:	mov    esi,0x63d23354
  406981:	pusha  
  406982:	mov    edx,0x2ba31e74
  406987:	xchg   esp,eax
  406988:	push   ebx
  406989:	in     eax,0xda
  40698b:	scas   eax,DWORD PTR es:[edi]
  40698c:	cmp    BYTE PTR [ebx-0x587ca3f],al
  406992:	push   0x40
  406994:	push   edi
  406995:	fwait
  406996:	adc    al,BYTE PTR ds:0xe09a14
  40699c:	fst    st(6)
  40699e:	repnz (bad) 
  4069a0:	loopne 0x4069b2
  4069a2:	mov    esp,0x15dc12dc
  4069a7:	lods   al,BYTE PTR ds:[esi]
  4069a8:	in     eax,dx
  4069a9:	xchg   esi,eax
  4069aa:	scas   al,BYTE PTR es:[edi]
  4069ab:	cdq    
  4069ac:	xchg   esi,eax
  4069ad:	sub    BYTE PTR [ebp+0x176ed763],cl
  4069b3:	sbb    eax,0xd09e4044
  4069b8:	cmp    eax,edx
  4069ba:	(bad)  
  4069bc:	je     0x406945
  4069be:	pop    edi
  4069bf:	xor    eax,0x4041fa25
  4069c4:	mov    ch,0x9b
  4069c6:	mov    eax,ds:0xe19ac905
  4069cb:	or     al,0xdf
  4069cd:	push   edi
  4069ce:	test   al,0x54
  4069d0:	push   ebp
  4069d1:	lock (bad) 
  4069d3:	push   edx
  4069d4:	(bad)  
  4069d5:	pop    eax
  4069d6:	cwde   
  4069d7:	adc    al,0x35
  4069d9:	int    0x12
  4069db:	sub    DWORD PTR [eax+ebx*1],0x96f80334
  4069e2:	jo     0x40697d
  4069e4:	arpl   WORD PTR [eax],bp
  4069e6:	push   edi
  4069e7:	fsub   QWORD PTR [ebx-0x79]
  4069ea:	mov    edx,0x2b731e37
  4069ef:	cwde   
  4069f0:	push   ebx
  4069f1:	xor    al,0xdb
  4069f3:	push   ebx
  4069f4:	lods   al,BYTE PTR ds:[esi]
  4069f5:	cs cmp al,0x6f
  4069f8:	lock dec edi
  4069fa:	mov    al,ds:0xe54e7a2a
  4069ff:	push   ebp
  406a00:	clc    
  406a01:	ror    BYTE PTR [ebx+eax*4+0x56f24b72],cl
  406a08:	loopne 0x406a0a
  406a0a:	mov    esp,0xdb9a1294
  406a0f:	scas   al,BYTE PTR es:[edi]
  406a10:	add    esp,ecx
  406a12:	jmp    0x14b6:0x1d42142c
  406a19:	cld    
  406a1a:	cmp    cl,BYTE PTR [eax+ecx*1+0x61]
  406a1e:	xor    esp,DWORD PTR [edx+0x63]
  406a21:	xchg   BYTE PTR [edx-0x97f4f5],bh
  406a27:	dec    edx
  406a28:	mov    bh,0xfa
  406a2a:	rol    BYTE PTR [eax-0x7f],cl
  406a2d:	fwait
  406a2e:	jno    0x406a35
  406a30:	xor    eax,0xdf523d9a
  406a35:	adc    DWORD PTR [eax-0x29e1aad7],ebp
  406a3b:	jge    0x406a04
  406a3d:	cli    
  406a3e:	cwde   
  406a3f:	mov    al,0x35
  406a41:	daa    
  406a42:	rol    DWORD PTR [ecx+0x3c018ca],0x28
  406a49:	xchg   esi,eax
  406a4a:	sbb    eax,0xd3287799
  406a4f:	arpl   WORD PTR [ecx+0x44711757],di
  406a55:	xor    al,0x9e
  406a57:	push   esi
  406a58:	cmp    DWORD PTR [ecx-0x598b5af1],edx
  406a5e:	(bad)  
  406a5f:	sbb    eax,0x1aaf573b
  406a64:	gs lds ebp,FWORD PTR cs:[edi+0x6]
  406a69:	dec    edi
  406a6a:	xor    BYTE PTR [edx],ch
  406a6c:	test   BYTE PTR [esi-0x6f],0x4f
  406a70:	clc    
  406a71:	and    ecx,DWORD PTR [esp+eiz*2-0xb0d0d8e]
  406a78:	loopne 0x406a56
  406a7a:	mov    esp,0x9218a387
  406a7f:	add    esi,DWORD PTR [ebx+0x5e99e596]
  406a85:	sub    BYTE PTR ds:0xbab463c8,bh
  406a8b:	mov    bl,BYTE PTR [esi]
  406a8d:	push   ss
  406a8e:	sub    edx,DWORD PTR [ebx-0x1525d3ad]
  406a94:	mov    ds:0x13350483,al
  406a99:	cli    
  406a9a:	pusha  
  406a9b:	inc    eax
  406a9c:	add    eax,0x9005ef9b
  406aa1:	call   0xb8a8:0xe5dfe475
  406aa8:	push   ebp
  406aa9:	into   
  406aaa:	(bad)  
  406aab:	sub    bl,0xce
  406aae:	mov    edi,0x139685ac
  406ab3:	cdq    
  406ab4:	or     ebp,DWORD PTR [eax]
  406ab6:	outs   dx,BYTE PTR ds:[esi]
  406ab7:	arpl   WORD PTR [ebp+eiz*1+0x17],sp
  406abb:	loope  0x406b01
  406abd:	dec    ecx
  406abe:	sahf   
  406abf:	mov    ecx,0x830f9c39
  406ac4:	je     0x406b17
  406ac6:	dec    cl
  406ac8:	jnp    0x406b21
  406aca:	xchg   ecx,eax
  406acb:	sbb    cl,BYTE PTR [eax+0x24]
  406ace:	stos   DWORD PTR es:[edi],eax
  406acf:	add    eax,0x78739af7
  406ad4:	fistp  QWORD PTR [eax-0x58]
  406ad7:	fcom   DWORD PTR [ebp-0x1a]
  406ada:	(bad)  
  406adb:	ffree  st(7)
  406add:	xor    ebx,DWORD PTR [eax-0x3587ca02]
  406ae3:	cmp    DWORD PTR [eax+0x18],0x969603dd
  406aea:	or     BYTE PTR [ecx+0x637f28c7],bl
  406af0:	push   ecx
  406af1:	xchg   ebp,eax
  406af2:	pop    ss
  406af3:	adc    al,BYTE PTR [eax+esi*4-0x62]
  406af7:	or     eax,0x1f0f3e39
  406afc:	je     0x406b05
  406afe:	(bad)  
  406aff:	loopne 0x406ada
  406b01:	push   edi
  406b02:	aaa    
  406b03:	sbb    cl,BYTE PTR [edi+0x2e]
  406b06:	mov    ebp,0xfe4fac6f
  406b0b:	sub    dh,BYTE PTR [eax+0x4e]
  406b0e:	dec    edi
  406b0f:	sbb    al,0xf8
  406b11:	mov    al,ds:0xcc72218c
  406b16:	repnz fneni(8087 only) 
  406b19:	das    
  406b1a:	in     eax,0x81
  406b1c:	rcr    DWORD PTR [eax],cl
  406b1e:	cwde   
  406b1f:	add    esp,DWORD PTR [eax-0x6a]
  406b22:	mov    edx,0x88286b99
  406b27:	arpl   ax,dx
  406b29:	icebp  
  406b2a:	pop    ss
  406b2b:	cmp    BYTE PTR [eax+ebx*2-0x62],al
  406b2f:	les    edi,FWORD PTR [ecx]
  406b31:	enter  0xb10f,0x74
  406b35:	inc    edx
  406b36:	inc    BYTE PTR [ebx-0x3]
  406b39:	push   edi
  406b3a:	mov    eax,ds:0x2a2e7a1a
  406b3f:	outs   dx,DWORD PTR ds:[esi]
  406b40:	aas    
  406b41:	dec    edi
  406b42:	dec    edi
  406b43:	sub    dh,ah
  406b45:	dec    esi
  406b46:	mov    cl,0xa6
  406b48:	clc    
  406b49:	add    BYTE PTR [esi+eax*4-0x450d4a8e],cl
  406b50:	loopne 0x406b9e
  406b52:	mov    esp,0xa94c12c4
  406b57:	scas   al,BYTE PTR es:[edi]
  406b58:	leave  
  406b59:	int3   
  406b5a:	imul   ebp,DWORD PTR [ecx+edi*8],0xe2b63a42
  406b61:	cld    
  406b62:	mov    bl,0x4c
  406b64:	inc    esp
  406b65:	xchg   ebx,eax
  406b66:	xor    ebx,DWORD PTR [edx+0x63]
  406b69:	mov    ebp,0x721eb3ba
  406b6e:	add    al,0xe3
  406b70:	(bad)  
  406b71:	push   ebp
  406b72:	adc    dl,BYTE PTR [esi-0xc]
  406b75:	out    dx,eax
  406b76:	test   al,0xe8
  406b78:	push   ebp
  406b79:	ss (bad) 
  406b7b:	xchg   ebx,eax
  406b7c:	(bad)  
  406b7d:	cmp    al,0x98
  406b7f:	cs xor eax,0x75812ca2
  406b85:	sbb    BYTE PTR [esi],ch
  406b87:	add    edx,DWORD PTR [edi]
  406b89:	xchg   esi,eax
  406b8a:	and    bl,BYTE PTR [ecx+0x636a289c]
  406b90:	test   eax,0x44d21746
  406b95:	pop    edx
  406b96:	sahf   
  406b97:	sar    DWORD PTR [ecx],1
  406b99:	or     BYTE PTR [edi],cl
  406b9b:	mov    eax,0x35be8323
  406ba0:	(bad)  
  406ba1:	cli    
  406ba2:	push   ss
  406ba3:	inc    eax
  406ba4:	dec    ecx
  406ba5:	fwait
  406ba6:	jmp    0x406bad
  406ba8:	fwait
  406ba9:	call   0x3aa8:0x4bdf7cab
  406bb0:	push   ebp
  406bb1:	or     al,0xd6
  406bb3:	pop    esi
  406bb4:	(bad)  
  406bb5:	dec    ebp
  406bb6:	cwde   
  406bb7:	inc    esi
  406bb8:	xor    eax,0x6a818ad2
  406bbd:	sbb    BYTE PTR [ebp+0x7b96b803],bl
  406bc3:	cdq    
  406bc4:	out    0x28,eax
  406bc6:	arpl   WORD PTR gs:[edx],ax
  406bc9:	adc    BYTE PTR [edi],dl
  406bcb:	aas    
  406bcc:	inc    esp
  406bcd:	(bad)  
  406bce:	sahf   
  406bcf:	lea    edi,[ecx]
  406bd1:	mov    cl,0xf
  406bd3:	shl    DWORD PTR [ecx+edi*8-0x2],cl
  406bd7:	jecxz  0x406c1e
  406bd9:	push   edi
  406bda:	ficomp WORD PTR [edx]
  406bdc:	xchg   ebp,eax
  406bdd:	cs lahf 
  406bdf:	outs   dx,DWORD PTR ds:[esi]
  406be0:	cmp    BYTE PTR [edi+0xb],cl
  406be3:	sub    dl,BYTE PTR [edi+0x4e]
  406be6:	or     ebx,eax
  406be8:	clc    
  406be9:	pop    ds
  406bea:	mov    WORD PTR [edx+esi*2-0x1f840d44],cs
  406bf1:	mov    DWORD PTR [esp+edi*8-0x5152b4ee],edi
  406bf8:	push   esi
  406bf9:	int3   
  406bfa:	xor    eax,0x4042cb2c
  406bff:	mov    dh,0x92
  406c01:	cld    
  406c02:	scas   al,BYTE PTR es:[edi]
  406c03:	dec    esp
  406c04:	and    dh,al
  406c06:	xor    esp,DWORD PTR ds:0x22ba3b63
  406c0c:	push   ds
  406c0d:	aas    
  406c0e:	sub    eax,DWORD PTR [ebp+0x53]
  406c11:	outs   dx,DWORD PTR ds:[esi]
  406c12:	fidiv  DWORD PTR [edx+0x354483bc]
  406c18:	pop    esi
  406c19:	cli    
  406c1a:	rol    BYTE PTR [eax+0x10],cl
  406c1d:	fwait
  406c1e:	imul   eax,DWORD PTR ds:0x650c9afe,0x99a858df
  406c28:	push   ebp
  406c29:	stos   BYTE PTR es:[edi],al
  406c2a:	(bad)  
  406c2b:	call   0xe5d92ff7
  406c30:	call   0x5b42:0xef2cc6cc
  406c37:	mov    dh,0xf9
  406c39:	cld    
  406c3a:	mov    esi,0x33d5984c
  406c3f:	cmp    eax,0x5bba8f63
  406c44:	push   ds
  406c45:	outs   dx,BYTE PTR ds:[esi]
  406c46:	sub    ecx,DWORD PTR [ebx+edx*2+0x5f]
  406c4a:	fiadd  DWORD PTR [eax]
  406c4c:	push   ds
  406c4d:	cmp    edi,0x35
  406c50:	scas   eax,DWORD PTR es:[edi]
  406c51:	cli    
  406c52:	in     eax,0x40
  406c54:	and    eax,0x6e05f19b
  406c59:	call   0xe2a8:0xbfdfe3cb
  406c60:	push   ebp
  406c61:	jmp    0xb5535727
  406c66:	mov    ecx,0x51cc67ae
  406c6b:	sub    al,0x2f
  406c6d:	inc    edx
  406c6e:	mov    ebp,0x44fc18b6
  406c73:	dec    esp
  406c74:	push   ebx
  406c75:	xor    eax,DWORD PTR ds:[ecx-0x4450f9d]
  406c7c:	or     BYTE PTR [eax+0x57f2d1fe],ch
  406c82:	(bad)  
  406c83:	sbb    ah,BYTE PTR [edi]
  406c85:	cs aam 0x6f
  406c88:	push   eax
  406c89:	dec    edi
  406c8a:	inc    ebx
  406c8b:	jge    0x406c6c
  406c8d:	in     al,dx
  406c8e:	test   al,0x73
  406c90:	push   ebp
  406c91:	sbb    dl,dh
  406c93:	push   cs
  406c94:	(bad)  
  406c95:	pop    edx
  406c96:	cwde   
  406c97:	mov    edi,0x81de6335
  406c9c:	(bad)  
  406c9d:	sbb    BYTE PTR [edx+0x8],dl
  406ca0:	inc    eax
  406ca1:	cld    
  406ca2:	xchg   DWORD PTR [esi+ebx*4+0x76],ecx
  406ca6:	xor    esp,DWORD PTR [ebp+0x63]
  406ca9:	pop    edx
  406caa:	mov    al,0x19
  406cac:	je     0x406c38
  406cae:	dec    BYTE PTR [eax+eiz*2]
  406cb1:	push   edi
  406cb2:	les    ebx,FWORD PTR [edx]
  406cb4:	pop    eax
  406cb5:	cs aas 
  406cb7:	outs   dx,DWORD PTR ds:[esi]
  406cb8:	fisttp WORD PTR [edi-0x4d]
  406cbb:	jno    0x406c9c
  406cbd:	push   esi
  406cbe:	test   al,0x7c
  406cc0:	pop    esi
  406cc1:	outs   dx,DWORD PTR ds:[esi]
  406cc2:	jecxz  0x406c45
  406cc4:	add    DWORD PTR [eax],ebx
  406cc6:	push   esp
  406cc7:	add    ebp,edx
  406cc9:	xchg   esi,eax
  406cca:	pop    esi
  406ccb:	cdq    
  406ccc:	mov    ch,BYTE PTR [eax]
  406cce:	int    0x63
  406cd0:	arpl   WORD PTR [ebp+0x17],cx
  406cd3:	test   al,0x44
  406cd5:	sub    BYTE PTR [esi+0xfd7393c],bl
  406cdb:	xor    DWORD PTR [esp+edi*4-0x2],0x39
  406ce0:	adc    BYTE PTR [edi-0x15],0x1a
  406ce4:	iret   
  406ce5:	lds    ebp,FWORD PTR cs:[edi+0x70]
  406ce9:	dec    edi
  406cea:	in     al,dx
  406ceb:	sub    dh,BYTE PTR [eax]
  406ced:	dec    esi
  406cee:	inc    ecx
  406cef:	fs clc 
  406cf1:	std    
  406cf2:	mov    ebp,fs
  406cf4:	jb     0x406ce4
  406cf6:	repnz push ss
  406cf8:	retf   0x99a
  406cfb:	adc    DWORD PTR [eax-0x35fc0fe8],0x7f996796
  406d05:	sub    BYTE PTR [ebx+eiz*2],ah
  406d08:	ret    
  406d09:	pop    eax
  406d0a:	pop    ss
  406d0b:	leave  
  406d0c:	inc    esp
  406d0d:	mov    ecx,0x4a39579e
  406d12:	psraw  mm6,QWORD PTR [esi+esi*8-0x2]
  406d17:	xlat   BYTE PTR ds:[ebx]
  406d18:	rol    al,0xc0
  406d1b:	rol    al,0xc0
  406d1e:	rol    al,0xc0
  406d21:	rol    al,0xc0
  406d24:	rol    al,0xc0
  406d27:	rol    al,0xc0
  406d2a:	rol    al,0xc0
  406d2d:	rol    al,0xc0
  406d30:	or     al,0x57
  406d32:	lods   eax,DWORD PTR ds:[esi]
  406d33:	sbb    bl,BYTE PTR [edi]
  406d35:	sub    BYTE PTR cs:[edi-0x45],0x4f
  406d3a:	dec    edx
  406d3b:	sub    ah,BYTE PTR [ebx-0x76f3fb2]
  406d41:	jae    0x406ccf
  406d43:	xor    dh,BYTE PTR [edx+0x72]
  406d46:	bnd js 0x406d29
  406d49:	mov    al,ds:0xd21285bc
  406d4e:	sub    DWORD PTR [esi+0x2cc3ccb2],0xffffff86
  406d55:	inc    edx
  406d56:	outs   dx,DWORD PTR ds:[esi]
  406d57:	mov    dh,0x54
  406d59:	cld    
  406d5a:	xor    cl,BYTE PTR [esi+ecx*2-0x6a]
  406d5e:	xor    ebx,esi
  406d60:	cmp    eax,edi
  406d62:	sqrtps xmm6,XMMWORD PTR [eax+edx*4-0x2]
  406d67:	push   0x1a6157e4
  406d6c:	jmp    0xf14f:0x966faf2e
  406d73:	sub    cl,cl
  406d75:	dec    esi
  406d76:	or     al,BYTE PTR [ebx-0x52731e08]
  406d7c:	jb     0x406d26
  406d7e:	repnz imul esp,eax,0x1298bc5c
  406d85:	lods   eax,DWORD PTR ds:[esi]
  406d86:	mov    esi,0x53cc9dae
  406d8b:	sub    al,0xc7
  406d8d:	inc    edx
  406d8e:	div    DWORD PTR [esi+0x4c34fc9e]
  406d94:	rcr    bl,0x33
  406d97:	dec    ebp
  406d98:	arpl   dx,si
  406d9a:	mov    edx,0x2b541e6d
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	push   ebx
  406da1:	pop    ecx
  406da2:	fiadd  DWORD PTR [ebx]
  406da4:	xor    DWORD PTR [ebx-0x59eca9f],eax
  406daa:	dec    eax
  406dab:	inc    eax
  406dac:	sbb    DWORD PTR [ebx+0x2389051b],0x6b72a18c
  406db6:	repnz cmp esp,eax
  406db9:	cdq    
  406dba:	mov    esp,0xaef812da
  406dbf:	scas   al,BYTE PTR es:[edi]
  406dc0:	mov    dh,0xcc
  406dc2:	imul   ebp,DWORD PTR [ebx+ebp*4],0x35b68742
  406dc9:	cld    
  406dca:	xor    DWORD PTR [esi+edi*1+0x2e],ecx
  406dce:	xor    eax,DWORD PTR [ebx+eiz*2+0x1eeabac3]
  406dd5:	sub    ebp,DWORD PTR ss:[edx]
  406dd8:	push   ebx
  406dd9:	jbe    0x406e3e
  406ddb:	sbb    ah,dl
  406ddd:	cs in  al,dx
  406ddf:	outs   dx,DWORD PTR ds:[esi]
  406de0:	mov    edx,0x3a2aac4f
  406de5:	dec    esi
  406de6:	add    ah,BYTE PTR [esi]
  406de8:	les    edi,FWORD PTR [eax+0x59b2979e]
  406dee:	loopne 0x406e1f
  406df0:	xlat   BYTE PTR ds:[ebx]
  406df1:	sub    dh,BYTE PTR [ebx+0x1f300f28]
  406df7:	fidiv  WORD PTR [eax]
  406df9:	mov    DWORD PTR [ebp-0x47e69fff],0x9cd6230d
  406e03:	fst    DWORD PTR [eax+edx*1]
  406e06:	mov    ebp,0xfbba1e64
  406e0b:	sub    DWORD PTR [esi+0x68],esi
  406e0e:	ret    
  406e0f:	jmp    0x406e44
  406e11:	mov    WORD PTR [eax-0x18bbe8bf],es
  406e17:	ins    BYTE PTR es:[edi],dx
  406e18:	out    dx,eax
  406e19:	fwait
  406e1a:	rcr    DWORD PTR [ebx-0x6f],0x6c
  406e1e:	aad    0x55
  406e20:	shr    BYTE PTR [esi-0x4dda5405],cl
  406e26:	aam    0x46
  406e28:	sbb    eax,0xbde7eb24
  406e2d:	in     al,0xa8
  406e2f:	xlat   BYTE PTR ds:[ebx]
  406e30:	or     BYTE PTR [eax+esi*4+0x5ff71f74],ah
  406e37:	push   ecx
  406e38:	call   0x3c936201
  406e3d:	jmp    0x406e17
  406e3f:	ficom  WORD PTR [edi+0x26]
  406e42:	jmp    0xe0ac96a8
  406e47:	or     esi,eax
  406e49:	mov    edi,0xf5a9094f
  406e4e:	or     ch,BYTE PTR [edi]
  406e50:	loop   0x406df0
  406e52:	jle    0x406e3c
  406e54:	xor    bl,BYTE PTR [eax+0x4a3993b2]
  406e5a:	(bad)  
  406e5c:	je     0x406eb0
  406e5e:	(bad)  
  406e5f:	sbb    edx,DWORD PTR [ecx+0x56]
  406e62:	bound  ebx,QWORD PTR [ecx-0x74572d29]
  406e68:	push   ebp
  406e69:	pop    edx
  406e6a:	(bad)  
  406e6b:	push   esp
  406e6c:	(bad)  
  406e6d:	ds cwde 
  406e6f:	aaa    
  406e70:	push   ecx
  406e71:	cmp    cl,BYTE PTR [esi]
  406e73:	dec    ebp
  406e74:	xchg   esi,eax
  406e75:	aam    0x9e
  406e77:	inc    edi
  406e78:	cmp    DWORD PTR [esi+0xb16200f],ecx
  406e7e:	push   edi
  406e7f:	out    dx,eax
  406e80:	js     0x406ee0
  406e82:	cvtps2pi mm6,QWORD PTR [esp+eiz*8-0x6d]
  406e87:	(bad)  
  406e88:	jo     0x406e5c
  406e8a:	mov    fs,edi
  406e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e8d:	cli    
  406e8e:	sub    al,0x3
  406e90:	and    ebp,DWORD PTR [edi]
  406e92:	xchg   edx,eax
  406e93:	shl    BYTE PTR [ebx+esi*2-0x5be94b7],0x30
  406e9b:	mov    eax,0x62920356
  406ea0:	and    DWORD PTR [eax+0xb],0xffffffe4
  406ea4:	clc    
  406ea5:	or     cl,BYTE PTR [esi-0x663282c0]
  406eab:	les    esp,FWORD PTR [ebx+0x659bbdbf]
  406eb1:	mov    WORD PTR [ebp+edi*1-0x408ab5da],?
  406eb8:	sbb    al,0xde
  406eba:	mov    dl,0xd1
  406ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ebd:	ret    0x98c0
  406ec0:	out    0x4a,eax
  406ec2:	sahf   
  406ec3:	es ds je 0x406f2b
  406ec7:	imul   esp,ecx,0x6a
  406eca:	pop    ebp
  406ecb:	or     edx,esi
  406ecd:	adc    bl,dl
  406ecf:	pop    eax
  406ed0:	cdq    
  406ed1:	repnz mov dh,0xdc
  406ed4:	retf   0xbb84
  406ed7:	icebp  
  406ed8:	jbe    0x406f46
  406eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edb:	sub    bh,BYTE PTR [esi+edi*2]
  406ede:	cmp    ah,BYTE PTR ds:0x7a80fd7a
  406ee4:	adc    ebp,DWORD PTR [ebx+eax*4+0x65]
  406ee8:	and    esi,ebx
  406eea:	(bad)  
  406eeb:	pop    ss
  406eec:	adc    BYTE PTR [esi-0x57],cl
  406eef:	jne    0x406f4d
  406ef1:	es std 
  406ef3:	pop    es
  406ef4:	add    DWORD PTR [edi],esi
  406ef6:	out    0x1e,eax
  406ef8:	icebp  
  406ef9:	retf   0x14c7
  406efc:	sbb    ebx,DWORD PTR [eax]
  406efe:	mov    ecx,0x278a617f
  406f03:	dec    esp
  406f04:	test   eax,0x83e74ce9
  406f09:	out    dx,eax
  406f0a:	jae    0x406f14
  406f0c:	adc    DWORD PTR [edi+0x23],edx
  406f0f:	jmp    0xbad0ada4
  406f14:	push   ecx
  406f15:	in     al,0x1f
  406f17:	mov    esp,0xb61e5d18
  406f1c:	pushf  
  406f1d:	add    al,BYTE PTR ds:0x53e4c827
  406f23:	xchg   edx,eax
  406f24:	adc    bl,cl
  406f26:	test   BYTE PTR [ecx+0x923f64f],bh
  406f2c:	std    
  406f2d:	out    0x61,eax
  406f2f:	popf   
  406f30:	inc    edx
  406f31:	adc    eax,0x160ae75a
  406f36:	cmp    edi,ebx
  406f38:	mov    esi,0xd3e8a89e
  406f3d:	xor    ebp,esp
  406f3f:	(bad)  
  406f40:	jno    0x406ecf
  406f42:	lods   al,BYTE PTR ds:[esi]
  406f43:	in     eax,0x42
  406f45:	mov    ecx,0xe4647de7
  406f4a:	popa   
  406f4b:	addr16 aad 0x51
  406f4e:	fidivr WORD PTR [ebx-0xb]
  406f51:	jge    0x406fb8
  406f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f54:	(bad)  
  406f55:	aas    
  406f56:	mov    ebp,0x50a74d58
  406f5b:	xor    eax,0x9744159a
  406f60:	icebp  
  406f61:	dec    ebx
  406f62:	cmp    eax,ebx
  406f64:	and    eax,ebx
  406f66:	jge    0x406f87
  406f68:	lds    edi,FWORD PTR [esi+ebx*1-0x6f215846]
  406f6f:	add    al,0xa8
  406f71:	pop    edi
  406f72:	xor    DWORD PTR [ebp+0x3c],0xc2113afc
  406f79:	lods   eax,DWORD PTR ds:[esi]
  406f7a:	out    dx,al
  406f7b:	xchg   ebp,eax
  406f7c:	ja     0x406f87
  406f7e:	jmp    0xadc35118
  406f83:	push   eax
  406f84:	(bad)  
  406f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f86:	das    
  406f87:	sbb    DWORD PTR [ecx+0x59],esi
  406f8a:	and    al,0x4a
  406f8c:	mov    ecx,fs
  406f8e:	add    eax,esi
  406f90:	inc    esp
  406f91:	fsubp  st(5),st
  406f93:	cmc    
  406f94:	add    eax,0x8375d981
  406f99:	push   0x5f7b2a9e
  406f9e:	ret    
  406f9f:	nop
  406fa0:	stos   BYTE PTR es:[edi],al
  406fa1:	cwde   
  406fa2:	mov    ds:0x8e6f5216,al
  406fa7:	daa    
  406fa8:	push   edi
  406fa9:	ins    BYTE PTR es:[edi],dx
  406faa:	cmp    DWORD PTR [edi],ebp
  406fac:	out    0x47,eax
  406fae:	mov    edx,0xb7458cbf
  406fb3:	fist   DWORD PTR [edi+0x5b244035]
  406fb9:	xor    al,0xce
  406fbb:	test   DWORD PTR [ecx+0x4a2c4a08],edi
  406fc1:	push   ss
  406fc2:	sahf   
  406fc3:	dec    ebx
  406fc4:	aad    0x3d
  406fc6:	dec    edi
  406fc7:	nop
  406fc8:	idiv   DWORD PTR [ebx-0x80]
  406fcb:	in     al,dx
  406fcc:	ror    BYTE PTR [edx],0x1a
  406fcf:	push   es
  406fd0:	xlat   BYTE PTR ss:[ebx]
  406fd2:	aaa    
  406fd3:	add    eax,DWORD PTR ds:0xa0fbba00
  406fd9:	dec    ecx
  406fda:	inc    edi
  406fdb:	mov    dl,0xc8
  406fdd:	movd   mm5,DWORD PTR [eax]
  406fe0:	mov    esi,0x16be5703
  406fe5:	adc    eax,0xb0b480a3
  406fea:	sahf   
  406feb:	mov    WORD PTR [ebx],ss
  406fed:	mov    esi,0x64300989
  406ff2:	push   ebx
  406ff3:	push   es
  406ff4:	int    0xf9
  406ff6:	mov    ds,edx
  406ff8:	xor    DWORD PTR [edx+0x1853b517],esi
  406ffe:	adc    DWORD PTR [edx],0x6e
  407001:	ret    
  407002:	call   0xe753063b
  407007:	cwde   
  407008:	aad    0xa5
  40700a:	and    al,0xf3
  40700c:	sbb    cl,0x98
  40700f:	daa    
  407010:	jns    0x407009
  407012:	repz adc al,0x9
  407015:	not    dl
  407017:	(bad)  
  407018:	jno    0x406fc8
  40701a:	xor    DWORD PTR [ecx+0x16],ebp
  40701d:	jb     0x407046
  40701f:	retf   
  407020:	pop    edi
  407021:	ror    BYTE PTR [ebx+0x7b98fb54],1
  407027:	test   DWORD PTR [edx+0x70],edx
  40702a:	push   cs
  40702b:	clc    
  40702c:	mov    ?,WORD PTR [edx+0x14ff29bb]
  407032:	cwde   
  407033:	pop    esi
  407034:	outs   dx,DWORD PTR ds:[esi]
  407035:	gs dec edx
  407037:	jb     0x40705e
  407039:	fiadd  WORD PTR [ebx+0x71e44fb]
  40703f:	lock sub ch,ah
  407042:	sahf   
  407043:	inc    ecx
  407044:	mov    ah,0x9c
  407046:	mov    ah,BYTE PTR [eax+0x9ad2472]
  40704c:	xchg   esi,eax
  40704d:	(bad)  
  40704f:	fnstcw WORD PTR [edx-0x5]
  407052:	daa    
  407053:	(bad)  
  407054:	lock outs dx,BYTE PTR ds:[esi]
  407056:	mov    ah,0xc7
  407058:	jnp    0x407073
  40705a:	add    ebp,DWORD PTR [eax-0x5dd0a60a]
  407060:	push   ebx
  407061:	fimul  WORD PTR [eax-0x27]
  407064:	dec    edi
  407065:	out    0xf6,al
  407067:	loop   0x406fed
  407069:	inc    edx
  40706a:	sahf   
  40706b:	(bad)  
  40706c:	fistp  WORD PTR [edi]
  40706e:	icebp  
  40706f:	dec    ecx
  407070:	adc    cl,BYTE PTR ds:0x18fe0904
  407076:	dec    esi
  407077:	jns    0x4070db
  407079:	aad    0xc
  40707b:	stc    
  40707c:	jnp    0x407044
  40707e:	hlt    
  40707f:	sbb    DWORD PTR [edx+0x14],esi
  407082:	mov    es,WORD PTR [ebx-0x18fd881d]
  407088:	cmp    al,0xfe
  40708a:	into   
  40708b:	or     BYTE PTR [edi],cl
  40708d:	xchg   edi,eax
  40708e:	inc    ebp
  40708f:	and    DWORD PTR [eax+0x9],esi
  407092:	and    bh,BYTE PTR [eax+0x473dac56]
  407098:	jbe    0x407102
  40709a:	stos   DWORD PTR es:[edi],eax
  40709b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709c:	pop    esi
  40709d:	or     al,dl
  40709f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a0:	push   0xf9b754d5
  4070a5:	jne    0x407068
  4070a7:	push   ds
  4070a8:	pop    es
  4070a9:	cs sahf 
  4070ab:	lds    esi,FWORD PTR [ebx+0x5ab78879]
  4070b1:	outs   dx,DWORD PTR ds:[esi]
  4070b2:	hlt    
  4070b3:	or     DWORD PTR ds:0xc423af26,eax
  4070b9:	jle    0x4070d8
  4070bb:	fnstenv [edx+0x71c7b72a]
  4070c1:	loope  0x40709c
  4070c3:	jns    0x407086
  4070c5:	add    al,0x7b
  4070c7:	pop    eax
  4070c8:	push   0x95467de
  4070cd:	xor    BYTE PTR [esi+0x1d],0x94
  4070d1:	shl    DWORD PTR [edi-0x314eb32a],1
  4070d7:	mov    al,ds:0x4dd15da4
  4070dc:	scas   eax,DWORD PTR es:[di]
  4070de:	xchg   esp,eax
  4070df:	cmp    esi,DWORD PTR [ebp+0x6e1493d4]
  4070e5:	dec    esi
  4070e6:	mov    ebp,0xff02223b
  4070eb:	dec    ecx
  4070ec:	cli    
  4070ed:	and    DWORD PTR [edi+0x3d322eb3],eax
  4070f3:	sbb    DWORD PTR [edx-0x66],esi
  4070f6:	xor    eax,0xc55e4cbf
  4070fb:	out    0x72,eax
  4070fd:	rol    bl,1
  4070ff:	mov    esp,0x40cfdc2d
  407104:	rcr    dh,1
  407106:	xchg   edi,eax
  407107:	push   edx
  407108:	xor    DWORD PTR [esi+0x7a],ebp
  40710b:	stc    
  40710c:	inc    ebp
  40710d:	loopne 0x4070ad
  40710f:	call   0x3d4f7e85
  407114:	(bad)  
  407115:	mov    al,0x81
  407117:	daa    
  407118:	add    DWORD PTR [ecx],0x4342115c
  40711e:	dec    ecx
  40711f:	mov    ch,BYTE PTR [esp+ebp*1+0x22]
  407123:	ins    BYTE PTR es:[edi],dx
  407124:	push   ss
  407125:	add    al,ah
  407127:	adc    edx,ebp
  407129:	dec    eax
  40712a:	inc    edi
  40712b:	or     BYTE PTR [edx],ah
  40712d:	or     eax,0xbdd13f43
  407132:	icebp  
  407133:	repnz push esi
  407135:	xor    dh,ch
  407137:	add    al,0x5f
  407139:	cmp    DWORD PTR [edi],ecx
  40713b:	in     eax,0x71
  40713d:	add    eax,0x6a488b2f
  407142:	cmp    eax,0x8a12327
  407147:	xchg   esi,edi
  407149:	dec    edx
  40714a:	rcl    esp,1
  40714c:	(bad)  
  40714d:	sar    DWORD PTR ds:0x9eca2441,0x56
  407154:	xor    edx,DWORD PTR [ebx+0x5f]
  407157:	or     eax,0x861189f
  40715c:	sti    
  40715d:	mov    WORD PTR [edi-0x47eb3e7e],gs
  407163:	mov    bh,0x56
  407165:	or     al,0x18
  407167:	xlat   BYTE PTR ds:[ebx]
  407168:	je     0x407166
  40716a:	sub    BYTE PTR [edi],0x48
  40716d:	or     dh,BYTE PTR [esi-0x7760b109]
  407173:	ss cdq 
  407175:	mov    edi,0x73083aa5
  40717a:	es xor al,0x55
  40717d:	mov    eax,DWORD PTR [ebx+0x842e4d2]
  407183:	pusha  
  407184:	bound  ebp,QWORD PTR [edx-0x4a]
  407187:	fild   QWORD PTR [eax+0x36]
  40718a:	(bad)  
  40718b:	jo     0x4071a3
  40718d:	jae    0x40717a
  40718f:	push   esp
  407190:	sub    al,0x46
  407192:	das    
  407193:	pop    ss
  407194:	cmp    al,0x4e
  407196:	xchg   DWORD PTR [eax+0x4fba815e],esp
  40719c:	fs dec edx
  40719e:	mov    ?,WORD PTR [ebx+eax*1-0x68]
  4071a2:	in     al,dx
  4071a3:	add    BYTE PTR [esi+0x12],dl
  4071a6:	jmp    0x257d:0x95d72b26
  4071ad:	repnz dec edi
  4071af:	xor    BYTE PTR [edi-0x44],bl
  4071b2:	mov    bh,0xa4
  4071b4:	pop    edx
  4071b5:	add    al,0xca
  4071b7:	pop    ds
  4071b8:	add    eax,0x2a86e690
  4071bd:	lds    edi,FWORD PTR [edx]
  4071bf:	sub    ch,dh
  4071c1:	xchg   ecx,eax
  4071c2:	push   ss
  4071c3:	xchg   edx,ebx
  4071c5:	lds    ebp,FWORD PTR [edx]
  4071c7:	call   0xc74683b1
  4071cc:	retf   0xa7c9
  4071cf:	sbb    eax,0x33ff4e9c
  4071d4:	adc    esi,DWORD PTR [ebx]
  4071d6:	xchg   BYTE PTR [edi+0x4b],dh
  4071d9:	and    DWORD PTR [ebp-0x46459553],0x37
  4071e0:	dec    esp
  4071e1:	shl    DWORD PTR [eax+0x1985c58a],cl
  4071e7:	mov    edi,0x62a1a9c1
  4071ec:	push   esi
  4071ed:	cmc    
  4071ee:	xor    esp,edi
  4071f0:	mov    ds:0x2fd1eb59,eax
  4071f5:	or     ebx,DWORD PTR [ecx+0x187cd11]
  4071fb:	push   cs
  4071fc:	cmp    ebp,edx
  4071fe:	call   DWORD PTR [ecx+0x71]
  407201:	lock retf 
  407203:	loopne 0x407268
  407205:	jb     0x40720a
  407207:	push   es
  407208:	dec    ebp
  407209:	fidiv  WORD PTR [ecx+0xc68d5d2]
  40720f:	mov    eax,0xdf99880c
  407214:	outs   dx,BYTE PTR ds:[esi]
  407215:	fs jmp 0x736f:0x13445150
  40721d:	or     cl,BYTE PTR [eax]
  40721f:	sbb    cl,dh
  407221:	mov    al,ds:0x3346421d
  407226:	mov    edx,0xa815029
  40722b:	inc    esp
  40722c:	push   ebp
  40722d:	xchg   esi,eax
  40722e:	(bad)
  407232:	inc    edi
  407233:	or     eax,0x93b30df4
  407238:	mov    WORD PTR [edi-0x62],?
  40723b:	inc    ebp
  40723c:	ret    0x397a
  40723f:	adc    DWORD PTR [ebx-0x3f704d5],ebx
  407245:	ror    BYTE PTR [ebx+0x68fa4347],cl
  40724b:	and    BYTE PTR [esi+0x2d],dl
  40724e:	mov    dh,0xd8
  407250:	rcr    DWORD PTR [edi-0x12],0x55
  407254:	mov    DWORD PTR ds:0xb4771248,0x20558d97
  40725e:	jno    0x407241
  407260:	loope  0x407201
  407262:	dec    esp
  407263:	adc    BYTE PTR [esi+0x7c],0xc5
  407267:	shl    BYTE PTR [esi-0x5df9c5a4],1
  40726d:	paddb  mm3,QWORD PTR ds:0x883048c4
  407274:	pop    ecx
  407275:	sub    BYTE PTR [ecx-0x6a758eb8],0xaf
  40727c:	jmp    0xed54932c
  407281:	in     eax,0x1b
  407283:	adc    DWORD PTR [esi-0x59],0x954625ac
  40728a:	in     eax,dx
  40728b:	out    dx,eax
  40728c:	dec    ebx
  40728d:	jle    0x40723a
  40728f:	ins    DWORD PTR es:[edi],dx
  407290:	mov    edi,0x924680eb
  407295:	push   0x2f
  407297:	or     BYTE PTR [ecx-0xa],al
  40729a:	add    BYTE PTR [ebx],dh
  40729c:	rcl    DWORD PTR [ecx+0x3a],cl
  40729f:	scas   eax,DWORD PTR es:[edi]
  4072a0:	and    ch,BYTE PTR [ecx+edx*2]
  4072a3:	fsub   QWORD PTR [ebp-0x68]
  4072a6:	push   esp
  4072a7:	inc    ecx
  4072a8:	jno    0x407319
  4072aa:	adc    ch,bh
  4072ac:	jne    0x4072d8
  4072ae:	sub    esp,edx
  4072b0:	call   0x209:0xa47fe8d1
  4072b7:	(bad)  
  4072b8:	sbb    al,0x5e
  4072ba:	sahf   
  4072bb:	fisubr WORD PTR [ebx+0x35]
  4072be:	nop
  4072bf:	mov    edi,0x446bd21f
  4072c4:	jmp    0x40728c
  4072c6:	loope  0x40728f
  4072c8:	mov    DWORD PTR ds:0x91c0f19e,ebp
  4072ce:	xchg   esi,eax
  4072cf:	add    DWORD PTR [edi+0x61],0x26
  4072d3:	sbb    dh,BYTE PTR [edi-0x77daf426]
  4072d9:	mov    ebx,0x5b15a8c9
  4072de:	sbb    DWORD PTR [ecx+ecx*4-0x5f4dbb53],eax
  4072e5:	gs mov edi,0x857d381
  4072eb:	adc    esi,edx
  4072ed:	dec    eax
  4072ee:	popf   
  4072ef:	jge    0x40727a
  4072f1:	ficom  WORD PTR [eax+eiz*4]
  4072f4:	adc    eax,0x64fef34d
  4072f9:	xchg   DWORD PTR [ebp+0x3c45da5e],ebx
  4072ff:	jns    0x40731f
  407301:	jle    0x40732c
  407303:	push   eax
  407304:	jmp    0x407300
  407306:	xor    al,0x27
  407308:	sub    ebp,DWORD PTR [esi+0x23045c8d]
  40730e:	test   al,0xf
  407310:	dec    ebx
  407311:	test   DWORD PTR [edi+0x61945934],ebp
  407317:	jg     0x407318
  407319:	nop
  40731a:	out    dx,eax
  40731b:	inc    ecx
  40731c:	sub    cl,BYTE PTR [edx]
  40731e:	out    dx,eax
  40731f:	mov    ch,0x14
  407321:	lock mov BYTE PTR [eax+0x3f],cl
  407325:	popf   
  407326:	adc    DWORD PTR [edi],0xffffffa5
  407329:	shr    BYTE PTR [edi],1
  40732b:	cmp    DWORD PTR [ebx-0x41eacab7],ebx
  407331:	dec    esi
  407332:	mov    esi,0xf6eed13c
  407337:	push   ds
  407338:	inc    esp
  407339:	dec    esp
  40733a:	nop
  40733b:	sbb    ah,BYTE PTR [eax+0x59]
  40733e:	icebp  
  40733f:	sar    DWORD PTR [edi-0x16],0xdd
  407343:	movq   mm1,QWORD PTR [edx+0x2a]
  407347:	fimul  DWORD PTR [ebx-0x2d]
  40734a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734b:	xor    ecx,DWORD PTR [eax+esi*1-0x5]
  40734f:	sbb    al,0x13
  407351:	loop   0x407367
  407353:	xor    eax,0x180e34fb
  407358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407359:	ficomp WORD PTR [esp+esi*1+0x72aab34e]
  407360:	xchg   ecx,eax
  407361:	sub    bh,bh
  407363:	push   eax
  407364:	aas    
  407365:	push   0x1920beba
  40736a:	jnp    0x407347
  40736c:	ret    
  40736d:	push   ebx
  40736e:	mov    edx,0x79e85cb4
  407373:	sidtd  [ebx+0x38]
  407377:	cmp    bh,ah
  407379:	sub    al,0x75
  40737b:	mov    BYTE PTR [esi-0x4ca94125],bh
  407381:	cmc    
  407382:	sahf   
  407383:	xchg   edx,eax
  407384:	rol    BYTE PTR [eax],cl
  407386:	fcomp  st(4)
  407388:	sub    DWORD PTR [ecx],esp
  40738a:	adc    eax,0x42e06608
  40738f:	dec    edi
  407390:	inc    eax
  407391:	das    
  407392:	in     al,dx
  407393:	sub    eax,0x7adfc251
  407398:	das    
  407399:	gs dec esi
  40739b:	popa   
  40739c:	push   ebp
  40739d:	hlt    
  40739e:	nop
  40739f:	xor    ch,cl
  4073a1:	push   ds
  4073a2:	add    eax,0x6e50f62a
  4073a7:	mov    WORD PTR [esi+0x6a],?
  4073aa:	sbb    cl,BYTE PTR [eax+0x53]
  4073ad:	sub    BYTE PTR [ebp-0x73],bh
  4073b0:	ja     0x407428
  4073b2:	(bad)  
  4073b3:	js     0x40741e
  4073b5:	jp     0x40736d
  4073b7:	arpl   cx,bp
  4073b9:	xor    BYTE PTR [esi+0x29],dl
  4073bc:	ficomp DWORD PTR [ebx-0x51f2fa21]
  4073c2:	scas   al,BYTE PTR es:[edi]
  4073c3:	inc    eax
  4073c4:	pop    ebp
  4073c5:	repnz fbstp TBYTE PTR [esi]
  4073c8:	dec    ebx
  4073c9:	jb     0x407367
  4073cb:	cmp    edi,DWORD PTR [esi]
  4073cd:	sbb    ecx,DWORD PTR [eax]
  4073cf:	add    eax,0x76fa8200
  4073d4:	ja     0x407434
  4073d6:	imul   bh
  4073d8:	pusha  
  4073d9:	xchg   edx,eax
  4073da:	pop    ss
  4073db:	jo     0x407371
  4073dd:	imul   esp,DWORD PTR [ebp+0x63],0xffffffed
  4073e1:	iret   
  4073e2:	dec    esp
  4073e3:	adc    al,0x58
  4073e5:	sbb    ecx,DWORD PTR [esi-0x4970e4eb]
  4073eb:	es retf 0x9d11
  4073ef:	std    
  4073f0:	dec    ecx
  4073f1:	iret   
  4073f2:	pop    ds
  4073f3:	inc    esp
  4073f4:	adc    ebx,DWORD PTR cs:[edx-0x5c]
  4073f8:	popa   
  4073f9:	retf   0x5907
  4073fc:	mov    ds,WORD PTR [ebx]
  4073fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ff:	out    0x7b,al
  407401:	pop    ds
  407402:	push   edx
  407403:	sbb    al,al
  407405:	std    
  407406:	cmp    al,0x51
  407408:	in     eax,dx
  407409:	iret   
  40740a:	out    dx,al
  40740b:	push   ds
  40740c:	es xor esi,edi
  40740f:	inc    edi
  407410:	or     ebp,DWORD PTR [ebx-0x67]
  407413:	std    
  407414:	sbb    al,BYTE PTR [eax-0x3881ce06]
  40741a:	xchg   edi,eax
  40741b:	sbb    DWORD PTR [ebx-0x35],esi
  40741e:	retf   
  40741f:	mov    esi,0xeb8e5cb9
  407424:	xchg   edi,eax
  407425:	and    edi,esp
  407427:	xchg   DWORD PTR [eax-0x48],esp
  40742a:	push   0x7d
  40742c:	cs sbb ecx,edx
  40742f:	add    al,0x20
  407431:	(bad)  
  407432:	push   ss
  407433:	xchg   esp,eax
  407434:	inc    edi
  407435:	stos   BYTE PTR es:[edi],al
  407436:	mov    ds:0x9c5fc15e,eax
  40743b:	retf   
  40743c:	jo     0x40741c
  40743e:	stos   DWORD PTR es:[edi],eax
  40743f:	retf   0x1e22
  407442:	push   esi
  407443:	cmp    eax,DWORD PTR [edi+0x71]
  407446:	jnp    0x4073e3
  407448:	dec    ecx
  407449:	iret   
  40744a:	shl    BYTE PTR [eax],0x44
  40744d:	jmp    0x8102:0xffa03676
  407454:	es retf 
  407456:	fwait
  407457:	xchg   esp,eax
  407458:	icebp  
  407459:	iret   
  40745a:	cmp    al,0x8a
  40745c:	xchg   BYTE PTR fs:[edx],cl
  40745f:	(bad)  ss:[esp+ebx*4+0x6d]
  407464:	jbe    0x407481
  407466:	sub    DWORD PTR [ebx-0x37],ebp
  407469:	into   
  40746a:	(bad)  
  40746b:	nop
  40746c:	mov    dh,0x9
  40746e:	sbb    ebp,ebx
  407470:	pop    ebx
  407471:	iret   
  407472:	test   eax,edx
  407474:	mov    bl,0x92
  407476:	stos   DWORD PTR es:[edi],eax
  407477:	cs je  0x4074a0
  40747a:	push   ds
  40747b:	ret    0x6546
  40747e:	cmp    bh,BYTE PTR [esi-0x6c013043]
  407484:	(bad)  
  407485:	retf   0x3ab
  407488:	ins    DWORD PTR es:[edi],dx
  407489:	in     eax,dx
  40748a:	mov    dh,0x3b
  40748c:	inc    edi
  40748d:	lahf   
  40748e:	mov    edx,eax
  407490:	cmc    
  407491:	iret   
  407492:	and    DWORD PTR [edx],ebp
  407494:	pop    es
  407495:	jb     0x4074d2
  407497:	mov    edi,0xead61f5d
  40749c:	sbb    cl,BYTE PTR [edx-0x24]
  40749f:	pop    ds
  4074a0:	pusha  
  4074a1:	push   ebx
  4074a2:	push   edx
  4074a3:	call   0x3805e14e
  4074a8:	xchg   edi,eax
  4074a9:	jg     0x4074a5
  4074ab:	in     al,dx
  4074ac:	inc    edi
  4074ad:	mov    bl,0xf2
  4074af:	sti    
  4074b0:	call   0xf708d09c
  4074b5:	sbb    ebx,DWORD PTR [edx]
  4074b7:	push   edi
  4074b8:	je     0x407474
  4074ba:	sbb    DWORD PTR es:[eax],edx
  4074bd:	cdq    
  4074be:	mov    al,ds:0x7fcf4287
  4074c3:	leave  
  4074c4:	ret    0xab32
  4074c7:	push   esp
  4074c8:	inc    edi
  4074c9:	fcomp  DWORD PTR [esi+0x19]
  4074cc:	pop    es
  4074cd:	xchg   edx,ebx
  4074cf:	mov    dl,0x60
  4074d1:	or     eax,0x1bd63b06
  4074d6:	scas   eax,DWORD PTR es:[edi]
  4074d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074d8:	push   edi
  4074d9:	pop    esp
  4074da:	(bad)  
  4074db:	cs cdq 
  4074dd:	jnp    0x4074dd
  4074df:	ja     0x407491
  4074e1:	push   ss
  4074e2:	pop    DWORD PTR [eax-0x3c]
  4074e5:	dec    ebp
  4074e6:	not    BYTE PTR [edi]
  4074e8:	dec    ecx
  4074e9:	iret   
  4074ea:	jb     0x4074ac
  4074ec:	aaa    
  4074ed:	cmp    ch,BYTE PTR [edi]
  4074ef:	shl    ecx,1
  4074f1:	in     al,dx
  4074f2:	mov    esi,0x22ace519
  4074f7:	xor    esp,DWORD PTR [eax-0x46]
  4074fa:	stos   DWORD PTR es:[edi],eax
  4074fb:	mov    ecx,0x5518415e
  407500:	rol    al,0xc0
  407503:	rol    al,0xc0
  407506:	rol    al,0xc0
  407509:	rol    al,0xc0
  40750c:	rol    al,0xc0
  40750f:	rol    al,0xc0
  407512:	rol    al,0xc0
  407515:	rol    al,0xc0
  407518:	rol    al,0xc0
  40751b:	rol    al,0xc0
  40751e:	rol    al,0xc0
  407521:	rol    al,0xc0
  407524:	rol    al,0xc0
  407527:	rol    al,0xc0
  40752a:	rol    al,0xc0
  40752d:	rol    al,0xc0
  407530:	rol    al,0xc0
  407533:	rol    al,0xc0
  407536:	rol    al,0xc0
  407539:	rol    al,0xc0
  40753c:	rol    al,0xc0
  40753f:	rol    al,0xc0
  407542:	rol    al,0xc0
  407545:	rol    al,0xc0
  407548:	rol    al,0xc0
  40754b:	rol    al,0xc0
  40754e:	rol    al,0xbb
  407551:	push   cs
  407552:	(bad)  
  407553:	mov    dh,0x50
  407555:	dec    esp
  407556:	mov    ebx,0x3fce0c9f
  40755b:	(bad)  
  40755c:	add    ecx,DWORD PTR [esi+ebp*2+0x36]
  407560:	mov    ebx,0x65a28952
  407565:	sbb    esi,DWORD PTR [ebp-0x70158bec]
  40756b:	cmc    
  40756c:	fs das 
  40756e:	xchg   esi,eax
  40756f:	ss adc eax,0x47530670
  407575:	cs cmp DWORD PTR ss:0xb318e2c7,ecx
  40757d:	xchg   ebx,eax
  40757e:	jnp    0x40754b
  407580:	pusha  
  407581:	sbb    DWORD PTR [edx-0x543f7160],edi
  407587:	dec    edx
  407588:	fld    DWORD PTR [edi+0x4e]
  40758b:	sbb    DWORD PTR [esi+0x49eb1a59],edi
  407591:	iret   
  407592:	inc    ebx
  407593:	sub    al,0x79
  407595:	bound  ecx,QWORD PTR [ecx-0x641299ca]
  40759b:	mov    WORD PTR [edi-0x45],es
  40759e:	cmp    BYTE PTR ds:0x19ade612,bh
  4075a4:	jne    0x407561
  4075a6:	loop   0x4075b8
  4075a8:	pusha  
  4075a9:	adc    BYTE PTR [edi],bh
  4075ab:	in     eax,0x47
  4075ad:	dec    eax
  4075ae:	push   edx
  4075af:	cmp    ch,bh
  4075b1:	jle    0x407542
  4075b3:	mov    esi,0xdfb638ca
  4075b8:	or     cl,dh
  4075ba:	dec    ecx
  4075bb:	mov    eax,ds:0x3628e6f6
  4075c0:	(bad)  
  4075c1:	clc    
  4075c2:	mov    dh,0x19
  4075c4:	adc    cl,BYTE PTR [ecx]
  4075c6:	data16 scas al,BYTE PTR es:[edi]
  4075c8:	jle    0x407557
  4075ca:	push   esi
  4075cb:	les    ebp,FWORD PTR [esi+0x1b]
  4075ce:	test   BYTE PTR [ebx],0x60
  4075d1:	imul   BYTE PTR [ecx+ebx*1-0x70edbcfd]
  4075d8:	call   0xce7a58ac
  4075dd:	sbb    BYTE PTR [eax+0x6e],dh
  4075e0:	xchg   ecx,eax
  4075e1:	pop    edx
  4075e2:	or     ebx,DWORD PTR [ecx]
  4075e4:	jnp    0x407590
  4075e6:	pop    DWORD PTR [ebx+0x60]
  4075e9:	xlat   BYTE PTR ds:[ebx]
  4075ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075eb:	cmp    DWORD PTR [edx+0xa],ebx
  4075ee:	stos   DWORD PTR es:[edi],eax
  4075ef:	test   al,0xd8
  4075f1:	ins    BYTE PTR es:[edi],dx
  4075f2:	mov    edx,0xeb2f4791
  4075f7:	xor    esp,DWORD PTR [edx+0x23]
  4075fa:	mov    esp,0x425e5219
  4075ff:	out    0x8d,eax
  407601:	sahf   
  407602:	in     al,0x79
  407604:	inc    DWORD PTR [edx-0x7c9f4ca2]
  40760a:	imul   BYTE PTR [edi+eax*2-0x79]
  40760e:	repnz repz loopne 0x407691
  407612:	mov    esp,0x625302c4
  407617:	jecxz  0x407599
  407619:	cwde   
  40761a:	test   al,0x33
  40761d:	mov    edx,0x543dc7ab
  407622:	sbb    DWORD PTR ds:[eax-0x3a54643e],ebx
  407629:	mov    ds:0xce3ad81d,al
  40762e:	and    al,BYTE PTR [edi+0x11]
  407631:	push   ss
  407632:	pop    DWORD PTR [edi-0x39]
  407635:	pop    esi
  407636:	sahf   
  407637:	dec    ebx
  407638:	and    eax,DWORD PTR [esi+edx*8+0x19]
  40763c:	pop    edi
  40763d:	mov    ebp,gs
  40763f:	sub    esp,DWORD PTR [ecx]
  407641:	iret   
  407642:	jnp    0x407606
  407644:	div    DWORD PTR [esi]
  407646:	mov    dl,0x43
  407648:	inc    ebp
  407649:	xchg   esi,eax
  40764a:	mov    al,0x99
  40764c:	jp     0x407680
  40764e:	push   edi
  40764f:	pop    ds
  407650:	(bad)  
  407651:	cld    
  407652:	xchg   BYTE PTR [ebp+ebp*4-0xe],bl
  407656:	mov    dh,0xef
  407658:	pusha  
  407659:	std    
  40765a:	es dec esp
  40765c:	jae    0x407616
  40765e:	add    BYTE PTR [edi],0x85
  407661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407662:	clc    
  407663:	sub    al,0xc7
  407665:	loop   0x407612
  407667:	arpl   WORD PTR [edx+eax*1],bx
  40766a:	pop    ss
  40766b:	fbld   TBYTE PTR [edx+ebp*8-0x21]
  40766f:	ss aaa 
  407671:	clc    
  407672:	sbb    DWORD PTR ds:[edx],esi
  407675:	or     al,0xeb
  407677:	out    0x3d,eax
  407679:	jno    0x40760a
  40767b:	mov    esp,0x2bc048df
  407680:	out    0x4e,eax
  407682:	(bad)
  407686:	ds ss daa 
  407689:	push   edi
  40768a:	out    0x1a,al
  40768c:	mov    edx,0xc17dd62e
  407691:	pop    eax
  407692:	ficom  WORD PTR [eax+0x47]
  407695:	pop    esi
  407696:	test   eax,0x8f153d8f
  40769b:	push   edx
  40769c:	inc    ebp
  40769d:	push   0xffffff88
  40769f:	rcr    DWORD PTR ss:[edi-0x6436d152],0xfe
  4076a7:	add    ecx,DWORD PTR [esi+edx*1]
  4076aa:	pop    edi
  4076ab:	adc    al,0xcf
  4076ad:	sti    
  4076ae:	stos   DWORD PTR es:[edi],eax
  4076af:	xor    esp,DWORD PTR [ebx-0xd]
  4076b2:	xlat   BYTE PTR ds:[ebx]
  4076b3:	add    BYTE PTR [esi-0x65],0xab
  4076b7:	push   0x53
  4076b9:	ror    bh,cl
  4076bb:	cli    
  4076bc:	loopne 0x4076e8
  4076be:	push   0x5f
  4076c0:	lock pop esi
  4076c2:	int    0x98
  4076c4:	mov    esi,0xf084ab39
  4076c9:	add    dh,BYTE PTR [ecx+ebx*1-0xc21679f]
  4076d0:	pusha  
  4076d1:	pop    ecx
  4076d2:	dec    ebp
  4076d3:	xor    BYTE PTR [edx-0x362b54e0],bl
  4076d9:	mov    eax,0x9b34195e
  4076de:	ficomp WORD PTR [edi-0x4729baa0]
  4076e4:	mov    DWORD PTR [edx-0x30ca7068],0x9b89813e
  4076ee:	jmp    0x4076a3
  4076f0:	pop    ebx
  4076f1:	scas   al,BYTE PTR es:[edi]
  4076f2:	push   es
  4076f3:	ins    BYTE PTR es:[edi],dx
  4076f4:	ficomp WORD PTR [ebx]
  4076f6:	xchg   ebx,eax
  4076f7:	mov    ah,0xb9
  4076f9:	mov    dh,0xb8
  4076fb:	sbb    DWORD PTR [eax+0x2a],eax
  4076fe:	and    ebp,DWORD PTR [edi+0x60]
  407701:	add    ch,cl
  407703:	nop
  407704:	push   0x28
  407706:	stos   DWORD PTR es:[edi],eax
  407707:	bound  esi,QWORD PTR [esi+ebp*8]
  40770a:	dec    ebp
  40770b:	sub    ah,BYTE PTR [edi]
  40770d:	and    bl,dh
  40770f:	out    dx,al
  407710:	push   eax
  407711:	ret    0xf5d2
  407714:	xlat   BYTE PTR ds:[ebx]
  407715:	sbb    dh,BYTE PTR [ebx]
  407717:	mov    ah,0xf8
  407719:	stos   DWORD PTR es:[edi],eax
  40771a:	jp     0x40779b
  40771c:	sbb    ah,BYTE PTR [bp+si-0x50]
  407720:	pusha  
  407721:	pop    edx
  407722:	mov    eax,0xd26e4768
  407727:	push   es
  407728:	mov    cl,0x92
  40772a:	cli    
  40772b:	sbb    edx,esp
  40772d:	adc    DWORD PTR [esi+0x74],0xffffffd9
  407731:	jb     0x4076e0
  407733:	sbb    DWORD PTR [eax+0x7b],ebx
  407736:	sbb    dl,BYTE PTR ds:0x9cafd460
  40773c:	jb     0x407705
  40773e:	repnz stos DWORD PTR es:[edi],eax
  407740:	call   0x41cd06ea
  407745:	out    0x8f,al
  407747:	pop    edi
  407748:	mov    ebp,0x3e5df8cf
  40774d:	fisubr DWORD PTR [ebx-0x212caa61]
  407753:	sub    bl,BYTE PTR [esi-0x75]
  407756:	sbb    bl,BYTE PTR [edi]
  407758:	in     al,0xcf
  40775a:	mov    ebx,0xb23a7f80
  40775f:	mov    dh,0x59
  407761:	cld    
  407762:	push   es
  407763:	dec    esp
  407764:	jbe    0x40770d
  407766:	sub    bh,bl
  407768:	adc    eax,0xc5248fc2
  40776d:	sub    ch,BYTE PTR [esi-0x71529ffd]
  407773:	xchg   ecx,eax
  407774:	pop    edx
  407775:	sbb    eax,DWORD PTR [edx+0x13]
  407778:	icebp  
  407779:	and    bl,dh
  40777b:	jle    0x4077c2
  40777d:	(bad)  
  40777e:	jmp    0x407753
  407780:	pusha  
  407781:	add    BYTE PTR [edi],dl
  407783:	in     al,0x44
  407785:	mov    al,ds:0x9d3bc39e
  40778a:	es inc esp
  40778c:	inc    edi
  40778d:	push   ecx
  40778e:	sub    BYTE PTR [ebp+0x15],ch
  407791:	jle    0x407722
  407793:	ret    
  407794:	lahf   
  407795:	bound  esp,QWORD PTR [ebx]
  407797:	ss int 0x4b
  40779a:	ret    0x479d
  40779d:	clc    
  40779e:	sub    BYTE PTR [eiz*1+0x72a1acf],dl
  4077a5:	inc    edx
  4077a6:	(bad)  
  4077a8:	shl    dh,1
  4077aa:	(bad)  
  4077ab:	test   edi,0xe98ec43a
  4077b1:	into   
  4077b2:	pop    es
  4077b3:	sbb    DWORD PTR [eax],edi
  4077b5:	sti    
  4077b6:	mov    dl,0xb2
  4077b8:	pusha  
  4077b9:	fstp   TBYTE PTR [esi+0x18]
  4077bc:	stos   BYTE PTR es:[edi],al
  4077bd:	jg     0x40775d
  4077bf:	scas   al,BYTE PTR es:[edi]
  4077c0:	sub    DWORD PTR [edi+0x6e],eax
  4077c3:	sbb    esi,ebp
  4077c5:	xchg   ebx,eax
  4077c6:	retf   
  4077c7:	ret    
  4077c8:	pusha  
  4077c9:	retf   0xc0cd
  4077cc:	and    BYTE PTR [eax],0xab
  4077cf:	out    0x91,eax
  4077d1:	mov    ebx,0x47261956
  4077d6:	pop    edx
  4077d7:	lahf   
  4077d8:	pusha  
  4077d9:	jbe    0x4077fd
  4077db:	call   0x9a40:0xb5abae30
  4077e2:	push   es
  4077e3:	push   0xffffff9e
  4077e5:	pop    ebx
  4077e6:	xor    dh,BYTE PTR [ebp+0x7814920d]
  4077ec:	inc    edi
  4077ed:	mov    al,BYTE PTR [eax]
  4077ef:	pop    ebp
  4077f0:	pop    ss
  4077f1:	xchg   BYTE PTR [edi-0x9b118b1],cl
  4077f7:	stos   DWORD PTR es:[edi],eax
  4077f8:	mov    ecx,0x599fa29f
  4077fd:	inc    esi
  4077fe:	mov    dl,0xf
  407800:	pusha  
  407801:	fnstenv [edi]
  407803:	mov    cl,BYTE PTR [esi-0x6f]
  407806:	stos   DWORD PTR es:[edi],eax
  407807:	push   ds
  407808:	xor    BYTE PTR [edx],cl
  40780a:	aam    0x46
  40780c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40780d:	dec    esi
  40780e:	into   
  40780f:	cmp    BYTE PTR [ecx+0x47e0de47],0x96
  407816:	call   0x8eb31df8
  40781b:	call   0x76ec3eb2
  407820:	nop
  407821:	outs   dx,BYTE PTR ds:[esi]
  407822:	push   edx
  407823:	sbb    edi,edi
  407825:	sub    ebx,DWORD PTR [edx]
  407827:	scas   al,BYTE PTR es:[edi]
  407828:	mov    cl,BYTE PTR [edi-0x31]
  40782b:	test   BYTE PTR [esp+ebp*4-0x75],ah
  40782f:	pop    edi
  407830:	push   edi
  407831:	dec    DWORD PTR [si+0x32]
  407835:	test   BYTE PTR [esi-0x2a],dh
  407838:	cmp    eax,0xeca1e7cf
  40783d:	ds sub eax,0xc6922e36
  407843:	adc    al,0x47
  407845:	jbe    0x4078b9
  407847:	push   ss
  407848:	jne    0x407895
  40784a:	aad    0xa8
  40784c:	inc    eax
  40784d:	out    0xc9,al
  40784f:	add    DWORD PTR [ecx-0x32],esi
  407852:	fcmovu st,st(4)
  407854:	js     0x40781c
  407856:	sti    
  407857:	fwait
  407858:	pusha  
  407859:	inc    esi
  40785a:	push   edx
  40785b:	cdq    
  40785c:	(bad)  
  40785d:	sbb    edx,DWORD PTR [eax]
  40785f:	mov    ch,0x39
  407861:	mov    eax,0x2bb9190a
  407866:	(bad)  
  407867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407868:	fdiv   QWORD PTR [edi+0x3e]
  40786b:	jl     0x407834
  40786d:	sbb    esp,edi
  40786f:	add    eax,0xd0b99619
  407874:	iret   
  407875:	sbb    edx,esp
  407877:	je     0x407802
  407879:	xchg   edx,eax
  40787a:	mov    edx,0x53a0019
  40787f:	inc    ecx
  407880:	pusha  
  407881:	lods   al,BYTE PTR ds:[esi]
  407882:	out    dx,eax
  407883:	dec    ebp
  407884:	jp     0x407834
  407886:	jbe    0x40785f
  407888:	push   0x32388fce
  40788d:	test   al,0x56
  40788f:	inc    ebx
  407890:	add    ecx,esi
  407892:	sbb    eax,DWORD PTR [eax-0x62]
  407895:	cwde   
  407896:	pop    ebp
  407897:	push   0xffffff8b
  407899:	jle    0x40782a
  40789b:	call   0xf659:0xb3a4115a
  4078a2:	es test al,0x9f
  4078a5:	sbb    ecx,DWORD PTR [edi+0x17a67b00]
  4078ab:	dec    esi
  4078ac:	fisubr WORD PTR [esi-0x36]
  4078af:	ss in  eax,dx
  4078b1:	xchg   esi,eax
  4078b2:	neg    BYTE PTR [edx+0x7faa4694]
  4078b8:	pusha  
  4078b9:	scas   eax,DWORD PTR es:[edi]
  4078ba:	push   edx
  4078bb:	stc    
  4078bc:	sbb    bl,BYTE PTR [ebx]
  4078be:	pushf  
  4078bf:	lods   al,BYTE PTR ds:[esi]
  4078c0:	test   DWORD PTR [edx-0x399d06d5],edx
  4078c6:	stos   DWORD PTR es:[edi],eax
  4078c7:	pushf  
  4078c8:	push   eax
  4078c9:	not    BYTE PTR [edi]
  4078cb:	cli    
  4078cc:	(bad)  
  4078cd:	pop    ebx
  4078ce:	mov    ds:0x7f160b0d,al
  4078d3:	jmp    0xfa00:0xbf2df75b
  4078da:	dec    BYTE PTR [ebx+0x3689b65e]
  4078e0:	or     eax,0x473a2e8f
  4078e5:	inc    esi
  4078e6:	mov    edi,DWORD PTR [ebx+0x4cbf6057]
  4078ec:	(bad)  
  4078ed:	enter  0x3672,0xf5
  4078f1:	inc    edi
  4078f2:	mov    al,0xe9
  4078f4:	sub    dl,BYTE PTR [ebx-0x4d1f6455]
  4078fa:	or     ebx,DWORD PTR [ecx]
  4078fc:	jb     0x40788e
  4078fe:	mov    BYTE PTR [ebx+0x60],dh
  407901:	int3   
  407902:	cmp    al,ah
  407904:	adc    bl,BYTE PTR [ebx]
  407906:	repz dec edx
  407908:	jns    0x4078f7
  40790a:	scas   al,BYTE PTR es:[edi]
  40790b:	sbb    DWORD PTR [edx+0x28],edi
  40790e:	fild   DWORD PTR [ebx]
  407910:	sub    BYTE PTR [ebp-0xa],cl
  407913:	cmp    dl,BYTE PTR [edx+0x1b]
  407916:	inc    BYTE PTR [ebp+0xcee26f9]
  40791c:	jmp    0x407964
  40791e:	push   esi
  40791f:	ror    BYTE PTR ss:[esi+edx*4+0x60],1
  407924:	mov    dh,0x1b
  407926:	mov    ebx,0x85d7cde1
  40792b:	mov    al,ds:0x15fb4b69
  407930:	jae    0x40799e
  407932:	(bad)  
  407933:	mov    dh,0x72
  407935:	mov    dh,0xf2
  407937:	out    0xf9,al
  407939:	(bad)  
  40793b:	sbb    DWORD PTR [eax+ebp*1-0x36319c4a],edx
  407942:	pop    ss
  407943:	enter  0x2b44,0x9e
  407947:	in     al,0x39
  407949:	pop    es
  40794a:	bswap  esp
  40794c:	je     0x40792f
  40794e:	(bad)  
  40794f:	loop   0x4078dd
  407951:	push   edi
  407952:	pop    eax
  407953:	sbb    DWORD PTR [edi+0x4e],ebx
  407956:	mov    eax,0xd6cb55e0
  40795b:	shl    BYTE PTR [edx+0x55edc8c3],0xc6
  407962:	(bad)  
  407963:	ret    
  407964:	(bad)  
  407965:	sub    BYTE PTR [eax+0x53f235eb],bl
  40796b:	or     BYTE PTR [edx],0x4c
  40796e:	cmp    ebp,ecx
  407970:	arpl   WORD PTR [edx-0x76e13846],di
  407976:	sub    esi,edi
  407978:	push   ebx
  407979:	push   esi
  40797a:	fcmovu st,st(1)
  40797c:	fild   DWORD PTR [ebx-0x517ca98]
  407982:	dec    ebp
  407983:	inc    eax
  407984:	repz fwait
  407986:	outs   dx,BYTE PTR ds:[esi]
  407987:	add    eax,0x2e4b9a85
  40798c:	push   ss
  40798d:	dec    ebp
  40798e:	ins    BYTE PTR es:[edi],dx
  40798f:	scas   al,BYTE PTR es:[edi]
  407990:	sub    esp,ecx
  407992:	dec    ecx
  407993:	sub    al,0x36
  407995:	inc    edx
  407996:	bound  edi,QWORD PTR [eax-0x2e25c1d7]
  40799c:	xor    eax,0x1f356083
  4079a1:	cli    
  4079a2:	inc    ebp
  4079a3:	inc    eax
  4079a4:	das    
  4079a5:	fwait
  4079a6:	add    ax,0x9af5
  4079aa:	inc    ebx
  4079ab:	sbb    edi,0x55a9a8d4
  4079b1:	cmp    al,0xd6
  4079b3:	fwait
  4079b4:	(bad)  
  4079b5:	jmp    0xcd73f764
  4079ba:	mov    fs,WORD PTR [edx-0x3f]
  4079bd:	es mov bl,0xf2
  4079c0:	push   0xffffff98
  4079c2:	mov    esp,0xd24e5011
  4079c7:	(bad)  
  4079c8:	cmp    BYTE PTR [edi+0x124f6c1a],dh
  4079ce:	repnz xchg ebx,eax
  4079d0:	loopne 0x4079a0
  4079d2:	push   esi
  4079d3:	test   al,0xc7
  4079d5:	add    esi,DWORD PTR [edx-0x5d]
  4079d8:	loopne 0x4079ad
  4079da:	mov    esp,0xbbab6d0c
  4079df:	push   ebp
  4079e0:	add    eax,0x54d0807c
  4079e5:	test   eax,0x7bee66a4
  4079ea:	xor    DWORD PTR ds:0x7d25acc9,0x688177ee
  4079f4:	leave  
  4079f5:	mov    al,ds:0x75ee7925
  4079fa:	add    DWORD PTR [ecx+ecx*8-0x5a],ebp
  4079fe:	and    eax,0x170ee5e
  407a03:	jne    0x4079ce
  407a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a06:	and    eax,0x16fee5c
  407a0b:	or     eax,0xfc3db8c9
  407a10:	jae    0x407a7f
  407a12:	jns    0x407a5e
  407a14:	mov    cl,0xbf
  407a16:	pop    ebp
  407a17:	sbb    DWORD PTR [esi-0x4eac8698],edx
  407a1d:	mov    ebp,0x6773e07b
  407a22:	imul   ebp,DWORD PTR [bx+0x43b0],0x67658878
  407a2b:	ins    DWORD PTR es:[edi],dx
  407a2c:	scas   eax,DWORD PTR es:[edi]
  407a2d:	mov    dh,0x4b
  407a2f:	pop    ebp
  407a30:	mov    BYTE PTR [ebx+0x66],ah
  407a33:	aad    0x54
  407a35:	je     0x407a3b
  407a37:	pop    ecx
  407a38:	push   fs
  407a3a:	and    DWORD PTR [esi+0x2a],esi
  407a3d:	je     0x407ab9
  407a3f:	pop    ecx
  407a40:	and    eax,0xaff75da2
  407a45:	iret   
  407a46:	inc    ebx
  407a47:	push   ds
  407a48:	mov    BYTE PTR [eax],bl
  407a4a:	addr16 push cs
  407a4c:	scas   eax,DWORD PTR es:[edi]
  407a4d:	ret    0x2b43
  407a50:	mov    BYTE PTR [edi+eiz*2],dl
  407a53:	adc    BYTE PTR [edi-0x77c2bc3a],ch
  407a59:	adc    DWORD PTR [edi+0x6],esp
  407a5c:	scas   eax,DWORD PTR es:[edi]
  407a5d:	fiadd  DWORD PTR [ebx+0x37]
  407a60:	mov    BYTE PTR [edi],cl
  407a62:	mov    edi,0x43d8afd1
  407a67:	pusha  
  407a68:	mov    BYTE PTR [ebx],cl
  407a6a:	addr16 pop eax
  407a6c:	adc    DWORD PTR [eax+0x7967f5d],eax
  407a72:	js     0x407ada
  407a74:	call   0xfc22:0xafdbcaf6
  407a7b:	hlt    
  407a7c:	mov    dh,0xf6
  407a7e:	out    dx,eax
  407a7f:	fist   DWORD PTR [edx-0x4c0b62de]
  407a85:	test   BYTE PTR [eax-0x66dd6825],0xf4
  407a8c:	mov    esi,0x9bdbb7f6
  407a91:	and    al,BYTE PTR [edi-0x5e09450c]
  407a97:	fistp  DWORD PTR [esi-0x590b6ede]
  407a9d:	imul   BYTE PTR [ebx-0x25dd7f25]
  407aa3:	hlt    
  407aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa5:	div    dl
  407aa7:	fild   DWORD PTR [edx+eiz*1-0x9510b31]
  407aae:	jecxz  0x407a8b
  407ab0:	mov    BYTE PTR [edx],ah
  407ab2:	icebp  
  407ab3:	hlt    
  407ab4:	lods   eax,DWORD PTR ds:[esi]
  407ab5:	test   bl,0xdb
  407ab8:	(bad)  
  407ab9:	and    bh,ch
  407abb:	hlt    
  407abc:	test   eax,0xd02526cd
  407ac1:	sti    
  407ac2:	mov    eax,0x9e9a8e15
  407ac7:	pop    ebp
  407ac8:	and    dh,ch
  407aca:	dec    edx
  407acb:	icebp  
  407acc:	dec    eax
  407acd:	or     eax,0x126e137f
  407ad2:	mov    ch,BYTE PTR [edi]
  407ad4:	xchg   esi,eax
  407ad5:	jbe    0x407a9d
  407ad7:	add    cl,BYTE PTR ds:0xee39cf67
  407add:	sti    
  407ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407adf:	and    BYTE PTR [ebx+ebp*8+0x46ac81],dh
  407ae6:	(bad)  
  407ae7:	jbe    0x407b62
  407ae9:	push   esi
  407aea:	outs   dx,DWORD PTR ds:[esi]
  407aeb:	sub    BYTE PTR [ecx-0x31],dl
  407aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aef:	ins    DWORD PTR es:[edi],dx
  407af0:	mov    bh,0xb2
  407af2:	sbb    dh,BYTE PTR [esi]
  407af4:	popa   
  407af5:	push   esi
  407af6:	inc    edx
  407af7:	jecxz  0x407b73
  407af9:	rol    DWORD PTR [ebp-0x641769ff],0x28
  407b00:	inc    bl
  407b02:	adc    ebp,esi
  407b04:	(bad)  [edi+0x2]
  407b07:	(bad)  
  407b08:	sub    al,0xfe
  407b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b0b:	or     ebp,DWORD PTR [edx]
  407b0d:	xor    cl,dh
  407b0f:	test   BYTE PTR [eax],dh
  407b11:	mov    BYTE PTR [edi+0x20],bh
  407b14:	push   ecx
  407b15:	into   
  407b16:	and    DWORD PTR [eax+0x178c1a45],0x5bc62846
  407b20:	pop    ss
  407b21:	mov    ds:0x2e01402d,al
  407b26:	(bad)  
  407b27:	pop    ax
  407b29:	das    
  407b2a:	mov    ds:0xa9fb4a29,al
  407b2f:	and    BYTE PTR [ebp+0x311881fd],dh
  407b35:	jbe    0x407b29
  407b37:	ins    DWORD PTR es:[edi],dx
  407b38:	imul   esp,DWORD PTR [edx-0x715abc21],0xf0b51d3d
  407b42:	sbb    DWORD PTR [eax],eax
  407b44:	xchg   edx,eax
  407b45:	sbb    al,0xa5
  407b47:	xor    eax,0x189ac15b
  407b4c:	adc    esi,DWORD PTR [esi-0x3a]
  407b4f:	imul   ecx,DWORD PTR ds:0xe43ecf0d,0xfffffffb
  407b56:	enter  0x8999,0xfe
  407b5a:	div    al
  407b5c:	cmp    al,0x9a
  407b5e:	mov    edx,0x793d8aa4
  407b63:	jmp    0xe066:0xaf4a8579
  407b6a:	mov    dh,0x23
  407b6c:	mov    edx,0x92a4fcf2
  407b71:	xchg   ebx,eax
  407b72:	jge    0x407b6f
  407b74:	mov    ah,0x3d
  407b76:	xor    eax,0x12adfbcf
  407b7b:	ss jbe 0x407be1
  407b7e:	inc    edx
  407b7f:	dec    esp
  407b80:	loope  0x407b32
  407b82:	nop
  407b83:	or     al,0x68
  407b85:	sub    bl,BYTE PTR [ebx]
  407b87:	mov    bl,0x90
  407b89:	loop   0x407bc7
  407b8b:	xor    bl,BYTE PTR [edx+0x34]
  407b8e:	sbb    DWORD PTR [ebx],ebx
  407b90:	jl     0x407b8c
  407b92:	cmp    bl,bh
  407b94:	push   0x8a191f34
  407b99:	loopne 0x407bd3
  407b9b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407b9d:	xor    al,0x1d
  407b9f:	sbb    eax,edx
  407ba1:	loopne 0x407bd9
  407ba3:	ss cmc 
  407ba5:	xor    al,0x13
  407ba7:	sbb    esp,edx
  407ba9:	loopne 0x407bdf
  407bab:	jbe    0x407b5b
  407bad:	mov    eax,ds:0x7292cc43
  407bb2:	jge    0x407b9f
  407bb4:	mov    ch,0xa7
  407bb6:	pop    ecx
  407bb7:	ret    0x7092
  407bba:	jge    0x407bab
  407bbc:	mov    ch,0xa5
  407bbe:	pop    ecx
  407bbf:	in     al,0x92
  407bc1:	outs   dx,BYTE PTR ds:[esi]
  407bc2:	jge    0x407bb8
  407bc4:	mov    ch,0xbb
  407bc6:	pop    ecx
  407bc7:	test   DWORD PTR [edx-0x4a538294],edx
  407bcd:	mov    ecx,0x6a928159
  407bd2:	jge    0x407b74
  407bd4:	mov    ch,0xbf
  407bd6:	pop    ecx
  407bd7:	lea    edx,[edx-0x4a5c8298]
  407bdd:	mov    ebp,0x66928a59
  407be2:	jge    0x407b8b
  407be4:	mov    ch,0xb3
  407be6:	pop    ecx
  407be7:	xchg   esi,eax
  407be8:	xchg   edx,eax
  407be9:	fs jge 0x407ba7
  407bec:	mov    ch,0xb1
  407bee:	pop    ecx
  407bef:	xchg   edx,eax
  407bf0:	xchg   edx,eax
  407bf1:	bound  edi,QWORD PTR [ebp-0x41]
  407bf4:	mov    ch,0xb7
  407bf6:	pop    ecx
  407bf7:	sahf   
  407bf8:	xchg   edx,eax
  407bf9:	pusha  
  407bfa:	jns    0x407be3
  407bfc:	fnstenv [ebp+0x1e4f9924]
  407c02:	call   0x723413f7
  407c07:	les    esi,FWORD PTR [ebx-0x6a14a5c3]
  407c0d:	jmp    0x515f3c8e
  407c12:	push   esi
  407c13:	xchg   DWORD PTR [ebx-0x30468f7b],edx
  407c19:	loopne 0x407c70
  407c1b:	ss xchg ecx,eax
  407c1d:	xor    al,0x76
  407c1f:	pop    ecx
  407c20:	mov    DWORD PTR [ebx],edx
  407c22:	shr    WORD PTR [esi-0x7612bd3c],0x11
  407c2a:	retw   
  407c2c:	scas   al,BYTE PTR es:[edi]
  407c2d:	fadd   DWORD PTR [edx-0x15]
  407c30:	mov    DWORD PTR [ebx],ecx
  407c32:	lds    bp,DWORD PTR [esi-0x7616bd2e]
  407c39:	add    eax,0xd4aec766
  407c3e:	inc    edx
  407c3f:	test   DWORD PTR [ecx-0x512699ff],0x89f542ea
  407c49:	aas    
  407c4a:	data16 fld TBYTE PTR [esi-0x760cbd18]
  407c51:	cmp    ah,BYTE PTR [esi-0x23]
  407c54:	scas   al,BYTE PTR es:[edi]
  407c55:	in     al,dx
  407c56:	inc    edx
  407c57:	icebp  
  407c58:	mov    DWORD PTR [esi],esi
  407c5a:	data16 fild QWORD PTR [esi-0x7600bd1d]
  407c61:	xor    al,0x66
  407c63:	shr    DWORD PTR [esi-0x7602bd1f],1
  407c69:	xor    ah,BYTE PTR [esi-0x2d]
  407c6c:	scas   al,BYTE PTR es:[edi]
  407c6d:	out    0x42,eax
  407c6f:	sti    
  407c70:	mov    DWORD PTR [ecx],esi
  407c72:	data16 aad 0xae
  407c75:	stc    
  407c76:	inc    edx
  407c77:	stc    
  407c78:	mov    DWORD PTR [ebp+0x66],eax
  407c7b:	xlat   BYTE PTR ds:[ebx]
  407c7c:	scas   al,BYTE PTR es:[edi]
  407c7d:	xchg   esi,eax
  407c7e:	sbb    dh,bh
  407c80:	je     0x407c54
  407c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c83:	push   cs
  407c84:	in     eax,dx
  407c85:	xor    BYTE PTR [ecx-0x7e1d31e5],ah
  407c8b:	ss xchg edi,eax
  407c8d:	xor    al,0x9b
  407c8f:	sbb    DWORD PTR [ebx-0x6ac94320],esi
  407c95:	xor    al,0x99
  407c97:	sbb    DWORD PTR [ebp-0x6cc94520],esi
  407c9d:	xor    al,0x9f
  407c9f:	sbb    DWORD PTR [edi-0x6ec94720],esi
  407ca5:	xor    al,0x9d
  407ca7:	sbb    DWORD PTR [ecx-0x60c94920],edi
  407cad:	xor    al,0x93
  407caf:	sbb    DWORD PTR [ebx-0x62c94b20],edi
  407cb5:	xor    al,0x91
  407cb7:	sbb    DWORD PTR [ebp-0x64c94d20],edi
  407cbd:	xor    al,0x97
  407cbf:	sbb    DWORD PTR [edi-0x66c94f20],edi
  407cc5:	xor    al,0x95
  407cc7:	sbb    DWORD PTR [ecx-0x78c95120],esp
  407ccd:	xor    al,0x8b
  407ccf:	sbb    DWORD PTR [ebx-0x7ac95320],esp
  407cd5:	xor    al,0x89
  407cd7:	sbb    DWORD PTR [ebp-0x7cc95520],esp
  407cdd:	xor    al,0x8f
  407cdf:	sbb    DWORD PTR [edi-0x7ec95720],esp
  407ce5:	xor    al,0x8d
  407ce7:	sbb    DWORD PTR [ecx-0x70c95920],ebp
  407ced:	xor    al,0x83
  407cef:	sbb    DWORD PTR [ebx-0x49c95b20],ebp
  407cf5:	xor    al,0xfa
  407cf7:	sbb    DWORD PTR [eax-0x4bc92020],edx
  407cfd:	xor    al,0xf8
  407cff:	sbb    DWORD PTR [edx-0x4dc92220],edx
  407d05:	xor    al,0xfe
  407d07:	sbb    DWORD PTR [eax+eiz*8+0x34b036db],edx
  407d0e:	cld    
  407d0f:	sbb    DWORD PTR [esi-0x41c92620],edx
  407d15:	xor    al,0xf2
  407d17:	sbb    DWORD PTR [eax-0x43c92820],ebx
  407d1d:	xor    al,0xf0
  407d1f:	sbb    eax,eax
  407d21:	rol    al,0xc0
  407d24:	rol    al,0xc0
  407d27:	rol    al,0xc0
  407d2a:	rol    al,0xc0
  407d2d:	rol    al,0xc0
  407d30:	rol    al,0xc0
  407d33:	rol    al,0xc0
  407d36:	rol    al,0xc0
  407d39:	rol    al,0xc0
  407d3c:	rol    al,0xc0
  407d3f:	rol    al,0xc0
  407d42:	rol    al,0xc0
  407d45:	rol    al,0xc0
  407d48:	rol    al,0xc0
  407d4b:	rol    al,0xc0
  407d4e:	rol    al,0xc0
  407d51:	rol    al,0xc0
  407d54:	rol    al,0xc0
  407d57:	rol    al,0xc0
  407d5a:	rol    al,0xc0
  407d5d:	rol    al,0xc0
  407d60:	call   0xf634:0xba36d5e0
  407d67:	sbb    DWORD PTR [eax+eiz*8+0x34b836d3],ebx
  407d6e:	hlt    
  407d6f:	sbb    DWORD PTR [esi-0x59c92e20],ebx
  407d75:	xor    al,0xea
  407d77:	sbb    DWORD PTR [eax-0x5bc93020],eax
  407d7d:	xor    al,0xe8
  407d7f:	sbb    al,dl
  407d81:	stos   BYTE PTR es:[edi],al
  407d82:	push   cs
  407d83:	jbe    0x407d2f
  407d85:	pop    ecx
  407d86:	sub    al,BYTE PTR [ecx-0x75f17073]
  407d8c:	stos   BYTE PTR es:[edi],al
  407d8d:	pop    esi
  407d8e:	sub    cl,BYTE PTR [ebp-0x71f17477]
  407d94:	scas   al,BYTE PTR es:[edi]
  407d95:	pop    esp
  407d96:	sub    cl,BYTE PTR [ecx-0x7df17677]
  407d9c:	scas   al,BYTE PTR es:[edi]
  407d9d:	push   edx
  407d9e:	sub    dl,BYTE PTR [ebp-0x79f17877]
  407da4:	scas   al,BYTE PTR es:[edi]
  407da5:	push   eax
  407da6:	cmp    esp,eax
  407da8:	sub    bh,BYTE PTR ds:0x490aea32
  407dae:	sub    ah,al
  407db0:	loopne 0x407def
  407db2:	xor    dl,ch
  407db4:	or     BYTE PTR [ecx+0x2c],cl
  407db7:	les    ebp,FWORD PTR [esi]
  407db9:	cmp    eax,0x2b40e82e
  407dbe:	or     ebx,edi
  407dc0:	jae    0x407de8
  407dc2:	sub    al,0xf0
  407dc4:	push   ebp
  407dc5:	call   0xf12a:0x2e12bf24
  407dcc:	mov    eax,0x74c41849
  407dd1:	cmp    eax,0x7644ee28
  407dd6:	or     eax,0x26a2765a
  407ddb:	inc    eax
  407ddc:	pop    esi
  407ddd:	mov    al,ds:0xa1785bc6
  407de2:	and    al,0x40
  407de4:	pop    esp
  407de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de6:	(bad)  
  407de7:	pop    ebx
  407de8:	jp     0x407d8c
  407dea:	and    al,BYTE PTR [eax+0x5a]
  407ded:	mov    eax,0xa2e15bc6
  407df2:	and    BYTE PTR [eax+0x58],al
  407df5:	mov    esp,0xa27e5bc6
  407dfa:	pop    esi
  407dfb:	inc    eax
  407dfc:	sbb    BYTE PTR [eax-0x5dbea43a],dh
  407e02:	pop    esp
  407e03:	inc    esp
  407e04:	addr16 add dh,al
  407e07:	outs   dx,DWORD PTR ds:[esi]
  407e08:	aaa    
  407e09:	sbb    al,0xe2
  407e0b:	je     0x407e6f
  407e0d:	jbe    0x407e8e
  407e0f:	outs   dx,DWORD PTR ds:[esi]
  407e10:	inc    esp
  407e11:	sbb    dl,ah
  407e13:	je     0x407e27
  407e15:	jbe    0x407e94
  407e17:	outs   dx,DWORD PTR ds:[esi]
  407e18:	inc    edx
  407e19:	adc    al,0xe2
  407e1b:	je     0x407e30
  407e1d:	jbe    0x407e92
  407e1f:	outs   dx,DWORD PTR ds:[esi]
  407e20:	dec    ecx
  407e21:	adc    dl,ah
  407e23:	dec    ecx
  407e24:	outs   dx,DWORD PTR ds:[esi]
  407e25:	sti    
  407e26:	and    BYTE PTR [eax],0xb5
  407e29:	in     eax,0x81
  407e2b:	sbb    BYTE PTR [edx+0x76],ch
  407e2e:	sti    
  407e2f:	sbb    al,BYTE PTR [eax-0x58279020]
  407e35:	xor    eax,0x9180f64b
  407e3a:	mov    edi,0x4b4aa7de
  407e3f:	hlt    
  407e40:	sbb    BYTE PTR [edi+0x48a7dc6f],0x9b
  407e47:	stc    
  407e48:	sbb    BYTE PTR [ebp+0x3ca7de6f],0x4b
  407e4f:	lock sub ah,0xbf
  407e53:	out    dx,al
  407e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e55:	inc    esi
  407e56:	dec    ebx
  407e57:	inc    BYTE PTR [eax-0x582d906b]
  407e5d:	cmp    eax,0x9680c99b
  407e62:	outs   dx,DWORD PTR ds:[esi]
  407e63:	aam    0xa7
  407e65:	inc    edi
  407e66:	dec    ebx
  407e67:	cli    
  407e68:	adc    BYTE PTR [edi+0x4da7febf],0xbd
  407e6f:	jecxz  0x407eac
  407e71:	ror    DWORD PTR [esi-0x55b4d5da],0xd6
  407e78:	pusha  
  407e79:	out    dx,eax
  407e7a:	or     cl,bh
  407e7c:	jo     0x407ea9
  407e7e:	inc    eax
  407e7f:	(bad)  
  407e80:	gs out dx,eax
  407e82:	add    al,0xf9
  407e84:	inc    ebx
  407e85:	sub    eax,DWORD PTR [esi+edx*8+0x55]
  407e89:	out    dx,eax
  407e8a:	add    cl,bh
  407e8c:	inc    ebp
  407e8d:	cmp    edi,DWORD PTR [eax+0x5ad954d6]
  407e93:	adc    BYTE PTR [ecx+0x1a],cl
  407e96:	mov    ds:0x6fc4305b,eax
  407e9b:	adc    edx,DWORD PTR [ecx-0x33]
  407e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e9f:	loopne 0x407e40
  407ea1:	sbb    al,BYTE PTR [ebx-0x5b32af31]
  407ea7:	loopne 0x407e2a
  407ea9:	sbb    DWORD PTR [ecx-0x6a315831],eax
  407eaf:	loopne 0x407e4c
  407eb1:	sbb    bh,BYTE PTR [esi-0x6432bb31]
  407eb7:	loopne 0x407e3e
  407eb9:	sbb    DWORD PTR [edi+ecx*8-0x1c66325d],edi
  407ec0:	xchg   DWORD PTR [ecx-0x7a],ebx
  407ec3:	iret   
  407ec4:	mov    eax,ds:0x89e0a8cd
  407ec9:	sbb    DWORD PTR [edx-0x6e325031],esi
  407ecf:	loopne 0x407e5c
  407ed1:	sbb    ecx,DWORD PTR [ecx-0x6d31bb71]
  407ed7:	loopne 0x407e74
  407ed9:	sbb    DWORD PTR [ebx-0x6c325431],esi
  407edf:	loopne 0x407e70
  407ee1:	sbb    DWORD PTR [ecx-0x6f305631],edi
  407ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee8:	outs   dx,DWORD PTR ds:[esi]
  407ee9:	fstp   DWORD PTR [eax]
  407eeb:	or     esp,DWORD PTR [edx]
  407eed:	test   al,0xce
  407eef:	scas   eax,DWORD PTR es:[edi]
  407ef0:	or     DWORD PTR [ebp-0x1a],edi
  407ef3:	sub    DWORD PTR [edx],0xdadc6ae
  407ef9:	jnp    0x407f29
  407efb:	ret    0xad2a
  407efe:	(bad)  
  407eff:	stos   DWORD PTR es:[edi],eax
  407f00:	or     eax,0x2a86e276
  407f05:	mov    ds:0x2f94f50a,eax
  407f0a:	adc    ecx,edi
  407f0c:	clc    
  407f0d:	sti    
  407f0e:	aas    
  407f0f:	(bad)  
  407f10:	fisubr WORD PTR [esi]
  407f12:	mov    ebp,DWORD PTR [eax]
  407f14:	sub    bh,BYTE PTR [ebx+0x6c0df90a]
  407f1a:	loop   0x407ec1
  407f1c:	sub    bh,BYTE PTR [ecx+0x6a0d89c2]
  407f22:	loop   0x407ecb
  407f24:	sub    bh,BYTE PTR [edi+0x680dedc6]
  407f2a:	loop   0x407ec4
  407f2c:	sub    bh,BYTE PTR [ebp+0x660ded0a]
  407f32:	loop   0x407ef9
  407f34:	sub    dh,BYTE PTR [ebx+0x640decc6]
  407f3a:	loop   0x407ef4
  407f3c:	sub    dh,BYTE PTR [ecx+0x1f0de9c6]
  407f42:	loop   0x407edd
  407f44:	sub    cl,al
  407f46:	(bad)  
  407f47:	mov    ch,0xd
  407f49:	sbb    eax,0xce2a9be2
  407f4e:	(bad)  
  407f4f:	mov    bl,0xd
  407f51:	sbb    esp,edx
  407f53:	popf   
  407f54:	sub    cl,ah
  407f56:	(bad)  
  407f57:	mov    cl,0xd
  407f59:	sbb    edx,esp
  407f5b:	lahf   
  407f5c:	sub    al,dl
  407f5e:	(bad)  
  407f5f:	mov    edi,0x91e2170d
  407f64:	sub    al,al
  407f66:	(bad)  
  407f67:	mov    ebp,0x93e2150d
  407f6c:	sub    al,dh
  407f6e:	(bad)  
  407f6f:	mov    ebx,0x95e2130d
  407f74:	sub    al,ah
  407f76:	(bad)  
  407f77:	mov    ecx,0x97e2110d
  407f7c:	sub    bl,dl
  407f7e:	mov    BYTE PTR [edi-0x561df0f3],0x2a
  407f85:	fadd   DWORD PTR [edx]
  407f87:	inc    ebp
  407f88:	or     eax,0x2aace20a
  407f8d:	fild   WORD PTR [edx]
  407f8f:	inc    ecx
  407f90:	or     eax,0xa7df1f08
  407f95:	lods   eax,DWORD PTR ds:[esi]
  407f96:	dec    ebx
  407f97:	inc    DWORD PTR [eax-0x582e908a]
  407f9d:	mov    ds:0x6f80c64b,eax
  407fa2:	outs   dx,DWORD PTR ds:[esi]
  407fa3:	jmp    0x3f83:0xc44bb8a7
  407faa:	lock in al,dx
  407fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fad:	mov    esi,0x3f83c24b
  407fb2:	in     al,dx
  407fb3:	out    dx,al
  407fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb5:	or     eax,0x19c6e05d
  407fba:	jbe    0x407f8b
  407fbc:	out    dx,al
  407fbd:	int    0x53
  407fbf:	loopne 0x407f89
  407fc1:	sbb    DWORD PTR [ebx+eax*8-0x2f],esi
  407fc5:	je     0x408018
  407fc7:	out    dx,eax
  407fc8:	outs   dx,BYTE PTR ds:[esi]
  407fc9:	xor    bh,BYTE PTR [esi+0x548bbb74]
  407fcf:	(bad)  
  407fd0:	iret   
  407fd1:	das    
  407fd2:	jno    0x407fce
  407fd4:	mov    bh,0x88
  407fd6:	dec    edx
  407fd7:	aad    0x76
  407fd9:	das    
  407fda:	pop    ecx
  407fdb:	leave  
  407fdc:	xchg   ecx,eax
  407fdd:	clc    
  407fde:	jge    0x407fc4
  407fe0:	mov    dh,0x2d
  407fe2:	pop    ecx
  407fe3:	retf   0xfe91
  407fe6:	jge    0x407fcb
  407fe8:	mov    dh,0x2b
  407fea:	pop    ecx
  407feb:	int    0x91
  407fed:	cld    
  407fee:	jge    0x407fd1
  407ff0:	mov    dh,0x29
  407ff2:	push   ebp
  407ff3:	(bad)  
  407ff4:	int3   
  407ff5:	bnd jge 0x407fe7
  407ff8:	mov    dh,0x27
  407ffa:	pop    ecx
  407ffb:	rcl    DWORD PTR [esi+0x5290b2ab],0xaa
  408002:	cmp    al,0x16
  408004:	pop    edx
  408005:	das    
  408006:	sbb    DWORD PTR [edi],ebx
  408008:	add    eax,0x76743aa2
  40800d:	jbe    0x40802e
  40800f:	push   ebx
  408010:	push   eax
  408011:	mov    ds:0x76547438,al
  408016:	sbb    eax,0x36a2d05b
  40801b:	je     0x408012
  40801d:	jbe    0x408032
  40801f:	pop    edi
  408020:	aad    0xa2
  408022:	xor    al,0x74
  408024:	lock jbe 0x408038
  408027:	pop    ebx
  408028:	jmp    0x1776:0xcb7432a2
  40802f:	pop    ebx
  408030:	out    dx,eax
  408031:	mov    ds:0x76f67430,al
  408036:	adc    eax,0x2ea2d95b
  40803b:	je     0x408037
  40803d:	jbe    0x408045
  40803f:	cmp    BYTE PTR ds:0x361523fc,dl
  408045:	adc    eax,0xc1143904
  40804a:	and    DWORD PTR [edi],edx
  40804c:	jge    0x408063
  40804e:	jp     0x408088
  408050:	inc    ebp
  408051:	rcr    DWORD PTR [edi+0x17],0x4b
  408055:	adc    eax,0xc16f3878
  40805a:	pop    ebx
  40805b:	pop    ss
  40805c:	push   ecx
  40805d:	adc    eax,0xc14d3872
  408062:	push   edi
  408063:	pop    ss
  408064:	adc    eax,0xa5207715
  408069:	call   DWORD PTR [eax-0x31]
  40806c:	test   BYTE PTR [ebp+0x75],cl
  40806f:	loopne 0x408081
  408071:	sbb    DWORD PTR [eax-0x31],ecx
  408074:	dec    esp
  408075:	dec    ebp
  408076:	pusha  
  408077:	loopne 0x40806c
  408079:	pop    ecx
  40807a:	inc    ebp
  40807b:	iret   
  40807c:	aad    0xcd
  40807e:	data16 loopne 0x4080d9
  408081:	sbb    DWORD PTR [ebx-0x31],eax
  408084:	jl     0x408053
  408086:	fs loopne 0x4080df
  408089:	sbb    DWORD PTR [ecx-0x31],eax
  40808c:	jle    0x40805a
  40808e:	push   ebp
  40808f:	fisttp WORD PTR [ecx+0x689a6628]
  408095:	or     eax,DWORD PTR [ecx+0x28]
  408098:	loope  0x408099
  40809a:	bound  eax,QWORD PTR [esi+0x3f4787c7]
  4080a0:	nop
  4080a1:	and    BYTE PTR [edi-0x65],ch
  4080a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a5:	aad    0xb3
  4080a7:	cmp    dl,BYTE PTR [ebx-0x6]
  4080aa:	jle    0x4080bb
  4080ac:	nop
  4080ad:	das    
  4080ae:	pop    ebx
  4080af:	mov    al,ds:0xc77c99e3
  4080b4:	jmp    0x7d7ad9ce
  4080b9:	sar    DWORD PTR [edx+0x16],0x5b
  4080bd:	adc    eax,0xc57b385f
  4080c2:	jbe    0x4080da
  4080c4:	mov    ch,0xe3
  4080c6:	pop    ecx
  4080c7:	sub    al,0x92
  4080c9:	xor    al,0x7e
  4080cb:	adc    BYTE PTR [ebx-0x1f],dh
  4080ce:	inc    edx
  4080cf:	aaa    
  4080d0:	cdq    
  4080d1:	xor    al,BYTE PTR [eax+0x30]
  4080d4:	dec    ecx
  4080d5:	out    0xa5,eax
  4080d7:	xor    ebp,DWORD PTR [esi+0x30]
  4080da:	xor    DWORD PTR [ecx+ecx*2],0x529dbde5
  4080e1:	cs pop ecx
  4080e3:	mov    bl,0x11
  4080e5:	sti    
  4080e6:	jo     0x4080af
  4080e8:	outs   dx,BYTE PTR ds:[esi]
  4080e9:	sub    al,0x81
  4080eb:	mov    ah,0x49
  4080ed:	stc    
  4080ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ef:	call   0xff4d:0x14812a6e
  4080f6:	rol    BYTE PTR [edi+eax*4-0x5e3455c3],cl
  4080fd:	jmp    0x3bca4598
  408102:	sahf   
  408103:	clc    
  408104:	test   DWORD PTR [eax],0x37d307b9
  40810a:	jge    0x4080b6
  40810c:	cmc    
  40810d:	leave  
  40810e:	stc    
  40810f:	in     al,0xd5
  408111:	cmp    eax,0xe9f3eb9b
  408116:	mov    ebp,0x1d3ad7c4
  40811b:	sbb    ecx,esi
  40811d:	jmp    0x3a1a45d5
  408122:	inc    ecx
  408123:	xchg   edi,edi
  408125:	test   DWORD PTR [esi-0x72ae2458],ebp
  40812b:	xchg   edx,edi
  40812d:	mov    DWORD PTR [ecx-0x47da20fd],ebx
  408133:	jmp    0x40812e
  408135:	jmp    0x3d0245d9
  40813a:	int    0xcb
  40813c:	into   
  40813d:	jmp    0x3e040630
  408142:	retf   
  408143:	retf   
  408144:	in     eax,0xe9
  408146:	in     al,dx
  408147:	(bad)  
  408148:	lds    edi,FWORD PTR ds:0xe9e3ebc9
  40814e:	loop   0x408114
  408150:	(bad)  
  408151:	cmp    eax,0xe9e1ebc7
  408156:	loopne 0x40811c
  408158:	leave  
  408159:	mov    ds:0x15ed740e,al
  40815e:	test   al,0x7
  408160:	int    0xd9
  408162:	mov    bh,0x2b
  408164:	jmp    0x408133
  408166:	xchg   esp,eax
  408167:	and    bh,cl
  408169:	sbb    DWORD PTR [edi+ecx*4+0x6e1cb95],esi
  408170:	mov    ch,0x2f
  408172:	ret    0x93d9
  408175:	sti    
  408176:	out    0xc6,eax
  408178:	mov    bh,0x2f
  40817a:	sar    cl,0x9f
  40817d:	sti    
  40817e:	cwde   
  40817f:	(bad)  
  408180:	mov    ebx,0x9a2e2e51
  408185:	mov    DWORD PTR [ebx+0x2],edi
  408188:	mov    esp,0x98ab293d
  40818d:	jmp    0x3dff6603
  408192:	xor    ebx,ebp
  408194:	xchg   dl,ch
  408196:	mov    ds:0x8726a007,al
  40819b:	loopne 0x408121
  40819d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40819f:	xlat   BYTE PTR ds:[ebx]
  4081a0:	mov    ds:0x82f08326,al
  4081a5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a7:	sbb    DWORD PTR [eax+0x8],edx
  4081aa:	mov    al,ds:0x84dd683a
  4081af:	adc    al,0x40
  4081b1:	pop    es
  4081b2:	mov    esi,0x16fa8d2f
  4081b7:	add    cl,BYTE PTR ds:0x2ac8ea02
  4081bd:	xlat   BYTE PTR ds:[ebx]
  4081be:	ret    0xd91
  4081c1:	add    dl,ah
  4081c3:	(bad)  
  4081c4:	sub    dl,ch
  4081c6:	(bad)  
  4081c7:	mov    DWORD PTR ds:0x76eed63e,ecx
  4081cd:	jbe    0x4081ca
  4081cf:	mov    WORD PTR [eax-0x5814908d],es
  4081d5:	mov    ecx,0x6380c34b
  4081da:	outs   dx,DWORD PTR ds:[esi]
  4081db:	in     eax,dx
  4081dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081dd:	retf   
  4081de:	retf   
  4081df:	sar    esi,0x16
  4081e2:	mov    esi,0x35a0d9ef
  4081e7:	iret   
  4081e8:	jmp    FWORD PTR [ecx+edx*1-0x1f]
  4081ec:	fnstenv [esi-0x726324a]
  4081f2:	lock jecxz 0x4081eb
  4081f5:	test   DWORD PTR [esi-0x58],edx
  4081f8:	adc    dl,cl
  4081fa:	jae    0x408183
  4081fc:	xor    BYTE PTR [ebp+0x5414a854],al
  408202:	outs   dx,BYTE PTR ds:[esi]
  408203:	jmp    0x408260
  408205:	sub    eax,0x2ca42f4b
  40820a:	outs   dx,DWORD PTR ds:[esi]
  40820b:	sub    DWORD PTR [ebx-0x49480207],esi
  408211:	sub    bl,BYTE PTR [ecx+0x1f]
  408214:	adc    edi,edi
  408216:	jnp    0x408260
  408218:	push   edi
  408219:	sub    BYTE PTR [edi+0x65],ch
  40821c:	xchg   ebp,edi
  40821e:	dec    ebx
  40821f:	gs nop
  408221:	outs   dx,DWORD PTR es:[esi]
  408223:	dec    eax
  408224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408225:	repz dec ebx
  408227:	sub    DWORD PTR [eax+0x751d6e24],eax
  40822d:	pusha  
  40822e:	inc    ecx
  40822f:	pop    ds
  408230:	in     eax,dx
  408231:	loopne 0x4081c4
  408233:	xor    BYTE PTR [esi-0x9],dh
  408236:	xor    al,0x3d
  408238:	cld    
  408239:	and    BYTE PTR [esi],cl
  40823b:	dec    ecx
  40823c:	bound  eax,QWORD PTR [ecx]
  40823e:	xchg   dh,ah
  408240:	xlat   BYTE PTR ds:[ebx]
  408241:	push   fs
  408243:	leave  
  408244:	(bad)  
  408245:	call   0x2d196a45
  40824a:	ffreep st(0)
  40824c:	xchg   esi,eax
  40824d:	sti    
  40824e:	adc    eax,0x3b2fb3e6
  408253:	stc    
  408254:	xchg   ebp,eax
  408255:	clc    
  408256:	sti    
  408257:	sti    
  408258:	mov    ch,0x2c
  40825a:	fistp  QWORD PTR [ecx]
  40825c:	nop
  40825d:	sti    
  40825e:	in     eax,0xe6
  408260:	mov    ebx,0x9af9862f
  408265:	sti    
  408266:	das    
  408267:	(bad)  
  408268:	mov    edi,0x99e93a2f
  40826d:	clc    
  40826e:	cmp    eax,0x9619a2c3
  408273:	iret   
  408274:	add    bl,0xbd
  408277:	fild   QWORD PTR [ecx-0x73f3e6e9]
  40827d:	ret    
  40827e:	cmp    eax,0x3c19ad2b
  408283:	iret   
  408284:	stos   BYTE PTR es:[edi],al
  408285:	into   
  408286:	sbb    edi,esp
  408288:	jne    0x40825c
  40828a:	mov    DWORD PTR [eax],ebp
  40828c:	and    ch,dl
  40828e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40828f:	div    DWORD PTR [edi+edi*1-0x7d]
  408293:	(bad)  [ecx-0x18]
  408296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408297:	cmc    
  408298:	outs   dx,BYTE PTR ds:[esi]
  408299:	cmp    eax,0xee49db81
  40829e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40829f:	rep outs dx,BYTE PTR ds:[esi]
  4082a1:	cmp    eax,DWORD PTR [ecx-0x5a13b623]
  4082a7:	icebp  
  4082a8:	outs   dx,BYTE PTR ds:[esi]
  4082a9:	cmp    DWORD PTR [ecx-0x5a1db621],eax
  4082af:	jmp    FWORD PTR [esi+0x37]
  4082b2:	adc    ecx,0xfda5e049
  4082b8:	outs   dx,BYTE PTR ds:[esi]
  4082b9:	xor    eax,0xe649d381
  4082be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082bf:	sti    
  4082c0:	outs   dx,BYTE PTR ds:[esi]
  4082c1:	xor    eax,DWORD PTR [ecx-0x5a1bb62b]
  4082c7:	stc    
  4082c8:	outs   dx,BYTE PTR ds:[esi]
  4082c9:	xor    DWORD PTR [ecx-0x5a05b629],eax
  4082cf:	(bad)  
  4082d0:	outs   dx,BYTE PTR ds:[esi]
  4082d1:	das    
  4082d2:	sub    ecx,0xc5a5f849
  4082d8:	outs   dx,BYTE PTR ds:[esi]
  4082d9:	sub    eax,0xfe49eb81
  4082de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082df:	ret    
  4082e0:	outs   dx,BYTE PTR ds:[esi]
  4082e1:	sub    eax,DWORD PTR [ecx-0x5a03b613]
  4082e7:	shr    DWORD PTR [esi+0x29],0x81
  4082eb:	out    dx,eax
  4082ec:	dec    ecx
  4082ed:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ef:	iret   
  4082f0:	outs   dx,BYTE PTR ds:[esi]
  4082f1:	daa    
  4082f2:	and    ecx,0xcda5f049
  4082f8:	jo     0x408379
  4082fa:	xchg   ebx,eax
  4082fb:	or     DWORD PTR [eax-0x58],ebx
  4082fe:	imul   esp,DWORD PTR ds:0xb7f7da0,0xffffffb7
  408305:	scas   al,BYTE PTR es:[edi]
  408306:	dec    ebx
  408307:	and    eax,DWORD PTR [eax-0x58f29085]
  40830d:	lods   al,BYTE PTR ds:[esi]
  40830e:	dec    ebx
  40830f:	and    DWORD PTR [eax-0x58f09087],eax
  408315:	mov    ds:0x77802f4b,al
  40831a:	outs   dx,DWORD PTR ds:[esi]
  40831b:	add    DWORD PTR [edi-0x775cb760],esp
  408321:	jne    0x408388
  408323:	pop    es
  408324:	xchg   BYTE PTR [esi+0x73fe2b35],ah
  40832a:	add    DWORD PTR [esi+0x61],esi
  40832d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40832e:	mov    esp,0x9119dee0
  408333:	iret   
  408334:	out    0xcd,al
  408336:	stos   BYTE PTR es:[edi],al
  408337:	loopne 0x4082f9
  408339:	sub    DWORD PTR [edi-0x57321b21],ecx
  40833f:	loopne 0x408303
  408341:	sbb    DWORD PTR [ebp-0x51321d31],ecx
  408347:	loopne 0x40830d
  408349:	sbb    DWORD PTR [ebx-0x53321f31],ecx
  40834f:	loopne 0x408317
  408351:	sbb    DWORD PTR [ecx-0x5d321131],ecx
  408357:	loopne 0x408321
  408359:	sbb    DWORD PTR [edi-0x5f321331],eax
  40835f:	loopne 0x40832b
  408361:	sbb    DWORD PTR [ebp-0x59321531],eax
  408367:	loopne 0x408335
  408369:	sbb    DWORD PTR [ebx-0x5b321731],eax
  40836f:	loopne 0x40833f
  408371:	sbb    DWORD PTR [ecx-0x65326931],eax
  408377:	loopne 0x408329
  408379:	sbb    DWORD PTR [edi-0x67326b31],edi
  40837f:	loopne 0x408333
  408381:	sbb    DWORD PTR [ebp+0x75cd92cc],edi
  408387:	loopne 0x40833d
  408389:	sbb    DWORD PTR [ebx-0x63326f31],edi
  40838f:	loopne 0x408347
  408391:	sbb    DWORD PTR [ecx-0x6d326131],edi
  408397:	loopne 0x408351
  408399:	sbb    DWORD PTR [edi-0x6f326331],esi
  40839f:	loopne 0x40835b
  4083a1:	sbb    DWORD PTR [ebp-0x69326531],esi
  4083a7:	loopne 0x408365
  4083a9:	sbb    DWORD PTR [ebx-0x6b326731],esi
  4083af:	loopne 0x40836f
  4083b1:	sbb    DWORD PTR [ecx-0x75327931],esi
  4083b7:	loopne 0x408359
  4083b9:	sbb    DWORD PTR [edi-0x77327b31],ebp
  4083bf:	loopne 0x408363
  4083c1:	sbb    DWORD PTR [ebp-0x71327d31],ebp
  4083c7:	loopne 0x40836d
  4083c9:	sbb    DWORD PTR [ebx-0x73327f31],ebp
  4083cf:	loopne 0x408377
  4083d1:	sbb    DWORD PTR [ecx-0x7d327131],ebp
  4083d7:	loopne 0x408381
  4083d9:	sbb    DWORD PTR [edi-0x7f327331],esp
  4083df:	loopne 0x408390
  4083e1:	sbb    DWORD PTR [eax-0x7a327631],esp
  4083e7:	loopne 0x40837a
  4083e9:	sbb    esi,ebx
  4083eb:	iret   
  4083ec:	mov    bh,0xcd
  4083ee:	sti    
  4083ef:	loopne 0x408384
  4083f1:	sbb    esp,ebx
  4083f3:	iret   
  4083f4:	mov    ch,0xcd
  4083f6:	stc    
  4083f7:	loopne 0x40838e
  4083f9:	sbb    edx,ebx
  4083fb:	iret   
  4083fc:	mov    bl,0xcd
  4083fe:	jmp    eax
  408400:	xchg   edi,eax
  408401:	sbb    eax,ebx
  408403:	iret   
  408404:	mov    cl,0xcd
  408406:	std    
  408407:	loopne 0x4083a2
  408409:	sbb    esi,edx
  40840b:	iret   
  40840c:	mov    edi,0x9be0f3cd
  408411:	sbb    esp,edx
  408413:	iret   
  408414:	mov    ebp,0x9de0f1cd
  408419:	sbb    edx,edx
  40841b:	iret   
  40841c:	mov    ebx,0x81e0f7cd
  408421:	sbb    esi,ecx
  408423:	iret   
  408424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408425:	int    0xeb
  408427:	loopne 0x4083ac
  408429:	sbb    esp,ecx
  40842b:	iret   
  40842c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842d:	int    0xe9
  40842f:	loopne 0x4083b6
  408431:	sbb    edx,ecx
  408433:	iret   
  408434:	mov    ds:0x87e0efcd,eax
  408439:	sbb    eax,ecx
  40843b:	iret   
  40843c:	mov    eax,ds:0x89e0edcd
  408441:	sbb    esi,eax
  408443:	iret   
  408444:	scas   eax,DWORD PTR es:[edi]
  408445:	int    0xe3
  408447:	loopne 0x408419
  408449:	cmp    DWORD PTR [edi-0x77120be1],ebp
  40844f:	jo     0x408423
  408451:	cmp    DWORD PTR [ebp-0x71120d61],ebp
  408457:	lock aam 0x19
  40845a:	stos   DWORD PTR es:[edi],eax
  40845b:	iret   
  40845c:	lock int 0x8c
  40845f:	loopne 0x408437
  408461:	sbb    DWORD PTR [ecx-0x7d320131],ebp
  408467:	loopne 0x408441
  408469:	sbb    DWORD PTR [edi-0x7f320331],esp
  40846f:	loopne 0x40844b
  408471:	sbb    DWORD PTR [ebp-0x79320531],esp
  408477:	loopne 0x408455
  408479:	sbb    DWORD PTR [ebx-0x7b320731],esp
  40847f:	loopne 0x40845f
  408481:	sbb    DWORD PTR [ecx-0x5321931],esp
  408487:	loopne 0x408449
  408489:	sbb    edi,ebx
  40848b:	iret   
  40848c:	in     al,0xcd
  40848e:	clc    
  40848f:	loopne 0x408453
  408491:	sbb    ebp,ebx
  408493:	iret   
  408494:	loop   0x408463
  408496:	(bad)  
  408497:	loopne 0x40845d
  408499:	sbb    ebx,ebx
  40849b:	iret   
  40849c:	loopne 0x40846b
  40849e:	cld    
  40849f:	loopne 0x408467
  4084a1:	sbb    ecx,ebx
  4084a3:	iret   
  4084a4:	out    dx,al
  4084a5:	int    0xf2
  4084a7:	loopne 0x408471
  4084a9:	sbb    edi,edx
  4084ab:	iret   
  4084ac:	in     al,dx
  4084ad:	int    0xf0
  4084af:	loopne 0x40847b
  4084b1:	sbb    ebp,edx
  4084b3:	iret   
  4084b4:	jmp    0xd319:0xcce0f6cd
  4084bb:	iret   
  4084bc:	call   0xcf21798e
  4084c1:	sbb    ecx,edx
  4084c3:	iret   
  4084c4:	xchg   esi,eax
  4084c5:	int    0xea
  4084c7:	loopne 0x408479
  4084c9:	sbb    edi,ecx
  4084cb:	iret   
  4084cc:	xchg   esp,eax
  4084cd:	int    0xe8
  4084cf:	loopne 0x408483
  4084d1:	sbb    ebp,ecx
  4084d3:	iret   
  4084d4:	xchg   edx,eax
  4084d5:	int    0xee
  4084d7:	loopne 0x40848d
  4084d9:	sbb    ebx,ecx
  4084db:	iret   
  4084dc:	nop
  4084dd:	int    0xec
  4084df:	loopne 0x408497
  4084e1:	sbb    ecx,ecx
  4084e3:	iret   
  4084e4:	sahf   
  4084e5:	int    0xe2
  4084e7:	loopne 0x4084a1
  4084e9:	sbb    edi,eax
  4084eb:	iret   
  4084ec:	pushf  
  4084ed:	int    0xe0
  4084ef:	loopne 0x4084ab
  4084f1:	sbb    ebp,eax
  4084f3:	iret   
  4084f4:	call   0xc319:0xbce0e6cd
  4084fb:	iret   
  4084fc:	cwde   
  4084fd:	int    0xe4
  4084ff:	loopne 0x4084bf
  408501:	sbb    ecx,eax
  408503:	iret   
  408504:	xchg   ch,cl
  408506:	(bad)  
  408508:	mov    al,ds:0x84cfff19
  40850d:	int    0xd8
  40850f:	loopne 0x4084b3
  408511:	sbb    ebp,edi
  408513:	int3   
  408514:	or     bl,0xb8
  408517:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408519:	(bad)  
  40851b:	fimul  WORD PTR [eax+0x1a]
  40851e:	ins    DWORD PTR es:[edi],dx
  40851f:	pop    ebx
  408520:	xor    BYTE PTR [esi],al
  408522:	outs   dx,DWORD PTR ds:[esi]
  408523:	rcl    DWORD PTR [ecx-0x32],1
  408526:	pusha  
  408527:	cmp    BYTE PTR [ecx+0x5],ah
  40852a:	loop   0x408575
  40852c:	mov    bh,bl
  40852e:	addr16 and al,al
  408531:	rol    al,0xc0
  408534:	rol    al,0xc0
  408537:	rol    al,0xc0
  40853a:	rol    al,0xc0
  40853d:	rol    al,0xc0
  408540:	rol    al,0xc0
  408543:	rol    al,0xc0
  408546:	rol    al,0xc0
  408549:	rol    al,0xc0
  40854c:	rol    al,0xc0
  40854f:	rol    al,0xc0
  408552:	rol    al,0xc0
  408555:	rol    al,0xc0
  408558:	rol    al,0xc0
  40855b:	rol    al,0xc0
  40855e:	rol    al,0xb5
  408561:	add    BYTE PTR [ecx-0x48976e8],al
  408567:	mov    DWORD PTR [eax-0x4b3366c1],0xdc4aa15
  408571:	lahf   
  408572:	jp     0x40856d
  408574:	mov    bl,0xd
  408576:	jle    0x408539
  408578:	outs   dx,BYTE PTR ds:[esi]
  408579:	into   
  40857a:	jns    0x4085f0
  40857c:	pop    ss
  40857d:	loop   0x4085ca
  40857f:	into   
  408580:	jbe    0x40859c
  408582:	je     0x40859b
  408584:	inc    esi
  408585:	loope  0x40854d
  408587:	popfw  
  408589:	das    
  40858a:	jae    0x40859b
  40858c:	xchg   edx,eax
  40858d:	in     al,0xa5
  40858f:	cmp    BYTE PTR [esi-0x59c60c27],bl
  408595:	int    0xcb
  408597:	pusha  
  408598:	sbb    BYTE PTR [ecx],0xe6
  40859b:	(bad)  
  40859c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40859d:	int    0xc5
  40859f:	loopne 0x408523
  4085a1:	sbb    DWORD PTR [edi],ebx
  4085a3:	iret   
  4085a4:	mov    ds:0x84e03ecd,al
  4085a9:	sbb    DWORD PTR [eax],ebx
  4085ab:	iret   
  4085ac:	mov    al,ds:0x86e037cd
  4085b1:	sbb    DWORD PTR [eax],edx
  4085b3:	int3   
  4085b4:	scas   al,BYTE PTR es:[edi]
  4085b5:	mov    ebp,DWORD PTR [eax]
  4085b7:	ss mov bh,bh
  4085ba:	adc    al,0xd9
  4085bc:	lods   al,BYTE PTR ds:[esi]
  4085bd:	stc    
  4085be:	or     eax,0x6c88ea2
  4085c3:	or     eax,0xe01619fe
  4085c8:	sub    eax,0xeb09cc9f
  4085cd:	jmp    0x4085b8
  4085cf:	test   bh,0x2f
  4085d2:	out    0xe9,al
  4085d4:	div    cl
  4085d6:	cwde   
  4085d7:	and    edx,eax
  4085d9:	call   0x82a8:0xaedfab3c
  4085e0:	push   ebp
  4085e1:	js     0x4085b9
  4085e3:	scas   eax,DWORD PTR es:[edi]
  4085e4:	(bad)  
  4085e5:	mov    ds:0x74358e98,al
  4085ea:	xor    eax,0xb21bfa81
  4085ef:	fdiv   DWORD PTR [ebx+0x5f988fa1]
  4085f5:	mov    al,0xab
  4085f7:	arpl   WORD PTR [edx+0x57],di
  4085fa:	xchg   edx,eax
  4085fb:	sbb    bl,BYTE PTR [ebx+0x24]
  4085fe:	sub    eax,DWORD PTR ds:0x138c3762
  408604:	js     0x4085a1
  408606:	lds    ebp,FWORD PTR [edi+0x581fdf5f]
  40860c:	inc    esp
  40860d:	cs sahf 
  40860f:	jbe    0x40864a
  408611:	sti    
  408612:	cvtps2pd xmm6,QWORD PTR [esp+ebp*1-0x2]
  408617:	je     0x40866f
  408619:	push   edi
  40861a:	retf   0x7e1a
  40861d:	cs out dx,eax
  40861f:	outs   dx,DWORD PTR ds:[esi]
  408620:	push   eax
  408621:	dec    edi
  408622:	enter  0x742a,0x4e
  408626:	in     eax,dx
  408627:	add    al,0xf8
  408629:	mov    esi,0xab74218d
  40862e:	fild   DWORD PTR [ebx+0x5d]
  408631:	iret   
  408632:	cld    
  408633:	inc    eax
  408634:	jge    0x4085d1
  408636:	fst    DWORD PTR ds:0x2cf49f5c
  40863c:	jns    0x408680
  40863e:	sar    DWORD PTR [esi+0x1a1eff72],1
  408644:	jbe    0x408675
  408646:	xor    edx,DWORD PTR [ebp-0x27]
  408649:	push   ebx
  40864a:	mov    eax,0x2b4e6705
  40864f:	push   edi
  408650:	clc    
  408651:	dec    esp
  408652:	mov    WORD PTR [ecx+0x72],?
  408655:	cdq    
  408656:	not    BYTE PTR [ebp+0x60]
  408659:	dec    edx
  40865a:	pop    ss
  40865b:	jnp    0x4086a1
  40865d:	lahf   
  40865e:	sahf   
  40865f:	add    edi,DWORD PTR [ecx]
  408661:	dec    eax
  408662:	cvtps2pi mm6,QWORD PTR [ebp+ebx*4-0x2]
  408667:	add    ecx,ebp
  408669:	push   edi
  40866a:	mov    ecx,0x922ecf1a
  40866f:	outs   dx,DWORD PTR ds:[esi]
  408670:	in     eax,dx
  408671:	dec    edi
  408672:	mov    ebp,0x9b4ecc2a
  408677:	mov    esp,0x958cfcf8
  40867c:	sbb    BYTE PTR [edx],bl
  40867e:	(bad)  
  40867f:	mov    ecx,0x1a01575c
  408684:	js     0x4086b4
  408686:	adc    BYTE PTR [edi+0x1b],ch
  408689:	dec    edi
  40868a:	xor    eax,0x161b3d3a
  40868f:	add    ebx,DWORD PTR ds:0x3b993396
  408695:	sub    BYTE PTR [ebx+eiz*2],dl
  408698:	pop    ds
  408699:	jno    0x4086b2
  40869b:	addr16 add al,0xa2
  40869e:	or     al,BYTE PTR [ebx]
  4086a0:	adc    DWORD PTR [esi+0x2837992f],edx
  4086a6:	or     BYTE PTR [ebx+0x13],ah
  4086a9:	ins    DWORD PTR es:[edi],dx
  4086aa:	pop    ss
  4086ab:	imul   eax,DWORD PTR [esi+edi*4-0x62],0x43
  4086b0:	cmp    DWORD PTR [ebx+0xf],ebp
  4086b3:	ins    DWORD PTR es:[edi],dx
  4086b4:	je     0x408672
  4086b6:	inc    BYTE PTR [ecx-0x3a]
  4086b9:	push   edi
  4086ba:	stc    
  4086bb:	sbb    ch,dh
  4086bd:	shr    BYTE PTR cs:[edi-0x38],cl
  4086c1:	dec    edi
  4086c2:	mul    DWORD PTR [ebx]
  4086c4:	call   0xb9d8b2bb
  4086c9:	push   ds
  4086ca:	jp     0x408695
  4086cc:	and    al,0xc8
  4086ce:	sahf   
  4086cf:	push   ebx
  4086d0:	cmp    DWORD PTR ds:0xce747d0f,ebx
  4086d6:	(bad)  
  4086d7:	push   ecx
  4086d8:	mov    ah,0x57
  4086da:	jmp    0xc26f16f9
  4086df:	outs   dx,DWORD PTR ds:[esi]
  4086e0:	mov    dh,0x4f
  4086e2:	out    0x2a,eax
  4086e4:	sahf   
  4086e5:	dec    esi
  4086e6:	shr    dh,0xf8
  4086e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ea:	mov    edx,es
  4086ec:	jb     0x408764
  4086ee:	repnz in al,dx
  4086f0:	loopne 0x408695
  4086f2:	mov    esp,0x777412c4
  4086f7:	scas   al,BYTE PTR es:[edi]
  4086f8:	push   cs
  4086f9:	int3   
  4086fa:	push   eax
  4086fb:	sub    al,0xd6
  4086fd:	inc    edx
  4086fe:	jne    0x4086b6
  408700:	lock cld 
  408702:	dec    esi
  408703:	dec    esp
  408704:	aam    0xdb
  408706:	xor    esp,DWORD PTR [ebx+eiz*2+0x478cb80c]
  40870d:	dec    esi
  40870e:	imul   esp,DWORD PTR [edx-0x7173f508],0xa0f2df72
  408718:	loopne 0x408759
  40871a:	mov    esp,0x1be812a8
  40871f:	scas   al,BYTE PTR es:[edi]
  408720:	xchg   edx,eax
  408721:	int3   
  408722:	cmp    al,0x2c
  408724:	mov    dl,0x4e
  408726:	sbb    DWORD PTR [esi],esp
  408728:	jns    0x408761
  40872a:	pop    es
  40872b:	lods   al,BYTE PTR ds:[esi]
  40872c:	ja     0x40870e
  40872e:	test   al,0x82
  408730:	push   ebp
  408731:	xor    eax,0xe6c753d6
  408736:	mov    BYTE PTR [ebx+0x60],bh
  408739:	mov    ecx,0x5eeb55ba
  40873e:	xor    BYTE PTR [ebx+esi*4+0x7e],dh
  408742:	push   0x41
  408744:	sbb    dl,BYTE PTR [edx]
  408746:	int3   
  408747:	mov    es,WORD PTR [ebp+0x33190b88]
  40874d:	out    dx,al
  40874e:	adc    BYTE PTR [ebx+eax*2],0xec
  408752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408753:	inc    ebp
  408754:	or     BYTE PTR [eax-0x376e9157],bl
  40875a:	repnz mov eax,ds:0x33996440
  408760:	movlps xmm0,QWORD PTR [edi+0xd784b6b]
  408767:	and    edi,edi
  408769:	mov    esp,DWORD PTR [ebx-0x21c4fe91]
  40876f:	and    DWORD PTR [edi],esi
  408771:	(bad)  
  408772:	out    dx,al
  408773:	imul   ebx,DWORD PTR [eax],0xfdf70767
  408779:	popf   
  40877a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877b:	mov    bp,WORD PTR [ebx-0xbebadf7]
  408782:	(bad)  [ecx+0x72]
  408785:	shl    BYTE PTR [esi-0x3197c2b0],0x3c
  40878c:	mov    bl,0x58
  40878e:	xchg   edx,eax
  40878f:	add    al,0xd4
  408791:	mov    dh,0xa9
  408793:	mov    ds:0xab82b65c,eax
  408798:	or     ah,dh
  40879a:	xchg   edx,eax
  40879b:	pusha  
  40879c:	jg     0x408809
  40879e:	mov    dl,BYTE PTR [edi+0x50d79873]
  4087a4:	fs inc edi
  4087a6:	push   DWORD PTR [esi]
  4087a8:	xor    BYTE PTR [ebp+0x1e],al
  4087ab:	ds ret 0xb37c
  4087af:	call   DWORD PTR [ebx+ebp*4]
  4087b2:	iret   
  4087b3:	pop    eax
  4087b4:	gs mov ds,esi
  4087b7:	addr16 push 0x16a3ea4e
  4087bd:	int3   
  4087be:	fwait
  4087bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c0:	cmc    
  4087c1:	scas   al,BYTE PTR es:[edi]
  4087c2:	pop    es
  4087c3:	jne    0x4087fd
  4087c5:	lahf   
  4087c6:	hlt    
  4087c7:	ins    BYTE PTR es:[edi],dx
  4087c8:	jecxz  0x4087c1
  4087ca:	cli    
  4087cb:	(bad)  
  4087cc:	ret    
  4087cd:	jp     0x408795
  4087cf:	imul   edx,DWORD PTR fs:[eax+ebp*8-0x40],0x81d33e3a
  4087d8:	shl    DWORD PTR [edx+0x68669dd0],0x10
  4087df:	xor    ebx,DWORD PTR [edx]
  4087e1:	mov    ds:0x7e3d2da6,al
  4087e6:	sbb    al,0xa1
  4087e8:	jecxz  0x40883c
  4087ea:	sbb    edx,eax
  4087ec:	imul   DWORD PTR [edx-0x1]
  4087ef:	sbb    eax,0x30bb8ae2
  4087f4:	sub    eax,DWORD PTR [edi]
  4087f6:	xchg   ecx,eax
  4087f7:	sub    eax,0x798436fd
  4087fc:	add    BYTE PTR [ebp-0x22],al
  4087ff:	imul   ecx,DWORD PTR fs:[edi+0x42],0x4b
  408804:	call   0xa742:0xd54fca58
  40880b:	pop    edx
  40880c:	test   BYTE PTR [ecx-0x4793e017],bh
  408812:	in     al,0xa2
  408814:	jbe    0x408823
  408816:	xchg   edx,eax
  408817:	jnp    0x40888e
  408819:	xchg   ebx,eax
  40881a:	adc    esi,DWORD PTR [esi+0x54]
  40881d:	sub    al,0xc9
  40881f:	mov    esi,0x68b8826d
  408824:	call   0xda5f:0xaa649b79
  40882b:	pushf  
  40882c:	retf   
  40882d:	mov    eax,0x8258a7a4
  408832:	inc    esi
  408833:	mov    dh,0x1e
  408835:	xchg   esp,eax
  408836:	jo     0x40888b
  408838:	pop    es
  408839:	mov    al,0x85
  40883b:	stc    
  40883c:	jb     0x4088ac
  40883e:	fadd   st,st(1)
  408840:	sbb    eax,0x569bf6f2
  408845:	cwde   
  408846:	(bad)  
  408847:	sbb    BYTE PTR [ebp-0x68],al
  40884a:	xchg   BYTE PTR [ecx+0x26aaae08],bl
  408850:	scas   eax,DWORD PTR es:[edi]
  408851:	imul   ebx
  408853:	out    dx,al
  408854:	cmp    al,BYTE PTR [esi]
  408856:	(bad)  
  408857:	mov    BYTE PTR [ebx+0x7d],bh
  40885a:	fs and al,0x5e
  40885d:	dec    esi
  40885e:	into   
  40885f:	stos   BYTE PTR es:[edi],al
  408860:	cmp    eax,0xf0169d7f
  408865:	scas   al,BYTE PTR es:[edi]
  408866:	es push ebx
  408868:	ss scas al,BYTE PTR es:[edi]
  40886a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886b:	daa    
  40886c:	inc    eax
  40886d:	jge    0x408827
  40886f:	cmp    ebx,DWORD PTR [edi-0x47]
  408872:	icebp  
  408873:	jno    0x408840
  408875:	data16 (bad) 
  408878:	adc    al,BYTE PTR ds:0x68ef16f3
  40887e:	rcr    BYTE PTR [ebp+0x5a67ae21],cl
  408884:	jp     0x4088ea
  408886:	push   ss
  408887:	pop    ecx
  408888:	cdq    
  408889:	jmp    0x75ea:0xca328d54
  408890:	cs fstp st(1)
  408893:	ins    DWORD PTR es:[edi],dx
  408894:	and    al,BYTE PTR [ebx+ebx*8+0x4a]
  408898:	fstp   DWORD PTR [eax+0x436b7af1]
  40889e:	ficomp WORD PTR [ecx+0x21f7e11f]
  4088a4:	das    
  4088a5:	adc    ch,BYTE PTR [edx-0x1364928c]
  4088ab:	jl     0x408927
  4088ad:	ds sahf 
  4088af:	push   es
  4088b0:	jge    0x408848
  4088b2:	retf   0xaecf
  4088b5:	and    eax,0x7d94098b
  4088ba:	aas    
  4088bb:	add    al,0x46
  4088bd:	cmp    bh,BYTE PTR [esi+0x48]
  4088c0:	add    dl,BYTE PTR [edx]
  4088c2:	xlat   BYTE PTR ds:[ebx]
  4088c3:	dec    ebx
  4088c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c5:	mov    ebx,0x925cac3e
  4088ca:	add    BYTE PTR [edx],al
  4088cc:	xor    DWORD PTR [esi-0x2e],ebx
  4088cf:	mov    edi,0x5b98d0c4
  4088d4:	jbe    0x408900
  4088d6:	(bad)  
  4088d7:	inc    esi
  4088d8:	or     BYTE PTR [ebx+0x22fa7ac9],bh
  4088de:	leave  
  4088df:	xor    bh,BYTE PTR [esi+0x7030cbdd]
  4088e5:	daa    
  4088e6:	sti    
  4088e7:	dec    esi
  4088e8:	push   ss
  4088e9:	mov    ecx,0x1535a0b9
  4088ee:	push   ss
  4088ef:	push   edi
  4088f0:	push   es
  4088f1:	mov    edi,0x4c857d1f
  4088f6:	pushf  
  4088f7:	aaa    
  4088f8:	dec    esi
  4088f9:	fwait
  4088fa:	dec    esi
  4088fb:	ret    
  4088fc:	xor    ah,BYTE PTR [ebx+edx*8+0xf]
  408900:	jle    0x40888e
  408902:	push   ebx
  408903:	outs   dx,BYTE PTR ds:[esi]
  408904:	or     al,0xa9
  408906:	ds inc ebx
  408908:	hlt    
  408909:	mov    ah,bh
  40890b:	js     0x4088e7
  40890d:	aas    
  40890e:	sti    
  40890f:	dec    edi
  408910:	add    al,0xa
  408912:	add    eax,0xdb703f0d
  408917:	cmp    eax,0xb4bdeacd
  40891c:	pop    ebx
  40891d:	add    cl,bh
  40891f:	and    edx,ecx
  408921:	add    ah,BYTE PTR [ebp-0x3651db45]
  408927:	gs push es
  408929:	xchg   esp,eax
  40892a:	or     al,0x4f
  40892c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892d:	(bad)  
  40892e:	iret   
  40892f:	hlt    
  408930:	sbb    bh,BYTE PTR [ebx+0x311a1673]
  408936:	inc    edi
  408937:	or     DWORD PTR [eax+0x30],0xfffffff2
  40893b:	stos   BYTE PTR es:[edi],al
  40893c:	xchg   ebx,eax
  40893d:	por    mm6,QWORD PTR [edi+0x73]
  408941:	aaa    
  408942:	out    0x71,al
  408944:	jnp    0x4088dc
  408946:	mov    al,ds:0x125a25a4
  40894b:	jbe    0x40895b
  40894d:	aas    
  40894e:	xchg   edi,eax
  40894f:	popa   
  408950:	in     eax,dx
  408951:	ret    
  408952:	mov    bl,0x82
  408954:	sbb    DWORD PTR [edx-0x60],edi
  408957:	mov    edi,db6
  40895a:	mov    ebx,0xb6383a70
  40895f:	pop    ss
  408960:	aad    0xa9
  408962:	test   DWORD PTR [esi-0x78b59ceb],0x25f8970c
  40896c:	sbb    edx,edi
  40896e:	push   ebx
  40896f:	sahf   
  408970:	push   ds
  408971:	push   es
  408972:	mov    dl,0x5b
  408974:	mov    al,ds:0x5f471a69
  408979:	lods   eax,DWORD PTR ds:[esi]
  40897a:	mov    edx,0xd4c2307f
  40897f:	loop   0x40899e
  408981:	test   al,0x81
  408983:	add    BYTE PTR [edi],cl
  408985:	imul   edx,DWORD PTR [ebp+eax*2-0x660a94af],0xffffffe5
  40898d:	aas    
  40898e:	call   0x194a:0x99fb81eb
  408995:	pop    esi
  408996:	repz arpl WORD PTR [ebx],bx
  408999:	(bad)  
  40899a:	adc    DWORD PTR [esi+0x13],eax
  40899d:	jne    0x4089f1
  40899f:	aas    
  4089a0:	or     cl,BYTE PTR [esi+0x2f75be2]
  4089a6:	std    
  4089a7:	test   DWORD PTR [ecx+0x66],edx
  4089aa:	inc    esi
  4089ab:	push   0xc9a30fe
  4089b0:	push   esp
  4089b1:	lods   eax,DWORD PTR ds:[esi]
  4089b2:	push   ds
  4089b3:	and    ecx,DWORD PTR [edx-0x57]
  4089b6:	stos   DWORD PTR es:[edi],eax
  4089b7:	mov    WORD PTR [ebp-0x1],cs
  4089ba:	mov    esi,0x8cf00a42
  4089bf:	paddq  mm0,mm4
  4089c2:	cmp    eax,0xf159c510
  4089c7:	lods   eax,DWORD PTR ds:[esi]
  4089c8:	pop    ecx
  4089c9:	stc    
  4089ca:	stos   BYTE PTR es:[edi],al
  4089cb:	inc    esp
  4089cc:	push   eax
  4089cd:	xor    DWORD PTR [edi-0x3651c0a9],edi
  4089d3:	stc    
  4089d4:	pop    edx
  4089d5:	inc    esi
  4089d6:	push   0xf19ea232
  4089db:	mov    esp,DWORD PTR [esi]
  4089dd:	mov    bh,bl
  4089df:	dec    ecx
  4089e0:	leave  
  4089e1:	scas   al,BYTE PTR es:[edi]
  4089e2:	jmp    0x408a5c
  4089e4:	xor    dh,bh
  4089e6:	call   0x1c789dfe
  4089eb:	ret    
  4089ec:	jbe    0x408a6c
  4089ee:	xor    DWORD PTR [ebx+0x1f],0xffffffbd
  4089f2:	push   es
  4089f3:	push   ecx
  4089f4:	sub    al,0x9c
  4089f6:	cwde   
  4089f7:	not    DWORD PTR [esi]
  4089f9:	sbb    BYTE PTR [esi-0x2dadea88],dl
  4089ff:	scas   eax,DWORD PTR es:[edi]
  408a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a01:	imul   DWORD PTR [edx+0x3a]
  408a04:	call   0xb2c2:0x580edc87
  408a0b:	inc    ecx
  408a0c:	sub    BYTE PTR [ebx+0x29],ah
  408a0f:	cmp    DWORD PTR [edi+0x761c50d3],esi
  408a15:	add    al,0xff
  408a17:	sub    al,0x9
  408a19:	lds    esp,FWORD PTR [esi-0x2187e9dc]
  408a1f:	shr    BYTE PTR [esi],0xc7
  408a22:	sbb    DWORD PTR [eax+0x37],edi
  408a25:	aam    0xce
  408a27:	shl    BYTE PTR [eax],1
  408a29:	bound  bp,DWORD PTR [esi+edx*1+0x32]
  408a2e:	mov    edx,DWORD PTR [ecx]
  408a30:	and    cl,dl
  408a32:	loopne 0x408a8f
  408a34:	sbb    DWORD PTR es:[edx-0x7589eed],edx
  408a3b:	rep lods al,BYTE PTR ds:[esi]
  408a3d:	ds xchg ebx,eax
  408a3f:	dec    esi
  408a40:	add    dl,al
  408a42:	(bad)  
  408a43:	sbb    BYTE PTR [ebx+0x7d],dl
  408a46:	fisttp DWORD PTR [esi+0x13]
  408a49:	popf   
  408a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4b:	mov    eax,ds:0x79a8049e
  408a50:	test   al,0xa9
  408a52:	jbe    0x408a79
  408a54:	xchg   edi,eax
  408a55:	jl     0x408a39
  408a57:	mov    edi,0x44d7f630
  408a5c:	pop    esi
  408a5d:	or     BYTE PTR [edi],cl
  408a5f:	ret    
  408a60:	sub    al,bl
  408a62:	aam    0xf2
  408a64:	push   ss
  408a65:	cs es cli 
  408a68:	jo     0x4089ed
  408a6a:	sub    eax,0x51ed5359
  408a6f:	inc    eax
  408a70:	push   ecx
  408a71:	hlt    
  408a72:	out    dx,al
  408a73:	push   es
  408a74:	cmp    bh,BYTE PTR [edi-0x37]
  408a77:	or     DWORD PTR [esi+esi*4+0x6115a0c],ecx
  408a7e:	xchg   ebx,eax
  408a7f:	je     0x408a7d
  408a81:	in     eax,0x64
  408a83:	jmp    0x78dba493
  408a88:	mov    cs,WORD PTR [eax]
  408a8a:	pop    es
  408a8b:	add    DWORD PTR [esi+0x49],0x45f6a1fe
  408a92:	test   al,0x4a
  408a94:	cmp    BYTE PTR [ebp-0x29],0xde
  408a98:	inc    eax
  408a99:	loopne 0x408a78
  408a9b:	in     al,dx
  408a9c:	push   ds
  408a9d:	shl    bl,cl
  408a9f:	jae    0x408add
  408aa1:	hlt    
  408aa2:	fistp  WORD PTR [eax+0x4a]
  408aa5:	pop    ebx
  408aa6:	(bad)  
  408aa7:	mov    ah,0xa3
  408aa9:	mov    bh,0xe8
  408aab:	inc    ecx
  408aac:	repnz cmp al,0x4b
  408aaf:	lahf   
  408ab0:	and    ebx,DWORD PTR [esi+0x1a1365d3]
  408ab6:	div    DWORD PTR [edx-0x6dc55380]
  408abc:	lea    ebp,[ebx]
  408abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abf:	fld    QWORD PTR [ecx-0x3a]
  408ac2:	int    0x69
  408ac4:	add    al,0x7c
  408ac6:	push   DWORD PTR [ebx]
  408ac8:	and    eax,0xb76112b1
  408acd:	sbb    ebx,esi
  408acf:	repnz mov al,0xd8
  408ad2:	lods   eax,DWORD PTR ds:[esi]
  408ad3:	cmp    bl,BYTE PTR [ebx]
  408ad5:	lods   al,BYTE PTR ds:[esi]
  408ad6:	sbb    DWORD PTR ds:0xa85fff5,esp
  408adc:	sbb    DWORD PTR [edx+esi*8+0x60],esp
  408ae0:	adc    BYTE PTR ds:0x12deeefc,dh
  408ae6:	jbe    0x408a6c
  408ae8:	push   ebp
  408ae9:	mov    ecx,0x7e017dda
  408aee:	mov    dh,0xa6
  408af0:	pop    ss
  408af1:	mov    bl,0xee
  408af3:	ins    BYTE PTR es:[edi],dx
  408af4:	add    BYTE PTR [eax-0x2e],ch
  408af7:	dec    ebx
  408af8:	pop    esp
  408af9:	retf   0x84ca
  408afc:	test   BYTE PTR [eax-0x651adfc6],al
  408b02:	dec    ecx
  408b03:	jle    0x408a85
  408b05:	imul   ecx,DWORD PTR [edi+esi*8+0x12084f6d],0x1eda326f
  408b10:	ds mov esp,0x115a62f5
  408b16:	scas   al,BYTE PTR es:[edi]
  408b17:	push   esp
  408b18:	and    BYTE PTR [eax+0x3b121df2],bh
  408b1e:	push   0xffffffa7
  408b20:	imul   edi,DWORD PTR [edx-0x48],0xb680e218
  408b27:	add    DWORD PTR [edi+0x1a264c8d],0x52
  408b2e:	adc    al,0x47
  408b30:	sub    bh,bh
  408b32:	push   ecx
  408b33:	fcom   QWORD PTR [ecx-0x4114e3c]
  408b39:	sbb    eax,0xa267a54
  408b3e:	dec    edx
  408b3f:	(bad)  
  408b40:	mov    ebp,0x88d74613
  408b45:	repnz int 0xfd
  408b48:	add    DWORD PTR [esi],edi
  408b4a:	push   cs
  408b4b:	loop   0x408b97
  408b4d:	sub    DWORD PTR [edi-0x464dcbac],ecx
  408b53:	sub    dh,dh
  408b55:	daa    
  408b56:	outs   dx,BYTE PTR ds:[esi]
  408b57:	push   ds
  408b58:	xchg   BYTE PTR [ebx],bh
  408b5a:	sbb    edx,edi
  408b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b5d:	(bad)  
  408b5e:	pop    ebx
  408b5f:	push   edi
  408b60:	lahf   
  408b61:	adc    dh,BYTE PTR [ebp-0xe]
  408b64:	ins    DWORD PTR es:[edi],dx
  408b65:	out    0x77,al
  408b67:	push   esp
  408b68:	dec    edx
  408b69:	cmp    dh,BYTE PTR [esi+0x16]
  408b6c:	mov    ah,0xc8
  408b6e:	in     eax,0xd1
  408b70:	mov    dh,0x37
  408b72:	arpl   di,bp
  408b74:	jne    0x408b73
  408b76:	pusha  
  408b77:	daa    
  408b78:	loope  0x408afa
  408b7a:	aad    0x55
  408b7c:	sbb    ecx,DWORD PTR [ebp-0x1a]
  408b7f:	and    ah,BYTE PTR [edx-0x62]
  408b82:	xlat   BYTE PTR ds:[ebx]
  408b83:	inc    edx
  408b84:	push   esi
  408b85:	les    eax,FWORD PTR [edx-0x6c3db1e5]
  408b8b:	or     BYTE PTR [edi+0x19],cl
  408b8e:	mov    dh,BYTE PTR [eax]
  408b90:	jae    0x408b5c
  408b92:	stos   DWORD PTR es:[edi],eax
  408b93:	pop    es
  408b94:	jnp    0x408b98
  408b96:	mov    ebp,0xd99b2d85
  408b9b:	mov    BYTE PTR [ebp+0x2956c86e],bh
  408ba1:	aad    0xe1
  408ba3:	jle    0x408bc6
  408ba5:	popa   
  408ba6:	sub    esi,DWORD PTR [ebx]
  408ba8:	add    dh,BYTE PTR [edx]
  408baa:	jmp    0x408c16
  408bac:	push   esi
  408bad:	inc    esp
  408bae:	out    dx,al
  408baf:	push   0x52d28037
  408bb4:	sbb    al,0x7e
  408bb6:	sar    DWORD PTR [edx],0x28
  408bb9:	xchg   bl,al
  408bbb:	icebp  
  408bbc:	dec    BYTE PTR [esi-0x5e]
  408bbf:	es mov edx,0x9ed65317
  408bc5:	fidiv  DWORD PTR [ebx]
  408bc7:	jecxz  0x408bb4
  408bc9:	movzx  edx,dx
  408bcc:	lea    esp,[esi-0x53cf834a]
  408bd2:	fild   DWORD PTR [edx+ecx*1-0x44]
  408bd6:	mov    edx,0x3e6ad383
  408bdb:	mov    ds:0x9086abce,al
  408be0:	leave  
  408be1:	data16 and al,0x7
  408be4:	int    0xc6
  408be6:	pop    ecx
  408be7:	addr16 sti 
  408be9:	pop    ebp
  408bea:	jle    0x408b80
  408bec:	shl    BYTE PTR [edx],1
  408bee:	xor    eax,0xbad670cb
  408bf3:	and    DWORD PTR [eax+0x36],esi
  408bf6:	xchg   edx,eax
  408bf7:	jmp    0x408c63
  408bf9:	call   0x38b4ae88
  408bfe:	adc    al,0x33
  408c00:	jp     0x408bfb
  408c02:	stos   BYTE PTR es:[edi],al
  408c03:	jg     0x408c6f
  408c05:	sbb    DWORD PTR [edi-0x77349760],esi
  408c0b:	aaa    
  408c0c:	pusha  
  408c0d:	or     ecx,DWORD PTR [esi+0x53]
  408c10:	ins    DWORD PTR es:[edi],dx
  408c11:	sub    BYTE PTR [esi-0x48ee511f],al
  408c17:	ret    0xf2ad
  408c1a:	mov    ecx,0x8827670b
  408c1f:	or     BYTE PTR [eax-0xc],cl
  408c22:	call   0x877ecc51
  408c27:	adc    BYTE PTR [ecx-0x5e],dh
  408c2a:	jmp    0x408c3e
  408c2c:	push   ecx
  408c2d:	add    al,0xa8
  408c2f:	retf   
  408c30:	ins    BYTE PTR es:[edi],dx
  408c31:	fld    QWORD PTR [edx-0x79eaac00]
  408c37:	sub    edx,DWORD PTR [ecx-0x18fd6e36]
  408c3d:	mov    dh,0x3b
  408c3f:	jge    0x408c68
  408c41:	nop
  408c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c43:	pop    edx
  408c44:	xchg   edx,eax
  408c45:	inc    eax
  408c46:	test   DWORD PTR [ebx],edi
  408c48:	and    bl,BYTE PTR [ebp+0x5a1687d5]
  408c4e:	jmp    0xed33296a
  408c53:	push   ebp
  408c54:	push   esi
  408c55:	inc    ebx
  408c56:	cld    
  408c57:	add    BYTE PTR [eax],al
  408c59:	test   eax,0xf0372af
  408c5e:	sti    
  408c5f:	imul   ebx,DWORD PTR [esi-0x59],0x6bb609e1
  408c66:	idiv   BYTE PTR [ecx+0x26]
  408c69:	out    dx,al
  408c6a:	dec    ecx
  408c6b:	lahf   
  408c6c:	push   esi
  408c6d:	cmp    DWORD PTR [edx],0xf5be8ba
  408c73:	pop    DWORD PTR [edx-0x1288db8e]
  408c79:	not    BYTE PTR [edi+0x7a]
  408c7c:	mov    BYTE PTR [edx],cl
  408c7e:	popa   
  408c7f:	hlt    
  408c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c81:	adc    ecx,DWORD PTR [esi+ebx*8]
  408c84:	pushf  
  408c85:	ficomp WORD PTR [ebx-0x9]
  408c88:	mov    cl,0xf
  408c8a:	addr16 neg ebp
  408c8d:	xchg   edi,eax
  408c8e:	dec    eax
  408c8f:	loop   0x408c40
  408c91:	sti    
  408c92:	sahf   
  408c93:	pop    ecx
  408c94:	add    cl,BYTE PTR [ebp-0xf]
  408c97:	jno    0x408ccd
  408c99:	in     al,0xc7
  408c9b:	pop    es
  408c9c:	repnz pop ebp
  408c9e:	ret    0x7429
  408ca1:	iret   
  408ca2:	popf   
  408ca3:	adc    DWORD PTR [esi+0x10],eax
  408ca6:	sub    edi,DWORD PTR [edi+0x6d]
  408ca9:	mov    al,ds:0xa8e08c9e
  408cae:	or     DWORD PTR [ebp-0x40c92f21],ecx
  408cb4:	out    0xee,eax
  408cb6:	pop    ds
  408cb7:	xchg   edi,eax
  408cb8:	fstp   st(5)
  408cba:	fdivrp st(0),st
  408cbc:	mov    esp,0xa1da58f9
  408cc1:	jmp    0x408cc1
  408cc3:	adc    BYTE PTR [esp+eax*4+0x27],0xa2
  408cc8:	out    dx,eax
  408cc9:	ds cld 
  408ccb:	adc    al,0xb
  408ccd:	push   ebx
  408cce:	jmp    FWORD PTR [ebp+0x20]
  408cd1:	fisttp QWORD PTR [edx]
  408cd3:	add    ecx,DWORD PTR [ecx]
  408cd5:	xor    edi,DWORD PTR [edx-0x296dc44b]
  408cdb:	inc    esi
  408cdc:	dec    ebx
  408cdd:	pop    ebp
  408cde:	mul    DWORD PTR ds:0x56dc9d7f
  408ce4:	push   ss
  408ce5:	dec    esp
  408ce6:	cmc    
  408ce7:	sub    eax,0x98899e25
  408cec:	fs or  al,0xe4
  408cef:	jno    0x408d54
  408cf1:	(bad)  
  408cf2:	xlat   BYTE PTR ds:[ebx]
  408cf3:	stos   BYTE PTR es:[edi],al
  408cf4:	push   ecx
  408cf5:	stos   DWORD PTR es:[edi],eax
  408cf6:	cmp    eax,0x8e58f9ab
  408cfb:	leave  
  408cfc:	ret    0x748a
  408cff:	enter  0x50a1,0x17
  408d03:	jns    0x408ccf
  408d05:	stos   BYTE PTR es:[edi],al
  408d06:	cmp    esi,DWORD PTR [ecx-0x68ff3d16]
  408d0c:	(bad)  
  408d0d:	lock add al,0xf9
  408d10:	outs   dx,DWORD PTR ds:[esi]
  408d11:	push   esi
  408d12:	inc    ebp
  408d13:	hlt    
  408d14:	sub    ecx,DWORD PTR [eax+ebx*1]
  408d17:	rcl    DWORD PTR [ecx+0x51c9736f],0xc9
  408d1e:	pop    edi
  408d1f:	leave  
  408d20:	fwait
  408d21:	cmp    cl,BYTE PTR [esi+0x16e8a0ab]
  408d27:	daa    
  408d28:	lea    esi,[ecx]
  408d2a:	popa   
  408d2b:	in     eax,0xfd
  408d2d:	in     al,dx
  408d2e:	inc    eax
  408d2f:	rol    al,1
  408d31:	rol    al,0xc0
  408d34:	rol    al,0xc0
  408d37:	rol    al,0xc0
  408d3a:	rol    al,0xc0
  408d3d:	rol    al,0xc0
  408d40:	rol    al,0xc0
  408d43:	rol    al,0xc0
  408d46:	rol    al,0xc0
  408d49:	rol    al,0xc0
  408d4c:	rol    al,0xc0
  408d4f:	rol    al,0xc0
  408d52:	rol    al,0xc0
  408d55:	rol    al,0xc0
  408d58:	rol    al,0xc0
  408d5b:	rol    al,0xc0
  408d5e:	rol    al,0xc0
  408d61:	rol    al,0xc0
  408d64:	rol    al,0xc0
  408d67:	rol    al,0xc0
  408d6a:	rol    al,0xc0
  408d6d:	rol    al,0xc0
  408d70:	rol    al,0xc0
  408d73:	rol    al,0xc0
  408d76:	rol    al,0xc0
  408d79:	rol    al,0xc0
  408d7c:	rol    al,0xc0
  408d7f:	rol    al,0xc0
  408d82:	rol    al,0xc0
  408d85:	rol    al,0xc0
  408d88:	xchg   BYTE PTR [edx],dl
  408d8a:	das    
  408d8b:	sti    
  408d8c:	scas   eax,DWORD PTR es:[edi]
  408d8d:	inc    BYTE PTR [ecx-0x2e]
  408d90:	dec    ecx
  408d91:	es jne 0x408d2a
  408d94:	scas   eax,DWORD PTR es:[edi]
  408d95:	in     eax,0x26
  408d97:	in     eax,dx
  408d98:	daa    
  408d99:	push   edi
  408d9a:	lahf   
  408d9b:	xchg   BYTE PTR [esi],al
  408d9d:	push   ecx
  408d9e:	in     eax,0x76
  408da0:	mov    ah,0xc8
  408da2:	mov    esi,0xec3a4fa5
  408da7:	jae    0x408d38
  408da9:	ror    ch,0x47
  408dac:	mov    dl,ah
  408dae:	jge    0x408dd3
  408db0:	aaa    
  408db1:	xchg   edi,eax
  408db2:	mov    es,WORD PTR [esi+0x16]
  408db5:	inc    edi
  408db6:	in     al,0xb5
  408db8:	(bad)  [edx]
  408dba:	loope  0x408da6
  408dbc:	push   0xffffffeb
  408dbe:	inc    esi
  408dbf:	push   eax
  408dc0:	adc    al,0x30
  408dc2:	jmp    FWORD PTR [edx+esi*1]
  408dc5:	cmp    DWORD PTR [ecx+0x28],edi
  408dc8:	pop    ds
  408dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dca:	jno    0x408e41
  408dcc:	jnp    0x408dff
  408dce:	mov    bl,0xd0
  408dd0:	xchg   ecx,eax
  408dd1:	stos   DWORD PTR es:[edi],eax
  408dd2:	sti    
  408dd3:	outs   dx,DWORD PTR ds:[esi]
  408dd4:	jmp    0x9ac2:0x4d2702e9
  408ddb:	pop    ecx
  408ddc:	inc    ebp
  408ddd:	adc    esp,DWORD PTR [ecx-0x39cb9339]
  408de3:	jle    0x408e27
  408de5:	jo     0x408d8f
  408de7:	pop    ebp
  408de8:	jle    0x408da8
  408dea:	shl    DWORD PTR [eax],cl
  408dec:	cmp    DWORD PTR fs:[ecx-0x412c85ff],eax
  408df3:	sub    al,0x68
  408df5:	ret    0x2dee
  408df8:	jp     0x408dc6
  408dfa:	popf   
  408dfb:	push   ss
  408dfc:	arpl   WORD PTR [esi],cx
  408dfe:	sub    BYTE PTR [edi],ch
  408e00:	gs jnp 0xd36aad52
  408e07:	push   0x4cde9376
  408e0c:	es inc edx
  408e0e:	test   BYTE PTR [edi+0x24b65c3f],cl
  408e14:	gs cmp ebx,ebx
  408e17:	sbb    al,0x75
  408e19:	adc    eax,0x3645f01
  408e1e:	mov    edx,0x5402bf6c
  408e23:	enter  0xfe6e,0x76
  408e27:	mov    ebx,0x8e9e1cb9
  408e2c:	(bad)  
  408e2d:	cmp    DWORD PTR [ecx],0x12c0fc93
  408e33:	xchg   esp,eax
  408e34:	out    dx,al
  408e35:	xor    BYTE PTR [ecx+esi*4-0x646bb4bd],al
  408e3c:	mov    dh,0x7f
  408e3f:	jmp    0xc0afa6b4
  408e44:	lahf   
  408e45:	rol    DWORD PTR [edi-0x1b],cl
  408e48:	xchg   ecx,eax
  408e49:	or     edx,DWORD PTR [ecx+0x15]
  408e4c:	xchg   edi,eax
  408e4e:	ins    DWORD PTR es:[edi],dx
  408e4f:	sbb    DWORD PTR [ecx],edx
  408e51:	imul   BYTE PTR [edi-0x1]
  408e54:	stos   BYTE PTR es:[edi],al
  408e55:	(bad)  
  408e56:	mov    ch,0xe4
  408e58:	mov    esp,DWORD PTR ds:0xf7b48975
  408e5e:	dec    edi
  408e5f:	(bad)  
  408e60:	mov    ds:0xa21a2fbc,eax
  408e65:	mov    bh,BYTE PTR [edi+0x6f]
  408e68:	sub    DWORD PTR [eax+0x47210fd0],ebx
  408e6e:	repz ja 0x408eac
  408e71:	loopne 0x408eaf
  408e73:	dec    edx
  408e74:	adc    dh,BYTE PTR [edx+edi*8-0x39]
  408e78:	add    BYTE PTR ds:[edx-0x47a8feb0],0x8
  408e80:	pop    ebp
  408e81:	cli    
  408e82:	stos   BYTE PTR es:[edi],al
  408e83:	push   0x3b9b1165
  408e88:	push   esp
  408e89:	loop   0x408e43
  408e8b:	repnz (bad) 
  408e8d:	and    al,0x92
  408e8f:	xor    eax,0x3bafe346
  408e94:	cmp    BYTE PTR [eax],dh
  408e96:	push   esp
  408e97:	ds ins DWORD PTR es:[edi],dx
  408e99:	repz jbe 0x408ec7
  408e9c:	jge    0x408e92
  408e9e:	xchg   ebx,eax
  408e9f:	and    BYTE PTR [edx-0x7],cl
  408ea2:	mov    esp,0xa09b653d
  408ea7:	pop    es
  408ea8:	inc    ebx
  408ea9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408eab:	xor    dh,ch
  408ead:	mov    ch,0x9f
  408eaf:	pop    ss
  408eb0:	pusha  
  408eb1:	test   al,0x61
  408eb3:	or     BYTE PTR [edx+0x16],al
  408eb6:	lahf   
  408eb7:	cmp    DWORD PTR [ebp-0x32],edi
  408eba:	sbb    BYTE PTR ds:0xaf40e54,0x67
  408ec1:	pusha  
  408ec2:	jecxz  0x408ef1
  408ec4:	push   ebp
  408ec5:	inc    ebx
  408ec6:	xchg   BYTE PTR ds:0xa8b0e69d,cl
  408ecc:	in     al,0x3f
  408ece:	add    DWORD PTR [esi-0x41210451],0x7d
  408ed5:	ds cwde 
  408ed7:	imul   esp,DWORD PTR [ecx+0x53],0xffffffa0
  408edb:	sub    DWORD PTR [edx],esp
  408edd:	call   0x80:0xd57d28b1
  408ee4:	not    BYTE PTR [eax]
  408ee6:	test   eax,0x3ec67338
  408eeb:	clc    
  408eec:	inc    edx
  408eed:	pop    es
  408eee:	mov    ebp,0x91e87535
  408ef3:	push   es
  408ef4:	fist   DWORD PTR [ebp+0x7a]
  408ef7:	fmul   QWORD PTR [ebp-0x7c088822]
  408efd:	in     al,0x5f
  408eff:	iret   
  408f00:	sahf   
  408f01:	xor    eax,0xecb0efe7
  408f06:	dec    eax
  408f07:	sar    BYTE PTR [esi+0x33],cl
  408f0a:	pop    esi
  408f0b:	repz scas al,BYTE PTR es:[edi]
  408f0d:	repnz mov ebp,ebx
  408f10:	mov    edx,0xb4326946
  408f15:	shl    BYTE PTR [ecx+ebp*8],1
  408f18:	mov    ds:0x8ddf3e02,eax
  408f1d:	retf   0xce7e
  408f20:	adc    DWORD PTR [ebx],0xffffffee
  408f23:	xlat   BYTE PTR ds:[ebx]
  408f24:	dec    ecx
  408f25:	fldcw  WORD PTR [esi-0x1a]
  408f28:	ja     0x408f4d
  408f2a:	push   ebp
  408f2b:	(bad)  
  408f2c:	pusha  
  408f2d:	std    
  408f2e:	dec    edi
  408f2f:	in     eax,dx
  408f30:	test   eax,0x28f9452a
  408f35:	pop    edi
  408f36:	add    bh,0x71
  408f39:	push   esp
  408f3a:	ds sbb ecx,0xffffff9a
  408f3e:	push   ss
  408f3f:	mov    al,ds:0x930c4176
  408f44:	iret   
  408f45:	pushf  
  408f46:	loopne 0x408fbb
  408f48:	jno    0x408f4c
  408f4a:	inc    ebp
  408f4b:	(bad)  
  408f4c:	mov    ?,eax
  408f4e:	arpl   WORD PTR [ebx],di
  408f50:	lods   al,BYTE PTR ds:[esi]
  408f51:	sbb    al,0x60
  408f53:	(bad)  
  408f54:	cdq    
  408f55:	(bad)  
  408f56:	jl     0x408f73
  408f58:	push   ecx
  408f59:	cli    
  408f5a:	popf   
  408f5b:	sub    esp,DWORD PTR [eax+0x2a]
  408f5e:	mov    al,0x10
  408f60:	inc    ebx
  408f61:	data16 mov bl,0x23
  408f64:	push   edx
  408f65:	add    al,0x92
  408f67:	pop    ds
  408f68:	inc    eax
  408f69:	out    dx,al
  408f6a:	add    BYTE PTR [ecx+0x1f],bh
  408f6d:	adc    eax,0x327246a2
  408f72:	xchg   edx,eax
  408f73:	add    DWORD PTR [eax+0x4e37b31c],edi
  408f79:	fcomp  DWORD PTR [ebp+0x54e32a28]
  408f7f:	fcomp  QWORD PTR [esi+ebx*8-0x15c0da7]
  408f86:	inc    ebp
  408f87:	fild   DWORD PTR [edx-0x4a386fc6]
  408f8d:	std    
  408f8e:	inc    esp
  408f8f:	push   ebp
  408f90:	popa   
  408f91:	jmp    0x8965850
  408f96:	mov    bl,0x2d
  408f98:	je     0x408f2c
  408f9a:	mov    WORD PTR [edx+0x42],?
  408f9d:	or     ebp,DWORD PTR [ebx-0x5d1a8585]
  408fa3:	and    DWORD PTR [esi+0x42],edx
  408fa6:	xchg   esp,eax
  408fa7:	pop    ss
  408fa8:	pop    ebp
  408fa9:	sti    
  408faa:	jmp    0x766b:0xaa2a063a
  408fb1:	xchg   ebp,eax
  408fb2:	rol    BYTE PTR [eax+0x34],0x5a
  408fb6:	mov    eax,ds:0xcb889e24
  408fbb:	mov    BYTE PTR [edi+edi*2],ah
  408fbe:	fidiv  DWORD PTR ds:0xbf88207
  408fc4:	stos   BYTE PTR es:[edi],al
  408fc5:	jno    0x408f8d
  408fc7:	inc    ebp
  408fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fc9:	(bad)  
  408fca:	div    DWORD PTR [ebp+0x4]
  408fcd:	adc    eax,0x671a49c5
  408fd2:	cdq    
  408fd3:	addr16 (bad) 
  408fd6:	(bad)  [eax+0x40da971c]
  408fdc:	push   edi
  408fdd:	loopne 0x409023
  408fdf:	test   BYTE PTR [ebp+0x26f07633],0x27
  408fe6:	pusha  
  408fe7:	aas    
  408fe8:	xchg   esi,eax
  408fe9:	cmp    eax,0x3f77297a
  408fee:	repnz cmp eax,0x21a8dd54
  408ff4:	dec    ecx
  408ff5:	and    dl,BYTE PTR [ecx+0x703cb527]
  408ffb:	dec    BYTE PTR [edx+0x7ed54be6]
  409001:	sub    DWORD PTR [edi-0x11],edi
  409004:	mov    dh,0x49
  409006:	push   ebp
  409007:	fisub  WORD PTR [eax-0x1607371a]
  40900d:	cmc    
  40900e:	pop    edx
  40900f:	outs   dx,BYTE PTR ds:[esi]
  409010:	outs   dx,DWORD PTR ds:[esi]
  409011:	int3   
  409012:	xchg   esp,eax
  409013:	sub    BYTE PTR [edi+0x1a],dl
  409016:	mov    bh,0x29
  409018:	jp     0x408fdd
  40901a:	test   DWORD PTR [esi+eiz*2],edx
  40901d:	dec    eax
  40901e:	mov    edi,0x1c95c1e
  409023:	push   ss
  409024:	pop    ecx
  409025:	cwde   
  409026:	mov    esi,0x8a0ed082
  40902b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40902d:	out    dx,al
  40902e:	xor    DWORD PTR [eax],0xf86d88d
  409034:	dec    ecx
  409035:	add    DWORD PTR [ebp+0x7ac28dd7],esp
  40903b:	(bad)  
  40903c:	mov    ds:0x8ff57156,al
  409041:	jp     0x409039
  409043:	popa   
  409044:	push   esi
  409045:	jge    0x409027
  409047:	inc    ebx
  409048:	sbb    esi,DWORD PTR [edx+0xd2b63eb]
  40904e:	jmp    0xf9f8aeab
  409053:	dec    esp
  409054:	and    eax,0x7038ae4a
  409059:	repnz mov WORD PTR [ebx],cs
  40905c:	dec    edx
  40905d:	adc    BYTE PTR [ecx+0x37fb7a3a],bh
  409063:	adc    BYTE PTR [edi+0xa],cl
  409066:	sbb    BYTE PTR [ecx-0x46fd3c39],cl
  40906c:	jecxz  0x408ffc
  40906e:	sbb    al,0x9b
  409070:	fstp   st(7)
  409072:	call   0x8a82c4e9
  409077:	loope  0x409083
  409079:	ret    
  40907a:	jecxz  0x4090e3
  40907c:	aas    
  40907d:	stos   BYTE PTR es:[di],al
  40907f:	push   0xffffffbc
  409081:	adc    eax,0xd9b2de83
  409086:	lock cld 
  409088:	mov    al,ds:0xadeedf6a
  40908d:	fdivp  st(2),st
  40908f:	xchg   esi,eax
  409090:	lahf   
  409091:	ds jg  0x4090fc
  409094:	mov    ds:0x2950d013,eax
  409099:	stos   DWORD PTR es:[edi],eax
  40909a:	in     al,dx
  40909b:	popa   
  40909c:	mov    esp,0xa45a66c
  4090a1:	mov    edi,0x74b019b
  4090a6:	js     0x409091
  4090a8:	jg     0x409109
  4090aa:	pop    ss
  4090ab:	addr16 ds jbe 0x4090f0
  4090af:	fbld   TBYTE PTR [ecx+esi*8]
  4090b2:	out    0x14,al
  4090b4:	push   cs
  4090b5:	sub    cl,bh
  4090b7:	cmc    
  4090b8:	push   esp
  4090b9:	(bad)  
  4090bb:	jle    0x4090d2
  4090bd:	retf   0xab9
  4090c0:	sbb    al,0x98
  4090c2:	mov    eax,ds:0xdab67d37
  4090c7:	cdq    
  4090c8:	push   ss
  4090c9:	adc    al,0x1e
  4090cb:	mov    cl,0xd9
  4090cd:	xchg   ebp,eax
  4090ce:	xor    al,0xc0
  4090d0:	xor    DWORD PTR [esi+0x34c58e1f],edx
  4090d6:	aas    
  4090d7:	mov    esi,0xda194576
  4090dc:	into   
  4090dd:	lahf   
  4090de:	and    BYTE PTR ds:0xef760961,ah
  4090e4:	push   ss
  4090e5:	jnp    0x409164
  4090e7:	icebp  
  4090e8:	and    DWORD PTR ds:0xade69c92,ecx
  4090ee:	(bad)  
  4090ef:	mov    dl,0x4d
  4090f1:	into   
  4090f2:	jno    0x409144
  4090f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f5:	jbe    0x4090c5
  4090f7:	jmp    0xcf1eb1a9
  4090fc:	(bad)  
  4090fd:	fdivr  QWORD PTR [eax-0x1e]
  409100:	jno    0x40910c
  409102:	pop    ecx
  409103:	aam    0xa7
  409105:	(bad)  
  409106:	jns    0x4090ee
  409108:	mov    ebp,0xd2d75ad9
  40910d:	popf   
  40910e:	xor    al,BYTE PTR [ecx*4+0x656e600c]
  409115:	dec    BYTE PTR [edx+0x65]
  409118:	mov    ah,0x44
  40911a:	fs inc ecx
  40911c:	hlt    
  40911d:	in     eax,dx
  40911e:	sti    
  40911f:	pop    ds
  409120:	retf   0x5571
  409123:	xchg   ebx,eax
  409124:	test   BYTE PTR [ecx+0x7a96b816],0xff
  40912b:	mov    esi,0x975abefe
  409130:	iret   
  409131:	mov    esi,0x1f5e2037
  409136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409137:	sub    ebx,DWORD PTR [eax-0x4dee6eee]
  40913d:	sub    edi,DWORD PTR [edx-0x4304bfe5]
  409143:	cmp    esi,DWORD PTR [esi+0x31]
  409146:	lods   al,BYTE PTR ds:[esi]
  409147:	daa    
  409148:	pop    ebx
  409149:	cli    
  40914a:	mov    eax,0xd9327523
  40914f:	push   edi
  409150:	add    esi,DWORD PTR [ecx-0x739cec5f]
  409156:	mov    ch,BYTE PTR [eax]
  409158:	(bad)  
  409159:	leave  
  40915a:	fcomp  QWORD PTR [eax+0x3aa331db]
  409160:	neg    ch
  409162:	(bad)  
  409163:	adc    edi,DWORD PTR [ebp+ebx*8-0x51]
  409167:	mov    al,ds:0x819fb974
  40916c:	fsubr  DWORD PTR [edx-0x23ad4e5c]
  409172:	add    al,0x38
  409174:	jg     0x4091b3
  409176:	cld    
  409177:	jmp    DWORD PTR [ebx+0x21]
  40917a:	inc    esi
  40917b:	(bad)
  40917e:	xor    al,0x11
  409180:	shl    DWORD PTR [eax+0x3b],0xa
  409184:	pop    eax
  409185:	push   ecx
  409186:	mov    DWORD PTR [ebp+0x15],0xceb695cf
  40918d:	xchg   BYTE PTR [ebx+esi*2],dh
  409190:	xor    DWORD PTR [esp+eax*1-0x4f],edx
  409194:	rcr    DWORD PTR [ebp-0x789e4616],cl
  40919a:	(bad)  
  40919b:	push   esp
  40919c:	push   eax
  40919d:	inc    ecx
  40919e:	sub    eax,DWORD PTR [ebx]
  4091a0:	push   ds
  4091a1:	pushf  
  4091a2:	jp     0x4091e6
  4091a4:	cmp    BYTE PTR [edx],dh
  4091a6:	(bad)  
  4091a7:	pop    ebp
  4091a8:	inc    ecx
  4091a9:	add    esi,ebx
  4091ab:	in     eax,0xbc
  4091ad:	cmc    
  4091ae:	loope  0x40917e
  4091b0:	push   edx
  4091b1:	mov    esi,0x8d049ad5
  4091b6:	mov    dl,0x6a
  4091b8:	cmc    
  4091b9:	mov    ch,BYTE PTR [esi-0x31396f2d]
  4091bf:	clc    
  4091c0:	xchg   esi,eax
  4091c1:	mov    edi,0xfcb1c059
  4091c6:	not    ah
  4091c8:	pop    ss
  4091c9:	xlat   BYTE PTR ds:[ebx]
  4091ca:	push   0xffffffea
  4091cc:	xchg   edx,eax
  4091cd:	mov    cl,dl
  4091cf:	into   
  4091d0:	mov    BYTE PTR ds:0xc6b93574,ah
  4091d6:	iret   
  4091d7:	aas    
  4091d8:	xchg   esi,eax
  4091d9:	das    
  4091da:	js     0x409224
  4091dc:	cwde   
  4091dd:	xlat   BYTE PTR ds:[ebx]
  4091de:	xchg   esi,eax
  4091df:	std    
  4091e0:	fidiv  DWORD PTR [edx-0x7f]
  4091e3:	jmp    0x4091be
  4091e5:	jmp    0x40923c
  4091e7:	cwde   
  4091e8:	loopne 0x409212
  4091ea:	ficomp WORD PTR [ecx+0x26f50442]
  4091f0:	jge    0x4091c5
  4091f2:	rol    BYTE PTR [edi],1
  4091f4:	in     eax,0xa0
  4091f6:	mov    dh,0x69
  4091f8:	xor    al,al
  4091fa:	mov    ds:0xcc081590,eax
  4091ff:	push   esi
  409200:	add    eax,0x9e62edb1
  409205:	xchg   edx,eax
  409206:	cli    
  409207:	sub    BYTE PTR [ecx],bh
  409209:	aam    0xe0
  40920b:	inc    edx
  40920c:	push   ebp
  40920d:	mov    ah,0x4c
  40920f:	fwait
  409210:	ror    DWORD PTR [ebx+eiz*1+0x40],1
  409214:	iret   
  409215:	cmp    eax,edx
  409217:	push   ds
  409218:	sbb    al,0xa5
  40921a:	or     DWORD PTR [edx+0x28],esp
  40921d:	sub    BYTE PTR [edx-0x5fa016b1],0x69
  409224:	xor    eax,0x300b3fe
  409229:	mov    eax,ds:0x8e7608ee
  40922e:	cmp    bl,BYTE PTR [ebx-0xbd86826]
  409234:	dec    edx
  409235:	push   cs
  409236:	scas   eax,DWORD PTR es:[edi]
  409237:	in     eax,0x66
  409239:	ror    BYTE PTR [esi-0x58d52bf1],1
  40923f:	cmp    eax,0xb8ffc233
  409244:	push   ebp
  409245:	and    bl,BYTE PTR [edx-0x60]
  409248:	test   DWORD PTR [edi*4+0x55a3b8fb],esi
  40924f:	(bad)  
  409250:	pop    edx
  409251:	sahf   
  409252:	loop   0x409223
  409254:	xchg   edi,eax
  409255:	aam    0x62
  409257:	loop   0x4092be
  409259:	adc    eax,0x54ec55a
  40925e:	jp     0x40925a
  409260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409261:	jecxz  0x40920a
  409263:	xchg   esp,eax
  409264:	xchg   ecx,eax
  409265:	fstp   TBYTE PTR [ecx]
  409267:	ror    BYTE PTR [ecx-0x5a568acc],1
  40926d:	mov    dh,0x72
  40926f:	xlat   BYTE PTR ds:[ebx]
  409270:	cdq    
  409271:	xor    BYTE PTR [ebx-0x58],ch
  409274:	adc    edx,0xde06b746
  40927a:	gs in  al,0xa8
  40927d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40927e:	add    al,0xc8
  409280:	mov    al,0xa
  409282:	(bad)  
  409283:	retf   
  409284:	shl    BYTE PTR [edx],0x60
  409287:	xchg   edi,eax
  409288:	mov    ecx,0xfbb52587
  40928d:	or     esp,DWORD PTR [ebx+esi*4-0x18]
  409291:	dec    ebx
  409292:	add    eax,0x7b2ac79a
  409297:	sahf   
  409298:	dec    eax
  409299:	ja     0x4092c1
  40929b:	(bad)  
  40929c:	in     al,dx
  40929d:	test   eax,0x9a708d07
  4092a2:	fisttp DWORD PTR [edx+0x1]
  4092a5:	dec    ebx
  4092a6:	cli    
  4092a7:	das    
  4092a8:	inc    ecx
  4092a9:	jmp    0x25a2b96a
  4092ae:	out    dx,eax
  4092af:	add    ah,BYTE PTR [ecx+0x52]
  4092b2:	sub    BYTE PTR [eax-0x6cec5aac],bh
  4092b8:	retf   
  4092b9:	imul   esp,DWORD PTR [edx],0xffffffa9
  4092bc:	jbe    0x409310
  4092be:	call   0xdc883529
  4092c3:	pop    esp
  4092c4:	lahf   
  4092c5:	push   ebx
  4092c6:	mov    dl,BYTE PTR [eax+0x59]
  4092c9:	fcompp 
  4092cb:	inc    eax
  4092cc:	and    edi,DWORD PTR [ecx-0x26]
  4092cf:	dec    edx
  4092d0:	sbb    ch,BYTE PTR [edi+0x83057a2]
  4092d6:	les    esi,FWORD PTR [ebp+edx*1-0x44]
  4092da:	out    0x6b,eax
  4092dc:	fimul  DWORD PTR [edx+0x291c40c0]
  4092e2:	dec    ebp
  4092e3:	xchg   edx,eax
  4092e4:	sub    ebp,DWORD PTR [eax+0x79]
  4092e7:	pop    edx
  4092e8:	icebp  
  4092e9:	adc    edi,esp
  4092eb:	jl     0x40930a
  4092ed:	pop    ecx
  4092ee:	mov    ecx,0xd78b2079
  4092f3:	imul   ecx,DWORD PTR [edx+ecx*8],0xe6294af4
  4092fa:	ret    0xe649
  4092fd:	dec    ebp
  4092fe:	cmp    dl,BYTE PTR [ecx]
  409300:	imul   eax,eax,0xda781eb8
  409306:	mov    dh,0x3c
  409308:	push   0xee2c6b47
  40930d:	mov    esi,0x24d13b46
  409312:	cmp    esi,DWORD PTR [ebx+0x56fb37b6]
  409318:	pop    ecx
  409319:	mov    esi,0xd77a68ff
  40931e:	inc    eax
  40931f:	popa   
  409320:	push   ecx
  409321:	(bad)  
  409322:	xchg   esi,eax
  409323:	ret    
  409324:	mov    ds:0x5b6556e1,eax
  409329:	rcr    ah,cl
  40932b:	in     al,0x90
  40932d:	sub    ah,BYTE PTR [esi+0x5e04afff]
  409333:	lods   eax,DWORD PTR ds:[esi]
  409334:	(bad)  
  409335:	mov    WORD PTR [edi],?
  409337:	mov    eax,0x4333efa
  40933c:	(bad)  
  40933d:	not    DWORD PTR [ebx-0x38]
  409340:	pop    eax
  409341:	mov    esi,0x783c6d97
  409346:	fstp   QWORD PTR [edi-0x14]
  409349:	fcom   QWORD PTR [edi]
  40934b:	ret    
  40934c:	xchg   ecx,ebx
  40934e:	push   0xffffffe8
  409350:	cmc    
  409351:	sub    DWORD PTR [ebp-0x50],ebx
  409354:	mov    edi,0x87c75e0d
  409359:	cmp    al,0xad
  40935b:	in     al,0xa2
  40935d:	mov    bl,BYTE PTR [ebx]
  40935f:	fwait
  409360:	(bad)  
  409361:	stos   BYTE PTR es:[edi],al
  409362:	cmp    ebp,esi
  409364:	lock js 0x409371
  409367:	and    bl,ah
  409369:	push   esi
  40936a:	adc    al,0x81
  40936c:	ror    BYTE PTR [ebp+0x24],0x74
  409370:	into   
  409371:	dec    ecx
  409372:	dec    esi
  409373:	mov    cl,0xd7
  409375:	call   0x3182:0xc3db2f2
  40937c:	push   eax
  40937d:	jb     0x40935e
  40937f:	dec    esp
  409380:	cmp    DWORD PTR [ecx+eiz*1-0x29d50fba],ebp
  409387:	adc    al,0x5d
  409389:	hlt    
  40938a:	cmovs  ebx,eax
  40938d:	test   DWORD PTR [eax+0x1b],0xcf602db4
  409394:	dec    ebx
  409395:	push   es
  409396:	cli    
  409397:	in     eax,0x9c
  409399:	or     ebx,DWORD PTR [esi-0x33]
  40939c:	into   
  40939d:	sbb    ah,BYTE PTR [ecx+esi*8-0x5f]
  4093a1:	sti    
  4093a2:	nop
  4093a3:	pop    esi
  4093a4:	sbb    cl,BYTE PTR ds:0xef6e5888
  4093aa:	mov    eax,ds:0x7dc56736
  4093af:	mov    al,0x57
  4093b1:	fbld   TBYTE PTR [edi-0x2131d083]
  4093b7:	pop    ebp
  4093b8:	pop    esi
  4093b9:	scas   al,BYTE PTR es:[edi]
  4093ba:	clc    
  4093bb:	test   al,0x83
  4093bd:	add    eax,0xd8236fea
  4093c2:	fiadd  WORD PTR [edi+ebx*2+0x4b]
  4093c6:	clc    
  4093c7:	and    ecx,DWORD PTR [ebp-0x6f]
  4093ca:	fld    DWORD PTR [eax+ebx*1]
  4093cd:	push   edx
  4093ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cf:	push   cs
  4093d0:	mov    bh,0xd9
  4093d2:	pop    es
  4093d3:	mov    ebp,ecx
  4093d5:	cmp    DWORD PTR [edi],0x5
  4093d8:	neg    DWORD PTR [esi+0x76]
  4093db:	shr    BYTE PTR [ecx+0x33],0xa7
  4093df:	add    BYTE PTR [eax-0x13],dl
  4093e2:	(bad)  [ebx+eiz*2]
  4093e5:	cmp    eax,0xb035825a
  4093ea:	leave  
  4093eb:	push   edx
  4093ec:	jno    0x409432
  4093ee:	lock push ebx
  4093f0:	outs   dx,BYTE PTR ss:[esi]
  4093f2:	mov    bh,0x19
  4093f4:	dec    ebx
  4093f5:	push   es
  4093f6:	mov    esp,0x88664832
  4093fb:	jp     0x4093a3
  4093fd:	sub    bl,BYTE PTR [eax+0x1a]
  409400:	sub    eax,0x58143efd
  409405:	or     eax,0xe5460279
  40940a:	jmp    0x411f:0x723c63f1
  409411:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409413:	mov    dh,0xba
  409415:	dec    ebx
  409416:	gs call 0xcd82a6cb
  40941c:	into   
  40941d:	je     0x409457
  40941f:	sub    esp,DWORD PTR [ecx+0x3a7f9760]
  409425:	push   0xf0a1bfd7
  40942a:	mov    dh,0x59
  40942c:	popa   
  40942d:	jno    0x4094aa
  40942f:	xchg   esp,eax
  409430:	repz fsubr QWORD PTR [ebx]
  409433:	scas   al,BYTE PTR es:[edi]
  409434:	call   0xa1c7c7e8
  409439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40943a:	lea    eax,[ebx*2+0x2d3aa615]
  409441:	retf   0x5b9d
  409444:	adc    BYTE PTR [edx+eax*8-0x45],dl
  409448:	mov    cl,0x1d
  40944a:	xchg   ebx,eax
  40944b:	dec    ebp
  40944c:	adc    eax,0x1217d79a
  409451:	xchg   esi,eax
  409452:	mov    al,BYTE PTR [ecx+0x30]
  409455:	jno    0x409441
  409457:	push   ebp
  409458:	pop    ebp
  409459:	xlat   BYTE PTR ds:[ebx]
  40945a:	lahf   
  40945b:	dec    esp
  40945c:	sbb    ecx,DWORD PTR [ebx-0x12]
  40945f:	imul   esi,DWORD PTR [edx],0xca5bb182
  409465:	or     eax,0xc9e8aa75
  40946a:	nop    esi
  40946d:	pushf  
  40946e:	repnz pop ss
  409470:	iret   
  409471:	jge    0x409417
  409473:	mov    eax,ds:0x9e8379ec
  409478:	(bad)  
  40947a:	cmp    al,0x83
  40947c:	ror    DWORD PTR ds:0x73b28291,1
  409482:	ds push es
  409484:	mov    BYTE PTR [esp+esi*8+0x78],dl
  409488:	add    eax,0xc1989bea
  40948d:	mov    BYTE PTR [esi],ch
  40948f:	and    BYTE PTR [ecx+0x4b],bh
  409492:	adc    eax,0xc228c42c
  409497:	push   ecx
  409498:	push   0x682022f2
  40949d:	js     0x40945c
  40949f:	adc    al,0x62
  4094a1:	fwait
  4094a2:	mov    WORD PTR [edx],ds
  4094a4:	(bad)  
  4094a5:	xor    al,0x81
  4094a7:	add    esi,DWORD PTR [edx-0xf]
  4094aa:	mov    esi,0x89237b6c
  4094af:	daa    
  4094b0:	dec    eax
  4094b1:	push   ds
  4094b2:	inc    ebp
  4094b3:	int    0x83
  4094b5:	into   
  4094b6:	and    dh,dh
  4094b8:	cwde   
  4094b9:	mov    DWORD PTR [ebp+0x8],ebp
  4094bc:	cmp    ebx,DWORD PTR [esi-0x61]
  4094bf:	push   es
  4094c0:	pop    ebp
  4094c1:	mov    ah,0xce
  4094c3:	mov    dh,0x7a
  4094c5:	push   edi
  4094c6:	mov    ch,0x51
  4094c8:	or     dh,bl
  4094ca:	icebp  
  4094cb:	jne    0x4094f2
  4094cd:	dec    ecx
  4094ce:	in     eax,dx
  4094cf:	sub    DWORD PTR [eax],edx
  4094d1:	in     al,dx
  4094d2:	test   eax,0xda5c1661
  4094d7:	outs   dx,BYTE PTR ds:[esi]
  4094d8:	or     edx,esp
  4094da:	ds inc eax
  4094dc:	(bad)  
  4094dd:	mov    cl,0xba
  4094df:	fwait
  4094e0:	xchg   BYTE PTR [ebx],bh
  4094e2:	jp     0x4094c9
  4094e4:	int3   
  4094e5:	neg    BYTE PTR [eax+0x20]
  4094e8:	out    0x5b,al
  4094ea:	jns    0x409484
  4094ec:	lods   al,BYTE PTR ds:[esi]
  4094ed:	test   eax,0xf641f211
  4094f2:	sbb    dh,cl
  4094f4:	pop    ecx
  4094f6:	jo     0x409518
  4094f8:	mov    dl,0x4a
  4094fa:	dec    esp
  4094fb:	(bad)  
  4094fc:	iret   
  4094fd:	sti    
  4094fe:	jae    0x4094b9
  409500:	xchg   ebp,eax
  409501:	push   ds
  409502:	test   BYTE PTR [ecx],al
  409504:	push   esi
  409505:	add    al,0xff
  409507:	jo     0x409530
  409509:	adc    DWORD PTR [esi-0x40f2f9ba],0xd6dc2410
  409513:	lods   eax,DWORD PTR ds:[esi]
  409514:	dec    edi
  409515:	stos   BYTE PTR es:[edi],al
  409516:	jecxz  0x409576
  409518:	push   cs
  409519:	scas   al,BYTE PTR es:[edi]
  40951a:	mov    ebx,0x1c0a4701
  40951f:	iret   
  409520:	pushf  
  409521:	cmp    al,0x6c
  409523:	xchg   ecx,eax
  409524:	jp     0x4094b4
  409526:	jns    0x409520
  409528:	int3   
  409529:	(bad)  
  40952a:	nop
  40952b:	sbb    DWORD PTR [ebp-0x13],ebx
  40952e:	mov    dl,0x73
  409530:	jno    0x40950f
  409532:	mov    dl,0x29
  409534:	inc    esi
  409535:	sbb    eax,0xdf6d23b8
  40953a:	mov    ecx,0xa8194330
  40953f:	cmp    eax,0x4970a6c
  409544:	mov    ch,0x5a
  409546:	xchg   edx,eax
  409547:	lods   eax,DWORD PTR ds:[esi]
  409548:	aam    0x75
  40954a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954b:	fsqrt  
  40954e:	into   
  40954f:	push   DWORD PTR [eax+0x7e]
  409552:	xor    BYTE PTR [eax-0x42c87d23],dl
  409558:	rol    al,0xc0
  40955b:	rol    al,0xc0
  40955e:	rol    al,0xc0
  409561:	rol    al,0xc0
  409564:	rol    al,0xc0
  409567:	rol    al,0xc0
  40956a:	rol    al,0xc0
  40956d:	rol    al,0xc0
  409570:	rol    al,0xc0
  409573:	rol    al,0xc0
  409576:	rol    al,0xc0
  409579:	rol    al,0xc0
  40957c:	rol    al,0xc0
  40957f:	rol    al,0xc0
  409582:	rol    al,0xc0
  409585:	rol    al,0xc0
  409588:	rol    al,0xc0
  40958b:	rol    al,0xc0
  40958e:	rol    al,0xc0
  409591:	rol    al,0xc0
  409594:	rol    al,0xc0
  409597:	rol    al,0xc0
  40959a:	rol    al,0xc0
  40959d:	rol    al,0xc0
  4095a0:	rol    al,0xc0
  4095a3:	rol    al,0xc0
  4095a6:	rol    al,0xc0
  4095a9:	rol    al,0xc0
  4095ac:	rol    al,0xc0
  4095af:	rol    BYTE PTR [ecx],0xa
  4095b2:	pop    edx
  4095b3:	mov    ah,0xe7
  4095b5:	dec    edx
  4095b6:	in     eax,dx
  4095b7:	pop    edi
  4095b8:	add    cl,BYTE PTR [edi+ebx*4-0x2688f8b3]
  4095bf:	push   0x33
  4095c1:	xchg   ebp,eax
  4095c2:	fiadd  WORD PTR [edi]
  4095c4:	cld    
  4095c5:	imul   DWORD PTR [eax+0x23]
  4095c8:	scas   al,BYTE PTR es:[edi]
  4095c9:	xor    BYTE PTR [esi-0x9],ah
  4095cc:	mov    ebx,0x71718eae
  4095d1:	(bad)  
  4095d3:	jb     0x4095fd
  4095d5:	das    
  4095d6:	stos   BYTE PTR es:[edi],al
  4095d7:	and    DWORD PTR [edi+ebx*8-0x7f],edi
  4095db:	add    edx,DWORD PTR [edx*2+0x1a3729e1]
  4095e2:	mov    DWORD PTR [eax+ebx*2+0x19],ecx
  4095e6:	xlat   BYTE PTR ds:[ebx]
  4095e7:	dec    eax
  4095e8:	inc    ecx
  4095e9:	add    BYTE PTR [esi],bl
  4095eb:	adc    BYTE PTR [ecx+0x3],dl
  4095ee:	mov    eax,0xd2d9262c
  4095f3:	jle    0x40966c
  4095f5:	push   ecx
  4095f6:	jecxz  0x40957f
  4095f8:	inc    esi
  4095f9:	clc    
  4095fa:	mov    ecx,0x913f5624
  4095ff:	sbb    edx,DWORD PTR [eax+eiz*4]
  409602:	out    0x27,al
  409604:	pop    ds
  409605:	retf   0x2fd3
  409608:	cs mov al,0xd3
  40960b:	inc    edx
  40960c:	push   ecx
  40960d:	dec    ebp
  40960e:	in     al,0x63
  409610:	and    dl,bl
  409612:	ja     0x4095a1
  409614:	pop    ebp
  409615:	dec    edi
  409616:	cmp    cl,BYTE PTR [eax+0x8ab9169]
  40961c:	sub    eax,0x227def1e
  409621:	xchg   DWORD PTR [eax-0x7e6b1e1],edx
  409627:	sbb    eax,0x40184731
  40962c:	retf   0xba7d
  40962f:	lods   eax,DWORD PTR ds:[esi]
  409630:	shl    BYTE PTR [edx+0x35],1
  409633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409634:	leave  
  409635:	mov    bh,BYTE PTR [eax+0x3e68d285]
  40963b:	mov    eax,ds:0x399ae2fe
  409640:	ins    BYTE PTR es:[edi],dx
  409641:	test   DWORD PTR [esi-0x7fd12a77],ecx
  409647:	sbb    ebx,DWORD PTR [ebx]
  409649:	pushf  
  40964a:	sbb    dl,BYTE PTR [esi]
  40964c:	dec    esi
  40964d:	cmp    ebp,DWORD PTR [edx+eax*1+0x70]
  409651:	mov    ds:0x35681ba8,al
  409656:	arpl   WORD PTR [esp+ebp*4],cx
  409659:	repnz popf 
  40965b:	adc    ebp,DWORD PTR [ebp-0x66ff86d6]
  409661:	out    0xf5,eax
  409663:	add    BYTE PTR [esi+0x1105bf3a],ch
  409669:	sar    BYTE PTR [ebp-0x1dd861de],cl
  40966f:	sub    al,0x16
  409671:	mov    ebp,0xb2d56cf6
  409676:	xchg   edx,eax
  409677:	ins    DWORD PTR es:[edi],dx
  409678:	mov    dl,0xb2
  40967a:	pop    ebx
  40967b:	pop    es
  40967c:	bound  edi,QWORD PTR [ecx]
  40967e:	rol    DWORD PTR [ebx],1
  409680:	mov    ch,0x6
  409682:	xchg   esp,eax
  409683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409684:	enter  0x339a,0x2f
  409688:	jno    0x4096e4
  40968a:	cmp    al,0xb2
  40968c:	lock mov esp,0x61f23148
  409692:	cs dec eax
  409694:	test   bh,ch
  409696:	(bad)  
  409697:	cmc    
  409698:	mov    al,0x1b
  40969a:	js     0x409666
  40969c:	push   ds
  40969d:	fimul  WORD PTR [eax+0x5600a429]
  4096a3:	enter  0xdc9d,0x7a
  4096a7:	hlt    
  4096a8:	mov    DWORD PTR [ebx],ebp
  4096aa:	inc    esi
  4096ab:	lds    edx,FWORD PTR [edx-0x52018bf5]
  4096b1:	push   edx
  4096b2:	jg     0x40967f
  4096b4:	mov    ebp,esi
  4096b6:	xor    edi,esp
  4096b8:	pop    ebp
  4096b9:	sub    BYTE PTR [ebx+0x78],ah
  4096bc:	and    ebp,DWORD PTR ss:[esi-0x685283c7]
  4096c3:	test   al,0x88
  4096c5:	and    al,0x84
  4096c7:	xor    ebp,DWORD PTR [eax-0x34]
  4096ca:	call   0x4538:0xb61051ec
  4096d1:	jo     0x40971c
  4096d3:	or     BYTE PTR [edx+0x3137af08],dl
  4096d9:	repnz bound eax,QWORD PTR [esi]
  4096dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096dd:	retf   0x8b15
  4096e0:	xchg   ebp,eax
  4096e1:	jl     0x409681
  4096e3:	mov    bh,0xf3
  4096e5:	mov    dh,0x8
  4096e7:	retf   
  4096e8:	retf   
  4096e9:	xor    al,0x34
  4096eb:	pop    ecx
  4096ec:	icebp  
  4096ed:	mov    bh,0x4b
  4096ef:	xchg   esi,eax
  4096f0:	stos   BYTE PTR es:[edi],al
  4096f1:	add    bh,BYTE PTR [esp+ebp*2]
  4096f4:	push   esi
  4096f5:	in     ax,dx
  4096f7:	jb     0x409736
  4096f9:	xchg   esi,eax
  4096fa:	xlat   BYTE PTR ds:[ebx]
  4096fb:	inc    esi
  4096fc:	push   edi
  4096fd:	push   cs
  4096fe:	aam    0x75
  409700:	sub    BYTE PTR [esp+edx*8+0x443d6655],al
  409707:	or     esi,DWORD PTR [ecx+ebx*1-0x2972f7c9]
  40970e:	sub    al,0xdb
  409710:	mov    cl,0x15
  409712:	lahf   
  409713:	ror    BYTE PTR [esi-0x7d46893b],0x1b
  40971a:	sbb    DWORD PTR [edx],ebx
  40971c:	add    edi,0x78
  40971f:	out    dx,al
  409720:	cmp    BYTE PTR [edx+0x7a7678de],bh
  409726:	mov    ebp,0xaebc145b
  40972b:	pop    edx
  40972c:	sar    DWORD PTR [esi+0x39],1
  40972f:	sbb    al,0x39
  409731:	or     DWORD PTR [esi+0x66],ecx
  409734:	and    BYTE PTR [esi-0x25],ah
  409737:	push   ebx
  409738:	sbb    al,0x46
  40973a:	add    DWORD PTR [ecx],ecx
  40973c:	into   
  40973d:	mov    ebx,0x47c49004
  409742:	and    ebp,ebx
  409744:	icebp  
  409745:	jmp    0x185d:0x4c06821e
  40974c:	(bad)  
  40974d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974e:	add    esp,edi
  409750:	xlat   BYTE PTR ds:[ebx]
  409751:	push   edi
  409752:	jp     0x4096db
  409754:	mov    ch,0xfa
  409756:	adc    al,0x8d
  409758:	icebp  
  409759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40975a:	cmp    dh,BYTE PTR ds:0xab8792e6
  409760:	jno    0x409764
  409762:	adc    ebp,DWORD PTR [esi-0x4bd5417d]
  409768:	bound  ebx,QWORD PTR [edx+0xa]
  40976b:	mov    edx,DWORD PTR [ebp-0x41]
  40976e:	arpl   ax,sp
  409770:	stos   DWORD PTR es:[edi],eax
  409771:	pop    edi
  409772:	mov    dl,0x5c
  409774:	data16 scas al,BYTE PTR es:[edi]
  409776:	jecxz  0x4097db
  409778:	pop    eax
  409779:	jno    0x409719
  40977b:	mov    ds:0x950fa6f6,eax
  409780:	xchg   ecx,eax
  409781:	push   edx
  409782:	aas    
  409783:	or     dh,ch
  409785:	mov    dl,0x10
  409787:	mov    cs,esp
  409789:	gs or  eax,0x35afa59c
  40978f:	mov    esi,?
  409791:	or     DWORD PTR [ebx],edx
  409793:	or     BYTE PTR [ecx*2+0x139879f7],cl
  40979a:	ret    
  40979b:	jo     0x409720
  40979d:	rcr    BYTE PTR es:[edx],1
  4097a0:	jo     0x409757
  4097a2:	jmp    0x2d05:0x3b662961
  4097a9:	sbb    ch,0x52
  4097ac:	or     ebx,ebp
  4097ae:	sbb    dl,BYTE PTR [eax+edx*1-0x5e]
  4097b2:	or     al,0x30
  4097b4:	push   ebp
  4097b5:	push   es
  4097b6:	mov    dl,0x24
  4097b8:	jle    0x409782
  4097ba:	(bad)  
  4097bb:	loope  0x409838
  4097bd:	add    edx,DWORD PTR [edx-0x783b8841]
  4097c3:	inc    ebx
  4097c4:	pusha  
  4097c5:	add    dh,cl
  4097c7:	cmp    edx,DWORD PTR [ecx+0x3a]
  4097ca:	dec    esp
  4097cb:	test   bh,al
  4097cd:	mov    bl,0x93
  4097cf:	or     BYTE PTR [ecx+0x6a],dh
  4097d2:	loope  0x40983f
  4097d4:	sub    al,0x6f
  4097d6:	push   esp
  4097d7:	pop    ecx
  4097d8:	fwait
  4097d9:	test   eax,0xf03622a2
  4097de:	pop    edx
  4097df:	outs   dx,DWORD PTR ds:[esi]
  4097e0:	xchg   DWORD PTR [edx+0x67387c90],edi
  4097e6:	fcomp  QWORD PTR [edx]
  4097e8:	retf   
  4097e9:	out    dx,al
  4097ea:	int    0x1e
  4097ec:	aas    
  4097ed:	jb     0x4097c7
  4097ef:	and    eax,0x7fe59a44
  4097f4:	ds jg  0x409853
  4097f7:	nop
  4097f8:	(bad)  
  4097f9:	mov    es:0xea703a15,al
  4097ff:	addr16 push cs
  409801:	mov    bh,0xfb
  409803:	and    dh,BYTE PTR [ebp+0x68]
  409806:	int3   
  409807:	push   edx
  409808:	dec    esp
  409809:	lods   al,BYTE PTR ds:[esi]
  40980a:	jmp    0xd17dd695
  40980f:	sbb    BYTE PTR [ecx+esi*4+0x35d86e01],ch
  409816:	ret    0x8613
  409819:	fdivp  st(2),st
  40981b:	inc    edx
  40981c:	sbb    eax,DWORD PTR [esi-0x50]
  40981f:	and    al,0x7f
  409821:	int    0x91
  409823:	add    DWORD PTR [esi],eax
  409825:	or     DWORD PTR [esp+edi*1+0x5f2ef25b],ebx
  40982c:	or     BYTE PTR [edx-0x38],al
  40982f:	inc    ecx
  409830:	dec    ecx
  409831:	xchg   ebx,eax
  409832:	lds    edx,FWORD PTR [esi+0x64791b42]
  409838:	cs sahf 
  40983a:	(bad)  [eax+0x1e836f10]
  409840:	dec    esp
  409841:	test   ecx,0x88672308
  409847:	pop    es
  409848:	push   esi
  409849:	cld    
  40984a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984b:	ins    BYTE PTR es:[edi],dx
  40984c:	aas    
  40984d:	or     eax,0x8b1354d0
  409852:	sbb    BYTE PTR [eax],0x7a
  409855:	dec    esp
  409856:	or     al,0x29
  409858:	xor    esi,DWORD PTR [esi+0x57074f3e]
  40985e:	test   al,0x3c
  409860:	cmp    DWORD PTR [eax+0x592f79ff],ecx
  409866:	test   al,0x6e
  409868:	jle    0x409807
  40986a:	xlat   BYTE PTR ds:[ebx]
  40986b:	js     0x409888
  40986d:	add    ecx,eax
  40986f:	sub    ebx,DWORD PTR [ebx]
  409871:	scas   al,BYTE PTR es:[edi]
  409872:	(bad)  
  409874:	pop    es
  409875:	or     cl,ch
  409877:	pop    esi
  409878:	add    BYTE PTR [edi+0x333072e1],bh
  40987e:	enter  0x211,0xf6
  409882:	push   es
  409883:	mov    eax,0x31cc1c69
  409888:	adc    eax,0x217f97ac
  40988d:	psrad  mm0,QWORD PTR ds:0x6fe3a1f1
  409894:	sub    eax,0x7a31aae4
  409899:	or     DWORD PTR [ebp-0x43e106f5],0x43f4ea13
  4098a3:	retf   
  4098a4:	jbe    0x4098b9
  4098a6:	mov    cl,0x33
  4098a8:	jge    0x40983b
  4098aa:	popf   
  4098ab:	or     edx,DWORD PTR [eax]
  4098ad:	add    al,0xb7
  4098af:	mov    dl,0x7e
  4098b1:	xor    edx,ebx
  4098b3:	push   esi
  4098b4:	xor    edx,edi
  4098b6:	mov    fs,WORD PTR [ecx]
  4098b8:	inc    esi
  4098b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ba:	cmc    
  4098bb:	push   edx
  4098bc:	or     ah,dl
  4098be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098bf:	sbb    DWORD PTR [ecx-0x28],ebx
  4098c2:	adc    eax,0x3b8e6d25
  4098c7:	inc    esi
  4098c8:	mov    al,0x5e
  4098ca:	mov    ebp,0x8afa263a
  4098cf:	iret   
  4098d0:	adc    eax,0x7698a08e
  4098d5:	or     DWORD PTR [eax+0x5809ab1d],ebp
  4098db:	rcr    edi,1
  4098dd:	fist   DWORD PTR [eax-0xb]
  4098e0:	adc    BYTE PTR [ebp-0x673433be],bl
  4098e6:	pop    edi
  4098e7:	fmul   st,st(2)
  4098e9:	adc    BYTE PTR [edi-0x33],cl
  4098ec:	fsubr  st,st(6)
  4098ee:	adc    cl,BYTE PTR [ecx-0x3bb8ff92]
  4098f4:	inc    ecx
  4098f5:	cli    
  4098f6:	mov    edx,0x242bb8b8
  4098fb:	mov    ebx,0x1d487fb5
  409900:	xchg   ecx,eax
  409901:	cmp    BYTE PTR [esi+eiz*8-0x27ad43af],ah
  409908:	sahf   
  409909:	ins    DWORD PTR es:[edi],dx
  40990a:	inc    edx
  40990b:	cld    
  40990c:	out    0xef,eax
  40990e:	dec    edx
  40990f:	sti    
  409910:	call   0x66ea:0xb1dc833d
  409917:	int    0x31
  409919:	jge    0x40997c
  40991b:	xchg   ebx,eax
  40991c:	retf   
  40991d:	mov    WORD PTR ds:0x90b4e97b,ss
  409923:	cdq    
  409924:	(bad)  
  409925:	fdivr  st(4),st
  409927:	mov    ecx,0x91104c50
  40992c:	pushf  
  40992d:	out    dx,al
  40992e:	push   esi
  40992f:	int    0x9f
  409931:	dec    ebx
  409932:	xchg   ebp,eax
  409933:	mov    al,al
  409935:	mov    esi,0x57f4a720
  40993a:	pop    eax
  40993b:	(bad)  
  40993c:	leave  
  40993d:	inc    edx
  40993e:	or     al,0xd3
  409940:	ins    DWORD PTR es:[edi],dx
  409941:	jl     0x409963
  409943:	xchg   dl,bh
  409945:	lock std 
  409947:	pushf  
  409948:	fisubr DWORD PTR [edi+0x1e]
  40994b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40994c:	(bad)  
  40994d:	out    0x14,eax
  40994f:	sti    
  409950:	les    eax,FWORD PTR [ecx+0x77]
  409953:	xlat   BYTE PTR ds:[ebx]
  409954:	lea    ebp,[ebx+0x24ca986b]
  40995a:	pop    ebp
  40995b:	out    dx,eax
  40995c:	(bad)  
  40995d:	mov    al,ds:0x9c5779e8
  409962:	retf   
  409963:	xchg   edx,eax
  409964:	push   esi
  409965:	xor    al,BYTE PTR [ecx+ebp*2+0x7dd48238]
  40996c:	ss sbb ch,dh
  40996f:	jle    0x4099a5
  409971:	fcmovu st,st(0)
  409973:	pop    ebx
  409974:	adc    al,0x89
  409976:	mov    dh,BYTE PTR [ecx-0x2e]
  409979:	cmp    BYTE PTR [edi],0xe
  40997c:	push   cs
  40997d:	mul    ebp
  40997f:	retf   
  409980:	cmp    eax,0x2cf83ebf
  409985:	jne    0x4099d7
  409987:	ins    BYTE PTR es:[edi],dx
  409988:	fwait
  409989:	stos   BYTE PTR es:[edi],al
  40998a:	sahf   
  40998b:	bound  ebp,QWORD PTR [ebx]
  40998d:	jbe    0x409960
  40998f:	dec    eax
  409990:	or     bl,dh
  409992:	out    dx,eax
  409993:	jge    0x4099d4
  409995:	xor    al,0xca
  409997:	jle    0x4099a5
  409999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999a:	not    BYTE PTR [ebp+edi*2-0x69]
  40999e:	iret   
  40999f:	jnp    0x4099be
  4099a1:	ins    BYTE PTR es:[edi],dx
  4099a2:	mov    BYTE PTR [edi],bl
  4099a4:	push   cs
  4099a5:	pop    ds
  4099a6:	jae    0x409973
  4099a8:	pop    ebp
  4099a9:	sub    al,0x9d
  4099ab:	das    
  4099ac:	and    bl,BYTE PTR [edx-0xb]
  4099af:	inc    edi
  4099b0:	ss mov ebx,0xe00755cd
  4099b6:	loope  0x409a25
  4099b8:	cmp    bl,BYTE PTR [esi]
  4099ba:	stos   DWORD PTR es:[edi],eax
  4099bb:	jmp    0x409953
  4099bd:	aam    0xf6
  4099bf:	icebp  
  4099c0:	(bad)  
  4099c2:	dec    esi
  4099c3:	cdq    
  4099c4:	cwde   
  4099c5:	cmp    edi,DWORD PTR [ebx+edi*1]
  4099c8:	hlt    
  4099c9:	inc    ebp
  4099ca:	or     eax,0x389fc98f
  4099cf:	(bad)
  4099d2:	js     0x4099d0
  4099d4:	push   ebp
  4099d5:	xchg   ebx,eax
  4099d6:	and    al,0xac
  4099d8:	in     al,dx
  4099d9:	sbb    BYTE PTR ds:0x930056bf,bl
  4099df:	sbb    BYTE PTR [ebp+ebx*8-0x4f],bl
  4099e3:	es jbe 0x4099fc
  4099e6:	mov    bl,0x0
  4099e8:	mov    dh,0x71
  4099ea:	mov    ecx,0x510a672d
  4099ef:	leave  
  4099f0:	shl    DWORD PTR [ebx+0x7],0xf1
  4099f4:	push   edi
  4099f5:	sbb    BYTE PTR [ecx],0x9a
  4099f8:	leave  
  4099f9:	ins    BYTE PTR es:[edi],dx
  4099fa:	sbb    eax,0xc3771419
  4099ff:	pop    eax
  409a00:	stc    
  409a01:	stos   DWORD PTR es:[edi],eax
  409a02:	stc    
  409a03:	xor    bh,BYTE PTR [ebx+0x5e]
  409a06:	enter  0x44a7,0xa8
  409a0a:	loopne 0x409a72
  409a0c:	jae    0x409a83
  409a0e:	sti    
  409a0f:	retf   0xf601
  409a12:	out    dx,eax
  409a13:	jle    0x409a46
  409a15:	clc    
  409a16:	xchg   ebp,eax
  409a17:	mov    edi,0x3eae335b
  409a1c:	push   es
  409a1d:	add    al,0xfd
  409a1f:	sub    cl,BYTE PTR [ebp-0x36]
  409a22:	inc    esi
  409a23:	pop    eax
  409a24:	leave  
  409a25:	mov    bh,0xca
  409a27:	xor    DWORD PTR [eax+0x79],0xf7f6ad52
  409a2e:	dec    edx
  409a2f:	fadd   DWORD PTR ds:0x322d282
  409a35:	push   cs
  409a36:	cs daa 
  409a38:	call   0x7dd4:0xdb9e1c6e
  409a3f:	in     al,0x41
  409a41:	inc    esp
  409a42:	jl     0x409a54
  409a44:	pop    ecx
  409a45:	sub    edx,ebx
  409a47:	sub    DWORD PTR [ecx-0xd],edi
  409a4a:	mov    ecx,0x90ca0a21
  409a4f:	movups xmm7,xmm0
  409a52:	mov    esp,0xae39ba2e
  409a57:	dec    edx
  409a58:	sub    BYTE PTR [ecx+0x105c8916],al
  409a5e:	fdiv   QWORD PTR [edi-0x4a]
  409a61:	fimul  WORD PTR [edi-0x1aadf290]
  409a67:	push   0x39
  409a69:	int3   
  409a6a:	jmp    0x409adf
  409a6c:	dec    edx
  409a6d:	pop    ecx
  409a6e:	out    0x71,al
  409a70:	icebp  
  409a71:	test   dh,cl
  409a73:	add    al,0x5f
  409a75:	dec    ebx
  409a76:	cmc    
  409a77:	lds    esi,FWORD PTR [edx]
  409a79:	jecxz  0x409a41
  409a7b:	dec    esi
  409a7c:	and    eax,0x75229752
  409a81:	push   esi
  409a82:	adc    BYTE PTR [ebx-0xbfd392b],al
  409a88:	add    ecx,DWORD PTR [edx]
  409a8a:	jg     0x409ad0
  409a8c:	push   edi
  409a8d:	aam    0xb4
  409a8f:	les    ebx,FWORD PTR [eax-0x50979fdc]
  409a95:	in     eax,0x63
  409a97:	out    dx,al
  409a98:	lahf   
  409a99:	in     eax,0x7b
  409a9b:	sti    
  409a9c:	push   ebp
  409a9d:	cli    
  409a9e:	push   edi
  409a9f:	fcomp  QWORD PTR [ecx-0x5f97b6e3]
  409aa5:	cmc    
  409aa6:	dec    edi
  409aa7:	lds    ebp,FWORD PTR [ecx]
  409aa9:	cmp    DWORD PTR [ecx],edx
  409aab:	xor    dh,BYTE PTR [edx-0x12fa46b]
  409ab1:	push   es
  409ab2:	lea    ebp,es:[di]
  409ab6:	js     0x409a9a
  409ab8:	xchg   ecx,eax
  409ab9:	es jo  0x409a7c
  409abc:	and    esi,0x6b
  409abf:	pop    eax
  409ac0:	mov    ebp,0xbb330132
  409ac5:	(bad)  
  409ac6:	mov    ah,0xe8
  409ac8:	mov    ds:0xbcccde05,al
  409acd:	loope  0x409b34
  409acf:	cli    
  409ad0:	ins    BYTE PTR es:[edi],dx
  409ad1:	or     DWORD PTR [eax],esp
  409ad3:	cwde   
  409ad4:	mov    edx,0xb101df46
  409ad9:	fstp   QWORD PTR [ecx-0x49fe8af9]
  409adf:	sub    dh,BYTE PTR [edi-0x25]
  409ae2:	xchg   esi,eax
  409ae3:	sub    al,0x46
  409ae5:	or     dl,cl
  409ae7:	push   0x36
  409ae9:	mov    bl,BYTE PTR [esi]
  409aeb:	fadd   QWORD PTR [ecx]
  409aed:	dec    ebx
  409aee:	int    0x40
  409af0:	sub    DWORD PTR [esi+0x47e67ec6],ebx
  409af6:	mov    eax,0xe7b33772
  409afb:	push   ecx
  409afc:	adc    al,0x69
  409afe:	jp     0x409ae2
  409b00:	jbe    0x409b42
  409b02:	xchg   BYTE PTR [edx-0x68],dh
  409b05:	xchg   esp,eax
  409b06:	jmp    0xec760b56
  409b0b:	push   ebx
  409b0c:	add    BYTE PTR [ebp-0x7a],bh
  409b0f:	and    eax,0x38efb465
  409b14:	push   ebp
  409b15:	lock push 0xfffffffb
  409b18:	scas   eax,DWORD PTR es:[edi]
  409b19:	or     DWORD PTR [ebx-0x85a4758],esi
  409b1f:	pop    eax
  409b20:	xor    BYTE PTR [eax],ch
  409b22:	push   0xfffffff5
  409b24:	mov    ds:0x165d7bfd,eax
  409b29:	inc    esi
  409b2a:	popf   
  409b2b:	jne    0x409b68
  409b2d:	inc    eax
  409b2e:	sti    
  409b2f:	jo     0x409af2
  409b31:	mov    dl,bh
  409b33:	push   edi
  409b34:	inc    eax
  409b35:	inc    esi
  409b36:	fst    QWORD PTR [edi+edi*2-0x74]
  409b3a:	(bad)  
  409b3b:	(bad)  
  409b3c:	push   ebp
  409b3d:	pop    edi
  409b3e:	std    
  409b3f:	xor    eax,0x28d13901
  409b44:	xor    BYTE PTR [eax-0x2c],dh
  409b47:	pop    edi
  409b48:	and    dh,ah
  409b4a:	ret    0xd76f
  409b4d:	js     0x409b21
  409b4f:	dec    ebp
  409b50:	sbb    eax,0xf8fbdcbc
  409b55:	nop
  409b56:	loop   0x409ba6
  409b58:	fstp   st(6)
  409b5a:	mov    ecx,DWORD PTR [ebx]
  409b5c:	inc    edi
  409b5d:	sbb    bh,bh
  409b5f:	adc    DWORD PTR [edi-0x6c],esi
  409b62:	xchg   ecx,eax
  409b63:	add    DWORD PTR [esi+esi*1-0x1a81c837],eax
  409b6a:	mov    ch,0xaf
  409b6c:	push   ecx
  409b6d:	sbb    ebx,edx
  409b6f:	xor    eax,0xc94c77e
  409b74:	ja     0x409bb5
  409b76:	scas   eax,DWORD PTR es:[edi]
  409b77:	sub    DWORD PTR [ebp+0xe],ebp
  409b7a:	inc    eax
  409b7b:	or     DWORD PTR [edx],eax
  409b7d:	cmp    al,0x43
  409b7f:	hlt    
  409b80:	mov    ecx,0x4b20a2fe
  409b85:	xor    al,0xad
  409b87:	and    BYTE PTR [edx-0x1],ah
  409b8a:	sub    esi,DWORD PTR [eax+0x66]
  409b8d:	mov    ebx,esi
  409b8f:	xchg   edi,eax
  409b90:	(bad)  
  409b91:	stc    
  409b92:	jmp    FWORD PTR [eax+0x47]
  409b95:	psrlw  mm0,QWORD PTR [edi-0x18]
  409b99:	cmc    
  409b9a:	cmp    bl,BYTE PTR [edx+ecx*2+0x71cd57f4]
  409ba1:	push   0xb2e9a37f
  409ba6:	or     DWORD PTR [edi],esp
  409ba8:	xchg   edi,eax
  409ba9:	jo     0x409bcb
  409bab:	loope  0x409b3c
  409bad:	mov    bh,0x56
  409baf:	xchg   esi,eax
  409bb0:	mov    cl,0xf6
  409bb2:	jle    0x409ba9
  409bb4:	test   al,0xf1
  409bb6:	outs   dx,DWORD PTR ss:[esi]
  409bb8:	mov    ebp,0x92c083cc
  409bbd:	dec    edx
  409bbe:	ins    DWORD PTR es:[edi],dx
  409bbf:	jmp    0xdc53:0xd94d19b7
  409bc6:	outs   dx,BYTE PTR ds:[esi]
  409bc7:	mov    esp,0xb59906e5
  409bcc:	mov    edi,ebx
  409bce:	inc    esp
  409bcf:	add    ebp,esp
  409bd1:	push   ecx
  409bd2:	pop    edi
  409bd3:	sbb    eax,0xcdba898d
  409bd8:	xchg   BYTE PTR [edx],ch
  409bda:	nop
  409bdb:	stc    
  409bdc:	ror    ah,1
  409bde:	imul   edx,DWORD PTR [ecx],0x6c
  409be1:	fcmovu st,st(7)
  409be3:	aad    0x91
  409be5:	(bad)  
  409be6:	ja     0x409be6
  409be8:	add    DWORD PTR [ecx],edi
  409bea:	inc    eax
  409beb:	fstp   QWORD PTR ss:[eax+eax*2-0x1a605e91]
  409bf3:	je     0x409b77
  409bf5:	or     DWORD PTR [eax],edi
  409bf7:	mov    ecx,0xa43f2fe9
  409bfc:	(bad)  
  409bfd:	cld    
  409bfe:	pop    esp
  409bff:	rcl    BYTE PTR [edi-0x531368dd],1
  409c05:	out    0x9,eax
  409c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c08:	push   edi
  409c09:	and    BYTE PTR [esi],ch
  409c0b:	xchg   ecx,eax
  409c0c:	(bad)  
  409c0d:	bound  ebp,QWORD PTR [ebx-0x7c3e8cda]
  409c13:	push   ds
  409c14:	loopne 0x409bd5
  409c16:	and    BYTE PTR [esi],0x65
  409c19:	mov    bl,BYTE PTR [edx+0x53025f58]
  409c1f:	imul   ebp,DWORD PTR [eax+0x1db861d2],0x18
  409c26:	mov    al,ds:0x9ad17415
  409c2b:	or     dl,BYTE PTR [eax+ebx*4+0x55f17ece]
  409c32:	or     eax,0x4ee5c092
  409c37:	sub    eax,DWORD PTR [ebx+0x4eda4a5b]
  409c3d:	pop    ss
  409c3e:	or     bl,BYTE PTR [ebp-0x1f]
  409c41:	lods   al,BYTE PTR ds:[esi]
  409c42:	sar    BYTE PTR ds:0x9a4d8fe,0x55
  409c49:	pop    edi
  409c4a:	idiv   BYTE PTR [ebx+0x23]
  409c4d:	sub    cl,bh
  409c4f:	sbb    BYTE PTR [eax-0x36],dh
  409c52:	lds    ebx,FWORD PTR [eax+0x6d]
  409c55:	ds dec edi
  409c57:	sbb    dl,BYTE PTR [ecx]
  409c59:	aas    
  409c5a:	test   eax,0x97120e68
  409c5f:	je     0x409c9b
  409c61:	xchg   ecx,eax
  409c62:	out    dx,eax
  409c63:	inc    ebp
  409c64:	jno    0x409cc2
  409c66:	hlt    
  409c67:	out    dx,eax
  409c68:	nop
  409c69:	aaa    
  409c6a:	sbb    DWORD PTR [edx+ebx*8],ecx
  409c6d:	call   0x8d6e:0x529eb829
  409c74:	sub    ebx,eax
  409c76:	mov    edx,0x4b2edff7
  409c7b:	retf   0xe28c
  409c7e:	ja     0x409cd2
  409c80:	mov    edi,0xd99c47de
  409c85:	lahf   
  409c86:	pop    eax
  409c87:	lahf   
  409c88:	or     DWORD PTR [ecx],0xffffffb6
  409c8b:	fiadd  WORD PTR [ebp+0x48d14cad]
  409c91:	add    al,0x4c
  409c93:	or     BYTE PTR [ebp-0x363ca22c],bl
  409c99:	jge    0x409cda
  409c9b:	or     BYTE PTR [eax-0x6433837a],al
  409ca1:	xor    DWORD PTR [ebp-0x10],esp
  409ca4:	push   edi
  409ca5:	stos   BYTE PTR es:[edi],al
  409ca6:	jno    0x409c6e
  409ca8:	and    BYTE PTR [eax],0x68
  409cab:	repnz xchg edx,eax
  409cad:	clc    
  409cae:	push   ss
  409caf:	and    al,0xc6
  409cb1:	arpl   WORD PTR [eax+ebx*4-0x62],dx
  409cb5:	cmc    
  409cb6:	mov    BYTE PTR [ecx],0x78
  409cb9:	push   eax
  409cba:	push   edi
  409cbb:	popf   
  409cbc:	(bad)
  409cc0:	mov    dh,0x13
  409cc2:	add    cl,BYTE PTR [eax]
  409cc4:	xchg   ah,al
  409cc6:	and    eax,eax
  409cc8:	int    0x54
  409cca:	or     BYTE PTR [esi+eiz*8-0x415e4552],bl
  409cd1:	or     BYTE PTR [ebx+eiz*4-0x5b],cl
  409cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd6:	xor    bh,BYTE PTR [eax]
  409cd8:	call   0xf90fdd2e
  409cdd:	mov    ebx,0x3b8f370d
  409ce2:	jge    0x409ca0
  409ce4:	push   esi
  409ce5:	enter  0x9e56,0xea
  409ce9:	pop    ebp
  409cea:	add    BYTE PTR [edx+0x260af8b9],dl
  409cf0:	xlat   BYTE PTR ds:[ebx]
  409cf1:	ins    BYTE PTR es:[edi],dx
  409cf2:	jo     0x409ccb
  409cf4:	mov    bh,al
  409cf6:	xor    DWORD PTR [edx+0x48ceba88],esp
  409cfc:	(bad)  
  409cfd:	cdq    
  409cfe:	stc    
  409cff:	data16 jne 0x409c94
  409d02:	rcr    DWORD PTR [edx],1
  409d04:	push   cs
  409d05:	xchg   esp,eax
  409d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d07:	outs   dx,DWORD PTR ds:[esi]
  409d08:	cs pop esi
  409d0a:	rol    BYTE PTR [eax],0x47
  409d0d:	pop    ds
  409d0e:	(bad)  
  409d0f:	sbb    eax,DWORD PTR [ecx+eiz*8]
  409d12:	or     BYTE PTR [ebp-0x4fc2662c],dl
  409d18:	in     al,0x1e
  409d1a:	int3   
  409d1b:	sahf   
  409d1c:	stc    
  409d1d:	or     ah,BYTE PTR [ebx-0x77]
  409d20:	rol    BYTE PTR [esi+edx*2],1
  409d23:	ret    
  409d24:	fldcw  WORD PTR [esi+0xaa4e6a5]
  409d2a:	pop    edi
  409d2b:	mov    bh,0x92
  409d2d:	fsubr  DWORD PTR [ebx-0x42]
  409d30:	inc    ecx
  409d31:	sub    BYTE PTR [ecx],cl
  409d33:	inc    edi
  409d34:	retf   0xe629
  409d37:	mov    ds:0xb13656fa,al
  409d3c:	xchg   edi,eax
  409d3d:	mov    dl,0xf6
  409d3f:	xchg   edx,eax
  409d40:	repnz fiadd WORD PTR [ebx-0x6d]
  409d44:	in     al,0xc3
  409d46:	jns    0x409d2f
  409d48:	cmc    
  409d49:	cli    
  409d4a:	xor    edx,ebx
  409d4c:	(bad)  
  409d4d:	add    al,0x3b
  409d4f:	adc    ecx,0x2
  409d52:	push   esi
  409d53:	vpminub ymm7,ymm4,YMMWORD PTR [ebp+0x2a2e82fe]
  409d5b:	loope  0x409da4
  409d5d:	mov    ebx,0xb0b7811a
  409d62:	inc    esi
  409d63:	or     BYTE PTR [ecx+0x4a],cl
  409d66:	nop
  409d67:	or     esp,DWORD PTR [edx]
  409d69:	call   0x27b2:0x741a059d
  409d70:	push   cs
  409d71:	xlat   BYTE PTR ds:[ebx]
  409d72:	xchg   esp,eax
  409d73:	push   es
  409d74:	nop    DWORD PTR [ebx-0x3421b3a7]
  409d7b:	sbb    BYTE PTR [edx+0x6b],cl
  409d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7f:	xor    al,0xc0
  409d81:	rol    al,0xc0
  409d84:	rol    al,0xc0
  409d87:	rol    al,0xc0
  409d8a:	rol    al,0xc0
  409d8d:	rol    al,0xc0
  409d90:	rol    al,0xc0
  409d93:	rol    al,0xc0
  409d96:	rol    al,0x1f
  409d99:	shr    bl,0x13
  409d9c:	push   esi
  409d9d:	inc    edx
  409d9e:	mov    ds:0xfcab7f2f,al
  409da3:	sub    DWORD PTR [ecx+0x32],edi
  409da6:	jmp    0xd624:0x2683cb05
  409dad:	jno    0x409d42
  409daf:	and    BYTE PTR [esi-0x5d],ch
  409db2:	out    dx,eax
  409db3:	ds push esi
  409db5:	jle    0x409d89
  409db7:	pop    ebp
  409db8:	adc    BYTE PTR [edi+0x336d35a2],dh
  409dbe:	rcr    BYTE PTR ds:0x1894dd8f,1
  409dc4:	pop    esi
  409dc5:	dec    esp
  409dc6:	mov    edi,0x15d5824a
  409dcb:	inc    esp
  409dcc:	test   DWORD PTR [edx+edi*1],ebx
  409dcf:	cmp    al,0x6e
  409dd1:	xchg   esp,eax
  409dd2:	nop
  409dd3:	pop    edi
  409dd4:	pop    es
  409dd5:	push   cs
  409dd6:	out    dx,al
  409dd7:	inc    edi
  409dd8:	retw   0x1a98
  409ddc:	or     dh,al
  409dde:	leave  
  409ddf:	lds    esp,FWORD PTR [eax-0x8]
  409de2:	adc    DWORD PTR [edx+0x6a],0x4
  409de6:	xchg   esp,eax
  409de7:	adc    dl,BYTE PTR [ecx-0x42]
  409dea:	jmp    FWORD PTR [edi+0x68]
  409ded:	fs hlt 
  409def:	dec    eax
  409df0:	icebp  
  409df1:	dec    ebx
  409df2:	mov    edx,0xceaa6762
  409df7:	and    dh,BYTE PTR [edx-0x2f]
  409dfa:	cdq    
  409dfb:	or     DWORD PTR [esi+0x8],ecx
  409dfe:	fidiv  DWORD PTR [eax]
  409e00:	jl     0x409dd7
  409e02:	xchg   ecx,eax
  409e03:	add    DWORD PTR [esi+0x1a],ebp
  409e06:	mov    al,0x1d
  409e08:	pop    ebx
  409e09:	and    al,0xe2
  409e0b:	pop    ss
  409e0c:	dec    ebx
  409e0d:	sbb    DWORD PTR [ebx-0x6d33d0ed],esp
  409e13:	sbb    al,0x70
  409e15:	xchg   BYTE PTR [edi+0x260d699b],ah
  409e1b:	jge    0x409e45
  409e1d:	(bad)  
  409e1e:	out    0x53,al
  409e20:	jnp    0x409de7
  409e22:	(bad)  
  409e23:	jnp    0x409e99
  409e25:	mov    edx,0xcc1f43d7
  409e2a:	out    0x74,eax
  409e2c:	jp     0x409e46
  409e2e:	stos   BYTE PTR es:[edi],al
  409e2f:	cmp    dl,BYTE PTR [esi+ebx*2+0x51074dda]
  409e36:	cld    
  409e37:	inc    edx
  409e38:	or     eax,0x27b30e8b
  409e3d:	pop    ecx
  409e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3f:	inc    ecx
  409e40:	sbb    dl,BYTE PTR [ecx+ebx*1-0x72bde7b8]
  409e47:	dec    ecx
  409e48:	push   cs
  409e49:	pop    esp
  409e4a:	retf   
  409e4b:	jp     0x409ea9
  409e4d:	retf   0xe25d
  409e50:	mov    edx,eax
  409e52:	ins    BYTE PTR es:[edi],dx
  409e53:	jmp    0xd399690b
  409e58:	mov    bl,0xc
  409e5a:	imul   esi,esi,0x20
  409e5d:	loop   0x409e1c
  409e5f:	int3   
  409e60:	xchg   DWORD PTR [esi],edi
  409e62:	ins    DWORD PTR es:[edi],dx
  409e63:	sar    al,1
  409e65:	retf   0xc357
  409e68:	lahf   
  409e69:	daa    
  409e6a:	bound  ebx,QWORD PTR [eax+0x18457fda]
  409e70:	mov    esi,DWORD PTR [edx]
  409e72:	or     bl,0x94
  409e75:	push   esi
  409e76:	jp     0x409ee0
  409e78:	test   al,0x0
  409e7a:	push   ebp
  409e7b:	jmp    0x409ecd
  409e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e7e:	outs   dx,BYTE PTR ds:[esi]
  409e7f:	(bad)  
  409e80:	push   0xf876efaa
  409e85:	cmp    eax,0x9b4f4d6f
  409e8a:	mov    ds:0x3bd92d69,eax
  409e8f:	inc    ecx
  409e90:	xchg   dh,bl
  409e92:	ins    BYTE PTR es:[edi],dx
  409e93:	jmp    0x409e3c
  409e95:	in     eax,dx
  409e96:	mov    edx,0x702a9bc7
  409e9b:	out    dx,al
  409e9c:	stos   BYTE PTR es:[edi],al
  409e9d:	repnz ins BYTE PTR es:[edi],dx
  409e9f:	daa    
  409ea0:	fldenv [ecx]
  409ea2:	dec    ebp
  409ea3:	mov    ds:0xea51aef7,eax
  409ea8:	add    eax,0xb8a7916e
  409ead:	mov    ebp,0xa78c2c48
  409eb2:	mov    dl,0x8
  409eb4:	jne    0x409f06
  409eb6:	jecxz  0x409f1c
  409eb8:	xor    DWORD PTR [eax+0xf5653ee],eax
  409ebe:	leave  
  409ebf:	and    BYTE PTR [edi+ebx*8],al
  409ec2:	jmp    0xa74addd2
  409ec7:	dec    esp
  409ec8:	outs   dx,BYTE PTR ds:[esi]
  409ec9:	mov    bl,0x87
  409ecb:	addr16 dec ebp
  409ecd:	imul   edi,DWORD PTR [edx-0x436edce],0x66
  409ed4:	inc    eax
  409ed5:	sbb    edx,esp
  409ed7:	cs pop eax
  409ed9:	mov    DWORD PTR [ecx-0x447f5dbd],esi
  409edf:	inc    eax
  409ee0:	adc    bl,dl
  409ee2:	(bad)  
  409ee3:	paddsw mm4,QWORD PTR [esi]
  409ee6:	push   0x13
  409ee8:	rcl    eax,cl
  409eea:	and    ch,BYTE PTR [edi+0x6487aee2]
  409ef0:	shr    DWORD PTR [eax+0x29],0xfe
  409ef4:	xchg   DWORD PTR [eax+eax*1-0x753aae59],ebp
  409efb:	push   ss
  409efc:	add    edx,DWORD PTR [ebx]
  409efe:	mov    edi,0xda3eb3ca
  409f03:	test   eax,0x66cabee7
  409f08:	and    al,al
  409f0a:	call   0x7bf4:0x27925e48
  409f11:	add    BYTE PTR [esi-0x6f],al
  409f14:	xchg   edi,eax
  409f15:	xchg   ecx,eax
  409f16:	hlt    
  409f17:	and    eax,0xdcd4cb61
  409f1c:	push   edx
  409f1d:	dec    eax
  409f1e:	mov    al,ds:0xcf02f265
  409f23:	dec    esi
  409f24:	ficomp WORD PTR [ecx+eiz*8+0x7b]
  409f28:	add    esi,ecx
  409f2a:	(bad)  
  409f2b:	inc    edi
  409f2c:	or     BYTE PTR [edx-0x58],bh
  409f2f:	and    BYTE PTR [edi+ecx*8-0x74],dh
  409f33:	dec    edx
  409f34:	pop    esp
  409f35:	cli    
  409f36:	(bad)  
  409f37:	cmp    esi,DWORD PTR [ecx+0x1a]
  409f3a:	push   ss
  409f3b:	or     eax,0xf50a3097
  409f41:	pop    ebx
  409f42:	rol    DWORD PTR ds:[ebx+0x42],1
  409f46:	out    dx,al
  409f47:	imul   ecx,ecx,0x4450eb14
  409f4d:	pop    edi
  409f4e:	jecxz  0x409fba
  409f50:	add    DWORD PTR [edx+0x18060089],0x63
  409f57:	xor    eax,0x38d7c83c
  409f5c:	cmp    ah,BYTE PTR [edi]
  409f5e:	(bad)
  409f62:	mov    bl,0x31
  409f64:	and    DWORD PTR [esi+0x7e],esp
  409f67:	jge    0x409fba
  409f69:	add    ecx,DWORD PTR [edx+0x8]
  409f6c:	pop    edi
  409f6d:	pop    eax
  409f6e:	cld    
  409f6f:	gs lahf 
  409f71:	out    dx,al
  409f72:	jl     0x409faf
  409f74:	xor    DWORD PTR [ebx+esi*4],esp
  409f77:	sub    eax,0x6cf5ce7b
  409f7c:	jle    0x409ff6
  409f7e:	ret    
  409f7f:	add    BYTE PTR ds:0x24c57fbb,al
  409f85:	(bad)  
  409f87:	dec    esi
  409f88:	lods   al,BYTE PTR ds:[esi]
  409f89:	retf   0x5d21
  409f8c:	inc    edx
  409f8d:	stc    
  409f8e:	jb     0x409fe1
  409f90:	adc    BYTE PTR [edx+0x6f77de8],dh
  409f96:	(bad)  [eax]
  409f98:	or     BYTE PTR [ecx-0x65],ch
  409f9b:	jne    0x409fd6
  409f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f9e:	mov    ds:0xfdbc7efb,al
  409fa3:	xor    DWORD PTR [eax],esi
  409fa5:	addr16 inc ebx
  409fa7:	push   ecx
  409fa8:	aaa    
  409fa9:	mov    DWORD PTR [edi+0x736e3730],0xed910c4f
  409fb3:	shr    BYTE PTR [esi],1
  409fb5:	imul   ebx,DWORD PTR [edx+0x69],0x7f56e8a1
  409fbc:	cdq    
  409fbd:	adc    al,0xe9
  409fbf:	lods   al,BYTE PTR ds:[esi]
  409fc0:	add    DWORD PTR [esi+0x4049a9de],esp
  409fc6:	imul   ecx,DWORD PTR [ebx-0x13],0xffffffd7
  409fca:	lock add al,0x1b
  409fcd:	imul   edi,DWORD PTR [esi+eiz*2+0x47],0xffffffae
  409fd2:	in     al,dx
  409fd3:	sbb    DWORD PTR [esi-0x55],ebx
  409fd6:	pop    edx
  409fd7:	inc    ebp
  409fd8:	int    0xf6
  409fda:	ficomp WORD PTR [ebx-0x51]
  409fdd:	mov    ah,0xea
  409fdf:	pop    eax
  409fe0:	leave  
  409fe1:	push   0xffffff82
  409fe3:	pop    esp
  409fe4:	ds jg  0x409f93
  409fe7:	jo     0x409f69
  409fe9:	jmp    0x16d5:0x4789137d
  409ff0:	or     bh,BYTE PTR [edi+0x27307c89]
  409ff6:	pop    edi
  409ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ff8:	sti    
  409ff9:	nop
  409ffa:	in     eax,dx
  409ffb:	popa   
  409ffc:	or     dh,BYTE PTR [eax]
  409ffe:	pusha  
  409fff:	mov    dh,0xf5
  40a001:	icebp  
  40a002:	jmp    0x12b:0xacc30f9
  40a009:	mov    al,0x75
  40a00b:	push   ebp
  40a00c:	dec    esi
  40a00d:	dec    ebp
  40a00e:	pop    ecx
  40a00f:	push   0xd80ed2c4
  40a014:	ds dec ebp
  40a016:	cs mov ebx,0x606d2309
  40a01c:	cmp    esi,eax
  40a01e:	mov    dh,0xee
  40a020:	jl     0x409fd5
  40a022:	test   BYTE PTR [eax],dl
  40a024:	pop    edx
  40a025:	pusha  
  40a026:	jmp    0xa26b:0xf9adad46
  40a02d:	jp     0x40a07f
  40a02f:	aaa    
  40a030:	ds shl edx,1
  40a033:	mul    DWORD PTR [edx-0x14]
  40a036:	in     eax,0x9b
  40a038:	aam    0x28
  40a03a:	adc    eax,0x87efac3d
  40a03f:	dec    eax
  40a040:	jnp    0x40a0aa
  40a042:	cld    
  40a043:	push   DWORD PTR [esi-0xe]
  40a046:	data16 or BYTE PTR [ebp-0x64],ah
  40a04a:	js     0x40a062
  40a04c:	jbe    0x40a0a6
  40a04e:	xor    BYTE PTR [esi+0x4],dl
  40a051:	cmp    ebx,ebx
  40a053:	inc    edi
  40a054:	mov    bh,0x8
  40a056:	push   DWORD PTR [ebp+0x166c7db]
  40a05c:	sub    bl,BYTE PTR [eax]
  40a05e:	ret    0x503
  40a061:	xchg   esi,eax
  40a062:	out    dx,al
  40a063:	cdq    
  40a064:	cmp    ch,BYTE PTR [eax]
  40a066:	shl    BYTE PTR [ebx+0x15],cl
  40a069:	mov    esi,0x52445417
  40a06e:	sahf   
  40a06f:	jae    0x40a0aa
  40a071:	mov    cs,WORD PTR [edi]
  40a073:	inc    esp
  40a074:	je     0x40a0b8
  40a076:	jmp    DWORD PTR [ebx-0x75]
  40a079:	cli    
  40a07a:	mov    ds:0x96797349,al
  40a07f:	pop    es
  40a080:	mov    ds:0xea7d523f,eax
  40a085:	add    BYTE PTR [ecx+eiz*1-0x5c],dl
  40a089:	aad    0xb5
  40a08b:	xor    dl,BYTE PTR [ebx-0x4b]
  40a08e:	sub    al,0x60
  40a090:	cmp    al,0x2a
  40a092:	pop    es
  40a093:	xor    esp,DWORD PTR [esi+0x464ff269]
  40a099:	mov    al,BYTE PTR [eax]
  40a09b:	xor    eax,0x9f274084
  40a0a0:	or     ebp,DWORD PTR [edx-0x149ca152]
  40a0a6:	loope  0x40a10e
  40a0a8:	add    DWORD PTR [eax+ebp*8-0x2152fd99],ebp
  40a0af:	adc    BYTE PTR [eax],dl
  40a0b1:	test   BYTE PTR [edx+0x28],dl
  40a0b4:	adc    ah,ah
  40a0b6:	into   
  40a0b7:	nop
  40a0b8:	ret    
  40a0b9:	push   ebx
  40a0ba:	inc    edx
  40a0bb:	adc    BYTE PTR [ebx+0x30850658],0x1f
  40a0c2:	pop    ss
  40a0c3:	cs xor al,0x73
  40a0c6:	xchg   edi,eax
  40a0c7:	mov    BYTE PTR [ebp-0x5c],bl
  40a0ca:	repz pop eax
  40a0cc:	int3   
  40a0cd:	pop    edi
  40a0ce:	iret   
  40a0cf:	push   cs
  40a0d0:	jbe    0x40a0b7
  40a0d2:	mov    bl,0x44
  40a0d4:	arpl   WORD PTR [eax+0x52],di
  40a0d7:	dec    ebx
  40a0d8:	lods   al,BYTE PTR ds:[esi]
  40a0d9:	clc    
  40a0da:	(bad)  
  40a0db:	loopne 0x40a12b
  40a0dd:	inc    edi
  40a0de:	clc    
  40a0df:	ja     0x40a0e4
  40a0e1:	pushf  
  40a0e2:	mov    DWORD PTR [eax+0x62ca180a],0x61eec009
  40a0ec:	and    al,0x1e
  40a0ee:	leave  
  40a0ef:	inc    ebp
  40a0f0:	out    0x2c,eax
  40a0f2:	dec    esp
  40a0f3:	shl    BYTE PTR [esi-0x2c],cl
  40a0f6:	push   esi
  40a0f7:	push   0xffffffcf
  40a0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0fa:	mov    ds:0xf42f5043,eax
  40a0ff:	call   0x5c9e:0xb083e343
  40a106:	in     al,dx
  40a107:	repz hlt 
  40a109:	(bad)  
  40a10a:	lea    ebp,[edi+0x66]
  40a10d:	cmp    dl,dh
  40a10f:	bound  esi,QWORD PTR [edi]
  40a111:	lahf   
  40a112:	mov    edx,0xa4141a5d
  40a117:	outs   dx,BYTE PTR ds:[esi]
  40a118:	sbb    al,dh
  40a11a:	cwde   
  40a11b:	pop    edx
  40a11c:	adc    ebx,DWORD PTR [ecx-0x5b]
  40a11f:	repz imul edi,DWORD PTR [esi-0x25],0x8b22546f
  40a127:	mov    esi,0x3b82ec79
  40a12c:	rcr    BYTE PTR [edx-0x10a6c459],cl
  40a132:	mov    ds:0xb523f871,eax
  40a137:	add    edx,DWORD PTR [ebp-0x385a0d8d]
  40a13d:	jecxz  0x40a167
  40a13f:	js     0x40a158
  40a141:	cmp    BYTE PTR [eax-0x51b2cab6],0x66
  40a148:	add    ax,0xee18
  40a14c:	mov    BYTE PTR [esi+0x2a797fe9],0x93
  40a153:	or     DWORD PTR [eax],ebx
  40a155:	idiv   BYTE PTR [edx+eax*2+0x1d]
  40a159:	(bad)  
  40a15a:	xchg   esi,eax
  40a15b:	bound  edi,QWORD PTR [edi+edx*4]
  40a15e:	imul   edi,DWORD PTR [ebx+0x4bc454c],0xa71031cc
  40a168:	inc    ecx
  40a169:	out    0xb0,al
  40a16b:	imul   edi,DWORD PTR [esi-0xd14a1d9],0x68
  40a172:	dec    ecx
  40a173:	or     eax,0xce78e234
  40a178:	mov    dl,0xe6
  40a17a:	fild   WORD PTR [edi+0x64]
  40a17d:	dec    esp
  40a17e:	push   DWORD PTR [eax-0x53]
  40a181:	outs   dx,BYTE PTR ds:[esi]
  40a182:	sbb    BYTE PTR [edx+0x44],0x4f
  40a186:	adc    al,BYTE PTR [edi-0x68]
  40a189:	ficomp WORD PTR [edi-0x59a4457d]
  40a18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a190:	adc    al,0x22
  40a192:	sbb    BYTE PTR [esi+0x56],0xfb
  40a196:	in     eax,dx
  40a197:	fadd   DWORD PTR [esi+edx*8]
  40a19a:	adc    esp,DWORD PTR [eax]
  40a19c:	call   0xbe655047
  40a1a1:	ss inc edi
  40a1a3:	sub    ebx,DWORD PTR [esi+0x7d6203f4]
  40a1a9:	ss push eax
  40a1ab:	and    DWORD PTR [esi-0x74],0xbc99020a
  40a1b2:	lods   ax,WORD PTR ds:[esi]
  40a1b4:	jp     0x40a1d4
  40a1b6:	jmp    0xcacab4c5
  40a1bb:	or     DWORD PTR [ecx-0x1a],ebx
  40a1be:	test   DWORD PTR [ecx+0x68992204],ebp
  40a1c4:	ins    DWORD PTR es:[edi],dx
  40a1c5:	pop    edi
  40a1c6:	jge    0x40a223
  40a1c8:	jb     0x40a21d
  40a1ca:	pop    edi
  40a1cb:	push   es
  40a1cc:	test   eax,0x2026eabc
  40a1d1:	xchg   al,cl
  40a1d3:	pop    edi
  40a1d4:	leave  
  40a1d5:	inc    eax
  40a1d6:	mov    DWORD PTR [esi-0x72bdafc1],edx
  40a1dc:	dec    ebp
  40a1dd:	add    DWORD PTR [ebx+ebx*4],0x71
  40a1e1:	fwait
  40a1e2:	outs   dx,BYTE PTR ds:[esi]
  40a1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e4:	push   ecx
  40a1e5:	cmc    
  40a1e6:	xor    DWORD PTR [esi],ebx
  40a1e8:	aaa    
  40a1e9:	into   
  40a1ea:	add    eax,DWORD PTR [eax+0x5e]
  40a1ed:	xchg   esp,eax
  40a1ee:	mov    ebx,0xa7c62166
  40a1f3:	mov    dh,0x6e
  40a1f5:	inc    edx
  40a1f6:	xchg   esi,eax
  40a1f7:	jb     0x40a1b4
  40a1f9:	ins    DWORD PTR es:[edi],dx
  40a1fa:	int    0x39
  40a1fc:	data16 mov BYTE PTR [esi+0x14],al
  40a200:	stos   BYTE PTR es:[edi],al
  40a201:	mov    edx,0x4d32bece
  40a206:	xor    edi,DWORD PTR [edx-0x4a]
  40a209:	mov    ah,0x44
  40a20b:	and    BYTE PTR [esi+0x5],0x52
  40a20f:	mov    al,0x8b
  40a211:	mov    ecx,DWORD PTR [edi-0x7b]
  40a214:	stos   BYTE PTR es:[edi],al
  40a215:	xor    DWORD PTR [ecx-0x77],edi
  40a218:	pop    ebp
  40a219:	pop    ebx
  40a21a:	xor    BYTE PTR [ecx],bl
  40a21c:	out    dx,al
  40a21d:	(bad)  
  40a21e:	fiadd  WORD PTR [ecx]
  40a220:	xor    DWORD PTR [edx+eiz*8],ecx
  40a223:	mov    bh,0xa9
  40a225:	mov    esi,DWORD PTR [esi-0xd243f9d]
  40a22b:	xor    BYTE PTR [eax],cl
  40a22d:	ds xchg esi,eax
  40a22f:	dec    ebx
  40a230:	lods   al,BYTE PTR ds:[esi]
  40a231:	outs   dx,BYTE PTR ds:[esi]
  40a232:	adc    ah,BYTE PTR [edx]
  40a234:	push   ecx
  40a235:	(bad)  
  40a236:	nop
  40a237:	push   edi
  40a238:	sbb    edi,DWORD PTR [edx+0x41]
  40a23b:	js     0x40a21f
  40a23d:	lods   eax,DWORD PTR ds:[esi]
  40a23e:	ds xchg ebx,eax
  40a240:	jmp    0x7c85bad3
  40a245:	sbb    BYTE PTR [eax],bh
  40a247:	sub    ch,dh
  40a249:	push   ds
  40a24a:	jmp    0x40a259
  40a24c:	je     0x40a2ba
  40a24e:	hlt    
  40a24f:	das    
  40a250:	stc    
  40a251:	das    
  40a252:	pop    eax
  40a253:	adc    esp,DWORD PTR [edx+0x2b]
  40a256:	pop    edx
  40a257:	and    DWORD PTR [esi+0x24],esp
  40a25a:	dec    esi
  40a25b:	js     0x40a26b
  40a25d:	mov    esi,0x70999389
  40a262:	test   eax,0x722588a
  40a267:	pushf  
  40a268:	jns    0x40a2aa
  40a26a:	cs stos BYTE PTR es:[edi],al
  40a26c:	out    dx,al
  40a26d:	adc    eax,0xd4c3cf71
  40a272:	idiv   WORD PTR [edx+0x42]
  40a276:	adc    eax,0x9a90f266
  40a27b:	repnz dec BYTE PTR [esi-0x11fc6656]
  40a282:	into   
  40a283:	test   eax,0x14b98a44
  40a288:	dec    ecx
  40a289:	sbb    edx,DWORD PTR [edi]
  40a28b:	pop    edx
  40a28c:	retf   0x522f
  40a28f:	out    dx,eax
  40a290:	aam    0x5d
  40a292:	clc    
  40a293:	js     0x40a2d7
  40a295:	and    esp,esp
  40a297:	in     al,0x51
  40a299:	dec    esi
  40a29a:	(bad)  
  40a29b:	jmp    0x2638f506
  40a2a0:	inc    ebp
  40a2a1:	ret    
  40a2a2:	cld    
  40a2a3:	cmp    BYTE PTR [eax],bl
  40a2a5:	cmp    BYTE PTR [edi-0x5ee8bbf9],cl
  40a2ab:	std    
  40a2ac:	pop    esi
  40a2ad:	xchg   edi,eax
  40a2ae:	pop    esi
  40a2af:	stc    
  40a2b0:	stos   BYTE PTR es:[edi],al
  40a2b1:	push   ecx
  40a2b2:	xchg   esp,eax
  40a2b3:	mov    BYTE PTR [ecx-0x48c47d5],al
  40a2b9:	pop    esi
  40a2ba:	fld    DWORD PTR [ecx+0x2c]
  40a2bd:	pop    ss
  40a2be:	cmp    ch,BYTE PTR [edi-0x77]
  40a2c1:	add    dl,BYTE PTR [ecx]
  40a2c3:	dec    eax
  40a2c4:	jb     0x40a25c
  40a2c6:	(bad)  
  40a2c7:	aaa    
  40a2c8:	imul   edi,DWORD PTR [ebp+eax*4+0x130a1ce5],0x2c
  40a2d0:	jmp    0x76399421
  40a2d5:	and    al,0xb4
  40a2d7:	ins    DWORD PTR es:[edi],dx
  40a2d8:	mov    DWORD PTR [esi+0x8dbf028],ebp
  40a2de:	jecxz  0x40a349
  40a2e0:	ins    BYTE PTR es:[edi],dx
  40a2e1:	and    al,0x83
  40a2e3:	cs adc bh,dh
  40a2e6:	stos   DWORD PTR es:[edi],eax
  40a2e7:	inc    edi
  40a2e8:	(bad)  
  40a2e9:	pop    ds
  40a2ea:	push   0x27
  40a2ec:	sub    ch,BYTE PTR [esi+0x461f25a9]
  40a2f2:	xchg   esi,eax
  40a2f3:	dec    ebp
  40a2f4:	dec    ecx
  40a2f5:	enter  0xa0ec,0x1f
  40a2f9:	and    al,0xab
  40a2fb:	mov    BYTE PTR [ebp+0x12],dh
  40a2fe:	sbb    al,0xcb
  40a300:	daa    
  40a301:	pushf  
  40a302:	fimul  DWORD PTR [edx+0x31b31821]
  40a308:	test   DWORD PTR [esi-0x74578ee],eax
  40a30e:	lods   eax,DWORD PTR ds:[esi]
  40a30f:	or     DWORD PTR [ebp-0x62],ebx
  40a312:	retf   0xa878
  40a315:	(bad)  
  40a316:	fimul  WORD PTR [ecx]
  40a318:	xor    ebp,DWORD PTR [ecx]
  40a31a:	add    dh,cl
  40a31c:	outs   dx,BYTE PTR ds:[esi]
  40a31d:	mov    DWORD PTR [esi+0x1d],ebx
  40a320:	mov    DWORD PTR [edi+0x2f],ebx
  40a323:	or     al,0x67
  40a325:	stos   DWORD PTR es:[edi],eax
  40a326:	out    dx,al
  40a327:	push   eax
  40a328:	push   ecx
  40a329:	out    dx,eax
  40a32a:	rcr    BYTE PTR [esi+esi*2],cl
  40a32d:	ds int3 
  40a32f:	pop    es
  40a330:	sub    dh,ch
  40a332:	dec    esi
  40a333:	sbb    BYTE PTR [eax-0x6e891496],ah
  40a339:	cmp    DWORD PTR [edx-0x3f19404d],edi
  40a33f:	sub    eax,0x608db69e
  40a344:	outs   dx,BYTE PTR ds:[esi]
  40a345:	jbe    0x40a38a
  40a347:	loop   0x40a39a
  40a349:	mov    ah,0x9f
  40a34b:	(bad)  
  40a34c:	fist   DWORD PTR ss:[eax]
  40a34f:	gs icebp 
  40a351:	jns    0x40a319
  40a353:	push   ebx
  40a354:	js     0x40a374
  40a356:	pushf  
  40a357:	out    0x0,eax
  40a359:	fcom   DWORD PTR [ecx-0x3c67f9b2]
  40a35f:	fnop   
  40a361:	jle    0x40a391
  40a363:	xlat   BYTE PTR gs:[ebx]
  40a365:	adc    BYTE PTR [edx],cl
  40a367:	dec    esp
  40a368:	mov    cl,0x14
  40a36a:	add    al,BYTE PTR ds:0x9fa302ce
  40a370:	je     0x40a3b5
  40a372:	cdq    
  40a373:	sub    bl,0xfa
  40a376:	mov    bl,0x60
  40a378:	sbb    eax,0x9629aef5
  40a37d:	arpl   WORD PTR [ebx+0x451ad510],dx
  40a383:	(bad)  
  40a384:	sbb    cl,BYTE PTR [edi-0x57]
  40a387:	cmp    eax,0x6cc7a721
  40a38c:	xchg   esi,eax
  40a38d:	repz mov ah,0x47
  40a390:	push   ss
  40a391:	xor    esp,DWORD PTR [edi-0x44]
  40a394:	xchg   ecx,eax
  40a395:	mov    ah,0x9a
  40a397:	jg     0x40a3d7
  40a399:	scas   al,BYTE PTR es:[edi]
  40a39a:	sti    
  40a39b:	push   ss
  40a39c:	cmp    BYTE PTR [esi-0x7],bl
  40a39f:	and    dh,BYTE PTR fs:[ecx-0x14659c03]
  40a3a6:	lahf   
  40a3a7:	xor    BYTE PTR [ebp+0x27],ah
  40a3aa:	call   0x85474222
  40a3af:	pop    esi
  40a3b0:	pop    ecx
  40a3b1:	mov    edi,0x5d5c00fa
  40a3b6:	enter  0x54e,0xca
  40a3ba:	or     al,0x6b
  40a3bc:	mov    esi,0x5c9c5e3a
  40a3c1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a3c3:	call   0xae61:0xb3e55332
  40a3ca:	out    0xe1,al
  40a3cc:	pop    ebx
  40a3cd:	xor    edi,DWORD PTR [ecx+0x69]
  40a3d0:	xor    eax,0xb9290efc
  40a3d5:	cmp    BYTE PTR [edx],al
  40a3d7:	je     0x40a407
  40a3d9:	pop    eax
  40a3da:	repnz outs dx,BYTE PTR ds:[esi]
  40a3dc:	daa    
  40a3dd:	mov    esi,0x48e50214
  40a3e2:	add    ecx,DWORD PTR [esi+0x7a]
  40a3e5:	gs in  eax,dx
  40a3e7:	adc    ah,BYTE PTR [edx+eax*4+0x1e3344dc]
  40a3ee:	sti    
  40a3ef:	jnp    0x40a44c
  40a3f1:	ja     0x40a381
  40a3f3:	push   ecx
  40a3f4:	add    eax,0x46e7ec9
  40a3f9:	cmp    dl,BYTE PTR [esp+eiz*2+0x640e7722]
  40a400:	mov    ds:0xf2ae22fa,eax
  40a405:	and    BYTE PTR [edx-0x5c5a04a],cl
  40a40b:	mov    WORD PTR [edx+ebx*8-0x25],ds
  40a40f:	xor    DWORD PTR ds:0x7aa5cdbd,edx
  40a415:	mov    esi,0x2d3a0380
  40a41a:	js     0x40a492
  40a41c:	mov    bh,0xf0
  40a41e:	mov    al,ds:0x1be4e778
  40a423:	and    al,0x9f
  40a425:	fdiv   QWORD PTR [esi-0x74dd75fe]
  40a42b:	ins    BYTE PTR es:[edi],dx
  40a42c:	jb     0x40a3d5
  40a42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a42f:	(bad)  
  40a430:	xor    ebx,edi
  40a432:	test   al,0x46
  40a434:	out    0x2e,eax
  40a436:	jmp    0xead8d38e
  40a43b:	stos   DWORD PTR es:[edi],eax
  40a43c:	sbb    eax,0x23d62341
  40a441:	icebp  
  40a442:	inc    esi
  40a443:	sar    BYTE PTR ds:0x9c753ada,0xd5
  40a44a:	mov    dh,0x9b
  40a44c:	sti    
  40a44d:	sahf   
  40a44e:	je     0x40a45a
  40a450:	js     0x40a3da
  40a452:	inc    edx
  40a453:	sahf   
  40a454:	add    al,0xdb
  40a456:	mov    edx,0xb0a85b1f
  40a45b:	shr    DWORD PTR [esi+0x2b],0x66
  40a45f:	popf   
  40a460:	add    eax,0x141ed53f
  40a465:	xor    al,dh
  40a467:	ror    DWORD PTR [ebp-0x45],cl
  40a46a:	xor    al,0x50
  40a46c:	inc    edi
  40a46d:	mov    eax,0x9fed7bca
  40a472:	push   edi
  40a473:	xor    eax,0x36221011
  40a478:	shl    DWORD PTR [edi+0x342414cc],0xe9
  40a47f:	je     0x40a464
  40a481:	stc    
  40a482:	call   0xa66c64fa
  40a487:	jne    0x40a4ed
  40a489:	push   ss
  40a48a:	test   DWORD PTR [ebp+0x7b],ecx
  40a48d:	cs mov dl,0x73
  40a490:	dec    ecx
  40a491:	or     BYTE PTR [ebx],bl
  40a493:	sub    BYTE PTR [edi-0x4e],dh
  40a496:	dec    eax
  40a497:	not    BYTE PTR [ebx-0x5c]
  40a49a:	ret    
  40a49b:	cmp    BYTE PTR [edx-0x7c86afea],0xc9
  40a4a2:	mov    dl,0x1b
  40a4a4:	sbb    esi,DWORD PTR [edx+0xcdcb4cc]
  40a4aa:	inc    edx
  40a4ab:	and    DWORD PTR [esi-0x10],edi
  40a4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4af:	mov    ecx,0x243a0e54
  40a4b4:	push   es
  40a4b5:	js     0x40a47f
  40a4b7:	sub    DWORD PTR [eax],esi
  40a4b9:	mov    edx,0x4559cca9
  40a4be:	xor    eax,0xfbc3e76b
  40a4c3:	pop    es
  40a4c4:	aas    
  40a4c5:	push   0xa7e39807
  40a4ca:	fistp  QWORD PTR [edx]
  40a4cc:	mov    ds:0xafbfe77e,al
  40a4d1:	mov    dh,dh
  40a4d3:	ret    0x6e59
  40a4d6:	stos   BYTE PTR es:[edi],al
  40a4d7:	jne    0x40a4dd
  40a4d9:	idiv   BYTE PTR [esi]
  40a4db:	xor    DWORD PTR [esi+0x3f],esi
  40a4de:	jl     0x40a4ef
  40a4e0:	and    BYTE PTR [ebx+0x432f1b82],ch
  40a4e6:	aam    0xc8
  40a4e8:	js     0x40a4c0
  40a4ea:	repz fidivr WORD PTR [ebx]
  40a4ed:	inc    edx
  40a4ee:	mov    al,ds:0x608c73eb
  40a4f3:	fs hlt 
  40a4f5:	and    DWORD PTR [eax-0x6f32d1e8],ebp
  40a4fb:	pusha  
  40a4fc:	lahf   
  40a4fd:	rcr    ch,cl
  40a4ff:	sub    DWORD PTR ds:0x1304abb2,esi
  40a505:	mov    DWORD PTR ds:0xf0bf3930,edi
  40a50b:	mov    dh,0x88
  40a50d:	mov    dl,0xf0
  40a50f:	int    0x13
  40a511:	jbe    0x40a49a
  40a513:	loope  0x40a4b7
  40a515:	sub    BYTE PTR [edi+ebp*1],bl
  40a518:	test   eax,0x2980cb7
  40a51d:	ret    0x4ae3
  40a520:	mov    esi,0x2064eb6f
  40a525:	or     ah,dl
  40a527:	das    
  40a528:	emms   
  40a52a:	mov    ah,BYTE PTR [esi]
  40a52c:	pop    eax
  40a52d:	jl     0x40a55e
  40a52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a530:	pop    ds
  40a531:	mov    dh,0xa8
  40a533:	sub    bl,BYTE PTR [edi+0x3f]
  40a536:	(bad)  
  40a537:	adc    eax,DWORD PTR [edx+0x57]
  40a53a:	lods   al,BYTE PTR ds:[esi]
  40a53b:	sbb    ah,BYTE PTR [edi+0xb]
  40a53e:	fimul  WORD PTR [esi+0x7]
  40a541:	fs or  cl,cl
  40a544:	xchg   DWORD PTR [eax+0x8],edi
  40a547:	push   es
  40a548:	js     0x40a506
  40a54a:	mov    ebp,0xfc9f7922
  40a54f:	jnp    0x40a55e
  40a551:	cli    
  40a552:	pushf  
  40a553:	or     BYTE PTR [ebx],ch
  40a555:	js     0x40a520
  40a557:	push   ebx
  40a558:	add    al,0xa8
  40a55a:	jmp    0xc0b3eecf
  40a55f:	pop    esp
  40a560:	rcr    dh,cl
  40a562:	mov    al,ds:0xf84b1637
  40a567:	fs rol al,0xc0
  40a56b:	rol    al,0xc0
  40a56e:	rol    al,0xc0
  40a571:	rol    al,0xc0
  40a574:	rol    al,0xc0
  40a577:	rol    al,0xc0
  40a57a:	rol    al,0xc0
  40a57d:	rol    al,0xc0
  40a580:	rol    al,0xc0
  40a583:	rol    al,0xc0
  40a586:	rol    al,0xc0
  40a589:	rol    al,0xc0
  40a58c:	rol    al,0xc0
  40a58f:	ror    bh,0x72
  40a592:	sahf   
  40a593:	dec    edi
  40a594:	push   ds
  40a595:	inc    ebx
  40a596:	lock ins BYTE PTR es:[edi],dx
  40a598:	cmp    eax,0x1946d3de
  40a59d:	pop    edx
  40a59e:	jmp    0x40a615
  40a5a0:	and    cl,BYTE PTR [edx+0x2a77240a]
  40a5a6:	mov    edx,0xc584287f
  40a5ab:	push   esp
  40a5ac:	or     ecx,DWORD PTR [eax]
  40a5ae:	in     al,0x78
  40a5b0:	adc    DWORD PTR [edi-0x7d299404],edi
  40a5b6:	fadd   QWORD PTR [eax+0x19]
  40a5b9:	mov    bh,0x9f
  40a5bb:	bound  edi,QWORD PTR ds:0x1e49d766
  40a5c1:	scas   al,BYTE PTR es:[edi]
  40a5c2:	mov    eax,ds:0xc6b7425b
  40a5c7:	ret    
  40a5c8:	lahf   
  40a5c9:	rep outs dx,BYTE PTR ds:[esi]
  40a5cb:	adc    cl,BYTE PTR [esi+0x44]
  40a5ce:	pop    eax
  40a5cf:	xlat   BYTE PTR ds:[ebx]
  40a5d0:	ret    
  40a5d1:	popf   
  40a5d2:	jecxz  0x40a56b
  40a5d4:	and    dl,BYTE PTR [eax]
  40a5d6:	out    0x7f,al
  40a5d8:	call   0x22b67e17
  40a5dd:	cwde   
  40a5de:	cdq    
  40a5df:	add    edx,DWORD PTR [edi]
  40a5e1:	mov    ecx,0xf0238c7
  40a5e6:	enter  0x5f7d,0x52
  40a5ea:	jmp    0x8a7cb870
  40a5ef:	jmp    0x7cd8333d
  40a5f4:	dec    ebp
  40a5f5:	clc    
  40a5f6:	xchg   ebx,eax
  40a5f7:	pop    es
  40a5f8:	push   ss
  40a5f9:	in     al,0xc4
  40a5fb:	repnz push edx
  40a5fd:	jp     0x40a58d
  40a5ff:	jo     0x40a60a
  40a601:	(bad)  
  40a602:	fistp  WORD PTR [edx]
  40a604:	push   ds
  40a605:	mov    dl,0xe0
  40a607:	outs   dx,BYTE PTR ds:[esi]
  40a608:	push   es
  40a609:	or     ah,BYTE PTR [edi]
  40a60b:	sub    eax,0x7bd47c92
  40a610:	pop    es
  40a611:	imul   ebx,DWORD PTR [edx+esi*8],0x6c
  40a615:	scas   al,BYTE PTR es:[edi]
  40a616:	retf   0x9a4c
  40a619:	idiv   BYTE PTR [esi]
  40a61b:	fs leave 
  40a61d:	into   
  40a61e:	xor    BYTE PTR [esi+0x7bd73ee9],bl
  40a624:	add    DWORD PTR [ebp-0x51],esp
  40a627:	push   eax
  40a628:	inc    edi
  40a629:	jmp    0xdd1d:0x6674c2d7
  40a630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a631:	pop    ebx
  40a632:	xchg   edx,eax
  40a633:	sbb    eax,0x52738a76
  40a638:	fucomip st,st(3)
  40a63a:	fisub  DWORD PTR [esi+0x20]
  40a63d:	loopne 0x40a5dd
  40a63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a640:	jmp    0x4b0681f1
  40a645:	arpl   si,cx
  40a647:	repnz sbb al,0x60
  40a64a:	mov    dl,0x2e
  40a64c:	adc    al,0x29
  40a64e:	push   cs
  40a64f:	cmc    
  40a650:	leave  
  40a651:	outs   dx,BYTE PTR ds:[esi]
  40a652:	aad    0x8f
  40a654:	lods   al,BYTE PTR ds:[esi]
  40a655:	scas   eax,DWORD PTR es:[edi]
  40a656:	ret    
  40a657:	pop    ebx
  40a658:	push   0x5b6c82e4
  40a65d:	add    BYTE PTR [ebp+0x5c],al
  40a660:	in     al,0xcd
  40a662:	and    eax,0xdc634216
  40a667:	pop    ecx
  40a668:	dec    ebx
  40a669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a66a:	jbe    0x40a6c8
  40a66c:	pop    ecx
  40a66d:	mov    bh,0x24
  40a66f:	inc    eax
  40a670:	push   ds
  40a671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a672:	in     al,0x92
  40a674:	push   edx
  40a675:	inc    edi
  40a676:	fdiv   DWORD PTR [ecx-0x50]
  40a679:	sahf   
  40a67a:	sti    
  40a67b:	imul   edi,DWORD PTR [esi],0xffffffb3
  40a67e:	cwde   
  40a67f:	pop    ds
  40a680:	pop    ss
  40a681:	xor    ecx,esp
  40a683:	ss pop esi
  40a685:	cmp    eax,0xe4377495
  40a68a:	fcom   QWORD PTR [eax-0x27e167d5]
  40a690:	ds je  0x40a65b
  40a693:	xchg   esp,eax
  40a694:	jp     0x40a6ef
  40a696:	and    dh,cl
  40a698:	fidiv  WORD PTR [esi+0xa3f727b]
  40a69e:	sbb    DWORD PTR [esi+0x5e],eax
  40a6a1:	jmp    0x4492:0x2a4538b0
  40a6a8:	fstp   st(5)
  40a6aa:	cmp    eax,0xe947be33
  40a6af:	outs   dx,BYTE PTR ds:[esi]
  40a6b0:	add    al,0x9b
  40a6b2:	repnz aas 
  40a6b4:	jp     0x40a6d4
  40a6b6:	in     eax,dx
  40a6b7:	imul   ebx,DWORD PTR [eax],0x4
  40a6ba:	fdivrp st(0),st
  40a6bc:	and    eax,0x255cf4f0
  40a6c1:	(bad)  
  40a6c2:	stos   DWORD PTR es:[edi],eax
  40a6c3:	es addr16 sub ch,cl
  40a6c7:	jno    0x40a664
  40a6c9:	idiv   DWORD PTR [edi+0x26]
  40a6cc:	js     0x40a6e2
  40a6ce:	cli    
  40a6cf:	rol    DWORD PTR [ebx],cl
  40a6d1:	inc    esi
  40a6d2:	mov    ds:0x66f976d8,al
  40a6d7:	sub    al,0x3e
  40a6d9:	mov    esp,0x38262493
  40a6de:	sub    DWORD PTR [eax-0x2d],0xf7a9d0db
  40a6e5:	xor    DWORD PTR [esi-0x79],esi
  40a6e8:	inc    ecx
  40a6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6eb:	jmp    0xe3fba9e5
  40a6f0:	jo     0x40a723
  40a6f2:	mov    ah,0x90
  40a6f4:	fs pop eax
  40a6f6:	mov    bl,0x70
  40a6f8:	push   ebp
  40a6f9:	xchg   BYTE PTR [ecx+0x71],dh
  40a6fc:	imul   BYTE PTR [edi-0x42]
  40a6ff:	inc    ebp
  40a700:	jns    0x40a76c
  40a702:	ss ret 0x4eb
  40a706:	jmp    0x5e47:0x4ee3201
  40a70d:	cmp    eax,0x914eabe2
  40a712:	xchg   edi,eax
  40a713:	inc    ecx
  40a714:	fistp  WORD PTR [esi-0x7d]
  40a717:	mov    edi,0x44efbf5c
  40a71c:	push   0x7d
  40a71e:	push   edi
  40a71f:	arpl   sp,ax
  40a721:	sbb    al,BYTE PTR [ebx+0x38]
  40a724:	xchg   DWORD PTR [ecx+edi*8+0x6e],ecx
  40a728:	loop   0x40a743
  40a72a:	stos   BYTE PTR es:[edi],al
  40a72b:	cmp    BYTE PTR [eax+0x6],al
  40a72e:	out    0x57,eax
  40a730:	aad    0xe6
  40a732:	mov    al,ds:0xcdf45add
  40a737:	mov    al,ds:0x24e4b669
  40a73c:	push   ds
  40a73d:	sbb    dl,BYTE PTR [ecx+0x3e97d6f0]
  40a743:	ins    BYTE PTR es:[edi],dx
  40a744:	xor    ebx,DWORD PTR [ecx-0x78]
  40a747:	jbe    0x40a786
  40a749:	mov    ss,ebx
  40a74b:	xchg   ebx,eax
  40a74c:	sbb    edx,DWORD PTR [eax-0x443aa278]
  40a752:	fistp  QWORD PTR [ebx]
  40a754:	and    ebx,DWORD PTR [ecx+0x28cd6083]
  40a75a:	adc    eax,0xe6f0cf6a
  40a75f:	xchg   eax,ebx
  40a761:	push   esi
  40a762:	push   esi
  40a763:	adc    al,0x35
  40a765:	push   eax
  40a766:	(bad)  
  40a767:	mov    bl,0x11
  40a769:	dec    ecx
  40a76a:	sbb    ecx,DWORD PTR [esi+0x68be642e]
  40a770:	xchg   ebx,eax
  40a771:	rcr    cl,1
  40a773:	sbb    eax,0x94a1bc7
  40a778:	add    DWORD PTR [esi+0x6cdd4808],esi
  40a77e:	rcl    DWORD PTR [ebp+edx*1+0x5722031a],cl
  40a785:	or     edx,DWORD PTR [esi-0x6dc0a04d]
  40a78b:	cdq    
  40a78c:	pop    edi
  40a78d:	cs cwde 
  40a78f:	pop    es
  40a790:	xor    eax,0x428186c2
  40a795:	sbb    BYTE PTR [edx-0x696982fd],ch
  40a79b:	cdq    
  40a79c:	push   edx
  40a79d:	jp     0x40a7d2
  40a79f:	and    eax,0x6b9dddec
  40a7a4:	inc    esi
  40a7a5:	add    BYTE PTR [eax+0x7903607],al
  40a7ab:	(bad)  
  40a7ac:	data16 xor al,bl
  40a7af:	shr    BYTE PTR [ebp+eiz*8-0x741dd05b],cl
  40a7b6:	rol    DWORD PTR [ecx+edx*2+0x1c],cl
  40a7ba:	loope  0x40a758
  40a7bc:	test   BYTE PTR [edx-0x61],bh
  40a7bf:	mov    al,0xc8
  40a7c1:	push   ss
  40a7c2:	out    0xc9,al
  40a7c4:	js     0x40a833
  40a7c6:	sahf   
  40a7c7:	fs gs dec esi
  40a7ca:	lahf   
  40a7cb:	push   eax
  40a7cc:	pushf  
  40a7cd:	test   al,ch
  40a7cf:	sub    edi,DWORD PTR [esi]
  40a7d1:	fcmovne st,st(2)
  40a7d3:	mov    ecx,0x69ff98ae
  40a7d8:	retf   
  40a7d9:	mov    edx,DWORD PTR [esi-0x1cd51aa6]
  40a7df:	mov    al,ds:0x1dd045b9
  40a7e4:	jg     0x40a7ec
  40a7e6:	call   0xacd1b6fa
  40a7eb:	outs   dx,BYTE PTR ds:[esi]
  40a7ec:	jbe    0x40a800
  40a7ee:	out    dx,eax
  40a7ef:	imul   edx,DWORD PTR [edi+0x45],0xffffffb2
  40a7f3:	sub    BYTE PTR [ebx+0x3161b220],bl
  40a7f9:	xchg   bl,dl
  40a7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7fc:	loopne 0x40a806
  40a7fe:	sub    ah,BYTE PTR [ecx]
  40a800:	sbb    al,0x8f
  40a802:	xlat   BYTE PTR ds:[ebx]
  40a803:	or     ch,BYTE PTR [eax+eax*8-0x579cdbc5]
  40a80a:	lock into 
  40a80c:	dec    esi
  40a80d:	push   edx
  40a80e:	shr    BYTE PTR [ecx+0x3d],cl
  40a811:	and    al,0x17
  40a813:	js     0x40a7ee
  40a815:	hlt    
  40a816:	nop
  40a817:	push   ebp
  40a818:	jl     0x40a7ce
  40a81a:	es cli 
  40a81c:	or     BYTE PTR [eax-0x3dae6c94],bl
  40a822:	pop    ds
  40a823:	test   dh,al
  40a825:	or     BYTE PTR [eax+0x615b7571],ch
  40a82b:	jl     0x40a875
  40a82d:	ins    BYTE PTR es:[edi],dx
  40a82e:	pop    ss
  40a82f:	(bad)  
  40a830:	jb     0x40a7f8
  40a832:	adc    edi,DWORD PTR [ebp-0x39aa08da]
  40a838:	cdq    
  40a839:	fidivr DWORD PTR [edi-0x73]
  40a83c:	jp     0x40a7bf
  40a83e:	jl     0x40a8b7
  40a840:	lds    esp,FWORD PTR [esi+0x6476f251]
  40a846:	retf   
  40a847:	fisubr WORD PTR [esi+0x54096808]
  40a84d:	push   esp
  40a84e:	jae    0x40a835
  40a850:	jne    0x40a804
  40a852:	jns    0x40a81c
  40a854:	pop    sp
  40a856:	shl    BYTE PTR [ebp-0x4],1
  40a859:	fucomp st(3)
  40a85b:	fmul   DWORD PTR [esi]
  40a85d:	loop   0x40a8bf
  40a85f:	(bad)  
  40a860:	adc    ah,ah
  40a862:	sar    DWORD PTR [ebx],1
  40a864:	mov    al,ds:0x6b03275c
  40a869:	jecxz  0x40a802
  40a86b:	sbb    eax,0xa6ba1952
  40a870:	hlt    
  40a871:	push   ds
  40a872:	jmp    0x40a893
  40a874:	xchg   ebp,eax
  40a875:	and    esi,DWORD PTR [edi]
  40a877:	bound  esp,QWORD PTR [ecx+0x42e093d2]
  40a87d:	data16 jl 0x40a823
  40a880:	jg     0x40a8a0
  40a882:	jmp    0xdccc:0xfa8d650d
  40a889:	aam    0x87
  40a88b:	dec    esp
  40a88c:	(bad)  
  40a88d:	cld    
  40a88e:	xchg   BYTE PTR [ecx+0x48109a1b],ah
  40a894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a895:	cdq    
  40a896:	xor    DWORD PTR [edx-0x6d],ebx
  40a899:	aam    0xdd
  40a89b:	adc    DWORD PTR [ebx],0xf2b6edf6
  40a8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a2:	mov    ah,0x8d
  40a8a4:	sahf   
  40a8a5:	xchg   bh,dl
  40a8a7:	ja     0x40a82e
  40a8a9:	aam    0x41
  40a8ab:	and    dl,ch
  40a8ad:	sbb    DWORD PTR [ebx],ebp
  40a8af:	fwait
  40a8b0:	cmp    BYTE PTR [esi+0x53746d89],dl
  40a8b6:	sub    eax,0xd58cb2bd
  40a8bb:	add    BYTE PTR [edx+0x3a],bh
  40a8be:	inc    edx
  40a8bf:	mov    eax,ds:0x14b18223
  40a8c4:	pop    ebp
  40a8c5:	xchg   edx,edx
  40a8c7:	aaa    
  40a8c8:	(bad)  
  40a8c9:	mov    al,ds:0x2c6e61f6
  40a8ce:	sbb    dl,BYTE PTR [edx+0x268fc22e]
  40a8d4:	test   BYTE PTR [ebx],cl
  40a8d6:	mov    esp,0x6a93f870
  40a8db:	test   DWORD PTR [ecx-0x105f1440],ebx
  40a8e1:	ror    BYTE PTR [ebp-0x2e],cl
  40a8e4:	cmp    al,0xbd
  40a8e6:	xchg   esp,eax
  40a8e7:	cmp    dh,BYTE PTR [eax-0x21]
  40a8ea:	enter  0xb81,0xfa
  40a8ee:	add    bl,BYTE PTR [edi-0x5f]
  40a8f1:	fs xchg ecx,eax
  40a8f3:	out    dx,al
  40a8f4:	mov    ebx,DWORD PTR [edi-0x61886a64]
  40a8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fb:	lock pop es
  40a8fd:	jle    0x40a8af
  40a8ff:	sub    ebx,DWORD PTR [ecx]
  40a901:	jle    0x40a889
  40a903:	fcom   DWORD PTR [ebx-0xb]
  40a906:	retf   
  40a907:	das    
  40a908:	je     0x40a90e
  40a90a:	into   
  40a90b:	and    BYTE PTR [esi+0x17],bl
  40a90e:	and    ah,BYTE PTR [esp+esi*1+0x26]
  40a912:	add    ecx,DWORD PTR [eax]
  40a914:	mov    ebx,DWORD PTR [edi+0x52]
  40a917:	jne    0x40a934
  40a919:	(bad)  
  40a91a:	jp     0x40a930
  40a91c:	(bad)  
  40a91d:	cs loopne 0x40a8d6
  40a920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a921:	mov    ds:0x2b21fbdb,al
  40a926:	mov    ah,0xba
  40a928:	dec    eax
  40a929:	mov    esp,0x5c347e76
  40a92e:	enter  0x481a,0x32
  40a932:	pop    ss
  40a933:	je     0x40a98a
  40a935:	push   ss
  40a936:	fwait
  40a937:	jo     0x40a96e
  40a939:	ins    BYTE PTR es:[edi],dx
  40a93a:	fdivp  st(4),st
  40a93c:	xchg   ecx,eax
  40a93d:	loop   0x40a935
  40a93f:	xor    al,0xf8
  40a941:	mov    cl,0xdb
  40a943:	scas   al,BYTE PTR es:[edi]
  40a944:	popa   
  40a945:	pop    ebp
  40a946:	ins    BYTE PTR es:[edi],dx
  40a947:	pslld  mm2,QWORD PTR [esi]
  40a94a:	or     eax,0xbbfdd611
  40a94f:	lods   eax,DWORD PTR ds:[esi]
  40a950:	mov    DWORD PTR [esi-0x5d],eax
  40a953:	sub    BYTE PTR [edx+0x6387ed1e],dl
  40a959:	cld    
  40a95a:	mov    dh,BYTE PTR [bx+si-0x42]
  40a95e:	stos   BYTE PTR es:[edi],al
  40a95f:	push   es
  40a960:	sar    esp,1
  40a962:	neg    al
  40a964:	mov    ah,bl
  40a966:	aaa    
  40a967:	iret   
  40a968:	jg     0x40a961
  40a96a:	fistp  QWORD PTR [edi+0x42]
  40a96d:	(bad)  
  40a96e:	mov    ecx,0x3a6c1fd8
  40a973:	imul   edx,ebp,0xfe1cfac9
  40a979:	pusha  
  40a97a:	in     al,dx
  40a97b:	stos   DWORD PTR es:[edi],eax
  40a97c:	and    ah,BYTE PTR [eax-0x477ac421]
  40a982:	sbb    al,0xf4
  40a984:	jg     0x40a9e1
  40a986:	xchg   edx,eax
  40a987:	test   al,0xc6
  40a989:	int    0xd4
  40a98b:	(bad)  
  40a98c:	adc    ecx,DWORD PTR [eax+esi*8]
  40a98f:	mov    fs,WORD PTR [ebp-0x29]
  40a992:	fadd   QWORD PTR ds:[esi+0x25af0d04]
  40a999:	push   ecx
  40a99a:	sbb    ah,BYTE PTR [ecx*8+0x6e39fe09]
  40a9a1:	xchg   BYTE PTR [edx+0x75],dh
  40a9a4:	pop    ss
  40a9a5:	sbb    ch,BYTE PTR [esp+ebp*4-0x4f6d7598]
  40a9ac:	or     BYTE PTR [ebx],cl
  40a9ae:	and    DWORD PTR [eax+0x79],0xffffffa0
  40a9b2:	mov    DWORD PTR [ebx+0x24a82855],0xce92126
  40a9bc:	add    eax,0x21679428
  40a9c1:	cdq    
  40a9c2:	mov    WORD PTR [eax],ds
  40a9c4:	ds pop ebx
  40a9c6:	hlt    
  40a9c7:	xor    al,0x35
  40a9c9:	(bad)  
  40a9ca:	rcl    BYTE PTR ds:0x851a1ed0,cl
  40a9d0:	test   DWORD PTR [ecx-0x767a97c1],ecx
  40a9d6:	mov    al,0x37
  40a9d8:	cdq    
  40a9d9:	js     0x40aa3b
  40a9db:	addr16 cli 
  40a9dd:	hlt    
  40a9de:	stos   DWORD PTR es:[edi],eax
  40a9df:	mov    esp,0xc0ada411
  40a9e4:	add    DWORD PTR [esi-0x50],ecx
  40a9e7:	push   ebx
  40a9e8:	mov    bl,0xb0
  40a9ea:	xchg   BYTE PTR [ebx],cl
  40a9ec:	dec    ebp
  40a9ed:	inc    edx
  40a9ee:	in     eax,0x3
  40a9f0:	das    
  40a9f1:	test   DWORD PTR [edi+ebx*1+0x46],ebp
  40a9f5:	rol    BYTE PTR [edi],0x37
  40a9f8:	add    eax,0x638fcadf
  40a9fd:	and    bl,BYTE PTR [esi-0x363c6acf]
  40aa03:	test   DWORD PTR [edx],edx
  40aa05:	out    dx,al
  40aa06:	sti    
  40aa07:	sub    eax,0xb2711e19
  40aa0c:	jmp    0x40aa19
  40aa0e:	jno    0x40a9c4
  40aa10:	fimul  DWORD PTR [ebp+0x1157b875]
  40aa16:	xor    edi,DWORD PTR [ebx+0x55]
  40aa19:	out    dx,al
  40aa1a:	popa   
  40aa1b:	fsubrp st(5),st
  40aa1d:	jmp    0x9cb0055e
  40aa22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa23:	repz pop ecx
  40aa25:	add    BYTE PTR [ecx+0x58db7ddd],cl
  40aa2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2c:	fbld   TBYTE PTR [ebx]
  40aa2e:	jge    0x40aa52
  40aa30:	dec    esp
  40aa31:	ret    0xf15
  40aa34:	add    DWORD PTR [ecx+0x7],ebp
  40aa37:	pop    esp
  40aa38:	jnp    0x40aa04
  40aa3a:	adc    eax,DWORD PTR [edx+esi*2-0x53]
  40aa3e:	mov    esp,0xbbdc1b74
  40aa43:	dec    esp
  40aa44:	inc    edx
  40aa45:	arpl   WORD PTR [edx-0x74],si
  40aa48:	imul   ecx,esi,0x4cf0ae0e
  40aa4e:	cmp    al,BYTE PTR [ebx*2+0x6d36ea46]
  40aa55:	stc    
  40aa56:	dec    edx
  40aa57:	and    ecx,ebp
  40aa59:	ins    BYTE PTR es:[edi],dx
  40aa5a:	inc    eax
  40aa5b:	add    al,0x8e
  40aa5d:	cmp    cl,ah
  40aa5f:	xor    esp,DWORD PTR [ecx]
  40aa61:	push   ss
  40aa62:	xchg   ebp,eax
  40aa63:	adc    esp,DWORD PTR fs:[edx]
  40aa66:	mov    dh,0xe0
  40aa68:	add    eax,0x98ec4967
  40aa6d:	ins    BYTE PTR es:[edi],dx
  40aa6e:	jge    0x40aaad
  40aa70:	inc    ecx
  40aa71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa72:	jg     0x40aa00
  40aa74:	inc    edi
  40aa75:	jb     0x40aa19
  40aa77:	es jne 0x40aab0
  40aa7a:	and    bl,ch
  40aa7c:	sbb    eax,0xa1a7843c
  40aa81:	clc    
  40aa82:	outs   dx,DWORD PTR ds:[esi]
  40aa83:	lods   al,BYTE PTR ds:[esi]
  40aa84:	jno    0x40aa15
  40aa86:	sbb    ah,BYTE PTR [esp+ecx*2-0x1f472b0a]
  40aa8d:	pop    esi
  40aa8e:	mov    esi,0x85da658d
  40aa93:	enter  0xd2a1,0xd2
  40aa97:	out    dx,eax
  40aa98:	jg     0x40aaf7
  40aa9a:	ins    BYTE PTR es:[edi],dx
  40aa9b:	inc    esp
  40aa9c:	dec    esp
  40aa9d:	loop   0x40aac3
  40aa9f:	fist   DWORD PTR ds:0xb38362ff
  40aaa5:	push   edi
  40aaa6:	mov    WORD PTR [ecx+edi*1+0x4af1dcce],es
  40aaad:	pop    ebp
  40aaae:	add    DWORD PTR [eax],edx
  40aab0:	out    dx,al
  40aab1:	push   edi
  40aab2:	sbb    dl,BYTE PTR [edx+edx*8-0x7e5977a8]
  40aab9:	xchg   edx,eax
  40aaba:	sub    ah,BYTE PTR [ebx+0x4239cb62]
  40aac0:	mov    ds,WORD PTR [ebp+0x75]
  40aac3:	fcom   QWORD PTR [edx+eax*8-0xac2cac2]
  40aaca:	mov    esi,0xae92a35d
  40aacf:	lea    edi,[esi+0x64f6adda]
  40aad5:	adc    dh,BYTE PTR [eax]
  40aad7:	or     BYTE PTR [eax-0x12],ah
  40aada:	std    
  40aadb:	or     eax,0xcc4077df
  40aae0:	sbb    ebp,ecx
  40aae2:	(bad)  
  40aae3:	adc    DWORD PTR [ebp+0x5a],eax
  40aae6:	mov    BYTE PTR [edi+0x57],ch
  40aae9:	jp     0x40aa9c
  40aaeb:	adc    BYTE PTR [esi+esi*8],dh
  40aaee:	mov    ds:0x7f80383b,eax
  40aaf3:	sbb    al,dh
  40aaf5:	pop    ebx
  40aaf6:	inc    esi
  40aaf7:	xchg   BYTE PTR [edi+0x1e8aac2a],cl
  40aafd:	in     al,dx
  40aafe:	(bad)  ss:[esi]
  40ab01:	into   
  40ab02:	adc    eax,0xbe40f7ae
  40ab07:	jecxz  0x40ab68
  40ab09:	inc    ebx
  40ab0a:	gs pop esp
  40ab0c:	mov    esp,0xb0d9af23
  40ab11:	inc    ebp
  40ab13:	push   0xca3a8ec0
  40ab18:	lods   eax,DWORD PTR ds:[esi]
  40ab19:	pop    ebp
  40ab1a:	inc    ebp
  40ab1b:	ins    BYTE PTR es:[edi],dx
  40ab1c:	das    
  40ab1d:	sbb    al,0x3b
  40ab1f:	lds    esp,FWORD PTR [ecx+0x55]
  40ab22:	retf   
  40ab23:	adc    BYTE PTR [edx-0x4e],dh
  40ab26:	outs   dx,BYTE PTR ds:[esi]
  40ab27:	jp     0x40aafe
  40ab29:	adc    al,0xbe
  40ab2b:	into   
  40ab2c:	dec    ebx
  40ab2d:	add    eax,0xcacd0ff
  40ab32:	fisttp QWORD PTR [esi+eax*4-0x77]
  40ab36:	(bad)  
  40ab37:	pop    ecx
  40ab38:	sub    eax,0x6a7c56f8
  40ab3d:	nop
  40ab3e:	push   edx
  40ab3f:	xor    DWORD PTR [edi+0x11],esi
  40ab42:	enter  0xd738,0xb4
  40ab46:	call   0x3c3ecf08
  40ab4b:	dec    eax
  40ab4c:	xchg   ebx,eax
  40ab4d:	add    dl,ch
  40ab4f:	sahf   
  40ab50:	dec    ax
  40ab52:	sbb    al,BYTE PTR [edx-0x7e]
  40ab55:	idiv   DWORD PTR [ebx]
  40ab57:	mov    edx,0x145c4da9
  40ab5c:	adc    eax,0x63ceb81e
  40ab61:	sbb    al,BYTE PTR [edx-0x6c3ca3aa]
  40ab67:	aad    0xd9
  40ab69:	xor    eax,0x2b623441
  40ab6e:	stos   DWORD PTR es:[edi],eax
  40ab6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab70:	mov    ch,al
  40ab72:	(bad)  
  40ab73:	add    eax,0x96a6c16a
  40ab78:	pop    edi
  40ab79:	pop    edx
  40ab7a:	mov    edx,DWORD PTR [ecx+0x16]
  40ab7d:	jbe    0x40abdd
  40ab7f:	pop    es
  40ab80:	lods   al,BYTE PTR ds:[esi]
  40ab81:	scas   al,BYTE PTR es:[edi]
  40ab82:	add    eax,0x9b6a123a
  40ab87:	jp     0x40ab1e
  40ab89:	scas   al,BYTE PTR es:[edi]
  40ab8a:	in     eax,0x2c
  40ab8c:	adc    eax,0xbe0aeb1c
  40ab91:	xor    cl,BYTE PTR [ebx]
  40ab93:	rol    DWORD PTR [eax+0x17],cl
  40ab96:	mov    bh,0x7f
  40ab98:	call   0xa642:0xa525abd4
  40ab9f:	sbb    eax,DWORD PTR [ebp-0x26]
  40aba2:	loope  0x40ab65
  40aba4:	inc    ebx
  40aba5:	mov    eax,0xb889013c
  40abaa:	jl     0x40ab3c
  40abac:	fwait
  40abad:	je     0x40ac0f
  40abaf:	xchg   esp,eax
  40abb0:	fwait
  40abb1:	int    0x76
  40abb3:	add    DWORD PTR [eax+0x53018904],esi
  40abb9:	neg    BYTE PTR [eax+0x20]
  40abbc:	mov    edi,0x4bfa3a9
  40abc1:	inc    edi
  40abc2:	cli    
  40abc3:	sbb    BYTE PTR [edx+0x4b3d8280],ah
  40abc9:	call   0x5b2c:0xfe0b3aa7
  40abd0:	rol    al,0x20
  40abd3:	sub    bl,BYTE PTR [edx-0x1b5513f8]
  40abd9:	pop    esi
  40abda:	pusha  
  40abdb:	or     BYTE PTR [edx+eiz*2],al
  40abde:	dec    edx
  40abdf:	and    al,0x43
  40abe1:	jmp    0x40ab6f
  40abe3:	push   ecx
  40abe4:	inc    edx
  40abe5:	dec    esp
  40abe6:	and    eax,DWORD PTR [esi]
  40abe8:	sub    al,0x32
  40abea:	mov    cs,WORD PTR [eax-0x500aa622]
  40abf0:	sbb    BYTE PTR [ebx+0x38615872],0x99
  40abf7:	fidivr DWORD PTR [ecx-0x14]
  40abfa:	mov    ch,ah
  40abfc:	push   edx
  40abfd:	mov    BYTE PTR [ebx-0x34],ch
  40ac00:	cmp    bh,BYTE PTR [eax+ebx*8+0x38]
  40ac04:	addr16 sub dh,ah
  40ac07:	xchg   ebx,edx
  40ac09:	mov    ah,0xc4
  40ac0b:	cwde   
  40ac0c:	cmp    ecx,DWORD PTR [ebx+0x3a]
  40ac0f:	imul   BYTE PTR [edx-0x229d5025]
  40ac15:	fcmovu st,st(2)
  40ac17:	das    
  40ac18:	add    eax,0x67aa9c93
  40ac1d:	inc    edi
  40ac1e:	sub    al,0x52
  40ac20:	mov    DWORD PTR [edi],ebp
  40ac22:	push   ebp
  40ac23:	sub    BYTE PTR [edi],ah
  40ac25:	ret    0xcc12
  40ac28:	jnp    0x40abe2
  40ac2a:	lods   al,BYTE PTR ds:[esi]
  40ac2b:	xor    DWORD PTR [eax-0x1e],ecx
  40ac2e:	add    al,bl
  40ac30:	inc    esi
  40ac31:	sti    
  40ac32:	int3   
  40ac33:	pop    ecx
  40ac34:	push   ecx
  40ac35:	cmp    ch,BYTE PTR cs:[esi-0x5]
  40ac39:	sbb    al,0xd0
  40ac3b:	adc    DWORD PTR [edx+0x6bb96289],ebp
  40ac41:	adc    ecx,DWORD PTR es:[ebx-0x57]
  40ac45:	push   ds
  40ac46:	clc    
  40ac47:	inc    esp
  40ac48:	popa   
  40ac49:	shl    dh,cl
  40ac4b:	clc    
  40ac4c:	lods   eax,DWORD PTR ds:[esi]
  40ac4d:	jmp    0x606d5b78
  40ac52:	push   esp
  40ac53:	add    eax,0x52a897d5
  40ac58:	aas    
  40ac59:	add    ebp,DWORD PTR [edx+0x3]
  40ac5c:	mov    al,ds:0x525f48a
  40ac61:	in     eax,dx
  40ac62:	hlt    
  40ac63:	ins    BYTE PTR es:[edi],dx
  40ac64:	xor    eax,0x7b2f7adc
  40ac69:	imul   esi,ebp,0x9
  40ac6c:	xor    bh,ah
  40ac6e:	mov    ecx,0x3c8d63bd
  40ac73:	xchg   ecx,eax
  40ac74:	imul   eax,DWORD PTR [eax],0x4f
  40ac77:	pop    es
  40ac78:	out    dx,eax
  40ac79:	mov    eax,ds:0x5cb5877
  40ac7e:	and    bl,al
  40ac80:	pop    ecx
  40ac81:	pop    eax
  40ac82:	fcmove st,st(6)
  40ac84:	mov    esi,0xe08d925f
  40ac89:	lods   eax,DWORD PTR ds:[esi]
  40ac8a:	call   0x33f6:0x764a3428
  40ac91:	add    al,0x5a
  40ac93:	into   
  40ac94:	inc    ebp
  40ac95:	inc    esp
  40ac96:	jg     0x40ac2e
  40ac98:	dec    esp
  40ac99:	adc    al,0xda
  40ac9b:	shl    edi,0x5
  40ac9e:	jle    0x40ac79
  40aca0:	call   0x50071e8c
  40aca5:	add    ch,BYTE PTR [eax-0x69f98aba]
  40acab:	nop
  40acac:	and    BYTE PTR es:[esi-0x46f7a752],ch
  40acb3:	es (bad) 
  40acb5:	sahf   
  40acb6:	xchg   edi,eax
  40acb7:	sub    BYTE PTR [esi-0xa],cl
  40acba:	dec    ebp
  40acbb:	xor    DWORD PTR [esp+edi*4+0x3b],esi
  40acbf:	rol    BYTE PTR [ecx-0x1a8a3f09],cl
  40acc5:	mov    eax,DWORD PTR [esi]
  40acc7:	sbb    DWORD PTR [ecx-0x21272e83],0x1e
  40acce:	xor    DWORD PTR [ebx-0x1ff1b8c7],esp
  40acd4:	dec    ebx
  40acd5:	cmp    al,0x15
  40acd7:	outs   dx,DWORD PTR ds:[esi]
  40acd8:	loope  0x40ac6c
  40acda:	or     eax,0x6e443cce
  40acdf:	or     edi,DWORD PTR [edx+0x27]
  40ace2:	or     eax,0xca3e1a61
  40ace7:	stos   DWORD PTR es:[edi],eax
  40ace8:	repz xchg esi,eax
  40acea:	into   
  40aceb:	jge    0x40ac7f
  40aced:	sbb    BYTE PTR [edx+0x31],dl
  40acf0:	stos   DWORD PTR es:[edi],eax
  40acf1:	pop    ss
  40acf2:	pop    edx
  40acf3:	add    DWORD PTR [edi+0x249260],0x1a54ea63
  40acfd:	scas   al,BYTE PTR es:[edi]
  40acfe:	call   0x28a2:0x5a8700da
  40ad05:	adc    al,0x19
  40ad07:	cmp    eax,0x6c518207
  40ad0c:	pop    edi
  40ad0d:	cmc    
  40ad0e:	sub    dh,BYTE PTR [ebx+0x2d53537]
  40ad14:	push   esp
  40ad15:	dec    ebp
  40ad16:	push   edx
  40ad17:	fmul   QWORD PTR [eax]
  40ad19:	mov    esp,0x41875acd
  40ad1e:	in     eax,0xb
  40ad20:	mov    ds:0x8b7b7f16,eax
  40ad25:	and    BYTE PTR fs:[eax-0x2c0b7de5],0xcd
  40ad2d:	sahf   
  40ad2e:	das    
  40ad2f:	add    esp,DWORD PTR [edi-0x7f]
  40ad32:	addr16 sub eax,0x6f32e853
  40ad38:	jge    0x40acf8
  40ad3a:	mov    fs,esp
  40ad3c:	ja     0x40adb4
  40ad3e:	sub    bh,BYTE PTR [edx+0xb]
  40ad41:	pop    edi
  40ad42:	out    dx,al
  40ad43:	add    al,0x8
  40ad45:	mov    ebx,DWORD PTR [edx+0x25]
  40ad48:	adc    eax,0x332c7ef6
  40ad4d:	adc    cl,BYTE PTR [edx+0x3b]
  40ad50:	mov    ecx,edx
  40ad52:	jmp    0xf5d9:0x4f32aa9d
  40ad59:	or     esi,DWORD PTR [esi-0xf1dc63c]
  40ad5f:	jo     0x40ad21
  40ad61:	rol    al,0xc0
  40ad64:	rol    al,0xc0
  40ad67:	rol    al,0xc0
  40ad6a:	rol    al,0xc0
  40ad6d:	rol    al,0xc0
  40ad70:	rol    al,0xc0
  40ad73:	rol    al,0xc0
  40ad76:	rol    al,0x75
  40ad79:	ficomp DWORD PTR [ebp+0x7d]
  40ad7c:	xchg   DWORD PTR [eax+0x5e],edx
  40ad7f:	int3   
  40ad80:	clc    
  40ad81:	es mov ?,esi
  40ad84:	lds    eax,FWORD PTR [ebp+0x6c]
  40ad87:	cmp    eax,0xe4c42a11
  40ad8c:	and    ch,BYTE PTR ds:0x192572d0
  40ad92:	adc    al,0x76
  40ad94:	sbb    bl,dl
  40ad96:	jb     0x40adfb
  40ad98:	popf   
  40ad99:	cld    
  40ad9a:	xchg   edx,eax
  40ad9b:	or     BYTE PTR [ebx],ch
  40ad9d:	xchg   esi,eax
  40ad9e:	push   edx
  40ad9f:	pushf  
  40ada0:	and    esp,DWORD PTR [edx]
  40ada2:	pop    ebx
  40ada3:	inc    edx
  40ada4:	push   ebx
  40ada5:	mov    ebx,DWORD PTR [edx-0x2e]
  40ada8:	cld    
  40ada9:	cs scas eax,DWORD PTR es:[edi]
  40adab:	sar    DWORD PTR [esi+0x65f54018],1
  40adb1:	frstor [esi+0x4d89277c]
  40adb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb8:	lss    ebx,FWORD PTR [esi-0x5f]
  40adbc:	xlat   BYTE PTR ds:[ebx]
  40adbd:	jmp    0x40ae39
  40adbf:	call   0xad5:0x419ba7f1
  40adc6:	jae    0x40ada1
  40adc8:	xor    BYTE PTR [ebx-0x37826e3b],ch
  40adce:	mov    dh,dh
  40add0:	mov    DWORD PTR [esi+eax*2-0x20],ebp
  40add4:	cmp    ebx,DWORD PTR [edx+0x54]
  40add7:	inc    esi
  40add8:	lods   eax,DWORD PTR ds:[esi]
  40add9:	sbb    BYTE PTR [edx+0x7c],bh
  40addc:	adc    DWORD PTR [eax+0x63],eax
  40addf:	fild   DWORD PTR [ecx]
  40ade1:	pop    ss
  40ade2:	cmp    ebp,ebp
  40ade4:	push   edx
  40ade5:	test   al,0x8b
  40ade7:	(bad)  
  40ade8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade9:	(bad)  
  40adea:	aas    
  40adeb:	scas   al,BYTE PTR es:[edi]
  40adec:	push   esp
  40aded:	mov    edx,0x11a93309
  40adf2:	and    DWORD PTR [edx],ecx
  40adf4:	inc    ebx
  40adf5:	mov    edx,0x950744aa
  40adfa:	add    eax,0x31dea44c
  40adff:	and    bl,BYTE PTR [ecx-0x4631ec3f]
  40ae05:	cmp    eax,eax
  40ae07:	ror    DWORD PTR [ecx+0x62],cl
  40ae0a:	mov    WORD PTR [esi],cs
  40ae0c:	dec    esi
  40ae0d:	adc    BYTE PTR [esi-0x31],ah
  40ae10:	ds inc ebx
  40ae12:	push   esi
  40ae13:	dec    ebx
  40ae14:	jecxz  0x40ae48
  40ae16:	adc    bh,al
  40ae18:	jae    0x40ae93
  40ae1a:	cmp    eax,edx
  40ae1c:	mov    edx,0xed93fa4c
  40ae21:	sub    DWORD PTR [esi+0x5a93f6fc],edx
  40ae27:	sbb    al,0x3d
  40ae29:	or     eax,0x4804de7f
  40ae2e:	mov    ?,ecx
  40ae30:	js     0x40ae3b
  40ae32:	jp     0x40ade1
  40ae34:	mov    esi,0x611d6bcc
  40ae39:	(bad)  
  40ae3a:	jmp    0x40ae7b
  40ae3c:	jle    0x40ae8e
  40ae3e:	xchg   esi,eax
  40ae3f:	xlat   BYTE PTR ds:[ebx]
  40ae40:	outs   dx,DWORD PTR ds:[esi]
  40ae41:	int3   
  40ae42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae43:	lds    edx,FWORD PTR [eax+0x366a846a]
  40ae49:	daa    
  40ae4a:	and    BYTE PTR [eax-0x56],0x69
  40ae4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4f:	sar    DWORD PTR [ecx+0x9137335],cl
  40ae55:	inc    ebp
  40ae56:	jb     0x40adfb
  40ae58:	or     esp,ebx
  40ae5a:	push   edi
  40ae5b:	jecxz  0x40ae17
  40ae5d:	add    bl,bh
  40ae5f:	das    
  40ae60:	into   
  40ae61:	fnstsw WORD PTR es:[edx+ebp*2-0x16]
  40ae66:	sbb    ecx,DWORD PTR [ebx-0x2f]
  40ae69:	adc    al,0xfa
  40ae6b:	ins    BYTE PTR es:[edi],dx
  40ae6c:	inc    edi
  40ae6d:	cmp    BYTE PTR [edi],0x7b
  40ae70:	stc    
  40ae71:	test   DWORD PTR [edx-0x124ded7c],edx
  40ae77:	pop    ds
  40ae78:	and    BYTE PTR [ebx+0x38],dl
  40ae7b:	inc    eax
  40ae7c:	xor    BYTE PTR [ecx+0x5a5d65a4],0x76
  40ae83:	imul   esi,DWORD PTR ds:0xa6509ff,0x50e6b334
  40ae8d:	sbb    eax,0xa9433752
  40ae92:	pushf  
  40ae93:	pop    eax
  40ae94:	dec    edx
  40ae95:	ja     0x40ae35
  40ae97:	retf   
  40ae98:	hlt    
  40ae99:	dec    edx
  40ae9a:	push   cs
  40ae9b:	(bad)  
  40ae9d:	or     eax,0x447319f0
  40aea2:	push   cs
  40aea3:	mov    esp,0x60a1f30
  40aea8:	sub    al,0x68
  40aeaa:	test   al,0xfa
  40aeac:	dec    edx
  40aead:	sbb    esp,DWORD PTR [edx]
  40aeaf:	xor    esi,ebx
  40aeb1:	int    0xf4
  40aeb3:	popa   
  40aeb4:	ds mov dl,0xfb
  40aeb7:	enter  0x9dc,0x8c
  40aebb:	inc    ebp
  40aebc:	pop    esp
  40aebd:	stos   DWORD PTR es:[edi],eax
  40aebe:	sub    al,0x29
  40aec0:	xor    BYTE PTR [ebx],bh
  40aec2:	(bad)  
  40aec3:	loopne 0x40aed8
  40aec5:	repz cwde 
  40aec7:	or     dl,BYTE PTR [ecx]
  40aec9:	cld    
  40aeca:	inc    esi
  40aecb:	dec    DWORD PTR [ebp-0x4421a0f0]
  40aed1:	push   edx
  40aed2:	pop    ecx
  40aed3:	not    BYTE PTR [ebp+0x1bafd8b6]
  40aed9:	xchg   BYTE PTR [esi],cl
  40aedb:	clc    
  40aedc:	cwde   
  40aedd:	bound  eax,QWORD PTR [esi]
  40aedf:	std    
  40aee0:	xchg   ebx,eax
  40aee1:	fsubr  QWORD PTR [esi+edi*2]
  40aee4:	xor    DWORD PTR [ebx-0x33ae041d],0x9befc148
  40aeee:	add    ebp,DWORD PTR [esi+0x5693db7c]
  40aef4:	and    al,0x65
  40aef6:	sahf   
  40aef7:	inc    esp
  40aef8:	call   0xe360:0xf0509db0
  40aeff:	dec    ebp
  40af00:	adc    al,0x4e
  40af02:	dec    esp
  40af03:	dec    esp
  40af04:	jle    0x40af3e
  40af06:	bound  esp,QWORD PTR [edx+0x488b001b]
  40af0c:	sub    ecx,DWORD PTR fs:[esi+0x1d]
  40af10:	lods   al,BYTE PTR ds:[esi]
  40af11:	mov    ebp,0x3806bd8c
  40af16:	and    ch,BYTE PTR [eax]
  40af18:	stc    
  40af19:	jmp    0x40af2e
  40af1b:	mov    DWORD PTR [ebx],eax
  40af1d:	cli    
  40af1e:	adc    eax,0x3513f8c8
  40af24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af25:	push   esi
  40af26:	rol    DWORD PTR [edx],1
  40af28:	or     al,0x52
  40af2a:	ja     0x40af48
  40af2c:	xchg   DWORD PTR [eax-0x4785d6e1],esi
  40af32:	sbb    eax,0xd3024130
  40af37:	sahf   
  40af38:	xor    al,0x88
  40af3a:	pop    ebx
  40af3b:	bound  edx,QWORD PTR [edx+0x10]
  40af3e:	jmp    0x9ae0:0x22fe22d8
  40af45:	lock sub ebp,DWORD PTR [esi-0x74f359f]
  40af4c:	xor    dl,BYTE PTR [eax+0x4de198b8]
  40af52:	fs jle 0x40aeea
  40af55:	sbb    bh,BYTE PTR [edi]
  40af57:	ror    DWORD PTR [esi],1
  40af59:	lods   al,BYTE PTR es:[esi]
  40af5b:	rcl    edx,cl
  40af5d:	out    dx,eax
  40af5e:	stc    
  40af5f:	icebp  
  40af60:	clc    
  40af61:	pop    edx
  40af62:	enter  0x335a,0xe
  40af66:	push   edx
  40af67:	loope  0x40af9d
  40af69:	xor    eax,0xdcf7a91f
  40af6e:	(bad)  
  40af70:	add    eax,0x50cc1c8
  40af75:	js     0x40afcf
  40af77:	lahf   
  40af78:	pop    eax
  40af79:	clc    
  40af7a:	cli    
  40af7b:	or     al,0x17
  40af7d:	push   esi
  40af7e:	mov    ebx,0x8a3ef971
  40af83:	jae    0x40aff5
  40af85:	fistp  DWORD PTR [ecx-0x62e31b51]
  40af8b:	neg    BYTE PTR [ebp+0x2]
  40af8e:	test   DWORD PTR ds:0x7b6c87e0,eax
  40af94:	dec    edx
  40af95:	cmp    edi,DWORD PTR [edx]
  40af97:	pop    edx
  40af98:	mov    eax,ds:0xa22d93a8
  40af9d:	pop    edi
  40af9e:	(bad)  
  40af9f:	xchg   DWORD PTR [ecx+0x57e7b863],edi
  40afa5:	or     ebx,eax
  40afa7:	out    0x9a,al
  40afa9:	mov    ah,0xa0
  40afab:	sbb    DWORD PTR [esi+0x2f6c2669],0x7ab854e2
  40afb5:	or     esp,ebp
  40afb7:	in     eax,dx
  40afb8:	cwde   
  40afb9:	push   edi
  40afba:	dec    ebx
  40afbb:	or     al,0x43
  40afbd:	scas   al,BYTE PTR es:[edi]
  40afbe:	call   FWORD PTR [edi]
  40afc0:	xor    al,0x5a
  40afc2:	push   esp
  40afc3:	iret   
  40afc4:	(bad)  
  40afc6:	mov    edi,0x456c49a
  40afcb:	mov    esp,DWORD PTR [ebp-0x5b33adb5]
  40afd1:	mov    WORD PTR [ebx+0x5a],ds
  40afd4:	push   eax
  40afd5:	ret    0x4648
  40afd8:	xchg   ecx,eax
  40afd9:	leave  
  40afda:	test   BYTE PTR [edi+edx*2],0x72
  40afde:	xchg   ebx,eax
  40afdf:	mov    bl,0x7a
  40afe1:	(bad)  
  40afe2:	cli    
  40afe3:	sub    ebx,0xc90b1c56
  40afe9:	not    DWORD PTR [ebp-0x4534178]
  40afef:	ins    DWORD PTR es:[edi],dx
  40aff0:	test   edx,ebx
  40aff2:	imul   eax,DWORD PTR [esi+0x789a1805],0x3a97b645
  40affc:	xor    edi,edx
  40affe:	les    esi,FWORD PTR [eax+ebp*8+0x66]
  40b002:	aas    
  40b003:	dec    esp
  40b004:	sbb    al,0x33
  40b006:	xchg   BYTE PTR [ebx-0x68],ah
  40b009:	jmp    DWORD PTR [edi+0x27291591]
  40b00f:	dec    ebp
  40b010:	sbb    BYTE PTR [ebx-0x70],dh
  40b013:	bound  ebx,QWORD PTR [esi+0x5f]
  40b016:	addr16 pop ebx
  40b018:	mov    ebx,0xe8bc5e2e
  40b01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b01e:	cmc    
  40b01f:	adc    edx,DWORD PTR [ebx]
  40b021:	mov    dh,0x4b
  40b023:	sub    eax,0x2af2de90
  40b028:	xlat   BYTE PTR ds:[ebx]
  40b029:	mov    ds,WORD PTR [ebp+edx*4-0x39eb0596]
  40b030:	jns    0x40b0ae
  40b032:	ficom  WORD PTR [ebx+edx*2]
  40b035:	cwde   
  40b036:	mov    ebx,0xe3329f29
  40b03b:	and    ebp,edx
  40b03d:	push   cs
  40b03e:	push   edx
  40b03f:	fs or  dh,BYTE PTR cs:[eax]
  40b043:	mov    ds,WORD PTR [ecx+0x4c]
  40b046:	xor    ah,ah
  40b048:	xchg   ebp,eax
  40b049:	ficom  WORD PTR [edi+ecx*8]
  40b04c:	push   ebp
  40b04d:	retf   0xcfef
  40b050:	pushf  
  40b051:	pop    ecx
  40b052:	or     BYTE PTR [ebx],dl
  40b054:	enter  0x9bbb,0xab
  40b058:	jae    0x40b034
  40b05a:	leave  
  40b05b:	bound  edx,QWORD PTR [eax]
  40b05d:	mov    eax,0xc7f0edd
  40b062:	xlat   BYTE PTR ds:[ebx]
  40b063:	push   0x1
  40b065:	sbb    ah,BYTE PTR [ebx]
  40b067:	call   0x1a54:0x4a507a09
  40b06e:	bound  esp,QWORD PTR [edi+0x32]
  40b071:	sbb    ah,ch
  40b073:	ror    DWORD PTR [ecx+0x31],0x1c
  40b077:	xor    DWORD PTR [esi-0x31],0x2e
  40b07b:	push   ecx
  40b07c:	in     al,0xa
  40b07e:	call   0x15d8:0x135f63ef
  40b085:	push   ds
  40b086:	dec    ecx
  40b087:	xor    eax,DWORD PTR [esi]
  40b089:	mov    ah,0xd9
  40b08b:	ror    DWORD PTR [edi],0x81
  40b08e:	iret   
  40b08f:	jne    0x40b036
  40b091:	rol    DWORD PTR [edi+0x7a4e867d],0x33
  40b098:	jns    0x40b05b
  40b09a:	push   ebp
  40b09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b09c:	ins    BYTE PTR es:[edi],dx
  40b09d:	sub    al,0x8f
  40b09f:	imul   edi,DWORD PTR [ecx+0x3e],0x76
  40b0a3:	test   DWORD PTR [esi],0xc6aca5da
  40b0a9:	lds    ebp,FWORD PTR [edx+0x29a38ffc]
  40b0af:	das    
  40b0b0:	mov    ebp,0xc9d934cc
  40b0b5:	pop    ebx
  40b0b6:	fisubr WORD PTR [edi]
  40b0b8:	or     BYTE PTR [ebx-0x7e],bh
  40b0bb:	sbb    DWORD PTR [edx+0x1b307a30],eax
  40b0c1:	into   
  40b0c2:	shl    BYTE PTR [eax-0x72],cl
  40b0c5:	or     al,0x76
  40b0c7:	mov    ebx,0x4fd53ae2
  40b0cc:	aad    0x77
  40b0ce:	sub    al,0x23
  40b0d0:	gs and esp,ecx
  40b0d3:	and    al,0x82
  40b0d5:	sti    
  40b0d6:	lods   al,BYTE PTR ds:[esi]
  40b0d7:	mov    ah,0x19
  40b0d9:	jnp    0x40b08d
  40b0db:	adc    BYTE PTR [edx+0x14],dh
  40b0de:	push   0x56f7e912
  40b0e3:	cmp    al,BYTE PTR [ecx+ebx*2]
  40b0e6:	xchg   edi,eax
  40b0e7:	add    esp,DWORD PTR [edx+0x61]
  40b0ea:	xchg   esi,eax
  40b0eb:	push   ecx
  40b0ec:	mov    cl,BYTE PTR [esp+ebx*1]
  40b0ef:	arpl   WORD PTR [ecx-0x4fa3e56e],di
  40b0f5:	adc    esp,DWORD PTR [esi-0x47]
  40b0f8:	dec    ecx
  40b0f9:	shl    DWORD PTR [edi+0x748c9010],1
  40b0ff:	cmp    bh,BYTE PTR [edx-0x1df98538]
  40b105:	imul   esi,DWORD PTR [edi],0x53
  40b108:	jo     0x40b0e4
  40b10a:	mov    bh,0x67
  40b10c:	addr16 push esp
  40b10e:	pusha  
  40b10f:	mov    eax,ds:0xe4888ee6
  40b114:	fisttp QWORD PTR [esi+ebx*4+0x2f]
  40b118:	jb     0x40b172
  40b11a:	mov    edx,0x3b8066d5
  40b11f:	into   
  40b120:	outs   dx,DWORD PTR ds:[esi]
  40b121:	aas    
  40b122:	jb     0x40b15c
  40b124:	and    al,BYTE PTR ds:0xb4046e9e
  40b12a:	xor    DWORD PTR [eax-0x75],esi
  40b12d:	add    edi,edx
  40b12f:	jge    0x40b162
  40b131:	lods   eax,DWORD PTR ds:[esi]
  40b132:	retf   0xd4fe
  40b135:	arpl   WORD PTR [esi-0x2e51e782],cx
  40b13b:	or     eax,0xf785e204
  40b140:	rcl    DWORD PTR [esi+eax*2-0x1d],1
  40b144:	cmp    eax,0x65e3f93f
  40b149:	hlt    
  40b14a:	popa   
  40b14b:	std    
  40b14c:	jbe    0x40b1a3
  40b14e:	add    DWORD PTR [esi+0x65],0xffffffb2
  40b152:	jne    0x40b168
  40b154:	pop    eax
  40b155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b156:	mov    edx,esp
  40b158:	jl     0x40b17f
  40b15a:	pop    edi
  40b15b:	sbb    bh,BYTE PTR [edi+0x7a67aaac]
  40b161:	stos   BYTE PTR es:[edi],al
  40b162:	mov    fs,esi
  40b164:	dec    edi
  40b165:	mov    ah,BYTE PTR [esi-0x779f622b]
  40b16b:	cwde   
  40b16c:	mov    ds:0xf3679d42,al
  40b171:	into   
  40b172:	mov    dh,0x33
  40b174:	adc    BYTE PTR [edi+0x4c1fa59f],bl
  40b17a:	mov    ds:0xcccb8543,al
  40b17f:	das    
  40b180:	inc    edx
  40b181:	or     BYTE PTR [eax+edx*1-0x44005ec],ch
  40b188:	ins    BYTE PTR es:[edi],dx
  40b189:	bound  ebp,QWORD PTR [esi]
  40b18b:	inc    eax
  40b18c:	mov    dl,0x6
  40b18e:	add    DWORD PTR [ebx+0x79],0x4852ab98
  40b195:	dec    edx
  40b196:	dec    esi
  40b197:	and    DWORD PTR ss:[esi-0x20],ecx
  40b19b:	das    
  40b19c:	add    al,0x12
  40b19e:	lods   al,BYTE PTR ds:[esi]
  40b19f:	push   cs
  40b1a0:	or     DWORD PTR [edx],0x32
  40b1a3:	add    DWORD PTR [edx+0x4c65da70],eax
  40b1a9:	mov    esp,edi
  40b1ab:	adc    eax,0xab30743
  40b1b0:	cmp    edx,DWORD PTR [esi]
  40b1b2:	fild   DWORD PTR ds:0x6b2cfb97
  40b1b8:	lods   eax,DWORD PTR ds:[esi]
  40b1b9:	mov    ds:0x68055114,al
  40b1be:	jle    0x40b1e6
  40b1c0:	mov    ds:0x9f49a07a,al
  40b1c5:	sbb    al,0xb0
  40b1c7:	cmp    BYTE PTR [esi+0x3478c189],cl
  40b1cd:	xchg   edx,eax
  40b1ce:	leave  
  40b1cf:	mov    ecx,0x83998ed5
  40b1d4:	(bad)  
  40b1d5:	xor    eax,0xd8ae1c95
  40b1da:	inc    esi
  40b1db:	rcr    DWORD PTR [edx-0x66],cl
  40b1de:	mov    ds:0xd4b41163,eax
  40b1e3:	inc    ecx
  40b1e4:	fdivrp st(2),st
  40b1e6:	xor    DWORD PTR [edx-0x5d],eax
  40b1e9:	leave  
  40b1ea:	aam    0x84
  40b1ec:	ja     0x40b178
  40b1ee:	xor    BYTE PTR gs:[ebp+0x18c60ddd],ch
  40b1f5:	and    al,0x6a
  40b1f7:	lods   al,BYTE PTR ds:[esi]
  40b1f8:	and    dh,BYTE PTR [ebp+0x34]
  40b1fb:	ins    BYTE PTR es:[edi],dx
  40b1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1fd:	stos   BYTE PTR es:[edi],al
  40b1fe:	sbb    BYTE PTR [ebx],bh
  40b200:	jo     0x40b259
  40b202:	popf   
  40b203:	gs repz push esp
  40b206:	mov    al,0x78
  40b208:	push   ecx
  40b209:	int3   
  40b20a:	pop    DWORD PTR [edx]
  40b20c:	inc    esp
  40b20d:	pusha  
  40b20e:	icebp  
  40b20f:	xchg   esi,eax
  40b210:	retf   0x59bd
  40b213:	cmp    eax,0x334d7b1e
  40b218:	arpl   dx,dx
  40b21a:	ja     0x40b211
  40b21c:	sbb    al,0x5a
  40b21e:	pop    esi
  40b21f:	xlat   BYTE PTR ds:[ebx]
  40b220:	out    dx,eax
  40b221:	std    
  40b222:	jo     0x40b285
  40b224:	xchg   edx,eax
  40b225:	adc    ebx,DWORD PTR [edx-0x29]
  40b228:	inc    esi
  40b229:	not    DWORD PTR [esi+0x2e4a4068]
  40b22f:	ss push 0x2fb83cfc
  40b235:	repnz mov ebx,0x940dc7d3
  40b23b:	inc    eax
  40b23c:	ret    0xf87a
  40b23f:	dec    ebp
  40b240:	inc    ebp
  40b241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b242:	xchg   ecx,eax
  40b243:	dec    edx
  40b244:	pop    esi
  40b245:	sbb    ecx,ebx
  40b247:	sar    BYTE PTR [eax+0x3c3fbcab],cl
  40b24d:	outs   dx,BYTE PTR ds:[esi]
  40b24e:	jmp    0xdf59:0xc83a7841
  40b255:	test   DWORD PTR [ebp+0x498061e8],ebp
  40b25b:	dec    eax
  40b25c:	ret    0x6992
  40b25f:	in     al,dx
  40b260:	mov    esi,0x4570870
  40b265:	inc    ebx
  40b266:	das    
  40b267:	sbb    eax,0x81adcdc
  40b26c:	inc    ecx
  40b26d:	loop   0x40b263
  40b26f:	shl    eax,cl
  40b271:	cmp    BYTE PTR [edx],cl
  40b273:	cmp    bl,BYTE PTR [ecx-0x7d]
  40b276:	jmp    0x652f:0x762aaa3f
  40b27d:	loope  0x40b22a
  40b27f:	push   0x6d
  40b281:	std    
  40b282:	dec    ebp
  40b283:	xchg   ecx,eax
  40b284:	jle    0x40b29b
  40b286:	lods   eax,DWORD PTR ds:[esi]
  40b287:	adc    bh,BYTE PTR [ebx+0x5e]
  40b28a:	cli    
  40b28b:	jb     0x40b2af
  40b28d:	(bad)  
  40b28f:	push   0xc896d3e6
  40b294:	test   eax,0x1f431c33
  40b299:	shl    ch,0x2f
  40b29c:	enter  0x38df,0x9c
  40b2a0:	inc    ebx
  40b2a1:	xlat   BYTE PTR ds:[ebx]
  40b2a2:	lods   al,BYTE PTR ds:[esi]
  40b2a3:	jmp    0x98f7:0x2c30a98e
  40b2aa:	mov    BYTE PTR [ecx-0x22],bl
  40b2ad:	adc    BYTE PTR [ecx-0x25d9108c],bh
  40b2b3:	cld    
  40b2b4:	xor    al,0x42
  40b2b6:	mov    eax,0xcfe78134
  40b2bb:	jne    0x40b2b8
  40b2bd:	(bad)
  40b2c1:	jno    0x40b339
  40b2c3:	sbb    al,0xad
  40b2c5:	scas   eax,DWORD PTR es:[edi]
  40b2c6:	sbb    ah,BYTE PTR [edx+0x2a]
  40b2c9:	dec    eax
  40b2ca:	jb     0x40b2b5
  40b2cc:	int3   
  40b2cd:	(bad)  
  40b2ce:	cs ds fwait
  40b2d1:	iret   
  40b2d2:	mov    ds,WORD PTR [esp+eiz*4+0x52]
  40b2d6:	repz pop ebx
  40b2d8:	inc    ebx
  40b2d9:	sub    DWORD PTR [esi+eax*1+0xf],esp
  40b2dd:	inc    esi
  40b2de:	outs   dx,DWORD PTR ds:[esi]
  40b2df:	ins    DWORD PTR es:[edi],dx
  40b2e0:	cmp    DWORD PTR [eax],ebp
  40b2e2:	fwait
  40b2e3:	push   ecx
  40b2e4:	jno    0x40b2fe
  40b2e6:	mov    ecx,0xe500f07d
  40b2eb:	sti    
  40b2ec:	sbb    bl,cl
  40b2ee:	mov    ch,0x91
  40b2f0:	adc    eax,0x3ff95bd5
  40b2f5:	fadd   QWORD PTR [edx-0x15]
  40b2f8:	add    al,0x2a
  40b2fa:	mov    edx,0xbfff41e3
  40b2ff:	lahf   
  40b300:	sbb    esi,DWORD PTR [esi+0x3912b048]
  40b306:	loop   0x40b2e8
  40b308:	push   edi
  40b309:	ret    0xff97
  40b30c:	mov    esi,0x1d006ab4
  40b311:	adc    eax,0x961b97e8
  40b316:	jecxz  0x40b31b
  40b318:	scas   eax,DWORD PTR es:[edi]
  40b319:	(bad)  [edi-0x9]
  40b31c:	xlat   BYTE PTR ds:[ebx]
  40b31d:	and    DWORD PTR [ebx+0xa20c5e],ebp
  40b323:	cmp    dh,ch
  40b325:	stc    
  40b326:	xor    esp,esp
  40b328:	cdq    
  40b329:	cli    
  40b32a:	in     al,dx
  40b32b:	out    0x5c,al
  40b32d:	push   0xfffffff8
  40b32f:	push   0xfe7a1742
  40b334:	into   
  40b335:	hlt    
  40b336:	mov    ebp,0xebe54159
  40b33b:	lock jo 0x40b346
  40b33e:	lods   al,BYTE PTR ds:[esi]
  40b33f:	mov    ch,0xab
  40b341:	fist   WORD PTR [esp+ecx*1]
  40b344:	cmp    BYTE PTR es:[esi],bh
  40b347:	sub    cl,al
  40b349:	arpl   di,cx
  40b34b:	xor    eax,edx
  40b34d:	ficom  DWORD PTR [ebp-0x12e391e3]
  40b353:	or     bl,al
  40b355:	ret    0xf590
  40b358:	jno    0x40b3d6
  40b35a:	pop    esi
  40b35b:	outs   dx,BYTE PTR ds:[esi]
  40b35c:	fisttp WORD PTR [esi]
  40b35e:	icebp  
  40b35f:	xor    BYTE PTR es:[eax-0x25d5385b],bl
  40b366:	mov    DWORD PTR [eax+0x7d],esi
  40b369:	sub    dl,bl
  40b36b:	mov    cl,0x74
  40b36d:	dec    ebx
  40b36e:	pop    esi
  40b36f:	or     al,0x11
  40b371:	aaa    
  40b372:	rcr    BYTE PTR [esi+0x3c],cl
  40b375:	inc    esi
  40b376:	shl    DWORD PTR [ebx-0x45],cl
  40b379:	loop   0x40b397
  40b37b:	mov    ch,0xaa
  40b37d:	mov    esp,0xd740621a
  40b382:	xchg   ebp,eax
  40b383:	arpl   WORD PTR [edx],dx
  40b385:	dec    eax
  40b386:	rol    DWORD PTR [ecx],0xf8
  40b389:	xchg   ebx,eax
  40b38a:	loop   0x40b30d
  40b38c:	jl     0x40b378
  40b38e:	or     ch,bh
  40b390:	jge    0x40b3a4
  40b392:	mov    eax,?
  40b394:	les    ebx,FWORD PTR [ebx+0x46]
  40b397:	cmp    eax,0x5dd60403
  40b39c:	push   0x18
  40b39e:	dec    ebp
  40b39f:	(bad)  
  40b3a0:	stc    
  40b3a1:	lea    ebx,[ebp-0x1c0c41ff]
  40b3a7:	and    eax,0xd4260b
  40b3ac:	pushf  
  40b3ad:	enter  0x4b9f,0x68
  40b3b1:	jmp    0x5db4:0x21a4f5cf
  40b3b8:	add    eax,0x66e8d857
  40b3bd:	cmp    esp,ecx
  40b3bf:	stos   DWORD PTR es:[edi],eax
  40b3c0:	xor    eax,0x50036862
  40b3c5:	sbb    cl,dh
  40b3c7:	xor    eax,0x8cda3998
  40b3cc:	ins    BYTE PTR es:[edi],dx
  40b3cd:	pop    edx
  40b3ce:	push   edx
  40b3cf:	dec    edx
  40b3d0:	loopne 0x40b41d
  40b3d2:	ja     0x40b381
  40b3d4:	hlt    
  40b3d5:	and    eax,0x157df87b
  40b3da:	mov    ch,ch
  40b3dc:	je     0x40b3ca
  40b3de:	dec    edx
  40b3df:	scas   al,BYTE PTR es:[edi]
  40b3e0:	daa    
  40b3e1:	pop    ebp
  40b3e2:	xchg   edx,eax
  40b3e3:	lea    esp,[eax+0x5dac3754]
  40b3e9:	xchg   ecx,eax
  40b3ea:	out    dx,al
  40b3eb:	and    eax,0x939a1d7f
  40b3f0:	nop
  40b3f1:	call   0x2ea8:0xc672c99c
  40b3f8:	loope  0x40b3da
  40b3fa:	neg    BYTE PTR [eax+ebp*1+0x4ccf214a]
  40b401:	outs   dx,BYTE PTR ds:[esi]
  40b402:	push   0xffffffdc
  40b404:	ss pop esp
  40b406:	xor    bl,BYTE PTR [edi+0x5392976d]
  40b40c:	inc    esp
  40b40d:	(bad)  
  40b40e:	pop    esi
  40b40f:	jle    0x40b41c
  40b411:	test   al,0x8e
  40b413:	dec    edx
  40b414:	jle    0x40b460
  40b416:	stos   BYTE PTR es:[edi],al
  40b417:	mov    edi,0x6293188f
  40b41c:	cmp    bh,BYTE PTR [ebp+0x32b037f0]
  40b422:	xchg   BYTE PTR [ebp+0x7f9a1ad4],al
  40b428:	lock sbb eax,0x3dbe1d1f
  40b42e:	jne    0x40b3ee
  40b430:	inc    esp
  40b431:	mov    bl,0xbb
  40b433:	cmp    al,0x14
  40b435:	icebp  
  40b436:	xchg   ecx,eax
  40b437:	mov    ds:0x48d6b07d,eax
  40b43c:	inc    esi
  40b43d:	adc    eax,0xf6e14832
  40b442:	mov    esp,0x8281d01b
  40b447:	cdq    
  40b448:	mov    ds,WORD PTR [ebx-0x721b83b5]
  40b44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44f:	psubb  mm2,QWORD PTR [ecx-0x3c]
  40b453:	sbb    eax,DWORD PTR ds:0xc1a92e2a
  40b459:	retf   0xceb6
  40b45c:	cmp    al,0x1f
  40b45e:	mov    ch,0x77
  40b460:	dec    ecx
  40b461:	rol    BYTE PTR [esi-0x42e06d77],0xf8
  40b468:	cld    
  40b469:	cdq    
  40b46a:	jge    0x40b4a1
  40b46c:	test   al,0x0
  40b46e:	lds    ebp,FWORD PTR [eax]
  40b470:	not    BYTE PTR [eax+edi*4-0x40]
  40b474:	pop    ds
  40b475:	sbb    esp,DWORD PTR [esi-0xbcec6fc]
  40b47b:	arpl   WORD PTR [ecx+0x48],cx
  40b47e:	jmp    0xab37a8d0
  40b483:	pusha  
  40b484:	dec    edx
  40b485:	inc    ebp
  40b486:	cli    
  40b487:	lods   al,BYTE PTR ds:[esi]
  40b488:	jge    0x40b41e
  40b48a:	jbe    0x40b428
  40b48c:	pop    ebp
  40b48d:	fcmove st,st(2)
  40b48f:	sbb    edi,DWORD PTR gs:[ebx+0xb1aaa37]
  40b496:	retf   
  40b497:	jmp    0x5a013e0e
  40b49c:	pop    esp
  40b49d:	add    eax,0x647808e9
  40b4a2:	(bad)  
  40b4a3:	js     0x40b4ac
  40b4a5:	xchg   edx,eax
  40b4a6:	adc    esi,DWORD PTR [edx+ecx*8+0x3d]
  40b4aa:	(bad)  
  40b4ab:	fisub  DWORD PTR [edi+0x10b0c5c3]
  40b4b1:	int3   
  40b4b2:	sbb    al,0x76
  40b4b4:	add    DWORD PTR [edx+0x21],esp
  40b4b7:	not    DWORD PTR [esi+0x558ac747]
  40b4bd:	cmc    
  40b4be:	cld    
  40b4bf:	and    edi,eax
  40b4c1:	xchg   ecx,eax
  40b4c2:	mov    esp,0xfcf9f1db
  40b4c7:	adc    al,0x86
  40b4c9:	leave  
  40b4ca:	stos   DWORD PTR es:[edi],eax
  40b4cb:	sbb    ebx,esp
  40b4cd:	inc    eax
  40b4ce:	jmp    0xc79a:0x7d6b990c
  40b4d5:	cmp    DWORD PTR [esi+0x71],0xffffff98
  40b4d9:	jne    0x40b515
  40b4db:	sbb    eax,0xc20a1517
  40b4e0:	mov    ebx,0xc817c56c
  40b4e5:	mov    ds,WORD PTR [ecx-0x70a586cc]
  40b4eb:	jmp    0x840f:0xc3831ab1
  40b4f2:	out    dx,al
  40b4f3:	sub    DWORD PTR ds:0xc42077eb,esi
  40b4f9:	scas   eax,DWORD PTR es:[edi]
  40b4fa:	push   edx
  40b4fb:	mov    ebp,0x99adce80
  40b500:	jne    0x40b574
  40b502:	xchg   edx,eax
  40b503:	sahf   
  40b504:	nop
  40b505:	adc    al,0xb2
  40b507:	addr16 loope 0x40b56d
  40b50a:	rol    BYTE PTR [eax+0x6427317e],1
  40b510:	dec    eax
  40b511:	fucomip st,st(2)
  40b513:	sub    eax,0x6ccc96d
  40b518:	cli    
  40b519:	call   0xc5ea:0x6d72881b
  40b520:	dec    edx
  40b521:	cld    
  40b522:	es xchg esi,eax
  40b524:	push   ebp
  40b525:	inc    edx
  40b526:	scas   al,BYTE PTR es:[edi]
  40b527:	pusha  
  40b528:	cdq    
  40b529:	xor    dh,bh
  40b52b:	xor    DWORD PTR [edi+edx*2+0x46],edx
  40b52f:	push   edx
  40b530:	pop    ss
  40b531:	mov    ah,0xec
  40b533:	sar    DWORD PTR [ecx+0x2],1
  40b536:	(bad)  
  40b537:	jmp    0x2907:0x468018e7
  40b53e:	fsubr  DWORD PTR [ecx]
  40b540:	popf   
  40b541:	les    eax,FWORD PTR [esi-0xf7f8f08]
  40b547:	sahf   
  40b548:	rol    al,0xc0
  40b54b:	rol    al,0xc0
  40b54e:	rol    al,0xc0
  40b551:	rol    al,0xc0
  40b554:	rol    al,0xc0
  40b557:	rol    al,0xc0
  40b55a:	rol    al,0xc0
  40b55d:	rol    al,0xc0
  40b560:	adc    bh,bl
  40b562:	fistp  QWORD PTR [eax+0x30]
  40b565:	xor    ax,0xcb44
  40b569:	imul   esi,DWORD PTR [esi-0x44],0xffffffae
  40b56d:	jbe    0x40b588
  40b56f:	cmp    DWORD PTR [edx],esi
  40b571:	cld    
  40b572:	xor    BYTE PTR [ecx-0x6e],al
  40b575:	cmp    DWORD PTR [eax-0x63d59932],0xffffff80
  40b57c:	inc    esi
  40b57d:	es in  eax,dx
  40b57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b580:	aaa    
  40b581:	pop    ebp
  40b582:	xchg   edx,eax
  40b583:	not    BYTE PTR [ebp+0x78]
  40b586:	jle    0x40b57e
  40b588:	pop    es
  40b589:	xchg   esp,eax
  40b58a:	mov    WORD PTR [eax-0x7b],es
  40b58d:	sar    esi,0x54
  40b590:	jne    0x40b5c2
  40b592:	jne    0x40b5a8
  40b594:	add    BYTE PTR [edx],0x2b
  40b597:	pop    es
  40b598:	sar    BYTE PTR [eax+esi*4],1
  40b59b:	cmp    DWORD PTR [ecx+ecx*8],ebp
  40b59e:	xor    edi,eax
  40b5a0:	sbb    BYTE PTR [esi],bl
  40b5a2:	or     BYTE PTR ds:0x44dd02d2,0x99
  40b5a9:	pop    edx
  40b5aa:	(bad)  
  40b5ac:	pop    edx
  40b5ad:	dec    edx
  40b5ae:	sahf   
  40b5af:	loope  0x40b5a9
  40b5b1:	dec    esi
  40b5b2:	xlat   BYTE PTR ds:[ebx]
  40b5b3:	cmp    al,BYTE PTR [edx+0x3a]
  40b5b6:	xor    BYTE PTR [ebp-0x9],dh
  40b5b9:	jo     0x40b59a
  40b5bb:	pop    es
  40b5bc:	cli    
  40b5bd:	and    esp,DWORD PTR [eax]
  40b5bf:	imul   ebp,esp,0x55
  40b5c2:	sbb    eax,0xbe2aa90
  40b5c7:	jle    0x40b565
  40b5c9:	xor    BYTE PTR [edi],bl
  40b5cb:	clc    
  40b5cc:	xchg   esp,esi
  40b5ce:	cmp    ebp,ebp
  40b5d0:	popa   
  40b5d1:	rcl    DWORD PTR [ebx],1
  40b5d3:	inc    edx
  40b5d4:	scas   eax,DWORD PTR es:[edi]
  40b5d5:	sub    dh,cl
  40b5d7:	das    
  40b5d8:	or     eax,0x45f68f4f
  40b5dd:	jne    0x40b62f
  40b5df:	inc    esp
  40b5e0:	mov    esp,0xd525973d
  40b5e5:	in     al,0xbe
  40b5e7:	das    
  40b5e8:	sub    cl,BYTE PTR ds:0xfc27f49c
  40b5ee:	mov    dh,0xff
  40b5f0:	pop    ebx
  40b5f1:	(bad)  
  40b5f2:	loopne 0x40b60b
  40b5f4:	cmp    al,0x40
  40b5f6:	fldln2 
  40b5f8:	call   0x7f9b395f
  40b5fd:	ja     0x40b5f1
  40b5ff:	cmp    DWORD PTR [esi+0x60],0xffffff9f
  40b603:	rcr    ah,0xd
  40b606:	push   0x4a5632e7
  40b60b:	xor    ecx,DWORD PTR [eax+0x24c6c63b]
  40b611:	out    0xae,eax
  40b613:	sub    dl,BYTE PTR [edx+0x2f]
  40b616:	inc    edx
  40b617:	loope  0x40b624
  40b619:	sbb    dh,al
  40b61b:	loopne 0x40b62b
  40b61d:	inc    ecx
  40b61e:	cmp    DWORD PTR [esi],ebp
  40b620:	xor    DWORD PTR [edi+eiz*1+0x47138944],ecx
  40b627:	fbstp  TBYTE PTR [ebx+0x5b8413b7]
  40b62d:	mov    ecx,edi
  40b62f:	lods   eax,DWORD PTR ds:[esi]
  40b630:	push   0x6351a17
  40b635:	add    ebp,DWORD PTR [edx-0x70c59651]
  40b63b:	push   ss
  40b63c:	and    eax,edi
  40b63e:	mov    esi,edx
  40b640:	idiv   BYTE PTR [edx+0x228d0e3b]
  40b646:	mov    ds:0xda5f344f,eax
  40b64b:	sbb    al,0x44
  40b64d:	cmp    ch,BYTE PTR [edx]
  40b64f:	push   cs
  40b650:	ss in  eax,0x74
  40b653:	je     0x40b657
  40b655:	in     eax,dx
  40b656:	pushf  
  40b657:	push   ss
  40b658:	or     dl,BYTE PTR ss:[edx-0x1a]
  40b65c:	imul   esp,DWORD PTR [edx],0x1e68011d
  40b662:	mov    eax,ds:0x3687261c
  40b667:	ja     0x40b6dd
  40b669:	int    0x15
  40b66b:	add    eax,DWORD PTR es:[edx]
  40b66e:	xor    esp,DWORD PTR [edi]
  40b670:	jge    0x40b60e
  40b672:	fidiv  WORD PTR [ebx]
  40b674:	nop
  40b675:	jbe    0x40b6a2
  40b677:	aaa    
  40b678:	pop    ebp
  40b679:	dec    ecx
  40b67a:	stc    
  40b67b:	jns    0x40b646
  40b67d:	mov    eax,0x855c0609
  40b682:	(bad)  [eax]
  40b684:	inc    esi
  40b685:	sub    dl,BYTE PTR [ebx+edx*2-0x3cc34315]
  40b68c:	test   ah,cl
  40b68e:	or     dl,cl
  40b690:	ret    
  40b691:	mov    ds:0x1ac1ad00,al
  40b696:	mov    eax,0x5f4b7e5e
  40b69b:	in     al,0x2b
  40b69d:	stos   BYTE PTR es:[edi],al
  40b69e:	cs cmp eax,eax
  40b6a1:	dec    ebx
  40b6a2:	lahf   
  40b6a3:	pop    esp
  40b6a4:	lahf   
  40b6a5:	push   cs
  40b6a6:	jmp    0x40b62b
  40b6a8:	loop   0x40b711
  40b6aa:	adc    eax,0x38a1037f
  40b6af:	loop   0x40b68d
  40b6b1:	ret    0x2c12
  40b6b4:	ds popa 
  40b6b6:	mov    dh,BYTE PTR [edi-0x49]
  40b6b9:	sbb    cl,BYTE PTR ds:[edx+0x2e5656e6]
  40b6c0:	dec    edx
  40b6c1:	sub    DWORD PTR [ecx-0x1c1cdea5],ebx
  40b6c7:	out    dx,al
  40b6c8:	out    0xc3,eax
  40b6ca:	mov    ebx,0xed5fce42
  40b6cf:	stc    
  40b6d0:	jae    0x40b6b0
  40b6d2:	dec    ebp
  40b6d3:	xor    edx,DWORD PTR [ecx-0x378dc3fb]
  40b6d9:	nop
  40b6da:	cld    
  40b6db:	push   0xffffffa6
  40b6dd:	cmp    edi,ecx
  40b6df:	das    
  40b6e0:	jns    0x40b73c
  40b6e2:	iret   
  40b6e3:	ja     0x40b6f6
  40b6e5:	jb     0x40b74d
  40b6e7:	push   esp
  40b6e8:	cmc    
  40b6e9:	call   0x2240:0x8d4585b2
  40b6f0:	cmp    cl,cl
  40b6f2:	jmp    0x40b699
  40b6f4:	xor    DWORD PTR [ebp+eax*4-0x6db51cd1],edi
  40b6fb:	stc    
  40b6fc:	pushf  
  40b6fd:	sub    esp,ecx
  40b6ff:	out    dx,eax
  40b700:	or     cl,BYTE PTR [bp-0x2112]
  40b705:	jge    0x40b6b1
  40b707:	ret    
  40b708:	push   eax
  40b709:	add    eax,0xa676708e
  40b70e:	clc    
  40b70f:	not    DWORD PTR [edi+eiz*4+0x7a]
  40b713:	dec    ebp
  40b714:	xor    al,0xcf
  40b716:	lods   eax,DWORD PTR ds:[esi]
  40b717:	int3   
  40b718:	jb     0x40b6cf
  40b71a:	rcl    BYTE PTR [eax-0x4156a99d],0x95
  40b721:	retf   
  40b722:	or     dl,dl
  40b724:	jno    0x40b71c
  40b726:	jo     0x40b6cf
  40b728:	adc    esp,DWORD PTR [ebp+0x28e4cde8]
  40b72e:	outs   dx,BYTE PTR ds:[esi]
  40b72f:	cmp    esi,DWORD PTR [edx+eax*2]
  40b732:	mov    edi,DWORD PTR [ebp-0x6a128c32]
  40b738:	dec    esi
  40b739:	mov    bh,BYTE PTR [edx+0x14]
  40b73c:	test   DWORD PTR [edx-0xd0258c2],eax
  40b742:	pop    ds
  40b743:	iret   
  40b744:	mov    al,0x47
  40b746:	or     BYTE PTR [edx+0x7c],0xf5
  40b74a:	xor    dl,BYTE PTR [esi]
  40b74c:	pop    edi
  40b74d:	jle    0x40b72b
  40b74f:	(bad)  
  40b750:	cmp    al,0xe2
  40b752:	(bad)  
  40b753:	idiv   BYTE PTR [ebp+edi*4-0x5c]
  40b757:	test   BYTE PTR [ebx-0x3c],0x55
  40b75b:	inc    esp
  40b75c:	push   ebx
  40b75d:	(bad)
  40b760:	dec    esi
  40b761:	(bad)  
  40b763:	test   ebx,esp
  40b765:	jle    0x40b7af
  40b767:	aas    
  40b768:	gs out dx,al
  40b76a:	push   esp
  40b76b:	inc    esp
  40b76c:	push   cs
  40b76d:	lods   al,BYTE PTR ds:[esi]
  40b76e:	xchg   edx,eax
  40b76f:	mov    al,ds:0x2cce825f
  40b774:	jae    0x40b7ed
  40b776:	repnz scas eax,DWORD PTR es:[edi]
  40b778:	retf   
  40b779:	fldenv [esi+ecx*2]
  40b77c:	inc    ebp
  40b77d:	loop   0x40b7a8
  40b77f:	retf   0xfcd3
  40b782:	(bad)  
  40b783:	aaa    
  40b784:	fiadd  WORD PTR [esi]
  40b786:	clc    
  40b787:	mov    dh,0x92
  40b789:	ret    0x40e
  40b78c:	dec    BYTE PTR [edi+0x35e7c8d3]
  40b792:	and    ebx,DWORD PTR [edx-0x19]
  40b795:	das    
  40b796:	sahf   
  40b797:	inc    ebx
  40b798:	test   BYTE PTR [esi-0xf],0x2c
  40b79c:	das    
  40b79d:	aad    0x8c
  40b79f:	(bad)
  40b7a3:	js     0x40b80a
  40b7a5:	mov    esp,0xfb5d6d11
  40b7aa:	xchg   edx,eax
  40b7ab:	add    DWORD PTR [eax],0x90f99926
  40b7b1:	push   esi
  40b7b2:	nop
  40b7b3:	pop    ebp
  40b7b4:	adc    al,0x7e
  40b7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7b7:	jg     0x40b827
  40b7b9:	ins    BYTE PTR es:[edi],dx
  40b7ba:	ins    BYTE PTR es:[edi],dx
  40b7bb:	jno    0x40b81b
  40b7bd:	push   eax
  40b7be:	mov    bh,0xae
  40b7c0:	shr    esi,1
  40b7c2:	fsubr  st,st(6)
  40b7c4:	(bad)  
  40b7c5:	mov    ds:0xd5d92e51,al
  40b7ca:	xor    esi,0xffffffd4
  40b7cd:	retf   
  40b7ce:	cmp    bh,BYTE PTR [ecx+0x7e]
  40b7d1:	iret   
  40b7d2:	xchg   edx,eax
  40b7d3:	or     eax,0x4492a48a
  40b7d8:	cdq    
  40b7d9:	fs jecxz 0x40b7b7
  40b7dc:	push   es
  40b7dd:	jo     0x40b84a
  40b7df:	das    
  40b7e0:	idiv   esi
  40b7e2:	rol    ecx,0xaa
  40b7e5:	jno    0x40b811
  40b7e7:	push   esi
  40b7e8:	xor    DWORD PTR [esi-0x36],eax
  40b7eb:	ret    
  40b7ec:	inc    ecx
  40b7ed:	mov    cl,0x28
  40b7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f0:	test   al,0x66
  40b7f2:	xchg   ebp,eax
  40b7f3:	lea    ebx,[esi-0x14]
  40b7f6:	aaa    
  40b7f7:	(bad)  
  40b7f8:	jp     0x40b7c3
  40b7fa:	xchg   DWORD PTR ds:0x6f888e34,edi
  40b800:	ins    BYTE PTR es:[edi],dx
  40b801:	lock int 0xd6
  40b804:	adc    al,0xdd
  40b806:	inc    eax
  40b807:	or     ebp,esi
  40b809:	call   0x2bd3:0x923ee08a
  40b810:	sbb    eax,0x4549fee4
  40b815:	sub    ah,bh
  40b817:	push   ds
  40b818:	sub    DWORD PTR [ebx+0x10d311c0],esp
  40b81e:	sub    ecx,DWORD PTR [ebp-0x69]
  40b821:	cmp    cl,0x4b
  40b824:	mov    cl,0xc2
  40b826:	xchg   edx,eax
  40b827:	xor    BYTE PTR [edi],cl
  40b829:	pop    eax
  40b82a:	frstor [esi+edi*2-0x2d]
  40b82e:	mov    ah,0x43
  40b830:	push   cs
  40b831:	in     al,dx
  40b832:	add    BYTE PTR cs:[eax-0x761cdd48],bl
  40b839:	inc    ebp
  40b83a:	dec    esi
  40b83b:	mov    WORD PTR [ebx+0x6f],cs
  40b83e:	test   al,0xd7
  40b840:	mov    ecx,0x724b4261
  40b845:	sub    DWORD PTR [edx+0x37],ebx
  40b848:	xchg   ebp,eax
  40b849:	dec    eax
  40b84a:	jmp    0xcc13:0xce25b2dc
  40b851:	add    al,dl
  40b853:	sub    bh,ah
  40b855:	pop    edx
  40b856:	enter  0x758,0x88
  40b85a:	daa    
  40b85b:	iret   
  40b85c:	xor    esi,DWORD PTR ds:0x77558f79
  40b862:	test   BYTE PTR [eax+0xf],bl
  40b865:	xchg   edi,eax
  40b866:	stos   DWORD PTR es:[edi],eax
  40b867:	push   es
  40b868:	cdq    
  40b869:	addr16 mov ah,0x1b
  40b86c:	mov    ch,BYTE PTR ds:0xc177d1e0
  40b872:	and    dh,bh
  40b874:	xchg   edx,eax
  40b875:	repnz mov esi,0x9588c03b
  40b87b:	loopne 0x40b8d2
  40b87d:	out    dx,al
  40b87e:	inc    ebp
  40b87f:	(bad)  
  40b880:	jns    0x40b81c
  40b882:	ficomp WORD PTR [edx+0x11]
  40b885:	jae    0x40b8c0
  40b887:	cmp    dh,BYTE PTR [ebp-0x54]
  40b88a:	ds pusha 
  40b88c:	jmp    0x40b878
  40b88e:	iret   
  40b88f:	outs   dx,DWORD PTR ds:[esi]
  40b890:	adc    eax,0xb394d4eb
  40b895:	and    BYTE PTR [esi],bl
  40b897:	mov    BYTE PTR [edx],ah
  40b899:	mov    ds:0xa6492a56,al
  40b89e:	mov    al,al
  40b8a0:	jnp    0x40b8fc
  40b8a2:	ja     0x40b8df
  40b8a4:	xor    al,0x2d
  40b8a6:	sahf   
  40b8a7:	add    al,0x5a
  40b8a9:	(bad)  
  40b8aa:	and    eax,0x9e206452
  40b8af:	mov    dl,0xf1
  40b8b1:	mov    eax,0x45c21ce8
  40b8b6:	pop    esi
  40b8b7:	lahf   
  40b8b8:	mov    ecx,0xcb2d7669
  40b8bd:	in     al,dx
  40b8be:	xor    BYTE PTR [esi+0x21],0x3
  40b8c2:	adc    BYTE PTR [edi+0x43ec8c4f],bh
  40b8c8:	dec    ebx
  40b8c9:	retfw  0x7589
  40b8cd:	int    0x24
  40b8cf:	scas   al,BYTE PTR es:[edi]
  40b8d0:	cmp    BYTE PTR [ecx],dl
  40b8d2:	jecxz  0x40b909
  40b8d4:	fisub  WORD PTR [edx-0x32]
  40b8d7:	xchg   esp,eax
  40b8d8:	sbb    ah,bl
  40b8da:	call   0xc7b1c053
  40b8df:	jecxz  0x40b8d6
  40b8e1:	out    0x12,al
  40b8e3:	push   esp
  40b8e4:	jb     0x40b8e7
  40b8e6:	sub    BYTE PTR [esi],dl
  40b8e8:	sub    al,0x6f
  40b8ea:	int3   
  40b8eb:	xor    al,0xd6
  40b8ed:	ret    0xc340
  40b8f0:	fs stc 
  40b8f2:	je     0x40b91c
  40b8f4:	imul   BYTE PTR [edx+0x37f1a0c7]
  40b8fa:	jle    0x40b892
  40b8fc:	aad    0x5a
  40b8fe:	sub    ebx,edi
  40b900:	retf   0x3bed
  40b903:	adc    DWORD PTR [edx],0x1b
  40b906:	mov    fs,ecx
  40b908:	fs inc edi
  40b90a:	scas   eax,DWORD PTR es:[edi]
  40b90b:	cwde   
  40b90c:	xor    eax,DWORD PTR [edx+0x41485b2c]
  40b912:	sbb    eax,DWORD PTR [eax-0xb8a1981]
  40b918:	mov    ebx,0x8a4e8959
  40b91d:	aas    
  40b91e:	or     DWORD PTR [edi-0x7f5b7973],0x23
  40b925:	push   eax
  40b926:	loop   0x40b977
  40b928:	adc    eax,0xb2185dc2
  40b92d:	mov    cl,0x2
  40b92f:	jne    0x40b924
  40b931:	xor    eax,0x3390ba85
  40b936:	test   DWORD PTR [ebx],edi
  40b938:	xor    edi,edi
  40b93a:	sbb    eax,0x8e85f219
  40b93f:	out    dx,eax
  40b940:	cmc    
  40b941:	call   0x633f:0xc2a96f08
  40b948:	stc    
  40b949:	mov    ebp,0x1bd0fab2
  40b94e:	shl    BYTE PTR ds:0x41c0029a,0xf2
  40b955:	cmp    eax,0x3858d2f6
  40b95a:	pushf  
  40b95b:	push   esp
  40b95c:	inc    ebp
  40b95d:	sbb    al,bh
  40b95f:	mov    dl,0x85
  40b961:	sti    
  40b962:	mov    edi,0xfa303dbe
  40b967:	push   esi
  40b968:	and    al,ah
  40b96a:	pop    esp
  40b96b:	jle    0x40b95a
  40b96d:	dec    ecx
  40b96e:	scas   al,BYTE PTR es:[edi]
  40b96f:	fwait
  40b970:	push   ebp
  40b971:	push   0x7c
  40b973:	mov    ebp,0x3bab3677
  40b978:	loopne 0x40b9f0
  40b97a:	lea    edx,[eax]
  40b97c:	push   ds
  40b97d:	ror    BYTE PTR [edi],cl
  40b97f:	mov    ah,0xd4
  40b981:	test   DWORD PTR [ecx],0xed78345e
  40b987:	pop    esi
  40b988:	out    dx,al
  40b989:	mov    dh,0xd0
  40b98b:	mov    bl,0xfd
  40b98d:	js     0x40b92a
  40b98f:	mov    eax,DWORD PTR [esp+eax*4]
  40b992:	lods   al,BYTE PTR ds:[esi]
  40b993:	pop    edx
  40b994:	inc    edi
  40b995:	sub    ebp,ebx
  40b997:	push   ebx
  40b998:	dec    ebp
  40b999:	jno    0x40b95b
  40b99b:	out    dx,al
  40b99c:	adc    ch,BYTE PTR [ebx]
  40b99e:	les    esp,FWORD PTR [ecx-0x7d]
  40b9a1:	fs mov esi,0x7fbd766c
  40b9a7:	mov    ecx,0x72b69520
  40b9ac:	pop    esp
  40b9ad:	inc    ebx
  40b9ae:	jl     0x40b94b
  40b9b0:	and    eax,0xcc244889
  40b9b5:	mov    ch,BYTE PTR [ecx+0x413765cf]
  40b9bb:	mov    dh,0x2e
  40b9bd:	dec    esp
  40b9be:	gs scas eax,DWORD PTR es:[edi]
  40b9c0:	popa   
  40b9c1:	push   ebp
  40b9c2:	ja     0x40b9a6
  40b9c4:	adc    edi,ebx
  40b9c6:	xor    DWORD PTR [edi+ebx*4+0x42b65620],0x1a
  40b9ce:	push   edx
  40b9cf:	shr    BYTE PTR [ebx-0x44e941ea],1
  40b9d5:	stos   DWORD PTR es:[edi],eax
  40b9d6:	retf   
  40b9d7:	stos   DWORD PTR es:[edi],eax
  40b9d8:	jnp    0x40ba2b
  40b9da:	in     eax,0x18
  40b9dc:	push   ds
  40b9dd:	jbe    0x40b991
  40b9df:	stos   DWORD PTR es:[edi],eax
  40b9e0:	leave  
  40b9e1:	pop    ecx
  40b9e2:	fld    TBYTE PTR [ecx]
  40b9e4:	setl   BYTE PTR [eax-0x69a97b01]
  40b9eb:	sbb    al,0xdc
  40b9ed:	jns    0x40ba67
  40b9ef:	mov    dh,0xa9
  40b9f1:	cld    
  40b9f2:	adc    dl,BYTE PTR [eax-0x2a]
  40b9f5:	add    al,0xb
  40b9f7:	cld    
  40b9f8:	inc    ecx
  40b9f9:	jecxz  0x40ba57
  40b9fb:	mov    edx,0x5f2a1d2e
  40ba00:	mov    ecx,0xe26078c5
  40ba05:	sbb    bh,BYTE PTR [edx-0x61]
  40ba08:	clc    
  40ba09:	pop    edx
  40ba0a:	and    al,0xcc
  40ba0c:	mov    al,ds:0x603d99ce
  40ba11:	clc    
  40ba12:	push   ss
  40ba13:	sub    esp,DWORD PTR [edi]
  40ba15:	mov    ah,BYTE PTR [ebx+eiz*8-0x775d92fb]
  40ba1c:	shr    BYTE PTR [ecx],cl
  40ba1e:	shr    BYTE PTR [ecx+0x38],cl
  40ba21:	inc    edx
  40ba22:	jmp    0x40ba6e
  40ba24:	fcomp  QWORD PTR [edx]
  40ba26:	xchg   edx,eax
  40ba27:	(bad)  
  40ba28:	rol    BYTE PTR ds:0x311a0747,1
  40ba2e:	xor    al,BYTE PTR [ebx+0x199472a0]
  40ba34:	and    BYTE PTR [ebp+0x34],al
  40ba37:	push   edi
  40ba38:	adc    BYTE PTR [edi-0x5c],0x29
  40ba3c:	loop   0x40ba70
  40ba3e:	add    ch,BYTE PTR [eax+esi*1+0x6ccb6192]
  40ba45:	das    
  40ba46:	shl    DWORD PTR [esp+eax*1-0x56],cl
  40ba4a:	add    cl,dl
  40ba4c:	add    bl,BYTE PTR [esi-0x6]
  40ba4f:	dec    ebx
  40ba50:	sbb    DWORD PTR [ecx-0x30],esi
  40ba53:	mov    esi,0xab2b67cf
  40ba58:	mov    ch,0xd2
  40ba5a:	jbe    0x40ba2c
  40ba5c:	sbb    edi,DWORD PTR [ebx+edx*2+0x53]
  40ba60:	inc    eax
  40ba61:	inc    edi
  40ba62:	mov    ds:0x528efe98,eax
  40ba67:	and    BYTE PTR [ebp-0x717c771f],cl
  40ba6d:	inc    ebx
  40ba6e:	fnstcw WORD PTR [ebx-0x8]
  40ba71:	loop   0x40ba3f
  40ba73:	call   0xf563d8a1
  40ba78:	cmc    
  40ba79:	mov    dh,0x26
  40ba7b:	test   BYTE PTR [edx+eiz*4+0x3f],dh
  40ba7f:	jo     0x40baf3
  40ba81:	xor    ch,BYTE PTR [eax]
  40ba83:	xchg   ebp,eax
  40ba84:	add    ah,0xf
  40ba87:	jb     0x40ba40
  40ba89:	les    edx,FWORD PTR ds:0x3fb815df
  40ba8f:	retf   
  40ba90:	das    
  40ba91:	push   es
  40ba92:	dec    edi
  40ba93:	add    al,0x4
  40ba95:	popf   
  40ba96:	add    BYTE PTR [ebx+edx*1+0xa36bd7f],cl
  40ba9d:	mov    dl,0x16
  40ba9f:	add    eax,0x42bfcd1b
  40baa4:	pop    edx
  40baa5:	cdq    
  40baa6:	xchg   esi,eax
  40baa7:	shr    DWORD PTR [ebp+0x5aa99117],0x26
  40baae:	push   edx
  40baaf:	inc    esp
  40bab0:	aad    0x22
  40bab2:	inc    esi
  40bab3:	popa   
  40bab4:	fdivr  DWORD PTR [edx+ebp*2]
  40bab7:	jns    0x40bae7
  40bab9:	xlat   BYTE PTR ds:[ebx]
  40baba:	xchg   esp,eax
  40babb:	mov    al,0xd8
  40babd:	xor    BYTE PTR [ebx-0x3df929e9],ch
  40bac3:	push   eax
  40bac4:	jmp    0xc250:0x1df8
  40baca:	and    eax,0x22b064c
  40bacf:	test   al,0x79
  40bad1:	sub    BYTE PTR [ebx+esi*2-0x16],bl
  40bad5:	and    al,0xcb
  40bad7:	aaa    
  40bad8:	cdq    
  40bad9:	xor    esp,edi
  40badb:	rol    BYTE PTR [edx+0x64],0x68
  40badf:	adc    eax,0xb48f4e32
  40bae4:	sbb    BYTE PTR [eax],dh
  40bae6:	cdq    
  40bae7:	(bad)  
  40bae9:	rcr    esp,cl
  40baeb:	and    BYTE PTR [esi+0x560b90bf],bh
  40baf1:	pop    eax
  40baf2:	mov    ecx,0xa25707d3
  40baf7:	push   edi
  40baf8:	pop    ecx
  40baf9:	pop    edx
  40bafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafb:	adc    DWORD PTR [eax],esi
  40bafd:	xor    eax,DWORD PTR [edx-0x4a3709cb]
  40bb03:	dec    eax
  40bb04:	inc    edx
  40bb05:	jle    0x40badb
  40bb07:	pop    eax
  40bb08:	push   edx
  40bb09:	ja     0x40baef
  40bb0b:	pop    es
  40bb0c:	sbb    ah,BYTE PTR [edi]
  40bb0e:	int3   
  40bb0f:	xor    eax,0x2aef2d8e
  40bb14:	jnp    0x40bb2c
  40bb16:	test   eax,0xfd69920
  40bb1b:	mov    ebp,DWORD PTR [esi+0x3ffca89]
  40bb21:	sub    bl,BYTE PTR [edi]
  40bb23:	jecxz  0x40bb49
  40bb25:	mov    ebp,0xdc7251ac
  40bb2a:	jp     0x40bb83
  40bb2c:	aad    0x6e
  40bb2e:	stc    
  40bb2f:	xor    ah,0x4d
  40bb32:	loopne 0x40baf0
  40bb34:	jmp    0x40baf9
  40bb36:	in     eax,0x17
  40bb38:	lock call 0x31a585ff
  40bb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3f:	push   ds
  40bb40:	and    DWORD PTR [ebp+0x12be034b],edi
  40bb46:	pop    esp
  40bb47:	xor    al,0x6
  40bb49:	push   0xffffffd6
  40bb4b:	sbb    eax,0x5d2013f6
  40bb50:	push   eax
  40bb51:	inc    esi
  40bb52:	inc    ebp
  40bb53:	pusha  
  40bb54:	inc    esp
  40bb55:	or     al,0x52
  40bb57:	mov    bl,0xa6
  40bb59:	inc    dh
  40bb5b:	cmp    edi,DWORD PTR [eax]
  40bb5d:	test   DWORD PTR [edx+0x3e755a4d],esp
  40bb63:	dec    esi
  40bb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb65:	sub    BYTE PTR [esi],bl
  40bb67:	cs jmp 0x4552b4cb
  40bb6d:	pop    ecx
  40bb6e:	dec    esp
  40bb6f:	xor    al,0x7d
  40bb71:	push   eax
  40bb72:	jnp    0x40bb11
  40bb74:	cld    
  40bb75:	jne    0x40bbef
  40bb77:	jnp    0x40bbd5
  40bb79:	pop    edx
  40bb7a:	mov    al,ds:0xb62176a1
  40bb7f:	(bad)  
  40bb80:	dec    edx
  40bb81:	sbb    al,0x9d
  40bb83:	pop    ebx
  40bb84:	jg     0x40bb25
  40bb86:	or     ebp,DWORD PTR [ecx+ecx*2]
  40bb89:	fsubr  st(7),st
  40bb8b:	call   0xe3f9:0xb602dad2
  40bb92:	loope  0x40bbe0
  40bb94:	xchg   edi,eax
  40bb95:	int3   
  40bb96:	or     bl,BYTE PTR [eax+0x5e08f6e8]
  40bb9c:	jb     0x40bba2
  40bb9e:	push   0x95255760
  40bba3:	dec    esp
  40bba4:	jne    0x40bbf5
  40bba6:	push   edx
  40bba7:	add    DWORD PTR [ebp+0x7d],0x35
  40bbab:	push   0x41
  40bbad:	pop    esp
  40bbae:	out    dx,al
  40bbaf:	push   esp
  40bbb0:	jg     0x40bc15
  40bbb2:	jbe    0x40bb92
  40bbb4:	outs   dx,DWORD PTR ds:[esi]
  40bbb5:	inc    ebx
  40bbb6:	sbb    BYTE PTR ds:0x91294c4a,al
  40bbbc:	pop    ds
  40bbbd:	out    dx,al
  40bbbe:	jb     0x40bbc6
  40bbc0:	outs   dx,BYTE PTR ds:[esi]
  40bbc1:	xchg   ebp,eax
  40bbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc3:	sub    eax,0x52f328c5
  40bbc8:	inc    ebp
  40bbc9:	pushf  
  40bbca:	or     al,0x30
  40bbcc:	mov    eax,ecx
  40bbce:	and    eax,0x684ca7f7
  40bbd3:	jmp    0x9e1b:0xed28326
  40bbda:	cmp    DWORD PTR [ebp+0x7f8c33b7],ecx
  40bbe0:	lahf   
  40bbe1:	mov    ecx,0x938882a1
  40bbe6:	mov    ds:0x8c51ab15,eax
  40bbeb:	mov    es,ebx
  40bbed:	or     BYTE PTR [edi+0x1ede43bf],dh
  40bbf3:	rol    DWORD PTR [esi],0x82
  40bbf6:	(bad)  
  40bbf7:	(bad)  [ebx+0xe]
  40bbfa:	mov    dh,0x7c
  40bbfc:	dec    edi
  40bbfd:	mov    ch,dl
  40bbff:	xchg   edx,eax
  40bc00:	(bad)  
  40bc01:	in     al,dx
  40bc02:	sahf   
  40bc03:	fstp   DWORD PTR [ecx-0x44]
  40bc06:	push   0xd9caf841
  40bc0b:	movhps xmm1,QWORD PTR [eax+esi*1+0x31]
  40bc10:	cmc    
  40bc11:	jle    0x40bbfe
  40bc13:	out    0x8,eax
  40bc15:	cmp    ebp,ebx
  40bc17:	out    dx,al
  40bc18:	outs   dx,DWORD PTR ds:[esi]
  40bc19:	shl    BYTE PTR [edx+edx*2+0x34],cl
  40bc1d:	push   ss
  40bc1e:	mov    ecx,0x8e73a9fe
  40bc23:	cdq    
  40bc24:	mov    eax,0xfbf41edf
  40bc29:	daa    
  40bc2a:	ficomp DWORD PTR [ecx]
  40bc2c:	jbe    0x40bc99
  40bc2e:	mov    eax,0xceef7ef
  40bc33:	mov    al,0xc6
  40bc35:	scas   al,BYTE PTR es:[edi]
  40bc36:	push   edx
  40bc37:	inc    eax
  40bc38:	mov    cl,0x7e
  40bc3a:	mov    ?,eax
  40bc3c:	test   al,0x83
  40bc3e:	cs das 
  40bc40:	es pop edx
  40bc42:	iret   
  40bc43:	lea    esi,[esi-0x68]
  40bc46:	fdivr  st,st(7)
  40bc48:	adc    ebp,edi
  40bc4a:	inc    edx
  40bc4b:	jle    0x40bc1f
  40bc4d:	push   ds
  40bc4e:	pop    edx
  40bc4f:	mov    ebx,0xa5205453
  40bc54:	pop    ebp
  40bc55:	mov    dl,0x2f
  40bc57:	cmp    eax,0xa7b9d171
  40bc5c:	repnz mov al,ds:0xfd612a2c
  40bc62:	push   ecx
  40bc63:	(bad)  
  40bc64:	(bad)  
  40bc65:	popf   
  40bc66:	(bad)  
  40bc67:	xor    DWORD PTR [esi+0x11],eax
  40bc6a:	ss nop
  40bc6c:	adc    al,BYTE PTR [ebx]
  40bc6e:	in     al,dx
  40bc6f:	xchg   edi,eax
  40bc70:	cmp    BYTE PTR [ebp-0x3b],ah
  40bc73:	div    DWORD PTR [edx+eiz*4+0x46]
  40bc77:	icebp  
  40bc78:	and    eax,0x74acf7e0
  40bc7d:	xor    al,0x3f
  40bc7f:	jmp    FWORD PTR ds:0x4a880c4e
  40bc85:	push   ebx
  40bc86:	test   al,0x37
  40bc88:	mov    ebp,0x49c50aa3
  40bc8d:	pop    ebp
  40bc8e:	mov    ecx,0x76cf7154
  40bc93:	hlt    
  40bc94:	cmp    al,0x44
  40bc96:	repz adc BYTE PTR [ecx],cl
  40bc99:	gs jg  0x40bc44
  40bc9c:	push   edx
  40bc9d:	pop    ds
  40bc9e:	jmp    0x52a5:0xfe165aa3
  40bca5:	jp     0x40bcec
  40bca7:	mov    ds:0x984b4cce,al
  40bcac:	in     al,0x24
  40bcae:	outs   dx,BYTE PTR ds:[esi]
  40bcaf:	mov    eax,edi
  40bcb1:	pop    esi
  40bcb2:	mov    ch,0x49
  40bcb4:	or     eax,0x899eeac4
  40bcb9:	in     eax,0x58
  40bcbb:	test   al,0xbc
  40bcbd:	add    BYTE PTR [ebx-0x439d8462],bh
  40bcc3:	or     bl,BYTE PTR [esi+0x205d1e5f]
  40bcc9:	dec    edi
  40bcca:	and    DWORD PTR [ebx-0x79],esi
  40bccd:	imul   edx,DWORD PTR [edi-0x2d25facb],0xffffffd5
  40bcd4:	jno    0x40bd17
  40bcd6:	jbe    0x40bc78
  40bcd8:	int    0xf5
  40bcda:	scas   eax,DWORD PTR es:[edi]
  40bcdb:	pop    ss
  40bcdc:	add    BYTE PTR gs:[edx+eiz*4],0x53
  40bce1:	xchg   edx,eax
  40bce2:	sub    BYTE PTR [ebx+ebp*1+0x4a],bl
  40bce6:	inc    esi
  40bce7:	stos   BYTE PTR es:[edi],al
  40bce8:	cmp    al,0x32
  40bcea:	(bad)  
  40bceb:	pop    ecx
  40bcec:	stos   DWORD PTR es:[edi],eax
  40bced:	inc    eax
  40bcee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcef:	mov    BYTE PTR [ecx],bl
  40bcf1:	repz push 0x56469c58
  40bcf7:	in     al,dx
  40bcf8:	and    DWORD PTR [ebx+0x6c055686],ebp
  40bcfe:	scas   eax,DWORD PTR es:[edi]
  40bcff:	sbb    BYTE PTR [ebx+ebx*4+0x26],al
  40bd03:	test   al,0xea
  40bd05:	aaa    
  40bd06:	stos   BYTE PTR es:[edi],al
  40bd07:	aaa    
  40bd08:	pop    ebp
  40bd09:	out    0x75,eax
  40bd0b:	(bad)  
  40bd0c:	pop    ds
  40bd0d:	xchg   ebx,eax
  40bd0e:	inc    edx
  40bd0f:	ins    DWORD PTR es:[edi],dx
  40bd10:	mov    edx,edi
  40bd12:	pusha  
  40bd13:	mov    es,WORD PTR [ebp+0x7a]
  40bd16:	ss jne 0xdb6176f8
  40bd1d:	mov    dl,0xbc
  40bd1f:	loop   0x40bd13
  40bd21:	ss ja  0x40bd0f
  40bd24:	xor    ebp,DWORD PTR [ebx]
  40bd26:	in     al,dx
  40bd27:	aaa    
  40bd28:	add    DWORD PTR [ebx],ebx
  40bd2a:	push   ebp
  40bd2b:	mov    dh,0xea
  40bd2d:	dec    esi
  40bd2e:	arpl   WORD PTR ds:0xc0c0c0c0,bx
  40bd34:	rol    al,0xc0
  40bd37:	rol    al,0xc0
  40bd3a:	rol    al,0xc0
  40bd3d:	rol    al,0xc0
  40bd40:	rol    al,0xc0
  40bd43:	rol    al,0xc0
  40bd46:	rol    al,0xc0
  40bd49:	rol    al,0xc0
  40bd4c:	rol    al,0xc0
  40bd4f:	rol    al,0xc0
  40bd52:	rol    al,0xc0
  40bd55:	rol    al,0xc0
  40bd58:	rol    al,0xc0
  40bd5b:	rol    al,0xc0
  40bd5e:	rol    al,0xc0
  40bd61:	rol    al,0xc0
  40bd64:	rol    al,0xc0
  40bd67:	rol    al,0xc0
  40bd6a:	rol    al,0xc0
  40bd6d:	rol    al,0xc0
  40bd70:	rol    al,0xc0
  40bd73:	rol    al,0xc0
  40bd76:	rol    al,0xc0
  40bd79:	rol    al,0xc0
  40bd7c:	rol    al,0xc0
  40bd7f:	shl    BYTE PTR [edi],0x88
  40bd82:	mov    dl,0x92
  40bd84:	pop    es
  40bd85:	test   BYTE PTR [ebp-0x417c9eb8],bh
  40bd8b:	jg     0x40bd77
  40bd8d:	gs cdq 
  40bd8f:	addr16 je 0x40bdc8
  40bd92:	sub    dl,0xb1
  40bd95:	jg     0x40bd22
  40bd97:	xor    DWORD PTR [ebx],edi
  40bd99:	and    al,0x9b
  40bd9b:	add    BYTE PTR [ebx],bl
  40bd9d:	push   edx
  40bd9e:	pop    edx
  40bd9f:	mov    dl,0x5d
  40bda1:	push   es
  40bda2:	push   ds
  40bda3:	jmp    0x1648:0x51ebee13
  40bdaa:	sar    edi,0x62
  40bdad:	jg     0x40bde0
  40bdaf:	jl     0x40bdbc
  40bdb1:	xchg   esi,eax
  40bdb2:	bound  edx,QWORD PTR [esi-0x19]
  40bdb5:	mov    ds,WORD PTR [eax]
  40bdb7:	adc    edi,DWORD PTR [ebx-0x13]
  40bdba:	popa   
  40bdbb:	pop    edx
  40bdbc:	inc    ebp
  40bdbd:	add    dl,BYTE PTR [esi+0x1d968153]
  40bdc3:	enter  0x85d,0xb5
  40bdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc8:	arpl   WORD PTR [ecx-0x242570be],bp
  40bdce:	imul   eax,DWORD PTR [ebx+0x48],0xb4ece3f8
  40bdd5:	dec    esi
  40bdd6:	pop    edx
  40bdd7:	inc    ebp
  40bdd8:	call   0xdb1521ab
  40bddd:	(bad)  
  40bdde:	push   edx
  40bddf:	xchg   edi,eax
  40bde0:	xor    esp,eax
  40bde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde3:	int    0x94
  40bde5:	adc    BYTE PTR [esi+0x17],ah
  40bde8:	js     0x40be23
  40bdea:	inc    eax
  40bdeb:	push   ecx
  40bdec:	pushf  
  40bded:	pop    ecx
  40bdee:	ss jp  0x40be08
  40bdf1:	cmp    edi,esi
  40bdf3:	lock xchg esp,eax
  40bdf5:	push   edi
  40bdf6:	or     al,0xc
  40bdf8:	clc    
  40bdf9:	mov    ds:0x75401c7,al
  40bdfe:	cmp    dl,BYTE PTR [ebx+0x54865a74]
  40be04:	sti    
  40be05:	or     BYTE PTR [eax-0x6dbc042c],dh
  40be0b:	sub    eax,0x29cfdc36
  40be10:	mov    ecx,0x94a89cc8
  40be15:	imul   edi,DWORD PTR [ecx-0x432765d6],0xb3925718
  40be1f:	xchg   edi,eax
  40be20:	push   eax
  40be21:	lods   eax,DWORD PTR ds:[esi]
  40be22:	sar    ch,cl
  40be24:	retf   
  40be25:	add    al,0x79
  40be27:	jmp    DWORD PTR [ebp-0x36]
  40be2a:	sub    bh,BYTE PTR ds:0xf18127f6
  40be30:	dec    ebx
  40be31:	test   eax,0xf1337ac
  40be36:	(bad)  
  40be37:	or     dh,cl
  40be39:	arpl   WORD PTR [esi-0x46f3ddf9],ax
  40be3f:	pop    ecx
  40be40:	cmp    al,0xe7
  40be42:	mov    ah,0x55
  40be44:	mov    ah,0x41
  40be46:	mov    ebp,esi
  40be48:	cmp    bl,bh
  40be4a:	xchg   ebx,eax
  40be4b:	add    DWORD PTR [esi+edi*1-0x50],0x29
  40be50:	inc    ecx
  40be51:	pop    edi
  40be52:	leave  
  40be53:	dec    edx
  40be54:	ins    DWORD PTR es:[edi],dx
  40be55:	ficomp DWORD PTR [eiz*8+0x58e8174a]
  40be5c:	push   ds
  40be5d:	mov    dl,0x95
  40be5f:	xor    ebx,DWORD PTR [esi-0x67]
  40be62:	popf   
  40be63:	pop    ecx
  40be64:	pop    eax
  40be65:	and    BYTE PTR [ebx+0xf],dh
  40be68:	inc    ecx
  40be69:	fimul  WORD PTR [ebp-0x76]
  40be6c:	das    
  40be6d:	mov    ds:0xcaa3ba37,eax
  40be72:	test   eax,0x1cdb0c47
  40be77:	and    cl,BYTE PTR [ebp-0x49d73694]
  40be7d:	dec    eax
  40be7e:	or     eax,0x4661d25
  40be83:	out    dx,al
  40be84:	sbb    BYTE PTR [esi+ebp*2+0x14],ch
  40be88:	icebp  
  40be89:	sar    BYTE PTR [eax+edx*8+0x7f527f54],1
  40be90:	int3   
  40be91:	retf   0xa41c
  40be94:	out    dx,al
  40be95:	xchg   ecx,eax
  40be96:	stos   BYTE PTR es:[edi],al
  40be97:	ror    ch,cl
  40be99:	jg     0x40be2e
  40be9b:	mov    BYTE PTR [ebx+0x68ddb396],ah
  40bea1:	push   ds
  40bea2:	imul   edx,DWORD PTR [ebp+0x5a3cd15e],0xffffffe9
  40bea9:	pushf  
  40beaa:	add    BYTE PTR [edx],ch
  40beac:	cwde   
  40bead:	lahf   
  40beae:	mov    bl,0x62
  40beb0:	out    0xe5,eax
  40beb2:	sbb    al,0x81
  40beb4:	xchg   ebx,eax
  40beb5:	sub    al,0x9d
  40beb7:	in     eax,0xd2
  40beb9:	mov    bh,0xdc
  40bebb:	fdiv   QWORD PTR ds:0x287e3237
  40bec1:	cs mov eax,?
  40bec4:	dec    edx
  40bec5:	dec    edx
  40bec6:	push   esi
  40bec7:	xlat   BYTE PTR ds:[ebx]
  40bec8:	dec    dh
  40beca:	mov    ebx,0x162fbaaa
  40becf:	inc    ebx
  40bed0:	pop    edi
  40bed1:	push   esi
  40bed2:	jo     0x40bf1f
  40bed4:	adc    al,0x22
  40bed6:	xchg   edi,eax
  40bed7:	sti    
  40bed8:	xchg   ebp,eax
  40bed9:	inc    esi
  40beda:	rcr    ecx,cl
  40bedc:	mov    ecx,0x209073c2
  40bee1:	jbe    0x40bec7
  40bee3:	ins    WORD PTR es:[edi],dx
  40bee5:	pusha  
  40bee6:	scas   eax,DWORD PTR es:[edi]
  40bee7:	jp     0x40bea6
  40bee9:	rcr    DWORD PTR ds:0xabae0d3a,0xd1
  40bef0:	jae    0x40bf34
  40bef2:	mov    bh,0x24
  40bef4:	inc    ebx
  40bef5:	imul   esp,DWORD PTR [edx],0xffffffa0
  40bef8:	hlt    
  40bef9:	ss jne 0x40bf2b
  40befc:	pop    esi
  40befd:	push   edx
  40befe:	dec    edx
  40beff:	scas   al,BYTE PTR es:[edi]
  40bf00:	add    eax,0x2ff13ea3
  40bf05:	or     edi,ecx
  40bf07:	sti    
  40bf08:	bound  ecx,QWORD PTR [eax-0x19cb178a]
  40bf0e:	(bad)  
  40bf0f:	jo     0x40bf8a
  40bf11:	xor    DWORD PTR [edx+0x16af2379],0x9cfbf330
  40bf1b:	jne    0x40bf00
  40bf1d:	push   edx
  40bf1e:	jl     0x40bf56
  40bf20:	push   ebx
  40bf21:	fs and eax,0x612a1349
  40bf27:	jo     0x40bf86
  40bf29:	mov    cs,edi
  40bf2b:	sbb    ebx,DWORD PTR [edi+0x70f649e8]
  40bf31:	aam    0x13
  40bf33:	mov    cl,0xce
  40bf35:	push   0x20a2f8ac
  40bf3a:	or     al,0x18
  40bf3c:	push   eax
  40bf3d:	add    eax,0x8651c3f7
  40bf42:	dec    ebx
  40bf43:	or     dh,cl
  40bf45:	mov    dl,0xe8
  40bf47:	mov    cl,0x55
  40bf49:	cmp    bl,ch
  40bf4b:	cdq    
  40bf4c:	jbe    0x40bfb1
  40bf4e:	push   cs
  40bf4f:	and    eax,0xf03c0333
  40bf54:	pop    eax
  40bf55:	jnp    0x40bef0
  40bf57:	push   eax
  40bf58:	stc    
  40bf59:	adc    DWORD PTR [esi+0x46],ecx
  40bf5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5d:	sbb    BYTE PTR [esi-0x1d],0xee
  40bf61:	jmp    DWORD PTR [ebp-0x2f]
  40bf64:	dec    edi
  40bf65:	adc    DWORD PTR [edx-0x77],0xba9ce6a1
  40bf6c:	ins    DWORD PTR es:[edi],dx
  40bf6d:	repnz fdivr QWORD PTR [ebp-0x54]
  40bf71:	push   esi
  40bf72:	jle    0x40bf7a
  40bf74:	in     al,0xf5
  40bf76:	in     al,0xe6
  40bf78:	jbe    0x40bfa0
  40bf7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7b:	sbb    ebx,esp
  40bf7d:	std    
  40bf7e:	pop    ebx
  40bf7f:	mov    ds:0x9c3c994d,eax
  40bf84:	bound  ecx,QWORD PTR [eax+0x26]
  40bf87:	test   eax,0x52166f5e
  40bf8c:	cs dec edx
  40bf8e:	add    ah,BYTE PTR [ebp-0x2f]
  40bf91:	test   al,0xd9
  40bf93:	mov    dl,0x77
  40bf95:	push   ss
  40bf96:	pop    edx
  40bf97:	or     ebx,DWORD PTR [ecx]
  40bf99:	sub    BYTE PTR [ecx],ah
  40bf9b:	(bad)  
  40bf9c:	(bad)  
  40bf9d:	mov    esi,0x9635b63e
  40bfa2:	test   esp,ecx
  40bfa4:	into   
  40bfa5:	sub    eax,edx
  40bfa7:	les    ebp,FWORD PTR [ecx]
  40bfa9:	repnz adc eax,0x841ee94c
  40bfaf:	jl     0x40bfab
  40bfb1:	and    eax,ebx
  40bfb3:	pop    ss
  40bfb4:	mov    bl,0x32
  40bfb6:	mov    dh,0x4e
  40bfb8:	sbb    eax,0x3e40e1bf
  40bfbd:	dec    ecx
  40bfbe:	les    esi,FWORD PTR [eax]
  40bfc0:	cdq    
  40bfc1:	push   ecx
  40bfc2:	inc    esi
  40bfc3:	or     BYTE PTR [esi+0x16],0x23
  40bfc7:	and    ch,cl
  40bfc9:	or     eax,0x6874b0d9
  40bfce:	mov    esp,0x3011dcba
  40bfd3:	pop    ds
  40bfd4:	jno    0x40bf5d
  40bfd6:	(bad)  
  40bfd7:	sub    WORD PTR [esi+0x3f],sp
  40bfdb:	inc    esp
  40bfdc:	mov    ebx,0x6d9063b3
  40bfe1:	out    dx,al
  40bfe2:	stos   BYTE PTR es:[di],al
  40bfe4:	pop    esi
  40bfe5:	out    0x36,eax
  40bfe7:	pop    ecx
  40bfe8:	dec    ecx
  40bfe9:	pushf  
  40bfea:	cmp    eax,0xde15892b
  40bfef:	mov    bh,0xd5
  40bff1:	push   esi
  40bff2:	dec    edi
  40bff3:	xchg   ebx,eax
  40bff4:	outs   dx,DWORD PTR ds:[esi]
  40bff5:	retf   0x8744
  40bff8:	xor    al,0xb3
  40bffa:	jecxz  0x40c01c
  40bffc:	xor    DWORD PTR [edi],edx
  40bffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfff:	(bad)
  40c002:	mov    esi,0xa93a4b83
  40c007:	jns    0x40c03a
  40c009:	cli    
  40c00a:	jmp    0xc11b:0x8289f9ec
  40c011:	mov    edx,0x86073dd2
  40c016:	mov    ebp,0xaa21207f
  40c01b:	idiv   BYTE PTR [ebx]
  40c01d:	fst    DWORD PTR [edi+0xc]
  40c020:	aaa    
  40c021:	cmp    al,0xae
  40c023:	pop    eax
  40c024:	adc    eax,0x9435a65f
  40c029:	es hlt 
  40c02b:	sub    al,0x7d
  40c02d:	jl     0x40bfd9
  40c02f:	bound  esi,QWORD PTR ds:0x4f8ffaca
  40c035:	mov    DWORD PTR [edx+0x37],eax
  40c038:	inc    esp
  40c039:	inc    edx
  40c03a:	add    bl,BYTE PTR [esi+0x3c762abc]
  40c040:	gs jae 0x40c084
  40c043:	xchg   ebx,eax
  40c044:	repnz fwait
  40c046:	ins    DWORD PTR es:[edi],dx
  40c047:	adc    esi,edx
  40c049:	ja     0x40c0c7
  40c04b:	push   ecx
  40c04c:	xor    eax,0x8121ae19
  40c051:	sbb    BYTE PTR [ecx+eax*4+0x772931e2],dl
  40c058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c059:	mov    DWORD PTR [ebp-0x4c54ee06],edi
  40c05f:	loope  0x40c010
  40c061:	add    ah,bh
  40c063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c064:	push   ss
  40c065:	dec    ebx
  40c066:	xchg   edx,eax
  40c067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c068:	dec    esi
  40c069:	sbb    DWORD PTR [eax-0x407d1d85],ebx
  40c06f:	or     ebx,DWORD PTR [ecx-0x30d54610]
  40c075:	test   DWORD PTR [esi+0x3c0b3a42],esp
  40c07b:	and    ah,BYTE PTR [edx+0x25a7ee03]
  40c081:	or     cl,BYTE PTR [edx-0x4cb5e183]
  40c087:	dec    ebx
  40c088:	push   edi
  40c089:	push   esp
  40c08a:	cwde   
  40c08b:	je     0x40c05e
  40c08d:	ins    BYTE PTR es:[edi],dx
  40c08e:	xchg   BYTE PTR [edi],dl
  40c090:	(bad)  
  40c091:	fcmovu st,st(3)
  40c093:	cmp    DWORD PTR [edi-0x31a6c577],edx
  40c099:	mov    dl,0xb9
  40c09b:	push   eax
  40c09c:	xor    eax,0x23406dab
  40c0a1:	push   ds
  40c0a2:	stos   BYTE PTR es:[edi],al
  40c0a3:	cmp    BYTE PTR [edi+0x4a],cl
  40c0a6:	push   ecx
  40c0a7:	lahf   
  40c0a8:	inc    ebp
  40c0a9:	int    0xeb
  40c0ab:	std    
  40c0ac:	adc    al,0xa6
  40c0ae:	stc    
  40c0af:	dec    ebp
  40c0b0:	push   ss
  40c0b1:	xchg   ebp,eax
  40c0b2:	add    BYTE PTR [ebx],al
  40c0b4:	outs   dx,BYTE PTR ds:[esi]
  40c0b5:	loop   0x40c11a
  40c0b7:	lahf   
  40c0b8:	and    al,BYTE PTR [esi+0x28]
  40c0bb:	in     eax,dx
  40c0bc:	inc    edi
  40c0bd:	pop    ebx
  40c0be:	mov    ch,BYTE PTR [ebp-0x1ffe0db2]
  40c0c4:	jns    0x40c0f9
  40c0c6:	cwd    
  40c0c8:	stos   BYTE PTR es:[edi],al
  40c0c9:	jmp    FWORD PTR [ecx-0x1785c726]
  40c0cf:	pusha  
  40c0d0:	add    eax,0x1e00a597
  40c0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0d6:	xchg   ebp,eax
  40c0d7:	sub    bl,0x8
  40c0da:	sbb    al,0xdb
  40c0dc:	ja     0x40c0a2
  40c0de:	mov    esi,0x867d28ac
  40c0e3:	std    
  40c0e4:	call   0x9e4d:0xaaa1
  40c0ea:	adc    eax,0x5f086b7a
  40c0ef:	lds    esi,FWORD PTR [esi+ebx*4]
  40c0f2:	cmp    BYTE PTR [ecx],bh
  40c0f4:	pop    esi
  40c0f5:	ret    0x8202
  40c0f8:	ss nop
  40c0fa:	out    0x57,al
  40c0fc:	pop    esi
  40c0fd:	jns    0x40c173
  40c0ff:	jecxz  0x40c0b2
  40c101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c102:	mov    ?,esi
  40c104:	jmp    0x9f783c01
  40c109:	lahf   
  40c10a:	sbb    esp,ecx
  40c10c:	lock sub edx,DWORD PTR [ecx+esi*8]
  40c110:	jnp    0x40c0e0
  40c112:	inc    ebp
  40c114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c115:	mov    dh,0xb8
  40c117:	pmulhw mm5,QWORD PTR [esi+esi*2]
  40c11b:	or     ah,BYTE PTR [eax+0x785daec7]
  40c121:	pop    ebx
  40c122:	and    al,0xcd
  40c124:	js     0x40c161
  40c126:	sbb    BYTE PTR [edi-0x732c602a],bl
  40c12c:	loope  0x40c0b3
  40c12e:	fwait
  40c12f:	push   edx
  40c130:	mov    ch,0x74
  40c132:	ss add eax,0x19657d46
  40c138:	shl    BYTE PTR [edi-0x72],1
  40c13b:	bound  ebx,QWORD PTR [ecx+0x358d72da]
  40c141:	sub    DWORD PTR [ebp-0x545e432c],0x77
  40c148:	js     0x40c0f3
  40c14a:	call   0xbd793c4
  40c14f:	(bad)  
  40c150:	pop    ss
  40c151:	lds    ecx,FWORD PTR [esi+0x4ab8ab40]
  40c157:	xor    ah,al
  40c159:	in     al,dx
  40c15a:	ret    0xbcf
  40c15d:	jae    0x40c191
  40c15f:	xlat   BYTE PTR ds:[ebx]
  40c160:	in     al,0x1a
  40c162:	lods   eax,DWORD PTR ds:[esi]
  40c163:	sahf   
  40c164:	ja     0x40c165
  40c166:	jo     0x40c16d
  40c168:	xor    eax,0x16127d08
  40c16d:	mov    cl,0x63
  40c16f:	mov    bl,0x8
  40c171:	sbb    cl,BYTE PTR [edi+0x6a]
  40c174:	xchg   BYTE PTR [edx+edx*4+0x5e6b089e],bl
  40c17b:	mov    dh,BYTE PTR [esi]
  40c17d:	xchg   ebx,eax
  40c17e:	sub    al,0x16
  40c180:	ss jbe 0x40c140
  40c183:	test   al,0x46
  40c185:	(bad)  
  40c186:	push   ss
  40c187:	iret   
  40c188:	es mov ch,0xb0
  40c18b:	pop    ds
  40c18c:	and    dh,BYTE PTR [ebx+esi*8-0x53]
  40c190:	or     ebx,DWORD PTR [esi]
  40c192:	adc    dl,BYTE PTR [ebx-0x7f]
  40c195:	popf   
  40c196:	stos   DWORD PTR es:[edi],eax
  40c197:	jae    0x40c1b7
  40c199:	loop   0x40c1d9
  40c19b:	dec    esi
  40c19c:	fild   WORD PTR [edx-0x55f076b3]
  40c1a2:	sub    ebp,DWORD PTR [edx+0x7a0c35f4]
  40c1a8:	imul   esi,DWORD PTR [eax+0x5d1cecdb],0x1ff05ddb
  40c1b2:	mov    ds:0xcdcec185,al
  40c1b7:	mov    ds:0xcc173cee,eax
  40c1bc:	ret    
  40c1bd:	rcr    DWORD PTR [ecx],cl
  40c1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c0:	scas   al,BYTE PTR es:[edi]
  40c1c1:	sub    al,0xbe
  40c1c3:	mov    DWORD PTR ds:0xbecb298b,0xab408e5d
  40c1cd:	ret    0x534a
  40c1d0:	or     ecx,DWORD PTR ss:[ecx+0xc]
  40c1d4:	and    dl,BYTE PTR [ecx+0x71]
  40c1d7:	add    eax,0x6a7acd9d
  40c1dc:	cli    
  40c1dd:	sbb    bh,BYTE PTR ds:0x501afdf3
  40c1e3:	xor    bl,BYTE PTR [ebp-0x3dc3303]
  40c1e9:	mov    dl,0xba
  40c1eb:	adc    BYTE PTR [ecx+0x278ca620],0x66
  40c1f2:	and    BYTE PTR [eax-0x4f],cl
  40c1f5:	ins    BYTE PTR es:[edi],dx
  40c1f6:	sbb    ebx,edx
  40c1f8:	cmc    
  40c1f9:	cmp    dh,BYTE PTR [ecx+0x3c03fffe]
  40c1ff:	ret    
  40c200:	or     eax,0xde711868
  40c205:	sub    esp,eax
  40c207:	cli    
  40c208:	out    dx,eax
  40c209:	push   esp
  40c20a:	(bad)  
  40c20b:	rcr    DWORD PTR [ecx+0x6d],cl
  40c20e:	ss mov ch,0x3f
  40c211:	xchg   DWORD PTR [bp-0x634e],eax
  40c216:	jmp    0x40c1b9
  40c218:	or     BYTE PTR [esi-0x41],cl
  40c21b:	dec    eax
  40c21c:	mov    dh,0x94
  40c21e:	sub    BYTE PTR [ebx-0x1b],dh
  40c221:	loope  0x40c226
  40c223:	hlt    
  40c224:	(bad)  
  40c225:	call   0xfb28aa3b
  40c22a:	and    eax,0x73926529
  40c22f:	das    
  40c230:	(bad)  
  40c231:	rol    BYTE PTR [edx+edi*8],cl
  40c234:	fmul   DWORD PTR [ecx+0x5e]
  40c237:	sbb    ebp,ebp
  40c239:	ja     0x40c22f
  40c23b:	inc    eax
  40c23c:	dec    eax
  40c23d:	xchg   esp,eax
  40c23e:	repnz lock and al,0xb9
  40c242:	ds call 0x7f95:0x85a3acb3
  40c24a:	cmp    cl,BYTE PTR [esi+0x6fc8efbb]
  40c250:	dec    esi
  40c251:	js     0x40c2bf
  40c253:	and    eax,0x8f868815
  40c258:	loope  0x40c28c
  40c25a:	mov    bh,0xc7
  40c25c:	cld    
  40c25d:	cmp    BYTE PTR [ebx+0x32e27847],ch
  40c263:	cwde   
  40c264:	push   cs
  40c265:	push   ds
  40c266:	jne    0x40c1f1
  40c268:	push   ebp
  40c269:	setp   BYTE PTR [ebx]
  40c26c:	out    0xc3,al
  40c26e:	jnp    0x40c22a
  40c270:	jge    0x40c2de
  40c272:	ins    BYTE PTR es:[edi],dx
  40c273:	sub    BYTE PTR ds:0xa9938e7a,dl
  40c279:	std    
  40c27a:	loopne 0x40c23a
  40c27c:	lahf   
  40c27d:	test   DWORD PTR [edi+0x2a],edx
  40c280:	xchg   edx,eax
  40c281:	pop    ss
  40c282:	and    al,0xe7
  40c284:	pop    ebx
  40c285:	aad    0x6b
  40c287:	scas   eax,DWORD PTR es:[edi]
  40c288:	call   edx
  40c28a:	and    bh,bl
  40c28c:	mov    ds:0xd099b6dc,eax
  40c291:	jl     0x40c2e2
  40c293:	add    al,0x96
  40c295:	stos   DWORD PTR es:[edi],eax
  40c296:	bound  esp,QWORD PTR [eax-0x2993e383]
  40c29c:	cli    
  40c29d:	xchg   ebx,eax
  40c29e:	and    bh,BYTE PTR [ebx+eiz*1]
  40c2a1:	fbstp  TBYTE PTR [ebx+0x789a9034]
  40c2a7:	sbb    eax,0x799adba7
  40c2ac:	ds inc ebp
  40c2ae:	mov    bl,0xed
  40c2b0:	push   ebp
  40c2b1:	iret   
  40c2b2:	jo     0x40c2ef
  40c2b4:	call   0x3f10:0x7dab90c3
  40c2bb:	(bad)
  40c2bf:	adc    BYTE PTR [esi],cl
  40c2c1:	mov    ch,BYTE PTR [ebp-0x77077bff]
  40c2c7:	fs sbb al,0xe9
  40c2ca:	dec    edx
  40c2cb:	outs   dx,BYTE PTR fs:[esi]
  40c2cd:	ins    DWORD PTR es:[edi],dx
  40c2ce:	ins    BYTE PTR es:[edi],dx
  40c2cf:	mov    ch,0xb8
  40c2d1:	mov    ds:0xd3b2d087,eax
  40c2d6:	mov    dh,0xa1
  40c2d8:	adc    eax,0x6258a804
  40c2dd:	retf   
  40c2de:	fidiv  DWORD PTR [ebx-0x2968722f]
  40c2e4:	lahf   
  40c2e5:	shrd   DWORD PTR [ebx],ebp,0x91
  40c2e9:	dec    esi
  40c2ea:	mov    bh,0x4b
  40c2ec:	cmp    DWORD PTR [esi],esi
  40c2ee:	pop    eax
  40c2ef:	mov    bh,0x49
  40c2f1:	call   0xf7b3af47
  40c2f6:	cmc    
  40c2f7:	adc    al,0x97
  40c2f9:	pop    ss
  40c2fa:	sub    al,0xbb
  40c2fc:	pop    edx
  40c2fd:	loop   0x40c347
  40c2ff:	xor    BYTE PTR [edx],dh
  40c301:	dec    ecx
  40c302:	mov    ds:0x4c0c6e2,al
  40c307:	in     al,dx
  40c308:	popf   
  40c309:	fld    TBYTE PTR [ecx+0x7a]
  40c30c:	sbb    DWORD PTR [ebx],eax
  40c30e:	push   esp
  40c30f:	add    ecx,DWORD PTR [esi-0x44]
  40c312:	lods   al,BYTE PTR ds:[esi]
  40c313:	clc    
  40c314:	pop    ss
  40c315:	bsf    ebp,DWORD PTR [ebx]
  40c318:	adc    DWORD PTR [esi],0xffffff8c
  40c31b:	popa   
  40c31c:	xor    esi,edi
  40c31e:	sub    al,bl
  40c320:	push   cs
  40c321:	(bad)  
  40c322:	push   0x3ce8caec
  40c327:	pop    esi
  40c328:	mov    edi,edi
  40c32a:	jbe    0x40c35b
  40c32c:	enter  0xc4f0,0x86
  40c330:	add    BYTE PTR [eax+0x62],al
  40c333:	inc    eax
  40c334:	outs   dx,DWORD PTR ds:[esi]
  40c335:	inc    ebx
  40c336:	fcompp 
  40c338:	mov    bl,0xdf
  40c33a:	inc    ebp
  40c33b:	adc    edx,eax
  40c33d:	idiv   cl
  40c33f:	in     al,0x4d
  40c341:	fmul   QWORD PTR [esi]
  40c343:	sbb    ecx,0xffffffc5
  40c346:	mov    esi,0xad2a9f03
  40c34b:	push   cs
  40c34c:	lahf   
  40c34d:	lahf   
  40c34e:	sub    DWORD PTR [ebx],ebp
  40c350:	jns    0x40c37e
  40c352:	test   BYTE PTR [ebx+0x3d],cl
  40c355:	ss mov al,0xb7
  40c358:	ror    BYTE PTR [edi],0x57
  40c35b:	add    al,0x52
  40c35d:	xchg   BYTE PTR [ebp-0xd0080ec],dh
  40c363:	inc    ebp
  40c364:	lds    ebx,FWORD PTR [edx]
  40c366:	mov    dl,0x6e
  40c368:	xlat   BYTE PTR ds:[ebx]
  40c369:	mov    ecx,0xadcb9a8c
  40c36e:	mov    ds:0x25409533,eax
  40c373:	mov    gs,WORD PTR [edi]
  40c375:	sbb    al,0xca
  40c377:	clc    
  40c378:	mul    DWORD PTR [edi+0x36a2986]
  40c37e:	and    al,0x3d
  40c380:	cmp    DWORD PTR [ecx+0x24a6d1b],esi
  40c386:	bound  edx,QWORD PTR [edx-0x32f33fea]
  40c38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c38d:	or     DWORD PTR [ecx],esi
  40c38f:	out    dx,eax
  40c390:	jae    0x40c35a
  40c392:	shr    DWORD PTR [eax],cl
  40c394:	out    dx,eax
  40c395:	aaa    
  40c396:	push   edx
  40c397:	test   al,0x65
  40c399:	icebp  
  40c39a:	mov    esp,0xf5336c2d
  40c39f:	cs push ebp
  40c3a1:	cli    
  40c3a2:	dec    edi
  40c3a3:	or     esp,DWORD PTR [ebp+0x2c]
  40c3a6:	jae    0x40c3a7
  40c3a8:	sbb    edx,edx
  40c3aa:	mov    dh,0xfa
  40c3ac:	cmovns ebp,DWORD PTR [ebx+ebx*1]
  40c3b0:	pop    ebx
  40c3b1:	dec    esi
  40c3b2:	ud0    ebx,DWORD PTR [ecx-0x3c1a61da]
  40c3b9:	in     eax,dx
  40c3ba:	mov    al,0xc1
  40c3bc:	bound  ecx,QWORD PTR [eax]
  40c3be:	mov    dh,0x17
  40c3c0:	loope  0x40c3f8
  40c3c2:	fst    st(2)
  40c3c4:	push   edx
  40c3c5:	add    edi,DWORD PTR ss:[ebx-0x16]
  40c3c9:	(bad)  
  40c3ca:	sar    DWORD PTR [edx],cl
  40c3cc:	out    dx,al
  40c3cd:	sub    edi,ebp
  40c3cf:	xlat   BYTE PTR ds:[ebx]
  40c3d0:	repz loopne 0x40c3fa
  40c3d3:	mov    bh,0xe7
  40c3d5:	add    eax,0x924cff7f
  40c3da:	nop
  40c3db:	dec    eax
  40c3dc:	popa   
  40c3dd:	ds stos BYTE PTR es:[edi],al
  40c3df:	sahf   
  40c3e0:	call   0x9bca:0x178592ac
  40c3e7:	gs data16 shl BYTE PTR fs:[eax+0x4f],cl
  40c3ed:	sub    eax,0xeec251fe
  40c3f2:	xchg   ecx,eax
  40c3f3:	dec    esi
  40c3f4:	out    dx,al
  40c3f5:	push   ebp
  40c3f6:	out    dx,al
  40c3f7:	xchg   edi,eax
  40c3f8:	popa   
  40c3f9:	xchg   esi,eax
  40c3fa:	ins    DWORD PTR es:[edi],dx
  40c3fb:	stc    
  40c3fc:	hlt    
  40c3fd:	pop    eax
  40c3fe:	mov    bl,0x6d
  40c400:	xor    BYTE PTR [ecx],cl
  40c402:	mov    DWORD PTR [edx+ebx*1],eax
  40c405:	call   0xb0d0:0xe2676448
  40c40c:	nop
  40c40d:	leave  
  40c40e:	xchg   BYTE PTR [edi-0x1f],dh
  40c411:	jl     0x40c474
  40c413:	mov    DWORD PTR [eax+eiz*1],0x8a354a23
  40c41a:	pop    edx
  40c41b:	xchg   ebp,eax
  40c41c:	jb     0x40c480
  40c41e:	jnp    0x40c3a5
  40c420:	push   ebp
  40c421:	js     0x40c3b5
  40c423:	push   eax
  40c424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c425:	aaa    
  40c426:	stc    
  40c427:	stc    
  40c428:	dec    ebp
  40c429:	test   BYTE PTR [esi],cl
  40c42b:	push   ebx
  40c42c:	test   ebp,eax
  40c42e:	out    0x3,al
  40c430:	ret    0xac5c
  40c433:	push   esi
  40c434:	pop    ss
  40c435:	mov    dh,0xc4
  40c437:	sub    edx,DWORD PTR [ecx]
  40c439:	sub    al,0x98
  40c43b:	dec    ebx
  40c43c:	mov    ds:0x5052d826,al
  40c441:	mov    ebp,0xa01e6c80
  40c446:	mov    ebp,0xe096ef48
  40c44b:	icebp  
  40c44c:	xor    DWORD PTR [edx+0x28],esp
  40c44f:	sbb    eax,0xecf4c746
  40c454:	pop    ss
  40c455:	into   
  40c456:	cmp    al,0x5e
  40c458:	sbb    eax,0xcf1d2eff
  40c45d:	fs inc esi
  40c45f:	xchg   ecx,eax
  40c460:	jge    0x40c410
  40c462:	push   cs
  40c463:	push   0x15
  40c465:	repnz pushf 
  40c467:	push   ebp
  40c468:	pop    ecx
  40c469:	into   
  40c46a:	jge    0x40c42e
  40c46c:	and    ah,ch
  40c46e:	sub    eax,0xa6547311
  40c473:	mov    dl,0x8c
  40c475:	dec    edx
  40c476:	leave  
  40c477:	lahf   
  40c478:	out    0x63,al
  40c47a:	cmp    BYTE PTR [ecx+ebx*4+0x27],al
  40c47e:	test   eax,0x1eed9951
  40c483:	push   esi
  40c484:	iret   
  40c485:	mov    DWORD PTR [eax+0x3],ebx
  40c488:	jb     0x40c4dd
  40c48a:	fisub  WORD PTR [edx+edi*4]
  40c48d:	xor    eax,DWORD PTR [ebx-0x3f]
  40c490:	or     ah,bl
  40c492:	in     eax,dx
  40c493:	inc    eax
  40c494:	stos   BYTE PTR es:[edi],al
  40c495:	jo     0x40c4cd
  40c497:	cdq    
  40c498:	rcr    DWORD PTR [eax+ebx*4-0x49c2b039],0x0
  40c4a0:	mov    edi,0x6770dbf2
  40c4a5:	ins    BYTE PTR es:[edi],dx
  40c4a6:	xor    DWORD PTR [eax+0x20],edi
  40c4a9:	rcl    BYTE PTR [ecx],1
  40c4ab:	add    DWORD PTR [ebp-0x57d0a735],esi
  40c4b1:	aad    0x4f
  40c4b3:	lock gs pop esi
  40c4b6:	add    bl,BYTE PTR [ecx+edi*4-0x3a]
  40c4ba:	pop    esp
  40c4bb:	sub    eax,0xed4aa23c
  40c4c0:	das    
  40c4c1:	pop    es
  40c4c2:	push   esi
  40c4c3:	shl    DWORD PTR [ecx],0x86
  40c4c6:	mov    bl,0x79
  40c4c8:	repnz sbb esp,esi
  40c4cb:	sti    
  40c4cc:	push   es
  40c4cd:	mov    bh,0x4f
  40c4cf:	ins    BYTE PTR es:[edi],dx
  40c4d0:	gs jnp 0x40c547
  40c4d3:	and    al,0xae
  40c4d5:	and    eax,0x55a36f02
  40c4da:	fs in  al,dx
  40c4dc:	(bad)  
  40c4dd:	sbb    DWORD PTR [edx-0x17],edx
  40c4e0:	sar    DWORD PTR [eax],0xaf
  40c4e3:	pop    DWORD PTR [ecx]
  40c4e5:	bound  ebx,QWORD PTR [edi]
  40c4e7:	in     eax,dx
  40c4e8:	xlat   BYTE PTR ds:[ebx]
  40c4e9:	cmp    dl,cl
  40c4eb:	sbb    ah,BYTE PTR [edi-0x20d64c4e]
  40c4f1:	in     al,0x9c
  40c4f3:	push   ds
  40c4f4:	(bad)  
  40c4f5:	sbb    DWORD PTR [eax-0x45],ecx
  40c4f8:	test   ebx,edi
  40c4fa:	jo     0x40c51d
  40c4fc:	xor    cl,BYTE PTR [eax-0x1a]
  40c4ff:	idiv   BYTE PTR [ecx]
  40c501:	(bad)  
  40c502:	jns    0x40c537
  40c504:	xchg   edx,eax
  40c505:	and    ecx,eax
  40c507:	xor    al,0x8d
  40c509:	xchg   BYTE PTR [edi+0x3ee25d17],bh
  40c50f:	jge    0x40c4ca
  40c511:	mov    eax,0xe405398f
  40c516:	jmp    0xc8e0:0x8d8e63a2
  40c51d:	inc    ebp
  40c51e:	pop    esp
  40c51f:	dec    esi
  40c520:	bound  eax,QWORD PTR [ebx-0x7c113b6]
  40c526:	sub    eax,0x629b6b4b
  40c52b:	xor    bl,BYTE PTR [esp+ebx*4+0x36b5f09b]
  40c532:	mov    dl,0xb1
  40c534:	fdiv   st(6),st
  40c536:	ins    BYTE PTR es:[edi],dx
  40c537:	sub    ecx,ecx
  40c539:	jo     0x40c510
  40c53b:	loopne 0x40c5b0
  40c53d:	sbb    eax,0x39bf090a
  40c542:	sbb    eax,0xb66007c2
  40c547:	jg     0x40c596
  40c549:	jl     0x40c52c
  40c54b:	and    al,BYTE PTR [edi-0x3f8d7ff5]
  40c551:	rol    al,0xc0
  40c554:	rol    al,0xc0
  40c557:	rol    al,0xc0
  40c55a:	rol    al,0xc0
  40c55d:	rol    al,0xc0
  40c560:	rol    al,0xc0
  40c563:	rol    al,0xc0
  40c566:	rol    al,0xc0
  40c569:	rol    al,0xc0
  40c56c:	rol    al,0xc0
  40c56f:	rol    al,0xc0
  40c572:	rol    al,0xc0
  40c575:	rol    al,0xc0
  40c578:	rol    al,0xc0
  40c57b:	rol    al,0xc0
  40c57e:	rol    al,0xfd
  40c581:	sti    
  40c582:	(bad)  
  40c583:	push   eax
  40c584:	stc    
  40c585:	stos   DWORD PTR es:[edi],eax
  40c586:	lahf   
  40c587:	aad    0xab
  40c589:	addr16 fld1 
  40c58c:	ins    DWORD PTR es:[edi],dx
  40c58d:	sub    al,0xa6
  40c590:	xchg   ecx,eax
  40c591:	ss jo  0x40c5db
  40c594:	pop    eax
  40c595:	popa   
  40c596:	shl    BYTE PTR [edx],cl
  40c598:	mov    bl,0x6e
  40c59a:	xchg   esi,eax
  40c59b:	cmp    al,0xe8
  40c59d:	jnp    0x40c601
  40c59f:	sub    eax,0xb27606b3
  40c5a4:	dec    edi
  40c5a5:	cli    
  40c5a6:	mov    bl,0xf1
  40c5a8:	je     0x40c618
  40c5aa:	sbb    bl,BYTE PTR [edi+0x56303e5e]
  40c5b0:	xchg   ebp,eax
  40c5b1:	sar    BYTE PTR [esi+0x52ee5f04],0xa1
  40c5b8:	ds sub eax,0x9632b8b1
  40c5be:	add    dl,BYTE PTR [ebp-0x6439620b]
  40c5c4:	out    dx,al
  40c5c5:	adc    al,0x6
  40c5c7:	jae    0x40c5a1
  40c5c9:	mov    eax,0x81830166
  40c5ce:	xchg   BYTE PTR [ecx-0x48],cl
  40c5d1:	dec    esp
  40c5d2:	ins    DWORD PTR es:[edi],dx
  40c5d3:	push   0xffffffc7
  40c5d5:	sub    eax,0x1e
  40c5d8:	pop    ebx
  40c5d9:	pop    edi
  40c5da:	(bad)  
  40c5db:	cld    
  40c5dc:	and    bh,BYTE PTR [esi-0x3a]
  40c5df:	cli    
  40c5e0:	cmp    DWORD PTR [ebp-0x1d713717],ecx
  40c5e6:	rcr    dh,cl
  40c5e8:	iret   
  40c5e9:	xor    al,bl
  40c5eb:	arpl   WORD PTR [edx],si
  40c5ed:	push   0x4a
  40c5ef:	sub    DWORD PTR ds:0xd9776d7,eax
  40c5f5:	shl    ebx,0x18
  40c5f8:	and    BYTE PTR [ecx],0xa0
  40c5fb:	and    bh,BYTE PTR [ebx]
  40c5fd:	sbb    edi,ebx
  40c5ff:	retf   
  40c600:	nop
  40c601:	mov    dl,0xe4
  40c603:	jns    0x40c65d
  40c605:	rcl    DWORD PTR [eiz*1-0x25c756da],0x90
  40c60d:	add    BYTE PTR [eax+0x638e22df],ch
  40c613:	add    al,BYTE PTR [esi]
  40c615:	pop    edx
  40c616:	push   0x8ab648b8
  40c61b:	add    DWORD PTR [ebx+0x40439ee6],ebx
  40c621:	test   DWORD PTR [esi+0x25],edx
  40c624:	push   eax
  40c625:	mov    ch,0x98
  40c627:	mov    eax,0x18791a5f
  40c62c:	arpl   dx,ax
  40c62e:	hlt    
  40c62f:	inc    eax
  40c630:	jae    0x40c601
  40c632:	outs   dx,BYTE PTR ds:[esi]
  40c633:	mov    WORD PTR [esi+0x502fe943],ss
  40c639:	sar    BYTE PTR [esi],1
  40c63b:	test   DWORD PTR [edx],esi
  40c63d:	mov    eax,0x3df5acab
  40c642:	sub    bh,BYTE PTR ds:0x2eb1a8f1
  40c648:	pushf  
  40c649:	add    eax,0x1c0d4cd8
  40c64e:	push   edx
  40c64f:	jb     0x40c5e5
  40c651:	xor    ch,BYTE PTR [ebp+0x3d0ca2fa]
  40c657:	xchg   edx,eax
  40c658:	icebp  
  40c659:	inc    ebx
  40c65a:	inc    esi
  40c65b:	not    ah
  40c65d:	push   0xf45fb724
  40c662:	xor    BYTE PTR [esp+edi*1-0x2f450d66],bh
  40c669:	(bad)  
  40c66a:	test   BYTE PTR [esi-0x6c9159ef],ah
  40c670:	push   ebx
  40c671:	sar    DWORD PTR [ecx],cl
  40c673:	add    eax,0xcde82
  40c678:	jns    0x40c615
  40c67a:	sbb    ebx,DWORD PTR [edi]
  40c67c:	ins    BYTE PTR es:[edi],dx
  40c67d:	adc    esp,DWORD PTR [ebp+0x35]
  40c680:	cmp    DWORD PTR [edi+ecx*4],edi
  40c683:	loopne 0x40c645
  40c685:	mov    al,ds:0xfab98e16
  40c68a:	pop    eax
  40c68b:	mov    cl,0xdf
  40c68d:	cmp    DWORD PTR [ecx+esi*2+0x56],ecx
  40c691:	(bad)  
  40c692:	adc    DWORD PTR [ebp+0x534570ee],esi
  40c698:	jb     0x40c685
  40c69a:	jb     0x40c621
  40c69c:	jmp    0x40c678
  40c69e:	inc    esi
  40c69f:	inc    edx
  40c6a0:	and    dl,cl
  40c6a2:	jp     0x40c654
  40c6a4:	ins    BYTE PTR es:[edi],dx
  40c6a5:	into   
  40c6a6:	sbb    edi,DWORD PTR [esi]
  40c6a8:	adc    edi,ebp
  40c6aa:	xlat   BYTE PTR ds:[ebx]
  40c6ab:	dec    ebp
  40c6ac:	dec    ecx
  40c6ad:	jno    0x40c661
  40c6af:	outs   dx,DWORD PTR ds:[esi]
  40c6b0:	mov    ecx,0x3283e804
  40c6b5:	lock test BYTE PTR [edi-0x3129a2e4],0x5d
  40c6bd:	inc    edx
  40c6be:	add    DWORD PTR ds:0xb33f6904,esi
  40c6c4:	sub    al,0x28
  40c6c6:	not    bl
  40c6c8:	inc    eax
  40c6c9:	imul   edx,DWORD PTR [esi-0x1539efa7],0x5d847505
  40c6d3:	rol    BYTE PTR [ecx-0x48079aa6],cl
  40c6d9:	mov    eax,ds:0x765deb51
  40c6de:	mov    dl,0xaf
  40c6e0:	lds    esi,FWORD PTR ds:0x82baa416
  40c6e6:	push   eax
  40c6e7:	enter  0x8f9,0x6a
  40c6eb:	and    BYTE PTR [edx],0xff
  40c6ee:	xor    bh,al
  40c6f0:	(bad)  
  40c6f1:	pop    esp
  40c6f2:	cli    
  40c6f3:	jno    0x40c74a
  40c6f5:	ins    BYTE PTR es:[edi],dx
  40c6f6:	cmp    DWORD PTR [edx],ebx
  40c6f8:	mov    cl,0xe6
  40c6fa:	fld    QWORD PTR [edx]
  40c6fc:	lock jg 0x40c6aa
  40c6ff:	dec    edi
  40c700:	jns    0x40c6c9
  40c702:	hlt    
  40c703:	retf   0x8cce
  40c706:	mov    ch,0xcf
  40c708:	xchg   DWORD PTR [edi+0x14c39330],edi
  40c70e:	xchg   edx,eax
  40c70f:	inc    ebp
  40c710:	push   esi
  40c711:	mov    DWORD PTR [esi-0x7a],esi
  40c714:	icebp  
  40c715:	pop    ebp
  40c716:	xor    esp,DWORD PTR [eax]
  40c718:	jne    0x40c6db
  40c71a:	shl    DWORD PTR [ebx],0xdc
  40c71d:	ja     0x40c765
  40c71f:	repnz mov bl,0x26
  40c722:	test   BYTE PTR [edi+ebx*1-0x38],dl
  40c726:	iret   
  40c727:	and    esi,DWORD PTR [ecx-0x1c38aca]
  40c72d:	mov    edx,0xd41553b9
  40c732:	test   ah,dh
  40c734:	xchg   ebp,eax
  40c735:	aas    
  40c736:	js     0x40c76d
  40c738:	xor    DWORD PTR ds:0xe626d72,esi
  40c73e:	rcl    BYTE PTR [eax+0x6636cd11],0x18
  40c745:	in     al,dx
  40c746:	gs jns 0x40c7bd
  40c749:	jle    0x40c70e
  40c74b:	aaa    
  40c74c:	call   0x2f338379
  40c751:	enter  0xc334,0x8a
  40c755:	push   0x7c
  40c757:	cmp    BYTE PTR [ebp+0x18],ch
  40c75a:	fcomi  st,st(3)
  40c75c:	jae    0x40c7d9
  40c75e:	dec    edx
  40c75f:	add    ebp,DWORD PTR [ebp+0x1967c6f9]
  40c765:	(bad)
  40c769:	adc    al,0x49
  40c76b:	mov    bh,0xad
  40c76d:	popf   
  40c76e:	stos   BYTE PTR es:[edi],al
  40c76f:	and    DWORD PTR [edi],esi
  40c771:	call   eax
  40c773:	inc    ecx
  40c774:	add    eax,DWORD PTR [edi-0x3c600eba]
  40c77a:	or     DWORD PTR [eax],ebp
  40c77c:	inc    esp
  40c77d:	mov    dl,0xbf
  40c77f:	and    esi,DWORD PTR [edx+0x30]
  40c782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c783:	cwde   
  40c784:	mov    ah,0x3
  40c786:	int    0x34
  40c788:	icebp  
  40c789:	mov    ds:0x8f60424e,eax
  40c78e:	stos   DWORD PTR es:[edi],eax
  40c78f:	push   cs
  40c790:	outs   dx,BYTE PTR ds:[esi]
  40c791:	sub    al,0x1c
  40c793:	repz in al,0x19
  40c796:	rol    BYTE PTR ds:0x8dbbbc63,cl
  40c79c:	push   eax
  40c79d:	xor    BYTE PTR [eax+0x3c1cf88b],bl
  40c7a3:	fbstp  TBYTE PTR [eax+0xe]
  40c7a6:	push   edi
  40c7a7:	xchg   cl,dh
  40c7a9:	push   ecx
  40c7aa:	cmp    dh,ch
  40c7ac:	fisub  WORD PTR [edx+0x44]
  40c7af:	push   ss
  40c7b0:	imul   ebx,DWORD PTR [esi+0x4264787a],0xedbeebeb
  40c7ba:	enter  0xabcd,0x2f
  40c7be:	aaa    
  40c7bf:	jecxz  0x40c7f4
  40c7c1:	out    dx,al
  40c7c2:	mov    ecx,0x77e04d77
  40c7c7:	mov    DWORD PTR [ecx+0x30],esi
  40c7ca:	jmp    0x40c7e4
  40c7cc:	add    ah,BYTE PTR ds:[ebx+0x3c3c3169]
  40c7d3:	ja     0x40c7dd
  40c7d5:	iret   
  40c7d6:	sahf   
  40c7d7:	mov    BYTE PTR [edi+0xc688a74],ah
  40c7dd:	sbb    al,0x1b
  40c7df:	lahf   
  40c7e0:	cmp    bl,BYTE PTR [ebp+0x2c61bc07]
  40c7e6:	and    BYTE PTR [ebx+0x3d],dh
  40c7e9:	mov    esp,0xf46ed85e
  40c7ee:	int3   
  40c7ef:	jecxz  0x40c79e
  40c7f1:	fwait
  40c7f2:	inc    edx
  40c7f3:	loopne 0x40c810
  40c7f5:	ds mov ecx,0x84126a8e
  40c7fb:	xchg   esp,eax
  40c7fc:	xchg   esp,eax
  40c7fd:	aam    0xac
  40c7ff:	div    DWORD PTR [edi+edx*8-0x5e]
  40c803:	or     DWORD PTR [ebx],esp
  40c805:	inc    edi
  40c806:	in     al,dx
  40c807:	or     dl,BYTE PTR [ecx+0x59]
  40c80a:	mov    ecx,0xa7c8107c
  40c80f:	stc    
  40c810:	cmp    al,cl
  40c812:	mov    eax,ds:0xea77b7f8
  40c817:	xchg   edi,eax
  40c818:	jmp    0x40c82c
  40c81a:	pop    edi
  40c81b:	push   esi
  40c81c:	xchg   dl,ah
  40c81e:	rcl    ah,1
  40c820:	adc    dl,cl
  40c822:	mov    ecx,0xb4770e2d
  40c827:	das    
  40c828:	and    ch,BYTE PTR [ecx]
  40c82a:	inc    esi
  40c82b:	addr16 dec ebp
  40c82d:	xchg   edi,eax
  40c82e:	add    al,0x15
  40c830:	gs das 
  40c832:	into   
  40c833:	mov    al,0xf9
  40c835:	loop   0x40c893
  40c837:	ins    BYTE PTR es:[edi],dx
  40c838:	popf   
  40c839:	push   esi
  40c83a:	or     ecx,DWORD PTR [esp+eax*8]
  40c83d:	and    ecx,DWORD PTR [ecx+0x64]
  40c840:	(bad)  [ecx]
  40c842:	dec    ebx
  40c843:	cmp    DWORD PTR [ecx+0x9],0x46b4d028
  40c84a:	test   eax,0x901b87e7
  40c84f:	mov    ds:0x3a61ef58,eax
  40c854:	mov    ecx,0x773b11d1
  40c859:	in     al,dx
  40c85a:	dec    ebp
  40c85b:	sbb    DWORD PTR [edx],esi
  40c85d:	adc    dh,0x78
  40c860:	popf   
  40c861:	idiv   BYTE PTR [edi-0x14]
  40c864:	push   ebx
  40c865:	sbb    dh,BYTE PTR [eax]
  40c867:	jp     0x40c8e2
  40c869:	mov    esp,0xf04a60c8
  40c86e:	mov    ebx,0x1780e5cf
  40c873:	dec    esi
  40c874:	out    dx,eax
  40c875:	shr    BYTE PTR [ebx+0x79ba9336],cl
  40c87b:	pop    eax
  40c87c:	push   cs
  40c87d:	pop    ebx
  40c87e:	or     al,0xf4
  40c880:	test   edx,esp
  40c882:	hlt    
  40c883:	pop    ecx
  40c884:	inc    esi
  40c885:	add    ecx,edx
  40c887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c888:	fisub  WORD PTR ds:0xd28b458b
  40c88e:	stos   DWORD PTR es:[edi],eax
  40c88f:	icebp  
  40c890:	mov    ah,0x6b
  40c892:	xchg   esi,eax
  40c893:	xlat   BYTE PTR ds:[ebx]
  40c894:	xchg   esi,eax
  40c895:	cdq    
  40c896:	mov    ch,0xde
  40c898:	mov    edx,0x22c11bda
  40c89d:	jl     0x40c8d9
  40c89f:	(bad)  
  40c8a0:	fidiv  DWORD PTR ss:[esi+0x2c]
  40c8a4:	sub    dh,BYTE PTR [edi]
  40c8a6:	sti    
  40c8a7:	xchg   ebx,eax
  40c8a8:	popa   
  40c8a9:	call   0x6b01:0x833e6e36
  40c8b0:	retf   
  40c8b1:	and    esi,eax
  40c8b3:	aas    
  40c8b4:	jle    0x40c8c5
  40c8b6:	push   edx
  40c8b7:	mov    esi,0xe8bcdc48
  40c8bc:	sbb    DWORD PTR [ebx+0x5e],ecx
  40c8bf:	fidiv  DWORD PTR [edi+0x32]
  40c8c2:	shl    BYTE PTR [edi+esi*2+0x47c82cc7],cl
  40c8c9:	xchg   dl,ah
  40c8cb:	and    eax,0xb3c2093c
  40c8d0:	daa    
  40c8d1:	out    0xa0,eax
  40c8d3:	adc    edi,DWORD PTR [esi+0x5a]
  40c8d6:	shr    BYTE PTR [edi+0x55],1
  40c8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8da:	jle    0x40c8bc
  40c8dc:	jecxz  0x40c8fb
  40c8de:	adc    bl,BYTE PTR [eax]
  40c8e0:	popa   
  40c8e1:	pop    esi
  40c8e2:	shr    ebx,1
  40c8e4:	lds    edi,FWORD PTR [esi]
  40c8e6:	jmp    0xc3b5:0x76ea9a5f
  40c8ed:	adc    al,0x62
  40c8ef:	dec    esi
  40c8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f1:	mov    ch,0xe7
  40c8f3:	in     al,dx
  40c8f4:	(bad)  
  40c8f5:	punpckhbw mm0,mm7
  40c8f8:	xor    cl,dh
  40c8fa:	fimul  WORD PTR [ecx]
  40c8fc:	nop
  40c8fd:	jge    0x40c8fd
  40c8ff:	ja     0x40c964
  40c901:	fisttp DWORD PTR [ebp-0x1844f533]
  40c907:	push   0xfc7a42df
  40c90c:	push   edx
  40c90d:	mov    dh,0xda
  40c90f:	mov    ch,0x55
  40c911:	cmp    DWORD PTR [esi],0xffffffaf
  40c914:	xor    cl,dh
  40c916:	lods   eax,DWORD PTR ds:[esi]
  40c917:	xchg   esp,eax
  40c918:	jb     0x40c8ed
  40c91a:	sbb    eax,0xd217c7a6
  40c91f:	adc    bh,BYTE PTR [ecx+0x5f]
  40c922:	and    dh,BYTE PTR [eax+0x4b993ada]
  40c928:	int3   
  40c929:	cmc    
  40c92a:	cwde   
  40c92b:	sbb    DWORD PTR [ebp-0x1f90a676],esp
  40c931:	mov    ebp,0xa20036aa
  40c936:	and    bh,dl
  40c938:	js     0x40c994
  40c93a:	cli    
  40c93b:	js     0x40c9b7
  40c93d:	sbb    edi,ecx
  40c93f:	cs dec eax
  40c941:	int3   
  40c942:	in     al,0x5
  40c944:	push   0x17
  40c946:	and    eax,DWORD PTR [edx-0x5a]
  40c949:	mov    eax,ds:0x54124397
  40c94e:	mov    cl,0x2c
  40c950:	enter  0x4ffd,0x1
  40c954:	dec    eax
  40c955:	sub    dh,al
  40c957:	or     BYTE PTR [edi+edx*8+0x8],dl
  40c95b:	adc    BYTE PTR [esi-0x2225e42],ah
  40c961:	xchg   esi,eax
  40c962:	ret    0x9db6
  40c965:	sbb    bl,al
  40c967:	pusha  
  40c968:	jl     0x40c906
  40c96a:	and    DWORD PTR [edx],edx
  40c96c:	or     BYTE PTR [ecx],0xa7
  40c96f:	sub    DWORD PTR [esi-0x45],0xffffffa7
  40c973:	mov    esi,0x3b319876
  40c978:	pop    ds
  40c979:	mov    edx,0xdd958cbc
  40c97e:	(bad)
  40c981:	sub    al,cl
  40c983:	push   eax
  40c984:	iret   
  40c985:	ins    BYTE PTR es:[edi],dx
  40c986:	idiv   BYTE PTR [ebx]
  40c988:	push   ecx
  40c989:	adc    al,0xb3
  40c98b:	dec    eax
  40c98c:	sub    ebp,DWORD PTR [eax]
  40c98e:	cs jns 0x40c9ea
  40c991:	inc    edi
  40c992:	inc    esi
  40c993:	test   al,0x5e
  40c995:	push   es
  40c996:	jl     0x40c9a7
  40c998:	cmp    DWORD PTR [ecx],ebx
  40c99a:	xchg   esi,eax
  40c99b:	js     0x40c9d3
  40c99d:	pop    ebx
  40c99e:	push   0xffffff84
  40c9a0:	loop   0x40c971
  40c9a2:	ret    0x2128
  40c9a5:	loop   0x40c9c6
  40c9a7:	mov    ebp,0x6509afe8
  40c9ac:	repnz xchg esi,eax
  40c9ae:	aas    
  40c9af:	push   edx
  40c9b0:	xchg   DWORD PTR [ebp+0x6f227bfb],esi
  40c9b6:	sub    eax,0x7cc7d07a
  40c9bb:	lea    esi,[esi]
  40c9bd:	pop    esi
  40c9be:	add    eax,0x92f28655
  40c9c3:	sub    BYTE PTR [edx-0x63],0x33
  40c9c7:	imul   esp,DWORD PTR [edi],0x61f88d08
  40c9cd:	mov    DWORD PTR [ecx+0x2e],edx
  40c9d0:	mov    ds:0x5200d95b,al
  40c9d5:	push   eax
  40c9d6:	mov    ch,0xb2
  40c9d8:	mov    ds,ebx
  40c9da:	outs   dx,BYTE PTR ds:[esi]
  40c9db:	les    ebp,FWORD PTR [ebx+0x746998a0]
  40c9e1:	call   0xcf92:0x7ff69fd5
  40c9e8:	repnz pusha 
  40c9ea:	push   edx
  40c9eb:	pop    eax
  40c9ec:	xlat   BYTE PTR ds:[ebx]
  40c9ed:	xor    al,0xae
  40c9ef:	xchg   edx,eax
  40c9f0:	fldenv [ecx]
  40c9f2:	xchg   BYTE PTR [esi+0x49814745],bl
  40c9f8:	pop    edx
  40c9f9:	rol    BYTE PTR [ebx+0x6d],cl
  40c9fc:	repnz add ebx,DWORD PTR [ebx]
  40c9ff:	daa    
  40ca00:	sub    eax,0x44128d72
  40ca05:	add    dh,BYTE PTR [ebp+0x3b2d7e01]
  40ca0b:	xchg   esi,eax
  40ca0c:	add    al,0x40
  40ca0e:	mov    ecx,0x606fede7
  40ca13:	repz je 0x40ca5d
  40ca16:	ds (bad) 
  40ca18:	jo     0x40c9e8
  40ca1a:	mov    esi,0x52fdda56
  40ca1f:	push   0xfffffff0
  40ca21:	mov    esp,0x991da0d2
  40ca26:	dec    edx
  40ca27:	(bad)  
  40ca28:	cmp    cl,al
  40ca2a:	mov    al,ds:0x19ae7280
  40ca2f:	cmp    al,0x2d
  40ca31:	inc    ebp
  40ca32:	dec    esp
  40ca33:	aas    
  40ca34:	xchg   edx,eax
  40ca35:	cwde   
  40ca36:	inc    ebx
  40ca37:	jo     0x40c9c2
  40ca39:	pop    es
  40ca3a:	xchg   ebx,eax
  40ca3b:	xor    ah,ch
  40ca3d:	sti    
  40ca3e:	test   BYTE PTR [eax],0x7e
  40ca41:	mov    cl,0x59
  40ca43:	ins    BYTE PTR es:[edi],dx
  40ca44:	sub    eax,0xe11511c7
  40ca49:	inc    edx
  40ca4a:	mov    dl,0x31
  40ca4c:	dec    esi
  40ca4d:	xchg   edi,eax
  40ca4e:	xchg   ecx,eax
  40ca4f:	mov    ah,0x89
  40ca51:	cmc    
  40ca52:	imul   DWORD PTR [edx+0x6d444b79]
  40ca58:	xchg   esp,eax
  40ca59:	add    al,0xdc
  40ca5b:	and    esp,DWORD PTR [esi+0x434d2b7f]
  40ca61:	scas   al,BYTE PTR es:[edi]
  40ca62:	xchg   ebp,eax
  40ca63:	daa    
  40ca64:	push   ds
  40ca65:	or     DWORD PTR [edi+0x145a42ec],ebp
  40ca6b:	and    edx,ebp
  40ca6d:	jecxz  0x40cab9
  40ca6f:	sub    esi,DWORD PTR [ebx+eiz*8+0x7c16591e]
  40ca76:	scas   eax,DWORD PTR es:[edi]
  40ca77:	cs clc 
  40ca79:	push   0xffffff90
  40ca7b:	or     edi,DWORD PTR [ebp+0x6d078702]
  40ca81:	aam    0x90
  40ca83:	pop    es
  40ca84:	(bad)  
  40ca85:	leave  
  40ca86:	mov    ebp,DWORD PTR [edx+0x62c18699]
  40ca8c:	xlat   BYTE PTR ds:[ebx]
  40ca8d:	mov    ebp,0x4e39183f
  40ca92:	mov    ?,WORD PTR [ebp+edx*8+0x69124503]
  40ca99:	push   edx
  40ca9a:	mov    edi,DWORD PTR [edx+eax*8+0x47ce9eb0]
  40caa1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa3:	inc    edx
  40caa4:	jne    0x40ca52
  40caa6:	push   0x2d
  40caa8:	cdq    
  40caa9:	sbb    al,0xbf
  40caab:	test   eax,0xad5319e2
  40cab0:	or     al,0x93
  40cab2:	stos   BYTE PTR es:[edi],al
  40cab3:	or     al,0x78
  40cab5:	cmp    DWORD PTR [eax-0x73],esi
  40cab8:	lods   eax,DWORD PTR ds:[esi]
  40cab9:	shr    DWORD PTR [esi+0x35c3407c],0x7d
  40cac0:	imul   esp,DWORD PTR [ebx],0x42a25b93
  40cac6:	repz call 0x2eb2:0x6a97f98b
  40cace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cacf:	cmp    edi,esi
  40cad1:	mov    es,WORD PTR es:[edi+edx*4+0x16af5bd5]
  40cad9:	mov    ah,ch
  40cadb:	cdq    
  40cadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cadd:	adc    ch,BYTE PTR [eax-0x21b0a0f1]
  40cae3:	push   0x16
  40cae5:	loop   0x40cacd
  40cae7:	mov    dh,0x85
  40cae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caea:	das    
  40caeb:	nop
  40caec:	ror    BYTE PTR [esi-0x24],1
  40caef:	xor    edi,eax
  40caf1:	or     BYTE PTR [ecx+0x525cc790],0xd4
  40caf8:	xor    dh,BYTE PTR [eax]
  40cafa:	adc    BYTE PTR ds:0xb9d393c,0x88
  40cb01:	add    DWORD PTR [ebp+0x2a],esp
  40cb04:	mov    ebx,0x7a9b2cab
  40cb09:	adc    ebx,DWORD PTR [edi]
  40cb0b:	and    edx,DWORD PTR [ebp-0x39]
  40cb0e:	sar    DWORD PTR [ecx+0x7d],0x12
  40cb12:	nop
  40cb13:	jp     0x40ca97
  40cb15:	sbb    DWORD PTR [edi-0x1d],ebp
  40cb18:	add    al,0xc9
  40cb1a:	add    cl,BYTE PTR [ecx-0x1689a689]
  40cb20:	or     ch,BYTE PTR [edx-0x25]
  40cb23:	fwait
  40cb24:	ds test eax,0x95b5776c
  40cb2a:	cmp    ch,BYTE PTR [edi]
  40cb2c:	or     BYTE PTR [eax-0x28229350],0xda
  40cb33:	xchg   edx,eax
  40cb34:	push   eax
  40cb35:	jp     0x40cbb4
  40cb37:	xchg   BYTE PTR [esi],ah
  40cb39:	push   esp
  40cb3a:	xor    edx,ebx
  40cb3c:	dec    esp
  40cb3d:	pop    ds
  40cb3e:	in     eax,dx
  40cb3f:	cmp    edx,DWORD PTR [esi-0x29f3cd01]
  40cb45:	pusha  
  40cb46:	mov    eax,0xecfd44f
  40cb4b:	jmp    0xca20:0x8ea071be
  40cb52:	sahf   
  40cb53:	jge    0x40cba5
  40cb55:	dec    edx
  40cb56:	popf   
  40cb57:	into   
  40cb58:	xlat   BYTE PTR ds:[ebx]
  40cb59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb5a:	shl    BYTE PTR [eax+0x7e662620],0xa4
  40cb61:	mov    eax,0x5432922
  40cb66:	or     eax,0x65a17993
  40cb6b:	neg    DWORD PTR [ecx+ecx*1-0x4178b146]
  40cb72:	je     0x40cb0e
  40cb74:	loope  0x40cbdb
  40cb76:	es test al,0x1b
  40cb79:	and    DWORD PTR [ebp-0x45c7c3e4],edx
  40cb7f:	pop    es
  40cb80:	mov    al,0x35
  40cb82:	mov    ds,WORD PTR [eax+0x3f]
  40cb85:	rcr    DWORD PTR [edx],1
  40cb87:	aaa    
  40cb88:	cdq    
  40cb89:	mov    cl,0x34
  40cb8b:	xchg   DWORD PTR [edi+0x60f1ed9d],edx
  40cb91:	xchg   ebx,eax
  40cb92:	mov    edx,0x9ba9462c
  40cb97:	inc    ebp
  40cb98:	dec    ebp
  40cb99:	mov    ?,WORD PTR [esi-0x48]
  40cb9c:	sbb    al,0xc
  40cb9e:	xchg   ebp,eax
  40cb9f:	shl    ecx,cl
  40cba1:	inc    edi
  40cba2:	inc    eax
  40cba3:	sbb    edi,0x5f2b511f
  40cba9:	lods   al,BYTE PTR ds:[esi]
  40cbaa:	inc    esp
  40cbab:	pop    edx
  40cbac:	xor    eax,0xfb5348ec
  40cbb1:	(bad)  
  40cbb2:	xchg   esp,eax
  40cbb3:	cs xor al,0x1e
  40cbb6:	xchg   ecx,ebx
  40cbb8:	scas   al,BYTE PTR es:[edi]
  40cbb9:	mov    eax,0x7e795e8b
  40cbbe:	or     ebx,eax
  40cbc0:	imul   edi,esi,0xffffffa8
  40cbc3:	add    cl,al
  40cbc5:	loopne 0x40cc07
  40cbc7:	push   ebx
  40cbc8:	fbld   TBYTE PTR [edi+0x537667b6]
  40cbce:	mov    ebp,esi
  40cbd0:	es xchg ebp,eax
  40cbd2:	and    al,bl
  40cbd4:	lods   eax,DWORD PTR ds:[esi]
  40cbd5:	xor    ebp,edi
  40cbd7:	das    
  40cbd8:	dec    esi
  40cbd9:	stos   BYTE PTR es:[edi],al
  40cbda:	xchg   esp,eax
  40cbdb:	daa    
  40cbdc:	add    al,0xf8
  40cbde:	cwde   
  40cbdf:	adc    BYTE PTR [edx+0x7e3baa65],dl
  40cbe5:	xor    ebp,DWORD PTR [ebp-0x2e8d3149]
  40cbeb:	out    0x30,al
  40cbed:	and    BYTE PTR [edi-0x6b5485d5],ch
  40cbf3:	(bad)  
  40cbf4:	sub    BYTE PTR [esi],0x5f
  40cbf7:	scas   eax,DWORD PTR es:[edi]
  40cbf8:	sub    eax,0x9c2fb984
  40cbfd:	pop    ebp
  40cbfe:	inc    ecx
  40cbff:	jns    0x40cc54
  40cc01:	aaa    
  40cc02:	bound  ebp,QWORD PTR [esi+0x347e4b71]
  40cc08:	inc    ebx
  40cc09:	cdq    
  40cc0a:	mov    dh,0x8b
  40cc0c:	cli    
  40cc0d:	es into 
  40cc0f:	outs   dx,DWORD PTR ds:[esi]
  40cc10:	fisubr WORD PTR ss:[edx+0xb]
  40cc14:	and    edi,DWORD PTR [esi]
  40cc16:	aas    
  40cc17:	cld    
  40cc18:	test   esi,ebp
  40cc1a:	nop
  40cc1b:	xor    ecx,DWORD PTR [eax+0x224bf905]
  40cc21:	js     0x40cc89
  40cc23:	test   eax,0x90ae1c00
  40cc28:	std    
  40cc29:	cli    
  40cc2a:	mov    ch,0x22
  40cc2c:	repz mov bl,0x33
  40cc2f:	(bad)  
  40cc30:	stc    
  40cc31:	call   0x87a2b4f0
  40cc36:	out    0x72,eax
  40cc38:	sub    DWORD PTR [ebp+0x24],0xc765ce9a
  40cc3f:	sbb    DWORD PTR [eax],0xffffffd5
  40cc42:	rol    ch,0x76
  40cc45:	xor    bh,bh
  40cc47:	jb     0x40cca1
  40cc49:	lock pop ss
  40cc4b:	pop    ecx
  40cc4c:	mov    dh,0x24
  40cc4e:	sub    bl,BYTE PTR [esi]
  40cc50:	stc    
  40cc51:	mov    BYTE PTR [eax],ah
  40cc53:	test   al,0x51
  40cc55:	jg     0x40cc0e
  40cc57:	test   bl,ah
  40cc59:	push   cs
  40cc5a:	idiv   BYTE PTR [edi]
  40cc5c:	ja     0x40cc91
  40cc5e:	push   edx
  40cc5f:	xor    eax,0x42ca8e6a
  40cc64:	sub    ebp,DWORD PTR [ebx-0x6d]
  40cc67:	fbstp  TBYTE PTR [esi]
  40cc69:	and    BYTE PTR [ebp+0x73b3be9c],cl
  40cc6f:	cs pop eax
  40cc72:	xchg   ebp,eax
  40cc73:	mov    esi,0x4cacde50
  40cc78:	dec    ecx
  40cc79:	xor    DWORD PTR [edx-0x367c4e55],edx
  40cc7f:	iret   
  40cc80:	lea    esp,[eax+0x38664445]
  40cc86:	test   al,0xe7
  40cc88:	das    
  40cc89:	xchg   DWORD PTR [esi+0xd8e4a07],esi
  40cc8f:	in     eax,dx
  40cc90:	lahf   
  40cc91:	pop    esi
  40cc92:	xchg   esi,eax
  40cc93:	dec    eax
  40cc94:	(bad)  
  40cc95:	aaa    
  40cc96:	xchg   esi,eax
  40cc97:	inc    esi
  40cc98:	cmp    edx,DWORD PTR [eax+0x48617e9f]
  40cc9e:	pop    ds
  40cc9f:	ret    
  40cca0:	jmp    0xd291b114
  40cca5:	dec    ebp
  40cca6:	retf   0xca0a
  40cca9:	mov    edx,0x8ebb56d7
  40ccae:	sub    bh,BYTE PTR [eax-0x54]
  40ccb1:	jnp    0x40cccd
  40ccb3:	adc    edi,edx
  40ccb5:	sub    BYTE PTR [edx+0x6e442ba2],dl
  40ccbb:	sbb    bl,ah
  40ccbd:	inc    edx
  40ccbe:	bound  esp,QWORD PTR [eax-0x28a146cb]
  40ccc4:	lods   eax,DWORD PTR ds:[esi]
  40ccc5:	pop    esi
  40ccc6:	jns    0x40cc64
  40ccc8:	mov    cl,0x5d
  40ccca:	popa   
  40cccb:	sub    BYTE PTR [edi+ecx*1],ah
  40ccce:	jp     0x40ccfd
  40ccd0:	push   gs
  40ccd2:	xchg   ebp,eax
  40ccd3:	test   ecx,edx
  40ccd5:	fisubr DWORD PTR gs:[eax+0x7fc12610]
  40ccdc:	push   edx
  40ccdd:	push   0xffffffa7
  40ccdf:	loopne 0x40ccf8
  40cce1:	sbb    eax,0x3acd2d98
  40cce6:	inc    ebp
  40cce7:	sbb    bh,BYTE PTR [edx-0x21]
  40ccea:	jmp    0xc8d1:0x9585c6e6
  40ccf1:	mov    edx,0x3b52250a
  40ccf6:	inc    ebx
  40ccf7:	fist   DWORD PTR [ebp-0x6a]
  40ccfa:	mov    edx,0xe0aa5c6d
  40ccff:	jmp    0x7b8ab275
  40cd04:	push   ebx
  40cd05:	xchg   edx,ecx
  40cd07:	test   bl,al
  40cd09:	jo     0x40cd2a
  40cd0b:	aaa    
  40cd0c:	push   ds
  40cd0d:	cmc    
  40cd0e:	mov    cl,0xe9
  40cd10:	or     al,0x0
  40cd12:	jg     0x40cd0b
  40cd14:	xchg   ebp,eax
  40cd15:	mov    WORD PTR [edx],?
  40cd17:	and    esi,esp
  40cd19:	jl     0x40ccbe
  40cd1b:	std    
  40cd1c:	imul   esi,DWORD PTR [edi-0x76dd894b],0x6d
  40cd23:	mov    al,0xea
  40cd25:	xor    DWORD PTR [esi-0x2669a49a],0x5d
  40cd2c:	lahf   
  40cd2d:	jp     0x40cd55
  40cd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd30:	xchg   ebx,eax
  40cd31:	cs sub al,al
  40cd34:	outs   dx,DWORD PTR ds:[esi]
  40cd35:	xor    al,0x86
  40cd37:	jmp    0xf41f:0x7cd0b841
  40cd3e:	inc    edi
  40cd3f:	iret   
  40cd40:	sub    DWORD PTR [edi+ecx*8+0x3fffb3e6],ebp
  40cd47:	jmp    0xd881170
  40cd4c:	jmp    0xc0c77957
  40cd51:	rol    al,0xc0
  40cd54:	rol    al,0xc0
  40cd57:	rol    al,0xc0
  40cd5a:	rol    al,0xc0
  40cd5d:	rol    al,0xc0
  40cd60:	rol    al,0xc0
  40cd63:	rol    al,0xc0
  40cd66:	rol    al,0xc0
  40cd69:	rol    al,0xc0
  40cd6c:	rol    al,0xc0
  40cd6f:	shl    BYTE PTR [eax+0x621fdbde],0xbe
  40cd76:	or     al,0x8
  40cd78:	mov    dh,BYTE PTR [ecx+ebx*4-0x17fbbcdb]
  40cd7f:	inc    ecx
  40cd80:	dec    edi
  40cd81:	(bad)  
  40cd82:	je     0x40cd4d
  40cd84:	ins    DWORD PTR es:[edi],dx
  40cd85:	jmp    0xa51e:0xa3f9ceaa
  40cd8c:	mov    al,ds:0x42a7a84a
  40cd91:	stos   BYTE PTR es:[edi],al
  40cd92:	mov    bh,0x4
  40cd94:	inc    edi
  40cd95:	mov    ebx,0xe75504cf
  40cd9a:	mov    edi,0xb60c6fd0
  40cd9f:	loop   0x40cd33
  40cda1:	ins    DWORD PTR es:[edi],dx
  40cda2:	xor    ebx,DWORD PTR [eax]
  40cda4:	push   edx
  40cda5:	enter  0x87e,0x15
  40cda9:	pop    ds
  40cdaa:	jg     0x40cd4c
  40cdac:	in     eax,0x22
  40cdae:	jb     0x40cd45
  40cdb0:	imul   eax,DWORD PTR [edi],0x39baa875
  40cdb6:	jae    0x40cddb
  40cdb8:	dec    ecx
  40cdb9:	xchg   ebx,eax
  40cdba:	xchg   edx,eax
  40cdbb:	jl     0x40ce15
  40cdbd:	stos   BYTE PTR es:[edi],al
  40cdbe:	mov    ch,0xb2
  40cdc0:	and    BYTE PTR [edi],bl
  40cdc2:	push   ebx
  40cdc3:	ret    0xcfa0
  40cdc6:	push   ds
  40cdc7:	nop
  40cdc8:	push   edx
  40cdc9:	shl    BYTE PTR [eax-0x1245653a],1
  40cdcf:	nop
  40cdd0:	pop    ebp
  40cdd1:	mov    ds:0xfdde0c7e,eax
  40cdd6:	bound  ebx,QWORD PTR [eax+0x38757319]
  40cddc:	(bad)  
  40cddd:	lock jmp 0x40ce0b
  40cde0:	(bad)  
  40cde1:	out    dx,al
  40cde2:	jbe    0x40cdaa
  40cde4:	les    edi,FWORD PTR [edi+0x6a]
  40cde7:	mov    ch,0xc5
  40cde9:	call   0xdbf4:0x81641319
  40cdf0:	xor    dh,bh
  40cdf2:	cdq    
  40cdf3:	mov    DWORD PTR [ebx],ebx
  40cdf5:	not    BYTE PTR [ebx]
  40cdf7:	xchg   ebp,eax
  40cdf8:	push   ecx
  40cdf9:	pop    ebx
  40cdfa:	in     eax,dx
  40cdfb:	pop    eax
  40cdfc:	or     BYTE PTR ds:[esi-0x3eef4f89],dh
  40ce03:	xchg   ebp,eax
  40ce04:	xor    esp,ebp
  40ce06:	adc    edx,0x38
  40ce09:	into   
  40ce0a:	popf   
  40ce0b:	sub    eax,0xd00f2d8e
  40ce10:	js     0x40cda4
  40ce12:	push   eax
  40ce13:	xchg   esi,eax
  40ce14:	xor    cl,BYTE PTR [ecx-0x30]
  40ce17:	addr16 in al,0xf
  40ce1a:	mov    ecx,0x1f0def05
  40ce1f:	and    DWORD PTR [ebx-0x2d8a7179],esp
  40ce25:	rcr    BYTE PTR [eax],0x6e
  40ce28:	and    al,0x8b
  40ce2a:	cmp    eax,DWORD PTR [ebp-0x6c]
  40ce2d:	fbld   TBYTE PTR [esi-0x2371295f]
  40ce33:	int    0x7f
  40ce35:	or     eax,0x6c1137a4
  40ce3a:	cmp    dh,BYTE PTR [ecx]
  40ce3c:	icebp  
  40ce3d:	add    dh,BYTE PTR [edx+0x569c33ab]
  40ce43:	mov    ?,WORD PTR [edx+0x422e9883]
  40ce49:	jp     0x40cdfd
  40ce4b:	pusha  
  40ce4c:	rcr    BYTE PTR ds:0xac948ce,1
  40ce52:	add    eax,0x810e58d8
  40ce57:	call   FWORD PTR [edi-0x58]
  40ce5a:	xchg   edi,eax
  40ce5b:	xchg   dh,bl
  40ce5d:	stos   DWORD PTR es:[edi],eax
  40ce5e:	je     0x40ce61
  40ce60:	pop    ebx
  40ce61:	jl     0x40ceda
  40ce63:	sbb    ah,BYTE PTR [ebx]
  40ce65:	or     eax,0xd4dc2d7d
  40ce6a:	xor    eax,0xb757466d
  40ce6f:	mov    ah,0x70
  40ce71:	(bad)  
  40ce72:	(bad)  
  40ce73:	fist   WORD PTR [eax]
  40ce75:	mov    DWORD PTR [ebx-0x2282c165],esi
  40ce7b:	or     esi,ecx
  40ce7d:	sbb    dl,cl
  40ce7f:	out    dx,al
  40ce80:	dec    ebp
  40ce81:	mov    bh,0x4c
  40ce83:	leave  
  40ce84:	(bad)  
  40ce85:	jle    0x40ce50
  40ce87:	popa   
  40ce88:	add    al,dh
  40ce8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8b:	push   esi
  40ce8c:	dec    edx
  40ce8d:	adc    al,0xf4
  40ce8f:	pop    es
  40ce90:	and    ecx,DWORD PTR [eax+0x2d47430d]
  40ce96:	adc    DWORD PTR [edx],ebp
  40ce98:	div    BYTE PTR [ebx]
  40ce9a:	xchg   edi,eax
  40ce9b:	int3   
  40ce9c:	test   BYTE PTR [eax+0x5c77e976],ah
  40cea2:	fcmovu st,st(3)
  40cea4:	push   cs
  40cea5:	push   ebp
  40cea6:	pop    edi
  40cea7:	out    dx,eax
  40cea8:	jge    0x40ce44
  40ceaa:	iret   
  40ceab:	mov    dh,0x9e
  40cead:	mov    eax,DWORD PTR [edx-0x6a]
  40ceb0:	rol    edi,cl
  40ceb2:	sbb    edi,DWORD PTR [eax-0x317d7faf]
  40ceb8:	cmp    BYTE PTR [ebp+edx*4-0x64a105e3],0xa7
  40cec0:	mov    ecx,0xd718d1f5
  40cec5:	repz add ebx,DWORD PTR [ecx+0x7a]
  40cec9:	rcr    DWORD PTR [eax],1
  40cecb:	pop    edx
  40cecc:	pusha  
  40cecd:	fsub   QWORD PTR [esi+0x39]
  40ced0:	and    DWORD PTR [ecx+0x79],ebp
  40ced3:	pop    ebp
  40ced4:	sbb    DWORD PTR [eax*1-0x5a2d9e04],edx
  40cedb:	sbb    dl,BYTE PTR [ecx]
  40cedd:	add    DWORD PTR [edx+0x12],edx
  40cee0:	popf   
  40cee1:	sub    al,0x7
  40cee3:	inc    edi
  40cee4:	pop    esi
  40cee5:	fsubr  st,st(7)
  40cee7:	xchg   edx,eax
  40cee8:	hlt    
  40cee9:	cli    
  40ceea:	ror    ecx,1
  40ceec:	mov    cl,0x47
  40ceee:	js     0x40cf15
  40cef0:	cld    
  40cef1:	sbb    eax,0x3a15918e
  40cef6:	sbb    al,0x15
  40cef8:	ror    ecx,0x4d
  40cefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cefc:	xor    DWORD PTR [ecx-0x71],eax
  40ceff:	or     eax,0x5b9f5388
  40cf04:	fist   WORD PTR [eax*2-0x27c996b0]
  40cf0b:	or     al,0xe6
  40cf0d:	cmp    DWORD PTR [edx-0xb5939ff],ebx
  40cf13:	cmove  edi,DWORD PTR [bp+si]
  40cf17:	scas   al,BYTE PTR es:[edi]
  40cf18:	jge    0x40cf08
  40cf1a:	adc    eax,0xb916485f
  40cf1f:	out    0x6f,al
  40cf21:	retf   0x2aa
  40cf24:	sbb    BYTE PTR [edi],al
  40cf26:	call   0x7218:0xa6262c42
  40cf2d:	scas   eax,DWORD PTR es:[edi]
  40cf2e:	mov    bh,0xb3
  40cf30:	data16 ror BYTE PTR [esi-0x7e],cl
  40cf34:	int3   
  40cf35:	adc    eax,0x92d9aab6
  40cf3a:	pusha  
  40cf3b:	or     al,0x89
  40cf3d:	sbb    ch,BYTE PTR ds:0x9c5ef171
  40cf43:	sub    BYTE PTR [ecx],al
  40cf45:	ret    
  40cf46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf47:	das    
  40cf48:	pop    edx
  40cf49:	je     0x40cf08
  40cf4b:	aas    
  40cf4c:	loope  0x40cf72
  40cf4e:	inc    ebp
  40cf4f:	and    edi,ecx
  40cf51:	leave  
  40cf52:	xchg   esp,eax
  40cf53:	add    DWORD PTR [ecx-0x14],ebx
  40cf56:	fwait
  40cf57:	xor    al,0x79
  40cf59:	jns    0x40cf0d
  40cf5b:	addr16 test al,0x5e
  40cf5e:	(bad)  
  40cf5f:	mov    al,0x29
  40cf61:	loopne 0x40cfbb
  40cf63:	call   0x45483025
  40cf68:	das    
  40cf69:	sbb    bh,bl
  40cf6b:	ins    DWORD PTR es:[edi],dx
  40cf6c:	pop    edx
  40cf6d:	cs int3 
  40cf6f:	sub    cl,dh
  40cf71:	mov    WORD PTR [ebx-0x1a380b6],gs
  40cf77:	push   0xffffff96
  40cf79:	fdecstp 
  40cf7b:	xor    al,0xe8
  40cf7d:	mov    fs,WORD PTR cs:[ecx]
  40cf80:	jnp    0x40cf43
  40cf82:	outs   dx,DWORD PTR ds:[esi]
  40cf83:	mov    al,ds:0x12b6f6a9
  40cf88:	cdq    
  40cf89:	in     eax,dx
  40cf8a:	mov    al,ds:0x8ab90be0
  40cf8f:	ret    
  40cf90:	push   ebp
  40cf91:	xor    al,0xda
  40cf93:	inc    esp
  40cf94:	jge    0x40cf9e
  40cf96:	mov    esi,0xdd6b36ac
  40cf9b:	in     eax,0x76
  40cf9d:	xchg   BYTE PTR [ebp-0x7d3be889],ch
  40cfa3:	sbb    bh,BYTE PTR [esi+0x79ef40eb]
  40cfa9:	repnz aas 
  40cfab:	push   ds
  40cfac:	pop    esp
  40cfad:	pop    edi
  40cfae:	fwait
  40cfaf:	and    cl,dl
  40cfb1:	mov    ecx,0x6c64aa8e
  40cfb6:	lods   al,BYTE PTR ds:[esi]
  40cfb7:	sub    edi,DWORD PTR [esi+0x2f]
  40cfba:	inc    ebx
  40cfbb:	bswap  ebp
  40cfbd:	pop    es
  40cfbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfbf:	cmp    eax,0x404c22a5
  40cfc4:	fld    DWORD PTR [eax]
  40cfc6:	jnp    0x40cf97
  40cfc8:	jb     0x40d02a
  40cfca:	mov    eax,ds:0xa312ef0
  40cfcf:	fsub   QWORD PTR [edi-0x58b5940f]
  40cfd5:	int    0xbc
  40cfd7:	inc    ebp
  40cfd8:	in     eax,0xc9
  40cfda:	and    eax,0x7367bf04
  40cfe0:	jmp    0x40d028
  40cfe2:	ss out 0x26,eax
  40cfe5:	test   eax,0x4366e72b
  40cfea:	cmp    al,0xed
  40cfec:	inc    esi
  40cfed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfee:	test   al,0x7c
  40cff0:	mov    cl,0x77
  40cff2:	fldenv [eax]
  40cff4:	mov    edi,0x7b07c862
  40cff9:	dec    ebp
  40cffa:	mov    dl,0x1a
  40cffc:	xchg   BYTE PTR [ebx+0x5315646c],dl
  40d002:	aad    0xcf
  40d004:	adc    eax,0xa8cf8240
  40d009:	xchg   DWORD PTR [edi+0x6abe32ee],esi
  40d00f:	aad    0x76
  40d011:	stc    
  40d012:	and    al,0x81
  40d014:	sub    al,0x49
  40d016:	imul   dl
  40d018:	cmc    
  40d019:	adc    DWORD PTR [edi+0x525eae89],0xa22bf7b5
  40d023:	push   0x60633335
  40d028:	imul   edx,DWORD PTR [edi-0x50],0xe0aa86c5
  40d02f:	mov    ah,0x56
  40d031:	into   
  40d032:	mov    ch,0x41
  40d034:	jno    0x40d03c
  40d036:	clc    
  40d037:	mov    esi,0xeb82d303
  40d03c:	ins    BYTE PTR es:[edi],dx
  40d03d:	daa    
  40d03e:	xchg   esi,eax
  40d03f:	add    DWORD PTR [ecx-0x77],esp
  40d042:	or     eax,0x1f18f82f
  40d047:	jno    0x40d05c
  40d049:	sub    cl,BYTE PTR [eax+0x2601c1c]
  40d04f:	pop    edx
  40d050:	aas    
  40d051:	inc    al
  40d053:	or     edx,DWORD PTR [eax+0x3275f65a]
  40d059:	out    0x46,eax
  40d05b:	dec    eax
  40d05c:	ins    DWORD PTR es:[edi],dx
  40d05d:	into   
  40d05e:	shr    DWORD PTR [eax],cl
  40d060:	in     eax,0x1d
  40d062:	jmp    0x40d08f
  40d064:	je     0x40d0aa
  40d066:	mov    esi,0xde906b50
  40d06b:	dec    edx
  40d06c:	pop    ds
  40d06d:	sbb    eax,edx
  40d06f:	cmp    eax,DWORD PTR [edi-0x48d9296b]
  40d075:	pop    ebx
  40d076:	push   ecx
  40d077:	test   DWORD PTR [eax-0x5c],0x76204a6
  40d07e:	xchg   edi,eax
  40d07f:	mov    ds:0x8b839792,al
  40d084:	sub    bh,BYTE PTR [ebp-0x1b8def7e]
  40d08a:	dec    ebx
  40d08b:	xor    esi,DWORD PTR [esi-0x7d]
  40d08e:	cmp    BYTE PTR [eax-0x72],dl
  40d091:	arpl   WORD PTR ds:0x375c141f,cx
  40d097:	sbb    edi,DWORD PTR [esi]
  40d099:	rcr    BYTE PTR [edi-0x1f],0x34
  40d09d:	idiv   DWORD PTR [ebx+edx*1+0x1e48f34]
  40d0a4:	out    0x3f,eax
  40d0a6:	shr    eax,1
  40d0a8:	xor    DWORD PTR [eax+0x68],eax
  40d0ab:	cmp    al,0xc0
  40d0ad:	jmp    0x7d86:0x2c3f17e
  40d0b4:	sub    ch,cl
  40d0b6:	int    0x1f
  40d0b8:	fst    st(0)
  40d0ba:	lods   al,BYTE PTR ds:[esi]
  40d0bb:	js     0x40d09a
  40d0bd:	dec    edx
  40d0be:	xchg   ecx,eax
  40d0bf:	addr16 push 0x169c7667
  40d0c5:	cmp    eax,eax
  40d0c7:	push   esp
  40d0c8:	js     0x40d0f9
  40d0ca:	push   esi
  40d0cb:	test   DWORD PTR [eax],ebp
  40d0cd:	pop    ds
  40d0ce:	adc    dl,BYTE PTR [edx-0x24]
  40d0d1:	out    dx,eax
  40d0d2:	jne    0x40d095
  40d0d4:	pop    ss
  40d0d5:	xor    edi,DWORD PTR [ebp-0x69eb0fd0]
  40d0db:	sub    eax,0xdb60c654
  40d0e0:	fadd   DWORD PTR [ecx+0xe42013a]
  40d0e6:	and    bl,BYTE PTR ds:0xc088a877
  40d0ec:	mov    al,ds:0xba035b62
  40d0f1:	data16 setge dh
  40d0f5:	push   DWORD PTR [eax+0x41]
  40d0f8:	popa   
  40d0f9:	xchg   ebp,eax
  40d0fa:	scas   al,BYTE PTR es:[edi]
  40d0fb:	inc    edi
  40d0fc:	jbe    0x40d088
  40d0fe:	xchg   edx,eax
  40d0ff:	dec    esi
  40d100:	mov    eax,0xcc88c37a
  40d105:	jb     0x40d14b
  40d107:	mov    ds:0xccae82b8,eax
  40d10c:	or     eax,esi
  40d10e:	or     DWORD PTR [edx-0x62c1d8eb],edi
  40d114:	adc    dh,dh
  40d116:	cmp    BYTE PTR [eax+ebp*1-0x7],dh
  40d11a:	rcl    BYTE PTR [eax-0x1a],1
  40d11d:	popf   
  40d11e:	cmc    
  40d11f:	dec    edi
  40d120:	aas    
  40d121:	in     eax,0x9f
  40d123:	leave  
  40d124:	and    dl,BYTE PTR [ecx+0x2619116a]
  40d12a:	test   ch,dl
  40d12c:	sbb    edx,DWORD PTR [ebx-0x8]
  40d12f:	mov    ebp,0x7c234f0c
  40d134:	xor    BYTE PTR [edi-0x61],0x9b
  40d138:	jmp    0x59421473
  40d13d:	push   0xa
  40d13f:	stos   BYTE PTR es:[edi],al
  40d140:	jb     0x40d12d
  40d142:	call   0xbb81:0xbb9ef806
  40d149:	cld    
  40d14a:	ds cs (bad) 
  40d14e:	and    cl,BYTE PTR [edi]
  40d150:	stos   BYTE PTR es:[edi],al
  40d151:	xor    edi,0x21d23647
  40d157:	xor    edx,DWORD PTR [ebx+esi*4-0x67]
  40d15b:	leave  
  40d15c:	out    0x92,eax
  40d15e:	scas   al,BYTE PTR es:[edi]
  40d15f:	mov    ss,WORD PTR [esp+esi*8+0x6ac8a6c2]
  40d166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d167:	and    ch,BYTE PTR [ebx]
  40d169:	(bad)  
  40d16a:	(bad)  
  40d16c:	fadd   st,st(2)
  40d16e:	mov    WORD PTR [ebx-0x7d1bed1b],es
  40d174:	add    BYTE PTR [edx-0x35],ch
  40d177:	or     al,0x7f
  40d179:	in     al,dx
  40d17a:	pushf  
  40d17b:	inc    esp
  40d17c:	retf   0x2823
  40d17f:	sahf   
  40d180:	sub    al,0x52
  40d182:	(bad)  
  40d183:	adc    ah,dh
  40d185:	add    DWORD PTR [edi],0x16b62407
  40d18b:	sbb    esi,DWORD PTR [edi+0x5c1ef6c8]
  40d191:	ss test eax,0x133b634a
  40d197:	cmp    DWORD PTR [ecx-0x4a],esi
  40d19a:	push   ds
  40d19b:	popa   
  40d19c:	test   DWORD PTR [edi],esi
  40d19e:	sahf   
  40d19f:	mov    ds:0xfc16b2b8,eax
  40d1a4:	outs   dx,BYTE PTR ds:[esi]
  40d1a5:	and    DWORD PTR [ebx-0x2a5c945b],ebx
  40d1ab:	jle    0x40d13f
  40d1ad:	scas   eax,DWORD PTR es:[edi]
  40d1ae:	mov    bl,0x50
  40d1b0:	sub    DWORD PTR [ecx+0x643ce41f],ebx
  40d1b6:	cmp    ebp,ebx
  40d1b8:	int3   
  40d1b9:	ins    BYTE PTR es:[edi],dx
  40d1ba:	out    0x89,al
  40d1bc:	mov    eax,cs
  40d1be:	nop
  40d1bf:	and    DWORD PTR [esi-0xde37094],edi
  40d1c5:	hlt    
  40d1c6:	jmp    0x40d157
  40d1c8:	nop
  40d1c9:	xchg   edi,eax
  40d1ca:	xchg   ebp,eax
  40d1cb:	or     cl,BYTE PTR [ebp+0x5c]
  40d1ce:	sar    BYTE PTR [ebx+0x1b4a9aad],cl
  40d1d4:	mov    esi,0xaf955a00
  40d1d9:	fmul   QWORD PTR [ebx]
  40d1db:	retf   
  40d1dc:	rcl    cl,cl
  40d1de:	iret   
  40d1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e0:	mov    ah,0x85
  40d1e2:	bound  ecx,QWORD PTR [eax+ecx*1]
  40d1e5:	jmp    0x9dac:0xce3fe589
  40d1ec:	(bad)  
  40d1ed:	pop    ebx
  40d1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ef:	xor    DWORD PTR [ebp-0x6e],edi
  40d1f2:	pop    ds
  40d1f3:	xchg   ebp,eax
  40d1f4:	inc    ebx
  40d1f5:	cld    
  40d1f6:	test   al,0x62
  40d1f8:	fsub   QWORD PTR gs:[eax]
  40d1fb:	cmp    DWORD PTR ds:0x8b314552,esp
  40d201:	xchg   ebp,eax
  40d202:	xchg   edx,eax
  40d203:	retf   0x8aa4
  40d206:	xchg   ebx,eax
  40d207:	inc    ebp
  40d208:	lods   eax,DWORD PTR ds:[esi]
  40d209:	sbb    al,0x4a
  40d20b:	pop    ecx
  40d20c:	loope  0x40d1a6
  40d20e:	stos   BYTE PTR es:[edi],al
  40d20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d210:	dec    esp
  40d211:	aaa    
  40d212:	dec    edx
  40d213:	jnp    0x40d1c5
  40d215:	cmp    ah,BYTE PTR [esi]
  40d217:	add    bl,BYTE PTR [edx-0x2adf07ce]
  40d21d:	mov    bh,0x94
  40d21f:	xor    DWORD PTR [ebx-0x55],esi
  40d222:	mov    ah,0x4d
  40d224:	jl     0x40d1b5
  40d226:	out    0xdc,al
  40d228:	inc    ebx
  40d229:	std    
  40d22a:	jle    0x40d288
  40d22c:	jecxz  0x40d248
  40d22e:	mov    ch,0xd
  40d230:	repz jns 0x40d22f
  40d233:	(bad)  
  40d234:	lock (bad) 
  40d236:	loopne 0x40d1ed
  40d238:	mov    DWORD PTR [bx+si+0x26ab],ebx
  40d23d:	das    
  40d23e:	xchg   ebx,eax
  40d23f:	int3   
  40d240:	sub    edx,ebp
  40d242:	adc    DWORD PTR [edi],ebx
  40d244:	and    ecx,esi
  40d246:	shl    BYTE PTR [edi],1
  40d248:	jns    0x40d208
  40d24a:	out    0xc,al
  40d24c:	mov    esi,0x81aff44d
  40d251:	into   
  40d252:	mov    ds:0x4c844181,al
  40d257:	jnp    0x40d2b2
  40d259:	sti    
  40d25a:	pusha  
  40d25b:	lods   al,BYTE PTR ds:[esi]
  40d25c:	xchg   DWORD PTR ds:0xaa595210,edx
  40d262:	xchg   ebx,eax
  40d263:	cmp    bh,bl
  40d265:	test   al,0xa8
  40d267:	ss call 0xbc4f:0x4d79d8d5
  40d26f:	inc    edi
  40d270:	loopne 0x40d240
  40d272:	lods   eax,DWORD PTR es:[esi]
  40d274:	add    eax,DWORD PTR [edi]
  40d276:	xor    eax,0xb8f57dda
  40d27b:	mov    ch,0x60
  40d27d:	cli    
  40d27e:	mov    edi,0x6ed079ee
  40d283:	fidiv  WORD PTR [edi-0x45]
  40d286:	mov    ebx,0x9a1ef222
  40d28b:	pop    esi
  40d28c:	dec    esi
  40d28d:	sub    edi,DWORD PTR [ebx+0xd]
  40d290:	test   BYTE PTR [edx+0x30cac131],ch
  40d296:	std    
  40d297:	lods   al,BYTE PTR ds:[esi]
  40d298:	pop    esi
  40d299:	int3   
  40d29a:	mov    dh,0x10
  40d29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29d:	mov    esp,0xd3874c2b
  40d2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2a3:	add    bh,BYTE PTR [esi+0x51054635]
  40d2a9:	ins    DWORD PTR es:[edi],dx
  40d2aa:	mov    dl,0xf0
  40d2ac:	inc    ecx
  40d2ad:	xchg   BYTE PTR [ecx+0x1a8299e6],ch
  40d2b3:	repz push es
  40d2b5:	mov    edx,0x9354aeb5
  40d2ba:	inc    esi
  40d2bb:	(bad)  
  40d2bc:	sar    BYTE PTR [esi+0x4],1
  40d2bf:	inc    esi
  40d2c0:	(bad)  
  40d2c2:	pushf  
  40d2c3:	or     BYTE PTR [esi+0x57],ch
  40d2c6:	inc    ecx
  40d2c7:	out    dx,eax
  40d2c8:	arpl   bx,di
  40d2ca:	cmp    ebp,DWORD PTR [ebx-0x7f]
  40d2cd:	fdivr  st(4),st
  40d2cf:	(bad)
  40d2d2:	push   ebp
  40d2d3:	jb     0x40d34a
  40d2d5:	inc    ebx
  40d2d6:	jmp    0x77e3:0x51c57bb3
  40d2dd:	inc    edx
  40d2de:	cmp    BYTE PTR [ebx+0x7c809f74],0x6b
  40d2e5:	and    BYTE PTR [edx],bl
  40d2e7:	ret    
  40d2e8:	or     DWORD PTR [esp+eax*1],0xffffffdb
  40d2ec:	leave  
  40d2ed:	das    
  40d2ee:	cmp    DWORD PTR [esi],esp
  40d2f0:	ins    BYTE PTR es:[edi],dx
  40d2f1:	cld    
  40d2f2:	and    BYTE PTR ds:0xf47e4262,cl
  40d2f8:	rol    BYTE PTR [edx-0x50],0x1c
  40d2fc:	add    BYTE PTR [eax+edi*8],cl
  40d2ff:	xor    BYTE PTR [ecx],0x5f
  40d302:	sbb    DWORD PTR [esi-0x6c686fea],ebp
  40d308:	pop    edi
  40d309:	shr    bl,1
  40d30b:	aam    0x1d
  40d30d:	sbb    bh,BYTE PTR [ecx-0x749e67dc]
  40d313:	adc    ebx,ebx
  40d315:	mov    ?,esp
  40d317:	xor    eax,0x10621e9a
  40d31c:	(bad)  
  40d31d:	cli    
  40d31e:	mov    bh,BYTE PTR [edi-0x55]
  40d321:	push   esi
  40d322:	ret    
  40d323:	inc    DWORD PTR [edx-0x1e]
  40d326:	pop    edx
  40d327:	aam    0x41
  40d329:	push   esi
  40d32a:	add    al,0x8b
  40d32c:	(bad)  
  40d32d:	ja     0x40d3a5
  40d32f:	and    ah,BYTE PTR [eax+0x43a00e5b]
  40d335:	cmp    esp,ecx
  40d337:	push   DWORD PTR [ecx-0x4c]
  40d33a:	mov    DWORD PTR [esi+0x22],edx
  40d33d:	push   es
  40d33e:	xor    edx,DWORD PTR [edx-0x37]
  40d341:	dec    esi
  40d342:	mov    dh,0x2a
  40d344:	jmp    0x1acc:0xdae3908
  40d34b:	ret    0xb670
  40d34e:	and    ebp,DWORD PTR [esi-0x7ab16942]
  40d354:	sahf   
  40d355:	fs mov cl,0x9a
  40d358:	or     ah,cl
  40d35a:	jmp    0xc97c:0xe27a324f
  40d361:	adc    BYTE PTR fs:[edx+eiz*8+0x4c],0xaa
  40d367:	cwde   
  40d368:	pop    eax
  40d369:	sbb    dl,BYTE PTR ss:[edi+eax*8+0x34]
  40d36e:	jmp    0x40d325
  40d370:	push   ecx
  40d371:	push   edi
  40d372:	stos   BYTE PTR es:[edi],al
  40d373:	dec    ecx
  40d374:	out    0x31,al
  40d376:	lods   eax,DWORD PTR ds:[esi]
  40d377:	pop    ss
  40d378:	int3   
  40d379:	cs mov bl,0xfd
  40d37c:	mov    dl,0x3b
  40d37e:	repz pop ss
  40d380:	mov    ds:0xd7393caf,eax
  40d385:	outs   dx,DWORD PTR ds:[esi]
  40d386:	mov    dl,0xce
  40d388:	xchg   DWORD PTR [eax+0x192ffca9],esp
  40d38e:	mov    al,BYTE PTR [edx+ecx*1]
  40d391:	cdq    
  40d392:	and    eax,0x4c27144d
  40d397:	and    BYTE PTR [ecx+0x4759f1d6],cl
  40d39d:	push   ds
  40d39e:	inc    ecx
  40d39f:	lods   eax,DWORD PTR ds:[esi]
  40d3a0:	push   edx
  40d3a1:	cli    
  40d3a2:	sti    
  40d3a3:	aad    0x64
  40d3a5:	adc    DWORD PTR [edx],esi
  40d3a7:	gs pop ebx
  40d3a9:	rol    BYTE PTR [ebp-0x15df617e],cl
  40d3af:	je     0x40d3ab
  40d3b1:	daa    
  40d3b2:	ins    BYTE PTR es:[edi],dx
  40d3b3:	and    cl,dh
  40d3b5:	xor    al,0x63
  40d3b7:	mov    eax,ds:0xad9bb3e
  40d3bc:	(bad)  
  40d3bd:	std    
  40d3be:	mov    esi,0x18dca5ce
  40d3c3:	cmp    al,BYTE PTR [ecx+eax*4-0x55075810]
  40d3ca:	(bad)  
  40d3cb:	(bad)  
  40d3cc:	cmp    al,al
  40d3ce:	cli    
  40d3cf:	imul   edi,esp,0x66
  40d3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3d3:	inc    eax
  40d3d4:	sub    cl,BYTE PTR [esi]
  40d3d6:	ret    
  40d3d7:	cmp    dl,BYTE PTR [ebp-0x62]
  40d3da:	sub    BYTE PTR [ebx-0x2a],0xfe
  40d3de:	inc    esp
  40d3df:	in     eax,0xf1
  40d3e1:	and    al,0x9c
  40d3e3:	and    BYTE PTR [edx*8+0x168e5996],ah
  40d3ea:	in     eax,0xe8
  40d3ec:	fabs   
  40d3ee:	fadd   DWORD PTR [ecx+0x1]
  40d3f1:	into   
  40d3f2:	cwde   
  40d3f3:	add    cl,BYTE PTR [esi-0x1e]
  40d3f6:	dec    ecx
  40d3f7:	mov    BYTE PTR [ebp+0xe0eeb3d],dh
  40d3fd:	dec    ecx
  40d3fe:	in     al,0x3
  40d400:	lods   al,BYTE PTR ds:[esi]
  40d401:	mov    ebx,0xd2953880
  40d406:	xor    edi,DWORD PTR [edi+0x69]
  40d409:	loopne 0x40d3a3
  40d40b:	or     al,0xfc
  40d40d:	fidivr DWORD PTR [edx+0x6e]
  40d410:	rol    DWORD PTR [edx-0x7887ef6],0x96
  40d417:	jb     0x40d3ef
  40d419:	fist   DWORD PTR [edi]
  40d41b:	xor    edi,DWORD PTR [edx]
  40d41d:	aas    
  40d41e:	scas   eax,DWORD PTR es:[edi]
  40d41f:	mov    bh,0xdf
  40d421:	mov    es,edi
  40d423:	neg    BYTE PTR [esi-0x70]
  40d426:	iret   
  40d427:	add    DWORD PTR [esi+ebp*2],edi
  40d42a:	(bad)  
  40d42b:	fwait
  40d42c:	pop    es
  40d42d:	pop    es
  40d42e:	adc    ah,BYTE PTR [edx-0x331ab1cc]
  40d434:	ja     0x40d43e
  40d436:	stos   BYTE PTR es:[edi],al
  40d437:	ins    DWORD PTR es:[edi],dx
  40d438:	mov    ch,0xab
  40d43a:	(bad)  
  40d43b:	loope  0x40d430
  40d43d:	cmp    BYTE PTR [eax+edx*1+0x21240343],dl
  40d444:	or     dh,ch
  40d446:	adc    ch,BYTE PTR [ecx]
  40d448:	das    
  40d449:	sub    DWORD PTR [esi-0x1e],ebp
  40d44c:	push   eax
  40d44d:	mov    ebx,esp
  40d44f:	gs mov ch,0x1a
  40d452:	arpl   WORD PTR [ecx+ebp*1+0x7373fb9e],ax
  40d459:	and    BYTE PTR [ebx-0x68],dl
  40d45c:	rcr    BYTE PTR [edx],cl
  40d45e:	ds pushf 
  40d460:	je     0x40d41c
  40d462:	xchg   ecx,eax
  40d463:	or     al,0x72
  40d465:	cmp    dl,BYTE PTR [eax+eiz*1-0x68]
  40d469:	sub    eax,0x7f8f6267
  40d46e:	sar    DWORD PTR [esi],0x10
  40d471:	fdiv   DWORD PTR [edx]
  40d473:	mov    bl,0x9e
  40d475:	push   ebx
  40d476:	or     DWORD PTR [ebx*2-0x31926938],eax
  40d47d:	(bad)  
  40d47e:	ss out dx,eax
  40d480:	jmp    0x40d49d
  40d482:	or     DWORD PTR [esi+0x15],ebp
  40d485:	dec    eax
  40d486:	scas   al,BYTE PTR es:[edi]
  40d487:	dec    esi
  40d488:	dec    eax
  40d489:	dec    edx
  40d48a:	pop    eax
  40d48b:	(bad)  
  40d48c:	outs   dx,BYTE PTR ds:[esi]
  40d48d:	sub    BYTE PTR [eax],ah
  40d48f:	mov    eax,ds:0xd2f1f233
  40d494:	mov    ebx,0x9f16ab24
  40d499:	add    ecx,DWORD PTR ds:[edi+ecx*4+0x1b]
  40d49e:	mov    dh,0x17
  40d4a0:	pusha  
  40d4a1:	push   ebx
  40d4a2:	sub    ecx,DWORD PTR [eax+0x4a]
  40d4a5:	loop   0x40d4b7
  40d4a7:	rcl    ch,1
  40d4a9:	cmp    esp,edx
  40d4ab:	call   0x5fcf95a4
  40d4b0:	sbb    BYTE PTR [eax+esi*8],ch
  40d4b3:	add    edi,DWORD PTR [esi+0x6e7d1434]
  40d4b9:	dec    ebx
  40d4ba:	data16 mov ds:0xab2a9ad2,al
  40d4c0:	sbb    cl,BYTE PTR [ecx-0x40e30353]
  40d4c6:	js     0x40d45f
  40d4c8:	sar    DWORD PTR [esi],0x95
  40d4cb:	pop    esi
  40d4cc:	mov    esi,0xf0ed41ab
  40d4d1:	test   al,0x38
  40d4d3:	adc    DWORD PTR [ecx+edi*1+0x31],edi
  40d4d7:	stos   DWORD PTR es:[edi],eax
  40d4d8:	or     al,0x93
  40d4da:	jbe    0x40d504
  40d4dc:	(bad)  [edx]
  40d4de:	call   0x92dc:0xc3f92cd9
  40d4e5:	sub    al,0x92
  40d4e7:	sti    
  40d4e8:	mov    dh,0x4b
  40d4ea:	dec    esp
  40d4eb:	sub    DWORD PTR [edi+0x77],esp
  40d4ee:	(bad)  
  40d4f0:	ror    ebx,1
  40d4f2:	sbb    ch,BYTE PTR [ecx+0x4a]
  40d4f5:	pop    es
  40d4f6:	push   ebx
  40d4f7:	bnd jb 0x40d4b0
  40d4fa:	cmp    al,0x82
  40d4fc:	fist   DWORD PTR [ebx+esi*1]
  40d4ff:	iret   
  40d500:	icebp  
  40d501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d502:	cmp    ecx,DWORD PTR [ebp+0x2dd2594e]
  40d508:	push   es
  40d509:	mov    DWORD PTR [esp+ebp*2-0x76],ebx
  40d50d:	imul   esi,DWORD PTR [ebx+eiz*8],0x23
  40d511:	hlt    
  40d512:	jle    0x40d54e
  40d514:	add    ecx,DWORD PTR [esi+0x3634a748]
  40d51a:	shl    DWORD PTR [ebx+0x6922e635],1
  40d520:	ret    0x255b
  40d523:	and    DWORD PTR [ecx+0x16],eax
  40d526:	cli    
  40d527:	(bad)  
  40d528:	lock jbe 0x40d4b5
  40d52b:	icebp  
  40d52c:	jne    0x40d556
  40d52e:	jp     0x40d547
  40d530:	jmp    DWORD PTR [ecx+0xca88b15]
  40d536:	dec    eax
  40d537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d538:	sbb    edi,DWORD PTR [ecx+0x247474fd]
  40d53e:	sbb    cl,bl
  40d540:	rol    al,0xc0
  40d543:	rol    al,0xc0
  40d546:	rol    al,0xc0
  40d549:	rol    al,0xc0
  40d54c:	rol    al,0xc0
  40d54f:	shr    bl,0xee
  40d552:	fwait
  40d553:	mov    dh,0x5
  40d555:	sbb    ch,BYTE PTR [esi-0x52fbd611]
  40d55b:	push   es
  40d55c:	adc    bl,BYTE PTR fs:[ebp-0x1458b5fe]
  40d563:	add    eax,0x469311bd
  40d568:	retf   
  40d569:	add    al,0x8f
  40d56b:	cmp    al,0x42
  40d56d:	pushf  
  40d56e:	push   esp
  40d56f:	push   ds
  40d570:	addr16 ss push edx
  40d573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d575:	dec    esp
  40d576:	mov    edi,DWORD PTR [ecx]
  40d578:	sbb    bl,BYTE PTR [esi-0x1f]
  40d57b:	mov    edx,0xbae1e5c
  40d580:	jmp    0x5d5b2c46
  40d585:	mov    dh,0xea
  40d587:	aad    0x4
  40d589:	test   BYTE PTR [esp+ecx*8+0x292b7cad],ch
  40d590:	push   ebx
  40d591:	dec    edx
  40d592:	arpl   WORD PTR ds:0x78d76bbe,di
  40d598:	mul    BYTE PTR [eax-0x5929bfa5]
  40d59e:	dec    ecx
  40d59f:	das    
  40d5a0:	jmp    0x612a68b2
  40d5a5:	outs   dx,BYTE PTR ds:[esi]
  40d5a6:	mov    ecx,0xdc5e294f
  40d5ab:	fsub   DWORD PTR [ebx-0x62]
  40d5ae:	aaa    
  40d5af:	dec    esi
  40d5b0:	sub    al,0xdc
  40d5b2:	mov    BYTE PTR [edi+0x55],cl
  40d5b5:	sub    eax,0x7b682c4e
  40d5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5bb:	sbb    bh,dl
  40d5bd:	and    bh,BYTE PTR [esi+0x33]
  40d5c0:	adc    ebp,DWORD PTR [bp+si+0x45ab]
  40d5c5:	iret   
  40d5c6:	pop    eax
  40d5c7:	iret   
  40d5c8:	(bad)  
  40d5c9:	fwait
  40d5ca:	mov    cl,0x1a
  40d5cc:	test   BYTE PTR [ebp+0x58],0xc0
  40d5d0:	inc    edx
  40d5d1:	jp     0x40d5f5
  40d5d3:	call   0x85f2:0xd6ab1676
  40d5da:	hlt    
  40d5db:	sbb    al,0xbf
  40d5dd:	out    dx,al
  40d5de:	(bad)  
  40d5df:	ds sti 
  40d5e1:	loop   0x40d5a0
  40d5e3:	and    bh,BYTE PTR [eax]
  40d5e5:	ror    DWORD PTR gs:[edi+0xfd65351],1
  40d5ec:	ins    DWORD PTR es:[edi],dx
  40d5ed:	sti    
  40d5ee:	jb     0x40d591
  40d5f0:	adc    DWORD PTR [esi-0xa],ebp
  40d5f3:	inc    edi
  40d5f4:	push   ebx
  40d5f5:	pop    ebx
  40d5f6:	add    DWORD PTR [ecx+0x6b5e36fd],ebx
  40d5fc:	nop
  40d5fd:	mov    cl,0xdd
  40d5ff:	or     bh,BYTE PTR [edx+0x4b]
  40d602:	cld    
  40d603:	bts    DWORD PTR [esi-0x3c6188dc],ebp
  40d60a:	shl    DWORD PTR [edx+0x15464f95],1
  40d610:	clc    
  40d611:	dec    esi
  40d612:	push   ss
  40d613:	sub    dh,BYTE PTR [edx-0x6e]
  40d616:	ds call 0xcc0f:0x334e1299
  40d61e:	cmp    al,0x90
  40d620:	mov    ecx,0xbf24589a
  40d625:	loope  0x40d666
  40d627:	fdivr  st,st(2)
  40d629:	xchg   esi,eax
  40d62a:	mov    ?,esi
  40d62c:	pop    ebp
  40d62d:	pop    ebx
  40d62e:	push   esi
  40d62f:	psllw  mm0,QWORD PTR [eax]
  40d632:	iret   
  40d633:	pop    ebp
  40d634:	repnz fsubr QWORD PTR [ecx]
  40d637:	jge    0x40d60e
  40d639:	shr    BYTE PTR [ebx],cl
  40d63b:	(bad)
  40d63e:	test   al,0xd8
  40d640:	js     0x40d5e7
  40d642:	daa    
  40d643:	mov    ebx,0x2d534879
  40d648:	jbe    0x40d6ae
  40d64a:	xchg   esi,eax
  40d64b:	cwde   
  40d64c:	push   esp
  40d64d:	mov    eax,0xc24116be
  40d652:	mov    cs,WORD PTR [esp+edx*1+0x2a6dcf02]
  40d659:	pop    esi
  40d65a:	pop    esp
  40d65b:	xor    edx,ebp
  40d65d:	leave  
  40d65e:	leave  
  40d65f:	and    eax,0x401fa33d
  40d664:	mov    al,0xa8
  40d666:	jmp    0x40d6c9
  40d668:	and    eax,0xf720d24a
  40d66d:	pop    ebp
  40d66e:	inc    edi
  40d66f:	push   eax
  40d670:	es and al,0xb4
  40d673:	add    DWORD PTR [edx-0x4e],0x5c8fb7c4
  40d67a:	xchg   edi,eax
  40d67b:	fisub  WORD PTR [ebx-0x7a71adf1]
  40d681:	push   edi
  40d682:	lahf   
  40d683:	(bad)  
  40d684:	dec    edi
  40d685:	pop    ebx
  40d686:	push   esp
  40d687:	push   ebp
  40d688:	sti    
  40d689:	sbb    al,BYTE PTR [eax+edi*8]
  40d68c:	inc    ecx
  40d68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68e:	mov    ecx,0x923e4c5f
  40d693:	cmc    
  40d694:	xor    al,BYTE PTR [eax]
  40d696:	xor    bl,0xf6
  40d699:	add    cl,BYTE PTR [ebp+0x76]
  40d69c:	jl     0x40d6ed
  40d69e:	shl    BYTE PTR [edx+eax*4-0x34],1
  40d6a2:	clc    
  40d6a3:	jge    0x40d6ed
  40d6a5:	xor    edx,DWORD PTR [edx+0x64]
  40d6a8:	jge    0x40d6c8
  40d6aa:	sbb    ah,0x7d
  40d6ad:	leave  
  40d6ae:	mov    cl,0x24
  40d6b0:	scas   al,BYTE PTR es:[edi]
  40d6b1:	sti    
  40d6b2:	test   al,ah
  40d6b4:	cmc    
  40d6b5:	fdiv   st(0),st
  40d6b7:	stos   BYTE PTR es:[edi],al
  40d6b8:	aas    
  40d6b9:	sub    eax,0x3271612e
  40d6be:	push   ebx
  40d6bf:	mov    al,0x9c
  40d6c1:	inc    ebp
  40d6c2:	es sub eax,0x603e9aff
  40d6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c9:	adc    DWORD PTR ds:0x8b7b4542,esp
  40d6cf:	push   ebx
  40d6d0:	pop    edx
  40d6d1:	sbb    BYTE PTR [ecx],dl
  40d6d3:	sub    al,0x52
  40d6d5:	xor    al,0x4f
  40d6d7:	popa   
  40d6d8:	push   ebx
  40d6d9:	jbe    0x40d709
  40d6db:	jno    0x40d741
  40d6dd:	jne    0x40d695
  40d6df:	iret   
  40d6e0:	cld    
  40d6e1:	(bad)  
  40d6e2:	ror    DWORD PTR [edx],cl
  40d6e4:	and    bh,BYTE PTR [ebp+0x1a]
  40d6e7:	add    eax,0xad1567e
  40d6ec:	(bad)  
  40d6ed:	dec    eax
  40d6ee:	repz addr16 mov eax,ds:0x5720
  40d6f3:	adc    eax,0x5cb9ebd6
  40d6f8:	mov    ds:0x723af16e,eax
  40d6fd:	jg     0x40d6af
  40d6ff:	sub    ebx,0xffffffea
  40d702:	push   ss
  40d703:	jecxz  0x40d75d
  40d705:	fcomp  DWORD PTR [ebp-0x4f6058d2]
  40d70b:	xor    DWORD PTR [edi+ebp*1-0x71],esp
  40d70f:	sub    BYTE PTR [ecx+edx*4-0x2341f33d],bl
  40d716:	adc    ch,al
  40d718:	or     DWORD PTR [edx+0x464426ca],esp
  40d71e:	mov    BYTE PTR [ecx],bl
  40d720:	(bad)  
  40d721:	clc    
  40d722:	pop    ebp
  40d723:	and    al,0xb4
  40d725:	(bad)  
  40d726:	push   0x6b7e560f
  40d72b:	pop    ebx
  40d72c:	out    0x61,eax
  40d72e:	mov    WORD PTR [ebx+edx*2+0x6],fs
  40d732:	add    esp,ebp
  40d734:	xchg   ebp,eax
  40d735:	test   eax,0xc49f75a2
  40d73a:	hlt    
  40d73b:	shr    BYTE PTR [esp+ebp*1+0x65],1
  40d73f:	push   0x5c9cc0ef
  40d744:	fcmovnu st,st(3)
  40d746:	sub    eax,0x864b9db0
  40d74b:	inc    eax
  40d74c:	pop    edi
  40d74d:	jmp    0x117f:0x6f2b3bab
  40d754:	mov    edx,0xf3b4373b
  40d759:	jle    0x40d759
  40d75b:	cmp    ebx,ecx
  40d75d:	sbb    BYTE PTR [esi-0xf],al
  40d760:	xor    al,0x7e
  40d762:	inc    edi
  40d763:	pop    edi
  40d764:	pop    ss
  40d765:	clc    
  40d766:	lods   al,BYTE PTR ds:[esi]
  40d767:	mov    cl,0xe5
  40d769:	ror    DWORD PTR gs:[ecx],cl
  40d76c:	push   ebp
  40d76d:	and    bh,0xdc
  40d770:	call   FWORD PTR es:[edx-0x47]
  40d774:	test   eax,0x26ce5a36
  40d779:	and    BYTE PTR [ebp+0x15f13e91],dl
  40d77f:	xor    al,0xb1
  40d781:	jg     0x40d7a0
  40d783:	xor    DWORD PTR [ebx*1+0x496107e9],ebx
  40d78a:	dec    edi
  40d78b:	cmp    al,BYTE PTR ds:0xd9a3b2ee
  40d791:	dec    esp
  40d792:	(bad)  
  40d793:	pusha  
  40d794:	fist   WORD PTR [ebx-0x22]
  40d797:	and    ebp,DWORD PTR ds:0x470a323a
  40d79d:	mov    ds:0xf9936a55,al
  40d7a2:	dec    edx
  40d7a3:	jns    0x40d750
  40d7a5:	sbb    esi,DWORD PTR [eax]
  40d7a7:	jle    0x40d795
  40d7a9:	int    0xcd
  40d7ab:	pop    esi
  40d7ac:	(bad)  
  40d7ad:	in     al,0xbd
  40d7af:	rcl    ah,1
  40d7b1:	cmp    eax,0x44ae494c
  40d7b6:	add    al,0xe8
  40d7b8:	data16 mov ?,WORD PTR [ebx]
  40d7bb:	xchg   ecx,eax
  40d7bc:	sbb    bl,BYTE PTR [edx+edx*4-0x2a]
  40d7c0:	push   ss
  40d7c1:	sub    eax,0xc563e5bc
  40d7c6:	lods   eax,DWORD PTR ds:[esi]
  40d7c7:	gs ins DWORD PTR es:[edi],dx
  40d7c9:	and    edx,ebp
  40d7cb:	cwde   
  40d7cc:	mov    al,ds:0xe77c2f9c
  40d7d1:	sahf   
  40d7d2:	jge    0x40d7a4
  40d7d4:	inc    ebx
  40d7d5:	mov    DWORD PTR [edx+0x25],esi
  40d7d8:	lds    esi,FWORD PTR [esi-0x32a1b742]
  40d7de:	dec    esp
  40d7df:	jbe    0x40d85b
  40d7e1:	arpl   WORD PTR [ebx+0x4f5b0b28],di
  40d7e7:	dec    edx
  40d7e8:	in     eax,0x85
  40d7ea:	or     dh,BYTE PTR [ebx]
  40d7ec:	fs cmc 
  40d7ee:	pop    ebx
  40d7ef:	jne    0x40d81c
  40d7f1:	and    bl,BYTE PTR [ebx+0x4a]
  40d7f4:	and    bl,BYTE PTR [ebx+0x7]
  40d7f7:	ret    0x3562
  40d7fa:	aad    0xb0
  40d7fc:	aad    0x33
  40d7fe:	push   edx
  40d7ff:	sbb    BYTE PTR [ebp+0x5e4a0700],bl
  40d805:	aad    0xbf
  40d807:	or     bl,BYTE PTR [edx-0x5824a018]
  40d80d:	add    esp,DWORD PTR [esi+0x330e00b1]
  40d813:	cmc    
  40d814:	cmp    esp,DWORD PTR [ebx+0x7d47ae19]
  40d81a:	jno    0x40d83b
  40d81c:	pop    ebx
  40d81d:	add    BYTE PTR [edx+0x12],dl
  40d820:	inc    ecx
  40d821:	outs   dx,DWORD PTR ds:[esi]
  40d822:	or     ah,bh
  40d824:	(bad)  
  40d825:	fs sahf 
  40d827:	clc    
  40d828:	(bad)  
  40d82a:	mov    DWORD PTR [ebp-0x58f11515],ecx
  40d830:	pop    esi
  40d831:	mov    ds:0xb9938e69,eax
  40d836:	scas   eax,DWORD PTR es:[edi]
  40d837:	cld    
  40d838:	jmp    0xea02:0x9b6275d8
  40d83f:	push   es
  40d840:	(bad)  
  40d841:	jo     0x40d8ad
  40d843:	outs   dx,BYTE PTR ds:[esi]
  40d844:	mov    edi,0xb79a8f93
  40d849:	push   edi
  40d84a:	add    dh,ch
  40d84c:	fnstsw WORD PTR [esi-0x7f]
  40d84f:	bound  edx,QWORD PTR [ebx+0x67ecb3e2]
  40d855:	aad    0xaa
  40d857:	das    
  40d858:	jle    0x40d8b5
  40d85a:	syscall 
  40d85c:	inc    eax
  40d85d:	loope  0x40d7e4
  40d85f:	mov    edi,0xe90c31ad
  40d864:	ret    
  40d865:	add    edi,DWORD PTR [esi]
  40d867:	in     ax,0x38
  40d86a:	ins    BYTE PTR es:[edi],dx
  40d86b:	push   edi
  40d86c:	xor    eax,0xcae76a4
  40d871:	dec    eax
  40d872:	mov    esi,0x4f55defe
  40d877:	pop    es
  40d878:	sbb    edx,esi
  40d87a:	lock cld 
  40d87c:	(bad)  
  40d87e:	pop    ds
  40d87f:	push   eax
  40d880:	xchg   ecx,eax
  40d881:	ss mov bl,0xeb
  40d884:	mov    ebp,0x49affd1d
  40d889:	fistp  QWORD PTR [edi]
  40d88b:	fisttp QWORD PTR [ebx+0x5d]
  40d88e:	aas    
  40d88f:	iret   
  40d890:	mov    DWORD PTR [edi*1+0x8e2854f],ebp
  40d897:	in     eax,0x1b
  40d899:	fld    st(6)
  40d89b:	loop   0x40d8ef
  40d89d:	pop    edi
  40d89e:	mov    esp,0x5aa15c0c
  40d8a3:	jb     0x40d8c8
  40d8a5:	pop    es
  40d8a6:	add    ah,BYTE PTR [ebp+0x56]
  40d8a9:	jp     0x40d8b7
  40d8ab:	mov    esi,0x32ce31d7
  40d8b0:	es mov bh,0xf4
  40d8b3:	xchg   ecx,eax
  40d8b4:	pop    ss
  40d8b5:	pop    es
  40d8b6:	mov    ds:0x6009fc0,al
  40d8bb:	pop    ecx
  40d8bc:	mov    ebp,0x2d027898
  40d8c1:	or     eax,0xc8734a3
  40d8c6:	push   eax
  40d8c7:	aaa    
  40d8c8:	jp     0x40d8e6
  40d8ca:	nop
  40d8cb:	aas    
  40d8cc:	xlat   BYTE PTR ds:[ebx]
  40d8cd:	call   0x401d0179
  40d8d2:	test   BYTE PTR [edx+esi*2-0x69a679c1],ch
  40d8d9:	dec    esp
  40d8da:	mov    ah,0x40
  40d8dc:	adc    al,0x30
  40d8de:	loopne 0x40d8fa
  40d8e0:	(bad)  
  40d8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e2:	fisubr DWORD PTR ds:0xb3fe8ed1
  40d8e8:	hlt    
  40d8e9:	xchg   ebx,eax
  40d8ea:	and    al,0xa9
  40d8ec:	mov    esp,0x56b4ce03
  40d8f1:	xchg   esi,eax
  40d8f2:	push   ss
  40d8f3:	mov    DWORD PTR [ebx-0x3a],esp
  40d8f6:	inc    esp
  40d8f7:	dec    ebp
  40d8f8:	push   eax
  40d8f9:	fcom   DWORD PTR [eax+0x4f86694e]
  40d8ff:	pop    ecx
  40d900:	data16 or BYTE PTR [edi+0x7f],dh
  40d904:	mov    ah,0x6
  40d906:	pushf  
  40d907:	xlat   BYTE PTR ds:[ebx]
  40d908:	pushf  
  40d909:	in     al,dx
  40d90a:	test   BYTE PTR [ebp-0x3642eb23],0xc
  40d911:	pop    es
  40d912:	jnp    0x40d98c
  40d914:	inc    edi
  40d915:	or     al,0xb3
  40d917:	jl     0x40d8b3
  40d919:	in     eax,dx
  40d91a:	mov    al,0xfb
  40d91c:	test   BYTE PTR [ebx],0x39
  40d91f:	pop    ecx
  40d920:	jne    0x40d8fe
  40d922:	add    DWORD PTR ds:0xfa797c50,ecx
  40d928:	xchg   BYTE PTR ds:0xc044f36d,ah
  40d92e:	cld    
  40d92f:	jno    0x40d98d
  40d931:	xrelease xchg DWORD PTR [ecx+esi*4+0x3a],edx
  40d936:	in     eax,dx
  40d937:	mov    eax,ds:0x83a37929
  40d93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93d:	mov    ecx,0xaa333503
  40d942:	pop    ecx
  40d943:	inc    ecx
  40d944:	cli    
  40d945:	push   eax
  40d946:	jo     0x40d913
  40d948:	clc    
  40d949:	fs ins BYTE PTR es:[edi],dx
  40d94b:	adc    al,dh
  40d94d:	mov    dh,0x33
  40d94f:	mov    ch,0xa1
  40d951:	dec    edi
  40d952:	rcr    dh,1
  40d954:	push   cs
  40d955:	(bad)  
  40d956:	pusha  
  40d957:	cmp    eax,0xecda2f29
  40d95c:	cld    
  40d95d:	jmp    0x40d8e2
  40d95f:	int    0xb4
  40d961:	test   DWORD PTR [edi+0x2d],esi
  40d964:	xchg   esp,eax
  40d965:	jmp    0xdb76:0xe7852d9
  40d96c:	mov    edx,0x34bb6fb9
  40d971:	stos   BYTE PTR es:[edi],al
  40d972:	jge    0x40d94c
  40d974:	xor    al,0x60
  40d976:	loopne 0x40d9e9
  40d978:	loope  0x40d905
  40d97a:	jecxz  0x40d9a4
  40d97c:	iret   
  40d97d:	call   0xa6e:0xe1394f5
  40d984:	mov    esp,fs
  40d986:	test   eax,0xa00d9cea
  40d98b:	call   0xb0b7d178
  40d990:	scas   al,BYTE PTR es:[edi]
  40d991:	or     al,0x92
  40d993:	pop    ecx
  40d994:	rcr    BYTE PTR [eax-0x68],1
  40d997:	mov    ebp,ecx
  40d999:	test   DWORD PTR [eax+ecx*4-0xaa90b47],edi
  40d9a0:	pop    edx
  40d9a1:	clc    
  40d9a2:	inc    eax
  40d9a3:	sahf   
  40d9a4:	push   ss
  40d9a5:	pop    ebp
  40d9a6:	outs   dx,DWORD PTR ds:[esi]
  40d9a7:	mov    WORD PTR gs:[ebp+0x62],cs
  40d9ab:	sub    eax,0xaa5717d3
  40d9b0:	or     al,0x3e
  40d9b2:	and    ah,dh
  40d9b4:	int    0xd2
  40d9b6:	sub    ecx,DWORD PTR [ebx-0x47]
  40d9b9:	fcmovbe st,st(5)
  40d9bb:	fnstenv [ebx+eiz*2]
  40d9be:	lahf   
  40d9bf:	cmp    dl,BYTE PTR [ebp+ecx*4-0x12d537dd]
  40d9c6:	aaa    
  40d9c7:	pop    edx
  40d9c8:	adc    DWORD PTR [esi],ecx
  40d9ca:	mov    esp,ds
  40d9cc:	mov    esi,0x9fbc53fc
  40d9d1:	ins    BYTE PTR es:[edi],dx
  40d9d2:	div    BYTE PTR [eax]
  40d9d4:	jg     0x40d9e4
  40d9d6:	imul   esi,DWORD PTR [ecx+eiz*1],0x6f
  40d9da:	aas    
  40d9db:	stos   DWORD PTR es:[di],eax
  40d9dd:	cmp    al,0x51
  40d9df:	outs   dx,BYTE PTR ds:[esi]
  40d9e0:	cdq    
  40d9e1:	iret   
  40d9e2:	and    eax,0xf00577e4
  40d9e7:	jae    0x40da3c
  40d9e9:	xchg   DWORD PTR [ebx-0x1c14e520],ebp
  40d9ef:	fdiv   DWORD PTR ds:0x4c38bc42
  40d9f5:	jle    0x40da23
  40d9f7:	push   esp
  40d9f8:	aaa    
  40d9f9:	push   es
  40d9fa:	push   esi
  40d9fb:	jle    0x40da5f
  40d9fd:	scas   al,BYTE PTR es:[edi]
  40d9fe:	ins    BYTE PTR es:[edi],dx
  40d9ff:	inc    ebp
  40da00:	call   0xec10:0x4dede15a
  40da07:	cmc    
  40da08:	stos   DWORD PTR es:[edi],eax
  40da09:	dec    esp
  40da0a:	sub    eax,DWORD PTR [edx]
  40da0c:	call   esi
  40da0e:	fucomip st,st(1)
  40da10:	div    BYTE PTR [ebp+0x148a11b7]
  40da16:	shl    DWORD PTR [edx],1
  40da18:	or     dl,cl
  40da1a:	fwait
  40da1b:	or     eax,0xf54e2730
  40da20:	adc    bl,0x1a
  40da23:	pop    es
  40da24:	push   edx
  40da25:	sub    ebx,edi
  40da27:	fidiv  DWORD PTR [eax+0x54]
  40da2a:	inc    esi
  40da2b:	aad    0xb0
  40da2d:	pop    edi
  40da2e:	fs (bad) 
  40da30:	jns    0x40da27
  40da32:	adc    eax,0x5c0e7994
  40da37:	mov    esi,0x93cab62a
  40da3c:	mov    al,ds:0xfbda461c
  40da41:	xchg   edx,eax
  40da42:	mov    esi,0x4e0bcb1c
  40da47:	cld    
  40da48:	pmaddwd mm5,QWORD PTR [edi-0x402e8145]
  40da4f:	test   eax,0x6fde8429
  40da54:	jbe    0x40da2f
  40da56:	cmp    al,0x7b
  40da58:	pop    es
  40da59:	(bad)
  40da5c:	cmp    BYTE PTR [ebx+0x5d9e3f07],0x58
  40da63:	and    BYTE PTR [edx+0x4d],bl
  40da66:	dec    ebp
  40da67:	xor    BYTE PTR [ecx],bh
  40da69:	lods   al,BYTE PTR ds:[esi]
  40da6a:	inc    edi
  40da6b:	hlt    
  40da6c:	push   edx
  40da6d:	stos   BYTE PTR es:[edi],al
  40da6e:	rcr    eax,1
  40da70:	jge    0x40dac0
  40da72:	mov    esi,0xf56ad139
  40da77:	int3   
  40da78:	pushf  
  40da79:	(bad)  
  40da7a:	stc    
  40da7b:	xor    al,0x50
  40da7d:	sbb    al,0x76
  40da7f:	(bad)  
  40da80:	std    
  40da81:	retf   0xc26
  40da84:	(bad)  
  40da86:	pop    ds
  40da87:	mov    ah,0x6a
  40da89:	retf   
  40da8a:	cld    
  40da8b:	jle    0x40daa1
  40da8d:	cmp    esp,0x46
  40da90:	dec    edx
  40da91:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40da93:	cmp    DWORD PTR [edx],edx
  40da95:	cmp    eax,0x5e475fb8
  40da9a:	push   ss
  40da9b:	pop    eax
  40da9c:	sbb    esp,DWORD PTR ds:[ebx]
  40da9f:	mov    edi,0xdc76f1d0
  40daa4:	pop    esi
  40daa5:	data16 mov ah,0x16
  40daa8:	and    DWORD PTR [esi],edx
  40daaa:	lea    eax,[eax]
  40daac:	pop    esi
  40daad:	mov    esp,0xcfa8345e
  40dab2:	mov    ebp,DWORD PTR [ecx]
  40dab4:	ja     0x40dace
  40dab6:	stos   DWORD PTR es:[edi],eax
  40dab7:	xchg   esp,eax
  40dab8:	mov    ebp,0xc3b7b48d
  40dabd:	scas   al,BYTE PTR es:[edi]
  40dabe:	ins    DWORD PTR es:[edi],dx
  40dabf:	jo     0x40da9e
  40dac1:	push   es
  40dac2:	inc    edi
  40dac3:	pop    esp
  40dac4:	pop    edx
  40dac5:	sbb    BYTE PTR ds:0xb2f6531f,dl
  40dacb:	jo     0x40db1b
  40dacd:	(bad)  
  40dace:	cdq    
  40dacf:	or     eax,0xcd3d8967
  40dad4:	xor    cl,BYTE PTR [esi+ebp*4+0x6f]
  40dad8:	std    
  40dad9:	mov    ?,WORD PTR [eax+esi*2]
  40dadc:	inc    edi
  40dadd:	xchg   edx,eax
  40dade:	push   edx
  40dadf:	inc    ecx
  40dae0:	scas   al,BYTE PTR es:[edi]
  40dae1:	pop    ebp
  40dae2:	mov    dh,0x99
  40dae4:	xchg   BYTE PTR [ecx],cl
  40dae6:	test   al,0x83
  40dae8:	jne    0x40da73
  40daea:	sbb    al,0xa7
  40daec:	(bad)  
  40daed:	(bad)  
  40daee:	xchg   ecx,eax
  40daef:	and    DWORD PTR [ebp+0x7ef3c03a],edx
  40daf5:	shr    BYTE PTR [eax],0x36
  40daf8:	rcl    BYTE PTR [eax-0x45],0x98
  40dafc:	and    dl,0x7c
  40daff:	ins    DWORD PTR es:[edi],dx
  40db00:	pop    eax
  40db01:	sbb    ecx,DWORD PTR [eax+ebx*1]
  40db04:	push   ebx
  40db05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db06:	dec    edx
  40db07:	mov    esi,0xa7efc663
  40db0c:	fsubr  QWORD PTR [edx]
  40db0e:	scas   eax,DWORD PTR es:[edi]
  40db0f:	xlat   BYTE PTR ds:[ebx]
  40db10:	ficom  DWORD PTR [ebp+0x12763396]
  40db16:	fist   WORD PTR [esi]
  40db18:	cli    
  40db19:	jecxz  0x40dac6
  40db1b:	int3   
  40db1c:	inc    esi
  40db1d:	sub    BYTE PTR [esi],bh
  40db1f:	adc    al,0xb0
  40db21:	xchg   ebp,eax
  40db22:	shr    BYTE PTR [ecx+edx*8],0xc
  40db26:	xchg   edx,eax
  40db27:	fsub   DWORD PTR [esi+0x4f4ac867]
  40db2d:	repnz loopne 0x40db3b
  40db30:	dec    edx
  40db32:	adc    eax,0x236ef46
  40db37:	and    DWORD PTR ss:[edi+0x2661bcc],ecx
  40db3e:	cs mov al,0x64
  40db41:	dec    ecx
  40db42:	jo     0x40db13
  40db44:	jbe    0x40dba7
  40db46:	or     al,BYTE PTR [ebx-0x77]
  40db49:	ss mov bl,0xa6
  40db4c:	js     0x40dbba
  40db4e:	shr    BYTE PTR [esi+0x4bb3c252],cl
  40db54:	jbe    0x40db74
  40db56:	xchg   DWORD PTR [esi],ebx
  40db58:	das    
  40db59:	mov    edx,0x47770e20
  40db5e:	dec    esi
  40db5f:	pop    es
  40db60:	sbb    DWORD PTR [edi-0x7434f916],ebx
  40db66:	mov    ebx,0xf4e637af
  40db6b:	inc    ebp
  40db6c:	imul   esp,DWORD PTR [ebp-0x15de57f4],0x36
  40db73:	(bad)  
  40db74:	push   edx
  40db75:	mov    edx,0x2ed8c739
  40db7a:	scas   al,BYTE PTR es:[edi]
  40db7b:	pop    ecx
  40db7c:	dec    ebx
  40db7d:	loop   0x40db8c
  40db7f:	test   al,ch
  40db81:	add    BYTE PTR [ebx+0x42763300],0x65
  40db88:	hlt    
  40db89:	adc    ecx,ebx
  40db8b:	cwde   
  40db8c:	dec    ecx
  40db8d:	ret    0xa543
  40db90:	push   ecx
  40db91:	ins    BYTE PTR es:[edi],dx
  40db92:	jbe    0x40dc0b
  40db94:	pop    ss
  40db95:	or     esi,DWORD PTR [ecx+0x3a]
  40db98:	sbb    DWORD PTR [edi+0x13ba1210],eax
  40db9e:	fld    DWORD PTR [edi-0x53b7196d]
  40dba4:	jbe    0x40db34
  40dba6:	fcomp  QWORD PTR [ebx]
  40dba8:	push   ecx
  40dba9:	gs out dx,eax
  40dbab:	sbb    al,0xdd
  40dbad:	pop    esi
  40dbaf:	iret   
  40dbb0:	mov    bl,0x92
  40dbb2:	test   BYTE PTR [ebx],0x30
  40dbb5:	sub    DWORD PTR [eax-0x5dfd75f5],ebx
  40dbbb:	call   0x663172d3
  40dbc0:	arpl   WORD PTR [edi+0x6],bp
  40dbc3:	or     al,0x33
  40dbc5:	xchg   DWORD PTR cs:[edx-0x23],edx
  40dbc9:	lock jg 0x40db4d
  40dbcc:	shl    BYTE PTR [edx-0x20],1
  40dbcf:	je     0x40dc30
  40dbd1:	xchg   ebp,eax
  40dbd2:	mov    ebx,0xb22a7e04
  40dbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd8:	add    eax,0x7e430c97
  40dbdd:	loop   0x40db89
  40dbdf:	add    al,0x32
  40dbe1:	mov    al,BYTE PTR [esp+edi*2+0x35459078]
  40dbe8:	pop    esp
  40dbe9:	push   edx
  40dbea:	xchg   esi,eax
  40dbeb:	or     al,BYTE PTR cs:[esi+0x68393cdf]
  40dbf2:	xchg   DWORD PTR [esi],edx
  40dbf4:	add    dh,BYTE PTR [esi-0x7a02804a]
  40dbfa:	call   0xd628:0x29028384
  40dc01:	mov    ah,0x16
  40dc03:	dec    esi
  40dc04:	and    DWORD PTR [edi],eax
  40dc06:	jmp    0xcf5f48b7
  40dc0b:	cmp    eax,0x3b296a4b
  40dc10:	cmp    al,0x89
  40dc12:	add    eax,0x698a553b
  40dc17:	jg     0x40dc80
  40dc19:	fidivr DWORD PTR [ebx-0x547443cb]
  40dc1f:	aaa    
  40dc20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc21:	ficom  DWORD PTR [edi]
  40dc23:	jns    0x40dc9d
  40dc25:	sub    BYTE PTR [esi+0x57],dl
  40dc28:	pop    ebp
  40dc29:	ror    BYTE PTR [edx-0x55bbb05a],0xbf
  40dc30:	jne    0x40dc84
  40dc32:	adc    eax,0xad9050fa
  40dc37:	dec    esi
  40dc38:	xor    cl,dh
  40dc3a:	pop    ebp
  40dc3b:	fldcw  WORD PTR [edi]
  40dc3d:	sub    esp,0x9388585a
  40dc43:	pushf  
  40dc44:	test   DWORD PTR [eax-0x49],edx
  40dc47:	or     BYTE PTR [ebx-0x4b],al
  40dc4a:	test   bl,al
  40dc4c:	dec    edi
  40dc4d:	dec    edi
  40dc4e:	jb     0x40dcc5
  40dc50:	outs   dx,DWORD PTR ds:[esi]
  40dc51:	mov    esi,0x8a814888
  40dc56:	ss pop ds
  40dc58:	push   ebx
  40dc59:	mov    ah,0xe1
  40dc5b:	mov    ch,0x48
  40dc5d:	inc    ecx
  40dc5e:	dec    ecx
  40dc5f:	or     al,0x93
  40dc61:	int3   
  40dc62:	loope  0x40dc24
  40dc64:	clc    
  40dc65:	xor    BYTE PTR [edx-0xc],0xf7
  40dc69:	pop    edi
  40dc6a:	pop    eax
  40dc6b:	je     0x40dcbc
  40dc6d:	lahf   
  40dc6e:	push   0xffffff9c
  40dc70:	(bad)  
  40dc71:	int3   
  40dc72:	cmp    ch,BYTE PTR [eax]
  40dc74:	lea    eax,[ecx+0x6acb37f3]
  40dc7a:	pop    esi
  40dc7b:	scas   al,BYTE PTR es:[edi]
  40dc7c:	mov    dl,0x9b
  40dc7e:	iret   
  40dc7f:	arpl   WORD PTR [ebp-0x6a63652f],bx
  40dc85:	pop    esp
  40dc86:	inc    esp
  40dc87:	in     al,dx
  40dc88:	icebp  
  40dc89:	sub    ch,BYTE PTR [esi+0x2a]
  40dc8c:	mov    WORD PTR [edx],ss
  40dc8e:	xor    bh,BYTE PTR [ebx]
  40dc90:	jg     0x40dc26
  40dc92:	mov    ds:0xb27837a8,al
  40dc97:	xchg   BYTE PTR [edi],al
  40dc99:	loopne 0x40dd1a
  40dc9b:	stos   DWORD PTR es:[edi],eax
  40dc9c:	xchg   DWORD PTR ds:0xd206824a,edx
  40dca2:	ror    DWORD PTR [edi+eax*8+0x1e52dbae],1
  40dca9:	ror    BYTE PTR [esi+0x7eb3c4b8],cl
  40dcaf:	es jae 0x40dd07
  40dcb2:	pop    esp
  40dcb3:	adc    BYTE PTR [edi],0x18
  40dcb6:	addr16 adc esp,ebp
  40dcb9:	clc    
  40dcba:	cmp    al,0x13
  40dcbc:	sahf   
  40dcbd:	test   eax,0xc7ac3663
  40dcc2:	pushf  
  40dcc3:	test   al,0x6f
  40dcc5:	stos   DWORD PTR es:[edi],eax
  40dcc6:	mov    eax,ds:0x3ecc6112
  40dccb:	mov    cr5,esi
  40dcce:	cli    
  40dccf:	in     eax,dx
  40dcd0:	jge    0x40dcae
  40dcd2:	push   eax
  40dcd3:	imul   edi,DWORD PTR es:[eax],0xffffffaa
  40dcd7:	and    esp,DWORD PTR [eax-0x32]
  40dcda:	cdq    
  40dcdb:	xor    BYTE PTR [ecx],bl
  40dcdd:	mov    edx,0xd667369b
  40dce2:	imul   edi,edi,0x9bc5d662
  40dce8:	mov    edi,esp
  40dcea:	out    0x80,al
  40dcec:	mov    ebx,0xf1b6a9c6
  40dcf1:	dec    esp
  40dcf2:	sti    
  40dcf3:	cmc    
  40dcf4:	jecxz  0x40dd37
  40dcf6:	inc    esi
  40dcf7:	xor    eax,DWORD PTR [esi]
  40dcf9:	test   BYTE PTR [esi-0xbc4c4a5],dh
  40dcff:	jmp    0x40dd66
  40dd01:	mov    WORD PTR [ebx+eax*2+0x69e18ba9],es
  40dd08:	add    al,0x9b
  40dd0a:	mov    cl,0x41
  40dd0c:	mov    ebp,0xd377349a
  40dd11:	xchg   edi,eax
  40dd12:	test   eax,0x800ab721
  40dd17:	sbb    edx,DWORD PTR es:[edx+0xf79293f]
  40dd1e:	push   edx
  40dd1f:	inc    ebp
  40dd20:	rol    al,0xc0
  40dd23:	rol    al,0xc0
  40dd26:	rol    al,0xc0
  40dd29:	rol    al,0xc0
  40dd2c:	rol    al,0xc0
  40dd2f:	rol    al,0xc0
  40dd32:	rol    al,0xc0
  40dd35:	rol    al,0xc0
  40dd38:	rol    al,0xc0
  40dd3b:	rol    al,0xc0
  40dd3e:	rol    al,0xc0
  40dd41:	rol    al,0xc0
  40dd44:	rol    al,0xc0
  40dd47:	rol    al,0xc0
  40dd4a:	rol    al,0xc0
  40dd4d:	rol    al,0xc0
  40dd50:	rol    al,0xc0
  40dd53:	rol    al,0xc0
  40dd56:	rol    al,0xd0
  40dd59:	and    ch,BYTE PTR [esi-0x77]
  40dd5c:	ja     0x40ddb8
  40dd5e:	add    al,0xdf
  40dd60:	or     edx,DWORD PTR [ebp-0x33585365]
  40dd66:	cmp    eax,0xc7d3f22e
  40dd6b:	stos   DWORD PTR es:[edi],eax
  40dd6c:	cmp    DWORD PTR [esi],ecx
  40dd6e:	push   ecx
  40dd6f:	jmp    0x75c0287d
  40dd74:	scas   eax,DWORD PTR es:[edi]
  40dd75:	jg     0x40dd8f
  40dd77:	or     al,0xad
  40dd79:	stos   DWORD PTR es:[edi],eax
  40dd7a:	push   edx
  40dd7b:	jmp    0x678fdd2
  40dd80:	ss call 0x2a:0x277722aa
  40dd88:	stc    
  40dd89:	inc    esi
  40dd8a:	jp     0x40dde6
  40dd8c:	and    al,0x92
  40dd8e:	sub    cl,BYTE PTR [eax]
  40dd90:	cdq    
  40dd91:	ds mov bl,0xa8
  40dd94:	push   edi
  40dd95:	out    dx,al
  40dd96:	call   0x935d0ee7
  40dd9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd9c:	pop    esi
  40dd9d:	sbb    edx,DWORD PTR [ecx-0x69]
  40dda0:	jo     0x40ddd6
  40dda2:	call   0x7d584834
  40dda7:	and    eax,0xe6ddb463
  40ddac:	pop    es
  40ddad:	es xchg ecx,eax
  40ddaf:	mov    edx,0x288e39f2
  40ddb4:	inc    esi
  40ddb5:	cmp    al,dl
  40ddb7:	cmovge ecx,DWORD PTR [esi+0x1ad7ae9a]
  40ddbe:	repz jo 0x40dd89
  40ddc1:	retf   0xf5c6
  40ddc4:	xchg   edi,eax
  40ddc5:	pushf  
  40ddc6:	inc    eax
  40ddc7:	mov    edi,DWORD PTR [ebx-0x42]
  40ddca:	pop    ss
  40ddcb:	mov    ch,BYTE PTR [edx+0x1]
  40ddce:	jmp    0xd8a5:0x34a02303
  40ddd5:	imul   edx,DWORD PTR [edi+0x16d9da71],0xfffffffa
  40dddc:	test   eax,0x2472d6ba
  40dde1:	mov    ds:0x1b26f736,al
  40dde6:	push   ss
  40dde7:	mov    cl,0x5c
  40dde9:	aam    0xce
  40ddeb:	pop    ecx
  40ddec:	sbb    BYTE PTR [edx],al
  40ddee:	cmc    
  40ddef:	fld    DWORD PTR [esp+edi*1+0x30]
  40ddf3:	pushf  
  40ddf4:	cmp    ebx,DWORD PTR [esp+ebx*1+0x73da3471]
  40ddfb:	adc    BYTE PTR [ebp-0x6a1448b1],0x24
  40de02:	lods   eax,DWORD PTR ds:[esi]
  40de03:	or     al,0x84
  40de05:	push   ebx
  40de06:	push   edx
  40de07:	jnp    0x40dd98
  40de09:	jl     0x40de1e
  40de0b:	daa    
  40de0c:	pop    edx
  40de0d:	pusha  
  40de0e:	aaa    
  40de0f:	jp     0x40de01
  40de11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de12:	jbe    0x40de5e
  40de14:	mov    al,0x24
  40de16:	pop    edi
  40de17:	sub    dl,cl
  40de19:	daa    
  40de1a:	(bad)  
  40de1b:	shl    BYTE PTR [edx+0x233c9a07],cl
  40de21:	ss push ss
  40de23:	das    
  40de24:	cdq    
  40de25:	pop    eax
  40de26:	js     0x40ddd9
  40de28:	xchg   DWORD PTR [edx],eax
  40de2a:	ror    DWORD PTR [ebp+esi*8+0x261732f0],0x27
  40de32:	jae    0x40de29
  40de34:	ss scas al,BYTE PTR es:[edi]
  40de36:	leave  
  40de37:	cli    
  40de38:	rcl    BYTE PTR [ebx+0x18],cl
  40de3b:	xor    al,0x5b
  40de3d:	arpl   WORD PTR [edi+0x35],sp
  40de40:	imul   ch
  40de42:	and    al,0x3c
  40de44:	xor    eax,ebx
  40de46:	xchg   edx,eax
  40de47:	xor    ebx,DWORD PTR [eax-0x77]
  40de4a:	(bad)  
  40de4c:	or     ebx,DWORD PTR [eax]
  40de4e:	cmp    DWORD PTR [edx-0x2],esi
  40de51:	dec    eax
  40de52:	neg    DWORD PTR [edi-0x6]
  40de55:	retf   
  40de56:	xchg   edi,eax
  40de57:	adc    al,0x3e
  40de59:	add    eax,0x74e8cf4c
  40de5e:	outs   dx,DWORD PTR ds:[esi]
  40de5f:	xchg   esp,eax
  40de60:	mov    esp,DWORD PTR [eax+0x6b045e4c]
  40de66:	rol    BYTE PTR [ebx+0x71934740],1
  40de6c:	inc    esi
  40de6d:	adc    DWORD PTR [eax+0x6ef5b519],ebp
  40de73:	push   ecx
  40de74:	mov    edx,0x7b1cda49
  40de79:	into   
  40de7a:	loop   0x40de50
  40de7c:	div    DWORD PTR [edi]
  40de7e:	mov    dl,0x1d
  40de80:	add    DWORD PTR [edx+0x5d],esi
  40de83:	aam    0x5a
  40de85:	sub    BYTE PTR [esi],bh
  40de87:	add    DWORD PTR [eax],esp
  40de89:	xor    ah,BYTE PTR [esi+0x73]
  40de8c:	(bad)
  40de91:	xchg   esp,eax
  40de92:	dec    esi
  40de93:	push   0xa1c73363
  40de98:	mov    al,ds:0x3ed0dafe
  40de9d:	bound  edi,QWORD PTR [edx]
  40de9f:	(bad)  
  40dea0:	sub    eax,DWORD PTR [esi+eiz*8+0x36f408e8]
  40dea7:	inc    eax
  40dea8:	xchg   DWORD PTR ds:0xd5d30bcb,edx
  40deae:	add    BYTE PTR [ebx],dl
  40deb0:	jp     0x40df0e
  40deb2:	or     DWORD PTR [ebp-0x2e],ecx
  40deb5:	dec    esi
  40deb6:	pop    edx
  40deb7:	jno    0x40de4b
  40deb9:	xchg   esi,eax
  40deba:	mov    ebx,0xae5a05a9
  40debf:	ja     0x40df10
  40dec1:	pop    ss
  40dec2:	out    0x12,al
  40dec4:	xor    al,0xd4
  40dec6:	fucomp st(7)
  40dec8:	cwde   
  40dec9:	mov    ah,0xbe
  40decb:	das    
  40decc:	mov    dl,0xc0
  40dece:	retf   0x3d4f
  40ded1:	sahf   
  40ded2:	and    al,ah
  40ded4:	ret    0x5149
  40ded7:	adc    BYTE PTR [edi],bl
  40ded9:	sub    DWORD PTR [edi],eax
  40dedb:	or     eax,0xef1d9e5e
  40dee0:	jge    0x40deb5
  40dee2:	aas    
  40dee3:	pop    ebx
  40dee4:	xchg   BYTE PTR [edi+0x11],bl
  40dee7:	scas   al,BYTE PTR es:[edi]
  40dee8:	xor    ch,BYTE PTR ds:0x394464c1
  40deee:	aas    
  40deef:	mov    DWORD PTR [ecx-0xa],ebx
  40def2:	dec    esi
  40def3:	cmp    BYTE PTR [ebp+0x660f6437],0x1f
  40defa:	mov    cl,dl
  40defc:	jecxz  0x40dea8
  40defe:	push   es
  40deff:	xor    esp,DWORD PTR [edi+eax*4-0x7181ef00]
  40df06:	push   ebx
  40df07:	aaa    
  40df08:	sbb    DWORD PTR [edi],edx
  40df0a:	es sbb al,0xd4
  40df0d:	mov    DWORD PTR [ecx-0x2728de8d],ebx
  40df13:	cmp    BYTE PTR [ecx-0x1e],al
  40df16:	inc    edi
  40df17:	js     0x40dede
  40df19:	popa   
  40df1a:	popa   
  40df1b:	inc    eax
  40df1c:	arpl   WORD PTR [ecx],bx
  40df1e:	jl     0x40df52
  40df20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df21:	outs   dx,DWORD PTR ds:[esi]
  40df22:	push   esi
  40df23:	adc    BYTE PTR [edx+0x63],dl
  40df26:	inc    eax
  40df27:	push   ds
  40df28:	shl    BYTE PTR [ecx-0x2c],cl
  40df2b:	in     al,dx
  40df2c:	cmc    
  40df2d:	cmp    esp,DWORD PTR [esi]
  40df2f:	mov    ds:0xc49b2815,eax
  40df34:	mov    ebp,0x9909b37e
  40df39:	sbb    DWORD PTR [edi-0x549ce08c],esp
  40df3f:	mov    ebp,ebp
  40df41:	ret    0xe13a
  40df44:	imul   esp,DWORD PTR [ebp-0x74],0x37
  40df48:	push   edx
  40df49:	shl    ch,cl
  40df4b:	add    al,0xbb
  40df4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4e:	fiadd  DWORD PTR [edx+0x2391b69a]
  40df54:	inc    esp
  40df55:	inc    esi
  40df56:	cwde   
  40df57:	ret    
  40df58:	sti    
  40df59:	add    ch,BYTE PTR [edi]
  40df5b:	stos   DWORD PTR es:[edi],eax
  40df5c:	sbb    al,0xe
  40df5e:	mov    ch,0xcf
  40df60:	or     al,0xbb
  40df62:	and    ch,ah
  40df64:	jo     0x40dfb0
  40df66:	xchg   edi,eax
  40df67:	gs push esp
  40df69:	outs   dx,BYTE PTR ds:[esi]
  40df6a:	push   ss
  40df6b:	int3   
  40df6c:	cmp    BYTE PTR [ebx],ch
  40df6e:	fwait
  40df6f:	mov    ecx,0x7cec6e27
  40df74:	ja     0x40df58
  40df76:	call   0x871133fa
  40df7b:	xor    esp,DWORD PTR [ebx+0x1f]
  40df7e:	and    al,0x66
  40df80:	ds loopne 0x40dfae
  40df83:	retf   
  40df84:	(bad)  [edi-0x51a86dae]
  40df8a:	jne    0x40dfb5
  40df8c:	mov    edx,DWORD PTR [ecx]
  40df8e:	sub    BYTE PTR [ecx+0x17],dh
  40df91:	pop    ss
  40df92:	sbb    eax,0x40be0859
  40df97:	mov    dl,0x37
  40df99:	iret   
  40df9a:	mov    WORD PTR [ecx+edi*1+0x1a8fde8f],fs
  40dfa1:	iret   
  40dfa2:	push   edx
  40dfa3:	xor    dh,bh
  40dfa5:	and    edi,DWORD PTR [edi]
  40dfa7:	inc    ebp
  40dfa8:	lods   eax,DWORD PTR ds:[esi]
  40dfa9:	int    0xab
  40dfab:	sbb    eax,edx
  40dfad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfae:	pop    ecx
  40dfaf:	lea    edi,gs:[ebp+0x26]
  40dfb3:	aam    0x6c
  40dfb5:	jne    0x40dfea
  40dfb7:	addr16 jnp 0x40dfd0
  40dfba:	mov    dh,BYTE PTR [edi]
  40dfbc:	adc    al,0x2b
  40dfbe:	daa    
  40dfbf:	aaa    
  40dfc0:	bound  edi,QWORD PTR [ebp+eax*4-0x3bb0ffe4]
  40dfc7:	xor    eax,DWORD PTR [ecx+0x26a90397]
  40dfcd:	std    
  40dfce:	lea    ebp,[edx+0x18a48a35]
  40dfd4:	mov    dh,0x19
  40dfd6:	push   edx
  40dfd7:	sub    edi,eax
  40dfd9:	jo     0x40df6f
  40dfdb:	fmul   DWORD PTR [esi-0x1ccd4e58]
  40dfe1:	jb     0x40dfd8
  40dfe3:	ins    BYTE PTR es:[edi],dx
  40dfe4:	jg     0x40e048
  40dfe6:	cld    
  40dfe7:	fbstp  TBYTE PTR [ebp+eiz*1-0x6f69b3e5]
  40dfee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfef:	in     eax,dx
  40dff0:	push   ebx
  40dff1:	or     esp,eax
  40dff3:	add    BYTE PTR [edx-0x1e],bl
  40dff6:	(bad)
  40dff9:	xchg   edi,eax
  40dffa:	jbe    0x40e012
  40dffc:	cli    
  40dffd:	shr    ecx,cl
  40dfff:	adc    DWORD PTR [eax],edi
  40e001:	cmp    al,0xa8
  40e003:	adc    eax,0x1c1bde46
  40e008:	je     0x40dff6
  40e00a:	adc    ecx,DWORD PTR [ebx]
  40e00c:	and    ecx,DWORD PTR [edx+eax*1]
  40e00f:	fld    QWORD PTR [ebx+0x4acb90ec]
  40e015:	mov    ds:0xc782c589,al
  40e01a:	xor    dl,BYTE PTR [eax]
  40e01c:	repnz dec esi
  40e01e:	dec    esi
  40e01f:	or     al,0xae
  40e021:	cmp    edx,DWORD PTR ds:[ebx+0x78]
  40e025:	punpckhdq mm0,QWORD PTR [edx]
  40e028:	fwait
  40e029:	int    0x8c
  40e02b:	cmp    ah,BYTE PTR [edx+eiz*1]
  40e02e:	es scas eax,DWORD PTR es:[edi]
  40e030:	sub    dh,dl
  40e032:	call   0x2c7ce750
  40e037:	(bad)  
  40e038:	lods   al,BYTE PTR ds:[esi]
  40e039:	inc    DWORD PTR [eax]
  40e03b:	dec    edi
  40e03c:	inc    eax
  40e03d:	loop   0x40dfeb
  40e03f:	dec    esi
  40e040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e041:	inc    esp
  40e042:	pop    edi
  40e043:	sbb    eax,0xc794223c
  40e048:	jmp    0x2081:0xbe599706
  40e04f:	clc    
  40e050:	jecxz  0x40dfe2
  40e052:	retf   
  40e053:	ror    DWORD PTR [edx],0xe1
  40e056:	push   eax
  40e057:	into   
  40e058:	xor    BYTE PTR [esi],dl
  40e05a:	mov    dh,bh
  40e05c:	fld    QWORD PTR [esi-0x4]
  40e05f:	push   0xffffffaf
  40e061:	std    
  40e062:	jp     0x40e0ab
  40e064:	sub    dh,BYTE PTR [esi*1-0x5193764a]
  40e06b:	cmp    al,0x5e
  40e06d:	cmp    DWORD PTR [edx-0x70],edx
  40e070:	inc    esp
  40e071:	mov    edx,0x897048b4
  40e076:	test   BYTE PTR [edi],dl
  40e078:	add    al,0xa
  40e07a:	cmp    esp,DWORD PTR [edx+eax*2-0x468abb09]
  40e081:	out    dx,al
  40e082:	push   cs
  40e083:	fadd   DWORD PTR [esi-0x1a]
  40e086:	and    ebp,DWORD PTR [edi+0x2bd8e0a9]
  40e08c:	and    bl,bl
  40e08e:	fild   QWORD PTR [ecx]
  40e090:	stc    
  40e091:	jne    0x40e0fa
  40e093:	xchg   edx,eax
  40e094:	dec    ecx
  40e095:	sbb    edi,DWORD PTR [esi+0x34]
  40e098:	lds    edi,FWORD PTR [edi-0x3a]
  40e09b:	data16 mov dh,0xae
  40e09e:	mov    dh,0xc8
  40e0a0:	push   ds
  40e0a1:	lea    esp,[ecx]
  40e0a3:	jmp    0xda8d:0x214238a8
  40e0aa:	push   0xb
  40e0ac:	mov    edx,0x6786ce2
  40e0b1:	call   0x7080:0xea7ab729
  40e0b8:	(bad)  
  40e0b9:	(bad)  
  40e0ba:	ins    DWORD PTR es:[edi],dx
  40e0bb:	call   0xc8dc6c7e
  40e0c0:	sbb    eax,esp
  40e0c2:	or     eax,0xae9717b0
  40e0c7:	add    eax,0x9aaba6e
  40e0cc:	je     0x40e13b
  40e0ce:	mov    al,ds:0x1a829252
  40e0d3:	sbb    DWORD PTR [eax+0x65],ecx
  40e0d6:	lods   al,BYTE PTR ds:[esi]
  40e0d7:	imul   BYTE PTR [eax-0x19]
  40e0da:	sbb    BYTE PTR [eax],0xe5
  40e0dd:	add    ah,ah
  40e0df:	ins    DWORD PTR es:[edi],dx
  40e0e0:	jne    0x40e0f4
  40e0e2:	fiadd  WORD PTR [ebx-0x2ada8bd1]
  40e0e8:	xor    ebx,DWORD PTR [ebx+0x5951e401]
  40e0ee:	pop    ecx
  40e0ef:	outs   dx,BYTE PTR ds:[esi]
  40e0f0:	aam    0x6
  40e0f2:	neg    BYTE PTR [eax-0xc]
  40e0f5:	push   0xde97c3c7
  40e0fa:	out    0x17,al
  40e0fc:	xor    BYTE PTR [ecx-0x54860839],cl
  40e102:	aad    0x6
  40e104:	xchg   edx,eax
  40e105:	cmp    al,0x11
  40e107:	bound  edi,QWORD PTR [esp+eax*4+0x2]
  40e10b:	sub    dl,BYTE PTR [esi-0x10b1570a]
  40e111:	int3   
  40e112:	call   0x54b7:0x8fcc6321
  40e119:	push   ss
  40e11a:	data16 jl 0x40e12d
  40e11d:	mov    cl,BYTE PTR [ebx]
  40e11f:	xlat   BYTE PTR ds:[ebx]
  40e120:	jmp    0xbbe2:0x5c8f6ad6
  40e127:	hlt    
  40e128:	fcomp  QWORD PTR [edx+edi*4-0x43ba6628]
  40e12f:	les    edx,FWORD PTR [esi+0x2b9420c4]
  40e135:	pop    ebp
  40e136:	bnd jno 0x40e1b6
  40e139:	mov    BYTE PTR ds:0x563daa3a,bh
  40e13f:	add    eax,0xa5dd5089
  40e144:	sub    BYTE PTR [ebx+0x58ed3b4e],cl
  40e14a:	arpl   WORD PTR [edx+0x65],cx
  40e14d:	add    BYTE PTR [eax+eax*1],bh
  40e150:	je     0x40e13b
  40e152:	test   al,0x7c
  40e154:	dec    esp
  40e155:	call   0x3cde4dd1
  40e15a:	add    DWORD PTR [edx+ebp*4],0x62
  40e15e:	or     al,BYTE PTR [eax+0x1e76cd21]
  40e164:	lock mov ch,0xd9
  40e167:	xchg   ecx,eax
  40e168:	lea    eax,[edi]
  40e16a:	xor    bl,BYTE PTR [edi+0xda7f96d]
  40e170:	aad    0xd6
  40e172:	repz cld 
  40e174:	ficomp WORD PTR [ebx]
  40e176:	xchg   ecx,eax
  40e177:	xor    eax,0xbfb36160
  40e17c:	or     BYTE PTR [edi-0x5616f982],bh
  40e182:	call   0xd038:0xfcc67a63
  40e189:	ins    BYTE PTR es:[edi],dx
  40e18a:	add    DWORD PTR [esi],0xbdfcafba
  40e190:	int    0xae
  40e192:	fcom   DWORD PTR [edx-0x4207ce16]
  40e198:	rcl    BYTE PTR [edx+0x3d21781],1
  40e19e:	and    BYTE PTR [edx-0x70],bl
  40e1a1:	inc    edi
  40e1a2:	sbb    DWORD PTR [eax],0x370593b1
  40e1a8:	adc    BYTE PTR [edx+0x2f],bh
  40e1ab:	inc    ebx
  40e1ad:	adc    dl,BYTE PTR [ebp-0x2a]
  40e1b0:	imul   edi,DWORD PTR [ecx],0xc81c136f
  40e1b6:	in     eax,0x2f
  40e1b8:	pop    ebx
  40e1b9:	cmp    ax,dx
  40e1bc:	retf   
  40e1bd:	outs   dx,BYTE PTR ds:[esi]
  40e1be:	push   edx
  40e1bf:	and    DWORD PTR [ecx+0x13cf66df],edx
  40e1c5:	mov    ch,0xeb
  40e1c8:	xchg   esi,eax
  40e1c9:	push   cs
  40e1ca:	sbb    al,dl
  40e1cc:	je     0x40e1b4
  40e1ce:	adc    ecx,DWORD PTR [esi-0x73]
  40e1d1:	xor    al,0x2f
  40e1d3:	jnp    0x40e213
  40e1d5:	sub    bl,BYTE PTR [edi+0x375c0e98]
  40e1db:	les    edx,FWORD PTR [edx+0x6]
  40e1de:	retf   
  40e1df:	add    eax,0xb39c773
  40e1e4:	sbb    eax,0x9228d7ab
  40e1e9:	mov    al,0x75
  40e1eb:	sub    dl,BYTE PTR [edx]
  40e1ed:	adc    bh,BYTE PTR [ebp+esi*1-0x7f]
  40e1f1:	out    0x86,eax
  40e1f3:	add    DWORD PTR [ecx-0x74],ebx
  40e1f6:	dec    ecx
  40e1f7:	es test dh,ch
  40e1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1fb:	test   ebx,edx
  40e1fd:	and    eax,0xf928d07e
  40e202:	aas    
  40e203:	mov    esp,0x13aa1f58
  40e208:	sub    eax,0x41586acb
  40e20d:	ror    ebp,1
  40e20f:	rcr    BYTE PTR [ecx-0x7d],cl
  40e212:	xor    ebp,DWORD PTR [ebx+0x45a28f61]
  40e218:	xor    edx,DWORD PTR [edx]
  40e21a:	cmp    DWORD PTR [bp+0x36],0x46
  40e21f:	mov    ebp,0x27600640
  40e224:	mov    esi,0x6cebf2c4
  40e229:	mov    cl,BYTE PTR [edx-0x6c7f71b7]
  40e22f:	pop    es
  40e230:	stos   DWORD PTR es:[edi],eax
  40e231:	jne    0x40e1bd
  40e233:	pop    edi
  40e234:	sbb    BYTE PTR ds:[edi+esi*4],0x9e
  40e239:	xchg   ebp,eax
  40e23a:	aaa    
  40e23b:	jns    0x40e25d
  40e23d:	push   esp
  40e23e:	mov    esp,0xeadfef25
  40e243:	add    DWORD PTR [ecx],ecx
  40e245:	dec    esi
  40e246:	lods   al,BYTE PTR ds:[esi]
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	push   edx
  40e249:	out    0xd1,eax
  40e24b:	repz inc eax
  40e24d:	xchg   edx,eax
  40e24e:	stc    
  40e24f:	repz push ebx
  40e251:	pop    esp
  40e252:	sti    
  40e253:	test   DWORD PTR [esi+0x5a],ecx
  40e256:	mov    ?,WORD PTR [eax]
  40e258:	push   ebx
  40e259:	cwde   
  40e25a:	add    bh,BYTE PTR ds:0xda48f146
  40e260:	push   0xd0349202
  40e265:	repz mov dl,0xda
  40e268:	hlt    
  40e269:	dec    edi
  40e26a:	sub    ah,BYTE PTR [ecx+0x1e2e4ded]
  40e270:	int3   
  40e271:	dec    ebp
  40e272:	sbb    edi,DWORD PTR [ebp+0x61]
  40e275:	add    dh,BYTE PTR [ebx+0x4d3e1dc]
  40e27b:	cmp    ebx,DWORD PTR [eax]
  40e27d:	aad    0x9c
  40e27f:	jmp    0xaeefe51d
  40e284:	push   ebp
  40e285:	retf   0xc694
  40e288:	aas    
  40e289:	sbb    BYTE PTR [esi],bl
  40e28b:	and    DWORD PTR [edi],eax
  40e28d:	loop   0x40e267
  40e28f:	mov    bl,0xee
  40e291:	dec    esi
  40e292:	mov    al,BYTE PTR [ecx+0x37bf5bda]
  40e298:	imul   ebp,ecx,0x5003c0bf
  40e29e:	retf   
  40e29f:	fdivr  QWORD PTR [ecx-0x1a]
  40e2a2:	sbb    DWORD PTR [ecx],ebx
  40e2a4:	lods   eax,DWORD PTR ds:[esi]
  40e2a5:	add    BYTE PTR [edi-0x3d],0x41
  40e2a9:	out    0x63,al
  40e2ab:	mov    WORD PTR ds:0xe5062104,ss
  40e2b1:	push   ds
  40e2b2:	cmp    eax,DWORD PTR [ebx-0x1be01de5]
  40e2b8:	pop    edx
  40e2b9:	into   
  40e2ba:	xor    eax,0x5a746655
  40e2bf:	dec    edi
  40e2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c1:	jbe    0x40e314
  40e2c3:	loopne 0x40e27d
  40e2c5:	push   eax
  40e2c6:	and    al,0x8f
  40e2c8:	dec    edx
  40e2c9:	add    bl,ah
  40e2cb:	sbb    ebx,DWORD PTR [esi-0x58]
  40e2ce:	enter  0x854b,0x8b
  40e2d2:	jnp    0x40e328
  40e2d4:	dec    edi
  40e2d5:	cmp    DWORD PTR [esp+ebx*1+0x2d91d741],0x7bee07d4
  40e2e0:	xor    al,0x26
  40e2e2:	sti    
  40e2e3:	adc    dl,dl
  40e2e5:	sub    BYTE PTR [ecx],bh
  40e2e7:	ins    BYTE PTR es:[edi],dx
  40e2e8:	jae    0x40e2b8
  40e2ea:	mov    dl,0xbb
  40e2ec:	stos   DWORD PTR es:[edi],eax
  40e2ed:	outs   dx,BYTE PTR ds:[esi]
  40e2ee:	dec    bh
  40e2f0:	mov    esp,0x6d71475c
  40e2f5:	sub    BYTE PTR [ebx],bl
  40e2f7:	push   ebx
  40e2f8:	push   es
  40e2f9:	push   ds
  40e2fa:	repz pusha 
  40e2fc:	(bad)  
  40e2fd:	mov    ah,0x23
  40e2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e300:	mov    ecx,0xa7054b36
  40e305:	pop    ecx
  40e306:	lahf   
  40e307:	push   esi
  40e308:	inc    ebx
  40e309:	jp     0x40e334
  40e30b:	sbb    eax,0xb5722aaf
  40e310:	mov    ch,0x6b
  40e312:	repnz mov WORD PTR [ecx+esi*8],ss
  40e316:	jb     0x40e2ce
  40e318:	mov    ch,0x4b
  40e31a:	test   DWORD PTR [ecx+0x79472279],0x95d76553
  40e324:	push   es
  40e325:	jg     0x40e2e2
  40e327:	mov    edx,0xcbfa0b3d
  40e32c:	addr16 inc edx
  40e32e:	xchg   esi,eax
  40e32f:	cmp    al,0xfc
  40e331:	pop    sp
  40e333:	rcl    BYTE PTR [ebp+0x78],0xcf
  40e337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e338:	xchg   esp,eax
  40e339:	push   esi
  40e33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33b:	and    ebx,edx
  40e33d:	and    eax,DWORD PTR [ecx]
  40e33f:	and    BYTE PTR [ecx+0x60],bh
  40e342:	push   cs
  40e343:	hlt    
  40e344:	pop    esp
  40e345:	jg     0x40e32d
  40e347:	(bad)  
  40e349:	xlat   BYTE PTR ds:[ebx]
  40e34a:	jbe    0x40e39b
  40e34c:	addr16 sub eax,0x103ecb2
  40e352:	add    ecx,DWORD PTR [esi+0x7]
  40e355:	aam    0x84
  40e357:	scas   al,BYTE PTR es:[edi]
  40e358:	mov    dl,0x4c
  40e35a:	lea    eax,[ebx-0x6e]
  40e35d:	mov    dh,dh
  40e35f:	scas   eax,DWORD PTR es:[edi]
  40e360:	clc    
  40e361:	cli    
  40e362:	loope  0x40e376
  40e364:	jbe    0x40e35b
  40e366:	mov    edi,0x5e486955
  40e36b:	pop    eax
  40e36c:	mov    dl,0xdd
  40e36e:	sub    cl,BYTE PTR [eax]
  40e370:	xor    DWORD PTR [eax-0xa],ecx
  40e373:	inc    edx
  40e374:	stos   BYTE PTR es:[edi],al
  40e375:	push   ebx
  40e376:	mov    ecx,0x32ca291f
  40e37b:	cdq    
  40e37c:	sbb    BYTE PTR [edx+0x10ec00e5],ch
  40e382:	inc    eax
  40e383:	push   0x48
  40e385:	mov    ?,WORD PTR [ebx]
  40e387:	and    dl,BYTE PTR [edx]
  40e389:	xchg   DWORD PTR [ebp+0x3d79004],ecx
  40e38f:	in     eax,dx
  40e390:	jp     0x40e35d
  40e392:	neg    BYTE PTR [edx]
  40e394:	mov    al,0x3a
  40e396:	(bad)  
  40e397:	and    DWORD PTR [ebp+0x36],eax
  40e39a:	sub    ch,BYTE PTR ds:0x8be4dafb
  40e3a0:	je     0x40e40e
  40e3a2:	xchg   edx,eax
  40e3a3:	fist   WORD PTR [edi-0x4c]
  40e3a6:	clc    
  40e3a7:	sti    
  40e3a8:	jo     0x40e379
  40e3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ab:	sti    
  40e3ac:	ins    DWORD PTR es:[edi],dx
  40e3ad:	xchg   DWORD PTR [esi-0x6d4bcab8],eax
  40e3b3:	or     dh,BYTE PTR [esi+edi*8]
  40e3b6:	mov    ebp,0x9871d137
  40e3bb:	loopne 0x40e350
  40e3bd:	push   ebp
  40e3be:	sub    ebp,ebx
  40e3c0:	or     BYTE PTR [edx-0x78a89b2c],ch
  40e3c6:	cmp    DWORD PTR [ecx],0x7
  40e3c9:	sahf   
  40e3ca:	fimul  DWORD PTR [esi+0xfb71ae9]
  40e3d0:	sub    DWORD PTR [ecx-0x78],ebx
  40e3d3:	jge    0x40e417
  40e3d5:	stos   BYTE PTR es:[edi],al
  40e3d6:	(bad)  
  40e3d7:	out    0x8b,al
  40e3d9:	(bad)  
  40e3da:	mov    ebx,DWORD PTR [edx-0x42]
  40e3dd:	add    DWORD PTR [edx],eax
  40e3df:	pop    ebp
  40e3e0:	sbb    eax,0xbdc8841d
  40e3e5:	sbb    al,0xa8
  40e3e7:	dec    ebp
  40e3e8:	popa   
  40e3e9:	sub    edi,DWORD PTR [ebp+0x2bfd7e80]
  40e3ef:	push   0xfa2badc1
  40e3f4:	or     DWORD PTR [edx-0x9],ecx
  40e3f7:	out    0x74,eax
  40e3f9:	(bad)  
  40e3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3fb:	push   es
  40e3fc:	and    al,0xcf
  40e3fe:	cdq    
  40e3ff:	inc    edx
  40e400:	es xchg esp,eax
  40e402:	push   ebx
  40e403:	std    
  40e404:	sub    al,0xca
  40e406:	mov    edi,0x90f91807
  40e40b:	(bad)  
  40e40c:	bound  ecx,QWORD PTR [ecx+0x7]
  40e40f:	and    BYTE PTR [esi-0x3e],dl
  40e412:	leave  
  40e413:	jmp    0x565b6d94
  40e418:	mov    bl,0xb4
  40e41a:	jecxz  0x40e421
  40e41c:	mov    bl,0x35
  40e41e:	sbb    eax,0x32d102e4
  40e423:	arpl   WORD PTR [eax-0x22],bx
  40e426:	mov    esi,0xbad83f36
  40e42b:	mov    ebp,DWORD PTR [eax+0x5a]
  40e42e:	popf   
  40e42f:	xchg   esp,eax
  40e430:	jo     0x40e467
  40e432:	and    ch,al
  40e434:	inc    eax
  40e435:	loop   0x40e400
  40e437:	out    dx,al
  40e438:	sbb    al,0x57
  40e43a:	dec    esi
  40e43b:	cmp    cl,bl
  40e43d:	call   0x3983:0x5d720d72
  40e444:	push   edi
  40e445:	cld    
  40e446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e447:	sub    esp,DWORD PTR [ebp+0x61]
  40e44a:	rol    BYTE PTR [ebx],0x22
  40e44d:	push   edi
  40e44e:	aaa    
  40e44f:	not    BYTE PTR [esi-0xd]
  40e452:	(bad)  
  40e453:	pushw  ss
  40e455:	and    eax,0x7604ed2
  40e45a:	mov    eax,0x8c2f72bf
  40e45f:	iret   
  40e460:	mov    ch,BYTE PTR [ebp-0x2e2dc6be]
  40e466:	cld    
  40e467:	dec    edi
  40e468:	push   esp
  40e469:	fwait
  40e46a:	mov    DWORD PTR [ebx+0x2f99aa67],esp
  40e470:	cmp    eax,0x3c9dd9c8
  40e475:	inc    edx
  40e476:	mov    edi,0xbc2741b3
  40e47b:	xor    eax,0x37286e2b
  40e480:	cmc    
  40e481:	xchg   edx,eax
  40e482:	shl    DWORD PTR ds:0xe6528f1b,1
  40e488:	adc    ah,ah
  40e48a:	mov    ebp,0xa7e68773
  40e48f:	xchg   esp,eax
  40e490:	fld    st(4)
  40e492:	lea    esi,[edi]
  40e494:	rol    BYTE PTR ds:0x55e699e1,cl
  40e49a:	gs jl  0x40e50a
  40e49d:	(bad)  
  40e49e:	push   edx
  40e49f:	retf   0xc577
  40e4a2:	mov    ecx,0xc97ebf4f
  40e4a7:	(bad)  
  40e4a8:	sub    edi,DWORD PTR [ecx+eiz*8+0x12e2d673]
  40e4af:	ins    BYTE PTR es:[edi],dx
  40e4b0:	loopne 0x40e46c
  40e4b2:	fld    QWORD PTR [eax]
  40e4b4:	gs adc ebp,ecx
  40e4b7:	add    al,0xd7
  40e4b9:	fsubr  DWORD PTR [esp+eax*2+0x3d101b03]
  40e4c0:	push   eax
  40e4c1:	(bad)  
  40e4c4:	jp     0x40e4eb
  40e4c6:	xor    BYTE PTR [edx+0x6b],dl
  40e4c9:	sub    esp,DWORD PTR [edi-0x64feb3d1]
  40e4cf:	push   ebx
  40e4d0:	adc    eax,0x2189cfd6
  40e4d5:	sbb    eax,0x7efc6bce
  40e4da:	scas   eax,DWORD PTR es:[edi]
  40e4db:	retf   
  40e4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4dd:	xor    eax,0xb2246c58
  40e4e2:	push   cs
  40e4e3:	push   esp
  40e4e4:	dec    edx
  40e4e5:	mov    edi,DWORD PTR [esp+edi*2+0x24c29699]
  40e4ec:	(bad)  
  40e4ed:	pop    edx
  40e4ee:	mov    ebx,0xca542d74
  40e4f3:	push   ebx
  40e4f4:	ja     0x40e552
  40e4f6:	sbb    BYTE PTR [ebx+esi*1],cl
  40e4f9:	ret    
  40e4fa:	mov    esi,0xea1fa70a
  40e4ff:	pop    ecx
  40e500:	pop    edi
  40e501:	push   esi
  40e502:	xor    BYTE PTR [ebx+0x33981ae3],bh
  40e508:	hlt    
  40e509:	inc    ebx
  40e50a:	das    
  40e50b:	stos   BYTE PTR es:[edi],al
  40e50c:	add    cx,WORD PTR [eax+0x7ba5a19]
  40e513:	das    
  40e514:	pop    es
  40e515:	push   esi
  40e516:	mov    ss,WORD PTR [edx]
  40e518:	lock or al,0xf6
  40e51b:	push   ss
  40e51c:	cli    
  40e51d:	sbb    DWORD PTR [eax-0x3402cb4d],0xf0b6898a
  40e527:	pop    esi
  40e528:	rol    al,0xc0
  40e52b:	rol    al,0xc0
  40e52e:	rol    al,0xc0
  40e531:	rol    al,0xc0
  40e534:	rol    al,0xc0
  40e537:	rol    al,0xc0
  40e53a:	rol    al,0xc0
  40e53d:	rol    al,0xc0
  40e540:	rol    al,0xc0
  40e543:	rol    al,0xc0
  40e546:	rol    al,0xc0
  40e549:	rol    al,0xc0
  40e54c:	rol    al,0xc0
  40e54f:	rol    al,0xc0
  40e552:	rol    al,0xc0
  40e555:	rol    al,0xc0
  40e558:	rol    al,0xc0
  40e55b:	rol    al,0xc0
  40e55e:	rol    al,0xc0
  40e561:	rol    al,0xc0
  40e564:	rol    al,0xc0
  40e567:	rol    al,0xc0
  40e56a:	rol    al,0xc0
  40e56d:	rol    al,0xc0
  40e570:	rol    al,0xc0
  40e573:	rol    al,0xc0
  40e576:	rol    al,0xd
  40e579:	jb     0x40e5ce
  40e57b:	ins    BYTE PTR es:[edi],dx
  40e57c:	outs   dx,BYTE PTR ds:[esi]
  40e57d:	inc    ebx
  40e57e:	add    al,0xfd
  40e580:	pop    ss
  40e581:	add    DWORD PTR [esi+0xab6161e],esp
  40e587:	idiv   DWORD PTR [esi]
  40e589:	or     BYTE PTR [esi-0x27c31c70],dl
  40e58f:	gs mov bh,0xbd
  40e592:	sub    DWORD PTR [edx+0x622e2241],edx
  40e598:	jge    0x40e5de
  40e59a:	(bad)  
  40e59b:	fdivr  DWORD PTR [eax+eiz*1-0x50]
  40e59f:	iret   
  40e5a0:	test   BYTE PTR [esi+edi*4-0x14],cl
  40e5a4:	shl    DWORD PTR [edx],0x5
  40e5a7:	vmwrite esi,DWORD PTR [edx-0x635868e3]
  40e5ae:	xor    dh,bl
  40e5b0:	jecxz  0x40e5af
  40e5b2:	leave  
  40e5b3:	mov    ch,0x94
  40e5b5:	cmp    BYTE PTR [ecx+0x16d01156],0x96
  40e5bc:	daa    
  40e5bd:	dec    edx
  40e5be:	cmc    
  40e5bf:	pop    es
  40e5c0:	adc    eax,0x54601c7b
  40e5c5:	(bad)  
  40e5c6:	mov    dl,0x96
  40e5c8:	lds    eax,FWORD PTR [edi+0x46de0690]
  40e5ce:	ds dec edi
  40e5d0:	push   ebp
  40e5d1:	stc    
  40e5d2:	xor    BYTE PTR [eax+edi*1],bh
  40e5d5:	sub    edx,DWORD PTR [edx-0x32028bb0]
  40e5db:	inc    ecx
  40e5dc:	fs inc eax
  40e5de:	call   0xc4cd1edf
  40e5e3:	jbe    0x40e640
  40e5e5:	pusha  
  40e5e6:	repz jecxz 0x40e65c
  40e5e9:	int3   
  40e5ea:	xchg   ebp,eax
  40e5eb:	pop    esi
  40e5ec:	push   ss
  40e5ed:	push   esp
  40e5ee:	mov    fs,WORD PTR [ebx-0x6]
  40e5f1:	popa   
  40e5f2:	mov    esp,0xf3434bbb
  40e5f7:	cmp    BYTE PTR [edx+0x1],bh
  40e5fa:	lea    ecx,ds:0x3a19b24
  40e600:	push   ecx
  40e601:	data16 add dh,BYTE PTR [edi-0x1a]
  40e605:	dec    edx
  40e606:	lock xor dh,dh
  40e609:	stos   DWORD PTR es:[edi],eax
  40e60a:	sbb    BYTE PTR [edi],bl
  40e60c:	inc    esi
  40e60d:	dec    esi
  40e60e:	mov    bh,0xcc
  40e610:	sbb    cl,ch
  40e612:	push   ebp
  40e613:	push   ecx
  40e614:	mov    ch,0x15
  40e616:	mov    al,0x74
  40e618:	inc    edi
  40e619:	aad    0x7d
  40e61b:	xchg   BYTE PTR [eax-0x6e],dh
  40e61e:	pushf  
  40e61f:	inc    ebp
  40e620:	aas    
  40e621:	sbb    eax,0x26b75a77
  40e626:	mov    ebx,0x44c21144
  40e62b:	pop    edi
  40e62c:	xchg   ebp,eax
  40e62d:	jno    0x40e5d1
  40e62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e630:	dec    esi
  40e631:	repz (bad) 
  40e633:	gs daa 
  40e635:	sub    DWORD PTR [ebx-0x7cd59831],esi
  40e63b:	sub    eax,0x3f7f7908
  40e640:	ja     0x40e67d
  40e642:	or     bl,dl
  40e644:	stc    
  40e645:	jbe    0x40e5db
  40e647:	cmp    DWORD PTR [edx],ecx
  40e649:	retf   0xdec9
  40e64c:	xor    DWORD PTR [ecx-0x2ab0d077],esp
  40e652:	lods   eax,DWORD PTR ds:[esi]
  40e653:	sbb    BYTE PTR [esi],al
  40e655:	mov    ah,0xaa
  40e657:	dec    ecx
  40e658:	daa    
  40e659:	mov    dh,0xd3
  40e65b:	sbb    eax,0xcf7dcbd3
  40e660:	sahf   
  40e661:	(bad)  
  40e663:	rol    BYTE PTR [edx+ebp*1],0x7c
  40e667:	sbb    bh,BYTE PTR ds:0x4045ac8e
  40e66d:	dec    edi
  40e66e:	and    edx,DWORD PTR [edi+eiz*4]
  40e671:	(bad)  
  40e672:	cdq    
  40e673:	cwde   
  40e674:	scas   al,BYTE PTR es:[edi]
  40e675:	das    
  40e676:	push   ebx
  40e677:	jecxz  0x40e6a1
  40e679:	mov    BYTE PTR [edx],ah
  40e67b:	cmp    dl,ch
  40e67d:	sbb    edi,DWORD PTR [edi]
  40e67f:	out    dx,al
  40e680:	add    al,0xc9
  40e682:	fadd   QWORD PTR [ebp+0x60bc0e21]
  40e688:	jl     0x40e658
  40e68a:	cmc    
  40e68b:	lea    ecx,[esi-0xaa296df]
  40e691:	or     dh,BYTE PTR [ecx+0x4a]
  40e694:	in     al,0x83
  40e696:	std    
  40e697:	aas    
  40e698:	xchg   ebx,eax
  40e699:	mov    cl,al
  40e69b:	data16 test al,0xfb
  40e69e:	dec    edi
  40e69f:	pop    es
  40e6a0:	out    dx,al
  40e6a1:	in     al,0x4
  40e6a3:	test   al,0x9f
  40e6a5:	sbb    BYTE PTR [edx-0xad89fd8],cl
  40e6ab:	dec    ecx
  40e6ac:	stos   BYTE PTR es:[edi],al
  40e6ad:	into   
  40e6ae:	mov    cl,0x8e
  40e6b0:	and    al,0xbc
  40e6b2:	ficom  DWORD PTR [esi+eax*1]
  40e6b5:	xor    al,0xbf
  40e6b7:	dec    ebx
  40e6b8:	inc    esp
  40e6b9:	mov    WORD PTR [esi+0x5c],fs
  40e6bc:	pop    ebx
  40e6bd:	adc    dl,dh
  40e6bf:	mov    dl,0xa0
  40e6c1:	sub    ebx,DWORD PTR [ebx-0x4274e882]
  40e6c7:	and    BYTE PTR [ecx],dh
  40e6c9:	fcomp  DWORD PTR [edx+edi*2-0x4b2877a6]
  40e6d0:	jle    0x40e6a9
  40e6d2:	loopne 0x40e688
  40e6d4:	pop    esp
  40e6d5:	and    DWORD PTR [ecx],esi
  40e6d7:	in     al,0xcb
  40e6d9:	fsubr  st,st(5)
  40e6db:	sbb    al,0xbe
  40e6dd:	add    esi,DWORD PTR ds:0x87aa8e13
  40e6e3:	leave  
  40e6e4:	jnp    0x40e6dd
  40e6e6:	mov    BYTE PTR ss:[ebx-0x5a88e32f],dh
  40e6ed:	and    eax,0x5768164b
  40e6f2:	mov    fs,ecx
  40e6f4:	pop    ds
  40e6f5:	std    
  40e6f6:	cli    
  40e6f7:	and    eax,0x4de7d46
  40e6fc:	aad    0x2e
  40e6fe:	jge    0x40e717
  40e700:	jb     0x40e6d9
  40e702:	xor    ch,0xa2
  40e705:	jo     0x40e734
  40e707:	addr16 cwde 
  40e709:	lods   eax,DWORD PTR ds:[esi]
  40e70a:	add    eax,DWORD PTR [ecx]
  40e70c:	adc    al,0x1e
  40e70e:	dec    edx
  40e70f:	andnps xmm4,XMMWORD PTR [esi+eax*4+0x393ed5a2]
  40e717:	pop    edi
  40e718:	ins    DWORD PTR es:[edi],dx
  40e719:	out    dx,eax
  40e71a:	inc    edx
  40e71b:	es pop edx
  40e71d:	push   ds
  40e71e:	cli    
  40e71f:	(bad)  
  40e720:	pop    ecx
  40e721:	in     eax,0x5d
  40e723:	mov    ah,0x24
  40e725:	retf   0xcfe8
  40e728:	(bad)  
  40e729:	xchg   ecx,eax
  40e72a:	adc    bh,BYTE PTR [ebx-0x4e31d1f2]
  40e730:	jae    0x40e6e8
  40e732:	in     eax,dx
  40e733:	inc    ebx
  40e734:	pop    ss
  40e735:	jg     0x40e74f
  40e737:	or     al,0xae
  40e739:	mov    ?,WORD PTR [di+0x50]
  40e73d:	call   0x30eb:0xe5ff4d1d
  40e744:	sub    eax,0x8d47a45a
  40e749:	lea    edx,[eax+0x4dd91dbc]
  40e74f:	ss fwait
  40e751:	call   0xf7284c84
  40e756:	xor    al,0xba
  40e758:	xchg   esp,eax
  40e759:	adc    esp,DWORD PTR [edi+eiz*1-0x1da833af]
  40e760:	pop    ebp
  40e761:	out    0x9d,al
  40e763:	mov    ds:0x6afa4ddf,eax
  40e768:	je     0x40e734
  40e76a:	pop    esp
  40e76b:	and    BYTE PTR [esi+0x3b0a4c72],al
  40e771:	clc    
  40e772:	out    0xe7,eax
  40e774:	out    0xb1,al
  40e776:	scas   al,BYTE PTR es:[edi]
  40e777:	adc    al,0x87
  40e779:	rcr    al,cl
  40e77b:	pop    ebx
  40e77c:	mov    esi,0xc1787b24
  40e781:	and    ebp,DWORD PTR [ebx]
  40e783:	data16 jns 0x40e728
  40e786:	imul   BYTE PTR [edi+0x73]
  40e789:	push   esi
  40e78a:	jbe    0x40e7bb
  40e78c:	or     eax,0x142c1c20
  40e791:	xor    DWORD PTR [edx-0x1e2bfc2],0x17
  40e798:	and    DWORD PTR [esi-0x152a3063],ebx
  40e79e:	aam    0x25
  40e7a0:	xor    BYTE PTR [esi-0x6a],bh
  40e7a3:	and    cl,ah
  40e7a5:	dec    ebx
  40e7a6:	mov    ecx,0xa690701c
  40e7ab:	loopne 0x40e73d
  40e7ad:	and    ebx,DWORD PTR [ecx+0x63ea40be]
  40e7b3:	mov    esi,DWORD PTR [esi+0x4d7abde5]
  40e7b9:	shr    DWORD PTR [eax],1
  40e7bb:	or     esi,ecx
  40e7bd:	loop   0x40e772
  40e7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c0:	push   cs
  40e7c1:	xchg   esi,eax
  40e7c2:	jmp    0x40e7fe
  40e7c4:	es aaa 
  40e7c6:	add    dl,BYTE PTR ss:[ebp-0x2]
  40e7ca:	inc    esp
  40e7cb:	lea    eax,[ebx]
  40e7cd:	mov    ?,WORD PTR [ebp+0x2e4e221d]
  40e7d3:	mov    esi,0x6a46ebd
  40e7d8:	loope  0x40e785
  40e7da:	les    edx,FWORD PTR [ebx+0x3fb5191a]
  40e7e0:	push   0x3f2915ca
  40e7e5:	retf   0x4790
  40e7e8:	fwait
  40e7e9:	shr    BYTE PTR [ebx+0x1a],1
  40e7ec:	inc    edx
  40e7ed:	cmp    dl,dl
  40e7ef:	mov    ebx,0xf33dffd5
  40e7f4:	ror    BYTE PTR [esi-0x1e],cl
  40e7f7:	and    al,0x33
  40e7f9:	test   BYTE PTR ss:[edx+edx*1+0x5c41dd0e],al
  40e801:	sahf   
  40e802:	pop    esp
  40e803:	xor    eax,0xe5a35d71
  40e808:	int3   
  40e809:	mov    bl,0xf1
  40e80b:	and    eax,0x983df36d
  40e810:	dec    edx
  40e811:	pop    ebx
  40e812:	inc    esp
  40e813:	cli    
  40e814:	cli    
  40e815:	cmp    al,dh
  40e817:	xchg   BYTE PTR [bx+di],al
  40e81a:	test   DWORD PTR [eax+0x23ebd4fb],ebx
  40e820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e821:	std    
  40e822:	data16 fwait
  40e824:	cmp    eax,0x49d71672
  40e829:	jmp    0x40e82d
  40e82b:	sbb    esi,esi
  40e82d:	pop    ds
  40e82e:	lods   al,BYTE PTR ds:[esi]
  40e82f:	ja     0x40e823
  40e831:	sbb    eax,0xc3571a64
  40e836:	mov    eax,ds:0x80783dda
  40e83b:	sub    DWORD PTR [ebp-0x4b],eax
  40e83e:	sub    BYTE PTR [esi-0x53728dda],bh
  40e844:	sbb    eax,0x15c0d880
  40e849:	xor    dl,BYTE PTR [esi+0x349cbedb]
  40e84f:	cmovle edi,esi
  40e852:	push   0xfffffff2
  40e854:	test   DWORD PTR ds:0xcf461bc,edi
  40e85a:	mov    al,ds:0xab86524d
  40e85f:	mov    al,ds:0x59ec098d
  40e864:	pop    edi
  40e865:	cmp    BYTE PTR [edi-0x2a],dl
  40e868:	mov    dl,0x5b
  40e86a:	mov    edx,0xda7fe650
  40e86f:	nop
  40e870:	push   0x2c
  40e872:	jnp    0x40e826
  40e874:	push   esi
  40e875:	push   esi
  40e876:	dec    eax
  40e877:	mov    edx,esp
  40e879:	pop    ecx
  40e87a:	jbe    0x40e8ab
  40e87c:	call   0xe0b829af
  40e881:	sub    eax,0x5b5d6285
  40e886:	cs add eax,0x92c1c41d
  40e88c:	cs dec edx
  40e88e:	mov    ebx,0x5b04a641
  40e893:	in     al,dx
  40e894:	inc    ebp
  40e895:	test   BYTE PTR [eax+0x503451ca],bl
  40e89b:	ja     0x40e82e
  40e89d:	jmp    0x64ccfd27
  40e8a2:	sbb    esi,DWORD PTR [esi+0xc99b924]
  40e8a8:	xchg   ecx,eax
  40e8a9:	clc    
  40e8aa:	jbe    0x40e927
  40e8ac:	in     al,0x4c
  40e8ae:	sub    BYTE PTR [ecx+0x5e1ff402],al
  40e8b4:	imul   ebx,DWORD PTR [ebp+0x543c842d],0x31721cd6
  40e8be:	std    
  40e8bf:	bound  ecx,QWORD PTR [edi+0xd]
  40e8c2:	nop
  40e8c3:	xor    al,0xcc
  40e8c5:	adc    DWORD PTR [ebx+0x79],ebx
  40e8c8:	push   esi
  40e8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ca:	adc    al,0x1d
  40e8cc:	push   0xfb0a2b2a
  40e8d1:	ret    
  40e8d2:	jo     0x40e8c3
  40e8d4:	aaa    
  40e8d5:	xor    eax,0xced64d4
  40e8da:	(bad)  
  40e8db:	mov    ds,WORD PTR [ebx+0x12]
  40e8de:	mov    al,ds:0xc357211f
  40e8e3:	imul   eax,DWORD PTR [esi],0x56ead9f2
  40e8e9:	jmp    0x29f2:0xc9057b8
  40e8f0:	dec    edx
  40e8f1:	inc    edi
  40e8f2:	hlt    
  40e8f3:	lock and al,0x9c
  40e8f6:	hlt    
  40e8f7:	ret    
  40e8f8:	mov    edx,0xd6c39120
  40e8fd:	jmp    0xd81babba
  40e902:	adc    dl,BYTE PTR [edi]
  40e904:	(bad)  
  40e905:	clc    
  40e906:	pop    edx
  40e907:	inc    ebp
  40e908:	clc    
  40e909:	in     al,dx
  40e90a:	jne    0x40e910
  40e90c:	pop    ss
  40e90d:	sbb    eax,0xfef330a4
  40e912:	adc    al,0x69
  40e914:	inc    ebx
  40e915:	sbb    ecx,ebp
  40e917:	inc    ebx
  40e918:	mov    eax,0xad88b1d7
  40e91d:	or     BYTE PTR [eax],dh
  40e91f:	div    DWORD PTR [ebp+ebx*4+0x7780575]
  40e926:	mov    ds:0x26dbf3b2,al
  40e92b:	cmp    BYTE PTR [ebx],ah
  40e92d:	inc    eax
  40e92e:	push   es
  40e92f:	lock out dx,eax
  40e931:	pop    ss
  40e932:	or     al,0xbc
  40e934:	loope  0x40e9a2
  40e936:	pop    ebx
  40e937:	sub    ebp,esi
  40e939:	popf   
  40e93a:	pusha  
  40e93b:	mul    DWORD PTR [edi+0x2e]
  40e93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93f:	daa    
  40e940:	or     BYTE PTR gs:[esp+ecx*4],ah
  40e944:	mov    edi,0x24301a58
  40e949:	leave  
  40e94a:	enter  0x16b6,0x9e
  40e94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94f:	xchg   DWORD PTR [edx-0x5252bc67],edi
  40e955:	or     al,0x3f
  40e957:	retf   0x8f05
  40e95a:	test   DWORD PTR [edx+0x6c],ecx
  40e95d:	pop    edi
  40e95e:	stos   BYTE PTR es:[edi],al
  40e95f:	shl    DWORD PTR ds:0xeeb6868d,cl
  40e965:	dec    esp
  40e966:	and    ah,cl
  40e968:	xor    al,0x3f
  40e96a:	scas   al,BYTE PTR es:[edi]
  40e96b:	jbe    0x40e950
  40e96d:	push   0x63247082
  40e972:	jmp    DWORD PTR [edi+edx*1-0x70]
  40e976:	mov    dh,0x4d
  40e978:	push   edi
  40e979:	sahf   
  40e97a:	or     al,BYTE PTR [ecx-0x5c57571f]
  40e980:	xor    eax,DWORD PTR [ecx]
  40e982:	xchg   ebx,eax
  40e983:	pop    edi
  40e984:	jae    0x40e9b8
  40e986:	jmp    0x40e99b
  40e988:	fs leave 
  40e98a:	xchg   esp,eax
  40e98b:	or     BYTE PTR ds:0xc6ec9ad0,0xcc
  40e992:	leave  
  40e993:	shr    DWORD PTR ds:0x26efd04a,0x80
  40e99a:	add    DWORD PTR [ecx+ebx*4-0x6d],esp
  40e99e:	or     eax,0xe919882c
  40e9a3:	add    esi,ebx
  40e9a5:	cld    
  40e9a6:	ins    BYTE PTR es:[edi],dx
  40e9a7:	inc    edx
  40e9a8:	jbe    0x40e980
  40e9aa:	inc    esi
  40e9ab:	test   ebx,0x6557f303
  40e9b1:	pop    eax
  40e9b2:	in     al,dx
  40e9b3:	inc    eax
  40e9b4:	mov    ebp,0x3fdb3752
  40e9b9:	mov    ebp,?
  40e9bb:	loop   0x40ea20
  40e9bd:	cmp    DWORD PTR [eax],edx
  40e9bf:	gs mov dl,0xd
  40e9c2:	popa   
  40e9c3:	pop    ebx
  40e9c4:	mov    eax,ds:0xda78fd23
  40e9c9:	(bad)  
  40e9ca:	test   ch,cl
  40e9cc:	es cwde 
  40e9ce:	jb     0x40e9ed
  40e9d0:	retf   0xb072
  40e9d3:	das    
  40e9d4:	and    al,BYTE PTR [ecx-0x6e]
  40e9d7:	jmp    0xaca:0xa9afa62
  40e9de:	pop    ds
  40e9df:	test   DWORD PTR [esi-0x75],ebp
  40e9e2:	sbb    al,0xc1
  40e9e4:	(bad)  
  40e9e5:	jne    0x40ea61
  40e9e7:	repnz sbb ebx,ebp
  40e9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9eb:	push   eax
  40e9ec:	and    eax,eax
  40e9ee:	pop    ebx
  40e9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9f0:	sbb    ebp,DWORD PTR [ebx-0x3b]
  40e9f3:	ss in  al,0x41
  40e9f6:	xchg   edi,eax
  40e9f7:	adc    DWORD PTR [ebp-0x75bf46db],ecx
  40e9fd:	add    BYTE PTR [edx],0x8f
  40ea00:	stos   DWORD PTR es:[edi],eax
  40ea01:	push   cs
  40ea02:	pop    ss
  40ea03:	inc    ebp
  40ea04:	add    edx,DWORD PTR [ebp-0x3c]
  40ea07:	sub    al,0x78
  40ea09:	pop    edi
  40ea0a:	jecxz  0x40e9fc
  40ea0c:	sub    dl,BYTE PTR [eax]
  40ea0e:	dec    DWORD PTR [ecx-0x71]
  40ea11:	in     al,dx
  40ea12:	std    
  40ea13:	in     al,0x53
  40ea15:	cs loop 0x40e9bb
  40ea18:	inc    ebp
  40ea19:	stos   BYTE PTR es:[edi],al
  40ea1a:	(bad)  
  40ea1b:	ret    0x6ea
  40ea1e:	stos   BYTE PTR es:[edi],al
  40ea1f:	xor    esp,DWORD PTR [ebx]
  40ea21:	push   ds
  40ea22:	xchg   edi,eax
  40ea23:	loopne 0x40ea95
  40ea25:	mov    bl,0x6b
  40ea27:	add    ah,BYTE PTR [esi-0x61]
  40ea2a:	sbb    bl,BYTE PTR ds:0x9d021cfd
  40ea30:	fs push edi
  40ea32:	mov    DWORD PTR [edi],edi
  40ea34:	pop    eax
  40ea35:	not    DWORD PTR [esi]
  40ea37:	addr16 cdq 
  40ea39:	hlt    
  40ea3a:	inc    ebp
  40ea3b:	or     eax,0xae06d428
  40ea40:	dec    ecx
  40ea41:	push   esi
  40ea42:	jmp    0xb00a:0x6a7aeb56
  40ea49:	cmc    
  40ea4a:	jmp    0x7e42ada1
  40ea4f:	div    DWORD PTR [ecx+0x31b03c4d]
  40ea55:	mov    ?,edx
  40ea57:	sub    ebp,DWORD PTR [esi]
  40ea59:	xlat   BYTE PTR ds:[ebx]
  40ea5a:	adc    eax,0xa2fe002c
  40ea5f:	add    cl,BYTE PTR [ebx-0x37]
  40ea62:	inc    ecx
  40ea63:	in     al,dx
  40ea64:	xchg   DWORD PTR [ebx+0x62],esi
  40ea67:	or     esi,DWORD PTR [edx]
  40ea69:	retf   0xd84
  40ea6c:	gs xchg edi,ecx
  40ea6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea70:	mov    BYTE PTR [ebx-0xd1a69a0],bl
  40ea76:	mov    cl,0x3e
  40ea78:	lahf   
  40ea79:	out    dx,eax
  40ea7a:	in     al,0xa4
  40ea7c:	add    esi,edx
  40ea7e:	push   0xc035021
  40ea83:	jecxz  0x40ea25
  40ea85:	in     eax,dx
  40ea86:	mov    ds,WORD PTR ds:0x2317a1b3
  40ea8c:	and    ah,bh
  40ea8e:	ss push ecx
  40ea90:	push   ebx
  40ea91:	mov    dl,0x92
  40ea93:	xchg   edi,eax
  40ea94:	xchg   edx,eax
  40ea95:	jae    0x40eabc
  40ea97:	ins    DWORD PTR es:[edi],dx
  40ea98:	mov    bl,0x2a
  40ea9a:	jmp    0x40eb0c
  40ea9c:	and    esp,DWORD PTR [ebx-0x63]
  40ea9f:	int3   
  40eaa0:	ja     0x40ead1
  40eaa2:	adc    esp,DWORD PTR [ebp+0x22c030a]
  40eaa8:	lahf   
  40eaa9:	in     al,dx
  40eaaa:	add    BYTE PTR [eax+0x36],0xf1
  40eaae:	inc    esp
  40eaaf:	addr16 into 
  40eab1:	ss dec eax
  40eab3:	add    eax,0x83f05562
  40eab8:	test   BYTE PTR [esi],dh
  40eaba:	sub    DWORD PTR [ebx-0x6e1b4445],ebx
  40eac0:	dec    edi
  40eac1:	jge    0x40ea98
  40eac3:	inc    edx
  40eac4:	out    0xc7,al
  40eac6:	pushf  
  40eac7:	cmc    
  40eac8:	sbb    eax,0xff485876
  40eacd:	dec    ebp
  40eace:	sbb    DWORD PTR [esi-0x70b17635],eax
  40ead4:	daa    
  40ead5:	loop   0x40eac8
  40ead7:	les    sp,DWORD PTR [ecx]
  40eada:	outs   dx,DWORD PTR ds:[esi]
  40eadb:	or     dh,bl
  40eadd:	push   edx
  40eade:	call   0xe93b73d2
  40eae3:	xchg   esp,eax
  40eae4:	adc    BYTE PTR [edi+0x11],0x17
  40eae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eae9:	fist   DWORD PTR [ecx+0x267138a]
  40eaef:	mov    dh,0xfc
  40eaf1:	jmp    0x40eb0c
  40eaf3:	or     edi,esi
  40eaf5:	dec    ecx
  40eaf6:	scas   eax,DWORD PTR es:[edi]
  40eaf7:	or     dl,BYTE PTR [ebx]
  40eaf9:	iret   
  40eafa:	jmp    0x77cdca56
  40eaff:	lods   eax,DWORD PTR ds:[esi]
  40eb00:	sub    eax,0xb4bf4f43
  40eb05:	dec    esi
  40eb06:	mov    ebx,0xbe8a252c
  40eb0b:	cli    
  40eb0c:	not    DWORD PTR ds:0xfe65aca2
  40eb12:	popf   
  40eb13:	retf   0xd54b
  40eb16:	sub    ch,BYTE PTR [edi-0x7e88a282]
  40eb1c:	arpl   WORD PTR [eax-0x5c],sp
  40eb1f:	inc    ecx
  40eb20:	inc    DWORD PTR [ecx+0x3b2e9e7]
  40eb26:	dec    esi
  40eb27:	std    
  40eb28:	pop    eax
  40eb29:	mov    BYTE PTR [edi+0x2d],ah
  40eb2c:	outs   dx,DWORD PTR ds:[esi]
  40eb2d:	sti    
  40eb2e:	cwde   
  40eb2f:	ds inc edx
  40eb31:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb33:	hlt    
  40eb34:	lahf   
  40eb35:	sbb    eax,0x16d6f432
  40eb3a:	mov    bh,0x55
  40eb3c:	dec    esi
  40eb3d:	ret    0x4fa
  40eb40:	rol    ebx,cl
  40eb42:	(bad)  
  40eb44:	jno    0x40eb02
  40eb46:	inc    ebx
  40eb47:	daa    
  40eb48:	fldcw  WORD PTR [ebx-0x29]
  40eb4b:	adc    dl,bl
  40eb4d:	push   ds
  40eb4e:	shl    BYTE PTR [eax],cl
  40eb50:	outs   dx,BYTE PTR ds:[esi]
  40eb51:	inc    esi
  40eb52:	pop    edi
  40eb53:	fs stos DWORD PTR es:[edi],eax
  40eb55:	scas   al,BYTE PTR es:[edi]
  40eb56:	call   0x4049:0x8efee764
  40eb5d:	cmp    dl,BYTE PTR [ebp+0x3f]
  40eb60:	(bad)  
  40eb62:	fld    QWORD PTR [ecx+eax*2+0x7e]
  40eb66:	ror    BYTE PTR [esi],0x27
  40eb69:	pop    es
  40eb6a:	mov    esi,0x9d05fd1c
  40eb6f:	push   ebx
  40eb70:	mov    BYTE PTR [edi-0x5903f452],bl
  40eb76:	test   al,0x33
  40eb78:	or     dh,ch
  40eb7a:	out    0x26,eax
  40eb7c:	fyl2xp1 
  40eb7e:	mov    WORD PTR [ecx+0x7004f9b8],cs
  40eb84:	xchg   edx,eax
  40eb85:	fucom  st(3)
  40eb87:	stos   BYTE PTR es:[edi],al
  40eb88:	adc    ebx,edi
  40eb8a:	fild   QWORD PTR [ecx]
  40eb8c:	mov    dh,0xe2
  40eb8e:	daa    
  40eb8f:	and    ebx,DWORD PTR [ebp-0x79]
  40eb92:	pop    ss
  40eb93:	daa    
  40eb94:	pop    ss
  40eb95:	pop    edx
  40eb96:	push   es
  40eb97:	in     eax,0x5c
  40eb99:	inc    esp
  40eb9a:	push   cs
  40eb9b:	jae    0x40ebe7
  40eb9d:	sbb    eax,0xf443d81e
  40eba2:	nop
  40eba3:	fnsave [edx]
  40eba5:	fs inc esi
  40eba7:	(bad)
  40ebaa:	xlat   BYTE PTR ds:[ebx]
  40ebab:	adc    BYTE PTR [edx+eiz*1+0x37],0x2a
  40ebb0:	xor    al,0x69
  40ebb2:	scas   al,BYTE PTR es:[edi]
  40ebb3:	loope  0x40eb53
  40ebb5:	sub    eax,0x4f052668
  40ebba:	sti    
  40ebbb:	out    dx,al
  40ebbc:	mul    ch
  40ebbe:	xor    cl,dh
  40ebc0:	dec    eax
  40ebc1:	and    esp,edi
  40ebc3:	add    BYTE PTR [edx+0x45],0x88
  40ebc7:	cmp    ch,bl
  40ebc9:	xlat   BYTE PTR ds:[ebx]
  40ebca:	retf   0x845b
  40ebcd:	jno    0x40eb80
  40ebcf:	push   0xffffffdd
  40ebd1:	(bad)
  40ebd5:	cmc    
  40ebd6:	jmp    0xd0c9:0xe0981417
  40ebdd:	mov    esi,0xdd210587
  40ebe2:	in     eax,dx
  40ebe3:	xor    al,0x6f
  40ebe5:	push   edi
  40ebe6:	add    bl,ch
  40ebe8:	inc    esi
  40ebe9:	mov    edx,0x8f2e27a7
  40ebee:	or     ebp,DWORD PTR [edx+0x58]
  40ebf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebf2:	cmp    DWORD PTR ds:0x9eed542b,ecx
  40ebf8:	push   esp
  40ebf9:	push   esp
  40ebfa:	pop    DWORD PTR [ecx+edi*2]
  40ebfd:	loopne 0x40ebdf
  40ebff:	fbld   TBYTE PTR [esi-0x69]
  40ec02:	cld    
  40ec03:	ror    BYTE PTR [edi+eiz*8],cl
  40ec06:	and    edx,DWORD PTR [eax+ecx*1]
  40ec09:	add    ecx,0x7f7595c2
  40ec0f:	cli    
  40ec10:	(bad)  [ebp+0x2fc6f2b6]
  40ec16:	add    al,BYTE PTR [eax]
  40ec18:	mov    eax,ds:0xc22c2a14
  40ec1d:	sbb    ebx,edi
  40ec1f:	ds clc 
  40ec21:	xchg   esi,eax
  40ec22:	or     BYTE PTR [eax],ah
  40ec24:	add    eax,0x993239a9
  40ec29:	stc    
  40ec2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec2b:	jg     0x40ebda
  40ec2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec2e:	cmp    DWORD PTR [ebx],0x18ea154c
  40ec34:	test   eax,0xcba2be90
  40ec39:	(bad)  
  40ec3a:	or     al,0x71
  40ec3c:	inc    edx
  40ec3d:	fcomp  st(4)
  40ec3f:	xor    eax,0x800d3d99
  40ec44:	cmp    BYTE PTR [esi-0x1b],0x1f
  40ec48:	addr16 inc edx
  40ec4a:	dec    ebp
  40ec4b:	pop    ss
  40ec4c:	add    eax,0xcbcd367
  40ec51:	cmp    eax,0x4404f9d1
  40ec56:	dec    eax
  40ec57:	xor    DWORD PTR [esi+ebp*1+0x7b],ebx
  40ec5b:	int    0x53
  40ec5d:	loop   0x40eccf
  40ec5f:	fidivr DWORD PTR [ecx]
  40ec61:	add    DWORD PTR [esi-0x715e1143],0x34
  40ec68:	call   0x3ed5:0x44fec203
  40ec6f:	jnp    0x40ebfd
  40ec71:	pushf  
  40ec72:	mul    BYTE PTR [edx+edi*1]
  40ec75:	cld    
  40ec76:	sbb    ah,BYTE PTR [edx+0x3a6bff99]
  40ec7c:	hlt    
  40ec7d:	jnp    0x40eca1
  40ec7f:	xor    BYTE PTR [ecx+0x46fcca2e],bl
  40ec85:	imul   ebp,DWORD PTR [edx-0x46],0x62
  40ec89:	or     DWORD PTR [edi],ecx
  40ec8b:	inc    esi
  40ec8d:	shr    eax,cl
  40ec8f:	xor    DWORD PTR [edx],edi
  40ec91:	inc    esp
  40ec92:	lea    esi,[eax+0x46]
  40ec95:	mov    ?,WORD PTR [edi]
  40ec97:	or     eax,0x4e882d4c
  40ec9c:	jg     0x40ecef
  40ec9e:	dec    esi
  40ec9f:	in     al,0x72
  40eca1:	pextrw esp,mm1,0x10
  40eca5:	fsubr  DWORD PTR [eax-0x67]
  40eca9:	loop   0x40ecaf
  40ecab:	xchg   BYTE PTR [edx],ah
  40ecad:	cld    
  40ecae:	xchg   DWORD PTR [ebx],edx
  40ecb0:	leave  
  40ecb1:	test   esp,edi
  40ecb3:	ins    DWORD PTR es:[edi],dx
  40ecb4:	frstor [edx]
  40ecb6:	inc    eax
  40ecb7:	jecxz  0x40ed36
  40ecb9:	int3   
  40ecba:	je     0x40ecf6
  40ecbc:	scas   al,BYTE PTR es:[edi]
  40ecbd:	push   ss
  40ecbe:	test   al,0xf2
  40ecc0:	inc    ebx
  40ecc1:	test   ebx,0xb322056a
  40ecc7:	xor    edx,DWORD PTR [edi+0x58]
  40ecca:	mov    WORD PTR [esi+ecx*4-0x77],ds
  40ecce:	sbb    edx,DWORD PTR [ebx-0x9584508]
  40ecd4:	lahf   
  40ecd5:	pop    edi
  40ecd6:	inc    ebp
  40ecd7:	xchg   esp,eax
  40ecd8:	jecxz  0x40ec70
  40ecda:	xor    DWORD PTR [esi+edx*2],0x76a824b
  40ece1:	stos   DWORD PTR es:[edi],eax
  40ece2:	aam    0x8b
  40ece4:	gs mov bh,0xda
  40ece7:	push   cs
  40ece8:	je     0x40ed01
  40ecea:	mov    esi,0x19e83831
  40ecef:	pop    edi
  40ecf0:	jle    0x40eccc
  40ecf2:	adc    eax,0xaeb5bdf9
  40ecf7:	stos   BYTE PTR es:[edi],al
  40ecf8:	jge    0x40ecbe
  40ecfa:	jmp    0xf042:0xae2f3400
  40ed01:	jp     0x40ed78
  40ed03:	imul   ebx,DWORD PTR [esi],0x29ddbc23
  40ed09:	pop    ebx
  40ed0a:	mov    eax,0xf1e15c1f
  40ed0f:	push   cs
  40ed10:	ds push ecx
  40ed12:	fiadd  DWORD PTR [edi+0x1f858a50]
  40ed18:	xor    al,0xa8
  40ed1a:	jmp    0x8c24:0x6f9737e7
  40ed21:	jmp    0x40ece9
  40ed23:	pop    ebp
  40ed24:	pop    edx
  40ed25:	lods   al,BYTE PTR ds:[esi]
  40ed26:	sti    
  40ed27:	and    edx,DWORD PTR [ebp-0x4c]
  40ed2a:	popf   
  40ed2b:	jecxz  0x40ed76
  40ed2d:	and    ch,BYTE PTR [ebp+0x75dbf5a2]
  40ed33:	add    ah,BYTE PTR [ebx]
  40ed35:	retf   0x798c
  40ed38:	cli    
  40ed39:	sbb    BYTE PTR [ebx],cl
  40ed3b:	stc    
  40ed3c:	dec    ecx
  40ed3d:	inc    edx
  40ed3e:	outs   dx,BYTE PTR ds:[esi]
  40ed3f:	xor    DWORD PTR ss:[ebp-0x7faf89cc],esi
  40ed46:	mov    ebp,0xc0c0c0a3
  40ed4b:	rol    al,0xc0
  40ed4e:	rol    al,0xc0
  40ed51:	rol    al,0xc0
  40ed54:	rol    al,0xc0
  40ed57:	rol    al,0xc0
  40ed5a:	rol    al,0xc0
  40ed5d:	rol    al,0xc0
  40ed60:	rol    al,0xc0
  40ed63:	rol    al,0xc0
  40ed66:	rol    al,0xc0
  40ed69:	rol    al,0xc0
  40ed6c:	rol    al,0xc0
  40ed6f:	rol    al,0xc0
  40ed72:	rol    al,0xc0
  40ed75:	rol    al,0xc0
  40ed78:	rol    al,0xc0
  40ed7b:	rol    al,0xc0
  40ed7e:	rol    al,0xc0
  40ed81:	rol    al,0xc0
  40ed84:	rol    al,0xc0
  40ed87:	rol    al,0xc0
  40ed8a:	rol    al,0xc0
  40ed8d:	rol    al,0xc0
  40ed90:	rol    al,0xc0
  40ed93:	rol    al,0xc0
  40ed96:	rol    al,0xc0
  40ed99:	rol    al,0xc0
  40ed9c:	rol    al,0xc0
  40ed9f:	ror    BYTE PTR [esp+ebx*4-0x2e8109a2],0x81
  40eda7:	sar    dh,1
  40eda9:	aad    0xea
  40edab:	inc    edi
  40edac:	add    BYTE PTR [ebp+esi*8-0x15],bh
  40edb0:	sub    ebx,eax
  40edb2:	jbe    0x40ee1d
  40edb4:	mov    ebx,0xc9213231
  40edb9:	mov    esp,0x3330095c
  40edbe:	push   ebx
  40edc0:	push   es
  40edc1:	shl    DWORD PTR [ebx+eax*1-0x51352374],cl
  40edc8:	ret    
  40edc9:	push   esi
  40edca:	and    eax,DWORD PTR gs:[esi+0x706132e0]
  40edd1:	inc    ebx
  40edd2:	pop    edx
  40edd3:	icebp  
  40edd4:	sbb    eax,0x2ba34831
  40edd9:	or     al,0xf
  40eddb:	sub    esi,esi
  40eddd:	add    ah,bl
  40eddf:	scas   al,BYTE PTR es:[edi]
  40ede0:	aaa    
  40ede1:	fdiv   QWORD PTR [esi-0x7d]
  40ede4:	(bad)  
  40ede5:	call   0x9f3a:0xa13d23ab
  40edec:	xor    BYTE PTR [ebx],bh
  40edee:	icebp  
  40edef:	das    
  40edf0:	lds    ebp,FWORD PTR [ebp-0x54]
  40edf3:	ins    BYTE PTR es:[edi],dx
  40edf4:	(bad)  
  40edf5:	retf   0x9ca6
  40edf8:	test   eax,0x87971c79
  40edfd:	sub    DWORD PTR [eax],esi
  40edff:	xor    eax,0x50fe1dfc
  40ee04:	mov    esi,0x8a90d717
  40ee09:	daa    
  40ee0a:	or     eax,0xe1b7e4b2
  40ee0f:	lahf   
  40ee10:	into   
  40ee11:	pop    esp
  40ee12:	jbe    0x40eda1
  40ee14:	(bad)  
  40ee15:	fst    QWORD PTR [esi-0x35]
  40ee18:	pop    ebp
  40ee19:	xchg   ebp,eax
  40ee1a:	hlt    
  40ee1b:	ins    DWORD PTR es:[edi],dx
  40ee1c:	pop    edx
  40ee1d:	jg     0x40ee85
  40ee1f:	imul   eax,DWORD PTR [edi+0x48b4f291],0xdf88a8be
  40ee29:	enter  0xa621,0x67
  40ee2d:	sar    DWORD PTR [esi-0x1],cl
  40ee30:	adc    cl,BYTE PTR [ecx-0x48]
  40ee33:	sub    eax,0xa9a4cf0
  40ee38:	mov    ecx,0x9c258d0f
  40ee3d:	fs out dx,eax
  40ee3f:	loop   0x40edd4
  40ee41:	(bad)  
  40ee43:	test   DWORD PTR [eax],ebx
  40ee45:	cli    
  40ee46:	sub    edi,0xf6bb056b
  40ee4c:	xchg   ebp,eax
  40ee4d:	sbb    dh,BYTE PTR [ebx-0x65]
  40ee50:	arpl   WORD PTR [eax+ecx*8+0x3e],bx
  40ee54:	add    al,0xda
  40ee56:	shl    DWORD PTR ds:0xc093556f,1
  40ee5c:	imul   ecx,DWORD PTR [ecx+0x6d],0x5917bc80
  40ee63:	sbb    dl,BYTE PTR [ebp+0x68397e1f]
  40ee69:	out    0xac,eax
  40ee6b:	mov    DWORD PTR [ebp+0x4a],ebx
  40ee6e:	cmp    ebp,esp
  40ee70:	dec    ecx
  40ee71:	mov    cl,0x1a
  40ee73:	adc    ebx,DWORD PTR [esi+0x53837940]
  40ee79:	inc    ecx
  40ee7a:	or     eax,0x44c5ad74
  40ee7f:	jae    0x40eef4
  40ee81:	in     eax,0x55
  40ee83:	jle    0x40eefc
  40ee85:	or     DWORD PTR [edi-0x58f73ecc],0xb07e7d12
  40ee8f:	or     esi,DWORD PTR [ecx+0x35]
  40ee92:	xchg   ebp,eax
  40ee93:	add    DWORD PTR [esi+0x72d16861],0xffffff86
  40ee9a:	dec    eax
  40ee9b:	leave  
  40ee9c:	push   ebp
  40ee9d:	jg     0x40ee36
  40ee9f:	stos   BYTE PTR es:[edi],al
  40eea0:	xor    bh,bl
  40eea2:	jge    0x40ee6c
  40eea4:	mov    ah,0xb4
  40eea6:	cmp    eax,DWORD PTR [ecx]
  40eea8:	cdq    
  40eea9:	nop
  40eeaa:	pop    ds
  40eeab:	cmp    edi,ebp
  40eead:	add    bl,dh
  40eeaf:	lods   al,BYTE PTR ds:[esi]
  40eeb0:	dec    esp
  40eeb1:	xchg   edi,eax
  40eeb2:	mov    dh,0xde
  40eeb4:	aad    0xc
  40eeb6:	pop    eax
  40eeb7:	lock stc 
  40eeb9:	cmc    
  40eeba:	out    dx,al
  40eebb:	and    DWORD PTR [edx],0x3a
  40eebe:	jo     0x40ef39
  40eec0:	and    al,0xda
  40eec2:	jecxz  0x40eece
  40eec4:	aam    0x3b
  40eec6:	clc    
  40eec7:	les    ebx,FWORD PTR ds:0xc60cc467
  40eecd:	or     al,0xb2
  40eecf:	pop    es
  40eed0:	jge    0x40ee70
  40eed2:	mov    ds,WORD PTR [esp+edx*8]
  40eed5:	retf   0x62d9
  40eed8:	repz fs and eax,0x6acd8d90
  40eedf:	or     esp,DWORD PTR [ebx]
  40eee1:	sbb    BYTE PTR [edi-0x12282bef],ah
  40eee7:	cmp    eax,0x461d890b
  40eeec:	cmp    eax,0xfdabf9fc
  40eef1:	xchg   BYTE PTR [ebp+0x7b0e201f],al
  40eef7:	xchg   edx,eax
  40eef8:	cdq    
  40eef9:	mov    eax,0xd40d32b
  40eefe:	mov    edx,0x8a6d6161
  40ef03:	and    al,dl
  40ef05:	sbb    eax,0x8d22c657
  40ef0a:	lea    edx,[esp+edx*4]
  40ef0d:	inc    ecx
  40ef0e:	adc    DWORD PTR [edi],ebp
  40ef10:	ja     0x40ef4d
  40ef12:	fstp   QWORD PTR [ecx]
  40ef14:	add    eax,0x890a3fab
  40ef19:	add    al,0xe
  40ef1b:	test   BYTE PTR [eax+0x1a2472f2],ah
  40ef21:	pop    ss
  40ef22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef23:	test   DWORD PTR [edx],ebx
  40ef25:	sbb    eax,DWORD PTR [ebx]
  40ef27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef28:	dec    eax
  40ef29:	sti    
  40ef2a:	ins    BYTE PTR es:[edi],dx
  40ef2b:	fnstsw WORD PTR [edi-0x7b000a05]
  40ef31:	in     eax,0x89
  40ef33:	lock and ch,BYTE PTR ds:0xd0426216
  40ef3a:	jb     0x40ef54
  40ef3c:	inc    edx
  40ef3d:	ins    DWORD PTR es:[edi],dx
  40ef3e:	fwait
  40ef3f:	sbb    bl,BYTE PTR [ecx-0x3c]
  40ef42:	jne    0x40ef4b
  40ef44:	stos   BYTE PTR es:[edi],al
  40ef45:	sbb    al,0x60
  40ef47:	pop    es
  40ef48:	add    eax,0x8081cd5e
  40ef4d:	dec    ebx
  40ef4e:	sub    ebx,DWORD PTR [ebx+eax*4-0x27]
  40ef52:	dec    ebp
  40ef53:	in     al,0xfc
  40ef55:	daa    
  40ef56:	inc    edx
  40ef57:	fnstcw WORD PTR [ecx-0x3001f8c4]
  40ef5d:	div    BYTE PTR [esi-0x773a29a7]
  40ef63:	add    eax,0x6d94f3a7
  40ef68:	fucomp st(7)
  40ef6a:	outs   dx,DWORD PTR ds:[esi]
  40ef6b:	adc    al,0x54
  40ef6d:	push   es
  40ef6e:	shr    BYTE PTR [ebp+0x48],1
  40ef71:	mov    dl,al
  40ef73:	loop   0x40efbb
  40ef75:	push   es
  40ef76:	shl    DWORD PTR [edx+edi*8],1
  40ef79:	ret    
  40ef7a:	xor    al,0x55
  40ef7c:	pop    esp
  40ef7d:	cwde   
  40ef7e:	jl     0x40ef01
  40ef80:	daa    
  40ef81:	leave  
  40ef82:	mov    esi,0x667abc58
  40ef87:	hlt    
  40ef88:	into   
  40ef89:	dec    ebx
  40ef8a:	mov    ecx,0x38ac1707
  40ef8f:	cmp    ebp,DWORD PTR [edi-0x7c]
  40ef92:	xchg   esp,eax
  40ef93:	cmp    al,0x66
  40ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef96:	jge    0x40ef96
  40ef98:	lods   al,BYTE PTR ds:[esi]
  40ef99:	mov    ds:0x46b5fcb5,eax
  40ef9e:	push   cs
  40ef9f:	and    BYTE PTR [edi+0x13],0xcf
  40efa3:	(bad)  
  40efa4:	outs   dx,BYTE PTR gs:[esi]
  40efa6:	fnstcw WORD PTR [ebx]
  40efa8:	and    dl,dh
  40efaa:	es test eax,0x7673f4dc
  40efb0:	jne    0x40ef89
  40efb2:	lahf   
  40efb3:	xchg   dl,bh
  40efb5:	add    dh,BYTE PTR [edx+0x27e42b4d]
  40efbb:	mov    ebx,0x67ca7799
  40efc0:	int    0xba
  40efc2:	shl    ebx,1
  40efc4:	in     eax,0xfd
  40efc6:	retf   
  40efc7:	test   esp,esi
  40efc9:	mov    eax,ds:0xc7a29db
  40efce:	mov    al,0x6b
  40efd0:	jo     0x40ef94
  40efd2:	ja     0x40f029
  40efd4:	je     0x40f02d
  40efd6:	adc    al,0xd2
  40efd8:	sub    BYTE PTR [edi+0x6],bh
  40efdb:	cmp    eax,0x92866079
  40efe0:	or     BYTE PTR [edx+ecx*4+0x37],ch
  40efe4:	push   0x887828af
  40efe9:	repnz iret 
  40efeb:	mov    ds,eax
  40efed:	xchg   edi,eax
  40efee:	outs   dx,BYTE PTR fs:[esi]
  40eff0:	push   eax
  40eff1:	enter  0x4d39,0xdf
  40eff5:	and    eax,0xb4faefcb
  40effa:	mov    ds:0xbbd54777,eax
  40efff:	call   0x498e:0x5ea0730c
  40f006:	dec    esp
  40f007:	dec    esi
  40f008:	push   ecx
  40f009:	leave  
  40f00a:	mov    eax,ds:0x30e1a648
  40f00f:	js     0x40f085
  40f011:	ror    cl,0xb3
  40f014:	fwait
  40f015:	sub    al,0xd1
  40f017:	mov    ds:0xa340c9f5,eax
  40f01c:	push   ebp
  40f01d:	pusha  
  40f01e:	iretw  
  40f020:	and    BYTE PTR [edx],bh
  40f022:	mov    ebx,0x36ee11a2
  40f027:	xchg   ebp,eax
  40f028:	jnp    0x40efae
  40f02a:	jp     0x40f08e
  40f02c:	mov    ecx,0xa7978d04
  40f031:	in     al,dx
  40f032:	nop
  40f033:	int3   
  40f034:	jg     0x40f012
  40f036:	mov    edi,0xbff7e0e2
  40f03b:	bound  esi,QWORD PTR [edi]
  40f03d:	ds (bad) 
  40f03f:	fisub  DWORD PTR [ebp+0xc]
  40f042:	das    
  40f043:	clc    
  40f044:	les    esp,FWORD PTR [esi]
  40f046:	ins    DWORD PTR es:[edi],dx
  40f047:	retf   
  40f048:	jns    0x40efd6
  40f04a:	rcl    DWORD PTR [ecx],0xe
  40f04d:	pop    es
  40f04e:	xchg   edx,eax
  40f04f:	mov    edx,0xb08a2076
  40f054:	inc    esi
  40f055:	sub    al,0x82
  40f057:	or     BYTE PTR [ebp+edx*8-0xc],ch
  40f05b:	push   esp
  40f05c:	or     BYTE PTR [ebp+0x7],bl
  40f05f:	mov    esi,0x10aedcb1
  40f064:	scas   eax,DWORD PTR es:[edi]
  40f065:	out    0x27,al
  40f067:	test   DWORD PTR [eax-0x76],esi
  40f06a:	mov    ebx,0x6c5ee4ed
  40f06f:	inc    edx
  40f070:	shr    al,1
  40f072:	xchg   edi,eax
  40f073:	loopne 0x40f040
  40f075:	dec    esp
  40f076:	jne    0x40f0d0
  40f078:	imul   edi,DWORD PTR ds:0xcbd1edf,0x1a
  40f07f:	aaa    
  40f080:	data16 arpl WORD PTR [esi+0x23],di
  40f084:	mov    esi,0x5ee12d12
  40f089:	imul   ebp,ebp,0xb5f0546a
  40f08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f090:	pop    esi
  40f091:	test   ebx,0xd6247616
  40f097:	and    al,0x56
  40f099:	mov    ebx,0xe8c4a6a5
  40f09e:	xor    edx,edx
  40f0a0:	mov    cl,0x40
  40f0a2:	addr16 loopne 0x40f064
  40f0a5:	jb     0x40f10c
  40f0a7:	or     ah,BYTE PTR [esi]
  40f0a9:	lea    edi,[edi+0x22]
  40f0ac:	adc    ebp,DWORD PTR [ecx]
  40f0ae:	sti    
  40f0af:	rcr    DWORD PTR [esi-0x71],cl
  40f0b2:	inc    eax
  40f0b3:	sahf   
  40f0b4:	add    BYTE PTR [edx-0x5f8c1305],ah
  40f0ba:	bound  edi,QWORD PTR [edi]
  40f0bc:	sbb    DWORD PTR [edi],ecx
  40f0be:	cli    
  40f0bf:	mov    WORD PTR [eax-0x29],ds
  40f0c2:	je     0x40f140
  40f0c4:	ds pusha 
  40f0c6:	loopne 0x40f111
  40f0c8:	inc    eax
  40f0c9:	(bad)  
  40f0ca:	pop    edi
  40f0cb:	mov    WORD PTR [esi-0x49],gs
  40f0ce:	fnstcw WORD PTR es:[edx-0x7a]
  40f0d2:	loopne 0x40f065
  40f0d4:	dec    esp
  40f0d5:	popa   
  40f0d6:	jecxz  0x40f11f
  40f0d8:	xor    ch,bl
  40f0da:	rcl    BYTE PTR [edi-0x6752b753],cl
  40f0e0:	pusha  
  40f0e1:	add    ch,bh
  40f0e3:	gs push 0x6d81d1cd
  40f0e9:	fucomi st,st(2)
  40f0eb:	daa    
  40f0ec:	outs   dx,DWORD PTR ds:[esi]
  40f0ed:	ja     0x40f127
  40f0ef:	jmp    0xc5d69c4f
  40f0f4:	jae    0x40f120
  40f0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f8:	clc    
  40f0f9:	push   edi
  40f0fa:	mov    bh,0xa0
  40f0fc:	popa   
  40f0fd:	and    eax,0xfa2070b0
  40f102:	pop    edx
  40f103:	add    DWORD PTR [edi+0xe],esi
  40f106:	or     DWORD PTR [ebp-0x5d],ebx
  40f109:	fiadd  DWORD PTR [ebp-0x76]
  40f10c:	inc    edx
  40f10d:	pop    ds
  40f10e:	xchg   dl,dl
  40f110:	imul   esi,DWORD PTR [edi+0x41],0xffffff92
  40f114:	or     edx,eax
  40f116:	jecxz  0x40f188
  40f118:	jge    0x40f169
  40f11a:	mov    al,ah
  40f11c:	pop    eax
  40f11d:	retf   
  40f11e:	mov    ds:0x430cc178,eax
  40f123:	out    0x70,al
  40f125:	inc    ebp
  40f126:	sar    dh,cl
  40f128:	jmp    0xa7113fdd
  40f12d:	add    eax,0x98ed783c
  40f132:	pop    eax
  40f133:	cmp    al,0x3a
  40f135:	jno    0x40f0df
  40f137:	xor    ah,BYTE PTR [ecx]
  40f139:	int3   
  40f13a:	jbe    0x40f146
  40f13c:	jecxz  0x40f0d9
  40f13e:	sbb    eax,0xdca61759
  40f143:	jle    0x40f151
  40f145:	jb     0x40f1c2
  40f147:	jnp    0x40f0ee
  40f149:	push   esi
  40f14a:	sahf   
  40f14b:	test   DWORD PTR [edx-0x71],edx
  40f14e:	push   es
  40f14f:	lods   eax,DWORD PTR ds:[esi]
  40f150:	iret   
  40f151:	leave  
  40f152:	cld    
  40f153:	jne    0x40f123
  40f155:	cli    
  40f156:	fmul   st(3),st
  40f158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f159:	sbb    ch,BYTE PTR [ecx-0x57a724a0]
  40f15f:	add    al,0x82
  40f161:	pop    ebp
  40f162:	mov    gs,WORD PTR [esi+0xa2945da]
  40f168:	daa    
  40f169:	xchg   ebp,eax
  40f16a:	xlat   BYTE PTR ds:[ebx]
  40f16b:	or     bh,ch
  40f16d:	dec    esi
  40f16e:	shl    BYTE PTR [esi+0x13],1
  40f171:	sti    
  40f172:	dec    ebx
  40f173:	call   0xa61e6f69
  40f178:	push   cs
  40f179:	hlt    
  40f17a:	mov    ecx,0x599b73ed
  40f17f:	retf   0xfd97
  40f182:	pop    edx
  40f183:	add    al,0x49
  40f185:	fbld   TBYTE PTR ds:0x12bf3be4
  40f18b:	and    esi,ecx
  40f18d:	and    DWORD PTR [ebx-0x67051c06],ecx
  40f193:	add    BYTE PTR [ecx+0x75],al
  40f196:	lahf   
  40f197:	int3   
  40f198:	jbe    0x40f159
  40f19a:	adc    esi,0x311846a4
  40f1a0:	mov    dl,0x5d
  40f1a2:	mov    ebx,0x5466ad2e
  40f1a7:	out    dx,eax
  40f1a8:	rcr    ecx,cl
  40f1aa:	sbb    BYTE PTR [edx-0x2],dh
  40f1ad:	add    eax,0x6c759a38
  40f1b2:	(bad)  
  40f1b3:	pop    edi
  40f1b4:	out    dx,eax
  40f1b5:	push   esi
  40f1b6:	scas   al,BYTE PTR es:[edi]
  40f1b7:	test   BYTE PTR [ecx+0x5a1af9cf],dh
  40f1bd:	sahf   
  40f1be:	es inc edi
  40f1c0:	popa   
  40f1c1:	mov    dh,0xd6
  40f1c3:	mov    ds:0xb776f885,eax
  40f1c8:	jg     0x40f190
  40f1ca:	pop    ss
  40f1cb:	cmp    eax,0x6fafaa63
  40f1d0:	or     DWORD PTR [esi],ebx
  40f1d2:	adc    ebp,DWORD PTR [ebx+0x62fb13ce]
  40f1d8:	sbb    DWORD PTR [esi+0x1346fdd7],edi
  40f1de:	sbb    DWORD PTR [ebx+0x648c774a],esp
  40f1e4:	pop    eax
  40f1e5:	and    BYTE PTR [esi],bl
  40f1e7:	add    ebx,DWORD PTR [edi+0x5831fb2a]
  40f1ed:	push   esp
  40f1ee:	inc    ecx
  40f1ef:	mov    esi,0x60a217b9
  40f1f4:	sbb    DWORD PTR [edi],ebp
  40f1f6:	fiadd  DWORD PTR [ebx+0xc16f7af]
  40f1fc:	or     eax,DWORD PTR [ebp-0x56]
  40f1ff:	(bad)
  40f202:	pushf  
  40f203:	test   eax,0xc1ede2b3
  40f208:	push   edi
  40f209:	enter  0x35ce,0x16
  40f20d:	dec    ebx
  40f20e:	mov    ecx,0x5f3a1e07
  40f213:	pop    esp
  40f214:	pop    esi
  40f215:	push   edx
  40f216:	add    ebx,DWORD PTR [edi-0xb]
  40f219:	jg     0x40f291
  40f21b:	mov    ds:0xc8ab8d1,eax
  40f220:	push   0xde8c8ecb
  40f225:	pushf  
  40f226:	shl    DWORD PTR [edx+0x269accbe],cl
  40f22c:	sub    eax,DWORD PTR [esi]
  40f22e:	add    al,0x75
  40f230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f231:	(bad)
  40f234:	in     eax,0x5
  40f236:	in     eax,0xb6
  40f238:	mov    bh,0x38
  40f23a:	test   eax,0xb851c390
  40f23f:	ins    BYTE PTR es:[edi],dx
  40f240:	add    eax,0xe2556036
  40f245:	pop    ds
  40f246:	out    0x4b,al
  40f248:	inc    esi
  40f249:	fwait
  40f24a:	dec    edx
  40f24b:	in     eax,dx
  40f24c:	je     0x40f220
  40f24e:	stos   DWORD PTR es:[edi],eax
  40f24f:	bnd jge 0x40f28c
  40f252:	pop    ss
  40f253:	ret    
  40f254:	pop    ebx
  40f255:	gs pop edx
  40f257:	pop    eax
  40f258:	loope  0x40f1f9
  40f25a:	repnz cwde 
  40f25c:	sbb    eax,0x35c772c2
  40f261:	outs   dx,BYTE PTR ds:[esi]
  40f262:	lods   al,BYTE PTR ds:[esi]
  40f263:	in     al,0x72
  40f265:	lods   al,BYTE PTR ds:[esi]
  40f266:	mov    ebx,edx
  40f268:	push   ebx
  40f269:	push   eax
  40f26a:	popf   
  40f26b:	repz pop edx
  40f26d:	fidivr WORD PTR [esi]
  40f26f:	gs dec ebp
  40f272:	sti    
  40f273:	clc    
  40f274:	addr16 call 0x8019:0x9f39bfd2
  40f27c:	ffree  st(2)
  40f27e:	and    BYTE PTR [edi-0x687160d1],ah
  40f284:	jae    0x40f2b1
  40f286:	rcr    DWORD PTR [edx],cl
  40f288:	dec    ebp
  40f289:	aam    0xa
  40f28b:	(bad)  
  40f28c:	ss dec esp
  40f28e:	mov    eax,0x2736b972
  40f293:	ja     0x40f2b1
  40f295:	repz fsubr DWORD PTR [edi-0x7a]
  40f299:	sahf   
  40f29a:	adc    bh,ch
  40f29c:	xlat   BYTE PTR ds:[ebx]
  40f29d:	lahf   
  40f29e:	retf   
  40f29f:	ins    BYTE PTR es:[edi],dx
  40f2a0:	rcl    DWORD PTR [eax],1
  40f2a2:	clc    
  40f2a3:	dec    esp
  40f2a4:	outs   dx,DWORD PTR ds:[esi]
  40f2a5:	xor    DWORD PTR [esi-0x41],edi
  40f2a8:	sub    dh,BYTE PTR ds:0x6b7d1b0e
  40f2ae:	js     0x40f287
  40f2b0:	call   0x933d:0x32f222d4
  40f2b7:	jle    0x40f2a0
  40f2b9:	(bad)  
  40f2ba:	push   edx
  40f2bb:	dec    eax
  40f2bc:	inc    edx
  40f2bd:	pop    es
  40f2be:	shl    BYTE PTR [eax],1
  40f2c0:	mov    dh,0xd8
  40f2c2:	test   eax,ecx
  40f2c4:	in     eax,dx
  40f2c5:	mov    ds:0x662ef076,al
  40f2ca:	loopne 0x40f31d
  40f2cc:	jle    0x40f30c
  40f2ce:	call   0x46966d79
  40f2d3:	push   ecx
  40f2d4:	xchg   esi,eax
  40f2d5:	xor    BYTE PTR [eax+0x26d76b4d],ah
  40f2db:	mov    eax,0x2e38dc63
  40f2e0:	icebp  
  40f2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e2:	dec    edi
  40f2e3:	add    DWORD PTR [edx+eax*1-0x41],0x8862ca11
  40f2eb:	and    al,0xb7
  40f2ed:	enter  0xa13d,0x9d
  40f2f1:	push   ebx
  40f2f2:	(bad)  
  40f2f4:	pop    edi
  40f2f5:	mov    BYTE PTR [esi+0x5d],bh
  40f2f8:	(bad)  
  40f2f9:	popa   
  40f2fa:	fcom   DWORD PTR [edx-0x2863c5b8]
  40f300:	cwde   
  40f301:	adc    BYTE PTR [edi],ch
  40f303:	dec    esi
  40f304:	inc    ebp
  40f305:	pop    ecx
  40f306:	mov    esi,0x60a5687c
  40f30b:	cmp    al,BYTE PTR [esi+0x7323c044]
  40f311:	ds popf 
  40f313:	mov    DWORD PTR [edi],0xed66c483
  40f319:	fisub  DWORD PTR [edi]
  40f31b:	and    ebp,DWORD PTR [edx+0x4c]
  40f31e:	ficomp DWORD PTR [ebx-0x53]
  40f321:	pop    esi
  40f322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f323:	daa    
  40f324:	mov    ebx,0x7a53a885
  40f329:	mov    esi,0xe9000c8
  40f32e:	stos   BYTE PTR es:[edi],al
  40f32f:	fbstp  TBYTE PTR [ecx]
  40f331:	mov    ah,0x17
  40f333:	and    eax,0x47eb912c
  40f338:	mov    dl,0xdd
  40f33a:	jmp    0xe91195ad
  40f33f:	pop    ebp
  40f340:	pop    ebx
  40f341:	mov    bl,0x99
  40f343:	push   ss
  40f344:	add    bl,ch
  40f346:	lock retf 0xc857
  40f34a:	mov    edi,0xb3e27fc0
  40f34f:	dec    eax
  40f350:	xchg   ebp,eax
  40f351:	les    edx,FWORD PTR [ebx-0x10]
  40f354:	mov    cl,BYTE PTR [eax+0x42]
  40f357:	ins    BYTE PTR es:[edi],dx
  40f358:	test   BYTE PTR [edi+edx*2-0x657ee18a],al
  40f35f:	in     eax,dx
  40f360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f361:	cli    
  40f362:	mov    ch,0x98
  40f364:	sub    BYTE PTR [eax+0x426130fe],0x56
  40f36b:	sbb    BYTE PTR [esi+0x1e],al
  40f36e:	jb     0x40f333
  40f370:	and    bh,al
  40f372:	xchg   ebp,eax
  40f373:	and    BYTE PTR [edi],0x6e
  40f376:	mov    ds:0x6aba6d2f,al
  40f37b:	and    BYTE PTR [eax+0x37955948],bh
  40f381:	(bad)  
  40f382:	mov    dh,0xa
  40f384:	jp     0x40f30f
  40f386:	ja     0x40f387
  40f388:	sti    
  40f389:	pop    edi
  40f38a:	mov    ds:0xac44f258,al
  40f38f:	mov    ah,0x75
  40f391:	and    dl,cl
  40f393:	pop    ds
  40f394:	adc    BYTE PTR [edx],bh
  40f396:	mov    ebx,0xd9e26707
  40f39b:	pop    es
  40f39c:	jge    0x40f346
  40f39e:	mov    ch,0x41
  40f3a0:	pop    eax
  40f3a1:	fisttp QWORD PTR [edx-0x745667b3]
  40f3a7:	lock popa 
  40f3a9:	and    bh,BYTE PTR [eax+edx*4]
  40f3ac:	ret    
  40f3ad:	pop    esp
  40f3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3af:	xlat   BYTE PTR ds:[ebx]
  40f3b0:	nop
  40f3b1:	into   
  40f3b2:	stos   BYTE PTR es:[edi],al
  40f3b3:	sub    BYTE PTR [esi+0x40],ch
  40f3b6:	dec    esi
  40f3b7:	fwait
  40f3b8:	jl     0x40f3b5
  40f3ba:	pop    ds
  40f3bb:	pxor   mm0,QWORD PTR ds:0x9e7850b8
  40f3c2:	(bad)  
  40f3c4:	fistp  QWORD PTR [eax]
  40f3c6:	hlt    
  40f3c7:	sbb    eax,DWORD PTR [ebp-0x62]
  40f3ca:	cmp    al,0x4a
  40f3cc:	pop    edx
  40f3cd:	xor    DWORD PTR [bx+di+0x64],0x52
  40f3d2:	mov    DWORD PTR [eax],esp
  40f3d4:	rcr    ebx,0x73
  40f3d7:	es push ebx
  40f3d9:	push   ebx
  40f3da:	fadd   DWORD PTR [eax+0x6]
  40f3dd:	popf   
  40f3de:	mov    dl,0x63
  40f3e0:	xchg   esp,eax
  40f3e1:	and    dl,BYTE PTR ds:0xecece293
  40f3e7:	lahf   
  40f3e8:	xor    eax,0x1e2f33d2
  40f3ed:	idiv   dh
  40f3ef:	jge    0x40f42e
  40f3f1:	sbb    al,BYTE PTR cs:[edi-0x20]
  40f3f5:	mov    edi,0x646e47f3
  40f3fa:	fbld   TBYTE PTR [ebp+0x7fe61ac5]
  40f400:	outs   dx,DWORD PTR ds:[esi]
  40f401:	rcr    BYTE PTR [edx+0x112704e1],cl
  40f407:	sbb    eax,0x76c1f1b9
  40f40c:	(bad)  
  40f40d:	jecxz  0x40f3fe
  40f40f:	lea    ebx,[esi]
  40f411:	push   ebp
  40f412:	xor    ah,BYTE PTR [ebp-0x5b440d3f]
  40f418:	outs   dx,BYTE PTR ds:[esi]
  40f419:	ss push ebp
  40f41b:	jo     0x40f489
  40f41d:	cmp    BYTE PTR [edx],al
  40f41f:	push   edx
  40f420:	pcmpeqw mm1,QWORD PTR [ecx]
  40f423:	sub    dh,0x52
  40f426:	gs loop 0x40f3c2
  40f429:	push   eax
  40f42a:	push   ds
  40f42b:	in     al,0xed
  40f42d:	ret    
  40f42e:	inc    esi
  40f42f:	xchg   ebp,eax
  40f430:	mov    al,0x2c
  40f432:	sub    eax,0x58477598
  40f437:	sbb    edx,esp
  40f439:	shl    BYTE PTR [ecx],cl
  40f43b:	iret   
  40f43c:	aas    
  40f43d:	loope  0x40f3c2
  40f43f:	idiv   edx
  40f441:	shl    DWORD PTR [ebp+0x45581c5d],0x36
  40f448:	pusha  
  40f449:	sub    al,0xff
  40f44b:	js     0x40f468
  40f44d:	cli    
  40f44e:	jmp    0x40f447
  40f450:	jge    0x40f43e
  40f452:	ja     0x40f445
  40f454:	mov    dl,0x4d
  40f456:	jmp    0x65368251
  40f45b:	shr    BYTE PTR [edi-0x46db7ca3],0xef
  40f462:	inc    esp
  40f463:	and    al,0x52
  40f465:	adc    al,0x8a
  40f467:	ins    BYTE PTR es:[edi],dx
  40f468:	mov    edi,0x1a59b30e
  40f46d:	and    al,0xe1
  40f46f:	xchg   ah,al
  40f471:	dec    ebx
  40f472:	clc    
  40f473:	jle    0x40f48d
  40f475:	sbb    eax,0xa6bc95ce
  40f47a:	(bad)  
  40f47c:	stc    
  40f47d:	dec    edx
  40f47e:	or     BYTE PTR [ebx],dh
  40f480:	dec    ebx
  40f481:	push   edi
  40f482:	scas   al,BYTE PTR es:[edi]
  40f483:	xchg   ecx,eax
  40f484:	xchg   ebp,eax
  40f485:	and    esi,esi
  40f487:	and    al,0x98
  40f489:	into   
  40f48a:	loope  0x40f477
  40f48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48d:	xchg   esi,eax
  40f48e:	sub    BYTE PTR [ebx],dh
  40f490:	fild   DWORD PTR [edi-0x14]
  40f493:	std    
  40f494:	sub    BYTE PTR [edx+0x15afeb6],cl
  40f49a:	ss or  al,0x22
  40f49d:	je     0x40f423
  40f49f:	xchg   DWORD PTR [ebp+0x255a46e5],ebp
  40f4a5:	mov    esp,0xc47018aa
  40f4aa:	popf   
  40f4ab:	jne    0x40f48b
  40f4ad:	(bad)  
  40f4ae:	mov    al,0xa6
  40f4b0:	sub    ah,BYTE PTR [esp+edx*1-0x35d8d43]
  40f4b7:	rcr    BYTE PTR [eax+0x5d1a9fa],cl
  40f4bd:	and    ah,BYTE PTR [edx-0x7ca21add]
  40f4c3:	xchg   BYTE PTR [esi+edx*4-0xa3f314a],ch
  40f4ca:	or     dh,BYTE PTR ss:[esi]
  40f4cd:	mov    DWORD PTR [eax-0x3a],ebp
  40f4d0:	(bad)  
  40f4d1:	in     eax,0xc6
  40f4d3:	test   eax,0xcd766f3d
  40f4d8:	dec    ecx
  40f4d9:	cld    
  40f4da:	xor    eax,0x7e88dff0
  40f4df:	sbb    al,0x88
  40f4e1:	mov    al,ds:0x12c1aad3
  40f4e6:	push   edx
  40f4e7:	mov    DWORD PTR [esi],0xb9e15843
  40f4ed:	dec    esp
  40f4ee:	popf   
  40f4ef:	fiadd  DWORD PTR [ebp-0x7d]
  40f4f2:	outs   dx,BYTE PTR ds:[esi]
  40f4f3:	cli    
  40f4f4:	(bad)  
  40f4f5:	xchg   edx,eax
  40f4f6:	sahf   
  40f4f7:	push   edi
  40f4f8:	sar    DWORD PTR [esi+0x3a],cl
  40f4fb:	hlt    
  40f4fc:	cdq    
  40f4fd:	lahf   
  40f4fe:	jb     0x40f497
  40f500:	stc    
  40f501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f502:	nop    ecx
  40f505:	push   ds
  40f506:	inc    edi
  40f507:	add    DWORD PTR [edx],esi
  40f509:	leave  
  40f50a:	mov    ds:0x471e83e0,al
  40f50f:	fwait
  40f510:	pop    ebx
  40f511:	pop    es
  40f512:	xchg   edx,eax
  40f513:	aam    0xb
  40f515:	(bad)  
  40f516:	jle    0x40f524
  40f518:	push   ebp
  40f519:	cmp    al,BYTE PTR [edx]
  40f51b:	(bad)  
  40f51c:	pop    ss
  40f51d:	mov    ebx,0x41471c04
  40f522:	add    al,0x12
  40f524:	into   
  40f525:	xchg   ecx,eax
  40f526:	sbb    DWORD PTR [ebx],0x9c1d1472
  40f52c:	inc    esi
  40f52d:	inc    edx
  40f52e:	aam    0x3a
  40f530:	push   esi
  40f531:	test   al,0x8f
  40f533:	outs   dx,BYTE PTR ds:[esi]
  40f534:	jne    0x40f55e
  40f536:	add    dh,BYTE PTR fs:[esp+edx*4]
  40f53a:	je     0x40f4de
  40f53c:	push   edi
  40f53d:	push   ds
  40f53e:	scas   eax,DWORD PTR es:[edi]
  40f53f:	mov    esp,0xea50b1f0
  40f544:	ins    DWORD PTR es:[edi],dx
  40f545:	ja     0x40f591
  40f547:	inc    edi
  40f548:	sbb    DWORD PTR [ecx+eiz*2-0x2a8c4077],esp
  40f54f:	repnz adc BYTE PTR ds:[esi-0x68a7bcaa],cl
  40f557:	xchg   edi,eax
  40f558:	dec    ebp
  40f559:	cmc    
  40f55a:	aas    
  40f55b:	lock fild QWORD PTR [esi+0x8]
  40f55f:	aas    
  40f560:	jecxz  0x40f510
  40f562:	dec    ebp
  40f563:	sbb    BYTE PTR [esi],dl
  40f565:	xchg   edi,eax
  40f566:	push   ecx
  40f567:	adc    eax,0x54eadfd9
  40f56c:	js     0x40f5a2
  40f56e:	call   0xc0c0:0xc0c0c037
  40f575:	rol    al,0xc0
  40f578:	rol    al,0xc0
  40f57b:	rol    al,0xc0
  40f57e:	rol    al,0xc0
  40f581:	rol    al,0xc0
  40f584:	rol    al,0xc0
  40f587:	rol    al,0xc0
  40f58a:	rol    al,0xc0
  40f58d:	rol    al,0xc0
  40f590:	rol    al,0xc0
  40f593:	rol    al,0xc0
  40f596:	rol    al,0xc0
  40f599:	rol    al,0xc0
  40f59c:	rol    al,0xc0
  40f59f:	rol    al,0xc0
  40f5a2:	rol    al,0xc0
  40f5a5:	rol    al,0xc0
  40f5a8:	rol    al,0xc0
  40f5ab:	rol    al,0xc0
  40f5ae:	rol    al,0xc0
  40f5b1:	rol    al,0xc0
  40f5b4:	rol    al,0xc0
  40f5b7:	rcl    BYTE PTR [ebp+0x5a],0x7f
  40f5bb:	repnz cld 
  40f5bd:	adc    bh,dl
  40f5bf:	je     0x40f5d9
  40f5c1:	pushf  
  40f5c2:	jmp    0xad2f6e98
  40f5c7:	inc    edx
  40f5c8:	mov    bh,BYTE PTR [eax-0xa]
  40f5cb:	clc    
  40f5cc:	pop    ebp
  40f5cd:	or     DWORD PTR [ecx+0xe],edi
  40f5d0:	ret    0x4227
  40f5d3:	mov    al,ds:0x9fae453b
  40f5d8:	lock dec eax
  40f5da:	pop    ebx
  40f5db:	push   0x9f42f79e
  40f5e0:	dec    esp
  40f5e1:	sbb    al,0x83
  40f5e3:	loopne 0x40f5d0
  40f5e5:	sbb    BYTE PTR [edx],ah
  40f5e7:	mov    ebp,0xb6d5886a
  40f5ec:	or     ebp,DWORD PTR [esi]
  40f5ee:	or     BYTE PTR ds:0xce6c8e49,bl
  40f5f4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f6:	dec    esi
  40f5f7:	lods   eax,DWORD PTR ds:[esi]
  40f5f8:	mov    ecx,0x89edac5
  40f5fd:	enter  0xe470,0x3a
  40f601:	jg     0x40f5b2
  40f603:	push   edx
  40f604:	pop    edx
  40f605:	das    
  40f606:	sbb    BYTE PTR es:[esi],al
  40f609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f60a:	mov    WORD PTR [ebp+0x67],?
  40f60d:	retf   0xa49
  40f610:	cdq    
  40f611:	mov    ds:0x2e46483a,eax
  40f616:	in     eax,dx
  40f617:	cwde   
  40f618:	in     al,dx
  40f619:	jge    0x40f5ae
  40f61b:	loopne 0x40f62e
  40f61d:	jne    0x40f5f6
  40f61f:	xlat   BYTE PTR ds:[ebx]
  40f620:	dec    esp
  40f621:	fld    TBYTE PTR [ebp+esi*8+0x6e285d43]
  40f628:	jnp    0x40f685
  40f62a:	xchg   esp,eax
  40f62b:	sbb    ecx,DWORD PTR ds:0x5d3f92a5
  40f631:	push   esi
  40f632:	jbe    0x40f66b
  40f634:	xor    DWORD PTR [edi-0x3a],0x69
  40f638:	xor    eax,0xea0a66fb
  40f63d:	pop    ecx
  40f63e:	arpl   WORD PTR [ebx],si
  40f640:	lahf   
  40f641:	ror    DWORD PTR [edi+0x1beed8ea],cl
  40f647:	xor    ch,BYTE PTR [ecx]
  40f649:	cmp    al,0x71
  40f64b:	sti    
  40f64c:	dec    ebp
  40f64d:	sub    dl,dh
  40f64f:	in     al,0xc5
  40f651:	cmp    al,0x9b
  40f653:	or     edx,DWORD PTR [ebx-0x32]
  40f656:	mov    dh,BYTE PTR [edi-0x38515a0e]
  40f65c:	or     BYTE PTR [ebp-0x529ab415],cl
  40f662:	sbb    BYTE PTR [ebp-0xe],cl
  40f665:	pop    es
  40f666:	int3   
  40f667:	add    eax,esi
  40f669:	call   0x93fd:0x52dcc424
  40f670:	sar    DWORD PTR [esi-0x23],0x9d
  40f674:	sub    eax,DWORD PTR [edx]
  40f676:	std    
  40f677:	jg     0x40f60e
  40f679:	dec    ecx
  40f67a:	int    0xb5
  40f67c:	push   0x9c08f287
  40f681:	mov    bh,BYTE PTR [ecx]
  40f683:	inc    eax
  40f684:	adc    eax,0x7ca115a1
  40f689:	popa   
  40f68a:	pop    ss
  40f68b:	pusha  
  40f68c:	sahf   
  40f68d:	out    0xfb,al
  40f68f:	aas    
  40f690:	fwait
  40f691:	sbb    al,0x9c
  40f693:	test   DWORD PTR [edi],esp
  40f695:	push   ds
  40f696:	push   edx
  40f697:	add    al,BYTE PTR [edi+eiz*4]
  40f69a:	dec    ebx
  40f69b:	pushf  
  40f69c:	jbe    0x40f6c0
  40f69e:	jl     0x40f6ec
  40f6a0:	stos   BYTE PTR es:[edi],al
  40f6a1:	loop   0x40f672
  40f6a3:	adc    eax,0x59d88d71
  40f6a8:	push   edi
  40f6a9:	push   ebp
  40f6aa:	jecxz  0x40f6f0
  40f6ac:	mov    esi,0x83bee81e
  40f6b1:	inc    ebp
  40f6b2:	and    ebx,DWORD PTR [ebx-0x39]
  40f6b5:	pop    ecx
  40f6b6:	mov    ds:0x9228569e,al
  40f6bb:	sbb    al,0x3e
  40f6bd:	jb     0x40f696
  40f6bf:	call   0xf9bf8ea7
  40f6c4:	xor    al,0x2a
  40f6c6:	inc    ebp
  40f6c7:	push   esp
  40f6c8:	cs xchg edi,eax
  40f6ca:	push   es
  40f6cb:	and    al,0x38
  40f6cd:	dec    esp
  40f6ce:	das    
  40f6cf:	jp     0x40f6e8
  40f6d1:	push   ebx
  40f6d2:	add    al,bh
  40f6d4:	jno    0x40f6c1
  40f6d6:	dec    esi
  40f6d7:	adc    BYTE PTR [ebx-0x4b6e9629],ah
  40f6dd:	inc    ecx
  40f6de:	pop    ds
  40f6df:	sbb    edx,edi
  40f6e1:	inc    ebp
  40f6e2:	out    dx,eax
  40f6e3:	or     ebx,edx
  40f6e5:	add    eax,0x39c7ff2e
  40f6ea:	ins    DWORD PTR es:[edi],dx
  40f6eb:	inc    edi
  40f6ec:	jb     0x1280c64f
  40f6f2:	mov    gs,ebx
  40f6f4:	addr16 ret 0x95bc
  40f6f8:	sub    edx,edx
  40f6fa:	add    ch,0x1c
  40f6fd:	push   cs
  40f6fe:	popw   es
  40f700:	test   eax,0xf01eeefe
  40f705:	test   al,0xca
  40f707:	std    
  40f708:	cli    
  40f709:	in     al,dx
  40f70a:	inc    edx
  40f70b:	and    esp,DWORD PTR [eax+0x3e]
  40f70e:	lock call 0x906:0x84d2a710
  40f716:	jl     0x40f78d
  40f718:	jns    0x40f72b
  40f71a:	jb     0x40f6da
  40f71c:	mov    al,ds:0x69b7d8e4
  40f721:	iret   
  40f722:	xor    edx,DWORD PTR [edx-0x5d86a3f9]
  40f728:	(bad)  
  40f729:	aam    0xd2
  40f72b:	mov    ebx,0x689254a0
  40f730:	jae    0x40f79d
  40f732:	jne    0x40f6f8
  40f734:	ins    DWORD PTR es:[edi],dx
  40f735:	(bad)  
  40f736:	out    dx,al
  40f737:	scas   eax,DWORD PTR es:[edi]
  40f738:	(bad)  
  40f739:	fstp   QWORD PTR [edi-0x1af8c301]
  40f73f:	iret   
  40f740:	lods   eax,DWORD PTR ds:[esi]
  40f741:	pop    esp
  40f742:	repz mov cl,0x16
  40f745:	sbb    eax,0xd3814cb9
  40f74a:	dec    ebx
  40f74b:	mov    ds,WORD PTR [edi-0x2c]
  40f74e:	xor    ebx,esi
  40f750:	repnz push esp
  40f753:	(bad)  
  40f755:	call   0x83d2:0x135368de
  40f75c:	icebp  
  40f75d:	mov    DWORD PTR [ebx-0x4eca891f],esi
  40f763:	sar    DWORD PTR [eax+0x15],1
  40f766:	xchg   edx,eax
  40f767:	mov    BYTE PTR [eax+0x36],ah
  40f76a:	cmp    BYTE PTR [esi+0x33],0x5e
  40f76e:	push   ebp
  40f76f:	sub    DWORD PTR [edi],edi
  40f771:	ds pop ss
  40f773:	mov    DWORD PTR [edi-0x47],edx
  40f776:	mov    fs,WORD PTR [eax]
  40f778:	cmp    DWORD PTR [ebx-0x522079f9],ebx
  40f77e:	xor    DWORD PTR [edx],0xffffffb0
  40f781:	(bad)  
  40f782:	aad    0x1c
  40f784:	push   ds
  40f785:	mov    edx,0x37dd84b9
  40f78a:	into   
  40f78b:	pop    ecx
  40f78c:	(bad)  
  40f78d:	dec    edx
  40f78e:	ret    
  40f78f:	scas   al,BYTE PTR es:[edi]
  40f790:	or     edi,0x1fd53bb7
  40f796:	xchg   ecx,eax
  40f797:	sar    al,1
  40f799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79a:	dec    ecx
  40f79b:	xor    DWORD PTR [edi+0x37],ebx
  40f79e:	mov    eax,ds:0x2c5d0d34
  40f7a3:	and    al,0x62
  40f7a5:	loop   0x40f747
  40f7a7:	adc    al,0xf7
  40f7a9:	cmp    al,0xe3
  40f7ab:	or     DWORD PTR [esi+0x74],eax
  40f7ae:	test   eax,0x95ab811c
  40f7b3:	fwait
  40f7b4:	mov    WORD PTR [eax-0x156cceef],ds
  40f7ba:	jne    0x40f7c9
  40f7bc:	inc    ebx
  40f7bd:	jle    0x40f772
  40f7bf:	ret    
  40f7c0:	cmp    al,0x5b
  40f7c2:	fisttp DWORD PTR [esi-0x5fd14c1e]
  40f7c8:	jno    0x40f784
  40f7ca:	mov    dl,0x9d
  40f7cc:	aaa    
  40f7cd:	pop    es
  40f7ce:	cmp    al,0x13
  40f7d0:	ja     0x40f7f2
  40f7d2:	xchg   esp,eax
  40f7d3:	xchg   edi,eax
  40f7d4:	into   
  40f7d5:	sbb    bl,BYTE PTR [esi+0x13fa9917]
  40f7db:	adc    ch,BYTE PTR [ebx]
  40f7dd:	xchg   esp,eax
  40f7de:	(bad)  
  40f7e0:	js     0x40f7b4
  40f7e2:	nop
  40f7e3:	pop    eax
  40f7e4:	and    eax,0x4547913a
  40f7e9:	push   ebx
  40f7ea:	in     eax,0x24
  40f7ec:	outs   dx,DWORD PTR ds:[esi]
  40f7ed:	mov    eax,0xd1763e06
  40f7f2:	rol    BYTE PTR [edx*2+0x2171e683],cl
  40f7f9:	xchg   esi,eax
  40f7fa:	sub    cl,ah
  40f7fc:	and    eax,0xad1f2c89
  40f801:	mov    ah,0x42
  40f803:	xor    eax,DWORD PTR [ebp+0x46c91a3a]
  40f809:	outs   dx,BYTE PTR ds:[esi]
  40f80a:	pop    edx
  40f80b:	shl    DWORD PTR [ebx+0x60],0xb3
  40f80f:	and    dl,ah
  40f811:	in     eax,dx
  40f812:	fiadd  DWORD PTR [edx-0x21]
  40f815:	bound  esp,QWORD PTR [eax]
  40f817:	dec    esi
  40f818:	imul   esp,DWORD PTR [esi+0x32bd525e],0xffffff9e
  40f81f:	dec    ebp
  40f820:	jns    0x40f7e4
  40f822:	mov    esp,0x6e288585
  40f827:	cmp    DWORD PTR [edx+0x7f266ca],ecx
  40f82d:	dec    esi
  40f82e:	popf   
  40f82f:	mov    al,0x3e
  40f831:	call   0xf41e:0xc541e3ea
  40f838:	retf   
  40f839:	repz pusha 
  40f83b:	cmp    edi,DWORD PTR [ebp+0x2b]
  40f83e:	into   
  40f83f:	sub    al,0x65
  40f841:	rol    DWORD PTR [edi-0x67cbdf9f],1
  40f847:	push   eax
  40f848:	add    DWORD PTR [edx],ebx
  40f84a:	mov    esi,0x160281c
  40f84f:	dec    eax
  40f850:	push   edi
  40f851:	lea    ebx,[edx-0x3f]
  40f854:	test   DWORD PTR [ebp+0x52],0x722d81f7
  40f85b:	nop
  40f85c:	mov    cs,WORD PTR [ecx-0x65faca87]
  40f862:	cmc    
  40f863:	cld    
  40f864:	xchg   esp,eax
  40f865:	xchg   ecx,eax
  40f866:	xchg   DWORD PTR [eax+eax*4],esi
  40f869:	mov    eax,ds:0xd3496cbe
  40f86e:	jmp    DWORD PTR [esi]
  40f870:	cwde   
  40f871:	(bad)  
  40f872:	adc    BYTE PTR ds:0x53af08d6,bl
  40f878:	jecxz  0x40f878
  40f87a:	pop    ss
  40f87b:	loopne 0x40f895
  40f87d:	cld    
  40f87e:	imul   edi,DWORD PTR [ecx-0x72],0x787d80bf
  40f885:	addr16 mov edx,0x6f98992a
  40f88b:	sub    al,0x83
  40f88d:	cld    
  40f88e:	(bad)  
  40f88f:	and    al,0x5a
  40f891:	lea    edi,[ecx+eax*2]
  40f894:	sete   BYTE PTR [edi+0x326bd5bf]
  40f89b:	mov    al,ds:0x2eff6cca
  40f8a0:	imul   ebx,esp,0x67
  40f8a3:	sub    esi,edx
  40f8a5:	test   al,0xb1
  40f8a7:	push   ds
  40f8a8:	jge    0x40f851
  40f8aa:	outs   dx,DWORD PTR ds:[esi]
  40f8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ac:	push   DWORD PTR [ebp-0x268b65ad]
  40f8b2:	xor    DWORD PTR [ecx],esp
  40f8b4:	adc    DWORD PTR [ecx],esp
  40f8b6:	cmp    BYTE PTR [ebx-0x2e],bh
  40f8b9:	fwait
  40f8ba:	(bad)  
  40f8bb:	xchg   esp,eax
  40f8bc:	pcmpgtw mm4,mm0
  40f8bf:	adc    ch,BYTE PTR [edi]
  40f8c1:	imul   esi,DWORD PTR [edx-0x7c],0x94e7c7c3
  40f8c8:	push   ebx
  40f8c9:	dec    ecx
  40f8ca:	sbb    ah,BYTE PTR [ebx+0x41]
  40f8cd:	loop   0x40f8fe
  40f8cf:	push   ebp
  40f8d0:	iret   
  40f8d1:	mov    ecx,0xae69e09a
  40f8d6:	mov    ch,0xc9
  40f8d8:	in     al,0xae
  40f8da:	pop    es
  40f8db:	add    al,0x2e
  40f8dd:	loop   0x40f93d
  40f8df:	mov    esp,0x44eda19a
  40f8e4:	and    DWORD PTR [ecx],edi
  40f8e6:	lock (bad) [edi-0x18]
  40f8ea:	dec    ecx
  40f8eb:	adc    eax,DWORD PTR [eax-0x66]
  40f8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ef:	dec    ebx
  40f8f0:	xchg   DWORD PTR [bp-0x31f4],ecx
  40f8f5:	push   0x4b
  40f8f7:	sub    ebx,DWORD PTR [ecx+0xa]
  40f8fa:	retf   
  40f8fb:	fisttp DWORD PTR [ecx+0x55]
  40f8fe:	int3   
  40f8ff:	inc    edi
  40f900:	inc    edi
  40f901:	mov    ecx,0x9a1a018a
  40f906:	cmp    esp,DWORD PTR [esi+0x1c]
  40f909:	in     al,0x3f
  40f90b:	lds    edi,FWORD PTR ds:[ecx]
  40f90e:	into   
  40f90f:	out    dx,al
  40f910:	ss push 0x75de1655
  40f916:	ds inc eax
  40f918:	icebp  
  40f919:	cmp    ecx,eax
  40f91b:	mov    ah,0xcf
  40f91d:	js     0x40f912
  40f91f:	cli    
  40f920:	into   
  40f921:	out    dx,eax
  40f922:	cmp    al,BYTE PTR [edi-0x23]
  40f925:	fmul   QWORD PTR [edx-0x33]
  40f928:	lods   eax,DWORD PTR ds:[esi]
  40f929:	push   ss
  40f92a:	xchg   DWORD PTR [eax-0x2c132b6e],esp
  40f930:	nop
  40f931:	sub    BYTE PTR [edi],dl
  40f933:	or     al,0x6c
  40f935:	stos   DWORD PTR es:[edi],eax
  40f936:	sahf   
  40f937:	aas    
  40f938:	loopne 0x40f910
  40f93a:	outs   dx,DWORD PTR ds:[esi]
  40f93b:	xor    ebx,ecx
  40f93d:	pop    ebx
  40f93e:	js     0x40f965
  40f940:	and    ecx,edx
  40f942:	or     al,0xe6
  40f944:	stos   BYTE PTR es:[edi],al
  40f945:	dec    edx
  40f946:	neg    dh
  40f948:	adc    eax,0x5e4cbe57
  40f94d:	mov    eax,DWORD PTR [edi]
  40f94f:	dec    eax
  40f950:	mov    DWORD PTR [ecx-0x7af5e144],esi
  40f956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f957:	test   DWORD PTR [edx],eax
  40f959:	scas   eax,DWORD PTR es:[edi]
  40f95a:	lahf   
  40f95b:	fst    QWORD PTR [eax]
  40f95d:	mov    ecx,0xe56652a0
  40f962:	call   0xd0aa9de
  40f967:	dec    ebp
  40f968:	cmp    DWORD PTR [eax],esp
  40f96a:	rol    BYTE PTR [ecx+0x8b165bd],cl
  40f970:	out    0x3e,al
  40f972:	fiadd  DWORD PTR [edx-0xe]
  40f975:	and    eax,DWORD PTR [eax]
  40f977:	(bad)  
  40f978:	int3   
  40f979:	hlt    
  40f97a:	cwde   
  40f97b:	dec    edx
  40f97c:	xor    al,0x67
  40f97e:	lods   eax,DWORD PTR ds:[esi]
  40f97f:	lea    ebx,[esi+edi*2-0x7f]
  40f983:	outs   dx,DWORD PTR ds:[esi]
  40f984:	cmp    al,0xcc
  40f986:	jmp    FWORD PTR [edi]
  40f988:	pushaw 
  40f98a:	je     0x40f9ff
  40f98c:	jmp    0xa1e193b1
  40f991:	shr    BYTE PTR [ebp+0x71],cl
  40f994:	lods   eax,DWORD PTR ds:[esi]
  40f995:	out    dx,eax
  40f996:	int    0x8f
  40f998:	push   edi
  40f999:	aaa    
  40f99a:	(bad)  
  40f99b:	pop    ebx
  40f99c:	data16 sbb BYTE PTR [ecx-0x364fec21],dl
  40f9a3:	jp     0x40f9a5
  40f9a5:	jecxz  0x40f93f
  40f9a7:	xchg   ebp,eax
  40f9a8:	mov    eax,ds:0x709dc3b9
  40f9ad:	arpl   WORD PTR [eax+0x707f99c6],cx
  40f9b3:	and    BYTE PTR [eax],bl
  40f9b5:	test   edi,ecx
  40f9b7:	jmp    0x9182:0xa4b8eb78
  40f9be:	lods   eax,DWORD PTR ds:[esi]
  40f9bf:	int3   
  40f9c0:	dec    ebp
  40f9c1:	xchg   edi,eax
  40f9c2:	scas   al,BYTE PTR es:[edi]
  40f9c3:	sbb    al,0x13
  40f9c5:	imul   edi,DWORD PTR [edx-0x7c5441e4],0x920a1e83
  40f9cf:	stos   BYTE PTR es:[edi],al
  40f9d0:	add    edx,eax
  40f9d2:	popa   
  40f9d3:	fild   WORD PTR ds:[esi+0x13]
  40f9d7:	not    edx
  40f9d9:	xor    al,0x9c
  40f9db:	bound  eax,QWORD PTR [esi-0x8]
  40f9de:	fisub  DWORD PTR [bx+si]
  40f9e1:	outs   dx,DWORD PTR ds:[esi]
  40f9e2:	jne    0x40f9ea
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	inc    edx
  40f9e6:	sahf   
  40f9e7:	inc    ecx
  40f9e8:	mov    ds,WORD PTR [esi+0x16829b59]
  40f9ee:	push   ebp
  40f9ef:	xchg   ebx,eax
  40f9f0:	push   ecx
  40f9f1:	jl     0x40fa6a
  40f9f3:	fld    TBYTE PTR [ebx-0x4a1eef26]
  40f9f9:	jns    0x40f983
  40f9fb:	push   0x55
  40f9fd:	cwde   
  40f9fe:	or     esp,DWORD PTR [edx]
  40fa00:	mov    ah,0xe3
  40fa02:	xchg   DWORD PTR [edx],ebp
  40fa04:	add    al,0xdd
  40fa06:	test   DWORD PTR [edx+0x34d4346c],esi
  40fa0c:	pop    edx
  40fa0d:	mov    al,ds:0x5ace65e6
  40fa12:	imul   esp,ebp,0x63982d39
  40fa18:	xchg   sp,ax
  40fa1a:	popf   
  40fa1b:	das    
  40fa1c:	cli    
  40fa1d:	mov    edx,0x8a482feb
  40fa22:	pop    ebp
  40fa23:	dec    esi
  40fa24:	and    DWORD PTR [ebx],eax
  40fa26:	xchg   ecx,eax
  40fa27:	pop    ss
  40fa28:	jl     0x40fa81
  40fa2a:	test   bl,ah
  40fa2c:	push   ebx
  40fa2d:	loop   0x40fa1e
  40fa2f:	pop    esp
  40fa30:	xchg   edi,eax
  40fa31:	push   eax
  40fa32:	push   ecx
  40fa33:	loope  0x40fa6e
  40fa35:	std    
  40fa36:	pop    es
  40fa37:	repz clc 
  40fa39:	test   ah,0xc2
  40fa3c:	sub    al,0xc0
  40fa3e:	lods   al,BYTE PTR ds:[esi]
  40fa3f:	call   FWORD PTR [ecx-0x6209b33b]
  40fa45:	fisubr WORD PTR [ecx-0x4d]
  40fa48:	pusha  
  40fa49:	aam    0xb6
  40fa4b:	inc    ebp
  40fa4c:	ret    0x4a70
  40fa4f:	ja     0x40fac7
  40fa51:	aam    0x66
  40fa53:	mov    ah,0x93
  40fa55:	ins    DWORD PTR es:[edi],dx
  40fa56:	xor    al,0xb9
  40fa58:	popa   
  40fa59:	sbb    BYTE PTR [ecx],0xfb
  40fa5c:	ror    BYTE PTR [ecx-0x578f3213],cl
  40fa62:	loope  0x40fa6f
  40fa64:	xchg   esp,eax
  40fa65:	xor    DWORD PTR [edx+0x51],esi
  40fa68:	or     ch,bl
  40fa6a:	push   ds
  40fa6b:	xor    BYTE PTR [ecx+0x7e],bh
  40fa6e:	mov    edi,0xe9ca696f
  40fa73:	dec    BYTE PTR [ebx+0x61]
  40fa76:	cmp    DWORD PTR [ecx],ecx
  40fa78:	adc    al,0x2a
  40fa7a:	pop    es
  40fa7b:	or     DWORD PTR ss:[edx-0x4756cbda],esi
  40fa82:	ss pushf 
  40fa84:	push   ebp
  40fa85:	sub    DWORD PTR [eax-0x44fddb52],edx
  40fa8b:	lods   al,BYTE PTR ds:[esi]
  40fa8c:	mov    dh,0x7e
  40fa8e:	test   al,0x1b
  40fa90:	stos   BYTE PTR es:[edi],al
  40fa91:	pop    edi
  40fa92:	es cli 
  40fa94:	sub    DWORD PTR [ecx+0xf],ebp
  40fa97:	jge    0x40fa8d
  40fa99:	cwde   
  40fa9a:	sbb    BYTE PTR [ebp-0x5b9df621],0x54
  40faa1:	loopne 0x40fa3f
  40faa3:	push   0x78
  40faa5:	aam    0x8c
  40faa7:	dec    eax
  40faa8:	and    al,0xef
  40faaa:	(bad)  ds:0x7726d87d
  40fab0:	xor    BYTE PTR [edx-0x758a74f1],bl
  40fab6:	(bad)  
  40fab7:	and    BYTE PTR [esi-0x19fdd31b],cl
  40fabd:	xor    DWORD PTR [edi],eax
  40fabf:	loope  0x40fb36
  40fac1:	loopne 0x40fb2c
  40fac3:	adc    DWORD PTR ds:0x3337,ebp
  40fac8:	cli    
  40fac9:	pop    ds
  40faca:	inc    esi
  40facb:	jbe    0x40faf0
  40facd:	outs   dx,BYTE PTR ds:[esi]
  40face:	rol    DWORD PTR [ebp+0x4d7f3855],0xb6
  40fad5:	popa   
  40fad6:	sbb    ch,BYTE PTR [ebx]
  40fad8:	and    esp,DWORD PTR [edx+0x40]
  40fadb:	mov    dh,0xa1
  40fadd:	fsub   DWORD PTR [ecx]
  40fadf:	mov    ecx,esp
  40fae1:	jecxz  0x40fa75
  40fae3:	mov    ebx,DWORD PTR [edi+edi*4-0x150a1ece]
  40faea:	je     0x40faf6
  40faec:	fcomi  st,st(6)
  40faee:	push   edx
  40faef:	dec    ecx
  40faf0:	ficomp DWORD PTR [edx-0x32]
  40faf3:	dec    edx
  40faf4:	sar    DWORD PTR [edi],cl
  40faf6:	sub    bl,BYTE PTR [eax]
  40faf8:	mov    ecx,0x641b64c3
  40fafd:	sub    eax,0xf627db84
  40fb02:	(bad)  [eax]
  40fb04:	outs   dx,BYTE PTR ds:[esi]
  40fb05:	cmp    al,0x9e
  40fb07:	cmc    
  40fb08:	adc    DWORD PTR [edx],esp
  40fb0a:	xchg   ecx,eax
  40fb0b:	jne    0x40fa9c
  40fb0d:	addr16 mov dh,0x2b
  40fb10:	jae    0x40fb48
  40fb12:	call   0xbc35:0x723a4e18
  40fb19:	mov    dh,0x42
  40fb1b:	stos   DWORD PTR es:[edi],eax
  40fb1c:	test   BYTE PTR [eax],ah
  40fb1e:	push   DWORD PTR [edx+0x1e143374]
  40fb24:	mov    ?,WORD PTR [edi-0x27764685]
  40fb2a:	retf   0x5ff7
  40fb2d:	ss dec esi
  40fb2f:	xor    BYTE PTR [esi+0xa],0xe5
  40fb33:	arpl   WORD PTR [edx],bx
  40fb35:	stos   DWORD PTR es:[edi],eax
  40fb36:	sub    BYTE PTR [edi+0x5d307aa7],dl
  40fb3c:	sbb    DWORD PTR [ebp-0x377e7a0f],ecx
  40fb42:	mov    BYTE PTR [ecx],cl
  40fb44:	fisub  WORD PTR [edx-0x67574f2e]
  40fb4a:	adc    eax,0xbef5db00
  40fb4f:	std    
  40fb50:	inc    ecx
  40fb51:	popa   
  40fb52:	push   esi
  40fb53:	mov    ch,0x2
  40fb55:	pop    esi
  40fb56:	pop    ebp
  40fb57:	fisttp WORD PTR [ebx+eiz*1]
  40fb5a:	push   ebx
  40fb5b:	clc    
  40fb5c:	ds test ah,dh
  40fb5f:	xchg   edi,eax
  40fb60:	(bad)  
  40fb61:	ins    DWORD PTR es:[edi],dx
  40fb62:	imul   ebx,DWORD PTR [esi],0x5b7dc4a2
  40fb68:	sahf   
  40fb69:	add    BYTE PTR [ebx+0x56],bl
  40fb6c:	das    
  40fb6d:	sub    BYTE PTR ds:0xd4e015df,al
  40fb73:	pop    ebp
  40fb74:	cld    
  40fb75:	pop    esi
  40fb76:	add    BYTE PTR [edi],cl
  40fb78:	inc    edx
  40fb79:	scas   eax,DWORD PTR es:[edi]
  40fb7a:	mov    ecx,0xb5364b8d
  40fb7f:	dec    ebp
  40fb80:	pushf  
  40fb81:	shr    ch,1
  40fb83:	inc    ebx
  40fb84:	sub    esi,DWORD PTR [ebx-0x1f]
  40fb87:	stos   DWORD PTR es:[edi],eax
  40fb88:	add    al,0x3
  40fb8a:	xchg   esi,eax
  40fb8b:	pop    es
  40fb8c:	mov    eax,0x3b2b0ca3
  40fb91:	mov    ss,WORD PTR [ebx+0x61336e54]
  40fb97:	ss jmp 0x9261:0x4661f380
  40fb9f:	ficom  DWORD PTR [edi-0x3e]
  40fba2:	sub    esp,edi
  40fba4:	add    dl,BYTE PTR [esi-0x73]
  40fba7:	rol    DWORD PTR [edi],1
  40fba9:	addr16 out 0x28,eax
  40fbac:	(bad)  [eax-0x756a8fdc]
  40fbb2:	push   ss
  40fbb3:	cdq    
  40fbb4:	nop
  40fbb5:	dec    esi
  40fbb6:	out    dx,al
  40fbb7:	adc    al,0xfc
  40fbb9:	aas    
  40fbba:	fsubp  st(5),st
  40fbbc:	fisubr WORD PTR [edx+0x6213cc2c]
  40fbc2:	sahf   
  40fbc3:	fs jecxz 0x40fc3a
  40fbc6:	mov    bl,0x70
  40fbc8:	cld    
  40fbc9:	popf   
  40fbca:	pushf  
  40fbcb:	xlat   BYTE PTR ds:[ebx]
  40fbcc:	hlt    
  40fbcd:	add    ch,bl
  40fbcf:	dec    edx
  40fbd0:	mov    ds:0x54e9420,al
  40fbd5:	test   DWORD PTR [ecx],esp
  40fbd7:	jo     0x40fb60
  40fbd9:	xlat   BYTE PTR ds:[ebx]
  40fbda:	mov    edi,0xb1315285
  40fbdf:	cmp    eax,0x272c5f37
  40fbe4:	and    DWORD PTR [ecx],ebx
  40fbe6:	scas   eax,DWORD PTR es:[edi]
  40fbe7:	jp     0x40fb6e
  40fbe9:	mov    esi,ecx
  40fbeb:	lea    edi,[esi-0x6524a56d]
  40fbf1:	imul   edx,DWORD PTR [esi],0x39534523
  40fbf7:	cwde   
  40fbf8:	int3   
  40fbf9:	mov    cl,0x21
  40fbfb:	and    eax,0x379b731d
  40fc00:	xchg   esi,eax
  40fc01:	push   0xffffff8c
  40fc03:	out    0x7b,eax
  40fc05:	adc    eax,0x77af2f93
  40fc0a:	or     DWORD PTR [edx+0x59932701],ebx
  40fc10:	rcr    BYTE PTR [edi],0xca
  40fc13:	and    dl,BYTE PTR [eax+ebx*1-0x8105a5f]
  40fc1a:	js     0x40fc1d
  40fc1c:	repz mov ebx,0xb8fcccaa
  40fc22:	arpl   WORD PTR [eax-0x44e08c80],ax
  40fc28:	idiv   ah
  40fc2a:	loope  0x40fbf5
  40fc2c:	jae    0x40fbfa
  40fc2e:	(bad)  
  40fc2f:	xor    DWORD PTR ds:0xe6bee834,edi
  40fc35:	add    bl,BYTE PTR [ebx+0x1e2ed15f]
  40fc3b:	into   
  40fc3c:	add    eax,0xa314855d
  40fc41:	stc    
  40fc42:	xor    edi,DWORD PTR [eax+ebp*8+0x6e]
  40fc46:	mov    ebp,0x34db7e6e
  40fc4b:	sbb    ah,bl
  40fc4d:	in     eax,dx
  40fc4e:	(bad)  
  40fc50:	jns    0x40fbf1
  40fc52:	out    dx,eax
  40fc53:	cmp    dh,ch
  40fc55:	adc    al,0x50
  40fc57:	loope  0x40fc5a
  40fc59:	fmul   DWORD PTR [ecx+ebx*2]
  40fc5c:	pop    esp
  40fc5d:	int    0x52
  40fc5f:	push   ebp
  40fc60:	or     eax,0xe97d5f38
  40fc65:	mov    dl,BYTE PTR [ecx+0x50]
  40fc68:	and    cl,ch
  40fc6a:	mov    ebx,0xbcd5f733
  40fc6f:	imul   ebx,DWORD PTR [edx-0x2f],0x5c109116
  40fc76:	es mov ch,0xd0
  40fc79:	paddb  mm7,QWORD PTR [edx-0x79cdf34e]
  40fc80:	mov    esi,0x20ad8ef5
  40fc85:	push   bx
  40fc87:	pop    esi
  40fc88:	(bad)  
  40fc89:	mov    bl,0xae
  40fc8b:	rcr    BYTE PTR [ecx-0x1d],0xc7
  40fc8f:	mov    cl,0x7c
  40fc91:	jns    0x40fcf6
  40fc93:	and    al,0x5c
  40fc95:	inc    eax
  40fc96:	inc    esp
  40fc97:	inc    ebp
  40fc98:	daa    
  40fc99:	cmp    edx,DWORD PTR [edx-0x64]
  40fc9c:	(bad)  
  40fc9d:	push   ebx
  40fc9e:	fwait
  40fc9f:	popf   
  40fca0:	or     al,BYTE PTR [ecx-0x4b]
  40fca3:	lahf   
  40fca4:	mov    eax,ds:0x39722bbe
  40fca9:	(bad)  
  40fcaa:	push   0xffffff83
  40fcac:	cwde   
  40fcad:	sub    DWORD PTR [esi-0xb6e3487],0x19
  40fcb4:	retf   
  40fcb5:	xchg   ebp,eax
  40fcb6:	jl     0x40fd24
  40fcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcba:	jb     0x40fcab
  40fcbc:	dec    ebp
  40fcbd:	xlat   BYTE PTR ds:[ebx]
  40fcbe:	push   ecx
  40fcbf:	and    ecx,DWORD PTR [edx+esi*1]
  40fcc2:	pop    ds
  40fcc3:	lea    edx,[esi+eiz*2-0x67]
  40fcc7:	fs stc 
  40fcc9:	retf   0x89d9
  40fccc:	je     0x40fcf8
  40fcce:	mov    ebx,0x76a24252
  40fcd3:	dec    esi
  40fcd4:	push   cs
  40fcd5:	pop    ebp
  40fcd6:	daa    
  40fcd7:	imul   ebx,DWORD PTR [ebx+ebx*4],0x8
  40fcdb:	and    bl,dl
  40fcdd:	lahf   
  40fcde:	popf   
  40fcdf:	scas   al,BYTE PTR es:[edi]
  40fce0:	and    edx,ebp
  40fce2:	jecxz  0x40fcc4
  40fce4:	add    dl,bh
  40fce6:	add    DWORD PTR [esi+eax*2-0x52fe3548],esp
  40fced:	inc    edx
  40fcee:	pushf  
  40fcef:	pop    edx
  40fcf0:	mov    ch,0x69
  40fcf2:	pop    edx
  40fcf3:	mov    dl,0x1a
  40fcf5:	or     DWORD PTR [edi-0x71a4810f],ebx
  40fcfb:	mov    ss,eax
  40fcfd:	pop    ebx
  40fcfe:	mov    ds:0x1e174223,eax
  40fd03:	jbe    0x40fd6b
  40fd05:	mov    al,0x79
  40fd07:	push   ds
  40fd08:	test   DWORD PTR [edx-0x37],edi
  40fd0b:	lock call 0x90e5f01e
  40fd11:	mov    al,ds:0xd4b16c7
  40fd17:	out    dx,al
  40fd18:	jb     0x40fd33
  40fd1a:	sti    
  40fd1b:	sub    dh,BYTE PTR [ebx-0x70]
  40fd1e:	xor    BYTE PTR [ecx],dh
  40fd20:	fdiv   QWORD PTR ss:[ecx+0xa28d400]
  40fd27:	cmp    eax,0x36f8da3e
  40fd2c:	ins    DWORD PTR es:[edi],dx
  40fd2d:	ret    0xa42b
  40fd30:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40fd32:	xchg   DWORD PTR [ecx],esi
  40fd34:	adc    DWORD PTR [esi+ebp*4],ecx
  40fd37:	sub    al,0x69
  40fd39:	(bad)  
  40fd3a:	pop    ds
  40fd3b:	or     DWORD PTR [esi+0x0],ecx
  40fd3e:	cmp    dl,al
  40fd40:	jae    0x40fd9a
  40fd42:	fiadd  WORD PTR [ebx+edi*4]
  40fd45:	xchg   dl,bh
  40fd47:	sub    DWORD PTR [edx+0x5176ba55],edx
  40fd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4e:	lods   al,BYTE PTR ds:[esi]
  40fd4f:	add    al,0x72
  40fd51:	jae    0x40fdb2
  40fd53:	jecxz  0x40fdb4
  40fd55:	pop    ebx
  40fd56:	call   0xc612:0x69ec702
  40fd5d:	(bad)  
  40fd5f:	jne    0x40fda7
  40fd61:	mov    esi,ss
  40fd63:	bound  eax,QWORD PTR [ebp-0x69d33800]
  40fd69:	and    eax,0x37ccd46f
  40fd6e:	xchg   ecx,eax
  40fd6f:	and    dl,BYTE PTR [eax+0x41010f82]
  40fd75:	pop    ecx
  40fd76:	push   cs
  40fd77:	sbb    al,0x46
  40fd79:	jno    0x40fd99
  40fd7b:	(bad)  
  40fd7c:	mov    esi,0x6f8f4499
  40fd81:	pop    ebx
  40fd82:	and    DWORD PTR [ebx+0x41563918],0xc0c0c0c0
  40fd8c:	rol    al,0xc0
  40fd8f:	rol    al,0xc0
  40fd92:	rol    al,0xc0
  40fd95:	rol    al,0xc0
  40fd98:	rol    al,0xc0
  40fd9b:	rol    al,0xc0
  40fd9e:	rol    al,0xc0
  40fda1:	rol    al,0xc0
  40fda4:	rol    al,0xc0
  40fda7:	shl    BYTE PTR [eax],0xc8
  40fdaa:	lods   eax,DWORD PTR ds:[esi]
  40fdab:	xor    BYTE PTR [esi],dl
  40fdad:	xchg   edx,eax
  40fdae:	mov    ebp,0xeae27d00
  40fdb3:	fcomp  QWORD PTR [edi]
  40fdb5:	jne    0x40fdcb
  40fdb7:	adc    esp,DWORD PTR [ebp-0x3f]
  40fdba:	push   ss
  40fdbb:	add    ch,BYTE PTR [ebp-0x6f847419]
  40fdc1:	fistp  WORD PTR [edi+0x6e4d51fe]
  40fdc7:	loopne 0x40fd78
  40fdc9:	(bad)  
  40fdca:	fwait
  40fdcb:	outs   dx,BYTE PTR ds:[esi]
  40fdcc:	aad    0x75
  40fdce:	pop    edx
  40fdcf:	mov    bh,dh
  40fdd1:	scas   al,BYTE PTR es:[edi]
  40fdd2:	dec    ebp
  40fdd3:	mov    ah,BYTE PTR [ebx]
  40fdd5:	data16 sub dh,BYTE PTR [eax-0x152db848]
  40fddc:	push   edi
  40fddd:	loop   0x40fe53
  40fddf:	cs fwait
  40fde1:	dec    esi
  40fde2:	ins    DWORD PTR es:[edi],dx
  40fde3:	add    al,0x55
  40fde5:	xchg   edx,eax
  40fde6:	rol    DWORD PTR [eax],1
  40fde8:	(bad)  
  40fde9:	stos   DWORD PTR es:[edi],eax
  40fdea:	dec    eax
  40fdeb:	and    al,0x32
  40fded:	sahf   
  40fdee:	mov    esi,0x806f179
  40fdf3:	xchg   ebx,eax
  40fdf4:	cwde   
  40fdf5:	xchg   DWORD PTR [edi],esi
  40fdf7:	adc    ebx,DWORD PTR [eax-0x33]
  40fdfa:	lods   eax,DWORD PTR ds:[esi]
  40fdfb:	rcl    DWORD PTR [edi+0x4],cl
  40fdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdff:	mov    bl,0x99
  40fe01:	pusha  
  40fe02:	stos   BYTE PTR es:[edi],al
  40fe03:	out    0x15,eax
  40fe05:	xchg   edi,eax
  40fe06:	jns    0x40fdab
  40fe08:	jmp    0x40fe2f
  40fe0a:	pop    edi
  40fe0b:	jne    0x40fdc5
  40fe0d:	call   0x9f673f6a
  40fe12:	sbb    edx,DWORD PTR [ebx+0x78]
  40fe15:	lahf   
  40fe16:	fwait
  40fe17:	mov    ch,0xb7
  40fe19:	cs inc ecx
  40fe1b:	(bad)  fs:[ebx-0x50186026]
  40fe22:	push   ds
  40fe23:	repz push ebx
  40fe25:	sahf   
  40fe26:	out    0xcb,eax
  40fe28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe29:	ja     0x40fe4b
  40fe2b:	add    cl,0x2d
  40fe2e:	in     al,dx
  40fe2f:	icebp  
  40fe30:	sbb    eax,0xcaf42ab8
  40fe35:	push   ebp
  40fe36:	cdq    
  40fe37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe38:	push   esi
  40fe39:	pop    es
  40fe3a:	mov    DWORD PTR [edx],0x659a1e43
  40fe40:	ja     0x40fe97
  40fe42:	xchg   edx,eax
  40fe43:	push   0x2fa9a3b2
  40fe48:	pusha  
  40fe49:	out    0xc3,eax
  40fe4b:	cli    
  40fe4c:	sub    DWORD PTR [ebx*8-0x51dfc47d],0xffffff9e
  40fe54:	or     ah,BYTE PTR [edi]
  40fe56:	pop    ebx
  40fe57:	xor    ecx,ebx
  40fe59:	cli    
  40fe5a:	shl    BYTE PTR [edx+0x32b47f64],1
  40fe60:	(bad)  
  40fe61:	sti    
  40fe62:	cmp    BYTE PTR [esi],al
  40fe64:	div    eax
  40fe66:	stos   BYTE PTR es:[edi],al
  40fe67:	ins    BYTE PTR es:[edi],dx
  40fe68:	leave  
  40fe69:	out    0x56,al
  40fe6b:	ror    BYTE PTR [eax+0x66],0x13
  40fe6f:	jmp    0x40fedb
  40fe71:	fstp   DWORD PTR [eax]
  40fe73:	in     al,dx
  40fe74:	les    edx,FWORD PTR [ebx]
  40fe76:	mov    esi,0x1d8eaf67
  40fe7b:	push   edi
  40fe7c:	popf   
  40fe7d:	imul   DWORD PTR [ecx]
  40fe7f:	push   edi
  40fe80:	xor    BYTE PTR [eax+0x1e9a200f],dh
  40fe86:	mov    esp,0x1dd51741
  40fe8b:	ins    DWORD PTR es:[edi],dx
  40fe8c:	xchg   BYTE PTR [edi+ebp*2],cl
  40fe8f:	sub    cl,BYTE PTR [esi+0x1a]
  40fe92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe93:	in     al,dx
  40fe94:	cmp    ebp,DWORD PTR [eax]
  40fe96:	push   0x3
  40fe98:	jge    0x40fe46
  40fe9a:	dec    edx
  40fe9b:	push   ds
  40fe9c:	adc    eax,0x36f398c2
  40fea1:	sar    BYTE PTR [edi-0x7659cd30],1
  40fea7:	call   DWORD PTR [ebx+eax*1+0x36]
  40feab:	jmp    0xa22e9ddd
  40feb0:	lock shr dl,cl
  40feb3:	ins    DWORD PTR es:[edi],dx
  40feb4:	cmp    al,0x2e
  40feb6:	xchg   esp,eax
  40feb7:	fnstenv ds:0xd6e8c33c
  40febd:	xchg   dl,ah
  40febf:	iret   
  40fec0:	dec    edi
  40fec1:	cmp    BYTE PTR [edi+esi*2-0x3e],0xf
  40fec6:	xchg   esp,eax
  40fec7:	sti    
  40fec8:	test   eax,0x3fab42f3
  40fecd:	vpmadcsswd ymm4,ymm7,ymm4,YMMWORD PTR [ebx]
  40fed3:	xlat   BYTE PTR ds:[ebx]
  40fed4:	addr16 jl 0x40feff
  40fed7:	arpl   WORD PTR [bx+si+0x48ca],bx
  40fedc:	sub    ah,BYTE PTR [ecx-0x52]
  40fedf:	cmp    esi,edx
  40fee1:	sbb    BYTE PTR [eax],ah
  40fee3:	push   ds
  40fee4:	and    BYTE PTR [edx-0x78],ah
  40fee7:	sbb    ecx,DWORD PTR [esi]
  40fee9:	test   al,0xd2
  40feeb:	mov    bh,0x6d
  40feed:	pop    esi
  40feee:	mov    ebx,0x82171aed
  40fef3:	or     ebx,DWORD PTR [esi]
  40fef5:	out    dx,al
  40fef6:	clc    
  40fef7:	scas   al,BYTE PTR es:[edi]
  40fef8:	mov    eax,ds:0x894a7fc6
  40fefd:	por    mm1,mm7
  40ff00:	fs mov bh,0x4c
  40ff03:	xchg   BYTE PTR [esi-0x24],bl
  40ff06:	ja     0x40ff22
  40ff08:	arpl   WORD PTR [ecx+0x425cea91],ax
  40ff0e:	add    ebp,DWORD PTR [edx+esi*2+0x46af9a21]
  40ff15:	lea    esi,[esi+0x3bb60645]
  40ff1b:	push   es
  40ff1c:	xchg   ecx,eax
  40ff1d:	push   cs
  40ff1e:	mov    cl,0x7a
  40ff20:	mov    ?,WORD PTR [ecx-0x69]
  40ff23:	and    DWORD PTR [eax-0xa],esi
  40ff26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff27:	stos   DWORD PTR es:[edi],eax
  40ff28:	pop    es
  40ff29:	mov    ds,WORD PTR [ebx-0x20]
  40ff2c:	aas    
  40ff2d:	push   ebx
  40ff2e:	in     al,0xbd
  40ff30:	pop    ecx
  40ff31:	int3   
  40ff32:	xlat   BYTE PTR ds:[ebx]
  40ff33:	or     al,0xa3
  40ff35:	(bad)  
  40ff36:	cmc    
  40ff37:	popa   
  40ff38:	bound  ebx,QWORD PTR [eax+0x36a90da7]
  40ff3e:	xchg   edx,eax
  40ff3f:	int3   
  40ff40:	pop    esi
  40ff41:	mov    eax,ds
  40ff43:	add    eax,0x7498242b
  40ff48:	dec    esi
  40ff49:	jmp    0x70b4:0xf0450ca1
  40ff50:	xchg   ecx,eax
  40ff51:	fucomi st,st(6)
  40ff53:	ret    0xfade
  40ff56:	cld    
  40ff57:	bound  ecx,QWORD PTR ss:[esi]
  40ff5a:	jg     0x40ff92
  40ff5c:	xchg   edx,eax
  40ff5d:	aas    
  40ff5e:	hlt    
  40ff5f:	outs   dx,BYTE PTR ds:[esi]
  40ff60:	int    0x62
  40ff62:	mul    DWORD PTR [edx+eiz*4]
  40ff65:	jnp    0x40ff86
  40ff67:	cmp    DWORD PTR [ebp-0x1ab84570],ebx
  40ff6d:	repnz clc 
  40ff6f:	pusha  
  40ff70:	sub    DWORD PTR [ebx+0x3b],ebx
  40ff73:	jmp    0x2a31:0x772b887
  40ff7a:	pop    ecx
  40ff7b:	std    
  40ff7c:	xor    al,0xb7
  40ff7e:	xor    al,BYTE PTR [ecx]
  40ff80:	mov    ah,0x3e
  40ff82:	push   edx
  40ff83:	xor    cl,BYTE PTR [edx+0x48]
  40ff86:	pop    ebx
  40ff87:	pop    ebx
  40ff88:	retf   
  40ff89:	sub    al,0x1
  40ff8b:	clc    
  40ff8c:	(bad)  
  40ff8d:	cs (bad) 
  40ff8f:	push   eax
  40ff90:	imul   ebx,DWORD PTR [ecx],0xccc07010
  40ff96:	jmp    0xe1a9a2b
  40ff9b:	movhps QWORD PTR [ebx-0x6],xmm4
  40ff9f:	es add eax,0xbd489add
  40ffa5:	sti    
  40ffa6:	dec    esp
  40ffa7:	out    0xd9,al
  40ffa9:	xchg   esp,eax
  40ffaa:	mov    esp,0xb659e27a
  40ffaf:	adc    al,0xa3
  40ffb1:	aam    0x96
  40ffb3:	mov    dl,0xc
  40ffb5:	sub    esp,DWORD PTR [edi]
  40ffb7:	fcomip st,st(5)
  40ffb9:	retf   0xaf4
  40ffbc:	adc    dh,BYTE PTR [ecx-0x33]
  40ffbf:	push   edi
  40ffc0:	scas   eax,DWORD PTR es:[edi]
  40ffc1:	aaa    
  40ffc2:	aad    0xa8
  40ffc4:	adc    eax,0x1b11fa4d
  40ffc9:	clc    
  40ffca:	lods   al,BYTE PTR ds:[esi]
  40ffcb:	pop    edx
  40ffcc:	or     BYTE PTR [esi],dh
  40ffce:	dec    edx
  40ffcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd0:	cdq    
  40ffd1:	cli    
  40ffd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd3:	js     0x40ffbc
  40ffd5:	dec    esi
  40ffd6:	pop    esi
  40ffd7:	mov    esp,edx
  40ffd9:	push   ebx
  40ffda:	mov    bl,0x35
  40ffdc:	xor    eax,0x66ea986
  40ffe1:	sub    eax,0x5a706692
  40ffe6:	ss sbb al,0x2d
  40ffe9:	ss cmc 
  40ffeb:	mov    ecx,0x9faa7593
  40fff0:	jbe    0x40ffa0
  40fff2:	or     esi,ecx
  40fff4:	inc    ecx
  40fff5:	ins    DWORD PTR es:[edi],dx
  40fff6:	dec    ebx
  40fff7:	sub    eax,0x200b603e
  40fffc:	xor    esp,edi
  40fffe:	mov    cl,dl
  410000:	pop    ebp
  410001:	sub    al,BYTE PTR [ebx+0x46]
  410004:	jbe    0x41000a
  410006:	fwait
  410007:	push   edx
  410008:	mov    edi,esp
  41000a:	call   0x207079b3
  41000f:	mov    dh,0x31
  410011:	xor    bl,dl
  410013:	ret    
  410014:	jmp    0xa7d7:0x5aaf96c0
  41001b:	adc    BYTE PTR [ebx+esi*8],dh
  41001e:	jp     0x410013
  410020:	jns    0x41007c
  410022:	out    0xc1,al
  410024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410025:	popa   
  410026:	jle    0x4100a5
  410028:	imul   ebx
  41002a:	lea    eax,[edi+0x58]
  41002d:	call   ecx
  41002f:	pop    ss
  410030:	push   esp
  410031:	push   esp
  410032:	lahf   
  410033:	add    al,0x5e
  410035:	mov    al,BYTE PTR [ebx+0x1a]
  410038:	add    al,0x30
  41003a:	scas   eax,DWORD PTR es:[edi]
  41003b:	aam    0x15
  41003d:	sti    
  41003e:	xchg   ebp,eax
  41003f:	push   ss
  410040:	pop    ss
  410041:	ds (bad) 
  410043:	nop
  410044:	aad    0x4f
  410046:	push   edx
  410047:	retf   
  410048:	dec    eax
  410049:	scas   al,BYTE PTR es:[edi]
  41004a:	sti    
  41004b:	mov    BYTE PTR [ecx+0x1d],bl
  41004e:	pop    ss
  41004f:	push   0x30
  410051:	jo     0x410005
  410053:	and    BYTE PTR [edi],ch
  410055:	and    cl,BYTE PTR [esi+0x76caebb6]
  41005b:	cli    
  41005c:	mov    eax,ds:0x320879ea
  410061:	in     eax,0x8c
  410063:	push   esi
  410064:	and    al,0xdb
  410066:	jle    0x41009c
  410068:	leave  
  410069:	mov    esp,0xe90fc9f
  41006e:	mov    esp,0xf0973701
  410073:	lock pop edx
  410075:	sub    BYTE PTR [edi+ecx*8-0x40475072],0x4c
  41007d:	pop    ss
  41007e:	dec    esi
  41007f:	and    al,0xbf
  410081:	ins    BYTE PTR es:[edi],dx
  410082:	cld    
  410083:	outs   dx,BYTE PTR ds:[esi]
  410084:	add    cl,BYTE PTR [ebp-0x392b9d01]
  41008a:	mov    eax,ds:0x436c8080
  41008f:	and    cl,ah
  410091:	test   eax,0xbf5c7dde
  410096:	jae    0x410100
  410098:	jmp    0x4b24a3f4
  41009d:	das    
  41009e:	cwde   
  41009f:	sub    al,0x79
  4100a1:	rcl    BYTE PTR [eax+ebp*4],1
  4100a4:	xchg   edi,eax
  4100a5:	sti    
  4100a6:	cmp    eax,0xa299f882
  4100ab:	xor    eax,0xb1347f1e
  4100b0:	imul   esi,DWORD PTR [esi],0x60
  4100b3:	adc    edx,DWORD PTR [esi]
  4100b5:	add    bl,dh
  4100b7:	adc    BYTE PTR [edi+0x3a],ah
  4100ba:	mov    dh,BYTE PTR [ecx]
  4100bc:	pusha  
  4100bd:	mov    ch,BYTE PTR [ebp-0x3dbf2f85]
  4100c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c4:	inc    edi
  4100c5:	lods   al,BYTE PTR ds:[esi]
  4100c6:	lahf   
  4100c7:	idiv   BYTE PTR [eax-0x217f3285]
  4100cd:	cli    
  4100ce:	mov    ebx,0x4e602666
  4100d3:	jbe    0x4100ee
  4100d5:	jmp    DWORD PTR [ecx+0x13]
  4100d8:	popf   
  4100d9:	sahf   
  4100da:	add    ecx,DWORD PTR [ebp-0x12]
  4100dd:	mov    eax,DWORD PTR [esi]
  4100df:	shl    BYTE PTR [edx+0x7b0872d3],0x31
  4100e6:	jno    0x41013b
  4100e8:	push   ds
  4100e9:	out    0x83,eax
  4100eb:	loopne 0x410075
  4100ed:	pop    ds
  4100ee:	mov    ds:0xbcd6ef40,eax
  4100f3:	mov    ah,0xd4
  4100f5:	loop   0x410150
  4100f7:	shr    DWORD PTR [eax],1
  4100f9:	adc    al,0xb9
  4100fb:	js     0x41016c
  4100fd:	push   esp
  4100fe:	and    DWORD PTR [ebx-0x345aa5f6],ecx
  410104:	mov    esi,0x5912927e
  410109:	outs   dx,DWORD PTR ds:[esi]
  41010a:	mov    ebx,0xc61f5126
  41010f:	fcomp  QWORD PTR [esi]
  410111:	cs jmp 0x41010a
  410114:	push   0x14c7a90c
  410119:	ja     0x4100a6
  41011b:	cmp    al,0x0
  41011d:	pop    edi
  41011e:	popf   
  41011f:	add    al,0xc7
  410121:	adc    DWORD PTR [ebp-0x119bf40],edi
  410127:	jecxz  0x410164
  410129:	push   edi
  41012a:	(bad)  
  41012b:	mov    esp,0xccab0c5a
  410130:	jb     0x410143
  410132:	or     DWORD PTR [edx+0x773d4147],edi
  410138:	shl    DWORD PTR [ecx+edi*2-0x6f],0x2b
  41013d:	outs   dx,BYTE PTR ds:[esi]
  41013e:	lahf   
  41013f:	inc    edi
  410140:	xchg   ebp,eax
  410141:	ss cmp eax,0x24738844
  410147:	or     BYTE PTR [ebx-0x71f12ab7],ch
  41014d:	sub    eax,0xfe67c80d
  410152:	les    eax,FWORD PTR [ecx-0x555ae71c]
  410158:	and    DWORD PTR [edi+0x14],edx
  41015b:	add    dl,BYTE PTR [edx-0x1f]
  41015e:	ds lock push 0x56
  410162:	and    eax,0xb3c2e82e
  410167:	iret   
  410168:	push   eax
  410169:	mov    eax,ds:0x136b3a90
  41016e:	xchg   DWORD PTR ds:0x97ac3b7b,esi
  410174:	pop    esp
  410175:	sbb    DWORD PTR [edx],ebp
  410177:	add    BYTE PTR [esi-0x27],cl
  41017a:	ds adc al,0x29
  41017d:	add    edi,edx
  41017f:	ss jg  0x4101cd
  410182:	inc    esp
  410183:	xor    BYTE PTR [eax],dh
  410185:	lock inc esi
  410187:	(bad)  
  410189:	xchg   BYTE PTR [edx-0x42f8cdb2],bl
  41018f:	mov    eax,ds:0xee2d31b
  410194:	adc    bl,BYTE PTR [eax+edi*4]
  410197:	fbld   TBYTE PTR [ecx+0x57]
  41019a:	popf   
  41019b:	stc    
  41019c:	pop    esp
  41019d:	sbb    DWORD PTR [edi-0x60078a3b],edi
  4101a3:	scas   al,BYTE PTR es:[edi]
  4101a4:	adc    al,0xcb
  4101a6:	cwde   
  4101a7:	add    BYTE PTR [ebx],dh
  4101a9:	sar    DWORD PTR [edi-0x7af8b9e2],0x39
  4101b0:	lock fisubr DWORD PTR [ebx+edx*8-0x45f6e743]
  4101b8:	sti    
  4101b9:	shr    BYTE PTR [ebp-0x2f33a39a],1
  4101bf:	pop    ebx
  4101c0:	ja     0x4101c2
  4101c2:	clc    
  4101c3:	mov    dh,0x5b
  4101c5:	or     edi,DWORD PTR [edx]
  4101c7:	pop    edx
  4101c8:	iret   
  4101c9:	out    dx,al
  4101ca:	xchg   edi,eax
  4101cb:	cmp    DWORD PTR [ebx+0x5f],0x6224c44a
  4101d2:	dec    ebx
  4101d3:	inc    ebp
  4101d4:	mov    ds:0x7ceef750,al
  4101d9:	(bad)  
  4101da:	jle    0x4101ec
  4101dc:	ret    
  4101dd:	(bad)  
  4101de:	ds sahf 
  4101e0:	pushf  
  4101e1:	push   0xbcc6b42c
  4101e6:	(bad)  
  4101e7:	and    BYTE PTR [ebx+0x59],dl
  4101ea:	push   ebp
  4101eb:	or     ch,BYTE PTR [ecx+0x415e3f2e]
  4101f1:	lahf   
  4101f2:	loope  0x41018d
  4101f4:	repz jecxz 0x41018c
  4101f7:	jecxz  0x410239
  4101f9:	ret    0x3497
  4101fc:	hlt    
  4101fd:	mov    eax,0x844d4db3
  410202:	int3   
  410203:	dec    ecx
  410204:	mov    BYTE PTR [edx-0x60b8d636],0xfb
  41020b:	and    esp,DWORD PTR [ebp-0x1623054d]
  410211:	jg     0x41019f
  410213:	pop    esi
  410214:	loope  0x4101d5
  410216:	je     0x4101c3
  410218:	les    ebx,FWORD PTR [ecx]
  41021a:	bound  edx,QWORD PTR [edi+eiz*2+0x64acbb09]
  410221:	(bad)  
  410222:	push   esp
  410223:	pop    edi
  410224:	(bad)  
  410225:	push   ds
  410226:	test   eax,0x230765c
  41022b:	jle    0x41027a
  41022d:	add    eax,DWORD PTR [ebx+0x59]
  410230:	pop    es
  410231:	sti    
  410232:	pop    edi
  410233:	out    0x6,eax
  410235:	inc    ebx
  410236:	lea    ebp,[ebx+0x426c16f7]
  41023c:	mov    ebp,0xf2a4e52c
  410241:	ret    
  410242:	lahf   
  410243:	pushf  
  410244:	ret    
  410245:	push   ebx
  410246:	sbb    edi,edx
  410248:	adc    eax,0x462a7cd0
  41024d:	pop    ss
  41024e:	aaa    
  41024f:	ja     0x410215
  410251:	lock jbe 0x41027b
  410254:	cmp    DWORD PTR [esi],ebp
  410256:	shl    BYTE PTR [ecx+0x771edef0],1
  41025c:	xchg   bx,ax
  41025e:	adc    al,0x23
  410260:	jl     0x410241
  410262:	ds shr dh,cl
  410265:	mov    ds:0x970425ba,al
  41026a:	mov    edx,DWORD PTR [edx+ebx*1-0x1e304e4f]
  410271:	lods   eax,DWORD PTR ds:[esi]
  410272:	lea    edx,[ebp+0x577c3187]
  410278:	arpl   WORD PTR [ecx+0x73b5f6d5],dx
  41027e:	stos   BYTE PTR es:[edi],al
  41027f:	fwait
  410280:	adc    dl,BYTE PTR [esi+0x2a4581d]
  410286:	cmp    dl,BYTE PTR [ebx+0x2]
  410289:	jle    0x41028f
  41028b:	jge    0x41020f
  41028d:	sbb    BYTE PTR [edx-0x3b],dl
  410290:	mov    eax,0xd66ecf56
  410295:	rcl    dl,cl
  410297:	imul   ecx,ebp,0x26dd4b4f
  41029d:	or     al,0x87
  41029f:	jnp    0x41031c
  4102a1:	(bad)  
  4102a2:	(bad)  
  4102a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a4:	outs   dx,DWORD PTR ds:[esi]
  4102a5:	jg     0x410319
  4102a7:	sub    al,0xe1
  4102a9:	lds    edi,FWORD PTR [edi+0x6b046cc]
  4102af:	repz push eax
  4102b1:	mov    dh,0x52
  4102b3:	sbb    ecx,ecx
  4102b5:	test   BYTE PTR [ebp-0x678aac44],dh
  4102bb:	sbb    DWORD PTR [esi],edx
  4102bd:	cmc    
  4102be:	xchg   esp,eax
  4102bf:	mov    ecx,0x6fd61b42
  4102c4:	mov    edi,0x31a3621a
  4102c9:	xchg   edi,eax
  4102ca:	push   0x3bd737eb
  4102cf:	loopne 0x410307
  4102d1:	cmp    BYTE PTR [ebx],0x51
  4102d4:	rol    ch,cl
  4102d6:	int    0x3b
  4102d8:	xchg   ebx,eax
  4102d9:	xchg   edx,eax
  4102da:	popf   
  4102db:	test   al,0x1f
  4102dd:	jecxz  0x410312
  4102df:	and    esp,DWORD PTR [edx-0x40]
  4102e2:	ds ja  0x410353
  4102e5:	sub    edi,DWORD PTR [ebx-0x7e4bbcab]
  4102eb:	test   DWORD PTR [ebx],ebp
  4102ed:	stos   BYTE PTR es:[edi],al
  4102ee:	xchg   ebp,eax
  4102ef:	xlat   BYTE PTR ds:[ebx]
  4102f0:	adc    DWORD PTR [ebx+0x7a6e9029],edx
  4102f6:	mov    ds,WORD PTR [ebx]
  4102f8:	sbb    edi,edi
  4102fa:	mov    al,0xcf
  4102fc:	fwait
  4102fd:	nop
  4102fe:	shr    DWORD PTR [edx-0x7de0c97a],1
  410304:	adc    BYTE PTR [ebx],dl
  410306:	fwait
  410307:	sbb    ecx,DWORD PTR [edx-0x44]
  41030a:	sbb    ch,BYTE PTR [eax+0x37f73f40]
  410310:	mov    esi,0x804c32bb
  410315:	dec    ebp
  410316:	or     DWORD PTR [ecx],ecx
  410318:	inc    edi
  410319:	mov    eax,0x146791c5
  41031e:	repnz mov bh,0x68
  410321:	hlt    
  410322:	sbb    al,0x2d
  410324:	cmp    al,0x2a
  410326:	cli    
  410327:	adc    ch,BYTE PTR [ebp+0x21]
  41032a:	sbb    eax,0x712bf62a
  41032f:	iret   
  410330:	cmp    DWORD PTR [edx+0x49],edx
  410333:	add    dl,BYTE PTR [edx]
  410335:	lahf   
  410336:	inc    ebx
  410337:	psubw  mm2,mm6
  41033a:	out    dx,eax
  41033b:	daa    
  41033c:	or     BYTE PTR [ebx-0x43a2334a],bl
  410342:	rol    BYTE PTR [ecx+0x11d87804],cl
  410348:	cmp    al,0x4
  41034a:	cld    
  41034b:	dec    ebx
  41034c:	push   0x1a
  41034e:	dec    edx
  41034f:	imul   ebp,esp,0xffffffbe
  410352:	sbb    ah,BYTE PTR [esi]
  410354:	ja     0x410326
  410356:	retf   0x7d3f
  410359:	mov    eax,fs
  41035b:	and    DWORD PTR [ecx+0x9],esi
  41035e:	jp     0x410365
  410360:	jmp    0xf139ff9b
  410365:	and    DWORD PTR ss:[edx],0x28
  410369:	mov    esp,ebx
  41036b:	pop    eax
  41036c:	pop    ebx
  41036d:	sbb    ah,bl
  41036f:	adc    di,WORD PTR [ecx+edx*2-0x6d62a0de]
  410377:	pop    es
  410378:	rol    dh,cl
  41037a:	add    DWORD PTR [ebx-0x4d],ebp
  41037d:	mov    BYTE PTR cs:[ebx+edx*8],dh
  410381:	xchg   ebp,eax
  410382:	call   0xfa96585e
  410387:	push   eax
  410388:	jg     0x410320
  41038a:	cwde   
  41038b:	sub    BYTE PTR [edx],ah
  41038d:	inc    esi
  41038e:	mov    dh,0x94
  410390:	adc    al,0xed
  410392:	lahf   
  410393:	cmp    ebp,ecx
  410395:	add    cl,dh
  410397:	add    ch,cl
  410399:	inc    edi
  41039a:	aam    0xde
  41039c:	arpl   WORD PTR [ebx+0x265f1a8],bx
  4103a2:	sub    ecx,DWORD PTR [ebx+eiz*1]
  4103a5:	sbb    al,dl
  4103a7:	cmp    eax,0x8afacedb
  4103ac:	je     0x4103e0
  4103ae:	pop    es
  4103af:	test   al,0x4d
  4103b1:	or     BYTE PTR [edx-0x55baf2dd],dl
  4103b7:	add    al,BYTE PTR ds:0xbea59ce2
  4103bd:	pop    ebx
  4103be:	pop    eax
  4103bf:	dec    esi
  4103c0:	mov    bh,0xcf
  4103c2:	ror    esi,1
  4103c4:	stos   BYTE PTR es:[edi],al
  4103c5:	add    ch,BYTE PTR [ecx-0x7a]
  4103c8:	inc    ebx
  4103c9:	mov    esi,0x4d1c7e05
  4103ce:	lods   eax,DWORD PTR ds:[esi]
  4103cf:	xor    esi,ebx
  4103d1:	int    0xc5
  4103d3:	or     eax,edx
  4103d5:	mov    al,BYTE PTR [ebx+0x1]
  4103d8:	outs   dx,DWORD PTR ds:[esi]
  4103d9:	or     BYTE PTR [eax+0xa],bl
  4103dc:	inc    esp
  4103dd:	loope  0x410418
  4103df:	pusha  
  4103e0:	pop    edx
  4103e1:	or     eax,0x2a42049d
  4103e6:	cli    
  4103e7:	sbb    al,0xc1
  4103e9:	lods   al,BYTE PTR ds:[esi]
  4103ea:	xchg   eax,ebp
  4103ec:	mov    ebp,0x411ff42f
  4103f1:	shl    ah,1
  4103f3:	aad    0x33
  4103f5:	adc    esp,DWORD PTR [ecx+0x45dfa99d]
  4103fb:	inc    ebx
  4103fc:	dec    esi
  4103fd:	add    edi,DWORD PTR [eax+0x31]
  410400:	(bad)  
  410401:	mov    ebx,0x3e11029f
  410406:	pop    ss
  410407:	mov    al,ds:0xd630e316
  41040c:	jnp    0x41045a
  41040e:	fisub  DWORD PTR [edx]
  410410:	adc    DWORD PTR [esi-0x61da1692],ebp
  410416:	out    dx,al
  410417:	inc    esi
  410418:	jge    0x410480
  41041a:	adc    al,0x19
  41041c:	in     al,dx
  41041d:	imul   edi,DWORD PTR [ebx+0x6aa7d250],0x3fc3375a
  410427:	arpl   WORD PTR [eax+edi*2-0x75],cx
  41042b:	loopne 0x410474
  41042d:	icebp  
  41042e:	stc    
  41042f:	sub    edi,DWORD PTR [ecx]
  410431:	sbb    BYTE PTR [ebp+ebx*4+0x5d],dl
  410435:	ds leave 
  410437:	lods   al,BYTE PTR ds:[esi]
  410438:	mov    bl,0xb9
  41043a:	push   0xa3985ed8
  41043f:	and    ebp,DWORD PTR [edx+edi*8]
  410442:	pusha  
  410443:	sub    eax,ebp
  410445:	inc    ecx
  410446:	inc    edi
  410447:	and    DWORD PTR [esi],ebx
  410449:	stos   DWORD PTR es:[edi],eax
  41044a:	xor    bl,BYTE PTR [esi]
  41044c:	adc    al,0x82
  41044e:	retf   0xa8b2
  410451:	int3   
  410452:	cmp    edi,DWORD PTR [eax-0x44]
  410455:	push   0xb4a92aaa
  41045a:	leave  
  41045b:	dec    ecx
  41045c:	test   esp,ebx
  41045e:	outs   dx,DWORD PTR ds:[esi]
  41045f:	sub    eax,0xc07ee8a6
  410464:	inc    esi
  410465:	add    dl,ch
  410467:	jecxz  0x410400
  410469:	pop    ebp
  41046a:	lods   al,BYTE PTR ds:[esi]
  41046b:	mov    ch,0x6
  41046d:	scas   eax,DWORD PTR es:[edi]
  41046e:	mov    esi,0x85768070
  410473:	pushf  
  410474:	dec    eax
  410475:	cwde   
  410476:	mov    cl,0x7a
  410478:	xchg   ebx,eax
  410479:	jbe    0x4104e5
  41047b:	jecxz  0x410473
  41047d:	in     eax,0x50
  41047f:	push   0x39
  410481:	adc    cl,ah
  410483:	push   edi
  410484:	or     DWORD PTR [edx+0x3a7d41c6],esp
  41048a:	add    BYTE PTR [edx-0x7a],0xe3
  41048e:	ror    BYTE PTR [ecx+0x6b],cl
  410491:	and    eax,edx
  410493:	pop    edi
  410494:	jle    0x410503
  410496:	in     eax,0x3f
  410498:	mov    al,ds:0x6cd4200c
  41049d:	pop    edx
  41049e:	mov    ebx,0x5c9b6e90
  4104a3:	and    al,0x57
  4104a5:	adc    ebp,DWORD PTR [ecx+ebp*1-0x5e]
  4104a9:	dec    esp
  4104aa:	mov    dl,0x18
  4104ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ad:	push   0x7
  4104af:	cmp    eax,0x89409ae6
  4104b4:	inc    esp
  4104b5:	dec    edi
  4104b6:	dec    ebp
  4104b7:	adc    eax,0x76fab7ed
  4104bc:	jns    0x4104ed
  4104be:	les    ecx,FWORD PTR [ebx+0x37]
  4104c1:	adc    bl,BYTE PTR [eax-0x6d1579bf]
  4104c7:	jecxz  0x41046a
  4104c9:	xchg   BYTE PTR [edx-0x173d69cc],bh
  4104cf:	je     0x4104f8
  4104d1:	(bad)  
  4104d2:	sub    al,0x4b
  4104d4:	enter  0x8c9d,0x2a
  4104d8:	ja     0x41047e
  4104da:	jle    0x410518
  4104dc:	outs   dx,DWORD PTR ds:[esi]
  4104dd:	rcl    DWORD PTR [edi+eiz*4-0x2feb1d86],1
  4104e4:	mov    DWORD PTR [ebx],ebp
  4104e6:	repz inc esp
  4104e8:	adc    DWORD PTR [ecx+0x590d9107],ebp
  4104ee:	mov    dl,0xcb
  4104f0:	mov    bl,0x8d
  4104f2:	mov    ah,0x3e
  4104f4:	cli    
  4104f5:	mov    WORD PTR [edi+0x69b355f0],ds
  4104fb:	ror    BYTE PTR [edi+0x4a],0x1b
  4104ff:	xor    al,0x2c
  410501:	cs push 0x9afeb9cb
  410507:	jo     0x410496
  410509:	in     al,0x6d
  41050b:	cmp    esp,DWORD PTR [esp+ecx*1-0x23455b47]
  410512:	mov    edx,0xc60483a9
  410517:	mov    ch,0x64
  410519:	aas    
  41051a:	imul   ebx,DWORD PTR [ebx],0x7be20edd
  410520:	out    0x38,al
  410522:	cld    
  410523:	xor    bl,bl
  410525:	inc    ebx
  410526:	lods   eax,DWORD PTR ds:[esi]
  410527:	lds    ebx,FWORD PTR [edx-0x2e]
  41052a:	add    eax,0x32fe5fe3
  41052f:	pusha  
  410530:	pop    ebp
  410531:	push   edx
  410532:	fiadd  DWORD PTR [ebp-0x32]
  410535:	and    DWORD PTR [ebx+esi*1],0xffffffd3
  410539:	mov    edx,0x6653d08e
  41053e:	imul   ebp,DWORD PTR [esi],0xa7f24889
  410544:	fiadd  DWORD PTR [eax]
  410546:	pop    esp
  410547:	das    
  410548:	add    DWORD PTR [esi-0x2f],esp
  41054b:	sub    dl,ch
  41054d:	gs ds pop edx
  410550:	mov    DWORD PTR [edx-0x43],esi
  410553:	sbb    ch,bh
  410555:	jmp    0xf867:0x8ef827e9
  41055c:	add    al,0x62
  41055e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410560:	shr    DWORD PTR [edx],1
  410562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410563:	inc    edi
  410564:	pusha  
  410565:	retf   
  410566:	xor    BYTE PTR [edx+0x1e3fadb9],ah
  41056c:	stos   BYTE PTR es:[edi],al
  41056d:	imul   DWORD PTR [ecx-0x11]
  410570:	mov    ebp,0x6ae387ca
  410575:	xor    eax,0xc0c05f1d
  41057a:	rol    al,0xc0
  41057d:	rol    al,0xc0
  410580:	rol    al,0xc0
  410583:	rol    al,0xc0
  410586:	rol    al,0xc0
  410589:	rol    al,0xc0
  41058c:	rol    al,0xc0
  41058f:	rol    al,0xc0
  410592:	rol    al,0xc0
  410595:	rol    al,0xc0
  410598:	rol    al,0xc0
  41059b:	rol    al,0xc0
  41059e:	rol    al,0xc0
  4105a1:	rol    al,0xc0
  4105a4:	rol    al,0xc0
  4105a7:	rol    al,0xc0
  4105aa:	rol    al,0xc0
  4105ad:	rol    al,0xc0
  4105b0:	rol    al,0xc0
  4105b3:	rol    al,0xc0
  4105b6:	rol    al,0xc0
  4105b9:	rol    al,0xc0
  4105bc:	rol    al,0xc0
  4105bf:	rol    al,0xc0
  4105c2:	rol    al,0xc0
  4105c5:	rol    al,0xc0
  4105c8:	xchg   ebp,eax
  4105c9:	ss ret 
  4105cb:	sbb    eax,0x94f131eb
  4105d0:	and    bl,BYTE PTR [ebp+0x2a2c28a1]
  4105d6:	xchg   edx,eax
  4105d7:	fstp   QWORD PTR [ebx+0x36]
  4105da:	(bad)  [esi]
  4105dc:	jbe    0x410576
  4105de:	inc    esi
  4105df:	clc    
  4105e0:	sub    eax,0x78d3c4b1
  4105e5:	xchg   edx,eax
  4105e6:	aam    0x7d
  4105e8:	adc    eax,DWORD PTR [ebp+edx*1+0x3e4a594a]
  4105ef:	fbstp  TBYTE PTR [edx-0x54]
  4105f2:	imul   eax,DWORD PTR [edi-0x5b],0x2e2cf70e
  4105f9:	jb     0x410645
  4105fb:	sub    DWORD PTR [ebx-0x28],0x19
  4105ff:	jmp    0x410596
  410601:	mov    bh,0x83
  410603:	add    DWORD PTR [edi+ebx*2+0x56],0x75
  410608:	xor    BYTE PTR [ebx+edx*1-0x24a491fc],bl
  41060f:	sbb    esi,DWORD PTR [ecx-0x32]
  410612:	shl    eax,cl
  410614:	jge    0x410646
  410616:	arpl   WORD PTR [ecx+edi*4],sp
  410619:	and    eax,0x1a70c3e1
  41061e:	dec    edx
  41061f:	in     al,0x5b
  410621:	ficomp DWORD PTR ss:0x1c5783ae
  410628:	and    eax,esp
  41062a:	sub    eax,DWORD PTR [edx-0x57]
  41062d:	jnp    0x4106a8
  41062f:	add    bl,BYTE PTR [ecx-0x50]
  410632:	sti    
  410633:	pop    ebx
  410634:	cmp    eax,0x7536955c
  410639:	xchg   ebp,eax
  41063a:	xchg   ebp,eax
  41063b:	ins    BYTE PTR es:[edi],dx
  41063c:	add    DWORD PTR [ebp+0x13],ebx
  41063f:	jmp    0x2992:0xe7180831
  410646:	aaa    
  410647:	push   esi
  410648:	mov    DWORD PTR [edi+0xd],ecx
  41064b:	cmc    
  41064c:	inc    edx
  41064d:	add    al,0x31
  41064f:	jno    0x4105d2
  410651:	mov    esi,0xbcc990
  410656:	cmp    DWORD PTR [ebx-0x6d],ebp
  410659:	mov    eax,ss:0xb44af15c
  41065f:	pop    edi
  410660:	clc    
  410661:	mov    eax,0x521ded4e
  410666:	cmp    ebp,edx
  410668:	cmp    eax,0x8fe0c226
  41066d:	outs   dx,BYTE PTR ds:[esi]
  41066e:	shl    eax,cl
  410670:	or     al,0xc7
  410672:	mov    edx,0xe9e86868
  410677:	adc    BYTE PTR ds:0x2090739,dl
  41067d:	shr    BYTE PTR [eax-0x391d1756],0x29
  410684:	ds mov cl,dl
  410687:	push   ebx
  410688:	cdq    
  410689:	xor    dh,al
  41068b:	jns    0x4106e7
  41068d:	nop
  41068e:	cmp    BYTE PTR [esi+0x721972b],bl
  410694:	addr16 pop ebp
  410696:	sbb    DWORD PTR [ecx+0x1b23417],ecx
  41069c:	xor    dl,BYTE PTR [edx]
  41069e:	and    esp,DWORD PTR [ebx-0x75]
  4106a1:	pop    esi
  4106a2:	and    BYTE PTR [ebx+0x6469083e],cl
  4106a8:	les    ecx,FWORD PTR [ebp+0x7de17cae]
  4106ae:	mov    ds:0x90ddb908,al
  4106b3:	add    cl,bl
  4106b5:	bound  ebp,QWORD PTR [edi]
  4106b7:	fidiv  WORD PTR [edx]
  4106b9:	or     DWORD PTR [esi+0x48],ecx
  4106bc:	les    ebx,FWORD PTR [edi]
  4106be:	stos   DWORD PTR es:[edi],eax
  4106bf:	jmp    0xf0d5:0xf82fc224
  4106c6:	lods   eax,DWORD PTR ds:[esi]
  4106c7:	and    eax,DWORD PTR [ecx+ebx*8]
  4106ca:	sub    DWORD PTR fs:[edi-0x675a711f],edx
  4106d1:	and    DWORD PTR [esi-0xcb4eb7b],ebp
  4106d7:	adc    BYTE PTR ds:0x2b58ac9d,cl
  4106dd:	inc    esi
  4106de:	outs   dx,DWORD PTR ds:[esi]
  4106df:	dec    ebp
  4106e0:	(bad)  
  4106e1:	sbb    al,0x8b
  4106e3:	dec    ecx
  4106e4:	pop    ss
  4106e5:	in     eax,0x9c
  4106e7:	pop    edx
  4106e8:	popa   
  4106e9:	and    al,0x9f
  4106eb:	xchg   ebx,eax
  4106ec:	mov    edx,0xacacc37d
  4106f1:	xchg   DWORD PTR [edx-0x62],eax
  4106f4:	inc    ebp
  4106f5:	dec    eax
  4106f6:	stc    
  4106f7:	xor    DWORD PTR [eax-0x395270d0],edx
  4106fd:	arpl   WORD PTR [eax-0x21d03dd2],si
  410703:	sub    BYTE PTR [ebx-0x35],ch
  410706:	xchg   edx,eax
  410707:	push   cs
  410708:	daa    
  410709:	sbb    BYTE PTR [ebx],dh
  41070b:	dec    ebx
  41070c:	fdivrp st(3),st
  41070e:	aaa    
  41070f:	ins    BYTE PTR es:[edi],dx
  410710:	std    
  410711:	jge    0x4106ac
  410713:	or     edi,DWORD PTR ds:0xa1d8c339
  410719:	sbb    eax,eax
  41071b:	fwait
  41071c:	scas   eax,DWORD PTR es:[edi]
  41071d:	aaa    
  41071e:	scas   al,BYTE PTR es:[edi]
  41071f:	ret    
  410720:	lahf   
  410721:	adc    BYTE PTR [esi],0x96
  410724:	sbb    ah,BYTE PTR [eax]
  410726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410727:	mov    al,0x30
  410729:	test   al,0x9a
  41072b:	dec    esi
  41072c:	xor    dh,BYTE PTR [ebx-0x284ad75]
  410732:	mov    dh,0x81
  410734:	cli    
  410735:	jne    0x41072c
  410737:	adc    BYTE PTR [eax+edi*4-0x61],ah
  41073b:	adc    eax,0x6f3772d6
  410740:	sbb    dl,bl
  410742:	jo     0x4107af
  410744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410745:	mov    esp,0xe1e2da71
  41074a:	and    al,0xf7
  41074d:	xchg   ecx,eax
  41074e:	repz push ebx
  410750:	outs   dx,BYTE PTR ds:[esi]
  410751:	push   esp
  410752:	ret    
  410753:	lods   al,BYTE PTR cs:[esi]
  410755:	pop    eax
  410756:	mov    cl,0x52
  410758:	pop    ecx
  410759:	mov    ebp,0xe2164dcf
  41075e:	inc    esi
  41075f:	leave  
  410760:	push   ebp
  410761:	lds    ebp,FWORD PTR [esi]
  410763:	nop
  410764:	inc    ebx
  410765:	mov    edi,0xd7ee36cb
  41076a:	jbe    0x4107dd
  41076c:	inc    eax
  41076d:	and    bh,ah
  41076f:	es (bad) 
  410772:	pop    ebx
  410773:	mov    BYTE PTR [ebp-0x51c3b76],ch
  410779:	sbb    BYTE PTR [ebp-0x4f],0x10
  41077d:	cli    
  41077e:	xchg   ecx,eax
  41077f:	or     BYTE PTR [edi-0x2],bh
  410782:	pop    edi
  410783:	cmp    eax,0xe4035225
  410788:	shr    DWORD PTR [edi+0x5],cl
  41078b:	cs inc eax
  41078d:	push   eax
  41078e:	ja     0x41080b
  410790:	fsubr  DWORD PTR [eax+0x57]
  410793:	call   0x76d8247
  410798:	jp     0x410817
  41079a:	test   eax,0x3328c28e
  41079f:	(bad)  
  4107a0:	jmp    0x9205:0x9f0e923a
  4107a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a8:	inc    edx
  4107a9:	iret   
  4107aa:	ret    
  4107ab:	es into 
  4107ad:	jb     0x410760
  4107af:	or     al,0x1e
  4107b1:	xchg   edx,eax
  4107b2:	add    DWORD PTR [ebx+0x59],0x5d503a7a
  4107b9:	jp     0x4107c1
  4107bb:	cli    
  4107bc:	cwde   
  4107bd:	call   0xb311:0x2c4fea1c
  4107c4:	mov    es:0x71af6915,al
  4107ca:	outs   dx,DWORD PTR ds:[esi]
  4107cb:	add    BYTE PTR [esi-0x7d],ah
  4107ce:	inc    ebp
  4107cf:	mov    dh,0x72
  4107d1:	aaa    
  4107d2:	imul   ebx,DWORD PTR [edi],0xd9b2a2fd
  4107d8:	pop    ecx
  4107d9:	pop    ebp
  4107da:	add    cl,0x33
  4107dd:	adc    dh,BYTE PTR [ecx-0x3b42fe69]
  4107e3:	or     bl,BYTE PTR [esi+0x2a6b405d]
  4107e9:	andps  xmm4,XMMWORD PTR [eax+0x4d]
  4107ed:	mov    edi,0x4743db99
  4107f2:	fstp   DWORD PTR [eax+0x13]
  4107f5:	jg     0x410815
  4107f7:	jg     0x4107e4
  4107f9:	add    bh,BYTE PTR ds:0xcb1202a8
  4107ff:	pop    es
  410800:	scas   eax,DWORD PTR es:[edi]
  410801:	xchg   ecx,eax
  410802:	cmp    ch,cl
  410804:	imul   edx,DWORD PTR [ebp-0x50],0xffffff92
  410808:	repz mov bh,0xae
  41080b:	sub    al,0x42
  41080d:	std    
  41080e:	sti    
  41080f:	dec    ebx
  410810:	sbb    DWORD PTR [esi+0xc297c28],0x35620220
  41081a:	xchg   ecx,eax
  41081b:	pop    ebx
  41081c:	mov    bh,0xbe
  41081e:	jcxz   0x41085d
  410821:	in     eax,dx
  410822:	fisub  DWORD PTR [esi+edx*2+0x3a]
  410826:	jl     0x41084b
  410828:	inc    ecx
  410829:	aam    0xde
  41082b:	pop    edx
  41082c:	fild   WORD PTR [ebx]
  41082e:	retf   0xb8ee
  410831:	retf   0x23af
  410834:	inc    esp
  410835:	sbb    eax,0x5e04af71
  41083a:	pop    ss
  41083b:	jecxz  0x41088e
  41083d:	xor    DWORD PTR [edx*2+0x52a7922c],ebp
  410844:	ror    BYTE PTR [eax+0x6f29b326],cl
  41084a:	dec    edx
  41084b:	dec    esp
  41084c:	pusha  
  41084d:	sbb    al,0x1
  41084f:	jmp    0x410823
  410851:	out    0x4,eax
  410853:	(bad)  
  410854:	sahf   
  410855:	push   ds
  410856:	mov    edi,0x9e3cd8b5
  41085b:	jae    0x410876
  41085d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41085e:	fsubp  st(4),st
  410860:	iret   
  410861:	dec    esp
  410862:	mov    esp,0xcb85d968
  410867:	pop    ebp
  410868:	and    BYTE PTR [edx+0x2d],bl
  41086b:	arpl   WORD PTR [ebp+0x5a4f8a05],si
  410871:	xchg   dh,cl
  410873:	pop    ebx
  410874:	out    0xfb,eax
  410876:	sahf   
  410877:	mov    dl,0xce
  410879:	xchg   DWORD PTR [eax-0x3341d5d1],edx
  41087f:	cmp    edi,DWORD PTR [esi+0x5b]
  410882:	sub    al,0x22
  410884:	add    dl,BYTE PTR [edx-0x2a]
  410887:	imul   ecx,DWORD PTR [ecx+0x76],0x42149adb
  41088e:	or     cl,BYTE PTR [ebx-0x63]
  410891:	sahf   
  410892:	(bad)  
  410893:	bound  ebp,QWORD PTR [ebx]
  410895:	sbb    eax,0x3a1193c7
  41089a:	mov    bh,0x50
  41089c:	mov    esi,0xa2ebffc3
  4108a1:	imul   ebp,DWORD PTR [eax-0x43a5fbba],0x4ef3b4b9
  4108ab:	pavgw  mm0,QWORD PTR [eax+0x2d]
  4108af:	icebp  
  4108b0:	inc    ebp
  4108b1:	xor    eax,0xc65209ed
  4108b6:	lock fwait
  4108b8:	retf   
  4108b9:	cld    
  4108ba:	or     DWORD PTR [edi],ebx
  4108bc:	mov    esi,0x179bd31e
  4108c1:	adc    al,0xea
  4108c3:	test   bh,0xcd
  4108c6:	mov    bh,0x17
  4108c8:	dec    edi
  4108c9:	sub    al,0xac
  4108cb:	pop    eax
  4108cc:	xor    cl,bl
  4108ce:	add    esp,DWORD PTR [edi+0x6f012256]
  4108d4:	add    eax,0xc7af1e8
  4108d9:	outs   dx,BYTE PTR ds:[esi]
  4108da:	add    edi,DWORD PTR [eax]
  4108dc:	cmp    al,0xb7
  4108de:	sbb    al,0x42
  4108e0:	sub    eax,0xcf57db0a
  4108e5:	push   edi
  4108e6:	xchg   esi,eax
  4108e7:	mov    ecx,0x14fd6426
  4108ec:	ds ret 
  4108ee:	mov    edi,DWORD PTR [esi-0x7b48f424]
  4108f4:	imul   edx,DWORD PTR [edx],0x84aa35c3
  4108fa:	lahf   
  4108fb:	cmp    ebp,DWORD PTR [esi+0x39]
  4108fe:	ja     0x410938
  410900:	push   ebp
  410901:	push   es
  410902:	push   edx
  410903:	pop    ss
  410904:	outs   dx,DWORD PTR ds:[esi]
  410905:	push   esp
  410906:	hlt    
  410907:	fld    TBYTE PTR [eax-0x7b]
  41090a:	sar    esi,cl
  41090c:	ja     0x410937
  41090e:	xchg   ecx,eax
  41090f:	sub    eax,0xcc5a5d9a
  410914:	push   cs
  410915:	mov    bl,0x64
  410917:	addr16 jmp 0x410950
  41091a:	cmp    al,0x36
  41091c:	sub    edx,esi
  41091e:	mov    edi,DWORD PTR [edi+0x2d62a2b0]
  410924:	mov    WORD PTR [edi+0x7e],gs
  410927:	sti    
  410928:	mov    ecx,0xa9b456f2
  41092d:	les    edx,FWORD PTR es:[edi-0x67]
  410931:	sbb    eax,DWORD PTR [esp+ecx*1]
  410934:	xchg   BYTE PTR fs:[esi-0x5611fd12],bl
  41093b:	sub    BYTE PTR [eax+0x45e7ea36],0x4
  410942:	aaa    
  410943:	xchg   ecx,eax
  410944:	adc    DWORD PTR [edx+esi*8],esp
  410947:	ret    
  410948:	mov    cs,esp
  41094a:	jne    0x410937
  41094c:	mov    ebp,DWORD PTR [esi-0x36]
  41094f:	not    DWORD PTR [ebp+0x72]
  410952:	push   ss
  410953:	fidivr WORD PTR [edx+0x3ef33211]
  410959:	xchg   edx,eax
  41095a:	popf   
  41095b:	sbb    eax,0xc8768eba
  410960:	sbb    DWORD PTR [eax+0x40],esi
  410963:	dec    eax
  410964:	out    0xe1,eax
  410966:	lods   eax,DWORD PTR ds:[esi]
  410967:	outs   dx,BYTE PTR ds:[esi]
  410968:	into   
  410969:	push   cs
  41096a:	ins    BYTE PTR es:[edi],dx
  41096b:	add    BYTE PTR [eax+0x33380ad2],al
  410971:	test   BYTE PTR [esp+ebx*1+0x5d],dl
  410975:	add    ecx,esp
  410977:	sar    DWORD PTR [ecx],cl
  410979:	cdq    
  41097a:	stc    
  41097b:	push   esi
  41097c:	xlat   BYTE PTR ds:[ebx]
  41097d:	test   eax,0x9c5107fc
  410982:	bound  ebp,QWORD PTR [edx]
  410984:	add    edx,esp
  410986:	sbb    DWORD PTR [ecx-0x63],edi
  410989:	push   esp
  41098a:	pop    es
  41098b:	pop    es
  41098c:	aad    0xcc
  41098e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41098f:	or     al,0x3d
  410991:	or     DWORD PTR [edx+edx*8],0xffffff97
  410995:	or     al,0x3f
  410997:	leave  
  410998:	mov    DWORD PTR [esi+0x2924010b],eax
  41099e:	imul   edi,DWORD PTR [eax+0x6a],0x66
  4109a2:	sar    bh,0x8e
  4109a5:	xchg   edi,eax
  4109a6:	or     BYTE PTR [eax-0x36eb71d1],dh
  4109ac:	mulps  xmm4,XMMWORD PTR [edi+eax*1+0x34966764]
  4109b4:	inc    esi
  4109b5:	sub    ecx,DWORD PTR [ebx]
  4109b7:	mov    ecx,0xc737ce69
  4109bc:	jle    0x4109c0
  4109be:	sbb    ecx,DWORD PTR [esi-0xc]
  4109c1:	mov    edx,0x4e5e4707
  4109c6:	mov    dl,0xb6
  4109c8:	push   ss
  4109c9:	xchg   esi,eax
  4109ca:	sbb    al,BYTE PTR [ecx-0x5987b99b]
  4109d0:	imul   ebx,DWORD PTR [ebx+0x1e],0x71
  4109d4:	sbb    DWORD PTR [edx],eax
  4109d6:	out    0x2f,al
  4109d8:	add    BYTE PTR [edi+0x5d],al
  4109db:	sbb    dl,BYTE PTR [edx-0x11]
  4109de:	shl    BYTE PTR [ecx+0x60],cl
  4109e1:	sbb    al,0xdd
  4109e3:	push   0x7f99066a
  4109e8:	loope  0x410978
  4109ea:	push   ecx
  4109eb:	sbb    al,0x5e
  4109ed:	inc    edx
  4109ee:	xor    esp,esp
  4109f0:	es daa 
  4109f2:	iret   
  4109f3:	pop    ds
  4109f4:	inc    eax
  4109f5:	or     esi,DWORD PTR [ecx]
  4109f7:	rcr    BYTE PTR [edx],1
  4109f9:	sub    BYTE PTR [edx+0x39291176],al
  4109ff:	leave  
  410a00:	add    esi,DWORD PTR [esi]
  410a02:	and    BYTE PTR [eax+0xf],bh
  410a05:	xchg   edi,eax
  410a06:	fcmovbe st,st(4)
  410a08:	das    
  410a09:	sub    DWORD PTR [edx+0x194272e1],0x9c9662ef
  410a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a14:	and    esp,DWORD PTR [ecx]
  410a16:	push   esi
  410a17:	fst    DWORD PTR [esi+0x53]
  410a1a:	pushf  
  410a1b:	pop    ecx
  410a1c:	adc    al,0xb5
  410a1e:	mul    BYTE PTR [edx-0x68152dd2]
  410a24:	mov    ebp,0x56832256
  410a29:	repz iret 
  410a2b:	fwait
  410a2c:	pop    edi
  410a2d:	pop    ds
  410a2e:	xchg   esi,eax
  410a2f:	adc    ch,0x57
  410a32:	or     al,BYTE PTR [edx+eiz*4]
  410a35:	test   BYTE PTR [ecx-0x3a],ah
  410a38:	jno    0x410a8f
  410a3a:	aad    0x2c
  410a3c:	mov    al,ds:0x7953a8c4
  410a41:	(bad)  
  410a42:	ror    BYTE PTR [edx+edi*1+0x276fe93f],cl
  410a49:	mov    ds:0x97a051f7,al
  410a4e:	and    eax,ebx
  410a50:	out    dx,eax
  410a51:	ror    BYTE PTR [ebx],cl
  410a53:	and    ch,BYTE PTR [edx]
  410a55:	and    eax,0xab40379a
  410a5a:	mov    edx,0xbb186212
  410a5f:	sbb    dl,BYTE PTR [ebp+eiz*8-0x662c3a28]
  410a66:	ret    
  410a67:	adc    eax,0x40d8211b
  410a6c:	adc    DWORD PTR [eax],0x44d47aa9
  410a72:	push   ds
  410a73:	push   cs
  410a74:	sbb    DWORD PTR [ecx-0x6e],ecx
  410a77:	jno    0x410ab9
  410a79:	stos   BYTE PTR es:[edi],al
  410a7a:	xchg   esp,eax
  410a7b:	xchg   esp,eax
  410a7c:	and    eax,0xfa76f21a
  410a81:	fistp  WORD PTR [ebp-0x44c5d178]
  410a87:	cwde   
  410a88:	test   esi,esp
  410a8a:	xchg   ebp,eax
  410a8b:	adc    eax,0xdb600f22
  410a90:	jle    0x410a1a
  410a92:	pop    ds
  410a93:	or     ch,BYTE PTR [ebx]
  410a95:	clc    
  410a96:	mov    eax,0x13ec0d74
  410a9b:	mov    DWORD PTR [edi+0x3d4b016e],esi
  410aa1:	dec    esi
  410aa2:	cwde   
  410aa3:	call   DWORD PTR [edx]
  410aa5:	mov    gs,ebx
  410aa7:	retf   
  410aa8:	jp     0x410a58
  410aaa:	xchg   esi,eax
  410aab:	pusha  
  410aac:	(bad)  cs:[eax]
  410aaf:	movnti DWORD PTR [edi-0x22],edx
  410ab3:	sub    al,0x4
  410ab5:	jbe    0x410a65
  410ab7:	add    edi,DWORD PTR [ebx+eiz*8]
  410aba:	imul   eax,DWORD PTR [edi],0x14
  410abd:	jb     0x410ab5
  410abf:	xor    ebx,DWORD PTR [ebx-0x56]
  410ac2:	scas   eax,DWORD PTR es:[edi]
  410ac3:	and    al,0xb9
  410ac5:	add    ebx,DWORD PTR [edx]
  410ac7:	xor    al,0xc5
  410ac9:	push   edx
  410aca:	xchg   edx,eax
  410acb:	sti    
  410acc:	imul   edx,DWORD PTR [edi-0x56],0xffffffd9
  410ad0:	es inc ebx
  410ad2:	bound  esi,QWORD PTR [eax+eiz*4]
  410ad5:	inc    esp
  410ad6:	dec    esp
  410ad7:	bound  edi,QWORD PTR [edi]
  410ad9:	mov    ?,WORD PTR [ebp+ebp*4+0x332b2675]
  410ae0:	out    0x30,eax
  410ae2:	xchg   esi,eax
  410ae3:	popa   
  410ae4:	stos   DWORD PTR es:[edi],eax
  410ae5:	dec    eax
  410ae6:	xchg   edi,eax
  410ae7:	rcl    edx,1
  410ae9:	sbb    al,0xa3
  410aeb:	jo     0x410b66
  410aed:	das    
  410aee:	in     al,dx
  410aef:	pop    ebx
  410af0:	mov    edx,0x75f642bc
  410af5:	pusha  
  410af6:	xchg   esi,eax
  410af7:	or     BYTE PTR [ebx],ah
  410af9:	(bad)  
  410afa:	loop   0x410ac1
  410afc:	mov    dh,0xdd
  410afe:	xor    DWORD PTR [edx],edx
  410b00:	pop    ecx
  410b01:	pusha  
  410b02:	ret    0x79cd
  410b05:	cmp    al,0x9a
  410b07:	jno    0x410afb
  410b09:	data16 sbb al,0x66
  410b0c:	pop    ebx
  410b0d:	mov    bl,BYTE PTR [edi+0x41]
  410b10:	sbb    eax,0xdf7d0a35
  410b15:	stos   BYTE PTR es:[edi],al
  410b16:	addr16 xor eax,0xdefcd820
  410b1c:	inc    edi
  410b1d:	and    BYTE PTR [edx+0x51],dl
  410b20:	icebp  
  410b21:	scas   al,BYTE PTR es:[edi]
  410b22:	hlt    
  410b23:	scas   eax,DWORD PTR es:[edi]
  410b24:	add    ebx,DWORD PTR [ebx]
  410b26:	cdq    
  410b27:	or     DWORD PTR [ecx],0xffffff91
  410b2a:	mov    cs,WORD PTR [esi+0x76dffc75]
  410b30:	push   esi
  410b31:	aam    0x56
  410b33:	adc    BYTE PTR [edx-0x29fb65b7],ah
  410b39:	xchg   BYTE PTR [esi+0x5e],al
  410b3c:	ror    DWORD PTR [esi-0x5f],cl
  410b3f:	pop    ebp
  410b40:	push   eax
  410b41:	out    dx,al
  410b42:	movmskps edi,xmm2
  410b45:	cmp    DWORD PTR [edi],0x43
  410b48:	imul   esp,DWORD PTR [edi+edi*4+0x1603c740],0x1d
  410b50:	cmc    
  410b51:	add    BYTE PTR [ebx+0x70420f1e],0x67
  410b58:	push   ebp
  410b59:	mov    WORD PTR [ecx-0x47cdd175],ds
  410b5f:	push   ecx
  410b60:	pop    esp
  410b61:	mov    edi,0x826d3cb1
  410b66:	call   0x7f86:0xfa13f12f
  410b6d:	je     0x410b1c
  410b6f:	sub    DWORD PTR [si],esp
  410b72:	retf   
  410b73:	or     DWORD PTR [eax+0x8],0x896e2356
  410b7a:	jne    0x410be5
  410b7c:	repnz cmp bl,bl
  410b7f:	push   ebx
  410b80:	retf   
  410b81:	push   ebp
  410b82:	cld    
  410b83:	leave  
  410b84:	sub    al,0xab
  410b86:	add    eax,0xb21acdfb
  410b8b:	mov    bl,0xe7
  410b8d:	call   0xa1fa:0x510d76b2
  410b94:	adc    eax,0x3d8f535d
  410b99:	push   ebx
  410b9a:	pop    ds
  410b9b:	mov    DWORD PTR [esi],0x90cb08db
  410ba1:	out    0x25,al
  410ba3:	outs   dx,BYTE PTR ds:[esi]
  410ba4:	xlat   BYTE PTR ds:[ebx]
  410ba5:	sub    al,ch
  410ba7:	mov    ebp,0xf9e3470d
  410bac:	jae    0x410b4a
  410bae:	xor    DWORD PTR [ecx+0x3],0xda0566b0
  410bb5:	cmp    esi,edx
  410bb7:	dec    BYTE PTR [ebp+0x20]
  410bba:	add    ch,ah
  410bbc:	(bad)  [edi-0xd]
  410bbf:	es enter 0xa5b8,0x7f
  410bc4:	ror    BYTE PTR [edx+0x68],1
  410bc7:	fst    QWORD PTR [ecx-0x24]
  410bca:	enter  0x9400,0x40
  410bce:	cmp    eax,ebp
  410bd0:	adc    eax,0x860c9314
  410bd5:	pushf  
  410bd6:	cmp    al,0x50
  410bd8:	pop    ecx
  410bd9:	in     eax,0x6e
  410bdb:	mov    eax,0xcc83939c
  410be0:	add    eax,0x4664f402
  410be5:	mov    esi,0x2d3fcf39
  410bea:	sbb    al,BYTE PTR [edi+ebx*1+0x4e313ad2]
  410bf1:	pop    edx
  410bf2:	call   0xfe16:0xcc322631
  410bf9:	xchg   esi,eax
  410bfa:	mov    cs,WORD PTR [ebp+0x1ba1a835]
  410c00:	cmp    eax,0xad986acb
  410c05:	mov    ss,WORD PTR [ebx+esi*2]
  410c08:	jmp    0x85c98a9f
  410c0d:	xor    al,0x3e
  410c0f:	add    eax,0xeebd20c9
  410c14:	or     DWORD PTR [edx-0x1ace6611],eax
  410c1a:	pusha  
  410c1b:	jl     0x410c83
  410c1d:	sbb    DWORD PTR [edx+0x3e],0xffffff9f
  410c21:	popa   
  410c22:	retf   
  410c23:	cdq    
  410c24:	rdtsc  
  410c26:	in     eax,dx
  410c27:	push   ss
  410c28:	and    dl,bl
  410c2a:	jne    0x410c46
  410c2c:	xor    al,0xc7
  410c2e:	imul   ecx,DWORD PTR [edx],0x3d82a7bb
  410c34:	popa   
  410c35:	xor    ebx,DWORD PTR [esi+0x36]
  410c38:	pop    esi
  410c39:	das    
  410c3a:	std    
  410c3b:	iret   
  410c3c:	sub    bh,0x80
  410c3f:	arpl   WORD PTR [bx+si+0x217],cx
  410c44:	in     al,dx
  410c45:	xor    ebx,DWORD PTR [ecx]
  410c47:	inc    eax
  410c48:	(bad)  
  410c49:	fistp  DWORD PTR [ebx+esi*4-0x5bfac46e]
  410c50:	inc    edx
  410c51:	lahf   
  410c52:	mov    DWORD PTR [edx+0x414ee41],ebp
  410c58:	ja     0x410c09
  410c5a:	out    0x1c,eax
  410c5c:	xor    eax,0x7584d8ca
  410c61:	xchg   ebx,eax
  410c62:	jno    0x410c5d
  410c64:	imul   ecx,DWORD PTR [ebp-0x5e],0x26cc9c05
  410c6b:	imul   ebp,DWORD PTR [esi+0x3d],0xeb482bfb
  410c72:	mov    dl,0x21
  410c74:	and    esi,DWORD PTR [edi-0x41]
  410c77:	adc    dl,BYTE PTR [ebx-0x9a07b1c]
  410c7d:	in     eax,0xf8
  410c7f:	cli    
  410c80:	fs ss (bad) 
  410c83:	jne    0x410c4a
  410c85:	mov    WORD PTR [ebp-0x17f09c8e],ds
  410c8b:	or     al,0x63
  410c8d:	stos   BYTE PTR es:[edi],al
  410c8e:	mov    ebx,0x79fe5cdc
  410c93:	std    
  410c94:	inc    edx
  410c95:	dec    esp
  410c96:	mov    edx,0x3fe62207
  410c9b:	sbb    al,0x18
  410c9d:	mov    cl,0xd9
  410c9f:	jbe    0x410cc1
  410ca1:	push   ebx
  410ca2:	imul   esi,DWORD PTR [esi],0x7d
  410ca5:	stos   DWORD PTR es:[edi],eax
  410ca6:	lea    ecx,[eax-0x3f]
  410ca9:	cmp    al,0xea
  410cab:	inc    edi
  410cac:	sbb    ch,BYTE PTR [edx-0x35c1146c]
  410cb2:	sub    eax,0xf85d7eae
  410cb7:	push   cs
  410cb8:	sbb    ebx,esp
  410cba:	je     0x410ceb
  410cbc:	add    DWORD PTR [edi],ecx
  410cbe:	not    DWORD PTR [edi]
  410cc0:	lea    edx,[ecx-0xb8083e6]
  410cc6:	mov    eax,0xcde599a9
  410ccb:	es push ax
  410cce:	mov    eax,ds:0xcca508c4
  410cd3:	pop    edi
  410cd4:	jle    0x410c6d
  410cd6:	push   ds
  410cd7:	and    BYTE PTR [edx-0x6e],ch
  410cda:	mov    eax,ds:0xc9bff643
  410cdf:	cs xchg ebp,eax
  410ce1:	sub    cl,al
  410ce3:	sub    al,0xe7
  410ce5:	push   es
  410ce6:	inc    esp
  410ce7:	sub    BYTE PTR [edi+0x51],dh
  410cea:	mov    DWORD PTR [eax+0xc2dd513],esi
  410cf0:	sar    DWORD PTR [eax+0x1a29e08a],cl
  410cf6:	in     eax,0xb2
  410cf8:	xor    BYTE PTR [ecx-0x77],ah
  410cfb:	std    
  410cfc:	sti    
  410cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cfe:	jnp    0x410d52
  410d00:	jae    0x410d22
  410d02:	pop    ebp
  410d03:	lock mov esi,0xffa46301
  410d09:	fisttp DWORD PTR [esi+edx*2-0x1a305775]
  410d10:	jns    0x410cbe
  410d12:	bound  ebp,QWORD PTR [edx+0x52]
  410d15:	inc    edx
  410d16:	push   cs
  410d17:	xor    al,0xb5
  410d19:	mov    ecx,0x7a27a3f7
  410d1e:	mov    eax,0xbcca7f75
  410d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d24:	call   0x51182d28
  410d29:	popa   
  410d2a:	mov    bl,BYTE PTR [ebp-0x3d]
  410d2d:	sar    DWORD PTR [ebp+0x59fc798d],cl
  410d33:	jge    0x410d6f
  410d35:	jmp    0xa013:0x42c9f7af
  410d3c:	add    DWORD PTR [edi+eax*4+0x2d],ebp
  410d40:	iret   
  410d41:	int    0xf0
  410d43:	sbb    BYTE PTR [edx],dl
  410d45:	cmp    BYTE PTR [ecx-0x1e2666c2],cl
  410d4b:	or     DWORD PTR [esi+0x2ee46531],0xffffff89
  410d52:	(bad)  [esi]
  410d54:	inc    edx
  410d55:	sub    DWORD PTR [edx],edx
  410d57:	scas   al,BYTE PTR es:[edi]
  410d58:	add    eax,0x570cae95
  410d5d:	(bad)
  410d62:	(bad)  
  410d63:	adc    al,0x46
  410d65:	push   0xf50c13cf
  410d6a:	iret   
  410d6b:	adc    cl,BYTE PTR [edx+0x56]
  410d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d6f:	add    eax,0x12b68d43
  410d74:	or     eax,0x734e81b8
  410d79:	mov    cl,dl
  410d7b:	add    DWORD PTR [ecx+0x59],edx
  410d7e:	adc    al,0xe3
  410d80:	and    BYTE PTR [edi],0x0
  410d83:	sub    edx,0x87ce8374
  410d89:	push   eax
  410d8a:	pop    edx
  410d8b:	adc    BYTE PTR [edi+edi*8-0x345fa0f3],ch
  410d92:	es jecxz 0x410d6f
  410d95:	inc    esp
  410d96:	push   es
  410d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d98:	rol    al,0xc0
  410d9b:	rol    al,0xc0
  410d9e:	rol    al,0xc0
  410da1:	rol    al,0xc0
  410da4:	rol    al,0xc0
  410da7:	rol    al,0xc0
  410daa:	rol    al,0xc0
  410dad:	rol    al,0xc0
  410db0:	rol    al,0xc0
  410db3:	rol    al,0xc0
  410db6:	rol    al,0xc0
  410db9:	rol    al,0xc0
  410dbc:	rol    al,0xc0
  410dbf:	rol    al,0xc0
  410dc2:	rol    al,0xc0
  410dc5:	rol    al,0xc0
  410dc8:	sti    
  410dc9:	loop   0x410dd1
  410dcb:	pop    ecx
  410dcc:	add    eax,0x17306c34
  410dd1:	mov    WORD PTR [esi-0x74],ds
  410dd4:	sbb    ebx,esi
  410dd6:	fcomp  QWORD PTR [edi+0x27]
  410dd9:	lea    ecx,[ebp-0x57b3a1cf]
  410ddf:	push   ebx
  410de0:	sbb    bh,BYTE PTR [esp+edx*4+0x29baa85f]
  410de7:	les    ebx,FWORD PTR [ebx-0x74a6a314]
  410ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dee:	jp     0x410e6d
  410df0:	push   0xa44b558b
  410df5:	cmp    al,0xcf
  410df7:	dec    edx
  410df8:	cmp    edx,0xffffff85
  410dfb:	pop    ss
  410dfc:	mov    esi,0x42434498
  410e01:	dec    edi
  410e02:	mov    ebp,0x5f0c45b4
  410e07:	call   0x2ec7:0xc921bf28
  410e0e:	add    al,BYTE PTR [edi]
  410e10:	dec    ecx
  410e11:	sti    
  410e12:	jmp    0x410e19
  410e14:	sub    BYTE PTR [ecx+0x1c7953b0],al
  410e1a:	adc    esp,eax
  410e1c:	fcom   DWORD PTR [ebp-0x18]
  410e1f:	mov    ah,0x19
  410e21:	test   eax,0xedc950da
  410e26:	xchg   ebp,eax
  410e27:	xor    ah,BYTE PTR [eax]
  410e29:	data16 sahf 
  410e2b:	(bad)  
  410e2c:	adc    BYTE PTR [ebp-0x7d],bl
  410e2f:	push   edx
  410e30:	gs test al,0x95
  410e33:	jp     0x410df3
  410e35:	jge    0x410e73
  410e37:	jp     0x410e81
  410e39:	push   ds
  410e3a:	clc    
  410e3b:	sub    DWORD PTR [ebx-0x74b056f8],ecx
  410e41:	sbb    bh,BYTE PTR [ecx+0x1583e63c]
  410e47:	shl    DWORD PTR [edi-0x10a59d29],1
  410e4d:	sub    DWORD PTR [eax-0x2c566bb7],eax
  410e53:	inc    eax
  410e54:	jae    0x410e7e
  410e56:	inc    edx
  410e57:	and    BYTE PTR [ecx-0x7015de08],bl
  410e5d:	xchg   edi,eax
  410e5e:	mov    edi,0x263d9ced
  410e63:	popa   
  410e64:	mov    ?,WORD PTR [edi-0x709231e6]
  410e6a:	push   ds
  410e6b:	dec    esi
  410e6c:	ins    DWORD PTR es:[edi],dx
  410e6d:	iret   
  410e6e:	ds push ebp
  410e70:	iret   
  410e71:	cs mov dh,0x2a
  410e74:	leave  
  410e75:	jecxz  0x410e2e
  410e77:	mov    eax,ds:0x197567fb
  410e7c:	pop    esp
  410e7d:	xor    dl,bh
  410e7f:	push   ds
  410e80:	out    dx,al
  410e81:	xor    eax,0x3fff2ac4
  410e86:	je     0x410ebf
  410e88:	gs (bad) 
  410e8a:	out    dx,eax
  410e8b:	dec    ebx
  410e8c:	push   es
  410e8d:	sub    bh,ah
  410e8f:	cwde   
  410e90:	cmc    
  410e91:	inc    edi
  410e92:	js     0x410e2c
  410e94:	test   al,0x3
  410e96:	mov    edi,0x9bc1c5d3
  410e9b:	retf   
  410e9c:	aad    0x7
  410e9e:	mov    bh,0x20
  410ea0:	jae    0x410e96
  410ea2:	add    ebx,DWORD PTR [esp+ebp*4]
  410ea5:	add    esp,ecx
  410ea7:	add    esi,DWORD PTR [ebp-0x6e]
  410eaa:	call   0x8503:0x831bd5a7
  410eb1:	les    ebx,FWORD PTR [ecx+0x2c]
  410eb4:	mov    ebp,0xf14fea0e
  410eb9:	dec    ecx
  410eba:	push   esp
  410ebb:	add    DWORD PTR [esi+0x21d3317d],0xffffffee
  410ec2:	sub    eax,0x25055b28
  410ec7:	out    0xb2,eax
  410ec9:	ins    BYTE PTR es:[edi],dx
  410eca:	mov    ch,0xb4
  410ecc:	outs   dx,DWORD PTR ds:[esi]
  410ecd:	lods   eax,DWORD PTR ds:[esi]
  410ece:	mov    bl,0x7c
  410ed0:	cmp    dh,dh
  410ed2:	(bad)  
  410ed3:	push   ebx
  410ed4:	pop    edx
  410ed5:	out    0xd4,eax
  410ed7:	add    bh,BYTE PTR [ecx-0x58]
  410eda:	jbe    0x410eee
  410edc:	(bad)  
  410edd:	and    ebx,ebx
  410edf:	xchg   DWORD PTR [ebp-0x4e],esi
  410ee2:	add    al,0x8c
  410ee4:	jae    0x410f3e
  410ee6:	enter  0xf35f,0x69
  410eea:	dec    esi
  410eeb:	fld    QWORD PTR [ecx]
  410eed:	dec    esp
  410eee:	or     bh,bl
  410ef0:	sbb    eax,0x4230da49
  410ef5:	loop   0x410ef7
  410ef7:	mov    dl,0xa2
  410ef9:	or     eax,0xae9d4cd
  410efe:	aaa    
  410eff:	hlt    
  410f00:	xchg   ecx,eax
  410f01:	sub    DWORD PTR [esi+0x29],ecx
  410f04:	ror    DWORD PTR [eax+eiz*1+0x58],0x9a
  410f09:	jle    0x410ee1
  410f0b:	jp     0x410f27
  410f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f0e:	inc    BYTE PTR [eax+edx*4]
  410f11:	(bad)  
  410f12:	push   cs
  410f13:	cmp    al,0x77
  410f15:	xchg   dh,bh
  410f17:	movlps QWORD PTR [eax+0x34a12af],xmm5
  410f1e:	push   ds
  410f1f:	gs sti 
  410f21:	ret    0x221d
  410f24:	mov    esi,0x191ad8ba
  410f29:	xor    edx,ecx
  410f2b:	pop    edi
  410f2c:	sbb    bl,BYTE PTR [edx-0x49c62bf3]
  410f32:	and    eax,0x301213d1
  410f37:	mov    al,ds:0x80e9b4e4
  410f3c:	and    al,0x1a
  410f3e:	scas   eax,DWORD PTR es:[edi]
  410f3f:	test   DWORD PTR [edi],edx
  410f41:	out    dx,al
  410f42:	popa   
  410f43:	pushf  
  410f44:	rcr    BYTE PTR [ecx-0x1e],1
  410f47:	pushf  
  410f48:	jmp    0x624f23d
  410f4d:	aaa    
  410f4e:	add    al,BYTE PTR [esi]
  410f50:	cmp    BYTE PTR [edx-0x7498df49],bl
  410f56:	outs   dx,BYTE PTR ds:[esi]
  410f57:	loope  0x410fa1
  410f59:	sti    
  410f5a:	xchg   BYTE PTR [esi+0x30fd4bf2],dh
  410f60:	inc    ebp
  410f61:	xlat   BYTE PTR ds:[ebx]
  410f62:	loope  0x410f84
  410f64:	jecxz  0x410f57
  410f66:	clc    
  410f67:	mov    bl,0x52
  410f69:	out    0x55,al
  410f6b:	js     0x410f9f
  410f6d:	cs jnp 0x410fe5
  410f70:	xchg   esi,eax
  410f71:	cli    
  410f72:	not    BYTE PTR [esi+0x2ceaf295]
  410f78:	or     bl,BYTE PTR [eax+0x17]
  410f7b:	push   ds
  410f7c:	jge    0x410f5e
  410f7e:	lods   al,BYTE PTR ds:[esi]
  410f7f:	ja     0x410fd2
  410f81:	aad    0x77
  410f83:	imul   ch
  410f85:	xlat   BYTE PTR ds:[ebx]
  410f86:	mov    dh,0x6b
  410f88:	arpl   WORD PTR [edx-0x6b],sp
  410f8b:	sub    eax,0x5b92ffdc
  410f90:	test   ebp,ecx
  410f92:	je     0x410faf
  410f94:	and    dh,al
  410f96:	jp     0x410f4f
  410f98:	mov    edi,ds
  410f9a:	xchg   ecx,eax
  410f9b:	inc    edx
  410f9c:	shr    al,1
  410f9e:	lods   eax,DWORD PTR ds:[esi]
  410f9f:	xor    DWORD PTR [edi],edi
  410fa1:	fcmove st,st(2)
  410fa3:	sti    
  410fa4:	mov    esi,0x13a3447b
  410fa9:	inc    edi
  410faa:	xor    DWORD PTR [edx+0x665d40da],0xcdb2bdd3
  410fb4:	ror    DWORD PTR [edi+0x5e32f3d],1
  410fba:	jl     0x410f68
  410fbc:	xor    al,BYTE PTR [edx]
  410fbe:	scas   al,BYTE PTR es:[edi]
  410fbf:	imul   esp,DWORD PTR [ecx-0x52],0xffffff9c
  410fc3:	mov    ch,0xae
  410fc5:	jge    0x410f64
  410fc7:	popa   
  410fc8:	jns    0x411001
  410fca:	mov    dh,0x4
  410fcc:	ins    BYTE PTR es:[edi],dx
  410fcd:	out    0x3f,al
  410fcf:	test   eax,0x3a062e3a
  410fd4:	push   ebp
  410fd5:	jl     0x410fd1
  410fd7:	ss jge 0x411034
  410fda:	xchg   ebp,eax
  410fdb:	add    DWORD PTR [esi+0x6a50ef9f],edi
  410fe1:	fnstcw WORD PTR [edi-0x55e4addc]
  410fe7:	scas   eax,DWORD PTR es:[edi]
  410fe8:	push   cs
  410fe9:	sbb    cl,BYTE PTR [edx-0x54baad00]
  410fef:	scas   eax,DWORD PTR es:[edi]
  410ff0:	sbb    BYTE PTR [edi],dl
  410ff2:	adc    DWORD PTR [edx],ecx
  410ff4:	ret    
  410ff5:	push   cs
  410ff6:	cwde   
  410ff7:	aas    
  410ff8:	out    0x5c,al
  410ffa:	outs   dx,DWORD PTR ds:[esi]
  410ffb:	inc    edx
  410ffc:	int    0x8
  410ffe:	xor    bh,bh
  411000:	mov    eax,0x4e8198d9
  411005:	aas    
  411006:	hlt    
  411007:	ss jb  0x410f8d
  41100a:	mov    ebx,0xcf467e0c
  41100f:	mov    ch,0xda
  411011:	dec    edi
  411012:	aas    
  411013:	or     ecx,DWORD PTR [ebx-0x7f]
  411016:	repz and edi,DWORD PTR [ebx+0x5c]
  41101a:	xchg   DWORD PTR [ebx+eax*2-0x47],edi
  41101e:	js     0x411003
  411020:	adc    ecx,esp
  411022:	arpl   WORD PTR [edx],cx
  411024:	scas   al,BYTE PTR es:[edi]
  411025:	xchg   ebx,eax
  411026:	and    BYTE PTR [edx+0x219a8748],ch
  41102c:	push   ebx
  41102d:	loopne 0x411079
  41102f:	pop    ds
  411030:	xor    eax,0xe84cea68
  411035:	or     ebp,esi
  411037:	sub    esi,DWORD PTR [edx-0x54]
  41103a:	cli    
  41103b:	ror    DWORD PTR [bx+di-0x4b25],cl
  411040:	out    0x91,eax
  411042:	out    0x8e,al
  411044:	(bad)  
  411045:	mov    dl,0xf9
  411047:	in     al,0x4e
  411049:	push   esi
  41104a:	(bad)  
  41104b:	popf   
  41104c:	sub    BYTE PTR [ebx+0x52e82a9e],0x97
  411053:	pop    esi
  411054:	mov    dl,0x22
  411056:	retf   0xe69f
  411059:	and    cl,cl
  41105b:	sub    ch,0x47
  41105e:	test   ecx,ebx
  411060:	adc    BYTE PTR [ebx-0x6d],ch
  411063:	push   edi
  411064:	mov    ebp,0x7b63ff2d
  411069:	or     BYTE PTR [esi-0xabc67b5],bh
  41106f:	push   ds
  411070:	mov    ebx,0x7e4c22d6
  411075:	mov    bl,0x8a
  411077:	std    
  411078:	pusha  
  411079:	mov    ecx,DWORD PTR [esp+eiz*4]
  41107c:	shl    BYTE PTR [ebx-0x4671a065],0xf3
  411083:	mov    al,0xf0
  411085:	outs   dx,DWORD PTR ds:[esi]
  411086:	jle    0x4110b7
  411088:	daa    
  411089:	mov    cs,WORD PTR [edi+0x3116d4cf]
  41108f:	push   cx
  411091:	out    dx,al
  411092:	jmp    0x66ad:0xec58061c
  411099:	and    al,dl
  41109b:	mov    esi,0x57be2526
  4110a0:	jmp    0x411101
  4110a2:	pop    esp
  4110a3:	(bad)  
  4110a4:	fcomi  st,st(7)
  4110a6:	jmp    FWORD PTR [edx-0x4d19faff]
  4110ac:	cmp    esp,DWORD PTR ds:0xf2dc9003
  4110b2:	push   0x4b
  4110b4:	pop    es
  4110b5:	cli    
  4110b6:	out    dx,al
  4110b7:	lods   al,BYTE PTR ds:[esi]
  4110b8:	popa   
  4110b9:	cmp    bl,BYTE PTR [edi+ebx*4+0x13]
  4110bd:	add    BYTE PTR [ecx+0x69],bh
  4110c0:	sbb    DWORD PTR ds:0x658a12b,ecx
  4110c6:	retf   
  4110c7:	int    0x79
  4110c9:	sar    DWORD PTR [eax],1
  4110cb:	test   DWORD PTR [edx],0xdd9e98e8
  4110d1:	retf   
  4110d2:	cmp    DWORD PTR [esi+0x5b131371],0x5a
  4110d9:	sub    eax,0xf6cc538e
  4110de:	pop    ebx
  4110df:	in     eax,0x55
  4110e1:	in     eax,dx
  4110e2:	outs   dx,BYTE PTR ds:[esi]
  4110e3:	jb     0x4110c3
  4110e5:	inc    edi
  4110e6:	call   DWORD PTR [ebx+0x63]
  4110e9:	sbb    dl,dl
  4110eb:	repnz cmp DWORD PTR gs:[esi],eax
  4110ef:	addr16 pusha 
  4110f1:	pop    edi
  4110f2:	sub    dh,bl
  4110f4:	pop    edx
  4110f5:	aaa    
  4110f6:	je     0x41111b
  4110f8:	mov    edx,0x242da562
  4110fd:	aad    0x3f
  4110ff:	push   esp
  411100:	add    eax,0x559c4ffb
  411105:	outs   dx,DWORD PTR ds:[esi]
  411106:	test   al,0x89
  411108:	popa   
  411109:	xor    BYTE PTR [ecx+eax*8-0x47f2a1fc],cl
  411110:	jne    0x41111e
  411112:	popf   
  411113:	test   eax,0x2fb60d09
  411118:	sti    
  411119:	sub    DWORD PTR [ebx+edx*1+0x1c],esp
  41111d:	or     edi,DWORD PTR [esi+0x37]
  411120:	and    esp,edx
  411122:	push   ss
  411123:	or     al,0xf0
  411125:	sub    eax,0xffffffe4
  411128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411129:	pop    edx
  41112a:	xchg   BYTE PTR [si],bl
  41112d:	retf   0xfe2
  411130:	cli    
  411131:	pop    es
  411132:	add    ebx,DWORD PTR [edx]
  411134:	dec    ecx
  411135:	mov    ds:0xdcd62098,eax
  41113a:	xchg   BYTE PTR [ecx-0x7ed4f1db],al
  411140:	dec    edi
  411141:	hlt    
  411142:	jbe    0x411152
  411144:	aad    0xe2
  411146:	popf   
  411147:	xchg   ebp,eax
  411148:	push   esi
  411149:	ror    dh,cl
  41114b:	bound  ebx,QWORD PTR [edi+edi*8+0x3e]
  41114f:	add    ah,BYTE PTR [edx+0x67]
  411152:	out    0x85,al
  411154:	jbe    0x41118f
  411156:	xchg   ebp,eax
  411157:	jne    0x41110d
  411159:	jle    0x4111c1
  41115b:	xor    al,0xf2
  41115d:	stc    
  41115e:	xchg   edi,eax
  41115f:	pusha  
  411160:	sub    al,bh
  411162:	adc    al,0x20
  411164:	inc    edx
  411165:	fsubp  st(1),st
  411167:	mov    eax,?
  411169:	mov    WORD PTR [ecx-0x6ce7e04b],?
  41116f:	sbb    edi,DWORD PTR [esi]
  411171:	leave  
  411172:	xor    DWORD PTR [ebx-0x38ad4fec],esi
  411178:	shl    DWORD PTR [edx-0x3292d0f6],0xe3
  41117f:	inc    eax
  411180:	jae    0x411164
  411182:	jbe    0x41117d
  411184:	in     al,0x9b
  411186:	stos   DWORD PTR es:[edi],eax
  411187:	int3   
  411188:	push   ds
  411189:	push   0xffffff98
  41118b:	adc    BYTE PTR [edi-0x5787b8df],ch
  411191:	mov    al,0x35
  411193:	sbb    al,0xbe
  411195:	rcr    BYTE PTR [esi+0x76db0c5f],1
  41119b:	ins    DWORD PTR es:[edi],dx
  41119c:	xchg   edi,eax
  41119d:	sub    al,dh
  41119f:	mov    edi,0x403ac604
  4111a4:	mov    esi,0xf2c3622a
  4111a9:	mov    fs,eax
  4111ab:	add    DWORD PTR [edi],edx
  4111ad:	xor    ebx,DWORD PTR [ebx-0x10f2b501]
  4111b3:	sbb    al,0x7f
  4111b5:	cmp    eax,0x6279ac96
  4111ba:	les    eax,FWORD PTR [edi-0x6]
  4111bd:	push   ss
  4111be:	jns    0x4111cb
  4111c0:	int3   
  4111c1:	or     eax,0xe2760a3a
  4111c6:	lahf   
  4111c7:	add    ah,dl
  4111c9:	loop   0x41117d
  4111cb:	into   
  4111cc:	popf   
  4111cd:	aaa    
  4111ce:	cmp    edx,edi
  4111d0:	inc    ebx
  4111d1:	adc    esp,DWORD PTR [edx+0x545f0ef9]
  4111d7:	in     eax,dx
  4111d8:	and    ecx,DWORD PTR [esi+0x7e476d2a]
  4111de:	out    0x68,al
  4111e0:	loop   0x411237
  4111e2:	cmp    eax,0xab6e61dd
  4111e7:	(bad)  
  4111e9:	pop    ss
  4111ea:	out    0x64,eax
  4111ec:	push   ds
  4111ed:	xchg   edi,eax
  4111ee:	in     eax,dx
  4111ef:	(bad)  
  4111f0:	(bad)  
  4111f1:	inc    ebp
  4111f2:	sbb    dl,bh
  4111f4:	sub    esp,edx
  4111f6:	outs   dx,BYTE PTR ds:[esi]
  4111f7:	jmp    0x4111f2
  4111f9:	lock mov edx,esi
  4111fc:	push   ebx
  4111fd:	inc    eax
  4111fe:	icebp  
  4111ff:	fadd   DWORD PTR [edx+0x51]
  411202:	mov    dl,cl
  411204:	lods   al,BYTE PTR ds:[esi]
  411205:	inc    eax
  411206:	push   esp
  411207:	scas   eax,DWORD PTR es:[edi]
  411208:	adc    al,0x9
  41120a:	xchg   BYTE PTR [edi],ch
  41120c:	popf   
  41120d:	loope  0x4111a9
  41120f:	add    ebx,DWORD PTR [ecx]
  411211:	ficom  DWORD PTR [ebx-0x120ed534]
  411217:	or     esp,ebx
  411219:	mov    al,ds:0x8e84f009
  41121e:	int    0x22
  411220:	popf   
  411221:	mov    BYTE PTR [ecx+eiz*2],al
  411224:	pop    ecx
  411225:	xchg   ebx,eax
  411226:	icebp  
  411227:	ins    DWORD PTR es:[edi],dx
  411228:	lods   al,BYTE PTR ds:[esi]
  411229:	in     al,dx
  41122a:	sbb    edx,DWORD PTR [esi-0x73]
  41122d:	pop    ebx
  41122e:	xchg   edx,eax
  41122f:	adc    ebx,ebp
  411231:	es cs icebp 
  411234:	and    edx,DWORD PTR [eax]
  411236:	lahf   
  411237:	out    0x8f,eax
  411239:	sub    al,0x1b
  41123c:	pop    esi
  41123d:	push   cs
  41123e:	inc    esi
  41123f:	sub    esp,DWORD PTR [esp+ebp*8]
  411242:	imul   ecx,edx,0x417c7e26
  411248:	adc    esi,DWORD PTR [edi-0x4a]
  41124b:	and    al,0x6
  41124d:	xchg   cl,dh
  41124f:	jno    0x41122f
  411251:	mov    esi,0x7c0ce065
  411256:	or     eax,0xa16a335e
  41125b:	pop    edx
  41125c:	sbb    al,BYTE PTR [esi]
  41125e:	into   
  41125f:	lods   al,BYTE PTR ds:[esi]
  411260:	jg     0x41124c
  411262:	push   es
  411263:	lods   eax,DWORD PTR ds:[esi]
  411264:	sbb    eax,0x41a872b0
  411269:	inc    ecx
  41126a:	out    0x5d,eax
  41126c:	jmp    0x4112a7
  41126e:	ins    DWORD PTR es:[edi],dx
  41126f:	ds pop ebp
  411271:	int    0x92
  411273:	jecxz  0x4112bf
  411275:	sbb    ecx,DWORD PTR [edx+0x4c5a031b]
  41127b:	xchg   bl,bl
  41127d:	ins    DWORD PTR es:[edi],dx
  41127e:	xchg   edx,eax
  41127f:	inc    edx
  411280:	jmp    0x4112e1
  411282:	fimul  WORD PTR [edx-0x1ffabf9e]
  411288:	ret    
  411289:	push   ecx
  41128a:	pop    ebp
  41128b:	loopne 0x4112cc
  41128d:	rcr    BYTE PTR gs:[edx-0x8f13eeb],1
  411294:	xchg   edi,eax
  411295:	add    bh,cl
  411297:	iret   
  411298:	or     dh,BYTE PTR [eax+0x625849f0]
  41129e:	jle    0x4112c8
  4112a0:	xor    BYTE PTR [ecx-0x6f],ah
  4112a3:	push   ds
  4112a4:	sbb    edi,DWORD PTR [ebp-0x71]
  4112a7:	push   cs
  4112a8:	repz and DWORD PTR [esi+0x20302d56],esp
  4112af:	(bad)  
  4112b0:	mov    al,0xd4
  4112b2:	fcomp  DWORD PTR [eax+0x5452095e]
  4112b8:	mov    DWORD PTR [ebp+0x253110bf],ecx
  4112be:	jecxz  0x4112f7
  4112c0:	xor    eax,0x42bc258d
  4112c5:	xchg   edi,eax
  4112c6:	pop    es
  4112c7:	in     eax,dx
  4112c8:	jo     0x4112eb
  4112ca:	pop    esi
  4112cb:	lods   eax,DWORD PTR ds:[esi]
  4112cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112cd:	loop   0x411297
  4112cf:	push   ebp
  4112d0:	lock pop ebp
  4112d2:	ins    BYTE PTR es:[edi],dx
  4112d3:	int3   
  4112d4:	enter  0xf44b,0xc2
  4112d8:	dec    eax
  4112d9:	pushf  
  4112da:	and    BYTE PTR [ebx],bl
  4112dc:	xchg   edi,eax
  4112dd:	nop
  4112de:	out    dx,al
  4112df:	and    cl,cl
  4112e1:	sbb    dl,BYTE PTR [ecx+ebx*2+0x2f67c9dd]
  4112e8:	fldcw  WORD PTR [ecx-0x77]
  4112eb:	jecxz  0x4112db
  4112ed:	cmp    ebx,DWORD PTR [ebx]
  4112ef:	sti    
  4112f0:	enter  0x38a1,0x66
  4112f4:	pop    ebp
  4112f5:	pop    esp
  4112f6:	shl    BYTE PTR ds:0x28b34a03,1
  4112fc:	inc    eax
  4112fd:	(bad)  
  4112fe:	jle    0x4112ec
  411300:	daa    
  411301:	loop   0x411307
  411303:	fiadd  DWORD PTR [ebx]
  411305:	push   edx
  411306:	out    dx,al
  411307:	mov    cs,WORD PTR [edi-0x2f99952f]
  41130d:	mov    eax,0x47bbf70
  411312:	mov    ecx,0xd0cd342a
  411317:	(bad)  
  411318:	data16 in al,dx
  41131a:	(bad)
  41131e:	fsubr  DWORD PTR [edi]
  411320:	mov    ah,0x59
  411322:	and    BYTE PTR [edx+0x89c58b0],dl
  411328:	(bad)  
  411329:	(bad)  [edi-0x14fdeca5]
  41132f:	xchg   ecx,edi
  411331:	cwde   
  411332:	ss push ecx
  411334:	inc    esi
  411335:	int3   
  411336:	stos   BYTE PTR es:[edi],al
  411337:	stc    
  411338:	fwait
  411339:	rol    bh,0xcb
  41133c:	mov    edx,0xb92da4db
  411341:	std    
  411342:	cmp    eax,0xb9154f29
  411347:	mov    ds:0xac0ab658,eax
  41134c:	ja     0x411381
  41134e:	cli    
  41134f:	push   ebp
  411350:	sar    BYTE PTR [ebp+ecx*4-0x2e],1
  411354:	fistp  WORD PTR [eax]
  411356:	cmp    dh,dh
  411358:	cdq    
  411359:	gs (bad) 
  41135b:	call   DWORD PTR [edx+0x1f9514ab]
  411361:	fisttp DWORD PTR [ebx-0x47b5b9dc]
  411367:	sbb    al,0x75
  411369:	stos   BYTE PTR es:[edi],al
  41136a:	xchg   ebx,eax
  41136b:	lods   eax,DWORD PTR ds:[esi]
  41136c:	dec    eax
  41136d:	pusha  
  41136e:	pop    edx
  41136f:	xchg   ch,dl
  411371:	dec    esp
  411372:	sbb    al,0x41
  411374:	movaps xmm6,XMMWORD PTR [edx]
  411377:	mov    edi,DWORD PTR [esi+0x10856cbf]
  41137d:	push   ds
  41137e:	call   0xbe0d:0x2240211c
  411385:	and    al,0xd
  411387:	(bad)  
  411388:	jo     0x41139a
  41138a:	xor    ebx,DWORD PTR [ecx]
  41138c:	dec    esp
  41138d:	push   esp
  41138e:	mov    ds:0x9d4210a9,al
  411393:	sub    DWORD PTR [ebx-0x774b1830],edi
  411399:	adc    dh,BYTE PTR [ecx]
  41139b:	dec    ebp
  41139c:	mov    WORD PTR ds:0x17ff7702,cs
  4113a2:	fwait
  4113a3:	push   cs
  4113a4:	aad    0x71
  4113a6:	mov    esi,0xb1535087
  4113ab:	mov    ch,0xf6
  4113ad:	test   eax,0xef43bb96
  4113b2:	mov    ecx,0x47524c2b
  4113b7:	xor    eax,0xbc62f7fe
  4113bc:	aam    0xcd
  4113be:	jmp    0xe35c:0x8ba2098
  4113c5:	sub    ebx,ecx
  4113c7:	push   0x2ff52c27
  4113cc:	and    eax,0x2474335d
  4113d1:	out    dx,al
  4113d2:	ds lock jl 0x411358
  4113d6:	stos   BYTE PTR es:[edi],al
  4113d7:	jl     0x411440
  4113d9:	ss (bad) 
  4113db:	mov    dh,0x64
  4113dd:	dec    esp
  4113de:	xchg   eax,esi
  4113e0:	push   0x649862a2
  4113e5:	repz xor ah,BYTE PTR [ebx]
  4113e8:	pusha  
  4113e9:	cdq    
  4113ea:	sbb    DWORD PTR [ebx+ebx*8],ebp
  4113ed:	adc    cl,bh
  4113ef:	scas   eax,DWORD PTR es:[edi]
  4113f0:	xor    ecx,DWORD PTR [ebp+0x12f8598c]
  4113f6:	dec    esi
  4113f7:	outs   dx,BYTE PTR ds:[esi]
  4113f8:	sbb    DWORD PTR [esp+ecx*2],esp
  4113fb:	dec    edi
  4113fc:	inc    esi
  4113fd:	neg    BYTE PTR [edx-0x596a214b]
  411403:	or     ebp,DWORD PTR [eax-0x3d746cd7]
  411409:	(bad)  
  41140a:	fisubr WORD PTR [esp+edi*8-0x420136a]
  411411:	push   ds
  411412:	imul   ebp,eax,0x2a
  411415:	mov    esi,0xfc26ec2d
  41141a:	jl     0x41140c
  41141c:	mov    al,0x2d
  41141e:	push   ebx
  41141f:	scas   al,BYTE PTR es:[edi]
  411420:	sub    al,0x6f
  411422:	sub    ch,BYTE PTR [eax]
  411424:	ja     0x411449
  411426:	lds    esp,FWORD PTR [esi]
  411428:	xchg   ebx,eax
  411429:	cs jbe 0x4113f5
  41142c:	xchg   esi,eax
  41142d:	push   ds
  41142e:	adc    al,0x2e
  411430:	sub    DWORD PTR [edx],ebp
  411432:	mov    ecx,0x989735a3
  411437:	push   DWORD PTR [edx-0x19ac992f]
  41143d:	pusha  
  41143e:	inc    esi
  41143f:	cld    
  411440:	ret    
  411441:	jle    0x4113fc
  411443:	inc    ebp
  411444:	pop    esi
  411445:	push   0x7e
  411447:	and    eax,DWORD PTR [esi-0x38]
  41144a:	jbe    0x41143d
  41144c:	adc    eax,ebp
  41144e:	or     DWORD PTR [eax],ebp
  411450:	dec    edx
  411451:	pop    ebp
  411452:	pop    ecx
  411453:	cmc    
  411454:	inc    ebp
  411455:	icebp  
  411456:	mov    ebp,0xe4a5fc6f
  41145b:	jmp    0x989a:0x4c95871
  411462:	adc    edi,DWORD PTR [esp+edx*1+0x58]
  411466:	xchg   ch,dh
  411468:	fld    QWORD PTR [bx+si+0x4]
  41146c:	adc    DWORD PTR [edx-0x47138f1d],edx
  411472:	hlt    
  411473:	ficom  WORD PTR [edx+0xb99fef1]
  411479:	popa   
  41147a:	or     eax,0x452848f5
  41147f:	ret    0xfe83
  411482:	inc    esp
  411483:	inc    edi
  411484:	jnp    0x411496
  411486:	call   0x648c:0x238372b7
  41148d:	jg     0x411438
  41148f:	bound  edx,QWORD PTR [ebp+0x4ed877f7]
  411495:	lods   eax,DWORD PTR ds:[esi]
  411496:	xor    esi,DWORD PTR [edx-0x22]
  411499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149a:	rol    DWORD PTR [esi],cl
  41149c:	inc    edx
  41149d:	sbb    BYTE PTR [eax-0x44e8065b],ch
  4114a3:	sbb    bl,BYTE PTR [ebx-0x50]
  4114a6:	call   0xca0a7cbc
  4114ab:	out    dx,eax
  4114ac:	inc    edi
  4114ad:	ins    BYTE PTR es:[edi],dx
  4114ae:	xor    DWORD PTR [eax-0x1dde789f],ecx
  4114b4:	and    bl,0x6f
  4114b7:	add    eax,0x69152a84
  4114bc:	pop    eax
  4114bd:	sub    dl,dl
  4114bf:	mov    eax,0x4982537d
  4114c4:	dec    esp
  4114c5:	imul   BYTE PTR [ecx+0x21]
  4114c8:	iret   
  4114c9:	pop    edi
  4114ca:	lods   eax,DWORD PTR ds:[esi]
  4114cb:	mov    esp,eax
  4114cd:	inc    edx
  4114ce:	cmp    esp,DWORD PTR [ecx+ebx*2]
  4114d1:	push   ebp
  4114d2:	retf   
  4114d3:	out    0xb0,al
  4114d5:	loop   0x41152d
  4114d7:	in     eax,0x67
  4114d9:	in     eax,0x4d
  4114db:	jnp    0x411493
  4114dd:	aas    
  4114de:	mov    dl,0x21
  4114e0:	repnz daa 
  4114e2:	xchg   esp,eax
  4114e3:	jl     0x41153f
  4114e5:	add    cl,dl
  4114e7:	sub    bl,ch
  4114e9:	push   ds
  4114ea:	push   ebx
  4114eb:	xor    edx,DWORD PTR [ebp-0x53437f6]
  4114f1:	es mov ch,0xf2
  4114f4:	fild   DWORD PTR [edx+0x4c]
  4114f7:	not    BYTE PTR [ebx]
  4114f9:	and    eax,edi
  4114fb:	jnp    0x411555
  4114fd:	(bad)  
  4114fe:	mov    edi,0xd36f7c33
  411503:	daa    
  411504:	ins    DWORD PTR es:[edi],dx
  411505:	add    BYTE PTR [edi-0x24e005db],dh
  41150b:	and    bl,dh
  41150d:	std    
  41150e:	inc    esi
  41150f:	call   0x8db3:0x550ad5b2
  411516:	jmp    0x6e46:0x17c798c0
  41151d:	(bad)  
  41151f:	(bad)  
  411520:	out    0x42,eax
  411522:	cs iret 
  411524:	popf   
  411525:	sbb    al,0xf0
  411527:	pop    esi
  411528:	mov    dl,0xe8
  41152a:	dec    esi
  41152b:	clc    
  41152c:	jb     0x41153c
  41152e:	sub    edx,DWORD PTR [eax]
  411530:	loop   0x41151f
  411532:	es or  edi,0x63
  411536:	xor    cl,BYTE PTR [edx+eiz*4]
  411539:	sbb    al,0x99
  41153b:	inc    DWORD PTR [edx+eiz*8]
  41153e:	xor    ecx,esi
  411540:	mov    esp,0x6f840c21
  411545:	sbb    ah,dl
  411547:	mov    BYTE PTR [ebp-0x31],al
  41154a:	(bad)  
  41154b:	fisub  WORD PTR [eax]
  41154d:	adc    edi,ebx
  41154f:	icebp  
  411550:	test   DWORD PTR [edx],edi
  411552:	(bad)  
  411553:	loope  0x411500
  411555:	and    al,0x16
  411557:	sahf   
  411558:	mov    eax,ds:0x7de08c6b
  41155d:	dec    esi
  41155e:	fcmovne st,st(4)
  411560:	xchg   esi,eax
  411561:	pusha  
  411562:	ins    BYTE PTR es:[edi],dx
  411563:	add    BYTE PTR [esp+ecx*4+0x60],0x9c
  411568:	stc    
  411569:	setg   BYTE PTR [edx-0x61c324a2]
  411570:	nop
  411571:	adc    eax,0x255e34a7
  411576:	and    dl,BYTE PTR [eax*2+0x681a5e40]
  41157d:	xchg   DWORD PTR [eax+ebx*2],eax
  411580:	jp     0x41157c
  411582:	mov    edx,0x37c2c940
  411587:	add    ah,BYTE PTR [edx+edi*1]
  41158a:	loop   0x411534
  41158c:	les    eax,FWORD PTR [ebp+0x52]
  41158f:	test   ebx,eax
  411591:	push   ecx
  411592:	mov    ss,WORD PTR [ebp-0x4e]
  411595:	mov    ds:0xc0c0782c,eax
  41159a:	rol    al,0xc0
  41159d:	rol    al,0xc0
  4115a0:	rol    al,0xc0
  4115a3:	rol    al,0xc0
  4115a6:	rol    al,0xc0
  4115a9:	rol    al,0xc0
  4115ac:	rol    al,0xc0
  4115af:	rol    al,0xc0
  4115b2:	rol    al,0xc0
  4115b5:	rol    al,0xc0
  4115b8:	rol    al,0xc0
  4115bb:	rol    al,0xc0
  4115be:	rol    al,0xc0
  4115c1:	rol    al,0xc0
  4115c4:	rol    al,0xc0
  4115c7:	rol    al,0xc0
  4115ca:	rol    al,0xc0
  4115cd:	rol    al,0xc0
  4115d0:	rol    al,0xc0
  4115d3:	rol    al,0xc0
  4115d6:	rol    al,0xc0
  4115d9:	rol    al,0xc0
  4115dc:	rol    al,0xc0
  4115df:	rcr    cl,0x72
  4115e2:	fimul  WORD PTR [edx+edx*2]
  4115e5:	test   DWORD PTR [edx+0x390d317e],0xb245925c
  4115ef:	mov    ah,0x9a
  4115f1:	push   ss
  4115f2:	bound  edi,QWORD PTR [ebx]
  4115f4:	rcr    DWORD PTR [ebx-0x6a],0x65
  4115f8:	jns    0x411593
  4115fa:	jle    0x411635
  4115fc:	jae    0x411676
  4115fe:	mov    bl,0xff
  411600:	call   0xbc1:0x672f15c1
  411607:	xor    ecx,DWORD PTR [edx+ebp*8+0x41d15534]
  41160e:	mov    ch,0x85
  411610:	daa    
  411611:	hlt    
  411612:	xchg   esi,eax
  411613:	mov    ecx,0x4f33e212
  411618:	jo     0x4115ad
  41161a:	mov    dl,BYTE PTR [ecx-0x41]
  41161d:	pop    es
  41161e:	xchg   ecx,eax
  41161f:	hlt    
  411620:	push   ebx
  411621:	and    eax,0x141f6204
  411626:	fmul   QWORD PTR [ecx-0x60]
  411629:	pushf  
  41162a:	jmp    0x411643
  41162c:	jmp    0x2fe7:0x4094eba4
  411633:	inc    ebp
  411634:	push   eax
  411635:	inc    edx
  411636:	and    DWORD PTR [ebx-0x6f],0xdc3165d6
  41163d:	loope  0x4115fc
  41163f:	rcr    BYTE PTR [ecx+0x6fcc272c],1
  411645:	test   eax,0x8157c18b
  41164a:	shl    ebp,0xb6
  41164d:	mov    ebx,0xb07c26fe
  411652:	push   ds
  411653:	mov    bl,0xa9
  411656:	cmp    eax,0x2636f21c
  41165b:	xlat   BYTE PTR ds:[ebx]
  41165c:	sbb    eax,0x9af0f2b3
  411661:	rol    DWORD PTR [esi+0x180f6d65],cl
  411667:	sub    al,0xbb
  411669:	sti    
  41166a:	or     al,0x3
  41166c:	test   al,0x3
  41166e:	mov    esi,0x71634ccf
  411673:	and    eax,0x114e0948
  411678:	sub    ah,cl
  41167a:	pop    eax
  41167b:	add    al,0x4b
  41167d:	das    
  41167e:	cmp    DWORD PTR [ecx-0x73],ebx
  411681:	les    eax,FWORD PTR [ebx+0x5222b48e]
  411687:	pop    ebx
  411688:	push   edx
  411689:	test   DWORD PTR [esi+0x5a],eax
  41168c:	push   ebp
  41168d:	repz iret 
  41168f:	add    eax,0x2c254e8c
  411694:	xchg   esi,eax
  411695:	div    BYTE PTR [ecx]
  411697:	mov    ah,BYTE PTR [ebx]
  411699:	or     cl,BYTE PTR [esi]
  41169b:	pop    ds
  41169c:	push   cs
  41169d:	repnz dec edx
  41169f:	ja     0x411684
  4116a1:	in     eax,0x2a
  4116a3:	hlt    
  4116a4:	push   ebp
  4116a5:	xchg   ecx,esi
  4116a7:	aaa    
  4116a8:	and    BYTE PTR [edx-0x63c1bf82],ch
  4116ae:	and    BYTE PTR [ebp+0x35],ah
  4116b1:	cs scas al,BYTE PTR es:[edi]
  4116b3:	rcr    bh,0x4c
  4116b6:	mov    dh,0xa2
  4116b8:	mov    eax,0xe9299066
  4116bd:	out    dx,al
  4116be:	test   al,0x2a
  4116c0:	retf   0x96ec
  4116c3:	jae    0x4116d9
  4116c5:	dec    eax
  4116c6:	mov    bl,0x10
  4116c8:	and    eax,DWORD PTR [eax]
  4116ca:	push   cx
  4116cc:	std    
  4116cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ce:	adc    ecx,DWORD PTR [edi+0x5dbc79f0]
  4116d4:	int3   
  4116d5:	jl     0x41170a
  4116d7:	mov    dl,0x4
  4116d9:	jmp    0x5811:0x41064cb6
  4116e0:	loop   0x41170f
  4116e2:	push   ecx
  4116e3:	push   cs
  4116e4:	cld    
  4116e5:	sbb    bl,ch
  4116e7:	je     0x4116c6
  4116e9:	ds mov ebx,0xf3ece34c
  4116ef:	aad    0x6d
  4116f1:	add    al,0x8d
  4116f3:	dec    edx
  4116f4:	es (bad) 
  4116f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f7:	jg     0x411742
  4116f9:	ror    BYTE PTR [eax-0x4e9e4ba4],0xcf
  411700:	push   0x9f53ca3c
  411705:	push   0x41c05893
  41170a:	mov    dh,0x1b
  41170c:	push   ds
  41170d:	sub    BYTE PTR [ebx+0x64fe341b],ch
  411713:	sub    edi,DWORD PTR [edx+0x6c]
  411716:	jno    0x411773
  411718:	push   ds
  411719:	lds    edx,FWORD PTR [edx]
  41171b:	cmp    edx,ebp
  41171d:	inc    eax
  41171e:	mov    al,BYTE PTR [ebp+0x287a8336]
  411724:	inc    edi
  411725:	sbb    ch,BYTE PTR ds:[edi-0x17]
  411729:	xlat   BYTE PTR ds:[ebx]
  41172a:	fsubrp st(0),st
  41172c:	jae    0x4116e2
  41172e:	add    DWORD PTR ds:0xd4dd660c,eax
  411734:	jne    0x411783
  411736:	stos   BYTE PTR es:[edi],al
  411737:	ins    DWORD PTR es:[edi],dx
  411738:	mov    ?,WORD PTR [esi+0x69]
  41173b:	pop    ecx
  41173c:	cld    
  41173d:	add    al,0xfe
  41173f:	sbb    al,ah
  411741:	hlt    
  411742:	fwait
  411743:	mov    ah,0x79
  411745:	mov    dl,0xd6
  411747:	test   DWORD PTR [ebp+0x4cc5c2cc],edi
  41174d:	xchg   BYTE PTR [edi+0x2424b6a3],al
  411753:	rcr    BYTE PTR [ecx+0x5d],1
  411756:	push   DWORD PTR [edi-0x60be97f1]
  41175c:	fldenv [ebp-0x48]
  41175f:	pop    ds
  411760:	ins    BYTE PTR es:[edi],dx
  411761:	push   0xffffffc7
  411763:	dec    ebx
  411764:	cmp    al,0xe9
  411766:	gs (bad) 
  411768:	out    0x71,eax
  41176a:	loop   0x41170e
  41176c:	test   dl,bh
  41176e:	mov    bl,dh
  411770:	pop    ss
  411771:	pop    ecx
  411772:	call   0xc26e5a75
  411777:	and    eax,0xe0db4eac
  41177c:	adc    DWORD PTR [eax-0x5f],0xffffff9f
  411780:	ret    0x955f
  411783:	mov    ebp,DWORD PTR [esi]
  411785:	sbb    dl,BYTE PTR [ecx-0x6979804a]
  41178b:	fcomp  QWORD PTR [edi-0x1e]
  41178e:	rol    esp,cl
  411790:	pop    eax
  411791:	std    
  411792:	out    dx,al
  411793:	jae    0x411781
  411795:	mov    ch,dl
  411797:	repnz push edi
  411799:	sbb    BYTE PTR [edx+0x7c1ea214],al
  41179f:	xor    dl,dl
  4117a1:	add    si,si
  4117a4:	les    ebp,FWORD PTR [ebx+0x627903b5]
  4117aa:	sbb    cl,BYTE PTR [edx-0x2b]
  4117ad:	sub    ecx,DWORD PTR [esi-0x15a94ec9]
  4117b3:	dec    esp
  4117b4:	adc    ch,BYTE PTR [eax]
  4117b6:	jle    0x4117ee
  4117b8:	adc    al,0xc9
  4117ba:	cmp    al,al
  4117bc:	inc    ebx
  4117bd:	and    al,BYTE PTR [ebx-0x1513b3c6]
  4117c3:	and    BYTE PTR [esi-0x4a],al
  4117c6:	stos   DWORD PTR es:[edi],eax
  4117c7:	pop    es
  4117c8:	jae    0x4117e8
  4117ca:	(bad)  
  4117cb:	adc    BYTE PTR [esi+ecx*8-0x55],dl
  4117cf:	aaa    
  4117d0:	and    DWORD PTR [ebp-0x6e],ebx
  4117d3:	into   
  4117d4:	push   ebx
  4117d5:	scas   al,BYTE PTR es:[edi]
  4117d6:	or     ah,BYTE PTR [ebp+0x6a3cabdc]
  4117dc:	fs retf 0xe26d
  4117e0:	jne    0x41182a
  4117e2:	push   ss
  4117e3:	mov    edx,0x3a9898d5
  4117e8:	in     al,dx
  4117e9:	test   DWORD PTR [esi+0x42],0x314833e1
  4117f0:	dec    edi
  4117f1:	arpl   WORD PTR [eax+ebx*1-0x584cd973],cx
  4117f8:	dec    esp
  4117f9:	es vmwrite ebp,esi
  4117fd:	dec    esi
  4117fe:	mov    esp,0xcaf40d9b
  411803:	(bad)  
  411804:	(bad)  
  411805:	or     DWORD PTR [ebx-0x6a707896],esp
  41180b:	cld    
  41180c:	pop    esi
  41180d:	clc    
  41180e:	ds gs lahf 
  411811:	mov    ebx,0x3bfe136
  411816:	cmc    
  411817:	lea    edi,[eax+0x7a]
  41181a:	sbb    bl,BYTE PTR [edi-0x11]
  41181d:	jns    0x4117e5
  41181f:	das    
  411820:	arpl   WORD PTR [ebx],sp
  411822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411823:	lock sahf 
  411825:	or     ecx,0x2eeea559
  41182b:	call   0x9831efee
  411830:	mov    al,ah
  411832:	push   ebp
  411833:	in     al,dx
  411834:	xchg   BYTE PTR [eax],bl
  411836:	ins    BYTE PTR es:[edi],dx
  411837:	add    eax,0xe18ecf82
  41183c:	in     al,dx
  41183d:	pop    esi
  41183e:	and    eax,0x216f304f
  411843:	pop    ebp
  411844:	sti    
  411845:	xor    eax,0xfad0e8bf
  41184a:	push   eax
  41184b:	mov    cl,0xbd
  41184d:	add    eax,0x54a1d8e9
  411852:	xor    al,BYTE PTR [edx+edx*1]
  411855:	pop    es
  411856:	cmp    ecx,DWORD PTR [edx-0x3a]
  411859:	push   eax
  41185a:	or     ch,BYTE PTR [ecx+0x28de1a73]
  411860:	sar    edx,0x42
  411863:	inc    ecx
  411864:	mov    esi,0x6af7eb43
  411869:	jg     0x4118a1
  41186b:	sub    eax,0x9a3e3a20
  411870:	or     al,BYTE PTR [ebx+ebp*4]
  411873:	enter  0xc1bd,0x7d
  411877:	pusha  
  411878:	mov    BYTE PTR [ebx+edx*4-0x6ae8dd0],dl
  41187f:	call   0xa7ff1bb6
  411884:	ds inc edx
  411886:	mov    ebx,0x76063e2e
  41188b:	push   eax
  41188c:	mov    ds:0xdfd2a5c1,eax
  411891:	inc    esp
  411892:	push   edx
  411893:	push   ds
  411894:	gs cld 
  411896:	push   cs
  411897:	push   eax
  411898:	cdq    
  411899:	mov    bh,0xcd
  41189b:	loope  0x41189e
  41189d:	into   
  41189e:	mov    ecx,0xa7b40452
  4118a3:	push   cs
  4118a4:	sbb    ebx,DWORD PTR [bx+si+0x77]
  4118a8:	ins    DWORD PTR es:[edi],dx
  4118a9:	push   0x3d
  4118ab:	outs   dx,BYTE PTR ds:[esi]
  4118ac:	je     0x4118be
  4118ae:	outs   dx,DWORD PTR ds:[esi]
  4118af:	ss dec eax
  4118b1:	jmp    0x4118d9
  4118b3:	inc    ebx
  4118b4:	clc    
  4118b5:	das    
  4118b6:	push   ds
  4118b7:	in     eax,0xcd
  4118b9:	fdivr  QWORD PTR [edi+ecx*1]
  4118bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118bd:	ss fwait
  4118bf:	iret   
  4118c0:	lock mov al,ds:0xcc27dc3b
  4118c6:	mov    bl,0x53
  4118c8:	adc    ecx,DWORD PTR [ebx-0x70ed0188]
  4118ce:	jmp    0xd6b2:0xc3d5b1a5
  4118d5:	xor    BYTE PTR [ecx-0x2b],bh
  4118d8:	bound  esp,QWORD PTR [edx+0x40]
  4118db:	adc    esp,DWORD PTR ds:0x1b2db5b2
  4118e1:	fcmovnb st,st(6)
  4118e3:	jno    0x411911
  4118e5:	jl     0x4118f3
  4118e7:	xor    DWORD PTR [ebx-0x6e],edi
  4118ea:	fisttp DWORD PTR [esi+0x1ce4af39]
  4118f0:	jnp    0x41188d
  4118f2:	stos   DWORD PTR es:[edi],eax
  4118f3:	and    BYTE PTR [edi],dl
  4118f5:	adc    dl,al
  4118f7:	sub    eax,0x7b3f9fce
  4118fc:	pop    eax
  4118fd:	mov    dl,0x52
  4118ff:	cld    
  411900:	pushf  
  411901:	fwait
  411902:	test   BYTE PTR ds:0xe13045e9,ah
  411908:	xor    edi,ebx
  41190a:	xor    DWORD PTR [ecx+0x52a88fdb],eax
  411910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411911:	fadd   QWORD PTR [eax]
  411913:	push   ss
  411914:	out    0x2,eax
  411916:	mov    bh,0x48
  411918:	clc    
  411919:	das    
  41191a:	mov    esi,0xf7ee3e7b
  41191f:	mov    bx,0x6641
  411923:	sbb    al,0x1a
  411925:	sbb    BYTE PTR [edx-0x4b],cl
  411928:	outs   dx,DWORD PTR ds:[esi]
  411929:	pop    edx
  41192a:	sub    eax,0x2a49f540
  41192f:	mov    ebx,0x18967d3f
  411934:	or     eax,0xe3ae9b87
  411939:	jge    0x4118fa
  41193b:	imul   esi,edi,0x212c3fae
  411941:	push   edi
  411942:	stos   DWORD PTR es:[edi],eax
  411943:	sbb    eax,0x71334651
  411948:	ins    DWORD PTR es:[edi],dx
  411949:	xchg   ebp,eax
  41194a:	xor    BYTE PTR [ebp-0x8],dh
  41194d:	data16 jb 0x411979
  411950:	aad    0x94
  411952:	inc    BYTE PTR [eax]
  411954:	inc    edx
  411955:	push   cs
  411956:	test   al,0x71
  411958:	retf   0xccba
  41195b:	sti    
  41195c:	cmp    al,0x43
  41195e:	cmp    DWORD PTR [edi-0x7570c50e],edi
  411964:	push   esp
  411965:	xchg   DWORD PTR [eax+eax*2-0x7e9621e9],ebp
  41196c:	imul   edi,edx,0x17f1d141
  411972:	js     0x41190e
  411974:	jl     0x411956
  411976:	fistp  QWORD PTR ds:0xf058f820
  41197c:	loopne 0x411908
  41197e:	add    eax,0xbf5a77ff
  411983:	sbb    bh,BYTE PTR [esi+0x7cdff77c]
  411989:	pop    edi
  41198a:	xchg   esp,eax
  41198b:	mov    edx,DWORD PTR [eax+0x7dd9760e]
  411991:	icebp  
  411992:	in     al,dx
  411993:	jmp    0x411967
  411995:	stc    
  411996:	mov    ecx,0x5809bedf
  41199b:	inc    edi
  41199c:	sub    cl,BYTE PTR [edx]
  41199e:	shr    BYTE PTR [edx-0x1f24333c],cl
  4119a4:	test   ebx,edx
  4119a6:	pop    es
  4119a7:	ins    DWORD PTR es:[edi],dx
  4119a8:	in     eax,0x18
  4119aa:	enter  0x7951,0xae
  4119ae:	aas    
  4119af:	push   edx
  4119b0:	push   eax
  4119b1:	pop    esp
  4119b2:	xchg   esi,eax
  4119b3:	mov    al,ds:0x74a30c79
  4119b8:	jae    0x41198f
  4119ba:	div    BYTE PTR [eax+ebx*1+0x61872b4b]
  4119c1:	sbb    eax,0xc060f472
  4119c6:	sbb    DWORD PTR [ecx+ebx*2],edi
  4119c9:	clc    
  4119ca:	aad    0x62
  4119cc:	scas   al,BYTE PTR es:[edi]
  4119cd:	fsubr  QWORD PTR [edx]
  4119cf:	push   cs
  4119d0:	cli    
  4119d1:	sbb    bh,0x2
  4119d4:	or     eax,0x268c9be9
  4119d9:	call   0x5341:0x2bae2ae0
  4119e0:	sub    BYTE PTR [edi-0x2a],cl
  4119e3:	mov    eax,0x37f17f4f
  4119e8:	aad    0xd7
  4119ea:	jo     0x4119e5
  4119ec:	ret    0xe901
  4119ef:	popf   
  4119f0:	popa   
  4119f1:	(bad)  
  4119f2:	int3   
  4119f3:	loopne 0x411a15
  4119f5:	mul    DWORD PTR [ebx+0x3d]
  4119f8:	test   bl,cl
  4119fa:	mov    dl,0x9f
  4119fc:	inc    esi
  4119fd:	jno    0x4119ef
  4119ff:	jbe    0x411a0f
  411a01:	dec    edi
  411a02:	mov    eax,0x2282427b
  411a07:	cmp    BYTE PTR [ecx],dh
  411a09:	mov    eax,ds:0x4f1e8d43
  411a0e:	sahf   
  411a0f:	mov    ds:0x7715357b,al
  411a14:	push   ds
  411a15:	add    al,0xae
  411a17:	js     0x411a27
  411a19:	dec    esp
  411a1a:	je     0x411a59
  411a1c:	cmp    BYTE PTR [ebp+0x407834a9],ah
  411a22:	xchg   esp,edi
  411a24:	push   ss
  411a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a26:	out    dx,al
  411a27:	and    ebp,DWORD PTR [esi-0x1a]
  411a2a:	sbb    eax,0x6921627f
  411a2f:	out    dx,al
  411a30:	fimul  WORD PTR [esi]
  411a32:	add    BYTE PTR [esi],cl
  411a34:	xchg   ebp,eax
  411a35:	sbb    BYTE PTR [eax+0x26],cl
  411a38:	shl    DWORD PTR [edx],1
  411a3a:	adc    eax,0x1c2f5279
  411a3f:	xchg   esi,eax
  411a40:	ins    DWORD PTR es:[edi],dx
  411a41:	lock popf 
  411a43:	clc    
  411a44:	popf   
  411a45:	mov    al,ds:0x3993f0a2
  411a4a:	sbb    bh,BYTE PTR [esi+0x2e76e603]
  411a50:	cli    
  411a51:	cdq    
  411a52:	mov    esi,0x518c5b87
  411a57:	and    DWORD PTR [ebx+0x11],ecx
  411a5a:	mov    BYTE PTR [edi+0x29],bh
  411a5d:	mov    ebx,esp
  411a5f:	sub    ebx,DWORD PTR [edx-0x7d]
  411a62:	mov    esi,0xb2e40945
  411a67:	jecxz  0x411a08
  411a69:	push   es
  411a6a:	mov    es,WORD PTR ds:0x878092dc
  411a70:	add    al,0xfd
  411a72:	cli    
  411a73:	sbb    DWORD PTR ds:0xd3785512,0xffffffad
  411a7a:	lds    eax,FWORD PTR [edx+0x61b482b6]
  411a80:	jb     0x411a20
  411a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a83:	iret   
  411a84:	and    al,0xfc
  411a86:	mov    ecx,0xdbadc554
  411a8b:	xchg   esi,eax
  411a8c:	ja     0x411a99
  411a8e:	pop    esi
  411a8f:	int3   
  411a90:	and    eax,0x7efd9ce2
  411a95:	dec    eax
  411a96:	popf   
  411a97:	cmp    dl,BYTE PTR [edx-0x23]
  411a9a:	push   esi
  411a9b:	mov    ch,0xec
  411a9d:	leave  
  411a9e:	popa   
  411a9f:	aaa    
  411aa0:	call   0xd569a2fc
  411aa5:	or     BYTE PTR [esp+eiz*2],ah
  411aa8:	hlt    
  411aa9:	pop    ds
  411aaa:	in     al,dx
  411aab:	clc    
  411aac:	es es gs int3 
  411ab0:	pop    ecx
  411ab1:	loopne 0x411a55
  411ab3:	or     al,0xf7
  411ab5:	cs stos DWORD PTR es:[edi],eax
  411ab7:	cmp    al,0xfc
  411ab9:	aam    0xc8
  411abb:	or     bh,BYTE PTR [esi+ecx*1-0x4c]
  411abf:	push   esi
  411ac0:	push   eax
  411ac1:	sub    al,0xfa
  411ac3:	jmp    0x87b5de6d
  411ac8:	popa   
  411ac9:	or     al,0x20
  411acb:	pop    ebx
  411acc:	pop    es
  411acd:	push   cs
  411ace:	mov    ebp,0xc46be941
  411ad3:	pusha  
  411ad4:	rcl    DWORD PTR [ecx+0x52],1
  411ad7:	aad    0x2d
  411ad9:	test   DWORD PTR [edx],ebx
  411adb:	sub    al,0x55
  411add:	push   ds
  411ade:	int    0x12
  411ae0:	pop    ss
  411ae1:	mov    ah,0x8c
  411ae3:	(bad)  
  411ae4:	lods   eax,DWORD PTR ds:[esi]
  411ae5:	outs   dx,BYTE PTR ds:[esi]
  411ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae7:	mov    bh,0xe2
  411ae9:	out    0xc3,al
  411aeb:	sbb    BYTE PTR [ecx+0x7e],cl
  411aee:	mov    ch,0x8f
  411af0:	or     ecx,ebp
  411af2:	xchg   ebp,eax
  411af3:	sub    eax,0x56fc2444
  411af8:	mov    ecx,0xa5b5ffd6
  411afd:	pop    ebx
  411afe:	mov    gs,WORD PTR [eax-0x18007271]
  411b04:	push   ds
  411b05:	mov    al,0x52
  411b07:	sub    eax,0xae881995
  411b0c:	sub    eax,DWORD PTR [edx+0x4d]
  411b0f:	xor    cl,dh
  411b11:	pop    ebx
  411b12:	(bad)  
  411b13:	mov    ds:0x2b743d35,al
  411b18:	loop   0x411b6f
  411b1a:	stos   DWORD PTR es:[edi],eax
  411b1b:	cwde   
  411b1c:	jne    0x411b7b
  411b1e:	and    eax,0xdb1de873
  411b23:	int3   
  411b24:	jns    0x411b98
  411b26:	ins    BYTE PTR es:[edi],dx
  411b27:	xchg   DWORD PTR [eax-0x53a2e9e4],eax
  411b2d:	sbb    BYTE PTR [eax-0x7a26fa0c],al
  411b33:	inc    edi
  411b34:	push   edx
  411b35:	cmp    DWORD PTR [edi],edi
  411b37:	dec    edi
  411b38:	xor    edi,esp
  411b3a:	and    eax,0x910f6c75
  411b3f:	jge    0x411b7e
  411b41:	rcl    BYTE PTR [ecx+0x2f8d322a],cl
  411b47:	retf   
  411b48:	cli    
  411b49:	enter  0xe81d,0xd6
  411b4d:	sub    al,0x6
  411b4f:	push   ebx
  411b50:	cmp    eax,0xadb669a0
  411b55:	xchg   esp,eax
  411b56:	call   0xbd1b:0xc3567467
  411b5d:	dec    ebx
  411b5e:	fs mov dl,dl
  411b61:	iret   
  411b62:	dec    edx
  411b63:	(bad)  
  411b64:	add    bl,BYTE PTR [ecx]
  411b66:	andps  xmm3,XMMWORD PTR [ebx-0x56]
  411b6a:	mov    dh,0x5d
  411b6c:	adc    eax,0x35c37272
  411b71:	stos   BYTE PTR es:[edi],al
  411b72:	cld    
  411b73:	add    al,BYTE PTR [ebx+ecx*2-0x50]
  411b77:	and    al,0x37
  411b79:	pop    edi
  411b7a:	lds    edx,FWORD PTR [edx]
  411b7c:	lods   al,BYTE PTR ds:[esi]
  411b7d:	jg     0x411b32
  411b7f:	inc    edx
  411b80:	xchg   BYTE PTR [ebp-0x39],dl
  411b83:	jge    0x411bc5
  411b85:	xor    BYTE PTR [edi],ah
  411b87:	or     esi,edx
  411b89:	cld    
  411b8a:	mov    ds:0xcf5d0dc3,eax
  411b8f:	mov    esp,0x457f624c
  411b94:	cmp    BYTE PTR [ecx-0x1f739641],ch
  411b9a:	stos   BYTE PTR es:[edi],al
  411b9b:	sub    al,0x65
  411b9d:	mov    ah,0x9b
  411b9f:	popf   
  411ba0:	ins    DWORD PTR es:[edi],dx
  411ba1:	mov    al,dh
  411ba3:	mov    esi,0xe7ff1864
  411ba8:	cmp    eax,0x9e1592e6
  411bad:	adc    BYTE PTR [ebx+0x23],0xa2
  411bb1:	lahf   
  411bb2:	xor    edi,esp
  411bb4:	js     0x411c22
  411bb6:	fidivr WORD PTR [esi]
  411bb8:	int    0x82
  411bba:	out    dx,eax
  411bbb:	data16 fstp TBYTE PTR [ebp-0x2d2e90de]
  411bc2:	inc    edx
  411bc3:	and    esi,esp
  411bc5:	mov    ds:0x4ed50dfb,al
  411bca:	xchg   BYTE PTR [eax-0xd158a],bh
  411bd0:	sbb    ecx,edi
  411bd2:	or     DWORD PTR es:[ebx],esi
  411bd5:	sub    cl,BYTE PTR [esi]
  411bd7:	mov    ecx,esp
  411bd9:	mov    esi,0x3baa3d61
  411bde:	and    DWORD PTR [ebx+ebp*2-0x7d],0x36
  411be3:	nop
  411be4:	push   eax
  411be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be6:	sub    al,0xfb
  411be8:	pusha  
  411be9:	pop    esp
  411bea:	inc    edx
  411beb:	rcl    DWORD PTR [ebp+0xb],0x31
  411bef:	sbb    ah,BYTE PTR [ecx+0x1f7d6fe3]
  411bf5:	xor    edi,esp
  411bf7:	shr    BYTE PTR [ecx],0xc8
  411bfa:	enter  0x6468,0x61
  411bfe:	pop    ebx
  411bff:	not    edi
  411c01:	mov    al,ds:0xe619da6a
  411c06:	push   ebx
  411c07:	lds    edi,FWORD PTR [edx+0x2e]
  411c0a:	jmp    0x46d1:0xf0118306
  411c11:	fwait
  411c12:	inc    edx
  411c13:	sub    al,0x75
  411c15:	pop    ecx
  411c16:	daa    
  411c17:	fnsave [edi+eax*4-0x47d01a7c]
  411c1e:	fnstcw WORD PTR [ecx-0xc]
  411c21:	cld    
  411c22:	xchg   ebp,eax
  411c23:	add    al,0x17
  411c25:	xor    DWORD PTR [esi],esp
  411c27:	fisub  DWORD PTR [esi+0x8536b99]
  411c2d:	pop    ds
  411c2e:	mov    ebx,0x89b62725
  411c33:	or     eax,DWORD PTR [ebx]
  411c35:	pop    ds
  411c36:	adc    edx,ebp
  411c38:	and    ch,BYTE PTR [edx-0x5]
  411c3b:	pop    eax
  411c3c:	pop    edi
  411c3d:	cmp    DWORD PTR [ebp+0x7a],ebx
  411c40:	pusha  
  411c41:	jmp    0x411cad
  411c43:	cdq    
  411c44:	(bad)
  411c47:	scas   al,BYTE PTR es:[edi]
  411c48:	dec    ebx
  411c49:	push   0xfffffff1
  411c4b:	lahf   
  411c4c:	(bad)  [esi+esi*2]
  411c4f:	iret   
  411c50:	call   0xe8ee:0x46c3e2f4
  411c57:	clc    
  411c58:	adc    bh,0x83
  411c5b:	mov    es,WORD PTR [edx]
  411c5d:	jae    0x411be7
  411c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c60:	xchg   ebp,eax
  411c61:	fidiv  DWORD PTR [esi+0x64]
  411c64:	xor    ah,0x23
  411c67:	bound  ecx,QWORD PTR [ebp-0x8e35b42]
  411c6d:	bound  ebp,QWORD PTR [ebp-0x7e]
  411c70:	fisubr WORD PTR [eax]
  411c72:	ins    BYTE PTR es:[edi],dx
  411c73:	dec    esi
  411c74:	add    BYTE PTR [edx-0x18],ah
  411c77:	lahf   
  411c78:	cs pushf 
  411c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7b:	mov    edi,0x28d0efb9
  411c80:	or     DWORD PTR [ebp-0x66],esi
  411c83:	(bad)  
  411c84:	call   0x32e3:0xdda386b0
  411c8b:	aas    
  411c8c:	jno    0x411c6f
  411c8e:	cld    
  411c8f:	rcl    BYTE PTR [ebp-0x6e],cl
  411c92:	lds    edx,FWORD PTR [edx-0x4e5161bf]
  411c98:	mov    dl,0x8d
  411c9a:	call   0xc771:0xb460271d
  411ca1:	js     0x411cbd
  411ca3:	adc    eax,0x39dc1e3
  411ca8:	pop    ebx
  411ca9:	push   ds
  411caa:	jl     0x411c8e
  411cac:	(bad)  
  411cad:	loope  0x411c76
  411caf:	sahf   
  411cb0:	jmp    0x95417a87
  411cb5:	add    cl,dh
  411cb7:	clc    
  411cb8:	(bad)  
  411cb9:	mov    dh,0x3d
  411cbb:	and    DWORD PTR [eax-0x12911ed8],0x86a9146a
  411cc5:	cmovno ecx,esp
  411cc8:	fnstenv [ebp+0x14]
  411ccb:	or     ebx,DWORD PTR [ecx]
  411ccd:	sbb    DWORD PTR [ecx],esp
  411ccf:	mov    esi,?
  411cd1:	imul   eax,ecx,0xe6e20609
  411cd7:	icebp  
  411cd8:	or     al,0x52
  411cda:	out    0x42,eax
  411cdc:	adc    DWORD PTR [eax+0x12e5648b],ecx
  411ce2:	(bad)  
  411ce4:	fst    QWORD PTR [ebp+0x6a]
  411ce7:	(bad)  
  411ce8:	adc    ebp,edi
  411cea:	mov    dl,0x33
  411cec:	sub    al,0xfb
  411cee:	test   al,0xb
  411cf0:	fist   DWORD PTR [edi]
  411cf2:	xchg   edi,eax
  411cf3:	out    dx,eax
  411cf4:	mov    dl,0xf
  411cf6:	xor    DWORD PTR [ebp-0xe],esp
  411cf9:	push   esp
  411cfa:	cwde   
  411cfb:	push   edi
  411cfc:	pop    esp
  411cfd:	repnz mov edx,0xd2d1e459
  411d03:	lods   eax,DWORD PTR ds:[esi]
  411d04:	pop    edx
  411d05:	pop    edx
  411d06:	ds fcmovnu st,st(5)
  411d09:	iret   
  411d0a:	mov    edi,DWORD PTR [ebx+0x6c]
  411d0d:	adc    dl,ah
  411d0f:	push   ss
  411d10:	push   es
  411d11:	xor    DWORD PTR [ebp-0x67],0x87321f31
  411d18:	cwde   
  411d19:	jno    0x411d1e
  411d1b:	xor    BYTE PTR [edx+edi*2],0xe0
  411d1f:	daa    
  411d20:	(bad)  
  411d21:	std    
  411d22:	jbe    0x411d1d
  411d24:	and    DWORD PTR [ebx-0x46c0c22f],0xffffffae
  411d2b:	lea    esi,[esi+0x0]
  411d2e:	adc    DWORD PTR [edi-0x5a],0xdc4d6114
  411d35:	add    DWORD PTR [ebp-0x28],eax
  411d38:	inc    edx
  411d39:	sbb    ebp,DWORD PTR [esi]
  411d3b:	arpl   bp,dx
  411d3d:	mov    ebp,ebp
  411d3f:	mov    ecx,0xbcc4615b
  411d44:	pop    esp
  411d45:	jle    0x411cd4
  411d47:	iret   
  411d48:	fistp  WORD PTR [ebp+0x213f26da]
  411d4e:	call   0xdcc1:0xe0e56dbf
  411d55:	sbb    eax,0xe46139bc
  411d5a:	int    0x1
  411d5c:	scas   eax,DWORD PTR es:[edi]
  411d5d:	jb     0x411d82
  411d5f:	and    DWORD PTR [ebp-0x68],esp
  411d62:	or     ebp,DWORD PTR [eax]
  411d64:	push   eax
  411d65:	push   esp
  411d66:	mov    bh,0xd4
  411d68:	ret    0x49a
  411d6b:	pushf  
  411d6c:	rcr    BYTE PTR [edi+0x454d6578],1
  411d72:	(bad)  
  411d73:	cs stos DWORD PTR es:[edi],eax
  411d75:	dec    eax
  411d76:	loop   0x411d84
  411d78:	ins    BYTE PTR es:[edi],dx
  411d79:	inc    ebp
  411d7a:	jp     0x411d81
  411d7c:	jo     0x411d00
  411d7e:	pop    ebx
  411d7f:	inc    esi
  411d80:	jl     0x411da2
  411d82:	jle    0x411d80
  411d84:	push   ecx
  411d85:	pop    esp
  411d86:	or     DWORD PTR [ecx+0x2be80a5c],eax
  411d8c:	imul   ecx,esi,0xa6b908ad
  411d92:	ret    0x5a41
  411d95:	adc    ebp,DWORD PTR [ebx-0x69895a01]
  411d9b:	xchg   bl,ch
  411d9d:	das    
  411d9e:	in     eax,dx
  411d9f:	sub    ebp,DWORD PTR [eax+0x1911c0d4]
  411da5:	sub    ah,BYTE PTR [ebx+0x53]
  411da8:	push   ds
  411da9:	ss int3 
  411dab:	popf   
  411dac:	adc    eax,0xc03edc2e
  411db1:	rol    al,0xc0
  411db4:	rol    al,0xc0
  411db7:	rol    al,0xc0
  411dba:	rol    al,0xc0
  411dbd:	rol    al,0xc0
  411dc0:	rol    al,0xc0
  411dc3:	rol    al,0xc0
  411dc6:	rol    al,0xc0
  411dc9:	rol    al,0xc0
  411dcc:	rol    al,0xc0
  411dcf:	rol    al,0xc0
  411dd2:	rol    al,0xc0
  411dd5:	rol    al,0xc0
  411dd8:	rol    al,0xc0
  411ddb:	rol    al,0xc0
  411dde:	rol    al,0xc0
  411de1:	rol    al,0xc0
  411de4:	rol    al,0xc0
  411de7:	rol    al,0xc0
  411dea:	rol    al,0xc0
  411ded:	rol    al,0xc0
  411df0:	rol    al,0xc0
  411df3:	rol    al,0xc0
  411df6:	rol    al,0x27
  411df9:	into   
  411dfa:	retf   0x833
  411dfd:	and    eax,0xcce7fef5
  411e02:	xchg   ecx,eax
  411e03:	inc    eax
  411e04:	loop   0x411e52
  411e06:	xchg   ebp,eax
  411e07:	stc    
  411e08:	dec    esi
  411e09:	pop    esp
  411e0a:	jbe    0x411dc3
  411e0c:	outs   dx,BYTE PTR ds:[esi]
  411e0d:	or     ecx,edi
  411e0f:	inc    ecx
  411e10:	jae    0x411d96
  411e12:	mov    bl,0x8a
  411e14:	and    al,0x2
  411e16:	jbe    0x411e84
  411e18:	ds mov ah,0x53
  411e1b:	xchg   esi,eax
  411e1c:	addr16 and al,0xde
  411e1f:	test   al,0xa1
  411e21:	imul   eax,DWORD PTR [ebp+0x38],0x76
  411e25:	adc    al,0x4f
  411e27:	pop    es
  411e28:	sahf   
  411e29:	ret    0x382d
  411e2c:	inc    ebx
  411e2d:	push   ebp
  411e2e:	aaa    
  411e2f:	xor    eax,0x59b7d8f9
  411e34:	ret    0x3645
  411e37:	idiv   al
  411e39:	test   DWORD PTR [esi-0x54a33aa7],esi
  411e3f:	push   edi
  411e40:	cdq    
  411e41:	fcom   QWORD PTR [esi]
  411e43:	outs   dx,DWORD PTR ds:[esi]
  411e44:	add    BYTE PTR [eax-0x11],cl
  411e47:	adc    al,0x21
  411e49:	ins    BYTE PTR es:[edi],dx
  411e4a:	xchg   BYTE PTR [eax],ch
  411e4c:	push   eax
  411e4d:	push   ds
  411e4e:	cli    
  411e4f:	aaa    
  411e50:	jge    0x411ea1
  411e52:	sub    al,0x99
  411e54:	or     BYTE PTR [ecx+ebp*1-0x66],0x10
  411e59:	xchg   ebp,eax
  411e5a:	int3   
  411e5b:	in     al,dx
  411e5c:	push   cs
  411e5d:	xchg   esp,eax
  411e5e:	cs popa 
  411e60:	add    DWORD PTR [edx+0x1a],eax
  411e63:	(bad)  
  411e64:	(bad)  
  411e65:	or     ecx,DWORD PTR [esi-0x75]
  411e68:	mov    ecx,0x3429268
  411e6d:	pushf  
  411e6e:	scas   al,BYTE PTR es:[edi]
  411e6f:	fcomp  QWORD PTR [eax+eax*2]
  411e72:	hlt    
  411e73:	mov    ebx,0x903706ce
  411e78:	or     eax,0xd93376c7
  411e7d:	outs   dx,BYTE PTR ds:[esi]
  411e7e:	loop   0x411e2f
  411e80:	clc    
  411e81:	inc    ebx
  411e82:	imul   ebx,DWORD PTR [eax],0xb16c1a61
  411e88:	call   0x3427ebda
  411e8d:	mov    BYTE PTR [eax],al
  411e8f:	stos   DWORD PTR es:[edi],eax
  411e90:	cmc    
  411e91:	(bad)  
  411e92:	cld    
  411e93:	fnstcw WORD PTR [esi+0x60]
  411e96:	(bad)  
  411e97:	js     0x411e6c
  411e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9a:	(bad)  [eax+0x10484e16]
  411ea0:	repz mov ds:0x4b741f96,eax
  411ea6:	xor    esi,DWORD PTR [edx-0x27]
  411ea9:	test   cl,0x4d
  411eac:	nop
  411ead:	push   ds
  411eae:	pop    esp
  411eaf:	cdq    
  411eb0:	test   BYTE PTR ds:0x62054d1d,dh
  411eb6:	out    0x48,al
  411eb8:	pop    ecx
  411eb9:	ret    
  411eba:	sbb    ebx,DWORD PTR [eax-0x6e]
  411ebd:	push   esp
  411ebe:	push   ebx
  411ebf:	inc    ebp
  411ec0:	add    DWORD PTR [ebx],0xffffffc4
  411ec3:	mov    ch,BYTE PTR [esi-0x1f]
  411ec6:	inc    ebp
  411ec7:	gs aas 
  411ec9:	xlat   BYTE PTR ds:[ebx]
  411eca:	mov    edx,0x3d326d8e
  411ecf:	push   0x997a8419
  411ed4:	add    DWORD PTR [esi+0x1b61768e],ebx
  411eda:	in     al,0x4
  411edc:	mov    cl,0xd2
  411ede:	sub    edi,ecx
  411ee0:	sub    ah,BYTE PTR [ebx]
  411ee2:	push   ds
  411ee3:	loopne 0x411ea2
  411ee5:	les    ecx,FWORD PTR [edx]
  411ee7:	int3   
  411ee8:	dec    ebx
  411ee9:	sub    al,0xd5
  411eeb:	fucomi st,st(0)
  411eed:	mov    es,edi
  411eef:	mov    bh,0xeb
  411ef2:	clc    
  411ef3:	jae    0x411f5a
  411ef5:	or     eax,0x42ca9a3e
  411efa:	enter  0x1483,0x37
  411efe:	lock shl DWORD PTR [ebp-0x56],cl
  411f02:	ficomp WORD PTR [ebx]
  411f04:	mov    ebp,0x22b2ff6f
  411f09:	and    eax,0xf6d83d9
  411f0e:	mov    dh,0x1a
  411f10:	add    al,0x81
  411f12:	stos   DWORD PTR es:[edi],eax
  411f13:	mov    esp,0x954f689
  411f18:	(bad)  
  411f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f1a:	aas    
  411f1b:	cmp    eax,0x22bbfad5
  411f20:	into   
  411f21:	mov    ah,0x93
  411f23:	aad    0x32
  411f25:	mov    ebp,0xa023cf9d
  411f2a:	and    al,0x9c
  411f2c:	pop    ebx
  411f2d:	adc    DWORD PTR [eax-0x719b0f51],ebp
  411f33:	mov    esi,0xf820d005
  411f38:	adc    eax,0xe5226562
  411f3d:	mov    ch,0xf4
  411f3f:	fmulp  st(1),st
  411f41:	fsubr  st,st(3)
  411f43:	mov    eax,ds:0x6808c365
  411f48:	outs   dx,BYTE PTR cs:[esi]
  411f4a:	xor    dl,BYTE PTR [esi-0x18]
  411f4d:	imul   esp,ecx,0xffffffa3
  411f50:	addr16 pusha 
  411f52:	push   ss
  411f53:	(bad)  
  411f54:	scas   al,BYTE PTR es:[edi]
  411f55:	sbb    DWORD PTR [edx-0x5f],edx
  411f58:	loope  0x411faf
  411f5a:	jle    0x411fcc
  411f5c:	bound  ecx,QWORD PTR [edi-0x2c664d04]
  411f62:	shl    BYTE PTR [edx+eiz*1-0x1a7ab13e],0x6e
  411f6a:	rol    DWORD PTR [esp+edx*2],1
  411f6d:	xchg   ebp,edi
  411f6f:	ja     0x411fc7
  411f71:	es push ecx
  411f73:	push   es
  411f74:	push   0x19
  411f76:	inc    esi
  411f77:	or     BYTE PTR [edi],0x21
  411f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f7b:	cmp    BYTE PTR [ebp-0x1e],al
  411f7e:	jns    0x411f5c
  411f80:	outs   dx,DWORD PTR ds:[esi]
  411f81:	push   ecx
  411f82:	jns    0x411f9e
  411f84:	ins    DWORD PTR es:[edi],dx
  411f85:	mov    BYTE PTR [ecx-0x78d60c34],dl
  411f8b:	lds    edx,FWORD PTR [edx+0x31]
  411f8e:	sbb    ebx,edx
  411f90:	sbb    esi,edx
  411f92:	dec    edx
  411f93:	and    DWORD PTR [esi],ecx
  411f95:	add    ecx,esi
  411f97:	outs   dx,BYTE PTR ds:[esi]
  411f98:	(bad)  
  411f99:	out    dx,eax
  411f9a:	push   ss
  411f9b:	jge    0x411fb2
  411f9d:	and    dl,BYTE PTR [edi-0x7ced58b8]
  411fa3:	mov    eax,0xe6b2415e
  411fa8:	ins    BYTE PTR es:[edi],dx
  411fa9:	mov    es,WORD PTR ds:[ebx]
  411fac:	popa   
  411fad:	sbb    ah,bh
  411faf:	ja     0x412003
  411fb1:	mov    ebx,DWORD PTR [edx-0x324d20fb]
  411fb7:	das    
  411fb8:	adc    BYTE PTR es:[ebp-0x2fe64c36],bh
  411fbf:	inc    ebx
  411fc0:	cmp    DWORD PTR ss:[ecx],0x52f446dd
  411fc7:	(bad)  
  411fc8:	int3   
  411fc9:	sbb    bl,cl
  411fcb:	pop    ecx
  411fcc:	xor    BYTE PTR [ebx-0x72b9386b],cl
  411fd2:	lar    esp,di
  411fd5:	cli    
  411fd6:	adc    edx,DWORD PTR [edx]
  411fd8:	scas   al,BYTE PTR es:[edi]
  411fd9:	pop    ebx
  411fda:	(bad)  
  411fdb:	push   ebp
  411fdc:	sub    DWORD PTR [eax+0x46],esp
  411fdf:	xchg   BYTE PTR [esi],dh
  411fe1:	imul   esi,ecx,0x2fd3e3fa
  411fe7:	pop    ds
  411fe8:	push   ebx
  411fe9:	jb     0x41202a
  411feb:	jge    0x412034
  411fed:	cmp    DWORD PTR [ebx],0xffffffa7
  411ff0:	leave  
  411ff1:	int    0xac
  411ff3:	xchg   edi,eax
  411ff4:	xchg   ebx,eax
  411ff5:	adc    BYTE PTR [eax],al
  411ff7:	arpl   WORD PTR [ebx-0x7a],bx
  411ffa:	hlt    
  411ffb:	aad    0x18
  411ffd:	inc    ecx
  411ffe:	jle    0x412030
  412000:	dec    eax
  412001:	mov    esp,0xfdd9b922
  412006:	xlat   BYTE PTR ds:[ebx]
  412007:	add    eax,DWORD PTR [eax+0x580df08]
  41200d:	jno    0x412018
  41200f:	imul   edx,DWORD PTR [ebp+0x3a],0x23
  412013:	scas   eax,DWORD PTR es:[edi]
  412014:	je     0x411fc1
  412016:	shl    BYTE PTR [ecx],1
  412018:	aam    0xd2
  41201a:	sub    DWORD PTR [edi-0x7109d528],esi
  412020:	pop    eax
  412021:	aam    0x8a
  412023:	int3   
  412024:	rcr    BYTE PTR [eax-0x54],cl
  412027:	and    al,0x63
  412029:	data16 xor dh,al
  41202c:	loop   0x412072
  41202e:	push   edi
  41202f:	adc    ecx,DWORD PTR [edi+0x2c]
  412032:	mov    esi,0x24cd264e
  412037:	fidivr DWORD PTR [eax]
  412039:	push   edi
  41203a:	aam    0x50
  41203c:	lahf   
  41203d:	daa    
  41203e:	stos   BYTE PTR es:[edi],al
  41203f:	jbe    0x41208c
  412041:	fistp  DWORD PTR [edx-0x4ae3713]
  412047:	mov    edi,0x5869fa39
  41204c:	xchg   edi,eax
  41204d:	jb     0x41201d
  41204f:	and    BYTE PTR [ebx+edx*2-0x20],dh
  412053:	or     al,0xbd
  412055:	pop    edx
  412056:	xor    DWORD PTR [ecx],ebx
  412058:	repnz sbb DWORD PTR [edx],edi
  41205b:	sbb    cl,BYTE PTR [ecx+0x1a]
  41205e:	into   
  41205f:	gs daa 
  412061:	ret    
  412062:	pop    ss
  412063:	sub    dl,BYTE PTR [edx+ebx*4-0x52]
  412067:	cs not DWORD PTR es:[esi+0x2f613fd5]
  41206f:	fld    QWORD PTR ds:0x212584ca
  412075:	add    DWORD PTR [ebp+0x148e020f],ebp
  41207b:	jl     0x412081
  41207d:	cbw    
  41207f:	sahf   
  412080:	div    bh
  412082:	xor    ebx,eax
  412084:	inc    ecx
  412085:	int3   
  412086:	loope  0x4120db
  412088:	inc    edi
  412089:	and    edi,DWORD PTR [ecx+0x69d45083]
  41208f:	data16 scas al,BYTE PTR es:[edi]
  412091:	ss je  0x4120c1
  412094:	push   cs
  412095:	pop    ds
  412096:	mov    bh,0xd9
  412098:	push   edi
  412099:	clc    
  41209a:	repz ret 
  41209c:	pop    ecx
  41209d:	and    al,ch
  41209f:	xor    eax,DWORD PTR [ecx-0x2db76a71]
  4120a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a6:	push   edx
  4120a7:	jns    0x41208c
  4120a9:	xor    BYTE PTR [ecx+eiz*8],ch
  4120ac:	les    ebp,FWORD PTR [eax-0x1]
  4120af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b0:	pop    ecx
  4120b1:	or     cl,BYTE PTR [ecx-0x172c3e92]
  4120b7:	sbb    al,0x82
  4120b9:	sub    BYTE PTR [ecx+0x1a705d01],bh
  4120bf:	fadd   QWORD PTR [esi+0x5d]
  4120c2:	or     ah,BYTE PTR fs:[esi+edi*2-0x50]
  4120c7:	sub    eax,0x5d215766
  4120cc:	je     0x412055
  4120ce:	xchg   edx,eax
  4120cf:	dec    edi
  4120d0:	sar    cl,cl
  4120d2:	adc    ecx,DWORD PTR [ebp-0x18]
  4120d5:	mov    WORD PTR [edx-0x72fbaad],ds
  4120db:	leave  
  4120dc:	nop
  4120dd:	add    bh,BYTE PTR [eax]
  4120df:	scas   al,BYTE PTR es:[edi]
  4120e0:	add    al,0x5c
  4120e2:	dec    esp
  4120e3:	into   
  4120e4:	push   0x75
  4120e6:	aaa    
  4120e7:	adc    al,0xf1
  4120e9:	(bad)  
  4120ea:	retf   
  4120eb:	stos   DWORD PTR es:[edi],eax
  4120ec:	mov    esi,0xb6c41bf
  4120f1:	fldenv [eax-0x58]
  4120f4:	fstp   TBYTE PTR [esi]
  4120f6:	jmp    0xa8692c1f
  4120fb:	sbb    DWORD PTR [ecx],edx
  4120fd:	push   cs
  4120fe:	xchg   ebp,eax
  4120ff:	cmp    ebp,DWORD PTR [edi]
  412101:	jne    0x41209a
  412103:	mul    DWORD PTR [ecx+0x24]
  412106:	pop    es
  412107:	ja     0x4120b0
  412109:	ds inc ebp
  41210b:	jecxz  0x412135
  41210d:	adc    cl,ch
  41210f:	push   eax
  412110:	iret   
  412111:	das    
  412112:	inc    BYTE PTR [ebx+0x451ce261]
  412118:	or     ch,BYTE PTR [eax-0x3968f8e3]
  41211e:	in     eax,0x42
  412120:	aam    0xe1
  412122:	addr16 push 0xfffffff1
  412125:	lahf   
  412126:	dec    ebx
  412127:	(bad)  
  412128:	sar    BYTE PTR [eax+0x2a0db524],1
  41212e:	dec    esi
  41212f:	push   ecx
  412130:	sub    ecx,ebp
  412132:	jbe    0x412174
  412134:	test   eax,0x29358538
  412139:	dec    ecx
  41213a:	mov    dh,0x62
  41213c:	inc    ecx
  41213d:	sbb    edi,edi
  41213f:	adc    BYTE PTR [esi+0x60],dh
  412142:	or     eax,0xfa1a18e3
  412147:	adc    al,0xb1
  412149:	std    
  41214a:	mov    dh,0x1a
  41214c:	push   0x4ef9d2f2
  412151:	fwait
  412152:	cmp    edi,edx
  412154:	pop    ss
  412155:	and    al,0x3a
  412157:	or     eax,0x884fbdc8
  41215c:	popa   
  41215d:	sbb    bl,al
  41215f:	inc    edx
  412160:	pop    es
  412161:	shl    DWORD PTR [esi+0x6ca2c1c9],1
  412167:	sub    eax,0x8b2c3581
  41216c:	(bad)  
  41216d:	sub    eax,edi
  41216f:	mov    ah,0xa2
  412171:	and    DWORD PTR ds:0xcfa00d9f,edx
  412177:	ret    
  412178:	sahf   
  412179:	cld    
  41217a:	mov    esp,0x2390bd5f
  41217f:	fdiv   DWORD PTR [esi]
  412181:	add    bh,dl
  412183:	inc    esi
  412184:	inc    eax
  412185:	jnp    0x412184
  412187:	pop    eax
  412188:	ret    0xc5e0
  41218b:	leave  
  41218c:	push   esp
  41218d:	(bad)
  412191:	push   0x215820b4
  412196:	push   edi
  412197:	push   0x48556f69
  41219c:	daa    
  41219d:	inc    edx
  41219e:	iret   
  41219f:	pop    eax
  4121a0:	leave  
  4121a1:	mov    ecx,0xc0d6f7af
  4121a6:	push   ecx
  4121a7:	push   eax
  4121a8:	stc    
  4121a9:	into   
  4121aa:	mov    al,ds:0x465c182
  4121af:	adc    ch,BYTE PTR [eax]
  4121b1:	jo     0x41216f
  4121b3:	jbe    0x41218f
  4121b5:	aad    0xaa
  4121b7:	and    BYTE PTR ds:0x471b3f82,al
  4121bd:	adc    al,bl
  4121bf:	stos   DWORD PTR es:[edi],eax
  4121c0:	cs xchg edi,eax
  4121c2:	push   ds
  4121c3:	lahf   
  4121c4:	pop    ebx
  4121c5:	jl     0x4121c0
  4121c7:	test   BYTE PTR [eax+eiz*2],bh
  4121ca:	mov    ds:0xeb21d0bf,al
  4121cf:	push   ds
  4121d0:	aaa    
  4121d1:	xor    DWORD PTR [ebp+eiz*1+0x3491d840],0x0
  4121d9:	jge    0x4121b0
  4121db:	sbb    ah,BYTE PTR [ebx]
  4121dd:	adc    esp,DWORD PTR ds:[edi-0x5]
  4121e1:	int    0x84
  4121e3:	xor    cl,BYTE PTR [edi+0x5a]
  4121e6:	in     eax,dx
  4121e7:	icebp  
  4121e8:	(bad)  
  4121e9:	in     al,0x8c
  4121eb:	or     eax,0x159a0afa
  4121f0:	xchg   BYTE PTR [ebx],ah
  4121f2:	in     al,0x32
  4121f4:	loope  0x412224
  4121f6:	push   0xffffffea
  4121f8:	mov    edi,0x50ee8d12
  4121fd:	xor    ch,ah
  4121ff:	daa    
  412200:	sbb    eax,esi
  412202:	mov    esi,DWORD PTR [edx+eiz*1]
  412205:	loop   0x412247
  412207:	push   0x3c9656ba
  41220c:	fimul  DWORD PTR [esi+0x32]
  41220f:	iret   
  412210:	push   esp
  412211:	pusha  
  412212:	push   ebx
  412213:	je     0x41228f
  412215:	outs   dx,DWORD PTR ds:[esi]
  412216:	retf   0x67cf
  412219:	or     al,0x25
  41221b:	or     al,0x37
  41221d:	jb     0x4121eb
  41221f:	jle    0x4121a6
  412221:	mov    dl,0xd
  412223:	adc    eax,0xcf373b76
  412228:	es cmc 
  41222a:	xor    edi,esi
  41222c:	jbe    0x412228
  41222e:	lods   al,BYTE PTR ds:[esi]
  41222f:	rol    DWORD PTR [eiz*8-0x3f175734],1
  412236:	pop    ecx
  412237:	hlt    
  412238:	pusha  
  412239:	inc    esp
  41223a:	lods   al,BYTE PTR ds:[esi]
  41223b:	stos   BYTE PTR es:[edi],al
  41223c:	jae    0x41225a
  41223e:	mov    WORD PTR [ebx-0x41],ss
  412241:	aad    0x20
  412243:	dec    ebp
  412244:	inc    edi
  412245:	sub    ecx,esp
  412247:	rol    BYTE PTR [edx],1
  412249:	xchg   esi,eax
  41224a:	int3   
  41224b:	adc    DWORD PTR [eax],esi
  41224d:	sub    BYTE PTR [ebx-0x53],dh
  412250:	jnp    0x4121ef
  412252:	int3   
  412253:	aaa    
  412254:	jp     0x4122d0
  412256:	and    BYTE PTR ds:0xff40c006,dh
  41225c:	mov    ch,0x22
  41225e:	xor    DWORD PTR [esi+esi*8],edx
  412261:	sbb    DWORD PTR [esi+0x33631918],edx
  412267:	jo     0x41224c
  412269:	div    DWORD PTR [edx+0x156a92b6]
  41226f:	xchg   esp,eax
  412270:	fucompp 
  412272:	xchg   edx,eax
  412273:	rcl    DWORD PTR [eax+0x41ebfbf5],1
  412279:	push   edx
  41227a:	(bad)  
  41227b:	adc    eax,0x412dda18
  412280:	(bad)
  412284:	data16 aad 0xde
  412287:	xchg   esp,eax
  412288:	adc    eax,0xf677d50d
  41228d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41228e:	scas   eax,DWORD PTR es:[edi]
  41228f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412290:	dec    edx
  412291:	inc    edx
  412292:	sar    DWORD PTR [ebx+0x27],1
  412295:	js     0x4122d5
  412297:	psrad  mm1,mm3
  41229a:	and    bh,0x76
  41229d:	fldenv [edx-0x78fe8434]
  4122a3:	jbe    0x412319
  4122a5:	xor    ah,ah
  4122a7:	pop    es
  4122a8:	mov    ecx,0xd29cae39
  4122ad:	cdq    
  4122ae:	in     al,dx
  4122af:	inc    edx
  4122b0:	(bad)  
  4122b1:	xlat   BYTE PTR ds:[ebx]
  4122b2:	(bad)  
  4122b3:	retf   0xd4da
  4122b6:	mov    bh,0xb0
  4122b8:	cmc    
  4122b9:	int3   
  4122ba:	mul    BYTE PTR [ebx+ecx*1+0x7303d1b8]
  4122c1:	test   BYTE PTR [eax-0x19640c0d],0x22
  4122c8:	push   cs
  4122c9:	pop    ss
  4122ca:	arpl   WORD PTR [esi+eiz*2],cx
  4122cd:	inc    ecx
  4122ce:	shl    al,1
  4122d0:	xchg   BYTE PTR [esi+0x0],al
  4122d3:	mov    bh,0x6
  4122d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122d6:	lds    ebp,FWORD PTR [esi+0x717e5904]
  4122dc:	dec    esi
  4122dd:	loop   0x4122b1
  4122df:	lahf   
  4122e0:	sub    esi,esi
  4122e2:	xor    esp,esi
  4122e4:	mov    ebp,0x990791c8
  4122e9:	jge    0x412298
  4122eb:	fnstsw WORD PTR [esi-0x72ecca10]
  4122f1:	dec    ebp
  4122f2:	jecxz  0x4122e2
  4122f4:	jne    0x412279
  4122f6:	shl    al,1
  4122f8:	inc    DWORD PTR [eax-0x46a8c705]
  4122fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ff:	adc    DWORD PTR [ebx-0x3e],edi
  412302:	sub    al,0x1c
  412304:	add    al,0xe2
  412306:	push   ecx
  412307:	aaa    
  412308:	arpl   WORD PTR [ebx*2+0x4d1d1b49],bx
  41230f:	popa   
  412310:	popa   
  412311:	cmc    
  412312:	ja     0x4122ad
  412314:	jno    0x412318
  412316:	push   0xaffe191f
  41231b:	mov    ds:0x70b7104c,al
  412320:	or     BYTE PTR [esi+0x2e4761b7],dh
  412326:	in     eax,0x93
  412328:	faddp  st(2),st
  41232a:	pop    esp
  41232b:	sbb    esi,ebp
  41232d:	inc    edi
  41232e:	loopne 0x412308
  412330:	push   ebp
  412331:	call   0x3ab9:0x4e0cb99
  412338:	cli    
  412339:	xchg   ecx,eax
  41233a:	mov    ds:0x7e8caf89,al
  41233f:	(bad)  
  412340:	lea    edx,[ecx+0x61]
  412343:	iret   
  412344:	fisttp WORD PTR [ecx]
  412346:	jne    0x41230e
  412348:	dec    eax
  412349:	mov    ds,ebx
  41234b:	or     BYTE PTR [ebx-0x71],0x4b
  41234f:	(bad)  
  412350:	(bad)  
  412352:	fisttp WORD PTR [esp+ebp*8]
  412355:	inc    esi
  412356:	mov    ds:0x76abb382,al
  41235b:	mov    edi,DWORD PTR [esi+0x20497db5]
  412361:	(bad)  
  412362:	andnps xmm2,xmm7
  412365:	inc    esp
  412366:	pop    ss
  412367:	clc    
  412368:	pop    ss
  412369:	xor    DWORD PTR [eax-0x5885d77f],0x19
  412370:	cmp    eax,0x75c9a90
  412375:	xchg   ebp,eax
  412376:	js     0x412383
  412378:	adc    DWORD PTR [eax+0x13],esp
  41237b:	pop    esp
  41237c:	add    BYTE PTR fs:[edx-0x67ded783],ah
  412383:	shl    dh,0x8b
  412386:	inc    esi
  412387:	jge    0x4123df
  412389:	rcr    BYTE PTR [edx],cl
  41238b:	(bad)  
  41238d:	scas   al,BYTE PTR es:[edi]
  41238e:	xor    DWORD PTR [esp+ebp*2],esp
  412391:	and    ebp,ebp
  412393:	hlt    
  412394:	inc    ecx
  412395:	int    0xfe
  412397:	std    
  412398:	adc    eax,0x64a081cf
  41239d:	or     dh,bl
  41239f:	and    DWORD PTR [ecx],edi
  4123a1:	sub    DWORD PTR [esi+0x12],eax
  4123a4:	xchg   esi,eax
  4123a5:	hlt    
  4123a6:	pop    edi
  4123a7:	dec    esp
  4123a8:	jno    0x4123c2
  4123aa:	sbb    eax,0xf7337ecb
  4123af:	retf   
  4123b0:	add    ebx,esp
  4123b2:	dec    edi
  4123b3:	jecxz  0x4123f3
  4123b5:	mov    al,0xde
  4123b7:	mov    eax,ds:0xb0edaee1
  4123bc:	jg     0x4123bf
  4123be:	mov    eax,0x7a9f688e
  4123c3:	pusha  
  4123c4:	pop    ebp
  4123c5:	xor    BYTE PTR [edx+0x37ad0a73],0x66
  4123cc:	and    edx,esp
  4123ce:	push   es
  4123cf:	dec    ebp
  4123d0:	xor    dl,dh
  4123d2:	sub    eax,0xbd5d7cdd
  4123d7:	jo     0x412407
  4123d9:	fmul   st(1),st
  4123db:	push   edx
  4123dc:	jmp    0x45cd24f9
  4123e1:	push   eax
  4123e2:	xor    ecx,DWORD PTR [eax-0x7b]
  4123e5:	adc    al,0x5d
  4123e7:	dec    ebx
  4123e8:	push   ebp
  4123e9:	call   0x8eb496ba
  4123ee:	dec    eax
  4123ef:	jno    0x4123cf
  4123f1:	mov    ebp,0x1c74c9a5
  4123f6:	pop    ebp
  4123f7:	lock pop ecx
  4123f9:	xor    esi,DWORD PTR [esi-0x7f]
  4123fc:	in     al,dx
  4123fd:	cmp    edx,esi
  4123ff:	ror    dl,cl
  412401:	out    dx,al
  412402:	adc    eax,DWORD PTR [ebx+0x24b33626]
  412408:	sbb    DWORD PTR [edi-0x60],0xb6b56a39
  41240f:	popa   
  412410:	hlt    
  412411:	push   esp
  412412:	jmp    0xd21f:0x99598006
  412419:	sti    
  41241a:	dec    edx
  41241b:	mov    al,0x57
  41241d:	cmp    ah,BYTE PTR [edx-0x2331cb52]
  412423:	pop    edi
  412424:	(bad)  
  412425:	stos   BYTE PTR es:[edi],al
  412426:	test   eax,0x4cb57771
  41242b:	nop
  41242c:	out    dx,eax
  41242d:	push   es
  41242e:	(bad)  
  41242f:	aaa    
  412430:	xchg   ecx,eax
  412431:	fst    QWORD PTR [esi+0x224ca6ec]
  412437:	sbb    bh,BYTE PTR [edi-0x62]
  41243a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41243b:	lock ds pop ds
  41243e:	sbb    edi,DWORD PTR [ecx]
  412440:	jle    0x4123de
  412442:	mov    WORD PTR [edi-0x69],ds
  412445:	push   0x3d0f3596
  41244a:	mov    ds:0x556e221f,al
  41244f:	and    ebp,DWORD PTR [esi]
  412451:	add    dh,BYTE PTR [eax-0x1133e25d]
  412457:	ins    BYTE PTR es:[edi],dx
  412458:	or     edi,DWORD PTR ds:0x264f40f5
  41245e:	enter  0xa343,0x60
  412462:	fmul   DWORD PTR [ecx-0x7dced3b0]
  412468:	fnop   
  41246a:	fmul   st(0),st
  41246c:	pop    esi
  41246d:	or     edi,esi
  41246f:	sub    ecx,DWORD PTR [esi+0x68f4eef0]
  412475:	add    eax,0x153fdff2
  41247a:	pop    eax
  41247b:	loopne 0x41248e
  41247d:	inc    ebx
  41247e:	jns    0x412461
  412480:	aas    
  412481:	fcomp  st(4)
  412483:	inc    eax
  412484:	outs   dx,BYTE PTR ds:[esi]
  412485:	(bad)  
  412486:	mov    cl,0xf6
  412488:	add    edi,DWORD PTR [esi]
  41248a:	xor    al,ah
  41248c:	out    dx,al
  41248d:	or     eax,0xcd2ff138
  412492:	dec    ecx
  412493:	add    ah,0x7f
  412496:	fidiv  WORD PTR [eax]
  412498:	push   ecx
  412499:	pop    esi
  41249a:	xchg   edi,eax
  41249b:	bound  eax,QWORD PTR [ebp+esi*1+0x1a5febff]
  4124a2:	test   ebx,edi
  4124a4:	fwait
  4124a5:	push   cs
  4124a6:	xor    ecx,esp
  4124a8:	lock xchg esi,eax
  4124aa:	push   ebx
  4124ab:	push   esi
  4124ac:	add    al,0x2a
  4124ae:	push   esi
  4124af:	ja     0x412492
  4124b1:	imul   edi,DWORD PTR [ebx+ecx*8],0xa8fc4aa1
  4124b8:	sub    esp,0x4a
  4124bb:	mov    ah,0x4e
  4124bd:	add    esi,DWORD PTR [eax+edx*2+0x5a]
  4124c1:	or     ah,bh
  4124c3:	sub    al,0xce
  4124c5:	xchg   ebp,eax
  4124c6:	mov    ds:0x9dde33b9,al
  4124cb:	leave  
  4124cc:	ins    DWORD PTR es:[edi],dx
  4124cd:	int3   
  4124ce:	enter  0x9d2c,0x29
  4124d2:	dec    eax
  4124d3:	add    eax,0xd1e44884
  4124d8:	ds jmp 0x412471
  4124db:	mov    ecx,0x22d792d1
  4124e0:	jg     0x412470
  4124e2:	jne    0x41253b
  4124e4:	mov    DWORD PTR [ebp+0xfb8f011],ebx
  4124ea:	stos   DWORD PTR es:[edi],eax
  4124eb:	call   DWORD PTR [edi]
  4124ed:	inc    edx
  4124ee:	stc    
  4124ef:	or     esp,esp
  4124f1:	sbb    al,0x79
  4124f3:	shl    ebp,1
  4124f5:	adc    al,0xea
  4124f7:	icebp  
  4124f8:	add    dh,BYTE PTR [edx+0x75]
  4124fb:	or     eax,DWORD PTR [esi+0x7d66b972]
  412501:	stos   BYTE PTR es:[edi],al
  412502:	cld    
  412503:	mov    WORD PTR [ebx+ebx*1-0x7f],es
  412507:	mov    bh,0x95
  412509:	and    ch,ch
  41250b:	ja     0x41256c
  41250d:	in     al,0x6a
  41250f:	mov    ecx,0xec75539d
  412514:	int3   
  412515:	or     BYTE PTR [esi-0x49679aea],al
  41251b:	sub    DWORD PTR [ebx+ebx*1-0x5a],ebx
  41251f:	push   cs
  412520:	or     eax,0x89180fe7
  412525:	sub    bh,bh
  412527:	stos   DWORD PTR es:[edi],eax
  412528:	pop    bx
  41252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41252b:	(bad)  
  41252c:	in     al,dx
  41252d:	imul   ebp,edx,0x5757e676
  412533:	cdq    
  412534:	inc    edx
  412535:	add    ebp,DWORD PTR [esi+0x28dd48eb]
  41253b:	xchg   BYTE PTR [edi-0xa],al
  41253e:	sti    
  41253f:	in     al,0x5b
  412541:	xchg   di,ax
  412543:	lahf   
  412544:	cli    
  412545:	jmp    0x8fcfa2f4
  41254a:	repnz xor cl,bl
  41254d:	push   0xffffff85
  41254f:	das    
  412550:	into   
  412551:	add    bh,BYTE PTR [eax]
  412553:	dec    ecx
  412554:	adc    dh,bl
  412556:	stos   DWORD PTR es:[edi],eax
  412557:	or     bh,dl
  412559:	adc    eax,0xf4a44fde
  41255e:	add    eax,0x961d993e
  412563:	jge    0x412582
  412565:	bnd js 0x412577
  412568:	repz call 0x3a7:0xf1552c68
  412570:	(bad)  
  412571:	iret   
  412572:	sub    edx,DWORD PTR [edx]
  412574:	in     al,0x24
  412576:	not    edx
  412578:	mov    ebx,0x9439633c
  41257d:	nop
  41257e:	lods   al,BYTE PTR ds:[esi]
  41257f:	mov    edi,0x8560f571
  412584:	adc    DWORD PTR [ebx],ecx
  412586:	push   edx
  412587:	push   0x5d
  412589:	aaa    
  41258a:	mov    ebp,0x63b618c3
  41258f:	clc    
  412590:	mov    eax,0xe9f262c0
  412595:	inc    ecx
  412596:	inc    edx
  412597:	jp     0x41260f
  412599:	ror    DWORD PTR [ebp-0x7d],0xf1
  41259d:	cmp    dl,BYTE PTR [ecx+0x4]
  4125a0:	test   edi,edx
  4125a2:	ret    
  4125a3:	sub    al,0xdd
  4125a5:	sub    cl,BYTE PTR [ecx-0x38]
  4125a8:	inc    ebx
  4125a9:	(bad)  [ecx-0x2d2085d4]
  4125af:	(bad)  
  4125b0:	jo     0x41262e
  4125b2:	xlat   BYTE PTR ds:[ebx]
  4125b3:	push   0xffffffb1
  4125b5:	fistp  WORD PTR [ebp+eax*4+0x3d]
  4125b9:	out    0x9e,al
  4125bb:	and    BYTE PTR [ecx+0x44],bh
  4125be:	ins    DWORD PTR es:[edi],dx
  4125bf:	in     eax,dx
  4125c0:	int    0x98
  4125c2:	pushf  
  4125c3:	mov    BYTE PTR [ecx+ebp*1-0x31],ch
  4125c7:	xor    al,al
  4125c9:	rol    al,0xc0
  4125cc:	rol    al,0xc0
  4125cf:	rol    al,0xc0
  4125d2:	rol    al,0xc0
  4125d5:	rol    al,0xc0
  4125d8:	rol    al,0xc0
  4125db:	rol    al,0xc0
  4125de:	rol    al,0x7
  4125e1:	loope  0x41259c
  4125e3:	pop    esi
  4125e4:	pop    es
  4125e5:	push   cs
  4125e6:	push   edx
  4125e7:	mov    edi,0x77d13143
  4125ec:	mov    BYTE PTR [edi],al
  4125ee:	inc    eax
  4125ef:	loop   0x41260c
  4125f1:	sbb    esi,DWORD PTR [eax-0x4c]
  4125f4:	cwde   
  4125f5:	dec    ecx
  4125f6:	cmp    edx,DWORD PTR [eax-0x3a]
  4125f9:	lods   al,BYTE PTR ds:[esi]
  4125fa:	sub    cl,dh
  4125fc:	and    cl,0xaa
  4125ff:	mov    al,0xe4
  412601:	(bad)  
  412602:	pop    esi
  412603:	cmp    esi,edx
  412605:	in     eax,0x91
  412607:	push   eax
  412608:	sbb    eax,0xd4cb57cd
  41260d:	inc    ebx
  41260e:	dec    ebp
  41260f:	js     0x4125ae
  412611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412612:	push   0x905c1fd1
  412617:	ins    BYTE PTR es:[edi],dx
  412618:	mov    ah,0x31
  41261a:	lods   al,BYTE PTR ds:[esi]
  41261b:	or     bl,bh
  41261d:	sub    BYTE PTR [ebp+0x64],cl
  412620:	aas    
  412621:	repz fldcw WORD PTR [eax+0xab29275]
  412628:	(bad)  
  412629:	dec    ebp
  41262a:	outs   dx,BYTE PTR ds:[esi]
  41262b:	bnd jae 0x412601
  41262e:	cwde   
  41262f:	jg     0x412624
  412631:	(bad)  
  412632:	ds xchg edx,eax
  412634:	sub    dl,dl
  412636:	fwait
  412637:	call   0x60985cee
  41263c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263d:	ret    
  41263e:	aad    0x5a
  412640:	jle    0x41268f
  412642:	push   edi
  412643:	jbe    0x412697
  412645:	call   0x9919cd2e
  41264a:	mov    edx,0xd1220f8
  41264f:	rcl    DWORD PTR [ecx+edi*4],0x62
  412653:	test   al,0x97
  412655:	sub    eax,0x36a86343
  41265a:	push   0x51
  41265c:	sahf   
  41265d:	and    eax,0xdace6f84
  412662:	sbb    DWORD PTR [ebp-0x2204110d],edx
  412668:	xor    esi,DWORD PTR [ecx-0x75563de3]
  41266e:	js     0x412655
  412670:	cdq    
  412671:	outs   dx,DWORD PTR ds:[esi]
  412672:	test   al,0x58
  412674:	push   edi
  412675:	pop    ebx
  412676:	mov    al,0x9a
  412678:	aam    0x33
  41267a:	jmp    0x412604
  41267c:	in     al,dx
  41267d:	rcl    BYTE PTR [ecx+0x31],1
  412680:	int3   
  412681:	dec    ebp
  412682:	mov    eax,0xbeda97e4
  412687:	outs   dx,DWORD PTR ds:[esi]
  412688:	cdq    
  412689:	ret    0xd11d
  41268c:	dec    esp
  41268d:	push   esp
  41268e:	loop   0x4126ac
  412690:	jp     0x4126d5
  412692:	push   0x5f
  412694:	pushf  
  412695:	add    DWORD PTR [edi+0x168c63f2],edi
  41269b:	mov    dh,0x27
  41269d:	pop    ds
  41269e:	jns    0x412711
  4126a0:	adc    eax,0xefa6caee
  4126a5:	clc    
  4126a6:	icebp  
  4126a7:	test   esp,ebx
  4126a9:	mov    DWORD PTR [edi+0x3f],edx
  4126ac:	stos   DWORD PTR es:[edi],eax
  4126ad:	inc    esi
  4126ae:	adc    eax,0xead69e94
  4126b3:	push   0x61
  4126b5:	mov    edi,0x72c87089
  4126ba:	sbb    DWORD PTR [edx],0x9
  4126bd:	scas   eax,DWORD PTR es:[edi]
  4126be:	pop    ss
  4126bf:	add    eax,0x1b8ef5e2
  4126c4:	pop    esi
  4126c5:	pop    esi
  4126c6:	sahf   
  4126c7:	xor    ebx,DWORD PTR es:[ebp-0x2278dc6e]
  4126ce:	push   edi
  4126cf:	pushf  
  4126d0:	jle    0x41269f
  4126d2:	punpckhwd mm0,QWORD PTR [edx+0xb]
  4126d6:	mov    ecx,0x2c5fe0f7
  4126db:	dec    eax
  4126dc:	ss push esp
  4126de:	and    eax,0x5517c8fe
  4126e3:	adc    edi,DWORD PTR [esi-0x6f]
  4126e6:	sti    
  4126e7:	sti    
  4126e8:	sub    cl,dh
  4126ea:	aas    
  4126eb:	and    al,0xc5
  4126ed:	fisttp QWORD PTR [ebp+0x79e716c6]
  4126f3:	cmp    ah,BYTE PTR [edi-0x14]
  4126f6:	clc    
  4126f7:	outs   dx,BYTE PTR ds:[esi]
  4126f8:	or     eax,0x8e7cdcd4
  4126fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126fe:	push   ds
  4126ff:	ins    DWORD PTR es:[edi],dx
  412700:	dec    ebp
  412701:	test   eax,0x1d309cbe
  412706:	push   ebp
  412707:	xor    al,0x9d
  412709:	dec    edi
  41270a:	aad    0x80
  41270c:	icebp  
  41270d:	neg    dh
  41270f:	mov    ds:0xb6d411c9,al
  412714:	jg     0x4126e3
  412716:	xchg   ebp,eax
  412717:	xchg   ebp,eax
  412718:	rol    bh,0x1a
  41271b:	cmp    DWORD PTR [ecx-0x7f],esi
  41271e:	push   edx
  41271f:	sub    esi,DWORD PTR [edx-0x53]
  412722:	loopne 0x412769
  412724:	add    DWORD PTR [esi],eax
  412726:	sub    BYTE PTR [ebp+0x56],dh
  412729:	adc    BYTE PTR [ecx-0x4bb0ef89],0xb6
  412730:	cmp    eax,0x8fe08dca
  412735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412736:	lods   al,BYTE PTR ds:[esi]
  412737:	jle    0x412714
  412739:	mov    esp,0x3cd22a09
  41273e:	(bad)  
  41273f:	cli    
  412740:	pop    ebx
  412741:	fbstp  TBYTE PTR [esi+edi*8-0x51]
  412745:	cmp    al,0x11
  412747:	or     eax,0x86c964
  41274c:	aad    0x75
  41274e:	push   es
  41274f:	push   ebx
  412750:	sub    eax,0x5498114e
  412755:	and    eax,0x38012bfd
  41275a:	add    al,0x6
  41275c:	scas   al,BYTE PTR es:[edi]
  41275d:	sbb    DWORD PTR [eax],ebp
  41275f:	jmp    0xb695c2b3
  412764:	bound  eax,QWORD PTR [ecx+0x26081b51]
  41276a:	push   ecx
  41276b:	sbb    edx,DWORD PTR [eax-0x7f]
  41276e:	out    0xcf,eax
  412770:	fwait
  412771:	cli    
  412772:	pop    edi
  412773:	fistp  WORD PTR [esp+ebx*2]
  412776:	push   cs
  412777:	inc    ebx
  412778:	mov    ebx,DWORD PTR ds:0x5c5f47a6
  41277e:	out    dx,al
  41277f:	es jae 0x41277e
  412782:	jmp    0x412764
  412784:	mov    ebx,DWORD PTR [eax+0x616ac71]
  41278a:	add    bl,BYTE PTR ds:0x84828997
  412790:	sub    ebp,DWORD PTR [ebx]
  412792:	dec    eax
  412793:	out    dx,al
  412794:	rol    BYTE PTR [edx-0x7e012442],cl
  41279a:	daa    
  41279b:	aad    0x50
  41279d:	jg     0x4127a3
  41279f:	int3   
  4127a0:	adc    eax,0x800de1a
  4127a5:	ficom  DWORD PTR [esi]
  4127a7:	inc    ebx
  4127a8:	jmp    0x3a36:0x9bbde66
  4127af:	addr16 push esp
  4127b1:	push   ds
  4127b2:	ret    
  4127b3:	mov    BYTE PTR [ebp-0x3d],ah
  4127b6:	mov    cl,0xef
  4127b8:	rol    DWORD PTR [eax],0x56
  4127bb:	fcom   DWORD PTR [ecx+0x6e]
  4127be:	jecxz  0x412806
  4127c0:	call   0xffde:0xf69ee0ca
  4127c7:	addr16 xchg ebx,eax
  4127c9:	(bad)  
  4127ca:	in     eax,dx
  4127cb:	sbb    bh,cl
  4127cd:	cmp    DWORD PTR [ebp+ebx*1+0x5e981c7a],0x52
  4127d5:	jle    0x4127cb
  4127d7:	out    0xf0,eax
  4127d9:	fs pop ecx
  4127db:	xchg   ecx,eax
  4127dc:	adc    al,0x4d
  4127de:	jbe    0x412808
  4127e0:	(bad)  
  4127e1:	mov    ds:0xf86abfeb,al
  4127e6:	clc    
  4127e7:	fild   DWORD PTR es:[edi]
  4127ea:	in     al,0x8c
  4127ec:	aad    0xc9
  4127ee:	scas   al,BYTE PTR es:[edi]
  4127ef:	mov    dl,0x2b
  4127f1:	(bad)  
  4127f2:	scas   eax,DWORD PTR es:[edi]
  4127f3:	add    al,0x5b
  4127f5:	(bad)  
  4127f6:	jg     0x4127b4
  4127f8:	fwait
  4127f9:	sahf   
  4127fa:	and    cl,BYTE PTR [ecx]
  4127fc:	mov    edi,0x30713a5b
  412801:	arpl   WORD PTR [ebp+0x7a609b4e],bx
  412807:	dec    edi
  412808:	adc    eax,0x2307154b
  41280d:	sbb    al,BYTE PTR [esi]
  41280f:	shl    DWORD PTR [edx+0x5e],cl
  412812:	ja     0x4127a4
  412814:	cmc    
  412815:	adc    DWORD PTR [edx-0x1cd94ca8],ebp
  41281b:	sti    
  41281c:	add    al,BYTE PTR [edi]
  41281e:	mov    bl,0xbd
  412820:	and    BYTE PTR [edi+0x69],0x5f
  412824:	fs leave 
  412826:	jmp    0xd4564e49
  41282b:	cmp    edx,DWORD PTR [edi-0x5e]
  41282e:	outs   dx,DWORD PTR ds:[esi]
  41282f:	pop    DWORD PTR [edi+0x42]
  412832:	out    dx,al
  412833:	pop    ds
  412834:	cmp    al,0xf
  412836:	loopne 0x4127ed
  412838:	mov    ds:0x6df3a6ff,eax
  41283d:	mov    ds:0xd3d020d7,al
  412842:	jecxz  0x41286d
  412844:	cs ds lahf 
  412847:	out    dx,al
  412848:	retf   0xefb
  41284b:	leave  
  41284c:	test   edi,0x7ac13f40
  412852:	xchg   DWORD PTR [edx],ebp
  412854:	rcl    BYTE PTR [ebp-0x7e8ab252],1
  41285a:	push   es
  41285b:	jl     0x41287a
  41285d:	and    edi,DWORD PTR [ebx+0x13d699ae]
  412863:	inc    ebx
  412864:	jbe    0x4128db
  412866:	idiv   DWORD PTR [edi-0x7b]
  412869:	cmc    
  41286a:	add    DWORD PTR [eax-0x79],0x658bfa18
  412871:	inc    ecx
  412872:	mov    edx,0x3cb791d
  412877:	out    dx,eax
  412878:	mov    ebp,0x5a7f771f
  41287d:	push   edx
  41287e:	cmp    DWORD PTR [edi],edi
  412880:	bound  ebp,QWORD PTR [ebx+0x502d16b7]
  412886:	lahf   
  412887:	push   ebp
  412888:	cmp    ah,BYTE PTR [eax-0x58]
  41288b:	or     bl,BYTE PTR [esi-0x62ca1f58]
  412891:	ss out 0xb6,eax
  412894:	sahf   
  412895:	cdq    
  412896:	sti    
  412897:	cmc    
  412898:	inc    ebp
  412899:	popa   
  41289a:	sbb    al,0xcd
  41289c:	ins    BYTE PTR es:[edi],dx
  41289d:	hlt    
  41289e:	in     al,0x38
  4128a0:	pop    edx
  4128a1:	fsubr  DWORD PTR [edx-0x55aa841d]
  4128a7:	sub    eax,0x4226f204
  4128ac:	fimul  DWORD PTR [edx-0x58]
  4128af:	das    
  4128b0:	clc    
  4128b1:	aad    0x92
  4128b3:	cmp    BYTE PTR [ebp+0x29268896],ch
  4128b9:	pop    ebp
  4128ba:	inc    edx
  4128bb:	or     ch,BYTE PTR [ecx+0x423dfba]
  4128c1:	push   edi
  4128c2:	popf   
  4128c3:	push   ebx
  4128c4:	push   edx
  4128c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c6:	stc    
  4128c7:	xor    eax,0xf4fa597e
  4128cc:	fidiv  DWORD PTR [edi]
  4128ce:	mov    eax,0x5fcc981b
  4128d3:	es out dx,eax
  4128d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128d6:	mov    esp,esp
  4128d8:	(bad)  
  4128da:	sbb    al,0x49
  4128dc:	mov    DWORD PTR [esp+eiz*2-0x3a],ebp
  4128e0:	xchg   ebx,eax
  4128e1:	stc    
  4128e2:	xchg   esi,eax
  4128e3:	shl    BYTE PTR [esi],0x9
  4128e6:	push   edx
  4128e7:	dec    esi
  4128e8:	mov    bh,0x3f
  4128ea:	xchg   esi,eax
  4128eb:	or     DWORD PTR [ecx+edi*1],edx
  4128ee:	ds ret 0xf656
  4128f2:	xchg   esi,eax
  4128f3:	dec    edx
  4128f4:	adc    eax,0xb30c409c
  4128f9:	ret    
  4128fa:	pop    ecx
  4128fb:	xchg   edx,eax
  4128fc:	mov    ah,0x2b
  4128fe:	mov    esi,0xec2c2154
  412903:	xchg   dl,al
  412905:	ret    
  412906:	mov    ebx,0xea67f2ee
  41290b:	cmp    bl,dh
  41290d:	imul   esp,edx,0x75
  412910:	gs pop ds
  412912:	mov    cl,BYTE PTR [eax-0x72]
  412915:	jle    0x4128a2
  412917:	push   ebp
  412918:	lahf   
  412919:	repnz pop ebp
  41291b:	arpl   WORD PTR [ecx+0x66a8bfe8],bx
  412921:	in     al,dx
  412922:	jmp    0x4128c5
  412924:	mov    esi,0x63f79f6b
  412929:	inc    ecx
  41292a:	push   0x49
  41292c:	inc    esp
  41292d:	hlt    
  41292e:	inc    esi
  41292f:	mov    ds:0xf1e6caa3,eax
  412934:	sbb    edx,esi
  412936:	dec    edx
  412937:	in     eax,0x48
  412939:	test   eax,0x637ff696
  41293e:	dec    esp
  41293f:	jg     0x41294a
  412941:	push   edi
  412942:	jmp    0x4128e1
  412944:	mov    ebp,0x5221e2a8
  412949:	lock cmp ebp,DWORD PTR [ebx+0x507d7092]
  412950:	mov    dl,0xe5
  412952:	inc    eax
  412953:	mov    al,0x25
  412955:	loop   0x41297e
  412957:	push   0x40a62d87
  41295c:	pop    esi
  41295d:	dec    edx
  41295e:	xor    dh,al
  412960:	xor    eax,edi
  412962:	jne    0x4129db
  412964:	ss fucomi st,st(0)
  412967:	repz add eax,0xa43869b0
  41296d:	loope  0x412966
  41296f:	pop    eax
  412970:	mov    ebp,0x464eb5f5
  412975:	jle    0x41296f
  412977:	or     eax,0x71f9d63b
  41297c:	ret    
  41297d:	shl    BYTE PTR [edx-0x3],0x5e
  412981:	dec    esp
  412982:	adc    al,0xa3
  412984:	add    DWORD PTR [ebx-0x20e2f01d],edi
  41298a:	(bad)  
  41298b:	sub    esi,DWORD PTR [ebx-0x2e]
  41298e:	stc    
  41298f:	adc    DWORD PTR [esi-0x33],0xc709439c
  412996:	outs   dx,BYTE PTR ds:[esi]
  412997:	loop   0x412959
  412999:	fdiv   DWORD PTR [ecx-0x434ae147]
  41299f:	push   ecx
  4129a0:	ror    BYTE PTR [edx+0x56],cl
  4129a3:	inc    edi
  4129a4:	push   edx
  4129a5:	loope  0x412999
  4129a7:	and    dl,ah
  4129a9:	mov    ch,0x43
  4129ab:	xor    ecx,ecx
  4129ad:	call   0x41f8fa69
  4129b2:	rcr    DWORD PTR [eax+edx*4],0xc2
  4129b6:	add    BYTE PTR [ecx+0x7f],ch
  4129b9:	jmp    0x5053:0xc241c8b7
  4129c0:	jecxz  0x412a2b
  4129c2:	dec    ebp
  4129c3:	inc    eax
  4129c4:	test   eax,0xc318b527
  4129c9:	sbb    eax,0x76d64bb1
  4129ce:	shl    BYTE PTR [edx+0x76],cl
  4129d1:	push   edi
  4129d2:	ja     0x412995
  4129d4:	sub    ebp,DWORD PTR [edx+0x6c]
  4129d7:	arpl   WORD PTR [ecx],ax
  4129d9:	push   ds
  4129da:	and    esp,ecx
  4129dc:	pop    ss
  4129dd:	push   ebp
  4129de:	jge    0x41298b
  4129e0:	pop    edx
  4129e1:	mov    ah,0xd1
  4129e3:	adc    BYTE PTR [esi+0x3f977618],dh
  4129e9:	mov    ecx,DWORD PTR [ebx-0x5e]
  4129ec:	mov    esp,0x39bec0df
  4129f1:	mov    dh,0x2f
  4129f3:	mov    bl,bl
  4129f5:	jg     0x412a6d
  4129f7:	and    DWORD PTR fs:[edi],esp
  4129fa:	sbb    al,0xac
  4129fc:	ins    BYTE PTR es:[edi],dx
  4129fd:	xchg   BYTE PTR [esi+edx*4],ch
  412a00:	cmc    
  412a01:	sti    
  412a02:	sbb    ecx,esp
  412a04:	or     ebx,DWORD PTR [ebx]
  412a06:	aas    
  412a07:	rcr    ecx,cl
  412a09:	fcom   DWORD PTR [ebp+esi*2+0x10518a52]
  412a10:	sbb    bh,ah
  412a12:	mov    cl,BYTE PTR [ebx+ecx*8]
  412a15:	xchg   bh,dh
  412a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a18:	arpl   WORD PTR [esp+ebp*1-0x12efab22],si
  412a1f:	dec    edi
  412a20:	xchg   ecx,eax
  412a21:	lock dec edx
  412a23:	cs sar dh,0x3
  412a27:	pushf  
  412a28:	popa   
  412a29:	mov    DWORD PTR [ecx],0x40f22281
  412a2f:	fisub  WORD PTR [esi+esi*8+0x1f29213e]
  412a36:	add    BYTE PTR [edx],al
  412a38:	jo     0x4129cf
  412a3a:	or     ebp,DWORD PTR [eax-0x3d]
  412a3d:	(bad)  
  412a3e:	(bad)  
  412a40:	cdq    
  412a41:	pushf  
  412a42:	cmp    DWORD PTR [edi+0x7d],ecx
  412a45:	cwde   
  412a46:	adc    al,0xcc
  412a48:	adc    edi,DWORD PTR [esi+0x42]
  412a4b:	cmp    esi,ecx
  412a4d:	cli    
  412a4e:	jae    0x412a6c
  412a50:	xchg   BYTE PTR [esi+0x74],ah
  412a53:	ror    al,0xe8
  412a56:	pop    esp
  412a57:	jp     0x4129f2
  412a59:	jmp    0x6975:0xf21e960a
  412a60:	jl     0x412a84
  412a62:	pop    ecx
  412a63:	mov    al,ds:0x2f9f4134
  412a68:	mov    WORD PTR [esi-0x64],?
  412a6b:	mul    DWORD PTR [esi+eax*2+0x5b]
  412a6f:	pop    ss
  412a70:	cdq    
  412a71:	jns    0x412ac1
  412a73:	dec    edi
  412a74:	sbb    DWORD PTR [esp+ebp*4],ebx
  412a77:	sbb    BYTE PTR [ebp+0x242d5a74],0x12
  412a7e:	fcom   st(7)
  412a80:	imul   eax,DWORD PTR cs:[eax+0x7f],0xe
  412a85:	es mov ebx,0x8a84de83
  412a8b:	loope  0x412a10
  412a8d:	fcomp  DWORD PTR [edx-0x6a]
  412a90:	add    ebp,DWORD PTR [ecx+0x3a]
  412a93:	mov    dh,BYTE PTR [edi+0x541cebee]
  412a99:	inc    ebp
  412a9a:	lahf   
  412a9b:	adc    BYTE PTR [edx+0x7e],cl
  412a9e:	push   edi
  412a9f:	xchg   edx,eax
  412aa0:	mov    al,ds:0x78e85c11
  412aa5:	cmp    DWORD PTR [edi+0x5fb9915],eax
  412aab:	jge    0x412a6f
  412aad:	sub    esp,DWORD PTR [edi]
  412aaf:	sub    cl,0x88
  412ab2:	into   
  412ab3:	jb     0x412b01
  412ab5:	sub    DWORD PTR [esi+0x6ab5ffb6],ebp
  412abb:	or     edx,DWORD PTR [esi+0x4904ae57]
  412ac1:	cmp    al,0x27
  412ac3:	sub    esp,ecx
  412ac5:	or     eax,0xa71b51ce
  412aca:	xchg   BYTE PTR [esi-0x6b963442],cl
  412ad0:	mov    DWORD PTR [edi+edx*1+0x6c],ecx
  412ad4:	pop    edi
  412ad5:	je     0x412abc
  412ad7:	sar    DWORD PTR [edi],0xfe
  412ada:	enter  0x8b2d,0x34
  412ade:	imul   esp,edx,0x5fe6fa25
  412ae4:	aam    0x31
  412ae6:	pop    edx
  412ae7:	jg     0x412b3f
  412ae9:	hlt    
  412aea:	cmp    eax,0x513c1d32
  412aef:	inc    eax
  412af0:	and    ebx,DWORD PTR [eax+0x5c]
  412af3:	jl     0x412ac5
  412af5:	push   es
  412af6:	sub    cl,BYTE PTR ds:0xc6ba69a9
  412afc:	leave  
  412afd:	mov    ch,0x4b
  412aff:	dec    esi
  412b00:	aam    0x8b
  412b02:	cmp    al,0x97
  412b04:	imul   ebp,DWORD PTR [esi-0x56c35032],0xffffff98
  412b0b:	cwde   
  412b0c:	inc    ecx
  412b0d:	stos   BYTE PTR es:[edi],al
  412b0e:	push   0x2
  412b10:	add    BYTE PTR [ebx+0x78],al
  412b13:	jo     0x412b86
  412b15:	dec    esi
  412b16:	sahf   
  412b17:	pop    esi
  412b18:	add    edi,DWORD PTR [edx-0x2ba16e72]
  412b1e:	lahf   
  412b1f:	je     0x412b59
  412b21:	pop    edx
  412b22:	jmp    0x412b8d
  412b24:	(bad)  
  412b25:	jnp    0x412abb
  412b27:	(bad)  [edi]
  412b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b2a:	shl    BYTE PTR [ebx-0x45],0x68
  412b2e:	ss fcmovnbe st,st(0)
  412b31:	adc    eax,0xdf44b460
  412b37:	aas    
  412b38:	and    DWORD PTR [edx+edx*1],esi
  412b3b:	or     esi,DWORD PTR [esi-0x54]
  412b3e:	add    al,BYTE PTR gs:0x7f6d4e96
  412b45:	bound  ebx,QWORD PTR [ebp+edi*1+0x239536fc]
  412b4c:	sub    eax,0xce16e8c2
  412b51:	push   esi
  412b52:	mov    gs,WORD PTR [eax+0x347be734]
  412b58:	xchg   ebp,eax
  412b59:	in     al,dx
  412b5a:	lahf   
  412b5b:	lods   eax,DWORD PTR ds:[esi]
  412b5c:	jb     0x412b82
  412b5e:	fld    DWORD PTR [edi-0x59134582]
  412b64:	lahf   
  412b65:	mov    ds:0xa5771ec7,al
  412b6a:	mov    cl,0x82
  412b6c:	xchg   ebp,eax
  412b6d:	adc    al,0x8b
  412b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b70:	sti    
  412b71:	mov    dl,BYTE PTR [edi+0x388dd262]
  412b77:	lahf   
  412b78:	sbb    bl,BYTE PTR es:[edx+0x4b]
  412b7c:	push   es
  412b7d:	sub    ch,BYTE PTR [edx+eiz*2-0x840f383]
  412b84:	ins    DWORD PTR es:[edi],dx
  412b85:	icebp  
  412b86:	retf   
  412b87:	scas   eax,DWORD PTR es:[edi]
  412b88:	es jge 0x412bde
  412b8b:	pop    ecx
  412b8c:	les    ecx,FWORD PTR [bp+si-0x36ea]
  412b91:	mov    esp,0xe0bd4dd6
  412b96:	repnz ficomp DWORD PTR [ecx-0x187e291f]
  412b9d:	fcomp  DWORD PTR [edx+0xc]
  412ba0:	scas   al,BYTE PTR es:[edi]
  412ba1:	jg     0x412c0e
  412ba3:	mov    al,0xaa
  412ba5:	test   eax,0x281fc606
  412baa:	daa    
  412bab:	and    eax,0x87bc5513
  412bb0:	mul    BYTE PTR es:[ecx]
  412bb3:	leave  
  412bb4:	push   0xb93d28f6
  412bb9:	and    BYTE PTR [ebp-0x5f7c03a3],cl
  412bbf:	sar    DWORD PTR [edx+esi*4+0x4b],1
  412bc3:	mul    BYTE PTR [esi+edx*8]
  412bc6:	test   dh,0x53
  412bc9:	outs   dx,DWORD PTR ds:[esi]
  412bca:	push   ss
  412bcb:	nop
  412bcc:	ins    DWORD PTR es:[edi],dx
  412bcd:	shr    DWORD PTR [edx],0x90
  412bd0:	xor    al,0x78
  412bd2:	or     DWORD PTR [esi+ebx*2-0xd],ebp
  412bd6:	or     DWORD PTR [edx],ecx
  412bd8:	jmp    0xb643:0x7b76338
  412bdf:	iret   
  412be0:	and    DWORD PTR [esi+0x26],ebx
  412be3:	std    
  412be4:	cmp    DWORD PTR [esi],ecx
  412be6:	xchg   BYTE PTR [eax],bl
  412be8:	and    al,0x52
  412bea:	sahf   
  412beb:	jb     0x412b75
  412bed:	loopne 0x412c62
  412bef:	lahf   
  412bf0:	outs   dx,BYTE PTR ds:[esi]
  412bf1:	or     esi,esi
  412bf3:	std    
  412bf4:	mov    edx,0x7640c77c
  412bf9:	shl    BYTE PTR [ebp-0x294db40],1
  412bff:	push   0xffffffc3
  412c01:	test   eax,0xbaa38cc2
  412c06:	cdq    
  412c07:	iret   
  412c08:	stos   DWORD PTR es:[edi],eax
  412c09:	push   ds
  412c0a:	jnp    0x412c40
  412c0c:	inc    esi
  412c0d:	push   es
  412c0e:	push   0x82e83603
  412c13:	mov    dh,0x63
  412c15:	out    0xec,al
  412c17:	ficomp DWORD PTR [ebp+0x54fc16d5]
  412c1d:	push   es
  412c1e:	push   edx
  412c1f:	inc    esi
  412c20:	fnstenv [edi-0x36]
  412c23:	push   ebp
  412c24:	adc    al,0x1e
  412c26:	pop    eax
  412c27:	dec    esi
  412c28:	pop    DWORD PTR es:[ebp+0x2c]
  412c2c:	xchg   ebx,eax
  412c2d:	scas   al,BYTE PTR es:[edi]
  412c2e:	mov    ebp,0xb62322af
  412c33:	push   ecx
  412c34:	mov    BYTE PTR ds:0x4f53ac31,dl
  412c3a:	lea    cx,[ebp+edx*2+0x240cae23]
  412c42:	rol    bh,cl
  412c44:	mov    eax,ds:0xed5a91e8
  412c49:	jne    0x412c89
  412c4b:	dec    esp
  412c4c:	ds (bad) 
  412c4f:	inc    ebp
  412c50:	or     BYTE PTR es:[edx],al
  412c53:	repnz mov al,ds:0x793cf45f
  412c59:	adc    BYTE PTR [esi],cl
  412c5b:	pop    esp
  412c5c:	test   BYTE PTR [bx+di],dh
  412c5f:	ins    BYTE PTR es:[edi],dx
  412c60:	int3   
  412c61:	xchg   DWORD PTR [ebp+0x3a],ecx
  412c64:	sbb    DWORD PTR [esi],0x40
  412c67:	(bad)  
  412c68:	or     eax,0xcbf5a13a
  412c6d:	jle    0x412c55
  412c6f:	inc    ecx
  412c70:	in     eax,0xef
  412c72:	mov    BYTE PTR [ebx+0x752f0bb1],cl
  412c78:	in     al,0xcf
  412c7a:	sbb    BYTE PTR [edi+0x4ba9ab3c],ch
  412c80:	(bad)  
  412c81:	mul    DWORD PTR [ecx-0x35]
  412c84:	jbe    0x412c60
  412c86:	pop    edx
  412c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c88:	dec    edi
  412c89:	aas    
  412c8a:	inc    edi
  412c8b:	aaa    
  412c8c:	ja     0x412c2a
  412c8e:	scas   al,BYTE PTR es:[edi]
  412c8f:	xchg   edi,eax
  412c90:	leave  
  412c91:	test   DWORD PTR [ecx+0x59dbe1e],0x57d38d14
  412c9b:	mov    dh,0x29
  412c9d:	popa   
  412c9e:	dec    esp
  412c9f:	inc    edx
  412ca0:	dec    edx
  412ca1:	fdiv   QWORD PTR [ebx-0x2ce3ef05]
  412ca7:	adc    edx,esp
  412ca9:	push   ecx
  412caa:	int    0x44
  412cac:	ret    0x3273
  412caf:	icebp  
  412cb0:	xchg   DWORD PTR [edx],ebp
  412cb2:	jno    0x412ca6
  412cb4:	test   BYTE PTR [edi-0xd408ae],0x70
  412cbb:	pop    edx
  412cbc:	js     0x412caf
  412cbe:	jnp    0x412ccf
  412cc0:	add    edi,DWORD PTR [esi+edx*8+0x56]
  412cc4:	pop    eax
  412cc5:	adc    BYTE PTR [edx+0x2b],0x3a
  412cc9:	and    DWORD PTR [ecx+0x6f],0xc1ab8423
  412cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd1:	retf   0xb876
  412cd4:	int3   
  412cd5:	push   edi
  412cd6:	out    dx,eax
  412cd7:	movups xmm0,xmm4
  412cda:	push   cs
  412cdb:	(bad)  
  412cdd:	sbb    DWORD PTR [edx-0x5028d11a],esi
  412ce3:	outs   dx,BYTE PTR ds:[esi]
  412ce4:	or     ch,BYTE PTR [eax]
  412ce6:	jge    0x412ca1
  412ce8:	ror    DWORD PTR [ebx+ebx*8+0x2b],0x72
  412ced:	cmp    ah,dh
  412cef:	or     al,0x7e
  412cf1:	jmp    0x289064d2
  412cf6:	jmp    0x412ccf
  412cf8:	xor    BYTE PTR [ecx],dl
  412cfa:	mov    ds:0x5ab552f7,al
  412cff:	push   ebp
  412d00:	int3   
  412d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d02:	clc    
  412d03:	std    
  412d04:	inc    esp
  412d05:	and    ebx,DWORD PTR [eax+0x6781cd62]
  412d0b:	pop    cx
  412d0d:	rdpmc  
  412d0f:	(bad)  
  412d11:	and    DWORD PTR [eax],ecx
  412d13:	(bad)  
  412d15:	and    DWORD PTR [ecx],ebx
  412d17:	mov    edi,DWORD PTR [ecx]
  412d19:	lea    esp,[ebx]
  412d1b:	sbb    ah,BYTE PTR [ebx]
  412d1d:	jle    0x412d64
  412d1f:	jmp    0x552c873d
  412d24:	test   al,0xdb
  412d26:	das    
  412d27:	adc    al,0x87
  412d29:	mov    edx,0xe2421cbd
  412d2e:	sti    
  412d2f:	cdq    
  412d30:	mov    WORD PTR ds:0x74ed0c95,ss
  412d36:	inc    ebp
  412d37:	inc    ebp
  412d38:	(bad)  ds:[edx+esi*1-0x29]
  412d3d:	xchg   esp,eax
  412d3e:	jmp    0x412ced
  412d40:	jmp    esi
  412d42:	arpl   si,si
  412d44:	or     ch,BYTE PTR [ebx+0x5a4ef5ae]
  412d4a:	mov    al,ds:0xaf7fa329
  412d4f:	jg     0x412d2f
  412d51:	pop    ebp
  412d52:	sar    BYTE PTR [eax],0x22
  412d55:	fsubr  st,st(0)
  412d57:	pop    ecx
  412d58:	enter  0xb4c9,0xa7
  412d5c:	jne    0x412d36
  412d5e:	loopne 0x412d39
  412d60:	mov    bl,0x45
  412d62:	xchg   esi,eax
  412d63:	push   ss
  412d64:	retf   
  412d65:	push   esi
  412d66:	(bad)  
  412d67:	hlt    
  412d68:	adc    al,0xaf
  412d6a:	add    BYTE PTR [edi-0x64],bl
  412d6d:	xor    DWORD PTR [edx+0x3a85cba1],ebp
  412d73:	pop    ecx
  412d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d75:	mov    dl,cl
  412d77:	pop    ss
  412d78:	retf   0xe1e
  412d7b:	rol    BYTE PTR [esi+0x1f],1
  412d7e:	fwait
  412d7f:	mov    ds:0xd0b226f4,eax
  412d84:	fmulp  st(0),st
  412d86:	and    al,0xab
  412d88:	xor    cl,BYTE PTR [esi-0x43]
  412d8b:	fadd   DWORD PTR [esi-0xe]
  412d8e:	repnz ins DWORD PTR es:[edi],dx
  412d90:	pop    ebx
  412d91:	call   0x3383:0x53bd104f
  412d98:	pop    es
  412d99:	mov    cl,0x3d
  412d9b:	mov    ah,0xaa
  412d9d:	scas   eax,DWORD PTR es:[edi]
  412d9e:	mov    bh,0xa3
  412da0:	pop    ebp
  412da1:	sub    ch,ch
  412da3:	dec    eax
  412da4:	icebp  
  412da5:	mov    ch,0x9a
  412da7:	fisttp WORD PTR [ebp-0x30ad40ca]
  412dad:	popf   
  412dae:	xchg   ecx,eax
  412daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412db0:	rol    al,0xc0
  412db3:	rol    al,0xc0
  412db6:	rol    al,0xc0
  412db9:	rol    al,0xc0
  412dbc:	rol    al,0xc0
  412dbf:	rol    al,0xc0
  412dc2:	rol    al,0xc0
  412dc5:	rol    al,0xc0
  412dc8:	rol    al,0xc0
  412dcb:	rol    al,0xc0
  412dce:	rol    al,0xc0
  412dd1:	rol    al,0xc0
  412dd4:	rol    al,0xc0
  412dd7:	rol    al,0xc0
  412dda:	rol    al,0xc0
  412ddd:	rol    al,0xc0
  412de0:	rol    al,0xc0
  412de3:	rol    al,0xc0
  412de6:	rol    al,0xc0
  412de9:	rol    al,0xc0
  412dec:	rol    al,0xc0
  412def:	rol    al,0xc0
  412df2:	rol    al,0xc0
  412df5:	rol    al,0xc0
  412df8:	push   ecx
  412df9:	in     eax,0x49
  412dfb:	aad    0x72
  412dfd:	xor    ebx,eax
  412dff:	aaa    
  412e00:	dec    eax
  412e01:	dec    edi
  412e02:	add    DWORD PTR [ebx],ebx
  412e04:	pop    ebp
  412e05:	xchg   esi,eax
  412e06:	fcmovne st,st(0)
  412e08:	push   esi
  412e09:	xor    eax,0xcd360b93
  412e0e:	cmp    ch,BYTE PTR [ecx+0x32c40f5c]
  412e14:	pop    ecx
  412e15:	loop   0x412e79
  412e17:	cmp    BYTE PTR [ebx+esi*4],ah
  412e1a:	or     BYTE PTR [edi+0x54],bl
  412e1d:	ds pop esp
  412e1f:	and    eax,0xa9fe36ff
  412e24:	pop    es
  412e25:	call   0xc8bed9d8
  412e2a:	jmp    0x7ec9d8c6
  412e2f:	mov    eax,ds:0xbc39241d
  412e34:	sbb    BYTE PTR [edx-0x24c89427],al
  412e3a:	fsubrp st(5),st
  412e3c:	xchg   ebx,eax
  412e3d:	and    al,0x9e
  412e3f:	mov    ah,0xfe
  412e41:	rol    BYTE PTR [edi],1
  412e43:	mov    cl,0x44
  412e45:	cmc    
  412e46:	jno    0x412dee
  412e48:	add    BYTE PTR [edx-0x20],bl
  412e4b:	mov    WORD PTR [edi],?
  412e4d:	mov    dl,0xb5
  412e4f:	iret   
  412e50:	sub    DWORD PTR [ebx-0x56],esp
  412e53:	scas   eax,DWORD PTR es:[edi]
  412e54:	retf   0x4af2
  412e57:	in     eax,0x98
  412e59:	shr    DWORD PTR [ecx],1
  412e5b:	mov    esp,0x9b5502f9
  412e60:	xchg   ebp,eax
  412e61:	mov    bl,BYTE PTR [edx+0x1c8ea5b7]
  412e67:	dec    ebp
  412e68:	xor    al,0x1e
  412e6a:	mov    cl,0xf0
  412e6c:	sar    DWORD PTR [ebp-0x33cac752],1
  412e72:	and    eax,0x3cc0fae4
  412e77:	jbe    0x412edd
  412e79:	dec    edi
  412e7a:	xor    DWORD PTR [esi+0xb],ecx
  412e7d:	sbb    al,0x41
  412e7f:	fwait
  412e80:	lahf   
  412e81:	scas   eax,DWORD PTR es:[edi]
  412e82:	(bad)  
  412e83:	mov    bl,0x35
  412e85:	call   0xd796:0x9330d096
  412e8c:	and    bl,BYTE PTR [ecx]
  412e8e:	(bad)  
  412e8f:	lods   al,BYTE PTR ds:[esi]
  412e90:	in     eax,0x26
  412e92:	int3   
  412e93:	call   0x289b:0xf6009aa9
  412e9a:	mov    edx,ebx
  412e9c:	(bad)  
  412e9d:	call   0xda9fbc53
  412ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea3:	push   DWORD PTR [edi+eax*4-0x2debde66]
  412eaa:	adc    BYTE PTR [edx],0xf9
  412ead:	cmp    edi,DWORD PTR ds:0x62f18d41
  412eb3:	fdiv   st,st(7)
  412eb5:	sub    BYTE PTR [edx+0x49],0xd1
  412eb9:	cld    
  412eba:	pop    ecx
  412ebb:	nop
  412ebc:	xlat   BYTE PTR ds:[ebx]
  412ebd:	call   0xc2ee:0xcf50071
  412ec4:	jo     0x412e92
  412ec6:	jmp    0xac72:0x185f274a
  412ecd:	jne    0x412f12
  412ecf:	jns    0x412ec6
  412ed1:	lods   al,BYTE PTR ds:[esi]
  412ed2:	cmc    
  412ed3:	or     ecx,ebp
  412ed5:	std    
  412ed6:	jle    0x412ec8
  412ed8:	pop    esi
  412ed9:	jb     0x412e6a
  412edb:	xchg   edx,eax
  412edd:	mov    ds:0x2fe465ce,al
  412ee2:	rcr    DWORD PTR [ebp-0x640471a4],0x49
  412ee9:	fstp   QWORD PTR [eax]
  412eeb:	sub    edx,esp
  412eed:	xchg   ebx,eax
  412eee:	inc    eax
  412eef:	mov    edi,0x84996ad4
  412ef4:	push   esi
  412ef5:	or     dl,dl
  412ef7:	cdq    
  412ef8:	lods   eax,DWORD PTR ds:[esi]
  412ef9:	dec    edx
  412efa:	and    eax,0xffffffa2
  412efd:	dec    ecx
  412efe:	or     eax,0x948e5905
  412f03:	mov    esi,0x350da416
  412f08:	cdq    
  412f09:	push   0x27
  412f0b:	imul   ecx,DWORD PTR [eax],0xc704b8a8
  412f11:	into   
  412f12:	mov    esi,0xac961b0b
  412f17:	xchg   edx,ecx
  412f19:	jae    0x412ec0
  412f1b:	rol    DWORD PTR [ecx+0x2c],0xe1
  412f1f:	mov    ds:0x83f89a30,eax
  412f24:	(bad)  
  412f25:	enter  0xebd0,0x30
  412f29:	gs xchg esi,eax
  412f2b:	sbb    BYTE PTR [eax+0x3],bl
  412f2e:	cmp    DWORD PTR [ebx+0xd8734a4],ebx
  412f34:	mov    ch,0x12
  412f36:	adc    ebx,DWORD PTR [ecx+0x1612367a]
  412f3c:	js     0x412fb9
  412f3e:	sysenter 
  412f40:	jno    0x412f1f
  412f42:	push   eax
  412f43:	xor    ebx,DWORD PTR [esi-0x36264b87]
  412f49:	into   
  412f4a:	cld    
  412f4b:	jo     0x412fcc
  412f4d:	cmp    DWORD PTR [esi],0x3d
  412f50:	pusha  
  412f51:	xchg   ebx,eax
  412f52:	mov    esp,0xa38b8d00
  412f57:	xor    BYTE PTR [ebp+0x718d2672],ah
  412f5d:	cmp    DWORD PTR [esi-0x5],0xffffffee
  412f61:	stos   BYTE PTR es:[edi],al
  412f62:	and    BYTE PTR [ecx+0x2b],al
  412f65:	shl    BYTE PTR [ecx-0x436fe915],0xee
  412f6c:	push   edi
  412f6d:	sbb    dh,al
  412f6f:	mov    cl,0x6
  412f71:	jg     0x412f2e
  412f73:	and    al,0x34
  412f75:	dec    ebp
  412f76:	(bad)  
  412f77:	out    dx,eax
  412f78:	cmp    ah,BYTE PTR [ebp+0x6c]
  412f7b:	test   eax,0xcfa55740
  412f80:	pop    ss
  412f81:	push   cs
  412f82:	mov    BYTE PTR ds:0x8bf4ce4,ch
  412f88:	jg     0x412fe7
  412f8a:	retf   0x3145
  412f8d:	adc    bl,BYTE PTR [eax]
  412f8f:	and    bl,dh
  412f91:	jnp    0x412f16
  412f93:	sbb    ch,bh
  412f95:	push   es
  412f96:	test   DWORD PTR [ebx],esi
  412f98:	dec    edi
  412f99:	pop    edi
  412f9a:	sbb    bh,BYTE PTR [ebp+0x17f89810]
  412fa0:	popa   
  412fa1:	hlt    
  412fa2:	mov    dl,0x42
  412fa4:	sbb    BYTE PTR [esi-0x2d],bl
  412fa7:	rol    DWORD PTR [ecx+0x495c8614],cl
  412fad:	loop   0x41301b
  412faf:	test   eax,0x49d55e12
  412fb4:	dec    ebx
  412fb5:	hlt    
  412fb6:	sub    al,0x54
  412fb8:	popa   
  412fb9:	data16 mov cl,BYTE PTR [ecx-0x5b981d9a]
  412fc0:	jl     0x412fe2
  412fc2:	ret    
  412fc3:	loop   0x41302a
  412fc5:	add    DWORD PTR [ebp-0x5900db8f],ebp
  412fcb:	data16 jl 0x412f4f
  412fce:	retf   0x232d
  412fd1:	dec    esp
  412fd2:	mov    ds:0x7752584c,eax
  412fd7:	outs   dx,DWORD PTR ds:[esi]
  412fd8:	cdq    
  412fd9:	repz pop ebx
  412fdb:	mov    ebp,0x7fe1927
  412fe0:	loop   0x412ff9
  412fe2:	scas   al,BYTE PTR es:[edi]
  412fe3:	and    eax,0xbbc91aa9
  412fe8:	cli    
  412fe9:	jne    0x412fa0
  412feb:	push   esp
  412fec:	inc    edi
  412fed:	pop    ebx
  412fee:	xchg   BYTE PTR [eax],dh
  412ff0:	sub    DWORD PTR [edx+0x219ae75e],edi
  412ff6:	xchg   ch,dl
  412ff8:	or     al,BYTE PTR [ebp+esi*4-0x75d6b812]
  412fff:	out    dx,eax
  413000:	add    DWORD PTR [edx-0x557f8377],edx
  413006:	pop    ss
  413007:	xor    eax,0x4b8afed3
  41300c:	push   ebp
  41300d:	pop    DWORD PTR [esi-0x14c3af97]
  413013:	jno    0x413032
  413015:	aam    0xaa
  413017:	sar    edx,cl
  413019:	lods   eax,DWORD PTR ds:[esi]
  41301a:	enter  0x59f0,0x77
  41301e:	in     al,0xd5
  413020:	pop    esp
  413021:	inc    edi
  413022:	mov    esi,0x99229173
  413027:	loope  0x4130a1
  413029:	xchg   ebp,eax
  41302a:	mov    eax,ds:0x877da1ec
  41302f:	das    
  413030:	lock nop
  413032:	dec    edi
  413033:	cwde   
  413034:	and    BYTE PTR [ebx],bh
  413036:	(bad)  
  413038:	and    dl,BYTE PTR [eax+0x6b5be220]
  41303e:	in     al,dx
  41303f:	dec    esp
  413040:	mov    bh,0xcd
  413042:	popa   
  413043:	adc    eax,DWORD PTR [eax]
  413045:	nop
  413046:	jmp    0x4130a0
  413048:	mov    edx,0x4284a1
  41304d:	mov    bh,0xa2
  41304f:	mov    edi,0x8ad9b5cb
  413054:	xchg   esp,eax
  413055:	push   edi
  413056:	or     DWORD PTR [ebx-0x48],0xffffffca
  41305a:	jo     0x413085
  41305c:	push   edx
  41305d:	jo     0x413000
  41305f:	dec    esp
  413060:	clc    
  413061:	pop    esi
  413062:	fisttp WORD PTR [ebx-0xf]
  413065:	and    cl,ch
  413067:	xor    eax,0x21f61461
  41306c:	iret   
  41306d:	xor    ch,ah
  41306f:	outs   dx,BYTE PTR ds:[esi]
  413070:	js     0x41300e
  413072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413073:	pop    esi
  413074:	mov    DWORD PTR [ebx],0xc73cc296
  41307a:	je     0x413067
  41307c:	mov    ecx,0x8a4fa926
  413081:	xchg   edi,eax
  413082:	or     DWORD PTR [edx-0x22],esi
  413085:	push   esp
  413086:	inc    edi
  413087:	inc    edi
  413088:	pop    ecx
  413089:	outs   dx,WORD PTR ss:[esi]
  41308c:	aam    0x7f
  41308e:	mov    WORD PTR [ebp-0x4ae599ff],?
  413094:	adc    dl,0xa8
  413097:	sbb    dl,BYTE PTR [ebp+0x2a25f6e9]
  41309d:	gs dec edi
  41309f:	mov    eax,DWORD PTR [eax+ebx*8+0x25a28956]
  4130a6:	sbb    edi,DWORD PTR [eax]
  4130a8:	ret    
  4130a9:	pop    edi
  4130aa:	mov    edi,0xb8ae52a8
  4130af:	(bad)  
  4130b0:	mov    cs,WORD PTR [ecx]
  4130b2:	dec    ecx
  4130b3:	dec    esi
  4130b4:	mov    dh,0x38
  4130b6:	shr    BYTE PTR [edi-0x3e1471c4],cl
  4130bc:	add    eax,0xddbf57dc
  4130c1:	leave  
  4130c2:	ja     0x41307e
  4130c4:	dec    esp
  4130c5:	out    0x9e,al
  4130c7:	(bad)  
  4130c8:	pop    ecx
  4130c9:	push   0x17
  4130cb:	int3   
  4130cc:	pop    esp
  4130cd:	sub    BYTE PTR [esi],dl
  4130cf:	gs test eax,0xa2982256
  4130d5:	test   al,0x66
  4130d7:	add    eax,0xcca7ae7d
  4130dc:	push   eax
  4130dd:	add    ah,ah
  4130df:	mov    edi,0x4d7e9462
  4130e4:	push   ebp
  4130e5:	mov    DWORD PTR [edx+0x4b9dc535],ebx
  4130eb:	sub    dl,bh
  4130ed:	dec    ecx
  4130ee:	jbe    0x4130f7
  4130f0:	int    0x9d
  4130f2:	pop    ebp
  4130f3:	sub    BYTE PTR [edx-0x4af8ffb7],cl
  4130f9:	fwait
  4130fa:	das    
  4130fb:	daa    
  4130fc:	loop   0x413153
  4130fe:	adc    edx,esi
  413100:	arpl   dx,di
  413102:	sbb    DWORD PTR [esi-0x7f],eax
  413105:	jge    0x413091
  413107:	pop    ebp
  413108:	sar    BYTE PTR [ebx-0x79fafdaa],1
  41310e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310f:	sbb    eax,0x19d6fdb3
  413114:	add    al,BYTE PTR [esi+0x5811dc4e]
  41311a:	aas    
  41311b:	out    dx,eax
  41311c:	scas   al,BYTE PTR es:[edi]
  41311d:	fwait
  41311e:	mov    ds:0x9aeceb53,eax
  413123:	add    eax,0xae6222da
  413128:	in     eax,dx
  413129:	aam    0xbc
  41312b:	loopne 0x413141
  41312d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41312e:	xor    ch,bl
  413130:	loope  0x41319c
  413132:	cmp    al,0xb0
  413134:	jb     0x413104
  413136:	xchg   edx,eax
  413137:	xchg   edi,eax
  413138:	shr    BYTE PTR [ecx+0x30c4275e],1
  41313e:	scas   eax,DWORD PTR es:[edi]
  41313f:	mov    esi,0x49c26d4
  413144:	repnz add esp,DWORD PTR [edx+0x39]
  413148:	push   eax
  413149:	dec    esi
  41314a:	jbe    0x413164
  41314c:	lods   al,BYTE PTR ds:[esi]
  41314d:	or     BYTE PTR [edx],dh
  41314f:	jmp    0x4131b2
  413151:	das    
  413152:	push   esi
  413153:	mov    al,0x46
  413155:	loop   0x4131c9
  413157:	xchg   edi,eax
  413158:	outs   dx,DWORD PTR ds:[esi]
  413159:	add    ebp,esi
  41315b:	fiadd  DWORD PTR [eax-0x23]
  41315e:	inc    eax
  41315f:	adc    eax,0xda49421e
  413164:	lods   eax,DWORD PTR ds:[esi]
  413165:	scas   eax,DWORD PTR es:[edi]
  413166:	aaa    
  413167:	inc    ebp
  413168:	and    al,0x32
  41316a:	in     al,dx
  41316b:	arpl   WORD PTR [edi],ax
  41316d:	mov    ecx,0xb673ad9e
  413172:	dec    esi
  413173:	aam    0x3d
  413175:	pop    esi
  413176:	shl    BYTE PTR [ebp+0x3b04279d],1
  41317c:	shl    BYTE PTR ds:0x26370aec,0x96
  413183:	sbb    BYTE PTR [ebx+ebx*1],bl
  413186:	cmp    ebp,DWORD PTR ds:0x231e9e19
  41318c:	jp     0x41316a
  41318e:	add    dl,BYTE PTR [edx]
  413190:	push   cs
  413191:	int    0x66
  413193:	test   DWORD PTR [eax+0x1e],eax
  413196:	cli    
  413197:	jmp    FWORD PTR [edx]
  413199:	imul   bh
  41319b:	test   DWORD PTR [ebx],ebx
  41319d:	push   edx
  41319e:	cdq    
  41319f:	js     0x413136
  4131a1:	shl    BYTE PTR [edx-0x49],cl
  4131a4:	dec    edi
  4131a5:	push   esp
  4131a6:	mov    ah,0xd
  4131a8:	fstp   DWORD PTR [edx+0x14]
  4131ab:	lock pop eax
  4131ad:	cdq    
  4131ae:	iret   
  4131af:	call   0x6b52:0xe9599b6e
  4131b6:	(bad)  [eax*4+0x30528e51]
  4131bd:	sbb    al,0x8a
  4131bf:	xchg   DWORD PTR [ecx+ebp*1+0x4d],ecx
  4131c3:	rcl    BYTE PTR [ecx-0x16],cl
  4131c6:	test   eax,0x760ddd4d
  4131cb:	in     al,0x5c
  4131cd:	mov    ebp,0xcbc72f64
  4131d2:	cmp    BYTE PTR [edx+0x46],al
  4131d5:	mov    cl,0x9d
  4131d7:	mov    ecx,DWORD PTR [ebp-0x3474b93c]
  4131dd:	sub    edi,DWORD PTR [edx]
  4131df:	fdiv   QWORD PTR [eax-0x28]
  4131e2:	add    BYTE PTR [edx],bh
  4131e4:	and    ebp,edx
  4131e6:	sahf   
  4131e7:	jmp    0x41325e
  4131e9:	dec    edx
  4131ea:	mov    esp,0xca607feb
  4131ef:	and    al,0x3a
  4131f1:	sti    
  4131f2:	adc    eax,0x4cb28c52
  4131f7:	inc    edi
  4131f8:	ror    DWORD PTR [ecx],cl
  4131fa:	dec    edi
  4131fb:	loop   0x41327a
  4131fd:	jge    0x413277
  4131ff:	sbb    eax,0xc22f1d39
  413204:	pop    esp
  413205:	rcl    DWORD PTR [ebx+0x6da75bbc],0xa7
  41320c:	fstp   TBYTE PTR [esi]
  41320e:	mov    ebp,0xbeb6232f
  413213:	imul   esp,edx,0x6b84fe4a
  413219:	xchg   BYTE PTR [ecx],ah
  41321b:	add    BYTE PTR [edi-0xb60ccbb],bl
  413221:	or     DWORD PTR [edx+eiz*4+0x1ce9575],ebp
  413228:	je     0x41327e
  41322a:	dec    esi
  41322b:	and    ebx,ebx
  41322d:	push   esi
  41322e:	adc    DWORD PTR [edi+0x36530a7d],ebp
  413234:	scas   al,BYTE PTR es:[edi]
  413235:	add    DWORD PTR [edx+edx*2+0x62],0x6af8a50
  41323d:	pop    ebx
  41323e:	mov    dh,BYTE PTR [eax]
  413240:	cmp    ah,BYTE PTR fs:[edi+0x79]
  413244:	iret   
  413245:	ja     0x4132a9
  413247:	jno    0x4131ed
  413249:	pop    esp
  41324a:	(bad)  [ebx+ebx*4-0x1a495cb9]
  413251:	call   0x107e:0x17422cc5
  413258:	dec    edi
  413259:	xchg   ebx,eax
  41325a:	cwde   
  41325b:	out    0x71,eax
  41325d:	dec    esi
  41325e:	data16 fcmove st,st(2)
  413261:	repz fdivr QWORD PTR [edx]
  413264:	in     al,dx
  413265:	and    BYTE PTR [eax+0x12ce2f0a],ah
  41326b:	lods   al,BYTE PTR ds:[esi]
  41326c:	mov    esi,0x6302627
  413271:	dec    edi
  413272:	jge    0x413248
  413274:	adc    al,dl
  413276:	dec    ecx
  413277:	enter  0x8954,0x40
  41327b:	mov    ch,0x10
  41327d:	sbb    cl,dl
  41327f:	data16 mov ch,0x36
  413282:	mov    ds:0xedfc343b,al
  413287:	push   ecx
  413288:	inc    esp
  413289:	sub    DWORD PTR [edx+eax*8-0x60],edi
  41328d:	in     al,dx
  41328e:	test   DWORD PTR [edx+0x4b658f79],ecx
  413294:	pop    ebp
  413295:	dec    esp
  413296:	mov    ds:0xd0e53d01,al
  41329b:	jp     0x41325b
  41329d:	add    eax,0x281a3f51
  4132a2:	ror    DWORD PTR [ebx],1
  4132a4:	adc    edx,esi
  4132a6:	shl    BYTE PTR [eiz*4-0x4142ed9b],1
  4132ad:	addr16 push cs
  4132af:	mov    cs,WORD PTR [eax+eax*2+0x6788d4fe]
  4132b6:	inc    edi
  4132b7:	repz sbb al,0x5b
  4132ba:	out    dx,al
  4132bb:	lods   al,BYTE PTR ds:[esi]
  4132bc:	jecxz  0x4132b1
  4132be:	sbb    DWORD PTR [ebp-0xbed672d],edx
  4132c4:	in     al,dx
  4132c5:	xchg   BYTE PTR [ebp-0x51],ch
  4132c8:	ret    0xfb82
  4132cb:	xor    dh,BYTE PTR [edx-0x7ac754c]
  4132d1:	inc    ebx
  4132d2:	repnz shr BYTE PTR ds:0x1651b614,1
  4132d9:	cdq    
  4132da:	or     BYTE PTR [eax-0x63],ah
  4132dd:	add    ebx,ecx
  4132df:	lock cmp eax,0x33e0b736
  4132e5:	test   eax,0xb56f7784
  4132ea:	ror    al,0x96
  4132ed:	and    bh,BYTE PTR [edi-0x59ab8a5d]
  4132f3:	sbb    edi,ebx
  4132f5:	jle    0x413288
  4132f7:	and    dh,cl
  4132f9:	ror    DWORD PTR [eax*4+0x6bbc09b9],cl
  413300:	je     0x413358
  413302:	jae    0x41335b
  413304:	inc    esi
  413305:	pusha  
  413306:	mov    esp,0xd5482170
  41330b:	jmp    0x51f3:0xbf8b5ec2
  413312:	xchg   edi,eax
  413313:	jl     0x4132ac
  413315:	inc    eax
  413316:	adc    DWORD PTR [edx],eax
  413318:	dec    BYTE PTR [edi-0x4e]
  41331b:	jecxz  0x413377
  41331d:	out    0xaa,al
  41331f:	je     0x4132e7
  413321:	push   ecx
  413322:	mov    esi,DWORD PTR [ebp+0x33e82827]
  413328:	and    bh,dl
  41332a:	and    ch,BYTE PTR [edx+ebx*2]
  41332d:	sahf   
  41332e:	push   esp
  41332f:	in     eax,dx
  413330:	push   ss
  413331:	ins    BYTE PTR es:[edi],dx
  413332:	xchg   edx,eax
  413333:	mov    eax,0xea7a06f2
  413338:	arpl   WORD PTR [esi-0x6d],cx
  41333b:	cwde   
  41333c:	js     0x4132fc
  41333e:	repz ss or eax,0x53397a95
  413345:	mov    ah,0xad
  413347:	mov    esi,0x156caa7
  41334c:	sbb    BYTE PTR [ebx],0x4e
  41334f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413351:	rcl    DWORD PTR [ecx+0x26],cl
  413354:	mov    ch,0x77
  413356:	es mov cl,0x21
  413359:	es in  al,dx
  41335b:	popf   
  41335c:	or     eax,0x74b71751
  413361:	shl    BYTE PTR [esi+0x35],cl
  413364:	lods   eax,DWORD PTR ds:[esi]
  413365:	cmc    
  413366:	fld    st(5)
  413368:	adc    ebp,DWORD PTR [ecx+ebx*4+0x57]
  41336c:	mul    DWORD PTR [ecx-0x5bd989f2]
  413372:	jge    0x4132fe
  413374:	pop    edx
  413375:	inc    edx
  413376:	and    DWORD PTR [edx+0x7b],0xffffff9d
  41337a:	push   edi
  41337b:	jb     0x413367
  41337d:	pop    esp
  41337e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337f:	and    ebx,DWORD PTR [ecx-0x310974dd]
  413385:	xor    ecx,DWORD PTR [eax+0x22963dfe]
  41338b:	cmp    eax,0x6903d953
  413390:	jne    0x41332e
  413392:	mov    ch,0x4
  413394:	jo     0x4133b3
  413396:	test   DWORD PTR [esi],0x3b5d8f8
  41339c:	push   es
  41339d:	pop    esp
  41339e:	push   edx
  41339f:	test   eax,0xfd1c87f5
  4133a4:	repz pushf 
  4133a6:	dec    edi
  4133a7:	sub    cl,BYTE PTR [ecx-0x27]
  4133aa:	shl    DWORD PTR [edi],1
  4133ac:	repnz imul ebp,DWORD PTR [eax-0x730f9e5a],0x28
  4133b4:	jb     0x4133d5
  4133b6:	mov    dl,0x3
  4133b8:	adc    DWORD PTR [ecx-0x3f],ecx
  4133bb:	mov    ds:0xd7016722,eax
  4133c0:	mov    ch,0xda
  4133c2:	out    dx,al
  4133c3:	int    0x1c
  4133c5:	pop    ebx
  4133c6:	add    ecx,DWORD PTR [ecx+0x39]
  4133c9:	adc    BYTE PTR [esi],bl
  4133cb:	pop    eax
  4133cc:	push   esp
  4133cd:	jns    0x413372
  4133cf:	jno    0x413397
  4133d1:	shr    BYTE PTR [eax+0x38],cl
  4133d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d5:	push   ss
  4133d6:	xor    BYTE PTR [ebx],dh
  4133d8:	inc    ebx
  4133d9:	mov    dh,0x33
  4133db:	push   ss
  4133dc:	xchg   DWORD PTR [ebx+0x32],ecx
  4133df:	aas    
  4133e0:	dec    edi
  4133e1:	out    dx,al
  4133e2:	(bad)  
  4133e3:	or     cl,BYTE PTR [edi+0x78]
  4133e6:	push   ebx
  4133e7:	jns    0x413444
  4133e9:	sahf   
  4133ea:	inc    edx
  4133eb:	into   
  4133ec:	push   edx
  4133ed:	jp     0x413371
  4133ef:	jne    0x4133a3
  4133f1:	call   0xa67f549
  4133f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133f7:	push   esp
  4133f8:	pop    edx
  4133f9:	lea    eax,[esi-0x2b8d22a1]
  4133ff:	xchg   ecx,eax
  413400:	imul   ebx,DWORD PTR [ecx],0x7930c2a6
  413406:	add    al,0x1b
  413408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413409:	lea    ebp,[ebp+0x400c71f3]
  41340f:	rcr    BYTE PTR [esi-0x10],1
  413412:	icebp  
  413413:	sub    edi,DWORD PTR [ecx]
  413415:	dec    eax
  413416:	pop    eax
  413417:	scas   al,BYTE PTR es:[edi]
  413418:	dec    ebp
  413419:	nop
  41341a:	push   ds
  41341b:	push   edi
  41341c:	and    al,0xd3
  41341e:	in     eax,0x7c
  413420:	rcl    BYTE PTR [esi+0x6dfd395],cl
  413426:	cld    
  413427:	dec    ebp
  413428:	sub    BYTE PTR [edx-0x77],bl
  41342b:	pop    ebx
  41342c:	std    
  41342d:	mov    gs,ebp
  41342f:	retf   
  413430:	fcom   QWORD PTR [ebp+edx*4-0x1f]
  413434:	dec    ebx
  413435:	add    edx,DWORD PTR [eax-0x80]
  413438:	xchg   BYTE PTR [ecx+0x5180eb9b],dh
  41343e:	test   eax,0xaaf79a82
  413443:	adc    dh,BYTE PTR [edx+0x23]
  413446:	mov    edi,0xb0d6b507
  41344b:	cmp    al,BYTE PTR [edi-0x7e]
  41344e:	mov    ds:0xbcaff29,al
  413453:	inc    esp
  413454:	mov    ah,0x1e
  413456:	dec    edi
  413457:	imul   ebp,DWORD PTR [edi],0xffffffff
  41345a:	mov    dh,0x4d
  41345c:	xchg   esp,eax
  41345d:	idiv   dl
  41345f:	cmp    bh,BYTE PTR [ecx-0xa]
  413462:	fist   DWORD PTR [edi+esi*2-0xa]
  413466:	cli    
  413467:	push   ebx
  413468:	push   ebx
  413469:	and    bl,dh
  41346b:	sub    DWORD PTR [esi+0x61612a19],esp
  413471:	neg    bl
  413473:	xchg   ebp,eax
  413474:	in     eax,dx
  413475:	dec    eax
  413476:	jle    0x413453
  413478:	xor    DWORD PTR [esi+0x4e71b3],edx
  41347e:	cmp    eax,0xe2e39bcf
  413483:	nop
  413484:	ins    BYTE PTR es:[edi],dx
  413485:	pop    ecx
  413486:	jo     0x413497
  413488:	and    esp,DWORD PTR [esi]
  41348a:	inc    eax
  41348b:	imul   DWORD PTR [eax+ebp*4]
  41348e:	loope  0x413426
  413490:	lea    ebx,[esi+0x1e5d1890]
  413496:	xor    ch,BYTE PTR [edi]
  413498:	push   ebp
  413499:	lea    edx,[esi-0x53c6134f]
  41349f:	aaa    
  4134a0:	mov    dl,0x26
  4134a2:	stc    
  4134a3:	repz inc esi
  4134a5:	adc    bh,BYTE PTR [esi]
  4134a7:	xlat   BYTE PTR ds:[ebx]
  4134a8:	inc    edx
  4134a9:	neg    BYTE PTR [ecx-0x70]
  4134ac:	ret    0x38ab
  4134af:	jl     0x41343e
  4134b1:	test   DWORD PTR [edi],ebp
  4134b3:	hlt    
  4134b4:	push   ss
  4134b5:	add    BYTE PTR [ebx],bl
  4134b7:	xchg   edx,eax
  4134b8:	(bad)  
  4134b9:	(bad)  
  4134ba:	bound  ecx,QWORD PTR [ebx+0x16]
  4134bd:	call   0xdb17:0x4a68ef6d
  4134c4:	popf   
  4134c5:	push   ebp
  4134c6:	pusha  
  4134c7:	es (bad) 
  4134c9:	out    0x9b,eax
  4134cb:	cld    
  4134cc:	scas   eax,DWORD PTR es:[edi]
  4134cd:	ficomp DWORD PTR [ebp-0x45a4d395]
  4134d3:	sbb    ebp,ecx
  4134d5:	adc    eax,0xc189fffe
  4134da:	push   0xffffff98
  4134dc:	xor    ecx,DWORD PTR [ebx-0x30]
  4134df:	add    edi,DWORD PTR [ecx-0x33]
  4134e2:	mov    WORD PTR [ecx-0x66],ds
  4134e5:	add    ch,BYTE PTR [ebx-0x2756645d]
  4134eb:	add    dh,BYTE PTR [edi+ebp*4-0x78]
  4134ef:	dec    edi
  4134f0:	popa   
  4134f1:	dec    ebp
  4134f2:	cmp    eax,0x8fb80f86
  4134f7:	add    edx,ecx
  4134f9:	add    dh,BYTE PTR [eax]
  4134fb:	or     al,0xa9
  4134fd:	dec    edi
  4134fe:	in     eax,dx
  4134ff:	je     0x4134a9
  413501:	xchg   ebp,eax
  413502:	scas   eax,DWORD PTR es:[edi]
  413503:	dec    eax
  413504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413505:	and    eax,DWORD PTR [ecx+0x61ed59a8]
  41350b:	cdq    
  41350c:	and    DWORD PTR [esi-0x4c6e4ac2],0x1216e92a
  413516:	loop   0x4134e7
  413518:	stos   DWORD PTR es:[edi],eax
  413519:	imul   ebp,DWORD PTR [ebx+ebx*2+0x55],0xffffffda
  41351e:	xor    eax,0x8af6d104
  413524:	(bad)  
  413525:	or     ch,ch
  413527:	jno    0x4134b0
  413529:	cmp    ebp,edi
  41352b:	jecxz  0x4134b7
  41352d:	jbe    0x4134af
  41352f:	xchg   BYTE PTR [eax-0x25077bf],bh
  413535:	pusha  
  413536:	sub    ebx,DWORD PTR [ebp+0x75]
  413539:	dec    esi
  41353a:	cwde   
  41353b:	add    BYTE PTR [esi+0x6],dh
  41353e:	inc    edi
  41353f:	daa    
  413540:	sbb    BYTE PTR gs:[eax+0x3f2ee42],bl
  413547:	push   ecx
  413548:	outs   dx,DWORD PTR ds:[esi]
  413549:	cwde   
  41354a:	fwait
  41354b:	loope  0x4135a9
  41354d:	adc    BYTE PTR [ebx],ch
  41354f:	stos   DWORD PTR es:[edi],eax
  413550:	outs   dx,DWORD PTR ds:[esi]
  413551:	cmc    
  413552:	cmp    DWORD PTR [esi+0x68],edi
  413555:	adc    eax,0x1977bb33
  41355a:	in     al,dx
  41355b:	adc    bl,bl
  41355d:	test   DWORD PTR gs:[edi+0x15],ebx
  413561:	in     al,0xce
  413563:	add    BYTE PTR [esi],dl
  413565:	add    al,BYTE PTR [ebx]
  413567:	adc    DWORD PTR ds:0x42281e10,esi
  41356d:	xor    edx,0xffffffe3
  413570:	dec    ebx
  413571:	pushf  
  413572:	adc    BYTE PTR [esi],0x1c
  413575:	mov    bl,0xf6
  413577:	xor    al,0xd0
  413579:	cli    
  41357a:	shl    BYTE PTR [edx],cl
  41357c:	dec    eax
  41357d:	mov    ebx,?
  41357f:	pop    es
  413580:	xchg   ebp,eax
  413581:	addr16 out dx,al
  413583:	lea    esi,[edx]
  413585:	and    cl,BYTE PTR [edi+0x68442b88]
  41358b:	cmc    
  41358c:	pop    esp
  41358d:	or     al,0x80
  41358f:	add    BYTE PTR [ebp-0x17cf8448],cl
  413595:	(bad)  
  413596:	xchg   ebp,eax
  413597:	fnsave ds:0x4249e3cc
  41359d:	loopne 0x41353d
  41359f:	jo     0x41361f
  4135a1:	into   
  4135a2:	fwait
  4135a3:	and    BYTE PTR [edx],ch
  4135a5:	out    0xf2,eax
  4135a7:	jecxz  0x4135fb
  4135a9:	fisttp QWORD PTR [eax-0x16d8c91c]
  4135af:	rcr    DWORD PTR [esi-0x72],1
  4135b2:	loop   0x4135c9
  4135b4:	shl    DWORD PTR [edi],cl
  4135b6:	sbb    esi,DWORD PTR [ebx+edx*1-0x47]
  4135ba:	cmp    DWORD PTR [ecx],0xffffffa3
  4135bd:	gs sbb al,0xcf
  4135c0:	dec    esi
  4135c1:	mov    ah,0x4a
  4135c3:	dec    edi
  4135c4:	mov    bh,0x4b
  4135c6:	rol    DWORD PTR [esi],0xc0
  4135c9:	rol    al,0xc0
  4135cc:	rol    al,0xc0
  4135cf:	rol    al,0xc0
  4135d2:	rol    al,0xc0
  4135d5:	rol    al,0xc0
  4135d8:	mov    dl,0xb1
  4135da:	addr16 mov ecx,0xc5639e32
  4135e0:	sar    esi,1
  4135e2:	jb     0x413641
  4135e4:	xchg   BYTE PTR [edi],ch
  4135e6:	das    
  4135e7:	jmp    DWORD PTR [edx]
  4135e9:	cli    
  4135ea:	mov    esp,0x78edc2b5
  4135ef:	nop
  4135f0:	jae    0x41359f
  4135f2:	inc    ebx
  4135f3:	push   ds
  4135f4:	clc    
  4135f5:	icebp  
  4135f6:	fbstp  TBYTE PTR [esi-0x31]
  4135f9:	push   edi
  4135fa:	mov    cl,0x1a
  4135fc:	jo     0x41359b
  4135fe:	mov    ds:0x174f79c7,eax
  413603:	sub    DWORD PTR [eax-0x4a],0x34
  413607:	lods   al,BYTE PTR ds:[esi]
  413608:	mul    DWORD PTR [ebx+0x2fdf3a0a]
  41360e:	enter  0x1e2a,0x7c
  413612:	stos   BYTE PTR es:[edi],al
  413613:	sub    DWORD PTR [edx],edi
  413615:	pop    eax
  413616:	sahf   
  413617:	push   es
  413618:	and    BYTE PTR [eax-0x2f9f9e9c],cl
  41361e:	scas   al,BYTE PTR es:[edi]
  41361f:	pusha  
  413620:	dec    ebp
  413621:	mov    ds:0xbbd21ddc,eax
  413626:	lods   eax,DWORD PTR ds:[esi]
  413627:	sqrtps xmm3,XMMWORD PTR [ebx-0x72]
  41362b:	pop    ds
  41362c:	cli    
  41362d:	wrmsr  
  41362f:	jns    0x413620
  413631:	jae    0x41369d
  413633:	cmp    al,0xc7
  413635:	or     esp,ecx
  413637:	xchg   ah,al
  413639:	jbe    0x413655
  41363b:	ror    DWORD PTR [ecx],cl
  41363d:	jg     0x4135ef
  41363f:	mov    eax,ds:0xb4dcc76a
  413644:	or     eax,0x72afa9e2
  413649:	(bad)  
  41364a:	das    
  41364b:	sbb    BYTE PTR [edi+0x670fb3c7],cl
  413651:	fcmovne st,st(6)
  413653:	loopne 0x4136a7
  413655:	sbb    esp,eax
  413657:	mov    cl,0x43
  413659:	test   BYTE PTR [ebx*4+0x6f655414],cl
  413660:	arpl   WORD PTR [esi+ecx*4],bp
  413663:	or     DWORD PTR [eax],0x1cb7210
  413669:	push   ss
  41366a:	mov    es,WORD PTR [ebp+0x26131ec6]
  413670:	test   DWORD PTR [ebx+0x31f467e4],eax
  413676:	sbb    edx,DWORD PTR [edx+0x1a2cb165]
  41367c:	mov    al,ds:0x9315f85c
  413681:	push   esp
  413682:	test   bh,dl
  413684:	sbb    DWORD PTR [eax],ebx
  413686:	or     BYTE PTR [ecx+0x76],dh
  413689:	leave  
  41368a:	mov    ss,WORD PTR [edi-0x80]
  41368d:	lock (bad) 
  41368f:	xor    eax,0x714288f9
  413694:	add    BYTE PTR [ecx-0x72],cl
  413697:	jl     0x413631
  413699:	int3   
  41369a:	jl     0x41367c
  41369c:	pusha  
  41369d:	dec    ecx
  41369e:	arpl   WORD PTR ds:0xfe519c99,ax
  4136a4:	cli    
  4136a5:	dec    eax
  4136a6:	cmp    al,0xc6
  4136a8:	scas   eax,DWORD PTR es:[edi]
  4136a9:	int    0xf1
  4136ab:	mov    ebx,0xa32bb344
  4136b0:	xor    eax,0xfa1a7785
  4136b5:	test   al,0xf9
  4136b7:	pop    ebx
  4136b8:	scas   eax,DWORD PTR es:[edi]
  4136b9:	(bad)  
  4136ba:	lea    eax,[esi-0x70c184dc]
  4136c0:	xor    dh,BYTE PTR [esi+0x1a468fb0]
  4136c6:	xor    al,0x76
  4136c8:	inc    edx
  4136c9:	lods   al,BYTE PTR ss:[esi]
  4136cb:	das    
  4136cc:	pop    edx
  4136cd:	rcr    BYTE PTR [ebx+0x2c],1
  4136d0:	sbb    ebx,edx
  4136d2:	not    BYTE PTR [ecx+eiz*1]
  4136d5:	mov    dl,0x72
  4136d7:	mov    edi,DWORD PTR [esi-0x7f]
  4136da:	lahf   
  4136db:	xchg   esp,eax
  4136dc:	add    DWORD PTR [ebp+0x62337330],eax
  4136e2:	pop    ebx
  4136e3:	bound  esp,QWORD PTR [ebp-0x55a07b22]
  4136e9:	aaa    
  4136ea:	push   ebx
  4136eb:	sahf   
  4136ec:	test   al,0x45
  4136ee:	data16 mov WORD PTR [eax+0x436bdc47],fs
  4136f5:	mov    dh,0xf8
  4136f7:	or     bh,BYTE PTR [ecx-0x7f]
  4136fa:	mov    ss,WORD PTR [ecx-0x4197d1c2]
  413700:	jno    0x4136b6
  413702:	(bad)  
  413703:	pop    eax
  413704:	or     al,0xe2
  413706:	dec    ebp
  413707:	jle    0x413771
  413709:	scas   al,BYTE PTR es:[edi]
  41370a:	adc    BYTE PTR [edx-0x5a],cl
  41370d:	add    BYTE PTR [esi-0x6b],0x0
  413711:	lods   eax,DWORD PTR ds:[esi]
  413712:	mov    dh,0x57
  413714:	inc    edx
  413715:	daa    
  413716:	mov    WORD PTR [edx+0x1dbdec4a],?
  41371c:	fdivr  QWORD PTR [ebp+0x7b]
  41371f:	inc    esp
  413720:	inc    ebx
  413721:	cdq    
  413722:	push   esi
  413723:	push   esp
  413724:	ins    BYTE PTR es:[edi],dx
  413725:	cmp    ch,BYTE PTR [edx]
  413727:	inc    edi
  413728:	mov    edi,0x22ce9cd2
  41372d:	pop    ss
  41372e:	cwde   
  41372f:	inc    ebx
  413730:	inc    ebp
  413731:	out    0x99,al
  413733:	pop    eax
  413734:	inc    ebx
  413735:	ins    DWORD PTR es:[edi],dx
  413736:	scas   al,BYTE PTR es:[edi]
  413737:	fidivr DWORD PTR [ecx-0x64]
  41373a:	pushf  
  41373b:	cmp    DWORD PTR [ecx-0x7],edx
  41373e:	mov    al,0x68
  413740:	xor    dh,BYTE PTR [esi-0x507c924e]
  413746:	fwait
  413747:	push   esi
  413748:	sti    
  413749:	stos   BYTE PTR es:[edi],al
  41374a:	test   DWORD PTR [esi-0x3c],esi
  41374d:	sar    dl,1
  41374f:	mov    ecx,DWORD PTR [esi]
  413751:	and    al,0xe4
  413753:	xchg   BYTE PTR [edi],dh
  413755:	iret   
  413756:	out    0xa4,eax
  413758:	jg     0x413736
  41375a:	icebp  
  41375b:	mov    edx,0xd7d99280
  413760:	push   es
  413761:	dec    edi
  413762:	or     BYTE PTR [ebp-0x2c24a59e],al
  413768:	aas    
  413769:	int3   
  41376a:	or     eax,0xa8dbf269
  41376f:	mov    WORD PTR [ebp-0x61],es
  413772:	fadd   QWORD PTR fs:[ebp-0x5c]
  413776:	jb     0x4137d9
  413778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413779:	lahf   
  41377a:	xchg   ebx,eax
  41377b:	mov    bh,0x22
  41377d:	mov    ch,0x3e
  41377f:	in     al,dx
  413780:	pushf  
  413781:	sbb    DWORD PTR [edx],ecx
  413783:	add    esp,DWORD PTR es:[edi]
  413786:	test   al,0x6f
  413788:	cmp    DWORD PTR [esi-0x19],ecx
  41378b:	mov    al,ds:0x988c8e21
  413790:	and    eax,0x425363c3
  413795:	call   0x1bce4780
  41379a:	retf   
  41379b:	pop    edi
  41379c:	lods   eax,DWORD PTR ds:[esi]
  41379d:	xlat   BYTE PTR ds:[ebx]
  41379e:	mov    ds:0xb28a052f,al
  4137a3:	daa    
  4137a4:	or     bl,BYTE PTR [ecx+0x36792077]
  4137aa:	jmp    0xae2e33c1
  4137af:	jg     0x413812
  4137b1:	test   BYTE PTR [edi-0x12fabfa3],ah
  4137b7:	ins    DWORD PTR es:[edi],dx
  4137b8:	mov    ch,0xe
  4137ba:	mov    dl,0xb6
  4137bc:	popa   
  4137bd:	or     DWORD PTR [edx-0x58],esp
  4137c0:	mov    dl,0xd8
  4137c2:	ss setp cl
  4137c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c7:	push   ebx
  4137c8:	push   ss
  4137c9:	jnp    0x4137fa
  4137cb:	lock aam 0xcc
  4137ce:	mov    dl,0x5f
  4137d0:	lds    eax,FWORD PTR [eax+edx*1-0x69]
  4137d4:	aas    
  4137d5:	xchg   DWORD PTR [ecx+0x2a3cc00],edi
  4137db:	xchg   esi,eax
  4137dc:	mul    al
  4137de:	cmp    DWORD PTR [eax+0x73906154],eax
  4137e4:	jecxz  0x413801
  4137e6:	jmp    0xc1bb:0xbdf4d3b3
  4137ed:	jl     0x413775
  4137ef:	xchg   esp,eax
  4137f0:	dec    edx
  4137f1:	xchg   ecx,eax
  4137f2:	pop    esi
  4137f3:	inc    eax
  4137f4:	mov    sp,si
  4137f7:	pop    esi
  4137f8:	and    cl,dh
  4137fa:	xor    bl,BYTE PTR [esi]
  4137fc:	push   ss
  4137fd:	pushf  
  4137fe:	mov    DWORD PTR [edi],esp
  413800:	mov    ds:0x5918eee5,eax
  413805:	xchg   ebp,eax
  413806:	js     0x41386d
  413808:	gs push edi
  41380a:	iret   
  41380b:	or     al,0x4c
  41380d:	cmp    DWORD PTR [eax-0x57454b09],0x1e
  413814:	jp     0x413811
  413816:	jae    0x41384c
  413818:	gs into 
  41381a:	scas   al,BYTE PTR es:[edi]
  41381b:	sbb    dh,BYTE PTR [esi-0x62]
  41381e:	retf   0x4a0b
  413821:	mov    esi,0x57e026f
  413826:	hlt    
  413827:	jmp    0x81fc0adc
  41382c:	push   ds
  41382d:	push   ss
  41382e:	cmp    eax,0x98b5997e
  413833:	add    DWORD PTR [eax-0x30260cf5],ebp
  413839:	mov    DWORD PTR gs:[ebp-0x29537857],ecx
  413840:	ss inc esp
  413842:	adc    al,0x70
  413844:	call   0x1d5e32a6
  413849:	cli    
  41384a:	scas   al,BYTE PTR es:[edi]
  41384b:	sbb    al,0x0
  41384d:	leave  
  41384e:	jae    0x41386c
  413850:	push   ds
  413851:	push   esi
  413852:	pop    edi
  413853:	dec    ecx
  413854:	pushf  
  413855:	pusha  
  413856:	mov    esi,0x9d1c3d3b
  41385b:	cli    
  41385c:	cmp    edx,ebx
  41385e:	jmp    0x413843
  413860:	fdiv   DWORD PTR ds:[ebp+0x12a211a]
  413867:	idiv   DWORD PTR [ebx+ebx*2+0xf097173]
  41386e:	inc    esi
  41386f:	or     BYTE PTR [edi+0x35],ah
  413872:	int3   
  413873:	mov    dh,0x27
  413875:	ret    0xd037
  413878:	imul   edx,edi,0x177f32b
  41387e:	push   ecx
  41387f:	(bad)  
  413880:	cs dec edi
  413882:	cld    
  413883:	hlt    
  413884:	mov    esp,0x514fbb0b
  413889:	cdq    
  41388a:	pop    ds
  41388b:	cmp    eax,0xa43d186d
  413890:	add    ebp,DWORD PTR [esi-0x3d2b08fd]
  413896:	sti    
  413897:	lds    esi,FWORD PTR [esi-0x4395ef70]
  41389d:	pop    ds
  41389e:	mov    ecx,edx
  4138a0:	xor    al,dh
  4138a2:	mov    bh,0x0
  4138a4:	adc    BYTE PTR [edx],dh
  4138a6:	sub    BYTE PTR [esi+esi*4+0x497c9f41],ch
  4138ad:	inc    edx
  4138ae:	jbe    0x4138d3
  4138b0:	sbb    eax,ecx
  4138b2:	pusha  
  4138b3:	jecxz  0x4138c3
  4138b5:	xchg   edx,eax
  4138b6:	in     eax,dx
  4138b7:	push   ecx
  4138b8:	ds out dx,al
  4138ba:	pop    ebp
  4138bb:	pop    esp
  4138bc:	test   eax,0x7707967d
  4138c1:	test   dh,0x2c
  4138c4:	stos   BYTE PTR es:[edi],al
  4138c5:	inc    eax
  4138c6:	pop    esi
  4138c7:	sub    edi,DWORD PTR [esi]
  4138c9:	js     0x4138b3
  4138cb:	sbb    al,0xe2
  4138ce:	scas   al,BYTE PTR es:[edi]
  4138cf:	or     DWORD PTR [eax],0xfffffff9
  4138d2:	jmp    0x35e1:0xbfe44a2a
  4138d9:	iret   
  4138da:	mov    edx,0x391a7709
  4138df:	pop    ebx
  4138e0:	pushf  
  4138e1:	shl    ah,cl
  4138e3:	leave  
  4138e4:	ret    
  4138e5:	loop   0x4138f7
  4138e7:	xchg   BYTE PTR [esi],bh
  4138e9:	mov    ebp,0x2603423c
  4138ee:	gs fs ins BYTE PTR es:[edi],dx
  4138f1:	fcmovbe st,st(5)
  4138f3:	sub    al,0x9
  4138f5:	scas   al,BYTE PTR es:[edi]
  4138f6:	test   al,0xd0
  4138f8:	(bad)
  4138fd:	push   edi
  4138fe:	loope  0x413978
  413900:	pop    esp
  413901:	ins    DWORD PTR es:[edi],dx
  413902:	push   edi
  413903:	sbb    BYTE PTR [ebx],al
  413905:	sbb    ebp,DWORD PTR [edi+0x7c323898]
  41390b:	xlat   BYTE PTR ds:[ebx]
  41390c:	pop    ebp
  41390d:	inc    edi
  41390e:	dec    edx
  41390f:	ret    
  413910:	push   DWORD PTR [edi]
  413912:	mov    ebp,0xea35a0ac
  413917:	fsubr  DWORD PTR [edi]
  413919:	inc    edx
  41391a:	inc    esi
  41391b:	and    eax,0xcee31f8a
  413920:	pop    ebx
  413921:	mov    ?,WORD PTR [ebp+edi*8-0x53cde91e]
  413928:	xor    dl,al
  41392a:	(bad)  
  41392b:	sub    al,0x95
  41392d:	sbb    eax,0x89697668
  413932:	cmp    esp,DWORD PTR [ebp-0x12]
  413935:	push   cs
  413936:	mov    cl,0x6e
  413938:	push   ecx
  413939:	cmp    BYTE PTR [ebp+0x16],dh
  41393c:	jge    0x413909
  41393e:	std    
  41393f:	sub    eax,0x1b451472
  413944:	std    
  413945:	sub    eax,0x2a43d706
  41394a:	xlat   BYTE PTR ds:[ebx]
  41394b:	int    0x23
  41394d:	inc    edx
  41394e:	inc    eax
  41394f:	sbb    DWORD PTR [ecx+0x7bf52eea],0xffffffe3
  413956:	mov    al,0x6b
  413958:	xchg   ebx,eax
  413959:	xchg   ebx,eax
  41395a:	mov    gs,WORD PTR [esi+ebx*4]
  41395d:	pop    ebp
  41395e:	jns    0x41392c
  413960:	scas   eax,DWORD PTR es:[edi]
  413961:	add    eax,0xc16a2992
  413966:	xchg   edi,eax
  413967:	push   ecx
  413968:	jbe    0x4139dd
  41396a:	mov    BYTE PTR [eax+0x34],0xe5
  41396e:	mov    ds:0xf1b5abcc,eax
  413973:	(bad)  
  413975:	mov    WORD PTR [edi+esi*8+0xbb61ad],gs
  41397c:	pop    DWORD PTR [edi]
  41397e:	lods   al,BYTE PTR ds:[esi]
  41397f:	(bad)
  413982:	hlt    
  413983:	mov    BYTE PTR ds:0x5a973301,cl
  413989:	dec    edi
  41398a:	add    DWORD PTR [ebp+0x5a],eax
  41398d:	and    al,0xff
  41398f:	loopne 0x4139c8
  413991:	(bad)  
  413992:	push   esi
  413993:	pop    ebp
  413994:	sbb    BYTE PTR [ecx-0x6e],ch
  413997:	cmp    DWORD PTR [ecx-0x74],esp
  41399a:	scas   al,BYTE PTR es:[edi]
  41399b:	adc    dh,BYTE PTR [edx+0x1e]
  41399e:	xchg   esi,eax
  41399f:	iret   
  4139a0:	xchg   esp,eax
  4139a1:	jge    0x413945
  4139a3:	xor    bh,BYTE PTR [esi+0x1]
  4139a6:	sahf   
  4139a7:	addr16 call 0xe963:0x67ddce
  4139af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b0:	int3   
  4139b1:	mov    eax,0xd31a5282
  4139b6:	or     eax,0xa1d9612b
  4139bb:	pop    DWORD PTR [eax]
  4139bd:	adc    cl,BYTE PTR [ecx+0x79]
  4139c0:	jge    0x4139fc
  4139c2:	sbb    ah,BYTE PTR gs:[ebx+0x53]
  4139c6:	int    0x69
  4139c8:	aas    
  4139c9:	inc    edi
  4139ca:	cwde   
  4139cb:	jo     0x4139d0
  4139cd:	(bad)  
  4139ce:	ds sbb eax,0xf8146641
  4139d4:	mov    esp,0x38e0f521
  4139d9:	sbb    cl,0xa8
  4139dc:	lods   al,BYTE PTR ds:[esi]
  4139dd:	push   ds
  4139de:	jl     0x413a00
  4139e0:	leave  
  4139e1:	sub    eax,0xeb8d24ff
  4139e6:	mov    edi,0x9c1745ce
  4139eb:	(bad)  
  4139ec:	cwd    
  4139ee:	test   BYTE PTR [edx],0xad
  4139f1:	stos   DWORD PTR es:[edi],eax
  4139f2:	int    0x4d
  4139f4:	cmp    eax,0x8d748e9a
  4139f9:	dec    esi
  4139fa:	sbb    DWORD PTR [ebx],eax
  4139fc:	inc    edx
  4139fd:	loop   0x413997
  4139ff:	ror    BYTE PTR [esi],cl
  413a01:	int3   
  413a02:	cmp    DWORD PTR [ecx+0x49],ebp
  413a05:	xor    DWORD PTR [edx+edi*2-0x3d],ebp
  413a09:	mov    dh,0xfc
  413a0b:	adc    eax,0x66339075
  413a10:	shl    BYTE PTR [esi],0x4f
  413a13:	mov    al,0x14
  413a15:	fistp  DWORD PTR [ecx+eax*1+0x1e]
  413a19:	iret   
  413a1a:	retf   
  413a1b:	pop    edi
  413a1c:	les    esp,FWORD PTR [ebx+0x2b6a3446]
  413a22:	in     al,dx
  413a23:	jp     0x413a26
  413a25:	xor    esp,DWORD PTR [ecx+ebp*1+0x52]
  413a29:	xchg   BYTE PTR [edi+eax*8+0x5f],bh
  413a2d:	push   ds
  413a2e:	fwait
  413a2f:	pop    edi
  413a30:	jnp    0x4139ec
  413a32:	leave  
  413a33:	pusha  
  413a34:	dec    esp
  413a35:	push   ecx
  413a36:	repnz xlat BYTE PTR ds:[ebx]
  413a38:	or     DWORD PTR [ebx-0x186eaf4],0xffffffea
  413a3f:	(bad)  [eax]
  413a41:	xchg   DWORD PTR [ebp+ebx*1-0xa],ebp
  413a45:	sbb    eax,0xd4a4dcff
  413a4a:	shl    DWORD PTR ds:0xd1e29114,cl
  413a50:	retf   
  413a51:	xchg   edi,ecx
  413a53:	ss jmp 0x413a0a
  413a56:	mov    WORD PTR [ebx],?
  413a58:	and    esi,ebx
  413a5a:	(bad)
  413a5e:	dec    eax
  413a5f:	loope  0x413a56
  413a61:	aam    0xcd
  413a63:	add    BYTE PTR [esi+0x6edc811e],0x4d
  413a6a:	jp     0x413a96
  413a6c:	add    BYTE PTR [ebx-0x289ad091],bl
  413a72:	xlat   BYTE PTR ds:[ebx]
  413a73:	cld    
  413a74:	(bad)  
  413a75:	sbb    BYTE PTR [edx+0x758da417],dh
  413a7b:	cmp    bh,al
  413a7d:	(bad)  
  413a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a7f:	(bad)  
  413a81:	sti    
  413a82:	xchg   esp,eax
  413a83:	outs   dx,DWORD PTR ds:[esi]
  413a84:	ins    BYTE PTR es:[edi],dx
  413a85:	sbb    BYTE PTR es:[bp+di],ch
  413a89:	inc    esi
  413a8a:	iret   
  413a8b:	jge    0x413a70
  413a8d:	jp     0x413a74
  413a8f:	dec    edi
  413a90:	bound  edi,QWORD PTR [ebp+0x75b1226]
  413a96:	cmc    
  413a97:	and    DWORD PTR [ecx-0x78],edx
  413a9a:	fist   DWORD PTR [ecx-0x7ae515f2]
  413aa0:	es aam 0x37
  413aa3:	cmp    al,0xff
  413aa5:	shr    BYTE PTR [edx],1
  413aa7:	xor    eax,DWORD PTR [ebx-0x6]
  413aaa:	mov    WORD PTR [eax],fs
  413aac:	push   eax
  413aad:	adc    dh,BYTE PTR [esi-0x705f6549]
  413ab3:	inc    esp
  413ab4:	inc    ebp
  413ab5:	jb     0x413aa1
  413ab7:	lea    edi,[edx]
  413ab9:	pop    esi
  413aba:	shl    esp,cl
  413abc:	add    DWORD PTR [esi],0x6e
  413abf:	mov    ds:0x148c63f,eax
  413ac4:	pop    edx
  413ac5:	icebp  
  413ac6:	mov    esp,0x4ace397e
  413acb:	std    
  413acc:	or     eax,0x26039f0a
  413ad1:	(bad)  
  413ad2:	inc    ebp
  413ad3:	mov    eax,0x48003a44
  413ad8:	loopne 0x413ae0
  413ada:	mov    edi,ds
  413adc:	adc    al,0xa0
  413ade:	mov    dh,0xa4
  413ae0:	fwait
  413ae1:	lahf   
  413ae2:	inc    edx
  413ae3:	pop    edi
  413ae4:	push   edi
  413ae5:	pop    edi
  413ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae7:	sub    DWORD PTR [ecx+0x21],ebp
  413aea:	out    dx,eax
  413aeb:	jo     0x413b51
  413aed:	loop   0x413a85
  413aef:	inc    esp
  413af0:	sbb    BYTE PTR [ebx+0x56],0x88
  413af4:	gs jns 0x413ae6
  413af7:	or     DWORD PTR [ecx+0x4a836c94],ebx
  413afd:	push   esp
  413afe:	sub    esp,ecx
  413b00:	xchg   ebp,eax
  413b01:	and    DWORD PTR [esi-0x2760cd90],esi
  413b07:	cmp    al,0x1b
  413b09:	mov    ebx,DWORD PTR [eax+0x37]
  413b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b0d:	and    al,0x8
  413b0f:	xor    ah,BYTE PTR [esi]
  413b11:	adc    eax,0x5abe0492
  413b16:	lds    esi,FWORD PTR [edi+ebp*4+0x5f]
  413b1a:	dec    esp
  413b1b:	push   es
  413b1c:	and    ebp,DWORD PTR [edi+edi*4-0x34]
  413b20:	cwde   
  413b21:	ins    BYTE PTR es:[edi],dx
  413b22:	add    eax,0x16f27246
  413b27:	lds    edi,FWORD PTR [esi]
  413b29:	(bad)  
  413b2a:	loop   0x413afb
  413b2c:	push   ebx
  413b2d:	ror    esi,0xd
  413b30:	repnz pusha 
  413b32:	xor    BYTE PTR [eax-0x1866836b],0xb
  413b39:	into   
  413b3a:	popf   
  413b3b:	into   
  413b3c:	pop    es
  413b3d:	loop   0x413ae1
  413b3f:	stos   DWORD PTR es:[edi],eax
  413b40:	jbe    0x413b21
  413b42:	test   eax,0x93950014
  413b47:	mov    ds:0x948d7ae,al
  413b4c:	(bad)  
  413b4d:	adc    dl,BYTE PTR [edx+0x3e]
  413b50:	push   esp
  413b51:	popf   
  413b52:	push   esi
  413b53:	jg     0x413b9f
  413b55:	ds push ecx
  413b57:	xor    al,0x36
  413b59:	cwde   
  413b5a:	xchg   al,ah
  413b5c:	dec    eax
  413b5d:	das    
  413b5e:	push   0x12
  413b60:	leave  
  413b61:	loope  0x413ae5
  413b63:	loope  0x413bb5
  413b65:	daa    
  413b66:	inc    esi
  413b67:	sub    ecx,DWORD PTR [esi+0x73]
  413b6a:	fidiv  DWORD PTR [ebp+0x1c]
  413b6d:	cmp    ch,BYTE PTR [eax-0x7e]
  413b70:	and    al,0xb2
  413b72:	rcr    DWORD PTR [eax+0x26832a2a],cl
  413b78:	out    0x8,al
  413b7a:	enter  0x3a3a,0x87
  413b7e:	cmp    BYTE PTR [edx],dl
  413b80:	mov    esp,0x9590f673
  413b85:	jecxz  0x413b5a
  413b87:	add    bl,BYTE PTR [edx+eax*4-0x6c]
  413b8b:	adc    eax,0x2ccfc616
  413b90:	dec    edx
  413b91:	mov    ?,WORD PTR [edx+0xd]
  413b94:	test   DWORD PTR [ecx+edi*8-0x504afeea],0xc5ab7557
  413b9f:	jmp    0xaed1:0x275af090
  413ba6:	fwait
  413ba7:	jl     0x413b43
  413ba9:	sbb    DWORD PTR [ebx+0xa],edi
  413bac:	jl     0x413b90
  413bae:	in     eax,dx
  413baf:	lods   eax,DWORD PTR ds:[esi]
  413bb0:	mov    ?,WORD PTR [esi+edi*4-0x42538c7e]
  413bb7:	pop    edx
  413bb8:	rcr    BYTE PTR [edx],0x1d
  413bbb:	pop    esp
  413bbc:	inc    ebx
  413bbd:	hlt    
  413bbe:	sub    ebx,DWORD PTR [edx]
  413bc0:	cdq    
  413bc1:	sub    DWORD PTR [eax],ebp
  413bc3:	mov    ecx,0x11d7ca40
  413bc8:	dec    edx
  413bc9:	into   
  413bca:	mov    esi,0xb2a878ed
  413bcf:	push   eax
  413bd0:	test   al,0x67
  413bd2:	mov    dl,0xdb
  413bd4:	pop    ecx
  413bd5:	jne    0x413b88
  413bd7:	xchg   ecx,eax
  413bd8:	mov    bh,BYTE PTR [ebp+ecx*2-0x51937698]
  413bdf:	jl     0x413bf6
  413be1:	xor    edi,DWORD PTR [eax-0x7e]
  413be4:	pop    edx
  413be5:	std    
  413be6:	sbb    eax,0xc88e6bb7
  413beb:	repnz or DWORD PTR [ebx-0x56],esp
  413bef:	and    DWORD PTR [ebx-0xc],esi
  413bf2:	or     BYTE PTR [edx-0x77],bh
  413bf5:	outs   dx,DWORD PTR ds:[esi]
  413bf6:	mov    ax,0xff7f
  413bfa:	pop    ecx
  413bfb:	or     bl,BYTE PTR [edx+edx*2+0xfa9b989]
  413c02:	dec    edx
  413c03:	push   cs
  413c04:	rcr    BYTE PTR [esi],1
  413c06:	cmp    DWORD PTR [eax+0x51],eax
  413c09:	mov    ds:0xf14a57b6,al
  413c0e:	adc    bl,BYTE PTR [ecx]
  413c10:	call   0xd28f:0x36d956d3
  413c17:	iret   
  413c18:	add    edx,DWORD PTR [ebx+ebx*1-0x41671302]
  413c1f:	xchg   dh,cl
  413c21:	cwde   
  413c22:	(bad)  
  413c23:	mov    cl,0xe1
  413c25:	push   esi
  413c26:	seto   BYTE PTR [esi-0x59]
  413c2a:	retf   
  413c2b:	mov    al,ds:0x7c920246
  413c30:	push   esi
  413c31:	pop    edx
  413c32:	adc    ebp,esp
  413c34:	lds    edx,FWORD PTR [eax-0xa]
  413c37:	in     al,0xf1
  413c39:	push   esp
  413c3a:	jmp    0xb679dbdc
  413c3f:	mov    edi,ss
  413c41:	test   eax,0x284402bb
  413c46:	addr16 push ecx
  413c48:	retf   0x7a80
  413c4b:	or     cl,BYTE PTR [edx+0x39]
  413c4e:	jp     0x413c4a
  413c50:	and    DWORD PTR ss:[edi],esi
  413c53:	inc    ah
  413c55:	sub    ebp,DWORD PTR ds:[edi+0xc]
  413c59:	retf   0xd267
  413c5c:	push   0x9b7c5ae8
  413c61:	mov    dh,BYTE PTR [esi+0x51dd342f]
  413c67:	outs   dx,DWORD PTR ds:[esi]
  413c68:	xchg   esp,eax
  413c69:	into   
  413c6a:	mov    edx,0x52f9360d
  413c6f:	imul   eax,DWORD PTR [eax+0x52ae4e01],0x4e
  413c76:	mov    bh,0xf
  413c78:	cwde   
  413c79:	arpl   si,sp
  413c7b:	sub    eax,0xde9d54ed
  413c80:	mov    bh,al
  413c82:	push   es
  413c83:	push   ecx
  413c84:	add    eax,0xa9e9861
  413c89:	aaa    
  413c8a:	xchg   BYTE PTR [ebx-0x42f25601],al
  413c90:	ja     0x413c1b
  413c92:	(bad)  
  413c93:	daa    
  413c94:	shr    BYTE PTR cs:[esi],0xb5
  413c98:	mov    ecx,0xa6f0fc8a
  413c9d:	(bad)  
  413c9e:	jg     0x413c7a
  413ca0:	dec    esi
  413ca1:	fwait
  413ca2:	jnp    0x413d1b
  413ca4:	data16 repnz into 
  413ca7:	pop    ebp
  413ca8:	push   eax
  413ca9:	xchg   edx,eax
  413caa:	xchg   ebx,eax
  413cab:	pop    edx
  413cac:	or     BYTE PTR [esi+0x73658441],ah
  413cb2:	sbb    bh,BYTE PTR [ebp*4+0x58cfafca]
  413cb9:	fld    TBYTE PTR [ebx]
  413cbb:	xchg   ecx,eax
  413cbc:	mov    ah,0x6e
  413cbe:	sbb    BYTE PTR [eax-0x11],ch
  413cc1:	arpl   di,ax
  413cc3:	repz pop esi
  413cc5:	idiv   dl
  413cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc8:	mov    cl,0xa0
  413cca:	mov    bh,0x58
  413ccc:	mov    ds:0x9d00f068,eax
  413cd1:	fnsave [ebx+ecx*4+0x5b]
  413cd5:	loop   0x413d4f
  413cd7:	ja     0x413d4f
  413cd9:	inc    bl
  413cdb:	adc    BYTE PTR [ebp+0x6174bd1d],cl
  413ce1:	jo     0x413c92
  413ce3:	test   dl,0x7a
  413ce6:	mov    dl,0x33
  413ce8:	repnz inc edx
  413cea:	(bad)  
  413ceb:	cmp    al,0x67
  413ced:	stos   BYTE PTR es:[edi],al
  413cee:	in     eax,0xd1
  413cf0:	or     edi,DWORD PTR [ebx+edx*2]
  413cf3:	and    BYTE PTR [ebx-0x56],0xc0
  413cf7:	call   0x1e1:0x390f7b21
  413cfe:	popa   
  413cff:	lock addr16 and ebx,edx
  413d03:	sbb    BYTE PTR [esi],dl
  413d05:	mov    dh,BYTE PTR [ebp-0x55]
  413d08:	hlt    
  413d09:	dec    esi
  413d0a:	fwait
  413d0b:	ret    0x265e
  413d0e:	call   0xe6452e5
  413d13:	cmp    edi,DWORD PTR [ebx+0x29]
  413d16:	sbb    al,0xc1
  413d18:	(bad)  
  413d19:	scas   al,BYTE PTR es:[edi]
  413d1a:	inc    edi
  413d1b:	and    DWORD PTR [eax+edx*8-0x6f],0x11
  413d20:	dec    ebp
  413d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d22:	mov    BYTE PTR [ebx+0x6e],dl
  413d25:	lahf   
  413d26:	ror    ebp,0xa9
  413d29:	and    esp,DWORD PTR [edi]
  413d2b:	dec    edi
  413d2c:	push   edx
  413d2d:	sub    ebx,DWORD PTR [edx-0x6c259e3d]
  413d33:	or     eax,0xdba93a64
  413d38:	sbb    eax,0x771ad901
  413d3d:	sbb    ch,BYTE PTR [edx]
  413d3f:	cmp    esp,DWORD PTR [ecx+0x3f]
  413d42:	call   0xf723:0x6a5246c0
  413d49:	pushf  
  413d4a:	mov    esi,0x91e27e89
  413d4f:	sub    edi,DWORD PTR [esp+esi*1-0x78]
  413d53:	sub    DWORD PTR [edi+0x7a],eax
  413d56:	sub    esi,DWORD PTR [edi]
  413d58:	call   0x44563fb2
  413d5d:	lods   eax,DWORD PTR ds:[esi]
  413d5e:	or     DWORD PTR [esi+edx*2],0xb
  413d62:	aad    0xc2
  413d64:	out    0x49,al
  413d66:	mov    ecx,0x33d62f6b
  413d6b:	cmc    
  413d6c:	inc    edi
  413d6d:	jbe    0x413d2d
  413d6f:	mov    ah,0x2b
  413d71:	fimul  WORD PTR [ebx+0x6ef73dfd]
  413d77:	and    eax,0x6ee25565
  413d7c:	and    edx,DWORD PTR [edx+eiz*4-0x62]
  413d80:	(bad)  
  413d81:	iret   
  413d82:	or     BYTE PTR [eax+eax*2],0xc3
  413d86:	sub    DWORD PTR [ecx],0xffffffa5
  413d89:	mov    al,ds:0x7fa7331f
  413d8e:	mov    BYTE PTR [ebp-0x2b],bl
  413d91:	fcmovb st,st(1)
  413d93:	mov    bh,0x3d
  413d95:	mov    ebp,0xd2593588
  413d9a:	xchg   edx,eax
  413d9b:	jb     0x413d76
  413d9d:	aad    0xd0
  413d9f:	xchg   ebp,eax
  413da0:	packssdw mm5,mm4
  413da3:	test   DWORD PTR [edi],edi
  413da5:	outs   dx,BYTE PTR ds:[esi]
  413da6:	aam    0x7e
  413da8:	rol    al,0xc0
  413dab:	rol    al,0xc0
  413dae:	rol    al,0xc0
  413db1:	rol    al,0xc0
  413db4:	rol    al,0xc0
  413db7:	rcl    BYTE PTR [ebx],0x57
  413dba:	ja     0x413d83
  413dbc:	push   ss
  413dbd:	mov    edx,0xa8ec25d0
  413dc2:	dec    esp
  413dc3:	mov    esp,0xd9d28e21
  413dc8:	cmp    BYTE PTR ds:0x79e819b4,bl
  413dce:	retf   
  413dcf:	jmp    0x413d79
  413dd1:	test   al,0x86
  413dd4:	pop    edx
  413dd5:	dec    ebx
  413dd6:	xchg   esi,eax
  413dd7:	inc    edi
  413dd8:	fwait
  413dd9:	xchg   ebp,eax
  413dda:	cli    
  413ddb:	cmp    BYTE PTR [eax+0x1a],dl
  413dde:	scas   al,BYTE PTR es:[edi]
  413ddf:	adc    eax,0x8934ae6b
  413de4:	mov    ds:0x790fa3c9,eax
  413de9:	(bad)  
  413dea:	icebp  
  413deb:	add    eax,0x70ce1e1b
  413df0:	xor    ecx,esp
  413df2:	imul   ebp,DWORD PTR ds:[ebp+0x5],0xf54c517b
  413dfa:	mov    ebp,0xad71db38
  413dff:	dec    ebp
  413e00:	and    edi,0x3a409318
  413e06:	mov    ch,0x6b
  413e08:	jg     0x413de7
  413e0a:	cdq    
  413e0b:	pop    esi
  413e0c:	or     bl,BYTE PTR [edx-0x7d]
  413e0f:	test   eax,0xb276b901
  413e14:	popf   
  413e15:	test   eax,0xeb4154e5
  413e1a:	lods   eax,DWORD PTR ds:[esi]
  413e1b:	xor    esi,DWORD PTR [esi]
  413e1d:	loope  0x413e51
  413e1f:	or     BYTE PTR ds:0x353d9d95,bl
  413e25:	add    esi,DWORD PTR [ebp+0x37ec6332]
  413e2b:	mov    cl,0x86
  413e2d:	mov    ds:0xbd5837f5,al
  413e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e33:	and    esi,DWORD PTR [edx+0x7fcc9ccb]
  413e39:	xchg   ebp,eax
  413e3a:	xchg   ecx,eax
  413e3b:	add    edi,DWORD PTR [esi+ecx*1]
  413e3e:	loop   0x413e5e
  413e40:	inc    edi
  413e41:	into   
  413e42:	pop    esp
  413e43:	fldenv [ecx-0x52f61a5a]
  413e49:	fidiv  DWORD PTR [ebp+0x4e]
  413e4c:	add    DWORD PTR [ebp+0x5ca31123],esi
  413e52:	out    dx,eax
  413e53:	mov    ch,0xbb
  413e55:	jbe    0x413e53
  413e57:	pushf  
  413e58:	mov    DWORD PTR [eax+0x264caa00],eax
  413e5e:	popf   
  413e5f:	popa   
  413e60:	aaa    
  413e61:	pop    ebp
  413e62:	mov    edx,0xec142305
  413e67:	cdq    
  413e68:	in     eax,0xa5
  413e6a:	sub    al,0xd6
  413e6c:	sar    BYTE PTR [ebx],0x52
  413e6f:	push   cs
  413e70:	lahf   
  413e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e72:	js     0x413e5d
  413e74:	lds    ebx,FWORD PTR [edx]
  413e76:	ss jno 0x413e2d
  413e79:	stos   BYTE PTR es:[edi],al
  413e7a:	fsubrp st(7),st
  413e7c:	into   
  413e7d:	loopne 0x413e49
  413e7f:	mov    edi,0x950db53d
  413e84:	mov    ebx,DWORD PTR [edx+0x3fefbf5f]
  413e8a:	sbb    BYTE PTR [eax],0x15
  413e8d:	dec    edi
  413e8e:	ds out 0x9c,eax
  413e91:	imul   ch
  413e93:	dec    ebx
  413e94:	mov    eax,0xd36252dc
  413e99:	(bad)  
  413e9a:	(bad)  
  413e9c:	lock rcr DWORD PTR [edi],cl
  413e9f:	cmp    al,0xaa
  413ea1:	push   edx
  413ea2:	fsub   st,st(0)
  413ea4:	sbb    DWORD PTR [ecx+0x4f19f725],ebx
  413eaa:	aas    
  413eab:	sbb    DWORD PTR [edx-0x32ec96c0],edx
  413eb1:	mov    ah,0x8f
  413eb3:	pop    edx
  413eb4:	retf   0xa937
  413eb7:	test   eax,0x2defc3
  413ebc:	fisttp WORD PTR [eax]
  413ebe:	mov    dh,0xea
  413ec0:	xchg   DWORD PTR [eax-0x19],esi
  413ec3:	cdq    
  413ec4:	mov    ebx,0xff353dc4
  413ec9:	cs ror eax,1
  413ecc:	fdivr  DWORD PTR [edx-0x6a]
  413ecf:	push   eax
  413ed0:	adc    dh,ch
  413ed2:	xchg   esp,eax
  413ed3:	add    al,0x20
  413ed5:	js     0x413e5a
  413ed7:	cmp    BYTE PTR [eax+0x5ed5fe8b],0x5c
  413ede:	sub    eax,0xcd9aa3f9
  413ee3:	int3   
  413ee4:	xor    eax,0xdd6decf2
  413ee9:	repz mov ecx,0x17ba00bd
  413eef:	push   ebx
  413ef0:	sub    eax,0x17855fde
  413ef5:	hlt    
  413ef6:	push   ecx
  413ef7:	inc    esp
  413ef8:	push   ss
  413ef9:	push   ebp
  413efa:	hlt    
  413efb:	and    esp,DWORD PTR [ebx+0x3a]
  413efe:	or     cl,cl
  413f00:	dec    eax
  413f01:	sbb    al,0xd8
  413f03:	test   DWORD PTR [esi],ecx
  413f05:	and    dh,al
  413f07:	xchg   ebx,eax
  413f08:	adc    DWORD PTR [esi],edi
  413f0a:	xchg   ebp,eax
  413f0b:	pop    esi
  413f0c:	or     BYTE PTR [ebx+0x32],bl
  413f0f:	mov    ah,0x79
  413f11:	lahf   
  413f12:	pushf  
  413f13:	ret    0x17f1
  413f16:	sbb    DWORD PTR [esi],0x29ad6c60
  413f1c:	xchg   edx,eax
  413f1d:	hlt    
  413f1e:	not    BYTE PTR [ebp+0x31fd44bc]
  413f24:	outs   dx,BYTE PTR ds:[esi]
  413f25:	add    al,0x1b
  413f27:	int3   
  413f28:	ins    DWORD PTR es:[edi],dx
  413f29:	loop   0x413f66
  413f2b:	stos   BYTE PTR es:[edi],al
  413f2c:	dec    esi
  413f2d:	add    esp,esp
  413f2f:	and    BYTE PTR [ebx-0x36],ah
  413f32:	dec    ebx
  413f33:	repz inc edx
  413f35:	cmp    al,0xe0
  413f37:	cmp    eax,0x5d76320c
  413f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3d:	push   ebx
  413f3e:	jae    0x413f39
  413f40:	inc    ebp
  413f41:	adc    al,0x98
  413f43:	ror    DWORD PTR [ecx+0x39cf941a],0xae
  413f4a:	add    ebp,eax
  413f4c:	rcr    BYTE PTR [edi-0x2e24c278],cl
  413f52:	cdq    
  413f53:	das    
  413f54:	daa    
  413f55:	rcl    DWORD PTR [ebx],0x20
  413f58:	int3   
  413f59:	or     BYTE PTR [ebx+0x48],0x7d
  413f5d:	or     bl,BYTE PTR [ebx-0x11f3335]
  413f63:	nop
  413f64:	or     eax,0x4c53e602
  413f69:	inc    esi
  413f6a:	nop
  413f6b:	mov    ah,0x3
  413f6d:	or     BYTE PTR [esi-0x60729fa7],ch
  413f73:	mov    cl,0x96
  413f75:	mov    ds,WORD PTR [esi-0x6d6ff855]
  413f7b:	test   BYTE PTR [eax+0x60],dl
  413f7e:	out    dx,al
  413f7f:	and    ch,BYTE PTR [eax-0x3e]
  413f82:	sbb    cl,BYTE PTR [edx-0x62]
  413f85:	sub    esp,edi
  413f87:	mov    bl,0x4
  413f89:	ds in  al,0x5b
  413f8c:	popa   
  413f8d:	dec    esi
  413f8e:	clc    
  413f8f:	sahf   
  413f90:	les    esi,FWORD PTR [edx+0x41]
  413f93:	xchg   BYTE PTR [esi],ah
  413f95:	out    dx,al
  413f96:	push   ebx
  413f97:	mov    ecx,edi
  413f99:	pop    esi
  413f9a:	sub    DWORD PTR [ebx-0xb01c3b3],0x40
  413fa1:	loop   0x413ff0
  413fa3:	cmp    edi,edx
  413fa5:	jmp    0xf59d:0xadd6dfdb
  413fac:	jge    0x413ff0
  413fae:	and    DWORD PTR [edi],eax
  413fb0:	inc    ebp
  413fb1:	fmul   DWORD PTR [ecx-0x4c4069e2]
  413fb7:	loopne 0x413fed
  413fb9:	xchg   ecx,eax
  413fba:	mov    bl,cl
  413fbc:	ss loope 0x413f92
  413fbf:	mov    bh,0x62
  413fc1:	inc    esp
  413fc2:	sbb    eax,0xc547d568
  413fc7:	mov    ch,0x3e
  413fc9:	test   ch,al
  413fcb:	pop    esp
  413fcc:	push   eax
  413fcd:	clc    
  413fce:	call   0xccf63441
  413fd3:	push   0xffffff80
  413fd5:	call   0xf76a:0xa0bccfdb
  413fdc:	clc    
  413fdd:	aas    
  413fde:	les    esi,FWORD PTR [edi+eax*2]
  413fe1:	neg    dh
  413fe3:	mov    BYTE PTR [eax],cl
  413fe5:	loope  0x413f7b
  413fe7:	mov    bl,0xfb
  413fe9:	enter  0xaa26,0xc7
  413fed:	(bad)  
  413fee:	bswap  esp
  413ff0:	in     al,0xc6
  413ff2:	cmp    bl,BYTE PTR [eax-0xe]
  413ff5:	and    ax,0x5a5f
  413ff9:	mov    bh,0x8f
  413ffb:	(bad)  
  413ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ffd:	(bad)  
  413ffe:	adc    al,0x4d
  414000:	jl     0x413f8b
  414002:	enter  0x75b,0xf9
  414006:	xchg   ecx,eax
  414007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414008:	xchg   edx,eax
  414009:	cmp    eax,0x510f086c
  41400e:	in     al,0x6d
  414010:	cs ins BYTE PTR es:[edi],dx
  414012:	or     eax,0x98ab4d98
  414017:	aam    0x7a
  414019:	or     BYTE PTR [edi],bh
  41401b:	add    al,0x6d
  41401d:	mov    ds:0xdf8a356e,al
  414022:	aas    
  414023:	and    DWORD PTR [esi+ebx*8+0x3f268299],edx
  41402a:	popf   
  41402b:	or     al,0xe
  41402d:	sub    eax,0x869aaab2
  414032:	test   al,0x86
  414034:	jle    0x41402b
  414036:	mov    cl,0xb7
  414038:	push   edi
  414039:	es enter 0x149,0xb0
  41403e:	std    
  41403f:	repz loopne 0x414032
  414042:	fdivr  st(4),st
  414044:	inc    esi
  414045:	push   ebp
  414046:	in     al,0x93
  414048:	push   0x5864afc2
  41404d:	and    DWORD PTR [ecx+0x15],edi
  414050:	jecxz  0x414020
  414052:	jnp    0x414017
  414054:	mov    al,0x93
  414056:	xor    BYTE PTR [edx+0x2c32b67e],0x22
  41405d:	sub    ecx,eax
  41405f:	fidiv  DWORD PTR [ecx]
  414061:	push   esp
  414062:	(bad)  
  414063:	dec    ecx
  414064:	(bad)  
  414065:	push   es
  414066:	inc    ebx
  414067:	es add eax,0x7b0a94ca
  41406d:	jg     0x41402c
  41406f:	dec    ebp
  414070:	add    cl,BYTE PTR [ecx]
  414072:	(bad)  
  414074:	push   ss
  414075:	push   cs
  414076:	cmp    DWORD PTR [eax+0x53],eax
  414079:	out    0xae,eax
  41407b:	cmp    BYTE PTR [esi],dl
  41407d:	dec    ebx
  41407e:	sub    bh,0x4c
  414081:	lods   eax,DWORD PTR ds:[esi]
  414082:	pushf  
  414083:	sub    eax,0xdacc9897
  414088:	jno    0x41402f
  41408a:	int3   
  41408b:	loopne 0x41402e
  41408d:	hlt    
  41408e:	daa    
  41408f:	push   ebx
  414090:	repz push ss
  414092:	or     ah,BYTE PTR ds:0x743b32aa
  414098:	sti    
  414099:	sub    DWORD PTR [esi+0x3818fe5e],0x131779e6
  4140a3:	jl     0x4140fd
  4140a5:	push   0x29
  4140a7:	mov    BYTE PTR [edi],dl
  4140a9:	push   ss
  4140aa:	cwde   
  4140ab:	clc    
  4140ac:	dec    esp
  4140ad:	adc    ch,BYTE PTR [eax-0x51]
  4140b0:	sub    al,0xc6
  4140b2:	sub    BYTE PTR [ebp-0x42],cl
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	cmp    ebp,DWORD PTR [bx+di]
  4140b9:	ror    BYTE PTR [ebx+edx*8+0x41487855],cl
  4140c0:	mov    ebx,0x5a0e6dc8
  4140c5:	shl    DWORD PTR [ebx],0x6a
  4140c8:	mov    eax,esp
  4140ca:	pop    esi
  4140cb:	aaa    
  4140cc:	ins    DWORD PTR es:[edi],dx
  4140cd:	les    ebp,FWORD PTR [eax+eiz*4-0x699e9917]
  4140d4:	test   BYTE PTR [ebx-0x35d1c605],al
  4140da:	sbb    eax,0xb985176d
  4140df:	dec    BYTE PTR [edi]
  4140e1:	dec    edi
  4140e2:	push   cs
  4140e3:	jle    0x414155
  4140e5:	sub    DWORD PTR [bx+si],ecx
  4140e8:	and    al,0x0
  4140ea:	xor    ebp,DWORD PTR ds:0x49e33cbf
  4140f0:	mov    WORD PTR [edi],fs
  4140f2:	xchg   edi,eax
  4140f3:	dec    edi
  4140f4:	pop    ss
  4140f5:	or     esi,DWORD PTR [esi]
  4140f7:	mov    ebx,0x41fee7e
  4140fc:	into   
  4140fd:	aaa    
  4140fe:	add    DWORD PTR [ecx+0x3],0x4f760004
  414105:	or     BYTE PTR [edx+0x7f40de24],0xdd
  41410c:	inc    ebp
  41410d:	aas    
  41410e:	daa    
  41410f:	adc    BYTE PTR [ecx],0x82
  414112:	in     al,dx
  414113:	xor    al,0xd7
  414115:	sub    BYTE PTR [ebx+0x46e53266],0xf
  41411c:	xchg   edi,eax
  41411d:	xchg   BYTE PTR es:0x1d1bc93a,ah
  414124:	push   0x15
  414126:	gs or  al,0x66
  414129:	aaa    
  41412a:	pusha  
  41412b:	jae    0x414109
  41412d:	inc    ebp
  41412e:	mov    dh,0xbc
  414130:	rol    DWORD PTR [esi-0x40],cl
  414133:	mov    gs,WORD PTR [eax-0x143b51e4]
  414139:	push   esi
  41413a:	scas   al,BYTE PTR es:[edi]
  41413b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413c:	ss hlt 
  41413e:	inc    ebp
  41413f:	pusha  
  414140:	call   0x6f60:0xbe5d359f
  414147:	cmp    al,0x99
  414149:	daa    
  41414a:	mov    BYTE PTR [ebp-0x4e],dh
  41414d:	pop    esp
  41414e:	loop   0x414173
  414150:	aad    0x55
  414152:	lahf   
  414153:	inc    eax
  414154:	sbb    esi,DWORD PTR [eax+ecx*4]
  414157:	sti    
  414158:	or     DWORD PTR [edx],esi
  41415a:	ins    BYTE PTR es:[edi],dx
  41415b:	dec    edi
  41415c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415d:	stos   BYTE PTR es:[edi],al
  41415e:	ds iret 
  414160:	pop    ebx
  414161:	push   eax
  414162:	cli    
  414163:	pop    ds
  414164:	mov    gs,WORD PTR [eax]
  414166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414167:	lods   eax,DWORD PTR ds:[esi]
  414168:	jge    0x41414c
  41416a:	pop    DWORD PTR [eax+0x3480f5c9]
  414170:	imul   esi,DWORD PTR [eax],0x9adbe456
  414176:	std    
  414177:	mov    edi,0x1b7eb753
  41417c:	mov    esp,0xce5fbd7
  414181:	mov    edi,0x994969bf
  414186:	and    dl,bl
  414188:	lea    esi,[ecx+0xd6ef01b]
  41418e:	bound  edx,QWORD PTR [edx+0x37]
  414191:	imul   eax,DWORD PTR [ecx+0x51],0x2937b859
  414198:	push   esp
  414199:	fist   WORD PTR [ecx+0x5df1110e]
  41419f:	(bad)  
  4141a0:	or     eax,0xa6e1d12c
  4141a5:	scas   eax,DWORD PTR es:[edi]
  4141a6:	lods   al,BYTE PTR ds:[esi]
  4141a7:	rcr    BYTE PTR [ebx+edx*2-0xe],1
  4141ab:	mov    ah,0x50
  4141ad:	aas    
  4141ae:	mov    ecx,0x7ef47f36
  4141b3:	push   cs
  4141b4:	sub    BYTE PTR [edx],al
  4141b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b7:	sbb    BYTE PTR [ecx-0x42b5775e],bl
  4141bd:	mov    ah,0xa1
  4141bf:	add    ebp,DWORD PTR [ebp-0x39]
  4141c2:	sbb    bl,BYTE PTR [eax]
  4141c4:	push   edi
  4141c5:	pushf  
  4141c6:	cld    
  4141c7:	mov    eax,ds:0xa7e2ca1b
  4141cc:	dec    esi
  4141cd:	pop    edx
  4141ce:	pop    esi
  4141cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d0:	cdq    
  4141d1:	(bad)  
  4141d2:	mov    ch,0xd8
  4141d4:	call   0x3e4b:0x3376fbda
  4141db:	adc    ah,al
  4141dd:	icebp  
  4141de:	cld    
  4141df:	stos   BYTE PTR es:[edi],al
  4141e0:	fld    TBYTE PTR ds:0xa5ca4844
  4141e6:	arpl   cx,sp
  4141e8:	push   ebp
  4141e9:	stos   DWORD PTR es:[edi],eax
  4141ea:	dec    edx
  4141eb:	push   es
  4141ec:	dec    ebp
  4141ed:	clc    
  4141ee:	cmp    ecx,0xb2b99ef3
  4141f4:	mov    dh,0x9a
  4141f6:	mov    cl,0xea
  4141f8:	popa   
  4141f9:	or     dl,al
  4141fb:	call   0x3c2bb9d6
  414200:	rcl    BYTE PTR [ecx+0xe80509],cl
  414206:	jne    0x41421b
  414208:	pop    ss
  414209:	into   
  41420a:	(bad)  
  41420b:	sbb    DWORD PTR [edx-0x3857593b],esi
  414211:	dec    BYTE PTR [edx-0x5b2dec09]
  414217:	jle    0x414228
  414219:	xchg   esi,eax
  41421a:	mov    ah,0x20
  41421c:	(bad)  
  41421e:	int    0xaf
  414220:	inc    ecx
  414221:	jmp    0xcaef48ff
  414226:	pop    ebx
  414227:	cmp    al,0x75
  414229:	aam    0x56
  41422b:	adc    DWORD PTR [edx+0x1c],ebx
  41422e:	pop    edx
  41422f:	fnstcw WORD PTR [eax-0x5f4fec3b]
  414235:	or     dh,BYTE PTR [eax+0x160672ed]
  41423b:	inc    esp
  41423c:	popa   
  41423d:	or     ebp,DWORD PTR [eax-0x3623495c]
  414243:	cs stc 
  414245:	mov    dh,BYTE PTR [ecx-0x1b1a5e86]
  41424b:	retf   
  41424c:	xor    cl,BYTE PTR [ecx+0x1a]
  41424f:	(bad)  
  414250:	stc    
  414251:	mov    eax,0xde98c44f
  414256:	lods   al,BYTE PTR ds:[esi]
  414257:	sti    
  414258:	mov    bh,0x5
  41425a:	jne    0x41426e
  41425c:	ja     0x414206
  41425e:	sub    bl,BYTE PTR [ebx-0x25]
  414261:	sti    
  414262:	outs   dx,BYTE PTR ds:[esi]
  414263:	stos   BYTE PTR es:[edi],al
  414264:	aam    0x14
  414266:	jp     0x4142e3
  414268:	sti    
  414269:	cmp    esi,0x10
  41426c:	adc    al,0x82
  41426e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41426f:	adc    eax,0x45a5da30
  414274:	xor    BYTE PTR [esi+0x5c],0xb1
  414278:	and    DWORD PTR [edx],esi
  41427a:	mov    ds:0xcbe457fc,eax
  41427f:	call   DWORD PTR [ebx+0xe]
  414282:	loop   0x414271
  414284:	iret   
  414285:	push   ss
  414286:	inc    edx
  414287:	push   cs
  414288:	dec    eax
  414289:	jmp    0x76d5:0x940b84df
  414290:	in     al,0x46
  414292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414293:	aam    0x50
  414295:	out    0xfa,al
  414297:	mov    ch,0x3b
  414299:	push   ss
  41429a:	mov    edx,0x1a11f276
  41429f:	lods   eax,DWORD PTR ds:[esi]
  4142a0:	mov    edx,0x44719622
  4142a5:	and    eax,0xe8106093
  4142aa:	imul   ebp,DWORD PTR [ebx],0xffffff93
  4142ad:	inc    ecx
  4142ae:	pop    ds
  4142af:	push   0xffffff91
  4142b1:	xchg   edi,eax
  4142b2:	sbb    BYTE PTR [eax+0x11379f9c],0x67
  4142b9:	dec    ebx
  4142ba:	inc    eax
  4142bb:	repnz mov DWORD PTR [ebp+0x42],edx
  4142bf:	and    eax,0xfeadc806
  4142c4:	nop
  4142c5:	mov    ah,0xa8
  4142c7:	pop    esi
  4142c8:	into   
  4142c9:	dec    edi
  4142ca:	call   0x74e7:0xa48ee45
  4142d1:	ss and eax,0x87cc0a
  4142d7:	es jo  0x4142cf
  4142da:	push   esi
  4142db:	pop    ebx
  4142dc:	fbld   TBYTE PTR [edx]
  4142de:	jbe    0x4142ac
  4142e0:	(bad)  
  4142e1:	xlat   BYTE PTR ds:[ebx]
  4142e2:	retf   0xadb8
  4142e5:	out    0x88,al
  4142e7:	sbb    al,0xa1
  4142e9:	in     al,dx
  4142ea:	adc    bl,BYTE PTR [ecx]
  4142ec:	xchg   esp,eax
  4142ed:	mov    bh,0xf6
  4142ef:	retf   
  4142f0:	inc    eax
  4142f1:	aam    0xf4
  4142f3:	cmp    al,0x46
  4142f5:	push   ebx
  4142f6:	cld    
  4142f7:	aaa    
  4142f8:	nop
  4142f9:	pop    eax
  4142fa:	hlt    
  4142fb:	pusha  
  4142fc:	ret    
  4142fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fe:	lds    esp,FWORD PTR [edx+0x2bc122b]
  414304:	mov    cl,BYTE PTR [ecx-0x16]
  414307:	mov    ebx,0x8a8505b4
  41430c:	pop    esi
  41430d:	jno    0x4142e3
  41430f:	jge    0x41431d
  414311:	dec    edx
  414312:	mov    ds:0x81eeb7a6,al
  414317:	out    dx,al
  414318:	outs   dx,BYTE PTR ds:[esi]
  414319:	popf   
  41431a:	retf   
  41431b:	push   ebp
  41431c:	mov    bl,0xc2
  41431e:	mov    edi,0xa61de162
  414323:	ins    DWORD PTR es:[edi],dx
  414324:	mov    dl,0x42
  414326:	add    esp,DWORD PTR [edi+0x4e90e2fc]
  41432c:	nop
  41432d:	inc    ebp
  41432e:	mov    ebp,0xb5e065cd
  414333:	cmp    cl,BYTE PTR [esi+0x5d5a7272]
  414339:	or     dl,BYTE PTR [esi-0x442121e1]
  41433f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414340:	lea    ecx,[ecx+ebp*2]
  414343:	imul   ecx,DWORD PTR ds:0xd99b9058,0xdc0b6386
  41434d:	sbb    dh,BYTE PTR [edx]
  41434f:	jb     0x4142df
  414351:	jno    0x4142eb
  414353:	xor    dl,BYTE PTR [esp+edx*8]
  414356:	mov    ds:0xa33ad51d,al
  41435b:	inc    ebp
  41435c:	sub    BYTE PTR [edx+ebp*1+0x6c],cl
  414360:	xchg   ecx,eax
  414361:	push   esi
  414362:	inc    ebp
  414363:	push   0x78
  414365:	xchg   ebp,eax
  414366:	jle    0x41439a
  414368:	jge    0x4143a8
  41436a:	sub    al,al
  41436c:	mov    ebx,0xac67bc2a
  414371:	out    0xa6,al
  414373:	push   0xffffffcb
  414375:	jne    0x4143f5
  414377:	inc    esp
  414378:	outs   dx,BYTE PTR ds:[esi]
  414379:	scas   al,BYTE PTR es:[edi]
  41437a:	or     ecx,esi
  41437c:	jp     0x41436c
  41437e:	sbb    DWORD PTR [edi],0x66faa839
  414384:	sub    al,0x6e
  414386:	out    dx,eax
  414387:	xor    BYTE PTR [edi+0x46d6c223],ah
  41438d:	out    dx,al
  41438e:	outs   dx,BYTE PTR ds:[esi]
  41438f:	pop    es
  414390:	(bad)
  414394:	mov    ecx,0xf6e3c06f
  414399:	popa   
  41439a:	jge    0x4143a3
  41439c:	push   esp
  41439d:	loope  0x41435d
  41439f:	xchg   ebx,eax
  4143a0:	loop   0x41436e
  4143a2:	lahf   
  4143a3:	ja     0x41436d
  4143a5:	addr16 cld 
  4143a7:	pop    ds
  4143a8:	fbld   TBYTE PTR [eax+0x3a30236d]
  4143ae:	mov    dl,0x3d
  4143b0:	mov    al,0x58
  4143b2:	adc    al,0xf
  4143b4:	and    dl,BYTE PTR ds:0x9b8f372a
  4143ba:	scas   eax,DWORD PTR es:[edi]
  4143bb:	(bad)  [ebp+0x6d2ba3f2]
  4143c1:	ficom  DWORD PTR [esi]
  4143c3:	bswap  edi
  4143c5:	push   ds
  4143c6:	(bad)  
  4143c8:	ja     0x4143c8
  4143ca:	ret    0x684e
  4143cd:	adc    DWORD PTR [esi+0x3af66837],esi
  4143d3:	maskmovq mm7,(bad)
  4143d4:	idiv   DWORD PTR [esi+ebp*2]
  4143d7:	stos   BYTE PTR es:[edi],al
  4143d8:	in     eax,0xd2
  4143da:	cli    
  4143db:	int3   
  4143dc:	push   eax
  4143dd:	(bad)  
  4143de:	test   al,0x92
  4143e0:	outs   dx,BYTE PTR ds:[esi]
  4143e1:	fsub   QWORD PTR [eax-0x5a]
  4143e4:	jno    0x4143ef
  4143e6:	ret    
  4143e7:	inc    esi
  4143e8:	psubsb mm6,QWORD PTR [edi]
  4143eb:	and    cl,BYTE PTR [eax-0x41]
  4143ee:	mov    DWORD PTR [ecx],eax
  4143f0:	push   eax
  4143f1:	out    0x3f,eax
  4143f3:	hlt    
  4143f4:	jmp    0x52f4:0xe326b82a
  4143fb:	clc    
  4143fc:	stos   DWORD PTR es:[edi],eax
  4143fd:	or     al,0x44
  4143ff:	mov    ebx,0x925394d8
  414404:	add    eax,0x706e6d3d
  414409:	pop    edi
  41440a:	lock (bad) 
  41440c:	fwait
  41440d:	mov    cl,BYTE PTR [ecx-0x5c]
  414410:	xor    al,0x32
  414412:	or     al,0x82
  414414:	mov    edi,0x9ef7d7d6
  414419:	pushf  
  41441a:	push   esp
  41441b:	enter  0xf817,0xc1
  41441f:	xor    DWORD PTR [ecx-0x65],ebx
  414422:	jbe    0x4143fe
  414424:	push   edx
  414425:	(bad)  
  414426:	repnz lahf 
  414428:	pusha  
  414429:	xchg   ecx,eax
  41442a:	(bad)  
  41442b:	xlat   BYTE PTR ds:[ebx]
  41442c:	pop    edi
  41442d:	cmp    DWORD PTR [ecx+edi*2+0x24],0x7a51d3b0
  414435:	mov    ch,0x1d
  414437:	iret   
  414438:	popa   
  414439:	sub    bh,BYTE PTR [esi-0x641dea2c]
  41443f:	xor    BYTE PTR [esi],0x3e
  414442:	mov    al,ds:0x466ea6c0
  414447:	add    eax,0x1142c50f
  41444c:	lods   al,BYTE PTR ds:[esi]
  41444d:	ret    
  41444e:	cs adc eax,0x49b7aa9
  414454:	pop    esp
  414455:	ins    BYTE PTR es:[edi],dx
  414456:	sub    DWORD PTR [edi-0x7ce9754e],0x89d89f8f
  414460:	pop    ss
  414461:	push   ss
  414462:	fucomp st(4)
  414464:	fld    TBYTE PTR [ebx-0x1c]
  414467:	lds    ebx,FWORD PTR [edx-0x71fb4d20]
  41446d:	ret    0x413a
  414470:	dec    eax
  414471:	ret    0x7d91
  414474:	sbb    dl,bl
  414476:	test   al,0xa5
  414478:	mov    esi,0x68c4f278
  41447d:	jo     0x4144d0
  41447f:	bound  esp,QWORD PTR gs:[edi-0x4ee3ab0]
  414486:	call   0x921b:0x502a30cb
  41448d:	add    bl,BYTE PTR [esi+0x43]
  414490:	popf   
  414491:	test   eax,0xc746f772
  414496:	inc    edx
  414497:	es add ebp,ebp
  41449a:	push   ecx
  41449b:	sub    dh,bh
  41449d:	dec    edx
  41449e:	push   edx
  41449f:	retf   
  4144a0:	lock and al,BYTE PTR [edi-0x5a01ad02]
  4144a7:	inc    edi
  4144a8:	adc    ah,0xbf
  4144ab:	shl    BYTE PTR [edx],1
  4144ad:	loop   0x414461
  4144af:	ret    
  4144b0:	xor    eax,0xb2298006
  4144b5:	push   cs
  4144b6:	int    0x92
  4144b8:	mov    ds:0xd0c84f56,eax
  4144bd:	dec    eax
  4144be:	stos   WORD PTR es:[edi],ax
  4144c0:	jl     0x414526
  4144c2:	dec    edx
  4144c3:	mov    edx,0x96d6ec93
  4144c8:	mov    DWORD PTR [esp+edx*1-0x3a],0xc3aadd31
  4144d0:	popf   
  4144d1:	ss pop ds
  4144d3:	lock push esp
  4144d5:	ficom  WORD PTR [ebp-0x23c5aec9]
  4144db:	hlt    
  4144dc:	jbe    0x4144b0
  4144de:	fld    st(7)
  4144e0:	call   0xad50:0x777d8235
  4144e7:	jecxz  0x4144ad
  4144e9:	sbb    eax,0x37641e49
  4144ee:	fsubr  st(3),st
  4144f0:	imul   eax,DWORD PTR [esi+0x4f12d6e3],0x4e221333
  4144fa:	inc    edi
  4144fb:	shr    BYTE PTR [edx],1
  4144fd:	out    dx,al
  4144fe:	cmp    al,0x66
  414500:	mov    DWORD PTR [ebp-0x73],esp
  414503:	push   eax
  414504:	mov    esp,0x93517481
  414509:	clc    
  41450a:	inc    edi
  41450b:	data16 xchg BYTE PTR [ecx],ch
  41450e:	ds mov bl,0x91
  414511:	and    DWORD PTR ds:0xd8d167f8,edx
  414517:	sub    eax,0x584f0250
  41451c:	pop    eax
  41451d:	sub    ecx,DWORD PTR [esi+0x76]
  414520:	(bad)  
  414521:	int3   
  414522:	popa   
  414523:	sub    al,0xe6
  414525:	add    al,BYTE PTR [esi]
  414527:	aaa    
  414528:	popf   
  414529:	push   esi
  41452a:	jns    0x414587
  41452c:	bnd js 0x414535
  41452f:	and    eax,DWORD PTR [ecx-0x65ced804]
  414535:	add    ebp,DWORD PTR [esi+edi*1-0x77]
  414539:	fadd   QWORD PTR [esi+0x3b]
  41453c:	add    BYTE PTR [edx],0x72
  41453f:	jecxz  0x4144ea
  414541:	ret    0x4c7c
  414544:	mov    edx,0x896736fa
  414549:	sub    ah,BYTE PTR [ebp-0x39b64320]
  41454f:	mov    eax,ds:0x1342dc8e
  414554:	je     0x414558
  414556:	push   edx
  414557:	jg     0x4144ee
  414559:	cmp    eax,0xde52bc7c
  41455e:	mov    dl,0xe3
  414560:	jns    0x414570
  414562:	lahf   
  414563:	scas   al,BYTE PTR es:[edi]
  414564:	lea    ecx,[esi-0x1a]
  414567:	das    
  414568:	cdq    
  414569:	les    ebx,FWORD PTR [eax-0x2f8be36a]
  41456f:	xor    DWORD PTR [esp+edx*2-0x2b8f6e4d],eax
  414576:	repz jnp 0x4145c3
  414579:	clc    
  41457a:	imul   ebp,DWORD PTR [ecx+0x5f],0xffffff81
  41457e:	push   0xffffff92
  414580:	and    al,0xa8
  414582:	test   DWORD PTR [ebp+0x63],edx
  414585:	lods   eax,DWORD PTR ds:[esi]
  414586:	inc    ebp
  414587:	ja     0x414549
  414589:	rol    al,0xc0
  41458c:	rol    al,0xc0
  41458f:	rol    al,0xc0
  414592:	rol    al,0xc0
  414595:	rol    al,0xc0
  414598:	rol    al,0xc0
  41459b:	rol    al,0xc0
  41459e:	rol    al,0xc0
  4145a1:	rol    al,0xc0
  4145a4:	rol    al,0xc0
  4145a7:	rol    al,0xc0
  4145aa:	rol    al,0xc0
  4145ad:	rol    al,0xc0
  4145b0:	inc    ebp
  4145b1:	cmp    bl,BYTE PTR [ebp+ecx*8+0x1]
  4145b5:	sbb    al,0x8d
  4145b7:	fild   WORD PTR [ecx+0x67d4dcb0]
  4145bd:	xchg   edi,eax
  4145be:	lds    ebx,FWORD PTR [ebx-0x2743c2ed]
  4145c4:	push   ss
  4145c5:	loop   0x414625
  4145c7:	adc    BYTE PTR [edi],al
  4145c9:	aam    0x12
  4145cb:	aad    0xc3
  4145cd:	lods   al,BYTE PTR ds:[esi]
  4145ce:	fsubr  DWORD PTR [eax-0x480934ba]
  4145d4:	push   cs
  4145d5:	mov    esp,0xd8059822
  4145da:	dec    esp
  4145db:	cmp    ecx,0x99434319
  4145e1:	xor    BYTE PTR [ebx],ch
  4145e3:	push   edx
  4145e4:	data16 js 0x4145e5
  4145e7:	aad    0x70
  4145e9:	outs   dx,DWORD PTR ds:[esi]
  4145ea:	pop    esi
  4145eb:	cmp    ch,BYTE PTR [eax-0x36]
  4145ee:	out    0xe4,eax
  4145f0:	cmc    
  4145f1:	mov    bh,0xcc
  4145f3:	(bad)  
  4145f5:	(bad)  
  4145f6:	and    BYTE PTR [edi],cl
  4145f8:	mov    eax,ds:0xa439c45a
  4145fd:	or     dh,dh
  4145ff:	and    al,0x2d
  414601:	imul   esi,eax,0xf0b2d976
  414607:	push   cs
  414608:	and    edi,eax
  41460a:	fs inc ebp
  41460c:	mov    dh,0xd5
  41460e:	std    
  41460f:	test   al,0x35
  414611:	cld    
  414612:	popa   
  414613:	dec    ebp
  414614:	out    dx,al
  414615:	ins    BYTE PTR es:[edi],dx
  414616:	mov    esp,0x4e9df759
  41461b:	sub    BYTE PTR [esi-0x4209db6],dl
  414621:	pop    ebx
  414622:	mov    bh,0x6f
  414624:	pushf  
  414625:	or     al,0x8f
  414627:	pop    ds
  414628:	pop    ebx
  414629:	call   0xa9dc8205
  41462e:	dec    edx
  41462f:	push   ds
  414630:	push   ecx
  414631:	hlt    
  414632:	sub    dh,BYTE PTR [ecx+0x26444e50]
  414638:	mov    ?,WORD PTR [esi]
  41463a:	or     bh,bh
  41463c:	pop    edx
  41463d:	or     eax,esi
  41463f:	cld    
  414640:	daa    
  414641:	sahf   
  414642:	mov    edi,0xa2fc2f00
  414647:	xlat   BYTE PTR ds:[ebx]
  414648:	cli    
  414649:	jnp    0x414651
  41464b:	cld    
  41464c:	jmp    0x82bc:0x7952f48b
  414653:	rcr    BYTE PTR [esi+0x53090a9a],0xd6
  41465a:	bound  ecx,QWORD PTR [edx-0x5a]
  41465d:	adc    BYTE PTR [esi+0x43],0xdb
  414661:	idiv   BYTE PTR [edx-0x77]
  414664:	mov    dh,0x4
  414666:	cdq    
  414667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414668:	lock cmp DWORD PTR [esi-0x37],0xffffffb7
  41466d:	or     BYTE PTR [edi-0x6a2d7ed4],cl
  414673:	mov    cl,0x51
  414675:	fwait
  414676:	in     eax,dx
  414677:	outs   dx,BYTE PTR ds:[esi]
  414678:	ins    BYTE PTR es:[edi],dx
  414679:	xchg   BYTE PTR [ebx-0x1c844140],bl
  41467f:	inc    ecx
  414680:	mov    ds,esp
  414682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414683:	xor    al,0x5d
  414685:	jg     0x414678
  414687:	loop   0x414618
  414689:	dec    edi
  41468a:	nop
  41468b:	add    DWORD PTR [edi+0x6],ebp
  41468e:	add    eax,ebp
  414690:	mov    ebx,0xe4f547e4
  414695:	loop   0x41463a
  414697:	xlat   BYTE PTR ds:[ebx]
  414698:	ins    BYTE PTR es:[edi],dx
  414699:	and    al,0xec
  41469b:	ret    0xcb59
  41469e:	pop    ebp
  41469f:	and    eax,0x19413537
  4146a4:	stos   DWORD PTR es:[edi],eax
  4146a5:	mov    al,ds:0x2e75cbb8
  4146aa:	mov    bl,0xfe
  4146ac:	inc    edx
  4146ad:	stc    
  4146ae:	mov    cl,0xaf
  4146b0:	popf   
  4146b1:	iret   
  4146b2:	jbe    0x41468a
  4146b4:	ja     0x4146a4
  4146b6:	mov    esp,0x603cb056
  4146bb:	int3   
  4146bc:	test   al,0x4d
  4146be:	ja     0x41466f
  4146c0:	push   0xffffffcf
  4146c2:	inc    sp
  4146c4:	or     BYTE PTR [eax+eax*2],ah
  4146c7:	cmp    BYTE PTR es:[ebp+0x7a],dh
  4146cb:	cs push esp
  4146cd:	icebp  
  4146ce:	mov    ch,0x7f
  4146d0:	jb     0x414707
  4146d2:	mov    al,0xc
  4146d4:	pop    edx
  4146d5:	rcl    DWORD PTR [edx+0x29],cl
  4146d8:	mov    ecx,0x544bc732
  4146dd:	loop   0x414685
  4146df:	xchg   bp,ax
  4146e1:	fst    QWORD PTR [edx]
  4146e3:	adc    ah,BYTE PTR [ebx]
  4146e5:	sub    esp,esi
  4146e7:	xor    bh,BYTE PTR [ebp+0xc]
  4146ea:	pop    esp
  4146eb:	jmp    0x4146ab
  4146ed:	out    dx,eax
  4146ee:	mov    cl,0xb
  4146f0:	jnp    0x4146c0
  4146f2:	or     eax,0x525bb0c0
  4146f7:	cmp    esp,DWORD PTR [ecx-0x6075f0a7]
  4146fd:	out    dx,al
  4146fe:	xchg   ecx,eax
  4146ff:	pop    edx
  414700:	pop    edx
  414701:	into   
  414702:	scas   eax,DWORD PTR es:[edi]
  414703:	add    ecx,DWORD PTR [ecx]
  414705:	add    al,0x1f
  414707:	repnz mov esi,0xd3049556
  41470d:	jecxz  0x4146e3
  41470f:	shl    DWORD PTR [edx],0x39
  414712:	mov    DWORD PTR [edx],0xc27f069f
  414718:	out    0x65,al
  41471a:	mov    al,0x2
  41471c:	sbb    eax,0x28df5f02
  414721:	push   ss
  414722:	xchg   DWORD PTR ds:0xe0e1c4ae,edi
  414728:	mov    eax,0xb7c725d1
  41472d:	mov    esi,0x7143be18
  414732:	in     al,dx
  414733:	push   cs
  414734:	je     0x414708
  414736:	or     ebp,DWORD PTR ds:0x34b573a
  41473c:	cs push cs
  41473e:	mov    bl,0x39
  414740:	adc    esp,DWORD PTR [esi-0x1f]
  414743:	cli    
  414744:	and    edx,DWORD PTR [edi+0x6e]
  414747:	cs stc 
  414749:	int    0x9a
  41474b:	enter  0x4428,0x58
  41474f:	jmp    0x6ec4:0xa15db7a
  414756:	aaa    
  414757:	mov    ?,WORD PTR [ebx-0x44]
  41475a:	cwde   
  41475b:	inc    esp
  41475c:	xchg   edx,eax
  41475d:	and    al,0xaf
  41475f:	and    DWORD PTR [edi],edx
  414761:	(bad)  
  414763:	mov    bh,0xa0
  414765:	push   ecx
  414766:	push   ss
  414767:	cmp    ah,cl
  414769:	iret   
  41476a:	mov    al,0xec
  41476c:	push   esi
  41476d:	dec    eax
  41476e:	js     0x414793
  414770:	popa   
  414771:	mov    eax,ds:0x48abb956
  414776:	pop    esi
  414777:	push   ds
  414778:	add    edi,DWORD PTR [esi]
  41477a:	outs   dx,DWORD PTR ds:[esi]
  41477b:	mov    al,ds:0x2128142b
  414780:	mov    ds:0x7798cd8a,eax
  414785:	repz into 
  414787:	and    ah,bh
  414789:	mov    dl,0x5a
  41478b:	sbb    esp,eax
  41478d:	cmp    BYTE PTR [edi+0x39],cl
  414790:	xchg   ecx,eax
  414791:	nop
  414792:	pop    edi
  414793:	loop   0x41477b
  414795:	push   0xffffffc2
  414797:	jae    0x4147ba
  414799:	fist   WORD PTR [edi+0x2237ec18]
  41479f:	cwde   
  4147a0:	sbb    eax,0x123e81c6
  4147a5:	loop   0x414760
  4147a7:	sahf   
  4147a8:	jbe    0x41479b
  4147aa:	into   
  4147ab:	(bad)  
  4147ac:	mov    fs,WORD PTR [edx+0x6c]
  4147af:	sub    ah,dh
  4147b1:	cmp    DWORD PTR [esp+ecx*1],0xffffffe4
  4147b5:	cmp    eax,0x93e339a1
  4147ba:	and    bl,bl
  4147bc:	bound  eax,QWORD PTR [ebx+0x4a5df04f]
  4147c2:	pop    edi
  4147c3:	repnz cmp ebx,DWORD PTR [esi+0x1e52ebc]
  4147ca:	stos   BYTE PTR es:[edi],al
  4147cb:	lds    edi,FWORD PTR [edi-0x1a485aee]
  4147d1:	xchg   edx,eax
  4147d2:	push   ss
  4147d3:	neg    DWORD PTR ds:0x6f68b034
  4147d9:	cld    
  4147da:	mov    ?,eax
  4147dc:	inc    edx
  4147dd:	dec    eax
  4147de:	fild   QWORD PTR [esi+0x20d7c94b]
  4147e4:	jbe    0x41479f
  4147e6:	mov    al,0x45
  4147e8:	std    
  4147e9:	sub    eax,0x2297bc8e
  4147ee:	pop    edx
  4147ef:	and    eax,0xf213be4b
  4147f4:	pop    es
  4147f5:	loop   0x4147ce
  4147f7:	aad    0xcb
  4147f9:	shr    BYTE PTR [ecx+0x6a],cl
  4147fc:	scas   al,BYTE PTR es:[edi]
  4147fd:	ret    
  4147fe:	jbe    0x4147c1
  414800:	gs cwde 
  414802:	rcr    BYTE PTR [esi+0xc9a0624],cl
  414808:	inc    eax
  414809:	aad    0x92
  41480b:	add    DWORD PTR [esi],ebp
  41480d:	dec    edx
  41480e:	js     0x414838
  414810:	test   BYTE PTR [esi-0x1d],0x1b
  414814:	dec    ebx
  414815:	cli    
  414816:	int    0x33
  414818:	jb     0x414888
  41481a:	fwait
  41481b:	mov    ebp,0x51bf99f9
  414820:	push   ecx
  414821:	das    
  414822:	call   0x53033836
  414827:	push   eax
  414828:	xchg   ebx,eax
  414829:	sub    al,0x13
  41482b:	lods   al,BYTE PTR ds:[esi]
  41482c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41482d:	adc    BYTE PTR [ecx-0x5f2e7199],al
  414833:	inc    ebp
  414834:	dec    esi
  414835:	dec    esp
  414836:	pop    edx
  414837:	lods   eax,DWORD PTR ds:[esi]
  414838:	lock fisttp WORD PTR cs:[ebx]
  41483c:	rcl    BYTE PTR [ebp+0x5ebfae6c],0xce
  414843:	fist   DWORD PTR [esi+0x455448c2]
  414849:	push   esp
  41484a:	xchg   DWORD PTR [ebx],ebx
  41484c:	ficom  WORD PTR [edx]
  41484e:	cli    
  41484f:	sub    al,0xa2
  414851:	adc    al,0x7f
  414853:	imul   edi,DWORD PTR [esi-0x66],0xc1b92590
  41485a:	out    0x1b,eax
  41485c:	push   esi
  41485d:	push   cs
  41485e:	iret   
  41485f:	sub    eax,edi
  414861:	aam    0x90
  414863:	push   eax
  414864:	mov    WORD PTR [esi+eax*2-0x76afc8c7],ds
  41486b:	mov    fs,WORD PTR [edx]
  41486d:	ret    0x86cf
  414870:	cmp    dh,dl
  414872:	sbb    al,0xe1
  414874:	or     esp,esi
  414876:	or     DWORD PTR [ebx+0x2e90f63b],esi
  41487c:	pop    es
  41487d:	(bad)  
  41487f:	xor    al,0x35
  414881:	ss pop ebp
  414883:	leave  
  414884:	scas   al,BYTE PTR es:[edi]
  414885:	ins    BYTE PTR es:[edi],dx
  414886:	xor    esp,0x49b8a201
  41488c:	push   ebp
  41488d:	xchg   BYTE PTR [esi+edx*2-0x76923b8a],dl
  414894:	dec    edi
  414895:	pop    es
  414896:	mov    ebp,0x920e0782
  41489b:	inc    esp
  41489c:	test   BYTE PTR [edi+0x5517efbd],dh
  4148a2:	iret   
  4148a3:	mov    dh,0xc2
  4148a5:	xchg   ebx,eax
  4148a6:	(bad)  
  4148a7:	sub    dh,BYTE PTR [ebp-0x75bcf492]
  4148ad:	test   BYTE PTR [eax],0xae
  4148b0:	mov    ebp,0xe52174d7
  4148b5:	push   es
  4148b6:	push   0xb
  4148b8:	mov    cl,0xcc
  4148ba:	hlt    
  4148bb:	push   0xd7f2c208
  4148c0:	cmp    ebp,DWORD PTR [ebp+0xcbeda35]
  4148c6:	out    dx,al
  4148c7:	pop    ecx
  4148c8:	ds gs mov esi,0x392d2272
  4148cf:	pop    eax
  4148d0:	mov    ?,WORD PTR [ebp+0x39]
  4148d3:	add    al,0xd0
  4148d5:	test   al,0x3e
  4148d7:	pop    esp
  4148d8:	add    eax,0xfb4ac97c
  4148dd:	sbb    BYTE PTR [eax+0x65],al
  4148e0:	mov    ecx,0xcfe097b7
  4148e5:	sar    DWORD PTR [ecx-0x38cb5aad],0x74
  4148ec:	jle    0x414885
  4148ee:	push   esi
  4148ef:	or     al,0x25
  4148f1:	sbb    al,dl
  4148f3:	push   edx
  4148f4:	fwait
  4148f5:	jl     0x414961
  4148f7:	mov    al,0x10
  4148f9:	dec    edi
  4148fa:	xchg   ebx,eax
  4148fb:	inc    ebx
  4148fc:	mov    ah,0x0
  4148fe:	pop    eax
  4148ff:	adc    eax,0xfcadf7e7
  414904:	push   ds
  414905:	adc    al,0x75
  414907:	push   ebp
  414908:	(bad)  
  414909:	repnz push es
  41490b:	add    BYTE PTR [eax+0x62c7cf0c],bl
  414911:	push   ebx
  414912:	ret    0xd319
  414915:	and    BYTE PTR [ebx],ch
  414917:	xchg   edx,eax
  414918:	mov    al,0x57
  41491a:	mov    edx,0xcd42e0ff
  41491f:	jp     0x41494f
  414921:	jle    0x41497a
  414923:	push   ebp
  414924:	in     al,0x3b
  414926:	pop    es
  414927:	inc    ebp
  414928:	leave  
  414929:	rcl    BYTE PTR [esi-0x3e],1
  41492c:	mov    dl,dh
  41492e:	xor    al,0xa7
  414930:	dec    eax
  414931:	int3   
  414932:	cmp    ch,BYTE PTR [ebp+0x13]
  414935:	inc    esp
  414936:	push   es
  414937:	iret   
  414938:	jae    0x414956
  41493a:	adc    al,0x47
  41493c:	pop    sp
  41493e:	sbb    eax,0xdfe1042e
  414943:	outs   dx,DWORD PTR ds:[esi]
  414944:	xchg   ebp,eax
  414945:	sub    al,BYTE PTR [edx]
  414947:	popf   
  414948:	test   bl,bl
  41494a:	mov    edx,0x3d3ad281
  41494f:	inc    eax
  414950:	pop    edx
  414951:	sti    
  414952:	and    al,cl
  414954:	aad    0x84
  414956:	leave  
  414957:	xor    DWORD PTR [ebp-0x6f],ebp
  41495a:	mov    dl,BYTE PTR [edi]
  41495c:	pushf  
  41495d:	cwde   
  41495e:	je     0x4148fb
  414960:	popa   
  414961:	stc    
  414962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414963:	js     0x41497e
  414965:	dec    edi
  414966:	sbb    al,BYTE PTR [ebx+0x41]
  414969:	push   ds
  41496a:	xchg   edi,eax
  41496b:	jp     0x414926
  41496d:	or     ebp,ecx
  41496f:	daa    
  414970:	cs sub eax,0x63bfd8e8
  414976:	aas    
  414977:	dec    esp
  414978:	and    edi,DWORD PTR [eax]
  41497a:	mov    cl,BYTE PTR [ecx-0x23]
  41497d:	ret    0x4fe
  414980:	pop    es
  414981:	dec    esi
  414982:	retf   
  414983:	sub    al,0x97
  414985:	aaa    
  414986:	mov    eax,0x83adb31c
  41498b:	pusha  
  41498c:	pop    esi
  41498d:	and    DWORD PTR [edx-0x23],ecx
  414990:	cmp    BYTE PTR [edi+0xd],0xc8
  414994:	adc    ebp,edx
  414996:	and    DWORD PTR [ebx],0x39
  414999:	jmp    0xbae1:0xf266227e
  4149a0:	sub    ecx,DWORD PTR [ebp-0x74]
  4149a3:	retf   0xe724
  4149a6:	or     edi,DWORD PTR [ebx]
  4149a8:	pop    esi
  4149a9:	pop    esi
  4149aa:	jp     0x414972
  4149ac:	mov    edi,0x75611335
  4149b1:	jns    0x414a0f
  4149b3:	jbe    0x4149f5
  4149b5:	stos   DWORD PTR es:[edi],eax
  4149b6:	lock aaa 
  4149b8:	pop    ebp
  4149b9:	jbe    0x414940
  4149bb:	test   eax,esp
  4149bd:	cdq    
  4149be:	sub    esp,DWORD PTR [edi+0x62]
  4149c1:	ficom  DWORD PTR [edi]
  4149c3:	out    0x4f,eax
  4149c5:	or     DWORD PTR [eax+edx*8],esi
  4149c8:	cmc    
  4149c9:	int3   
  4149ca:	mov    edi,0x7bca3f56
  4149cf:	add    ebx,DWORD PTR [ebx]
  4149d1:	lahf   
  4149d2:	jbe    0x414a18
  4149d4:	push   ebx
  4149d5:	jle    0x414987
  4149d7:	pop    ss
  4149d8:	sbb    esp,DWORD PTR [edx]
  4149da:	(bad)  
  4149db:	stos   DWORD PTR es:[edi],eax
  4149dc:	test   al,0x85
  4149de:	push   ecx
  4149df:	je     0x41497b
  4149e1:	xchg   ecx,eax
  4149e2:	jno    0x414a30
  4149e4:	mov    dl,0x3b
  4149e6:	xor    eax,DWORD PTR [edx+0x1bc3347a]
  4149ec:	leave  
  4149ed:	loope  0x4149a5
  4149ef:	sbb    DWORD PTR [esi-0x474d4f26],0xffffffe6
  4149f6:	popf   
  4149f7:	jmp    0x273619c4
  4149fc:	popa   
  4149fd:	sbb    DWORD PTR [esi-0x5b],esp
  414a00:	loop   0x414a40
  414a02:	inc    ecx
  414a03:	jns    0x414a33
  414a05:	adc    ebp,DWORD PTR [edx-0x31396ad0]
  414a0b:	ins    BYTE PTR es:[edi],dx
  414a0c:	push   esp
  414a0d:	adc    ecx,DWORD PTR [edx+0x55]
  414a10:	jne    0x414a0c
  414a12:	push   0x7d
  414a14:	aad    0x19
  414a16:	in     eax,dx
  414a17:	cmp    DWORD PTR [ebp+0x2b],0x42db67de
  414a1e:	mov    dh,0x6c
  414a20:	add    eax,0xbe2fe922
  414a25:	or     bl,ah
  414a27:	fwait
  414a28:	and    BYTE PTR [ebx-0x1e80f326],ch
  414a2e:	call   0xead7bfe9
  414a33:	xor    BYTE PTR [edi+0x772fdfdc],bh
  414a39:	and    ebp,eax
  414a3b:	lods   al,BYTE PTR ds:[esi]
  414a3c:	jle    0x414a94
  414a3e:	test   ch,ch
  414a40:	pop    esi
  414a41:	or     bh,BYTE PTR [edx+0xb]
  414a44:	sbb    bl,dl
  414a46:	cmp    BYTE PTR [ecx],ah
  414a48:	test   al,0x36
  414a4a:	or     dl,dh
  414a4c:	add    ebx,DWORD PTR [ecx-0x6e]
  414a4f:	xor    ecx,esi
  414a51:	(bad)
  414a55:	cld    
  414a56:	daa    
  414a57:	fld    DWORD PTR [edi-0x6a]
  414a5a:	mov    esi,DWORD PTR [eax-0x30]
  414a5d:	clc    
  414a5e:	add    eax,0xea85e6eb
  414a63:	sbb    ecx,DWORD PTR [eax]
  414a65:	adc    al,0x69
  414a67:	mov    bl,0xbd
  414a69:	sbb    BYTE PTR ds:0x35e961a2,cl
  414a6f:	mov    WORD PTR [ebp-0x30b7476c],ss
  414a75:	jecxz  0x414a8c
  414a77:	mov    al,0x2f
  414a79:	adc    BYTE PTR [eax+ebp*8],0x55
  414a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a7e:	xchg   DWORD PTR [edx-0x609936d8],edx
  414a84:	push   edi
  414a85:	(bad)  
  414a87:	and    eax,0x37a7352f
  414a8c:	mov    ebx,0x2e2b972b
  414a91:	int    0xe4
  414a93:	dec    eax
  414a94:	repnz mov dh,0x7b
  414a97:	jae    0x414a4b
  414a99:	push   ds
  414a9a:	ret    
  414a9b:	push   ds
  414a9c:	pop    eax
  414a9d:	loop   0x414b1d
  414a9f:	fistp  QWORD PTR [eax]
  414aa1:	dec    ebp
  414aa2:	jo     0x414ae7
  414aa4:	jge    0x414a8c
  414aa6:	pop    esi
  414aa7:	jg     0x414b0e
  414aa9:	(bad)  
  414aaa:	jbe    0x414a66
  414aac:	inc    esp
  414aad:	cmp    DWORD PTR [edi+0x75e8ebd7],0xa275c0a
  414ab7:	call   0x7c4c7abd
  414abc:	dec    ecx
  414abd:	jnp    0x414a71
  414abf:	out    0x43,al
  414ac1:	or     DWORD PTR [esi+0xc],esi
  414ac4:	xchg   edx,esp
  414ac6:	xchg   ebp,eax
  414ac7:	fnstenv [eax-0x34f40d64]
  414acd:	pop    esi
  414ace:	sahf   
  414acf:	shl    edi,0x95
  414ad2:	pushf  
  414ad3:	mov    ds:0x7d32ff58,eax
  414ad8:	dec    ecx
  414ad9:	and    DWORD PTR [edx-0x2fa2bf3f],ecx
  414adf:	jae    0x414b5c
  414ae1:	mov    edi,0xa0d8eac6
  414ae6:	push   edi
  414ae7:	xor    bh,bl
  414ae9:	mov    esp,0x738b60bd
  414aee:	(bad)  
  414aef:	scas   al,BYTE PTR es:[edi]
  414af0:	clc    
  414af1:	rcr    BYTE PTR [eax-0x89daeb4],0x61
  414af8:	mov    cl,0xfb
  414afa:	(bad)  
  414afc:	ja     0x414b44
  414afe:	mov    ds:0xa1e0b92d,eax
  414b03:	mov    eax,0x77b24472
  414b08:	cs (bad) 
  414b0a:	push   ds
  414b0b:	mov    edi,0xb8fa1aee
  414b10:	bound  ebp,QWORD PTR [esi+0x347e6077]
  414b16:	push   es
  414b17:	cdq    
  414b18:	jecxz  0x414b3c
  414b1a:	xchg   edi,eax
  414b1b:	push   ebx
  414b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1d:	ss mov esp,0xe6e59974
  414b23:	sub    al,0xd2
  414b25:	xchg   DWORD PTR [ebp+0x4d],ebp
  414b28:	mov    ecx,DWORD PTR [ecx+ebp*8]
  414b2b:	add    BYTE PTR [ebp+0x26],bh
  414b2e:	bound  eax,QWORD PTR [ecx+0x1d1e6a3e]
  414b34:	adc    cl,dl
  414b36:	mov    edi,0xd05672ce
  414b3b:	mov    DWORD PTR [eax],esi
  414b3d:	mov    esp,0xcd614573
  414b42:	fadd   DWORD PTR [esp+ebp*4]
  414b45:	rcl    cl,0x47
  414b48:	push   0x54
  414b4a:	fld    DWORD PTR [esi]
  414b4c:	fild   DWORD PTR [edi]
  414b4e:	in     al,0x7
  414b50:	stc    
  414b51:	fisttp QWORD PTR [edi+0x7c2ba7df]
  414b57:	jmp    0x4ba1:0x77c8ba53
  414b5e:	xor    dh,BYTE PTR [edx+0x2b804cb1]
  414b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b65:	cld    
  414b66:	ror    BYTE PTR [ebx+eiz*8+0x46f01d26],1
  414b6d:	clc    
  414b6e:	lods   eax,DWORD PTR ds:[esi]
  414b6f:	dec    ecx
  414b70:	mov    dh,0x8
  414b72:	xchg   edi,eax
  414b73:	je     0x414afe
  414b75:	cwde   
  414b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b77:	test   eax,0xfc91c63c
  414b7c:	dec    ecx
  414b7d:	jmp    0x414b3a
  414b7f:	int3   
  414b80:	imul   ebx,DWORD PTR [edx-0x5a],0x28
  414b84:	and    ebx,DWORD PTR [edi]
  414b86:	sahf   
  414b87:	aaa    
  414b88:	loop   0x414b4c
  414b8a:	out    dx,al
  414b8b:	in     eax,0x5b
  414b8d:	clc    
  414b8e:	xchg   edx,eax
  414b8f:	xchg   DWORD PTR [ecx-0xc],esp
  414b92:	jmp    0x9e8a:0xece47243
  414b99:	xchg   edx,esp
  414b9b:	adc    BYTE PTR [ebp-0x65],bh
  414b9e:	fwait
  414b9f:	add    DWORD PTR [ebx],edi
  414ba1:	jb     0x414b57
  414ba3:	dec    esp
  414ba4:	inc    esi
  414ba5:	xor    ecx,DWORD PTR es:[edi]
  414ba8:	popa   
  414ba9:	sub    dh,BYTE PTR [esi-0x4c]
  414bac:	fdivr  QWORD PTR [edi+0x36]
  414baf:	push   edi
  414bb0:	outs   dx,DWORD PTR ds:[esi]
  414bb1:	out    dx,eax
  414bb2:	popa   
  414bb3:	clc    
  414bb4:	mov    eax,ds:0x83a808e6
  414bb9:	out    dx,al
  414bba:	aas    
  414bbb:	mov    BYTE PTR [edi],dl
  414bbd:	pop    edi
  414bbe:	add    al,0x2d
  414bc0:	ja     0x414c33
  414bc2:	cmp    ebp,DWORD PTR [eax]
  414bc4:	rcl    DWORD PTR [eax-0x72],0x9f
  414bc8:	mov    esi,DWORD PTR [esi+0x1244b9b1]
  414bce:	adc    bh,ch
  414bd0:	push   edi
  414bd1:	into   
  414bd2:	js     0x414c12
  414bd4:	retf   
  414bd5:	jno    0x414b61
  414bd7:	sub    al,0x37
  414bd9:	(bad)  
  414bdb:	xor    cl,BYTE PTR [ebx+0x4b]
  414bde:	stos   DWORD PTR es:[edi],eax
  414bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be0:	aam    0x99
  414be2:	mov    esp,0x331b234d
  414be7:	add    eax,0x5eae4e0e
  414bec:	mov    esi,0xc70cd660
  414bf1:	div    BYTE PTR [eax]
  414bf3:	mov    edi,0x13673b9a
  414bf8:	pop    edx
  414bf9:	loop   0x414bb8
  414bfb:	sub    eax,0xcfa618e6
  414c00:	xor    al,0xd
  414c02:	shl    DWORD PTR [ebp+0x2f8720e5],1
  414c08:	or     DWORD PTR [edx+0x70c73ddb],ebx
  414c0e:	xchg   ebp,eax
  414c0f:	ins    DWORD PTR es:[edi],dx
  414c10:	popf   
  414c11:	xor    eax,0x1618500c
  414c16:	out    0xd0,eax
  414c18:	loopne 0x414c81
  414c1a:	mov    ch,BYTE PTR ds:0xe96897bd
  414c20:	arpl   WORD PTR [eax+0x4ce1071],cx
  414c26:	cmp    eax,esi
  414c28:	aad    0x2d
  414c2a:	pusha  
  414c2b:	fisubr WORD PTR [eax-0x44c68c18]
  414c31:	mov    ebp,0x94b7cb30
  414c36:	xchg   esp,eax
  414c37:	mov    ch,0xe7
  414c39:	dec    esi
  414c3a:	les    edi,FWORD PTR [ebp-0x3041b353]
  414c40:	add    esi,ecx
  414c42:	push   ebx
  414c43:	dec    eax
  414c44:	cmp    eax,0x273716db
  414c49:	hlt    
  414c4a:	push   es
  414c4b:	leave  
  414c4c:	or     BYTE PTR [esi+0x31757dae],ch
  414c52:	stos   DWORD PTR es:[edi],eax
  414c53:	sub    bh,BYTE PTR [edx+eiz*1-0x20cca4e2]
  414c5a:	rcr    DWORD PTR [edx],1
  414c5c:	gs push ss
  414c5e:	xchg   edi,eax
  414c5f:	loop   0x414c7a
  414c61:	push   cs
  414c62:	sbb    dh,BYTE PTR [ebx-0x72745a66]
  414c68:	pop    esp
  414c69:	add    DWORD PTR [ebx-0x647ae3c],ebx
  414c6f:	and    ebx,DWORD PTR [ecx]
  414c71:	sahf   
  414c72:	jmp    0x9301488a
  414c77:	pop    eax
  414c78:	xor    al,0x7e
  414c7a:	add    BYTE PTR [esi],ah
  414c7c:	je     0x414c94
  414c7e:	pop    ds
  414c7f:	pcmpgtw mm2,QWORD PTR [ebp-0x66]
  414c83:	push   edx
  414c84:	push   es
  414c85:	cmp    al,0xc7
  414c88:	ins    DWORD PTR es:[edi],dx
  414c89:	or     ebp,DWORD PTR [eax+0x2a]
  414c8c:	out    0x43,al
  414c8e:	fld    TBYTE PTR [ebp-0x3824a9ba]
  414c94:	ror    BYTE PTR [ecx+ebp*2],1
  414c97:	adc    al,0x8e
  414c99:	cwde   
  414c9a:	xchg   ebp,eax
  414c9b:	fdivr  DWORD PTR [esi+0x6bb64bd0]
  414ca1:	push   es
  414ca2:	or     eax,0xa0069a1e
  414ca7:	(bad)  
  414ca8:	int    0x15
  414caa:	xor    al,0x7
  414cac:	aaa    
  414cad:	add    al,0xb1
  414caf:	sbb    DWORD PTR [eax+0x33f59b8a],esp
  414cb5:	mov    ds:0x3f23da8b,al
  414cba:	clc    
  414cbb:	jo     0x414ca5
  414cbd:	and    bh,BYTE PTR ds:0x617e0368
  414cc3:	ins    DWORD PTR es:[edi],dx
  414cc4:	mov    edx,0x363503d7
  414cc9:	enter  0x8b30,0x83
  414ccd:	ja     0x414cf1
  414ccf:	fsub   DWORD PTR [edi]
  414cd1:	fiadd  DWORD PTR [ecx]
  414cd3:	ror    BYTE PTR [edx-0x50fc8dbc],cl
  414cd9:	mov    esp,DWORD PTR [ecx+0x8]
  414cdc:	pop    ss
  414cdd:	lock and DWORD PTR ds:0x2b1fcfca,edi
  414ce4:	test   DWORD PTR ds:0x4d83880f,esp
  414cea:	arpl   sp,cx
  414cec:	aam    0x2b
  414cee:	mov    dl,0x64
  414cf0:	fs inc edx
  414cf2:	pop    ss
  414cf3:	or     edi,ebx
  414cf5:	xor    al,0xb8
  414cf7:	rcr    DWORD PTR [ecx-0x545cfb4c],cl
  414cfd:	popa   
  414cfe:	test   DWORD PTR [esi-0x9],0xd6e8665d
  414d05:	mov    ebp,0x96f02159
  414d0a:	(bad)  [ebx-0x22d484f]
  414d10:	xchg   esp,eax
  414d11:	inc    edx
  414d12:	add    BYTE PTR [edx-0x1e9cd86d],0xbd
  414d19:	jmp    0x5ef5295d
  414d1e:	cmp    eax,0xb61ce5a4
  414d23:	(bad)  
  414d24:	pop    esi
  414d25:	push   ds
  414d26:	call   FWORD PTR [edi-0x7e81b687]
  414d2c:	ficomp WORD PTR [ebp+0x2c]
  414d2f:	stos   DWORD PTR es:[edi],eax
  414d30:	inc    ecx
  414d31:	ror    BYTE PTR [ecx],cl
  414d33:	out    dx,al
  414d34:	jns    0x414d99
  414d36:	and    al,0x12
  414d38:	xchg   BYTE PTR [esi-0xb417f34],dh
  414d3e:	inc    esi
  414d3f:	mov    edx,0x815bd82f
  414d44:	push   es
  414d45:	push   esp
  414d46:	cmp    esi,DWORD PTR [ebx]
  414d48:	out    dx,eax
  414d49:	sub    esi,DWORD PTR [esp+ecx*4+0x19]
  414d4d:	add    edi,DWORD PTR [esi]
  414d4f:	in     al,0xb3
  414d51:	(bad)
  414d54:	inc    ecx
  414d55:	jmp    0x6e98:0x6cda2f12
  414d5c:	retf   0xb015
  414d5f:	adc    al,0x8a
  414d61:	xchg   esp,eax
  414d62:	lea    ebp,[esi]
  414d64:	enter  0x913a,0xc0
  414d68:	mov    ebx,0xb2c0a509
  414d6d:	dec    ebx
  414d6e:	fs jge 0x414d03
  414d71:	les    ebp,FWORD PTR [esi]
  414d73:	bound  eax,QWORD PTR [esi-0x7cef9d81]
  414d79:	jle    0x414d81
  414d7b:	mov    esp,0xf9504976
  414d80:	rol    al,0xc0
  414d83:	rol    al,0xc0
  414d86:	rol    al,0xc0
  414d89:	rol    al,0xc0
  414d8c:	rol    al,0xc0
  414d8f:	rol    al,0xc0
  414d92:	rol    al,0xc0
  414d95:	rol    al,0xc0
  414d98:	rol    al,0xc0
  414d9b:	rol    al,0xc0
  414d9e:	rol    al,0xc0
  414da1:	rol    al,0xc0
  414da4:	rol    al,0xc0
  414da7:	ror    BYTE PTR ds:0xaca53a45,0xac
  414dae:	cmp    eax,0x4375d922
  414db3:	add    eax,0x2699be5b
  414db8:	pop    edx
  414db9:	scas   eax,DWORD PTR es:[edi]
  414dba:	push   ebp
  414dbb:	cmp    BYTE PTR [ebx-0x63a268f1],0xf8
  414dc2:	call   0x5adb9ee3
  414dc7:	lods   eax,DWORD PTR ds:[esi]
  414dc8:	es (bad) 
  414dca:	cli    
  414dcb:	fild   DWORD PTR [ecx+esi*8]
  414dce:	imul   esp,DWORD PTR [ebx+ecx*8-0x52],0xc6045997
  414dd6:	scas   al,BYTE PTR es:[edi]
  414dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd8:	into   
  414dd9:	(bad)  
  414ddb:	sub    BYTE PTR [eax-0x568516e3],0xf0
  414de2:	add    BYTE PTR [ebp+0x61],0x13
  414de6:	in     al,dx
  414de7:	out    dx,al
  414de8:	and    eax,DWORD PTR [edi-0xfe10e75]
  414dee:	inc    edi
  414def:	adc    eax,0x41453dd
  414df4:	sub    al,0xb
  414df6:	mov    ds:0x4c587ef9,eax
  414dfb:	sub    DWORD PTR [edi],0x5f4dd25c
  414e01:	sbb    cl,BYTE PTR [ecx+0x521859b8]
  414e07:	nop
  414e08:	inc    ecx
  414e09:	and    DWORD PTR [ebx],ecx
  414e0b:	mov    ds:0x12026a5b,al
  414e10:	adc    al,0x9c
  414e12:	push   esp
  414e13:	or     DWORD PTR [ebx+0x46],ebp
  414e16:	popf   
  414e17:	add    esi,DWORD PTR [ebx+ebx*2-0xb]
  414e1b:	pop    ecx
  414e1c:	mov    ch,0x7a
  414e1e:	ss cmp al,0x5
  414e21:	aad    0xf4
  414e23:	nop
  414e24:	sbb    BYTE PTR [esp+edx*1],al
  414e27:	adc    ebp,DWORD PTR [esi+eiz*1]
  414e2a:	data16 cmp BYTE PTR [esi-0x42],bl
  414e2e:	stos   BYTE PTR es:[edi],al
  414e2f:	scas   al,BYTE PTR es:[edi]
  414e30:	add    al,0xbd
  414e32:	jbe    0x414dc8
  414e34:	and    BYTE PTR [ebx-0x4d],bh
  414e37:	sub    DWORD PTR [ebp+0x7a0445b5],ebx
  414e3d:	push   es
  414e3e:	mov    ecx,0x1dee51d4
  414e43:	imul   ebp,DWORD PTR [eax],0x68
  414e46:	int3   
  414e47:	push   0x51
  414e49:	rcr    DWORD PTR [ecx+0x199f1053],1
  414e4f:	(bad)  
  414e51:	bound  ebp,QWORD PTR [ecx-0x1f]
  414e54:	je     0x414de4
  414e56:	push   esi
  414e57:	and    edi,DWORD PTR [edi+esi*4+0x1be3ec7f]
  414e5e:	cwde   
  414e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e60:	inc    ebp
  414e61:	sti    
  414e62:	mov    ecx,0xa10fbe9c
  414e67:	fisttp DWORD PTR [ebx-0x2fbad02b]
  414e6d:	ins    DWORD PTR es:[edi],dx
  414e6e:	push   ecx
  414e6f:	scas   eax,DWORD PTR es:[edi]
  414e70:	inc    eax
  414e71:	sbb    eax,0x55be8e13
  414e76:	jo     0x414e47
  414e78:	pop    esi
  414e79:	aam    0xf4
  414e7b:	cmc    
  414e7c:	jge    0x414e59
  414e7e:	scas   eax,DWORD PTR es:[edi]
  414e7f:	lods   al,BYTE PTR ds:[esi]
  414e80:	cwde   
  414e81:	mov    ds:0x5b857f81,eax
  414e86:	jns    0x414f02
  414e88:	js     0x414e54
  414e8a:	leave  
  414e8b:	jp     0x414e4e
  414e8d:	leave  
  414e8e:	push   DWORD PTR [edi-0x84ea901]
  414e94:	arpl   WORD PTR [eax+0x37fc3b32],bx
  414e9a:	mov    edi,0x9cc43a13
  414e9f:	cdq    
  414ea0:	imul   ebx,DWORD PTR [ebx+0x198303c8],0xfa66e1ef
  414eaa:	aaa    
  414eab:	and    esp,DWORD PTR [ecx-0x3b]
  414eae:	rol    ah,0xa5
  414eb1:	fmul   QWORD PTR [ebp+0x4e41671b]
  414eb7:	and    al,0x66
  414eb9:	(bad)  
  414eba:	push   0x4b
  414ebc:	cmp    al,BYTE PTR ds:0x1950ab99
  414ec2:	lahf   
  414ec3:	xchg   esp,eax
  414ec4:	int3   
  414ec5:	sub    edi,DWORD PTR [esi-0x7825d45e]
  414ecb:	cdq    
  414ecc:	(bad)  
  414ecd:	xor    al,0x39
  414ecf:	or     BYTE PTR [ecx],ch
  414ed1:	std    
  414ed2:	punpckhwd mm0,mm2
  414ed5:	dec    ecx
  414ed6:	lods   eax,DWORD PTR ds:[esi]
  414ed7:	scas   eax,DWORD PTR es:[edi]
  414ed8:	mov    ch,0xe2
  414eda:	pop    esp
  414edb:	sub    ebx,DWORD PTR [ebx+ebx*4]
  414ede:	xchg   esi,eax
  414edf:	outs   dx,DWORD PTR ds:[esi]
  414ee0:	dec    ecx
  414ee1:	repz pop edx
  414ee3:	pop    edi
  414ee4:	push   0xffffffcf
  414ee6:	and    ch,cl
  414ee8:	jmp    0xecf:0xc25db32b
  414eef:	ret    
  414ef0:	outs   dx,DWORD PTR ds:[esi]
  414ef1:	sahf   
  414ef2:	push   eax
  414ef3:	(bad)  [ecx-0x6eaa8e7]
  414ef9:	xor    dl,bl
  414efb:	cs sub al,0x4b
  414efe:	lods   eax,DWORD PTR ds:[esi]
  414eff:	je     0x414e9a
  414f01:	and    dh,BYTE PTR [eax+eax*2+0x3210d418]
  414f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f09:	test   al,0xaa
  414f0b:	cmp    dl,bh
  414f0d:	fsub   DWORD PTR [ebx+0x4cea6d77]
  414f13:	xor    DWORD PTR ds:0xbf0b84e3,0x53896a27
  414f1d:	add    dh,BYTE PTR [ecx+eax*4+0x5f]
  414f21:	fwait
  414f22:	cs sub al,0x11
  414f25:	jmp    DWORD PTR [ebx]
  414f27:	imul   ebp,DWORD PTR [ecx+ebp*1-0xe],0xffffff8a
  414f2c:	pop    ss
  414f2d:	pusha  
  414f2e:	lods   eax,DWORD PTR ds:[esi]
  414f2f:	cdq    
  414f30:	pop    edi
  414f31:	dec    ebx
  414f32:	stc    
  414f33:	add    DWORD PTR [esi+edx*8-0x3b],ecx
  414f37:	mov    dh,0x9
  414f39:	mov    eax,0x578f9008
  414f3e:	test   al,0xff
  414f40:	dec    eax
  414f41:	xchg   esi,eax
  414f42:	jmp    0x414f46
  414f44:	call   0xead2:0x86326111
  414f4b:	or     eax,0xadf30be8
  414f50:	in     al,dx
  414f51:	ds int 0x45
  414f54:	mov    ds:0x90fc6de7,al
  414f59:	out    0x82,eax
  414f5b:	jmp    0x414f34
  414f5d:	xor    BYTE PTR [ecx+0x53],dh
  414f60:	push   ebp
  414f61:	pop    edx
  414f62:	push   edi
  414f63:	js     0x414f8f
  414f65:	cmp    DWORD PTR [ebx-0x2],edx
  414f68:	mov    ds:0x1f999fa5,eax
  414f6d:	mov    DWORD PTR [ebx+0x21],ebx
  414f70:	mov    esi,0x58e39c6e
  414f75:	scas   eax,DWORD PTR es:[edi]
  414f76:	stos   BYTE PTR es:[edi],al
  414f77:	aaa    
  414f78:	jge    0x414f4e
  414f7a:	call   0xc77:0xd539a703
  414f81:	pop    ebx
  414f82:	pop    edx
  414f83:	repnz pop esi
  414f85:	add    ch,BYTE PTR [ebx-0x2d]
  414f88:	jae    0x414f58
  414f8a:	test   DWORD PTR [esp+esi*1],edx
  414f8d:	or     BYTE PTR [esi-0x38e9b455],bl
  414f93:	enter  0x6e8c,0x82
  414f97:	push   eax
  414f98:	test   eax,0x16087ddd
  414f9d:	add    DWORD PTR [edx-0x46],ecx
  414fa0:	or     BYTE PTR [ecx],0x99
  414fa3:	add    eax,0xf5b4c4d7
  414fa8:	mov    al,ds:0x407072cc
  414fad:	sub    eax,0x56b837f9
  414fb2:	mov    dh,0xd6
  414fb4:	mov    al,ds:0xde2c4b25
  414fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fba:	add    esp,esi
  414fbc:	mov    al,0x9c
  414fbe:	push   esp
  414fbf:	xchg   DWORD PTR [ecx+ebp*2-0xa7ff029],esi
  414fc6:	xor    BYTE PTR [edx],0x84
  414fc9:	adc    ecx,DWORD PTR ds:0x9ee34ecf
  414fcf:	(bad)  
  414fd1:	clc    
  414fd2:	or     cl,BYTE PTR [ecx+0x61120251]
  414fd8:	pop    eax
  414fd9:	leave  
  414fda:	adc    al,0xa
  414fdc:	jne    0x414ff5
  414fde:	add    bl,BYTE PTR cs:[edi]
  414fe1:	dec    ebx
  414fe2:	(bad)  
  414fe3:	mov    esi,0xff2d5464
  414fe8:	clc    
  414fe9:	xchg   DWORD PTR [esi-0x45],edx
  414fec:	inc    ecx
  414fed:	mov    ebx,DWORD PTR [eax+0x14]
  414ff0:	out    0xf,al
  414ff2:	rcl    BYTE PTR [ebx],cl
  414ff4:	out    dx,eax
  414ff5:	cs lahf 
  414ff7:	mov    bl,BYTE PTR [esi]
  414ff9:	test   BYTE PTR ds:0x21faec62,al
  414fff:	neg    DWORD PTR [edi-0x75]
  415002:	call   0xbd15:0x46c9bf1c
  415009:	ficom  DWORD PTR [edi-0x70ccfad6]
  41500f:	xor    bh,BYTE PTR [eax]
  415011:	test   al,0x53
  415013:	sbb    DWORD PTR ds:0xa022f8c5,ebp
  415019:	iret   
  41501a:	dec    ebp
  41501b:	je     0x41500e
  41501d:	and    dh,BYTE PTR [esi+0x4e]
  415020:	rcr    edx,cl
  415022:	dec    esp
  415024:	fisubr WORD PTR [edi-0x57ce9830]
  41502a:	test   BYTE PTR [ecx+0x207a0391],dh
  415030:	jno    0x414fd6
  415032:	(bad)  
  415033:	mul    BYTE PTR [ebx]
  415035:	punpckhdq mm5,QWORD PTR [ebx]
  415038:	sahf   
  415039:	les    edx,FWORD PTR [edi+0x754b484b]
  41503f:	jp     0x4150b3
  415041:	xor    cl,BYTE PTR [ebx+eax*1-0x3affecdd]
  415048:	outs   dx,BYTE PTR ds:[esi]
  415049:	jmp    0x935f:0xa9a2ef5
  415050:	sub    bh,BYTE PTR [eax+ecx*2-0x1c50a0f7]
  415057:	and    al,0xf7
  415059:	addr16 jo 0x414fe6
  41505c:	sub    ecx,DWORD PTR [edx-0x4e]
  41505f:	and    DWORD PTR [edi-0x210b57aa],edx
  415065:	pusha  
  415066:	mov    ebx,0x19ca6ded
  41506b:	out    dx,eax
  41506c:	clc    
  41506d:	ret    
  41506e:	and    esi,DWORD PTR [edx+0x189cdc95]
  415074:	jecxz  0x415098
  415076:	ss push 0x458afee6
  41507c:	mov    dl,0x89
  41507e:	add    BYTE PTR [eax+0x3d],0x93
  415082:	add    al,0x50
  415084:	pushfw 
  415086:	in     eax,dx
  415087:	xchg   ecx,eax
  415088:	addr16 mov dl,0xbf
  41508b:	mov    al,0x11
  41508d:	inc    edx
  41508e:	imul   esp,DWORD PTR [edx-0x2fe599a6],0x1e
  415095:	sar    BYTE PTR [ebx+0x23],cl
  415098:	xchg   edx,eax
  415099:	fcom   QWORD PTR [ebx]
  41509b:	jg     0x4150af
  41509d:	mov    eax,ds:0x4eb73a4b
  4150a2:	in     eax,0x53
  4150a4:	push   edi
  4150a5:	sahf   
  4150a6:	fnstsw WORD PTR [edi-0x72]
  4150a9:	call   0x5f778c02
  4150ae:	fisub  WORD PTR [ebp+0x23]
  4150b1:	cmp    ecx,DWORD PTR [eax-0x7ec5bccc]
  4150b7:	scas   eax,DWORD PTR es:[edi]
  4150b8:	add    dl,BYTE PTR [ebp+edx*1-0x10e2c54c]
  4150bf:	fnstsw WORD PTR [esi+0x2e]
  4150c2:	push   cs
  4150c3:	daa    
  4150c4:	push   edi
  4150c5:	jge    0x41506a
  4150c7:	inc    edi
  4150c8:	jecxz  0x415102
  4150ca:	mov    esi,0xff9bb559
  4150cf:	mov    ch,0x82
  4150d1:	fdivr  st,st(1)
  4150d3:	push   ecx
  4150d4:	push   ebp
  4150d5:	adc    al,0x68
  4150d7:	(bad)  
  4150d8:	fs daa 
  4150da:	enter  0xa581,0xa
  4150de:	push   ebx
  4150df:	scas   al,BYTE PTR es:[edi]
  4150e0:	inc    eax
  4150e1:	push   ebp
  4150e2:	fld    DWORD PTR [eax+0x12]
  4150e5:	ret    0x7ea0
  4150e8:	dec    eax
  4150e9:	add    BYTE PTR [ebx-0x76],0xbe
  4150ed:	inc    ebp
  4150ee:	imul   dh
  4150f0:	test   al,0xb8
  4150f2:	sub    eax,0x62315ec4
  4150f7:	outs   dx,DWORD PTR ds:[esi]
  4150f8:	add    esp,DWORD PTR [esi+0x5a]
  4150fb:	sbb    dh,BYTE PTR ds:[ebx+0xe530658]
  415102:	pop    edi
  415103:	nop
  415104:	jne    0x415101
  415106:	mov    cl,0xf1
  415108:	int3   
  415109:	rol    BYTE PTR ds:0x82185ee6,cl
  41510f:	mov    bl,0x3e
  415111:	push   es
  415112:	mov    ds:0x350b8081,eax
  415117:	scas   al,BYTE PTR es:[edi]
  415118:	es mov gs,esi
  41511b:	xor    BYTE PTR [ebx+0x2f],dl
  41511e:	iret   
  41511f:	add    ecx,DWORD PTR [ebx]
  415121:	push   eax
  415122:	les    eax,FWORD PTR [edi]
  415124:	std    
  415125:	pop    esp
  415126:	or     cl,ch
  415128:	mov    ecx,0xb2781fab
  41512d:	mov    edi,ebp
  41512f:	pop    ebp
  415130:	cwde   
  415131:	(bad)  
  415132:	scas   eax,DWORD PTR es:[edi]
  415133:	pop    ds
  415134:	jge    0x415119
  415136:	and    DWORD PTR [ecx],ecx
  415138:	mov    ebp,0xcf627663
  41513d:	cmp    edi,DWORD PTR [edx-0x60c8d6ea]
  415143:	mov    al,ds:0x24fa3f7b
  415148:	scas   al,BYTE PTR es:[edi]
  415149:	pushf  
  41514a:	mov    ecx,0xf277221a
  41514f:	push   ss
  415150:	(bad)
  415153:	xchg   edi,eax
  415154:	mov    edi,0xc6ef8419
  415159:	ret    
  41515a:	sub    ch,BYTE PTR [eax]
  41515c:	int3   
  41515d:	push   es
  41515e:	mov    bh,0x66
  415160:	or     bl,al
  415162:	sbb    al,BYTE PTR ds:0x29e27f5e
  415168:	mov    cl,0x8c
  41516b:	pop    edx
  41516c:	pop    ds
  41516d:	fiadd  WORD PTR [edx]
  41516f:	ss test al,0x64
  415172:	fmul   QWORD PTR ds:0x916443ea
  415178:	mov    dl,0x90
  41517a:	in     al,dx
  41517b:	push   edi
  41517c:	scas   al,BYTE PTR es:[edi]
  41517d:	jbe    0x4151ea
  41517f:	bound  esp,QWORD PTR [ecx-0x6f1f5067]
  415185:	cld    
  415186:	or     eax,0xf636703e
  41518b:	rcr    esp,cl
  41518d:	xchg   esp,eax
  41518e:	cwde   
  41518f:	out    0x31,eax
  415191:	fst    QWORD PTR [esi]
  415193:	dec    edi
  415194:	pop    ss
  415195:	jecxz  0x4151cc
  415197:	push   0x1c0b3a8b
  41519c:	popf   
  41519d:	mov    ch,BYTE PTR [eax+0x4049d7b1]
  4151a3:	add    ah,cl
  4151a5:	or     al,0xf7
  4151a7:	push   edx
  4151a8:	div    BYTE PTR [eax+0x0]
  4151ab:	xor    BYTE PTR [ebx+0x41],dh
  4151ae:	ret    0x92f5
  4151b1:	aaa    
  4151b2:	jae    0x4151d0
  4151b4:	(bad)  
  4151b5:	sub    DWORD PTR [edi],esi
  4151b7:	pop    esi
  4151b8:	sub    dl,ch
  4151ba:	mov    ebp,0x9e15e45
  4151bf:	ins    DWORD PTR es:[edi],dx
  4151c0:	imul   esp,DWORD PTR [esi-0x2],0xffffffad
  4151c4:	lods   eax,DWORD PTR ds:[esi]
  4151c5:	push   ss
  4151c6:	jnp    0x41516f
  4151c8:	add    eax,0x8ee087e8
  4151cd:	ja     0x415236
  4151cf:	push   esp
  4151d0:	clc    
  4151d1:	pop    ebx
  4151d2:	jae    0x4151de
  4151d4:	ins    DWORD PTR es:[edi],dx
  4151d5:	dec    edx
  4151d6:	push   ecx
  4151d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d8:	mov    ecx,0x748ce17f
  4151dd:	dec    eax
  4151de:	pusha  
  4151df:	or     DWORD PTR [edi],edi
  4151e1:	das    
  4151e2:	addr16 sbb ebx,esi
  4151e5:	mov    al,0x58
  4151e7:	fcom   QWORD PTR [esi+0x65]
  4151ea:	ror    DWORD PTR [ebp-0x2effa6b4],0x8d
  4151f1:	jmp    DWORD PTR [ecx]
  4151f3:	ror    BYTE PTR cs:[edi],0x52
  4151f7:	mov    al,ds:0x228bf323
  4151fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fd:	lock push esp
  4151ff:	repz mov edx,0x66448961
  415205:	repz pushf 
  415207:	js     0x4151cc
  415209:	dec    DWORD PTR [eax]
  41520b:	sub    al,0xc3
  41520d:	sbb    dl,BYTE PTR [ebx]
  41520f:	jae    0x415196
  415211:	xchg   esi,eax
  415212:	sbb    cl,BYTE PTR [edx]
  415214:	adc    bl,BYTE PTR [esi-0x18]
  415217:	int    0x44
  415219:	and    BYTE PTR [eax+0x0],ah
  41521c:	adc    bh,BYTE PTR [ecx+ecx*1-0x7dcb0327]
  415223:	push   ecx
  415224:	xor    DWORD PTR [esi],eax
  415226:	xor    DWORD PTR [esi+0x784cec1c],esp
  41522c:	stc    
  41522d:	mov    eax,0x9a8a6999
  415232:	or     edi,esp
  415234:	test   al,0x4c
  415236:	fwait
  415237:	ret    0x4340
  41523a:	outs   dx,BYTE PTR ds:[esi]
  41523b:	push   eax
  41523c:	je     0x41525c
  41523e:	inc    esi
  41523f:	dec    esi
  415240:	leave  
  415241:	xchg   ebp,eax
  415242:	xchg   ebx,eax
  415243:	inc    esi
  415244:	std    
  415245:	(bad)  
  415246:	test   eax,0xd9a53422
  41524b:	out    0x59,al
  41524d:	pop    edx
  41524e:	inc    esi
  41524f:	and    ah,BYTE PTR [edx+0xdc6aca0]
  415255:	(bad)  
  415256:	jbe    0x41528e
  415258:	lock fadd QWORD PTR [edx]
  41525b:	push   eax
  41525c:	int3   
  41525d:	cmp    dh,BYTE PTR [edi+0x7d]
  415260:	inc    ecx
  415261:	push   ss
  415262:	and    eax,eax
  415264:	pushf  
  415265:	(bad)  
  415266:	in     eax,dx
  415267:	xchg   esp,eax
  415268:	and    DWORD PTR [ebx-0x3f],edx
  41526b:	inc    edi
  41526c:	ins    BYTE PTR es:[edi],dx
  41526d:	loop   0x4152be
  41526f:	or     eax,DWORD PTR [edx-0xe]
  415272:	and    esi,DWORD PTR [eax]
  415274:	adc    bh,BYTE PTR [esi]
  415276:	mov    eax,0xe3c89a52
  41527b:	mov    bh,0xdb
  41527d:	add    DWORD PTR [esi],eax
  41527f:	out    dx,al
  415280:	mov    al,ds:0x1b7a78a4
  415285:	adc    eax,0x374b6152
  41528a:	test   al,0x44
  41528c:	xor    BYTE PTR [esi-0x76],bh
  41528f:	lock mov ah,BYTE PTR cs:[esi-0x20]
  415294:	xor    eax,0x2f089abe
  415299:	jp     0x415267
  41529b:	jge    0x4152cc
  41529d:	mov    cl,0xb3
  41529f:	(bad)  
  4152a0:	jo     0x41522b
  4152a2:	scas   eax,DWORD PTR es:[edi]
  4152a3:	in     al,0xce
  4152a5:	inc    esi
  4152a6:	jl     0x41528a
  4152a8:	ss pop esi
  4152aa:	mov    bh,BYTE PTR [ebp-0x1e]
  4152ad:	leave  
  4152ae:	je     0x415307
  4152b0:	loopne 0x415281
  4152b2:	shr    ah,0x12
  4152b5:	xchg   ebx,eax
  4152b6:	mov    ds:0x1e12dfa7,al
  4152bb:	cmp    cl,BYTE PTR [ebp-0xeb3fa92]
  4152c1:	push   ebx
  4152c2:	bound  esp,QWORD PTR [esi-0x30]
  4152c5:	mov    bh,0x74
  4152c7:	or     BYTE PTR [edx+edx*8-0x39],ah
  4152cb:	mov    ah,0xec
  4152cd:	adc    edx,0xd2a970d3
  4152d3:	add    BYTE PTR [esi+edi*1+0x4cc5b4ce],bl
  4152da:	fldcw  WORD PTR [edx]
  4152dc:	fbstp  TBYTE PTR [edi+0x63]
  4152df:	jp     0x415280
  4152e1:	int    0xcb
  4152e3:	push   es
  4152e4:	outs   dx,BYTE PTR ds:[esi]
  4152e5:	(bad)  
  4152e6:	into   
  4152e7:	iret   
  4152e8:	and    al,0x12
  4152ea:	cmp    eax,0xba4ff033
  4152ef:	ss (bad) 
  4152f1:	sbb    eax,0x7853f31e
  4152f6:	(bad)  
  4152f7:	mov    cl,bh
  4152f9:	clc    
  4152fa:	cmp    DWORD PTR [edi-0x1],ebx
  4152fd:	mov    DWORD PTR [ebx-0x38],ebx
  415300:	test   DWORD PTR [ecx-0x72c5f7ee],esi
  415306:	and    eax,0xaeba5077
  41530b:	and    DWORD PTR [eax-0x7e],ebp
  41530e:	inc    eax
  41530f:	sub    ebx,DWORD PTR [edx]
  415311:	mov    DWORD PTR [ecx-0x7e44c989],ecx
  415317:	enter  0x98ec,0x3b
  41531b:	test   BYTE PTR [esi+0xf],ch
  41531e:	in     al,dx
  41531f:	sbb    al,0xbe
  415321:	test   al,0xbf
  415323:	das    
  415324:	outs   dx,DWORD PTR ds:[esi]
  415325:	imul   ecx,DWORD PTR [eax+0x1e],0x4f
  415329:	mov    cl,0xf
  41532b:	pop    es
  41532c:	nop
  41532d:	cmp    ah,BYTE PTR [edi+0x2d7ff649]
  415333:	or     esp,DWORD PTR [ecx+edx*2-0x5d816e2e]
  41533a:	(bad)  
  41533b:	mov    dh,0x6
  41533d:	dec    edi
  41533e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533f:	(bad)  
  415340:	xchg   ecx,eax
  415341:	call   FWORD PTR [esi+esi*1+0x3cd617dd]
  415348:	(bad)  
  41534b:	lea    edi,[ebp+0x3f]
  41534e:	mov    ecx,0xc9fb0507
  415353:	sbb    edx,DWORD PTR [ebp-0x7d]
  415356:	xchg   esp,eax
  415357:	pushf  
  415358:	inc    ecx
  415359:	test   BYTE PTR ds:0xc2f94e46,bl
  41535f:	jle    0x41536f
  415361:	in     al,dx
  415362:	loopne 0x415364
  415364:	push   eax
  415365:	push   es
  415366:	mov    esi,0x8eca7937
  41536b:	adc    al,0x72
  41536d:	and    bl,BYTE PTR [edi+0x22]
  415370:	das    
  415371:	add    ebx,0xb7027fb6
  415377:	sbb    ebx,DWORD PTR [edi]
  415379:	pop    es
  41537a:	xchg   esi,eax
  41537b:	jae    0x41536d
  41537d:	mov    ebp,0xb796bfc6
  415382:	rol    BYTE PTR fs:[ebx-0x26e4293a],1
  415389:	pop    ecx
  41538a:	mov    WORD PTR fs:[ecx],?
  41538d:	in     eax,dx
  41538e:	popf   
  41538f:	lods   al,BYTE PTR ds:[esi]
  415390:	hlt    
  415391:	neg    cl
  415393:	hlt    
  415394:	push   eax
  415395:	pop    esp
  415396:	outs   dx,BYTE PTR ds:[esi]
  415397:	pop    esi
  415398:	sahf   
  415399:	fisttp DWORD PTR ds:0x82b43aa9
  41539f:	sub    DWORD PTR [ecx],esp
  4153a1:	daa    
  4153a2:	xchg   BYTE PTR [eax],bh
  4153a4:	(bad)  
  4153a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a7:	aad    0x47
  4153a9:	out    0x39,al
  4153ab:	call   0x6339adc2
  4153b0:	loopne 0x4153ba
  4153b2:	push   esi
  4153b3:	add    ebx,esp
  4153b5:	add    DWORD PTR [edi-0x6ff9a394],0x6b
  4153bc:	add    BYTE PTR [esi+ecx*8+0x1f],bl
  4153c0:	push   eax
  4153c1:	inc    esp
  4153c2:	stos   BYTE PTR es:[edi],al
  4153c3:	add    DWORD PTR [ebx+0x3a],esp
  4153c6:	mov    BYTE PTR [edi+0x4],al
  4153c9:	mov    esi,0x7f6a314c
  4153ce:	cmp    al,0x2
  4153d0:	push   ebp
  4153d1:	sahf   
  4153d2:	pop    edi
  4153d3:	adc    esp,DWORD PTR [eax-0x5ce55a6]
  4153d9:	rcl    bh,cl
  4153db:	mov    fs,WORD PTR [ecx]
  4153dd:	outs   dx,DWORD PTR ds:[esi]
  4153de:	xchg   esp,eax
  4153df:	pop    esi
  4153e0:	mov    dl,0xc8
  4153e2:	xchg   ebx,eax
  4153e3:	xor    eax,0x2f921e5c
  4153e8:	ins    DWORD PTR es:[edi],dx
  4153e9:	xchg   edi,eax
  4153ea:	je     0x41544d
  4153ec:	cmp    al,0x8e
  4153ee:	aad    0x35
  4153f0:	mov    esi,0xe49d425
  4153f5:	dec    edi
  4153f6:	stc    
  4153f7:	adc    al,0xb8
  4153f9:	retf   0x13c1
  4153fc:	test   DWORD PTR [eax-0x4c],0x80564da4
  415403:	fist   DWORD PTR [ecx-0x52]
  415406:	jmp    0x9776b0dd
  41540b:	fidivr WORD PTR [esi+0x3]
  41540e:	xor    esi,ebx
  415410:	push   edx
  415411:	sub    eax,0x1e795eb1
  415416:	das    
  415417:	push   ebp
  415418:	jnp    0x4153a8
  41541a:	and    BYTE PTR [ebx],ch
  41541c:	mov    esi,0x65f8c538
  415421:	adc    dh,0x6b
  415424:	dec    esp
  415425:	sub    ebx,0xa6cb4f1a
  41542b:	sbb    BYTE PTR [esi],bh
  41542d:	add    esi,ebx
  41542f:	imul   ecx,ecx,0xa862bb25
  415435:	enter  0x78fe,0xae
  415439:	push   esi
  41543a:	inc    edi
  41543b:	adc    DWORD PTR [edi+0x7c],esp
  41543e:	mov    fs,WORD PTR [esi-0x3e362777]
  415444:	jns    0x41544b
  415446:	cmp    al,0xb9
  415448:	mov    ebx,0x464934ab
  41544d:	adc    BYTE PTR [ebx],bl
  41544f:	adc    esp,eax
  415451:	(bad)  
  415452:	fidiv  WORD PTR [edx]
  415454:	fistp  DWORD PTR [esi+0x3b]
  415457:	sbb    al,0x8d
  415459:	pop    ebp
  41545a:	(bad)  
  41545b:	push   es
  41545c:	shl    al,cl
  41545e:	mov    esi,0x76ce201b
  415463:	xchg   ecx,eax
  415464:	mov    DWORD PTR [edx+0x6ca1ce8a],eax
  41546a:	adc    cl,BYTE PTR [edx+0x5764f76e]
  415470:	and    al,0x57
  415472:	jecxz  0x4154d0
  415474:	pop    eax
  415475:	(bad)  
  415476:	mov    bl,0x53
  415478:	idiv   DWORD PTR [esi+ecx*4-0x2b]
  41547c:	std    
  41547d:	ror    edi,cl
  41547f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415480:	or     BYTE PTR [esi-0x2df7755a],dh
  415486:	xor    esp,DWORD PTR [ecx+0x3a]
  415489:	jb     0x41542f
  41548b:	mov    bh,0x17
  41548d:	jb     0x41547d
  41548f:	jno    0x41550d
  415491:	push   edi
  415492:	sbb    BYTE PTR [edi],dh
  415494:	test   BYTE PTR [esp+edx*2],ch
  415497:	inc    edi
  415498:	rcr    DWORD PTR es:[eax],1
  41549b:	popf   
  41549c:	or     DWORD PTR [ebx-0x17d2d3ff],0x3bd34843
  4154a6:	shr    BYTE PTR [ebx+0x56],1
  4154a9:	cmp    al,0xb2
  4154ab:	pop    eax
  4154ac:	js     0x4154b0
  4154ae:	cmp    ch,dh
  4154b0:	dec    esp
  4154b1:	jnp    0x41546b
  4154b3:	jg     0x4154d2
  4154b5:	sub    DWORD PTR [eax+esi*1-0x17],eax
  4154b9:	das    
  4154ba:	sub    dl,BYTE PTR [ebx-0xdfe67e1]
  4154c0:	mov    DWORD PTR [edi],eax
  4154c2:	push   es
  4154c3:	add    ebx,ecx
  4154c5:	push   esi
  4154c6:	dec    ebp
  4154c7:	pop    es
  4154c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c9:	xchg   ebp,eax
  4154ca:	add    al,0xcf
  4154cc:	xchg   edi,eax
  4154cd:	out    dx,al
  4154ce:	xchg   edx,eax
  4154cf:	(bad)  
  4154d0:	fmul   QWORD PTR [esi]
  4154d2:	mov    dh,0x47
  4154d4:	addr16 dec edx
  4154d6:	xchg   ebx,eax
  4154d7:	jae    0x4154c9
  4154d9:	call   0x17fa:0x1c7cbe89
  4154e0:	dec    eax
  4154e1:	push   ebp
  4154e2:	mov    dl,0x52
  4154e4:	add    ah,ch
  4154e6:	mov    eax,ds:0x94e92f4b
  4154eb:	js     0x41556b
  4154ed:	lea    edi,[ebp-0x32]
  4154f0:	stos   DWORD PTR es:[edi],eax
  4154f1:	leave  
  4154f2:	jle    0x4154a7
  4154f4:	xchg   edi,eax
  4154f5:	jecxz  0x415531
  4154f7:	lods   al,BYTE PTR ds:[esi]
  4154f8:	dec    edi
  4154f9:	mov    edi,esi
  4154fb:	call   0x6144:0x8b1f0e1c
  415502:	push   ebx
  415503:	lods   al,BYTE PTR ds:[esi]
  415504:	inc    ecx
  415505:	sbb    bl,BYTE PTR [esi+edx*8+0x6c]
  415509:	arpl   dx,sp
  41550b:	cdq    
  41550c:	sar    DWORD PTR [esi+0x6],0xd5
  415510:	push   esp
  415511:	cmc    
  415512:	leave  
  415513:	inc    eax
  415514:	mov    al,ds:0xd8ef72fa
  415519:	repnz mov es,WORD PTR [ebx+ebp*2-0x11]
  41551e:	js     0x41558b
  415520:	aad    0x48
  415522:	and    eax,0x38deeeda
  415527:	mov    dh,0xf8
  415529:	sbb    DWORD PTR [ecx-0x53],0x4c
  41552d:	pop    es
  41552e:	push   0xb6ffd541
  415533:	aas    
  415534:	xor    BYTE PTR [ecx],bl
  415536:	lock (bad) 
  415539:	mov    ?,WORD PTR [edi+0x7f4985c0]
  41553f:	aas    
  415540:	test   DWORD PTR [eax-0x12],esp
  415543:	aad    0xd0
  415545:	mov    eax,ds:0xe19901a1
  41554a:	(bad)  
  41554b:	fbstp  TBYTE PTR ds:0x430ad033
  415551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415552:	cmp    al,al
  415554:	xlat   BYTE PTR ds:[ebx]
  415555:	and    eax,0xe66709d6
  41555a:	pop    ds
  41555b:	jle    0x4155bb
  41555d:	and    eax,0xb5737b3b
  415562:	cmp    esi,DWORD PTR [edx+0x6e]
  415565:	add    BYTE PTR [ebx+0x63],dh
  415568:	mov    edi,0x4adcd69b
  41556d:	push   cs
  41556e:	je     0x4155c7
  415570:	je     0x415505
  415572:	popa   
  415573:	jmp    0xc0c0:0xb91e3ace
  41557a:	rol    al,0xc0
  41557d:	rol    al,0xc0
  415580:	rol    al,0xc0
  415583:	rol    al,0xc0
  415586:	rol    al,0xc0
  415589:	rol    al,0xc0
  41558c:	rol    al,0xc0
  41558f:	rol    al,0xc0
  415592:	rol    al,0xc0
  415595:	rol    al,0xc0
  415598:	rol    al,0xc0
  41559b:	rol    al,0xc0
  41559e:	rol    al,0xc0
  4155a1:	rol    al,0xc0
  4155a4:	rol    al,0xc0
  4155a7:	rol    al,0xc0
  4155aa:	rol    al,0xc0
  4155ad:	rol    al,0xc0
  4155b0:	rol    al,0xc0
  4155b3:	rol    al,0xc0
  4155b6:	rol    al,0xc0
  4155b9:	rol    al,0xc0
  4155bc:	rol    al,0xc0
  4155bf:	rol    al,0xc0
  4155c2:	rol    al,0xc0
  4155c5:	rol    al,0xc0
  4155c8:	rol    al,0xc0
  4155cb:	rol    al,0xc0
  4155ce:	rol    al,0x3e
  4155d1:	test   BYTE PTR [eax-0x4b],dh
  4155d4:	or     cl,BYTE PTR [esi]
  4155d6:	ret    0xcea3
  4155d9:	xor    eax,0xccc5a78d
  4155de:	mov    ss,WORD PTR [esi]
  4155e0:	add    ebx,DWORD PTR [edx+0x1e5460d4]
  4155e6:	cwde   
  4155e7:	leave  
  4155e8:	hlt    
  4155e9:	push   esi
  4155ea:	add    BYTE PTR [eax+0x3e8eb114],0x7c
  4155f1:	xchg   DWORD PTR [ebp+0x23e8f4a],ecx
  4155f7:	rcr    DWORD PTR [ecx],cl
  4155f9:	stos   DWORD PTR es:[edi],eax
  4155fa:	loope  0x4155da
  4155fc:	cmc    
  4155fd:	aam    0x86
  4155ff:	aaa    
  415600:	add    eax,esi
  415602:	aaa    
  415603:	pop    ebx
  415604:	add    al,0xee
  415606:	popw   es
  415608:	adc    esi,edx
  41560a:	sub    edi,esi
  41560c:	imul   DWORD PTR [edi+0x72c3056e]
  415612:	jp     0x415604
  415614:	dec    edi
  415615:	jno    0x415669
  415617:	imul   edi,DWORD PTR ds:0xab4942ec,0xeb8bc390
  415621:	sahf   
  415622:	jp     0x4155c1
  415624:	sub    ecx,DWORD PTR [ecx]
  415626:	push   0xffffffd1
  415628:	xchg   esp,eax
  415629:	stc    
  41562a:	mov    ebp,0xcd50dff8
  41562f:	sbb    esi,0x1495d36b
  415635:	test   BYTE PTR [edi+0x3f],al
  415638:	in     al,0x89
  41563a:	hlt    
  41563b:	sbb    al,0x5f
  41563d:	cmp    DWORD PTR [eax-0x68],ebp
  415640:	jp     0x4155c9
  415642:	imul   edi,ecx,0x8d831c00
  415648:	lea    eax,[esi-0x4f]
  41564b:	bound  esp,QWORD PTR [ebp-0x2]
  41564e:	mov    ebp,0x76193b69
  415653:	lahf   
  415654:	(bad)  
  415655:	in     al,0x99
  415657:	out    dx,al
  415658:	cmp    al,0xb2
  41565a:	mov    DWORD PTR [edx-0x6c],eax
  41565d:	add    dl,BYTE PTR [edi+0x2523821c]
  415663:	and    eax,0x3d4eb46d
  415668:	inc    ebp
  415669:	push   esi
  41566a:	add    BYTE PTR [edx+eax*4+0x2d],dl
  41566e:	cld    
  41566f:	sbb    al,0xe4
  415671:	xchg   BYTE PTR es:[edi-0x53c06f71],bl
  415678:	or     eax,0x2b4f5e56
  41567d:	jmp    0x1986:0x7fb2ed3f
  415684:	imul   ebp,DWORD PTR [ebx],0x562d2222
  41568a:	xchg   esi,eax
  41568b:	in     al,dx
  41568c:	jl     0x415614
  41568e:	sbb    esi,DWORD PTR [edx]
  415690:	dec    edx
  415691:	int3   
  415692:	sbb    eax,0x7be0042c
  415697:	mov    dl,0xfa
  415699:	sbb    al,0xaa
  41569b:	inc    edi
  41569c:	dec    ebp
  41569d:	out    dx,eax
  41569e:	(bad)  
  41569f:	jbe    0x4156da
  4156a1:	scas   al,BYTE PTR es:[edi]
  4156a2:	fisubr DWORD PTR [ebp+eax*1+0x4998ea1f]
  4156a9:	add    eax,ebp
  4156ab:	in     al,0xff
  4156ad:	sub    BYTE PTR [ebp+0x1f],cl
  4156b0:	mov    ecx,0x8426db34
  4156b5:	enter  0x72e4,0x8d
  4156b9:	mov    eax,ds:0x2f6eee3e
  4156be:	pop    ebx
  4156bf:	bound  ebx,QWORD PTR [edx]
  4156c1:	pop    ebx
  4156c2:	push   cs
  4156c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c4:	dec    esp
  4156c5:	and    eax,0xd4a1735a
  4156ca:	fcmovnbe st,st(0)
  4156cc:	fs jae 0x4156fb
  4156cf:	xor    bl,BYTE PTR [edx+0x65005f1a]
  4156d5:	and    DWORD PTR [eax-0x2b],ebx
  4156d8:	xchg   ecx,eax
  4156d9:	mov    BYTE PTR [edx-0x4db0a475],0x2e
  4156e0:	cli    
  4156e1:	(bad)  
  4156e2:	push   edx
  4156e3:	fld    TBYTE PTR [ebp-0x8]
  4156e6:	inc    edx
  4156e7:	mov    dl,0xe
  4156e9:	dec    esi
  4156ea:	sbb    eax,0xe09d5ae3
  4156ef:	pop    DWORD PTR gs:[edx]
  4156f2:	push   ecx
  4156f3:	outs   dx,DWORD PTR ds:[esi]
  4156f4:	xor    ebx,DWORD PTR [eax]
  4156f6:	push   esp
  4156f7:	mov    ch,0xd0
  4156f9:	mov    ds:0x931e27df,eax
  4156fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ff:	js     0x41576a
  415701:	and    dh,BYTE PTR [ebp+0x159926fb]
  415707:	mov    ecx,0xcb55e0bf
  41570c:	jnp    0x41577a
  41570e:	pusha  
  41570f:	(bad)  
  415710:	outs   dx,DWORD PTR ds:[esi]
  415711:	sub    BYTE PTR [ecx+0x541000a],bl
  415717:	push   edx
  415718:	gs data16 aad 0x9b
  41571c:	mov    bh,0x4a
  41571e:	xchg   ebp,eax
  41571f:	ret    
  415720:	push   ecx
  415721:	call   0xe2bb0034
  415726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415727:	mov    ch,0x52
  415729:	mov    ah,bl
  41572b:	or     bl,bl
  41572d:	jge    0x4156ed
  41572f:	and    al,0x31
  415731:	aaa    
  415732:	rcl    bl,cl
  415734:	lock and dh,0x35
  415738:	jnp    0x4156dd
  41573a:	push   edi
  41573b:	cs add eax,0x8b48735d
  415741:	push   ecx
  415742:	mov    ecx,0x73b90909
  415747:	or     edi,eax
  415749:	leave  
  41574a:	je     0x4156f4
  41574c:	test   DWORD PTR [edx*1+0x7bce59ed],edx
  415753:	inc    ebx
  415754:	(bad)  
  415755:	cmp    dh,BYTE PTR [eax]
  415757:	push   edi
  415758:	pop    esp
  415759:	xchg   esp,eax
  41575a:	stos   DWORD PTR es:[edi],eax
  41575b:	mov    ch,0x84
  41575d:	inc    edi
  41575e:	mov    edx,0x753db413
  415763:	stc    
  415764:	ja     0x415791
  415766:	mov    al,0xc1
  415768:	or     al,0x9a
  41576a:	mov    esi,0x9b3c016c
  41576f:	mov    WORD PTR [ecx+0x2cb5beb4],ss
  415775:	das    
  415776:	jno    0x4157a6
  415778:	pop    ecx
  415779:	sub    eax,esi
  41577b:	inc    edi
  41577c:	dec    edi
  41577d:	push   edx
  41577e:	rcl    BYTE PTR [ecx],1
  415780:	sbb    dl,al
  415782:	pushf  
  415783:	mov    ecx,0x2671447b
  415788:	cs (bad) 
  41578a:	into   
  41578b:	mov    dh,0x35
  41578d:	mov    esi,0x25ef83fb
  415792:	mov    cl,0x75
  415794:	clc    
  415795:	adc    BYTE PTR [edi-0x6e18c2c6],al
  41579b:	loopne 0x415761
  41579d:	inc    ebp
  41579e:	es or  eax,0xf0a53d3a
  4157a4:	(bad)  
  4157a5:	xchg   esp,eax
  4157a6:	fwait
  4157a7:	or     edx,DWORD PTR [edi+0x7b2bacfd]
  4157ad:	dec    esi
  4157ae:	fbld   TBYTE PTR [ebp-0x79]
  4157b1:	sbb    eax,0x3285a49c
  4157b6:	stos   BYTE PTR es:[edi],al
  4157b7:	call   0x842:0x1b6731de
  4157be:	mov    dh,0x2c
  4157c0:	test   edx,esi
  4157c2:	in     al,dx
  4157c3:	ja     0x4157a4
  4157c5:	jle    0x415797
  4157c7:	mov    edx,0x18b1fe2f
  4157cc:	scas   eax,DWORD PTR es:[edi]
  4157cd:	or     cl,ah
  4157cf:	add    bl,BYTE PTR [ecx+0x36eee9f0]
  4157d5:	ja     0x41581d
  4157d7:	cmp    al,BYTE PTR [esi-0x2f]
  4157da:	fld    TBYTE PTR [ebp-0x7851ef56]
  4157e0:	jmp    0x6f37dfe1
  4157e5:	xchg   edx,eax
  4157e6:	iret   
  4157e7:	fidiv  DWORD PTR [eax+0x6]
  4157ea:	pop    edx
  4157eb:	or     eax,0xef00e3d2
  4157f0:	and    DWORD PTR ds:0x75271a09,ebx
  4157f6:	fsubrp st(3),st
  4157f8:	jl     0x4157d9
  4157fa:	jbe    0x41584d
  4157fc:	add    edi,DWORD PTR [edx]
  4157fe:	(bad)  
  4157ff:	stc    
  415800:	call   0x6d01:0x8c8fe8d9
  415807:	pop    ss
  415808:	jle    0x415793
  41580a:	and    BYTE PTR [esi+0x2],al
  41580d:	clc    
  41580e:	ret    0xfae3
  415811:	mov    ds:0xe0afecda,al
  415816:	mov    dl,dl
  415818:	push   eax
  415819:	sahf   
  41581a:	out    0x30,al
  41581c:	shl    DWORD PTR [eax-0x62efae00],cl
  415822:	lahf   
  415823:	pusha  
  415824:	jmp    0xf9a9:0x753b464f
  41582b:	dec    esp
  41582c:	push   eax
  41582d:	sub    bl,BYTE PTR [eax-0x9]
  415830:	daa    
  415831:	test   eax,0x1e14590a
  415836:	cld    
  415837:	imul   esi,DWORD PTR [eax-0x301f6d5d],0x46
  41583e:	icebp  
  41583f:	push   ds
  415840:	out    0x3f,al
  415842:	(bad)  [edx*1-0x8d5124]
  415849:	pop    es
  41584a:	popf   
  41584b:	loopne 0x4158a4
  41584d:	pop    es
  41584e:	(bad)  
  41584f:	imul   edi,eax,0xffffff99
  415852:	cmp    BYTE PTR [edx-0x51],ah
  415855:	push   cs
  415856:	mov    ds:0xaa0e6dcc,eax
  41585b:	pop    ds
  41585c:	mov    fs,WORD PTR [ebx+0x42]
  41585f:	and    eax,0x6dcfc651
  415864:	inc    esi
  415865:	dec    esi
  415866:	cli    
  415867:	xchg   esi,eax
  415868:	retf   
  415869:	aad    0xfd
  41586b:	and    DWORD PTR [ebx],ecx
  41586d:	outs   dx,BYTE PTR ds:[esi]
  41586e:	dec    ebx
  41586f:	adc    ch,BYTE PTR [ebx+0x16]
  415872:	(bad)  
  415873:	xor    al,0x15
  415875:	or     BYTE PTR [edx+0x74e23079],0x36
  41587c:	jmp    0x415876
  41587e:	sti    
  41587f:	xor    edx,DWORD PTR ds:0x780f99aa
  415885:	cmp    DWORD PTR [ecx],ecx
  415887:	adc    al,0xaf
  415889:	popa   
  41588a:	cmp    ah,dh
  41588c:	outs   dx,BYTE PTR ds:[esi]
  41588d:	loop   0x41585d
  41588f:	loop   0x4158ec
  415891:	ss repnz mov bl,0x35
  415895:	mov    ds:0x8e7cd6a9,al
  41589a:	cmp    edi,DWORD PTR [edi]
  41589c:	ficom  DWORD PTR [esi-0x5e]
  41589f:	das    
  4158a0:	and    ebx,edx
  4158a2:	imul   BYTE PTR [ecx+eax*1]
  4158a5:	sbb    ecx,DWORD PTR [eax+0x58]
  4158a8:	loopne 0x415891
  4158aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ab:	arpl   ax,si
  4158ad:	lea    ebp,[edx+0x26f360f3]
  4158b3:	jb     0x4158b8
  4158b5:	sbb    DWORD PTR [edx-0x3],edx
  4158b8:	test   eax,0x8362fc3b
  4158bd:	xor    BYTE PTR [eax],al
  4158bf:	in     eax,0xfb
  4158c1:	shl    DWORD PTR [ebx+0x5],cl
  4158c4:	sbb    ebp,DWORD PTR [ebx]
  4158c6:	les    esp,FWORD PTR [ebp-0x7c40fd92]
  4158cc:	dec    ebx
  4158cd:	push   edx
  4158ce:	xchg   ebp,eax
  4158cf:	es add al,0xb6
  4158d2:	mov    bh,BYTE PTR [edi+0x57136117]
  4158d8:	ja     0x4158e7
  4158da:	hlt    
  4158db:	and    BYTE PTR [ebx+ebx*2],cl
  4158de:	daa    
  4158df:	dec    esi
  4158e0:	cdq    
  4158e1:	mov    WORD PTR [esi+0x38],?
  4158e4:	add    BYTE PTR [ebx-0x2ddec615],dl
  4158ea:	test   eax,0x2a1158ce
  4158ef:	jmp    0x41593a
  4158f1:	test   eax,0x22e55747
  4158f6:	xchg   edi,eax
  4158f7:	jae    0x415886
  4158f9:	xchg   esi,eax
  4158fa:	fisub  DWORD PTR [esp+edx*4]
  4158fd:	push   ebx
  4158fe:	mov    dl,0x8b
  415900:	push   ecx
  415901:	scas   eax,DWORD PTR es:[edi]
  415902:	pop    ecx
  415903:	ret    0x4a46
  415906:	rcl    BYTE PTR [ebx+ebx*4],1
  415909:	mov    dh,0xa
  41590b:	(bad)  
  41590c:	jmp    0xdfaf:0xee7b2f12
  415913:	bound  esi,QWORD PTR [esp+esi*8-0x2baa2056]
  41591a:	jne    0x4158df
  41591c:	outs   dx,DWORD PTR ds:[esi]
  41591d:	fsub   DWORD PTR [esi+0x24eba317]
  415923:	lahf   
  415924:	push   ss
  415925:	and    esi,0x74367446
  41592b:	(bad)  
  41592d:	push   0xef8e4ea4
  415932:	adc    BYTE PTR [eax],dl
  415934:	or     bh,BYTE PTR [edx]
  415936:	stos   DWORD PTR es:[edi],eax
  415937:	xor    esi,DWORD PTR [edx-0x27]
  41593a:	pop    ebx
  41593b:	push   esp
  41593c:	(bad)
  41593f:	dec    edx
  415940:	inc    ecx
  415941:	fist   WORD PTR [ecx+esi*4+0x5c]
  415945:	loope  0x415976
  415947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415948:	in     eax,0xd1
  41594a:	xchg   ecx,eax
  41594b:	push   ds
  41594c:	inc    edx
  41594d:	dec    edx
  41594e:	adc    al,0x6c
  415950:	cld    
  415951:	std    
  415952:	retf   0x3edc
  415955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415956:	or     al,0x7a
  415958:	idiv   DWORD PTR [ebp+0x76d65fb2]
  41595e:	test   al,0x64
  415960:	add    al,0xd4
  415962:	and    al,0x9d
  415964:	mov    eax,ds:0x1a04248c
  415969:	push   esp
  41596a:	sti    
  41596b:	pop    esp
  41596c:	add    al,0x71
  41596e:	sub    DWORD PTR [edi],edi
  415970:	in     al,dx
  415971:	pusha  
  415972:	mov    al,BYTE PTR [ecx+0xed22b08]
  415978:	mov    ebp,0x61539e95
  41597d:	loop   0x415933
  41597f:	shr    esp,1
  415981:	in     al,dx
  415982:	mov    ebx,0x1ff6a6d5
  415987:	inc    ebp
  415988:	test   DWORD PTR [ebp-0x193ebed],0xc4bb8f92
  415992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415993:	out    0x2c,eax
  415995:	pop    es
  415996:	and    BYTE PTR [ecx-0x61c01ab6],ch
  41599c:	ins    BYTE PTR es:[edi],dx
  41599d:	out    dx,eax
  41599e:	neg    bl
  4159a0:	jge    0x4159ca
  4159a2:	add    ecx,ebp
  4159a4:	cmc    
  4159a5:	add    BYTE PTR [edi],bh
  4159a7:	sbb    bh,al
  4159a9:	fnstenv [edi-0x4c]
  4159ac:	adc    al,BYTE PTR [ecx+0x311978ff]
  4159b2:	sbb    eax,0x424f8628
  4159b7:	push   0x7b8a5987
  4159bc:	push   edx
  4159bd:	pusha  
  4159be:	jae    0x415a23
  4159c0:	lods   al,BYTE PTR ds:[esi]
  4159c1:	mov    eax,0x3dc2a938
  4159c6:	fimul  DWORD PTR ds:0x31474181
  4159cc:	je     0x4159de
  4159ce:	pop    es
  4159cf:	das    
  4159d0:	mov    ds:0x97d65559,eax
  4159d5:	inc    ebx
  4159d6:	ins    DWORD PTR es:[edi],dx
  4159d7:	mov    ebp,0x7721446
  4159dc:	call   0xbcb761dd
  4159e1:	js     0x41599c
  4159e3:	sbb    ch,bl
  4159e5:	or     DWORD PTR [edi-0x28b11089],edi
  4159eb:	push   eax
  4159ec:	and    eax,DWORD PTR [edi]
  4159ee:	(bad)  
  4159ef:	iret   
  4159f0:	mov    eax,ds:0xb23324d5
  4159f5:	inc    edi
  4159f6:	inc    edx
  4159f7:	mov    al,0x80
  4159f9:	inc    esi
  4159fa:	sub    ah,BYTE PTR [esi-0x7fb972bb]
  415a00:	bound  ebx,QWORD PTR [esi+eiz*8-0x21788a5a]
  415a07:	sbb    ebx,esi
  415a09:	xor    al,BYTE PTR [ecx+0xd]
  415a0c:	mov    ebp,0x82cd6351
  415a11:	xlat   BYTE PTR ds:[ebx]
  415a12:	lea    edi,[esp+eax*1+0x3c]
  415a16:	mov    edx,0xb336003f
  415a1b:	fild   WORD PTR [eax+0x508696c]
  415a21:	jmp    0x8104396a
  415a26:	xor    al,0xe0
  415a28:	ja     0x415a57
  415a2a:	sub    al,0x7d
  415a2c:	je     0x415a84
  415a2e:	js     0x415aa0
  415a30:	push   0x648cd855
  415a35:	sbb    BYTE PTR ds:0x92f3d88e,dl
  415a3b:	pop    ebp
  415a3c:	les    ecx,FWORD PTR [eax+edi*1+0x439aa5a0]
  415a43:	scas   al,BYTE PTR es:[edi]
  415a44:	adc    eax,0x14f8c1c0
  415a49:	inc    ebp
  415a4a:	pop    esp
  415a4b:	sbb    DWORD PTR [esi-0x2a],edi
  415a4e:	push   es
  415a4f:	ins    BYTE PTR es:[edi],dx
  415a50:	mov    ch,0x28
  415a52:	pop    ss
  415a53:	dec    ebx
  415a54:	test   DWORD PTR [edx+ecx*2],ebp
  415a57:	sub    edi,DWORD PTR [ebp-0x3a]
  415a5a:	jne    0x415a7b
  415a5c:	add    edx,esp
  415a5e:	rol    DWORD PTR [ecx-0x71c05ca4],cl
  415a64:	ds out dx,al
  415a66:	xchg   esp,eax
  415a67:	data16 daa 
  415a69:	(bad)  
  415a6a:	mov    WORD PTR [ebx+ecx*2],cs
  415a6d:	xchg   esi,eax
  415a6e:	sbb    al,0x9f
  415a70:	xor    eax,0x884b748b
  415a75:	jg     0x415a6c
  415a77:	or     al,0x84
  415a79:	pop    ebp
  415a7a:	mov    bh,al
  415a7c:	mov    esp,0x3ff54f32
  415a81:	test   DWORD PTR [edx+edi*4+0x655540bb],ecx
  415a88:	ins    DWORD PTR es:[edi],dx
  415a89:	mov    ss:0x40a8c5e5,al
  415a8f:	push   ds
  415a90:	push   es
  415a91:	pop    eax
  415a92:	mov    eax,ds:0xa5885e4a
  415a97:	ins    BYTE PTR es:[edi],dx
  415a98:	fwait
  415a99:	jmp    0x4748:0xb5080b26
  415aa0:	ins    DWORD PTR es:[edi],dx
  415aa1:	push   edi
  415aa2:	dec    eax
  415aa3:	sub    ch,BYTE PTR [ebp-0x6f8323d4]
  415aa9:	shl    BYTE PTR [eax-0x1e3cc90c],1
  415aaf:	cmp    DWORD PTR [ecx],edx
  415ab1:	inc    ecx
  415ab2:	rcl    bl,0x32
  415ab5:	sbb    bl,bl
  415ab7:	xor    esp,DWORD PTR [edi]
  415ab9:	mov    eax,ds:0x7e363c57
  415abe:	jl     0x415a43
  415ac0:	fsub   DWORD PTR [ebx-0x2]
  415ac3:	mov    ebp,0x70ae0625
  415ac8:	mov    dh,0xdd
  415aca:	stos   BYTE PTR es:[edi],al
  415acb:	or     edi,ebx
  415acd:	jno    0x415a8d
  415acf:	iret   
  415ad0:	call   esp
  415ad2:	cmc    
  415ad3:	call   0xbfc5:0xeb670224
  415ada:	mov    ch,0x27
  415adc:	aad    0x69
  415ade:	sahf   
  415adf:	gs (bad) 
  415ae1:	stc    
  415ae2:	hlt    
  415ae3:	dec    esp
  415ae4:	xchg   edi,eax
  415ae5:	sti    
  415ae6:	ror    edi,0x99
  415ae9:	ror    BYTE PTR [edx+ebp*2],0xaa
  415aed:	adc    DWORD PTR [edx+edi*1-0x3b],ebp
  415af1:	pop    ds
  415af2:	in     eax,0x6d
  415af4:	inc    edx
  415af5:	pop    esp
  415af6:	call   0xd20f:0xb95c4bb3
  415afd:	sbb    eax,0x5f6d0fa0
  415b02:	mov    es,WORD PTR [eax-0x484f0783]
  415b08:	push   edx
  415b09:	jl     0x415abd
  415b0b:	or     al,0x4e
  415b0d:	inc    edx
  415b0e:	addr16 mov esi,0x20b6c827
  415b14:	push   0x5c3d4ac2
  415b19:	jecxz  0x415aac
  415b1b:	mov    ebp,0x49a303ff
  415b20:	or     esp,esi
  415b22:	jb     0x415b47
  415b24:	nop
  415b25:	cmp    BYTE PTR [ebx-0x4c57aafd],al
  415b2b:	hlt    
  415b2c:	arpl   WORD PTR [edx+0x3e],cx
  415b2f:	cmp    DWORD PTR [edi+0x2a],ebp
  415b32:	jno    0x415b9e
  415b34:	sbb    DWORD PTR [ebp-0x66],edi
  415b37:	push   ebp
  415b38:	stc    
  415b39:	popf   
  415b3a:	scas   al,BYTE PTR es:[edi]
  415b3b:	jecxz  0x415b6d
  415b3d:	adc    dl,BYTE PTR [ecx-0x3e6490a0]
  415b43:	jae    0x415adf
  415b45:	sub    bh,ch
  415b47:	jmp    0xb82:0x98ac1864
  415b4e:	sbb    DWORD PTR [edi],ebx
  415b50:	pop    eax
  415b51:	adc    eax,ebp
  415b53:	rol    ch,0x3e
  415b56:	in     eax,dx
  415b57:	aad    0x99
  415b59:	cdq    
  415b5a:	sub    al,0x5
  415b5c:	pop    edi
  415b5d:	std    
  415b5e:	mov    edx,0x17d805b4
  415b63:	inc    ebx
  415b64:	aaa    
  415b65:	mov    WORD PTR ss:[edi+0x1b],fs
  415b69:	ret    0x25da
  415b6c:	xchg   DWORD PTR [esi+0x4b],ebp
  415b6f:	cs lsl ebx,ax
  415b73:	es stc 
  415b75:	dec    ecx
  415b76:	adc    BYTE PTR ds:0x3b84c31b,al
  415b7c:	mov    esi,0x5bd097d1
  415b81:	cwde   
  415b82:	outs   dx,DWORD PTR ds:[esi]
  415b83:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415b85:	push   es
  415b86:	mov    eax,ds:0xc7961763
  415b8b:	jecxz  0x415b8b
  415b8d:	sbb    BYTE PTR [edi-0xd],ah
  415b90:	push   edx
  415b91:	cmp    ecx,DWORD PTR [ecx+0x73]
  415b94:	pop    ebx
  415b95:	cmp    al,0x9c
  415b97:	xor    eax,0x50e3f2df
  415b9c:	add    edx,DWORD PTR [esi+0x6]
  415b9f:	pushf  
  415ba0:	popa   
  415ba1:	test   BYTE PTR [edx],ah
  415ba3:	sbb    BYTE PTR [eax-0x178e4cfa],bl
  415ba9:	xchg   edi,eax
  415baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bab:	jle    0x415ba9
  415bad:	(bad)  
  415baf:	add    BYTE PTR [ebx-0x59502ad9],al
  415bb5:	pop    esp
  415bb6:	call   0xeb09d681
  415bbb:	sbb    DWORD PTR [ebx+0x45],edi
  415bbe:	aad    0x2c
  415bc0:	add    edx,edx
  415bc2:	sbb    DWORD PTR [edi],edi
  415bc4:	pop    esi
  415bc5:	push   ecx
  415bc6:	es mov bh,ah
  415bc9:	inc    bh
  415bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bcc:	pusha  
  415bcd:	lock in al,0x9f
  415bd0:	inc    esi
  415bd1:	scas   eax,DWORD PTR es:[edi]
  415bd2:	shl    bh,0x5c
  415bd5:	add    ecx,DWORD PTR [edx-0x6c6f380b]
  415bdb:	ins    DWORD PTR es:[edi],dx
  415bdc:	pop    edx
  415bdd:	add    BYTE PTR [edi],dh
  415bdf:	int3   
  415be0:	repz scas eax,DWORD PTR es:[edi]
  415be2:	enter  0x8cf7,0xbb
  415be6:	cmc    
  415be7:	add    al,0xcc
  415be9:	lods   al,BYTE PTR ds:[esi]
  415bea:	sbb    al,ah
  415bec:	push   ebp
  415bed:	inc    eax
  415bee:	jns    0x415b72
  415bf0:	dec    ecx
  415bf1:	jae    0x415be6
  415bf3:	stc    
  415bf4:	ins    DWORD PTR es:[edi],dx
  415bf5:	sbb    ecx,DWORD PTR [esi-0x1932fd81]
  415bfb:	daa    
  415bfc:	jle    0x415c76
  415bfe:	cmp    DWORD PTR [ebx+0x15],edi
  415c01:	in     al,dx
  415c02:	out    dx,al
  415c03:	cmp    al,0xbf
  415c05:	lods   eax,DWORD PTR ds:[esi]
  415c06:	lock sub DWORD PTR [ebx-0xe],edi
  415c0a:	mov    DWORD PTR [ebp+0x61],ecx
  415c0d:	sbb    eax,0x8b3b99bb
  415c12:	scas   al,BYTE PTR es:[edi]
  415c13:	sbb    cl,BYTE PTR [ecx-0x4a]
  415c16:	fisttp QWORD PTR [esp+edi*4-0x5fe74980]
  415c1d:	popf   
  415c1e:	push   eax
  415c1f:	adc    esp,edx
  415c21:	or     BYTE PTR [ebp+0x34],dl
  415c24:	xor    ebp,esp
  415c26:	fwait
  415c27:	dec    ebp
  415c28:	xchg   ecx,eax
  415c29:	jmp    0x97c6d45b
  415c2e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415c30:	adc    esi,eax
  415c32:	pushf  
  415c33:	add    DWORD PTR [esp+ebx*2+0x29],0xffffffab
  415c38:	repz or dh,BYTE PTR [edi+0xc361f15]
  415c3f:	jns    0x415c1f
  415c41:	mov    ah,BYTE PTR [ebx]
  415c43:	push   eax
  415c44:	pop    edi
  415c45:	jge    0x415be1
  415c47:	jns    0x415bfa
  415c49:	xchg   edi,eax
  415c4a:	xchg   BYTE PTR [ecx-0x1a],bl
  415c4d:	test   DWORD PTR [eax+eiz*2+0x14],0x841dd8c2
  415c55:	mov    DWORD PTR [edx+0x5aa1d2b5],edx
  415c5b:	in     al,dx
  415c5c:	pusha  
  415c5d:	or     DWORD PTR [ebx-0x7113b3f1],ebx
  415c63:	pop    ecx
  415c64:	outs   dx,BYTE PTR ds:[esi]
  415c65:	adc    ch,BYTE PTR [ebx-0x560075b0]
  415c6b:	sub    BYTE PTR ds:0x3819937c,bl
  415c71:	lods   al,BYTE PTR ds:[esi]
  415c72:	mov    cl,0x52
  415c74:	and    DWORD PTR [ecx+0x5d3f5a8e],ebx
  415c7a:	mov    cl,0x2
  415c7c:	inc    edx
  415c7d:	fdivr  QWORD PTR [esi+edi*1]
  415c80:	and    DWORD PTR [ebx+0x12de0cae],edx
  415c86:	xchg   DWORD PTR [edx-0x5fdec9db],edi
  415c8c:	pusha  
  415c8d:	or     eax,0x895e9176
  415c92:	xchg   BYTE PTR [edi+0x2c633910],bh
  415c98:	scas   al,BYTE PTR es:[edi]
  415c99:	clrssbsy QWORD PTR [esi+0x2a]
  415c9e:	mov    ds,WORD PTR [esi+0x30d9d2fb]
  415ca4:	pop    ecx
  415ca5:	adc    cl,ch
  415ca7:	loopne 0x415d28
  415ca9:	repnz popf 
  415cab:	mov    esi,0xc1a61117
  415cb0:	mov    bl,0x98
  415cb2:	adc    BYTE PTR [ebp+0x5c8e4ef5],0x50
  415cb9:	(bad)  
  415cba:	push   eax
  415cbb:	fstp   st(0)
  415cbd:	call   0x44b6:0x1c45afdb
  415cc4:	dec    edi
  415cc5:	dec    edx
  415cc6:	mov    ebp,0x861a24ff
  415ccb:	popa   
  415ccc:	mov    al,0x39
  415cce:	pusha  
  415ccf:	xchg   edi,eax
  415cd0:	push   0xf665a7e2
  415cd5:	aad    0x52
  415cd7:	sub    al,0xeb
  415cd9:	xchg   ebp,eax
  415cda:	sub    ecx,DWORD PTR [esi-0x2a]
  415cdd:	call   0xe24d:0x1f8948a0
  415ce4:	fisttp DWORD PTR [edi]
  415ce6:	out    0x98,eax
  415ce8:	repz and esp,DWORD PTR [esi-0x238baf20]
  415cef:	sub    edi,DWORD PTR [edx]
  415cf1:	repnz iret 
  415cf3:	jg     0x415d61
  415cf5:	mov    BYTE PTR [ebp-0x31],bh
  415cf8:	inc    esp
  415cf9:	repnz sbb bl,0xcf
  415cfd:	or     DWORD PTR [edx+0x57bf9a34],eax
  415d03:	loop   0x415c8f
  415d05:	push   eax
  415d06:	sar    BYTE PTR [edi+0x4d984e22],1
  415d0c:	test   BYTE PTR [ecx+0x57],0x1
  415d10:	mov    edi,0x287c0b9e
  415d15:	data16 out 0x77,al
  415d18:	cmp    ecx,DWORD PTR [eax-0x426cd08c]
  415d1e:	ins    BYTE PTR es:[edi],dx
  415d1f:	ret    0x3140
  415d22:	outs   dx,DWORD PTR ds:[esi]
  415d23:	leave  
  415d24:	(bad)  
  415d25:	xor    al,0xbd
  415d27:	add    eax,0x5b1ef4ca
  415d2c:	jbe    0x415cdc
  415d2e:	pop    esp
  415d2f:	in     eax,dx
  415d30:	dec    edx
  415d31:	in     al,dx
  415d32:	mov    eax,ds:0xb2b1b1ea
  415d37:	cmp    al,0x2
  415d39:	and    ebx,DWORD PTR [edx]
  415d3b:	add    al,0xbc
  415d3d:	std    
  415d3e:	int    0x3d
  415d40:	icebp  
  415d41:	mov    ds:0x2babdc77,al
  415d46:	adc    dl,BYTE PTR [edi]
  415d48:	dec    ebx
  415d49:	ret    0xa376
  415d4c:	push   cs
  415d4d:	in     eax,0xa1
  415d4f:	xchg   esp,eax
  415d50:	mov    bh,0x2
  415d52:	cld    
  415d53:	jp     0x415d28
  415d55:	les    ebx,FWORD PTR [ebx]
  415d57:	stos   BYTE PTR es:[edi],al
  415d58:	ins    DWORD PTR es:[edi],dx
  415d59:	and    dh,ch
  415d5b:	lds    esi,FWORD PTR [edx+0x32]
  415d5e:	mov    dh,0x23
  415d60:	dec    ebx
  415d61:	xchg   BYTE PTR [ecx],bh
  415d63:	sub    eax,0x327c024b
  415d68:	sar    dl,0x99
  415d6b:	sbb    al,0xae
  415d6d:	pop    esp
  415d6e:	imul   esi,esi,0xd
  415d71:	ror    bh,1
  415d73:	dec    ecx
  415d74:	cmc    
  415d75:	push   ss
  415d76:	mov    al,0xb6
  415d78:	ins    DWORD PTR es:[edi],dx
  415d79:	adc    edx,edx
  415d7b:	inc    edx
  415d7c:	dec    esi
  415d7d:	es clc 
  415d7f:	lods   al,BYTE PTR ds:[esi]
  415d80:	std    
  415d81:	cwde   
  415d82:	xchg   edi,eax
  415d83:	ins    DWORD PTR es:[edi],dx
  415d84:	fild   QWORD PTR [eax]
  415d86:	mov    dh,0x40
  415d88:	popa   
  415d89:	neg    BYTE PTR [edx+0x18]
  415d8c:	xor    eax,DWORD PTR [esi]
  415d8e:	cwde   
  415d8f:	or     ebp,DWORD PTR [edx-0xa]
  415d92:	xchg   esp,eax
  415d93:	jecxz  0x415e0a
  415d95:	cmc    
  415d96:	push   cs
  415d97:	or     eax,0x98dae4db
  415d9c:	mov    esi,0xc0501520
  415da1:	rol    al,0xc0
  415da4:	rol    al,0xc0
  415da7:	rol    al,0xc0
  415daa:	rol    al,0xc0
  415dad:	rol    al,0xc0
  415db0:	rol    al,0xc0
  415db3:	rol    al,0xc0
  415db6:	rol    al,0xc0
  415db9:	rol    al,0xc0
  415dbc:	rol    al,0xc0
  415dbf:	rol    al,0xc0
  415dc2:	rol    al,0xc0
  415dc5:	rol    al,0xc0
  415dc8:	rol    al,0xc0
  415dcb:	rol    al,0xc0
  415dce:	rol    al,0xc0
  415dd1:	rol    al,0xc0
  415dd4:	rol    al,0xc0
  415dd7:	rol    al,0xc0
  415dda:	rol    al,0xc0
  415ddd:	rol    al,0xc0
  415de0:	sti    
  415de1:	xchg   edx,esp
  415de3:	sub    eax,0x63e7f41c
  415de8:	mov    edi,0x9181b36
  415ded:	mov    ebp,0x35c463f0
  415df2:	int    0xd
  415df4:	test   BYTE PTR [esi],ah
  415df6:	dec    esp
  415df7:	inc    ebx
  415df8:	out    dx,al
  415df9:	fimul  DWORD PTR [ecx+edx*2+0xb]
  415dfd:	scas   al,BYTE PTR es:[edi]
  415dfe:	xlat   BYTE PTR ds:[ebx]
  415dff:	mov    ah,0x55
  415e01:	dec    BYTE PTR [ebp-0x16e59d90]
  415e07:	xor    ebp,DWORD PTR [ebp-0x47b1aed7]
  415e0d:	ds mov ah,0xac
  415e10:	jle    0x415e46
  415e12:	jns    0x415df2
  415e14:	retf   0x4ac0
  415e17:	mov    ebp,DWORD PTR [esi-0x11f19766]
  415e1d:	data16 sub BYTE PTR [esi+0x4c34aea1],0x90
  415e25:	sbb    eax,DWORD PTR [edi-0x31]
  415e28:	jg     0x415e00
  415e2a:	cmp    BYTE PTR [ebx+0x17],ah
  415e2d:	xchg   ebx,edi
  415e2f:	out    0xd3,al
  415e31:	test   al,0x98
  415e33:	xor    eax,0x24093a08
  415e38:	mov    ds:0x762c3c5d,eax
  415e3d:	or     al,0x9a
  415e3f:	jge    0x415eae
  415e41:	cmp    BYTE PTR [esi-0x66],bh
  415e44:	mov    ebp,0x2177da44
  415e49:	mov    edi,0x6641e05e
  415e4e:	xchg   BYTE PTR ds:0x72cdd4fc,bl
  415e54:	mov    ds:0xf8fa41d0,al
  415e59:	xor    ebx,DWORD PTR [ebx-0x7b8e89a7]
  415e5f:	add    al,0x55
  415e61:	(bad)  
  415e62:	inc    edi
  415e63:	arpl   WORD PTR [edi+0x2358a120],ax
  415e69:	bound  eax,QWORD PTR [ebx-0x5f2b97db]
  415e6f:	arpl   WORD PTR [ebx+0x6c],dx
  415e72:	or     eax,0xd2264a2e
  415e77:	outs   dx,DWORD PTR ds:[esi]
  415e78:	sub    BYTE PTR [edx+0x4db4e68a],cl
  415e7e:	popf   
  415e7f:	sub    edx,DWORD PTR ds:0x420056b3
  415e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e86:	mov    eax,0xd2255506
  415e8b:	sbb    ch,BYTE PTR [edx+0xd]
  415e8e:	out    0x3d,eax
  415e90:	push   esp
  415e91:	mov    esi,0x1edbd5
  415e96:	push   edx
  415e97:	inc    eax
  415e98:	and    al,0x8b
  415e9a:	mov    esi,cr7
  415e9d:	vpaddusw xmm7,xmm0,xmm1
  415ea1:	call   0x2d96:0x19a671ec
  415ea8:	es aad 0xc2
  415eab:	dec    eax
  415eac:	cmp    edi,DWORD PTR [ecx]
  415eae:	dec    esp
  415eaf:	dec    ebp
  415eb0:	sub    dh,dh
  415eb2:	stc    
  415eb3:	adc    ebx,DWORD PTR [edx+0x33]
  415eb6:	sbb    dh,BYTE PTR [edi+0x6acc847e]
  415ebc:	add    BYTE PTR [eax+0x78],bh
  415ebf:	call   0x692331df
  415ec4:	call   0xa2c0:0xb8fe89e1
  415ecb:	sbb    al,0xa6
  415ecd:	mov    DWORD PTR [esi-0x712c8802],ebp
  415ed3:	in     eax,dx
  415ed4:	dec    eax
  415ed5:	push   ebx
  415ed6:	cmp    ecx,DWORD PTR [eax-0x4b]
  415ed9:	in     eax,0xce
  415edb:	or     al,0x8e
  415edd:	scas   al,BYTE PTR es:[edi]
  415ede:	push   ecx
  415edf:	xchg   ecx,eax
  415ee0:	push   cs
  415ee1:	xchg   edx,eax
  415ee2:	sub    DWORD PTR [edi+0x6d7e8f0c],ebp
  415ee8:	add    al,dl
  415eea:	imul   DWORD PTR [edi]
  415eec:	hlt    
  415eed:	je     0x415e9c
  415eef:	xor    eax,0x58c0f27d
  415ef4:	push   DWORD PTR [esi]
  415ef6:	retf   0x9032
  415ef9:	fwait
  415efa:	adc    DWORD PTR [ebp-0x702f9bb9],0x97965154
  415f04:	cwde   
  415f05:	pop    edi
  415f06:	stos   DWORD PTR es:[edi],eax
  415f07:	bswap  ecx
  415f09:	jae    0x415ee4
  415f0b:	icebp  
  415f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0d:	mov    cl,BYTE PTR [ebx+esi*1-0x6108f967]
  415f14:	adc    ch,0xcb
  415f17:	inc    ebp
  415f18:	and    eax,0xe7d56236
  415f1d:	mov    gs,WORD PTR [esi-0x259131f5]
  415f23:	add    BYTE PTR [esi-0x63],bh
  415f26:	(bad)  
  415f27:	sub    eax,0xca54cc3e
  415f2c:	add    al,BYTE PTR [ebx-0x6a8a520e]
  415f32:	adc    esp,DWORD PTR [ebx+0x77]
  415f35:	mov    ebx,0x8f63c86e
  415f3a:	jmp    0xe872661a
  415f3f:	shl    DWORD PTR [ecx],0x18
  415f42:	call   0x3b25:0xe33ebe21
  415f49:	lea    edx,ds:0xef58d315
  415f4f:	inc    edi
  415f50:	adc    DWORD PTR ds:0x53f05076,ecx
  415f56:	shl    BYTE PTR [edx],0x5c
  415f59:	int    0x72
  415f5b:	inc    ecx
  415f5c:	in     eax,0x4e
  415f5e:	lods   al,BYTE PTR ds:[esi]
  415f5f:	pop    ss
  415f60:	push   esp
  415f61:	or     BYTE PTR [ebx],ah
  415f63:	cs push 0x26b2fa5f
  415f69:	jl     0x415f09
  415f6b:	test   DWORD PTR [edx-0x63f16146],edi
  415f71:	pop    ebp
  415f72:	mov    ecx,0xa0eb8024
  415f77:	lods   al,BYTE PTR ds:[esi]
  415f78:	fidiv  WORD PTR [ecx-0x1f]
  415f7b:	mov    eax,0x736fe21e
  415f80:	sbb    DWORD PTR [ecx+0x32889789],eax
  415f86:	sub    DWORD PTR [edi],ebp
  415f88:	into   
  415f89:	inc    esi
  415f8a:	or     dh,al
  415f8c:	sbb    bh,dh
  415f8e:	rol    ebp,1
  415f90:	adc    eax,0x5008ec7
  415f95:	aas    
  415f96:	push   edx
  415f97:	sub    DWORD PTR [esi],0x334e8764
  415f9d:	push   eax
  415f9e:	nop
  415f9f:	pop    edx
  415fa0:	fdiv   QWORD PTR fs:[eax+ebp*1-0x31]
  415fa5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  415fa7:	sbb    DWORD PTR [esi-0x5],eax
  415faa:	cld    
  415fab:	add    al,0xd7
  415fad:	fiadd  WORD PTR [ecx+0x17ca2467]
  415fb3:	pop    ecx
  415fb4:	add    eax,0x7533a94e
  415fb9:	pop    edi
  415fba:	imul   esi,DWORD PTR [edi+0x10],0x5c
  415fbe:	test   eax,0x43c032aa
  415fc3:	pushf  
  415fc4:	data16 jl 0x415f6a
  415fc7:	push   esp
  415fc8:	gs cmp ch,al
  415fcb:	sbb    eax,0x3cf0d46
  415fd0:	popa   
  415fd1:	ins    BYTE PTR es:[edi],dx
  415fd2:	pop    edx
  415fd3:	pop    ebx
  415fd4:	bound  ebx,QWORD PTR fs:[edi+0x76a1407c]
  415fdb:	and    BYTE PTR [esi],cl
  415fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fde:	std    
  415fdf:	mov    dh,0x14
  415fe1:	scas   al,BYTE PTR es:[edi]
  415fe2:	shl    dl,cl
  415fe4:	ficom  DWORD PTR [ecx+ebx*4+0xe]
  415fe8:	pop    esp
  415fe9:	mov    al,ds:0x27b112c
  415fee:	into   
  415fef:	xchg   DWORD PTR [eax+ebp*1+0x4d],ebp
  415ff3:	or     esi,DWORD PTR [edi+0x100f4397]
  415ff9:	mov    ch,0x45
  415ffb:	sti    
  415ffc:	push   ss
  415ffd:	mov    esi,0x92555325
  416002:	and    edx,ebp
  416004:	cwde   
  416005:	ins    DWORD PTR es:[edi],dx
  416006:	mov    eax,ds:0xf2020d2
  41600b:	inc    edx
  41600c:	ret    0xbeb3
  41600f:	mov    ch,0xb8
  416011:	sub    eax,0x3a770d10
  416016:	jno    0x41603a
  416018:	fidivr DWORD PTR [ecx-0x33b8710c]
  41601e:	push   ebx
  41601f:	cdq    
  416020:	push   edx
  416021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416022:	mov    cl,0xdd
  416024:	(bad)  
  416025:	out    dx,al
  416026:	ins    DWORD PTR es:[edi],dx
  416027:	jg     0x41604a
  416029:	fld    TBYTE PTR [eax-0x6674fd17]
  416030:	add    ebp,edx
  416032:	jmp    0x416036
  416034:	mov    al,ds:0x7644055
  416039:	push   eax
  41603a:	jg     0x4160b0
  41603c:	pop    ds
  41603d:	aad    0x55
  41603f:	ror    BYTE PTR [ecx-0x6f],1
  416042:	aaa    
  416043:	sub    edi,DWORD PTR [ecx-0x45c1c2fb]
  416049:	(bad)  
  41604a:	out    0x60,al
  41604c:	aas    
  41604d:	jmp    0x415ff3
  41604f:	das    
  416050:	jg     0x415fe8
  416052:	lahf   
  416053:	fld    DWORD PTR [edi]
  416055:	fwait
  416056:	push   ebp
  416057:	xlat   BYTE PTR ds:[ebx]
  416058:	(bad)  
  416059:	pusha  
  41605a:	(bad)  
  41605b:	push   edi
  41605c:	std    
  41605d:	sub    BYTE PTR [edi],dl
  41605f:	adc    DWORD PTR [ecx+0x7d],esp
  416062:	cli    
  416063:	fstp   TBYTE PTR [ebx-0x45]
  416066:	adc    BYTE PTR [ecx-0x24],bl
  416069:	jo     0x4160a7
  41606b:	add    esi,DWORD PTR [edx+eax*1-0x53]
  41606f:	scas   al,BYTE PTR es:[edi]
  416070:	or     eax,0x56a5eea8
  416075:	push   es
  416076:	cwde   
  416077:	scas   al,BYTE PTR es:[edi]
  416078:	inc    esp
  416079:	pop    edx
  41607a:	pop    ss
  41607b:	loopne 0x41601d
  41607d:	pop    ebp
  41607e:	ret    
  41607f:	mov    bl,0xfe
  416081:	stos   DWORD PTR es:[edi],eax
  416082:	(bad)  
  416083:	ins    DWORD PTR es:[edi],dx
  416084:	loop   0x4160d0
  416086:	or     DWORD PTR [edx+0x2b],edx
  416089:	fs xchg esp,eax
  41608b:	or     al,0x35
  41608d:	mov    es:0x5d87a7e0,al
  416093:	mov    bh,0xa
  416095:	mov    ch,0x4b
  416097:	gs jnp 0x41603d
  41609a:	sbb    eax,DWORD PTR [esi]
  41609c:	in     eax,dx
  41609d:	bound  ebp,QWORD PTR [edx-0x222e47a]
  4160a3:	ror    BYTE PTR [edx+ebp*8-0x7],cl
  4160a7:	inc    edi
  4160a8:	mov    ds,WORD PTR [ebx+0x2d]
  4160ab:	pop    ds
  4160ac:	(bad)  
  4160ae:	sub    BYTE PTR [ecx],al
  4160b0:	sbb    ecx,edi
  4160b2:	mov    bl,BYTE PTR [ebp-0x22]
  4160b5:	or     al,0xd4
  4160b7:	(bad)  
  4160b8:	push   eax
  4160b9:	in     al,dx
  4160ba:	add    DWORD PTR [ecx+0x34],edi
  4160bd:	xchg   DWORD PTR [ebx+0x2e3c1bed],edx
  4160c3:	mov    esp,DWORD PTR [ecx-0x70f296e4]
  4160c9:	adc    al,0xc4
  4160cb:	inc    ebx
  4160cc:	lods   al,BYTE PTR ds:[esi]
  4160cd:	sahf   
  4160ce:	jl     0x416137
  4160d0:	ret    
  4160d1:	mov    dl,BYTE PTR [ecx+0x7e081ebf]
  4160d7:	das    
  4160d8:	and    edx,ebx
  4160da:	pusha  
  4160db:	mov    ebx,eax
  4160dd:	jge    0x4160f5
  4160df:	out    0xea,eax
  4160e1:	stos   DWORD PTR es:[edi],eax
  4160e2:	popf   
  4160e3:	cmp    edi,DWORD PTR [esi+0x59dd424b]
  4160e9:	fsubr  st,st(0)
  4160eb:	enter  0xd867,0xec
  4160ef:	pop    ss
  4160f0:	add    edx,edx
  4160f2:	fmul   QWORD PTR ds:0x34b21b5c
  4160f8:	inc    ecx
  4160f9:	neg    BYTE PTR [eax+0x450fe148]
  4160ff:	adc    edi,esp
  416101:	loop   0x41611b
  416103:	loope  0x4160e2
  416105:	jb     0x416096
  416107:	mov    dl,0x55
  416109:	iret   
  41610a:	das    
  41610b:	fdiv   st,st(6)
  41610d:	repnz stos BYTE PTR es:[edi],al
  41610f:	push   ecx
  416110:	cdq    
  416111:	nop
  416112:	inc    esi
  416113:	fxam   
  416115:	cs in  al,0x2
  416118:	dec    esi
  416119:	call   0x1cff:0xc48fa2a3
  416120:	leave  
  416121:	xor    BYTE PTR [eax+0x6e7a7939],ah
  416127:	sbb    eax,0xfb00226f
  41612c:	ret    0x672d
  41612f:	test   al,0x53
  416131:	xor    dh,ah
  416133:	mov    bh,0x53
  416135:	icebp  
  416136:	int3   
  416137:	cmp    al,0x89
  416139:	adc    al,0xa1
  41613b:	inc    ebp
  41613c:	sbb    DWORD PTR [edx+0x3c56cf81],eax
  416142:	dec    edx
  416143:	int3   
  416144:	outs   dx,DWORD PTR ds:[esi]
  416145:	xor    eax,0x18c164ab
  41614a:	test   al,0xd7
  41614c:	and    al,0xef
  41614e:	daa    
  41614f:	repz into 
  416151:	xor    eax,DWORD PTR [edi]
  416153:	cmp    dl,cl
  416155:	ror    BYTE PTR [edx-0x34],cl
  416158:	cmp    ebp,DWORD PTR [esi]
  41615a:	fs cmp al,0x25
  41615d:	jecxz  0x41616f
  41615f:	js     0x41613c
  416161:	sti    
  416162:	xchg   edx,eax
  416163:	mov    ds:0xd0550392,eax
  416168:	jbe    0x416166
  41616a:	mov    ecx,0xd4a2ae9d
  41616f:	push   ecx
  416170:	cld    
  416171:	xor    eax,0x94e75546
  416176:	test   eax,0x138858a3
  41617b:	jnp    0x41611b
  41617d:	sub    DWORD PTR [eax+0x43],ecx
  416180:	mov    ecx,0x52f34eef
  416185:	retf   
  416186:	aas    
  416187:	cmc    
  416188:	retf   
  416189:	xor    ch,BYTE PTR [ebx-0x6cf14361]
  41618f:	mov    BYTE PTR [eax+0x46b6267],bh
  416195:	jle    0x416169
  416197:	daa    
  416198:	inc    ecx
  416199:	(bad)  
  41619a:	adc    al,0x14
  41619c:	push   0x4d02418a
  4161a1:	stos   DWORD PTR es:[edi],eax
  4161a2:	shl    DWORD PTR [edx+edx*1],1
  4161a5:	daa    
  4161a6:	mov    ebx,0x9f3b5444
  4161ab:	pushf  
  4161ac:	push   0x4b
  4161ae:	(bad)  
  4161af:	and    BYTE PTR [ecx+0x3c98e198],ah
  4161b5:	jne    0x4161a9
  4161b7:	rol    DWORD PTR [ecx+0x28],1
  4161ba:	xchg   esi,eax
  4161bb:	imul   BYTE PTR [edi-0x4]
  4161be:	mov    esi,0x14ec5d5f
  4161c3:	rcl    BYTE PTR ds:0x213c0308,0xd7
  4161ca:	jo     0x4161f0
  4161cc:	inc    ecx
  4161cd:	ficomp DWORD PTR [edi+eiz*4+0x7833a88]
  4161d4:	(bad)  
  4161d6:	mov    al,0x2d
  4161d8:	dec    esi
  4161d9:	push   cs
  4161da:	mov    eax,edx
  4161dc:	(bad)  
  4161de:	sbb    ebp,ebp
  4161e0:	jae    0x416187
  4161e2:	dec    eax
  4161e3:	cmp    al,0x50
  4161e5:	or     bh,ah
  4161e7:	scas   eax,DWORD PTR es:[edi]
  4161e8:	imul   esp,ebp,0x9124f0eb
  4161ee:	sbb    dl,cl
  4161f0:	push   cs
  4161f1:	aam    0x1d
  4161f3:	pushf  
  4161f4:	pop    ebp
  4161f5:	fld    TBYTE PTR [ecx-0x2]
  4161f8:	(bad)
  4161fb:	icebp  
  4161fc:	bound  edx,QWORD PTR [eax+0x4e8923d0]
  416202:	retf   0xdd3e
  416205:	pop    ebp
  416206:	push   esi
  416207:	jb     0x416244
  416209:	or     eax,DWORD PTR [esi-0x7e]
  41620c:	js     0x41628b
  41620e:	cld    
  41620f:	pop    ecx
  416210:	mov    edi,0x22293580
  416215:	mov    eax,0xca651985
  41621a:	push   esi
  41621b:	inc    edi
  41621c:	stos   DWORD PTR es:[edi],eax
  41621d:	lahf   
  41621e:	test   al,0x5
  416220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416221:	out    dx,al
  416222:	mov    esp,0x71cc7d0c
  416227:	or     DWORD PTR [edi],esp
  416229:	sahf   
  41622a:	push   esi
  41622b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622c:	call   0x9dd:0xf8e2aa9f
  416233:	fistp  DWORD PTR [ecx+0x2c]
  416236:	out    dx,al
  416237:	push   es
  416238:	mov    eax,ds:0x7ddfe8ee
  41623d:	std    
  41623e:	pop    es
  41623f:	outs   dx,DWORD PTR ds:[esi]
  416240:	sti    
  416241:	stos   DWORD PTR es:[edi],eax
  416242:	jle    0x416205
  416244:	sahf   
  416245:	out    dx,al
  416246:	stc    
  416247:	enter  0xce59,0x14
  41624b:	mov    ecx,0xe6ce357e
  416250:	cmp    bh,al
  416252:	je     0x4161d5
  416254:	ror    DWORD PTR [edx+0x28],1
  416257:	push   es
  416258:	sub    al,0x2e
  41625a:	add    BYTE PTR [ebp-0x2757c7ae],0x78
  416261:	stc    
  416262:	push   0xfffffff2
  416264:	push   ss
  416265:	cmp    bh,BYTE PTR [ecx]
  416267:	loopne 0x4162c5
  416269:	pushf  
  41626a:	adc    al,0x2
  41626c:	cmc    
  41626d:	retf   0x6b89
  416270:	dec    edi
  416271:	aam    0xb8
  416273:	mov    ds:0x52870b6f,al
  416278:	ins    DWORD PTR es:[edi],dx
  416279:	mov    eax,ds:0xa768f843
  41627e:	push   ds
  41627f:	add    BYTE PTR [edi-0x7a],dl
  416282:	jecxz  0x4162c3
  416284:	je     0x4162b9
  416286:	retf   0x6c77
  416289:	push   ebx
  41628a:	sbb    BYTE PTR [esi],0x67
  41628d:	loope  0x41623a
  41628f:	push   ds
  416290:	xor    eax,0x532f0a26
  416295:	xlat   BYTE PTR ds:[ebx]
  416296:	mov    ebx,ss
  416298:	mov    bh,0xd4
  41629a:	xchg   al,bh
  41629c:	push   ss
  41629d:	dec    eax
  41629e:	das    
  41629f:	push   ebp
  4162a0:	retf   0xae1b
  4162a3:	jl     0x4162d0
  4162a5:	inc    esi
  4162a6:	mov    dl,BYTE PTR [eax-0x61]
  4162a9:	shl    BYTE PTR [edi+0x23],cl
  4162ac:	out    0xe9,eax
  4162ae:	sbb    eax,0x5f239121
  4162b3:	call   0x3b936c15
  4162b8:	mov    dh,0x47
  4162ba:	adc    DWORD PTR [edi-0x41],0x277d077
  4162c1:	xor    cl,BYTE PTR [edi-0x8da6219]
  4162c7:	sti    
  4162c8:	push   ds
  4162c9:	popa   
  4162ca:	sbb    dh,BYTE PTR [esi]
  4162cc:	fisttp WORD PTR [esi+0x6d]
  4162cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d0:	jl     0x416271
  4162d2:	mov    dh,0x1a
  4162d4:	pop    eax
  4162d5:	pushf  
  4162d6:	out    0xe6,al
  4162d8:	jl     0x41627f
  4162da:	pop    ds
  4162db:	xor    DWORD PTR [ebx],edx
  4162dd:	xchg   esi,eax
  4162de:	push   ss
  4162df:	sahf   
  4162e0:	dec    edx
  4162e1:	repnz or eax,0x9502a675
  4162e7:	and    al,0x46
  4162e9:	mov    esp,0xb4750d17
  4162ee:	xchg   edx,eax
  4162ef:	push   ss
  4162f0:	outs   dx,DWORD PTR ds:[esi]
  4162f1:	pop    esi
  4162f2:	dec    ebp
  4162f3:	hlt    
  4162f4:	rcl    BYTE PTR [ebx+eax*4],1
  4162f7:	pop    ebx
  4162f8:	mov    al,0x97
  4162fa:	xchg   ecx,eax
  4162fb:	popf   
  4162fc:	(bad)  
  4162fd:	pop    es
  4162fe:	push   ecx
  4162ff:	and    al,bh
  416301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416302:	ins    DWORD PTR es:[edi],dx
  416303:	xor    ch,bh
  416305:	ss cli 
  416307:	fidiv  WORD PTR [ebx]
  416309:	and    dl,bl
  41630b:	mov    ebp,0xcabe571c
  416310:	jae    0x416384
  416312:	mov    dh,0x86
  416314:	mov    edx,0x1378e403
  416319:	mov    dl,0x5e
  41631b:	test   eax,0x5238cd49
  416320:	sub    ah,bl
  416322:	mov    bl,0x5d
  416324:	inc    edx
  416325:	das    
  416326:	cs mov esp,0x19d6b478
  41632c:	aad    0xb9
  41632e:	sub    eax,0x76fffa18
  416333:	in     al,0x6
  416335:	outs   dx,DWORD PTR ds:[esi]
  416336:	pop    esi
  416337:	adc    eax,0x387fd54a
  41633c:	push   edi
  41633d:	out    0x4f,al
  41633f:	bound  esp,QWORD PTR [ebx-0x531bd5b3]
  416345:	or     ah,0x3b
  416348:	inc    esp
  416349:	or     al,0xbd
  41634b:	cwde   
  41634c:	mov    edx,0xb3f59aeb
  416351:	(bad)  
  416352:	cmp    ah,BYTE PTR [edi]
  416354:	mov    al,0x28
  416356:	loop   0x416313
  416358:	xor    eax,0x2b820499
  41635d:	repz xchg esp,eax
  41635f:	mov    dh,0xfb
  416361:	test   DWORD PTR [edi],edi
  416363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416364:	push   esp
  416365:	pop    ecx
  416366:	lds    edi,FWORD PTR [eax-0x41]
  416369:	mov    dl,0x7f
  41636b:	pop    edi
  41636c:	jae    0x4163a0
  41636e:	fdivp  st(3),st
  416370:	push   ebx
  416371:	mov    ebx,0x9a055be1
  416376:	loope  0x416366
  416378:	and    DWORD PTR [ecx+0x2d724184],0xcf9515f4
  416382:	mov    al,ds:0xddcdd1a
  416387:	inc    ebx
  416388:	inc    edx
  416389:	popa   
  41638a:	adc    al,0x41
  41638c:	or     al,0xa1
  41638e:	fdiv   DWORD PTR ds:0xcecda141
  416394:	les    ebx,FWORD PTR ds:0xd23a5a44
  41639a:	mov    ebp,0xde57dc0c
  41639f:	push   esp
  4163a0:	cmp    al,0x9a
  4163a2:	mov    al,ds:0x4cafb8c0
  4163a7:	push   0x36
  4163a9:	cmp    eax,DWORD PTR [esi]
  4163ab:	dec    esp
  4163ac:	call   0x661:0xf5ed2ec9
  4163b3:	inc    ebp
  4163b4:	xor    dh,cl
  4163b6:	js     0x4163d7
  4163b8:	mov    eax,0x967110df
  4163bd:	mov    WORD PTR [eax],?
  4163bf:	jmp    0x21fd:0x13ceb92e
  4163c6:	pushf  
  4163c7:	lahf   
  4163c8:	xchg   ecx,eax
  4163c9:	inc    ebp
  4163ca:	adc    al,0x19
  4163cc:	pushf  
  4163cd:	add    BYTE PTR [eax-0x452d7f3d],ch
  4163d3:	mov    dh,0x2d
  4163d5:	adc    DWORD PTR [esi-0x2f008f31],ebp
  4163db:	adc    dl,BYTE PTR [edi-0x72d17be1]
  4163e1:	lods   eax,DWORD PTR ds:[esi]
  4163e2:	xchg   edx,eax
  4163e3:	(bad)  
  4163e4:	hlt    
  4163e5:	iret   
  4163e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e7:	and    al,0xe6
  4163e9:	sub    eax,0x412199d2
  4163ee:	add    bh,BYTE PTR [ebp-0x5f09738c]
  4163f4:	cmp    al,dl
  4163f6:	(bad)  
  4163f7:	xchg   esp,eax
  4163f8:	mov    ah,0xe5
  4163fa:	adc    eax,0x5ee5180b
  4163ff:	mov    BYTE PTR [ebx+0x525b171e],dh
  416405:	loop   0x41641f
  416407:	out    dx,al
  416408:	push   edx
  416409:	(bad)  
  41640b:	or     ah,dh
  41640d:	inc    edi
  41640e:	pop    edx
  41640f:	js     0x4163c9
  416411:	mov    ds,ebp
  416413:	out    dx,al
  416414:	and    ecx,ebx
  416416:	pop    esp
  416417:	xor    al,0x5e
  416419:	cmp    dl,cl
  41641b:	test   DWORD PTR [edi-0x4adb58e4],0x3cc0cf89
  416425:	je     0x416457
  416427:	es or  cl,dh
  41642a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642b:	lods   eax,DWORD PTR ds:[esi]
  41642c:	pop    ebp
  41642d:	idiv   ah
  41642f:	jbe    0x4163b6
  416431:	nop
  416432:	jno    0x41644e
  416434:	inc    ebx
  416435:	and    eax,0x4e3bff32
  41643a:	lods   al,BYTE PTR ds:[esi]
  41643b:	dec    ecx
  41643c:	scas   al,BYTE PTR es:[edi]
  41643d:	xlat   BYTE PTR ds:[ebx]
  41643e:	stc    
  41643f:	push   cs
  416440:	call   0x2f87:0xf67cf3f2
  416447:	and    eax,0x5656ab4e
  41644c:	popf   
  41644d:	xor    eax,0x305a1f29
  416452:	mov    ebp,0xe6757e08
  416457:	mov    eax,0x47f8ac03
  41645c:	imul   eax,DWORD PTR [ecx-0x7f96a277],0xffffffbd
  416463:	add    dh,ah
  416465:	cmc    
  416466:	sahf   
  416467:	cmp    DWORD PTR [ebp+0x14],ebp
  41646a:	inc    edx
  41646b:	int3   
  41646c:	pop    ebp
  41646d:	and    ah,BYTE PTR [ecx+0x24cfa54f]
  416473:	aaa    
  416474:	sbb    eax,0x9def46e7
  416479:	lahf   
  41647a:	frstor [eax]
  41647c:	push   esp
  41647d:	adc    dl,BYTE PTR [ebx+0x5ffb06bc]
  416483:	xchg   edi,eax
  416484:	dec    ecx
  416485:	push   es
  416486:	xchg   edx,eax
  416487:	ins    BYTE PTR es:[edi],dx
  416488:	jo     0x4164bc
  41648a:	bound  ebp,QWORD PTR [edi+eiz*1+0x7d093287]
  416491:	retf   
  416492:	adc    cl,BYTE PTR [edx+0x58]
  416495:	sbb    ebx,DWORD PTR [edx-0x11]
  416498:	gs popf 
  41649a:	mov    dl,0x98
  41649c:	jae    0x4164d8
  41649e:	dec    esp
  41649f:	(bad)  [ebx+0x6243531e]
  4164a5:	ret    
  4164a6:	mov    ds,WORD PTR [edi]
  4164a8:	or     al,0x4a
  4164aa:	pusha  
  4164ab:	mov    ss,WORD PTR [edx]
  4164ad:	dec    edi
  4164ae:	(bad)  
  4164af:	sbb    al,0xbd
  4164b1:	push   edi
  4164b2:	daa    
  4164b3:	pop    ecx
  4164b4:	test   al,0x7a
  4164b6:	mov    edx,DWORD PTR [ecx]
  4164b8:	cdq    
  4164b9:	pop    eax
  4164ba:	xor    edx,ecx
  4164bc:	inc    ebx
  4164bd:	xchg   ecx,edi
  4164bf:	dec    DWORD PTR [si]
  4164c2:	pop    ss
  4164c3:	xor    al,0x29
  4164c5:	sbb    DWORD PTR [edx-0x35bb20f6],esi
  4164cb:	push   ebx
  4164cc:	xor    eax,0x44722f8f
  4164d1:	ss mov ch,0xf9
  4164d4:	std    
  4164d5:	sbb    dl,dl
  4164d7:	arpl   WORD PTR [eax-0x5f2cf6a6],bx
  4164dd:	sbb    ah,ah
  4164df:	or     BYTE PTR [ecx+0x16],bh
  4164e2:	ret    
  4164e3:	xor    esp,DWORD PTR [ecx-0x3f4a1261]
  4164e9:	mov    DWORD PTR [ebp-0x30],edi
  4164ec:	test   ecx,ecx
  4164ee:	lods   al,BYTE PTR ds:[esi]
  4164ef:	sub    BYTE PTR [edi],al
  4164f1:	into   
  4164f2:	pusha  
  4164f3:	add    DWORD PTR [eax],ebx
  4164f5:	je     0x4164b6
  4164f7:	pop    ebx
  4164f8:	fwait
  4164f9:	xchg   edi,eax
  4164fa:	xchg   ebx,eax
  4164fb:	add    BYTE PTR [edx],al
  4164fd:	inc    ebx
  4164fe:	shl    BYTE PTR [edi],1
  416500:	push   ebx
  416501:	rcl    ah,1
  416503:	sub    ch,dh
  416505:	push   edi
  416506:	les    esi,FWORD PTR [ebx-0x41]
  416509:	rol    BYTE PTR [esi-0x61d69675],1
  41650f:	or     eax,0x24dfd0b1
  416514:	(bad)  
  416515:	sub    DWORD PTR [eax-0x552f3c8d],edx
  41651b:	mov    ebp,DWORD PTR [ecx+0x29]
  41651e:	mov    cl,BYTE PTR ds:0x34dfd0d5
  416524:	leave  
  416525:	sub    DWORD PTR [edx-0x412f184e],eax
  41652b:	dec    eax
  41652c:	sub    eax,0x7aacee36
  416531:	call   0x37e1:0x8ae2ff1d
  416538:	stos   DWORD PTR es:[edi],eax
  416539:	sub    edi,0x988eca01
  41653f:	mov    eax,0xd5d5da87
  416544:	(bad)  
  416545:	cld    
  416546:	(bad)  
  416547:	cs inc ecx
  416549:	or     bl,BYTE PTR [edx-0x4b]
  41654c:	mov    BYTE PTR [ecx+0x144a3772],bl
  416552:	mov    DWORD PTR [ebp-0x3],edx
  416555:	inc    esp
  416556:	push   ss
  416557:	loopne 0x4164ee
  416559:	pop    esi
  41655a:	loope  0x4164fa
  41655c:	test   al,0x27
  41655e:	clc    
  41655f:	pop    ecx
  416560:	cmp    ebx,eax
  416562:	(bad)  
  416563:	jge    0x416576
  416565:	and    dl,BYTE PTR [eax+0x67]
  416568:	adc    BYTE PTR [edx-0x4c],al
  41656b:	loopne 0x416568
  41656d:	sar    DWORD PTR [ecx],cl
  41656f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416570:	mov    ds:0x417daf67,eax
  416575:	add    al,0x4d
  416577:	(bad)  
  416578:	fsubp  st(4),st
  41657a:	push   es
  41657b:	mov    ebp,0xe53b36d4
  416580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416581:	mov    ah,0x88
  416583:	jne    0x416554
  416585:	lock das 
  416587:	inc    si
  416589:	ss inc esi
  41658b:	loop   0x416530
  41658d:	out    0x12,al
  41658f:	or     DWORD PTR [edi+edi*8],eax
  416592:	fbstp  TBYTE PTR [esi]
  416594:	ss add ebp,0x3bcc9ae5
  41659b:	cmp    bl,ah
  41659d:	loop   0x4165ac
  41659f:	push   es
  4165a0:	xor    al,0xe1
  4165a2:	jne    0x416576
  4165a4:	lahf   
  4165a5:	jmp    0x41660e
  4165a7:	sub    eax,0xd35ce56a
  4165ac:	mov    ch,0x7e
  4165ae:	xor    eax,ebx
  4165b0:	rol    al,0xc0
  4165b3:	rol    al,0xc0
  4165b6:	rol    al,0xc0
  4165b9:	rol    al,0xc0
  4165bc:	rol    al,0xc0
  4165bf:	rol    al,0xc0
  4165c2:	rol    al,0xc0
  4165c5:	rol    al,0xc0
  4165c8:	rol    al,0xc0
  4165cb:	rol    al,0xc0
  4165ce:	rol    al,0xc0
  4165d1:	rol    al,0xc0
  4165d4:	rol    al,0xc0
  4165d7:	rol    al,0xc0
  4165da:	rol    al,0xc0
  4165dd:	rol    al,0xc0
  4165e0:	rol    al,0xc0
  4165e3:	rol    al,0xc0
  4165e6:	rol    al,0xc0
  4165e9:	rol    al,0xc0
  4165ec:	rol    al,0xc0
  4165ef:	rol    al,0xc0
  4165f2:	rol    al,0xc0
  4165f5:	rol    al,0xc0
  4165f8:	mov    ?,WORD PTR [edi]
  4165fa:	outs   dx,DWORD PTR ds:[esi]
  4165fb:	stos   BYTE PTR es:[edi],al
  4165fc:	inc    eax
  4165fd:	sbb    dl,bh
  4165ff:	sub    ebp,eax
  416601:	pop    eax
  416602:	xchg   DWORD PTR [eax],edx
  416604:	and    ecx,DWORD PTR ds:0x35703bb0
  41660a:	xchg   ebp,eax
  41660b:	dec    ecx
  41660c:	push   ecx
  41660d:	or     al,0x33
  41660f:	xchg   ebx,eax
  416610:	push   ebx
  416611:	fdiv   DWORD PTR [ecx]
  416613:	lea    ebx,[ebp+eiz*4-0x6]
  416617:	fstp   TBYTE PTR [ebp+0x1b]
  41661a:	push   esi
  41661b:	aas    
  41661c:	adc    eax,0xa94d5eb
  416621:	neg    dh
  416623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416624:	dec    edi
  416625:	push   cs
  416626:	enter  0x47cd,0x22
  41662a:	mov    BYTE PTR [eax],bh
  41662c:	adc    ah,dl
  41662e:	adc    DWORD PTR ds:0xd8a8ca3c,0xd9b30267
  416638:	jle    0x4165d9
  41663a:	mov    ds:0xbf327ecd,al
  41663f:	mov    BYTE PTR [ebx+0x4f9858da],dh
  416645:	or     al,cl
  416647:	ds popf 
  416649:	in     eax,dx
  41664a:	push   0x989faaba
  41664f:	or     al,0x1f
  416651:	mov    eax,0xb7452af9
  416656:	mov    bl,0x94
  416658:	or     al,0x18
  41665a:	ror    dl,0x43
  41665d:	loop   0x4166c2
  41665f:	ror    BYTE PTR [esp+edi*2],1
  416662:	dec    ecx
  416663:	or     DWORD PTR [esi-0x4b97ce0c],0x4b
  41666a:	pop    esp
  41666b:	push   ss
  41666c:	jbe    0x4166e4
  41666e:	mov    ah,ah
  416670:	pop    esp
  416671:	pop    ebp
  416672:	sti    
  416673:	lock ret 0x1e12
  416677:	popf   
  416678:	js     0x416646
  41667a:	enter  0xc0aa,0x62
  41667e:	cs push esi
  416680:	mov    edx,esi
  416682:	call   0x89477b5f
  416687:	shl    dl,1
  416689:	int3   
  41668a:	push   0x31
  41668c:	into   
  41668d:	adc    cl,dh
  41668f:	dec    ebp
  416690:	mov    edi,0x33a382d4
  416695:	neg    BYTE PTR [ecx+0x26]
  416698:	dec    edx
  416699:	(bad)  
  41669b:	mov    BYTE PTR [edi],bh
  41669d:	and    al,0x45
  41669f:	ins    BYTE PTR es:[edi],dx
  4166a0:	cmc    
  4166a1:	mov    ebp,?
  4166a3:	retf   0xf3a6
  4166a6:	xor    eax,ebp
  4166a8:	mov    ch,0xc8
  4166aa:	push   esi
  4166ab:	pop    ecx
  4166ac:	pop    edi
  4166ad:	push   ss
  4166ae:	jp     0x416635
  4166b0:	xor    al,0x1d
  4166b2:	add    al,0xa0
  4166b4:	or     esi,esi
  4166b6:	add    DWORD PTR [edx+0x7d],eax
  4166b9:	into   
  4166ba:	sbb    dh,dh
  4166bc:	push   ds
  4166bd:	inc    edx
  4166be:	xchg   esp,eax
  4166bf:	inc    edi
  4166c0:	push   ebp
  4166c1:	xor    eax,0xe4383d3
  4166c6:	jg     0x4166b3
  4166c8:	mov    al,ds:0xbf5a6e94
  4166cd:	push   eax
  4166ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166cf:	jle    0x41671e
  4166d1:	shl    BYTE PTR [edx+0x4],0x42
  4166d5:	hlt    
  4166d6:	nop
  4166d7:	mov    ds:0x24cbea0e,eax
  4166dc:	cmp    bl,0x8c
  4166df:	addr16 jge 0x4166ff
  4166e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e3:	sar    DWORD PTR [edi+edi*2-0x41],1
  4166e7:	inc    ecx
  4166e8:	hlt    
  4166e9:	xchg   ecx,eax
  4166ea:	push   ss
  4166eb:	push   0xe86548d1
  4166f0:	pusha  
  4166f1:	retf   0x4cf4
  4166f4:	rcl    DWORD PTR ds:0x1326297b,1
  4166fa:	xchg   DWORD PTR ds:0x88baeb78,eax
  416700:	jl     0x416730
  416702:	ficomp DWORD PTR [esi-0x3812d056]
  416708:	xor    bl,BYTE PTR [edi+0x691ddc52]
  41670e:	div    DWORD PTR [edi+0xe]
  416711:	xchg   edx,eax
  416712:	(bad)  
  416713:	pop    esp
  416714:	sbb    BYTE PTR [edx+0x18726692],bl
  41671a:	pop    ebp
  41671b:	fadd   QWORD PTR [esi-0x1e]
  41671e:	push   es
  41671f:	lock jp 0x4166ba
  416722:	xor    al,0x6f
  416724:	pop    ecx
  416725:	ins    BYTE PTR es:[edi],dx
  416726:	pop    edx
  416727:	in     al,dx
  416728:	or     al,0xca
  41672a:	sbb    esi,ecx
  41672c:	add    bl,BYTE PTR [ecx+ebp*8-0x4d]
  416730:	xor    al,0xd5
  416732:	jecxz  0x416791
  416734:	dec    edi
  416735:	push   cs
  416736:	lea    ebp,[ebx]
  416738:	imul   edx,DWORD PTR [edx+ecx*2-0xc],0x9dae5396
  416740:	inc    ebx
  416741:	mov    al,0x62
  416743:	popa   
  416744:	mov    DWORD PTR [ecx-0x1b9651da],ebp
  41674a:	xchg   esp,eax
  41674b:	add    al,0xf0
  41674d:	cmp    dh,BYTE PTR [edi-0x4f834750]
  416753:	push   ebx
  416754:	mov    bh,0xb2
  416756:	ss mov cl,0x5
  416759:	mov    fs,WORD PTR [eax-0x14c93be4]
  41675f:	outs   dx,BYTE PTR ds:[esi]
  416760:	add    BYTE PTR [edi+0x4219ad17],bh
  416766:	ins    BYTE PTR es:[edi],dx
  416767:	dec    edi
  416768:	shl    DWORD PTR [esi+0x30],1
  41676b:	loopne 0x41670a
  41676d:	mov    bh,0x64
  41676f:	jne    0x416744
  416771:	adc    eax,0x2dca0e0
  416776:	jb     0x41675a
  416778:	popa   
  416779:	outs   dx,BYTE PTR ds:[esi]
  41677a:	push   esi
  41677b:	adc    bh,ah
  41677d:	icebp  
  41677e:	adc    BYTE PTR [eax-0x51],bh
  416781:	xchg   ecx,eax
  416782:	sbb    al,0x81
  416784:	pop    ecx
  416785:	loop   0x4167b1
  416787:	sar    BYTE PTR [ecx],1
  416789:	inc    ebp
  41678a:	cwde   
  41678b:	mov    al,0xc1
  41678d:	arpl   WORD PTR [ebx],si
  41678f:	int3   
  416790:	into   
  416791:	and    BYTE PTR [esi+0x2f810809],0xa
  416798:	and    BYTE PTR [eax],ch
  41679a:	call   0xbbe76eff
  41679f:	mov    ebp,0xca917909
  4167a4:	pushf  
  4167a5:	ret    0x63b4
  4167a8:	sbb    edi,ebp
  4167aa:	inc    esi
  4167ab:	cli    
  4167ac:	xchg   BYTE PTR [ebx],bh
  4167ae:	out    0x32,al
  4167b0:	shr    BYTE PTR [ebp+0x51ed063],0xf7
  4167b7:	mov    eax,ds:0x463d2225
  4167bc:	les    edx,FWORD PTR [edx]
  4167be:	loopne 0x41682d
  4167c0:	fst    QWORD PTR [esi+0x15]
  4167c3:	dec    esp
  4167c4:	(bad)  
  4167c5:	popa   
  4167c6:	push   ecx
  4167c7:	lods   eax,DWORD PTR ds:[esi]
  4167c8:	(bad)  [ecx+0x4473c148]
  4167ce:	popa   
  4167cf:	test   BYTE PTR [edi+0x57],0x80
  4167d3:	ror    DWORD PTR [ecx+0x71],0xa9
  4167d7:	xlat   BYTE PTR ds:[ebx]
  4167d8:	fwait
  4167d9:	xor    DWORD PTR [eax+eiz*2],0xffffffd6
  4167dd:	and    edx,edx
  4167df:	(bad)  
  4167e0:	int    0xd7
  4167e2:	or     esp,0x21c33a12
  4167e8:	cmp    ebp,DWORD PTR [edx]
  4167ea:	xlat   BYTE PTR ds:[ebx]
  4167eb:	jecxz  0x41683e
  4167ed:	div    DWORD PTR [eax+0x74]
  4167f0:	dec    ebp
  4167f1:	jg     0x41682f
  4167f3:	xor    DWORD PTR [ebx-0x58],ecx
  4167f6:	xor    dh,cl
  4167f8:	test   BYTE PTR ds:0xb087e021,cl
  4167fe:	inc    eax
  4167ff:	adc    DWORD PTR [esi],ecx
  416801:	jne    0x416816
  416803:	push   0xfffffffe
  416805:	jp     0x4167b6
  416807:	inc    ebp
  416808:	or     al,0x1d
  41680a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41680b:	pop    edx
  41680c:	pop    esp
  41680d:	scas   eax,DWORD PTR es:[edi]
  41680e:	jmp    0x6e21:0xd88d5b2
  416815:	call   0xf23f:0xc552d7a0
  41681c:	jg     0x4167ae
  41681e:	and    eax,0x456ceae
  416823:	cmp    ebx,edx
  416825:	loope  0x4167ae
  416827:	shl    DWORD PTR [edi],cl
  416829:	out    0xe1,al
  41682b:	not    DWORD PTR [ebx-0x75dd83df]
  416831:	xor    ebp,edi
  416833:	pop    ebp
  416834:	hlt    
  416835:	mul    DWORD PTR [edi]
  416837:	or     al,0x72
  416839:	(bad)  
  41683a:	jmp    0x61ecb857
  41683f:	out    dx,al
  416840:	ins    BYTE PTR es:[edi],dx
  416841:	mov    cl,0x8f
  416843:	pop    es
  416844:	outs   dx,BYTE PTR cs:[esi]
  416846:	pop    ecx
  416847:	jp     0x41685d
  416849:	pop    esp
  41684a:	outs   dx,BYTE PTR ds:[esi]
  41684b:	shr    BYTE PTR [ecx],0x80
  41684e:	adc    al,0x3f
  416850:	and    DWORD PTR [eax+0x6a],0x729bfa99
  416857:	test   al,0xc1
  416859:	push   cs
  41685a:	adc    eax,esi
  41685c:	mov    esi,0x2c867fda
  416861:	sar    edx,1
  416863:	adc    DWORD PTR [edi],eax
  416865:	cwde   
  416866:	pop    ss
  416867:	cmp    BYTE PTR ds:0x59d7fee9,al
  41686d:	mov    es,esi
  41686f:	xchg   esi,eax
  416870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416871:	inc    eax
  416872:	data16 je 0x416871
  416875:	jns    0x41682a
  416877:	test   DWORD PTR [si+0x7303],esi
  41687c:	in     al,0x1b
  41687e:	fsubr  DWORD PTR [ecx+ebx*8-0x29]
  416882:	test   eax,0x6c2b325b
  416887:	sahf   
  416888:	popf   
  416889:	jnp    0x416874
  41688b:	jg     0x416903
  41688d:	mov    ch,0xb2
  41688f:	iret   
  416890:	push   ss
  416891:	pop    ss
  416892:	add    BYTE PTR [ecx+0x2ac7fdd],dh
  416898:	push   edi
  416899:	push   ebx
  41689a:	xlat   BYTE PTR ds:[ebx]
  41689b:	loop   0x41683f
  41689d:	xchg   edx,eax
  41689e:	iret   
  41689f:	cmp    BYTE PTR [ebp-0x427db091],0x27
  4168a6:	xchg   ebp,eax
  4168a7:	imul   edi,DWORD PTR [ecx+0x56],0x2368e094
  4168ae:	(bad)  
  4168af:	cmp    eax,0x78d83a23
  4168b4:	pop    es
  4168b5:	adc    dl,BYTE PTR [ebp-0x17290612]
  4168bb:	mov    gs,ecx
  4168bd:	mov    eax,ds:0xcd1d4182
  4168c2:	inc    esi
  4168c3:	xor    ebx,DWORD PTR [ecx+0x799333b4]
  4168c9:	dec    ebp
  4168ca:	ja     0x4168a6
  4168cc:	inc    edi
  4168cd:	div    BYTE PTR [esi+0x187f8907]
  4168d3:	push   ebx
  4168d4:	push   edi
  4168d5:	mov    ah,0xb9
  4168d7:	or     eax,0x941a7b9d
  4168dc:	scas   eax,DWORD PTR es:[edi]
  4168dd:	pop    eax
  4168de:	inc    ecx
  4168df:	stos   BYTE PTR es:[edi],al
  4168e0:	lods   al,BYTE PTR ds:[esi]
  4168e1:	out    dx,al
  4168e2:	repnz mov ch,0xd4
  4168e5:	pop    esi
  4168e6:	scas   al,BYTE PTR es:[di]
  4168e8:	cli    
  4168e9:	push   cs
  4168ea:	sbb    ecx,DWORD PTR ds:0x9db12f83
  4168f0:	mov    ecx,0x8556c9e5
  4168f5:	xchg   al,bl
  4168f7:	inc    edi
  4168f8:	and    DWORD PTR [ebx-0x6a],esp
  4168fb:	in     al,0x9f
  4168fd:	and    al,BYTE PTR [esi-0x26]
  416900:	loopne 0x4168bc
  416902:	jp     0x416891
  416904:	push   eax
  416905:	jmp    0xc33b:0xa53533d2
  41690c:	jb     0x4168b2
  41690e:	stc    
  41690f:	fsub   st(4),st
  416911:	or     ah,BYTE PTR [edx+0x2a]
  416914:	xchg   ecx,eax
  416915:	out    dx,eax
  416916:	scas   al,BYTE PTR es:[edi]
  416917:	inc    ecx
  416918:	dec    eax
  416919:	arpl   WORD PTR [edx-0x1887dde1],dx
  41691f:	sar    BYTE PTR [eax],0xb3
  416922:	leave  
  416923:	mov    ds:0xcc9c0251,eax
  416928:	mov    DWORD PTR [edx],0x2b4e9d96
  41692e:	xor    dh,BYTE PTR [edx]
  416930:	repz aad 0x88
  416933:	or     cl,BYTE PTR [esi+0xd]
  416936:	pop    es
  416937:	lock jmp 0xd321:0xf46d717
  41693f:	cmp    bl,0x8
  416942:	les    ebp,FWORD PTR [edx+0x70a04e0a]
  416948:	std    
  416949:	call   0x7efe:0x7d0985b8
  416950:	call   0x6c7dc9b7
  416955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416956:	daa    
  416957:	addr16 aam 0x65
  41695a:	dec    esp
  41695b:	adc    eax,0xe584473f
  416960:	xor    eax,0x433e0597
  416965:	push   ds
  416966:	pusha  
  416967:	fwait
  416968:	mov    ebx,0xbd190852
  41696d:	pop    ds
  41696e:	mov    ds:0xd063494f,al
  416973:	dec    esp
  416974:	cmp    al,0xef
  416976:	jp     0x4169e4
  416978:	test   eax,0xe3b2197b
  41697d:	mov    ch,dl
  41697f:	repnz mov gs,WORD PTR [edi]
  416982:	(bad)  
  416983:	bound  edx,QWORD PTR [esi+0x319e78fc]
  416989:	adc    bl,bl
  41698b:	xor    DWORD PTR ds:0x60459cd,0x545699e0
  416995:	add    DWORD PTR [ebp-0x34],ecx
  416998:	dec    edx
  416999:	dec    ebp
  41699a:	mov    esp,0x2242172a
  41699f:	mov    ebx,0x2dd7c3f5
  4169a4:	addr16 cs dec edx
  4169a7:	test   al,0x35
  4169a9:	xchg   edx,eax
  4169aa:	scas   eax,DWORD PTR es:[edi]
  4169ab:	out    dx,eax
  4169ac:	pushf  
  4169ad:	pop    es
  4169ae:	sub    ecx,ebp
  4169b0:	pop    eax
  4169b1:	mov    WORD PTR [ebx],cs
  4169b3:	and    BYTE PTR [ebx],cl
  4169b5:	push   edi
  4169b6:	sub    dh,ch
  4169b8:	push   ss
  4169b9:	into   
  4169ba:	test   DWORD PTR [ecx+0x7b5ef5af],eax
  4169c0:	loopne 0x416a17
  4169c2:	pop    edi
  4169c3:	loope  0x4169df
  4169c5:	cmc    
  4169c6:	xchg   ebp,eax
  4169c7:	iret   
  4169c8:	rcl    BYTE PTR [edi],1
  4169ca:	pop    edx
  4169cb:	popf   
  4169cc:	fild   WORD PTR [edx-0x65f2a71]
  4169d2:	fiadd  DWORD PTR [esi]
  4169d4:	fld    QWORD PTR [edx+0x493c3e85]
  4169da:	push   ss
  4169db:	rcl    BYTE PTR [ecx+0x42454200],1
  4169e1:	push   ds
  4169e2:	jmp    0x416a45
  4169e4:	and    al,0xa7
  4169e6:	mov    BYTE PTR [ecx+0x51],dl
  4169e9:	fisubr DWORD PTR es:[ebp+0x34ff6e6f]
  4169f0:	in     eax,dx
  4169f1:	pop    es
  4169f2:	loope  0x416a31
  4169f4:	xchg   esp,eax
  4169f5:	aas    
  4169f6:	outs   dx,BYTE PTR ds:[esi]
  4169f7:	add    al,0xf4
  4169f9:	push   eax
  4169fa:	jbe    0x416a32
  4169fc:	dec    eax
  4169fe:	xor    esi,DWORD PTR [ebx]
  416a00:	es inc edx
  416a02:	jecxz  0x416a2f
  416a04:	jle    0x4169c6
  416a06:	stos   BYTE PTR es:[edi],al
  416a07:	or     al,0x83
  416a09:	pop    ds
  416a0a:	or     al,0x2f
  416a0c:	mov    edi,0xa11ed5f
  416a11:	sbb    ah,BYTE PTR [ebp-0x3f]
  416a14:	jp     0x416a93
  416a16:	clc    
  416a17:	loope  0x416a44
  416a19:	push   0xffffffd0
  416a1b:	daa    
  416a1c:	test   cl,dl
  416a1e:	push   ds
  416a1f:	and    edx,DWORD PTR [esi+0xa]
  416a22:	(bad)
  416a26:	inc    edx
  416a27:	cs cdq 
  416a29:	fadd   st(7),st
  416a2b:	xchg   esp,eax
  416a2c:	sub    eax,0x91061a4c
  416a31:	push   esi
  416a32:	fbstp  TBYTE PTR [ebx-0x5d96b8f2]
  416a38:	popa   
  416a39:	cmp    cl,BYTE PTR [edi+0x5f8e86d4]
  416a3f:	popf   
  416a40:	push   ebx
  416a41:	cs xchg esp,esp
  416a44:	pusha  
  416a45:	je     0x416a3a
  416a47:	pop    esp
  416a48:	mov    ch,0xf4
  416a4a:	push   edi
  416a4b:	and    al,0x8e
  416a4d:	mov    cs,WORD PTR [eax+0x7e]
  416a50:	stc    
  416a51:	pop    ebp
  416a52:	and    ebp,DWORD PTR [ebx-0xfa70a6]
  416a58:	or     al,0xa3
  416a5a:	addr16 retf 0x5564
  416a5e:	in     al,0x14
  416a60:	xor    BYTE PTR [esi],dh
  416a62:	push   0xc19b74b6
  416a67:	cwde   
  416a68:	rep ins BYTE PTR es:[edi],dx
  416a6a:	push   esp
  416a6b:	int    0xf
  416a6d:	push   esp
  416a6e:	xchg   esi,eax
  416a6f:	or     ah,BYTE PTR [edx-0x5f]
  416a72:	aam    0x71
  416a74:	sub    eax,0x297a58af
  416a79:	dec    ecx
  416a7a:	ds sbb eax,0x70af8af7
  416a80:	and    al,BYTE PTR [eax-0x76]
  416a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a84:	test   BYTE PTR [ebx],al
  416a86:	test   ch,0x39
  416a89:	push   cs
  416a8a:	pop    es
  416a8b:	xor    cl,BYTE PTR [esi+0x60c9aad8]
  416a91:	inc    edi
  416a92:	push   edi
  416a93:	mov    ah,0x63
  416a95:	dec    edx
  416a96:	icebp  
  416a97:	sub    DWORD PTR [esi+0x5e844ce4],ebx
  416a9d:	push   edi
  416a9e:	shl    DWORD PTR [ebx],cl
  416aa0:	test   al,0x3f
  416aa2:	pop    ebp
  416aa3:	xor    esp,DWORD PTR [edi]
  416aa5:	or     eax,DWORD PTR [ebp+0x118623c4]
  416aab:	test   eax,0x6ba6b421
  416ab0:	xor    eax,0xb4839d1b
  416ab5:	xor    ch,bl
  416ab7:	and    DWORD PTR [ebx-0xf94b27d],ebp
  416abd:	pop    ss
  416abe:	sub    al,bl
  416ac0:	sahf   
  416ac1:	jmp    0x134cddcd
  416ac6:	test   BYTE PTR [esp+eax*2],dl
  416ac9:	inc    ecx
  416aca:	mov    al,ds:0x667e3e12
  416acf:	out    dx,eax
  416ad0:	pop    esp
  416ad1:	sub    eax,DWORD PTR [edx+ebx*4+0x2ca3a303]
  416ad8:	out    dx,eax
  416ad9:	mov    eax,ds:0x7b0bead4
  416ade:	sub    eax,0xce1742a7
  416ae3:	dec    ecx
  416ae4:	mov    esi,0x6fdbe341
  416ae9:	push   ecx
  416aea:	loopne 0x416a74
  416aec:	push   ebp
  416aed:	icebp  
  416aee:	aaa    
  416aef:	pusha  
  416af0:	jnp    0x416b2b
  416af2:	sbb    esp,DWORD PTR [ebx-0x42]
  416af5:	sbb    BYTE PTR [ebx],al
  416af7:	lahf   
  416af8:	mov    WORD PTR [eax-0x36],es
  416afb:	pop    ebx
  416afc:	jg     0x416ada
  416afe:	add    DWORD PTR [edx],eax
  416b00:	jle    0x416b22
  416b02:	shl    BYTE PTR [edi+0x4cbb39ec],cl
  416b08:	sub    eax,0xa9ca1e78
  416b0d:	push   cs
  416b0e:	int3   
  416b0f:	cmp    ecx,ecx
  416b11:	out    0xba,eax
  416b13:	jnp    0x416b61
  416b15:	push   ebx
  416b16:	and    eax,0x8266b42b
  416b1b:	sbb    esi,DWORD PTR gs:[ebx+0x2d0a1a6b]
  416b22:	xor    BYTE PTR [eax+0x7c],al
  416b25:	add    cl,bh
  416b27:	int3   
  416b28:	xchg   ebx,eax
  416b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b2a:	fisub  DWORD PTR [ebx]
  416b2c:	sbb    eax,0x3edf237
  416b31:	pop    edi
  416b32:	push   es
  416b33:	jge    0x416b76
  416b35:	pusha  
  416b36:	bnd ja 0x416afd
  416b39:	daa    
  416b3a:	(bad)  
  416b3c:	push   0x1a
  416b3e:	sub    BYTE PTR [edx-0x30316184],0x5c
  416b45:	repz cs jbe 0x416aef
  416b49:	ss dec edx
  416b4b:	sub    DWORD PTR [ecx],0x5d
  416b4e:	in     al,dx
  416b4f:	aad    0x46
  416b51:	sub    BYTE PTR [edx-0x2435bbe],bl
  416b57:	xor    al,0x51
  416b59:	fbld   TBYTE PTR [eax-0x7b]
  416b5c:	shl    BYTE PTR ds:0x8599aa4e,1
  416b62:	add    ecx,ebp
  416b64:	xlat   BYTE PTR ds:[ebx]
  416b65:	hlt    
  416b66:	or     al,0x1f
  416b68:	arpl   WORD PTR [esi+0x118918c6],si
  416b6e:	retf   
  416b6f:	xor    al,0x99
  416b71:	jmp    0x56e9a5e7
  416b76:	or     esi,DWORD PTR [edi]
  416b78:	push   esi
  416b79:	retf   0xe6ba
  416b7c:	inc    eax
  416b7d:	fimul  WORD PTR [ecx+0x48]
  416b80:	sub    esp,DWORD PTR [eax-0x5]
  416b83:	fidiv  DWORD PTR [ecx+0x1e]
  416b86:	mov    BYTE PTR [ecx-0x60f559e7],dl
  416b8c:	cwde   
  416b8d:	add    BYTE PTR [ebx-0x6ab64aca],bl
  416b93:	mov    bh,0x9e
  416b95:	mov    ebx,0x3f032ca2
  416b9a:	jne    0x416c08
  416b9c:	(bad)  
  416b9d:	pop    ss
  416b9e:	popf   
  416b9f:	push   ebp
  416ba0:	jne    0x416b4d
  416ba2:	xchg   edx,eax
  416ba3:	cmp    al,0xe6
  416ba5:	jp     0x416b94
  416ba7:	(bad)  
  416ba8:	jns    0x416b89
  416baa:	pusha  
  416bab:	nop
  416bac:	cmp    dh,BYTE PTR [ecx+0x218a2eaf]
  416bb2:	test   eax,0x91e794df
  416bb7:	sbb    dh,BYTE PTR [eax+eiz*4+0x5d]
  416bbb:	inc    edi
  416bbc:	ins    DWORD PTR es:[edi],dx
  416bbd:	add    eax,0xa461f523
  416bc2:	outs   dx,DWORD PTR ds:[esi]
  416bc3:	(bad)  
  416bc4:	imul   ecx,DWORD PTR [ebx+0x4e],0xbb35ae55
  416bcb:	es lahf 
  416bcd:	shr    DWORD PTR [edx],0x2c
  416bd0:	dec    ecx
  416bd1:	push   esi
  416bd2:	stos   BYTE PTR es:[edi],al
  416bd3:	inc    edi
  416bd4:	mov    BYTE PTR [ebx+0x633348a],0x61
  416bdb:	pop    esp
  416bdc:	xchg   ebp,eax
  416bdd:	pop    esi
  416bde:	mov    esi,0x684169be
  416be3:	imul   eax,eax,0x2a
  416be6:	dec    eax
  416be7:	pushf  
  416be8:	pop    es
  416be9:	enter  0x2376,0xee
  416bed:	mov    eax,0xf88f5d82
  416bf2:	push   ss
  416bf3:	and    BYTE PTR [eax],ah
  416bf5:	pop    esi
  416bf6:	call   0x45e0:0x6ec4450e
  416bfd:	cmp    ebx,DWORD PTR [ebp-0x65e6fad5]
  416c03:	ficom  WORD PTR [eax+0x11]
  416c06:	mov    esp,DWORD PTR [ecx+0x4a]
  416c09:	lahf   
  416c0a:	in     al,dx
  416c0b:	call   0x1f9ace06
  416c10:	xchg   DWORD PTR [ecx-0x3b],ebp
  416c13:	les    ebp,FWORD PTR [eax]
  416c15:	out    dx,al
  416c16:	sti    
  416c17:	aam    0xe6
  416c19:	sti    
  416c1a:	stos   BYTE PTR es:[edi],al
  416c1b:	mov    edx,0x17a96eff
  416c20:	pop    eax
  416c21:	xchg   esi,eax
  416c22:	ret    0xf414
  416c25:	es mov edi,0x2b7f5958
  416c2b:	xor    ebp,DWORD PTR [edi-0x7bac600f]
  416c31:	dec    edx
  416c32:	or     eax,0x8d3c6392
  416c37:	fdiv   QWORD PTR [esi-0x28161c31]
  416c3d:	pusha  
  416c3e:	retf   0xb346
  416c41:	popf   
  416c42:	arpl   WORD PTR [eax+0x3],ax
  416c45:	iret   
  416c46:	xchg   BYTE PTR [esi],ah
  416c48:	retf   0x9602
  416c4b:	jns    0x416ca1
  416c4d:	and    DWORD PTR [ecx-0x30b066cd],0x61618b03
  416c57:	stos   DWORD PTR es:[edi],eax
  416c58:	fistp  QWORD PTR [esi-0x5f]
  416c5b:	push   edi
  416c5c:	mov    bl,0xd
  416c5f:	jbe    0x416c77
  416c61:	mov    esp,0x99675bd3
  416c66:	pushf  
  416c67:	lea    edx,[ecx+ecx*1]
  416c6a:	cdq    
  416c6b:	mov    bh,0xd3
  416c6d:	aam    0x1
  416c6f:	mov    ah,0x65
  416c71:	inc    edx
  416c72:	sbb    cl,BYTE PTR [edi]
  416c74:	xor    BYTE PTR [ebx],dh
  416c76:	shr    BYTE PTR [edi],1
  416c78:	hlt    
  416c79:	stos   BYTE PTR es:[edi],al
  416c7a:	mov    dh,bh
  416c7c:	je     0x416c99
  416c7e:	aaa    
  416c7f:	rep lods al,BYTE PTR ds:[esi]
  416c81:	push   esp
  416c82:	and    bh,bl
  416c84:	fisttp DWORD PTR [ebx-0x31]
  416c87:	jae    0x416cab
  416c89:	mov    WORD PTR [eax+0x5c5e4ca6],ss
  416c8f:	or     dl,BYTE PTR [edi]
  416c91:	(bad)  
  416c92:	fistp  WORD PTR [eax]
  416c94:	lods   eax,DWORD PTR ds:[esi]
  416c95:	shl    DWORD PTR [esi+0x5f],0x26
  416c99:	xchg   ebx,eax
  416c9a:	enter  0x7913,0x16
  416c9e:	inc    esp
  416c9f:	daa    
  416ca0:	mov    al,ds:0x133098cf
  416ca5:	rol    ch,0xc0
  416ca8:	jo     0x416c6b
  416caa:	(bad)  
  416cab:	loopne 0x416c39
  416cad:	cmc    
  416cae:	cli    
  416caf:	cmp    eax,0x85821a0
  416cb4:	sbb    al,0xfc
  416cb6:	adc    BYTE PTR [edi*2-0x7f6a9c01],ch
  416cbd:	scas   eax,DWORD PTR es:[edi]
  416cbe:	fcomp  DWORD PTR [esi+0x1277f0d6]
  416cc4:	push   ss
  416cc5:	pop    ds
  416cc6:	sub    DWORD PTR [eax+0x6a82aaf4],0x2d9200e2
  416cd0:	hlt    
  416cd1:	mov    eax,0x2faebc17
  416cd6:	xor    eax,0x61fa2bcf
  416cdb:	dec    ebp
  416cdc:	xchg   esp,eax
  416cdd:	sbb    esp,DWORD PTR [esi-0x6d6396fb]
  416ce3:	push   esi
  416ce4:	dec    eax
  416ce5:	inc    edi
  416ce6:	mov    BYTE PTR [esi],cl
  416ce8:	push   ecx
  416ce9:	pop    edx
  416cea:	mov    cs,WORD PTR [edx]
  416cec:	add    eax,0x8c74c901
  416cf1:	inc    esp
  416cf2:	sub    esi,esp
  416cf4:	mov    esp,0x8c4c3142
  416cf9:	cli    
  416cfa:	das    
  416cfb:	jnp    0x416d77
  416cfd:	push   es
  416cfe:	dec    esp
  416cff:	inc    eax
  416d00:	call   0x5472f0eb
  416d05:	mov    fs,WORD PTR [esi-0x307cb4ae]
  416d0b:	enter  0x1ac1,0x41
  416d0f:	pop    edi
  416d10:	aam    0xc3
  416d12:	ins    DWORD PTR es:[edi],dx
  416d13:	retf   0xf875
  416d16:	inc    esp
  416d17:	mov    ds:0x21485135,eax
  416d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1d:	jmp    0x208f849a
  416d22:	jg     0x416d26
  416d24:	jne    0x416d38
  416d26:	push   edx
  416d27:	push   esp
  416d28:	and    DWORD PTR [ebx+0x2e14990d],ebp
  416d2e:	xor    DWORD PTR ds:0x2b8fb78f,0x79
  416d35:	sbb    al,0x1a
  416d37:	and    eax,0x1cc6a29b
  416d3c:	adc    al,0x8
  416d3e:	lock fst QWORD PTR [ecx-0x35]
  416d42:	jmp    0x416d54
  416d44:	cmp    al,0x1d
  416d46:	xchg   esp,eax
  416d47:	jg     0x416d60
  416d49:	jne    0x416d99
  416d4b:	shl    BYTE PTR [eax+0x722c0a5a],1
  416d51:	lea    edx,[eax+eax*8]
  416d54:	sub    ebp,DWORD PTR [ecx-0x480533a]
  416d5a:	test   DWORD PTR [esi],0xda56d216
  416d60:	sti    
  416d61:	mov    ds:0xe2548d20,al
  416d66:	adc    cl,BYTE PTR [ebp+0x7bb56dd3]
  416d6c:	inc    eax
  416d6d:	sub    DWORD PTR [edi+0xc8a2037],0x3ac8ed69
  416d77:	sub    ebp,ecx
  416d79:	enter  0xd776,0xb7
  416d7d:	cwde   
  416d7e:	int    0x22
  416d80:	add    cl,0x87
  416d83:	sbb    dh,BYTE PTR [esi]
  416d85:	call   esp
  416d87:	or     DWORD PTR [ebx-0x7b],0xffffffa7
  416d8b:	call   0xc888796
  416d90:	push   esp
  416d91:	jmp    0xe7a1:0x1cf42118
  416d98:	push   esp
  416d99:	jnp    0x416da0
  416d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d9c:	push   ss
  416d9d:	loope  0x416d36
  416d9f:	rcl    DWORD PTR [eax],0x38
  416da2:	mov    edx,DWORD PTR [ebx+0x16]
  416da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da6:	jnp    0x416d4a
  416da8:	jle    0x416d38
  416daa:	dec    eax
  416dac:	out    0xb,al
  416dae:	xchg   esp,eax
  416daf:	aam    0xb8
  416db1:	fisubr DWORD PTR [eax+ecx*8-0x30ab0343]
  416db8:	or     BYTE PTR [eax-0x55],bl
  416dbb:	or     al,0x79
  416dbd:	hlt    
  416dbe:	popa   
  416dbf:	fadd   DWORD PTR [eax-0x3c]
  416dc2:	in     al,0x1c
  416dc4:	ficom  DWORD PTR [esi]
  416dc6:	int3   
  416dc7:	sub    eax,eax
  416dc9:	rol    al,0xc0
  416dcc:	rol    al,0xc0
  416dcf:	rol    al,0xc0
  416dd2:	rol    al,0xc0
  416dd5:	rol    al,0xc0
  416dd8:	rol    al,0xc0
  416ddb:	rol    al,0xc0
  416dde:	rol    al,0x8a
  416de1:	aam    0xea
  416de3:	and    bh,al
  416de5:	leave  
  416de6:	dec    ecx
  416de7:	dec    ebp
  416de8:	mov    ds:0x4fddce62,eax
  416ded:	inc    edx
  416dee:	inc    esp
  416def:	fistp  WORD PTR [ebx]
  416df1:	(bad)  
  416df2:	sub    DWORD PTR [ecx-0x64cdacf9],eax
  416df8:	sti    
  416df9:	ss push edx
  416dfb:	sub    ch,BYTE PTR [ebx]
  416dfd:	cwde   
  416dfe:	jne    0x416d8d
  416e00:	xchg   edi,eax
  416e01:	out    dx,eax
  416e02:	aad    0xba
  416e04:	add    DWORD PTR [edi-0x40f46b2],edx
  416e0a:	add    BYTE PTR [eax+0x52],0xe4
  416e0e:	repz lock test edi,ebx
  416e12:	xchg   edx,eax
  416e13:	loopne 0x416e20
  416e15:	sub    ebx,ebp
  416e17:	or     eax,0x5bb58911
  416e1c:	hlt    
  416e1d:	sbb    al,0x85
  416e1f:	mov    ch,0xdf
  416e21:	ror    cl,cl
  416e23:	les    ecx,FWORD PTR [ecx+0x74]
  416e26:	lds    esp,FWORD PTR [edi+0x4a0206fb]
  416e2c:	dec    esi
  416e2d:	jmp    0x416e22
  416e2f:	int3   
  416e30:	dec    esp
  416e31:	sbb    ebp,DWORD PTR [eax+esi*8-0x6752f1ff]
  416e38:	lds    esi,FWORD PTR [ecx]
  416e3a:	test   al,0xe7
  416e3c:	inc    edx
  416e3d:	popa   
  416e3e:	jae    0x416e56
  416e40:	pop    edi
  416e41:	lock dec edx
  416e43:	jnp    0x416e4b
  416e45:	sar    DWORD PTR [edi+0x57],0x25
  416e49:	jg     0x416e1f
  416e4b:	pop    es
  416e4c:	jmp    0x53ee44d4
  416e51:	loope  0x416e88
  416e53:	dec    eax
  416e54:	push   ds
  416e55:	sbb    al,bl
  416e57:	push   edi
  416e58:	les    ecx,FWORD PTR [edi]
  416e5a:	add    BYTE PTR [ecx+0x42],ah
  416e5d:	test   eax,0xb6d097fe
  416e62:	and    bl,BYTE PTR [esi]
  416e64:	lods   eax,DWORD PTR ds:[esi]
  416e65:	imul   esi,DWORD PTR [ebx-0xd712cb3],0x725ecbbe
  416e6f:	cwd    
  416e71:	not    BYTE PTR [eax-0x110c5436]
  416e77:	outs   dx,BYTE PTR ds:[esi]
  416e78:	and    BYTE PTR [ecx+esi*1-0x27],al
  416e7c:	push   cs
  416e7d:	stos   BYTE PTR es:[edi],al
  416e7e:	rcr    BYTE PTR es:[edi+0xc],1
  416e82:	imul   edx,DWORD PTR [ecx+edi*8-0x80],0x5a6cf5d
  416e8a:	dec    ecx
  416e8b:	mov    ecx,0xce1f4982
  416e90:	cmp    BYTE PTR ds:0xf045d2ae,dh
  416e96:	xchg   esp,eax
  416e97:	outs   dx,BYTE PTR ds:[esi]
  416e98:	clc    
  416e99:	retf   0x28a0
  416e9c:	popa   
  416e9d:	add    dl,dl
  416e9f:	mov    edi,DWORD PTR [edi]
  416ea1:	dec    ebx
  416ea2:	ficomp DWORD PTR [ebx]
  416ea4:	inc    ecx
  416ea5:	enter  0x2b99,0x67
  416ea9:	out    0xe0,al
  416eab:	sbb    esp,ebp
  416ead:	fwait
  416eae:	mov    ah,0xfb
  416eb0:	scas   al,BYTE PTR es:[edi]
  416eb1:	out    0xdb,al
  416eb3:	int3   
  416eb4:	idiv   BYTE PTR [ecx-0xe89864d]
  416eba:	pop    es
  416ebb:	jno    0x416ec8
  416ebd:	int3   
  416ebe:	fadd   QWORD PTR [edi]
  416ec0:	jmp    0xb992a91
  416ec5:	shl    DWORD PTR [eax],1
  416ec7:	mov    ch,0x1d
  416ec9:	es pop eax
  416ecb:	add    eax,edx
  416ecd:	mov    dl,0x46
  416ecf:	aaa    
  416ed0:	ins    DWORD PTR es:[edi],dx
  416ed1:	add    eax,DWORD PTR [ebx]
  416ed3:	mov    bh,0xff
  416ed5:	js     0x416e9c
  416ed7:	jl     0x416f4d
  416ed9:	dec    esp
  416eda:	bound  ebx,QWORD PTR [edx+0x749fd134]
  416ee0:	leave  
  416ee1:	add    BYTE PTR [eax+edi*4+0x3799f7ee],dl
  416ee8:	cmc    
  416ee9:	dec    eax
  416eea:	jne    0x416f1b
  416eec:	fsubr  DWORD PTR [edi+0x7d]
  416eef:	mov    bl,al
  416ef1:	push   es
  416ef2:	loopne 0x416f5d
  416ef4:	mov    ?,WORD PTR [eax]
  416ef6:	data16 lahf 
  416ef8:	(bad)  
  416ef9:	(bad)  
  416efa:	stc    
  416efb:	mov    eax,ss
  416efd:	sbb    eax,0xee815976
  416f02:	push   esi
  416f03:	je     0x416ef3
  416f05:	mov    ?,ecx
  416f07:	push   0xe6c11ba2
  416f0c:	xchg   ecx,ebp
  416f0e:	(bad)  
  416f0f:	push   ds
  416f10:	test   BYTE PTR [esi],ch
  416f12:	dec    ebx
  416f13:	jg     0x416ec8
  416f15:	hlt    
  416f16:	mov    dl,BYTE PTR [edx+0x19]
  416f19:	xchg   ecx,eax
  416f1a:	dec    BYTE PTR [ebp+esi*1+0x4f]
  416f1e:	ds adc si,0xe492
  416f24:	(bad)  
  416f25:	and    al,0xa8
  416f27:	sub    dl,BYTE PTR [ebx]
  416f29:	cmp    dh,cl
  416f2b:	mov    esi,gs
  416f2d:	out    dx,eax
  416f2e:	pop    ebx
  416f2f:	lods   eax,DWORD PTR ds:[esi]
  416f30:	or     bh,BYTE PTR [ecx+0x4c]
  416f33:	inc    esi
  416f34:	xchg   ecx,eax
  416f35:	shl    DWORD PTR [ecx-0xf1d09c2],cl
  416f3b:	sbb    al,0xfd
  416f3d:	retf   
  416f3e:	test   eax,0x2a7a5e51
  416f43:	add    al,0x9
  416f45:	or     al,0x56
  416f47:	inc    ecx
  416f48:	mov    ebp,0xc40ceedb
  416f4d:	sbb    DWORD PTR [esi-0x4da5b5da],ecx
  416f53:	aaa    
  416f54:	lock sub BYTE PTR [esi-0x3],0x4e
  416f59:	fsub   QWORD PTR [ebp+0x6b78ae55]
  416f5f:	ins    BYTE PTR es:[edi],dx
  416f60:	stos   BYTE PTR es:[edi],al
  416f61:	das    
  416f62:	retf   
  416f63:	clc    
  416f64:	pop    ds
  416f65:	adc    DWORD PTR [ebp-0x3acaac68],0x7c
  416f6c:	ror    BYTE PTR [edx+0xe],1
  416f6f:	mov    eax,ds:0xd81efba
  416f74:	mov    ds:0x72fab9ac,eax
  416f79:	stc    
  416f7a:	sub    al,0x80
  416f7c:	or     eax,0x6924837a
  416f81:	test   BYTE PTR [eax],dh
  416f83:	out    dx,al
  416f84:	xchg   ebx,eax
  416f85:	adc    ebx,DWORD PTR [ecx]
  416f87:	jmp    0xfec13b5d
  416f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8d:	adc    al,0xb9
  416f8f:	add    BYTE PTR [edx+ebp*1],bh
  416f92:	sti    
  416f93:	cmp    eax,0xf834dba4
  416f98:	xchg   ecx,eax
  416f99:	dec    edx
  416f9a:	xchg   ebp,eax
  416f9b:	or     BYTE PTR [esi],ah
  416f9d:	push   eax
  416f9e:	int3   
  416f9f:	xorps  xmm5,XMMWORD PTR [esp+ecx*2-0xd]
  416fa4:	push   esi
  416fa5:	jnp    0x416f2c
  416fa7:	inc    edx
  416fa8:	pop    eax
  416fa9:	jne    0x416fd8
  416fab:	jmp    0xc30e750b
  416fb0:	sub    BYTE PTR [edi],ch
  416fb2:	in     eax,0x30
  416fb4:	out    0x52,al
  416fb6:	hlt    
  416fb7:	cmp    DWORD PTR [ebp-0x47856783],ebx
  416fbd:	add    DWORD PTR [esi-0x69],0x59
  416fc1:	rcl    bl,0xbb
  416fc4:	cmp    cl,BYTE PTR ds:0x5e9509b9
  416fca:	mov    ecx,0xba34e0ea
  416fcf:	shr    BYTE PTR [ebx],0x5a
  416fd2:	outs   dx,DWORD PTR ds:[esi]
  416fd3:	rcr    BYTE PTR [ebx],1
  416fd5:	outs   dx,DWORD PTR ds:[esi]
  416fd6:	ja     0x417003
  416fd8:	pop    ecx
  416fd9:	call   0x822f779c
  416fde:	xchg   BYTE PTR [ebx],ch
  416fe0:	fcmovnb st,st(0)
  416fe2:	pop    ebx
  416fe3:	mov    eax,ds:0x7a5b0aea
  416fe8:	add    DWORD PTR [edi-0x41],ebx
  416feb:	in     eax,dx
  416fec:	cmp    ch,BYTE PTR [esi+ecx*4+0x5e74f163]
  416ff3:	fdiv   DWORD PTR [edi+0x7d]
  416ff6:	loopne 0x417044
  416ff8:	jo     0x417008
  416ffa:	es and al,0x74
  416ffd:	jle    0x41707d
  416fff:	scas   al,BYTE PTR es:[edi]
  417000:	mov    ds:0xd683d13e,eax
  417005:	popf   
  417006:	add    dh,BYTE PTR [edi+0x79]
  417009:	adc    DWORD PTR [ecx-0x4bf94292],eax
  41700f:	mov    WORD PTR cs:[edx+0x3e],cs
  417013:	xchg   ecx,eax
  417014:	cmovg  edi,DWORD PTR [ebx-0x28ae3148]
  41701b:	inc    ecx
  41701c:	push   ebp
  41701d:	mov    ecx,DWORD PTR [ebx]
  41701f:	ret    0x21e1
  417022:	sub    DWORD PTR [ecx+0x649d9ee6],ecx
  417028:	mov    esi,0x1e0873bc
  41702d:	rcr    BYTE PTR [edx+0x40],cl
  417030:	inc    esi
  417031:	loope  0x41706e
  417033:	and    DWORD PTR [eax+0x9],edx
  417036:	pop    eax
  417037:	fbstp  TBYTE PTR cs:[edx]
  41703a:	mov    dh,0x81
  41703c:	pop    edx
  41703d:	or     eax,0xb8d01949
  417042:	fiadd  DWORD PTR [ecx]
  417044:	fs leave 
  417046:	sub    al,0xf
  417048:	idiv   DWORD PTR [esi+0x127fb531]
  41704e:	fnstsw WORD PTR [ebp+0x45]
  417051:	mov    bh,0xf2
  417053:	jns    0x417013
  417055:	mov    edx,0xe68ac92
  41705a:	(bad)  
  41705b:	gs addr16 mov ebp,0x1b778dbc
  417062:	ja     0x416ffd
  417064:	push   ebp
  417065:	test   BYTE PTR [ebp+0x6a],dl
  417068:	js     0x4170a4
  41706a:	or     edi,DWORD PTR [ecx]
  41706c:	das    
  41706d:	cmp    DWORD PTR [ebx+0x62d9c69c],ecx
  417073:	pop    eax
  417074:	out    dx,eax
  417075:	cmp    eax,0x3ef06db9
  41707a:	mov    bh,0xfa
  41707c:	cdq    
  41707d:	ja     0x417055
  41707f:	je     0x4170e2
  417081:	out    dx,eax
  417082:	sbb    DWORD PTR [ebx+eiz*8-0x54],ecx
  417086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417087:	cmc    
  417088:	sub    DWORD PTR [esi+0x217f5d98],0xffffffc3
  41708f:	and    ch,dl
  417091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417092:	sub    ch,0xc5
  417095:	add    BYTE PTR [esi-0x64a138d8],ch
  41709b:	sahf   
  41709c:	xchg   edi,eax
  41709d:	dec    ecx
  41709e:	push   ss
  41709f:	inc    ebp
  4170a0:	mov    ah,0x6
  4170a2:	xchg   DWORD PTR [eax+0x7f],ebx
  4170a5:	inc    ebp
  4170a6:	sub    eax,0xffffffaa
  4170a9:	mov    ds:0x50bd39f7,eax
  4170ae:	jnp    0x4170ce
  4170b0:	push   edi
  4170b1:	shl    dl,cl
  4170b3:	push   cs
  4170b4:	pop    ss
  4170b5:	or     DWORD PTR [esi+ebp*1],edi
  4170b8:	stc    
  4170b9:	pop    ss
  4170ba:	xchg   edx,eax
  4170bb:	mov    ch,dh
  4170bd:	pushf  
  4170be:	ins    DWORD PTR es:[edi],dx
  4170bf:	jle    0x4170da
  4170c1:	jg     0x417115
  4170c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c4:	add    al,0xae
  4170c6:	dec    eax
  4170c7:	add    BYTE PTR [ebp+0x36b8cbe5],0x28
  4170ce:	xlat   BYTE PTR ds:[ebx]
  4170cf:	jbe    0x4170b0
  4170d1:	xor    ch,BYTE PTR [ebx+eax*2-0x2e]
  4170d5:	mov    DWORD PTR [ebp+0x2f695037],ebx
  4170db:	or     BYTE PTR [ecx],ah
  4170dd:	rcr    BYTE PTR [ecx-0x66],cl
  4170e0:	pop    edi
  4170e1:	fnstsw WORD PTR [ebx-0x16]
  4170e4:	mov    ah,0x68
  4170e6:	add    DWORD PTR [edi+0x59],esi
  4170e9:	ficomp DWORD PTR [esi+0x339f6f22]
  4170ef:	sbb    DWORD PTR [edx+0x4],ecx
  4170f2:	sti    
  4170f3:	mov    eax,esp
  4170f5:	or     ebp,esi
  4170f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f8:	jb     0x4170ee
  4170fa:	jl     0x41707d
  4170fc:	(bad)  
  4170fd:	push   eax
  4170fe:	jne    0x417104
  417100:	ins    DWORD PTR es:[edi],dx
  417101:	mov    edi,0xeb36efef
  417106:	jno    0x41714c
  417108:	out    0xdd,eax
  41710a:	jno    0x417111
  41710c:	pop    es
  41710d:	nop
  41710e:	push   esp
  41710f:	pushf  
  417110:	jb     0x4170e1
  417112:	(bad)
  417115:	outs   dx,DWORD PTR ds:[esi]
  417116:	xchg   edi,eax
  417117:	xchg   esi,edx
  417119:	xor    eax,DWORD PTR [ecx-0x2147cef5]
  41711f:	jmp    0xb664:0xe8207c22
  417126:	shr    DWORD PTR [esi],1
  417128:	stos   BYTE PTR es:[edi],al
  417129:	fisub  WORD PTR [ecx]
  41712b:	fwait
  41712c:	test   esi,eax
  41712e:	xchg   edx,eax
  41712f:	xchg   ecx,eax
  417130:	outs   dx,BYTE PTR ds:[esi]
  417131:	dec    esi
  417132:	outs   dx,DWORD PTR ds:[esi]
  417133:	mov    dh,0x7f
  417135:	pop    edx
  417136:	add    ch,0x63
  417139:	mov    eax,ds:0x96420429
  41713e:	or     ch,BYTE PTR [ebp+ebx*8-0x49cbd724]
  417145:	mov    ebx,DWORD PTR [esi]
  417147:	and    eax,0x4de94e1
  41714c:	jbe    0x41712e
  41714e:	lea    edi,[edi]
  417150:	sub    ebx,DWORD PTR ds:0xb0b83854
  417156:	mov    al,0xc0
  417158:	enter  0x1af8,0xb0
  41715c:	inc    edi
  41715d:	mov    edi,0xe2b303ff
  417162:	mov    edi,0xbc49d17
  417167:	arpl   WORD PTR [ecx+0xce0dec4],bp
  41716d:	loopne 0x417169
  41716f:	stc    
  417170:	imul   edx,DWORD PTR [eax+edx*4],0x4b68a22e
  417177:	and    DWORD PTR [edi+0x6f],esi
  41717a:	(bad)
  41717e:	scas   al,BYTE PTR es:[edi]
  41717f:	ret    0xdc6f
  417182:	inc    edx
  417183:	sub    al,0x22
  417185:	mov    ds:0x475a442a,al
  41718a:	pop    edx
  41718b:	add    eax,0x6f03cf89
  417190:	test   eax,0xe2edb5f
  417195:	inc    BYTE PTR [edx+ecx*8+0x43]
  417199:	xchg   edx,eax
  41719a:	mov    WORD PTR [ebx-0x78],ds
  41719d:	dec    ecx
  41719e:	inc    edx
  41719f:	add    eax,0xaf9e5e2c
  4171a5:	out    dx,eax
  4171a6:	sahf   
  4171a7:	(bad)
  4171ab:	dec    esp
  4171ac:	push   esp
  4171ad:	lahf   
  4171ae:	test   DWORD PTR [ebp-0x38d14071],ecx
  4171b4:	sbb    DWORD PTR [edx+0x36],0x57
  4171b8:	dec    eax
  4171b9:	iret   
  4171ba:	aaa    
  4171bb:	popa   
  4171bc:	adc    al,0x6
  4171be:	mov    al,0xe8
  4171c0:	loop   0x417200
  4171c2:	fiadd  WORD PTR [eax]
  4171c4:	ret    
  4171c5:	sub    BYTE PTR [esi+ebp*1],al
  4171c8:	sbb    BYTE PTR [esi],bl
  4171ca:	xchg   edx,eax
  4171cb:	sbb    BYTE PTR [edx],dl
  4171cd:	lea    ecx,[edi]
  4171cf:	scas   eax,DWORD PTR es:[edi]
  4171d0:	sub    esi,ecx
  4171d2:	lock and al,0xfe
  4171d5:	and    edi,DWORD PTR [edx]
  4171d7:	daa    
  4171d8:	gs jnp 0x41719e
  4171db:	inc    edi
  4171dc:	lods   al,BYTE PTR ds:[esi]
  4171dd:	cmp    eax,0xcaa96911
  4171e2:	cmp    al,0xb
  4171e4:	cmp    al,0x53
  4171e6:	mov    ecx,0x316ee993
  4171eb:	mov    WORD PTR [esi-0x4b],?
  4171ee:	call   0xb68f776a
  4171f3:	lock in al,0x72
  4171f6:	fisttp QWORD PTR [esi+0x30afb1e9]
  4171fc:	xchg   edi,eax
  4171fd:	popf   
  4171fe:	mov    ecx,0x70b671a0
  417203:	pop    edx
  417204:	das    
  417205:	jecxz  0x4171d7
  417207:	iret   
  417208:	or     eax,DWORD PTR [ecx+0x4]
  41720b:	and    al,0xb
  41720d:	repz jp 0x4171b8
  417210:	sbb    edx,eax
  417212:	mov    DWORD PTR [edi],edi
  417214:	cmp    al,0x8f
  417216:	repnz fild WORD PTR [esi-0x2d]
  41721a:	jbe    0x417281
  41721c:	stc    
  41721d:	adc    BYTE PTR [ecx+0x1cca1088],dl
  417223:	inc    ebp
  417224:	fst    QWORD PTR [edx]
  417226:	shl    BYTE PTR [edi],1
  417228:	or     eax,0xcb1f953
  41722d:	adc    al,0xab
  41722f:	mov    ds:0x664ad43b,eax
  417234:	mov    ah,BYTE PTR [ebx+ebx*1]
  417237:	cwde   
  417238:	fimul  WORD PTR [ebp+ebx*4-0x52d516c2]
  41723f:	xor    bh,dl
  417241:	adc    DWORD PTR [ecx-0x6d],ebx
  417244:	test   eax,0x114da513
  417249:	sbb    eax,0x7f9dbf46
  41724e:	push   ss
  41724f:	adc    eax,0xb877ce29
  417254:	aam    0xea
  417256:	add    DWORD PTR [ecx+0x49],ebx
  417259:	mov    ?,WORD PTR [edi]
  41725b:	cmp    eax,0x3c8e0adb
  417260:	pop    ss
  417261:	pop    ebp
  417262:	mov    ds:0x227f0a0e,al
  417267:	jb     0x41722f
  417269:	mov    bh,0xef
  41726b:	inc    esp
  41726c:	dec    esi
  41726d:	push   ss
  41726e:	push   ds
  41726f:	cmp    esp,DWORD PTR [esi-0x66]
  417272:	cwde   
  417273:	or     ch,dl
  417275:	adc    ebp,DWORD PTR [ecx]
  417277:	mov    ch,ch
  417279:	mov    al,0x9a
  41727b:	sahf   
  41727c:	dec    ecx
  41727d:	popa   
  41727e:	imul   esi,esp,0x1dce3557
  417284:	push   ecx
  417285:	mov    bl,bl
  417287:	push   edi
  417288:	jmp    0x5e2876f6
  41728d:	xor    DWORD PTR [edi],ecx
  41728f:	push   cs
  417290:	inc    esi
  417291:	xlat   BYTE PTR ds:[ebx]
  417292:	ins    DWORD PTR es:[edi],dx
  417293:	sub    BYTE PTR [ebp-0x1c],bh
  417296:	mov    bh,0xb8
  417298:	(bad)  
  417299:	xchg   esi,eax
  41729a:	jnp    0x417233
  41729c:	push   esi
  41729d:	int    0x5e
  41729f:	adc    edx,DWORD PTR [ecx]
  4172a1:	or     DWORD PTR fs:[edi+edx*2],ecx
  4172a5:	adc    al,0x4f
  4172a7:	into   
  4172a8:	jae    0x417324
  4172aa:	aad    0xed
  4172ac:	jb     0x417307
  4172ae:	pop    esp
  4172af:	add    DWORD PTR [ecx-0x9],eax
  4172b2:	aad    0x2c
  4172b4:	cmp    DWORD PTR [ecx],eax
  4172b6:	lea    ebp,[ebx+edx*2+0x1e19c449]
  4172bd:	test   esp,esp
  4172bf:	push   0xffffffc0
  4172c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c2:	mov    cs,WORD PTR [edx+0x5ba6d446]
  4172c8:	or     eax,0x37428714
  4172cd:	call   0x8bb5146d
  4172d2:	(bad)
  4172d6:	and    esi,ebx
  4172d8:	cmp    DWORD PTR [ecx-0x4229836],edi
  4172de:	mov    dl,0x9a
  4172e0:	cmp    BYTE PTR [ebp+0x55],bh
  4172e3:	cmovnp esp,DWORD PTR [eax-0x1047f771]
  4172ea:	ins    DWORD PTR es:[edi],dx
  4172eb:	push   ebp
  4172ec:	mov    ah,0x1a
  4172ee:	fstp   TBYTE PTR [ebx]
  4172f0:	retf   0x16f5
  4172f3:	div    BYTE PTR [esi-0x1dec844a]
  4172f9:	int    0x8c
  4172fb:	push   edx
  4172fc:	cmp    edi,0x4ce8c4a3
  417302:	mov    esp,0x5f362dd7
  417307:	in     eax,0x32
  417309:	cld    
  41730a:	mov    eax,DWORD PTR [ebx]
  41730c:	jnp    0x4172d3
  41730e:	xor    DWORD PTR [ecx+0x63],ebp
  417311:	test   eax,0x98c98314
  417316:	int3   
  417317:	and    DWORD PTR [esi+0x3631b03b],edx
  41731d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41731e:	mov    bh,BYTE PTR [edx]
  417320:	mov    esi,0xa489c663
  417325:	outs   dx,BYTE PTR ds:[esi]
  417326:	test   DWORD PTR [ecx+0x5116f1e8],eax
  41732c:	jb     0x4172b8
  41732e:	cmc    
  41732f:	mov    esp,0x5246f198
  417334:	fs nop
  417336:	lock (bad) 
  417338:	push   0xec292518
  41733d:	jmp    0x6cb:0x1b4f8d39
  417344:	pop    ss
  417345:	out    dx,eax
  417346:	nop
  417347:	cmp    ah,ch
  417349:	loop   0x417346
  41734b:	xor    al,dh
  41734d:	mov    BYTE PTR [ecx+0x465ee14c],cl
  417353:	jmp    0x33042d3c
  417358:	div    edi
  41735a:	les    eax,FWORD PTR [esi]
  41735c:	out    0x8,al
  41735e:	mov    ds:0xb3e14c8d,eax
  417363:	mov    eax,ds:0xd67bb966
  417368:	jge    0x417320
  41736a:	push   ds
  41736b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736c:	pop    edi
  41736d:	and    al,0x65
  41736f:	scas   al,BYTE PTR es:[edi]
  417370:	mov    di,0xe3f0
  417374:	jae    0x417312
  417376:	stos   DWORD PTR es:[edi],eax
  417377:	add    BYTE PTR [esi],bh
  417379:	and    eax,0x8e931859
  41737e:	shl    DWORD PTR [esi+0x400c3b82],1
  417384:	xor    BYTE PTR [edx+0x17f34bb1],0x28
  41738b:	mov    al,0x65
  41738d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738e:	pop    edx
  41738f:	stos   DWORD PTR es:[edi],eax
  417390:	inc    ecx
  417391:	lock rol ecx,1
  417394:	mov    ebp,0x350e128a
  417399:	cmp    edx,esi
  41739b:	adc    BYTE PTR [ecx-0x6488bfa],0xd9
  4173a2:	xchg   esi,eax
  4173a3:	pop    ss
  4173a4:	push   ebx
  4173a5:	in     eax,0xf2
  4173a7:	add    DWORD PTR [ebx],edx
  4173a9:	xlat   BYTE PTR ds:[ebx]
  4173aa:	stc    
  4173ab:	mov    WORD PTR [esi],?
  4173ad:	daa    
  4173ae:	mov    esi,0x83ac5d2c
  4173b3:	out    0x35,al
  4173b5:	imul   ecx,esp,0x5893e8ee
  4173bb:	cdq    
  4173bc:	imul   ebp,edx,0x3c
  4173bf:	sub    al,0x2b
  4173c1:	lods   al,BYTE PTR ds:[esi]
  4173c2:	push   eax
  4173c3:	adc    BYTE PTR ds:0x6c7abb79,bh
  4173c9:	cmc    
  4173ca:	mov    edx,0xd00b0619
  4173cf:	in     al,dx
  4173d0:	mov    esi,0xeb08bcec
  4173d5:	pop    esp
  4173d6:	ja     0x41741b
  4173d8:	pop    ebp
  4173d9:	push   DWORD PTR [eax]
  4173db:	mov    eax,DWORD PTR [esi+0x3b]
  4173de:	mov    edi,0x1abef786
  4173e3:	pusha  
  4173e4:	(bad)  
  4173e5:	push   ecx
  4173e6:	jmp    0x41739b
  4173e8:	ss push 0xffffff9e
  4173eb:	(bad)  
  4173ec:	xchg   ebp,eax
  4173ed:	mov    eax,ds:0x6b922b12
  4173f2:	push   ds
  4173f3:	inc    edi
  4173f4:	out    0xdd,eax
  4173f6:	mov    esp,DWORD PTR [ebx+0x6e]
  4173f9:	or     al,0x7a
  4173fb:	sub    esp,esi
  4173fd:	cmp    DWORD PTR [eax-0x6daedf87],0xd522337
  417407:	scas   eax,DWORD PTR es:[edi]
  417408:	ja     0x417405
  41740a:	push   ds
  41740b:	xor    eax,ecx
  41740d:	jge    0x978cb098
  417413:	or     eax,0xe2601482
  417418:	ss retf 0x60ea
  41741c:	cmc    
  41741d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741e:	jmp    0x5acb:0xbf6fe977
  417425:	adc    al,0xcd
  417427:	push   ss
  417428:	sub    bh,ch
  41742a:	enter  0xd70f,0x2b
  41742e:	out    0x51,eax
  417430:	xor    ecx,esi
  417432:	sub    eax,0x3b505407
  417437:	xchg   cl,dh
  417439:	jle    0x417487
  41743b:	int3   
  41743c:	pop    ss
  41743d:	xor    DWORD PTR [esi-0x219987b6],ebx
  417443:	inc    edi
  417444:	sbb    BYTE PTR [eax-0x4af67909],al
  41744a:	add    BYTE PTR [ecx],dl
  41744c:	and    DWORD PTR [eax+0x2c45724e],ecx
  417452:	jp     0x417457
  417454:	or     bh,BYTE PTR [ebx+0x7016e2b9]
  41745a:	adc    ah,BYTE PTR [edi-0x3cf55ded]
  417460:	pop    edx
  417461:	dec    eax
  417462:	lea    ecx,ds:0x634aa64c
  417468:	mov    ecx,0x3e99e4ba
  41746d:	mov    esp,0xaa10b581
  417472:	int3   
  417473:	xor    BYTE PTR [ebp-0x52],bl
  417476:	imul   esp,DWORD PTR ds:0xafd3e8ba,0xffffffaa
  41747d:	xchg   ebx,eax
  41747e:	jnp    0x4174c7
  417480:	test   DWORD PTR [edi+0xe],ebp
  417483:	sub    DWORD PTR [ebx+0x4f6df51b],eax
  417489:	das    
  41748a:	xchg   esp,eax
  41748b:	test   al,0x5a
  41748d:	jmp    0x417501
  41748f:	loopne 0x417500
  417491:	push   esi
  417492:	fsubr  st(2),st
  417494:	ficomp DWORD PTR [ebx+0x41]
  417497:	cs pop ss
  417499:	sbb    eax,0x15071ff4
  41749e:	inc    DWORD PTR [eax+edi*2-0xe]
  4174a2:	imul   ecx,DWORD PTR [edi],0xffffffde
  4174a5:	data16 jb 0x417468
  4174a8:	pop    esp
  4174a9:	push   esi
  4174aa:	imul   DWORD PTR [edi]
  4174ac:	sub    bl,BYTE PTR ds:0x3c3f8afd
  4174b2:	les    ebx,FWORD PTR [edx]
  4174b4:	test   DWORD PTR [esi+0x46],0xed17604
  4174bb:	in     eax,0xe6
  4174bd:	cwde   
  4174be:	mov    bl,0xfc
  4174c0:	aaa    
  4174c1:	push   ebp
  4174c2:	(bad)  
  4174c3:	jmp    0x41753a
  4174c5:	ret    0xe469
  4174c8:	xchg   esp,eax
  4174c9:	inc    esp
  4174ca:	xlat   BYTE PTR ds:[ebx]
  4174cb:	loope  0x4174e7
  4174cd:	sbb    BYTE PTR [eax],bh
  4174cf:	mul    BYTE PTR [ebx]
  4174d1:	xor    dh,0x78
  4174d4:	cdq    
  4174d5:	je     0x417483
  4174d7:	mov    ah,0x89
  4174d9:	(bad)  
  4174da:	shl    cl,cl
  4174dc:	mov    dl,0xf7
  4174de:	retf   
  4174df:	dec    ebp
  4174e0:	rol    dh,1
  4174e2:	jns    0x417533
  4174e4:	push   eax
  4174e5:	sub    DWORD PTR [ecx-0x6982f148],edx
  4174eb:	or     edi,DWORD PTR [esi+ebp*8-0x53]
  4174ef:	push   esp
  4174f0:	cmovb  eax,DWORD PTR [esi+0x54]
  4174f4:	addr16 dec ebp
  4174f6:	pop    es
  4174f7:	add    al,0xf9
  4174f9:	addr16 cmc 
  4174fb:	rol    eax,0xa5
  4174fe:	fwait
  4174ff:	test   al,0x97
  417501:	fsub   st(4),st
  417503:	sub    BYTE PTR [ebx-0x699f1dc3],bh
  417509:	in     eax,dx
  41750a:	mov    edx,0x77c6d818
  41750f:	sahf   
  417510:	push   eax
  417511:	sbb    bh,bl
  417513:	je     0x417562
  417515:	sbb    dl,BYTE PTR [esi]
  417517:	shl    BYTE PTR [esi-0x8e6fab6],cl
  41751d:	mov    gs,WORD PTR [eax-0x40]
  417520:	xor    eax,0x7f30db5f
  417525:	dec    esp
  417526:	mov    al,0x37
  417528:	lock (bad) 
  41752a:	sbb    dh,BYTE PTR [ecx+0x37b1684e]
  417530:	mov    ds:0x994a163a,eax
  417535:	mov    dl,al
  417537:	push   ebp
  417538:	je     0x4174fd
  41753a:	test   eax,0xbe292f16
  41753f:	repz sub DWORD PTR [esi],0x5b
  417543:	adc    bl,dl
  417545:	dec    edx
  417546:	xchg   edx,eax
  417547:	repz dec eax
  417549:	pop    ds
  41754a:	into   
  41754b:	(bad)  
  41754d:	sbb    DWORD PTR [eax+0x15dce182],ebp
  417553:	repnz mov dh,0x28
  417556:	sub    DWORD PTR [edi+0x7f533c71],ebx
  41755c:	mov    ch,0xc5
  41755e:	fwait
  41755f:	int    0x61
  417561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417562:	xchg   BYTE PTR [ecx],al
  417564:	adc    al,0x87
  417566:	jb     0x417581
  417568:	lahf   
  417569:	ror    DWORD PTR [edx+0x60],1
  41756c:	xlat   BYTE PTR ds:[ebx]
  41756d:	sub    DWORD PTR [edx+0x6],eax
  417570:	stos   DWORD PTR es:[edi],eax
  417571:	ret    
  417572:	mov    bh,0x6e
  417574:	xor    DWORD PTR [esi+0x2668c1a1],ecx
  41757a:	adc    BYTE PTR [eax],0x29
  41757d:	jnp    0x41759a
  41757f:	mov    esi,0x1329475
  417584:	retf   
  417585:	icebp  
  417586:	(bad)  
  417587:	xchg   esp,eax
  417588:	push   eax
  417589:	test   eax,0x1d95002f
  41758e:	mov    al,bh
  417590:	jb     0x41760e
  417592:	hlt    
  417593:	mov    eax,0x2a1072be
  417598:	or     ecx,esi
  41759a:	les    esp,FWORD PTR [edi-0x61]
  41759d:	and    dh,BYTE PTR [ecx-0x72d573f1]
  4175a3:	rcl    BYTE PTR [ecx-0x3dc0251d],1
  4175a9:	retf   0xf06c
  4175ac:	pusha  
  4175ad:	sbb    DWORD PTR [ebx-0x3f3f3fa2],ebx
  4175b3:	rol    al,0xc0
  4175b6:	rol    al,0xc0
  4175b9:	rol    al,0xc0
  4175bc:	rol    al,0xc0
  4175bf:	rol    al,0xc0
  4175c2:	rol    al,0xc0
  4175c5:	rol    al,0xc0
  4175c8:	rol    al,0xc0
  4175cb:	rol    al,0xc0
  4175ce:	rol    al,0xc0
  4175d1:	rol    al,0xc0
  4175d4:	rol    al,0xc0
  4175d7:	rol    al,0xc0
  4175da:	rol    al,0xc0
  4175dd:	rol    al,0xc0
  4175e0:	push   0x57
  4175e2:	jno    0x417570
  4175e4:	shrd   DWORD PTR [ebx+0x17e6a18c],esi,0xef
  4175ec:	nop
  4175ed:	or     BYTE PTR [esi-0x2b],cl
  4175f0:	and    esp,DWORD PTR [esi+ebp*1-0x78]
  4175f4:	xchg   esi,eax
  4175f5:	stos   BYTE PTR es:[edi],al
  4175f6:	jae    0x4175ba
  4175f8:	and    eax,0xec76520f
  4175fd:	ss call 0xdf03:0x4a52d8cd
  417605:	dec    edi
  417606:	xlat   BYTE PTR ds:[ebx]
  417607:	(bad)  
  417608:	repz into 
  41760a:	add    edx,DWORD PTR [ebx]
  41760c:	pop    edi
  41760d:	push   0xffffffdd
  41760f:	and    eax,0x96152857
  417614:	fstp   QWORD PTR [edx+0x798f3387]
  41761a:	es inc ebx
  41761c:	push   esi
  41761d:	adc    eax,0xa2229907
  417622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417623:	add    edx,DWORD PTR [edx+0x5a]
  417626:	js     0x417657
  417628:	push   cs
  417629:	mov    ecx,0xf4051e40
  41762e:	(bad)  
  41762f:	clc    
  417630:	cdq    
  417631:	icebp  
  417632:	cmp    eax,0xce849e4f
  417637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417638:	pop    esi
  417639:	mov    ecx,0x3cd9489a
  41763e:	aaa    
  41763f:	fstp   TBYTE PTR [ebp-0x28]
  417642:	into   
  417643:	iret   
  417644:	push   ecx
  417645:	adc    al,0xab
  417647:	setl   BYTE PTR [ebx]
  41764a:	xchg   esi,eax
  41764b:	jae    0x41763c
  41764d:	lahf   
  41764e:	lods   eax,DWORD PTR ds:[esi]
  41764f:	retf   
  417650:	cmp    DWORD PTR [edi],esp
  417652:	in     eax,dx
  417653:	xor    BYTE PTR [eax+ebx*1],dl
  417656:	rcr    BYTE PTR [edi-0x22],1
  417659:	js     0x4175f3
  41765b:	adc    edx,DWORD PTR [ecx]
  41765d:	dec    esp
  41765e:	cld    
  41765f:	xchg   DWORD PTR [ebx-0x73],ecx
  417662:	inc    edx
  417663:	imul   edx,DWORD PTR [edi],0x43
  417666:	test   BYTE PTR [edi+0x4a],bl
  417669:	shl    DWORD PTR [esi+0x2d],1
  41766c:	call   FWORD PTR [eax+0x7fc2c499]
  417672:	sbb    DWORD PTR [esi+0xe2be36c],esi
  417678:	pop    ebp
  417679:	int3   
  41767a:	and    cl,ah
  41767c:	cwde   
  41767d:	mov    edi,?
  41767f:	cmp    eax,0x9ebe245a
  417684:	fstp   TBYTE PTR [ebp-0x4bab169c]
  41768a:	lea    esp,[edx-0x850a05b]
  417690:	fcmovne st,st(2)
  417692:	mov    gs,esi
  417694:	push   esp
  417695:	mov    edx,0x52cdcfb6
  41769a:	mov    edi,0x9a6b52e6
  41769f:	iret   
  4176a0:	fld    st(6)
  4176a2:	push   0x8ec8504a
  4176a7:	iret   
  4176a8:	in     eax,0xce
  4176aa:	lods   eax,DWORD PTR ds:[esi]
  4176ab:	rcl    DWORD PTR [eax+0x622f4426],cl
  4176b1:	push   esi
  4176b2:	mov    eax,DWORD PTR [eax-0x42]
  4176b5:	dec    esi
  4176b6:	lds    ecx,FWORD PTR [ebp+0x13]
  4176b9:	aam    0xb6
  4176bb:	push   cs
  4176bc:	pop    ebp
  4176bd:	push   ds
  4176be:	stos   DWORD PTR es:[edi],eax
  4176bf:	jne    0x41765a
  4176c1:	mov    ch,0x5a
  4176c3:	push   es
  4176c4:	pop    ebx
  4176c5:	and    ah,dh
  4176c7:	add    al,0x99
  4176c9:	mov    DWORD PTR [esi],edx
  4176cb:	push   ds
  4176cc:	pop    ecx
  4176cd:	pop    edx
  4176ce:	fmul   st(7),st
  4176d0:	xor    al,0x9d
  4176d2:	mov    dl,0x3
  4176d4:	fistp  WORD PTR [ecx-0x52]
  4176d7:	pop    es
  4176d8:	push   ecx
  4176d9:	pop    es
  4176da:	ss mov edi,0x4b3478b1
  4176e0:	ja     0x4176b1
  4176e2:	shl    dl,1
  4176e4:	adc    DWORD PTR [edx],edx
  4176e6:	jbe    0x417687
  4176e8:	jne    0x4176c9
  4176ea:	jmp    FWORD PTR [edi-0x3c]
  4176ed:	jb     0x4176bb
  4176ef:	ret    0x12db
  4176f2:	lds    ebx,FWORD PTR [edi+0xc787de]
  4176f8:	frstor [esi-0x2a]
  4176fb:	sbb    DWORD PTR [esi+0xc07181b],edi
  417701:	xlat   BYTE PTR ds:[ebx]
  417702:	nop
  417703:	fld    QWORD PTR [ebp+0x153b070]
  417709:	and    al,0x33
  41770b:	clc    
  41770c:	pop    ds
  41770d:	dec    edi
  41770e:	push   ds
  41770f:	stc    
  417710:	or     al,0x85
  417712:	xor    DWORD PTR [eax],ebx
  417714:	xchg   BYTE PTR [edx+0x25ed2fed],al
  41771a:	xor    eax,ebx
  41771c:	cmp    ah,bh
  41771e:	imul   esp,DWORD PTR [eax],0x5e
  417721:	gs mov dh,0x76
  417724:	imul   ebp,DWORD PTR [esi+0x3b993597],0x831b452c
  41772e:	fisubr WORD PTR [ebx]
  417730:	push   esi
  417731:	push   ebp
  417732:	jecxz  0x4176fd
  417734:	retf   0xe134
  417737:	leave  
  417738:	ftst   
  41773a:	adc    eax,DWORD PTR [edi+eax*1-0x1b164dee]
  417741:	jle    0x4176da
  417743:	loopne 0x4177a3
  417745:	xchg   ebp,eax
  417746:	mov    bl,0x60
  417748:	scas   al,BYTE PTR es:[edi]
  417749:	cwde   
  41774a:	fild   QWORD PTR [ebx]
  41774c:	sub    bl,BYTE PTR [eax]
  41774e:	xchg   edi,eax
  41774f:	jne    0x417722
  417751:	mov    ch,dh
  417753:	mov    cl,0x8
  417755:	mov    dl,0x1c
  417757:	and    cl,dh
  417759:	and    al,BYTE PTR [esi+0x3d2bd48]
  41775f:	ret    
  417760:	les    edi,FWORD PTR [eax+0x44fcbec6]
  417766:	jge    0x41778d
  417768:	and    al,bl
  41776a:	mov    ds:0x626679eb,al
  41776f:	cmp    eax,0x32affa1
  417774:	imul   esp,eax,0xffffffee
  417777:	repz iret 
  417779:	es jge 0x41771b
  41777c:	clc    
  41777d:	sub    DWORD PTR [ecx-0x13],ecx
  417780:	das    
  417781:	int    0x27
  417783:	scas   al,BYTE PTR es:[edi]
  417784:	imul   edi,edx,0x28
  417787:	mov    eax,ds:0x1f5275c7
  41778c:	fisttp QWORD PTR [edx+0x216430d0]
  417792:	stos   BYTE PTR es:[edi],al
  417793:	mov    eax,0x355a1aef
  417798:	call   0x785f871d
  41779d:	popa   
  41779e:	dec    esi
  41779f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a0:	xchg   ah,al
  4177a2:	shl    BYTE PTR [edx],1
  4177a4:	mov    ds:0xb399f075,eax
  4177a9:	pop    edx
  4177aa:	ret    0x1256
  4177ad:	pusha  
  4177ae:	adc    eax,0xf50259cb
  4177b3:	fcom   QWORD PTR [edx-0x1e]
  4177b6:	int3   
  4177b7:	cmp    ebx,ecx
  4177b9:	xor    al,0x14
  4177bb:	pop    ebx
  4177bc:	inc    ecx
  4177bd:	ins    DWORD PTR es:[edi],dx
  4177be:	push   edx
  4177bf:	xor    ch,BYTE PTR [eax-0x64]
  4177c2:	mov    cs,WORD PTR [ebx+0x3c]
  4177c5:	or     al,0xf2
  4177c7:	cmp    ah,ch
  4177c9:	daa    
  4177ca:	adc    al,0x10
  4177cc:	dec    esp
  4177cd:	pop    ecx
  4177ce:	push   edx
  4177cf:	push   edi
  4177d0:	ret    
  4177d1:	ja     0x417758
  4177d3:	and    BYTE PTR [ecx+edx*4+0x615532a3],bh
  4177da:	outs   dx,DWORD PTR ds:[esi]
  4177db:	pop    esp
  4177dc:	jg     0x4177fa
  4177de:	stos   DWORD PTR es:[edi],eax
  4177df:	xchg   ecx,eax
  4177e0:	or     BYTE PTR [ebx],0x3a
  4177e3:	or     DWORD PTR [edx+eiz*8+0x68],eax
  4177e7:	aad    0x8b
  4177e9:	dec    edx
  4177ea:	adc    eax,DWORD PTR [eax]
  4177ec:	iret   
  4177ed:	(bad)  
  4177ee:	sbb    eax,0x28fe8a53
  4177f3:	ss aam 0x40
  4177f6:	lea    eax,gs:[ebp-0x11]
  4177fa:	pushf  
  4177fb:	sbb    edx,edi
  4177fd:	ja     0x417855
  4177ff:	mov    edi,0x62715a91
  417804:	test   al,0x20
  417806:	cmp    al,0x5f
  417808:	sbb    ecx,ebx
  41780a:	or     DWORD PTR [edx],eax
  41780c:	inc    edx
  41780d:	or     ebx,0x16
  417810:	sub    ebx,DWORD PTR [ecx-0x72]
  417813:	xchg   esp,eax
  417814:	lods   eax,DWORD PTR ds:[esi]
  417815:	ret    0xe391
  417818:	addr16 out 0xa6,al
  41781b:	test   BYTE PTR [edi],al
  41781d:	push   cs
  41781e:	ror    BYTE PTR [esi*4-0x5f1bdf17],0xfb
  417826:	sahf   
  417827:	sub    BYTE PTR [ebx-0x41],cl
  41782a:	pop    edi
  41782b:	test   edx,ecx
  41782d:	out    0xe,eax
  41782f:	adc    ecx,ecx
  417831:	ss mov edx,0x3728127a
  417837:	adc    dl,BYTE PTR [ecx]
  417839:	pop    ds
  41783a:	loope  0x417816
  41783c:	sbb    bl,ah
  41783e:	stc    
  41783f:	pop    esp
  417840:	pusha  
  417841:	in     eax,dx
  417842:	cmp    cl,BYTE PTR [edi+esi*2]
  417845:	push   ebx
  417846:	cwde   
  417847:	xor    al,0x35
  417849:	fnsave [edx]
  41784b:	dec    esp
  41784c:	push   eax
  41784d:	dec    esp
  41784e:	aas    
  41784f:	or     BYTE PTR [esi+ecx*2-0x38c3f52e],cl
  417856:	pushf  
  417857:	jne    0x417801
  417859:	or     ah,BYTE PTR [ebx-0x36]
  41785c:	(bad)  
  41785d:	mov    edi,0x6e210336
  417862:	into   
  417863:	push   ss
  417864:	les    edi,FWORD PTR [ebx]
  417866:	jo     0x4178a6
  417868:	rcr    DWORD PTR [ebp+0x7c4f1a84],1
  41786e:	cmc    
  41786f:	aas    
  417870:	jp     0x417843
  417872:	hlt    
  417873:	or     al,0x8a
  417875:	sub    DWORD PTR [ebx],0x9520d25
  41787b:	jge    0x41784c
  41787d:	xchg   DWORD PTR [edx+0xeeb0867],edx
  417883:	sbb    al,0xbb
  417885:	xor    eax,0x9fe95af7
  41788a:	mov    cl,0x18
  41788c:	mov    al,0x93
  41788e:	popa   
  41788f:	jmp    0x8e44:0x90ecb65
  417896:	push   ds
  417897:	and    ebx,DWORD PTR [ecx+0x56]
  41789a:	jg     0x4178ac
  41789c:	cli    
  41789d:	dec    ecx
  41789e:	mov    esp,0x2ecb1b34
  4178a3:	and    al,0x42
  4178a5:	push   edx
  4178a6:	loop   0x41787b
  4178a8:	dec    edi
  4178a9:	push   ecx
  4178aa:	jecxz  0x417859
  4178ac:	dec    eax
  4178ad:	sahf   
  4178ae:	cs pop ds
  4178b0:	mov    ebx,0xc26dcc7e
  4178b5:	cmp    BYTE PTR [edx-0x688db779],ah
  4178bb:	cmp    al,0x43
  4178bd:	mov    ch,0xda
  4178bf:	push   ebx
  4178c0:	ret    0x2a53
  4178c3:	sub    al,0x82
  4178c5:	pop    esi
  4178c6:	mov    al,0xbd
  4178c8:	xchg   ecx,eax
  4178c9:	sahf   
  4178ca:	sub    al,0x8b
  4178cc:	or     esi,ecx
  4178ce:	jnp    0x417932
  4178d0:	(bad)  
  4178d2:	loopne 0x4178ad
  4178d4:	sbb    eax,0x6eb56871
  4178d9:	jecxz  0x417956
  4178db:	jbe    0x417955
  4178dd:	push   edx
  4178de:	pop    esp
  4178df:	sub    eax,0xa10eca64
  4178e4:	rcr    DWORD PTR [esi+edx*8+0x5d],0xae
  4178e9:	lahf   
  4178ea:	icebp  
  4178eb:	shl    BYTE PTR [esi+ebp*2-0x20],1
  4178ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f0:	jns    0x4178e8
  4178f2:	jmp    0x417882
  4178f4:	xchg   edi,eax
  4178f5:	jae    0x4178cd
  4178f7:	ins    DWORD PTR es:[edi],dx
  4178f8:	jbe    0x417924
  4178fa:	add    BYTE PTR [edi],0x18
  4178fd:	mov    esp,0xa95db246
  417902:	cld    
  417903:	cmp    edx,edx
  417905:	sbb    BYTE PTR [ebp+eax*1+0xbebd2ea],bh
  41790c:	fiadd  WORD PTR [eax+0x39]
  41790f:	cmp    DWORD PTR [esi-0x76ad2a32],esi
  417915:	jbe    0x417927
  417917:	mov    bh,0xff
  417919:	xor    ah,bl
  41791b:	sbb    al,0xf7
  41791d:	fdivrp st(0),st
  41791f:	bound  eax,QWORD PTR [esi]
  417921:	mov    ch,0x12
  417923:	lock mov ds:0x4d03f281,al
  417929:	mov    BYTE PTR [eax-0x4451a8e5],ch
  41792f:	jo     0x4178ba
  417931:	out    0x55,eax
  417933:	sub    ah,BYTE PTR [esi+0x6b8b97fb]
  417939:	fsubrp st(7),st
  41793b:	or     al,0x42
  41793d:	jl     0x417936
  41793f:	and    al,0x25
  417941:	les    ecx,FWORD PTR es:[ebp-0x78]
  417945:	jmp    0x1444:0x1ec5db60
  41794c:	pop    esi
  41794d:	add    edi,DWORD PTR [ecx+0x3ef69ad6]
  417953:	out    0x6d,eax
  417955:	or     al,0xcf
  417957:	cmp    al,0xc4
  417959:	stos   BYTE PTR es:[edi],al
  41795a:	outs   dx,DWORD PTR ds:[esi]
  41795b:	inc    ecx
  41795c:	(bad)  
  41795d:	or     ch,ah
  41795f:	or     BYTE PTR [ebp+0x7a0647f1],cl
  417965:	sbb    DWORD PTR [ecx],esi
  417967:	xor    eax,0xb25d5dfb
  41796c:	ror    edi,1
  41796e:	fstp   QWORD PTR [ebx+esi*2]
  417971:	stos   DWORD PTR es:[edi],eax
  417972:	dec    ebp
  417973:	(bad)  
  417974:	(bad)  
  417975:	push   ds
  417976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417977:	arpl   WORD PTR [edx],si
  417979:	arpl   bp,ax
  41797b:	cmp    ebx,DWORD PTR [edi-0x1d38f43d]
  417981:	sub    eax,0xa22a1aa5
  417986:	and    eax,0xaed5e00f
  41798b:	mov    edx,DWORD PTR [edi+0x33f4340]
  417991:	cmp    DWORD PTR [ecx-0xf],0xddeb81a4
  417998:	add    BYTE PTR [esi+0x5e365592],0x81
  41799f:	fld    DWORD PTR [edi]
  4179a1:	(bad)  
  4179a2:	and    DWORD PTR [edi+0x1e5acabe],ebp
  4179a8:	add    DWORD PTR [edx],ebp
  4179aa:	jmp    0xb0db:0x17833f32
  4179b1:	js     0x417992
  4179b3:	mov    DWORD PTR [eax+0x1a],ecx
  4179b6:	sub    eax,0x4df43303
  4179bc:	pop    eax
  4179bd:	cs jmp 0xae7c5d60
  4179c3:	add    eax,0x44f060ac
  4179c8:	shl    DWORD PTR [esi-0x6a492f74],1
  4179ce:	lock mov edx,0x73b1ec12
  4179d4:	jge    0x417a55
  4179d6:	sub    DWORD PTR [esi+0x6b43a0c3],eax
  4179dc:	mov    edx,fs
  4179de:	inc    esi
  4179df:	iret   
  4179e0:	xchg   esi,eax
  4179e1:	xchg   ebp,eax
  4179e2:	pushf  
  4179e3:	stos   DWORD PTR es:[edi],eax
  4179e4:	push   0x72393308
  4179e9:	push   es
  4179ea:	popa   
  4179eb:	mov    WORD PTR [edi+0x3cda0582],?
  4179f1:	mov    bl,0xde
  4179f3:	xchg   esp,eax
  4179f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f5:	push   es
  4179f6:	enter  0xaa4a,0xc8
  4179fa:	push   esp
  4179fb:	mov    ebp,0x480a6a4a
  417a00:	jg     0x417a5f
  417a02:	cmp    al,0x3
  417a04:	mov    BYTE PTR [edi],bl
  417a06:	sub    al,0xb0
  417a08:	sub    al,dl
  417a0a:	xchg   BYTE PTR [ebx+0x7d],dl
  417a0d:	(bad)  
  417a0e:	push   esi
  417a0f:	xchg   BYTE PTR [eax],ah
  417a11:	cmp    dh,BYTE PTR ds:0x3be1690d
  417a17:	jp     0x417a16
  417a19:	out    dx,al
  417a1a:	sahf   
  417a1b:	mov    WORD PTR [eax+ecx*2+0x3a],ds
  417a1f:	sub    al,dl
  417a21:	jp     0x417a81
  417a23:	mov    WORD PTR [edi+0x2a],es
  417a26:	je     0x417a56
  417a28:	inc    eax
  417a29:	jge    0x417a41
  417a2b:	sbb    esi,edi
  417a2d:	cli    
  417a2e:	pop    es
  417a2f:	push   cs
  417a30:	pop    ecx
  417a31:	inc    esi
  417a32:	xchg   esp,eax
  417a33:	lods   al,BYTE PTR ds:[esi]
  417a34:	in     eax,0xfe
  417a36:	adc    al,BYTE PTR [ebx+edi*2+0x46b0bc5a]
  417a3d:	ds stos BYTE PTR es:[edi],al
  417a3f:	scas   al,BYTE PTR es:[edi]
  417a40:	mov    ecx,0x148ca6d6
  417a45:	shr    BYTE PTR [ebx+0x76ff64ab],cl
  417a4b:	sbb    dh,al
  417a4d:	add    BYTE PTR [edx+0x63],0x21
  417a51:	call   DWORD PTR [esi-0x54d1bbc7]
  417a57:	aas    
  417a58:	jns    0x417a18
  417a5a:	sbb    cl,BYTE PTR [edx+0x7e]
  417a5d:	sub    edi,esi
  417a5f:	aaa    
  417a60:	dec    ecx
  417a61:	push   esi
  417a62:	out    dx,al
  417a63:	dec    esp
  417a64:	push   ds
  417a65:	sub    BYTE PTR [edx],bh
  417a67:	ss sub edi,edx
  417a6a:	pusha  
  417a6b:	sbb    DWORD PTR [esi],edi
  417a6d:	add    ebx,DWORD PTR [eax+0x36]
  417a70:	or     esi,edx
  417a72:	jmp    0x6143:0x9b82148c
  417a79:	inc    esi
  417a7a:	push   ss
  417a7b:	pusha  
  417a7c:	adc    ah,BYTE PTR [edx+0x66606b98]
  417a82:	xchg   esi,eax
  417a83:	cmp    dl,dl
  417a85:	dec    eax
  417a86:	jb     0x417a8e
  417a88:	or     esi,ecx
  417a8a:	inc    esi
  417a8b:	xor    BYTE PTR [edx-0x32faadb2],0xcf
  417a92:	add    WORD PTR [eax-0x6ea4de6],bp
  417a99:	cmp    cl,BYTE PTR [ebp+0xa024e81]
  417a9f:	arpl   WORD PTR [ebp-0xa],sp
  417aa2:	sbb    cl,BYTE PTR [edx-0x46]
  417aa5:	sub    eax,DWORD PTR [edx-0x29a926c9]
  417aab:	dec    edx
  417aac:	mov    bl,BYTE PTR [ecx]
  417aae:	sahf   
  417aaf:	jg     0x417b01
  417ab1:	data16 mov bl,BYTE PTR [edx]
  417ab4:	sbb    ecx,DWORD PTR ds:[edx+0x2f]
  417ab8:	or     DWORD PTR [edx-0x44],ebx
  417abb:	call   0x3673c305
  417ac0:	(bad)  
  417ac2:	mov    edi,0x32ca4690
  417ac7:	(bad)  
  417ac8:	xor    eax,0x47b0bc36
  417acd:	fidiv  WORD PTR [edx-0x69ca0a11]
  417ad3:	rcl    dl,1
  417ad5:	dec    eax
  417ad6:	inc    edx
  417ad7:	push   es
  417ad8:	cdq    
  417ad9:	into   
  417ada:	jmp    0xf934:0x7e02b797
  417ae1:	(bad)  
  417ae2:	lods   eax,DWORD PTR ds:[esi]
  417ae3:	cwde   
  417ae4:	fiadd  WORD PTR [edx-0x33e9c5e]
  417aea:	mov    dh,0x19
  417aec:	ret    0x8202
  417aef:	mov    ds:0x40bf2e33,eax
  417af4:	inc    esi
  417af5:	jb     0x417b29
  417af7:	jg     0x417b2d
  417af9:	jle    0x417aa5
  417afb:	test   al,0x52
  417afd:	add    BYTE PTR [esi],dh
  417aff:	xor    al,0x39
  417b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b02:	fidivr DWORD PTR [eax+0x74]
  417b05:	adc    BYTE PTR [edx],0x33
  417b08:	shl    DWORD PTR [esi+0x19ae0094],1
  417b0e:	sub    cl,BYTE PTR [edi-0x4f25f907]
  417b14:	je     0x417b80
  417b16:	and    BYTE PTR [edi+0x603ea659],al
  417b1c:	pop    esp
  417b1d:	sbb    bl,dh
  417b1f:	scas   eax,DWORD PTR es:[edi]
  417b20:	cdq    
  417b21:	pushf  
  417b22:	jmp    0xf37f:0x98f2721b
  417b29:	retf   0x3c96
  417b2c:	jae    0x417ab8
  417b2e:	mov    dl,0x2d
  417b30:	imul   ebx,DWORD PTR [edx+0x1b7e2a1a],0x5a492fd6
  417b3a:	fdiv   QWORD PTR [edi+esi*2+0x42]
  417b3e:	mov    dl,0x8b
  417b40:	popa   
  417b41:	(bad)  
  417b43:	ss ds ret 
  417b46:	fisub  WORD PTR [ecx]
  417b48:	(bad)  
  417b49:	std    
  417b4a:	mov    cl,0xe0
  417b4c:	cdq    
  417b4d:	dec    edx
  417b4e:	jb     0x417b34
  417b50:	and    al,BYTE PTR [ecx-0x71f61a38]
  417b56:	add    ch,BYTE PTR [eax-0x163ec09e]
  417b5c:	call   0xbf9d:0xdb3cb24e
  417b63:	adc    ecx,DWORD PTR [esi-0x6e50dd65]
  417b69:	mov    edx,0xbe913c36
  417b6e:	inc    eax
  417b6f:	add    al,0x51
  417b71:	push   0x1f
  417b73:	inc    ecx
  417b74:	rcr    BYTE PTR [esi],1
  417b76:	adc    BYTE PTR [ebx-0x43903e8c],al
  417b7c:	into   
  417b7d:	sub    DWORD PTR [ebx+edi*2+0x61],edi
  417b81:	fwait
  417b82:	cs cwde 
  417b84:	pop    edx
  417b85:	stos   BYTE PTR es:[edi],al
  417b86:	jb     0x417b3f
  417b88:	cmc    
  417b89:	ss xchg ecx,eax
  417b8b:	sub    edi,eax
  417b8d:	out    0x27,al
  417b8f:	mov    ch,0x8f
  417b91:	mov    edx,0x8e87cf85
  417b96:	stos   BYTE PTR es:[edi],al
  417b97:	fst    QWORD PTR [ebp+0x7b]
  417b9a:	rcr    BYTE PTR ss:[eax],cl
  417b9d:	mov    al,0x9c
  417b9f:	test   al,0x63
  417ba1:	sahf   
  417ba2:	xchg   edx,eax
  417ba3:	pushf  
  417ba4:	fidiv  WORD PTR [ecx]
  417ba6:	imul   ebx,DWORD PTR [eax+0x7e0b3b97],0xfe613617
  417bb0:	xchg   edx,eax
  417bb1:	out    dx,eax
  417bb2:	(bad)  
  417bb3:	ja     0x417b4b
  417bb5:	stos   BYTE PTR es:[edi],al
  417bb6:	cmp    BYTE PTR [esi],0x5
  417bb9:	xchg   edi,esp
  417bbb:	push   ecx
  417bbc:	dec    ecx
  417bbd:	and    DWORD PTR [eax+0x1d],esi
  417bc0:	fmul   st(6),st
  417bc2:	(bad)  
  417bc3:	mov    bh,0x7a
  417bc5:	pop    es
  417bc6:	mov    cs,WORD PTR ds:0xc95e5a9f
  417bcc:	sub    al,0x6
  417bce:	int3   
  417bcf:	sbb    eax,esi
  417bd1:	and    eax,0xdba828a
  417bd6:	xchg   BYTE PTR ds:0xb487ab29,dh
  417bdc:	sti    
  417bdd:	cmp    DWORD PTR [eax-0x7bd19ec5],edx
  417be3:	or     edx,DWORD PTR [eax+ebx*1+0x30413b80]
  417bea:	mov    BYTE PTR [eax+0x16],ch
  417bed:	int3   
  417bee:	xchg   ebp,eax
  417bef:	popa   
  417bf0:	cmp    BYTE PTR ds:0x446a014c,dh
  417bf6:	into   
  417bf7:	push   es
  417bf8:	test   esi,esp
  417bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfb:	dec    esp
  417bfc:	dec    ebx
  417bfd:	sbb    BYTE PTR [ebp-0x619b4667],dh
  417c03:	cmp    DWORD PTR [ecx],edx
  417c05:	loope  0x417c0e
  417c07:	lods   eax,DWORD PTR ds:[esi]
  417c08:	jnp    0x417c10
  417c0a:	sbb    ebx,DWORD PTR [eax+0x2b8b305e]
  417c10:	imul   ecx,DWORD PTR [ecx+0x3e780e75],0x2ff9c88b
  417c1a:	mov    al,BYTE PTR [ebx]
  417c1c:	adc    al,0x4d
  417c1e:	cmp    bl,BYTE PTR [ebx]
  417c20:	scas   eax,DWORD PTR es:[edi]
  417c21:	sbb    ecx,DWORD PTR [ebx+ebx*4+0x373349b4]
  417c28:	lea    esp,[ebp-0x4d480173]
  417c2e:	ins    BYTE PTR es:[edi],dx
  417c2f:	into   
  417c30:	push   edi
  417c31:	icebp  
  417c32:	icebp  
  417c33:	pop    es
  417c34:	lea    eax,[edx]
  417c36:	test   BYTE PTR [esi],0x7c
  417c39:	shl    BYTE PTR [esi+0x2b],cl
  417c3c:	pushf  
  417c3d:	sub    cl,ah
  417c3f:	fiadd  DWORD PTR [eax-0x35]
  417c42:	adc    eax,0x110c12cb
  417c47:	retf   
  417c48:	mov    esi,0xad19761a
  417c4d:	call   0x98bba2c5
  417c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c53:	sti    
  417c54:	and    al,0xeb
  417c56:	aad    0x31
  417c58:	adc    DWORD PTR [esi-0x242c66a],eax
  417c5e:	pop    es
  417c5f:	stc    
  417c60:	sbb    DWORD PTR [edx],0x1c32f5c9
  417c66:	lods   al,BYTE PTR ds:[esi]
  417c67:	sub    DWORD PTR es:[edi-0x2b],0xfffffffc
  417c6c:	add    eax,0x3f2c1a01
  417c71:	loop   0x417cd5
  417c73:	inc    esp
  417c74:	jle    0x417cb1
  417c76:	jmp    0xaf47:0x4d2e2ec4
  417c7d:	mov    gs,WORD PTR [ebx+esi*2-0x4a2f4e50]
  417c84:	mov    dl,0x14
  417c86:	jb     0x417d05
  417c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c89:	(bad)  
  417c8a:	(bad)  
  417c8c:	inc    esi
  417c8d:	inc    eax
  417c8e:	iret   
  417c8f:	rcl    BYTE PTR [ecx+0x72cb6a8b],1
  417c95:	not    BYTE PTR [ecx+0x24]
  417c98:	sub    DWORD PTR [ebp-0x14917ee8],ebp
  417c9e:	out    0x9e,eax
  417ca0:	addr16 mov edx,0x744ab1f7
  417ca7:	xlat   BYTE PTR ds:[ebx]
  417ca8:	mov    bl,0xd2
  417caa:	and    cx,WORD PTR [eax-0x701be483]
  417cb1:	ss aam 0xfa
  417cb4:	add    edi,ecx
  417cb6:	mov    ds:0x8282dd36,eax
  417cbb:	pop    ss
  417cbc:	in     al,0xb
  417cbe:	fnstsw WORD PTR [eax-0x69]
  417cc1:	sbb    al,0x49
  417cc3:	pop    ebx
  417cc4:	cld    
  417cc5:	sbb    ebp,DWORD PTR [esi+0xe]
  417cc8:	aas    
  417cc9:	cdq    
  417cca:	aaa    
  417ccb:	iret   
  417ccc:	and    BYTE PTR [ecx+ecx*2+0x7a083bcc],dl
  417cd3:	lods   eax,DWORD PTR ds:[esi]
  417cd4:	inc    esp
  417cd5:	xor    eax,0x99486d12
  417cda:	push   ebp
  417cdb:	in     eax,dx
  417cdc:	and    al,0xa
  417cde:	xor    ecx,edi
  417ce0:	cmc    
  417ce1:	or     al,0x1
  417ce3:	je     0x417d0e
  417ce5:	aaa    
  417ce6:	jb     0x417d28
  417ce8:	dec    ebp
  417ce9:	sub    ah,BYTE PTR [edx-0x34f48cc2]
  417cef:	scas   al,BYTE PTR es:[edi]
  417cf0:	push   0xe0f654af
  417cf5:	add    BYTE PTR [edx+0x79],dh
  417cf8:	dec    ebp
  417cf9:	ss je  0x417ce1
  417cfc:	xchg   edi,eax
  417cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfe:	pop    es
  417cff:	dec    ecx
  417d00:	sub    al,0x1
  417d02:	xchg   ecx,eax
  417d03:	sbb    al,0x6d
  417d05:	int3   
  417d06:	cmp    esi,edi
  417d08:	jle    0x417ca2
  417d0a:	dec    eax
  417d0b:	lds    edx,FWORD PTR ds:0x91c491eb
  417d11:	or     ecx,ebp
  417d13:	or     al,0x1e
  417d15:	mov    eax,0xcba3aff5
  417d1a:	data16 mov al,0x18
  417d1d:	stos   BYTE PTR es:[edi],al
  417d1e:	xchg   esp,eax
  417d1f:	and    esi,DWORD PTR [edi-0xb5813bf]
  417d25:	adc    bh,cl
  417d27:	cs aaa 
  417d29:	aam    0x9b
  417d2b:	lea    ebx,[edx]
  417d2d:	cs es and ebp,eax
  417d31:	push   edi
  417d32:	scas   al,BYTE PTR es:[edi]
  417d33:	dec    edx
  417d34:	pusha  
  417d35:	(bad)  
  417d36:	cmp    DWORD PTR [edi],esi
  417d38:	xor    al,0x30
  417d3a:	call   0x2d0a:0x9d885912
  417d41:	out    dx,ax
  417d43:	add    BYTE PTR [eax-0x6a],bh
  417d46:	add    al,0xd7
  417d48:	lahf   
  417d49:	cdq    
  417d4a:	push   cs
  417d4b:	adc    al,0x44
  417d4d:	push   esi
  417d4e:	xor    BYTE PTR [edi-0x4d],0x6d
  417d52:	fstp   st(6)
  417d54:	ret    
  417d55:	sbb    DWORD PTR [ebp+0x58ae95cc],eax
  417d5b:	les    esp,FWORD PTR [edx+0x7615490c]
  417d61:	in     eax,0x66
  417d63:	jg     0x417ddd
  417d65:	xchg   DWORD PTR [edx+edi*8-0x43],esi
  417d69:	push   ss
  417d6a:	in     al,dx
  417d6b:	jbe    0x417d8d
  417d6d:	stos   DWORD PTR es:[edi],eax
  417d6e:	and    al,0xec
  417d70:	rcl    esp,1
  417d72:	add    al,dh
  417d74:	push   ebp
  417d75:	inc    ecx
  417d76:	jne    0x417db0
  417d78:	mov    eax,0x70be63c9
  417d7d:	push   esi
  417d7e:	adc    eax,0x8805dcb0
  417d83:	jp     0x417d1f
  417d85:	in     eax,dx
  417d86:	mov    WORD PTR [edx],es
  417d88:	mov    eax,0xaa01c3a8
  417d8d:	push   ebx
  417d8e:	in     eax,0x96
  417d90:	sub    eax,eax
  417d92:	mov    eax,ds:0x64582ccc
  417d97:	and    ebp,edx
  417d99:	out    dx,eax
  417d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9b:	lahf   
  417d9c:	lea    eax,[ebx-0x2dcf8545]
  417da2:	fadd   QWORD PTR [eax-0x1f]
  417da5:	lock push esp
  417da7:	push   ebp
  417da8:	inc    edi
  417da9:	shr    BYTE PTR ss:[eax+0x1e],0x95
  417dae:	jb     0x417de1
  417db0:	rol    al,0xc0
  417db3:	rol    al,0xc0
  417db6:	rol    al,0xc0
  417db9:	rol    al,0xc0
  417dbc:	rol    al,0xc0
  417dbf:	rol    al,0xc0
  417dc2:	rol    al,0xc0
  417dc5:	rol    al,0xc0
  417dc8:	rol    al,0xc0
  417dcb:	rol    al,0xc0
  417dce:	rol    al,0xc0
  417dd1:	rol    al,0xc0
  417dd4:	rol    al,0xc0
  417dd7:	rol    al,0xc0
  417dda:	rol    al,0xc0
  417ddd:	rol    al,0xc0
  417de0:	rol    al,0xc0
  417de3:	rol    al,0xc0
  417de6:	rol    al,0xc0
  417de9:	rol    al,0xc0
  417dec:	rol    al,0xc0
  417def:	sar    BYTE PTR [ecx],0xe2
  417df2:	and    BYTE PTR ss:[edx],0xb
  417df6:	mov    esp,0x45ec2677
  417dfb:	cmp    edi,eax
  417dfd:	loop   0x417dce
  417dff:	pop    edx
  417e00:	dec    ecx
  417e01:	scas   al,BYTE PTR es:[edi]
  417e02:	adc    DWORD PTR [ebp+0xc],esp
  417e05:	mov    ch,al
  417e07:	pop    es
  417e08:	je     0x417e29
  417e0a:	lahf   
  417e0b:	jle    0x417e61
  417e0d:	hlt    
  417e0e:	jns    0x417dba
  417e10:	fdivr  DWORD PTR gs:[edx-0x27]
  417e14:	and    eax,0x7095c2b7
  417e19:	push   esp
  417e1a:	(bad)
  417e1e:	into   
  417e1f:	sub    ah,dh
  417e21:	aam    0xf6
  417e23:	mov    dl,0x55
  417e25:	dec    ecx
  417e26:	ret    
  417e27:	and    dh,BYTE PTR [edx+0x1c9eb700]
  417e2d:	add    edi,DWORD PTR [ebx]
  417e2f:	fmul   DWORD PTR [esi-0x6d858904]
  417e35:	cld    
  417e36:	retf   
  417e37:	adc    eax,0x7cf7800f
  417e3c:	or     eax,0xd1e3a572
  417e41:	fldl2t 
  417e43:	fisubr DWORD PTR [esi-0x9f3b84c]
  417e49:	mov    al,BYTE PTR [ebx+0x5e319734]
  417e4f:	or     eax,DWORD PTR [eiz*8-0x3dd27f92]
  417e56:	mov    esp,0xbe2461de
  417e5b:	repz pop ebp
  417e5d:	std    
  417e5e:	push   edx
  417e5f:	mov    BYTE PTR [ebx-0x5],cl
  417e62:	scas   al,BYTE PTR es:[edi]
  417e63:	adc    eax,0xdfb2b373
  417e68:	repz jno 0x417e2e
  417e6b:	adc    ebp,DWORD PTR ds:0x64cf9ebe
  417e71:	repz cli 
  417e73:	xchg   edx,eax
  417e74:	pop    ss
  417e75:	jge    0x417ea1
  417e77:	retf   0x1619
  417e7a:	dec    ebp
  417e7b:	dec    ecx
  417e7c:	xchg   edi,eax
  417e7d:	push   ebp
  417e7e:	mov    dh,0xd8
  417e80:	pusha  
  417e81:	fld    TBYTE PTR ss:[esp+edi*1+0x60]
  417e86:	jmp    0xcde8fdce
  417e8b:	or     ah,BYTE PTR [ebp+0x1]
  417e8e:	push   edx
  417e8f:	inc    esi
  417e90:	mov    bl,0x7
  417e92:	outs   dx,BYTE PTR ds:[esi]
  417e93:	xchg   edx,eax
  417e94:	sbb    BYTE PTR [ecx-0x11],ch
  417e97:	das    
  417e98:	cmp    eax,eax
  417e9a:	cwde   
  417e9b:	cmp    DWORD PTR [ebx],esp
  417e9d:	sbb    BYTE PTR [edi-0x1718809d],ch
  417ea3:	jnp    0x417e9f
  417ea5:	push   ds
  417ea6:	mov    al,ds:0x4d1af728
  417eab:	push   edi
  417eac:	pop    ss
  417ead:	sub    BYTE PTR [ecx-0x1bba2579],0xf8
  417eb4:	add    al,0xf
  417eb6:	xor    BYTE PTR ds:[ecx-0x17],bh
  417eba:	xor    BYTE PTR [esi],ch
  417ebc:	and    DWORD PTR [edx-0x302e55dc],edx
  417ec2:	push   cs
  417ec3:	out    0xeb,eax
  417ec5:	push   cs
  417ec6:	nop
  417ec7:	loope  0x417ea7
  417ec9:	jp     0x417f34
  417ecb:	cmp    BYTE PTR [eax+esi*8-0x8d5daf8],0x4c
  417ed3:	jae    0x417f47
  417ed5:	or     al,0x4a
  417ed7:	or     edi,DWORD PTR [ebx-0x77]
  417eda:	jbe    0x417ed2
  417edc:	stos   BYTE PTR es:[edi],al
  417edd:	sbb    eax,0xff6353d9
  417ee2:	aad    0x28
  417ee4:	pop    ds
  417ee5:	loop   0x417f30
  417ee7:	fbstp  TBYTE PTR [eax-0x25]
  417eea:	adc    ecx,DWORD PTR [esi+0x16]
  417eed:	loop   0x417ea6
  417eef:	imul   esp,DWORD PTR [edx+0x25],0xffffffef
  417ef3:	and    edx,edx
  417ef5:	dec    edi
  417ef6:	pushf  
  417ef7:	xchg   ebp,eax
  417ef8:	pop    esi
  417ef9:	lods   al,BYTE PTR ds:[esi]
  417efa:	pop    ebx
  417efb:	adc    DWORD PTR [ebp+0x56a5a918],ebp
  417f01:	cmp    BYTE PTR [ebx+0x32],ah
  417f04:	inc    esp
  417f05:	xor    BYTE PTR [ebx],bh
  417f07:	sbb    eax,0x94d65bfa
  417f0c:	adc    ebp,DWORD PTR [edi]
  417f0e:	sahf   
  417f0f:	sbb    esi,edx
  417f11:	push   cs
  417f12:	sbb    BYTE PTR [edx],ah
  417f14:	and    esi,DWORD PTR [eax]
  417f16:	cmp    eax,0x705d472b
  417f1b:	mov    BYTE PTR [ebp-0x77f3ec4f],bl
  417f21:	dec    esi
  417f22:	cmp    edi,DWORD PTR ds:0xc3302adc
  417f28:	add    eax,0x582c67ec
  417f2d:	inc    eax
  417f2e:	sub    al,0x2
  417f30:	xchg   ebp,eax
  417f31:	enter  0xac30,0x35
  417f35:	add    BYTE PTR [ecx+0x2b],dh
  417f38:	mov    edi,DWORD PTR [edi-0x19c0b1b5]
  417f3e:	icebp  
  417f3f:	mov    BYTE PTR [eax-0x21],dh
  417f42:	fwait
  417f43:	loopne 0x417f4a
  417f45:	push   cs
  417f46:	cld    
  417f47:	sub    al,0x5b
  417f49:	cmc    
  417f4a:	jmp    0x417f64
  417f4c:	ja     0x417f69
  417f4e:	inc    ebx
  417f4f:	add    dl,dh
  417f51:	mov    DWORD PTR [edi-0x742e7d37],esi
  417f57:	test   edi,ebp
  417f59:	pop    ecx
  417f5a:	cdq    
  417f5b:	xchg   edx,eax
  417f5d:	sub    eax,esi
  417f5f:	int3   
  417f60:	and    eax,0xc72254d
  417f65:	cli    
  417f66:	sbb    DWORD PTR [edi],eax
  417f68:	cmp    esi,DWORD PTR [edx-0x19]
  417f6b:	cmp    eax,0x55adb5c5
  417f70:	pushf  
  417f71:	and    al,0xea
  417f73:	test   eax,0xc3b9095c
  417f78:	stos   DWORD PTR es:[edi],eax
  417f79:	mov    eax,ds:0xd6550c8f
  417f7e:	push   0x7ece5d52
  417f83:	fiadd  WORD PTR [esi]
  417f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f86:	fld    TBYTE PTR [edx-0x4b4bb037]
  417f8c:	mov    eax,ds:0xfbf66b25
  417f91:	bound  edi,QWORD PTR [ecx+0x1e4e27c8]
  417f97:	pop    edx
  417f98:	jae    0x417f60
  417f9a:	pop    ss
  417f9b:	add    eax,0x4cd46052
  417fa0:	sbb    al,0xae
  417fa2:	mov    WORD PTR [esi+esi*2+0x6573a642],cs
  417fa9:	int3   
  417faa:	jp     0x417f35
  417fac:	inc    esi
  417fad:	push   es
  417fae:	call   0xb28b:0x42d255a6
  417fb5:	sub    edx,edi
  417fb7:	(bad)  
  417fb9:	jmp    0x4ebe:0x70e900d8
  417fc0:	inc    ecx
  417fc1:	retf   
  417fc2:	call   0x3b04:0x5c8129c5
  417fc9:	inc    eax
  417fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fcb:	call   0x96a1:0x3562424f
  417fd2:	test   al,0x89
  417fd4:	mov    edi,0x41cf2e74
  417fd9:	std    
  417fda:	test   eax,0xab834b7d
  417fdf:	xor    DWORD PTR [edi-0x52],edi
  417fe2:	outs   dx,BYTE PTR ds:[esi]
  417fe3:	dec    ebp
  417fe4:	push   ss
  417fe5:	sbb    ebx,DWORD PTR [ebp+0xac944af]
  417feb:	cmc    
  417fec:	inc    esi
  417fed:	pop    ss
  417fee:	push   0x5a9ec137
  417ff3:	shl    BYTE PTR [edx+0x18],0x92
  417ff7:	sub    DWORD PTR [ebp+0x68c9df09],0xb725b850
  418001:	popf   
  418002:	jo     0x417f90
  418004:	fisttp WORD PTR [edx-0x3b]
  418007:	jmp    0x41802a
  418009:	mov    ah,0xe
  41800b:	pop    edi
  41800c:	pop    ds
  41800d:	jae    0x41804c
  41800f:	push   eax
  418010:	and    al,0xd8
  418012:	pusha  
  418013:	loope  0x41804e
  418015:	dec    eax
  418016:	mov    al,0x20
  418018:	xor    eax,0x5c6dcece
  41801d:	add    ch,BYTE PTR [ebx]
  41801f:	add    ebp,DWORD PTR [ebx-0x7b]
  418022:	mov    esp,DWORD PTR [edx-0x3401efa0]
  418028:	jne    0x41806a
  41802a:	sbb    BYTE PTR [esi],bl
  41802c:	inc    ecx
  41802d:	mov    ebp,0x8304ec4a
  418032:	test   BYTE PTR [edi],0x6b
  418035:	outs   dx,BYTE PTR ds:[esi]
  418036:	sub    BYTE PTR [ecx+ebp*2-0x26],ch
  41803a:	and    al,0xc9
  41803c:	mov    dh,0x88
  41803e:	stc    
  41803f:	scas   eax,DWORD PTR es:[edi]
  418040:	cmp    eax,0x44b06bc9
  418045:	dec    eax
  418046:	xchg   ebp,eax
  418047:	ins    BYTE PTR es:[edi],dx
  418048:	scas   eax,DWORD PTR es:[edi]
  418049:	sub    cl,BYTE PTR [edx+0x66b84e09]
  41804f:	xor    esi,DWORD PTR [ecx]
  418051:	(bad)  
  418052:	pushf  
  418053:	pop    esi
  418055:	out    dx,al
  418056:	sbb    BYTE PTR [ebx],al
  418058:	jne    0x418037
  41805a:	mov    ds:0x3bbedae0,al
  41805f:	add    ch,BYTE PTR [esi]
  418061:	sbb    ah,BYTE PTR [esp+eiz*4]
  418064:	mov    esp,0x48a6157a
  418069:	aaa    
  41806a:	inc    esi
  41806b:	dec    esp
  41806c:	cwde   
  41806d:	cmp    al,BYTE PTR [ebx]
  41806f:	cs cdq 
  418071:	push   ds
  418072:	(bad)  
  418074:	pop    esp
  418075:	mov    gs,edx
  418077:	xchg   ecx,eax
  418078:	jnp    0x41804f
  41807a:	cmp    dh,BYTE PTR [ecx+0x2bb0a606]
  418080:	aad    0x67
  418082:	in     al,0xaa
  418084:	fimul  DWORD PTR [edx-0x48]
  418087:	xlat   BYTE PTR ds:[ebx]
  418088:	icebp  
  418089:	cmp    ebx,DWORD PTR [ebx]
  41808b:	adc    BYTE PTR [eax*1-0x695a615f],0xd1
  418093:	je     0x4180aa
  418095:	inc    ebp
  418096:	dec    eax
  418097:	push   0xe5d14f6e
  41809c:	push   ebx
  41809d:	mov    edi,0xfc93df68
  4180a2:	enter  0xd760,0x1d
  4180a6:	push   edx
  4180a7:	cld    
  4180a8:	test   esp,ebp
  4180aa:	jp     0x4180d9
  4180ac:	mov    eax,ds:0xf50ff6d5
  4180b1:	or     DWORD PTR [ebx+0x297c127c],esi
  4180b7:	stos   DWORD PTR es:[edi],eax
  4180b8:	add    al,0xe0
  4180ba:	push   cs
  4180bb:	neg    esi
  4180bd:	cmp    DWORD PTR [edx],0x6ff47962
  4180c3:	xchg   edx,eax
  4180c4:	(bad)  
  4180c5:	adc    al,0x44
  4180c7:	aad    0x61
  4180c9:	fisub  DWORD PTR [ebx+0x34]
  4180cc:	pop    edx
  4180cd:	mov    edx,0x1869eded
  4180d2:	(bad)  
  4180d3:	push   ebx
  4180d4:	loop   0x418058
  4180d6:	imul   edx,DWORD PTR [ebx-0x24],0xffffff9a
  4180da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180db:	iret   
  4180dc:	leave  
  4180dd:	jmp    0x111a5857
  4180e2:	mov    edx,0x5e325ef2
  4180e7:	scas   eax,DWORD PTR es:[edi]
  4180e8:	push   ebp
  4180e9:	xor    dl,dl
  4180eb:	(bad)  
  4180ec:	push   ds
  4180ed:	test   ah,dh
  4180ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f0:	nop
  4180f1:	fnstenv [esi]
  4180f3:	inc    esp
  4180f4:	cmp    al,0x9
  4180f6:	jne    0x4180fb
  4180f8:	popa   
  4180f9:	xor    DWORD PTR [eax-0x13],edi
  4180fc:	fstp   TBYTE PTR [edi+esi*8-0x1b3d80fa]
  418103:	call   0x2ba77c07
  418108:	in     eax,0x54
  41810a:	dec    ecx
  41810b:	inc    edx
  41810c:	mov    eax,0xcf835b32
  418111:	push   eax
  418112:	fidiv  DWORD PTR ds:0x4495749f
  418118:	push   cs
  418119:	ss dec edx
  41811b:	loop   0x418160
  41811d:	pop    edx
  41811e:	mov    BYTE PTR [ebx],0x2b
  418121:	inc    ecx
  418122:	mov    ebx,0x3abffbeb
  418127:	push   cs
  418128:	test   DWORD PTR [edi+0x1af0c1d],edx
  41812e:	int    0x62
  418130:	mov    ds,WORD PTR [ebp-0x23]
  418133:	pop    esp
  418134:	xchg   esp,eax
  418135:	dec    ebx
  418136:	repnz sbb ebp,ebp
  418139:	xor    eax,0xaa5c3df9
  41813e:	out    dx,al
  41813f:	pop    ss
  418140:	jle    0x4181bc
  418142:	(bad)  
  418143:	and    ecx,DWORD PTR [ecx-0x5e]
  418146:	push   0x1
  418148:	dec    esi
  418149:	jb     0x418189
  41814b:	sub    DWORD PTR [ecx],ebp
  41814d:	mov    edx,0x20c53bfa
  418152:	mov    DWORD PTR [ecx+0x24a8f7ee],ecx
  418158:	int    0x24
  41815a:	xchg   ebx,eax
  41815b:	setbe  dh
  41815e:	mov    dl,0x28
  418160:	mov    ch,0x36
  418162:	popf   
  418163:	das    
  418164:	mov    ch,bl
  418166:	xchg   ebp,eax
  418167:	push   edx
  418168:	clc    
  418169:	sbb    bh,dh
  41816b:	lahf   
  41816c:	cli    
  41816d:	push   ebp
  41816e:	mov    ah,0xee
  418170:	mov    dl,0x53
  418172:	xlat   BYTE PTR ds:[ebx]
  418173:	add    al,0x5c
  418175:	xchg   edi,eax
  418176:	mov    ch,0xef
  418178:	js     0x418144
  41817a:	movups XMMWORD PTR [esp+edx*1-0x2],xmm6
  41817f:	add    al,0x59
  418181:	push   edi
  418182:	mov    bl,0x1a
  418184:	fs lea ebp,cs:[edi+0x4d]
  418189:	popa   
  41818a:	(bad)  [ebx]
  41818c:	scas   al,BYTE PTR es:[edi]
  41818d:	js     0x4181e7
  41818f:	jno    0x4181b1
  418191:	pushf  
  418192:	cmp    DWORD PTR [edi+0x47],esi
  418195:	ins    DWORD PTR es:[edi],dx
  418196:	repz (bad) 
  418198:	rcl    BYTE PTR [edx-0x67],0xa0
  41819c:	fcomp  QWORD PTR [ebx-0x699a4e8d]
  4181a2:	and    ecx,DWORD PTR [esi+0x27]
  4181a5:	ja     0x418152
  4181a7:	jg     0x418134
  4181a9:	into   
  4181aa:	xchg   esi,eax
  4181ab:	and    ebx,DWORD PTR [ecx+0x7b8766bf]
  4181b1:	xor    eax,0x423102f2
  4181b6:	push   ds
  4181b7:	inc    ebp
  4181b8:	push   es
  4181b9:	adc    esi,edx
  4181bb:	push   eax
  4181bc:	mov    cl,0x5a
  4181be:	push   ds
  4181bf:	imul   eax,DWORD PTR [edx],0x6f4c4c8a
  4181c5:	push   edx
  4181c6:	push   ebx
  4181c7:	sbb    eax,0x386a826d
  4181cc:	fdiv   DWORD PTR [eax-0x26]
  4181cf:	pusha  
  4181d0:	push   edi
  4181d1:	jecxz  0x4181cd
  4181d3:	sub    ecx,DWORD PTR [edx-0x6c]
  4181d6:	shl    BYTE PTR [esi+0x56f21163],cl
  4181dc:	jne    0x41817c
  4181de:	retf   0xfad2
  4181e1:	shl    eax,1
  4181e3:	adc    bl,BYTE PTR [esi]
  4181e5:	mov    edx,0xd5aad678
  4181ea:	jmp    0x7ef0de8a
  4181ef:	sub    edi,DWORD PTR ds:0x8d014f06
  4181f5:	sbb    DWORD PTR [edi+0x35],0xffffff9e
  4181f9:	icebp  
  4181fa:	outs   dx,DWORD PTR ds:[esi]
  4181fb:	and    dl,BYTE PTR [ebp-0x59]
  4181fe:	fisubr WORD PTR [edx]
  418200:	js     0x4181cb
  418202:	(bad)  
  418203:	sub    edi,eax
  418205:	and    DWORD PTR [eax-0x664933ee],ebx
  41820b:	loopne 0x41822e
  41820d:	inc    ecx
  41820e:	pop    ds
  41820f:	mov    edx,DWORD PTR [esi]
  418211:	push   cs
  418212:	xchg   ebx,eax
  418213:	push   ebx
  418214:	in     al,dx
  418215:	ja     0x4181d5
  418217:	or     eax,0xc01ae6f0
  41821c:	mov    esp,0x5903c7a
  418221:	mov    cl,0x77
  418223:	mov    eax,ds:0x959b192f
  418228:	xchg   ebp,eax
  418229:	test   eax,0xe216e9c4
  41822e:	stos   BYTE PTR es:[edi],al
  41822f:	nop
  418230:	scas   eax,DWORD PTR es:[edi]
  418231:	xor    al,0xfa
  418233:	sub    ebx,DWORD PTR [edx]
  418235:	out    0xaa,al
  418237:	(bad)  
  418239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823a:	shl    BYTE PTR [esi+edi*4],cl
  41823d:	push   ds
  41823e:	pop    ss
  41823f:	or     BYTE PTR [ebp-0x59208846],0xd6
  418246:	dec    esi
  418247:	and    eax,0x535dd290
  41824c:	imul   BYTE PTR [eax+0xefb3963]
  418252:	add    al,0xb1
  418254:	inc    ebx
  418255:	fidivr DWORD PTR [edx+0x69]
  418258:	mov    ds:0xbd42342d,eax
  41825d:	pop    es
  41825e:	dec    eax
  41825f:	jge    0x4182c1
  418261:	es sub dl,al
  418264:	xchg   ebx,eax
  418265:	or     al,0x79
  418267:	inc    ecx
  418268:	test   DWORD PTR [ebx-0x1fea1a0d],0x2c6b1eb8
  418272:	xor    edi,DWORD PTR [edi-0x555628f2]
  418278:	in     al,0x2a
  41827a:	jno    0x418216
  41827c:	inc    ecx
  41827d:	xchg   ebx,eax
  41827e:	adc    eax,0xab4ab218
  418283:	std    
  418284:	xor    BYTE PTR ds:0xea45d480,dl
  41828a:	jbe    0x4182ff
  41828c:	jg     0x418240
  41828e:	pop    ecx
  41828f:	test   DWORD PTR ss:[ebx],esp
  418292:	loopne 0x4182e6
  418294:	adc    bl,BYTE PTR [eax]
  418296:	arpl   WORD PTR [eax+0xd8a1279],cx
  41829c:	mov    esi,0x7bef7027
  4182a1:	ror    BYTE PTR [edx],cl
  4182a3:	iret   
  4182a4:	out    dx,al
  4182a5:	outs   dx,DWORD PTR ds:[esi]
  4182a6:	cmovge esp,DWORD PTR [ebx+ebp*1+0x1392ac20]
  4182ae:	cli    
  4182af:	sub    edx,edi
  4182b1:	add    cl,BYTE PTR [esi+0x4c03a6da]
  4182b7:	in     al,dx
  4182b8:	sub    DWORD PTR [edx-0x696e8fd7],ebp
  4182be:	adc    BYTE PTR [eax+0x2],ah
  4182c1:	aas    
  4182c2:	pop    ebp
  4182c3:	and    edx,DWORD PTR [eax+0x73645231]
  4182c9:	sbb    eax,ebp
  4182cb:	sub    ch,BYTE PTR [ecx-0x26429a81]
  4182d1:	add    DWORD PTR [esi-0x14],0xffffffdd
  4182d5:	lods   eax,DWORD PTR ds:[esi]
  4182d6:	lods   al,BYTE PTR ds:[esi]
  4182d7:	mov    eax,ds:0xd9709105
  4182dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182dd:	sbb    BYTE PTR [esi],0xe5
  4182e0:	inc    ecx
  4182e1:	or     eax,0x15523113
  4182e6:	push   edi
  4182e7:	pop    edi
  4182e8:	iret   
  4182e9:	dec    ecx
  4182ea:	add    BYTE PTR [eax],bh
  4182ec:	shl    BYTE PTR [eax+edi*2],cl
  4182ef:	cli    
  4182f0:	jp     0x41832c
  4182f2:	std    
  4182f3:	pop    edx
  4182f4:	adc    DWORD PTR [ebp+0x36ffac37],ecx
  4182fa:	ror    BYTE PTR [ebx],cl
  4182fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fd:	pop    ebx
  4182fe:	mov    edi,cs
  418300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418301:	in     eax,0x4
  418303:	sub    eax,0xa26b5aae
  418308:	push   esi
  418309:	stos   BYTE PTR es:[edi],al
  41830a:	fisttp QWORD PTR [edi+0x1a0ee25a]
  418310:	(bad)  
  418311:	popf   
  418312:	popa   
  418313:	into   
  418314:	xor    ebp,DWORD PTR [esi-0x4a]
  418317:	adc    BYTE PTR [ebx],al
  418319:	out    dx,eax
  41831a:	and    BYTE PTR [ebp+0x6985c76],cl
  418320:	loop   0x418315
  418322:	cmp    eax,0xad234424
  418327:	cmp    eax,eax
  418329:	in     eax,dx
  41832a:	adc    eax,0xc11117d7
  41832f:	sub    eax,0xa0de47c
  418334:	push   0x189c0f46
  418339:	push   esp
  41833a:	retf   0xef7c
  41833d:	fnstcw WORD PTR [edi]
  41833f:	js     0x418305
  418341:	repz lahf 
  418343:	add    al,0xf6
  418345:	ret    
  418346:	div    bh
  418348:	jp     0x4183c6
  41834a:	adc    BYTE PTR [ebp+0x20],0x6c
  41834e:	imul   edi,DWORD PTR [ecx+0x5f],0x61
  418352:	mov    ds:0x85e77873,eax
  418357:	pop    eax
  418358:	xor    al,0x17
  41835a:	in     al,0xa1
  41835c:	sbb    eax,0x774d0e99
  418361:	dec    ebp
  418362:	mov    ch,0xad
  418364:	mov    DWORD PTR [esi-0x73],ecx
  418367:	add    BYTE PTR [edx+edx*8+0x168b9149],bl
  41836e:	mov    esp,0x76887891
  418373:	rol    ch,0x28
  418376:	jge    0x418346
  418378:	lods   al,BYTE PTR ds:[esi]
  418379:	lods   al,BYTE PTR ds:[esi]
  41837a:	mov    BYTE PTR [eax-0x22c72624],bl
  418380:	loope  0x4183c0
  418382:	jbe    0x418342
  418384:	stos   DWORD PTR es:[edi],eax
  418385:	xchg   edi,eax
  418386:	cld    
  418387:	imul   edi,DWORD PTR [esi],0x7a
  41838a:	jno    0x4183c5
  41838c:	pop    ecx
  41838d:	loop   0x418357
  41838f:	mov    BYTE PTR ds:0x134c0889,bh
  418395:	xchg   DWORD PTR [ebx-0x30],eax
  418398:	push   ds
  418399:	xor    esp,edi
  41839b:	sbb    bl,BYTE PTR [ecx+ebp*4]
  41839e:	inc    eax
  41839f:	push   ss
  4183a0:	test   BYTE PTR ds:0xf3714917,0x1d
  4183a7:	mov    ch,BYTE PTR [ebp+0x29]
  4183aa:	or     dl,BYTE PTR [eax+ebx*1+0x25]
  4183ae:	cmp    edx,eax
  4183b0:	aam    0x40
  4183b2:	add    eax,0x737c8049
  4183b7:	and    dh,0x97
  4183ba:	cld    
  4183bb:	push   0x26f23472
  4183c0:	test   BYTE PTR [esi+0x12c6f888],bl
  4183c6:	cmp    DWORD PTR [ebx],esi
  4183c8:	jp     0x418441
  4183ca:	adc    edi,DWORD PTR [esp+eiz*2+0x75]
  4183ce:	repz pop esi
  4183d0:	jae    0x418429
  4183d2:	cmp    eax,0x2bfef4f1
  4183d7:	loop   0x4183aa
  4183d9:	popa   
  4183da:	cmp    al,0x71
  4183dc:	pop    ebp
  4183dd:	adc    al,0x81
  4183df:	ror    BYTE PTR [esi],1
  4183e1:	popf   
  4183e2:	jmp    0x61c19489
  4183e7:	push   esp
  4183e8:	and    BYTE PTR [edx+0x116cfcf],bl
  4183ee:	aad    0xcf
  4183f0:	add    ecx,DWORD PTR [esi+0x6e]
  4183f3:	and    dl,BYTE PTR [ecx-0x6f]
  4183f6:	add    eax,0x60fbd2c3
  4183fb:	call   0xcf50:0x295c2482
  418402:	mov    fs,eax
  418404:	mov    eax,0x35954841
  418409:	rol    dl,1
  41840b:	jg     0x4183ab
  41840d:	sti    
  41840e:	test   BYTE PTR [edx+0x2c316aed],bl
  418414:	mov    dl,0xeb
  418416:	aad    0x72
  418418:	pop    ebp
  418419:	(bad)  
  41841b:	pop    edx
  41841c:	xchg   ecx,eax
  41841d:	sbb    al,0x11
  41841f:	jecxz  0x4183df
  418421:	jno    0x418455
  418423:	add    al,0xc3
  418425:	stos   BYTE PTR es:[edi],al
  418426:	sahf   
  418427:	jo     0x418487
  418429:	push   esp
  41842a:	add    BYTE PTR [ecx+0x2c00030f],0x86
  418431:	mov    eax,0xdf4249ad
  418436:	out    dx,al
  418437:	jne    0x4183ed
  418439:	into   
  41843a:	fidivr WORD PTR [edi]
  41843c:	ret    0x2bf6
  41843f:	mov    ah,0xe6
  418441:	cwde   
  418442:	and    cl,cl
  418444:	ror    BYTE PTR [edi+0x18],cl
  418447:	mov    edi,0x310e0674
  41844c:	loop   0x418460
  41844e:	mov    bl,0x77
  418450:	and    BYTE PTR [ebx-0x5],bh
  418453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418454:	dec    edi
  418455:	add    ecx,DWORD PTR [ebp+0x26371ebd]
  41845b:	adc    BYTE PTR [esp+eax*4-0x59],0x85
  418460:	pusha  
  418461:	push   ebp
  418462:	push   edi
  418463:	sub    DWORD PTR [ebp+esi*8-0x54277f0d],0x66f5b14
  41846e:	ins    BYTE PTR es:[edi],dx
  41846f:	sahf   
  418470:	loope  0x418450
  418472:	adc    al,0xb8
  418474:	push   ecx
  418475:	lds    eax,FWORD PTR [edx-0x255294b2]
  41847b:	in     eax,dx
  41847c:	retf   
  41847d:	aam    0x10
  41847f:	adc    DWORD PTR [ebx-0x33],0x51
  418483:	sbb    ebx,DWORD PTR [eax+0x54f11cb1]
  418489:	pop    eax
  41848a:	dec    ecx
  41848b:	xor    ebp,eax
  41848d:	and    ebp,DWORD PTR [eax-0x30f0c889]
  418493:	adc    al,0xc8
  418495:	inc    edi
  418496:	jecxz  0x41850e
  418498:	adc    eax,0x292b3fa1
  41849d:	outs   dx,BYTE PTR ds:[esi]
  41849e:	dec    edx
  41849f:	ror    dh,1
  4184a1:	and    edi,DWORD PTR [edx]
  4184a3:	add    al,0x7c
  4184a5:	mov    eax,0x9bdacc87
  4184aa:	add    BYTE PTR [edx],dh
  4184ac:	(bad)  
  4184ad:	imul   edx,DWORD PTR [eax+0x1386d23c],0xffffff9a
  4184b4:	inc    edx
  4184b5:	loop   0x41845f
  4184b7:	xor    DWORD PTR [edx+0x6e5a48f5],0x31
  4184be:	inc    ecx
  4184bf:	cld    
  4184c0:	mov    dh,dl
  4184c2:	leave  
  4184c3:	jbe    0x4184c6
  4184c5:	stos   DWORD PTR es:[edi],eax
  4184c6:	and    eax,0x944fb004
  4184cb:	fadd   st,st(0)
  4184cd:	push   ss
  4184ce:	sbb    BYTE PTR [esi-0x6ea666ab],dh
  4184d4:	int3   
  4184d5:	xchg   ebp,eax
  4184d6:	jo     0x418544
  4184d8:	mov    al,ds:0x56feb18f
  4184dd:	jge    0x41848b
  4184df:	dec    edi
  4184e0:	or     ebx,edx
  4184e2:	cmp    al,0xdd
  4184e4:	sbb    ah,BYTE PTR [ebp+0x6d60dfac]
  4184ea:	sbb    BYTE PTR [edi],cl
  4184ec:	and    ch,BYTE PTR [ebx-0x13]
  4184ef:	je     0x418479
  4184f1:	dec    esi
  4184f2:	stc    
  4184f3:	scas   eax,DWORD PTR es:[edi]
  4184f4:	jge    0x4184cf
  4184f6:	retf   
  4184f7:	mov    edx,?
  4184f9:	or     dl,dh
  4184fb:	ret    0x7c53
  4184fe:	dec    eax
  4184ff:	mov    esp,0x305edc22
  418504:	bound  ecx,QWORD PTR [eax+0x2d]
  418507:	in     al,0xae
  418509:	xlat   BYTE PTR ds:[ebx]
  41850a:	in     eax,0x1d
  41850c:	stos   BYTE PTR es:[edi],al
  41850d:	sbb    esp,edi
  41850f:	hlt    
  418510:	cwde   
  418511:	int3   
  418512:	test   ebx,esp
  418514:	ret    0xe5
  418517:	inc    edx
  418518:	xchg   edx,eax
  418519:	xor    al,0x6c
  41851b:	mov    bh,BYTE PTR [edi]
  41851d:	sbb    DWORD PTR [eax+0x46],esp
  418520:	cs xor eax,0x59901e62
  418526:	in     eax,dx
  418527:	inc    esi
  418528:	xor    al,0x2a
  41852a:	inc    eax
  41852b:	cdq    
  41852c:	dec    ebp
  41852d:	push   ebp
  41852e:	test   BYTE PTR ds:0x6255353c,dh
  418534:	inc    esi
  418535:	inc    esi
  418536:	mov    eax,0xf92142e1
  41853b:	jmp    0xb1f627b9
  418540:	fistp  WORD PTR [esi-0x16]
  418543:	sbb    eax,0x45191aa6
  418548:	mov    eax,0x31a4e4d0
  41854e:	fwait
  41854f:	cmp    al,0x78
  418551:	pop    ebx
  418552:	es ja  0x4184e2
  418555:	mov    ah,0x98
  418557:	sub    eax,0x5be9f21c
  41855c:	lds    edi,FWORD PTR [ebp+0x559bb553]
  418562:	dec    ecx
  418563:	pop    edx
  418564:	push   0x25
  418566:	sub    eax,0xe883727c
  41856c:	pop    ebx
  41856d:	cmp    ah,cl
  41856f:	ins    DWORD PTR es:[edi],dx
  418570:	aad    0x69
  418572:	or     BYTE PTR es:[ebx+0xeae4283],0xdc
  41857a:	or     DWORD PTR [esi+0x47],edi
  41857d:	(bad)  
  41857f:	pop    edx
  418580:	dec    eax
  418581:	sar    dl,cl
  418583:	mov    bh,BYTE PTR [ecx+ebp*4-0x6]
  418587:	addr16 dec edx
  418589:	sbb    ah,ch
  41858b:	out    0xee,eax
  41858d:	adc    eax,0x9f58c989
  418592:	inc    esi
  418593:	jmp    0x895c:0x4c435789
  41859a:	cmp    ebx,DWORD PTR [eax+0x2ef214e3]
  4185a0:	outs   dx,DWORD PTR ds:[esi]
  4185a1:	addr16 loop 0x41852e
  4185a4:	xchg   ecx,eax
  4185a5:	jp     0x41857d
  4185a7:	or     eax,0xd89bfa4a
  4185ac:	push   edx
  4185ad:	or     edi,0x78
  4185b0:	or     eax,0x32340f54
  4185b5:	sub    dh,BYTE PTR [edx+0x7]
  4185b8:	ds push ebp
  4185ba:	xchg   ecx,eax
  4185bb:	adc    eax,DWORD PTR [esi]
  4185bd:	stos   DWORD PTR es:[edi],eax
  4185be:	jle    0x4185f2
  4185c0:	rol    al,0xc0
  4185c3:	rol    al,0xc0
  4185c6:	rol    al,0xc0
  4185c9:	rol    al,0xc0
  4185cc:	rol    al,0xc0
  4185cf:	rol    al,0xc0
  4185d2:	rol    al,0xc0
  4185d5:	rol    al,0xc0
  4185d8:	rol    al,0xc0
  4185db:	rol    al,0xc0
  4185de:	rol    al,0xb5
  4185e1:	pop    ecx
  4185e2:	imul   ecx,DWORD PTR [esi+eax*8+0x4dc498a1],0x9cbd093f
  4185ed:	xor    eax,0x11a5305a
  4185f3:	sub    ecx,DWORD PTR [ecx-0xc366cc1]
  4185f9:	xor    eax,0xdb03821b
  4185fe:	test   al,0xd3
  418600:	ror    ah,0x1f
  418603:	push   cs
  418604:	mov    edx,0xe0233359
  418609:	xchg   edx,eax
  41860a:	mul    BYTE PTR [esp+ecx*1-0xc]
  41860e:	xor    edi,ebx
  418610:	and    DWORD PTR [esi+0x74],esp
  418613:	shl    DWORD PTR [ecx],0x59
  418616:	ins    BYTE PTR es:[edi],dx
  418617:	fnstcw WORD PTR [edi+0x72ee6f2a]
  41861d:	daa    
  41861e:	into   
  41861f:	ss mov bh,0xc2
  418622:	add    edi,ebp
  418624:	fld    TBYTE PTR [ebx]
  418626:	cdq    
  418627:	das    
  418628:	push   edx
  418629:	out    0xe,eax
  41862b:	push   ss
  41862c:	xchg   edx,eax
  41862d:	cs ja  0x418609
  418630:	push   edi
  418631:	add    bl,bl
  418633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418634:	cmp    al,0x32
  418636:	xor    DWORD PTR [esi-0x1d],0x38
  41863a:	dec    esi
  41863b:	mov    eax,ds:0x2e872efd
  418640:	xor    ch,BYTE PTR [edx+0x9ee1ef8]
  418646:	xchg   ebx,eax
  418647:	inc    eax
  418648:	fistp  DWORD PTR [ebx]
  41864a:	les    esp,FWORD PTR [ebx+0x8520ca2]
  418650:	dec    ebp
  418651:	in     ax,0xf7
  418654:	dec    ebx
  418655:	dec    ecx
  418656:	push   cs
  418657:	pop    es
  418658:	add    DWORD PTR [esp+ebp*4],edi
  41865b:	mul    DWORD PTR [eax-0x79]
  41865e:	ds add eax,0xb7b2d0fa
  418664:	adc    eax,0x2228a285
  418669:	test   al,0x29
  41866b:	cmc    
  41866c:	icebp  
  41866d:	mov    edi,0xeb650b9e
  418672:	sub    ebp,esp
  418674:	pop    es
  418675:	mov    edi,DWORD PTR [edx]
  418677:	out    dx,al
  418678:	es inc ebp
  41867a:	xchg   ebx,eax
  41867b:	mov    al,BYTE PTR [eax+0x3]
  41867e:	cwde   
  41867f:	into   
  418680:	test   ah,dh
  418682:	xchg   DWORD PTR [ecx+0x79],ebx
  418685:	cmp    esp,edi
  418687:	outs   dx,BYTE PTR ds:[esi]
  418688:	addr16 jmp 0xd5e0a804
  41868e:	pop    ecx
  41868f:	fnsave [edi+0x15ddd23c]
  418695:	dec    ebp
  418696:	jp     0x4186bd
  418698:	add    al,0xf5
  41869a:	and    DWORD PTR [eax+0x2],esi
  41869d:	mov    ch,0xd2
  41869f:	stos   DWORD PTR es:[edi],eax
  4186a0:	inc    ecx
  4186a1:	stos   BYTE PTR es:[edi],al
  4186a2:	retf   0x6d28
  4186a5:	out    0x5f,al
  4186a7:	ss rcl BYTE PTR ds:[ecx-0x68],cl
  4186ac:	pop    eax
  4186ad:	dec    ecx
  4186ae:	xor    ecx,DWORD PTR [eax+0x70]
  4186b1:	out    0x1f,eax
  4186b3:	sti    
  4186b4:	xchg   edi,eax
  4186b5:	in     al,dx
  4186b6:	mov    eax,0x9bdcb50c
  4186bb:	popf   
  4186bc:	mov    dh,0x51
  4186be:	mov    bl,0x66
  4186c0:	into   
  4186c1:	cmc    
  4186c2:	das    
  4186c3:	xlat   BYTE PTR ds:[ebx]
  4186c4:	jg     0x4186dd
  4186c6:	xor    dl,0xe
  4186c9:	jns    0x4186a6
  4186cb:	sbb    al,0x1f
  4186cd:	pop    ebp
  4186ce:	es in  eax,0x34
  4186d1:	jp     0x41867d
  4186d3:	jmp    0x7c30:0x7ac1ae2c
  4186da:	mov    cl,0x35
  4186dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186dd:	add    esi,ebp
  4186df:	pop    ds
  4186e0:	sub    dl,0x3a
  4186e3:	xchg   ebp,eax
  4186e4:	(bad)  
  4186e5:	jmp    0x19e67819
  4186ea:	sub    BYTE PTR [eax+0x60],0xe1
  4186ee:	lods   al,BYTE PTR ds:[esi]
  4186ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f0:	pop    ecx
  4186f1:	mov    al,ds:0x77f8c9a
  4186f6:	in     eax,dx
  4186f7:	pop    edi
  4186f8:	cli    
  4186f9:	nop
  4186fa:	xchg   bh,dh
  4186fc:	pop    eax
  4186fd:	mov    ebp,0x4c6d517f
  418702:	ret    
  418703:	out    dx,al
  418704:	shl    ch,1
  418706:	out    dx,al
  418707:	lock les ebp,FWORD PTR [eax-0x15d55887]
  41870e:	cli    
  41870f:	sub    bl,BYTE PTR ds:0x5495dd98
  418715:	sbb    bh,BYTE PTR [edx+0x70]
  418718:	mov    WORD PTR [esi+0x406bf44f],gs
  41871e:	push   esi
  41871f:	int3   
  418720:	das    
  418721:	lock xchg ebp,eax
  418723:	cmp    ch,BYTE PTR [ebp-0x51]
  418726:	sub    al,0x52
  418728:	mov    edx,DWORD PTR [esi+0x31]
  41872b:	pop    es
  41872c:	retf   
  41872d:	cli    
  41872e:	and    al,0xd0
  418730:	arpl   WORD PTR ds:0x94022061,si
  418736:	sbb    eax,0x9de0f1f7
  41873b:	iret   
  41873c:	(bad)  
  41873d:	inc    BYTE PTR [ebx-0x584627d]
  418743:	jle    0x418788
  418745:	sub    dh,BYTE PTR [ecx]
  418747:	xor    cl,BYTE PTR [edx-0x26]
  41874a:	ins    BYTE PTR es:[edi],dx
  41874b:	mov    ebp,DWORD PTR [eax-0xb]
  41874e:	push   ebp
  41874f:	scas   al,BYTE PTR es:[edi]
  418750:	out    0xde,eax
  418752:	lods   eax,DWORD PTR ds:[esi]
  418753:	sti    
  418754:	mov    ebp,0xb3091b03
  418759:	fwait
  41875a:	push   es
  41875b:	sbb    eax,DWORD PTR [esi-0x4f]
  41875e:	popf   
  41875f:	mov    bl,0xb3
  418761:	pusha  
  418762:	jb     0x41877d
  418764:	sbb    edi,esp
  418766:	mov    eax,ds:0xf59aae67
  41876b:	pop    eax
  41876c:	test   eax,0x7886bfe9
  418771:	(bad)  
  418773:	jbe    0x418797
  418775:	or     al,0xd8
  418777:	lds    ebp,FWORD PTR [ebx]
  418779:	ds jb  0x41874b
  41877c:	jmp    DWORD PTR [ebp-0x14]
  41877f:	dec    ebp
  418780:	enter  0x8da7,0x8b
  418784:	pop    eax
  418785:	pop    es
  418786:	out    0xbb,al
  418788:	sbb    al,0x71
  41878a:	mov    dh,bh
  41878c:	jp     0x4187cb
  41878e:	nop
  41878f:	loope  0x418772
  418791:	mov    DWORD PTR [ecx+0x1a],0x97c82473
  418798:	gs sahf 
  41879a:	aas    
  41879b:	aaa    
  41879c:	jno    0x4187fb
  41879e:	int3   
  41879f:	sbb    dh,BYTE PTR [ebp*8-0x37477e16]
  4187a6:	in     al,dx
  4187a7:	sub    edx,DWORD PTR [ebp+0x2a]
  4187aa:	xchg   esi,eax
  4187ab:	neg    DWORD PTR [ecx]
  4187ad:	fwait
  4187ae:	aaa    
  4187af:	xor    bl,ch
  4187b1:	aad    0x18
  4187b3:	jb     0x4187cb
  4187b5:	xchg   BYTE PTR [ebx],dh
  4187b7:	xor    ebx,0x1230c549
  4187bd:	mov    dh,0x45
  4187bf:	or     al,ah
  4187c1:	addr16 push 0xb1418f24
  4187c7:	jbe    0x41883c
  4187c9:	mov    BYTE PTR [ebx-0x7de4e092],dl
  4187cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d0:	(bad)  
  4187d1:	mov    cl,0x93
  4187d3:	mov    ecx,ss
  4187d5:	aaa    
  4187d6:	cmc    
  4187d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d8:	cli    
  4187d9:	fcomp  DWORD PTR [edx+0x3148b596]
  4187df:	and    al,0x44
  4187e1:	and    BYTE PTR [ebp+0x3c0f6b9b],dh
  4187e7:	popa   
  4187e8:	and    dh,BYTE PTR [edx]
  4187ea:	mov    eax,0xea4f0316
  4187ef:	jne    0x418844
  4187f1:	adc    al,0x92
  4187f3:	mov    BYTE PTR ds:0xb1339a0e,ch
  4187f9:	push   esp
  4187fa:	inc    ecx
  4187fb:	mov    DWORD PTR [esi],ebx
  4187fd:	int3   
  4187fe:	inc    ecx
  4187ff:	stos   BYTE PTR es:[edi],al
  418800:	mov    ebx,ds
  418802:	je     0x2b71925d
  418808:	dec    ecx
  418809:	pop    esi
  41880a:	addr16 add eax,0x2da96d22
  418810:	jnp    0x41879c
  418812:	nop
  418813:	adc    BYTE PTR [esi],bl
  418815:	mov    BYTE PTR [edi+0x7e],dl
  418818:	jo     0x418834
  41881a:	pop    ss
  41881b:	in     eax,dx
  41881c:	pop    ds
  41881d:	bound  ebx,QWORD PTR [edx-0x6d]
  418820:	push   0xffffffc6
  418822:	and    BYTE PTR [esi+ebp*1+0x35faed83],dh
  418829:	dec    ebx
  41882a:	mov    ebx,0xf9d6d8e8
  41882f:	shl    DWORD PTR [edx+0x260b4f5],0xbf
  418836:	sub    al,0xb
  418838:	cmp    ch,BYTE PTR [ebx]
  41883a:	lods   al,BYTE PTR ds:[esi]
  41883b:	outs   dx,BYTE PTR ds:[esi]
  41883c:	push   ds
  41883d:	or     cl,BYTE PTR [ecx-0xed71927]
  418843:	ins    DWORD PTR es:[edi],dx
  418844:	inc    eax
  418845:	add    dh,BYTE PTR [ecx+edi*2+0x6c9ba923]
  41884c:	xor    bl,BYTE PTR [edx+edx*2-0x68]
  418850:	jne    0x418836
  418852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418853:	pop    ebp
  418854:	mov    ah,0x12
  418856:	test   al,0x52
  418858:	jg     0x4188b0
  41885a:	lock lods eax,DWORD PTR ds:[esi]
  41885c:	or     DWORD PTR [ecx+0x16],0x95356384
  418863:	push   edi
  418864:	add    al,0x51
  418866:	clc    
  418867:	bound  ecx,QWORD PTR [ecx]
  418869:	les    ebp,FWORD PTR [edx]
  41886b:	(bad)  
  41886c:	ror    BYTE PTR [eax+esi*1],1
  41886f:	jnp    0x4188ac
  418871:	push   esp
  418872:	(bad)  
  418873:	pop    ebp
  418874:	xor    BYTE PTR [esi+0x44],al
  418877:	in     al,0x44
  418879:	aaa    
  41887a:	int    0xed
  41887c:	lods   eax,DWORD PTR ds:[esi]
  41887d:	(bad)  [edx-0x1a78c65f]
  418883:	add    ah,BYTE PTR [eax]
  418885:	sbb    eax,DWORD PTR [edi]
  418887:	fisubr DWORD PTR [ecx]
  418889:	dec    esi
  41888a:	add    esp,DWORD PTR [edi]
  41888c:	(bad)  
  41888e:	cmp    eax,0x1da361e
  418893:	and    al,BYTE PTR [edi+0x3]
  418896:	sbb    eax,0xdf4360e4
  41889b:	xor    dl,BYTE PTR [ebp+0x78]
  41889e:	lods   al,BYTE PTR ds:[esi]
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	mov    eax,ds:0x36b8dde2
  4188a5:	mov    bh,0x70
  4188a7:	xlat   BYTE PTR ds:[ebx]
  4188a8:	cli    
  4188a9:	int    0x97
  4188ab:	adc    BYTE PTR [esi],ch
  4188ad:	inc    ebx
  4188ae:	push   esi
  4188af:	and    eax,0x64d49a2d
  4188b4:	pusha  
  4188b5:	push   eax
  4188b6:	cmp    BYTE PTR [edi-0x63],dl
  4188b9:	pop    esi
  4188ba:	adc    eax,0x498b7213
  4188bf:	gs aas 
  4188c1:	pop    ds
  4188c2:	gs pop ecx
  4188c4:	or     ebx,DWORD PTR [ecx+0x22]
  4188c7:	adc    eax,0x49ddce61
  4188cc:	push   0x48
  4188ce:	out    dx,eax
  4188cf:	pop    es
  4188d0:	jns    0x418947
  4188d2:	ror    BYTE PTR [ecx],cl
  4188d4:	or     DWORD PTR [ecx+0x35524dde],edi
  4188da:	xchg   BYTE PTR [edi+0xac85c4a],dl
  4188e0:	jge    0x4188bf
  4188e2:	xlat   BYTE PTR ds:[ebx]
  4188e3:	inc    ebp
  4188e4:	cdq    
  4188e5:	or     edi,0x2dd58ae3
  4188eb:	ins    DWORD PTR es:[edi],dx
  4188ec:	cmp    al,0x2e
  4188ee:	inc    edi
  4188ef:	arpl   WORD PTR [ecx-0xa],bx
  4188f2:	jp     0x418971
  4188f4:	fdiv   QWORD PTR [ebp+0x10ca85c1]
  4188fa:	aaa    
  4188fb:	xor    al,0xd1
  4188fd:	push   ss
  4188fe:	cmp    ch,BYTE PTR [edi]
  418900:	xor    eax,0x371fc72
  418905:	push   esi
  418906:	xchg   ecx,eax
  418907:	cs cdq 
  418909:	fsubr  DWORD PTR [ebx+0x43]
  41890c:	mov    edx,esp
  41890e:	(bad)  
  41890f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418910:	mov    al,bh
  418912:	sti    
  418913:	jl     0x418988
  418915:	add    dh,bl
  418917:	iret   
  418918:	adc    esi,DWORD PTR [ecx+esi*2-0x70b65ace]
  41891f:	test   esp,esi
  418921:	xor    eax,0xa392708d
  418926:	inc    esp
  418927:	mul    DWORD PTR [esi+0x10]
  41892a:	jbe    0x41895f
  41892c:	or     al,0x9d
  41892e:	cwde   
  41892f:	lea    esi,[ebx]
  418931:	sub    al,BYTE PTR [edx]
  418933:	and    DWORD PTR [ebp+0x515b0b3c],edx
  418939:	mov    eax,ds:0x283c214a
  41893e:	mov    dh,BYTE PTR [esi]
  418940:	add    edx,DWORD PTR [ebp-0x1596c1e0]
  418946:	xchg   DWORD PTR [eax+0x79],edx
  418949:	sbb    edi,DWORD PTR [ecx]
  41894b:	ja     0x418977
  41894d:	or     DWORD PTR [ecx*2+0x735da9b2],ebp
  418954:	pop    esp
  418955:	adc    dl,BYTE PTR [edx-0x6b]
  418958:	je     0x4188f2
  41895a:	sbb    eax,0xac2a35cc
  41895f:	int3   
  418960:	jo     0x418943
  418962:	scas   al,BYTE PTR es:[edi]
  418963:	iret   
  418964:	repz cmp dh,BYTE PTR [edx+0x18]
  418968:	stos   BYTE PTR es:[edi],al
  418969:	aaa    
  41896a:	lds    edx,FWORD PTR [ebp-0x1c6da661]
  418970:	aam    0xd7
  418972:	adc    ch,BYTE PTR [esi]
  418974:	adc    BYTE PTR [eax-0x62],dl
  418977:	jno    0x418948
  418979:	xor    DWORD PTR [ecx+0x1e706cd4],0xffffffe0
  418980:	(bad)  
  418981:	iret   
  418982:	sbb    eax,0xd88513f
  418987:	ror    edx,cl
  418989:	sub    DWORD PTR [eax],ecx
  41898b:	dec    ebp
  41898c:	mov    ds:0x98c3f02f,al
  418991:	mov    edx,0x4f6d6214
  418996:	mov    ah,0x71
  418998:	and    DWORD PTR [edx+0x0],0xfc13fd9b
  41899f:	out    dx,al
  4189a0:	sub    al,0x4f
  4189a2:	fdiv   QWORD PTR [esp+eax*8-0x1b1b97a7]
  4189a9:	call   0x742d:0x6da745d0
  4189b0:	push   0x450dbd61
  4189b5:	in     al,0xb6
  4189b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b8:	inc    ebx
  4189b9:	mov    esi,0x785246f4
  4189be:	push   edx
  4189bf:	call   0xf8791ad6
  4189c4:	and    esi,DWORD PTR [esi]
  4189c6:	ins    DWORD PTR es:[edi],dx
  4189c7:	jnp    0x4189f0
  4189c9:	test   al,0x56
  4189cb:	loopne 0x4189be
  4189cd:	push   esi
  4189ce:	add    eax,0xcffc6d43
  4189d3:	ret    0x55db
  4189d6:	rcr    DWORD PTR [eax-0x38],1
  4189d9:	mov    ah,0x9c
  4189db:	and    ch,cl
  4189dd:	cmp    BYTE PTR ds:[ebp+0x3a56af88],cl
  4189e4:	xchg   edx,eax
  4189e5:	and    DWORD PTR ds:0x9a8f2dc5,edx
  4189eb:	shr    BYTE PTR [edi+0x4],1
  4189ee:	inc    eax
  4189ef:	add    esi,ebp
  4189f1:	and    BYTE PTR [ebx-0x6a],bl
  4189f4:	jns    0x418a10
  4189f6:	mov    edi,0x951b2d03
  4189fb:	bound  ebp,QWORD PTR [edx]
  4189fd:	div    esi
  4189ff:	add    esi,ebp
  418a01:	shl    DWORD PTR [edi-0x11],1
  418a04:	mov    dl,0xe1
  418a06:	cmovge ecx,DWORD PTR [ecx-0x75d94c16]
  418a0d:	xchg   ecx,eax
  418a0e:	lahf   
  418a0f:	clc    
  418a10:	out    0x3a,eax
  418a12:	bound  ecx,QWORD PTR [ebx]
  418a14:	ror    BYTE PTR [ecx+ecx*4],1
  418a17:	cld    
  418a18:	sbb    edx,ebx
  418a1a:	push   cs
  418a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1c:	mov    ds:0x2cab2282,al
  418a21:	leave  
  418a22:	gs inc ebx
  418a24:	add    esi,DWORD PTR [edi]
  418a26:	pusha  
  418a27:	js     0x4189cb
  418a29:	pushf  
  418a2a:	mov    ds:0x8f81bf04,eax
  418a2f:	mov    ebx,0x58ad8d54
  418a34:	gs jl  0x418aa3
  418a37:	or     BYTE PTR [ecx-0x56],bl
  418a3a:	jmp    0xfd5fe7e9
  418a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a40:	jge    0x4189ed
  418a42:	push   0xffffffab
  418a44:	lods   eax,DWORD PTR ds:[esi]
  418a45:	test   al,0xb0
  418a47:	inc    ecx
  418a48:	xchg   esi,eax
  418a49:	xchg   edx,eax
  418a4a:	ja     0x418ac0
  418a4c:	ret    
  418a4d:	mov    ds:0x7bc93bac,al
  418a52:	int3   
  418a53:	bound  ebp,QWORD PTR [ebx-0x3030c7a1]
  418a59:	lods   eax,DWORD PTR ds:[esi]
  418a5a:	jmp    0x4415:0xa2d8fba3
  418a61:	dec    edx
  418a62:	adc    eax,0x7b318158
  418a67:	mov    BYTE PTR [ebx],dh
  418a69:	or     BYTE PTR [ebx],bl
  418a6b:	pop    ebp
  418a6c:	add    al,BYTE PTR [ebx+0xd0363d1]
  418a72:	cli    
  418a73:	sub    BYTE PTR [edx],0x12
  418a76:	sbb    edx,DWORD PTR [ebx-0x31]
  418a79:	push   0xffffffb5
  418a7b:	popa   
  418a7c:	call   0x416b1f18
  418a81:	cld    
  418a82:	add    al,0x94
  418a84:	std    
  418a85:	push   ds
  418a86:	add    ecx,DWORD PTR [ecx+0x39f64e2]
  418a8c:	cs loop 0x418ab2
  418a8f:	stos   DWORD PTR es:[edi],eax
  418a90:	call   0x438de6f2
  418a95:	(bad)  
  418a96:	scas   al,BYTE PTR es:[edi]
  418a97:	les    edi,FWORD PTR [bx+si-0x6816]
  418a9c:	mov    BYTE PTR [esi-0x190a520e],dl
  418aa2:	es mov dl,0x14
  418aa5:	loop   0x418a2d
  418aa7:	push   esp
  418aa8:	pop    ss
  418aa9:	call   0x1398fb5d
  418aae:	adc    ebx,ecx
  418ab0:	je     0x418a80
  418ab2:	mov    edx,0x940c162e
  418ab7:	mov    eax,ds:0xe62be80d
  418abc:	mov    esi,cs
  418abe:	stos   DWORD PTR es:[edi],eax
  418abf:	scas   eax,DWORD PTR es:[edi]
  418ac0:	jo     0x418a4e
  418ac2:	mov    edi,0x43506859
  418ac7:	fwait
  418ac8:	mov    dh,cl
  418aca:	fistp  QWORD PTR [esp+ebp*1]
  418acd:	pushf  
  418ace:	pop    ds
  418acf:	ror    BYTE PTR [esi+0x1f2825b7],0xf2
  418ad6:	aam    0xce
  418ad8:	out    dx,eax
  418ad9:	int3   
  418ada:	sbb    BYTE PTR [eax+0x62],0x3a
  418ade:	inc    ebp
  418adf:	and    esi,DWORD PTR [esi-0x79]
  418ae2:	lahf   
  418ae3:	mov    dh,0xab
  418ae5:	cmp    dh,BYTE PTR [edx+0x28]
  418ae8:	xor    dh,al
  418aea:	jbe    0x418b5a
  418aec:	sub    DWORD PTR [eax],eax
  418aee:	sub    dh,BYTE PTR [ebx+ebx*2-0xf]
  418af2:	call   DWORD PTR [ebx]
  418af4:	inc    esi
  418af5:	sqrtps xmm0,xmm5
  418af8:	arpl   WORD PTR [ebp+ebx*2+0x5b],bx
  418afc:	add    DWORD PTR [eax+0x6c7b588c],ebx
  418b02:	sti    
  418b03:	rcl    DWORD PTR [edx],0x35
  418b06:	repnz adc edi,ebp
  418b09:	cli    
  418b0a:	mov    bl,0x68
  418b0c:	adc    bl,BYTE PTR [eax+ebp*2-0x6e]
  418b10:	bound  esp,QWORD PTR [eax+edi*2+0x1cb54eda]
  418b17:	add    BYTE PTR [ebx+0x76],dl
  418b1a:	cmp    eax,0x5cdf9495
  418b1f:	jle    0x418b4a
  418b21:	cmp    al,BYTE PTR [edi]
  418b23:	sbb    al,0xe5
  418b25:	or     ebp,esi
  418b27:	mov    ds:0xb931832f,al
  418b2c:	test   eax,0x8d0a7f41
  418b31:	add    ecx,DWORD PTR [edx+0x7d5cc92f]
  418b37:	in     al,dx
  418b38:	add    ebp,DWORD PTR [eax+0x2a]
  418b3b:	dec    esi
  418b3c:	mov    bl,0x1b
  418b3e:	repz loope 0x418ac7
  418b41:	push   ebp
  418b42:	xor    al,BYTE PTR [edx+0x1e]
  418b45:	imul   edi,DWORD PTR [esi+0x23],0x1e
  418b49:	inc    esi
  418b4a:	div    esp
  418b4c:	adc    DWORD PTR ds:0xba11025b,0x715fa86d
  418b56:	mov    esi,0x69520bc6
  418b5b:	loopne 0x418bce
  418b5d:	sbb    BYTE PTR [ecx+0x42aea2c1],0xbf
  418b64:	sbb    BYTE PTR [edi+0x16],ah
  418b67:	push   0x5ab54dea
  418b6c:	pop    esi
  418b6d:	loopne 0x418b3a
  418b6f:	xchg   DWORD PTR [eax-0x12a75160],edx
  418b75:	add    al,0x66
  418b77:	mov    ds:0x571ae4d2,eax
  418b7c:	pop    edi
  418b7d:	inc    ebx
  418b7e:	inc    edi
  418b7f:	push   ss
  418b80:	adc    esi,edi
  418b82:	xchg   edx,eax
  418b83:	lds    ebp,FWORD PTR cs:[eax+edx*1+0x77]
  418b88:	out    0x29,al
  418b8a:	test   DWORD PTR [esi+0x205db18b],eax
  418b90:	and    eax,0x85bae2be
  418b95:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418b97:	mov    dl,0x2c
  418b99:	mov    ?,eax
  418b9b:	neg    DWORD PTR [edi]
  418b9d:	cmp    ecx,esp
  418b9f:	jge    0x418b6f
  418ba1:	into   
  418ba2:	xchg   esi,eax
  418ba3:	loopne 0x418ba8
  418ba5:	push   edx
  418ba6:	adc    edi,DWORD PTR [ebp+0x29]
  418ba9:	jb     0x418b34
  418bab:	or     eax,DWORD PTR [ebx]
  418bad:	push   es
  418bae:	xor    eax,0xd6ff8fcb
  418bb4:	ins    BYTE PTR es:[edi],dx
  418bb5:	sti    
  418bb6:	not    BYTE PTR [esi+edi*1-0x32]
  418bba:	retf   
  418bbb:	call   0x167d:0x4fb26052
  418bc2:	lahf   
  418bc3:	dec    esp
  418bc4:	mov    ah,0x42
  418bc6:	or     dl,ah
  418bc8:	dec    ecx
  418bc9:	in     al,dx
  418bca:	sbb    DWORD PTR [eax-0x19],edi
  418bcd:	ja     0x298c0560
  418bd3:	pusha  
  418bd4:	push   ds
  418bd5:	xor    DWORD PTR [eax+0x34],0xe608f499
  418bdc:	fwait
  418bdd:	push   ds
  418bde:	sbb    eax,0x19b2a556
  418be4:	dec    esi
  418be5:	mov    ds:0xbd9b8ded,eax
  418bea:	pushf  
  418beb:	mov    eax,ds:0x52899fac
  418bf0:	push   esp
  418bf1:	into   
  418bf2:	leave  
  418bf3:	ss cld 
  418bf5:	inc    ebp
  418bf6:	call   0x6533:0xbc57ed21
  418bfd:	push   edi
  418bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bff:	pop    edx
  418c00:	or     dh,dh
  418c02:	jmp    0x418c08
  418c04:	cld    
  418c05:	mov    fs:0x2faee128,al
  418c0b:	scas   eax,DWORD PTR es:[edi]
  418c0c:	jo     0x418bb8
  418c0e:	xchg   ebp,eax
  418c0f:	jecxz  0x418c0f
  418c11:	icebp  
  418c12:	out    0x68,al
  418c14:	sub    ebp,DWORD PTR [ecx-0x1d7acac]
  418c1a:	xchg   ecx,eax
  418c1b:	sub    BYTE PTR [eax],bh
  418c1d:	pop    es
  418c1e:	add    eax,0x71be99c3
  418c23:	cmp    dh,bl
  418c25:	dec    edi
  418c26:	sbb    BYTE PTR [edx],ch
  418c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c29:	ror    DWORD PTR [ebp-0x9],0x4f
  418c2d:	cmp    al,0xc8
  418c2f:	jo     0x418c25
  418c31:	stos   DWORD PTR es:[edi],eax
  418c32:	jbe    0x418bd2
  418c34:	jbe    0x418bfd
  418c36:	data16 std 
  418c38:	adc    cl,0x24
  418c3b:	adc    DWORD PTR [eax+0x3e],0x1617d0f8
  418c42:	sub    ebx,DWORD PTR [eax+0x7a]
  418c45:	sbb    al,0x89
  418c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c48:	sar    edx,0xad
  418c4b:	inc    ecx
  418c4c:	push   eax
  418c4d:	pop    ebp
  418c4e:	(bad)  
  418c4f:	je     0x418c68
  418c51:	sti    
  418c52:	inc    eax
  418c53:	inc    esp
  418c55:	pop    ecx
  418c56:	inc    eax
  418c57:	or     eax,0xf20c8184
  418c5c:	or     DWORD PTR [ebx-0x20f6f8f4],edx
  418c62:	push   esi
  418c63:	les    ebx,FWORD PTR [edx]
  418c65:	iret   
  418c66:	mov    al,BYTE PTR [ebp+eax*8+0x1824dbe5]
  418c6d:	adc    eax,0x255935f2
  418c72:	mov    ch,0x3d
  418c74:	xor    eax,0x78c3af4d
  418c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c7a:	pop    ss
  418c7b:	dec    ebp
  418c7c:	jp     0x418c2c
  418c7e:	test   eax,0xa3dedcaf
  418c83:	inc    al
  418c85:	cs mov ebx,0x787af043
  418c8b:	ret    
  418c8c:	mov    bh,0x3c
  418c8e:	mov    ds:0x76a7b205,al
  418c93:	js     0x418d0c
  418c95:	lahf   
  418c96:	out    0x1d,eax
  418c98:	jnp    0x418ca6
  418c9a:	sub    al,BYTE PTR [edx-0x56]
  418c9d:	mov    al,ds:0x8a4a1b37
  418ca2:	pop    esi
  418ca3:	jns    0x418ceb
  418ca5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca7:	inc    ebx
  418ca8:	loope  0x418c98
  418caa:	fimul  DWORD PTR [ebx+eax*8+0x4830559]
  418cb1:	jmp    0xf9256d6d
  418cb6:	xchg   esi,eax
  418cb7:	mov    bh,BYTE PTR [edx+0x5b]
  418cba:	stos   BYTE PTR es:[edi],al
  418cbb:	pop    edx
  418cbc:	les    ecx,FWORD PTR [edx+0x7a440c3a]
  418cc2:	jbe    0x418c8e
  418cc4:	cmp    DWORD PTR fs:[ebx],edi
  418cc7:	loope  0x418ca9
  418cc9:	xor    bl,BYTE PTR [ecx+0x5b]
  418ccc:	dec    esi
  418ccd:	or     DWORD PTR [esi],edi
  418ccf:	sahf   
  418cd0:	lods   eax,DWORD PTR ds:[esi]
  418cd1:	clc    
  418cd2:	push   0xffffffe9
  418cd4:	cwde   
  418cd5:	mov    eax,ds:0x9d607931
  418cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cdb:	or     eax,0x7480b8e3
  418ce0:	jg     0x418d3a
  418ce2:	sub    ebp,esp
  418ce4:	jns    0x418c74
  418ce6:	repz in eax,dx
  418ce8:	lock push edi
  418cea:	xchg   ecx,eax
  418ceb:	test   eax,0xefb81a16
  418cf0:	mov    DWORD PTR [ebx+ebp*8-0x490cfce6],edi
  418cf7:	xchg   BYTE PTR [ecx+ecx*8+0x5f72c5a9],bl
  418cfe:	mov    ebp,0x49364e42
  418d03:	sub    eax,0x9d8c7c7a
  418d08:	adc    edi,0x2aeee0cf
  418d0e:	fisub  WORD PTR [edi+0xef9d73d]
  418d14:	push   edx
  418d15:	cmc    
  418d16:	lahf   
  418d17:	xlat   BYTE PTR ds:[ebx]
  418d18:	mov    eax,0x44f96f41
  418d1d:	adc    dl,BYTE PTR [ebp+0x60]
  418d20:	aad    0xfe
  418d22:	leave  
  418d23:	addr16 int 0x89
  418d26:	lds    esi,FWORD PTR ds:0x48ab5faa
  418d2c:	dec    edx
  418d2d:	push   es
  418d2e:	xor    edx,DWORD PTR [eax+0x204ef0bd]
  418d34:	js     0x418d4e
  418d36:	xor    DWORD PTR [edx],ebx
  418d38:	mov    eax,ds:0x107825c3
  418d3d:	lahf   
  418d3e:	(bad)  
  418d3f:	xchg   esp,eax
  418d40:	aas    
  418d41:	repz pop eax
  418d43:	xor    eax,0x8c6d6cc5
  418d48:	push   eax
  418d49:	ret    0xfe3
  418d4c:	inc    eax
  418d4d:	mov    ah,0x4d
  418d4f:	aad    0xf7
  418d51:	arpl   WORD PTR [esi],dx
  418d53:	dec    ecx
  418d54:	push   ecx
  418d55:	or     ecx,esi
  418d57:	push   esp
  418d58:	hlt    
  418d59:	xor    ebx,edx
  418d5b:	addr16 xchg edx,eax
  418d5d:	mov    ecx,0xb639d754
  418d62:	sub    BYTE PTR [ecx],ah
  418d64:	inc    esp
  418d65:	outs   dx,BYTE PTR ds:[esi]
  418d66:	inc    esi
  418d67:	das    
  418d68:	push   edi
  418d69:	dec    edi
  418d6a:	mov    BYTE PTR [ebp+0x52],ch
  418d6d:	retf   
  418d6e:	push   ds
  418d6f:	int3   
  418d70:	jb     0x418d68
  418d72:	adc    eax,0xb728bd46
  418d77:	sahf   
  418d78:	mov    cs,WORD PTR [esi]
  418d7a:	std    
  418d7b:	daa    
  418d7c:	mov    esi,0x4ed4a346
  418d81:	repnz mov BYTE PTR [edi],ah
  418d84:	push   ds
  418d85:	push   0x7
  418d87:	and    DWORD PTR es:[ebx+0x10],ecx
  418d8b:	mov    dh,0x6a
  418d8d:	adc    al,0x33
  418d8f:	dec    edx
  418d90:	xchg   BYTE PTR [ecx-0xb],dh
  418d93:	push   ebp
  418d94:	push   0xffffff9d
  418d96:	xor    dl,BYTE PTR [ebx]
  418d98:	sar    esi,cl
  418d9a:	mov    esi,0xe37d691b
  418d9f:	adc    ah,BYTE PTR ds:0xc7c820f2
  418da5:	fcmovne st,st(0)
  418da7:	push   0xe1a75e73
  418dac:	and    eax,DWORD PTR [eax+0x39]
  418daf:	add    eax,0xc0c0c0c0
  418db5:	rol    al,0xc0
  418db8:	rol    al,0xc0
  418dbb:	rol    al,0xc0
  418dbe:	rol    al,0xc0
  418dc1:	rol    al,0xc0
  418dc4:	rol    al,0xc0
  418dc7:	rol    al,0xc0
  418dca:	rol    al,0xc0
  418dcd:	rol    al,0xc0
  418dd0:	rol    al,0xc0
  418dd3:	rol    al,0xc0
  418dd6:	rol    al,0xc0
  418dd9:	rol    al,0xc0
  418ddc:	rol    al,0xc0
  418ddf:	rol    al,0xc0
  418de2:	rol    al,0xc0
  418de5:	rol    al,0xc0
  418de8:	rol    al,0xc0
  418deb:	rol    al,0xc0
  418dee:	rol    al,0xc0
  418df1:	rol    al,0xc0
  418df4:	rol    al,0xc0
  418df7:	rol    al,0xc0
  418dfa:	rol    al,0xc0
  418dfd:	rol    al,0xc0
  418e00:	clc    
  418e01:	into   
  418e02:	addr16 nop
  418e04:	inc    esi
  418e05:	das    
  418e06:	enter  0x8ff4,0x5f
  418e0a:	push   eax
  418e0b:	std    
  418e0c:	ret    0xeff8
  418e0f:	push   ss
  418e10:	jae    0x418dd1
  418e12:	test   eax,0x8b42c21a
  418e17:	data16 arpl bx,sp
  418e1a:	fbstp  TBYTE PTR [ebx+esi*2-0x4f]
  418e1f:	mov    ebp,fs
  418e21:	jge    0x418e45
  418e23:	adc    BYTE PTR [edi-0x50],dl
  418e26:	rol    DWORD PTR [ebp-0x98d4916],cl
  418e2c:	jmp    FWORD PTR ds:0xca1e2463
  418e32:	or     DWORD PTR [ecx],eax
  418e34:	mov    esi,0x5e7e5c4c
  418e39:	(bad)  
  418e3a:	mov    ebx,0xc5a5bf16
  418e3f:	mov    bl,0x8d
  418e41:	popa   
  418e42:	ret    0x149c
  418e45:	add    eax,0x117ec337
  418e4a:	mov    ebp,DWORD PTR [eax]
  418e4c:	adc    al,BYTE PTR [esi+0x2e4a630a]
  418e52:	jne    0x418dfe
  418e54:	ficomp DWORD PTR [ecx]
  418e56:	and    DWORD PTR [ecx],0xffffffca
  418e59:	push   ss
  418e5a:	shl    BYTE PTR [ebx],0x10
  418e5d:	loop   0x418e5e
  418e5f:	mov    esp,0x5debff2d
  418e64:	ins    BYTE PTR es:[edi],dx
  418e65:	xor    DWORD PTR [edi+0x19],0x33
  418e69:	pop    ebp
  418e6a:	retf   0xc23a
  418e6d:	sbb    eax,0xb2454fae
  418e72:	loop   0x418e5c
  418e74:	push   ecx
  418e75:	loop   0x418e9d
  418e77:	dec    esi
  418e78:	xchg   ebx,eax
  418e79:	sub    ah,BYTE PTR [ebx-0x46]
  418e7c:	outs   dx,BYTE PTR ds:[esi]
  418e7d:	punpckhdq mm5,QWORD PTR [edx]
  418e80:	and    dl,ah
  418e82:	dec    esi
  418e83:	leave  
  418e84:	and    ecx,DWORD PTR [eax+0x31]
  418e87:	dec    edx
  418e88:	repz mov al,0xa8
  418e8b:	pop    ebp
  418e8c:	mov    esi,0xb4640b1b
  418e91:	mov    DWORD PTR [eax+0x16056eb7],0x6295c691
  418e9b:	mov    edx,0xc0f1efc3
  418ea0:	stos   BYTE PTR es:[edi],al
  418ea1:	sub    ebx,ebx
  418ea3:	retf   0x2a41
  418ea6:	mov    eax,0xc7852c23
  418eab:	clc    
  418eac:	rcl    DWORD PTR [ebp+0x6c930644],0x82
  418eb3:	repz adc DWORD PTR [edi],0x6e7ca399
  418eba:	(bad)  
  418ebb:	nop
  418ebc:	aam    0xab
  418ebe:	jmp    0x418e5b
  418ec0:	js     0x418f1e
  418ec2:	push   ds
  418ec3:	add    al,BYTE PTR [edi]
  418ec5:	cmc    
  418ec6:	push   0xfffffff2
  418ec8:	and    BYTE PTR [ecx],dl
  418eca:	sbb    eax,0x755dbe5e
  418ecf:	mov    ds:0xabd5ea83,eax
  418ed4:	jb     0x418efc
  418ed6:	in     al,0xa9
  418ed8:	xor    DWORD PTR [ebx+0x3356892],esp
  418ede:	dec    ebx
  418edf:	pop    edi
  418ee0:	es stos DWORD PTR es:[edi],eax
  418ee2:	retf   
  418ee3:	loopne 0x418f30
  418ee5:	jle    0x418ed8
  418ee7:	xor    BYTE PTR [ecx-0x2ec57f1d],bl
  418eed:	dec    eax
  418eee:	int3   
  418eef:	test   eax,0x50b8b411
  418ef4:	out    dx,eax
  418ef5:	cmp    bl,dh
  418ef7:	ins    BYTE PTR es:[edi],dx
  418ef8:	or     DWORD PTR [esi],esi
  418efa:	int    0x86
  418efc:	lock mov al,0xa8
  418eff:	or     al,0x1b
  418f01:	fidiv  DWORD PTR [esi+0x4f]
  418f04:	int3   
  418f05:	add    bl,dh
  418f07:	test   DWORD PTR [ecx],esp
  418f09:	cmc    
  418f0a:	and    dh,dh
  418f0c:	cmc    
  418f0d:	jle    0x418f89
  418f0f:	iret   
  418f10:	mov    dl,0x6
  418f12:	and    DWORD PTR [ecx],ebp
  418f14:	mov    bh,0x1a
  418f16:	xor    ebx,DWORD PTR [edi]
  418f18:	mov    cr0,ecx
  418f1b:	push   eax
  418f1c:	hlt    
  418f1d:	nop
  418f1e:	mov    al,0xf9
  418f20:	shr    al,1
  418f22:	ffreep st(5)
  418f24:	xchg   esp,eax
  418f25:	xchg   ecx,eax
  418f26:	push   edx
  418f27:	hlt    
  418f28:	ficom  DWORD PTR [esi]
  418f2a:	cmp    BYTE PTR [ebx-0x6],ch
  418f2d:	mov    DWORD PTR [edx+0x2cce4508],ebp
  418f33:	mov    ah,0x47
  418f35:	inc    esi
  418f36:	mov    ds:0x6889fb1f,al
  418f3b:	ret    0x396
  418f3e:	push   edx
  418f3f:	xchg   esp,eax
  418f40:	ins    BYTE PTR es:[edi],dx
  418f41:	ins    DWORD PTR es:[edi],dx
  418f42:	fwait
  418f43:	xor    al,0xf9
  418f45:	cmc    
  418f46:	ret    0xe483
  418f49:	and    ebp,DWORD PTR [edi]
  418f4b:	fistp  DWORD PTR [edx+0x1b]
  418f4e:	xor    bh,BYTE PTR ss:[edi]
  418f51:	stc    
  418f52:	loopne 0x418ee1
  418f54:	inc    edi
  418f55:	ror    BYTE PTR [eax-0x49],cl
  418f58:	cs nop
  418f5a:	inc    ebx
  418f5b:	dec    ebp
  418f5c:	sahf   
  418f5d:	lods   eax,DWORD PTR ds:[esi]
  418f5e:	nop
  418f5f:	sub    al,0x42
  418f61:	aad    0x9c
  418f63:	aad    0xc4
  418f65:	es out 0x7d,eax
  418f68:	shl    DWORD PTR [edx+0x22abea7],cl
  418f6e:	aaa    
  418f6f:	and    eax,0x4ab5575
  418f74:	out    dx,al
  418f75:	sar    DWORD PTR [ebx+edi*8],1
  418f78:	into   
  418f79:	(bad)  
  418f7a:	aas    
  418f7b:	pop    esp
  418f7c:	add    DWORD PTR [ecx],esi
  418f7e:	inc    eax
  418f7f:	add    al,0x38
  418f81:	cs aas 
  418f83:	cmp    ecx,DWORD PTR [ebp+0x32dfb685]
  418f89:	mov    dl,0x59
  418f8b:	push   ss
  418f8c:	pop    edx
  418f8d:	mov    bh,0xab
  418f8f:	push   cs
  418f90:	xchg   ecx,eax
  418f91:	out    0x53,al
  418f93:	int3   
  418f94:	jge    0x418f9e
  418f96:	stos   BYTE PTR es:[edi],al
  418f97:	add    edi,DWORD PTR [ebp-0x581b68d6]
  418f9d:	inc    edx
  418f9e:	lods   eax,DWORD PTR ds:[esi]
  418f9f:	xor    ebx,eax
  418fa1:	xchg   edi,eax
  418fa2:	call   0x3e6d:0x95f56519
  418fa9:	mov    DWORD PTR es:[edi-0x34],eax
  418fad:	(bad)  
  418fae:	mov    esi,0x6ebc8528
  418fb3:	and    DWORD PTR [esi-0x42a54721],ebp
  418fb9:	xchg   BYTE PTR [esi+0x2c],dh
  418fbc:	cmp    eax,0x7c5cde72
  418fc1:	and    BYTE PTR [ebx],0xb2
  418fc4:	jne    0x418f74
  418fc6:	lods   al,BYTE PTR ds:[esi]
  418fc7:	ins    BYTE PTR es:[edi],dx
  418fc8:	ins    BYTE PTR es:[edi],dx
  418fc9:	jp     0x418fa1
  418fcb:	adc    cl,al
  418fcd:	adc    BYTE PTR [eax+ebp*8],ah
  418fd0:	loop   0x418fe0
  418fd2:	xchg   BYTE PTR [ecx],ah
  418fd4:	inc    ebp
  418fd5:	xchg   edi,esi
  418fd7:	adc    eax,0xf8addbd
  418fdc:	inc    esi
  418fdd:	jbe    0x418f97
  418fdf:	call   0x37d6:0x98922f8d
  418fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fe7:	sahf   
  418fe8:	pop    ebp
  418fe9:	loopne 0x41901b
  418feb:	clc    
  418fec:	stc    
  418fed:	sbb    BYTE PTR [esi+0x30],bl
  418ff0:	or     DWORD PTR [edx-0x2681b247],0xbb37ccd5
  418ffa:	xchg   ebp,eax
  418ffb:	dec    ecx
  418ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ffd:	popa   
  418ffe:	dec    ebx
  418fff:	adc    BYTE PTR [eax],bl
  419001:	add    eax,0xaf67a6d0
  419006:	sar    BYTE PTR [edi],cl
  419008:	pop    ebp
  419009:	test   al,0x95
  41900b:	loopne 0x419008
  41900d:	test   BYTE PTR [esi+eiz*8+0x36],cl
  419011:	mov    ah,0xb5
  419013:	pop    ebp
  419014:	inc    esi
  419015:	repz push es
  419017:	ja     0x41907b
  419019:	ss mov ecx,0x63c3ac89
  41901f:	sbb    BYTE PTR [eax+0x3c8b0e06],cl
  419025:	sub    DWORD PTR ds:0xd357813a,eax
  41902b:	test   al,0x8a
  41902d:	xchg   DWORD PTR ds:0x2e9b6d51,edx
  419033:	out    0xf2,eax
  419035:	mov    ds:0x29919a16,eax
  41903a:	xchg   esp,eax
  41903b:	outs   dx,BYTE PTR ds:[esi]
  41903c:	lahf   
  41903d:	sbb    bl,BYTE PTR [esi]
  41903f:	jb     0x418fe9
  419041:	mov    al,ds:0x3bc32023
  419046:	lahf   
  419047:	iret   
  419048:	call   0x1ccc667b
  41904d:	adc    edi,edx
  41904f:	jo     0x419026
  419051:	fcom   QWORD PTR [eax]
  419053:	cmp    al,0x5e
  419055:	pop    DWORD PTR [esi]
  419057:	fsubrp st(4),st
  419059:	scas   al,BYTE PTR es:[edi]
  41905a:	fcomp  QWORD PTR [ecx]
  41905c:	inc    edx
  41905d:	jg     0x418ffa
  41905f:	mov    ecx,0xec945d98
  419064:	mov    esi,0xb500c5fd
  419069:	aaa    
  41906a:	mov    eax,0x3310ddeb
  41906f:	test   al,0x99
  419071:	out    dx,al
  419072:	ins    DWORD PTR es:[edi],dx
  419073:	(bad)  
  419074:	jmp    0x109f9eb
  419079:	call   0xbec:0x1e162c01
  419080:	addr16 retf 
  419082:	shr    BYTE PTR [edx+0x45],cl
  419085:	sbb    eax,0x8875642d
  41908a:	jne    0x419041
  41908c:	xchg   edi,eax
  41908d:	ror    DWORD PTR [ecx],0x58
  419090:	data16 cmp BYTE PTR [esi+0x14],bl
  419094:	fld    QWORD PTR [edx+0x53059b00]
  41909a:	jno    0x4190d7
  41909c:	mov    ecx,0x37d1190f
  4190a1:	out    0xb3,al
  4190a3:	sub    esi,ecx
  4190a5:	frstor [ebx+0x565558cc]
  4190ab:	lea    esp,[eax-0x22]
  4190ae:	sahf   
  4190af:	and    al,0x36
  4190b1:	retf   
  4190b2:	mov    esi,DWORD PTR [edx]
  4190b4:	and    DWORD PTR [ebx+0x37],edi
  4190b7:	add    cl,BYTE PTR [ebp+0x20]
  4190ba:	pop    edx
  4190bb:	cwde   
  4190bc:	ds pop ebx
  4190be:	xchg   edx,eax
  4190bf:	fsubr  DWORD PTR [edx+0x7e]
  4190c2:	mov    ch,0xcd
  4190c4:	pop    edi
  4190c5:	mov    ss,eax
  4190c7:	mul    BYTE PTR [ecx-0x3e]
  4190ca:	mul    BYTE PTR [edi]
  4190cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190cd:	fstp   DWORD PTR [edi]
  4190cf:	jb     0x419106
  4190d1:	or     bl,BYTE PTR [ebx-0x10]
  4190d4:	inc    ebx
  4190d5:	add    ch,al
  4190d7:	neg    bh
  4190d9:	ds mov dh,0xbf
  4190dc:	retf   
  4190dd:	pop    edi
  4190de:	stos   DWORD PTR es:[edi],eax
  4190df:	and    al,0x76
  4190e1:	mov    eax,ds:0xe3bdea56
  4190e6:	aaa    
  4190e7:	xchg   BYTE PTR [ecx-0x5ed2120b],bl
  4190ed:	cdq    
  4190ee:	xchg   edi,eax
  4190ef:	and    eax,0xec302561
  4190f4:	call   0x9a43eee0
  4190f9:	sub    bl,BYTE PTR [esp+ebp*1-0x6f89d0c0]
  419100:	pop    ecx
  419101:	stos   BYTE PTR es:[edi],al
  419102:	fwait
  419103:	push   ss
  419104:	xor    bl,ah
  419106:	scas   al,BYTE PTR es:[edi]
  419107:	fist   WORD PTR [esi-0x7a]
  41910a:	(bad)  
  41910c:	jno    0x419160
  41910e:	(bad)  
  41910f:	xlat   BYTE PTR ds:[ebx]
  419110:	push   esi
  419111:	xchg   BYTE PTR [eax-0x73a28605],bh
  419117:	aaa    
  419118:	add    DWORD PTR [edx+0x14],ebp
  41911b:	ja     0x4190a9
  41911d:	pop    es
  41911e:	sub    dh,BYTE PTR [esi+0x79b34c5]
  419124:	ins    DWORD PTR es:[edi],dx
  419125:	icebp  
  419126:	inc    esp
  419127:	or     dl,BYTE PTR [esp+edi*1+0x7e]
  41912b:	dec    ecx
  41912c:	daa    
  41912d:	jmp    0x419119
  41912f:	fadd   st(4),st
  419131:	ins    DWORD PTR es:[edi],dx
  419132:	lds    edx,FWORD PTR [eax]
  419134:	and    eax,DWORD PTR [edx-0x651412b2]
  41913a:	loopne 0x419110
  41913c:	into   
  41913d:	dec    esp
  41913e:	dec    eax
  41913f:	jmp    0x89a2:0xc8bb41c7
  419146:	das    
  419147:	mov    ds:0xadd30fee,eax
  41914c:	hlt    
  41914d:	in     eax,dx
  41914e:	xchg   edx,eax
  41914f:	in     al,0xf7
  419151:	or     DWORD PTR [edi-0xbadd5e6],esp
  419157:	pop    ecx
  419158:	fild   DWORD PTR [edi]
  41915a:	les    ebx,FWORD PTR [esi+0x4a1f5d5c]
  419160:	ret    
  419161:	xlat   BYTE PTR ds:[ebx]
  419162:	mov    ds:0xd93f28c3,al
  419167:	inc    ebp
  419168:	dec    eax
  419169:	in     eax,0x84
  41916b:	sbb    BYTE PTR [edx],ah
  41916d:	mov    esp,0x3add905d
  419172:	retf   0xef1
  419175:	add    al,0xe9
  419177:	iret   
  419178:	icebp  
  419179:	loop   0x419136
  41917b:	jge    0x4191b7
  41917d:	ret    0x12d3
  419180:	mov    edx,0x5eea506
  419185:	mov    ebp,0x5d5e764b
  41918a:	xchg   esi,eax
  41918b:	mov    ebx,0xb41645ae
  419190:	pushf  
  419191:	in     al,0xb4
  419193:	push   esp
  419194:	jbe    0x4191fc
  419196:	xchg   edi,ecx
  419198:	push   es
  419199:	xchg   BYTE PTR [ecx],dl
  41919b:	rol    DWORD PTR [edi+ebx*8-0x24],0x32
  4191a0:	and    eax,DWORD PTR [esi-0x5510d578]
  4191a6:	pop    es
  4191a7:	ror    DWORD PTR [edi+esi*2],1
  4191aa:	aam    0x10
  4191ac:	stos   BYTE PTR es:[edi],al
  4191ad:	int3   
  4191ae:	jo     0x419168
  4191b0:	xlat   BYTE PTR ds:[ebx]
  4191b1:	(bad)  
  4191b2:	jns    0x4191cb
  4191b4:	(bad)  
  4191b5:	ins    BYTE PTR es:[edi],dx
  4191b6:	out    dx,eax
  4191b7:	pop    ds
  4191b8:	scas   al,BYTE PTR es:[edi]
  4191b9:	mov    gs,WORD PTR [ebx+0x514bf58]
  4191bf:	push   ecx
  4191c0:	push   0xb0e88e1b
  4191c5:	cld    
  4191c6:	hlt    
  4191c7:	scas   al,BYTE PTR es:[edi]
  4191c8:	mov    ch,0x15
  4191ca:	pop    ds
  4191cb:	addr16 dec esi
  4191cd:	mov    cl,0x1c
  4191cf:	push   edi
  4191d0:	xor    bl,BYTE PTR [edx+0x34468107]
  4191d6:	mov    BYTE PTR [edi+0x5b],al
  4191d9:	les    ecx,FWORD PTR [ebx+0x68]
  4191dc:	call   0x3bf8:0x8984cb7
  4191e3:	(bad)  
  4191e4:	sub    ebp,DWORD PTR [edx]
  4191e6:	and    BYTE PTR [edi+ebp*2+0x13],ch
  4191ea:	test   eax,0x46cc840f
  4191ef:	push   cs
  4191f0:	(bad)  
  4191f1:	push   ss
  4191f2:	sub    dl,dl
  4191f4:	push   ebx
  4191f5:	xchg   DWORD PTR [esi-0x7f6661e1],esp
  4191fb:	dec    ebx
  4191fc:	push   ebp
  4191fd:	xchg   edi,eax
  4191fe:	sub    al,0xb4
  419200:	xchg   DWORD PTR [edx-0x5af3e984],esp
  419206:	scas   eax,DWORD PTR es:[edi]
  419207:	or     al,0xd
  419209:	jmp    0xf6d436ab
  41920e:	inc    esi
  41920f:	sbb    esi,DWORD PTR ds:0xddf0f45f
  419215:	push   ebp
  419216:	inc    ecx
  419217:	fsub   QWORD PTR [ebx]
  419219:	mov    bl,0x25
  41921b:	sbb    BYTE PTR [ecx],bh
  41921d:	mov    ds:0x2454b78f,al
  419222:	pop    edx
  419223:	push   esi
  419224:	lods   al,BYTE PTR ds:[esi]
  419225:	loop   0x419226
  419227:	mov    ah,0x67
  419229:	xchg   edx,eax
  41922a:	and    BYTE PTR [eax-0x7ed75922],dl
  419230:	(bad)  
  419231:	out    0x55,al
  419233:	xor    DWORD PTR ds:0x19972adf,ecx
  419239:	jae    0x4191f6
  41923b:	sbb    DWORD PTR [edi+esi*2],edx
  41923e:	cld    
  41923f:	mov    esi,0x4034b456
  419244:	addr16 ret 
  419246:	jns    0x4192b6
  419248:	es inc eax
  41924a:	mov    bl,0x7e
  41924c:	test   al,0x3e
  41924e:	pop    esi
  41924f:	popa   
  419250:	repz repnz repnz xor bl,BYTE PTR es:[edi+eiz*4+0x16d44003]
  41925b:	add    al,0x5c
  41925d:	cmp    DWORD PTR [ecx+eax*2-0x6f9d3cf6],ebx
  419264:	adc    DWORD PTR [edx],eax
  419266:	aam    0x17
  419268:	loopne 0x419204
  41926a:	stos   BYTE PTR es:[edi],al
  41926b:	adc    al,0xdc
  41926d:	fst    QWORD PTR ds:0xea5c01ce
  419273:	push   ss
  419274:	add    eax,0xfa64ae48
  419279:	sub    al,0x9c
  41927b:	or     al,BYTE PTR [ecx]
  41927d:	xor    dh,bl
  41927f:	sbb    eax,DWORD PTR ds:0x92e822e1
  419285:	loope  0x419243
  419287:	fcom   DWORD PTR [ebx+0x72e2d4c4]
  41928d:	das    
  41928e:	add    BYTE PTR [esi],cl
  419290:	adc    DWORD PTR [ebx],esp
  419292:	ins    BYTE PTR es:[edi],dx
  419293:	pop    edi
  419294:	das    
  419295:	std    
  419296:	bound  esi,QWORD PTR [edx-0x7f1c0978]
  41929c:	rcr    BYTE PTR [esi],cl
  41929e:	mov    ch,0x90
  4192a0:	icebp  
  4192a1:	mov    esp,0xb71b815b
  4192a6:	xchg   DWORD PTR [ebp+0x19],esp
  4192a9:	nop
  4192aa:	push   edi
  4192ab:	lock sub al,0x98
  4192ae:	call   0x9819:0xc4b0db17
  4192b5:	sbb    esp,ebx
  4192b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b8:	jno    0x4192fa
  4192ba:	pushf  
  4192bb:	jge    0x419308
  4192bd:	or     esp,0x20f56131
  4192c3:	das    
  4192c4:	push   edx
  4192c5:	outs   dx,DWORD PTR ds:[esi]
  4192c6:	and    al,0xc2
  4192c8:	or     eax,0xb76bfd38
  4192cd:	push   edi
  4192ce:	push   esi
  4192cf:	mov    bh,0x7d
  4192d1:	cs xchg ebx,eax
  4192d3:	cld    
  4192d4:	mov    ebp,0xf7812444
  4192d9:	rcr    BYTE PTR [esi-0x31e9d6fb],cl
  4192df:	xor    bh,BYTE PTR [ecx]
  4192e1:	cmp    eax,0x3c9194f
  4192e6:	call   0x462e:0x32d899e8
  4192ed:	adc    DWORD PTR [edx+edx*2+0x67],eax
  4192f1:	out    dx,al
  4192f2:	jne    0x419317
  4192f4:	or     eax,eax
  4192f6:	(bad)
  4192fa:	xchg   eax,ecx
  4192fc:	jb     0x41931a
  4192fe:	and    ah,BYTE PTR [ecx]
  419300:	jp     0x4192f6
  419302:	test   DWORD PTR [ecx-0x28698572],eax
  419308:	call   0xb136:0xcc008d8b
  41930f:	ss jl  0x41932a
  419312:	mov    ebx,0xb37a46a7
  419317:	push   0x7cee3199
  41931c:	and    eax,DWORD PTR [eax+edx*8-0x66]
  419320:	pop    ss
  419321:	ins    DWORD PTR es:[edi],dx
  419322:	retf   0xc534
  419325:	mov    ds:0x4db5f925,eax
  41932a:	xchg   BYTE PTR [eax],bl
  41932c:	mov    dl,0xa3
  41932e:	or     BYTE PTR [ebx],dl
  419330:	pop    edx
  419331:	xchg   ebp,eax
  419332:	dec    edx
  419333:	(bad)  
  419334:	lods   al,BYTE PTR ds:[esi]
  419335:	hlt    
  419336:	lock mul BYTE PTR [esi-0xb]
  41933a:	pushf  
  41933b:	xchg   esi,eax
  41933c:	ds push es
  41933e:	(bad)  
  419340:	lea    ebp,[esi+0x29]
  419343:	icebp  
  419344:	add    ch,BYTE PTR [edi]
  419346:	adc    cl,dh
  419348:	dec    ebx
  419349:	pushf  
  41934a:	pop    ss
  41934b:	and    eax,0x3f421e12
  419350:	aad    0xf
  419352:	sub    BYTE PTR ds:0x741b88f7,ah
  419358:	es stos BYTE PTR es:[edi],al
  41935a:	ror    DWORD PTR [eax-0x4f],cl
  41935d:	push   ebx
  41935e:	xchg   ecx,eax
  41935f:	push   eax
  419360:	mov    al,0xbc
  419362:	mov    ds:0x4e276601,eax
  419367:	fcmovnbe st,st(1)
  419369:	pusha  
  41936a:	push   ebx
  41936b:	pop    ds
  41936c:	inc    ebp
  41936d:	add    al,cl
  41936f:	adc    ecx,DWORD PTR [edx]
  419371:	and    BYTE PTR [ebx+eiz*1],cl
  419374:	push   esp
  419375:	add    DWORD PTR [eax+edi*4+0x68],esp
  419379:	xrelease mov DWORD PTR [esi],ecx
  41937c:	inc    ecx
  41937d:	pushf  
  41937e:	dec    ecx
  41937f:	xor    al,0x33
  419381:	fnstsw WORD PTR [edx+eiz*8+0x37489cd2]
  419388:	mov    ecx,0x514c38cd
  41938d:	inc    edx
  41938e:	sbb    DWORD PTR [eax-0x15cdc5ab],ecx
  419394:	pop    esp
  419395:	push   0x6e
  419397:	das    
  419398:	dec    eax
  419399:	pop    eax
  41939a:	repnz iret 
  41939c:	stc    
  41939d:	jg     0x419391
  41939f:	hlt    
  4193a0:	push   DWORD PTR [esi+0x476d1991]
  4193a6:	mov    dh,0x4c
  4193a8:	dec    esp
  4193a9:	ficom  DWORD PTR [ebx]
  4193ab:	and    edi,ebp
  4193ad:	mov    esi,0x272ea628
  4193b2:	jp     0x419384
  4193b4:	and    DWORD PTR [ecx-0x69],eax
  4193b7:	xchg   edi,eax
  4193b8:	cmp    eax,0xb062b4d3
  4193bd:	repnz out dx,al
  4193bf:	pop    ds
  4193c0:	xlat   BYTE PTR ds:[ebx]
  4193c1:	jbe    0x41934f
  4193c3:	add    BYTE PTR [edx],ah
  4193c5:	adc    edi,DWORD PTR [edi-0x78a70732]
  4193cb:	es pop edx
  4193cd:	outs   dx,BYTE PTR ds:[esi]
  4193ce:	mov    bh,0x23
  4193d0:	xor    ecx,DWORD PTR [edi-0x1b]
  4193d3:	jecxz  0x419422
  4193d5:	mov    dh,0x1b
  4193d7:	inc    edx
  4193d8:	cmc    
  4193d9:	push   edi
  4193da:	ret    
  4193db:	inc    ebx
  4193dc:	ret    0xa7b4
  4193df:	(bad)  
  4193e0:	jge    0x419363
  4193e2:	mov    cl,0x86
  4193e4:	inc    ax
  4193e6:	inc    ecx
  4193e7:	data16 (bad) [esi]
  4193ea:	pop    ds
  4193eb:	not    DWORD PTR [edi+0x5e]
  4193ee:	adc    bl,BYTE PTR [ebx+0xfe6a66b]
  4193f4:	mov    bh,0xc8
  4193f6:	xchg   ebp,eax
  4193f7:	sub    esi,DWORD PTR [ebp-0x31]
  4193fa:	jmp    0x41944f
  4193fc:	add    ah,ch
  4193fe:	sahf   
  4193ff:	div    bh
  419401:	in     eax,0x45
  419403:	xchg   edi,eax
  419404:	aam    0xf2
  419406:	and    al,0x57
  419408:	loopne 0x419432
  41940a:	mov    eax,ds:0xf1479128
  41940f:	aaa    
  419410:	into   
  419411:	xchg   edx,eax
  419412:	test   BYTE PTR [edx+eax*2-0x33],ch
  419416:	imul   esp,DWORD PTR [ebx-0x71],0xaa5bd616
  41941d:	sub    edi,DWORD PTR [esi+eax*1]
  419420:	cmp    edx,ecx
  419422:	and    eax,0x8448b743
  419427:	xlat   BYTE PTR ds:[ebx]
  419428:	mov    al,0xc7
  41942a:	fisttp DWORD PTR [ecx]
  41942c:	repz push ds
  41942e:	pop    ecx
  41942f:	xchg   edx,eax
  419430:	xchg   ebp,eax
  419431:	xchg   esp,eax
  419432:	pop    ss
  419433:	dec    ecx
  419434:	out    0x60,eax
  419436:	out    0x37,eax
  419438:	clc    
  419439:	lods   eax,DWORD PTR ds:[esi]
  41943a:	adc    eax,0xbe99c435
  41943f:	sbb    dh,BYTE PTR [edx-0x6bd81595]
  419445:	mov    al,0xd0
  419447:	pop    ecx
  419448:	mov    edx,0x1cda499a
  41944d:	sbb    dh,BYTE PTR [eax+0x44]
  419450:	and    eax,0x12c889e6
  419455:	adc    al,0xb4
  419457:	jmp    FWORD PTR [eax-0x10]
  41945a:	xor    BYTE PTR [esi+0x33f7ec34],0x32
  419461:	jmp    0xd250:0xce756d76
  419468:	std    
  419469:	mov    dl,0x6e
  41946b:	xchg   ecx,eax
  41946c:	je     0x4194cc
  41946e:	scas   al,BYTE PTR es:[edi]
  41946f:	mov    al,ds:0xf31d6dec
  419474:	mov    es,WORD PTR ds:0xbfd13635
  41947a:	sbb    ah,ch
  41947c:	(bad)  
  41947d:	xor    DWORD PTR [ebp+eiz*1-0x298899b1],esp
  419484:	adc    BYTE PTR [ecx],cl
  419486:	into   
  419487:	push   eax
  419488:	jnp    0x419435
  41948a:	fwait
  41948b:	pop    es
  41948c:	add    eax,DWORD PTR [edi+0x27d6ddf1]
  419492:	lahf   
  419493:	retf   0x3712
  419496:	(bad)  
  419497:	cmc    
  419498:	(bad)  
  419499:	push   DWORD PTR [eax-0x56]
  41949c:	test   DWORD PTR ds:0xd6d2de8c,0x8ef6f4b1
  4194a6:	les    ecx,FWORD PTR [edi]
  4194a8:	xor    eax,0x3212eb7b
  4194ad:	jecxz  0x419494
  4194af:	mov    ah,0x25
  4194b1:	mov    ebx,0x95f4f8b9
  4194b6:	mov    BYTE PTR [edi+0x35],0x2a
  4194ba:	push   esi
  4194bb:	dec    ebx
  4194bc:	mov    esi,0xd7dbe32d
  4194c1:	je     0x419449
  4194c3:	cmp    ah,BYTE PTR [edi-0x67fff589]
  4194c9:	xchg   esp,eax
  4194ca:	dec    esp
  4194cb:	daa    
  4194cc:	sbb    esp,DWORD PTR [edi-0x64ba974d]
  4194d2:	xchg   esi,eax
  4194d3:	and    bh,BYTE PTR [ebp-0x315c0dd1]
  4194d9:	cmp    ah,BYTE PTR [eax-0xe]
  4194dc:	mov    eax,0x6747e6a0
  4194e1:	data16 (bad) 
  4194e3:	pop    edx
  4194e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e6:	xchg   ebx,eax
  4194e7:	pop    es
  4194e8:	mov    bh,0xd3
  4194ea:	neg    BYTE PTR [edx]
  4194ec:	jecxz  0x4194f5
  4194ee:	push   ebx
  4194ef:	push   ebp
  4194f0:	shl    esi,0x82
  4194f3:	pop    ebp
  4194f4:	and    al,0x8
  4194f6:	adc    ecx,ecx
  4194f8:	pop    ecx
  4194f9:	xchg   edx,eax
  4194fa:	adc    al,0xe3
  4194fc:	xlat   BYTE PTR ds:[ebx]
  4194fd:	cwde   
  4194fe:	jg     0x4194ba
  419500:	inc    ebx
  419501:	(bad)  
  419502:	dec    ebx
  419503:	sbb    al,0x7f
  419505:	jg     0x41957b
  419507:	mov    dh,0xc3
  419509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41950a:	mov    ss,WORD PTR [esi-0x2382d53c]
  419510:	pop    eax
  419511:	xor    eax,0x82f2c32b
  419516:	xchg   ebp,eax
  419517:	std    
  419518:	sbb    eax,DWORD PTR [ecx+0x62]
  41951b:	aaa    
  41951c:	nop
  41951d:	or     BYTE PTR [esi],bh
  41951f:	aas    
  419520:	out    dx,eax
  419521:	mov    si,0xbdf9
  419525:	mov    WORD PTR [ebx],ds
  419527:	fidivr DWORD PTR [eax+0x2e]
  41952a:	mov    al,ds:0xf3846007
  41952f:	sbb    ah,BYTE PTR [edi-0x39]
  419532:	(bad)  
  419533:	jbe    0x419519
  419535:	add    BYTE PTR [esi-0x6bb8edba],ch
  41953b:	sbb    eax,0x15ae3c34
  419540:	dec    ebp
  419541:	fnstsw WORD PTR [edi+0x30fbd6b0]
  419547:	xor    DWORD PTR [eax-0x47a77473],ebx
  41954d:	hlt    
  41954e:	cmp    cl,dh
  419550:	dec    edi
  419551:	adc    edi,DWORD PTR [edi-0x6557af4f]
  419557:	xor    al,BYTE PTR [esi-0x55]
  41955a:	mov    bh,0xcd
  41955c:	outs   dx,BYTE PTR ds:[esi]
  41955d:	cs push 0xffffffb2
  419560:	jo     0x4195a2
  419562:	lods   eax,DWORD PTR ds:[esi]
  419563:	aas    
  419564:	ins    DWORD PTR es:[edi],dx
  419565:	das    
  419566:	(bad)  
  419567:	or     dh,ah
  419569:	sub    DWORD PTR [ebx],esi
  41956b:	leave  
  41956c:	mov    edx,ecx
  41956e:	mov    edi,0x74d3a017
  419573:	sbb    eax,0xa27b07bd
  419578:	hlt    
  419579:	retf   0x9ebc
  41957c:	xchg   edi,eax
  41957d:	(bad)  
  41957e:	(bad)  
  41957f:	data16 sbb dl,bh
  419582:	mov    ebp,edx
  419584:	stc    
  419585:	or     esi,DWORD PTR [ecx]
  419587:	enter  0x5600,0xb7
  41958b:	stc    
  41958c:	push   eax
  41958d:	pusha  
  41958e:	ror    esi,0xbd
  419591:	sub    BYTE PTR gs:[ebx],bl
  419594:	or     ah,BYTE PTR [edx-0x5f984e86]
  41959a:	je     0x41951c
  41959c:	pushf  
  41959d:	ins    BYTE PTR es:[edi],dx
  41959e:	xchg   esp,eax
  41959f:	push   ds
  4195a0:	leave  
  4195a1:	mov    al,ds:0xfc7c7cdf
  4195a6:	mov    ebp,esp
  4195a8:	xchg   edx,eax
  4195a9:	ins    BYTE PTR es:[edi],dx
  4195aa:	(bad)  
  4195ab:	jle    0x419584
  4195ad:	fs js  0x4195a1
  4195b0:	cdq    
  4195b1:	popf   
  4195b2:	ds sti 
  4195b4:	aad    0x6f
  4195b6:	mov    dl,0xd9
  4195b8:	mov    eax,0xee019af1
  4195bd:	rol    BYTE PTR [esi+0x211e74d8],0xf2
  4195c4:	test   ah,dl
  4195c6:	cwde   
  4195c7:	jo     0x4195c1
  4195c9:	clc    
  4195ca:	pop    edx
  4195cb:	mov    edx,DWORD PTR [eax-0x2]
  4195ce:	and    eax,0xc0c0c0c0
  4195d4:	rol    al,0xc0
  4195d7:	rol    al,0xc0
  4195da:	rol    al,0xc0
  4195dd:	rol    al,0xc0
  4195e0:	add    al,0xdb
  4195e2:	sbb    BYTE PTR [edx+esi*4],bh
  4195e5:	loope  0x419613
  4195e7:	stos   DWORD PTR es:[edi],eax
  4195e8:	aaa    
  4195e9:	push   ss
  4195ea:	(bad)  
  4195ec:	sub    al,ch
  4195ee:	pop    esp
  4195ef:	adc    edx,DWORD PTR [ebp+0xb4ed762]
  4195f5:	dec    ecx
  4195f6:	out    dx,eax
  4195f7:	mov    ds:0x9979c017,eax
  4195fc:	dec    esi
  4195fd:	push   cs
  4195fe:	loope  0x4195b6
  419600:	test   eax,0x29859ca0
  419605:	push   edi
  419606:	dec    edx
  419607:	cdq    
  419608:	mov    esi,0xfa0cea17
  41960d:	mov    esp,0x1d872bd6
  419612:	push   esi
  419613:	add    ch,BYTE PTR [ebx+0x5d]
  419616:	or     al,BYTE PTR [ebx-0x6]
  419619:	pop    ebp
  41961a:	enter  0x2e53,0x32
  41961e:	and    BYTE PTR [edi],al
  419620:	gs pushf 
  419622:	fidiv  WORD PTR [edi+ebx*8+0x6d]
  419626:	mov    bh,0xf9
  419628:	jle    0x4195c0
  41962a:	xchg   esi,eax
  41962b:	pop    ecx
  41962c:	inc    esi
  41962d:	add    bh,BYTE PTR [eax+0x25ca3aae]
  419633:	mov    cl,0xfa
  419635:	enter  0x7237,0x89
  419639:	add    DWORD PTR [edx-0x1c],0x1f
  41963d:	mov    al,BYTE PTR [esi+edi*2-0x16b49367]
  419644:	xor    eax,0xf233c9f0
  419649:	push   ds
  41964a:	push   0xc1f66da6
  41964f:	xor    BYTE PTR [esi-0x57],dh
  419652:	stos   BYTE PTR es:[edi],al
  419653:	add    ebx,DWORD PTR [edi+0x42e00e5d]
  419659:	cli    
  41965a:	daa    
  41965b:	add    al,0x96
  41965d:	or     eax,0xf52f7f0
  419662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419663:	daa    
  419664:	cli    
  419665:	sbb    eax,0x5e3d2393
  41966a:	sahf   
  41966b:	es add ecx,ebx
  41966e:	jno    0x419641
  419670:	mov    al,ds:0x3255957b
  419675:	dec    esp
  419676:	mov    esp,0xa836260a
  41967b:	fld    DWORD PTR [esi+0x52431268]
  419681:	in     eax,0xe6
  419683:	push   ss
  419684:	sbb    eax,0xe8ae3e1f
  419689:	std    
  41968a:	mov    esp,0xbee20eca
  41968f:	clc    
  419690:	cdq    
  419691:	inc    eax
  419692:	addr16 mov dh,0x19
  419695:	jbe    0x4196d9
  419697:	mul    BYTE PTR [ebx+0x35]
  41969a:	(bad)  
  41969c:	addr16 push ebp
  41969e:	xchg   DWORD PTR [ebp+ebx*2-0x14],esi
  4196a2:	cmp    eax,0xb08d7214
  4196a7:	es dec ebp
  4196a9:	(bad)  
  4196aa:	es dec ebx
  4196ac:	jne    0x4196bb
  4196ae:	dec    eax
  4196af:	sub    DWORD PTR [ebx-0x22db79b0],edi
  4196b5:	icebp  
  4196b6:	mov    edi,0xe35f67cc
  4196bb:	add    ah,bh
  4196bd:	dec    edi
  4196be:	add    dl,BYTE PTR [ebx+0x7c]
  4196c1:	inc    edi
  4196c2:	nop
  4196c3:	pop    ebx
  4196c4:	cmp    BYTE PTR [ebx-0x10],bl
  4196c7:	mov    esp,0x98d196a3
  4196cc:	test   BYTE PTR [edi+0x12],cl
  4196cf:	adc    BYTE PTR [ecx],ah
  4196d1:	mov    edx,eax
  4196d3:	push   ebx
  4196d4:	or     ecx,ebp
  4196d6:	jecxz  0x4196e0
  4196d8:	daa    
  4196d9:	xor    edi,DWORD PTR [eax-0x6bb5f31e]
  4196df:	out    0x92,al
  4196e1:	outs   dx,BYTE PTR ds:[esi]
  4196e2:	jnp    0x419727
  4196e4:	mov    ds,WORD PTR [ecx]
  4196e6:	call   0xc600:0x38f9a72d
  4196ed:	ficom  DWORD PTR [eax]
  4196ef:	mov    ax,0x826d
  4196f3:	das    
  4196f4:	test   DWORD PTR [ecx],esp
  4196f6:	xchg   BYTE PTR [ebp-0x3a],bh
  4196f9:	dec    esp
  4196fa:	popf   
  4196fb:	imul   ebx,DWORD PTR [edx+0x18],0x6196e606
  419702:	shl    DWORD PTR [edi+0x7e14555d],0xd3
  419709:	mov    esi,0x4b29b6e
  41970e:	or     esp,DWORD PTR [edx+0x53]
  419711:	and    eax,0x3c9b1eb
  419716:	push   ecx
  419717:	xor    eax,0x98832c68
  41971c:	jg     0x4196c6
  41971e:	xor    ah,BYTE PTR ds:0x4c8802d4
  419724:	(bad)  
  419725:	scas   eax,DWORD PTR es:[edi]
  419726:	pop    esp
  419727:	sbb    bh,dl
  419729:	rcl    eax,1
  41972b:	mov    al,ds:0x68d488b
  419730:	(bad)  
  419731:	into   
  419732:	cdq    
  419733:	stos   BYTE PTR es:[edi],al
  419734:	push   ss
  419735:	adc    edx,DWORD PTR [edx]
  419737:	cs or  ebx,0xffffff96
  41973b:	sti    
  41973c:	lods   al,BYTE PTR ds:[esi]
  41973d:	inc    esp
  41973e:	dec    ebx
  41973f:	scas   eax,DWORD PTR es:[edi]
  419740:	aad    0x9a
  419742:	call   0x5082:0xf88c4620
  419749:	fcmovne st,st(7)
  41974b:	mov    ah,0x42
  41974d:	xchg   DWORD PTR [eax],esp
  41974f:	and    eax,0x8c8d7e52
  419754:	jl     0x41977e
  419756:	and    esp,DWORD PTR [esi-0x7a]
  419759:	sbb    eax,0x2dec0cfb
  41975e:	data16 test BYTE PTR [edi+ebx*4+0x4d],0x78
  419764:	adc    al,0x1e
  419766:	adc    cl,ch
  419768:	and    bl,BYTE PTR [edi]
  41976a:	(bad)  
  41976b:	jmp    0x76b3a6bf
  419770:	sbb    esp,edx
  419772:	xlat   BYTE PTR ds:[ebx]
  419773:	xor    BYTE PTR [edx+0x3db81fcc],ch
  419779:	popf   
  41977a:	and    ch,BYTE PTR [esi-0x3eadd649]
  419780:	xchg   ebp,ecx
  419782:	push   esp
  419783:	adc    al,BYTE PTR [ebx+0x1f16c9db]
  419789:	pop    edi
  41978a:	call   0x7e4c:0x33320d2b
  419791:	dec    edi
  419792:	loop   0x41975f
  419794:	sub    dl,dl
  419796:	fwait
  419797:	xor    esi,DWORD PTR [eax+0x1ebc76e6]
  41979d:	cmp    BYTE PTR [ebp-0x426d850],dl
  4197a3:	sub    esi,DWORD PTR [ecx+0x30]
  4197a6:	push   eax
  4197a7:	adc    eax,0x63225cb
  4197ac:	adc    al,0xe
  4197ae:	sub    DWORD PTR [edi+0x3b],0x5ad0f466
  4197b5:	loope  0x4197fa
  4197b7:	jecxz  0x4197b8
  4197b9:	lea    esi,es:[eax]
  4197bc:	js     0x4197e7
  4197be:	push   edx
  4197bf:	dec    edx
  4197c0:	jnp    0x4197bd
  4197c2:	aas    
  4197c3:	cmp    ah,cl
  4197c5:	inc    esi
  4197c6:	and    cl,BYTE PTR [ecx+0x42]
  4197c9:	push   cs
  4197ca:	xor    cl,BYTE PTR [esp+ebx*4-0x7d]
  4197ce:	xor    DWORD PTR [edi+0x30],ecx
  4197d1:	(bad)  
  4197d2:	jg     0x419794
  4197d4:	sub    al,0xd2
  4197d6:	enter  0x2677,0xd4
  4197da:	jmp    0x4d65:0xfa27be4d
  4197e1:	push   ebp
  4197e2:	ret    
  4197e3:	inc    edx
  4197e4:	popa   
  4197e5:	std    
  4197e6:	pop    edx
  4197e7:	outs   dx,BYTE PTR ds:[esi]
  4197e8:	add    al,0xcb
  4197ea:	neg    DWORD PTR [esi+0x54]
  4197ed:	add    eax,DWORD PTR [edi-0x76957fb0]
  4197f3:	pop    es
  4197f4:	clc    
  4197f5:	cmp    al,0x9
  4197f7:	rol    dh,1
  4197f9:	and    BYTE PTR [eax],bh
  4197fb:	dec    edx
  4197fc:	add    BYTE PTR [ecx-0x28],bl
  4197ff:	loopne 0x41983e
  419801:	outs   dx,DWORD PTR ds:[esi]
  419802:	out    0x33,al
  419804:	out    0xb1,al
  419806:	js     0x41987f
  419808:	es xor eax,0xd7c2ae49
  41980e:	std    
  41980f:	in     eax,dx
  419810:	lds    edi,FWORD PTR [esi-0x1de88fc0]
  419816:	fwait
  419817:	icebp  
  419818:	jle    0x419864
  41981a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41981b:	xor    bh,al
  41981d:	cmp    BYTE PTR [eax],0x1e
  419820:	lock sar BYTE PTR [ebp+0x48514f7d],cl
  419827:	cwde   
  419828:	and    dl,bl
  41982a:	sti    
  41982b:	mov    esp,?
  41982d:	cld    
  41982e:	test   al,0x9c
  419830:	push   ecx
  419831:	ins    BYTE PTR es:[edi],dx
  419832:	pop    ebp
  419833:	bound  edx,QWORD PTR [ebx-0x41]
  419836:	ret    
  419837:	dec    ebp
  419838:	(bad)
  41983c:	fidivr WORD PTR [ebx-0x14]
  41983f:	or     al,0x75
  419841:	sbb    ax,WORD PTR [edi]
  419844:	and    ah,BYTE PTR [eax]
  419846:	jmp    0x419860
  419848:	push   edi
  419849:	lock das 
  41984b:	pop    ecx
  41984c:	pop    ds
  41984d:	jmp    0x40b2:0x6f270708
  419854:	xchg   ecx,eax
  419855:	push   ds
  419856:	jmp    0xb8db5b9f
  41985b:	push   ebx
  41985c:	lahf   
  41985d:	inc    edx
  41985e:	jns    0x419828
  419860:	pop    ds
  419861:	(bad)  
  419862:	inc    edi
  419863:	mov    al,0x32
  419865:	push   ds
  419866:	add    dh,BYTE PTR [ecx+esi*1+0x6f59ea09]
  41986d:	or     eax,0x1443718a
  419872:	in     eax,0x26
  419874:	call   0x381137d3
  419879:	(bad)  
  41987a:	mov    edx,0x3ace0314
  41987f:	stos   DWORD PTR es:[edi],eax
  419880:	loop   0x41981a
  419882:	int    0x1c
  419884:	pop    eax
  419885:	sub    edi,DWORD PTR [esi+0x96c69b0]
  41988b:	inc    edx
  41988c:	xchg   esp,eax
  41988d:	in     ax,dx
  41988f:	pop    eax
  419890:	mov    ah,0x9b
  419892:	stos   BYTE PTR es:[edi],al
  419893:	add    DWORD PTR [ecx],ecx
  419895:	mov    ch,BYTE PTR [ecx]
  419897:	xor    al,0xa3
  419899:	test   ecx,0x15678a55
  41989f:	arpl   si,cx
  4198a1:	lea    ecx,[esi-0x51ad08e0]
  4198a7:	ds mov eax,edx
  4198aa:	or     DWORD PTR [ebx+ebp*8-0x3d],ebx
  4198ae:	arpl   WORD PTR [ebp+ebx*4-0x75],ax
  4198b2:	push   ds
  4198b3:	xchg   BYTE PTR [ecx],dl
  4198b5:	inc    eax
  4198b6:	icebp  
  4198b7:	retf   
  4198b8:	sbb    BYTE PTR [ebp+0x33d2eab5],0xa5
  4198bf:	sub    BYTE PTR [ecx],bh
  4198c1:	retf   
  4198c2:	adc    eax,0x980b2e5d
  4198c7:	mov    BYTE PTR [ecx+edi*8],cl
  4198ca:	data16 mov ch,0xf6
  4198cd:	test   eax,0xec0fda81
  4198d2:	mov    bl,0xb6
  4198d4:	imul   ch
  4198d6:	shr    BYTE PTR [ebx],cl
  4198d8:	inc    esp
  4198d9:	dec    esi
  4198da:	test   eax,esp
  4198dc:	addr16 xor eax,0xfbf211c8
  4198e2:	fild   DWORD PTR [ebx]
  4198e4:	pop    ss
  4198e5:	mov    esp,ebp
  4198e7:	inc    ecx
  4198e8:	rol    BYTE PTR [esi-0x1b],cl
  4198eb:	and    BYTE PTR [ebx+eiz*8-0x1c],dl
  4198ef:	adc    DWORD PTR [ebx+0x46],0x58aefc3e
  4198f6:	sti    
  4198f7:	cld    
  4198f8:	ins    BYTE PTR es:[edi],dx
  4198f9:	sahf   
  4198fa:	or     BYTE PTR [ebx],0x89
  4198fd:	mov    ah,0x1a
  4198ff:	or     BYTE PTR [edx+0x3],cl
  419902:	mov    BYTE PTR [esi+0x1d],bh
  419905:	mov    dl,0x51
  419907:	out    0x32,eax
  419909:	ss jmp 0x23726088
  41990f:	dec    ecx
  419910:	xor    ebx,edx
  419912:	xchg   esi,eax
  419913:	or     DWORD PTR [edx-0x31],0xffffff91
  419917:	loopne 0x419914
  419919:	push   ss
  41991a:	adc    ecx,DWORD PTR [ebp+0x1b9dab42]
  419920:	and    ecx,DWORD PTR [ebp-0x6e]
  419923:	inc    eax
  419924:	scas   al,BYTE PTR es:[edi]
  419925:	int3   
  419926:	(bad)
  41992a:	mov    ebp,DWORD PTR [eax+ebp*4]
  41992d:	adc    eax,0x9b7ec324
  419932:	int3   
  419933:	mov    cs,WORD PTR [esi-0x7be51dd]
  419939:	rep stos BYTE PTR es:[edi],al
  41993b:	adc    BYTE PTR [ebp-0x66c36bc5],bh
  419941:	mov    WORD PTR [eax+0x502f7241],?
  419947:	add    al,0x58
  419949:	in     al,dx
  41994a:	cmp    BYTE PTR ds:0x398a0644,cl
  419950:	xor    BYTE PTR [ebx],bl
  419952:	adc    ch,al
  419954:	daa    
  419955:	sbb    cl,BYTE PTR [ecx-0x23b85e60]
  41995b:	mov    ds:0x6d4f519c,al
  419960:	jmp    0x3b6f:0x2643417d
  419967:	(bad)  
  41996a:	xchg   esi,eax
  41996b:	fcmovnb st,st(2)
  41996d:	lods   eax,DWORD PTR ds:[esi]
  41996e:	push   ecx
  41996f:	dec    edi
  419970:	mov    ebx,0x18f90f42
  419975:	lods   eax,DWORD PTR ds:[esi]
  419976:	cmp    al,0x61
  419978:	dec    ecx
  419979:	test   BYTE PTR [esi-0x152c987f],dl
  41997f:	or     al,0xa0
  419981:	lods   eax,DWORD PTR ds:[esi]
  419982:	out    0x7b,eax
  419984:	push   esi
  419985:	pop    esp
  419986:	sbb    DWORD PTR [ebx-0x1dfe7321],ebp
  41998c:	mov    edx,0x359c094b
  419991:	mov    ds,WORD PTR [edi+0x29]
  419994:	ja     0x4199d3
  419996:	push   esp
  419997:	mov    bh,0x25
  419999:	mov    eax,0x522faa3f
  41999e:	mov    dh,BYTE PTR [edi-0x60c2adce]
  4199a4:	rcr    DWORD PTR [edi-0x70a1086b],cl
  4199aa:	jbe    0x419969
  4199ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ad:	pusha  
  4199ae:	cdq    
  4199af:	jo     0x419a04
  4199b1:	test   BYTE PTR [ebp+edi*1-0x835688b],0x3c
  4199b9:	fld    st(0)
  4199bb:	sub    eax,0x20515e45
  4199c0:	cmp    esi,edi
  4199c2:	in     eax,dx
  4199c3:	mov    edi,0x28e04f3c
  4199c8:	(bad)  
  4199c9:	retf   0x49de
  4199cc:	ins    DWORD PTR es:[edi],dx
  4199cd:	(bad)  
  4199ce:	enter  0xe6ca,0x22
  4199d2:	ret    
  4199d3:	loope  0x4199b2
  4199d5:	dec    edx
  4199d6:	leave  
  4199d7:	fstp   DWORD PTR [edx]
  4199d9:	stos   DWORD PTR es:[edi],eax
  4199da:	jo     0x4199b1
  4199dc:	jbe    0x419a24
  4199de:	mov    ebx,0x92549934
  4199e3:	sti    
  4199e4:	lods   eax,DWORD PTR ds:[esi]
  4199e5:	test   DWORD PTR ds:[esi+ebx*4],edi
  4199e9:	pop    esp
  4199ea:	add    DWORD PTR ds:0x3d056d04,esi
  4199f0:	and    eax,DWORD PTR [eax+0xf]
  4199f3:	ret    0x37e8
  4199f6:	imul   sp,WORD PTR [esi+0x24],0xce57
  4199fc:	sub    al,bh
  4199fe:	cmc    
  4199ff:	sub    eax,0x1b9bdf17
  419a04:	jns    0x419a80
  419a06:	cmp    DWORD PTR [ebp+0x7e7e0baa],esp
  419a0c:	xchg   ecx,eax
  419a0d:	push   eax
  419a0e:	cmp    eax,DWORD PTR [esi+0xda62938]
  419a14:	fild   WORD PTR [esi]
  419a16:	jp     0x419a00
  419a18:	je     0x419a44
  419a1a:	pop    esp
  419a1b:	lods   eax,DWORD PTR ds:[esi]
  419a1c:	push   es
  419a1d:	pusha  
  419a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a1f:	clc    
  419a20:	sar    DWORD PTR [eax-0xe74a24d],cl
  419a26:	stos   DWORD PTR es:[edi],eax
  419a27:	and    al,0x5
  419a29:	xor    ah,0x6
  419a2c:	jbe    0x419a9d
  419a2e:	cli    
  419a2f:	(bad)  
  419a30:	in     al,0x2f
  419a32:	xchg   ecx,eax
  419a33:	cwde   
  419a34:	dec    edi
  419a35:	push   ds
  419a36:	cwde   
  419a37:	scas   al,BYTE PTR es:[edi]
  419a38:	cmp    DWORD PTR [edi-0x75],edi
  419a3b:	nop
  419a3c:	adc    eax,0x81793108
  419a41:	jmp    0x4199d2
  419a43:	or     ch,bl
  419a45:	aas    
  419a46:	mov    ch,BYTE PTR [ebp+0x4]
  419a49:	dec    ebp
  419a4a:	jge    0x4199e6
  419a4c:	add    ch,bh
  419a4e:	dec    ecx
  419a4f:	sbb    esp,ebp
  419a51:	push   esi
  419a52:	sub    cl,BYTE PTR [ebp-0x55eb8872]
  419a58:	shl    ecx,1
  419a5a:	sub    ebx,DWORD PTR [esi+0x7d]
  419a5d:	or     al,0xc5
  419a5f:	sub    ebx,DWORD PTR [ebx-0x8c89f00]
  419a65:	cld    
  419a66:	push   ebx
  419a67:	das    
  419a68:	push   edx
  419a69:	jne    0x419ac7
  419a6b:	jecxz  0x419a94
  419a6d:	aaa    
  419a6e:	jle    0x419aed
  419a70:	jno    0x419a1d
  419a72:	hlt    
  419a73:	mov    ebp,DWORD PTR ds:0x1553a102
  419a79:	adc    dl,BYTE PTR [ebx]
  419a7b:	jo     0x419a71
  419a7d:	pop    ds
  419a7e:	icebp  
  419a7f:	cmovne esi,DWORD PTR [edx]
  419a82:	bound  ecx,QWORD PTR ds:0xeeb35024
  419a88:	xchg   esi,eax
  419a89:	mov    cl,0xee
  419a8b:	add    ebx,DWORD PTR [ecx-0x4b]
  419a8e:	stc    
  419a8f:	xor    edi,DWORD PTR [edi-0x5]
  419a92:	popa   
  419a93:	add    ah,BYTE PTR [ebx]
  419a95:	push   ecx
  419a96:	leave  
  419a97:	das    
  419a98:	mov    ch,0xf2
  419a9a:	cld    
  419a9b:	jbe    0x419b18
  419a9d:	std    
  419a9e:	sbb    al,0x16
  419aa0:	jl     0x419afd
  419aa2:	jge    0x419a74
  419aa4:	pop    edi
  419aa5:	bound  ecx,QWORD PTR [ebx-0x778c1ef9]
  419aab:	ja     0x419a54
  419aad:	ins    BYTE PTR es:[edi],dx
  419aae:	test   DWORD PTR [eax+0x6],edi
  419ab1:	xchg   ebp,eax
  419ab2:	in     al,dx
  419ab3:	sbb    DWORD PTR [esi+ecx*4],esp
  419ab6:	xchg   DWORD PTR [ebx+0x35],ebp
  419ab9:	xchg   ebp,eax
  419aba:	jno    0x419ae5
  419abc:	inc    esp
  419abd:	inc    BYTE PTR [esi+0x22]
  419ac0:	daa    
  419ac1:	lods   al,BYTE PTR ds:[esi]
  419ac2:	and    ebx,DWORD PTR [ecx+0x1d]
  419ac5:	test   eax,0x9944f481
  419aca:	jo     0x419b27
  419acc:	dec    esp
  419acd:	ds or  ebp,0x38413e0
  419ad4:	xchg   esp,eax
  419ad5:	jmp    eax
  419ad7:	(bad)  
  419ad8:	icebp  
  419ad9:	addr16 ja 0x419a61
  419adc:	jecxz  0x419a99
  419ade:	xor    DWORD PTR [ebp+0x11612664],esp
  419ae4:	and    al,BYTE PTR [eax]
  419ae6:	mov    al,0x2a
  419ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ae9:	fistp  DWORD PTR [esi+0xf79230f]
  419aef:	test   esi,ecx
  419af1:	into   
  419af2:	(bad)  
  419af3:	frstor ds:0x4649230
  419af9:	xchg   esi,eax
  419afa:	aam    0x15
  419afc:	lds    esp,FWORD PTR [edx]
  419afe:	mov    bl,0x6b
  419b00:	jp     0x419b4c
  419b02:	aad    0x3
  419b04:	outs   dx,BYTE PTR ds:[esi]
  419b05:	sbb    eax,0xce05ae6f
  419b0a:	shl    DWORD PTR [edx],1
  419b0c:	daa    
  419b0d:	mov    ebx,0xd6c518cd
  419b12:	add    BYTE PTR [ecx],0xcd
  419b15:	in     eax,0x78
  419b17:	adc    al,0x3
  419b19:	(bad)  ds:0x9e621495
  419b1f:	push   ebx
  419b20:	mov    al,0x4b
  419b22:	leave  
  419b23:	xchg   ebp,eax
  419b24:	and    ah,dh
  419b26:	jmp    0x419ac0
  419b28:	or     DWORD PTR ds:[bx+di-0x2],ecx
  419b2d:	or     al,0x31
  419b2f:	add    eax,0x8ff8b0dc
  419b34:	fs pop ds
  419b36:	scas   al,BYTE PTR es:[edi]
  419b37:	repnz sub ah,BYTE PTR [esi]
  419b3a:	mov    al,0x8a
  419b3c:	in     al,dx
  419b3d:	xor    ecx,DWORD PTR ds:0xdc5a1a76
  419b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b44:	(bad)  
  419b45:	xchg   esp,eax
  419b46:	cs inc eax
  419b48:	jbe    0x419b30
  419b4a:	out    0xb,al
  419b4c:	mov    eax,ds:0xf03fc4c9
  419b51:	test   al,0xb2
  419b53:	clc    
  419b54:	or     BYTE PTR [edx],ch
  419b56:	or     dh,BYTE PTR [esi+eiz*8+0x5d9f2e2a]
  419b5d:	mov    ch,0x73
  419b5f:	xchg   BYTE PTR [eax-0x412785ef],cl
  419b65:	sub    al,0x73
  419b67:	pop    esi
  419b68:	jecxz  0x419b25
  419b6a:	mov    bl,dh
  419b6c:	fistp  DWORD PTR [eax-0x1a001a2b]
  419b72:	jle    0x419b2b
  419b74:	and    al,0xd3
  419b76:	and    eax,0xc87ac378
  419b7b:	push   ebx
  419b7c:	fisttp QWORD PTR [esi+ebx*4+0x23]
  419b80:	and    dl,BYTE PTR [esi+0x3281b959]
  419b86:	imul   ebp,DWORD PTR [ecx+0x6d],0x3f898ae5
  419b8d:	sbb    ah,ch
  419b8f:	clc    
  419b90:	imul   edi,DWORD PTR [esi],0x51
  419b93:	push   ebp
  419b94:	in     eax,0x21
  419b96:	scas   eax,DWORD PTR es:[edi]
  419b97:	in     eax,dx
  419b98:	inc    esp
  419b99:	cli    
  419b9a:	sbb    al,0x53
  419b9c:	shl    BYTE PTR [ebp+0x7c074652],cl
  419ba2:	ins    DWORD PTR es:[edi],dx
  419ba3:	jg     0x419bb4
  419ba5:	(bad)  
  419ba6:	pop    ss
  419ba7:	or     DWORD PTR [edi+0x22f42a2d],edx
  419bad:	push   cs
  419bae:	nop
  419baf:	and    al,0x2c
  419bb1:	ror    cl,cl
  419bb3:	out    0xb4,al
  419bb5:	out    dx,al
  419bb6:	xchg   ebx,eax
  419bb7:	je     0x419b79
  419bb9:	dec    edi
  419bba:	mov    dl,0x61
  419bbc:	addr16 pop ebp
  419bbe:	lahf   
  419bbf:	xchg   ecx,eax
  419bc0:	popa   
  419bc1:	jnp    0x419c23
  419bc3:	ret    0x3a0
  419bc6:	(bad)  
  419bc7:	adc    esp,DWORD PTR [edi-0x40f63f95]
  419bcd:	push   cs
  419bce:	pop    ecx
  419bcf:	fcomi  st,st(0)
  419bd1:	out    0x8b,al
  419bd3:	cmp    BYTE PTR [ebx-0x36],ch
  419bd6:	test   DWORD PTR [ebp+0x16],esi
  419bd9:	fmul   DWORD PTR [edx+0x32224c8]
  419bdf:	aas    
  419be0:	(bad)  
  419be1:	mov    eax,0xa69608b8
  419be6:	xchg   BYTE PTR [esi+0xd],al
  419be9:	fdiv   QWORD PTR [edx+0x75cb5428]
  419bef:	sub    dh,BYTE PTR [edx+0x26]
  419bf2:	jl     0x419be4
  419bf4:	lods   al,BYTE PTR ds:[esi]
  419bf5:	or     cl,ah
  419bf7:	fwait
  419bf8:	cmp    esi,DWORD PTR [ebp+edx*1-0x57b9c9b6]
  419bff:	push   edx
  419c00:	adc    al,0x7
  419c02:	loop   0x419bcf
  419c04:	mov    ebp,0x92a44b09
  419c09:	fmul   QWORD PTR [eax+0x1bacbea8]
  419c0f:	jmp    0x419c5f
  419c11:	jmp    0x9432eef1
  419c16:	mov    ebx,0x5998ce83
  419c1b:	sbb    BYTE PTR [esi-0x4c],ah
  419c1e:	inc    edx
  419c1f:	cmp    al,0x99
  419c21:	mov    eax,0x556ecb26
  419c26:	sbb    DWORD PTR [edi],edi
  419c28:	pop    esp
  419c29:	inc    eax
  419c2b:	jne    0x419c71
  419c2d:	lods   al,BYTE PTR ds:[esi]
  419c2e:	fadd   DWORD PTR [edx+0x26]
  419c31:	pop    esp
  419c32:	lods   al,BYTE PTR ds:[esi]
  419c33:	add    bh,BYTE PTR [esi]
  419c35:	pop    ebp
  419c36:	(bad)  
  419c37:	cwde   
  419c38:	push   ecx
  419c39:	scas   al,BYTE PTR es:[edi]
  419c3a:	push   esi
  419c3b:	loop   0x419c81
  419c3d:	inc    esi
  419c3e:	push   ebx
  419c3f:	mov    cl,0x6b
  419c41:	jge    0x419bf9
  419c43:	pop    ss
  419c44:	and    ebx,eax
  419c46:	imul   edi,eax,0xffffffe1
  419c49:	inc    esp
  419c4a:	or     DWORD PTR [edx],edx
  419c4c:	hlt    
  419c4d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419c4f:	or     BYTE PTR [esi+ecx*8+0x1355471a],0xbe
  419c57:	push   esp
  419c58:	mov    ecx,0x42a59c44
  419c5d:	jge    0x419cae
  419c5f:	sbb    esp,ebp
  419c61:	xchg   edx,eax
  419c62:	daa    
  419c63:	fdivr  DWORD PTR [ebx+0x51]
  419c66:	inc    ebp
  419c67:	mov    bl,0xb4
  419c69:	inc    edx
  419c6a:	les    esi,FWORD PTR [ebx]
  419c6c:	push   ebp
  419c6d:	pop    esp
  419c6e:	iret   
  419c6f:	add    al,0xcf
  419c71:	(bad)  
  419c72:	out    0xc3,al
  419c74:	loop   0x419cf2
  419c76:	add    BYTE PTR [edx],dl
  419c78:	imul   edx,esi,0x71
  419c7b:	jnp    0x419ced
  419c7d:	jle    0x419c61
  419c7f:	sar    BYTE PTR [ebp-0x56bfae76],0xf
  419c86:	adc    DWORD PTR [ebp-0x5a],eax
  419c89:	mov    WORD PTR es:[ebp+0x22],ss
  419c8d:	out    0x71,al
  419c8f:	bnd jmp 0x419c2c
  419c92:	pop    esi
  419c93:	cmp    edx,edx
  419c95:	jp     0x419cd5
  419c97:	adc    edx,edx
  419c99:	ret    0xb415
  419c9c:	jbe    0x419ce2
  419c9e:	inc    eax
  419c9f:	in     eax,dx
  419ca0:	inc    ebp
  419ca1:	loop   0x419ca9
  419ca3:	pop    edx
  419ca4:	xor    al,0x41
  419ca6:	lods   al,BYTE PTR ds:[esi]
  419ca7:	mov    cs,ebp
  419ca9:	cmp    ecx,DWORD PTR [ecx-0x4e]
  419cac:	jle    0x419c40
  419cae:	xor    edx,esp
  419cb0:	push   0xffffffed
  419cb2:	inc    ebp
  419cb3:	mov    bh,0xf6
  419cb5:	sub    DWORD PTR ds:0xd927917,edi
  419cbb:	mov    ebp,0xcf3af13e
  419cc0:	xchg   edi,eax
  419cc1:	add    eax,DWORD PTR [esi-0x5f]
  419cc4:	xor    eax,0xd74615af
  419cc9:	imul   ecx,DWORD PTR [esi+0x3540a131],0x82f40433
  419cd3:	fdivrp st(2),st
  419cd5:	mov    ebp,DWORD PTR [ebp+0x63937d]
  419cdb:	call   0x31d5:0xbfe55ab8
  419ce2:	sub    al,0x56
  419ce4:	xlat   BYTE PTR ds:[ebx]
  419ce5:	mov    DWORD PTR [ebp+0x2b],edi
  419ce8:	xor    cl,BYTE PTR ds:0x95245c66
  419cee:	mov    bl,0xcc
  419cf0:	push   ebp
  419cf1:	mov    ch,0x45
  419cf3:	pop    es
  419cf4:	int    0xf5
  419cf6:	or     BYTE PTR [eax+edi*2-0x42fe7f51],dh
  419cfd:	sbb    DWORD PTR [ecx+eax*1-0x15],edi
  419d01:	aad    0xd6
  419d03:	mov    DWORD PTR [edx],esp
  419d05:	fadd   DWORD PTR [edx]
  419d07:	(bad)  
  419d08:	das    
  419d09:	cmp    eax,0xcee14a13
  419d0e:	stos   BYTE PTR es:[edi],al
  419d0f:	and    eax,0xf7fa3646
  419d14:	add    DWORD PTR [ecx+0x27a9a78e],esi
  419d1a:	dec    eax
  419d1b:	cdq    
  419d1c:	mov    esi,DWORD PTR [edi]
  419d1e:	mov    WORD PTR gs:[ebp-0x7b],?
  419d22:	pop    ss
  419d23:	xor    eax,0x42923cf3
  419d28:	sub    eax,0x22c3846
  419d2d:	xchg   BYTE PTR [edi+edx*8+0x5a76c0d8],bh
  419d34:	push   eax
  419d35:	out    0x96,al
  419d37:	dec    ebp
  419d38:	es stc 
  419d3a:	adc    edx,DWORD PTR [ebp+0x6ab2a087]
  419d40:	jnp    0x419d8c
  419d42:	pop    ebp
  419d43:	retf   0x262f
  419d46:	inc    esp
  419d47:	(bad)  
  419d48:	loope  0x419dc5
  419d4a:	dec    eax
  419d4b:	push   esi
  419d4c:	pop    esp
  419d4d:	push   cs
  419d4e:	adc    ch,BYTE PTR [esi+0x2cdd863]
  419d54:	out    dx,al
  419d55:	sbb    eax,0x5a36a02b
  419d5b:	clc    
  419d5c:	jle    0x419ce4
  419d5e:	dec    DWORD PTR [esp+ebp*8]
  419d61:	sbb    BYTE PTR [ebx-0x70],bh
  419d64:	mov    ds:0x632c315d,al
  419d69:	jle    0x419dde
  419d6b:	sbb    bh,BYTE PTR [ebx-0x759fc4e]
  419d71:	ret    
  419d72:	push   0x51
  419d74:	pop    ss
  419d75:	or     al,0x56
  419d77:	bound  edi,QWORD PTR [ecx-0x4e]
  419d7a:	cmp    BYTE PTR [esi-0x11bd1db3],bl
  419d80:	dec    ebp
  419d81:	ja     0x419dff
  419d83:	and    dh,dh
  419d85:	pop    edx
  419d86:	pop    ss
  419d87:	and    DWORD PTR gs:[eax+ecx*2+0x461b6cf5],eax
  419d8f:	jle    0x419dc3
  419d91:	nop
  419d92:	pop    esp
  419d93:	sub    bl,BYTE PTR [edi+0x55]
  419d96:	mov    eax,0x4214edd5
  419d9b:	mov    ebp,0x76423031
  419da0:	jo     0x419d52
  419da2:	mov    edx,0xb52b05e9
  419da7:	clc    
  419da8:	cdq    
  419da9:	adc    al,0x50
  419dab:	sub    BYTE PTR [ebp-0x3f08ad1e],ah
  419db1:	rol    al,0xc0
  419db4:	rol    al,0xc0
  419db7:	rol    al,0xc0
  419dba:	rol    al,0xc0
  419dbd:	rol    al,0xc0
  419dc0:	rol    al,0xc0
  419dc3:	rol    al,0xc0
  419dc6:	rol    al,0xc0
  419dc9:	rol    al,0xc0
  419dcc:	rol    al,0xc0
  419dcf:	rol    al,0xc0
  419dd2:	rol    al,0xc0
  419dd5:	rol    al,0xc0
  419dd8:	rol    al,0xc0
  419ddb:	rol    al,0xc0
  419dde:	rol    al,0xc0
  419de1:	rol    al,0xc0
  419de4:	rol    al,0xc0
  419de7:	rol    al,0xc0
  419dea:	rol    al,0xc0
  419ded:	rol    al,0xc0
  419df0:	rol    al,0xc0
  419df3:	rol    al,0xc0
  419df6:	rol    al,0xc0
  419df9:	rol    al,0xc0
  419dfc:	rol    al,0xc0
  419dff:	shl    BYTE PTR [esi+0x7446e168],0x7e
  419e06:	call   0xe6ab:0xa6782e86
  419e0d:	aam    0x96
  419e0f:	scas   al,BYTE PTR es:[edi]
  419e10:	aad    0xcb
  419e12:	outs   dx,DWORD PTR ds:[esi]
  419e13:	aam    0x76
  419e15:	push   es
  419e16:	mov    eax,DWORD PTR [ecx+ecx*1-0xe7892b]
  419e1d:	inc    edi
  419e1e:	dec    BYTE PTR [esi+0x73]
  419e21:	add    al,BYTE PTR [ebx-0x337e43d4]
  419e27:	cmp    al,0xd4
  419e29:	add    bh,BYTE PTR [edx+0xf1b24af]
  419e2f:	push   esi
  419e30:	repz fst st(3)
  419e33:	pop    ebp
  419e34:	xchg   edi,eax
  419e35:	jmp    0x3964:0xb41d85ad
  419e3c:	addr16 jle 0x419dc0
  419e3f:	fisub  DWORD PTR [esi]
  419e41:	lock ins BYTE PTR es:[edi],dx
  419e43:	dec    ecx
  419e44:	pop    edx
  419e45:	daa    
  419e46:	mov    ebp,esi
  419e48:	jge    0x419dea
  419e4a:	les    ebp,FWORD PTR [edi]
  419e4c:	xchg   esp,eax
  419e4d:	daa    
  419e4e:	cdq    
  419e4f:	stos   DWORD PTR es:[edi],eax
  419e50:	(bad)  
  419e51:	rol    DWORD PTR [esi-0x31cd6f48],cl
  419e57:	mov    dl,0x77
  419e59:	cmc    
  419e5a:	das    
  419e5b:	rol    ch,0x82
  419e5e:	mov    cl,0xd0
  419e60:	scas   eax,DWORD PTR es:[edi]
  419e61:	lds    ebp,FWORD PTR [eax-0x4]
  419e64:	add    dl,BYTE PTR [edi]
  419e66:	cld    
  419e67:	daa    
  419e68:	mov    dh,dl
  419e6a:	in     al,dx
  419e6b:	in     al,dx
  419e6c:	adc    al,0x31
  419e6e:	mov    eax,0xcb070df7
  419e73:	loopne 0x419e82
  419e75:	mov    edi,ebx
  419e77:	loope  0x419ea5
  419e79:	xor    DWORD PTR [edx-0x43a94885],0xb33acd32
  419e83:	or     al,0x5d
  419e85:	bnd ret 0xe1d7
  419e89:	scas   eax,DWORD PTR es:[edi]
  419e8a:	call   FWORD PTR [edi+0x4d]
  419e8d:	sub    cl,bh
  419e8f:	and    DWORD PTR [eax-0x22],edx
  419e92:	(bad)  
  419e93:	jmp    0x8930df56
  419e98:	and    eax,0x8e3d1595
  419e9d:	adc    DWORD PTR [esi],edi
  419e9f:	mov    cl,0x8a
  419ea1:	jl     0x419eea
  419ea3:	inc    edi
  419ea4:	aam    0x35
  419ea6:	mov    dh,0xf7
  419ea8:	mov    eax,0xc598434b
  419ead:	test   eax,0x1d6b866e
  419eb2:	pushf  
  419eb3:	outs   dx,DWORD PTR ds:[esi]
  419eb4:	je     0x419e99
  419eb6:	pop    ss
  419eb7:	jge    0x419ea2
  419eb9:	mov    esp,0x5cbef5ae
  419ebe:	shl    DWORD PTR [edx+0x728b53a6],1
  419ec4:	or     DWORD PTR [ecx+eiz*1-0x727e9391],esi
  419ecb:	stos   DWORD PTR es:[edi],eax
  419ecc:	cmp    BYTE PTR [esp+edi*1+0x79],dl
  419ed0:	push   0x3dbe8e81
  419ed5:	imul   esp,DWORD PTR [edi],0x33
  419ed8:	add    eax,0x4e0508a6
  419edd:	in     al,0xa5
  419edf:	fwait
  419ee0:	add    BYTE PTR [esi],dl
  419ee2:	call   0xcb03c74b
  419ee7:	inc    ecx
  419ee8:	repnz cmp DWORD PTR ss:[esi+esi*1-0x69],0x87bf0ef9
  419ef2:	push   cs
  419ef3:	xchg   edi,eax
  419ef4:	jmp    0x419f49
  419ef6:	mov    eax,ds:0xafb46db3
  419efb:	cmc    
  419efc:	cmp    eax,DWORD PTR [ecx-0x31d11073]
  419f02:	or     esi,edi
  419f04:	xchg   BYTE PTR [eax],dh
  419f06:	aad    0x55
  419f08:	jno    0x419f3f
  419f0a:	mov    ah,0x71
  419f0c:	push   ecx
  419f0d:	das    
  419f0e:	sub    al,0xd2
  419f10:	fiadd  WORD PTR [ebx]
  419f12:	xor    dl,bh
  419f14:	in     al,0x4e
  419f16:	sbb    cl,ah
  419f18:	and    al,0x45
  419f1a:	cmp    eax,0x3f503c7c
  419f1f:	rcl    DWORD PTR [edx-0x37],0x17
  419f23:	or     edi,DWORD PTR [ebx+0x26e4978c]
  419f29:	dec    edi
  419f2a:	rcr    al,1
  419f2c:	sub    dh,cl
  419f2e:	xor    BYTE PTR [esi+ebx*4],bh
  419f31:	push   ds
  419f32:	push   esp
  419f33:	test   al,0xb
  419f35:	das    
  419f36:	jae    0x419ed7
  419f38:	stc    
  419f39:	inc    ecx
  419f3a:	jbe    0x419f69
  419f3c:	repz pop ecx
  419f3e:	in     al,dx
  419f3f:	in     eax,0xb9
  419f41:	or     dl,bh
  419f43:	aam    0x23
  419f45:	cmc    
  419f46:	in     eax,dx
  419f47:	fadd   QWORD PTR [esp+edx*1-0x7b4664a8]
  419f4f:	icebp  
  419f50:	mov    dl,0xbe
  419f52:	rcr    BYTE PTR [ecx],cl
  419f54:	ins    DWORD PTR es:[edi],dx
  419f55:	dec    edx
  419f56:	fwait
  419f57:	test   dh,cl
  419f59:	jb     0x419fbb
  419f5b:	sub    eax,0xc3ab8d22
  419f60:	stc    
  419f61:	dec    esi
  419f62:	out    dx,eax
  419f63:	loopne 0x419fb3
  419f65:	scas   al,BYTE PTR es:[edi]
  419f66:	cmp    eax,0x2e569d36
  419f6b:	jns    0x419f13
  419f6d:	pop    es
  419f6e:	fild   DWORD PTR fs:[edx+0x315a754]
  419f75:	pop    es
  419f76:	iret   
  419f77:	das    
  419f78:	popa   
  419f79:	(bad)  
  419f7b:	jl     0x419fbf
  419f7d:	call   0xf88e:0xd2f9cfaa
  419f84:	(bad)
  419f87:	or     BYTE PTR [ebp-0xe4be975],bl
  419f8d:	jecxz  0x419f20
  419f8f:	das    
  419f90:	pop    esi
  419f91:	call   0xb719:0x84770f6
  419f98:	sub    BYTE PTR [esp+ebp*1+0x5d],cl
  419f9c:	jae    0x419fbc
  419f9e:	out    0x47,al
  419fa0:	jle    0x419fba
  419fa2:	fwait
  419fa3:	sub    edi,DWORD PTR [edi]
  419fa5:	xor    esi,DWORD PTR [esi-0x68a54509]
  419fab:	cwde   
  419fac:	in     al,0x52
  419fae:	retf   0xb425
  419fb1:	sbb    dl,ch
  419fb3:	add    BYTE PTR [ebp+0x28],cl
  419fb6:	repz clc 
  419fb8:	xor    eax,0x6e85de29
  419fbd:	inc    eax
  419fbe:	jmp    0xde80:0xa44ddcae
  419fc5:	test   al,0x76
  419fc7:	ret    0x6075
  419fca:	addr16 loope 0x419fcf
  419fcd:	daa    
  419fce:	sub    esi,DWORD PTR [eax-0x374c4a71]
  419fd4:	hlt    
  419fd5:	mov    es,WORD PTR [eax-0x6e]
  419fd8:	loopne 0x419fba
  419fda:	sbb    al,0x1d
  419fdc:	push   ecx
  419fdd:	cmc    
  419fde:	cdq    
  419fdf:	je     0x41a049
  419fe1:	or     DWORD PTR [edi-0x58],ebp
  419fe4:	mov    edi,0xdc9b4e0c
  419fe9:	es cmp eax,0x8299ee7e
  419fef:	cmp    eax,0xf7188628
  419ff4:	xchg   BYTE PTR ds:0xf12b4de2,dh
  419ffa:	fcmovne st,st(0)
  419ffc:	dec    edi
  419ffd:	test   eax,0x4520b47e
  41a002:	fidivr WORD PTR [ebx]
  41a004:	int3   
  41a005:	cmp    cl,ch
  41a007:	aas    
  41a008:	in     al,0x7d
  41a00a:	push   esi
  41a00b:	fstp   TBYTE PTR [ebp-0x5a]
  41a00e:	sub    bh,bh
  41a010:	push   edi
  41a011:	sub    DWORD PTR ss:[ebp-0x7b128229],edi
  41a018:	mov    ebp,0xcea28563
  41a01d:	popa   
  41a01e:	jb     0x41a09d
  41a020:	bound  ebx,QWORD PTR [ebx+ecx*4-0x37253be0]
  41a027:	dec    esp
  41a028:	lock inc eax
  41a02a:	stos   BYTE PTR es:[edi],al
  41a02b:	rcr    BYTE PTR [esi-0x76],cl
  41a02e:	aam    0xb5
  41a030:	arpl   WORD PTR [ebx-0x55],cx
  41a033:	inc    ebx
  41a034:	xlat   BYTE PTR ds:[ebx]
  41a035:	(bad)  
  41a036:	lock in eax,dx
  41a038:	mov    bl,0x7c
  41a03a:	(bad)  
  41a03b:	out    dx,eax
  41a03c:	test   al,0x5
  41a03e:	push   ebx
  41a03f:	addr16 div eax
  41a042:	pop    eax
  41a043:	push   ds
  41a044:	adc    dl,dh
  41a046:	xchg   ecx,eax
  41a047:	xlat   BYTE PTR ds:[ebx]
  41a048:	shl    bh,cl
  41a04a:	sub    al,BYTE PTR [ebx+0x7b]
  41a04d:	cdq    
  41a04e:	xchg   ebp,eax
  41a04f:	loop   0x41a088
  41a051:	aaa    
  41a052:	mov    dh,0x50
  41a054:	add    BYTE PTR [ebp+0x54],al
  41a057:	aas    
  41a058:	xor    eax,ebp
  41a05a:	scas   al,BYTE PTR es:[edi]
  41a05b:	or     ecx,eax
  41a05d:	inc    ebx
  41a05e:	adc    bl,BYTE PTR cs:0x7e0a5780
  41a065:	sbb    eax,0x4d639f39
  41a06a:	push   ss
  41a06b:	mov    WORD PTR [esi-0x5c1b2000],?
  41a071:	imul   esp,edi,0xffffffb1
  41a074:	xlat   BYTE PTR ds:[ebx]
  41a075:	cwde   
  41a076:	sbb    eax,0x5bc429b2
  41a07b:	cli    
  41a07c:	not    BYTE PTR [ebx+0x72]
  41a07f:	mov    ?,ecx
  41a081:	mov    fs,WORD PTR [ebp-0x7db769f2]
  41a087:	xor    al,BYTE PTR [ecx+0x504c8c9b]
  41a08d:	call   0x2126:0xf6501ef8
  41a094:	pop    ss
  41a095:	mov    ds:0xd841a3b0,eax
  41a09a:	mov    cs,WORD PTR [eax+0x5bde729e]
  41a0a0:	xor    al,0x36
  41a0a2:	inc    esi
  41a0a3:	sub    cl,BYTE PTR [esi]
  41a0a5:	lahf   
  41a0a6:	in     eax,0x17
  41a0a8:	lea    ebx,ds:0xd86b5a1d
  41a0ae:	loope  0x41a077
  41a0b0:	repnz les ebp,FWORD PTR ss:[ecx+0x5c]
  41a0b5:	mov    al,0x19
  41a0b7:	sub    dh,BYTE PTR [ebp+0x1d]
  41a0ba:	hlt    
  41a0bb:	cmp    ch,bh
  41a0bd:	mov    edx,0xb9304492
  41a0c2:	dec    ebx
  41a0c3:	aad    0x4
  41a0c5:	cmc    
  41a0c6:	sbb    esp,DWORD PTR [esi+0x2cf85d64]
  41a0cc:	aad    0xbc
  41a0ce:	jge    0x41a0f1
  41a0d0:	jo     0x41a0ad
  41a0d2:	aas    
  41a0d3:	dec    esi
  41a0d4:	push   edx
  41a0d5:	xor    BYTE PTR [edi],cl
  41a0d7:	imul   esp,edx,0xffffffd0
  41a0da:	mov    dh,0xf6
  41a0dc:	rcr    DWORD PTR [esi+ebx*2-0x1fb13dd5],0x49
  41a0e4:	push   eax
  41a0e5:	push   0x51
  41a0e7:	push   DWORD PTR ds:0x5258c527
  41a0ed:	add    edx,eax
  41a0ef:	addr16 (bad) 
  41a0f1:	mov    fs,WORD PTR [esi-0x40]
  41a0f4:	adc    DWORD PTR [ebx],0xe2603913
  41a0fa:	gs inc ebx
  41a0fc:	mov    ah,0x28
  41a0fe:	xchg   ebx,eax
  41a0ff:	stos   DWORD PTR es:[edi],eax
  41a100:	call   0x9be2:0xce45135e
  41a107:	in     eax,0xa2
  41a109:	(bad)  
  41a10a:	xor    eax,edi
  41a10c:	pop    edi
  41a10d:	or     ecx,DWORD PTR [edi]
  41a10f:	fdivr  st(2),st
  41a111:	mov    esi,0xb948e099
  41a116:	and    BYTE PTR [ebx],dl
  41a118:	les    edi,FWORD PTR [edi+edi*1+0x1a1f83ed]
  41a11f:	je     0x41a162
  41a121:	mov    esi,0x9abe015
  41a126:	(bad)  
  41a128:	mov    al,0x9d
  41a12a:	rol    DWORD PTR [eax+edi*2],cl
  41a12d:	sub    BYTE PTR [esi+0x3b],bh
  41a130:	ficomp DWORD PTR [eax+0x125eba2c]
  41a136:	push   edx
  41a137:	in     al,dx
  41a138:	sub    ebx,DWORD PTR [edi]
  41a13a:	jl     0x41a0ea
  41a13c:	(bad)  
  41a13d:	cmc    
  41a13e:	test   eax,0xf9f8dab1
  41a143:	rcl    dh,0x71
  41a146:	push   edx
  41a147:	xchg   ebp,eax
  41a148:	fist   DWORD PTR [edx]
  41a14a:	mov    bh,0x78
  41a14c:	mov    edi,ebx
  41a14e:	sbb    edi,DWORD PTR [ebx+edx*4+0x6c]
  41a152:	or     al,0x7a
  41a154:	add    DWORD PTR [ebx-0x4c],ebx
  41a157:	arpl   WORD PTR [ebp+0x35],bp
  41a15a:	addr16 aam 0x9f
  41a15d:	mov    ah,0x71
  41a15f:	dec    ebx
  41a160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a161:	xor    eax,0x378a507
  41a166:	daa    
  41a167:	stos   DWORD PTR es:[edi],eax
  41a168:	sbb    DWORD PTR [eax],esp
  41a16a:	mov    ds:0xeddbc309,al
  41a16f:	xchg   ebp,eax
  41a170:	inc    eax
  41a171:	cmp    al,BYTE PTR [ecx-0x2d]
  41a174:	ficomp DWORD PTR [edx]
  41a176:	push   esi
  41a177:	out    dx,al
  41a178:	das    
  41a179:	sbb    eax,0x7f6a0c81
  41a17e:	int    0xae
  41a180:	sub    al,0x37
  41a182:	sub    BYTE PTR [ebp+0x4e],dh
  41a185:	mov    dl,0xa
  41a187:	ins    BYTE PTR es:[edi],dx
  41a188:	mov    ebp,0x7bc4cec
  41a18d:	sbb    DWORD PTR [eax-0x43a34dcb],esp
  41a193:	xor    DWORD PTR [ebx-0x5995eb5],eax
  41a199:	rol    dh,cl
  41a19b:	or     dl,BYTE PTR [edi]
  41a19d:	ret    
  41a19e:	jp     0x41a193
  41a1a0:	call   0xb9e0:0x39f00131
  41a1a7:	cli    
  41a1a8:	sub    DWORD PTR [ebx+0x10ebceea],edi
  41a1ae:	int3   
  41a1af:	adc    edi,DWORD PTR [ecx]
  41a1b1:	add    ah,BYTE PTR [edi+0x25]
  41a1b4:	sub    BYTE PTR [edx-0x4d],dl
  41a1b7:	sub    BYTE PTR [ecx*2+0x5a4dd9cb],al
  41a1be:	repnz inc edi
  41a1c0:	cdq    
  41a1c1:	stc    
  41a1c2:	xor    eax,0x2ac7c7a
  41a1c7:	and    DWORD PTR [ebx-0x3cc9b21c],esi
  41a1cd:	jb     0x41a150
  41a1cf:	and    al,BYTE PTR [ebp-0x5377b454]
  41a1d5:	(bad)  
  41a1d7:	mov    ds:0xaf6875af,eax
  41a1dc:	ins    BYTE PTR es:[edi],dx
  41a1dd:	ja     0x41a18f
  41a1df:	jae    0x41a1e4
  41a1e1:	push   ecx
  41a1e2:	xor    BYTE PTR [edi+esi*4+0x302c1c62],ah
  41a1e9:	push   ss
  41a1ea:	out    0x5d,eax
  41a1ec:	jb     0x41a180
  41a1ee:	cld    
  41a1ef:	pushf  
  41a1f0:	ss dec ebx
  41a1f2:	dec    esp
  41a1f3:	inc    esp
  41a1f4:	retf   
  41a1f5:	push   eax
  41a1f6:	lods   al,BYTE PTR ds:[esi]
  41a1f7:	jl     0x41a21f
  41a1f9:	xor    eax,0xd85d84d5
  41a1fe:	pop    esi
  41a1ff:	js     0x41a256
  41a201:	push   ebx
  41a202:	fnstenv [esi]
  41a204:	sar    DWORD PTR [ecx+0x48],1
  41a207:	ror    BYTE PTR es:[ebp+esi*8-0x736b7868],1
  41a20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a210:	repnz mov al,BYTE PTR ds:[ecx]
  41a214:	and    ebp,ebx
  41a216:	cmp    al,0x9f
  41a218:	xor    eax,0x5b776dcc
  41a21d:	pusha  
  41a21e:	mov    esi,0x2f9fe324
  41a223:	sbb    BYTE PTR [edi],al
  41a225:	xchg   ecx,eax
  41a226:	(bad)  
  41a227:	icebp  
  41a228:	adc    al,0x2c
  41a22a:	pusha  
  41a22b:	add    al,0x16
  41a22d:	fidivr WORD PTR [edi]
  41a22f:	imul   eax,DWORD PTR [eax],0xedc5747a
  41a235:	fdiv   DWORD PTR [ecx]
  41a237:	and    cl,BYTE PTR [eax]
  41a239:	fisttp QWORD PTR [eax+edi*1+0x3f7bbbfc]
  41a240:	push   0x62
  41a242:	sbb    ah,bl
  41a244:	pop    esp
  41a245:	sub    ebp,DWORD PTR [edi+0x4c849e2]
  41a24b:	sbb    esp,DWORD PTR [esi]
  41a24d:	repnz pop edi
  41a24f:	imul   DWORD PTR [edx-0x6c]
  41a252:	jge    0x41a21f
  41a254:	sbb    al,0xc
  41a256:	(bad)  
  41a257:	and    al,0xfa
  41a259:	sbb    al,0x23
  41a25b:	cmp    esp,ebp
  41a25d:	pusha  
  41a25e:	adc    DWORD PTR [ecx-0x6b73b538],0x63d5f6b9
  41a268:	std    
  41a269:	(bad)  
  41a26a:	bound  edx,QWORD PTR [esi+0x57ffc300]
  41a270:	and    eax,0x46cfd8bf
  41a275:	inc    esp
  41a276:	xchg   edx,eax
  41a277:	out    dx,eax
  41a278:	sbb    al,0xfe
  41a27a:	xor    ch,bh
  41a27c:	outs   dx,DWORD PTR ds:[esi]
  41a27d:	pop    es
  41a27e:	aaa    
  41a27f:	stos   DWORD PTR es:[edi],eax
  41a280:	and    DWORD PTR [esi+0x65],0x843abe2d
  41a287:	imul   edx,DWORD PTR [ecx-0x1e4c3673],0x889a1053
  41a291:	inc    edi
  41a292:	xor    al,0x4a
  41a294:	and    ch,BYTE PTR [esi-0x21]
  41a297:	xchg   ecx,eax
  41a298:	sti    
  41a299:	push   edi
  41a29a:	add    ecx,DWORD PTR [edi]
  41a29c:	jae    0x41a27d
  41a29e:	(bad)  
  41a29f:	test   al,0x65
  41a2a1:	stos   DWORD PTR es:[edi],eax
  41a2a2:	xchg   edi,eax
  41a2a3:	pop    ebx
  41a2a4:	dec    esi
  41a2a5:	(bad)  
  41a2a6:	push   ecx
  41a2a7:	sub    al,0x88
  41a2a9:	fs push ss
  41a2ab:	test   bh,cl
  41a2ad:	pop    ebp
  41a2ae:	fisub  WORD PTR [ebp+0x78]
  41a2b1:	in     al,0x2e
  41a2b3:	std    
  41a2b4:	mov    al,ds:0xf26a468e
  41a2b9:	loopne 0x41a23f
  41a2bb:	inc    eax
  41a2bc:	idiv   ebp
  41a2be:	stos   DWORD PTR es:[edi],eax
  41a2bf:	cld    
  41a2c0:	cmp    esi,DWORD PTR [esp+ecx*2+0x1a]
  41a2c4:	ret    0xe657
  41a2c7:	xor    dl,BYTE PTR [ebx]
  41a2c9:	mov    ebx,0x6bd84c24
  41a2ce:	fisub  WORD PTR [ebp+0x31]
  41a2d1:	data16 add WORD PTR [eax-0x739db1da],bp
  41a2d9:	mov    DWORD PTR [ebp+0x13662b8a],edi
  41a2df:	add    DWORD PTR [eax-0x24],esi
  41a2e2:	jbe    0x41a29f
  41a2e4:	in     eax,dx
  41a2e5:	ss jecxz 0x41a2d9
  41a2e8:	retf   
  41a2e9:	or     bl,cl
  41a2eb:	cwde   
  41a2ec:	jecxz  0x41a354
  41a2ee:	push   edx
  41a2ef:	add    al,0x3d
  41a2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f2:	jno    0x41a28a
  41a2f4:	jo     0x41a29f
  41a2f6:	aaa    
  41a2f7:	pop    es
  41a2f8:	adc    dl,BYTE PTR [edi+0x77]
  41a2fb:	pusha  
  41a2fc:	adc    al,0x6f
  41a2fe:	inc    ebx
  41a2ff:	ss pop es
  41a301:	iret   
  41a302:	hlt    
  41a303:	add    ch,al
  41a305:	mov    dh,bl
  41a307:	in     eax,0xe1
  41a309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30a:	nop
  41a30b:	ret    0xc005
  41a30e:	jmp    0x41a2e7
  41a310:	xor    al,0xd0
  41a312:	mov    edx,0x33894a0c
  41a317:	push   edx
  41a318:	or     eax,0xc34045c
  41a31d:	cmc    
  41a31e:	mov    ch,0x9a
  41a320:	sbb    eax,0x7ecc2bae
  41a325:	sbb    ah,ch
  41a327:	mov    eax,ds:0xcc5e8583
  41a32c:	push   edi
  41a32d:	ja     0x41a2df
  41a32f:	lahf   
  41a330:	mov    edi,DWORD PTR [edi-0x25]
  41a333:	cmp    DWORD PTR [esi+0x54],eax
  41a336:	cmp    edx,esp
  41a338:	sub    DWORD PTR [edx+0x6cdabaf4],ebp
  41a33e:	outs   dx,BYTE PTR ds:[esi]
  41a33f:	pop    ebp
  41a340:	add    al,0x4e
  41a342:	call   0xdb5172f1
  41a347:	and    al,0x8e
  41a349:	push   ss
  41a34a:	fild   DWORD PTR [edx]
  41a34c:	lea    ebx,ds:0x667399e
  41a352:	fdivrp st(4),st
  41a354:	in     al,0x46
  41a356:	xchg   edi,eax
  41a357:	and    dh,BYTE PTR [ebp+0x72]
  41a35a:	xchg   esp,eax
  41a35b:	cld    
  41a35c:	pop    ebp
  41a35d:	sbb    bh,BYTE PTR [esi+0x779ce107]
  41a363:	sub    eax,0x85f6df54
  41a368:	sbb    BYTE PTR ds:0xaae85c83,al
  41a36e:	add    al,BYTE PTR ss:[eax-0x1bf498a0]
  41a375:	push   ss
  41a376:	jle    0x41a37b
  41a378:	xchg   edx,eax
  41a379:	mov    esp,0x428e0ca9
  41a37e:	outs   dx,DWORD PTR ds:[esi]
  41a37f:	jecxz  0x41a3d9
  41a381:	(bad)  
  41a382:	xor    bl,BYTE PTR [ecx+0x36a18291]
  41a388:	loope  0x41a387
  41a38a:	daa    
  41a38b:	daa    
  41a38c:	stos   BYTE PTR es:[edi],al
  41a38d:	aas    
  41a38e:	mov    BYTE PTR [ebx*8-0x10859c3c],bh
  41a395:	mov    bh,0x3b
  41a397:	and    al,0x27
  41a399:	add    ch,BYTE PTR fs:[ebp+ecx*8+0x58]
  41a39e:	xchg   edi,eax
  41a39f:	dec    edi
  41a3a0:	adc    DWORD PTR [edi-0x3f],edi
  41a3a3:	loopne 0x41a3b5
  41a3a5:	push   0xd3fa3f33
  41a3aa:	jg     0x492a7405
  41a3b0:	mov    DWORD PTR [edx+ebx*4],ebp
  41a3b3:	and    ebx,DWORD PTR [esi-0x60d95180]
  41a3b9:	pop    esi
  41a3ba:	inc    eax
  41a3bb:	inc    esi
  41a3bc:	and    edi,ebp
  41a3be:	out    0x79,eax
  41a3c0:	in     eax,dx
  41a3c1:	pop    edx
  41a3c2:	xor    cl,BYTE PTR [edi+esi*2]
  41a3c5:	pop    esi
  41a3c6:	inc    ecx
  41a3c7:	xor    eax,0xaf3608ce
  41a3cc:	test   eax,0x1c2a3c28
  41a3d1:	or     DWORD PTR ds:0xf858800d,esi
  41a3d7:	xchg   edx,eax
  41a3d8:	push   es
  41a3d9:	sbb    DWORD PTR [eax+0x22],0xffffffa1
  41a3dd:	or     ch,BYTE PTR [edi]
  41a3df:	lahf   
  41a3e0:	lea    ebx,[ebx]
  41a3e2:	rol    DWORD PTR [eax],cl
  41a3e4:	sub    al,0x6f
  41a3e6:	stos   DWORD PTR es:[edi],eax
  41a3e7:	mov    bl,0x26
  41a3e9:	retf   
  41a3ea:	arpl   WORD PTR [eax+0xe],bx
  41a3ed:	sbb    BYTE PTR [eax+0x22],0x68
  41a3f1:	and    al,0x8d
  41a3f3:	jnp    0x41a412
  41a3f5:	xchg   ebx,eax
  41a3f6:	push   eax
  41a3f7:	stos   DWORD PTR es:[edi],eax
  41a3f8:	xor    al,0x1a
  41a3fa:	sbb    cl,ah
  41a3fc:	pop    eax
  41a3fd:	test   BYTE PTR [ebx+esi*2-0x4c],0xfe
  41a402:	inc    DWORD PTR [esi+ebp*8+0x55]
  41a406:	and    al,0xc0
  41a408:	and    eax,0x2d19d514
  41a40d:	stos   BYTE PTR es:[edi],al
  41a40e:	add    eax,0x5ecd1c00
  41a413:	mov    edx,0xb312cb10
  41a418:	and    ebx,DWORD PTR [ebp+0x4a]
  41a41b:	cmp    dh,bh
  41a41d:	mov    ah,bl
  41a41f:	inc    ecx
  41a420:	clc    
  41a421:	fld    QWORD PTR [ebx+eax*4]
  41a424:	mov    ds:0x60902906,eax
  41a429:	jge    0x41a3c1
  41a42b:	xor    ch,dh
  41a42d:	(bad)  
  41a42e:	call   0x50c7:0xbdc0310e
  41a435:	sbb    bl,BYTE PTR [edx+0x1e611752]
  41a43b:	sub    dl,0xbd
  41a43e:	and    cl,BYTE PTR [ebx+0x4e]
  41a441:	xor    eax,0x4e46c085
  41a446:	std    
  41a447:	sub    DWORD PTR [esi+0x504f82f6],ecx
  41a44d:	cmc    
  41a44e:	xchg   edx,eax
  41a44f:	pop    ss
  41a450:	out    0x61,al
  41a452:	push   edx
  41a453:	add    al,0x64
  41a455:	mov    BYTE PTR [esi],bh
  41a457:	mov    al,0xed
  41a459:	jae    0x41a3f9
  41a45b:	sbb    BYTE PTR [ebx-0xfc11b98],ah
  41a461:	dec    esp
  41a462:	leave  
  41a463:	jl     0x41a4bb
  41a465:	xchg   esi,eax
  41a466:	inc    esp
  41a467:	mov    edx,0x4c012ac6
  41a46c:	inc    eax
  41a46d:	lock adc esp,DWORD PTR [edx-0x2709348d]
  41a474:	lds    ecx,FWORD PTR [edx-0x38]
  41a477:	cwde   
  41a478:	das    
  41a479:	xchg   BYTE PTR [ebx-0x1ce41255],ch
  41a47f:	mov    al,ds:0x60728158
  41a484:	xchg   edx,eax
  41a485:	inc    ecx
  41a486:	loop   0x41a4d2
  41a488:	sub    cl,BYTE PTR [ecx-0xe673789]
  41a48e:	outs   dx,BYTE PTR ds:[esi]
  41a48f:	mov    edi,0x1c91cec3
  41a494:	les    eax,FWORD PTR [ebx+0x1]
  41a497:	xor    ebx,DWORD PTR [edi-0x6aadb4cb]
  41a49d:	dec    esi
  41a49e:	mov    ecx,0xf4047b2e
  41a4a3:	add    ah,BYTE PTR [ecx]
  41a4a5:	mov    edx,0xfa99f7af
  41a4aa:	loope  0x41a516
  41a4ac:	in     al,0x68
  41a4ae:	lahf   
  41a4af:	dec    edi
  41a4b0:	jecxz  0x41a51e
  41a4b2:	push   esp
  41a4b3:	jnp    0x41a4c3
  41a4b5:	sub    al,0xe8
  41a4b7:	add    al,0xb
  41a4b9:	test   DWORD PTR [esi+ebp*1+0x72f85af3],0xe3b0fb2b
  41a4c4:	push   es
  41a4c5:	rol    ebx,cl
  41a4c7:	adc    eax,0xd598d870
  41a4cc:	scas   eax,DWORD PTR es:[edi]
  41a4cd:	lahf   
  41a4ce:	jb     0x41a477
  41a4d0:	jns    0x41a470
  41a4d2:	fwait
  41a4d3:	push   cs
  41a4d4:	fisttp DWORD PTR [esi]
  41a4d6:	sahf   
  41a4d7:	aad    0x42
  41a4d9:	or     eax,0x51a0fc3a
  41a4de:	test   al,0x38
  41a4e0:	sbb    al,0x33
  41a4e2:	sbb    eax,0x819bd20
  41a4e7:	mov    ds:0x5618b80c,eax
  41a4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ed:	inc    ebp
  41a4ee:	shr    DWORD PTR [ebx+0x6169d4f8],1
  41a4f4:	jae    0x41a4f8
  41a4f6:	repnz enter 0x6ced,0xbb
  41a4fb:	mov    ebp,0x9de19302
  41a500:	je     0x41a4f7
  41a502:	retf   
  41a503:	arpl   WORD PTR [ebx],di
  41a505:	clc    
  41a506:	bound  eax,QWORD PTR [ecx+0x40]
  41a509:	jb     0x41a545
  41a50b:	adc    DWORD PTR [esi+0x7a02cd3d],edi
  41a511:	std    
  41a512:	inc    eax
  41a513:	sbb    BYTE PTR [edx],al
  41a515:	out    dx,al
  41a516:	mov    al,ah
  41a518:	repz fiadd DWORD PTR [edi]
  41a51b:	mov    ecx,0xe1413b7f
  41a520:	cli    
  41a521:	call   DWORD PTR [edi-0x573ea63d]
  41a527:	push   es
  41a528:	xchg   ebp,eax
  41a529:	icebp  
  41a52a:	jge    0x41a54e
  41a52c:	jmp    0xe821:0xfc373353
  41a533:	or     al,0x44
  41a535:	push   cs
  41a536:	aaa    
  41a537:	int3   
  41a538:	cs ins DWORD PTR es:[edi],dx
  41a53a:	mov    ch,0x56
  41a53c:	jnp    0x41a5b7
  41a53e:	sbb    esp,DWORD PTR es:[bp+0x4c]
  41a543:	fdiv   DWORD PTR ds:0x65516eeb
  41a549:	iret   
  41a54a:	inc    esp
  41a54b:	ins    BYTE PTR es:[edi],dx
  41a54c:	inc    ebx
  41a54d:	cli    
  41a54e:	pop    ecx
  41a54f:	jns    0x41a5b5
  41a551:	std    
  41a552:	int    0x57
  41a554:	les    ecx,FWORD PTR [edi-0x150f5585]
  41a55a:	dec    ecx
  41a55b:	pop    ebp
  41a55c:	imul   DWORD PTR [eax-0x1f]
  41a55f:	mov    dh,BYTE PTR [esi+0x5418492f]
  41a565:	push   eax
  41a566:	push   eax
  41a567:	push   ebx
  41a568:	jnp    0x41a52e
  41a56a:	int3   
  41a56b:	ins    BYTE PTR es:[edi],dx
  41a56c:	scas   eax,DWORD PTR es:[edi]
  41a56d:	mov    cl,0xb3
  41a56f:	adc    al,0xaa
  41a571:	test   eax,0x10693647
  41a576:	push   edx
  41a577:	jmp    0xeaff:0x27303a8c
  41a57e:	fsubrp st(0),st
  41a580:	xor    al,0xa
  41a582:	cmc    
  41a583:	adc    al,0x7d
  41a585:	scas   eax,DWORD PTR es:[edi]
  41a586:	outs   dx,DWORD PTR ds:[esi]
  41a587:	jecxz  0x41a528
  41a589:	clc    
  41a58a:	jbe    0x41a563
  41a58c:	jmp    0xe41df22a
  41a591:	sub    eax,0xb204abe
  41a596:	inc    eax
  41a597:	pop    esi
  41a598:	das    
  41a599:	lahf   
  41a59a:	sbb    BYTE PTR [esi+0x6f0ec3be],cl
  41a5a0:	cmp    ebp,DWORD PTR [ecx]
  41a5a2:	pop    ss
  41a5a3:	xor    BYTE PTR [edx+ecx*8],dh
  41a5a6:	mov    dl,BYTE PTR [ebx+0x40]
  41a5a9:	test   DWORD PTR [eax-0x574420b6],esp
  41a5af:	shr    DWORD PTR [ecx-0x62],1
  41a5b2:	jmp    0xe05f:0x6e21636f
  41a5b9:	inc    edx
  41a5ba:	jmp    0x41a60f
  41a5bc:	js     0x41a58a
  41a5be:	xor    eax,0xee025905
  41a5c3:	adc    eax,DWORD PTR ss:[ecx+0x6953f32]
  41a5ca:	fidiv  DWORD PTR [edi+0x67]
  41a5cd:	mov    ecx,eax
  41a5cf:	das    
  41a5d0:	rol    al,0xc0
  41a5d3:	rol    al,0xc0
  41a5d6:	rol    al,0xc0
  41a5d9:	rol    al,0xc0
  41a5dc:	rol    al,0xc0
  41a5df:	rol    al,0xc0
  41a5e2:	rol    al,0xc0
  41a5e5:	rol    al,0xc0
  41a5e8:	rol    al,0xc0
  41a5eb:	rol    al,0xc0
  41a5ee:	rol    al,0xc0
  41a5f1:	rol    al,0xc0
  41a5f4:	rol    al,0xc0
  41a5f7:	rol    BYTE PTR [edx],0x70
  41a5fa:	mov    al,ds:0xb6d0d659
  41a5ff:	pop    eax
  41a600:	adc    DWORD PTR [ebp-0x72],edx
  41a603:	dec    eax
  41a604:	std    
  41a605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a606:	and    al,0xd
  41a608:	pop    ebp
  41a609:	inc    DWORD PTR [esi-0x1ab2b85b]
  41a60f:	lea    edi,[edx-0x5c]
  41a612:	mov    bh,0x50
  41a614:	mov    ebx,DWORD PTR [edx+0x3a]
  41a617:	sub    ebp,DWORD PTR [edx+edi*2+0x50]
  41a61b:	das    
  41a61c:	and    BYTE PTR [eax],dl
  41a61e:	inc    edx
  41a61f:	cmp    DWORD PTR [esi+0x21],0xffffffaa
  41a623:	(bad)  
  41a624:	jmp    0x6020:0x54ff149d
  41a62b:	xor    bh,dh
  41a62d:	adc    al,cl
  41a62f:	ror    esp,0x82
  41a632:	outs   dx,DWORD PTR ds:[esi]
  41a633:	shl    BYTE PTR [ecx-0x2d583f4e],cl
  41a639:	pop    esp
  41a63a:	aas    
  41a63b:	and    al,0x7d
  41a63d:	mov    DWORD PTR [edi],esi
  41a63f:	gs popa 
  41a641:	inc    dl
  41a643:	jno    0x41a678
  41a645:	sbb    bl,al
  41a647:	cmp    ebx,ecx
  41a649:	cmc    
  41a64a:	inc    ecx
  41a64b:	dec    edi
  41a64c:	xchg   BYTE PTR [ebx+0x7a4260a],al
  41a652:	loop   0x41a680
  41a654:	add    al,0x5b
  41a656:	(bad)  
  41a657:	xor    esi,DWORD PTR [eax+0x145190c0]
  41a65d:	ret    
  41a65e:	dec    ecx
  41a65f:	imul   BYTE PTR [esi]
  41a661:	dec    ecx
  41a662:	(bad)  [ebp+ecx*2-0x5cf1a06b]
  41a669:	pop    DWORD PTR [ecx+0x4f]
  41a66c:	jnp    0x41a6b2
  41a66e:	lods   eax,DWORD PTR ds:[esi]
  41a66f:	into   
  41a670:	inc    esi
  41a671:	push   esp
  41a672:	mov    WORD PTR [esi-0x5],fs
  41a675:	rcl    DWORD PTR [edi+0x54ba8402],1
  41a67b:	and    bh,BYTE PTR [esi-0x78b8ad89]
  41a681:	loop   0x41a629
  41a683:	sbb    BYTE PTR [ebx],ah
  41a685:	das    
  41a686:	(bad)  
  41a688:	push   edi
  41a689:	push   edx
  41a68a:	mov    gs,WORD PTR [edi+edx*2-0x3ec028a6]
  41a691:	cmp    dh,ch
  41a693:	mov    ah,BYTE PTR [ebp+edx*8+0x7f]
  41a697:	mov    bl,0x7d
  41a699:	addr16 adc al,0x24
  41a69c:	aad    0x62
  41a69e:	imul   BYTE PTR [eax+0x5d]
  41a6a1:	into   
  41a6a2:	lahf   
  41a6a3:	pop    eax
  41a6a4:	push   cs
  41a6a5:	fldcw  WORD PTR [ebx+0x19]
  41a6a8:	xor    eax,0x6b40a756
  41a6ad:	inc    eax
  41a6ae:	sar    BYTE PTR [eax],0x74
  41a6b1:	and    ebp,DWORD PTR [edx]
  41a6b3:	fmul   QWORD PTR [eax+0x2]
  41a6b6:	xchg   esi,eax
  41a6b7:	es xor esp,ebx
  41a6ba:	jmp    0x8141:0x493fbe02
  41a6c1:	das    
  41a6c2:	xchg   ebp,eax
  41a6c3:	stc    
  41a6c4:	stos   DWORD PTR es:[edi],eax
  41a6c5:	dec    eax
  41a6c6:	stos   DWORD PTR es:[edi],eax
  41a6c7:	and    edx,DWORD PTR [ebx-0xd]
  41a6ca:	stc    
  41a6cb:	cmp    DWORD PTR [ebp-0xbe0cddf],ebp
  41a6d1:	mov    esp,0x26231cea
  41a6d6:	or     ch,BYTE PTR [edx-0x63]
  41a6d9:	and    al,0x1c
  41a6db:	sbb    al,0xdc
  41a6dd:	inc    ebx
  41a6de:	call   0x61b5:0x40d15cf8
  41a6e5:	push   esi
  41a6e6:	out    dx,eax
  41a6e7:	add    esi,DWORD PTR [ebp-0x25]
  41a6ea:	jno    0x41a6ad
  41a6ec:	pop    ebx
  41a6ed:	add    esp,edi
  41a6ef:	and    bh,BYTE PTR [ecx]
  41a6f1:	aam    0xe0
  41a6f3:	sqrtps xmm1,XMMWORD PTR [edi]
  41a6f6:	cli    
  41a6f7:	push   edx
  41a6f8:	aaa    
  41a6f9:	xor    DWORD PTR [esp+ecx*4-0x9],ebp
  41a6fd:	ss pop esp
  41a6ff:	in     eax,0x65
  41a701:	mov    esi,DWORD PTR [esi-0x4fe5c1dc]
  41a707:	xchg   esi,eax
  41a708:	call   0xc2a8af2d
  41a70d:	cmp    al,0x23
  41a70f:	add    eax,0xeead0ca5
  41a714:	ss loope 0x41a6c6
  41a717:	inc    esi
  41a718:	push   edx
  41a719:	cdq    
  41a71a:	cmp    al,0xc
  41a71c:	std    
  41a71d:	sar    DWORD PTR [esi+0x76c83e4e],cl
  41a723:	call   0xa6b5:0x17774ae
  41a72a:	push   esi
  41a72b:	ret    
  41a72c:	out    dx,eax
  41a72d:	jge    0x41a70d
  41a72f:	imul   edi,DWORD PTR [eax+0x23588a7c],0x703d3b78
  41a739:	mov    ds,ebx
  41a73b:	push   ss
  41a73c:	xchg   BYTE PTR ds:0xf65d6bc3,cl
  41a742:	popf   
  41a743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a744:	inc    eax
  41a745:	jmp    0x41a7a2
  41a747:	dec    esp
  41a748:	push   eax
  41a749:	jmp    0xc544:0xb2c0eaf6
  41a750:	inc    ebp
  41a751:	or     eax,DWORD PTR [edx+ecx*4-0x552ce8f6]
  41a758:	leave  
  41a759:	out    0xe3,al
  41a75b:	sub    ecx,DWORD PTR [eax]
  41a75d:	mov    ecx,0x14aa302d
  41a762:	lods   al,BYTE PTR ds:[esi]
  41a763:	dec    ebp
  41a764:	jl     0x41a7db
  41a766:	jl     0x41a744
  41a768:	(bad)  
  41a769:	mov    ds:0xb0de404f,al
  41a76e:	mov    bl,0xcf
  41a770:	jg     0x41a794
  41a772:	iret   
  41a773:	xlat   BYTE PTR ds:[ebx]
  41a774:	inc    ebp
  41a775:	adc    ch,BYTE PTR [eax-0xa]
  41a778:	push   eax
  41a779:	and    eax,0xffffffab
  41a77c:	aas    
  41a77d:	mov    fs,ecx
  41a77f:	in     al,dx
  41a780:	addr16 jo 0x41a79f
  41a783:	in     al,dx
  41a784:	dec    edx
  41a785:	sub    esi,DWORD PTR [ebp-0x3ce3405e]
  41a78b:	mov    eax,0xb4168240
  41a790:	(bad)  
  41a791:	(bad)  
  41a792:	xor    al,0xa
  41a794:	into   
  41a795:	or     ebp,edi
  41a797:	adc    esp,DWORD PTR [ecx]
  41a799:	fcomip st,st(6)
  41a79b:	cmp    BYTE PTR [edi-0x66],al
  41a79e:	mov    bh,cl
  41a7a0:	loopne 0x41a783
  41a7a2:	outs   dx,DWORD PTR ds:[esi]
  41a7a3:	push   cs
  41a7a4:	call   0xe34f88be
  41a7a9:	nop
  41a7aa:	paddd  mm1,QWORD PTR ds:[eax+0x392bacb3]
  41a7b2:	add    DWORD PTR [edi-0x41cc85b2],ebp
  41a7b8:	popa   
  41a7b9:	inc    esi
  41a7ba:	mov    ecx,DWORD PTR [esp+edx*2]
  41a7bd:	cmp    al,0x1a
  41a7bf:	sub    eax,0x28dad387
  41a7c4:	mov    ebx,0x99377801
  41a7c9:	scas   al,BYTE PTR es:[edi]
  41a7ca:	ret    0x71a7
  41a7cd:	jno    0x41a84a
  41a7cf:	mov    ah,0x7c
  41a7d1:	mov    bl,0xa
  41a7d3:	adc    BYTE PTR ds:0x3274be35,ah
  41a7d9:	les    esi,FWORD PTR [esi+0x16]
  41a7dc:	jnp    0x41a80f
  41a7de:	push   esp
  41a7df:	movq   mm3,mm5
  41a7e2:	rcl    BYTE PTR [eax+0x2da8fde1],1
  41a7e8:	es je  0x41a831
  41a7eb:	add    eax,DWORD PTR [eax-0x5c722923]
  41a7f1:	adc    eax,0xbc27f5cd
  41a7f6:	test   DWORD PTR [ebp-0x44decc68],esi
  41a7fc:	imul   esp,DWORD PTR [edx],0x3c1dfeb6
  41a802:	mov    DWORD PTR [edx+0x3e],esi
  41a805:	or     eax,ecx
  41a807:	adc    edi,eax
  41a809:	push   esi
  41a80a:	jbe    0x41a81a
  41a80c:	mov    ds:0x6d07b229,eax
  41a811:	pop    esi
  41a812:	cmp    BYTE PTR [ecx+0x25aad57],dh
  41a818:	push   es
  41a819:	cld    
  41a81a:	jno    0x41a7d5
  41a81c:	mov    ds:0xabf6d791,al
  41a821:	jns    0x41a880
  41a823:	js     0x41a7ac
  41a825:	sbb    BYTE PTR [edx],0x69
  41a828:	push   eax
  41a829:	in     eax,dx
  41a82a:	popa   
  41a82b:	jecxz  0x41a899
  41a82d:	sbb    edi,DWORD PTR [ecx]
  41a82f:	cs dec ebp
  41a831:	lods   eax,DWORD PTR ds:[esi]
  41a832:	mov    dh,0x55
  41a834:	xchg   ebx,eax
  41a835:	sub    BYTE PTR [bx+si+0x75],ah
  41a839:	cmp    edx,DWORD PTR [edi+0x5f67dab5]
  41a83f:	cs call 0xb1c8:0xd2f31ece
  41a847:	mov    al,ds:0xc3839455
  41a84c:	mov    dl,0x3b
  41a84e:	lahf   
  41a84f:	dec    ebp
  41a850:	addr16 xchg ebp,eax
  41a852:	fsub   st,st(5)
  41a854:	test   al,0xe9
  41a856:	push   0x2
  41a858:	arpl   WORD PTR [esi-0x1da7f318],sp
  41a85e:	out    0x95,eax
  41a860:	mov    fs,WORD PTR [eax-0x41]
  41a863:	mov    al,ds:0xb40b3ebf
  41a868:	cmc    
  41a869:	sbb    DWORD PTR [edx],esp
  41a86b:	add    BYTE PTR [ebx],ah
  41a86d:	pop    edx
  41a86e:	mov    edi,0x8f6b1367
  41a873:	(bad)  
  41a875:	xor    DWORD PTR [ebp+0x28],ebp
  41a878:	sub    dh,BYTE PTR [esp+ebp*2]
  41a87b:	add    BYTE PTR [edx-0x59c4cc3],dl
  41a881:	icebp  
  41a882:	sub    ebp,DWORD PTR [eax+0x26]
  41a885:	push   cs
  41a886:	add    eax,0xdf9490ca
  41a88b:	cdq    
  41a88c:	aad    0x5d
  41a88e:	or     DWORD PTR gs:[ecx+0x709d8e11],edi
  41a895:	xchg   BYTE PTR cs:[esi+0x5842cfec],ch
  41a89c:	jl     0x41a829
  41a89e:	imul   ebp,DWORD PTR [ebp+0x123cdbda],0xa
  41a8a5:	add    eax,ebp
  41a8a7:	loope  0x41a8be
  41a8a9:	adc    eax,DWORD PTR [ebp-0x700c5a0e]
  41a8af:	adc    al,BYTE PTR [edi-0xf1a6433]
  41a8b5:	dec    esp
  41a8b6:	div    BYTE PTR [esi]
  41a8b8:	jae    0x41a8ba
  41a8ba:	out    0x94,al
  41a8bc:	out    dx,eax
  41a8bd:	push   ds
  41a8be:	gs data16 mov ah,0x53
  41a8c2:	or     cl,BYTE PTR [ebx+ecx*1+0x296e8bb4]
  41a8c9:	jns    0x41a892
  41a8cb:	test   eax,0x7ac386f9
  41a8d0:	inc    ebx
  41a8d1:	scas   al,BYTE PTR es:[edi]
  41a8d2:	adc    eax,0xf8dc6cdd
  41a8d7:	push   ebp
  41a8d8:	jne    0x41a884
  41a8da:	(bad)  
  41a8db:	pop    esp
  41a8dc:	dec    ecx
  41a8dd:	sbb    eax,0xb3fca234
  41a8e2:	ds pop ebx
  41a8e4:	jno    0x41a878
  41a8e6:	out    dx,al
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	sbb    DWORD PTR [ebx+0x2f],ebp
  41a8eb:	popa   
  41a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ed:	pop    ss
  41a8ee:	nop
  41a8ef:	dec    ebx
  41a8f0:	repz push ebp
  41a8f2:	shl    BYTE PTR [edi+eax*8-0x3c],cl
  41a8f6:	stos   BYTE PTR es:[edi],al
  41a8f7:	mov    ecx,0xf7f4fb51
  41a8fc:	xchg   esi,eax
  41a8fd:	add    BYTE PTR [ebx-0x873890],dh
  41a903:	jecxz  0x41a95d
  41a905:	pop    ecx
  41a906:	shr    BYTE PTR [edx-0x278370bd],1
  41a90c:	inc    edi
  41a90d:	add    cl,dh
  41a90f:	aad    0x75
  41a911:	test   DWORD PTR [esp+ebx*2-0x4f],esp
  41a915:	add    ebp,edx
  41a917:	sub    al,cl
  41a919:	hlt    
  41a91a:	leave  
  41a91b:	add    DWORD PTR [ebp+0x16],ebx
  41a91e:	push   edx
  41a91f:	sub    bh,dl
  41a921:	and    dl,BYTE PTR [esi-0x31a6a166]
  41a927:	inc    edx
  41a928:	jne    0x41a986
  41a92a:	mov    ds:0x46b1388e,al
  41a92f:	jle    0x41a8c1
  41a931:	cmc    
  41a932:	and    BYTE PTR [ecx],dh
  41a934:	pop    es
  41a935:	fs pop es
  41a937:	mov    ?,WORD PTR [ecx+0x645197b4]
  41a93d:	shr    DWORD PTR [eax+0x3130dbcf],1
  41a943:	jmp    0xea61:0xf2ec8397
  41a94a:	push   ss
  41a94b:	push   ebp
  41a94c:	inc    esp
  41a94d:	hlt    
  41a94e:	jl     0x41a9b2
  41a950:	or     sp,WORD PTR [esi]
  41a953:	call   0xe3de:0xd81716de
  41a95a:	xlat   BYTE PTR ds:[ebx]
  41a95b:	adc    BYTE PTR [ecx],ch
  41a95d:	adc    esp,DWORD PTR [ebp+0x38620adb]
  41a963:	fucompp 
  41a965:	or     DWORD PTR [esi],0xffffffce
  41a968:	mov    ds:0x28022ee1,eax
  41a96d:	or     BYTE PTR [ebp-0x5ab18254],al
  41a973:	(bad)  
  41a974:	mov    ds:0x5cecf8a5,eax
  41a979:	pop    esi
  41a97a:	std    
  41a97b:	pop    es
  41a97c:	loope  0x41a9c1
  41a97e:	mov    eax,0x632788d5
  41a983:	pop    ss
  41a984:	retf   
  41a985:	add    ah,dl
  41a987:	ja     0x41a9ee
  41a989:	jecxz  0x41a973
  41a98b:	sub    BYTE PTR [edi+0x52],bl
  41a98e:	shr    ah,0x5c
  41a991:	ins    DWORD PTR es:[edi],dx
  41a992:	fcomp  QWORD PTR [esi-0x5f]
  41a995:	sbb    ebp,DWORD PTR [eax]
  41a997:	sub    eax,0xe2d563c9
  41a99c:	sahf   
  41a99d:	sar    eax,0x21
  41a9a0:	dec    edx
  41a9a1:	mov    esp,DWORD PTR [esi+0x74]
  41a9a4:	xchg   edi,eax
  41a9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a6:	call   FWORD PTR [ebx+0x6ea4c31]
  41a9ac:	add    BYTE PTR [edx+0x634a4739],ch
  41a9b2:	jp     0x41a962
  41a9b4:	jae    0x41a9b4
  41a9b6:	test   eax,0xead56170
  41a9bb:	sub    dh,bh
  41a9bd:	ror    DWORD PTR ds:0xc65ce753,1
  41a9c3:	sub    DWORD PTR [edx-0x56],ecx
  41a9c6:	mov    esi,0xead5a9ad
  41a9cb:	adc    al,BYTE PTR [eax]
  41a9cd:	mov    dl,0x4b
  41a9cf:	add    DWORD PTR [ebx+esi*4+0x2b],edi
  41a9d3:	ds sub al,0xa6
  41a9d6:	int    0x3c
  41a9d8:	test   DWORD PTR [edx+eax*1-0x1e],edx
  41a9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9dd:	popa   
  41a9de:	push   esi
  41a9df:	adc    eax,0x1c0f8049
  41a9e4:	(bad)  
  41a9e5:	and    BYTE PTR [eax-0x280e66f7],bh
  41a9eb:	jbe    0x41a9ae
  41a9ed:	loopne 0x41aa5e
  41a9ef:	jmp    0xfc06:0xa10a2a3f
  41a9f6:	rol    BYTE PTR [ebx-0x43],1
  41a9f9:	je     0x41aa11
  41a9fb:	cld    
  41a9fc:	aad    0x49
  41a9fe:	fstp   QWORD PTR [ecx]
  41aa00:	push   esp
  41aa01:	jl     0x41a9d5
  41aa03:	clc    
  41aa04:	(bad)  
  41aa05:	dec    esi
  41aa06:	and    DWORD PTR [edi-0x63],0xffffffa7
  41aa0a:	sbb    cl,BYTE PTR [eax+0x17]
  41aa0d:	pusha  
  41aa0e:	push   ecx
  41aa0f:	arpl   WORD PTR [ecx+0x23536a75],dx
  41aa15:	xchg   esi,eax
  41aa16:	(bad)  
  41aa18:	outs   dx,DWORD PTR ds:[esi]
  41aa19:	scas   eax,DWORD PTR es:[edi]
  41aa1a:	in     eax,0x84
  41aa1c:	loope  0x41a9ae
  41aa1e:	dec    edi
  41aa1f:	sti    
  41aa20:	scas   eax,DWORD PTR es:[edi]
  41aa21:	enter  0xb6c8,0x41
  41aa25:	jmp    0x1897:0xca432857
  41aa2c:	mov    eax,ds:0xb469f10e
  41aa31:	jnp    0x41aaa8
  41aa33:	adc    DWORD PTR [ecx],ecx
  41aa35:	add    BYTE PTR [edi-0x26],al
  41aa38:	xor    eax,0x69f062dd
  41aa3d:	ins    BYTE PTR es:[edi],dx
  41aa3e:	xor    DWORD PTR [edx],ecx
  41aa40:	cmp    bl,dl
  41aa42:	(bad)  
  41aa43:	leave  
  41aa44:	pop    ds
  41aa45:	stos   BYTE PTR es:[edi],al
  41aa46:	fisubr WORD PTR [eax]
  41aa48:	(bad)  
  41aa49:	popf   
  41aa4a:	fwait
  41aa4b:	xchg   edi,eax
  41aa4c:	or     ebx,DWORD PTR [ecx]
  41aa4e:	aad    0x8e
  41aa50:	cld    
  41aa51:	mov    ds:0x2c42163e,al
  41aa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa57:	loopne 0x41aa93
  41aa59:	inc    esp
  41aa5a:	loope  0x41a9f0
  41aa5c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41aa5e:	lods   eax,DWORD PTR ds:[esi]
  41aa5f:	mov    esp,0x428200c4
  41aa64:	or     DWORD PTR [eax-0x8],ecx
  41aa67:	and    eax,0x3bbe8b15
  41aa6c:	div    BYTE PTR [ebx]
  41aa6e:	xor    DWORD PTR [edx+eiz*2],esp
  41aa71:	sahf   
  41aa72:	xchg   esi,eax
  41aa73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa74:	adc    BYTE PTR es:[ecx+0x7a],ch
  41aa78:	push   0x5c79405b
  41aa7d:	mov    esp,0xce350f8a
  41aa82:	mov    esp,0xa9014f12
  41aa87:	fmul   DWORD PTR [eax]
  41aa89:	and    edi,DWORD PTR [eax+0x3f91c9c8]
  41aa8f:	fs jns 0x41aa20
  41aa92:	test   BYTE PTR [ecx+ecx*2+0x2f84dadd],dh
  41aa99:	ss mov cl,0xc1
  41aa9c:	mov    ah,0x4c
  41aa9e:	xor    DWORD PTR [ecx-0x80],esp
  41aaa1:	pushf  
  41aaa2:	add    ah,BYTE PTR [edi]
  41aaa4:	jle    0x41aa52
  41aaa6:	xchg   ebp,eax
  41aaa7:	xor    dh,BYTE PTR [edx]
  41aaa9:	repz mov al,BYTE PTR [ebx-0x5571a874]
  41aab0:	in     al,dx
  41aab1:	jmp    0x41aa4d
  41aab3:	ret    0xc5bf
  41aab6:	adc    BYTE PTR [ecx],dl
  41aab8:	hlt    
  41aab9:	push   esp
  41aaba:	mov    edx,0x855ce6f0
  41aabf:	adc    dh,BYTE PTR [eax-0x4d418b3d]
  41aac5:	(bad)  ds:0x8c89fadd
  41aacb:	in     eax,dx
  41aacc:	mov    ds:0xe5a0367b,eax
  41aad1:	cs popa 
  41aad3:	adc    eax,eax
  41aad5:	ficomp WORD PTR [edi+eiz*4-0x7fa46b8b]
  41aadc:	mov    cs,WORD PTR [ecx+0xe]
  41aadf:	imul   edx,DWORD PTR [ebp+0x16],0xbb18683f
  41aae6:	mov    BYTE PTR [eax],ch
  41aae8:	adc    eax,0x4237bcf7
  41aaed:	dec    edx
  41aaee:	ja     0x41aaf2
  41aaf0:	int3   
  41aaf1:	mov    ds:0x542fd0f5,eax
  41aaf6:	mov    esp,0x485a4169
  41aafb:	dec    eax
  41aafc:	fs call 0x2d21:0x5906f228
  41ab04:	pop    ds
  41ab05:	jge    0x41ab72
  41ab07:	xor    DWORD PTR [esi],0x15189071
  41ab0d:	adc    eax,esp
  41ab0f:	mov    dh,0x61
  41ab11:	fst    DWORD PTR [edx+0x50]
  41ab14:	mov    ds,WORD PTR [ebp-0x1653e6a5]
  41ab1a:	or     ah,BYTE PTR [edx-0x395773f2]
  41ab20:	daa    
  41ab21:	push   esp
  41ab22:	stc    
  41ab23:	inc    esi
  41ab24:	loopne 0x41ab0f
  41ab26:	lea    ecx,[ebx]
  41ab28:	in     eax,0x78
  41ab2a:	retf   0xcc1c
  41ab2d:	push   0xb1bf07ef
  41ab32:	data16 (bad) 
  41ab34:	call   0x71c7:0xa6b30f5d
  41ab3b:	shr    ecx,1
  41ab3d:	xor    al,0x11
  41ab3f:	inc    esp
  41ab40:	clc    
  41ab41:	mov    dl,al
  41ab43:	out    0xff,eax
  41ab45:	idiv   DWORD PTR [eax-0x31]
  41ab48:	retf   0x4f5f
  41ab4b:	mov    edx,DWORD PTR [esp+ebp*1-0x2e]
  41ab4f:	scas   eax,DWORD PTR es:[edi]
  41ab50:	bound  ebx,QWORD PTR [eax-0x5389b83f]
  41ab56:	outs   dx,BYTE PTR ds:[esi]
  41ab57:	dec    esi
  41ab58:	fs ins BYTE PTR es:[edi],dx
  41ab5a:	adc    DWORD PTR [edx+ebp*1-0x24],esp
  41ab5e:	mov    dh,0xcf
  41ab60:	(bad)  
  41ab61:	pop    eax
  41ab62:	sbb    eax,0xc590c174
  41ab67:	in     eax,dx
  41ab68:	push   ebp
  41ab69:	bnd ret 
  41ab6b:	gs shr dh,0xd2
  41ab6f:	and    al,0x23
  41ab71:	into   
  41ab72:	data16 sub cl,dh
  41ab75:	mov    ebx,0x60a18887
  41ab7a:	aas    
  41ab7b:	adc    DWORD PTR [esi],esi
  41ab7d:	es mov cl,0xea
  41ab80:	jne    0x41abaf
  41ab82:	fs inc esp
  41ab84:	jno    0x41ab45
  41ab86:	popa   
  41ab87:	pushf  
  41ab88:	dec    ebx
  41ab89:	test   dh,0x58
  41ab8c:	fstp   QWORD PTR [esi-0x6d7ef9bd]
  41ab92:	add    al,BYTE PTR [eax-0x55]
  41ab95:	inc    edx
  41ab96:	mov    dl,0x6b
  41ab98:	aaa    
  41ab99:	stc    
  41ab9a:	(bad)  
  41ab9b:	pop    eax
  41ab9c:	sbb    eax,0x12b5ee8e
  41aba1:	xchg   BYTE PTR [edx+0x6a],bh
  41aba4:	or     cl,BYTE PTR [ebx-0x48e43076]
  41abaa:	mov    ds:0xe00b7f46,al
  41abaf:	cwde   
  41abb0:	data16 (bad) 
  41abb2:	sub    al,0xb9
  41abb4:	xchg   edi,eax
  41abb5:	sub    BYTE PTR [esi+0x2c432530],ch
  41abbb:	rol    DWORD PTR [esi],1
  41abbd:	jecxz  0x41abb0
  41abbf:	lods   eax,DWORD PTR ds:[esi]
  41abc0:	mov    WORD PTR [esi],fs
  41abc2:	or     ecx,ebp
  41abc4:	js     0x41abba
  41abc6:	(bad)  
  41abc7:	or     BYTE PTR [ecx],bh
  41abc9:	inc    ebx
  41abca:	dec    ecx
  41abcb:	xchg   edx,eax
  41abcc:	repnz add DWORD PTR [ebx+0x4a5b76e7],eax
  41abd3:	mov    ah,0xea
  41abd5:	dec    eax
  41abd6:	das    
  41abd7:	jb     0x41abf0
  41abd9:	(bad)  
  41abda:	pop    ds
  41abdb:	in     al,0x5a
  41abdd:	sbb    dl,dl
  41abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe0:	call   0x787d1b5c
  41abe5:	sub    BYTE PTR [ecx+eiz*1],dl
  41abe8:	and    al,0x2e
  41abea:	mov    ds:0xa262bd2c,eax
  41abef:	push   es
  41abf0:	bound  ebx,QWORD PTR [edi+edx*4-0x24236a31]
  41abf7:	dec    esp
  41abf8:	pop    ebp
  41abf9:	mov    esi,?
  41abfb:	test   BYTE PTR [eax+0x2b],cl
  41abfe:	inc    edi
  41abff:	and    ecx,DWORD PTR [ebp-0x4a]
  41ac02:	or     dh,BYTE PTR [eax-0x56]
  41ac05:	mov    ?,esi
  41ac07:	add    DWORD PTR [ebp-0x53e7b869],ebp
  41ac0d:	push   eax
  41ac0e:	in     al,0x8b
  41ac10:	pop    DWORD PTR [edx+ecx*8-0x1]
  41ac14:	je     0x41abc4
  41ac16:	imul   esp,DWORD PTR [esi],0xa59d0706
  41ac1c:	mov    eax,ds:0xbce2912e
  41ac21:	imul   ebp,DWORD PTR [ebp+0x73453808],0xac20f254
  41ac2b:	nop
  41ac2c:	or     BYTE PTR [edi],ch
  41ac2e:	cmp    edx,ecx
  41ac30:	sbb    DWORD PTR [ebp+0x33],0xd163808c
  41ac37:	pop    eax
  41ac38:	je     0x41ac83
  41ac3a:	add    ecx,DWORD PTR ds:0xd826c950
  41ac40:	pop    eax
  41ac41:	jle    0x41abf1
  41ac43:	shl    BYTE PTR [edi+eiz*8+0x171f5864],cl
  41ac4a:	mov    esp,0xe72cabb4
  41ac4f:	inc    esp
  41ac50:	inc    ecx
  41ac51:	sbb    bl,dh
  41ac53:	imul   ebp,DWORD PTR [ecx+0x535b88a5],0xfffffff3
  41ac5a:	jle    0x41ac48
  41ac5c:	mov    esi,0x16f8d7a1
  41ac61:	ret    0xb9b0
  41ac64:	pushf  
  41ac65:	out    0x90,eax
  41ac67:	xor    BYTE PTR [ebx],0xa
  41ac6a:	test   ah,cl
  41ac6c:	sbb    al,0x87
  41ac6e:	mov    esp,0xeb277580
  41ac73:	or     edx,DWORD PTR [esi+0x13bc9be2]
  41ac79:	cmp    eax,0x6b913340
  41ac7e:	aas    
  41ac7f:	pop    ss
  41ac80:	jecxz  0x41ac6d
  41ac82:	and    eax,0xa3fa82dd
  41ac87:	fucomi st,st(4)
  41ac89:	and    DWORD PTR [esi+0x1e9c9ab3],eax
  41ac8f:	jle    0x41acc6
  41ac91:	iret   
  41ac92:	clc    
  41ac93:	xchg   ebp,eax
  41ac94:	xor    bl,BYTE PTR [edi+0x1d77a193]
  41ac9a:	cs dec esp
  41ac9c:	mov    esi,0x6ece97a
  41aca1:	cs loope 0x41ac87
  41aca4:	and    DWORD PTR [eax+0x68],ecx
  41aca7:	xor    esp,DWORD PTR [esi+0x5d]
  41acaa:	jbe    0x41acbd
  41acac:	addr16 addr16 sub al,0x30
  41acb0:	sti    
  41acb1:	jmp    0x821eee44
  41acb6:	xor    al,0x98
  41acb8:	in     eax,0x2f
  41acba:	xchg   esp,eax
  41acbb:	out    dx,al
  41acbc:	fmul   QWORD PTR [ebx+esi*1]
  41acbf:	cmp    ebx,DWORD PTR [ecx+0x1f5bf594]
  41acc5:	xchg   esi,eax
  41acc6:	inc    esp
  41acc7:	add    ebx,DWORD PTR [ecx]
  41acc9:	push   eax
  41acca:	sti    
  41accb:	in     al,0x50
  41accd:	loope  0x41ac60
  41accf:	dec    eax
  41acd0:	rol    DWORD PTR [eax],0xcb
  41acd3:	sub    eax,0x6fb10e1d
  41acd8:	ds inc edx
  41acda:	ds inc eax
  41acdc:	add    eax,0x7805c444
  41ace1:	retf   0x7d17
  41ace4:	mov    edx,0x73cfa7cb
  41ace9:	inc    esi
  41acea:	int    0x75
  41acec:	mov    al,0xe
  41acee:	inc    eax
  41acef:	imul   esp,esi,0x0
  41acf2:	out    dx,al
  41acf3:	add    edi,DWORD PTR [eax-0x4b9b39a8]
  41acf9:	in     eax,dx
  41acfa:	fs inc ecx
  41acfc:	jno    0x41ad0b
  41acfe:	out    0xd5,eax
  41ad00:	add    eax,0xba049ab9
  41ad05:	loope  0x41ad55
  41ad07:	test   BYTE PTR [ebp+ebp*2-0x5a],dh
  41ad0b:	dec    edx
  41ad0c:	stc    
  41ad0d:	xchg   BYTE PTR [ebp+0x6f6b39aa],ch
  41ad13:	nop
  41ad14:	add    dl,BYTE PTR fs:[edx+0x0]
  41ad18:	mov    ds:0xa0768c76,eax
  41ad1d:	ret    0xc2a2
  41ad20:	add    dl,BYTE PTR [ebx+0x23]
  41ad23:	stos   BYTE PTR es:[edi],al
  41ad24:	dec    esi
  41ad25:	pop    es
  41ad26:	sub    ecx,DWORD PTR [esi+ebp*4]
  41ad29:	mov    edx,0x91043226
  41ad2e:	mov    ds:0x3f447837,al
  41ad33:	mov    WORD PTR [ebx+0x62ccf580],?
  41ad39:	inc    ebx
  41ad3a:	rol    BYTE PTR [eax],cl
  41ad3c:	sbb    edx,DWORD PTR [eax+0x46]
  41ad3f:	loopne 0x41acfb
  41ad41:	cwde   
  41ad42:	into   
  41ad43:	mov    WORD PTR [eax-0xf],?
  41ad46:	das    
  41ad47:	sbb    BYTE PTR [edi+0x3dcec29],dh
  41ad4d:	(bad)  
  41ad4e:	(bad)  
  41ad4f:	imul   eax,edi,0x57
  41ad52:	push   ds
  41ad53:	pop    edi
  41ad54:	add    DWORD PTR [ebx],eax
  41ad56:	out    0x7,eax
  41ad58:	lea    ebp,[eax-0x261ff87f]
  41ad5e:	mov    ah,0x30
  41ad60:	ja     0x41ad92
  41ad62:	mov    ebx,0xdcdae093
  41ad67:	pop    es
  41ad68:	sti    
  41ad69:	fcom   st(2)
  41ad6b:	xor    dl,dl
  41ad6d:	into   
  41ad6e:	enter  0xb1c6,0xed
  41ad72:	jbe    0x41adc7
  41ad74:	add    al,0x99
  41ad76:	inc    ebx
  41ad77:	xor    ah,BYTE PTR [edx]
  41ad79:	(bad)  
  41ad7a:	fisubr WORD PTR [ebp+ebx*1-0x6ed44d5d]
  41ad81:	ret    0x9101
  41ad84:	cdq    
  41ad85:	adc    eax,0x71dc8487
  41ad8a:	(bad)  
  41ad8b:	les    edi,FWORD PTR [ecx+0x17]
  41ad8e:	push   ecx
  41ad8f:	push   ds
  41ad90:	sti    
  41ad91:	mov    BYTE PTR [ebx],bh
  41ad93:	inc    bh
  41ad95:	out    dx,eax
  41ad96:	loop   0x41adb3
  41ad98:	xchg   edx,eax
  41ad99:	icebp  
  41ad9a:	mov    edi,0x99dd515f
  41ad9f:	inc    BYTE PTR [esi]
  41ada1:	int3   
  41ada2:	nop
  41ada3:	push   ebp
  41ada4:	das    
  41ada5:	cmp    esi,DWORD PTR [edx+0x49fb70ea]
  41adab:	mov    esi,0xfe521dfb
  41adb0:	pushf  
  41adb1:	mov    esp,0x577daf23
  41adb6:	pop    ebp
  41adb7:	jb     0x41adcb
  41adb9:	pop    ebx
  41adba:	adc    eax,0x9a2fdbbd
  41adbf:	ins    DWORD PTR es:[edi],dx
  41adc0:	idiv   DWORD PTR [edi-0x2d]
  41adc3:	in     al,0x64
  41adc5:	xchg   esp,eax
  41adc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc7:	jle    0x41ad89
  41adc9:	rol    al,0xc0
  41adcc:	rol    al,0xc0
  41adcf:	rol    al,0xc0
  41add2:	rol    al,0xc0
  41add5:	rol    al,0xc0
  41add8:	rol    al,0xc0
  41addb:	rol    al,0xc0
  41adde:	rol    al,0xc0
  41ade1:	rol    al,0xc0
  41ade4:	rol    al,0xc0
  41ade7:	rol    al,0xc0
  41adea:	rol    al,0xc0
  41aded:	rol    al,0xc0
  41adf0:	rol    al,0xc0
  41adf3:	rol    al,0xc0
  41adf6:	rol    al,0xc0
  41adf9:	rol    al,0xc0
  41adfc:	rol    al,0xc0
  41adff:	shl    BYTE PTR [eax-0xf],0x6b
  41ae03:	adc    DWORD PTR [edx-0x662c55f8],ebp
  41ae09:	sbb    eax,ecx
  41ae0b:	ret    0x80ee
  41ae0e:	jb     0x41ade7
  41ae10:	cmp    BYTE PTR [edx],ah
  41ae12:	push   ss
  41ae13:	inc    ecx
  41ae14:	fisub  WORD PTR [ebx]
  41ae16:	sbb    DWORD PTR [edx],esp
  41ae18:	loopne 0x41ae41
  41ae1a:	popa   
  41ae1b:	cli    
  41ae1c:	inc    ebp
  41ae1d:	cwde   
  41ae1e:	add    BYTE PTR ds:0x61e2bf71,dl
  41ae24:	pop    ds
  41ae25:	pop    ebp
  41ae26:	sub    ebx,DWORD PTR [edi+ecx*2+0x4ac3b82c]
  41ae2d:	jo     0x41ae71
  41ae2f:	add    dh,bl
  41ae31:	adc    ch,0x9a
  41ae34:	out    dx,eax
  41ae35:	outs   dx,DWORD PTR ds:[esi]
  41ae36:	rcr    BYTE PTR [eax],cl
  41ae38:	mov    ebp,0xc8fc6ee2
  41ae3d:	stos   DWORD PTR es:[edi],eax
  41ae3e:	stos   DWORD PTR es:[edi],eax
  41ae3f:	jbe    0x41ae51
  41ae41:	push   ds
  41ae42:	lea    ebx,[ecx]
  41ae44:	scas   al,BYTE PTR es:[edi]
  41ae45:	xchg   esp,eax
  41ae46:	(bad)  
  41ae47:	jne    0x41ae45
  41ae49:	iret   
  41ae4a:	mov    esp,0x656af44b
  41ae4f:	(bad)  
  41ae50:	fadd   QWORD PTR [edi-0x66]
  41ae53:	mov    ds:0x5a379756,eax
  41ae58:	fnstenv [esi]
  41ae5a:	test   DWORD PTR [esi+0x9],eax
  41ae5d:	adc    DWORD PTR [ecx],0xffffffea
  41ae60:	mov    esi,edi
  41ae62:	into   
  41ae63:	lea    ebx,[ecx]
  41ae65:	stos   DWORD PTR es:[edi],eax
  41ae66:	icebp  
  41ae67:	lock mov dh,0xbb
  41ae6a:	bswap  edx
  41ae6c:	lods   eax,DWORD PTR ds:[esi]
  41ae6d:	xchg   edi,eax
  41ae6e:	xchg   ecx,eax
  41ae6f:	ror    cl,1
  41ae71:	jp     0x41ae53
  41ae73:	bound  ebx,QWORD PTR [edx]
  41ae75:	sbb    ah,BYTE PTR [esi+esi*1+0x6d418ea1]
  41ae7c:	or     BYTE PTR [ecx-0x28db9708],dh
  41ae82:	inc    esi
  41ae83:	dec    ebp
  41ae84:	(bad)  
  41ae85:	sub    eax,0xd2332a3b
  41ae8a:	xchg   dx,ax
  41ae8c:	jns    0x41ae19
  41ae8e:	mov    ah,0x13
  41ae90:	pop    cx
  41ae92:	mov    eax,ds:0xb84f7200
  41ae97:	push   eax
  41ae98:	jge    0x41ae44
  41ae9a:	adc    bh,0x84
  41ae9d:	xor    ebx,esi
  41ae9f:	aas    
  41aea0:	fmul   st(2),st
  41aea2:	pop    edi
  41aea3:	dec    edi
  41aea4:	shl    BYTE PTR [ecx],cl
  41aea6:	mov    dh,0x2f
  41aea8:	loope  0x41ae42
  41aeaa:	mov    ebx,0x24ce2bf0
  41aeaf:	jl     0x41af03
  41aeb1:	cs push edi
  41aeb3:	scas   al,BYTE PTR es:[edi]
  41aeb4:	cmp    DWORD PTR [edi+0x1a307052],0xbf5b008b
  41aebe:	sub    al,0x36
  41aec0:	dec    esi
  41aec1:	les    edx,FWORD PTR [esi-0x67d37dfb]
  41aec7:	scas   eax,DWORD PTR es:[edi]
  41aec8:	pop    ebx
  41aec9:	mov    ah,0x9d
  41aecb:	hlt    
  41aecc:	jae    0x41af16
  41aece:	fcmovbe st,st(0)
  41aed0:	push   0x5c
  41aed2:	pop    es
  41aed3:	in     eax,dx
  41aed4:	test   al,0x24
  41aed6:	inc    edx
  41aed7:	scas   eax,DWORD PTR es:[edi]
  41aed8:	cmc    
  41aed9:	mov    cl,0xce
  41aedb:	sar    BYTE PTR ds:0xf9014b6d,1
  41aee1:	outs   dx,DWORD PTR ds:[esi]
  41aee2:	sbb    dh,BYTE PTR [ebx-0xd]
  41aee5:	push   ebx
  41aee6:	pusha  
  41aee7:	out    0x29,eax
  41aee9:	stos   DWORD PTR es:[edi],eax
  41aeea:	mov    ch,0x3c
  41aeec:	dec    edi
  41aeed:	lahf   
  41aeee:	inc    esi
  41aeef:	aam    0x90
  41aef1:	rcr    BYTE PTR [ebp-0x4db8087f],cl
  41aef7:	aaa    
  41aef8:	aam    0xbc
  41aefa:	lds    ebx,FWORD PTR [edi+0x7f2f6b05]
  41af00:	jnp    0x41aee5
  41af02:	mov    fs,WORD PTR [esi+ecx*4]
  41af05:	mov    ?,WORD PTR es:[edx]
  41af08:	mov    dh,BYTE PTR [esi-0x18]
  41af0b:	sub    eax,0xe3359184
  41af10:	jecxz  0x41af8c
  41af12:	ret    0xcd22
  41af15:	dec    esi
  41af16:	out    dx,al
  41af17:	js     0x41af03
  41af19:	push   0x579d928c
  41af1e:	stc    
  41af1f:	push   ebx
  41af20:	push   esp
  41af21:	rcl    BYTE PTR [esp+ebx*8+0x2c],cl
  41af25:	pop    ecx
  41af26:	dec    esi
  41af27:	sbb    ecx,DWORD PTR [ebp-0x2ca374aa]
  41af2d:	mov    ch,0x78
  41af2f:	lods   eax,DWORD PTR ds:[esi]
  41af30:	jo     0x41aefc
  41af32:	adc    BYTE PTR [eax],bl
  41af34:	frstpm(287 only) 
  41af36:	mov    BYTE PTR [edi+0x53],bh
  41af39:	stos   DWORD PTR es:[edi],eax
  41af3a:	popa   
  41af3b:	int3   
  41af3c:	jae    0x41af23
  41af3e:	jmp    0x6294ace0
  41af43:	xchg   esi,ebx
  41af45:	stos   DWORD PTR es:[edi],eax
  41af46:	ds jle 0x41aedc
  41af49:	sbb    al,0xf3
  41af4b:	xor    edi,DWORD PTR [esi+0x2b]
  41af4e:	xchg   esi,eax
  41af4f:	lods   eax,DWORD PTR ds:[esi]
  41af50:	mov    ecx,0xcc5757f0
  41af55:	test   ebp,ebp
  41af57:	inc    ebp
  41af58:	or     cl,BYTE PTR [ecx+0x6210b2c2]
  41af5e:	mov    ds:0xde547972,al
  41af63:	and    eax,0x7fb9cb7d
  41af68:	mov    bh,0xb5
  41af6a:	mov    bh,BYTE PTR [esi+0x77]
  41af6d:	pop    ebp
  41af6e:	imul   ebp,DWORD PTR [eax+edi*1],0x3fef6291
  41af75:	mov    al,ds:0xa4596b6d
  41af7a:	aam    0x56
  41af7c:	mov    eax,0xa3525e3b
  41af81:	lock cmp al,0x9b
  41af84:	ja     0x41afa0
  41af86:	mov    bh,0xba
  41af88:	aas    
  41af89:	jns    0x41afc6
  41af8b:	push   ds
  41af8c:	sub    BYTE PTR [esi+ebx*8-0x48ddbc8c],bl
  41af93:	mov    cs,ecx
  41af95:	cmp    DWORD PTR [eax-0x2e6066cb],esi
  41af9b:	cmp    al,0x89
  41af9d:	enter  0xf91,0xb5
  41afa1:	push   esi
  41afa2:	jb     0x41afe0
  41afa4:	repnz pop ss
  41afa6:	pop    es
  41afa7:	mov    ds:0x8024cbfe,eax
  41afac:	lock sub ch,BYTE PTR [ecx+0x63df2eaa]
  41afb3:	loop   0x41afcf
  41afb5:	ins    DWORD PTR es:[edi],dx
  41afb6:	stos   BYTE PTR es:[edi],al
  41afb7:	sub    DWORD PTR [esp+eax*8+0x182a1a75],esi
  41afbe:	lods   eax,DWORD PTR ds:[esi]
  41afbf:	aaa    
  41afc0:	sub    DWORD PTR gs:[eax-0x67],ebx
  41afc4:	sbb    al,0x18
  41afc6:	mov    cl,0x23
  41afc8:	mov    edx,0xd9b2d061
  41afcd:	jne    0x41af54
  41afcf:	xchg   esi,eax
  41afd0:	xor    dl,BYTE PTR [edi+edi*4-0x1d]
  41afd4:	repnz popa 
  41afd6:	xchg   edi,eax
  41afd7:	push   esp
  41afd8:	dec    edi
  41afd9:	adc    eax,0xe23411ca
  41afde:	and    BYTE PTR [edi-0x36],dh
  41afe1:	dec    ebx
  41afe2:	ins    DWORD PTR es:[edi],dx
  41afe3:	adc    al,0xf9
  41afe5:	dec    esi
  41afe6:	mov    ds:0x7a963f7f,eax
  41afeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afec:	cmp    DWORD PTR [ebx-0x55],0x5c190dcf
  41aff3:	cmp    esi,DWORD PTR [edx+0x7969ed6b]
  41aff9:	cld    
  41affa:	fisttp QWORD PTR [ecx]
  41affc:	ja     0x41b010
  41affe:	stos   BYTE PTR es:[edi],al
  41afff:	xor    BYTE PTR [eax-0x19],ah
  41b002:	push   0xa2cebf80
  41b007:	mov    eax,ds:0xdc0192f8
  41b00c:	out    dx,al
  41b00d:	push   ebx
  41b00e:	push   0x5bafd309
  41b013:	ror    DWORD PTR [ebx],1
  41b015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b016:	mov    ?,WORD PTR [edi-0xcad5343]
  41b01c:	js     0x41afc6
  41b01e:	(bad)  
  41b01f:	call   0x6b26ca91
  41b024:	gs sub eax,0xe02e7341
  41b02a:	jp     0x41afad
  41b02c:	cmp    eax,0x6663aaae
  41b031:	ret    0x8a1c
  41b034:	ficom  WORD PTR [ecx-0x28]
  41b037:	jp     0x41b06d
  41b039:	inc    eax
  41b03a:	mov    ds,WORD PTR [ebx]
  41b03c:	je     0x41b087
  41b03e:	dec    esp
  41b03f:	jle    0x41b040
  41b041:	call   DWORD PTR [edi+0x7e12c65a]
  41b047:	(bad)  
  41b048:	sub    edi,ebp
  41b04a:	imul   ebx,DWORD PTR [ecx+0x4],0x1e
  41b04e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04f:	inc    ebx
  41b050:	jl     0x41b076
  41b052:	inc    ebx
  41b053:	lods   al,BYTE PTR ds:[esi]
  41b054:	inc    edx
  41b055:	dec    eax
  41b056:	pop    ebx
  41b057:	(bad)  
  41b058:	in     al,0xf5
  41b05a:	imul   edi,DWORD PTR [edx+0x60990974],0x2c65fa2c
  41b064:	lahf   
  41b065:	xor    cl,BYTE PTR [eax-0x47]
  41b068:	ins    DWORD PTR es:[edi],dx
  41b069:	int3   
  41b06a:	(bad)  
  41b06b:	loop   0x41b0e9
  41b06d:	mov    esp,0x3c1b07a6
  41b072:	ds add al,0xdc
  41b075:	iret   
  41b076:	cmp    ebp,DWORD PTR [edi+0x65e623d4]
  41b07c:	sbb    DWORD PTR [edi-0x64],eax
  41b07f:	scas   eax,DWORD PTR es:[edi]
  41b080:	push   edi
  41b081:	mov    dh,0xd6
  41b083:	sbb    esp,DWORD PTR [edx+0x2f]
  41b086:	les    edx,FWORD PTR [ecx+0x3076ca11]
  41b08c:	sbb    ecx,DWORD PTR [ecx+ecx*2+0x38c2e32e]
  41b093:	stc    
  41b094:	add    BYTE PTR [ecx+0x70],dh
  41b097:	mov    cl,0x58
  41b099:	adc    bl,BYTE PTR [edi+0x3a8a036c]
  41b09f:	add    al,bh
  41b0a1:	cmp    edi,DWORD PTR [edx-0x4da5fba7]
  41b0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a8:	popa   
  41b0a9:	sar    dh,cl
  41b0ab:	sbb    DWORD PTR [esi+0x56],ebx
  41b0ae:	xor    edi,DWORD PTR [edi+0x63]
  41b0b1:	mov    bh,BYTE PTR [edx+0x2b961e6c]
  41b0b7:	scas   eax,DWORD PTR es:[edi]
  41b0b8:	push   ebx
  41b0b9:	pop    edx
  41b0ba:	fimul  DWORD PTR [eax+0x6a]
  41b0bd:	add    DWORD PTR [edx-0x2505bacb],0x40
  41b0c4:	sub    bl,BYTE PTR [ebx-0x3bb7c82e]
  41b0ca:	lods   eax,DWORD PTR ds:[esi]
  41b0cb:	sub    BYTE PTR [edi+0x16],al
  41b0ce:	cwde   
  41b0cf:	imul   ebx,DWORD PTR cs:[edx+0x5af02c8a],0xae5d6fe9
  41b0da:	pop    ss
  41b0db:	hlt    
  41b0dc:	iret   
  41b0dd:	fild   DWORD PTR [edx+0x2e]
  41b0e0:	test   esp,ecx
  41b0e2:	call   0x910b:0xf6220691
  41b0e9:	adc    dh,BYTE PTR [edi+0x33d25fd4]
  41b0ef:	repz arpl WORD PTR [edx],di
  41b0f2:	mov    dh,0x58
  41b0f4:	inc    edi
  41b0f5:	lods   al,BYTE PTR ds:[esi]
  41b0f6:	cli    
  41b0f7:	or     esi,DWORD PTR [ecx+0x5fb4bf12]
  41b0fd:	mov    dl,0x33
  41b0ff:	xchg   ebx,eax
  41b100:	arpl   WORD PTR [edx],bx
  41b102:	mov    dh,0x58
  41b104:	pop    esp
  41b105:	mov    WORD PTR [ebx-0x6881c8f5],gs
  41b10b:	dec    esp
  41b10c:	retf   0x3392
  41b10f:	mov    bl,0x63
  41b111:	jp     0x41b119
  41b113:	pop    eax
  41b114:	xor    BYTE PTR [ebx],bl
  41b116:	push   ds
  41b117:	or     esi,DWORD PTR ds:0x5fc0e25e
  41b11d:	jb     0x41b14a
  41b11f:	push   ebx
  41b120:	pop    eax
  41b121:	pop    edx
  41b122:	into   
  41b123:	adc    BYTE PTR [eax],0x1b
  41b126:	xchg   esi,eax
  41b127:	push   0x9c92cf88
  41b12c:	pop    edi
  41b12d:	add    cl,dl
  41b12f:	test   ecx,0xd2803f77
  41b135:	jnp    0x41b141
  41b137:	xor    eax,0x136f8dd
  41b13c:	adc    bh,BYTE PTR [edx]
  41b13e:	xchg   esi,eax
  41b13f:	scas   al,BYTE PTR es:[edi]
  41b140:	pop    ecx
  41b141:	int3   
  41b142:	mov    edx,0xa642762c
  41b147:	mov    dh,0x69
  41b149:	cld    
  41b14a:	mov    dh,bh
  41b14c:	inc    esp
  41b14d:	push   es
  41b14e:	sahf   
  41b14f:	das    
  41b150:	cmp    edx,ebx
  41b152:	es dec esp
  41b154:	stos   BYTE PTR es:[edi],al
  41b155:	fs mov ch,0xe6
  41b158:	loopne 0x41b114
  41b15a:	xchg   edi,eax
  41b15b:	clc    
  41b15c:	push   ds
  41b15d:	out    0x23,al
  41b15f:	sub    DWORD PTR [eax-0x7e6f8f6],eax
  41b165:	dec    ebx
  41b166:	adc    BYTE PTR [edx+0x39896178],ch
  41b16c:	fiadd  WORD PTR [ebx]
  41b16e:	mov    ebx,0xa77a6835
  41b173:	les    eax,FWORD PTR [ebp+eiz*1-0x64]
  41b177:	out    0x60,eax
  41b179:	mov    edx,0x42ee0122
  41b17e:	push   cs
  41b17f:	ret    
  41b180:	rcl    DWORD PTR [esi+0x28fe9932],0x1e
  41b187:	arpl   cx,dx
  41b189:	inc    edx
  41b18a:	pop    ss
  41b18b:	nop
  41b18c:	inc    esp
  41b18d:	sahf   
  41b18e:	sahf   
  41b18f:	mov    bh,0x39
  41b191:	push   edx
  41b192:	jo     0xa840400c
  41b198:	or     eax,0x8d1ae657
  41b19d:	das    
  41b19e:	pop    esp
  41b19f:	ds adc edi,edx
  41b1a2:	push   ecx
  41b1a3:	xchg   ecx,eax
  41b1a4:	dec    edi
  41b1a5:	pop    edx
  41b1a6:	mov    bl,0x6b
  41b1a8:	arpl   WORD PTR [esi+0x4a1e4cba],dx
  41b1ae:	sub    ebx,DWORD PTR [ebx]
  41b1b0:	push   ebx
  41b1b1:	out    0xda,al
  41b1b3:	cmp    al,0x66
  41b1b5:	adc    DWORD PTR [esi-0x2f03a6cb],0x19
  41b1bc:	loop   0x41b1d8
  41b1be:	fiadd  WORD PTR [ebx]
  41b1c0:	js     0x41b1c0
  41b1c2:	(bad)  
  41b1c3:	adc    al,0xc7
  41b1c5:	adc    bl,BYTE PTR [eax-0x6d31cacd]
  41b1cb:	adc    DWORD PTR [ebp+0x6023bcec],0xaa01163f
  41b1d5:	add    al,0xab
  41b1d7:	fist   WORD PTR [ebx+0x2a]
  41b1da:	clc    
  41b1db:	dec    esp
  41b1dc:	addr16 pop edx
  41b1de:	mov    bl,0x63
  41b1e0:	dec    ebp
  41b1e1:	xchg   esi,eax
  41b1e2:	pop    ss
  41b1e3:	call   0x2ea7d5b7
  41b1e8:	test   eax,0x50324acc
  41b1ed:	dec    edx
  41b1ee:	jb     0x41b226
  41b1f0:	adc    eax,0x1ec8971a
  41b1f5:	mov    dh,0x2b
  41b1f7:	lahf   
  41b1f8:	push   edx
  41b1f9:	push   0xf
  41b1fb:	mov    eax,0x8ffea674
  41b200:	aad    0x57
  41b202:	ds sbb cl,dl
  41b205:	and    dh,BYTE PTR cs:[esi+0x21]
  41b209:	cmp    al,0x4e
  41b20b:	das    
  41b20c:	call   0xb809:0x63fccbc2
  41b213:	mov    edi,0xa1de4e9f
  41b218:	mov    ebx,0x1ab81ccf
  41b21d:	adc    edi,edi
  41b21f:	scas   al,BYTE PTR es:[edi]
  41b220:	sbb    eax,0xc12cd2cc
  41b225:	inc    esi
  41b226:	(bad)  
  41b227:	xor    DWORD PTR ss:[eax-0x66],edi
  41b22b:	dec    esp
  41b22c:	ds xor eax,DWORD PTR ds:[edi]
  41b230:	arpl   dx,ax
  41b232:	mov    edx,0x231e1e10
  41b237:	or     al,0x20
  41b239:	stc    
  41b23a:	dec    esp
  41b23b:	pushf  
  41b23c:	inc    esi
  41b23d:	sub    dh,BYTE PTR [eax]
  41b23f:	xor    BYTE PTR [ebx],dl
  41b241:	bound  edx,QWORD PTR [edi+0x150e4e59]
  41b247:	arpl   WORD PTR [ebx-0x39],bx
  41b24a:	xchg   esi,eax
  41b24b:	jo     0x41b214
  41b24d:	aam    0xaa
  41b24f:	push   ss
  41b250:	imul   ecx,esi,0x6a
  41b253:	add    eax,0xcbfefa74
  41b258:	cdq    
  41b259:	push   edi
  41b25a:	jp     0x41b276
  41b25c:	mov    dh,0x2e
  41b25e:	outs   dx,WORD PTR ds:[esi]
  41b260:	test   eax,0x5a818e47
  41b265:	xchg   ebx,eax
  41b266:	mov    bl,0xe1
  41b268:	fcom   DWORD PTR [esi]
  41b26a:	pop    es
  41b26b:	sub    DWORD PTR [esi-0x36caf9fd],edx
  41b271:	cli    
  41b272:	sub    al,BYTE PTR [edx+0x28]
  41b275:	div    dh
  41b277:	sbb    BYTE PTR ss:[esi+0x1c163e8b],0x1a
  41b27f:	jmp    0x6a4ef4ec
  41b284:	ret    0x9c50
  41b287:	mov    bh,0x68
  41b289:	mov    edx,0x42de0112
  41b28e:	ds mov dh,0xf1
  41b291:	cld    
  41b292:	loop   0x41b22d
  41b294:	jmp    0x619a:0x93057f1b
  41b29b:	push   eax
  41b29c:	call   0x4f16:0xcf2eee23
  41b2a3:	push   esp
  41b2a4:	cmc    
  41b2a5:	sbb    ah,BYTE PTR [ebx-0x726d8789]
  41b2ab:	scas   al,BYTE PTR es:[edi]
  41b2ac:	je     0x41b2e9
  41b2ae:	inc    BYTE PTR [ebx-0x11]
  41b2b1:	iret   
  41b2b2:	mov    dl,0x44
  41b2b4:	outs   dx,BYTE PTR ds:[esi]
  41b2b5:	add    ebp,DWORD PTR [eax]
  41b2b7:	out    dx,eax
  41b2b8:	push   0x64140ffe
  41b2bd:	adc    dh,BYTE PTR [ebx-0x2931aacd]
  41b2c3:	add    al,0xc7
  41b2c5:	add    bl,BYTE PTR [eax-0x75a4aedd]
  41b2cb:	sub    BYTE PTR [edx-0x7a2001fa],ch
  41b2d1:	push   edi
  41b2d2:	outs   dx,BYTE PTR ds:[esi]
  41b2d3:	sbb    bh,BYTE PTR [edx-0x6a90add2]
  41b2d9:	push   esi
  41b2da:	mov    dh,0x6
  41b2dc:	inc    esp
  41b2dd:	xchg   BYTE PTR cs:[edi+0x4f],ch
  41b2e1:	adc    dh,BYTE PTR [edi]
  41b2e3:	xor    bl,BYTE PTR [edi+0x3c]
  41b2e6:	xor    edx,DWORD PTR ds:0x41ac1e62
  41b2ec:	jmp    0x2e96:0xc5030203
  41b2f3:	cdq    
  41b2f4:	cli    
  41b2f5:	sub    BYTE PTR [edx],dl
  41b2f7:	jne    0x41b2ce
  41b2f9:	into   
  41b2fa:	sub    al,0xa8
  41b2fc:	jb     0x41b294
  41b2fe:	not    cl
  41b300:	call   0xea430d31
  41b305:	pop    ds
  41b306:	mov    dh,0xcd
  41b308:	pusha  
  41b309:	add    eax,0xd445ea17
  41b30e:	cwde   
  41b30f:	cs stos DWORD PTR es:[edi],eax
  41b311:	call   0x7e23:0x6adfda48
  41b318:	sub    eax,0x21ac6d7
  41b31d:	cs jmp 0x122a:0xd64f3d6f
  41b325:	dec    esi
  41b326:	cli    
  41b327:	sbb    edi,eax
  41b329:	out    0x8c,al
  41b32b:	cmp    al,0x72
  41b32d:	cmp    dh,dl
  41b32f:	or     esp,eax
  41b331:	idiv   BYTE PTR [esp+ebp*1-0x5159d5ee]
  41b338:	imul   ecx,esp,0x55462c8a
  41b33e:	pop    eax
  41b33f:	arpl   WORD PTR [ecx-0x26],di
  41b342:	adc    eax,0xb1f6128c
  41b347:	das    
  41b348:	mov    DWORD PTR [edi+0x6a],ecx
  41b34b:	sub    ah,BYTE PTR [esi-0x730a9b2]
  41b351:	cmp    cl,BYTE PTR [eax+ebp*8-0xd298e]
  41b358:	loopne 0x41b364
  41b35a:	mov    esp,0x72c612d8
  41b35f:	scas   al,BYTE PTR es:[edi]
  41b360:	mov    ch,0xcc
  41b362:	pop    esi
  41b363:	sub    al,0xea
  41b365:	inc    edx
  41b366:	add    dh,BYTE PTR [esi+0x4c57fcc5]
  41b36c:	xchg   ebx,eax
  41b36d:	mov    ds:0x7e638333,al
  41b372:	mov    esp,0xaf0e4686
  41b377:	or     ecx,0xda290eed
  41b37d:	sub    BYTE PTR [ebx+0x1e4a35af],dh
  41b383:	sub    DWORD PTR [edx],0x732a5c1b
  41b389:	cmp    al,0xb8
  41b38b:	js     0x41b3dc
  41b38d:	outs   dx,BYTE PTR ds:[esi]
  41b38e:	(bad)  
  41b38f:	sbb    DWORD PTR cs:[esi+0x28e699fa],edx
  41b396:	push   ss
  41b397:	jae    0x41b391
  41b399:	jbe    0x41b3b6
  41b39b:	rcr    BYTE PTR [edi-0x75],0x2b
  41b39f:	pop    edx
  41b3a0:	pop    eax
  41b3a1:	inc    esi
  41b3a2:	fisubr WORD PTR [ecx+0x1b3ece06]
  41b3a8:	or     DWORD PTR [esi],edx
  41b3aa:	xchg   edi,eax
  41b3ab:	jl     0x41b374
  41b3ad:	sub    bl,BYTE PTR [eax-0x7539cac5]
  41b3b3:	add    DWORD PTR [esi+0x18],0x967903b6
  41b3ba:	call   0x892d:0xfaf612b0
  41b3c1:	push   edi
  41b3c2:	push   0x1a
  41b3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c5:	cs push esi
  41b3c7:	outs   dx,DWORD PTR ds:[esi]
  41b3c8:	cdq    
  41b3c9:	dec    ebx
  41b3ca:	jp     0x41b3e4
  41b3cc:	in     al,0xde
  41b3ce:	pushf  
  41b3cf:	ins    BYTE PTR es:[edi],dx
  41b3d0:	adc    BYTE PTR [edx-0x5900c1ae],bl
  41b3d6:	mov    BYTE PTR [eax+0x18b70e78],bh
  41b3dc:	dec    edi
  41b3dd:	ret    0x93b3
  41b3e0:	arpl   bp,si
  41b3e2:	or     eax,0x3ab9b2b8
  41b3e7:	adc    al,0xd5
  41b3e9:	iret   
  41b3ea:	sub    bl,BYTE PTR ds:[edi-0x6a]
  41b3ee:	(bad)  
  41b3ef:	mov    edi,0x1a0e57e5
  41b3f4:	fisubr DWORD PTR [esi]
  41b3f6:	xor    ch,BYTE PTR [edi-0xb]
  41b3f9:	dec    edx
  41b3fa:	push   ds
  41b3fb:	sbb    BYTE PTR [edx+0x52fb4e6],dl
  41b401:	dec    edi
  41b402:	out    dx,al
  41b403:	sub    bh,BYTE PTR [edx]
  41b405:	outs   dx,BYTE PTR ds:[esi]
  41b406:	shr    BYTE PTR [esi],cl
  41b408:	adc    eax,0xa99fe96
  41b40d:	sub    dl,ah
  41b40f:	arpl   WORD PTR ds:0x4444178e,sp
  41b415:	inc    edx
  41b416:	cwde   
  41b417:	(bad)  
  41b418:	jg     0x41b484
  41b41a:	mov    gs,WORD PTR [edx+edx*1+0x3]
  41b41e:	cli    
  41b41f:	outs   dx,DWORD PTR ds:[esi]
  41b420:	dec    ebp
  41b421:	dec    edi
  41b422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b423:	sub    ah,BYTE PTR [edx+0x4e]
  41b426:	call   0x721c:0x8cc6f83b
  41b42d:	sbb    dh,dl
  41b42f:	sub    edi,ecx
  41b431:	ja     0x41b3c8
  41b433:	adc    edx,DWORD PTR [edx+0x1b]
  41b436:	cmp    al,0x2e
  41b438:	push   ecx
  41b439:	and    dl,BYTE PTR [edi+0x33feae4c]
  41b43f:	xlat   BYTE PTR ds:[ebx]
  41b440:	arpl   WORD PTR [edx],si
  41b442:	mov    edx,0x2bee1ee0
  41b447:	(bad)  
  41b448:	push   ebx
  41b449:	add    bl,dl
  41b44b:	rol    BYTE PTR [edx-0x42ca957d],1
  41b451:	clc    
  41b452:	test   DWORD PTR [ecx-0x185431d0],0xb0229a78
  41b45c:	fistp  QWORD PTR [esi+0x725597a8]
  41b462:	(bad)  
  41b463:	mov    al,ds:0x7bf2aec7
  41b468:	std    
  41b469:	inc    edx
  41b46a:	(bad)  
  41b46b:	nop
  41b46c:	sahf   
  41b46d:	add    ebp,DWORD PTR [esi]
  41b46f:	mov    dh,0xe1
  41b471:	cld    
  41b472:	adc    cl,BYTE PTR [esi+ebx*8-0x72]
  41b476:	xor    esp,DWORD PTR [edi+0x70baa263]
  41b47c:	push   ds
  41b47d:	jle    0x41b4aa
  41b47f:	push   edi
  41b480:	push   ebx
  41b481:	mov    dl,0xda
  41b483:	pusha  
  41b484:	test   dl,al
  41b486:	ret    
  41b487:	inc    edi
  41b488:	loopne 0x41b40c
  41b48a:	mov    esp,0xea5e1250
  41b48f:	scas   al,BYTE PTR es:[edi]
  41b490:	cmp    eax,0x122cd6cc
  41b495:	inc    edx
  41b496:	cli    
  41b497:	mov    dh,0x4d
  41b499:	cld    
  41b49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b49b:	dec    esp
  41b49c:	bound  edx,QWORD PTR [esi+esi*2+0x8d7eb4e]
  41b4a3:	add    esp,0x58058319
  41b4a9:	push   esp
  41b4aa:	fimul  DWORD PTR [esi-0x416c7c2c]
  41b4b0:	push   eax
  41b4b1:	sti    
  41b4b2:	xchg   edi,eax
  41b4b3:	jle    0x41b47c
  41b4b5:	adc    esp,DWORD PTR [edi-0xb30e0ec]
  41b4bb:	sub    bl,BYTE PTR [edi+0x6c]
  41b4be:	inc    BYTE PTR [ebp-0x7f]
  41b4c1:	sahf   
  41b4c2:	xchg   esi,eax
  41b4c3:	in     al,0xdf
  41b4c5:	loop   0x41b470
  41b4c7:	jne    0x41b51c
  41b4c9:	jmp    DWORD PTR [edi+0x4c]
  41b4cc:	mov    ds:0xe0ca33fb,eax
  41b4d1:	xlat   BYTE PTR ds:[ebx]
  41b4d2:	ja     0x41b4fe
  41b4d4:	mov    bl,0x6c
  41b4d6:	mov    WORD PTR [esi],ds
  41b4d8:	inc    ebx
  41b4d9:	xlat   BYTE PTR ds:[ebx]
  41b4da:	clc    
  41b4db:	ror    DWORD PTR [edi-0x21],1
  41b4de:	mov    bl,0x63
  41b4e0:	mov    al,ds:0xcf161713
  41b4e5:	and    esp,DWORD PTR [eax-0x733398d2]
  41b4eb:	cs out dx,eax
  41b4ed:	and    ebx,esi
  41b4ef:	xchg   edx,eax
  41b4f0:	js     0x41b561
  41b4f2:	(bad)  
  41b4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f4:	(bad)  
  41b4f5:	mov    ds:0x28518298,eax
  41b4fa:	xchg   esp,eax
  41b4fb:	outs   dx,BYTE PTR ds:[esi]
  41b4fc:	retf   
  41b4fd:	sbb    esp,DWORD PTR [ebx]
  41b4ff:	cs xor eax,0xdb810f4b
  41b505:	sbb    BYTE PTR [ebx],dh
  41b507:	add    esi,esp
  41b509:	xchg   esi,eax
  41b50a:	pop    ds
  41b50b:	cdq    
  41b50c:	sub    ebp,DWORD PTR [eax]
  41b50e:	ret    
  41b50f:	arpl   WORD PTR [eax+ebx*1],ax
  41b512:	push   edx
  41b513:	imul   edx,DWORD PTR [ebx+eax*1-0x333451fc],0x42e42c28
  41b51e:	adc    al,0xb6
  41b520:	(bad)  
  41b522:	cmp    BYTE PTR [esp+esi*8-0x6c],cl
  41b526:	xor    edi,DWORD PTR [ebp-0x6545b79d]
  41b52c:	push   ds
  41b52d:	test   BYTE PTR [ebx],ch
  41b52f:	lods   eax,DWORD PTR ds:[esi]
  41b530:	push   ebx
  41b531:	pop    eax
  41b532:	fimul  DWORD PTR [edx+0x35c08328]
  41b538:	pop    es
  41b539:	cli    
  41b53a:	in     al,dx
  41b53b:	inc    eax
  41b53c:	cmp    BYTE PTR [ebx-0x65e8fa30],bl
  41b542:	cld    
  41b543:	push   esi
  41b544:	fist   WORD PTR [eax-0x58]
  41b547:	jno    0x41b59e
  41b549:	mov    esi,ss
  41b54b:	inc    esi
  41b54c:	mov    DWORD PTR [eax-0x68],0xa09c3561
  41b553:	sub    DWORD PTR [eax+ebx*1-0x74],0xb0964303
  41b55b:	cdq    
  41b55c:	jl     0x41b586
  41b55e:	pushf  
  41b55f:	arpl   WORD PTR [ebx-0x40],dx
  41b562:	pop    ss
  41b563:	adc    al,BYTE PTR [esp+ebx*1-0x62]
  41b567:	xor    eax,0xcc21d039
  41b56c:	push   eax
  41b56d:	cmp    DWORD PTR [eax-0x632870ca],0xfffffff2
  41b574:	jb     0x41b572
  41b576:	repnz aad 0xe0
  41b579:	xor    BYTE PTR [edx+eiz*8-0x51a713ee],bh
  41b580:	scas   eax,DWORD PTR es:[edi]
  41b581:	int3   
  41b582:	inc    esp
  41b583:	sub    al,0x80
  41b585:	inc    edx
  41b586:	push   0x54fcbfb6
  41b58b:	dec    esp
  41b58c:	nop
  41b58d:	enter  0x9933,0x63
  41b591:	fs mov edx,0x2bb81ebe
  41b597:	mov    DWORD PTR [ebx+0x74],edx
  41b59a:	fisubr DWORD PTR [esi+0x352483f4]
  41b5a0:	jmp    0x41b59c
  41b5a2:	or     BYTE PTR [eax-0x3c],al
  41b5a5:	fwait
  41b5a6:	xor    al,0x5
  41b5a8:	sti    
  41b5a9:	call   0x5da8:0x74df8a18
  41b5b0:	push   ebp
  41b5b1:	test   al,0xd6
  41b5b3:	jp     0x41b57c
  41b5b5:	fs cwde 
  41b5b7:	dec    ebp
  41b5b8:	xor    eax,0x881fcb8
  41b5bd:	sbb    al,ah
  41b5bf:	add    esp,DWORD PTR [edi]
  41b5c1:	xchg   esi,eax
  41b5c2:	int3   
  41b5c3:	cdq    
  41b5c4:	sbb    BYTE PTR [eax],ch
  41b5c6:	lock arpl WORD PTR [edi],si
  41b5c9:	pushf  
  41b5ca:	pop    ss
  41b5cb:	ss inc esp
  41b5cd:	xor    BYTE PTR [esi-0x3f3f3fef],bl
  41b5d3:	rol    al,0xc0
  41b5d6:	rol    al,0xc0
  41b5d9:	rol    al,0xc0
  41b5dc:	rol    al,0xc0
  41b5df:	rol    al,0xc0
  41b5e2:	rol    al,0xc0
  41b5e5:	rol    al,0xc0
  41b5e8:	rol    al,0xc0
  41b5eb:	rol    al,0xc0
  41b5ee:	rol    al,0xc0
  41b5f1:	rol    al,0xc0
  41b5f4:	rol    al,0xc0
  41b5f7:	rol    al,0xc0
  41b5fa:	rol    al,0xc0
  41b5fd:	rol    al,0xc0
  41b600:	cmp    esp,ebp
  41b602:	(bad)  
  41b604:	je     0x41b626
  41b606:	inc    BYTE PTR [ecx]
  41b608:	push   ebx
  41b609:	push   edi
  41b60a:	sbb    BYTE PTR [edx],0x4c
  41b60d:	lods   al,BYTE PTR cs:[esi]
  41b60f:	outs   dx,DWORD PTR ds:[esi]
  41b610:	arpl   WORD PTR [edi-0x70],cx
  41b613:	sub    bl,BYTE PTR [esi+ecx*2-0x44]
  41b617:	and    eax,0x899620f9
  41b61c:	lods   al,BYTE PTR ds:[esi]
  41b61d:	sbb    BYTE PTR [ebx+eax*1-0x7d],cl
  41b621:	xchg   esi,eax
  41b622:	jo     0x41b5bd
  41b624:	mov    esp,0x93635c28
  41b629:	add    BYTE PTR [edi],dl
  41b62b:	rol    BYTE PTR [esp+ebx*8-0x62],cl
  41b62f:	cmc    
  41b630:	cmp    DWORD PTR [eax],edx
  41b632:	cmpps  xmm6,XMMWORD PTR [esp+ecx*8-0x2],0xe5
  41b638:	iret   
  41b639:	push   edi
  41b63a:	and    al,0x1a
  41b63c:	loopne 0x41b66c
  41b63e:	or     BYTE PTR [edi-0x21],ch
  41b641:	dec    edi
  41b642:	xor    al,0x2a
  41b644:	lock dec esi
  41b646:	sbb    BYTE PTR [ecx-0x6173bb08],bh
  41b64c:	jb     0x41b5e6
  41b64e:	repnz test eax,0x8ebc54e0
  41b654:	adc    cl,BYTE PTR [eax-0x33f4513c]
  41b65a:	call   0xd483da8b
  41b65f:	mov    dh,0x1b
  41b661:	cld    
  41b662:	clc    
  41b663:	dec    esp
  41b664:	xor    al,0x54
  41b666:	xor    edi,DWORD PTR [ebp+0x63]
  41b669:	mov    BYTE PTR [edx+0x2b441e5a],bh
  41b66f:	ins    DWORD PTR es:[edi],dx
  41b670:	push   ebx
  41b671:	cwde   
  41b672:	fimul  DWORD PTR [edx+0x68]
  41b675:	add    DWORD PTR [eax-0x5305b8cb],0x40
  41b67c:	js     0x41b619
  41b67e:	nop
  41b67f:	add    eax,0x16bc9a57
  41b684:	fist   WORD PTR [eax]
  41b686:	test   al,0x31
  41b688:	push   ebp
  41b689:	int3   
  41b68a:	fisub  DWORD PTR [edi]
  41b68c:	push   ecx
  41b68d:	add    dl,BYTE PTR [ecx-0x63388842]
  41b693:	xchg   ecx,eax
  41b694:	pop    edi
  41b695:	hlt    
  41b696:	mov    ds:0x68d7e0dd,eax
  41b69b:	sub    ah,BYTE PTR [esi+ecx*2+0x38f8cd54]
  41b6a2:	mov    edx,gs
  41b6a4:	jb     0x41b67a
  41b6a6:	repnz std 
  41b6a8:	loopne 0x41b6b2
  41b6aa:	mov    esp,0x70c412da
  41b6af:	scas   al,BYTE PTR es:[edi]
  41b6b0:	mov    bh,0xcc
  41b6b2:	pop    esp
  41b6b3:	sub    al,0xe8
  41b6b5:	inc    edx
  41b6b6:	add    BYTE PTR [esi+0x282cfcc7],dh
  41b6bc:	cmp    eax,0x1240fe0f
  41b6c1:	push   edi
  41b6c2:	rcr    DWORD PTR [edx],0xd
  41b6c5:	cs in  eax,dx
  41b6c7:	outs   dx,DWORD PTR ds:[esi]
  41b6c8:	and    cl,BYTE PTR [edi-0x46]
  41b6cb:	cmp    ebx,eax
  41b6cd:	inc    ebx
  41b6ce:	xor    BYTE PTR ds:0x8ada5878,al
  41b6d4:	ins    DWORD PTR es:[edi],dx
  41b6d5:	(bad)  
  41b6d6:	xchg   ebx,eax
  41b6d7:	adc    BYTE PTR [eax-0x13],bh
  41b6da:	pop    ss
  41b6db:	daa    
  41b6dc:	inc    ebp
  41b6dd:	mov    BYTE PTR fs:[esi],cl
  41b6e0:	sbb    edx,edi
  41b6e2:	clc    
  41b6e3:	sub    al,0x34
  41b6e5:	inc    edx
  41b6e6:	in     al,0xb6
  41b6e8:	sub    edi,esp
  41b6ea:	enter  0x44c,0x1
  41b6ee:	outs   dx,BYTE PTR gs:[esi]
  41b6f0:	adc    edi,0xffffff9d
  41b6f3:	cs adc al,0x2b
  41b6f6:	ficomp WORD PTR [ecx]
  41b6f8:	js     0x41b6de
  41b6fa:	(bad)  
  41b6fb:	ds (bad) 
  41b6fd:	cmp    BYTE PTR [eax-0x470bcaf7],bl
  41b703:	xor    DWORD PTR [eax+ebx*1-0x5c],0x88966b03
  41b70b:	cdq    
  41b70c:	inc    esp
  41b70d:	sub    BYTE PTR [ebx+eiz*2+0xa17d87b],dh
  41b714:	inc    ebp
  41b715:	hlt    
  41b716:	jbe    0x41b747
  41b718:	mov    ecx,DWORD PTR [edi+0x68]
  41b71b:	sub    ah,BYTE PTR [esi+ecx*2+0x38f8cd54]
  41b722:	mov    edx,gs
  41b724:	jb     0x41b6fa
  41b726:	repnz std 
  41b728:	loopne 0x41b732
  41b72a:	mov    esp,0xbe8176da
  41b72f:	arpl   si,si
  41b731:	pop    ebp
  41b732:	pop    ss
  41b733:	retf   0x2bcf
  41b736:	add    al,0x2e
  41b738:	retf   
  41b739:	int3   
  41b73a:	sub    BYTE PTR [esp+eiz*8],ch
  41b73d:	inc    edx
  41b73e:	adc    al,0xb6
  41b740:	(bad)  
  41b742:	cmp    BYTE PTR [esp+esi*8-0x6c],cl
  41b746:	xor    edi,DWORD PTR [ebp-0x6545b79d]
  41b74c:	push   ds
  41b74d:	test   BYTE PTR [ebx],ch
  41b74f:	lods   eax,DWORD PTR ds:[esi]
  41b750:	push   ebx
  41b751:	pop    eax
  41b752:	fimul  DWORD PTR [edx+0x35c08328]
  41b758:	pop    es
  41b759:	cli    
  41b75a:	in     al,dx
  41b75b:	inc    eax
  41b75c:	cmp    BYTE PTR [ebx-0x65e8fa30],bl
  41b762:	cld    
  41b763:	push   esi
  41b764:	fist   WORD PTR [eax-0x58]
  41b767:	jno    0x41b7be
  41b769:	mov    edx,ss
  41b76b:	add    esp,DWORD PTR [edi+0x722e720d]
  41b771:	inc    ebx
  41b772:	popa   
  41b773:	push   0x1d933430
  41b778:	js     0x41b714
  41b77a:	test   al,0x3a
  41b77c:	fbld   TBYTE PTR [eax+ebp*4]
  41b77f:	or     eax,0x2ad6f855
  41b784:	(bad)  
  41b785:	adc    al,0x98
  41b787:	cmp    eax,0x818cc835
  41b78c:	pop    eax
  41b78d:	sbb    BYTE PTR [eax-0x63037ff8],dh
  41b793:	sub    BYTE PTR [eax-0x782201f1],ch
  41b799:	push   edi
  41b79a:	ins    BYTE PTR es:[edi],dx
  41b79b:	sbb    bh,BYTE PTR [eax-0x6890afd2]
  41b7a1:	dec    edi
  41b7a2:	jl     0x41b7ce
  41b7a4:	mov    BYTE PTR [esi+0x60],cl
  41b7a7:	icebp  
  41b7a8:	clc    
  41b7a9:	or     al,0x8c
  41b7ab:	(bad)  
  41b7ac:	jb     0x41b76e
  41b7ae:	repnz loope 0x41b791
  41b7b1:	sbb    al,0xbc
  41b7b3:	mov    dh,0x12
  41b7b5:	mov    al,0xc
  41b7b7:	scas   al,BYTE PTR es:[edi]
  41b7b8:	ret    
  41b7b9:	int3   
  41b7ba:	xor    BYTE PTR [esp+edi*8],ch
  41b7bd:	inc    edx
  41b7be:	sbb    al,0xb6
  41b7c0:	sar    esp,cl
  41b7c2:	add    BYTE PTR [esp+ecx*8-0x64],cl
  41b7c6:	xor    esi,DWORD PTR [ebp-0x7d45af9d]
  41b7cc:	push   ds
  41b7cd:	mov    WORD PTR [ebx],gs
  41b7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7d0:	push   ebx
  41b7d1:	mov    al,ds:0x832072da
  41b7d6:	enter  0x1f35,0xfa
  41b7da:	hlt    
  41b7db:	inc    eax
  41b7dc:	xor    BYTE PTR [ebx-0x65d0fa28],bl
  41b7e2:	les    ebx,FWORD PTR [esi-0x21]
  41b7e5:	pop    eax
  41b7e6:	test   al,0x69
  41b7e8:	push   ebp
  41b7e9:	xchg   esp,eax
  41b7ea:	(bad)  
  41b7eb:	dec    esi
  41b7ec:	(bad)  
  41b7ed:	dec    eax
  41b7ee:	cwde   
  41b7ef:	sbb    DWORD PTR ds:0x6481a8e4,esi
  41b7f5:	sbb    BYTE PTR [ebx+eax*1-0x664769a5],dl
  41b7fc:	je     0x41b826
  41b7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ff:	arpl   WORD PTR [ebx-0x38],bp
  41b802:	pop    ss
  41b803:	sbb    al,BYTE PTR [esp+eax*1-0x62]
  41b807:	sub    eax,0xa0fd839
  41b80c:	inc    esi
  41b80d:	hlt    
  41b80e:	mov    esi,0x689a8b05
  41b813:	cli    
  41b814:	(bad)  
  41b816:	test   al,0xcd
  41b818:	push   ebp
  41b819:	cmp    dh,dl
  41b81b:	jmp    0x835:0xfd98d4c7
  41b822:	dec    esp
  41b823:	sbb    DWORD PTR [eax-0x48fc8fe8],0xe8995c96
  41b82d:	sub    BYTE PTR [eax],al
  41b82f:	arpl   di,ax
  41b831:	ins    BYTE PTR es:[edi],dx
  41b832:	pop    ss
  41b833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b834:	inc    esp
  41b835:	mov    al,ds:0x7c39819e
  41b83a:	setbe  BYTE PTR [eax+edx*4-0x2]
  41b83f:	mov    cl,0xe3
  41b841:	push   edi
  41b842:	adc    BYTE PTR [edx],bl
  41b844:	fsubr  QWORD PTR [esi]
  41b846:	cmp    al,0x6f
  41b848:	repz dec edi
  41b84a:	loopne 0x41b876
  41b84c:	sub    al,0x4e
  41b84e:	int3   
  41b84f:	push   ebp
  41b850:	clc    
  41b851:	mov    al,0x8c
  41b853:	bound  esi,QWORD PTR [edx+0x6c]
  41b856:	repnz inc ebp
  41b858:	loopne 0x41b7da
  41b85a:	mov    esp,0xe85c1252
  41b85f:	scas   al,BYTE PTR es:[edi]
  41b860:	aas    
  41b861:	int3   
  41b862:	aam    0x2c
  41b864:	adc    BYTE PTR [edx-0x8],al
  41b867:	mov    dh,0x4f
  41b869:	cld    
  41b86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b86b:	dec    esp
  41b86c:	pusha  
  41b86d:	cmp    BYTE PTR [ebx],dh
  41b86f:	or     DWORD PTR [ebx-0xc],esp
  41b872:	mov    edx,0x2b281e2e
  41b877:	cmp    DWORD PTR [ebx-0x3c],edx
  41b87a:	ficomp DWORD PTR [esi]
  41b87c:	inc    esp
  41b87d:	xor    DWORD PTR [ebp+esi*1+0x4098fa7b],0x54
  41b885:	add    BYTE PTR [esp+0x60],0x24
  41b88a:	mov    esp,0x54f812fe
  41b88f:	scas   al,BYTE PTR es:[edi]
  41b890:	fwait
  41b891:	int3   
  41b892:	js     0x41b8c0
  41b894:	mov    ah,0x42
  41b896:	fs mov dh,0xab
  41b899:	cld    
  41b89a:	dec    eax
  41b89b:	dec    esp
  41b89c:	test   BYTE PTR [ebx],ch
  41b89e:	cli    
  41b89f:	es ins BYTE PTR es:[edi],dx
  41b8a1:	push   edi
  41b8a2:	xchg   DWORD PTR [edx],ebx
  41b8a4:	inc    ebx
  41b8a5:	cs test al,0x6f
  41b8a8:	inc    edi
  41b8a9:	dec    edi
  41b8aa:	mov    ds:0xaef5532a,eax
  41b8af:	fnstcw WORD PTR ds:0xa3016768
  41b8b5:	or     DWORD PTR [eax+0x35],0xffffff9c
  41b8b9:	cli    
  41b8ba:	ja     0x41b8fc
  41b8bc:	mov    bl,0x9b
  41b8be:	pop    ebx
  41b8bf:	add    eax,0xdd479aac
  41b8c4:	(bad)  
  41b8c6:	test   al,0xea
  41b8c8:	push   ebp
  41b8c9:	pop    ss
  41b8ca:	(bad)  
  41b8cb:	int    0xc7
  41b8cd:	retf   
  41b8ce:	cwde   
  41b8cf:	call   0x18e7:0x812b6735
  41b8d6:	pop    ss
  41b8d7:	add    ebx,eax
  41b8d9:	xchg   esi,eax
  41b8da:	cmp    ecx,DWORD PTR [eax+0x8cff508]
  41b8e0:	(bad)  
  41b8e1:	fwait
  41b8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e3:	sub    edx,DWORD PTR [eax-0x49e3674e]
  41b8e9:	inc    ebp
  41b8ea:	pushf  
  41b8eb:	sub    BYTE PTR [ebx+0x2b],dh
  41b8ee:	mov    ah,0x21
  41b8f0:	jno    0x41b94f
  41b8f2:	jecxz  0x41b92f
  41b8f4:	push   ss
  41b8f5:	jg     0x41b8b4
  41b8f7:	cli    
  41b8f8:	push   0x7c
  41b8fa:	inc    BYTE PTR [ebx+0x2f0c0512]
  41b900:	cld    
  41b901:	neg    BYTE PTR [edx+0x3931e486]
  41b907:	out    0x66,eax
  41b909:	and    DWORD PTR [esi-0x49],ecx
  41b90c:	shr    BYTE PTR [edi],0x91
  41b90f:	push   esp
  41b910:	pop    edx
  41b911:	shl    DWORD PTR [ecx+0x7a530c56],1
  41b917:	jecxz  0x41b96f
  41b919:	sbb    DWORD PTR [eax+eax*1-0x68],0x79
  41b91e:	mov    al,ds:0xde5d5d32
  41b923:	or     DWORD PTR [ebx-0x9],esi
  41b926:	stos   BYTE PTR es:[edi],al
  41b927:	push   ecx
  41b928:	dec    esp
  41b929:	fisubr WORD PTR [edi+0x33fba1da]
  41b92f:	bound  edi,QWORD PTR [ebx+0x4b]
  41b932:	idiv   DWORD PTR [esi]
  41b934:	push   edx
  41b935:	(bad)  
  41b937:	outs   dx,DWORD PTR ds:[esi]
  41b938:	mov    ecx,0xf6679ccc
  41b93d:	sub    edi,0x29
  41b940:	mov    al,0x3e
  41b942:	aas    
  41b943:	in     eax,dx
  41b944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b945:	(bad)  
  41b946:	out    0xb2,al
  41b948:	ret    
  41b949:	fs push cs
  41b94b:	xor    DWORD PTR [ebp-0x6e2c07b9],edx
  41b951:	out    0x86,al
  41b953:	leave  
  41b954:	mov    esi,0xb231ce09
  41b959:	cmp    eax,0x9e5385da
  41b95e:	mov    BYTE PTR [esi],0x61
  41b961:	jecxz  0x41b8e5
  41b963:	adc    BYTE PTR [ebx+edx*1-0x43],0x15
  41b968:	arpl   WORD PTR [edx-0x50],di
  41b96b:	mov    ecx,DWORD PTR [ebp+0x7f]
  41b96e:	or     BYTE PTR [eax-0x673035b1],dl
  41b974:	jle    0x41b911
  41b976:	mov    cl,0xed
  41b978:	popa   
  41b979:	enter  0xa00,0xb3
  41b97d:	jg     0x41b9d2
  41b97f:	leave  
  41b980:	cli    
  41b981:	push   0xed7670e5
  41b986:	mov    ebp,0x330c7bca
  41b98b:	add    DWORD PTR [esi],ebx
  41b98d:	cld    
  41b98e:	mov    ebx,0x2a029921
  41b993:	aaa    
  41b994:	sbb    al,0xb0
  41b996:	push   ss
  41b997:	fwait
  41b998:	xor    ecx,esp
  41b99a:	mov    al,ds:0x39c07401
  41b99f:	add    DWORD PTR [ebx-0x4e2f30f],edi
  41b9a5:	add    esp,esi
  41b9a7:	xchg   ebx,eax
  41b9a8:	adc    eax,esi
  41b9aa:	mov    eax,0x76c71c34
  41b9af:	and    dh,ah
  41b9b1:	or     al,0x1a
  41b9b3:	dec    edi
  41b9b4:	push   ebp
  41b9b5:	sub    al,0xfa
  41b9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b8:	popa   
  41b9b9:	xlat   BYTE PTR ds:[ebx]
  41b9ba:	leave  
  41b9bb:	adc    ebp,esi
  41b9bd:	jb     0x41ba11
  41b9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c0:	xlat   BYTE PTR ds:[ebx]
  41b9c1:	xchg   esp,eax
  41b9c2:	pop    ss
  41b9c3:	dec    esp
  41b9c4:	je     0x41b9f5
  41b9c6:	fscale 
  41b9c8:	pop    esp
  41b9c9:	std    
  41b9ca:	aam    0x5a
  41b9cc:	ret    
  41b9cd:	ja     0x41ba3f
  41b9cf:	in     al,0x5d
  41b9d1:	xor    BYTE PTR [edi+0x1d],ah
  41b9d4:	test   al,0x2a
  41b9d6:	sub    al,0xa7
  41b9d8:	mov    BYTE PTR [ebx],dl
  41b9da:	xchg   ecx,eax
  41b9db:	sub    BYTE PTR [edi+0x4584bbad],0x16
  41b9e2:	std    
  41b9e3:	adc    eax,0xc3926357
  41b9e8:	push   cs
  41b9e9:	loopne 0x41b9c7
  41b9eb:	mov    ecx,0x92520041
  41b9f0:	ins    DWORD PTR es:[edi],dx
  41b9f1:	jbe    0x41b9ec
  41b9f3:	adc    al,0xe3
  41b9f5:	ror    DWORD PTR [eax],cl
  41b9f7:	or     al,0x73
  41b9f9:	jg     0x41ba40
  41b9fb:	sbb    BYTE PTR [esi],0xb
  41b9fe:	sbb    esi,DWORD PTR [esi]
  41ba00:	push   ecx
  41ba01:	(bad)  
  41ba02:	adc    cl,al
  41ba04:	rcl    BYTE PTR [ecx],cl
  41ba06:	clc    
  41ba07:	or     al,BYTE PTR [edi]
  41ba09:	mov    dl,0x27
  41ba0b:	imul   ebx,DWORD PTR [edx+0x10],0x30
  41ba0f:	sbb    DWORD PTR [edi],0xfe5cb1dd
  41ba15:	sbb    ebp,DWORD PTR [edx-0x6585b67f]
  41ba1b:	dec    edx
  41ba1c:	push   eax
  41ba1d:	fiadd  DWORD PTR [edx+esi*4+0x1332a90e]
  41ba24:	icebp  
  41ba25:	push   ds
  41ba26:	push   cs
  41ba27:	arpl   WORD PTR [di-0x79],si
  41ba2b:	(bad)  
  41ba2d:	ins    BYTE PTR es:[edi],dx
  41ba2e:	mov    dh,0xe9
  41ba30:	nop
  41ba31:	retf   0x1aac
  41ba34:	add    bl,BYTE PTR [ecx]
  41ba36:	sar    DWORD PTR [edi],0xf5
  41ba39:	pushf  
  41ba3a:	(bad)  
  41ba3b:	pop    edi
  41ba3c:	mul    BYTE PTR [eax]
  41ba3e:	xchg   BYTE PTR ds:0x9dd97a33,cl
  41ba44:	or     DWORD PTR [edi-0x26e2e020],ebx
  41ba4a:	cmp    bh,BYTE PTR [ebx-0x21]
  41ba4d:	and    eax,0x1399eece
  41ba52:	arpl   WORD PTR [ebx],bp
  41ba54:	mov    eax,0x1555bcc6
  41ba59:	jns    0x41b9e9
  41ba5b:	sbb    eax,0x72324952
  41ba60:	add    eax,0xf8976e8
  41ba65:	and    dl,cl
  41ba67:	xor    DWORD PTR [esi+0x207c589d],edi
  41ba6d:	sub    edx,DWORD PTR [edi+ecx*2-0xd80cb4d]
  41ba74:	outs   dx,DWORD PTR ds:[esi]
  41ba75:	mov    cl,0x23
  41ba77:	jo     0x41bad5
  41ba79:	jbe    0x41ba50
  41ba7b:	ficom  WORD PTR [edx]
  41ba7d:	ds mov eax,0xf8311745
  41ba83:	push   ebx
  41ba84:	jb     0x41baf7
  41ba86:	inc    edi
  41ba87:	dec    eax
  41ba88:	adc    eax,0x468114df
  41ba8d:	popa   
  41ba8e:	inc    edi
  41ba8f:	test   BYTE PTR [eax],dl
  41ba91:	or     ch,cl
  41ba93:	lods   eax,DWORD PTR ds:[esi]
  41ba94:	call   0xdda1a540
  41ba99:	mov    eax,ds:0xc2e703cc
  41ba9e:	mov    ecx,0xb6bd67b3
  41baa3:	lods   al,BYTE PTR ds:[esi]
  41baa4:	sbb    eax,0x3dcf7c9b
  41baa9:	pop    ebx
  41baaa:	lods   al,BYTE PTR ds:[esi]
  41baab:	loopne 0x41ba7d
  41baad:	add    al,0x82
  41baaf:	in     eax,dx
  41bab0:	shl    DWORD PTR [edx-0x68],0x8d
  41bab4:	inc    edi
  41bab5:	dec    di
  41bab7:	aaa    
  41bab8:	push   ss
  41bab9:	in     al,dx
  41baba:	mov    edi,0xb00e2790
  41babf:	push   es
  41bac0:	dec    ebx
  41bac1:	(bad)  
  41bac2:	mov    esp,0x88863000
  41bac7:	setl   BYTE PTR es:[edi-0x59bfbde3]
  41bacf:	scas   eax,DWORD PTR es:[edi]
  41bad0:	ja     0x41bb28
  41bad2:	arpl   si,si
  41bad4:	repz jp 0x41ba94
  41bad7:	mov    esp,0xe876bd03
  41badc:	and    ebp,DWORD PTR [ebx]
  41bade:	call   0x9c3e11e6
  41bae3:	dec    edx
  41bae4:	or     DWORD PTR [ecx-0x65],0x9d9bceaf
  41baeb:	and    bl,al
  41baed:	adc    BYTE PTR [ebx],ah
  41baef:	inc    ecx
  41baf0:	je     0x41bac3
  41baf2:	sbb    esp,DWORD PTR [edx+ebx*4+0x755db482]
  41baf9:	in     al,dx
  41bafa:	adc    BYTE PTR [edx-0x561a1dbd],ch
  41bb00:	ret    
  41bb01:	jmp    0x41bb3d
  41bb03:	cwde   
  41bb04:	jbe    0x41bac8
  41bb06:	ss jecxz 0x41bb79
  41bb09:	(bad)  
  41bb0a:	sbb    al,0x46
  41bb0c:	out    0xdc,eax
  41bb0e:	inc    esi
  41bb0f:	lds    esi,FWORD PTR [ebx]
  41bb11:	(bad)  
  41bb12:	mov    esp,0x1ce22364
  41bb17:	xor    ecx,esp
  41bb19:	push   0xcdea04d2
  41bb1e:	loopne 0x41baef
  41bb20:	pop    ebx
  41bb21:	int3   
  41bb22:	cli    
  41bb23:	or     al,0x27
  41bb25:	inc    edx
  41bb26:	push   edx
  41bb27:	in     eax,dx
  41bb28:	dec    eax
  41bb29:	fld    TBYTE PTR [esi+eiz*2+0x392ac7c6]
  41bb30:	mov    dh,0xf4
  41bb32:	jbe    0x41bb54
  41bb34:	mov    cl,0xd
  41bb36:	jg     0x41bb71
  41bb38:	cmp    ah,cl
  41bb3a:	xchg   BYTE PTR [ebx],dl
  41bb3c:	mov    ebp,DWORD PTR ds:0x4a012987
  41bb42:	out    0xe0,al
  41bb44:	lock sti 
  41bb46:	call   0x70c15b6c
  41bb4b:	repnz inc edi
  41bb4d:	cmp    BYTE PTR [ecx+0x2b],al
  41bb50:	jne    0x41bb8b
  41bb52:	adc    al,0xa6
  41bb54:	mov    bl,0xf7
  41bb56:	fwait
  41bb57:	push   esi
  41bb58:	jb     0x41bb36
  41bb5a:	push   ebx
  41bb5b:	sbb    DWORD PTR [edi+0x13],eax
  41bb5e:	cwde   
  41bb5f:	push   edi
  41bb60:	push   eax
  41bb61:	sbb    bh,BYTE PTR [edi+0x212e4b6]
  41bb67:	push   ds
  41bb68:	jb     0x41bb36
  41bb6a:	xor    dh,BYTE PTR [ecx]
  41bb6c:	push   edx
  41bb6d:	sbb    BYTE PTR [edx],bl
  41bb6f:	push   ds
  41bb70:	je     0x41bb3e
  41bb72:	or     dh,BYTE PTR [eax]
  41bb74:	push   ecx
  41bb75:	je     0x41bbb2
  41bb77:	scas   eax,DWORD PTR es:[edi]
  41bb78:	sub    DWORD PTR [eax-0x20],0x4d
  41bb7c:	out    dx,eax
  41bb7d:	push   es
  41bb7e:	loop   0x41bbcb
  41bb80:	call   FWORD PTR [edx+0x6ef8689f]
  41bb86:	(bad)  
  41bb87:	ss pop ebp
  41bb89:	xchg   ebx,eax
  41bb8a:	lds    edx,FWORD PTR fs:[ebp+0x38fde87e]
  41bb91:	dec    eax
  41bb92:	icebp  
  41bb93:	dec    edx
  41bb94:	imul   edx,ebx,0xfffffffc
  41bb97:	or     eax,0xa1b1e37b
  41bb9c:	jo     0x41bc0e
  41bb9e:	fidivr WORD PTR ds:0xfd97206
  41bba4:	shl    DWORD PTR [edx],cl
  41bba6:	mov    bl,0xcf
  41bba8:	mov    WORD PTR [edx+0x74],ds
  41bbab:	hlt    
  41bbac:	stc    
  41bbad:	loop   0x41bbdd
  41bbaf:	or     edx,edi
  41bbb1:	aas    
  41bbb2:	jg     0x41bba8
  41bbb4:	pop    eax
  41bbb5:	xor    al,0x6f
  41bbb7:	fs cmc 
  41bbb9:	sbb    al,0x67
  41bbbb:	and    al,0xe8
  41bbbd:	dec    ecx
  41bbbe:	inc    esi
  41bbbf:	test   al,0xc3
  41bbc1:	dec    esi
  41bbc2:	jg     0x41bb5b
  41bbc4:	scas   eax,DWORD PTR es:[edi]
  41bbc5:	add    DWORD PTR [edx+0x113d8dbc],ebp
  41bbcb:	in     al,dx
  41bbcc:	outs   dx,BYTE PTR ds:[esi]
  41bbcd:	jbe    0x41bbc7
  41bbcf:	fidiv  WORD PTR [ebp+0x242a62a6]
  41bbd5:	pop    ds
  41bbd6:	mov    dl,0x84
  41bbd8:	mov    BYTE PTR [edi+0x407707c8],al
  41bbde:	fnsave [edx]
  41bbe0:	mov    ch,0xe9
  41bbe2:	jmp    0x41bbc4
  41bbe4:	mov    ah,0x42
  41bbe6:	xchg   DWORD PTR [ebp+0x15c7515e],ebp
  41bbec:	and    eax,0x1ebd587
  41bbf1:	jge    0x41bbb3
  41bbf3:	rol    BYTE PTR [ebx+edx*1-0x4a],cl
  41bbf7:	std    
  41bbf8:	ss jle 0x41bba1
  41bbfb:	pop    ebx
  41bbfc:	int    0xce
  41bbfe:	dec    esi
  41bbff:	fmul   QWORD PTR [ecx+0x3f]
  41bc02:	f2xm1  
  41bc04:	imul   esp,DWORD PTR [ebx],0x29
  41bc07:	cli    
  41bc08:	mov    dh,dh
  41bc0a:	rcr    DWORD PTR [edi],cl
  41bc0c:	lock pop eax
  41bc0e:	xchg   ebx,eax
  41bc0f:	jecxz  0x41bb9a
  41bc11:	data16 cld 
  41bc13:	enter  0x1bad,0x0
  41bc17:	std    
  41bc18:	dec    edi
  41bc19:	std    
  41bc1a:	jne    0x41bc0c
  41bc1c:	imul   BYTE PTR [edx-0x4f3f]
  41bc22:	sbb    ebp,DWORD PTR [eax-0x1fbe7aa4]
  41bc28:	and    bh,bh
  41bc2a:	test   al,0x74
  41bc2c:	cmp    BYTE PTR [edx],bh
  41bc2e:	xor    dl,BYTE PTR [ebx-0x6b]
  41bc31:	(bad)  
  41bc33:	imul   ecx,DWORD PTR [edi],0xff7eb260
  41bc39:	mov    edx,0x7d10f59d
  41bc3e:	or     eax,0x659cc374
  41bc43:	xchg   esp,eax
  41bc44:	pushf  
  41bc45:	jbe    0x41bbd3
  41bc47:	mov    ds:0x1cbd9843,al
  41bc4c:	sub    eax,0xa438e93a
  41bc51:	push   ss
  41bc52:	xchg   edx,eax
  41bc53:	out    0x39,eax
  41bc55:	adc    edx,edx
  41bc57:	das    
  41bc58:	and    BYTE PTR [ecx+0x7fa3ea55],ah
  41bc5e:	dec    esp
  41bc5f:	xchg   ebx,eax
  41bc61:	shl    BYTE PTR [edi+eiz*2-0x3b],1
  41bc65:	sbb    BYTE PTR [edi+ebx*8+0x4f4caa9d],0xa1
  41bc6d:	aaa    
  41bc6e:	jmp    0x41bc23
  41bc70:	mov    edi,0x78ae5f24
  41bc75:	dec    eax
  41bc76:	add    DWORD PTR [eax-0x13d649b5],ebp
  41bc7c:	push   esp
  41bc7d:	inc    edx
  41bc7e:	push   ds
  41bc7f:	jbe    0x41bcd3
  41bc81:	mov    esi,0xb3f1f29e
  41bc86:	scas   eax,DWORD PTR es:[edi]
  41bc87:	stos   BYTE PTR es:[edi],al
  41bc88:	dec    dx
  41bc8a:	test   eax,0x25f0df18
  41bc8f:	dec    esp
  41bc90:	add    esi,DWORD PTR [edi+0x5c0e11fc]
  41bc96:	push   DWORD PTR [edi]
  41bc98:	pop    ebp
  41bc99:	(bad)  
  41bc9a:	sub    al,0x57
  41bc9c:	fild   QWORD PTR [esi]
  41bc9e:	xlat   BYTE PTR ds:[ebx]
  41bc9f:	pop    ebx
  41bca0:	mov    ecx,0x5a3dcff4
  41bca5:	inc    edi
  41bca6:	dec    eax
  41bca7:	imul   BYTE PTR [esi+0x37]
  41bcaa:	pop    ss
  41bcab:	push   ebp
  41bcac:	std    
  41bcad:	cmp    BYTE PTR [esp+ebp*4+0x57],bh
  41bcb1:	les    ecx,FWORD PTR [edi-0x17]
  41bcb4:	fbstp  TBYTE PTR [eax]
  41bcb6:	mov    ss,WORD PTR [esi+eiz*1]
  41bcb9:	fadd   st(3),st
  41bcbb:	js     0x41bd15
  41bcbd:	ss push ds
  41bcbf:	push   ebx
  41bcc0:	arpl   WORD PTR [eax+0x39],dx
  41bcc3:	xchg   DWORD PTR [eax+0x5],ebx
  41bcc6:	adc    al,0x28
  41bcc8:	jnp    0x41bd1b
  41bcca:	xor    DWORD PTR [edi-0x514a7ab0],eax
  41bcd0:	jae    0x41bcdc
  41bcd2:	icebp  
  41bcd3:	mov    al,0x7d
  41bcd5:	or     esi,ecx
  41bcd7:	jmp    0xf3ed:0x1ce4c059
  41bcde:	std    
  41bcdf:	xchg   ecx,esp
  41bce1:	stos   BYTE PTR es:[edi],al
  41bce2:	mov    al,ds:0xb530c1c7
  41bce7:	cmp    BYTE PTR [esi-0x18],0x11
  41bceb:	scas   al,BYTE PTR es:[edi]
  41bcec:	fidivr DWORD PTR [eax]
  41bcee:	sbb    eax,0x66748909
  41bcf3:	and    ch,BYTE PTR [esi-0x76febd5f]
  41bcf9:	jb     0x41bd61
  41bcfb:	sub    ch,BYTE PTR [esi-0x46c6bd59]
  41bd01:	sbb    DWORD PTR [edi+edx*4-0x3f29ecc0],eax
  41bd08:	sbb    al,0xcc
  41bd0a:	lock sub al,0x39
  41bd0d:	xor    bh,BYTE PTR [ebx-0x1d206a5e]
  41bd13:	inc    eax
  41bd14:	sar    DWORD PTR [esi+0x21b4d8f4],cl
  41bd1a:	aas    
  41bd1b:	shr    BYTE PTR [edi+0x31],0x6a
  41bd1f:	add    BYTE PTR [ebx+0x59e3a2ff],al
  41bd25:	into   
  41bd26:	inc    eax
  41bd27:	fistp  WORD PTR ds:0x602519d2
  41bd2d:	sub    DWORD PTR [eax-0x1e6c31e6],ebx
  41bd33:	inc    ecx
  41bd34:	ja     0x41bd32
  41bd36:	xchg   esi,eax
  41bd37:	out    dx,al
  41bd38:	adc    al,0x61
  41bd3a:	lea    esi,[ebx]
  41bd3c:	pop    edi
  41bd3d:	repz dec edi
  41bd3f:	dec    edx
  41bd40:	dec    edi
  41bd41:	jmp    FWORD PTR [eax-0x641dbe88]
  41bd47:	icebp  
  41bd48:	test   BYTE PTR [edx-0x59],bh
  41bd4b:	sbb    eax,0x44a5363f
  41bd50:	cdq    
  41bd51:	mov    edi,0x37963592
  41bd56:	(bad)  
  41bd57:	and    al,0x27
  41bd59:	push   edi
  41bd5a:	pop    esp
  41bd5b:	leave  
  41bd5c:	mov    esp,0xf266150e
  41bd61:	aas    
  41bd62:	xchg   ecx,eax
  41bd63:	cmp    BYTE PTR [eax+0x7],al
  41bd66:	xchg   BYTE PTR [edx+0x7a],dl
  41bd69:	test   DWORD PTR [edx],esi
  41bd6b:	in     eax,dx
  41bd6c:	pop    esp
  41bd6d:	dec    eax
  41bd6e:	push   edx
  41bd6f:	inc    ebp
  41bd70:	push   eax
  41bd71:	out    dx,al
  41bd72:	mov    esi,0x383d2306
  41bd77:	into   
  41bd78:	pop    ss
  41bd79:	mov    ecx,cs
  41bd7b:	sbb    ch,ch
  41bd7d:	fwait
  41bd7e:	shl    DWORD PTR [eax+0x38],1
  41bd81:	aad    0x78
  41bd83:	sub    al,0x6a
  41bd85:	push   0xbc4003bd
  41bd8a:	xchg   ecx,eax
  41bd8b:	sub    al,0x70
  41bd8d:	sub    eax,0x475a3edf
  41bd92:	push   cs
  41bd93:	(bad)  
  41bd94:	cs dec ebp
  41bd96:	dec    edi
  41bd97:	sbb    al,BYTE PTR [ebx+0x4a]
  41bd9a:	outs   dx,BYTE PTR ds:[esi]
  41bd9b:	inc    ebp
  41bd9d:	mov    eax,0xd033139f
  41bda2:	xchg   BYTE PTR [ecx],al
  41bda4:	and    dl,BYTE PTR [edx+0x75]
  41bda7:	rcl    bh,1
  41bda9:	dec    ebp
  41bdaa:	pop    ds
  41bdab:	push   0xffffff92
  41bdad:	in     al,0xaa
  41bdaf:	nop
  41bdb0:	test   DWORD PTR [ebx-0x3a],ebx
  41bdb3:	pop    ss
  41bdb4:	mov    esi,0xe3d3612b
  41bdb9:	fiadd  DWORD PTR [edi+0x630c5be5]
  41bdbf:	das    
  41bdc0:	adc    ah,BYTE PTR [esi+ecx*8+0x522317e5]
  41bdc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdc8:	add    DWORD PTR [edx-0x75bc8f56],ebx
  41bdce:	mov    dl,0x5a
  41bdd0:	rol    al,0xc0
  41bdd3:	rol    al,0xc0
  41bdd6:	rol    al,0xc0
  41bdd9:	rol    al,0xc0
  41bddc:	rol    al,0xc0
  41bddf:	rol    al,0xc0
  41bde2:	rol    al,0xc0
  41bde5:	rol    al,0xc0
  41bde8:	rol    al,0xc0
  41bdeb:	rol    al,0xc0
  41bdee:	rol    al,0xc0
  41bdf1:	rol    al,0xc0
  41bdf4:	rol    al,0xc0
  41bdf7:	rol    al,0xc0
  41bdfa:	rol    al,0xc0
  41bdfd:	rol    al,0xc0
  41be00:	rol    al,0xc0
  41be03:	rol    al,0xc0
  41be06:	rol    al,0x25
  41be09:	(bad)  
  41be0a:	jae    0x41be88
  41be0c:	add    edx,DWORD PTR [ecx]
  41be0e:	inc    edi
  41be0f:	pop    es
  41be10:	pop    edi
  41be11:	ss enter 0x2c5d,0x4e
  41be16:	xor    BYTE PTR [edi],ch
  41be18:	adc    eax,0x644d60a2
  41be1d:	xor    ch,BYTE PTR [edi-0x3d2b3b11]
  41be23:	cld    
  41be24:	mov    bh,0xe3
  41be26:	data16 xor BYTE PTR [eax+0x3f],dl
  41be2a:	pop    edx
  41be2b:	sbb    eax,0x83d87ec8
  41be30:	sub    BYTE PTR [eax],0x8f
  41be33:	out    dx,al
  41be34:	mov    BYTE PTR [edi],bl
  41be36:	shl    DWORD PTR [edx],1
  41be38:	xor    esp,edx
  41be3a:	mov    esp,0x719c535a
  41be3f:	xchg   DWORD PTR [edx+0x6b],ecx
  41be42:	push   0xde06938f
  41be47:	xchg   esi,eax
  41be48:	jne    0x41bea2
  41be4a:	or     bh,dh
  41be4c:	fnsave [ecx]
  41be4e:	nop
  41be4f:	scas   al,BYTE PTR es:[edi]
  41be50:	sbb    ebx,DWORD PTR [edx+eiz*8+0x1a66dcb1]
  41be57:	aam    0xcd
  41be59:	cmp    DWORD PTR [ecx-0x27ddfa43],edi
  41be5f:	cmp    eax,0x84c4eee8
  41be64:	retf   
  41be65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be66:	mov    BYTE PTR [ecx+0x4176fb33],ah
  41be6c:	rcl    DWORD PTR [eax+ebp*8],cl
  41be6f:	out    dx,eax
  41be70:	lea    ebp,[ebx]
  41be72:	(bad)  
  41be73:	dec    ebp
  41be74:	or     BYTE PTR [ebx-0x346e7c21],dh
  41be7a:	adc    BYTE PTR [esi],0xd9
  41be7d:	(bad)  
  41be7f:	push   ebp
  41be80:	cld    
  41be81:	into   
  41be82:	cli    
  41be83:	xchg   ebp,eax
  41be84:	push   ds
  41be85:	adc    DWORD PTR ds:0x5ecfe4b3,esp
  41be8b:	std    
  41be8c:	mov    bh,0xba
  41be8e:	dec    edi
  41be8f:	das    
  41be90:	rcr    BYTE PTR [eax+0x89ac46c],cl
  41be96:	pop    esi
  41be97:	push   eax
  41be98:	adc    bh,BYTE PTR [edi]
  41be9a:	xchg   esp,eax
  41be9b:	adc    BYTE PTR [ebx+edi*2+0x5e61d7a2],dl
  41bea2:	cli    
  41bea3:	outs   dx,BYTE PTR ds:[esi]
  41bea4:	repz push ds
  41bea6:	mov    dl,0x8b
  41bea8:	or     esi,edx
  41beaa:	out    dx,al
  41beab:	sbb    ebx,DWORD PTR [esi-0x2]
  41beae:	fcom   DWORD PTR [edi-0x41]
  41beb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb2:	push   esi
  41beb3:	adc    DWORD PTR [esi-0x55],eax
  41beb6:	xchg   edx,eax
  41beb7:	inc    ebp
  41beb8:	sub    esp,DWORD PTR [ebx-0x5edfb66]
  41bebe:	fistp  WORD PTR [edi]
  41bec0:	rcr    DWORD PTR [edx],1
  41bec2:	mov    bh,0xf4
  41bec4:	inc    esp
  41bec5:	add    dh,ah
  41bec7:	movaps xmm4,XMMWORD PTR [eax-0x74]
  41becb:	pusha  
  41becc:	jno    0x41bec4
  41bece:	loop   0x41bf27
  41bed0:	adc    esp,DWORD PTR [eax-0x25bfffe2]
  41bed6:	arpl   WORD PTR [ebx+0xae1e280],bp
  41bedc:	out    dx,al
  41bedd:	das    
  41bede:	sub    cl,BYTE PTR [ebx]
  41bee0:	pop    ecx
  41bee1:	jl     0x41bf3d
  41bee3:	and    edx,ecx
  41bee5:	pop    ds
  41bee6:	mov    al,0xaf
  41bee8:	pop    ecx
  41bee9:	xchg   al,ah
  41beeb:	mov    bh,dl
  41beed:	sahf   
  41beee:	test   al,0x33
  41bef0:	outs   dx,DWORD PTR ds:[esi]
  41bef1:	(bad)  
  41bef2:	and    al,0x8a
  41bef4:	adc    ch,BYTE PTR [edx]
  41bef6:	data16 cmp ch,0x47
  41befa:	pop    eax
  41befb:	and    DWORD PTR [esi-0x1814c9a8],edi
  41bf01:	retf   0x2b0e
  41bf04:	call   0xa27b:0x750e6212
  41bf0b:	xchg   ecx,eax
  41bf0c:	push   cs
  41bf0d:	and    ebp,DWORD PTR [edx-0x755df74d]
  41bf13:	mov    edx,0x77322efe
  41bf18:	jo     0x41bf80
  41bf1a:	es call 0x96a9:0x2e726e76
  41bf22:	js     0x41bebd
  41bf24:	mov    al,ds:0x535ebe1a
  41bf29:	(bad)  
  41bf2a:	fisub  DWORD PTR [eax+edx*1]
  41bf2d:	add    esp,0x35
  41bf30:	loope  0x41bf2c
  41bf32:	xor    al,BYTE PTR [eax-0x62]
  41bf35:	fwait
  41bf36:	outs   dx,BYTE PTR ds:[esi]
  41bf37:	add    eax,0x729afe9d
  41bf3c:	adc    bl,BYTE PTR [esi]
  41bf3e:	pushf  
  41bf3f:	scas   al,BYTE PTR es:[edi]
  41bf40:	dec    ebx
  41bf41:	int3   
  41bf42:	shr    BYTE PTR [edx+esi*1],1
  41bf45:	inc    edx
  41bf46:	(bad)  
  41bf47:	mov    dh,0xff
  41bf49:	cld    
  41bf4a:	ss dec esp
  41bf4c:	call   0x6102f32b
  41bf51:	fsub   st,st(5)
  41bf53:	or     dh,BYTE PTR [esi+ebp*1-0x80]
  41bf57:	outs   dx,DWORD PTR ds:[esi]
  41bf58:	and    ecx,DWORD PTR [edi-0x6]
  41bf5b:	sub    dl,dh
  41bf5d:	dec    esi
  41bf5e:	cs mov edi,eax
  41bf61:	pusha  
  41bf62:	mov    al,BYTE PTR [ecx]
  41bf64:	push   edi
  41bf65:	ins    BYTE PTR es:[edi],dx
  41bf66:	pushf  
  41bf67:	xor    esi,DWORD PTR ds:0x422edad7
  41bf6d:	add    BYTE PTR [esi+0x58],0xf0
  41bf71:	add    al,0x8c
  41bf73:	int3   
  41bf74:	jb     0x41bf1a
  41bf76:	jmp    0xca91:0xeab25526
  41bf7d:	add    edx,DWORD PTR [esi]
  41bf7f:	xor    eax,0x4052facd
  41bf84:	mov    ds,WORD PTR [ebx-0x6560faa2]
  41bf8a:	bound  eax,QWORD PTR [eax]
  41bf8c:	call   0x1856:0x592ea653
  41bf93:	jbe    0x41bf87
  41bf95:	xor    bl,BYTE PTR [edx+0x7eba1ce3]
  41bf9b:	add    DWORD PTR [edx+0x7949b24e],esp
  41bfa1:	(bad)  
  41bfa2:	mov    cr6,esp
  41bfa5:	dec    eax
  41bfa6:	(bad)  
  41bfa7:	imul   ebp,DWORD PTR ds:0x2c1af457,0xed6f362e
  41bfb1:	dec    edi
  41bfb2:	sub    dl,BYTE PTR cs:[esi+ecx*2-0x2906369e]
  41bfba:	icebp  
  41bfbb:	mov    DWORD PTR [esi+0x18],esi
  41bfbe:	mov    es,WORD PTR [ebx]
  41bfc0:	xor    edx,DWORD PTR [esi+0x283299ca]
  41bfc6:	retf   0xf963
  41bfc9:	inc    edx
  41bfca:	pop    ss
  41bfcb:	mov    esi,0xf39ec844
  41bfd0:	aaa    
  41bfd1:	push   edx
  41bfd2:	bnd jmp 0x57ffdb6a
  41bfd8:	jge    0x41bf9e
  41bfda:	xchg   edi,eax
  41bfdb:	mov    edx,0x3686f39a
  41bfe0:	cmp    edx,DWORD PTR [esi]
  41bfe2:	xchg   edi,eax
  41bfe3:	pop    esi
  41bfe4:	(bad)  
  41bfe5:	ins    BYTE PTR es:[edi],dx
  41bfe6:	cwde   
  41bfe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe8:	xor    eax,0xe4813c48
  41bfed:	sbb    BYTE PTR [eax+0x3],bh
  41bff0:	mov    eax,ds:0xa0997a96
  41bff5:	je     0x41bff1
  41bff7:	push   esi
  41bff8:	addr16 push edi
  41bffa:	mov    dh,0x1a
  41bffc:	outs   dx,BYTE PTR ds:[esi]
  41bffd:	lock outs dx,DWORD PTR cs:[esi]
  41c000:	sub    DWORD PTR [edi-0x14],ecx
  41c003:	sub    al,al
  41c005:	dec    esi
  41c006:	push   ds
  41c007:	pop    ecx
  41c008:	mov    ebp,0x1fa0f
  41c00d:	cmp    eax,0x35
  41c010:	inc    ebp
  41c011:	cli    
  41c012:	mov    eax,0xfeb54440
  41c017:	aad    0x31
  41c019:	mov    ch,0x3e
  41c01b:	les    ebp,FWORD PTR [edi-0x75a4c66]
  41c021:	mov    dl,0x8c
  41c023:	pop    esp
  41c024:	jb     0x41c05a
  41c026:	repnz cmp eax,esp
  41c029:	int3   
  41c02a:	lods   eax,DWORD PTR ds:[esi]
  41c02b:	test   BYTE PTR [edi],0xfa
  41c02e:	cwde   
  41c02f:	cs xchg ecx,eax
  41c031:	call   0x9a8:0xa6dfb44e
  41c038:	xlat   BYTE PTR ds:[ebx]
  41c039:	pop    edx
  41c03a:	add    bl,BYTE PTR [ecx]
  41c03c:	xor    al,ch
  41c03e:	xor    esi,ebp
  41c040:	js     0x41bfdc
  41c042:	and    al,0xae
  41c044:	fist   WORD PTR [edx-0x45aa5858]
  41c04a:	(bad)  
  41c04b:	push   eax
  41c04c:	(bad)  
  41c04d:	dec    esi
  41c04e:	cwde   
  41c04f:	adc    esi,DWORD PTR [eax+eax*8]
  41c052:	sub    esp,DWORD PTR fs:[eax+0x78bede60]
  41c059:	adc    al,0xd6
  41c05b:	mov    ah,0xc7
  41c05d:	mov    eax,0x4e358198
  41c062:	mov    esi,0x76703f48
  41c067:	ss pop ss
  41c069:	xlat   BYTE PTR ds:[ebx]
  41c06a:	int3   
  41c06b:	adc    DWORD PTR [esi],0x51038a18
  41c071:	xchg   esi,eax
  41c072:	mov    WORD PTR [ecx+0x6e4e3952],ds
  41c078:	xchg   edi,eax
  41c079:	cld    
  41c07a:	xchg   edi,eax
  41c07b:	(bad)  
  41c07c:	adc    al,ah
  41c07e:	js     0x41c02e
  41c080:	(bad)  
  41c082:	push   cs
  41c083:	sub    al,0xd2
  41c085:	inc    edx
  41c086:	enter  0x2bb6,0xfc
  41c08a:	aam    0x4c
  41c08c:	js     0x41c076
  41c08e:	repz dec eax
  41c090:	cdq    
  41c091:	pop    eax
  41c092:	mov    ah,BYTE PTR fs:[edi]
  41c095:	ret    0xf3b3
  41c098:	rcr    edi,1
  41c09a:	cld    
  41c09b:	push   cs
  41c09c:	push   eax
  41c09d:	mov    dh,BYTE PTR [edx-0x7a4e0b2f]
  41c0a3:	sub    eax,0xadae01b3
  41c0a8:	push   edi
  41c0a9:	adc    ah,ah
  41c0ab:	add    DWORD PTR [ebx],edx
  41c0ad:	ins    BYTE PTR es:[edi],dx
  41c0ae:	fldenv [edi+0x51]
  41c0b1:	mov    ds:0x4a4f44f8,al
  41c0b6:	mov    bl,0x63
  41c0b8:	pop    edi
  41c0b9:	(bad)  
  41c0ba:	pop    ss
  41c0bb:	or     al,0x45
  41c0bd:	dec    BYTE PTR [eax+0x4ad79516]
  41c0c3:	sub    cl,BYTE PTR [edx+0x6089bc71]
  41c0c9:	mov    edx,0x42d00104
  41c0ce:	ret    0x19b6
  41c0d1:	cld    
  41c0d2:	into   
  41c0d3:	dec    esp
  41c0d4:	adc    bh,BYTE PTR [edx]
  41c0d6:	xor    eax,DWORD PTR ds:0xf6b8d463
  41c0dc:	cmova  edx,DWORD PTR [edx-0xd]
  41c0e0:	mov    ebx,0x466afa72
  41c0e5:	jl     0x41c09c
  41c0e7:	jg     0x41c161
  41c0e9:	sub    ch,bl
  41c0eb:	shr    DWORD PTR [edi+0x3],1
  41c0ee:	bound  esi,QWORD PTR ds:0x4020fabd
  41c0f4:	clc    
  41c0f5:	fwait
  41c0f6:	and    al,0x5
  41c0f8:	in     eax,0x9a
  41c0fa:	push   ss
  41c0fb:	jb     0x41c0dc
  41c0fd:	data16 test al,0x7b
  41c100:	push   ebp
  41c101:	xchg   esp,eax
  41c102:	(bad)  
  41c103:	cmp    dh,cl
  41c105:	sub    al,bl
  41c107:	iret   
  41c108:	add    eax,0x9201ef07
  41c10d:	sbb    BYTE PTR [ebx+eax*1],dl
  41c110:	jmp    0x41c0a8
  41c112:	push   ds
  41c113:	cdq    
  41c114:	cmp    ch,BYTE PTR [eax]
  41c116:	out    0x63,al
  41c118:	cmp    DWORD PTR [edx],eax
  41c11a:	push   esi
  41c11b:	pop    ecx
  41c11c:	jp     0x41c0b9
  41c11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c11f:	add    eax,0x7b66fe79
  41c124:	xor    ch,dh
  41c126:	mov    bl,0xfb
  41c128:	cmp    eax,0x9e32a7f2
  41c12d:	add    esi,eax
  41c12f:	scas   eax,DWORD PTR es:[edi]
  41c130:	in     eax,dx
  41c131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c132:	pop    DWORD PTR [esi+0x47fe7874]
  41c138:	and    edx,DWORD PTR [edi-0x26]
  41c13b:	sbb    ah,BYTE PTR [esi+ebp*1-0x64]
  41c13f:	outs   dx,DWORD PTR ds:[esi]
  41c140:	arpl   WORD PTR [esi+0x64],dx
  41c143:	jg     0x41c18c
  41c145:	in     al,dx
  41c146:	cwde   
  41c147:	std    
  41c148:	xor    eax,0xf8812014
  41c14d:	sbb    BYTE PTR [esi],ah
  41c14f:	add    edi,edi
  41c151:	xchg   esi,eax
  41c152:	loopne 0x41c0ed
  41c154:	ds sub dh,ah
  41c157:	arpl   WORD PTR [ebx],di
  41c159:	loop   0x41c172
  41c15b:	adc    al,0x44
  41c15d:	and    BYTE PTR [esi-0x3503d2d7],bl
  41c163:	adc    ch,dl
  41c165:	out    0x33,al
  41c167:	cmc    
  41c168:	and    bl,BYTE PTR [esi+0x20]
  41c16b:	sub    bl,BYTE PTR [edi-0x5a]
  41c16e:	fsub   st(7),st
  41c170:	push   eax
  41c171:	xchg   di,ax
  41c173:	dec    esp
  41c174:	(bad)  
  41c175:	pushf  
  41c176:	xor    esp,DWORD PTR [ecx-0x6f47599d]
  41c17c:	outs   dx,DWORD PTR ds:[esi]
  41c17d:	outs   dx,BYTE PTR ds:[esi]
  41c17e:	cmp    ch,BYTE PTR [esi]
  41c180:	add    DWORD PTR [esi+0x280299fa],edx
  41c186:	clc    
  41c187:	arpl   WORD PTR [edi-0x40],bx
  41c18a:	pop    ss
  41c18b:	add    al,BYTE PTR [edi-0xa]
  41c18e:	enter  0x9725,0xfa
  41c192:	dec    esp
  41c193:	inc    eax
  41c194:	xchg   esi,eax
  41c195:	fwait
  41c196:	adc    al,0x5
  41c198:	jecxz  0x41c134
  41c19a:	sbb    al,0x78
  41c19c:	fild   QWORD PTR [eax+ebp*4+0x43]
  41c1a0:	jecxz  0x41c1d8
  41c1a2:	mov    eax,0xdc1b0ef4
  41c1a7:	jae    0x41c1f9
  41c1a9:	pushf  
  41c1aa:	xchg   edi,eax
  41c1ab:	dec    esp
  41c1ac:	fs sbb al,0x33
  41c1af:	and    esp,DWORD PTR [eax+0x2c]
  41c1b2:	out    dx,eax
  41c1b3:	or     dh,BYTE PTR [esi-0x1c8795d2]
  41c1b9:	stos   DWORD PTR es:[edi],eax
  41c1ba:	jmp    FWORD PTR [eax+0x19b9897a]
  41c1c0:	push   ebx
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	mov    BYTE PTR [ecx+0x98eee57],cl
  41c1c8:	mov    DWORD PTR [edx],ebx
  41c1ca:	xchg   edi,eax
  41c1cb:	add    al,0xd7
  41c1cd:	add    bl,BYTE PTR [esi+esi*4-0x75c531ed]
  41c1d4:	je     0x41c15c
  41c1d6:	(bad)  
  41c1d7:	push   ebx
  41c1d8:	adc    edx,DWORD PTR [edi-0x30]
  41c1db:	sbb    ch,BYTE PTR [edx+0x2e]
  41c1de:	cwde   
  41c1df:	outs   dx,DWORD PTR ds:[esi]
  41c1e0:	jg     0x41c229
  41c1e2:	push   0x41
  41c1e4:	sbb    BYTE PTR [ebx+0x745399b3],0xda
  41c1eb:	sahf   
  41c1ec:	(bad)  
  41c1ed:	cmp    DWORD PTR [esi+esi*4-0x20],0xffffff92
  41c1f2:	lods   eax,DWORD PTR ds:[esi]
  41c1f3:	add    BYTE PTR [edi-0x56],0x98
  41c1f7:	cs ret 
  41c1f9:	imul   DWORD PTR [eax-0x3decc177]
  41c1ff:	(bad)  
  41c200:	std    
  41c201:	dec    edi
  41c202:	xchg   edi,eax
  41c203:	xchg   edx,eax
  41c204:	push   0x9393f66e
  41c209:	int3   
  41c20a:	mov    ebx,0xabca855e
  41c20f:	adc    eax,0x997db60
  41c214:	jo     0x41c284
  41c216:	fwait
  41c217:	arpl   WORD PTR [esi],bx
  41c219:	int    0x17
  41c21b:	sahf   
  41c21c:	(bad)  
  41c21d:	adc    edi,DWORD PTR [esi-0x123046a6]
  41c223:	xchg   ecx,eax
  41c224:	inc    eax
  41c225:	add    ebp,DWORD PTR [edi+0x5816535]
  41c22b:	jns    0x41c1e2
  41c22d:	dec    esp
  41c22e:	cwde   
  41c22f:	push   ss
  41c230:	jb     0x41c1ec
  41c232:	call   0x8ff21f50
  41c237:	push   edx
  41c238:	div    DWORD PTR [ebp+0x2415197]
  41c23e:	jno    0x41c253
  41c240:	dec    eax
  41c241:	rol    BYTE PTR [eax+0x1a],cl
  41c244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c245:	sub    BYTE PTR [esi-0x683788a7],bh
  41c24b:	dec    esp
  41c24c:	jle    0x41c298
  41c24e:	xor    esi,DWORD PTR [edi+0x63]
  41c251:	adc    al,0xf0
  41c253:	mov    ah,0x51
  41c255:	push   0xbb0361bb
  41c25a:	lea    eax,[edi+edi*1-0x33]
  41c25e:	fld    QWORD PTR [esi-0xb]
  41c261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c262:	pop    ds
  41c263:	inc    esi
  41c264:	push   esp
  41c265:	dec    ebp
  41c266:	dec    esi
  41c267:	push   ebx
  41c268:	and    DWORD PTR [ecx],ebp
  41c26a:	addr16 jle 0x41c20e
  41c26d:	mov    ebp,0xa71e2936
  41c272:	clc    
  41c273:	ja     0x41c2af
  41c275:	jo     0x41c260
  41c277:	in     al,0x6f
  41c279:	mov    al,0xf9
  41c27b:	pop    edi
  41c27c:	push   edi
  41c27d:	pop    esi
  41c27e:	test   DWORD PTR [edi*1+0x4b6cffb1],esp
  41c285:	sahf   
  41c286:	fwait
  41c287:	sbb    ebx,DWORD PTR [ebp+0x76]
  41c28a:	xlat   BYTE PTR ds:[ebx]
  41c28b:	jae    0x41c2c5
  41c28d:	ror    BYTE PTR [eax-0xe61969e],0x6b
  41c294:	pop    ss
  41c295:	outs   dx,BYTE PTR ds:[esi]
  41c296:	pop    ecx
  41c297:	mov    dl,0xc7
  41c299:	lods   eax,DWORD PTR ds:[esi]
  41c29a:	pop    edi
  41c29b:	aas    
  41c29c:	push   ds
  41c29d:	jg     0x41c2f7
  41c29f:	inc    esi
  41c2a0:	sbb    eax,0x5858f755
  41c2a5:	adc    eax,0xd0015fff
  41c2aa:	lock ins BYTE PTR es:[edi],dx
  41c2ac:	mov    al,bh
  41c2ae:	int3   
  41c2af:	dec    esi
  41c2b0:	cmp    DWORD PTR [esi],edi
  41c2b2:	rep ins DWORD PTR es:[edi],dx
  41c2b4:	xchg   BYTE PTR [eax+ebx*8-0x55],ch
  41c2b8:	add    ch,BYTE PTR [edx+0x70527c67]
  41c2be:	fcmovnu st,st(1)
  41c2c0:	aaa    
  41c2c1:	mov    eax,ds:0x2b0564f1
  41c2c6:	es push 0x37f4bc4b
  41c2cc:	xor    eax,0x757e85fa
  41c2d1:	cmp    eax,0x6f204d3e
  41c2d6:	jmp    0xc320a58e
  41c2db:	pop    esp
  41c2dc:	aas    
  41c2dd:	imul   edx,ecx,0xebb15964
  41c2e3:	sbb    BYTE PTR [ebx],bh
  41c2e5:	mov    eax,0x58b77782
  41c2ea:	bound  edx,QWORD PTR [edx]
  41c2ec:	sti    
  41c2ed:	int3   
  41c2ee:	into   
  41c2ef:	jae    0x41c30a
  41c2f1:	sbb    bl,BYTE PTR ds:0x3f266eaa
  41c2f7:	adc    esi,DWORD PTR [edx]
  41c2f9:	int    0x8f
  41c2fb:	sahf   
  41c2fc:	arpl   WORD PTR [esi+0x10],cx
  41c2ff:	push   edx
  41c300:	imul   ebx,ebp,0xffffffd1
  41c303:	js     0x41c347
  41c305:	cmp    esi,DWORD PTR [ebp+esi*2+0x67f2e2f6]
  41c30c:	and    eax,0xf47df2cf
  41c311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c312:	cld    
  41c313:	xchg   esp,eax
  41c314:	dec    esi
  41c315:	not    DWORD PTR es:[edx-0x44]
  41c319:	(bad)  
  41c31a:	out    0x35,al
  41c31c:	fwait
  41c31d:	or     DWORD PTR [ecx-0x29],edx
  41c320:	add    DWORD PTR [eax+0x1f21f0f7],ecx
  41c326:	cmc    
  41c327:	inc    ecx
  41c328:	aaa    
  41c329:	or     al,0xc4
  41c32b:	retf   0x5f9c
  41c32e:	xor    al,BYTE PTR [edx+0x95aa663]
  41c334:	dec    BYTE PTR [esi-0x53ebad07]
  41c33a:	lock data16 and al,0x78
  41c33e:	and    ecx,DWORD PTR [edi+0x1af4d3d5]
  41c344:	test   bl,0x38
  41c347:	stos   DWORD PTR es:[edi],eax
  41c348:	hlt    
  41c349:	xchg   edx,eax
  41c34a:	adc    bh,BYTE PTR [esp+ecx*1]
  41c34d:	adc    DWORD PTR [edi-0x27b90272],ecx
  41c353:	int    0xf9
  41c355:	xor    al,0x22
  41c357:	outs   dx,BYTE PTR ds:[esi]
  41c358:	lock sbb ebx,DWORD PTR [edx-0x36ccc510]
  41c35f:	data16 mov al,ds:0x778af446
  41c365:	int3   
  41c366:	xor    BYTE PTR [ebx],ch
  41c368:	pop    ebp
  41c369:	mov    ebx,0x65da0dfe
  41c36e:	int3   
  41c36f:	ins    DWORD PTR es:[edi],dx
  41c370:	xor    DWORD PTR [ebx+0x30bc9c05],ebx
  41c376:	cli    
  41c377:	sub    dh,BYTE PTR [eax]
  41c379:	xor    edi,DWORD PTR [edx+0xaa33439]
  41c37f:	push   esp
  41c380:	arpl   dx,cx
  41c382:	ficomp DWORD PTR [edx]
  41c384:	cdq    
  41c385:	inc    esp
  41c386:	fmulp  st(5),st
  41c388:	sbb    eax,0x374617f7
  41c38d:	push   es
  41c38e:	call   0x9bf3f79d
  41c393:	mov    ds,WORD PTR [ecx+ebp*2]
  41c396:	inc    ebx
  41c397:	xchg   ebp,eax
  41c398:	fwait
  41c399:	les    eax,FWORD PTR [eax]
  41c39b:	lea    esi,[edi+ebx*2-0x5b]
  41c39f:	(bad)  
  41c3a0:	lods   al,BYTE PTR ds:[esi]
  41c3a1:	call   0x3130:0x44376e53
  41c3a8:	cmp    BYTE PTR [edx+0x77311665],dl
  41c3ae:	dec    ecx
  41c3af:	sti    
  41c3b0:	mov    bl,0xca
  41c3b2:	mov    ebx,0xd6623814
  41c3b7:	dec    esi
  41c3b8:	mov    edi,0x3271f18d
  41c3bd:	adc    edi,0x23
  41c3c0:	mov    bl,0xb8
  41c3c2:	pop    esp
  41c3c3:	mov    ?,edx
  41c3c5:	mov    WORD PTR [ecx+esi*2-0x3d1270ed],gs
  41c3cc:	test   al,0x8f
  41c3ce:	sar    BYTE PTR [edi],0x58
  41c3d1:	mov    edx,0xcfd83ec7
  41c3d6:	lahf   
  41c3d7:	and    al,ch
  41c3d9:	cmp    al,bl
  41c3db:	aad    0x26
  41c3dd:	cmp    al,0x58
  41c3df:	and    eax,0x2963c61f
  41c3e4:	mov    ah,0xff
  41c3e6:	rcl    dl,0x32
  41c3e9:	pusha  
  41c3ea:	mov    bl,0x41
  41c3ec:	mov    ebx,0xc69ce92e
  41c3f1:	mov    eax,ds:0xf6d2319a
  41c3f6:	mov    al,0xc3
  41c3f8:	pop    es
  41c3f9:	leave  
  41c3fa:	gs mov bl,cl
  41c3fd:	dec    ebp
  41c3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ff:	nop
  41c400:	out    dx,eax
  41c401:	not    DWORD PTR [eax]
  41c403:	mov    ?,WORD PTR [edi+edi*2-0x2c09b037]
  41c40a:	fmul   QWORD PTR [edi-0x4cb2e8d0]
  41c410:	xor    eax,0x383f5830
  41c415:	dec    edx
  41c416:	adc    BYTE PTR ds:0x86d7dc88,bl
  41c41c:	push   edx
  41c41d:	leave  
  41c41e:	mov    bl,0x89
  41c420:	xor    al,0xd9
  41c422:	(bad)  [edi+0x6a]
  41c425:	sub    bh,BYTE PTR [ecx-0x45401f5f]
  41c42b:	adc    DWORD PTR [esi-0x9],esi
  41c42e:	or     edi,DWORD PTR [esi-0x390500bb]
  41c434:	sbb    al,0x1b
  41c436:	cmovge ebx,DWORD PTR [ebx]
  41c439:	jb     0x41c40a
  41c43b:	enter  0x8875,0x68
  41c43f:	add    edx,esi
  41c441:	push   esi
  41c442:	cmp    eax,0x9b7ec7cf
  41c447:	rol    BYTE PTR [edx+0x54],cl
  41c44a:	jmp    0x41c46c
  41c44c:	xor    al,dl
  41c44e:	mov    ah,0x65
  41c450:	and    dl,BYTE PTR [esi+0x5e]
  41c453:	sub    al,dl
  41c455:	inc    edx
  41c456:	xlat   BYTE PTR ds:[ebx]
  41c457:	cdq    
  41c458:	sbb    DWORD PTR [ecx-0x4f],ebx
  41c45b:	(bad)  
  41c45c:	push   ebp
  41c45d:	add    eax,0xce3975be
  41c462:	or     BYTE PTR [edx+0x35026fa1],bh
  41c468:	cmp    al,0x80
  41c46a:	rcr    DWORD PTR [ebx+0x26],0x23
  41c46e:	add    BYTE PTR [esi-0x7065cde0],ch
  41c474:	outs   dx,DWORD PTR ds:[esi]
  41c475:	js     0x41c4a5
  41c477:	push   edx
  41c478:	lods   eax,DWORD PTR ds:[esi]
  41c479:	and    ch,BYTE PTR [ecx-0x68]
  41c47c:	jle    0x41c4a0
  41c47e:	leave  
  41c47f:	gs repnz xchg edx,eax
  41c482:	int3   
  41c483:	fdivr  QWORD PTR cs:[esi+0x0]
  41c487:	mov    dl,0x98
  41c489:	ror    BYTE PTR [ebx],0xf2
  41c48c:	popf   
  41c48d:	mov    es,WORD PTR ss:[ebp+0x31]
  41c491:	lahf   
  41c492:	mov    ebx,DWORD PTR [ecx+0xea1592e]
  41c498:	mov    ebx,ebp
  41c49a:	loopne 0x41c4e5
  41c49c:	inc    esp
  41c49d:	hlt    
  41c49e:	pushf  
  41c49f:	xchg   esi,eax
  41c4a0:	push   ds
  41c4a1:	(bad)  
  41c4a2:	lods   eax,DWORD PTR ds:[esi]
  41c4a3:	sbb    eax,0x3e08042c
  41c4a8:	mov    bh,0xd4
  41c4aa:	sbb    esp,DWORD PTR [ecx-0x1cb974bd]
  41c4b0:	xor    eax,0x7a998eb7
  41c4b5:	add    cl,BYTE PTR gs:[eax-0x1e]
  41c4b9:	repz sbb BYTE PTR [eax+ecx*8+0x253c00fe],0x8d
  41c4c2:	push   ebp
  41c4c3:	fild   QWORD PTR [edi+0x2447b998]
  41c4c9:	mov    al,0xed
  41c4cb:	out    dx,eax
  41c4cc:	xor    edi,eax
  41c4ce:	adc    BYTE PTR [edx+0x1b],dl
  41c4d1:	dec    edi
  41c4d2:	push   es
  41c4d3:	adc    dh,BYTE PTR [edi]
  41c4d5:	mov    dh,0xff
  41c4d7:	push   ebx
  41c4d8:	xchg   ebp,eax
  41c4d9:	cmp    DWORD PTR [ebp-0x7e],edx
  41c4dc:	les    ebp,FWORD PTR ds:0xead8229d
  41c4e2:	lock or al,0xf4
  41c4e5:	addr16 aad 0xa9
  41c4e8:	add    edx,esi
  41c4ea:	push   ds
  41c4eb:	jbe    0x41c52b
  41c4ed:	cwde   
  41c4ee:	jmp    0x41c4ba
  41c4f0:	push   edi
  41c4f1:	int3   
  41c4f2:	add    eax,0xb99cd764
  41c4f7:	imul   ebp,DWORD PTR [ebx-0x13],0xfffffff1
  41c4fb:	cmp    dh,dl
  41c4fd:	push   edi
  41c4fe:	push   esi
  41c4ff:	xchg   ch,ah
  41c501:	inc    esi
  41c502:	mov    WORD PTR [edx+0x4588718],gs
  41c508:	mov    al,0x60
  41c50a:	mov    esp,0x2465dcca
  41c50f:	xor    ebx,DWORD PTR [ecx]
  41c511:	and    BYTE PTR [eax+edi*2-0x5606a69c],ch
  41c518:	lds    ebx,FWORD PTR [eax]
  41c51a:	mov    cl,0xc2
  41c51c:	popf   
  41c51d:	xor    bh,BYTE PTR [esi+ebp*4]
  41c520:	arpl   WORD PTR [edx-0x1c],cx
  41c523:	sub    ecx,0xffffffdc
  41c526:	fxam   
  41c528:	pop    ecx
  41c529:	dec    edi
  41c52a:	call   0xe70e:0xf69d435b
  41c531:	jg     0x41c560
  41c533:	rol    BYTE PTR [edx-0x5e],cl
  41c536:	out    dx,al
  41c537:	mul    DWORD PTR [edx+0x7]
  41c53a:	push   ebx
  41c53b:	js     0x41c550
  41c53d:	cmp    al,0xde
  41c53f:	dec    edi
  41c540:	mov    eax,0xeffbd9d8
  41c545:	mov    edx,0x4f72e7ca
  41c54a:	das    
  41c54b:	sub    al,0xbf
  41c54d:	fs mov al,0x86
  41c550:	inc    edi
  41c551:	adc    al,0x78
  41c553:	cmp    ecx,DWORD PTR [ebx-0x4c]
  41c556:	jmp    0x1fc3:0x3cbcc98f
  41c55d:	ja     0x41c530
  41c55f:	inc    edx
  41c560:	mov    ch,0xd3
  41c562:	nop
  41c563:	imul   esp,DWORD PTR [esi-0x2c],0x13f6371e
  41c56a:	mul    ch
  41c56c:	cmp    ecx,ebp
  41c56e:	jmp    0x41c4f0
  41c570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c571:	or     al,0xf7
  41c573:	out    dx,al
  41c574:	push   cs
  41c575:	mov    eax,ds:0xb5b8f7f
  41c57a:	push   esp
  41c57b:	mov    ecx,ebx
  41c57d:	sub    dh,bl
  41c57f:	push   edi
  41c580:	jecxz  0x41c51e
  41c582:	in     al,dx
  41c583:	(bad)  
  41c584:	in     al,dx
  41c585:	inc    edx
  41c586:	push   edx
  41c587:	xchg   DWORD PTR [edi],ecx
  41c589:	inc    esi
  41c58a:	fcomp  QWORD PTR [edx-0x7a31a959]
  41c590:	rcr    DWORD PTR [edi],cl
  41c592:	sti    
  41c593:	mov    eax,0x92ccb9e
  41c598:	adc    eax,0x1b19ac5e
  41c59d:	inc    eax
  41c59e:	enter  0xcec4,0x5c
  41c5a2:	inc    edx
  41c5a3:	cmp    DWORD PTR [edx-0x6a],0xffffffe1
  41c5a7:	mov    bh,0xb3
  41c5a9:	add    dl,ah
  41c5ab:	fidiv  WORD PTR [eax+ebp*1]
  41c5ae:	fadd   DWORD PTR [ecx+edi*2]
  41c5b1:	sbb    al,0x38
  41c5b3:	sbb    DWORD PTR [esp+ecx*2],ebx
  41c5b6:	lods   eax,DWORD PTR ds:[esi]
  41c5b7:	arpl   WORD PTR [ebp+0x21],bp
  41c5ba:	push   0xffffffc8
  41c5bc:	or     al,BYTE PTR [edi]
  41c5be:	test   al,0xa4
  41c5c0:	inc    edi
  41c5c1:	sahf   
  41c5c2:	loopne 0x41c618
  41c5c4:	es xor al,0x4a
  41c5c7:	cmc    
  41c5c8:	jae    0x41c560
  41c5ca:	aas    
  41c5cb:	in     eax,dx
  41c5cc:	es dec esi
  41c5ce:	dec    esp
  41c5cf:	mov    edi,0x7d4ee7e6
  41c5d4:	fistp  WORD PTR [ecx+0x27]
  41c5d7:	push   0xffffffc0
  41c5d9:	rol    al,0xc0
  41c5dc:	rol    al,0xc0
  41c5df:	rol    al,0xc0
  41c5e2:	rol    al,0xc0
  41c5e5:	rol    al,0xc0
  41c5e8:	rol    al,0xc0
  41c5eb:	rol    al,0xc0
  41c5ee:	rol    al,0xc0
  41c5f1:	rol    al,0xc0
  41c5f4:	rol    al,0xc0
  41c5f7:	rol    al,0xc0
  41c5fa:	rol    al,0xc0
  41c5fd:	rol    al,0xc0
  41c600:	rol    al,0xc0
  41c603:	rol    al,0xc0
  41c606:	rol    al,0xc0
  41c609:	rol    al,0xc0
  41c60c:	rol    al,0xc0
  41c60f:	rol    al,0xc0
  41c612:	rol    al,0xc0
  41c615:	rol    al,0xc0
  41c618:	fadd   QWORD PTR [edx-0x76]
  41c61b:	pop    ebx
  41c61c:	sahf   
  41c61d:	rcl    BYTE PTR [edx+0x553e60cb],1
  41c623:	mov    ds:0x9a941a66,al
  41c628:	jne    0x41c699
  41c62a:	in     eax,0xc5
  41c62c:	adc    BYTE PTR [ebx],0xce
  41c62f:	mov    ah,0x39
  41c631:	mov    ecx,0x7f0642b6
  41c636:	aad    0x96
  41c638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c639:	hlt    
  41c63a:	gs call 0x31427f9e
  41c640:	push   ss
  41c641:	cld    
  41c642:	inc    ecx
  41c643:	dec    esp
  41c644:	push   cs
  41c645:	inc    ebx
  41c646:	inc    ecx
  41c647:	or     edi,DWORD PTR [ebx+0x7c]
  41c64a:	push   ecx
  41c64b:	mov    eax,ds:0xa58f9104
  41c650:	cmp    ebx,DWORD PTR [ecx-0x4abf57dc]
  41c656:	mov    dl,0xd5
  41c658:	cmp    eax,0xa49bc516
  41c65d:	and    ch,al
  41c65f:	jbe    0x41c5f9
  41c661:	dec    edx
  41c662:	xor    BYTE PTR [ecx+0xe],dh
  41c665:	sbb    BYTE PTR [ecx+0x23],bh
  41c668:	adc    eax,0x975b0323
  41c66d:	sbb    ebx,DWORD PTR [ebx-0x11616cf5]
  41c673:	dec    ebx
  41c674:	ds call 0x203d:0xb8e3a5b7
  41c67c:	adc    al,0x73
  41c67e:	cmp    bl,dh
  41c680:	cmp    eax,0xb4494b06
  41c685:	les    ebx,FWORD PTR [edi+ebx*2]
  41c688:	xor    eax,0xa8811dfc
  41c68d:	push   ss
  41c68e:	stc    
  41c68f:	jmp    0x921d:0xa4fb2c27
  41c696:	adc    BYTE PTR [edi+0x59],0xa7
  41c69a:	lock test al,0x1
  41c69d:	into   
  41c69e:	fadd   DWORD PTR [ecx]
  41c6a0:	aas    
  41c6a1:	cmp    dl,0x90
  41c6a4:	in     eax,0x92
  41c6a6:	cli    
  41c6a7:	test   eax,0x9be64e2b
  41c6ac:	push   0xca24ddc8
  41c6b1:	lods   al,BYTE PTR ds:[esi]
  41c6b2:	fdivr  st(2),st
  41c6b4:	rcl    DWORD PTR [esi-0x60c29651],1
  41c6ba:	pop    edi
  41c6bb:	mov    al,0xc1
  41c6bd:	cs aas 
  41c6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c0:	and    BYTE PTR [esi+0x2b3e6e07],cl
  41c6c6:	dec    ebx
  41c6c7:	inc    ebp
  41c6c8:	das    
  41c6c9:	push   eax
  41c6ca:	int    0x83
  41c6cc:	sub    al,0x1b
  41c6ce:	cwde   
  41c6cf:	pop    edx
  41c6d0:	adc    bl,BYTE PTR [esi-0x509852c]
  41c6d6:	cs leave 
  41c6d8:	cli    
  41c6d9:	shr    BYTE PTR [si],cl
  41c6dc:	loope  0x41c726
  41c6de:	dec    edx
  41c6df:	or     DWORD PTR [ebx+0x440c4496],ebx
  41c6e5:	and    al,0x37
  41c6e7:	xchg   ebx,eax
  41c6e8:	pop    ecx
  41c6e9:	ss or  al,0xa4
  41c6ec:	stos   BYTE PTR es:[edi],al
  41c6ed:	inc    esi
  41c6ee:	sub    ch,BYTE PTR [edi+eax*1-0x9d36598]
  41c6f5:	or     DWORD PTR [edi+0x22d7624e],edx
  41c6fb:	retf   0x697b
  41c6fe:	repz repnz xor al,0x8a
  41c702:	lods   al,BYTE PTR ds:[esi]
  41c703:	pop    ebp
  41c704:	cwde   
  41c705:	out    dx,eax
  41c706:	jo     0x41c6d0
  41c708:	sbb    DWORD PTR ds:0x92a460b6,eax
  41c70e:	sbb    eax,0xa3fae251
  41c713:	pop    eax
  41c714:	jp     0x41c6ea
  41c716:	imul   edi,DWORD PTR ds:0x36fa77f8,0xffffffce
  41c71d:	mov    al,ds:0x8ee852c6
  41c722:	xor    BYTE PTR [edi],bl
  41c724:	ja     0x41c72d
  41c726:	test   eax,0xa86de46a
  41c72b:	imul   dl
  41c72d:	jp     0x41c79b
  41c72f:	std    
  41c730:	add    DWORD PTR [eax-0x19ff0990],0xa4b74e0
  41c73a:	scas   eax,DWORD PTR es:[edi]
  41c73b:	inc    ecx
  41c73c:	test   eax,0x3429c2de
  41c741:	mov    eax,ss
  41c743:	popa   
  41c744:	sbb    cl,BYTE PTR [eax+edx*8]
  41c747:	or     DWORD PTR [ebp+0x21],ebp
  41c74a:	lahf   
  41c74b:	ds push esp
  41c74d:	mov    ds:0x93381c3c,al
  41c752:	sub    eax,0xcd6d3712
  41c757:	ins    DWORD PTR es:[edi],dx
  41c758:	xor    eax,0xfd862e86
  41c75d:	and    esi,ecx
  41c75f:	inc    edx
  41c760:	lods   eax,DWORD PTR ds:[esi]
  41c761:	in     al,0xce
  41c763:	inc    esi
  41c764:	add    eax,0x87c492b0
  41c769:	jge    0x41c7b7
  41c76b:	and    DWORD PTR ds:0x253f,ebp
  41c770:	jae    0x41c76c
  41c772:	sti    
  41c773:	sbb    ah,BYTE PTR ds:0x104bf7db
  41c779:	jo     0x41c767
  41c77b:	dec    esi
  41c77c:	inc    edx
  41c77d:	scas   al,BYTE PTR es:[edi]
  41c77e:	sahf   
  41c77f:	outs   dx,BYTE PTR gs:[esi]
  41c781:	mov    BYTE PTR [edi+0x50],dl
  41c784:	dec    esp
  41c785:	clc    
  41c786:	sub    eax,0x47dbed8e
  41c78b:	jp     0x41c7d2
  41c78d:	mov    cl,0x8c
  41c78f:	jp     0x41c764
  41c791:	pop    DWORD PTR [edx]
  41c793:	sbb    BYTE PTR [edi+0x26],bl
  41c796:	mov    bl,0x36
  41c798:	mov    al,0xc0
  41c79a:	out    dx,eax
  41c79b:	push   cs
  41c79c:	out    dx,al
  41c79d:	shr    BYTE PTR [ecx+0x34],1
  41c7a0:	clc    
  41c7a1:	add    eax,0x17bba4fd
  41c7a6:	das    
  41c7a7:	cmp    eax,DWORD PTR [ebx+ecx*8]
  41c7aa:	adc    DWORD PTR [eax+eiz*8],0xffffffd0
  41c7ae:	pushf  
  41c7af:	pop    ebx
  41c7b0:	jae    0x41c822
  41c7b2:	stos   BYTE PTR es:[edi],al
  41c7b3:	xor    ch,BYTE PTR [esi-0x48]
  41c7b6:	xor    DWORD PTR [ecx+0x70],ebp
  41c7b9:	mov    edx,0x4970ab0e
  41c7be:	dec    esi
  41c7bf:	dec    BYTE PTR [ebx-0x70]
  41c7c2:	shl    BYTE PTR [edx+0x26105737],0x39
  41c7c9:	inc    DWORD PTR [edi-0x18f740c3]
  41c7cf:	outs   dx,BYTE PTR ds:[esi]
  41c7d0:	mov    ebx,0x4564d486
  41c7d5:	call   0x3ad7:0xc7c26845
  41c7dc:	xor    al,BYTE PTR [ebx-0x27]
  41c7df:	push   ss
  41c7e0:	aad    0x93
  41c7e2:	mov    BYTE PTR [ecx],dl
  41c7e4:	popf   
  41c7e5:	add    al,dl
  41c7e7:	pmulhw mm6,mm4
  41c7ea:	js     0x41c850
  41c7ec:	scas   eax,DWORD PTR es:[edi]
  41c7ed:	inc    edx
  41c7ee:	lahf   
  41c7ef:	jbe    0x41c7c4
  41c7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f2:	lods   al,BYTE PTR ds:[esi]
  41c7f3:	dec    edi
  41c7f4:	sub    eax,0xedcfae4a
  41c7f9:	out    dx,eax
  41c7fa:	jmp    0x8ea3fdb1
  41c7ff:	aad    0x1a
  41c801:	inc    esi
  41c802:	test   DWORD PTR [eax+0x7b235d0d],edx
  41c808:	call   0x5670cd60
  41c80d:	xchg   ebx,eax
  41c80e:	addr16 jno 0x41c839
  41c811:	xchg   esp,eax
  41c812:	scas   eax,DWORD PTR es:[edi]
  41c813:	mov    eax,0x6cc71065
  41c818:	jae    0x41c7d9
  41c81a:	or     cl,BYTE PTR [ebp+edx*1-0x35]
  41c81e:	test   al,0x54
  41c820:	fistp  WORD PTR [ebx+eiz*1+0x568f1b51]
  41c827:	and    eax,0xd5bfcea8
  41c82c:	pop    ds
  41c82d:	pop    eax
  41c82e:	lods   eax,DWORD PTR ds:[esi]
  41c82f:	(bad)  
  41c830:	stos   DWORD PTR es:[edi],eax
  41c831:	das    
  41c832:	sar    BYTE PTR [eax],cl
  41c834:	mov    eax,ds:0x5373b83b
  41c839:	mov    ebp,0x8de14df5
  41c83e:	inc    edi
  41c83f:	or     eax,0x4d28fa3a
  41c844:	add    esp,DWORD PTR [edx+0x18]
  41c847:	jne    0x41c831
  41c849:	stos   DWORD PTR es:[edi],eax
  41c84a:	mov    al,ds:0x18ee46c1
  41c84f:	inc    ecx
  41c850:	pop    edx
  41c851:	xchg   ebp,eax
  41c852:	mov    eax,0xb02b7e30
  41c857:	loop   0x41c7f1
  41c859:	aam    0x9c
  41c85b:	ins    DWORD PTR es:[edi],dx
  41c85c:	arpl   WORD PTR [ecx*1-0x2161db8],ax
  41c863:	or     bh,BYTE PTR [esi+0x8]
  41c866:	jle    0x41c879
  41c868:	inc    DWORD PTR [esi]
  41c86a:	push   esp
  41c86b:	gs jl  0x41c888
  41c86e:	or     al,0xdf
  41c870:	scas   eax,DWORD PTR es:[edi]
  41c871:	mov    edx,gs
  41c873:	in     eax,0xca
  41c875:	sbb    BYTE PTR [edx+ecx*2],ch
  41c878:	fadd   QWORD PTR [edi-0x63]
  41c87c:	adc    DWORD PTR [edx],edi
  41c87e:	or     BYTE PTR [ecx+0xb],al
  41c881:	mov    eax,0x682322d6
  41c886:	shl    edx,1
  41c888:	sub    DWORD PTR [eax],ebx
  41c88a:	loopne 0x41c81e
  41c88c:	aaa    
  41c88d:	hlt    
  41c88e:	aad    0x86
  41c890:	mov    eax,0x4f0c2ba
  41c895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c896:	or     bl,BYTE PTR ds:0x8a8c9a49
  41c89c:	push   edi
  41c89d:	shl    BYTE PTR [esi],0x60
  41c8a0:	adc    eax,0x3ccafdf7
  41c8a5:	dec    ecx
  41c8a6:	jo     0x41c861
  41c8a8:	add    BYTE PTR [edx+0x4bded4d4],dl
  41c8ae:	scas   al,BYTE PTR es:[edi]
  41c8af:	or     dl,bh
  41c8b1:	push   cs
  41c8b2:	mov    ah,0x92
  41c8b4:	pushf  
  41c8b5:	inc    esp
  41c8b6:	scas   eax,DWORD PTR es:[edi]
  41c8b7:	(bad)  
  41c8b8:	retf   
  41c8b9:	pcmpgtd mm2,QWORD PTR [eax-0x5c]
  41c8bd:	inc    eax
  41c8be:	arpl   cx,sp
  41c8c0:	ror    dh,cl
  41c8c2:	pop    ss
  41c8c3:	pusha  
  41c8c4:	push   edi
  41c8c5:	dec    edi
  41c8c6:	pushf  
  41c8c7:	xchg   BYTE PTR [ecx],dh
  41c8c9:	xor    BYTE PTR [edi+0x35be3a78],dl
  41c8cf:	jno    0x41c936
  41c8d1:	nop
  41c8d2:	fcomp  QWORD PTR [ecx+0x573cae7b]
  41c8d8:	test   eax,0x86cd659
  41c8dd:	jg     0x41c861
  41c8df:	jae    0x41c865
  41c8e1:	(bad)  ds:[esi+ebp*1]
  41c8e5:	arpl   bp,di
  41c8e7:	iret   
  41c8e8:	mov    cl,0x66
  41c8ea:	nop
  41c8eb:	fcom   QWORD PTR [edi+0x43]
  41c8ee:	dec    eax
  41c8ef:	add    dh,al
  41c8f1:	gs adc eax,0x800a36c4
  41c8f7:	and    eax,0x13a850ab
  41c8fc:	dec    ecx
  41c8fd:	mov    DWORD PTR [ecx+0xb],ecx
  41c900:	sub    DWORD PTR [edi-0x677f5ec3],ebp
  41c906:	cwde   
  41c907:	inc    ecx
  41c908:	leave  
  41c909:	mov    ebx,0x77fb5df
  41c90e:	mov    ss,WORD PTR [esp+ebx*2-0x6a]
  41c912:	test   BYTE PTR [edi+0x43ca5f17],cl
  41c918:	rcl    DWORD PTR [ecx],cl
  41c91a:	mov    ?,WORD PTR [eax+0x58]
  41c91d:	inc    ebx
  41c91e:	clc    
  41c91f:	add    edx,DWORD PTR [edi-0x50]
  41c922:	mov    ds:0xf2eac53e,eax
  41c927:	in     al,0xd1
  41c929:	mov    ?,WORD PTR [ebx]
  41c92b:	jg     0x41c9a8
  41c92d:	dec    edi
  41c92e:	fiadd  WORD PTR [edx-0x35efb535]
  41c934:	or     al,0x29
  41c936:	push   cs
  41c937:	shl    esp,1
  41c939:	or     bl,bh
  41c93b:	das    
  41c93c:	or     DWORD PTR [edi],ecx
  41c93e:	sub    BYTE PTR [esi],cl
  41c940:	ins    DWORD PTR es:[edi],dx
  41c941:	cli    
  41c942:	adc    BYTE PTR [ebp-0x80],0x17
  41c946:	adc    BYTE PTR [esi],0xf9
  41c949:	jnp    0x41c947
  41c94b:	popf   
  41c94c:	xor    edx,edi
  41c94e:	xchg   esi,eax
  41c94f:	sti    
  41c950:	retf   
  41c951:	xchg   esi,eax
  41c952:	(bad)  
  41c953:	push   0x58
  41c955:	or     BYTE PTR [edx],ah
  41c957:	add    BYTE PTR [ebx],dh
  41c959:	mov    cl,0xc
  41c95b:	test   DWORD PTR [eax],ebx
  41c95d:	sub    bl,cl
  41c95f:	pop    edi
  41c960:	add    dh,BYTE PTR [ecx]
  41c962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c963:	and    al,0xb
  41c965:	mov    DWORD PTR ss:[edi-0xb02689f],eax
  41c96c:	cmp    BYTE PTR [ebx+0x523ce0ca],ah
  41c972:	cwde   
  41c973:	pop    es
  41c974:	bound  ecx,QWORD PTR [eax-0x3c]
  41c977:	outs   dx,BYTE PTR ds:[esi]
  41c978:	xchg   esi,eax
  41c979:	inc    esp
  41c97a:	sbb    al,0x58
  41c97c:	xchg   ebp,eax
  41c97d:	ins    DWORD PTR es:[edi],dx
  41c97e:	fnstcw WORD PTR [edx+0x49]
  41c981:	xlat   BYTE PTR ds:[ebx]
  41c982:	clc    
  41c983:	js     0x41c9c1
  41c985:	inc    ebp
  41c986:	xchg   edx,eax
  41c987:	or     eax,0xfc1a85e5
  41c98c:	pop    ebp
  41c98d:	inc    edi
  41c98e:	fidiv  WORD PTR [ebx]
  41c990:	inc    ebx
  41c991:	outs   dx,BYTE PTR ds:[esi]
  41c992:	mov    bl,0xab
  41c994:	jge    0x41c9e4
  41c996:	jl     0x41c98f
  41c998:	inc    ebx
  41c999:	dec    esi
  41c99a:	mov    al,0xf3
  41c99c:	scas   eax,DWORD PTR es:[edi]
  41c99d:	popa   
  41c99e:	test   BYTE PTR [eax+esi*1],0xe
  41c9a2:	inc    ebx
  41c9a3:	sbb    BYTE PTR [eax+0x2931e38f],dh
  41c9a9:	pop    edx
  41c9aa:	idiv   DWORD PTR [eax-0x65]
  41c9ad:	mov    edx,DWORD PTR [esi-0x49e8f868]
  41c9b3:	sbb    BYTE PTR [esi-0x5a],0x18
  41c9b7:	dec    BYTE PTR [ebp+0x3837cabc]
  41c9bd:	xor    dh,dl
  41c9bf:	jbe    0x41c9b9
  41c9c1:	shl    DWORD PTR [edi-0x7dfd8163],cl
  41c9c7:	popa   
  41c9c8:	pop    ss
  41c9c9:	jmp    0x80e3:0x47a6c1e
  41c9d0:	out    0x6c,eax
  41c9d2:	js     0x41c9f8
  41c9d4:	iret   
  41c9d5:	mov    eax,0x2d4506f6
  41c9da:	xor    ebp,ebp
  41c9dc:	rcr    BYTE PTR [eax],cl
  41c9de:	ds or  ebp,esp
  41c9e1:	int3   
  41c9e2:	pop    ss
  41c9e3:	mov    bl,BYTE PTR [edi+0x23]
  41c9e6:	sar    BYTE PTR [esi+0x79],1
  41c9e9:	or     eax,0x43b46bb8
  41c9ee:	popa   
  41c9ef:	xlat   BYTE PTR ds:[ebx]
  41c9f0:	sub    al,0xba
  41c9f2:	push   ebp
  41c9f3:	jae    0x41c9d7
  41c9f5:	in     al,dx
  41c9f6:	cs das 
  41c9f8:	fnstsw WORD PTR [edi-0x33bd1f50]
  41c9fe:	retf   0x4561
  41ca01:	call   0xd9fb:0x78f70c3c
  41ca08:	sbb    eax,DWORD PTR [ebx+0x5ece81ce]
  41ca0e:	sbb    eax,0x6c14448f
  41ca13:	push   ss
  41ca14:	js     0x41ca30
  41ca16:	test   BYTE PTR [ebp+0x60],bh
  41ca19:	iret   
  41ca1a:	cli    
  41ca1b:	cmp    eax,DWORD PTR [eax-0x3623db8b]
  41ca21:	test   DWORD PTR [edx],0xdfed1c26
  41ca27:	aam    0x6f
  41ca29:	xor    BYTE PTR [ecx],al
  41ca2b:	pop    ebp
  41ca2c:	repnz addr16 popf 
  41ca2f:	cmp    DWORD PTR [edx],0xc891a69c
  41ca35:	push   ebx
  41ca36:	test   DWORD PTR [ecx+0x65],ebp
  41ca39:	in     al,0xd2
  41ca3b:	jo     0x41ca3a
  41ca3d:	fwait
  41ca3e:	cmpxchg BYTE PTR [esi],bl
  41ca41:	fidiv  DWORD PTR [ecx]
  41ca43:	mov    gs,esp
  41ca45:	add    al,0xd1
  41ca47:	push   edi
  41ca48:	aaa    
  41ca49:	aam    0x68
  41ca4b:	push   esi
  41ca4c:	daa    
  41ca4d:	test   al,dh
  41ca4f:	jnp    0x41ca52
  41ca51:	(bad)  
  41ca52:	pop    edx
  41ca53:	mov    esp,0x1b9e9c49
  41ca58:	jns    0x41ca11
  41ca5a:	nop
  41ca5b:	cmp    eax,0xcb23864
  41ca60:	ss enter 0x498e,0x42
  41ca65:	es mov ecx,0xe4e6e70c
  41ca6b:	adc    al,0xc6
  41ca6d:	and    dl,BYTE PTR [ebp-0x70bee9ac]
  41ca73:	add    edi,DWORD PTR [ecx+0x38c5720b]
  41ca79:	mov    bl,0x3a
  41ca7b:	jle    0x41ca91
  41ca7d:	(bad)  
  41ca7e:	cli    
  41ca7f:	loop   0x41ca82
  41ca81:	dec    edi
  41ca82:	fimul  DWORD PTR [eax+0x3]
  41ca85:	pop    ecx
  41ca86:	push   DWORD PTR [ebp-0x19]
  41ca89:	ss jnp 0x41caf5
  41ca8c:	lahf   
  41ca8d:	adc    al,0xd8
  41ca8f:	sub    dh,BYTE PTR [esp+ebx*1]
  41ca92:	cld    
  41ca93:	jmp    FWORD PTR ds:0x93e8aaa9
  41ca99:	stos   DWORD PTR es:[edi],eax
  41ca9a:	repz xor DWORD PTR [esi+0x3],esp
  41ca9e:	mov    esi,esp
  41caa0:	sbb    ebp,edi
  41caa2:	cmp    al,0x2a
  41caa4:	pop    eax
  41caa5:	xchg   ebx,eax
  41caa6:	and    eax,0xcedbe082
  41caab:	inc    ebx
  41caac:	js     0x41cb13
  41caae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caaf:	aaa    
  41cab0:	jecxz  0x41cac9
  41cab2:	outs   dx,DWORD PTR ds:[esi]
  41cab3:	jo     0x41ca39
  41cab5:	popf   
  41cab6:	cwde   
  41cab7:	popa   
  41cab8:	sbb    DWORD PTR [edx+ecx*4+0x4c],esp
  41cabc:	cdq    
  41cabd:	pushf  
  41cabe:	or     BYTE PTR [edx-0x61],0xb2
  41cac2:	mov    cl,0x3c
  41cac4:	and    BYTE PTR [ebx+edi*1],ch
  41cac7:	jmp    0x41cae1
  41cac9:	mov    edx,0x87a59fda
  41cace:	xlat   BYTE PTR ds:[ebx]
  41cacf:	xor    BYTE PTR [esp+esi*1-0x78],al
  41cad3:	mov    WORD PTR [ebx-0x75],es
  41cad6:	ja     0x41cb2a
  41cad8:	pop    edx
  41cad9:	mov    BYTE PTR [edx+0x56],bh
  41cadc:	pop    ebp
  41cadd:	js     0x41ca89
  41cadf:	push   edi
  41cae0:	cmp    dl,BYTE PTR [edx]
  41cae2:	fcom   QWORD PTR [esi+0x42]
  41cae5:	lods   al,BYTE PTR ds:[esi]
  41cae6:	retf   
  41cae7:	outs   dx,DWORD PTR ds:[esi]
  41cae8:	retf   0xf92
  41caeb:	adc    al,ch
  41caed:	cmp    BYTE PTR [edx-0x74d51c96],al
  41caf3:	and    al,0x59
  41caf5:	pop    ecx
  41caf6:	fistp  DWORD PTR [edi]
  41caf8:	lea    esp,[ebx+0x42cd9d9f]
  41cafe:	es mov bh,ah
  41cb01:	inc    ebx
  41cb02:	or     al,0x60
  41cb04:	inc    ebx
  41cb05:	mov    ecx,0x5af96da3
  41cb0a:	cdq    
  41cb0b:	push   esp
  41cb0c:	push   edi
  41cb0d:	dec    edx
  41cb0e:	imul   ebp,DWORD PTR [eax+0x64c5b238],0xffffffea
  41cb15:	dec    ebx
  41cb16:	pop    esp
  41cb17:	jb     0x41cab3
  41cb19:	std    
  41cb1a:	adc    ah,BYTE PTR [ecx]
  41cb1c:	sub    dl,BYTE PTR [edx]
  41cb1e:	enter  0xf702,0xe8
  41cb22:	xchg   edi,eax
  41cb23:	jl     0x41cb3f
  41cb25:	or     eax,0xb62440f1
  41cb2a:	xlat   BYTE PTR ds:[ebx]
  41cb2b:	dec    eax
  41cb2c:	rcr    DWORD PTR [eax-0x15aea8fe],1
  41cb32:	aad    0x66
  41cb34:	in     eax,dx
  41cb35:	inc    esi
  41cb36:	test   al,0xe3
  41cb38:	add    al,0xa7
  41cb3a:	cmp    eax,0xf2457080
  41cb3f:	pop    ebx
  41cb40:	arpl   WORD PTR [esi-0x2695ba9],si
  41cb46:	mov    ebx,0x98acc999
  41cb4b:	call   0x77b1dd8d
  41cb50:	es pusha 
  41cb52:	rep ins BYTE PTR es:[edi],dx
  41cb54:	jle    0x41cb73
  41cb56:	xchg   edx,eax
  41cb57:	in     ax,dx
  41cb59:	xchg   ebp,eax
  41cb5a:	test   BYTE PTR [ebp+0x6f0bcbbf],0x4f
  41cb61:	lahf   
  41cb62:	iret   
  41cb63:	imul   esi,esp,0x36
  41cb66:	fidivr WORD PTR [ecx+0x17]
  41cb69:	lods   eax,DWORD PTR ds:[esi]
  41cb6a:	outs   dx,DWORD PTR ds:[esi]
  41cb6b:	pop    ebp
  41cb6c:	stos   BYTE PTR es:[edi],al
  41cb6d:	dec    eax
  41cb6e:	leave  
  41cb6f:	sahf   
  41cb70:	xor    ebx,DWORD PTR [edi+0x501650b7]
  41cb76:	jecxz  0x41cb24
  41cb78:	loop   0x41cafe
  41cb7a:	clc    
  41cb7b:	add    al,0x1d
  41cb7d:	mov    esi,0xf8485e85
  41cb82:	inc    esi
  41cb83:	fcomp  QWORD PTR [esi-0x80]
  41cb86:	jno    0x41cbd3
  41cb88:	cmp    cl,dl
  41cb8a:	mov    eax,ds:0xcdc889b4
  41cb8f:	es sub eax,0xb9fc45c
  41cb95:	sub    dh,BYTE PTR [eax]
  41cb97:	outs   dx,DWORD PTR ds:[esi]
  41cb98:	(bad)  
  41cb99:	push   esi
  41cb9a:	int    0x7e
  41cb9c:	icebp  
  41cb9d:	mov    ds:0xc26396ff,al
  41cba2:	dec    esp
  41cba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba4:	xor    al,BYTE PTR [edi+0x13]
  41cba7:	adc    eax,0xa4f449a5
  41cbac:	push   esp
  41cbad:	call   0x8139:0x3d0557cf
  41cbb4:	retf   0x803
  41cbb7:	cmp    al,0x4c
  41cbb9:	cmc    
  41cbba:	scas   al,BYTE PTR es:[edi]
  41cbbb:	mov    ebx,0xe2c29d4
  41cbc0:	pop    esi
  41cbc1:	sti    
  41cbc2:	mov    ah,0xa8
  41cbc4:	sbb    ah,0xe8
  41cbc7:	xchg   ecx,eax
  41cbc8:	pop    edi
  41cbc9:	test   edx,edi
  41cbcb:	pop    ebx
  41cbcc:	or     ah,BYTE PTR ds:0x9f7238a6
  41cbd2:	cli    
  41cbd3:	bound  esp,QWORD PTR [ebx]
  41cbd5:	(bad)  
  41cbd7:	enter  0x8105,0x5c
  41cbdb:	push   ss
  41cbdc:	sub    BYTE PTR [ecx+0x78e66f54],bl
  41cbe2:	jl     0x41cba4
  41cbe4:	les    esi,FWORD PTR [ecx+esi*4]
  41cbe7:	adc    BYTE PTR [eax+0x2d],ch
  41cbea:	(bad)  
  41cbec:	add    dh,al
  41cbee:	jmp    0x57a1:0xd1fac06e
  41cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf6:	xor    eax,0x624c3820
  41cbfb:	js     0x41cbda
  41cbfd:	mov    dh,0x85
  41cbff:	mov    bh,BYTE PTR [eax+0x34]
  41cc02:	in     eax,0x3a
  41cc04:	inc    esp
  41cc05:	pop    ecx
  41cc06:	test   al,0x5d
  41cc08:	mov    bl,0x1a
  41cc0a:	fstp   TBYTE PTR [ebx-0x55dcdc8c]
  41cc10:	push   ebx
  41cc11:	dec    ebx
  41cc12:	lock jecxz 0x41cc53
  41cc15:	mov    al,0x1
  41cc17:	sbb    edx,DWORD PTR [esi-0x53]
  41cc1a:	test   DWORD PTR [eax],eax
  41cc1c:	jmp    0x41cc76
  41cc1e:	mov    ds:0xcc8b6324,al
  41cc23:	inc    esp
  41cc24:	ja     0x41cc3d
  41cc26:	lds    eax,FWORD PTR [ecx+0x7cf1c368]
  41cc2c:	rcr    DWORD PTR [eax],1
  41cc2e:	jnp    0x41cbb5
  41cc30:	xor    esi,0x49694ebf
  41cc36:	xlat   BYTE PTR ds:[ebx]
  41cc37:	xchg   ebp,eax
  41cc38:	aas    
  41cc39:	push   ecx
  41cc3a:	sbb    ebx,DWORD PTR [esi+0x67f86e3e]
  41cc40:	sbb    bh,BYTE PTR [edi-0x10]
  41cc43:	(bad)  
  41cc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc45:	mov    esp,0x8b704db3
  41cc4a:	in     al,dx
  41cc4b:	pop    eax
  41cc4c:	lods   eax,DWORD PTR ds:[esi]
  41cc4d:	add    BYTE PTR [edi+0x46],0x1
  41cc51:	dec    edx
  41cc52:	pop    esi
  41cc53:	mov    dl,0xdb
  41cc55:	or     ecx,ebp
  41cc57:	push   ecx
  41cc58:	mov    ch,0x30
  41cc5a:	in     al,dx
  41cc5b:	or     dh,BYTE PTR [ebx]
  41cc5d:	ins    BYTE PTR es:[edi],dx
  41cc5e:	test   BYTE PTR [esp+eax*2-0x46],bh
  41cc62:	sub    eax,0xaea0898c
  41cc67:	cdq    
  41cc68:	sub    eax,0x37370b5
  41cc6d:	cmp    ch,BYTE PTR [esi-0x3a189ee4]
  41cc73:	mov    ebx,0x6fe98be1
  41cc78:	or     eax,esi
  41cc7a:	dec    ebx
  41cc7b:	mov    DWORD PTR [edx+0x6301291f],ecx
  41cc81:	(bad)  
  41cc82:	cmc    
  41cc83:	add    DWORD PTR [eax],esi
  41cc85:	pop    eax
  41cc86:	mov    bl,0x85
  41cc88:	push   esp
  41cc89:	mov    bh,0x2d
  41cc8b:	jl     0x41cd01
  41cc8d:	shl    BYTE PTR [edx+0x1d],cl
  41cc90:	(bad)  
  41cc92:	retf   0x4451
  41cc95:	push   0x88015008
  41cc9a:	lods   al,BYTE PTR ds:[esi]
  41cc9b:	pop    esi
  41cc9c:	adc    eax,0x65b870fd
  41cca1:	jle    0x41ccd2
  41cca3:	pop    esi
  41cca4:	daa    
  41cca5:	loopne 0x41cd17
  41cca7:	pop    esp
  41cca8:	addr16 dec esp
  41ccaa:	rcr    DWORD PTR [ebp+0x22fb6d4b],cl
  41ccb0:	outs   dx,DWORD PTR ds:[esi]
  41ccb1:	repz bound ecx,QWORD PTR [edx]
  41ccb4:	and    DWORD PTR [ebp+0x24],0xfffffff3
  41ccb8:	mov    WORD PTR [esi+0x77],?
  41ccbb:	cmp    ah,bh
  41ccbd:	xchg   DWORD PTR [ebx],esp
  41ccbf:	lods   al,BYTE PTR ds:[esi]
  41ccc0:	mov    dl,0x73
  41ccc2:	sub    DWORD PTR [edi-0xe8a9a6e],0x66
  41ccc9:	lods   al,BYTE PTR ds:[esi]
  41ccca:	push   es
  41cccb:	shl    BYTE PTR [esp+edx*2-0x45],0x1
  41ccd0:	hlt    
  41ccd1:	ss or  al,0x11
  41ccd4:	add    bh,BYTE PTR [esi+0x3d]
  41ccd7:	and    DWORD PTR [eax+0x1605a7f0],edx
  41ccdd:	icebp  
  41ccde:	sti    
  41ccdf:	push   ebp
  41cce0:	push   ss
  41cce1:	mov    dl,0xe8
  41cce3:	inc    ebp
  41cce4:	es dec edi
  41cce6:	in     al,0x6b
  41cce8:	add    al,BYTE PTR [ebx]
  41ccea:	or     BYTE PTR [ebp+0x2aef10b0],0x57
  41ccf1:	(bad)  
  41ccf3:	pop    ebp
  41ccf4:	xchg   BYTE PTR [edi+esi*2],dl
  41ccf7:	aaa    
  41ccf8:	lock clc 
  41ccfa:	jmp    0x41cd3c
  41ccfc:	test   BYTE PTR [edx-0x7a],0x43
  41cd00:	loope  0x41ccbf
  41cd02:	aas    
  41cd03:	in     al,dx
  41cd04:	test   DWORD PTR [ebx+edx*4+0x17],eax
  41cd08:	shl    DWORD PTR [esi+0x66304ae7],0x92
  41cd0f:	dec    esp
  41cd10:	imul   ebp,DWORD PTR [edi+0x58],0x2c125fad
  41cd17:	aaa    
  41cd18:	mov    ecx,0x1a099692
  41cd1d:	pop    ecx
  41cd1e:	repz arpl WORD PTR [edi],si
  41cd21:	fdivr  st(3),st
  41cd23:	in     al,0x96
  41cd25:	mov    dh,0x9e
  41cd27:	push   es
  41cd28:	js     0x41cd28
  41cd2a:	lea    edi,ds:0x2a8c5f11
  41cd30:	push   ebx
  41cd31:	sahf   
  41cd32:	repz cmp dl,BYTE PTR [edx]
  41cd35:	in     al,dx
  41cd36:	ret    0x4f74
  41cd39:	mov    BYTE PTR [edi+0x28],0x69
  41cd3d:	adc    eax,esp
  41cd3f:	jne    0x41cd08
  41cd41:	das    
  41cd42:	lods   al,BYTE PTR ds:[esi]
  41cd43:	adc    al,0xf4
  41cd45:	and    eax,0xb4d4a701
  41cd4a:	dec    ebp
  41cd4b:	bound  edx,QWORD PTR [esi+0x333cc25c]
  41cd51:	mov    WORD PTR [edx-0x5b],es
  41cd54:	in     al,0x21
  41cd56:	mov    bh,BYTE PTR ds:0xd2279a96
  41cd5c:	cld    
  41cd5d:	shr    BYTE PTR [edx+0x33],1
  41cd60:	xor    ecx,esi
  41cd62:	loop   0x41cd45
  41cd64:	cwde   
  41cd65:	add    ebx,DWORD PTR [esp+esi*2+0x67]
  41cd69:	std    
  41cd6a:	mov    ds,WORD PTR [esi]
  41cd6c:	popf   
  41cd6d:	adc    DWORD PTR [edx+0x5a4cd05b],0xffffffbc
  41cd74:	aam    0xa2
  41cd76:	pop    ecx
  41cd77:	mov    ebp,0x61a2db51
  41cd7c:	shl    BYTE PTR [esi],cl
  41cd7e:	or     BYTE PTR [edx+0x31],ah
  41cd81:	shr    esi,cl
  41cd83:	int    0xc6
  41cd85:	imul   ecx,esp,0x6a
  41cd88:	addr16 jle 0x41cdc6
  41cd8b:	xor    al,0x1c
  41cd8d:	cdq    
  41cd8e:	xor    bh,bl
  41cd90:	add    al,0x1a
  41cd92:	push   ds
  41cd93:	ins    BYTE PTR es:[edi],dx
  41cd94:	aas    
  41cd95:	repnz jecxz 0x41cd56
  41cd98:	imul   esi,DWORD PTR [edi-0x26],0x8cccaf12
  41cd9f:	push   edi
  41cda0:	sbb    DWORD PTR [esp+edi*1],edi
  41cda3:	je     0x41cdec
  41cda5:	mov    al,0x70
  41cda7:	jne    0x41cdba
  41cda9:	xchg   edi,eax
  41cdaa:	xor    ch,BYTE PTR [ebp-0x6f1c012]
  41cdb0:	pushf  
  41cdb1:	shl    BYTE PTR [ebp+0x414d3c20],0x45
  41cdb8:	sbb    dl,BYTE PTR [ebp+0x16]
  41cdbb:	js     0x41cde7
  41cdbd:	push   edi
  41cdbe:	(bad)  
  41cdc0:	or     eax,0x939cf732
  41cdc5:	mov    dl,0x82
  41cdc7:	scas   al,BYTE PTR es:[edi]
  41cdc8:	inc    ebp
  41cdc9:	mov    ecx,0x20597aea
  41cdce:	dec    edi
  41cdcf:	out    0x9e,al
  41cdd1:	lahf   
  41cdd2:	mov    al,ds:0x6a6e5a2c
  41cdd7:	scas   al,BYTE PTR es:[edi]
  41cdd8:	lods   eax,DWORD PTR ds:[esi]
  41cdd9:	jns    0x41cd96
  41cddb:	es inc edi
  41cddd:	add    BYTE PTR [ebp-0x6b6da3d3],dh
  41cde3:	pushf  
  41cde4:	add    ah,al
  41cde6:	arpl   WORD PTR [ebx],si
  41cde8:	rol    al,0xc0
  41cdeb:	rol    al,0xc0
  41cdee:	rol    al,0xc0
  41cdf1:	rol    al,0xc0
  41cdf4:	rol    al,0xc0
  41cdf7:	rol    al,0xc0
  41cdfa:	rol    al,0xc0
  41cdfd:	rol    al,0xc0
  41ce00:	rol    al,0xc0
  41ce03:	rol    al,0xc0
  41ce06:	rol    al,0x47
  41ce09:	enter  0x41a1,0xbf
  41ce0d:	pop    esp
  41ce0e:	push   ss
  41ce0f:	loope  0x41ce76
  41ce11:	in     al,dx
  41ce12:	(bad)  
  41ce13:	push   edi
  41ce14:	test   BYTE PTR [eax+0x7d81eb61],ch
  41ce1a:	and    DWORD PTR [edx+edi*8-0x66549684],ebp
  41ce21:	leave  
  41ce22:	pushf  
  41ce23:	or     DWORD PTR [esi],eax
  41ce25:	dec    esp
  41ce26:	loop   0x41ce96
  41ce28:	sbb    al,0x4f
  41ce2a:	and    al,0x4b
  41ce2c:	jp     0x41cdbc
  41ce2e:	and    al,0x40
  41ce30:	(bad)  
  41ce31:	pusha  
  41ce32:	mov    edi,0xa8215b02
  41ce37:	pop    es
  41ce38:	jnp    0x41ce33
  41ce3a:	imul   DWORD PTR [esi+0x12]
  41ce3d:	cmp    al,0x16
  41ce3f:	sar    eax,0xfc
  41ce42:	mov    DWORD PTR ds:0x77938e23,0x5ed7c9e1
  41ce4c:	jl     0x41ce66
  41ce4e:	mov    ds:0xb4964cb1,al
  41ce53:	ins    BYTE PTR es:[edi],dx
  41ce54:	jp     0x41ce94
  41ce56:	movhps xmm7,QWORD PTR [edx-0x6c]
  41ce5a:	rcr    BYTE PTR [eax],0xfc
  41ce5d:	adc    eax,0x971b0230
  41ce62:	in     eax,0x90
  41ce64:	imul   DWORD PTR [ecx]
  41ce66:	rcr    DWORD PTR [esi-0x5529370f],1
  41ce6c:	adc    edi,ecx
  41ce6e:	mov    eax,ds:0x94a31375
  41ce73:	pop    edx
  41ce74:	cvtps2pd xmm5,xmm6
  41ce77:	cli    
  41ce78:	xchg   esi,eax
  41ce79:	mov    ch,0x95
  41ce7b:	ins    BYTE PTR es:[edi],dx
  41ce7c:	mov    edx,0xdd8a75e3
  41ce81:	pop    esi
  41ce82:	push   0x16
  41ce84:	repnz push esi
  41ce86:	into   
  41ce87:	je     0x41ce8a
  41ce89:	push   esp
  41ce8a:	pop    ss
  41ce8b:	push   ecx
  41ce8c:	ins    BYTE PTR es:[edi],dx
  41ce8d:	and    ecx,ebx
  41ce8f:	(bad)  
  41ce91:	bound  esi,QWORD PTR [esi]
  41ce93:	add    al,0x53
  41ce95:	ret    0x9493
  41ce98:	sub    esi,DWORD PTR [esp+esi*8]
  41ce9b:	js     0x41ce53
  41ce9d:	test   al,0x6e
  41ce9f:	jae    0x41ceb7
  41cea1:	dec    ecx
  41cea2:	cld    
  41cea3:	push   ebx
  41cea4:	jo     0x41cedd
  41cea6:	pop    esi
  41cea7:	or     esi,DWORD PTR [edx]
  41cea9:	xor    eax,0xb8df2d32
  41ceae:	nop
  41ceaf:	jo     0x41ce8a
  41ceb1:	xchg   BYTE PTR [edx+0x41],ah
  41ceb4:	push   eax
  41ceb5:	add    eax,0xad209bcb
  41ceba:	fsub   st,st(2)
  41cebc:	cld    
  41cebd:	push   ds
  41cebe:	aaa    
  41cebf:	xchg   BYTE PTR [edx+0x61],ah
  41cec2:	xlat   BYTE PTR ds:[ebx]
  41cec3:	fidivr DWORD PTR [ecx]
  41cec5:	mov    fs:0xdc83e612,eax
  41cecb:	push   cs
  41cecc:	fs sub bh,ch
  41cecf:	jnp    0x41cf2c
  41ced1:	mov    bl,BYTE PTR [edi+0x6d]
  41ced4:	jge    0x41cebe
  41ced6:	and    al,0xe
  41ced8:	sub    al,0xc8
  41ceda:	iret   
  41cedb:	pop    edi
  41cedc:	push   esp
  41cedd:	xchg   ecx,eax
  41cede:	add    BYTE PTR [ebx],bl
  41cee0:	sub    eax,0xd8bbf48a
  41cee5:	dec    ebx
  41cee6:	int3   
  41cee7:	nop
  41cee8:	bound  ecx,QWORD PTR ds:0x9873703b
  41ceee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceef:	cmp    DWORD PTR [edx-0x56],ecx
  41cef2:	fadd   DWORD PTR [edx]
  41cef4:	sbb    eax,0x5adcac95
  41cef9:	mov    al,al
  41cefb:	push   esi
  41cefc:	call   0x4e7e:0x639efeb3
  41cf03:	mov    bh,BYTE PTR [ebx+0x3482bc9]
  41cf09:	mov    eax,0xbecad0cc
  41cf0e:	sub    DWORD PTR [edi],esi
  41cf10:	add    dh,bh
  41cf12:	repz pop ebx
  41cf14:	mov    esi,0x29129ef9
  41cf19:	enter  0xc2ca,0x7f
  41cf1d:	mov    eax,ds:0x7c0555f6
  41cf22:	in     eax,dx
  41cf23:	and    ah,BYTE PTR [edx+0x5f]
  41cf26:	xchg   esp,eax
  41cf27:	jne    0x41cf5d
  41cf29:	dec    edi
  41cf2a:	dec    esi
  41cf2b:	mov    al,0x7f
  41cf2d:	push   ecx
  41cf2e:	push   ds
  41cf2f:	jbe    0x41cf61
  41cf31:	fmul   st(0),st
  41cf33:	mov    esi,0xba1cc370
  41cf38:	dec    ebp
  41cf39:	int3   
  41cf3a:	dec    ebp
  41cf3b:	(bad)  
  41cf3c:	jo     0x41cf83
  41cf3e:	out    dx,eax
  41cf3f:	jne    0x41cf30
  41cf41:	(bad)  
  41cf42:	jp     0x41cf84
  41cf44:	aam    0xa6
  41cf46:	push   0xd7895f1f
  41cf4b:	push   0x18
  41cf4d:	push   cs
  41cf4e:	push   DWORD PTR [ebx+0x17]
  41cf51:	loop   0x41cef5
  41cf53:	inc    edi
  41cf54:	sbb    bl,BYTE PTR [ecx-0x68a78d05]
  41cf5a:	pop    edi
  41cf5b:	not    DWORD PTR [edi-0x59f06dbc]
  41cf61:	dec    edx
  41cf62:	pextrw eax,mm6,0xf4
  41cf66:	cmp    esi,DWORD PTR ds:0x66f7ae30
  41cf6c:	bound  esi,QWORD PTR [edi]
  41cf6e:	push   esi
  41cf6f:	pop    ds
  41cf70:	mov    ebx,0x45c1b823
  41cf75:	fnstsw WORD PTR [edx+esi*4]
  41cf78:	out    0xe4,eax
  41cf7a:	out    dx,eax
  41cf7b:	push   cs
  41cf7c:	xchg   esp,eax
  41cf7d:	jle    0x41cf47
  41cf7f:	in     al,dx
  41cf80:	sub    bh,BYTE PTR [eax]
  41cf82:	mov    ch,0x5e
  41cf84:	dec    edx
  41cf85:	add    al,0x8f
  41cf87:	cmp    bl,dl
  41cf89:	test   BYTE PTR [edi-0x6e],0x7f
  41cf8d:	setb   BYTE PTR [ebp+0x5]
  41cf91:	dec    ecx
  41cf92:	cs add BYTE PTR ds:[edi-0x18],cl
  41cf97:	aam    0x89
  41cf99:	xchg   ecx,eax
  41cf9a:	shl    BYTE PTR [ecx-0x12344ee7],1
  41cfa0:	adc    al,0x5e
  41cfa2:	imul   edi,DWORD PTR [ebp+0x12],0xffffffb5
  41cfa6:	pop    es
  41cfa7:	fisubr WORD PTR [eax+0x42502caa]
  41cfad:	dec    ebp
  41cfae:	cmp    eax,0xcecd793b
  41cfb3:	or     al,0x40
  41cfb5:	jae    0x41cfa0
  41cfb7:	xlat   BYTE PTR ds:[ebx]
  41cfb8:	cmp    DWORD PTR [edx+0x405fe837],0x30260eb4
  41cfc2:	add    al,BYTE PTR [ebp+0x3d]
  41cfc5:	xchg   edi,eax
  41cfc6:	cdq    
  41cfc7:	es cmp DWORD PTR es:[edi+esi*8+0x60],0x57
  41cfce:	out    dx,al
  41cfcf:	inc    ebp
  41cfd0:	jge    0x41d008
  41cfd2:	in     al,0x1f
  41cfd4:	aad    0x54
  41cfd6:	pushf  
  41cfd7:	cdq    
  41cfd8:	jl     0x41cfa1
  41cfda:	xchg   edx,eax
  41cfdb:	sbb    eax,0x15b92dd8
  41cfe0:	icebp  
  41cfe1:	sbb    eax,0xbe60e17
  41cfe6:	push   ecx
  41cfe7:	lods   al,BYTE PTR ds:[esi]
  41cfe8:	imul   ebp,DWORD PTR [edx+0x25e97cb3],0x8e34dece
  41cff2:	je     0x41cf7e
  41cff4:	in     al,dx
  41cff5:	add    cl,BYTE PTR [ebp+0x66]
  41cff8:	xchg   BYTE PTR [edi+0xbd4b39b],al
  41cffe:	stos   DWORD PTR es:[edi],eax
  41cfff:	and    eax,0x4269cc9a
  41d004:	push   edi
  41d005:	push   ds
  41d006:	scas   al,BYTE PTR es:[edi]
  41d007:	arpl   WORD PTR [ebp+0x1c],cx
  41d00a:	iret   
  41d00b:	or     al,0x16
  41d00d:	mov    eax,0x6a214cc8
  41d012:	mov    al,0x5a
  41d014:	xchg   ebp,eax
  41d015:	adc    ah,BYTE PTR [esi]
  41d017:	add    al,0x19
  41d019:	or     DWORD PTR [edx],0x7c
  41d01c:	sbb    bh,BYTE PTR [ebp+0x1f]
  41d01f:	cmp    eax,0x9ed28665
  41d024:	mov    ecx,0x2f15618c
  41d029:	leave  
  41d02a:	ja     0x41d031
  41d02c:	push   0x44
  41d02e:	test   al,0x13
  41d030:	(bad)  
  41d031:	xor    BYTE PTR [ebx+0x6e],bh
  41d034:	rcl    DWORD PTR [eax],1
  41d036:	iret   
  41d037:	aam    0x26
  41d039:	js     0x41d093
  41d03b:	sbb    eax,0x71795448
  41d040:	cmp    eax,0x4278158f
  41d045:	jecxz  0x41d070
  41d047:	mov    eax,ds:0x1de7561
  41d04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04d:	scas   al,BYTE PTR es:[edi]
  41d04e:	jecxz  0x41d0c8
  41d050:	das    
  41d051:	dec    ebx
  41d052:	rcr    DWORD PTR [eax],0x7e
  41d055:	add    dl,BYTE PTR [edx+0x77]
  41d058:	std    
  41d059:	repnz pop esi
  41d05b:	and    DWORD PTR [edx],esp
  41d05d:	add    al,0x1f
  41d05f:	pop    es
  41d060:	jne    0x41d026
  41d062:	into   
  41d063:	loopne 0x41cffd
  41d065:	das    
  41d066:	in     eax,dx
  41d067:	push   ecx
  41d068:	aad    0x40
  41d06a:	lods   eax,DWORD PTR ds:[esi]
  41d06b:	push   eax
  41d06c:	outs   dx,DWORD PTR ds:[esi]
  41d06d:	outs   dx,BYTE PTR ds:[esi]
  41d06e:	mov    dh,0x51
  41d070:	jb     0x41d03d
  41d072:	adc    eax,0x30fa7df9
  41d077:	in     al,0x77
  41d079:	inc    esi
  41d07a:	mov    ?,WORD PTR [edx]
  41d07c:	pushf  
  41d07d:	or     al,0xcf
  41d07f:	sub    BYTE PTR [esi],dh
  41d081:	sahf   
  41d082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d083:	and    esi,DWORD PTR [ebx+0x78]
  41d086:	push   ebp
  41d087:	bnd jmp 0x360061fb
  41d08d:	fdivr  DWORD PTR [esi+eiz*8-0x68af0a6]
  41d094:	sbb    ebp,esp
  41d096:	jns    0x41d098
  41d098:	jl     0x41d06c
  41d09a:	retf   
  41d09b:	jecxz  0x41d079
  41d09d:	cmp    edi,DWORD PTR [edi]
  41d09f:	ja     0x41d040
  41d0a1:	push   esp
  41d0a2:	fiadd  DWORD PTR [edi]
  41d0a4:	jbe    0x41d046
  41d0a6:	(bad)  
  41d0a7:	jg     0x41d0b4
  41d0a9:	jg     0x41d0a5
  41d0ab:	test   dh,ch
  41d0ad:	xor    esi,esp
  41d0af:	adc    eax,0x23bfe803
  41d0b4:	pop    ebx
  41d0b5:	(bad)  
  41d0b6:	jmp    0x41d064
  41d0b8:	dec    ebp
  41d0b9:	jle    0x41d08b
  41d0bb:	and    eax,DWORD PTR [ebx-0x3c]
  41d0be:	push   edx
  41d0bf:	mov    ds:0x4ed91be1,al
  41d0c4:	call   0xf801e691
  41d0c9:	mov    eax,0x81719fc5
  41d0ce:	jl     0x41d12b
  41d0d0:	pop    ebp
  41d0d1:	sbb    eax,DWORD PTR [esi+0x14f292f7]
  41d0d7:	rcl    esi,0xa4
  41d0da:	in     al,0xf0
  41d0dc:	repnz add al,0xf8
  41d0df:	imul   ecx,DWORD PTR [esi-0x6d],0xffffffe5
  41d0e3:	ins    DWORD PTR es:[edi],dx
  41d0e4:	outs   dx,BYTE PTR ds:[esi]
  41d0e5:	sti    
  41d0e6:	jae    0x41d0b5
  41d0e8:	xchg   DWORD PTR [ebp-0x56],edi
  41d0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ec:	dec    ebp
  41d0ed:	mov    al,ds:0x9464f54e
  41d0f2:	sbb    ah,BYTE PTR [edi+0x22cf8f77]
  41d0f8:	jno    0x41d0f8
  41d0fa:	jne    0x41d0fc
  41d0fc:	popf   
  41d0fd:	push   ds
  41d0fe:	mov    eax,0xea52a2d3
  41d103:	or     ebp,DWORD PTR [esi+0x61]
  41d106:	popf   
  41d107:	out    0xb5,eax
  41d109:	sub    ch,BYTE PTR [esi-0x3a56de51]
  41d10f:	lods   al,BYTE PTR ds:[esi]
  41d110:	jo     0x41d15e
  41d112:	xlat   BYTE PTR ds:[ebx]
  41d113:	inc    ecx
  41d114:	or     al,0xf
  41d116:	jp     0x41d0bf
  41d118:	mov    al,0xe4
  41d11a:	mov    ah,0x60
  41d11c:	dec    edx
  41d11d:	pushf  
  41d11e:	and    ah,BYTE PTR [edi]
  41d120:	lock movsx eax,WORD PTR [esi+0x34]
  41d125:	hlt    
  41d126:	pop    es
  41d127:	xlat   BYTE PTR ds:[ebx]
  41d128:	daa    
  41d129:	in     eax,dx
  41d12a:	xor    eax,DWORD PTR [ebx-0x3c]
  41d12d:	leave  
  41d12e:	lea    ecx,[ebx-0x72]
  41d131:	pop    esi
  41d132:	sub    eax,0xac2d5fcd
  41d137:	je     0x41d0c6
  41d139:	jns    0x41d0df
  41d13b:	pop    edx
  41d13c:	out    0x0,eax
  41d13e:	in     al,dx
  41d13f:	ja     0x41d161
  41d141:	(bad)  
  41d142:	mov    ds:0xec6694ec,al
  41d147:	enter  0xd330,0xe0
  41d14b:	add    ch,BYTE PTR [ebp+0x4e]
  41d14e:	cmp    ch,BYTE PTR [ebx]
  41d150:	jle    0x41d0e5
  41d152:	pop    ebp
  41d153:	or     BYTE PTR [edx+0x3a],0x1e
  41d157:	xchg   ecx,eax
  41d158:	sti    
  41d159:	ins    BYTE PTR es:[edi],dx
  41d15a:	xchg   ch,ah
  41d15c:	aad    0xf1
  41d15e:	jae    0x41d1bd
  41d160:	jnp    0x41d16b
  41d162:	mov    eax,0x608bd3be
  41d167:	add    eax,0x7db77e64
  41d16c:	pop    esi
  41d16d:	cmp    DWORD PTR [edx+edi*4+0x1],ecx
  41d171:	mov    esp,0x3aa9abc4
  41d176:	(bad)  
  41d177:	pop    ecx
  41d178:	push   ecx
  41d179:	cdq    
  41d17a:	(bad)  
  41d17b:	iret   
  41d17c:	stos   BYTE PTR es:[edi],al
  41d17d:	in     al,dx
  41d17e:	hlt    
  41d17f:	fimul  DWORD PTR [ebx-0x64e56eae]
  41d185:	inc    ecx
  41d186:	in     eax,dx
  41d187:	outs   dx,BYTE PTR ds:[esi]
  41d188:	loope  0x41d125
  41d18a:	pop    ds
  41d18b:	lahf   
  41d18c:	mov    ebp,0xfb7aac92
  41d191:	out    dx,eax
  41d192:	adc    ch,BYTE PTR [edi]
  41d194:	inc    eax
  41d195:	cmc    
  41d196:	inc    ebp
  41d197:	jae    0x41d18f
  41d199:	and    BYTE PTR [ebp+0x28],bh
  41d19c:	inc    edx
  41d19d:	pop    ds
  41d19e:	xor    cl,dh
  41d1a0:	cld    
  41d1a1:	mov    ds:0x7ee727b8,al
  41d1a6:	lods   eax,DWORD PTR ds:[esi]
  41d1a7:	scas   al,BYTE PTR es:[edi]
  41d1a8:	push   cs
  41d1a9:	test   cl,bh
  41d1ab:	pop    edi
  41d1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ad:	cmp    BYTE PTR [ebx-0x69c65e55],bl
  41d1b3:	test   DWORD PTR [ebx+ebp*1-0x396d2f03],edx
  41d1ba:	fs push ecx
  41d1bc:	rol    DWORD PTR [edi-0x5e2758d6],0x68
  41d1c3:	inc    eax
  41d1c4:	pusha  
  41d1c5:	sti    
  41d1c6:	repnz sbb DWORD PTR ds:0x5e18,esp
  41d1cc:	in     al,0x76
  41d1ce:	adc    eax,0x8904ad20
  41d1d4:	push   eax
  41d1d5:	ja     0x41d16b
  41d1d7:	scas   eax,DWORD PTR es:[edi]
  41d1d8:	lahf   
  41d1d9:	sbb    eax,0xf15a6e8e
  41d1de:	mov    dl,0x57
  41d1e0:	rol    esp,1
  41d1e2:	jmp    0xe762af17
  41d1e7:	fnstenv [edx]
  41d1e9:	mov    ebp,0xa46924ea
  41d1ee:	mov    dh,0x91
  41d1f0:	ja     0x41d259
  41d1f2:	clc    
  41d1f3:	sub    al,0x2e
  41d1f5:	pop    ecx
  41d1f6:	push   ss
  41d1f7:	scas   eax,DWORD PTR es:[edi]
  41d1f8:	xor    ebp,ecx
  41d1fa:	mov    dh,0xf7
  41d1fc:	mov    al,ds:0xec6c44c2
  41d201:	mov    DWORD PTR [eax],edx
  41d203:	movups xmm1,XMMWORD PTR [ecx]
  41d206:	inc    edx
  41d207:	sbb    eax,0x70d61df7
  41d20c:	dec    ebx
  41d20d:	inc    eax
  41d20e:	push   ecx
  41d20f:	scas   al,BYTE PTR es:[edi]
  41d210:	ds lock data16 sbb ah,al
  41d215:	inc    eax
  41d216:	jmp    0x7634:0x4af30723
  41d21d:	jnp    0x41d1de
  41d21f:	(bad)  
  41d221:	and    DWORD PTR [ecx-0x50],0xb5da684d
  41d228:	test   eax,0x3028ae9c
  41d22d:	daa    
  41d22e:	aaa    
  41d22f:	fs jae 0x41d22f
  41d232:	jbe    0x41d27d
  41d234:	inc    esp
  41d235:	sub    ebx,DWORD PTR [esi+0x58da6197]
  41d23b:	cmp    ah,BYTE PTR [eax-0x3e]
  41d23e:	stos   BYTE PTR es:[edi],al
  41d23f:	pop    ss
  41d240:	mov    edi,0x2bcb9fe5
  41d245:	shl    BYTE PTR [ecx],0x29
  41d248:	mov    bh,0xda
  41d24a:	cmp    eax,0xf3a0d8c
  41d24f:	jno    0x41d24c
  41d251:	push   cs
  41d252:	(bad)  
  41d253:	enter  0xebc,0xfb
  41d257:	lock sbb edx,edi
  41d25a:	shr    BYTE PTR [edx+ecx*4],0x6c
  41d25e:	cmp    DWORD PTR [ecx-0x7d],0xb0147476
  41d265:	or     eax,0xb141e175
  41d26a:	popf   
  41d26b:	jno    0x41d2e7
  41d26d:	retf   0x7db9
  41d270:	jae    0x41d268
  41d272:	dec    esi
  41d273:	adc    eax,DWORD PTR [ecx+ecx*4-0x7f4cdca8]
  41d27a:	jbe    0x41d210
  41d27c:	aaa    
  41d27d:	cmp    edi,DWORD PTR [esi+esi*2+0x2aa98073]
  41d284:	inc    esi
  41d285:	test   eax,0x1e7235bd
  41d28a:	xchg   ecx,eax
  41d28b:	fwait
  41d28c:	add    al,0x47
  41d28e:	cmp    eax,0x8e657dd0
  41d293:	mov    ebx,0x4bee25ea
  41d298:	xor    al,0xf4
  41d29a:	xchg   esp,eax
  41d29b:	cs pop edi
  41d29d:	mov    ah,0xf9
  41d29f:	iret   
  41d2a0:	or     al,dl
  41d2a2:	retf   
  41d2a3:	pop    esi
  41d2a4:	fstp   TBYTE PTR [esi]
  41d2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2a7:	repz aaa 
  41d2a9:	jns    0x41d238
  41d2ab:	out    0xad,eax
  41d2ad:	ds dec edi
  41d2af:	cwde   
  41d2b0:	mov    DWORD PTR [ebx+0xc],esp
  41d2b3:	add    eax,0x15cd4624
  41d2b8:	sub    al,0x9f
  41d2ba:	jl     0x41d31a
  41d2bc:	add    DWORD PTR [edx+0x18],edx
  41d2bf:	pop    ebx
  41d2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c1:	xchg   BYTE PTR [esi+0x136222c],ah
  41d2c7:	bound  esi,QWORD PTR [esi-0x3e]
  41d2ca:	dec    ebp
  41d2cb:	in     al,dx
  41d2cc:	out    dx,al
  41d2cd:	popa   
  41d2ce:	mov    ebp,0x641449a1
  41d2d3:	push   0x52
  41d2d5:	adc    eax,0x898d4cfe
  41d2da:	int    0xf3
  41d2dc:	mov    esp,0x6a07ad3b
  41d2e1:	mov    ?,WORD PTR [edi-0x1319a0c4]
  41d2e7:	jne    0x41d2d0
  41d2e9:	fwait
  41d2ea:	lahf   
  41d2eb:	xor    bh,BYTE PTR [edi+0x3f816022]
  41d2f1:	loop   0x41d2b1
  41d2f3:	jecxz  0x41d345
  41d2f5:	mov    ds,WORD PTR [esi]
  41d2f7:	dec    ebp
  41d2f8:	xchg   edx,eax
  41d2f9:	mov    ch,0x9e
  41d2fb:	pop    ds
  41d2fc:	push   esp
  41d2fd:	jg     0x41d2e3
  41d2ff:	mov    bl,0x36
  41d301:	in     eax,dx
  41d302:	cmp    ebp,DWORD PTR [edi]
  41d304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d305:	hlt    
  41d306:	mov    esi,0x80d3272c
  41d30b:	retf   0xaa05
  41d30e:	xchg   esi,eax
  41d30f:	test   BYTE PTR [eax],ah
  41d311:	fisttp WORD PTR [edx]
  41d313:	push   ss
  41d314:	cmc    
  41d315:	xor    eax,0xebd3e413
  41d31a:	scas   al,BYTE PTR es:[edi]
  41d31b:	test   BYTE PTR [eax-0x7c],dl
  41d31e:	inc    ebp
  41d31f:	shr    DWORD PTR [ecx-0x66],0x81
  41d323:	int    0xd6
  41d325:	mov    ebp,0xcdd11540
  41d32a:	pop    ss
  41d32b:	xchg   esp,eax
  41d32c:	int3   
  41d32d:	aaa    
  41d32e:	out    dx,eax
  41d32f:	xlat   BYTE PTR ds:[ebx]
  41d330:	dec    edx
  41d331:	cmc    
  41d332:	sti    
  41d333:	repz retf 0x4dc3
  41d337:	and    DWORD PTR [ecx-0x74],ebx
  41d33a:	std    
  41d33b:	retf   0x749a
  41d33e:	fdiv   DWORD PTR [ecx+0x33]
  41d341:	in     al,0xdd
  41d343:	call   0xe065:0xada71956
  41d34a:	push   ds
  41d34b:	repnz pop ebx
  41d34d:	cmp    esi,ecx
  41d34f:	sub    BYTE PTR [ebx-0x2c],bh
  41d352:	xor    DWORD PTR [eax],esp
  41d354:	dec    eax
  41d355:	sub    ch,BYTE PTR [edx]
  41d357:	and    dh,BYTE PTR [edi+edx*8-0x15]
  41d35b:	push   cs
  41d35c:	pop    ss
  41d35d:	retf   0xd7a4
  41d360:	or     eax,0x9723ba3d
  41d365:	dec    edx
  41d366:	test   eax,0xac68b1e
  41d36b:	cld    
  41d36c:	adc    DWORD PTR cs:[edx+0x75],esi
  41d370:	inc    eax
  41d371:	sbb    BYTE PTR [esi-0x3cbce1f4],0xc2
  41d378:	dec    edx
  41d379:	sub    eax,ebp
  41d37b:	arpl   WORD PTR [edx-0x6d],bx
  41d37e:	mov    bl,0xfc
  41d380:	jo     0x41d371
  41d382:	jbe    0x41d37d
  41d384:	lods   al,BYTE PTR ds:[esi]
  41d385:	inc    ebx
  41d386:	dec    eax
  41d387:	inc    esi
  41d388:	pop    eax
  41d389:	cwde   
  41d38a:	cs aad 0x77
  41d38d:	cld    
  41d38e:	mov    edi,0x807e18b7
  41d393:	pop    es
  41d394:	loope  0x41d3b4
  41d396:	scas   al,BYTE PTR es:[edi]
  41d397:	push   eax
  41d398:	repnz cwde 
  41d39a:	jmp    0x41d328
  41d39c:	mov    ds:0x1e9e4403,eax
  41d3a1:	cmp    al,0x8f
  41d3a3:	sbb    al,0x19
  41d3a5:	adc    ah,BYTE PTR [esi-0x2b15da1a]
  41d3ab:	mov    ebp,DWORD PTR [eax-0x5acb93fd]
  41d3b1:	stc    
  41d3b2:	fs js  0x41d3cb
  41d3b5:	out    dx,al
  41d3b6:	in     al,0x1c
  41d3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b9:	out    dx,eax
  41d3ba:	call   0x37439cc6
  41d3bf:	push   esi
  41d3c0:	pushf  
  41d3c1:	cwde   
  41d3c2:	sti    
  41d3c3:	loopne 0x41d3d8
  41d3c5:	ja     0x41d360
  41d3c7:	sub    eax,0xa75d9962
  41d3cc:	into   
  41d3cd:	lods   al,BYTE PTR ds:[esi]
  41d3ce:	xor    BYTE PTR [edi+0x67],bh
  41d3d1:	inc    ebp
  41d3d2:	pop    ss
  41d3d3:	pop    edi
  41d3d4:	mov    ds:0x6b815d02,eax
  41d3d9:	repz pop esi
  41d3db:	fst    QWORD PTR [edx]
  41d3dd:	js     0x41d412
  41d3df:	xchg   esi,eax
  41d3e0:	pop    edx
  41d3e1:	xor    DWORD PTR [esi],esp
  41d3e3:	dec    esi
  41d3e4:	fcom   QWORD PTR [edx+ecx*2]
  41d3e7:	fmul   QWORD PTR [ecx]
  41d3e9:	out    dx,al
  41d3ea:	jmp    0x709e0160
  41d3ef:	pop    es
  41d3f0:	or     DWORD PTR [eax],ebx
  41d3f2:	fst    DWORD PTR [eax-0x7e]
  41d3f5:	arpl   WORD PTR [ecx+0x58],di
  41d3f8:	jae    0x41d3ce
  41d3fa:	mov    al,0x85
  41d3fc:	add    eax,0x6a869da
  41d401:	fcmovu st,st(5)
  41d403:	sar    BYTE PTR [ebp-0x11c065ee],cl
  41d409:	mov    ds:0xc96acf9b,al
  41d40e:	adc    edi,edx
  41d410:	mov    edi,0x5b4a212b
  41d415:	inc    edx
  41d416:	mov    edi,0xbb12f6ee
  41d41b:	add    BYTE PTR [edi+0x7160d8b9],al
  41d421:	push   ebp
  41d422:	push   esi
  41d423:	pop    es
  41d424:	push   es
  41d425:	mov    ah,0x5f
  41d427:	fnstsw WORD PTR [edi+0x47]
  41d42a:	popf   
  41d42b:	leave  
  41d42c:	inc    ebp
  41d42d:	mov    esi,0x35373856
  41d432:	out    dx,al
  41d433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d434:	outs   dx,DWORD PTR ds:[esi]
  41d435:	jne    0x41d3d5
  41d437:	out    dx,eax
  41d438:	xor    dl,ah
  41d43a:	push   cs
  41d43b:	dec    ecx
  41d43c:	cmc    
  41d43d:	mov    DWORD PTR [eax+0x17],esp
  41d440:	jmp    0xc7fd:0x18fbf2fa
  41d447:	jge    0x41d3ef
  41d449:	jb     0x41d49a
  41d44b:	mov    BYTE PTR [ecx-0x3],dl
  41d44e:	bound  esp,QWORD PTR [eax+eiz*4-0x4800b7c1]
  41d455:	pop    ds
  41d456:	xor    ecx,edi
  41d458:	and    al,0x7
  41d45a:	nop
  41d45b:	lahf   
  41d45c:	fcomp  QWORD PTR [esi]
  41d45e:	(bad)  
  41d45f:	add    BYTE PTR [esi*2-0x525077a2],dh
  41d466:	push   cs
  41d467:	sbb    dh,BYTE PTR [ebp+0x463c449e]
  41d46d:	add    ecx,DWORD PTR [esi]
  41d46f:	mov    ds:0xbca68e4a,al
  41d474:	adc    BYTE PTR [edx],ch
  41d476:	cmp    edi,esp
  41d478:	jmp    0xe29b9d85
  41d47d:	sub    BYTE PTR [eax-0x22],dh
  41d480:	ins    DWORD PTR es:[edi],dx
  41d481:	pop    ds
  41d482:	sbb    dh,bl
  41d484:	pop    edx
  41d485:	das    
  41d486:	jo     0x41d4c5
  41d488:	mov    eax,0x55fda758
  41d48d:	in     al,dx
  41d48e:	mov    esi,0x759e8024
  41d493:	and    BYTE PTR [eax+0x632a19f3],ch
  41d499:	mov    ch,0x68
  41d49b:	add    dh,BYTE PTR [ecx-0xe]
  41d49e:	aaa    
  41d49f:	push   ebx
  41d4a0:	pop    ebx
  41d4a1:	ror    BYTE PTR [esi+0x50],1
  41d4a4:	jae    0x41d51d
  41d4a6:	push   ebx
  41d4a7:	mov    al,ds:0xd622dbac
  41d4ac:	ficomp WORD PTR [ecx-0x43]
  41d4af:	mov    ebp,0xd669dc7a
  41d4b4:	mov    eax,ds:0x59b46302
  41d4b9:	pop    ebp
  41d4ba:	sahf   
  41d4bb:	add    BYTE PTR ds:0xaa156839,al
  41d4c1:	mov    BYTE PTR ds:0x440ed9a0,bl
  41d4c7:	jbe    0x41d47b
  41d4c9:	push   ebx
  41d4ca:	js     0x41d4fa
  41d4cc:	push   ebp
  41d4cd:	sti    
  41d4ce:	adc    bl,BYTE PTR fs:[ebx+0x4660f94e]
  41d4d5:	jp     0x41d54a
  41d4d7:	and    esp,edi
  41d4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4da:	pop    ss
  41d4db:	xchg   ebx,eax
  41d4dc:	push   esp
  41d4dd:	fwait
  41d4de:	in     eax,dx
  41d4df:	and    DWORD PTR [ebp-0x13],esi
  41d4e2:	mov    dl,0x85
  41d4e4:	daa    
  41d4e5:	mov    ecx,0x59f28d90
  41d4ea:	xchg   edx,eax
  41d4eb:	adc    BYTE PTR [eax-0x11c4651f],bl
  41d4f1:	push   esp
  41d4f2:	pushf  
  41d4f3:	sbb    BYTE PTR [esi-0x75],0x31
  41d4f7:	mov    dl,0x52
  41d4f9:	jmp    0x28b8dc73
  41d4fe:	add    eax,0x57fc5fb7
  41d503:	fcomp  DWORD PTR [esi+edx*4]
  41d506:	call   0x94e3:0x350f10c5
  41d50d:	ins    BYTE PTR es:[edi],dx
  41d50e:	mov    edx,0x85cb061e
  41d513:	arpl   WORD PTR [eax+eax*1+0x53523997],ax
  41d51a:	retf   0x865c
  41d51d:	pusha  
  41d51e:	aas    
  41d51f:	push   esp
  41d520:	xchg   esp,eax
  41d521:	jne    0x41d53f
  41d523:	(bad)  
  41d524:	or     eax,0xfafd23aa
  41d529:	sbb    al,0x5d
  41d52b:	cdq    
  41d52c:	mov    DWORD PTR [ecx],esi
  41d52e:	sub    al,0xe9
  41d530:	es jne 0x41d50a
  41d533:	stos   DWORD PTR es:[edi],eax
  41d534:	iret   
  41d535:	or     dh,dl
  41d537:	js     0x41d4bf
  41d539:	or     DWORD PTR [ecx+ebp*8+0x45],0x3710f887
  41d541:	xchg   edi,eax
  41d542:	jmp    0x8a451b52
  41d547:	scas   eax,DWORD PTR es:[edi]
  41d548:	jo     0x41d4e9
  41d54a:	rol    eax,0xea
  41d54d:	jne    0x41d5b6
  41d54f:	sub    edx,edi
  41d551:	pop    ds
  41d552:	mov    ch,0xce
  41d554:	imul   esi,DWORD PTR [edx-0x3dd19158],0x82478fe4
  41d55e:	mov    ds:0x1fc818a9,eax
  41d563:	outs   dx,DWORD PTR ds:[esi]
  41d564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d565:	js     0x41d5af
  41d567:	inc    esp
  41d568:	jge    0x41d4f4
  41d56a:	hlt    
  41d56b:	mov    BYTE PTR [esi],al
  41d56d:	xor    BYTE PTR [ecx+0x2e],bh
  41d570:	fwait
  41d571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d572:	mov    ah,0x9
  41d574:	cs fdivrp st(2),st
  41d577:	in     eax,0x3d
  41d579:	fst    QWORD PTR [ebp+eax*4+0x386da17]
  41d580:	not    ebp
  41d582:	or     BYTE PTR [edi+edx*4],0x9
  41d586:	dec    esp
  41d587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d588:	ins    BYTE PTR es:[edi],dx
  41d589:	cs ja  0x41d56f
  41d58c:	je     0x41d51c
  41d58e:	sahf   
  41d58f:	cwde   
  41d590:	dec    ebp
  41d591:	(bad)  [esi-0x551e893f]
  41d597:	arpl   si,bp
  41d599:	rcr    BYTE PTR [ebx],cl
  41d59b:	or     bh,bh
  41d59d:	dec    eax
  41d59e:	push   ecx
  41d59f:	loopne 0x41d5dc
  41d5a1:	repnz test BYTE PTR [esi+ebx*8+0x77221723],bl
  41d5a9:	push   ebx
  41d5aa:	into   
  41d5ab:	inc    eax
  41d5ac:	test   al,0xf0
  41d5ae:	frstpm(287 only) 
  41d5b0:	call   0xda6d:0xe9140fc0
  41d5b7:	and    BYTE PTR [ebx+0x58e3dd32],cl
  41d5bd:	sub    ebx,DWORD PTR [edx+0x4fc2edb8]
  41d5c3:	mov    eax,ds:0x229ad917
  41d5c8:	jns    0x41d647
  41d5ca:	xor    esi,DWORD PTR [ebx]
  41d5cc:	es loope 0x41d5ff
  41d5cf:	out    0x91,eax
  41d5d1:	fisubr DWORD PTR [ecx]
  41d5d3:	pop    ss
  41d5d4:	in     eax,0x2c
  41d5d6:	cmp    eax,0xc0c0c099
  41d5db:	rol    al,0xc0
  41d5de:	rol    al,0xc0
  41d5e1:	rol    al,0xc0
  41d5e4:	rol    al,0xc0
  41d5e7:	rol    al,0xc0
  41d5ea:	rol    al,0xc0
  41d5ed:	rol    al,0xc0
  41d5f0:	rol    al,0xc0
  41d5f3:	rol    al,0xc0
  41d5f6:	rol    al,0xc0
  41d5f9:	rol    al,0xc0
  41d5fc:	rol    al,0xc0
  41d5ff:	rol    al,0xc0
  41d602:	rol    al,0xc0
  41d605:	rol    al,0xc0
  41d608:	bound  esp,QWORD PTR [eax+edi*8-0x35]
  41d60c:	hlt    
  41d60d:	add    dh,ch
  41d60f:	pop    ds
  41d610:	call   0x5db0:0xf81ba9ba
  41d617:	pop    ebx
  41d618:	pop    esi
  41d619:	and    ch,BYTE PTR [edx+0x68]
  41d61c:	popf   
  41d61d:	add    ebp,DWORD PTR [eax-0x5daca939]
  41d623:	inc    ebx
  41d624:	push   ebp
  41d625:	loopne 0x41d69f
  41d627:	ins    DWORD PTR es:[edi],dx
  41d628:	scas   al,BYTE PTR es:[edi]
  41d629:	pop    ds
  41d62a:	mov    edi,0xe79cf391
  41d62f:	scas   al,BYTE PTR es:[edi]
  41d630:	push   es
  41d631:	or     esp,ecx
  41d633:	pop    ss
  41d634:	jmp    0x41d690
  41d636:	stos   DWORD PTR es:[edi],eax
  41d637:	ror    ah,1
  41d639:	repnz ins DWORD PTR es:[edi],dx
  41d63b:	stc    
  41d63c:	jl     0x41d5f4
  41d63e:	fld    QWORD PTR [ecx]
  41d640:	add    eax,0x14cb86af
  41d645:	jns    0x41d5fd
  41d647:	mov    bh,0x97
  41d649:	int3   
  41d64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d64b:	inc    ebp
  41d64c:	inc    esi
  41d64d:	sbb    DWORD PTR [edi],ebx
  41d64f:	mov    ecx,eax
  41d651:	mov    cl,0x6a
  41d653:	mov    al,0x78
  41d655:	or     al,0x91
  41d657:	fdiv   st(4),st
  41d659:	xchg   BYTE PTR [edi+0x51024834],bl
  41d65f:	ss addr16 fwait
  41d662:	xchg   BYTE PTR [ebx+0x7b52d9cc],bh
  41d668:	dec    ebx
  41d669:	aaa    
  41d66a:	add    eax,0x503c182a
  41d66f:	in     eax,dx
  41d670:	repz aad 0x76
  41d673:	pusha  
  41d674:	mov    al,ds:0x456df593
  41d679:	lds    ecx,FWORD PTR [eax+0x2c988697]
  41d67f:	sbb    al,0x79
  41d681:	out    0x65,eax
  41d683:	fwait
  41d684:	pop    eax
  41d685:	mov    al,0x5d
  41d687:	pop    ecx
  41d688:	push   0x57ee68ee
  41d68d:	shr    DWORD PTR [esi+0x35e51e56],cl
  41d693:	pusha  
  41d694:	aad    0x92
  41d696:	pushw  0xffc1
  41d699:	push   eax
  41d69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d69b:	push   ebp
  41d69c:	scas   al,BYTE PTR es:[edi]
  41d69d:	adc    BYTE PTR [ebp+0x41c903a5],dh
  41d6a3:	in     eax,dx
  41d6a4:	sub    DWORD PTR [edi-0x6c0d6751],edi
  41d6aa:	das    
  41d6ab:	inc    edx
  41d6ac:	out    0xf,eax
  41d6ae:	mov    dh,0xcc
  41d6b0:	fwait
  41d6b1:	in     al,dx
  41d6b2:	dec    ebx
  41d6b3:	add    al,0x21
  41d6b5:	jle    0x41d6a2
  41d6b7:	push   0x494f2c1b
  41d6bc:	inc    edx
  41d6bd:	inc    edx
  41d6be:	in     eax,dx
  41d6bf:	or     esp,DWORD PTR [eax-0x5da26b53]
  41d6c5:	xor    DWORD PTR [eax-0xe],edi
  41d6c8:	pusha  
  41d6c9:	popa   
  41d6ca:	int    0xf5
  41d6cc:	jp     0x41d6f8
  41d6ce:	inc    esp
  41d6cf:	popf   
  41d6d0:	jmp    0xcd07:0x872cecd7
  41d6d7:	mov    ch,0x65
  41d6d9:	push   ds
  41d6da:	dec    eax
  41d6db:	cld    
  41d6dc:	push   ss
  41d6dd:	hlt    
  41d6de:	pop    esi
  41d6df:	xchg   BYTE PTR [ebp+0x45],dl
  41d6e2:	xchg   DWORD PTR [ebx],ecx
  41d6e4:	cdq    
  41d6e5:	or     BYTE PTR [ebp+ebx*1-0x7edba4aa],bl
  41d6ec:	je     0x41d76d
  41d6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ef:	das    
  41d6f0:	test   DWORD PTR ds:0xd3bdf491,eax
  41d6f6:	xchg   esp,eax
  41d6f7:	sub    al,0x33
  41d6f9:	in     eax,0x8f
  41d6fb:	sbb    DWORD PTR [ebx+0x1b],edx
  41d6fe:	int3   
  41d6ff:	and    BYTE PTR [ebp+0x6d369c1d],cl
  41d705:	sar    BYTE PTR [edx-0x4ada0540],1
  41d70b:	lock mov ebp,0x4841b013
  41d711:	fucomp st(2)
  41d713:	sbb    bh,BYTE PTR [ebx]
  41d715:	(bad)  
  41d716:	push   0xf3071a64
  41d71b:	hlt    
  41d71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d71d:	and    cl,BYTE PTR [edi-0x24052ca6]
  41d723:	lock push esp
  41d725:	jmp    0xfdd6:0xba99d86b
  41d72c:	push   edx
  41d72d:	ret    0x2c86
  41d730:	add    al,0xd4
  41d732:	sbb    al,0x47
  41d734:	fisub  WORD PTR ds:[ebp-0x1b]
  41d738:	lea    edi,[edi+0x10e30dda]
  41d73e:	mul    BYTE PTR [ebx]
  41d740:	jg     0x41d799
  41d742:	addr16 push 0xffffffae
  41d745:	cmp    esp,DWORD PTR [edx-0x7b8d7aa0]
  41d74b:	cld    
  41d74c:	lea    ebp,[ebp+0x3713e845]
  41d752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d753:	xchg   ebx,eax
  41d754:	lods   eax,DWORD PTR ds:[esi]
  41d755:	cmp    eax,0x2f7a2a6e
  41d75a:	mov    al,ds:0x2faaede0
  41d75f:	shr    esi,1
  41d761:	adc    bh,0x5b
  41d764:	les    ebx,FWORD PTR [edx]
  41d766:	iret   
  41d767:	jne    0x41d7b5
  41d769:	cmp    BYTE PTR [ecx-0x61],ah
  41d76c:	mov    ebx,DWORD PTR [ebx]
  41d76e:	les    ebx,FWORD PTR [esi]
  41d770:	stos   DWORD PTR es:[edi],eax
  41d771:	mov    esi,0xd9f48ecc
  41d776:	push   ecx
  41d777:	fsub   QWORD PTR ds:0xdb070b3e
  41d77d:	push   ss
  41d77e:	xor    cl,BYTE PTR [edx+edi*2]
  41d781:	dec    esp
  41d782:	xchg   esi,eax
  41d783:	enter  0xe14c,0xaf
  41d787:	mov    edi,0xc0668e40
  41d78c:	dec    edi
  41d78d:	fidiv  DWORD PTR [edi-0x6c27ba12]
  41d793:	adc    al,0x9c
  41d795:	lods   al,BYTE PTR ds:[esi]
  41d796:	pop    ss
  41d797:	xchg   DWORD PTR [esi+0x5a2fac39],ebp
  41d79d:	jmp    0xdf7ffaf3
  41d7a2:	stos   DWORD PTR es:[edi],eax
  41d7a3:	loopne 0x41d77d
  41d7a5:	jge    0x41d75f
  41d7a7:	aas    
  41d7a8:	sbb    ebp,0xd2fc5059
  41d7ae:	mov    BYTE PTR [ecx+0x44797499],0xec
  41d7b5:	push   ecx
  41d7b6:	or     eax,0x15c66d7b
  41d7bb:	sub    BYTE PTR [eax],ah
  41d7bd:	add    dh,BYTE PTR [eax-0x779aeb3]
  41d7c3:	mov    ds:0x3cfd745d,al
  41d7c8:	nop
  41d7c9:	std    
  41d7ca:	sub    BYTE PTR [edx],0x65
  41d7cd:	ror    BYTE PTR [edx+0x76],cl
  41d7d0:	mov    ds:0xf6e07aa6,eax
  41d7d5:	imul   eax,DWORD PTR [edx+0x47],0x4073a372
  41d7dc:	dec    eax
  41d7dd:	add    al,0xe8
  41d7df:	das    
  41d7e0:	sbb    cl,0xbf
  41d7e3:	shl    DWORD PTR [esp+ecx*1-0x7f],1
  41d7e7:	gs pushf 
  41d7e9:	pop    edx
  41d7ea:	dec    esi
  41d7eb:	push   esi
  41d7ec:	je     0x41d7ba
  41d7ee:	rol    DWORD PTR ds:0xc051ba4f,0xe
  41d7f5:	inc    esi
  41d7f6:	push   ecx
  41d7f7:	retf   0x2ae6
  41d7fa:	fiadd  DWORD PTR [ecx+0x2831325d]
  41d800:	sub    al,0x58
  41d802:	test   eax,0xcf1f6034
  41d807:	fidiv  WORD PTR [edx+0x3105bacc]
  41d80d:	cmp    eax,0xd831d29c
  41d812:	sub    BYTE PTR [edi+edx*1],dh
  41d815:	and    ah,bl
  41d817:	fist   WORD PTR [ebx+esi*8-0x37]
  41d81b:	cdq    
  41d81c:	std    
  41d81d:	ror    BYTE PTR [ebx-0x6d73dc19],cl
  41d823:	jo     0x41d7d3
  41d825:	inc    ebx
  41d826:	scas   al,BYTE PTR es:[edi]
  41d827:	xor    esp,DWORD PTR [esi+0x37]
  41d82a:	adc    bl,BYTE PTR [edi-0x47653845]
  41d830:	pop    ss
  41d831:	sahf   
  41d832:	test   DWORD PTR [eax+0x5b19264f],ecx
  41d838:	push   esp
  41d839:	in     al,dx
  41d83a:	fsub   QWORD PTR [edi]
  41d83c:	push   ds
  41d83d:	xchg   ebx,eax
  41d83e:	cwde   
  41d83f:	lods   eax,DWORD PTR ds:[esi]
  41d840:	sub    eax,ebx
  41d842:	cmc    
  41d843:	cmp    BYTE PTR [ecx+0xc],al
  41d846:	jb     0x41d854
  41d848:	mov    al,ds:0xa8e0ca26
  41d84d:	mov    ds:0x7e376969,al
  41d852:	lea    ebx,[ecx+eiz*2]
  41d855:	mov    eax,ds:0x359fd7ae
  41d85a:	mov    al,ds:0xc71e319e
  41d85f:	mov    edi,0x13570ef8
  41d864:	pop    edi
  41d865:	pop    bx
  41d867:	add    eax,0x3356191e
  41d86c:	test   edx,ebx
  41d86e:	fwait
  41d86f:	mov    ds:0x15eaaaa3,al
  41d874:	out    0x6f,al
  41d876:	out    dx,eax
  41d877:	ds cld 
  41d879:	push   es
  41d87a:	loopne 0x41d899
  41d87c:	inc    DWORD PTR [ebx-0x4c]
  41d87f:	aaa    
  41d880:	jp     0x41d81b
  41d882:	fdivr  DWORD PTR [eax+0x5b791c5d]
  41d888:	sahf   
  41d889:	rol    eax,0x4e
  41d88c:	test   DWORD PTR [ecx],edi
  41d88e:	jae    0x41d8fd
  41d890:	rol    WORD PTR [ecx],1
  41d893:	leave  
  41d894:	inc    ecx
  41d895:	pop    ebp
  41d896:	inc    esp
  41d897:	sub    dl,BYTE PTR [bp+di-0x2e]
  41d89b:	add    DWORD PTR [ecx+0x5d1f4329],ebp
  41d8a1:	push   cs
  41d8a2:	xor    esi,esp
  41d8a4:	ret    0xf886
  41d8a7:	sub    BYTE PTR [eax+0x56],dl
  41d8aa:	and    eax,0x9805d7bc
  41d8af:	xchg   edi,eax
  41d8b0:	inc    ecx
  41d8b1:	sti    
  41d8b2:	mov    ebp,0xa50c55de
  41d8b7:	xor    BYTE PTR [edx+0xe],bl
  41d8ba:	or     dl,BYTE PTR [ebx-0x32]
  41d8bd:	jl     0x41d8b2
  41d8bf:	jmp    0x5b2ca199
  41d8c4:	pop    es
  41d8c5:	fild   QWORD PTR [esp+edi*1-0x74f109b]
  41d8cc:	mov    ebx,0xc08ff8e1
  41d8d1:	add    BYTE PTR [eax-0x7b],ah
  41d8d4:	push   0xfffffff4
  41d8d6:	xor    al,0x63
  41d8d8:	push   esp
  41d8d9:	call   DWORD PTR [edi]
  41d8db:	adc    eax,0xb460135a
  41d8e0:	ja     0x41d8ae
  41d8e2:	das    
  41d8e3:	dec    eax
  41d8e4:	mov    esp,0xfcf7b8cd
  41d8e9:	imul   edx,DWORD PTR [esi],0xffffffe3
  41d8ec:	mov    al,ds:0x4b03279a
  41d8f1:	adc    al,0xe8
  41d8f3:	sub    eax,0xee3e2456
  41d8f8:	add    al,0x2b
  41d8fa:	dec    eax
  41d8fb:	pop    ds
  41d8fc:	ror    BYTE PTR [ebp+edx*1-0x66],cl
  41d900:	mov    edi,DWORD PTR [eax+0x107348bc]
  41d906:	inc    ebx
  41d907:	outs   dx,DWORD PTR ds:[esi]
  41d908:	dec    edx
  41d909:	(bad)  
  41d90a:	into   
  41d90b:	ss jb  0x41d940
  41d90e:	xchg   ebp,eax
  41d90f:	fwait
  41d910:	inc    ebp
  41d911:	aad    0x75
  41d913:	stos   DWORD PTR es:[edi],eax
  41d914:	sahf   
  41d915:	or     al,0x51
  41d917:	das    
  41d918:	pop    ss
  41d919:	in     eax,0xc8
  41d91b:	inc    edx
  41d91c:	inc    esp
  41d91d:	ds ins DWORD PTR es:[edi],dx
  41d91f:	ds ret 
  41d921:	mov    gs,WORD PTR [esi+0x28]
  41d924:	loope  0x41d940
  41d926:	adc    al,0x1c
  41d928:	mov    BYTE PTR [ebx],cl
  41d92a:	xchg   esi,eax
  41d92b:	test   al,0x63
  41d92d:	sbb    eax,0x3609d2c2
  41d932:	xor    al,0x49
  41d934:	push   ds
  41d935:	lea    eax,[edx+0x3c2f8f7b]
  41d93b:	push   cs
  41d93c:	dec    esp
  41d93d:	dec    ecx
  41d93e:	rcl    BYTE PTR [edi+0x49],0x5e
  41d942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d943:	jbe    0x41d985
  41d945:	aaa    
  41d946:	xor    BYTE PTR [edi],dh
  41d948:	mov    ds:0x91891aea,eax
  41d94d:	and    eax,0xf5e9e691
  41d952:	xchg   edx,eax
  41d953:	sbb    eax,0x36de804e
  41d958:	jl     0x41d952
  41d95a:	sbb    dh,BYTE PTR [ebx-0x30]
  41d95d:	adc    esi,DWORD PTR [edx+0x64805ad9]
  41d963:	in     al,0x95
  41d965:	inc    edx
  41d966:	sahf   
  41d967:	in     eax,dx
  41d968:	cdq    
  41d969:	out    dx,eax
  41d96a:	mov    WORD PTR [edi],es
  41d96c:	pop    esp
  41d96d:	les    ebp,FWORD PTR [esp+edi*4-0x2436f392]
  41d974:	(bad)  
  41d975:	in     al,0xd2
  41d977:	fstp   QWORD PTR [edi+0x29]
  41d97a:	jp     0x41d97e
  41d97c:	or     ch,BYTE PTR [esi]
  41d97e:	xor    ch,BYTE PTR [ebx]
  41d980:	repnz in eax,0xa2
  41d983:	inc    eax
  41d984:	cld    
  41d985:	fwait
  41d986:	pop    ecx
  41d987:	jle    0x41d993
  41d989:	and    eax,0x1e5d32c6
  41d98e:	xchg   ecx,eax
  41d98f:	in     al,0x23
  41d991:	mov    bl,0x84
  41d993:	xchg   edx,eax
  41d994:	add    al,0x10
  41d996:	stos   DWORD PTR es:[edi],eax
  41d997:	mov    ds:0x149cf279,eax
  41d99c:	pop    esi
  41d99d:	and    edx,edi
  41d99f:	push   ecx
  41d9a0:	js     0x41d9ff
  41d9a2:	into   
  41d9a3:	leave  
  41d9a4:	hlt    
  41d9a5:	xor    esp,DWORD PTR [ecx+esi*1+0x2a]
  41d9a9:	cmp    eax,esi
  41d9ab:	sub    al,0xfd
  41d9ad:	pop    ds
  41d9ae:	enter  0x6742,0xe8
  41d9b2:	sub    DWORD PTR [esi+0x61e4c016],edi
  41d9b8:	sub    al,BYTE PTR [esi-0x4a]
  41d9bb:	ja     0x41da10
  41d9bd:	cwde   
  41d9be:	jno    0x41d9ca
  41d9c0:	sub    bl,BYTE PTR ds:0xfa44151a
  41d9c6:	or     BYTE PTR [ebx+0x39642c3a],al
  41d9cc:	sub    eax,0x80d1e859
  41d9d1:	(bad)  
  41d9d2:	cmp    DWORD PTR [ecx],ebp
  41d9d4:	sbb    al,BYTE PTR [esi-0x7c]
  41d9d7:	fstp   DWORD PTR [esi]
  41d9d9:	xor    esp,ebp
  41d9db:	sub    al,0x5e
  41d9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9de:	mov    eax,0x63f0987c
  41d9e3:	jae    0x41da1c
  41d9e5:	mov    ebx,0x9a25acd6
  41d9ea:	jb     0x41d977
  41d9ec:	inc    esp
  41d9ed:	jne    0x41da0b
  41d9ef:	mov    al,ds:0x5e8a8989
  41d9f4:	mov    esi,0x79a1846c
  41d9f9:	mov    fs,esp
  41d9fb:	repz cmp dh,al
  41d9fe:	jne    0x41d9e1
  41da00:	mov    esi,0x51c0a8e0
  41da05:	or     eax,0x3767fb2a
  41da0a:	jl     0x41da00
  41da0c:	lds    eax,FWORD PTR ds:0xc8b2a48a
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	add    al,0x6
  41da15:	sahf   
  41da16:	popa   
  41da17:	and    esi,DWORD PTR [ebp+0x36]
  41da1a:	leave  
  41da1b:	fisub  DWORD PTR [edx-0x37]
  41da1e:	in     eax,0x5e
  41da20:	loop   0x41da82
  41da22:	jmp    0x8e37427e
  41da27:	jmp    0xfebf:0x6bf64bc
  41da2e:	mov    edi,0xdfd795b3
  41da33:	adc    bl,al
  41da35:	or     al,0x33
  41da37:	sub    bl,bl
  41da39:	mov    al,ds:0xe2600b7f
  41da3e:	out    0xd6,eax
  41da40:	inc    ecx
  41da41:	lock mov edi,0xb811125a
  41da47:	sar    DWORD PTR [esp+edx*4-0x3cfe9592],1
  41da4e:	or     al,0x71
  41da50:	xor    esp,edi
  41da52:	or     al,0x9b
  41da54:	jge    0x41dab2
  41da56:	xchg   edx,eax
  41da57:	push   edi
  41da58:	popa   
  41da59:	and    eax,0xfcebb30c
  41da5e:	xchg   BYTE PTR [esi+eax*8],ch
  41da61:	sub    eax,0x730d6278
  41da66:	inc    ecx
  41da67:	push   0x79
  41da69:	iret   
  41da6a:	pop    es
  41da6b:	dec    esi
  41da6c:	mov    al,ds:0x9bf9078d
  41da71:	xchg   edi,eax
  41da72:	retf   
  41da73:	jnp    0x41da1e
  41da75:	test   eax,0x72068a82
  41da7a:	jo     0x41da24
  41da7c:	mov    eax,ds:0xaab98cad
  41da81:	jg     0x41da67
  41da83:	cs int3 
  41da85:	leave  
  41da86:	mov    edx,DWORD PTR [eax+0x4b614a7]
  41da8c:	cmp    al,0x66
  41da8e:	or     esi,DWORD PTR [ebx]
  41da90:	jbe    0x41dae7
  41da92:	mov    bp,WORD PTR ds:0x8ade1f62
  41da99:	pusha  
  41da9a:	jae    0x41da68
  41da9c:	jb     0x41da7e
  41da9e:	push   edx
  41da9f:	mov    esp,0x44abdae6
  41daa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa5:	rdpmc  
  41daa7:	and    edx,esp
  41daa9:	retf   
  41daaa:	(bad)  
  41daab:	loop   0x41da4b
  41daad:	xlat   BYTE PTR ds:[ebx]
  41daae:	dec    edx
  41daaf:	inc    ebp
  41dab0:	push   ds
  41dab1:	sbb    bl,cl
  41dab3:	or     BYTE PTR [eax],dl
  41dab5:	add    cl,BYTE PTR [edx]
  41dab7:	es test DWORD PTR cs:[ebp+0x15],ebx
  41dabc:	repnz cmp BYTE PTR [ecx-0x7ac1dbd0],cl
  41dac3:	jp     0x41db09
  41dac5:	sbb    BYTE PTR [edx],bh
  41dac7:	pop    ebx
  41dac8:	jns    0x41da97
  41daca:	fst    QWORD PTR [ecx]
  41dacc:	inc    BYTE PTR ds:0x55a65f44
  41dad2:	fisub  WORD PTR [eax+0x3eaa1406]
  41dad8:	clc    
  41dad9:	retf   0xed9d
  41dadc:	sub    al,BYTE PTR [edx-0x6e]
  41dadf:	push   ss
  41dae0:	jge    0x41dab8
  41dae2:	int3   
  41dae3:	hlt    
  41dae4:	jbe    0x41da84
  41dae6:	sbb    edi,DWORD PTR [edi+0xc]
  41dae9:	iret   
  41daea:	out    0xf7,al
  41daec:	and    BYTE PTR [ecx+esi*1-0x5a6087dd],bl
  41daf3:	ffreep st(2)
  41daf5:	je     0x41dae3
  41daf7:	xor    eax,0x513fe941
  41dafc:	mov    ebp,0x947885a
  41db01:	mov    cl,0x68
  41db03:	add    BYTE PTR [esi+0x7b],dh
  41db06:	pop    ebp
  41db07:	sub    ch,BYTE PTR [edx+esi*8+0x28ae2414]
  41db0e:	sub    eax,0x7df97c15
  41db13:	rcr    DWORD PTR [esi],0x7
  41db16:	pusha  
  41db17:	add    dh,BYTE PTR [ebp+edi*8-0x1]
  41db1b:	add    DWORD PTR [esi+eax*8],edi
  41db1e:	sbb    ch,BYTE PTR [ebx]
  41db20:	jae    0x41db6c
  41db22:	in     al,dx
  41db23:	cs pop esi
  41db25:	push   ds
  41db26:	mov    ebx,0xf28ce32e
  41db2b:	pop    ss
  41db2c:	or     esp,DWORD PTR [edx]
  41db2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db2f:	ins    DWORD PTR es:[edi],dx
  41db30:	mov    ebp,0xe26cbf81
  41db35:	add    esi,DWORD PTR [eax+0x1c]
  41db38:	ror    ebp,1
  41db3a:	in     eax,dx
  41db3b:	sbb    esp,ebx
  41db3d:	or     ecx,DWORD PTR [ebp-0x265984e5]
  41db43:	add    eax,0x7bfe0d13
  41db48:	add    esi,DWORD PTR [ecx]
  41db4a:	outs   dx,BYTE PTR ds:[esi]
  41db4b:	ja     0x41dae1
  41db4d:	pop    ds
  41db4e:	aaa    
  41db4f:	jbe    0x41dbc1
  41db51:	sar    BYTE PTR [eax-0x48e747fc],0x3a
  41db58:	gs nop
  41db5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5b:	add    bh,bl
  41db5d:	or     dl,bl
  41db5f:	in     eax,dx
  41db60:	jo     0x41db38
  41db62:	fild   WORD PTR [ecx-0x5f362a48]
  41db68:	jmp    0x4ca0:0xec0e
  41db6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db6f:	or     DWORD PTR [ecx-0x77],esp
  41db72:	mov    bl,0x1
  41db74:	cmp    al,0x2a
  41db76:	cmp    dh,BYTE PTR [ecx-0x1f31f1cc]
  41db7c:	or     BYTE PTR [eax-0x449cdfff],ah
  41db82:	jb     0x41dbee
  41db84:	gs shl esp,1
  41db87:	add    dh,BYTE PTR [ecx-0x80]
  41db8a:	mov    ?,WORD PTR [esi+0x74]
  41db8d:	cmp    esp,0x59dd7d24
  41db93:	adc    DWORD PTR [ebx],0x937c7d6
  41db99:	cmc    
  41db9a:	push   cs
  41db9b:	(bad)  [edi]
  41db9d:	fisubr DWORD PTR [edi+eax*8-0x495f9f67]
  41dba4:	data16 scas al,BYTE PTR es:[edi]
  41dba6:	std    
  41dba7:	sbb    al,0xf
  41dba9:	fisttp QWORD PTR [esi-0x1b7c7786]
  41dbaf:	xor    edx,DWORD PTR [eax+ebx*8-0x7a]
  41dbb3:	or     eax,DWORD PTR [edi+0x4f]
  41dbb6:	push   edx
  41dbb7:	adc    al,0x24
  41dbb9:	mov    al,ds:0xb5ba4e84
  41dbbe:	inc    ebx
  41dbbf:	dec    ecx
  41dbc0:	sbb    al,0x5b
  41dbc2:	test   eax,0xb175dcae
  41dbc7:	mov    ds:0x482c4789,eax
  41dbcc:	iret   
  41dbcd:	jb     0x41dc19
  41dbcf:	and    DWORD PTR [ebp+0x6f100a72],eax
  41dbd5:	or     DWORD PTR [ecx-0x725488e3],edi
  41dbdb:	add    eax,0xec3f0529
  41dbe0:	dec    eax
  41dbe1:	dec    eax
  41dbe2:	repnz adc al,bh
  41dbe5:	cmp    dl,BYTE PTR [eax]
  41dbe7:	in     al,0x4b
  41dbe9:	cwde   
  41dbea:	les    ecx,FWORD PTR [ecx]
  41dbec:	stos   BYTE PTR es:[edi],al
  41dbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbee:	bound  ebx,QWORD PTR [esi]
  41dbf0:	add    eax,0x838236
  41dbf5:	push   ss
  41dbf6:	jge    0x41dc61
  41dbf8:	jge    0x41dc4e
  41dbfa:	mov    esp,0x4949a007
  41dbff:	aam    0x35
  41dc01:	sti    
  41dc02:	xchg   esp,eax
  41dc03:	add    BYTE PTR [edi],dl
  41dc05:	or     eax,0xdc114bea
  41dc0a:	xchg   DWORD PTR [edi+0x54],edi
  41dc0d:	push   cs
  41dc0e:	call   0x8825:0x1d492af
  41dc15:	retf   
  41dc16:	jle    0x41dbe4
  41dc18:	pop    ecx
  41dc19:	push   esi
  41dc1a:	outs   dx,DWORD PTR ds:[esi]
  41dc1b:	dec    edx
  41dc1c:	fmul   DWORD PTR [edx+ebp*8]
  41dc1f:	loope  0x41dba4
  41dc21:	shr    BYTE PTR [edi-0x3c],0x1b
  41dc25:	repnz mov ah,0xde
  41dc28:	nop
  41dc29:	mov    edx,0xd1e11c8b
  41dc2e:	test   BYTE PTR [edi+0x3614b07b],al
  41dc34:	cs ds and dh,0x5b
  41dc39:	stos   BYTE PTR es:[edi],al
  41dc3a:	ret    
  41dc3b:	sti    
  41dc3c:	and    BYTE PTR [eax],cl
  41dc3e:	repnz stos DWORD PTR es:[edi],eax
  41dc40:	inc    esp
  41dc41:	xchg   BYTE PTR [esi+0x1a],ah
  41dc44:	(bad)  
  41dc45:	repz mov edi,0x9455513a
  41dc4b:	fwait
  41dc4c:	ins    DWORD PTR es:[edi],dx
  41dc4d:	xlat   BYTE PTR ds:[ebx]
  41dc4e:	xchg   esi,eax
  41dc4f:	retf   
  41dc50:	arpl   WORD PTR [ecx-0x1bbd37f6],bp
  41dc56:	inc    edi
  41dc57:	sub    eax,0x9f94df49
  41dc5c:	dec    edi
  41dc5d:	arpl   WORD PTR [edi-0x573a5da0],sp
  41dc63:	jecxz  0x41dcdd
  41dc65:	inc    eax
  41dc66:	cwde   
  41dc67:	cmp    BYTE PTR [ebx],ch
  41dc69:	jge    0x41dc68
  41dc6b:	sub    al,BYTE PTR [esi+0x58]
  41dc6e:	jb     0x41dcb5
  41dc70:	or     esi,0xd07c96
  41dc76:	mov    esi,0x2ac63d1f
  41dc7b:	sbb    edx,ebx
  41dc7d:	cdq    
  41dc7e:	ret    
  41dc7f:	fs pop ecx
  41dc81:	mov    esi,0x2d73c6e
  41dc86:	xor    DWORD PTR [esi-0x77],0x7da88f5b
  41dc8d:	bnd jo 0x41dc56
  41dc90:	jo     0x41dcce
  41dc92:	add    bh,BYTE PTR [edi+edi*1-0x6]
  41dc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc97:	mov    bl,0xbb
  41dc99:	aaa    
  41dc9a:	lea    esi,[eax]
  41dc9c:	push   ebx
  41dc9d:	pop    esp
  41dc9e:	mov    dl,0xad
  41dca0:	popa   
  41dca1:	xor    eax,0x49520843
  41dca6:	cmp    ebp,0xe6a6d902
  41dcac:	dec    edi
  41dcad:	ds into 
  41dcaf:	shl    DWORD PTR [ebx+0xa],1
  41dcb2:	adc    al,0xa
  41dcb4:	(bad)  
  41dcb6:	push   es
  41dcb7:	fnstcw WORD PTR [ebx+0x51]
  41dcba:	into   
  41dcbb:	adc    edi,DWORD PTR [eax+0x487abb8a]
  41dcc1:	or     dh,BYTE PTR [edi+0x51898ebb]
  41dcc7:	fwait
  41dcc8:	call   DWORD PTR [ebx+0x12]
  41dccb:	cmp    DWORD PTR [ecx],ecx
  41dccd:	or     DWORD PTR [ebp+0x7],0x4664110a
  41dcd4:	push   ds
  41dcd5:	adc    ch,BYTE PTR [edi]
  41dcd7:	inc    ecx
  41dcd8:	cdq    
  41dcd9:	pop    esi
  41dcda:	mov    edi,0x6813cfae
  41dcdf:	into   
  41dce0:	fxch   st(1)
  41dce2:	(bad)  
  41dce4:	repnz ror DWORD PTR ds:0xa32e645e,1
  41dceb:	dec    edx
  41dcec:	shl    BYTE PTR [eax+0x54525f57],cl
  41dcf2:	retf   0x7568
  41dcf5:	outs   dx,BYTE PTR ds:[esi]
  41dcf6:	ficomp WORD PTR [edx-0x2a42d015]
  41dcfc:	(bad)  
  41dcfd:	dec    edx
  41dcfe:	pop    eax
  41dcff:	adc    al,0x45
  41dd01:	std    
  41dd02:	nop
  41dd03:	or     esi,eax
  41dd05:	repnz cwde 
  41dd07:	fndisi(8087 only) 
  41dd09:	fs jns 0x41dd44
  41dd0c:	xchg   BYTE PTR [ecx],dh
  41dd0e:	sub    edx,esp
  41dd10:	xor    eax,0x6684f301
  41dd15:	dec    esp
  41dd16:	mov    eax,0x6a4d8743
  41dd1b:	cdq    
  41dd1c:	mov    cl,0x91
  41dd1e:	fdivr  DWORD PTR [ebp+0x4a6b9a08]
  41dd24:	sbb    esp,DWORD PTR [edi]
  41dd26:	mov    al,ds:0x7255a1bd
  41dd2b:	retf   0xa252
  41dd2e:	dec    ebp
  41dd2f:	sub    esi,DWORD PTR [esi]
  41dd31:	in     eax,dx
  41dd32:	push   edi
  41dd33:	das    
  41dd34:	scas   al,BYTE PTR es:[edi]
  41dd35:	and    al,0x1
  41dd37:	push   edx
  41dd38:	sbb    ah,BYTE PTR ds:0x3a005af
  41dd3e:	dec    eax
  41dd3f:	stos   BYTE PTR es:[edi],al
  41dd40:	jmp    0x1b5aac09
  41dd45:	cli    
  41dd46:	sub    eax,0x40b138d9
  41dd4b:	ja     0x41dd51
  41dd4d:	add    bh,dl
  41dd4f:	mov    ebx,0x38966843
  41dd54:	sub    BYTE PTR [ebx+0x5e7d4245],0xbb
  41dd5b:	bound  ebx,QWORD PTR [edx+ecx*8+0x4a]
  41dd5f:	in     eax,0x4
  41dd61:	mov    bh,0xb8
  41dd63:	nop
  41dd64:	addr16 push cs
  41dd66:	inc    esi
  41dd67:	sub    cl,BYTE PTR [ebx+0x23126ed]
  41dd6d:	jb     0x41dd69
  41dd6f:	and    eax,0xf4d25229
  41dd74:	fwait
  41dd75:	ins    BYTE PTR es:[edi],dx
  41dd76:	in     al,dx
  41dd77:	in     eax,dx
  41dd78:	outs   dx,DWORD PTR ds:[esi]
  41dd79:	fwait
  41dd7a:	xlat   BYTE PTR ds:[ebx]
  41dd7b:	xor    eax,0x4044405c
  41dd80:	loopne 0x41ddf9
  41dd82:	pop    es
  41dd83:	push   cs
  41dd84:	adc    ebp,DWORD PTR gs:[ebx]
  41dd87:	inc    eax
  41dd88:	sub    eax,edi
  41dd8a:	mov    ebx,0xf2f2920f
  41dd8f:	fcmovne st,st(5)
  41dd91:	popf   
  41dd92:	mov    ?,ebx
  41dd94:	test   al,0xfe
  41dd96:	adc    DWORD PTR [ebp-0x2d6a6896],edx
  41dd9c:	bound  esp,QWORD PTR [ebx]
  41dd9e:	xchg   edx,esi
  41dda0:	stos   DWORD PTR es:[edi],eax
  41dda1:	les    edi,FWORD PTR [edx-0x4e8caba2]
  41dda7:	jg     0x41dddb
  41dda9:	jl     0x41dd59
  41ddab:	xor    ecx,DWORD PTR [edi+0x7a7da868]
  41ddb1:	mov    bh,0x6d
  41ddb3:	sbb    ah,BYTE PTR [edi+0x18]
  41ddb6:	and    DWORD PTR [eax],ebp
  41ddb8:	xlat   BYTE PTR gs:[ebx]
  41ddba:	jb     0x41de2f
  41ddbc:	push   ds
  41ddbd:	sbb    BYTE PTR [eax],ah
  41ddbf:	jp     0x41de3f
  41ddc1:	sub    eax,0x20bdada6
  41ddc6:	sub    edx,DWORD PTR [edx+0x11a9d6a8]
  41ddcc:	sahf   
  41ddcd:	push   edx
  41ddce:	jmp    0xd373:0x1c9d98f6
  41ddd5:	or     al,0x9a
  41ddd7:	inc    ecx
  41ddd8:	rol    al,0xc0
  41dddb:	rol    al,0xc0
  41ddde:	rol    al,0xc0
  41dde1:	rol    al,0xc0
  41dde4:	rol    al,0xc0
  41dde7:	rol    al,0xc0
  41ddea:	rol    al,0xc0
  41dded:	rol    al,0xc0
  41ddf0:	rol    al,0xc0
  41ddf3:	rol    al,0xc0
  41ddf6:	rol    al,0xb6
  41ddf9:	mov    esi,0x337c37ba
  41ddfe:	test   al,0xc3
  41de00:	retf   0xc50b
  41de03:	mov    ?,WORD PTR [edi+0x74]
  41de06:	dec    ecx
  41de07:	shl    DWORD PTR [edx+esi*1],cl
  41de0a:	fs xchg ebp,eax
  41de0c:	(bad)  
  41de0d:	adc    DWORD PTR [eax],esp
  41de0f:	(bad)  
  41de10:	jb     0x41de40
  41de12:	or     BYTE PTR [eax-0x56],0xd
  41de16:	(bad)  
  41de17:	and    eax,0xf3a4e7b8
  41de1c:	jp     0x41ddab
  41de1e:	rcr    BYTE PTR [esi],1
  41de20:	pop    ebx
  41de21:	xchg   BYTE PTR [ebx],dh
  41de23:	aaa    
  41de24:	test   al,0x4f
  41de26:	sub    al,0x21
  41de28:	out    0x64,al
  41de2a:	icebp  
  41de2b:	cmp    ah,BYTE PTR [edx+0x3383c0f5]
  41de31:	adc    DWORD PTR [esi-0x24a14100],esi
  41de37:	cmp    ebx,DWORD PTR [edx]
  41de39:	cdq    
  41de3a:	fidiv  DWORD PTR [edi-0x12]
  41de3d:	sub    ebp,DWORD PTR [edx-0x7d294420]
  41de43:	dec    esi
  41de44:	lds    esp,FWORD PTR [edi+ecx*1-0x59]
  41de48:	or     ebp,DWORD PTR [esi]
  41de4a:	in     al,0xa9
  41de4c:	sbb    DWORD PTR [edx+0x2b4cca78],edx
  41de52:	je     0x41dde6
  41de54:	or     DWORD PTR [ebx-0x3f],edi
  41de57:	add    BYTE PTR [eax+0xa7a4c44],dh
  41de5d:	and    al,0xc5
  41de5f:	mov    edx,?
  41de61:	ficom  DWORD PTR [ebx]
  41de63:	les    ebx,FWORD PTR [ecx]
  41de65:	cmp    BYTE PTR [eax-0x43e980ec],al
  41de6b:	sub    edx,DWORD PTR [eax-0x76534c6e]
  41de71:	fmul   DWORD PTR [edi-0x20]
  41de74:	aad    0xed
  41de76:	mov    ebx,0x1263643b
  41de7b:	xor    BYTE PTR [eax+0x1a],cl
  41de7e:	inc    esi
  41de7f:	jb     0x41dee6
  41de81:	pushf  
  41de82:	pop    ss
  41de83:	adc    eax,0xc4408bd5
  41de88:	push   0x46cae255
  41de8d:	gs or  BYTE PTR ss:[ebp*8+0x3efd9d70],0xa1
  41de97:	jns    0x41dec9
  41de99:	ficomp DWORD PTR [ebx]
  41de9b:	mov    dh,0x2c
  41de9d:	aad    0xcd
  41de9f:	mov    dh,0x4d
  41dea1:	push   edi
  41dea2:	daa    
  41dea3:	call   DWORD PTR ds:0xe9bdc20a
  41dea9:	jg     0x41de7d
  41deab:	xor    DWORD PTR [edi],ebx
  41dead:	movsx  esp,BYTE PTR [esi-0x7c20a578]
  41deb4:	sub    bl,dh
  41deb6:	xor    DWORD PTR [edx],ebp
  41deb8:	xor    edx,esi
  41deba:	aas    
  41debb:	mov    esp,DWORD PTR [ecx+0x39]
  41debe:	jnp    0x41df13
  41dec0:	sbb    BYTE PTR [ebp-0x144a3feb],ah
  41dec6:	sub    ch,BYTE PTR [edx+0xd9a81fe]
  41decc:	scas   al,BYTE PTR es:[edi]
  41decd:	dec    edi
  41dece:	in     al,0x84
  41ded0:	addr16 clc 
  41ded2:	mov    dl,BYTE PTR gs:[esi-0x71]
  41ded6:	cmp    eax,0x5624310d
  41dedb:	inc    ecx
  41dedc:	add    DWORD PTR [edx-0x37],edi
  41dedf:	aas    
  41dee0:	jp     0x41decf
  41dee2:	push   esi
  41dee3:	push   es
  41dee4:	jae    0x41de8d
  41dee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee7:	jg     0x41df34
  41dee9:	and    esp,edx
  41deeb:	call   0xab76e541
  41def0:	scas   al,BYTE PTR es:[edi]
  41def1:	scas   eax,DWORD PTR es:[edi]
  41def2:	mov    edi,0xa8346507
  41def7:	jl     0x41deca
  41def9:	lods   al,BYTE PTR ds:[esi]
  41defa:	sbb    BYTE PTR [eax+0x35],ah
  41defd:	lahf   
  41defe:	cmp    edx,edi
  41df00:	sbb    edi,DWORD PTR [ecx+0x2e]
  41df03:	retf   0x4e25
  41df06:	sbb    eax,0xa530209a
  41df0b:	sub    BYTE PTR [esi-0x62],al
  41df0e:	xlat   BYTE PTR ds:[ebx]
  41df0f:	xor    BYTE PTR [eax],bl
  41df11:	clc    
  41df12:	sub    ah,BYTE PTR [esi]
  41df14:	jnp    0x41df78
  41df16:	mov    ecx,0x7709e4ae
  41df1b:	out    dx,al
  41df1c:	cs jo  0x41df6b
  41df1f:	xchg   edi,eax
  41df20:	imul   ebx,DWORD PTR [eax+0x4fdf16cd],0xffffffb5
  41df27:	in     eax,dx
  41df28:	(bad)  
  41df29:	test   BYTE PTR [edi+0x30cda2bd],0x32
  41df30:	std    
  41df31:	ret    0x29f8
  41df34:	fst    DWORD PTR [eax+0x4e]
  41df37:	fst    DWORD PTR [ebp+0xb]
  41df3a:	(bad)  
  41df3b:	adc    BYTE PTR [edx],dl
  41df3d:	out    dx,al
  41df3e:	mov    bl,0x8f
  41df40:	loop   0x41dee7
  41df42:	add    esi,edi
  41df44:	sahf   
  41df45:	test   al,0xad
  41df47:	arpl   cx,si
  41df49:	lea    esi,[edi]
  41df4b:	pop    ebp
  41df4c:	xor    bl,BYTE PTR [ecx]
  41df4e:	xor    BYTE PTR [ebp+0x5d],bh
  41df51:	and    al,0xba
  41df53:	mov    ebp,0x1c21aef8
  41df58:	cmp    ebx,ebx
  41df5a:	xor    eax,0x837eb208
  41df5f:	adc    al,0xb8
  41df61:	jge    0x41dfa0
  41df63:	add    ebx,edi
  41df65:	sub    esp,DWORD PTR [ecx+0x66]
  41df68:	leave  
  41df69:	fwait
  41df6a:	cwde   
  41df6b:	mov    esp,DWORD PTR [ecx+0x1a]
  41df6e:	sub    dl,ch
  41df70:	mov    al,0x30
  41df72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df73:	push   ss
  41df74:	gs mov dl,bl
  41df77:	rcl    DWORD PTR [edi+edx*2],1
  41df7a:	cdq    
  41df7b:	fs push ebp
  41df7d:	jg     0x41dfca
  41df7f:	imul   eax,DWORD PTR [ecx],0x17f95f31
  41df85:	aaa    
  41df86:	cdq    
  41df87:	adc    DWORD PTR [esi+0x3f],ecx
  41df8a:	pop    DWORD PTR ds:0xcee403ce
  41df90:	pop    ebp
  41df91:	jae    0x41df62
  41df93:	push   eax
  41df94:	aaa    
  41df95:	icebp  
  41df96:	test   DWORD PTR [edi-0x1f7c2893],ecx
  41df9c:	lock sub al,0x70
  41df9f:	or     al,0x66
  41dfa1:	jl     0x41dfed
  41dfa3:	mov    DWORD PTR [ebx],edx
  41dfa5:	dec    esp
  41dfa6:	dec    ebp
  41dfa7:	shl    DWORD PTR [ebp-0x6d26ef2],1
  41dfad:	fcomp  QWORD PTR [esi]
  41dfaf:	mov    esp,0xfc850a72
  41dfb4:	and    cl,BYTE PTR [edx-0x6720e510]
  41dfba:	sar    BYTE PTR [ebp+0x66],1
  41dfbd:	call   0xecbb2d4c
  41dfc2:	les    esp,FWORD PTR [eax+0x2ece2e57]
  41dfc8:	sbb    al,0xde
  41dfca:	stos   DWORD PTR es:[edi],eax
  41dfcb:	sub    ch,dl
  41dfcd:	mov    dl,0x57
  41dfcf:	int3   
  41dfd0:	adc    ah,bl
  41dfd2:	mov    WORD PTR [edx+0x23],es
  41dfd5:	in     al,0x98
  41dfd7:	push   DWORD PTR ds:0xc898df54
  41dfdd:	jmp    0x41dfad
  41dfdf:	ja     0x41dfe4
  41dfe1:	xchg   esp,eax
  41dfe2:	inc    edi
  41dfe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe4:	jno    0x41df70
  41dfe6:	pop    es
  41dfe7:	inc    edi
  41dfe8:	dec    ebp
  41dfe9:	(bad)  
  41dfeb:	xchg   ebp,eax
  41dfec:	aam    0xcc
  41dfee:	int3   
  41dfef:	push   es
  41dff0:	mov    ds:0xe0079ecb,eax
  41dff5:	push   ds
  41dff6:	stos   DWORD PTR es:[edi],eax
  41dff7:	adc    al,0xa1
  41dff9:	pop    edi
  41dffa:	jl     0x41dfb3
  41dffc:	test   al,0xd1
  41dffe:	and    cl,bh
  41e000:	scas   eax,DWORD PTR es:[edi]
  41e001:	fimul  DWORD PTR [ebx]
  41e003:	mov    eax,ds:0x64383163
  41e008:	add    eax,DWORD PTR [ecx]
  41e00a:	imul   ebx,eax,0x4d76c128
  41e010:	daa    
  41e011:	(bad)  
  41e012:	push   ss
  41e013:	inc    ebp
  41e014:	test   eax,0xe441440c
  41e019:	and    dh,BYTE PTR [ecx+0x47]
  41e01c:	jmp    0x766c98b1
  41e021:	dec    ebx
  41e022:	leave  
  41e023:	jmp    0x65462b84
  41e028:	pusha  
  41e029:	pushf  
  41e02a:	pop    esi
  41e02b:	in     al,dx
  41e02c:	cwde   
  41e02d:	js     0x41e019
  41e02f:	aad    0xcf
  41e031:	popa   
  41e032:	aas    
  41e033:	add    eax,0x7d10be05
  41e038:	fld    DWORD PTR [ebp-0x70]
  41e03b:	sbb    BYTE PTR [edx+0x13],0xd9
  41e03f:	xor    DWORD PTR [ebx+0x14],esi
  41e042:	sbb    BYTE PTR [esi-0x75],ah
  41e045:	sub    DWORD PTR [ebp+0x9a6b07f],eax
  41e04b:	(bad)  
  41e04c:	clc    
  41e04d:	adc    al,0x9d
  41e04f:	xor    edi,ebx
  41e051:	(bad)  
  41e052:	test   eax,0xcf06146a
  41e057:	jae    0x41e0d1
  41e059:	data16 or BYTE PTR [esi+0x19],0x8
  41e05e:	je     0x41e074
  41e060:	xchg   DWORD PTR [ecx],ebx
  41e062:	ret    0x5604
  41e065:	fmul   st(0),st
  41e067:	leave  
  41e068:	sub    dl,BYTE PTR [edx+edx*8+0x71]
  41e06c:	imul   esp,edx,0x6b
  41e06f:	xor    ecx,esi
  41e071:	cmp    al,0x99
  41e073:	or     BYTE PTR [esi-0x715b02f7],dh
  41e079:	fidiv  DWORD PTR [eax-0x77d1ab83]
  41e07f:	inc    edi
  41e080:	mov    ds:0x210f2b3e,eax
  41e085:	je     0x41e015
  41e087:	and    BYTE PTR [ebp+0x4b],dl
  41e08a:	mov    al,es:0x334c0a14
  41e090:	ja     0x41e0c7
  41e092:	xchg   DWORD PTR [eax],esp
  41e094:	pushw  es
  41e096:	mov    al,0x4
  41e098:	mov    bl,0xf9
  41e09a:	xor    BYTE PTR [eax+0x3e92d8e0],0xa3
  41e0a1:	adc    al,0x16
  41e0a3:	cmp    ebx,DWORD PTR [ecx+0x49]
  41e0a6:	mov    al,0xe5
  41e0a8:	leave  
  41e0a9:	sub    ah,BYTE PTR [eax+0xc]
  41e0ac:	cwde   
  41e0ad:	adc    bh,BYTE PTR [ecx+0x1f98479f]
  41e0b3:	std    
  41e0b4:	jne    0x41e0c0
  41e0b6:	xchg   ebp,eax
  41e0b7:	sub    BYTE PTR [edi-0x567c004b],0x70
  41e0be:	and    esp,DWORD PTR [edx+0x1a1ad70e]
  41e0c4:	fild   QWORD PTR [esi]
  41e0c6:	xor    al,0x6f
  41e0c8:	jmp    0xf26be21c
  41e0cd:	lahf   
  41e0ce:	mov    ds:0x385cfbc4,al
  41e0d3:	loopne 0x41e0dc
  41e0d5:	dec    edi
  41e0d6:	or     eax,0x9796b4c0
  41e0db:	cmc    
  41e0dc:	inc    edi
  41e0dd:	or     ch,ah
  41e0df:	iret   
  41e0e0:	cmp    eax,0xbe19dc4c
  41e0e5:	mov    ah,0x48
  41e0e7:	clc    
  41e0e8:	test   al,0x86
  41e0ea:	mov    cl,0x5f
  41e0ec:	ffree  st(7)
  41e0ee:	cmp    BYTE PTR [eax+0x7],ah
  41e0f1:	mov    ebp,0xead47466
  41e0f6:	sahf   
  41e0f7:	int    0xc
  41e0f9:	fstp   DWORD PTR [edx-0x5395a4e1]
  41e0ff:	ret    0xcd19
  41e102:	sbb    BYTE PTR [ecx],0xdd
  41e105:	add    al,0xec
  41e107:	scas   eax,DWORD PTR es:[edi]
  41e108:	mov    edi,0x6f0cf1c9
  41e10d:	sub    al,BYTE PTR [esi-0x500bd807]
  41e113:	push   es
  41e114:	xchg   esi,eax
  41e115:	or     DWORD PTR [esi-0x5a],ebp
  41e118:	xchg   esi,eax
  41e119:	dec    edi
  41e11a:	out    dx,al
  41e11b:	ds pop es
  41e11d:	push   ebp
  41e11e:	dec    edi
  41e11f:	pop    ss
  41e120:	pusha  
  41e121:	out    dx,al
  41e122:	in     eax,0xe
  41e124:	push   es
  41e125:	xchg   ebp,eax
  41e126:	loop   0x41e13d
  41e128:	cmp    al,al
  41e12a:	mov    esp,0xfc2c7062
  41e12f:	sbb    al,0xd7
  41e131:	jb     0x41e0b3
  41e133:	cmp    eax,0x63d28317
  41e138:	pop    edx
  41e139:	lods   al,BYTE PTR ds:[esi]
  41e13a:	cmp    eax,0x7080b9a8
  41e13f:	out    0xf9,eax
  41e141:	inc    esi
  41e142:	repnz sbb ch,BYTE PTR [ebx-0x71ea8177]
  41e149:	ficomp DWORD PTR [edi+ebx*2+0x37a596fd]
  41e150:	mov    DWORD PTR [ebx+0x39],0x43eacdcb
  41e157:	iret   
  41e158:	fiadd  WORD PTR [ebp-0x583ca888]
  41e15e:	fs xchg esi,eax
  41e160:	jmp    0x41e178
  41e162:	inc    ecx
  41e163:	leave  
  41e164:	mov    bl,0x3d
  41e166:	std    
  41e167:	stos   BYTE PTR es:[edi],al
  41e168:	cwde   
  41e169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e16a:	loope  0x41e159
  41e16c:	push   esp
  41e16d:	mov    ds:0x84f5749e,al
  41e172:	sbb    al,0x57
  41e174:	outs   dx,DWORD PTR ds:[esi]
  41e175:	retf   0x548a
  41e178:	cmp    esi,ecx
  41e17a:	lods   al,BYTE PTR ds:[esi]
  41e17b:	rcl    ebx,0x60
  41e17e:	lea    esp,[ebx-0x11]
  41e181:	push   esp
  41e182:	xchg   edi,eax
  41e183:	test   al,0x21
  41e185:	xchg   DWORD PTR [esi+0x655ea47e],edi
  41e18b:	inc    edi
  41e18c:	mov    esi,0xb891b348
  41e191:	push   esp
  41e192:	sbb    edx,DWORD PTR [esi+0xf17e2c2]
  41e198:	jae    0x41e199
  41e19a:	in     eax,0x7c
  41e19c:	dec    esi
  41e19d:	mov    al,BYTE PTR [ebx+0x3]
  41e1a0:	dec    ecx
  41e1a1:	sbb    eax,0xcbc21791
  41e1a6:	inc    esp
  41e1a7:	jmp    0x41e1fc
  41e1a9:	adc    eax,0x1cf67aed
  41e1ae:	mov    ebp,0x16c2b160
  41e1b3:	inc    esp
  41e1b4:	inc    ebx
  41e1b5:	(bad)  
  41e1b6:	clc    
  41e1b7:	mov    bh,0xd2
  41e1b9:	int3   
  41e1ba:	call   0x6d61:0xc0fae774
  41e1c1:	push   esp
  41e1c2:	sar    ebp,cl
  41e1c4:	cwde   
  41e1c5:	pop    edi
  41e1c6:	dec    esi
  41e1c7:	jmp    0xcbd1edf8
  41e1cc:	push   edx
  41e1cd:	push   0x9f7b2558
  41e1d2:	push   es
  41e1d3:	inc    ebp
  41e1d4:	push   0x34
  41e1d6:	sahf   
  41e1d7:	shl    DWORD PTR [edi-0x5a1ddf20],1
  41e1dd:	adc    eax,0x407b215b
  41e1e2:	imul   eax,DWORD PTR [esi-0x4b],0xf9f47b0e
  41e1e9:	mov    esp,DWORD PTR [ebx+0x3c]
  41e1ec:	add    al,0x87
  41e1ee:	lahf   
  41e1ef:	jo     0x41e17f
  41e1f1:	xchg   esi,eax
  41e1f2:	test   BYTE PTR [esi+0x46],dh
  41e1f5:	add    BYTE PTR [eax],dh
  41e1f7:	jnp    0x41e275
  41e1f9:	and    ah,BYTE PTR [esi+0x1f]
  41e1fc:	adc    dh,cl
  41e1fe:	push   cs
  41e1ff:	mov    bh,0xe
  41e201:	adc    al,0xe2
  41e203:	clc    
  41e204:	xchg   edx,eax
  41e205:	retf   
  41e206:	mov    ch,0xa5
  41e208:	test   ah,ah
  41e20a:	mov    ch,0xb0
  41e20c:	ficomp WORD PTR [esp+edi*2]
  41e20f:	and    DWORD PTR [eax+0x3],edx
  41e212:	fwait
  41e213:	and    eax,DWORD PTR ds:0x64da8aca
  41e219:	or     eax,0x4db4652
  41e21e:	test   DWORD PTR [ebx+0x25e8d535],ebx
  41e224:	(bad)  
  41e225:	aad    0x50
  41e227:	or     DWORD PTR [ebx+0x8ca0631],0xaf13561e
  41e231:	out    0xc5,al
  41e233:	mov    ds:0xdb104e77,al
  41e238:	gs dec ebx
  41e23a:	push   ebx
  41e23b:	or     edx,edi
  41e23d:	add    al,0xfc
  41e23f:	sbb    al,0x66
  41e241:	test   esp,ebp
  41e243:	fcomi  st,st(2)
  41e245:	out    dx,al
  41e246:	aaa    
  41e247:	lahf   
  41e248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e249:	retf   0x81cd
  41e24c:	push   edi
  41e24d:	adc    bl,bh
  41e24f:	scas   eax,DWORD PTR es:[edi]
  41e250:	mov    ds:0xf75f826e,eax
  41e255:	loope  0x41e222
  41e257:	adc    esp,edi
  41e259:	out    0x6a,eax
  41e25b:	out    dx,al
  41e25c:	dec    esi
  41e25d:	add    dh,BYTE PTR [ecx+0x61a761d0]
  41e263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e264:	pop    edi
  41e265:	dec    ecx
  41e266:	inc    esp
  41e267:	and    bh,al
  41e269:	jmp    0xc6ff:0xe2824a0e
  41e270:	add    ecx,DWORD PTR [eax]
  41e272:	jbe    0x41e205
  41e274:	dec    edi
  41e275:	push   edx
  41e276:	mov    dh,0x13
  41e278:	and    DWORD PTR [ecx],edx
  41e27a:	xchg   ebx,eax
  41e27b:	add    ah,al
  41e27d:	and    ah,BYTE PTR [ebx+0x1f1589f5]
  41e283:	pop    ecx
  41e284:	mov    bh,0x60
  41e286:	sub    bh,BYTE PTR [ecx]
  41e288:	clc    
  41e289:	push   ecx
  41e28a:	pop    edi
  41e28b:	mov    esi,0x18704e5a
  41e290:	jg     0x41e2e2
  41e292:	adc    bl,BYTE PTR [eax]
  41e294:	adc    BYTE PTR [edi],al
  41e296:	es mov ecx,0x7da506fe
  41e29c:	push   es
  41e29d:	push   cs
  41e29e:	dec    ebp
  41e29f:	shl    edx,cl
  41e2a1:	sbb    DWORD PTR [edx+eax*1-0x79],ebx
  41e2a5:	xor    edx,0xffffffc4
  41e2a8:	push   edx
  41e2a9:	inc    eax
  41e2aa:	scas   eax,DWORD PTR es:[edi]
  41e2ab:	mov    DWORD PTR [esi+0x12],0x8ed5ec15
  41e2b2:	mov    al,BYTE PTR [ebx]
  41e2b4:	dec    edx
  41e2b5:	mov    ds,WORD PTR [ebx-0x49dc4ec9]
  41e2bb:	jp     0x41e282
  41e2bd:	mov    ebp,0xa33a7acc
  41e2c2:	es sub al,0x42
  41e2c5:	or     ebx,DWORD PTR [ebx+0x5e]
  41e2c8:	call   0x4048:0x4a8596c9
  41e2cf:	pop    ecx
  41e2d0:	retf   
  41e2d1:	out    dx,eax
  41e2d2:	aas    
  41e2d3:	push   es
  41e2d4:	mov    esi,0x5b214f75
  41e2d9:	daa    
  41e2da:	in     eax,dx
  41e2db:	xchg   ebp,ebx
  41e2dd:	ds scas eax,DWORD PTR es:[edi]
  41e2df:	xor    esi,DWORD PTR [esi+edi*2-0x6b]
  41e2e3:	or     BYTE PTR [esi-0x7d],bl
  41e2e6:	mov    ah,0x4d
  41e2e8:	jne    0x41e271
  41e2ea:	popf   
  41e2eb:	push   esp
  41e2ec:	xchg   edi,eax
  41e2ed:	jne    0x41e2d2
  41e2ef:	push   ebp
  41e2f0:	pop    edx
  41e2f1:	enter  0xce96,0x5
  41e2f5:	add    BYTE PTR [edx],ah
  41e2f7:	push   ebp
  41e2f8:	inc    ecx
  41e2f9:	(bad)  
  41e2fa:	xchg   edi,eax
  41e2fb:	pop    ebx
  41e2fc:	aad    0xe2
  41e2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ff:	xor    esp,DWORD PTR [esi]
  41e301:	push   ebp
  41e302:	dec    edi
  41e303:	xchg   edi,eax
  41e304:	dec    edi
  41e305:	jb     0x41e2c0
  41e307:	das    
  41e308:	into   
  41e309:	xchg   edi,eax
  41e30a:	cmp    eax,0x368558ad
  41e30f:	int    0xea
  41e311:	add    edi,ebp
  41e313:	xor    al,0xeb
  41e315:	mov    cl,0x8d
  41e317:	sbb    al,0x7f
  41e319:	in     eax,dx
  41e31a:	and    DWORD PTR [ebp+0x26a3a322],edx
  41e320:	ins    BYTE PTR es:[edi],dx
  41e321:	fisttp QWORD PTR [edi+eiz*1-0x595db4a4]
  41e328:	xchg   edx,eax
  41e329:	and    edx,DWORD PTR [esi+0x1e]
  41e32c:	mov    dl,0x21
  41e32e:	mov    ds:0x1ce0f8ef,al
  41e333:	enter  0xa1d5,0x45
  41e337:	ja     0x41e375
  41e339:	ds jbe 0x41e351
  41e33c:	jbe    0x41e371
  41e33e:	out    dx,eax
  41e33f:	stos   BYTE PTR es:[edi],al
  41e340:	push   es
  41e341:	inc    eax
  41e342:	jb     0x41e356
  41e344:	shl    BYTE PTR [edx-0x4a],cl
  41e347:	mov    eax,0xcde1c3e
  41e34c:	ds cwde 
  41e34e:	push   0xb6d0a550
  41e353:	fwait
  41e354:	shl    BYTE PTR [ecx+0x39977b3],1
  41e35a:	jp     0x41e31d
  41e35c:	mov    ecx,0x9fd3fe55
  41e361:	ja     0x41e38a
  41e363:	fsub   DWORD PTR [eax-0x3eda05a2]
  41e369:	sbb    DWORD PTR [edx+0x4],0x8e2b0926
  41e370:	or     eax,ebx
  41e372:	mov    esp,0x93f8629c
  41e377:	(bad)  
  41e378:	cld    
  41e379:	xchg   BYTE PTR [edx+edi*1+0x320a1a5b],dl
  41e380:	jbe    0x41e3d7
  41e382:	in     eax,0x1
  41e384:	xor    al,ch
  41e386:	lods   al,BYTE PTR ds:[esi]
  41e387:	lock and cl,BYTE PTR [eax+0xe77019b]
  41e38e:	cmc    
  41e38f:	stc    
  41e390:	and    DWORD PTR [ecx],edi
  41e392:	lods   al,BYTE PTR ds:[esi]
  41e393:	repz cmp DWORD PTR [ebx],eax
  41e396:	or     BYTE PTR [esi],ch
  41e398:	imul   BYTE PTR [eax+0xe072aaf]
  41e39e:	adc    eax,0x27a73e29
  41e3a3:	sub    ebx,DWORD PTR [eax+0x6a]
  41e3a6:	fld    TBYTE PTR [edi-0x10bdc075]
  41e3ad:	cmp    dl,0x2b
  41e3b0:	jl     0x41e41c
  41e3b2:	xchg   ebp,eax
  41e3b3:	(bad)  
  41e3b4:	push   ebx
  41e3b5:	mov    ch,0xb8
  41e3b7:	fild   WORD PTR [edx-0x19]
  41e3ba:	hlt    
  41e3bb:	cdq    
  41e3bc:	(bad)  
  41e3bd:	push   ecx
  41e3be:	loope  0x41e3e4
  41e3c0:	mov    edx,0xa2505796
  41e3c5:	pop    ebp
  41e3c6:	jmp    0x41e3f3
  41e3c8:	xlat   BYTE PTR ds:[ebx]
  41e3c9:	fnstcw WORD PTR [ebx-0x4dbefc38]
  41e3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d0:	clc    
  41e3d1:	adc    edx,0xffffffe4
  41e3d4:	sub    al,0xc5
  41e3d6:	xor    DWORD PTR [edi],esp
  41e3d8:	lea    ebx,[edi]
  41e3da:	jne    0x41e3f4
  41e3dc:	jne    0x41e45d
  41e3de:	bound  ebx,QWORD PTR ds:0xf03ad69e
  41e3e4:	push   ds
  41e3e5:	dec    esi
  41e3e6:	xchg   ebp,eax
  41e3e7:	or     cl,BYTE PTR [eax+0x4e3c0a04]
  41e3ed:	push   es
  41e3ee:	cwde   
  41e3ef:	adc    BYTE PTR [ebx],bl
  41e3f1:	add    al,bl
  41e3f3:	aas    
  41e3f4:	mov    ebx,0x4393081c
  41e3f9:	(bad)  
  41e3fa:	push   ebp
  41e3fb:	test   eax,0x1e3ba480
  41e400:	popa   
  41e401:	(bad)  
  41e402:	lods   eax,DWORD PTR ds:[esi]
  41e403:	cdq    
  41e404:	cmp    edi,eax
  41e406:	adc    ch,BYTE PTR [ebx+ecx*2]
  41e409:	std    
  41e40a:	inc    esp
  41e40b:	dec    edx
  41e40c:	das    
  41e40d:	push   cs
  41e40e:	push   ss
  41e40f:	dec    ecx
  41e410:	or     edx,esi
  41e412:	fs bnd repz jns 0x41e48f
  41e417:	jp     0x41e39e
  41e419:	dec    eax
  41e41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e41b:	fcomp  st(0)
  41e41d:	xor    DWORD PTR [edi+edi*1],ebx
  41e420:	cli    
  41e421:	es cli 
  41e423:	out    0xb5,eax
  41e425:	loopne 0x41e3da
  41e427:	test   DWORD PTR [esi],0xe1c76bf
  41e42d:	addr16 mov edx,edx
  41e430:	and    bl,ah
  41e432:	pop    edi
  41e433:	out    0xeb,al
  41e435:	jle    0x41e3d2
  41e437:	xchg   edx,eax
  41e438:	in     eax,0xab
  41e43a:	pop    es
  41e43b:	cmp    al,0xa6
  41e43d:	adc    esi,ebx
  41e43f:	sbb    eax,0x4a7d8ae
  41e444:	mov    ebp,0xd94679e
  41e449:	cs addr16 cmp al,0xe3
  41e44d:	dec    esp
  41e44e:	mov    WORD PTR [edx+eax*4-0x2dff136e],ss
  41e455:	icebp  
  41e456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e457:	(bad)  
  41e459:	(bad)  
  41e45a:	adc    eax,0xcba9b17a
  41e45f:	aaa    
  41e460:	inc    ebp
  41e461:	push   cs
  41e462:	push   0xffffffe9
  41e464:	pop    ebx
  41e465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e466:	dec    edx
  41e467:	shl    esp,0x3e
  41e46a:	or     ebp,DWORD PTR [esi+0x14]
  41e46d:	mov    es,edx
  41e46f:	mov    ecx,DWORD PTR ds:0xc6cd668f
  41e475:	loope  0x41e47e
  41e477:	in     eax,dx
  41e478:	or     al,0x11
  41e47a:	sub    dl,BYTE PTR [ecx]
  41e47c:	or     al,0x37
  41e47e:	mov    ds:0x6a58af13,al
  41e483:	(bad)  
  41e484:	mov    ch,0xce
  41e486:	dec    edx
  41e487:	sbb    al,BYTE PTR [ebx+0x1f59acd2]
  41e48d:	push   ds
  41e48e:	pusha  
  41e48f:	xor    DWORD PTR [di],esi
  41e492:	inc    ebp
  41e493:	(bad)  
  41e494:	cmp    eax,edx
  41e496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e497:	mov    bl,BYTE PTR [edx]
  41e499:	imul   edi,DWORD PTR [ebx-0x4b],0x88c74a04
  41e4a0:	add    eax,0x4ffc546f
  41e4a5:	inc    edi
  41e4a6:	cmp    ecx,DWORD PTR [ebx+0x5a]
  41e4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4aa:	ret    0x1151
  41e4ad:	push   cs
  41e4ae:	test   ebx,0xf81625fa
  41e4b4:	rcr    DWORD PTR [edi+0xfaad65],cl
  41e4ba:	imul   eax,DWORD PTR [edx-0x76],0xaf6d5c67
  41e4c1:	sub    ecx,ebx
  41e4c3:	ret    0xffb7
  41e4c6:	mov    al,ds:0x6ac88841
  41e4cb:	mov    DWORD PTR [edi+0x6b10ef9f],ecx
  41e4d1:	pop    edx
  41e4d2:	scas   eax,DWORD PTR es:[edi]
  41e4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d4:	mov    edi,edx
  41e4d6:	pusha  
  41e4d7:	or     dl,BYTE PTR [edi+ebp*8+0x49]
  41e4db:	add    DWORD PTR [eax+0x312b2006],edi
  41e4e1:	and    al,0x2c
  41e4e3:	and    BYTE PTR [esi],al
  41e4e5:	adc    BYTE PTR [ebp-0x793f45d1],bl
  41e4eb:	fwait
  41e4ec:	xchg   esi,eax
  41e4ed:	out    0xf2,al
  41e4ef:	lds    esi,FWORD PTR [edi+0x2c]
  41e4f2:	adc    eax,0x1ddb74db
  41e4f7:	xor    al,0xf9
  41e4f9:	cmp    ah,bl
  41e4fb:	pop    ebp
  41e4fc:	scas   al,BYTE PTR es:[edi]
  41e4fd:	mov    esi,0x6b9583ab
  41e502:	fwait
  41e503:	mov    al,BYTE PTR [ebp-0x210f0fca]
  41e509:	xchg   edi,eax
  41e50a:	stos   BYTE PTR es:[edi],al
  41e50b:	fs jge 0x41e54e
  41e50e:	iret   
  41e50f:	mov    ds:0x20c5ca34,al
  41e514:	(bad)  
  41e515:	and    DWORD PTR [esi],ebx
  41e517:	retf   
  41e518:	cmp    cl,dh
  41e51a:	dec    ebp
  41e51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e51c:	sbb    BYTE PTR ds:0x3d3bf0af,0x86
  41e523:	popa   
  41e524:	sbb    DWORD PTR [eax-0x71fadf4c],eax
  41e52a:	fcom   QWORD PTR ds:0xc92de4db
  41e530:	sar    cl,0x48
  41e533:	sub    esi,DWORD PTR [edi+ebp*2]
  41e536:	cwde   
  41e537:	nop
  41e538:	inc    esp
  41e539:	add    BYTE PTR [edi-0x4c76b1c1],0x87
  41e540:	inc    ebp
  41e541:	mov    ah,0xd2
  41e543:	fcomp  DWORD PTR [edi+ecx*1]
  41e546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e547:	into   
  41e548:	sahf   
  41e549:	fst    QWORD PTR [ecx]
  41e54b:	loop   0x41e5c3
  41e54d:	ja     0x41e56e
  41e54f:	jmp    0x81e0789e
  41e554:	pop    esi
  41e555:	cmp    eax,ebp
  41e557:	cmp    BYTE PTR [edi+0x45],dl
  41e55a:	pop    ss
  41e55b:	das    
  41e55c:	retf   0xf305
  41e55f:	cmp    al,0xe6
  41e561:	dec    esp
  41e562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e563:	sbb    BYTE PTR [eax+0x4a],bl
  41e566:	clc    
  41e567:	sbb    al,0xfb
  41e569:	add    BYTE PTR [ecx+edx*2+0x28f2048c],ah
  41e570:	xchg   DWORD PTR [edx-0xd335be8],ebp
  41e576:	sub    al,bl
  41e578:	mov    eax,edx
  41e57a:	retf   
  41e57b:	mov    ch,0x60
  41e57d:	cmp    ch,cl
  41e57f:	adc    al,0x84
  41e581:	xchg   BYTE PTR [edi],dl
  41e583:	repnz cld 
  41e585:	out    dx,al
  41e586:	hlt    
  41e587:	hlt    
  41e588:	xor    edi,ecx
  41e58a:	mov    edx,0xb24eb8f4
  41e58f:	(bad)  
  41e590:	test   eax,0xc334d7df
  41e595:	pop    esi
  41e596:	popf   
  41e597:	loop   0x41e51c
  41e599:	int    0x6f
  41e59b:	push   ecx
  41e59c:	xchg   edi,eax
  41e59d:	mov    ah,0xf
  41e59f:	jne    0x41e5d2
  41e5a1:	stos   DWORD PTR es:[edi],eax
  41e5a2:	(bad)  
  41e5a4:	(bad)  
  41e5a5:	adc    BYTE PTR [edx-0x2003ba00],al
  41e5ab:	add    al,0xe0
  41e5ad:	push   ebp
  41e5ae:	int    0xd5
  41e5b0:	cmp    dl,dl
  41e5b2:	dec    edi
  41e5b3:	aad    0x83
  41e5b5:	push   ds
  41e5b6:	xchg   BYTE PTR [esi+0x7c],bh
  41e5b9:	dec    esi
  41e5ba:	test   al,0x26
  41e5bc:	mov    eax,ds:0x53005e2f
  41e5c1:	lods   eax,DWORD PTR es:[esi]
  41e5c3:	dec    ebp
  41e5c4:	cmp    eax,0xc008fe92
  41e5c9:	rol    al,0xc0
  41e5cc:	rol    al,0xc0
  41e5cf:	rol    al,0xc0
  41e5d2:	rol    al,0xc0
  41e5d5:	rol    al,0xc0
  41e5d8:	rol    al,0xc0
  41e5db:	rol    al,0xc0
  41e5de:	rol    al,0xc0
  41e5e1:	rol    al,0xc0
  41e5e4:	rol    al,0xc0
  41e5e7:	rol    al,0xc0
  41e5ea:	rol    al,0xc0
  41e5ed:	rol    al,0xc0
  41e5f0:	rol    al,0xc0
  41e5f3:	rol    al,0xc0
  41e5f6:	rol    al,0xc0
  41e5f9:	rol    al,0xc0
  41e5fc:	rol    al,0xc0
  41e5ff:	rol    al,0xc0
  41e602:	rol    al,0xc0
  41e605:	rol    al,0xc0
  41e608:	rol    al,0xc0
  41e60b:	rol    al,0xc0
  41e60e:	rol    al,0x35
  41e611:	jne    0x41e67d
  41e613:	add    ebx,0xffffff87
  41e616:	xor    al,0x41
  41e618:	xor    ah,cl
  41e61a:	hlt    
  41e61b:	inc    edx
  41e61c:	jb     0x41e60c
  41e61e:	inc    edx
  41e61f:	add    BYTE PTR [ecx+0x517a2911],ch
  41e625:	adc    DWORD PTR [eax-0x7c983fb3],eax
  41e62b:	pop    ss
  41e62c:	pop    esp
  41e62d:	jne    0x41e632
  41e62f:	js     0x41e64c
  41e631:	shl    BYTE PTR [ebx-0x3c],0x19
  41e635:	push   ebx
  41e636:	xchg   esi,eax
  41e637:	das    
  41e638:	lahf   
  41e639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63a:	sar    DWORD PTR [ebx+0x60d3d1bd],cl
  41e640:	jmp    0x71ae68
  41e645:	adc    DWORD PTR [ebx],esi
  41e647:	shl    DWORD PTR [edi-0x38],cl
  41e64a:	pop    es
  41e64b:	out    0x3e,al
  41e64d:	mov    cl,0x9c
  41e64f:	retf   
  41e650:	iret   
  41e651:	pushf  
  41e652:	int3   
  41e653:	call   0x65d64950
  41e658:	add    ecx,DWORD PTR [ecx+0x7e]
  41e65b:	lds    esi,FWORD PTR [ecx+eax*2+0x58]
  41e65f:	jb     0x41e628
  41e661:	xchg   ebp,eax
  41e662:	pushf  
  41e663:	pop    edi
  41e664:	push   esi
  41e665:	push   esi
  41e666:	retf   
  41e667:	data16 stc 
  41e669:	fwait
  41e66a:	inc    ecx
  41e66b:	pusha  
  41e66c:	push   edx
  41e66d:	imul   BYTE PTR [ebx]
  41e66f:	jg     0x41e60c
  41e671:	adc    eax,0x9cccf47a
  41e676:	xchg   ecx,eax
  41e677:	rcl    DWORD PTR [edx],cl
  41e679:	ja     0x41e67c
  41e67b:	arpl   WORD PTR [ebp+0x10],di
  41e67e:	xor    dl,ah
  41e680:	int3   
  41e681:	xchg   edx,eax
  41e682:	inc    eax
  41e683:	clc    
  41e684:	out    0x9,eax
  41e686:	lods   eax,DWORD PTR ds:[esi]
  41e687:	ds add eax,0x2cd9281e
  41e68d:	ins    BYTE PTR es:[edi],dx
  41e68e:	pop    ecx
  41e68f:	sub    BYTE PTR [bp+si+0xa],0x28
  41e694:	ds push ds
  41e696:	jle    0x41e659
  41e698:	inc    ebx
  41e699:	sub    bl,BYTE PTR es:[ecx]
  41e69c:	int3   
  41e69d:	in     eax,0x69
  41e69f:	push   cs
  41e6a0:	and    DWORD PTR [ebx+eiz*4],ebp
  41e6a3:	std    
  41e6a4:	inc    esi
  41e6a5:	cld    
  41e6a6:	loopne 0x41e669
  41e6a8:	cmp    eax,0x8983c91b
  41e6ad:	xor    esi,edi
  41e6af:	das    
  41e6b0:	das    
  41e6b1:	cmp    BYTE PTR [ecx],bh
  41e6b3:	sbb    DWORD PTR [eax-0x1b],esi
  41e6b6:	test   DWORD PTR [edi],0xadab3444
  41e6bc:	pop    eax
  41e6bd:	xor    al,0xfd
  41e6bf:	mov    cl,0xa1
  41e6c1:	xchg   ebp,eax
  41e6c2:	mov    ebp,0xc2d5b3d2
  41e6c7:	ins    DWORD PTR es:[edi],dx
  41e6c8:	imul   ecx,DWORD PTR [edx+edi*2-0x6c],0xd123c380
  41e6d0:	jns    0x41e663
  41e6d2:	iret   
  41e6d3:	cmp    dh,BYTE PTR [ecx+0x524d4d84]
  41e6d9:	mov    al,0x71
  41e6db:	pop    edi
  41e6dc:	jmp    0xfb73c9a7
  41e6e1:	pop    esp
  41e6e2:	fistp  WORD PTR [ecx+eiz*4+0x6bd732d0]
  41e6e9:	ret    0x49e6
  41e6ec:	xchg   esi,eax
  41e6ed:	fcom   QWORD PTR [ebp+0x22862e8d]
  41e6f3:	cmp    BYTE PTR [edi+0x707f32e3],cl
  41e6f9:	cmp    DWORD PTR [ecx+0x3d],ecx
  41e6fc:	inc    ebx
  41e6fd:	jecxz  0x41e779
  41e6ff:	cmp    cl,bl
  41e701:	xchg   edx,eax
  41e702:	(bad)  
  41e703:	or     esp,DWORD PTR [esi-0x1a]
  41e706:	jo     0x41e709
  41e708:	jae    0x41e6cf
  41e70a:	rol    esp,1
  41e70c:	push   edx
  41e70d:	sbb    al,0xbf
  41e70f:	mov    WORD PTR [ebp-0x14],gs
  41e712:	mov    BYTE PTR [edi],cl
  41e714:	idiv   BYTE PTR fs:[ecx]
  41e717:	add    eax,0x2afbd829
  41e71c:	dec    edx
  41e71d:	add    dh,al
  41e71f:	sbb    eax,0x3f9c278
  41e724:	rol    al,1
  41e726:	stos   BYTE PTR es:[edi],al
  41e727:	call   0x593aba5a
  41e72c:	pop    edx
  41e72d:	sbb    eax,0xef6d6b61
  41e732:	cwde   
  41e733:	loop   0x41e799
  41e735:	push   edx
  41e736:	mov    al,0xb7
  41e738:	pop    ecx
  41e739:	rol    ch,1
  41e73b:	pushf  
  41e73c:	cli    
  41e73d:	loope  0x41e755
  41e73f:	ja     0x41e6d4
  41e741:	jmp    0x8e42:0x63eb7ec9
  41e748:	sub    ebp,DWORD PTR [edx-0x15aea1cb]
  41e74e:	enter  0x7447,0x28
  41e752:	pop    ebp
  41e753:	pop    es
  41e754:	and    edx,DWORD PTR [ecx+0xf]
  41e757:	sub    BYTE PTR [edx+edx*1+0x2fbea0aa],dh
  41e75e:	pushf  
  41e75f:	ror    BYTE PTR [eax],cl
  41e761:	push   ebx
  41e762:	xchg   BYTE PTR [ecx+0x61],al
  41e765:	dec    edx
  41e766:	in     al,dx
  41e767:	sbb    esp,edi
  41e769:	lods   eax,DWORD PTR ds:[esi]
  41e76a:	dec    esi
  41e76b:	in     eax,0x52
  41e76d:	add    esp,edi
  41e76f:	dec    ebp
  41e770:	popa   
  41e771:	mov    DWORD PTR [ecx+0x60],ecx
  41e774:	ret    
  41e775:	add    eax,0x6149f161
  41e77a:	or     eax,0xa5495762
  41e77f:	pop    ss
  41e780:	popa   
  41e781:	inc    ecx
  41e782:	push   0xb6edc442
  41e787:	jo     0x41e7b1
  41e789:	and    eax,0xe0be5f9d
  41e78e:	pusha  
  41e78f:	sbb    DWORD PTR [edx+0x19],edx
  41e792:	sbb    al,BYTE PTR [esi+0x23]
  41e795:	ret    
  41e796:	in     al,0x8d
  41e798:	shr    bl,cl
  41e79a:	aam    0xe2
  41e79c:	jg     0x41e7b4
  41e79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a0:	out    dx,al
  41e7a1:	mov    edi,0x84ea500f
  41e7a6:	std    
  41e7a7:	std    
  41e7a8:	push   eax
  41e7a9:	fcomp  QWORD PTR [edx+0x16]
  41e7ac:	jl     0x41e7d7
  41e7ae:	rcr    DWORD PTR [esi+0x61],cl
  41e7b1:	and    al,0xac
  41e7b3:	jge    0x41e755
  41e7b5:	das    
  41e7b6:	fld    TBYTE PTR [eax]
  41e7b8:	cmc    
  41e7b9:	xor    DWORD PTR [ecx+eax*4-0x38b8ceec],esi
  41e7c0:	dec    ecx
  41e7c1:	cmp    cl,dh
  41e7c3:	adc    al,0x42
  41e7c5:	ret    0xfd91
  41e7c8:	(bad)  
  41e7c9:	sub    bl,bl
  41e7cb:	inc    ecx
  41e7cc:	push   edi
  41e7cd:	xlat   BYTE PTR ds:[ebx]
  41e7ce:	inc    ebx
  41e7cf:	jmp    0xb372:0x61b75c
  41e7d6:	repnz adc al,0x5
  41e7d9:	(bad)  
  41e7da:	cwde   
  41e7db:	push   es
  41e7dc:	loopne 0x41e7fe
  41e7de:	(bad)  
  41e7df:	pushf  
  41e7e0:	into   
  41e7e1:	sbb    DWORD PTR [edx+0x46],0x83500685
  41e7e8:	jbe    0x41e7ab
  41e7ea:	fwait
  41e7eb:	cdq    
  41e7ec:	ficom  DWORD PTR [eax+0x63]
  41e7ef:	in     al,dx
  41e7f0:	mov    ebp,0xa0ed8acb
  41e7f5:	std    
  41e7f6:	arpl   WORD PTR [edx-0x1f34b017],ax
  41e7fc:	cmp    edx,DWORD PTR [ebx+eiz*2-0x33]
  41e800:	cmp    al,ah
  41e802:	inc    ebp
  41e803:	shl    DWORD PTR [ecx],1
  41e805:	mov    esi,0x5a97c84e
  41e80a:	mov    cl,0x10
  41e80c:	test   eax,0xfa434012
  41e811:	in     eax,dx
  41e812:	stos   DWORD PTR es:[edi],eax
  41e813:	sbb    BYTE PTR [ecx+0x60],al
  41e816:	mov    esp,0xf68e79a4
  41e81b:	aam    0xc3
  41e81d:	inc    eax
  41e81e:	jmp    0xd57b3aab
  41e823:	daa    
  41e824:	mov    esp,0xd6b56d02
  41e829:	pop    eax
  41e82a:	scas   eax,DWORD PTR es:[edi]
  41e82b:	pop    ecx
  41e82c:	bound  ebp,QWORD PTR [edx]
  41e82e:	stos   BYTE PTR es:[edi],al
  41e82f:	mov    dl,0xe6
  41e831:	or     ch,BYTE PTR [esi]
  41e833:	dec    ecx
  41e834:	jmp    0x41e830
  41e836:	inc    edi
  41e837:	jbe    0x41e7c1
  41e839:	idiv   DWORD PTR [ecx+0x19]
  41e83c:	xchg   edx,eax
  41e83d:	sbb    bh,al
  41e83f:	pop    ds
  41e840:	mov    DWORD PTR [ecx],ecx
  41e842:	outs   dx,BYTE PTR ds:[esi]
  41e843:	cwde   
  41e844:	sar    BYTE PTR [edx+edi*8],1
  41e847:	xor    ah,BYTE PTR [ebp+0x61]
  41e84a:	ds inc ebp
  41e84c:	add    ebx,DWORD PTR [edx]
  41e84e:	imul   ecx,edi,0x3
  41e851:	xchg   esi,eax
  41e852:	stos   DWORD PTR es:[edi],eax
  41e853:	leave  
  41e854:	mov    al,BYTE PTR [eax+0x43]
  41e857:	push   cs
  41e858:	dec    edi
  41e859:	lea    esi,[esi+ebx*1+0xa50b4d1]
  41e860:	add    al,0xc8
  41e862:	shr    DWORD PTR [esi+0x2f9e2a44],cl
  41e868:	in     al,0x3
  41e86a:	xchg   esi,eax
  41e86b:	mov    bh,0xf9
  41e86d:	dec    esp
  41e86e:	neg    BYTE PTR [esi+eax*2+0xc7d6b6]
  41e875:	outs   dx,BYTE PTR ds:[esi]
  41e876:	mov    cl,0xb2
  41e878:	pop    es
  41e879:	push   ebp
  41e87a:	xlat   BYTE PTR ds:[ebx]
  41e87b:	rcl    BYTE PTR [esi+0x5edc7a7d],1
  41e881:	xor    al,0xb6
  41e883:	lods   al,BYTE PTR ds:[esi]
  41e884:	xor    esp,DWORD PTR [esi+ecx*2-0x39]
  41e888:	pop    ebx
  41e889:	xor    bl,BYTE PTR [esi]
  41e88b:	xchg   ebp,eax
  41e88c:	(bad)  
  41e88e:	push   edx
  41e88f:	sub    DWORD PTR [ebp-0x5f],0xb345ecfc
  41e896:	mov    dl,0x6c
  41e898:	sub    bh,ah
  41e89a:	xchg   esi,ebp
  41e89c:	mov    esp,0x20d3a847
  41e8a1:	mov    dh,0xb9
  41e8a3:	arpl   WORD PTR [ecx+edx*1-0x3ae4ccfc],di
  41e8aa:	outs   dx,DWORD PTR ds:[esi]
  41e8ab:	test   DWORD PTR [esi-0x4c31887d],eax
  41e8b1:	pop    eax
  41e8b2:	mov    eax,0x66f0500e
  41e8b7:	dec    edi
  41e8b8:	xchg   BYTE PTR [ebp-0x725768],cl
  41e8be:	or     edx,DWORD PTR [edx+0x108f8aa1]
  41e8c4:	xchg   edi,eax
  41e8c5:	enter  0x70f3,0xcf
  41e8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ca:	cmp    ecx,DWORD PTR [ebx-0x7d1c7425]
  41e8d0:	pop    ss
  41e8d1:	adc    al,0x16
  41e8d3:	clc    
  41e8d4:	jo     0x41e8f4
  41e8d6:	add    al,0xdc
  41e8d8:	clc    
  41e8d9:	(bad)  
  41e8da:	rcr    DWORD PTR [edx+0x20],0x8b
  41e8de:	dec    edx
  41e8df:	jno    0x41e8c3
  41e8e1:	stos   DWORD PTR es:[edi],eax
  41e8e2:	gs mov dl,0xf5
  41e8e5:	ficom  WORD PTR fs:[ebp-0x23]
  41e8e9:	jmp    0x7d98:0x1f603b1a
  41e8f0:	std    
  41e8f1:	and    BYTE PTR [edi+0x473c2544],ch
  41e8f7:	xchg   edx,eax
  41e8f8:	cmp    BYTE PTR [eax-0x6a],bh
  41e8fb:	sbb    ch,BYTE PTR [ebp+0x1e]
  41e8fe:	bound  edx,QWORD PTR [edi+edx*2-0x32]
  41e902:	or     al,bh
  41e904:	cmp    ecx,ebx
  41e906:	sbb    BYTE PTR [ebx+0x65af37e],bh
  41e90c:	mov    dl,0xc2
  41e90e:	aad    0x52
  41e910:	dec    ebx
  41e911:	rcl    DWORD PTR ds:0xbb744fd9,cl
  41e917:	xchg   esi,eax
  41e918:	sub    DWORD PTR [edx-0x3815e516],eax
  41e91e:	pop    ds
  41e91f:	loopne 0x41e941
  41e921:	mov    dh,0x80
  41e923:	std    
  41e924:	mov    BYTE PTR [ebx],dh
  41e926:	inc    eax
  41e927:	mov    al,ds:0x83b135fb
  41e92c:	std    
  41e92d:	mov    DWORD PTR [ecx],esp
  41e92f:	sbb    cl,BYTE PTR ds:0xb8d915db
  41e935:	xchg   esp,edi
  41e937:	adc    cl,BYTE PTR [ecx]
  41e939:	xchg   esp,eax
  41e93a:	push   esi
  41e93b:	fbld   TBYTE PTR [ecx+0x49]
  41e93e:	cmp    ecx,esp
  41e940:	frstor [edx]
  41e942:	xchg   edx,eax
  41e943:	sbb    al,BYTE PTR [eax]
  41e945:	pop    edx
  41e946:	add    ebp,DWORD PTR [ebx+0x3c7f1e4d]
  41e94c:	adc    DWORD PTR [ecx-0x1b],0xb6acce0c
  41e953:	add    al,0x46
  41e955:	pop    ebx
  41e956:	in     al,dx
  41e957:	mov    dh,0xac
  41e959:	ret    0xeff4
  41e95c:	syscall 
  41e95e:	call   0x6b60:0x52963fa9
  41e965:	leave  
  41e966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e967:	iret   
  41e968:	add    bh,ch
  41e96a:	sbb    al,ch
  41e96c:	js     0x41e961
  41e96e:	pushf  
  41e96f:	pop    eax
  41e970:	int3   
  41e971:	fnsave [ecx-0x28ad57d8]
  41e977:	pushf  
  41e978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e979:	mov    dl,0xb9
  41e97b:	pop    ebp
  41e97c:	or     ah,BYTE PTR [esi]
  41e97e:	cmp    BYTE PTR [ebx],dh
  41e980:	daa    
  41e981:	ss retf 0x1fdf
  41e985:	jp     0x41e9d3
  41e987:	sbb    BYTE PTR [eax-0x2105b800],bl
  41e98d:	inc    esp
  41e98e:	pop    edi
  41e98f:	push   0xb
  41e991:	mov    DWORD PTR [esi+eiz*8+0x74509992],ebx
  41e998:	jg     0x41e9ba
  41e99a:	add    cl,BYTE PTR [ecx+eiz*4+0x39]
  41e99e:	into   
  41e99f:	xor    al,0x40
  41e9a1:	into   
  41e9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a3:	fs sub bl,cl
  41e9a6:	bound  ebp,QWORD PTR [ecx+ecx*4-0x6ebc5588]
  41e9ad:	cmc    
  41e9ae:	xor    BYTE PTR [edi+eax*2-0x3e],ch
  41e9b2:	jmp    0x61d7:0xafdd9465
  41e9b9:	push   edi
  41e9ba:	lods   eax,DWORD PTR ds:[esi]
  41e9bb:	jo     0x41e942
  41e9bd:	jo     0x41e940
  41e9bf:	or     al,BYTE PTR ds:0x198b49eb
  41e9c5:	pop    esp
  41e9c6:	jge    0x41e9e7
  41e9c8:	jnp    0x41e98c
  41e9ca:	into   
  41e9cb:	inc    esi
  41e9cc:	adc    BYTE PTR ds:[ecx+0x33],0xc6
  41e9d1:	imul   dh
  41e9d3:	enter  0xda79,0xb
  41e9d7:	lods   al,BYTE PTR ds:[esi]
  41e9d8:	ins    BYTE PTR es:[edi],dx
  41e9d9:	cli    
  41e9da:	mov    dl,0x88
  41e9dc:	daa    
  41e9dd:	imul   ecx,edi,0xc8f7accf
  41e9e3:	je     0x41ea24
  41e9e5:	stos   DWORD PTR es:[edi],eax
  41e9e6:	mov    ds:0xd0c35374,al
  41e9eb:	leave  
  41e9ec:	add    DWORD PTR [eax-0x66],esp
  41e9ef:	pop    eax
  41e9f0:	xchg   ebx,eax
  41e9f1:	mov    esp,0xcf925c14
  41e9f6:	lods   al,BYTE PTR ds:[esi]
  41e9f7:	cmp    al,0x6b
  41e9f9:	lock or al,0xf7
  41e9fc:	adc    ecx,DWORD PTR [eax]
  41e9fe:	popf   
  41e9ff:	repnz mov eax,0xbb33d256
  41ea05:	mov    ecx,0x755ff1fb
  41ea0a:	lods   eax,DWORD PTR ds:[esi]
  41ea0b:	aas    
  41ea0c:	add    eax,0x73d3aa1f
  41ea11:	mov    ds:0xc9707cba,al
  41ea16:	fwait
  41ea17:	je     0x41ea18
  41ea19:	jns    0x41e9c0
  41ea1b:	loopne 0x41ea23
  41ea1d:	lds    esi,FWORD PTR [edx]
  41ea1f:	addr16 cmc 
  41ea21:	jp     0x41e9ae
  41ea23:	jne    0x41ea7f
  41ea25:	dec    BYTE PTR [esi-0x63629c8d]
  41ea2b:	cmp    al,0xe5
  41ea2d:	or     ecx,DWORD PTR [eax+0x2c25ae52]
  41ea33:	loopne 0x41e9d1
  41ea35:	pop    ecx
  41ea36:	dec    esi
  41ea37:	xor    eax,0x2ca5fb44
  41ea3c:	sbb    edi,esp
  41ea3e:	pop    esi
  41ea3f:	cmp    eax,0x5d59c71b
  41ea44:	add    al,0x77
  41ea46:	call   0xb2d43494
  41ea4b:	xor    eax,0x7bd9aa2c
  41ea50:	(bad)  
  41ea51:	out    dx,eax
  41ea52:	mov    es,esp
  41ea54:	add    DWORD PTR [ebp+0x41],0x6d
  41ea58:	adc    al,0x8d
  41ea5a:	mov    bl,0x3e
  41ea5c:	sbb    BYTE PTR [esp+esi*1],ch
  41ea5f:	or     cl,BYTE PTR [esi-0x56]
  41ea62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea63:	mov    ebx,0x38e25461
  41ea68:	loopne 0x41ea4f
  41ea6a:	pop    ebp
  41ea6b:	push   es
  41ea6c:	js     0x41e9ee
  41ea6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea6f:	fsub   QWORD PTR [edx-0x58]
  41ea72:	mov    dh,0xa8
  41ea74:	sub    eax,DWORD PTR [edx-0x16]
  41ea77:	ja     0x41eadf
  41ea79:	xchg   edx,eax
  41ea7a:	adc    dh,BYTE PTR [eax]
  41ea7c:	inc    ecx
  41ea7d:	sbb    DWORD PTR [edi-0x2523f9e6],0x3089527b
  41ea87:	int3   
  41ea88:	jnp    0x41ea88
  41ea8a:	mov    BYTE PTR [eax],bh
  41ea8c:	push   eax
  41ea8d:	adc    BYTE PTR [ecx-0x59],ah
  41ea90:	mov    dl,0xdd
  41ea92:	sub    al,0x4d
  41ea94:	cmc    
  41ea95:	dec    esi
  41ea96:	mov    al,ds:0xd818e41a
  41ea9b:	adc    al,0xc6
  41ea9d:	or     eax,0x4d7b2518
  41eaa2:	call   0xdf6f:0x73fe235a
  41eaa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaaa:	scas   eax,DWORD PTR es:[edi]
  41eaab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaac:	scas   al,BYTE PTR es:[edi]
  41eaad:	add    eax,0x9c070732
  41eab2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab4:	inc    edi
  41eab5:	std    
  41eab6:	outs   dx,BYTE PTR ds:[esi]
  41eab7:	jne    0x41eaf1
  41eab9:	push   cs
  41eaba:	sub    ebx,edi
  41eabc:	mov    ah,0x5b
  41eabe:	aas    
  41eabf:	dec    edi
  41eac0:	icebp  
  41eac1:	adc    eax,0x2a996f91
  41eac6:	dec    ebp
  41eac7:	mov    ebx,0xaa86408a
  41eacc:	lock push edi
  41eace:	loop   0x41eab1
  41ead0:	fmul   DWORD PTR [edx]
  41ead2:	dec    esi
  41ead3:	xchg   BYTE PTR cs:[ecx-0x2c],ah
  41ead7:	lock cwde 
  41ead9:	and    ecx,DWORD PTR [ebx]
  41eadb:	inc    BYTE PTR [ecx]
  41eadd:	mov    ebx,0x174b7f4a
  41eae2:	popf   
  41eae3:	push   si
  41eae5:	push   ds
  41eae6:	inc    esi
  41eae7:	sbb    al,0xb7
  41eae9:	stos   DWORD PTR es:[edi],eax
  41eaea:	mov    bl,BYTE PTR [ebp+0x2b9ca322]
  41eaf0:	repz jbe 0x41eac1
  41eaf3:	loopne 0x41eb64
  41eaf5:	test   eax,0x1024ae70
  41eafa:	xchg   edi,edx
  41eafc:	xlat   BYTE PTR ds:[ebx]
  41eafd:	outs   dx,BYTE PTR ds:[esi]
  41eafe:	aad    0x34
  41eb00:	add    eax,0x94579c59
  41eb05:	pop    edi
  41eb06:	push   esi
  41eb07:	jne    0x41eabe
  41eb09:	xchg   ecx,eax
  41eb0b:	pop    esi
  41eb0c:	mov    ebx,0x16238106
  41eb11:	fmul   st(7),st
  41eb13:	mov    eax,ds:0x1401c689
  41eb18:	add    eax,0x6c18d4f4
  41eb1d:	rcl    al,1
  41eb1f:	push   0x5e
  41eb21:	inc    eax
  41eb22:	push   esp
  41eb23:	loopne 0x41eafc
  41eb25:	mov    eax,0x9cdccc25
  41eb2a:	aad    0x5d
  41eb2c:	sub    eax,0x9d920781
  41eb31:	aam    0x76
  41eb33:	inc    esp
  41eb34:	or     bh,cl
  41eb36:	neg    BYTE PTR [esi-0x39]
  41eb39:	and    al,0xf5
  41eb3b:	(bad)  
  41eb3c:	ss cmc 
  41eb3e:	lock inc ebp
  41eb40:	adc    dl,cl
  41eb42:	xor    esp,edx
  41eb44:	mov    al,0xa7
  41eb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb47:	dec    ebp
  41eb48:	xchg   ebx,eax
  41eb49:	loopne 0x41eba6
  41eb4b:	sub    DWORD PTR [esi+0x19323179],ecx
  41eb51:	data16 mov BYTE PTR [ecx],ch
  41eb54:	add    bl,BYTE PTR [esi-0x5fa07e56]
  41eb5a:	xor    DWORD PTR [edx+0x76cf9a4e],edx
  41eb60:	rcl    DWORD PTR [ecx+0x76],cl
  41eb63:	lea    ecx,ds:[ecx]
  41eb66:	hlt    
  41eb67:	aaa    
  41eb68:	or     edi,0xf629eb4d
  41eb6e:	lods   al,BYTE PTR ds:[esi]
  41eb6f:	out    dx,al
  41eb70:	outs   dx,DWORD PTR gs:[esi]
  41eb72:	jne    0x41ebd4
  41eb74:	push   0xb9610bcd
  41eb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb7a:	sub    eax,DWORD PTR [ecx]
  41eb7c:	imul   edx,ebp,0xffffffe9
  41eb7f:	mov    ds:0xcba52e75,eax
  41eb84:	pop    edi
  41eb85:	enter  0xf58b,0xb1
  41eb89:	js     0x41eb46
  41eb8b:	lahf   
  41eb8c:	inc    esp
  41eb8d:	fimul  WORD PTR [ecx+0x721da709]
  41eb93:	dec    edx
  41eb94:	inc    edi
  41eb95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb96:	out    dx,eax
  41eb97:	mov    cl,bh
  41eb99:	nop
  41eb9a:	push   esi
  41eb9b:	retf   
  41eb9c:	add    bl,dh
  41eb9e:	cli    
  41eb9f:	or     cl,bh
  41eba1:	push   esp
  41eba2:	imul   edx,DWORD PTR [ecx+0x29],0x13774e01
  41eba9:	in     al,dx
  41ebaa:	pop    esp
  41ebab:	aaa    
  41ebac:	and    esi,DWORD PTR [edx+edi*1+0x68]
  41ebb0:	ret    
  41ebb1:	mov    ?,WORD PTR [ebx+0x4a5878c2]
  41ebb7:	ins    DWORD PTR es:[edi],dx
  41ebb8:	lahf   
  41ebb9:	dec    edx
  41ebba:	push   es
  41ebbb:	stos   BYTE PTR es:[edi],al
  41ebbc:	jl     0x41ebca
  41ebbe:	dec    eax
  41ebbf:	mov    eax,0x3e11ee33
  41ebc4:	into   
  41ebc5:	xor    BYTE PTR [edx],bl
  41ebc7:	sbb    al,0x18
  41ebc9:	adc    eax,0x3bccfed6
  41ebce:	mov    bl,bh
  41ebd0:	and    DWORD PTR [edx+0x59ae4783],ebx
  41ebd6:	mov    DWORD PTR [ebp+0xf16f8e4],ecx
  41ebdc:	pop    ebx
  41ebdd:	xlat   BYTE PTR ds:[ebx]
  41ebde:	pop    ds
  41ebdf:	sar    DWORD PTR [ebx],0x67
  41ebe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe3:	pop    ecx
  41ebe4:	or     bh,BYTE PTR [edx]
  41ebe6:	jno    0x41ec07
  41ebe8:	inc    eax
  41ebe9:	call   0xea8e8677
  41ebee:	or     BYTE PTR [ecx],0xad
  41ebf1:	pop    esp
  41ebf2:	jmp    0x41ec68
  41ebf4:	sbb    eax,0xc9622f05
  41ebf9:	shr    BYTE PTR [edx+0x7c],1
  41ebfc:	or     BYTE PTR [esp+edx*1],cl
  41ebff:	jne    0x41ebd2
  41ec01:	xor    al,0x2f
  41ec03:	pusha  
  41ec04:	sub    al,0xa6
  41ec06:	sbb    ch,dh
  41ec08:	das    
  41ec09:	and    al,0xdb
  41ec0b:	xchg   edi,eax
  41ec0c:	adc    BYTE PTR [ecx],bl
  41ec0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec0f:	popa   
  41ec10:	jne    0x41eb9b
  41ec12:	xchg   edi,eax
  41ec13:	xor    eax,0x24553bce
  41ec18:	add    al,0x1
  41ec1a:	imul   ecx,DWORD PTR [esi],0x1b
  41ec1d:	add    edx,DWORD PTR [ebp-0xf2bac34]
  41ec23:	inc    edx
  41ec24:	dec    esi
  41ec25:	test   eax,0xd528e6e5
  41ec2b:	cmp    al,0x74
  41ec2d:	icebp  
  41ec2e:	or     eax,0x8bc9134f
  41ec33:	loopne 0x41ec4f
  41ec35:	mov    bh,0x44
  41ec37:	ja     0x41ec03
  41ec39:	cmc    
  41ec3a:	sub    ecx,DWORD PTR [esp+esi*2-0x6b]
  41ec3e:	out    0x70,eax
  41ec40:	mov    dh,BYTE PTR [ecx-0x6b]
  41ec43:	js     0x41ec9a
  41ec45:	jo     0x41ec16
  41ec47:	mov    al,0x27
  41ec49:	fcomi  st,st(6)
  41ec4b:	mov    ds:0xf7f87d3d,eax
  41ec50:	push   0xffffffce
  41ec52:	push   ss
  41ec53:	pusha  
  41ec54:	push   edx
  41ec55:	pushf  
  41ec56:	jle    0x41ec95
  41ec58:	into   
  41ec59:	mov    dl,0x2a
  41ec5b:	inc    edx
  41ec5c:	jecxz  0x41ec88
  41ec5e:	sub    bl,bl
  41ec60:	arpl   WORD PTR [esi],si
  41ec62:	out    0xe8,eax
  41ec64:	bound  esi,QWORD PTR [eax-0x5f28445e]
  41ec6a:	mov    dl,bl
  41ec6c:	sbb    ah,BYTE PTR [edx]
  41ec6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec6f:	push   0xffffff99
  41ec71:	shl    BYTE PTR [esi+0x2181a842],1
  41ec77:	ins    BYTE PTR es:[edi],dx
  41ec78:	pop    ecx
  41ec79:	xor    dh,dl
  41ec7b:	imul   edx,DWORD PTR [ebx+0x65],0x528c933f
  41ec82:	fldenv [eax+0x7e]
  41ec85:	fwait
  41ec86:	push   edx
  41ec87:	bsf    ebx,DWORD PTR [esi+esi*4-0x5319c657]
  41ec8f:	adc    eax,0x5a26e20
  41ec94:	jbe    0x41eca9
  41ec96:	int3   
  41ec97:	test   BYTE PTR [ecx+0x58],bl
  41ec9a:	mov    al,0xa5
  41ec9c:	pop    ebx
  41ec9d:	bound  ecx,QWORD PTR [edx+0xb66e440]
  41eca3:	jns    0x41ed18
  41eca5:	sbb    cl,dl
  41eca7:	mov    bl,0xee
  41eca9:	or     BYTE PTR [edx],0x4d
  41ecac:	add    eax,0xf311a55a
  41ecb1:	ss pop ecx
  41ecb3:	aaa    
  41ecb4:	mov    BYTE PTR ds:0x6fbb905,cl
  41ecba:	adc    esi,DWORD PTR [ecx-0x5d7fd579]
  41ecc0:	fldenv [esp+edi*1+0x3a]
  41ecc4:	jge    0x41ed23
  41ecc6:	int3   
  41ecc7:	push   ds
  41ecc8:	xor    eax,0x7706d064
  41eccd:	mov    eax,0xa960dd2e
  41ecd2:	inc    ecx
  41ecd3:	or     ecx,DWORD PTR [edi]
  41ecd5:	and    ebp,0x14a0ea1d
  41ecdb:	pusha  
  41ecdc:	push   edx
  41ecdd:	or     esp,DWORD PTR ds:0x9aca1156
  41ece3:	mov    WORD PTR [esi+0x1b],fs
  41ece6:	mov    bl,0x6f
  41ece8:	and    al,0xb7
  41ecea:	jge    0x41ed6b
  41ecec:	test   al,0xce
  41ecee:	xchg   edx,eax
  41ecef:	mov    cl,0xab
  41ecf1:	inc    esi
  41ecf2:	and    al,ah
  41ecf4:	inc    esi
  41ecf5:	fsub   DWORD PTR [edi]
  41ecf7:	mov    BYTE PTR [ebp+ecx*8+0x1aba0fd4],bh
  41ecfe:	mov    DWORD PTR [edx],ecx
  41ed00:	hlt    
  41ed01:	popf   
  41ed02:	add    dh,BYTE PTR [esp+eax*8+0x3d9bb403]
  41ed09:	in     al,0x74
  41ed0b:	add    al,0x85
  41ed0d:	sub    edx,DWORD PTR [ecx-0x6b]
  41ed10:	not    DWORD PTR gs:[eax-0x493eb55]
  41ed17:	sub    eax,0xa8cd1a65
  41ed1c:	mov    eax,0x4e8bc31
  41ed21:	(bad)  [edi]
  41ed23:	js     0x41ecb2
  41ed25:	repz dec esi
  41ed27:	shl    BYTE PTR [ecx-0x49fbe2ca],1
  41ed2d:	or     ebp,edx
  41ed2f:	jbe    0x41ecd0
  41ed31:	bnd jnp 0x41ed64
  41ed34:	jnp    0x41ecbe
  41ed36:	gs push ebx
  41ed38:	xor    edx,DWORD PTR [esi]
  41ed3a:	mov    bl,0x62
  41ed3c:	push   edx
  41ed3d:	push   cs
  41ed3e:	aaa    
  41ed3f:	mov    eax,ds:0xd9ddee7d
  41ed44:	out    0xbc,eax
  41ed46:	mov    dl,0xb0
  41ed48:	jle    0x41ecd7
  41ed4a:	ret    0xf488
  41ed4d:	ja     0x41edcb
  41ed4f:	mov    eax,0xeaec5631
  41ed54:	xchg   ecx,eax
  41ed55:	shl    BYTE PTR fs:[eax+edi*1],1
  41ed59:	mov    bh,0xee
  41ed5b:	and    BYTE PTR [eax],dl
  41ed5d:	push   cs
  41ed5e:	and    DWORD PTR [ebx+0xd],0x91339280
  41ed65:	jg     0x41ed1a
  41ed67:	ds add eax,0xc964e654
  41ed6d:	out    0x24,al
  41ed6f:	jnp    0x41ed91
  41ed71:	in     al,0x5b
  41ed73:	pop    ebx
  41ed74:	add    BYTE PTR [ecx+0xdd16c8e],ah
  41ed7a:	mov    ebx,DWORD PTR [ebp+esi*4-0x3cdcedbb]
  41ed81:	xchg   BYTE PTR [edx+0x362a7725],ah
  41ed87:	push   ebx
  41ed88:	(bad)  [ebx-0x1c7248a9]
  41ed8e:	stos   DWORD PTR es:[edi],eax
  41ed8f:	push   ebp
  41ed90:	dec    ecx
  41ed91:	test   al,0xf3
  41ed93:	add    ebx,DWORD PTR [edx+0x42]
  41ed96:	mov    edi,0x2e7b9a81
  41ed9b:	xor    cl,dh
  41ed9d:	inc    esp
  41ed9e:	inc    esp
  41ed9f:	test   eax,0x3eabf626
  41eda4:	ret    0xa8bb
  41eda7:	jl     0x41ed87
  41eda9:	imul   edx,DWORD PTR [esi],0xb13b0249
  41edaf:	and    DWORD PTR [eax+eax*2],0xffffffbe
  41edb3:	inc    ecx
  41edb4:	jp     0x41ed97
  41edb6:	mov    al,ds:0xacf5d421
  41edbb:	sbb    al,ah
  41edbd:	js     0x41edfe
  41edbf:	repz xor eax,ecx
  41edc2:	mov    bh,0x4d
  41edc4:	je     0x41edf0
  41edc6:	nop
  41edc7:	cmc    
  41edc8:	(bad)  
  41edc9:	lds    ebp,FWORD PTR [edi+esi*4]
  41edcc:	sar    DWORD PTR [eax-0x7a34879e],1
  41edd2:	jmp    0x41ed5c
  41edd4:	push   cs
  41edd5:	adc    bh,BYTE PTR [ecx]
  41edd7:	les    esi,FWORD PTR [ebx+0x46]
  41edda:	sbb    al,BYTE PTR [esi-0x11]
  41eddd:	not    BYTE PTR [ebx-0x3f3f3fd5]
  41ede3:	rol    al,0xc0
  41ede6:	rol    al,0xc0
  41ede9:	rol    al,0xc0
  41edec:	rol    al,0xc0
  41edef:	shl    ch,0xaa
  41edf2:	fwait
  41edf3:	pop    es
  41edf4:	adc    ah,ah
  41edf6:	dec    esp
  41edf7:	add    dh,BYTE PTR [esi+eax*8]
  41edfa:	inc    esi
  41edfb:	in     eax,0x7e
  41edfd:	mov    esi,DWORD PTR [ebx-0x74]
  41ee00:	cmp    al,0x5e
  41ee02:	sub    al,0x2c
  41ee04:	dec    edx
  41ee05:	sbb    eax,0x83543296
  41ee0a:	frstor [edx+0x50]
  41ee0d:	and    eax,0xb3859fbb
  41ee12:	dec    esp
  41ee13:	mov    esi,esi
  41ee15:	mov    cl,0x46
  41ee17:	jg     0x41ee97
  41ee19:	inc    eax
  41ee1a:	(bad)  
  41ee1b:	scas   eax,DWORD PTR es:[edi]
  41ee1c:	add    ebp,DWORD PTR [edi]
  41ee1e:	gs xchg esi,eax
  41ee20:	or     DWORD PTR [edx-0xa943829],esi
  41ee26:	xor    al,BYTE PTR [ebx]
  41ee28:	xor    DWORD PTR [esi],esp
  41ee2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee2b:	mul    BYTE PTR [edx]
  41ee2d:	jle    0x41ee0b
  41ee2f:	dec    esi
  41ee30:	scas   eax,DWORD PTR es:[edi]
  41ee31:	push   esp
  41ee32:	push   0xffffff85
  41ee34:	shl    cl,0xb8
  41ee37:	sub    eax,0x41366662
  41ee3c:	and    DWORD PTR [ebx-0x80],edx
  41ee3f:	retf   
  41ee40:	mov    DWORD PTR [ecx+esi*2-0x77],ecx
  41ee44:	mov    ds:0xb7edfe1f,al
  41ee49:	(bad)  
  41ee4a:	xlat   BYTE PTR ds:[ebx]
  41ee4b:	xor    dh,BYTE PTR [eax+ebp*1-0x4a]
  41ee4f:	push   ebx
  41ee50:	imul   ebp,DWORD PTR [ebx-0x3c],0xed2a41ec
  41ee57:	scas   al,BYTE PTR es:[edi]
  41ee58:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ee5a:	jg     0x41ee2a
  41ee5c:	push   cs
  41ee5d:	sub    al,0xc2
  41ee5f:	adc    DWORD PTR [edx+0x6b],0x1b
  41ee63:	cli    
  41ee64:	dec    edx
  41ee65:	or     BYTE PTR [edi+edi*1],bh
  41ee68:	dec    edx
  41ee69:	adc    BYTE PTR [esp+ecx*4],bh
  41ee6c:	push   edi
  41ee6d:	aaa    
  41ee6e:	mov    ax,ds:0x72f6abd6
  41ee74:	pop    edi
  41ee75:	pop    ebp
  41ee76:	sub    edx,DWORD PTR [ebx+0x1a]
  41ee79:	mov    ch,BYTE PTR [esi+0x12dc4e98]
  41ee7f:	push   ss
  41ee80:	clc    
  41ee81:	push   es
  41ee82:	cwde   
  41ee83:	loop   0x41ee73
  41ee85:	xchg   ebx,eax
  41ee86:	repz and al,0xa5
  41ee89:	in     al,0x9a
  41ee8b:	jne    0x41eef1
  41ee8d:	jl     0x41ee47
  41ee8f:	add    eax,0x1235a9f8
  41ee94:	push   es
  41ee95:	aad    0xe3
  41ee97:	xor    eax,0xaa254def
  41ee9c:	inc    edi
  41ee9d:	enter  0xaafb,0xf6
  41eea1:	sub    ebx,edx
  41eea3:	or     ah,BYTE PTR [edx+esi*8-0x2b723690]
  41eeaa:	call   0x3305:0x51c43ee0
  41eeb1:	test   dl,0x33
  41eeb4:	jae    0x41eeef
  41eeb6:	ficomp WORD PTR [esi-0x2c391f8b]
  41eebc:	xor    ah,BYTE PTR [esi+0x747c6f2b]
  41eec2:	pop    eax
  41eec3:	adc    BYTE PTR [ebp+0x6],dl
  41eec6:	(bad)  
  41eec8:	cmp    BYTE PTR [ecx+0x8],bh
  41eecb:	cmp    al,0xae
  41eecd:	adc    BYTE PTR [edx+0x7485244e],bh
  41eed3:	scas   eax,DWORD PTR es:[edi]
  41eed4:	adc    DWORD PTR [eax],0x9f41a92b
  41eeda:	out    0xc,al
  41eedc:	mov    ebp,0xed38ca0c
  41eee1:	or     eax,0xebca41a5
  41eee6:	gs cld 
  41eee8:	and    al,0xd5
  41eeea:	lods   eax,DWORD PTR ds:[esi]
  41eeeb:	ror    DWORD PTR [ebx+0x1b19156e],cl
  41eef1:	fsub   st(5),st
  41eef3:	inc    edx
  41eef4:	push   edi
  41eef5:	inc    ebx
  41eef6:	push   ebx
  41eef7:	addr16 pop edx
  41eef9:	loop   0x41ef08
  41eefb:	dec    ebx
  41eefc:	call   0x1620:0xe2625258
  41ef03:	stos   BYTE PTR es:[edi],al
  41ef04:	out    dx,al
  41ef05:	lods   al,BYTE PTR ds:[esi]
  41ef06:	sub    ah,BYTE PTR [edx+0x5c]
  41ef09:	lods   al,BYTE PTR ds:[esi]
  41ef0a:	(bad)  
  41ef0b:	sbb    ah,BYTE PTR [edx]
  41ef0d:	jg     0x41ef4e
  41ef0f:	xor    esi,ebx
  41ef11:	jne    0x41ee9d
  41ef13:	push   0x7c
  41ef15:	shr    DWORD PTR [edi-0x6e],0x19
  41ef19:	sbb    ecx,edx
  41ef1b:	xchg   ecx,eax
  41ef1c:	xor    BYTE PTR [esi],bl
  41ef1e:	ror    BYTE PTR [ecx],cl
  41ef20:	sub    BYTE PTR [ecx-0x28],ah
  41ef23:	mov    ds:0xdfe431da,al
  41ef28:	fwait
  41ef29:	cmc    
  41ef2a:	aad    0x5b
  41ef2c:	popa   
  41ef2d:	cmp    DWORD PTR [esi],edx
  41ef2f:	sbb    al,0x26
  41ef31:	inc    ecx
  41ef32:	jmp    0xe052:0x9a7e94cf
  41ef39:	add    dh,BYTE PTR [edx+0x28]
  41ef3c:	cmp    DWORD PTR [ebx],ecx
  41ef3e:	dec    edx
  41ef3f:	shl    esp,cl
  41ef41:	xor    al,0x1f
  41ef43:	enter  0x7ccf,0x19
  41ef47:	adc    eax,0x34dfd59a
  41ef4c:	cmp    ebx,0xffffff80
  41ef4f:	xchg   edi,eax
  41ef50:	sub    al,0x36
  41ef52:	jg     0x41ef19
  41ef54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef55:	out    dx,eax
  41ef56:	in     eax,dx
  41ef57:	push   ecx
  41ef58:	retf   
  41ef59:	retf   0x55a6
  41ef5c:	cmovo  edi,DWORD PTR [edi+0x76e06237]
  41ef63:	cmp    ebx,ebp
  41ef65:	push   ebp
  41ef66:	je     0x41efcb
  41ef68:	repnz or dl,bh
  41ef6b:	lahf   
  41ef6c:	test   BYTE PTR [eax+0x5b],0xdd
  41ef70:	add    edi,esi
  41ef72:	mov    eax,ds:0xcd8c868b
  41ef77:	imul   esp,DWORD PTR [ecx+0x24],0x398da75f
  41ef7e:	int3   
  41ef7f:	push   esi
  41ef80:	push   es
  41ef81:	sahf   
  41ef82:	lahf   
  41ef83:	mov    BYTE PTR [edx+0x77],dh
  41ef86:	push   esp
  41ef87:	scas   eax,DWORD PTR es:[edi]
  41ef88:	jp     0x41ef23
  41ef8a:	mov    edx,0x6c9fb0d8
  41ef8f:	sbb    bl,cl
  41ef91:	(bad)  
  41ef92:	jnp    0x41f004
  41ef94:	sbb    eax,0x812f4139
  41ef99:	(bad)  
  41ef9a:	stos   BYTE PTR es:[edi],al
  41ef9b:	ja     0x41eff4
  41ef9d:	jmp    0x41efe3
  41ef9f:	out    0x7e,eax
  41efa1:	pop    eax
  41efa2:	popa   
  41efa3:	pop    esp
  41efa4:	mov    ds:0xa25256e4,al
  41efa9:	pusha  
  41efaa:	push   edi
  41efab:	mov    edi,0x519460e7
  41efb0:	push   ebp
  41efb1:	outs   dx,DWORD PTR ds:[esi]
  41efb2:	lock clc 
  41efb4:	and    DWORD PTR [esi],ecx
  41efb6:	xor    edx,DWORD PTR [eax-0x1036719b]
  41efbc:	fldenv [edi-0x41057530]
  41efc2:	out    dx,eax
  41efc3:	mov    ds:0xaca38ac1,eax
  41efc8:	aas    
  41efc9:	retf   0xeaab
  41efcc:	lds    ebx,FWORD PTR [esi-0x4ef460ba]
  41efd2:	pop    edx
  41efd3:	xor    eax,0x59b81fe5
  41efd8:	repz aas 
  41efda:	loop   0x41efbd
  41efdc:	ror    DWORD PTR [edx+ebp*1-0x50f7c189],cl
  41efe3:	jge    0x41ef8c
  41efe5:	repnz inc esp
  41efe7:	pop    ds
  41efe8:	pop    edx
  41efe9:	fwait
  41efea:	popa   
  41efeb:	and    DWORD PTR [eax+0x22],ebx
  41efee:	cmc    
  41efef:	neg    BYTE PTR [esi+0x3c]
  41eff2:	gs nop
  41eff4:	idiv   DWORD PTR [esi-0x26]
  41eff7:	mov    dl,0xb5
  41eff9:	outs   dx,BYTE PTR ds:[esi]
  41effa:	or     cl,BYTE PTR [edi]
  41effc:	pop    edx
  41effd:	jge    0x41ef99
  41efff:	and    DWORD PTR [ebp+0x1e],ebp
  41f002:	mov    esp,gs
  41f004:	add    eax,0xc4db60e2
  41f009:	xor    dh,BYTE PTR [edi]
  41f00b:	data16 jp 0x41efc2
  41f00e:	ret    
  41f00f:	or     eax,0x95e5b679
  41f014:	lahf   
  41f015:	and    ch,dl
  41f017:	and    DWORD PTR [edi-0x7c62eb10],esp
  41f01d:	lods   al,BYTE PTR ds:[esi]
  41f01e:	lds    ebp,FWORD PTR [edi]
  41f020:	inc    ebx
  41f021:	and    DWORD PTR [esi],edx
  41f023:	adc    al,0xd6
  41f025:	test   DWORD PTR [ecx+0x73fb579],0x9f08709b
  41f02f:	and    dl,BYTE PTR [ecx]
  41f031:	xor    eax,0x829b0017
  41f036:	push   esp
  41f037:	out    0xd9,al
  41f039:	sub    BYTE PTR [ebx+0x20df2356],al
  41f03f:	ins    DWORD PTR es:[edi],dx
  41f040:	dec    ebx
  41f041:	in     al,0x7
  41f043:	push   cs
  41f044:	pop    ecx
  41f045:	mov    dl,cl
  41f047:	js     0x818b70b4
  41f04d:	repz std 
  41f04f:	es jae 0x41f02d
  41f052:	mov    dh,0x87
  41f054:	shl    edx,cl
  41f056:	retf   0x78eb
  41f059:	(bad)  
  41f05a:	jp     0x41efe1
  41f05c:	rcr    DWORD PTR [ebx],cl
  41f05e:	sub    BYTE PTR [edi],bl
  41f060:	mov    WORD PTR [ebp+0x23],gs
  41f063:	xchg   ebp,eax
  41f064:	xchg   BYTE PTR [esi],cl
  41f066:	repnz pop ds
  41f068:	pop    ebp
  41f069:	(bad)  
  41f06a:	fsubr  DWORD PTR [esi+edx*1-0x76b5fcd1]
  41f071:	fsubp  st(2),st
  41f073:	push   esi
  41f074:	ds sub eax,0x51e5b172
  41f07a:	pop    ebx
  41f07b:	sub    DWORD PTR [ebx],edx
  41f07d:	pop    esp
  41f07e:	aaa    
  41f07f:	fldenv [esi+eiz*1-0x4b131adb]
  41f086:	mov    fs,WORD PTR [esp+ebx*1]
  41f089:	jb     0x41f0b4
  41f08b:	adc    bl,dh
  41f08d:	xchg   edi,eax
  41f08e:	fwait
  41f08f:	push   esi
  41f090:	aad    0x52
  41f092:	mov    ebp,0xd37c4831
  41f097:	and    al,0x58
  41f099:	ds iret 
  41f09b:	or     dl,0x5a
  41f09e:	mov    edi,0x1b8ffc3f
  41f0a3:	push   cs
  41f0a4:	ins    BYTE PTR es:[edi],dx
  41f0a5:	div    eax
  41f0a7:	xor    eax,0x5bb0e3c
  41f0ac:	mov    ebp,0xdf2088
  41f0b1:	fldenv [eax]
  41f0b3:	das    
  41f0b4:	xchg   ebp,eax
  41f0b5:	fld    DWORD PTR [ebx]
  41f0b7:	mov    bh,0x45
  41f0b9:	or     al,0x32
  41f0bb:	mov    eax,ds:0x54bbc64a
  41f0c0:	or     eax,0x82f4920e
  41f0c5:	loop   0x41f0a0
  41f0c7:	cmp    dl,0xf7
  41f0ca:	and    DWORD PTR [edx+ebx*8-0x52ea9d6e],0xffffffce
  41f0d2:	mul    BYTE PTR [ebx+eax*2-0x34]
  41f0d6:	mov    BYTE PTR [ecx],ah
  41f0d8:	xchg   ebp,eax
  41f0d9:	fidiv  DWORD PTR [esi+0x0]
  41f0dc:	mov    edx,0x850b4a13
  41f0e1:	popf   
  41f0e2:	sbb    al,0x0
  41f0e4:	xor    al,0x27
  41f0e6:	sbb    dh,ah
  41f0e8:	daa    
  41f0e9:	pop    ebp
  41f0ea:	add    eax,0xee259a75
  41f0ef:	(bad)  ds:0x306bb801
  41f0f5:	or     eax,0xf52d869c
  41f0fa:	jmp    0x41f0de
  41f0fc:	ins    DWORD PTR es:[edi],dx
  41f0fd:	mov    ah,0xb3
  41f0ff:	sbb    DWORD PTR [edx+0x6798c7a9],edi
  41f105:	xlat   BYTE PTR ds:[ebx]
  41f106:	cmp    DWORD PTR [ecx],eax
  41f108:	pop    ecx
  41f109:	jae    0x41f0d1
  41f10b:	fidiv  DWORD PTR [esi+esi*1+0x27]
  41f10f:	jns    0x41f0e1
  41f111:	leave  
  41f112:	mov    esp,0xaaa89fb6
  41f117:	popf   
  41f118:	inc    esp
  41f119:	out    0x98,eax
  41f11b:	and    eax,0x352c3b20
  41f120:	dec    esi
  41f121:	clc    
  41f122:	adc    eax,0x711abe81
  41f127:	pop    ds
  41f128:	int    0xc7
  41f12a:	enter  0x55e,0x20
  41f12e:	in     al,0x9f
  41f130:	pushf  
  41f131:	dec    esi
  41f132:	es sub al,0xbd
  41f135:	jno    0x41f157
  41f137:	push   es
  41f138:	dec    esi
  41f139:	cmp    cl,BYTE PTR [edx]
  41f13b:	pop    esp
  41f13c:	push   edx
  41f13d:	pop    ecx
  41f13e:	and    BYTE PTR [ebx+0x6a9288e6],0xdf
  41f145:	adc    al,0x2
  41f147:	jg     0x41f18f
  41f149:	out    0x66,eax
  41f14b:	jle    0x41f162
  41f14d:	cmp    DWORD PTR [edx],esi
  41f14f:	psubw  mm4,QWORD PTR [esi+0x54]
  41f153:	in     al,dx
  41f154:	dec    ebp
  41f155:	sbb    DWORD PTR [ecx],eax
  41f157:	mov    edx,0x19c4d074
  41f15c:	xchg   ecx,eax
  41f15d:	shl    BYTE PTR [ebp+0x8],0x65
  41f161:	mov    cl,0xbe
  41f163:	jo     0x41f1a8
  41f165:	inc    ecx
  41f166:	shl    BYTE PTR [ebx],1
  41f168:	(bad)  
  41f169:	cmp    al,0xd1
  41f16b:	pop    esi
  41f16c:	xchg   ebp,eax
  41f16d:	(bad)  
  41f16e:	aad    0x11
  41f170:	test   ah,0xb5
  41f173:	test   al,0x1
  41f175:	retf   0xcf4c
  41f178:	es add dl,0x6d
  41f17c:	or     ebx,DWORD PTR [ecx-0x22]
  41f17f:	or     al,0x5d
  41f181:	xor    ch,0x8e
  41f184:	repz test BYTE PTR [ebx],0x3a
  41f188:	popa   
  41f189:	cmc    
  41f18a:	and    dh,BYTE PTR [esi+0x22b9c165]
  41f190:	clc    
  41f191:	mov    ds,esi
  41f193:	nop
  41f194:	push   ds
  41f195:	dec    esi
  41f196:	sbb    DWORD PTR [ecx+0x3c],0xffffffc0
  41f19a:	call   0xf71ecf12
  41f19f:	rcl    BYTE PTR [esi],cl
  41f1a1:	pop    es
  41f1a2:	mov    BYTE PTR [ebx+eiz*4-0x76ce1186],0x5f
  41f1aa:	ret    0xb44a
  41f1ad:	jb     0x41f179
  41f1af:	sub    BYTE PTR [ebx],dl
  41f1b1:	sub    cl,BYTE PTR [edx-0x46a082c0]
  41f1b7:	arpl   WORD PTR [ebp-0x2c],bp
  41f1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1bb:	add    BYTE PTR [edx],dl
  41f1bd:	or     edi,DWORD PTR [ebx-0x52246d1a]
  41f1c3:	retf   
  41f1c4:	leave  
  41f1c5:	push   ds
  41f1c6:	out    0xb0,al
  41f1c8:	jae    0x41f239
  41f1ca:	aam    0xfd
  41f1cc:	mov    dh,0xad
  41f1ce:	mov    eax,ds:0xdcb79766
  41f1d3:	mov    dl,0xc9
  41f1d5:	pop    edi
  41f1d6:	adc    eax,0xe75a28b
  41f1db:	mov    ch,bl
  41f1dd:	push   ss
  41f1de:	cmp    DWORD PTR [eax+edi*8-0x50],edx
  41f1e2:	test   eax,0x82069927
  41f1e7:	sub    ecx,DWORD PTR [ecx+0x570eaa19]
  41f1ed:	cli    
  41f1ee:	jle    0x41f1d3
  41f1f0:	mov    ch,0xf7
  41f1f2:	and    eax,0x9a006204
  41f1f7:	sar    DWORD PTR [esi-0x6f7a200d],cl
  41f1fd:	adc    al,0x94
  41f1ff:	and    ecx,DWORD PTR [ecx-0x57]
  41f202:	ss mov esi,0x1b995b6c
  41f208:	(bad)  
  41f209:	leave  
  41f20a:	leave  
  41f20b:	or     eax,0x79337976
  41f210:	cmp    DWORD PTR [esi],edx
  41f212:	cwde   
  41f213:	inc    esp
  41f214:	inc    esi
  41f215:	pop    edx
  41f216:	call   0xbe1b:0xc2863173
  41f21d:	jo     0x41f292
  41f21f:	mov    ch,BYTE PTR [edi+0x6cb7d6c5]
  41f225:	and    ch,bh
  41f227:	loopne 0x41f1ca
  41f229:	push   edi
  41f22a:	xchg   ecx,eax
  41f22b:	inc    esp
  41f22c:	icebp  
  41f22d:	bound  ecx,QWORD PTR [edx+0x46]
  41f230:	xchg   ecx,eax
  41f231:	(bad)  
  41f232:	push   ds
  41f233:	loopne 0x41f241
  41f235:	mov    ds:0xff7f77ab,eax
  41f23a:	xlat   BYTE PTR ds:[ebx]
  41f23b:	xchg   ecx,eax
  41f23c:	add    dl,BYTE PTR [ebx-0x7b]
  41f23f:	sub    ebp,DWORD PTR [ecx]
  41f241:	push   ss
  41f242:	mov    edi,DWORD PTR ds:0x9fecbded
  41f248:	mov    al,ds:0x79dba582
  41f24d:	xchg   BYTE PTR [esi+ebx*1],ah
  41f250:	scas   eax,DWORD PTR es:[edi]
  41f251:	adc    dl,ah
  41f253:	mov    ds:0x77c303bb,al
  41f258:	cmp    DWORD PTR [edx],0x18
  41f25b:	jno    0x41f25f
  41f25d:	clc    
  41f25e:	popa   
  41f25f:	mov    eax,ds:0xda6c8608
  41f264:	loopne 0x41f2c0
  41f266:	jle    0x41f255
  41f268:	xor    dl,BYTE PTR [ebp-0x70]
  41f26b:	mov    al,0xd4
  41f26d:	add    al,BYTE PTR [esi+0x30]
  41f270:	cmp    al,0xd8
  41f272:	jle    0x41f1f9
  41f274:	xlat   BYTE PTR ds:[ebx]
  41f275:	stos   DWORD PTR es:[edi],eax
  41f276:	mov    dh,0x72
  41f278:	lods   al,BYTE PTR ds:[esi]
  41f279:	jbe    0x41f25a
  41f27b:	pmullw mm6,mm7
  41f27e:	push   ss
  41f27f:	in     al,0xbf
  41f281:	shr    ah,0xef
  41f284:	mov    eax,es
  41f286:	inc    DWORD PTR [ebp+0x50e85a21]
  41f28c:	push   ebp
  41f28d:	xchg   edx,eax
  41f28e:	imul   ebx,DWORD PTR [esi],0x27
  41f291:	loop   0x41f2cd
  41f293:	inc    esi
  41f294:	enter  0x1b10,0xc8
  41f298:	or     al,0x2c
  41f29a:	scas   eax,DWORD PTR es:[edi]
  41f29b:	mov    DWORD PTR [ecx+0x37acaa9c],edx
  41f2a1:	ret    0x4078
  41f2a4:	xchg   edi,eax
  41f2a5:	or     al,0xfa
  41f2a7:	add    ebx,DWORD PTR [edx+0x1f]
  41f2aa:	fst    st(2)
  41f2ac:	jp     0x41f320
  41f2ae:	mov    esp,0xaedc59a6
  41f2b3:	push   cs
  41f2b4:	adc    al,BYTE PTR [eax-0x7facc50]
  41f2ba:	and    al,0x5a
  41f2bc:	pop    ebp
  41f2bd:	xor    DWORD PTR [eax+0x0],edi
  41f2c0:	and    DWORD PTR [eax+0x5b9b6e73],ecx
  41f2c6:	xor    al,0x2f
  41f2c8:	cmp    DWORD PTR [esi],esi
  41f2ca:	mov    ah,0xc0
  41f2cc:	popa   
  41f2cd:	dec    ebp
  41f2ce:	hlt    
  41f2cf:	shl    DWORD PTR [eax-0x55],1
  41f2d2:	jmp    0x41f29d
  41f2d4:	mov    al,ds:0xa93b6626
  41f2d9:	in     eax,0x78
  41f2db:	jge    0x41f332
  41f2dd:	retf   0xa43f
  41f2e0:	bswap  edx
  41f2e2:	pushf  
  41f2e3:	jp     0x41f318
  41f2e5:	add    eax,0x77750f98
  41f2ea:	call   0x7decdeef
  41f2ef:	cmp    al,0x21
  41f2f1:	and    BYTE PTR [eax+0x3b4ad74c],dh
  41f2f7:	test   DWORD PTR [ebp-0x1b],eax
  41f2fa:	pop    edi
  41f2fb:	jp     0x41f34f
  41f2fd:	xchg   BYTE PTR [eax-0x34],ch
  41f300:	je     0x41f2d8
  41f302:	popf   
  41f303:	shl    BYTE PTR [esi],cl
  41f305:	sub    esp,ebp
  41f307:	push   DWORD PTR [esi+0xe44f4a5]
  41f30d:	ins    DWORD PTR es:[edi],dx
  41f30e:	scas   al,BYTE PTR es:[edi]
  41f30f:	in     al,0x26
  41f311:	dec    edi
  41f312:	adc    ebx,DWORD PTR [edx-0x1d]
  41f315:	push   ds
  41f316:	push   ss
  41f317:	cdq    
  41f318:	jge    0x41f352
  41f31a:	loopne 0x41f32e
  41f31c:	adc    ecx,DWORD PTR [ebp+ebx*8+0x2a866773]
  41f323:	xor    ah,BYTE PTR [edx+ebx*2-0x4b]
  41f327:	stc    
  41f328:	mov    eax,ds:0x694456f1
  41f32d:	jno    0x41f328
  41f32f:	add    edx,DWORD PTR [ecx-0x6a]
  41f332:	arpl   bp,sp
  41f334:	dec    edi
  41f335:	sbb    al,0xaa
  41f337:	rcr    BYTE PTR ds:0x8659147b,1
  41f33d:	ss pop es
  41f33f:	and    al,0xd4
  41f341:	out    dx,al
  41f342:	push   esp
  41f343:	sbb    ax,0x1331
  41f347:	lods   eax,DWORD PTR ds:[esi]
  41f348:	and    eax,0x2580cdbe
  41f34d:	pop    edi
  41f34e:	lods   al,BYTE PTR ds:[esi]
  41f34f:	sub    bh,dh
  41f351:	pop    edi
  41f352:	or     dl,bh
  41f354:	ror    BYTE PTR [ecx-0x80],0x86
  41f358:	cwde   
  41f359:	push   esp
  41f35a:	cmp    ch,BYTE PTR [edx]
  41f35c:	js     0x41f366
  41f35e:	mov    dh,0x1f
  41f360:	and    eax,0xf93ffe9
  41f365:	sti    
  41f366:	scas   al,BYTE PTR es:[edi]
  41f367:	dec    BYTE PTR [ebx+0x13]
  41f36a:	scas   eax,DWORD PTR es:[edi]
  41f36b:	jmp    0xfaefde77
  41f370:	pusha  
  41f371:	daa    
  41f372:	aad    0xf0
  41f374:	add    DWORD PTR [ebx],ecx
  41f376:	inc    edi
  41f377:	enter  0x3dee,0xdd
  41f37b:	test   esp,edi
  41f37d:	or     ch,al
  41f37f:	ja     0x41f37e
  41f381:	fcmovb st,st(6)
  41f383:	sbb    al,0x14
  41f385:	or     DWORD PTR [ebx-0x59],esp
  41f388:	shr    DWORD PTR [ebp+0x10568299],1
  41f38e:	std    
  41f38f:	sbb    eax,0x2371aa6e
  41f394:	xchg   DWORD PTR ds:0x20d4dd31,esi
  41f39a:	xchg   edi,eax
  41f39b:	mov    esp,0xd098b859
  41f3a0:	clc    
  41f3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a2:	mov    ecx,0xe2d8a828
  41f3a7:	(bad)  
  41f3a9:	(bad)  
  41f3aa:	in     eax,dx
  41f3ab:	outs   dx,DWORD PTR ds:[esi]
  41f3ac:	ja     0x41f404
  41f3ae:	out    dx,al
  41f3af:	test   DWORD PTR [ebp+0x4d],0xec9e11e9
  41f3b6:	mov    ch,0x6f
  41f3b8:	repz xchg ebp,eax
  41f3ba:	dec    esi
  41f3bb:	inc    esp
  41f3bc:	(bad)  
  41f3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3be:	pop    ecx
  41f3bf:	jmp    DWORD PTR [ebp+0x64]
  41f3c2:	cld    
  41f3c3:	xor    DWORD PTR [edi*2-0x357f2fc7],0x4a149e21
  41f3ce:	hlt    
  41f3cf:	push   ds
  41f3d0:	xor    dh,BYTE PTR [esp+edx*8]
  41f3d3:	add    DWORD PTR [ebp-0x3c],0xffffffb3
  41f3d7:	popf   
  41f3d8:	jo     0x41f44f
  41f3da:	sub    edi,eax
  41f3dc:	in     eax,0x72
  41f3de:	ret    
  41f3df:	adc    al,0x42
  41f3e1:	sbb    DWORD PTR [ebx-0x57e8c8f6],edx
  41f3e7:	lods   al,BYTE PTR ds:[esi]
  41f3e8:	or     eax,DWORD PTR [esi+0x4c4cba9]
  41f3ee:	repz mov al,ds:0x9b36e82
  41f3f4:	call   0xc1c8:0xf031e662
  41f3fb:	xor    DWORD PTR [esi+0x1],esp
  41f3fe:	jmp    0x5dcd68a7
  41f403:	adc    ch,BYTE PTR [ebx-0x7feb1864]
  41f409:	ja     0x41f3d4
  41f40b:	cmp    BYTE PTR [esi-0x3cc0db3],dh
  41f411:	rcr    BYTE PTR [edx+ebx*2+0x56b1fec1],cl
  41f418:	mov    esp,0x41055878
  41f41d:	pop    ecx
  41f41e:	sub    ebp,DWORD PTR [esi+ebp*1+0x7a63808e]
  41f425:	pop    esp
  41f426:	enter  0x72ae,0x99
  41f42a:	sbb    BYTE PTR [eax+0x78221aa4],dh
  41f430:	mov    ecx,0x520478fe
  41f435:	adc    al,0xac
  41f437:	xlat   BYTE PTR ds:[ebx]
  41f438:	mov    ds:0x64268450,eax
  41f43d:	jbe    0x41f4a9
  41f43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f440:	inc    ecx
  41f441:	push   ebx
  41f442:	ror    BYTE PTR [ecx],0x95
  41f445:	adc    bh,BYTE PTR [edi+0x6ee57507]
  41f44b:	jle    0x41f3f0
  41f44d:	sbb    esp,edi
  41f44f:	aaa    
  41f450:	dec    ebx
  41f451:	sbb    al,cl
  41f453:	add    DWORD PTR [esi-0x33],0xd265f975
  41f45a:	fnstcw WORD PTR [edi]
  41f45c:	pop    edx
  41f45d:	fadd   st(3),st
  41f45f:	mov    eax,edi
  41f461:	xlat   BYTE PTR ds:[ebx]
  41f462:	test   DWORD PTR [ebp+0x68c06b84],ecx
  41f468:	add    BYTE PTR [edx+0x5b02c3a],bl
  41f46e:	not    ebx
  41f470:	cmp    bh,BYTE PTR [ecx+0xe91319f]
  41f476:	mov    ebx,0x75f61945
  41f47b:	and    DWORD PTR [ebp-0x43],0x452dddb3
  41f482:	xchg   edx,eax
  41f483:	mov    eax,ds:0x40caf3d5
  41f488:	ins    BYTE PTR es:[edi],dx
  41f489:	int    0xf4
  41f48b:	or     cl,BYTE PTR ds:0x7754a10b
  41f491:	push   edi
  41f492:	ror    DWORD PTR [eax-0x5b65bade],0x8b
  41f499:	fucomp st(4)
  41f49b:	and    eax,0xa1c35c5d
  41f4a0:	stc    
  41f4a1:	lahf   
  41f4a2:	pusha  
  41f4a3:	(bad)  
  41f4a4:	and    DWORD PTR [esi],eax
  41f4a6:	xor    esi,0xf584a889
  41f4ac:	sbb    DWORD PTR [eax+0x77],ecx
  41f4af:	jo     0x41f4e1
  41f4b1:	test   BYTE PTR [ebp+edx*4-0x46],dl
  41f4b5:	and    DWORD PTR [ebp+eax*2-0x5b66ca83],ebx
  41f4bc:	outs   dx,BYTE PTR ds:[esi]
  41f4bd:	popf   
  41f4be:	f2xm1  
  41f4c0:	mov    edi,0xc518df3a
  41f4c5:	ds cmc 
  41f4c7:	and    DWORD PTR [edx+ebp*8+0x1f],esp
  41f4cb:	pop    esi
  41f4cc:	mov    edi,0x19cf6dfa
  41f4d1:	outs   dx,DWORD PTR ds:[esi]
  41f4d2:	cmc    
  41f4d3:	sbb    ecx,esi
  41f4d5:	inc    edx
  41f4d6:	jbe    0x41f503
  41f4d8:	jns    0x41f4f5
  41f4da:	not    BYTE PTR [eax+ecx*1+0x3]
  41f4de:	jle    0x41f48d
  41f4e0:	xor    edi,DWORD PTR [edx+0x5b25dcda]
  41f4e6:	xor    BYTE PTR [ecx+0x4a],0xd4
  41f4ea:	mov    edx,0x9aea5d7b
  41f4ef:	xchg   edi,eax
  41f4f0:	jle    0x41f4ba
  41f4f2:	fadd   DWORD PTR [ecx+0x4badf927]
  41f4f8:	mov    ecx,DWORD PTR [esi+0x1a]
  41f4fb:	xor    eax,DWORD PTR [eax+0x312add77]
  41f501:	retf   0xc6ee
  41f504:	and    BYTE PTR ds:0xcef844f3,dl
  41f50a:	jne    0x41f51d
  41f50c:	jo     0x41f51e
  41f50e:	xchg   esi,eax
  41f50f:	aas    
  41f510:	ss push esi
  41f512:	das    
  41f513:	xor    edi,edx
  41f515:	repz mov bh,dl
  41f518:	xor    BYTE PTR [eax+0xf],al
  41f51b:	adc    al,0x6a
  41f51d:	cmp    ah,ch
  41f51f:	adc    eax,0x70de2149
  41f524:	jp     0x41f4fe
  41f526:	test   BYTE PTR [eax-0x56],ch
  41f529:	scas   al,BYTE PTR es:[edi]
  41f52a:	xchg   DWORD PTR [esi],ebx
  41f52c:	or     ax,0x6882
  41f530:	popa   
  41f531:	(bad)  
  41f532:	stos   BYTE PTR es:[edi],al
  41f533:	out    dx,eax
  41f534:	pop    edi
  41f535:	jmp    0x41f51b
  41f537:	or     DWORD PTR [ecx+ebx*4+0xf],eax
  41f53b:	xor    eax,0x8bcb7d20
  41f540:	imul   ecx,DWORD PTR [eax-0x7b],0x2a451e8c
  41f547:	cmc    
  41f548:	cwde   
  41f549:	pop    ss
  41f54a:	retf   0x249b
  41f54d:	in     eax,0x99
  41f54f:	mov    ds:0x5d2ccd1e,al
  41f554:	fistp  WORD PTR [ebx-0xac2afc2]
  41f55a:	mov    WORD PTR [ebx],cs
  41f55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f55d:	fadd   DWORD PTR [edx]
  41f55f:	adc    edi,edi
  41f561:	add    DWORD PTR [ebx],eax
  41f563:	jg     0x41f5ab
  41f565:	mov    esp,0x8a3961b4
  41f56a:	fsubr  DWORD PTR [ecx]
  41f56c:	fdivr  DWORD PTR [eax]
  41f56e:	scas   al,BYTE PTR es:[edi]
  41f56f:	jg     0x41f501
  41f571:	outs   dx,DWORD PTR ds:[esi]
  41f572:	scas   al,BYTE PTR es:[edi]
  41f573:	or     dl,BYTE PTR [ecx+eiz*4+0x59]
  41f577:	and    eax,ecx
  41f579:	pop    esp
  41f57a:	or     al,0x27
  41f57c:	dec    esp
  41f57d:	js     0x41f567
  41f57f:	xchg   edi,eax
  41f580:	xor    eax,0xffffffeb
  41f583:	test   edi,esp
  41f585:	shr    DWORD PTR [esi-0x60],0x15
  41f589:	mov    DWORD PTR [esi],ecx
  41f58b:	test   eax,0x68ab7caf
  41f590:	pop    edx
  41f591:	sub    ah,BYTE PTR [ebx+0x496e1de0]
  41f597:	cmp    BYTE PTR [ebx],cl
  41f599:	retf   0xe3d8
  41f59c:	push   edx
  41f59d:	or     eax,0x9e0226b9
  41f5a2:	pop    ecx
  41f5a3:	dec    edi
  41f5a4:	mov    ebx,0xbb05f3f8
  41f5a9:	jp     0x41f5d0
  41f5ab:	ja     0x41f5c2
  41f5ad:	ret    0x37b6
  41f5b0:	dec    eax
  41f5b1:	cmp    al,BYTE PTR [ecx]
  41f5b3:	ret    
  41f5b4:	mov    eax,0x311ef828
  41f5b9:	or     eax,0xd3cc07e3
  41f5be:	mov    esp,DWORD PTR [eax+eax*8-0x40]
  41f5c2:	rol    al,0xc0
  41f5c5:	rol    al,0xc0
  41f5c8:	rol    al,0xc0
  41f5cb:	rol    al,0xc0
  41f5ce:	rol    al,0xc0
  41f5d1:	rol    al,0xc0
  41f5d4:	rol    al,0xc0
  41f5d7:	sar    BYTE PTR [ecx-0x19],0x76
  41f5db:	pusha  
  41f5dc:	push   0x17
  41f5de:	call   0xdf0c603e
  41f5e3:	sub    ebp,ecx
  41f5e5:	cmp    DWORD PTR [esi-0x3e2dbcf4],esp
  41f5eb:	sbb    al,0x4e
  41f5ed:	or     BYTE PTR [esi+0x1fd31b79],al
  41f5f3:	lods   eax,DWORD PTR ds:[esi]
  41f5f4:	sbb    eax,0x39eb814a
  41f5f9:	test   al,0x95
  41f5fb:	sbb    ch,BYTE PTR [ecx-0x4ad64186]
  41f601:	jnp    0x41f5f0
  41f603:	dec    esp
  41f604:	xchg   esi,eax
  41f605:	pop    ss
  41f606:	stos   BYTE PTR es:[edi],al
  41f607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f608:	xor    ch,BYTE PTR [esi+0x6787b7d6]
  41f60e:	adc    bh,ch
  41f610:	rcr    ecx,0x66
  41f613:	jge    0x41f681
  41f615:	jno    0xdfeb6173
  41f61b:	xor    DWORD PTR [edx+ebp*2-0x3d],ebx
  41f61f:	cmp    al,0x8e
  41f621:	(bad)  
  41f623:	mul    BYTE PTR [ecx-0x17f31e2b]
  41f629:	fisttp QWORD PTR [ebp+0x69]
  41f62c:	push   ecx
  41f62d:	nop
  41f62e:	xchg   esp,eax
  41f62f:	xor    ecx,DWORD PTR [ecx-0x4a]
  41f632:	jcxz   0x41f679
  41f635:	push   eax
  41f636:	repz loopne 0x41f5c9
  41f639:	dec    ecx
  41f63a:	xchg   ebp,eax
  41f63b:	xchg   ebx,eax
  41f63c:	add    BYTE PTR [ebx],al
  41f63e:	lahf   
  41f63f:	and    al,0x4d
  41f641:	fmul   QWORD PTR [edi-0x1f]
  41f644:	and    esi,ebx
  41f646:	push   ds
  41f647:	sub    BYTE PTR [esi-0x67],ah
  41f64a:	nop
  41f64b:	(bad)  
  41f64c:	mov    esp,0x311ca850
  41f651:	sbb    eax,0x8afcdf03
  41f656:	cmp    al,0xa
  41f658:	or     DWORD PTR [esi],esp
  41f65a:	stos   BYTE PTR es:[edi],al
  41f65b:	jnp    0x41f6a5
  41f65d:	pop    esi
  41f65e:	push   ss
  41f65f:	mov    esp,DWORD PTR [edi-0x72]
  41f662:	stos   BYTE PTR es:[edi],al
  41f663:	sbb    ebp,DWORD PTR [edi]
  41f665:	adc    DWORD PTR [eax-0x17],ebx
  41f668:	or     dl,dl
  41f66a:	push   edi
  41f66b:	adc    BYTE PTR [esi+0x9],bh
  41f66e:	fbstp  TBYTE PTR [eax+0x30]
  41f671:	test   eax,0x4ee1f38a
  41f676:	test   ecx,0xffbf0f1a
  41f67c:	data16 xor BYTE PTR [ecx+ebx*2+0x3de3346c],0x57
  41f685:	push   ss
  41f686:	pop    ss
  41f687:	ins    DWORD PTR es:[edi],dx
  41f688:	push   0x46149d90
  41f68d:	or     DWORD PTR [eax-0x1153b0b7],edi
  41f693:	jne    0x41f66a
  41f695:	add    ebp,DWORD PTR [ecx-0x6be6a6a1]
  41f69b:	aad    0x46
  41f69d:	dec    esp
  41f69e:	in     al,0x48
  41f6a0:	rol    DWORD PTR [ebp+0x3e],0xe4
  41f6a4:	and    eax,0xd19d0a07
  41f6a9:	cwde   
  41f6aa:	push   ss
  41f6ab:	sbb    esp,eax
  41f6ad:	aam    0x2f
  41f6af:	cmp    eax,0xc66f1d
  41f6b4:	pop    edx
  41f6b5:	jle    0x41f6de
  41f6b7:	repnz fidiv DWORD PTR [eax-0x64]
  41f6bb:	xchg   ebx,eax
  41f6bc:	adc    edx,esp
  41f6be:	lea    ecx,[si-0x6de9]
  41f6c3:	push   cs
  41f6c4:	push   es
  41f6c5:	sub    ebp,DWORD PTR [edx-0x7ae84c23]
  41f6cb:	dec    esi
  41f6cc:	xchg   edi,eax
  41f6cd:	out    0xb7,al
  41f6cf:	(bad)  
  41f6d0:	cmp    eax,0x8a7d8257
  41f6d5:	xlat   BYTE PTR ds:[ebx]
  41f6d6:	jecxz  0x41f6c3
  41f6d8:	les    ebp,FWORD PTR [eax-0x2c3abccc]
  41f6de:	dec    esp
  41f6df:	adc    al,0x59
  41f6e1:	fcomp  DWORD PTR [ecx-0x419fffdb]
  41f6e7:	jns    0x41f6ce
  41f6e9:	sbb    eax,0x74a0d41c
  41f6ee:	or     esp,DWORD PTR [ecx]
  41f6f0:	mov    ecx,DWORD PTR [edi]
  41f6f2:	jo     0x41f700
  41f6f4:	pop    edi
  41f6f5:	add    DWORD PTR [esp+eax*1-0x76],0x671995d4
  41f6fd:	add    dl,BYTE PTR [edx+0x1]
  41f700:	lds    esp,FWORD PTR [ecx+0x16e2f236]
  41f706:	cmp    DWORD PTR [esi],esp
  41f708:	(bad)  
  41f709:	fsub   st(1),st
  41f70b:	jmp    0x41f715
  41f70d:	add    DWORD PTR [ecx+0x1c],0x7769df0
  41f714:	add    BYTE PTR ds:0x8176636c,bl
  41f71a:	sub    esp,ebp
  41f71c:	jno    0x41f6d2
  41f71e:	or     DWORD PTR fs:[edi+ecx*8],edi
  41f722:	imul   ebx,DWORD PTR [edx],0x1ba7546d
  41f728:	dec    esp
  41f729:	call   0x6a5814a1
  41f72e:	pop    ebp
  41f72f:	sub    cl,BYTE PTR [eax-0x80]
  41f732:	call   0xb854:0xaca0813
  41f739:	dec    esi
  41f73a:	jae    0x41f76a
  41f73c:	sahf   
  41f73d:	or     ebp,DWORD PTR [ebx-0x65a404fd]
  41f743:	jp     0x41f7a8
  41f745:	inc    edx
  41f746:	xchg   esp,eax
  41f747:	out    dx,al
  41f748:	retf   
  41f749:	imul   ebx,DWORD PTR [edx+0x3],0x5c7b259a
  41f750:	lea    edi,[esi+0x3cbd95f4]
  41f756:	aaa    
  41f757:	pop    esp
  41f758:	mov    eax,0x202951fe
  41f75d:	dec    ebx
  41f75e:	push   edx
  41f75f:	jge    0x41f74d
  41f761:	dec    ecx
  41f763:	mov    al,0x19
  41f765:	mov    ecx,0x35c92ec1
  41f76a:	mov    edi,0xbd76676a
  41f76f:	adc    eax,DWORD PTR [ebx]
  41f771:	in     al,dx
  41f772:	add    al,0x84
  41f774:	shl    BYTE PTR [edx],cl
  41f776:	(bad)  
  41f777:	ss (bad) 
  41f779:	in     eax,dx
  41f77a:	pop    ds
  41f77b:	pop    ds
  41f77c:	fisttp WORD PTR [esi+0x56]
  41f77f:	sti    
  41f780:	sub    al,0x42
  41f782:	test   DWORD PTR [ecx-0x2660d9f0],eax
  41f788:	dec    ecx
  41f789:	gs aam 0xb5
  41f78c:	inc    edi
  41f78d:	pushf  
  41f78e:	jle    0x41f7d6
  41f790:	cs pop ds
  41f792:	loopne 0x41f7b8
  41f794:	jbe    0x41f815
  41f796:	dec    ebx
  41f797:	inc    edi
  41f798:	inc    ebx
  41f799:	nop
  41f79a:	push   cs
  41f79b:	mov    BYTE PTR [ebx+0x5c],dh
  41f79e:	mov    dl,dl
  41f7a0:	xchg   ebp,eax
  41f7a1:	clc    
  41f7a2:	test   eax,0xec1a574a
  41f7a7:	sub    eax,0x8a8e9665
  41f7ac:	leave  
  41f7ad:	push   esp
  41f7ae:	mov    eax,0x4ed93bf5
  41f7b3:	outs   dx,BYTE PTR ds:[esi]
  41f7b4:	jp     0x41f7bc
  41f7b6:	mov    dl,0x17
  41f7b8:	nop
  41f7b9:	icebp  
  41f7ba:	addr16 jae 0x41f75c
  41f7bd:	fdivrp st(1),st
  41f7bf:	mov    bl,0x91
  41f7c1:	adc    DWORD PTR [edx+0x4a43f65e],0x1e
  41f7c8:	cmp    ah,ch
  41f7ca:	pop    esi
  41f7cb:	pop    esp
  41f7cc:	push   edx
  41f7cd:	push   edx
  41f7ce:	push   ebx
  41f7cf:	adc    BYTE PTR [ebx+0x1a8ab2dc],al
  41f7d5:	pop    ebp
  41f7d6:	in     eax,0x5e
  41f7d8:	out    0xcc,eax
  41f7da:	outs   dx,DWORD PTR ds:[esi]
  41f7db:	dec    ebp
  41f7dc:	xor    al,0x81
  41f7de:	mov    cl,0xe6
  41f7e0:	test   ah,ch
  41f7e2:	pop    ss
  41f7e3:	sahf   
  41f7e4:	dec    eax
  41f7e5:	inc    esi
  41f7e6:	pop    edx
  41f7e7:	adc    eax,0x1b56bc72
  41f7ec:	or     dh,BYTE PTR [edx+0x19ea9cee]
  41f7f2:	mov    WORD PTR [eax],?
  41f7f4:	test   BYTE PTR [edi],0xea
  41f7f7:	das    
  41f7f8:	pop    ecx
  41f7f9:	(bad)  
  41f7fa:	lahf   
  41f7fb:	sbb    bl,cl
  41f7fd:	jmp    0x41f7b4
  41f7ff:	outs   dx,DWORD PTR ds:[esi]
  41f800:	into   
  41f801:	xlat   BYTE PTR ds:[ebx]
  41f802:	lds    esi,FWORD PTR [edi-0x606190b7]
  41f808:	push   0xf22887ba
  41f80d:	sbb    ebx,DWORD PTR [eax+0x38]
  41f810:	cmc    
  41f811:	icebp  
  41f812:	xor    eax,0xc9cf5498
  41f817:	xor    BYTE PTR [esi-0x20de7b7c],al
  41f81d:	mov    esi,0xd906adaa
  41f822:	test   DWORD PTR [ebp-0x7f],esp
  41f825:	sub    edi,esp
  41f827:	cs addr16 dec edi
  41f82a:	mov    ebx,0x867b3094
  41f82f:	cs xor eax,0x3e80f2ae
  41f835:	loop   0x41f817
  41f837:	int    0xb5
  41f839:	jp     0x41f86d
  41f83b:	dec    edi
  41f83c:	fld    DWORD PTR [ecx]
  41f83e:	fidiv  WORD PTR [edi-0x78]
  41f841:	dec    edi
  41f842:	mov    ss,WORD PTR [edx+esi*2+0x7a]
  41f846:	and    BYTE PTR [ebx],0xa6
  41f849:	jmp    0x41f8ad
  41f84b:	jbe    0x41f811
  41f84d:	in     al,0x38
  41f84f:	sbb    al,0x4d
  41f851:	jb     0x41f87b
  41f853:	adc    DWORD PTR [edx],esi
  41f855:	std    
  41f856:	test   BYTE PTR [ebx+0x33084d6d],cl
  41f85c:	inc    ecx
  41f85d:	dec    eax
  41f85e:	xor    ch,BYTE PTR [esi+ebp*1-0x66]
  41f862:	xchg   ebp,eax
  41f863:	jl     0x41f8c4
  41f865:	sbb    DWORD PTR [ebx-0x2f41367d],edx
  41f86b:	cld    
  41f86c:	(bad)  
  41f86d:	ss loope 0x41f896
  41f870:	ret    0xa2ba
  41f873:	arpl   WORD PTR [edx],ax
  41f875:	cmp    al,0xe6
  41f877:	outs   dx,BYTE PTR ds:[esi]
  41f878:	pop    edx
  41f879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f87a:	imul   DWORD PTR [esi+0x3201c45e]
  41f880:	dec    ecx
  41f881:	lods   al,BYTE PTR ds:[esi]
  41f883:	fs jmp 0xe22109f
  41f889:	out    0x97,eax
  41f88b:	push   cs
  41f88c:	add    BYTE PTR [edx],al
  41f88e:	stc    
  41f88f:	dec    esp
  41f890:	xor    ebx,esi
  41f892:	jmp    0x7a968923
  41f897:	arpl   WORD PTR [esi+0x5c],di
  41f89a:	mov    ebx,0xb07f3fcf
  41f89f:	mov    ecx,DWORD PTR [edi-0xe]
  41f8a2:	data16 (bad) 
  41f8a4:	xor    al,0x13
  41f8a6:	mov    ds:0x28388aa6,eax
  41f8ab:	push   0x53862f7e
  41f8b0:	push   ebx
  41f8b1:	push   ebp
  41f8b2:	int3   
  41f8b3:	fistp  DWORD PTR [eax-0x70a3ade8]
  41f8b9:	pop    ss
  41f8ba:	arpl   bx,sp
  41f8bc:	mov    esp,0xb715da49
  41f8c1:	test   al,0xe5
  41f8c3:	push   cs
  41f8c4:	loop   0x41f8b1
  41f8c6:	mov    bh,0xcc
  41f8c8:	data16 std 
  41f8ca:	or     BYTE PTR [esp+ebx*2],al
  41f8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ce:	sub    al,0x66
  41f8d0:	jp     0x41f8fb
  41f8d2:	stos   DWORD PTR es:[edi],eax
  41f8d3:	(bad)  
  41f8d4:	aad    0x1
  41f8d6:	int3   
  41f8d7:	push   ebx
  41f8d8:	inc    edx
  41f8d9:	sub    BYTE PTR [esi-0x7bccb533],cl
  41f8df:	pop    ss
  41f8e0:	gs mov dh,0xa3
  41f8e3:	inc    esp
  41f8e4:	sbb    BYTE PTR [eax-0x248bd423],bl
  41f8ea:	push   ss
  41f8eb:	(bad)
  41f8ee:	push   0xffffffa6
  41f8f0:	fnsave [esi+ebx*2+0x365fdb48]
  41f8f7:	sub    ebp,DWORD PTR [edi-0x41dbffa1]
  41f8fd:	add    dl,0x74
  41f900:	ja     0x41f89b
  41f902:	sbb    eax,0xf6835fce
  41f907:	adc    edx,DWORD PTR [edi+0x6cb2b4f7]
  41f90d:	and    dh,ch
  41f90f:	in     eax,0x2f
  41f911:	sbb    eax,0xf2c1a262
  41f916:	pushf  
  41f917:	adc    BYTE PTR [esi-0x7],ah
  41f91a:	push   0xa6165e23
  41f91f:	and    al,0xb7
  41f921:	pop    ebp
  41f922:	push   ecx
  41f923:	arpl   WORD PTR [edi-0x76cefbf1],bx
  41f929:	in     eax,0x83
  41f92b:	shr    BYTE PTR [ecx],0x6e
  41f92e:	mov    ecx,esp
  41f930:	add    edx,DWORD PTR [eax-0xb]
  41f933:	pop    edx
  41f934:	call   0x86dc661e
  41f939:	pop    edi
  41f93a:	xor    BYTE PTR [ebp-0x680e01bd],bl
  41f940:	test   eax,0xdd14ab63
  41f945:	inc    edx
  41f946:	es stos BYTE PTR es:[edi],al
  41f948:	mov    ds:0xdbfb0c61,eax
  41f94d:	push   es
  41f94e:	data16 (bad) 
  41f951:	(bad)  
  41f952:	fild   DWORD PTR [edi+0x70fda75e]
  41f958:	es push edx
  41f95a:	jecxz  0x41f99c
  41f95c:	mov    BYTE PTR [eax+ebx*1+0x37],ch
  41f960:	jp     0x41f963
  41f962:	mov    WORD PTR [edx],ss
  41f964:	push   ss
  41f965:	inc    ecx
  41f966:	push   ecx
  41f967:	push   cs
  41f968:	cmp    bh,bl
  41f96a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f96b:	jle    0x41f997
  41f96d:	cld    
  41f96e:	cmp    DWORD PTR [edx-0x6f0999b],edx
  41f974:	push   ss
  41f975:	pop    ebp
  41f976:	loopne 0x41f95d
  41f978:	inc    esp
  41f979:	push   ss
  41f97a:	lds    eax,FWORD PTR [ecx+0x37]
  41f97d:	cmp    bh,BYTE PTR [esi+0x5c0a0b61]
  41f983:	jo     0x41f94c
  41f985:	push   cs
  41f986:	cmp    al,0x12
  41f988:	add    eax,0x183a04fd
  41f98d:	je     0x41f9ab
  41f98f:	retf   0xafc8
  41f992:	push   es
  41f993:	add    eax,0x4f892f31
  41f998:	lods   al,BYTE PTR ds:[esi]
  41f999:	leave  
  41f99a:	jbe    0x41f96b
  41f99c:	lods   eax,DWORD PTR ds:[esi]
  41f99d:	mov    ebx,0x9a7bb583
  41f9a2:	push   eax
  41f9a3:	sbb    al,0x52
  41f9a5:	dec    edi
  41f9a6:	push   ecx
  41f9a7:	or     ch,BYTE PTR [eax]
  41f9a9:	je     0x41f973
  41f9ab:	aam    0xff
  41f9ad:	dec    ecx
  41f9ae:	push   0xdda42c6e
  41f9b3:	mov    DWORD PTR [ecx+0x28f4986e],esp
  41f9b9:	cmp    eax,0x7ba92ee0
  41f9be:	mov    eax,0x4b8e461e
  41f9c3:	mov    bh,0x1f
  41f9c5:	sbb    eax,DWORD PTR [edx]
  41f9c7:	push   edi
  41f9c8:	cdq    
  41f9c9:	fmul   st(2),st
  41f9cb:	jmp    DWORD PTR [esi+0x1e]
  41f9ce:	or     al,0x5d
  41f9d0:	push   esp
  41f9d1:	mov    eax,ds:0x1ac198fb
  41f9d6:	push   es
  41f9d7:	ss repnz in eax,dx
  41f9da:	dec    esp
  41f9db:	pop    edi
  41f9dc:	int3   
  41f9dd:	retf   0x286a
  41f9e0:	jne    0x41f96d
  41f9e2:	push   0xffffffcf
  41f9e4:	adc    edi,edx
  41f9e6:	jae    0x41f9fd
  41f9e8:	or     bl,dl
  41f9ea:	retf   
  41f9eb:	add    al,0x19
  41f9ed:	stos   BYTE PTR es:[edi],al
  41f9ee:	pop    edi
  41f9ef:	call   0x8bb2076e
  41f9f4:	mov    al,0x8d
  41f9f6:	push   ds
  41f9f7:	sub    ecx,eax
  41f9f9:	fiadd  DWORD PTR [edx+eiz*2+0x249add49]
  41fa00:	jp     0x41f983
  41fa02:	pop    edi
  41fa03:	out    0x9a,al
  41fa05:	mov    ds:0x54642172,al
  41fa0a:	xchg   edx,eax
  41fa0b:	adc    ah,BYTE PTR [edx]
  41fa0d:	push   ecx
  41fa0e:	dec    esi
  41fa0f:	loop   0x41f9b2
  41fa11:	jne    0x41f9a8
  41fa13:	das    
  41fa14:	fimul  WORD PTR [edx+ecx*1+0x75f9fe65]
  41fa1b:	rcl    DWORD PTR [ebx+edx*4],0xaf
  41fa1f:	sbb    DWORD PTR [edx],edi
  41fa21:	add    ebx,DWORD PTR [esi-0x51]
  41fa24:	pop    edx
  41fa25:	inc    esp
  41fa26:	shr    BYTE PTR [esi+0x6d60bb7d],cl
  41fa2c:	loope  0x41f9e2
  41fa2e:	inc    edx
  41fa2f:	lock fiadd WORD PTR [edi-0x1ea4f53c]
  41fa36:	mov    al,ds:0xf138c728
  41fa3b:	or     eax,0xa65ccb74
  41fa40:	in     eax,dx
  41fa41:	adc    ah,bl
  41fa43:	xor    BYTE PTR [edx+0x30517654],dh
  41fa49:	adc    al,0xc
  41fa4b:	clc    
  41fa4c:	sbb    cl,BYTE PTR [esi-0x4b]
  41fa4f:	push   ds
  41fa50:	pop    ecx
  41fa51:	add    BYTE PTR [ebp+0x419547e3],al
  41fa57:	out    dx,eax
  41fa58:	sbb    al,BYTE PTR [ebp+0x36]
  41fa5b:	push   es
  41fa5c:	dec    edi
  41fa5d:	in     ax,0x6f
  41fa60:	lea    edi,[ebx+0x9]
  41fa63:	pop    eax
  41fa64:	stos   BYTE PTR es:[edi],al
  41fa65:	xchg   ebx,edi
  41fa67:	adc    eax,esi
  41fa69:	stos   BYTE PTR es:[edi],al
  41fa6a:	ins    BYTE PTR es:[edi],dx
  41fa6b:	dec    esp
  41fa6c:	add    dh,BYTE PTR [esi+0x36b8657f]
  41fa72:	bound  ecx,QWORD PTR [esi-0x64a2ff45]
  41fa78:	rcr    esp,1
  41fa7a:	ret    0x12b1
  41fa7d:	add    BYTE PTR [ecx+0x57c5708c],0xff
  41fa84:	(bad)  
  41fa85:	or     ecx,DWORD PTR [edi]
  41fa87:	dec    ebp
  41fa88:	or     eax,0x7df9a0db
  41fa8d:	add    ebx,DWORD PTR [ebx+0x24]
  41fa90:	jae    0x41fa2f
  41fa92:	adc    al,0x16
  41fa94:	test   BYTE PTR [ebx+edi*2],cl
  41fa97:	aaa    
  41fa98:	stc    
  41fa99:	ret    0x49af
  41fa9c:	jae    0x41fae3
  41fa9e:	add    al,0x33
  41faa0:	cdq    
  41faa1:	cli    
  41faa2:	xchg   ecx,eax
  41faa3:	pop    ebx
  41faa4:	enter  0x2f52,0x2b
  41faa8:	jb     0x41fa2c
  41faaa:	ja     0x41faee
  41faac:	iret   
  41faad:	pop    ebp
  41faae:	xchg   ecx,eax
  41faaf:	xchg   edx,eax
  41fab0:	out    0x32,eax
  41fab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab3:	pop    ebp
  41fab4:	leave  
  41fab5:	mov    BYTE PTR [esi],al
  41fab7:	scas   al,BYTE PTR es:[edi]
  41fab8:	jns    0x41fac5
  41faba:	pop    ss
  41fabb:	jno    0x41fae4
  41fabd:	xor    al,0xa9
  41fabf:	lods   al,BYTE PTR ds:[esi]
  41fac0:	mov    DWORD PTR [ebp-0x46],eax
  41fac3:	pop    esi
  41fac4:	scas   al,BYTE PTR es:[edi]
  41fac5:	scas   eax,DWORD PTR es:[edi]
  41fac6:	dec    ebp
  41fac7:	fs jp  0x41fb06
  41faca:	scas   al,BYTE PTR es:[edi]
  41facb:	ja     0x41fb13
  41facd:	mov    esp,0xc7af65b4
  41fad2:	sbb    eax,0x88fa24d9
  41fad7:	fwait
  41fad8:	(bad)  
  41fad9:	mov    WORD PTR ds:0xe7f23e8a,?
  41fadf:	(bad)  
  41fae0:	stos   DWORD PTR es:[edi],eax
  41fae1:	cld    
  41fae2:	dec    ecx
  41fae3:	push   edx
  41fae4:	add    BYTE PTR [esi-0x65],al
  41fae7:	xor    BYTE PTR [edi],dl
  41fae9:	push   ebp
  41faea:	mov    ebx,0xb37ce8c9
  41faef:	mov    al,ds:0xb2f72886
  41faf4:	pop    esi
  41faf5:	daa    
  41faf6:	loopne 0x41fabb
  41faf8:	mov    esp,DWORD PTR gs:[edx+0x49]
  41fafc:	retf   
  41fafd:	dec    ebx
  41fafe:	sbb    ecx,DWORD PTR [eax]
  41fb00:	jae    0x41fad8
  41fb02:	mov    ebp,0x15c807c0
  41fb07:	jae    0x41fb24
  41fb09:	rcr    DWORD PTR [ebx],cl
  41fb0b:	cld    
  41fb0c:	mov    ebx,0x79edab65
  41fb11:	mov    dl,0xe5
  41fb13:	inc    esi
  41fb14:	retf   
  41fb15:	gs inc edx
  41fb17:	xor    dh,ah
  41fb19:	retf   
  41fb1a:	ds hlt 
  41fb1c:	cs ror esi,0xf3
  41fb20:	jp     0x41fba0
  41fb22:	ins    DWORD PTR es:[edi],dx
  41fb23:	mov    bh,0x64
  41fb25:	test   esp,ecx
  41fb27:	out    0x60,eax
  41fb29:	add    dl,al
  41fb2b:	mov    bl,0x33
  41fb2d:	inc    eax
  41fb2e:	inc    ecx
  41fb2f:	add    eax,0xa944071b
  41fb34:	jo     0x41fbb2
  41fb36:	mov    ah,0x82
  41fb38:	into   
  41fb39:	mov    ecx,0x716ae0db
  41fb3e:	push   ecx
  41fb3f:	jge    0x41fbbd
  41fb41:	pop    edx
  41fb42:	outs   dx,BYTE PTR ds:[esi]
  41fb43:	and    DWORD PTR [ecx+0x35],edi
  41fb46:	mov    esi,0x5cdf67a1
  41fb4b:	iret   
  41fb4c:	jge    0x41fba2
  41fb4e:	fwait
  41fb4f:	and    BYTE PTR [esi],cl
  41fb51:	or     al,0xad
  41fb53:	aad    0x5a
  41fb55:	push   ds
  41fb56:	arpl   di,cx
  41fb58:	std    
  41fb59:	xchg   esp,eax
  41fb5a:	test   eax,0xeb9b8ae9
  41fb5f:	retf   
  41fb60:	push   0xc17f6a43
  41fb65:	add    bh,BYTE PTR [esi]
  41fb67:	imul   ebx,eax,0x1640ffc6
  41fb6d:	loop   0x41fb96
  41fb6f:	or     esp,DWORD PTR [ecx]
  41fb71:	dec    edx
  41fb72:	out    0x48,eax
  41fb74:	or     BYTE PTR [edi-0x15],bh
  41fb77:	(bad)  
  41fb78:	nop
  41fb79:	mov    eax,ds:0xf29b8326
  41fb7e:	push   cs
  41fb7f:	sbb    eax,0xd38aa9b
  41fb84:	push   edx
  41fb85:	pop    ds
  41fb86:	push   es
  41fb87:	fcom   st(2)
  41fb89:	xor    eax,0xd213a1f3
  41fb8e:	or     eax,0xf4886d20
  41fb93:	push   cs
  41fb94:	les    ecx,FWORD PTR [ebx]
  41fb96:	pop    edx
  41fb97:	into   
  41fb98:	mov    DWORD PTR [ecx],ecx
  41fb9a:	lods   eax,DWORD PTR ds:[esi]
  41fb9b:	xrelease xchg DWORD PTR [edx+0x7eef00ce],edi
  41fba2:	clc    
  41fba3:	add    DWORD PTR [ecx+0x8],ebp
  41fba6:	inc    edx
  41fba7:	aad    0xe
  41fba9:	xchg   esi,eax
  41fbaa:	mov    ds:0x9577a2e8,eax
  41fbaf:	cmp    esp,DWORD PTR [ecx]
  41fbb1:	mov    WORD PTR ds:0x46869246,ss
  41fbb7:	sub    eax,0x817ac9b9
  41fbbc:	aad    0xc4
  41fbbe:	fsub   DWORD PTR [ebx-0x60d9a7f8]
  41fbc4:	add    eax,0x97ef445d
  41fbc9:	push   es
  41fbca:	sub    al,0xbf
  41fbcc:	jmp    0x8d1db532
  41fbd1:	leave  
  41fbd2:	test   BYTE PTR [ebp-0x56],dh
  41fbd5:	or     al,0xec
  41fbd7:	leave  
  41fbd8:	gs jp  0x41fb84
  41fbdb:	sbb    DWORD PTR [esi-0x2a],0x57
  41fbdf:	mov    dh,0xf3
  41fbe1:	xchg   ecx,eax
  41fbe2:	and    eax,0x94e1330d
  41fbe7:	mov    ecx,DWORD PTR [ebp+0x16df7794]
  41fbed:	call   0x2b76:0xc676e6cc
  41fbf4:	jmp    0x8dbf:0x9a833270
  41fbfb:	and    al,BYTE PTR [ecx+0x7f]
  41fbfe:	mov    ah,0x3a
  41fc00:	xchg   ebx,eax
  41fc01:	(bad)  
  41fc02:	sub    WORD PTR [edx-0x79e34eea],0xffab
  41fc0a:	push   eax
  41fc0b:	push   edi
  41fc0c:	xor    ch,BYTE PTR [ebx+0x2d]
  41fc0f:	mov    dh,0x77
  41fc11:	and    dh,BYTE PTR [eax]
  41fc13:	icebp  
  41fc14:	(bad)  
  41fc15:	adc    al,0xb7
  41fc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc18:	mov    DWORD PTR [eax-0x1dabafe9],edi
  41fc1e:	in     al,0x1f
  41fc20:	iret   
  41fc21:	lea    edx,[edx-0x600b1b4d]
  41fc27:	aaa    
  41fc28:	das    
  41fc29:	aam    0xd2
  41fc2b:	or     DWORD PTR es:[ebx+0xf1e2a9b],ecx
  41fc32:	idiv   DWORD PTR [edx-0x13]
  41fc35:	lods   eax,DWORD PTR ds:[esi]
  41fc36:	lods   eax,DWORD PTR ds:[esi]
  41fc37:	inc    esi
  41fc38:	ds mov ah,0x3c
  41fc3b:	sbb    edx,esp
  41fc3d:	push   eax
  41fc3e:	in     eax,0x3
  41fc40:	retf   
  41fc41:	fidivr DWORD PTR [ebx+esi*1+0x54]
  41fc45:	mov    dl,0x6
  41fc47:	add    eax,0x31d26e89
  41fc4c:	cmp    al,0x1b
  41fc4e:	(bad)  
  41fc4f:	out    0x75,al
  41fc51:	and    DWORD PTR [ecx-0x7f],ecx
  41fc54:	push   eax
  41fc55:	stos   BYTE PTR es:[edi],al
  41fc56:	xchg   ebp,eax
  41fc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc58:	and    al,0xd5
  41fc5a:	mov    gs,edx
  41fc5c:	jle    0x41fc0b
  41fc5e:	daa    
  41fc5f:	sbb    DWORD PTR [edi+0x6a663281],esp
  41fc65:	je     0x41fcab
  41fc67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc68:	scas   al,BYTE PTR es:[edi]
  41fc69:	jo     0x41fbf6
  41fc6b:	jg     0x41fc37
  41fc6d:	lock in al,dx
  41fc6f:	sbb    eax,0x6eb6b426
  41fc74:	aad    0x0
  41fc76:	loop   0x41fc47
  41fc78:	xchg   edx,eax
  41fc79:	mul    DWORD PTR fs:[edx]
  41fc7c:	bound  ebp,QWORD PTR [esi]
  41fc7e:	jnp    0x41fc60
  41fc80:	jne    0x41fd01
  41fc82:	sub    eax,0x2988503c
  41fc87:	xlat   BYTE PTR ds:[ebx]
  41fc88:	daa    
  41fc89:	out    dx,eax
  41fc8a:	idiv   ebp
  41fc8c:	lods   al,BYTE PTR ds:[esi]
  41fc8d:	repnz daa 
  41fc8f:	lea    edx,[esi+0x727fc4d4]
  41fc95:	test   BYTE PTR [eax],cl
  41fc97:	(bad)  
  41fc98:	lock cli 
  41fc9a:	outs   dx,BYTE PTR ds:[esi]
  41fc9b:	add    edi,eax
  41fc9d:	dec    ecx
  41fc9e:	ja     0x41fcf4
  41fca0:	jbe    0x41fc81
  41fca2:	push   0x12
  41fca4:	in     eax,dx
  41fca5:	pop    es
  41fca6:	lock cs xor ecx,ebx
  41fcaa:	mov    edi,0xb802f00d
  41fcaf:	jl     0x41fd1e
  41fcb1:	pop    ebx
  41fcb2:	inc    ebp
  41fcb3:	dec    esp
  41fcb4:	pop    edi
  41fcb5:	dec    esp
  41fcb6:	dec    edx
  41fcb7:	sub    bh,cl
  41fcb9:	adc    DWORD PTR [ebp-0x700112f2],0xffffffdf
  41fcc0:	pop    ebp
  41fcc1:	pop    edx
  41fcc2:	push   ds
  41fcc3:	add    BYTE PTR [ebp+0x2a0fab71],ah
  41fcc9:	xor    ebp,ecx
  41fccb:	shl    esi,cl
  41fccd:	das    
  41fcce:	jns    0x41fc82
  41fcd0:	cli    
  41fcd1:	jg     0x41fc89
  41fcd3:	call   0x8d29:0x10b6ee4a
  41fcda:	bound  esi,QWORD PTR [ebx-0x471eab5a]
  41fce0:	pop    ebx
  41fce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce2:	xchg   BYTE PTR ds:0xc9f1cb04,bl
  41fce8:	out    0xf1,eax
  41fcea:	xor    DWORD PTR [esi-0x5e],0x49
  41fcee:	inc    BYTE PTR [edi]
  41fcf0:	jp     0x41fc7e
  41fcf2:	nop
  41fcf3:	sbb    al,0x5b
  41fcf5:	pop    esp
  41fcf6:	push   edx
  41fcf7:	adc    eax,0x2d24f154
  41fcfc:	ins    BYTE PTR es:[edi],dx
  41fcfd:	and    DWORD PTR cs:[ebx],0xffffff92
  41fd01:	fmul   st,st(1)
  41fd03:	shl    BYTE PTR [ebp+0x45],cl
  41fd06:	sub    edi,DWORD PTR [esi+0x5]
  41fd09:	call   0x34b738ba
  41fd0e:	clc    
  41fd0f:	jno    0x41fd37
  41fd11:	fisub  DWORD PTR [edx+0x3c]
  41fd14:	lods   al,BYTE PTR ds:[esi]
  41fd15:	jecxz  0x41fd89
  41fd17:	adc    eax,0x666ec179
  41fd1c:	adc    al,0xfd
  41fd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd1f:	call   0xc0031715
  41fd24:	out    dx,eax
  41fd25:	push   edx
  41fd26:	cmp    ah,ch
  41fd28:	jl     0x41fce0
  41fd2a:	test   al,0x1b
  41fd2d:	dec    eax
  41fd2e:	iret   
  41fd2f:	xchg   BYTE PTR [ebp-0x65c25e6e],cl
  41fd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd36:	push   ss
  41fd37:	pop    edi
  41fd38:	lock mov edx,0xcf5989ca
  41fd3e:	out    dx,eax
  41fd3f:	outs   dx,BYTE PTR ds:[esi]
  41fd40:	into   
  41fd41:	mov    DWORD PTR [edi+ecx*4+0x18],ecx
  41fd45:	sub    al,0x7e
  41fd47:	imul   ebx,edx,0x63
  41fd4a:	sbb    DWORD PTR [edi-0x30ee751e],edi
  41fd50:	cmc    
  41fd51:	ds retf 
  41fd53:	mov    bh,BYTE PTR [esi-0x52f7129f]
  41fd59:	mov    al,0xdd
  41fd5b:	inc    edi
  41fd5c:	shr    DWORD PTR [edi],cl
  41fd5e:	test   dl,ch
  41fd60:	cs mov edx,0x96a29503
  41fd66:	js     0x41fd9f
  41fd68:	je     0x41fdbe
  41fd6a:	hlt    
  41fd6b:	repz inc edi
  41fd6d:	stos   BYTE PTR es:[edi],al
  41fd6e:	cli    
  41fd6f:	lock call 0x837a:0x4065fb82
  41fd77:	popf   
  41fd78:	mov    al,ds:0x6752e82f
  41fd7d:	push   esi
  41fd7e:	push   ebp
  41fd7f:	mov    esi,0x5cdf5bf5
  41fd84:	ins    DWORD PTR es:[edi],dx
  41fd85:	leave  
  41fd86:	sbb    al,0x5f
  41fd88:	adc    cl,cl
  41fd8a:	loop   0x41fd8d
  41fd8c:	ds les sp,DWORD PTR gs:[ebx+0x74]
  41fd92:	enter  0xc75d,0xd
  41fd96:	aaa    
  41fd97:	loop   0x41fdae
  41fd99:	in     eax,0xd5
  41fd9b:	test   DWORD PTR [esi],0xe2a21d38
  41fda1:	mov    dh,0xe
  41fda3:	stc    
  41fda4:	sub    bl,BYTE PTR [esi-0x14]
  41fda7:	imul   eax,eax,0xc0c0c0c0
  41fdad:	rol    al,0xc0
  41fdb0:	rol    al,0xc0
  41fdb3:	rol    al,0xc0
  41fdb6:	rol    al,0xc0
  41fdb9:	rol    al,0xc0
  41fdbc:	rol    al,0xc0
  41fdbf:	rol    al,0xc0
  41fdc2:	rol    al,0xc0
  41fdc5:	rol    al,0xc0
  41fdc8:	and    DWORD PTR [ebx+edi*4],esi
  41fdcb:	jp     0x41fdea
  41fdcd:	in     al,dx
  41fdce:	(bad)  
  41fdcf:	sbb    al,0x11
  41fdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd2:	stos   BYTE PTR es:[edi],al
  41fdd3:	jbe    0x41fe40
  41fdd5:	shl    DWORD PTR [ebx],1
  41fdd7:	and    DWORD PTR [ebx+0x24521c5b],ebp
  41fddd:	lods   al,BYTE PTR ds:[esi]
  41fdde:	mov    edi,0x17e0b25b
  41fde3:	jecxz  0x41fe1f
  41fde5:	jb     0x41fd88
  41fde7:	jb     0x41fde5
  41fde9:	retf   0x4dfb
  41fdec:	inc    esp
  41fded:	add    bh,BYTE PTR [eax-0x95bcb3f]
  41fdf3:	and    BYTE PTR [edx],0x0
  41fdf6:	xor    BYTE PTR [eax],ch
  41fdf8:	cld    
  41fdf9:	cli    
  41fdfa:	lea    edx,[edi-0x18]
  41fdfd:	lds    esi,FWORD PTR [ebx-0x4e692881]
  41fe03:	ret    
  41fe04:	pop    esi
  41fe05:	fwait
  41fe06:	test   DWORD PTR [edx+0x11],esp
  41fe09:	sub    al,0xd0
  41fe0b:	mul    DWORD PTR [esi]
  41fe0d:	mov    eax,0xa70203fa
  41fe12:	aad    0x9a
  41fe14:	dec    esi
  41fe15:	add    DWORD PTR [edx+0x6d6ae89c],esi
  41fe1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe1c:	imul   edi,DWORD PTR [ebp-0xf4d0598],0xffffffe7
  41fe23:	les    edx,FWORD PTR [ebx]
  41fe25:	hlt    
  41fe26:	dec    ebp
  41fe27:	loop   0x41fde2
  41fe29:	je     0x41fea1
  41fe2b:	das    
  41fe2c:	cld    
  41fe2d:	mov    dl,0xe5
  41fe2f:	dec    esi
  41fe30:	and    bl,cl
  41fe32:	mov    edi,0x98e579ce
  41fe37:	(bad)  
  41fe38:	popa   
  41fe39:	test   eax,0x9b4c2a4d
  41fe3e:	mov    DWORD PTR [ecx-0x4fce1a34],esp
  41fe44:	(bad)  
  41fe46:	cdq    
  41fe47:	ins    BYTE PTR es:[edi],dx
  41fe48:	mov    al,0x70
  41fe4a:	dec    ebx
  41fe4b:	pop    ebx
  41fe4c:	retf   
  41fe4d:	in     eax,dx
  41fe4e:	push   ss
  41fe4f:	xor    eax,0x8b5a14a9
  41fe54:	inc    edx
  41fe55:	(bad)  
  41fe56:	test   BYTE PTR [eax],0xf7
  41fe59:	rcr    ebx,0xfc
  41fe5c:	add    eax,DWORD PTR [ebp+0x12]
  41fe5f:	mov    ah,0xa4
  41fe61:	mov    esp,0xb2a47c8c
  41fe66:	xchg   BYTE PTR [ebx],dh
  41fe68:	inc    ebp
  41fe69:	ins    DWORD PTR es:[edi],dx
  41fe6a:	scas   eax,DWORD PTR es:[edi]
  41fe6b:	mov    bh,BYTE PTR [esi-0x12a9bf78]
  41fe71:	aad    0x96
  41fe73:	dec    esi
  41fe74:	push   ebp
  41fe75:	lea    edi,[ebx+0x48358155]
  41fe7b:	sub    DWORD PTR [esi+ecx*1+0x9],0xffffff8a
  41fe80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe81:	mov    ds:0xff5af7ba,eax
  41fe86:	jae    0x41fefa
  41fe88:	loope  0x41fee6
  41fe8a:	aaa    
  41fe8b:	and    bl,BYTE PTR [edx]
  41fe8d:	xchg   ecx,eax
  41fe8e:	mov    edx,DWORD PTR [ebx+0x65]
  41fe91:	cmp    al,0x92
  41fe93:	pop    ecx
  41fe94:	shl    BYTE PTR [edx],0xea
  41fe97:	(bad)  
  41fe98:	jmp    0xe68f16fb
  41fe9d:	push   0x55f27f5f
  41fea2:	mov    es,WORD PTR [ebx]
  41fea4:	(bad)  
  41fea5:	cs shl bh,cl
  41fea8:	daa    
  41fea9:	lods   al,BYTE PTR ds:[esi]
  41feaa:	icebp  
  41feab:	retf   
  41feac:	div    DWORD PTR [edi-0x4885379]
  41feb2:	sub    edx,esi
  41feb4:	jle    0x41ff00
  41feb6:	xchg   ebp,eax
  41feb7:	inc    ebx
  41feb8:	inc    ebx
  41feb9:	outs   dx,BYTE PTR ds:[esi]
  41feba:	(bad)  [ebp+0x78b2035d]
  41fec0:	push   esp
  41fec1:	int3   
  41fec2:	cwde   
  41fec3:	or     eax,0x980d8984
  41fec8:	push   ebp
  41fec9:	xor    bh,BYTE PTR [ebp+eax*1-0x1a43dce0]
  41fed0:	add    ebx,edx
  41fed2:	add    eax,0x228274bf
  41fed7:	test   al,0xba
  41fed9:	sub    dl,BYTE PTR [esi+0x7160c32f]
  41fedf:	pop    ebp
  41fee0:	lahf   
  41fee1:	xchg   edi,eax
  41fee2:	not    al
  41fee4:	jns    0x41fe78
  41fee6:	(bad)  
  41fee7:	bound  ecx,QWORD PTR [ecx+0x580c15df]
  41feed:	repnz pop edx
  41feef:	mov    ah,0x75
  41fef1:	xchg   edi,eax
  41fef2:	(bad)  
  41fef3:	fnstsw WORD PTR [esi]
  41fef5:	xchg   edi,eax
  41fef6:	scas   eax,DWORD PTR es:[edi]
  41fef7:	out    0xa6,eax
  41fef9:	add    edi,DWORD PTR [ebx+0x8]
  41fefc:	mov    WORD PTR [edi+0x0],ds
  41feff:	dec    edx
  41ff00:	cld    
  41ff01:	test   BYTE PTR [edx],bl
  41ff03:	aaa    
  41ff04:	sbb    al,BYTE PTR [ecx]
  41ff06:	cli    
  41ff07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff08:	ja     0x41ff73
  41ff0a:	or     eax,0xf84088f6
  41ff0f:	repz aad 0xf2
  41ff12:	sti    
  41ff13:	or     al,0x8
  41ff15:	sbb    DWORD PTR [ecx-0x1b],0x7e
  41ff19:	mov    dh,0xe0
  41ff1b:	outs   dx,BYTE PTR ds:[esi]
  41ff1c:	and    al,0xe0
  41ff1e:	or     esi,DWORD PTR [eax+0x6a]
  41ff21:	(bad)  
  41ff22:	rol    BYTE PTR [esi-0x80],cl
  41ff25:	pop    ecx
  41ff26:	aam    0x4b
  41ff28:	aas    
  41ff29:	stc    
  41ff2a:	adc    esp,ecx
  41ff2c:	call   0x50e80266
  41ff31:	dec    esi
  41ff32:	xchg   edx,eax
  41ff33:	cmp    ebx,DWORD PTR [edi+0x44b7826c]
  41ff39:	sbb    esi,esi
  41ff3b:	leave  
  41ff3c:	cmp    al,0x1
  41ff3e:	int    0xe1
  41ff40:	dec    DWORD PTR [ecx+0x49]
  41ff43:	sbb    ecx,ecx
  41ff45:	push   ss
  41ff46:	mov    BYTE PTR [edi-0x38de9a4],dl
  41ff4c:	(bad)  
  41ff4d:	mov    esi,0x4838c7d2
  41ff52:	retf   
  41ff53:	add    DWORD PTR [esi-0x79caf370],edi
  41ff59:	mov    esi,0x9f504eb2
  41ff5e:	sar    BYTE PTR [ebx+0x21],1
  41ff61:	icebp  
  41ff62:	sbb    al,0x41
  41ff64:	or     ah,al
  41ff66:	lahf   
  41ff67:	push   edi
  41ff68:	mov    al,0x6f
  41ff6a:	push   cs
  41ff6b:	or     bh,BYTE PTR [eax+eax*4-0x5]
  41ff6f:	and    ecx,DWORD PTR [ecx+ebx*8-0x35ece820]
  41ff76:	push   esp
  41ff77:	xchg   ebx,eax
  41ff78:	xchg   esi,eax
  41ff79:	jbe    0x41ff81
  41ff7b:	xor    DWORD PTR [edx+0x4c2a4ea6],ebp
  41ff81:	push   esp
  41ff82:	xlat   BYTE PTR ds:[ebx]
  41ff83:	jne    0x41ffd3
  41ff85:	repz mov ch,0x51
  41ff88:	jp     0x41ff88
  41ff8a:	in     al,dx
  41ff8b:	retf   0x7568
  41ff8e:	iret   
  41ff8f:	fs cli 
  41ff91:	out    0x8e,al
  41ff93:	mov    ds:0x462f606c,al
  41ff98:	adc    eax,0x8e49533a
  41ff9d:	and    DWORD PTR [ebx+0x76],ebp
  41ffa0:	sub    BYTE PTR [ebp-0xc],dh
  41ffa3:	mov    BYTE PTR [eax+0xb],bl
  41ffa6:	fsubr  QWORD PTR [ecx+ebp*1-0x4ed7ec1a]
  41ffad:	cmp    esi,DWORD PTR [ecx-0x63154630]
  41ffb3:	and    edx,DWORD PTR [eax+ebx*2-0xd]
  41ffb7:	push   edx
  41ffb8:	cdq    
  41ffb9:	mov    edi,DWORD PTR ds:0x7b3b26d
  41ffbf:	fiadd  DWORD PTR [ebx+ebp*8-0x32]
  41ffc3:	imul   DWORD PTR [edi-0x35334c9b]
  41ffc9:	in     al,dx
  41ffca:	enter  0xb2da,0x1e
  41ffce:	mov    ah,0xd1
  41ffd0:	pop    es
  41ffd1:	jno    0x42001d
  41ffd3:	leave  
  41ffd4:	mov    bh,0x7f
  41ffd6:	jecxz  0x420001
  41ffd8:	push   esp
  41ffd9:	adc    dl,dh
  41ffdb:	xlat   BYTE PTR ds:[ebx]
  41ffdc:	cmp    eax,0xb1429ebf
  41ffe1:	stc    
  41ffe2:	xchg   DWORD PTR [ebx],ebx
  41ffe4:	add    ebp,DWORD PTR [edx]
  41ffe6:	mov    cl,0xcb
  41ffe8:	mov    DWORD PTR [ebp-0x32],esp
  41ffeb:	push   ds
  41ffec:	mov    ah,0x42
  41ffee:	xchg   esi,eax
  41ffef:	je     0x420012
  41fff1:	jmp    0x41ffc5
  41fff3:	pusha  
  41fff4:	imul   ebx,DWORD PTR [ebp-0x3f58c19b],0xffffff89
  41fffb:	frstor [esi-0x6]
  41fffe:	or     cl,bh
  420000:	push   esp
  420001:	xchg   ebx,eax
  420002:	sub    ebx,DWORD PTR [edx+0x33d9fe05]
  420008:	push   eax
  420009:	jmp    0xaf48bb15
  42000e:	scas   al,BYTE PTR es:[edi]
  42000f:	push   esi
  420010:	sahf   
  420011:	int3   
  420012:	dec    ecx
  420013:	pop    edi
  420014:	pop    ebp
  420015:	mov    al,ds:0x5329c128
  42001a:	mov    ebx,0xee22fdd5
  42001f:	sub    ch,BYTE PTR [esi]
  420021:	test   eax,ebp
  420023:	icebp  
  420024:	or     BYTE PTR [edx+edx*1],dh
  420027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420028:	test   DWORD PTR [edi+0x62],ebp
  42002b:	arpl   WORD PTR [edi+0x1a942df0],di
  420031:	xchg   esp,eax
  420032:	xor    eax,0xb32ab1c7
  420037:	lods   eax,DWORD PTR ds:[esi]
  420038:	ins    DWORD PTR es:[edi],dx
  420039:	mov    ds:0x423d2ae7,eax
  42003e:	dec    DWORD PTR [ebp+0x70]
  420041:	dec    esp
  420042:	cmp    eax,DWORD PTR [edx+0x3e]
  420045:	mov    ecx,0xbc080aa4
  42004a:	test   BYTE PTR [ecx],bl
  42004c:	inc    edi
  42004d:	data16 mov ds:0x7b88ec4f,al
  420053:	dec    edi
  420054:	push   edi
  420055:	pop    DWORD PTR [edx-0x25]
  420058:	rcl    DWORD PTR [esi+edi*4+0x1e],1
  42005c:	adc    esi,DWORD PTR [ebx]
  42005e:	adc    eax,0x44b516d5
  420063:	jns    0x4200dd
  420065:	popf   
  420066:	inc    esi
  420067:	leave  
  420068:	mov    ds:0x4a9ab6b0,eax
  42006d:	(bad)  
  42006e:	xor    BYTE PTR fs:[ebp+0x2a82f77c],al
  420075:	push   ds
  420076:	adc    ch,BYTE PTR [edx-0x3fcf685e]
  42007c:	mov    bh,0x89
  42007e:	fisubr DWORD PTR [edx+0x63]
  420081:	in     eax,0x6d
  420083:	jl     0x4200df
  420085:	daa    
  420086:	jge    0x4200a9
  420088:	push   cs
  420089:	jp     0x4200e9
  42008b:	jbe    0x420021
  42008d:	js     0x420073
  42008f:	fcomp  st(0)
  420091:	mov    BYTE PTR [ecx+0x6c],al
  420094:	dec    esi
  420095:	mov    ebp,0xfe7abf5f
  42009a:	or     DWORD PTR [edx-0x4b],edi
  42009d:	push   ds
  42009e:	push   edx
  42009f:	mov    BYTE PTR [ebx+esi*2+0x4a79fbd4],ch
  4200a6:	cmp    ch,BYTE PTR [edi+0x32]
  4200a9:	dec    ecx
  4200aa:	push   esi
  4200ab:	ss xchg edx,eax
  4200ad:	test   al,0xdf
  4200b0:	jle    0x420060
  4200b2:	sub    eax,0xe9d37c11
  4200b7:	loop   0x420045
  4200b9:	jp     0x4200af
  4200bb:	retf   0x7a31
  4200be:	and    edx,DWORD PTR [ecx+0x55]
  4200c1:	mov    cr2,esi
  4200c4:	sbb    al,0xfc
  4200c6:	iret   
  4200c7:	push   cs
  4200c8:	cmp    BYTE PTR es:[ebx],bh
  4200cb:	aad    0x1c
  4200cd:	stos   BYTE PTR es:[edi],al
  4200ce:	outs   dx,BYTE PTR ds:[esi]
  4200cf:	xchg   edx,eax
  4200d0:	add    eax,0xffe0a21c
  4200d5:	mov    ecx,0x4cd4fe65
  4200da:	and    eax,0x21
  4200dd:	scas   al,BYTE PTR es:[edi]
  4200de:	fmul   DWORD PTR [ebx]
  4200e0:	add    eax,0x5bb51222
  4200e5:	pop    ebp
  4200e6:	push   edx
  4200e7:	xchg   ecx,eax
  4200e8:	ficom  DWORD PTR ss:[esi-0x55]
  4200ec:	sub    al,0x37
  4200ee:	rol    BYTE PTR [eax+0x632e0927],1
  4200f4:	and    bl,BYTE PTR [ebx]
  4200f6:	repnz sbb bh,cl
  4200f9:	inc    ebx
  4200fa:	dec    esp
  4200fb:	add    ch,BYTE PTR [edi-0x4d9edcda]
  420101:	scas   eax,DWORD PTR es:[edi]
  420102:	inc    esp
  420103:	(bad)  
  420104:	ds mov bh,0xe9
  420107:	jb     0x4200ee
  420109:	add    eax,0x1420016
  42010e:	add    eax,ebx
  420110:	push   ecx
  420111:	add    al,0xad
  420113:	in     eax,0xbd
  420115:	cmp    ecx,DWORD PTR ds:0x8cc97f5b
  42011b:	sbb    ch,BYTE PTR [ebx-0x60]
  42011e:	sahf   
  42011f:	mov    ah,0x8e
  420121:	ins    BYTE PTR es:[edi],dx
  420122:	imul   ecx,DWORD PTR [ebx+0x5d],0x28
  420126:	call   0xae66:0x9c8b93ea
  42012d:	inc    ecx
  42012e:	jg     0x4200d7
  420130:	gs in  al,dx
  420132:	dec    ecx
  420133:	(bad)  
  420134:	(bad)  
  420136:	sub    al,0xc9
  420138:	repz mov ch,0xa2
  42013b:	lods   eax,DWORD PTR ds:[esi]
  42013c:	fcmovnu st,st(5)
  42013e:	pop    ds
  42013f:	xor    eax,0xd6473cae
  420144:	adc    al,BYTE PTR [ebp+0x1a147ce7]
  42014a:	adc    BYTE PTR [ebx-0x2f],0x3d
  42014e:	pop    ss
  42014f:	mov    bl,dl
  420151:	test   ah,ah
  420153:	pop    ecx
  420154:	jae    0x4201cc
  420156:	retf   
  420157:	mov    cl,0x69
  420159:	push   es
  42015a:	mov    ds:0xffd8e157,eax
  42015f:	cs in  eax,0x4d
  420162:	cli    
  420163:	(bad)  
  420164:	aas    
  420165:	leave  
  420166:	add    eax,0xbb68eeb
  42016b:	and    eax,0xeb902551
  420170:	(bad)  
  420171:	aad    0x10
  420173:	lahf   
  420174:	inc    edx
  420175:	in     al,0xe
  420177:	aas    
  420178:	push   esp
  420179:	lahf   
  42017a:	mov    esp,0xe4fcec03
  42017f:	mov    DWORD PTR [esi],esp
  420181:	loop   0x4201d1
  420183:	aaa    
  420184:	test   ch,bh
  420186:	dec    ebx
  420187:	fild   QWORD PTR [ecx+0x47048b12]
  42018d:	fld    DWORD PTR [esp+ecx*8+0x3a56e130]
  420194:	or     bh,BYTE PTR [edi]
  420196:	out    dx,al
  420197:	das    
  420198:	ror    BYTE PTR gs:[edi-0x1f],1
  42019c:	sbb    cl,dl
  42019e:	xor    al,0xcd
  4201a0:	mov    bl,0x6
  4201a2:	xchg   ebp,eax
  4201a3:	shl    DWORD PTR [edx+edx*1],0x5b
  4201a7:	fadd   QWORD PTR [ecx+0x645dc80c]
  4201ad:	dec    edi
  4201ae:	(bad)  
  4201af:	sub    BYTE PTR [ecx+0x24d99d38],dh
  4201b5:	add    al,0xd9
  4201b7:	sbb    al,0x20
  4201b9:	test   eax,0xd851ca96
  4201be:	push   edx
  4201bf:	cmp    eax,0x92d0df07
  4201c4:	mov    BYTE PTR [eax],cl
  4201c6:	sbb    eax,0xf160b552
  4201cb:	add    BYTE PTR [ebx+0x7cefb12c],dl
  4201d1:	(bad)  
  4201d2:	xchg   edx,eax
  4201d3:	mov    ds:0xd0be2bd0,al
  4201d8:	nop
  4201d9:	in     eax,dx
  4201da:	neg    BYTE PTR [ebx+0x5a]
  4201dd:	and    ch,BYTE PTR fs:[edi]
  4201e0:	in     al,0xca
  4201e2:	popf   
  4201e3:	lods   al,BYTE PTR ds:[esi]
  4201e4:	pop    esp
  4201e5:	jb     0x420242
  4201e7:	je     0x42018b
  4201e9:	jmp    0xb530:0x2a70caf
  4201f0:	adc    al,0x5e
  4201f2:	pop    esp
  4201f3:	jg     0x420236
  4201f5:	rol    DWORD PTR [edi-0x71],0x76
  4201f9:	shl    DWORD PTR [ebx],1
  4201fb:	push   es
  4201fc:	xchg   cl,bl
  4201fe:	push   eax
  4201ff:	int3   
  420200:	mov    bh,0x55
  420202:	pop    esp
  420203:	mov    al,0x48
  420205:	mov    bl,BYTE PTR [ebx+0x38]
  420208:	scas   eax,DWORD PTR es:[edi]
  420209:	ss jnp 0x420211
  42020c:	inc    eax
  42020d:	sbb    al,0x92
  42020f:	xor    al,0x32
  420211:	cs into 
  420213:	retf   0x2d63
  420216:	push   es
  420217:	pusha  
  420218:	daa    
  420219:	xlat   BYTE PTR ds:[ebx]
  42021a:	loopne 0x420245
  42021c:	jmp    0x7a89:0xed35f34d
  420223:	pusha  
  420224:	and    eax,0x37cff209
  420229:	shr    edx,cl
  42022b:	adc    al,0x1e
  42022d:	inc    eax
  42022e:	je     0x42022e
  420230:	pop    eax
  420231:	dec    edi
  420232:	add    al,0x3d
  420234:	call   0x7d493a3c
  420239:	push   edi
  42023a:	cdq    
  42023b:	push   edi
  42023c:	pop    esi
  42023d:	das    
  42023e:	mov    ebp,0x2485f13e
  420243:	leave  
  420244:	push   ecx
  420245:	mov    gs,WORD PTR [eax+0x7a67b304]
  42024b:	xchg   DWORD PTR [ebp+0x1c],ebp
  42024e:	jnp    0x4202a8
  420250:	pop    ecx
  420251:	retf   
  420252:	inc    eax
  420253:	pop    ecx
  420254:	jnp    0x42026d
  420256:	out    dx,eax
  420257:	mov    cl,BYTE PTR [edi-0x5e]
  42025a:	clts   
  42025c:	push   esp
  42025d:	sub    bl,bh
  42025f:	addr16 jb 0x42020d
  420262:	ret    0x1abf
  420265:	pop    ss
  420266:	push   ecx
  420267:	and    DWORD PTR [edx+ebx*8-0x5b],ebp
  42026b:	inc    esi
  42026c:	test   ebx,edi
  42026e:	scas   eax,DWORD PTR es:[edi]
  42026f:	adc    eax,0x3a9db59
  420274:	push   eax
  420275:	or     al,0xb5
  420277:	js     0x4202ab
  420279:	ds mov edi,0x9ec0e290
  42027f:	dec    eax
  420280:	dec    ecx
  420281:	xchg   ecx,eax
  420282:	mov    edx,0x91addf6f
  420287:	cdq    
  420288:	js     0x420285
  42028a:	xchg   esi,eax
  42028b:	pop    esp
  42028c:	jp     0x420306
  42028e:	jp     0x420265
  420290:	sbb    edx,edx
  420292:	mov    bl,0xe0
  420294:	js     0x420231
  420296:	(bad)  
  420297:	jle    0x4202b8
  420299:	pushw  ds
  42029b:	push   edi
  42029c:	iret   
  42029d:	mov    edx,0x4ee36c82
  4202a2:	cmp    BYTE PTR [edx+0x53],ah
  4202a5:	loope  0x420287
  4202a7:	(bad)  
  4202a8:	(bad)  
  4202aa:	(bad)  
  4202ab:	loopne 0x420245
  4202ad:	mov    esi,0xd8246100
  4202b2:	add    esi,DWORD PTR [eiz*1+0x1c77c547]
  4202b9:	xor    eax,0x7ea9d4d1
  4202be:	mov    ds:0x66e73b8d,al
  4202c3:	adc    BYTE PTR [eax-0x4e],0xc2
  4202c7:	mov    al,0xc0
  4202c9:	xchg   BYTE PTR [edi+0x39],ch
  4202cc:	pop    edi
  4202cd:	loop   0x4202bb
  4202cf:	xchg   esi,eax
  4202d0:	lods   eax,DWORD PTR ds:[esi]
  4202d1:	(bad)  
  4202d2:	fiadd  WORD PTR [eax]
  4202d4:	fild   DWORD PTR [ebp+0x35e38f84]
  4202da:	xchg   al,al
  4202dc:	outs   dx,DWORD PTR ds:[esi]
  4202dd:	jbe    0x4202da
  4202df:	jmp    0x1318e57d
  4202e4:	inc    ebp
  4202e5:	mov    ecx,DWORD PTR [ecx+ebx*1+0x5f3d9bc9]
  4202ec:	dec    edi
  4202ed:	mov    bl,0x51
  4202ef:	cmp    bl,BYTE PTR [bp-0x7a]
  4202f3:	pop    ds
  4202f4:	fiadd  DWORD PTR [eax-0x6a]
  4202f7:	aam    0x98
  4202f9:	enter  0xbd0,0x5f
  4202fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202fe:	psubusb mm6,QWORD PTR [ebx-0x3fdc6394]
  420305:	mov    eax,0x98b6a6bb
  42030a:	mov    ebx,0xf48a3b28
  42030f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420310:	push   eax
  420311:	loop   0x420354
  420313:	rcr    BYTE PTR [eax-0x6e],cl
  420316:	sbb    eax,0xcf054300
  42031b:	daa    
  42031c:	mov    ebp,0xea158dc8
  420321:	mov    eax,ds:0xb2f6e447
  420326:	lods   eax,DWORD PTR ds:[esi]
  420327:	aas    
  420328:	cdq    
  420329:	xchg   ebx,eax
  42032a:	push   edx
  42032b:	xor    eax,0x6129647
  420330:	addr16 jns 0x420314
  420333:	and    ebx,DWORD PTR [ebp+0x7]
  420336:	test   BYTE PTR [esi+0x423992a7],dl
  42033c:	pop    esi
  42033d:	inc    ebx
  42033e:	xor    BYTE PTR [edi],cl
  420340:	push   ebp
  420341:	mov    bl,0xba
  420343:	out    0x77,al
  420345:	pop    ebx
  420346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420347:	dec    ebp
  420348:	mov    bl,0x8f
  42034a:	retf   
  42034b:	xchg   edx,eax
  42034c:	inc    esi
  42034d:	arpl   bp,cx
  42034f:	push   ecx
  420350:	xor    al,0x60
  420352:	push   ebx
  420353:	aad    0xda
  420355:	paddsw mm7,QWORD PTR [edx-0x2e]
  420359:	out    0x32,al
  42035b:	sub    eax,0xf797e4e3
  420360:	push   esi
  420361:	call   0x33a6baff
  420366:	mov    cl,0x38
  420368:	xchg   ebx,eax
  420369:	push   esp
  42036a:	xchg   ebp,eax
  42036b:	les    eax,FWORD PTR [esi+0x1f]
  42036e:	inc    ebp
  42036f:	push   ecx
  420370:	jg     0x42034c
  420372:	jbe    0x4203d4
  420374:	dec    ecx
  420375:	sbb    DWORD PTR [ebx-0x79],edx
  420378:	loope  0x420313
  42037a:	push   esi
  42037b:	jle    0x42035b
  42037d:	inc    esi
  42037e:	test   al,0x7f
  420380:	call   0xe79a:0xfb5617dd
  420387:	pop    DWORD PTR [eax+ebx*4-0x71]
  42038b:	adc    edi,DWORD PTR [ebp+ebx*1-0x64]
  42038f:	(bad)  
  420390:	jmp    0x8b657389
  420395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420396:	mov    ecx,0x3b45c371
  42039b:	mov    ecx,0x6560e60f
  4203a0:	pop    eax
  4203a1:	push   esi
  4203a2:	mov    ds:0xf22e6f9e,eax
  4203a7:	fld    QWORD PTR [ebx-0x59ddec02]
  4203ad:	sub    bh,BYTE PTR [ebp+0x25b2ee20]
  4203b3:	xchg   edi,eax
  4203b4:	inc    esi
  4203b5:	dec    edi
  4203b6:	and    esi,DWORD PTR [ebp-0x62]
  4203b9:	xchg   esi,eax
  4203ba:	sbb    dl,ch
  4203bc:	loope  0x420434
  4203be:	mov    ebp,0x92d67b62
  4203c3:	(bad)  
  4203c4:	loop   0x42034a
  4203c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c7:	push   ecx
  4203c8:	adc    eax,0x4600e8f4
  4203cd:	loop   0x420368
  4203cf:	fst    DWORD PTR ds:0x432f14ca
  4203d5:	push   esi
  4203d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d7:	sbb    DWORD PTR [eax],edi
  4203d9:	and    ebp,ecx
  4203db:	and    eax,0x71303fc6
  4203e0:	inc    edi
  4203e1:	mov    esi,cs
  4203e3:	shl    DWORD PTR [edx+0x62],1
  4203e6:	ds out 0xe3,eax
  4203e9:	fstp   TBYTE PTR [edx-0x7d087b6b]
  4203ef:	imul   ebx,DWORD PTR [edx-0x78],0xffffffd2
  4203f3:	dec    ebp
  4203f4:	jne    0x420413
  4203f6:	mov    cl,0x1b
  4203f8:	es mov edx,eax
  4203fb:	ja     0x42043d
  4203fd:	xor    ch,BYTE PTR [ecx-0x46e47c99]
  420403:	shr    BYTE PTR [edi],0xf6
  420406:	test   al,0xda
  420408:	jne    0x420442
  42040a:	jmp    0x11f0b11a
  42040f:	iret   
  420410:	inc    ebp
  420411:	sti    
  420412:	cs dec eax
  420414:	pop    edi
  420415:	rcl    dl,0xb6
  420418:	jg     0x4203a3
  42041a:	push   0xffffffdd
  42041c:	clc    
  42041d:	mov    dh,0x23
  42041f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420420:	mov    bh,0x99
  420422:	pushf  
  420423:	push   esp
  420424:	adc    BYTE PTR [eax+0x1b],bh
  420427:	dec    esi
  420428:	mov    ecx,DWORD PTR [ecx-0x14d4dd4]
  42042e:	icebp  
  42042f:	sbb    esp,DWORD PTR [esi+eax*8]
  420432:	push   ds
  420433:	sbb    ecx,DWORD PTR [edx+0x5d]
  420436:	repz std 
  420438:	imul   eax,esp,0x10395cea
  42043e:	inc    ecx
  42043f:	out    0x39,al
  420441:	ds pop edx
  420443:	sbb    al,0xc2
  420445:	jl     0x4203f0
  420447:	inc    esp
  420448:	push   ecx
  420449:	cmp    eax,eax
  42044b:	test   DWORD PTR [ebx],edx
  42044d:	icebp  
  42044e:	sub    ch,al
  420450:	push   es
  420451:	xchg   esp,eax
  420452:	retf   0xc0c0
  420455:	les    ecx,FWORD PTR [eax]
  420457:	jmp    0x42044d
  420459:	push   es
  42045a:	push   ds
  42045b:	sbb    eax,0xb19fdcea
  420460:	pop    edx
  420461:	cld    
  420462:	or     ebp,esp
  420464:	sar    DWORD PTR [edx+0x5550ea5f],1
  42046a:	ror    BYTE PTR [edx+0x4e],0x1e
  42046e:	jp     0x420403
  420470:	push   esi
  420471:	mov    eax,0x8a57819c
  420476:	add    al,0x13
  420478:	jb     0x4204b4
  42047a:	ins    DWORD PTR es:[edi],dx
  42047b:	and    al,0x5e
  42047d:	pop    es
  42047e:	cld    
  42047f:	push   0x52
  420481:	mov    ds:0x5bbd366b,al
  420486:	aad    0x26
  420488:	in     eax,dx
  420489:	cdq    
  42048a:	pusha  
  42048b:	daa    
  42048c:	lahf   
  42048d:	pop    esi
  42048e:	xchg   ecx,eax
  42048f:	xchg   ecx,eax
  420490:	sub    DWORD PTR [eax+0x37419323],edx
  420496:	sbb    bl,BYTE PTR [eax+0x1a3beba2]
  42049c:	add    DWORD PTR [edx+0x36],esp
  42049f:	out    dx,al
  4204a0:	or     dh,ah
  4204a2:	packuswb mm6,mm5
  4204a5:	xchg   esi,eax
  4204a6:	sbb    eax,0x72da2e0a
  4204ab:	cmp    DWORD PTR [esi+eiz*1+0x46564f64],0x9e8b5909
  4204b6:	push   ds
  4204b7:	add    BYTE PTR [ecx-0x15],bl
  4204ba:	mov    esp,0xb182f53e
  4204bf:	add    dh,BYTE PTR [edx]
  4204c1:	outs   dx,BYTE PTR ds:[esi]
  4204c2:	push   ss
  4204c3:	test   BYTE PTR [edx+0x3aca83ca],dl
  4204c9:	xlat   BYTE PTR ds:[ebx]
  4204ca:	inc    ebx
  4204cb:	pushf  
  4204cc:	int3   
  4204cd:	adc    esp,esp
  4204cf:	stc    
  4204d0:	jb     0x4204be
  4204d2:	jmp    0x5337:0x361a7722
  4204d9:	lahf   
  4204da:	sub    cl,0x4c
  4204dd:	mov    ah,0x6c
  4204df:	das    
  4204e0:	addr16 mov esi,esi
  4204e3:	das    
  4204e4:	scas   al,BYTE PTR es:[edi]
  4204e5:	and    eax,0xbc5dd125
  4204ea:	and    cl,BYTE PTR [edi+0x73]
  4204ed:	int    0xaa
  4204ef:	shl    BYTE PTR [esp+ecx*2],0x36
  4204f3:	test   al,0x84
  4204f5:	mov    cl,0xe4
  4204f7:	sbb    ebp,esp
  4204f9:	fld    TBYTE PTR [edi]
  4204fb:	mov    fs,esi
  4204fd:	or     ebp,DWORD PTR [edi+0x489f7c65]
  420503:	push   es
  420504:	je     0x420558
  420506:	jae    0x42048c
  420508:	pop    ecx
  420509:	cmp    cl,bh
  42050b:	xlat   BYTE PTR ds:[ebx]
  42050c:	dec    ecx
  42050d:	loop   0x4204b2
  42050f:	add    BYTE PTR [edi+0xe9daf5],dh
  420515:	inc    ecx
  420516:	add    cl,cl
  420518:	jae    0x420545
  42051a:	jbe    0x4204dd
  42051c:	cli    
  42051d:	imul   DWORD PTR [ecx-0x7f]
  420520:	bound  ebx,QWORD PTR [eax]
  420522:	jge    0x42058d
  420524:	sbb    dl,BYTE PTR [esi+edx*4-0x5f]
  420528:	xchg   DWORD PTR [edi-0x6a4f17b7],edx
  42052e:	cwde   
  42052f:	mov    dl,0x97
  420531:	sbb    bl,dh
  420533:	scas   al,BYTE PTR es:[edi]
  420534:	arpl   WORD PTR [esi],sp
  420536:	cdq    
  420537:	ds ds pusha 
  42053a:	(bad)  
  42053b:	leave  
  42053c:	repnz call 0x17f6:0x93adb8ab
  420544:	inc    edi
  420545:	lea    ecx,[edx+0x17a1c49e]
  42054b:	inc    esi
  42054c:	into   
  42054d:	jle    0x4204d0
  42054f:	popa   
  420550:	popa   
  420551:	xchg   esp,eax
  420552:	ds mov edx,0xd2d04b17
  420558:	push   ebp
  420559:	dec    esp
  42055a:	cwde   
  42055b:	and    BYTE PTR [esi+0x4c],ah
  42055e:	aaa    
  42055f:	test   eax,0x59f31443
  420564:	cmp    ch,BYTE PTR [esi-0x32f64c5d]
  42056a:	add    BYTE PTR [ecx+0x47],ch
  42056d:	mov    esp,0xa2dd718a
  420572:	jg     0x4205be
  420574:	mov    bh,0xdf
  420576:	(bad)  
  420577:	data16 je 0x4205a0
  42057a:	jle    0x420596
  42057c:	cdq    
  42057d:	sbb    edi,DWORD PTR ds:0xdc5a3e2f
  420583:	adc    al,BYTE PTR [edi-0x7c]
  420586:	fs add eax,0xc58110a
  42058c:	sti    
  42058d:	imul   ebp
  42058f:	jb     0x42052d
  420591:	sti    
  420592:	mov    eax,ds:0x333e9703
  420597:	inc    al
  420599:	rol    al,0xc0
  42059c:	rol    al,0xc0
  42059f:	rol    al,0xc0
  4205a2:	rol    al,0xc0
  4205a5:	rol    al,0xc0
  4205a8:	rol    al,0xc0
  4205ab:	rol    al,0xc0
  4205ae:	rol    al,0x15
  4205b1:	push   ebx
  4205b2:	mov    dh,dh
  4205b4:	mov    ebp,0x584eb701
  4205b9:	jge    0x420606
  4205bb:	out    0x72,eax
  4205bd:	shl    esp,cl
  4205bf:	mov    dl,0x65
  4205c1:	addr16 in al,dx
  4205c3:	mov    ecx,ebx
  4205c5:	jle    0x42062b
  4205c7:	xor    eax,0x1f903722
  4205cc:	mov    esi,0xca413852
  4205d1:	mov    ds:0x49272d3a,al
  4205d6:	cmp    al,0x28
  4205d8:	cld    
  4205d9:	jp     0x420564
  4205db:	xchg   edx,eax
  4205dc:	adc    bh,BYTE PTR [edx+edx*2]
  4205df:	addr16 inc eax
  4205e1:	clc    
  4205e2:	mov    bh,0xfc
  4205e4:	imul   edx,ebp,0xffffff88
  4205e7:	or     edi,edi
  4205e9:	int    0xf7
  4205eb:	dec    edx
  4205ec:	cmp    ecx,DWORD PTR [ecx+0x57995298]
  4205f2:	xor    DWORD PTR [ebx+0x5dbf5b35],0x48
  4205f9:	sub    DWORD PTR [esi-0x18],0x45
  4205fd:	xor    dh,0xa0
  420600:	and    ecx,DWORD PTR [eax-0x18]
  420603:	sbb    DWORD PTR [ebx],0x68
  420606:	ror    BYTE PTR [ebx+0x4dda7319],1
  42060c:	rcl    edx,0x3d
  42060f:	hlt    
  420610:	sub    edx,DWORD PTR [edx-0x183ccb8]
  420616:	jle    0x4205a6
  420618:	cld    
  420619:	dec    ecx
  42061a:	cmp    ch,BYTE PTR [esi+edi*4]
  42061d:	push   edi
  42061e:	and    DWORD PTR [edi],0x3a
  420621:	jp     0x420696
  420623:	jmp    0x27a2:0x90a1b5f4
  42062a:	test   DWORD PTR [ebx],0x5bd48e3e
  420630:	and    ah,BYTE PTR [ebx+0x3f]
  420633:	and    edx,ebx
  420635:	iret   
  420636:	sub    BYTE PTR [edi],al
  420638:	push   ebp
  420639:	xchg   ecx,eax
  42063a:	call   0x4e88:0x77b5d6aa
  420641:	bound  ecx,QWORD PTR [ebp+0x12]
  420644:	or     DWORD PTR [ecx+0x560f29c8],esp
  42064a:	and    al,0x27
  42064c:	mov    eax,ds:0x6079b883
  420651:	lods   al,BYTE PTR ds:[esi]
  420652:	rcl    DWORD PTR [edx+eax*4-0x2e],0x4d
  420657:	pop    es
  420658:	xlat   BYTE PTR ds:[ebx]
  420659:	dec    esi
  42065a:	ret    0x9c2f
  42065d:	popf   
  42065e:	ds inc ebx
  420660:	retf   
  420661:	dec    ecx
  420662:	ret    
  420663:	std    
  420664:	adc    eax,DWORD PTR [edi+0x55cf151c]
  42066a:	push   0x480945b9
  42066f:	gs dec ebp
  420671:	or     eax,esi
  420673:	mov    bl,0xc1
  420675:	in     eax,dx
  420676:	out    0x89,eax
  420678:	stc    
  420679:	dec    eax
  42067a:	outs   dx,BYTE PTR ds:[esi]
  42067b:	mov    DWORD PTR [eax],esp
  42067d:	(bad)  
  42067e:	inc    edi
  42067f:	add    al,0x73
  420681:	xchg   esp,eax
  420682:	outs   dx,BYTE PTR ds:[esi]
  420683:	inc    eax
  420684:	and    al,0x27
  420686:	xor    ecx,ebp
  420688:	jo     0x42068e
  42068a:	jbe    0x4206b1
  42068c:	loopne 0x4206f4
  42068e:	and    al,0xe3
  420690:	mov    dl,0xa8
  420692:	and    al,0x98
  420694:	and    BYTE PTR [esp+eax*2+0x7b],cl
  420698:	loope  0x420657
  42069a:	std    
  42069b:	dec    eax
  42069c:	ja     0x42061f
  42069e:	out    dx,eax
  42069f:	dec    esp
  4206a0:	sbb    ebx,esp
  4206a2:	pop    edx
  4206a3:	lahf   
  4206a4:	jl     0x4206e3
  4206a6:	pop    edi
  4206a7:	in     eax,dx
  4206a8:	and    ebx,ebx
  4206aa:	inc    ebx
  4206ab:	loopne 0x4206b8
  4206ad:	adc    BYTE PTR [edi-0x1747b7ec],ah
  4206b3:	mov    ch,0x6
  4206b5:	lock pop edi
  4206b7:	lds    esp,FWORD PTR [edx]
  4206b9:	mov    ds:0xd8c6f9ee,eax
  4206be:	ds stc 
  4206c0:	xor    dh,cl
  4206c2:	loopne 0x4206a4
  4206c4:	shl    BYTE PTR [edi-0x7b],1
  4206c7:	cmovs  edx,DWORD PTR [ebp-0x2a]
  4206cb:	test   edx,0xd0759e2
  4206d1:	je     0x420747
  4206d3:	dec    edx
  4206d4:	cmp    ecx,0x549adbac
  4206da:	fistp  WORD PTR [edx]
  4206dc:	ror    DWORD PTR fs:[edx+0x13],1
  4206e0:	dec    ecx
  4206e1:	leave  
  4206e2:	cmp    DWORD PTR [esi+0x6a],0x67e413fa
  4206e9:	push   ebx
  4206ea:	jmp    0xd188:0xb99ffd8f
  4206f1:	xor    ecx,esi
  4206f3:	mov    esp,0x7dfbe10d
  4206f8:	inc    edi
  4206f9:	repz jb 0x420682
  4206fc:	jo     0x42071a
  4206fe:	test   eax,0x9271c8e9
  420703:	sbb    DWORD PTR [eax-0xc],0xffffffb0
  420707:	scas   al,BYTE PTR es:[edi]
  420708:	pop    ds
  420709:	xchg   edx,eax
  42070a:	(bad)  
  42070b:	call   0x55e737a5
  420710:	mov    bh,0x4f
  420712:	scas   eax,DWORD PTR es:[edi]
  420713:	add    eax,0xd3120dde
  420718:	icebp  
  420719:	loopne 0x4206fb
  42071b:	dec    eax
  42071c:	inc    ecx
  42071d:	add    eax,0xcff9bcd2
  420722:	xchg   BYTE PTR [ecx+0x9518160],bh
  420728:	mov    al,ds:0x737c9764
  42072d:	pop    ebp
  42072e:	inc    ebx
  42072f:	and    esp,esp
  420731:	retf   0x9b9a
  420734:	out    dx,al
  420735:	mov    edi,0x7877fe59
  42073a:	nop
  42073b:	adc    DWORD PTR [edx],0x21b82084
  420741:	push   esp
  420742:	add    bh,BYTE PTR [edx]
  420744:	dec    ebx
  420745:	sbb    dh,0x1a
  420748:	clc    
  420749:	(bad)  
  42074a:	hlt    
  42074b:	and    ebx,DWORD PTR [esi+0x47f89bda]
  420751:	icebp  
  420752:	cmp    esp,DWORD PTR [edi-0x646fd17a]
  420758:	add    BYTE PTR [edx],bh
  42075a:	mov    WORD PTR [edx+0x6d208bbe],?
  420760:	mov    bh,0x19
  420762:	aaa    
  420763:	and    eax,DWORD PTR [esi]
  420765:	and    eax,0xc4bf5505
  42076a:	into   
  42076b:	push   0xffffffcb
  42076d:	fidivr DWORD PTR [eax+0x6c]
  420770:	es jmp 0xd462:0xba35cdd7
  420778:	call   0x95129437
  42077d:	dec    edx
  42077e:	jno    0x420746
  420780:	cmc    
  420781:	and    eax,0xfc3af61e
  420786:	jns    0x4207ae
  420788:	add    al,0xb9
  42078a:	and    eax,DWORD PTR [esi]
  42078c:	cmc    
  42078d:	fsub   DWORD PTR [ebx+0x6fdc7cdb]
  420793:	push   ebx
  420794:	ins    BYTE PTR es:[edi],dx
  420795:	add    ebx,esi
  420797:	and    BYTE PTR [edx+0x1ae33621],bl
  42079d:	fistp  DWORD PTR [edx+ebp*4+0x2b]
  4207a1:	popf   
  4207a2:	sub    ch,BYTE PTR [edx+0x185bba11]
  4207a8:	jb     0x42073f
  4207aa:	adc    al,BYTE PTR [esi]
  4207ac:	push   ss
  4207ad:	xor    esp,DWORD PTR [esi]
  4207af:	push   ecx
  4207b0:	cmp    ah,ch
  4207b2:	and    dl,BYTE PTR [ebp+0x2b428c8c]
  4207b8:	mov    esi,esp
  4207ba:	aaa    
  4207bb:	cmp    esi,DWORD PTR [edx+0x7a]
  4207be:	imul   eax,ecx,0x573b11c2
  4207c4:	xor    ah,BYTE PTR [esi]
  4207c6:	and    al,0xc0
  4207c8:	arpl   WORD PTR [esi-0x6],sp
  4207cb:	cmp    DWORD PTR [edx+0x6d],eax
  4207ce:	retf   0x7d3e
  4207d1:	ja     0x420776
  4207d3:	retf   
  4207d4:	repz loop 0x4207b6
  4207d7:	cmp    DWORD PTR [esi-0x79],edx
  4207da:	xor    DWORD PTR [ecx+0xe],eax
  4207dd:	push   eax
  4207de:	cmp    eax,0x151d4c9e
  4207e3:	adc    DWORD PTR [esi+0x19550ca9],ecx
  4207e9:	addr16 ja 0x4207f9
  4207ec:	dec    esi
  4207ed:	xor    BYTE PTR [ebx+0x3f],al
  4207f0:	xor    al,0x9a
  4207f2:	cmp    esp,edi
  4207f4:	push   cs
  4207f5:	mov    edx,0xef79ab3b
  4207fa:	xchg   DWORD PTR ds:0xefdcf15,ecx
  420800:	mov    dl,0xd8
  420802:	xchg   ecx,eax
  420803:	js     0x4207e8
  420805:	dec    edi
  420806:	push   0x16
  420808:	fidiv  DWORD PTR [esi]
  42080a:	test   eax,0xdc6f03ca
  42080f:	or     eax,0x188a9a77
  420814:	ret    
  420815:	xchg   DWORD PTR [esp+ebx*1-0x3842559c],esp
  42081c:	inc    edx
  42081d:	arpl   WORD PTR [edi+0x37],bx
  420820:	rcr    cl,cl
  420822:	fidiv  DWORD PTR [ebp-0x78]
  420825:	push   ss
  420826:	jmp    FWORD PTR [edi]
  420828:	or     dh,BYTE PTR [esi-0x3d]
  42082b:	inc    edi
  42082c:	std    
  42082d:	rcr    BYTE PTR [esp+edx*2+0x54a283e0],0x16
  420835:	inc    ebx
  420836:	les    ecx,FWORD PTR [esi+0x14]
  420839:	sub    DWORD PTR [esi+ebx*8+0x1c],0x5a
  42083e:	jb     0x42083c
  420840:	adc    DWORD PTR [edx+0x35],esi
  420843:	push   esi
  420844:	jae    0x4207e6
  420846:	xchg   ebx,eax
  420847:	mov    esp,DWORD PTR [edi-0x56]
  42084a:	stos   DWORD PTR es:[edi],eax
  42084b:	push   edi
  42084c:	fidiv  WORD PTR [ebx]
  42084e:	mov    edi,0xdc8ae3d9
  420853:	popa   
  420854:	add    esp,ebx
  420856:	and    cl,cl
  420858:	inc    edi
  420859:	jg     0x42085f
  42085b:	daa    
  42085c:	xchg   edx,eax
  42085d:	and    eax,0x7c44a61a
  420862:	loop   0x4208bb
  420864:	mov    edi,0xc56e8290
  420869:	cmp    esp,edx
  42086b:	(bad)  
  42086c:	dec    ebx
  42086d:	sub    al,0x5f
  42086f:	(bad)  
  420870:	mov    edx,0x8b5eda1b
  420875:	loope  0x4208a9
  420877:	daa    
  420878:	mov    eax,ecx
  42087a:	jne    0x4208ac
  42087c:	add    eax,0x5ecf12aa
  420881:	dec    edi
  420882:	cmp    DWORD PTR [ebx+eiz*4+0x5a],eax
  420886:	xchg   edx,eax
  420887:	adc    al,0x22
  420889:	push   esp
  42088a:	cmp    BYTE PTR [eax],0x35
  42088d:	pop    es
  42088e:	or     eax,0xf59069ae
  420893:	fdivr  DWORD PTR [edi+0xc]
  420896:	jmp    0xc38f1d6a
  42089b:	push   ebx
  42089c:	and    BYTE PTR [esi],0x4
  42089f:	mov    gs,ebp
  4208a1:	or     ebp,eax
  4208a3:	daa    
  4208a4:	jno    0x4208d5
  4208a6:	out    dx,al
  4208a7:	xlat   BYTE PTR ds:[ebx]
  4208a8:	xor    BYTE PTR [esi],0xcd
  4208ab:	or     eax,0x9933a902
  4208b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b1:	call   0x4ad7:0x382991c8
  4208b8:	ja     0x4208fc
  4208ba:	add    eax,DWORD PTR ss:[edx-0x2d]
  4208be:	mov    BYTE PTR [eax-0x57dd5b99],cl
  4208c4:	add    al,0x86
  4208c7:	sbb    esi,DWORD PTR [eax-0x7d2f1db5]
  4208cd:	test   esp,esp
  4208cf:	push   cs
  4208d0:	mov    dl,0xc7
  4208d2:	push   eax
  4208d3:	pop    ebx
  4208d4:	cmp    eax,0x9b6d10f7
  4208d9:	push   edi
  4208da:	pop    ebp
  4208db:	inc    ebx
  4208dc:	pop    es
  4208dd:	imul   esi,eax,0xffffffd0
  4208e0:	stos   BYTE PTR es:[edi],al
  4208e1:	les    edx,FWORD PTR [edx+ecx*8+0x40]
  4208e5:	sbb    al,0x45
  4208e7:	mov    esi,0x1a829a8d
  4208ec:	push   edx
  4208ed:	shl    DWORD PTR [ebx+0x70],0xb9
  4208f1:	adc    DWORD PTR [esi+0x2e],esi
  4208f4:	xchg   esp,eax
  4208f5:	mov    bh,0x8d
  4208f7:	imul   ecx,DWORD PTR [ebp-0x6c9b95d6],0x1f
  4208fe:	add    ebx,ebp
  420900:	mov    ds:0xe6d13745,eax
  420905:	push   ds
  420906:	mov    dh,0xa8
  420908:	push   esi
  420909:	cmp    al,BYTE PTR [esi+0x6d]
  42090c:	xor    eax,0x7bcc99ea
  420911:	mov    ds:0x2c9f8c8c,al
  420916:	push   edx
  420917:	or     eax,0x2cb4d45a
  42091c:	push   edx
  42091d:	xor    DWORD PTR [ebp+0x28],ecx
  420920:	test   DWORD PTR [eax+0x3c],0x5ab41625
  420927:	mov    al,0xf6
  420929:	cdq    
  42092a:	outs   dx,BYTE PTR ds:[esi]
  42092b:	gs jle 0x420958
  42092e:	xor    al,BYTE PTR [ecx]
  420930:	add    esi,DWORD PTR [esi]
  420932:	dec    edi
  420933:	test   DWORD PTR [edi],edx
  420935:	mov    bh,0x9d
  420937:	push   ss
  420938:	add    cl,ch
  42093a:	jmp    0xe6d4:0x60aab28d
  420941:	inc    edi
  420942:	fld    DWORD PTR ds:0xd7469852
  420948:	aam    0x27
  42094a:	jb     0x420968
  42094c:	xchg   ebp,eax
  42094d:	neg    DWORD PTR [edi-0x607a46f4]
  420953:	jle    0x4209b1
  420955:	adc    BYTE PTR [edx-0x1],dl
  420958:	int    0x40
  42095a:	adc    eax,eax
  42095c:	out    dx,al
  42095d:	jae    0x42097a
  42095f:	add    al,0xac
  420961:	in     eax,0x7b
  420963:	jge    0x4209d1
  420965:	mov    edi,0xcefb6f60
  42096a:	pop    edx
  42096b:	mov    WORD PTR [edx+0x75581a42],?
  420971:	sbb    eax,0xb4596e43
  420976:	add    BYTE PTR [edi],dl
  420978:	and    DWORD PTR [edi+0x6],ebp
  42097b:	sbb    al,0xaa
  42097d:	jae    0x4209ac
  42097f:	jge    0x4209f1
  420981:	and    DWORD PTR [ebp-0x3c77c518],0x4bd5fb49
  42098b:	jge    0x4209cc
  42098d:	out    dx,al
  42098e:	mov    ds:0xe385531c,eax
  420993:	push   0x6ccd4e95
  420998:	(bad)  
  420999:	push   ds
  42099a:	sbb    DWORD PTR [eax],ebp
  42099c:	and    eax,DWORD PTR [ecx]
  42099e:	sub    eax,0xd0b7addf
  4209a3:	xor    bl,BYTE PTR [ebx-0x40]
  4209a6:	xchg   ecx,eax
  4209a7:	and    ebp,esi
  4209a9:	xchg   edi,eax
  4209aa:	arpl   WORD PTR [ebp+0x2ace7d2f],cx
  4209b0:	(bad)  [esi+0x1e6e08d3]
  4209b6:	jnp    0x4209ca
  4209b8:	or     eax,0x21d32f9b
  4209bd:	inc    ecx
  4209be:	ds es xchg bh,bl
  4209c2:	fisttp WORD PTR [edi+0x6ba26e36]
  4209c8:	rcl    ah,0xd5
  4209cb:	mov    ds:0xb2188cd3,al
  4209d0:	out    0x77,eax
  4209d2:	add    DWORD PTR [edx],ebx
  4209d4:	adc    DWORD PTR ds:[ebx],esi
  4209d7:	test   al,0x19
  4209d9:	pop    ebx
  4209da:	mov    esi,0x293ca91c
  4209df:	inc    ebp
  4209e0:	sar    esi,cl
  4209e2:	(bad)  
  4209e3:	out    dx,al
  4209e4:	pop    si
  4209e6:	mov    ah,0x2a
  4209e8:	sbb    DWORD PTR [ebx+0x49],ecx
  4209eb:	adc    edi,ecx
  4209ed:	pop    es
  4209ee:	and    DWORD PTR ds:0xa5ecbaf7,0x7895998b
  4209f8:	sub    edx,edi
  4209fa:	repz jmp DWORD PTR [edx-0x1afc8cdf]
  420a01:	mov    esi,0x2da01fcc
  420a06:	rcl    ch,1
  420a08:	sbb    ebx,edx
  420a0a:	hlt    
  420a0b:	(bad)  
  420a0c:	sub    eax,edx
  420a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a0f:	int3   
  420a10:	inc    ebx
  420a11:	es ret 0x1e28
  420a15:	ins    DWORD PTR es:[edi],dx
  420a16:	jae    0x420a8d
  420a18:	sub    edx,DWORD PTR [esi-0x7c1cb8b4]
  420a1e:	mov    ebx,0xffd8c1a8
  420a23:	adc    eax,0xea59a44
  420a28:	lods   eax,DWORD PTR ds:[esi]
  420a29:	sub    DWORD PTR [ebx-0x373e8c94],edi
  420a2f:	and    al,0x43
  420a31:	icebp  
  420a32:	inc    ecx
  420a33:	shl    DWORD PTR [eax-0x2747b056],1
  420a39:	inc    ebp
  420a3a:	push   0xa0e64103
  420a3f:	inc    eax
  420a40:	addr16 jno 0x420a41
  420a43:	xor    al,0xa6
  420a45:	hlt    
  420a46:	jle    0x420a14
  420a48:	jne    0x420a8d
  420a4a:	js     0x420a4a
  420a4c:	popf   
  420a4d:	dec    esp
  420a4e:	ins    DWORD PTR es:[edi],dx
  420a4f:	clc    
  420a50:	popf   
  420a51:	rcr    bh,0xc
  420a54:	push   0x88f33038
  420a59:	(bad)  
  420a5a:	ds adc edi,0xdf321aea
  420a61:	nop
  420a62:	cmp    ch,BYTE PTR [edx+eax*8]
  420a65:	mov    dl,BYTE PTR [edi+0x37e50654]
  420a6b:	test   DWORD PTR [ebx-0x60],ebx
  420a6e:	mov    ?,WORD PTR [edx]
  420a70:	jl     0x420a33
  420a72:	mov    al,ds:0xabcac7d9
  420a77:	xor    eax,0x1d8f6e56
  420a7c:	push   ds
  420a7d:	scas   eax,DWORD PTR es:[edi]
  420a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7f:	sbb    ebp,0x976c44e0
  420a85:	imul   edx,DWORD PTR [ebp+0x4ab5154d],0x1c
  420a8c:	xor    al,BYTE PTR ds:0x1855d103
  420a92:	add    BYTE PTR [ecx],cl
  420a94:	sub    esi,DWORD PTR [esi-0x6393ad3f]
  420a9a:	push   cs
  420a9b:	je     0x420a4f
  420a9d:	cmc    
  420a9e:	sbb    BYTE PTR [edi+0x7d62d20e],bh
  420aa4:	inc    esi
  420aa5:	pop    esi
  420aa6:	lods   al,BYTE PTR ds:[esi]
  420aa7:	dec    eax
  420aa8:	ja     0x420b29
  420aaa:	xor    eax,0xb12d767b
  420aaf:	jg     0x420acc
  420ab1:	cmp    ebx,DWORD PTR [edi]
  420ab3:	je     0x420a73
  420ab5:	in     al,0x1e
  420ab7:	sbb    al,0xa0
  420ab9:	repz in eax,dx
  420abb:	push   edi
  420abc:	adc    bh,BYTE PTR [ecx+0x74c5ab42]
  420ac2:	mov    edi,0xbf0b4e37
  420ac7:	mov    cs,WORD PTR [edi-0x5029286c]
  420acd:	ja     0x420a97
  420acf:	scas   eax,DWORD PTR es:[edi]
  420ad0:	inc    ebx
  420ad1:	ss aad 0x51
  420ad4:	addr16 pop esp
  420ad6:	mov    WORD PTR [esi],?
  420ad8:	pop    ss
  420ad9:	aad    0x92
  420adb:	and    dl,BYTE PTR [edx+0x7f2fb976]
  420ae1:	in     eax,dx
  420ae2:	push   edi
  420ae3:	or     ebx,DWORD PTR [esi+0x7d22ee80]
  420ae9:	out    dx,al
  420aea:	cmp    DWORD PTR [ecx],esi
  420aec:	pop    ebp
  420aed:	inc    edx
  420aee:	test   al,0xf7
  420af0:	test   eax,0xbd49c4a4
  420af5:	add    edi,DWORD PTR [eax]
  420af7:	int    0x6
  420af9:	das    
  420afa:	add    ebp,DWORD PTR [edi]
  420afc:	dec    edi
  420afd:	cli    
  420afe:	iret   
  420aff:	leave  
  420b00:	scas   al,BYTE PTR es:[edi]
  420b01:	pop    es
  420b02:	scas   al,BYTE PTR es:[edi]
  420b03:	adc    DWORD PTR [esi-0x73],ebx
  420b06:	shl    BYTE PTR [ebx+0x7d],1
  420b09:	and    eax,0x2802b092
  420b0e:	push   edx
  420b0f:	push   0x7e
  420b11:	inc    edi
  420b12:	aam    0x3
  420b14:	sub    ebx,DWORD PTR [esi]
  420b16:	jae    0x420afc
  420b18:	push   edx
  420b19:	fcom   QWORD PTR [edx+0x66b34b0b]
  420b1f:	not    DWORD PTR [eax-0x4c1c664c]
  420b25:	out    dx,eax
  420b26:	inc    edx
  420b27:	gs js  0x420b02
  420b2a:	pop    edi
  420b2b:	xchg   esp,eax
  420b2c:	nop
  420b2d:	and    al,0x3b
  420b2f:	rol    BYTE PTR [ebp+0x79],1
  420b32:	sahf   
  420b33:	test   DWORD PTR [edx+0x7d],ebp
  420b36:	inc    esp
  420b37:	(bad)  
  420b3a:	push   es
  420b3b:	rol    BYTE PTR [edx+0x54],1
  420b3e:	lods   al,BYTE PTR ds:[esi]
  420b3f:	int3   
  420b40:	adc    al,0x79
  420b42:	and    DWORD PTR [ecx-0x28],ebp
  420b45:	inc    esi
  420b46:	mov    esp,0xa901901
  420b4b:	push   0xd8e457be
  420b50:	adc    ebx,DWORD PTR [edi+0x66]
  420b53:	ffree  st(5)
  420b55:	mov    ah,BYTE PTR [eax+0x26]
  420b58:	jnp    0x420b57
  420b5a:	mov    es,eax
  420b5c:	test   esi,esp
  420b5e:	adc    eax,0x7901654c
  420b63:	jbe    0x420b60
  420b65:	fdiv   st,st(0)
  420b67:	arpl   WORD PTR [ecx+eiz*2+0x3350a907],dx
  420b6e:	maskmovq mm1,(bad)
  420b6f:	test   DWORD PTR [edx+0x4b],0xcf899bc3
  420b76:	clc    
  420b77:	sub    esp,DWORD PTR [edi]
  420b79:	mov    dh,0xa6
  420b7b:	xlat   BYTE PTR ds:[ebx]
  420b7c:	rcl    BYTE PTR ds:0xa36ac50d,0x4
  420b83:	push   0xffffff8e
  420b85:	ret    0x9f98
  420b88:	mov    BYTE PTR [esi+0x2],ch
  420b8b:	sub    BYTE PTR [ecx+0x701bb1c3],bh
  420b91:	stos   DWORD PTR es:[edi],eax
  420b92:	loope  0x420c10
  420b94:	fcom   QWORD PTR [edx+0x25b10894]
  420b9a:	adc    al,0xa
  420b9c:	fimul  WORD PTR [esp+ebp*8-0x41]
  420ba0:	push   ebx
  420ba1:	and    al,BYTE PTR ss:[edi-0x62]
  420ba5:	sub    BYTE PTR [edi-0x31f5f4cb],al
  420bab:	popf   
  420bac:	dec    eax
  420bad:	loop   0x420b41
  420baf:	push   eax
  420bb0:	(bad)  
  420bb1:	int3   
  420bb2:	aaa    
  420bb3:	and    al,0xa0
  420bb5:	and    BYTE PTR [eax-0x5793bfb2],bl
  420bbb:	dec    edx
  420bbc:	cmp    BYTE PTR [ebx],bh
  420bbe:	mov    gs,WORD PTR [edi+0x41fc969]
  420bc4:	dec    edx
  420bc5:	dec    ecx
  420bc6:	cmp    al,0xb8
  420bc8:	lea    ebp,[ecx+0x77]
  420bcb:	pop    eax
  420bcc:	out    0x50,al
  420bce:	mov    esi,0xcd932f99
  420bd3:	fcomp  DWORD PTR [esi+0x226c4673]
  420bd9:	add    ecx,DWORD PTR ds:0x1b45bf06
  420bdf:	je     0x420c2f
  420be1:	cmp    al,bh
  420be3:	and    BYTE PTR [edi-0x69],bl
  420be6:	jmp    0xe168:0x2cfec9db
  420bed:	dec    edi
  420bee:	adc    ecx,DWORD PTR [ebx]
  420bf0:	dec    edi
  420bf1:	js     0x420bf6
  420bf3:	jp     0x420c2c
  420bf5:	cmp    DWORD PTR [edx-0x24a748f5],edx
  420bfb:	aam    0xa0
  420bfd:	sub    edi,ecx
  420bff:	(bad)  
  420c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c02:	mov    BYTE PTR [ecx-0x3489d716],ah
  420c08:	push   edi
  420c09:	fstp   st(5)
  420c0b:	mov    al,0x72
  420c0d:	ins    BYTE PTR es:[edi],dx
  420c0e:	push   ss
  420c0f:	mov    eax,0xf2956c8a
  420c14:	inc    edi
  420c15:	repz mov dl,0xdf
  420c18:	cmc    
  420c19:	pushf  
  420c1a:	imul   ebp,DWORD PTR [ecx],0xaf4f1aa0
  420c20:	test   DWORD PTR [edx+0x1ba42a6d],ebx
  420c26:	dec    ebx
  420c27:	das    
  420c28:	sbb    DWORD PTR [edx-0x24],0xaae477e7
  420c2f:	retf   0xfee2
  420c32:	std    
  420c33:	hlt    
  420c34:	ds add ah,al
  420c37:	mov    edi,0x49f9f085
  420c3c:	out    0x65,al
  420c3e:	call   ecx
  420c40:	mov    ch,0x96
  420c42:	imul   ebp,edx,0xfffffff0
  420c45:	add    bh,BYTE PTR [edx-0x51]
  420c48:	ins    DWORD PTR es:[edi],dx
  420c49:	retf   0x42b9
  420c4c:	jnp    0x420cc8
  420c4e:	loopne 0x420c52
  420c50:	call   0x75db:0x5a977fcc
  420c57:	pop    es
  420c58:	cmp    dh,BYTE PTR [edx-0x4ae10924]
  420c5e:	lods   al,BYTE PTR ds:[esi]
  420c5f:	and    al,0x26
  420c61:	lea    esi,[eax+ebp*4-0x3e1480ff]
  420c68:	mov    ah,0xa0
  420c6a:	ja     0x420c05
  420c6c:	jecxz  0x420c1c
  420c6e:	in     al,dx
  420c6f:	aad    0xed
  420c71:	push   esi
  420c72:	sub    bh,BYTE PTR [edx-0x13]
  420c75:	fsubr  DWORD PTR [edi+edi*1-0xd]
  420c79:	xor    DWORD PTR [edx-0xd2982e4],edx
  420c7f:	imul   esp,DWORD PTR [eax-0x21a3c17a],0x2117704e
  420c89:	test   BYTE PTR [edi-0x2af9ecee],ch
  420c8f:	into   
  420c90:	inc    ecx
  420c91:	dec    esp
  420c92:	jle    0x420cb6
  420c94:	rol    BYTE PTR [ebx-0x1367b717],cl
  420c9a:	or     ch,BYTE PTR [ecx+0x1a]
  420c9d:	mov    esp,0x552dccb7
  420ca2:	leave  
  420ca3:	ss sbb al,0x75
  420ca6:	div    DWORD PTR [ebp+0x6297e260]
  420cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cad:	pop    ecx
  420cae:	in     al,0x65
  420cb0:	shl    BYTE PTR [ebx],0xa3
  420cb3:	adc    dh,cl
  420cb5:	adc    eax,0x8e7944b7
  420cba:	dec    ebp
  420cbb:	and    eax,DWORD PTR [esi+0x71]
  420cbe:	ret    0xa46e
  420cc1:	mov    al,0x6b
  420cc3:	icebp  
  420cc4:	mov    ebx,0xf48280e2
  420cc9:	imul   ebp,DWORD PTR [esi+0x1c56edc1],0x16c354bd
  420cd3:	das    
  420cd4:	inc    esi
  420cd5:	mov    edx,0xd89af0c2
  420cda:	or     al,BYTE PTR [ebp+0x72]
  420cdd:	lods   eax,DWORD PTR ds:[esi]
  420cde:	cmp    DWORD PTR [eax-0x25],0xcda00a8c
  420ce5:	call   0xd1988590
  420cea:	hlt    
  420ceb:	arpl   WORD PTR [eax-0x64a40eda],ax
  420cf1:	out    0xde,eax
  420cf3:	fsub   st,st(3)
  420cf5:	inc    esi
  420cf6:	leave  
  420cf7:	xor    eax,0xb16aa3f0
  420cfc:	xor    BYTE PTR [ebx],al
  420cfe:	iret   
  420cff:	xor    BYTE PTR [esi-0x6158122b],al
  420d05:	sub    eax,0x3ab40cb4
  420d0a:	jne    0x420d58
  420d0c:	or     ecx,esp
  420d0e:	int3   
  420d0f:	pushf  
  420d10:	enter  0xc03e,0xad
  420d14:	pop    ds
  420d15:	xor    al,0xd8
  420d17:	cs inc ecx
  420d19:	cmp    ah,BYTE PTR [ebx+0x29]
  420d1c:	sbb    edx,DWORD PTR es:0x61c401f5
  420d23:	pop    eax
  420d24:	add    DWORD PTR [edx+0x2bbfc570],edx
  420d2a:	aas    
  420d2b:	or     eax,0xc63ba7bd
  420d30:	mov    DWORD PTR [edi],esi
  420d32:	and    BYTE PTR [eax+0x29],ah
  420d35:	xchg   ebx,eax
  420d36:	inc    edx
  420d37:	add    BYTE PTR [edi+0x49ebd69e],cl
  420d3d:	adc    al,0x37
  420d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d40:	mov    edi,0x4980f5eb
  420d45:	dec    edx
  420d46:	pop    edi
  420d47:	fcom   QWORD PTR [esi*4+0x15ca9460]
  420d4e:	pavgb  mm0,QWORD PTR [edx-0x4c]
  420d52:	mov    ebp,0x32b5c62c
  420d57:	loopne 0x420d21
  420d59:	lahf   
  420d5a:	ds pushf 
  420d5c:	loop   0x420d72
  420d5e:	mov    dh,0x4f
  420d60:	lds    ecx,FWORD PTR [edx+0x4c048afa]
  420d66:	sar    DWORD PTR [edx-0x5f],0x26
  420d6a:	call   0x8924:0x8ae106cb
  420d71:	(bad)  
  420d72:	cld    
  420d73:	test   al,0xd1
  420d75:	call   0x675e:0x7aad
  420d7b:	inc    esp
  420d7c:	mov    edi,0xc02ddbbd
  420d81:	rol    al,0xc0
  420d84:	rol    al,0xc0
  420d87:	rol    al,0xc0
  420d8a:	rol    al,0xc0
  420d8d:	rol    al,0xc0
  420d90:	rol    al,0xc0
  420d93:	rol    al,0xc0
  420d96:	rol    al,0x99
  420d99:	stos   DWORD PTR es:[edi],eax
  420d9a:	xchg   ebx,eax
  420d9b:	mov    ah,0x9c
  420d9d:	jg     0x420d90
  420d9f:	das    
  420da0:	xor    eax,DWORD PTR [edi-0x6e]
  420da3:	or     DWORD PTR ds:0x39f80e7a,edx
  420da9:	push   ds
  420daa:	in     eax,dx
  420dab:	sbb    al,0xdb
  420dad:	push   esi
  420dae:	(bad)  
  420daf:	test   ecx,0x495b19b
  420db5:	dec    esp
  420db6:	ja     0x420df5
  420db8:	mov    bh,0x37
  420dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dbb:	popa   
  420dbc:	ja     0x420de7
  420dbe:	aaa    
  420dbf:	jns    0x420e35
  420dc1:	scas   eax,DWORD PTR es:[edi]
  420dc2:	xchg   ah,al
  420dc4:	fisttp WORD PTR [esi-0x52]
  420dc7:	adc    ah,BYTE PTR [eax+0x95cf58d]
  420dcd:	int3   
  420dce:	fs aas 
  420dd0:	addr16 aaa 
  420dd2:	and    al,0x81
  420dd4:	popa   
  420dd5:	adc    al,dl
  420dd7:	sub    eax,0xbea386fb
  420ddc:	add    eax,DWORD PTR [edi]
  420dde:	xchg   ecx,eax
  420ddf:	loopne 0x420e0d
  420de1:	(bad)  
  420de2:	mov    ebp,0x535c9dce
  420de7:	and    bh,BYTE PTR [edi+0xf]
  420dea:	pop    edx
  420deb:	push   ebx
  420dec:	jmp    0x9625337d
  420df1:	fistp  DWORD PTR [ebx+0x7f]
  420df4:	mov    edi,0xeac29bd2
  420df9:	and    BYTE PTR [ebx-0x7dca2d09],al
  420dff:	div    DWORD PTR ds:0x822910fa
  420e05:	xchg   ebp,eax
  420e06:	retf   
  420e07:	mov    edx,0xf8a6c3b3
  420e0c:	fldpi  
  420e0e:	mov    esp,0x26c66054
  420e13:	dec    edi
  420e14:	pop    es
  420e15:	and    al,0x51
  420e17:	cmp    edx,DWORD PTR [ebx+0x15]
  420e1a:	jbe    0x420e20
  420e1c:	push   es
  420e1d:	xor    al,0x5e
  420e1f:	and    ebp,ebx
  420e21:	push   cs
  420e22:	mov    eax,0xbd77905b
  420e27:	scas   al,BYTE PTR es:[edi]
  420e28:	cmp    edi,ebx
  420e2a:	icebp  
  420e2b:	dec    ebp
  420e2c:	push   ebx
  420e2d:	leave  
  420e2e:	into   
  420e2f:	retf   0xab50
  420e32:	jmp    0x19fe:0xb6d40f24
  420e39:	push   ebp
  420e3a:	pushf  
  420e3b:	push   es
  420e3c:	or     ecx,0x52
  420e3f:	adc    eax,0xe43478b
  420e44:	sbb    DWORD PTR [eax+ebp*4+0x7d8c7253],edx
  420e4b:	repz popa 
  420e4d:	inc    edx
  420e4e:	lock dec DWORD PTR [edx]
  420e51:	repnz loop 0x420e44
  420e54:	mov    bl,0x50
  420e56:	inc    esp
  420e57:	loop   0x420e23
  420e59:	repz pop eax
  420e5b:	jp     0x420ec4
  420e5d:	es push edx
  420e5f:	test   eax,0x77dffe95
  420e64:	push   edi
  420e65:	fstp   st(5)
  420e67:	xchg   bh,dl
  420e69:	loop   0x420e0f
  420e6b:	push   edi
  420e6c:	jo     0x420e43
  420e6e:	shl    BYTE PTR [edi+0x565b6349],cl
  420e74:	inc    ebp
  420e75:	jl     0x420e14
  420e77:	add    edx,edx
  420e79:	std    
  420e7a:	sbb    eax,0xd27848a0
  420e7f:	mov    edi,0xb502849c
  420e84:	mov    ebx,DWORD PTR [esi-0x72d85c74]
  420e8a:	sub    al,0x61
  420e8c:	jae    0x420ee6
  420e8e:	pop    esi
  420e8f:	sahf   
  420e90:	imul   esp,DWORD PTR ds:0x62052f75,0xff3565cf
  420e9a:	mov    eax,ds:0x40067fd1
  420e9f:	cdq    
  420ea0:	lock jno 0x420f02
  420ea3:	fs add eax,0xd5080664
  420ea9:	xchg   ebp,eax
  420eaa:	adc    cl,BYTE PTR [ecx]
  420eac:	mov    al,ds:0x5cb3d41b
  420eb1:	push   edx
  420eb2:	adc    al,0x2a
  420eb4:	or     DWORD PTR [ebp-0x3d8afeeb],ebp
  420eba:	fwait
  420ebb:	mov    ds:0x61521e1a,al
  420ec0:	out    dx,eax
  420ec1:	outs   dx,BYTE PTR ds:[esi]
  420ec2:	xlat   BYTE PTR ds:[ebx]
  420ec3:	ffree  st(3)
  420ec5:	fisubr WORD PTR [edx]
  420ec7:	adc    al,0x5a
  420ec9:	(bad)  
  420eca:	addr16 xchg ebx,eax
  420ecc:	pop    esp
  420ecd:	hlt    
  420ece:	inc    eax
  420ecf:	into   
  420ed0:	push   cs
  420ed1:	call   0x17f9:0x18784064
  420ed8:	push   ebx
  420ed9:	enter  0x2932,0xd1
  420edd:	and    BYTE PTR [ebx-0x6788ced5],ch
  420ee3:	iret   
  420ee4:	pop    edx
  420ee5:	idiv   DWORD PTR [ecx-0x1b]
  420ee8:	mov    eax,ds:0x2a7b43ec
  420eed:	mov    ?,WORD PTR [ecx+0x54774d67]
  420ef3:	sbb    ch,bh
  420ef5:	add    DWORD PTR [edx-0x2d],esi
  420ef8:	pop    ss
  420ef9:	(bad)  [edi-0x2080b1c0]
  420eff:	fdivr  DWORD PTR [ecx-0x20]
  420f02:	mov    dl,BYTE PTR [eax]
  420f04:	push   cs
  420f05:	mov    dh,dh
  420f07:	lea    esp,es:[ecx-0x56]
  420f0b:	enter  0xfac5,0x15
  420f0f:	xor    DWORD PTR [eax],eax
  420f11:	cwde   
  420f12:	push   ds
  420f13:	dec    edi
  420f14:	(bad)  
  420f15:	sahf   
  420f16:	add    BYTE PTR [esi],cl
  420f18:	in     al,dx
  420f19:	xchg   DWORD PTR [edi+ebp*4],esp
  420f1c:	cs fstp QWORD PTR fs:[ebx]
  420f20:	cmp    ebp,DWORD PTR [ebx+0x22a0636e]
  420f26:	mov    ecx,0xbce1b384
  420f2b:	mov    BYTE PTR [ebx+0x3a],dh
  420f2e:	mov    bl,0xea
  420f30:	add    al,0x24
  420f32:	aam    0xc1
  420f34:	push   0x5c8aead8
  420f39:	sub    DWORD PTR [esp+edx*2-0x3d],eax
  420f3d:	mov    cl,0xfb
  420f3f:	and    DWORD PTR [edi+0x4438dba5],eax
  420f45:	mov    WORD PTR [edi+0x54102ff7],gs
  420f4b:	push   ebp
  420f4c:	aam    0x78
  420f4e:	jle    0x420f64
  420f50:	add    al,0x38
  420f52:	fild   DWORD PTR ds:0xcc8a1edb
  420f58:	sub    eax,0xc8fa8bfe
  420f5d:	mov    dh,0x5f
  420f5f:	jo     0x420f42
  420f61:	push   cs
  420f62:	jmp    0x4db7649b
  420f67:	sbb    DWORD PTR [edi],ebp
  420f69:	mov    fs,WORD PTR [edx-0x68]
  420f6c:	add    DWORD PTR [ebx+0x56],0xf7baf9bc
  420f73:	pop    esp
  420f74:	or     cl,BYTE PTR [esi+0x6b]
  420f77:	jne    0x420f58
  420f79:	ins    DWORD PTR es:[edi],dx
  420f7a:	popf   
  420f7b:	daa    
  420f7c:	add    eax,0xd132ba92
  420f81:	or     eax,0xd2f7a6a3
  420f86:	xchg   esp,eax
  420f87:	(bad)  
  420f88:	fwait
  420f89:	pop    ebx
  420f8a:	out    dx,al
  420f8b:	loopne 0x420f71
  420f8d:	xchg   esi,eax
  420f8e:	pop    esi
  420f8f:	inc    ebp
  420f90:	inc    edx
  420f91:	leave  
  420f92:	push   edi
  420f93:	xor    ecx,DWORD PTR [edi+0x48ef32f0]
  420f99:	xchg   ebp,eax
  420f9a:	adc    BYTE PTR [eax-0x53378305],bl
  420fa0:	mov    edi,DWORD PTR [esi+0x59]
  420fa3:	sbb    DWORD PTR [ebp-0x35],ebp
  420fa6:	adc    ebp,DWORD PTR [eax]
  420fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fa9:	ja     0x420f55
  420fab:	mov    DWORD PTR ds:0xb8d991f2,ecx
  420fb1:	or     BYTE PTR [eax-0x5af6a348],dh
  420fb7:	in     al,0x9a
  420fb9:	loop   0x420fd2
  420fbb:	js     0x42100f
  420fbd:	adc    BYTE PTR ds:0xdcf16c9a,0xce
  420fc4:	scas   al,BYTE PTR es:[edi]
  420fc5:	fist   DWORD PTR [edi+eiz*4-0x7d]
  420fc9:	sub    ch,dl
  420fcb:	sub    eax,0xc5b0dadd
  420fd0:	bound  edx,QWORD PTR [edx-0x11f61c2a]
  420fd6:	call   0xf6039b12
  420fdb:	push   0x3f2a091a
  420fe0:	mov    esi,ebp
  420fe2:	dec    BYTE PTR [ecx]
  420fe4:	push   0x5a
  420fe6:	mov    ds:0xa79285ee,eax
  420feb:	inc    sp
  420fed:	js     0x421050
  420fef:	sub    dh,BYTE PTR [eax]
  420ff1:	ficom  DWORD PTR [eax-0x1f]
  420ff4:	pop    esi
  420ff5:	out    0x7a,eax
  420ff7:	sbb    BYTE PTR [edx-0xe],bh
  420ffa:	jb     0x420fd5
  420ffc:	sub    BYTE PTR [edi],ah
  420ffe:	xor    esp,DWORD PTR [di+0x4b]
  421002:	aaa    
  421003:	popf   
  421004:	push   esp
  421005:	lock imul edi,DWORD PTR [esp+0x2d1fe16f],0x54f78ee3
  421011:	push   esi
  421012:	push   0xffffffad
  421014:	mov    eax,DWORD PTR [eax-0x66]
  421017:	jmp    FWORD PTR [ebp+0x7b677943]
  42101d:	mov    cl,ah
  42101f:	mov    ds:0xb3387cee,eax
  421024:	or     dl,BYTE PTR [edx-0x5c]
  421027:	and    edi,edx
  421029:	adc    eax,0xe3f0c776
  42102e:	fsub   st(6),st
  421030:	clc    
  421031:	mov    al,ds:0x5d5a6838
  421036:	push   ecx
  421037:	pusha  
  421038:	jnp    0x42108e
  42103a:	cdq    
  42103b:	xor    al,0x76
  42103d:	lahf   
  42103e:	sbb    BYTE PTR ds:0x8f23a30d,0x91
  421045:	add    bh,BYTE PTR [esi+0x2e]
  421048:	mov    dh,0x8e
  42104a:	pop    esi
  42104b:	add    eax,0x1fd0923
  421050:	call   0xd7dc:0x64b17839
  421057:	cwde   
  421058:	pop    eax
  421059:	call   DWORD PTR [ebx+0x14]
  42105c:	push   ebp
  42105d:	hlt    
  42105e:	out    dx,al
  42105f:	or     al,0x1c
  421061:	stc    
  421062:	pop    edx
  421063:	mov    BYTE PTR [ecx+0x76],ch
  421066:	xchg   DWORD PTR [edi+0x60],edi
  421069:	ja     0x421007
  42106b:	mov    edx,0x8042e22a
  421070:	scas   eax,DWORD PTR es:[edi]
  421071:	jnp    0x42106f
  421073:	jge    0x42106f
  421075:	imul   esi,DWORD PTR [edi+0x46],0xef76f86f
  42107c:	icebp  
  42107d:	sub    DWORD PTR [ecx],edx
  42107f:	or     DWORD PTR [ebx+ecx*4-0x74],esi
  421083:	inc    eax
  421084:	hlt    
  421085:	mov    al,ds:0xd53e609e
  42108a:	lock xchg edi,eax
  42108c:	sub    eax,0x8f22a4c3
  421091:	mov    ss,WORD PTR [ebp+0x515545cf]
  421097:	and    eax,0x24b9ba9f
  42109c:	in     eax,0xb2
  42109e:	ds popa 
  4210a0:	adc    eax,0xf46cb0ff
  4210a5:	es loop 0x421043
  4210a8:	ins    DWORD PTR es:[edi],dx
  4210a9:	stc    
  4210aa:	(bad)  
  4210ab:	(bad)  
  4210ac:	ds push ds
  4210ae:	mov    al,0x91
  4210b0:	dec    edi
  4210b1:	mov    ecx,0x5af80294
  4210b6:	cli    
  4210b7:	mov    dh,0x74
  4210b9:	push   cs
  4210ba:	xchg   esp,eax
  4210bb:	call   0x19a:0x257d0036
  4210c2:	cmp    esi,DWORD PTR [ebx+0x233bb47]
  4210c8:	xchg   ebx,eax
  4210c9:	sub    eax,DWORD PTR [esp+edi*1-0x3c4adabf]
  4210d0:	pop    ss
  4210d1:	stos   DWORD PTR es:[edi],eax
  4210d2:	pop    edx
  4210d3:	sub    BYTE PTR [edi+ecx*1-0x30],al
  4210d7:	pop    ebx
  4210d8:	sub    esi,DWORD PTR [esi]
  4210da:	mul    BYTE PTR [eax]
  4210dc:	xchg   ebx,eax
  4210dd:	nop
  4210de:	or     BYTE PTR [esi],ch
  4210e0:	mov    al,ds:0x2b58fe
  4210e5:	sbb    BYTE PTR [ebx+0x1a346ab3],dh
  4210eb:	sahf   
  4210ec:	(bad)  
  4210ed:	jle    0x42114f
  4210ef:	dec    ecx
  4210f0:	jg     0x421104
  4210f2:	xchg   esi,eax
  4210f3:	xchg   esi,eax
  4210f4:	jo     0xf602779f
  4210fa:	push   edi
  4210fb:	or     al,0x6
  4210fd:	or     al,0x7c
  4210ff:	iret   
  421100:	nop
  421101:	popf   
  421102:	cmp    BYTE PTR [edx+0x47],al
  421105:	imul   eax,DWORD PTR [ecx-0x489b2298],0x61
  42110c:	outs   dx,DWORD PTR ds:[esi]
  42110d:	dec    ebp
  42110e:	pop    ecx
  42110f:	lahf   
  421110:	adc    al,0x1d
  421112:	stos   BYTE PTR es:[edi],al
  421113:	cmp    DWORD PTR [edi+0x78],ecx
  421116:	faddp  st(3),st
  421118:	imul   ebx,eax,0x3e884e1d
  42111e:	stos   BYTE PTR es:[edi],al
  42111f:	mov    ah,0xec
  421121:	outs   dx,DWORD PTR ds:[esi]
  421122:	adc    DWORD PTR [edi-0x6571cbb1],0xfffffff6
  421129:	lods   al,BYTE PTR gs:[esi]
  42112b:	push   edx
  42112c:	add    al,0xfb
  42112e:	sbb    BYTE PTR ds:0x289e62b5,dh
  421134:	int3   
  421135:	xchg   edi,eax
  421136:	arpl   WORD PTR [ecx+0x61],dx
  421139:	push   es
  42113a:	mov    ebx,0x8f5a07fc
  42113f:	or     eax,0x71e1a4c3
  421144:	add    esi,DWORD PTR [esi-0x6ecce1b9]
  42114a:	and    BYTE PTR [ecx-0x5a],al
  42114d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114e:	sub    bl,bl
  421150:	popa   
  421151:	lea    eax,[ecx-0x48]
  421154:	pusha  
  421155:	outs   dx,DWORD PTR ds:[esi]
  421156:	cli    
  421157:	adc    BYTE PTR [ebp-0x7b4105ab],ah
  42115d:	int    0x9d
  42115f:	scas   al,BYTE PTR es:[edi]
  421160:	ja     0x421100
  421162:	in     eax,0xd7
  421164:	mov    ebp,0x8107b46e
  421169:	and    BYTE PTR [esi],cl
  42116b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116c:	pop    ebp
  42116d:	cmc    
  42116e:	not    DWORD PTR [ebp+eax*4+0x9]
  421172:	mov    BYTE PTR [esi+esi*8-0x603532e7],dh
  421179:	stc    
  42117a:	push   ds
  42117b:	call   0x30089881
  421180:	leave  
  421181:	mov    al,0xed
  421183:	dec    edi
  421184:	out    dx,al
  421185:	pop    ss
  421186:	fnstcw WORD PTR [esi+0x6f9a982c]
  42118c:	or     BYTE PTR [ecx-0x74],al
  42118f:	ror    DWORD PTR [ecx-0x3d],0x2c
  421193:	out    0xca,al
  421195:	cmp    eax,0xd631d3b6
  42119a:	outs   dx,BYTE PTR ds:[esi]
  42119b:	test   al,0xdc
  42119d:	imul   esp,DWORD PTR [ebx],0xfab32984
  4211a3:	dec    esp
  4211a4:	cmp    eax,0x1caa122e
  4211a9:	call   0xe19d:0x26b824f0
  4211b0:	xchg   ecx,eax
  4211b1:	icebp  
  4211b2:	mov    BYTE PTR [eax-0x315cdb6],al
  4211b8:	(bad)  [ebx+0x1a981d2e]
  4211be:	data16 mov bh,0x3f
  4211c1:	pop    esp
  4211c2:	pop    ebx
  4211c3:	fcom   DWORD PTR [edi]
  4211c5:	imul   edi,DWORD PTR [ecx-0x60c37ff3],0xffffffeb
  4211cc:	ficom  WORD PTR [edx+eiz*2-0x34]
  4211d0:	jnp    0x4211b5
  4211d2:	pop    eax
  4211d3:	dec    esi
  4211d4:	in     eax,dx
  4211d5:	or     BYTE PTR [eax-0x1f2083dd],cl
  4211db:	push   edx
  4211dc:	inc    esp
  4211dd:	push   ecx
  4211de:	adc    BYTE PTR [esi],bl
  4211e0:	xchg   ecx,eax
  4211e1:	out    0x3,eax
  4211e3:	and    eax,0xc9bb775e
  4211e8:	stos   BYTE PTR es:[edi],al
  4211e9:	xor    esp,DWORD PTR ss:[si+0x58]
  4211ee:	out    0x7a,eax
  4211f0:	xor    dl,ah
  4211f2:	scas   al,BYTE PTR es:[edi]
  4211f3:	xchg   ebp,eax
  4211f4:	add    DWORD PTR [ecx+0x4bd4a152],esp
  4211fa:	jbe    0x421198
  4211fc:	and    dh,BYTE PTR [esi]
  4211fe:	dec    esi
  4211ff:	jg     0x421205
  421201:	ffreep st(5)
  421203:	aas    
  421204:	mov    ah,0x59
  421206:	stos   DWORD PTR es:[edi],eax
  421207:	fucomp st(5)
  421209:	xor    DWORD PTR [eax+0x3],0x79632280
  421210:	pop    esi
  421211:	sub    DWORD PTR [ebx-0x7206ed4d],edi
  421217:	pop    ecx
  421218:	xchg   al,ah
  42121a:	ins    BYTE PTR es:[edi],dx
  42121b:	sub    DWORD PTR [esi],edx
  42121d:	sub    al,0xc
  42121f:	arpl   bx,bp
  421221:	push   es
  421222:	and    DWORD PTR [ecx+0x1b],ebp
  421225:	xchg   edx,eax
  421226:	repnz sahf 
  421228:	popf   
  421229:	cs clc 
  42122b:	fadd   QWORD PTR [edi-0x12]
  42122e:	mov    BYTE PTR [edi+0x7c],al
  421231:	or     eax,0x2a573dd2
  421237:	popa   
  421238:	icebp  
  421239:	loopne 0x4211ff
  42123b:	xor    al,0xbe
  42123d:	ret    
  42123e:	fisubr WORD PTR [ebx]
  421240:	pop    esi
  421241:	mov    WORD PTR [esi+ebp*1],?
  421244:	scas   eax,DWORD PTR es:[edi]
  421245:	xchg   ebx,eax
  421246:	cld    
  421247:	xor    esi,DWORD PTR [ecx+eax*8+0x14]
  42124b:	or     al,0x68
  42124d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42124e:	dec    ebx
  42124f:	imul   edi,DWORD PTR [esi],0x1b
  421252:	xchg   edi,eax
  421253:	jp     0x421219
  421255:	sub    cl,ah
  421257:	out    0x59,al
  421259:	loopne 0x4211e7
  42125b:	daa    
  42125c:	or     edi,0xffffffeb
  42125f:	or     BYTE PTR [esi+eiz*1+0x6073e1b8],dh
  421266:	push   edx
  421267:	scas   al,BYTE PTR es:[edi]
  421268:	push   0x7a34950b
  42126d:	aas    
  42126e:	test   al,0xdf
  421270:	(bad)  
  421271:	mov    esi,0x40d007ca
  421276:	mov    WORD PTR [ebp+0x4a],?
  421279:	xchg   ebx,eax
  42127a:	fcmovb st,st(1)
  42127c:	dec    edx
  42127d:	push   0xffffff8f
  42127f:	sub    DWORD PTR [edx+0x5e],edi
  421282:	mov    ds:0x67266817,al
  421287:	xor    DWORD PTR [eax-0x24c66c43],ebx
  42128d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128f:	out    0x77,eax
  421291:	loop   0x42126d
  421293:	pop    es
  421294:	shl    DWORD PTR [edi+0x48e4ce16],cl
  42129a:	in     eax,dx
  42129b:	mov    dl,0x41
  42129d:	test   BYTE PTR [eax-0x7c],0x7f
  4212a1:	leave  
  4212a2:	shl    BYTE PTR [ebx],cl
  4212a4:	mov    eax,ds:0x9c7d11a3
  4212a9:	push   eax
  4212aa:	mov    DWORD PTR [edi+eiz*2+0x6],edi
  4212ae:	(bad)  
  4212af:	and    bh,ah
  4212b1:	add    al,0x4b
  4212b3:	cmp    DWORD PTR [edi+0x35ef1440],edx
  4212b9:	mov    dh,0xb1
  4212bb:	mov    al,0xce
  4212bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212be:	mov    edi,0xa4362ea5
  4212c3:	fsubr  QWORD PTR ds:0xe57501ce
  4212c9:	sbb    eax,0x3e362e25
  4212ce:	loopne 0x421348
  4212d0:	mov    DWORD PTR [esi+0x20701fb4],edx
  4212d6:	push   edx
  4212d7:	aas    
  4212d8:	push   ebx
  4212d9:	dec    esi
  4212da:	jo     0x4212a6
  4212dc:	imul   ecx,DWORD PTR [ebx],0x53
  4212df:	mov    bl,0xd6
  4212e1:	stc    
  4212e2:	popa   
  4212e3:	add    DWORD PTR [ecx+edx*8+0x7ec92f7c],ecx
  4212ea:	fisttp QWORD PTR [ebx-0x5d711584]
  4212f0:	add    DWORD PTR [ecx+ecx*4],ecx
  4212f3:	push   ecx
  4212f4:	jb     0x4212e4
  4212f6:	mov    ds:0xf3b7b17,al
  4212fb:	(bad)  
  4212fc:	repnz or eax,0x40348981
  421302:	fiadd  WORD PTR [esp]
  421305:	fist   DWORD PTR [ecx+0x77]
  421308:	cs out dx,eax
  42130a:	adc    al,0xf2
  42130c:	cli    
  42130d:	aad    0xf1
  42130f:	xor    bh,BYTE PTR [ebx]
  421311:	adc    ecx,DWORD PTR [edx+0x2795187d]
  421317:	mov    ch,0x39
  421319:	fisttp DWORD PTR [ebp-0x7a27ed84]
  42131f:	addr16 pop ecx
  421321:	adc    eax,0x27232e98
  421326:	ds jle 0x4213a2
  421329:	mov    BYTE PTR [ebp-0x6683ac10],bl
  42132f:	dec    ebp
  421330:	shl    BYTE PTR [esi-0x37f556a2],1
  421336:	sub    BYTE PTR [edi+0x5c],dh
  421339:	mov    esp,?
  42133b:	lods   al,BYTE PTR ds:[esi]
  42133c:	xchg   ebp,eax
  42133d:	mov    DWORD PTR [ebx-0x13],edi
  421340:	je     0x42135a
  421342:	call   0x8e20:0x64eb3810
  421349:	daa    
  42134a:	cdq    
  42134b:	and    dh,bl
  42134d:	mov    bl,0xf9
  42134f:	pop    ss
  421350:	lds    ecx,FWORD PTR [edi+0x71]
  421353:	dec    edi
  421354:	fist   WORD PTR [edi-0x2958e34e]
  42135a:	sbb    ah,BYTE PTR [esi-0x56]
  42135d:	ins    BYTE PTR es:[edi],dx
  42135e:	and    DWORD PTR [edi],ecx
  421360:	inc    ebx
  421361:	dec    esp
  421362:	popf   
  421363:	xchg   esp,eax
  421364:	or     DWORD PTR [ebp+ebx*1-0x74],ecx
  421368:	sub    eax,0xf275684c
  42136d:	nop
  42136e:	int3   
  42136f:	in     eax,0x68
  421371:	adc    eax,0x90f73c7a
  421376:	ret    0xe706
  421379:	loope  0x4213d7
  42137b:	fnstcw WORD PTR [ebp+0xd]
  42137e:	xchg   DWORD PTR [ebp-0x602052bf],esi
  421384:	jnp    0x4213a0
  421386:	xchg   esp,eax
  421387:	push   edx
  421388:	imul   esp,DWORD PTR [esi],0x1ac1f1df
  42138e:	sbb    DWORD PTR [edi-0x523137a4],0xffffffed
  421395:	push   edx
  421396:	or     DWORD PTR [edi],edi
  421398:	cs stos DWORD PTR es:[edi],eax
  42139a:	pop    esi
  42139b:	add    BYTE PTR [esp+edi*2],ch
  42139e:	lods   al,BYTE PTR ds:[esi]
  42139f:	dec    ebp
  4213a0:	push   esp
  4213a1:	xchg   edx,eax
  4213a2:	les    ebx,FWORD PTR [edx+0x73e61b71]
  4213a8:	js     0x4213e0
  4213aa:	push   esi
  4213ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ac:	out    0x5,eax
  4213ae:	jl     0x4213ef
  4213b0:	xor    ax,0x9f98
  4213b4:	fisubr DWORD PTR [esi-0x66bdd96a]
  4213ba:	fcom   DWORD PTR [ebx]
  4213bc:	ins    DWORD PTR es:[edi],dx
  4213bd:	push   es
  4213be:	add    DWORD PTR [ebp-0x2c],edx
  4213c1:	in     eax,dx
  4213c2:	mov    edi,0x6b790d0c
  4213c7:	jbe    0x42137c
  4213c9:	(bad)  
  4213ca:	loope  0x4213f4
  4213cc:	gs popa 
  4213ce:	jp     0x4213f1
  4213d0:	in     al,dx
  4213d1:	ror    BYTE PTR [ecx],cl
  4213d3:	lods   al,BYTE PTR fs:[esi]
  4213d5:	push   ecx
  4213d6:	das    
  4213d7:	rcl    DWORD PTR [ebx],1
  4213d9:	stc    
  4213da:	(bad)  
  4213db:	hlt    
  4213dc:	je     0x421439
  4213de:	(bad)  
  4213e0:	pop    es
  4213e1:	sub    ebx,eax
  4213e3:	or     bh,BYTE PTR [esi]
  4213e5:	mov    ebp,0x13f09476
  4213ea:	mov    fs,WORD PTR [edx-0x5e]
  4213ed:	mov    WORD PTR [ebx+0x25],es
  4213f0:	jne    0x42139a
  4213f2:	xchg   esp,eax
  4213f3:	loopne 0x421455
  4213f5:	stos   DWORD PTR es:[edi],eax
  4213f6:	iret   
  4213f7:	cmp    eax,0xc15caaa7
  4213fc:	mov    BYTE PTR [edx+0x68ddc11e],dl
  421402:	stos   DWORD PTR es:[edi],eax
  421403:	sbb    edx,esp
  421405:	out    dx,eax
  421406:	fwait
  421407:	shr    BYTE PTR [ebx+0x6df09505],1
  42140d:	int    0xc9
  42140f:	stc    
  421410:	push   ss
  421411:	xchg   ebp,eax
  421412:	fwait
  421413:	aam    0x80
  421415:	mov    BYTE PTR [ecx+eax*4-0x2560b4d8],bl
  42141c:	ins    DWORD PTR es:[edi],dx
  42141d:	ror    dh,1
  42141f:	outs   dx,BYTE PTR ds:[esi]
  421420:	dec    esi
  421421:	sbb    DWORD PTR [edx],ecx
  421423:	sub    BYTE PTR [edi+0x33],al
  421426:	out    dx,eax
  421427:	aaa    
  421428:	test   BYTE PTR [ebp+0xc0fec19],dh
  42142e:	inc    ebp
  42142f:	ins    BYTE PTR es:[edi],dx
  421430:	jl     0x4213d4
  421432:	pushf  
  421433:	or     dl,BYTE PTR [ebx]
  421435:	xor    edi,esp
  421437:	fild   DWORD PTR [edi]
  421439:	rcl    BYTE PTR [eax+ecx*4+0x29],0x60
  42143e:	out    dx,al
  42143f:	xchg   ebx,eax
  421440:	and    DWORD PTR [edx+0xc455e62],edx
  421446:	or     BYTE PTR [eax-0x5e013a7e],0xa1
  42144d:	js     0x421465
  42144f:	adc    al,0xe4
  421451:	sub    eax,0x925b811
  421456:	iret   
  421457:	(bad)  
  421458:	les    ecx,FWORD PTR [esi-0x11]
  42145b:	sbb    al,0x7d
  42145d:	xchg   ebp,eax
  42145e:	jmp    0x5285:0x79357632
  421465:	cmp    DWORD PTR [esi-0x27],ecx
  421468:	mov    ds,edi
  42146a:	or     ah,dl
  42146c:	fadd   QWORD PTR ds:0xd0d44c3a
  421472:	dec    eax
  421473:	push   cs
  421474:	sub    bl,BYTE PTR [edi]
  421476:	xchg   edi,eax
  421477:	sub    cl,BYTE PTR [esi]
  421479:	or     bl,dh
  42147b:	sbb    dl,BYTE PTR [ebp+eax*1-0x80]
  42147f:	scas   al,BYTE PTR es:[edi]
  421480:	ror    DWORD PTR [ebx+0x6a],1
  421483:	dec    edx
  421484:	adc    DWORD PTR [ecx],esi
  421486:	test   al,0xdf
  421488:	add    edi,DWORD PTR [esi]
  42148a:	arpl   WORD PTR [ebp-0x60f78b31],ax
  421490:	cli    
  421491:	test   al,0x69
  421493:	or     BYTE PTR [edx-0x17c5d1f],ah
  421499:	inc    eax
  42149a:	pop    ebp
  42149b:	aaa    
  42149c:	sub    eax,0x78b31dd5
  4214a1:	dec    ecx
  4214a2:	add    DWORD PTR [ecx+0x65fce352],edx
  4214a8:	cs sbb cl,ah
  4214ab:	rcl    BYTE PTR [ecx-0x1e70c31f],0x53
  4214b2:	xchg   edx,eax
  4214b3:	inc    eax
  4214b4:	inc    DWORD PTR gs:[ebp-0x71ab9cdf]
  4214bb:	sbb    bh,dl
  4214bd:	push   0x6e79a6cf
  4214c2:	xchg   esp,eax
  4214c3:	int3   
  4214c4:	push   ebp
  4214c5:	dec    edx
  4214c6:	push   ecx
  4214c7:	mov    bh,0x53
  4214c9:	mov    esi,0x839e5acb
  4214ce:	mov    al,0xce
  4214d0:	in     al,0x1
  4214d2:	xchg   edi,eax
  4214d3:	pop    eax
  4214d4:	(bad)  
  4214d5:	and    BYTE PTR ds:0x6784d9da,bl
  4214db:	or     al,0xbe
  4214dd:	or     al,0x1a
  4214df:	mov    bh,BYTE PTR [eax+0x4fd184f3]
  4214e5:	das    
  4214e6:	cli    
  4214e7:	or     BYTE PTR [edx+0x9],0xb9
  4214eb:	jnp    0x4214f1
  4214ed:	into   
  4214ee:	mov    DWORD PTR [edx+ebp*2+0x6a593a54],ecx
  4214f5:	push   es
  4214f6:	clc    
  4214f7:	sbb    al,0x45
  4214f9:	test   al,0xc3
  4214fb:	ds cs push ebp
  4214fe:	aaa    
  4214ff:	mov    ch,BYTE PTR ds:0xae89bbdf
  421505:	add    ebx,DWORD PTR [edi+0x3b]
  421508:	fsubr  QWORD PTR [ebx]
  42150a:	enter  0x4b2f,0x47
  42150e:	shr    BYTE PTR [ebp+0x381c8f21],cl
  421514:	mov    edi,0x30944d6a
  421519:	dec    edx
  42151a:	imul   edx,eax,0xffffffa8
  42151d:	mov    ebp,?
  42151f:	lods   al,BYTE PTR ds:[esi]
  421520:	aam    0x7f
  421522:	xchg   DWORD PTR [esi-0x559602cc],esp
  421528:	and    al,cl
  42152a:	sub    DWORD PTR [esi+esi*2-0x79],eax
  42152e:	and    eax,0x71a5c88c
  421533:	pop    esp
  421534:	aam    0x1
  421536:	mov    dh,0xa5
  421538:	pop    edx
  421539:	ds cdq 
  42153b:	xchg   BYTE PTR [edx+0x33],ah
  42153e:	into   
  42153f:	fs xor cl,dl
  421542:	sbb    eax,0x7c8639be
  421547:	jb     0x4214d3
  421549:	xchg   edi,eax
  42154a:	punpckhbw mm4,QWORD PTR [edi-0x10]
  42154e:	(bad)  
  42154f:	iret   
  421550:	xlat   BYTE PTR ds:[ebx]
  421551:	dec    edi
  421552:	aas    
  421553:	jnp    0x421522
  421555:	add    ah,bh
  421557:	xchg   edx,eax
  421558:	clc    
  421559:	add    al,0x1b
  42155b:	xchg   ebp,eax
  42155c:	rcr    DWORD PTR [edi-0x62],1
  42155f:	mov    ebp,0xe554a6d3
  421564:	push   esi
  421565:	pushf  
  421566:	enter  0xc0ac,0xc0
  42156a:	rol    al,0xc0
  42156d:	rol    al,0xc0
  421570:	rol    al,0xc0
  421573:	rol    al,0xc0
  421576:	rol    al,0xc0
  421579:	rol    al,0xc0
  42157c:	rol    al,0xc0
  42157f:	rol    al,0xc0
  421582:	rol    al,0xc0
  421585:	rol    al,0xc0
  421588:	rol    al,0xc0
  42158b:	rol    al,0xc0
  42158e:	rol    al,0xc0
  421591:	rol    al,0xc0
  421594:	rol    al,0xc0
  421597:	rol    al,0xc0
  42159a:	rol    al,0xc0
  42159d:	rol    al,0xc0
  4215a0:	rol    al,0xc0
  4215a3:	rol    al,0xc0
  4215a6:	rol    al,0xc0
  4215a9:	rol    al,0xc0
  4215ac:	rol    al,0xc0
  4215af:	shr    BYTE PTR [edi+0x1db00ef5],0x7e
  4215b6:	ins    DWORD PTR es:[edi],dx
  4215b7:	jb     0x4215c9
  4215b9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4215bb:	pushf  
  4215bc:	ins    DWORD PTR es:[edi],dx
  4215bd:	mov    esp,0x85053543
  4215c2:	aad    0x4c
  4215c4:	adc    ah,dh
  4215c6:	add    BYTE PTR [ecx-0x6fb081f5],0x5b
  4215cd:	inc    eax
  4215ce:	test   BYTE PTR [edi-0x7a273591],ah
  4215d4:	xchg   edi,eax
  4215d5:	sbb    ch,dl
  4215d7:	iret   
  4215d8:	mov    WORD PTR [ebp+0x39],cs
  4215db:	inc    edx
  4215dc:	aad    0x3f
  4215de:	fsubr  st(0),st
  4215e0:	(bad)  
  4215e1:	les    edx,FWORD PTR [ebx+0x13a20502]
  4215e7:	loop   0x4215fd
  4215e9:	mov    ds:0xea4b406e,eax
  4215ee:	or     eax,0x8f42f73e
  4215f3:	xchg   ecx,eax
  4215f4:	cmp    al,0xd
  4215f6:	bound  esp,QWORD PTR [edi+ebp*4]
  4215f9:	stc    
  4215fa:	inc    ecx
  4215fb:	dec    edi
  4215fc:	xchg   ebp,eax
  4215fd:	outs   dx,DWORD PTR ds:[esi]
  4215fe:	dec    ebp
  4215ff:	jnp    0x421596
  421601:	or     eax,ebx
  421603:	mov    dl,0x6
  421605:	push   0xcd3b24a
  42160a:	sbb    al,0x46
  42160c:	jg     0x421662
  42160e:	imul   esi,DWORD PTR [esi+0x5a8ef97d],0xffffffa4
  421615:	inc    edx
  421616:	dec    ebx
  421617:	jp     0x421652
  421619:	pop    ss
  42161a:	int3   
  42161b:	inc    esi
  42161c:	inc    esi
  42161d:	nop
  42161e:	sbb    eax,edi
  421620:	ror    cl,0xdb
  421623:	xchg   ebx,eax
  421624:	rol    BYTE PTR [edi+0x643f0372],0x1d
  42162b:	xchg   BYTE PTR [ebp-0x80],dl
  42162e:	jnp    0x42167e
  421630:	loope  0x421630
  421632:	lock lods al,BYTE PTR ds:[esi]
  421634:	xchg   ebx,eax
  421635:	add    bl,dh
  421637:	push   edx
  421638:	fstp   st(2)
  42163a:	add    DWORD PTR [ebp+0x13380b26],0x2
  421641:	mov    edx,0xcf76f783
  421646:	test   cl,dh
  421648:	pop    ecx
  421649:	xor    BYTE PTR ds:0x99a0512f,cl
  42164f:	lock mov ebp,DWORD PTR [ebx+0x2e0857bd]
  421656:	ins    DWORD PTR es:[edi],dx
  421657:	out    0x99,al
  421659:	xchg   esi,eax
  42165a:	add    BYTE PTR [eax],dh
  42165c:	or     bh,0xc4
  42165f:	inc    ebx
  421660:	int3   
  421661:	sub    ah,BYTE PTR [ecx+0x4a690732]
  421667:	jg     0x42162c
  421669:	mov    al,ds:0x209775a1
  42166e:	(bad)  
  421670:	add    edx,ebp
  421672:	aad    0x48
  421674:	xor    BYTE PTR [esi-0x3fdea737],0xb4
  42167b:	ror    dh,1
  42167d:	sub    ah,dl
  42167f:	adc    al,0x22
  421681:	int    0x39
  421683:	call   0x88d9:0x8f950ace
  42168a:	into   
  42168b:	ret    0x8da
  42168e:	ins    BYTE PTR es:[edi],dx
  42168f:	nop
  421690:	sbb    DWORD PTR [edx+0x2d1841d],ebp
  421696:	sub    eax,0xba7af152
  42169b:	out    dx,eax
  42169c:	push   esp
  42169d:	enter  0x702,0x6d
  4216a1:	loopne 0x4216b6
  4216a3:	pop    esp
  4216a4:	mov    cl,0xf5
  4216a6:	mov    ecx,0x95489c55
  4216ab:	cmp    edx,DWORD PTR [ecx+0x3552b0e1]
  4216b1:	pop    ss
  4216b2:	cmc    
  4216b3:	dec    BYTE PTR [ebx+0x77]
  4216b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b7:	lock in al,dx
  4216b9:	aas    
  4216ba:	push   ebp
  4216bb:	push   edx
  4216bc:	adc    ecx,DWORD PTR [ecx-0x1bbe03cd]
  4216c2:	xchg   esi,eax
  4216c3:	add    esp,DWORD PTR [eax]
  4216c5:	jo     0x421699
  4216c7:	out    dx,eax
  4216c8:	loopne 0x4216db
  4216ca:	pop    esp
  4216cb:	rcr    DWORD PTR [eax-0x1e4d41ce],0xdb
  4216d2:	test   BYTE PTR [ebp-0x5aeff3e8],0x27
  4216d9:	(bad)  
  4216da:	in     al,0xe2
  4216dc:	jbe    0x421754
  4216de:	mov    ebp,0xdfd5e1b7
  4216e3:	jecxz  0x42169e
  4216e5:	pop    ecx
  4216e6:	loopne 0x421740
  4216e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e9:	inc    esi
  4216ea:	ss adc al,0x12
  4216ed:	xchg   ecx,eax
  4216ee:	out    dx,al
  4216ef:	jle    0x4216cb
  4216f1:	cmp    eax,0xb801345f
  4216f6:	add    BYTE PTR [esi],0xf9
  4216f9:	repz dec esp
  4216fb:	retf   0x5971
  4216fe:	add    al,0x7d
  421700:	and    al,bh
  421702:	mov    ch,0xcb
  421704:	jp     0x421708
  421706:	fbstp  TBYTE PTR [ebx+0x5fd9d230]
  42170c:	addr16 out 0x4c,al
  42170f:	jge    0x421721
  421711:	clc    
  421712:	retf   
  421713:	pushf  
  421714:	push   0xffffffc5
  421716:	push   0x98ce43c9
  42171b:	mov    ds:0xada07f87,al
  421720:	imul   ecx,DWORD PTR [ecx+0x11f423d0],0x7be83045
  42172a:	lds    esp,FWORD PTR [edx-0xf]
  42172d:	fcmovne st,st(2)
  42172f:	cs inc edi
  421731:	out    0x90,eax
  421733:	mov    edi,0x17b011fb
  421738:	pushf  
  421739:	enter  0x8535,0xe4
  42173d:	pop    edx
  42173e:	dec    edi
  42173f:	pop    esp
  421740:	mov    ch,0x7b
  421742:	int    0x4
  421744:	jnp    0x42178e
  421746:	fnstenv [eax-0x3f]
  421749:	mov    bl,BYTE PTR [esi]
  42174b:	repz jmp 0xc77541a
  421751:	ss jnp 0x421721
  421754:	push   0xffffffb2
  421756:	bound  ebp,QWORD PTR [edi+ebx*8+0x7]
  42175a:	mov    edi,0x1841eb70
  42175f:	dec    ebp
  421760:	sbb    bh,BYTE PTR cs:[ebx-0x6c75cad6]
  421767:	pop    ecx
  421768:	ja     0x421739
  42176a:	pusha  
  42176b:	push   esi
  42176c:	inc    esi
  42176d:	retf   0xf5d7
  421770:	retf   0x7f93
  421773:	sub    BYTE PTR [edx],dl
  421775:	and    al,0x23
  421777:	dec    ebx
  421778:	jecxz  0x421793
  42177a:	leave  
  42177b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42177c:	loopne 0x42174c
  42177e:	mov    ch,0x62
  421780:	mov    dh,0x7f
  421782:	inc    esp
  421783:	imul   ebx,DWORD PTR ds:0x5f5e4201,0xffffffb0
  42178a:	mov    esp,0xea08725f
  42178f:	cmp    dh,al
  421791:	and    dh,BYTE PTR [edi+0x20]
  421794:	fadd   st(5),st
  421796:	add    BYTE PTR [ebx+eiz*1],bh
  421799:	jo     0x42172f
  42179b:	aad    0x50
  42179d:	push   DWORD PTR [eax+0x56bd2126]
  4217a3:	push   ecx
  4217a4:	adc    al,0x83
  4217a6:	cld    
  4217a7:	jo     0x421809
  4217a9:	ret    
  4217aa:	lock pushw cs
  4217ad:	loop   0x4217bd
  4217af:	xor    ah,ch
  4217b1:	bound  edx,QWORD PTR [edx]
  4217b3:	push   0xdbc73300
  4217b8:	sub    ch,BYTE PTR [ebx+0x70ae0f1c]
  4217be:	cmc    
  4217bf:	pop    ebp
  4217c0:	mov    dh,0xa9
  4217c2:	cwde   
  4217c3:	inc    esi
  4217c4:	push   0x866b9501
  4217c9:	cwde   
  4217ca:	enter  0x66c,0xd7
  4217ce:	xchg   esi,eax
  4217cf:	je     0x4217c1
  4217d1:	inc    edi
  4217d2:	pop    ecx
  4217d3:	jl     0x421786
  4217d5:	out    0x14,al
  4217d7:	push   es
  4217d8:	cmp    ch,BYTE PTR [eax+0x722cb29a]
  4217de:	pop    ds
  4217df:	mov    ah,0x51
  4217e1:	ss or  al,0xd5
  4217e4:	cmp    DWORD PTR [ecx],esi
  4217e6:	int3   
  4217e7:	sub    al,0xb8
  4217e9:	sbb    cl,BYTE PTR [eax-0x3024feae]
  4217ef:	jmp    0x421851
  4217f1:	enter  0x84d8,0xff
  4217f5:	mov    ch,0xb3
  4217f7:	test   BYTE PTR ds:0x95992960,bl
  4217fd:	add    al,0xc3
  4217ff:	sbb    bh,bl
  421801:	mov    ?,WORD PTR [ecx+0x5a18dd4c]
  421807:	pusha  
  421808:	jbe    0x421857
  42180a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42180b:	lods   eax,DWORD PTR ds:[esi]
  42180c:	xchg   DWORD PTR [edx+0x4cd737ad],eax
  421812:	inc    edi
  421813:	cmp    al,0x6
  421815:	jne    0x4217e6
  421817:	dec    esi
  421818:	mov    gs,WORD PTR [esp+ebp*8-0x79e6f7fc]
  42181f:	mov    ds:0xc1ad8c85,eax
  421824:	mov    ebp,0xacf87b5a
  421829:	ja     0x42183d
  42182b:	ins    DWORD PTR es:[edi],dx
  42182c:	mov    ds:0x3bccb4fa,al
  421831:	(bad)  [ecx]
  421833:	fsubr  st(1),st
  421835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421836:	jo     0x421897
  421838:	cs mov edx,0x9aa525dc
  42183e:	cmc    
  42183f:	fist   WORD PTR [eax+0x22]
  421842:	ja     0x421816
  421844:	and    cl,bl
  421846:	sub    al,0x86
  421848:	int    0x4c
  42184a:	cwde   
  42184b:	wrmsr  
  42184d:	aas    
  42184e:	dec    esi
  42184f:	outs   dx,BYTE PTR ds:[esi]
  421850:	pop    ecx
  421851:	dec    esp
  421852:	lea    eax,[ebx+0x1fbb23ad]
  421858:	mov    al,0xf8
  42185a:	(bad)  
  42185b:	pop    esi
  42185c:	dec    ecx
  42185d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42185e:	pop    edx
  42185f:	retf   0x40d
  421862:	mov    ebx,0xe1f180d2
  421867:	(bad)  
  421868:	mov    ds:0x6c8b3a85,al
  42186d:	popa   
  42186e:	dec    ebp
  42186f:	arpl   WORD PTR [eax+0x64b38a25],di
  421875:	jbe    0x4218f5
  421877:	mov    cl,0xc8
  421879:	and    eax,0x606825f5
  42187e:	fistp  DWORD PTR [ecx+ebx*1]
  421881:	sub    BYTE PTR [ebp+ebx*2+0x6e],bl
  421885:	dec    edi
  421886:	repnz sbb dl,BYTE PTR [ebx]
  421889:	sub    eax,DWORD PTR [edi+0x18ff7f7f]
  42188f:	add    ecx,ecx
  421891:	push   cs
  421892:	push   esi
  421893:	add    al,0x22
  421895:	or     DWORD PTR [eax],ebp
  421897:	jae    0x42185f
  421899:	dec    edi
  42189a:	mov    DWORD PTR [eax+0x7d],ebx
  42189d:	adc    eax,0xf7db79
  4218a3:	xor    BYTE PTR [edx+0x60b73050],bl
  4218a9:	into   
  4218aa:	call   0x5f7f:0x435e0121
  4218b1:	sub    al,0xac
  4218b3:	add    bh,BYTE PTR [esi+0x51391f91]
  4218b9:	test   DWORD PTR [eax+edx*8-0x43],esi
  4218bd:	and    eax,0x25b96f08
  4218c2:	push   ss
  4218c3:	jmp    0x3eed7c92
  4218c8:	pop    edx
  4218c9:	xchg   ebx,esi
  4218cb:	cmp    al,0xe2
  4218cd:	int    0x8e
  4218cf:	iret   
  4218d0:	xlat   BYTE PTR ds:[ebx]
  4218d1:	imul   edi,DWORD PTR [esi-0x7d],0x46
  4218d5:	lahf   
  4218d6:	jl     0x42188d
  4218d8:	jp     0x4218ac
  4218da:	jbe    0x4218ac
  4218dc:	stos   BYTE PTR es:[edi],al
  4218dd:	pop    edi
  4218de:	and    BYTE PTR [ebx-0x5d258f5b],ah
  4218e4:	inc    ebp
  4218e5:	in     eax,0x8e
  4218e7:	sub    bh,BYTE PTR [ebx]
  4218e9:	push   ecx
  4218ea:	push   0xee1a0b81
  4218ef:	xor    ebx,DWORD PTR [ecx-0x4515e735]
  4218f5:	xor    al,0xf9
  4218f7:	jl     0x421949
  4218f9:	ror    BYTE PTR [esi-0x61fd1bde],cl
  4218ff:	pop    es
  421900:	adc    edx,ecx
  421902:	enter  0x932a,0x1a
  421906:	push   esi
  421907:	in     eax,dx
  421908:	mov    al,ds:0x92a6165b
  42190d:	push   cs
  42190e:	(bad)  
  42190f:	ins    BYTE PTR es:[edi],dx
  421910:	ins    DWORD PTR es:[edi],dx
  421911:	shr    dh,0xdb
  421914:	retf   0x9f5d
  421917:	rol    DWORD PTR [ecx+esi*2+0x32],1
  42191b:	jecxz  0x4218e7
  42191d:	repz jbe 0x42195b
  421920:	jnp    0x421918
  421922:	out    0xd5,al
  421924:	adc    al,0xd3
  421926:	mov    ecx,0xc267b261
  42192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42192c:	add    eax,0x38cf1c2c
  421931:	add    DWORD PTR ds:0xb8087222,0xf033d7d5
  42193b:	jp     0x42199e
  42193d:	mov    bh,0xa1
  42193f:	adc    ebx,DWORD PTR [edi+0x3ab78180]
  421945:	hlt    
  421946:	fidiv  DWORD PTR [esi-0x4e118610]
  42194c:	sbb    eax,0xc50202c9
  421951:	and    esp,DWORD PTR [edi]
  421953:	int3   
  421954:	jbe    0x42195e
  421956:	mov    cl,0x70
  421958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421959:	dec    esp
  42195a:	push   ss
  42195b:	mov    ecx,0xe7030ed8
  421960:	fnstenv [ebx+0x5]
  421963:	push   esi
  421964:	in     al,dx
  421965:	cs ins DWORD PTR es:[edi],dx
  421967:	xchg   esp,esp
  421969:	pop    esp
  42196a:	fistp  DWORD PTR [edx+0x2db8bd37]
  421970:	stc    
  421971:	int    0x5b
  421973:	mov    ah,0xf8
  421975:	sbb    ch,ah
  421977:	or     DWORD PTR [ebp-0x23],0x7c
  42197b:	cs and al,0x73
  42197e:	in     eax,0x5
  421980:	stos   BYTE PTR es:[edi],al
  421981:	dec    eax
  421982:	push   es
  421983:	int3   
  421984:	inc    edi
  421985:	mov    edx,0xac479723
  42198a:	jbe    0x4219ce
  42198c:	lea    ebp,[edi]
  42198e:	jmp    0x42195c
  421990:	mov    cl,0xf0
  421992:	mov    al,ds:0x680fd7dd
  421997:	stc    
  421998:	rol    BYTE PTR [ebx-0x61],0xa6
  42199c:	ret    0x3ebf
  42199f:	retf   0x37de
  4219a2:	test   DWORD PTR [ecx],ebx
  4219a4:	mov    dl,0xf7
  4219a6:	test   eax,0xa874e1ca
  4219ab:	push   cs
  4219ac:	push   esp
  4219ad:	stos   DWORD PTR es:[edi],eax
  4219ae:	xchg   ebx,eax
  4219af:	ret    
  4219b0:	js     0x4219ac
  4219b2:	xor    DWORD PTR [esi+edx*1],0x19
  4219b6:	repnz mov al,0xe
  4219b9:	dec    esp
  4219ba:	mov    bh,0xdb
  4219bc:	adc    eax,0xe354462d
  4219c1:	and    eax,0xdc194897
  4219c6:	cmp    DWORD PTR [edx-0x7188de0],edx
  4219cc:	and    ecx,ebx
  4219ce:	xor    ch,dh
  4219d0:	inc    edi
  4219d1:	int    0xdb
  4219d3:	jge    0x4219a3
  4219d5:	xchg   ebx,eax
  4219d6:	inc    edx
  4219d7:	outs   dx,BYTE PTR ds:[esi]
  4219d8:	jge    0x421964
  4219da:	xchg   ebp,eax
  4219db:	xchg   BYTE PTR [ebx+0x68e0b15c],ch
  4219e1:	lea    eax,[edi-0x4b4daccf]
  4219e7:	lods   al,BYTE PTR ds:[esi]
  4219e8:	jns    0x421a0d
  4219ea:	jp     0x4219f1
  4219ec:	loope  0x4219d7
  4219ee:	sbb    eax,0xeb05439e
  4219f3:	cmp    bl,dh
  4219f5:	(bad)  
  4219f6:	xchg   ecx,eax
  4219f7:	inc    esi
  4219f8:	sub    al,0xda
  4219fa:	ins    BYTE PTR es:[edi],dx
  4219fb:	std    
  4219fc:	lods   eax,DWORD PTR ds:[esi]
  4219fd:	sbb    al,0x8d
  4219ff:	pushf  
  421a00:	mov    bl,BYTE PTR es:[ebx+edi*8+0x79]
  421a05:	fnstsw WORD PTR [esi+edi*2+0x3b]
  421a09:	repnz xor eax,0x6f5f218b
  421a0f:	loop   0x421a32
  421a11:	bound  ebx,QWORD PTR [esi+0x3edd23aa]
  421a17:	jb     0x421a3d
  421a19:	push   esp
  421a1a:	inc    esp
  421a1b:	dec    eax
  421a1c:	shl    DWORD PTR [edx+0x6d9c0649],0xcc
  421a23:	(bad)  
  421a24:	pop    esi
  421a25:	daa    
  421a26:	repnz sbb DWORD PTR [ebp-0x1a4aea37],ecx
  421a2d:	(bad)  
  421a2e:	mov    ?,WORD PTR ds:0xd148112c
  421a34:	daa    
  421a35:	push   edx
  421a36:	push   esp
  421a37:	xor    al,0x9a
  421a39:	daa    
  421a3a:	add    esi,DWORD PTR [eax-0x24fd7030]
  421a40:	xchg   ebp,eax
  421a41:	in     al,0x69
  421a43:	js     0x421a9c
  421a45:	jmp    0x4219ef
  421a47:	pop    esi
  421a48:	mov    gs,WORD PTR [esi]
  421a4a:	mov    edx,0xb2805478
  421a4f:	cmp    al,0xb4
  421a51:	dec    esi
  421a52:	(bad)  
  421a53:	stos   DWORD PTR es:[edi],eax
  421a54:	or     DWORD PTR [eax],ebp
  421a56:	(bad)  
  421a57:	sbb    esp,DWORD PTR [ebx+0x36]
  421a5a:	dec    esp
  421a5b:	cmc    
  421a5c:	sub    ecx,DWORD PTR fs:[edi-0x4c56b04c]
  421a63:	mov    WORD PTR [edi*4+0x286e36fa],es
  421a6a:	push   cs
  421a6b:	mov    es,WORD PTR [ecx+0x1]
  421a6e:	aaa    
  421a6f:	mov    DWORD PTR [eax],edi
  421a71:	jbe    0x421a8a
  421a73:	cld    
  421a74:	arpl   WORD PTR [eax+esi*4-0x79994634],bx
  421a7b:	mov    edx,0x8ee58654
  421a80:	jge    0x421af0
  421a82:	xchg   edx,eax
  421a83:	jge    0x421ab7
  421a85:	mov    ds:0xec2783ad,al
  421a8a:	pushf  
  421a8b:	pop    edi
  421a8c:	call   0x8c0:0xd92870f5
  421a93:	push   edi
  421a94:	add    bh,dh
  421a96:	push   ecx
  421a97:	mov    bl,0x94
  421a99:	mul    BYTE PTR ds:0xd7c3dc6c
  421a9f:	jbe    0x421a82
  421aa1:	dec    edi
  421aa2:	repnz cwde 
  421aa4:	jmp    0x421a75
  421aa6:	xor    esi,DWORD PTR [ebx-0x65]
  421aa9:	(bad)  
  421aaa:	push   ecx
  421aab:	adc    BYTE PTR [esi-0x1a6f0c8],bh
  421ab1:	mov    edx,0x93f95fbf
  421ab6:	lock xor edx,DWORD PTR [esi-0x44]
  421aba:	push   edi
  421abb:	cmp    ebp,0x602bcbbb
  421ac1:	fild   WORD PTR [ecx+0x2c330b83]
  421ac7:	sbb    bl,cl
  421ac9:	cmp    al,0xb0
  421acb:	outs   dx,DWORD PTR cs:[esi]
  421acd:	push   DWORD PTR [ebx+0x51a86453]
  421ad3:	lods   eax,DWORD PTR ds:[esi]
  421ad4:	and    ch,BYTE PTR [ebx]
  421ad6:	imul   esi,ebp,0x67
  421ad9:	push   ebp
  421ada:	jnp    0x421b45
  421adc:	mov    ch,0x65
  421ade:	jbe    0x421b1a
  421ae0:	hlt    
  421ae1:	cwde   
  421ae2:	xor    al,0x2
  421ae4:	dec    esi
  421ae5:	mov    DWORD PTR [edx-0x7],ebx
  421ae8:	jno    0x421ac5
  421aea:	push   0xb37f54cb
  421aef:	mov    edi,0xc7db36f0
  421af4:	inc    esp
  421af5:	push   cs
  421af6:	jbe    0x421b5f
  421af8:	cmc    
  421af9:	(bad)  
  421afa:	jecxz  0x421b7a
  421afc:	xchg   edi,eax
  421afd:	xor    ebp,DWORD PTR [esi+0x76e45d8]
  421b03:	popa   
  421b04:	push   ds
  421b05:	jmp    0xc89e2cac
  421b0a:	xchg   esi,eax
  421b0b:	dec    esi
  421b0c:	xchg   esi,eax
  421b0d:	jmp    0x63dcdeda
  421b12:	call   0xe2ac:0x6a14283
  421b19:	arpl   WORD PTR cs:[ebp+0x1f],bx
  421b1d:	sbb    dl,BYTE PTR [ecx-0x7d91fbf7]
  421b23:	sub    BYTE PTR [eax-0x68],ah
  421b26:	mov    cl,dl
  421b28:	mov    ebp,0xf9d16809
  421b2d:	mov    al,ds:0x747024f6
  421b32:	fscale 
  421b34:	inc    esp
  421b35:	and    BYTE PTR [ecx-0x2db88061],al
  421b3b:	loopne 0x421b47
  421b3d:	sbb    BYTE PTR [ecx-0x100a084],cl
  421b43:	adc    al,0xed
  421b45:	dec    ebx
  421b46:	and    ecx,DWORD PTR [edx+edi*8+0x4c]
  421b4a:	xchg   BYTE PTR [ebp+0x4cc8f24f],ah
  421b50:	add    DWORD PTR [ebx+0x7cbcb067],ecx
  421b56:	xchg   ebp,eax
  421b57:	or     al,0x27
  421b59:	lea    eax,[ecx-0x66]
  421b5c:	inc    esi
  421b5d:	and    edx,eax
  421b5f:	and    al,0xb0
  421b61:	int3   
  421b62:	pusha  
  421b63:	or     esp,eax
  421b65:	fst    DWORD PTR [ecx-0x73daa3aa]
  421b6b:	adc    BYTE PTR [edx+0x3d],cl
  421b6e:	into   
  421b6f:	xor    eax,0x13ad27c6
  421b74:	or     dh,BYTE PTR [esi+0x475e2d9d]
  421b7a:	pusha  
  421b7b:	out    0x38,al
  421b7d:	call   0x1c6fd827
  421b82:	lea    ebx,[ebx-0x22]
  421b85:	call   0xdd8a:0x98fabbb2
  421b8c:	je     0x421beb
  421b8e:	push   edx
  421b8f:	pop    ss
  421b90:	inc    BYTE PTR [ecx-0x3c]
  421b93:	add    DWORD PTR ds:0xeec16346,edi
  421b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b9a:	mov    ecx,0x2aa3dd
  421b9f:	xor    DWORD PTR [ecx-0x2a],edi
  421ba2:	adc    eax,DWORD PTR [edx-0x1185b890]
  421ba8:	mov    dl,0xb4
  421baa:	scas   al,BYTE PTR es:[edi]
  421bab:	add    ecx,DWORD PTR [esi]
  421bad:	loop   0x421bbf
  421baf:	scas   al,BYTE PTR es:[edi]
  421bb0:	xor    eax,0x910f91c9
  421bb5:	dec    edx
  421bb6:	scas   al,BYTE PTR es:[edi]
  421bb7:	icebp  
  421bb8:	lahf   
  421bb9:	mov    edx,0x5598aaf4
  421bbe:	pop    ebx
  421bbf:	add    DWORD PTR [ecx+0x7b],esi
  421bc2:	xchg   DWORD PTR [eax],ebx
  421bc4:	add    DWORD PTR [ebx-0x544be4aa],edi
  421bca:	pop    esi
  421bcb:	mov    bl,0x42
  421bcd:	dec    esi
  421bce:	push   edx
  421bcf:	add    dl,BYTE PTR [ebx+0x57]
  421bd2:	inc    edi
  421bd3:	fadd   DWORD PTR es:[ecx-0x35f9987c]
  421bda:	popf   
  421bdb:	(bad)  
  421bdc:	(bad)  ds:0xde2e37f4
  421be2:	adc    BYTE PTR [ebx-0x65bbf9cd],cl
  421be8:	and    al,ah
  421bea:	mov    esi,0x615f3ff5
  421bef:	and    dl,BYTE PTR es:[edi-0x7a]
  421bf3:	pop    ecx
  421bf4:	ds es stos BYTE PTR es:[edi],al
  421bf7:	sub    dh,BYTE PTR [esi+0x507f0c80]
  421bfd:	lea    ebx,[edx-0x14070734]
  421c03:	dec    edx
  421c04:	push   ss
  421c05:	dec    BYTE PTR [ebx+eax*1-0x4d]
  421c09:	fisttp WORD PTR [edi+0x78298e2f]
  421c0f:	push   ebp
  421c10:	add    eax,0x28fecdd3
  421c15:	xchg   esi,eax
  421c16:	cld    
  421c17:	iret   
  421c18:	fnstenv [esi+0x17e9b915]
  421c1e:	mov    dl,0xfc
  421c20:	sub    ebp,DWORD PTR ds:[edi]
  421c23:	sbb    BYTE PTR [ebx-0x78],ch
  421c26:	outs   dx,BYTE PTR ds:[esi]
  421c27:	pop    es
  421c28:	jb     0x421bd3
  421c2a:	mov    esp,eax
  421c2c:	xor    WORD PTR [ebx+eax*8+0x529ab627],0xffba
  421c35:	sbb    ebp,edi
  421c37:	cmp    edi,DWORD PTR [eax]
  421c39:	or     DWORD PTR [edx+0x1f622b2],ecx
  421c3f:	retf   0x16e6
  421c42:	mov    es,WORD PTR [ebx]
  421c44:	fstp   TBYTE PTR [edi+0x28]
  421c47:	arpl   WORD PTR [ecx],dx
  421c49:	jle    0x421cc1
  421c4b:	pop    esp
  421c4c:	add    eax,0xa1732192
  421c51:	sub    al,BYTE PTR [esi]
  421c53:	dec    ebx
  421c54:	sbb    eax,0xcf4eacf6
  421c59:	dec    ebx
  421c5a:	popf   
  421c5b:	(bad)  [esi+ebp*1-0x2560caea]
  421c62:	push   eax
  421c63:	sub    esi,ecx
  421c65:	mov    al,0xd3
  421c67:	stos   DWORD PTR es:[edi],eax
  421c68:	dec    edx
  421c69:	jmp    0xb3b7:0x3377b350
  421c70:	sbb    eax,0x7df00f3
  421c75:	dec    edi
  421c76:	js     0x421c9a
  421c78:	cli    
  421c79:	js     0x421c65
  421c7b:	cmp    ah,BYTE PTR [ecx-0x42]
  421c7e:	dec    edx
  421c7f:	push   cs
  421c80:	add    edx,0x69c1f2be
  421c86:	in     eax,dx
  421c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c88:	fist   DWORD PTR [esi-0x21]
  421c8b:	int    0xe0
  421c8d:	jbe    0x421c4a
  421c8f:	adc    eax,0x3c661a81
  421c94:	jnp    0x421c5e
  421c96:	inc    esp
  421c97:	imul   BYTE PTR [edx+eiz*8-0x4fc4956]
  421c9e:	(bad)  
  421c9f:	dec    eax
  421ca0:	dec    ebp
  421ca1:	bound  edx,QWORD PTR [edx+0x61b69cdb]
  421ca7:	sbb    dh,BYTE PTR [esi+0x76]
  421caa:	aad    0xd5
  421cac:	inc    edx
  421cad:	stc    
  421cae:	xchg   ecx,eax
  421caf:	xlat   BYTE PTR ds:[ebx]
  421cb0:	fmulp  st(2),st
  421cb2:	sar    BYTE PTR [ecx],cl
  421cb4:	mov    ecx,0x99bd7a40
  421cb9:	outs   dx,BYTE PTR ds:[esi]
  421cba:	push   ss
  421cbb:	xchg   edi,eax
  421cbc:	and    edi,DWORD PTR [ebx+0x5bcc5a8f]
  421cc2:	mov    WORD PTR [eax+0x42],?
  421cc5:	fdiv   DWORD PTR [edx-0x5262ef91]
  421ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccc:	loopne 0x421ca4
  421cce:	adc    eax,0xe7b199ae
  421cd3:	mov    esi,cs
  421cd5:	pop    ebp
  421cd6:	int    0x7f
  421cd8:	gs mov cl,0xb5
  421cdb:	(bad)  
  421cdc:	sbb    eax,0xf37a503a
  421ce1:	je     0x421c80
  421ce3:	retf   
  421ce4:	or     ebp,DWORD PTR [eax]
  421ce6:	fstp   TBYTE PTR [ebp+0x14807af6]
  421cec:	pop    edi
  421ced:	or     DWORD PTR [ecx-0x2c],edi
  421cf0:	arpl   sp,di
  421cf2:	int    0x58
  421cf4:	or     bh,dh
  421cf6:	push   0xdc977de1
  421cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfc:	push   edi
  421cfd:	jno    0x421ce3
  421cff:	call   0x97f7:0x2744c37e
  421d06:	mov    ds:0xd8240fa6,eax
  421d0b:	inc    edi
  421d0c:	(bad)  
  421d0d:	jp     0x421c91
  421d0f:	adc    BYTE PTR [ecx+0x2f81f139],bl
  421d15:	sub    al,0xfd
  421d17:	sub    al,0x4a
  421d19:	mov    eax,ds:0x158f62c8
  421d1e:	jmp    0x8afa:0xf7f00802
  421d25:	test   al,0x7d
  421d27:	jne    0x421d59
  421d29:	xchg   ecx,eax
  421d2a:	out    dx,al
  421d2b:	cs push cs
  421d2d:	push   0x7d6874d2
  421d32:	mov    cl,0xed
  421d34:	mov    edi,0x565c5128
  421d39:	imul   eax,DWORD PTR [edx+0x8],0x33
  421d3d:	push   ebx
  421d3e:	inc    edx
  421d3f:	clc    
  421d40:	cmp    dl,BYTE PTR [esi+0x73]
  421d43:	xor    DWORD PTR [esi+0x48],edx
  421d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d47:	push   ebx
  421d48:	pop    edx
  421d49:	pop    ebp
  421d4a:	in     al,0x1c
  421d4c:	push   ss
  421d4d:	and    eax,0x702f02c8
  421d52:	mov    ah,bl
  421d54:	out    0x18,al
  421d56:	repnz das 
  421d58:	push   esi
  421d59:	sbb    ebp,edx
  421d5b:	sar    ah,0xc8
  421d5e:	jg     0x421dd5
  421d60:	adc    BYTE PTR [edi+ebx*2-0x1f],cl
  421d64:	ins    DWORD PTR es:[edi],dx
  421d65:	jmp    0x3:0x3ece2ccd
  421d6c:	push   ebp
  421d6d:	jo     0x421dba
  421d6f:	add    DWORD PTR cs:[eax+0x5f200ae8],0xfffffffa
  421d77:	int3   
  421d78:	push   bp
  421d7a:	xchg   esi,eax
  421d7b:	cmc    
  421d7c:	and    al,BYTE PTR [ebx-0x3f3fb931]
  421d82:	rol    al,0xc0
  421d85:	rol    al,0xc0
  421d88:	rol    al,0xc0
  421d8b:	rol    al,0xc0
  421d8e:	rol    al,0xc0
  421d91:	rol    al,0xc0
  421d94:	rol    al,0xc0
  421d97:	rol    al,0xc0
  421d9a:	rol    al,0xc0
  421d9d:	rol    al,0xc0
  421da0:	rol    al,0xc0
  421da3:	rol    al,0xc0
  421da6:	rol    al,0xc0
  421da9:	rol    al,0xc0
  421dac:	rol    al,0xc0
  421daf:	rol    al,0xc0
  421db2:	rol    al,0xc0
  421db5:	rol    al,0xc0
  421db8:	rol    al,0xc0
  421dbb:	rol    al,0xc0
  421dbe:	rol    al,0xc0
  421dc1:	rol    al,0xc0
  421dc4:	rol    al,0xc0
  421dc7:	rol    al,0xc0
  421dca:	rol    al,0xc0
  421dcd:	rol    al,0xc0
  421dd0:	rol    al,0xc0
  421dd3:	rol    al,0xc0
  421dd6:	rol    al,0x7e
  421dd9:	sbb    BYTE PTR [edx-0x36b64877],0x1e
  421de0:	push   edi
  421de1:	rcl    BYTE PTR [edx+0x3c35701b],0x23
  421de8:	cdq    
  421de9:	jnp    0x421e40
  421deb:	ret    0xd6e1
  421dee:	and    al,BYTE PTR [ebx+0x44d8c338]
  421df4:	add    DWORD PTR [ecx],edi
  421df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df7:	push   ebx
  421df8:	cmp    ah,al
  421dfa:	(bad)  
  421dfc:	mov    al,ds:0x4cb89d8c
  421e01:	out    dx,al
  421e02:	xchg   edi,eax
  421e03:	dec    esi
  421e04:	push   edx
  421e05:	or     edx,DWORD PTR ds:0x31c35a1b
  421e0b:	fadd   DWORD PTR [edx]
  421e0d:	mov    cl,0xf5
  421e0f:	aaa    
  421e10:	jmp    0x91f2aa35
  421e15:	cmp    BYTE PTR [ecx+0x60378c33],0xbd
  421e1c:	pop    es
  421e1d:	data16 or cl,BYTE PTR [edi+0xc928007]
  421e24:	and    BYTE PTR [esi],0x3d
  421e27:	retf   
  421e28:	lods   eax,DWORD PTR ds:[esi]
  421e29:	pop    edx
  421e2a:	(bad)  
  421e2b:	retf   
  421e2c:	mov    ebp,0xf333edc2
  421e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e32:	sbb    esp,DWORD PTR [edi+0x6b2ddca6]
  421e38:	and    eax,0x229a8811
  421e3d:	push   ecx
  421e3e:	jae    0x421e6e
  421e40:	xlat   BYTE PTR ds:[ebx]
  421e41:	inc    ebp
  421e42:	fwait
  421e43:	out    0x64,eax
  421e45:	cmp    DWORD PTR [ecx-0x26d2d0b2],0x2a
  421e4c:	test   eax,0x9db2df9a
  421e51:	cs int 0x35
  421e54:	leave  
  421e55:	or     eax,0xa6f20dce
  421e5a:	mov    DWORD PTR [bx+si+0x442e],ecx
  421e5f:	in     al,0xf4
  421e61:	mov    eax,ds:0xc91e8580
  421e66:	xchg   BYTE PTR [edi-0x7a],bh
  421e69:	pop    ecx
  421e6a:	mov    WORD PTR [ebx-0x1c17f7ad],es
  421e70:	ret    0x73df
  421e73:	pop    ecx
  421e74:	mov    esi,0x6157d21
  421e79:	xchg   esi,eax
  421e7a:	or     ax,0xbdd
  421e7e:	xor    esp,DWORD PTR [ecx]
  421e80:	xchg   ebx,eax
  421e81:	cmc    
  421e82:	dec    esp
  421e83:	add    eax,DWORD PTR [edx+ebp*1-0x58]
  421e87:	or     al,0x27
  421e89:	push   ecx
  421e8a:	cmp    dh,BYTE PTR [esi+0x30045dc4]
  421e90:	xchg   edx,eax
  421e91:	jge    0x421ef7
  421e93:	inc    esi
  421e94:	neg    BYTE PTR [ecx+0x528f7015]
  421e9a:	test   DWORD PTR [esi-0x17],esi
  421e9d:	sbb    BYTE PTR [ebp-0x1f],bh
  421ea0:	retf   0x82f3
  421ea3:	js     0x421e7a
  421ea5:	xor    al,0xb3
  421ea7:	push   ecx
  421ea8:	cs push es
  421eaa:	inc    edx
  421eab:	call   DWORD PTR gs:[edx]
  421eae:	les    eax,FWORD PTR [edx+0x76]
  421eb1:	icebp  
  421eb2:	push   ds
  421eb3:	sbb    eax,DWORD PTR [esi]
  421eb5:	sub    DWORD PTR [ebp-0x6f],edi
  421eb8:	mov    ds:0x3fcb3be4,al
  421ebd:	cs jl  0x421e9e
  421ec0:	ins    DWORD PTR es:[edi],dx
  421ec1:	cli    
  421ec2:	(bad)  
  421ec3:	push   es
  421ec4:	jb     0x421f45
  421ec6:	lods   al,BYTE PTR ds:[esi]
  421ec7:	popa   
  421ec8:	(bad)  
  421ec9:	std    
  421eca:	push   ebp
  421ecb:	cmp    esi,esi
  421ecd:	push   ds
  421ece:	mov    dh,0x2
  421ed0:	xchg   BYTE PTR [esi+0x5588399],bl
  421ed6:	xchg   ebx,eax
  421ed7:	ss push es
  421ed9:	aad    0x2c
  421edb:	dec    eax
  421edc:	(bad)  
  421ede:	jecxz  0x421f4f
  421ee0:	(bad)  
  421ee1:	xchg   edx,eax
  421ee2:	dec    esi
  421ee3:	and    DWORD PTR [eax+0x12],0x294968c1
  421eea:	pop    edi
  421eeb:	js     0x421ef3
  421eed:	add    dh,cl
  421eef:	pop    es
  421ef0:	bnd jbe 0x421eb0
  421ef3:	(bad)  
  421ef4:	(bad)  
  421ef6:	sahf   
  421ef7:	push   0x65
  421ef9:	dec    esp
  421efa:	jbe    0x421f35
  421efc:	sub    ch,cl
  421efe:	iret   
  421eff:	stos   DWORD PTR es:[edi],eax
  421f00:	ret    
  421f01:	add    DWORD PTR [ebp+0x55],esp
  421f04:	fs cmp ah,al
  421f07:	add    eax,0x959ff7c8
  421f0c:	push   esp
  421f0d:	loope  0x421ef0
  421f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f10:	dec    edx
  421f11:	pop    esi
  421f12:	adc    al,0x5c
  421f14:	fnsave [ecx-0x4e]
  421f17:	sahf   
  421f18:	pop    ss
  421f19:	fstp   DWORD PTR [ecx+0x18]
  421f1c:	push   ebp
  421f1d:	xor    DWORD PTR [ebx+0x1bcd995e],ebx
  421f23:	xor    ah,BYTE PTR [ebx+esi*8+0x58]
  421f27:	push   cs
  421f28:	sub    ecx,DWORD PTR [ebp+0x43]
  421f2b:	lds    eax,FWORD PTR ds:[ecx]
  421f2e:	lods   eax,DWORD PTR ds:[esi]
  421f2f:	mov    eax,ds:0xcd514b0
  421f34:	adc    DWORD PTR [edx-0x2b],edx
  421f37:	sbb    al,0x7d
  421f39:	inc    BYTE PTR [edi-0x50c04efc]
  421f3f:	pop    ds
  421f40:	retf   0x90d1
  421f43:	pop    ecx
  421f44:	fcmovnb st,st(4)
  421f46:	stos   BYTE PTR es:[edi],al
  421f47:	mov    ch,0x62
  421f49:	push   ss
  421f4a:	sar    edx,cl
  421f4c:	iret   
  421f4d:	jge    0x421fbf
  421f4f:	cli    
  421f50:	adc    BYTE PTR [eax+eiz*8-0x64],ah
  421f54:	xor    cl,cl
  421f56:	sbb    eax,0x6d23c3a2
  421f5b:	repnz inc esp
  421f5d:	jg     0x421f8c
  421f5f:	push   0x1bcdfc70
  421f64:	xchg   ebp,eax
  421f65:	mov    ch,0xa4
  421f67:	data16 jl 0x421f2e
  421f6a:	sbb    eax,0x4ae99a02
  421f6f:	div    DWORD PTR ds:0xd2ae8eb3
  421f75:	mov    esi,cs
  421f77:	pop    esi
  421f78:	mov    ds:0x84d28c6e,al
  421f7d:	sar    BYTE PTR [edi-0x33],cl
  421f80:	fld    QWORD PTR [ecx]
  421f82:	scas   eax,DWORD PTR es:[edi]
  421f83:	test   al,0xaa
  421f85:	nop
  421f86:	call   0x49504ec4
  421f8b:	popf   
  421f8c:	fstp   DWORD PTR [eax+0x72]
  421f8f:	mov    ecx,0x44ab1554
  421f94:	mov    ebx,0x690d3e5
  421f9a:	push   es
  421f9b:	add    BYTE PTR [eax-0x80],bl
  421f9e:	not    BYTE PTR [edi]
  421fa0:	mov    es,WORD PTR [ebx-0x36b196dc]
  421fa6:	enter  0xed3,0x19
  421faa:	mov    ds:0xa605508f,al
  421faf:	ret    
  421fb0:	cli    
  421fb1:	pop    edi
  421fb2:	pushf  
  421fb3:	jl     0x421ff5
  421fb5:	pusha  
  421fb6:	stos   BYTE PTR es:[edi],al
  421fb7:	sbb    ecx,edi
  421fb9:	mov    eax,0x9dac27a
  421fbe:	sub    al,0x9c
  421fc0:	cmp    bl,dl
  421fc2:	mov    DWORD PTR [ebx-0x1cf65901],ebp
  421fc8:	(bad)  
  421fc9:	pop    edx
  421fca:	retf   0xca3
  421fcd:	mov    dh,0xe0
  421fcf:	or     esi,DWORD PTR [edx+0x5afcdaea]
  421fd5:	scas   eax,DWORD PTR es:[edi]
  421fd6:	lahf   
  421fd7:	adc    al,0xc4
  421fd9:	sub    ah,BYTE PTR [eax+0x52]
  421fdc:	mov    DWORD PTR [eax],edx
  421fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fdf:	fwait
  421fe0:	mov    ds:0x8ac7629c,al
  421fe5:	jp     0x421fff
  421fe7:	pushf  
  421fe8:	pusha  
  421fe9:	popa   
  421fea:	test   al,al
  421fec:	xchg   ebp,eax
  421fed:	dec    esi
  421fee:	jge    0x42201f
  421ff0:	mov    DWORD PTR [edi],ebp
  421ff2:	push   ecx
  421ff3:	or     ch,BYTE PTR [esi+0x6dd99c1f]
  421ff9:	pop    eax
  421ffa:	jp     0x421fd7
  421ffc:	mov    ds:0x8d057149,al
  422001:	stos   DWORD PTR es:[edi],eax
  422002:	ror    BYTE PTR [ebp-0x1cbff922],0x89
  422009:	std    
  42200a:	jb     0x421f98
  42200c:	and    al,0x35
  42200e:	stos   DWORD PTR es:[edi],eax
  42200f:	js     0x42208e
  422011:	sbb    eax,0xf846941d
  422016:	xchg   DWORD PTR [edi+0x34],esp
  422019:	ja     0x421fa9
  42201b:	fiadd  WORD PTR [esi-0x4b]
  42201e:	das    
  42201f:	hlt    
  422020:	or     ebx,DWORD PTR [eax-0x23]
  422023:	inc    edi
  422024:	and    BYTE PTR [ebx+eax*2-0x17aff0c4],cl
  42202b:	into   
  42202c:	fimul  DWORD PTR [edx-0x1c]
  42202f:	loopne 0x42200c
  422031:	jns    0x422005
  422033:	dec    edi
  422034:	jecxz  0x422064
  422036:	dec    edi
  422037:	mov    al,0xfb
  422039:	jae    0x422055
  42203b:	inc    edi
  42203c:	iret   
  42203d:	cmp    ebx,ebx
  42203f:	jo     0x422094
  422041:	jb     0x422024
  422043:	dec    edi
  422044:	retf   
  422045:	sub    al,ah
  422047:	gs dec edi
  422049:	jmp    DWORD PTR [esi-0x14]
  42204c:	xchg   ecx,eax
  42204d:	push   esp
  42204e:	sbb    eax,ebx
  422050:	ins    BYTE PTR es:[edi],dx
  422051:	jno    0x42200a
  422053:	mov    ebp,0xcf99c639
  422058:	adc    al,0x8f
  42205a:	jne    0x4220bb
  42205c:	xchg   ebp,eax
  42205d:	push   esp
  42205e:	push   0xffffffee
  422060:	cs inc ebp
  422062:	cmc    
  422063:	das    
  422064:	dec    ebp
  422065:	mov    BYTE PTR [esi-0x4c92cb5c],bh
  42206b:	js     0x422004
  42206d:	into   
  42206e:	push   es
  42206f:	shl    bl,cl
  422071:	inc    eax
  422072:	cs push ebp
  422074:	mov    eax,ds:0x32da7840
  422079:	and    BYTE PTR [esi+0x1a37a706],dh
  42207f:	fsubr  DWORD PTR [esi-0x23]
  422082:	jmp    0x172ce0f6
  422087:	in     eax,0x54
  422089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42208a:	into   
  42208b:	sub    eax,0xd9b3580f
  422090:	rep outs dx,BYTE PTR ds:[esi]
  422092:	fwait
  422093:	pop    ss
  422094:	dec    BYTE PTR [eax-0x7b3ab634]
  42209a:	push   esi
  42209b:	out    0x5c,al
  42209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209e:	cs sub eax,0x3168ab39
  4220a4:	mov    ah,0xb
  4220a6:	int    0x16
  4220a8:	cdq    
  4220a9:	push   esp
  4220aa:	data16 daa 
  4220ac:	mov    al,ds:0x6d69af58
  4220b1:	pop    es
  4220b2:	retf   0x4f03
  4220b5:	pop    edx
  4220b6:	cmp    ebp,esp
  4220b8:	xor    esi,ebp
  4220ba:	call   0xf34263da
  4220bf:	lods   al,BYTE PTR ds:[esi]
  4220c0:	adc    cl,BYTE PTR [esi-0x7bb9b3fa]
  4220c6:	loop   0x422082
  4220c8:	jne    0x422115
  4220ca:	fadd   st,st(1)
  4220cc:	sti    
  4220cd:	popa   
  4220ce:	lahf   
  4220cf:	loop   0x42209f
  4220d1:	sub    BYTE PTR [esi-0x50d75466],dh
  4220d7:	pusha  
  4220d8:	mov    eax,ds:0x3343165b
  4220dd:	cmp    ch,cl
  4220df:	stc    
  4220e0:	retf   0x8008
  4220e3:	jmp    0x44f0:0xf9028825
  4220ea:	sbb    al,0xc2
  4220ec:	int    0xe
  4220ee:	ss pusha 
  4220f0:	pop    ebx
  4220f1:	(bad)  
  4220f2:	loopne 0x42214c
  4220f4:	pop    eax
  4220f5:	mov    ecx,0x88fd814d
  4220fa:	fwait
  4220fb:	popa   
  4220fc:	sbb    BYTE PTR [esi+0x30d5f8a1],ah
  422102:	adc    bh,BYTE PTR [ecx+esi*1+0x65]
  422106:	fld    DWORD PTR [ebp-0xee0a12b]
  42210c:	data16 js 0x4220f0
  42210f:	xlat   BYTE PTR ds:[ebx]
  422110:	ss push ss
  422112:	mov    ?,eax
  422114:	push   edi
  422115:	pop    ecx
  422116:	aaa    
  422117:	jnp    0x422192
  422119:	push   cs
  42211a:	dec    DWORD PTR [esi+edi*2]
  42211d:	adc    dh,BYTE PTR [ebx]
  42211f:	pusha  
  422120:	mov    al,0x74
  422122:	ds cli 
  422124:	and    bl,BYTE PTR [ebx-0x39ee5b25]
  42212a:	pop    esi
  42212b:	or     DWORD PTR [esi],0x72f5ae5e
  422131:	lods   eax,DWORD PTR ds:[esi]
  422132:	rcr    DWORD PTR [eax+0x10fbe7b5],1
  422138:	cwde   
  422139:	out    dx,al
  42213a:	mov    edi,0xb37489ea
  42213f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422140:	cdq    
  422141:	cmp    cl,BYTE PTR [edx+0x59]
  422144:	stos   DWORD PTR es:[edi],eax
  422145:	dec    edi
  422146:	scas   al,BYTE PTR es:[edi]
  422147:	and    al,0x6a
  422149:	sbb    DWORD PTR [esi],esp
  42214b:	pop    edi
  42214c:	push   ebp
  42214d:	ret    0xb72
  422150:	mov    edi,0x957e87e
  422155:	mov    ds:0x8d55a260,eax
  42215a:	and    eax,0x4e5d8cca
  42215f:	push   edi
  422160:	loop   0x4221c0
  422162:	or     dl,BYTE PTR [edi-0xa]
  422165:	in     al,0xce
  422167:	ja     0x4221e1
  422169:	rcr    BYTE PTR [esi-0x43],1
  42216c:	mov    al,0x4
  42216e:	xchg   edx,eax
  42216f:	jle    0x4221b3
  422171:	or     eax,0x5b125d2a
  422176:	adc    eax,0xef8e332e
  42217b:	into   
  42217c:	xor    ecx,DWORD PTR [eax+ecx*1]
  42217f:	and    al,0x45
  422181:	and    BYTE PTR [ebp+0x4b17ae0e],ch
  422187:	hlt    
  422188:	pop    esp
  422189:	push   ss
  42218a:	mov    ebp,0x5a1a67fe
  42218f:	or     BYTE PTR [ebp+0x731abf24],dl
  422195:	add    DWORD PTR [eax-0x74],edi
  422198:	adc    DWORD PTR [esi-0x30],0xffffffea
  42219c:	ds push ebp
  42219e:	sub    BYTE PTR [edi-0x7f],cl
  4221a1:	fisubr WORD PTR [eax+0x73e22b81]
  4221a7:	and    DWORD PTR [ebp+0x23812aad],ebx
  4221ad:	sbb    BYTE PTR [esi+0x1c],cl
  4221b0:	and    al,dl
  4221b2:	jbe    0x422195
  4221b4:	loop   0x42218f
  4221b6:	loope  0x422145
  4221b8:	or     BYTE PTR [ecx+edi*4-0x65],0xce
  4221bd:	int3   
  4221be:	mov    edi,0x4ddfc452
  4221c3:	clc    
  4221c4:	gs dec esp
  4221c6:	aam    0x35
  4221c8:	pop    eax
  4221c9:	fstp   QWORD PTR [ebp+0x53e20b0b]
  4221cf:	fisub  WORD PTR [edx+0x7a]
  4221d2:	in     al,0xf2
  4221d4:	dec    ebx
  4221d5:	clts   
  4221d7:	dec    esi
  4221d8:	mov    eax,ds:0xb2076926
  4221dd:	jge    0x422166
  4221df:	push   ebp
  4221e0:	in     al,dx
  4221e1:	adc    bl,al
  4221e3:	call   0xa69e5ea7
  4221e8:	and    ecx,esi
  4221ea:	add    DWORD PTR [ecx-0x7b],ebx
  4221ed:	ret    
  4221ee:	mov    bl,0x34
  4221f0:	add    edi,0x8fa9abc3
  4221f6:	xchg   BYTE PTR [esp+ebp*1+0x53],bl
  4221fa:	sbb    ebx,DWORD PTR [ebp+0x4ab289bd]
  422200:	mov    ebp,ecx
  422202:	out    0x41,al
  422204:	ficomp WORD PTR [ebp-0x3b]
  422207:	(bad)  
  422208:	sub    al,0x6c
  42220a:	in     al,0xb
  42220c:	dec    ebp
  42220d:	sub    BYTE PTR [esi-0x2bbf0abb],dl
  422213:	dec    esp
  422214:	loopne 0x4221f1
  422216:	mov    dh,BYTE PTR [ebp+0x6e]
  422219:	pop    ebp
  42221a:	rol    BYTE PTR [eax],1
  42221c:	fwait
  42221d:	add    esi,DWORD PTR [esi-0x57233b85]
  422223:	out    0xde,eax
  422225:	rep outs dx,DWORD PTR ds:[esi]
  422227:	push   0x85dfea9e
  42222c:	jg     0x422289
  42222e:	pop    es
  42222f:	ds cli 
  422231:	cld    
  422232:	mov    BYTE PTR [edi+0x71],bh
  422235:	sbb    dl,ch
  422237:	jae    0x4221e9
  422239:	mov    dh,0x41
  42223b:	jb     0x422224
  42223d:	popa   
  42223e:	call   0x5a75:0x1fe2b11c
  422245:	scas   al,BYTE PTR es:[edi]
  422246:	adc    eax,0xc3562635
  42224b:	or     al,0x69
  42224d:	lea    edi,[edx+0x7e]
  422250:	pushf  
  422251:	jae    0x422287
  422253:	cdq    
  422254:	push   0x2e
  422256:	cdq    
  422257:	in     eax,0x4f
  422259:	jns    0x42221b
  42225b:	out    dx,al
  42225c:	add    al,0x7d
  42225e:	xchg   esi,eax
  42225f:	js     0x4222a9
  422261:	scas   eax,DWORD PTR es:[edi]
  422262:	enter  0xc4e7,0x23
  422266:	das    
  422267:	or     al,0x61
  422269:	pop    esp
  42226a:	inc    ebx
  42226b:	jmp    0x53f108b7
  422270:	sbb    bh,BYTE PTR [edi]
  422272:	mov    bl,0x5b
  422274:	(bad)  
  422275:	ss aam 0xa7
  422278:	lock push ebp
  42227a:	mov    ebx,0x2afaa424
  42227f:	arpl   WORD PTR ds:0xfa444d8d,di
  422285:	fsubr  DWORD PTR [edi+0x26]
  422288:	mov    ds:0x7181a176,eax
  42228d:	repnz clc 
  42228f:	xchg   DWORD PTR [esi],esp
  422291:	dec    ebp
  422293:	xchg   edi,eax
  422294:	sub    eax,0x798e0731
  422299:	(bad)  
  42229a:	adc    al,BYTE PTR [esi]
  42229c:	fnstsw WORD PTR [edx-0x7d]
  42229f:	lock pop ebx
  4222a1:	xor    edi,edi
  4222a3:	inc    DWORD PTR [eax+0x59]
  4222a6:	cwde   
  4222a7:	ss mov ch,0x2c
  4222aa:	jo     0x422232
  4222ac:	pop    edi
  4222ad:	bound  ebp,QWORD PTR [edx+0x7ae3bdff]
  4222b3:	mov    DWORD PTR [esi+0x700d6e18],esi
  4222b9:	xchg   edi,eax
  4222ba:	jnp    0x422305
  4222bc:	lds    edx,FWORD PTR [esi]
  4222be:	mov    ds:0x8a0240ef,eax
  4222c3:	sbb    al,0xd1
  4222c5:	sub    WORD PTR [ebp+0x56eb9daa],sp
  4222cc:	pop    ecx
  4222cd:	adc    ebx,esp
  4222cf:	rcr    ecx,cl
  4222d1:	fist   DWORD PTR [ecx+0x77a60d8d]
  4222d7:	sahf   
  4222d8:	and    cl,BYTE PTR [ebx]
  4222da:	pop    ss
  4222db:	pop    ebx
  4222dc:	pop    edx
  4222dd:	mov    dl,0xea
  4222df:	and    ch,cl
  4222e1:	push   edi
  4222e2:	push   0xcf0bae83
  4222e7:	std    
  4222e8:	cmp    DWORD PTR [esi+0x5977cea4],edx
  4222ee:	mov    dl,0x5d
  4222f0:	lahf   
  4222f1:	mov    eax,0x85131fe1
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	jmp    0xf4ec76f2
  4222fc:	fs (bad) 
  4222fe:	xchg   edx,eax
  4222ff:	fnop   
  422301:	pushfw 
  422303:	jge    0x4222f7
  422305:	loope  0x4222ee
  422307:	mov    bl,cl
  422309:	or     DWORD PTR ds:0x870e2c5e,esi
  42230f:	scas   eax,DWORD PTR es:[edi]
  422310:	(bad)  
  422312:	adc    DWORD PTR [ecx-0x52f22ee1],eax
  422318:	test   DWORD PTR [ebp-0x1e981182],ecx
  42231e:	cmp    al,bh
  422320:	lea    ebp,[ebx+0x55da21c3]
  422326:	cmp    esi,DWORD PTR [ebx]
  422328:	shl    DWORD PTR ds:0x129dc7f7,cl
  42232e:	rcl    DWORD PTR [eax+0xc3df568],cl
  422334:	cmp    eax,0xdd2146cc
  422339:	mov    ch,BYTE PTR [ecx+0x14e1b704]
  42233f:	je     0x4222c5
  422341:	mov    bh,0x39
  422343:	xchg   edi,eax
  422344:	fnsave [eax]
  422346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422347:	lods   al,BYTE PTR ds:[esi]
  422348:	std    
  422349:	add    bh,BYTE PTR [edi+0x2]
  42234c:	cli    
  42234d:	xchg   esp,eax
  42234e:	clc    
  42234f:	retf   0x6dbe
  422352:	out    dx,al
  422353:	mov    bh,0x47
  422355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422356:	(bad)  
  422357:	fwait
  422358:	or     al,0x5d
  42235a:	add    bh,BYTE PTR [ebp-0x2c]
  42235d:	adc    al,0xf1
  42235f:	mov    al,0xad
  422361:	pushf  
  422362:	adc    esi,DWORD PTR [ebp+0x6a]
  422365:	mov    ebp,0x58dc32e4
  42236a:	dec    ebp
  42236b:	sub    ebp,DWORD PTR [eax-0x68]
  42236e:	push   ds
  42236f:	cs stc 
  422371:	cmp    BYTE PTR [edx+0x1a82cf03],0x11
  422378:	add    al,0xcf
  42237a:	xchg   ebx,eax
  42237b:	in     eax,0x9
  42237d:	sbb    BYTE PTR [ebx-0x19e5f890],dh
  422383:	inc    eax
  422384:	dec    esp
  422385:	mov    WORD PTR [esp+esi*2],gs
  422388:	cmc    
  422389:	jno    0x4223fe
  42238b:	imul   esi,DWORD PTR [eax+ecx*2],0xceacb76
  422392:	adc    al,0x5b
  422394:	and    ebx,DWORD PTR [eax-0x2f47f412]
  42239a:	and    BYTE PTR [edx+0x76247c9c],0x3a
  4223a1:	in     eax,0x61
  4223a3:	sbb    bl,BYTE PTR [edi]
  4223a5:	push   cs
  4223a6:	ret    
  4223a7:	arpl   cx,si
  4223a9:	jbe    0x4223d0
  4223ab:	and    DWORD PTR [edi+0x3d],edx
  4223ae:	(bad)  
  4223af:	mov    dl,0x13
  4223b1:	repz mov ebp,DWORD PTR [edi+0x33e8c19a]
  4223b8:	inc    esi
  4223b9:	clc    
  4223ba:	xchg   ebx,eax
  4223bb:	jno    0x4223c4
  4223bd:	int3   
  4223be:	and    esp,DWORD PTR [edi+0x7a]
  4223c1:	mov    eax,ds:0x5c76d1ea
  4223c6:	mov    esi,0x148a35a5
  4223cb:	fistp  QWORD PTR [ebp-0x4c]
  4223ce:	das    
  4223cf:	ss sahf 
  4223d1:	sbb    eax,0x5bcc19cf
  4223d6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4223d8:	sub    eax,0x787f48e5
  4223dd:	sti    
  4223de:	cmp    al,0xd5
  4223e0:	lods   al,BYTE PTR ds:[esi]
  4223e1:	ss js  0x4223ea
  4223e4:	push   ebp
  4223e5:	je     0x422457
  4223e7:	pop    ecx
  4223e8:	mov    edi,0x162796b8
  4223ed:	mov    BYTE PTR es:[ecx-0x65],dl
  4223f1:	ja     0x42237b
  4223f3:	call   0x3bcb2d89
  4223f8:	mov    ds:0xab716981,eax
  4223fd:	out    0x91,eax
  4223ff:	sub    al,0xa
  422401:	adc    cl,ah
  422403:	rol    BYTE PTR [ecx],0x54
  422406:	jns    0x4223ad
  422408:	lods   al,BYTE PTR ds:[esi]
  422409:	iret   
  42240a:	pop    ebx
  42240b:	mov    al,0x7c
  42240d:	mov    bh,0x74
  42240f:	jnp    0x422392
  422411:	pop    esp
  422412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422413:	or     esp,DWORD PTR ds:0x1f9b9e57
  422419:	fs mov esi,0xc692be62
  42241f:	mov    cl,0x86
  422421:	jns    0x4223bd
  422423:	or     dh,BYTE PTR [edi-0x54]
  422426:	dec    edi
  422427:	pop    esp
  422428:	int3   
  422429:	mov    ds:0x74be6b8f,al
  42242e:	lods   eax,DWORD PTR ds:[esi]
  42242f:	adc    ah,BYTE PTR [ecx]
  422431:	mov    BYTE PTR [esp+eax*4],ah
  422434:	jbe    0x4223b8
  422436:	add    al,0xbb
  422438:	jno    0x422499
  42243a:	mov    al,ds:0xff5c174c
  42243f:	and    al,0x26
  422441:	stos   DWORD PTR es:[edi],eax
  422442:	scas   eax,DWORD PTR es:[edi]
  422443:	pusha  
  422444:	scas   al,BYTE PTR es:[edi]
  422445:	or     DWORD PTR [ebp+0x26a0fc73],ebp
  42244b:	nop
  42244c:	inc    esi
  42244d:	sbb    eax,0x40f16829
  422452:	jmp    0x42246a
  422454:	out    dx,al
  422455:	arpl   WORD PTR [eax+eax*1-0x74],cx
  422459:	pop    esp
  42245a:	push   ecx
  42245b:	jg     0x42249f
  42245d:	ja     0x4223fc
  42245f:	sti    
  422460:	clc    
  422461:	movlps QWORD PTR [esi+0x5c],xmm1
  422465:	mov    es,edx
  422467:	iret   
  422468:	dec    edx
  422469:	mov    ds:0x477cef34,al
  42246e:	rep ins DWORD PTR es:[edi],dx
  422470:	pop    ebp
  422471:	lods   eax,DWORD PTR ds:[esi]
  422472:	leave  
  422473:	pop    ecx
  422474:	jmp    0x1822669e
  422479:	push   0xffffff8f
  42247b:	sub    edx,ebx
  42247d:	adc    ebx,edx
  42247f:	dec    ebp
  422480:	mov    dl,0x96
  422482:	adc    DWORD PTR [ebp+0x75b05c50],eax
  422488:	cdq    
  422489:	fdiv   st,st(5)
  42248b:	cwde   
  42248c:	pop    edx
  42248d:	setno  bh
  422490:	fstp   QWORD PTR es:[ecx+ecx*4-0x58]
  422495:	mov    al,0x2f
  422497:	and    ecx,ebp
  422499:	mov    edx,DWORD PTR [esi-0x43325186]
  42249f:	xor    eax,0xffffff92
  4224a2:	clc    
  4224a3:	xor    bl,BYTE PTR [edx+eiz*8+0x25]
  4224a7:	mov    ch,0xc7
  4224a9:	pop    ss
  4224aa:	pop    esp
  4224ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ac:	dec    eax
  4224ad:	mov    bl,0x2e
  4224af:	mov    DWORD PTR [ebx+0x3e0de51b],esi
  4224b5:	cs dec edx
  4224b7:	add    ebx,0x11
  4224ba:	int3   
  4224bb:	fwait
  4224bc:	aad    0x48
  4224be:	lds    esi,FWORD PTR [ebx-0xe6975fa]
  4224c4:	not    DWORD PTR [ecx+ecx*8]
  4224c7:	add    esp,DWORD PTR [ebx]
  4224c9:	xor    eax,0x863fd20c
  4224ce:	mov    fs,ebp
  4224d0:	ror    BYTE PTR [ecx-0x54d4a5cb],1
  4224d6:	jae    0x4224be
  4224d8:	push   es
  4224d9:	and    BYTE PTR [edi-0x42b8d4f4],0x4c
  4224e0:	bound  ebp,QWORD PTR [edx+0x2b5f83bb]
  4224e6:	dec    esi
  4224e7:	mov    ebp,0xb9e1691b
  4224ec:	clc    
  4224ed:	lahf   
  4224ee:	sti    
  4224ef:	xor    eax,0xb732ae99
  4224f4:	lods   al,BYTE PTR ds:[esi]
  4224f5:	xor    eax,0xab65bf68
  4224fa:	and    DWORD PTR [ecx],0xc
  4224fd:	(bad)  
  4224fe:	clc    
  4224ff:	les    ebp,FWORD PTR gs:[edx]
  422502:	out    0xef,al
  422504:	sbb    al,0xcd
  422506:	add    DWORD PTR [esi],eax
  422508:	xor    esi,DWORD PTR [esi]
  42250a:	loope  0x422583
  42250c:	dec    bx
  42250e:	mov    ch,0x60
  422510:	dec    edx
  422511:	cmp    ax,0x202f
  422515:	scas   al,BYTE PTR es:[edi]
  422516:	iret   
  422517:	inc    edx
  422518:	repnz fistp DWORD PTR [ecx-0x1d]
  42251c:	mov    ds:0xc500d8f0,eax
  422521:	mov    esp,0x7dad4ed2
  422526:	shl    al,1
  422528:	repnz gs dec edi
  42252b:	mov    ecx,0x77312522
  422530:	inc    ebx
  422531:	pop    ss
  422532:	retf   0x56ff
  422535:	jl     0x4224da
  422537:	sub    bh,al
  422539:	unpcklps xmm1,XMMWORD PTR [eax]
  42253c:	add    bl,BYTE PTR [edi]
  42253e:	mov    dh,0x17
  422540:	gs out 0x60,al
  422543:	leave  
  422544:	jno    0x4224d0
  422546:	inc    ebx
  422547:	test   DWORD PTR [esp+ecx*1-0x52],0xc82213e6
  42254f:	rcr    ch,0x1e
  422552:	cmp    bl,BYTE PTR [ebx]
  422554:	gs call 0xfed293f1
  42255a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42255b:	mul    BYTE PTR [edx]
  42255d:	inc    esp
  42255e:	adc    dl,0x95
  422561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422562:	ret    
  422563:	add    esp,ecx
  422565:	inc    esi
  422566:	mov    bl,al
  422568:	sbb    ebx,esp
  42256a:	arpl   cx,sp
  42256c:	xor    al,0x1
  42256e:	call   0x82d:0x1b90a52d
  422575:	lock dec edx
  422577:	jmp    0x4225b0
  422579:	pop    ebp
  42257a:	ds jp  0x422506
  42257d:	loope  0x422529
  42257f:	sbb    ch,BYTE PTR cs:[eax]
  422582:	test   BYTE PTR [esi-0x3791b8fa],dl
  422588:	data16 cmp BYTE PTR [ebp-0x49],0x18
  42258d:	imul   esp,DWORD PTR [ebx+0x7cb4703f],0xffffffc4
  422594:	(bad)  
  422595:	in     eax,0x1f
  422597:	imul   ecx,DWORD PTR [edx+0x68],0xffffffaa
  42259b:	inc    esi
  42259c:	loop   0x4225c9
  42259e:	pop    esp
  42259f:	scas   eax,DWORD PTR es:[edi]
  4225a0:	into   
  4225a1:	ror    DWORD PTR [ebx],0x5d
  4225a4:	inc    esi
  4225a5:	jo     0x4225e3
  4225a7:	inc    al
  4225a9:	rol    al,0xc0
  4225ac:	rol    al,0xc0
  4225af:	rol    al,0xc0
  4225b2:	rol    al,0xc0
  4225b5:	rol    al,0xc0
  4225b8:	rol    al,0xc0
  4225bb:	rol    al,0xc0
  4225be:	rol    al,0xe7
  4225c1:	or     eax,0x456904d8
  4225c6:	jne    0x422596
  4225c8:	sbb    DWORD PTR [esi+esi*2+0x55],ebx
  4225cc:	sub    al,0x5d
  4225ce:	add    esi,ecx
  4225d0:	int    0xd7
  4225d2:	mov    ah,0xcd
  4225d4:	and    cl,BYTE PTR [eax-0x57a5796b]
  4225da:	inc    eax
  4225db:	add    ah,dl
  4225dd:	xchg   ebx,eax
  4225de:	sbb    ah,BYTE PTR [edi-0x5936c5ab]
  4225e4:	xor    ah,dl
  4225e6:	mov    DWORD PTR [eax],esi
  4225e8:	sub    al,BYTE PTR [ecx-0x20b287c6]
  4225ee:	pop    ds
  4225ef:	jno    0x422641
  4225f1:	ss xchg esi,eax
  4225f3:	adc    al,ah
  4225f5:	adc    ch,ch
  4225f7:	or     eax,0x3c15ea10
  4225fc:	push   ebp
  4225fd:	cld    
  4225fe:	ficomp DWORD PTR [esi-0x30]
  422601:	fdiv   DWORD PTR [ebp-0x79d02430]
  422607:	pop    ss
  422608:	test   eax,0xd599666d
  42260d:	inc    ebp
  42260e:	mov    ah,0x6
  422610:	push   eax
  422611:	dec    esi
  422612:	adc    DWORD PTR [ebx+0x30],ebp
  422615:	je     0x422644
  422617:	sub    DWORD PTR [ebx],0xffffffd2
  42261a:	popf   
  42261b:	in     al,0xbe
  42261d:	or     esi,eax
  42261f:	mov    al,0xb9
  422621:	add    ebx,ebx
  422623:	inc    edx
  422624:	dec    esi
  422625:	pop    ebp
  422626:	push   ebp
  422627:	(bad)  
  422628:	xor    DWORD PTR [eax+edx*8+0xc],ebx
  42262c:	(bad)  
  42262e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262f:	cmp    edi,DWORD PTR [eax]
  422631:	shl    BYTE PTR [ecx+eax*1-0x5e],cl
  422635:	jle    0x422633
  422637:	sub    esp,edx
  422639:	repz sub BYTE PTR [ecx-0x46],dh
  42263d:	mov    eax,0x3240d827
  422642:	xchg   BYTE PTR [eax],bh
  422644:	out    0x45,al
  422646:	jbe    0x422656
  422648:	sti    
  422649:	stos   BYTE PTR es:[edi],al
  42264a:	jne    0x4226a6
  42264c:	pop    esi
  42264d:	clc    
  42264e:	int3   
  42264f:	imul   ebx,DWORD PTR [esi+0x1c941465],0x43f36de5
  422659:	out    0xe9,eax
  42265b:	dec    ecx
  42265c:	(bad)  
  42265d:	cmp    al,0x81
  42265f:	and    esp,ecx
  422661:	ret    0x1788
  422664:	push   ss
  422665:	int3   
  422666:	(bad)  
  422667:	and    BYTE PTR [eax+ebx*8-0x61],cl
  42266b:	jmp    0xdc27:0x3cf10d6
  422672:	cld    
  422673:	jae    0x4226c5
  422675:	cmovne ebx,DWORD PTR [esi]
  422678:	xor    eax,esi
  42267a:	push   ss
  42267b:	adc    DWORD PTR [edi],ebx
  42267d:	fstp   QWORD PTR [ebx-0x656607e0]
  422683:	push   0xffffffd1
  422685:	fmul   DWORD PTR [ebx]
  422687:	scas   al,BYTE PTR es:[edi]
  422688:	jns    0x42261c
  42268a:	ror    DWORD PTR [eax+0x7d977f5e],0x39
  422691:	test   BYTE PTR [ebx],dl
  422693:	stos   BYTE PTR es:[edi],al
  422694:	xchg   edx,eax
  422695:	ja     0x422635
  422697:	icebp  
  422698:	aas    
  422699:	push   ds
  42269a:	scas   al,BYTE PTR es:[edi]
  42269b:	cld    
  42269c:	jle    0x422631
  42269e:	jl     0x4226ff
  4226a0:	call   0x5a2b:0x43e98dd9
  4226a7:	dec    edi
  4226a8:	mov    eax,ds:0x57620359
  4226ad:	pop    esp
  4226ae:	cmp    BYTE PTR [edi+0x218d2b66],al
  4226b4:	push   ss
  4226b5:	pop    ss
  4226b6:	adc    DWORD PTR [edi+0x3a],ebx
  4226b9:	std    
  4226ba:	or     cl,BYTE PTR [ebx-0x20109f2a]
  4226c0:	and    ecx,DWORD PTR [ebx+0x392709c8]
  4226c6:	call   0x2f3c:0x92bc202d
  4226cd:	add    al,0xa1
  4226cf:	dec    esi
  4226d0:	push   0x2f
  4226d2:	dec    eax
  4226d3:	in     al,0x77
  4226d5:	xchg   edx,eax
  4226d6:	fwait
  4226d7:	mov    ebp,0x5594fb4a
  4226dc:	xor    bl,bh
  4226de:	xor    DWORD PTR [eax],ebx
  4226e0:	or     bl,BYTE PTR [eax+0x2ff271e4]
  4226e6:	mov    al,0xcc
  4226e8:	mov    eax,ds:0x143a9957
  4226ed:	int    0xfd
  4226ef:	fadd   DWORD PTR [ecx+0x6f587fef]
  4226f5:	dec    edx
  4226f6:	push   ecx
  4226f7:	jecxz  0x4226df
  4226f9:	mov    eax,ds:0x43ae6487
  4226fe:	adc    DWORD PTR [edi+ebx*4],ecx
  422701:	cld    
  422702:	aad    0x31
  422704:	adc    al,0xbb
  422706:	(bad)  
  422707:	cmp    eax,0x1a9a4ea4
  42270c:	mov    esi,0xbfab5140
  422711:	xlat   BYTE PTR ds:[ebx]
  422712:	dec    ecx
  422713:	adc    eax,0xe8fe7aa5
  422718:	add    eax,0x513dff2b
  42271d:	lock fbld TBYTE PTR [ecx]
  422720:	push   edx
  422721:	adc    BYTE PTR [edi],0x61
  422724:	je     0x4226e2
  422726:	mov    ch,0x2a
  422728:	out    dx,eax
  422729:	xor    al,0xb7
  42272b:	pop    eax
  42272c:	push   ebx
  42272d:	sub    ah,ah
  42272f:	int    0x46
  422731:	les    edx,FWORD PTR ss:[ebp+0x4f421a89]
  422738:	and    eax,0x71ca7c74
  42273d:	inc    edx
  42273e:	xchg   esp,eax
  42273f:	sbb    al,0xf7
  422741:	imul   ecx,DWORD PTR [ebx+edx*4],0x2b
  422745:	stos   DWORD PTR es:[edi],eax
  422746:	mov    al,ds:0xf5e1fa19
  42274b:	fcmovbe st,st(6)
  42274d:	pop    esp
  42274e:	dec    ebx
  42274f:	and    al,0x5e
  422751:	push   ss
  422752:	xor    eax,0xc26d3e0f
  422757:	push   0xa4ce3b26
  42275c:	clc    
  42275d:	cwde   
  42275e:	pop    edx
  42275f:	mov    al,BYTE PTR [esi]
  422761:	pop    esp
  422762:	pushf  
  422763:	cdq    
  422764:	sub    bl,BYTE PTR [esp+edx*1]
  422767:	xchg   ebx,eax
  422768:	xchg   ebx,eax
  422769:	add    bl,ch
  42276b:	add    eax,edx
  42276d:	loopne 0x4227aa
  42276f:	xchg   esi,eax
  422770:	ja     0x422721
  422772:	out    dx,eax
  422773:	fldenv [ecx-0x2c831e98]
  422779:	aas    
  42277a:	or     al,0x2b
  42277c:	xor    al,0x39
  42277e:	pop    ds
  42277f:	mov    esi,0x4d5fb4e0
  422784:	mov    esi,0x5d159420
  422789:	xchg   esp,eax
  42278a:	jmp    0x437:0x28ea7b9c
  422791:	mov    ecx,0xc9113293
  422796:	mov    ecx,0x2e681874
  42279b:	xchg   edi,ebx
  42279d:	pushf  
  42279e:	push   es
  42279f:	inc    ebx
  4227a0:	pop    esp
  4227a1:	sub    al,0x61
  4227a3:	push   cs
  4227a4:	cdq    
  4227a5:	adc    eax,0x1289279
  4227aa:	test   ah,ch
  4227ac:	dec    edx
  4227ad:	push   edi
  4227ae:	mov    esp,0xb4c182b0
  4227b3:	or     DWORD PTR [eax+0x2d],0x3191c545
  4227ba:	jbe    0x4227f9
  4227bc:	jecxz  0x422791
  4227be:	push   0xffffff9a
  4227c0:	ret    
  4227c1:	out    dx,al
  4227c2:	ja     0x42281a
  4227c4:	movd   mm3,DWORD PTR ds:0x76ff6ca2
  4227cb:	jno    0x422794
  4227cd:	std    
  4227ce:	jg     0x422774
  4227d0:	(bad)  
  4227d2:	xchg   edi,eax
  4227d3:	in     eax,dx
  4227d4:	pop    edi
  4227d5:	pop    edx
  4227d6:	in     eax,dx
  4227d7:	mov    ds:0xf4161a7e,eax
  4227dc:	and    BYTE PTR [eax],bl
  4227de:	add    eax,0xdd876e41
  4227e3:	ins    BYTE PTR es:[edi],dx
  4227e4:	bound  edx,QWORD PTR [esi+esi*8+0x22]
  4227e8:	(bad)  
  4227e9:	stos   DWORD PTR es:[edi],eax
  4227ea:	(bad)  
  4227eb:	jecxz  0x42278c
  4227ed:	xchg   edi,eax
  4227ee:	nop
  4227ef:	repnz adc DWORD PTR gs:[edx-0x66],0x4
  4227f5:	cs push 0xffffffe5
  4227f8:	mov    al,0x9d
  4227fa:	popa   
  4227fb:	test   BYTE PTR [eax],ah
  4227fd:	jns    0x4227a9
  4227ff:	pop    ds
  422800:	dec    esp
  422801:	(bad)  
  422803:	fwait
  422804:	pop    esi
  422805:	icebp  
  422806:	cwde   
  422807:	inc    ebp
  422808:	mov    eax,0x9d83041e
  42280d:	cmp    DWORD PTR [ebx],esi
  42280f:	imul   ebp,DWORD PTR [edx-0x59],0xad95a6a0
  422816:	cwde   
  422817:	stc    
  422818:	push   eax
  422819:	cwde   
  42281a:	mov    eax,ecx
  42281c:	sar    DWORD PTR [ebp-0x6b],cl
  42281f:	popa   
  422820:	adc    ecx,edi
  422822:	jne    0x42280d
  422824:	xor    eax,0x24fb10db
  422829:	call   0xd3c5:0x33f5816f
  422830:	daa    
  422831:	shr    BYTE PTR [edx+0x33062a89],cl
  422837:	(bad)  
  422838:	push   cs
  422839:	cmp    dl,cl
  42283b:	push   edi
  42283c:	in     eax,0x8d
  42283e:	xchg   edx,eax
  42283f:	and    BYTE PTR [esi-0xd],dh
  422842:	lahf   
  422843:	jge    0x42287b
  422845:	sub    eax,0x8bf331b6
  42284a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42284b:	movd   DWORD PTR [eax*1+0x1a2ef66e],mm6
  422853:	jg     0x4228bb
  422855:	push   edi
  422856:	repz es xor eax,0x2aac5500
  42285d:	aaa    
  42285e:	push   ecx
  42285f:	cmp    al,0x29
  422861:	jecxz  0x42286c
  422863:	push   ebp
  422864:	fcomip st,st(6)
  422866:	scas   al,BYTE PTR es:[edi]
  422867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422868:	test   dh,ch
  42286a:	test   eax,0x392ead55
  42286f:	sub    eax,0x4d16fd2
  422874:	stos   BYTE PTR es:[edi],al
  422875:	popa   
  422876:	outs   dx,BYTE PTR ds:[esi]
  422877:	add    DWORD PTR [edi],edi
  422879:	outs   dx,DWORD PTR ds:[esi]
  42287a:	add    ebp,ebp
  42287c:	stos   BYTE PTR es:[edi],al
  42287d:	push   esi
  42287e:	mov    al,0x7
  422880:	xor    ebx,edi
  422882:	push   ss
  422883:	adc    BYTE PTR [esi],bh
  422885:	fisttp QWORD PTR [eax-0x30d9ed0]
  42288b:	jl     0x4228a6
  42288d:	imul   ecx,DWORD PTR [edi+0x11],0x1a7246f9
  422894:	push   edx
  422895:	pusha  
  422896:	mov    dl,0x7f
  422898:	loopne 0x422915
  42289a:	clc    
  42289b:	and    esp,0x5dd39a28
  4228a1:	int3   
  4228a2:	jp     0x422836
  4228a4:	adc    ah,BYTE PTR [ebx-0x80]
  4228a7:	inc    edi
  4228a8:	mov    edi,?
  4228aa:	cld    
  4228ab:	fcomip st,st(1)
  4228ad:	push   ebx
  4228ae:	inc    esi
  4228af:	mov    dh,0x4
  4228b1:	add    bh,BYTE PTR [ebx]
  4228b3:	xchg   ebp,eax
  4228b4:	push   esp
  4228b5:	pop    ecx
  4228b6:	mov    DWORD PTR [ebx-0x67],ebx
  4228b9:	pop    edx
  4228ba:	xchg   cl,dh
  4228bc:	pop    ebp
  4228bd:	ins    BYTE PTR es:[edi],dx
  4228be:	and    eax,0x9a3dd470
  4228c3:	mov    cl,0x87
  4228c5:	dec    eax
  4228c6:	repz add eax,0x9ac14981
  4228cc:	loopne 0x4228ce
  4228ce:	or     dh,dl
  4228d0:	mov    ecx,0xb759bb46
  4228d5:	out    dx,al
  4228d6:	jmp    0x42287b
  4228d8:	pop    es
  4228d9:	push   ebx
  4228da:	(bad)  
  4228db:	xchg   edx,eax
  4228dc:	bound  edi,QWORD PTR fs:[edx]
  4228df:	cli    
  4228e0:	rcl    BYTE PTR [eax+ebx*4+0x4e3d4ba2],0xee
  4228e8:	into   
  4228e9:	xor    al,BYTE PTR [edi]
  4228eb:	test   al,0x5d
  4228ed:	das    
  4228ee:	push   edx
  4228ef:	arpl   WORD PTR gs:[ebp-0x31],dx
  4228f3:	jp     0x4228d6
  4228f5:	adc    ch,ch
  4228f7:	lahf   
  4228f8:	pop    ecx
  4228f9:	les    edx,FWORD PTR [edi-0x41c4a067]
  4228ff:	loop   0x422905
  422901:	pusha  
  422902:	stos   DWORD PTR es:[edi],eax
  422903:	ins    BYTE PTR es:[edi],dx
  422904:	cld    
  422905:	xchg   esi,eax
  422907:	iret   
  422908:	dec    esp
  422909:	repz sbb BYTE PTR ds:[esi+ecx*2],al
  42290e:	aam    0x31
  422910:	stos   DWORD PTR es:[edi],eax
  422911:	lahf   
  422912:	outs   dx,BYTE PTR ds:[esi]
  422913:	adc    al,0x91
  422915:	or     al,0x92
  422917:	mov    bl,BYTE PTR [edx-0x6]
  42291a:	in     al,dx
  42291b:	(bad)  
  42291d:	repz inc edi
  42291f:	mov    dh,0x6d
  422921:	js     0x756b65fb
  422927:	pop    es
  422928:	fs inc esp
  42292a:	jmp    0x23c102a7
  42292f:	cmp    bh,BYTE PTR [ecx+0x58cb29d1]
  422935:	cmp    DWORD PTR [eax+0xc],esi
  422938:	loope  0x422963
  42293a:	inc    edi
  42293b:	inc    eax
  42293c:	lahf   
  42293d:	ret    0xa6
  422940:	scas   al,BYTE PTR es:[edi]
  422941:	stos   BYTE PTR es:[edi],al
  422942:	addr16 jbe 0x4229b9
  422945:	xchg   edx,eax
  422946:	mov    bl,0x2d
  422948:	gs stos DWORD PTR es:[edi],eax
  42294a:	mov    ebx,0xa9d23c19
  42294f:	test   BYTE PTR [ebp+0x7203e271],bh
  422955:	mov    ch,0xe2
  422957:	pop    ebx
  422958:	mov    eax,ds:0x1b7cb08a
  42295d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42295e:	in     eax,dx
  42295f:	aas    
  422960:	or     al,0xd2
  422962:	nop
  422963:	leave  
  422964:	iret   
  422965:	or     eax,0xdd76c539
  42296a:	pop    esp
  42296b:	jg     0x42291b
  42296d:	inc    ebp
  42296e:	xchg   esp,eax
  42296f:	adc    al,0xbe
  422971:	cmc    
  422972:	test   BYTE PTR [esi],dh
  422974:	sub    al,bl
  422976:	lods   eax,DWORD PTR ds:[esi]
  422977:	aaa    
  422978:	or     BYTE PTR [eax],0xfe
  42297b:	int3   
  42297c:	popa   
  42297d:	mov    edi,0x18e4ceac
  422982:	adc    BYTE PTR [ebx-0x4e],0xb9
  422986:	pop    edi
  422987:	xor    ecx,DWORD PTR [edx+0x1d]
  42298a:	imul   esp,DWORD PTR [ebp+0x14],0x1db79a38
  422991:	sub    eax,0xea3e319d
  422996:	push   0xffffffa8
  422998:	add    al,BYTE PTR [edi+0x3b84efa0]
  42299e:	sbb    eax,0x7d7a744d
  4229a3:	inc    edi
  4229a4:	dec    edx
  4229a5:	xor    BYTE PTR [edi+0x2b],0xf9
  4229a9:	in     al,dx
  4229aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ab:	ret    0x641f
  4229ae:	pushf  
  4229af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229b0:	mov    esi,DWORD PTR [esi]
  4229b2:	sub    ebp,ebx
  4229b4:	iret   
  4229b5:	push   0xffffffa7
  4229b7:	rcr    DWORD PTR [eax],1
  4229b9:	adc    al,0x8d
  4229bb:	dec    edx
  4229bc:	(bad)  
  4229bd:	int3   
  4229be:	out    dx,eax
  4229bf:	cmp    eax,0x9786bfd2
  4229c4:	cmp    al,0xd1
  4229c6:	ret    0x696b
  4229c9:	dec    edi
  4229ca:	lahf   
  4229cb:	loop   0x4229c5
  4229cd:	push   es
  4229ce:	mov    ch,0x91
  4229d0:	mov    al,0xd8
  4229d2:	push   esp
  4229d3:	jge    0x422a2a
  4229d5:	pop    eax
  4229d6:	jns    0x422a06
  4229d8:	push   eax
  4229d9:	cmc    
  4229da:	adc    al,0xff
  4229dc:	xchg   BYTE PTR ds:0x547e14de,al
  4229e2:	pop    esi
  4229e3:	mov    BYTE PTR [edx+eax*1-0x77e5d638],ch
  4229ea:	xor    BYTE PTR [edi+0x51],0xc
  4229ee:	mov    ecx,0xd026b3e6
  4229f3:	push   0xadb054b3
  4229f8:	mov    ebx,0x28125e0c
  4229fd:	or     DWORD PTR [edx-0x1c],esi
  422a00:	cwde   
  422a01:	ret    0xf789
  422a04:	fcmovbe st,st(1)
  422a06:	mov    edx,0xaeef388
  422a0b:	dec    eax
  422a0c:	lock add bh,BYTE PTR [eax+0x74be512e]
  422a13:	pop    eax
  422a14:	dec    ecx
  422a15:	pop    es
  422a16:	dec    ebx
  422a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a18:	ja     0x4229ac
  422a1a:	mov    cs,WORD PTR ds:0x75a02f0
  422a20:	add    DWORD PTR [ebp+0x125f01fa],ebx
  422a26:	enter  0x4835,0xff
  422a2a:	mov    WORD PTR [ebx],?
  422a2c:	jne    0x422a14
  422a2e:	sub    DWORD PTR [ecx+eiz*8],edx
  422a31:	add    dl,BYTE PTR [edi-0x69df2cf7]
  422a37:	lods   eax,DWORD PTR ds:[esi]
  422a38:	jo     0x422a7c
  422a3a:	ror    DWORD PTR [ebp+0x1bf801ff],0x61
  422a41:	psubusw mm0,QWORD PTR ds:0x5fb418d2
  422a48:	or     DWORD PTR [ecx+0xf],edx
  422a4b:	xchg   DWORD PTR [esp+ebp*4+0x1cbc6084],esp
  422a52:	mov    ecx,0xfd3c17c8
  422a57:	inc    edx
  422a58:	mov    ecx,0x49f0677d
  422a5d:	sbb    esi,edi
  422a5f:	out    0x93,al
  422a61:	xor    al,0xa0
  422a63:	sub    edx,ecx
  422a65:	enter  0xf57e,0xd
  422a69:	ret    
  422a6a:	fxch   st(3)
  422a6c:	fiadd  WORD PTR [eax-0x309160bd]
  422a72:	test   eax,0x849bb4cc
  422a77:	gs int3 
  422a79:	jl     0x422a16
  422a7b:	mov    ah,0xa6
  422a7d:	pop    esp
  422a7e:	dec    edi
  422a7f:	aaa    
  422a80:	mov    ch,0xc8
  422a82:	cwde   
  422a83:	jo     0x422a5f
  422a85:	sub    DWORD PTR [eax+0x67],ecx
  422a88:	adc    eax,0xd9f2e202
  422a8d:	mov    ch,0x99
  422a8f:	aam    0xb5
  422a91:	pop    eax
  422a92:	loop   0x422a58
  422a94:	fld    DWORD PTR [edx-0x7a7f2c58]
  422a9a:	sub    DWORD PTR [ebx],0x5b50eef2
  422aa0:	inc    ecx
  422aa1:	cdq    
  422aa2:	imul   eax,DWORD PTR [eax+0x3844f32f],0x60
  422aa9:	xchg   ebp,eax
  422aaa:	push   0xfd34ceea
  422aaf:	int    0xb3
  422ab1:	sub    eax,0x296049cb
  422ab6:	fnstenv [ecx-0x4b]
  422ab9:	jge    0x422a9d
  422abb:	neg    cl
  422abd:	add    BYTE PTR [edi-0x7e5d7f90],0x2b
  422ac4:	jmp    0xedcf:0x4d7ff5e8
  422acb:	adc    edx,DWORD PTR [eax+edi*4]
  422ace:	pop    ds
  422acf:	sbb    DWORD PTR [esi],esi
  422ad1:	xor    bl,BYTE PTR [edx+0x21]
  422ad4:	dec    edx
  422ad5:	jb     0x422b10
  422ad7:	test   al,0xe0
  422ad9:	or     eax,0x144b7a6f
  422ade:	cdq    
  422adf:	mov    ebp,0xe5e21c95
  422ae4:	fld    DWORD PTR [edx-0x157ec7fc]
  422aea:	mov    edi,0xb28f5e87
  422aef:	xlat   BYTE PTR ds:[ebx]
  422af0:	das    
  422af1:	fist   WORD PTR [ecx]
  422af3:	sbb    DWORD PTR [eax+0x303e29fa],ebx
  422af9:	push   ebx
  422afa:	pextrw esp,(bad),0xc5
  422afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422afd:	sbb    eax,0x9c6139a0
  422b02:	sub    edx,0x57
  422b05:	sub    BYTE PTR [edx],dl
  422b07:	test   al,0x30
  422b09:	push   ds
  422b0a:	push   ss
  422b0b:	fidiv  DWORD PTR [ecx+0x615faeda]
  422b11:	ins    BYTE PTR es:[edi],dx
  422b12:	popf   
  422b13:	sub    al,0x3e
  422b15:	ss mov esi,0xbcd129ae
  422b1b:	or     eax,0x21724215
  422b20:	loope  0x422b08
  422b22:	ins    BYTE PTR es:[edi],dx
  422b23:	(bad)  
  422b25:	and    al,BYTE PTR [esi+0xf8edc2f]
  422b2b:	add    DWORD PTR [edx+edx*1-0x67],esi
  422b2f:	(bad)  
  422b31:	iret   
  422b32:	xchg   esp,eax
  422b33:	ss mov esi,0xfb2c3249
  422b39:	push   es
  422b3a:	adc    BYTE PTR [eax],ch
  422b3c:	pop    es
  422b3d:	push   es
  422b3e:	test   al,0xef
  422b40:	push   esi
  422b41:	jbe    0x422b19
  422b43:	int3   
  422b44:	push   edi
  422b45:	inc    ebp
  422b46:	and    dh,BYTE PTR [edx+0x36a63cb1]
  422b4c:	scas   al,BYTE PTR es:[edi]
  422b4d:	.byte 0x84
  422b4e:	.byte 0x35
  422b4f:	ss
  422b50:	.byte 0x19
